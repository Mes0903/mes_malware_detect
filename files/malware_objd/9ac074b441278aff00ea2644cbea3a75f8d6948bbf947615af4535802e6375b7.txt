
9ac074b441278aff00ea2644cbea3a75f8d6948bbf947615af4535802e6375b7.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    DWORD PTR [ecx],0x64025304
64001006:	jmp    0x6401237b
6400100b:	int3   
6400100c:	int3   
6400100d:	int3   
6400100e:	int3   
6400100f:	int3   
64001010:	push   esi
64001011:	mov    esi,ecx
64001013:	mov    DWORD PTR [esi],0x64025304
64001019:	call   0x6401237b
6400101e:	test   BYTE PTR [esp+0x8],0x1
64001023:	je     0x6400102e
64001025:	push   esi
64001026:	call   0x64012262
6400102b:	add    esp,0x4
6400102e:	mov    eax,esi
64001030:	pop    esi
64001031:	ret    0x4
64001034:	int3   
64001035:	int3   
64001036:	int3   
64001037:	int3   
64001038:	int3   
64001039:	int3   
6400103a:	int3   
6400103b:	int3   
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x6402aaec
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x640126ab
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	push   ecx
64001061:	push   ebx
64001062:	push   esi
64001063:	push   edi
64001064:	push   0x2710
64001069:	call   DWORD PTR ds:0x64025050
6400106f:	mov    esi,DWORD PTR [esp+0x14]
64001073:	mov    ebx,DWORD PTR ds:0x64025088
64001079:	mov    DWORD PTR [esp+0xc],0x0
64001081:	xor    edi,edi
64001083:	push   0x0
64001085:	lea    eax,[esp+0x18]
64001089:	push   eax
6400108a:	push   0x4
6400108c:	lea    ecx,[esp+0x18]
64001090:	push   ecx
64001091:	push   esi
64001092:	call   ebx
64001094:	test   eax,eax
64001096:	je     0x640010a0
64001098:	add    edi,0x1
6400109b:	cmp    edi,0xa
6400109e:	jne    0x64001083
640010a0:	test   esi,esi
640010a2:	je     0x640010ba
640010a4:	call   DWORD PTR ds:0x64025044
640010aa:	push   esi
640010ab:	mov    edi,eax
640010ad:	call   DWORD PTR ds:0x64025040
640010b3:	push   edi
640010b4:	call   DWORD PTR ds:0x64025060
640010ba:	pop    edi
640010bb:	pop    esi
640010bc:	xor    eax,eax
640010be:	pop    ebx
640010bf:	pop    ecx
640010c0:	ret    0x4
640010c3:	int3   
640010c4:	int3   
640010c5:	int3   
640010c6:	int3   
640010c7:	int3   
640010c8:	int3   
640010c9:	int3   
640010ca:	int3   
640010cb:	int3   
640010cc:	int3   
640010cd:	int3   
640010ce:	int3   
640010cf:	int3   
640010d0:	sub    esp,0x14
640010d3:	push   ebx
640010d4:	mov    ebx,DWORD PTR ds:0x64025048
640010da:	push   esi
640010db:	mov    esi,DWORD PTR [esp+0x20]
640010df:	push   edi
640010e0:	mov    edi,DWORD PTR [esi+0xc]
640010e3:	push   0x2
640010e5:	push   0x0
640010e7:	push   0x0
640010e9:	lea    eax,[esp+0x18]
640010ed:	push   eax
640010ee:	mov    DWORD PTR [esp+0x1c],0x0
640010f6:	call   ebx
640010f8:	push   eax
640010f9:	push   edi
640010fa:	call   ebx
640010fc:	push   eax
640010fd:	call   DWORD PTR ds:0x6402507c
64001103:	test   eax,eax
64001105:	je     0x64001199
6400110b:	mov    ecx,DWORD PTR [esp+0xc]
6400110f:	push   0x0
64001111:	push   0x0
64001113:	push   ecx
64001114:	push   0x64001060
64001119:	push   0x0
6400111b:	push   0x0
6400111d:	call   DWORD PTR ds:0x64025070
64001123:	push   0x0
64001125:	lea    edx,[esp+0x18]
64001129:	push   edx
6400112a:	push   0x4
6400112c:	mov    edi,eax
6400112e:	mov    eax,DWORD PTR [esi+0x8]
64001131:	lea    ecx,[esp+0x30]
64001135:	push   ecx
64001136:	push   eax
64001137:	mov    DWORD PTR [esp+0x24],edi
6400113b:	mov    DWORD PTR [esp+0x38],0x0
64001143:	call   DWORD PTR ds:0x6402508c
64001149:	test   eax,eax
6400114b:	je     0x6400117f
6400114d:	cmp    DWORD PTR [esp+0x14],0x4
64001152:	jne    0x6400117f
64001154:	mov    edx,DWORD PTR [esp+0x24]
64001158:	mov    eax,DWORD PTR [esi+0x4]
6400115b:	push   0x0
6400115d:	lea    ecx,[esp+0x20]
64001161:	push   ecx
64001162:	mov    DWORD PTR [esp+0x20],edx
64001166:	push   0x4
64001168:	lea    edx,[esp+0x24]
6400116c:	push   edx
6400116d:	push   eax
6400116e:	call   DWORD PTR ds:0x64025088
64001174:	lea    ecx,[esp+0x10]
64001178:	call   0x64001680
6400117d:	jmp    0x64001199
6400117f:	test   edi,edi
64001181:	je     0x64001199
64001183:	call   DWORD PTR ds:0x64025044
64001189:	push   edi
6400118a:	mov    ebx,eax
6400118c:	call   DWORD PTR ds:0x64025040
64001192:	push   ebx
64001193:	call   DWORD PTR ds:0x64025060
64001199:	call   0x640016d0
6400119e:	push   esi
6400119f:	call   0x64012262
640011a4:	add    esp,0x4
640011a7:	pop    edi
640011a8:	pop    esi
640011a9:	xor    eax,eax
640011ab:	pop    ebx
640011ac:	add    esp,0x14
640011af:	ret    0x4
640011b2:	int3   
640011b3:	int3   
640011b4:	int3   
640011b5:	int3   
640011b6:	int3   
640011b7:	int3   
640011b8:	int3   
640011b9:	int3   
640011ba:	int3   
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   0xffffffff
640011c2:	push   0x64022919
640011c7:	mov    eax,fs:0x0
640011cd:	push   eax
640011ce:	sub    esp,0x30
640011d1:	mov    eax,ds:0x6402d09c
640011d6:	xor    eax,esp
640011d8:	mov    DWORD PTR [esp+0x2c],eax
640011dc:	push   ebx
640011dd:	push   ebp
640011de:	push   esi
640011df:	push   edi
640011e0:	mov    eax,ds:0x6402d09c
640011e5:	xor    eax,esp
640011e7:	push   eax
640011e8:	lea    eax,[esp+0x44]
640011ec:	mov    fs:0x0,eax
640011f2:	mov    esi,ecx
640011f4:	xor    ebx,ebx
640011f6:	mov    DWORD PTR [esp+0x1c],ebx
640011fa:	mov    edi,edx
640011fc:	mov    DWORD PTR [esi+0x18],0xf
64001203:	mov    DWORD PTR [esi+0x14],ebx
64001206:	mov    DWORD PTR [esp+0x20],esi
6400120a:	mov    DWORD PTR [esp+0x18],edi
6400120e:	mov    BYTE PTR [esi+0x4],bl
64001211:	mov    DWORD PTR [esp+0x4c],ebx
64001215:	mov    ebp,0x1
6400121a:	mov    DWORD PTR [esp+0x1c],ebp
6400121e:	call   DWORD PTR ds:0x64025084
64001224:	xor    ecx,ecx
64001226:	cmp    ecx,ebx
64001228:	jle    0x64001237
6400122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6400122f:	jne    0x64001237
64001231:	cmp    WORD PTR [eax+ecx*2],bx
64001235:	je     0x6400123b
64001237:	add    ecx,ebp
64001239:	jmp    0x64001226
6400123b:	add    ecx,ecx
6400123d:	push   ecx
6400123e:	push   eax
6400123f:	lea    ecx,[esp+0x2c]
64001243:	mov    DWORD PTR [esp+0x44],0xf
6400124b:	mov    DWORD PTR [esp+0x40],ebx
6400124f:	mov    BYTE PTR [esp+0x30],bl
64001253:	call   0x64001860
64001258:	push   ebx
64001259:	lea    edx,[esp+0x28]
6400125d:	push   edx
6400125e:	or     eax,0xffffffff
64001261:	mov    DWORD PTR [esp+0x54],ebp
64001265:	call   0x640019d0
6400126a:	mov    BYTE PTR [esp+0x4c],bl
6400126e:	cmp    DWORD PTR [esp+0x3c],0x10
64001273:	jb     0x64001282
64001275:	mov    eax,DWORD PTR [esp+0x28]
64001279:	push   eax
6400127a:	call   0x64012262
6400127f:	add    esp,0x4
64001282:	mov    edx,DWORD PTR ds:0x6402e540
64001288:	mov    eax,DWORD PTR [edx+0xc]
6400128b:	mov    ecx,0x6402e540
64001290:	call   eax
64001292:	add    eax,0x10
64001295:	mov    DWORD PTR [esp+0x14],eax
64001299:	mov    DWORD PTR [esp+0x4c],0x2
640012a1:	mov    eax,DWORD PTR [edi]
640012a3:	push   eax
640012a4:	lea    ecx,[esp+0x18]
640012a8:	push   0x640276cc
640012ad:	push   ecx
640012ae:	call   0x64001d40
640012b3:	mov    edi,DWORD PTR [esp+0x20]
640012b7:	mov    ebp,DWORD PTR [edi-0xc]
640012ba:	add    esp,0xc
640012bd:	cmp    DWORD PTR [edi-0x4],0x1
640012c1:	jle    0x640012d3
640012c3:	mov    edx,ebp
640012c5:	push   edx
640012c6:	lea    ecx,[esp+0x18]
640012ca:	call   0x64001950
640012cf:	mov    edi,DWORD PTR [esp+0x14]
640012d3:	lea    eax,[ebp+ebp*1+0x2]
640012d7:	push   eax
640012d8:	push   edi
640012d9:	lea    ecx,[esp+0x2c]
640012dd:	mov    DWORD PTR [esp+0x44],0xf
640012e5:	mov    DWORD PTR [esp+0x40],ebx
640012e9:	mov    BYTE PTR [esp+0x30],bl
640012ed:	call   0x64001860
640012f2:	push   ebx
640012f3:	lea    ecx,[esp+0x28]
640012f7:	push   ecx
640012f8:	or     eax,0xffffffff
640012fb:	mov    BYTE PTR [esp+0x54],0x3
64001300:	call   0x640019d0
64001305:	cmp    DWORD PTR [esp+0x3c],0x10
6400130a:	jb     0x64001319
6400130c:	mov    edx,DWORD PTR [esp+0x28]
64001310:	push   edx
64001311:	call   0x64012262
64001316:	add    esp,0x4
64001319:	add    edi,0xfffffff0
6400131c:	mov    DWORD PTR [esp+0x3c],0xf
64001324:	mov    DWORD PTR [esp+0x38],ebx
64001328:	mov    BYTE PTR [esp+0x28],bl
6400132c:	mov    BYTE PTR [esp+0x4c],bl
64001330:	lea    eax,[edi+0xc]
64001333:	or     ecx,0xffffffff
64001336:	lock xadd DWORD PTR [eax],ecx
6400133a:	dec    ecx
6400133b:	test   ecx,ecx
6400133d:	jg     0x64001349
6400133f:	mov    ecx,DWORD PTR [edi]
64001341:	mov    edx,DWORD PTR [ecx]
64001343:	mov    eax,DWORD PTR [edx+0x4]
64001346:	push   edi
64001347:	call   eax
64001349:	mov    edx,DWORD PTR ds:0x6402e540
6400134f:	mov    eax,DWORD PTR [edx+0xc]
64001352:	mov    ecx,0x6402e540
64001357:	call   eax
64001359:	add    eax,0x10
6400135c:	mov    DWORD PTR [esp+0x14],eax
64001360:	mov    ecx,DWORD PTR [esp+0x18]
64001364:	mov    DWORD PTR [esp+0x4c],0x4
6400136c:	mov    eax,DWORD PTR [ecx+0xc]
6400136f:	push   eax
64001370:	lea    edx,[esp+0x18]
64001374:	push   0x640276d8
64001379:	push   edx
6400137a:	call   0x64001d40
6400137f:	mov    edi,DWORD PTR [esp+0x20]
64001383:	mov    ebp,DWORD PTR [edi-0xc]
64001386:	add    esp,0xc
64001389:	cmp    DWORD PTR [edi-0x4],0x1
6400138d:	jle    0x6400139f
6400138f:	mov    eax,ebp
64001391:	push   eax
64001392:	lea    ecx,[esp+0x18]
64001396:	call   0x64001950
6400139b:	mov    edi,DWORD PTR [esp+0x14]
6400139f:	lea    ecx,[ebp+ebp*1+0x2]
640013a3:	push   ecx
640013a4:	push   edi
640013a5:	lea    ecx,[esp+0x2c]
640013a9:	mov    DWORD PTR [esp+0x44],0xf
640013b1:	mov    DWORD PTR [esp+0x40],ebx
640013b5:	mov    BYTE PTR [esp+0x30],bl
640013b9:	call   0x64001860
640013be:	push   ebx
640013bf:	lea    edx,[esp+0x28]
640013c3:	push   edx
640013c4:	or     eax,0xffffffff
640013c7:	mov    BYTE PTR [esp+0x54],0x5
640013cc:	call   0x640019d0
640013d1:	cmp    DWORD PTR [esp+0x3c],0x10
640013d6:	jb     0x640013e5
640013d8:	mov    eax,DWORD PTR [esp+0x28]
640013dc:	push   eax
640013dd:	call   0x64012262
640013e2:	add    esp,0x4
640013e5:	mov    ebp,0xf
640013ea:	add    edi,0xfffffff0
640013ed:	mov    DWORD PTR [esp+0x3c],ebp
640013f1:	mov    DWORD PTR [esp+0x38],ebx
640013f5:	mov    BYTE PTR [esp+0x28],bl
640013f9:	mov    BYTE PTR [esp+0x4c],bl
640013fd:	lea    ecx,[edi+0xc]
64001400:	or     edx,0xffffffff
64001403:	lock xadd DWORD PTR [ecx],edx
64001407:	dec    edx
64001408:	test   edx,edx
6400140a:	jg     0x64001416
6400140c:	mov    ecx,DWORD PTR [edi]
6400140e:	mov    eax,DWORD PTR [ecx]
64001410:	mov    edx,DWORD PTR [eax+0x4]
64001413:	push   edi
64001414:	call   edx
64001416:	push   0x2
64001418:	push   0x640276e4
6400141d:	lea    eax,[esp+0x30]
64001421:	push   ebp
64001422:	push   eax
64001423:	mov    DWORD PTR [esp+0x4c],ebp
64001427:	mov    DWORD PTR [esp+0x48],ebx
6400142b:	mov    BYTE PTR [esp+0x38],bl
6400142f:	call   0x64012418
64001434:	mov    eax,DWORD PTR [esp+0x38]
64001438:	mov    edi,0x10
6400143d:	add    esp,0x10
64001440:	cmp    DWORD PTR [esp+0x3c],edi
64001444:	mov    DWORD PTR [esp+0x38],0x2
6400144c:	jae    0x64001452
6400144e:	lea    eax,[esp+0x28]
64001452:	mov    BYTE PTR [eax+0x2],bl
64001455:	push   ebx
64001456:	lea    ecx,[esp+0x28]
6400145a:	push   ecx
6400145b:	or     eax,0xffffffff
6400145e:	mov    DWORD PTR [esp+0x54],0x6
64001466:	call   0x640019d0
6400146b:	cmp    DWORD PTR [esp+0x3c],edi
6400146f:	jb     0x6400147e
64001471:	mov    edx,DWORD PTR [esp+0x28]
64001475:	push   edx
64001476:	call   0x64012262
6400147b:	add    esp,0x4
6400147e:	mov    eax,esi
64001480:	mov    ecx,DWORD PTR [esp+0x44]
64001484:	mov    DWORD PTR fs:0x0,ecx
6400148b:	pop    ecx
6400148c:	pop    edi
6400148d:	pop    esi
6400148e:	pop    ebp
6400148f:	pop    ebx
64001490:	mov    ecx,DWORD PTR [esp+0x2c]
64001494:	xor    ecx,esp
64001496:	call   0x64012abc
6400149b:	add    esp,0x3c
6400149e:	ret    
6400149f:	int3   
640014a0:	push   0xffffffff
640014a2:	push   0x64022a88
640014a7:	mov    eax,fs:0x0
640014ad:	push   eax
640014ae:	sub    esp,0x24
640014b1:	push   ebx
640014b2:	push   ebp
640014b3:	push   esi
640014b4:	push   edi
640014b5:	mov    eax,ds:0x6402d09c
640014ba:	xor    eax,esp
640014bc:	push   eax
640014bd:	lea    eax,[esp+0x38]
640014c1:	mov    fs:0x0,eax
640014c7:	mov    eax,DWORD PTR [esp+0x48]
640014cb:	xor    edi,edi
640014cd:	push   0x10
640014cf:	mov    DWORD PTR [esp+0x28],eax
640014d3:	mov    DWORD PTR [esp+0x18],edi
640014d7:	call   0x64012641
640014dc:	add    esp,0x4
640014df:	cmp    eax,edi
640014e1:	je     0x640014f2
640014e3:	mov    DWORD PTR [eax],edi
640014e5:	mov    DWORD PTR [eax+0x4],edi
640014e8:	mov    DWORD PTR [eax+0x8],edi
640014eb:	mov    DWORD PTR [eax+0xc],edi
640014ee:	mov    esi,eax
640014f0:	jmp    0x640014f4
640014f2:	xor    esi,esi
640014f4:	mov    DWORD PTR [esp+0x34],esi
640014f8:	push   edi
640014f9:	lea    ecx,[esp+0x2c]
640014fd:	push   ecx
640014fe:	mov    DWORD PTR [esp+0x48],edi
64001502:	lea    edx,[esp+0x24]
64001506:	push   edx
64001507:	lea    eax,[esp+0x2c]
6400150b:	push   eax
6400150c:	mov    DWORD PTR [esp+0x38],0xc
64001514:	mov    DWORD PTR [esp+0x40],0x1
6400151c:	mov    DWORD PTR [esp+0x3c],edi
64001520:	mov    DWORD PTR [esp+0x30],edi
64001524:	mov    DWORD PTR [esp+0x2c],edi
64001528:	call   DWORD PTR ds:0x64025080
6400152e:	test   eax,eax
64001530:	mov    ebx,DWORD PTR ds:0x64025044
64001536:	mov    ebp,DWORD PTR ds:0x64025040
6400153c:	je     0x64001594
6400153e:	mov    edi,DWORD PTR [esi+0x8]
64001541:	test   edi,edi
64001543:	mov    ecx,DWORD PTR [esp+0x20]
64001547:	mov    DWORD PTR [esp+0x14],ecx
6400154b:	je     0x64001561
6400154d:	call   ebx
6400154f:	push   edi
64001550:	mov    DWORD PTR [esp+0x1c],eax
64001554:	call   ebp
64001556:	mov    edx,DWORD PTR [esp+0x18]
6400155a:	push   edx
6400155b:	call   DWORD PTR ds:0x64025060
64001561:	mov    eax,DWORD PTR [esp+0x14]
64001565:	mov    DWORD PTR [esi+0x8],eax
64001568:	mov    edi,DWORD PTR [esi+0xc]
6400156b:	test   edi,edi
6400156d:	mov    ecx,DWORD PTR [esp+0x1c]
64001571:	mov    DWORD PTR [esp+0x18],ecx
64001575:	je     0x6400158b
64001577:	call   ebx
64001579:	push   edi
6400157a:	mov    DWORD PTR [esp+0x18],eax
6400157e:	call   ebp
64001580:	mov    edx,DWORD PTR [esp+0x14]
64001584:	push   edx
64001585:	call   DWORD PTR ds:0x64025060
6400158b:	mov    eax,DWORD PTR [esp+0x18]
6400158f:	mov    DWORD PTR [esi+0xc],eax
64001592:	xor    edi,edi
64001594:	push   edi
64001595:	lea    ecx,[esp+0x2c]
64001599:	push   ecx
6400159a:	lea    edx,[esp+0x24]
6400159e:	push   edx
6400159f:	lea    eax,[esp+0x2c]
640015a3:	push   eax
640015a4:	call   DWORD PTR ds:0x64025080
640015aa:	test   eax,eax
640015ac:	je     0x64001602
640015ae:	mov    edi,DWORD PTR [esi]
640015b0:	test   edi,edi
640015b2:	mov    ecx,DWORD PTR [esp+0x20]
640015b6:	mov    DWORD PTR [esp+0x18],ecx
640015ba:	je     0x640015d0
640015bc:	call   ebx
640015be:	push   edi
640015bf:	mov    DWORD PTR [esp+0x18],eax
640015c3:	call   ebp
640015c5:	mov    edx,DWORD PTR [esp+0x14]
640015c9:	push   edx
640015ca:	call   DWORD PTR ds:0x64025060
640015d0:	mov    eax,DWORD PTR [esp+0x18]
640015d4:	mov    DWORD PTR [esi],eax
640015d6:	mov    edi,DWORD PTR [esi+0x4]
640015d9:	test   edi,edi
640015db:	mov    ecx,DWORD PTR [esp+0x1c]
640015df:	mov    DWORD PTR [esp+0x18],ecx
640015e3:	je     0x640015f9
640015e5:	call   ebx
640015e7:	push   edi
640015e8:	mov    DWORD PTR [esp+0x18],eax
640015ec:	call   ebp
640015ee:	mov    edx,DWORD PTR [esp+0x14]
640015f2:	push   edx
640015f3:	call   DWORD PTR ds:0x64025060
640015f9:	mov    eax,DWORD PTR [esp+0x18]
640015fd:	mov    DWORD PTR [esi+0x4],eax
64001600:	xor    edi,edi
64001602:	mov    ecx,DWORD PTR [esp+0x24]
64001606:	mov    edx,esi
64001608:	call   0x640011c0
6400160d:	push   edi
6400160e:	push   edi
6400160f:	push   esi
64001610:	push   0x640010d0
64001615:	push   edi
64001616:	push   edi
64001617:	call   DWORD PTR ds:0x64025070
6400161d:	mov    esi,eax
6400161f:	cmp    esi,edi
64001621:	je     0x64001631
64001623:	call   ebx
64001625:	push   esi
64001626:	mov    edi,eax
64001628:	call   ebp
6400162a:	push   edi
6400162b:	call   DWORD PTR ds:0x64025060
64001631:	mov    eax,DWORD PTR [esp+0x24]
64001635:	mov    ecx,DWORD PTR [esp+0x38]
64001639:	mov    DWORD PTR fs:0x0,ecx
64001640:	pop    ecx
64001641:	pop    edi
64001642:	pop    esi
64001643:	pop    ebp
64001644:	pop    ebx
64001645:	add    esp,0x30
64001648:	ret    
64001649:	int3   
6400164a:	int3   
6400164b:	int3   
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	push   esi
64001651:	mov    esi,ecx
64001653:	cmp    DWORD PTR [esi+0x18],0x10
64001657:	jb     0x64001665
64001659:	mov    eax,DWORD PTR [esi+0x4]
6400165c:	push   eax
6400165d:	call   0x64012262
64001662:	add    esp,0x4
64001665:	xor    eax,eax
64001667:	mov    DWORD PTR [esi+0x18],0xf
6400166e:	mov    DWORD PTR [esi+0x14],eax
64001671:	mov    BYTE PTR [esi+0x4],al
64001674:	pop    esi
64001675:	ret    
64001676:	int3   
64001677:	int3   
64001678:	int3   
64001679:	int3   
6400167a:	int3   
6400167b:	int3   
6400167c:	int3   
6400167d:	int3   
6400167e:	int3   
6400167f:	int3   
64001680:	push   esi
64001681:	mov    esi,ecx
64001683:	push   edi
64001684:	mov    edi,DWORD PTR [esi]
64001686:	test   edi,edi
64001688:	je     0x640016a2
6400168a:	push   ebx
6400168b:	call   DWORD PTR ds:0x64025044
64001691:	push   edi
64001692:	mov    ebx,eax
64001694:	call   DWORD PTR ds:0x64025040
6400169a:	push   ebx
6400169b:	call   DWORD PTR ds:0x64025060
640016a1:	pop    ebx
640016a2:	pop    edi
640016a3:	mov    DWORD PTR [esi],0x0
640016a9:	pop    esi
640016aa:	ret    
640016ab:	int3   
640016ac:	int3   
640016ad:	int3   
640016ae:	int3   
640016af:	int3   
640016b0:	push   esi
640016b1:	mov    esi,DWORD PTR [eax]
640016b3:	test   esi,esi
640016b5:	je     0x640016c5
640016b7:	call   0x640016d0
640016bc:	push   esi
640016bd:	call   0x64012262
640016c2:	add    esp,0x4
640016c5:	pop    esi
640016c6:	ret    
640016c7:	int3   
640016c8:	int3   
640016c9:	int3   
640016ca:	int3   
640016cb:	int3   
640016cc:	int3   
640016cd:	int3   
640016ce:	int3   
640016cf:	int3   
640016d0:	sub    esp,0x8
640016d3:	mov    eax,DWORD PTR [esi+0xc]
640016d6:	test   eax,eax
640016d8:	push   ebx
640016d9:	mov    ebx,DWORD PTR ds:0x64025040
640016df:	push   ebp
640016e0:	mov    ebp,DWORD PTR ds:0x64025060
640016e6:	push   edi
640016e7:	mov    edi,DWORD PTR ds:0x64025044
640016ed:	mov    DWORD PTR [esp+0xc],eax
640016f1:	je     0x64001707
640016f3:	call   edi
640016f5:	mov    DWORD PTR [esp+0x10],eax
640016f9:	mov    eax,DWORD PTR [esp+0xc]
640016fd:	push   eax
640016fe:	call   ebx
64001700:	mov    ecx,DWORD PTR [esp+0x10]
64001704:	push   ecx
64001705:	call   ebp
64001707:	mov    DWORD PTR [esi+0xc],0x0
6400170e:	mov    eax,DWORD PTR [esi+0x8]
64001711:	test   eax,eax
64001713:	mov    DWORD PTR [esp+0x10],eax
64001717:	je     0x6400172d
64001719:	call   edi
6400171b:	mov    edx,DWORD PTR [esp+0x10]
6400171f:	push   edx
64001720:	mov    DWORD PTR [esp+0x10],eax
64001724:	call   ebx
64001726:	mov    eax,DWORD PTR [esp+0xc]
6400172a:	push   eax
6400172b:	call   ebp
6400172d:	mov    DWORD PTR [esi+0x8],0x0
64001734:	mov    eax,DWORD PTR [esi+0x4]
64001737:	test   eax,eax
64001739:	mov    DWORD PTR [esp+0x10],eax
6400173d:	je     0x64001753
6400173f:	call   edi
64001741:	mov    ecx,DWORD PTR [esp+0x10]
64001745:	push   ecx
64001746:	mov    DWORD PTR [esp+0x10],eax
6400174a:	call   ebx
6400174c:	mov    edx,DWORD PTR [esp+0xc]
64001750:	push   edx
64001751:	call   ebp
64001753:	mov    DWORD PTR [esi+0x4],0x0
6400175a:	mov    eax,DWORD PTR [esi]
6400175c:	test   eax,eax
6400175e:	mov    DWORD PTR [esp+0x10],eax
64001762:	je     0x64001772
64001764:	call   edi
64001766:	mov    edi,eax
64001768:	mov    eax,DWORD PTR [esp+0x10]
6400176c:	push   eax
6400176d:	call   ebx
6400176f:	push   edi
64001770:	call   ebp
64001772:	pop    edi
64001773:	pop    ebp
64001774:	mov    DWORD PTR [esi],0x0
6400177a:	pop    ebx
6400177b:	add    esp,0x8
6400177e:	ret    
6400177f:	int3   
64001780:	push   ebx
64001781:	mov    ebx,DWORD PTR [esp+0x8]
64001785:	push   ebp
64001786:	mov    ebp,DWORD PTR [esp+0x10]
6400178a:	cmp    DWORD PTR [ebx+0x14],ebp
6400178d:	push   esi
6400178e:	push   edi
6400178f:	mov    esi,ecx
64001791:	jae    0x64001798
64001793:	call   0x6401221e
64001798:	mov    edi,DWORD PTR [ebx+0x14]
6400179b:	mov    eax,DWORD PTR [esp+0x1c]
6400179f:	sub    edi,ebp
640017a1:	cmp    eax,edi
640017a3:	jae    0x640017a7
640017a5:	mov    edi,eax
640017a7:	cmp    esi,ebx
640017a9:	jne    0x640017ca
640017ab:	push   0xffffffff
640017ad:	add    edi,ebp
640017af:	push   edi
640017b0:	mov    ecx,esi
640017b2:	call   0x64001ac0
640017b7:	push   ebp
640017b8:	push   0x0
640017ba:	mov    ecx,esi
640017bc:	call   0x64001ac0
640017c1:	pop    edi
640017c2:	mov    eax,esi
640017c4:	pop    esi
640017c5:	pop    ebp
640017c6:	pop    ebx
640017c7:	ret    0xc
640017ca:	cmp    edi,0xfffffffe
640017cd:	jbe    0x640017d4
640017cf:	call   0x640121df
640017d4:	mov    eax,DWORD PTR [esi+0x18]
640017d7:	cmp    eax,edi
640017d9:	jae    0x640017f6
640017db:	mov    eax,DWORD PTR [esi+0x14]
640017de:	push   eax
640017df:	push   edi
640017e0:	mov    ecx,esi
640017e2:	call   0x64001b60
640017e7:	test   edi,edi
640017e9:	jbe    0x64001851
640017eb:	cmp    DWORD PTR [ebx+0x18],0x10
640017ef:	jb     0x64001820
640017f1:	mov    edx,DWORD PTR [ebx+0x4]
640017f4:	jmp    0x64001823
640017f6:	test   edi,edi
640017f8:	jne    0x640017e9
640017fa:	cmp    eax,0x10
640017fd:	mov    DWORD PTR [esi+0x14],edi
64001800:	jb     0x64001811
64001802:	mov    eax,DWORD PTR [esi+0x4]
64001805:	pop    edi
64001806:	mov    BYTE PTR [eax],0x0
64001809:	mov    eax,esi
6400180b:	pop    esi
6400180c:	pop    ebp
6400180d:	pop    ebx
6400180e:	ret    0xc
64001811:	lea    eax,[esi+0x4]
64001814:	pop    edi
64001815:	mov    BYTE PTR [eax],0x0
64001818:	mov    eax,esi
6400181a:	pop    esi
6400181b:	pop    ebp
6400181c:	pop    ebx
6400181d:	ret    0xc
64001820:	lea    edx,[ebx+0x4]
64001823:	mov    ecx,DWORD PTR [esi+0x18]
64001826:	cmp    ecx,0x10
64001829:	lea    ebx,[esi+0x4]
6400182c:	jb     0x64001832
6400182e:	mov    eax,DWORD PTR [ebx]
64001830:	jmp    0x64001834
64001832:	mov    eax,ebx
64001834:	push   edi
64001835:	add    edx,ebp
64001837:	push   edx
64001838:	push   ecx
64001839:	push   eax
6400183a:	call   0x64012418
6400183f:	add    esp,0x10
64001842:	cmp    DWORD PTR [esi+0x18],0x10
64001846:	mov    DWORD PTR [esi+0x14],edi
64001849:	jb     0x6400184d
6400184b:	mov    ebx,DWORD PTR [ebx]
6400184d:	mov    BYTE PTR [ebx+edi*1],0x0
64001851:	pop    edi
64001852:	mov    eax,esi
64001854:	pop    esi
64001855:	pop    ebp
64001856:	pop    ebx
64001857:	ret    0xc
6400185a:	int3   
6400185b:	int3   
6400185c:	int3   
6400185d:	int3   
6400185e:	int3   
6400185f:	int3   
64001860:	push   ebx
64001861:	push   ebp
64001862:	push   esi
64001863:	mov    esi,ecx
64001865:	mov    ecx,DWORD PTR [esi+0x18]
64001868:	cmp    ecx,0x10
6400186b:	lea    ebx,[esi+0x4]
6400186e:	jb     0x64001874
64001870:	mov    eax,DWORD PTR [ebx]
64001872:	jmp    0x64001876
64001874:	mov    eax,ebx
64001876:	mov    ebp,DWORD PTR [esp+0x10]
6400187a:	cmp    ebp,eax
6400187c:	jb     0x640018af
6400187e:	cmp    ecx,0x10
64001881:	jb     0x64001887
64001883:	mov    eax,DWORD PTR [ebx]
64001885:	jmp    0x64001889
64001887:	mov    eax,ebx
64001889:	mov    edx,DWORD PTR [esi+0x14]
6400188c:	add    edx,eax
6400188e:	cmp    edx,ebp
64001890:	jbe    0x640018af
64001892:	cmp    ecx,0x10
64001895:	jb     0x64001899
64001897:	mov    ebx,DWORD PTR [ebx]
64001899:	mov    eax,DWORD PTR [esp+0x14]
6400189d:	push   eax
6400189e:	sub    ebp,ebx
640018a0:	push   ebp
640018a1:	push   esi
640018a2:	mov    ecx,esi
640018a4:	call   0x64001780
640018a9:	pop    esi
640018aa:	pop    ebp
640018ab:	pop    ebx
640018ac:	ret    0x8
640018af:	push   edi
640018b0:	mov    edi,DWORD PTR [esp+0x18]
640018b4:	cmp    edi,0xfffffffe
640018b7:	jbe    0x640018be
640018b9:	call   0x640121df
640018be:	mov    eax,DWORD PTR [esi+0x18]
640018c1:	cmp    eax,edi
640018c3:	jae    0x640018e1
640018c5:	mov    ecx,DWORD PTR [esi+0x14]
640018c8:	push   ecx
640018c9:	push   edi
640018ca:	mov    ecx,esi
640018cc:	call   0x64001b60
640018d1:	test   edi,edi
640018d3:	jbe    0x64001918
640018d5:	mov    ecx,DWORD PTR [esi+0x18]
640018d8:	cmp    ecx,0x10
640018db:	jb     0x640018fb
640018dd:	mov    eax,DWORD PTR [ebx]
640018df:	jmp    0x640018fd
640018e1:	test   edi,edi
640018e3:	jne    0x640018d3
640018e5:	cmp    eax,0x10
640018e8:	mov    DWORD PTR [esi+0x14],edi
640018eb:	jb     0x640018ef
640018ed:	mov    ebx,DWORD PTR [ebx]
640018ef:	pop    edi
640018f0:	mov    eax,esi
640018f2:	pop    esi
640018f3:	pop    ebp
640018f4:	mov    BYTE PTR [ebx],0x0
640018f7:	pop    ebx
640018f8:	ret    0x8
640018fb:	mov    eax,ebx
640018fd:	push   edi
640018fe:	push   ebp
640018ff:	push   ecx
64001900:	push   eax
64001901:	call   0x64012418
64001906:	add    esp,0x10
64001909:	cmp    DWORD PTR [esi+0x18],0x10
6400190d:	mov    DWORD PTR [esi+0x14],edi
64001910:	jb     0x64001914
64001912:	mov    ebx,DWORD PTR [ebx]
64001914:	mov    BYTE PTR [ebx+edi*1],0x0
64001918:	pop    edi
64001919:	mov    eax,esi
6400191b:	pop    esi
6400191c:	pop    ebp
6400191d:	pop    ebx
6400191e:	ret    0x8
64001921:	int3   
64001922:	int3   
64001923:	int3   
64001924:	int3   
64001925:	int3   
64001926:	int3   
64001927:	int3   
64001928:	int3   
64001929:	int3   
6400192a:	int3   
6400192b:	int3   
6400192c:	int3   
6400192d:	int3   
6400192e:	int3   
6400192f:	int3   
64001930:	mov    eax,DWORD PTR [ecx]
64001932:	sub    eax,0x10
64001935:	lea    ecx,[eax+0xc]
64001938:	or     edx,0xffffffff
6400193b:	lock xadd DWORD PTR [ecx],edx
6400193f:	dec    edx
64001940:	test   edx,edx
64001942:	jg     0x6400194e
64001944:	mov    ecx,DWORD PTR [eax]
64001946:	mov    edx,DWORD PTR [ecx]
64001948:	push   eax
64001949:	mov    eax,DWORD PTR [edx+0x4]
6400194c:	call   eax
6400194e:	ret    
6400194f:	int3   
64001950:	push   ecx
64001951:	push   ebx
64001952:	push   ebp
64001953:	push   esi
64001954:	mov    esi,DWORD PTR [ecx]
64001956:	mov    ebx,DWORD PTR [esi-0xc]
64001959:	sub    esi,0x10
6400195c:	mov    DWORD PTR [esp+0xc],ecx
64001960:	mov    ecx,DWORD PTR [esi]
64001962:	mov    eax,DWORD PTR [ecx]
64001964:	mov    edx,DWORD PTR [eax+0x10]
64001967:	push   edi
64001968:	call   edx
6400196a:	mov    edx,DWORD PTR [eax]
6400196c:	mov    ebp,DWORD PTR [esp+0x18]
64001970:	push   0x2
64001972:	mov    ecx,eax
64001974:	mov    eax,DWORD PTR [edx]
64001976:	push   ebp
64001977:	call   eax
64001979:	mov    edi,eax
6400197b:	test   edi,edi
6400197d:	jne    0x64001984
6400197f:	call   0x64001b50
64001984:	cmp    ebx,ebp
64001986:	jge    0x6400198a
64001988:	mov    ebp,ebx
6400198a:	lea    eax,[ebp+ebp*1+0x2]
6400198e:	push   eax
6400198f:	lea    ecx,[esi+0x10]
64001992:	push   ecx
64001993:	push   eax
64001994:	lea    ebp,[edi+0x10]
64001997:	push   ebp
64001998:	call   0x64012418
6400199d:	add    esp,0x10
640019a0:	mov    DWORD PTR [edi+0x4],ebx
640019a3:	lea    edx,[esi+0xc]
640019a6:	or     eax,0xffffffff
640019a9:	lock xadd DWORD PTR [edx],eax
640019ad:	dec    eax
640019ae:	test   eax,eax
640019b0:	jg     0x640019bc
640019b2:	mov    ecx,DWORD PTR [esi]
640019b4:	mov    edx,DWORD PTR [ecx]
640019b6:	mov    eax,DWORD PTR [edx+0x4]
640019b9:	push   esi
640019ba:	call   eax
640019bc:	mov    ecx,DWORD PTR [esp+0x10]
640019c0:	pop    edi
640019c1:	pop    esi
640019c2:	mov    DWORD PTR [ecx],ebp
640019c4:	pop    ebp
640019c5:	pop    ebx
640019c6:	pop    ecx
640019c7:	ret    0x4
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   ebx
640019d1:	push   ebp
640019d2:	mov    ebp,DWORD PTR [esp+0xc]
640019d6:	push   edi
640019d7:	mov    edi,DWORD PTR [esp+0x14]
640019db:	cmp    DWORD PTR [ebp+0x14],edi
640019de:	mov    ebx,eax
640019e0:	jae    0x640019e7
640019e2:	call   0x6401221e
640019e7:	mov    eax,DWORD PTR [ebp+0x14]
640019ea:	sub    eax,edi
640019ec:	cmp    eax,ebx
640019ee:	jae    0x640019f2
640019f0:	mov    ebx,eax
640019f2:	mov    eax,DWORD PTR [esi+0x14]
640019f5:	or     ecx,0xffffffff
640019f8:	sub    ecx,eax
640019fa:	cmp    ecx,ebx
640019fc:	jbe    0x64001a05
640019fe:	lea    edx,[eax+ebx*1]
64001a01:	cmp    edx,eax
64001a03:	jae    0x64001a0a
64001a05:	call   0x640121df
64001a0a:	test   ebx,ebx
64001a0c:	jbe    0x64001ab6
64001a12:	mov    edi,DWORD PTR [esi+0x14]
64001a15:	add    edi,ebx
64001a17:	cmp    edi,0xfffffffe
64001a1a:	jbe    0x64001a21
64001a1c:	call   0x640121df
64001a21:	mov    eax,DWORD PTR [esi+0x18]
64001a24:	cmp    eax,edi
64001a26:	jae    0x64001a43
64001a28:	mov    eax,DWORD PTR [esi+0x14]
64001a2b:	push   eax
64001a2c:	push   edi
64001a2d:	mov    ecx,esi
64001a2f:	call   0x64001b60
64001a34:	test   edi,edi
64001a36:	jbe    0x64001ab6
64001a38:	cmp    DWORD PTR [ebp+0x18],0x10
64001a3c:	jb     0x64001a6b
64001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
64001a41:	jmp    0x64001a6e
64001a43:	test   edi,edi
64001a45:	jne    0x64001a36
64001a47:	cmp    eax,0x10
64001a4a:	mov    DWORD PTR [esi+0x14],edi
64001a4d:	jb     0x64001a5d
64001a4f:	mov    eax,DWORD PTR [esi+0x4]
64001a52:	pop    edi
64001a53:	pop    ebp
64001a54:	mov    BYTE PTR [eax],0x0
64001a57:	mov    eax,esi
64001a59:	pop    ebx
64001a5a:	ret    0x8
64001a5d:	pop    edi
64001a5e:	lea    eax,[esi+0x4]
64001a61:	pop    ebp
64001a62:	mov    BYTE PTR [eax],0x0
64001a65:	mov    eax,esi
64001a67:	pop    ebx
64001a68:	ret    0x8
64001a6b:	add    ebp,0x4
64001a6e:	mov    eax,DWORD PTR [esi+0x18]
64001a71:	cmp    eax,0x10
64001a74:	jb     0x64001a7b
64001a76:	mov    edx,DWORD PTR [esi+0x4]
64001a79:	jmp    0x64001a7e
64001a7b:	lea    edx,[esi+0x4]
64001a7e:	mov    ecx,DWORD PTR [esi+0x14]
64001a81:	push   ebx
64001a82:	mov    ebx,DWORD PTR [esp+0x18]
64001a86:	add    ebp,ebx
64001a88:	sub    eax,ecx
64001a8a:	push   ebp
64001a8b:	push   eax
64001a8c:	add    ecx,edx
64001a8e:	push   ecx
64001a8f:	call   0x64012418
64001a94:	add    esp,0x10
64001a97:	cmp    DWORD PTR [esi+0x18],0x10
64001a9b:	mov    DWORD PTR [esi+0x14],edi
64001a9e:	jb     0x64001aaf
64001aa0:	mov    eax,DWORD PTR [esi+0x4]
64001aa3:	mov    BYTE PTR [eax+edi*1],0x0
64001aa7:	pop    edi
64001aa8:	pop    ebp
64001aa9:	mov    eax,esi
64001aab:	pop    ebx
64001aac:	ret    0x8
64001aaf:	lea    eax,[esi+0x4]
64001ab2:	mov    BYTE PTR [eax+edi*1],0x0
64001ab6:	pop    edi
64001ab7:	pop    ebp
64001ab8:	mov    eax,esi
64001aba:	pop    ebx
64001abb:	ret    0x8
64001abe:	int3   
64001abf:	int3   
64001ac0:	push   ebx
64001ac1:	mov    ebx,DWORD PTR [esp+0x8]
64001ac5:	push   esi
64001ac6:	mov    esi,ecx
64001ac8:	cmp    DWORD PTR [esi+0x14],ebx
64001acb:	push   edi
64001acc:	jae    0x64001ad3
64001ace:	call   0x6401221e
64001ad3:	mov    eax,DWORD PTR [esi+0x14]
64001ad6:	mov    edi,DWORD PTR [esp+0x14]
64001ada:	sub    eax,ebx
64001adc:	cmp    eax,edi
64001ade:	jae    0x64001ae2
64001ae0:	mov    edi,eax
64001ae2:	test   edi,edi
64001ae4:	jbe    0x64001b3b
64001ae6:	mov    ecx,DWORD PTR [esi+0x18]
64001ae9:	cmp    ecx,0x10
64001aec:	push   ebp
64001aed:	lea    ebp,[esi+0x4]
64001af0:	jb     0x64001afb
64001af2:	mov    edx,DWORD PTR [ebp+0x0]
64001af5:	mov    DWORD PTR [esp+0x14],edx
64001af9:	jmp    0x64001aff
64001afb:	mov    DWORD PTR [esp+0x14],ebp
64001aff:	cmp    ecx,0x10
64001b02:	jb     0x64001b09
64001b04:	mov    edx,DWORD PTR [ebp+0x0]
64001b07:	jmp    0x64001b0b
64001b09:	mov    edx,ebp
64001b0b:	sub    eax,edi
64001b0d:	push   eax
64001b0e:	mov    eax,DWORD PTR [esp+0x18]
64001b12:	add    eax,ebx
64001b14:	add    eax,edi
64001b16:	push   eax
64001b17:	sub    ecx,ebx
64001b19:	push   ecx
64001b1a:	add    edx,ebx
64001b1c:	push   edx
64001b1d:	call   0x64012493
64001b22:	mov    eax,DWORD PTR [esi+0x14]
64001b25:	sub    eax,edi
64001b27:	add    esp,0x10
64001b2a:	cmp    DWORD PTR [esi+0x18],0x10
64001b2e:	mov    DWORD PTR [esi+0x14],eax
64001b31:	jb     0x64001b36
64001b33:	mov    ebp,DWORD PTR [ebp+0x0]
64001b36:	mov    BYTE PTR [eax+ebp*1],0x0
64001b3a:	pop    ebp
64001b3b:	pop    edi
64001b3c:	mov    eax,esi
64001b3e:	pop    esi
64001b3f:	pop    ebx
64001b40:	ret    0x8
64001b43:	int3   
64001b44:	int3   
64001b45:	int3   
64001b46:	int3   
64001b47:	int3   
64001b48:	int3   
64001b49:	int3   
64001b4a:	int3   
64001b4b:	int3   
64001b4c:	int3   
64001b4d:	int3   
64001b4e:	int3   
64001b4f:	int3   
64001b50:	push   0x8007000e
64001b55:	call   0x64001040
64001b5a:	int3   
64001b5b:	int3   
64001b5c:	int3   
64001b5d:	int3   
64001b5e:	int3   
64001b5f:	int3   
64001b60:	push   ebp
64001b61:	mov    ebp,esp
64001b63:	push   0xffffffff
64001b65:	push   0x640225f0
64001b6a:	mov    eax,fs:0x0
64001b70:	push   eax
64001b71:	sub    esp,0x1c
64001b74:	push   ebx
64001b75:	push   esi
64001b76:	push   edi
64001b77:	mov    eax,ds:0x6402d09c
64001b7c:	xor    eax,ebp
64001b7e:	push   eax
64001b7f:	lea    eax,[ebp-0xc]
64001b82:	mov    fs:0x0,eax
64001b88:	mov    DWORD PTR [ebp-0x10],esp
64001b8b:	mov    edi,ecx
64001b8d:	mov    DWORD PTR [ebp-0x14],edi
64001b90:	mov    eax,DWORD PTR [ebp+0x8]
64001b93:	mov    esi,eax
64001b95:	or     esi,0xf
64001b98:	cmp    esi,0xfffffffe
64001b9b:	jbe    0x64001ba1
64001b9d:	mov    esi,eax
64001b9f:	jmp    0x64001bc3
64001ba1:	mov    ebx,DWORD PTR [edi+0x18]
64001ba4:	mov    eax,0xaaaaaaab
64001ba9:	mul    esi
64001bab:	mov    ecx,ebx
64001bad:	shr    ecx,1
64001baf:	shr    edx,1
64001bb1:	cmp    edx,ecx
64001bb3:	jae    0x64001bc3
64001bb5:	mov    eax,0xfffffffe
64001bba:	sub    eax,ecx
64001bbc:	cmp    ebx,eax
64001bbe:	ja     0x64001bc3
64001bc0:	lea    esi,[ecx+ebx*1]
64001bc3:	xor    ebx,ebx
64001bc5:	lea    ecx,[esi+0x1]
64001bc8:	cmp    ecx,ebx
64001bca:	mov    DWORD PTR [ebp-0x4],ebx
64001bcd:	ja     0x64001bdf
64001bcf:	xor    ecx,ecx
64001bd1:	push   ecx
64001bd2:	call   0x64012641
64001bd7:	add    esp,0x4
64001bda:	mov    DWORD PTR [ebp+0x8],eax
64001bdd:	jmp    0x64001c37
64001bdf:	or     eax,0xffffffff
64001be2:	xor    edx,edx
64001be4:	div    ecx
64001be6:	cmp    eax,0x1
64001be9:	jae    0x64001bd1
64001beb:	lea    ecx,[ebp-0x18]
64001bee:	push   ecx
64001bef:	lea    ecx,[ebp-0x28]
64001bf2:	mov    DWORD PTR [ebp-0x18],ebx
64001bf5:	call   0x640122bd
64001bfa:	push   0x6402ab24
64001bff:	lea    edx,[ebp-0x28]
64001c02:	push   edx
64001c03:	mov    DWORD PTR [ebp-0x28],0x64025304
64001c0a:	call   0x640126ab
64001c0f:	mov    eax,DWORD PTR [ebp+0x8]
64001c12:	mov    ecx,DWORD PTR [ebp-0x14]
64001c15:	mov    DWORD PTR [ebp-0x1c],eax
64001c18:	add    eax,0x1
64001c1b:	mov    DWORD PTR [ebp-0x10],esp
64001c1e:	push   eax
64001c1f:	mov    BYTE PTR [ebp-0x4],0x2
64001c23:	call   0x64001ce0
64001c28:	mov    DWORD PTR [ebp+0x8],eax
64001c2b:	mov    eax,0x64001c31
64001c30:	ret    
64001c31:	mov    edi,DWORD PTR [ebp-0x14]
64001c34:	mov    esi,DWORD PTR [ebp-0x1c]
64001c37:	mov    ebx,DWORD PTR [ebp+0xc]
64001c3a:	test   ebx,ebx
64001c3c:	jbe    0x64001c5e
64001c3e:	cmp    DWORD PTR [edi+0x18],0x10
64001c42:	jb     0x64001c49
64001c44:	mov    eax,DWORD PTR [edi+0x4]
64001c47:	jmp    0x64001c4c
64001c49:	lea    eax,[edi+0x4]
64001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
64001c4f:	push   ebx
64001c50:	push   eax
64001c51:	lea    eax,[esi+0x1]
64001c54:	push   eax
64001c55:	push   ecx
64001c56:	call   0x64012418
64001c5b:	add    esp,0x10
64001c5e:	cmp    DWORD PTR [edi+0x18],0x10
64001c62:	jb     0x64001c70
64001c64:	mov    edx,DWORD PTR [edi+0x4]
64001c67:	push   edx
64001c68:	call   0x64012262
64001c6d:	add    esp,0x4
64001c70:	cmp    esi,0x10
64001c73:	mov    ecx,DWORD PTR [ebp+0x8]
64001c76:	lea    eax,[edi+0x4]
64001c79:	mov    BYTE PTR [eax],0x0
64001c7c:	mov    DWORD PTR [eax],ecx
64001c7e:	mov    DWORD PTR [edi+0x18],esi
64001c81:	mov    DWORD PTR [edi+0x14],ebx
64001c84:	jb     0x64001c88
64001c86:	mov    eax,ecx
64001c88:	mov    BYTE PTR [eax+ebx*1],0x0
64001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
64001c8f:	mov    DWORD PTR fs:0x0,ecx
64001c96:	pop    ecx
64001c97:	pop    edi
64001c98:	pop    esi
64001c99:	pop    ebx
64001c9a:	mov    esp,ebp
64001c9c:	pop    ebp
64001c9d:	ret    0x8
64001ca0:	mov    esi,DWORD PTR [ebp-0x14]
64001ca3:	cmp    DWORD PTR [esi+0x18],0x10
64001ca7:	jb     0x64001cb5
64001ca9:	mov    eax,DWORD PTR [esi+0x4]
64001cac:	push   eax
64001cad:	call   0x64012262
64001cb2:	add    esp,0x4
64001cb5:	push   0x0
64001cb7:	mov    DWORD PTR [esi+0x18],0xf
64001cbe:	mov    DWORD PTR [esi+0x14],0x0
64001cc5:	push   0x0
64001cc7:	mov    BYTE PTR [esi+0x4],0x0
64001ccb:	call   0x640126ab
64001cd0:	int3   
64001cd1:	int3   
64001cd2:	int3   
64001cd3:	int3   
64001cd4:	int3   
64001cd5:	int3   
64001cd6:	int3   
64001cd7:	int3   
64001cd8:	int3   
64001cd9:	int3   
64001cda:	int3   
64001cdb:	int3   
64001cdc:	int3   
64001cdd:	int3   
64001cde:	int3   
64001cdf:	int3   
64001ce0:	mov    ecx,DWORD PTR [esp+0x4]
64001ce4:	sub    esp,0xc
64001ce7:	test   ecx,ecx
64001ce9:	ja     0x64001cfc
64001ceb:	xor    ecx,ecx
64001ced:	push   ecx
64001cee:	call   0x64012641
64001cf3:	add    esp,0x4
64001cf6:	add    esp,0xc
64001cf9:	ret    0x4
64001cfc:	or     eax,0xffffffff
64001cff:	xor    edx,edx
64001d01:	div    ecx
64001d03:	cmp    eax,0x1
64001d06:	jae    0x64001ced
64001d08:	lea    eax,[esp+0x10]
64001d0c:	push   eax
64001d0d:	lea    ecx,[esp+0x4]
64001d11:	mov    DWORD PTR [esp+0x14],0x0
64001d19:	call   0x640122bd
64001d1e:	push   0x6402ab24
64001d23:	lea    ecx,[esp+0x4]
64001d27:	push   ecx
64001d28:	mov    DWORD PTR [esp+0x8],0x64025304
64001d30:	call   0x640126ab
64001d35:	int3   
64001d36:	int3   
64001d37:	int3   
64001d38:	int3   
64001d39:	int3   
64001d3a:	int3   
64001d3b:	int3   
64001d3c:	int3   
64001d3d:	int3   
64001d3e:	int3   
64001d3f:	int3   
64001d40:	mov    ecx,DWORD PTR [esp+0x8]
64001d44:	lea    eax,[esp+0xc]
64001d48:	push   eax
64001d49:	push   ecx
64001d4a:	mov    ecx,DWORD PTR [esp+0xc]
64001d4e:	call   0x64001d80
64001d53:	ret    
64001d54:	int3   
64001d55:	int3   
64001d56:	int3   
64001d57:	int3   
64001d58:	int3   
64001d59:	int3   
64001d5a:	int3   
64001d5b:	int3   
64001d5c:	int3   
64001d5d:	int3   
64001d5e:	int3   
64001d5f:	int3   
64001d60:	mov    eax,DWORD PTR [esp+0x4]
64001d64:	push   esi
64001d65:	push   eax
64001d66:	mov    esi,ecx
64001d68:	call   0x64012323
64001d6d:	mov    DWORD PTR [esi],0x64025304
64001d73:	mov    eax,esi
64001d75:	pop    esi
64001d76:	ret    0x4
64001d79:	int3   
64001d7a:	int3   
64001d7b:	int3   
64001d7c:	int3   
64001d7d:	int3   
64001d7e:	int3   
64001d7f:	int3   
64001d80:	push   ebx
64001d81:	mov    ebx,DWORD PTR [esp+0x8]
64001d85:	test   ebx,ebx
64001d87:	push   edi
64001d88:	mov    edi,ecx
64001d8a:	jne    0x64001d96
64001d8c:	push   0x80070057
64001d91:	call   0x64001040
64001d96:	push   ebp
64001d97:	mov    ebp,DWORD PTR [esp+0x14]
64001d9b:	push   esi
64001d9c:	push   ebp
64001d9d:	push   ebx
64001d9e:	call   0x64012d36
64001da3:	mov    esi,eax
64001da5:	mov    eax,DWORD PTR [edi]
64001da7:	mov    edx,DWORD PTR [eax-0x8]
64001daa:	sub    eax,0x10
64001dad:	mov    ecx,0x1
64001db2:	sub    ecx,DWORD PTR [eax+0xc]
64001db5:	sub    edx,esi
64001db7:	add    esp,0x8
64001dba:	or     ecx,edx
64001dbc:	jge    0x64001dc6
64001dbe:	push   esi
64001dbf:	mov    ecx,edi
64001dc1:	call   0x64001e00
64001dc6:	mov    ecx,DWORD PTR [edi]
64001dc8:	push   ebp
64001dc9:	push   ebx
64001dca:	lea    eax,[esi+0x1]
64001dcd:	push   eax
64001dce:	push   ecx
64001dcf:	call   0x64012ecb
64001dd4:	add    esp,0x10
64001dd7:	test   esi,esi
64001dd9:	jl     0x64001df4
64001ddb:	mov    eax,DWORD PTR [edi]
64001ddd:	cmp    esi,DWORD PTR [eax-0x8]
64001de0:	jg     0x64001df4
64001de2:	mov    DWORD PTR [eax-0xc],esi
64001de5:	mov    edx,DWORD PTR [edi]
64001de7:	mov    WORD PTR [edx+esi*2],0x0
64001ded:	pop    esi
64001dee:	pop    ebp
64001def:	pop    edi
64001df0:	pop    ebx
64001df1:	ret    0x8
64001df4:	push   0x80070057
64001df9:	call   0x64001040
64001dfe:	int3   
64001dff:	int3   
64001e00:	mov    eax,DWORD PTR [ecx]
64001e02:	mov    edx,DWORD PTR [esp+0x4]
64001e06:	sub    eax,0x10
64001e09:	push   esi
64001e0a:	mov    esi,DWORD PTR [eax+0x4]
64001e0d:	cmp    esi,edx
64001e0f:	jle    0x64001e13
64001e11:	mov    edx,esi
64001e13:	cmp    DWORD PTR [eax+0xc],0x1
64001e17:	pop    esi
64001e18:	jle    0x64001e23
64001e1a:	mov    DWORD PTR [esp+0x4],edx
64001e1e:	jmp    0x64001950
64001e23:	mov    eax,DWORD PTR [eax+0x8]
64001e26:	cmp    eax,edx
64001e28:	jge    0x64001e49
64001e2a:	cmp    eax,0x400
64001e2f:	jle    0x64001e38
64001e31:	add    eax,0x400
64001e36:	jmp    0x64001e3a
64001e38:	add    eax,eax
64001e3a:	cmp    eax,edx
64001e3c:	jge    0x64001e40
64001e3e:	mov    eax,edx
64001e40:	mov    DWORD PTR [esp+0x4],eax
64001e44:	jmp    0x64001e50
64001e49:	ret    0x4
64001e4c:	int3   
64001e4d:	int3   
64001e4e:	int3   
64001e4f:	int3   
64001e50:	mov    edx,DWORD PTR [esp+0x4]
64001e54:	push   esi
64001e55:	mov    esi,ecx
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	mov    ecx,DWORD PTR [eax-0x10]
64001e5c:	sub    eax,0x10
64001e5f:	cmp    DWORD PTR [eax+0x8],edx
64001e62:	jge    0x64001e79
64001e64:	test   edx,edx
64001e66:	jle    0x64001e79
64001e68:	push   edi
64001e69:	mov    edi,DWORD PTR [ecx]
64001e6b:	push   0x2
64001e6d:	push   edx
64001e6e:	push   eax
64001e6f:	mov    eax,DWORD PTR [edi+0x8]
64001e72:	call   eax
64001e74:	test   eax,eax
64001e76:	pop    edi
64001e77:	jne    0x64001e7e
64001e79:	call   0x64001b50
64001e7e:	add    eax,0x10
64001e81:	mov    DWORD PTR [esi],eax
64001e83:	pop    esi
64001e84:	ret    0x4
64001e87:	int3   
64001e88:	int3   
64001e89:	int3   
64001e8a:	int3   
64001e8b:	int3   
64001e8c:	int3   
64001e8d:	int3   
64001e8e:	int3   
64001e8f:	int3   
64001e90:	mov    eax,DWORD PTR [esp+0x4]
64001e94:	cmp    eax,0x50
64001e97:	ja     0x64001ebb
64001e99:	movzx  ecx,BYTE PTR [eax+0x64001ed8]
64001ea0:	jmp    DWORD PTR [ecx*4+0x64001ec8]
64001ea7:	push   0x8007000e
64001eac:	call   0x64001040
64001eb1:	push   0x80070057
64001eb6:	call   0x64001040
64001ebb:	push   0x80004005
64001ec0:	call   0x64001040
64001ec5:	ret    
64001ec6:	mov    edi,edi
64001ec8:	lds    ebx,FWORD PTR [esi]
64001eca:	add    BYTE PTR [edi+eiz*4+0x1e],ah
64001ece:	add    BYTE PTR [ecx+esi*4+0x1e],ah
64001ed2:	add    BYTE PTR [ebx+edi*4+0x1e],ah
64001ed6:	add    BYTE PTR [eax+eax*1+0x3],ah
64001eda:	add    eax,DWORD PTR [ebx]
64001edc:	add    eax,DWORD PTR [ebx]
64001ede:	add    eax,DWORD PTR [ebx]
64001ee0:	add    eax,DWORD PTR [ebx]
64001ee2:	add    eax,DWORD PTR [ebx]
64001ee4:	add    DWORD PTR [ebx],eax
64001ee6:	add    eax,DWORD PTR [ebx]
64001ee8:	add    eax,DWORD PTR [ebx]
64001eea:	add    eax,DWORD PTR [ebx]
64001eec:	add    eax,DWORD PTR [ebx]
64001eee:	add    al,BYTE PTR [ebx]
64001ef0:	add    eax,DWORD PTR [ebx]
64001ef2:	add    eax,DWORD PTR [ebx]
64001ef4:	add    eax,DWORD PTR [ebx]
64001ef6:	add    eax,DWORD PTR [ebx]
64001ef8:	add    eax,DWORD PTR [ebx]
64001efa:	add    al,BYTE PTR [ebx]
64001efc:	add    eax,DWORD PTR [ebx]
64001efe:	add    eax,DWORD PTR [ebx]
64001f00:	add    eax,DWORD PTR [ebx]
64001f02:	add    eax,DWORD PTR [ebx]
64001f04:	add    eax,DWORD PTR [ebx]
64001f06:	add    eax,DWORD PTR [ebx]
64001f08:	add    eax,DWORD PTR [ebx]
64001f0a:	add    eax,DWORD PTR [ebx]
64001f0c:	add    eax,DWORD PTR [ebx]
64001f0e:	add    eax,DWORD PTR [ebx]
64001f10:	add    eax,DWORD PTR [ebx]
64001f12:	add    eax,DWORD PTR [ebx]
64001f14:	add    eax,DWORD PTR [ebx]
64001f16:	add    eax,DWORD PTR [ebx]
64001f18:	add    eax,DWORD PTR [ebx]
64001f1a:	add    eax,DWORD PTR [ebx]
64001f1c:	add    eax,DWORD PTR [ebx]
64001f1e:	add    eax,DWORD PTR [ebx]
64001f20:	add    eax,DWORD PTR [ebx]
64001f22:	add    eax,DWORD PTR [ebx]
64001f24:	add    eax,DWORD PTR [ebx]
64001f26:	add    eax,DWORD PTR [ebx]
64001f28:	add    ah,cl
64001f2a:	int3   
64001f2b:	int3   
64001f2c:	int3   
64001f2d:	int3   
64001f2e:	int3   
64001f2f:	int3   
64001f30:	push   ebx
64001f31:	mov    ebx,DWORD PTR [esp+0x8]
64001f35:	push   edi
64001f36:	mov    edi,DWORD PTR [esp+0x10]
64001f3a:	push   edi
64001f3b:	push   ebx
64001f3c:	call   DWORD PTR ds:0x64025034
64001f42:	test   eax,eax
64001f44:	jne    0x64001f49
64001f46:	pop    edi
64001f47:	pop    ebx
64001f48:	ret    
64001f49:	push   esi
64001f4a:	push   eax
64001f4b:	call   DWORD PTR ds:0x64025030
64001f51:	mov    esi,eax
64001f53:	test   esi,esi
64001f55:	je     0x64001f84
64001f57:	push   edi
64001f58:	push   ebx
64001f59:	call   DWORD PTR ds:0x6402502c
64001f5f:	mov    ecx,DWORD PTR [esp+0x18]
64001f63:	add    eax,esi
64001f65:	and    ecx,0xf
64001f68:	jbe    0x64001f80
64001f6a:	lea    ebx,[ebx+0x0]
64001f70:	cmp    esi,eax
64001f72:	jae    0x64001f84
64001f74:	sub    ecx,0x1
64001f77:	movzx  edx,WORD PTR [esi]
64001f7a:	lea    esi,[esi+edx*2+0x2]
64001f7e:	jne    0x64001f70
64001f80:	cmp    esi,eax
64001f82:	jb     0x64001f8a
64001f84:	pop    esi
64001f85:	pop    edi
64001f86:	xor    eax,eax
64001f88:	pop    ebx
64001f89:	ret    
64001f8a:	mov    ax,WORD PTR [esi]
64001f8d:	neg    ax
64001f90:	sbb    eax,eax
64001f92:	and    eax,esi
64001f94:	pop    esi
64001f95:	pop    edi
64001f96:	pop    ebx
64001f97:	ret    
64001f98:	int3   
64001f99:	int3   
64001f9a:	int3   
64001f9b:	int3   
64001f9c:	int3   
64001f9d:	int3   
64001f9e:	int3   
64001f9f:	int3   
64001fa0:	push   ebx
64001fa1:	push   ebp
64001fa2:	push   esi
64001fa3:	push   edi
64001fa4:	xor    edi,edi
64001fa6:	push   edi
64001fa7:	mov    ecx,0x6402e4cc
64001fac:	call   0x64011e91
64001fb1:	mov    esi,eax
64001fb3:	test   esi,esi
64001fb5:	lea    ebp,[edi+0x1]
64001fb8:	je     0x64002007
64001fba:	mov    ebx,DWORD PTR [esp+0x14]
64001fbe:	mov    edi,edi
64001fc0:	test   edi,edi
64001fc2:	jne    0x64002007
64001fc4:	mov    eax,DWORD PTR [esp+0x18]
64001fc8:	mov    ecx,ebx
64001fca:	shr    ecx,0x4
64001fcd:	add    ecx,0x1
64001fd0:	push   eax
64001fd1:	movzx  edx,cx
64001fd4:	push   edx
64001fd5:	push   0x6
64001fd7:	push   esi
64001fd8:	call   DWORD PTR ds:0x6402503c
64001fde:	test   eax,eax
64001fe0:	je     0x64001ff3
64001fe2:	push   ebx
64001fe3:	push   eax
64001fe4:	push   esi
64001fe5:	call   0x64001f30
64001fea:	mov    edi,eax
64001fec:	add    esp,0xc
64001fef:	test   edi,edi
64001ff1:	jne    0x6400200e
64001ff3:	push   ebp
64001ff4:	mov    ecx,0x6402e4cc
64001ff9:	call   0x64011e91
64001ffe:	mov    esi,eax
64002000:	add    ebp,0x1
64002003:	test   esi,esi
64002005:	jne    0x64001fc0
64002007:	pop    edi
64002008:	pop    esi
64002009:	pop    ebp
6400200a:	xor    eax,eax
6400200c:	pop    ebx
6400200d:	ret    
6400200e:	pop    edi
6400200f:	mov    eax,esi
64002011:	pop    esi
64002012:	pop    ebp
64002013:	pop    ebx
64002014:	ret    
64002015:	int3   
64002016:	int3   
64002017:	int3   
64002018:	int3   
64002019:	int3   
6400201a:	int3   
6400201b:	int3   
6400201c:	int3   
6400201d:	int3   
6400201e:	int3   
6400201f:	int3   
64002020:	push   0xffffffff
64002022:	push   0x640228a8
64002027:	mov    eax,fs:0x0
6400202d:	push   eax
6400202e:	push   ecx
6400202f:	push   esi
64002030:	mov    eax,ds:0x6402d09c
64002035:	xor    eax,esp
64002037:	push   eax
64002038:	lea    eax,[esp+0xc]
6400203c:	mov    fs:0x0,eax
64002042:	mov    esi,ecx
64002044:	mov    DWORD PTR [esp+0x8],esi
64002048:	call   0x640122ac
6400204d:	xor    eax,eax
6400204f:	mov    DWORD PTR [esp+0x14],eax
64002053:	lea    ecx,[esi+0xc]
64002056:	mov    DWORD PTR [esi],0x6402544c
6400205c:	push   0xffffffff
6400205e:	mov    DWORD PTR [ecx+0x14],eax
64002061:	mov    DWORD PTR [ecx+0x18],0xf
64002068:	push   eax
64002069:	mov    BYTE PTR [ecx+0x4],al
6400206c:	mov    eax,DWORD PTR [esp+0x24]
64002070:	push   eax
64002071:	call   0x64001780
64002076:	mov    eax,esi
64002078:	mov    ecx,DWORD PTR [esp+0xc]
6400207c:	mov    DWORD PTR fs:0x0,ecx
64002083:	pop    ecx
64002084:	pop    esi
64002085:	add    esp,0x10
64002088:	ret    0x4
6400208b:	int3   
6400208c:	int3   
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   0xffffffff
64002092:	push   0x64022878
64002097:	mov    eax,fs:0x0
6400209d:	push   eax
6400209e:	push   ecx
6400209f:	push   esi
640020a0:	push   edi
640020a1:	mov    eax,ds:0x6402d09c
640020a6:	xor    eax,esp
640020a8:	push   eax
640020a9:	lea    eax,[esp+0x10]
640020ad:	mov    fs:0x0,eax
640020b3:	mov    esi,ecx
640020b5:	mov    DWORD PTR [esp+0xc],esi
640020b9:	mov    edi,DWORD PTR [esp+0x20]
640020bd:	push   edi
640020be:	call   0x64012323
640020c3:	xor    edx,edx
640020c5:	mov    DWORD PTR [esp+0x18],edx
640020c9:	push   0xffffffff
640020cb:	lea    ecx,[esi+0xc]
640020ce:	mov    DWORD PTR [esi],0x6402544c
640020d4:	lea    eax,[edi+0xc]
640020d7:	push   edx
640020d8:	mov    DWORD PTR [ecx+0x18],0xf
640020df:	mov    DWORD PTR [ecx+0x14],edx
640020e2:	push   eax
640020e3:	mov    BYTE PTR [ecx+0x4],dl
640020e6:	call   0x64001780
640020eb:	mov    eax,esi
640020ed:	mov    ecx,DWORD PTR [esp+0x10]
640020f1:	mov    DWORD PTR fs:0x0,ecx
640020f8:	pop    ecx
640020f9:	pop    edi
640020fa:	pop    esi
640020fb:	add    esp,0x10
640020fe:	ret    0x4
64002101:	int3   
64002102:	int3   
64002103:	int3   
64002104:	int3   
64002105:	int3   
64002106:	int3   
64002107:	int3   
64002108:	int3   
64002109:	int3   
6400210a:	int3   
6400210b:	int3   
6400210c:	int3   
6400210d:	int3   
6400210e:	int3   
6400210f:	int3   
64002110:	push   0xffffffff
64002112:	push   0x64023a8b
64002117:	mov    eax,fs:0x0
6400211d:	push   eax
6400211e:	sub    esp,0x41c
64002124:	mov    eax,ds:0x6402d09c
64002129:	xor    eax,esp
6400212b:	mov    DWORD PTR [esp+0x418],eax
64002132:	push   ebx
64002133:	push   ebp
64002134:	push   esi
64002135:	push   edi
64002136:	mov    eax,ds:0x6402d09c
6400213b:	xor    eax,esp
6400213d:	push   eax
6400213e:	lea    eax,[esp+0x430]
64002145:	mov    fs:0x0,eax
6400214b:	mov    esi,DWORD PTR [esp+0x440]
64002152:	mov    ebx,DWORD PTR [esp+0x444]
64002159:	mov    ebp,DWORD PTR [esp+0x448]
64002160:	lea    eax,[esp+0x224]
64002167:	push   eax
64002168:	push   0x100
6400216d:	mov    DWORD PTR [esp+0x20],esi
64002171:	mov    DWORD PTR [esp+0x1c],0x0
64002179:	call   0x6400cf60
6400217e:	call   eax
64002180:	cmp    eax,0x100
64002185:	jbe    0x64002198
64002187:	push   0x640276e8
6400218c:	mov    ecx,esi
6400218e:	call   0x64002500
64002193:	jmp    0x64002325
64002198:	lea    ecx,[esp+0x1c]
6400219c:	push   ecx
6400219d:	push   0x0
6400219f:	lea    edx,[esp+0x22c]
640021a6:	push   0x640276ec
640021ab:	push   edx
640021ac:	call   0x6400d040
640021b1:	call   eax
640021b3:	test   eax,eax
640021b5:	je     0x64002187
640021b7:	mov    edi,DWORD PTR ds:0x64025050
640021bd:	xor    esi,esi
640021bf:	nop
640021c0:	cmp    esi,0x708
640021c6:	je     0x640022a3
640021cc:	lea    eax,[esp+0x1c]
640021d0:	push   eax
640021d1:	call   0x6400cda0
640021d6:	call   eax
640021d8:	test   eax,eax
640021da:	jne    0x640021ed
640021dc:	push   esi
640021dd:	call   edi
640021df:	add    esi,0xc8
640021e5:	cmp    esi,0x7d0
640021eb:	jne    0x640021c0
640021ed:	xor    esi,esi
640021ef:	cmp    esi,0x708
640021f5:	je     0x640022a3
640021fb:	lea    ecx,[esp+0x1c]
640021ff:	push   0x0
64002201:	push   ecx
64002202:	call   0x6400d120
64002207:	call   eax
64002209:	test   eax,eax
6400220b:	jne    0x6400221e
6400220d:	push   esi
6400220e:	call   edi
64002210:	add    esi,0xc8
64002216:	cmp    esi,0x7d0
6400221c:	jne    0x640021ef
6400221e:	lea    eax,[esp+0x1c]
64002222:	lea    edx,[eax+0x2]
64002225:	mov    cx,WORD PTR [eax]
64002228:	add    eax,0x2
6400222b:	test   cx,cx
6400222e:	jne    0x64002225
64002230:	sub    eax,edx
64002232:	sar    eax,1
64002234:	push   eax
64002235:	lea    edx,[esp+0x20]
64002239:	push   edx
6400223a:	mov    ecx,ebp
6400223c:	call   0x64002a50
64002241:	lea    eax,[esp+0x1c]
64002245:	push   eax
64002246:	lea    ecx,[esp+0x18]
6400224a:	call   0x64002500
6400224f:	push   0x640276f4
64002254:	lea    ecx,[esp+0x18]
64002258:	mov    DWORD PTR [esp+0x43c],0x0
64002263:	call   0x640025d0
64002268:	mov    eax,DWORD PTR [ebx]
6400226a:	mov    ecx,DWORD PTR [eax-0xc]
6400226d:	push   ecx
6400226e:	push   eax
6400226f:	lea    ecx,[esp+0x1c]
64002273:	call   0x64002950
64002278:	mov    esi,DWORD PTR [esp+0x14]
6400227c:	mov    ecx,DWORD PTR [esi-0x10]
6400227f:	mov    edx,DWORD PTR [ecx]
64002281:	mov    eax,DWORD PTR [edx+0x10]
64002284:	add    esi,0xfffffff0
64002287:	call   eax
64002289:	cmp    DWORD PTR [esi+0xc],0x0
6400228d:	lea    edx,[esi+0xc]
64002290:	jl     0x640022b5
64002292:	cmp    eax,DWORD PTR [esi]
64002294:	jne    0x640022b5
64002296:	mov    edi,esi
64002298:	mov    ecx,0x1
6400229d:	lock xadd DWORD PTR [edx],ecx
640022a1:	jmp    0x640022f1
640022a3:	mov    esi,DWORD PTR [esp+0x18]
640022a7:	push   0x640276e8
640022ac:	mov    ecx,esi
640022ae:	call   0x64002500
640022b3:	jmp    0x64002325
640022b5:	mov    ecx,DWORD PTR [esi+0x4]
640022b8:	mov    edx,DWORD PTR [eax]
640022ba:	mov    edx,DWORD PTR [edx]
640022bc:	push   0x2
640022be:	push   ecx
640022bf:	mov    ecx,eax
640022c1:	call   edx
640022c3:	mov    edi,eax
640022c5:	test   edi,edi
640022c7:	jne    0x640022ce
640022c9:	jmp    0x64001b50
640022ce:	mov    eax,DWORD PTR [esi+0x4]
640022d1:	mov    DWORD PTR [edi+0x4],eax
640022d4:	mov    eax,DWORD PTR [esi+0x4]
640022d7:	lea    ecx,[eax+eax*1+0x2]
640022db:	push   ecx
640022dc:	add    esi,0x10
640022df:	lea    edx,[eax+eax*1+0x2]
640022e3:	push   esi
640022e4:	push   edx
640022e5:	lea    eax,[edi+0x10]
640022e8:	push   eax
640022e9:	call   0x64012418
640022ee:	add    esp,0x10
640022f1:	mov    esi,DWORD PTR [esp+0x18]
640022f5:	mov    DWORD PTR [esp+0x438],0xffffffff
64002300:	mov    eax,DWORD PTR [esp+0x14]
64002304:	add    edi,0x10
64002307:	add    eax,0xfffffff0
6400230a:	mov    DWORD PTR [esi],edi
6400230c:	lea    ecx,[eax+0xc]
6400230f:	or     edx,0xffffffff
64002312:	lock xadd DWORD PTR [ecx],edx
64002316:	dec    edx
64002317:	test   edx,edx
64002319:	jg     0x64002325
6400231b:	mov    ecx,DWORD PTR [eax]
6400231d:	mov    edx,DWORD PTR [ecx]
6400231f:	push   eax
64002320:	mov    eax,DWORD PTR [edx+0x4]
64002323:	call   eax
64002325:	mov    eax,esi
64002327:	mov    ecx,DWORD PTR [esp+0x430]
6400232e:	mov    DWORD PTR fs:0x0,ecx
64002335:	pop    ecx
64002336:	pop    edi
64002337:	pop    esi
64002338:	pop    ebp
64002339:	pop    ebx
6400233a:	mov    ecx,DWORD PTR [esp+0x418]
64002341:	xor    ecx,esp
64002343:	call   0x64012abc
64002348:	add    esp,0x428
6400234e:	ret    
6400234f:	int3   
64002350:	push   0xffffffff
64002352:	push   0x64023a60
64002357:	mov    eax,fs:0x0
6400235d:	push   eax
6400235e:	sub    esp,0x4c
64002361:	push   ebx
64002362:	push   esi
64002363:	push   edi
64002364:	mov    eax,ds:0x6402d09c
64002369:	xor    eax,esp
6400236b:	push   eax
6400236c:	lea    eax,[esp+0x5c]
64002370:	mov    fs:0x0,eax
64002376:	xor    ebx,ebx
64002378:	push   ebx
64002379:	push   0x80
6400237e:	push   0x2
64002380:	push   ebx
64002381:	push   ebx
64002382:	mov    DWORD PTR [esp+0x78],ebx
64002386:	mov    edi,DWORD PTR [esp+0x80]
6400238d:	push   0x40000000
64002392:	push   edi
64002393:	call   0x6400ce80
64002398:	call   eax
6400239a:	mov    esi,eax
6400239c:	mov    DWORD PTR [esp+0x10],esi
640023a0:	cmp    esi,0xffffffff
640023a3:	mov    BYTE PTR [esp+0x64],0x1
640023a8:	push   ebx
640023a9:	jne    0x640023eb
640023ab:	push   0x640276ea
640023b0:	lea    ecx,[esp+0x20]
640023b4:	mov    DWORD PTR [esp+0x38],0xf
640023bc:	mov    DWORD PTR [esp+0x34],ebx
640023c0:	mov    BYTE PTR [esp+0x24],bl
640023c4:	call   0x64001860
640023c9:	lea    eax,[esp+0x18]
640023cd:	push   eax
640023ce:	lea    ecx,[esp+0x38]
640023d2:	mov    BYTE PTR [esp+0x68],0x2
640023d7:	call   0x64002020
640023dc:	push   0x6402ab5c
640023e1:	lea    ecx,[esp+0x38]
640023e5:	push   ecx
640023e6:	call   0x640126ab
640023eb:	mov    eax,DWORD PTR [esp+0x78]
640023ef:	mov    ecx,DWORD PTR [esp+0x74]
640023f3:	lea    edx,[esp+0x18]
640023f7:	push   edx
640023f8:	push   eax
640023f9:	push   ecx
640023fa:	push   esi
640023fb:	call   DWORD PTR ds:0x64025088
64002401:	test   eax,eax
64002403:	jne    0x64002446
64002405:	push   ebx
64002406:	push   0x640276ea
6400240b:	lea    ecx,[esp+0x20]
6400240f:	mov    DWORD PTR [esp+0x38],0xf
64002417:	mov    DWORD PTR [esp+0x34],ebx
6400241b:	mov    BYTE PTR [esp+0x24],bl
6400241f:	call   0x64001860
64002424:	lea    edx,[esp+0x18]
64002428:	push   edx
64002429:	lea    ecx,[esp+0x38]
6400242d:	mov    BYTE PTR [esp+0x68],0x3
64002432:	call   0x64002020
64002437:	push   0x6402ab5c
6400243c:	lea    eax,[esp+0x38]
64002440:	push   eax
64002441:	call   0x640126ab
64002446:	cmp    esi,ebx
64002448:	je     0x64002460
6400244a:	call   DWORD PTR ds:0x64025044
64002450:	push   esi
64002451:	mov    ebx,eax
64002453:	call   DWORD PTR ds:0x64025040
64002459:	push   ebx
6400245a:	call   DWORD PTR ds:0x64025060
64002460:	lea    eax,[edi-0x10]
64002463:	mov    DWORD PTR [esp+0x64],0xffffffff
6400246b:	lea    ecx,[eax+0xc]
6400246e:	or     edx,0xffffffff
64002471:	lock xadd DWORD PTR [ecx],edx
64002475:	dec    edx
64002476:	test   edx,edx
64002478:	jg     0x64002484
6400247a:	mov    ecx,DWORD PTR [eax]
6400247c:	mov    edx,DWORD PTR [ecx]
6400247e:	push   eax
6400247f:	mov    eax,DWORD PTR [edx+0x4]
64002482:	call   eax
64002484:	mov    ecx,DWORD PTR [esp+0x5c]
64002488:	mov    DWORD PTR fs:0x0,ecx
6400248f:	pop    ecx
64002490:	pop    edi
64002491:	pop    esi
64002492:	pop    ebx
64002493:	add    esp,0x58
64002496:	ret    
64002497:	int3   
64002498:	int3   
64002499:	int3   
6400249a:	int3   
6400249b:	int3   
6400249c:	int3   
6400249d:	int3   
6400249e:	int3   
6400249f:	int3   
640024a0:	sub    esp,0x8
640024a3:	mov    DWORD PTR [esp],0x0
640024aa:	mov    DWORD PTR [esp+0x4],0x0
640024b2:	call   DWORD PTR ds:0x6402d06c
640024b8:	mov    eax,DWORD PTR [esp+0x10]
640024bc:	mov    eax,DWORD PTR [eax]
640024be:	lea    ecx,[esp+0x4]
640024c2:	push   ecx
640024c3:	push   0x0
640024c5:	lea    edx,[esp+0x8]
640024c9:	push   edx
640024ca:	push   0x0
640024cc:	push   0x0
640024ce:	push   0x5
640024d0:	push   0x1
640024d2:	push   eax
640024d3:	call   0x6400dba0
640024d8:	call   eax
640024da:	test   eax,eax
640024dc:	jne    0x640024fa
640024de:	mov    ecx,DWORD PTR [esp]
640024e1:	mov    eax,DWORD PTR [esp+0xc]
640024e5:	mov    eax,DWORD PTR [eax]
640024e7:	push   0x0
640024e9:	push   ecx
640024ea:	push   0x0
640024ec:	push   0x0
640024ee:	push   0x4
640024f0:	push   0x1
640024f2:	push   eax
640024f3:	call   0x6400dc80
640024f8:	call   eax
640024fa:	add    esp,0x8
640024fd:	ret    
640024fe:	int3   
640024ff:	int3   
64002500:	push   0xffffffff
64002502:	push   0x64022de8
64002507:	mov    eax,fs:0x0
6400250d:	push   eax
6400250e:	push   ecx
6400250f:	push   esi
64002510:	push   edi
64002511:	mov    eax,ds:0x6402d09c
64002516:	xor    eax,esp
64002518:	push   eax
64002519:	lea    eax,[esp+0x10]
6400251d:	mov    fs:0x0,eax
64002523:	mov    edi,ecx
64002525:	mov    DWORD PTR [esp+0xc],edi
64002529:	mov    eax,ds:0x6402e540
6400252e:	mov    edx,DWORD PTR [eax+0xc]
64002531:	mov    ecx,0x6402e540
64002536:	call   edx
64002538:	add    eax,0x10
6400253b:	mov    DWORD PTR [edi],eax
6400253d:	mov    edx,DWORD PTR [esp+0x20]
64002541:	test   edx,edx
64002543:	mov    DWORD PTR [esp+0x18],0x0
6400254b:	je     0x64002572
6400254d:	test   edx,0xffff0000
64002553:	jne    0x64002576
64002555:	movzx  esi,dx
64002558:	push   0x0
6400255a:	push   esi
6400255b:	call   0x64001fa0
64002560:	add    esp,0x8
64002563:	test   eax,eax
64002565:	je     0x64002598
64002567:	push   esi
64002568:	push   eax
64002569:	mov    ecx,edi
6400256b:	call   0x64002880
64002570:	jmp    0x64002598
64002572:	xor    eax,eax
64002574:	jmp    0x6400258f
64002576:	mov    eax,edx
64002578:	lea    esi,[eax+0x2]
6400257b:	jmp    0x64002580
6400257d:	lea    ecx,[ecx+0x0]
64002580:	mov    cx,WORD PTR [eax]
64002583:	add    eax,0x2
64002586:	test   cx,cx
64002589:	jne    0x64002580
6400258b:	sub    eax,esi
6400258d:	sar    eax,1
6400258f:	push   eax
64002590:	push   edx
64002591:	mov    ecx,edi
64002593:	call   0x64002a50
64002598:	mov    eax,edi
6400259a:	mov    ecx,DWORD PTR [esp+0x10]
6400259e:	mov    DWORD PTR fs:0x0,ecx
640025a5:	pop    ecx
640025a6:	pop    edi
640025a7:	pop    esi
640025a8:	add    esp,0x10
640025ab:	ret    0x4
640025ae:	int3   
640025af:	int3   
640025b0:	mov    eax,DWORD PTR [esp+0x4]
640025b4:	mov    eax,DWORD PTR [eax]
640025b6:	push   esi
640025b7:	mov    esi,ecx
640025b9:	mov    ecx,DWORD PTR [eax-0xc]
640025bc:	push   ecx
640025bd:	push   eax
640025be:	mov    ecx,esi
640025c0:	call   0x64002950
640025c5:	mov    eax,esi
640025c7:	pop    esi
640025c8:	ret    0x4
640025cb:	int3   
640025cc:	int3   
640025cd:	int3   
640025ce:	int3   
640025cf:	int3   
640025d0:	push   0xffffffff
640025d2:	push   0x64022db8
640025d7:	mov    eax,fs:0x0
640025dd:	push   eax
640025de:	push   ecx
640025df:	push   esi
640025e0:	mov    eax,ds:0x6402d09c
640025e5:	xor    eax,esp
640025e7:	push   eax
640025e8:	lea    eax,[esp+0xc]
640025ec:	mov    fs:0x0,eax
640025f2:	mov    esi,ecx
640025f4:	mov    eax,DWORD PTR [esi]
640025f6:	mov    ecx,DWORD PTR [eax-0x10]
640025f9:	test   ecx,ecx
640025fb:	je     0x64002608
640025fd:	mov    edx,DWORD PTR [ecx]
640025ff:	mov    eax,DWORD PTR [edx+0x10]
64002602:	call   eax
64002604:	test   eax,eax
64002606:	jne    0x64002618
64002608:	mov    edx,DWORD PTR ds:0x6402e540
6400260e:	mov    eax,DWORD PTR [edx+0x10]
64002611:	mov    ecx,0x6402e540
64002616:	call   eax
64002618:	mov    ecx,DWORD PTR [esp+0x1c]
6400261c:	push   eax
6400261d:	push   ecx
6400261e:	lea    ecx,[esp+0x10]
64002622:	call   0x640026d0
64002627:	mov    DWORD PTR [esp+0x14],0x0
6400262f:	mov    eax,DWORD PTR [esp+0x8]
64002633:	mov    ecx,DWORD PTR [eax-0xc]
64002636:	push   ecx
64002637:	push   eax
64002638:	mov    ecx,esi
6400263a:	call   0x64002950
6400263f:	mov    DWORD PTR [esp+0x14],0xffffffff
64002647:	mov    eax,DWORD PTR [esp+0x8]
6400264b:	add    eax,0xfffffff0
6400264e:	lea    edx,[eax+0xc]
64002651:	or     ecx,0xffffffff
64002654:	lock xadd DWORD PTR [edx],ecx
64002658:	dec    ecx
64002659:	test   ecx,ecx
6400265b:	jg     0x64002667
6400265d:	mov    ecx,DWORD PTR [eax]
6400265f:	mov    edx,DWORD PTR [ecx]
64002661:	push   eax
64002662:	mov    eax,DWORD PTR [edx+0x4]
64002665:	call   eax
64002667:	mov    eax,esi
64002669:	mov    ecx,DWORD PTR [esp+0xc]
6400266d:	mov    DWORD PTR fs:0x0,ecx
64002674:	pop    ecx
64002675:	pop    esi
64002676:	add    esp,0x10
64002679:	ret    0x4
6400267c:	int3   
6400267d:	int3   
6400267e:	int3   
6400267f:	int3   
64002680:	mov    edx,DWORD PTR [esp+0x4]
64002684:	push   esi
64002685:	mov    esi,ecx
64002687:	mov    eax,edx
64002689:	push   edi
6400268a:	mov    DWORD PTR [esi+0x18],0xf
64002691:	mov    DWORD PTR [esi+0x14],0x0
64002698:	mov    BYTE PTR [esi+0x4],0x0
6400269c:	lea    edi,[eax+0x1]
6400269f:	nop
640026a0:	mov    cl,BYTE PTR [eax]
640026a2:	add    eax,0x1
640026a5:	test   cl,cl
640026a7:	jne    0x640026a0
640026a9:	sub    eax,edi
640026ab:	push   eax
640026ac:	push   edx
640026ad:	mov    ecx,esi
640026af:	call   0x64001860
640026b4:	pop    edi
640026b5:	mov    eax,esi
640026b7:	pop    esi
640026b8:	ret    0x4
640026bb:	int3   
640026bc:	int3   
640026bd:	int3   
640026be:	int3   
640026bf:	int3   
640026c0:	mov    eax,DWORD PTR [ecx]
640026c2:	push   eax
640026c3:	call   0x64012262
640026c8:	pop    ecx
640026c9:	ret    
640026ca:	int3   
640026cb:	int3   
640026cc:	int3   
640026cd:	int3   
640026ce:	int3   
640026cf:	int3   
640026d0:	push   0xffffffff
640026d2:	push   0x64022d88
640026d7:	mov    eax,fs:0x0
640026dd:	push   eax
640026de:	push   ecx
640026df:	push   esi
640026e0:	push   edi
640026e1:	mov    eax,ds:0x6402d09c
640026e6:	xor    eax,esp
640026e8:	push   eax
640026e9:	lea    eax,[esp+0x10]
640026ed:	mov    fs:0x0,eax
640026f3:	mov    esi,ecx
640026f5:	mov    DWORD PTR [esp+0xc],esi
640026f9:	mov    ecx,DWORD PTR [esp+0x24]
640026fd:	xor    eax,eax
640026ff:	test   ecx,ecx
64002701:	setne  al
64002704:	test   eax,eax
64002706:	jne    0x64002712
64002708:	push   0x80004005
6400270d:	call   0x64001040
64002712:	mov    eax,DWORD PTR [ecx]
64002714:	mov    edx,DWORD PTR [eax+0xc]
64002717:	call   edx
64002719:	add    eax,0x10
6400271c:	mov    DWORD PTR [esi],eax
6400271e:	mov    eax,DWORD PTR [esp+0x20]
64002722:	test   eax,eax
64002724:	mov    DWORD PTR [esp+0x18],0x0
6400272c:	je     0x64002752
6400272e:	test   eax,0xffff0000
64002733:	jne    0x64002752
64002735:	movzx  edi,ax
64002738:	push   0x0
6400273a:	push   edi
6400273b:	call   0x64001fa0
64002740:	add    esp,0x8
64002743:	test   eax,eax
64002745:	je     0x6400275a
64002747:	push   edi
64002748:	push   eax
64002749:	mov    ecx,esi
6400274b:	call   0x64002880
64002750:	jmp    0x6400275a
64002752:	push   eax
64002753:	mov    ecx,esi
64002755:	call   0x64002770
6400275a:	mov    eax,esi
6400275c:	mov    ecx,DWORD PTR [esp+0x10]
64002760:	mov    DWORD PTR fs:0x0,ecx
64002767:	pop    ecx
64002768:	pop    edi
64002769:	pop    esi
6400276a:	add    esp,0x10
6400276d:	ret    0x8
64002770:	push   ebx
64002771:	mov    ebx,DWORD PTR [esp+0x8]
64002775:	test   ebx,ebx
64002777:	push   ebp
64002778:	push   esi
64002779:	push   edi
6400277a:	mov    edi,ecx
6400277c:	je     0x640027f4
6400277e:	call   DWORD PTR ds:0x6402d06c
64002784:	mov    ebp,DWORD PTR ds:0x64025024
6400278a:	push   0x0
6400278c:	push   0x0
6400278e:	push   0xffffffff
64002790:	push   ebx
64002791:	push   0x0
64002793:	push   eax
64002794:	call   ebp
64002796:	mov    esi,eax
64002798:	sub    esi,0x1
6400279b:	test   esi,esi
6400279d:	jle    0x640027f4
6400279f:	mov    eax,DWORD PTR [edi]
640027a1:	mov    edx,DWORD PTR [eax-0x8]
640027a4:	sub    eax,0x10
640027a7:	mov    ecx,0x1
640027ac:	sub    ecx,DWORD PTR [eax+0xc]
640027af:	sub    edx,esi
640027b1:	or     ecx,edx
640027b3:	jge    0x640027bd
640027b5:	push   esi
640027b6:	mov    ecx,edi
640027b8:	call   0x64001e00
640027bd:	mov    eax,DWORD PTR [edi]
640027bf:	push   esi
640027c0:	push   eax
640027c1:	push   0xffffffff
640027c3:	push   ebx
640027c4:	push   0x0
640027c6:	call   DWORD PTR ds:0x6402d06c
640027cc:	push   eax
640027cd:	call   ebp
640027cf:	mov    eax,DWORD PTR [edi]
640027d1:	cmp    esi,DWORD PTR [eax-0x8]
640027d4:	jg     0x640027ea
640027d6:	mov    DWORD PTR [eax-0xc],esi
640027d9:	mov    eax,DWORD PTR [edi]
640027db:	mov    WORD PTR [eax+esi*2],0x0
640027e1:	mov    eax,edi
640027e3:	pop    edi
640027e4:	pop    esi
640027e5:	pop    ebp
640027e6:	pop    ebx
640027e7:	ret    0x4
640027ea:	push   0x80070057
640027ef:	call   0x64001040
640027f4:	mov    ecx,edi
640027f6:	call   0x640029e0
640027fb:	mov    eax,edi
640027fd:	pop    edi
640027fe:	pop    esi
640027ff:	pop    ebp
64002800:	pop    ebx
64002801:	ret    0x4
64002804:	int3   
64002805:	int3   
64002806:	int3   
64002807:	int3   
64002808:	int3   
64002809:	int3   
6400280a:	int3   
6400280b:	int3   
6400280c:	int3   
6400280d:	int3   
6400280e:	int3   
6400280f:	int3   
64002810:	push   esi
64002811:	mov    esi,DWORD PTR [esp+0x8]
64002815:	mov    ecx,DWORD PTR [esi]
64002817:	mov    eax,DWORD PTR [ecx]
64002819:	mov    edx,DWORD PTR [eax+0x10]
6400281c:	push   edi
6400281d:	call   edx
6400281f:	cmp    DWORD PTR [esi+0xc],0x0
64002823:	lea    ecx,[esi+0xc]
64002826:	jl     0x6400283c
64002828:	cmp    eax,DWORD PTR [esi]
6400282a:	jne    0x6400283c
6400282c:	mov    edi,esi
6400282e:	mov    eax,0x1
64002833:	lock xadd DWORD PTR [ecx],eax
64002837:	mov    eax,edi
64002839:	pop    edi
6400283a:	pop    esi
6400283b:	ret    
6400283c:	mov    ecx,DWORD PTR [esi+0x4]
6400283f:	mov    edx,DWORD PTR [eax]
64002841:	mov    edx,DWORD PTR [edx]
64002843:	push   0x2
64002845:	push   ecx
64002846:	mov    ecx,eax
64002848:	call   edx
6400284a:	mov    edi,eax
6400284c:	test   edi,edi
6400284e:	jne    0x64002855
64002850:	jmp    0x64001b50
64002855:	mov    eax,DWORD PTR [esi+0x4]
64002858:	mov    DWORD PTR [edi+0x4],eax
6400285b:	mov    eax,DWORD PTR [esi+0x4]
6400285e:	lea    eax,[eax+eax*1+0x2]
64002862:	push   eax
64002863:	add    esi,0x10
64002866:	push   esi
64002867:	push   eax
64002868:	lea    ecx,[edi+0x10]
6400286b:	push   ecx
6400286c:	call   0x64012418
64002871:	add    esp,0x10
64002874:	mov    eax,edi
64002876:	pop    edi
64002877:	pop    esi
64002878:	ret    
64002879:	int3   
6400287a:	int3   
6400287b:	int3   
6400287c:	int3   
6400287d:	int3   
6400287e:	int3   
6400287f:	int3   
64002880:	push   ebx
64002881:	push   esi
64002882:	mov    esi,DWORD PTR [esp+0x10]
64002886:	mov    eax,esi
64002888:	shr    eax,0x4
6400288b:	push   edi
6400288c:	mov    edi,DWORD PTR [esp+0x10]
64002890:	add    eax,0x1
64002893:	mov    ebx,ecx
64002895:	movzx  ecx,ax
64002898:	push   0x6
6400289a:	push   ecx
6400289b:	push   edi
6400289c:	call   DWORD PTR ds:0x64025038
640028a2:	test   eax,eax
640028a4:	je     0x640028b7
640028a6:	push   esi
640028a7:	push   eax
640028a8:	push   edi
640028a9:	call   0x64001f30
640028ae:	mov    esi,eax
640028b0:	add    esp,0xc
640028b3:	test   esi,esi
640028b5:	jne    0x640028bf
640028b7:	pop    edi
640028b8:	pop    esi
640028b9:	xor    eax,eax
640028bb:	pop    ebx
640028bc:	ret    0x8
640028bf:	mov    eax,DWORD PTR [ebx]
640028c1:	movzx  edi,WORD PTR [esi]
640028c4:	sub    eax,0x10
640028c7:	mov    edx,0x1
640028cc:	sub    edx,DWORD PTR [eax+0xc]
640028cf:	mov    eax,DWORD PTR [eax+0x8]
640028d2:	sub    eax,edi
640028d4:	or     edx,eax
640028d6:	jge    0x640028e0
640028d8:	push   edi
640028d9:	mov    ecx,ebx
640028db:	call   0x64001e00
640028e0:	movzx  eax,WORD PTR [esi]
640028e3:	cmp    eax,0xffffffff
640028e6:	push   ebp
640028e7:	mov    ebp,DWORD PTR [ebx]
640028e9:	lea    edx,[esi+0x2]
640028ec:	jne    0x64002905
640028ee:	mov    eax,edx
640028f0:	lea    esi,[eax+0x2]
640028f3:	mov    cx,WORD PTR [eax]
640028f6:	add    eax,0x2
640028f9:	test   cx,cx
640028fc:	jne    0x640028f3
640028fe:	sub    eax,esi
64002900:	sar    eax,1
64002902:	add    eax,0x1
64002905:	lea    ecx,[eax+eax*1]
64002908:	push   ecx
64002909:	push   edx
6400290a:	lea    esi,[edi+edi*1]
6400290d:	push   esi
6400290e:	push   ebp
6400290f:	call   0x64012418
64002914:	push   eax
64002915:	call   0x64001e90
6400291a:	add    esp,0x14
6400291d:	test   edi,edi
6400291f:	pop    ebp
64002920:	jl     0x6400293f
64002922:	mov    eax,DWORD PTR [ebx]
64002924:	cmp    edi,DWORD PTR [eax-0x8]
64002927:	jg     0x6400293f
64002929:	mov    DWORD PTR [eax-0xc],edi
6400292c:	mov    edx,DWORD PTR [ebx]
6400292e:	pop    edi
6400292f:	mov    WORD PTR [esi+edx*1],0x0
64002935:	pop    esi
64002936:	mov    eax,0x1
6400293b:	pop    ebx
6400293c:	ret    0x8
6400293f:	push   0x80070057
64002944:	call   0x64001040
64002949:	int3   
6400294a:	int3   
6400294b:	int3   
6400294c:	int3   
6400294d:	int3   
6400294e:	int3   
6400294f:	int3   
64002950:	push   ebx
64002951:	push   ebp
64002952:	push   esi
64002953:	mov    esi,DWORD PTR [esp+0x10]
64002957:	mov    ebp,ecx
64002959:	mov    eax,DWORD PTR [ebp+0x0]
6400295c:	mov    ebx,DWORD PTR [eax-0xc]
6400295f:	mov    ecx,DWORD PTR [esp+0x14]
64002963:	sub    esi,eax
64002965:	mov    edx,0x1
6400296a:	sub    edx,DWORD PTR [eax-0x4]
6400296d:	mov    eax,DWORD PTR [eax-0x8]
64002970:	push   edi
64002971:	lea    edi,[ebx+ecx*1]
64002974:	sub    eax,edi
64002976:	sar    esi,1
64002978:	or     edx,eax
6400297a:	jge    0x64002984
6400297c:	push   edi
6400297d:	mov    ecx,ebp
6400297f:	call   0x64001e00
64002984:	cmp    esi,ebx
64002986:	mov    ecx,DWORD PTR [ebp+0x0]
64002989:	ja     0x64002992
6400298b:	lea    edx,[ecx+esi*2]
6400298e:	mov    DWORD PTR [esp+0x14],edx
64002992:	mov    eax,DWORD PTR [esp+0x18]
64002996:	mov    edx,DWORD PTR [esp+0x14]
6400299a:	add    eax,eax
6400299c:	push   eax
6400299d:	push   edx
6400299e:	push   eax
6400299f:	lea    eax,[ecx+ebx*2]
640029a2:	push   eax
640029a3:	call   0x64012418
640029a8:	add    esp,0x10
640029ab:	test   edi,edi
640029ad:	jl     0x640029ca
640029af:	mov    eax,DWORD PTR [ebp+0x0]
640029b2:	cmp    edi,DWORD PTR [eax-0x8]
640029b5:	jg     0x640029ca
640029b7:	mov    DWORD PTR [eax-0xc],edi
640029ba:	mov    ecx,DWORD PTR [ebp+0x0]
640029bd:	mov    WORD PTR [ecx+edi*2],0x0
640029c3:	pop    edi
640029c4:	pop    esi
640029c5:	pop    ebp
640029c6:	pop    ebx
640029c7:	ret    0x8
640029ca:	push   0x80070057
640029cf:	call   0x64001040
640029d4:	int3   
640029d5:	int3   
640029d6:	int3   
640029d7:	int3   
640029d8:	int3   
640029d9:	int3   
640029da:	int3   
640029db:	int3   
640029dc:	int3   
640029dd:	int3   
640029de:	int3   
640029df:	int3   
640029e0:	push   esi
640029e1:	mov    esi,ecx
640029e3:	mov    ecx,DWORD PTR [esi]
640029e5:	cmp    DWORD PTR [ecx-0xc],0x0
640029e9:	lea    eax,[ecx-0x10]
640029ec:	push   edi
640029ed:	mov    edi,DWORD PTR [eax]
640029ef:	je     0x64002a3f
640029f1:	cmp    DWORD PTR [eax+0xc],0x0
640029f5:	lea    edx,[eax+0xc]
640029f8:	jge    0x64002a1b
640029fa:	cmp    DWORD PTR [ecx-0x8],0x0
640029fe:	jge    0x64002a0a
64002a00:	push   0x80070057
64002a05:	call   0x64001040
64002a0a:	mov    DWORD PTR [ecx-0xc],0x0
64002a11:	mov    eax,DWORD PTR [esi]
64002a13:	pop    edi
64002a14:	mov    WORD PTR [eax],0x0
64002a19:	pop    esi
64002a1a:	ret    
64002a1b:	or     ecx,0xffffffff
64002a1e:	lock xadd DWORD PTR [edx],ecx
64002a22:	dec    ecx
64002a23:	test   ecx,ecx
64002a25:	jg     0x64002a31
64002a27:	mov    ecx,DWORD PTR [eax]
64002a29:	mov    edx,DWORD PTR [ecx]
64002a2b:	push   eax
64002a2c:	mov    eax,DWORD PTR [edx+0x4]
64002a2f:	call   eax
64002a31:	mov    edx,DWORD PTR [edi]
64002a33:	mov    eax,DWORD PTR [edx+0xc]
64002a36:	mov    ecx,edi
64002a38:	call   eax
64002a3a:	add    eax,0x10
64002a3d:	mov    DWORD PTR [esi],eax
64002a3f:	pop    edi
64002a40:	pop    esi
64002a41:	ret    
64002a42:	int3   
64002a43:	int3   
64002a44:	int3   
64002a45:	int3   
64002a46:	int3   
64002a47:	int3   
64002a48:	int3   
64002a49:	int3   
64002a4a:	int3   
64002a4b:	int3   
64002a4c:	int3   
64002a4d:	int3   
64002a4e:	int3   
64002a4f:	int3   
64002a50:	push   ebx
64002a51:	mov    ebx,DWORD PTR [esp+0xc]
64002a55:	test   ebx,ebx
64002a57:	push   ebp
64002a58:	mov    ebp,ecx
64002a5a:	jne    0x64002a66
64002a5c:	call   0x640029e0
64002a61:	pop    ebp
64002a62:	pop    ebx
64002a63:	ret    0x8
64002a66:	push   esi
64002a67:	mov    esi,DWORD PTR [esp+0x10]
64002a6b:	test   esi,esi
64002a6d:	jne    0x64002a79
64002a6f:	push   0x80070057
64002a74:	call   0x64001040
64002a79:	mov    eax,DWORD PTR [ebp+0x0]
64002a7c:	mov    edx,DWORD PTR [eax-0x8]
64002a7f:	mov    ecx,0x1
64002a84:	sub    ecx,DWORD PTR [eax-0x4]
64002a87:	sub    esi,eax
64002a89:	sub    edx,ebx
64002a8b:	sar    esi,1
64002a8d:	or     ecx,edx
64002a8f:	push   edi
64002a90:	mov    edi,DWORD PTR [eax-0xc]
64002a93:	jge    0x64002a9d
64002a95:	push   ebx
64002a96:	mov    ecx,ebp
64002a98:	call   0x64001e00
64002a9d:	mov    eax,DWORD PTR [ebp+0x0]
64002aa0:	cmp    esi,edi
64002aa2:	lea    edi,[ebx+ebx*1]
64002aa5:	push   edi
64002aa6:	ja     0x64002ab5
64002aa8:	lea    ecx,[eax+esi*2]
64002aab:	push   ecx
64002aac:	push   edi
64002aad:	push   eax
64002aae:	call   0x64012493
64002ab3:	jmp    0x64002ac1
64002ab5:	mov    edx,DWORD PTR [esp+0x18]
64002ab9:	push   edx
64002aba:	push   edi
64002abb:	push   eax
64002abc:	call   0x64012418
64002ac1:	add    esp,0x10
64002ac4:	test   ebx,ebx
64002ac6:	jl     0x64002ae3
64002ac8:	mov    eax,DWORD PTR [ebp+0x0]
64002acb:	cmp    ebx,DWORD PTR [eax-0x8]
64002ace:	jg     0x64002ae3
64002ad0:	mov    DWORD PTR [eax-0xc],ebx
64002ad3:	mov    eax,DWORD PTR [ebp+0x0]
64002ad6:	mov    WORD PTR [edi+eax*1],0x0
64002adc:	pop    edi
64002add:	pop    esi
64002ade:	pop    ebp
64002adf:	pop    ebx
64002ae0:	ret    0x8
64002ae3:	push   0x80070057
64002ae8:	call   0x64001040
64002aed:	int3   
64002aee:	int3   
64002aef:	int3   
64002af0:	push   esi
64002af1:	mov    esi,DWORD PTR [esp+0x8]
64002af5:	test   esi,esi
64002af7:	je     0x64002b28
64002af9:	mov    eax,DWORD PTR [esp+0xc]
64002afd:	test   eax,eax
64002aff:	je     0x64002b28
64002b01:	mov    ecx,DWORD PTR [esp+0x10]
64002b05:	mov    edx,DWORD PTR [esp+0x14]
64002b09:	push   0x0
64002b0b:	push   0x0
64002b0d:	push   ecx
64002b0e:	push   esi
64002b0f:	push   0xffffffff
64002b11:	push   eax
64002b12:	push   0x0
64002b14:	push   edx
64002b15:	mov    BYTE PTR [esi],0x0
64002b18:	call   DWORD PTR ds:0x64025028
64002b1e:	neg    eax
64002b20:	sbb    eax,eax
64002b22:	and    eax,esi
64002b24:	pop    esi
64002b25:	ret    0x10
64002b28:	xor    eax,eax
64002b2a:	pop    esi
64002b2b:	ret    0x10
64002b2e:	int3   
64002b2f:	int3   
64002b30:	mov    eax,DWORD PTR [esi]
64002b32:	test   eax,eax
64002b34:	je     0x64002b43
64002b36:	push   eax
64002b37:	call   DWORD PTR ds:0x6402500c
64002b3d:	mov    DWORD PTR [esi],0x0
64002b43:	ret    
64002b44:	int3   
64002b45:	int3   
64002b46:	int3   
64002b47:	int3   
64002b48:	int3   
64002b49:	int3   
64002b4a:	int3   
64002b4b:	int3   
64002b4c:	int3   
64002b4d:	int3   
64002b4e:	int3   
64002b4f:	int3   
64002b50:	push   ecx
64002b51:	mov    eax,DWORD PTR [edi]
64002b53:	lea    ecx,[esp]
64002b56:	push   ecx
64002b57:	mov    ecx,DWORD PTR [esp+0xc]
64002b5b:	push   esi
64002b5c:	add    eax,eax
64002b5e:	lea    edx,[esp+0x14]
64002b62:	push   edx
64002b63:	mov    DWORD PTR [esp+0xc],eax
64002b67:	mov    eax,DWORD PTR [esp+0x18]
64002b6b:	push   0x0
64002b6d:	mov    DWORD PTR [edi],0x0
64002b73:	mov    edx,DWORD PTR [ecx]
64002b75:	push   eax
64002b76:	push   edx
64002b77:	call   DWORD PTR ds:0x64025008
64002b7d:	test   eax,eax
64002b7f:	jne    0x64002bbe
64002b81:	mov    eax,DWORD PTR [esp+0xc]
64002b85:	cmp    eax,0x1
64002b88:	je     0x64002b8f
64002b8a:	cmp    eax,0x2
64002b8d:	jne    0x64002baa
64002b8f:	test   esi,esi
64002b91:	mov    eax,DWORD PTR [esp]
64002b94:	je     0x64002bb8
64002b96:	test   eax,eax
64002b98:	je     0x64002bb3
64002b9a:	test   al,0x1
64002b9c:	jne    0x64002baa
64002b9e:	mov    ecx,eax
64002ba0:	shr    ecx,1
64002ba2:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002ba8:	je     0x64002bb8
64002baa:	mov    eax,0xd
64002baf:	pop    ecx
64002bb0:	ret    0x8
64002bb3:	mov    WORD PTR [esi],0x0
64002bb8:	shr    eax,1
64002bba:	mov    DWORD PTR [edi],eax
64002bbc:	xor    eax,eax
64002bbe:	pop    ecx
64002bbf:	ret    0x8
64002bc2:	int3   
64002bc3:	int3   
64002bc4:	int3   
64002bc5:	int3   
64002bc6:	int3   
64002bc7:	int3   
64002bc8:	int3   
64002bc9:	int3   
64002bca:	int3   
64002bcb:	int3   
64002bcc:	int3   
64002bcd:	int3   
64002bce:	int3   
64002bcf:	int3   
64002bd0:	ret    
64002bd1:	int3   
64002bd2:	int3   
64002bd3:	int3   
64002bd4:	int3   
64002bd5:	int3   
64002bd6:	int3   
64002bd7:	int3   
64002bd8:	int3   
64002bd9:	int3   
64002bda:	int3   
64002bdb:	int3   
64002bdc:	int3   
64002bdd:	int3   
64002bde:	int3   
64002bdf:	int3   
64002be0:	mov    eax,DWORD PTR [esp+0xc]
64002be4:	cmp    eax,0x4
64002be7:	mov    ecx,DWORD PTR [esp+0x8]
64002beb:	mov    edx,DWORD PTR [esp+0x4]
64002bef:	push   esi
64002bf0:	push   edi
64002bf1:	jb     0x64002c07
64002bf3:	mov    esi,DWORD PTR [edx]
64002bf5:	cmp    esi,DWORD PTR [ecx]
64002bf7:	jne    0x64002c0b
64002bf9:	sub    eax,0x4
64002bfc:	add    ecx,0x4
64002bff:	add    edx,0x4
64002c02:	cmp    eax,0x4
64002c05:	jae    0x64002bf3
64002c07:	test   eax,eax
64002c09:	je     0x64002c69
64002c0b:	movzx  esi,BYTE PTR [edx]
64002c0e:	movzx  edi,BYTE PTR [ecx]
64002c11:	sub    esi,edi
64002c13:	jne    0x64002c5a
64002c15:	sub    eax,0x1
64002c18:	add    ecx,0x1
64002c1b:	add    edx,0x1
64002c1e:	test   eax,eax
64002c20:	je     0x64002c69
64002c22:	movzx  esi,BYTE PTR [edx]
64002c25:	movzx  edi,BYTE PTR [ecx]
64002c28:	sub    esi,edi
64002c2a:	jne    0x64002c5a
64002c2c:	sub    eax,0x1
64002c2f:	add    ecx,0x1
64002c32:	add    edx,0x1
64002c35:	test   eax,eax
64002c37:	je     0x64002c69
64002c39:	movzx  esi,BYTE PTR [edx]
64002c3c:	movzx  edi,BYTE PTR [ecx]
64002c3f:	sub    esi,edi
64002c41:	jne    0x64002c5a
64002c43:	sub    eax,0x1
64002c46:	add    ecx,0x1
64002c49:	add    edx,0x1
64002c4c:	test   eax,eax
64002c4e:	je     0x64002c69
64002c50:	movzx  esi,BYTE PTR [edx]
64002c53:	movzx  eax,BYTE PTR [ecx]
64002c56:	sub    esi,eax
64002c58:	je     0x64002c69
64002c5a:	test   esi,esi
64002c5c:	mov    eax,0x1
64002c61:	jg     0x64002c6b
64002c63:	pop    edi
64002c64:	or     eax,0xffffffff
64002c67:	pop    esi
64002c68:	ret    
64002c69:	xor    eax,eax
64002c6b:	pop    edi
64002c6c:	pop    esi
64002c6d:	ret    
64002c6e:	int3   
64002c6f:	int3   
64002c70:	push   0xffffffff
64002c72:	push   0x64022848
64002c77:	mov    eax,fs:0x0
64002c7d:	push   eax
64002c7e:	push   ecx
64002c7f:	push   esi
64002c80:	mov    eax,ds:0x6402d09c
64002c85:	xor    eax,esp
64002c87:	push   eax
64002c88:	lea    eax,[esp+0xc]
64002c8c:	mov    fs:0x0,eax
64002c92:	mov    esi,ecx
64002c94:	mov    DWORD PTR [esp+0x8],esi
64002c98:	call   0x640122ac
64002c9d:	xor    eax,eax
64002c9f:	mov    DWORD PTR [esp+0x14],eax
64002ca3:	lea    ecx,[esi+0xc]
64002ca6:	mov    DWORD PTR [esi],0x64025310
64002cac:	push   0xffffffff
64002cae:	mov    DWORD PTR [ecx+0x14],eax
64002cb1:	mov    DWORD PTR [ecx+0x18],0xf
64002cb8:	push   eax
64002cb9:	mov    BYTE PTR [ecx+0x4],al
64002cbc:	mov    eax,DWORD PTR [esp+0x24]
64002cc0:	push   eax
64002cc1:	call   0x64001780
64002cc6:	mov    eax,esi
64002cc8:	mov    ecx,DWORD PTR [esp+0xc]
64002ccc:	mov    DWORD PTR fs:0x0,ecx
64002cd3:	pop    ecx
64002cd4:	pop    esi
64002cd5:	add    esp,0x10
64002cd8:	ret    0x4
64002cdb:	int3   
64002cdc:	int3   
64002cdd:	int3   
64002cde:	int3   
64002cdf:	int3   
64002ce0:	cmp    DWORD PTR [ecx+0x24],0x10
64002ce4:	jb     0x64002cea
64002ce6:	mov    eax,DWORD PTR [ecx+0x10]
64002ce9:	ret    
64002cea:	lea    eax,[ecx+0x10]
64002ced:	ret    
64002cee:	int3   
64002cef:	int3   
64002cf0:	push   esi
64002cf1:	mov    esi,ecx
64002cf3:	mov    DWORD PTR [esi],0x64025310
64002cf9:	cmp    DWORD PTR [esi+0x24],0x10
64002cfd:	jb     0x64002d0b
64002cff:	mov    eax,DWORD PTR [esi+0x10]
64002d02:	push   eax
64002d03:	call   0x64012262
64002d08:	add    esp,0x4
64002d0b:	xor    eax,eax
64002d0d:	mov    DWORD PTR [esi+0x24],0xf
64002d14:	mov    DWORD PTR [esi+0x20],eax
64002d17:	mov    BYTE PTR [esi+0x10],al
64002d1a:	mov    ecx,esi
64002d1c:	pop    esi
64002d1d:	jmp    0x6401237b
64002d22:	int3   
64002d23:	int3   
64002d24:	int3   
64002d25:	int3   
64002d26:	int3   
64002d27:	int3   
64002d28:	int3   
64002d29:	int3   
64002d2a:	int3   
64002d2b:	int3   
64002d2c:	int3   
64002d2d:	int3   
64002d2e:	int3   
64002d2f:	int3   
64002d30:	push   esi
64002d31:	mov    esi,ecx
64002d33:	mov    DWORD PTR [esi],0x64025310
64002d39:	cmp    DWORD PTR [esi+0x24],0x10
64002d3d:	jb     0x64002d4b
64002d3f:	mov    eax,DWORD PTR [esi+0x10]
64002d42:	push   eax
64002d43:	call   0x64012262
64002d48:	add    esp,0x4
64002d4b:	xor    eax,eax
64002d4d:	mov    DWORD PTR [esi+0x24],0xf
64002d54:	mov    DWORD PTR [esi+0x20],eax
64002d57:	mov    ecx,esi
64002d59:	mov    BYTE PTR [esi+0x10],al
64002d5c:	call   0x6401237b
64002d61:	test   BYTE PTR [esp+0x8],0x1
64002d66:	je     0x64002d71
64002d68:	push   esi
64002d69:	call   0x64012262
64002d6e:	add    esp,0x4
64002d71:	mov    eax,esi
64002d73:	pop    esi
64002d74:	ret    0x4
64002d77:	int3   
64002d78:	int3   
64002d79:	int3   
64002d7a:	int3   
64002d7b:	int3   
64002d7c:	int3   
64002d7d:	int3   
64002d7e:	int3   
64002d7f:	int3   
64002d80:	mov    eax,DWORD PTR [esp+0x4]
64002d84:	push   esi
64002d85:	push   eax
64002d86:	mov    esi,ecx
64002d88:	call   0x64002da0
64002d8d:	mov    DWORD PTR [esi],0x64025328
64002d93:	mov    eax,esi
64002d95:	pop    esi
64002d96:	ret    0x4
64002d99:	int3   
64002d9a:	int3   
64002d9b:	int3   
64002d9c:	int3   
64002d9d:	int3   
64002d9e:	int3   
64002d9f:	int3   
64002da0:	push   0xffffffff
64002da2:	push   0x64022818
64002da7:	mov    eax,fs:0x0
64002dad:	push   eax
64002dae:	push   ecx
64002daf:	push   esi
64002db0:	push   edi
64002db1:	mov    eax,ds:0x6402d09c
64002db6:	xor    eax,esp
64002db8:	push   eax
64002db9:	lea    eax,[esp+0x10]
64002dbd:	mov    fs:0x0,eax
64002dc3:	mov    esi,ecx
64002dc5:	mov    DWORD PTR [esp+0xc],esi
64002dc9:	mov    edi,DWORD PTR [esp+0x20]
64002dcd:	push   edi
64002dce:	call   0x64012323
64002dd3:	xor    edx,edx
64002dd5:	mov    DWORD PTR [esp+0x18],edx
64002dd9:	push   0xffffffff
64002ddb:	lea    ecx,[esi+0xc]
64002dde:	mov    DWORD PTR [esi],0x64025310
64002de4:	lea    eax,[edi+0xc]
64002de7:	push   edx
64002de8:	mov    DWORD PTR [ecx+0x18],0xf
64002def:	mov    DWORD PTR [ecx+0x14],edx
64002df2:	push   eax
64002df3:	mov    BYTE PTR [ecx+0x4],dl
64002df6:	call   0x64001780
64002dfb:	mov    eax,esi
64002dfd:	mov    ecx,DWORD PTR [esp+0x10]
64002e01:	mov    DWORD PTR fs:0x0,ecx
64002e08:	pop    ecx
64002e09:	pop    edi
64002e0a:	pop    esi
64002e0b:	add    esp,0x10
64002e0e:	ret    0x4
64002e11:	int3   
64002e12:	int3   
64002e13:	int3   
64002e14:	int3   
64002e15:	int3   
64002e16:	int3   
64002e17:	int3   
64002e18:	int3   
64002e19:	int3   
64002e1a:	int3   
64002e1b:	int3   
64002e1c:	int3   
64002e1d:	int3   
64002e1e:	int3   
64002e1f:	int3   
64002e20:	sub    esp,0x6c
64002e23:	mov    eax,ds:0x6402d09c
64002e28:	xor    eax,esp
64002e2a:	mov    DWORD PTR [esp+0x68],eax
64002e2e:	mov    eax,DWORD PTR [esp+0x74]
64002e32:	movzx  ecx,BYTE PTR [eax+0xf]
64002e36:	movzx  edx,BYTE PTR [eax+0xe]
64002e3a:	push   esi
64002e3b:	push   ecx
64002e3c:	movzx  ecx,BYTE PTR [eax+0xd]
64002e40:	push   edx
64002e41:	movzx  edx,BYTE PTR [eax+0xc]
64002e45:	push   ecx
64002e46:	movzx  ecx,BYTE PTR [eax+0xb]
64002e4a:	push   edx
64002e4b:	movzx  edx,BYTE PTR [eax+0xa]
64002e4f:	mov    esi,DWORD PTR [esp+0x84]
64002e56:	push   ecx
64002e57:	movzx  ecx,BYTE PTR [eax+0x9]
64002e5b:	push   edx
64002e5c:	movzx  edx,BYTE PTR [eax+0x8]
64002e60:	push   ecx
64002e61:	movzx  ecx,WORD PTR [eax+0x6]
64002e65:	push   edx
64002e66:	movzx  edx,WORD PTR [eax+0x4]
64002e6a:	mov    eax,DWORD PTR [eax]
64002e6c:	push   ecx
64002e6d:	push   edx
64002e6e:	push   eax
64002e6f:	push   0x640276f8
64002e74:	push   0x32
64002e76:	push   0x64027738
64002e7b:	mov    DWORD PTR [esp+0x3c],0x0
64002e83:	call   0x64005710
64002e88:	add    esp,0xc
64002e8b:	push   eax
64002e8c:	lea    ecx,[esp+0x38]
64002e90:	push   0x64
64002e92:	push   ecx
64002e93:	call   0x64013606
64002e98:	add    esp,0x38
64002e9b:	lea    edx,[esp+0x8]
64002e9f:	push   edx
64002ea0:	mov    ecx,esi
64002ea2:	call   0x64005470
64002ea7:	mov    ecx,DWORD PTR [esp+0x6c]
64002eab:	mov    eax,esi
64002ead:	pop    esi
64002eae:	xor    ecx,esp
64002eb0:	call   0x64012abc
64002eb5:	add    esp,0x6c
64002eb8:	ret    
64002eb9:	int3   
64002eba:	int3   
64002ebb:	int3   
64002ebc:	int3   
64002ebd:	int3   
64002ebe:	int3   
64002ebf:	int3   
64002ec0:	push   0xffffffff
64002ec2:	push   0x64022d58
64002ec7:	mov    eax,fs:0x0
64002ecd:	push   eax
64002ece:	sub    esp,0x24
64002ed1:	mov    eax,ds:0x6402d09c
64002ed6:	xor    eax,esp
64002ed8:	mov    DWORD PTR [esp+0x20],eax
64002edc:	push   ebx
64002edd:	push   ebp
64002ede:	push   edi
64002edf:	mov    eax,ds:0x6402d09c
64002ee4:	xor    eax,esp
64002ee6:	push   eax
64002ee7:	lea    eax,[esp+0x34]
64002eeb:	mov    fs:0x0,eax
64002ef1:	mov    DWORD PTR [esp+0x3c],0x0
64002ef9:	call   DWORD PTR ds:0x6402d06c
64002eff:	mov    eax,ds:0x64025c14
64002f04:	mov    ecx,DWORD PTR ds:0x64025c18
64002f0a:	mov    edx,DWORD PTR ds:0x64025c1c
64002f10:	mov    DWORD PTR [esp+0x20],eax
64002f14:	mov    eax,ds:0x64025c20
64002f19:	mov    DWORD PTR [esp+0x2c],eax
64002f1d:	mov    eax,DWORD PTR [esp+0x44]
64002f21:	mov    DWORD PTR [esp+0x24],ecx
64002f25:	mov    DWORD PTR [esp+0x28],edx
64002f29:	cmp    DWORD PTR [eax-0xc],0x0
64002f2d:	jle    0x64002f4d
64002f2f:	lea    ebx,[esp+0x44]
64002f33:	call   0x64005640
64002f38:	mov    edi,ebx
64002f3a:	call   0x64005f10
64002f3f:	call   0x640055c0
64002f44:	call   0x64005f10
64002f49:	mov    eax,DWORD PTR [esp+0x44]
64002f4d:	cmp    DWORD PTR [eax-0x4],0x1
64002f51:	jle    0x64002f64
64002f53:	mov    ecx,DWORD PTR [eax-0xc]
64002f56:	push   ecx
64002f57:	lea    ecx,[esp+0x48]
64002f5b:	call   0x64001950
64002f60:	mov    eax,DWORD PTR [esp+0x44]
64002f64:	lea    edx,[esp+0x20]
64002f68:	push   edx
64002f69:	push   eax
64002f6a:	call   DWORD PTR ds:0x640251ac
64002f70:	test   eax,eax
64002f72:	je     0x64002f91
64002f74:	mov    eax,ds:0x64025c20
64002f79:	mov    edi,DWORD PTR ds:0x64025c14
64002f7f:	mov    ebx,DWORD PTR ds:0x64025c18
64002f85:	mov    ebp,DWORD PTR ds:0x64025c1c
64002f8b:	mov    DWORD PTR [esp+0x1c],eax
64002f8f:	jmp    0x64002fa5
64002f91:	mov    edx,DWORD PTR [esp+0x2c]
64002f95:	mov    edi,DWORD PTR [esp+0x20]
64002f99:	mov    ebx,DWORD PTR [esp+0x24]
64002f9d:	mov    ebp,DWORD PTR [esp+0x28]
64002fa1:	mov    DWORD PTR [esp+0x1c],edx
64002fa5:	mov    DWORD PTR [esp+0x3c],0xffffffff
64002fad:	mov    eax,DWORD PTR [esp+0x44]
64002fb1:	add    eax,0xfffffff0
64002fb4:	or     edx,0xffffffff
64002fb7:	lea    ecx,[eax+0xc]
64002fba:	lock xadd DWORD PTR [ecx],edx
64002fbe:	dec    edx
64002fbf:	test   edx,edx
64002fc1:	jg     0x64002fcd
64002fc3:	mov    ecx,DWORD PTR [eax]
64002fc5:	mov    edx,DWORD PTR [ecx]
64002fc7:	push   eax
64002fc8:	mov    eax,DWORD PTR [edx+0x4]
64002fcb:	call   eax
64002fcd:	mov    ecx,DWORD PTR [esp+0x1c]
64002fd1:	mov    DWORD PTR [esi],edi
64002fd3:	mov    DWORD PTR [esi+0x4],ebx
64002fd6:	mov    DWORD PTR [esi+0x8],ebp
64002fd9:	mov    eax,esi
64002fdb:	mov    DWORD PTR [esi+0xc],ecx
64002fde:	mov    ecx,DWORD PTR [esp+0x34]
64002fe2:	mov    DWORD PTR fs:0x0,ecx
64002fe9:	pop    ecx
64002fea:	pop    edi
64002feb:	pop    ebp
64002fec:	pop    ebx
64002fed:	mov    ecx,DWORD PTR [esp+0x20]
64002ff1:	xor    ecx,esp
64002ff3:	call   0x64012abc
64002ff8:	add    esp,0x30
64002ffb:	ret    
64002ffc:	int3   
64002ffd:	int3   
64002ffe:	int3   
64002fff:	int3   
64003000:	push   ebp
64003001:	mov    ebp,esp
64003003:	sub    esp,0x18
64003006:	mov    eax,ds:0x6402d09c
6400300b:	xor    eax,ebp
6400300d:	mov    DWORD PTR [ebp-0x4],eax
64003010:	mov    eax,DWORD PTR [ebp+0x8]
64003013:	push   ebx
64003014:	push   esi
64003015:	push   edi
64003016:	mov    DWORD PTR [ebp-0x14],eax
64003019:	mov    DWORD PTR [ebp-0x18],0x0
64003020:	call   DWORD PTR ds:0x6402d06c
64003026:	movzx  ecx,BYTE PTR [ebp+0xc]
6400302a:	push   ecx
6400302b:	push   0x6402776c
64003030:	push   0x6
64003032:	push   0x640277a0
64003037:	mov    ebx,eax
64003039:	call   0x64005710
6400303e:	add    esp,0xc
64003041:	push   eax
64003042:	lea    edx,[ebp-0x10]
64003045:	push   edx
64003046:	call   0x6401358b
6400304b:	add    esp,0xc
6400304e:	lea    eax,[ebp-0x10]
64003051:	push   eax
64003052:	call   DWORD PTR ds:0x64025058
64003058:	mov    esi,eax
6400305a:	add    esi,0x1
6400305d:	cmp    esi,0x3fffffff
64003063:	jg     0x64003091
64003065:	lea    eax,[esi+esi*1]
64003068:	call   0x64013240
6400306d:	mov    edi,esp
6400306f:	test   edi,edi
64003071:	je     0x64003091
64003073:	push   esi
64003074:	push   edi
64003075:	push   0xffffffff
64003077:	lea    ecx,[ebp-0x10]
6400307a:	push   ecx
6400307b:	push   0x0
6400307d:	push   ebx
6400307e:	mov    WORD PTR [edi],0x0
64003083:	call   DWORD PTR ds:0x64025024
64003089:	neg    eax
6400308b:	sbb    eax,eax
6400308d:	and    eax,edi
6400308f:	jmp    0x64003093
64003091:	xor    eax,eax
64003093:	mov    esi,DWORD PTR [ebp-0x14]
64003096:	push   eax
64003097:	mov    ecx,esi
64003099:	call   0x64002500
6400309e:	mov    eax,esi
640030a0:	lea    esp,[ebp-0x24]
640030a3:	pop    edi
640030a4:	pop    esi
640030a5:	pop    ebx
640030a6:	mov    ecx,DWORD PTR [ebp-0x4]
640030a9:	xor    ecx,ebp
640030ab:	call   0x64012abc
640030b0:	mov    esp,ebp
640030b2:	pop    ebp
640030b3:	ret    
640030b4:	int3   
640030b5:	int3   
640030b6:	int3   
640030b7:	int3   
640030b8:	int3   
640030b9:	int3   
640030ba:	int3   
640030bb:	int3   
640030bc:	int3   
640030bd:	int3   
640030be:	int3   
640030bf:	int3   
640030c0:	push   0xffffffff
640030c2:	push   0x64023b89
640030c7:	mov    eax,fs:0x0
640030cd:	push   eax
640030ce:	sub    esp,0x20
640030d1:	push   ebx
640030d2:	push   ebp
640030d3:	push   esi
640030d4:	push   edi
640030d5:	mov    eax,ds:0x6402d09c
640030da:	xor    eax,esp
640030dc:	push   eax
640030dd:	lea    eax,[esp+0x34]
640030e1:	mov    fs:0x0,eax
640030e7:	xor    ebx,ebx
640030e9:	mov    DWORD PTR [esp+0x3c],ebx
640030ed:	mov    DWORD PTR [esp+0x18],ebx
640030f1:	mov    eax,ds:0x6402e540
640030f6:	mov    edx,DWORD PTR [eax+0xc]
640030f9:	mov    ecx,0x6402e540
640030fe:	call   edx
64003100:	mov    edi,DWORD PTR [esp+0x44]
64003104:	add    eax,0x10
64003107:	mov    DWORD PTR [edi],eax
64003109:	mov    esi,DWORD PTR [esp+0x48]
6400310d:	mov    DWORD PTR [esp+0x3c],ebx
64003111:	mov    eax,DWORD PTR [esi]
64003113:	mov    ecx,0x1
64003118:	sub    eax,0x10
6400311b:	cmp    DWORD PTR [eax+0xc],ecx
6400311e:	mov    DWORD PTR [esp+0x18],ecx
64003122:	jle    0x6400312f
64003124:	mov    eax,DWORD PTR [eax+0x4]
64003127:	push   eax
64003128:	mov    ecx,esi
6400312a:	call   0x64001950
6400312f:	mov    ebp,DWORD PTR [esi]
64003131:	movzx  eax,WORD PTR [ebp+0x0]
64003135:	cmp    ax,bx
64003138:	je     0x640033d9
6400313e:	cmp    ax,0x41
64003142:	jb     0x6400314e
64003144:	cmp    ax,0x5a
64003148:	jbe    0x6400337f
6400314e:	cmp    ax,0x61
64003152:	jb     0x6400315e
64003154:	cmp    ax,0x7a
64003158:	jbe    0x6400337f
6400315e:	cmp    ax,0x30
64003162:	jb     0x64003179
64003164:	cmp    ax,0x39
64003168:	ja     0x64003179
6400316a:	movzx  ecx,BYTE PTR [ebp+0x0]
6400316e:	push   ecx
6400316f:	call   0x64005500
64003174:	jmp    0x640033c9
64003179:	cmp    ax,0x20
6400317d:	jne    0x640031cb
6400317f:	mov    eax,DWORD PTR [edi]
64003181:	mov    ebx,DWORD PTR [eax-0xc]
64003184:	mov    ecx,0x1
64003189:	sub    ecx,DWORD PTR [eax-0x4]
6400318c:	mov    eax,DWORD PTR [eax-0x8]
6400318f:	lea    esi,[ebx+0x1]
64003192:	sub    eax,esi
64003194:	or     eax,ecx
64003196:	jge    0x640031a0
64003198:	push   esi
64003199:	mov    ecx,edi
6400319b:	call   0x64001e00
640031a0:	test   esi,esi
640031a2:	mov    eax,DWORD PTR [edi]
640031a4:	mov    WORD PTR [eax+ebx*2],0x2b
640031aa:	jl     0x640033ef
640031b0:	mov    eax,DWORD PTR [edi]
640031b2:	cmp    esi,DWORD PTR [eax-0x8]
640031b5:	jg     0x640033ef
640031bb:	mov    DWORD PTR [eax-0xc],esi
640031be:	mov    edx,DWORD PTR [edi]
640031c0:	mov    WORD PTR [edx+esi*2],0x0
640031c6:	jmp    0x640033c9
640031cb:	cmp    ax,0x2d
640031cf:	je     0x6400337f
640031d5:	cmp    ax,0x5f
640031d9:	je     0x6400337f
640031df:	cmp    ax,0x2e
640031e3:	je     0x6400337f
640031e9:	cmp    ax,0x21
640031ed:	je     0x6400337f
640031f3:	cmp    ax,0x7e
640031f7:	je     0x6400337f
640031fd:	cmp    ax,0x2a
64003201:	je     0x6400337f
64003207:	cmp    ax,0x27
6400320b:	je     0x6400337f
64003211:	cmp    ax,0x28
64003215:	je     0x6400337f
6400321b:	cmp    ax,0x29
6400321f:	je     0x6400337f
64003225:	cmp    ax,0x7f
64003229:	ja     0x64003260
6400322b:	movzx  eax,BYTE PTR [ebp+0x0]
6400322f:	push   eax
64003230:	lea    ecx,[esp+0x20]
64003234:	push   ecx
64003235:	call   0x64003000
6400323a:	add    esp,0x8
6400323d:	push   eax
6400323e:	mov    ecx,edi
64003240:	mov    DWORD PTR [esp+0x40],0x1
64003248:	call   0x640025b0
6400324d:	lea    ecx,[esp+0x1c]
64003251:	mov    BYTE PTR [esp+0x3c],0x0
64003256:	call   0x64001930
6400325b:	jmp    0x640033c9
64003260:	cmp    ax,0x7ff
64003264:	ja     0x640032d5
64003266:	shr    eax,0x6
64003269:	or     eax,0xffffffc0
6400326c:	push   eax
6400326d:	lea    edx,[esp+0x24]
64003271:	push   edx
64003272:	call   0x64003000
64003277:	add    esp,0x8
6400327a:	push   eax
6400327b:	mov    ecx,edi
6400327d:	mov    DWORD PTR [esp+0x40],0x2
64003285:	call   0x640025b0
6400328a:	lea    ecx,[esp+0x20]
6400328e:	mov    BYTE PTR [esp+0x3c],0x0
64003293:	call   0x64001930
64003298:	movzx  eax,BYTE PTR [ebp+0x0]
6400329c:	and    eax,0xffffff3f
640032a1:	or     eax,0xffffff80
640032a4:	push   eax
640032a5:	lea    ecx,[esp+0x28]
640032a9:	push   ecx
640032aa:	call   0x64003000
640032af:	add    esp,0x8
640032b2:	push   eax
640032b3:	mov    ecx,edi
640032b5:	mov    DWORD PTR [esp+0x40],0x3
640032bd:	call   0x640025b0
640032c2:	lea    ecx,[esp+0x24]
640032c6:	mov    BYTE PTR [esp+0x3c],0x0
640032cb:	call   0x64001930
640032d0:	jmp    0x640033c9
640032d5:	shr    ax,0xc
640032d9:	lea    edx,[esp+0x28]
640032dd:	or     eax,0xffffffe0
640032e0:	push   eax
640032e1:	push   edx
640032e2:	call   0x64003000
640032e7:	add    esp,0x8
640032ea:	push   eax
640032eb:	mov    ecx,edi
640032ed:	mov    DWORD PTR [esp+0x40],0x4
640032f5:	call   0x640025b0
640032fa:	lea    ecx,[esp+0x28]
640032fe:	mov    BYTE PTR [esp+0x3c],0x0
64003303:	call   0x64001930
64003308:	movzx  eax,WORD PTR [ebp+0x0]
6400330c:	shr    ax,0x6
64003310:	lea    ecx,[esp+0x2c]
64003314:	and    eax,0xffffff3f
64003319:	or     eax,0xffffff80
6400331c:	push   eax
6400331d:	push   ecx
6400331e:	call   0x64003000
64003323:	add    esp,0x8
64003326:	push   eax
64003327:	mov    ecx,edi
64003329:	mov    DWORD PTR [esp+0x40],0x5
64003331:	call   0x640025b0
64003336:	lea    ecx,[esp+0x2c]
6400333a:	mov    BYTE PTR [esp+0x3c],0x0
6400333f:	call   0x64001930
64003344:	movzx  edx,BYTE PTR [ebp+0x0]
64003348:	and    edx,0xffffff3f
6400334e:	or     edx,0xffffff80
64003351:	push   edx
64003352:	lea    eax,[esp+0x34]
64003356:	push   eax
64003357:	call   0x64003000
6400335c:	add    esp,0x8
6400335f:	push   eax
64003360:	mov    ecx,edi
64003362:	mov    DWORD PTR [esp+0x40],0x6
6400336a:	call   0x640025b0
6400336f:	lea    ecx,[esp+0x30]
64003373:	mov    BYTE PTR [esp+0x3c],0x0
64003378:	call   0x64001930
6400337d:	jmp    0x640033c9
6400337f:	mov    cl,BYTE PTR [ebp+0x0]
64003382:	mov    eax,DWORD PTR [edi]
64003384:	mov    ebx,DWORD PTR [eax-0xc]
64003387:	mov    BYTE PTR [esp+0x14],cl
6400338b:	mov    ecx,0x1
64003390:	sub    ecx,DWORD PTR [eax-0x4]
64003393:	mov    eax,DWORD PTR [eax-0x8]
64003396:	lea    esi,[ebx+0x1]
64003399:	sub    eax,esi
6400339b:	or     eax,ecx
6400339d:	jge    0x640033a7
6400339f:	push   esi
640033a0:	mov    ecx,edi
640033a2:	call   0x64001e00
640033a7:	test   esi,esi
640033a9:	movsx  dx,BYTE PTR [esp+0x14]
640033af:	mov    eax,DWORD PTR [edi]
640033b1:	mov    WORD PTR [eax+ebx*2],dx
640033b5:	jl     0x640033ef
640033b7:	mov    eax,DWORD PTR [edi]
640033b9:	cmp    esi,DWORD PTR [eax-0x8]
640033bc:	jg     0x640033ef
640033be:	mov    DWORD PTR [eax-0xc],esi
640033c1:	mov    eax,DWORD PTR [edi]
640033c3:	mov    WORD PTR [eax+esi*2],0x0
640033c9:	movzx  eax,WORD PTR [ebp+0x2]
640033cd:	add    ebp,0x2
640033d0:	test   ax,ax
640033d3:	jne    0x6400313e
640033d9:	mov    eax,edi
640033db:	mov    ecx,DWORD PTR [esp+0x34]
640033df:	mov    DWORD PTR fs:0x0,ecx
640033e6:	pop    ecx
640033e7:	pop    edi
640033e8:	pop    esi
640033e9:	pop    ebp
640033ea:	pop    ebx
640033eb:	add    esp,0x2c
640033ee:	ret    
640033ef:	push   0x80070057
640033f4:	call   0x64001040
640033f9:	int3   
640033fa:	int3   
640033fb:	int3   
640033fc:	int3   
640033fd:	int3   
640033fe:	int3   
640033ff:	int3   
64003400:	push   0xffffffff
64003402:	push   0x64023a19
64003407:	mov    eax,fs:0x0
6400340d:	push   eax
6400340e:	sub    esp,0x48
64003411:	push   ebx
64003412:	push   esi
64003413:	push   edi
64003414:	mov    eax,ds:0x6402d09c
64003419:	xor    eax,esp
6400341b:	push   eax
6400341c:	lea    eax,[esp+0x58]
64003420:	mov    fs:0x0,eax
64003426:	xor    ebx,ebx
64003428:	mov    DWORD PTR [esp+0x60],ebx
6400342c:	mov    DWORD PTR [esp+0x10],ebx
64003430:	mov    eax,ds:0x6402e540
64003435:	mov    edx,DWORD PTR [eax+0xc]
64003438:	mov    ecx,0x6402e540
6400343d:	call   edx
6400343f:	mov    edi,DWORD PTR [esp+0x68]
64003443:	add    eax,0x10
64003446:	mov    DWORD PTR [edi],eax
64003448:	mov    DWORD PTR [esp+0x60],ebx
6400344c:	mov    ecx,0x1
64003451:	sub    ecx,DWORD PTR [eax-0x4]
64003454:	mov    eax,DWORD PTR [eax-0x8]
64003457:	sub    eax,0x800
6400345c:	cmp    BYTE PTR [esp+0x6c],bl
64003460:	mov    DWORD PTR [esp+0x10],0x1
64003468:	je     0x640034fb
6400346e:	or     eax,ecx
64003470:	jge    0x6400347e
64003472:	push   0x800
64003477:	mov    ecx,edi
64003479:	call   0x64001e00
6400347e:	mov    eax,DWORD PTR [edi]
64003480:	push   0x800
64003485:	push   eax
64003486:	call   0x6400d2e0
6400348b:	call   eax
6400348d:	test   eax,eax
6400348f:	jne    0x64003582
64003495:	push   0x640277a8
6400349a:	push   0x22
6400349c:	push   0x640277d4
640034a1:	call   0x64005710
640034a6:	mov    ecx,eax
640034a8:	add    esp,0xc
640034ab:	mov    DWORD PTR [esp+0x2c],0xf
640034b3:	mov    DWORD PTR [esp+0x28],ebx
640034b7:	mov    BYTE PTR [esp+0x18],bl
640034bb:	lea    esi,[ecx+0x1]
640034be:	mov    edi,edi
640034c0:	mov    dl,BYTE PTR [ecx]
640034c2:	add    ecx,0x1
640034c5:	cmp    dl,bl
640034c7:	jne    0x640034c0
640034c9:	sub    ecx,esi
640034cb:	push   ecx
640034cc:	push   eax
640034cd:	lea    ecx,[esp+0x1c]
640034d1:	call   0x64001860
640034d6:	lea    eax,[esp+0x14]
640034da:	push   eax
640034db:	lea    ecx,[esp+0x34]
640034df:	mov    DWORD PTR [esp+0x64],0x1
640034e7:	call   0x64002020
640034ec:	push   0x6402ab5c
640034f1:	lea    ecx,[esp+0x34]
640034f5:	push   ecx
640034f6:	call   0x640126ab
640034fb:	or     eax,ecx
640034fd:	jge    0x6400350b
640034ff:	push   0x800
64003504:	mov    ecx,edi
64003506:	call   0x64001e00
6400350b:	mov    eax,DWORD PTR [edi]
6400350d:	push   0x800
64003512:	push   eax
64003513:	call   0x6400cb00
64003518:	call   eax
6400351a:	test   eax,eax
6400351c:	jne    0x64003582
6400351e:	push   0x640277f8
64003523:	push   0x1c
64003525:	push   0x64027824
6400352a:	call   0x64005710
6400352f:	mov    ecx,eax
64003531:	add    esp,0xc
64003534:	mov    DWORD PTR [esp+0x2c],0xf
6400353c:	mov    DWORD PTR [esp+0x28],ebx
64003540:	mov    BYTE PTR [esp+0x18],bl
64003544:	lea    esi,[ecx+0x1]
64003547:	mov    dl,BYTE PTR [ecx]
64003549:	add    ecx,0x1
6400354c:	cmp    dl,bl
6400354e:	jne    0x64003547
64003550:	sub    ecx,esi
64003552:	push   ecx
64003553:	push   eax
64003554:	lea    ecx,[esp+0x1c]
64003558:	call   0x64001860
6400355d:	lea    edx,[esp+0x14]
64003561:	push   edx
64003562:	lea    ecx,[esp+0x34]
64003566:	mov    DWORD PTR [esp+0x64],0x2
6400356e:	call   0x64002020
64003573:	push   0x6402ab5c
64003578:	lea    eax,[esp+0x34]
6400357c:	push   eax
6400357d:	call   0x640126ab
64003582:	mov    edx,DWORD PTR [edi]
64003584:	cmp    edx,ebx
64003586:	jne    0x6400358c
64003588:	xor    eax,eax
6400358a:	jmp    0x640035a2
6400358c:	mov    eax,edx
6400358e:	lea    esi,[eax+0x2]
64003591:	mov    cx,WORD PTR [eax]
64003594:	add    eax,0x2
64003597:	cmp    cx,bx
6400359a:	jne    0x64003591
6400359c:	sub    eax,esi
6400359e:	sar    eax,1
640035a0:	js     0x640035e4
640035a2:	cmp    eax,DWORD PTR [edx-0x8]
640035a5:	jg     0x640035e4
640035a7:	mov    DWORD PTR [edx-0xc],eax
640035aa:	mov    ecx,DWORD PTR [edi]
640035ac:	mov    WORD PTR [ecx+eax*2],bx
640035b0:	mov    ecx,DWORD PTR [edi]
640035b2:	mov    edx,DWORD PTR [ecx-0xc]
640035b5:	lea    eax,[edx-0x1]
640035b8:	cmp    eax,ebx
640035ba:	jl     0x640035e4
640035bc:	cmp    eax,edx
640035be:	jg     0x640035e4
640035c0:	movzx  eax,WORD PTR [ecx+eax*2]
640035c4:	cmp    ax,0x5c
640035c8:	je     0x640035cf
640035ca:	call   0x64005560
640035cf:	mov    eax,edi
640035d1:	mov    ecx,DWORD PTR [esp+0x58]
640035d5:	mov    DWORD PTR fs:0x0,ecx
640035dc:	pop    ecx
640035dd:	pop    edi
640035de:	pop    esi
640035df:	pop    ebx
640035e0:	add    esp,0x54
640035e3:	ret    
640035e4:	push   0x80070057
640035e9:	call   0x64001040
640035ee:	int3   
640035ef:	int3   
640035f0:	push   0xffffffff
640035f2:	push   0x64023b21
640035f7:	mov    eax,fs:0x0
640035fd:	push   eax
640035fe:	sub    esp,0x48
64003601:	push   ebx
64003602:	push   ebp
64003603:	push   esi
64003604:	push   edi
64003605:	mov    eax,ds:0x6402d09c
6400360a:	xor    eax,esp
6400360c:	push   eax
6400360d:	lea    eax,[esp+0x5c]
64003611:	mov    fs:0x0,eax
64003617:	mov    esi,DWORD PTR [esp+0x6c]
6400361b:	xor    ebx,ebx
6400361d:	push   ebx
6400361e:	mov    DWORD PTR [esp+0x68],ebx
64003622:	push   esi
64003623:	mov    DWORD PTR [esp+0x1c],ebx
64003627:	call   0x64003400
6400362c:	add    esp,0x8
6400362f:	mov    DWORD PTR [esp+0x64],ebx
64003633:	mov    eax,DWORD PTR [esi]
64003635:	mov    ebp,0x1
6400363a:	sub    eax,0x10
6400363d:	cmp    DWORD PTR [eax+0xc],ebp
64003640:	mov    DWORD PTR [esp+0x14],ebp
64003644:	jle    0x64003651
64003646:	mov    eax,DWORD PTR [eax+0x4]
64003649:	push   eax
6400364a:	mov    ecx,esi
6400364c:	call   0x64001950
64003651:	mov    eax,DWORD PTR [esi]
64003653:	push   0x5c
64003655:	push   eax
64003656:	call   0x64013687
6400365b:	mov    edi,eax
6400365d:	add    esp,0x8
64003660:	cmp    edi,ebx
64003662:	jne    0x640036c6
64003664:	push   0x64027844
64003669:	push   0x18
6400366b:	push   0x64027884
64003670:	call   0x64005710
64003675:	mov    ecx,eax
64003677:	add    esp,0xc
6400367a:	mov    DWORD PTR [esp+0x30],0xf
64003682:	mov    DWORD PTR [esp+0x2c],ebx
64003686:	mov    BYTE PTR [esp+0x1c],bl
6400368a:	lea    esi,[ecx+0x1]
6400368d:	lea    ecx,[ecx+0x0]
64003690:	mov    dl,BYTE PTR [ecx]
64003692:	add    ecx,ebp
64003694:	cmp    dl,bl
64003696:	jne    0x64003690
64003698:	sub    ecx,esi
6400369a:	push   ecx
6400369b:	push   eax
6400369c:	lea    ecx,[esp+0x20]
640036a0:	call   0x64001860
640036a5:	lea    ecx,[esp+0x18]
640036a9:	push   ecx
640036aa:	lea    ecx,[esp+0x38]
640036ae:	mov    DWORD PTR [esp+0x68],ebp
640036b2:	call   0x64002020
640036b7:	push   0x6402ab5c
640036bc:	lea    edx,[esp+0x38]
640036c0:	push   edx
640036c1:	call   0x640126ab
640036c6:	mov    eax,DWORD PTR [esi]
640036c8:	sub    eax,0x10
640036cb:	cmp    DWORD PTR [eax+0xc],ebp
640036ce:	jle    0x640036db
640036d0:	mov    eax,DWORD PTR [eax+0x4]
640036d3:	push   eax
640036d4:	mov    ecx,esi
640036d6:	call   0x64001950
640036db:	mov    ecx,DWORD PTR [esi]
640036dd:	sub    edi,ecx
640036df:	sar    edi,1
640036e1:	add    edi,ebp
640036e3:	cmp    ecx,ebx
640036e5:	jne    0x640036eb
640036e7:	xor    eax,eax
640036e9:	jmp    0x64003706
640036eb:	mov    eax,ecx
640036ed:	lea    ebp,[eax+0x2]
640036f0:	mov    dx,WORD PTR [eax]
640036f3:	add    eax,0x2
640036f6:	cmp    dx,bx
640036f9:	jne    0x640036f0
640036fb:	sub    eax,ebp
640036fd:	sar    eax,1
640036ff:	js     0x64003759
64003701:	mov    ebp,0x1
64003706:	cmp    eax,DWORD PTR [ecx-0x8]
64003709:	jg     0x64003759
6400370b:	mov    DWORD PTR [ecx-0xc],eax
6400370e:	mov    ecx,DWORD PTR [esi]
64003710:	mov    WORD PTR [ecx+eax*2],bx
64003714:	mov    eax,DWORD PTR [esi]
64003716:	sub    eax,0x10
64003719:	mov    ecx,ebp
6400371b:	sub    ecx,DWORD PTR [eax+0xc]
6400371e:	mov    eax,DWORD PTR [eax+0x8]
64003721:	sub    eax,edi
64003723:	or     eax,ecx
64003725:	jge    0x6400372f
64003727:	push   edi
64003728:	mov    ecx,esi
6400372a:	call   0x64001e00
6400372f:	cmp    edi,ebx
64003731:	jl     0x64003759
64003733:	mov    eax,DWORD PTR [esi]
64003735:	cmp    edi,DWORD PTR [eax-0x8]
64003738:	jg     0x64003759
6400373a:	mov    DWORD PTR [eax-0xc],edi
6400373d:	mov    edx,DWORD PTR [esi]
6400373f:	mov    WORD PTR [edx+edi*2],bx
64003743:	mov    eax,esi
64003745:	mov    ecx,DWORD PTR [esp+0x5c]
64003749:	mov    DWORD PTR fs:0x0,ecx
64003750:	pop    ecx
64003751:	pop    edi
64003752:	pop    esi
64003753:	pop    ebp
64003754:	pop    ebx
64003755:	add    esp,0x54
64003758:	ret    
64003759:	push   0x80070057
6400375e:	call   0x64001040
64003763:	int3   
64003764:	int3   
64003765:	int3   
64003766:	int3   
64003767:	int3   
64003768:	int3   
64003769:	int3   
6400376a:	int3   
6400376b:	int3   
6400376c:	int3   
6400376d:	int3   
6400376e:	int3   
6400376f:	int3   
64003770:	push   ebp
64003771:	lea    ebp,[esp-0x78]
64003775:	sub    esp,0x78
64003778:	push   0xffffffff
6400377a:	push   0x64023c39
6400377f:	mov    eax,fs:0x0
64003785:	push   eax
64003786:	sub    esp,0xb4
6400378c:	mov    eax,ds:0x6402d09c
64003791:	xor    eax,ebp
64003793:	mov    DWORD PTR [ebp+0x74],eax
64003796:	push   ebx
64003797:	push   esi
64003798:	push   edi
64003799:	push   eax
6400379a:	lea    eax,[ebp-0xc]
6400379d:	mov    fs:0x0,eax
640037a3:	call   DWORD PTR ds:0x6402d06c
640037a9:	mov    ebx,eax
640037ab:	lea    eax,[ebp+0xc]
640037ae:	push   eax
640037af:	call   0x640035f0
640037b4:	add    esp,0x4
640037b7:	push   0x0
640037b9:	push   0x0
640037bb:	lea    ecx,[ebp+0x0]
640037be:	push   ecx
640037bf:	lea    edx,[ebp+0x4]
640037c2:	push   edx
640037c3:	lea    eax,[ebp+0x8]
640037c6:	push   eax
640037c7:	push   0x0
640037c9:	mov    DWORD PTR [ebp-0x4],0x0
640037d0:	mov    ecx,DWORD PTR [ebp+0xc]
640037d3:	push   0x0
640037d5:	push   ecx
640037d6:	call   0x6400d200
640037db:	call   eax
640037dd:	test   eax,eax
640037df:	jne    0x640038f0
640037e5:	call   DWORD PTR ds:0x64025044
640037eb:	push   0xa
640037ed:	lea    edx,[ebp+0x10]
640037f0:	push   edx
640037f1:	push   eax
640037f2:	call   0x64013662
640037f7:	mov    eax,DWORD PTR [ebp+0xc]
640037fa:	add    esp,0xc
640037fd:	test   eax,eax
640037ff:	mov    edi,eax
64003801:	je     0x6400382f
64003803:	push   eax
64003804:	call   DWORD PTR ds:0x64025054
6400380a:	add    eax,0x1
6400380d:	cmp    eax,0x3fffffff
64003812:	jle    0x64003818
64003814:	xor    edi,edi
64003816:	jmp    0x6400382f
64003818:	lea    esi,[eax+eax*1]
6400381b:	mov    eax,esi
6400381d:	call   0x64013240
64003822:	mov    eax,esp
64003824:	push   ebx
64003825:	push   esi
64003826:	push   edi
64003827:	push   eax
64003828:	call   0x64002af0
6400382d:	mov    edi,eax
6400382f:	push   0x640278dc
64003834:	push   0x21
64003836:	push   0x64027900
6400383b:	call   0x64005710
64003840:	mov    ecx,eax
64003842:	add    esp,0xc
64003845:	mov    DWORD PTR [ebp-0x10],0xf
6400384c:	mov    DWORD PTR [ebp-0x14],0x0
64003853:	mov    BYTE PTR [ebp-0x24],0x0
64003857:	lea    esi,[ecx+0x1]
6400385a:	lea    ebx,[ebx+0x0]
64003860:	mov    dl,BYTE PTR [ecx]
64003862:	add    ecx,0x1
64003865:	test   dl,dl
64003867:	jne    0x64003860
64003869:	sub    ecx,esi
6400386b:	push   ecx
6400386c:	push   eax
6400386d:	lea    ecx,[ebp-0x28]
64003870:	call   0x64001860
64003875:	lea    eax,[ebp-0x28]
64003878:	push   eax
64003879:	lea    esi,[ebp-0x6c]
6400387c:	mov    BYTE PTR [ebp-0x4],0x1
64003880:	call   0x64008940
64003885:	mov    esi,eax
64003887:	push   0x640278a4
6400388c:	push   0x7
6400388e:	push   0x640278d4
64003893:	mov    BYTE PTR [ebp-0x4],0x2
64003897:	call   0x64005710
6400389c:	push   esi
6400389d:	mov    edi,eax
6400389f:	lea    esi,[ebp-0x88]
640038a5:	call   0x64008940
640038aa:	push   eax
640038ab:	lea    edi,[ebp+0x10]
640038ae:	lea    esi,[ebp-0xc0]
640038b4:	mov    BYTE PTR [ebp-0x4],0x3
640038b8:	call   0x64008940
640038bd:	push   eax
640038be:	mov    edi,0x640278a0
640038c3:	lea    esi,[ebp-0xa4]
640038c9:	mov    BYTE PTR [ebp-0x4],0x4
640038cd:	call   0x64008940
640038d2:	add    esp,0x1c
640038d5:	push   eax
640038d6:	lea    ecx,[ebp-0x50]
640038d9:	mov    BYTE PTR [ebp-0x4],0x5
640038dd:	call   0x64002020
640038e2:	push   0x6402ab5c
640038e7:	lea    ecx,[ebp-0x50]
640038ea:	push   ecx
640038eb:	call   0x640126ab
640038f0:	mov    esi,DWORD PTR [ebp+0x8]
640038f3:	mov    DWORD PTR [ebp-0x4],0xffffffff
640038fa:	mov    eax,DWORD PTR [ebp+0xc]
640038fd:	add    eax,0xfffffff0
64003900:	lea    edx,[eax+0xc]
64003903:	or     ecx,0xffffffff
64003906:	lock xadd DWORD PTR [edx],ecx
6400390a:	dec    ecx
6400390b:	test   ecx,ecx
6400390d:	jg     0x64003919
6400390f:	mov    ecx,DWORD PTR [eax]
64003911:	mov    edx,DWORD PTR [ecx]
64003913:	push   eax
64003914:	mov    eax,DWORD PTR [edx+0x4]
64003917:	call   eax
64003919:	mov    eax,esi
6400391b:	lea    esp,[ebp-0xd0]
64003921:	mov    ecx,DWORD PTR [ebp-0xc]
64003924:	mov    DWORD PTR fs:0x0,ecx
6400392b:	pop    ecx
6400392c:	pop    edi
6400392d:	pop    esi
6400392e:	pop    ebx
6400392f:	mov    ecx,DWORD PTR [ebp+0x74]
64003932:	xor    ecx,ebp
64003934:	call   0x64012abc
64003939:	add    ebp,0x78
6400393c:	mov    esp,ebp
6400393e:	pop    ebp
6400393f:	ret    
64003940:	push   ebp
64003941:	mov    ebp,esp
64003943:	and    esp,0xfffffff8
64003946:	push   0xffffffff
64003948:	push   0x640239b6
6400394d:	mov    eax,fs:0x0
64003953:	push   eax
64003954:	sub    esp,0x840
6400395a:	mov    eax,ds:0x6402d09c
6400395f:	xor    eax,esp
64003961:	mov    DWORD PTR [esp+0x838],eax
64003968:	push   ebx
64003969:	push   esi
6400396a:	push   edi
6400396b:	mov    eax,ds:0x6402d09c
64003970:	xor    eax,esp
64003972:	push   eax
64003973:	lea    eax,[esp+0x850]
6400397a:	mov    fs:0x0,eax
64003980:	xor    eax,eax
64003982:	xor    ebx,ebx
64003984:	mov    DWORD PTR [esp+0x34],ebx
64003988:	mov    DWORD PTR [esp+0x38],eax
6400398c:	mov    DWORD PTR [esp+0x3c],eax
64003990:	mov    DWORD PTR [esp+0x40],eax
64003994:	mov    DWORD PTR [esp+0x1c],ebx
64003998:	push   0x64027924
6400399d:	push   0x1f
6400399f:	push   0x64027948
640039a4:	mov    DWORD PTR [esp+0x864],ebx
640039ab:	call   0x640059d0
640039b0:	add    esp,0xc
640039b3:	lea    ecx,[esp+0x18]
640039b7:	push   ecx
640039b8:	push   0x20019
640039bd:	push   ebx
640039be:	push   eax
640039bf:	push   0x80000002
640039c4:	mov    DWORD PTR [esp+0x2c],ebx
640039c8:	call   DWORD PTR ds:0x64025000
640039ce:	cmp    eax,ebx
640039d0:	jne    0x64003a47
640039d2:	mov    edx,DWORD PTR [esp+0x18]
640039d6:	push   0x64027988
640039db:	push   0xb
640039dd:	push   0x640279b0
640039e2:	mov    DWORD PTR [esp+0x28],edx
640039e6:	mov    DWORD PTR [esp+0x2c],0x400
640039ee:	call   0x640059d0
640039f3:	add    esp,0xc
640039f6:	push   eax
640039f7:	lea    eax,[esp+0x20]
640039fb:	push   eax
640039fc:	lea    edi,[esp+0x28]
64003a00:	lea    esi,[esp+0x4c]
64003a04:	call   0x64002b50
64003a09:	test   eax,eax
64003a0b:	je     0x64003a6a
64003a0d:	mov    eax,DWORD PTR [esp+0x18]
64003a11:	test   eax,eax
64003a13:	mov    ecx,DWORD PTR [esp+0x40]
64003a17:	mov    esi,DWORD PTR [esp+0x34]
64003a1b:	mov    edi,DWORD PTR [esp+0x38]
64003a1f:	mov    ebx,DWORD PTR [esp+0x3c]
64003a23:	mov    DWORD PTR [esp+0x30],ecx
64003a27:	je     0x64003a30
64003a29:	push   eax
64003a2a:	call   DWORD PTR ds:0x6402500c
64003a30:	mov    eax,DWORD PTR [ebp+0x8]
64003a33:	mov    edx,DWORD PTR [esp+0x30]
64003a37:	mov    DWORD PTR [eax],esi
64003a39:	mov    DWORD PTR [eax+0x4],edi
64003a3c:	mov    DWORD PTR [eax+0x8],ebx
64003a3f:	mov    DWORD PTR [eax+0xc],edx
64003a42:	jmp    0x64003b39
64003a47:	mov    eax,DWORD PTR [ebp+0x8]
64003a4a:	mov    ecx,DWORD PTR [esp+0x34]
64003a4e:	mov    edx,DWORD PTR [esp+0x38]
64003a52:	mov    DWORD PTR [eax],ecx
64003a54:	mov    ecx,DWORD PTR [esp+0x3c]
64003a58:	mov    DWORD PTR [eax+0x4],edx
64003a5b:	mov    edx,DWORD PTR [esp+0x40]
64003a5f:	mov    DWORD PTR [eax+0x8],ecx
64003a62:	mov    DWORD PTR [eax+0xc],edx
64003a65:	jmp    0x64003b39
64003a6a:	push   0x640279c8
64003a6f:	lea    ecx,[esp+0x18]
64003a73:	call   0x64002500
64003a78:	lea    eax,[esp+0x44]
64003a7c:	mov    BYTE PTR [esp+0x858],0x1
64003a84:	lea    edx,[eax+0x2]
64003a87:	mov    cx,WORD PTR [eax]
64003a8a:	add    eax,0x2
64003a8d:	cmp    cx,bx
64003a90:	jne    0x64003a87
64003a92:	sub    eax,edx
64003a94:	sar    eax,1
64003a96:	push   eax
64003a97:	lea    eax,[esp+0x48]
64003a9b:	push   eax
64003a9c:	lea    ecx,[esp+0x1c]
64003aa0:	call   0x64002950
64003aa5:	push   0x1
64003aa7:	push   0x640279cc
64003aac:	lea    ecx,[esp+0x1c]
64003ab0:	call   0x64002950
64003ab5:	mov    eax,DWORD PTR [esp+0x14]
64003ab9:	cmp    DWORD PTR [eax-0x4],0x1
64003abd:	jle    0x64003ad0
64003abf:	mov    ecx,DWORD PTR [eax-0xc]
64003ac2:	push   ecx
64003ac3:	lea    ecx,[esp+0x18]
64003ac7:	call   0x64001950
64003acc:	mov    eax,DWORD PTR [esp+0x14]
64003ad0:	lea    edx,[esp+0x34]
64003ad4:	push   edx
64003ad5:	push   eax
64003ad6:	call   DWORD PTR ds:0x640251e0
64003adc:	mov    eax,DWORD PTR [esp+0x40]
64003ae0:	mov    esi,DWORD PTR [esp+0x34]
64003ae4:	mov    edi,DWORD PTR [esp+0x38]
64003ae8:	mov    ebx,DWORD PTR [esp+0x3c]
64003aec:	mov    DWORD PTR [esp+0x30],eax
64003af0:	mov    BYTE PTR [esp+0x858],0x0
64003af8:	mov    eax,DWORD PTR [esp+0x14]
64003afc:	add    eax,0xfffffff0
64003aff:	lea    ecx,[eax+0xc]
64003b02:	or     edx,0xffffffff
64003b05:	lock xadd DWORD PTR [ecx],edx
64003b09:	dec    edx
64003b0a:	test   edx,edx
64003b0c:	jg     0x64003b18
64003b0e:	mov    ecx,DWORD PTR [eax]
64003b10:	mov    edx,DWORD PTR [ecx]
64003b12:	push   eax
64003b13:	mov    eax,DWORD PTR [edx+0x4]
64003b16:	call   eax
64003b18:	mov    eax,DWORD PTR [esp+0x18]
64003b1c:	test   eax,eax
64003b1e:	je     0x64003b27
64003b20:	push   eax
64003b21:	call   DWORD PTR ds:0x6402500c
64003b27:	mov    eax,DWORD PTR [ebp+0x8]
64003b2a:	mov    ecx,DWORD PTR [esp+0x30]
64003b2e:	mov    DWORD PTR [eax],esi
64003b30:	mov    DWORD PTR [eax+0x4],edi
64003b33:	mov    DWORD PTR [eax+0x8],ebx
64003b36:	mov    DWORD PTR [eax+0xc],ecx
64003b39:	mov    ecx,DWORD PTR [esp+0x850]
64003b40:	mov    DWORD PTR fs:0x0,ecx
64003b47:	pop    ecx
64003b48:	pop    edi
64003b49:	pop    esi
64003b4a:	pop    ebx
64003b4b:	mov    ecx,DWORD PTR [esp+0x838]
64003b52:	xor    ecx,esp
64003b54:	call   0x64012abc
64003b59:	mov    esp,ebp
64003b5b:	pop    ebp
64003b5c:	ret    
64003b5d:	int3   
64003b5e:	int3   
64003b5f:	int3   
64003b60:	push   ebp
64003b61:	lea    ebp,[esp-0x820]
64003b68:	sub    esp,0x820
64003b6e:	push   0xffffffff
64003b70:	push   0x64023969
64003b75:	mov    eax,fs:0x0
64003b7b:	push   eax
64003b7c:	sub    esp,0x44
64003b7f:	mov    eax,ds:0x6402d09c
64003b84:	xor    eax,ebp
64003b86:	mov    DWORD PTR [ebp+0x81c],eax
64003b8c:	push   ebx
64003b8d:	push   esi
64003b8e:	push   edi
64003b8f:	push   eax
64003b90:	lea    eax,[ebp-0xc]
64003b93:	mov    fs:0x0,eax
64003b99:	xor    ebx,ebx
64003b9b:	mov    DWORD PTR [ebp-0x4],ebx
64003b9e:	test   BYTE PTR ds:0x640314b0,0x1
64003ba5:	jne    0x64003bed
64003ba7:	or     DWORD PTR ds:0x640314b0,0x1
64003bae:	mov    BYTE PTR [ebp-0x4],0x1
64003bb2:	call   0x64007710
64003bb7:	mov    ds:0x64031350,eax
64003bbc:	mov    BYTE PTR [eax+0x29],0x1
64003bc0:	mov    eax,ds:0x64031350
64003bc5:	mov    DWORD PTR [eax+0x4],eax
64003bc8:	mov    eax,ds:0x64031350
64003bcd:	mov    DWORD PTR [eax],eax
64003bcf:	mov    eax,ds:0x64031350
64003bd4:	mov    DWORD PTR [eax+0x8],eax
64003bd7:	push   0x64023f80
64003bdc:	mov    DWORD PTR ds:0x64031354,ebx
64003be2:	call   0x64012bef
64003be7:	add    esp,0x4
64003bea:	mov    BYTE PTR [ebp-0x4],bl
64003bed:	cmp    DWORD PTR ds:0x64031354,ebx
64003bf3:	jne    0x64004abf
64003bf9:	call   0x64007710
64003bfe:	mov    DWORD PTR [ebp-0x30],eax
64003c01:	mov    BYTE PTR [eax+0x29],0x1
64003c05:	mov    eax,DWORD PTR [ebp-0x30]
64003c08:	mov    DWORD PTR [eax+0x4],eax
64003c0b:	mov    eax,DWORD PTR [ebp-0x30]
64003c0e:	mov    DWORD PTR [eax],eax
64003c10:	mov    eax,DWORD PTR [ebp-0x30]
64003c13:	mov    DWORD PTR [eax+0x8],eax
64003c16:	mov    DWORD PTR [ebp-0x2c],ebx
64003c19:	push   0x640279d0
64003c1e:	push   0x3
64003c20:	push   0x64027a04
64003c25:	mov    BYTE PTR [ebp-0x4],0x2
64003c29:	call   0x64005710
64003c2e:	mov    esi,eax
64003c30:	mov    ecx,esi
64003c32:	add    esp,0xc
64003c35:	mov    DWORD PTR [ebp-0x10],0xf
64003c3c:	mov    DWORD PTR [ebp-0x14],ebx
64003c3f:	mov    BYTE PTR [ebp-0x24],bl
64003c42:	lea    edi,[ecx+0x1]
64003c45:	mov    al,BYTE PTR [ecx]
64003c47:	add    ecx,0x1
64003c4a:	cmp    al,bl
64003c4c:	jne    0x64003c45
64003c4e:	sub    ecx,edi
64003c50:	push   ecx
64003c51:	push   esi
64003c52:	lea    ecx,[ebp-0x28]
64003c55:	call   0x64001860
64003c5a:	lea    eax,[ebp-0x28]
64003c5d:	push   eax
64003c5e:	lea    ecx,[ebp-0x40]
64003c61:	push   ecx
64003c62:	lea    edx,[ebp-0x34]
64003c65:	push   edx
64003c66:	mov    BYTE PTR [ebp-0x4],0x3
64003c6a:	call   0x64005ca0
64003c6f:	mov    BYTE PTR [ebp-0x4],0x2
64003c73:	cmp    DWORD PTR [ebp-0x10],0x10
64003c77:	jb     0x64003c85
64003c79:	mov    eax,DWORD PTR [ebp-0x24]
64003c7c:	push   eax
64003c7d:	call   0x64012262
64003c82:	add    esp,0x4
64003c85:	push   0x64027a08
64003c8a:	push   0x8
64003c8c:	push   0x64027a48
64003c91:	call   0x64005710
64003c96:	mov    esi,eax
64003c98:	mov    ecx,esi
64003c9a:	add    esp,0xc
64003c9d:	mov    DWORD PTR [ebp-0x10],0xf
64003ca4:	mov    DWORD PTR [ebp-0x14],ebx
64003ca7:	mov    BYTE PTR [ebp-0x24],bl
64003caa:	lea    edx,[ecx+0x1]
64003cad:	lea    ecx,[ecx+0x0]
64003cb0:	mov    al,BYTE PTR [ecx]
64003cb2:	add    ecx,0x1
64003cb5:	cmp    al,bl
64003cb7:	jne    0x64003cb0
64003cb9:	sub    ecx,edx
64003cbb:	push   ecx
64003cbc:	push   esi
64003cbd:	lea    ecx,[ebp-0x28]
64003cc0:	call   0x64001860
64003cc5:	lea    ecx,[ebp-0x28]
64003cc8:	push   ecx
64003cc9:	lea    edx,[ebp-0x40]
64003ccc:	push   edx
64003ccd:	lea    eax,[ebp-0x34]
64003cd0:	push   eax
64003cd1:	mov    BYTE PTR [ebp-0x4],0x4
64003cd5:	call   0x64005ca0
64003cda:	mov    edi,0x10
64003cdf:	mov    BYTE PTR [ebp-0x4],0x2
64003ce3:	cmp    DWORD PTR [ebp-0x10],edi
64003ce6:	jb     0x64003cf4
64003ce8:	mov    ecx,DWORD PTR [ebp-0x24]
64003ceb:	push   ecx
64003cec:	call   0x64012262
64003cf1:	add    esp,0x4
64003cf4:	push   0x64027a54
64003cf9:	push   0x8
64003cfb:	push   0x64027a88
64003d00:	call   0x64005710
64003d05:	mov    esi,eax
64003d07:	mov    ecx,esi
64003d09:	add    esp,0xc
64003d0c:	mov    DWORD PTR [ebp-0x10],0xf
64003d13:	mov    DWORD PTR [ebp-0x14],ebx
64003d16:	mov    BYTE PTR [ebp-0x24],bl
64003d19:	lea    edx,[ecx+0x1]
64003d1c:	lea    esp,[esp+0x0]
64003d20:	mov    al,BYTE PTR [ecx]
64003d22:	add    ecx,0x1
64003d25:	cmp    al,bl
64003d27:	jne    0x64003d20
64003d29:	sub    ecx,edx
64003d2b:	push   ecx
64003d2c:	push   esi
64003d2d:	lea    ecx,[ebp-0x28]
64003d30:	call   0x64001860
64003d35:	lea    edx,[ebp-0x28]
64003d38:	push   edx
64003d39:	lea    eax,[ebp-0x40]
64003d3c:	push   eax
64003d3d:	lea    ecx,[ebp-0x34]
64003d40:	push   ecx
64003d41:	mov    BYTE PTR [ebp-0x4],0x5
64003d45:	call   0x64005ca0
64003d4a:	mov    BYTE PTR [ebp-0x4],0x2
64003d4e:	cmp    DWORD PTR [ebp-0x10],edi
64003d51:	jb     0x64003d5f
64003d53:	mov    edx,DWORD PTR [ebp-0x24]
64003d56:	push   edx
64003d57:	call   0x64012262
64003d5c:	add    esp,0x4
64003d5f:	push   0x64027a94
64003d64:	push   0xa
64003d66:	push   0x64027ad0
64003d6b:	call   0x64005710
64003d70:	mov    esi,eax
64003d72:	mov    ecx,esi
64003d74:	add    esp,0xc
64003d77:	mov    DWORD PTR [ebp-0x10],0xf
64003d7e:	mov    DWORD PTR [ebp-0x14],ebx
64003d81:	mov    BYTE PTR [ebp-0x24],bl
64003d84:	lea    edx,[ecx+0x1]
64003d87:	mov    al,BYTE PTR [ecx]
64003d89:	add    ecx,0x1
64003d8c:	cmp    al,bl
64003d8e:	jne    0x64003d87
64003d90:	sub    ecx,edx
64003d92:	push   ecx
64003d93:	push   esi
64003d94:	lea    ecx,[ebp-0x28]
64003d97:	call   0x64001860
64003d9c:	lea    eax,[ebp-0x28]
64003d9f:	push   eax
64003da0:	lea    ecx,[ebp-0x40]
64003da3:	push   ecx
64003da4:	lea    edx,[ebp-0x34]
64003da7:	push   edx
64003da8:	mov    BYTE PTR [ebp-0x4],0x6
64003dac:	call   0x64005ca0
64003db1:	mov    BYTE PTR [ebp-0x4],0x2
64003db5:	cmp    DWORD PTR [ebp-0x10],edi
64003db8:	jb     0x64003dc6
64003dba:	mov    eax,DWORD PTR [ebp-0x24]
64003dbd:	push   eax
64003dbe:	call   0x64012262
64003dc3:	add    esp,0x4
64003dc6:	push   0x64027adc
64003dcb:	push   0x4
64003dcd:	push   0x64027b10
64003dd2:	call   0x64005710
64003dd7:	mov    esi,eax
64003dd9:	mov    ecx,esi
64003ddb:	add    esp,0xc
64003dde:	mov    DWORD PTR [ebp-0x10],0xf
64003de5:	mov    DWORD PTR [ebp-0x14],ebx
64003de8:	mov    BYTE PTR [ebp-0x24],bl
64003deb:	lea    edx,[ecx+0x1]
64003dee:	mov    edi,edi
64003df0:	mov    al,BYTE PTR [ecx]
64003df2:	add    ecx,0x1
64003df5:	cmp    al,bl
64003df7:	jne    0x64003df0
64003df9:	sub    ecx,edx
64003dfb:	push   ecx
64003dfc:	push   esi
64003dfd:	lea    ecx,[ebp-0x28]
64003e00:	call   0x64001860
64003e05:	lea    ecx,[ebp-0x28]
64003e08:	push   ecx
64003e09:	lea    edx,[ebp-0x40]
64003e0c:	push   edx
64003e0d:	lea    eax,[ebp-0x34]
64003e10:	push   eax
64003e11:	mov    BYTE PTR [ebp-0x4],0x7
64003e15:	call   0x64005ca0
64003e1a:	mov    BYTE PTR [ebp-0x4],0x2
64003e1e:	cmp    DWORD PTR [ebp-0x10],edi
64003e21:	jb     0x64003e2f
64003e23:	mov    ecx,DWORD PTR [ebp-0x24]
64003e26:	push   ecx
64003e27:	call   0x64012262
64003e2c:	add    esp,0x4
64003e2f:	push   0x64027b18
64003e34:	push   0x8
64003e36:	push   0x64027b48
64003e3b:	call   0x64005710
64003e40:	mov    esi,eax
64003e42:	mov    ecx,esi
64003e44:	add    esp,0xc
64003e47:	mov    DWORD PTR [ebp-0x10],0xf
64003e4e:	mov    DWORD PTR [ebp-0x14],ebx
64003e51:	mov    BYTE PTR [ebp-0x24],bl
64003e54:	lea    edx,[ecx+0x1]
64003e57:	mov    al,BYTE PTR [ecx]
64003e59:	add    ecx,0x1
64003e5c:	cmp    al,bl
64003e5e:	jne    0x64003e57
64003e60:	sub    ecx,edx
64003e62:	push   ecx
64003e63:	push   esi
64003e64:	lea    ecx,[ebp-0x28]
64003e67:	call   0x64001860
64003e6c:	lea    edx,[ebp-0x28]
64003e6f:	push   edx
64003e70:	lea    eax,[ebp-0x40]
64003e73:	push   eax
64003e74:	lea    ecx,[ebp-0x34]
64003e77:	push   ecx
64003e78:	mov    BYTE PTR [ebp-0x4],0x8
64003e7c:	call   0x64005ca0
64003e81:	mov    BYTE PTR [ebp-0x4],0x2
64003e85:	cmp    DWORD PTR [ebp-0x10],edi
64003e88:	jb     0x64003e96
64003e8a:	mov    edx,DWORD PTR [ebp-0x24]
64003e8d:	push   edx
64003e8e:	call   0x64012262
64003e93:	add    esp,0x4
64003e96:	push   0x64027b54
64003e9b:	push   0x5
64003e9d:	push   0x64027b80
64003ea2:	call   0x64005710
64003ea7:	mov    esi,eax
64003ea9:	mov    ecx,esi
64003eab:	add    esp,0xc
64003eae:	mov    DWORD PTR [ebp-0x10],0xf
64003eb5:	mov    DWORD PTR [ebp-0x14],ebx
64003eb8:	mov    BYTE PTR [ebp-0x24],bl
64003ebb:	lea    edx,[ecx+0x1]
64003ebe:	mov    edi,edi
64003ec0:	mov    al,BYTE PTR [ecx]
64003ec2:	add    ecx,0x1
64003ec5:	cmp    al,bl
64003ec7:	jne    0x64003ec0
64003ec9:	sub    ecx,edx
64003ecb:	push   ecx
64003ecc:	push   esi
64003ecd:	lea    ecx,[ebp-0x28]
64003ed0:	call   0x64001860
64003ed5:	lea    eax,[ebp-0x28]
64003ed8:	push   eax
64003ed9:	lea    ecx,[ebp-0x40]
64003edc:	push   ecx
64003edd:	lea    edx,[ebp-0x34]
64003ee0:	push   edx
64003ee1:	mov    BYTE PTR [ebp-0x4],0x9
64003ee5:	call   0x64005ca0
64003eea:	mov    BYTE PTR [ebp-0x4],0x2
64003eee:	cmp    DWORD PTR [ebp-0x10],edi
64003ef1:	jb     0x64003eff
64003ef3:	mov    eax,DWORD PTR [ebp-0x24]
64003ef6:	push   eax
64003ef7:	call   0x64012262
64003efc:	add    esp,0x4
64003eff:	push   0x64027b88
64003f04:	push   0x8
64003f06:	push   0x64027bc0
64003f0b:	call   0x64005710
64003f10:	mov    esi,eax
64003f12:	mov    ecx,esi
64003f14:	add    esp,0xc
64003f17:	mov    DWORD PTR [ebp-0x10],0xf
64003f1e:	mov    DWORD PTR [ebp-0x14],ebx
64003f21:	mov    BYTE PTR [ebp-0x24],bl
64003f24:	lea    edx,[ecx+0x1]
64003f27:	mov    al,BYTE PTR [ecx]
64003f29:	add    ecx,0x1
64003f2c:	cmp    al,bl
64003f2e:	jne    0x64003f27
64003f30:	sub    ecx,edx
64003f32:	push   ecx
64003f33:	push   esi
64003f34:	lea    ecx,[ebp-0x28]
64003f37:	call   0x64001860
64003f3c:	lea    ecx,[ebp-0x28]
64003f3f:	push   ecx
64003f40:	lea    edx,[ebp-0x40]
64003f43:	push   edx
64003f44:	lea    eax,[ebp-0x34]
64003f47:	push   eax
64003f48:	mov    BYTE PTR [ebp-0x4],0xa
64003f4c:	call   0x64005ca0
64003f51:	mov    BYTE PTR [ebp-0x4],0x2
64003f55:	cmp    DWORD PTR [ebp-0x10],edi
64003f58:	jb     0x64003f66
64003f5a:	mov    ecx,DWORD PTR [ebp-0x24]
64003f5d:	push   ecx
64003f5e:	call   0x64012262
64003f63:	add    esp,0x4
64003f66:	push   0x64027bcc
64003f6b:	push   0xb
64003f6d:	push   0x64027c04
64003f72:	call   0x64005710
64003f77:	mov    esi,eax
64003f79:	mov    ecx,esi
64003f7b:	add    esp,0xc
64003f7e:	mov    DWORD PTR [ebp-0x10],0xf
64003f85:	mov    DWORD PTR [ebp-0x14],ebx
64003f88:	mov    BYTE PTR [ebp-0x24],bl
64003f8b:	lea    edx,[ecx+0x1]
64003f8e:	mov    edi,edi
64003f90:	mov    al,BYTE PTR [ecx]
64003f92:	add    ecx,0x1
64003f95:	cmp    al,bl
64003f97:	jne    0x64003f90
64003f99:	sub    ecx,edx
64003f9b:	push   ecx
64003f9c:	push   esi
64003f9d:	lea    ecx,[ebp-0x28]
64003fa0:	call   0x64001860
64003fa5:	lea    edx,[ebp-0x28]
64003fa8:	push   edx
64003fa9:	lea    eax,[ebp-0x40]
64003fac:	push   eax
64003fad:	lea    ecx,[ebp-0x34]
64003fb0:	push   ecx
64003fb1:	mov    BYTE PTR [ebp-0x4],0xb
64003fb5:	call   0x64005ca0
64003fba:	mov    BYTE PTR [ebp-0x4],0x2
64003fbe:	cmp    DWORD PTR [ebp-0x10],edi
64003fc1:	jb     0x64003fcf
64003fc3:	mov    edx,DWORD PTR [ebp-0x24]
64003fc6:	push   edx
64003fc7:	call   0x64012262
64003fcc:	add    esp,0x4
64003fcf:	push   0x64027c10
64003fd4:	push   0x1e
64003fd6:	push   0x64027c3c
64003fdb:	call   0x64005710
64003fe0:	mov    esi,eax
64003fe2:	mov    ecx,esi
64003fe4:	add    esp,0xc
64003fe7:	mov    DWORD PTR [ebp-0x10],0xf
64003fee:	mov    DWORD PTR [ebp-0x14],ebx
64003ff1:	mov    BYTE PTR [ebp-0x24],bl
64003ff4:	lea    edx,[ecx+0x1]
64003ff7:	mov    al,BYTE PTR [ecx]
64003ff9:	add    ecx,0x1
64003ffc:	cmp    al,bl
64003ffe:	jne    0x64003ff7
64004000:	sub    ecx,edx
64004002:	push   ecx
64004003:	push   esi
64004004:	lea    ecx,[ebp-0x28]
64004007:	call   0x64001860
6400400c:	lea    eax,[ebp-0x28]
6400400f:	push   eax
64004010:	lea    ecx,[ebp-0x40]
64004013:	push   ecx
64004014:	lea    edx,[ebp-0x34]
64004017:	push   edx
64004018:	mov    BYTE PTR [ebp-0x4],0xc
6400401c:	call   0x64005ca0
64004021:	mov    BYTE PTR [ebp-0x4],0x2
64004025:	cmp    DWORD PTR [ebp-0x10],edi
64004028:	jb     0x64004036
6400402a:	mov    eax,DWORD PTR [ebp-0x24]
6400402d:	push   eax
6400402e:	call   0x64012262
64004033:	add    esp,0x4
64004036:	push   0x64027c5c
6400403b:	push   0x7
6400403d:	push   0x64027c98
64004042:	call   0x64005710
64004047:	mov    esi,eax
64004049:	mov    ecx,esi
6400404b:	add    esp,0xc
6400404e:	mov    DWORD PTR [ebp-0x10],0xf
64004055:	mov    DWORD PTR [ebp-0x14],ebx
64004058:	mov    BYTE PTR [ebp-0x24],bl
6400405b:	lea    edx,[ecx+0x1]
6400405e:	mov    edi,edi
64004060:	mov    al,BYTE PTR [ecx]
64004062:	add    ecx,0x1
64004065:	cmp    al,bl
64004067:	jne    0x64004060
64004069:	sub    ecx,edx
6400406b:	push   ecx
6400406c:	push   esi
6400406d:	lea    ecx,[ebp-0x28]
64004070:	call   0x64001860
64004075:	lea    ecx,[ebp-0x28]
64004078:	push   ecx
64004079:	lea    edx,[ebp-0x40]
6400407c:	push   edx
6400407d:	lea    eax,[ebp-0x34]
64004080:	push   eax
64004081:	mov    BYTE PTR [ebp-0x4],0xd
64004085:	call   0x64005ca0
6400408a:	mov    BYTE PTR [ebp-0x4],0x2
6400408e:	cmp    DWORD PTR [ebp-0x10],edi
64004091:	jb     0x6400409f
64004093:	mov    ecx,DWORD PTR [ebp-0x24]
64004096:	push   ecx
64004097:	call   0x64012262
6400409c:	add    esp,0x4
6400409f:	push   0x64027ca0
640040a4:	push   0xc
640040a6:	push   0x64027ccc
640040ab:	call   0x64005710
640040b0:	mov    esi,eax
640040b2:	mov    ecx,esi
640040b4:	add    esp,0xc
640040b7:	mov    DWORD PTR [ebp-0x10],0xf
640040be:	mov    DWORD PTR [ebp-0x14],ebx
640040c1:	mov    BYTE PTR [ebp-0x24],bl
640040c4:	lea    edx,[ecx+0x1]
640040c7:	mov    al,BYTE PTR [ecx]
640040c9:	add    ecx,0x1
640040cc:	cmp    al,bl
640040ce:	jne    0x640040c7
640040d0:	sub    ecx,edx
640040d2:	push   ecx
640040d3:	push   esi
640040d4:	lea    ecx,[ebp-0x28]
640040d7:	call   0x64001860
640040dc:	lea    edx,[ebp-0x28]
640040df:	push   edx
640040e0:	lea    eax,[ebp-0x40]
640040e3:	push   eax
640040e4:	lea    ecx,[ebp-0x34]
640040e7:	push   ecx
640040e8:	mov    BYTE PTR [ebp-0x4],0xe
640040ec:	call   0x64005ca0
640040f1:	mov    BYTE PTR [ebp-0x4],0x2
640040f5:	cmp    DWORD PTR [ebp-0x10],edi
640040f8:	jb     0x64004106
640040fa:	mov    edx,DWORD PTR [ebp-0x24]
640040fd:	push   edx
640040fe:	call   0x64012262
64004103:	add    esp,0x4
64004106:	push   0x64027cdc
6400410b:	push   0x11
6400410d:	push   0x64027d1c
64004112:	call   0x64005710
64004117:	mov    esi,eax
64004119:	mov    ecx,esi
6400411b:	add    esp,0xc
6400411e:	mov    DWORD PTR [ebp-0x10],0xf
64004125:	mov    DWORD PTR [ebp-0x14],ebx
64004128:	mov    BYTE PTR [ebp-0x24],bl
6400412b:	lea    edx,[ecx+0x1]
6400412e:	mov    edi,edi
64004130:	mov    al,BYTE PTR [ecx]
64004132:	add    ecx,0x1
64004135:	cmp    al,bl
64004137:	jne    0x64004130
64004139:	sub    ecx,edx
6400413b:	push   ecx
6400413c:	push   esi
6400413d:	lea    ecx,[ebp-0x28]
64004140:	call   0x64001860
64004145:	lea    eax,[ebp-0x28]
64004148:	push   eax
64004149:	lea    ecx,[ebp-0x40]
6400414c:	push   ecx
6400414d:	lea    edx,[ebp-0x34]
64004150:	push   edx
64004151:	mov    BYTE PTR [ebp-0x4],0xf
64004155:	call   0x64005ca0
6400415a:	mov    BYTE PTR [ebp-0x4],0x2
6400415e:	cmp    DWORD PTR [ebp-0x10],edi
64004161:	jb     0x6400416f
64004163:	mov    eax,DWORD PTR [ebp-0x24]
64004166:	push   eax
64004167:	call   0x64012262
6400416c:	add    esp,0x4
6400416f:	push   0x64027d30
64004174:	push   0x7
64004176:	push   0x64027d54
6400417b:	call   0x64005710
64004180:	mov    esi,eax
64004182:	mov    ecx,esi
64004184:	add    esp,0xc
64004187:	mov    DWORD PTR [ebp-0x10],0xf
6400418e:	mov    DWORD PTR [ebp-0x14],ebx
64004191:	mov    BYTE PTR [ebp-0x24],bl
64004194:	lea    edx,[ecx+0x1]
64004197:	mov    al,BYTE PTR [ecx]
64004199:	add    ecx,0x1
6400419c:	cmp    al,bl
6400419e:	jne    0x64004197
640041a0:	sub    ecx,edx
640041a2:	push   ecx
640041a3:	push   esi
640041a4:	lea    ecx,[ebp-0x28]
640041a7:	call   0x64001860
640041ac:	lea    ecx,[ebp-0x28]
640041af:	push   ecx
640041b0:	lea    edx,[ebp-0x40]
640041b3:	push   edx
640041b4:	lea    eax,[ebp-0x34]
640041b7:	push   eax
640041b8:	mov    BYTE PTR [ebp-0x4],0x10
640041bc:	call   0x64005ca0
640041c1:	mov    BYTE PTR [ebp-0x4],0x2
640041c5:	cmp    DWORD PTR [ebp-0x10],edi
640041c8:	jb     0x640041d6
640041ca:	mov    ecx,DWORD PTR [ebp-0x24]
640041cd:	push   ecx
640041ce:	call   0x64012262
640041d3:	add    esp,0x4
640041d6:	push   0x64027d5c
640041db:	push   0x6
640041dd:	push   0x64027d88
640041e2:	call   0x64005710
640041e7:	mov    esi,eax
640041e9:	mov    ecx,esi
640041eb:	add    esp,0xc
640041ee:	mov    DWORD PTR [ebp-0x10],0xf
640041f5:	mov    DWORD PTR [ebp-0x14],ebx
640041f8:	mov    BYTE PTR [ebp-0x24],bl
640041fb:	lea    edx,[ecx+0x1]
640041fe:	mov    edi,edi
64004200:	mov    al,BYTE PTR [ecx]
64004202:	add    ecx,0x1
64004205:	cmp    al,bl
64004207:	jne    0x64004200
64004209:	sub    ecx,edx
6400420b:	push   ecx
6400420c:	push   esi
6400420d:	lea    ecx,[ebp-0x28]
64004210:	call   0x64001860
64004215:	lea    edx,[ebp-0x28]
64004218:	push   edx
64004219:	lea    eax,[ebp-0x40]
6400421c:	push   eax
6400421d:	lea    ecx,[ebp-0x34]
64004220:	push   ecx
64004221:	mov    BYTE PTR [ebp-0x4],0x11
64004225:	call   0x64005ca0
6400422a:	mov    BYTE PTR [ebp-0x4],0x2
6400422e:	cmp    DWORD PTR [ebp-0x10],edi
64004231:	jb     0x6400423f
64004233:	mov    edx,DWORD PTR [ebp-0x24]
64004236:	push   edx
64004237:	call   0x64012262
6400423c:	add    esp,0x4
6400423f:	push   0x64027d90
64004244:	push   0x3
64004246:	push   0x64027db8
6400424b:	call   0x64005710
64004250:	mov    esi,eax
64004252:	mov    ecx,esi
64004254:	add    esp,0xc
64004257:	mov    DWORD PTR [ebp-0x10],0xf
6400425e:	mov    DWORD PTR [ebp-0x14],ebx
64004261:	mov    BYTE PTR [ebp-0x24],bl
64004264:	lea    edx,[ecx+0x1]
64004267:	mov    al,BYTE PTR [ecx]
64004269:	add    ecx,0x1
6400426c:	cmp    al,bl
6400426e:	jne    0x64004267
64004270:	sub    ecx,edx
64004272:	push   ecx
64004273:	push   esi
64004274:	lea    ecx,[ebp-0x28]
64004277:	call   0x64001860
6400427c:	lea    eax,[ebp-0x28]
6400427f:	push   eax
64004280:	lea    ecx,[ebp-0x40]
64004283:	push   ecx
64004284:	lea    edx,[ebp-0x34]
64004287:	push   edx
64004288:	mov    BYTE PTR [ebp-0x4],0x12
6400428c:	call   0x64005ca0
64004291:	mov    BYTE PTR [ebp-0x4],0x2
64004295:	cmp    DWORD PTR [ebp-0x10],edi
64004298:	jb     0x640042a6
6400429a:	mov    eax,DWORD PTR [ebp-0x24]
6400429d:	push   eax
6400429e:	call   0x64012262
640042a3:	add    esp,0x4
640042a6:	push   0x64027dc0
640042ab:	push   0x8
640042ad:	push   0x64027e00
640042b2:	call   0x64005710
640042b7:	mov    esi,eax
640042b9:	mov    ecx,esi
640042bb:	add    esp,0xc
640042be:	mov    DWORD PTR [ebp-0x10],0xf
640042c5:	mov    DWORD PTR [ebp-0x14],ebx
640042c8:	mov    BYTE PTR [ebp-0x24],bl
640042cb:	lea    edx,[ecx+0x1]
640042ce:	mov    edi,edi
640042d0:	mov    al,BYTE PTR [ecx]
640042d2:	add    ecx,0x1
640042d5:	cmp    al,bl
640042d7:	jne    0x640042d0
640042d9:	sub    ecx,edx
640042db:	push   ecx
640042dc:	push   esi
640042dd:	lea    ecx,[ebp-0x28]
640042e0:	call   0x64001860
640042e5:	lea    ecx,[ebp-0x28]
640042e8:	push   ecx
640042e9:	lea    edx,[ebp-0x40]
640042ec:	push   edx
640042ed:	lea    eax,[ebp-0x34]
640042f0:	push   eax
640042f1:	mov    BYTE PTR [ebp-0x4],0x13
640042f5:	call   0x64005ca0
640042fa:	mov    BYTE PTR [ebp-0x4],0x2
640042fe:	cmp    DWORD PTR [ebp-0x10],edi
64004301:	jb     0x6400430f
64004303:	mov    ecx,DWORD PTR [ebp-0x24]
64004306:	push   ecx
64004307:	call   0x64012262
6400430c:	add    esp,0x4
6400430f:	push   0x64027e0c
64004314:	push   0xb
64004316:	push   0x64027e44
6400431b:	call   0x64005710
64004320:	mov    esi,eax
64004322:	mov    ecx,esi
64004324:	add    esp,0xc
64004327:	mov    DWORD PTR [ebp-0x10],0xf
6400432e:	mov    DWORD PTR [ebp-0x14],ebx
64004331:	mov    BYTE PTR [ebp-0x24],bl
64004334:	lea    edx,[ecx+0x1]
64004337:	mov    al,BYTE PTR [ecx]
64004339:	add    ecx,0x1
6400433c:	cmp    al,bl
6400433e:	jne    0x64004337
64004340:	sub    ecx,edx
64004342:	push   ecx
64004343:	push   esi
64004344:	lea    ecx,[ebp-0x28]
64004347:	call   0x64001860
6400434c:	lea    edx,[ebp-0x28]
6400434f:	push   edx
64004350:	lea    eax,[ebp-0x40]
64004353:	push   eax
64004354:	lea    ecx,[ebp-0x34]
64004357:	push   ecx
64004358:	mov    BYTE PTR [ebp-0x4],0x14
6400435c:	call   0x64005ca0
64004361:	mov    BYTE PTR [ebp-0x4],0x2
64004365:	cmp    DWORD PTR [ebp-0x10],edi
64004368:	jb     0x64004376
6400436a:	mov    edx,DWORD PTR [ebp-0x24]
6400436d:	push   edx
6400436e:	call   0x64012262
64004373:	add    esp,0x4
64004376:	push   0x64027e50
6400437b:	push   edi
6400437c:	push   0x64027e80
64004381:	call   0x64005710
64004386:	mov    esi,eax
64004388:	mov    ecx,esi
6400438a:	add    esp,0xc
6400438d:	mov    DWORD PTR [ebp-0x10],0xf
64004394:	mov    DWORD PTR [ebp-0x14],ebx
64004397:	mov    BYTE PTR [ebp-0x24],bl
6400439a:	lea    edx,[ecx+0x1]
6400439d:	lea    ecx,[ecx+0x0]
640043a0:	mov    al,BYTE PTR [ecx]
640043a2:	add    ecx,0x1
640043a5:	cmp    al,bl
640043a7:	jne    0x640043a0
640043a9:	sub    ecx,edx
640043ab:	push   ecx
640043ac:	push   esi
640043ad:	lea    ecx,[ebp-0x28]
640043b0:	call   0x64001860
640043b5:	lea    eax,[ebp-0x28]
640043b8:	push   eax
640043b9:	lea    ecx,[ebp-0x40]
640043bc:	push   ecx
640043bd:	lea    edx,[ebp-0x34]
640043c0:	push   edx
640043c1:	mov    BYTE PTR [ebp-0x4],0x15
640043c5:	call   0x64005ca0
640043ca:	mov    BYTE PTR [ebp-0x4],0x2
640043ce:	cmp    DWORD PTR [ebp-0x10],edi
640043d1:	jb     0x640043df
640043d3:	mov    eax,DWORD PTR [ebp-0x24]
640043d6:	push   eax
640043d7:	call   0x64012262
640043dc:	add    esp,0x4
640043df:	push   0x64027e94
640043e4:	push   0x5
640043e6:	push   0x64027ed0
640043eb:	call   0x64005710
640043f0:	mov    esi,eax
640043f2:	mov    ecx,esi
640043f4:	add    esp,0xc
640043f7:	mov    DWORD PTR [ebp-0x10],0xf
640043fe:	mov    DWORD PTR [ebp-0x14],ebx
64004401:	mov    BYTE PTR [ebp-0x24],bl
64004404:	lea    edx,[ecx+0x1]
64004407:	mov    al,BYTE PTR [ecx]
64004409:	add    ecx,0x1
6400440c:	cmp    al,bl
6400440e:	jne    0x64004407
64004410:	sub    ecx,edx
64004412:	push   ecx
64004413:	push   esi
64004414:	lea    ecx,[ebp-0x28]
64004417:	call   0x64001860
6400441c:	lea    ecx,[ebp-0x28]
6400441f:	push   ecx
64004420:	lea    edx,[ebp-0x40]
64004423:	push   edx
64004424:	lea    eax,[ebp-0x34]
64004427:	push   eax
64004428:	mov    BYTE PTR [ebp-0x4],0x16
6400442c:	call   0x64005ca0
64004431:	mov    BYTE PTR [ebp-0x4],0x2
64004435:	cmp    DWORD PTR [ebp-0x10],edi
64004438:	jb     0x64004446
6400443a:	mov    ecx,DWORD PTR [ebp-0x24]
6400443d:	push   ecx
6400443e:	call   0x64012262
64004443:	add    esp,0x4
64004446:	push   0x64027ed8
6400444b:	push   0x5
6400444d:	push   0x64027f04
64004452:	call   0x64005710
64004457:	mov    esi,eax
64004459:	mov    ecx,esi
6400445b:	add    esp,0xc
6400445e:	mov    DWORD PTR [ebp-0x10],0xf
64004465:	mov    DWORD PTR [ebp-0x14],ebx
64004468:	mov    BYTE PTR [ebp-0x24],bl
6400446b:	lea    edx,[ecx+0x1]
6400446e:	mov    edi,edi
64004470:	mov    al,BYTE PTR [ecx]
64004472:	add    ecx,0x1
64004475:	cmp    al,bl
64004477:	jne    0x64004470
64004479:	sub    ecx,edx
6400447b:	push   ecx
6400447c:	push   esi
6400447d:	lea    ecx,[ebp-0x28]
64004480:	call   0x64001860
64004485:	lea    edx,[ebp-0x28]
64004488:	push   edx
64004489:	lea    eax,[ebp-0x40]
6400448c:	push   eax
6400448d:	lea    ecx,[ebp-0x34]
64004490:	push   ecx
64004491:	mov    BYTE PTR [ebp-0x4],0x17
64004495:	call   0x64005ca0
6400449a:	mov    BYTE PTR [ebp-0x4],0x2
6400449e:	cmp    DWORD PTR [ebp-0x10],edi
640044a1:	jb     0x640044af
640044a3:	mov    edx,DWORD PTR [ebp-0x24]
640044a6:	push   edx
640044a7:	call   0x64012262
640044ac:	add    esp,0x4
640044af:	push   0x64027f0c
640044b4:	push   0x8
640044b6:	push   0x64027f48
640044bb:	call   0x64005710
640044c0:	mov    esi,eax
640044c2:	mov    ecx,esi
640044c4:	add    esp,0xc
640044c7:	mov    DWORD PTR [ebp-0x10],0xf
640044ce:	mov    DWORD PTR [ebp-0x14],ebx
640044d1:	mov    BYTE PTR [ebp-0x24],bl
640044d4:	lea    edx,[ecx+0x1]
640044d7:	mov    al,BYTE PTR [ecx]
640044d9:	add    ecx,0x1
640044dc:	cmp    al,bl
640044de:	jne    0x640044d7
640044e0:	sub    ecx,edx
640044e2:	push   ecx
640044e3:	push   esi
640044e4:	lea    ecx,[ebp-0x28]
640044e7:	call   0x64001860
640044ec:	lea    eax,[ebp-0x28]
640044ef:	push   eax
640044f0:	lea    ecx,[ebp-0x40]
640044f3:	push   ecx
640044f4:	lea    edx,[ebp-0x34]
640044f7:	push   edx
640044f8:	mov    BYTE PTR [ebp-0x4],0x18
640044fc:	call   0x64005ca0
64004501:	mov    BYTE PTR [ebp-0x4],0x2
64004505:	cmp    DWORD PTR [ebp-0x10],edi
64004508:	jb     0x64004516
6400450a:	mov    eax,DWORD PTR [ebp-0x24]
6400450d:	push   eax
6400450e:	call   0x64012262
64004513:	add    esp,0x4
64004516:	push   0x64027f54
6400451b:	push   0x8
6400451d:	push   0x64027f88
64004522:	call   0x64005710
64004527:	add    esp,0xc
6400452a:	push   eax
6400452b:	lea    ecx,[ebp+0x0]
6400452e:	call   0x64002680
64004533:	lea    ecx,[ebp+0x0]
64004536:	push   ecx
64004537:	lea    edx,[ebp-0x40]
6400453a:	push   edx
6400453b:	lea    eax,[ebp-0x34]
6400453e:	push   eax
6400453f:	mov    BYTE PTR [ebp-0x4],0x19
64004543:	call   0x64005ca0
64004548:	mov    BYTE PTR [ebp-0x4],0x2
6400454c:	cmp    DWORD PTR [ebp+0x18],edi
6400454f:	jb     0x6400455d
64004551:	mov    ecx,DWORD PTR [ebp+0x4]
64004554:	push   ecx
64004555:	call   0x64012262
6400455a:	add    esp,0x4
6400455d:	push   0x64027f94
64004562:	push   0x4
64004564:	push   0x64027fd0
64004569:	call   0x64005710
6400456e:	add    esp,0xc
64004571:	push   eax
64004572:	lea    ecx,[ebp+0x0]
64004575:	call   0x64002680
6400457a:	lea    edx,[ebp+0x0]
6400457d:	push   edx
6400457e:	lea    eax,[ebp-0x40]
64004581:	push   eax
64004582:	lea    ecx,[ebp-0x34]
64004585:	push   ecx
64004586:	mov    BYTE PTR [ebp-0x4],0x1a
6400458a:	call   0x64005ca0
6400458f:	mov    BYTE PTR [ebp-0x4],0x2
64004593:	cmp    DWORD PTR [ebp+0x18],edi
64004596:	jb     0x640045a4
64004598:	mov    edx,DWORD PTR [ebp+0x4]
6400459b:	push   edx
6400459c:	call   0x64012262
640045a1:	add    esp,0x4
640045a4:	push   0x64027fd8
640045a9:	push   0xc
640045ab:	push   0x64028010
640045b0:	call   0x64005710
640045b5:	add    esp,0xc
640045b8:	push   eax
640045b9:	lea    ecx,[ebp+0x0]
640045bc:	call   0x64002680
640045c1:	lea    eax,[ebp+0x0]
640045c4:	push   eax
640045c5:	lea    ecx,[ebp-0x40]
640045c8:	push   ecx
640045c9:	lea    edx,[ebp-0x34]
640045cc:	push   edx
640045cd:	mov    BYTE PTR [ebp-0x4],0x1b
640045d1:	call   0x64005ca0
640045d6:	mov    BYTE PTR [ebp-0x4],0x2
640045da:	cmp    DWORD PTR [ebp+0x18],edi
640045dd:	jb     0x640045eb
640045df:	mov    eax,DWORD PTR [ebp+0x4]
640045e2:	push   eax
640045e3:	call   0x64012262
640045e8:	add    esp,0x4
640045eb:	push   0x64028020
640045f0:	push   edi
640045f1:	push   0x6402804c
640045f6:	call   0x64005710
640045fb:	add    esp,0xc
640045fe:	push   eax
640045ff:	lea    ecx,[ebp+0x0]
64004602:	call   0x64002680
64004607:	lea    ecx,[ebp+0x0]
6400460a:	push   ecx
6400460b:	lea    edx,[ebp-0x40]
6400460e:	push   edx
6400460f:	lea    eax,[ebp-0x34]
64004612:	push   eax
64004613:	mov    BYTE PTR [ebp-0x4],0x1c
64004617:	call   0x64005ca0
6400461c:	mov    BYTE PTR [ebp-0x4],0x2
64004620:	cmp    DWORD PTR [ebp+0x18],edi
64004623:	jb     0x64004631
64004625:	mov    ecx,DWORD PTR [ebp+0x4]
64004628:	push   ecx
64004629:	call   0x64012262
6400462e:	add    esp,0x4
64004631:	push   0x64028060
64004636:	push   0x7
64004638:	push   0x64028098
6400463d:	call   0x64005710
64004642:	add    esp,0xc
64004645:	push   eax
64004646:	lea    ecx,[ebp+0x0]
64004649:	call   0x64002680
6400464e:	lea    edx,[ebp+0x0]
64004651:	push   edx
64004652:	lea    eax,[ebp-0x40]
64004655:	push   eax
64004656:	lea    ecx,[ebp-0x34]
64004659:	push   ecx
6400465a:	mov    BYTE PTR [ebp-0x4],0x1d
6400465e:	call   0x64005ca0
64004663:	mov    BYTE PTR [ebp-0x4],0x2
64004667:	cmp    DWORD PTR [ebp+0x18],edi
6400466a:	jb     0x64004678
6400466c:	mov    edx,DWORD PTR [ebp+0x4]
6400466f:	push   edx
64004670:	call   0x64012262
64004675:	add    esp,0x4
64004678:	push   0x640280a0
6400467d:	push   0x9
6400467f:	push   0x640280c8
64004684:	call   0x64005710
64004689:	add    esp,0xc
6400468c:	push   eax
6400468d:	lea    ecx,[ebp+0x0]
64004690:	call   0x64002680
64004695:	lea    eax,[ebp+0x0]
64004698:	push   eax
64004699:	lea    ecx,[ebp-0x40]
6400469c:	push   ecx
6400469d:	lea    edx,[ebp-0x34]
640046a0:	push   edx
640046a1:	mov    BYTE PTR [ebp-0x4],0x1e
640046a5:	call   0x64005ca0
640046aa:	mov    BYTE PTR [ebp-0x4],0x2
640046ae:	cmp    DWORD PTR [ebp+0x18],edi
640046b1:	jb     0x640046bf
640046b3:	mov    eax,DWORD PTR [ebp+0x4]
640046b6:	push   eax
640046b7:	call   0x64012262
640046bc:	add    esp,0x4
640046bf:	push   0x640280d4
640046c4:	push   0x7
640046c6:	push   0x64028104
640046cb:	call   0x64005710
640046d0:	add    esp,0xc
640046d3:	push   eax
640046d4:	lea    ecx,[ebp+0x0]
640046d7:	call   0x64002680
640046dc:	lea    ecx,[ebp+0x0]
640046df:	push   ecx
640046e0:	lea    edx,[ebp-0x40]
640046e3:	push   edx
640046e4:	lea    eax,[ebp-0x34]
640046e7:	push   eax
640046e8:	mov    BYTE PTR [ebp-0x4],0x1f
640046ec:	call   0x64005ca0
640046f1:	mov    BYTE PTR [ebp-0x4],0x2
640046f5:	cmp    DWORD PTR [ebp+0x18],edi
640046f8:	jb     0x64004706
640046fa:	mov    ecx,DWORD PTR [ebp+0x4]
640046fd:	push   ecx
640046fe:	call   0x64012262
64004703:	add    esp,0x4
64004706:	push   0x6402810c
6400470b:	push   0xb
6400470d:	push   0x64028144
64004712:	call   0x64005710
64004717:	add    esp,0xc
6400471a:	push   eax
6400471b:	lea    ecx,[ebp+0x0]
6400471e:	call   0x64002680
64004723:	lea    edx,[ebp+0x0]
64004726:	push   edx
64004727:	lea    eax,[ebp-0x40]
6400472a:	push   eax
6400472b:	lea    ecx,[ebp-0x34]
6400472e:	push   ecx
6400472f:	mov    BYTE PTR [ebp-0x4],0x20
64004733:	call   0x64005ca0
64004738:	mov    BYTE PTR [ebp-0x4],0x2
6400473c:	cmp    DWORD PTR [ebp+0x18],edi
6400473f:	jb     0x6400474d
64004741:	mov    edx,DWORD PTR [ebp+0x4]
64004744:	push   edx
64004745:	call   0x64012262
6400474a:	add    esp,0x4
6400474d:	push   0x64028150
64004752:	push   0x6
64004754:	push   0x64028174
64004759:	call   0x64005710
6400475e:	add    esp,0xc
64004761:	push   eax
64004762:	lea    ecx,[ebp+0x0]
64004765:	call   0x64002680
6400476a:	lea    eax,[ebp+0x0]
6400476d:	push   eax
6400476e:	lea    ecx,[ebp-0x40]
64004771:	push   ecx
64004772:	lea    edx,[ebp-0x34]
64004775:	push   edx
64004776:	mov    BYTE PTR [ebp-0x4],0x21
6400477a:	call   0x64005ca0
6400477f:	mov    BYTE PTR [ebp-0x4],0x2
64004783:	cmp    DWORD PTR [ebp+0x18],edi
64004786:	jb     0x64004794
64004788:	mov    eax,DWORD PTR [ebp+0x4]
6400478b:	push   eax
6400478c:	call   0x64012262
64004791:	add    esp,0x4
64004794:	push   0x6402817c
64004799:	push   0x6
6400479b:	push   0x640281bc
640047a0:	call   0x64005710
640047a5:	add    esp,0xc
640047a8:	push   eax
640047a9:	lea    ecx,[ebp+0x0]
640047ac:	call   0x64002680
640047b1:	lea    ecx,[ebp+0x0]
640047b4:	push   ecx
640047b5:	lea    edx,[ebp-0x40]
640047b8:	push   edx
640047b9:	lea    eax,[ebp-0x34]
640047bc:	push   eax
640047bd:	mov    BYTE PTR [ebp-0x4],0x22
640047c1:	call   0x64005ca0
640047c6:	mov    BYTE PTR [ebp-0x4],0x2
640047ca:	cmp    DWORD PTR [ebp+0x18],edi
640047cd:	jb     0x640047db
640047cf:	mov    ecx,DWORD PTR [ebp+0x4]
640047d2:	push   ecx
640047d3:	call   0x64012262
640047d8:	add    esp,0x4
640047db:	push   0x640281c4
640047e0:	push   0x7
640047e2:	push   0x640281f8
640047e7:	call   0x64005710
640047ec:	add    esp,0xc
640047ef:	push   eax
640047f0:	lea    ecx,[ebp+0x0]
640047f3:	call   0x64002680
640047f8:	lea    edx,[ebp+0x0]
640047fb:	push   edx
640047fc:	lea    eax,[ebp-0x40]
640047ff:	push   eax
64004800:	lea    ecx,[ebp-0x34]
64004803:	push   ecx
64004804:	mov    BYTE PTR [ebp-0x4],0x23
64004808:	call   0x64005ca0
6400480d:	mov    BYTE PTR [ebp-0x4],0x2
64004811:	cmp    DWORD PTR [ebp+0x18],edi
64004814:	jb     0x64004822
64004816:	mov    edx,DWORD PTR [ebp+0x4]
64004819:	push   edx
6400481a:	call   0x64012262
6400481f:	add    esp,0x4
64004822:	push   0x64028200
64004827:	push   0x9
64004829:	push   0x64028228
6400482e:	call   0x64005710
64004833:	add    esp,0xc
64004836:	push   eax
64004837:	lea    ecx,[ebp+0x0]
6400483a:	call   0x64002680
6400483f:	lea    eax,[ebp+0x0]
64004842:	push   eax
64004843:	lea    ecx,[ebp-0x40]
64004846:	push   ecx
64004847:	lea    edx,[ebp-0x34]
6400484a:	push   edx
6400484b:	mov    BYTE PTR [ebp-0x4],0x24
6400484f:	call   0x64005ca0
64004854:	mov    BYTE PTR [ebp-0x4],0x2
64004858:	cmp    DWORD PTR [ebp+0x18],edi
6400485b:	jb     0x64004869
6400485d:	mov    eax,DWORD PTR [ebp+0x4]
64004860:	push   eax
64004861:	call   0x64012262
64004866:	add    esp,0x4
64004869:	push   0x64028234
6400486e:	push   0x7
64004870:	push   0x6402825c
64004875:	call   0x64005710
6400487a:	add    esp,0xc
6400487d:	push   eax
6400487e:	lea    ecx,[ebp+0x0]
64004881:	call   0x64002680
64004886:	lea    ecx,[ebp+0x0]
64004889:	push   ecx
6400488a:	lea    edx,[ebp-0x40]
6400488d:	push   edx
6400488e:	lea    eax,[ebp-0x34]
64004891:	push   eax
64004892:	mov    BYTE PTR [ebp-0x4],0x25
64004896:	call   0x64005ca0
6400489b:	mov    BYTE PTR [ebp-0x4],0x2
6400489f:	cmp    DWORD PTR [ebp+0x18],edi
640048a2:	jb     0x640048b0
640048a4:	mov    ecx,DWORD PTR [ebp+0x4]
640048a7:	push   ecx
640048a8:	call   0x64012262
640048ad:	add    esp,0x4
640048b0:	push   0x64028264
640048b5:	push   0x6
640048b7:	push   0x64028298
640048bc:	call   0x64005710
640048c1:	add    esp,0xc
640048c4:	push   eax
640048c5:	lea    ecx,[ebp+0x0]
640048c8:	call   0x64002680
640048cd:	lea    edx,[ebp+0x0]
640048d0:	push   edx
640048d1:	lea    eax,[ebp-0x40]
640048d4:	push   eax
640048d5:	lea    ecx,[ebp-0x34]
640048d8:	push   ecx
640048d9:	mov    BYTE PTR [ebp-0x4],0x26
640048dd:	call   0x64005ca0
640048e2:	mov    BYTE PTR [ebp-0x4],0x2
640048e6:	cmp    DWORD PTR [ebp+0x18],edi
640048e9:	jb     0x640048f7
640048eb:	mov    edx,DWORD PTR [ebp+0x4]
640048ee:	push   edx
640048ef:	call   0x64012262
640048f4:	add    esp,0x4
640048f7:	push   0x640282a0
640048fc:	push   0x8
640048fe:	push   0x640282dc
64004903:	call   0x64005710
64004908:	add    esp,0xc
6400490b:	push   eax
6400490c:	lea    ecx,[ebp+0x0]
6400490f:	call   0x64002680
64004914:	lea    eax,[ebp+0x0]
64004917:	push   eax
64004918:	lea    ecx,[ebp-0x40]
6400491b:	push   ecx
6400491c:	lea    edx,[ebp-0x34]
6400491f:	push   edx
64004920:	mov    BYTE PTR [ebp-0x4],0x27
64004924:	call   0x64005ca0
64004929:	mov    BYTE PTR [ebp-0x4],0x2
6400492d:	cmp    DWORD PTR [ebp+0x18],edi
64004930:	jb     0x6400493e
64004932:	mov    eax,DWORD PTR [ebp+0x4]
64004935:	push   eax
64004936:	call   0x64012262
6400493b:	add    esp,0x4
6400493e:	push   0x640282e8
64004943:	push   0x6
64004945:	push   0x64028310
6400494a:	call   0x64005710
6400494f:	add    esp,0xc
64004952:	push   eax
64004953:	lea    ecx,[ebp+0x0]
64004956:	call   0x64002680
6400495b:	lea    ecx,[ebp+0x0]
6400495e:	push   ecx
6400495f:	lea    edx,[ebp-0x40]
64004962:	push   edx
64004963:	lea    eax,[ebp-0x34]
64004966:	push   eax
64004967:	mov    BYTE PTR [ebp-0x4],0x28
6400496b:	call   0x64005ca0
64004970:	mov    BYTE PTR [ebp-0x4],0x2
64004974:	cmp    DWORD PTR [ebp+0x18],edi
64004977:	jb     0x64004985
64004979:	mov    ecx,DWORD PTR [ebp+0x4]
6400497c:	push   ecx
6400497d:	call   0x64012262
64004982:	add    esp,0x4
64004985:	mov    edx,DWORD PTR [ebp-0x30]
64004988:	mov    eax,DWORD PTR [edx]
6400498a:	lea    ecx,[ebp-0x34]
6400498d:	mov    edi,ecx
6400498f:	mov    DWORD PTR [ebp-0x3c],edi
64004992:	mov    DWORD PTR [ebp-0x38],eax
64004995:	cmp    edi,ebx
64004997:	mov    esi,DWORD PTR [ebp-0x30]
6400499a:	je     0x640049a3
6400499c:	lea    eax,[ebp-0x34]
6400499f:	cmp    edi,eax
640049a1:	je     0x640049a8
640049a3:	call   0x64012618
640049a8:	cmp    DWORD PTR [ebp-0x38],esi
640049ab:	je     0x64004aac
640049b1:	cmp    edi,ebx
640049b3:	jne    0x640049ba
640049b5:	call   0x64012618
640049ba:	mov    ecx,DWORD PTR [ebp-0x38]
640049bd:	cmp    ecx,DWORD PTR [edi+0x4]
640049c0:	jne    0x640049c7
640049c2:	call   0x64012618
640049c7:	mov    esi,DWORD PTR [ebp-0x38]
640049ca:	add    esi,0xc
640049cd:	cmp    DWORD PTR [esi+0x18],0x10
640049d1:	jb     0x640049d8
640049d3:	mov    ecx,DWORD PTR [esi+0x4]
640049d6:	jmp    0x640049db
640049d8:	lea    ecx,[esi+0x4]
640049db:	lea    edx,[ebp+0x41c]
640049e1:	mov    al,BYTE PTR [ecx]
640049e3:	mov    BYTE PTR [edx],al
640049e5:	add    ecx,0x1
640049e8:	add    edx,0x1
640049eb:	cmp    al,bl
640049ed:	jne    0x640049e1
640049ef:	mov    edx,DWORD PTR [ebp-0x38]
640049f2:	cmp    edx,DWORD PTR [edi+0x4]
640049f5:	jne    0x640049fc
640049f7:	call   0x64012618
640049fc:	push   0xffffffff
640049fe:	push   ebx
640049ff:	mov    edi,0xf
64004a04:	push   esi
64004a05:	lea    ecx,[ebp+0x0]
64004a08:	mov    DWORD PTR [ebp+0x18],edi
64004a0b:	mov    DWORD PTR [ebp+0x14],ebx
64004a0e:	mov    BYTE PTR [ebp+0x4],bl
64004a11:	call   0x64001780
64004a16:	lea    eax,[ebp+0x41c]
64004a1c:	push   eax
64004a1d:	mov    BYTE PTR [ebp-0x4],0x29
64004a21:	call   0x6401eef5
64004a26:	lea    eax,[ebp+0x41c]
64004a2c:	add    esp,0x4
64004a2f:	mov    DWORD PTR [ebp-0x10],edi
64004a32:	mov    DWORD PTR [ebp-0x14],ebx
64004a35:	mov    BYTE PTR [ebp-0x24],bl
64004a38:	lea    edx,[eax+0x1]
64004a3b:	jmp    0x64004a40
64004a3d:	lea    ecx,[ecx+0x0]
64004a40:	mov    cl,BYTE PTR [eax]
64004a42:	add    eax,0x1
64004a45:	cmp    cl,bl
64004a47:	jne    0x64004a40
64004a49:	sub    eax,edx
64004a4b:	push   eax
64004a4c:	lea    ecx,[ebp+0x41c]
64004a52:	push   ecx
64004a53:	lea    ecx,[ebp-0x28]
64004a56:	call   0x64001860
64004a5b:	lea    edx,[ebp-0x28]
64004a5e:	push   edx
64004a5f:	lea    eax,[ebp-0x50]
64004a62:	push   eax
64004a63:	push   0x6403134c
64004a68:	mov    BYTE PTR [ebp-0x4],0x2a
64004a6c:	call   0x64005ca0
64004a71:	mov    esi,0x10
64004a76:	cmp    DWORD PTR [ebp-0x10],esi
64004a79:	jb     0x64004a87
64004a7b:	mov    ecx,DWORD PTR [ebp-0x24]
64004a7e:	push   ecx
64004a7f:	call   0x64012262
64004a84:	add    esp,0x4
64004a87:	mov    BYTE PTR [ebp-0x4],0x2
64004a8b:	cmp    DWORD PTR [ebp+0x18],esi
64004a8e:	jb     0x64004a9c
64004a90:	mov    edx,DWORD PTR [ebp+0x4]
64004a93:	push   edx
64004a94:	call   0x64012262
64004a99:	add    esp,0x4
64004a9c:	lea    esi,[ebp-0x3c]
64004a9f:	call   0x64006580
64004aa4:	mov    edi,DWORD PTR [ebp-0x3c]
64004aa7:	jmp    0x64004995
64004aac:	lea    eax,[ebp-0x34]
64004aaf:	call   0x64005e90
64004ab4:	lea    eax,[ebp-0x34]
64004ab7:	mov    BYTE PTR [ebp-0x4],bl
64004aba:	call   0x64006540
64004abf:	call   DWORD PTR ds:0x6402d06c
64004ac5:	mov    edi,eax
64004ac7:	mov    eax,DWORD PTR [ebp+0x828]
64004acd:	cmp    DWORD PTR [eax-0x4],0x1
64004ad1:	jle    0x64004ae8
64004ad3:	mov    eax,DWORD PTR [eax-0xc]
64004ad6:	push   eax
64004ad7:	lea    ecx,[ebp+0x828]
64004add:	call   0x64001950
64004ae2:	mov    eax,DWORD PTR [ebp+0x828]
64004ae8:	cmp    eax,ebx
64004aea:	jne    0x64004af0
64004aec:	xor    eax,eax
64004aee:	jmp    0x64004b20
64004af0:	push   eax
64004af1:	call   DWORD PTR ds:0x64025054
64004af7:	add    eax,0x1
64004afa:	cmp    eax,0x3fffffff
64004aff:	jle    0x64004b05
64004b01:	xor    eax,eax
64004b03:	jmp    0x64004b20
64004b05:	lea    esi,[eax+eax*1]
64004b08:	mov    eax,esi
64004b0a:	call   0x64013240
64004b0f:	mov    ecx,DWORD PTR [ebp+0x828]
64004b15:	mov    eax,esp
64004b17:	push   edi
64004b18:	push   esi
64004b19:	push   ecx
64004b1a:	push   eax
64004b1b:	call   0x64002af0
64004b20:	lea    edx,[ebp+0x1c]
64004b23:	mov    cl,BYTE PTR [eax]
64004b25:	mov    BYTE PTR [edx],cl
64004b27:	add    eax,0x1
64004b2a:	add    edx,0x1
64004b2d:	cmp    cl,bl
64004b2f:	jne    0x64004b23
64004b31:	lea    eax,[ebp+0x1c]
64004b34:	mov    DWORD PTR [ebp-0x10],0xf
64004b3b:	mov    DWORD PTR [ebp-0x14],ebx
64004b3e:	mov    BYTE PTR [ebp-0x24],bl
64004b41:	lea    edx,[eax+0x1]
64004b44:	mov    cl,BYTE PTR [eax]
64004b46:	add    eax,0x1
64004b49:	cmp    cl,bl
64004b4b:	jne    0x64004b44
64004b4d:	sub    eax,edx
64004b4f:	push   eax
64004b50:	lea    edx,[ebp+0x1c]
64004b53:	push   edx
64004b54:	lea    ecx,[ebp-0x28]
64004b57:	call   0x64001860
64004b5c:	lea    eax,[ebp-0x28]
64004b5f:	mov    esi,0x6403134c
64004b64:	mov    BYTE PTR [ebp-0x4],0x2b
64004b68:	call   0x64005e30
64004b6d:	test   eax,eax
64004b6f:	setne  BYTE PTR [ebp-0x41]
64004b73:	cmp    DWORD PTR [ebp-0x10],0x10
64004b77:	jb     0x64004b85
64004b79:	mov    eax,DWORD PTR [ebp-0x24]
64004b7c:	push   eax
64004b7d:	call   0x64012262
64004b82:	add    esp,0x4
64004b85:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004b8c:	mov    eax,DWORD PTR [ebp+0x828]
64004b92:	add    eax,0xfffffff0
64004b95:	mov    DWORD PTR [ebp-0x10],0xf
64004b9c:	mov    DWORD PTR [ebp-0x14],ebx
64004b9f:	mov    BYTE PTR [ebp-0x24],bl
64004ba2:	lea    ecx,[eax+0xc]
64004ba5:	or     edx,0xffffffff
64004ba8:	lock xadd DWORD PTR [ecx],edx
64004bac:	dec    edx
64004bad:	test   edx,edx
64004baf:	jg     0x64004bbb
64004bb1:	mov    ecx,DWORD PTR [eax]
64004bb3:	mov    edx,DWORD PTR [ecx]
64004bb5:	push   eax
64004bb6:	mov    eax,DWORD PTR [edx+0x4]
64004bb9:	call   eax
64004bbb:	mov    al,BYTE PTR [ebp-0x41]
64004bbe:	lea    esp,[ebp-0x60]
64004bc1:	mov    ecx,DWORD PTR [ebp-0xc]
64004bc4:	mov    DWORD PTR fs:0x0,ecx
64004bcb:	pop    ecx
64004bcc:	pop    edi
64004bcd:	pop    esi
64004bce:	pop    ebx
64004bcf:	mov    ecx,DWORD PTR [ebp+0x81c]
64004bd5:	xor    ecx,ebp
64004bd7:	call   0x64012abc
64004bdc:	add    ebp,0x820
64004be2:	mov    esp,ebp
64004be4:	pop    ebp
64004be5:	ret    
64004be6:	int3   
64004be7:	int3   
64004be8:	int3   
64004be9:	int3   
64004bea:	int3   
64004beb:	int3   
64004bec:	int3   
64004bed:	int3   
64004bee:	int3   
64004bef:	int3   
64004bf0:	jmp    0x64006540
64004bf5:	int3   
64004bf6:	int3   
64004bf7:	int3   
64004bf8:	int3   
64004bf9:	int3   
64004bfa:	int3   
64004bfb:	int3   
64004bfc:	int3   
64004bfd:	int3   
64004bfe:	int3   
64004bff:	int3   
64004c00:	push   ebp
64004c01:	lea    ebp,[esp-0x820]
64004c08:	sub    esp,0x820
64004c0e:	push   0xffffffff
64004c10:	push   0x640237d1
64004c15:	mov    eax,fs:0x0
64004c1b:	push   eax
64004c1c:	sub    esp,0x44
64004c1f:	mov    eax,ds:0x6402d09c
64004c24:	xor    eax,ebp
64004c26:	mov    DWORD PTR [ebp+0x81c],eax
64004c2c:	push   ebx
64004c2d:	push   esi
64004c2e:	push   edi
64004c2f:	push   eax
64004c30:	lea    eax,[ebp-0xc]
64004c33:	mov    fs:0x0,eax
64004c39:	xor    ebx,ebx
64004c3b:	mov    DWORD PTR [ebp-0x4],ebx
64004c3e:	test   BYTE PTR ds:0x640314ac,0x1
64004c45:	jne    0x64004c8d
64004c47:	or     DWORD PTR ds:0x640314ac,0x1
64004c4e:	mov    BYTE PTR [ebp-0x4],0x1
64004c52:	call   0x64007710
64004c57:	mov    ds:0x640314a4,eax
64004c5c:	mov    BYTE PTR [eax+0x29],0x1
64004c60:	mov    eax,ds:0x640314a4
64004c65:	mov    DWORD PTR [eax+0x4],eax
64004c68:	mov    eax,ds:0x640314a4
64004c6d:	mov    DWORD PTR [eax],eax
64004c6f:	mov    eax,ds:0x640314a4
64004c74:	mov    DWORD PTR [eax+0x8],eax
64004c77:	push   0x64023f90
64004c7c:	mov    DWORD PTR ds:0x640314a8,ebx
64004c82:	call   0x64012bef
64004c87:	add    esp,0x4
64004c8a:	mov    BYTE PTR [ebp-0x4],bl
64004c8d:	cmp    DWORD PTR ds:0x640314a8,ebx
64004c93:	jne    0x64004e57
64004c99:	call   0x64007710
64004c9e:	mov    DWORD PTR [ebp-0x18],eax
64004ca1:	mov    BYTE PTR [eax+0x29],0x1
64004ca5:	mov    eax,DWORD PTR [ebp-0x18]
64004ca8:	mov    DWORD PTR [eax+0x4],eax
64004cab:	mov    eax,DWORD PTR [ebp-0x18]
64004cae:	mov    DWORD PTR [eax],eax
64004cb0:	mov    eax,DWORD PTR [ebp-0x18]
64004cb3:	mov    DWORD PTR [eax+0x8],eax
64004cb6:	mov    DWORD PTR [ebp-0x14],ebx
64004cb9:	push   0x64028318
64004cbe:	push   0xd
64004cc0:	push   0x6402833c
64004cc5:	mov    BYTE PTR [ebp-0x4],0x2
64004cc9:	call   0x64005710
64004cce:	mov    ecx,eax
64004cd0:	add    esp,0xc
64004cd3:	mov    DWORD PTR [ebp-0x2c],0xf
64004cda:	mov    DWORD PTR [ebp-0x30],ebx
64004cdd:	mov    BYTE PTR [ebp-0x40],bl
64004ce0:	lea    esi,[ecx+0x1]
64004ce3:	mov    dl,BYTE PTR [ecx]
64004ce5:	add    ecx,0x1
64004ce8:	cmp    dl,bl
64004cea:	jne    0x64004ce3
64004cec:	sub    ecx,esi
64004cee:	push   ecx
64004cef:	push   eax
64004cf0:	lea    ecx,[ebp-0x44]
64004cf3:	call   0x64001860
64004cf8:	lea    eax,[ebp-0x44]
64004cfb:	push   eax
64004cfc:	lea    ecx,[ebp-0x28]
64004cff:	push   ecx
64004d00:	lea    edx,[ebp-0x1c]
64004d03:	push   edx
64004d04:	mov    BYTE PTR [ebp-0x4],0x3
64004d08:	call   0x64005ca0
64004d0d:	mov    BYTE PTR [ebp-0x4],0x2
64004d11:	cmp    DWORD PTR [ebp-0x2c],0x10
64004d15:	jb     0x64004d23
64004d17:	mov    eax,DWORD PTR [ebp-0x40]
64004d1a:	push   eax
64004d1b:	call   0x64012262
64004d20:	add    esp,0x4
64004d23:	mov    ecx,DWORD PTR [ebp-0x18]
64004d26:	mov    eax,DWORD PTR [ecx]
64004d28:	lea    ecx,[ebp-0x1c]
64004d2b:	mov    edi,ecx
64004d2d:	mov    DWORD PTR [ebp-0x24],edi
64004d30:	mov    DWORD PTR [ebp-0x20],eax
64004d33:	cmp    edi,ebx
64004d35:	mov    esi,DWORD PTR [ebp-0x18]
64004d38:	je     0x64004d41
64004d3a:	lea    edx,[ebp-0x1c]
64004d3d:	cmp    edi,edx
64004d3f:	je     0x64004d46
64004d41:	call   0x64012618
64004d46:	cmp    DWORD PTR [ebp-0x20],esi
64004d49:	je     0x64004e4c
64004d4f:	cmp    edi,ebx
64004d51:	jne    0x64004d58
64004d53:	call   0x64012618
64004d58:	mov    eax,DWORD PTR [ebp-0x20]
64004d5b:	cmp    eax,DWORD PTR [edi+0x4]
64004d5e:	jne    0x64004d65
64004d60:	call   0x64012618
64004d65:	mov    esi,DWORD PTR [ebp-0x20]
64004d68:	add    esi,0xc
64004d6b:	cmp    DWORD PTR [esi+0x18],0x10
64004d6f:	jb     0x64004d76
64004d71:	mov    ecx,DWORD PTR [esi+0x4]
64004d74:	jmp    0x64004d79
64004d76:	lea    ecx,[esi+0x4]
64004d79:	lea    edx,[ebp+0x41c]
64004d7f:	nop
64004d80:	mov    al,BYTE PTR [ecx]
64004d82:	mov    BYTE PTR [edx],al
64004d84:	add    ecx,0x1
64004d87:	add    edx,0x1
64004d8a:	cmp    al,bl
64004d8c:	jne    0x64004d80
64004d8e:	mov    ecx,DWORD PTR [ebp-0x20]
64004d91:	cmp    ecx,DWORD PTR [edi+0x4]
64004d94:	jne    0x64004d9b
64004d96:	call   0x64012618
64004d9b:	push   0xffffffff
64004d9d:	push   ebx
64004d9e:	mov    edi,0xf
64004da3:	push   esi
64004da4:	lea    ecx,[ebp+0x0]
64004da7:	mov    DWORD PTR [ebp+0x18],edi
64004daa:	mov    DWORD PTR [ebp+0x14],ebx
64004dad:	mov    BYTE PTR [ebp+0x4],bl
64004db0:	call   0x64001780
64004db5:	lea    edx,[ebp+0x41c]
64004dbb:	push   edx
64004dbc:	mov    BYTE PTR [ebp-0x4],0x4
64004dc0:	call   0x6401eef5
64004dc5:	lea    eax,[ebp+0x41c]
64004dcb:	add    esp,0x4
64004dce:	mov    DWORD PTR [ebp-0x2c],edi
64004dd1:	mov    DWORD PTR [ebp-0x30],ebx
64004dd4:	mov    BYTE PTR [ebp-0x40],bl
64004dd7:	lea    edx,[eax+0x1]
64004dda:	lea    ebx,[ebx+0x0]
64004de0:	mov    cl,BYTE PTR [eax]
64004de2:	add    eax,0x1
64004de5:	cmp    cl,bl
64004de7:	jne    0x64004de0
64004de9:	sub    eax,edx
64004deb:	push   eax
64004dec:	lea    eax,[ebp+0x41c]
64004df2:	push   eax
64004df3:	lea    ecx,[ebp-0x44]
64004df6:	call   0x64001860
64004dfb:	lea    ecx,[ebp-0x44]
64004dfe:	push   ecx
64004dff:	lea    edx,[ebp-0x50]
64004e02:	push   edx
64004e03:	push   0x640314a0
64004e08:	mov    BYTE PTR [ebp-0x4],0x5
64004e0c:	call   0x64005ca0
64004e11:	mov    esi,0x10
64004e16:	cmp    DWORD PTR [ebp-0x2c],esi
64004e19:	jb     0x64004e27
64004e1b:	mov    eax,DWORD PTR [ebp-0x40]
64004e1e:	push   eax
64004e1f:	call   0x64012262
64004e24:	add    esp,0x4
64004e27:	mov    BYTE PTR [ebp-0x4],0x2
64004e2b:	cmp    DWORD PTR [ebp+0x18],esi
64004e2e:	jb     0x64004e3c
64004e30:	mov    ecx,DWORD PTR [ebp+0x4]
64004e33:	push   ecx
64004e34:	call   0x64012262
64004e39:	add    esp,0x4
64004e3c:	lea    esi,[ebp-0x24]
64004e3f:	call   0x64006580
64004e44:	mov    edi,DWORD PTR [ebp-0x24]
64004e47:	jmp    0x64004d33
64004e4c:	lea    eax,[ebp-0x1c]
64004e4f:	mov    BYTE PTR [ebp-0x4],bl
64004e52:	call   0x64006540
64004e57:	call   DWORD PTR ds:0x6402d06c
64004e5d:	mov    DWORD PTR [ebp-0x20],eax
64004e60:	mov    eax,DWORD PTR [ebp+0x828]
64004e66:	cmp    DWORD PTR [eax-0x4],0x1
64004e6a:	jle    0x64004e81
64004e6c:	mov    edx,DWORD PTR [eax-0xc]
64004e6f:	push   edx
64004e70:	lea    ecx,[ebp+0x828]
64004e76:	call   0x64001950
64004e7b:	mov    eax,DWORD PTR [ebp+0x828]
64004e81:	cmp    eax,ebx
64004e83:	jne    0x64004e89
64004e85:	xor    ecx,ecx
64004e87:	jmp    0x64004ed0
64004e89:	push   eax
64004e8a:	call   DWORD PTR ds:0x64025054
64004e90:	add    eax,0x1
64004e93:	cmp    eax,0x3fffffff
64004e98:	jg     0x64004ecc
64004e9a:	lea    edi,[eax+eax*1]
64004e9d:	mov    eax,edi
64004e9f:	call   0x64013240
64004ea4:	mov    esi,esp
64004ea6:	cmp    esi,ebx
64004ea8:	je     0x64004ecc
64004eaa:	mov    eax,DWORD PTR [ebp+0x828]
64004eb0:	mov    ecx,DWORD PTR [ebp-0x20]
64004eb3:	push   ebx
64004eb4:	push   ebx
64004eb5:	push   edi
64004eb6:	push   esi
64004eb7:	push   0xffffffff
64004eb9:	push   eax
64004eba:	push   ebx
64004ebb:	push   ecx
64004ebc:	mov    BYTE PTR [esi],bl
64004ebe:	call   DWORD PTR ds:0x64025028
64004ec4:	neg    eax
64004ec6:	sbb    eax,eax
64004ec8:	and    eax,esi
64004eca:	jmp    0x64004ece
64004ecc:	xor    eax,eax
64004ece:	mov    ecx,eax
64004ed0:	lea    edx,[ebp+0x1c]
64004ed3:	mov    al,BYTE PTR [ecx]
64004ed5:	mov    BYTE PTR [edx],al
64004ed7:	add    ecx,0x1
64004eda:	add    edx,0x1
64004edd:	cmp    al,bl
64004edf:	jne    0x64004ed3
64004ee1:	mov    edi,0xf
64004ee6:	lea    eax,[ebp+0x1c]
64004ee9:	mov    DWORD PTR [ebp-0x2c],edi
64004eec:	mov    DWORD PTR [ebp-0x30],ebx
64004eef:	mov    BYTE PTR [ebp-0x40],bl
64004ef2:	lea    edx,[eax+0x1]
64004ef5:	mov    cl,BYTE PTR [eax]
64004ef7:	add    eax,0x1
64004efa:	cmp    cl,bl
64004efc:	jne    0x64004ef5
64004efe:	sub    eax,edx
64004f00:	push   eax
64004f01:	lea    edx,[ebp+0x1c]
64004f04:	push   edx
64004f05:	lea    ecx,[ebp-0x44]
64004f08:	call   0x64001860
64004f0d:	lea    eax,[ebp-0x44]
64004f10:	mov    esi,0x640314a0
64004f15:	mov    BYTE PTR [ebp-0x4],0x6
64004f19:	call   0x64005e30
64004f1e:	test   eax,eax
64004f20:	setne  BYTE PTR [ebp-0xd]
64004f24:	cmp    DWORD PTR [ebp-0x2c],0x10
64004f28:	jb     0x64004f36
64004f2a:	mov    eax,DWORD PTR [ebp-0x40]
64004f2d:	push   eax
64004f2e:	call   0x64012262
64004f33:	add    esp,0x4
64004f36:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004f3d:	mov    eax,DWORD PTR [ebp+0x828]
64004f43:	add    eax,0xfffffff0
64004f46:	mov    DWORD PTR [ebp-0x2c],edi
64004f49:	mov    DWORD PTR [ebp-0x30],ebx
64004f4c:	mov    BYTE PTR [ebp-0x40],bl
64004f4f:	lea    ecx,[eax+0xc]
64004f52:	or     edx,0xffffffff
64004f55:	lock xadd DWORD PTR [ecx],edx
64004f59:	dec    edx
64004f5a:	test   edx,edx
64004f5c:	jg     0x64004f68
64004f5e:	mov    ecx,DWORD PTR [eax]
64004f60:	mov    edx,DWORD PTR [ecx]
64004f62:	push   eax
64004f63:	mov    eax,DWORD PTR [edx+0x4]
64004f66:	call   eax
64004f68:	mov    al,BYTE PTR [ebp-0xd]
64004f6b:	lea    esp,[ebp-0x60]
64004f6e:	mov    ecx,DWORD PTR [ebp-0xc]
64004f71:	mov    DWORD PTR fs:0x0,ecx
64004f78:	pop    ecx
64004f79:	pop    edi
64004f7a:	pop    esi
64004f7b:	pop    ebx
64004f7c:	mov    ecx,DWORD PTR [ebp+0x81c]
64004f82:	xor    ecx,ebp
64004f84:	call   0x64012abc
64004f89:	add    ebp,0x820
64004f8f:	mov    esp,ebp
64004f91:	pop    ebp
64004f92:	ret    
64004f93:	int3   
64004f94:	int3   
64004f95:	int3   
64004f96:	int3   
64004f97:	int3   
64004f98:	int3   
64004f99:	int3   
64004f9a:	int3   
64004f9b:	int3   
64004f9c:	int3   
64004f9d:	int3   
64004f9e:	int3   
64004f9f:	int3   
64004fa0:	push   0xffffffff
64004fa2:	push   0x64023bd9
64004fa7:	mov    eax,fs:0x0
64004fad:	push   eax
64004fae:	sub    esp,0x44
64004fb1:	push   ebx
64004fb2:	push   ebp
64004fb3:	push   esi
64004fb4:	push   edi
64004fb5:	mov    eax,ds:0x6402d09c
64004fba:	xor    eax,esp
64004fbc:	push   eax
64004fbd:	lea    eax,[esp+0x58]
64004fc1:	mov    fs:0x0,eax
64004fc7:	xor    edi,edi
64004fc9:	mov    DWORD PTR [esp+0x60],edi
64004fcd:	mov    DWORD PTR [esp+0x28],edi
64004fd1:	call   DWORD PTR ds:0x6402d06c
64004fd7:	mov    eax,ds:0x6402e540
64004fdc:	mov    edx,DWORD PTR [eax+0xc]
64004fdf:	mov    ecx,0x6402e540
64004fe4:	call   edx
64004fe6:	mov    ebx,DWORD PTR [esp+0x68]
64004fea:	add    eax,0x10
64004fed:	mov    DWORD PTR [ebx],eax
64004fef:	push   0x4
64004ff1:	push   edi
64004ff2:	mov    DWORD PTR [esp+0x68],edi
64004ff6:	push   edi
64004ff7:	mov    DWORD PTR [esp+0x34],0x1
64004fff:	call   0x6400e000
64005004:	call   eax
64005006:	cmp    eax,edi
64005008:	mov    DWORD PTR [esp+0x1c],eax
6400500c:	je     0x640051a2
64005012:	mov    ebp,DWORD PTR ds:0x64025004
64005018:	lea    ecx,[esp+0x20]
6400501c:	push   ecx
6400501d:	lea    edx,[esp+0x1c]
64005021:	push   edx
64005022:	lea    ecx,[esp+0x2c]
64005026:	push   ecx
64005027:	push   0x24
64005029:	lea    edx,[esp+0x44]
6400502d:	push   edx
6400502e:	push   0x3
64005030:	push   0x30
64005032:	push   eax
64005033:	mov    DWORD PTR [esp+0x40],edi
64005037:	call   ebp
64005039:	mov    esi,eax
6400503b:	call   DWORD PTR ds:0x64025044
64005041:	cmp    esi,edi
64005043:	je     0x6400504c
64005045:	cmp    eax,0xea
6400504a:	jne    0x6400508e
6400504c:	mov    esi,DWORD PTR [esp+0x24]
64005050:	add    esi,0x24
64005053:	xor    ecx,ecx
64005055:	mov    eax,esi
64005057:	mov    edx,0x24
6400505c:	mul    edx
6400505e:	seto   cl
64005061:	neg    ecx
64005063:	or     ecx,eax
64005065:	push   ecx
64005066:	call   0x6401225d
6400506b:	add    esp,0x4
6400506e:	mov    edi,eax
64005070:	lea    eax,[esp+0x20]
64005074:	push   eax
64005075:	mov    eax,DWORD PTR [esp+0x20]
64005079:	lea    ecx,[esp+0x1c]
6400507d:	push   ecx
6400507e:	lea    edx,[esp+0x2c]
64005082:	push   edx
64005083:	push   esi
64005084:	push   edi
64005085:	push   0x3
64005087:	push   0x30
64005089:	push   eax
6400508a:	call   ebp
6400508c:	jmp    0x64005092
6400508e:	mov    edi,DWORD PTR [esp+0x2c]
64005092:	xor    ebp,ebp
64005094:	cmp    DWORD PTR [esp+0x18],ebp
64005098:	jbe    0x6400519e
6400509e:	add    edi,0x8
640050a1:	mov    ecx,DWORD PTR [edi-0x8]
640050a4:	push   ecx
640050a5:	lea    ecx,[esp+0x18]
640050a9:	call   0x64002500
640050ae:	mov    DWORD PTR [esp+0x60],0x1
640050b6:	mov    eax,DWORD PTR [edi]
640050b8:	cmp    eax,0x10
640050bb:	je     0x640050c6
640050bd:	cmp    eax,0x20
640050c0:	jne    0x64005169
640050c6:	mov    eax,DWORD PTR [esp+0x14]
640050ca:	push   ecx
640050cb:	add    eax,0xfffffff0
640050ce:	mov    DWORD PTR [esp+0x34],esp
640050d2:	mov    esi,esp
640050d4:	push   eax
640050d5:	call   0x64002810
640050da:	add    eax,0x10
640050dd:	add    esp,0x4
640050e0:	cmp    BYTE PTR [esp+0x70],0x0
640050e5:	mov    DWORD PTR [esi],eax
640050e7:	je     0x640050f7
640050e9:	call   0x64004c00
640050ee:	add    esp,0x4
640050f1:	test   al,al
640050f3:	jne    0x64005103
640050f5:	jmp    0x64005169
640050f7:	call   0x64003b60
640050fc:	add    esp,0x4
640050ff:	test   al,al
64005101:	jne    0x64005169
64005103:	push   0x6402834c
64005108:	push   0x4
6400510a:	push   0x6402838c
6400510f:	call   0x64005710
64005114:	add    esp,0xc
64005117:	push   eax
64005118:	mov    ecx,ebx
6400511a:	call   0x640025d0
6400511f:	lea    edx,[esp+0x14]
64005123:	push   edx
64005124:	lea    eax,[esp+0x30]
64005128:	push   eax
64005129:	call   0x640030c0
6400512e:	add    esp,0x8
64005131:	mov    BYTE PTR [esp+0x60],0x2
64005136:	mov    eax,DWORD PTR [eax]
64005138:	mov    ecx,DWORD PTR [eax-0xc]
6400513b:	push   ecx
6400513c:	push   eax
6400513d:	mov    ecx,ebx
6400513f:	call   0x64002950
64005144:	mov    BYTE PTR [esp+0x60],0x1
64005149:	mov    eax,DWORD PTR [esp+0x2c]
6400514d:	add    eax,0xfffffff0
64005150:	lea    ecx,[eax+0xc]
64005153:	or     edx,0xffffffff
64005156:	lock xadd DWORD PTR [ecx],edx
6400515a:	dec    edx
6400515b:	test   edx,edx
6400515d:	jg     0x64005169
6400515f:	mov    ecx,DWORD PTR [eax]
64005161:	mov    edx,DWORD PTR [ecx]
64005163:	push   eax
64005164:	mov    eax,DWORD PTR [edx+0x4]
64005167:	call   eax
64005169:	mov    BYTE PTR [esp+0x60],0x0
6400516e:	mov    eax,DWORD PTR [esp+0x14]
64005172:	add    eax,0xfffffff0
64005175:	lea    ecx,[eax+0xc]
64005178:	or     edx,0xffffffff
6400517b:	lock xadd DWORD PTR [ecx],edx
6400517f:	dec    edx
64005180:	test   edx,edx
64005182:	jg     0x6400518e
64005184:	mov    ecx,DWORD PTR [eax]
64005186:	mov    edx,DWORD PTR [ecx]
64005188:	push   eax
64005189:	mov    eax,DWORD PTR [edx+0x4]
6400518c:	call   eax
6400518e:	add    ebp,0x1
64005191:	add    edi,0x24
64005194:	cmp    ebp,DWORD PTR [esp+0x18]
64005198:	jb     0x640050a1
6400519e:	mov    eax,DWORD PTR [esp+0x1c]
640051a2:	push   eax
640051a3:	call   0x6400e460
640051a8:	call   eax
640051aa:	mov    eax,ebx
640051ac:	mov    ecx,DWORD PTR [esp+0x58]
640051b0:	mov    DWORD PTR fs:0x0,ecx
640051b7:	pop    ecx
640051b8:	pop    edi
640051b9:	pop    esi
640051ba:	pop    ebp
640051bb:	pop    ebx
640051bc:	add    esp,0x50
640051bf:	ret    
640051c0:	push   ebp
640051c1:	mov    ebp,esp
640051c3:	push   0xffffffff
640051c5:	push   0x64023760
640051ca:	mov    eax,fs:0x0
640051d0:	push   eax
640051d1:	sub    esp,0x15c
640051d7:	mov    eax,ds:0x6402d09c
640051dc:	xor    eax,ebp
640051de:	mov    DWORD PTR [ebp-0x14],eax
640051e1:	push   ebx
640051e2:	push   esi
640051e3:	push   edi
640051e4:	push   eax
640051e5:	lea    eax,[ebp-0xc]
640051e8:	mov    fs:0x0,eax
640051ee:	mov    DWORD PTR [ebp-0x10],esp
640051f1:	mov    edi,DWORD PTR [ebp+0x8]
640051f4:	push   0xa0
640051f9:	lea    eax,[ebp-0x154]
640051ff:	push   eax
64005200:	push   0x7d0
64005205:	push   0x64000000
6400520a:	mov    DWORD PTR [ebp-0x4],0x0
64005211:	call   DWORD PTR ds:0x640251b4
64005217:	test   eax,eax
64005219:	je     0x64005260
6400521b:	push   ecx
6400521c:	lea    edx,[ebp-0x154]
64005222:	mov    ecx,esp
64005224:	mov    DWORD PTR [ebp-0x158],esp
6400522a:	push   edx
6400522b:	call   0x64002500
64005230:	lea    esi,[ebp-0x168]
64005236:	call   0x64002ec0
6400523b:	mov    ecx,DWORD PTR [eax]
6400523d:	mov    DWORD PTR [edi],ecx
6400523f:	mov    edx,DWORD PTR [eax+0x4]
64005242:	mov    DWORD PTR [edi+0x4],edx
64005245:	mov    ecx,DWORD PTR [eax+0x8]
64005248:	mov    DWORD PTR [edi+0x8],ecx
6400524b:	mov    edx,DWORD PTR [eax+0xc]
6400524e:	add    esp,0x4
64005251:	mov    DWORD PTR [edi+0xc],edx
64005254:	mov    al,0x1
64005256:	jmp    0x64005283
64005258:	mov    eax,0x6400525e
6400525d:	ret    
6400525e:	jmp    0x64005281
64005260:	mov    eax,ds:0x64025c14
64005265:	mov    DWORD PTR [edi],eax
64005267:	mov    ecx,DWORD PTR ds:0x64025c18
6400526d:	mov    DWORD PTR [edi+0x4],ecx
64005270:	mov    edx,DWORD PTR ds:0x64025c1c
64005276:	mov    DWORD PTR [edi+0x8],edx
64005279:	mov    eax,ds:0x64025c20
6400527e:	mov    DWORD PTR [edi+0xc],eax
64005281:	xor    al,al
64005283:	mov    ecx,DWORD PTR [ebp-0xc]
64005286:	mov    DWORD PTR fs:0x0,ecx
6400528d:	pop    ecx
6400528e:	pop    edi
6400528f:	pop    esi
64005290:	pop    ebx
64005291:	mov    ecx,DWORD PTR [ebp-0x14]
64005294:	xor    ecx,ebp
64005296:	call   0x64012abc
6400529b:	mov    esp,ebp
6400529d:	pop    ebp
6400529e:	ret    
6400529f:	int3   
640052a0:	sub    esp,0x118
640052a6:	mov    eax,ds:0x6402d09c
640052ab:	xor    eax,esp
640052ad:	mov    DWORD PTR [esp+0x114],eax
640052b4:	push   esi
640052b5:	push   0x110
640052ba:	lea    eax,[esp+0xc]
640052be:	push   0x0
640052c0:	push   eax
640052c1:	call   0x640131c0
640052c6:	mov    edx,DWORD PTR ds:0x6402e540
640052cc:	mov    eax,DWORD PTR [edx+0xc]
640052cf:	add    esp,0xc
640052d2:	mov    ecx,0x6402e540
640052d7:	mov    DWORD PTR [esp+0x4],0x114
640052df:	call   eax
640052e1:	lea    ecx,[esp+0x4]
640052e5:	mov    esi,eax
640052e7:	push   ecx
640052e8:	add    esi,0x10
640052eb:	call   DWORD PTR ds:0x6402506c
640052f1:	test   eax,eax
640052f3:	je     0x64005335
640052f5:	mov    edx,DWORD PTR [esp+0x8]
640052f9:	mov    eax,DWORD PTR [esp+0xc]
640052fd:	mov    DWORD PTR [edi],edx
640052ff:	mov    DWORD PTR [ebx],eax
64005301:	lea    eax,[esi-0x10]
64005304:	lea    ecx,[eax+0xc]
64005307:	or     edx,0xffffffff
6400530a:	lock xadd DWORD PTR [ecx],edx
6400530e:	dec    edx
6400530f:	test   edx,edx
64005311:	jg     0x6400531d
64005313:	mov    ecx,DWORD PTR [eax]
64005315:	mov    edx,DWORD PTR [ecx]
64005317:	push   eax
64005318:	mov    eax,DWORD PTR [edx+0x4]
6400531b:	call   eax
6400531d:	mov    al,0x1
6400531f:	pop    esi
64005320:	mov    ecx,DWORD PTR [esp+0x114]
64005327:	xor    ecx,esp
64005329:	call   0x64012abc
6400532e:	add    esp,0x118
64005334:	ret    
64005335:	lea    eax,[esi-0x10]
64005338:	lea    ecx,[eax+0xc]
6400533b:	or     edx,0xffffffff
6400533e:	lock xadd DWORD PTR [ecx],edx
64005342:	dec    edx
64005343:	test   edx,edx
64005345:	jg     0x64005351
64005347:	mov    ecx,DWORD PTR [eax]
64005349:	mov    edx,DWORD PTR [ecx]
6400534b:	push   eax
6400534c:	mov    eax,DWORD PTR [edx+0x4]
6400534f:	call   eax
64005351:	mov    ecx,DWORD PTR [esp+0x118]
64005358:	pop    esi
64005359:	xor    ecx,esp
6400535b:	xor    al,al
6400535d:	call   0x64012abc
64005362:	add    esp,0x118
64005368:	ret    
64005369:	int3   
6400536a:	int3   
6400536b:	int3   
6400536c:	int3   
6400536d:	int3   
6400536e:	int3   
6400536f:	int3   
64005370:	push   ebp
64005371:	mov    ebp,esp
64005373:	and    esp,0xfffffff8
64005376:	push   0xffffffff
64005378:	push   0x64023738
6400537d:	mov    eax,fs:0x0
64005383:	push   eax
64005384:	sub    esp,0x14
64005387:	push   ebx
64005388:	push   edi
64005389:	mov    eax,ds:0x6402d09c
6400538e:	xor    eax,esp
64005390:	push   eax
64005391:	lea    eax,[esp+0x20]
64005395:	mov    fs:0x0,eax
6400539b:	cmp    DWORD PTR ds:0x64031340,0x0
640053a2:	jne    0x64005455
640053a8:	push   0x64028394
640053ad:	push   0x12
640053af:	push   0x640283c0
640053b4:	mov    DWORD PTR ds:0x64031340,0xc
640053be:	mov    DWORD PTR ds:0x64031348,0x0
640053c8:	call   0x640059d0
640053cd:	add    esp,0xc
640053d0:	push   eax
640053d1:	lea    ecx,[esp+0x14]
640053d5:	call   0x64002500
640053da:	lea    ebx,[esp+0x18]
640053de:	lea    edi,[esp+0x14]
640053e2:	mov    DWORD PTR [esp+0x28],0x0
640053ea:	call   0x640052a0
640053ef:	test   al,al
640053f1:	je     0x64005418
640053f3:	cmp    DWORD PTR [esp+0x14],0x6
640053f8:	jb     0x64005418
640053fa:	push   0x640283e8
640053ff:	push   0xf
64005401:	push   0x64028410
64005406:	call   0x640059d0
6400540b:	add    esp,0xc
6400540e:	push   eax
6400540f:	lea    ecx,[esp+0x14]
64005413:	call   0x640056d0
64005418:	mov    eax,DWORD PTR [esp+0x10]
6400541c:	push   0x0
6400541e:	push   0x64031344
64005423:	push   0x1
64005425:	push   eax
64005426:	call   0x6400dd60
6400542b:	call   eax
6400542d:	mov    DWORD PTR [esp+0x28],0xffffffff
64005435:	mov    eax,DWORD PTR [esp+0x10]
64005439:	add    eax,0xfffffff0
6400543c:	lea    ecx,[eax+0xc]
6400543f:	or     edx,0xffffffff
64005442:	lock xadd DWORD PTR [ecx],edx
64005446:	dec    edx
64005447:	test   edx,edx
64005449:	jg     0x64005455
6400544b:	mov    ecx,DWORD PTR [eax]
6400544d:	mov    edx,DWORD PTR [ecx]
6400544f:	push   eax
64005450:	mov    eax,DWORD PTR [edx+0x4]
64005453:	call   eax
64005455:	mov    eax,0x64031340
6400545a:	mov    ecx,DWORD PTR [esp+0x20]
6400545e:	mov    DWORD PTR fs:0x0,ecx
64005465:	pop    ecx
64005466:	pop    edi
64005467:	pop    ebx
64005468:	mov    esp,ebp
6400546a:	pop    ebp
6400546b:	ret    
6400546c:	int3   
6400546d:	int3   
6400546e:	int3   
6400546f:	int3   
64005470:	push   0xffffffff
64005472:	push   0x64023708
64005477:	mov    eax,fs:0x0
6400547d:	push   eax
6400547e:	push   ecx
6400547f:	push   esi
64005480:	push   edi
64005481:	mov    eax,ds:0x6402d09c
64005486:	xor    eax,esp
64005488:	push   eax
64005489:	lea    eax,[esp+0x10]
6400548d:	mov    fs:0x0,eax
64005493:	mov    esi,ecx
64005495:	mov    DWORD PTR [esp+0xc],esi
64005499:	mov    eax,ds:0x6402e540
6400549e:	mov    edx,DWORD PTR [eax+0xc]
640054a1:	mov    ecx,0x6402e540
640054a6:	call   edx
640054a8:	add    eax,0x10
640054ab:	mov    DWORD PTR [esi],eax
640054ad:	mov    eax,DWORD PTR [esp+0x20]
640054b1:	test   eax,eax
640054b3:	mov    DWORD PTR [esp+0x18],0x0
640054bb:	je     0x640054e1
640054bd:	test   eax,0xffff0000
640054c2:	jne    0x640054e1
640054c4:	movzx  edi,ax
640054c7:	push   0x0
640054c9:	push   edi
640054ca:	call   0x64001fa0
640054cf:	add    esp,0x8
640054d2:	test   eax,eax
640054d4:	je     0x640054e9
640054d6:	push   edi
640054d7:	push   eax
640054d8:	mov    ecx,esi
640054da:	call   0x64002880
640054df:	jmp    0x640054e9
640054e1:	push   eax
640054e2:	mov    ecx,esi
640054e4:	call   0x64002770
640054e9:	mov    eax,esi
640054eb:	mov    ecx,DWORD PTR [esp+0x10]
640054ef:	mov    DWORD PTR fs:0x0,ecx
640054f6:	pop    ecx
640054f7:	pop    edi
640054f8:	pop    esi
640054f9:	add    esp,0x10
640054fc:	ret    0x4
640054ff:	int3   
64005500:	mov    eax,DWORD PTR [edi]
64005502:	mov    edx,DWORD PTR [eax-0x8]
64005505:	push   ebx
64005506:	mov    ebx,DWORD PTR [eax-0xc]
64005509:	push   esi
6400550a:	mov    ecx,0x1
6400550f:	sub    ecx,DWORD PTR [eax-0x4]
64005512:	lea    esi,[ebx+0x1]
64005515:	sub    edx,esi
64005517:	or     ecx,edx
64005519:	jge    0x64005523
6400551b:	push   esi
6400551c:	mov    ecx,edi
6400551e:	call   0x64001e00
64005523:	test   esi,esi
64005525:	movsx  ax,BYTE PTR [esp+0xc]
6400552b:	mov    ecx,DWORD PTR [edi]
6400552d:	mov    WORD PTR [ecx+ebx*2],ax
64005531:	jl     0x6400554c
64005533:	mov    eax,DWORD PTR [edi]
64005535:	cmp    esi,DWORD PTR [eax-0x8]
64005538:	jg     0x6400554c
6400553a:	mov    DWORD PTR [eax-0xc],esi
6400553d:	mov    edx,DWORD PTR [edi]
6400553f:	mov    WORD PTR [edx+esi*2],0x0
64005545:	pop    esi
64005546:	mov    eax,edi
64005548:	pop    ebx
64005549:	ret    0x4
6400554c:	push   0x80070057
64005551:	call   0x64001040
64005556:	int3   
64005557:	int3   
64005558:	int3   
64005559:	int3   
6400555a:	int3   
6400555b:	int3   
6400555c:	int3   
6400555d:	int3   
6400555e:	int3   
6400555f:	int3   
64005560:	mov    eax,DWORD PTR [edi]
64005562:	mov    edx,DWORD PTR [eax-0x8]
64005565:	push   ebx
64005566:	mov    ebx,DWORD PTR [eax-0xc]
64005569:	push   esi
6400556a:	mov    ecx,0x1
6400556f:	sub    ecx,DWORD PTR [eax-0x4]
64005572:	lea    esi,[ebx+0x1]
64005575:	sub    edx,esi
64005577:	or     ecx,edx
64005579:	jge    0x64005583
6400557b:	push   esi
6400557c:	mov    ecx,edi
6400557e:	call   0x64001e00
64005583:	test   esi,esi
64005585:	mov    eax,DWORD PTR [edi]
64005587:	mov    WORD PTR [eax+ebx*2],0x5c
6400558d:	jl     0x640055a6
6400558f:	mov    eax,DWORD PTR [edi]
64005591:	cmp    esi,DWORD PTR [eax-0x8]
64005594:	jg     0x640055a6
64005596:	mov    DWORD PTR [eax-0xc],esi
64005599:	mov    ecx,DWORD PTR [edi]
6400559b:	mov    WORD PTR [ecx+esi*2],0x0
640055a1:	pop    esi
640055a2:	mov    eax,edi
640055a4:	pop    ebx
640055a5:	ret    
640055a6:	push   0x80070057
640055ab:	call   0x64001040
640055b0:	int3   
640055b1:	int3   
640055b2:	int3   
640055b3:	int3   
640055b4:	int3   
640055b5:	int3   
640055b6:	int3   
640055b7:	int3   
640055b8:	int3   
640055b9:	int3   
640055ba:	int3   
640055bb:	int3   
640055bc:	int3   
640055bd:	int3   
640055be:	int3   
640055bf:	int3   
640055c0:	push   esi
640055c1:	push   edi
640055c2:	mov    edi,DWORD PTR [ebx]
640055c4:	mov    ecx,edi
640055c6:	movzx  eax,WORD PTR [ecx]
640055c9:	xor    edx,edx
640055cb:	test   ax,ax
640055ce:	je     0x64005625
640055d0:	cmp    ax,0x7d
640055d4:	jne    0x640055de
640055d6:	test   edx,edx
640055d8:	jne    0x640055e0
640055da:	mov    edx,ecx
640055dc:	jmp    0x640055e0
640055de:	xor    edx,edx
640055e0:	movzx  eax,WORD PTR [ecx+0x2]
640055e4:	add    ecx,0x2
640055e7:	test   ax,ax
640055ea:	jne    0x640055d0
640055ec:	test   edx,edx
640055ee:	je     0x64005625
640055f0:	mov    ecx,DWORD PTR [edi-0x8]
640055f3:	sub    edx,edi
640055f5:	sar    edx,1
640055f7:	mov    eax,0x1
640055fc:	sub    eax,DWORD PTR [edi-0x4]
640055ff:	mov    esi,edx
64005601:	sub    ecx,esi
64005603:	or     eax,ecx
64005605:	jge    0x6400560f
64005607:	push   esi
64005608:	mov    ecx,ebx
6400560a:	call   0x64001e00
6400560f:	test   esi,esi
64005611:	jl     0x6400562a
64005613:	mov    eax,DWORD PTR [ebx]
64005615:	cmp    esi,DWORD PTR [eax-0x8]
64005618:	jg     0x6400562a
6400561a:	mov    DWORD PTR [eax-0xc],esi
6400561d:	mov    edx,DWORD PTR [ebx]
6400561f:	mov    WORD PTR [edx+esi*2],0x0
64005625:	pop    edi
64005626:	mov    eax,ebx
64005628:	pop    esi
64005629:	ret    
6400562a:	push   0x80070057
6400562f:	call   0x64001040
64005634:	int3   
64005635:	int3   
64005636:	int3   
64005637:	int3   
64005638:	int3   
64005639:	int3   
6400563a:	int3   
6400563b:	int3   
6400563c:	int3   
6400563d:	int3   
6400563e:	int3   
6400563f:	int3   
64005640:	mov    ecx,DWORD PTR [ebx]
64005642:	mov    eax,ecx
64005644:	cmp    WORD PTR [eax],0x7b
64005648:	jne    0x64005659
6400564a:	lea    ebx,[ebx+0x0]
64005650:	add    eax,0x2
64005653:	cmp    WORD PTR [eax],0x7b
64005657:	je     0x64005650
64005659:	cmp    eax,ecx
6400565b:	push   esi
6400565c:	je     0x640056b8
6400565e:	sub    eax,ecx
64005660:	sar    eax,1
64005662:	push   edi
64005663:	mov    edx,0x1
64005668:	sub    edx,DWORD PTR [ecx-0x4]
6400566b:	mov    edi,eax
6400566d:	mov    eax,DWORD PTR [ecx-0xc]
64005670:	mov    ecx,DWORD PTR [ecx-0x8]
64005673:	sub    ecx,eax
64005675:	or     edx,ecx
64005677:	jge    0x64005681
64005679:	push   eax
6400567a:	mov    ecx,ebx
6400567c:	call   0x64001e00
64005681:	mov    eax,DWORD PTR [ebx]
64005683:	mov    esi,DWORD PTR [eax-0xc]
64005686:	sub    esi,edi
64005688:	lea    ecx,[esi+esi*1+0x2]
6400568c:	push   ecx
6400568d:	lea    edx,[eax+edi*2]
64005690:	push   edx
64005691:	push   ecx
64005692:	push   eax
64005693:	call   0x64012493
64005698:	push   eax
64005699:	call   0x64001e90
6400569e:	add    esp,0x14
640056a1:	test   esi,esi
640056a3:	pop    edi
640056a4:	jl     0x640056bc
640056a6:	mov    eax,DWORD PTR [ebx]
640056a8:	cmp    esi,DWORD PTR [eax-0x8]
640056ab:	jg     0x640056bc
640056ad:	mov    DWORD PTR [eax-0xc],esi
640056b0:	mov    eax,DWORD PTR [ebx]
640056b2:	mov    WORD PTR [eax+esi*2],0x0
640056b8:	mov    eax,ebx
640056ba:	pop    esi
640056bb:	ret    
640056bc:	push   0x80070057
640056c1:	call   0x64001040
640056c6:	int3   
640056c7:	int3   
640056c8:	int3   
640056c9:	int3   
640056ca:	int3   
640056cb:	int3   
640056cc:	int3   
640056cd:	int3   
640056ce:	int3   
640056cf:	int3   
640056d0:	push   esi
640056d1:	mov    esi,DWORD PTR [esp+0x8]
640056d5:	test   esi,esi
640056d7:	jne    0x640056e6
640056d9:	xor    eax,eax
640056db:	push   eax
640056dc:	push   esi
640056dd:	call   0x64002950
640056e2:	pop    esi
640056e3:	ret    0x4
640056e6:	mov    eax,esi
640056e8:	push   edi
640056e9:	lea    edi,[eax+0x2]
640056ec:	lea    esp,[esp+0x0]
640056f0:	mov    dx,WORD PTR [eax]
640056f3:	add    eax,0x2
640056f6:	test   dx,dx
640056f9:	jne    0x640056f0
640056fb:	sub    eax,edi
640056fd:	pop    edi
640056fe:	sar    eax,1
64005700:	push   eax
64005701:	push   esi
64005702:	call   0x64002950
64005707:	pop    esi
64005708:	ret    0x4
6400570b:	int3   
6400570c:	int3   
6400570d:	int3   
6400570e:	int3   
6400570f:	int3   
64005710:	push   ebp
64005711:	mov    ebp,esp
64005713:	and    esp,0xfffffff8
64005716:	push   0xffffffff
64005718:	push   0x64022d21
6400571d:	mov    eax,fs:0x0
64005723:	push   eax
64005724:	sub    esp,0xd0
6400572a:	mov    eax,ds:0x6402d09c
6400572f:	xor    eax,esp
64005731:	mov    DWORD PTR [esp+0xc8],eax
64005738:	push   ebx
64005739:	push   esi
6400573a:	push   edi
6400573b:	mov    eax,ds:0x6402d09c
64005740:	xor    eax,esp
64005742:	push   eax
64005743:	lea    eax,[esp+0xe0]
6400574a:	mov    fs:0x0,eax
64005750:	mov    eax,ds:0x64031268
64005755:	mov    esi,DWORD PTR [ebp+0x8]
64005758:	xor    ebx,ebx
6400575a:	cmp    eax,ebx
6400575c:	mov    DWORD PTR [esp+0x28],esi
64005760:	jne    0x64005770
64005762:	push   ebx
64005763:	push   ebx
64005764:	push   ebx
64005765:	call   DWORD PTR ds:0x64025064
6400576b:	mov    ds:0x64031268,eax
64005770:	push   0xffffffff
64005772:	push   eax
64005773:	call   DWORD PTR ds:0x640250b0
64005779:	test   eax,eax
6400577b:	je     0x64005784
6400577d:	mov    eax,esi
6400577f:	jmp    0x640059ab
64005784:	mov    eax,DWORD PTR [ebp+0xc]
64005787:	push   eax
64005788:	mov    edi,0xf
6400578d:	push   esi
6400578e:	lea    ecx,[esp+0xa8]
64005795:	mov    DWORD PTR [esp+0xc0],edi
6400579c:	mov    DWORD PTR [esp+0xbc],ebx
640057a3:	mov    BYTE PTR [esp+0xac],bl
640057aa:	call   0x64001860
640057af:	lea    ecx,[esp+0xa0]
640057b6:	push   ecx
640057b7:	lea    edx,[esp+0x18]
640057bb:	push   edx
640057bc:	mov    DWORD PTR [esp+0xf0],ebx
640057c3:	call   0x64006000
640057c8:	mov    ecx,eax
640057ca:	call   0x64006780
640057cf:	call   0x64006000
640057d4:	mov    esi,DWORD PTR [esp+0x14]
640057d8:	cmp    esi,ebx
640057da:	mov    ecx,DWORD PTR [eax+0x4]
640057dd:	mov    DWORD PTR [esp+0x20],ecx
640057e1:	je     0x640057e7
640057e3:	cmp    esi,eax
640057e5:	je     0x640057ec
640057e7:	call   0x64012618
640057ec:	mov    edx,DWORD PTR [esp+0x20]
640057f0:	cmp    DWORD PTR [esp+0x18],edx
640057f4:	jne    0x640058f8
640057fa:	sub    esp,0x1c
640057fd:	mov    ecx,esp
640057ff:	mov    DWORD PTR [esp+0x48],esp
64005803:	push   0xffffffff
64005805:	push   ebx
64005806:	lea    eax,[esp+0xc4]
6400580d:	mov    DWORD PTR [ecx+0x18],edi
64005810:	mov    DWORD PTR [ecx+0x14],ebx
64005813:	push   eax
64005814:	mov    BYTE PTR [ecx+0x4],bl
64005817:	call   0x64001780
6400581c:	lea    ecx,[esp+0xd8]
64005823:	push   ecx
64005824:	call   0x64006090
64005829:	add    esp,0x4
6400582c:	mov    ecx,esp
6400582e:	mov    BYTE PTR [esp+0x104],0x1
64005836:	mov    DWORD PTR [esp+0x48],esp
6400583a:	push   0xffffffff
6400583c:	push   ebx
6400583d:	lea    edx,[esp+0xe0]
64005844:	mov    DWORD PTR [ecx+0x18],edi
64005847:	mov    DWORD PTR [ecx+0x14],ebx
6400584a:	push   edx
6400584b:	mov    BYTE PTR [ecx+0x4],bl
6400584e:	call   0x64001780
64005853:	sub    esp,0x1c
64005856:	mov    ecx,esp
64005858:	mov    BYTE PTR [esp+0x120],0x2
64005860:	mov    DWORD PTR [esp+0x54],esp
64005864:	push   0xffffffff
64005866:	push   ebx
64005867:	lea    eax,[esp+0xe0]
6400586e:	mov    DWORD PTR [ecx+0x18],edi
64005871:	mov    DWORD PTR [ecx+0x14],ebx
64005874:	push   eax
64005875:	mov    BYTE PTR [ecx+0x4],bl
64005878:	call   0x64001780
6400587d:	lea    ecx,[esp+0xa0]
64005884:	push   ecx
64005885:	mov    BYTE PTR [esp+0x124],0x1
6400588d:	call   0x640089f0
64005892:	add    esp,0x3c
64005895:	push   eax
64005896:	lea    ecx,[esp+0x34]
6400589a:	mov    BYTE PTR [esp+0xec],0x3
640058a2:	call   0x64008a90
640058a7:	lea    edx,[esp+0x30]
640058ab:	push   edx
640058ac:	lea    eax,[esp+0x20]
640058b0:	push   eax
640058b1:	mov    BYTE PTR [esp+0xf0],0x4
640058b9:	call   0x64006000
640058be:	mov    ecx,eax
640058c0:	call   0x640065f0
640058c5:	lea    ecx,[esp+0x30]
640058c9:	call   0x6400fb30
640058ce:	lea    ecx,[esp+0x68]
640058d2:	call   0x6400fb30
640058d7:	mov    BYTE PTR [esp+0xe8],bl
640058de:	cmp    DWORD PTR [esp+0xd4],0x10
640058e6:	jb     0x640058f8
640058e8:	mov    ecx,DWORD PTR [esp+0xc0]
640058ef:	push   ecx
640058f0:	call   0x64012262
640058f5:	add    esp,0x4
640058f8:	mov    edx,DWORD PTR [ebp+0x10]
640058fb:	movzx  eax,BYTE PTR [edx]
640058fe:	cmp    eax,0x100
64005903:	jge    0x64005927
64005905:	lea    ecx,[esp+0xa0]
6400590c:	push   ecx
6400590d:	lea    edx,[esp+0x20]
64005911:	push   edx
64005912:	call   0x64006000
64005917:	mov    ecx,eax
64005919:	call   0x64006780
6400591e:	mov    esi,DWORD PTR [eax]
64005920:	mov    eax,DWORD PTR [eax+0x4]
64005923:	mov    DWORD PTR [esp+0x18],eax
64005927:	call   0x64006000
6400592c:	cmp    esi,ebx
6400592e:	mov    ecx,DWORD PTR [eax+0x4]
64005931:	mov    DWORD PTR [esp+0x20],ecx
64005935:	je     0x6400593b
64005937:	cmp    esi,eax
64005939:	je     0x64005940
6400593b:	call   0x64012618
64005940:	mov    edi,DWORD PTR [esp+0x18]
64005944:	cmp    edi,DWORD PTR [esp+0x20]
64005948:	je     0x6400596d
6400594a:	cmp    esi,ebx
6400594c:	jne    0x64005953
6400594e:	call   0x64012618
64005953:	cmp    edi,DWORD PTR [esi+0x4]
64005956:	jne    0x6400595d
64005958:	call   0x64012618
6400595d:	cmp    DWORD PTR [edi+0x40],0x10
64005961:	jb     0x64005968
64005963:	mov    edi,DWORD PTR [edi+0x2c]
64005966:	jmp    0x64005971
64005968:	add    edi,0x2c
6400596b:	jmp    0x64005971
6400596d:	mov    edi,DWORD PTR [esp+0x28]
64005971:	mov    eax,ds:0x64031268
64005976:	cmp    eax,ebx
64005978:	jne    0x64005988
6400597a:	push   ebx
6400597b:	push   ebx
6400597c:	push   ebx
6400597d:	call   DWORD PTR ds:0x64025064
64005983:	mov    ds:0x64031268,eax
64005988:	push   eax
64005989:	call   DWORD PTR ds:0x64025078
6400598f:	cmp    DWORD PTR [esp+0xb8],0x10
64005997:	jb     0x640059a9
64005999:	mov    edx,DWORD PTR [esp+0xa4]
640059a0:	push   edx
640059a1:	call   0x64012262
640059a6:	add    esp,0x4
640059a9:	mov    eax,edi
640059ab:	mov    ecx,DWORD PTR [esp+0xe0]
640059b2:	mov    DWORD PTR fs:0x0,ecx
640059b9:	pop    ecx
640059ba:	pop    edi
640059bb:	pop    esi
640059bc:	pop    ebx
640059bd:	mov    ecx,DWORD PTR [esp+0xc8]
640059c4:	xor    ecx,esp
640059c6:	call   0x64012abc
640059cb:	mov    esp,ebp
640059cd:	pop    ebp
640059ce:	ret    
640059cf:	int3   
640059d0:	push   ebp
640059d1:	mov    ebp,esp
640059d3:	and    esp,0xfffffff8
640059d6:	push   0xffffffff
640059d8:	push   0x64022cc1
640059dd:	mov    eax,fs:0x0
640059e3:	push   eax
640059e4:	sub    esp,0xd0
640059ea:	mov    eax,ds:0x6402d09c
640059ef:	xor    eax,esp
640059f1:	mov    DWORD PTR [esp+0xc8],eax
640059f8:	push   ebx
640059f9:	push   esi
640059fa:	push   edi
640059fb:	mov    eax,ds:0x6402d09c
64005a00:	xor    eax,esp
64005a02:	push   eax
64005a03:	lea    eax,[esp+0xe0]
64005a0a:	mov    fs:0x0,eax
64005a10:	mov    eax,ds:0x64031268
64005a15:	mov    esi,DWORD PTR [ebp+0x8]
64005a18:	xor    ebx,ebx
64005a1a:	cmp    eax,ebx
64005a1c:	mov    DWORD PTR [esp+0x28],esi
64005a20:	jne    0x64005a30
64005a22:	push   ebx
64005a23:	push   ebx
64005a24:	push   ebx
64005a25:	call   DWORD PTR ds:0x64025064
64005a2b:	mov    ds:0x64031268,eax
64005a30:	push   0xffffffff
64005a32:	push   eax
64005a33:	call   DWORD PTR ds:0x640250b0
64005a39:	test   eax,eax
64005a3b:	je     0x64005a44
64005a3d:	mov    eax,esi
64005a3f:	jmp    0x64005c6f
64005a44:	mov    eax,DWORD PTR [ebp+0xc]
64005a47:	push   eax
64005a48:	mov    edi,0x7
64005a4d:	push   esi
64005a4e:	lea    ecx,[esp+0xa8]
64005a55:	mov    DWORD PTR [esp+0xc0],edi
64005a5c:	mov    DWORD PTR [esp+0xbc],ebx
64005a63:	mov    WORD PTR [esp+0xac],bx
64005a6b:	call   0x64006f80
64005a70:	lea    ecx,[esp+0xa0]
64005a77:	push   ecx
64005a78:	lea    edx,[esp+0x18]
64005a7c:	push   edx
64005a7d:	mov    DWORD PTR [esp+0xf0],ebx
64005a84:	call   0x64006160
64005a89:	mov    ecx,eax
64005a8b:	call   0x64006940
64005a90:	call   0x64006160
64005a95:	mov    esi,DWORD PTR [esp+0x14]
64005a99:	cmp    esi,ebx
64005a9b:	mov    ecx,DWORD PTR [eax+0x4]
64005a9e:	mov    DWORD PTR [esp+0x20],ecx
64005aa2:	je     0x64005aa8
64005aa4:	cmp    esi,eax
64005aa6:	je     0x64005aad
64005aa8:	call   0x64012618
64005aad:	mov    edx,DWORD PTR [esp+0x20]
64005ab1:	cmp    DWORD PTR [esp+0x18],edx
64005ab5:	jne    0x64005bbc
64005abb:	sub    esp,0x1c
64005abe:	mov    ecx,esp
64005ac0:	mov    DWORD PTR [esp+0x48],esp
64005ac4:	push   0xffffffff
64005ac6:	push   ebx
64005ac7:	lea    eax,[esp+0xc4]
64005ace:	mov    DWORD PTR [ecx+0x18],edi
64005ad1:	mov    DWORD PTR [ecx+0x14],ebx
64005ad4:	push   eax
64005ad5:	mov    WORD PTR [ecx+0x4],bx
64005ad9:	call   0x64006e90
64005ade:	lea    ecx,[esp+0xd8]
64005ae5:	push   ecx
64005ae6:	call   0x640061f0
64005aeb:	add    esp,0x4
64005aee:	mov    ecx,esp
64005af0:	mov    BYTE PTR [esp+0x104],0x1
64005af8:	mov    DWORD PTR [esp+0x48],esp
64005afc:	push   0xffffffff
64005afe:	push   ebx
64005aff:	lea    edx,[esp+0xe0]
64005b06:	mov    DWORD PTR [ecx+0x18],edi
64005b09:	mov    DWORD PTR [ecx+0x14],ebx
64005b0c:	push   edx
64005b0d:	mov    WORD PTR [ecx+0x4],bx
64005b11:	call   0x64006e90
64005b16:	sub    esp,0x1c
64005b19:	mov    ecx,esp
64005b1b:	mov    BYTE PTR [esp+0x120],0x2
64005b23:	mov    DWORD PTR [esp+0x54],esp
64005b27:	push   0xffffffff
64005b29:	push   ebx
64005b2a:	lea    eax,[esp+0xe0]
64005b31:	mov    DWORD PTR [ecx+0x18],edi
64005b34:	mov    DWORD PTR [ecx+0x14],ebx
64005b37:	push   eax
64005b38:	mov    WORD PTR [ecx+0x4],bx
64005b3c:	call   0x64006e90
64005b41:	lea    ecx,[esp+0xa0]
64005b48:	push   ecx
64005b49:	mov    BYTE PTR [esp+0x124],0x1
64005b51:	call   0x64008b10
64005b56:	add    esp,0x3c
64005b59:	push   eax
64005b5a:	lea    ecx,[esp+0x34]
64005b5e:	mov    BYTE PTR [esp+0xec],0x3
64005b66:	call   0x64008bb0
64005b6b:	lea    edx,[esp+0x30]
64005b6f:	push   edx
64005b70:	lea    eax,[esp+0x20]
64005b74:	push   eax
64005b75:	mov    BYTE PTR [esp+0xf0],0x4
64005b7d:	call   0x64006160
64005b82:	mov    ecx,eax
64005b84:	call   0x64006830
64005b89:	lea    ecx,[esp+0x30]
64005b8d:	call   0x64005ec0
64005b92:	lea    ecx,[esp+0x68]
64005b96:	call   0x64005ec0
64005b9b:	mov    BYTE PTR [esp+0xe8],bl
64005ba2:	cmp    DWORD PTR [esp+0xd4],0x8
64005baa:	jb     0x64005bbc
64005bac:	mov    ecx,DWORD PTR [esp+0xc0]
64005bb3:	push   ecx
64005bb4:	call   0x64012262
64005bb9:	add    esp,0x4
64005bbc:	mov    edx,DWORD PTR [ebp+0x10]
64005bbf:	movzx  eax,BYTE PTR [edx]
64005bc2:	cmp    eax,0x100
64005bc7:	jge    0x64005beb
64005bc9:	lea    ecx,[esp+0xa0]
64005bd0:	push   ecx
64005bd1:	lea    edx,[esp+0x20]
64005bd5:	push   edx
64005bd6:	call   0x64006160
64005bdb:	mov    ecx,eax
64005bdd:	call   0x64006940
64005be2:	mov    esi,DWORD PTR [eax]
64005be4:	mov    eax,DWORD PTR [eax+0x4]
64005be7:	mov    DWORD PTR [esp+0x18],eax
64005beb:	call   0x64006160
64005bf0:	cmp    esi,ebx
64005bf2:	mov    ecx,DWORD PTR [eax+0x4]
64005bf5:	mov    DWORD PTR [esp+0x20],ecx
64005bf9:	je     0x64005bff
64005bfb:	cmp    esi,eax
64005bfd:	je     0x64005c04
64005bff:	call   0x64012618
64005c04:	mov    edi,DWORD PTR [esp+0x18]
64005c08:	cmp    edi,DWORD PTR [esp+0x20]
64005c0c:	je     0x64005c31
64005c0e:	cmp    esi,ebx
64005c10:	jne    0x64005c17
64005c12:	call   0x64012618
64005c17:	cmp    edi,DWORD PTR [esi+0x4]
64005c1a:	jne    0x64005c21
64005c1c:	call   0x64012618
64005c21:	cmp    DWORD PTR [edi+0x40],0x8
64005c25:	jb     0x64005c2c
64005c27:	mov    edi,DWORD PTR [edi+0x2c]
64005c2a:	jmp    0x64005c35
64005c2c:	add    edi,0x2c
64005c2f:	jmp    0x64005c35
64005c31:	mov    edi,DWORD PTR [esp+0x28]
64005c35:	mov    eax,ds:0x64031268
64005c3a:	cmp    eax,ebx
64005c3c:	jne    0x64005c4c
64005c3e:	push   ebx
64005c3f:	push   ebx
64005c40:	push   ebx
64005c41:	call   DWORD PTR ds:0x64025064
64005c47:	mov    ds:0x64031268,eax
64005c4c:	push   eax
64005c4d:	call   DWORD PTR ds:0x64025078
64005c53:	cmp    DWORD PTR [esp+0xb8],0x8
64005c5b:	jb     0x64005c6d
64005c5d:	mov    edx,DWORD PTR [esp+0xa4]
64005c64:	push   edx
64005c65:	call   0x64012262
64005c6a:	add    esp,0x4
64005c6d:	mov    eax,edi
64005c6f:	mov    ecx,DWORD PTR [esp+0xe0]
64005c76:	mov    DWORD PTR fs:0x0,ecx
64005c7d:	pop    ecx
64005c7e:	pop    edi
64005c7f:	pop    esi
64005c80:	pop    ebx
64005c81:	mov    ecx,DWORD PTR [esp+0xc8]
64005c88:	xor    ecx,esp
64005c8a:	call   0x64012abc
64005c8f:	mov    esp,ebp
64005c91:	pop    ebp
64005c92:	ret    
64005c93:	int3   
64005c94:	int3   
64005c95:	int3   
64005c96:	int3   
64005c97:	int3   
64005c98:	int3   
64005c99:	int3   
64005c9a:	int3   
64005c9b:	int3   
64005c9c:	int3   
64005c9d:	int3   
64005c9e:	int3   
64005c9f:	int3   
64005ca0:	push   ebp
64005ca1:	mov    ebp,esp
64005ca3:	and    esp,0xfffffff8
64005ca6:	sub    esp,0x1c
64005ca9:	mov    ecx,DWORD PTR [ebp+0x8]
64005cac:	mov    eax,DWORD PTR [ecx+0x4]
64005caf:	push   ebx
64005cb0:	push   esi
64005cb1:	mov    esi,DWORD PTR [eax+0x4]
64005cb4:	cmp    BYTE PTR [esi+0x29],0x0
64005cb8:	mov    ebx,eax
64005cba:	mov    al,0x1
64005cbc:	push   edi
64005cbd:	mov    BYTE PTR [esp+0x10],al
64005cc1:	jne    0x64005d62
64005cc7:	mov    edx,DWORD PTR [ebp+0x10]
64005cca:	mov    eax,DWORD PTR [edx+0x14]
64005ccd:	mov    ecx,DWORD PTR [edx+0x18]
64005cd0:	mov    DWORD PTR [esp+0x18],eax
64005cd4:	mov    DWORD PTR [esp+0x14],eax
64005cd8:	mov    DWORD PTR [esp+0x1c],ecx
64005cdc:	jmp    0x64005ce7
64005cde:	mov    edi,edi
64005ce0:	mov    edx,DWORD PTR [ebp+0x10]
64005ce3:	mov    eax,DWORD PTR [esp+0x14]
64005ce7:	cmp    DWORD PTR [esi+0x24],0x10
64005ceb:	mov    ebx,DWORD PTR [esi+0x20]
64005cee:	mov    DWORD PTR [esp+0x20],esi
64005cf2:	jb     0x64005cf9
64005cf4:	mov    ecx,DWORD PTR [esi+0x10]
64005cf7:	jmp    0x64005cfc
64005cf9:	lea    ecx,[esi+0x10]
64005cfc:	mov    edi,DWORD PTR [esp+0x18]
64005d00:	cmp    eax,edi
64005d02:	mov    DWORD PTR [esp+0xc],ecx
64005d06:	jae    0x64005d0a
64005d08:	mov    edi,eax
64005d0a:	cmp    edi,ebx
64005d0c:	mov    ecx,edi
64005d0e:	jb     0x64005d12
64005d10:	mov    ecx,ebx
64005d12:	cmp    DWORD PTR [esp+0x1c],0x10
64005d17:	lea    eax,[edx+0x4]
64005d1a:	jb     0x64005d1e
64005d1c:	mov    eax,DWORD PTR [eax]
64005d1e:	mov    edx,DWORD PTR [esp+0xc]
64005d22:	push   ecx
64005d23:	push   edx
64005d24:	push   eax
64005d25:	call   0x64002be0
64005d2a:	add    esp,0xc
64005d2d:	test   eax,eax
64005d2f:	jne    0x64005d43
64005d31:	cmp    edi,ebx
64005d33:	jae    0x64005d3a
64005d35:	or     eax,0xffffffff
64005d38:	jmp    0x64005d41
64005d3a:	xor    eax,eax
64005d3c:	cmp    edi,ebx
64005d3e:	setne  al
64005d41:	test   eax,eax
64005d43:	setl   al
64005d46:	test   al,al
64005d48:	mov    BYTE PTR [esp+0x10],al
64005d4c:	je     0x64005d52
64005d4e:	mov    esi,DWORD PTR [esi]
64005d50:	jmp    0x64005d55
64005d52:	mov    esi,DWORD PTR [esi+0x8]
64005d55:	cmp    BYTE PTR [esi+0x29],0x0
64005d59:	je     0x64005ce0
64005d5b:	mov    ebx,DWORD PTR [esp+0x20]
64005d5f:	mov    ecx,DWORD PTR [ebp+0x8]
64005d62:	test   al,al
64005d64:	mov    esi,ebx
64005d66:	mov    DWORD PTR [esp+0x24],esi
64005d6a:	mov    DWORD PTR [esp+0x20],ecx
64005d6e:	je     0x64005db3
64005d70:	mov    eax,DWORD PTR [ecx+0x4]
64005d73:	cmp    ebx,DWORD PTR [eax]
64005d75:	jne    0x64005da6
64005d77:	mov    edx,DWORD PTR [ebp+0x10]
64005d7a:	push   edx
64005d7b:	push   0x1
64005d7d:	lea    eax,[esp+0x28]
64005d81:	push   eax
64005d82:	push   ecx
64005d83:	mov    ecx,ebx
64005d85:	call   0x640062c0
64005d8a:	mov    edx,DWORD PTR [eax]
64005d8c:	mov    ecx,DWORD PTR [ebp+0xc]
64005d8f:	mov    eax,DWORD PTR [eax+0x4]
64005d92:	mov    DWORD PTR [ecx+0x4],eax
64005d95:	mov    DWORD PTR [ecx],edx
64005d97:	mov    BYTE PTR [ecx+0x8],0x1
64005d9b:	mov    eax,ecx
64005d9d:	pop    edi
64005d9e:	pop    esi
64005d9f:	pop    ebx
64005da0:	mov    esp,ebp
64005da2:	pop    ebp
64005da3:	ret    0xc
64005da6:	lea    esi,[esp+0x20]
64005daa:	call   0x64007750
64005daf:	mov    esi,DWORD PTR [esp+0x24]
64005db3:	mov    edi,DWORD PTR [ebp+0x10]
64005db6:	cmp    DWORD PTR [edi+0x18],0x10
64005dba:	mov    edx,DWORD PTR [edi+0x14]
64005dbd:	lea    ecx,[esi+0xc]
64005dc0:	jb     0x64005dc7
64005dc2:	mov    eax,DWORD PTR [edi+0x4]
64005dc5:	jmp    0x64005dca
64005dc7:	lea    eax,[edi+0x4]
64005dca:	push   edx
64005dcb:	mov    edx,DWORD PTR [ecx+0x14]
64005dce:	push   eax
64005dcf:	push   edx
64005dd0:	push   0x0
64005dd2:	call   0x64005f80
64005dd7:	test   eax,eax
64005dd9:	jge    0x64005e0d
64005ddb:	mov    eax,DWORD PTR [esp+0x10]
64005ddf:	mov    edx,DWORD PTR [ebp+0x8]
64005de2:	push   edi
64005de3:	push   eax
64005de4:	lea    ecx,[esp+0x28]
64005de8:	push   ecx
64005de9:	push   edx
64005dea:	mov    ecx,ebx
64005dec:	call   0x640062c0
64005df1:	mov    edx,DWORD PTR [eax]
64005df3:	mov    ecx,DWORD PTR [ebp+0xc]
64005df6:	mov    eax,DWORD PTR [eax+0x4]
64005df9:	mov    DWORD PTR [ecx+0x4],eax
64005dfc:	mov    DWORD PTR [ecx],edx
64005dfe:	mov    BYTE PTR [ecx+0x8],0x1
64005e02:	mov    eax,ecx
64005e04:	pop    edi
64005e05:	pop    esi
64005e06:	pop    ebx
64005e07:	mov    esp,ebp
64005e09:	pop    ebp
64005e0a:	ret    0xc
64005e0d:	mov    eax,DWORD PTR [ebp+0xc]
64005e10:	mov    ecx,DWORD PTR [esp+0x20]
64005e14:	pop    edi
64005e15:	mov    DWORD PTR [eax+0x4],esi
64005e18:	pop    esi
64005e19:	mov    DWORD PTR [eax],ecx
64005e1b:	mov    BYTE PTR [eax+0x8],0x0
64005e1f:	pop    ebx
64005e20:	mov    esp,ebp
64005e22:	pop    ebp
64005e23:	ret    0xc
64005e26:	int3   
64005e27:	int3   
64005e28:	int3   
64005e29:	int3   
64005e2a:	int3   
64005e2b:	int3   
64005e2c:	int3   
64005e2d:	int3   
64005e2e:	int3   
64005e2f:	int3   
64005e30:	push   ebp
64005e31:	mov    ebp,esp
64005e33:	and    esp,0xfffffff8
64005e36:	sub    esp,0x8
64005e39:	push   ebx
64005e3a:	push   edi
64005e3b:	mov    ecx,esi
64005e3d:	mov    edi,eax
64005e3f:	call   0x64007670
64005e44:	test   esi,esi
64005e46:	mov    ebx,eax
64005e48:	jne    0x64005e4f
64005e4a:	call   0x64012618
64005e4f:	mov    ecx,edi
64005e51:	mov    eax,esi
64005e53:	call   0x640075c0
64005e58:	test   esi,esi
64005e5a:	mov    edi,eax
64005e5c:	jne    0x64005e63
64005e5e:	call   0x64012618
64005e63:	mov    DWORD PTR [esp+0xc],0x0
64005e6b:	mov    eax,DWORD PTR [esp+0xc]
64005e6f:	push   eax
64005e70:	push   ebx
64005e71:	push   esi
64005e72:	push   edi
64005e73:	push   esi
64005e74:	lea    ebx,[esp+0x20]
64005e78:	call   0x64008eb0
64005e7d:	mov    eax,DWORD PTR [esp+0x20]
64005e81:	add    esp,0x14
64005e84:	pop    edi
64005e85:	pop    ebx
64005e86:	mov    esp,ebp
64005e88:	pop    ebp
64005e89:	ret    
64005e8a:	int3   
64005e8b:	int3   
64005e8c:	int3   
64005e8d:	int3   
64005e8e:	int3   
64005e8f:	int3   
64005e90:	push   ebp
64005e91:	mov    ebp,esp
64005e93:	and    esp,0xfffffff8
64005e96:	mov    edx,DWORD PTR [eax+0x4]
64005e99:	mov    ecx,DWORD PTR ds:0x64031350
64005e9f:	mov    DWORD PTR ds:0x64031350,edx
64005ea5:	mov    DWORD PTR [eax+0x4],ecx
64005ea8:	mov    edx,DWORD PTR [eax+0x8]
64005eab:	mov    ecx,DWORD PTR ds:0x64031354
64005eb1:	mov    DWORD PTR ds:0x64031354,edx
64005eb7:	mov    DWORD PTR [eax+0x8],ecx
64005eba:	mov    esp,ebp
64005ebc:	pop    ebp
64005ebd:	ret    
64005ebe:	int3   
64005ebf:	int3   
64005ec0:	push   esi
64005ec1:	mov    esi,ecx
64005ec3:	cmp    DWORD PTR [esi+0x34],0x8
64005ec7:	push   edi
64005ec8:	jb     0x64005ed6
64005eca:	mov    eax,DWORD PTR [esi+0x20]
64005ecd:	push   eax
64005ece:	call   0x64012262
64005ed3:	add    esp,0x4
64005ed6:	xor    edi,edi
64005ed8:	mov    DWORD PTR [esi+0x34],0x7
64005edf:	mov    DWORD PTR [esi+0x30],edi
64005ee2:	mov    WORD PTR [esi+0x20],di
64005ee6:	cmp    DWORD PTR [esi+0x18],0x8
64005eea:	jb     0x64005ef8
64005eec:	mov    ecx,DWORD PTR [esi+0x4]
64005eef:	push   ecx
64005ef0:	call   0x64012262
64005ef5:	add    esp,0x4
64005ef8:	mov    DWORD PTR [esi+0x14],edi
64005efb:	mov    DWORD PTR [esi+0x18],0x7
64005f02:	mov    WORD PTR [esi+0x4],di
64005f06:	pop    edi
64005f07:	pop    esi
64005f08:	ret    
64005f09:	int3   
64005f0a:	int3   
64005f0b:	int3   
64005f0c:	int3   
64005f0d:	int3   
64005f0e:	int3   
64005f0f:	int3   
64005f10:	mov    ecx,DWORD PTR [eax]
64005f12:	push   esi
64005f13:	mov    esi,DWORD PTR [edi]
64005f15:	lea    eax,[ecx-0x10]
64005f18:	sub    esi,0x10
64005f1b:	cmp    eax,esi
64005f1d:	je     0x64005f6d
64005f1f:	cmp    DWORD PTR [esi+0xc],0x0
64005f23:	push   ebx
64005f24:	lea    ebx,[esi+0xc]
64005f27:	jl     0x64005f5c
64005f29:	mov    edx,DWORD PTR [eax]
64005f2b:	cmp    edx,DWORD PTR [esi]
64005f2d:	jne    0x64005f5c
64005f2f:	push   ebp
64005f30:	push   eax
64005f31:	call   0x64002810
64005f36:	mov    ebp,eax
64005f38:	add    esp,0x4
64005f3b:	or     eax,0xffffffff
64005f3e:	lock xadd DWORD PTR [ebx],eax
64005f42:	dec    eax
64005f43:	test   eax,eax
64005f45:	jg     0x64005f51
64005f47:	mov    ecx,DWORD PTR [esi]
64005f49:	mov    edx,DWORD PTR [ecx]
64005f4b:	mov    eax,DWORD PTR [edx+0x4]
64005f4e:	push   esi
64005f4f:	call   eax
64005f51:	add    ebp,0x10
64005f54:	mov    DWORD PTR [edi],ebp
64005f56:	pop    ebp
64005f57:	pop    ebx
64005f58:	mov    eax,edi
64005f5a:	pop    esi
64005f5b:	ret    
64005f5c:	mov    edx,DWORD PTR [ecx-0xc]
64005f5f:	push   edx
64005f60:	push   ecx
64005f61:	mov    ecx,edi
64005f63:	call   0x64002a50
64005f68:	pop    ebx
64005f69:	mov    eax,edi
64005f6b:	pop    esi
64005f6c:	ret    
64005f6d:	mov    eax,edi
64005f6f:	pop    esi
64005f70:	ret    
64005f71:	int3   
64005f72:	int3   
64005f73:	int3   
64005f74:	int3   
64005f75:	int3   
64005f76:	int3   
64005f77:	int3   
64005f78:	int3   
64005f79:	int3   
64005f7a:	int3   
64005f7b:	int3   
64005f7c:	int3   
64005f7d:	int3   
64005f7e:	int3   
64005f7f:	int3   
64005f80:	push   ebx
64005f81:	push   ebp
64005f82:	mov    ebp,DWORD PTR [esp+0xc]
64005f86:	push   esi
64005f87:	push   edi
64005f88:	mov    edi,ecx
64005f8a:	cmp    DWORD PTR [edi+0x14],ebp
64005f8d:	jae    0x64005f94
64005f8f:	call   0x6401221e
64005f94:	mov    eax,DWORD PTR [edi+0x14]
64005f97:	mov    esi,DWORD PTR [esp+0x18]
64005f9b:	sub    eax,ebp
64005f9d:	cmp    eax,esi
64005f9f:	jae    0x64005fa3
64005fa1:	mov    esi,eax
64005fa3:	mov    ebx,DWORD PTR [esp+0x20]
64005fa7:	cmp    esi,ebx
64005fa9:	mov    eax,esi
64005fab:	jb     0x64005faf
64005fad:	mov    eax,ebx
64005faf:	cmp    DWORD PTR [edi+0x18],0x10
64005fb3:	jb     0x64005fba
64005fb5:	mov    edi,DWORD PTR [edi+0x4]
64005fb8:	jmp    0x64005fbd
64005fba:	add    edi,0x4
64005fbd:	push   eax
64005fbe:	mov    eax,DWORD PTR [esp+0x20]
64005fc2:	push   eax
64005fc3:	add    edi,ebp
64005fc5:	push   edi
64005fc6:	call   0x64002be0
64005fcb:	add    esp,0xc
64005fce:	test   eax,eax
64005fd0:	jne    0x64005fe7
64005fd2:	cmp    esi,ebx
64005fd4:	jae    0x64005fe0
64005fd6:	pop    edi
64005fd7:	pop    esi
64005fd8:	pop    ebp
64005fd9:	or     eax,0xffffffff
64005fdc:	pop    ebx
64005fdd:	ret    0x10
64005fe0:	xor    eax,eax
64005fe2:	cmp    esi,ebx
64005fe4:	setne  al
64005fe7:	pop    edi
64005fe8:	pop    esi
64005fe9:	pop    ebp
64005fea:	pop    ebx
64005feb:	ret    0x10
64005fee:	int3   
64005fef:	int3   
64005ff0:	int3   
64005ff1:	int3   
64005ff2:	int3   
64005ff3:	int3   
64005ff4:	int3   
64005ff5:	int3   
64005ff6:	int3   
64005ff7:	int3   
64005ff8:	int3   
64005ff9:	int3   
64005ffa:	int3   
64005ffb:	int3   
64005ffc:	int3   
64005ffd:	int3   
64005ffe:	int3   
64005fff:	int3   
64006000:	push   0xffffffff
64006002:	push   0x64022c6e
64006007:	mov    eax,fs:0x0
6400600d:	push   eax
6400600e:	mov    eax,ds:0x6402d09c
64006013:	xor    eax,esp
64006015:	push   eax
64006016:	lea    eax,[esp+0x4]
6400601a:	mov    fs:0x0,eax
64006020:	test   BYTE PTR ds:0x6403133c,0x1
64006027:	jne    0x64006079
64006029:	or     DWORD PTR ds:0x6403133c,0x1
64006030:	mov    ecx,0x64031320
64006035:	mov    DWORD PTR [esp+0xc],0x0
6400603d:	call   0x64008770
64006042:	mov    ds:0x64031324,eax
64006047:	mov    BYTE PTR [eax+0x45],0x1
6400604b:	mov    eax,ds:0x64031324
64006050:	mov    DWORD PTR [eax+0x4],eax
64006053:	mov    eax,ds:0x64031324
64006058:	mov    DWORD PTR [eax],eax
6400605a:	mov    eax,ds:0x64031324
6400605f:	mov    DWORD PTR [eax+0x8],eax
64006062:	push   0x64023ff0
64006067:	mov    DWORD PTR ds:0x64031328,0x0
64006071:	call   0x64012bef
64006076:	add    esp,0x4
64006079:	mov    eax,0x64031320
6400607e:	mov    ecx,DWORD PTR [esp+0x4]
64006082:	mov    DWORD PTR fs:0x0,ecx
64006089:	pop    ecx
6400608a:	add    esp,0xc
6400608d:	ret    
6400608e:	int3   
6400608f:	int3   
64006090:	push   0xffffffff
64006092:	push   0x640227e8
64006097:	mov    eax,fs:0x0
6400609d:	push   eax
6400609e:	push   ecx
6400609f:	push   ebx
640060a0:	push   ebp
640060a1:	push   esi
640060a2:	push   edi
640060a3:	mov    eax,ds:0x6402d09c
640060a8:	xor    eax,esp
640060aa:	push   eax
640060ab:	lea    eax,[esp+0x18]
640060af:	mov    fs:0x0,eax
640060b5:	mov    esi,DWORD PTR [esp+0x28]
640060b9:	xor    eax,eax
640060bb:	mov    DWORD PTR [esp+0x14],eax
640060bf:	mov    DWORD PTR [esp+0x20],eax
640060c3:	push   0xffffffff
640060c5:	mov    DWORD PTR [esi+0x14],eax
640060c8:	mov    DWORD PTR [esi+0x18],0xf
640060cf:	lea    ebp,[esi+0x4]
640060d2:	push   eax
640060d3:	mov    BYTE PTR [ebp+0x0],al
640060d6:	lea    eax,[esp+0x34]
640060da:	push   eax
640060db:	mov    ecx,esi
640060dd:	call   0x64001780
640060e2:	mov    eax,DWORD PTR [esi+0x14]
640060e5:	mov    edi,0x1
640060ea:	cmp    eax,edi
640060ec:	jbe    0x6400612d
640060ee:	cmp    edi,eax
640060f0:	jbe    0x640060f7
640060f2:	call   0x64012618
640060f7:	cmp    DWORD PTR [esi+0x18],0x10
640060fb:	jb     0x64006102
640060fd:	mov    ebx,DWORD PTR [ebp+0x0]
64006100:	jmp    0x64006104
64006102:	mov    ebx,ebp
64006104:	lea    ecx,[edi-0x1]
64006107:	cmp    ecx,DWORD PTR [esi+0x14]
6400610a:	jbe    0x64006111
6400610c:	call   0x64012618
64006111:	cmp    DWORD PTR [esi+0x18],0x10
64006115:	jb     0x6400611c
64006117:	mov    eax,DWORD PTR [ebp+0x0]
6400611a:	jmp    0x6400611e
6400611c:	mov    eax,ebp
6400611e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64006122:	xor    BYTE PTR [ebx+edi*1],dl
64006125:	add    edi,0x1
64006128:	cmp    edi,DWORD PTR [esi+0x14]
6400612b:	jb     0x640060f7
6400612d:	cmp    DWORD PTR [esp+0x44],0x10
64006132:	jb     0x64006141
64006134:	mov    eax,DWORD PTR [esp+0x30]
64006138:	push   eax
64006139:	call   0x64012262
6400613e:	add    esp,0x4
64006141:	mov    eax,esi
64006143:	mov    ecx,DWORD PTR [esp+0x18]
64006147:	mov    DWORD PTR fs:0x0,ecx
6400614e:	pop    ecx
6400614f:	pop    edi
64006150:	pop    esi
64006151:	pop    ebp
64006152:	pop    ebx
64006153:	add    esp,0x10
64006156:	ret    
64006157:	int3   
64006158:	int3   
64006159:	int3   
6400615a:	int3   
6400615b:	int3   
6400615c:	int3   
6400615d:	int3   
6400615e:	int3   
6400615f:	int3   
64006160:	push   0xffffffff
64006162:	push   0x64022c3e
64006167:	mov    eax,fs:0x0
6400616d:	push   eax
6400616e:	mov    eax,ds:0x6402d09c
64006173:	xor    eax,esp
64006175:	push   eax
64006176:	lea    eax,[esp+0x4]
6400617a:	mov    fs:0x0,eax
64006180:	test   BYTE PTR ds:0x64031338,0x1
64006187:	jne    0x640061d9
64006189:	or     DWORD PTR ds:0x64031338,0x1
64006190:	mov    ecx,0x6403132c
64006195:	mov    DWORD PTR [esp+0xc],0x0
6400619d:	call   0x64008770
640061a2:	mov    ds:0x64031330,eax
640061a7:	mov    BYTE PTR [eax+0x45],0x1
640061ab:	mov    eax,ds:0x64031330
640061b0:	mov    DWORD PTR [eax+0x4],eax
640061b3:	mov    eax,ds:0x64031330
640061b8:	mov    DWORD PTR [eax],eax
640061ba:	mov    eax,ds:0x64031330
640061bf:	mov    DWORD PTR [eax+0x8],eax
640061c2:	push   0x64023fa0
640061c7:	mov    DWORD PTR ds:0x64031334,0x0
640061d1:	call   0x64012bef
640061d6:	add    esp,0x4
640061d9:	mov    eax,0x6403132c
640061de:	mov    ecx,DWORD PTR [esp+0x4]
640061e2:	mov    DWORD PTR fs:0x0,ecx
640061e9:	pop    ecx
640061ea:	add    esp,0xc
640061ed:	ret    
640061ee:	int3   
640061ef:	int3   
640061f0:	push   0xffffffff
640061f2:	push   0x640227b8
640061f7:	mov    eax,fs:0x0
640061fd:	push   eax
640061fe:	push   ecx
640061ff:	push   ebx
64006200:	push   ebp
64006201:	push   esi
64006202:	push   edi
64006203:	mov    eax,ds:0x6402d09c
64006208:	xor    eax,esp
6400620a:	push   eax
6400620b:	lea    eax,[esp+0x18]
6400620f:	mov    fs:0x0,eax
64006215:	mov    esi,DWORD PTR [esp+0x28]
64006219:	xor    eax,eax
6400621b:	mov    DWORD PTR [esp+0x14],eax
6400621f:	mov    DWORD PTR [esp+0x20],eax
64006223:	push   0xffffffff
64006225:	mov    DWORD PTR [esi+0x14],eax
64006228:	mov    DWORD PTR [esi+0x18],0x7
6400622f:	lea    ebp,[esi+0x4]
64006232:	push   eax
64006233:	mov    WORD PTR [ebp+0x0],ax
64006237:	lea    eax,[esp+0x34]
6400623b:	push   eax
6400623c:	mov    ecx,esi
6400623e:	call   0x64006e90
64006243:	mov    eax,DWORD PTR [esi+0x14]
64006246:	mov    edi,0x1
6400624b:	cmp    eax,edi
6400624d:	jbe    0x64006290
6400624f:	cmp    edi,eax
64006251:	jbe    0x64006258
64006253:	call   0x64012618
64006258:	cmp    DWORD PTR [esi+0x18],0x8
6400625c:	jb     0x64006263
6400625e:	mov    ebx,DWORD PTR [ebp+0x0]
64006261:	jmp    0x64006265
64006263:	mov    ebx,ebp
64006265:	lea    ecx,[edi-0x1]
64006268:	cmp    ecx,DWORD PTR [esi+0x14]
6400626b:	jbe    0x64006272
6400626d:	call   0x64012618
64006272:	cmp    DWORD PTR [esi+0x18],0x8
64006276:	jb     0x6400627d
64006278:	mov    eax,DWORD PTR [ebp+0x0]
6400627b:	jmp    0x6400627f
6400627d:	mov    eax,ebp
6400627f:	mov    dx,WORD PTR [eax+edi*2-0x2]
64006284:	xor    WORD PTR [ebx+edi*2],dx
64006288:	add    edi,0x1
6400628b:	cmp    edi,DWORD PTR [esi+0x14]
6400628e:	jb     0x64006258
64006290:	cmp    DWORD PTR [esp+0x44],0x8
64006295:	jb     0x640062a4
64006297:	mov    eax,DWORD PTR [esp+0x30]
6400629b:	push   eax
6400629c:	call   0x64012262
640062a1:	add    esp,0x4
640062a4:	mov    eax,esi
640062a6:	mov    ecx,DWORD PTR [esp+0x18]
640062aa:	mov    DWORD PTR fs:0x0,ecx
640062b1:	pop    ecx
640062b2:	pop    edi
640062b3:	pop    esi
640062b4:	pop    ebp
640062b5:	pop    ebx
640062b6:	add    esp,0x10
640062b9:	ret    
640062ba:	int3   
640062bb:	int3   
640062bc:	int3   
640062bd:	int3   
640062be:	int3   
640062bf:	int3   
640062c0:	push   0xffffffff
640062c2:	push   0x64022c08
640062c7:	mov    eax,fs:0x0
640062cd:	push   eax
640062ce:	sub    esp,0x44
640062d1:	push   ebx
640062d2:	push   ebp
640062d3:	push   esi
640062d4:	push   edi
640062d5:	mov    eax,ds:0x6402d09c
640062da:	xor    eax,esp
640062dc:	push   eax
640062dd:	lea    eax,[esp+0x58]
640062e1:	mov    fs:0x0,eax
640062e7:	mov    esi,ecx
640062e9:	mov    ebp,DWORD PTR [esp+0x68]
640062ed:	xor    ebx,ebx
640062ef:	cmp    DWORD PTR [ebp+0x8],0x9249248
640062f6:	jb     0x64006341
640062f8:	push   0x13
640062fa:	push   0x64028430
640062ff:	lea    ecx,[esp+0x1c]
64006303:	mov    DWORD PTR [esp+0x34],0xf
6400630b:	mov    DWORD PTR [esp+0x30],ebx
6400630f:	mov    BYTE PTR [esp+0x20],bl
64006313:	call   0x64001860
64006318:	lea    eax,[esp+0x14]
6400631c:	push   eax
6400631d:	lea    ecx,[esp+0x34]
64006321:	mov    DWORD PTR [esp+0x64],ebx
64006325:	call   0x64002c70
6400632a:	push   0x6402abf0
6400632f:	lea    ecx,[esp+0x34]
64006333:	push   ecx
64006334:	mov    DWORD PTR [esp+0x38],0x6402531c
6400633c:	call   0x640126ab
64006341:	mov    edx,DWORD PTR [esp+0x74]
64006345:	mov    eax,DWORD PTR [ebp+0x4]
64006348:	push   ebx
64006349:	push   edx
6400634a:	push   eax
6400634b:	push   esi
6400634c:	push   eax
6400634d:	call   0x64006b90
64006352:	mov    ecx,DWORD PTR [ebp+0x4]
64006355:	mov    edx,eax
64006357:	mov    eax,0x1
6400635c:	add    DWORD PTR [ebp+0x8],eax
6400635f:	cmp    esi,ecx
64006361:	mov    DWORD PTR [esp+0x68],edx
64006365:	jne    0x64006374
64006367:	mov    DWORD PTR [ecx+0x4],edx
6400636a:	mov    ecx,DWORD PTR [ebp+0x4]
6400636d:	mov    DWORD PTR [ecx],edx
6400636f:	mov    ecx,DWORD PTR [ebp+0x4]
64006372:	jmp    0x64006392
64006374:	cmp    BYTE PTR [esp+0x70],bl
64006378:	je     0x64006387
6400637a:	mov    DWORD PTR [esi],edx
6400637c:	mov    ecx,DWORD PTR [ebp+0x4]
6400637f:	cmp    esi,DWORD PTR [ecx]
64006381:	jne    0x64006395
64006383:	mov    DWORD PTR [ecx],edx
64006385:	jmp    0x64006395
64006387:	mov    DWORD PTR [esi+0x8],edx
6400638a:	mov    ecx,DWORD PTR [ebp+0x4]
6400638d:	cmp    esi,DWORD PTR [ecx+0x8]
64006390:	jne    0x64006395
64006392:	mov    DWORD PTR [ecx+0x8],edx
64006395:	mov    esi,DWORD PTR [edx+0x4]
64006398:	cmp    BYTE PTR [esi+0x28],bl
6400639b:	lea    ecx,[edx+0x4]
6400639e:	jne    0x64006516
640063a4:	mov    esi,DWORD PTR [ecx]
640063a6:	mov    edi,DWORD PTR [esi+0x4]
640063a9:	cmp    esi,DWORD PTR [edi]
640063ab:	jne    0x64006457
640063b1:	mov    edi,DWORD PTR [edi+0x8]
640063b4:	cmp    BYTE PTR [edi+0x28],bl
640063b7:	je     0x6400645e
640063bd:	cmp    edx,DWORD PTR [esi+0x8]
640063c0:	jne    0x640063fd
640063c2:	mov    edx,esi
640063c4:	mov    esi,DWORD PTR [edx+0x8]
640063c7:	mov    ecx,DWORD PTR [esi]
640063c9:	mov    DWORD PTR [edx+0x8],ecx
640063cc:	mov    ecx,DWORD PTR [esi]
640063ce:	cmp    BYTE PTR [ecx+0x29],bl
640063d1:	jne    0x640063d6
640063d3:	mov    DWORD PTR [ecx+0x4],edx
640063d6:	mov    edi,DWORD PTR [edx+0x4]
640063d9:	lea    ecx,[edx+0x4]
640063dc:	mov    DWORD PTR [esi+0x4],edi
640063df:	mov    edi,DWORD PTR [ebp+0x4]
640063e2:	cmp    edx,DWORD PTR [edi+0x4]
640063e5:	jne    0x640063ec
640063e7:	mov    DWORD PTR [edi+0x4],esi
640063ea:	jmp    0x640063f9
640063ec:	mov    edi,DWORD PTR [ecx]
640063ee:	cmp    edx,DWORD PTR [edi]
640063f0:	jne    0x640063f6
640063f2:	mov    DWORD PTR [edi],esi
640063f4:	jmp    0x640063f9
640063f6:	mov    DWORD PTR [edi+0x8],esi
640063f9:	mov    DWORD PTR [esi],edx
640063fb:	mov    DWORD PTR [ecx],esi
640063fd:	mov    esi,DWORD PTR [ecx]
640063ff:	mov    BYTE PTR [esi+0x28],al
64006402:	mov    esi,DWORD PTR [ecx]
64006404:	mov    esi,DWORD PTR [esi+0x4]
64006407:	mov    BYTE PTR [esi+0x28],bl
6400640a:	mov    ecx,DWORD PTR [ecx]
6400640c:	mov    ecx,DWORD PTR [ecx+0x4]
6400640f:	mov    esi,DWORD PTR [ecx]
64006411:	mov    edi,DWORD PTR [esi+0x8]
64006414:	mov    DWORD PTR [ecx],edi
64006416:	mov    edi,DWORD PTR [esi+0x8]
64006419:	cmp    BYTE PTR [edi+0x29],bl
6400641c:	jne    0x64006421
6400641e:	mov    DWORD PTR [edi+0x4],ecx
64006421:	mov    edi,DWORD PTR [ecx+0x4]
64006424:	mov    DWORD PTR [esi+0x4],edi
64006427:	mov    edi,DWORD PTR [ebp+0x4]
6400642a:	cmp    ecx,DWORD PTR [edi+0x4]
6400642d:	jne    0x6400643a
6400642f:	mov    DWORD PTR [edi+0x4],esi
64006432:	mov    DWORD PTR [esi+0x8],ecx
64006435:	jmp    0x64006500
6400643a:	mov    edi,DWORD PTR [ecx+0x4]
6400643d:	cmp    ecx,DWORD PTR [edi+0x8]
64006440:	jne    0x6400644d
64006442:	mov    DWORD PTR [edi+0x8],esi
64006445:	mov    DWORD PTR [esi+0x8],ecx
64006448:	jmp    0x64006500
6400644d:	mov    DWORD PTR [edi],esi
6400644f:	mov    DWORD PTR [esi+0x8],ecx
64006452:	jmp    0x64006500
64006457:	mov    edi,DWORD PTR [edi]
64006459:	cmp    BYTE PTR [edi+0x28],bl
6400645c:	jne    0x64006478
6400645e:	mov    edx,esi
64006460:	mov    BYTE PTR [edx+0x28],al
64006463:	mov    BYTE PTR [edi+0x28],al
64006466:	mov    edx,DWORD PTR [ecx]
64006468:	mov    edx,DWORD PTR [edx+0x4]
6400646b:	mov    BYTE PTR [edx+0x28],bl
6400646e:	mov    ecx,DWORD PTR [ecx]
64006470:	mov    edx,DWORD PTR [ecx+0x4]
64006473:	jmp    0x64006503
64006478:	cmp    edx,DWORD PTR [esi]
6400647a:	jne    0x640064b9
6400647c:	mov    edx,esi
6400647e:	mov    esi,DWORD PTR [edx]
64006480:	mov    ecx,DWORD PTR [esi+0x8]
64006483:	mov    DWORD PTR [edx],ecx
64006485:	mov    ecx,DWORD PTR [esi+0x8]
64006488:	cmp    BYTE PTR [ecx+0x29],bl
6400648b:	jne    0x64006490
6400648d:	mov    DWORD PTR [ecx+0x4],edx
64006490:	mov    edi,DWORD PTR [edx+0x4]
64006493:	lea    ecx,[edx+0x4]
64006496:	mov    DWORD PTR [esi+0x4],edi
64006499:	mov    edi,DWORD PTR [ebp+0x4]
6400649c:	cmp    edx,DWORD PTR [edi+0x4]
6400649f:	jne    0x640064a6
640064a1:	mov    DWORD PTR [edi+0x4],esi
640064a4:	jmp    0x640064b4
640064a6:	mov    edi,DWORD PTR [ecx]
640064a8:	cmp    edx,DWORD PTR [edi+0x8]
640064ab:	jne    0x640064b2
640064ad:	mov    DWORD PTR [edi+0x8],esi
640064b0:	jmp    0x640064b4
640064b2:	mov    DWORD PTR [edi],esi
640064b4:	mov    DWORD PTR [esi+0x8],edx
640064b7:	mov    DWORD PTR [ecx],esi
640064b9:	mov    esi,DWORD PTR [ecx]
640064bb:	mov    BYTE PTR [esi+0x28],al
640064be:	mov    esi,DWORD PTR [ecx]
640064c0:	mov    esi,DWORD PTR [esi+0x4]
640064c3:	mov    BYTE PTR [esi+0x28],bl
640064c6:	mov    ecx,DWORD PTR [ecx]
640064c8:	mov    ecx,DWORD PTR [ecx+0x4]
640064cb:	mov    esi,DWORD PTR [ecx+0x8]
640064ce:	mov    edi,DWORD PTR [esi]
640064d0:	mov    DWORD PTR [ecx+0x8],edi
640064d3:	mov    edi,DWORD PTR [esi]
640064d5:	cmp    BYTE PTR [edi+0x29],bl
640064d8:	jne    0x640064dd
640064da:	mov    DWORD PTR [edi+0x4],ecx
640064dd:	mov    edi,DWORD PTR [ecx+0x4]
640064e0:	mov    DWORD PTR [esi+0x4],edi
640064e3:	mov    edi,DWORD PTR [ebp+0x4]
640064e6:	cmp    ecx,DWORD PTR [edi+0x4]
640064e9:	jne    0x640064f0
640064eb:	mov    DWORD PTR [edi+0x4],esi
640064ee:	jmp    0x640064fe
640064f0:	mov    edi,DWORD PTR [ecx+0x4]
640064f3:	cmp    ecx,DWORD PTR [edi]
640064f5:	jne    0x640064fb
640064f7:	mov    DWORD PTR [edi],esi
640064f9:	jmp    0x640064fe
640064fb:	mov    DWORD PTR [edi+0x8],esi
640064fe:	mov    DWORD PTR [esi],ecx
64006500:	mov    DWORD PTR [ecx+0x4],esi
64006503:	mov    esi,DWORD PTR [edx+0x4]
64006506:	cmp    BYTE PTR [esi+0x28],bl
64006509:	lea    ecx,[edx+0x4]
6400650c:	je     0x640063a4
64006512:	mov    edx,DWORD PTR [esp+0x68]
64006516:	mov    ecx,DWORD PTR [ebp+0x4]
64006519:	mov    ecx,DWORD PTR [ecx+0x4]
6400651c:	mov    BYTE PTR [ecx+0x28],al
6400651f:	mov    ecx,DWORD PTR [esp+0x6c]
64006523:	mov    DWORD PTR [ecx+0x4],edx
64006526:	mov    DWORD PTR [ecx],ebp
64006528:	mov    eax,ecx
6400652a:	mov    ecx,DWORD PTR [esp+0x58]
6400652e:	mov    DWORD PTR fs:0x0,ecx
64006535:	pop    ecx
64006536:	pop    edi
64006537:	pop    esi
64006538:	pop    ebp
64006539:	pop    ebx
6400653a:	add    esp,0x50
6400653d:	ret    0x10
64006540:	push   ebp
64006541:	mov    ebp,esp
64006543:	and    esp,0xfffffff8
64006546:	sub    esp,0xc
64006549:	push   edi
6400654a:	mov    edi,eax
6400654c:	mov    eax,DWORD PTR [edi+0x4]
6400654f:	mov    ecx,DWORD PTR [eax]
64006551:	push   eax
64006552:	push   edi
64006553:	push   ecx
64006554:	push   edi
64006555:	lea    eax,[esp+0x18]
64006559:	push   eax
6400655a:	call   0x640069e0
6400655f:	mov    ecx,DWORD PTR [edi+0x4]
64006562:	push   ecx
64006563:	call   0x64012262
64006568:	add    esp,0x4
6400656b:	xor    eax,eax
6400656d:	mov    DWORD PTR [edi+0x4],eax
64006570:	mov    DWORD PTR [edi+0x8],eax
64006573:	pop    edi
64006574:	mov    esp,ebp
64006576:	pop    ebp
64006577:	ret    
64006578:	int3   
64006579:	int3   
6400657a:	int3   
6400657b:	int3   
6400657c:	int3   
6400657d:	int3   
6400657e:	int3   
6400657f:	int3   
64006580:	cmp    DWORD PTR [esi],0x0
64006583:	jne    0x6400658a
64006585:	call   0x64012618
6400658a:	mov    eax,DWORD PTR [esi+0x4]
6400658d:	cmp    BYTE PTR [eax+0x29],0x0
64006591:	je     0x64006598
64006593:	jmp    0x64012618
64006598:	mov    ecx,DWORD PTR [eax+0x8]
6400659b:	cmp    BYTE PTR [ecx+0x29],0x0
6400659f:	jne    0x640065be
640065a1:	mov    eax,DWORD PTR [ecx]
640065a3:	cmp    BYTE PTR [eax+0x29],0x0
640065a7:	jne    0x640065ba
640065a9:	lea    esp,[esp+0x0]
640065b0:	mov    ecx,eax
640065b2:	mov    eax,DWORD PTR [ecx]
640065b4:	cmp    BYTE PTR [eax+0x29],0x0
640065b8:	je     0x640065b0
640065ba:	mov    DWORD PTR [esi+0x4],ecx
640065bd:	ret    
640065be:	mov    eax,DWORD PTR [eax+0x4]
640065c1:	cmp    BYTE PTR [eax+0x29],0x0
640065c5:	jne    0x640065dd
640065c7:	mov    ecx,DWORD PTR [esi+0x4]
640065ca:	cmp    ecx,DWORD PTR [eax+0x8]
640065cd:	jne    0x640065dd
640065cf:	mov    DWORD PTR [esi+0x4],eax
640065d2:	mov    edx,eax
640065d4:	mov    eax,DWORD PTR [edx+0x4]
640065d7:	cmp    BYTE PTR [eax+0x29],0x0
640065db:	je     0x640065c7
640065dd:	mov    DWORD PTR [esi+0x4],eax
640065e0:	ret    
640065e1:	int3   
640065e2:	int3   
640065e3:	int3   
640065e4:	int3   
640065e5:	int3   
640065e6:	int3   
640065e7:	int3   
640065e8:	int3   
640065e9:	int3   
640065ea:	int3   
640065eb:	int3   
640065ec:	int3   
640065ed:	int3   
640065ee:	int3   
640065ef:	int3   
640065f0:	push   ebp
640065f1:	mov    ebp,esp
640065f3:	and    esp,0xfffffff8
640065f6:	sub    esp,0x24
640065f9:	push   ebx
640065fa:	push   esi
640065fb:	push   edi
640065fc:	mov    edi,ecx
640065fe:	mov    eax,DWORD PTR [edi+0x4]
64006601:	mov    esi,DWORD PTR [eax+0x4]
64006604:	cmp    BYTE PTR [esi+0x45],0x0
64006608:	mov    ecx,eax
6400660a:	mov    al,0x1
6400660c:	mov    DWORD PTR [esp+0x28],edi
64006610:	mov    DWORD PTR [esp+0x10],ecx
64006614:	mov    BYTE PTR [esp+0x18],al
64006618:	jne    0x640066b8
6400661e:	mov    edx,DWORD PTR [ebp+0xc]
64006621:	mov    eax,DWORD PTR [edx+0x14]
64006624:	mov    ecx,DWORD PTR [edx+0x18]
64006627:	mov    DWORD PTR [esp+0x20],eax
6400662b:	mov    DWORD PTR [esp+0x1c],eax
6400662f:	mov    DWORD PTR [esp+0x24],ecx
64006633:	jmp    0x6400663c
64006635:	mov    edx,DWORD PTR [ebp+0xc]
64006638:	mov    eax,DWORD PTR [esp+0x1c]
6400663c:	cmp    DWORD PTR [esi+0x24],0x10
64006640:	mov    ebx,DWORD PTR [esi+0x20]
64006643:	mov    DWORD PTR [esp+0x10],esi
64006647:	jb     0x6400664e
64006649:	mov    ecx,DWORD PTR [esi+0x10]
6400664c:	jmp    0x64006651
6400664e:	lea    ecx,[esi+0x10]
64006651:	mov    edi,DWORD PTR [esp+0x20]
64006655:	cmp    eax,edi
64006657:	mov    DWORD PTR [esp+0x14],ecx
6400665b:	jae    0x6400665f
6400665d:	mov    edi,eax
6400665f:	cmp    edi,ebx
64006661:	mov    ecx,edi
64006663:	jb     0x64006667
64006665:	mov    ecx,ebx
64006667:	cmp    DWORD PTR [esp+0x24],0x10
6400666c:	lea    eax,[edx+0x4]
6400666f:	jb     0x64006673
64006671:	mov    eax,DWORD PTR [eax]
64006673:	mov    edx,DWORD PTR [esp+0x14]
64006677:	push   ecx
64006678:	push   edx
64006679:	push   eax
6400667a:	call   0x64002be0
6400667f:	add    esp,0xc
64006682:	test   eax,eax
64006684:	jne    0x64006698
64006686:	cmp    edi,ebx
64006688:	jae    0x6400668f
6400668a:	or     eax,0xffffffff
6400668d:	jmp    0x64006696
6400668f:	xor    eax,eax
64006691:	cmp    edi,ebx
64006693:	setne  al
64006696:	test   eax,eax
64006698:	setl   al
6400669b:	test   al,al
6400669d:	mov    BYTE PTR [esp+0x18],al
640066a1:	je     0x640066a7
640066a3:	mov    esi,DWORD PTR [esi]
640066a5:	jmp    0x640066aa
640066a7:	mov    esi,DWORD PTR [esi+0x8]
640066aa:	cmp    BYTE PTR [esi+0x45],0x0
640066ae:	je     0x64006635
640066b0:	mov    edi,DWORD PTR [esp+0x28]
640066b4:	mov    ecx,DWORD PTR [esp+0x10]
640066b8:	test   al,al
640066ba:	mov    esi,ecx
640066bc:	mov    DWORD PTR [esp+0x2c],esi
640066c0:	mov    DWORD PTR [esp+0x28],edi
640066c4:	je     0x64006709
640066c6:	mov    eax,DWORD PTR [edi+0x4]
640066c9:	cmp    ecx,DWORD PTR [eax]
640066cb:	jne    0x640066fc
640066cd:	mov    edx,DWORD PTR [ebp+0xc]
640066d0:	push   edx
640066d1:	push   ecx
640066d2:	push   0x1
640066d4:	lea    eax,[esp+0x34]
640066d8:	push   eax
640066d9:	mov    ecx,edi
640066db:	call   0x64006c40
640066e0:	mov    ecx,eax
640066e2:	mov    edx,DWORD PTR [ecx]
640066e4:	mov    eax,DWORD PTR [ebp+0x8]
640066e7:	mov    ecx,DWORD PTR [ecx+0x4]
640066ea:	mov    DWORD PTR [eax+0x4],ecx
640066ed:	mov    BYTE PTR [eax+0x8],0x1
640066f1:	mov    DWORD PTR [eax],edx
640066f3:	pop    edi
640066f4:	pop    esi
640066f5:	pop    ebx
640066f6:	mov    esp,ebp
640066f8:	pop    ebp
640066f9:	ret    0x8
640066fc:	lea    ecx,[esp+0x28]
64006700:	call   0x64007f20
64006705:	mov    esi,DWORD PTR [esp+0x2c]
64006709:	mov    ebx,DWORD PTR [ebp+0xc]
6400670c:	cmp    DWORD PTR [ebx+0x18],0x10
64006710:	mov    edx,DWORD PTR [ebx+0x14]
64006713:	lea    ecx,[esi+0xc]
64006716:	jb     0x6400671d
64006718:	mov    eax,DWORD PTR [ebx+0x4]
6400671b:	jmp    0x64006720
6400671d:	lea    eax,[ebx+0x4]
64006720:	push   edx
64006721:	mov    edx,DWORD PTR [ecx+0x14]
64006724:	push   eax
64006725:	push   edx
64006726:	push   0x0
64006728:	call   0x64005f80
6400672d:	test   eax,eax
6400672f:	jge    0x64006764
64006731:	mov    eax,DWORD PTR [esp+0x10]
64006735:	mov    ecx,DWORD PTR [esp+0x18]
64006739:	push   ebx
6400673a:	push   eax
6400673b:	push   ecx
6400673c:	lea    edx,[esp+0x34]
64006740:	push   edx
64006741:	mov    ecx,edi
64006743:	call   0x64006c40
64006748:	mov    ecx,eax
6400674a:	mov    edx,DWORD PTR [ecx]
6400674c:	mov    eax,DWORD PTR [ebp+0x8]
6400674f:	mov    ecx,DWORD PTR [ecx+0x4]
64006752:	mov    DWORD PTR [eax+0x4],ecx
64006755:	mov    BYTE PTR [eax+0x8],0x1
64006759:	mov    DWORD PTR [eax],edx
6400675b:	pop    edi
6400675c:	pop    esi
6400675d:	pop    ebx
6400675e:	mov    esp,ebp
64006760:	pop    ebp
64006761:	ret    0x8
64006764:	mov    eax,DWORD PTR [ebp+0x8]
64006767:	mov    edx,DWORD PTR [esp+0x28]
6400676b:	pop    edi
6400676c:	mov    DWORD PTR [eax+0x4],esi
6400676f:	pop    esi
64006770:	mov    BYTE PTR [eax+0x8],0x0
64006774:	mov    DWORD PTR [eax],edx
64006776:	pop    ebx
64006777:	mov    esp,ebp
64006779:	pop    ebp
6400677a:	ret    0x8
6400677d:	int3   
6400677e:	int3   
6400677f:	int3   
64006780:	sub    esp,0x18
64006783:	push   ebx
64006784:	mov    ebx,DWORD PTR [esp+0x24]
64006788:	push   esi
64006789:	push   edi
6400678a:	push   ebx
6400678b:	mov    esi,ecx
6400678d:	call   0x640077d0
64006792:	test   esi,esi
64006794:	mov    edi,eax
64006796:	mov    DWORD PTR [esp+0x14],edi
6400679a:	jne    0x640067a1
6400679c:	call   0x64012618
640067a1:	cmp    edi,DWORD PTR [esi+0x4]
640067a4:	mov    DWORD PTR [esp+0x10],esi
640067a8:	je     0x640067d4
640067aa:	cmp    DWORD PTR [edi+0x24],0x10
640067ae:	mov    eax,DWORD PTR [edi+0x20]
640067b1:	jb     0x640067b8
640067b3:	mov    edi,DWORD PTR [edi+0x10]
640067b6:	jmp    0x640067bb
640067b8:	add    edi,0x10
640067bb:	push   eax
640067bc:	mov    eax,DWORD PTR [ebx+0x14]
640067bf:	push   edi
640067c0:	push   eax
640067c1:	push   0x0
640067c3:	mov    ecx,ebx
640067c5:	call   0x64005f80
640067ca:	test   eax,eax
640067cc:	jl     0x640067d4
640067ce:	lea    ecx,[esp+0x10]
640067d2:	jmp    0x640067e3
640067d4:	mov    ecx,DWORD PTR [esi+0x4]
640067d7:	mov    DWORD PTR [esp+0x1c],ecx
640067db:	mov    DWORD PTR [esp+0x18],esi
640067df:	lea    ecx,[esp+0x18]
640067e3:	mov    edx,DWORD PTR [ecx]
640067e5:	mov    eax,DWORD PTR [esp+0x28]
640067e9:	mov    ecx,DWORD PTR [ecx+0x4]
640067ec:	pop    edi
640067ed:	pop    esi
640067ee:	mov    DWORD PTR [eax],edx
640067f0:	mov    DWORD PTR [eax+0x4],ecx
640067f3:	pop    ebx
640067f4:	add    esp,0x18
640067f7:	ret    0x8
640067fa:	int3   
640067fb:	int3   
640067fc:	int3   
640067fd:	int3   
640067fe:	int3   
640067ff:	int3   
64006800:	push   esi
64006801:	mov    esi,ecx
64006803:	cmp    DWORD PTR [esi+0x18],0x8
64006807:	jb     0x64006815
64006809:	mov    eax,DWORD PTR [esi+0x4]
6400680c:	push   eax
6400680d:	call   0x64012262
64006812:	add    esp,0x4
64006815:	xor    eax,eax
64006817:	mov    DWORD PTR [esi+0x18],0x7
6400681e:	mov    DWORD PTR [esi+0x14],eax
64006821:	mov    WORD PTR [esi+0x4],ax
64006825:	pop    esi
64006826:	ret    
64006827:	int3   
64006828:	int3   
64006829:	int3   
6400682a:	int3   
6400682b:	int3   
6400682c:	int3   
6400682d:	int3   
6400682e:	int3   
6400682f:	int3   
64006830:	push   ebp
64006831:	mov    ebp,esp
64006833:	and    esp,0xfffffff8
64006836:	sub    esp,0x14
64006839:	mov    eax,DWORD PTR [ecx+0x4]
6400683c:	push   ebx
6400683d:	push   esi
6400683e:	mov    esi,DWORD PTR [eax+0x4]
64006841:	cmp    BYTE PTR [esi+0x45],0x0
64006845:	mov    ebx,eax
64006847:	mov    al,0x1
64006849:	push   edi
6400684a:	mov    edi,DWORD PTR [ebp+0xc]
6400684d:	mov    DWORD PTR [esp+0x14],ecx
64006851:	mov    BYTE PTR [esp+0x10],al
64006855:	jne    0x64006897
64006857:	cmp    DWORD PTR [esi+0x24],0x8
6400685b:	mov    ecx,DWORD PTR [esi+0x20]
6400685e:	mov    ebx,esi
64006860:	jb     0x64006867
64006862:	mov    eax,DWORD PTR [esi+0x10]
64006865:	jmp    0x6400686a
64006867:	lea    eax,[esi+0x10]
6400686a:	push   ecx
6400686b:	push   eax
6400686c:	mov    eax,DWORD PTR [edi+0x14]
6400686f:	push   eax
64006870:	push   0x0
64006872:	mov    ecx,edi
64006874:	call   0x64008d30
64006879:	test   eax,eax
6400687b:	setl   al
6400687e:	test   al,al
64006880:	mov    BYTE PTR [esp+0x10],al
64006884:	je     0x6400688a
64006886:	mov    esi,DWORD PTR [esi]
64006888:	jmp    0x6400688d
6400688a:	mov    esi,DWORD PTR [esi+0x8]
6400688d:	cmp    BYTE PTR [esi+0x45],0x0
64006891:	je     0x64006857
64006893:	mov    ecx,DWORD PTR [esp+0x14]
64006897:	test   al,al
64006899:	mov    esi,ebx
6400689b:	mov    DWORD PTR [esp+0x1c],esi
6400689f:	mov    DWORD PTR [esp+0x18],ecx
640068a3:	je     0x640068e3
640068a5:	mov    edx,DWORD PTR [ecx+0x4]
640068a8:	cmp    ebx,DWORD PTR [edx]
640068aa:	jne    0x640068d6
640068ac:	push   edi
640068ad:	push   ebx
640068ae:	push   0x1
640068b0:	lea    eax,[esp+0x24]
640068b4:	push   eax
640068b5:	call   0x64007060
640068ba:	mov    ecx,eax
640068bc:	mov    edx,DWORD PTR [ecx]
640068be:	mov    eax,DWORD PTR [ebp+0x8]
640068c1:	mov    ecx,DWORD PTR [ecx+0x4]
640068c4:	mov    DWORD PTR [eax+0x4],ecx
640068c7:	mov    BYTE PTR [eax+0x8],0x1
640068cb:	mov    DWORD PTR [eax],edx
640068cd:	pop    edi
640068ce:	pop    esi
640068cf:	pop    ebx
640068d0:	mov    esp,ebp
640068d2:	pop    ebp
640068d3:	ret    0x8
640068d6:	lea    ecx,[esp+0x18]
640068da:	call   0x64007f20
640068df:	mov    esi,DWORD PTR [esp+0x1c]
640068e3:	cmp    DWORD PTR [edi+0x18],0x8
640068e7:	mov    edx,DWORD PTR [edi+0x14]
640068ea:	lea    ecx,[esi+0xc]
640068ed:	jb     0x640068f4
640068ef:	mov    eax,DWORD PTR [edi+0x4]
640068f2:	jmp    0x640068f7
640068f4:	lea    eax,[edi+0x4]
640068f7:	push   edx
640068f8:	mov    edx,DWORD PTR [ecx+0x14]
640068fb:	push   eax
640068fc:	push   edx
640068fd:	push   0x0
640068ff:	call   0x64008d30
64006904:	test   eax,eax
64006906:	jge    0x6400691a
64006908:	mov    eax,DWORD PTR [esp+0x10]
6400690c:	push   edi
6400690d:	push   ebx
6400690e:	lea    ecx,[esp+0x20]
64006912:	push   eax
64006913:	push   ecx
64006914:	mov    ecx,DWORD PTR [esp+0x24]
64006918:	jmp    0x640068b5
6400691a:	mov    eax,DWORD PTR [ebp+0x8]
6400691d:	mov    edx,DWORD PTR [esp+0x18]
64006921:	pop    edi
64006922:	mov    DWORD PTR [eax+0x4],esi
64006925:	pop    esi
64006926:	mov    BYTE PTR [eax+0x8],0x0
6400692a:	mov    DWORD PTR [eax],edx
6400692c:	pop    ebx
6400692d:	mov    esp,ebp
6400692f:	pop    ebp
64006930:	ret    0x8
64006933:	int3   
64006934:	int3   
64006935:	int3   
64006936:	int3   
64006937:	int3   
64006938:	int3   
64006939:	int3   
6400693a:	int3   
6400693b:	int3   
6400693c:	int3   
6400693d:	int3   
6400693e:	int3   
6400693f:	int3   
64006940:	sub    esp,0x18
64006943:	push   ebx
64006944:	mov    ebx,DWORD PTR [esp+0x24]
64006948:	push   esi
64006949:	push   edi
6400694a:	push   ebx
6400694b:	mov    esi,ecx
6400694d:	call   0x64007a50
64006952:	test   esi,esi
64006954:	mov    edi,eax
64006956:	mov    DWORD PTR [esp+0x14],edi
6400695a:	jne    0x64006961
6400695c:	call   0x64012618
64006961:	cmp    edi,DWORD PTR [esi+0x4]
64006964:	mov    DWORD PTR [esp+0x10],esi
64006968:	je     0x64006994
6400696a:	cmp    DWORD PTR [edi+0x24],0x8
6400696e:	mov    eax,DWORD PTR [edi+0x20]
64006971:	jb     0x64006978
64006973:	mov    edi,DWORD PTR [edi+0x10]
64006976:	jmp    0x6400697b
64006978:	add    edi,0x10
6400697b:	push   eax
6400697c:	mov    eax,DWORD PTR [ebx+0x14]
6400697f:	push   edi
64006980:	push   eax
64006981:	push   0x0
64006983:	mov    ecx,ebx
64006985:	call   0x64008d30
6400698a:	test   eax,eax
6400698c:	jl     0x64006994
6400698e:	lea    ecx,[esp+0x10]
64006992:	jmp    0x640069a3
64006994:	mov    ecx,DWORD PTR [esi+0x4]
64006997:	mov    DWORD PTR [esp+0x1c],ecx
6400699b:	mov    DWORD PTR [esp+0x18],esi
6400699f:	lea    ecx,[esp+0x18]
640069a3:	mov    edx,DWORD PTR [ecx]
640069a5:	mov    eax,DWORD PTR [esp+0x28]
640069a9:	mov    ecx,DWORD PTR [ecx+0x4]
640069ac:	pop    edi
640069ad:	pop    esi
640069ae:	mov    DWORD PTR [eax],edx
640069b0:	mov    DWORD PTR [eax+0x4],ecx
640069b3:	pop    ebx
640069b4:	add    esp,0x18
640069b7:	ret    0x8
640069ba:	int3   
640069bb:	int3   
640069bc:	int3   
640069bd:	int3   
640069be:	int3   
640069bf:	int3   
640069c0:	mov    eax,DWORD PTR [esp+0x4]
640069c4:	push   esi
640069c5:	push   eax
640069c6:	mov    esi,ecx
640069c8:	call   0x64002da0
640069cd:	mov    DWORD PTR [esi],0x6402531c
640069d3:	mov    eax,esi
640069d5:	pop    esi
640069d6:	ret    0x4
640069d9:	int3   
640069da:	int3   
640069db:	int3   
640069dc:	int3   
640069dd:	int3   
640069de:	int3   
640069df:	int3   
640069e0:	mov    eax,DWORD PTR [edi+0x4]
640069e3:	sub    esp,0xc
640069e6:	push   ebx
640069e7:	mov    ebx,DWORD PTR [eax]
640069e9:	push   ebp
640069ea:	mov    ebp,DWORD PTR [esp+0x1c]
640069ee:	test   ebp,ebp
640069f0:	push   esi
640069f1:	je     0x640069f7
640069f3:	cmp    ebp,edi
640069f5:	je     0x640069fc
640069f7:	call   0x64012618
640069fc:	mov    esi,DWORD PTR [esp+0x24]
64006a00:	cmp    esi,ebx
64006a02:	jne    0x64006a60
64006a04:	mov    eax,DWORD PTR [esp+0x28]
64006a08:	test   eax,eax
64006a0a:	mov    ebx,DWORD PTR [edi+0x4]
64006a0d:	je     0x64006a13
64006a0f:	cmp    eax,edi
64006a11:	je     0x64006a18
64006a13:	call   0x64012618
64006a18:	cmp    DWORD PTR [esp+0x2c],ebx
64006a1c:	jne    0x64006a60
64006a1e:	mov    ecx,DWORD PTR [edi+0x4]
64006a21:	mov    edx,DWORD PTR [ecx+0x4]
64006a24:	push   edx
64006a25:	mov    ecx,edi
64006a27:	call   0x64007b50
64006a2c:	mov    eax,DWORD PTR [edi+0x4]
64006a2f:	mov    DWORD PTR [eax+0x4],eax
64006a32:	mov    eax,DWORD PTR [edi+0x4]
64006a35:	mov    DWORD PTR [edi+0x8],0x0
64006a3c:	mov    DWORD PTR [eax],eax
64006a3e:	mov    eax,DWORD PTR [edi+0x4]
64006a41:	mov    DWORD PTR [eax+0x8],eax
64006a44:	mov    eax,DWORD PTR [edi+0x4]
64006a47:	mov    ecx,DWORD PTR [eax]
64006a49:	mov    eax,DWORD PTR [esp+0x1c]
64006a4d:	mov    DWORD PTR [eax+0x4],ecx
64006a50:	mov    DWORD PTR [eax],edi
64006a52:	pop    esi
64006a53:	pop    ebp
64006a54:	pop    ebx
64006a55:	add    esp,0xc
64006a58:	ret    0x14
64006a5b:	jmp    0x64006a60
64006a5d:	lea    ecx,[ecx+0x0]
64006a60:	test   ebp,ebp
64006a62:	je     0x64006a6a
64006a64:	cmp    ebp,DWORD PTR [esp+0x28]
64006a68:	je     0x64006a6f
64006a6a:	call   0x64012618
64006a6f:	cmp    esi,DWORD PTR [esp+0x2c]
64006a73:	je     0x64006adc
64006a75:	test   ebp,ebp
64006a77:	mov    DWORD PTR [esp+0x24],esi
64006a7b:	jne    0x64006a82
64006a7d:	call   0x64012618
64006a82:	cmp    BYTE PTR [esi+0x29],0x0
64006a86:	je     0x64006a8f
64006a88:	call   0x64012618
64006a8d:	jmp    0x64006ac9
64006a8f:	mov    eax,DWORD PTR [esi+0x8]
64006a92:	cmp    BYTE PTR [eax+0x29],0x0
64006a96:	jne    0x64006aae
64006a98:	mov    esi,eax
64006a9a:	mov    eax,DWORD PTR [esi]
64006a9c:	cmp    BYTE PTR [eax+0x29],0x0
64006aa0:	jne    0x64006ac9
64006aa2:	mov    esi,eax
64006aa4:	mov    eax,DWORD PTR [esi]
64006aa6:	cmp    BYTE PTR [eax+0x29],0x0
64006aaa:	je     0x64006aa2
64006aac:	jmp    0x64006ac9
64006aae:	mov    eax,DWORD PTR [esi+0x4]
64006ab1:	cmp    BYTE PTR [eax+0x29],0x0
64006ab5:	jne    0x64006ac7
64006ab7:	cmp    esi,DWORD PTR [eax+0x8]
64006aba:	jne    0x64006ac7
64006abc:	mov    esi,eax
64006abe:	mov    eax,DWORD PTR [eax+0x4]
64006ac1:	cmp    BYTE PTR [eax+0x29],0x0
64006ac5:	je     0x64006ab7
64006ac7:	mov    esi,eax
64006ac9:	mov    edx,DWORD PTR [esp+0x24]
64006acd:	push   edx
64006ace:	push   ebp
64006acf:	lea    eax,[esp+0x18]
64006ad3:	push   eax
64006ad4:	push   edi
64006ad5:	call   0x640072b0
64006ada:	jmp    0x64006a60
64006adc:	mov    eax,DWORD PTR [esp+0x1c]
64006ae0:	mov    DWORD PTR [eax+0x4],esi
64006ae3:	pop    esi
64006ae4:	mov    DWORD PTR [eax],ebp
64006ae6:	pop    ebp
64006ae7:	pop    ebx
64006ae8:	add    esp,0xc
64006aeb:	ret    0x14
64006aee:	int3   
64006aef:	int3   
64006af0:	mov    eax,DWORD PTR [ecx+0x8]
64006af3:	mov    edx,DWORD PTR [eax]
64006af5:	mov    DWORD PTR [ecx+0x8],edx
64006af8:	mov    edx,DWORD PTR [eax]
64006afa:	cmp    BYTE PTR [edx+0x29],0x0
64006afe:	jne    0x64006b03
64006b00:	mov    DWORD PTR [edx+0x4],ecx
64006b03:	mov    edx,DWORD PTR [ecx+0x4]
64006b06:	mov    DWORD PTR [eax+0x4],edx
64006b09:	mov    edx,DWORD PTR [esp+0x4]
64006b0d:	mov    edx,DWORD PTR [edx+0x4]
64006b10:	cmp    ecx,DWORD PTR [edx+0x4]
64006b13:	jne    0x64006b20
64006b15:	mov    DWORD PTR [edx+0x4],eax
64006b18:	mov    DWORD PTR [eax],ecx
64006b1a:	mov    DWORD PTR [ecx+0x4],eax
64006b1d:	ret    0x4
64006b20:	mov    edx,DWORD PTR [ecx+0x4]
64006b23:	cmp    ecx,DWORD PTR [edx]
64006b25:	jne    0x64006b31
64006b27:	mov    DWORD PTR [edx],eax
64006b29:	mov    DWORD PTR [eax],ecx
64006b2b:	mov    DWORD PTR [ecx+0x4],eax
64006b2e:	ret    0x4
64006b31:	mov    DWORD PTR [edx+0x8],eax
64006b34:	mov    DWORD PTR [eax],ecx
64006b36:	mov    DWORD PTR [ecx+0x4],eax
64006b39:	ret    0x4
64006b3c:	int3   
64006b3d:	int3   
64006b3e:	int3   
64006b3f:	int3   
64006b40:	mov    eax,DWORD PTR [ecx]
64006b42:	mov    edx,DWORD PTR [eax+0x8]
64006b45:	mov    DWORD PTR [ecx],edx
64006b47:	mov    edx,DWORD PTR [eax+0x8]
64006b4a:	cmp    BYTE PTR [edx+0x29],0x0
64006b4e:	jne    0x64006b53
64006b50:	mov    DWORD PTR [edx+0x4],ecx
64006b53:	mov    edx,DWORD PTR [ecx+0x4]
64006b56:	mov    DWORD PTR [eax+0x4],edx
64006b59:	mov    edx,DWORD PTR [esp+0x4]
64006b5d:	mov    edx,DWORD PTR [edx+0x4]
64006b60:	cmp    ecx,DWORD PTR [edx+0x4]
64006b63:	jne    0x64006b71
64006b65:	mov    DWORD PTR [edx+0x4],eax
64006b68:	mov    DWORD PTR [eax+0x8],ecx
64006b6b:	mov    DWORD PTR [ecx+0x4],eax
64006b6e:	ret    0x4
64006b71:	mov    edx,DWORD PTR [ecx+0x4]
64006b74:	cmp    ecx,DWORD PTR [edx+0x8]
64006b77:	jne    0x64006b85
64006b79:	mov    DWORD PTR [edx+0x8],eax
64006b7c:	mov    DWORD PTR [eax+0x8],ecx
64006b7f:	mov    DWORD PTR [ecx+0x4],eax
64006b82:	ret    0x4
64006b85:	mov    DWORD PTR [edx],eax
64006b87:	mov    DWORD PTR [eax+0x8],ecx
64006b8a:	mov    DWORD PTR [ecx+0x4],eax
64006b8d:	ret    0x4
64006b90:	push   ebp
64006b91:	mov    ebp,esp
64006b93:	push   0xffffffff
64006b95:	push   0x64022791
64006b9a:	mov    eax,fs:0x0
64006ba0:	push   eax
64006ba1:	sub    esp,0xc
64006ba4:	push   ebx
64006ba5:	push   esi
64006ba6:	push   edi
64006ba7:	mov    eax,ds:0x6402d09c
64006bac:	xor    eax,ebp
64006bae:	push   eax
64006baf:	lea    eax,[ebp-0xc]
64006bb2:	mov    fs:0x0,eax
64006bb8:	mov    DWORD PTR [ebp-0x10],esp
64006bbb:	push   0x2c
64006bbd:	call   0x64012641
64006bc2:	mov    esi,eax
64006bc4:	xor    ebx,ebx
64006bc6:	mov    DWORD PTR [ebp-0x4],ebx
64006bc9:	add    esp,0x4
64006bcc:	mov    DWORD PTR [ebp-0x14],esi
64006bcf:	mov    DWORD PTR [ebp-0x18],esi
64006bd2:	cmp    esi,ebx
64006bd4:	mov    BYTE PTR [ebp-0x4],0x1
64006bd8:	je     0x64006c10
64006bda:	mov    eax,DWORD PTR [ebp+0x8]
64006bdd:	mov    ecx,DWORD PTR [ebp+0xc]
64006be0:	mov    edx,DWORD PTR [ebp+0x10]
64006be3:	mov    DWORD PTR [esi],eax
64006be5:	mov    eax,DWORD PTR [ebp+0x14]
64006be8:	mov    DWORD PTR [esi+0x4],ecx
64006beb:	push   0xffffffff
64006bed:	lea    ecx,[esi+0xc]
64006bf0:	mov    DWORD PTR [esi+0x8],edx
64006bf3:	push   ebx
64006bf4:	mov    DWORD PTR [ecx+0x18],0xf
64006bfb:	mov    DWORD PTR [ecx+0x14],ebx
64006bfe:	push   eax
64006bff:	mov    BYTE PTR [ecx+0x4],bl
64006c02:	call   0x64001780
64006c07:	mov    cl,BYTE PTR [ebp+0x18]
64006c0a:	mov    BYTE PTR [esi+0x28],cl
64006c0d:	mov    BYTE PTR [esi+0x29],bl
64006c10:	mov    eax,esi
64006c12:	mov    ecx,DWORD PTR [ebp-0xc]
64006c15:	mov    DWORD PTR fs:0x0,ecx
64006c1c:	pop    ecx
64006c1d:	pop    edi
64006c1e:	pop    esi
64006c1f:	pop    ebx
64006c20:	mov    esp,ebp
64006c22:	pop    ebp
64006c23:	ret    0x14
64006c26:	mov    edx,DWORD PTR [ebp-0x14]
64006c29:	push   edx
64006c2a:	call   0x64012262
64006c2f:	add    esp,0x4
64006c32:	xor    ebx,ebx
64006c34:	push   ebx
64006c35:	push   ebx
64006c36:	call   0x640126ab
64006c3b:	int3   
64006c3c:	int3   
64006c3d:	int3   
64006c3e:	int3   
64006c3f:	int3   
64006c40:	push   ebp
64006c41:	mov    ebp,esp
64006c43:	and    esp,0xfffffff8
64006c46:	push   0xffffffff
64006c48:	push   0x64022bd8
64006c4d:	mov    eax,fs:0x0
64006c53:	push   eax
64006c54:	sub    esp,0x50
64006c57:	push   ebx
64006c58:	push   esi
64006c59:	push   edi
64006c5a:	mov    eax,ds:0x6402d09c
64006c5f:	xor    eax,esp
64006c61:	push   eax
64006c62:	lea    eax,[esp+0x60]
64006c66:	mov    fs:0x0,eax
64006c6c:	mov    edi,ecx
64006c6e:	xor    ebx,ebx
64006c70:	cmp    DWORD PTR [edi+0x8],0x4924923
64006c77:	jb     0x64006cc2
64006c79:	push   0x13
64006c7b:	push   0x64028430
64006c80:	lea    ecx,[esp+0x20]
64006c84:	mov    DWORD PTR [esp+0x38],0xf
64006c8c:	mov    DWORD PTR [esp+0x34],ebx
64006c90:	mov    BYTE PTR [esp+0x24],bl
64006c94:	call   0x64001860
64006c99:	lea    eax,[esp+0x18]
64006c9d:	push   eax
64006c9e:	lea    ecx,[esp+0x38]
64006ca2:	mov    DWORD PTR [esp+0x6c],ebx
64006ca6:	call   0x64002c70
64006cab:	push   0x6402abf0
64006cb0:	lea    ecx,[esp+0x38]
64006cb4:	push   ecx
64006cb5:	mov    DWORD PTR [esp+0x3c],0x6402531c
64006cbd:	call   0x640126ab
64006cc2:	mov    edx,DWORD PTR [ebp+0x14]
64006cc5:	mov    eax,DWORD PTR [edi+0x4]
64006cc8:	mov    esi,DWORD PTR [ebp+0x10]
64006ccb:	push   ebx
64006ccc:	push   edx
64006ccd:	push   eax
64006cce:	push   esi
64006ccf:	push   eax
64006cd0:	call   0x64007910
64006cd5:	add    DWORD PTR [edi+0x8],0x1
64006cd9:	mov    ecx,eax
64006cdb:	mov    eax,DWORD PTR [edi+0x4]
64006cde:	cmp    esi,eax
64006ce0:	mov    DWORD PTR [esp+0x14],ecx
64006ce4:	jne    0x64006cf6
64006ce6:	mov    DWORD PTR [eax+0x4],ecx
64006ce9:	mov    eax,DWORD PTR [edi+0x4]
64006cec:	mov    DWORD PTR [eax],ecx
64006cee:	mov    edx,DWORD PTR [edi+0x4]
64006cf1:	mov    DWORD PTR [edx+0x8],ecx
64006cf4:	jmp    0x64006d16
64006cf6:	cmp    BYTE PTR [ebp+0xc],bl
64006cf9:	je     0x64006d08
64006cfb:	mov    DWORD PTR [esi],ecx
64006cfd:	mov    eax,DWORD PTR [edi+0x4]
64006d00:	cmp    esi,DWORD PTR [eax]
64006d02:	jne    0x64006d16
64006d04:	mov    DWORD PTR [eax],ecx
64006d06:	jmp    0x64006d16
64006d08:	mov    DWORD PTR [esi+0x8],ecx
64006d0b:	mov    eax,DWORD PTR [edi+0x4]
64006d0e:	cmp    esi,DWORD PTR [eax+0x8]
64006d11:	jne    0x64006d16
64006d13:	mov    DWORD PTR [eax+0x8],ecx
64006d16:	mov    edx,DWORD PTR [ecx+0x4]
64006d19:	cmp    BYTE PTR [edx+0x44],bl
64006d1c:	lea    eax,[ecx+0x4]
64006d1f:	mov    esi,ecx
64006d21:	jne    0x64006e62
64006d27:	mov    ecx,DWORD PTR [eax]
64006d29:	mov    edx,DWORD PTR [ecx+0x4]
64006d2c:	cmp    ecx,DWORD PTR [edx]
64006d2e:	jne    0x64006dd5
64006d34:	mov    edx,DWORD PTR [edx+0x8]
64006d37:	cmp    BYTE PTR [edx+0x44],bl
64006d3a:	je     0x64006ddc
64006d40:	cmp    esi,DWORD PTR [ecx+0x8]
64006d43:	jne    0x64006d80
64006d45:	mov    esi,ecx
64006d47:	mov    ecx,DWORD PTR [esi+0x8]
64006d4a:	mov    eax,DWORD PTR [ecx]
64006d4c:	mov    DWORD PTR [esi+0x8],eax
64006d4f:	mov    eax,DWORD PTR [ecx]
64006d51:	cmp    BYTE PTR [eax+0x45],bl
64006d54:	jne    0x64006d59
64006d56:	mov    DWORD PTR [eax+0x4],esi
64006d59:	mov    edx,DWORD PTR [esi+0x4]
64006d5c:	lea    eax,[esi+0x4]
64006d5f:	mov    DWORD PTR [ecx+0x4],edx
64006d62:	mov    edx,DWORD PTR [edi+0x4]
64006d65:	cmp    esi,DWORD PTR [edx+0x4]
64006d68:	jne    0x64006d6f
64006d6a:	mov    DWORD PTR [edx+0x4],ecx
64006d6d:	jmp    0x64006d7c
64006d6f:	mov    edx,DWORD PTR [eax]
64006d71:	cmp    esi,DWORD PTR [edx]
64006d73:	jne    0x64006d79
64006d75:	mov    DWORD PTR [edx],ecx
64006d77:	jmp    0x64006d7c
64006d79:	mov    DWORD PTR [edx+0x8],ecx
64006d7c:	mov    DWORD PTR [ecx],esi
64006d7e:	mov    DWORD PTR [eax],ecx
64006d80:	mov    ecx,DWORD PTR [eax]
64006d82:	mov    BYTE PTR [ecx+0x44],0x1
64006d86:	mov    edx,DWORD PTR [eax]
64006d88:	mov    ecx,DWORD PTR [edx+0x4]
64006d8b:	mov    BYTE PTR [ecx+0x44],bl
64006d8e:	mov    edx,DWORD PTR [eax]
64006d90:	mov    eax,DWORD PTR [edx+0x4]
64006d93:	mov    ecx,DWORD PTR [eax]
64006d95:	mov    edx,DWORD PTR [ecx+0x8]
64006d98:	mov    DWORD PTR [eax],edx
64006d9a:	mov    edx,DWORD PTR [ecx+0x8]
64006d9d:	cmp    BYTE PTR [edx+0x45],bl
64006da0:	jne    0x64006da5
64006da2:	mov    DWORD PTR [edx+0x4],eax
64006da5:	mov    edx,DWORD PTR [eax+0x4]
64006da8:	mov    DWORD PTR [ecx+0x4],edx
64006dab:	mov    edx,DWORD PTR [edi+0x4]
64006dae:	cmp    eax,DWORD PTR [edx+0x4]
64006db1:	jne    0x64006dbe
64006db3:	mov    DWORD PTR [edx+0x4],ecx
64006db6:	mov    DWORD PTR [ecx+0x8],eax
64006db9:	jmp    0x64006e4c
64006dbe:	mov    edx,DWORD PTR [eax+0x4]
64006dc1:	cmp    eax,DWORD PTR [edx+0x8]
64006dc4:	jne    0x64006dce
64006dc6:	mov    DWORD PTR [edx+0x8],ecx
64006dc9:	mov    DWORD PTR [ecx+0x8],eax
64006dcc:	jmp    0x64006e4c
64006dce:	mov    DWORD PTR [edx],ecx
64006dd0:	mov    DWORD PTR [ecx+0x8],eax
64006dd3:	jmp    0x64006e4c
64006dd5:	mov    edx,DWORD PTR [edx]
64006dd7:	cmp    BYTE PTR [edx+0x44],bl
64006dda:	jne    0x64006df3
64006ddc:	mov    BYTE PTR [ecx+0x44],0x1
64006de0:	mov    BYTE PTR [edx+0x44],0x1
64006de4:	mov    edx,DWORD PTR [eax]
64006de6:	mov    ecx,DWORD PTR [edx+0x4]
64006de9:	mov    BYTE PTR [ecx+0x44],bl
64006dec:	mov    edx,DWORD PTR [eax]
64006dee:	mov    esi,DWORD PTR [edx+0x4]
64006df1:	jmp    0x64006e4f
64006df3:	cmp    esi,DWORD PTR [ecx]
64006df5:	jne    0x64006e01
64006df7:	mov    esi,ecx
64006df9:	push   esi
64006dfa:	mov    ecx,edi
64006dfc:	call   0x640078b0
64006e01:	mov    eax,DWORD PTR [esi+0x4]
64006e04:	mov    BYTE PTR [eax+0x44],0x1
64006e08:	mov    ecx,DWORD PTR [esi+0x4]
64006e0b:	mov    edx,DWORD PTR [ecx+0x4]
64006e0e:	mov    BYTE PTR [edx+0x44],bl
64006e11:	mov    eax,DWORD PTR [esi+0x4]
64006e14:	mov    eax,DWORD PTR [eax+0x4]
64006e17:	mov    ecx,DWORD PTR [eax+0x8]
64006e1a:	mov    edx,DWORD PTR [ecx]
64006e1c:	mov    DWORD PTR [eax+0x8],edx
64006e1f:	mov    edx,DWORD PTR [ecx]
64006e21:	cmp    BYTE PTR [edx+0x45],bl
64006e24:	jne    0x64006e29
64006e26:	mov    DWORD PTR [edx+0x4],eax
64006e29:	mov    edx,DWORD PTR [eax+0x4]
64006e2c:	mov    DWORD PTR [ecx+0x4],edx
64006e2f:	mov    edx,DWORD PTR [edi+0x4]
64006e32:	cmp    eax,DWORD PTR [edx+0x4]
64006e35:	jne    0x64006e3c
64006e37:	mov    DWORD PTR [edx+0x4],ecx
64006e3a:	jmp    0x64006e4a
64006e3c:	mov    edx,DWORD PTR [eax+0x4]
64006e3f:	cmp    eax,DWORD PTR [edx]
64006e41:	jne    0x64006e47
64006e43:	mov    DWORD PTR [edx],ecx
64006e45:	jmp    0x64006e4a
64006e47:	mov    DWORD PTR [edx+0x8],ecx
64006e4a:	mov    DWORD PTR [ecx],eax
64006e4c:	mov    DWORD PTR [eax+0x4],ecx
64006e4f:	mov    ecx,DWORD PTR [esi+0x4]
64006e52:	cmp    BYTE PTR [ecx+0x44],bl
64006e55:	lea    eax,[esi+0x4]
64006e58:	je     0x64006d27
64006e5e:	mov    ecx,DWORD PTR [esp+0x14]
64006e62:	mov    edx,DWORD PTR [edi+0x4]
64006e65:	mov    eax,DWORD PTR [edx+0x4]
64006e68:	mov    BYTE PTR [eax+0x44],0x1
64006e6c:	mov    eax,DWORD PTR [ebp+0x8]
64006e6f:	mov    DWORD PTR [eax+0x4],ecx
64006e72:	mov    DWORD PTR [eax],edi
64006e74:	mov    ecx,DWORD PTR [esp+0x60]
64006e78:	mov    DWORD PTR fs:0x0,ecx
64006e7f:	pop    ecx
64006e80:	pop    edi
64006e81:	pop    esi
64006e82:	pop    ebx
64006e83:	mov    esp,ebp
64006e85:	pop    ebp
64006e86:	ret    0x10
64006e89:	int3   
64006e8a:	int3   
64006e8b:	int3   
64006e8c:	int3   
64006e8d:	int3   
64006e8e:	int3   
64006e8f:	int3   
64006e90:	push   ebx
64006e91:	mov    ebx,DWORD PTR [esp+0xc]
64006e95:	push   ebp
64006e96:	mov    ebp,DWORD PTR [esp+0xc]
64006e9a:	cmp    DWORD PTR [ebp+0x14],ebx
64006e9d:	push   esi
64006e9e:	push   edi
64006e9f:	mov    esi,ecx
64006ea1:	jae    0x64006ea8
64006ea3:	call   0x6401221e
64006ea8:	mov    edi,DWORD PTR [ebp+0x14]
64006eab:	mov    eax,DWORD PTR [esp+0x1c]
64006eaf:	sub    edi,ebx
64006eb1:	cmp    eax,edi
64006eb3:	jae    0x64006eb7
64006eb5:	mov    edi,eax
64006eb7:	cmp    esi,ebp
64006eb9:	jne    0x64006eda
64006ebb:	push   0xffffffff
64006ebd:	add    edi,ebx
64006ebf:	push   edi
64006ec0:	mov    ecx,esi
64006ec2:	call   0x640079b0
64006ec7:	push   ebx
64006ec8:	push   0x0
64006eca:	mov    ecx,esi
64006ecc:	call   0x640079b0
64006ed1:	pop    edi
64006ed2:	mov    eax,esi
64006ed4:	pop    esi
64006ed5:	pop    ebp
64006ed6:	pop    ebx
64006ed7:	ret    0xc
64006eda:	cmp    edi,0x7ffffffe
64006ee0:	jbe    0x64006ee7
64006ee2:	call   0x640121df
64006ee7:	mov    eax,DWORD PTR [esi+0x18]
64006eea:	cmp    eax,edi
64006eec:	jae    0x64006f09
64006eee:	mov    eax,DWORD PTR [esi+0x14]
64006ef1:	push   eax
64006ef2:	push   edi
64006ef3:	mov    ecx,esi
64006ef5:	call   0x64007cc0
64006efa:	test   edi,edi
64006efc:	jbe    0x64006f76
64006efe:	cmp    DWORD PTR [ebp+0x18],0x8
64006f02:	jb     0x64006f35
64006f04:	mov    ecx,DWORD PTR [ebp+0x4]
64006f07:	jmp    0x64006f38
64006f09:	test   edi,edi
64006f0b:	jne    0x64006efc
64006f0d:	cmp    eax,0x8
64006f10:	mov    DWORD PTR [esi+0x14],edi
64006f13:	jb     0x64006f24
64006f15:	mov    eax,DWORD PTR [esi+0x4]
64006f18:	mov    WORD PTR [eax],di
64006f1b:	pop    edi
64006f1c:	mov    eax,esi
64006f1e:	pop    esi
64006f1f:	pop    ebp
64006f20:	pop    ebx
64006f21:	ret    0xc
64006f24:	lea    eax,[esi+0x4]
64006f27:	pop    edi
64006f28:	mov    WORD PTR [eax],0x0
64006f2d:	mov    eax,esi
64006f2f:	pop    esi
64006f30:	pop    ebp
64006f31:	pop    ebx
64006f32:	ret    0xc
64006f35:	lea    ecx,[ebp+0x4]
64006f38:	cmp    DWORD PTR [esi+0x18],0x8
64006f3c:	lea    ebp,[esi+0x4]
64006f3f:	jb     0x64006f46
64006f41:	mov    eax,DWORD PTR [ebp+0x0]
64006f44:	jmp    0x64006f48
64006f46:	mov    eax,ebp
64006f48:	mov    edx,DWORD PTR [esp+0x18]
64006f4c:	lea    ecx,[ecx+edx*2]
64006f4f:	lea    ebx,[edi+edi*1]
64006f52:	push   ebx
64006f53:	push   ecx
64006f54:	mov    ecx,DWORD PTR [esi+0x18]
64006f57:	lea    edx,[ecx+ecx*1]
64006f5a:	push   edx
64006f5b:	push   eax
64006f5c:	call   0x64012418
64006f61:	add    esp,0x10
64006f64:	cmp    DWORD PTR [esi+0x18],0x8
64006f68:	mov    DWORD PTR [esi+0x14],edi
64006f6b:	jb     0x64006f70
64006f6d:	mov    ebp,DWORD PTR [ebp+0x0]
64006f70:	mov    WORD PTR [ebx+ebp*1],0x0
64006f76:	pop    edi
64006f77:	mov    eax,esi
64006f79:	pop    esi
64006f7a:	pop    ebp
64006f7b:	pop    ebx
64006f7c:	ret    0xc
64006f7f:	int3   
64006f80:	push   ebp
64006f81:	push   esi
64006f82:	mov    esi,ecx
64006f84:	mov    edx,DWORD PTR [esi+0x18]
64006f87:	cmp    edx,0x8
64006f8a:	push   edi
64006f8b:	lea    ebp,[esi+0x4]
64006f8e:	jb     0x64006f95
64006f90:	mov    ecx,DWORD PTR [ebp+0x0]
64006f93:	jmp    0x64006f97
64006f95:	mov    ecx,ebp
64006f97:	mov    eax,DWORD PTR [esp+0x10]
64006f9b:	cmp    eax,ecx
64006f9d:	jb     0x64006fd5
64006f9f:	cmp    edx,0x8
64006fa2:	jb     0x64006fa9
64006fa4:	mov    ecx,DWORD PTR [ebp+0x0]
64006fa7:	jmp    0x64006fab
64006fa9:	mov    ecx,ebp
64006fab:	mov    edi,DWORD PTR [esi+0x14]
64006fae:	lea    ecx,[ecx+edi*2]
64006fb1:	cmp    ecx,eax
64006fb3:	jbe    0x64006fd5
64006fb5:	cmp    edx,0x8
64006fb8:	jb     0x64006fbd
64006fba:	mov    ebp,DWORD PTR [ebp+0x0]
64006fbd:	mov    edx,DWORD PTR [esp+0x14]
64006fc1:	sub    eax,ebp
64006fc3:	push   edx
64006fc4:	sar    eax,1
64006fc6:	push   eax
64006fc7:	push   esi
64006fc8:	mov    ecx,esi
64006fca:	call   0x64006e90
64006fcf:	pop    edi
64006fd0:	pop    esi
64006fd1:	pop    ebp
64006fd2:	ret    0x8
64006fd5:	mov    edi,DWORD PTR [esp+0x14]
64006fd9:	cmp    edi,0x7ffffffe
64006fdf:	jbe    0x64006fe6
64006fe1:	call   0x640121df
64006fe6:	mov    eax,DWORD PTR [esi+0x18]
64006fe9:	cmp    eax,edi
64006feb:	jae    0x6400700a
64006fed:	mov    eax,DWORD PTR [esi+0x14]
64006ff0:	push   eax
64006ff1:	push   edi
64006ff2:	mov    ecx,esi
64006ff4:	call   0x64007cc0
64006ff9:	test   edi,edi
64006ffb:	jbe    0x64007052
64006ffd:	mov    ecx,DWORD PTR [esi+0x18]
64007000:	cmp    ecx,0x8
64007003:	jb     0x64007027
64007005:	mov    eax,DWORD PTR [ebp+0x0]
64007008:	jmp    0x64007029
6400700a:	test   edi,edi
6400700c:	jne    0x64006ffb
6400700e:	cmp    eax,0x8
64007011:	mov    DWORD PTR [esi+0x14],edi
64007014:	jb     0x64007019
64007016:	mov    ebp,DWORD PTR [ebp+0x0]
64007019:	pop    edi
6400701a:	mov    eax,esi
6400701c:	pop    esi
6400701d:	mov    WORD PTR [ebp+0x0],0x0
64007023:	pop    ebp
64007024:	ret    0x8
64007027:	mov    eax,ebp
64007029:	mov    edx,DWORD PTR [esp+0x10]
6400702d:	push   ebx
6400702e:	lea    ebx,[edi+edi*1]
64007031:	push   ebx
64007032:	push   edx
64007033:	add    ecx,ecx
64007035:	push   ecx
64007036:	push   eax
64007037:	call   0x64012418
6400703c:	add    esp,0x10
6400703f:	cmp    DWORD PTR [esi+0x18],0x8
64007043:	mov    DWORD PTR [esi+0x14],edi
64007046:	jb     0x6400704b
64007048:	mov    ebp,DWORD PTR [ebp+0x0]
6400704b:	mov    WORD PTR [ebx+ebp*1],0x0
64007051:	pop    ebx
64007052:	pop    edi
64007053:	mov    eax,esi
64007055:	pop    esi
64007056:	pop    ebp
64007057:	ret    0x8
6400705a:	int3   
6400705b:	int3   
6400705c:	int3   
6400705d:	int3   
6400705e:	int3   
6400705f:	int3   
64007060:	push   ebp
64007061:	mov    ebp,esp
64007063:	and    esp,0xfffffff8
64007066:	push   0xffffffff
64007068:	push   0x64022ba8
6400706d:	mov    eax,fs:0x0
64007073:	push   eax
64007074:	sub    esp,0x50
64007077:	push   ebx
64007078:	push   esi
64007079:	push   edi
6400707a:	mov    eax,ds:0x6402d09c
6400707f:	xor    eax,esp
64007081:	push   eax
64007082:	lea    eax,[esp+0x60]
64007086:	mov    fs:0x0,eax
6400708c:	mov    edi,ecx
6400708e:	xor    ebx,ebx
64007090:	cmp    DWORD PTR [edi+0x8],0x4924923
64007097:	jb     0x640070e2
64007099:	push   0x13
6400709b:	push   0x64028430
640070a0:	lea    ecx,[esp+0x20]
640070a4:	mov    DWORD PTR [esp+0x38],0xf
640070ac:	mov    DWORD PTR [esp+0x34],ebx
640070b0:	mov    BYTE PTR [esp+0x24],bl
640070b4:	call   0x64001860
640070b9:	lea    eax,[esp+0x18]
640070bd:	push   eax
640070be:	lea    ecx,[esp+0x38]
640070c2:	mov    DWORD PTR [esp+0x6c],ebx
640070c6:	call   0x64002c70
640070cb:	push   0x6402abf0
640070d0:	lea    ecx,[esp+0x38]
640070d4:	push   ecx
640070d5:	mov    DWORD PTR [esp+0x3c],0x6402531c
640070dd:	call   0x640126ab
640070e2:	mov    edx,DWORD PTR [ebp+0x14]
640070e5:	mov    eax,DWORD PTR [edi+0x4]
640070e8:	mov    esi,DWORD PTR [ebp+0x10]
640070eb:	push   ebx
640070ec:	push   edx
640070ed:	push   eax
640070ee:	push   esi
640070ef:	push   eax
640070f0:	call   0x64007ab0
640070f5:	add    DWORD PTR [edi+0x8],0x1
640070f9:	mov    ecx,eax
640070fb:	mov    eax,DWORD PTR [edi+0x4]
640070fe:	cmp    esi,eax
64007100:	mov    DWORD PTR [esp+0x14],ecx
64007104:	jne    0x64007116
64007106:	mov    DWORD PTR [eax+0x4],ecx
64007109:	mov    eax,DWORD PTR [edi+0x4]
6400710c:	mov    DWORD PTR [eax],ecx
6400710e:	mov    edx,DWORD PTR [edi+0x4]
64007111:	mov    DWORD PTR [edx+0x8],ecx
64007114:	jmp    0x64007136
64007116:	cmp    BYTE PTR [ebp+0xc],bl
64007119:	je     0x64007128
6400711b:	mov    DWORD PTR [esi],ecx
6400711d:	mov    eax,DWORD PTR [edi+0x4]
64007120:	cmp    esi,DWORD PTR [eax]
64007122:	jne    0x64007136
64007124:	mov    DWORD PTR [eax],ecx
64007126:	jmp    0x64007136
64007128:	mov    DWORD PTR [esi+0x8],ecx
6400712b:	mov    eax,DWORD PTR [edi+0x4]
6400712e:	cmp    esi,DWORD PTR [eax+0x8]
64007131:	jne    0x64007136
64007133:	mov    DWORD PTR [eax+0x8],ecx
64007136:	mov    edx,DWORD PTR [ecx+0x4]
64007139:	cmp    BYTE PTR [edx+0x44],bl
6400713c:	lea    eax,[ecx+0x4]
6400713f:	mov    esi,ecx
64007141:	jne    0x64007282
64007147:	mov    ecx,DWORD PTR [eax]
64007149:	mov    edx,DWORD PTR [ecx+0x4]
6400714c:	cmp    ecx,DWORD PTR [edx]
6400714e:	jne    0x640071f5
64007154:	mov    edx,DWORD PTR [edx+0x8]
64007157:	cmp    BYTE PTR [edx+0x44],bl
6400715a:	je     0x640071fc
64007160:	cmp    esi,DWORD PTR [ecx+0x8]
64007163:	jne    0x640071a0
64007165:	mov    esi,ecx
64007167:	mov    ecx,DWORD PTR [esi+0x8]
6400716a:	mov    eax,DWORD PTR [ecx]
6400716c:	mov    DWORD PTR [esi+0x8],eax
6400716f:	mov    eax,DWORD PTR [ecx]
64007171:	cmp    BYTE PTR [eax+0x45],bl
64007174:	jne    0x64007179
64007176:	mov    DWORD PTR [eax+0x4],esi
64007179:	mov    edx,DWORD PTR [esi+0x4]
6400717c:	lea    eax,[esi+0x4]
6400717f:	mov    DWORD PTR [ecx+0x4],edx
64007182:	mov    edx,DWORD PTR [edi+0x4]
64007185:	cmp    esi,DWORD PTR [edx+0x4]
64007188:	jne    0x6400718f
6400718a:	mov    DWORD PTR [edx+0x4],ecx
6400718d:	jmp    0x6400719c
6400718f:	mov    edx,DWORD PTR [eax]
64007191:	cmp    esi,DWORD PTR [edx]
64007193:	jne    0x64007199
64007195:	mov    DWORD PTR [edx],ecx
64007197:	jmp    0x6400719c
64007199:	mov    DWORD PTR [edx+0x8],ecx
6400719c:	mov    DWORD PTR [ecx],esi
6400719e:	mov    DWORD PTR [eax],ecx
640071a0:	mov    ecx,DWORD PTR [eax]
640071a2:	mov    BYTE PTR [ecx+0x44],0x1
640071a6:	mov    edx,DWORD PTR [eax]
640071a8:	mov    ecx,DWORD PTR [edx+0x4]
640071ab:	mov    BYTE PTR [ecx+0x44],bl
640071ae:	mov    edx,DWORD PTR [eax]
640071b0:	mov    eax,DWORD PTR [edx+0x4]
640071b3:	mov    ecx,DWORD PTR [eax]
640071b5:	mov    edx,DWORD PTR [ecx+0x8]
640071b8:	mov    DWORD PTR [eax],edx
640071ba:	mov    edx,DWORD PTR [ecx+0x8]
640071bd:	cmp    BYTE PTR [edx+0x45],bl
640071c0:	jne    0x640071c5
640071c2:	mov    DWORD PTR [edx+0x4],eax
640071c5:	mov    edx,DWORD PTR [eax+0x4]
640071c8:	mov    DWORD PTR [ecx+0x4],edx
640071cb:	mov    edx,DWORD PTR [edi+0x4]
640071ce:	cmp    eax,DWORD PTR [edx+0x4]
640071d1:	jne    0x640071de
640071d3:	mov    DWORD PTR [edx+0x4],ecx
640071d6:	mov    DWORD PTR [ecx+0x8],eax
640071d9:	jmp    0x6400726c
640071de:	mov    edx,DWORD PTR [eax+0x4]
640071e1:	cmp    eax,DWORD PTR [edx+0x8]
640071e4:	jne    0x640071ee
640071e6:	mov    DWORD PTR [edx+0x8],ecx
640071e9:	mov    DWORD PTR [ecx+0x8],eax
640071ec:	jmp    0x6400726c
640071ee:	mov    DWORD PTR [edx],ecx
640071f0:	mov    DWORD PTR [ecx+0x8],eax
640071f3:	jmp    0x6400726c
640071f5:	mov    edx,DWORD PTR [edx]
640071f7:	cmp    BYTE PTR [edx+0x44],bl
640071fa:	jne    0x64007213
640071fc:	mov    BYTE PTR [ecx+0x44],0x1
64007200:	mov    BYTE PTR [edx+0x44],0x1
64007204:	mov    edx,DWORD PTR [eax]
64007206:	mov    ecx,DWORD PTR [edx+0x4]
64007209:	mov    BYTE PTR [ecx+0x44],bl
6400720c:	mov    edx,DWORD PTR [eax]
6400720e:	mov    esi,DWORD PTR [edx+0x4]
64007211:	jmp    0x6400726f
64007213:	cmp    esi,DWORD PTR [ecx]
64007215:	jne    0x64007221
64007217:	mov    esi,ecx
64007219:	push   esi
6400721a:	mov    ecx,edi
6400721c:	call   0x640078b0
64007221:	mov    eax,DWORD PTR [esi+0x4]
64007224:	mov    BYTE PTR [eax+0x44],0x1
64007228:	mov    ecx,DWORD PTR [esi+0x4]
6400722b:	mov    edx,DWORD PTR [ecx+0x4]
6400722e:	mov    BYTE PTR [edx+0x44],bl
64007231:	mov    eax,DWORD PTR [esi+0x4]
64007234:	mov    eax,DWORD PTR [eax+0x4]
64007237:	mov    ecx,DWORD PTR [eax+0x8]
6400723a:	mov    edx,DWORD PTR [ecx]
6400723c:	mov    DWORD PTR [eax+0x8],edx
6400723f:	mov    edx,DWORD PTR [ecx]
64007241:	cmp    BYTE PTR [edx+0x45],bl
64007244:	jne    0x64007249
64007246:	mov    DWORD PTR [edx+0x4],eax
64007249:	mov    edx,DWORD PTR [eax+0x4]
6400724c:	mov    DWORD PTR [ecx+0x4],edx
6400724f:	mov    edx,DWORD PTR [edi+0x4]
64007252:	cmp    eax,DWORD PTR [edx+0x4]
64007255:	jne    0x6400725c
64007257:	mov    DWORD PTR [edx+0x4],ecx
6400725a:	jmp    0x6400726a
6400725c:	mov    edx,DWORD PTR [eax+0x4]
6400725f:	cmp    eax,DWORD PTR [edx]
64007261:	jne    0x64007267
64007263:	mov    DWORD PTR [edx],ecx
64007265:	jmp    0x6400726a
64007267:	mov    DWORD PTR [edx+0x8],ecx
6400726a:	mov    DWORD PTR [ecx],eax
6400726c:	mov    DWORD PTR [eax+0x4],ecx
6400726f:	mov    ecx,DWORD PTR [esi+0x4]
64007272:	cmp    BYTE PTR [ecx+0x44],bl
64007275:	lea    eax,[esi+0x4]
64007278:	je     0x64007147
6400727e:	mov    ecx,DWORD PTR [esp+0x14]
64007282:	mov    edx,DWORD PTR [edi+0x4]
64007285:	mov    eax,DWORD PTR [edx+0x4]
64007288:	mov    BYTE PTR [eax+0x44],0x1
6400728c:	mov    eax,DWORD PTR [ebp+0x8]
6400728f:	mov    DWORD PTR [eax+0x4],ecx
64007292:	mov    DWORD PTR [eax],edi
64007294:	mov    ecx,DWORD PTR [esp+0x60]
64007298:	mov    DWORD PTR fs:0x0,ecx
6400729f:	pop    ecx
640072a0:	pop    edi
640072a1:	pop    esi
640072a2:	pop    ebx
640072a3:	mov    esp,ebp
640072a5:	pop    ebp
640072a6:	ret    0x10
640072a9:	int3   
640072aa:	int3   
640072ab:	int3   
640072ac:	int3   
640072ad:	int3   
640072ae:	int3   
640072af:	int3   
640072b0:	push   0xffffffff
640072b2:	push   0x64022b78
640072b7:	mov    eax,fs:0x0
640072bd:	push   eax
640072be:	sub    esp,0x44
640072c1:	push   ebx
640072c2:	push   ebp
640072c3:	push   esi
640072c4:	push   edi
640072c5:	mov    eax,ds:0x6402d09c
640072ca:	xor    eax,esp
640072cc:	push   eax
640072cd:	lea    eax,[esp+0x58]
640072d1:	mov    fs:0x0,eax
640072d7:	mov    eax,DWORD PTR [esp+0x74]
640072db:	cmp    BYTE PTR [eax+0x29],0x0
640072df:	je     0x6400732d
640072e1:	push   0x1b
640072e3:	xor    esi,esi
640072e5:	push   0x64028444
640072ea:	lea    ecx,[esp+0x1c]
640072ee:	mov    DWORD PTR [esp+0x34],0xf
640072f6:	mov    DWORD PTR [esp+0x30],esi
640072fa:	mov    BYTE PTR [esp+0x20],0x0
640072ff:	call   0x64001860
64007304:	lea    eax,[esp+0x14]
64007308:	push   eax
64007309:	lea    ecx,[esp+0x34]
6400730d:	mov    DWORD PTR [esp+0x64],esi
64007311:	call   0x64002c70
64007316:	push   0x6402abb4
6400731b:	lea    ecx,[esp+0x34]
6400731f:	push   ecx
64007320:	mov    DWORD PTR [esp+0x38],0x64025328
64007328:	call   0x640126ab
6400732d:	lea    esi,[esp+0x70]
64007331:	mov    ebp,eax
64007333:	call   0x64006580
64007338:	mov    eax,DWORD PTR [ebp+0x0]
6400733b:	cmp    BYTE PTR [eax+0x29],0x0
6400733f:	je     0x64007346
64007341:	mov    edi,DWORD PTR [ebp+0x8]
64007344:	jmp    0x6400735e
64007346:	mov    edx,DWORD PTR [ebp+0x8]
64007349:	cmp    BYTE PTR [edx+0x29],0x0
6400734d:	je     0x64007353
6400734f:	mov    edi,eax
64007351:	jmp    0x6400735e
64007353:	mov    ecx,DWORD PTR [esp+0x74]
64007357:	cmp    ecx,ebp
64007359:	mov    edi,DWORD PTR [ecx+0x8]
6400735c:	jne    0x640073d2
6400735e:	cmp    BYTE PTR [edi+0x29],0x0
64007362:	mov    esi,DWORD PTR [ebp+0x4]
64007365:	jne    0x6400736a
64007367:	mov    DWORD PTR [edi+0x4],esi
6400736a:	mov    ecx,DWORD PTR [esp+0x68]
6400736e:	mov    eax,DWORD PTR [ecx+0x4]
64007371:	cmp    DWORD PTR [eax+0x4],ebp
64007374:	jne    0x6400737b
64007376:	mov    DWORD PTR [eax+0x4],edi
64007379:	jmp    0x64007386
6400737b:	cmp    DWORD PTR [esi],ebp
6400737d:	jne    0x64007383
6400737f:	mov    DWORD PTR [esi],edi
64007381:	jmp    0x64007386
64007383:	mov    DWORD PTR [esi+0x8],edi
64007386:	mov    edx,DWORD PTR [ecx+0x4]
64007389:	cmp    DWORD PTR [edx],ebp
6400738b:	jne    0x640073ad
6400738d:	cmp    BYTE PTR [edi+0x29],0x0
64007391:	je     0x64007397
64007393:	mov    ecx,esi
64007395:	jmp    0x640073ab
64007397:	mov    eax,DWORD PTR [edi]
64007399:	cmp    BYTE PTR [eax+0x29],0x0
6400739d:	mov    ecx,edi
6400739f:	jne    0x640073ab
640073a1:	mov    ecx,eax
640073a3:	mov    eax,DWORD PTR [ecx]
640073a5:	cmp    BYTE PTR [eax+0x29],0x0
640073a9:	je     0x640073a1
640073ab:	mov    DWORD PTR [edx],ecx
640073ad:	mov    eax,DWORD PTR [esp+0x68]
640073b1:	mov    ebx,DWORD PTR [eax+0x4]
640073b4:	cmp    DWORD PTR [ebx+0x8],ebp
640073b7:	jne    0x6400742e
640073b9:	cmp    BYTE PTR [edi+0x29],0x0
640073bd:	je     0x640073c6
640073bf:	mov    eax,esi
640073c1:	mov    DWORD PTR [ebx+0x8],eax
640073c4:	jmp    0x6400742e
640073c6:	mov    eax,edi
640073c8:	call   0x64007650
640073cd:	mov    DWORD PTR [ebx+0x8],eax
640073d0:	jmp    0x6400742e
640073d2:	mov    DWORD PTR [eax+0x4],ecx
640073d5:	mov    edx,DWORD PTR [ebp+0x0]
640073d8:	mov    DWORD PTR [ecx],edx
640073da:	cmp    ecx,DWORD PTR [ebp+0x8]
640073dd:	jne    0x640073e3
640073df:	mov    esi,ecx
640073e1:	jmp    0x640073fd
640073e3:	cmp    BYTE PTR [edi+0x29],0x0
640073e7:	mov    esi,DWORD PTR [ecx+0x4]
640073ea:	jne    0x640073ef
640073ec:	mov    DWORD PTR [edi+0x4],esi
640073ef:	mov    DWORD PTR [esi],edi
640073f1:	mov    eax,DWORD PTR [ebp+0x8]
640073f4:	mov    DWORD PTR [ecx+0x8],eax
640073f7:	mov    edx,DWORD PTR [ebp+0x8]
640073fa:	mov    DWORD PTR [edx+0x4],ecx
640073fd:	mov    eax,DWORD PTR [esp+0x68]
64007401:	mov    eax,DWORD PTR [eax+0x4]
64007404:	cmp    DWORD PTR [eax+0x4],ebp
64007407:	jne    0x6400740e
64007409:	mov    DWORD PTR [eax+0x4],ecx
6400740c:	jmp    0x6400741c
6400740e:	mov    eax,DWORD PTR [ebp+0x4]
64007411:	cmp    DWORD PTR [eax],ebp
64007413:	jne    0x64007419
64007415:	mov    DWORD PTR [eax],ecx
64007417:	jmp    0x6400741c
64007419:	mov    DWORD PTR [eax+0x8],ecx
6400741c:	mov    edx,DWORD PTR [ebp+0x4]
6400741f:	mov    DWORD PTR [ecx+0x4],edx
64007422:	mov    dl,BYTE PTR [ebp+0x28]
64007425:	mov    al,BYTE PTR [ecx+0x28]
64007428:	mov    BYTE PTR [ecx+0x28],dl
6400742b:	mov    BYTE PTR [ebp+0x28],al
6400742e:	mov    bl,0x1
64007430:	cmp    BYTE PTR [ebp+0x28],bl
64007433:	jne    0x6400755a
64007439:	mov    eax,DWORD PTR [esp+0x68]
6400743d:	mov    ecx,DWORD PTR [eax+0x4]
64007440:	cmp    edi,DWORD PTR [ecx+0x4]
64007443:	je     0x64007557
64007449:	lea    esp,[esp+0x0]
64007450:	cmp    BYTE PTR [edi+0x28],bl
64007453:	jne    0x64007557
64007459:	mov    ecx,DWORD PTR [esi]
6400745b:	cmp    edi,ecx
6400745d:	jne    0x640074d5
6400745f:	mov    ecx,DWORD PTR [esi+0x8]
64007462:	cmp    BYTE PTR [ecx+0x28],0x0
64007466:	jne    0x6400747e
64007468:	mov    edx,DWORD PTR [esp+0x68]
6400746c:	mov    BYTE PTR [ecx+0x28],bl
6400746f:	push   edx
64007470:	mov    ecx,esi
64007472:	mov    BYTE PTR [esi+0x28],0x0
64007476:	call   0x64006af0
6400747b:	mov    ecx,DWORD PTR [esi+0x8]
6400747e:	cmp    BYTE PTR [ecx+0x29],0x0
64007482:	jne    0x64007509
64007488:	mov    eax,DWORD PTR [ecx]
6400748a:	cmp    BYTE PTR [eax+0x28],bl
6400748d:	jne    0x64007497
6400748f:	mov    edx,DWORD PTR [ecx+0x8]
64007492:	cmp    BYTE PTR [edx+0x28],bl
64007495:	je     0x64007505
64007497:	mov    eax,DWORD PTR [ecx+0x8]
6400749a:	cmp    BYTE PTR [eax+0x28],bl
6400749d:	jne    0x640074b5
6400749f:	mov    edx,DWORD PTR [ecx]
640074a1:	mov    eax,DWORD PTR [esp+0x68]
640074a5:	mov    BYTE PTR [edx+0x28],bl
640074a8:	push   eax
640074a9:	mov    BYTE PTR [ecx+0x28],0x0
640074ad:	call   0x64006b40
640074b2:	mov    ecx,DWORD PTR [esi+0x8]
640074b5:	mov    dl,BYTE PTR [esi+0x28]
640074b8:	mov    BYTE PTR [ecx+0x28],dl
640074bb:	mov    BYTE PTR [esi+0x28],bl
640074be:	mov    eax,DWORD PTR [ecx+0x8]
640074c1:	mov    ecx,DWORD PTR [esp+0x68]
640074c5:	push   ecx
640074c6:	mov    ecx,esi
640074c8:	mov    BYTE PTR [eax+0x28],bl
640074cb:	call   0x64006af0
640074d0:	jmp    0x64007557
640074d5:	cmp    BYTE PTR [ecx+0x28],0x0
640074d9:	jne    0x640074f0
640074db:	mov    eax,DWORD PTR [esp+0x68]
640074df:	mov    BYTE PTR [ecx+0x28],bl
640074e2:	push   eax
640074e3:	mov    ecx,esi
640074e5:	mov    BYTE PTR [esi+0x28],0x0
640074e9:	call   0x64006b40
640074ee:	mov    ecx,DWORD PTR [esi]
640074f0:	cmp    BYTE PTR [ecx+0x29],0x0
640074f4:	jne    0x64007509
640074f6:	mov    edx,DWORD PTR [ecx+0x8]
640074f9:	cmp    BYTE PTR [edx+0x28],bl
640074fc:	jne    0x64007520
640074fe:	mov    eax,DWORD PTR [ecx]
64007500:	cmp    BYTE PTR [eax+0x28],bl
64007503:	jne    0x64007520
64007505:	mov    BYTE PTR [ecx+0x28],0x0
64007509:	mov    ecx,DWORD PTR [esp+0x68]
6400750d:	mov    edx,DWORD PTR [ecx+0x4]
64007510:	mov    edi,esi
64007512:	cmp    edi,DWORD PTR [edx+0x4]
64007515:	mov    esi,DWORD PTR [esi+0x4]
64007518:	jne    0x64007450
6400751e:	jmp    0x64007557
64007520:	mov    edx,DWORD PTR [ecx]
64007522:	cmp    BYTE PTR [edx+0x28],bl
64007525:	jne    0x6400753d
64007527:	mov    eax,DWORD PTR [ecx+0x8]
6400752a:	mov    edx,DWORD PTR [esp+0x68]
6400752e:	mov    BYTE PTR [eax+0x28],bl
64007531:	push   edx
64007532:	mov    BYTE PTR [ecx+0x28],0x0
64007536:	call   0x64006af0
6400753b:	mov    ecx,DWORD PTR [esi]
6400753d:	mov    al,BYTE PTR [esi+0x28]
64007540:	mov    edx,DWORD PTR [esp+0x68]
64007544:	mov    BYTE PTR [ecx+0x28],al
64007547:	mov    BYTE PTR [esi+0x28],bl
6400754a:	mov    ecx,DWORD PTR [ecx]
6400754c:	mov    BYTE PTR [ecx+0x28],bl
6400754f:	push   edx
64007550:	mov    ecx,esi
64007552:	call   0x64006b40
64007557:	mov    BYTE PTR [edi+0x28],bl
6400755a:	cmp    DWORD PTR [ebp+0x24],0x10
6400755e:	jb     0x6400756c
64007560:	mov    eax,DWORD PTR [ebp+0x10]
64007563:	push   eax
64007564:	call   0x64012262
64007569:	add    esp,0x4
6400756c:	mov    DWORD PTR [ebp+0x24],0xf
64007573:	mov    DWORD PTR [ebp+0x20],0x0
6400757a:	push   ebp
6400757b:	mov    BYTE PTR [ebp+0x10],0x0
6400757f:	call   0x64012262
64007584:	mov    ecx,DWORD PTR [esp+0x6c]
64007588:	mov    eax,DWORD PTR [ecx+0x8]
6400758b:	add    esp,0x4
6400758e:	test   eax,eax
64007590:	jbe    0x64007598
64007592:	add    eax,0xffffffff
64007595:	mov    DWORD PTR [ecx+0x8],eax
64007598:	mov    eax,DWORD PTR [esp+0x6c]
6400759c:	mov    ecx,DWORD PTR [esp+0x70]
640075a0:	mov    edx,DWORD PTR [esp+0x74]
640075a4:	mov    DWORD PTR [eax],ecx
640075a6:	mov    DWORD PTR [eax+0x4],edx
640075a9:	mov    ecx,DWORD PTR [esp+0x58]
640075ad:	mov    DWORD PTR fs:0x0,ecx
640075b4:	pop    ecx
640075b5:	pop    edi
640075b6:	pop    esi
640075b7:	pop    ebp
640075b8:	pop    ebx
640075b9:	add    esp,0x50
640075bc:	ret    0x10
640075bf:	int3   
640075c0:	sub    esp,0x8
640075c3:	mov    eax,DWORD PTR [eax+0x4]
640075c6:	push   esi
640075c7:	mov    esi,DWORD PTR [eax+0x4]
640075ca:	cmp    BYTE PTR [esi+0x29],0x0
640075ce:	mov    DWORD PTR [esp+0x4],eax
640075d2:	jne    0x64007645
640075d4:	mov    edx,DWORD PTR [ecx+0x18]
640075d7:	push   ebx
640075d8:	mov    ebx,DWORD PTR [ecx+0x14]
640075db:	push   ebp
640075dc:	push   edi
640075dd:	mov    DWORD PTR [esp+0x14],edx
640075e1:	lea    ebp,[ecx+0x4]
640075e4:	cmp    DWORD PTR [esp+0x14],0x10
640075e9:	jb     0x640075f0
640075eb:	mov    edx,DWORD PTR [ebp+0x0]
640075ee:	jmp    0x640075f2
640075f0:	mov    edx,ebp
640075f2:	mov    edi,DWORD PTR [esi+0x20]
640075f5:	mov    eax,edi
640075f7:	cmp    eax,edi
640075f9:	jae    0x640075fb
640075fb:	cmp    edi,ebx
640075fd:	mov    ecx,edi
640075ff:	jb     0x64007603
64007601:	mov    ecx,ebx
64007603:	cmp    DWORD PTR [esi+0x24],0x10
64007607:	jb     0x6400760e
64007609:	mov    eax,DWORD PTR [esi+0x10]
6400760c:	jmp    0x64007611
6400760e:	lea    eax,[esi+0x10]
64007611:	push   ecx
64007612:	push   edx
64007613:	push   eax
64007614:	call   0x64002be0
64007619:	add    esp,0xc
6400761c:	test   eax,eax
6400761e:	jne    0x6400762b
64007620:	cmp    edi,ebx
64007622:	jb     0x6400762d
64007624:	cmp    edi,ebx
64007626:	setne  al
64007629:	test   eax,eax
6400762b:	jge    0x64007632
6400762d:	mov    esi,DWORD PTR [esi+0x8]
64007630:	jmp    0x64007638
64007632:	mov    DWORD PTR [esp+0x10],esi
64007636:	mov    esi,DWORD PTR [esi]
64007638:	cmp    BYTE PTR [esi+0x29],0x0
6400763c:	je     0x640075e4
6400763e:	mov    eax,DWORD PTR [esp+0x10]
64007642:	pop    edi
64007643:	pop    ebp
64007644:	pop    ebx
64007645:	pop    esi
64007646:	add    esp,0x8
64007649:	ret    
6400764a:	int3   
6400764b:	int3   
6400764c:	int3   
6400764d:	int3   
6400764e:	int3   
6400764f:	int3   
64007650:	mov    ecx,DWORD PTR [eax+0x8]
64007653:	cmp    BYTE PTR [ecx+0x29],0x0
64007657:	jne    0x6400766b
64007659:	lea    esp,[esp+0x0]
64007660:	mov    eax,ecx
64007662:	mov    ecx,DWORD PTR [eax+0x8]
64007665:	cmp    BYTE PTR [ecx+0x29],0x0
64007669:	je     0x64007660
6400766b:	ret    
6400766c:	int3   
6400766d:	int3   
6400766e:	int3   
6400766f:	int3   
64007670:	sub    esp,0x10
64007673:	mov    ecx,DWORD PTR [ecx+0x4]
64007676:	push   edi
64007677:	mov    edi,DWORD PTR [ecx+0x4]
6400767a:	cmp    BYTE PTR [edi+0x29],0x0
6400767e:	mov    DWORD PTR [esp+0x8],ecx
64007682:	jne    0x64007701
64007684:	mov    edx,DWORD PTR [eax+0x14]
64007687:	mov    ecx,DWORD PTR [eax+0x18]
6400768a:	push   ebx
6400768b:	push   ebp
6400768c:	add    eax,0x4
6400768f:	push   esi
64007690:	mov    ebp,edx
64007692:	mov    DWORD PTR [esp+0x1c],ecx
64007696:	mov    DWORD PTR [esp+0x10],eax
6400769a:	lea    ebx,[ebx+0x0]
640076a0:	cmp    DWORD PTR [edi+0x24],0x10
640076a4:	mov    ebx,DWORD PTR [edi+0x20]
640076a7:	jb     0x640076ae
640076a9:	mov    edx,DWORD PTR [edi+0x10]
640076ac:	jmp    0x640076b1
640076ae:	lea    edx,[edi+0x10]
640076b1:	mov    esi,ebp
640076b3:	cmp    esi,ebx
640076b5:	mov    ecx,esi
640076b7:	jb     0x640076bb
640076b9:	mov    ecx,ebx
640076bb:	cmp    DWORD PTR [esp+0x1c],0x10
640076c0:	mov    eax,DWORD PTR [esp+0x10]
640076c4:	jb     0x640076c8
640076c6:	mov    eax,DWORD PTR [eax]
640076c8:	push   ecx
640076c9:	push   edx
640076ca:	push   eax
640076cb:	call   0x64002be0
640076d0:	add    esp,0xc
640076d3:	test   eax,eax
640076d5:	jne    0x640076e2
640076d7:	cmp    esi,ebx
640076d9:	jb     0x640076e4
640076db:	cmp    esi,ebx
640076dd:	setne  al
640076e0:	test   eax,eax
640076e2:	jge    0x640076ec
640076e4:	mov    DWORD PTR [esp+0x14],edi
640076e8:	mov    edi,DWORD PTR [edi]
640076ea:	jmp    0x640076ef
640076ec:	mov    edi,DWORD PTR [edi+0x8]
640076ef:	cmp    BYTE PTR [edi+0x29],0x0
640076f3:	je     0x640076a0
640076f5:	mov    eax,DWORD PTR [esp+0x14]
640076f9:	pop    esi
640076fa:	pop    ebp
640076fb:	pop    ebx
640076fc:	pop    edi
640076fd:	add    esp,0x10
64007700:	ret    
64007701:	mov    eax,ecx
64007703:	pop    edi
64007704:	add    esp,0x10
64007707:	ret    
64007708:	int3   
64007709:	int3   
6400770a:	int3   
6400770b:	int3   
6400770c:	int3   
6400770d:	int3   
6400770e:	int3   
6400770f:	int3   
64007710:	push   0x2c
64007712:	call   0x64012641
64007717:	add    esp,0x4
6400771a:	test   eax,eax
6400771c:	je     0x64007724
6400771e:	mov    DWORD PTR [eax],0x0
64007724:	lea    ecx,[eax+0x4]
64007727:	test   ecx,ecx
64007729:	je     0x64007731
6400772b:	mov    DWORD PTR [ecx],0x0
64007731:	lea    ecx,[eax+0x8]
64007734:	test   ecx,ecx
64007736:	je     0x6400773e
64007738:	mov    DWORD PTR [ecx],0x0
6400773e:	mov    BYTE PTR [eax+0x28],0x1
64007742:	mov    BYTE PTR [eax+0x29],0x0
64007746:	ret    
64007747:	int3   
64007748:	int3   
64007749:	int3   
6400774a:	int3   
6400774b:	int3   
6400774c:	int3   
6400774d:	int3   
6400774e:	int3   
6400774f:	int3   
64007750:	cmp    DWORD PTR [esi],0x0
64007753:	jne    0x6400775a
64007755:	call   0x64012618
6400775a:	mov    eax,DWORD PTR [esi+0x4]
6400775d:	cmp    BYTE PTR [eax+0x29],0x0
64007761:	je     0x64007774
64007763:	mov    eax,DWORD PTR [eax+0x8]
64007766:	mov    DWORD PTR [esi+0x4],eax
64007769:	cmp    BYTE PTR [eax+0x29],0x0
6400776d:	je     0x640077c6
6400776f:	jmp    0x64012618
64007774:	mov    ecx,DWORD PTR [eax]
64007776:	cmp    BYTE PTR [ecx+0x29],0x0
6400777a:	jne    0x64007794
6400777c:	mov    eax,DWORD PTR [ecx+0x8]
6400777f:	cmp    BYTE PTR [eax+0x29],0x0
64007783:	jne    0x64007790
64007785:	mov    ecx,eax
64007787:	mov    eax,DWORD PTR [ecx+0x8]
6400778a:	cmp    BYTE PTR [eax+0x29],0x0
6400778e:	je     0x64007785
64007790:	mov    DWORD PTR [esi+0x4],ecx
64007793:	ret    
64007794:	mov    eax,DWORD PTR [eax+0x4]
64007797:	cmp    BYTE PTR [eax+0x29],0x0
6400779b:	jne    0x640077b5
6400779d:	lea    ecx,[ecx+0x0]
640077a0:	mov    ecx,DWORD PTR [esi+0x4]
640077a3:	cmp    ecx,DWORD PTR [eax]
640077a5:	jne    0x640077b5
640077a7:	mov    DWORD PTR [esi+0x4],eax
640077aa:	mov    edx,eax
640077ac:	mov    eax,DWORD PTR [edx+0x4]
640077af:	cmp    BYTE PTR [eax+0x29],0x0
640077b3:	je     0x640077a0
640077b5:	mov    ecx,DWORD PTR [esi+0x4]
640077b8:	cmp    BYTE PTR [ecx+0x29],0x0
640077bc:	je     0x640077c3
640077be:	jmp    0x64012618
640077c3:	mov    DWORD PTR [esi+0x4],eax
640077c6:	ret    
640077c7:	int3   
640077c8:	int3   
640077c9:	int3   
640077ca:	int3   
640077cb:	int3   
640077cc:	int3   
640077cd:	int3   
640077ce:	int3   
640077cf:	int3   
640077d0:	push   ecx
640077d1:	mov    eax,DWORD PTR [ecx+0x4]
640077d4:	push   esi
640077d5:	mov    esi,DWORD PTR [eax+0x4]
640077d8:	cmp    BYTE PTR [esi+0x45],0x0
640077dc:	mov    DWORD PTR [esp+0x4],eax
640077e0:	jne    0x64007857
640077e2:	mov    eax,DWORD PTR [esp+0xc]
640077e6:	mov    ecx,DWORD PTR [eax+0x18]
640077e9:	push   ebx
640077ea:	mov    ebx,DWORD PTR [eax+0x14]
640077ed:	push   ebp
640077ee:	push   edi
640077ef:	mov    DWORD PTR [esp+0x18],ecx
640077f3:	lea    ebp,[eax+0x4]
640077f6:	cmp    DWORD PTR [esp+0x18],0x10
640077fb:	jb     0x64007802
640077fd:	mov    edx,DWORD PTR [ebp+0x0]
64007800:	jmp    0x64007804
64007802:	mov    edx,ebp
64007804:	mov    edi,DWORD PTR [esi+0x20]
64007807:	mov    eax,edi
64007809:	cmp    eax,edi
6400780b:	jae    0x6400780d
6400780d:	cmp    edi,ebx
6400780f:	mov    ecx,edi
64007811:	jb     0x64007815
64007813:	mov    ecx,ebx
64007815:	cmp    DWORD PTR [esi+0x24],0x10
64007819:	jb     0x64007820
6400781b:	mov    eax,DWORD PTR [esi+0x10]
6400781e:	jmp    0x64007823
64007820:	lea    eax,[esi+0x10]
64007823:	push   ecx
64007824:	push   edx
64007825:	push   eax
64007826:	call   0x64002be0
6400782b:	add    esp,0xc
6400782e:	test   eax,eax
64007830:	jne    0x6400783d
64007832:	cmp    edi,ebx
64007834:	jb     0x6400783f
64007836:	cmp    edi,ebx
64007838:	setne  al
6400783b:	test   eax,eax
6400783d:	jge    0x64007844
6400783f:	mov    esi,DWORD PTR [esi+0x8]
64007842:	jmp    0x6400784a
64007844:	mov    DWORD PTR [esp+0x10],esi
64007848:	mov    esi,DWORD PTR [esi]
6400784a:	cmp    BYTE PTR [esi+0x45],0x0
6400784e:	je     0x640077f6
64007850:	mov    eax,DWORD PTR [esp+0x10]
64007854:	pop    edi
64007855:	pop    ebp
64007856:	pop    ebx
64007857:	pop    esi
64007858:	pop    ecx
64007859:	ret    0x4
6400785c:	int3   
6400785d:	int3   
6400785e:	int3   
6400785f:	int3   
64007860:	mov    edx,DWORD PTR [esp+0x4]
64007864:	mov    eax,DWORD PTR [edx+0x8]
64007867:	push   esi
64007868:	mov    esi,DWORD PTR [eax]
6400786a:	mov    DWORD PTR [edx+0x8],esi
6400786d:	mov    esi,DWORD PTR [eax]
6400786f:	cmp    BYTE PTR [esi+0x45],0x0
64007873:	jne    0x64007878
64007875:	mov    DWORD PTR [esi+0x4],edx
64007878:	mov    esi,DWORD PTR [edx+0x4]
6400787b:	mov    DWORD PTR [eax+0x4],esi
6400787e:	mov    ecx,DWORD PTR [ecx+0x4]
64007881:	cmp    edx,DWORD PTR [ecx+0x4]
64007884:	pop    esi
64007885:	jne    0x64007892
64007887:	mov    DWORD PTR [ecx+0x4],eax
6400788a:	mov    DWORD PTR [eax],edx
6400788c:	mov    DWORD PTR [edx+0x4],eax
6400788f:	ret    0x4
64007892:	mov    ecx,DWORD PTR [edx+0x4]
64007895:	cmp    edx,DWORD PTR [ecx]
64007897:	jne    0x640078a3
64007899:	mov    DWORD PTR [ecx],eax
6400789b:	mov    DWORD PTR [eax],edx
6400789d:	mov    DWORD PTR [edx+0x4],eax
640078a0:	ret    0x4
640078a3:	mov    DWORD PTR [ecx+0x8],eax
640078a6:	mov    DWORD PTR [eax],edx
640078a8:	mov    DWORD PTR [edx+0x4],eax
640078ab:	ret    0x4
640078ae:	int3   
640078af:	int3   
640078b0:	mov    edx,DWORD PTR [esp+0x4]
640078b4:	mov    eax,DWORD PTR [edx]
640078b6:	push   esi
640078b7:	mov    esi,DWORD PTR [eax+0x8]
640078ba:	mov    DWORD PTR [edx],esi
640078bc:	mov    esi,DWORD PTR [eax+0x8]
640078bf:	cmp    BYTE PTR [esi+0x45],0x0
640078c3:	jne    0x640078c8
640078c5:	mov    DWORD PTR [esi+0x4],edx
640078c8:	mov    esi,DWORD PTR [edx+0x4]
640078cb:	mov    DWORD PTR [eax+0x4],esi
640078ce:	mov    ecx,DWORD PTR [ecx+0x4]
640078d1:	cmp    edx,DWORD PTR [ecx+0x4]
640078d4:	pop    esi
640078d5:	jne    0x640078e3
640078d7:	mov    DWORD PTR [ecx+0x4],eax
640078da:	mov    DWORD PTR [eax+0x8],edx
640078dd:	mov    DWORD PTR [edx+0x4],eax
640078e0:	ret    0x4
640078e3:	mov    ecx,DWORD PTR [edx+0x4]
640078e6:	cmp    edx,DWORD PTR [ecx+0x8]
640078e9:	jne    0x640078f7
640078eb:	mov    DWORD PTR [ecx+0x8],eax
640078ee:	mov    DWORD PTR [eax+0x8],edx
640078f1:	mov    DWORD PTR [edx+0x4],eax
640078f4:	ret    0x4
640078f7:	mov    DWORD PTR [ecx],eax
640078f9:	mov    DWORD PTR [eax+0x8],edx
640078fc:	mov    DWORD PTR [edx+0x4],eax
640078ff:	ret    0x4
64007902:	int3   
64007903:	int3   
64007904:	int3   
64007905:	int3   
64007906:	int3   
64007907:	int3   
64007908:	int3   
64007909:	int3   
6400790a:	int3   
6400790b:	int3   
6400790c:	int3   
6400790d:	int3   
6400790e:	int3   
6400790f:	int3   
64007910:	push   ebp
64007911:	mov    ebp,esp
64007913:	push   0xffffffff
64007915:	push   0x64022761
6400791a:	mov    eax,fs:0x0
64007920:	push   eax
64007921:	sub    esp,0xc
64007924:	push   ebx
64007925:	push   esi
64007926:	push   edi
64007927:	mov    eax,ds:0x6402d09c
6400792c:	xor    eax,ebp
6400792e:	push   eax
6400792f:	lea    eax,[ebp-0xc]
64007932:	mov    fs:0x0,eax
64007938:	mov    DWORD PTR [ebp-0x10],esp
6400793b:	push   0x48
6400793d:	call   0x64012641
64007942:	mov    esi,eax
64007944:	mov    DWORD PTR [ebp-0x4],0x0
6400794b:	add    esp,0x4
6400794e:	mov    DWORD PTR [ebp-0x14],esi
64007951:	mov    DWORD PTR [ebp-0x18],esi
64007954:	test   esi,esi
64007956:	mov    BYTE PTR [ebp-0x4],0x1
6400795a:	je     0x64007983
6400795c:	mov    eax,DWORD PTR [ebp+0x8]
6400795f:	mov    ecx,DWORD PTR [ebp+0xc]
64007962:	mov    edx,DWORD PTR [ebp+0x10]
64007965:	mov    DWORD PTR [esi],eax
64007967:	mov    eax,DWORD PTR [ebp+0x14]
6400796a:	mov    DWORD PTR [esi+0x4],ecx
6400796d:	push   eax
6400796e:	lea    ecx,[esi+0xc]
64007971:	mov    DWORD PTR [esi+0x8],edx
64007974:	call   0x64007fb0
64007979:	mov    cl,BYTE PTR [ebp+0x18]
6400797c:	mov    BYTE PTR [esi+0x44],cl
6400797f:	mov    BYTE PTR [esi+0x45],0x0
64007983:	mov    eax,esi
64007985:	mov    ecx,DWORD PTR [ebp-0xc]
64007988:	mov    DWORD PTR fs:0x0,ecx
6400798f:	pop    ecx
64007990:	pop    edi
64007991:	pop    esi
64007992:	pop    ebx
64007993:	mov    esp,ebp
64007995:	pop    ebp
64007996:	ret    0x14
64007999:	mov    edx,DWORD PTR [ebp-0x14]
6400799c:	push   edx
6400799d:	call   0x64012262
640079a2:	add    esp,0x4
640079a5:	push   0x0
640079a7:	push   0x0
640079a9:	call   0x640126ab
640079ae:	int3   
640079af:	int3   
640079b0:	push   ebx
640079b1:	mov    ebx,DWORD PTR [esp+0x8]
640079b5:	push   esi
640079b6:	mov    esi,ecx
640079b8:	cmp    DWORD PTR [esi+0x14],ebx
640079bb:	push   edi
640079bc:	jae    0x640079c3
640079be:	call   0x6401221e
640079c3:	mov    eax,DWORD PTR [esi+0x14]
640079c6:	mov    edi,DWORD PTR [esp+0x14]
640079ca:	sub    eax,ebx
640079cc:	cmp    eax,edi
640079ce:	jae    0x640079d2
640079d0:	mov    edi,eax
640079d2:	test   edi,edi
640079d4:	jbe    0x64007a3f
640079d6:	mov    ecx,DWORD PTR [esi+0x18]
640079d9:	cmp    ecx,0x8
640079dc:	push   ebp
640079dd:	lea    ebp,[esi+0x4]
640079e0:	jb     0x640079eb
640079e2:	mov    edx,DWORD PTR [ebp+0x0]
640079e5:	mov    DWORD PTR [esp+0x14],edx
640079e9:	jmp    0x640079ef
640079eb:	mov    DWORD PTR [esp+0x14],ebp
640079ef:	cmp    ecx,0x8
640079f2:	jb     0x640079fd
640079f4:	mov    edx,DWORD PTR [ebp+0x0]
640079f7:	mov    DWORD PTR [esp+0x18],edx
640079fb:	jmp    0x64007a01
640079fd:	mov    DWORD PTR [esp+0x18],ebp
64007a01:	mov    edx,DWORD PTR [esp+0x14]
64007a05:	sub    eax,edi
64007a07:	add    eax,eax
64007a09:	push   eax
64007a0a:	lea    eax,[ebx+edi*1]
64007a0d:	lea    eax,[edx+eax*2]
64007a10:	sub    ecx,ebx
64007a12:	push   eax
64007a13:	add    ecx,ecx
64007a15:	push   ecx
64007a16:	mov    ecx,DWORD PTR [esp+0x24]
64007a1a:	lea    edx,[ecx+ebx*2]
64007a1d:	push   edx
64007a1e:	call   0x64012493
64007a23:	mov    eax,DWORD PTR [esi+0x14]
64007a26:	sub    eax,edi
64007a28:	add    esp,0x10
64007a2b:	cmp    DWORD PTR [esi+0x18],0x8
64007a2f:	mov    DWORD PTR [esi+0x14],eax
64007a32:	jb     0x64007a37
64007a34:	mov    ebp,DWORD PTR [ebp+0x0]
64007a37:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64007a3e:	pop    ebp
64007a3f:	pop    edi
64007a40:	mov    eax,esi
64007a42:	pop    esi
64007a43:	pop    ebx
64007a44:	ret    0x8
64007a47:	int3   
64007a48:	int3   
64007a49:	int3   
64007a4a:	int3   
64007a4b:	int3   
64007a4c:	int3   
64007a4d:	int3   
64007a4e:	int3   
64007a4f:	int3   
64007a50:	mov    eax,DWORD PTR [ecx+0x4]
64007a53:	push   ebp
64007a54:	push   esi
64007a55:	mov    esi,DWORD PTR [eax+0x4]
64007a58:	cmp    BYTE PTR [esi+0x45],0x0
64007a5c:	mov    ebp,eax
64007a5e:	jne    0x64007aa6
64007a60:	push   ebx
64007a61:	push   edi
64007a62:	mov    edi,DWORD PTR [esp+0x14]
64007a66:	lea    ebx,[edi+0x4]
64007a69:	lea    esp,[esp+0x0]
64007a70:	cmp    DWORD PTR [edi+0x18],0x8
64007a74:	mov    edx,DWORD PTR [edi+0x14]
64007a77:	lea    ecx,[esi+0xc]
64007a7a:	jb     0x64007a80
64007a7c:	mov    eax,DWORD PTR [ebx]
64007a7e:	jmp    0x64007a82
64007a80:	mov    eax,ebx
64007a82:	push   edx
64007a83:	push   eax
64007a84:	mov    eax,DWORD PTR [ecx+0x14]
64007a87:	push   eax
64007a88:	push   0x0
64007a8a:	call   0x64008d30
64007a8f:	test   eax,eax
64007a91:	jge    0x64007a98
64007a93:	mov    esi,DWORD PTR [esi+0x8]
64007a96:	jmp    0x64007a9c
64007a98:	mov    ebp,esi
64007a9a:	mov    esi,DWORD PTR [esi]
64007a9c:	cmp    BYTE PTR [esi+0x45],0x0
64007aa0:	je     0x64007a70
64007aa2:	pop    edi
64007aa3:	mov    eax,ebp
64007aa5:	pop    ebx
64007aa6:	pop    esi
64007aa7:	pop    ebp
64007aa8:	ret    0x4
64007aab:	int3   
64007aac:	int3   
64007aad:	int3   
64007aae:	int3   
64007aaf:	int3   
64007ab0:	push   ebp
64007ab1:	mov    ebp,esp
64007ab3:	push   0xffffffff
64007ab5:	push   0x64022a61
64007aba:	mov    eax,fs:0x0
64007ac0:	push   eax
64007ac1:	sub    esp,0xc
64007ac4:	push   ebx
64007ac5:	push   esi
64007ac6:	push   edi
64007ac7:	mov    eax,ds:0x6402d09c
64007acc:	xor    eax,ebp
64007ace:	push   eax
64007acf:	lea    eax,[ebp-0xc]
64007ad2:	mov    fs:0x0,eax
64007ad8:	mov    DWORD PTR [ebp-0x10],esp
64007adb:	push   0x48
64007add:	call   0x64012641
64007ae2:	mov    esi,eax
64007ae4:	mov    DWORD PTR [ebp-0x4],0x0
64007aeb:	add    esp,0x4
64007aee:	mov    DWORD PTR [ebp-0x14],esi
64007af1:	mov    DWORD PTR [ebp-0x18],esi
64007af4:	test   esi,esi
64007af6:	mov    BYTE PTR [ebp-0x4],0x1
64007afa:	je     0x64007b23
64007afc:	mov    eax,DWORD PTR [ebp+0x8]
64007aff:	mov    ecx,DWORD PTR [ebp+0xc]
64007b02:	mov    edx,DWORD PTR [ebp+0x10]
64007b05:	mov    DWORD PTR [esi],eax
64007b07:	mov    eax,DWORD PTR [ebp+0x14]
64007b0a:	mov    DWORD PTR [esi+0x4],ecx
64007b0d:	push   eax
64007b0e:	lea    ecx,[esi+0xc]
64007b11:	mov    DWORD PTR [esi+0x8],edx
64007b14:	call   0x64008030
64007b19:	mov    cl,BYTE PTR [ebp+0x18]
64007b1c:	mov    BYTE PTR [esi+0x44],cl
64007b1f:	mov    BYTE PTR [esi+0x45],0x0
64007b23:	mov    eax,esi
64007b25:	mov    ecx,DWORD PTR [ebp-0xc]
64007b28:	mov    DWORD PTR fs:0x0,ecx
64007b2f:	pop    ecx
64007b30:	pop    edi
64007b31:	pop    esi
64007b32:	pop    ebx
64007b33:	mov    esp,ebp
64007b35:	pop    ebp
64007b36:	ret    0x14
64007b39:	mov    edx,DWORD PTR [ebp-0x14]
64007b3c:	push   edx
64007b3d:	call   0x64012262
64007b42:	add    esp,0x4
64007b45:	push   0x0
64007b47:	push   0x0
64007b49:	call   0x640126ab
64007b4e:	int3   
64007b4f:	int3   
64007b50:	push   ebx
64007b51:	push   ebp
64007b52:	push   esi
64007b53:	mov    esi,DWORD PTR [esp+0x10]
64007b57:	xor    ebx,ebx
64007b59:	cmp    BYTE PTR [esi+0x29],bl
64007b5c:	push   edi
64007b5d:	mov    ebp,ecx
64007b5f:	mov    edi,esi
64007b61:	jne    0x64007b9f
64007b63:	mov    eax,DWORD PTR [edi+0x8]
64007b66:	push   eax
64007b67:	mov    ecx,ebp
64007b69:	call   0x64007b50
64007b6e:	cmp    DWORD PTR [esi+0x24],0x10
64007b72:	mov    edi,DWORD PTR [edi]
64007b74:	jb     0x64007b82
64007b76:	mov    ecx,DWORD PTR [esi+0x10]
64007b79:	push   ecx
64007b7a:	call   0x64012262
64007b7f:	add    esp,0x4
64007b82:	mov    DWORD PTR [esi+0x24],0xf
64007b89:	mov    DWORD PTR [esi+0x20],ebx
64007b8c:	push   esi
64007b8d:	mov    BYTE PTR [esi+0x10],bl
64007b90:	call   0x64012262
64007b95:	add    esp,0x4
64007b98:	cmp    BYTE PTR [edi+0x29],bl
64007b9b:	mov    esi,edi
64007b9d:	je     0x64007b63
64007b9f:	pop    edi
64007ba0:	pop    esi
64007ba1:	pop    ebp
64007ba2:	pop    ebx
64007ba3:	ret    0x4
64007ba6:	int3   
64007ba7:	int3   
64007ba8:	int3   
64007ba9:	int3   
64007baa:	int3   
64007bab:	int3   
64007bac:	int3   
64007bad:	int3   
64007bae:	int3   
64007baf:	int3   
64007bb0:	push   ebp
64007bb1:	mov    ebp,esp
64007bb3:	and    esp,0xfffffff8
64007bb6:	sub    esp,0x14
64007bb9:	push   ebx
64007bba:	push   esi
64007bbb:	push   edi
64007bbc:	mov    edi,ecx
64007bbe:	mov    eax,DWORD PTR [edi+0x4]
64007bc1:	mov    ebx,DWORD PTR [eax]
64007bc3:	mov    eax,DWORD PTR [ebp+0xc]
64007bc6:	test   eax,eax
64007bc8:	je     0x64007bce
64007bca:	cmp    eax,edi
64007bcc:	je     0x64007bd3
64007bce:	call   0x64012618
64007bd3:	mov    esi,DWORD PTR [ebp+0x10]
64007bd6:	cmp    esi,ebx
64007bd8:	jne    0x64007c30
64007bda:	mov    eax,DWORD PTR [ebp+0x14]
64007bdd:	test   eax,eax
64007bdf:	mov    ebx,DWORD PTR [edi+0x4]
64007be2:	je     0x64007be8
64007be4:	cmp    eax,edi
64007be6:	je     0x64007bed
64007be8:	call   0x64012618
64007bed:	cmp    DWORD PTR [ebp+0x18],ebx
64007bf0:	jne    0x64007c30
64007bf2:	mov    ecx,DWORD PTR [edi+0x4]
64007bf5:	mov    edx,DWORD PTR [ecx+0x4]
64007bf8:	push   edx
64007bf9:	mov    ecx,edi
64007bfb:	call   0x640087b0
64007c00:	mov    eax,DWORD PTR [edi+0x4]
64007c03:	mov    DWORD PTR [eax+0x4],eax
64007c06:	mov    eax,DWORD PTR [edi+0x4]
64007c09:	mov    DWORD PTR [edi+0x8],0x0
64007c10:	mov    DWORD PTR [eax],eax
64007c12:	mov    eax,DWORD PTR [edi+0x4]
64007c15:	mov    DWORD PTR [eax+0x8],eax
64007c18:	mov    eax,DWORD PTR [edi+0x4]
64007c1b:	mov    ecx,DWORD PTR [eax]
64007c1d:	mov    eax,DWORD PTR [ebp+0x8]
64007c20:	mov    DWORD PTR [eax+0x4],ecx
64007c23:	mov    DWORD PTR [eax],edi
64007c25:	pop    edi
64007c26:	pop    esi
64007c27:	pop    ebx
64007c28:	mov    esp,ebp
64007c2a:	pop    ebp
64007c2b:	ret    0x14
64007c2e:	mov    edi,edi
64007c30:	mov    ebx,DWORD PTR [ebp+0xc]
64007c33:	test   ebx,ebx
64007c35:	je     0x64007c3c
64007c37:	cmp    ebx,DWORD PTR [ebp+0x14]
64007c3a:	je     0x64007c41
64007c3c:	call   0x64012618
64007c41:	cmp    esi,DWORD PTR [ebp+0x18]
64007c44:	je     0x64007cae
64007c46:	test   ebx,ebx
64007c48:	mov    DWORD PTR [esp+0x14],esi
64007c4c:	jne    0x64007c53
64007c4e:	call   0x64012618
64007c53:	cmp    BYTE PTR [esi+0x45],0x0
64007c57:	je     0x64007c60
64007c59:	call   0x64012618
64007c5e:	jmp    0x64007c9a
64007c60:	mov    eax,DWORD PTR [esi+0x8]
64007c63:	cmp    BYTE PTR [eax+0x45],0x0
64007c67:	jne    0x64007c7f
64007c69:	mov    esi,eax
64007c6b:	mov    eax,DWORD PTR [esi]
64007c6d:	cmp    BYTE PTR [eax+0x45],0x0
64007c71:	jne    0x64007c9a
64007c73:	mov    esi,eax
64007c75:	mov    eax,DWORD PTR [esi]
64007c77:	cmp    BYTE PTR [eax+0x45],0x0
64007c7b:	je     0x64007c73
64007c7d:	jmp    0x64007c9a
64007c7f:	mov    eax,DWORD PTR [esi+0x4]
64007c82:	cmp    BYTE PTR [eax+0x45],0x0
64007c86:	jne    0x64007c98
64007c88:	cmp    esi,DWORD PTR [eax+0x8]
64007c8b:	jne    0x64007c98
64007c8d:	mov    esi,eax
64007c8f:	mov    eax,DWORD PTR [eax+0x4]
64007c92:	cmp    BYTE PTR [eax+0x45],0x0
64007c96:	je     0x64007c88
64007c98:	mov    esi,eax
64007c9a:	mov    edx,DWORD PTR [esp+0x14]
64007c9e:	push   edx
64007c9f:	push   ebx
64007ca0:	lea    eax,[esp+0x20]
64007ca4:	push   eax
64007ca5:	mov    ecx,edi
64007ca7:	call   0x640080b0
64007cac:	jmp    0x64007c30
64007cae:	mov    eax,DWORD PTR [ebp+0x8]
64007cb1:	pop    edi
64007cb2:	mov    DWORD PTR [eax+0x4],esi
64007cb5:	pop    esi
64007cb6:	mov    DWORD PTR [eax],ebx
64007cb8:	pop    ebx
64007cb9:	mov    esp,ebp
64007cbb:	pop    ebp
64007cbc:	ret    0x14
64007cbf:	int3   
64007cc0:	push   ebp
64007cc1:	mov    ebp,esp
64007cc3:	push   0xffffffff
64007cc5:	push   0x64022730
64007cca:	mov    eax,fs:0x0
64007cd0:	push   eax
64007cd1:	sub    esp,0xc
64007cd4:	push   ebx
64007cd5:	push   esi
64007cd6:	push   edi
64007cd7:	mov    eax,ds:0x6402d09c
64007cdc:	xor    eax,ebp
64007cde:	push   eax
64007cdf:	lea    eax,[ebp-0xc]
64007ce2:	mov    fs:0x0,eax
64007ce8:	mov    DWORD PTR [ebp-0x10],esp
64007ceb:	mov    edi,ecx
64007ced:	mov    DWORD PTR [ebp-0x14],edi
64007cf0:	mov    eax,DWORD PTR [ebp+0x8]
64007cf3:	mov    esi,eax
64007cf5:	or     esi,0x7
64007cf8:	cmp    esi,0x7ffffffe
64007cfe:	jbe    0x64007d04
64007d00:	mov    esi,eax
64007d02:	jmp    0x64007d26
64007d04:	mov    ebx,DWORD PTR [edi+0x18]
64007d07:	mov    eax,0xaaaaaaab
64007d0c:	mul    esi
64007d0e:	mov    ecx,ebx
64007d10:	shr    ecx,1
64007d12:	shr    edx,1
64007d14:	cmp    edx,ecx
64007d16:	jae    0x64007d26
64007d18:	mov    eax,0x7ffffffe
64007d1d:	sub    eax,ecx
64007d1f:	cmp    ebx,eax
64007d21:	ja     0x64007d26
64007d23:	lea    esi,[ecx+ebx*1]
64007d26:	lea    ecx,[esi+0x1]
64007d29:	push   ecx
64007d2a:	mov    ecx,edi
64007d2c:	mov    DWORD PTR [ebp-0x4],0x0
64007d33:	call   0x640083f0
64007d38:	mov    DWORD PTR [ebp+0x8],eax
64007d3b:	jmp    0x64007d65
64007d3d:	mov    eax,DWORD PTR [ebp+0x8]
64007d40:	mov    ecx,DWORD PTR [ebp-0x14]
64007d43:	mov    DWORD PTR [ebp-0x18],eax
64007d46:	add    eax,0x1
64007d49:	mov    DWORD PTR [ebp-0x10],esp
64007d4c:	push   eax
64007d4d:	mov    BYTE PTR [ebp-0x4],0x2
64007d51:	call   0x640083f0
64007d56:	mov    DWORD PTR [ebp+0x8],eax
64007d59:	mov    eax,0x64007d5f
64007d5e:	ret    
64007d5f:	mov    edi,DWORD PTR [ebp-0x14]
64007d62:	mov    esi,DWORD PTR [ebp-0x18]
64007d65:	mov    ebx,DWORD PTR [ebp+0xc]
64007d68:	test   ebx,ebx
64007d6a:	jbe    0x64007d90
64007d6c:	cmp    DWORD PTR [edi+0x18],0x8
64007d70:	jb     0x64007d77
64007d72:	mov    eax,DWORD PTR [edi+0x4]
64007d75:	jmp    0x64007d7a
64007d77:	lea    eax,[edi+0x4]
64007d7a:	mov    ecx,DWORD PTR [ebp+0x8]
64007d7d:	lea    edx,[ebx+ebx*1]
64007d80:	push   edx
64007d81:	push   eax
64007d82:	lea    eax,[esi+esi*1+0x2]
64007d86:	push   eax
64007d87:	push   ecx
64007d88:	call   0x64012418
64007d8d:	add    esp,0x10
64007d90:	cmp    DWORD PTR [edi+0x18],0x8
64007d94:	jb     0x64007da2
64007d96:	mov    edx,DWORD PTR [edi+0x4]
64007d99:	push   edx
64007d9a:	call   0x64012262
64007d9f:	add    esp,0x4
64007da2:	cmp    esi,0x8
64007da5:	mov    ecx,DWORD PTR [ebp+0x8]
64007da8:	lea    eax,[edi+0x4]
64007dab:	mov    WORD PTR [eax],0x0
64007db0:	mov    DWORD PTR [eax],ecx
64007db2:	mov    DWORD PTR [edi+0x18],esi
64007db5:	mov    DWORD PTR [edi+0x14],ebx
64007db8:	jb     0x64007dbc
64007dba:	mov    eax,ecx
64007dbc:	mov    WORD PTR [eax+ebx*2],0x0
64007dc2:	mov    ecx,DWORD PTR [ebp-0xc]
64007dc5:	mov    DWORD PTR fs:0x0,ecx
64007dcc:	pop    ecx
64007dcd:	pop    edi
64007dce:	pop    esi
64007dcf:	pop    ebx
64007dd0:	mov    esp,ebp
64007dd2:	pop    ebp
64007dd3:	ret    0x8
64007dd6:	mov    esi,DWORD PTR [ebp-0x14]
64007dd9:	cmp    DWORD PTR [esi+0x18],0x8
64007ddd:	jb     0x64007deb
64007ddf:	mov    eax,DWORD PTR [esi+0x4]
64007de2:	push   eax
64007de3:	call   0x64012262
64007de8:	add    esp,0x4
64007deb:	xor    eax,eax
64007ded:	push   eax
64007dee:	mov    DWORD PTR [esi+0x18],0x7
64007df5:	mov    DWORD PTR [esi+0x14],eax
64007df8:	push   eax
64007df9:	mov    WORD PTR [esi+0x4],ax
64007dfd:	call   0x640126ab
64007e02:	int3   
64007e03:	int3   
64007e04:	int3   
64007e05:	int3   
64007e06:	int3   
64007e07:	int3   
64007e08:	int3   
64007e09:	int3   
64007e0a:	int3   
64007e0b:	int3   
64007e0c:	int3   
64007e0d:	int3   
64007e0e:	int3   
64007e0f:	int3   
64007e10:	push   ebp
64007e11:	mov    ebp,esp
64007e13:	and    esp,0xfffffff8
64007e16:	sub    esp,0x14
64007e19:	push   ebx
64007e1a:	push   esi
64007e1b:	push   edi
64007e1c:	mov    edi,ecx
64007e1e:	mov    eax,DWORD PTR [edi+0x4]
64007e21:	mov    ebx,DWORD PTR [eax]
64007e23:	mov    eax,DWORD PTR [ebp+0xc]
64007e26:	test   eax,eax
64007e28:	je     0x64007e2e
64007e2a:	cmp    eax,edi
64007e2c:	je     0x64007e33
64007e2e:	call   0x64012618
64007e33:	mov    esi,DWORD PTR [ebp+0x10]
64007e36:	cmp    esi,ebx
64007e38:	jne    0x64007e90
64007e3a:	mov    eax,DWORD PTR [ebp+0x14]
64007e3d:	test   eax,eax
64007e3f:	mov    ebx,DWORD PTR [edi+0x4]
64007e42:	je     0x64007e48
64007e44:	cmp    eax,edi
64007e46:	je     0x64007e4d
64007e48:	call   0x64012618
64007e4d:	cmp    DWORD PTR [ebp+0x18],ebx
64007e50:	jne    0x64007e90
64007e52:	mov    ecx,DWORD PTR [edi+0x4]
64007e55:	mov    edx,DWORD PTR [ecx+0x4]
64007e58:	push   edx
64007e59:	mov    ecx,edi
64007e5b:	call   0x64008850
64007e60:	mov    eax,DWORD PTR [edi+0x4]
64007e63:	mov    DWORD PTR [eax+0x4],eax
64007e66:	mov    eax,DWORD PTR [edi+0x4]
64007e69:	mov    DWORD PTR [edi+0x8],0x0
64007e70:	mov    DWORD PTR [eax],eax
64007e72:	mov    eax,DWORD PTR [edi+0x4]
64007e75:	mov    DWORD PTR [eax+0x8],eax
64007e78:	mov    eax,DWORD PTR [edi+0x4]
64007e7b:	mov    ecx,DWORD PTR [eax]
64007e7d:	mov    eax,DWORD PTR [ebp+0x8]
64007e80:	mov    DWORD PTR [eax+0x4],ecx
64007e83:	mov    DWORD PTR [eax],edi
64007e85:	pop    edi
64007e86:	pop    esi
64007e87:	pop    ebx
64007e88:	mov    esp,ebp
64007e8a:	pop    ebp
64007e8b:	ret    0x14
64007e8e:	mov    edi,edi
64007e90:	mov    ebx,DWORD PTR [ebp+0xc]
64007e93:	test   ebx,ebx
64007e95:	je     0x64007e9c
64007e97:	cmp    ebx,DWORD PTR [ebp+0x14]
64007e9a:	je     0x64007ea1
64007e9c:	call   0x64012618
64007ea1:	cmp    esi,DWORD PTR [ebp+0x18]
64007ea4:	je     0x64007f0e
64007ea6:	test   ebx,ebx
64007ea8:	mov    DWORD PTR [esp+0x14],esi
64007eac:	jne    0x64007eb3
64007eae:	call   0x64012618
64007eb3:	cmp    BYTE PTR [esi+0x45],0x0
64007eb7:	je     0x64007ec0
64007eb9:	call   0x64012618
64007ebe:	jmp    0x64007efa
64007ec0:	mov    eax,DWORD PTR [esi+0x8]
64007ec3:	cmp    BYTE PTR [eax+0x45],0x0
64007ec7:	jne    0x64007edf
64007ec9:	mov    esi,eax
64007ecb:	mov    eax,DWORD PTR [esi]
64007ecd:	cmp    BYTE PTR [eax+0x45],0x0
64007ed1:	jne    0x64007efa
64007ed3:	mov    esi,eax
64007ed5:	mov    eax,DWORD PTR [esi]
64007ed7:	cmp    BYTE PTR [eax+0x45],0x0
64007edb:	je     0x64007ed3
64007edd:	jmp    0x64007efa
64007edf:	mov    eax,DWORD PTR [esi+0x4]
64007ee2:	cmp    BYTE PTR [eax+0x45],0x0
64007ee6:	jne    0x64007ef8
64007ee8:	cmp    esi,DWORD PTR [eax+0x8]
64007eeb:	jne    0x64007ef8
64007eed:	mov    esi,eax
64007eef:	mov    eax,DWORD PTR [eax+0x4]
64007ef2:	cmp    BYTE PTR [eax+0x45],0x0
64007ef6:	je     0x64007ee8
64007ef8:	mov    esi,eax
64007efa:	mov    edx,DWORD PTR [esp+0x14]
64007efe:	push   edx
64007eff:	push   ebx
64007f00:	lea    eax,[esp+0x20]
64007f04:	push   eax
64007f05:	mov    ecx,edi
64007f07:	call   0x64008450
64007f0c:	jmp    0x64007e90
64007f0e:	mov    eax,DWORD PTR [ebp+0x8]
64007f11:	pop    edi
64007f12:	mov    DWORD PTR [eax+0x4],esi
64007f15:	pop    esi
64007f16:	mov    DWORD PTR [eax],ebx
64007f18:	pop    ebx
64007f19:	mov    esp,ebp
64007f1b:	pop    ebp
64007f1c:	ret    0x14
64007f1f:	int3   
64007f20:	push   esi
64007f21:	mov    esi,ecx
64007f23:	cmp    DWORD PTR [esi],0x0
64007f26:	jne    0x64007f2d
64007f28:	call   0x64012618
64007f2d:	mov    eax,DWORD PTR [esi+0x4]
64007f30:	cmp    BYTE PTR [eax+0x45],0x0
64007f34:	je     0x64007f48
64007f36:	mov    eax,DWORD PTR [eax+0x8]
64007f39:	mov    DWORD PTR [esi+0x4],eax
64007f3c:	cmp    BYTE PTR [eax+0x45],0x0
64007f40:	je     0x64007fa7
64007f42:	pop    esi
64007f43:	jmp    0x64012618
64007f48:	mov    ecx,DWORD PTR [eax]
64007f4a:	cmp    BYTE PTR [ecx+0x45],0x0
64007f4e:	jne    0x64007f70
64007f50:	mov    eax,DWORD PTR [ecx+0x8]
64007f53:	cmp    BYTE PTR [eax+0x45],0x0
64007f57:	jne    0x64007f6b
64007f59:	lea    esp,[esp+0x0]
64007f60:	mov    ecx,eax
64007f62:	mov    eax,DWORD PTR [ecx+0x8]
64007f65:	cmp    BYTE PTR [eax+0x45],0x0
64007f69:	je     0x64007f60
64007f6b:	mov    DWORD PTR [esi+0x4],ecx
64007f6e:	pop    esi
64007f6f:	ret    
64007f70:	mov    eax,DWORD PTR [eax+0x4]
64007f73:	cmp    BYTE PTR [eax+0x45],0x0
64007f77:	jne    0x64007f95
64007f79:	lea    esp,[esp+0x0]
64007f80:	mov    ecx,DWORD PTR [esi+0x4]
64007f83:	cmp    ecx,DWORD PTR [eax]
64007f85:	jne    0x64007f95
64007f87:	mov    DWORD PTR [esi+0x4],eax
64007f8a:	mov    edx,eax
64007f8c:	mov    eax,DWORD PTR [edx+0x4]
64007f8f:	cmp    BYTE PTR [eax+0x45],0x0
64007f93:	je     0x64007f80
64007f95:	mov    ecx,DWORD PTR [esi+0x4]
64007f98:	cmp    BYTE PTR [ecx+0x45],0x0
64007f9c:	je     0x64007fa4
64007f9e:	pop    esi
64007f9f:	jmp    0x64012618
64007fa4:	mov    DWORD PTR [esi+0x4],eax
64007fa7:	pop    esi
64007fa8:	ret    
64007fa9:	int3   
64007faa:	int3   
64007fab:	int3   
64007fac:	int3   
64007fad:	int3   
64007fae:	int3   
64007faf:	int3   
64007fb0:	push   0xffffffff
64007fb2:	push   0x64022708
64007fb7:	mov    eax,fs:0x0
64007fbd:	push   eax
64007fbe:	push   ecx
64007fbf:	push   ebx
64007fc0:	push   esi
64007fc1:	push   edi
64007fc2:	mov    eax,ds:0x6402d09c
64007fc7:	xor    eax,esp
64007fc9:	push   eax
64007fca:	lea    eax,[esp+0x14]
64007fce:	mov    fs:0x0,eax
64007fd4:	mov    esi,ecx
64007fd6:	mov    DWORD PTR [esp+0x10],esi
64007fda:	mov    edi,DWORD PTR [esp+0x24]
64007fde:	xor    ebx,ebx
64007fe0:	push   0xffffffff
64007fe2:	push   ebx
64007fe3:	mov    DWORD PTR [esi+0x18],0xf
64007fea:	mov    DWORD PTR [esi+0x14],ebx
64007fed:	push   edi
64007fee:	mov    BYTE PTR [esi+0x4],bl
64007ff1:	call   0x64001780
64007ff6:	push   0xffffffff
64007ff8:	lea    ecx,[esi+0x1c]
64007ffb:	mov    DWORD PTR [esp+0x20],ebx
64007fff:	lea    eax,[edi+0x1c]
64008002:	push   ebx
64008003:	mov    DWORD PTR [ecx+0x18],0xf
6400800a:	mov    DWORD PTR [ecx+0x14],ebx
6400800d:	push   eax
6400800e:	mov    BYTE PTR [ecx+0x4],bl
64008011:	call   0x64001780
64008016:	mov    eax,esi
64008018:	mov    ecx,DWORD PTR [esp+0x14]
6400801c:	mov    DWORD PTR fs:0x0,ecx
64008023:	pop    ecx
64008024:	pop    edi
64008025:	pop    esi
64008026:	pop    ebx
64008027:	add    esp,0x10
6400802a:	ret    0x4
6400802d:	int3   
6400802e:	int3   
6400802f:	int3   
64008030:	push   0xffffffff
64008032:	push   0x64022a28
64008037:	mov    eax,fs:0x0
6400803d:	push   eax
6400803e:	push   ecx
6400803f:	push   ebx
64008040:	push   esi
64008041:	push   edi
64008042:	mov    eax,ds:0x6402d09c
64008047:	xor    eax,esp
64008049:	push   eax
6400804a:	lea    eax,[esp+0x14]
6400804e:	mov    fs:0x0,eax
64008054:	mov    esi,ecx
64008056:	mov    DWORD PTR [esp+0x10],esi
6400805a:	mov    ebx,DWORD PTR [esp+0x24]
6400805e:	xor    edi,edi
64008060:	push   0xffffffff
64008062:	push   edi
64008063:	mov    DWORD PTR [esi+0x18],0x7
6400806a:	mov    DWORD PTR [esi+0x14],edi
6400806d:	push   ebx
6400806e:	mov    WORD PTR [esi+0x4],di
64008072:	call   0x64006e90
64008077:	push   0xffffffff
64008079:	lea    ecx,[esi+0x1c]
6400807c:	mov    DWORD PTR [esp+0x20],edi
64008080:	lea    eax,[ebx+0x1c]
64008083:	push   edi
64008084:	mov    DWORD PTR [ecx+0x18],0x7
6400808b:	mov    DWORD PTR [ecx+0x14],edi
6400808e:	push   eax
6400808f:	mov    WORD PTR [ecx+0x4],di
64008093:	call   0x64006e90
64008098:	mov    eax,esi
6400809a:	mov    ecx,DWORD PTR [esp+0x14]
6400809e:	mov    DWORD PTR fs:0x0,ecx
640080a5:	pop    ecx
640080a6:	pop    edi
640080a7:	pop    esi
640080a8:	pop    ebx
640080a9:	add    esp,0x10
640080ac:	ret    0x4
640080af:	int3   
640080b0:	push   ebp
640080b1:	mov    ebp,esp
640080b3:	and    esp,0xfffffff8
640080b6:	push   0xffffffff
640080b8:	push   0x64022b48
640080bd:	mov    eax,fs:0x0
640080c3:	push   eax
640080c4:	sub    esp,0x50
640080c7:	push   ebx
640080c8:	push   esi
640080c9:	push   edi
640080ca:	mov    eax,ds:0x6402d09c
640080cf:	xor    eax,esp
640080d1:	push   eax
640080d2:	lea    eax,[esp+0x60]
640080d6:	mov    fs:0x0,eax
640080dc:	mov    DWORD PTR [esp+0x14],ecx
640080e0:	mov    edi,DWORD PTR [ebp+0x10]
640080e3:	cmp    BYTE PTR [edi+0x45],0x0
640080e7:	je     0x64008135
640080e9:	push   0x1b
640080eb:	xor    esi,esi
640080ed:	push   0x64028444
640080f2:	lea    ecx,[esp+0x20]
640080f6:	mov    DWORD PTR [esp+0x38],0xf
640080fe:	mov    DWORD PTR [esp+0x34],esi
64008102:	mov    BYTE PTR [esp+0x24],0x0
64008107:	call   0x64001860
6400810c:	lea    eax,[esp+0x18]
64008110:	push   eax
64008111:	lea    ecx,[esp+0x38]
64008115:	mov    DWORD PTR [esp+0x6c],esi
64008119:	call   0x64002c70
6400811e:	push   0x6402abb4
64008123:	lea    ecx,[esp+0x38]
64008127:	push   ecx
64008128:	mov    DWORD PTR [esp+0x3c],0x64025328
64008130:	call   0x640126ab
64008135:	lea    ecx,[ebp+0xc]
64008138:	call   0x640088d0
6400813d:	mov    ecx,DWORD PTR [edi]
6400813f:	cmp    BYTE PTR [ecx+0x45],0x0
64008143:	je     0x6400814a
64008145:	mov    ebx,DWORD PTR [edi+0x8]
64008148:	jmp    0x64008161
6400814a:	mov    edx,DWORD PTR [edi+0x8]
6400814d:	cmp    BYTE PTR [edx+0x45],0x0
64008151:	je     0x64008157
64008153:	mov    ebx,ecx
64008155:	jmp    0x64008161
64008157:	mov    eax,DWORD PTR [ebp+0x10]
6400815a:	cmp    eax,edi
6400815c:	mov    ebx,DWORD PTR [eax+0x8]
6400815f:	jne    0x640081dd
64008161:	cmp    BYTE PTR [ebx+0x45],0x0
64008165:	mov    esi,DWORD PTR [edi+0x4]
64008168:	jne    0x6400816d
6400816a:	mov    DWORD PTR [ebx+0x4],esi
6400816d:	mov    ecx,DWORD PTR [esp+0x14]
64008171:	mov    eax,DWORD PTR [ecx+0x4]
64008174:	cmp    DWORD PTR [eax+0x4],edi
64008177:	jne    0x6400817e
64008179:	mov    DWORD PTR [eax+0x4],ebx
6400817c:	jmp    0x64008189
6400817e:	cmp    DWORD PTR [esi],edi
64008180:	jne    0x64008186
64008182:	mov    DWORD PTR [esi],ebx
64008184:	jmp    0x64008189
64008186:	mov    DWORD PTR [esi+0x8],ebx
64008189:	mov    eax,DWORD PTR [ecx+0x4]
6400818c:	cmp    DWORD PTR [eax],edi
6400818e:	jne    0x640081ac
64008190:	cmp    BYTE PTR [ebx+0x45],0x0
64008194:	je     0x6400819a
64008196:	mov    eax,esi
64008198:	jmp    0x640081a7
6400819a:	push   ebx
6400819b:	call   0x64008830
640081a0:	mov    ecx,DWORD PTR [esp+0x18]
640081a4:	add    esp,0x4
640081a7:	mov    edx,DWORD PTR [ecx+0x4]
640081aa:	mov    DWORD PTR [edx],eax
640081ac:	mov    eax,DWORD PTR [ecx+0x4]
640081af:	cmp    DWORD PTR [eax+0x8],edi
640081b2:	jne    0x6400823c
640081b8:	cmp    BYTE PTR [ebx+0x45],0x0
640081bc:	je     0x640081c8
640081be:	mov    edx,DWORD PTR [ecx+0x4]
640081c1:	mov    eax,esi
640081c3:	mov    DWORD PTR [edx+0x8],eax
640081c6:	jmp    0x6400823c
640081c8:	push   ebx
640081c9:	call   0x640083d0
640081ce:	mov    ecx,DWORD PTR [esp+0x18]
640081d2:	mov    edx,DWORD PTR [ecx+0x4]
640081d5:	add    esp,0x4
640081d8:	mov    DWORD PTR [edx+0x8],eax
640081db:	jmp    0x6400823c
640081dd:	mov    DWORD PTR [ecx+0x4],eax
640081e0:	mov    ecx,DWORD PTR [edi]
640081e2:	mov    DWORD PTR [eax],ecx
640081e4:	cmp    eax,DWORD PTR [edi+0x8]
640081e7:	jne    0x640081ed
640081e9:	mov    esi,eax
640081eb:	jmp    0x64008207
640081ed:	cmp    BYTE PTR [ebx+0x45],0x0
640081f1:	mov    esi,DWORD PTR [eax+0x4]
640081f4:	jne    0x640081f9
640081f6:	mov    DWORD PTR [ebx+0x4],esi
640081f9:	mov    DWORD PTR [esi],ebx
640081fb:	mov    edx,DWORD PTR [edi+0x8]
640081fe:	mov    DWORD PTR [eax+0x8],edx
64008201:	mov    ecx,DWORD PTR [edi+0x8]
64008204:	mov    DWORD PTR [ecx+0x4],eax
64008207:	mov    edx,DWORD PTR [esp+0x14]
6400820b:	mov    ecx,DWORD PTR [edx+0x4]
6400820e:	cmp    DWORD PTR [ecx+0x4],edi
64008211:	jne    0x64008218
64008213:	mov    DWORD PTR [ecx+0x4],eax
64008216:	jmp    0x64008226
64008218:	mov    ecx,DWORD PTR [edi+0x4]
6400821b:	cmp    DWORD PTR [ecx],edi
6400821d:	jne    0x64008223
6400821f:	mov    DWORD PTR [ecx],eax
64008221:	jmp    0x64008226
64008223:	mov    DWORD PTR [ecx+0x8],eax
64008226:	mov    ecx,DWORD PTR [edi+0x4]
64008229:	mov    DWORD PTR [eax+0x4],ecx
6400822c:	mov    cl,BYTE PTR [eax+0x44]
6400822f:	mov    dl,BYTE PTR [edi+0x44]
64008232:	mov    BYTE PTR [eax+0x44],dl
64008235:	mov    BYTE PTR [edi+0x44],cl
64008238:	mov    ecx,DWORD PTR [esp+0x14]
6400823c:	cmp    BYTE PTR [edi+0x44],0x1
64008240:	jne    0x64008351
64008246:	mov    eax,DWORD PTR [ecx+0x4]
64008249:	cmp    ebx,DWORD PTR [eax+0x4]
6400824c:	je     0x6400834d
64008252:	cmp    BYTE PTR [ebx+0x44],0x1
64008256:	jne    0x6400834d
6400825c:	mov    eax,DWORD PTR [esi]
6400825e:	cmp    ebx,eax
64008260:	jne    0x640082d0
64008262:	mov    eax,DWORD PTR [esi+0x8]
64008265:	cmp    BYTE PTR [eax+0x44],0x0
64008269:	jne    0x64008280
6400826b:	mov    BYTE PTR [eax+0x44],0x1
6400826f:	push   esi
64008270:	mov    BYTE PTR [esi+0x44],0x0
64008274:	call   0x64007860
64008279:	mov    eax,DWORD PTR [esi+0x8]
6400827c:	mov    ecx,DWORD PTR [esp+0x14]
64008280:	cmp    BYTE PTR [eax+0x45],0x0
64008284:	jne    0x64008305
64008286:	mov    edx,DWORD PTR [eax]
64008288:	cmp    BYTE PTR [edx+0x44],0x1
6400828c:	jne    0x64008297
6400828e:	mov    edx,DWORD PTR [eax+0x8]
64008291:	cmp    BYTE PTR [edx+0x44],0x1
64008295:	je     0x64008301
64008297:	mov    edx,DWORD PTR [eax+0x8]
6400829a:	cmp    BYTE PTR [edx+0x44],0x1
6400829e:	jne    0x640082b7
640082a0:	mov    edx,DWORD PTR [eax]
640082a2:	mov    BYTE PTR [edx+0x44],0x1
640082a6:	push   eax
640082a7:	mov    BYTE PTR [eax+0x44],0x0
640082ab:	call   0x640078b0
640082b0:	mov    eax,DWORD PTR [esi+0x8]
640082b3:	mov    ecx,DWORD PTR [esp+0x14]
640082b7:	mov    dl,BYTE PTR [esi+0x44]
640082ba:	mov    BYTE PTR [eax+0x44],dl
640082bd:	mov    BYTE PTR [esi+0x44],0x1
640082c1:	mov    eax,DWORD PTR [eax+0x8]
640082c4:	push   esi
640082c5:	mov    BYTE PTR [eax+0x44],0x1
640082c9:	call   0x64007860
640082ce:	jmp    0x6400834d
640082d0:	cmp    BYTE PTR [eax+0x44],0x0
640082d4:	jne    0x640082ea
640082d6:	mov    BYTE PTR [eax+0x44],0x1
640082da:	push   esi
640082db:	mov    BYTE PTR [esi+0x44],0x0
640082df:	call   0x640078b0
640082e4:	mov    eax,DWORD PTR [esi]
640082e6:	mov    ecx,DWORD PTR [esp+0x14]
640082ea:	cmp    BYTE PTR [eax+0x45],0x0
640082ee:	jne    0x64008305
640082f0:	mov    edx,DWORD PTR [eax+0x8]
640082f3:	cmp    BYTE PTR [edx+0x44],0x1
640082f7:	jne    0x64008318
640082f9:	mov    edx,DWORD PTR [eax]
640082fb:	cmp    BYTE PTR [edx+0x44],0x1
640082ff:	jne    0x64008318
64008301:	mov    BYTE PTR [eax+0x44],0x0
64008305:	mov    eax,DWORD PTR [ecx+0x4]
64008308:	mov    ebx,esi
6400830a:	cmp    ebx,DWORD PTR [eax+0x4]
6400830d:	mov    esi,DWORD PTR [esi+0x4]
64008310:	jne    0x64008252
64008316:	jmp    0x6400834d
64008318:	mov    edx,DWORD PTR [eax]
6400831a:	cmp    BYTE PTR [edx+0x44],0x1
6400831e:	jne    0x64008337
64008320:	mov    edx,DWORD PTR [eax+0x8]
64008323:	mov    BYTE PTR [edx+0x44],0x1
64008327:	push   eax
64008328:	mov    BYTE PTR [eax+0x44],0x0
6400832c:	call   0x64007860
64008331:	mov    eax,DWORD PTR [esi]
64008333:	mov    ecx,DWORD PTR [esp+0x14]
64008337:	mov    dl,BYTE PTR [esi+0x44]
6400833a:	mov    BYTE PTR [eax+0x44],dl
6400833d:	mov    BYTE PTR [esi+0x44],0x1
64008341:	mov    eax,DWORD PTR [eax]
64008343:	push   esi
64008344:	mov    BYTE PTR [eax+0x44],0x1
64008348:	call   0x640078b0
6400834d:	mov    BYTE PTR [ebx+0x44],0x1
64008351:	cmp    DWORD PTR [edi+0x40],0x10
64008355:	jb     0x64008363
64008357:	mov    ecx,DWORD PTR [edi+0x2c]
6400835a:	push   ecx
6400835b:	call   0x64012262
64008360:	add    esp,0x4
64008363:	xor    esi,esi
64008365:	mov    ebx,0xf
6400836a:	mov    DWORD PTR [edi+0x40],ebx
6400836d:	mov    DWORD PTR [edi+0x3c],esi
64008370:	mov    BYTE PTR [edi+0x2c],0x0
64008374:	cmp    DWORD PTR [edi+0x24],0x10
64008378:	jb     0x64008386
6400837a:	mov    edx,DWORD PTR [edi+0x10]
6400837d:	push   edx
6400837e:	call   0x64012262
64008383:	add    esp,0x4
64008386:	mov    DWORD PTR [edi+0x24],ebx
64008389:	mov    DWORD PTR [edi+0x20],esi
6400838c:	push   edi
6400838d:	mov    BYTE PTR [edi+0x10],0x0
64008391:	call   0x64012262
64008396:	mov    ecx,DWORD PTR [esp+0x18]
6400839a:	mov    eax,DWORD PTR [ecx+0x8]
6400839d:	add    esp,0x4
640083a0:	cmp    eax,esi
640083a2:	jbe    0x640083aa
640083a4:	add    eax,0xffffffff
640083a7:	mov    DWORD PTR [ecx+0x8],eax
640083aa:	mov    eax,DWORD PTR [ebp+0x8]
640083ad:	mov    ecx,DWORD PTR [ebp+0xc]
640083b0:	mov    edx,DWORD PTR [ebp+0x10]
640083b3:	mov    DWORD PTR [eax],ecx
640083b5:	mov    DWORD PTR [eax+0x4],edx
640083b8:	mov    ecx,DWORD PTR [esp+0x60]
640083bc:	mov    DWORD PTR fs:0x0,ecx
640083c3:	pop    ecx
640083c4:	pop    edi
640083c5:	pop    esi
640083c6:	pop    ebx
640083c7:	mov    esp,ebp
640083c9:	pop    ebp
640083ca:	ret    0xc
640083cd:	int3   
640083ce:	int3   
640083cf:	int3   
640083d0:	mov    eax,DWORD PTR [esp+0x4]
640083d4:	mov    ecx,DWORD PTR [eax+0x8]
640083d7:	cmp    BYTE PTR [ecx+0x45],0x0
640083db:	jne    0x640083eb
640083dd:	lea    ecx,[ecx+0x0]
640083e0:	mov    eax,ecx
640083e2:	mov    ecx,DWORD PTR [eax+0x8]
640083e5:	cmp    BYTE PTR [ecx+0x45],0x0
640083e9:	je     0x640083e0
640083eb:	ret    
640083ec:	int3   
640083ed:	int3   
640083ee:	int3   
640083ef:	int3   
640083f0:	mov    ecx,DWORD PTR [esp+0x4]
640083f4:	sub    esp,0xc
640083f7:	test   ecx,ecx
640083f9:	ja     0x6400840f
640083fb:	xor    ecx,ecx
640083fd:	lea    edx,[ecx+ecx*1]
64008400:	push   edx
64008401:	call   0x64012641
64008406:	add    esp,0x4
64008409:	add    esp,0xc
6400840c:	ret    0x4
6400840f:	or     eax,0xffffffff
64008412:	xor    edx,edx
64008414:	div    ecx
64008416:	cmp    eax,0x2
64008419:	jae    0x640083fd
6400841b:	lea    eax,[esp+0x10]
6400841f:	push   eax
64008420:	lea    ecx,[esp+0x4]
64008424:	mov    DWORD PTR [esp+0x14],0x0
6400842c:	call   0x640122bd
64008431:	push   0x6402ab24
64008436:	lea    ecx,[esp+0x4]
6400843a:	push   ecx
6400843b:	mov    DWORD PTR [esp+0x8],0x64025304
64008443:	call   0x640126ab
64008448:	int3   
64008449:	int3   
6400844a:	int3   
6400844b:	int3   
6400844c:	int3   
6400844d:	int3   
6400844e:	int3   
6400844f:	int3   
64008450:	push   ebp
64008451:	mov    ebp,esp
64008453:	and    esp,0xfffffff8
64008456:	push   0xffffffff
64008458:	push   0x64022b18
6400845d:	mov    eax,fs:0x0
64008463:	push   eax
64008464:	sub    esp,0x50
64008467:	push   ebx
64008468:	push   esi
64008469:	push   edi
6400846a:	mov    eax,ds:0x6402d09c
6400846f:	xor    eax,esp
64008471:	push   eax
64008472:	lea    eax,[esp+0x60]
64008476:	mov    fs:0x0,eax
6400847c:	mov    DWORD PTR [esp+0x14],ecx
64008480:	mov    edi,DWORD PTR [ebp+0x10]
64008483:	cmp    BYTE PTR [edi+0x45],0x0
64008487:	je     0x640084d5
64008489:	push   0x1b
6400848b:	xor    esi,esi
6400848d:	push   0x64028444
64008492:	lea    ecx,[esp+0x20]
64008496:	mov    DWORD PTR [esp+0x38],0xf
6400849e:	mov    DWORD PTR [esp+0x34],esi
640084a2:	mov    BYTE PTR [esp+0x24],0x0
640084a7:	call   0x64001860
640084ac:	lea    eax,[esp+0x18]
640084b0:	push   eax
640084b1:	lea    ecx,[esp+0x38]
640084b5:	mov    DWORD PTR [esp+0x6c],esi
640084b9:	call   0x64002c70
640084be:	push   0x6402abb4
640084c3:	lea    ecx,[esp+0x38]
640084c7:	push   ecx
640084c8:	mov    DWORD PTR [esp+0x3c],0x64025328
640084d0:	call   0x640126ab
640084d5:	lea    ecx,[ebp+0xc]
640084d8:	call   0x640088d0
640084dd:	mov    ecx,DWORD PTR [edi]
640084df:	cmp    BYTE PTR [ecx+0x45],0x0
640084e3:	je     0x640084ea
640084e5:	mov    ebx,DWORD PTR [edi+0x8]
640084e8:	jmp    0x64008501
640084ea:	mov    edx,DWORD PTR [edi+0x8]
640084ed:	cmp    BYTE PTR [edx+0x45],0x0
640084f1:	je     0x640084f7
640084f3:	mov    ebx,ecx
640084f5:	jmp    0x64008501
640084f7:	mov    eax,DWORD PTR [ebp+0x10]
640084fa:	cmp    eax,edi
640084fc:	mov    ebx,DWORD PTR [eax+0x8]
640084ff:	jne    0x6400857d
64008501:	cmp    BYTE PTR [ebx+0x45],0x0
64008505:	mov    esi,DWORD PTR [edi+0x4]
64008508:	jne    0x6400850d
6400850a:	mov    DWORD PTR [ebx+0x4],esi
6400850d:	mov    ecx,DWORD PTR [esp+0x14]
64008511:	mov    eax,DWORD PTR [ecx+0x4]
64008514:	cmp    DWORD PTR [eax+0x4],edi
64008517:	jne    0x6400851e
64008519:	mov    DWORD PTR [eax+0x4],ebx
6400851c:	jmp    0x64008529
6400851e:	cmp    DWORD PTR [esi],edi
64008520:	jne    0x64008526
64008522:	mov    DWORD PTR [esi],ebx
64008524:	jmp    0x64008529
64008526:	mov    DWORD PTR [esi+0x8],ebx
64008529:	mov    eax,DWORD PTR [ecx+0x4]
6400852c:	cmp    DWORD PTR [eax],edi
6400852e:	jne    0x6400854c
64008530:	cmp    BYTE PTR [ebx+0x45],0x0
64008534:	je     0x6400853a
64008536:	mov    eax,esi
64008538:	jmp    0x64008547
6400853a:	push   ebx
6400853b:	call   0x64008830
64008540:	mov    ecx,DWORD PTR [esp+0x18]
64008544:	add    esp,0x4
64008547:	mov    edx,DWORD PTR [ecx+0x4]
6400854a:	mov    DWORD PTR [edx],eax
6400854c:	mov    eax,DWORD PTR [ecx+0x4]
6400854f:	cmp    DWORD PTR [eax+0x8],edi
64008552:	jne    0x640085dc
64008558:	cmp    BYTE PTR [ebx+0x45],0x0
6400855c:	je     0x64008568
6400855e:	mov    edx,DWORD PTR [ecx+0x4]
64008561:	mov    eax,esi
64008563:	mov    DWORD PTR [edx+0x8],eax
64008566:	jmp    0x640085dc
64008568:	push   ebx
64008569:	call   0x640083d0
6400856e:	mov    ecx,DWORD PTR [esp+0x18]
64008572:	mov    edx,DWORD PTR [ecx+0x4]
64008575:	add    esp,0x4
64008578:	mov    DWORD PTR [edx+0x8],eax
6400857b:	jmp    0x640085dc
6400857d:	mov    DWORD PTR [ecx+0x4],eax
64008580:	mov    ecx,DWORD PTR [edi]
64008582:	mov    DWORD PTR [eax],ecx
64008584:	cmp    eax,DWORD PTR [edi+0x8]
64008587:	jne    0x6400858d
64008589:	mov    esi,eax
6400858b:	jmp    0x640085a7
6400858d:	cmp    BYTE PTR [ebx+0x45],0x0
64008591:	mov    esi,DWORD PTR [eax+0x4]
64008594:	jne    0x64008599
64008596:	mov    DWORD PTR [ebx+0x4],esi
64008599:	mov    DWORD PTR [esi],ebx
6400859b:	mov    edx,DWORD PTR [edi+0x8]
6400859e:	mov    DWORD PTR [eax+0x8],edx
640085a1:	mov    ecx,DWORD PTR [edi+0x8]
640085a4:	mov    DWORD PTR [ecx+0x4],eax
640085a7:	mov    edx,DWORD PTR [esp+0x14]
640085ab:	mov    ecx,DWORD PTR [edx+0x4]
640085ae:	cmp    DWORD PTR [ecx+0x4],edi
640085b1:	jne    0x640085b8
640085b3:	mov    DWORD PTR [ecx+0x4],eax
640085b6:	jmp    0x640085c6
640085b8:	mov    ecx,DWORD PTR [edi+0x4]
640085bb:	cmp    DWORD PTR [ecx],edi
640085bd:	jne    0x640085c3
640085bf:	mov    DWORD PTR [ecx],eax
640085c1:	jmp    0x640085c6
640085c3:	mov    DWORD PTR [ecx+0x8],eax
640085c6:	mov    ecx,DWORD PTR [edi+0x4]
640085c9:	mov    DWORD PTR [eax+0x4],ecx
640085cc:	mov    cl,BYTE PTR [eax+0x44]
640085cf:	mov    dl,BYTE PTR [edi+0x44]
640085d2:	mov    BYTE PTR [eax+0x44],dl
640085d5:	mov    BYTE PTR [edi+0x44],cl
640085d8:	mov    ecx,DWORD PTR [esp+0x14]
640085dc:	cmp    BYTE PTR [edi+0x44],0x1
640085e0:	jne    0x640086f1
640085e6:	mov    eax,DWORD PTR [ecx+0x4]
640085e9:	cmp    ebx,DWORD PTR [eax+0x4]
640085ec:	je     0x640086ed
640085f2:	cmp    BYTE PTR [ebx+0x44],0x1
640085f6:	jne    0x640086ed
640085fc:	mov    eax,DWORD PTR [esi]
640085fe:	cmp    ebx,eax
64008600:	jne    0x64008670
64008602:	mov    eax,DWORD PTR [esi+0x8]
64008605:	cmp    BYTE PTR [eax+0x44],0x0
64008609:	jne    0x64008620
6400860b:	mov    BYTE PTR [eax+0x44],0x1
6400860f:	push   esi
64008610:	mov    BYTE PTR [esi+0x44],0x0
64008614:	call   0x64007860
64008619:	mov    eax,DWORD PTR [esi+0x8]
6400861c:	mov    ecx,DWORD PTR [esp+0x14]
64008620:	cmp    BYTE PTR [eax+0x45],0x0
64008624:	jne    0x640086a5
64008626:	mov    edx,DWORD PTR [eax]
64008628:	cmp    BYTE PTR [edx+0x44],0x1
6400862c:	jne    0x64008637
6400862e:	mov    edx,DWORD PTR [eax+0x8]
64008631:	cmp    BYTE PTR [edx+0x44],0x1
64008635:	je     0x640086a1
64008637:	mov    edx,DWORD PTR [eax+0x8]
6400863a:	cmp    BYTE PTR [edx+0x44],0x1
6400863e:	jne    0x64008657
64008640:	mov    edx,DWORD PTR [eax]
64008642:	mov    BYTE PTR [edx+0x44],0x1
64008646:	push   eax
64008647:	mov    BYTE PTR [eax+0x44],0x0
6400864b:	call   0x640078b0
64008650:	mov    eax,DWORD PTR [esi+0x8]
64008653:	mov    ecx,DWORD PTR [esp+0x14]
64008657:	mov    dl,BYTE PTR [esi+0x44]
6400865a:	mov    BYTE PTR [eax+0x44],dl
6400865d:	mov    BYTE PTR [esi+0x44],0x1
64008661:	mov    eax,DWORD PTR [eax+0x8]
64008664:	push   esi
64008665:	mov    BYTE PTR [eax+0x44],0x1
64008669:	call   0x64007860
6400866e:	jmp    0x640086ed
64008670:	cmp    BYTE PTR [eax+0x44],0x0
64008674:	jne    0x6400868a
64008676:	mov    BYTE PTR [eax+0x44],0x1
6400867a:	push   esi
6400867b:	mov    BYTE PTR [esi+0x44],0x0
6400867f:	call   0x640078b0
64008684:	mov    eax,DWORD PTR [esi]
64008686:	mov    ecx,DWORD PTR [esp+0x14]
6400868a:	cmp    BYTE PTR [eax+0x45],0x0
6400868e:	jne    0x640086a5
64008690:	mov    edx,DWORD PTR [eax+0x8]
64008693:	cmp    BYTE PTR [edx+0x44],0x1
64008697:	jne    0x640086b8
64008699:	mov    edx,DWORD PTR [eax]
6400869b:	cmp    BYTE PTR [edx+0x44],0x1
6400869f:	jne    0x640086b8
640086a1:	mov    BYTE PTR [eax+0x44],0x0
640086a5:	mov    eax,DWORD PTR [ecx+0x4]
640086a8:	mov    ebx,esi
640086aa:	cmp    ebx,DWORD PTR [eax+0x4]
640086ad:	mov    esi,DWORD PTR [esi+0x4]
640086b0:	jne    0x640085f2
640086b6:	jmp    0x640086ed
640086b8:	mov    edx,DWORD PTR [eax]
640086ba:	cmp    BYTE PTR [edx+0x44],0x1
640086be:	jne    0x640086d7
640086c0:	mov    edx,DWORD PTR [eax+0x8]
640086c3:	mov    BYTE PTR [edx+0x44],0x1
640086c7:	push   eax
640086c8:	mov    BYTE PTR [eax+0x44],0x0
640086cc:	call   0x64007860
640086d1:	mov    eax,DWORD PTR [esi]
640086d3:	mov    ecx,DWORD PTR [esp+0x14]
640086d7:	mov    dl,BYTE PTR [esi+0x44]
640086da:	mov    BYTE PTR [eax+0x44],dl
640086dd:	mov    BYTE PTR [esi+0x44],0x1
640086e1:	mov    eax,DWORD PTR [eax]
640086e3:	push   esi
640086e4:	mov    BYTE PTR [eax+0x44],0x1
640086e8:	call   0x640078b0
640086ed:	mov    BYTE PTR [ebx+0x44],0x1
640086f1:	cmp    DWORD PTR [edi+0x40],0x8
640086f5:	jb     0x64008703
640086f7:	mov    ecx,DWORD PTR [edi+0x2c]
640086fa:	push   ecx
640086fb:	call   0x64012262
64008700:	add    esp,0x4
64008703:	xor    esi,esi
64008705:	mov    ebx,0x7
6400870a:	mov    DWORD PTR [edi+0x40],ebx
6400870d:	mov    DWORD PTR [edi+0x3c],esi
64008710:	mov    WORD PTR [edi+0x2c],si
64008714:	cmp    DWORD PTR [edi+0x24],0x8
64008718:	jb     0x64008726
6400871a:	mov    edx,DWORD PTR [edi+0x10]
6400871d:	push   edx
6400871e:	call   0x64012262
64008723:	add    esp,0x4
64008726:	mov    DWORD PTR [edi+0x24],ebx
64008729:	mov    DWORD PTR [edi+0x20],esi
6400872c:	push   edi
6400872d:	mov    WORD PTR [edi+0x10],si
64008731:	call   0x64012262
64008736:	mov    ecx,DWORD PTR [esp+0x18]
6400873a:	mov    eax,DWORD PTR [ecx+0x8]
6400873d:	add    esp,0x4
64008740:	cmp    eax,esi
64008742:	jbe    0x6400874a
64008744:	add    eax,0xffffffff
64008747:	mov    DWORD PTR [ecx+0x8],eax
6400874a:	mov    eax,DWORD PTR [ebp+0x8]
6400874d:	mov    ecx,DWORD PTR [ebp+0xc]
64008750:	mov    edx,DWORD PTR [ebp+0x10]
64008753:	mov    DWORD PTR [eax],ecx
64008755:	mov    DWORD PTR [eax+0x4],edx
64008758:	mov    ecx,DWORD PTR [esp+0x60]
6400875c:	mov    DWORD PTR fs:0x0,ecx
64008763:	pop    ecx
64008764:	pop    edi
64008765:	pop    esi
64008766:	pop    ebx
64008767:	mov    esp,ebp
64008769:	pop    ebp
6400876a:	ret    0xc
6400876d:	int3   
6400876e:	int3   
6400876f:	int3   
64008770:	push   0x48
64008772:	call   0x64012641
64008777:	add    esp,0x4
6400877a:	test   eax,eax
6400877c:	je     0x64008784
6400877e:	mov    DWORD PTR [eax],0x0
64008784:	lea    ecx,[eax+0x4]
64008787:	test   ecx,ecx
64008789:	je     0x64008791
6400878b:	mov    DWORD PTR [ecx],0x0
64008791:	lea    ecx,[eax+0x8]
64008794:	test   ecx,ecx
64008796:	je     0x6400879e
64008798:	mov    DWORD PTR [ecx],0x0
6400879e:	mov    BYTE PTR [eax+0x44],0x1
640087a2:	mov    BYTE PTR [eax+0x45],0x0
640087a6:	ret    
640087a7:	int3   
640087a8:	int3   
640087a9:	int3   
640087aa:	int3   
640087ab:	int3   
640087ac:	int3   
640087ad:	int3   
640087ae:	int3   
640087af:	int3   
640087b0:	push   ecx
640087b1:	push   ebx
640087b2:	push   esi
640087b3:	mov    esi,DWORD PTR [esp+0x10]
640087b7:	xor    ebx,ebx
640087b9:	cmp    BYTE PTR [esi+0x45],bl
640087bc:	push   edi
640087bd:	mov    DWORD PTR [esp+0xc],ecx
640087c1:	mov    edi,esi
640087c3:	jne    0x64008826
640087c5:	push   ebp
640087c6:	lea    ebp,[ebx+0xf]
640087c9:	lea    esp,[esp+0x0]
640087d0:	mov    eax,DWORD PTR [edi+0x8]
640087d3:	mov    ecx,DWORD PTR [esp+0x10]
640087d7:	push   eax
640087d8:	call   0x640087b0
640087dd:	cmp    DWORD PTR [esi+0x40],0x10
640087e1:	mov    edi,DWORD PTR [edi]
640087e3:	jb     0x640087f1
640087e5:	mov    ecx,DWORD PTR [esi+0x2c]
640087e8:	push   ecx
640087e9:	call   0x64012262
640087ee:	add    esp,0x4
640087f1:	mov    DWORD PTR [esi+0x40],ebp
640087f4:	mov    DWORD PTR [esi+0x3c],ebx
640087f7:	mov    BYTE PTR [esi+0x2c],bl
640087fa:	cmp    DWORD PTR [esi+0x24],0x10
640087fe:	jb     0x6400880c
64008800:	mov    edx,DWORD PTR [esi+0x10]
64008803:	push   edx
64008804:	call   0x64012262
64008809:	add    esp,0x4
6400880c:	mov    DWORD PTR [esi+0x24],ebp
6400880f:	mov    DWORD PTR [esi+0x20],ebx
64008812:	push   esi
64008813:	mov    BYTE PTR [esi+0x10],bl
64008816:	call   0x64012262
6400881b:	add    esp,0x4
6400881e:	cmp    BYTE PTR [edi+0x45],bl
64008821:	mov    esi,edi
64008823:	je     0x640087d0
64008825:	pop    ebp
64008826:	pop    edi
64008827:	pop    esi
64008828:	pop    ebx
64008829:	pop    ecx
6400882a:	ret    0x4
6400882d:	int3   
6400882e:	int3   
6400882f:	int3   
64008830:	mov    eax,DWORD PTR [esp+0x4]
64008834:	mov    ecx,DWORD PTR [eax]
64008836:	cmp    BYTE PTR [ecx+0x45],0x0
6400883a:	jne    0x6400884a
6400883c:	lea    esp,[esp+0x0]
64008840:	mov    eax,ecx
64008842:	mov    ecx,DWORD PTR [eax]
64008844:	cmp    BYTE PTR [ecx+0x45],0x0
64008848:	je     0x64008840
6400884a:	ret    
6400884b:	int3   
6400884c:	int3   
6400884d:	int3   
6400884e:	int3   
6400884f:	int3   
64008850:	push   ecx
64008851:	push   ebx
64008852:	push   esi
64008853:	mov    esi,DWORD PTR [esp+0x10]
64008857:	xor    ebx,ebx
64008859:	cmp    BYTE PTR [esi+0x45],bl
6400885c:	push   edi
6400885d:	mov    DWORD PTR [esp+0xc],ecx
64008861:	mov    edi,esi
64008863:	jne    0x640088c8
64008865:	push   ebp
64008866:	lea    ebp,[ebx+0x7]
64008869:	lea    esp,[esp+0x0]
64008870:	mov    eax,DWORD PTR [edi+0x8]
64008873:	mov    ecx,DWORD PTR [esp+0x10]
64008877:	push   eax
64008878:	call   0x64008850
6400887d:	cmp    DWORD PTR [esi+0x40],0x8
64008881:	mov    edi,DWORD PTR [edi]
64008883:	jb     0x64008891
64008885:	mov    ecx,DWORD PTR [esi+0x2c]
64008888:	push   ecx
64008889:	call   0x64012262
6400888e:	add    esp,0x4
64008891:	mov    DWORD PTR [esi+0x40],ebp
64008894:	mov    DWORD PTR [esi+0x3c],ebx
64008897:	mov    WORD PTR [esi+0x2c],bx
6400889b:	cmp    DWORD PTR [esi+0x24],0x8
6400889f:	jb     0x640088ad
640088a1:	mov    edx,DWORD PTR [esi+0x10]
640088a4:	push   edx
640088a5:	call   0x64012262
640088aa:	add    esp,0x4
640088ad:	mov    DWORD PTR [esi+0x24],ebp
640088b0:	mov    DWORD PTR [esi+0x20],ebx
640088b3:	push   esi
640088b4:	mov    WORD PTR [esi+0x10],bx
640088b8:	call   0x64012262
640088bd:	add    esp,0x4
640088c0:	cmp    BYTE PTR [edi+0x45],bl
640088c3:	mov    esi,edi
640088c5:	je     0x64008870
640088c7:	pop    ebp
640088c8:	pop    edi
640088c9:	pop    esi
640088ca:	pop    ebx
640088cb:	pop    ecx
640088cc:	ret    0x4
640088cf:	int3   
640088d0:	push   esi
640088d1:	mov    esi,ecx
640088d3:	cmp    DWORD PTR [esi],0x0
640088d6:	jne    0x640088dd
640088d8:	call   0x64012618
640088dd:	mov    eax,DWORD PTR [esi+0x4]
640088e0:	cmp    BYTE PTR [eax+0x45],0x0
640088e4:	je     0x640088ec
640088e6:	pop    esi
640088e7:	jmp    0x64012618
640088ec:	mov    ecx,DWORD PTR [eax+0x8]
640088ef:	cmp    BYTE PTR [ecx+0x45],0x0
640088f3:	jne    0x6400890f
640088f5:	mov    eax,DWORD PTR [ecx]
640088f7:	cmp    BYTE PTR [eax+0x45],0x0
640088fb:	jne    0x6400890a
640088fd:	lea    ecx,[ecx+0x0]
64008900:	mov    ecx,eax
64008902:	mov    eax,DWORD PTR [ecx]
64008904:	cmp    BYTE PTR [eax+0x45],0x0
64008908:	je     0x64008900
6400890a:	mov    DWORD PTR [esi+0x4],ecx
6400890d:	pop    esi
6400890e:	ret    
6400890f:	mov    eax,DWORD PTR [eax+0x4]
64008912:	cmp    BYTE PTR [eax+0x45],0x0
64008916:	jne    0x6400892e
64008918:	mov    ecx,DWORD PTR [esi+0x4]
6400891b:	cmp    ecx,DWORD PTR [eax+0x8]
6400891e:	jne    0x6400892e
64008920:	mov    DWORD PTR [esi+0x4],eax
64008923:	mov    edx,eax
64008925:	mov    eax,DWORD PTR [edx+0x4]
64008928:	cmp    BYTE PTR [eax+0x45],0x0
6400892c:	je     0x64008918
6400892e:	mov    DWORD PTR [esi+0x4],eax
64008931:	pop    esi
64008932:	ret    
64008933:	int3   
64008934:	int3   
64008935:	int3   
64008936:	int3   
64008937:	int3   
64008938:	int3   
64008939:	int3   
6400893a:	int3   
6400893b:	int3   
6400893c:	int3   
6400893d:	int3   
6400893e:	int3   
6400893f:	int3   
64008940:	push   0xffffffff
64008942:	push   0x640226d8
64008947:	mov    eax,fs:0x0
6400894d:	push   eax
6400894e:	sub    esp,0x20
64008951:	push   ebx
64008952:	push   ebp
64008953:	mov    eax,ds:0x6402d09c
64008958:	xor    eax,esp
6400895a:	push   eax
6400895b:	lea    eax,[esp+0x2c]
6400895f:	mov    fs:0x0,eax
64008965:	mov    eax,DWORD PTR [esp+0x3c]
64008969:	xor    ebx,ebx
6400896b:	push   0xffffffff
6400896d:	push   ebx
6400896e:	push   eax
6400896f:	lea    ecx,[esp+0x1c]
64008973:	mov    DWORD PTR [esp+0x18],ebx
64008977:	mov    DWORD PTR [esp+0x34],0xf
6400897f:	mov    DWORD PTR [esp+0x30],ebx
64008983:	mov    BYTE PTR [esp+0x20],bl
64008987:	call   0x64001780
6400898c:	mov    eax,edi
6400898e:	mov    DWORD PTR [esp+0x34],ebx
64008992:	lea    ebp,[eax+0x1]
64008995:	mov    cl,BYTE PTR [eax]
64008997:	add    eax,0x1
6400899a:	cmp    cl,bl
6400899c:	jne    0x64008995
6400899e:	sub    eax,ebp
640089a0:	push   eax
640089a1:	push   edi
640089a2:	lea    eax,[esp+0x18]
640089a6:	call   0x64008dc0
640089ab:	push   0xffffffff
640089ad:	push   ebx
640089ae:	mov    DWORD PTR [esi+0x18],0xf
640089b5:	mov    DWORD PTR [esi+0x14],ebx
640089b8:	push   eax
640089b9:	mov    ecx,esi
640089bb:	mov    BYTE PTR [esi+0x4],bl
640089be:	call   0x64001780
640089c3:	cmp    DWORD PTR [esp+0x28],0x10
640089c8:	jb     0x640089d7
640089ca:	mov    ecx,DWORD PTR [esp+0x14]
640089ce:	push   ecx
640089cf:	call   0x64012262
640089d4:	add    esp,0x4
640089d7:	mov    eax,esi
640089d9:	mov    ecx,DWORD PTR [esp+0x2c]
640089dd:	mov    DWORD PTR fs:0x0,ecx
640089e4:	pop    ecx
640089e5:	pop    ebp
640089e6:	pop    ebx
640089e7:	add    esp,0x2c
640089ea:	ret    
640089eb:	int3   
640089ec:	int3   
640089ed:	int3   
640089ee:	int3   
640089ef:	int3   
640089f0:	push   0xffffffff
640089f2:	push   0x640226b0
640089f7:	mov    eax,fs:0x0
640089fd:	push   eax
640089fe:	push   ecx
640089ff:	push   esi
64008a00:	mov    eax,ds:0x6402d09c
64008a05:	xor    eax,esp
64008a07:	push   eax
64008a08:	lea    eax,[esp+0xc]
64008a0c:	mov    fs:0x0,eax
64008a12:	mov    esi,DWORD PTR [esp+0x1c]
64008a16:	mov    DWORD PTR [esp+0x8],0x0
64008a1e:	lea    eax,[esp+0x3c]
64008a22:	push   eax
64008a23:	lea    ecx,[esp+0x24]
64008a27:	push   ecx
64008a28:	mov    ecx,esi
64008a2a:	mov    DWORD PTR [esp+0x1c],0x1
64008a32:	call   0x64008c30
64008a37:	cmp    DWORD PTR [esp+0x38],0x10
64008a3c:	jb     0x64008a4b
64008a3e:	mov    edx,DWORD PTR [esp+0x24]
64008a42:	push   edx
64008a43:	call   0x64012262
64008a48:	add    esp,0x4
64008a4b:	cmp    DWORD PTR [esp+0x54],0x10
64008a50:	mov    DWORD PTR [esp+0x38],0xf
64008a58:	mov    DWORD PTR [esp+0x34],0x0
64008a60:	mov    BYTE PTR [esp+0x24],0x0
64008a65:	jb     0x64008a74
64008a67:	mov    eax,DWORD PTR [esp+0x40]
64008a6b:	push   eax
64008a6c:	call   0x64012262
64008a71:	add    esp,0x4
64008a74:	mov    eax,esi
64008a76:	mov    ecx,DWORD PTR [esp+0xc]
64008a7a:	mov    DWORD PTR fs:0x0,ecx
64008a81:	pop    ecx
64008a82:	pop    esi
64008a83:	add    esp,0x10
64008a86:	ret    
64008a87:	int3   
64008a88:	int3   
64008a89:	int3   
64008a8a:	int3   
64008a8b:	int3   
64008a8c:	int3   
64008a8d:	int3   
64008a8e:	int3   
64008a8f:	int3   
64008a90:	push   0xffffffff
64008a92:	push   0x64022678
64008a97:	mov    eax,fs:0x0
64008a9d:	push   eax
64008a9e:	push   ecx
64008a9f:	push   ebx
64008aa0:	push   esi
64008aa1:	push   edi
64008aa2:	mov    eax,ds:0x6402d09c
64008aa7:	xor    eax,esp
64008aa9:	push   eax
64008aaa:	lea    eax,[esp+0x14]
64008aae:	mov    fs:0x0,eax
64008ab4:	mov    esi,ecx
64008ab6:	mov    DWORD PTR [esp+0x10],esi
64008aba:	mov    edi,DWORD PTR [esp+0x24]
64008abe:	xor    ebx,ebx
64008ac0:	push   0xffffffff
64008ac2:	push   ebx
64008ac3:	mov    DWORD PTR [esi+0x18],0xf
64008aca:	mov    DWORD PTR [esi+0x14],ebx
64008acd:	push   edi
64008ace:	mov    BYTE PTR [esi+0x4],bl
64008ad1:	call   0x64001780
64008ad6:	push   0xffffffff
64008ad8:	lea    ecx,[esi+0x1c]
64008adb:	mov    DWORD PTR [esp+0x20],ebx
64008adf:	lea    eax,[edi+0x1c]
64008ae2:	push   ebx
64008ae3:	mov    DWORD PTR [ecx+0x18],0xf
64008aea:	mov    DWORD PTR [ecx+0x14],ebx
64008aed:	push   eax
64008aee:	mov    BYTE PTR [ecx+0x4],bl
64008af1:	call   0x64001780
64008af6:	mov    eax,esi
64008af8:	mov    ecx,DWORD PTR [esp+0x14]
64008afc:	mov    DWORD PTR fs:0x0,ecx
64008b03:	pop    ecx
64008b04:	pop    edi
64008b05:	pop    esi
64008b06:	pop    ebx
64008b07:	add    esp,0x10
64008b0a:	ret    0x4
64008b0d:	int3   
64008b0e:	int3   
64008b0f:	int3   
64008b10:	push   0xffffffff
64008b12:	push   0x64022a00
64008b17:	mov    eax,fs:0x0
64008b1d:	push   eax
64008b1e:	push   ecx
64008b1f:	push   esi
64008b20:	mov    eax,ds:0x6402d09c
64008b25:	xor    eax,esp
64008b27:	push   eax
64008b28:	lea    eax,[esp+0xc]
64008b2c:	mov    fs:0x0,eax
64008b32:	mov    esi,DWORD PTR [esp+0x1c]
64008b36:	mov    DWORD PTR [esp+0x8],0x0
64008b3e:	lea    eax,[esp+0x3c]
64008b42:	push   eax
64008b43:	lea    ecx,[esp+0x24]
64008b47:	push   ecx
64008b48:	mov    ecx,esi
64008b4a:	mov    DWORD PTR [esp+0x1c],0x1
64008b52:	call   0x64008cb0
64008b57:	cmp    DWORD PTR [esp+0x38],0x8
64008b5c:	jb     0x64008b6b
64008b5e:	mov    edx,DWORD PTR [esp+0x24]
64008b62:	push   edx
64008b63:	call   0x64012262
64008b68:	add    esp,0x4
64008b6b:	cmp    DWORD PTR [esp+0x54],0x8
64008b70:	mov    DWORD PTR [esp+0x38],0x7
64008b78:	mov    DWORD PTR [esp+0x34],0x0
64008b80:	mov    WORD PTR [esp+0x24],0x0
64008b87:	jb     0x64008b96
64008b89:	mov    eax,DWORD PTR [esp+0x40]
64008b8d:	push   eax
64008b8e:	call   0x64012262
64008b93:	add    esp,0x4
64008b96:	mov    eax,esi
64008b98:	mov    ecx,DWORD PTR [esp+0xc]
64008b9c:	mov    DWORD PTR fs:0x0,ecx
64008ba3:	pop    ecx
64008ba4:	pop    esi
64008ba5:	add    esp,0x10
64008ba8:	ret    
64008ba9:	int3   
64008baa:	int3   
64008bab:	int3   
64008bac:	int3   
64008bad:	int3   
64008bae:	int3   
64008baf:	int3   
64008bb0:	push   0xffffffff
64008bb2:	push   0x640229c8
64008bb7:	mov    eax,fs:0x0
64008bbd:	push   eax
64008bbe:	push   ecx
64008bbf:	push   ebx
64008bc0:	push   esi
64008bc1:	push   edi
64008bc2:	mov    eax,ds:0x6402d09c
64008bc7:	xor    eax,esp
64008bc9:	push   eax
64008bca:	lea    eax,[esp+0x14]
64008bce:	mov    fs:0x0,eax
64008bd4:	mov    esi,ecx
64008bd6:	mov    DWORD PTR [esp+0x10],esi
64008bda:	mov    ebx,DWORD PTR [esp+0x24]
64008bde:	xor    edi,edi
64008be0:	push   0xffffffff
64008be2:	push   edi
64008be3:	mov    DWORD PTR [esi+0x18],0x7
64008bea:	mov    DWORD PTR [esi+0x14],edi
64008bed:	push   ebx
64008bee:	mov    WORD PTR [esi+0x4],di
64008bf2:	call   0x64006e90
64008bf7:	push   0xffffffff
64008bf9:	lea    ecx,[esi+0x1c]
64008bfc:	mov    DWORD PTR [esp+0x20],edi
64008c00:	lea    eax,[ebx+0x1c]
64008c03:	push   edi
64008c04:	mov    DWORD PTR [ecx+0x18],0x7
64008c0b:	mov    DWORD PTR [ecx+0x14],edi
64008c0e:	push   eax
64008c0f:	mov    WORD PTR [ecx+0x4],di
64008c13:	call   0x64006e90
64008c18:	mov    eax,esi
64008c1a:	mov    ecx,DWORD PTR [esp+0x14]
64008c1e:	mov    DWORD PTR fs:0x0,ecx
64008c25:	pop    ecx
64008c26:	pop    edi
64008c27:	pop    esi
64008c28:	pop    ebx
64008c29:	add    esp,0x10
64008c2c:	ret    0x4
64008c2f:	int3   
64008c30:	push   0xffffffff
64008c32:	push   0x64022648
64008c37:	mov    eax,fs:0x0
64008c3d:	push   eax
64008c3e:	push   ecx
64008c3f:	push   ebx
64008c40:	push   esi
64008c41:	mov    eax,ds:0x6402d09c
64008c46:	xor    eax,esp
64008c48:	push   eax
64008c49:	lea    eax,[esp+0x10]
64008c4d:	mov    fs:0x0,eax
64008c53:	mov    esi,ecx
64008c55:	mov    DWORD PTR [esp+0xc],esi
64008c59:	mov    eax,DWORD PTR [esp+0x20]
64008c5d:	xor    ebx,ebx
64008c5f:	push   0xffffffff
64008c61:	push   ebx
64008c62:	mov    DWORD PTR [esi+0x18],0xf
64008c69:	mov    DWORD PTR [esi+0x14],ebx
64008c6c:	push   eax
64008c6d:	mov    BYTE PTR [esi+0x4],bl
64008c70:	call   0x64001780
64008c75:	mov    edx,DWORD PTR [esp+0x24]
64008c79:	push   0xffffffff
64008c7b:	lea    ecx,[esi+0x1c]
64008c7e:	mov    DWORD PTR [esp+0x1c],ebx
64008c82:	push   ebx
64008c83:	mov    DWORD PTR [ecx+0x18],0xf
64008c8a:	mov    DWORD PTR [ecx+0x14],ebx
64008c8d:	push   edx
64008c8e:	mov    BYTE PTR [ecx+0x4],bl
64008c91:	call   0x64001780
64008c96:	mov    eax,esi
64008c98:	mov    ecx,DWORD PTR [esp+0x10]
64008c9c:	mov    DWORD PTR fs:0x0,ecx
64008ca3:	pop    ecx
64008ca4:	pop    esi
64008ca5:	pop    ebx
64008ca6:	add    esp,0x10
64008ca9:	ret    0x8
64008cac:	int3   
64008cad:	int3   
64008cae:	int3   
64008caf:	int3   
64008cb0:	push   0xffffffff
64008cb2:	push   0x64022998
64008cb7:	mov    eax,fs:0x0
64008cbd:	push   eax
64008cbe:	push   ecx
64008cbf:	push   esi
64008cc0:	push   edi
64008cc1:	mov    eax,ds:0x6402d09c
64008cc6:	xor    eax,esp
64008cc8:	push   eax
64008cc9:	lea    eax,[esp+0x10]
64008ccd:	mov    fs:0x0,eax
64008cd3:	mov    esi,ecx
64008cd5:	mov    DWORD PTR [esp+0xc],esi
64008cd9:	mov    eax,DWORD PTR [esp+0x20]
64008cdd:	xor    edi,edi
64008cdf:	push   0xffffffff
64008ce1:	push   edi
64008ce2:	mov    DWORD PTR [esi+0x18],0x7
64008ce9:	mov    DWORD PTR [esi+0x14],edi
64008cec:	push   eax
64008ced:	mov    WORD PTR [esi+0x4],di
64008cf1:	call   0x64006e90
64008cf6:	mov    edx,DWORD PTR [esp+0x24]
64008cfa:	push   0xffffffff
64008cfc:	lea    ecx,[esi+0x1c]
64008cff:	mov    DWORD PTR [esp+0x1c],edi
64008d03:	push   edi
64008d04:	mov    DWORD PTR [ecx+0x18],0x7
64008d0b:	mov    DWORD PTR [ecx+0x14],edi
64008d0e:	push   edx
64008d0f:	mov    WORD PTR [ecx+0x4],di
64008d13:	call   0x64006e90
64008d18:	mov    eax,esi
64008d1a:	mov    ecx,DWORD PTR [esp+0x10]
64008d1e:	mov    DWORD PTR fs:0x0,ecx
64008d25:	pop    ecx
64008d26:	pop    edi
64008d27:	pop    esi
64008d28:	add    esp,0x10
64008d2b:	ret    0x8
64008d2e:	int3   
64008d2f:	int3   
64008d30:	push   ebx
64008d31:	push   ebp
64008d32:	push   esi
64008d33:	push   edi
64008d34:	mov    edi,DWORD PTR [esp+0x14]
64008d38:	mov    esi,ecx
64008d3a:	cmp    DWORD PTR [esi+0x14],edi
64008d3d:	jae    0x64008d44
64008d3f:	call   0x6401221e
64008d44:	mov    eax,DWORD PTR [esi+0x14]
64008d47:	mov    ebx,DWORD PTR [esp+0x18]
64008d4b:	sub    eax,edi
64008d4d:	cmp    eax,ebx
64008d4f:	jae    0x64008d53
64008d51:	mov    ebx,eax
64008d53:	mov    ebp,DWORD PTR [esp+0x20]
64008d57:	cmp    ebx,ebp
64008d59:	mov    edx,ebx
64008d5b:	jb     0x64008d5f
64008d5d:	mov    edx,ebp
64008d5f:	cmp    DWORD PTR [esi+0x18],0x8
64008d63:	jb     0x64008d6a
64008d65:	mov    eax,DWORD PTR [esi+0x4]
64008d68:	jmp    0x64008d6d
64008d6a:	lea    eax,[esi+0x4]
64008d6d:	test   edx,edx
64008d6f:	mov    ecx,DWORD PTR [esp+0x1c]
64008d73:	lea    eax,[eax+edi*2]
64008d76:	jbe    0x64008d9d
64008d78:	mov    si,WORD PTR [eax]
64008d7b:	cmp    si,WORD PTR [ecx]
64008d7e:	jne    0x64008d8d
64008d80:	add    eax,0x2
64008d83:	add    ecx,0x2
64008d86:	sub    edx,0x1
64008d89:	jne    0x64008d78
64008d8b:	jmp    0x64008d9d
64008d8d:	movzx  eax,WORD PTR [eax]
64008d90:	cmp    ax,WORD PTR [ecx]
64008d93:	sbb    eax,eax
64008d95:	and    eax,0xfffffffe
64008d98:	add    eax,0x1
64008d9b:	jne    0x64008db2
64008d9d:	cmp    ebx,ebp
64008d9f:	jae    0x64008dab
64008da1:	pop    edi
64008da2:	pop    esi
64008da3:	pop    ebp
64008da4:	or     eax,0xffffffff
64008da7:	pop    ebx
64008da8:	ret    0x10
64008dab:	xor    eax,eax
64008dad:	cmp    ebx,ebp
64008daf:	setne  al
64008db2:	pop    edi
64008db3:	pop    esi
64008db4:	pop    ebp
64008db5:	pop    ebx
64008db6:	ret    0x10
64008db9:	int3   
64008dba:	int3   
64008dbb:	int3   
64008dbc:	int3   
64008dbd:	int3   
64008dbe:	int3   
64008dbf:	int3   
64008dc0:	mov    ecx,DWORD PTR [esp+0x4]
64008dc4:	push   ebx
64008dc5:	push   ebp
64008dc6:	mov    ebp,DWORD PTR [esp+0x10]
64008dca:	push   esi
64008dcb:	mov    esi,eax
64008dcd:	mov    edx,DWORD PTR [esi+0x18]
64008dd0:	cmp    edx,0x10
64008dd3:	push   edi
64008dd4:	lea    ebx,[esi+0x4]
64008dd7:	jb     0x64008ddd
64008dd9:	mov    eax,DWORD PTR [ebx]
64008ddb:	jmp    0x64008ddf
64008ddd:	mov    eax,ebx
64008ddf:	cmp    ecx,eax
64008de1:	jb     0x64008e10
64008de3:	cmp    edx,0x10
64008de6:	jb     0x64008dec
64008de8:	mov    eax,DWORD PTR [ebx]
64008dea:	jmp    0x64008dee
64008dec:	mov    eax,ebx
64008dee:	mov    edi,DWORD PTR [esi+0x14]
64008df1:	add    edi,eax
64008df3:	cmp    edi,ecx
64008df5:	jbe    0x64008e10
64008df7:	cmp    edx,0x10
64008dfa:	jb     0x64008dfe
64008dfc:	mov    ebx,DWORD PTR [ebx]
64008dfe:	sub    ecx,ebx
64008e00:	push   ecx
64008e01:	push   esi
64008e02:	mov    eax,ebp
64008e04:	call   0x640019d0
64008e09:	pop    edi
64008e0a:	pop    esi
64008e0b:	pop    ebp
64008e0c:	pop    ebx
64008e0d:	ret    0x8
64008e10:	mov    eax,DWORD PTR [esi+0x14]
64008e13:	or     ecx,0xffffffff
64008e16:	sub    ecx,eax
64008e18:	cmp    ecx,ebp
64008e1a:	jbe    0x64008e23
64008e1c:	lea    edx,[eax+ebp*1]
64008e1f:	cmp    edx,eax
64008e21:	jae    0x64008e28
64008e23:	call   0x640121df
64008e28:	test   ebp,ebp
64008e2a:	jbe    0x64008ea0
64008e2c:	mov    edi,DWORD PTR [esi+0x14]
64008e2f:	add    edi,ebp
64008e31:	cmp    edi,0xfffffffe
64008e34:	jbe    0x64008e3b
64008e36:	call   0x640121df
64008e3b:	mov    eax,DWORD PTR [esi+0x18]
64008e3e:	cmp    eax,edi
64008e40:	jae    0x64008e5e
64008e42:	mov    eax,DWORD PTR [esi+0x14]
64008e45:	push   eax
64008e46:	push   edi
64008e47:	mov    ecx,esi
64008e49:	call   0x64001b60
64008e4e:	test   edi,edi
64008e50:	jbe    0x64008ea0
64008e52:	mov    eax,DWORD PTR [esi+0x18]
64008e55:	cmp    eax,0x10
64008e58:	jb     0x64008e78
64008e5a:	mov    edx,DWORD PTR [ebx]
64008e5c:	jmp    0x64008e7a
64008e5e:	test   edi,edi
64008e60:	jne    0x64008e50
64008e62:	cmp    eax,0x10
64008e65:	mov    DWORD PTR [esi+0x14],edi
64008e68:	jb     0x64008e6c
64008e6a:	mov    ebx,DWORD PTR [ebx]
64008e6c:	pop    edi
64008e6d:	mov    eax,esi
64008e6f:	pop    esi
64008e70:	pop    ebp
64008e71:	mov    BYTE PTR [ebx],0x0
64008e74:	pop    ebx
64008e75:	ret    0x8
64008e78:	mov    edx,ebx
64008e7a:	mov    ecx,DWORD PTR [esi+0x14]
64008e7d:	push   ebp
64008e7e:	mov    ebp,DWORD PTR [esp+0x18]
64008e82:	sub    eax,ecx
64008e84:	push   ebp
64008e85:	push   eax
64008e86:	add    ecx,edx
64008e88:	push   ecx
64008e89:	call   0x64012418
64008e8e:	add    esp,0x10
64008e91:	cmp    DWORD PTR [esi+0x18],0x10
64008e95:	mov    DWORD PTR [esi+0x14],edi
64008e98:	jb     0x64008e9c
64008e9a:	mov    ebx,DWORD PTR [ebx]
64008e9c:	mov    BYTE PTR [ebx+edi*1],0x0
64008ea0:	pop    edi
64008ea1:	mov    eax,esi
64008ea3:	pop    esi
64008ea4:	pop    ebp
64008ea5:	pop    ebx
64008ea6:	ret    0x8
64008ea9:	int3   
64008eaa:	int3   
64008eab:	int3   
64008eac:	int3   
64008ead:	int3   
64008eae:	int3   
64008eaf:	int3   
64008eb0:	push   ebp
64008eb1:	mov    ebp,DWORD PTR [esp+0x14]
64008eb5:	push   esi
64008eb6:	mov    esi,DWORD PTR [esp+0x10]
64008eba:	push   edi
64008ebb:	mov    edi,DWORD PTR [esp+0x10]
64008ebf:	nop
64008ec0:	test   edi,edi
64008ec2:	je     0x64008eca
64008ec4:	cmp    edi,DWORD PTR [esp+0x18]
64008ec8:	je     0x64008ecf
64008eca:	call   0x64012618
64008ecf:	cmp    esi,ebp
64008ed1:	je     0x64008f2b
64008ed3:	add    DWORD PTR [ebx],0x1
64008ed6:	test   edi,edi
64008ed8:	jne    0x64008edf
64008eda:	call   0x64012618
64008edf:	cmp    BYTE PTR [esi+0x29],0x0
64008ee3:	je     0x64008eec
64008ee5:	call   0x64012618
64008eea:	jmp    0x64008ec0
64008eec:	mov    ecx,DWORD PTR [esi+0x8]
64008eef:	cmp    BYTE PTR [ecx+0x29],0x0
64008ef3:	jne    0x64008f0e
64008ef5:	mov    eax,DWORD PTR [ecx]
64008ef7:	cmp    BYTE PTR [eax+0x29],0x0
64008efb:	jne    0x64008f0a
64008efd:	lea    ecx,[ecx+0x0]
64008f00:	mov    ecx,eax
64008f02:	mov    eax,DWORD PTR [ecx]
64008f04:	cmp    BYTE PTR [eax+0x29],0x0
64008f08:	je     0x64008f00
64008f0a:	mov    esi,ecx
64008f0c:	jmp    0x64008ec0
64008f0e:	mov    eax,DWORD PTR [esi+0x4]
64008f11:	cmp    BYTE PTR [eax+0x29],0x0
64008f15:	jne    0x64008f27
64008f17:	cmp    esi,DWORD PTR [eax+0x8]
64008f1a:	jne    0x64008f27
64008f1c:	mov    esi,eax
64008f1e:	mov    eax,DWORD PTR [eax+0x4]
64008f21:	cmp    BYTE PTR [eax+0x29],0x0
64008f25:	je     0x64008f17
64008f27:	mov    esi,eax
64008f29:	jmp    0x64008ec0
64008f2b:	pop    edi
64008f2c:	pop    esi
64008f2d:	pop    ebp
64008f2e:	ret    
64008f2f:	int3   
64008f30:	push   esi
64008f31:	mov    esi,ecx
64008f33:	call   0x6400c860
64008f38:	call   eax
64008f3a:	mov    DWORD PTR [esi],eax
64008f3c:	mov    eax,esi
64008f3e:	pop    esi
64008f3f:	ret    
64008f40:	mov    eax,DWORD PTR [ecx]
64008f42:	push   eax
64008f43:	call   0x6400c940
64008f48:	call   eax
64008f4a:	ret    
64008f4b:	int3   
64008f4c:	int3   
64008f4d:	int3   
64008f4e:	int3   
64008f4f:	int3   
64008f50:	push   ebp
64008f51:	mov    ebp,esp
64008f53:	and    esp,0xfffffff8
64008f56:	push   0xffffffff
64008f58:	push   0x640236d0
64008f5d:	mov    eax,fs:0x0
64008f63:	push   eax
64008f64:	sub    esp,0x68
64008f67:	mov    eax,ds:0x6402d09c
64008f6c:	xor    eax,esp
64008f6e:	mov    DWORD PTR [esp+0x60],eax
64008f72:	push   ebx
64008f73:	push   esi
64008f74:	push   edi
64008f75:	mov    eax,ds:0x6402d09c
64008f7a:	xor    eax,esp
64008f7c:	push   eax
64008f7d:	lea    eax,[esp+0x78]
64008f81:	mov    fs:0x0,eax
64008f87:	mov    eax,DWORD PTR [ebp+0x14]
64008f8a:	mov    ebx,DWORD PTR [ebp+0xc]
64008f8d:	mov    DWORD PTR [esp+0x1c],ecx
64008f91:	mov    DWORD PTR [esp+0x18],eax
64008f95:	call   DWORD PTR ds:0x6402505c
64008f9b:	lea    ecx,[esp+0x44]
64008f9f:	push   ecx
64008fa0:	mov    DWORD PTR [esp+0x24],eax
64008fa4:	call   DWORD PTR ds:0x640251dc
64008faa:	xor    edi,edi
64008fac:	mov    DWORD PTR [esp+0x6c],0xf
64008fb4:	mov    DWORD PTR [esp+0x68],edi
64008fb8:	mov    BYTE PTR [esp+0x58],0x0
64008fbd:	mov    ecx,DWORD PTR [ebp+0x10]
64008fc0:	mov    eax,0x8d3dcb09
64008fc5:	mul    ecx
64008fc7:	mov    esi,edx
64008fc9:	shr    esi,0x8
64008fcc:	lea    eax,[esi+0x1]
64008fcf:	cmp    eax,edi
64008fd1:	mov    DWORD PTR [esp+0x80],edi
64008fd8:	mov    BYTE PTR [esp+0x13],0x1
64008fdd:	je     0x640090a3
64008fe3:	mov    edx,0x1d0
64008fe8:	sub    edx,ebx
64008fea:	mov    DWORD PTR [esp+0x14],ebx
64008fee:	mov    DWORD PTR [esp+0x24],edx
64008ff2:	mov    eax,DWORD PTR [esp+0x14]
64008ff6:	add    eax,edx
64008ff8:	cmp    eax,ecx
64008ffa:	jb     0x640090f6
64009000:	mov    eax,esi
64009002:	imul   eax,eax,0x1d0
64009008:	mov    ebx,ecx
6400900a:	sub    ebx,eax
6400900c:	test   ebx,ebx
6400900e:	je     0x6400908b
64009010:	or     ecx,0xffffffff
64009013:	cmp    DWORD PTR [ebp+0x18],ecx
64009016:	je     0x6400902f
64009018:	call   DWORD PTR ds:0x6402505c
6400901e:	sub    eax,DWORD PTR [esp+0x20]
64009022:	mov    ecx,DWORD PTR [ebp+0x18]
64009025:	cmp    eax,ecx
64009027:	ja     0x64009100
6400902d:	sub    ecx,eax
6400902f:	mov    edx,DWORD PTR [esp+0x44]
64009033:	sub    esp,0x10
64009036:	mov    eax,esp
64009038:	mov    DWORD PTR [eax],edx
6400903a:	mov    edx,DWORD PTR [esp+0x58]
6400903e:	mov    DWORD PTR [eax+0x4],edx
64009041:	mov    edx,DWORD PTR [esp+0x5c]
64009045:	mov    DWORD PTR [eax+0x8],edx
64009048:	mov    edx,DWORD PTR [esp+0x60]
6400904c:	mov    DWORD PTR [eax+0xc],edx
6400904f:	mov    edx,DWORD PTR [esp+0x24]
64009053:	test   edi,edi
64009055:	setne  al
64009058:	cmp    edi,esi
6400905a:	push   eax
6400905b:	mov    eax,DWORD PTR [ebp+0x8]
6400905e:	push   ecx
6400905f:	setb   cl
64009062:	push   ecx
64009063:	mov    ecx,DWORD PTR [esp+0x38]
64009067:	push   edi
64009068:	push   ebx
64009069:	push   edx
6400906a:	push   eax
6400906b:	push   ecx
6400906c:	lea    edx,[esp+0x43]
64009070:	lea    ecx,[esp+0x84]
64009077:	call   0x64009290
6400907c:	test   al,al
6400907e:	je     0x6400911b
64009084:	mov    ecx,DWORD PTR [ebp+0x10]
64009087:	mov    edx,DWORD PTR [esp+0x24]
6400908b:	add    DWORD PTR [esp+0x14],0x1d0
64009093:	add    edi,0x1
64009096:	lea    eax,[esi+0x1]
64009099:	cmp    edi,eax
6400909b:	jne    0x64008ff2
640090a1:	xor    edi,edi
640090a3:	mov    esi,DWORD PTR [esp+0x18]
640090a7:	push   edi
640090a8:	lea    ecx,[esp+0x58]
640090ac:	push   ecx
640090ad:	or     eax,0xffffffff
640090b0:	call   0x640019d0
640090b5:	cmp    BYTE PTR [esp+0x13],0x0
640090ba:	je     0x6400924b
640090c0:	mov    DWORD PTR [esp+0x14],0xfffffffe
640090c8:	jmp    0x640090d0
640090ca:	lea    ebx,[ebx+0x0]
640090d0:	mov    esi,0xf
640090d5:	mov    DWORD PTR [esp+0x40],esi
640090d9:	mov    DWORD PTR [esp+0x3c],edi
640090dd:	mov    BYTE PTR [esp+0x2c],0x0
640090e2:	mov    ebx,DWORD PTR [ebp+0x18]
640090e5:	cmp    ebx,0xffffffff
640090e8:	mov    BYTE PTR [esp+0x80],0x1
640090f0:	jne    0x64009136
640090f2:	or     ecx,ebx
640090f4:	jmp    0x6400914c
640090f6:	mov    ebx,0x1d0
640090fb:	jmp    0x64009010
64009100:	cmp    DWORD PTR [esp+0x6c],0x10
64009105:	jb     0x64009114
64009107:	mov    edx,DWORD PTR [esp+0x58]
6400910b:	push   edx
6400910c:	call   0x64012262
64009111:	add    esp,0x4
64009114:	xor    al,al
64009116:	jmp    0x64009261
6400911b:	cmp    DWORD PTR [esp+0x6c],0x10
64009120:	jb     0x64009114
64009122:	mov    eax,DWORD PTR [esp+0x58]
64009126:	push   eax
64009127:	call   0x64012262
6400912c:	add    esp,0x4
6400912f:	xor    al,al
64009131:	jmp    0x64009261
64009136:	call   DWORD PTR ds:0x6402505c
6400913c:	sub    eax,DWORD PTR [esp+0x20]
64009140:	cmp    eax,ebx
64009142:	ja     0x640091db
64009148:	mov    ecx,ebx
6400914a:	sub    ecx,eax
6400914c:	mov    edx,DWORD PTR [esp+0x44]
64009150:	sub    esp,0x10
64009153:	mov    eax,esp
64009155:	mov    DWORD PTR [eax],edx
64009157:	mov    edx,DWORD PTR [esp+0x58]
6400915b:	mov    DWORD PTR [eax+0x4],edx
6400915e:	mov    edx,DWORD PTR [esp+0x5c]
64009162:	push   0x1
64009164:	push   ecx
64009165:	mov    ecx,DWORD PTR [ebp+0x8]
64009168:	mov    DWORD PTR [eax+0x8],edx
6400916b:	mov    edx,DWORD PTR [esp+0x68]
6400916f:	push   edi
64009170:	mov    DWORD PTR [eax+0xc],edx
64009173:	mov    eax,DWORD PTR [esp+0x30]
64009177:	mov    edx,DWORD PTR [esp+0x38]
6400917b:	push   eax
6400917c:	push   edi
6400917d:	push   edi
6400917e:	push   ecx
6400917f:	push   edx
64009180:	lea    edx,[esp+0x43]
64009184:	lea    ecx,[esp+0x58]
64009188:	call   0x64009290
6400918d:	test   al,al
6400918f:	je     0x64009209
64009191:	cmp    DWORD PTR [esp+0x3c],edi
64009195:	je     0x64009237
6400919b:	mov    esi,DWORD PTR [esp+0x18]
6400919f:	push   edi
640091a0:	lea    eax,[esp+0x2c]
640091a4:	push   eax
640091a5:	or     eax,0xffffffff
640091a8:	call   0x640019d0
640091ad:	mov    BYTE PTR [esp+0x80],0x0
640091b5:	cmp    DWORD PTR [esp+0x40],0x10
640091ba:	jb     0x640091c9
640091bc:	mov    ecx,DWORD PTR [esp+0x2c]
640091c0:	push   ecx
640091c1:	call   0x64012262
640091c6:	add    esp,0x4
640091c9:	sub    DWORD PTR [esp+0x14],0x1
640091ce:	cmp    BYTE PTR [esp+0x13],0x0
640091d3:	jne    0x640090d0
640091d9:	jmp    0x6400924b
640091db:	mov    ebx,0x10
640091e0:	cmp    DWORD PTR [esp+0x40],ebx
640091e4:	jb     0x640091f3
640091e6:	mov    edx,DWORD PTR [esp+0x2c]
640091ea:	push   edx
640091eb:	call   0x64012262
640091f0:	add    esp,0x4
640091f3:	cmp    DWORD PTR [esp+0x6c],ebx
640091f7:	mov    DWORD PTR [esp+0x40],esi
640091fb:	mov    DWORD PTR [esp+0x3c],edi
640091ff:	mov    BYTE PTR [esp+0x2c],0x0
64009204:	jmp    0x64009120
64009209:	mov    ebx,0x10
6400920e:	cmp    DWORD PTR [esp+0x40],ebx
64009212:	jb     0x64009221
64009214:	mov    ecx,DWORD PTR [esp+0x2c]
64009218:	push   ecx
64009219:	call   0x64012262
6400921e:	add    esp,0x4
64009221:	cmp    DWORD PTR [esp+0x6c],ebx
64009225:	mov    DWORD PTR [esp+0x40],esi
64009229:	mov    DWORD PTR [esp+0x3c],edi
6400922d:	mov    BYTE PTR [esp+0x2c],0x0
64009232:	jmp    0x64009105
64009237:	cmp    DWORD PTR [esp+0x40],0x10
6400923c:	jb     0x6400924b
6400923e:	mov    eax,DWORD PTR [esp+0x2c]
64009242:	push   eax
64009243:	call   0x64012262
64009248:	add    esp,0x4
6400924b:	cmp    DWORD PTR [esp+0x6c],0x10
64009250:	jb     0x6400925f
64009252:	mov    ecx,DWORD PTR [esp+0x58]
64009256:	push   ecx
64009257:	call   0x64012262
6400925c:	add    esp,0x4
6400925f:	mov    al,0x1
64009261:	mov    ecx,DWORD PTR [esp+0x78]
64009265:	mov    DWORD PTR fs:0x0,ecx
6400926c:	pop    ecx
6400926d:	pop    edi
6400926e:	pop    esi
6400926f:	pop    ebx
64009270:	mov    ecx,DWORD PTR [esp+0x60]
64009274:	xor    ecx,esp
64009276:	call   0x64012abc
6400927b:	mov    esp,ebp
6400927d:	pop    ebp
6400927e:	ret    0x14
64009281:	int3   
64009282:	int3   
64009283:	int3   
64009284:	int3   
64009285:	int3   
64009286:	int3   
64009287:	int3   
64009288:	int3   
64009289:	int3   
6400928a:	int3   
6400928b:	int3   
6400928c:	int3   
6400928d:	int3   
6400928e:	int3   
6400928f:	int3   
64009290:	push   0xffffffff
64009292:	push   0x6402368c
64009297:	mov    eax,fs:0x0
6400929d:	push   eax
6400929e:	mov    eax,0x10074
640092a3:	call   0x640183b0
640092a8:	mov    eax,ds:0x6402d09c
640092ad:	xor    eax,esp
640092af:	mov    DWORD PTR [esp+0x10070],eax
640092b6:	push   ebx
640092b7:	push   ebp
640092b8:	push   esi
640092b9:	push   edi
640092ba:	mov    eax,ds:0x6402d09c
640092bf:	xor    eax,esp
640092c1:	push   eax
640092c2:	lea    eax,[esp+0x10088]
640092c9:	mov    fs:0x0,eax
640092cf:	mov    eax,DWORD PTR [esp+0x10098]
640092d6:	mov    esi,DWORD PTR [esp+0x100a0]
640092dd:	mov    ebp,DWORD PTR ds:0x640251c0
640092e3:	mov    DWORD PTR [esp+0x18],eax
640092e7:	mov    eax,DWORD PTR [esp+0x100b8]
640092ee:	mov    DWORD PTR [esp+0x2c],ecx
640092f2:	mov    ecx,DWORD PTR [esp+0x100bc]
640092f9:	mov    DWORD PTR [esp+0x28],edx
640092fd:	mov    edx,DWORD PTR [esp+0x100c0]
64009304:	mov    DWORD PTR [esp+0x54],eax
64009308:	mov    eax,DWORD PTR [esp+0x100c4]
6400930f:	xor    ebx,ebx
64009311:	mov    DWORD PTR [esp+0x1c],esi
64009315:	mov    DWORD PTR [esp+0x58],ecx
64009319:	mov    DWORD PTR [esp+0x5c],edx
6400931d:	mov    DWORD PTR [esp+0x60],eax
64009321:	mov    BYTE PTR [esp+0x17],bl
64009325:	xor    edi,edi
64009327:	jmp    0x64009330
64009329:	lea    esp,[esp+0x0]
64009330:	mov    DWORD PTR [esp+0x50],0xf
64009338:	mov    DWORD PTR [esp+0x4c],ebx
6400933c:	mov    BYTE PTR [esp+0x3c],bl
64009340:	mov    DWORD PTR [esp+0x10090],ebx
64009347:	mov    edx,DWORD PTR [esp+0x58]
6400934b:	mov    eax,DWORD PTR [esp+0x5c]
6400934f:	mov    ecx,DWORD PTR [esp+0x54]
64009353:	mov    DWORD PTR [esp+0x70],eax
64009357:	mov    eax,DWORD PTR [esp+0x100a8]
6400935e:	mov    DWORD PTR [esp+0x68],ecx
64009362:	mov    ecx,DWORD PTR [esp+0x60]
64009366:	mov    DWORD PTR [esp+0x6c],edx
6400936a:	mov    dl,BYTE PTR [esp+0x100ac]
64009371:	push   eax
64009372:	mov    DWORD PTR [esp+0x78],ecx
64009376:	mov    DWORD PTR [esp+0x7c],eax
6400937a:	mov    DWORD PTR [esp+0x80],edi
64009381:	mov    BYTE PTR [esp+0x84],dl
64009388:	call   ebp
6400938a:	mov    DWORD PTR [esp+0x78],eax
6400938e:	mov    eax,DWORD PTR [esp+0x7c]
64009392:	push   eax
64009393:	call   ebp
64009395:	push   0x19
64009397:	lea    ecx,[esp+0x6c]
6400939b:	mov    DWORD PTR [esp+0x80],eax
640093a2:	push   ecx
640093a3:	lea    eax,[esp+0x40]
640093a7:	call   0x64008dc0
640093ac:	cmp    esi,ebx
640093ae:	je     0x640093c2
640093b0:	mov    edx,DWORD PTR [esp+0x100a4]
640093b7:	push   edx
640093b8:	push   esi
640093b9:	lea    eax,[esp+0x40]
640093bd:	call   0x64008dc0
640093c2:	cmp    DWORD PTR [esp+0x50],0x10
640093c7:	mov    eax,DWORD PTR [esp+0x3c]
640093cb:	jae    0x640093d1
640093cd:	lea    eax,[esp+0x3c]
640093d1:	mov    ecx,DWORD PTR [esp+0x4c]
640093d5:	push   ecx
640093d6:	push   eax
640093d7:	lea    ecx,[esp+0x2c]
640093db:	lea    ebx,[esp+0x38]
640093df:	call   0x6400c550
640093e4:	mov    edx,DWORD PTR [eax]
640093e6:	mov    esi,edx
640093e8:	mov    DWORD PTR [eax],0x0
640093ee:	mov    DWORD PTR [esp+0x28],esi
640093f2:	mov    BYTE PTR [esp+0x10098],0x1
640093fa:	mov    eax,DWORD PTR [esp+0x38]
640093fe:	push   eax
640093ff:	call   0x64012262
64009404:	add    esp,0xc
64009407:	lea    ecx,[esp+0x34]
6400940b:	push   0x0
6400940d:	push   ecx
6400940e:	mov    DWORD PTR [esp+0x3c],0x0
64009416:	call   0x6400d9e0
6400941b:	call   eax
6400941d:	test   eax,eax
6400941f:	je     0x640094ae
64009425:	mov    eax,DWORD PTR [esp+0x100b0]
6400942c:	cmp    eax,0x1388
64009431:	jb     0x64009438
64009433:	mov    eax,0x1388
64009438:	mov    ecx,DWORD PTR [esp+0x1009c]
6400943f:	push   eax
64009440:	mov    eax,DWORD PTR [esp+0x28]
64009444:	push   0xffff
64009449:	lea    edx,[esp+0x8c]
64009450:	push   edx
64009451:	mov    edx,DWORD PTR [esp+0x24]
64009455:	push   0x0
64009457:	push   eax
64009458:	mov    eax,DWORD PTR [edx]
6400945a:	push   esi
6400945b:	push   ecx
6400945c:	push   eax
6400945d:	call   0x6400c780
64009462:	call   eax
64009464:	mov    ebx,eax
64009466:	test   ebx,ebx
64009468:	jne    0x640094b1
6400946a:	push   esi
6400946b:	call   0x64012262
64009470:	add    esp,0x4
64009473:	cmp    BYTE PTR [esp+0x100b4],bl
6400947a:	mov    DWORD PTR [esp+0x10090],0xffffffff
64009485:	je     0x640094d3
64009487:	cmp    DWORD PTR [esp+0x50],0x10
6400948c:	jb     0x6400949b
6400948e:	mov    ecx,DWORD PTR [esp+0x3c]
64009492:	push   ecx
64009493:	call   0x64012262
64009498:	add    esp,0x4
6400949b:	add    edi,0x1
6400949e:	cmp    edi,0x5
640094a1:	je     0x640094e7
640094a3:	mov    esi,DWORD PTR [esp+0x1c]
640094a7:	xor    ebx,ebx
640094a9:	jmp    0x64009330
640094ae:	or     ebx,0xffffffff
640094b1:	push   esi
640094b2:	call   0x64012262
640094b7:	add    esp,0x4
640094ba:	mov    DWORD PTR [esp+0x10090],0xffffffff
640094c5:	cmp    DWORD PTR [esp+0x50],0x10
640094ca:	jb     0x640094e7
640094cc:	mov    edx,DWORD PTR [esp+0x3c]
640094d0:	push   edx
640094d1:	jmp    0x640094df
640094d3:	cmp    DWORD PTR [esp+0x50],0x10
640094d8:	jb     0x640094e7
640094da:	mov    eax,DWORD PTR [esp+0x3c]
640094de:	push   eax
640094df:	call   0x64012262
640094e4:	add    esp,0x4
640094e7:	test   ebx,ebx
640094e9:	je     0x6400968f
640094ef:	mov    ax,WORD PTR [esp+0x90]
640094f7:	test   ax,ax
640094fa:	je     0x64009683
64009500:	lea    ecx,[esp+0x24]
64009504:	push   ecx
64009505:	lea    edx,[esp+0xa4]
6400950c:	movzx  ebx,ax
6400950f:	push   edx
64009510:	lea    edi,[esp+0x24]
64009514:	call   0x6400c680
64009519:	mov    ecx,DWORD PTR [eax]
6400951b:	mov    ebp,ecx
6400951d:	xor    ebx,ebx
6400951f:	mov    DWORD PTR [eax],ebx
64009521:	mov    DWORD PTR [esp+0x28],ebp
64009525:	mov    DWORD PTR [esp+0x10098],0x2
64009530:	mov    edx,DWORD PTR [esp+0x24]
64009534:	push   edx
64009535:	call   0x64012262
6400953a:	add    esp,0xc
6400953d:	cmp    ebp,ebx
6400953f:	je     0x64009672
64009545:	mov    eax,DWORD PTR [ebp+0x10]
64009548:	push   eax
64009549:	call   DWORD PTR ds:0x640251c4
6400954f:	cmp    BYTE PTR [esp+0x100ac],bl
64009556:	mov    DWORD PTR [esp+0x18],eax
6400955a:	mov    DWORD PTR [ebp+0x10],eax
6400955d:	jne    0x6400956f
6400955f:	cmp    DWORD PTR [esp+0x100a8],ebx
64009566:	jle    0x6400956f
64009568:	mov    DWORD PTR [esp+0x100a8],ebx
6400956f:	mov    ecx,0x10
64009574:	lea    edx,[esp+0x54]
64009578:	mov    esi,ebp
6400957a:	lea    ebx,[ebx+0x0]
64009580:	mov    eax,DWORD PTR [esi]
64009582:	cmp    eax,DWORD PTR [edx]
64009584:	jne    0x64009598
64009586:	sub    ecx,0x4
64009589:	add    edx,0x4
6400958c:	add    esi,0x4
6400958f:	cmp    ecx,0x4
64009592:	jae    0x64009580
64009594:	cmp    ecx,ebx
64009596:	je     0x640095f5
64009598:	movzx  edi,BYTE PTR [esi]
6400959b:	movzx  eax,BYTE PTR [edx]
6400959e:	sub    edi,eax
640095a0:	jne    0x640095e7
640095a2:	sub    ecx,0x1
640095a5:	add    edx,0x1
640095a8:	add    esi,0x1
640095ab:	cmp    ecx,ebx
640095ad:	je     0x640095f5
640095af:	movzx  edi,BYTE PTR [esi]
640095b2:	movzx  eax,BYTE PTR [edx]
640095b5:	sub    edi,eax
640095b7:	jne    0x640095e7
640095b9:	sub    ecx,0x1
640095bc:	add    edx,0x1
640095bf:	add    esi,0x1
640095c2:	cmp    ecx,ebx
640095c4:	je     0x640095f5
640095c6:	movzx  edi,BYTE PTR [esi]
640095c9:	movzx  eax,BYTE PTR [edx]
640095cc:	sub    edi,eax
640095ce:	jne    0x640095e7
640095d0:	sub    ecx,0x1
640095d3:	add    edx,0x1
640095d6:	add    esi,0x1
640095d9:	cmp    ecx,ebx
640095db:	je     0x640095f5
640095dd:	movzx  edi,BYTE PTR [esi]
640095e0:	movzx  ecx,BYTE PTR [edx]
640095e3:	sub    edi,ecx
640095e5:	je     0x640095f5
640095e7:	cmp    edi,ebx
640095e9:	mov    ecx,0x1
640095ee:	jg     0x640095f7
640095f0:	or     ecx,0xffffffff
640095f3:	jmp    0x640095f7
640095f5:	xor    ecx,ecx
640095f7:	cmp    ecx,ebx
640095f9:	jne    0x64009672
640095fb:	mov    edx,DWORD PTR [esp+0x100a8]
64009602:	cmp    DWORD PTR [esp+0x18],edx
64009606:	jne    0x64009672
64009608:	mov    al,BYTE PTR [ebp+0x14]
6400960b:	mov    ecx,DWORD PTR [esp+0x28]
6400960f:	mov    BYTE PTR [ecx],al
64009611:	mov    eax,DWORD PTR [esp+0x24]
64009615:	add    eax,0xffffffeb
64009618:	push   eax
64009619:	lea    edx,[ebp+0x15]
6400961c:	push   edx
6400961d:	lea    ecx,[esp+0x40]
64009621:	mov    DWORD PTR [esp+0x58],0xf
64009629:	mov    DWORD PTR [esp+0x54],ebx
6400962d:	mov    BYTE PTR [esp+0x44],bl
64009631:	call   0x64001860
64009636:	mov    ecx,DWORD PTR [esp+0x2c]
6400963a:	push   0xffffffff
6400963c:	push   ebx
6400963d:	lea    eax,[esp+0x40]
64009641:	push   eax
64009642:	mov    BYTE PTR [esp+0x1009c],0x3
6400964a:	call   0x64001780
6400964f:	cmp    DWORD PTR [esp+0x50],0x10
64009654:	jb     0x64009663
64009656:	mov    ecx,DWORD PTR [esp+0x3c]
6400965a:	push   ecx
6400965b:	call   0x64012262
64009660:	add    esp,0x4
64009663:	push   ebp
64009664:	mov    bl,0x1
64009666:	call   0x64012262
6400966b:	add    esp,0x4
6400966e:	mov    al,bl
64009670:	jmp    0x64009693
64009672:	mov    bl,BYTE PTR [esp+0x17]
64009676:	push   ebp
64009677:	call   0x64012262
6400967c:	add    esp,0x4
6400967f:	mov    al,bl
64009681:	jmp    0x64009693
64009683:	cmp    BYTE PTR [esp+0x100ac],0x0
6400968b:	mov    al,0x1
6400968d:	jne    0x64009693
6400968f:	mov    al,BYTE PTR [esp+0x17]
64009693:	mov    ecx,DWORD PTR [esp+0x10088]
6400969a:	mov    DWORD PTR fs:0x0,ecx
640096a1:	pop    ecx
640096a2:	pop    edi
640096a3:	pop    esi
640096a4:	pop    ebp
640096a5:	pop    ebx
640096a6:	mov    ecx,DWORD PTR [esp+0x10070]
640096ad:	xor    ecx,esp
640096af:	call   0x64012abc
640096b4:	add    esp,0x10080
640096ba:	ret    0x30
640096bd:	int3   
640096be:	int3   
640096bf:	int3   
640096c0:	push   0xffffffff
640096c2:	push   0x640224eb
640096c7:	mov    eax,fs:0x0
640096cd:	push   eax
640096ce:	push   ecx
640096cf:	push   esi
640096d0:	mov    eax,ds:0x6402d09c
640096d5:	xor    eax,esp
640096d7:	push   eax
640096d8:	lea    eax,[esp+0xc]
640096dc:	mov    fs:0x0,eax
640096e2:	push   0xc
640096e4:	call   0x64012641
640096e9:	mov    esi,eax
640096eb:	add    esp,0x4
640096ee:	mov    DWORD PTR [esp+0x8],esi
640096f2:	test   esi,esi
640096f4:	mov    DWORD PTR [esp+0x14],0x0
640096fc:	je     0x6400971a
640096fe:	mov    eax,DWORD PTR [esp+0x1c]
64009702:	push   eax
64009703:	mov    DWORD PTR [esi+0x4],0x0
6400970a:	mov    DWORD PTR [esi+0x8],0x1
64009711:	call   0x6401ea90
64009716:	mov    DWORD PTR [esi],eax
64009718:	jmp    0x6400971c
6400971a:	xor    esi,esi
6400971c:	test   esi,esi
6400971e:	mov    DWORD PTR [esp+0x14],0xffffffff
64009726:	mov    DWORD PTR [ebx],esi
64009728:	jne    0x64009734
6400972a:	push   0x8007000e
6400972f:	call   0x6401ec20
64009734:	mov    eax,ebx
64009736:	mov    ecx,DWORD PTR [esp+0xc]
6400973a:	mov    DWORD PTR fs:0x0,ecx
64009741:	pop    ecx
64009742:	pop    esi
64009743:	add    esp,0x10
64009746:	ret    0x4
64009749:	int3   
6400974a:	int3   
6400974b:	int3   
6400974c:	int3   
6400974d:	int3   
6400974e:	int3   
6400974f:	int3   
64009750:	push   0xffffffff
64009752:	push   0x640224bb
64009757:	mov    eax,fs:0x0
6400975d:	push   eax
6400975e:	push   ebp
6400975f:	push   esi
64009760:	mov    eax,ds:0x6402d09c
64009765:	xor    eax,esp
64009767:	push   eax
64009768:	lea    eax,[esp+0xc]
6400976c:	mov    fs:0x0,eax
64009772:	mov    ebp,DWORD PTR [esp+0x1c]
64009776:	push   0xc
64009778:	call   0x64012641
6400977d:	mov    esi,eax
6400977f:	add    esp,0x4
64009782:	mov    DWORD PTR [esp+0x1c],esi
64009786:	test   esi,esi
64009788:	mov    DWORD PTR [esp+0x14],0x0
64009790:	je     0x640097bd
64009792:	push   edi
64009793:	mov    DWORD PTR [esi+0x4],0x0
6400979a:	mov    DWORD PTR [esi+0x8],0x1
640097a1:	call   DWORD PTR ds:0x64025188
640097a7:	test   eax,eax
640097a9:	mov    DWORD PTR [esi],eax
640097ab:	jne    0x640097bf
640097ad:	test   edi,edi
640097af:	je     0x640097bf
640097b1:	push   0x8007000e
640097b6:	call   0x6401ec20
640097bb:	jmp    0x640097bf
640097bd:	xor    esi,esi
640097bf:	test   esi,esi
640097c1:	mov    DWORD PTR [esp+0x14],0xffffffff
640097c9:	mov    DWORD PTR [ebp+0x0],esi
640097cc:	jne    0x640097d8
640097ce:	push   0x8007000e
640097d3:	call   0x6401ec20
640097d8:	mov    eax,ebp
640097da:	mov    ecx,DWORD PTR [esp+0xc]
640097de:	mov    DWORD PTR fs:0x0,ecx
640097e5:	pop    ecx
640097e6:	pop    esi
640097e7:	pop    ebp
640097e8:	add    esp,0xc
640097eb:	ret    0x4
640097ee:	int3   
640097ef:	int3   
640097f0:	push   esi
640097f1:	mov    esi,DWORD PTR [edi]
640097f3:	test   esi,esi
640097f5:	je     0x64009835
640097f7:	lea    eax,[esi+0x8]
640097fa:	push   eax
640097fb:	call   DWORD PTR ds:0x64025094
64009801:	test   eax,eax
64009803:	jne    0x6400982f
64009805:	test   esi,esi
64009807:	je     0x6400982f
64009809:	mov    eax,DWORD PTR [esi]
6400980b:	test   eax,eax
6400980d:	je     0x64009816
6400980f:	push   eax
64009810:	call   DWORD PTR ds:0x640251a4
64009816:	mov    eax,DWORD PTR [esi+0x4]
64009819:	test   eax,eax
6400981b:	je     0x64009826
6400981d:	push   eax
6400981e:	call   0x640131b4
64009823:	add    esp,0x4
64009826:	push   esi
64009827:	call   0x64012262
6400982c:	add    esp,0x4
6400982f:	mov    DWORD PTR [edi],0x0
64009835:	pop    esi
64009836:	ret    
64009837:	int3   
64009838:	int3   
64009839:	int3   
6400983a:	int3   
6400983b:	int3   
6400983c:	int3   
6400983d:	int3   
6400983e:	int3   
6400983f:	int3   
64009840:	push   0xffffffff
64009842:	push   0x6402248b
64009847:	mov    eax,fs:0x0
6400984d:	push   eax
6400984e:	push   ebp
6400984f:	push   esi
64009850:	mov    eax,ds:0x6402d09c
64009855:	xor    eax,esp
64009857:	push   eax
64009858:	lea    eax,[esp+0xc]
6400985c:	mov    fs:0x0,eax
64009862:	mov    ebp,DWORD PTR [esp+0x1c]
64009866:	test   ebp,ebp
64009868:	je     0x6400987e
6400986a:	mov    eax,DWORD PTR [ebx]
6400986c:	test   eax,eax
6400986e:	je     0x64009874
64009870:	mov    eax,DWORD PTR [eax]
64009872:	jmp    0x64009876
64009874:	xor    eax,eax
64009876:	cmp    eax,ebp
64009878:	je     0x64009923
6400987e:	mov    esi,DWORD PTR [ebx]
64009880:	test   esi,esi
64009882:	je     0x640098c2
64009884:	lea    eax,[esi+0x8]
64009887:	push   eax
64009888:	call   DWORD PTR ds:0x64025094
6400988e:	test   eax,eax
64009890:	jne    0x640098bc
64009892:	test   esi,esi
64009894:	je     0x640098bc
64009896:	mov    eax,DWORD PTR [esi]
64009898:	test   eax,eax
6400989a:	je     0x640098a3
6400989c:	push   eax
6400989d:	call   DWORD PTR ds:0x640251a4
640098a3:	mov    eax,DWORD PTR [esi+0x4]
640098a6:	test   eax,eax
640098a8:	je     0x640098b3
640098aa:	push   eax
640098ab:	call   0x640131b4
640098b0:	add    esp,0x4
640098b3:	push   esi
640098b4:	call   0x64012262
640098b9:	add    esp,0x4
640098bc:	mov    DWORD PTR [ebx],0x0
640098c2:	push   0xc
640098c4:	call   0x64012641
640098c9:	mov    esi,eax
640098cb:	add    esp,0x4
640098ce:	mov    DWORD PTR [esp+0x1c],esi
640098d2:	test   esi,esi
640098d4:	mov    DWORD PTR [esp+0x14],0x0
640098dc:	je     0x64009909
640098de:	push   ebp
640098df:	mov    DWORD PTR [esi+0x4],0x0
640098e6:	mov    DWORD PTR [esi+0x8],0x1
640098ed:	call   DWORD PTR ds:0x64025188
640098f3:	test   eax,eax
640098f5:	mov    DWORD PTR [esi],eax
640098f7:	jne    0x6400990b
640098f9:	test   ebp,ebp
640098fb:	je     0x6400990b
640098fd:	push   0x8007000e
64009902:	call   0x6401ec20
64009907:	jmp    0x6400990b
64009909:	xor    esi,esi
6400990b:	test   esi,esi
6400990d:	mov    DWORD PTR [esp+0x14],0xffffffff
64009915:	mov    DWORD PTR [ebx],esi
64009917:	jne    0x64009923
64009919:	push   0x8007000e
6400991e:	call   0x6401ec20
64009923:	mov    eax,ebx
64009925:	mov    ecx,DWORD PTR [esp+0xc]
64009929:	mov    DWORD PTR fs:0x0,ecx
64009930:	pop    ecx
64009931:	pop    esi
64009932:	pop    ebp
64009933:	add    esp,0xc
64009936:	ret    0x4
64009939:	int3   
6400993a:	int3   
6400993b:	int3   
6400993c:	int3   
6400993d:	int3   
6400993e:	int3   
6400993f:	int3   
64009940:	push   0xffffffff
64009942:	push   0x6402251b
64009947:	mov    eax,fs:0x0
6400994d:	push   eax
6400994e:	push   ecx
6400994f:	push   esi
64009950:	push   edi
64009951:	mov    eax,ds:0x6402d09c
64009956:	xor    eax,esp
64009958:	push   eax
64009959:	lea    eax,[esp+0x10]
6400995d:	mov    fs:0x0,eax
64009963:	push   0xc
64009965:	call   0x64012641
6400996a:	add    esp,0x4
6400996d:	mov    DWORD PTR [esp+0xc],eax
64009971:	test   eax,eax
64009973:	mov    DWORD PTR [esp+0x18],0x0
6400997b:	je     0x6400998e
6400997d:	mov    ecx,DWORD PTR [esp+0x20]
64009981:	push   ecx
64009982:	push   ebx
64009983:	mov    edi,eax
64009985:	call   0x64009aa0
6400998a:	mov    edi,eax
6400998c:	jmp    0x64009990
6400998e:	xor    edi,edi
64009990:	test   edi,edi
64009992:	mov    DWORD PTR [esp+0x18],0xffffffff
6400999a:	jne    0x640099a8
6400999c:	push   0x8007000e
640099a1:	call   0x6401ec20
640099a6:	jmp    0x640099ee
640099a8:	mov    esi,DWORD PTR [ebx]
640099aa:	test   esi,esi
640099ac:	je     0x640099ec
640099ae:	lea    edx,[esi+0x8]
640099b1:	push   edx
640099b2:	call   DWORD PTR ds:0x64025094
640099b8:	test   eax,eax
640099ba:	jne    0x640099e6
640099bc:	test   esi,esi
640099be:	je     0x640099e6
640099c0:	mov    eax,DWORD PTR [esi]
640099c2:	test   eax,eax
640099c4:	je     0x640099cd
640099c6:	push   eax
640099c7:	call   DWORD PTR ds:0x640251a4
640099cd:	mov    eax,DWORD PTR [esi+0x4]
640099d0:	test   eax,eax
640099d2:	je     0x640099dd
640099d4:	push   eax
640099d5:	call   0x640131b4
640099da:	add    esp,0x4
640099dd:	push   esi
640099de:	call   0x64012262
640099e3:	add    esp,0x4
640099e6:	mov    DWORD PTR [ebx],0x0
640099ec:	mov    DWORD PTR [ebx],edi
640099ee:	mov    eax,ebx
640099f0:	mov    ecx,DWORD PTR [esp+0x10]
640099f4:	mov    DWORD PTR fs:0x0,ecx
640099fb:	pop    ecx
640099fc:	pop    edi
640099fd:	pop    esi
640099fe:	add    esp,0x10
64009a01:	ret    0x4
64009a04:	int3   
64009a05:	int3   
64009a06:	int3   
64009a07:	int3   
64009a08:	int3   
64009a09:	int3   
64009a0a:	int3   
64009a0b:	int3   
64009a0c:	int3   
64009a0d:	int3   
64009a0e:	int3   
64009a0f:	int3   
64009a10:	push   0xffffffff
64009a12:	push   0x640225c9
64009a17:	mov    eax,fs:0x0
64009a1d:	push   eax
64009a1e:	push   ecx
64009a1f:	push   ebx
64009a20:	mov    eax,ds:0x6402d09c
64009a25:	xor    eax,esp
64009a27:	push   eax
64009a28:	lea    eax,[esp+0xc]
64009a2c:	mov    fs:0x0,eax
64009a32:	mov    ebx,DWORD PTR [esp+0x20]
64009a36:	mov    eax,DWORD PTR [esp+0x1c]
64009a3a:	mov    DWORD PTR [esp+0x8],0x0
64009a42:	mov    eax,DWORD PTR [eax]
64009a44:	test   eax,eax
64009a46:	mov    DWORD PTR [ebx],eax
64009a48:	je     0x64009a54
64009a4a:	add    eax,0x8
64009a4d:	push   eax
64009a4e:	call   DWORD PTR ds:0x64025020
64009a54:	mov    ecx,DWORD PTR [esp+0x24]
64009a58:	mov    DWORD PTR [esp+0x14],0x0
64009a60:	push   ecx
64009a61:	mov    DWORD PTR [esp+0xc],0x1
64009a69:	call   0x64009940
64009a6e:	mov    eax,ebx
64009a70:	mov    ecx,DWORD PTR [esp+0xc]
64009a74:	mov    DWORD PTR fs:0x0,ecx
64009a7b:	pop    ecx
64009a7c:	pop    ebx
64009a7d:	add    esp,0x10
64009a80:	ret    0xc
64009a83:	int3   
64009a84:	int3   
64009a85:	int3   
64009a86:	int3   
64009a87:	int3   
64009a88:	int3   
64009a89:	int3   
64009a8a:	int3   
64009a8b:	int3   
64009a8c:	int3   
64009a8d:	int3   
64009a8e:	int3   
64009a8f:	int3   
64009a90:	mov    eax,DWORD PTR [eax]
64009a92:	test   eax,eax
64009a94:	je     0x64009a99
64009a96:	mov    eax,DWORD PTR [eax]
64009a98:	ret    
64009a99:	xor    eax,eax
64009a9b:	ret    
64009a9c:	int3   
64009a9d:	int3   
64009a9e:	int3   
64009a9f:	int3   
64009aa0:	mov    eax,DWORD PTR [esp+0x4]
64009aa4:	push   ebx
64009aa5:	xor    ebx,ebx
64009aa7:	mov    DWORD PTR [edi+0x4],ebx
64009aaa:	mov    DWORD PTR [edi+0x8],0x1
64009ab1:	mov    eax,DWORD PTR [eax]
64009ab3:	cmp    eax,ebx
64009ab5:	push   ebp
64009ab6:	push   esi
64009ab7:	mov    esi,DWORD PTR ds:0x640251a0
64009abd:	je     0x64009acc
64009abf:	mov    eax,DWORD PTR [eax]
64009ac1:	cmp    eax,ebx
64009ac3:	je     0x64009acc
64009ac5:	push   eax
64009ac6:	call   esi
64009ac8:	mov    ebp,eax
64009aca:	jmp    0x64009ace
64009acc:	xor    ebp,ebp
64009ace:	mov    ecx,DWORD PTR [esp+0x14]
64009ad2:	mov    eax,DWORD PTR [ecx]
64009ad4:	cmp    eax,ebx
64009ad6:	je     0x64009ae3
64009ad8:	mov    eax,DWORD PTR [eax]
64009ada:	cmp    eax,ebx
64009adc:	je     0x64009ae3
64009ade:	push   eax
64009adf:	call   esi
64009ae1:	mov    ebx,eax
64009ae3:	lea    esi,[ebx+ebp*1]
64009ae6:	add    esi,esi
64009ae8:	push   esi
64009ae9:	push   0x0
64009aeb:	call   DWORD PTR ds:0x64025190
64009af1:	test   eax,eax
64009af3:	mov    DWORD PTR [edi],eax
64009af5:	jne    0x64009b09
64009af7:	push   0x8007000e
64009afc:	call   0x6401ec20
64009b01:	pop    esi
64009b02:	pop    ebp
64009b03:	mov    eax,edi
64009b05:	pop    ebx
64009b06:	ret    0x8
64009b09:	mov    edx,DWORD PTR [esp+0x10]
64009b0d:	mov    ecx,DWORD PTR [edx]
64009b0f:	test   ecx,ecx
64009b11:	je     0x64009b2c
64009b13:	mov    ecx,DWORD PTR [ecx]
64009b15:	test   ecx,ecx
64009b17:	je     0x64009b2c
64009b19:	lea    edx,[ebp+ebp*1+0x2]
64009b1d:	push   edx
64009b1e:	push   ecx
64009b1f:	add    esi,0x2
64009b22:	push   esi
64009b23:	push   eax
64009b24:	call   0x64012418
64009b29:	add    esp,0x10
64009b2c:	mov    eax,DWORD PTR [esp+0x14]
64009b30:	mov    eax,DWORD PTR [eax]
64009b32:	test   eax,eax
64009b34:	je     0x64009b51
64009b36:	mov    ecx,DWORD PTR [eax]
64009b38:	test   ecx,ecx
64009b3a:	je     0x64009b51
64009b3c:	lea    eax,[ebx+ebx*1+0x2]
64009b40:	push   eax
64009b41:	push   ecx
64009b42:	mov    ecx,DWORD PTR [edi]
64009b44:	push   eax
64009b45:	lea    edx,[ecx+ebp*2]
64009b48:	push   edx
64009b49:	call   0x64012418
64009b4e:	add    esp,0x10
64009b51:	pop    esi
64009b52:	pop    ebp
64009b53:	mov    eax,edi
64009b55:	pop    ebx
64009b56:	ret    0x8
64009b59:	int3   
64009b5a:	int3   
64009b5b:	int3   
64009b5c:	int3   
64009b5d:	int3   
64009b5e:	int3   
64009b5f:	int3   
64009b60:	push   ecx
64009b61:	call   DWORD PTR ds:0x6402519c
64009b67:	ret    
64009b68:	int3   
64009b69:	int3   
64009b6a:	int3   
64009b6b:	int3   
64009b6c:	int3   
64009b6d:	int3   
64009b6e:	int3   
64009b6f:	int3   
64009b70:	push   0xffffffff
64009b72:	push   0x64022588
64009b77:	mov    eax,fs:0x0
64009b7d:	push   eax
64009b7e:	sub    esp,0x18
64009b81:	push   ebx
64009b82:	mov    eax,ds:0x6402d09c
64009b87:	xor    eax,esp
64009b89:	push   eax
64009b8a:	lea    eax,[esp+0x20]
64009b8e:	mov    fs:0x0,eax
64009b94:	mov    ebx,ecx
64009b96:	cmp    WORD PTR [esi],0x8
64009b9a:	jne    0x64009bb8
64009b9c:	mov    eax,DWORD PTR [esi+0x8]
64009b9f:	push   eax
64009ba0:	call   0x64009840
64009ba5:	mov    eax,ebx
64009ba7:	mov    ecx,DWORD PTR [esp+0x20]
64009bab:	mov    DWORD PTR fs:0x0,ecx
64009bb2:	pop    ecx
64009bb3:	pop    ebx
64009bb4:	add    esp,0x24
64009bb7:	ret    
64009bb8:	lea    ecx,[esp+0xc]
64009bbc:	push   ecx
64009bbd:	call   DWORD PTR ds:0x64025194
64009bc3:	lea    edx,[esp+0xc]
64009bc7:	cmp    edx,esi
64009bc9:	mov    DWORD PTR [esp+0x28],0x0
64009bd1:	jne    0x64009bdb
64009bd3:	cmp    WORD PTR [esp+0xc],0x8
64009bd9:	je     0x64009bf5
64009bdb:	push   0x8
64009bdd:	push   0x0
64009bdf:	push   esi
64009be0:	lea    eax,[esp+0x18]
64009be4:	push   eax
64009be5:	call   DWORD PTR ds:0x6402518c
64009beb:	test   eax,eax
64009bed:	jge    0x64009bf5
64009bef:	push   eax
64009bf0:	call   0x6401ec20
64009bf5:	mov    ecx,DWORD PTR [esp+0x14]
64009bf9:	push   ecx
64009bfa:	call   0x64009840
64009bff:	lea    edx,[esp+0xc]
64009c03:	push   edx
64009c04:	call   DWORD PTR ds:0x6402519c
64009c0a:	mov    eax,ebx
64009c0c:	mov    ecx,DWORD PTR [esp+0x20]
64009c10:	mov    DWORD PTR fs:0x0,ecx
64009c17:	pop    ecx
64009c18:	pop    ebx
64009c19:	add    esp,0x24
64009c1c:	ret    
64009c1d:	int3   
64009c1e:	int3   
64009c1f:	int3   
64009c20:	sub    esp,0x8
64009c23:	test   eax,eax
64009c25:	mov    BYTE PTR [edi],0x0
64009c28:	jle    0x64009d7e
64009c2e:	push   ebx
64009c2f:	push   ebp
64009c30:	push   esi
64009c31:	xor    esi,esi
64009c33:	add    eax,ecx
64009c35:	mov    BYTE PTR [esp+0xf],0x0
64009c3a:	mov    BYTE PTR [edi],0x0
64009c3d:	mov    DWORD PTR [esp+0x10],eax
64009c41:	mov    ebp,eax
64009c43:	mov    al,BYTE PTR [ebp+0x0]
64009c46:	test   al,al
64009c48:	je     0x64009cf4
64009c4e:	movsx  edx,al
64009c51:	push   edx
64009c52:	call   0x640137c0
64009c57:	mov    bl,al
64009c59:	movsx  eax,bl
64009c5c:	push   eax
64009c5d:	call   0x640138ae
64009c62:	add    esp,0x8
64009c65:	test   eax,eax
64009c67:	je     0x64009c6b
64009c69:	mov    bl,0x30
64009c6b:	shl    BYTE PTR [esi+edi*1],0x4
64009c6f:	add    BYTE PTR [esp+0xf],0x1
64009c74:	mov    cl,BYTE PTR [esi+edi*1]
64009c77:	mov    al,bl
64009c79:	sub    al,0x30
64009c7b:	cmp    al,0x9
64009c7d:	ja     0x64009c86
64009c7f:	or     al,cl
64009c81:	mov    BYTE PTR [esi+edi*1],al
64009c84:	jmp    0x64009c98
64009c86:	mov    dl,bl
64009c88:	sub    dl,0x61
64009c8b:	cmp    dl,0x5
64009c8e:	ja     0x64009cca
64009c90:	sub    bl,0x57
64009c93:	or     bl,cl
64009c95:	mov    BYTE PTR [esi+edi*1],bl
64009c98:	cmp    BYTE PTR [esp+0xf],0x2
64009c9d:	jne    0x64009cc2
64009c9f:	mov    al,BYTE PTR [esi+edi*1]
64009ca2:	test   al,al
64009ca4:	je     0x64009cb6
64009ca6:	movsx  eax,al
64009ca9:	push   eax
64009caa:	call   0x6401392b
64009caf:	add    esp,0x4
64009cb2:	test   eax,eax
64009cb4:	je     0x64009cca
64009cb6:	add    esi,0x1
64009cb9:	mov    BYTE PTR [esp+0xf],0x0
64009cbe:	mov    BYTE PTR [esi+edi*1],0x0
64009cc2:	add    ebp,0x1
64009cc5:	jmp    0x64009c43
64009cca:	mov    ebp,DWORD PTR [esp+0x10]
64009cce:	xor    esi,esi
64009cd0:	mov    bl,BYTE PTR [ebp+0x0]
64009cd3:	test   bl,bl
64009cd5:	je     0x64009cf4
64009cd7:	movsx  ecx,bl
64009cda:	push   ecx
64009cdb:	call   0x6401392b
64009ce0:	add    esp,0x4
64009ce3:	test   eax,eax
64009ce5:	je     0x64009cf2
64009ce7:	mov    BYTE PTR [esi+edi*1],bl
64009cea:	add    esi,0x1
64009ced:	add    ebp,0x1
64009cf0:	jmp    0x64009cd0
64009cf2:	xor    esi,esi
64009cf4:	cmp    DWORD PTR [esp+0x18],0x0
64009cf9:	mov    BYTE PTR [esi+edi*1],0x0
64009cfd:	je     0x64009d22
64009cff:	test   esi,esi
64009d01:	jle    0x64009d22
64009d03:	add    esi,0xffffffff
64009d06:	shr    esi,1
64009d08:	lea    eax,[edi+0x1]
64009d0b:	add    esi,0x1
64009d0e:	mov    edi,edi
64009d10:	mov    cl,BYTE PTR [eax-0x1]
64009d13:	mov    dl,BYTE PTR [eax]
64009d15:	mov    BYTE PTR [eax-0x1],dl
64009d18:	mov    BYTE PTR [eax],cl
64009d1a:	add    eax,0x2
64009d1d:	sub    esi,0x1
64009d20:	jne    0x64009d10
64009d22:	or     ebx,0xffffffff
64009d25:	or     ebp,ebx
64009d27:	xor    esi,esi
64009d29:	cmp    BYTE PTR [edi],0x0
64009d2c:	je     0x64009d7b
64009d2e:	mov    edi,edi
64009d30:	movsx  eax,BYTE PTR [esi+edi*1]
64009d34:	push   eax
64009d35:	call   0x640138ae
64009d3a:	add    esp,0x4
64009d3d:	test   eax,eax
64009d3f:	jne    0x64009d49
64009d41:	test   ebp,ebp
64009d43:	jge    0x64009d47
64009d45:	mov    ebp,esi
64009d47:	mov    ebx,esi
64009d49:	add    esi,0x1
64009d4c:	cmp    BYTE PTR [esi+edi*1],0x0
64009d50:	jne    0x64009d30
64009d52:	test   ebp,ebp
64009d54:	jl     0x64009d7b
64009d56:	test   ebx,ebx
64009d58:	jl     0x64009d7b
64009d5a:	cmp    ebp,ebx
64009d5c:	mov    eax,ebp
64009d5e:	jg     0x64009d75
64009d60:	mov    edx,edi
64009d62:	sub    edx,ebp
64009d64:	mov    cl,BYTE PTR [eax+edi*1]
64009d67:	test   cl,cl
64009d69:	je     0x64009d75
64009d6b:	mov    BYTE PTR [edx+eax*1],cl
64009d6e:	add    eax,0x1
64009d71:	cmp    eax,ebx
64009d73:	jle    0x64009d64
64009d75:	sub    eax,ebp
64009d77:	mov    BYTE PTR [eax+edi*1],0x0
64009d7b:	pop    esi
64009d7c:	pop    ebp
64009d7d:	pop    ebx
64009d7e:	mov    eax,edi
64009d80:	add    esp,0x8
64009d83:	ret    
64009d84:	int3   
64009d85:	int3   
64009d86:	int3   
64009d87:	int3   
64009d88:	int3   
64009d89:	int3   
64009d8a:	int3   
64009d8b:	int3   
64009d8c:	int3   
64009d8d:	int3   
64009d8e:	int3   
64009d8f:	int3   
64009d90:	push   ebp
64009d91:	mov    ebp,esp
64009d93:	and    esp,0xfffffff8
64009d96:	mov    eax,0x2f34
64009d9b:	call   0x640183b0
64009da0:	mov    eax,ds:0x6402d09c
64009da5:	xor    eax,esp
64009da7:	mov    DWORD PTR [esp+0x2f30],eax
64009dae:	push   ebx
64009daf:	mov    eax,DWORD PTR [ebp+0x8]
64009db2:	mov    ecx,DWORD PTR [ebp+0xc]
64009db5:	mov    ebx,DWORD PTR [ebp+0x10]
64009db8:	push   esi
64009db9:	push   edi
64009dba:	xor    edi,edi
64009dbc:	push   edi
64009dbd:	push   edi
64009dbe:	push   0x3
64009dc0:	push   edi
64009dc1:	push   0x3
64009dc3:	push   edi
64009dc4:	push   0x64028460
64009dc9:	push   0x12
64009dcb:	push   0x64028490
64009dd0:	mov    DWORD PTR [esp+0x3c],eax
64009dd4:	mov    DWORD PTR [esp+0x40],ecx
64009dd8:	mov    BYTE PTR [esp+0x37],0x0
64009ddd:	call   0x640059d0
64009de2:	add    esp,0xc
64009de5:	push   eax
64009de6:	call   0x6400ce80
64009deb:	call   eax
64009ded:	mov    esi,eax
64009def:	cmp    esi,0xffffffff
64009df2:	jne    0x64009e0b
64009df4:	xor    al,al
64009df6:	pop    edi
64009df7:	pop    esi
64009df8:	pop    ebx
64009df9:	mov    ecx,DWORD PTR [esp+0x2f30]
64009e00:	xor    ecx,esp
64009e02:	call   0x64012abc
64009e07:	mov    esp,ebp
64009e09:	pop    ebp
64009e0a:	ret    
64009e0b:	xor    eax,eax
64009e0d:	push   0x2710
64009e12:	lea    edx,[esp+0x82c]
64009e19:	push   edi
64009e1a:	mov    DWORD PTR [esp+0x2c],eax
64009e1e:	mov    DWORD PTR [esp+0x30],eax
64009e22:	push   edx
64009e23:	mov    DWORD PTR [esp+0x20],edi
64009e27:	mov    DWORD PTR [esp+0x38],eax
64009e2b:	mov    DWORD PTR [esp+0x30],edi
64009e2f:	mov    DWORD PTR [esp+0x34],edi
64009e33:	call   0x640131c0
64009e38:	add    esp,0xc
64009e3b:	push   edi
64009e3c:	lea    eax,[esp+0x18]
64009e40:	push   eax
64009e41:	push   0x2710
64009e46:	lea    ecx,[esp+0x834]
64009e4d:	push   ecx
64009e4e:	push   0xc
64009e50:	lea    edx,[esp+0x38]
64009e54:	push   edx
64009e55:	push   0x2d1400
64009e5a:	push   esi
64009e5b:	call   0x6400d3c0
64009e60:	call   eax
64009e62:	test   eax,eax
64009e64:	je     0x64009ec1
64009e66:	mov    eax,DWORD PTR [esp+0x838]
64009e6d:	push   edi
64009e6e:	lea    edi,[esp+0x444]
64009e75:	lea    ecx,[esp+0x82c]
64009e7c:	call   0x64009c20
64009e81:	mov    eax,DWORD PTR [esp+0x844]
64009e88:	push   0x1
64009e8a:	lea    edi,[esp+0x60]
64009e8e:	lea    ecx,[esp+0x830]
64009e95:	call   0x64009c20
64009e9a:	mov    ecx,DWORD PTR [esp+0x20]
64009e9e:	add    esp,0x8
64009ea1:	mov    eax,edi
64009ea3:	push   eax
64009ea4:	call   0x64002770
64009ea9:	lea    ecx,[esp+0x440]
64009eb0:	push   ecx
64009eb1:	mov    ecx,DWORD PTR [esp+0x20]
64009eb5:	call   0x64002770
64009eba:	mov    BYTE PTR [esp+0x13],0x1
64009ebf:	xor    edi,edi
64009ec1:	xor    eax,eax
64009ec3:	push   edi
64009ec4:	lea    edx,[esp+0x24]
64009ec8:	push   edx
64009ec9:	push   0x28
64009ecb:	mov    DWORD PTR [esp+0x40],eax
64009ecf:	mov    DWORD PTR [esp+0x44],eax
64009ed3:	mov    DWORD PTR [esp+0x48],eax
64009ed7:	mov    DWORD PTR [esp+0x4c],eax
64009edb:	mov    DWORD PTR [esp+0x50],eax
64009edf:	mov    DWORD PTR [esp+0x54],eax
64009ee3:	mov    DWORD PTR [esp+0x58],eax
64009ee7:	mov    DWORD PTR [esp+0x5c],eax
64009eeb:	mov    DWORD PTR [esp+0x60],eax
64009eef:	lea    eax,[esp+0x3c]
64009ef3:	push   eax
64009ef4:	push   edi
64009ef5:	push   edi
64009ef6:	push   0x700a0
64009efb:	push   esi
64009efc:	mov    DWORD PTR [esp+0x50],edi
64009f00:	mov    DWORD PTR [ebx],edi
64009f02:	mov    DWORD PTR [ebx+0x4],edi
64009f05:	call   0x6400d3c0
64009f0a:	call   eax
64009f0c:	test   eax,eax
64009f0e:	je     0x64009f1d
64009f10:	mov    ecx,DWORD PTR [esp+0x48]
64009f14:	mov    edx,DWORD PTR [esp+0x4c]
64009f18:	mov    DWORD PTR [ebx],ecx
64009f1a:	mov    DWORD PTR [ebx+0x4],edx
64009f1d:	push   esi
64009f1e:	call   DWORD PTR ds:0x64025040
64009f24:	mov    ecx,DWORD PTR [esp+0x2f3c]
64009f2b:	mov    al,BYTE PTR [esp+0x13]
64009f2f:	pop    edi
64009f30:	pop    esi
64009f31:	pop    ebx
64009f32:	xor    ecx,esp
64009f34:	call   0x64012abc
64009f39:	mov    esp,ebp
64009f3b:	pop    ebp
64009f3c:	ret    
64009f3d:	int3   
64009f3e:	int3   
64009f3f:	int3   
64009f40:	push   ebp
64009f41:	lea    ebp,[esp-0x28c]
64009f48:	sub    esp,0x28c
64009f4e:	push   0xffffffff
64009f50:	push   0x64023630
64009f55:	mov    eax,fs:0x0
64009f5b:	push   eax
64009f5c:	sub    esp,0x34
64009f5f:	mov    eax,ds:0x6402d09c
64009f64:	xor    eax,ebp
64009f66:	mov    DWORD PTR [ebp+0x288],eax
64009f6c:	push   ebx
64009f6d:	push   esi
64009f6e:	push   edi
64009f6f:	push   eax
64009f70:	lea    eax,[ebp-0xc]
64009f73:	mov    fs:0x0,eax
64009f79:	mov    eax,DWORD PTR [ebp+0x294]
64009f7f:	lea    ecx,[ebp-0x14]
64009f82:	push   ecx
64009f83:	lea    edx,[ebp+0x0]
64009f86:	push   edx
64009f87:	mov    DWORD PTR [ebp-0x20],eax
64009f8a:	mov    DWORD PTR [ebp-0x14],0x1
64009f91:	call   0x6400ca20
64009f96:	call   eax
64009f98:	cmp    eax,0x6f
64009f9b:	jne    0x6400a171
64009fa1:	mov    eax,DWORD PTR [ebp-0x14]
64009fa4:	push   eax
64009fa5:	call   0x6401225d
64009faa:	mov    ebx,eax
64009fac:	add    esp,0x4
64009faf:	mov    DWORD PTR [ebp-0x24],ebx
64009fb2:	lea    ecx,[ebp-0x14]
64009fb5:	push   ecx
64009fb6:	push   ebx
64009fb7:	mov    DWORD PTR [ebp-0x4],0x0
64009fbe:	call   0x6400ca20
64009fc3:	call   eax
64009fc5:	test   eax,eax
64009fc7:	je     0x64009fcf
64009fc9:	push   ebx
64009fca:	jmp    0x6400a169
64009fcf:	call   DWORD PTR ds:0x6402d06c
64009fd5:	mov    edx,DWORD PTR ds:0x6402e540
64009fdb:	mov    DWORD PTR [ebp-0x1c],eax
64009fde:	mov    eax,DWORD PTR [edx+0xc]
64009fe1:	mov    ecx,0x6402e540
64009fe6:	call   eax
64009fe8:	lea    edi,[eax+0x10]
64009feb:	mov    DWORD PTR [ebp-0x10],edi
64009fee:	xor    esi,esi
64009ff0:	mov    BYTE PTR [ebp-0x4],0x1
64009ff4:	cmp    DWORD PTR [ebx+0x190],esi
64009ffa:	je     0x6400a082
6400a000:	mov    edx,DWORD PTR ds:0x6402e540
6400a006:	mov    eax,DWORD PTR [edx+0xc]
6400a009:	mov    ecx,0x6402e540
6400a00e:	call   eax
6400a010:	add    eax,0x10
6400a013:	mov    DWORD PTR [ebp-0x18],eax
6400a016:	mov    BYTE PTR [ebp-0x4],0x2
6400a01a:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6400a022:	push   ecx
6400a023:	push   0x640284b8
6400a028:	push   0x4
6400a02a:	push   0x640284f0
6400a02f:	call   0x640059d0
6400a034:	add    esp,0xc
6400a037:	push   eax
6400a038:	lea    edx,[ebp-0x18]
6400a03b:	push   edx
6400a03c:	call   0x64001d40
6400a041:	mov    edi,DWORD PTR [ebp-0x18]
6400a044:	mov    eax,DWORD PTR [edi-0xc]
6400a047:	add    esp,0xc
6400a04a:	push   eax
6400a04b:	push   edi
6400a04c:	lea    ecx,[ebp-0x10]
6400a04f:	call   0x64002950
6400a054:	lea    eax,[edi-0x10]
6400a057:	mov    BYTE PTR [ebp-0x4],0x1
6400a05b:	lea    ecx,[eax+0xc]
6400a05e:	or     edx,0xffffffff
6400a061:	lock xadd DWORD PTR [ecx],edx
6400a065:	dec    edx
6400a066:	test   edx,edx
6400a068:	jg     0x6400a074
6400a06a:	mov    ecx,DWORD PTR [eax]
6400a06c:	mov    edx,DWORD PTR [ecx]
6400a06e:	push   eax
6400a06f:	mov    eax,DWORD PTR [edx+0x4]
6400a072:	call   eax
6400a074:	add    esi,0x1
6400a077:	cmp    esi,DWORD PTR [ebx+0x190]
6400a07d:	jne    0x6400a000
6400a07f:	mov    edi,DWORD PTR [ebp-0x10]
6400a082:	cmp    DWORD PTR [edi-0x4],0x1
6400a086:	jle    0x6400a097
6400a088:	mov    ecx,DWORD PTR [edi-0xc]
6400a08b:	push   ecx
6400a08c:	lea    ecx,[ebp-0x10]
6400a08f:	call   0x64001950
6400a094:	mov    edi,DWORD PTR [ebp-0x10]
6400a097:	test   edi,edi
6400a099:	jne    0x6400a09f
6400a09b:	xor    esi,esi
6400a09d:	jmp    0x6400a0ed
6400a09f:	push   edi
6400a0a0:	call   DWORD PTR ds:0x64025054
6400a0a6:	add    eax,0x1
6400a0a9:	cmp    eax,0x3fffffff
6400a0ae:	jg     0x6400a0e9
6400a0b0:	lea    edi,[eax+eax*1]
6400a0b3:	mov    eax,edi
6400a0b5:	call   0x64013240
6400a0ba:	mov    esi,esp
6400a0bc:	test   esi,esi
6400a0be:	je     0x6400a0e6
6400a0c0:	mov    edx,DWORD PTR [ebp-0x10]
6400a0c3:	mov    eax,DWORD PTR [ebp-0x1c]
6400a0c6:	push   0x0
6400a0c8:	push   0x0
6400a0ca:	push   edi
6400a0cb:	push   esi
6400a0cc:	push   0xffffffff
6400a0ce:	push   edx
6400a0cf:	push   0x0
6400a0d1:	push   eax
6400a0d2:	mov    BYTE PTR [esi],0x0
6400a0d5:	call   DWORD PTR ds:0x64025028
6400a0db:	mov    edi,DWORD PTR [ebp-0x10]
6400a0de:	neg    eax
6400a0e0:	sbb    eax,eax
6400a0e2:	and    eax,esi
6400a0e4:	jmp    0x6400a0eb
6400a0e6:	mov    edi,DWORD PTR [ebp-0x10]
6400a0e9:	xor    eax,eax
6400a0eb:	mov    esi,eax
6400a0ed:	mov    eax,esi
6400a0ef:	mov    DWORD PTR [ebp-0x28],0xf
6400a0f6:	mov    DWORD PTR [ebp-0x2c],0x0
6400a0fd:	mov    BYTE PTR [ebp-0x3c],0x0
6400a101:	lea    edx,[eax+0x1]
6400a104:	mov    cl,BYTE PTR [eax]
6400a106:	add    eax,0x1
6400a109:	test   cl,cl
6400a10b:	jne    0x6400a104
6400a10d:	sub    eax,edx
6400a10f:	push   eax
6400a110:	push   esi
6400a111:	lea    ecx,[ebp-0x40]
6400a114:	call   0x64001860
6400a119:	mov    esi,DWORD PTR [ebp-0x20]
6400a11c:	lea    ecx,[ebp-0x40]
6400a11f:	push   ecx
6400a120:	mov    BYTE PTR [ebp-0x4],0x3
6400a124:	call   0x6400a690
6400a129:	cmp    DWORD PTR [ebp-0x28],0x10
6400a12d:	jb     0x6400a13b
6400a12f:	mov    edx,DWORD PTR [ebp-0x3c]
6400a132:	push   edx
6400a133:	call   0x64012262
6400a138:	add    esp,0x4
6400a13b:	mov    ebx,DWORD PTR [ebx]
6400a13d:	lea    eax,[edi-0x10]
6400a140:	mov    BYTE PTR [ebp-0x4],0x0
6400a144:	lea    ecx,[eax+0xc]
6400a147:	or     edx,0xffffffff
6400a14a:	lock xadd DWORD PTR [ecx],edx
6400a14e:	dec    edx
6400a14f:	test   edx,edx
6400a151:	jg     0x6400a15d
6400a153:	mov    ecx,DWORD PTR [eax]
6400a155:	mov    edx,DWORD PTR [ecx]
6400a157:	push   eax
6400a158:	mov    eax,DWORD PTR [edx+0x4]
6400a15b:	call   eax
6400a15d:	test   ebx,ebx
6400a15f:	jne    0x64009fcf
6400a165:	mov    ecx,DWORD PTR [ebp-0x24]
6400a168:	push   ecx
6400a169:	call   0x64012262
6400a16e:	add    esp,0x4
6400a171:	lea    esp,[ebp-0x50]
6400a174:	mov    ecx,DWORD PTR [ebp-0xc]
6400a177:	mov    DWORD PTR fs:0x0,ecx
6400a17e:	pop    ecx
6400a17f:	pop    edi
6400a180:	pop    esi
6400a181:	pop    ebx
6400a182:	mov    ecx,DWORD PTR [ebp+0x288]
6400a188:	xor    ecx,ebp
6400a18a:	call   0x64012abc
6400a18f:	add    ebp,0x28c
6400a195:	mov    esp,ebp
6400a197:	pop    ebp
6400a198:	ret    
6400a199:	int3   
6400a19a:	int3   
6400a19b:	int3   
6400a19c:	int3   
6400a19d:	int3   
6400a19e:	int3   
6400a19f:	int3   
6400a1a0:	push   0xffffffff
6400a1a2:	push   0x640235f0
6400a1a7:	mov    eax,fs:0x0
6400a1ad:	push   eax
6400a1ae:	sub    esp,0x50
6400a1b1:	push   ebx
6400a1b2:	push   ebp
6400a1b3:	push   esi
6400a1b4:	push   edi
6400a1b5:	mov    eax,ds:0x6402d09c
6400a1ba:	xor    eax,esp
6400a1bc:	push   eax
6400a1bd:	lea    eax,[esp+0x64]
6400a1c1:	mov    fs:0x0,eax
6400a1c7:	mov    ebp,DWORD PTR [esp+0x74]
6400a1cb:	lea    eax,[esp+0x18]
6400a1cf:	xor    ebx,ebx
6400a1d1:	push   eax
6400a1d2:	mov    edi,0x640276e8
6400a1d7:	mov    DWORD PTR [esp+0x3c],ebx
6400a1db:	call   0x64009750
6400a1e0:	push   ebx
6400a1e1:	push   ebx
6400a1e2:	mov    DWORD PTR [esp+0x74],ebx
6400a1e6:	call   DWORD PTR ds:0x640251d0
6400a1ec:	test   eax,eax
6400a1ee:	jge    0x6400a243
6400a1f0:	mov    esi,DWORD PTR [esp+0x18]
6400a1f4:	cmp    esi,ebx
6400a1f6:	mov    DWORD PTR [ebp+0x0],esi
6400a1f9:	je     0x6400a4e3
6400a1ff:	lea    edi,[esi+0x8]
6400a202:	push   edi
6400a203:	call   DWORD PTR ds:0x64025020
6400a209:	push   edi
6400a20a:	call   DWORD PTR ds:0x64025094
6400a210:	test   eax,eax
6400a212:	jne    0x6400a4e3
6400a218:	mov    eax,DWORD PTR [esi]
6400a21a:	cmp    eax,ebx
6400a21c:	je     0x6400a225
6400a21e:	push   eax
6400a21f:	call   DWORD PTR ds:0x640251a4
6400a225:	mov    eax,DWORD PTR [esi+0x4]
6400a228:	cmp    eax,ebx
6400a22a:	je     0x6400a235
6400a22c:	push   eax
6400a22d:	call   0x640131b4
6400a232:	add    esp,0x4
6400a235:	push   esi
6400a236:	call   0x64012262
6400a23b:	add    esp,0x4
6400a23e:	jmp    0x6400a4e3
6400a243:	lea    ecx,[esp+0x20]
6400a247:	push   ecx
6400a248:	push   0x64025a84
6400a24d:	push   0x1
6400a24f:	push   ebx
6400a250:	push   0x64025b54
6400a255:	mov    DWORD PTR [esp+0x34],ebx
6400a259:	call   DWORD PTR ds:0x640251e4
6400a25f:	cmp    eax,ebx
6400a261:	jl     0x6400a4bf
6400a267:	push   0x640284fc
6400a26c:	push   0xa
6400a26e:	push   0x64028534
6400a273:	mov    DWORD PTR [esp+0x28],ebx
6400a277:	call   0x640059d0
6400a27c:	add    esp,0xc
6400a27f:	lea    edx,[esp+0x30]
6400a283:	push   edx
6400a284:	mov    edi,eax
6400a286:	call   0x64009750
6400a28b:	mov    BYTE PTR [esp+0x6c],0x1
6400a290:	mov    eax,DWORD PTR [eax]
6400a292:	cmp    eax,ebx
6400a294:	je     0x6400a29a
6400a296:	mov    eax,DWORD PTR [eax]
6400a298:	jmp    0x6400a29c
6400a29a:	xor    eax,eax
6400a29c:	mov    ecx,DWORD PTR [esp+0x20]
6400a2a0:	mov    edx,DWORD PTR [ecx]
6400a2a2:	lea    esi,[esp+0x1c]
6400a2a6:	push   esi
6400a2a7:	push   ebx
6400a2a8:	push   ebx
6400a2a9:	push   ebx
6400a2aa:	push   ebx
6400a2ab:	push   ebx
6400a2ac:	push   ebx
6400a2ad:	push   eax
6400a2ae:	mov    eax,DWORD PTR [edx+0xc]
6400a2b1:	push   ecx
6400a2b2:	call   eax
6400a2b4:	lea    edi,[esp+0x30]
6400a2b8:	mov    esi,eax
6400a2ba:	mov    BYTE PTR [esp+0x6c],bl
6400a2be:	call   0x640097f0
6400a2c3:	cmp    esi,ebx
6400a2c5:	jge    0x6400a2d0
6400a2c7:	mov    eax,DWORD PTR [esp+0x20]
6400a2cb:	jmp    0x6400a4b7
6400a2d0:	mov    eax,DWORD PTR [esp+0x1c]
6400a2d4:	push   ebx
6400a2d5:	push   ebx
6400a2d6:	push   0x3
6400a2d8:	push   0x3
6400a2da:	push   ebx
6400a2db:	push   ebx
6400a2dc:	push   0xa
6400a2de:	push   eax
6400a2df:	call   DWORD PTR ds:0x640251d8
6400a2e5:	cmp    eax,ebx
6400a2e7:	jge    0x6400a2fe
6400a2e9:	mov    eax,DWORD PTR [esp+0x1c]
6400a2ed:	mov    ecx,DWORD PTR [eax]
6400a2ef:	mov    edx,DWORD PTR [ecx+0x8]
6400a2f2:	push   eax
6400a2f3:	call   edx
6400a2f5:	mov    eax,DWORD PTR [esp+0x20]
6400a2f9:	jmp    0x6400a4b7
6400a2fe:	push   0x6402854c
6400a303:	push   0xe
6400a305:	push   0x64028578
6400a30a:	mov    DWORD PTR [esp+0x30],ebx
6400a30e:	call   0x64005710
6400a313:	add    esp,0xc
6400a316:	push   eax
6400a317:	lea    ebx,[esp+0x3c]
6400a31b:	call   0x640096c0
6400a320:	mov    ecx,DWORD PTR [esp+0x78]
6400a324:	push   ecx
6400a325:	lea    edx,[esp+0x38]
6400a329:	push   edx
6400a32a:	push   eax
6400a32b:	mov    BYTE PTR [esp+0x78],0x2
6400a330:	call   0x64009a10
6400a335:	mov    esi,eax
6400a337:	push   0x64028588
6400a33c:	push   0x3
6400a33e:	push   0x640285c4
6400a343:	mov    BYTE PTR [esp+0x78],0x3
6400a348:	call   0x64005710
6400a34d:	add    esp,0xc
6400a350:	push   eax
6400a351:	lea    ebx,[esp+0x34]
6400a355:	call   0x640096c0
6400a35a:	mov    BYTE PTR [esp+0x6c],0x4
6400a35f:	mov    ecx,DWORD PTR [esi]
6400a361:	xor    ebx,ebx
6400a363:	cmp    ecx,ebx
6400a365:	je     0x6400a36b
6400a367:	mov    ecx,DWORD PTR [ecx]
6400a369:	jmp    0x6400a36d
6400a36b:	xor    ecx,ecx
6400a36d:	mov    eax,DWORD PTR [eax]
6400a36f:	cmp    eax,ebx
6400a371:	je     0x6400a377
6400a373:	mov    edx,DWORD PTR [eax]
6400a375:	jmp    0x6400a379
6400a377:	xor    edx,edx
6400a379:	mov    eax,DWORD PTR [esp+0x1c]
6400a37d:	mov    esi,DWORD PTR [eax]
6400a37f:	lea    edi,[esp+0x24]
6400a383:	push   edi
6400a384:	push   ebx
6400a385:	push   0x30
6400a387:	push   ecx
6400a388:	push   edx
6400a389:	push   eax
6400a38a:	mov    eax,DWORD PTR [esi+0x50]
6400a38d:	call   eax
6400a38f:	lea    edi,[esp+0x30]
6400a393:	mov    esi,eax
6400a395:	call   0x640097f0
6400a39a:	lea    edi,[esp+0x34]
6400a39e:	call   0x640097f0
6400a3a3:	lea    edi,[esp+0x38]
6400a3a7:	mov    BYTE PTR [esp+0x6c],bl
6400a3ab:	call   0x640097f0
6400a3b0:	cmp    esi,ebx
6400a3b2:	jge    0x6400a3c9
6400a3b4:	mov    eax,DWORD PTR [esp+0x1c]
6400a3b8:	mov    ecx,DWORD PTR [eax]
6400a3ba:	mov    edx,DWORD PTR [ecx+0x8]
6400a3bd:	push   eax
6400a3be:	call   edx
6400a3c0:	mov    eax,DWORD PTR [esp+0x20]
6400a3c4:	jmp    0x6400a4b7
6400a3c9:	mov    eax,DWORD PTR [esp+0x24]
6400a3cd:	cmp    eax,ebx
6400a3cf:	mov    DWORD PTR [esp+0x2c],ebx
6400a3d3:	je     0x6400a48f
6400a3d9:	mov    edi,DWORD PTR ds:0x6402519c
6400a3df:	nop
6400a3e0:	mov    ecx,DWORD PTR [eax]
6400a3e2:	lea    edx,[esp+0x2c]
6400a3e6:	push   edx
6400a3e7:	lea    edx,[esp+0x2c]
6400a3eb:	push   edx
6400a3ec:	push   0x1
6400a3ee:	push   0xffffffff
6400a3f0:	push   eax
6400a3f1:	mov    eax,DWORD PTR [ecx+0x10]
6400a3f4:	call   eax
6400a3f6:	cmp    DWORD PTR [esp+0x2c],ebx
6400a3fa:	je     0x6400a48f
6400a400:	mov    esi,DWORD PTR [esp+0x28]
6400a404:	mov    eax,DWORD PTR [esp+0x7c]
6400a408:	mov    ebp,DWORD PTR [esi]
6400a40a:	push   ebx
6400a40b:	push   ebx
6400a40c:	lea    ecx,[esp+0x44]
6400a410:	push   ecx
6400a411:	push   ebx
6400a412:	call   0x64009a90
6400a417:	mov    edx,DWORD PTR [ebp+0x10]
6400a41a:	push   eax
6400a41b:	push   esi
6400a41c:	call   edx
6400a41e:	cmp    eax,ebx
6400a420:	jl     0x6400a42a
6400a422:	cmp    WORD PTR [esp+0x3c],0x8
6400a428:	je     0x6400a44b
6400a42a:	lea    eax,[esp+0x3c]
6400a42e:	push   eax
6400a42f:	call   edi
6400a431:	mov    eax,DWORD PTR [esp+0x28]
6400a435:	mov    ecx,DWORD PTR [eax]
6400a437:	mov    edx,DWORD PTR [ecx+0x8]
6400a43a:	push   eax
6400a43b:	call   edx
6400a43d:	mov    eax,DWORD PTR [esp+0x24]
6400a441:	cmp    eax,ebx
6400a443:	mov    ebp,DWORD PTR [esp+0x74]
6400a447:	jne    0x6400a3e0
6400a449:	jmp    0x6400a48f
6400a44b:	lea    eax,[esp+0x4c]
6400a44f:	push   eax
6400a450:	call   DWORD PTR ds:0x64025194
6400a456:	lea    ecx,[esp+0x3c]
6400a45a:	push   ecx
6400a45b:	lea    edx,[esp+0x50]
6400a45f:	push   edx
6400a460:	call   DWORD PTR ds:0x64025198
6400a466:	cmp    eax,ebx
6400a468:	jge    0x6400a470
6400a46a:	push   eax
6400a46b:	call   0x6401ec20
6400a470:	lea    esi,[esp+0x4c]
6400a474:	lea    ecx,[esp+0x18]
6400a478:	mov    BYTE PTR [esp+0x6c],0x5
6400a47d:	call   0x64009b70
6400a482:	mov    eax,esi
6400a484:	push   eax
6400a485:	mov    BYTE PTR [esp+0x70],bl
6400a489:	call   edi
6400a48b:	mov    ebp,DWORD PTR [esp+0x74]
6400a48f:	mov    eax,DWORD PTR [esp+0x1c]
6400a493:	mov    ecx,DWORD PTR [eax]
6400a495:	mov    edx,DWORD PTR [ecx+0x8]
6400a498:	push   eax
6400a499:	call   edx
6400a49b:	mov    eax,DWORD PTR [esp+0x20]
6400a49f:	mov    ecx,DWORD PTR [eax]
6400a4a1:	mov    edx,DWORD PTR [ecx+0x8]
6400a4a4:	push   eax
6400a4a5:	call   edx
6400a4a7:	mov    eax,DWORD PTR [esp+0x24]
6400a4ab:	mov    ecx,DWORD PTR [eax]
6400a4ad:	mov    edx,DWORD PTR [ecx+0x8]
6400a4b0:	push   eax
6400a4b1:	call   edx
6400a4b3:	mov    eax,DWORD PTR [esp+0x28]
6400a4b7:	mov    ecx,DWORD PTR [eax]
6400a4b9:	mov    edx,DWORD PTR [ecx+0x8]
6400a4bc:	push   eax
6400a4bd:	call   edx
6400a4bf:	call   DWORD PTR ds:0x640251d4
6400a4c5:	mov    eax,DWORD PTR [esp+0x18]
6400a4c9:	cmp    eax,ebx
6400a4cb:	mov    DWORD PTR [ebp+0x0],eax
6400a4ce:	je     0x6400a4da
6400a4d0:	add    eax,0x8
6400a4d3:	push   eax
6400a4d4:	call   DWORD PTR ds:0x64025020
6400a4da:	lea    edi,[esp+0x18]
6400a4de:	call   0x640097f0
6400a4e3:	mov    eax,ebp
6400a4e5:	mov    ecx,DWORD PTR [esp+0x64]
6400a4e9:	mov    DWORD PTR fs:0x0,ecx
6400a4f0:	pop    ecx
6400a4f1:	pop    edi
6400a4f2:	pop    esi
6400a4f3:	pop    ebp
6400a4f4:	pop    ebx
6400a4f5:	add    esp,0x5c
6400a4f8:	ret    
6400a4f9:	int3   
6400a4fa:	int3   
6400a4fb:	int3   
6400a4fc:	int3   
6400a4fd:	int3   
6400a4fe:	int3   
6400a4ff:	int3   
6400a500:	push   ebp
6400a501:	mov    ebp,esp
6400a503:	and    esp,0xfffffff8
6400a506:	push   0xffffffff
6400a508:	push   0x64023ad8
6400a50d:	mov    eax,fs:0x0
6400a513:	push   eax
6400a514:	sub    esp,0x14
6400a517:	push   esi
6400a518:	push   edi
6400a519:	mov    eax,ds:0x6402d09c
6400a51e:	xor    eax,esp
6400a520:	push   eax
6400a521:	lea    eax,[esp+0x20]
6400a525:	mov    fs:0x0,eax
6400a52b:	mov    DWORD PTR [esp+0x18],0x0
6400a533:	call   DWORD PTR ds:0x6402d06c
6400a539:	push   0x640285c8
6400a53e:	push   0xc
6400a540:	push   0x640285f8
6400a545:	call   0x640059d0
6400a54a:	add    esp,0xc
6400a54d:	lea    ecx,[esp+0x14]
6400a551:	push   ecx
6400a552:	mov    edi,eax
6400a554:	call   0x64009750
6400a559:	push   0x64028614
6400a55e:	push   0x15
6400a560:	push   0x64028644
6400a565:	mov    DWORD PTR [esp+0x34],0x0
6400a56d:	call   0x640059d0
6400a572:	add    esp,0xc
6400a575:	lea    edx,[esp+0x10]
6400a579:	push   edx
6400a57a:	mov    edi,eax
6400a57c:	call   0x64009750
6400a581:	lea    eax,[esp+0x14]
6400a585:	push   eax
6400a586:	lea    ecx,[esp+0x14]
6400a58a:	push   ecx
6400a58b:	lea    edx,[esp+0x20]
6400a58f:	push   edx
6400a590:	mov    BYTE PTR [esp+0x34],0x1
6400a595:	call   0x6400a1a0
6400a59a:	add    esp,0xc
6400a59d:	mov    esi,DWORD PTR [esp+0x10]
6400a5a1:	test   esi,esi
6400a5a3:	je     0x6400a5d9
6400a5a5:	lea    eax,[esi+0x8]
6400a5a8:	push   eax
6400a5a9:	call   DWORD PTR ds:0x64025094
6400a5af:	test   eax,eax
6400a5b1:	jne    0x6400a5d9
6400a5b3:	mov    eax,DWORD PTR [esi]
6400a5b5:	test   eax,eax
6400a5b7:	je     0x6400a5c0
6400a5b9:	push   eax
6400a5ba:	call   DWORD PTR ds:0x640251a4
6400a5c0:	mov    eax,DWORD PTR [esi+0x4]
6400a5c3:	test   eax,eax
6400a5c5:	je     0x6400a5d0
6400a5c7:	push   eax
6400a5c8:	call   0x640131b4
6400a5cd:	add    esp,0x4
6400a5d0:	push   esi
6400a5d1:	call   0x64012262
6400a5d6:	add    esp,0x4
6400a5d9:	mov    BYTE PTR [esp+0x28],0x4
6400a5de:	mov    esi,DWORD PTR [esp+0x14]
6400a5e2:	test   esi,esi
6400a5e4:	je     0x6400a61a
6400a5e6:	lea    ecx,[esi+0x8]
6400a5e9:	push   ecx
6400a5ea:	call   DWORD PTR ds:0x64025094
6400a5f0:	test   eax,eax
6400a5f2:	jne    0x6400a61a
6400a5f4:	mov    eax,DWORD PTR [esi]
6400a5f6:	test   eax,eax
6400a5f8:	je     0x6400a601
6400a5fa:	push   eax
6400a5fb:	call   DWORD PTR ds:0x640251a4
6400a601:	mov    eax,DWORD PTR [esi+0x4]
6400a604:	test   eax,eax
6400a606:	je     0x6400a611
6400a608:	push   eax
6400a609:	call   0x640131b4
6400a60e:	add    esp,0x4
6400a611:	push   esi
6400a612:	call   0x64012262
6400a617:	add    esp,0x4
6400a61a:	mov    esi,DWORD PTR [esp+0x18]
6400a61e:	test   esi,esi
6400a620:	je     0x6400a626
6400a622:	mov    eax,DWORD PTR [esi]
6400a624:	jmp    0x6400a628
6400a626:	xor    eax,eax
6400a628:	mov    edi,DWORD PTR [ebp+0x8]
6400a62b:	push   eax
6400a62c:	mov    ecx,edi
6400a62e:	call   0x64002500
6400a633:	test   esi,esi
6400a635:	je     0x6400a66b
6400a637:	lea    edx,[esi+0x8]
6400a63a:	push   edx
6400a63b:	call   DWORD PTR ds:0x64025094
6400a641:	test   eax,eax
6400a643:	jne    0x6400a66b
6400a645:	mov    eax,DWORD PTR [esi]
6400a647:	test   eax,eax
6400a649:	je     0x6400a652
6400a64b:	push   eax
6400a64c:	call   DWORD PTR ds:0x640251a4
6400a652:	mov    eax,DWORD PTR [esi+0x4]
6400a655:	test   eax,eax
6400a657:	je     0x6400a662
6400a659:	push   eax
6400a65a:	call   0x640131b4
6400a65f:	add    esp,0x4
6400a662:	push   esi
6400a663:	call   0x64012262
6400a668:	add    esp,0x4
6400a66b:	mov    eax,edi
6400a66d:	mov    ecx,DWORD PTR [esp+0x20]
6400a671:	mov    DWORD PTR fs:0x0,ecx
6400a678:	pop    ecx
6400a679:	pop    edi
6400a67a:	pop    esi
6400a67b:	mov    esp,ebp
6400a67d:	pop    ebp
6400a67e:	ret    
6400a67f:	int3   
6400a680:	mov    ecx,DWORD PTR [eax]
6400a682:	push   ecx
6400a683:	call   0x64012262
6400a688:	pop    ecx
6400a689:	ret    
6400a68a:	int3   
6400a68b:	int3   
6400a68c:	int3   
6400a68d:	int3   
6400a68e:	int3   
6400a68f:	int3   
6400a690:	push   ebp
6400a691:	mov    ebp,esp
6400a693:	and    esp,0xfffffff8
6400a696:	sub    esp,0x8
6400a699:	push   ebx
6400a69a:	mov    ebx,DWORD PTR [esi+0x4]
6400a69d:	test   ebx,ebx
6400a69f:	push   edi
6400a6a0:	jne    0x6400a6a6
6400a6a2:	xor    edi,edi
6400a6a4:	jmp    0x6400a6be
6400a6a6:	mov    ecx,DWORD PTR [esi+0x8]
6400a6a9:	sub    ecx,ebx
6400a6ab:	mov    eax,0x92492493
6400a6b0:	imul   ecx
6400a6b2:	add    edx,ecx
6400a6b4:	sar    edx,0x4
6400a6b7:	mov    edi,edx
6400a6b9:	shr    edi,0x1f
6400a6bc:	add    edi,edx
6400a6be:	test   ebx,ebx
6400a6c0:	je     0x6400a711
6400a6c2:	mov    ecx,DWORD PTR [esi+0xc]
6400a6c5:	sub    ecx,ebx
6400a6c7:	mov    eax,0x92492493
6400a6cc:	imul   ecx
6400a6ce:	add    edx,ecx
6400a6d0:	sar    edx,0x4
6400a6d3:	mov    eax,edx
6400a6d5:	shr    eax,0x1f
6400a6d8:	add    eax,edx
6400a6da:	cmp    edi,eax
6400a6dc:	jae    0x6400a711
6400a6de:	mov    edx,DWORD PTR [ebp+0x8]
6400a6e1:	mov    edi,DWORD PTR [esi+0x8]
6400a6e4:	mov    BYTE PTR [esp+0x8],0x0
6400a6e9:	mov    eax,DWORD PTR [esp+0x8]
6400a6ed:	mov    ecx,DWORD PTR [esp+0x8]
6400a6f1:	push   eax
6400a6f2:	push   ecx
6400a6f3:	push   esi
6400a6f4:	push   edx
6400a6f5:	push   edi
6400a6f6:	mov    ecx,0x1
6400a6fb:	call   0x6400ad30
6400a700:	add    esp,0x14
6400a703:	add    edi,0x1c
6400a706:	mov    DWORD PTR [esi+0x8],edi
6400a709:	pop    edi
6400a70a:	pop    ebx
6400a70b:	mov    esp,ebp
6400a70d:	pop    ebp
6400a70e:	ret    0x4
6400a711:	mov    edi,DWORD PTR [esi+0x8]
6400a714:	cmp    ebx,edi
6400a716:	jbe    0x6400a71d
6400a718:	call   0x64012618
6400a71d:	mov    eax,DWORD PTR [ebp+0x8]
6400a720:	push   edi
6400a721:	push   esi
6400a722:	push   eax
6400a723:	lea    ecx,[esp+0x14]
6400a727:	push   ecx
6400a728:	mov    eax,esi
6400a72a:	call   0x6400a770
6400a72f:	pop    edi
6400a730:	pop    ebx
6400a731:	mov    esp,ebp
6400a733:	pop    ebp
6400a734:	ret    0x4
6400a737:	int3   
6400a738:	int3   
6400a739:	int3   
6400a73a:	int3   
6400a73b:	int3   
6400a73c:	int3   
6400a73d:	int3   
6400a73e:	int3   
6400a73f:	int3   
6400a740:	mov    eax,DWORD PTR [ecx+0x4]
6400a743:	test   eax,eax
6400a745:	jne    0x6400a748
6400a747:	ret    
6400a748:	mov    ecx,DWORD PTR [ecx+0x8]
6400a74b:	sub    ecx,eax
6400a74d:	mov    eax,0x92492493
6400a752:	imul   ecx
6400a754:	add    edx,ecx
6400a756:	sar    edx,0x4
6400a759:	mov    eax,edx
6400a75b:	shr    eax,0x1f
6400a75e:	add    eax,edx
6400a760:	ret    
6400a761:	int3   
6400a762:	int3   
6400a763:	int3   
6400a764:	int3   
6400a765:	int3   
6400a766:	int3   
6400a767:	int3   
6400a768:	int3   
6400a769:	int3   
6400a76a:	int3   
6400a76b:	int3   
6400a76c:	int3   
6400a76d:	int3   
6400a76e:	int3   
6400a76f:	int3   
6400a770:	push   ecx
6400a771:	push   ebx
6400a772:	push   ebp
6400a773:	mov    ebp,DWORD PTR [esp+0x1c]
6400a777:	push   esi
6400a778:	mov    esi,eax
6400a77a:	push   edi
6400a77b:	mov    edi,DWORD PTR [esi+0x4]
6400a77e:	test   edi,edi
6400a780:	je     0x6400a79e
6400a782:	mov    ebx,DWORD PTR [esi+0x8]
6400a785:	mov    ecx,ebx
6400a787:	sub    ecx,edi
6400a789:	mov    eax,0x92492493
6400a78e:	imul   ecx
6400a790:	add    edx,ecx
6400a792:	sar    edx,0x4
6400a795:	mov    eax,edx
6400a797:	shr    eax,0x1f
6400a79a:	add    eax,edx
6400a79c:	jne    0x6400a7a6
6400a79e:	mov    ebx,DWORD PTR [esp+0x20]
6400a7a2:	xor    edi,edi
6400a7a4:	jmp    0x6400a7d7
6400a7a6:	cmp    edi,ebx
6400a7a8:	jbe    0x6400a7af
6400a7aa:	call   0x64012618
6400a7af:	mov    ebx,DWORD PTR [esp+0x20]
6400a7b3:	test   ebx,ebx
6400a7b5:	je     0x6400a7bb
6400a7b7:	cmp    ebx,esi
6400a7b9:	je     0x6400a7c0
6400a7bb:	call   0x64012618
6400a7c0:	mov    ecx,ebp
6400a7c2:	sub    ecx,edi
6400a7c4:	mov    eax,0x92492493
6400a7c9:	imul   ecx
6400a7cb:	add    edx,ecx
6400a7cd:	sar    edx,0x4
6400a7d0:	mov    edi,edx
6400a7d2:	shr    edi,0x1f
6400a7d5:	add    edi,edx
6400a7d7:	mov    ecx,DWORD PTR [esp+0x1c]
6400a7db:	push   ebp
6400a7dc:	push   ebx
6400a7dd:	push   ecx
6400a7de:	mov    ecx,esi
6400a7e0:	call   0x6400a860
6400a7e5:	mov    ebx,DWORD PTR [esi+0x4]
6400a7e8:	cmp    ebx,DWORD PTR [esi+0x8]
6400a7eb:	jbe    0x6400a7f2
6400a7ed:	call   0x64012618
6400a7f2:	lea    edx,[edi*8+0x0]
6400a7f9:	sub    edx,edi
6400a7fb:	lea    edi,[ebx+edx*4]
6400a7fe:	cmp    edi,DWORD PTR [esi+0x8]
6400a801:	mov    DWORD PTR [esp+0x24],ebx
6400a805:	ja     0x6400a80c
6400a807:	cmp    edi,DWORD PTR [esi+0x4]
6400a80a:	jae    0x6400a811
6400a80c:	call   0x64012618
6400a811:	mov    eax,DWORD PTR [esp+0x18]
6400a815:	mov    DWORD PTR [eax+0x4],edi
6400a818:	pop    edi
6400a819:	mov    DWORD PTR [eax],esi
6400a81b:	pop    esi
6400a81c:	pop    ebp
6400a81d:	pop    ebx
6400a81e:	pop    ecx
6400a81f:	ret    0x10
6400a822:	int3   
6400a823:	int3   
6400a824:	int3   
6400a825:	int3   
6400a826:	int3   
6400a827:	int3   
6400a828:	int3   
6400a829:	int3   
6400a82a:	int3   
6400a82b:	int3   
6400a82c:	int3   
6400a82d:	int3   
6400a82e:	int3   
6400a82f:	int3   
6400a830:	push   ecx
6400a831:	mov    ecx,DWORD PTR [esp+0x8]
6400a835:	mov    BYTE PTR [esp],0x0
6400a839:	mov    eax,DWORD PTR [esp]
6400a83c:	push   eax
6400a83d:	mov    eax,DWORD PTR [esp+0xc]
6400a841:	push   ecx
6400a842:	push   edx
6400a843:	push   eax
6400a844:	push   edi
6400a845:	mov    ecx,esi
6400a847:	call   0x6400ad30
6400a84c:	lea    ecx,[esi*8+0x0]
6400a853:	sub    ecx,esi
6400a855:	lea    eax,[edi+ecx*4]
6400a858:	add    esp,0x18
6400a85b:	ret    0x4
6400a85e:	int3   
6400a85f:	int3   
6400a860:	push   ebp
6400a861:	mov    ebp,esp
6400a863:	push   0xffffffff
6400a865:	push   0x64022ae8
6400a86a:	mov    eax,fs:0x0
6400a870:	push   eax
6400a871:	sub    esp,0x34
6400a874:	mov    eax,ds:0x6402d09c
6400a879:	xor    eax,ebp
6400a87b:	mov    DWORD PTR [ebp-0x14],eax
6400a87e:	push   ebx
6400a87f:	push   esi
6400a880:	push   edi
6400a881:	push   eax
6400a882:	lea    eax,[ebp-0xc]
6400a885:	mov    fs:0x0,eax
6400a88b:	mov    DWORD PTR [ebp-0x10],esp
6400a88e:	mov    eax,DWORD PTR [ebp+0x8]
6400a891:	push   0xffffffff
6400a893:	xor    edi,edi
6400a895:	mov    ebx,ecx
6400a897:	push   edi
6400a898:	push   eax
6400a899:	lea    ecx,[ebp-0x30]
6400a89c:	mov    DWORD PTR [ebp-0x3c],ebx
6400a89f:	mov    DWORD PTR [ebp-0x18],0xf
6400a8a6:	mov    DWORD PTR [ebp-0x1c],edi
6400a8a9:	mov    BYTE PTR [ebp-0x2c],0x0
6400a8ad:	call   0x64001780
6400a8b2:	mov    DWORD PTR [ebp-0x4],edi
6400a8b5:	mov    ecx,DWORD PTR [ebx+0x4]
6400a8b8:	cmp    ecx,edi
6400a8ba:	je     0x6400a8d4
6400a8bc:	mov    esi,DWORD PTR [ebx+0xc]
6400a8bf:	sub    esi,ecx
6400a8c1:	mov    eax,0x92492493
6400a8c6:	imul   esi
6400a8c8:	add    edx,esi
6400a8ca:	sar    edx,0x4
6400a8cd:	mov    edi,edx
6400a8cf:	shr    edi,0x1f
6400a8d2:	add    edi,edx
6400a8d4:	test   ecx,ecx
6400a8d6:	jne    0x6400a8dc
6400a8d8:	xor    eax,eax
6400a8da:	jmp    0x6400a8f4
6400a8dc:	mov    esi,DWORD PTR [ebx+0x8]
6400a8df:	sub    esi,ecx
6400a8e1:	mov    eax,0x92492493
6400a8e6:	imul   esi
6400a8e8:	add    edx,esi
6400a8ea:	sar    edx,0x4
6400a8ed:	mov    eax,edx
6400a8ef:	shr    eax,0x1f
6400a8f2:	add    eax,edx
6400a8f4:	mov    edx,0x9249249
6400a8f9:	sub    edx,eax
6400a8fb:	cmp    edx,0x1
6400a8fe:	jae    0x6400a905
6400a900:	call   0x6400aba0
6400a905:	test   ecx,ecx
6400a907:	jne    0x6400a90d
6400a909:	xor    eax,eax
6400a90b:	jmp    0x6400a925
6400a90d:	mov    esi,DWORD PTR [ebx+0x8]
6400a910:	sub    esi,ecx
6400a912:	mov    eax,0x92492493
6400a917:	imul   esi
6400a919:	add    edx,esi
6400a91b:	sar    edx,0x4
6400a91e:	mov    eax,edx
6400a920:	shr    eax,0x1f
6400a923:	add    eax,edx
6400a925:	add    eax,0x1
6400a928:	cmp    edi,eax
6400a92a:	jae    0x6400aa86
6400a930:	mov    eax,edi
6400a932:	shr    eax,1
6400a934:	mov    edx,0x9249249
6400a939:	sub    edx,eax
6400a93b:	cmp    edx,edi
6400a93d:	jae    0x6400a943
6400a93f:	xor    edi,edi
6400a941:	jmp    0x6400a945
6400a943:	add    edi,eax
6400a945:	test   ecx,ecx
6400a947:	jne    0x6400a94d
6400a949:	xor    eax,eax
6400a94b:	jmp    0x6400a965
6400a94d:	mov    esi,DWORD PTR [ebx+0x8]
6400a950:	sub    esi,ecx
6400a952:	mov    eax,0x92492493
6400a957:	imul   esi
6400a959:	add    edx,esi
6400a95b:	sar    edx,0x4
6400a95e:	mov    eax,edx
6400a960:	shr    eax,0x1f
6400a963:	add    eax,edx
6400a965:	add    eax,0x1
6400a968:	cmp    edi,eax
6400a96a:	jae    0x6400a978
6400a96c:	mov    ecx,ebx
6400a96e:	call   0x6400a740
6400a973:	mov    edi,eax
6400a975:	add    edi,0x1
6400a978:	push   0x0
6400a97a:	push   edi
6400a97b:	call   0x6400acc0
6400a980:	mov    BYTE PTR [ebp-0x4],0x1
6400a984:	mov    ecx,DWORD PTR [ebx+0x4]
6400a987:	mov    BYTE PTR [ebp-0x34],0x0
6400a98b:	mov    edx,DWORD PTR [ebp-0x34]
6400a98e:	push   edx
6400a98f:	mov    edx,DWORD PTR [ebp-0x34]
6400a992:	push   edx
6400a993:	mov    edx,DWORD PTR [ebp+0x10]
6400a996:	push   ebx
6400a997:	push   edx
6400a998:	mov    edx,eax
6400a99a:	mov    DWORD PTR [ebp-0x40],eax
6400a99d:	mov    DWORD PTR [ebp-0x38],eax
6400a9a0:	call   0x6400ae50
6400a9a5:	add    esp,0x18
6400a9a8:	mov    esi,eax
6400a9aa:	mov    BYTE PTR [ebp-0x34],0x0
6400a9ae:	mov    eax,DWORD PTR [ebp-0x34]
6400a9b1:	mov    ecx,DWORD PTR [ebp-0x34]
6400a9b4:	push   eax
6400a9b5:	push   ecx
6400a9b6:	push   ebx
6400a9b7:	lea    edx,[ebp-0x30]
6400a9ba:	push   edx
6400a9bb:	push   esi
6400a9bc:	mov    ecx,0x1
6400a9c1:	mov    DWORD PTR [ebp-0x38],esi
6400a9c4:	call   0x6400ad30
6400a9c9:	mov    eax,DWORD PTR [ebx+0x8]
6400a9cc:	add    esp,0x14
6400a9cf:	mov    BYTE PTR [ebp-0x34],0x0
6400a9d3:	mov    ecx,DWORD PTR [ebp-0x34]
6400a9d6:	mov    edx,DWORD PTR [ebp-0x34]
6400a9d9:	push   ecx
6400a9da:	mov    ecx,DWORD PTR [ebp+0x10]
6400a9dd:	push   edx
6400a9de:	add    esi,0x1c
6400a9e1:	push   ebx
6400a9e2:	push   eax
6400a9e3:	mov    edx,esi
6400a9e5:	mov    DWORD PTR [ebp-0x38],esi
6400a9e8:	call   0x6400ae50
6400a9ed:	mov    esi,DWORD PTR [ebx+0x4]
6400a9f0:	add    esp,0x10
6400a9f3:	test   esi,esi
6400a9f5:	jne    0x6400a9fb
6400a9f7:	xor    eax,eax
6400a9f9:	jmp    0x6400aa13
6400a9fb:	mov    ecx,DWORD PTR [ebx+0x8]
6400a9fe:	sub    ecx,esi
6400aa00:	mov    eax,0x92492493
6400aa05:	imul   ecx
6400aa07:	add    edx,ecx
6400aa09:	sar    edx,0x4
6400aa0c:	mov    eax,edx
6400aa0e:	shr    eax,0x1f
6400aa11:	add    eax,edx
6400aa13:	add    eax,0x1
6400aa16:	test   esi,esi
6400aa18:	mov    DWORD PTR [ebp-0x34],eax
6400aa1b:	je     0x6400aa3b
6400aa1d:	mov    eax,DWORD PTR [ebp-0x34]
6400aa20:	mov    ecx,DWORD PTR [ebx+0x8]
6400aa23:	push   eax
6400aa24:	push   ebx
6400aa25:	push   ecx
6400aa26:	push   esi
6400aa27:	call   0x6400ade0
6400aa2c:	mov    edx,DWORD PTR [ebx+0x4]
6400aa2f:	push   edx
6400aa30:	call   0x64012262
6400aa35:	mov    eax,DWORD PTR [ebp-0x34]
6400aa38:	add    esp,0x14
6400aa3b:	mov    ecx,DWORD PTR [ebp-0x40]
6400aa3e:	lea    edx,[edi*8+0x0]
6400aa45:	sub    edx,edi
6400aa47:	lea    edx,[ecx+edx*4]
6400aa4a:	mov    DWORD PTR [ebx+0xc],edx
6400aa4d:	lea    edx,[eax*8+0x0]
6400aa54:	sub    edx,eax
6400aa56:	lea    eax,[ecx+edx*4]
6400aa59:	mov    DWORD PTR [ebx+0x8],eax
6400aa5c:	mov    DWORD PTR [ebx+0x4],ecx
6400aa5f:	jmp    0x6400ab42
6400aa64:	mov    ecx,DWORD PTR [ebp-0x38]
6400aa67:	mov    esi,DWORD PTR [ebp-0x40]
6400aa6a:	push   ecx
6400aa6b:	mov    ecx,DWORD PTR [ebp-0x3c]
6400aa6e:	push   esi
6400aa6f:	call   0x6400ab80
6400aa74:	push   esi
6400aa75:	call   0x64012262
6400aa7a:	add    esp,0x4
6400aa7d:	push   0x0
6400aa7f:	push   0x0
6400aa81:	call   0x640126ab
6400aa86:	mov    edi,DWORD PTR [ebx+0x8]
6400aa89:	mov    esi,DWORD PTR [ebp+0x10]
6400aa8c:	mov    ecx,edi
6400aa8e:	sub    ecx,esi
6400aa90:	mov    eax,0x92492493
6400aa95:	imul   ecx
6400aa97:	add    edx,ecx
6400aa99:	sar    edx,0x4
6400aa9c:	mov    eax,edx
6400aa9e:	shr    eax,0x1f
6400aaa1:	add    eax,edx
6400aaa3:	cmp    eax,0x1
6400aaa6:	mov    edx,ebx
6400aaa8:	jae    0x6400ab1a
6400aaaa:	lea    ecx,[esi+0x1c]
6400aaad:	push   ecx
6400aaae:	push   edi
6400aaaf:	push   esi
6400aab0:	call   0x6400ac20
6400aab5:	mov    BYTE PTR [ebp-0x4],0x3
6400aab9:	mov    edi,DWORD PTR [ebx+0x8]
6400aabc:	lea    edx,[ebp-0x30]
6400aabf:	push   edx
6400aac0:	mov    ecx,edi
6400aac2:	sub    ecx,esi
6400aac4:	mov    eax,0x92492493
6400aac9:	imul   ecx
6400aacb:	add    edx,ecx
6400aacd:	sar    edx,0x4
6400aad0:	mov    eax,edx
6400aad2:	shr    eax,0x1f
6400aad5:	add    eax,edx
6400aad7:	mov    esi,0x1
6400aadc:	sub    esi,eax
6400aade:	mov    edx,ebx
6400aae0:	call   0x6400a830
6400aae5:	mov    eax,DWORD PTR [ebp+0x10]
6400aae8:	mov    DWORD PTR [ebp-0x4],0x0
6400aaef:	add    DWORD PTR [ebx+0x8],0x1c
6400aaf3:	mov    ebx,DWORD PTR [ebx+0x8]
6400aaf6:	lea    edi,[ebx-0x1c]
6400aaf9:	jmp    0x6400ab3a
6400aafb:	mov    ecx,DWORD PTR [ebp-0x3c]
6400aafe:	mov    edx,DWORD PTR [ecx+0x8]
6400ab01:	mov    eax,DWORD PTR [ebp+0x10]
6400ab04:	add    edx,0x1c
6400ab07:	push   edx
6400ab08:	add    eax,0x1c
6400ab0b:	push   eax
6400ab0c:	call   0x6400ab80
6400ab11:	push   0x0
6400ab13:	push   0x0
6400ab15:	call   0x640126ab
6400ab1a:	push   edi
6400ab1b:	lea    eax,[edi-0x1c]
6400ab1e:	push   edi
6400ab1f:	push   eax
6400ab20:	mov    DWORD PTR [ebp-0x34],eax
6400ab23:	call   0x6400ac20
6400ab28:	mov    DWORD PTR [ebx+0x8],eax
6400ab2b:	mov    eax,DWORD PTR [ebp-0x34]
6400ab2e:	mov    ebx,esi
6400ab30:	call   0x6400ac70
6400ab35:	lea    edi,[esi+0x1c]
6400ab38:	mov    eax,esi
6400ab3a:	lea    ebx,[ebp-0x30]
6400ab3d:	call   0x6400ac50
6400ab42:	cmp    DWORD PTR [ebp-0x18],0x10
6400ab46:	jb     0x6400ab54
6400ab48:	mov    ecx,DWORD PTR [ebp-0x2c]
6400ab4b:	push   ecx
6400ab4c:	call   0x64012262
6400ab51:	add    esp,0x4
6400ab54:	mov    ecx,DWORD PTR [ebp-0xc]
6400ab57:	mov    DWORD PTR fs:0x0,ecx
6400ab5e:	pop    ecx
6400ab5f:	pop    edi
6400ab60:	pop    esi
6400ab61:	pop    ebx
6400ab62:	mov    ecx,DWORD PTR [ebp-0x14]
6400ab65:	xor    ecx,ebp
6400ab67:	call   0x64012abc
6400ab6c:	mov    esp,ebp
6400ab6e:	pop    ebp
6400ab6f:	ret    0xc
6400ab72:	int3   
6400ab73:	int3   
6400ab74:	int3   
6400ab75:	int3   
6400ab76:	int3   
6400ab77:	int3   
6400ab78:	int3   
6400ab79:	int3   
6400ab7a:	int3   
6400ab7b:	int3   
6400ab7c:	int3   
6400ab7d:	int3   
6400ab7e:	int3   
6400ab7f:	int3   
6400ab80:	mov    eax,DWORD PTR [esp+0x8]
6400ab84:	mov    edx,DWORD PTR [esp+0x4]
6400ab88:	push   eax
6400ab89:	push   ecx
6400ab8a:	mov    ecx,DWORD PTR [esp+0x10]
6400ab8e:	push   ecx
6400ab8f:	push   edx
6400ab90:	call   0x6400ade0
6400ab95:	add    esp,0x10
6400ab98:	ret    0x8
6400ab9b:	int3   
6400ab9c:	int3   
6400ab9d:	int3   
6400ab9e:	int3   
6400ab9f:	int3   
6400aba0:	push   ebp
6400aba1:	mov    ebp,esp
6400aba3:	and    esp,0xfffffff8
6400aba6:	push   0xffffffff
6400aba8:	push   0x64022ab8
6400abad:	mov    eax,fs:0x0
6400abb3:	push   eax
6400abb4:	sub    esp,0x4c
6400abb7:	mov    eax,ds:0x6402d09c
6400abbc:	xor    eax,esp
6400abbe:	push   eax
6400abbf:	lea    eax,[esp+0x50]
6400abc3:	mov    fs:0x0,eax
6400abc9:	push   0x12
6400abcb:	push   0x64028670
6400abd0:	lea    ecx,[esp+0x10]
6400abd4:	mov    DWORD PTR [esp+0x28],0xf
6400abdc:	mov    DWORD PTR [esp+0x24],0x0
6400abe4:	mov    BYTE PTR [esp+0x14],0x0
6400abe9:	call   0x64001860
6400abee:	lea    eax,[esp+0x8]
6400abf2:	push   eax
6400abf3:	lea    ecx,[esp+0x28]
6400abf7:	mov    DWORD PTR [esp+0x5c],0x0
6400abff:	call   0x64002c70
6400ac04:	push   0x6402abf0
6400ac09:	lea    ecx,[esp+0x28]
6400ac0d:	push   ecx
6400ac0e:	mov    DWORD PTR [esp+0x2c],0x6402531c
6400ac16:	call   0x640126ab
6400ac1b:	int3   
6400ac1c:	int3   
6400ac1d:	int3   
6400ac1e:	int3   
6400ac1f:	int3   
6400ac20:	push   ecx
6400ac21:	mov    ecx,DWORD PTR [esp+0xc]
6400ac25:	mov    BYTE PTR [esp],0x0
6400ac29:	mov    eax,DWORD PTR [esp]
6400ac2c:	push   eax
6400ac2d:	mov    eax,DWORD PTR [esp+0x10]
6400ac31:	push   ecx
6400ac32:	mov    ecx,DWORD PTR [esp+0x10]
6400ac36:	push   edx
6400ac37:	mov    edx,DWORD PTR [esp+0x1c]
6400ac3b:	push   eax
6400ac3c:	call   0x6400ae50
6400ac41:	add    esp,0x14
6400ac44:	ret    0xc
6400ac47:	int3   
6400ac48:	int3   
6400ac49:	int3   
6400ac4a:	int3   
6400ac4b:	int3   
6400ac4c:	int3   
6400ac4d:	int3   
6400ac4e:	int3   
6400ac4f:	int3   
6400ac50:	push   esi
6400ac51:	mov    esi,eax
6400ac53:	cmp    esi,edi
6400ac55:	je     0x6400ac6a
6400ac57:	push   0xffffffff
6400ac59:	push   0x0
6400ac5b:	push   ebx
6400ac5c:	mov    ecx,esi
6400ac5e:	call   0x64001780
6400ac63:	add    esi,0x1c
6400ac66:	cmp    esi,edi
6400ac68:	jne    0x6400ac57
6400ac6a:	pop    esi
6400ac6b:	ret    
6400ac6c:	int3   
6400ac6d:	int3   
6400ac6e:	int3   
6400ac6f:	int3   
6400ac70:	push   ecx
6400ac71:	push   esi
6400ac72:	mov    esi,eax
6400ac74:	mov    BYTE PTR [esp+0x4],0x0
6400ac79:	mov    eax,DWORD PTR [esp+0x4]
6400ac7d:	mov    ecx,DWORD PTR [esp+0x4]
6400ac81:	mov    edx,DWORD PTR [esp+0x4]
6400ac85:	push   eax
6400ac86:	push   ecx
6400ac87:	push   edx
6400ac88:	push   edi
6400ac89:	push   ebx
6400ac8a:	mov    ecx,esi
6400ac8c:	call   0x6400af90
6400ac91:	sub    esi,ebx
6400ac93:	mov    eax,0x92492493
6400ac98:	imul   esi
6400ac9a:	add    edx,esi
6400ac9c:	sar    edx,0x4
6400ac9f:	mov    eax,edx
6400aca1:	shr    eax,0x1f
6400aca4:	add    eax,edx
6400aca6:	lea    ecx,[eax*8+0x0]
6400acad:	sub    ecx,eax
6400acaf:	add    ecx,ecx
6400acb1:	add    esp,0x14
6400acb4:	add    ecx,ecx
6400acb6:	mov    eax,edi
6400acb8:	sub    eax,ecx
6400acba:	pop    esi
6400acbb:	pop    ecx
6400acbc:	ret    
6400acbd:	int3   
6400acbe:	int3   
6400acbf:	int3   
6400acc0:	mov    ecx,DWORD PTR [esp+0x4]
6400acc4:	sub    esp,0xc
6400acc7:	test   ecx,ecx
6400acc9:	ja     0x6400ace7
6400accb:	xor    ecx,ecx
6400accd:	lea    edx,[ecx*8+0x0]
6400acd4:	sub    edx,ecx
6400acd6:	add    edx,edx
6400acd8:	add    edx,edx
6400acda:	push   edx
6400acdb:	call   0x64012641
6400ace0:	add    esp,0x4
6400ace3:	add    esp,0xc
6400ace6:	ret    
6400ace7:	or     eax,0xffffffff
6400acea:	xor    edx,edx
6400acec:	div    ecx
6400acee:	cmp    eax,0x1c
6400acf1:	jae    0x6400accd
6400acf3:	lea    eax,[esp+0x10]
6400acf7:	push   eax
6400acf8:	lea    ecx,[esp+0x4]
6400acfc:	mov    DWORD PTR [esp+0x14],0x0
6400ad04:	call   0x640122bd
6400ad09:	push   0x6402ab24
6400ad0e:	lea    ecx,[esp+0x4]
6400ad12:	push   ecx
6400ad13:	mov    DWORD PTR [esp+0x8],0x64025304
6400ad1b:	call   0x640126ab
6400ad20:	int3   
6400ad21:	int3   
6400ad22:	int3   
6400ad23:	int3   
6400ad24:	int3   
6400ad25:	int3   
6400ad26:	int3   
6400ad27:	int3   
6400ad28:	int3   
6400ad29:	int3   
6400ad2a:	int3   
6400ad2b:	int3   
6400ad2c:	int3   
6400ad2d:	int3   
6400ad2e:	int3   
6400ad2f:	int3   
6400ad30:	push   ebp
6400ad31:	mov    ebp,esp
6400ad33:	push   0xffffffff
6400ad35:	push   0x64022621
6400ad3a:	mov    eax,fs:0x0
6400ad40:	push   eax
6400ad41:	sub    esp,0x10
6400ad44:	push   ebx
6400ad45:	push   esi
6400ad46:	push   edi
6400ad47:	mov    eax,ds:0x6402d09c
6400ad4c:	xor    eax,ebp
6400ad4e:	push   eax
6400ad4f:	lea    eax,[ebp-0xc]
6400ad52:	mov    fs:0x0,eax
6400ad58:	mov    DWORD PTR [ebp-0x10],esp
6400ad5b:	mov    edi,ecx
6400ad5d:	mov    esi,DWORD PTR [ebp+0x8]
6400ad60:	xor    ebx,ebx
6400ad62:	mov    DWORD PTR [ebp-0x14],esi
6400ad65:	mov    DWORD PTR [ebp-0x4],ebx
6400ad68:	cmp    edi,ebx
6400ad6a:	jbe    0x6400adc8
6400ad6c:	mov    DWORD PTR [ebp-0x18],esi
6400ad6f:	mov    DWORD PTR [ebp-0x1c],esi
6400ad72:	cmp    esi,ebx
6400ad74:	mov    BYTE PTR [ebp-0x4],0x1
6400ad78:	je     0x6400ad95
6400ad7a:	mov    eax,DWORD PTR [ebp+0xc]
6400ad7d:	push   0xffffffff
6400ad7f:	push   ebx
6400ad80:	mov    DWORD PTR [esi+0x18],0xf
6400ad87:	mov    DWORD PTR [esi+0x14],ebx
6400ad8a:	push   eax
6400ad8b:	mov    ecx,esi
6400ad8d:	mov    BYTE PTR [esi+0x4],bl
6400ad90:	call   0x64001780
6400ad95:	sub    edi,0x1
6400ad98:	add    esi,0x1c
6400ad9b:	mov    BYTE PTR [ebp-0x4],bl
6400ad9e:	mov    DWORD PTR [ebp+0x8],esi
6400ada1:	jmp    0x6400ad68
6400ada3:	mov    esi,DWORD PTR [ebp-0x14]
6400ada6:	mov    edi,DWORD PTR [ebp+0x8]
6400ada9:	cmp    esi,edi
6400adab:	je     0x6400adbf
6400adad:	mov    ebx,DWORD PTR [ebp+0x10]
6400adb0:	push   esi
6400adb1:	mov    ecx,ebx
6400adb3:	call   0x6400ae20
6400adb8:	add    esi,0x1c
6400adbb:	cmp    esi,edi
6400adbd:	jne    0x6400adb0
6400adbf:	xor    ebx,ebx
6400adc1:	push   ebx
6400adc2:	push   ebx
6400adc3:	call   0x640126ab
6400adc8:	mov    ecx,DWORD PTR [ebp-0xc]
6400adcb:	mov    DWORD PTR fs:0x0,ecx
6400add2:	pop    ecx
6400add3:	pop    edi
6400add4:	pop    esi
6400add5:	pop    ebx
6400add6:	mov    esp,ebp
6400add8:	pop    ebp
6400add9:	ret    
6400adda:	int3   
6400addb:	int3   
6400addc:	int3   
6400addd:	int3   
6400adde:	int3   
6400addf:	int3   
6400ade0:	push   esi
6400ade1:	mov    esi,DWORD PTR [esp+0x8]
6400ade5:	push   edi
6400ade6:	mov    edi,DWORD PTR [esp+0x10]
6400adea:	cmp    esi,edi
6400adec:	je     0x6400ae18
6400adee:	push   ebx
6400adef:	xor    ebx,ebx
6400adf1:	cmp    DWORD PTR [esi+0x18],0x10
6400adf5:	jb     0x6400ae03
6400adf7:	mov    eax,DWORD PTR [esi+0x4]
6400adfa:	push   eax
6400adfb:	call   0x64012262
6400ae00:	add    esp,0x4
6400ae03:	mov    DWORD PTR [esi+0x18],0xf
6400ae0a:	mov    DWORD PTR [esi+0x14],ebx
6400ae0d:	mov    BYTE PTR [esi+0x4],bl
6400ae10:	add    esi,0x1c
6400ae13:	cmp    esi,edi
6400ae15:	jne    0x6400adf1
6400ae17:	pop    ebx
6400ae18:	pop    edi
6400ae19:	pop    esi
6400ae1a:	ret    
6400ae1b:	int3   
6400ae1c:	int3   
6400ae1d:	int3   
6400ae1e:	int3   
6400ae1f:	int3   
6400ae20:	push   esi
6400ae21:	mov    esi,DWORD PTR [esp+0x8]
6400ae25:	cmp    DWORD PTR [esi+0x18],0x10
6400ae29:	jb     0x6400ae37
6400ae2b:	mov    eax,DWORD PTR [esi+0x4]
6400ae2e:	push   eax
6400ae2f:	call   0x64012262
6400ae34:	add    esp,0x4
6400ae37:	xor    eax,eax
6400ae39:	mov    DWORD PTR [esi+0x18],0xf
6400ae40:	mov    DWORD PTR [esi+0x14],eax
6400ae43:	mov    BYTE PTR [esi+0x4],al
6400ae46:	pop    esi
6400ae47:	ret    0x4
6400ae4a:	int3   
6400ae4b:	int3   
6400ae4c:	int3   
6400ae4d:	int3   
6400ae4e:	int3   
6400ae4f:	int3   
6400ae50:	push   ebp
6400ae51:	mov    ebp,esp
6400ae53:	push   0xffffffff
6400ae55:	push   0x64022969
6400ae5a:	mov    eax,fs:0x0
6400ae60:	push   eax
6400ae61:	sub    esp,0x44
6400ae64:	mov    eax,ds:0x6402d09c
6400ae69:	xor    eax,ebp
6400ae6b:	mov    DWORD PTR [ebp-0x14],eax
6400ae6e:	push   ebx
6400ae6f:	push   esi
6400ae70:	push   edi
6400ae71:	push   eax
6400ae72:	lea    eax,[ebp-0xc]
6400ae75:	mov    fs:0x0,eax
6400ae7b:	mov    DWORD PTR [ebp-0x10],esp
6400ae7e:	mov    esi,edx
6400ae80:	xor    eax,eax
6400ae82:	mov    edi,ecx
6400ae84:	mov    DWORD PTR [ebp-0x44],esi
6400ae87:	mov    DWORD PTR [ebp-0x48],esi
6400ae8a:	mov    DWORD PTR [ebp-0x18],0xf
6400ae91:	mov    DWORD PTR [ebp-0x1c],eax
6400ae94:	mov    BYTE PTR [ebp-0x2c],al
6400ae97:	mov    DWORD PTR [ebp-0x4],eax
6400ae9a:	mov    BYTE PTR [ebp-0x4],0x1
6400ae9e:	mov    edi,edi
6400aea0:	cmp    edi,DWORD PTR [ebp+0x8]
6400aea3:	je     0x6400af59
6400aea9:	mov    DWORD PTR [ebp-0x4c],esi
6400aeac:	mov    DWORD PTR [ebp-0x50],esi
6400aeaf:	cmp    esi,eax
6400aeb1:	mov    BYTE PTR [ebp-0x4],0x2
6400aeb5:	je     0x6400aed2
6400aeb7:	push   0xffffffff
6400aeb9:	mov    DWORD PTR [esi+0x14],eax
6400aebc:	mov    DWORD PTR [esi+0x18],0xf
6400aec3:	push   eax
6400aec4:	mov    BYTE PTR [esi+0x4],al
6400aec7:	lea    eax,[ebp-0x30]
6400aeca:	push   eax
6400aecb:	mov    ecx,esi
6400aecd:	call   0x64001780
6400aed2:	mov    BYTE PTR [ebp-0x4],0x1
6400aed6:	mov    ebx,DWORD PTR [esi+0x10]
6400aed9:	mov    eax,DWORD PTR [esi+0x4]
6400aedc:	mov    ecx,DWORD PTR [esi+0x8]
6400aedf:	mov    edx,DWORD PTR [esi+0xc]
6400aee2:	mov    DWORD PTR [ebp-0x34],ebx
6400aee5:	mov    ebx,DWORD PTR [edi+0x4]
6400aee8:	mov    DWORD PTR [esi+0x4],ebx
6400aeeb:	mov    ebx,DWORD PTR [edi+0x8]
6400aeee:	mov    DWORD PTR [esi+0x8],ebx
6400aef1:	mov    ebx,DWORD PTR [edi+0xc]
6400aef4:	mov    DWORD PTR [esi+0xc],ebx
6400aef7:	mov    ebx,DWORD PTR [edi+0x10]
6400aefa:	mov    DWORD PTR [esi+0x10],ebx
6400aefd:	mov    DWORD PTR [edi+0x4],eax
6400af00:	mov    DWORD PTR [edi+0x8],ecx
6400af03:	mov    ecx,DWORD PTR [ebp-0x34]
6400af06:	mov    DWORD PTR [edi+0xc],edx
6400af09:	mov    edx,DWORD PTR [edi+0x14]
6400af0c:	mov    DWORD PTR [edi+0x10],ecx
6400af0f:	mov    eax,DWORD PTR [esi+0x14]
6400af12:	mov    DWORD PTR [esi+0x14],edx
6400af15:	mov    ecx,DWORD PTR [edi+0x18]
6400af18:	mov    DWORD PTR [edi+0x14],eax
6400af1b:	mov    eax,DWORD PTR [esi+0x18]
6400af1e:	mov    DWORD PTR [esi+0x18],ecx
6400af21:	mov    DWORD PTR [edi+0x18],eax
6400af24:	add    esi,0x1c
6400af27:	add    edi,0x1c
6400af2a:	mov    DWORD PTR [ebp-0x44],esi
6400af2d:	xor    eax,eax
6400af2f:	jmp    0x6400aea0
6400af34:	mov    esi,DWORD PTR [ebp-0x48]
6400af37:	mov    edi,DWORD PTR [ebp-0x44]
6400af3a:	cmp    esi,edi
6400af3c:	je     0x6400af50
6400af3e:	mov    ebx,DWORD PTR [ebp+0xc]
6400af41:	push   esi
6400af42:	mov    ecx,ebx
6400af44:	call   0x6400ae20
6400af49:	add    esi,0x1c
6400af4c:	cmp    esi,edi
6400af4e:	jne    0x6400af41
6400af50:	push   0x0
6400af52:	push   0x0
6400af54:	call   0x640126ab
6400af59:	cmp    DWORD PTR [ebp-0x18],0x10
6400af5d:	jb     0x6400af6b
6400af5f:	mov    edx,DWORD PTR [ebp-0x2c]
6400af62:	push   edx
6400af63:	call   0x64012262
6400af68:	add    esp,0x4
6400af6b:	mov    eax,esi
6400af6d:	mov    ecx,DWORD PTR [ebp-0xc]
6400af70:	mov    DWORD PTR fs:0x0,ecx
6400af77:	pop    ecx
6400af78:	pop    edi
6400af79:	pop    esi
6400af7a:	pop    ebx
6400af7b:	mov    ecx,DWORD PTR [ebp-0x14]
6400af7e:	xor    ecx,ebp
6400af80:	call   0x64012abc
6400af85:	mov    esp,ebp
6400af87:	pop    ebp
6400af88:	ret    
6400af89:	int3   
6400af8a:	int3   
6400af8b:	int3   
6400af8c:	int3   
6400af8d:	int3   
6400af8e:	int3   
6400af8f:	int3   
6400af90:	push   ecx
6400af91:	mov    eax,ds:0x6402d09c
6400af96:	xor    eax,esp
6400af98:	mov    DWORD PTR [esp],eax
6400af9b:	cmp    DWORD PTR [esp+0x8],ecx
6400af9f:	mov    eax,DWORD PTR [esp+0xc]
6400afa3:	je     0x6400b008
6400afa5:	push   ebx
6400afa6:	push   ebp
6400afa7:	push   esi
6400afa8:	push   edi
6400afa9:	lea    esp,[esp+0x0]
6400afb0:	mov    ebp,DWORD PTR [ecx-0x18]
6400afb3:	mov    edx,DWORD PTR [eax-0x18]
6400afb6:	mov    esi,DWORD PTR [eax-0x14]
6400afb9:	mov    edi,DWORD PTR [eax-0x10]
6400afbc:	mov    ebx,DWORD PTR [eax-0xc]
6400afbf:	sub    ecx,0x1c
6400afc2:	sub    eax,0x1c
6400afc5:	cmp    ecx,DWORD PTR [esp+0x18]
6400afc9:	mov    DWORD PTR [eax+0x4],ebp
6400afcc:	mov    ebp,DWORD PTR [ecx+0x8]
6400afcf:	mov    DWORD PTR [eax+0x8],ebp
6400afd2:	mov    ebp,DWORD PTR [ecx+0xc]
6400afd5:	mov    DWORD PTR [eax+0xc],ebp
6400afd8:	mov    ebp,DWORD PTR [ecx+0x10]
6400afdb:	mov    DWORD PTR [eax+0x10],ebp
6400afde:	mov    DWORD PTR [ecx+0x4],edx
6400afe1:	mov    DWORD PTR [ecx+0x8],esi
6400afe4:	mov    esi,DWORD PTR [ecx+0x14]
6400afe7:	mov    DWORD PTR [ecx+0xc],edi
6400afea:	mov    DWORD PTR [ecx+0x10],ebx
6400afed:	mov    edx,DWORD PTR [eax+0x14]
6400aff0:	mov    DWORD PTR [eax+0x14],esi
6400aff3:	mov    esi,DWORD PTR [ecx+0x18]
6400aff6:	mov    DWORD PTR [ecx+0x14],edx
6400aff9:	mov    edx,DWORD PTR [eax+0x18]
6400affc:	mov    DWORD PTR [eax+0x18],esi
6400afff:	mov    DWORD PTR [ecx+0x18],edx
6400b002:	jne    0x6400afb0
6400b004:	pop    edi
6400b005:	pop    esi
6400b006:	pop    ebp
6400b007:	pop    ebx
6400b008:	mov    ecx,DWORD PTR [esp]
6400b00b:	xor    ecx,esp
6400b00d:	call   0x64012abc
6400b012:	pop    ecx
6400b013:	ret    
6400b014:	int3   
6400b015:	int3   
6400b016:	int3   
6400b017:	int3   
6400b018:	int3   
6400b019:	int3   
6400b01a:	int3   
6400b01b:	int3   
6400b01c:	int3   
6400b01d:	int3   
6400b01e:	int3   
6400b01f:	int3   
6400b020:	sub    esp,0x800
6400b026:	push   ebx
6400b027:	push   ebp
6400b028:	xor    ecx,ecx
6400b02a:	push   esi
6400b02b:	lea    eax,[ecx+0x1]
6400b02e:	push   edi
6400b02f:	nop
6400b030:	mov    edx,eax
6400b032:	and    dl,0x80
6400b035:	neg    dl
6400b037:	lea    esi,[eax+eax*1]
6400b03a:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6400b041:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6400b045:	sbb    edx,edx
6400b047:	and    edx,0x1b
6400b04a:	xor    edx,esi
6400b04c:	xor    edx,eax
6400b04e:	and    edx,0xff
6400b054:	add    ecx,0x1
6400b057:	cmp    ecx,0x100
6400b05d:	mov    eax,edx
6400b05f:	jl     0x6400b030
6400b061:	mov    eax,0x1
6400b066:	mov    ecx,0x6402f940
6400b06b:	jmp    0x6400b070
6400b06d:	lea    ecx,[ecx+0x0]
6400b070:	mov    edx,eax
6400b072:	and    dl,0x80
6400b075:	neg    dl
6400b077:	mov    DWORD PTR [ecx],eax
6400b079:	sbb    edx,edx
6400b07b:	and    edx,0x1b
6400b07e:	add    eax,eax
6400b080:	xor    edx,eax
6400b082:	and    edx,0xff
6400b088:	add    ecx,0x4
6400b08b:	cmp    ecx,0x6402f968
6400b091:	mov    eax,edx
6400b093:	jl     0x6400b070
6400b095:	mov    BYTE PTR ds:0x6402f040,0x63
6400b09c:	mov    BYTE PTR ds:0x640311cb,0x0
6400b0a3:	mov    ebx,0x1
6400b0a8:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6400b0ac:	add    ecx,ecx
6400b0ae:	add    ecx,ecx
6400b0b0:	lea    edx,[esp+0x80c]
6400b0b7:	sub    edx,ecx
6400b0b9:	mov    eax,DWORD PTR [edx]
6400b0bb:	mov    ecx,eax
6400b0bd:	sar    ecx,0x7
6400b0c0:	lea    edx,[eax+eax*1]
6400b0c3:	or     ecx,edx
6400b0c5:	and    ecx,0xff
6400b0cb:	xor    eax,ecx
6400b0cd:	mov    edx,ecx
6400b0cf:	sar    edx,0x7
6400b0d2:	add    ecx,ecx
6400b0d4:	or     edx,ecx
6400b0d6:	and    edx,0xff
6400b0dc:	xor    eax,edx
6400b0de:	mov    ecx,edx
6400b0e0:	add    edx,edx
6400b0e2:	sar    ecx,0x7
6400b0e5:	or     ecx,edx
6400b0e7:	and    ecx,0xff
6400b0ed:	xor    eax,ecx
6400b0ef:	mov    edx,ecx
6400b0f1:	sar    edx,0x7
6400b0f4:	add    ecx,ecx
6400b0f6:	or     edx,ecx
6400b0f8:	xor    edx,0x63
6400b0fb:	and    edx,0xff
6400b101:	xor    eax,edx
6400b103:	mov    BYTE PTR [ebx+0x6402f040],al
6400b109:	mov    BYTE PTR [eax+0x64031168],bl
6400b10f:	add    ebx,0x1
6400b112:	cmp    ebx,0x100
6400b118:	jl     0x6400b0a8
6400b11a:	xor    ecx,ecx
6400b11c:	lea    esp,[esp+0x0]
6400b120:	movzx  edx,BYTE PTR [ecx+0x6402f040]
6400b127:	mov    eax,edx
6400b129:	and    al,0x80
6400b12b:	neg    al
6400b12d:	lea    esi,[edx+edx*1]
6400b130:	sbb    eax,eax
6400b132:	and    eax,0x1b
6400b135:	xor    eax,esi
6400b137:	and    eax,0xff
6400b13c:	mov    esi,eax
6400b13e:	xor    eax,edx
6400b140:	shl    eax,0x8
6400b143:	xor    eax,edx
6400b145:	shl    eax,0x8
6400b148:	xor    eax,edx
6400b14a:	shl    eax,0x8
6400b14d:	xor    eax,esi
6400b14f:	mov    DWORD PTR [ecx*4+0x64030d68],eax
6400b156:	rol    eax,0x8
6400b159:	mov    DWORD PTR [ecx*4+0x64030968],eax
6400b160:	rol    eax,0x8
6400b163:	mov    DWORD PTR [ecx*4+0x64030568],eax
6400b16a:	rol    eax,0x8
6400b16d:	mov    DWORD PTR [ecx*4+0x64030168],eax
6400b174:	movzx  eax,BYTE PTR [ecx+0x64031168]
6400b17b:	test   eax,eax
6400b17d:	je     0x6400b1d1
6400b17f:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6400b183:	mov    edx,DWORD PTR [esp+0x48]
6400b187:	lea    eax,[esi+edx*1]
6400b18a:	cdq    
6400b18b:	mov    edi,0xff
6400b190:	idiv   edi
6400b192:	mov    eax,DWORD PTR [esp+0x34]
6400b196:	add    eax,esi
6400b198:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6400b19f:	cdq    
6400b1a0:	idiv   edi
6400b1a2:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6400b1a9:	mov    edx,DWORD PTR [esp+0x44]
6400b1ad:	lea    eax,[esi+edx*1]
6400b1b0:	cdq    
6400b1b1:	idiv   edi
6400b1b3:	mov    eax,DWORD PTR [esp+0x3c]
6400b1b7:	add    eax,esi
6400b1b9:	mov    esi,0xff
6400b1be:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6400b1c5:	cdq    
6400b1c6:	idiv   esi
6400b1c8:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6400b1cf:	jmp    0x6400b1d9
6400b1d1:	xor    ebp,ebp
6400b1d3:	xor    ebx,ebx
6400b1d5:	xor    edi,edi
6400b1d7:	xor    edx,edx
6400b1d9:	shl    edx,0x8
6400b1dc:	xor    edx,edi
6400b1de:	shl    edx,0x8
6400b1e1:	xor    edx,ebx
6400b1e3:	shl    edx,0x8
6400b1e6:	xor    edx,ebp
6400b1e8:	mov    DWORD PTR [ecx*4+0x6402fd68],edx
6400b1ef:	rol    edx,0x8
6400b1f2:	mov    DWORD PTR [ecx*4+0x6402f968],edx
6400b1f9:	rol    edx,0x8
6400b1fc:	mov    DWORD PTR [ecx*4+0x6402f540],edx
6400b203:	rol    edx,0x8
6400b206:	mov    DWORD PTR [ecx*4+0x6402f140],edx
6400b20d:	add    ecx,0x1
6400b210:	cmp    ecx,0x100
6400b216:	jl     0x6400b120
6400b21c:	pop    edi
6400b21d:	pop    esi
6400b21e:	pop    ebp
6400b21f:	pop    ebx
6400b220:	add    esp,0x800
6400b226:	ret    
6400b227:	int3   
6400b228:	int3   
6400b229:	int3   
6400b22a:	int3   
6400b22b:	int3   
6400b22c:	int3   
6400b22d:	int3   
6400b22e:	int3   
6400b22f:	int3   
6400b230:	cmp    DWORD PTR ds:0x6403126c,0x0
6400b237:	push   ebx
6400b238:	push   esi
6400b239:	push   edi
6400b23a:	mov    edi,eax
6400b23c:	jne    0x6400b24d
6400b23e:	call   0x6400b020
6400b243:	mov    DWORD PTR ds:0x6403126c,0x1
6400b24d:	lea    eax,[edi+0x8]
6400b250:	mov    ecx,0x6402e382
6400b255:	mov    esi,eax
6400b257:	mov    DWORD PTR [edi],0xa
6400b25d:	mov    DWORD PTR [edi+0x4],eax
6400b260:	sub    esi,ecx
6400b262:	movzx  ebx,BYTE PTR [ecx-0x1]
6400b266:	xor    edx,edx
6400b268:	mov    dh,BYTE PTR [ecx+0x1]
6400b26b:	add    ecx,0x4
6400b26e:	mov    dl,BYTE PTR [ecx-0x4]
6400b271:	shl    edx,0x8
6400b274:	or     edx,ebx
6400b276:	movzx  ebx,BYTE PTR [ecx-0x6]
6400b27a:	shl    edx,0x8
6400b27d:	or     edx,ebx
6400b27f:	cmp    ecx,0x6402e392
6400b285:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6400b289:	jl     0x6400b262
6400b28b:	mov    edi,DWORD PTR [edi]
6400b28d:	sub    edi,0xa
6400b290:	je     0x6400b54c
6400b296:	sub    edi,0x2
6400b299:	je     0x6400b37f
6400b29f:	sub    edi,0x2
6400b2a2:	jne    0x6400b72f
6400b2a8:	push   ebp
6400b2a9:	mov    ebp,0x6402f940
6400b2ae:	mov    edi,edi
6400b2b0:	mov    edi,DWORD PTR [eax+0x1c]
6400b2b3:	xor    edx,edx
6400b2b5:	mov    ecx,edi
6400b2b7:	and    ecx,0xff
6400b2bd:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b2c3:	movzx  ecx,BYTE PTR [eax+0x1f]
6400b2c7:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b2ce:	xor    edx,ecx
6400b2d0:	movzx  ecx,BYTE PTR [eax+0x1e]
6400b2d4:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b2db:	shl    edx,0x8
6400b2de:	xor    edx,ecx
6400b2e0:	movzx  ecx,BYTE PTR [eax+0x1d]
6400b2e4:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b2eb:	mov    esi,DWORD PTR [eax+0x8]
6400b2ee:	shl    edx,0x8
6400b2f1:	xor    edx,ecx
6400b2f3:	xor    edx,DWORD PTR [eax]
6400b2f5:	xor    ebx,ebx
6400b2f7:	mov    ecx,edx
6400b2f9:	xor    ecx,DWORD PTR [ebp+0x0]
6400b2fc:	mov    edx,DWORD PTR [eax+0x4]
6400b2ff:	xor    edx,ecx
6400b301:	mov    DWORD PTR [eax+0x20],ecx
6400b304:	mov    ecx,DWORD PTR [eax+0xc]
6400b307:	xor    esi,edx
6400b309:	xor    ecx,esi
6400b30b:	mov    DWORD PTR [eax+0x2c],ecx
6400b30e:	mov    DWORD PTR [eax+0x24],edx
6400b311:	movzx  edx,BYTE PTR [eax+0x2f]
6400b315:	mov    DWORD PTR [eax+0x28],esi
6400b318:	mov    bh,BYTE PTR [edx+0x6402f040]
6400b31e:	movzx  edx,BYTE PTR [eax+0x2e]
6400b322:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b329:	xor    ebx,edx
6400b32b:	movzx  edx,BYTE PTR [eax+0x2d]
6400b32f:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b336:	and    ecx,0xff
6400b33c:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b343:	shl    ebx,0x8
6400b346:	xor    ebx,edx
6400b348:	mov    edx,DWORD PTR [eax+0x14]
6400b34b:	shl    ebx,0x8
6400b34e:	xor    ecx,ebx
6400b350:	xor    ecx,DWORD PTR [eax+0x10]
6400b353:	add    ebp,0x4
6400b356:	xor    edx,ecx
6400b358:	mov    DWORD PTR [eax+0x30],ecx
6400b35b:	mov    ecx,DWORD PTR [eax+0x18]
6400b35e:	xor    ecx,edx
6400b360:	mov    DWORD PTR [eax+0x38],ecx
6400b363:	xor    ecx,edi
6400b365:	mov    DWORD PTR [eax+0x34],edx
6400b368:	mov    DWORD PTR [eax+0x3c],ecx
6400b36b:	add    eax,0x20
6400b36e:	cmp    ebp,0x6402f95c
6400b374:	jl     0x6400b2b0
6400b37a:	pop    ebp
6400b37b:	pop    edi
6400b37c:	pop    esi
6400b37d:	pop    ebx
6400b37e:	ret    
6400b37f:	mov    esi,0x6402f944
6400b384:	mov    edi,DWORD PTR [eax+0x14]
6400b387:	xor    ecx,ecx
6400b389:	mov    edx,edi
6400b38b:	and    edx,0xff
6400b391:	mov    ch,BYTE PTR [edx+0x6402f040]
6400b397:	movzx  edx,BYTE PTR [eax+0x17]
6400b39b:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b3a2:	xor    ecx,edx
6400b3a4:	movzx  edx,BYTE PTR [eax+0x16]
6400b3a8:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b3af:	shl    ecx,0x8
6400b3b2:	xor    ecx,edx
6400b3b4:	movzx  edx,BYTE PTR [eax+0x15]
6400b3b8:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b3bf:	shl    ecx,0x8
6400b3c2:	xor    ecx,edx
6400b3c4:	xor    ecx,DWORD PTR [esi-0x4]
6400b3c7:	mov    edx,DWORD PTR [eax+0x4]
6400b3ca:	xor    ecx,DWORD PTR [eax]
6400b3cc:	xor    edx,ecx
6400b3ce:	mov    DWORD PTR [eax+0x18],ecx
6400b3d1:	mov    ecx,DWORD PTR [eax+0x8]
6400b3d4:	xor    ecx,edx
6400b3d6:	mov    DWORD PTR [eax+0x1c],edx
6400b3d9:	mov    edx,DWORD PTR [eax+0xc]
6400b3dc:	xor    edx,ecx
6400b3de:	mov    DWORD PTR [eax+0x20],ecx
6400b3e1:	mov    ecx,DWORD PTR [eax+0x10]
6400b3e4:	xor    ecx,edx
6400b3e6:	mov    DWORD PTR [eax+0x28],ecx
6400b3e9:	mov    DWORD PTR [eax+0x24],edx
6400b3ec:	xor    ecx,edi
6400b3ee:	mov    DWORD PTR [eax+0x2c],ecx
6400b3f1:	and    ecx,0xff
6400b3f7:	xor    edx,edx
6400b3f9:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b3ff:	movzx  ecx,BYTE PTR [eax+0x2f]
6400b403:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b40a:	xor    edx,ecx
6400b40c:	movzx  ecx,BYTE PTR [eax+0x2e]
6400b410:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b417:	shl    edx,0x8
6400b41a:	xor    edx,ecx
6400b41c:	movzx  ecx,BYTE PTR [eax+0x2d]
6400b420:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b427:	mov    edi,DWORD PTR [eax+0x28]
6400b42a:	shl    edx,0x8
6400b42d:	xor    edx,ecx
6400b42f:	xor    edx,DWORD PTR [eax+0x18]
6400b432:	mov    ecx,edx
6400b434:	xor    ecx,DWORD PTR [esi]
6400b436:	mov    edx,DWORD PTR [eax+0x1c]
6400b439:	xor    edx,ecx
6400b43b:	mov    DWORD PTR [eax+0x30],ecx
6400b43e:	mov    ecx,DWORD PTR [eax+0x20]
6400b441:	xor    ecx,edx
6400b443:	mov    DWORD PTR [eax+0x34],edx
6400b446:	mov    edx,DWORD PTR [eax+0x24]
6400b449:	xor    edx,ecx
6400b44b:	mov    DWORD PTR [eax+0x38],ecx
6400b44e:	mov    ecx,DWORD PTR [eax+0x2c]
6400b451:	xor    edi,edx
6400b453:	mov    DWORD PTR [eax+0x3c],edx
6400b456:	xor    ecx,edi
6400b458:	mov    DWORD PTR [eax+0x44],ecx
6400b45b:	and    ecx,0xff
6400b461:	xor    edx,edx
6400b463:	mov    DWORD PTR [eax+0x40],edi
6400b466:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b46c:	movzx  ecx,BYTE PTR [eax+0x47]
6400b470:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b477:	xor    edx,ecx
6400b479:	movzx  ecx,BYTE PTR [eax+0x46]
6400b47d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b484:	shl    edx,0x8
6400b487:	xor    edx,ecx
6400b489:	movzx  ecx,BYTE PTR [eax+0x45]
6400b48d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b494:	shl    edx,0x8
6400b497:	xor    edx,ecx
6400b499:	xor    edx,DWORD PTR [esi+0x4]
6400b49c:	mov    ecx,edx
6400b49e:	xor    ecx,DWORD PTR [eax+0x30]
6400b4a1:	mov    edx,DWORD PTR [eax+0x34]
6400b4a4:	xor    edx,ecx
6400b4a6:	mov    DWORD PTR [eax+0x48],ecx
6400b4a9:	mov    ecx,DWORD PTR [eax+0x38]
6400b4ac:	xor    ecx,edx
6400b4ae:	mov    DWORD PTR [eax+0x4c],edx
6400b4b1:	mov    edx,DWORD PTR [eax+0x3c]
6400b4b4:	xor    edx,ecx
6400b4b6:	mov    DWORD PTR [eax+0x50],ecx
6400b4b9:	mov    ecx,DWORD PTR [eax+0x44]
6400b4bc:	xor    edi,edx
6400b4be:	mov    DWORD PTR [eax+0x54],edx
6400b4c1:	xor    ecx,edi
6400b4c3:	mov    DWORD PTR [eax+0x5c],ecx
6400b4c6:	and    ecx,0xff
6400b4cc:	xor    edx,edx
6400b4ce:	mov    DWORD PTR [eax+0x58],edi
6400b4d1:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b4d7:	movzx  ecx,BYTE PTR [eax+0x5f]
6400b4db:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b4e2:	xor    edx,ecx
6400b4e4:	movzx  ecx,BYTE PTR [eax+0x5e]
6400b4e8:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b4ef:	shl    edx,0x8
6400b4f2:	xor    edx,ecx
6400b4f4:	movzx  ecx,BYTE PTR [eax+0x5d]
6400b4f8:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b4ff:	shl    edx,0x8
6400b502:	xor    edx,ecx
6400b504:	xor    edx,DWORD PTR [esi+0x8]
6400b507:	add    esi,0x10
6400b50a:	mov    ecx,edx
6400b50c:	xor    ecx,DWORD PTR [eax+0x48]
6400b50f:	mov    edx,DWORD PTR [eax+0x4c]
6400b512:	xor    edx,ecx
6400b514:	mov    DWORD PTR [eax+0x60],ecx
6400b517:	mov    ecx,DWORD PTR [eax+0x50]
6400b51a:	xor    ecx,edx
6400b51c:	mov    DWORD PTR [eax+0x64],edx
6400b51f:	mov    edx,DWORD PTR [eax+0x54]
6400b522:	xor    edx,ecx
6400b524:	mov    DWORD PTR [eax+0x68],ecx
6400b527:	mov    DWORD PTR [eax+0x6c],edx
6400b52a:	mov    ecx,edi
6400b52c:	xor    ecx,edx
6400b52e:	mov    edx,DWORD PTR [eax+0x5c]
6400b531:	xor    edx,ecx
6400b533:	mov    DWORD PTR [eax+0x70],ecx
6400b536:	mov    DWORD PTR [eax+0x74],edx
6400b539:	add    eax,0x60
6400b53c:	cmp    esi,0x6402f964
6400b542:	jl     0x6400b384
6400b548:	pop    edi
6400b549:	pop    esi
6400b54a:	pop    ebx
6400b54b:	ret    
6400b54c:	mov    ecx,0x6402f944
6400b551:	mov    esi,DWORD PTR [eax+0xc]
6400b554:	mov    edx,esi
6400b556:	and    edx,0xff
6400b55c:	xor    ebx,ebx
6400b55e:	mov    bh,BYTE PTR [edx+0x6402f040]
6400b564:	movzx  edx,BYTE PTR [eax+0xf]
6400b568:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b56f:	xor    ebx,edx
6400b571:	movzx  edx,BYTE PTR [eax+0xe]
6400b575:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b57c:	mov    edi,DWORD PTR [eax+0x4]
6400b57f:	shl    ebx,0x8
6400b582:	xor    ebx,edx
6400b584:	movzx  edx,BYTE PTR [eax+0xd]
6400b588:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b58f:	shl    ebx,0x8
6400b592:	xor    ebx,edx
6400b594:	xor    ebx,DWORD PTR [ecx-0x4]
6400b597:	mov    edx,ebx
6400b599:	xor    edx,DWORD PTR [eax]
6400b59b:	mov    DWORD PTR [eax+0x10],edx
6400b59e:	xor    edi,edx
6400b5a0:	mov    edx,DWORD PTR [eax+0x8]
6400b5a3:	xor    edx,edi
6400b5a5:	xor    esi,edx
6400b5a7:	mov    DWORD PTR [eax+0x18],edx
6400b5aa:	mov    DWORD PTR [eax+0x1c],esi
6400b5ad:	and    esi,0xff
6400b5b3:	xor    edx,edx
6400b5b5:	mov    DWORD PTR [eax+0x14],edi
6400b5b8:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b5be:	movzx  esi,BYTE PTR [eax+0x1f]
6400b5c2:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b5c9:	xor    edx,esi
6400b5cb:	movzx  esi,BYTE PTR [eax+0x1e]
6400b5cf:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b5d6:	shl    edx,0x8
6400b5d9:	xor    edx,esi
6400b5db:	movzx  esi,BYTE PTR [eax+0x1d]
6400b5df:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b5e6:	shl    edx,0x8
6400b5e9:	xor    edx,esi
6400b5eb:	xor    edx,DWORD PTR [ecx]
6400b5ed:	mov    esi,edi
6400b5ef:	xor    edx,DWORD PTR [eax+0x10]
6400b5f2:	xor    esi,edx
6400b5f4:	mov    DWORD PTR [eax+0x20],edx
6400b5f7:	mov    edx,DWORD PTR [eax+0x18]
6400b5fa:	xor    edx,esi
6400b5fc:	mov    DWORD PTR [eax+0x24],esi
6400b5ff:	mov    esi,DWORD PTR [eax+0x1c]
6400b602:	xor    esi,edx
6400b604:	mov    DWORD PTR [eax+0x28],edx
6400b607:	mov    DWORD PTR [eax+0x2c],esi
6400b60a:	and    esi,0xff
6400b610:	xor    edx,edx
6400b612:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b618:	movzx  esi,BYTE PTR [eax+0x2f]
6400b61c:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b623:	xor    edx,esi
6400b625:	movzx  esi,BYTE PTR [eax+0x2e]
6400b629:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b630:	shl    edx,0x8
6400b633:	xor    edx,esi
6400b635:	movzx  esi,BYTE PTR [eax+0x2d]
6400b639:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b640:	shl    edx,0x8
6400b643:	xor    edx,esi
6400b645:	xor    edx,DWORD PTR [ecx+0x4]
6400b648:	mov    esi,DWORD PTR [eax+0x24]
6400b64b:	xor    edx,DWORD PTR [eax+0x20]
6400b64e:	xor    esi,edx
6400b650:	mov    DWORD PTR [eax+0x30],edx
6400b653:	mov    edx,DWORD PTR [eax+0x28]
6400b656:	xor    edx,esi
6400b658:	mov    DWORD PTR [eax+0x34],esi
6400b65b:	mov    esi,DWORD PTR [eax+0x2c]
6400b65e:	xor    esi,edx
6400b660:	mov    DWORD PTR [eax+0x3c],esi
6400b663:	mov    DWORD PTR [eax+0x38],edx
6400b666:	and    esi,0xff
6400b66c:	xor    edx,edx
6400b66e:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b674:	movzx  esi,BYTE PTR [eax+0x3f]
6400b678:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b67f:	xor    edx,esi
6400b681:	movzx  esi,BYTE PTR [eax+0x3e]
6400b685:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b68c:	shl    edx,0x8
6400b68f:	xor    edx,esi
6400b691:	movzx  esi,BYTE PTR [eax+0x3d]
6400b695:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b69c:	shl    edx,0x8
6400b69f:	xor    edx,esi
6400b6a1:	xor    edx,DWORD PTR [ecx+0x8]
6400b6a4:	mov    esi,DWORD PTR [eax+0x34]
6400b6a7:	xor    edx,DWORD PTR [eax+0x30]
6400b6aa:	add    ecx,0x14
6400b6ad:	xor    esi,edx
6400b6af:	mov    DWORD PTR [eax+0x40],edx
6400b6b2:	mov    edx,DWORD PTR [eax+0x38]
6400b6b5:	xor    edx,esi
6400b6b7:	mov    DWORD PTR [eax+0x44],esi
6400b6ba:	mov    esi,DWORD PTR [eax+0x3c]
6400b6bd:	xor    esi,edx
6400b6bf:	mov    DWORD PTR [eax+0x48],edx
6400b6c2:	mov    DWORD PTR [eax+0x4c],esi
6400b6c5:	and    esi,0xff
6400b6cb:	xor    edx,edx
6400b6cd:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b6d3:	movzx  esi,BYTE PTR [eax+0x4f]
6400b6d7:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b6de:	xor    edx,esi
6400b6e0:	movzx  esi,BYTE PTR [eax+0x4e]
6400b6e4:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b6eb:	shl    edx,0x8
6400b6ee:	xor    edx,esi
6400b6f0:	movzx  esi,BYTE PTR [eax+0x4d]
6400b6f4:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b6fb:	shl    edx,0x8
6400b6fe:	xor    edx,esi
6400b700:	xor    edx,DWORD PTR [ecx-0x8]
6400b703:	mov    esi,DWORD PTR [eax+0x44]
6400b706:	xor    edx,DWORD PTR [eax+0x40]
6400b709:	add    eax,0x50
6400b70c:	xor    esi,edx
6400b70e:	mov    DWORD PTR [eax],edx
6400b710:	mov    edx,DWORD PTR [eax-0x8]
6400b713:	xor    edx,esi
6400b715:	mov    DWORD PTR [eax+0x4],esi
6400b718:	mov    esi,DWORD PTR [eax-0x4]
6400b71b:	xor    esi,edx
6400b71d:	cmp    ecx,0x6402f96c
6400b723:	mov    DWORD PTR [eax+0x8],edx
6400b726:	mov    DWORD PTR [eax+0xc],esi
6400b729:	jl     0x6400b551
6400b72f:	pop    edi
6400b730:	pop    esi
6400b731:	pop    ebx
6400b732:	ret    
6400b733:	int3   
6400b734:	int3   
6400b735:	int3   
6400b736:	int3   
6400b737:	int3   
6400b738:	int3   
6400b739:	int3   
6400b73a:	int3   
6400b73b:	int3   
6400b73c:	int3   
6400b73d:	int3   
6400b73e:	int3   
6400b73f:	int3   
6400b740:	sub    esp,0x11c
6400b746:	push   esi
6400b747:	push   edi
6400b748:	mov    edi,eax
6400b74a:	lea    esi,[edi+0x8]
6400b74d:	lea    eax,[esp+0x8]
6400b751:	mov    DWORD PTR [edi],0xa
6400b757:	mov    DWORD PTR [edi+0x4],esi
6400b75a:	call   0x6400b230
6400b75f:	mov    eax,DWORD PTR [esp+0x8]
6400b763:	shl    eax,0x4
6400b766:	add    eax,DWORD PTR [esp+0xc]
6400b76a:	add    esi,0x4
6400b76d:	mov    ecx,DWORD PTR [eax]
6400b76f:	mov    DWORD PTR [esi-0x4],ecx
6400b772:	mov    edx,DWORD PTR [eax+0x4]
6400b775:	add    eax,0x4
6400b778:	mov    DWORD PTR [esi],edx
6400b77a:	mov    ecx,DWORD PTR [eax+0x4]
6400b77d:	add    eax,0x4
6400b780:	add    esi,0x4
6400b783:	mov    DWORD PTR [esi],ecx
6400b785:	mov    edx,DWORD PTR [eax+0x4]
6400b788:	add    eax,0x4
6400b78b:	add    esi,0x4
6400b78e:	mov    DWORD PTR [esi],edx
6400b790:	mov    ecx,DWORD PTR [edi]
6400b792:	sub    ecx,0x1
6400b795:	add    esi,0x4
6400b798:	sub    eax,0x1c
6400b79b:	test   ecx,ecx
6400b79d:	jle    0x6400b8f5
6400b7a3:	movzx  edx,BYTE PTR [eax+0x3]
6400b7a7:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b7ae:	mov    edx,DWORD PTR [edx*4+0x6402f140]
6400b7b5:	movzx  edi,BYTE PTR [eax+0x2]
6400b7b9:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b7c0:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b7c7:	movzx  edi,BYTE PTR [eax+0x1]
6400b7cb:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b7d2:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b7d9:	mov    edi,DWORD PTR [eax]
6400b7db:	and    edi,0xff
6400b7e1:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b7e8:	xor    edx,DWORD PTR [edi*4+0x6402fd68]
6400b7ef:	add    eax,0x10
6400b7f2:	mov    DWORD PTR [esi],edx
6400b7f4:	mov    edx,DWORD PTR [eax-0xc]
6400b7f7:	movzx  edi,BYTE PTR [eax-0x9]
6400b7fb:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b802:	and    edx,0xff
6400b808:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b80f:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400b816:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400b81d:	movzx  edi,BYTE PTR [eax-0xa]
6400b821:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b828:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b82f:	movzx  edi,BYTE PTR [eax-0xb]
6400b833:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b83a:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b841:	sub    ecx,0x1
6400b844:	mov    DWORD PTR [esi+0x4],edx
6400b847:	mov    edx,DWORD PTR [eax-0x8]
6400b84a:	movzx  edi,BYTE PTR [eax-0x5]
6400b84e:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b855:	and    edx,0xff
6400b85b:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b862:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400b869:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400b870:	movzx  edi,BYTE PTR [eax-0x6]
6400b874:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b87b:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b882:	movzx  edi,BYTE PTR [eax-0x7]
6400b886:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b88d:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b894:	add    esi,0x10
6400b897:	mov    DWORD PTR [esi-0x8],edx
6400b89a:	mov    edx,DWORD PTR [eax-0x4]
6400b89d:	movzx  edi,BYTE PTR [eax-0x1]
6400b8a1:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b8a8:	and    edx,0xff
6400b8ae:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b8b5:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400b8bc:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400b8c3:	movzx  edi,BYTE PTR [eax-0x2]
6400b8c7:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b8ce:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b8d5:	movzx  edi,BYTE PTR [eax-0x3]
6400b8d9:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b8e0:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b8e7:	sub    eax,0x20
6400b8ea:	test   ecx,ecx
6400b8ec:	mov    DWORD PTR [esi-0x4],edx
6400b8ef:	jg     0x6400b7a3
6400b8f5:	mov    ecx,DWORD PTR [eax]
6400b8f7:	mov    DWORD PTR [esi],ecx
6400b8f9:	mov    edx,DWORD PTR [eax+0x4]
6400b8fc:	add    esi,0x4
6400b8ff:	add    eax,0x4
6400b902:	mov    DWORD PTR [esi],edx
6400b904:	mov    ecx,DWORD PTR [eax+0x4]
6400b907:	add    esi,0x4
6400b90a:	add    eax,0x4
6400b90d:	mov    DWORD PTR [esi],ecx
6400b90f:	mov    edx,DWORD PTR [eax+0x4]
6400b912:	pop    edi
6400b913:	mov    DWORD PTR [esi+0x4],edx
6400b916:	pop    esi
6400b917:	add    esp,0x11c
6400b91d:	ret    
6400b91e:	int3   
6400b91f:	int3   
6400b920:	sub    esp,0x10
6400b923:	xor    ecx,ecx
6400b925:	push   ebx
6400b926:	push   ebp
6400b927:	mov    ebp,DWORD PTR [esp+0x1c]
6400b92b:	push   esi
6400b92c:	push   edi
6400b92d:	mov    edi,eax
6400b92f:	mov    ch,BYTE PTR [edi+0x3]
6400b932:	movzx  edx,BYTE PTR [edi+0x1]
6400b936:	mov    eax,DWORD PTR [ebp+0x4]
6400b939:	movzx  esi,BYTE PTR [edi+0x9]
6400b93d:	mov    cl,BYTE PTR [edi+0x2]
6400b940:	movzx  ebx,BYTE PTR [edi+0xd]
6400b944:	add    eax,0x4
6400b947:	add    eax,0x4
6400b94a:	add    eax,0x4
6400b94d:	shl    ecx,0x8
6400b950:	or     ecx,edx
6400b952:	movzx  edx,BYTE PTR [edi]
6400b955:	shl    ecx,0x8
6400b958:	or     ecx,edx
6400b95a:	xor    ecx,DWORD PTR [eax-0xc]
6400b95d:	movzx  edx,BYTE PTR [edi+0x5]
6400b961:	mov    DWORD PTR [esp+0x24],ecx
6400b965:	xor    ecx,ecx
6400b967:	mov    ch,BYTE PTR [edi+0x7]
6400b96a:	add    eax,0x4
6400b96d:	mov    cl,BYTE PTR [edi+0x6]
6400b970:	shl    ecx,0x8
6400b973:	or     ecx,edx
6400b975:	movzx  edx,BYTE PTR [edi+0x4]
6400b979:	shl    ecx,0x8
6400b97c:	or     ecx,edx
6400b97e:	xor    edx,edx
6400b980:	mov    dh,BYTE PTR [edi+0xb]
6400b983:	xor    ecx,DWORD PTR [eax-0xc]
6400b986:	mov    dl,BYTE PTR [edi+0xa]
6400b989:	shl    edx,0x8
6400b98c:	or     edx,esi
6400b98e:	movzx  esi,BYTE PTR [edi+0x8]
6400b992:	shl    edx,0x8
6400b995:	or     edx,esi
6400b997:	xor    edx,DWORD PTR [eax-0x8]
6400b99a:	mov    esi,edx
6400b99c:	xor    edx,edx
6400b99e:	mov    dh,BYTE PTR [edi+0xf]
6400b9a1:	mov    DWORD PTR [esp+0x10],esi
6400b9a5:	mov    dl,BYTE PTR [edi+0xe]
6400b9a8:	movzx  edi,BYTE PTR [edi+0xc]
6400b9ac:	shl    edx,0x8
6400b9af:	or     edx,ebx
6400b9b1:	shl    edx,0x8
6400b9b4:	or     edx,edi
6400b9b6:	xor    edx,DWORD PTR [eax-0x4]
6400b9b9:	cmp    DWORD PTR [esp+0x28],0x0
6400b9be:	jne    0x6400be59
6400b9c4:	mov    ebp,DWORD PTR [ebp+0x0]
6400b9c7:	sar    ebp,1
6400b9c9:	sub    ebp,0x1
6400b9cc:	test   ebp,ebp
6400b9ce:	jle    0x6400bbff
6400b9d4:	mov    ebx,esi
6400b9d6:	movzx  edi,dh
6400b9d9:	mov    esi,DWORD PTR [edi*4+0x6402f968]
6400b9e0:	mov    edi,ecx
6400b9e2:	shr    edi,0x18
6400b9e5:	shr    ebx,0x10
6400b9e8:	and    ebx,0xff
6400b9ee:	xor    esi,DWORD PTR [ebx*4+0x6402f540]
6400b9f5:	add    eax,0x4
6400b9f8:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400b9ff:	mov    edi,DWORD PTR [esp+0x24]
6400ba03:	and    edi,0xff
6400ba09:	mov    DWORD PTR [esp+0x28],esi
6400ba0d:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400ba14:	movzx  edi,BYTE PTR [esp+0x25]
6400ba19:	xor    esi,DWORD PTR [eax-0x4]
6400ba1c:	add    eax,0x4
6400ba1f:	mov    DWORD PTR [esp+0x14],esi
6400ba23:	mov    esi,edx
6400ba25:	shr    esi,0x10
6400ba28:	and    esi,0xff
6400ba2e:	mov    esi,DWORD PTR [esi*4+0x6402f540]
6400ba35:	xor    esi,DWORD PTR [edi*4+0x6402f968]
6400ba3c:	mov    edi,DWORD PTR [esp+0x10]
6400ba40:	shr    edi,0x18
6400ba43:	mov    DWORD PTR [esp+0x28],esi
6400ba47:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400ba4e:	mov    edi,ecx
6400ba50:	and    edi,0xff
6400ba56:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400ba5d:	mov    edi,DWORD PTR [esp+0x24]
6400ba61:	xor    esi,DWORD PTR [eax-0x4]
6400ba64:	shr    edi,0x10
6400ba67:	mov    DWORD PTR [esp+0x18],esi
6400ba6b:	movzx  esi,ch
6400ba6e:	mov    esi,DWORD PTR [esi*4+0x6402f968]
6400ba75:	and    edi,0xff
6400ba7b:	xor    esi,DWORD PTR [edi*4+0x6402f540]
6400ba82:	mov    edi,edx
6400ba84:	shr    edi,0x18
6400ba87:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400ba8e:	mov    edi,DWORD PTR [esp+0x10]
6400ba92:	and    edi,0xff
6400ba98:	mov    DWORD PTR [esp+0x28],esi
6400ba9c:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400baa3:	shr    ecx,0x10
6400baa6:	xor    esi,DWORD PTR [eax]
6400baa8:	and    ecx,0xff
6400baae:	mov    DWORD PTR [esp+0x28],esi
6400bab2:	movzx  esi,BYTE PTR [esp+0x11]
6400bab7:	mov    ebx,DWORD PTR [esi*4+0x6402f968]
6400babe:	xor    ebx,DWORD PTR [ecx*4+0x6402f540]
6400bac5:	mov    ecx,DWORD PTR [esp+0x24]
6400bac9:	mov    esi,DWORD PTR [esp+0x28]
6400bacd:	shr    ecx,0x18
6400bad0:	xor    ebx,DWORD PTR [ecx*4+0x6402f140]
6400bad7:	and    edx,0xff
6400badd:	xor    ebx,DWORD PTR [edx*4+0x6402fd68]
6400bae4:	add    eax,0x4
6400bae7:	xor    ebx,DWORD PTR [eax]
6400bae9:	mov    ecx,esi
6400baeb:	shr    ecx,0x10
6400baee:	and    ecx,0xff
6400baf4:	movzx  edx,bh
6400baf7:	mov    edi,DWORD PTR [edx*4+0x6402f968]
6400bafe:	xor    edi,DWORD PTR [ecx*4+0x6402f540]
6400bb05:	mov    edx,DWORD PTR [esp+0x18]
6400bb09:	mov    ecx,edx
6400bb0b:	shr    ecx,0x18
6400bb0e:	xor    edi,DWORD PTR [ecx*4+0x6402f140]
6400bb15:	mov    ecx,DWORD PTR [esp+0x14]
6400bb19:	and    ecx,0xff
6400bb1f:	xor    edi,DWORD PTR [ecx*4+0x6402fd68]
6400bb26:	add    eax,0x4
6400bb29:	xor    edi,DWORD PTR [eax]
6400bb2b:	mov    ecx,ebx
6400bb2d:	shr    ecx,0x10
6400bb30:	mov    DWORD PTR [esp+0x24],edi
6400bb34:	movzx  edi,BYTE PTR [esp+0x15]
6400bb39:	add    eax,0x4
6400bb3c:	and    ecx,0xff
6400bb42:	mov    ecx,DWORD PTR [ecx*4+0x6402f540]
6400bb49:	xor    ecx,DWORD PTR [edi*4+0x6402f968]
6400bb50:	shr    esi,0x18
6400bb53:	xor    ecx,DWORD PTR [esi*4+0x6402f140]
6400bb5a:	mov    esi,edx
6400bb5c:	and    esi,0xff
6400bb62:	xor    ecx,DWORD PTR [esi*4+0x6402fd68]
6400bb69:	mov    esi,DWORD PTR [esp+0x14]
6400bb6d:	xor    ecx,DWORD PTR [eax]
6400bb6f:	movzx  edx,dh
6400bb72:	mov    edx,DWORD PTR [edx*4+0x6402f968]
6400bb79:	mov    edi,DWORD PTR [esp+0x18]
6400bb7d:	shr    esi,0x10
6400bb80:	and    esi,0xff
6400bb86:	xor    edx,DWORD PTR [esi*4+0x6402f540]
6400bb8d:	mov    esi,ebx
6400bb8f:	shr    esi,0x18
6400bb92:	xor    edx,DWORD PTR [esi*4+0x6402f140]
6400bb99:	mov    esi,DWORD PTR [esp+0x28]
6400bb9d:	and    esi,0xff
6400bba3:	xor    edx,DWORD PTR [esi*4+0x6402fd68]
6400bbaa:	add    eax,0x4
6400bbad:	xor    edx,DWORD PTR [eax]
6400bbaf:	shr    edi,0x10
6400bbb2:	mov    esi,edx
6400bbb4:	movzx  edx,BYTE PTR [esp+0x29]
6400bbb9:	mov    edx,DWORD PTR [edx*4+0x6402f968]
6400bbc0:	and    edi,0xff
6400bbc6:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400bbcd:	mov    edi,DWORD PTR [esp+0x14]
6400bbd1:	shr    edi,0x18
6400bbd4:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400bbdb:	and    ebx,0xff
6400bbe1:	xor    edx,DWORD PTR [ebx*4+0x6402fd68]
6400bbe8:	add    eax,0x4
6400bbeb:	xor    edx,DWORD PTR [eax]
6400bbed:	sub    ebp,0x1
6400bbf0:	add    eax,0x4
6400bbf3:	test   ebp,ebp
6400bbf5:	mov    DWORD PTR [esp+0x10],esi
6400bbf9:	jg     0x6400b9d4
6400bbff:	mov    ebx,esi
6400bc01:	movzx  edi,dh
6400bc04:	mov    esi,DWORD PTR [edi*4+0x6402f968]
6400bc0b:	mov    edi,ecx
6400bc0d:	shr    edi,0x18
6400bc10:	shr    ebx,0x10
6400bc13:	and    ebx,0xff
6400bc19:	xor    esi,DWORD PTR [ebx*4+0x6402f540]
6400bc20:	add    eax,0x4
6400bc23:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bc2a:	mov    edi,DWORD PTR [esp+0x24]
6400bc2e:	mov    DWORD PTR [esp+0x28],esi
6400bc32:	and    edi,0xff
6400bc38:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bc3f:	movzx  edi,BYTE PTR [esp+0x25]
6400bc44:	xor    esi,DWORD PTR [eax-0x4]
6400bc47:	add    eax,0x4
6400bc4a:	mov    DWORD PTR [esp+0x14],esi
6400bc4e:	mov    esi,edx
6400bc50:	shr    esi,0x10
6400bc53:	and    esi,0xff
6400bc59:	mov    esi,DWORD PTR [esi*4+0x6402f540]
6400bc60:	xor    esi,DWORD PTR [edi*4+0x6402f968]
6400bc67:	mov    edi,DWORD PTR [esp+0x10]
6400bc6b:	shr    edi,0x18
6400bc6e:	mov    DWORD PTR [esp+0x28],esi
6400bc72:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bc79:	mov    edi,ecx
6400bc7b:	and    edi,0xff
6400bc81:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bc88:	mov    edi,DWORD PTR [esp+0x24]
6400bc8c:	xor    esi,DWORD PTR [eax-0x4]
6400bc8f:	shr    edi,0x10
6400bc92:	mov    DWORD PTR [esp+0x18],esi
6400bc96:	movzx  esi,ch
6400bc99:	mov    esi,DWORD PTR [esi*4+0x6402f968]
6400bca0:	and    edi,0xff
6400bca6:	xor    esi,DWORD PTR [edi*4+0x6402f540]
6400bcad:	mov    edi,edx
6400bcaf:	shr    edi,0x18
6400bcb2:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bcb9:	mov    edi,DWORD PTR [esp+0x10]
6400bcbd:	mov    DWORD PTR [esp+0x28],esi
6400bcc1:	and    edi,0xff
6400bcc7:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bcce:	shr    ecx,0x10
6400bcd1:	xor    esi,DWORD PTR [eax]
6400bcd3:	and    ecx,0xff
6400bcd9:	mov    DWORD PTR [esp+0x28],esi
6400bcdd:	movzx  esi,BYTE PTR [esp+0x11]
6400bce2:	mov    ebx,DWORD PTR [esi*4+0x6402f968]
6400bce9:	xor    ebx,DWORD PTR [ecx*4+0x6402f540]
6400bcf0:	mov    ecx,DWORD PTR [esp+0x24]
6400bcf4:	mov    edi,DWORD PTR [esp+0x28]
6400bcf8:	shr    ecx,0x18
6400bcfb:	xor    ebx,DWORD PTR [ecx*4+0x6402f140]
6400bd02:	mov    ecx,DWORD PTR [esp+0x18]
6400bd06:	and    edx,0xff
6400bd0c:	xor    ebx,DWORD PTR [edx*4+0x6402fd68]
6400bd13:	add    eax,0x4
6400bd16:	xor    ebx,DWORD PTR [eax]
6400bd18:	add    eax,0x4
6400bd1b:	shr    ecx,0x18
6400bd1e:	mov    DWORD PTR [esp+0x1c],eax
6400bd22:	xor    eax,eax
6400bd24:	mov    ah,BYTE PTR [ecx+0x64031168]
6400bd2a:	mov    edx,edi
6400bd2c:	shr    edx,0x10
6400bd2f:	and    edx,0xff
6400bd35:	movzx  edx,BYTE PTR [edx+0x64031168]
6400bd3c:	movzx  ecx,bh
6400bd3f:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400bd46:	xor    edx,eax
6400bd48:	shl    edx,0x8
6400bd4b:	xor    edx,ecx
6400bd4d:	mov    ecx,DWORD PTR [esp+0x14]
6400bd51:	and    ecx,0xff
6400bd57:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400bd5e:	shl    edx,0x8
6400bd61:	mov    DWORD PTR [esp+0x24],ebx
6400bd65:	xor    edx,ecx
6400bd67:	xor    ecx,ecx
6400bd69:	shr    edi,0x18
6400bd6c:	mov    ch,BYTE PTR [edi+0x64031168]
6400bd72:	mov    eax,DWORD PTR [esp+0x1c]
6400bd76:	xor    edx,DWORD PTR [eax]
6400bd78:	shr    ebx,0x10
6400bd7b:	and    ebx,0xff
6400bd81:	movzx  esi,BYTE PTR [ebx+0x64031168]
6400bd88:	xor    esi,ecx
6400bd8a:	mov    ecx,DWORD PTR [esp+0x14]
6400bd8e:	shl    esi,0x8
6400bd91:	movzx  edi,ch
6400bd94:	movzx  edi,BYTE PTR [edi+0x64031168]
6400bd9b:	xor    esi,edi
6400bd9d:	mov    edi,DWORD PTR [esp+0x18]
6400bda1:	shl    esi,0x8
6400bda4:	and    edi,0xff
6400bdaa:	movzx  edi,BYTE PTR [edi+0x64031168]
6400bdb1:	xor    esi,edi
6400bdb3:	xor    esi,DWORD PTR [eax+0x4]
6400bdb6:	shr    ecx,0x10
6400bdb9:	mov    DWORD PTR [esp+0x1c],esi
6400bdbd:	and    ecx,0xff
6400bdc3:	movzx  esi,BYTE PTR [ecx+0x64031168]
6400bdca:	mov    ecx,DWORD PTR [esp+0x24]
6400bdce:	add    eax,0x4
6400bdd1:	shr    ecx,0x18
6400bdd4:	xor    ebx,ebx
6400bdd6:	mov    bh,BYTE PTR [ecx+0x64031168]
6400bddc:	mov    ecx,DWORD PTR [esp+0x18]
6400bde0:	movzx  edi,ch
6400bde3:	movzx  edi,BYTE PTR [edi+0x64031168]
6400bdea:	xor    esi,ebx
6400bdec:	shl    esi,0x8
6400bdef:	xor    esi,edi
6400bdf1:	mov    edi,DWORD PTR [esp+0x28]
6400bdf5:	shl    esi,0x8
6400bdf8:	and    edi,0xff
6400bdfe:	movzx  edi,BYTE PTR [edi+0x64031168]
6400be05:	xor    esi,edi
6400be07:	xor    esi,DWORD PTR [eax+0x4]
6400be0a:	add    eax,0x4
6400be0d:	mov    DWORD PTR [esp+0x10],esi
6400be11:	mov    esi,DWORD PTR [esp+0x14]
6400be15:	shr    esi,0x18
6400be18:	shr    ecx,0x10
6400be1b:	xor    ebx,ebx
6400be1d:	mov    bh,BYTE PTR [esi+0x64031168]
6400be23:	movzx  esi,BYTE PTR [esp+0x29]
6400be28:	movzx  esi,BYTE PTR [esi+0x64031168]
6400be2f:	and    ecx,0xff
6400be35:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400be3c:	xor    ecx,ebx
6400be3e:	shl    ecx,0x8
6400be41:	xor    ecx,esi
6400be43:	mov    esi,DWORD PTR [esp+0x24]
6400be47:	and    esi,0xff
6400be4d:	movzx  esi,BYTE PTR [esi+0x64031168]
6400be54:	jmp    0x6400c2ec
6400be59:	mov    edi,DWORD PTR [ebp+0x0]
6400be5c:	sar    edi,1
6400be5e:	sub    edi,0x1
6400be61:	test   edi,edi
6400be63:	mov    DWORD PTR [esp+0x1c],edi
6400be67:	jle    0x6400c0a3
6400be6d:	lea    ecx,[ecx+0x0]
6400be70:	shr    esi,0x10
6400be73:	and    esi,0xff
6400be79:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400be80:	movzx  edi,ch
6400be83:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400be8a:	mov    edi,edx
6400be8c:	shr    edi,0x18
6400be8f:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400be96:	mov    edi,DWORD PTR [esp+0x24]
6400be9a:	mov    DWORD PTR [esp+0x28],esi
6400be9e:	and    edi,0xff
6400bea4:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400beab:	movzx  edi,BYTE PTR [esp+0x11]
6400beb0:	xor    esi,DWORD PTR [eax]
6400beb2:	add    eax,0x4
6400beb5:	mov    DWORD PTR [esp+0x14],esi
6400beb9:	mov    esi,edx
6400bebb:	shr    esi,0x10
6400bebe:	and    esi,0xff
6400bec4:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400becb:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400bed2:	mov    edi,DWORD PTR [esp+0x24]
6400bed6:	mov    DWORD PTR [esp+0x28],esi
6400beda:	shr    edi,0x18
6400bedd:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400bee4:	mov    edi,ecx
6400bee6:	and    edi,0xff
6400beec:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400bef3:	mov    edi,DWORD PTR [esp+0x24]
6400bef7:	xor    esi,DWORD PTR [eax]
6400bef9:	shr    edi,0x10
6400befc:	mov    DWORD PTR [esp+0x18],esi
6400bf00:	and    edi,0xff
6400bf06:	movzx  esi,dh
6400bf09:	mov    esi,DWORD PTR [esi*4+0x64030968]
6400bf10:	xor    esi,DWORD PTR [edi*4+0x64030568]
6400bf17:	mov    edi,ecx
6400bf19:	shr    edi,0x18
6400bf1c:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400bf23:	mov    edi,DWORD PTR [esp+0x10]
6400bf27:	mov    DWORD PTR [esp+0x28],esi
6400bf2b:	and    edi,0xff
6400bf31:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400bf38:	add    eax,0x4
6400bf3b:	xor    esi,DWORD PTR [eax]
6400bf3d:	shr    ecx,0x10
6400bf40:	mov    DWORD PTR [esp+0x28],esi
6400bf44:	movzx  esi,BYTE PTR [esp+0x25]
6400bf49:	and    ecx,0xff
6400bf4f:	mov    ebx,DWORD PTR [ecx*4+0x64030568]
6400bf56:	xor    ebx,DWORD PTR [esi*4+0x64030968]
6400bf5d:	mov    ecx,DWORD PTR [esp+0x10]
6400bf61:	shr    ecx,0x18
6400bf64:	xor    ebx,DWORD PTR [ecx*4+0x64030168]
6400bf6b:	mov    ecx,DWORD PTR [esp+0x18]
6400bf6f:	and    edx,0xff
6400bf75:	xor    ebx,DWORD PTR [edx*4+0x64030d68]
6400bf7c:	mov    edx,DWORD PTR [esp+0x28]
6400bf80:	xor    ebx,DWORD PTR [eax+0x4]
6400bf83:	add    eax,0x4
6400bf86:	mov    esi,edx
6400bf88:	shr    esi,0x10
6400bf8b:	and    esi,0xff
6400bf91:	mov    ebp,DWORD PTR [esi*4+0x64030568]
6400bf98:	movzx  edi,ch
6400bf9b:	xor    ebp,DWORD PTR [edi*4+0x64030968]
6400bfa2:	mov    esi,ebx
6400bfa4:	shr    esi,0x18
6400bfa7:	xor    ebp,DWORD PTR [esi*4+0x64030168]
6400bfae:	mov    esi,DWORD PTR [esp+0x14]
6400bfb2:	mov    edi,esi
6400bfb4:	and    edi,0xff
6400bfba:	xor    ebp,DWORD PTR [edi*4+0x64030d68]
6400bfc1:	add    eax,0x4
6400bfc4:	xor    ebp,DWORD PTR [eax]
6400bfc6:	mov    edi,ebx
6400bfc8:	shr    edi,0x10
6400bfcb:	add    eax,0x4
6400bfce:	mov    DWORD PTR [esp+0x24],ebp
6400bfd2:	and    edi,0xff
6400bfd8:	movzx  edx,dh
6400bfdb:	mov    edi,DWORD PTR [edi*4+0x64030568]
6400bfe2:	xor    edi,DWORD PTR [edx*4+0x64030968]
6400bfe9:	mov    edx,esi
6400bfeb:	shr    edx,0x18
6400bfee:	xor    edi,DWORD PTR [edx*4+0x64030168]
6400bff5:	shr    esi,0x10
6400bff8:	and    esi,0xff
6400bffe:	movzx  edx,bh
6400c001:	mov    edx,DWORD PTR [edx*4+0x64030968]
6400c008:	xor    edx,DWORD PTR [esi*4+0x64030568]
6400c00f:	mov    esi,DWORD PTR [esp+0x18]
6400c013:	shr    esi,0x18
6400c016:	xor    edx,DWORD PTR [esi*4+0x64030168]
6400c01d:	mov    esi,DWORD PTR [esp+0x28]
6400c021:	and    ecx,0xff
6400c027:	xor    edi,DWORD PTR [ecx*4+0x64030d68]
6400c02e:	and    esi,0xff
6400c034:	xor    edi,DWORD PTR [eax]
6400c036:	xor    edx,DWORD PTR [esi*4+0x64030d68]
6400c03d:	mov    ecx,edi
6400c03f:	xor    edx,DWORD PTR [eax+0x4]
6400c042:	mov    edi,DWORD PTR [esp+0x18]
6400c046:	add    eax,0x4
6400c049:	shr    edi,0x10
6400c04c:	and    edi,0xff
6400c052:	mov    ebp,DWORD PTR [edi*4+0x64030568]
6400c059:	mov    edi,DWORD PTR [esp+0x28]
6400c05d:	mov    esi,edx
6400c05f:	movzx  edx,BYTE PTR [esp+0x15]
6400c064:	xor    ebp,DWORD PTR [edx*4+0x64030968]
6400c06b:	shr    edi,0x18
6400c06e:	xor    ebp,DWORD PTR [edi*4+0x64030168]
6400c075:	mov    edi,DWORD PTR [esp+0x1c]
6400c079:	and    ebx,0xff
6400c07f:	xor    ebp,DWORD PTR [ebx*4+0x64030d68]
6400c086:	add    eax,0x4
6400c089:	xor    ebp,DWORD PTR [eax]
6400c08b:	sub    edi,0x1
6400c08e:	add    eax,0x4
6400c091:	test   edi,edi
6400c093:	mov    DWORD PTR [esp+0x10],esi
6400c097:	mov    edx,ebp
6400c099:	mov    DWORD PTR [esp+0x1c],edi
6400c09d:	jg     0x6400be70
6400c0a3:	shr    esi,0x10
6400c0a6:	and    esi,0xff
6400c0ac:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c0b3:	movzx  edi,ch
6400c0b6:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c0bd:	mov    edi,edx
6400c0bf:	shr    edi,0x18
6400c0c2:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c0c9:	mov    edi,DWORD PTR [esp+0x24]
6400c0cd:	mov    DWORD PTR [esp+0x28],esi
6400c0d1:	and    edi,0xff
6400c0d7:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c0de:	movzx  edi,BYTE PTR [esp+0x11]
6400c0e3:	xor    esi,DWORD PTR [eax]
6400c0e5:	add    eax,0x4
6400c0e8:	mov    DWORD PTR [esp+0x14],esi
6400c0ec:	mov    esi,edx
6400c0ee:	shr    esi,0x10
6400c0f1:	and    esi,0xff
6400c0f7:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c0fe:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c105:	mov    edi,DWORD PTR [esp+0x24]
6400c109:	shr    edi,0x18
6400c10c:	mov    DWORD PTR [esp+0x28],esi
6400c110:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c117:	mov    edi,ecx
6400c119:	and    edi,0xff
6400c11f:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c126:	mov    edi,DWORD PTR [esp+0x24]
6400c12a:	xor    esi,DWORD PTR [eax]
6400c12c:	shr    edi,0x10
6400c12f:	mov    DWORD PTR [esp+0x18],esi
6400c133:	movzx  esi,dh
6400c136:	mov    esi,DWORD PTR [esi*4+0x64030968]
6400c13d:	and    edi,0xff
6400c143:	xor    esi,DWORD PTR [edi*4+0x64030568]
6400c14a:	mov    edi,ecx
6400c14c:	shr    edi,0x18
6400c14f:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c156:	mov    edi,DWORD PTR [esp+0x10]
6400c15a:	mov    DWORD PTR [esp+0x28],esi
6400c15e:	and    edi,0xff
6400c164:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c16b:	movzx  edi,BYTE PTR [esp+0x25]
6400c170:	xor    esi,DWORD PTR [eax+0x4]
6400c173:	shr    ecx,0x10
6400c176:	and    ecx,0xff
6400c17c:	add    eax,0x4
6400c17f:	mov    DWORD PTR [esp+0x28],esi
6400c183:	mov    esi,DWORD PTR [ecx*4+0x64030568]
6400c18a:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c191:	mov    ecx,DWORD PTR [esp+0x10]
6400c195:	and    edx,0xff
6400c19b:	shr    ecx,0x18
6400c19e:	xor    esi,DWORD PTR [ecx*4+0x64030168]
6400c1a5:	add    eax,0x4
6400c1a8:	xor    esi,DWORD PTR [edx*4+0x64030d68]
6400c1af:	mov    edx,DWORD PTR [esp+0x28]
6400c1b3:	xor    esi,DWORD PTR [eax]
6400c1b5:	shr    edx,0x10
6400c1b8:	and    edx,0xff
6400c1be:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400c1c5:	mov    ecx,esi
6400c1c7:	shr    ecx,0x18
6400c1ca:	xor    ebx,ebx
6400c1cc:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c1d2:	movzx  ecx,BYTE PTR [esp+0x19]
6400c1d7:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c1de:	xor    edx,ebx
6400c1e0:	shl    edx,0x8
6400c1e3:	xor    edx,ecx
6400c1e5:	mov    ecx,DWORD PTR [esp+0x14]
6400c1e9:	mov    edi,ecx
6400c1eb:	and    edi,0xff
6400c1f1:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400c1f8:	shl    edx,0x8
6400c1fb:	add    eax,0x4
6400c1fe:	xor    edx,edi
6400c200:	xor    edx,DWORD PTR [eax]
6400c202:	mov    DWORD PTR [esp+0x24],esi
6400c206:	add    eax,0x4
6400c209:	shr    esi,0x10
6400c20c:	and    esi,0xff
6400c212:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c219:	shr    ecx,0x18
6400c21c:	xor    ebx,ebx
6400c21e:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c224:	movzx  ecx,BYTE PTR [esp+0x29]
6400c229:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c230:	xor    esi,ebx
6400c232:	shl    esi,0x8
6400c235:	xor    esi,ecx
6400c237:	mov    ecx,DWORD PTR [esp+0x18]
6400c23b:	mov    edi,ecx
6400c23d:	shl    esi,0x8
6400c240:	and    edi,0xff
6400c246:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400c24d:	xor    esi,edi
6400c24f:	xor    esi,DWORD PTR [eax]
6400c251:	mov    edi,DWORD PTR [esp+0x28]
6400c255:	mov    DWORD PTR [esp+0x1c],esi
6400c259:	mov    esi,DWORD PTR [esp+0x14]
6400c25d:	shr    ecx,0x18
6400c260:	shr    esi,0x10
6400c263:	and    esi,0xff
6400c269:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c270:	xor    ebx,ebx
6400c272:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c278:	movzx  ecx,BYTE PTR [esp+0x25]
6400c27d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c284:	xor    esi,ebx
6400c286:	shl    esi,0x8
6400c289:	xor    esi,ecx
6400c28b:	mov    ecx,edi
6400c28d:	and    ecx,0xff
6400c293:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c29a:	shl    esi,0x8
6400c29d:	xor    esi,ecx
6400c29f:	xor    esi,DWORD PTR [eax+0x4]
6400c2a2:	mov    ecx,DWORD PTR [esp+0x18]
6400c2a6:	shr    ecx,0x10
6400c2a9:	xor    ebx,ebx
6400c2ab:	add    eax,0x4
6400c2ae:	shr    edi,0x18
6400c2b1:	mov    bh,BYTE PTR [edi+0x6402f040]
6400c2b7:	and    ecx,0xff
6400c2bd:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c2c4:	mov    DWORD PTR [esp+0x10],esi
6400c2c8:	movzx  esi,BYTE PTR [esp+0x15]
6400c2cd:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c2d4:	xor    ecx,ebx
6400c2d6:	shl    ecx,0x8
6400c2d9:	xor    ecx,esi
6400c2db:	mov    esi,DWORD PTR [esp+0x24]
6400c2df:	and    esi,0xff
6400c2e5:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c2ec:	shl    ecx,0x8
6400c2ef:	xor    ecx,esi
6400c2f1:	xor    ecx,DWORD PTR [eax+0x4]
6400c2f4:	mov    esi,DWORD PTR [esp+0x2c]
6400c2f8:	mov    eax,edx
6400c2fa:	shr    eax,0x8
6400c2fd:	mov    BYTE PTR [esi+0x1],al
6400c300:	mov    eax,edx
6400c302:	mov    BYTE PTR [esi],dl
6400c304:	shr    edx,0x18
6400c307:	shr    eax,0x10
6400c30a:	mov    BYTE PTR [esi+0x3],dl
6400c30d:	mov    BYTE PTR [esi+0x2],al
6400c310:	mov    eax,DWORD PTR [esp+0x1c]
6400c314:	mov    edx,eax
6400c316:	shr    edx,0x8
6400c319:	mov    BYTE PTR [esi+0x5],dl
6400c31c:	mov    BYTE PTR [esi+0x4],al
6400c31f:	mov    edx,eax
6400c321:	shr    edx,0x10
6400c324:	shr    eax,0x18
6400c327:	mov    BYTE PTR [esi+0x6],dl
6400c32a:	mov    BYTE PTR [esi+0x7],al
6400c32d:	mov    eax,DWORD PTR [esp+0x10]
6400c331:	mov    edx,eax
6400c333:	shr    edx,0x8
6400c336:	mov    BYTE PTR [esi+0x9],dl
6400c339:	mov    edx,eax
6400c33b:	mov    BYTE PTR [esi+0x8],al
6400c33e:	shr    edx,0x10
6400c341:	shr    eax,0x18
6400c344:	mov    BYTE PTR [esi+0xa],dl
6400c347:	mov    BYTE PTR [esi+0xb],al
6400c34a:	mov    eax,ecx
6400c34c:	mov    edx,ecx
6400c34e:	mov    BYTE PTR [esi+0xc],cl
6400c351:	shr    eax,0x8
6400c354:	shr    edx,0x10
6400c357:	pop    edi
6400c358:	shr    ecx,0x18
6400c35b:	mov    BYTE PTR [esi+0xd],al
6400c35e:	mov    BYTE PTR [esi+0xe],dl
6400c361:	mov    BYTE PTR [esi+0xf],cl
6400c364:	pop    esi
6400c365:	pop    ebp
6400c366:	pop    ebx
6400c367:	add    esp,0x10
6400c36a:	ret    
6400c36b:	int3   
6400c36c:	int3   
6400c36d:	int3   
6400c36e:	int3   
6400c36f:	int3   
6400c370:	sub    esp,0x30
6400c373:	mov    eax,ds:0x6402d09c
6400c378:	xor    eax,esp
6400c37a:	mov    DWORD PTR [esp+0x2c],eax
6400c37e:	cmp    DWORD PTR [esp+0x38],0x0
6400c383:	mov    eax,DWORD PTR [esp+0x34]
6400c387:	push   ebx
6400c388:	push   ebp
6400c389:	mov    ebp,DWORD PTR [esp+0x44]
6400c38d:	push   esi
6400c38e:	mov    esi,DWORD PTR [esp+0x4c]
6400c392:	push   edi
6400c393:	mov    edi,edx
6400c395:	mov    DWORD PTR [esp+0x24],eax
6400c399:	jne    0x6400c457
6400c39f:	test   ecx,ecx
6400c3a1:	jle    0x6400c536
6400c3a7:	lea    eax,[ecx-0x1]
6400c3aa:	mov    ebx,ebp
6400c3ac:	shr    eax,0x4
6400c3af:	sub    ebx,esi
6400c3b1:	add    eax,0x1
6400c3b4:	mov    DWORD PTR [esp+0x10],eax
6400c3b8:	mov    edx,DWORD PTR [edi+0x4]
6400c3bb:	mov    ecx,DWORD PTR [edi]
6400c3bd:	mov    eax,DWORD PTR [edi+0x8]
6400c3c0:	push   esi
6400c3c1:	mov    DWORD PTR [esp+0x34],edx
6400c3c5:	mov    edx,DWORD PTR [esp+0x28]
6400c3c9:	mov    DWORD PTR [esp+0x30],ecx
6400c3cd:	mov    ecx,DWORD PTR [edi+0xc]
6400c3d0:	mov    DWORD PTR [esp+0x38],eax
6400c3d4:	push   0x0
6400c3d6:	push   edx
6400c3d7:	mov    eax,edi
6400c3d9:	mov    DWORD PTR [esp+0x44],ecx
6400c3dd:	call   0x6400b920
6400c3e2:	mov    eax,esi
6400c3e4:	add    esp,0xc
6400c3e7:	lea    ecx,[ebp+0x2]
6400c3ea:	mov    esi,0x4
6400c3ef:	nop
6400c3f0:	movzx  edx,BYTE PTR [ebx+eax*1]
6400c3f4:	xor    BYTE PTR [eax],dl
6400c3f6:	movzx  edx,BYTE PTR [ecx-0x1]
6400c3fa:	xor    BYTE PTR [eax+0x1],dl
6400c3fd:	movzx  edx,BYTE PTR [ecx]
6400c400:	xor    BYTE PTR [eax+0x2],dl
6400c403:	movzx  edx,BYTE PTR [ecx+0x1]
6400c407:	xor    BYTE PTR [eax+0x3],dl
6400c40a:	add    eax,0x4
6400c40d:	add    ecx,0x4
6400c410:	sub    esi,0x1
6400c413:	jne    0x6400c3f0
6400c415:	mov    ecx,DWORD PTR [esp+0x2c]
6400c419:	mov    edx,DWORD PTR [esp+0x30]
6400c41d:	mov    DWORD PTR [ebp+0x0],ecx
6400c420:	mov    ecx,DWORD PTR [esp+0x34]
6400c424:	mov    DWORD PTR [ebp+0x4],edx
6400c427:	mov    edx,DWORD PTR [esp+0x38]
6400c42b:	add    edi,0x10
6400c42e:	sub    ebx,0x10
6400c431:	sub    DWORD PTR [esp+0x10],0x1
6400c436:	mov    DWORD PTR [ebp+0x8],ecx
6400c439:	mov    DWORD PTR [ebp+0xc],edx
6400c43c:	mov    esi,eax
6400c43e:	jne    0x6400c3b8
6400c444:	pop    edi
6400c445:	pop    esi
6400c446:	pop    ebp
6400c447:	pop    ebx
6400c448:	mov    ecx,DWORD PTR [esp+0x2c]
6400c44c:	xor    ecx,esp
6400c44e:	call   0x64012abc
6400c453:	add    esp,0x30
6400c456:	ret    
6400c457:	test   ecx,ecx
6400c459:	jle    0x6400c536
6400c45f:	mov    eax,ebp
6400c461:	sub    eax,esi
6400c463:	mov    DWORD PTR [esp+0x10],eax
6400c467:	mov    eax,ebp
6400c469:	sub    eax,edi
6400c46b:	mov    DWORD PTR [esp+0x14],eax
6400c46f:	lea    eax,[ecx-0x1]
6400c472:	shr    eax,0x4
6400c475:	add    eax,0x1
6400c478:	mov    DWORD PTR [esp+0x1c],eax
6400c47c:	lea    esp,[esp+0x0]
6400c480:	lea    eax,[ebp+0x3]
6400c483:	mov    edx,esi
6400c485:	sub    edx,edi
6400c487:	mov    DWORD PTR [esp+0x20],eax
6400c48b:	lea    ecx,[esi+0x1]
6400c48e:	mov    eax,edi
6400c490:	mov    DWORD PTR [esp+0x28],edx
6400c494:	mov    DWORD PTR [esp+0x18],0x4
6400c49c:	jmp    0x6400c4a4
6400c49e:	mov    edi,edi
6400c4a0:	mov    edx,DWORD PTR [esp+0x28]
6400c4a4:	mov    ebx,DWORD PTR [esp+0x14]
6400c4a8:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400c4ac:	xor    bl,BYTE PTR [eax]
6400c4ae:	add    eax,0x4
6400c4b1:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400c4b5:	mov    edx,DWORD PTR [esp+0x10]
6400c4b9:	mov    dl,BYTE PTR [ecx+edx*1]
6400c4bc:	xor    dl,BYTE PTR [eax-0x3]
6400c4bf:	add    ecx,0x4
6400c4c2:	mov    BYTE PTR [ecx-0x4],dl
6400c4c5:	movzx  ebx,BYTE PTR [eax-0x2]
6400c4c9:	mov    edx,DWORD PTR [esp+0x20]
6400c4cd:	xor    bl,BYTE PTR [edx-0x1]
6400c4d0:	add    edx,0x4
6400c4d3:	mov    BYTE PTR [ecx-0x3],bl
6400c4d6:	movzx  ebx,BYTE PTR [eax-0x1]
6400c4da:	xor    bl,BYTE PTR [edx-0x4]
6400c4dd:	mov    DWORD PTR [esp+0x20],edx
6400c4e1:	mov    BYTE PTR [ecx-0x2],bl
6400c4e4:	mov    ebx,0x1
6400c4e9:	sub    DWORD PTR [esp+0x18],ebx
6400c4ed:	jne    0x6400c4a0
6400c4ef:	mov    eax,DWORD PTR [esp+0x48]
6400c4f3:	mov    ecx,DWORD PTR [esp+0x24]
6400c4f7:	push   esi
6400c4f8:	push   eax
6400c4f9:	push   ecx
6400c4fa:	mov    eax,esi
6400c4fc:	call   0x6400b920
6400c501:	mov    edx,DWORD PTR [esi]
6400c503:	mov    DWORD PTR [ebp+0x0],edx
6400c506:	mov    eax,DWORD PTR [esi+0x4]
6400c509:	mov    DWORD PTR [ebp+0x4],eax
6400c50c:	mov    ecx,DWORD PTR [esi+0x8]
6400c50f:	mov    eax,0x10
6400c514:	sub    DWORD PTR [esp+0x20],eax
6400c518:	sub    DWORD PTR [esp+0x1c],eax
6400c51c:	mov    DWORD PTR [ebp+0x8],ecx
6400c51f:	mov    edx,DWORD PTR [esi+0xc]
6400c522:	add    esp,0xc
6400c525:	add    edi,eax
6400c527:	add    esi,eax
6400c529:	sub    DWORD PTR [esp+0x1c],ebx
6400c52d:	mov    DWORD PTR [ebp+0xc],edx
6400c530:	jne    0x6400c480
6400c536:	mov    ecx,DWORD PTR [esp+0x3c]
6400c53a:	pop    edi
6400c53b:	pop    esi
6400c53c:	pop    ebp
6400c53d:	pop    ebx
6400c53e:	xor    ecx,esp
6400c540:	call   0x64012abc
6400c545:	add    esp,0x30
6400c548:	ret    
6400c549:	int3   
6400c54a:	int3   
6400c54b:	int3   
6400c54c:	int3   
6400c54d:	int3   
6400c54e:	int3   
6400c54f:	int3   
6400c550:	push   0xffffffff
6400c552:	push   0x6402254b
6400c557:	mov    eax,fs:0x0
6400c55d:	push   eax
6400c55e:	sub    esp,0x138
6400c564:	mov    eax,ds:0x6402d09c
6400c569:	xor    eax,esp
6400c56b:	mov    DWORD PTR [esp+0x134],eax
6400c572:	push   ebp
6400c573:	push   esi
6400c574:	push   edi
6400c575:	mov    eax,ds:0x6402d09c
6400c57a:	xor    eax,esp
6400c57c:	push   eax
6400c57d:	lea    eax,[esp+0x148]
6400c584:	mov    fs:0x0,eax
6400c58a:	mov    ebp,DWORD PTR [esp+0x15c]
6400c591:	mov    eax,DWORD PTR [esp+0x158]
6400c598:	mov    DWORD PTR [esp+0x14],eax
6400c59c:	lea    esi,[ebp+0x8]
6400c59f:	mov    eax,esi
6400c5a1:	and    eax,0xf
6400c5a4:	mov    DWORD PTR [esp+0x18],ecx
6400c5a8:	mov    DWORD PTR [esp+0x10],0x0
6400c5b0:	je     0x6400c5bb
6400c5b2:	mov    edx,0x10
6400c5b7:	sub    edx,eax
6400c5b9:	add    esi,edx
6400c5bb:	push   esi
6400c5bc:	call   0x6401225d
6400c5c1:	mov    edi,eax
6400c5c3:	mov    DWORD PTR [esp+0x14],edi
6400c5c7:	push   esi
6400c5c8:	mov    DWORD PTR [esp+0x158],0x0
6400c5d3:	call   0x6401225d
6400c5d8:	push   esi
6400c5d9:	push   0x0
6400c5db:	push   edi
6400c5dc:	mov    DWORD PTR [ebx],eax
6400c5de:	call   0x640131c0
6400c5e3:	mov    eax,DWORD PTR [esp+0x28]
6400c5e7:	push   ebp
6400c5e8:	push   eax
6400c5e9:	lea    ecx,[edi+0x8]
6400c5ec:	mov    DWORD PTR [edi],0x52514f4b
6400c5f2:	push   ecx
6400c5f3:	mov    DWORD PTR [edi+0x4],ebp
6400c5f6:	call   0x640144e0
6400c5fb:	xor    eax,eax
6400c5fd:	mov    DWORD PTR [esp+0x154],eax
6400c604:	mov    DWORD PTR [esp+0x158],eax
6400c60b:	mov    DWORD PTR [esp+0x15c],eax
6400c612:	mov    DWORD PTR [esp+0x160],eax
6400c619:	lea    eax,[esp+0x3c]
6400c61d:	call   0x6400b230
6400c622:	mov    eax,DWORD PTR [ebx]
6400c624:	push   eax
6400c625:	lea    edx,[esp+0x158]
6400c62c:	push   edx
6400c62d:	lea    eax,[esp+0x44]
6400c631:	push   0x1
6400c633:	push   eax
6400c634:	mov    edx,edi
6400c636:	mov    ecx,esi
6400c638:	call   0x6400c370
6400c63d:	mov    ecx,DWORD PTR [esp+0x48]
6400c641:	push   0x0
6400c643:	mov    DWORD PTR [ecx],esi
6400c645:	call   0x64012262
6400c64a:	push   edi
6400c64b:	call   0x64012262
6400c650:	add    esp,0x38
6400c653:	mov    eax,ebx
6400c655:	mov    ecx,DWORD PTR [esp+0x148]
6400c65c:	mov    DWORD PTR fs:0x0,ecx
6400c663:	pop    ecx
6400c664:	pop    edi
6400c665:	pop    esi
6400c666:	pop    ebp
6400c667:	mov    ecx,DWORD PTR [esp+0x134]
6400c66e:	xor    ecx,esp
6400c670:	call   0x64012abc
6400c675:	add    esp,0x144
6400c67b:	ret    
6400c67c:	int3   
6400c67d:	int3   
6400c67e:	int3   
6400c67f:	int3   
6400c680:	sub    esp,0x13c
6400c686:	mov    eax,ds:0x6402d09c
6400c68b:	xor    eax,esp
6400c68d:	mov    DWORD PTR [esp+0x134],eax
6400c694:	mov    eax,DWORD PTR [esp+0x144]
6400c69b:	push   ebp
6400c69c:	mov    ebp,DWORD PTR [esp+0x144]
6400c6a3:	mov    DWORD PTR [esp+0x8],eax
6400c6a7:	xor    eax,eax
6400c6a9:	test   bl,0xf
6400c6ac:	push   esi
6400c6ad:	mov    DWORD PTR [esp+0x8],eax
6400c6b1:	je     0x6400c6bf
6400c6b3:	mov    DWORD PTR [esp+0x8],eax
6400c6b7:	mov    DWORD PTR [edi],eax
6400c6b9:	push   eax
6400c6ba:	jmp    0x6400c75f
6400c6bf:	push   ebx
6400c6c0:	call   0x6401225d
6400c6c5:	mov    esi,eax
6400c6c7:	xor    eax,eax
6400c6c9:	mov    DWORD PTR [esp+0x130],eax
6400c6d0:	mov    DWORD PTR [esp+0x134],eax
6400c6d7:	mov    DWORD PTR [esp+0x138],eax
6400c6de:	mov    DWORD PTR [esp+0x13c],eax
6400c6e5:	add    esp,0x4
6400c6e8:	lea    eax,[esp+0x10]
6400c6ec:	call   0x6400b740
6400c6f1:	push   esi
6400c6f2:	lea    ecx,[esp+0x130]
6400c6f9:	push   ecx
6400c6fa:	lea    edx,[esp+0x18]
6400c6fe:	push   0x0
6400c700:	push   edx
6400c701:	mov    edx,ebp
6400c703:	mov    ecx,ebx
6400c705:	call   0x6400c370
6400c70a:	add    esp,0x10
6400c70d:	cmp    DWORD PTR [esi],0x52534f4b
6400c713:	je     0x6400c73a
6400c715:	push   0x0
6400c717:	mov    DWORD PTR [esp+0xc],0x0
6400c71f:	mov    DWORD PTR [edi],0x0
6400c725:	call   0x64012262
6400c72a:	add    esp,0x4
6400c72d:	push   0x0
6400c72f:	call   0x64012262
6400c734:	add    esp,0x4
6400c737:	push   esi
6400c738:	jmp    0x6400c75f
6400c73a:	mov    eax,DWORD PTR [esi+0x4]
6400c73d:	mov    ecx,DWORD PTR [esp+0xc]
6400c741:	push   eax
6400c742:	lea    edx,[esi+0x8]
6400c745:	push   edx
6400c746:	push   esi
6400c747:	mov    DWORD PTR [ecx],eax
6400c749:	call   0x64013b00
6400c74e:	add    esp,0xc
6400c751:	push   0x0
6400c753:	mov    DWORD PTR [edi],esi
6400c755:	call   0x64012262
6400c75a:	add    esp,0x4
6400c75d:	push   0x0
6400c75f:	call   0x64012262
6400c764:	mov    ecx,DWORD PTR [esp+0x140]
6400c76b:	add    esp,0x4
6400c76e:	pop    esi
6400c76f:	pop    ebp
6400c770:	xor    ecx,esp
6400c772:	mov    eax,edi
6400c774:	call   0x64012abc
6400c779:	add    esp,0x13c
6400c77f:	ret    
6400c780:	push   ebp
6400c781:	mov    ebp,esp
6400c783:	and    esp,0xfffffff8
6400c786:	push   0xffffffff
6400c788:	push   0x6402359e
6400c78d:	mov    eax,fs:0x0
6400c793:	push   eax
6400c794:	push   ecx
6400c795:	push   ebx
6400c796:	push   esi
6400c797:	mov    eax,ds:0x6402d09c
6400c79c:	xor    eax,esp
6400c79e:	push   eax
6400c79f:	lea    eax,[esp+0x10]
6400c7a3:	mov    fs:0x0,eax
6400c7a9:	mov    ebx,0x1
6400c7ae:	test   BYTE PTR ds:0x6403149c,bl
6400c7b4:	jne    0x6400c83e
6400c7ba:	or     DWORD PTR ds:0x6403149c,ebx
6400c7c0:	push   0x64028684
6400c7c5:	push   0xc
6400c7c7:	push   0x640286c4
6400c7cc:	mov    DWORD PTR [esp+0x24],0x0
6400c7d4:	call   0x64005710
6400c7d9:	push   0x640286d4
6400c7de:	push   0x8
6400c7e0:	push   0x64028710
6400c7e5:	mov    esi,eax
6400c7e7:	call   0x640059d0
6400c7ec:	add    esp,0x18
6400c7ef:	push   eax
6400c7f0:	call   DWORD PTR ds:0x64025018
6400c7f6:	add    DWORD PTR ds:0x64031270,ebx
6400c7fc:	test   eax,eax
6400c7fe:	je     0x6400c825
6400c800:	push   esi
6400c801:	push   eax
6400c802:	call   DWORD PTR ds:0x64025014
6400c808:	add    DWORD PTR ds:0x64031274,ebx
6400c80e:	mov    ds:0x64031498,eax
6400c813:	mov    ecx,DWORD PTR [esp+0x10]
6400c817:	mov    DWORD PTR fs:0x0,ecx
6400c81e:	pop    ecx
6400c81f:	pop    esi
6400c820:	pop    ebx
6400c821:	mov    esp,ebp
6400c823:	pop    ebp
6400c824:	ret    
6400c825:	xor    eax,eax
6400c827:	mov    ds:0x64031498,eax
6400c82c:	mov    ecx,DWORD PTR [esp+0x10]
6400c830:	mov    DWORD PTR fs:0x0,ecx
6400c837:	pop    ecx
6400c838:	pop    esi
6400c839:	pop    ebx
6400c83a:	mov    esp,ebp
6400c83c:	pop    ebp
6400c83d:	ret    
6400c83e:	mov    eax,ds:0x64031498
6400c843:	mov    ecx,DWORD PTR [esp+0x10]
6400c847:	mov    DWORD PTR fs:0x0,ecx
6400c84e:	pop    ecx
6400c84f:	pop    esi
6400c850:	pop    ebx
6400c851:	mov    esp,ebp
6400c853:	pop    ebp
6400c854:	ret    
6400c855:	int3   
6400c856:	int3   
6400c857:	int3   
6400c858:	int3   
6400c859:	int3   
6400c85a:	int3   
6400c85b:	int3   
6400c85c:	int3   
6400c85d:	int3   
6400c85e:	int3   
6400c85f:	int3   
6400c860:	push   ebp
6400c861:	mov    ebp,esp
6400c863:	and    esp,0xfffffff8
6400c866:	push   0xffffffff
6400c868:	push   0x6402356e
6400c86d:	mov    eax,fs:0x0
6400c873:	push   eax
6400c874:	push   ecx
6400c875:	push   ebx
6400c876:	push   esi
6400c877:	mov    eax,ds:0x6402d09c
6400c87c:	xor    eax,esp
6400c87e:	push   eax
6400c87f:	lea    eax,[esp+0x10]
6400c883:	mov    fs:0x0,eax
6400c889:	mov    ebx,0x1
6400c88e:	test   BYTE PTR ds:0x64031494,bl
6400c894:	jne    0x6400c91e
6400c89a:	or     DWORD PTR ds:0x64031494,ebx
6400c8a0:	push   0x64028724
6400c8a5:	push   0xe
6400c8a7:	push   0x6402874c
6400c8ac:	mov    DWORD PTR [esp+0x24],0x0
6400c8b4:	call   0x64005710
6400c8b9:	push   0x6402875c
6400c8be:	push   0x8
6400c8c0:	push   0x64028710
6400c8c5:	mov    esi,eax
6400c8c7:	call   0x640059d0
6400c8cc:	add    esp,0x18
6400c8cf:	push   eax
6400c8d0:	call   DWORD PTR ds:0x64025018
6400c8d6:	add    DWORD PTR ds:0x64031270,ebx
6400c8dc:	test   eax,eax
6400c8de:	je     0x6400c905
6400c8e0:	push   esi
6400c8e1:	push   eax
6400c8e2:	call   DWORD PTR ds:0x64025014
6400c8e8:	add    DWORD PTR ds:0x64031274,ebx
6400c8ee:	mov    ds:0x64031490,eax
6400c8f3:	mov    ecx,DWORD PTR [esp+0x10]
6400c8f7:	mov    DWORD PTR fs:0x0,ecx
6400c8fe:	pop    ecx
6400c8ff:	pop    esi
6400c900:	pop    ebx
6400c901:	mov    esp,ebp
6400c903:	pop    ebp
6400c904:	ret    
6400c905:	xor    eax,eax
6400c907:	mov    ds:0x64031490,eax
6400c90c:	mov    ecx,DWORD PTR [esp+0x10]
6400c910:	mov    DWORD PTR fs:0x0,ecx
6400c917:	pop    ecx
6400c918:	pop    esi
6400c919:	pop    ebx
6400c91a:	mov    esp,ebp
6400c91c:	pop    ebp
6400c91d:	ret    
6400c91e:	mov    eax,ds:0x64031490
6400c923:	mov    ecx,DWORD PTR [esp+0x10]
6400c927:	mov    DWORD PTR fs:0x0,ecx
6400c92e:	pop    ecx
6400c92f:	pop    esi
6400c930:	pop    ebx
6400c931:	mov    esp,ebp
6400c933:	pop    ebp
6400c934:	ret    
6400c935:	int3   
6400c936:	int3   
6400c937:	int3   
6400c938:	int3   
6400c939:	int3   
6400c93a:	int3   
6400c93b:	int3   
6400c93c:	int3   
6400c93d:	int3   
6400c93e:	int3   
6400c93f:	int3   
6400c940:	push   ebp
6400c941:	mov    ebp,esp
6400c943:	and    esp,0xfffffff8
6400c946:	push   0xffffffff
6400c948:	push   0x6402353e
6400c94d:	mov    eax,fs:0x0
6400c953:	push   eax
6400c954:	push   ecx
6400c955:	push   ebx
6400c956:	push   esi
6400c957:	mov    eax,ds:0x6402d09c
6400c95c:	xor    eax,esp
6400c95e:	push   eax
6400c95f:	lea    eax,[esp+0x10]
6400c963:	mov    fs:0x0,eax
6400c969:	mov    ebx,0x1
6400c96e:	test   BYTE PTR ds:0x6403148c,bl
6400c974:	jne    0x6400c9fe
6400c97a:	or     DWORD PTR ds:0x6403148c,ebx
6400c980:	push   0x64028790
6400c985:	push   0xf
6400c987:	push   0x640287c4
6400c98c:	mov    DWORD PTR [esp+0x24],0x0
6400c994:	call   0x64005710
6400c999:	push   0x640287d4
6400c99e:	push   0x8
6400c9a0:	push   0x64028710
6400c9a5:	mov    esi,eax
6400c9a7:	call   0x640059d0
6400c9ac:	add    esp,0x18
6400c9af:	push   eax
6400c9b0:	call   DWORD PTR ds:0x64025018
6400c9b6:	add    DWORD PTR ds:0x64031270,ebx
6400c9bc:	test   eax,eax
6400c9be:	je     0x6400c9e5
6400c9c0:	push   esi
6400c9c1:	push   eax
6400c9c2:	call   DWORD PTR ds:0x64025014
6400c9c8:	add    DWORD PTR ds:0x64031274,ebx
6400c9ce:	mov    ds:0x64031488,eax
6400c9d3:	mov    ecx,DWORD PTR [esp+0x10]
6400c9d7:	mov    DWORD PTR fs:0x0,ecx
6400c9de:	pop    ecx
6400c9df:	pop    esi
6400c9e0:	pop    ebx
6400c9e1:	mov    esp,ebp
6400c9e3:	pop    ebp
6400c9e4:	ret    
6400c9e5:	xor    eax,eax
6400c9e7:	mov    ds:0x64031488,eax
6400c9ec:	mov    ecx,DWORD PTR [esp+0x10]
6400c9f0:	mov    DWORD PTR fs:0x0,ecx
6400c9f7:	pop    ecx
6400c9f8:	pop    esi
6400c9f9:	pop    ebx
6400c9fa:	mov    esp,ebp
6400c9fc:	pop    ebp
6400c9fd:	ret    
6400c9fe:	mov    eax,ds:0x64031488
6400ca03:	mov    ecx,DWORD PTR [esp+0x10]
6400ca07:	mov    DWORD PTR fs:0x0,ecx
6400ca0e:	pop    ecx
6400ca0f:	pop    esi
6400ca10:	pop    ebx
6400ca11:	mov    esp,ebp
6400ca13:	pop    ebp
6400ca14:	ret    
6400ca15:	int3   
6400ca16:	int3   
6400ca17:	int3   
6400ca18:	int3   
6400ca19:	int3   
6400ca1a:	int3   
6400ca1b:	int3   
6400ca1c:	int3   
6400ca1d:	int3   
6400ca1e:	int3   
6400ca1f:	int3   
6400ca20:	push   ebp
6400ca21:	mov    ebp,esp
6400ca23:	and    esp,0xfffffff8
6400ca26:	push   0xffffffff
6400ca28:	push   0x6402350e
6400ca2d:	mov    eax,fs:0x0
6400ca33:	push   eax
6400ca34:	push   ecx
6400ca35:	push   ebx
6400ca36:	push   esi
6400ca37:	mov    eax,ds:0x6402d09c
6400ca3c:	xor    eax,esp
6400ca3e:	push   eax
6400ca3f:	lea    eax,[esp+0x10]
6400ca43:	mov    fs:0x0,eax
6400ca49:	mov    ebx,0x1
6400ca4e:	test   BYTE PTR ds:0x64031484,bl
6400ca54:	jne    0x6400cade
6400ca5a:	or     DWORD PTR ds:0x64031484,ebx
6400ca60:	push   0x640287f8
6400ca65:	push   0xf
6400ca67:	push   0x64028838
6400ca6c:	mov    DWORD PTR [esp+0x24],0x0
6400ca74:	call   0x64005710
6400ca79:	push   0x64028848
6400ca7e:	push   0x8
6400ca80:	push   0x64028710
6400ca85:	mov    esi,eax
6400ca87:	call   0x640059d0
6400ca8c:	add    esp,0x18
6400ca8f:	push   eax
6400ca90:	call   DWORD PTR ds:0x64025018
6400ca96:	add    DWORD PTR ds:0x64031270,ebx
6400ca9c:	test   eax,eax
6400ca9e:	je     0x6400cac5
6400caa0:	push   esi
6400caa1:	push   eax
6400caa2:	call   DWORD PTR ds:0x64025014
6400caa8:	add    DWORD PTR ds:0x64031274,ebx
6400caae:	mov    ds:0x64031480,eax
6400cab3:	mov    ecx,DWORD PTR [esp+0x10]
6400cab7:	mov    DWORD PTR fs:0x0,ecx
6400cabe:	pop    ecx
6400cabf:	pop    esi
6400cac0:	pop    ebx
6400cac1:	mov    esp,ebp
6400cac3:	pop    ebp
6400cac4:	ret    
6400cac5:	xor    eax,eax
6400cac7:	mov    ds:0x64031480,eax
6400cacc:	mov    ecx,DWORD PTR [esp+0x10]
6400cad0:	mov    DWORD PTR fs:0x0,ecx
6400cad7:	pop    ecx
6400cad8:	pop    esi
6400cad9:	pop    ebx
6400cada:	mov    esp,ebp
6400cadc:	pop    ebp
6400cadd:	ret    
6400cade:	mov    eax,ds:0x64031480
6400cae3:	mov    ecx,DWORD PTR [esp+0x10]
6400cae7:	mov    DWORD PTR fs:0x0,ecx
6400caee:	pop    ecx
6400caef:	pop    esi
6400caf0:	pop    ebx
6400caf1:	mov    esp,ebp
6400caf3:	pop    ebp
6400caf4:	ret    
6400caf5:	int3   
6400caf6:	int3   
6400caf7:	int3   
6400caf8:	int3   
6400caf9:	int3   
6400cafa:	int3   
6400cafb:	int3   
6400cafc:	int3   
6400cafd:	int3   
6400cafe:	int3   
6400caff:	int3   
6400cb00:	push   ebp
6400cb01:	mov    ebp,esp
6400cb03:	and    esp,0xfffffff8
6400cb06:	push   0xffffffff
6400cb08:	push   0x640234de
6400cb0d:	mov    eax,fs:0x0
6400cb13:	push   eax
6400cb14:	push   ecx
6400cb15:	push   ebx
6400cb16:	push   esi
6400cb17:	mov    eax,ds:0x6402d09c
6400cb1c:	xor    eax,esp
6400cb1e:	push   eax
6400cb1f:	lea    eax,[esp+0x10]
6400cb23:	mov    fs:0x0,eax
6400cb29:	mov    ebx,0x1
6400cb2e:	test   BYTE PTR ds:0x6403147c,bl
6400cb34:	jne    0x6400cbbe
6400cb3a:	or     DWORD PTR ds:0x6403147c,ebx
6400cb40:	push   0x64028878
6400cb45:	push   0x13
6400cb47:	push   0x640288b4
6400cb4c:	mov    DWORD PTR [esp+0x24],0x0
6400cb54:	call   0x64005710
6400cb59:	push   0x640288c8
6400cb5e:	push   0x8
6400cb60:	push   0x640288fc
6400cb65:	mov    esi,eax
6400cb67:	call   0x640059d0
6400cb6c:	add    esp,0x18
6400cb6f:	push   eax
6400cb70:	call   DWORD PTR ds:0x64025018
6400cb76:	add    DWORD PTR ds:0x64031270,ebx
6400cb7c:	test   eax,eax
6400cb7e:	je     0x6400cba5
6400cb80:	push   esi
6400cb81:	push   eax
6400cb82:	call   DWORD PTR ds:0x64025014
6400cb88:	add    DWORD PTR ds:0x64031274,ebx
6400cb8e:	mov    ds:0x64031478,eax
6400cb93:	mov    ecx,DWORD PTR [esp+0x10]
6400cb97:	mov    DWORD PTR fs:0x0,ecx
6400cb9e:	pop    ecx
6400cb9f:	pop    esi
6400cba0:	pop    ebx
6400cba1:	mov    esp,ebp
6400cba3:	pop    ebp
6400cba4:	ret    
6400cba5:	xor    eax,eax
6400cba7:	mov    ds:0x64031478,eax
6400cbac:	mov    ecx,DWORD PTR [esp+0x10]
6400cbb0:	mov    DWORD PTR fs:0x0,ecx
6400cbb7:	pop    ecx
6400cbb8:	pop    esi
6400cbb9:	pop    ebx
6400cbba:	mov    esp,ebp
6400cbbc:	pop    ebp
6400cbbd:	ret    
6400cbbe:	mov    eax,ds:0x64031478
6400cbc3:	mov    ecx,DWORD PTR [esp+0x10]
6400cbc7:	mov    DWORD PTR fs:0x0,ecx
6400cbce:	pop    ecx
6400cbcf:	pop    esi
6400cbd0:	pop    ebx
6400cbd1:	mov    esp,ebp
6400cbd3:	pop    ebp
6400cbd4:	ret    
6400cbd5:	int3   
6400cbd6:	int3   
6400cbd7:	int3   
6400cbd8:	int3   
6400cbd9:	int3   
6400cbda:	int3   
6400cbdb:	int3   
6400cbdc:	int3   
6400cbdd:	int3   
6400cbde:	int3   
6400cbdf:	int3   
6400cbe0:	push   ebp
6400cbe1:	mov    ebp,esp
6400cbe3:	and    esp,0xfffffff8
6400cbe6:	push   0xffffffff
6400cbe8:	push   0x640234ae
6400cbed:	mov    eax,fs:0x0
6400cbf3:	push   eax
6400cbf4:	push   ecx
6400cbf5:	push   ebx
6400cbf6:	push   esi
6400cbf7:	mov    eax,ds:0x6402d09c
6400cbfc:	xor    eax,esp
6400cbfe:	push   eax
6400cbff:	lea    eax,[esp+0x10]
6400cc03:	mov    fs:0x0,eax
6400cc09:	mov    ebx,0x1
6400cc0e:	test   BYTE PTR ds:0x64031474,bl
6400cc14:	jne    0x6400cc9e
6400cc1a:	or     DWORD PTR ds:0x64031474,ebx
6400cc20:	push   0x64028910
6400cc25:	push   0xe
6400cc27:	push   0x64028950
6400cc2c:	mov    DWORD PTR [esp+0x24],0x0
6400cc34:	call   0x64005710
6400cc39:	push   0x64028960
6400cc3e:	push   0x8
6400cc40:	push   0x640288fc
6400cc45:	mov    esi,eax
6400cc47:	call   0x640059d0
6400cc4c:	add    esp,0x18
6400cc4f:	push   eax
6400cc50:	call   DWORD PTR ds:0x64025018
6400cc56:	add    DWORD PTR ds:0x64031270,ebx
6400cc5c:	test   eax,eax
6400cc5e:	je     0x6400cc85
6400cc60:	push   esi
6400cc61:	push   eax
6400cc62:	call   DWORD PTR ds:0x64025014
6400cc68:	add    DWORD PTR ds:0x64031274,ebx
6400cc6e:	mov    ds:0x64031470,eax
6400cc73:	mov    ecx,DWORD PTR [esp+0x10]
6400cc77:	mov    DWORD PTR fs:0x0,ecx
6400cc7e:	pop    ecx
6400cc7f:	pop    esi
6400cc80:	pop    ebx
6400cc81:	mov    esp,ebp
6400cc83:	pop    ebp
6400cc84:	ret    
6400cc85:	xor    eax,eax
6400cc87:	mov    ds:0x64031470,eax
6400cc8c:	mov    ecx,DWORD PTR [esp+0x10]
6400cc90:	mov    DWORD PTR fs:0x0,ecx
6400cc97:	pop    ecx
6400cc98:	pop    esi
6400cc99:	pop    ebx
6400cc9a:	mov    esp,ebp
6400cc9c:	pop    ebp
6400cc9d:	ret    
6400cc9e:	mov    eax,ds:0x64031470
6400cca3:	mov    ecx,DWORD PTR [esp+0x10]
6400cca7:	mov    DWORD PTR fs:0x0,ecx
6400ccae:	pop    ecx
6400ccaf:	pop    esi
6400ccb0:	pop    ebx
6400ccb1:	mov    esp,ebp
6400ccb3:	pop    ebp
6400ccb4:	ret    
6400ccb5:	int3   
6400ccb6:	int3   
6400ccb7:	int3   
6400ccb8:	int3   
6400ccb9:	int3   
6400ccba:	int3   
6400ccbb:	int3   
6400ccbc:	int3   
6400ccbd:	int3   
6400ccbe:	int3   
6400ccbf:	int3   
6400ccc0:	push   ebp
6400ccc1:	mov    ebp,esp
6400ccc3:	and    esp,0xfffffff8
6400ccc6:	push   0xffffffff
6400ccc8:	push   0x6402347e
6400cccd:	mov    eax,fs:0x0
6400ccd3:	push   eax
6400ccd4:	push   ecx
6400ccd5:	push   ebx
6400ccd6:	push   esi
6400ccd7:	mov    eax,ds:0x6402d09c
6400ccdc:	xor    eax,esp
6400ccde:	push   eax
6400ccdf:	lea    eax,[esp+0x10]
6400cce3:	mov    fs:0x0,eax
6400cce9:	mov    ebx,0x1
6400ccee:	test   BYTE PTR ds:0x6403146c,bl
6400ccf4:	jne    0x6400cd7e
6400ccfa:	or     DWORD PTR ds:0x6403146c,ebx
6400cd00:	push   0x64028998
6400cd05:	push   0xb
6400cd07:	push   0x640289c8
6400cd0c:	mov    DWORD PTR [esp+0x24],0x0
6400cd14:	call   0x64005710
6400cd19:	push   0x640289d4
6400cd1e:	push   0x8
6400cd20:	push   0x640288fc
6400cd25:	mov    esi,eax
6400cd27:	call   0x640059d0
6400cd2c:	add    esp,0x18
6400cd2f:	push   eax
6400cd30:	call   DWORD PTR ds:0x64025018
6400cd36:	add    DWORD PTR ds:0x64031270,ebx
6400cd3c:	test   eax,eax
6400cd3e:	je     0x6400cd65
6400cd40:	push   esi
6400cd41:	push   eax
6400cd42:	call   DWORD PTR ds:0x64025014
6400cd48:	add    DWORD PTR ds:0x64031274,ebx
6400cd4e:	mov    ds:0x64031468,eax
6400cd53:	mov    ecx,DWORD PTR [esp+0x10]
6400cd57:	mov    DWORD PTR fs:0x0,ecx
6400cd5e:	pop    ecx
6400cd5f:	pop    esi
6400cd60:	pop    ebx
6400cd61:	mov    esp,ebp
6400cd63:	pop    ebp
6400cd64:	ret    
6400cd65:	xor    eax,eax
6400cd67:	mov    ds:0x64031468,eax
6400cd6c:	mov    ecx,DWORD PTR [esp+0x10]
6400cd70:	mov    DWORD PTR fs:0x0,ecx
6400cd77:	pop    ecx
6400cd78:	pop    esi
6400cd79:	pop    ebx
6400cd7a:	mov    esp,ebp
6400cd7c:	pop    ebp
6400cd7d:	ret    
6400cd7e:	mov    eax,ds:0x64031468
6400cd83:	mov    ecx,DWORD PTR [esp+0x10]
6400cd87:	mov    DWORD PTR fs:0x0,ecx
6400cd8e:	pop    ecx
6400cd8f:	pop    esi
6400cd90:	pop    ebx
6400cd91:	mov    esp,ebp
6400cd93:	pop    ebp
6400cd94:	ret    
6400cd95:	int3   
6400cd96:	int3   
6400cd97:	int3   
6400cd98:	int3   
6400cd99:	int3   
6400cd9a:	int3   
6400cd9b:	int3   
6400cd9c:	int3   
6400cd9d:	int3   
6400cd9e:	int3   
6400cd9f:	int3   
6400cda0:	push   ebp
6400cda1:	mov    ebp,esp
6400cda3:	and    esp,0xfffffff8
6400cda6:	push   0xffffffff
6400cda8:	push   0x6402344e
6400cdad:	mov    eax,fs:0x0
6400cdb3:	push   eax
6400cdb4:	push   ecx
6400cdb5:	push   ebx
6400cdb6:	push   esi
6400cdb7:	mov    eax,ds:0x6402d09c
6400cdbc:	xor    eax,esp
6400cdbe:	push   eax
6400cdbf:	lea    eax,[esp+0x10]
6400cdc3:	mov    fs:0x0,eax
6400cdc9:	mov    ebx,0x1
6400cdce:	test   BYTE PTR ds:0x64031464,bl
6400cdd4:	jne    0x6400ce5e
6400cdda:	or     DWORD PTR ds:0x64031464,ebx
6400cde0:	push   0x64028a08
6400cde5:	push   0xb
6400cde7:	push   0x64028a2c
6400cdec:	mov    DWORD PTR [esp+0x24],0x0
6400cdf4:	call   0x64005710
6400cdf9:	push   0x64028a38
6400cdfe:	push   0x8
6400ce00:	push   0x640288fc
6400ce05:	mov    esi,eax
6400ce07:	call   0x640059d0
6400ce0c:	add    esp,0x18
6400ce0f:	push   eax
6400ce10:	call   DWORD PTR ds:0x64025018
6400ce16:	add    DWORD PTR ds:0x64031270,ebx
6400ce1c:	test   eax,eax
6400ce1e:	je     0x6400ce45
6400ce20:	push   esi
6400ce21:	push   eax
6400ce22:	call   DWORD PTR ds:0x64025014
6400ce28:	add    DWORD PTR ds:0x64031274,ebx
6400ce2e:	mov    ds:0x64031460,eax
6400ce33:	mov    ecx,DWORD PTR [esp+0x10]
6400ce37:	mov    DWORD PTR fs:0x0,ecx
6400ce3e:	pop    ecx
6400ce3f:	pop    esi
6400ce40:	pop    ebx
6400ce41:	mov    esp,ebp
6400ce43:	pop    ebp
6400ce44:	ret    
6400ce45:	xor    eax,eax
6400ce47:	mov    ds:0x64031460,eax
6400ce4c:	mov    ecx,DWORD PTR [esp+0x10]
6400ce50:	mov    DWORD PTR fs:0x0,ecx
6400ce57:	pop    ecx
6400ce58:	pop    esi
6400ce59:	pop    ebx
6400ce5a:	mov    esp,ebp
6400ce5c:	pop    ebp
6400ce5d:	ret    
6400ce5e:	mov    eax,ds:0x64031460
6400ce63:	mov    ecx,DWORD PTR [esp+0x10]
6400ce67:	mov    DWORD PTR fs:0x0,ecx
6400ce6e:	pop    ecx
6400ce6f:	pop    esi
6400ce70:	pop    ebx
6400ce71:	mov    esp,ebp
6400ce73:	pop    ebp
6400ce74:	ret    
6400ce75:	int3   
6400ce76:	int3   
6400ce77:	int3   
6400ce78:	int3   
6400ce79:	int3   
6400ce7a:	int3   
6400ce7b:	int3   
6400ce7c:	int3   
6400ce7d:	int3   
6400ce7e:	int3   
6400ce7f:	int3   
6400ce80:	push   ebp
6400ce81:	mov    ebp,esp
6400ce83:	and    esp,0xfffffff8
6400ce86:	push   0xffffffff
6400ce88:	push   0x6402341e
6400ce8d:	mov    eax,fs:0x0
6400ce93:	push   eax
6400ce94:	push   ecx
6400ce95:	push   ebx
6400ce96:	push   esi
6400ce97:	mov    eax,ds:0x6402d09c
6400ce9c:	xor    eax,esp
6400ce9e:	push   eax
6400ce9f:	lea    eax,[esp+0x10]
6400cea3:	mov    fs:0x0,eax
6400cea9:	mov    ebx,0x1
6400ceae:	test   BYTE PTR ds:0x6403145c,bl
6400ceb4:	jne    0x6400cf3e
6400ceba:	or     DWORD PTR ds:0x6403145c,ebx
6400cec0:	push   0x64028a5c
6400cec5:	push   0xb
6400cec7:	push   0x64028a8c
6400cecc:	mov    DWORD PTR [esp+0x24],0x0
6400ced4:	call   0x64005710
6400ced9:	push   0x64028a98
6400cede:	push   0x8
6400cee0:	push   0x640288fc
6400cee5:	mov    esi,eax
6400cee7:	call   0x640059d0
6400ceec:	add    esp,0x18
6400ceef:	push   eax
6400cef0:	call   DWORD PTR ds:0x64025018
6400cef6:	add    DWORD PTR ds:0x64031270,ebx
6400cefc:	test   eax,eax
6400cefe:	je     0x6400cf25
6400cf00:	push   esi
6400cf01:	push   eax
6400cf02:	call   DWORD PTR ds:0x64025014
6400cf08:	add    DWORD PTR ds:0x64031274,ebx
6400cf0e:	mov    ds:0x64031458,eax
6400cf13:	mov    ecx,DWORD PTR [esp+0x10]
6400cf17:	mov    DWORD PTR fs:0x0,ecx
6400cf1e:	pop    ecx
6400cf1f:	pop    esi
6400cf20:	pop    ebx
6400cf21:	mov    esp,ebp
6400cf23:	pop    ebp
6400cf24:	ret    
6400cf25:	xor    eax,eax
6400cf27:	mov    ds:0x64031458,eax
6400cf2c:	mov    ecx,DWORD PTR [esp+0x10]
6400cf30:	mov    DWORD PTR fs:0x0,ecx
6400cf37:	pop    ecx
6400cf38:	pop    esi
6400cf39:	pop    ebx
6400cf3a:	mov    esp,ebp
6400cf3c:	pop    ebp
6400cf3d:	ret    
6400cf3e:	mov    eax,ds:0x64031458
6400cf43:	mov    ecx,DWORD PTR [esp+0x10]
6400cf47:	mov    DWORD PTR fs:0x0,ecx
6400cf4e:	pop    ecx
6400cf4f:	pop    esi
6400cf50:	pop    ebx
6400cf51:	mov    esp,ebp
6400cf53:	pop    ebp
6400cf54:	ret    
6400cf55:	int3   
6400cf56:	int3   
6400cf57:	int3   
6400cf58:	int3   
6400cf59:	int3   
6400cf5a:	int3   
6400cf5b:	int3   
6400cf5c:	int3   
6400cf5d:	int3   
6400cf5e:	int3   
6400cf5f:	int3   
6400cf60:	push   ebp
6400cf61:	mov    ebp,esp
6400cf63:	and    esp,0xfffffff8
6400cf66:	push   0xffffffff
6400cf68:	push   0x640233ee
6400cf6d:	mov    eax,fs:0x0
6400cf73:	push   eax
6400cf74:	push   ecx
6400cf75:	push   ebx
6400cf76:	push   esi
6400cf77:	mov    eax,ds:0x6402d09c
6400cf7c:	xor    eax,esp
6400cf7e:	push   eax
6400cf7f:	lea    eax,[esp+0x10]
6400cf83:	mov    fs:0x0,eax
6400cf89:	mov    ebx,0x1
6400cf8e:	test   BYTE PTR ds:0x64031454,bl
6400cf94:	jne    0x6400d01e
6400cf9a:	or     DWORD PTR ds:0x64031454,ebx
6400cfa0:	push   0x64028acc
6400cfa5:	push   0xc
6400cfa7:	push   0x64028b00
6400cfac:	mov    DWORD PTR [esp+0x24],0x0
6400cfb4:	call   0x64005710
6400cfb9:	push   0x64028b10
6400cfbe:	push   0x8
6400cfc0:	push   0x640288fc
6400cfc5:	mov    esi,eax
6400cfc7:	call   0x640059d0
6400cfcc:	add    esp,0x18
6400cfcf:	push   eax
6400cfd0:	call   DWORD PTR ds:0x64025018
6400cfd6:	add    DWORD PTR ds:0x64031270,ebx
6400cfdc:	test   eax,eax
6400cfde:	je     0x6400d005
6400cfe0:	push   esi
6400cfe1:	push   eax
6400cfe2:	call   DWORD PTR ds:0x64025014
6400cfe8:	add    DWORD PTR ds:0x64031274,ebx
6400cfee:	mov    ds:0x64031450,eax
6400cff3:	mov    ecx,DWORD PTR [esp+0x10]
6400cff7:	mov    DWORD PTR fs:0x0,ecx
6400cffe:	pop    ecx
6400cfff:	pop    esi
6400d000:	pop    ebx
6400d001:	mov    esp,ebp
6400d003:	pop    ebp
6400d004:	ret    
6400d005:	xor    eax,eax
6400d007:	mov    ds:0x64031450,eax
6400d00c:	mov    ecx,DWORD PTR [esp+0x10]
6400d010:	mov    DWORD PTR fs:0x0,ecx
6400d017:	pop    ecx
6400d018:	pop    esi
6400d019:	pop    ebx
6400d01a:	mov    esp,ebp
6400d01c:	pop    ebp
6400d01d:	ret    
6400d01e:	mov    eax,ds:0x64031450
6400d023:	mov    ecx,DWORD PTR [esp+0x10]
6400d027:	mov    DWORD PTR fs:0x0,ecx
6400d02e:	pop    ecx
6400d02f:	pop    esi
6400d030:	pop    ebx
6400d031:	mov    esp,ebp
6400d033:	pop    ebp
6400d034:	ret    
6400d035:	int3   
6400d036:	int3   
6400d037:	int3   
6400d038:	int3   
6400d039:	int3   
6400d03a:	int3   
6400d03b:	int3   
6400d03c:	int3   
6400d03d:	int3   
6400d03e:	int3   
6400d03f:	int3   
6400d040:	push   ebp
6400d041:	mov    ebp,esp
6400d043:	and    esp,0xfffffff8
6400d046:	push   0xffffffff
6400d048:	push   0x640233be
6400d04d:	mov    eax,fs:0x0
6400d053:	push   eax
6400d054:	push   ecx
6400d055:	push   ebx
6400d056:	push   esi
6400d057:	mov    eax,ds:0x6402d09c
6400d05c:	xor    eax,esp
6400d05e:	push   eax
6400d05f:	lea    eax,[esp+0x10]
6400d063:	mov    fs:0x0,eax
6400d069:	mov    ebx,0x1
6400d06e:	test   BYTE PTR ds:0x6403144c,bl
6400d074:	jne    0x6400d0fe
6400d07a:	or     DWORD PTR ds:0x6403144c,ebx
6400d080:	push   0x64028b38
6400d085:	push   0x10
6400d087:	push   0x64028b74
6400d08c:	mov    DWORD PTR [esp+0x24],0x0
6400d094:	call   0x64005710
6400d099:	push   0x64028b88
6400d09e:	push   0x8
6400d0a0:	push   0x640288fc
6400d0a5:	mov    esi,eax
6400d0a7:	call   0x640059d0
6400d0ac:	add    esp,0x18
6400d0af:	push   eax
6400d0b0:	call   DWORD PTR ds:0x64025018
6400d0b6:	add    DWORD PTR ds:0x64031270,ebx
6400d0bc:	test   eax,eax
6400d0be:	je     0x6400d0e5
6400d0c0:	push   esi
6400d0c1:	push   eax
6400d0c2:	call   DWORD PTR ds:0x64025014
6400d0c8:	add    DWORD PTR ds:0x64031274,ebx
6400d0ce:	mov    ds:0x64031448,eax
6400d0d3:	mov    ecx,DWORD PTR [esp+0x10]
6400d0d7:	mov    DWORD PTR fs:0x0,ecx
6400d0de:	pop    ecx
6400d0df:	pop    esi
6400d0e0:	pop    ebx
6400d0e1:	mov    esp,ebp
6400d0e3:	pop    ebp
6400d0e4:	ret    
6400d0e5:	xor    eax,eax
6400d0e7:	mov    ds:0x64031448,eax
6400d0ec:	mov    ecx,DWORD PTR [esp+0x10]
6400d0f0:	mov    DWORD PTR fs:0x0,ecx
6400d0f7:	pop    ecx
6400d0f8:	pop    esi
6400d0f9:	pop    ebx
6400d0fa:	mov    esp,ebp
6400d0fc:	pop    ebp
6400d0fd:	ret    
6400d0fe:	mov    eax,ds:0x64031448
6400d103:	mov    ecx,DWORD PTR [esp+0x10]
6400d107:	mov    DWORD PTR fs:0x0,ecx
6400d10e:	pop    ecx
6400d10f:	pop    esi
6400d110:	pop    ebx
6400d111:	mov    esp,ebp
6400d113:	pop    ebp
6400d114:	ret    
6400d115:	int3   
6400d116:	int3   
6400d117:	int3   
6400d118:	int3   
6400d119:	int3   
6400d11a:	int3   
6400d11b:	int3   
6400d11c:	int3   
6400d11d:	int3   
6400d11e:	int3   
6400d11f:	int3   
6400d120:	push   ebp
6400d121:	mov    ebp,esp
6400d123:	and    esp,0xfffffff8
6400d126:	push   0xffffffff
6400d128:	push   0x6402338e
6400d12d:	mov    eax,fs:0x0
6400d133:	push   eax
6400d134:	push   ecx
6400d135:	push   ebx
6400d136:	push   esi
6400d137:	mov    eax,ds:0x6402d09c
6400d13c:	xor    eax,esp
6400d13e:	push   eax
6400d13f:	lea    eax,[esp+0x10]
6400d143:	mov    fs:0x0,eax
6400d149:	mov    ebx,0x1
6400d14e:	test   BYTE PTR ds:0x64031444,bl
6400d154:	jne    0x6400d1de
6400d15a:	or     DWORD PTR ds:0x64031444,ebx
6400d160:	push   0x64028bb8
6400d165:	push   0x10
6400d167:	push   0x64028bf8
6400d16c:	mov    DWORD PTR [esp+0x24],0x0
6400d174:	call   0x64005710
6400d179:	push   0x64028c0c
6400d17e:	push   0x8
6400d180:	push   0x640288fc
6400d185:	mov    esi,eax
6400d187:	call   0x640059d0
6400d18c:	add    esp,0x18
6400d18f:	push   eax
6400d190:	call   DWORD PTR ds:0x64025018
6400d196:	add    DWORD PTR ds:0x64031270,ebx
6400d19c:	test   eax,eax
6400d19e:	je     0x6400d1c5
6400d1a0:	push   esi
6400d1a1:	push   eax
6400d1a2:	call   DWORD PTR ds:0x64025014
6400d1a8:	add    DWORD PTR ds:0x64031274,ebx
6400d1ae:	mov    ds:0x64031440,eax
6400d1b3:	mov    ecx,DWORD PTR [esp+0x10]
6400d1b7:	mov    DWORD PTR fs:0x0,ecx
6400d1be:	pop    ecx
6400d1bf:	pop    esi
6400d1c0:	pop    ebx
6400d1c1:	mov    esp,ebp
6400d1c3:	pop    ebp
6400d1c4:	ret    
6400d1c5:	xor    eax,eax
6400d1c7:	mov    ds:0x64031440,eax
6400d1cc:	mov    ecx,DWORD PTR [esp+0x10]
6400d1d0:	mov    DWORD PTR fs:0x0,ecx
6400d1d7:	pop    ecx
6400d1d8:	pop    esi
6400d1d9:	pop    ebx
6400d1da:	mov    esp,ebp
6400d1dc:	pop    ebp
6400d1dd:	ret    
6400d1de:	mov    eax,ds:0x64031440
6400d1e3:	mov    ecx,DWORD PTR [esp+0x10]
6400d1e7:	mov    DWORD PTR fs:0x0,ecx
6400d1ee:	pop    ecx
6400d1ef:	pop    esi
6400d1f0:	pop    ebx
6400d1f1:	mov    esp,ebp
6400d1f3:	pop    ebp
6400d1f4:	ret    
6400d1f5:	int3   
6400d1f6:	int3   
6400d1f7:	int3   
6400d1f8:	int3   
6400d1f9:	int3   
6400d1fa:	int3   
6400d1fb:	int3   
6400d1fc:	int3   
6400d1fd:	int3   
6400d1fe:	int3   
6400d1ff:	int3   
6400d200:	push   ebp
6400d201:	mov    ebp,esp
6400d203:	and    esp,0xfffffff8
6400d206:	push   0xffffffff
6400d208:	push   0x6402335e
6400d20d:	mov    eax,fs:0x0
6400d213:	push   eax
6400d214:	push   ecx
6400d215:	push   ebx
6400d216:	push   esi
6400d217:	mov    eax,ds:0x6402d09c
6400d21c:	xor    eax,esp
6400d21e:	push   eax
6400d21f:	lea    eax,[esp+0x10]
6400d223:	mov    fs:0x0,eax
6400d229:	mov    ebx,0x1
6400d22e:	test   BYTE PTR ds:0x6403143c,bl
6400d234:	jne    0x6400d2be
6400d23a:	or     DWORD PTR ds:0x6403143c,ebx
6400d240:	push   0x64028c3c
6400d245:	push   0x15
6400d247:	push   0x64028c6c
6400d24c:	mov    DWORD PTR [esp+0x24],0x0
6400d254:	call   0x64005710
6400d259:	push   0x64028c84
6400d25e:	push   0x8
6400d260:	push   0x640288fc
6400d265:	mov    esi,eax
6400d267:	call   0x640059d0
6400d26c:	add    esp,0x18
6400d26f:	push   eax
6400d270:	call   DWORD PTR ds:0x64025018
6400d276:	add    DWORD PTR ds:0x64031270,ebx
6400d27c:	test   eax,eax
6400d27e:	je     0x6400d2a5
6400d280:	push   esi
6400d281:	push   eax
6400d282:	call   DWORD PTR ds:0x64025014
6400d288:	add    DWORD PTR ds:0x64031274,ebx
6400d28e:	mov    ds:0x64031438,eax
6400d293:	mov    ecx,DWORD PTR [esp+0x10]
6400d297:	mov    DWORD PTR fs:0x0,ecx
6400d29e:	pop    ecx
6400d29f:	pop    esi
6400d2a0:	pop    ebx
6400d2a1:	mov    esp,ebp
6400d2a3:	pop    ebp
6400d2a4:	ret    
6400d2a5:	xor    eax,eax
6400d2a7:	mov    ds:0x64031438,eax
6400d2ac:	mov    ecx,DWORD PTR [esp+0x10]
6400d2b0:	mov    DWORD PTR fs:0x0,ecx
6400d2b7:	pop    ecx
6400d2b8:	pop    esi
6400d2b9:	pop    ebx
6400d2ba:	mov    esp,ebp
6400d2bc:	pop    ebp
6400d2bd:	ret    
6400d2be:	mov    eax,ds:0x64031438
6400d2c3:	mov    ecx,DWORD PTR [esp+0x10]
6400d2c7:	mov    DWORD PTR fs:0x0,ecx
6400d2ce:	pop    ecx
6400d2cf:	pop    esi
6400d2d0:	pop    ebx
6400d2d1:	mov    esp,ebp
6400d2d3:	pop    ebp
6400d2d4:	ret    
6400d2d5:	int3   
6400d2d6:	int3   
6400d2d7:	int3   
6400d2d8:	int3   
6400d2d9:	int3   
6400d2da:	int3   
6400d2db:	int3   
6400d2dc:	int3   
6400d2dd:	int3   
6400d2de:	int3   
6400d2df:	int3   
6400d2e0:	push   ebp
6400d2e1:	mov    ebp,esp
6400d2e3:	and    esp,0xfffffff8
6400d2e6:	push   0xffffffff
6400d2e8:	push   0x6402332e
6400d2ed:	mov    eax,fs:0x0
6400d2f3:	push   eax
6400d2f4:	push   ecx
6400d2f5:	push   ebx
6400d2f6:	push   esi
6400d2f7:	mov    eax,ds:0x6402d09c
6400d2fc:	xor    eax,esp
6400d2fe:	push   eax
6400d2ff:	lea    eax,[esp+0x10]
6400d303:	mov    fs:0x0,eax
6400d309:	mov    ebx,0x1
6400d30e:	test   BYTE PTR ds:0x64031434,bl
6400d314:	jne    0x6400d39e
6400d31a:	or     DWORD PTR ds:0x64031434,ebx
6400d320:	push   0x64028cb8
6400d325:	push   0x18
6400d327:	push   0x64028cec
6400d32c:	mov    DWORD PTR [esp+0x24],0x0
6400d334:	call   0x64005710
6400d339:	push   0x64028d08
6400d33e:	push   0x8
6400d340:	push   0x640288fc
6400d345:	mov    esi,eax
6400d347:	call   0x640059d0
6400d34c:	add    esp,0x18
6400d34f:	push   eax
6400d350:	call   DWORD PTR ds:0x64025018
6400d356:	add    DWORD PTR ds:0x64031270,ebx
6400d35c:	test   eax,eax
6400d35e:	je     0x6400d385
6400d360:	push   esi
6400d361:	push   eax
6400d362:	call   DWORD PTR ds:0x64025014
6400d368:	add    DWORD PTR ds:0x64031274,ebx
6400d36e:	mov    ds:0x64031430,eax
6400d373:	mov    ecx,DWORD PTR [esp+0x10]
6400d377:	mov    DWORD PTR fs:0x0,ecx
6400d37e:	pop    ecx
6400d37f:	pop    esi
6400d380:	pop    ebx
6400d381:	mov    esp,ebp
6400d383:	pop    ebp
6400d384:	ret    
6400d385:	xor    eax,eax
6400d387:	mov    ds:0x64031430,eax
6400d38c:	mov    ecx,DWORD PTR [esp+0x10]
6400d390:	mov    DWORD PTR fs:0x0,ecx
6400d397:	pop    ecx
6400d398:	pop    esi
6400d399:	pop    ebx
6400d39a:	mov    esp,ebp
6400d39c:	pop    ebp
6400d39d:	ret    
6400d39e:	mov    eax,ds:0x64031430
6400d3a3:	mov    ecx,DWORD PTR [esp+0x10]
6400d3a7:	mov    DWORD PTR fs:0x0,ecx
6400d3ae:	pop    ecx
6400d3af:	pop    esi
6400d3b0:	pop    ebx
6400d3b1:	mov    esp,ebp
6400d3b3:	pop    ebp
6400d3b4:	ret    
6400d3b5:	int3   
6400d3b6:	int3   
6400d3b7:	int3   
6400d3b8:	int3   
6400d3b9:	int3   
6400d3ba:	int3   
6400d3bb:	int3   
6400d3bc:	int3   
6400d3bd:	int3   
6400d3be:	int3   
6400d3bf:	int3   
6400d3c0:	push   ebp
6400d3c1:	mov    ebp,esp
6400d3c3:	and    esp,0xfffffff8
6400d3c6:	push   0xffffffff
6400d3c8:	push   0x640232fe
6400d3cd:	mov    eax,fs:0x0
6400d3d3:	push   eax
6400d3d4:	push   ecx
6400d3d5:	push   ebx
6400d3d6:	push   esi
6400d3d7:	mov    eax,ds:0x6402d09c
6400d3dc:	xor    eax,esp
6400d3de:	push   eax
6400d3df:	lea    eax,[esp+0x10]
6400d3e3:	mov    fs:0x0,eax
6400d3e9:	mov    ebx,0x1
6400d3ee:	test   BYTE PTR ds:0x6403142c,bl
6400d3f4:	jne    0x6400d47e
6400d3fa:	or     DWORD PTR ds:0x6403142c,ebx
6400d400:	push   0x64028d40
6400d405:	push   0xf
6400d407:	push   0x64028d74
6400d40c:	mov    DWORD PTR [esp+0x24],0x0
6400d414:	call   0x64005710
6400d419:	push   0x64028d84
6400d41e:	push   0x8
6400d420:	push   0x640288fc
6400d425:	mov    esi,eax
6400d427:	call   0x640059d0
6400d42c:	add    esp,0x18
6400d42f:	push   eax
6400d430:	call   DWORD PTR ds:0x64025018
6400d436:	add    DWORD PTR ds:0x64031270,ebx
6400d43c:	test   eax,eax
6400d43e:	je     0x6400d465
6400d440:	push   esi
6400d441:	push   eax
6400d442:	call   DWORD PTR ds:0x64025014
6400d448:	add    DWORD PTR ds:0x64031274,ebx
6400d44e:	mov    ds:0x64031428,eax
6400d453:	mov    ecx,DWORD PTR [esp+0x10]
6400d457:	mov    DWORD PTR fs:0x0,ecx
6400d45e:	pop    ecx
6400d45f:	pop    esi
6400d460:	pop    ebx
6400d461:	mov    esp,ebp
6400d463:	pop    ebp
6400d464:	ret    
6400d465:	xor    eax,eax
6400d467:	mov    ds:0x64031428,eax
6400d46c:	mov    ecx,DWORD PTR [esp+0x10]
6400d470:	mov    DWORD PTR fs:0x0,ecx
6400d477:	pop    ecx
6400d478:	pop    esi
6400d479:	pop    ebx
6400d47a:	mov    esp,ebp
6400d47c:	pop    ebp
6400d47d:	ret    
6400d47e:	mov    eax,ds:0x64031428
6400d483:	mov    ecx,DWORD PTR [esp+0x10]
6400d487:	mov    DWORD PTR fs:0x0,ecx
6400d48e:	pop    ecx
6400d48f:	pop    esi
6400d490:	pop    ebx
6400d491:	mov    esp,ebp
6400d493:	pop    ebp
6400d494:	ret    
6400d495:	int3   
6400d496:	int3   
6400d497:	int3   
6400d498:	int3   
6400d499:	int3   
6400d49a:	int3   
6400d49b:	int3   
6400d49c:	int3   
6400d49d:	int3   
6400d49e:	int3   
6400d49f:	int3   
6400d4a0:	push   ebp
6400d4a1:	mov    ebp,esp
6400d4a3:	and    esp,0xfffffff8
6400d4a6:	push   0xffffffff
6400d4a8:	push   0x640232ce
6400d4ad:	mov    eax,fs:0x0
6400d4b3:	push   eax
6400d4b4:	push   ecx
6400d4b5:	push   ebx
6400d4b6:	push   esi
6400d4b7:	mov    eax,ds:0x6402d09c
6400d4bc:	xor    eax,esp
6400d4be:	push   eax
6400d4bf:	lea    eax,[esp+0x10]
6400d4c3:	mov    fs:0x0,eax
6400d4c9:	mov    ebx,0x1
6400d4ce:	test   BYTE PTR ds:0x64031424,bl
6400d4d4:	jne    0x6400d55e
6400d4da:	or     DWORD PTR ds:0x64031424,ebx
6400d4e0:	push   0x64028dc0
6400d4e5:	push   0x14
6400d4e7:	push   0x64028de8
6400d4ec:	mov    DWORD PTR [esp+0x24],0x0
6400d4f4:	call   0x64005710
6400d4f9:	push   0x64028e00
6400d4fe:	push   0x8
6400d500:	push   0x640288fc
6400d505:	mov    esi,eax
6400d507:	call   0x640059d0
6400d50c:	add    esp,0x18
6400d50f:	push   eax
6400d510:	call   DWORD PTR ds:0x64025018
6400d516:	add    DWORD PTR ds:0x64031270,ebx
6400d51c:	test   eax,eax
6400d51e:	je     0x6400d545
6400d520:	push   esi
6400d521:	push   eax
6400d522:	call   DWORD PTR ds:0x64025014
6400d528:	add    DWORD PTR ds:0x64031274,ebx
6400d52e:	mov    ds:0x64031420,eax
6400d533:	mov    ecx,DWORD PTR [esp+0x10]
6400d537:	mov    DWORD PTR fs:0x0,ecx
6400d53e:	pop    ecx
6400d53f:	pop    esi
6400d540:	pop    ebx
6400d541:	mov    esp,ebp
6400d543:	pop    ebp
6400d544:	ret    
6400d545:	xor    eax,eax
6400d547:	mov    ds:0x64031420,eax
6400d54c:	mov    ecx,DWORD PTR [esp+0x10]
6400d550:	mov    DWORD PTR fs:0x0,ecx
6400d557:	pop    ecx
6400d558:	pop    esi
6400d559:	pop    ebx
6400d55a:	mov    esp,ebp
6400d55c:	pop    ebp
6400d55d:	ret    
6400d55e:	mov    eax,ds:0x64031420
6400d563:	mov    ecx,DWORD PTR [esp+0x10]
6400d567:	mov    DWORD PTR fs:0x0,ecx
6400d56e:	pop    ecx
6400d56f:	pop    esi
6400d570:	pop    ebx
6400d571:	mov    esp,ebp
6400d573:	pop    ebp
6400d574:	ret    
6400d575:	int3   
6400d576:	int3   
6400d577:	int3   
6400d578:	int3   
6400d579:	int3   
6400d57a:	int3   
6400d57b:	int3   
6400d57c:	int3   
6400d57d:	int3   
6400d57e:	int3   
6400d57f:	int3   
6400d580:	push   ebp
6400d581:	mov    ebp,esp
6400d583:	and    esp,0xfffffff8
6400d586:	push   0xffffffff
6400d588:	push   0x6402329e
6400d58d:	mov    eax,fs:0x0
6400d593:	push   eax
6400d594:	push   ecx
6400d595:	push   ebx
6400d596:	push   esi
6400d597:	mov    eax,ds:0x6402d09c
6400d59c:	xor    eax,esp
6400d59e:	push   eax
6400d59f:	lea    eax,[esp+0x10]
6400d5a3:	mov    fs:0x0,eax
6400d5a9:	mov    ebx,0x1
6400d5ae:	test   BYTE PTR ds:0x6403141c,bl
6400d5b4:	jne    0x6400d63e
6400d5ba:	or     DWORD PTR ds:0x6403141c,ebx
6400d5c0:	push   0x64028e30
6400d5c5:	push   0x14
6400d5c7:	push   0x64028e6c
6400d5cc:	mov    DWORD PTR [esp+0x24],0x0
6400d5d4:	call   0x64005710
6400d5d9:	push   0x64028e84
6400d5de:	push   0x8
6400d5e0:	push   0x640288fc
6400d5e5:	mov    esi,eax
6400d5e7:	call   0x640059d0
6400d5ec:	add    esp,0x18
6400d5ef:	push   eax
6400d5f0:	call   DWORD PTR ds:0x64025018
6400d5f6:	add    DWORD PTR ds:0x64031270,ebx
6400d5fc:	test   eax,eax
6400d5fe:	je     0x6400d625
6400d600:	push   esi
6400d601:	push   eax
6400d602:	call   DWORD PTR ds:0x64025014
6400d608:	add    DWORD PTR ds:0x64031274,ebx
6400d60e:	mov    ds:0x64031418,eax
6400d613:	mov    ecx,DWORD PTR [esp+0x10]
6400d617:	mov    DWORD PTR fs:0x0,ecx
6400d61e:	pop    ecx
6400d61f:	pop    esi
6400d620:	pop    ebx
6400d621:	mov    esp,ebp
6400d623:	pop    ebp
6400d624:	ret    
6400d625:	xor    eax,eax
6400d627:	mov    ds:0x64031418,eax
6400d62c:	mov    ecx,DWORD PTR [esp+0x10]
6400d630:	mov    DWORD PTR fs:0x0,ecx
6400d637:	pop    ecx
6400d638:	pop    esi
6400d639:	pop    ebx
6400d63a:	mov    esp,ebp
6400d63c:	pop    ebp
6400d63d:	ret    
6400d63e:	mov    eax,ds:0x64031418
6400d643:	mov    ecx,DWORD PTR [esp+0x10]
6400d647:	mov    DWORD PTR fs:0x0,ecx
6400d64e:	pop    ecx
6400d64f:	pop    esi
6400d650:	pop    ebx
6400d651:	mov    esp,ebp
6400d653:	pop    ebp
6400d654:	ret    
6400d655:	int3   
6400d656:	int3   
6400d657:	int3   
6400d658:	int3   
6400d659:	int3   
6400d65a:	int3   
6400d65b:	int3   
6400d65c:	int3   
6400d65d:	int3   
6400d65e:	int3   
6400d65f:	int3   
6400d660:	push   ebp
6400d661:	mov    ebp,esp
6400d663:	and    esp,0xfffffff8
6400d666:	push   0xffffffff
6400d668:	push   0x6402326e
6400d66d:	mov    eax,fs:0x0
6400d673:	push   eax
6400d674:	push   ecx
6400d675:	push   ebx
6400d676:	push   esi
6400d677:	mov    eax,ds:0x6402d09c
6400d67c:	xor    eax,esp
6400d67e:	push   eax
6400d67f:	lea    eax,[esp+0x10]
6400d683:	mov    fs:0x0,eax
6400d689:	mov    ebx,0x1
6400d68e:	test   BYTE PTR ds:0x64031414,bl
6400d694:	jne    0x6400d71e
6400d69a:	or     DWORD PTR ds:0x64031414,ebx
6400d6a0:	push   0x64028eac
6400d6a5:	push   0xf
6400d6a7:	push   0x64028ed4
6400d6ac:	mov    DWORD PTR [esp+0x24],0x0
6400d6b4:	call   0x64005710
6400d6b9:	push   0x64028ee4
6400d6be:	push   0x8
6400d6c0:	push   0x640288fc
6400d6c5:	mov    esi,eax
6400d6c7:	call   0x640059d0
6400d6cc:	add    esp,0x18
6400d6cf:	push   eax
6400d6d0:	call   DWORD PTR ds:0x64025018
6400d6d6:	add    DWORD PTR ds:0x64031270,ebx
6400d6dc:	test   eax,eax
6400d6de:	je     0x6400d705
6400d6e0:	push   esi
6400d6e1:	push   eax
6400d6e2:	call   DWORD PTR ds:0x64025014
6400d6e8:	add    DWORD PTR ds:0x64031274,ebx
6400d6ee:	mov    ds:0x64031410,eax
6400d6f3:	mov    ecx,DWORD PTR [esp+0x10]
6400d6f7:	mov    DWORD PTR fs:0x0,ecx
6400d6fe:	pop    ecx
6400d6ff:	pop    esi
6400d700:	pop    ebx
6400d701:	mov    esp,ebp
6400d703:	pop    ebp
6400d704:	ret    
6400d705:	xor    eax,eax
6400d707:	mov    ds:0x64031410,eax
6400d70c:	mov    ecx,DWORD PTR [esp+0x10]
6400d710:	mov    DWORD PTR fs:0x0,ecx
6400d717:	pop    ecx
6400d718:	pop    esi
6400d719:	pop    ebx
6400d71a:	mov    esp,ebp
6400d71c:	pop    ebp
6400d71d:	ret    
6400d71e:	mov    eax,ds:0x64031410
6400d723:	mov    ecx,DWORD PTR [esp+0x10]
6400d727:	mov    DWORD PTR fs:0x0,ecx
6400d72e:	pop    ecx
6400d72f:	pop    esi
6400d730:	pop    ebx
6400d731:	mov    esp,ebp
6400d733:	pop    ebp
6400d734:	ret    
6400d735:	int3   
6400d736:	int3   
6400d737:	int3   
6400d738:	int3   
6400d739:	int3   
6400d73a:	int3   
6400d73b:	int3   
6400d73c:	int3   
6400d73d:	int3   
6400d73e:	int3   
6400d73f:	int3   
6400d740:	push   ebp
6400d741:	mov    ebp,esp
6400d743:	and    esp,0xfffffff8
6400d746:	push   0xffffffff
6400d748:	push   0x6402323e
6400d74d:	mov    eax,fs:0x0
6400d753:	push   eax
6400d754:	push   ecx
6400d755:	push   ebx
6400d756:	push   esi
6400d757:	mov    eax,ds:0x6402d09c
6400d75c:	xor    eax,esp
6400d75e:	push   eax
6400d75f:	lea    eax,[esp+0x10]
6400d763:	mov    fs:0x0,eax
6400d769:	mov    ebx,0x1
6400d76e:	test   BYTE PTR ds:0x6403140c,bl
6400d774:	jne    0x6400d7fe
6400d77a:	or     DWORD PTR ds:0x6403140c,ebx
6400d780:	push   0x64028f18
6400d785:	push   0x12
6400d787:	push   0x64028f58
6400d78c:	mov    DWORD PTR [esp+0x24],0x0
6400d794:	call   0x64005710
6400d799:	push   0x64028f6c
6400d79e:	push   0x8
6400d7a0:	push   0x640288fc
6400d7a5:	mov    esi,eax
6400d7a7:	call   0x640059d0
6400d7ac:	add    esp,0x18
6400d7af:	push   eax
6400d7b0:	call   DWORD PTR ds:0x64025018
6400d7b6:	add    DWORD PTR ds:0x64031270,ebx
6400d7bc:	test   eax,eax
6400d7be:	je     0x6400d7e5
6400d7c0:	push   esi
6400d7c1:	push   eax
6400d7c2:	call   DWORD PTR ds:0x64025014
6400d7c8:	add    DWORD PTR ds:0x64031274,ebx
6400d7ce:	mov    ds:0x64031408,eax
6400d7d3:	mov    ecx,DWORD PTR [esp+0x10]
6400d7d7:	mov    DWORD PTR fs:0x0,ecx
6400d7de:	pop    ecx
6400d7df:	pop    esi
6400d7e0:	pop    ebx
6400d7e1:	mov    esp,ebp
6400d7e3:	pop    ebp
6400d7e4:	ret    
6400d7e5:	xor    eax,eax
6400d7e7:	mov    ds:0x64031408,eax
6400d7ec:	mov    ecx,DWORD PTR [esp+0x10]
6400d7f0:	mov    DWORD PTR fs:0x0,ecx
6400d7f7:	pop    ecx
6400d7f8:	pop    esi
6400d7f9:	pop    ebx
6400d7fa:	mov    esp,ebp
6400d7fc:	pop    ebp
6400d7fd:	ret    
6400d7fe:	mov    eax,ds:0x64031408
6400d803:	mov    ecx,DWORD PTR [esp+0x10]
6400d807:	mov    DWORD PTR fs:0x0,ecx
6400d80e:	pop    ecx
6400d80f:	pop    esi
6400d810:	pop    ebx
6400d811:	mov    esp,ebp
6400d813:	pop    ebp
6400d814:	ret    
6400d815:	int3   
6400d816:	int3   
6400d817:	int3   
6400d818:	int3   
6400d819:	int3   
6400d81a:	int3   
6400d81b:	int3   
6400d81c:	int3   
6400d81d:	int3   
6400d81e:	int3   
6400d81f:	int3   
6400d820:	push   ebp
6400d821:	mov    ebp,esp
6400d823:	and    esp,0xfffffff8
6400d826:	push   0xffffffff
6400d828:	push   0x6402320e
6400d82d:	mov    eax,fs:0x0
6400d833:	push   eax
6400d834:	push   ecx
6400d835:	push   ebx
6400d836:	push   esi
6400d837:	mov    eax,ds:0x6402d09c
6400d83c:	xor    eax,esp
6400d83e:	push   eax
6400d83f:	lea    eax,[esp+0x10]
6400d843:	mov    fs:0x0,eax
6400d849:	mov    ebx,0x1
6400d84e:	test   BYTE PTR ds:0x64031404,bl
6400d854:	jne    0x6400d8de
6400d85a:	or     DWORD PTR ds:0x64031404,ebx
6400d860:	push   0x64028f9c
6400d865:	push   0x11
6400d867:	push   0x64028fd8
6400d86c:	mov    DWORD PTR [esp+0x24],0x0
6400d874:	call   0x64005710
6400d879:	push   0x64028fec
6400d87e:	push   0x8
6400d880:	push   0x640288fc
6400d885:	mov    esi,eax
6400d887:	call   0x640059d0
6400d88c:	add    esp,0x18
6400d88f:	push   eax
6400d890:	call   DWORD PTR ds:0x64025018
6400d896:	add    DWORD PTR ds:0x64031270,ebx
6400d89c:	test   eax,eax
6400d89e:	je     0x6400d8c5
6400d8a0:	push   esi
6400d8a1:	push   eax
6400d8a2:	call   DWORD PTR ds:0x64025014
6400d8a8:	add    DWORD PTR ds:0x64031274,ebx
6400d8ae:	mov    ds:0x64031400,eax
6400d8b3:	mov    ecx,DWORD PTR [esp+0x10]
6400d8b7:	mov    DWORD PTR fs:0x0,ecx
6400d8be:	pop    ecx
6400d8bf:	pop    esi
6400d8c0:	pop    ebx
6400d8c1:	mov    esp,ebp
6400d8c3:	pop    ebp
6400d8c4:	ret    
6400d8c5:	xor    eax,eax
6400d8c7:	mov    ds:0x64031400,eax
6400d8cc:	mov    ecx,DWORD PTR [esp+0x10]
6400d8d0:	mov    DWORD PTR fs:0x0,ecx
6400d8d7:	pop    ecx
6400d8d8:	pop    esi
6400d8d9:	pop    ebx
6400d8da:	mov    esp,ebp
6400d8dc:	pop    ebp
6400d8dd:	ret    
6400d8de:	mov    eax,ds:0x64031400
6400d8e3:	mov    ecx,DWORD PTR [esp+0x10]
6400d8e7:	mov    DWORD PTR fs:0x0,ecx
6400d8ee:	pop    ecx
6400d8ef:	pop    esi
6400d8f0:	pop    ebx
6400d8f1:	mov    esp,ebp
6400d8f3:	pop    ebp
6400d8f4:	ret    
6400d8f5:	int3   
6400d8f6:	int3   
6400d8f7:	int3   
6400d8f8:	int3   
6400d8f9:	int3   
6400d8fa:	int3   
6400d8fb:	int3   
6400d8fc:	int3   
6400d8fd:	int3   
6400d8fe:	int3   
6400d8ff:	int3   
6400d900:	push   ebp
6400d901:	mov    ebp,esp
6400d903:	and    esp,0xfffffff8
6400d906:	push   0xffffffff
6400d908:	push   0x640231de
6400d90d:	mov    eax,fs:0x0
6400d913:	push   eax
6400d914:	push   ecx
6400d915:	push   ebx
6400d916:	push   esi
6400d917:	mov    eax,ds:0x6402d09c
6400d91c:	xor    eax,esp
6400d91e:	push   eax
6400d91f:	lea    eax,[esp+0x10]
6400d923:	mov    fs:0x0,eax
6400d929:	mov    ebx,0x1
6400d92e:	test   BYTE PTR ds:0x640313fc,bl
6400d934:	jne    0x6400d9be
6400d93a:	or     DWORD PTR ds:0x640313fc,ebx
6400d940:	push   0x64029014
6400d945:	push   0x17
6400d947:	push   0x64029044
6400d94c:	mov    DWORD PTR [esp+0x24],0x0
6400d954:	call   0x64005710
6400d959:	push   0x6402905c
6400d95e:	push   0x8
6400d960:	push   0x64029098
6400d965:	mov    esi,eax
6400d967:	call   0x640059d0
6400d96c:	add    esp,0x18
6400d96f:	push   eax
6400d970:	call   DWORD PTR ds:0x64025018
6400d976:	add    DWORD PTR ds:0x64031270,ebx
6400d97c:	test   eax,eax
6400d97e:	je     0x6400d9a5
6400d980:	push   esi
6400d981:	push   eax
6400d982:	call   DWORD PTR ds:0x64025014
6400d988:	add    DWORD PTR ds:0x64031274,ebx
6400d98e:	mov    ds:0x640313f8,eax
6400d993:	mov    ecx,DWORD PTR [esp+0x10]
6400d997:	mov    DWORD PTR fs:0x0,ecx
6400d99e:	pop    ecx
6400d99f:	pop    esi
6400d9a0:	pop    ebx
6400d9a1:	mov    esp,ebp
6400d9a3:	pop    ebp
6400d9a4:	ret    
6400d9a5:	xor    eax,eax
6400d9a7:	mov    ds:0x640313f8,eax
6400d9ac:	mov    ecx,DWORD PTR [esp+0x10]
6400d9b0:	mov    DWORD PTR fs:0x0,ecx
6400d9b7:	pop    ecx
6400d9b8:	pop    esi
6400d9b9:	pop    ebx
6400d9ba:	mov    esp,ebp
6400d9bc:	pop    ebp
6400d9bd:	ret    
6400d9be:	mov    eax,ds:0x640313f8
6400d9c3:	mov    ecx,DWORD PTR [esp+0x10]
6400d9c7:	mov    DWORD PTR fs:0x0,ecx
6400d9ce:	pop    ecx
6400d9cf:	pop    esi
6400d9d0:	pop    ebx
6400d9d1:	mov    esp,ebp
6400d9d3:	pop    ebp
6400d9d4:	ret    
6400d9d5:	int3   
6400d9d6:	int3   
6400d9d7:	int3   
6400d9d8:	int3   
6400d9d9:	int3   
6400d9da:	int3   
6400d9db:	int3   
6400d9dc:	int3   
6400d9dd:	int3   
6400d9de:	int3   
6400d9df:	int3   
6400d9e0:	push   ebp
6400d9e1:	mov    ebp,esp
6400d9e3:	and    esp,0xfffffff8
6400d9e6:	push   0xffffffff
6400d9e8:	push   0x640231ae
6400d9ed:	mov    eax,fs:0x0
6400d9f3:	push   eax
6400d9f4:	push   ecx
6400d9f5:	push   ebx
6400d9f6:	push   esi
6400d9f7:	mov    eax,ds:0x6402d09c
6400d9fc:	xor    eax,esp
6400d9fe:	push   eax
6400d9ff:	lea    eax,[esp+0x10]
6400da03:	mov    fs:0x0,eax
6400da09:	mov    ebx,0x1
6400da0e:	test   BYTE PTR ds:0x640313f4,bl
6400da14:	jne    0x6400da9e
6400da1a:	or     DWORD PTR ds:0x640313f4,ebx
6400da20:	push   0x640290ac
6400da25:	push   0x19
6400da27:	push   0x640290ec
6400da2c:	mov    DWORD PTR [esp+0x24],0x0
6400da34:	call   0x64005710
6400da39:	push   0x64029108
6400da3e:	push   0x7
6400da40:	push   0x6402913c
6400da45:	mov    esi,eax
6400da47:	call   0x640059d0
6400da4c:	add    esp,0x18
6400da4f:	push   eax
6400da50:	call   DWORD PTR ds:0x64025018
6400da56:	add    DWORD PTR ds:0x64031270,ebx
6400da5c:	test   eax,eax
6400da5e:	je     0x6400da85
6400da60:	push   esi
6400da61:	push   eax
6400da62:	call   DWORD PTR ds:0x64025014
6400da68:	add    DWORD PTR ds:0x64031274,ebx
6400da6e:	mov    ds:0x640313f0,eax
6400da73:	mov    ecx,DWORD PTR [esp+0x10]
6400da77:	mov    DWORD PTR fs:0x0,ecx
6400da7e:	pop    ecx
6400da7f:	pop    esi
6400da80:	pop    ebx
6400da81:	mov    esp,ebp
6400da83:	pop    ebp
6400da84:	ret    
6400da85:	xor    eax,eax
6400da87:	mov    ds:0x640313f0,eax
6400da8c:	mov    ecx,DWORD PTR [esp+0x10]
6400da90:	mov    DWORD PTR fs:0x0,ecx
6400da97:	pop    ecx
6400da98:	pop    esi
6400da99:	pop    ebx
6400da9a:	mov    esp,ebp
6400da9c:	pop    ebp
6400da9d:	ret    
6400da9e:	mov    eax,ds:0x640313f0
6400daa3:	mov    ecx,DWORD PTR [esp+0x10]
6400daa7:	mov    DWORD PTR fs:0x0,ecx
6400daae:	pop    ecx
6400daaf:	pop    esi
6400dab0:	pop    ebx
6400dab1:	mov    esp,ebp
6400dab3:	pop    ebp
6400dab4:	ret    
6400dab5:	int3   
6400dab6:	int3   
6400dab7:	int3   
6400dab8:	int3   
6400dab9:	int3   
6400daba:	int3   
6400dabb:	int3   
6400dabc:	int3   
6400dabd:	int3   
6400dabe:	int3   
6400dabf:	int3   
6400dac0:	push   ebp
6400dac1:	mov    ebp,esp
6400dac3:	and    esp,0xfffffff8
6400dac6:	push   0xffffffff
6400dac8:	push   0x6402317e
6400dacd:	mov    eax,fs:0x0
6400dad3:	push   eax
6400dad4:	push   ecx
6400dad5:	push   ebx
6400dad6:	push   esi
6400dad7:	mov    eax,ds:0x6402d09c
6400dadc:	xor    eax,esp
6400dade:	push   eax
6400dadf:	lea    eax,[esp+0x10]
6400dae3:	mov    fs:0x0,eax
6400dae9:	mov    ebx,0x1
6400daee:	test   BYTE PTR ds:0x640313ec,bl
6400daf4:	jne    0x6400db7e
6400dafa:	or     DWORD PTR ds:0x640313ec,ebx
6400db00:	push   0x6402914c
6400db05:	push   0x1d
6400db07:	push   0x64029170
6400db0c:	mov    DWORD PTR [esp+0x24],0x0
6400db14:	call   0x64005710
6400db19:	push   0x64029190
6400db1e:	push   0x8
6400db20:	push   0x640291b8
6400db25:	mov    esi,eax
6400db27:	call   0x640059d0
6400db2c:	add    esp,0x18
6400db2f:	push   eax
6400db30:	call   DWORD PTR ds:0x64025018
6400db36:	add    DWORD PTR ds:0x64031270,ebx
6400db3c:	test   eax,eax
6400db3e:	je     0x6400db65
6400db40:	push   esi
6400db41:	push   eax
6400db42:	call   DWORD PTR ds:0x64025014
6400db48:	add    DWORD PTR ds:0x64031274,ebx
6400db4e:	mov    ds:0x640313e8,eax
6400db53:	mov    ecx,DWORD PTR [esp+0x10]
6400db57:	mov    DWORD PTR fs:0x0,ecx
6400db5e:	pop    ecx
6400db5f:	pop    esi
6400db60:	pop    ebx
6400db61:	mov    esp,ebp
6400db63:	pop    ebp
6400db64:	ret    
6400db65:	xor    eax,eax
6400db67:	mov    ds:0x640313e8,eax
6400db6c:	mov    ecx,DWORD PTR [esp+0x10]
6400db70:	mov    DWORD PTR fs:0x0,ecx
6400db77:	pop    ecx
6400db78:	pop    esi
6400db79:	pop    ebx
6400db7a:	mov    esp,ebp
6400db7c:	pop    ebp
6400db7d:	ret    
6400db7e:	mov    eax,ds:0x640313e8
6400db83:	mov    ecx,DWORD PTR [esp+0x10]
6400db87:	mov    DWORD PTR fs:0x0,ecx
6400db8e:	pop    ecx
6400db8f:	pop    esi
6400db90:	pop    ebx
6400db91:	mov    esp,ebp
6400db93:	pop    ebp
6400db94:	ret    
6400db95:	int3   
6400db96:	int3   
6400db97:	int3   
6400db98:	int3   
6400db99:	int3   
6400db9a:	int3   
6400db9b:	int3   
6400db9c:	int3   
6400db9d:	int3   
6400db9e:	int3   
6400db9f:	int3   
6400dba0:	push   ebp
6400dba1:	mov    ebp,esp
6400dba3:	and    esp,0xfffffff8
6400dba6:	push   0xffffffff
6400dba8:	push   0x6402314e
6400dbad:	mov    eax,fs:0x0
6400dbb3:	push   eax
6400dbb4:	push   ecx
6400dbb5:	push   ebx
6400dbb6:	push   esi
6400dbb7:	mov    eax,ds:0x6402d09c
6400dbbc:	xor    eax,esp
6400dbbe:	push   eax
6400dbbf:	lea    eax,[esp+0x10]
6400dbc3:	mov    fs:0x0,eax
6400dbc9:	mov    ebx,0x1
6400dbce:	test   BYTE PTR ds:0x640313e4,bl
6400dbd4:	jne    0x6400dc5e
6400dbda:	or     DWORD PTR ds:0x640313e4,ebx
6400dbe0:	push   0x640291cc
6400dbe5:	push   0x15
6400dbe7:	push   0x640291f8
6400dbec:	mov    DWORD PTR [esp+0x24],0x0
6400dbf4:	call   0x64005710
6400dbf9:	push   0x64029210
6400dbfe:	push   0x8
6400dc00:	push   0x640291b8
6400dc05:	mov    esi,eax
6400dc07:	call   0x640059d0
6400dc0c:	add    esp,0x18
6400dc0f:	push   eax
6400dc10:	call   DWORD PTR ds:0x64025018
6400dc16:	add    DWORD PTR ds:0x64031270,ebx
6400dc1c:	test   eax,eax
6400dc1e:	je     0x6400dc45
6400dc20:	push   esi
6400dc21:	push   eax
6400dc22:	call   DWORD PTR ds:0x64025014
6400dc28:	add    DWORD PTR ds:0x64031274,ebx
6400dc2e:	mov    ds:0x640313e0,eax
6400dc33:	mov    ecx,DWORD PTR [esp+0x10]
6400dc37:	mov    DWORD PTR fs:0x0,ecx
6400dc3e:	pop    ecx
6400dc3f:	pop    esi
6400dc40:	pop    ebx
6400dc41:	mov    esp,ebp
6400dc43:	pop    ebp
6400dc44:	ret    
6400dc45:	xor    eax,eax
6400dc47:	mov    ds:0x640313e0,eax
6400dc4c:	mov    ecx,DWORD PTR [esp+0x10]
6400dc50:	mov    DWORD PTR fs:0x0,ecx
6400dc57:	pop    ecx
6400dc58:	pop    esi
6400dc59:	pop    ebx
6400dc5a:	mov    esp,ebp
6400dc5c:	pop    ebp
6400dc5d:	ret    
6400dc5e:	mov    eax,ds:0x640313e0
6400dc63:	mov    ecx,DWORD PTR [esp+0x10]
6400dc67:	mov    DWORD PTR fs:0x0,ecx
6400dc6e:	pop    ecx
6400dc6f:	pop    esi
6400dc70:	pop    ebx
6400dc71:	mov    esp,ebp
6400dc73:	pop    ebp
6400dc74:	ret    
6400dc75:	int3   
6400dc76:	int3   
6400dc77:	int3   
6400dc78:	int3   
6400dc79:	int3   
6400dc7a:	int3   
6400dc7b:	int3   
6400dc7c:	int3   
6400dc7d:	int3   
6400dc7e:	int3   
6400dc7f:	int3   
6400dc80:	push   ebp
6400dc81:	mov    ebp,esp
6400dc83:	and    esp,0xfffffff8
6400dc86:	push   0xffffffff
6400dc88:	push   0x6402311e
6400dc8d:	mov    eax,fs:0x0
6400dc93:	push   eax
6400dc94:	push   ecx
6400dc95:	push   ebx
6400dc96:	push   esi
6400dc97:	mov    eax,ds:0x6402d09c
6400dc9c:	xor    eax,esp
6400dc9e:	push   eax
6400dc9f:	lea    eax,[esp+0x10]
6400dca3:	mov    fs:0x0,eax
6400dca9:	mov    ebx,0x1
6400dcae:	test   BYTE PTR ds:0x640313dc,bl
6400dcb4:	jne    0x6400dd3e
6400dcba:	or     DWORD PTR ds:0x640313dc,ebx
6400dcc0:	push   0x64029250
6400dcc5:	push   0x15
6400dcc7:	push   0x64029274
6400dccc:	mov    DWORD PTR [esp+0x24],0x0
6400dcd4:	call   0x64005710
6400dcd9:	push   0x6402928c
6400dcde:	push   0x8
6400dce0:	push   0x640291b8
6400dce5:	mov    esi,eax
6400dce7:	call   0x640059d0
6400dcec:	add    esp,0x18
6400dcef:	push   eax
6400dcf0:	call   DWORD PTR ds:0x64025018
6400dcf6:	add    DWORD PTR ds:0x64031270,ebx
6400dcfc:	test   eax,eax
6400dcfe:	je     0x6400dd25
6400dd00:	push   esi
6400dd01:	push   eax
6400dd02:	call   DWORD PTR ds:0x64025014
6400dd08:	add    DWORD PTR ds:0x64031274,ebx
6400dd0e:	mov    ds:0x640313d8,eax
6400dd13:	mov    ecx,DWORD PTR [esp+0x10]
6400dd17:	mov    DWORD PTR fs:0x0,ecx
6400dd1e:	pop    ecx
6400dd1f:	pop    esi
6400dd20:	pop    ebx
6400dd21:	mov    esp,ebp
6400dd23:	pop    ebp
6400dd24:	ret    
6400dd25:	xor    eax,eax
6400dd27:	mov    ds:0x640313d8,eax
6400dd2c:	mov    ecx,DWORD PTR [esp+0x10]
6400dd30:	mov    DWORD PTR fs:0x0,ecx
6400dd37:	pop    ecx
6400dd38:	pop    esi
6400dd39:	pop    ebx
6400dd3a:	mov    esp,ebp
6400dd3c:	pop    ebp
6400dd3d:	ret    
6400dd3e:	mov    eax,ds:0x640313d8
6400dd43:	mov    ecx,DWORD PTR [esp+0x10]
6400dd47:	mov    DWORD PTR fs:0x0,ecx
6400dd4e:	pop    ecx
6400dd4f:	pop    esi
6400dd50:	pop    ebx
6400dd51:	mov    esp,ebp
6400dd53:	pop    ebp
6400dd54:	ret    
6400dd55:	int3   
6400dd56:	int3   
6400dd57:	int3   
6400dd58:	int3   
6400dd59:	int3   
6400dd5a:	int3   
6400dd5b:	int3   
6400dd5c:	int3   
6400dd5d:	int3   
6400dd5e:	int3   
6400dd5f:	int3   
6400dd60:	push   ebp
6400dd61:	mov    ebp,esp
6400dd63:	and    esp,0xfffffff8
6400dd66:	push   0xffffffff
6400dd68:	push   0x640230ee
6400dd6d:	mov    eax,fs:0x0
6400dd73:	push   eax
6400dd74:	push   ecx
6400dd75:	push   ebx
6400dd76:	push   esi
6400dd77:	mov    eax,ds:0x6402d09c
6400dd7c:	xor    eax,esp
6400dd7e:	push   eax
6400dd7f:	lea    eax,[esp+0x10]
6400dd83:	mov    fs:0x0,eax
6400dd89:	mov    ebx,0x1
6400dd8e:	test   BYTE PTR ds:0x640313d4,bl
6400dd94:	jne    0x6400de1e
6400dd9a:	or     DWORD PTR ds:0x640313d4,ebx
6400dda0:	push   0x640292c4
6400dda5:	push   0x34
6400dda7:	push   0x64029300
6400ddac:	mov    DWORD PTR [esp+0x24],0x0
6400ddb4:	call   0x64005710
6400ddb9:	push   0x64029338
6400ddbe:	push   0x8
6400ddc0:	push   0x640291b8
6400ddc5:	mov    esi,eax
6400ddc7:	call   0x640059d0
6400ddcc:	add    esp,0x18
6400ddcf:	push   eax
6400ddd0:	call   DWORD PTR ds:0x64025018
6400ddd6:	add    DWORD PTR ds:0x64031270,ebx
6400dddc:	test   eax,eax
6400ddde:	je     0x6400de05
6400dde0:	push   esi
6400dde1:	push   eax
6400dde2:	call   DWORD PTR ds:0x64025014
6400dde8:	add    DWORD PTR ds:0x64031274,ebx
6400ddee:	mov    ds:0x640313d0,eax
6400ddf3:	mov    ecx,DWORD PTR [esp+0x10]
6400ddf7:	mov    DWORD PTR fs:0x0,ecx
6400ddfe:	pop    ecx
6400ddff:	pop    esi
6400de00:	pop    ebx
6400de01:	mov    esp,ebp
6400de03:	pop    ebp
6400de04:	ret    
6400de05:	xor    eax,eax
6400de07:	mov    ds:0x640313d0,eax
6400de0c:	mov    ecx,DWORD PTR [esp+0x10]
6400de10:	mov    DWORD PTR fs:0x0,ecx
6400de17:	pop    ecx
6400de18:	pop    esi
6400de19:	pop    ebx
6400de1a:	mov    esp,ebp
6400de1c:	pop    ebp
6400de1d:	ret    
6400de1e:	mov    eax,ds:0x640313d0
6400de23:	mov    ecx,DWORD PTR [esp+0x10]
6400de27:	mov    DWORD PTR fs:0x0,ecx
6400de2e:	pop    ecx
6400de2f:	pop    esi
6400de30:	pop    ebx
6400de31:	mov    esp,ebp
6400de33:	pop    ebp
6400de34:	ret    
6400de35:	int3   
6400de36:	int3   
6400de37:	int3   
6400de38:	int3   
6400de39:	int3   
6400de3a:	int3   
6400de3b:	int3   
6400de3c:	int3   
6400de3d:	int3   
6400de3e:	int3   
6400de3f:	int3   
6400de40:	push   ebp
6400de41:	mov    ebp,esp
6400de43:	and    esp,0xfffffff8
6400de46:	push   0xffffffff
6400de48:	push   0x640230be
6400de4d:	mov    eax,fs:0x0
6400de53:	push   eax
6400de54:	push   ecx
6400de55:	push   ebx
6400de56:	push   esi
6400de57:	mov    eax,ds:0x6402d09c
6400de5c:	xor    eax,esp
6400de5e:	push   eax
6400de5f:	lea    eax,[esp+0x10]
6400de63:	mov    fs:0x0,eax
6400de69:	mov    ebx,0x1
6400de6e:	test   BYTE PTR ds:0x640313cc,bl
6400de74:	jne    0x6400defe
6400de7a:	or     DWORD PTR ds:0x640313cc,ebx
6400de80:	push   0x64029360
6400de85:	push   0xb
6400de87:	push   0x6402938c
6400de8c:	mov    DWORD PTR [esp+0x24],0x0
6400de94:	call   0x64005710
6400de99:	push   0x64029398
6400de9e:	push   0x8
6400dea0:	push   0x640291b8
6400dea5:	mov    esi,eax
6400dea7:	call   0x640059d0
6400deac:	add    esp,0x18
6400deaf:	push   eax
6400deb0:	call   DWORD PTR ds:0x64025018
6400deb6:	add    DWORD PTR ds:0x64031270,ebx
6400debc:	test   eax,eax
6400debe:	je     0x6400dee5
6400dec0:	push   esi
6400dec1:	push   eax
6400dec2:	call   DWORD PTR ds:0x64025014
6400dec8:	add    DWORD PTR ds:0x64031274,ebx
6400dece:	mov    ds:0x640313c8,eax
6400ded3:	mov    ecx,DWORD PTR [esp+0x10]
6400ded7:	mov    DWORD PTR fs:0x0,ecx
6400dede:	pop    ecx
6400dedf:	pop    esi
6400dee0:	pop    ebx
6400dee1:	mov    esp,ebp
6400dee3:	pop    ebp
6400dee4:	ret    
6400dee5:	xor    eax,eax
6400dee7:	mov    ds:0x640313c8,eax
6400deec:	mov    ecx,DWORD PTR [esp+0x10]
6400def0:	mov    DWORD PTR fs:0x0,ecx
6400def7:	pop    ecx
6400def8:	pop    esi
6400def9:	pop    ebx
6400defa:	mov    esp,ebp
6400defc:	pop    ebp
6400defd:	ret    
6400defe:	mov    eax,ds:0x640313c8
6400df03:	mov    ecx,DWORD PTR [esp+0x10]
6400df07:	mov    DWORD PTR fs:0x0,ecx
6400df0e:	pop    ecx
6400df0f:	pop    esi
6400df10:	pop    ebx
6400df11:	mov    esp,ebp
6400df13:	pop    ebp
6400df14:	ret    
6400df15:	int3   
6400df16:	int3   
6400df17:	int3   
6400df18:	int3   
6400df19:	int3   
6400df1a:	int3   
6400df1b:	int3   
6400df1c:	int3   
6400df1d:	int3   
6400df1e:	int3   
6400df1f:	int3   
6400df20:	push   ebp
6400df21:	mov    ebp,esp
6400df23:	and    esp,0xfffffff8
6400df26:	push   0xffffffff
6400df28:	push   0x6402308e
6400df2d:	mov    eax,fs:0x0
6400df33:	push   eax
6400df34:	push   ecx
6400df35:	push   ebx
6400df36:	push   esi
6400df37:	mov    eax,ds:0x6402d09c
6400df3c:	xor    eax,esp
6400df3e:	push   eax
6400df3f:	lea    eax,[esp+0x10]
6400df43:	mov    fs:0x0,eax
6400df49:	mov    ebx,0x1
6400df4e:	test   BYTE PTR ds:0x640313c4,bl
6400df54:	jne    0x6400dfde
6400df5a:	or     DWORD PTR ds:0x640313c4,ebx
6400df60:	push   0x640293c8
6400df65:	push   0xd
6400df67:	push   0x640293f0
6400df6c:	mov    DWORD PTR [esp+0x24],0x0
6400df74:	call   0x64005710
6400df79:	push   0x64029400
6400df7e:	push   0x8
6400df80:	push   0x640291b8
6400df85:	mov    esi,eax
6400df87:	call   0x640059d0
6400df8c:	add    esp,0x18
6400df8f:	push   eax
6400df90:	call   DWORD PTR ds:0x64025018
6400df96:	add    DWORD PTR ds:0x64031270,ebx
6400df9c:	test   eax,eax
6400df9e:	je     0x6400dfc5
6400dfa0:	push   esi
6400dfa1:	push   eax
6400dfa2:	call   DWORD PTR ds:0x64025014
6400dfa8:	add    DWORD PTR ds:0x64031274,ebx
6400dfae:	mov    ds:0x640313c0,eax
6400dfb3:	mov    ecx,DWORD PTR [esp+0x10]
6400dfb7:	mov    DWORD PTR fs:0x0,ecx
6400dfbe:	pop    ecx
6400dfbf:	pop    esi
6400dfc0:	pop    ebx
6400dfc1:	mov    esp,ebp
6400dfc3:	pop    ebp
6400dfc4:	ret    
6400dfc5:	xor    eax,eax
6400dfc7:	mov    ds:0x640313c0,eax
6400dfcc:	mov    ecx,DWORD PTR [esp+0x10]
6400dfd0:	mov    DWORD PTR fs:0x0,ecx
6400dfd7:	pop    ecx
6400dfd8:	pop    esi
6400dfd9:	pop    ebx
6400dfda:	mov    esp,ebp
6400dfdc:	pop    ebp
6400dfdd:	ret    
6400dfde:	mov    eax,ds:0x640313c0
6400dfe3:	mov    ecx,DWORD PTR [esp+0x10]
6400dfe7:	mov    DWORD PTR fs:0x0,ecx
6400dfee:	pop    ecx
6400dfef:	pop    esi
6400dff0:	pop    ebx
6400dff1:	mov    esp,ebp
6400dff3:	pop    ebp
6400dff4:	ret    
6400dff5:	int3   
6400dff6:	int3   
6400dff7:	int3   
6400dff8:	int3   
6400dff9:	int3   
6400dffa:	int3   
6400dffb:	int3   
6400dffc:	int3   
6400dffd:	int3   
6400dffe:	int3   
6400dfff:	int3   
6400e000:	push   ebp
6400e001:	mov    ebp,esp
6400e003:	and    esp,0xfffffff8
6400e006:	push   0xffffffff
6400e008:	push   0x6402305e
6400e00d:	mov    eax,fs:0x0
6400e013:	push   eax
6400e014:	push   ecx
6400e015:	push   ebx
6400e016:	push   esi
6400e017:	mov    eax,ds:0x6402d09c
6400e01c:	xor    eax,esp
6400e01e:	push   eax
6400e01f:	lea    eax,[esp+0x10]
6400e023:	mov    fs:0x0,eax
6400e029:	mov    ebx,0x1
6400e02e:	test   BYTE PTR ds:0x640313bc,bl
6400e034:	jne    0x6400e0be
6400e03a:	or     DWORD PTR ds:0x640313bc,ebx
6400e040:	push   0x64029424
6400e045:	push   0xe
6400e047:	push   0x6402944c
6400e04c:	mov    DWORD PTR [esp+0x24],0x0
6400e054:	call   0x64005710
6400e059:	push   0x64029460
6400e05e:	push   0x8
6400e060:	push   0x640291b8
6400e065:	mov    esi,eax
6400e067:	call   0x640059d0
6400e06c:	add    esp,0x18
6400e06f:	push   eax
6400e070:	call   DWORD PTR ds:0x64025018
6400e076:	add    DWORD PTR ds:0x64031270,ebx
6400e07c:	test   eax,eax
6400e07e:	je     0x6400e0a5
6400e080:	push   esi
6400e081:	push   eax
6400e082:	call   DWORD PTR ds:0x64025014
6400e088:	add    DWORD PTR ds:0x64031274,ebx
6400e08e:	mov    ds:0x640313b8,eax
6400e093:	mov    ecx,DWORD PTR [esp+0x10]
6400e097:	mov    DWORD PTR fs:0x0,ecx
6400e09e:	pop    ecx
6400e09f:	pop    esi
6400e0a0:	pop    ebx
6400e0a1:	mov    esp,ebp
6400e0a3:	pop    ebp
6400e0a4:	ret    
6400e0a5:	xor    eax,eax
6400e0a7:	mov    ds:0x640313b8,eax
6400e0ac:	mov    ecx,DWORD PTR [esp+0x10]
6400e0b0:	mov    DWORD PTR fs:0x0,ecx
6400e0b7:	pop    ecx
6400e0b8:	pop    esi
6400e0b9:	pop    ebx
6400e0ba:	mov    esp,ebp
6400e0bc:	pop    ebp
6400e0bd:	ret    
6400e0be:	mov    eax,ds:0x640313b8
6400e0c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e0c7:	mov    DWORD PTR fs:0x0,ecx
6400e0ce:	pop    ecx
6400e0cf:	pop    esi
6400e0d0:	pop    ebx
6400e0d1:	mov    esp,ebp
6400e0d3:	pop    ebp
6400e0d4:	ret    
6400e0d5:	int3   
6400e0d6:	int3   
6400e0d7:	int3   
6400e0d8:	int3   
6400e0d9:	int3   
6400e0da:	int3   
6400e0db:	int3   
6400e0dc:	int3   
6400e0dd:	int3   
6400e0de:	int3   
6400e0df:	int3   
6400e0e0:	push   ebp
6400e0e1:	mov    ebp,esp
6400e0e3:	and    esp,0xfffffff8
6400e0e6:	push   0xffffffff
6400e0e8:	push   0x6402302e
6400e0ed:	mov    eax,fs:0x0
6400e0f3:	push   eax
6400e0f4:	push   ecx
6400e0f5:	push   ebx
6400e0f6:	push   esi
6400e0f7:	mov    eax,ds:0x6402d09c
6400e0fc:	xor    eax,esp
6400e0fe:	push   eax
6400e0ff:	lea    eax,[esp+0x10]
6400e103:	mov    fs:0x0,eax
6400e109:	mov    ebx,0x1
6400e10e:	test   BYTE PTR ds:0x640313b4,bl
6400e114:	jne    0x6400e19e
6400e11a:	or     DWORD PTR ds:0x640313b4,ebx
6400e120:	push   0x640294a0
6400e125:	push   0x14
6400e127:	push   0x640294e0
6400e12c:	mov    DWORD PTR [esp+0x24],0x0
6400e134:	call   0x64005710
6400e139:	push   0x640294f8
6400e13e:	push   0x8
6400e140:	push   0x640291b8
6400e145:	mov    esi,eax
6400e147:	call   0x640059d0
6400e14c:	add    esp,0x18
6400e14f:	push   eax
6400e150:	call   DWORD PTR ds:0x64025018
6400e156:	add    DWORD PTR ds:0x64031270,ebx
6400e15c:	test   eax,eax
6400e15e:	je     0x6400e185
6400e160:	push   esi
6400e161:	push   eax
6400e162:	call   DWORD PTR ds:0x64025014
6400e168:	add    DWORD PTR ds:0x64031274,ebx
6400e16e:	mov    ds:0x640313b0,eax
6400e173:	mov    ecx,DWORD PTR [esp+0x10]
6400e177:	mov    DWORD PTR fs:0x0,ecx
6400e17e:	pop    ecx
6400e17f:	pop    esi
6400e180:	pop    ebx
6400e181:	mov    esp,ebp
6400e183:	pop    ebp
6400e184:	ret    
6400e185:	xor    eax,eax
6400e187:	mov    ds:0x640313b0,eax
6400e18c:	mov    ecx,DWORD PTR [esp+0x10]
6400e190:	mov    DWORD PTR fs:0x0,ecx
6400e197:	pop    ecx
6400e198:	pop    esi
6400e199:	pop    ebx
6400e19a:	mov    esp,ebp
6400e19c:	pop    ebp
6400e19d:	ret    
6400e19e:	mov    eax,ds:0x640313b0
6400e1a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e1a7:	mov    DWORD PTR fs:0x0,ecx
6400e1ae:	pop    ecx
6400e1af:	pop    esi
6400e1b0:	pop    ebx
6400e1b1:	mov    esp,ebp
6400e1b3:	pop    ebp
6400e1b4:	ret    
6400e1b5:	int3   
6400e1b6:	int3   
6400e1b7:	int3   
6400e1b8:	int3   
6400e1b9:	int3   
6400e1ba:	int3   
6400e1bb:	int3   
6400e1bc:	int3   
6400e1bd:	int3   
6400e1be:	int3   
6400e1bf:	int3   
6400e1c0:	push   ebp
6400e1c1:	mov    ebp,esp
6400e1c3:	and    esp,0xfffffff8
6400e1c6:	push   0xffffffff
6400e1c8:	push   0x64022ffe
6400e1cd:	mov    eax,fs:0x0
6400e1d3:	push   eax
6400e1d4:	push   ecx
6400e1d5:	push   ebx
6400e1d6:	push   esi
6400e1d7:	mov    eax,ds:0x6402d09c
6400e1dc:	xor    eax,esp
6400e1de:	push   eax
6400e1df:	lea    eax,[esp+0x10]
6400e1e3:	mov    fs:0x0,eax
6400e1e9:	mov    ebx,0x1
6400e1ee:	test   BYTE PTR ds:0x640313ac,bl
6400e1f4:	jne    0x6400e27e
6400e1fa:	or     DWORD PTR ds:0x640313ac,ebx
6400e200:	push   0x6402952c
6400e205:	push   0xd
6400e207:	push   0x64029554
6400e20c:	mov    DWORD PTR [esp+0x24],0x0
6400e214:	call   0x64005710
6400e219:	push   0x64029564
6400e21e:	push   0x8
6400e220:	push   0x640291b8
6400e225:	mov    esi,eax
6400e227:	call   0x640059d0
6400e22c:	add    esp,0x18
6400e22f:	push   eax
6400e230:	call   DWORD PTR ds:0x64025018
6400e236:	add    DWORD PTR ds:0x64031270,ebx
6400e23c:	test   eax,eax
6400e23e:	je     0x6400e265
6400e240:	push   esi
6400e241:	push   eax
6400e242:	call   DWORD PTR ds:0x64025014
6400e248:	add    DWORD PTR ds:0x64031274,ebx
6400e24e:	mov    ds:0x640313a8,eax
6400e253:	mov    ecx,DWORD PTR [esp+0x10]
6400e257:	mov    DWORD PTR fs:0x0,ecx
6400e25e:	pop    ecx
6400e25f:	pop    esi
6400e260:	pop    ebx
6400e261:	mov    esp,ebp
6400e263:	pop    ebp
6400e264:	ret    
6400e265:	xor    eax,eax
6400e267:	mov    ds:0x640313a8,eax
6400e26c:	mov    ecx,DWORD PTR [esp+0x10]
6400e270:	mov    DWORD PTR fs:0x0,ecx
6400e277:	pop    ecx
6400e278:	pop    esi
6400e279:	pop    ebx
6400e27a:	mov    esp,ebp
6400e27c:	pop    ebp
6400e27d:	ret    
6400e27e:	mov    eax,ds:0x640313a8
6400e283:	mov    ecx,DWORD PTR [esp+0x10]
6400e287:	mov    DWORD PTR fs:0x0,ecx
6400e28e:	pop    ecx
6400e28f:	pop    esi
6400e290:	pop    ebx
6400e291:	mov    esp,ebp
6400e293:	pop    ebp
6400e294:	ret    
6400e295:	int3   
6400e296:	int3   
6400e297:	int3   
6400e298:	int3   
6400e299:	int3   
6400e29a:	int3   
6400e29b:	int3   
6400e29c:	int3   
6400e29d:	int3   
6400e29e:	int3   
6400e29f:	int3   
6400e2a0:	push   ebp
6400e2a1:	mov    ebp,esp
6400e2a3:	and    esp,0xfffffff8
6400e2a6:	push   0xffffffff
6400e2a8:	push   0x64022fce
6400e2ad:	mov    eax,fs:0x0
6400e2b3:	push   eax
6400e2b4:	push   ecx
6400e2b5:	push   ebx
6400e2b6:	push   esi
6400e2b7:	mov    eax,ds:0x6402d09c
6400e2bc:	xor    eax,esp
6400e2be:	push   eax
6400e2bf:	lea    eax,[esp+0x10]
6400e2c3:	mov    fs:0x0,eax
6400e2c9:	mov    ebx,0x1
6400e2ce:	test   BYTE PTR ds:0x640313a4,bl
6400e2d4:	jne    0x6400e35e
6400e2da:	or     DWORD PTR ds:0x640313a4,ebx
6400e2e0:	push   0x6402958c
6400e2e5:	push   0xe
6400e2e7:	push   0x640295bc
6400e2ec:	mov    DWORD PTR [esp+0x24],0x0
6400e2f4:	call   0x64005710
6400e2f9:	push   0x640295cc
6400e2fe:	push   0x8
6400e300:	push   0x640291b8
6400e305:	mov    esi,eax
6400e307:	call   0x640059d0
6400e30c:	add    esp,0x18
6400e30f:	push   eax
6400e310:	call   DWORD PTR ds:0x64025018
6400e316:	add    DWORD PTR ds:0x64031270,ebx
6400e31c:	test   eax,eax
6400e31e:	je     0x6400e345
6400e320:	push   esi
6400e321:	push   eax
6400e322:	call   DWORD PTR ds:0x64025014
6400e328:	add    DWORD PTR ds:0x64031274,ebx
6400e32e:	mov    ds:0x640313a0,eax
6400e333:	mov    ecx,DWORD PTR [esp+0x10]
6400e337:	mov    DWORD PTR fs:0x0,ecx
6400e33e:	pop    ecx
6400e33f:	pop    esi
6400e340:	pop    ebx
6400e341:	mov    esp,ebp
6400e343:	pop    ebp
6400e344:	ret    
6400e345:	xor    eax,eax
6400e347:	mov    ds:0x640313a0,eax
6400e34c:	mov    ecx,DWORD PTR [esp+0x10]
6400e350:	mov    DWORD PTR fs:0x0,ecx
6400e357:	pop    ecx
6400e358:	pop    esi
6400e359:	pop    ebx
6400e35a:	mov    esp,ebp
6400e35c:	pop    ebp
6400e35d:	ret    
6400e35e:	mov    eax,ds:0x640313a0
6400e363:	mov    ecx,DWORD PTR [esp+0x10]
6400e367:	mov    DWORD PTR fs:0x0,ecx
6400e36e:	pop    ecx
6400e36f:	pop    esi
6400e370:	pop    ebx
6400e371:	mov    esp,ebp
6400e373:	pop    ebp
6400e374:	ret    
6400e375:	int3   
6400e376:	int3   
6400e377:	int3   
6400e378:	int3   
6400e379:	int3   
6400e37a:	int3   
6400e37b:	int3   
6400e37c:	int3   
6400e37d:	int3   
6400e37e:	int3   
6400e37f:	int3   
6400e380:	push   ebp
6400e381:	mov    ebp,esp
6400e383:	and    esp,0xfffffff8
6400e386:	push   0xffffffff
6400e388:	push   0x64022f9e
6400e38d:	mov    eax,fs:0x0
6400e393:	push   eax
6400e394:	push   ecx
6400e395:	push   ebx
6400e396:	push   esi
6400e397:	mov    eax,ds:0x6402d09c
6400e39c:	xor    eax,esp
6400e39e:	push   eax
6400e39f:	lea    eax,[esp+0x10]
6400e3a3:	mov    fs:0x0,eax
6400e3a9:	mov    ebx,0x1
6400e3ae:	test   BYTE PTR ds:0x6403139c,bl
6400e3b4:	jne    0x6400e43e
6400e3ba:	or     DWORD PTR ds:0x6403139c,ebx
6400e3c0:	push   0x640295f0
6400e3c5:	push   0xf
6400e3c7:	push   0x6402961c
6400e3cc:	mov    DWORD PTR [esp+0x24],0x0
6400e3d4:	call   0x64005710
6400e3d9:	push   0x6402962c
6400e3de:	push   0x8
6400e3e0:	push   0x640291b8
6400e3e5:	mov    esi,eax
6400e3e7:	call   0x640059d0
6400e3ec:	add    esp,0x18
6400e3ef:	push   eax
6400e3f0:	call   DWORD PTR ds:0x64025018
6400e3f6:	add    DWORD PTR ds:0x64031270,ebx
6400e3fc:	test   eax,eax
6400e3fe:	je     0x6400e425
6400e400:	push   esi
6400e401:	push   eax
6400e402:	call   DWORD PTR ds:0x64025014
6400e408:	add    DWORD PTR ds:0x64031274,ebx
6400e40e:	mov    ds:0x64031398,eax
6400e413:	mov    ecx,DWORD PTR [esp+0x10]
6400e417:	mov    DWORD PTR fs:0x0,ecx
6400e41e:	pop    ecx
6400e41f:	pop    esi
6400e420:	pop    ebx
6400e421:	mov    esp,ebp
6400e423:	pop    ebp
6400e424:	ret    
6400e425:	xor    eax,eax
6400e427:	mov    ds:0x64031398,eax
6400e42c:	mov    ecx,DWORD PTR [esp+0x10]
6400e430:	mov    DWORD PTR fs:0x0,ecx
6400e437:	pop    ecx
6400e438:	pop    esi
6400e439:	pop    ebx
6400e43a:	mov    esp,ebp
6400e43c:	pop    ebp
6400e43d:	ret    
6400e43e:	mov    eax,ds:0x64031398
6400e443:	mov    ecx,DWORD PTR [esp+0x10]
6400e447:	mov    DWORD PTR fs:0x0,ecx
6400e44e:	pop    ecx
6400e44f:	pop    esi
6400e450:	pop    ebx
6400e451:	mov    esp,ebp
6400e453:	pop    ebp
6400e454:	ret    
6400e455:	int3   
6400e456:	int3   
6400e457:	int3   
6400e458:	int3   
6400e459:	int3   
6400e45a:	int3   
6400e45b:	int3   
6400e45c:	int3   
6400e45d:	int3   
6400e45e:	int3   
6400e45f:	int3   
6400e460:	push   ebp
6400e461:	mov    ebp,esp
6400e463:	and    esp,0xfffffff8
6400e466:	push   0xffffffff
6400e468:	push   0x64022f6e
6400e46d:	mov    eax,fs:0x0
6400e473:	push   eax
6400e474:	push   ecx
6400e475:	push   ebx
6400e476:	push   esi
6400e477:	mov    eax,ds:0x6402d09c
6400e47c:	xor    eax,esp
6400e47e:	push   eax
6400e47f:	lea    eax,[esp+0x10]
6400e483:	mov    fs:0x0,eax
6400e489:	mov    ebx,0x1
6400e48e:	test   BYTE PTR ds:0x64031394,bl
6400e494:	jne    0x6400e51e
6400e49a:	or     DWORD PTR ds:0x64031394,ebx
6400e4a0:	push   0x64029668
6400e4a5:	push   0x12
6400e4a7:	push   0x6402969c
6400e4ac:	mov    DWORD PTR [esp+0x24],0x0
6400e4b4:	call   0x64005710
6400e4b9:	push   0x640296b0
6400e4be:	push   0x8
6400e4c0:	push   0x640291b8
6400e4c5:	mov    esi,eax
6400e4c7:	call   0x640059d0
6400e4cc:	add    esp,0x18
6400e4cf:	push   eax
6400e4d0:	call   DWORD PTR ds:0x64025018
6400e4d6:	add    DWORD PTR ds:0x64031270,ebx
6400e4dc:	test   eax,eax
6400e4de:	je     0x6400e505
6400e4e0:	push   esi
6400e4e1:	push   eax
6400e4e2:	call   DWORD PTR ds:0x64025014
6400e4e8:	add    DWORD PTR ds:0x64031274,ebx
6400e4ee:	mov    ds:0x64031390,eax
6400e4f3:	mov    ecx,DWORD PTR [esp+0x10]
6400e4f7:	mov    DWORD PTR fs:0x0,ecx
6400e4fe:	pop    ecx
6400e4ff:	pop    esi
6400e500:	pop    ebx
6400e501:	mov    esp,ebp
6400e503:	pop    ebp
6400e504:	ret    
6400e505:	xor    eax,eax
6400e507:	mov    ds:0x64031390,eax
6400e50c:	mov    ecx,DWORD PTR [esp+0x10]
6400e510:	mov    DWORD PTR fs:0x0,ecx
6400e517:	pop    ecx
6400e518:	pop    esi
6400e519:	pop    ebx
6400e51a:	mov    esp,ebp
6400e51c:	pop    ebp
6400e51d:	ret    
6400e51e:	mov    eax,ds:0x64031390
6400e523:	mov    ecx,DWORD PTR [esp+0x10]
6400e527:	mov    DWORD PTR fs:0x0,ecx
6400e52e:	pop    ecx
6400e52f:	pop    esi
6400e530:	pop    ebx
6400e531:	mov    esp,ebp
6400e533:	pop    ebp
6400e534:	ret    
6400e535:	int3   
6400e536:	int3   
6400e537:	int3   
6400e538:	int3   
6400e539:	int3   
6400e53a:	int3   
6400e53b:	int3   
6400e53c:	int3   
6400e53d:	int3   
6400e53e:	int3   
6400e53f:	int3   
6400e540:	push   ebp
6400e541:	mov    ebp,esp
6400e543:	and    esp,0xfffffff8
6400e546:	push   0xffffffff
6400e548:	push   0x64022f3e
6400e54d:	mov    eax,fs:0x0
6400e553:	push   eax
6400e554:	push   ecx
6400e555:	push   ebx
6400e556:	push   esi
6400e557:	mov    eax,ds:0x6402d09c
6400e55c:	xor    eax,esp
6400e55e:	push   eax
6400e55f:	lea    eax,[esp+0x10]
6400e563:	mov    fs:0x0,eax
6400e569:	mov    ebx,0x1
6400e56e:	test   BYTE PTR ds:0x6403138c,bl
6400e574:	jne    0x6400e5fe
6400e57a:	or     DWORD PTR ds:0x6403138c,ebx
6400e580:	push   0x640296ec
6400e585:	push   0xf
6400e587:	push   0x64029710
6400e58c:	mov    DWORD PTR [esp+0x24],0x0
6400e594:	call   0x64005710
6400e599:	push   0x64029720
6400e59e:	push   0x8
6400e5a0:	push   0x640291b8
6400e5a5:	mov    esi,eax
6400e5a7:	call   0x640059d0
6400e5ac:	add    esp,0x18
6400e5af:	push   eax
6400e5b0:	call   DWORD PTR ds:0x64025018
6400e5b6:	add    DWORD PTR ds:0x64031270,ebx
6400e5bc:	test   eax,eax
6400e5be:	je     0x6400e5e5
6400e5c0:	push   esi
6400e5c1:	push   eax
6400e5c2:	call   DWORD PTR ds:0x64025014
6400e5c8:	add    DWORD PTR ds:0x64031274,ebx
6400e5ce:	mov    ds:0x64031388,eax
6400e5d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e5d7:	mov    DWORD PTR fs:0x0,ecx
6400e5de:	pop    ecx
6400e5df:	pop    esi
6400e5e0:	pop    ebx
6400e5e1:	mov    esp,ebp
6400e5e3:	pop    ebp
6400e5e4:	ret    
6400e5e5:	xor    eax,eax
6400e5e7:	mov    ds:0x64031388,eax
6400e5ec:	mov    ecx,DWORD PTR [esp+0x10]
6400e5f0:	mov    DWORD PTR fs:0x0,ecx
6400e5f7:	pop    ecx
6400e5f8:	pop    esi
6400e5f9:	pop    ebx
6400e5fa:	mov    esp,ebp
6400e5fc:	pop    ebp
6400e5fd:	ret    
6400e5fe:	mov    eax,ds:0x64031388
6400e603:	mov    ecx,DWORD PTR [esp+0x10]
6400e607:	mov    DWORD PTR fs:0x0,ecx
6400e60e:	pop    ecx
6400e60f:	pop    esi
6400e610:	pop    ebx
6400e611:	mov    esp,ebp
6400e613:	pop    ebp
6400e614:	ret    
6400e615:	int3   
6400e616:	int3   
6400e617:	int3   
6400e618:	int3   
6400e619:	int3   
6400e61a:	int3   
6400e61b:	int3   
6400e61c:	int3   
6400e61d:	int3   
6400e61e:	int3   
6400e61f:	int3   
6400e620:	push   ebp
6400e621:	mov    ebp,esp
6400e623:	and    esp,0xfffffff8
6400e626:	push   0xffffffff
6400e628:	push   0x64022f0e
6400e62d:	mov    eax,fs:0x0
6400e633:	push   eax
6400e634:	push   ecx
6400e635:	push   ebx
6400e636:	push   esi
6400e637:	mov    eax,ds:0x6402d09c
6400e63c:	xor    eax,esp
6400e63e:	push   eax
6400e63f:	lea    eax,[esp+0x10]
6400e643:	mov    fs:0x0,eax
6400e649:	mov    ebx,0x1
6400e64e:	test   BYTE PTR ds:0x64031384,bl
6400e654:	jne    0x6400e6de
6400e65a:	or     DWORD PTR ds:0x64031384,ebx
6400e660:	push   0x64029760
6400e665:	push   0xd
6400e667:	push   0x6402979c
6400e66c:	mov    DWORD PTR [esp+0x24],0x0
6400e674:	call   0x64005710
6400e679:	push   0x640297ac
6400e67e:	push   0x8
6400e680:	push   0x640291b8
6400e685:	mov    esi,eax
6400e687:	call   0x640059d0
6400e68c:	add    esp,0x18
6400e68f:	push   eax
6400e690:	call   DWORD PTR ds:0x64025018
6400e696:	add    DWORD PTR ds:0x64031270,ebx
6400e69c:	test   eax,eax
6400e69e:	je     0x6400e6c5
6400e6a0:	push   esi
6400e6a1:	push   eax
6400e6a2:	call   DWORD PTR ds:0x64025014
6400e6a8:	add    DWORD PTR ds:0x64031274,ebx
6400e6ae:	mov    ds:0x64031380,eax
6400e6b3:	mov    ecx,DWORD PTR [esp+0x10]
6400e6b7:	mov    DWORD PTR fs:0x0,ecx
6400e6be:	pop    ecx
6400e6bf:	pop    esi
6400e6c0:	pop    ebx
6400e6c1:	mov    esp,ebp
6400e6c3:	pop    ebp
6400e6c4:	ret    
6400e6c5:	xor    eax,eax
6400e6c7:	mov    ds:0x64031380,eax
6400e6cc:	mov    ecx,DWORD PTR [esp+0x10]
6400e6d0:	mov    DWORD PTR fs:0x0,ecx
6400e6d7:	pop    ecx
6400e6d8:	pop    esi
6400e6d9:	pop    ebx
6400e6da:	mov    esp,ebp
6400e6dc:	pop    ebp
6400e6dd:	ret    
6400e6de:	mov    eax,ds:0x64031380
6400e6e3:	mov    ecx,DWORD PTR [esp+0x10]
6400e6e7:	mov    DWORD PTR fs:0x0,ecx
6400e6ee:	pop    ecx
6400e6ef:	pop    esi
6400e6f0:	pop    ebx
6400e6f1:	mov    esp,ebp
6400e6f3:	pop    ebp
6400e6f4:	ret    
6400e6f5:	int3   
6400e6f6:	int3   
6400e6f7:	int3   
6400e6f8:	int3   
6400e6f9:	int3   
6400e6fa:	int3   
6400e6fb:	int3   
6400e6fc:	int3   
6400e6fd:	int3   
6400e6fe:	int3   
6400e6ff:	int3   
6400e700:	push   ebp
6400e701:	mov    ebp,esp
6400e703:	and    esp,0xfffffff8
6400e706:	push   0xffffffff
6400e708:	push   0x64022ede
6400e70d:	mov    eax,fs:0x0
6400e713:	push   eax
6400e714:	push   ecx
6400e715:	push   ebx
6400e716:	push   esi
6400e717:	mov    eax,ds:0x6402d09c
6400e71c:	xor    eax,esp
6400e71e:	push   eax
6400e71f:	lea    eax,[esp+0x10]
6400e723:	mov    fs:0x0,eax
6400e729:	mov    ebx,0x1
6400e72e:	test   BYTE PTR ds:0x6403137c,bl
6400e734:	jne    0x6400e7be
6400e73a:	or     DWORD PTR ds:0x6403137c,ebx
6400e740:	push   0x640297e4
6400e745:	push   0xc
6400e747:	push   0x64029824
6400e74c:	mov    DWORD PTR [esp+0x24],0x0
6400e754:	call   0x64005710
6400e759:	push   0x64029834
6400e75e:	push   0x8
6400e760:	push   0x640291b8
6400e765:	mov    esi,eax
6400e767:	call   0x640059d0
6400e76c:	add    esp,0x18
6400e76f:	push   eax
6400e770:	call   DWORD PTR ds:0x64025018
6400e776:	add    DWORD PTR ds:0x64031270,ebx
6400e77c:	test   eax,eax
6400e77e:	je     0x6400e7a5
6400e780:	push   esi
6400e781:	push   eax
6400e782:	call   DWORD PTR ds:0x64025014
6400e788:	add    DWORD PTR ds:0x64031274,ebx
6400e78e:	mov    ds:0x64031378,eax
6400e793:	mov    ecx,DWORD PTR [esp+0x10]
6400e797:	mov    DWORD PTR fs:0x0,ecx
6400e79e:	pop    ecx
6400e79f:	pop    esi
6400e7a0:	pop    ebx
6400e7a1:	mov    esp,ebp
6400e7a3:	pop    ebp
6400e7a4:	ret    
6400e7a5:	xor    eax,eax
6400e7a7:	mov    ds:0x64031378,eax
6400e7ac:	mov    ecx,DWORD PTR [esp+0x10]
6400e7b0:	mov    DWORD PTR fs:0x0,ecx
6400e7b7:	pop    ecx
6400e7b8:	pop    esi
6400e7b9:	pop    ebx
6400e7ba:	mov    esp,ebp
6400e7bc:	pop    ebp
6400e7bd:	ret    
6400e7be:	mov    eax,ds:0x64031378
6400e7c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e7c7:	mov    DWORD PTR fs:0x0,ecx
6400e7ce:	pop    ecx
6400e7cf:	pop    esi
6400e7d0:	pop    ebx
6400e7d1:	mov    esp,ebp
6400e7d3:	pop    ebp
6400e7d4:	ret    
6400e7d5:	int3   
6400e7d6:	int3   
6400e7d7:	int3   
6400e7d8:	int3   
6400e7d9:	int3   
6400e7da:	int3   
6400e7db:	int3   
6400e7dc:	int3   
6400e7dd:	int3   
6400e7de:	int3   
6400e7df:	int3   
6400e7e0:	push   ebp
6400e7e1:	mov    ebp,esp
6400e7e3:	and    esp,0xfffffff8
6400e7e6:	push   0xffffffff
6400e7e8:	push   0x64022eae
6400e7ed:	mov    eax,fs:0x0
6400e7f3:	push   eax
6400e7f4:	push   ecx
6400e7f5:	push   ebx
6400e7f6:	push   esi
6400e7f7:	mov    eax,ds:0x6402d09c
6400e7fc:	xor    eax,esp
6400e7fe:	push   eax
6400e7ff:	lea    eax,[esp+0x10]
6400e803:	mov    fs:0x0,eax
6400e809:	mov    ebx,0x1
6400e80e:	test   BYTE PTR ds:0x64031374,bl
6400e814:	jne    0x6400e89e
6400e81a:	or     DWORD PTR ds:0x64031374,ebx
6400e820:	push   0x64029864
6400e825:	push   0x11
6400e827:	push   0x64029894
6400e82c:	mov    DWORD PTR [esp+0x24],0x0
6400e834:	call   0x64005710
6400e839:	push   0x640298a8
6400e83e:	push   0x8
6400e840:	push   0x640291b8
6400e845:	mov    esi,eax
6400e847:	call   0x640059d0
6400e84c:	add    esp,0x18
6400e84f:	push   eax
6400e850:	call   DWORD PTR ds:0x64025018
6400e856:	add    DWORD PTR ds:0x64031270,ebx
6400e85c:	test   eax,eax
6400e85e:	je     0x6400e885
6400e860:	push   esi
6400e861:	push   eax
6400e862:	call   DWORD PTR ds:0x64025014
6400e868:	add    DWORD PTR ds:0x64031274,ebx
6400e86e:	mov    ds:0x64031370,eax
6400e873:	mov    ecx,DWORD PTR [esp+0x10]
6400e877:	mov    DWORD PTR fs:0x0,ecx
6400e87e:	pop    ecx
6400e87f:	pop    esi
6400e880:	pop    ebx
6400e881:	mov    esp,ebp
6400e883:	pop    ebp
6400e884:	ret    
6400e885:	xor    eax,eax
6400e887:	mov    ds:0x64031370,eax
6400e88c:	mov    ecx,DWORD PTR [esp+0x10]
6400e890:	mov    DWORD PTR fs:0x0,ecx
6400e897:	pop    ecx
6400e898:	pop    esi
6400e899:	pop    ebx
6400e89a:	mov    esp,ebp
6400e89c:	pop    ebp
6400e89d:	ret    
6400e89e:	mov    eax,ds:0x64031370
6400e8a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e8a7:	mov    DWORD PTR fs:0x0,ecx
6400e8ae:	pop    ecx
6400e8af:	pop    esi
6400e8b0:	pop    ebx
6400e8b1:	mov    esp,ebp
6400e8b3:	pop    ebp
6400e8b4:	ret    
6400e8b5:	int3   
6400e8b6:	int3   
6400e8b7:	int3   
6400e8b8:	int3   
6400e8b9:	int3   
6400e8ba:	int3   
6400e8bb:	int3   
6400e8bc:	int3   
6400e8bd:	int3   
6400e8be:	int3   
6400e8bf:	int3   
6400e8c0:	push   ebp
6400e8c1:	mov    ebp,esp
6400e8c3:	and    esp,0xfffffff8
6400e8c6:	push   0xffffffff
6400e8c8:	push   0x64022e7e
6400e8cd:	mov    eax,fs:0x0
6400e8d3:	push   eax
6400e8d4:	push   ecx
6400e8d5:	push   ebx
6400e8d6:	push   esi
6400e8d7:	mov    eax,ds:0x6402d09c
6400e8dc:	xor    eax,esp
6400e8de:	push   eax
6400e8df:	lea    eax,[esp+0x10]
6400e8e3:	mov    fs:0x0,eax
6400e8e9:	mov    ebx,0x1
6400e8ee:	test   BYTE PTR ds:0x6403136c,bl
6400e8f4:	jne    0x6400e97e
6400e8fa:	or     DWORD PTR ds:0x6403136c,ebx
6400e900:	push   0x640298e4
6400e905:	push   0x16
6400e907:	push   0x64029914
6400e90c:	mov    DWORD PTR [esp+0x24],0x0
6400e914:	call   0x64005710
6400e919:	push   0x6402992c
6400e91e:	push   0x8
6400e920:	push   0x640291b8
6400e925:	mov    esi,eax
6400e927:	call   0x640059d0
6400e92c:	add    esp,0x18
6400e92f:	push   eax
6400e930:	call   DWORD PTR ds:0x64025018
6400e936:	add    DWORD PTR ds:0x64031270,ebx
6400e93c:	test   eax,eax
6400e93e:	je     0x6400e965
6400e940:	push   esi
6400e941:	push   eax
6400e942:	call   DWORD PTR ds:0x64025014
6400e948:	add    DWORD PTR ds:0x64031274,ebx
6400e94e:	mov    ds:0x64031368,eax
6400e953:	mov    ecx,DWORD PTR [esp+0x10]
6400e957:	mov    DWORD PTR fs:0x0,ecx
6400e95e:	pop    ecx
6400e95f:	pop    esi
6400e960:	pop    ebx
6400e961:	mov    esp,ebp
6400e963:	pop    ebp
6400e964:	ret    
6400e965:	xor    eax,eax
6400e967:	mov    ds:0x64031368,eax
6400e96c:	mov    ecx,DWORD PTR [esp+0x10]
6400e970:	mov    DWORD PTR fs:0x0,ecx
6400e977:	pop    ecx
6400e978:	pop    esi
6400e979:	pop    ebx
6400e97a:	mov    esp,ebp
6400e97c:	pop    ebp
6400e97d:	ret    
6400e97e:	mov    eax,ds:0x64031368
6400e983:	mov    ecx,DWORD PTR [esp+0x10]
6400e987:	mov    DWORD PTR fs:0x0,ecx
6400e98e:	pop    ecx
6400e98f:	pop    esi
6400e990:	pop    ebx
6400e991:	mov    esp,ebp
6400e993:	pop    ebp
6400e994:	ret    
6400e995:	int3   
6400e996:	int3   
6400e997:	int3   
6400e998:	int3   
6400e999:	int3   
6400e99a:	int3   
6400e99b:	int3   
6400e99c:	int3   
6400e99d:	int3   
6400e99e:	int3   
6400e99f:	int3   
6400e9a0:	push   ebp
6400e9a1:	mov    ebp,esp
6400e9a3:	and    esp,0xfffffff8
6400e9a6:	push   0xffffffff
6400e9a8:	push   0x64022e4e
6400e9ad:	mov    eax,fs:0x0
6400e9b3:	push   eax
6400e9b4:	push   ecx
6400e9b5:	push   ebx
6400e9b6:	push   esi
6400e9b7:	mov    eax,ds:0x6402d09c
6400e9bc:	xor    eax,esp
6400e9be:	push   eax
6400e9bf:	lea    eax,[esp+0x10]
6400e9c3:	mov    fs:0x0,eax
6400e9c9:	mov    ebx,0x1
6400e9ce:	test   BYTE PTR ds:0x64031364,bl
6400e9d4:	jne    0x6400ea5e
6400e9da:	or     DWORD PTR ds:0x64031364,ebx
6400e9e0:	push   0x6402996c
6400e9e5:	push   0x10
6400e9e7:	push   0x640299a0
6400e9ec:	mov    DWORD PTR [esp+0x24],0x0
6400e9f4:	call   0x64005710
6400e9f9:	push   0x640299b4
6400e9fe:	push   0x8
6400ea00:	push   0x640291b8
6400ea05:	mov    esi,eax
6400ea07:	call   0x640059d0
6400ea0c:	add    esp,0x18
6400ea0f:	push   eax
6400ea10:	call   DWORD PTR ds:0x64025018
6400ea16:	add    DWORD PTR ds:0x64031270,ebx
6400ea1c:	test   eax,eax
6400ea1e:	je     0x6400ea45
6400ea20:	push   esi
6400ea21:	push   eax
6400ea22:	call   DWORD PTR ds:0x64025014
6400ea28:	add    DWORD PTR ds:0x64031274,ebx
6400ea2e:	mov    ds:0x64031360,eax
6400ea33:	mov    ecx,DWORD PTR [esp+0x10]
6400ea37:	mov    DWORD PTR fs:0x0,ecx
6400ea3e:	pop    ecx
6400ea3f:	pop    esi
6400ea40:	pop    ebx
6400ea41:	mov    esp,ebp
6400ea43:	pop    ebp
6400ea44:	ret    
6400ea45:	xor    eax,eax
6400ea47:	mov    ds:0x64031360,eax
6400ea4c:	mov    ecx,DWORD PTR [esp+0x10]
6400ea50:	mov    DWORD PTR fs:0x0,ecx
6400ea57:	pop    ecx
6400ea58:	pop    esi
6400ea59:	pop    ebx
6400ea5a:	mov    esp,ebp
6400ea5c:	pop    ebp
6400ea5d:	ret    
6400ea5e:	mov    eax,ds:0x64031360
6400ea63:	mov    ecx,DWORD PTR [esp+0x10]
6400ea67:	mov    DWORD PTR fs:0x0,ecx
6400ea6e:	pop    ecx
6400ea6f:	pop    esi
6400ea70:	pop    ebx
6400ea71:	mov    esp,ebp
6400ea73:	pop    ebp
6400ea74:	ret    
6400ea75:	int3   
6400ea76:	int3   
6400ea77:	int3   
6400ea78:	int3   
6400ea79:	int3   
6400ea7a:	int3   
6400ea7b:	int3   
6400ea7c:	int3   
6400ea7d:	int3   
6400ea7e:	int3   
6400ea7f:	int3   
6400ea80:	push   ebp
6400ea81:	mov    ebp,esp
6400ea83:	and    esp,0xfffffff8
6400ea86:	push   0xffffffff
6400ea88:	push   0x64022e1e
6400ea8d:	mov    eax,fs:0x0
6400ea93:	push   eax
6400ea94:	push   ecx
6400ea95:	push   ebx
6400ea96:	push   esi
6400ea97:	mov    eax,ds:0x6402d09c
6400ea9c:	xor    eax,esp
6400ea9e:	push   eax
6400ea9f:	lea    eax,[esp+0x10]
6400eaa3:	mov    fs:0x0,eax
6400eaa9:	mov    ebx,0x1
6400eaae:	test   BYTE PTR ds:0x6403135c,bl
6400eab4:	jne    0x6400eb3e
6400eaba:	or     DWORD PTR ds:0x6403135c,ebx
6400eac0:	push   0x640299d8
6400eac5:	push   0xd
6400eac7:	push   0x640299fc
6400eacc:	mov    DWORD PTR [esp+0x24],0x0
6400ead4:	call   0x64005710
6400ead9:	push   0x64029a0c
6400eade:	push   0x7
6400eae0:	push   0x64029a48
6400eae5:	mov    esi,eax
6400eae7:	call   0x640059d0
6400eaec:	add    esp,0x18
6400eaef:	push   eax
6400eaf0:	call   DWORD PTR ds:0x64025018
6400eaf6:	add    DWORD PTR ds:0x64031270,ebx
6400eafc:	test   eax,eax
6400eafe:	je     0x6400eb25
6400eb00:	push   esi
6400eb01:	push   eax
6400eb02:	call   DWORD PTR ds:0x64025014
6400eb08:	add    DWORD PTR ds:0x64031274,ebx
6400eb0e:	mov    ds:0x64031358,eax
6400eb13:	mov    ecx,DWORD PTR [esp+0x10]
6400eb17:	mov    DWORD PTR fs:0x0,ecx
6400eb1e:	pop    ecx
6400eb1f:	pop    esi
6400eb20:	pop    ebx
6400eb21:	mov    esp,ebp
6400eb23:	pop    ebp
6400eb24:	ret    
6400eb25:	xor    eax,eax
6400eb27:	mov    ds:0x64031358,eax
6400eb2c:	mov    ecx,DWORD PTR [esp+0x10]
6400eb30:	mov    DWORD PTR fs:0x0,ecx
6400eb37:	pop    ecx
6400eb38:	pop    esi
6400eb39:	pop    ebx
6400eb3a:	mov    esp,ebp
6400eb3c:	pop    ebp
6400eb3d:	ret    
6400eb3e:	mov    eax,ds:0x64031358
6400eb43:	mov    ecx,DWORD PTR [esp+0x10]
6400eb47:	mov    DWORD PTR fs:0x0,ecx
6400eb4e:	pop    ecx
6400eb4f:	pop    esi
6400eb50:	pop    ebx
6400eb51:	mov    esp,ebp
6400eb53:	pop    ebp
6400eb54:	ret    
6400eb55:	int3   
6400eb56:	int3   
6400eb57:	int3   
6400eb58:	int3   
6400eb59:	int3   
6400eb5a:	int3   
6400eb5b:	int3   
6400eb5c:	int3   
6400eb5d:	int3   
6400eb5e:	int3   
6400eb5f:	int3   
6400eb60:	push   esi
6400eb61:	push   edi
6400eb62:	mov    edi,DWORD PTR [esp+0xc]
6400eb66:	mov    esi,DWORD PTR [edi+0xc]
6400eb69:	cmp    esi,DWORD PTR [edi+0x14]
6400eb6c:	je     0x6400eb84
6400eb6e:	mov    edi,edi
6400eb70:	mov    eax,DWORD PTR [esi-0x4]
6400eb73:	mov    ecx,DWORD PTR [esi-0x8]
6400eb76:	push   eax
6400eb77:	call   ecx
6400eb79:	add    esi,0xfffffff8
6400eb7c:	add    esp,0x4
6400eb7f:	cmp    esi,DWORD PTR [edi+0x14]
6400eb82:	jne    0x6400eb70
6400eb84:	mov    edx,DWORD PTR [edi+0x14]
6400eb87:	push   edx
6400eb88:	call   0x64013956
6400eb8d:	mov    edi,DWORD PTR [edi+0x8]
6400eb90:	mov    esi,DWORD PTR [edi]
6400eb92:	push   edi
6400eb93:	call   0x64013956
6400eb98:	add    esp,0x8
6400eb9b:	test   esi,esi
6400eb9d:	je     0x6400ebb1
6400eb9f:	nop
6400eba0:	mov    eax,esi
6400eba2:	mov    esi,DWORD PTR [esi]
6400eba4:	push   eax
6400eba5:	call   0x64013956
6400ebaa:	add    esp,0x4
6400ebad:	test   esi,esi
6400ebaf:	jne    0x6400eba0
6400ebb1:	pop    edi
6400ebb2:	pop    esi
6400ebb3:	ret    
6400ebb4:	int3   
6400ebb5:	int3   
6400ebb6:	int3   
6400ebb7:	int3   
6400ebb8:	int3   
6400ebb9:	int3   
6400ebba:	int3   
6400ebbb:	int3   
6400ebbc:	int3   
6400ebbd:	int3   
6400ebbe:	int3   
6400ebbf:	int3   
6400ebc0:	push   esi
6400ebc1:	mov    esi,DWORD PTR [esp+0x8]
6400ebc5:	push   edi
6400ebc6:	mov    edi,DWORD PTR [esp+0x10]
6400ebca:	lea    eax,[edi+0x4]
6400ebcd:	push   eax
6400ebce:	mov    DWORD PTR [esi+0x18],edi
6400ebd1:	call   0x64013a33
6400ebd6:	xor    ecx,ecx
6400ebd8:	add    esp,0x4
6400ebdb:	cmp    eax,ecx
6400ebdd:	je     0x6400ebfa
6400ebdf:	mov    DWORD PTR [esi+0x8],eax
6400ebe2:	mov    DWORD PTR [esi],edi
6400ebe4:	lea    edx,[eax+0x4]
6400ebe7:	mov    DWORD PTR [esi+0x4],edx
6400ebea:	mov    DWORD PTR [eax],ecx
6400ebec:	pop    edi
6400ebed:	mov    DWORD PTR [esi+0xc],ecx
6400ebf0:	mov    DWORD PTR [esi+0x10],ecx
6400ebf3:	mov    DWORD PTR [esi+0x14],ecx
6400ebf6:	mov    al,0x1
6400ebf8:	pop    esi
6400ebf9:	ret    
6400ebfa:	pop    edi
6400ebfb:	xor    al,al
6400ebfd:	pop    esi
6400ebfe:	ret    
6400ebff:	int3   
6400ec00:	mov    ecx,DWORD PTR [ebx]
6400ec02:	push   esi
6400ec03:	mov    esi,eax
6400ec05:	add    esi,0x3
6400ec08:	and    esi,0xfffffffc
6400ec0b:	cmp    ecx,esi
6400ec0d:	jae    0x6400ec43
6400ec0f:	push   edi
6400ec10:	mov    edi,DWORD PTR [ebx+0x18]
6400ec13:	cmp    edi,esi
6400ec15:	jae    0x6400ec1d
6400ec17:	add    edi,edi
6400ec19:	cmp    edi,esi
6400ec1b:	jb     0x6400ec17
6400ec1d:	lea    eax,[edi+0x4]
6400ec20:	push   eax
6400ec21:	call   0x64013a33
6400ec26:	mov    edx,DWORD PTR [ebx+0x8]
6400ec29:	mov    DWORD PTR [eax],edx
6400ec2b:	add    esp,0x4
6400ec2e:	sub    edi,esi
6400ec30:	lea    ecx,[eax+0x4]
6400ec33:	mov    DWORD PTR [ebx+0x8],eax
6400ec36:	lea    eax,[ecx+esi*1]
6400ec39:	mov    DWORD PTR [ebx],edi
6400ec3b:	pop    edi
6400ec3c:	mov    DWORD PTR [ebx+0x4],eax
6400ec3f:	mov    eax,ecx
6400ec41:	pop    esi
6400ec42:	ret    
6400ec43:	mov    eax,DWORD PTR [ebx+0x4]
6400ec46:	sub    ecx,esi
6400ec48:	mov    DWORD PTR [ebx],ecx
6400ec4a:	lea    ecx,[eax+esi*1]
6400ec4d:	mov    DWORD PTR [ebx+0x4],ecx
6400ec50:	pop    esi
6400ec51:	ret    
6400ec52:	int3   
6400ec53:	int3   
6400ec54:	int3   
6400ec55:	int3   
6400ec56:	int3   
6400ec57:	int3   
6400ec58:	int3   
6400ec59:	int3   
6400ec5a:	int3   
6400ec5b:	int3   
6400ec5c:	int3   
6400ec5d:	int3   
6400ec5e:	int3   
6400ec5f:	int3   
6400ec60:	push   ebx
6400ec61:	mov    DWORD PTR [esi],0x6
6400ec67:	mov    DWORD PTR [esi+0x8],0x0
6400ec6e:	mov    ebx,DWORD PTR [ecx]
6400ec70:	shl    eax,0x4
6400ec73:	call   0x6400ec00
6400ec78:	mov    DWORD PTR [esi+0xc],eax
6400ec7b:	neg    eax
6400ec7d:	sbb    eax,eax
6400ec7f:	neg    eax
6400ec81:	sub    eax,0x1
6400ec84:	pop    ebx
6400ec85:	ret    
6400ec86:	int3   
6400ec87:	int3   
6400ec88:	int3   
6400ec89:	int3   
6400ec8a:	int3   
6400ec8b:	int3   
6400ec8c:	int3   
6400ec8d:	int3   
6400ec8e:	int3   
6400ec8f:	int3   
6400ec90:	push   ebx
6400ec91:	mov    DWORD PTR [esi],0x7
6400ec97:	mov    DWORD PTR [esi+0x8],0x0
6400ec9e:	mov    ebx,DWORD PTR [ecx]
6400eca0:	shl    eax,0x5
6400eca3:	call   0x6400ec00
6400eca8:	mov    DWORD PTR [esi+0xc],eax
6400ecab:	neg    eax
6400ecad:	sbb    eax,eax
6400ecaf:	neg    eax
6400ecb1:	sub    eax,0x1
6400ecb4:	pop    ebx
6400ecb5:	ret    
6400ecb6:	int3   
6400ecb7:	int3   
6400ecb8:	int3   
6400ecb9:	int3   
6400ecba:	int3   
6400ecbb:	int3   
6400ecbc:	int3   
6400ecbd:	int3   
6400ecbe:	int3   
6400ecbf:	int3   
6400ecc0:	sub    esp,0x44
6400ecc3:	mov    eax,DWORD PTR [esp+0x54]
6400ecc7:	mov    edx,DWORD PTR [esp+0x4c]
6400eccb:	mov    ecx,DWORD PTR [esp+0x48]
6400eccf:	mov    eax,DWORD PTR [eax]
6400ecd1:	push   ebx
6400ecd2:	push   ebp
6400ecd3:	push   esi
6400ecd4:	mov    esi,DWORD PTR [esp+0x5c]
6400ecd8:	add    eax,edx
6400ecda:	add    edx,esi
6400ecdc:	mov    esi,DWORD PTR [ecx+0xc]
6400ecdf:	mov    DWORD PTR [esp+0x18],esi
6400ece3:	mov    esi,DWORD PTR [ecx+0x8]
6400ece6:	mov    ecx,DWORD PTR [ecx+0x10]
6400ece9:	push   edi
6400ecea:	xor    edi,edi
6400ecec:	cmp    eax,edx
6400ecee:	mov    DWORD PTR [esp+0x60],ecx
6400ecf2:	mov    DWORD PTR [esp+0x14],eax
6400ecf6:	mov    DWORD PTR [esp+0x20],edx
6400ecfa:	mov    DWORD PTR [esp+0x18],esi
6400ecfe:	lea    ecx,[edi+0x20]
6400ed01:	je     0x6400f581
6400ed07:	mov    ebp,DWORD PTR [esp+0x38]
6400ed0b:	jmp    0x6400ed10
6400ed0d:	lea    ecx,[ecx+0x0]
6400ed10:	mov    eax,DWORD PTR [esp+0x18]
6400ed14:	test   eax,eax
6400ed16:	mov    ebx,DWORD PTR [esp+0x14]
6400ed1a:	jne    0x6400ee2f
6400ed20:	mov    al,BYTE PTR [ebx]
6400ed22:	cmp    al,0x7f
6400ed24:	ja     0x6400ed3a
6400ed26:	movzx  eax,al
6400ed29:	cdq    
6400ed2a:	mov    ebx,0x2
6400ed2f:	mov    ebp,eax
6400ed31:	mov    DWORD PTR [esp+0x3c],edx
6400ed35:	jmp    0x6400f40c
6400ed3a:	cmp    al,0xe0
6400ed3c:	jb     0x6400ed62
6400ed3e:	cmp    al,0xff
6400ed40:	ja     0x6400ed62
6400ed42:	test   al,al
6400ed44:	movsx  eax,al
6400ed47:	cdq    
6400ed48:	mov    ebp,eax
6400ed4a:	mov    DWORD PTR [esp+0x3c],edx
6400ed4e:	mov    DWORD PTR [esp+0x38],ebp
6400ed52:	jl     0x6400f06b
6400ed58:	mov    ebx,0x2
6400ed5d:	jmp    0x6400f410
6400ed62:	cmp    al,0xc0
6400ed64:	jb     0x6400edfe
6400ed6a:	cmp    al,0xdf
6400ed6c:	ja     0x6400edfe
6400ed72:	movzx  eax,al
6400ed75:	lea    ecx,[eax-0xc0]
6400ed7b:	cmp    ecx,0x1f
6400ed7e:	ja     0x6400f585
6400ed84:	movzx  ecx,BYTE PTR [ecx+0x6400f5d0]
6400ed8b:	jmp    DWORD PTR [ecx*4+0x6400f5b8]
6400ed92:	xor    ebx,ebx
6400ed94:	jmp    0x6400f410
6400ed99:	mov    BYTE PTR [esp+0x38],0x0
6400ed9e:	mov    ebp,DWORD PTR [esp+0x38]
6400eda2:	mov    ebx,0x1
6400eda7:	jmp    0x6400f410
6400edac:	mov    ebx,0x1
6400edb1:	mov    BYTE PTR [esp+0x38],bl
6400edb5:	mov    ebp,DWORD PTR [esp+0x38]
6400edb9:	jmp    0x6400f410
6400edbe:	mov    ecx,eax
6400edc0:	and    ecx,0x3
6400edc3:	mov    esi,0x1
6400edc8:	shl    esi,cl
6400edca:	and    eax,0x1f
6400edcd:	add    ebx,0x1
6400edd0:	mov    DWORD PTR [esp+0x18],eax
6400edd4:	mov    DWORD PTR [esp+0x1c],esi
6400edd8:	mov    DWORD PTR [esp+0x14],ebx
6400eddc:	jmp    0x6400ee33
6400edde:	mov    ecx,eax
6400ede0:	and    ecx,0x1
6400ede3:	mov    esi,0x2
6400ede8:	shl    esi,cl
6400edea:	and    eax,0x1f
6400eded:	add    ebx,0x1
6400edf0:	mov    DWORD PTR [esp+0x18],eax
6400edf4:	mov    DWORD PTR [esp+0x1c],esi
6400edf8:	mov    DWORD PTR [esp+0x14],ebx
6400edfc:	jmp    0x6400ee33
6400edfe:	cmp    al,0xa0
6400ee00:	jb     0x6400f362
6400ee06:	cmp    al,0xbf
6400ee08:	ja     0x6400f362
6400ee0e:	and    eax,0x1f
6400ee11:	mov    esi,eax
6400ee13:	mov    DWORD PTR [esp+0x1c],esi
6400ee17:	je     0x6400f10d
6400ee1d:	mov    eax,0x20
6400ee22:	add    ebx,0x1
6400ee25:	mov    DWORD PTR [esp+0x18],eax
6400ee29:	mov    DWORD PTR [esp+0x14],ebx
6400ee2d:	jmp    0x6400ee33
6400ee2f:	mov    esi,DWORD PTR [esp+0x1c]
6400ee33:	mov    ecx,edx
6400ee35:	sub    ecx,ebx
6400ee37:	cmp    ecx,esi
6400ee39:	jb     0x6400f581
6400ee3f:	mov    edi,ebx
6400ee41:	add    eax,0xfffffff6
6400ee44:	cmp    eax,0x16
6400ee47:	lea    ebx,[ebx+esi*1-0x1]
6400ee4b:	mov    DWORD PTR [esp+0x14],ebx
6400ee4f:	ja     0x6400f585
6400ee55:	jmp    DWORD PTR [eax*4+0x6400f5f0]
6400ee5c:	xor    eax,eax
6400ee5e:	mov    ah,BYTE PTR [edi]
6400ee60:	mov    al,BYTE PTR [edi+0x1]
6400ee63:	mov    esi,eax
6400ee65:	test   esi,esi
6400ee67:	jmp    0x6400ee13
6400ee69:	movzx  eax,BYTE PTR [edi+0x2]
6400ee6d:	xor    ecx,ecx
6400ee6f:	mov    ch,BYTE PTR [edi]
6400ee71:	mov    cl,BYTE PTR [edi+0x1]
6400ee74:	shl    ecx,0x8
6400ee77:	or     ecx,eax
6400ee79:	movzx  eax,BYTE PTR [edi+0x3]
6400ee7d:	shl    ecx,0x8
6400ee80:	or     ecx,eax
6400ee82:	mov    esi,ecx
6400ee84:	jmp    0x6400ee13
6400ee86:	movzx  edx,BYTE PTR [edi+0x2]
6400ee8a:	movzx  eax,BYTE PTR [edi+0x3]
6400ee8e:	xor    ecx,ecx
6400ee90:	mov    ch,BYTE PTR [edi]
6400ee92:	mov    ebx,0x4
6400ee97:	mov    cl,BYTE PTR [edi+0x1]
6400ee9a:	shl    ecx,0x8
6400ee9d:	or     ecx,edx
6400ee9f:	shl    ecx,0x8
6400eea2:	or     ecx,eax
6400eea4:	mov    DWORD PTR [esp+0x24],ecx
6400eea8:	fld    DWORD PTR [esp+0x24]
6400eeac:	fstp   QWORD PTR [esp+0x38]
6400eeb0:	mov    ebp,DWORD PTR [esp+0x38]
6400eeb4:	jmp    0x6400f410
6400eeb9:	movzx  eax,BYTE PTR [edi]
6400eebc:	cdq    
6400eebd:	shld   edx,eax,0x8
6400eec1:	shl    eax,0x8
6400eec4:	mov    ecx,eax
6400eec6:	movzx  eax,BYTE PTR [edi+0x1]
6400eeca:	mov    esi,edx
6400eecc:	cdq    
6400eecd:	or     ecx,eax
6400eecf:	movzx  eax,BYTE PTR [edi+0x2]
6400eed3:	or     esi,edx
6400eed5:	shld   esi,ecx,0x8
6400eed9:	shl    ecx,0x8
6400eedc:	cdq    
6400eedd:	or     ecx,eax
6400eedf:	movzx  eax,BYTE PTR [edi+0x3]
6400eee3:	or     esi,edx
6400eee5:	shld   esi,ecx,0x8
6400eee9:	shl    ecx,0x8
6400eeec:	cdq    
6400eeed:	or     ecx,eax
6400eeef:	movzx  eax,BYTE PTR [edi+0x4]
6400eef3:	or     esi,edx
6400eef5:	shld   esi,ecx,0x8
6400eef9:	shl    ecx,0x8
6400eefc:	cdq    
6400eefd:	or     ecx,eax
6400eeff:	movzx  eax,BYTE PTR [edi+0x5]
6400ef03:	or     esi,edx
6400ef05:	shld   esi,ecx,0x8
6400ef09:	shl    ecx,0x8
6400ef0c:	cdq    
6400ef0d:	or     ecx,eax
6400ef0f:	movzx  eax,BYTE PTR [edi+0x6]
6400ef13:	or     esi,edx
6400ef15:	shld   esi,ecx,0x8
6400ef19:	shl    ecx,0x8
6400ef1c:	cdq    
6400ef1d:	or     ecx,eax
6400ef1f:	movzx  eax,BYTE PTR [edi+0x7]
6400ef23:	or     esi,edx
6400ef25:	shld   esi,ecx,0x8
6400ef29:	cdq    
6400ef2a:	shl    ecx,0x8
6400ef2d:	or     ecx,eax
6400ef2f:	or     esi,edx
6400ef31:	mov    DWORD PTR [esp+0x28],ecx
6400ef35:	mov    DWORD PTR [esp+0x2c],esi
6400ef39:	mov    ebx,0x4
6400ef3e:	fld    QWORD PTR [esp+0x28]
6400ef42:	fstp   QWORD PTR [esp+0x38]
6400ef46:	mov    ebp,DWORD PTR [esp+0x38]
6400ef4a:	jmp    0x6400f410
6400ef4f:	movzx  eax,BYTE PTR [edi]
6400ef52:	cdq    
6400ef53:	mov    ebx,0x2
6400ef58:	mov    ebp,eax
6400ef5a:	mov    DWORD PTR [esp+0x3c],edx
6400ef5e:	jmp    0x6400f40c
6400ef63:	xor    edx,edx
6400ef65:	mov    dh,BYTE PTR [edi]
6400ef67:	mov    ebx,0x2
6400ef6c:	mov    dl,BYTE PTR [edi+0x1]
6400ef6f:	movzx  eax,dx
6400ef72:	cdq    
6400ef73:	mov    ebp,eax
6400ef75:	mov    DWORD PTR [esp+0x3c],edx
6400ef79:	jmp    0x6400f40c
6400ef7e:	movzx  ecx,BYTE PTR [edi+0x2]
6400ef82:	movzx  edx,BYTE PTR [edi+0x3]
6400ef86:	xor    eax,eax
6400ef88:	mov    ah,BYTE PTR [edi]
6400ef8a:	mov    ebx,0x2
6400ef8f:	mov    DWORD PTR [esp+0x3c],0x0
6400ef97:	mov    al,BYTE PTR [edi+0x1]
6400ef9a:	shl    eax,0x8
6400ef9d:	or     eax,ecx
6400ef9f:	shl    eax,0x8
6400efa2:	or     eax,edx
6400efa4:	mov    ebp,eax
6400efa6:	jmp    0x6400f40c
6400efab:	movzx  eax,BYTE PTR [edi]
6400efae:	cdq    
6400efaf:	shld   edx,eax,0x8
6400efb3:	shl    eax,0x8
6400efb6:	mov    ecx,eax
6400efb8:	movzx  eax,BYTE PTR [edi+0x1]
6400efbc:	mov    esi,edx
6400efbe:	cdq    
6400efbf:	or     ecx,eax
6400efc1:	movzx  eax,BYTE PTR [edi+0x2]
6400efc5:	or     esi,edx
6400efc7:	shld   esi,ecx,0x8
6400efcb:	shl    ecx,0x8
6400efce:	cdq    
6400efcf:	or     ecx,eax
6400efd1:	movzx  eax,BYTE PTR [edi+0x3]
6400efd5:	or     esi,edx
6400efd7:	shld   esi,ecx,0x8
6400efdb:	shl    ecx,0x8
6400efde:	cdq    
6400efdf:	or     ecx,eax
6400efe1:	movzx  eax,BYTE PTR [edi+0x4]
6400efe5:	or     esi,edx
6400efe7:	shld   esi,ecx,0x8
6400efeb:	shl    ecx,0x8
6400efee:	cdq    
6400efef:	or     ecx,eax
6400eff1:	movzx  eax,BYTE PTR [edi+0x5]
6400eff5:	or     esi,edx
6400eff7:	shld   esi,ecx,0x8
6400effb:	shl    ecx,0x8
6400effe:	cdq    
6400efff:	or     ecx,eax
6400f001:	movzx  eax,BYTE PTR [edi+0x6]
6400f005:	or     esi,edx
6400f007:	shld   esi,ecx,0x8
6400f00b:	cdq    
6400f00c:	shl    ecx,0x8
6400f00f:	or     ecx,eax
6400f011:	movzx  eax,BYTE PTR [edi+0x7]
6400f015:	or     esi,edx
6400f017:	mov    ebp,ecx
6400f019:	mov    ecx,esi
6400f01b:	shld   ecx,ebp,0x8
6400f01f:	cdq    
6400f020:	shl    ebp,0x8
6400f023:	or     ebp,eax
6400f025:	mov    ebx,0x2
6400f02a:	or     ecx,edx
6400f02c:	jmp    0x6400f408
6400f031:	mov    al,BYTE PTR [edi]
6400f033:	jmp    0x6400ed42
6400f038:	xor    edx,edx
6400f03a:	mov    dh,BYTE PTR [edi]
6400f03c:	mov    dl,BYTE PTR [edi+0x1]
6400f03f:	movzx  eax,dx
6400f042:	test   ax,ax
6400f045:	movsx  eax,ax
6400f048:	jmp    0x6400ed47
6400f04d:	movzx  ecx,BYTE PTR [edi+0x2]
6400f051:	movzx  edx,BYTE PTR [edi+0x3]
6400f055:	xor    eax,eax
6400f057:	mov    ah,BYTE PTR [edi]
6400f059:	mov    al,BYTE PTR [edi+0x1]
6400f05c:	shl    eax,0x8
6400f05f:	or     eax,ecx
6400f061:	shl    eax,0x8
6400f064:	or     eax,edx
6400f066:	jmp    0x6400ed47
6400f06b:	mov    ebx,0x3
6400f070:	jmp    0x6400f410
6400f075:	movzx  eax,BYTE PTR [edi]
6400f078:	cdq    
6400f079:	shld   edx,eax,0x8
6400f07d:	shl    eax,0x8
6400f080:	mov    ecx,eax
6400f082:	movzx  eax,BYTE PTR [edi+0x1]
6400f086:	mov    esi,edx
6400f088:	cdq    
6400f089:	or     ecx,eax
6400f08b:	movzx  eax,BYTE PTR [edi+0x2]
6400f08f:	or     esi,edx
6400f091:	shld   esi,ecx,0x8
6400f095:	shl    ecx,0x8
6400f098:	cdq    
6400f099:	or     ecx,eax
6400f09b:	movzx  eax,BYTE PTR [edi+0x3]
6400f09f:	or     esi,edx
6400f0a1:	shld   esi,ecx,0x8
6400f0a5:	shl    ecx,0x8
6400f0a8:	cdq    
6400f0a9:	or     ecx,eax
6400f0ab:	movzx  eax,BYTE PTR [edi+0x4]
6400f0af:	or     esi,edx
6400f0b1:	shld   esi,ecx,0x8
6400f0b5:	shl    ecx,0x8
6400f0b8:	cdq    
6400f0b9:	or     ecx,eax
6400f0bb:	movzx  eax,BYTE PTR [edi+0x5]
6400f0bf:	or     esi,edx
6400f0c1:	shld   esi,ecx,0x8
6400f0c5:	shl    ecx,0x8
6400f0c8:	cdq    
6400f0c9:	or     ecx,eax
6400f0cb:	movzx  eax,BYTE PTR [edi+0x6]
6400f0cf:	or     esi,edx
6400f0d1:	shld   esi,ecx,0x8
6400f0d5:	cdq    
6400f0d6:	shl    ecx,0x8
6400f0d9:	or     ecx,eax
6400f0db:	movzx  eax,BYTE PTR [edi+0x7]
6400f0df:	or     esi,edx
6400f0e1:	mov    ebp,ecx
6400f0e3:	mov    ecx,esi
6400f0e5:	shld   ecx,ebp,0x8
6400f0e9:	cdq    
6400f0ea:	shl    ebp,0x8
6400f0ed:	or     ebp,eax
6400f0ef:	or     ecx,edx
6400f0f1:	jl     0x6400f103
6400f0f3:	jg     0x6400f0f9
6400f0f5:	test   ebp,ebp
6400f0f7:	jb     0x6400f103
6400f0f9:	mov    ebx,0x2
6400f0fe:	jmp    0x6400f408
6400f103:	mov    ebx,0x3
6400f108:	jmp    0x6400f408
6400f10d:	mov    edx,DWORD PTR [esp+0x58]
6400f111:	mov    ebx,0x5
6400f116:	mov    DWORD PTR [esp+0x3c],edi
6400f11a:	mov    ebp,esi
6400f11c:	mov    BYTE PTR [edx+0x4],0x1
6400f120:	jmp    0x6400f40c
6400f125:	cmp    DWORD PTR [esp+0x60],0x20
6400f12a:	jae    0x6400f585
6400f130:	mov    eax,DWORD PTR [esp+0x60]
6400f134:	mov    ecx,DWORD PTR [esp+0x58]
6400f138:	lea    eax,[eax+eax*4]
6400f13b:	lea    esi,[ecx+eax*8+0x18]
6400f13f:	xor    eax,eax
6400f141:	mov    ah,BYTE PTR [edi]
6400f143:	mov    al,BYTE PTR [edi+0x1]
6400f146:	mov    DWORD PTR [esi],0x6
6400f14c:	mov    DWORD PTR [esi+0x8],0x0
6400f153:	mov    ebx,DWORD PTR [ecx]
6400f155:	shl    eax,0x4
6400f158:	call   0x6400ec00
6400f15d:	test   eax,eax
6400f15f:	mov    DWORD PTR [esi+0xc],eax
6400f162:	je     0x6400f585
6400f168:	xor    ecx,ecx
6400f16a:	mov    ch,BYTE PTR [edi]
6400f16c:	mov    cl,BYTE PTR [edi+0x1]
6400f16f:	test   cx,cx
6400f172:	jne    0x6400f189
6400f174:	mov    edx,DWORD PTR [esi+0x4]
6400f177:	mov    ebx,DWORD PTR [esi]
6400f179:	mov    ebp,DWORD PTR [esi+0x8]
6400f17c:	mov    DWORD PTR [esp+0x34],edx
6400f180:	mov    DWORD PTR [esp+0x3c],eax
6400f184:	jmp    0x6400f40c
6400f189:	xor    ecx,ecx
6400f18b:	add    DWORD PTR [esp+0x60],0x1
6400f190:	mov    DWORD PTR [esi+0x14],0x0
6400f197:	mov    ch,BYTE PTR [edi]
6400f199:	mov    cl,BYTE PTR [edi+0x1]
6400f19c:	mov    DWORD PTR [esi+0x10],ecx
6400f19f:	jmp    0x6400f53a
6400f1a4:	cmp    DWORD PTR [esp+0x60],0x20
6400f1a9:	jae    0x6400f585
6400f1af:	mov    eax,DWORD PTR [esp+0x60]
6400f1b3:	mov    ecx,DWORD PTR [esp+0x58]
6400f1b7:	lea    edx,[eax+eax*4]
6400f1ba:	xor    eax,eax
6400f1bc:	mov    ah,BYTE PTR [edi]
6400f1be:	lea    esi,[ecx+edx*8+0x18]
6400f1c2:	movzx  edx,BYTE PTR [edi+0x2]
6400f1c6:	mov    al,BYTE PTR [edi+0x1]
6400f1c9:	shl    eax,0x8
6400f1cc:	or     eax,edx
6400f1ce:	movzx  edx,BYTE PTR [edi+0x3]
6400f1d2:	shl    eax,0x8
6400f1d5:	or     eax,edx
6400f1d7:	mov    DWORD PTR [esi],0x6
6400f1dd:	mov    DWORD PTR [esi+0x8],0x0
6400f1e4:	mov    ebx,DWORD PTR [ecx]
6400f1e6:	shl    eax,0x4
6400f1e9:	call   0x6400ec00
6400f1ee:	test   eax,eax
6400f1f0:	mov    DWORD PTR [esi+0xc],eax
6400f1f3:	je     0x6400f585
6400f1f9:	movzx  ecx,BYTE PTR [edi+0x2]
6400f1fd:	movzx  edx,BYTE PTR [edi+0x3]
6400f201:	xor    eax,eax
6400f203:	mov    ah,BYTE PTR [edi]
6400f205:	mov    al,BYTE PTR [edi+0x1]
6400f208:	shl    eax,0x8
6400f20b:	or     eax,ecx
6400f20d:	shl    eax,0x8
6400f210:	or     eax,edx
6400f212:	je     0x6400f3f9
6400f218:	xor    edx,edx
6400f21a:	mov    DWORD PTR [esi+0x14],0x0
6400f221:	mov    dh,BYTE PTR [edi]
6400f223:	movzx  eax,BYTE PTR [edi+0x2]
6400f227:	movzx  ecx,BYTE PTR [edi+0x3]
6400f22b:	mov    dl,BYTE PTR [edi+0x1]
6400f22e:	shl    edx,0x8
6400f231:	or     edx,eax
6400f233:	shl    edx,0x8
6400f236:	or     edx,ecx
6400f238:	add    DWORD PTR [esp+0x60],0x1
6400f23d:	jmp    0x6400f537
6400f242:	cmp    DWORD PTR [esp+0x60],0x20
6400f247:	jae    0x6400f585
6400f24d:	mov    eax,DWORD PTR [esp+0x60]
6400f251:	mov    ecx,DWORD PTR [esp+0x58]
6400f255:	lea    edx,[eax+eax*4]
6400f258:	xor    eax,eax
6400f25a:	mov    ah,BYTE PTR [edi]
6400f25c:	lea    esi,[ecx+edx*8+0x18]
6400f260:	mov    al,BYTE PTR [edi+0x1]
6400f263:	mov    DWORD PTR [esi],0x7
6400f269:	mov    DWORD PTR [esi+0x8],0x0
6400f270:	mov    ebx,DWORD PTR [ecx]
6400f272:	shl    eax,0x5
6400f275:	call   0x6400ec00
6400f27a:	test   eax,eax
6400f27c:	mov    DWORD PTR [esi+0xc],eax
6400f27f:	je     0x6400f585
6400f285:	xor    eax,eax
6400f287:	mov    ah,BYTE PTR [edi]
6400f289:	mov    al,BYTE PTR [edi+0x1]
6400f28c:	test   ax,ax
6400f28f:	jne    0x6400f2a9
6400f291:	mov    ecx,DWORD PTR [esi+0x4]
6400f294:	mov    edx,DWORD PTR [esi+0xc]
6400f297:	mov    ebx,DWORD PTR [esi]
6400f299:	mov    ebp,DWORD PTR [esi+0x8]
6400f29c:	mov    DWORD PTR [esp+0x34],ecx
6400f2a0:	mov    DWORD PTR [esp+0x3c],edx
6400f2a4:	jmp    0x6400f40c
6400f2a9:	xor    ecx,ecx
6400f2ab:	mov    eax,0x1
6400f2b0:	add    DWORD PTR [esp+0x60],eax
6400f2b4:	mov    DWORD PTR [esi+0x14],eax
6400f2b7:	mov    ch,BYTE PTR [edi]
6400f2b9:	mov    cl,BYTE PTR [edi+0x1]
6400f2bc:	mov    DWORD PTR [esi+0x10],ecx
6400f2bf:	jmp    0x6400f53a
6400f2c4:	cmp    DWORD PTR [esp+0x60],0x20
6400f2c9:	jae    0x6400f585
6400f2cf:	mov    eax,DWORD PTR [esp+0x60]
6400f2d3:	mov    ecx,DWORD PTR [esp+0x58]
6400f2d7:	lea    edx,[eax+eax*4]
6400f2da:	xor    eax,eax
6400f2dc:	mov    ah,BYTE PTR [edi]
6400f2de:	lea    esi,[ecx+edx*8+0x18]
6400f2e2:	movzx  edx,BYTE PTR [edi+0x2]
6400f2e6:	mov    al,BYTE PTR [edi+0x1]
6400f2e9:	shl    eax,0x8
6400f2ec:	or     eax,edx
6400f2ee:	movzx  edx,BYTE PTR [edi+0x3]
6400f2f2:	shl    eax,0x8
6400f2f5:	or     eax,edx
6400f2f7:	mov    DWORD PTR [esi],0x7
6400f2fd:	mov    DWORD PTR [esi+0x8],0x0
6400f304:	mov    ebx,DWORD PTR [ecx]
6400f306:	shl    eax,0x5
6400f309:	call   0x6400ec00
6400f30e:	test   eax,eax
6400f310:	mov    DWORD PTR [esi+0xc],eax
6400f313:	je     0x6400f585
6400f319:	movzx  ecx,BYTE PTR [edi+0x2]
6400f31d:	movzx  edx,BYTE PTR [edi+0x3]
6400f321:	xor    eax,eax
6400f323:	mov    ah,BYTE PTR [edi]
6400f325:	mov    al,BYTE PTR [edi+0x1]
6400f328:	shl    eax,0x8
6400f32b:	or     eax,ecx
6400f32d:	shl    eax,0x8
6400f330:	or     eax,edx
6400f332:	je     0x6400f3f9
6400f338:	xor    edx,edx
6400f33a:	mov    eax,0x1
6400f33f:	mov    DWORD PTR [esi+0x14],eax
6400f342:	mov    dh,BYTE PTR [edi]
6400f344:	movzx  ecx,BYTE PTR [edi+0x2]
6400f348:	mov    dl,BYTE PTR [edi+0x1]
6400f34b:	shl    edx,0x8
6400f34e:	or     edx,ecx
6400f350:	movzx  ecx,BYTE PTR [edi+0x3]
6400f354:	shl    edx,0x8
6400f357:	or     edx,ecx
6400f359:	add    DWORD PTR [esp+0x60],eax
6400f35d:	jmp    0x6400f537
6400f362:	cmp    al,0x90
6400f364:	jb     0x6400f3b3
6400f366:	cmp    al,0x9f
6400f368:	ja     0x6400f3b3
6400f36a:	cmp    DWORD PTR [esp+0x60],ecx
6400f36e:	jae    0x6400f585
6400f374:	mov    ecx,DWORD PTR [esp+0x60]
6400f378:	lea    edx,[ecx+ecx*4]
6400f37b:	mov    ecx,DWORD PTR [esp+0x58]
6400f37f:	lea    esi,[ecx+edx*8+0x18]
6400f383:	and    eax,0xf
6400f386:	call   0x6400ec60
6400f38b:	test   eax,eax
6400f38d:	jl     0x6400f585
6400f393:	mov    eax,DWORD PTR [esp+0x14]
6400f397:	test   BYTE PTR [eax],0xf
6400f39a:	je     0x6400f3f9
6400f39c:	mov    DWORD PTR [esi+0x14],0x0
6400f3a3:	movzx  edx,BYTE PTR [eax]
6400f3a6:	and    edx,0xf
6400f3a9:	add    DWORD PTR [esp+0x60],0x1
6400f3ae:	jmp    0x6400f537
6400f3b3:	cmp    al,0x80
6400f3b5:	jb     0x6400f585
6400f3bb:	cmp    al,0x8f
6400f3bd:	ja     0x6400f585
6400f3c3:	cmp    DWORD PTR [esp+0x60],ecx
6400f3c7:	jae    0x6400f585
6400f3cd:	mov    ecx,DWORD PTR [esp+0x60]
6400f3d1:	lea    edx,[ecx+ecx*4]
6400f3d4:	mov    ecx,DWORD PTR [esp+0x58]
6400f3d8:	lea    esi,[ecx+edx*8+0x18]
6400f3dc:	and    eax,0xf
6400f3df:	call   0x6400ec90
6400f3e4:	test   eax,eax
6400f3e6:	jl     0x6400f585
6400f3ec:	mov    eax,DWORD PTR [esp+0x14]
6400f3f0:	test   BYTE PTR [eax],0xf
6400f3f3:	jne    0x6400f525
6400f3f9:	mov    eax,DWORD PTR [esi+0x4]
6400f3fc:	mov    ecx,DWORD PTR [esi+0xc]
6400f3ff:	mov    ebp,DWORD PTR [esi+0x8]
6400f402:	mov    ebx,DWORD PTR [esi]
6400f404:	mov    DWORD PTR [esp+0x34],eax
6400f408:	mov    DWORD PTR [esp+0x3c],ecx
6400f40c:	mov    DWORD PTR [esp+0x38],ebp
6400f410:	mov    eax,DWORD PTR [esp+0x60]
6400f414:	lea    edx,[eax+eax*4]
6400f417:	mov    eax,DWORD PTR [esp+0x58]
6400f41b:	lea    edx,[eax+edx*8+0x18]
6400f41f:	lea    eax,[edx-0x28]
6400f422:	add    edx,0xfffffff0
6400f425:	mov    esi,0x1
6400f42a:	lea    ebx,[ebx+0x0]
6400f430:	cmp    DWORD PTR [esp+0x60],0x0
6400f435:	je     0x6400f561
6400f43b:	mov    ecx,DWORD PTR [eax+0x14]
6400f43e:	sub    ecx,0x0
6400f441:	je     0x6400f4bd
6400f443:	sub    ecx,esi
6400f445:	je     0x6400f508
6400f44b:	sub    ecx,esi
6400f44d:	jne    0x6400f585
6400f453:	mov    ecx,DWORD PTR [edx+0x4]
6400f456:	mov    esi,DWORD PTR [edx]
6400f458:	mov    DWORD PTR [esp+0x44],ecx
6400f45c:	mov    ecx,DWORD PTR [edx+0x8]
6400f45f:	mov    DWORD PTR [esp+0x48],ecx
6400f463:	mov    ecx,DWORD PTR [edx+0xc]
6400f466:	mov    DWORD PTR [esp+0x4c],ecx
6400f46a:	mov    ecx,DWORD PTR [eax+0x8]
6400f46d:	shl    ecx,0x5
6400f470:	add    ecx,DWORD PTR [eax+0xc]
6400f473:	mov    DWORD PTR [ecx],esi
6400f475:	mov    esi,DWORD PTR [esp+0x44]
6400f479:	mov    DWORD PTR [ecx+0x4],esi
6400f47c:	mov    esi,DWORD PTR [esp+0x48]
6400f480:	mov    DWORD PTR [ecx+0x8],esi
6400f483:	mov    esi,DWORD PTR [esp+0x4c]
6400f487:	mov    DWORD PTR [ecx+0xc],esi
6400f48a:	mov    ecx,DWORD PTR [eax+0x8]
6400f48d:	mov    esi,DWORD PTR [eax+0xc]
6400f490:	shl    ecx,0x5
6400f493:	lea    ecx,[ecx+esi*1+0x10]
6400f497:	mov    esi,DWORD PTR [esp+0x34]
6400f49b:	mov    DWORD PTR [ecx],ebx
6400f49d:	mov    DWORD PTR [ecx+0x4],esi
6400f4a0:	mov    esi,DWORD PTR [esp+0x3c]
6400f4a4:	mov    DWORD PTR [ecx+0x8],ebp
6400f4a7:	mov    DWORD PTR [ecx+0xc],esi
6400f4aa:	mov    esi,0x1
6400f4af:	add    DWORD PTR [eax+0x8],esi
6400f4b2:	add    DWORD PTR [eax+0x10],0xffffffff
6400f4b6:	je     0x6400f4e2
6400f4b8:	mov    DWORD PTR [eax+0x14],esi
6400f4bb:	jmp    0x6400f53a
6400f4bd:	mov    ecx,DWORD PTR [eax+0x8]
6400f4c0:	shl    ecx,0x4
6400f4c3:	add    ecx,DWORD PTR [eax+0xc]
6400f4c6:	mov    DWORD PTR [ecx],ebx
6400f4c8:	mov    ebx,DWORD PTR [esp+0x34]
6400f4cc:	mov    DWORD PTR [ecx+0x4],ebx
6400f4cf:	mov    ebx,DWORD PTR [esp+0x3c]
6400f4d3:	mov    DWORD PTR [ecx+0x8],ebp
6400f4d6:	mov    DWORD PTR [ecx+0xc],ebx
6400f4d9:	add    DWORD PTR [eax+0x8],esi
6400f4dc:	add    DWORD PTR [eax+0x10],0xffffffff
6400f4e0:	jne    0x6400f53a
6400f4e2:	mov    ecx,DWORD PTR [eax+0x4]
6400f4e5:	mov    ebp,DWORD PTR [eax+0x8]
6400f4e8:	mov    ebx,DWORD PTR [eax]
6400f4ea:	sub    DWORD PTR [esp+0x60],esi
6400f4ee:	mov    DWORD PTR [esp+0x34],ecx
6400f4f2:	mov    ecx,DWORD PTR [eax+0xc]
6400f4f5:	sub    eax,0x28
6400f4f8:	mov    DWORD PTR [esp+0x38],ebp
6400f4fc:	mov    DWORD PTR [esp+0x3c],ecx
6400f500:	sub    edx,0x28
6400f503:	jmp    0x6400f430
6400f508:	mov    edx,DWORD PTR [esp+0x34]
6400f50c:	mov    ecx,DWORD PTR [esp+0x3c]
6400f510:	mov    DWORD PTR [eax+0x18],ebx
6400f513:	mov    DWORD PTR [eax+0x1c],edx
6400f516:	mov    DWORD PTR [eax+0x20],ebp
6400f519:	mov    DWORD PTR [eax+0x24],ecx
6400f51c:	mov    DWORD PTR [eax+0x14],0x2
6400f523:	jmp    0x6400f53a
6400f525:	mov    ecx,0x1
6400f52a:	mov    DWORD PTR [esi+0x14],ecx
6400f52d:	movzx  edx,BYTE PTR [eax]
6400f530:	and    edx,0xf
6400f533:	add    DWORD PTR [esp+0x60],ecx
6400f537:	mov    DWORD PTR [esi+0x10],edx
6400f53a:	mov    eax,DWORD PTR [esp+0x14]
6400f53e:	add    eax,0x1
6400f541:	cmp    eax,DWORD PTR [esp+0x20]
6400f545:	mov    DWORD PTR [esp+0x18],0x0
6400f54d:	mov    DWORD PTR [esp+0x14],eax
6400f551:	je     0x6400f581
6400f553:	mov    edx,DWORD PTR [esp+0x20]
6400f557:	mov    ecx,0x20
6400f55c:	jmp    0x6400ed10
6400f561:	mov    eax,DWORD PTR [esp+0x58]
6400f565:	mov    ecx,DWORD PTR [esp+0x34]
6400f569:	mov    edx,DWORD PTR [esp+0x3c]
6400f56d:	add    DWORD PTR [esp+0x14],esi
6400f571:	mov    DWORD PTR [eax+0x18],ebx
6400f574:	mov    DWORD PTR [eax+0x1c],ecx
6400f577:	mov    DWORD PTR [eax+0x20],ebp
6400f57a:	mov    DWORD PTR [eax+0x24],edx
6400f57d:	mov    eax,esi
6400f57f:	jmp    0x6400f588
6400f581:	xor    eax,eax
6400f583:	jmp    0x6400f588
6400f585:	or     eax,0xffffffff
6400f588:	mov    ecx,DWORD PTR [esp+0x58]
6400f58c:	mov    edx,DWORD PTR [esp+0x18]
6400f590:	mov    DWORD PTR [ecx+0x8],edx
6400f593:	mov    edx,DWORD PTR [esp+0x1c]
6400f597:	mov    DWORD PTR [ecx+0xc],edx
6400f59a:	mov    edx,DWORD PTR [esp+0x60]
6400f59e:	mov    DWORD PTR [ecx+0x10],edx
6400f5a1:	mov    ecx,DWORD PTR [esp+0x14]
6400f5a5:	sub    ecx,DWORD PTR [esp+0x5c]
6400f5a9:	mov    edx,DWORD PTR [esp+0x64]
6400f5ad:	pop    edi
6400f5ae:	pop    esi
6400f5af:	pop    ebp
6400f5b0:	mov    DWORD PTR [edx],ecx
6400f5b2:	pop    ebx
6400f5b3:	add    esp,0x44
6400f5b6:	ret    
6400f5b7:	nop
6400f5b8:	xchg   edx,eax
6400f5b9:	in     eax,dx
6400f5ba:	add    BYTE PTR [ecx+ebx*4-0x13],ah
6400f5be:	add    BYTE PTR [esp+ebp*4-0x13],ah
6400f5c2:	add    BYTE PTR [esi+edi*4-0x13],ah
6400f5c6:	add    BYTE PTR [esi+ebx*8-0x13],ah
6400f5ca:	add    BYTE PTR [ebp+eax*4-0xb],ah
6400f5ce:	add    BYTE PTR [eax+eax*1+0x5],ah
6400f5d2:	add    DWORD PTR [edx],eax
6400f5d4:	add    eax,0x5050505
6400f5d9:	add    eax,0x3030303
6400f5de:	add    eax,DWORD PTR [ebx]
6400f5e0:	add    eax,DWORD PTR [ebx]
6400f5e2:	add    eax,DWORD PTR [ebx]
6400f5e4:	add    eax,0x5050505
6400f5e9:	add    eax,0x4040404
6400f5ee:	add    al,0x4
6400f5f0:	xchg   dh,ch
6400f5f2:	add    BYTE PTR [ecx+edi*4-0x12],ah
6400f5f6:	add    BYTE PTR [edi+ecx*2-0x11],ah
6400f5fa:	add    BYTE PTR [ebx+eiz*2-0x11],ah
6400f5fe:	add    BYTE PTR [esi+edi*2-0x11],ah
6400f602:	add    BYTE PTR [ebx+ebp*4-0x11],ah
6400f606:	add    BYTE PTR [ecx+esi*1-0x10],ah
6400f60a:	add    BYTE PTR [eax+edi*1-0x10],ah
6400f60e:	add    BYTE PTR [ebp+ecx*2-0x10],ah
6400f612:	add    BYTE PTR [ebp+esi*2-0x10],ah
6400f616:	add    BYTE PTR [ebp+eax*4-0xb],ah
6400f61a:	add    BYTE PTR [ebp+eax*4-0xb],ah
6400f61e:	add    BYTE PTR [ebp+eax*4-0xb],ah
6400f622:	add    BYTE PTR [ebp+eax*4-0xb],ah
6400f626:	add    BYTE PTR [ebp+eax*4-0xb],ah
6400f62a:	add    BYTE PTR [ebp+eax*4-0xb],ah
6400f62e:	add    BYTE PTR [esp+ebx*2-0x12],ah
6400f632:	add    BYTE PTR [ecx+ebp*2-0x12],ah
6400f636:	add    BYTE PTR [ebp+eiz*1-0xf],ah
6400f63a:	add    BYTE PTR [esp+eiz*4-0xf],ah
6400f63e:	add    BYTE PTR [edx+eax*2-0xe],ah
6400f642:	add    BYTE PTR [esp+eax*8-0xe],ah
6400f646:	add    BYTE PTR [ebp+ecx*1-0xf],ah
6400f64a:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400f64e:	int3   
6400f64f:	int3   
6400f650:	push   ebp
6400f651:	mov    ebp,esp
6400f653:	and    esp,0xfffffff8
6400f656:	sub    esp,0x51c
6400f65c:	push   ebx
6400f65d:	push   esi
6400f65e:	mov    esi,DWORD PTR [ebp+0x10]
6400f661:	xor    ebx,ebx
6400f663:	xor    eax,eax
6400f665:	cmp    esi,ebx
6400f667:	push   edi
6400f668:	mov    DWORD PTR [esp+0xc],eax
6400f66c:	je     0x6400f674
6400f66e:	mov    eax,DWORD PTR [esi]
6400f670:	mov    DWORD PTR [esp+0xc],eax
6400f674:	mov    edi,DWORD PTR [ebp+0xc]
6400f677:	cmp    edi,eax
6400f679:	ja     0x6400f684
6400f67b:	xor    eax,eax
6400f67d:	pop    edi
6400f67e:	pop    esi
6400f67f:	pop    ebx
6400f680:	mov    esp,ebp
6400f682:	pop    ebp
6400f683:	ret    
6400f684:	mov    edx,DWORD PTR [ebp+0x8]
6400f687:	xor    eax,eax
6400f689:	lea    ecx,[esp+0xc]
6400f68d:	push   ecx
6400f68e:	mov    DWORD PTR [esp+0x2c],eax
6400f692:	mov    DWORD PTR [esp+0x30],eax
6400f696:	mov    DWORD PTR [esp+0x34],eax
6400f69a:	mov    DWORD PTR [esp+0x38],eax
6400f69e:	mov    eax,DWORD PTR [ebp+0x14]
6400f6a1:	push   edi
6400f6a2:	mov    DWORD PTR [esp+0x18],eax
6400f6a6:	push   edx
6400f6a7:	lea    eax,[esp+0x1c]
6400f6ab:	push   eax
6400f6ac:	mov    DWORD PTR [esp+0x28],ebx
6400f6b0:	mov    DWORD PTR [esp+0x2c],ebx
6400f6b4:	mov    DWORD PTR [esp+0x30],ebx
6400f6b8:	mov    BYTE PTR [esp+0x24],bl
6400f6bc:	call   0x6400ecc0
6400f6c1:	add    esp,0x10
6400f6c4:	cmp    eax,ebx
6400f6c6:	jge    0x6400f6d2
6400f6c8:	or     eax,0xffffffff
6400f6cb:	pop    edi
6400f6cc:	pop    esi
6400f6cd:	pop    ebx
6400f6ce:	mov    esp,ebp
6400f6d0:	pop    ebp
6400f6d1:	ret    
6400f6d2:	cmp    esi,ebx
6400f6d4:	mov    ecx,DWORD PTR [esp+0xc]
6400f6d8:	je     0x6400f6dc
6400f6da:	mov    DWORD PTR [esi],ecx
6400f6dc:	cmp    eax,ebx
6400f6de:	je     0x6400f67b
6400f6e0:	mov    eax,DWORD PTR [ebp+0x18]
6400f6e3:	mov    edx,DWORD PTR [esp+0x28]
6400f6e7:	mov    DWORD PTR [eax],edx
6400f6e9:	mov    edx,DWORD PTR [esp+0x2c]
6400f6ed:	mov    DWORD PTR [eax+0x4],edx
6400f6f0:	mov    edx,DWORD PTR [esp+0x30]
6400f6f4:	mov    DWORD PTR [eax+0x8],edx
6400f6f7:	mov    edx,DWORD PTR [esp+0x34]
6400f6fb:	cmp    ecx,edi
6400f6fd:	pop    edi
6400f6fe:	mov    DWORD PTR [eax+0xc],edx
6400f701:	sbb    eax,eax
6400f703:	pop    esi
6400f704:	add    eax,0x2
6400f707:	pop    ebx
6400f708:	mov    esp,ebp
6400f70a:	pop    ebp
6400f70b:	ret    
6400f70c:	int3   
6400f70d:	int3   
6400f70e:	int3   
6400f70f:	int3   
6400f710:	mov    eax,DWORD PTR [esp+0x8]
6400f714:	sub    eax,0x1
6400f717:	jne    0x6400f722
6400f719:	mov    eax,DWORD PTR [esp+0x4]
6400f71d:	mov    ds:0x6402e4a4,eax
6400f722:	mov    eax,0x1
6400f727:	ret    0xc
6400f72a:	int3   
6400f72b:	int3   
6400f72c:	int3   
6400f72d:	int3   
6400f72e:	int3   
6400f72f:	int3   
6400f730:	cmp    BYTE PTR ds:0x6402e4a0,0x0
6400f737:	jne    0x6400f796
6400f739:	push   esi
6400f73a:	push   edi
6400f73b:	push   0x640253c4
6400f740:	mov    BYTE PTR ds:0x6402e4a0,0x1
6400f747:	call   DWORD PTR ds:0x64025018
6400f74d:	push   0x64025388
6400f752:	push   0xb
6400f754:	push   0x6402537c
6400f759:	mov    esi,eax
6400f75b:	call   0x64005710
6400f760:	mov    edi,DWORD PTR ds:0x64025014
6400f766:	add    esp,0xc
6400f769:	push   eax
6400f76a:	push   esi
6400f76b:	call   edi
6400f76d:	push   0x6402534c
6400f772:	push   0x19
6400f774:	push   0x64025330
6400f779:	mov    ds:0x6402e498,eax
6400f77e:	call   0x64005710
6400f783:	add    esp,0xc
6400f786:	push   eax
6400f787:	push   esi
6400f788:	call   edi
6400f78a:	pop    edi
6400f78b:	mov    ds:0x6402e49c,eax
6400f790:	pop    esi
6400f791:	jmp    0x64011c00
6400f796:	ret    
6400f797:	int3   
6400f798:	int3   
6400f799:	int3   
6400f79a:	int3   
6400f79b:	int3   
6400f79c:	int3   
6400f79d:	int3   
6400f79e:	int3   
6400f79f:	int3   
6400f7a0:	call   0x6400f730
6400f7a5:	mov    eax,ds:0x6402e498
6400f7aa:	test   eax,eax
6400f7ac:	je     0x6400f7b0
6400f7ae:	jmp    eax
6400f7b0:	ret    0x8
6400f7b3:	int3   
6400f7b4:	int3   
6400f7b5:	int3   
6400f7b6:	int3   
6400f7b7:	int3   
6400f7b8:	int3   
6400f7b9:	int3   
6400f7ba:	int3   
6400f7bb:	int3   
6400f7bc:	int3   
6400f7bd:	int3   
6400f7be:	int3   
6400f7bf:	int3   
6400f7c0:	call   0x6400f730
6400f7c5:	mov    eax,ds:0x6402e49c
6400f7ca:	test   eax,eax
6400f7cc:	je     0x6400f7d0
6400f7ce:	jmp    eax
6400f7d0:	ret    0x4
6400f7d3:	int3   
6400f7d4:	int3   
6400f7d5:	int3   
6400f7d6:	int3   
6400f7d7:	int3   
6400f7d8:	int3   
6400f7d9:	int3   
6400f7da:	int3   
6400f7db:	int3   
6400f7dc:	int3   
6400f7dd:	int3   
6400f7de:	int3   
6400f7df:	int3   
6400f7e0:	mov    eax,DWORD PTR [esp+0x4]
6400f7e4:	mov    edx,DWORD PTR [ecx]
6400f7e6:	mov    DWORD PTR [eax],edx
6400f7e8:	mov    edx,DWORD PTR [ecx+0x4]
6400f7eb:	mov    DWORD PTR [eax+0x4],edx
6400f7ee:	mov    edx,DWORD PTR [ecx+0x8]
6400f7f1:	mov    ecx,DWORD PTR [ecx+0xc]
6400f7f4:	mov    DWORD PTR [eax+0x8],edx
6400f7f7:	mov    DWORD PTR [eax+0xc],ecx
6400f7fa:	ret    0x4
6400f7fd:	int3   
6400f7fe:	int3   
6400f7ff:	int3   
6400f800:	jmp    0x640123cf
6400f805:	int3   
6400f806:	int3   
6400f807:	int3   
6400f808:	int3   
6400f809:	int3   
6400f80a:	int3   
6400f80b:	int3   
6400f80c:	int3   
6400f80d:	int3   
6400f80e:	int3   
6400f80f:	int3   
6400f810:	push   esi
6400f811:	mov    esi,ecx
6400f813:	call   0x640123cf
6400f818:	test   BYTE PTR [esp+0x8],0x1
6400f81d:	je     0x6400f828
6400f81f:	push   esi
6400f820:	call   0x64012262
6400f825:	add    esp,0x4
6400f828:	mov    eax,esi
6400f82a:	pop    esi
6400f82b:	ret    0x4
6400f82e:	int3   
6400f82f:	int3   
6400f830:	sub    esp,0x804
6400f836:	mov    eax,ds:0x6402d09c
6400f83b:	xor    eax,esp
6400f83d:	mov    DWORD PTR [esp+0x800],eax
6400f844:	call   DWORD PTR ds:0x6402504c
6400f84a:	and    eax,0xff
6400f84f:	cmp    eax,0x5
6400f852:	jb     0x6400f865
6400f854:	push   0x64025430
6400f859:	push   0x400
6400f85e:	lea    eax,[esp+0x8]
6400f862:	push   eax
6400f863:	jmp    0x6400f874
6400f865:	push   0x64025424
6400f86a:	push   0x400
6400f86f:	lea    ecx,[esp+0x8]
6400f873:	push   ecx
6400f874:	call   0x64012f60
6400f879:	add    esp,0xc
6400f87c:	push   0x64025414
6400f881:	lea    edx,[esp+0x4]
6400f885:	push   0x400
6400f88a:	push   edx
6400f88b:	call   0x64012ee6
6400f890:	add    esp,0xc
6400f893:	push   0x0
6400f895:	push   0x80
6400f89a:	push   0x3
6400f89c:	push   0x0
6400f89e:	push   0x0
6400f8a0:	lea    eax,[esp+0x14]
6400f8a4:	push   0xc0000000
6400f8a9:	push   eax
6400f8aa:	call   0x6400ce80
6400f8af:	call   eax
6400f8b1:	cmp    eax,0xffffffff
6400f8b4:	jne    0x6400f8d7
6400f8b6:	call   DWORD PTR ds:0x64025044
6400f8bc:	cmp    eax,0x20
6400f8bf:	sete   al
6400f8c2:	mov    ecx,DWORD PTR [esp+0x800]
6400f8c9:	xor    ecx,esp
6400f8cb:	call   0x64012abc
6400f8d0:	add    esp,0x804
6400f8d6:	ret    
6400f8d7:	push   eax
6400f8d8:	call   DWORD PTR ds:0x64025040
6400f8de:	mov    ecx,DWORD PTR [esp+0x800]
6400f8e5:	xor    ecx,esp
6400f8e7:	mov    al,0x1
6400f8e9:	call   0x64012abc
6400f8ee:	add    esp,0x804
6400f8f4:	ret    
6400f8f5:	int3   
6400f8f6:	int3   
6400f8f7:	int3   
6400f8f8:	int3   
6400f8f9:	int3   
6400f8fa:	int3   
6400f8fb:	int3   
6400f8fc:	int3   
6400f8fd:	int3   
6400f8fe:	int3   
6400f8ff:	int3   
6400f900:	push   ebx
6400f901:	mov    ebx,DWORD PTR ds:0x64025050
6400f907:	push   esi
6400f908:	push   edi
6400f909:	mov    edi,DWORD PTR [esp+0x10]
6400f90d:	xor    esi,esi
6400f90f:	nop
6400f910:	lea    eax,[esp+0x10]
6400f914:	push   0x0
6400f916:	push   eax
6400f917:	mov    DWORD PTR [esp+0x18],0x0
6400f91f:	call   0x6400d9e0
6400f924:	call   eax
6400f926:	test   eax,eax
6400f928:	je     0x6400f939
6400f92a:	cmp    edi,0xffffffff
6400f92d:	je     0x6400f939
6400f92f:	add    esi,0x3e8
6400f935:	cmp    esi,edi
6400f937:	ja     0x6400f942
6400f939:	push   0x3e8
6400f93e:	call   ebx
6400f940:	jmp    0x6400f910
6400f942:	pop    edi
6400f943:	pop    esi
6400f944:	mov    al,0x1
6400f946:	pop    ebx
6400f947:	ret    
6400f948:	int3   
6400f949:	int3   
6400f94a:	int3   
6400f94b:	int3   
6400f94c:	int3   
6400f94d:	int3   
6400f94e:	int3   
6400f94f:	int3   
6400f950:	mov    ecx,DWORD PTR [esp+0x4]
6400f954:	sub    esp,0xc
6400f957:	test   ecx,ecx
6400f959:	ja     0x6400f971
6400f95b:	xor    ecx,ecx
6400f95d:	lea    edx,[ecx*4+0x0]
6400f964:	push   edx
6400f965:	call   0x64012641
6400f96a:	add    esp,0x4
6400f96d:	add    esp,0xc
6400f970:	ret    
6400f971:	or     eax,0xffffffff
6400f974:	xor    edx,edx
6400f976:	div    ecx
6400f978:	cmp    eax,0x4
6400f97b:	jae    0x6400f95d
6400f97d:	lea    eax,[esp+0x10]
6400f981:	push   eax
6400f982:	lea    ecx,[esp+0x4]
6400f986:	mov    DWORD PTR [esp+0x14],0x0
6400f98e:	call   0x640122bd
6400f993:	push   0x6402ab24
6400f998:	lea    ecx,[esp+0x4]
6400f99c:	push   ecx
6400f99d:	mov    DWORD PTR [esp+0x8],0x64025304
6400f9a5:	call   0x640126ab
6400f9aa:	int3   
6400f9ab:	int3   
6400f9ac:	int3   
6400f9ad:	int3   
6400f9ae:	int3   
6400f9af:	int3   
6400f9b0:	push   esi
6400f9b1:	mov    esi,DWORD PTR [ecx]
6400f9b3:	test   esi,esi
6400f9b5:	je     0x6400f9c6
6400f9b7:	push   esi
6400f9b8:	call   0x6400eb60
6400f9bd:	push   esi
6400f9be:	call   0x64012262
6400f9c3:	add    esp,0x8
6400f9c6:	pop    esi
6400f9c7:	ret    
6400f9c8:	int3   
6400f9c9:	int3   
6400f9ca:	int3   
6400f9cb:	int3   
6400f9cc:	int3   
6400f9cd:	int3   
6400f9ce:	int3   
6400f9cf:	int3   
6400f9d0:	push   esi
6400f9d1:	mov    esi,DWORD PTR [ecx+0x10]
6400f9d4:	test   esi,esi
6400f9d6:	je     0x6400f9e7
6400f9d8:	push   esi
6400f9d9:	call   0x6400eb60
6400f9de:	push   esi
6400f9df:	call   0x64012262
6400f9e4:	add    esp,0x8
6400f9e7:	pop    esi
6400f9e8:	ret    
6400f9e9:	int3   
6400f9ea:	int3   
6400f9eb:	int3   
6400f9ec:	int3   
6400f9ed:	int3   
6400f9ee:	int3   
6400f9ef:	int3   
6400f9f0:	mov    ecx,DWORD PTR [esp+0x8]
6400f9f4:	test   ecx,ecx
6400f9f6:	jne    0x6400fa02
6400f9f8:	push   0x80004005
6400f9fd:	call   0x64001040
6400fa02:	mov    eax,DWORD PTR [esp+0x4]
6400fa06:	mov    eax,DWORD PTR [eax]
6400fa08:	mov    dx,WORD PTR [eax]
6400fa0b:	cmp    dx,WORD PTR [ecx]
6400fa0e:	jne    0x6400fa36
6400fa10:	test   dx,dx
6400fa13:	je     0x6400fa2a
6400fa15:	mov    dx,WORD PTR [eax+0x2]
6400fa19:	cmp    dx,WORD PTR [ecx+0x2]
6400fa1d:	jne    0x6400fa36
6400fa1f:	add    eax,0x4
6400fa22:	add    ecx,0x4
6400fa25:	test   dx,dx
6400fa28:	jne    0x6400fa08
6400fa2a:	xor    eax,eax
6400fa2c:	xor    ecx,ecx
6400fa2e:	test   eax,eax
6400fa30:	setne  cl
6400fa33:	mov    al,cl
6400fa35:	ret    
6400fa36:	sbb    eax,eax
6400fa38:	sbb    eax,0xffffffff
6400fa3b:	xor    ecx,ecx
6400fa3d:	test   eax,eax
6400fa3f:	setne  cl
6400fa42:	mov    al,cl
6400fa44:	ret    
6400fa45:	int3   
6400fa46:	int3   
6400fa47:	int3   
6400fa48:	int3   
6400fa49:	int3   
6400fa4a:	int3   
6400fa4b:	int3   
6400fa4c:	int3   
6400fa4d:	int3   
6400fa4e:	int3   
6400fa4f:	int3   
6400fa50:	mov    eax,DWORD PTR [esp+0x4]
6400fa54:	mov    ecx,DWORD PTR [esp+0x8]
6400fa58:	cmp    eax,ecx
6400fa5a:	je     0x6400fa6d
6400fa5c:	mov    edx,DWORD PTR [esp+0xc]
6400fa60:	push   esi
6400fa61:	mov    esi,DWORD PTR [edx]
6400fa63:	mov    DWORD PTR [eax],esi
6400fa65:	add    eax,0x4
6400fa68:	cmp    eax,ecx
6400fa6a:	jne    0x6400fa61
6400fa6c:	pop    esi
6400fa6d:	ret    
6400fa6e:	int3   
6400fa6f:	int3   
6400fa70:	mov    eax,DWORD PTR [esp+0x8]
6400fa74:	mov    edx,DWORD PTR [esp+0x4]
6400fa78:	sub    eax,edx
6400fa7a:	sar    eax,0x2
6400fa7d:	push   esi
6400fa7e:	mov    esi,DWORD PTR [esp+0x10]
6400fa82:	lea    ecx,[eax*4+0x0]
6400fa89:	sub    esi,ecx
6400fa8b:	test   eax,eax
6400fa8d:	jle    0x6400fa9b
6400fa8f:	push   ecx
6400fa90:	push   edx
6400fa91:	push   ecx
6400fa92:	push   esi
6400fa93:	call   0x64012493
6400fa98:	add    esp,0x10
6400fa9b:	mov    eax,esi
6400fa9d:	pop    esi
6400fa9e:	ret    
6400fa9f:	int3   
6400faa0:	mov    eax,DWORD PTR [esp+0x14]
6400faa4:	push   ebp
6400faa5:	mov    ebp,DWORD PTR [esp+0x8]
6400faa9:	push   esi
6400faaa:	mov    esi,DWORD PTR [esp+0x14]
6400faae:	push   edi
6400faaf:	lea    edi,[esi+eax*1]
6400fab2:	mov    eax,DWORD PTR [ebp+0x0]
6400fab5:	mov    edx,DWORD PTR [eax-0x8]
6400fab8:	sub    eax,0x10
6400fabb:	mov    ecx,0x1
6400fac0:	sub    ecx,DWORD PTR [eax+0xc]
6400fac3:	sub    edx,edi
6400fac5:	or     ecx,edx
6400fac7:	jge    0x6400fad1
6400fac9:	push   edi
6400faca:	mov    ecx,ebp
6400facc:	call   0x64001e00
6400fad1:	mov    eax,DWORD PTR [esp+0x14]
6400fad5:	push   ebx
6400fad6:	mov    ebx,DWORD PTR [ebp+0x0]
6400fad9:	add    esi,esi
6400fadb:	push   esi
6400fadc:	push   eax
6400fadd:	push   esi
6400fade:	push   ebx
6400fadf:	call   0x64012418
6400fae4:	mov    eax,DWORD PTR [esp+0x34]
6400fae8:	mov    ecx,DWORD PTR [esp+0x30]
6400faec:	add    eax,eax
6400faee:	push   eax
6400faef:	push   ecx
6400faf0:	push   eax
6400faf1:	add    esi,ebx
6400faf3:	push   esi
6400faf4:	call   0x64012418
6400faf9:	add    esp,0x20
6400fafc:	test   edi,edi
6400fafe:	pop    ebx
6400faff:	jl     0x6400fb19
6400fb01:	mov    eax,DWORD PTR [ebp+0x0]
6400fb04:	cmp    edi,DWORD PTR [eax-0x8]
6400fb07:	jg     0x6400fb19
6400fb09:	mov    DWORD PTR [eax-0xc],edi
6400fb0c:	mov    edx,DWORD PTR [ebp+0x0]
6400fb0f:	mov    WORD PTR [edx+edi*2],0x0
6400fb15:	pop    edi
6400fb16:	pop    esi
6400fb17:	pop    ebp
6400fb18:	ret    
6400fb19:	push   0x80070057
6400fb1e:	call   0x64001040
6400fb23:	int3   
6400fb24:	int3   
6400fb25:	int3   
6400fb26:	int3   
6400fb27:	int3   
6400fb28:	int3   
6400fb29:	int3   
6400fb2a:	int3   
6400fb2b:	int3   
6400fb2c:	int3   
6400fb2d:	int3   
6400fb2e:	int3   
6400fb2f:	int3   
6400fb30:	push   ebx
6400fb31:	push   esi
6400fb32:	mov    esi,ecx
6400fb34:	cmp    DWORD PTR [esi+0x34],0x10
6400fb38:	jb     0x6400fb46
6400fb3a:	mov    eax,DWORD PTR [esi+0x20]
6400fb3d:	push   eax
6400fb3e:	call   0x64012262
6400fb43:	add    esp,0x4
6400fb46:	xor    ebx,ebx
6400fb48:	mov    DWORD PTR [esi+0x34],0xf
6400fb4f:	mov    DWORD PTR [esi+0x30],ebx
6400fb52:	mov    BYTE PTR [esi+0x20],bl
6400fb55:	cmp    DWORD PTR [esi+0x18],0x10
6400fb59:	jb     0x6400fb67
6400fb5b:	mov    ecx,DWORD PTR [esi+0x4]
6400fb5e:	push   ecx
6400fb5f:	call   0x64012262
6400fb64:	add    esp,0x4
6400fb67:	mov    DWORD PTR [esi+0x14],ebx
6400fb6a:	mov    DWORD PTR [esi+0x18],0xf
6400fb71:	mov    BYTE PTR [esi+0x4],bl
6400fb74:	pop    esi
6400fb75:	pop    ebx
6400fb76:	ret    
6400fb77:	int3   
6400fb78:	int3   
6400fb79:	int3   
6400fb7a:	int3   
6400fb7b:	int3   
6400fb7c:	int3   
6400fb7d:	int3   
6400fb7e:	int3   
6400fb7f:	int3   
6400fb80:	push   0xffffffff
6400fb82:	push   0x640220a9
6400fb87:	mov    eax,fs:0x0
6400fb8d:	push   eax
6400fb8e:	push   ecx
6400fb8f:	push   esi
6400fb90:	push   edi
6400fb91:	mov    eax,ds:0x6402d09c
6400fb96:	xor    eax,esp
6400fb98:	push   eax
6400fb99:	lea    eax,[esp+0x10]
6400fb9d:	mov    fs:0x0,eax
6400fba3:	mov    edi,DWORD PTR [esp+0x24]
6400fba7:	mov    DWORD PTR [esp+0xc],0x0
6400fbaf:	mov    eax,DWORD PTR [edi]
6400fbb1:	mov    ecx,DWORD PTR [eax-0x10]
6400fbb4:	test   ecx,ecx
6400fbb6:	mov    DWORD PTR [esp+0x18],0x0
6400fbbe:	je     0x6400fbcb
6400fbc0:	mov    edx,DWORD PTR [ecx]
6400fbc2:	mov    eax,DWORD PTR [edx+0x10]
6400fbc5:	call   eax
6400fbc7:	test   eax,eax
6400fbc9:	jne    0x6400fbdb
6400fbcb:	mov    edx,DWORD PTR ds:0x6402e540
6400fbd1:	mov    eax,DWORD PTR [edx+0x10]
6400fbd4:	mov    ecx,0x6402e540
6400fbd9:	call   eax
6400fbdb:	xor    ecx,ecx
6400fbdd:	test   eax,eax
6400fbdf:	setne  cl
6400fbe2:	test   ecx,ecx
6400fbe4:	jne    0x6400fbf0
6400fbe6:	push   0x80004005
6400fbeb:	call   0x64001040
6400fbf0:	mov    edx,DWORD PTR [eax]
6400fbf2:	mov    ecx,eax
6400fbf4:	mov    eax,DWORD PTR [edx+0xc]
6400fbf7:	call   eax
6400fbf9:	mov    esi,DWORD PTR [esp+0x20]
6400fbfd:	add    eax,0x10
6400fc00:	mov    DWORD PTR [esi],eax
6400fc02:	mov    ecx,DWORD PTR [esp+0x28]
6400fc06:	mov    eax,DWORD PTR [ecx]
6400fc08:	mov    edx,DWORD PTR [eax-0xc]
6400fc0b:	mov    ecx,DWORD PTR [edi]
6400fc0d:	mov    edi,DWORD PTR [ecx-0xc]
6400fc10:	push   edx
6400fc11:	push   eax
6400fc12:	push   edi
6400fc13:	push   ecx
6400fc14:	push   esi
6400fc15:	mov    DWORD PTR [esp+0x2c],0x0
6400fc1d:	mov    DWORD PTR [esp+0x20],0x1
6400fc25:	call   0x6400faa0
6400fc2a:	add    esp,0x14
6400fc2d:	mov    eax,esi
6400fc2f:	mov    ecx,DWORD PTR [esp+0x10]
6400fc33:	mov    DWORD PTR fs:0x0,ecx
6400fc3a:	pop    ecx
6400fc3b:	pop    edi
6400fc3c:	pop    esi
6400fc3d:	add    esp,0x10
6400fc40:	ret    
6400fc41:	int3   
6400fc42:	int3   
6400fc43:	int3   
6400fc44:	int3   
6400fc45:	int3   
6400fc46:	int3   
6400fc47:	int3   
6400fc48:	int3   
6400fc49:	int3   
6400fc4a:	int3   
6400fc4b:	int3   
6400fc4c:	int3   
6400fc4d:	int3   
6400fc4e:	int3   
6400fc4f:	int3   
6400fc50:	push   0xffffffff
6400fc52:	push   0x640220e9
6400fc57:	mov    eax,fs:0x0
6400fc5d:	push   eax
6400fc5e:	push   ecx
6400fc5f:	push   ebp
6400fc60:	push   esi
6400fc61:	push   edi
6400fc62:	mov    eax,ds:0x6402d09c
6400fc67:	xor    eax,esp
6400fc69:	push   eax
6400fc6a:	lea    eax,[esp+0x14]
6400fc6e:	mov    fs:0x0,eax
6400fc74:	mov    ebp,DWORD PTR [esp+0x28]
6400fc78:	mov    DWORD PTR [esp+0x10],0x0
6400fc80:	mov    eax,DWORD PTR [ebp+0x0]
6400fc83:	mov    ecx,DWORD PTR [eax-0x10]
6400fc86:	test   ecx,ecx
6400fc88:	mov    DWORD PTR [esp+0x1c],0x0
6400fc90:	je     0x6400fc9d
6400fc92:	mov    edx,DWORD PTR [ecx]
6400fc94:	mov    eax,DWORD PTR [edx+0x10]
6400fc97:	call   eax
6400fc99:	test   eax,eax
6400fc9b:	jne    0x6400fcad
6400fc9d:	mov    edx,DWORD PTR ds:0x6402e540
6400fca3:	mov    eax,DWORD PTR [edx+0x10]
6400fca6:	mov    ecx,0x6402e540
6400fcab:	call   eax
6400fcad:	xor    ecx,ecx
6400fcaf:	test   eax,eax
6400fcb1:	setne  cl
6400fcb4:	test   ecx,ecx
6400fcb6:	jne    0x6400fcc2
6400fcb8:	push   0x80004005
6400fcbd:	call   0x64001040
6400fcc2:	mov    edx,DWORD PTR [eax]
6400fcc4:	mov    ecx,eax
6400fcc6:	mov    eax,DWORD PTR [edx+0xc]
6400fcc9:	call   eax
6400fccb:	mov    esi,DWORD PTR [esp+0x24]
6400fccf:	add    eax,0x10
6400fcd2:	mov    DWORD PTR [esi],eax
6400fcd4:	mov    edi,DWORD PTR [esp+0x2c]
6400fcd8:	test   edi,edi
6400fcda:	mov    DWORD PTR [esp+0x1c],0x0
6400fce2:	mov    DWORD PTR [esp+0x10],0x1
6400fcea:	jne    0x6400fcf0
6400fcec:	xor    eax,eax
6400fcee:	jmp    0x6400fd04
6400fcf0:	mov    eax,edi
6400fcf2:	lea    edx,[eax+0x2]
6400fcf5:	mov    cx,WORD PTR [eax]
6400fcf8:	add    eax,0x2
6400fcfb:	test   cx,cx
6400fcfe:	jne    0x6400fcf5
6400fd00:	sub    eax,edx
6400fd02:	sar    eax,1
6400fd04:	mov    ecx,DWORD PTR [ebp+0x0]
6400fd07:	mov    edx,DWORD PTR [ecx-0xc]
6400fd0a:	push   eax
6400fd0b:	push   edi
6400fd0c:	push   edx
6400fd0d:	push   ecx
6400fd0e:	push   esi
6400fd0f:	call   0x6400faa0
6400fd14:	add    esp,0x14
6400fd17:	mov    eax,esi
6400fd19:	mov    ecx,DWORD PTR [esp+0x14]
6400fd1d:	mov    DWORD PTR fs:0x0,ecx
6400fd24:	pop    ecx
6400fd25:	pop    edi
6400fd26:	pop    esi
6400fd27:	pop    ebp
6400fd28:	add    esp,0x10
6400fd2b:	ret    
6400fd2c:	int3   
6400fd2d:	int3   
6400fd2e:	int3   
6400fd2f:	int3   
6400fd30:	mov    eax,DWORD PTR [esp+0x8]
6400fd34:	mov    ecx,DWORD PTR [esp+0x4]
6400fd38:	mov    edx,DWORD PTR [esp+0xc]
6400fd3c:	sub    eax,ecx
6400fd3e:	sar    eax,0x2
6400fd41:	lea    eax,[eax*4+0x0]
6400fd48:	push   esi
6400fd49:	lea    esi,[eax+edx*1]
6400fd4c:	je     0x6400fd5a
6400fd4e:	push   eax
6400fd4f:	push   ecx
6400fd50:	push   eax
6400fd51:	push   edx
6400fd52:	call   0x64012493
6400fd57:	add    esp,0x10
6400fd5a:	mov    eax,esi
6400fd5c:	pop    esi
6400fd5d:	ret    0xc
6400fd60:	push   esi
6400fd61:	mov    esi,DWORD PTR [esp+0xc]
6400fd65:	test   esi,esi
6400fd67:	push   edi
6400fd68:	mov    edi,DWORD PTR [esp+0xc]
6400fd6c:	mov    eax,esi
6400fd6e:	mov    ecx,edi
6400fd70:	jbe    0x6400fd86
6400fd72:	mov    edx,DWORD PTR [esp+0x14]
6400fd76:	push   ebx
6400fd77:	mov    ebx,DWORD PTR [edx]
6400fd79:	mov    DWORD PTR [ecx],ebx
6400fd7b:	sub    eax,0x1
6400fd7e:	add    ecx,0x4
6400fd81:	test   eax,eax
6400fd83:	ja     0x6400fd77
6400fd85:	pop    ebx
6400fd86:	lea    eax,[edi+esi*4]
6400fd89:	pop    edi
6400fd8a:	pop    esi
6400fd8b:	ret    0xc
6400fd8e:	int3   
6400fd8f:	int3   
6400fd90:	mov    eax,DWORD PTR [esp+0x4]
6400fd94:	push   esi
6400fd95:	push   eax
6400fd96:	mov    esi,ecx
6400fd98:	call   0x640123b7
6400fd9d:	mov    DWORD PTR [esi],0x64025400
6400fda3:	mov    eax,esi
6400fda5:	pop    esi
6400fda6:	ret    0x4
6400fda9:	int3   
6400fdaa:	int3   
6400fdab:	int3   
6400fdac:	int3   
6400fdad:	int3   
6400fdae:	int3   
6400fdaf:	int3   
6400fdb0:	push   esi
6400fdb1:	mov    esi,ecx
6400fdb3:	mov    DWORD PTR [esi],0x6402544c
6400fdb9:	cmp    DWORD PTR [esi+0x24],0x10
6400fdbd:	jb     0x6400fdcb
6400fdbf:	mov    eax,DWORD PTR [esi+0x10]
6400fdc2:	push   eax
6400fdc3:	call   0x64012262
6400fdc8:	add    esp,0x4
6400fdcb:	xor    eax,eax
6400fdcd:	mov    DWORD PTR [esi+0x24],0xf
6400fdd4:	mov    DWORD PTR [esi+0x20],eax
6400fdd7:	mov    BYTE PTR [esi+0x10],al
6400fdda:	mov    ecx,esi
6400fddc:	pop    esi
6400fddd:	jmp    0x6401237b
6400fde2:	int3   
6400fde3:	int3   
6400fde4:	int3   
6400fde5:	int3   
6400fde6:	int3   
6400fde7:	int3   
6400fde8:	int3   
6400fde9:	int3   
6400fdea:	int3   
6400fdeb:	int3   
6400fdec:	int3   
6400fded:	int3   
6400fdee:	int3   
6400fdef:	int3   
6400fdf0:	push   esi
6400fdf1:	mov    esi,ecx
6400fdf3:	mov    DWORD PTR [esi],0x6402544c
6400fdf9:	cmp    DWORD PTR [esi+0x24],0x10
6400fdfd:	jb     0x6400fe0b
6400fdff:	mov    eax,DWORD PTR [esi+0x10]
6400fe02:	push   eax
6400fe03:	call   0x64012262
6400fe08:	add    esp,0x4
6400fe0b:	xor    eax,eax
6400fe0d:	mov    DWORD PTR [esi+0x24],0xf
6400fe14:	mov    DWORD PTR [esi+0x20],eax
6400fe17:	mov    ecx,esi
6400fe19:	mov    BYTE PTR [esi+0x10],al
6400fe1c:	call   0x6401237b
6400fe21:	test   BYTE PTR [esp+0x8],0x1
6400fe26:	je     0x6400fe31
6400fe28:	push   esi
6400fe29:	call   0x64012262
6400fe2e:	add    esp,0x4
6400fe31:	mov    eax,esi
6400fe33:	pop    esi
6400fe34:	ret    0x4
6400fe37:	int3   
6400fe38:	int3   
6400fe39:	int3   
6400fe3a:	int3   
6400fe3b:	int3   
6400fe3c:	int3   
6400fe3d:	int3   
6400fe3e:	int3   
6400fe3f:	int3   
6400fe40:	push   0xffffffff
6400fe42:	push   0x64022118
6400fe47:	mov    eax,fs:0x0
6400fe4d:	push   eax
6400fe4e:	sub    esp,0x44
6400fe51:	mov    eax,ds:0x6402d09c
6400fe56:	xor    eax,esp
6400fe58:	push   eax
6400fe59:	lea    eax,[esp+0x48]
6400fe5d:	mov    fs:0x0,eax
6400fe63:	push   0x12
6400fe65:	push   0x64028670
6400fe6a:	lea    ecx,[esp+0xc]
6400fe6e:	mov    DWORD PTR [esp+0x24],0xf
6400fe76:	mov    DWORD PTR [esp+0x20],0x0
6400fe7e:	mov    BYTE PTR [esp+0x10],0x0
6400fe83:	call   0x64001860
6400fe88:	lea    eax,[esp+0x4]
6400fe8c:	push   eax
6400fe8d:	lea    ecx,[esp+0x24]
6400fe91:	mov    DWORD PTR [esp+0x54],0x0
6400fe99:	call   0x64002c70
6400fe9e:	push   0x6402abf0
6400fea3:	lea    ecx,[esp+0x24]
6400fea7:	push   ecx
6400fea8:	mov    DWORD PTR [esp+0x28],0x6402531c
6400feb0:	call   0x640126ab
6400feb5:	int3   
6400feb6:	int3   
6400feb7:	int3   
6400feb8:	int3   
6400feb9:	int3   
6400feba:	int3   
6400febb:	int3   
6400febc:	int3   
6400febd:	int3   
6400febe:	int3   
6400febf:	int3   
6400fec0:	sub    esp,0x10
6400fec3:	mov    edx,DWORD PTR [ecx+0x4]
6400fec6:	mov    eax,DWORD PTR [ecx]
6400fec8:	cmp    eax,0x5
6400fecb:	mov    DWORD PTR [esp+0x4],edx
6400fecf:	mov    edx,DWORD PTR [ecx+0x8]
6400fed2:	mov    ecx,DWORD PTR [ecx+0xc]
6400fed5:	je     0x6400fefc
6400fed7:	push   0x64025408
6400fedc:	lea    ecx,[esp+0x4]
6400fee0:	call   0x6401239e
6400fee5:	push   0x6402a0a0
6400feea:	lea    eax,[esp+0x4]
6400feee:	push   eax
6400feef:	mov    DWORD PTR [esp+0x8],0x64025400
6400fef7:	call   0x640126ab
6400fefc:	push   edx
6400fefd:	push   ecx
6400fefe:	mov    ecx,DWORD PTR [esp+0x1c]
6400ff02:	call   0x64001860
6400ff07:	add    esp,0x10
6400ff0a:	ret    0x4
6400ff0d:	int3   
6400ff0e:	int3   
6400ff0f:	int3   
6400ff10:	push   0xffffffff
6400ff12:	push   0x6402215e
6400ff17:	mov    eax,fs:0x0
6400ff1d:	push   eax
6400ff1e:	sub    esp,0x9c
6400ff24:	push   ebx
6400ff25:	push   ebp
6400ff26:	push   edi
6400ff27:	mov    eax,ds:0x6402d09c
6400ff2c:	xor    eax,esp
6400ff2e:	push   eax
6400ff2f:	lea    eax,[esp+0xac]
6400ff36:	mov    fs:0x0,eax
6400ff3c:	xor    ebx,ebx
6400ff3e:	push   0x1c
6400ff40:	mov    DWORD PTR [esp+0x14],ebx
6400ff44:	call   0x64012641
6400ff49:	mov    edi,eax
6400ff4b:	add    esp,0x4
6400ff4e:	cmp    edi,ebx
6400ff50:	je     0x6400ff62
6400ff52:	push   0x2000
6400ff57:	push   edi
6400ff58:	call   0x6400ebc0
6400ff5d:	add    esp,0x8
6400ff60:	jmp    0x6400ff64
6400ff62:	xor    edi,edi
6400ff64:	mov    DWORD PTR [esp+0x20],edi
6400ff68:	mov    ecx,DWORD PTR [esp+0xc4]
6400ff6f:	mov    edx,DWORD PTR [esp+0xc0]
6400ff76:	lea    eax,[esp+0x10]
6400ff7a:	push   eax
6400ff7b:	mov    eax,DWORD PTR [esp+0xc0]
6400ff82:	push   edi
6400ff83:	push   ecx
6400ff84:	push   edx
6400ff85:	push   eax
6400ff86:	mov    DWORD PTR [esp+0xc8],ebx
6400ff8d:	call   0x6400f650
6400ff92:	add    esp,0x14
6400ff95:	sub    eax,ebx
6400ff97:	je     0x64010066
6400ff9d:	sub    eax,0x1
6400ffa0:	je     0x64010049
6400ffa6:	sub    eax,0x1
6400ffa9:	je     0x6400fff8
6400ffab:	push   0xb
6400ffad:	push   0x64025474
6400ffb2:	lea    ecx,[esp+0x2c]
6400ffb6:	mov    DWORD PTR [esp+0x44],0xf
6400ffbe:	mov    DWORD PTR [esp+0x40],ebx
6400ffc2:	mov    BYTE PTR [esp+0x30],bl
6400ffc6:	call   0x64001860
6400ffcb:	lea    ecx,[esp+0x24]
6400ffcf:	push   ecx
6400ffd0:	lea    ecx,[esp+0x60]
6400ffd4:	mov    BYTE PTR [esp+0xb8],0x2
6400ffdc:	call   0x64002020
6400ffe1:	push   0x6402a124
6400ffe6:	lea    edx,[esp+0x60]
6400ffea:	push   edx
6400ffeb:	mov    DWORD PTR [esp+0x64],0x64025458
6400fff3:	call   0x640126ab
6400fff8:	mov    eax,DWORD PTR [esp+0x10]
6400fffc:	mov    ecx,DWORD PTR [esp+0x14]
64010000:	mov    edx,DWORD PTR [esp+0x18]
64010004:	mov    DWORD PTR [esi],eax
64010006:	mov    eax,DWORD PTR [esp+0x1c]
6401000a:	mov    DWORD PTR [esi+0x4],ecx
6401000d:	mov    DWORD PTR [esi+0x8],edx
64010010:	mov    DWORD PTR [esi+0xc],eax
64010013:	mov    ebp,DWORD PTR [esi+0x10]
64010016:	cmp    edi,ebp
64010018:	je     0x6401002d
6401001a:	cmp    ebp,ebx
6401001c:	je     0x6401002d
6401001e:	push   ebp
6401001f:	call   0x6400eb60
64010024:	push   ebp
64010025:	call   0x64012262
6401002a:	add    esp,0x8
6401002d:	mov    DWORD PTR [esi+0x10],edi
64010030:	mov    ecx,DWORD PTR [esp+0xac]
64010037:	mov    DWORD PTR fs:0x0,ecx
6401003e:	pop    ecx
6401003f:	pop    edi
64010040:	pop    ebp
64010041:	pop    ebx
64010042:	add    esp,0xa8
64010048:	ret    
64010049:	mov    ecx,DWORD PTR [esp+0x10]
6401004d:	mov    edx,DWORD PTR [esp+0x14]
64010051:	mov    eax,DWORD PTR [esp+0x18]
64010055:	mov    DWORD PTR [esi],ecx
64010057:	mov    ecx,DWORD PTR [esp+0x1c]
6401005b:	mov    DWORD PTR [esi+0x4],edx
6401005e:	mov    DWORD PTR [esi+0x8],eax
64010061:	mov    DWORD PTR [esi+0xc],ecx
64010064:	jmp    0x64010013
64010066:	push   0x12
64010068:	push   0x64025460
6401006d:	lea    ecx,[esp+0x48]
64010071:	mov    DWORD PTR [esp+0x60],0xf
64010079:	mov    DWORD PTR [esp+0x5c],ebx
6401007d:	mov    BYTE PTR [esp+0x4c],bl
64010081:	call   0x64001860
64010086:	lea    edx,[esp+0x40]
6401008a:	push   edx
6401008b:	lea    ecx,[esp+0x88]
64010092:	mov    BYTE PTR [esp+0xb8],0x1
6401009a:	call   0x64002020
6401009f:	push   0x6402a124
640100a4:	lea    eax,[esp+0x88]
640100ab:	push   eax
640100ac:	mov    DWORD PTR [esp+0x8c],0x64025458
640100b7:	call   0x640126ab
640100bc:	int3   
640100bd:	int3   
640100be:	int3   
640100bf:	int3   
640100c0:	mov    eax,DWORD PTR [esp+0x4]
640100c4:	push   esi
640100c5:	push   eax
640100c6:	mov    esi,ecx
640100c8:	call   0x64002090
640100cd:	mov    DWORD PTR [esi],0x64025458
640100d3:	mov    eax,esi
640100d5:	pop    esi
640100d6:	ret    0x4
640100d9:	int3   
640100da:	int3   
640100db:	int3   
640100dc:	int3   
640100dd:	int3   
640100de:	int3   
640100df:	int3   
640100e0:	cmp    DWORD PTR [esp+0x4],0x6
640100e5:	push   esi
640100e6:	mov    esi,ecx
640100e8:	je     0x6401010f
640100ea:	push   0x64025408
640100ef:	lea    ecx,[esp+0xc]
640100f3:	call   0x6401239e
640100f8:	push   0x6402a0a0
640100fd:	lea    eax,[esp+0xc]
64010101:	push   eax
64010102:	mov    DWORD PTR [esp+0x10],0x64025400
6401010a:	call   0x640126ab
6401010f:	push   ebx
64010110:	mov    ebx,DWORD PTR [esp+0x14]
64010114:	test   ebx,ebx
64010116:	jbe    0x64010139
64010118:	mov    ecx,DWORD PTR [esi]
6401011a:	push   edi
6401011b:	mov    edi,DWORD PTR [esp+0x1c]
6401011f:	push   ecx
64010120:	mov    ecx,edi
64010122:	call   0x6400fec0
64010127:	cmp    ebx,0x1
6401012a:	jbe    0x64010138
6401012c:	mov    edx,DWORD PTR [esi+0x4]
6401012f:	push   edx
64010130:	lea    ecx,[edi+0x10]
64010133:	call   0x6400fec0
64010138:	pop    edi
64010139:	pop    ebx
6401013a:	pop    esi
6401013b:	ret    0x10
6401013e:	int3   
6401013f:	int3   
64010140:	mov    eax,DWORD PTR [esp+0x10]
64010144:	push   ebx
64010145:	push   esi
64010146:	mov    esi,ecx
64010148:	mov    ecx,DWORD PTR [eax]
6401014a:	mov    DWORD PTR [esp+0x18],ecx
6401014e:	mov    ecx,DWORD PTR [esi+0x4]
64010151:	test   ecx,ecx
64010153:	push   edi
64010154:	jne    0x6401015a
64010156:	xor    edi,edi
64010158:	jmp    0x64010162
6401015a:	mov    edi,DWORD PTR [esi+0xc]
6401015d:	sub    edi,ecx
6401015f:	sar    edi,0x2
64010162:	mov    ebx,DWORD PTR [esp+0x18]
64010166:	test   ebx,ebx
64010168:	je     0x640102ef
6401016e:	test   ecx,ecx
64010170:	jne    0x64010176
64010172:	xor    eax,eax
64010174:	jmp    0x6401017e
64010176:	mov    eax,DWORD PTR [esi+0x8]
64010179:	sub    eax,ecx
6401017b:	sar    eax,0x2
6401017e:	mov    edx,0x3fffffff
64010183:	sub    edx,eax
64010185:	cmp    edx,ebx
64010187:	jae    0x6401018e
64010189:	call   0x6400fe40
6401018e:	test   ecx,ecx
64010190:	jne    0x64010196
64010192:	xor    eax,eax
64010194:	jmp    0x6401019e
64010196:	mov    eax,DWORD PTR [esi+0x8]
64010199:	sub    eax,ecx
6401019b:	sar    eax,0x2
6401019e:	add    eax,ebx
640101a0:	cmp    edi,eax
640101a2:	push   ebp
640101a3:	jae    0x6401025d
640101a9:	mov    eax,edi
640101ab:	shr    eax,1
640101ad:	mov    edx,0x3fffffff
640101b2:	sub    edx,eax
640101b4:	cmp    edx,edi
640101b6:	jae    0x640101bc
640101b8:	xor    edi,edi
640101ba:	jmp    0x640101be
640101bc:	add    edi,eax
640101be:	test   ecx,ecx
640101c0:	jne    0x640101c6
640101c2:	xor    eax,eax
640101c4:	jmp    0x640101ce
640101c6:	mov    eax,DWORD PTR [esi+0x8]
640101c9:	sub    eax,ecx
640101cb:	sar    eax,0x2
640101ce:	add    eax,ebx
640101d0:	cmp    edi,eax
640101d2:	jae    0x640101e6
640101d4:	test   ecx,ecx
640101d6:	jne    0x640101dc
640101d8:	xor    edi,edi
640101da:	jmp    0x640101e4
640101dc:	mov    edi,DWORD PTR [esi+0x8]
640101df:	sub    edi,ecx
640101e1:	sar    edi,0x2
640101e4:	add    edi,ebx
640101e6:	push   0x0
640101e8:	push   edi
640101e9:	call   0x6400f950
640101ee:	mov    ecx,DWORD PTR [esi+0x4]
640101f1:	add    esp,0x8
640101f4:	mov    ebp,eax
640101f6:	mov    eax,DWORD PTR [esp+0x18]
640101fa:	push   ebp
640101fb:	push   eax
640101fc:	push   ecx
640101fd:	mov    ecx,esi
640101ff:	call   0x6400fd30
64010204:	lea    edx,[esp+0x20]
64010208:	push   edx
64010209:	push   ebx
6401020a:	push   eax
6401020b:	mov    ecx,esi
6401020d:	call   0x6400fd60
64010212:	mov    ecx,DWORD PTR [esp+0x18]
64010216:	push   eax
64010217:	mov    eax,DWORD PTR [esi+0x8]
6401021a:	push   eax
6401021b:	push   ecx
6401021c:	mov    ecx,esi
6401021e:	call   0x6400fd30
64010223:	mov    eax,DWORD PTR [esi+0x4]
64010226:	test   eax,eax
64010228:	jne    0x6401022e
6401022a:	xor    ecx,ecx
6401022c:	jmp    0x64010236
6401022e:	mov    ecx,DWORD PTR [esi+0x8]
64010231:	sub    ecx,eax
64010233:	sar    ecx,0x2
64010236:	add    ebx,ecx
64010238:	test   eax,eax
6401023a:	je     0x64010245
6401023c:	push   eax
6401023d:	call   0x64012262
64010242:	add    esp,0x4
64010245:	lea    edx,[ebp+edi*4+0x0]
64010249:	lea    eax,[ebp+ebx*4+0x0]
6401024d:	mov    DWORD PTR [esi+0x4],ebp
64010250:	pop    ebp
64010251:	pop    edi
64010252:	mov    DWORD PTR [esi+0xc],edx
64010255:	mov    DWORD PTR [esi+0x8],eax
64010258:	pop    esi
64010259:	pop    ebx
6401025a:	ret    0x10
6401025d:	mov    ebp,DWORD PTR [esi+0x8]
64010260:	mov    edi,DWORD PTR [esp+0x18]
64010264:	mov    ecx,ebp
64010266:	sub    ecx,edi
64010268:	sar    ecx,0x2
6401026b:	lea    eax,[ebx*4+0x0]
64010272:	cmp    ecx,ebx
64010274:	mov    DWORD PTR [esp+0x1c],eax
64010278:	mov    ecx,esi
6401027a:	jae    0x640102c2
6401027c:	add    eax,edi
6401027e:	push   eax
6401027f:	push   ebp
64010280:	push   edi
64010281:	call   0x6400fd30
64010286:	mov    eax,DWORD PTR [esi+0x8]
64010289:	mov    ecx,eax
6401028b:	sub    ecx,edi
6401028d:	sar    ecx,0x2
64010290:	lea    edx,[esp+0x20]
64010294:	push   edx
64010295:	sub    ebx,ecx
64010297:	push   ebx
64010298:	push   eax
64010299:	mov    ecx,esi
6401029b:	call   0x6400fd60
640102a0:	mov    eax,DWORD PTR [esp+0x1c]
640102a4:	add    DWORD PTR [esi+0x8],eax
640102a7:	mov    esi,DWORD PTR [esi+0x8]
640102aa:	lea    edx,[esp+0x20]
640102ae:	push   edx
640102af:	sub    esi,eax
640102b1:	push   esi
640102b2:	push   edi
640102b3:	call   0x6400fa50
640102b8:	add    esp,0xc
640102bb:	pop    ebp
640102bc:	pop    edi
640102bd:	pop    esi
640102be:	pop    ebx
640102bf:	ret    0x10
640102c2:	push   ebp
640102c3:	mov    ebx,ebp
640102c5:	sub    ebx,eax
640102c7:	push   ebp
640102c8:	push   ebx
640102c9:	call   0x6400fd30
640102ce:	push   ebp
640102cf:	push   ebx
640102d0:	push   edi
640102d1:	mov    DWORD PTR [esi+0x8],eax
640102d4:	call   0x6400fa70
640102d9:	mov    ecx,DWORD PTR [esp+0x28]
640102dd:	lea    eax,[esp+0x2c]
640102e1:	push   eax
640102e2:	add    ecx,edi
640102e4:	push   ecx
640102e5:	push   edi
640102e6:	call   0x6400fa50
640102eb:	add    esp,0x18
640102ee:	pop    ebp
640102ef:	pop    edi
640102f0:	pop    esi
640102f1:	pop    ebx
640102f2:	ret    0x10
640102f5:	int3   
640102f6:	int3   
640102f7:	int3   
640102f8:	int3   
640102f9:	int3   
640102fa:	int3   
640102fb:	int3   
640102fc:	int3   
640102fd:	int3   
640102fe:	int3   
640102ff:	int3   
64010300:	push   ecx
64010301:	push   ebx
64010302:	push   ebp
64010303:	mov    ebp,DWORD PTR [esp+0x14]
64010307:	push   esi
64010308:	mov    esi,ecx
6401030a:	push   edi
6401030b:	mov    edi,DWORD PTR [esi+0x4]
6401030e:	test   edi,edi
64010310:	je     0x6401031e
64010312:	mov    eax,DWORD PTR [esi+0x8]
64010315:	mov    ecx,eax
64010317:	sub    ecx,edi
64010319:	sar    ecx,0x2
6401031c:	jne    0x64010322
6401031e:	xor    ebx,ebx
64010320:	jmp    0x64010341
64010322:	cmp    edi,eax
64010324:	jbe    0x6401032b
64010326:	call   0x64012618
6401032b:	test   ebp,ebp
6401032d:	je     0x64010333
6401032f:	cmp    ebp,esi
64010331:	je     0x64010338
64010333:	call   0x64012618
64010338:	mov    ebx,DWORD PTR [esp+0x20]
6401033c:	sub    ebx,edi
6401033e:	sar    ebx,0x2
64010341:	mov    edx,DWORD PTR [esp+0x24]
64010345:	mov    eax,DWORD PTR [esp+0x20]
64010349:	push   edx
6401034a:	push   0x1
6401034c:	push   eax
6401034d:	push   ebp
6401034e:	mov    ecx,esi
64010350:	call   0x64010140
64010355:	mov    edi,DWORD PTR [esi+0x4]
64010358:	cmp    edi,DWORD PTR [esi+0x8]
6401035b:	jbe    0x64010362
6401035d:	call   0x64012618
64010362:	mov    DWORD PTR [esp+0x20],edi
64010366:	lea    edi,[edi+ebx*4]
64010369:	cmp    edi,DWORD PTR [esi+0x8]
6401036c:	ja     0x64010373
6401036e:	cmp    edi,DWORD PTR [esi+0x4]
64010371:	jae    0x64010378
64010373:	call   0x64012618
64010378:	mov    eax,DWORD PTR [esp+0x18]
6401037c:	mov    DWORD PTR [eax+0x4],edi
6401037f:	pop    edi
64010380:	mov    DWORD PTR [eax],esi
64010382:	pop    esi
64010383:	pop    ebp
64010384:	pop    ebx
64010385:	pop    ecx
64010386:	ret    0x10
64010389:	int3   
6401038a:	int3   
6401038b:	int3   
6401038c:	int3   
6401038d:	int3   
6401038e:	int3   
6401038f:	int3   
64010390:	sub    esp,0x8
64010393:	push   esi
64010394:	mov    esi,ecx
64010396:	mov    edx,DWORD PTR [esi+0x4]
64010399:	test   edx,edx
6401039b:	jne    0x640103a1
6401039d:	xor    ecx,ecx
6401039f:	jmp    0x640103a9
640103a1:	mov    ecx,DWORD PTR [esi+0x8]
640103a4:	sub    ecx,edx
640103a6:	sar    ecx,0x2
640103a9:	test   edx,edx
640103ab:	je     0x640103d1
640103ad:	mov    eax,DWORD PTR [esi+0xc]
640103b0:	sub    eax,edx
640103b2:	sar    eax,0x2
640103b5:	cmp    ecx,eax
640103b7:	jae    0x640103d1
640103b9:	mov    eax,DWORD PTR [esi+0x8]
640103bc:	mov    ecx,DWORD PTR [esp+0x10]
640103c0:	mov    edx,DWORD PTR [ecx]
640103c2:	mov    DWORD PTR [eax],edx
640103c4:	add    eax,0x4
640103c7:	mov    DWORD PTR [esi+0x8],eax
640103ca:	pop    esi
640103cb:	add    esp,0x8
640103ce:	ret    0x4
640103d1:	push   edi
640103d2:	mov    edi,DWORD PTR [esi+0x8]
640103d5:	cmp    edx,edi
640103d7:	jbe    0x640103de
640103d9:	call   0x64012618
640103de:	mov    eax,DWORD PTR [esp+0x14]
640103e2:	push   eax
640103e3:	push   edi
640103e4:	push   esi
640103e5:	lea    ecx,[esp+0x14]
640103e9:	push   ecx
640103ea:	mov    ecx,esi
640103ec:	call   0x64010300
640103f1:	pop    edi
640103f2:	pop    esi
640103f3:	add    esp,0x8
640103f6:	ret    0x4
640103f9:	int3   
640103fa:	int3   
640103fb:	int3   
640103fc:	int3   
640103fd:	int3   
640103fe:	int3   
640103ff:	int3   
64010400:	sub    esp,0x20
64010403:	mov    eax,DWORD PTR [ecx]
64010405:	mov    edx,DWORD PTR [ecx+0x4]
64010408:	mov    DWORD PTR [esp],eax
6401040b:	mov    eax,DWORD PTR [ecx+0x8]
6401040e:	mov    ecx,DWORD PTR [ecx+0xc]
64010411:	mov    DWORD PTR [esp+0x4],edx
64010415:	lea    edx,[esp+0x10]
64010419:	mov    DWORD PTR [esp+0xc],ecx
6401041d:	push   edx
6401041e:	lea    ecx,[esp+0x4]
64010422:	mov    DWORD PTR [esp+0xc],eax
64010426:	call   0x6400f7e0
6401042b:	mov    ecx,DWORD PTR [esp+0x24]
6401042f:	lea    edx,[ecx+0x1c]
64010432:	mov    DWORD PTR [esp],edx
64010435:	mov    edx,DWORD PTR [eax]
64010437:	mov    DWORD PTR [esp+0x4],ecx
6401043b:	sub    esp,0x10
6401043e:	mov    ecx,esp
64010440:	mov    DWORD PTR [ecx],edx
64010442:	mov    edx,DWORD PTR [eax+0x4]
64010445:	mov    DWORD PTR [ecx+0x4],edx
64010448:	mov    edx,DWORD PTR [eax+0x8]
6401044b:	mov    eax,DWORD PTR [eax+0xc]
6401044e:	mov    DWORD PTR [ecx+0x8],edx
64010451:	mov    DWORD PTR [ecx+0xc],eax
64010454:	lea    ecx,[esp+0x10]
64010458:	call   0x640100e0
6401045d:	add    esp,0x20
64010460:	ret    0x4
64010463:	int3   
64010464:	int3   
64010465:	int3   
64010466:	int3   
64010467:	int3   
64010468:	int3   
64010469:	int3   
6401046a:	int3   
6401046b:	int3   
6401046c:	int3   
6401046d:	int3   
6401046e:	int3   
6401046f:	int3   
64010470:	push   ebp
64010471:	lea    ebp,[esp-0x74]
64010475:	sub    esp,0x74
64010478:	push   0xffffffff
6401047a:	push   0x640221c8
6401047f:	mov    eax,fs:0x0
64010485:	push   eax
64010486:	sub    esp,0x70
64010489:	mov    eax,ds:0x6402d09c
6401048e:	xor    eax,ebp
64010490:	mov    DWORD PTR [ebp+0x70],eax
64010493:	push   ebx
64010494:	push   esi
64010495:	push   edi
64010496:	push   eax
64010497:	lea    eax,[ebp-0xc]
6401049a:	mov    fs:0x0,eax
640104a0:	mov    DWORD PTR [ebp-0x10],esp
640104a3:	mov    eax,DWORD PTR [ebp+0x7c]
640104a6:	mov    ecx,0xf
640104ab:	xor    edi,edi
640104ad:	mov    DWORD PTR [ebp+0x50],ecx
640104b0:	mov    DWORD PTR [ebp+0x4c],edi
640104b3:	mov    BYTE PTR [ebp+0x3c],0x0
640104b7:	mov    DWORD PTR [ebp+0x6c],ecx
640104ba:	mov    DWORD PTR [ebp+0x68],edi
640104bd:	mov    BYTE PTR [ebp+0x58],0x0
640104c1:	mov    DWORD PTR [ebp-0x4],edi
640104c4:	mov    DWORD PTR [ebp-0x38],edi
640104c7:	mov    DWORD PTR [ebp-0x28],edi
640104ca:	mov    ecx,DWORD PTR [eax+0x14]
640104cd:	mov    ebx,0x10
640104d2:	cmp    DWORD PTR [eax+0x18],ebx
640104d5:	mov    BYTE PTR [ebp-0x4],0x2
640104d9:	jb     0x640104e0
640104db:	mov    eax,DWORD PTR [eax+0x4]
640104de:	jmp    0x640104e3
640104e0:	add    eax,0x4
640104e3:	push   edi
640104e4:	push   ecx
640104e5:	push   eax
640104e6:	lea    esi,[ebp-0x38]
640104e9:	call   0x6400ff10
640104ee:	add    esp,0xc
640104f1:	lea    eax,[ebp+0x38]
640104f4:	push   eax
640104f5:	mov    ecx,esi
640104f7:	call   0x64010400
640104fc:	mov    DWORD PTR [ebp-0x4],0x1
64010503:	call   DWORD PTR ds:0x6402d06c
64010509:	cmp    DWORD PTR [ebp+0x6c],ebx
6401050c:	mov    DWORD PTR [ebp+0x0],eax
6401050f:	mov    BYTE PTR [ebp-0x4],0x4
64010513:	jb     0x64010520
64010515:	mov    ebx,DWORD PTR [ebp+0x58]
64010518:	cmp    ebx,edi
6401051a:	jne    0x64010523
6401051c:	xor    eax,eax
6401051e:	jmp    0x6401056a
64010520:	lea    ebx,[ebp+0x58]
64010523:	push   ebx
64010524:	call   DWORD PTR ds:0x64025058
6401052a:	mov    edi,eax
6401052c:	add    edi,0x1
6401052f:	cmp    edi,0x3fffffff
64010535:	jg     0x64010566
64010537:	lea    eax,[edi+edi*1]
6401053a:	call   0x64013240
6401053f:	mov    esi,esp
64010541:	test   esi,esi
64010543:	mov    DWORD PTR [ebp-0x10],esp
64010546:	je     0x64010566
64010548:	mov    ecx,DWORD PTR [ebp+0x0]
6401054b:	push   edi
6401054c:	push   esi
6401054d:	push   0xffffffff
6401054f:	push   ebx
64010550:	push   0x0
64010552:	push   ecx
64010553:	mov    WORD PTR [esi],0x0
64010558:	call   DWORD PTR ds:0x64025024
6401055e:	neg    eax
64010560:	sbb    eax,eax
64010562:	and    eax,esi
64010564:	jmp    0x64010568
64010566:	xor    eax,eax
64010568:	xor    edi,edi
6401056a:	push   eax
6401056b:	lea    ecx,[ebp+0x10]
6401056e:	call   0x64002500
64010573:	mov    edx,DWORD PTR ds:0x6402e540
64010579:	mov    eax,DWORD PTR [edx+0xc]
6401057c:	mov    ecx,0x6402e540
64010581:	mov    BYTE PTR [ebp-0x4],0x5
64010585:	call   eax
64010587:	add    eax,0x10
6401058a:	mov    DWORD PTR [ebp+0x14],eax
6401058d:	lea    ecx,[ebp+0x14]
64010590:	push   ecx
64010591:	lea    edx,[ebp+0x10]
64010594:	push   edx
64010595:	lea    eax,[ebp+0x18]
64010598:	push   eax
64010599:	mov    BYTE PTR [ebp-0x4],0x6
6401059d:	call   0x64002110
640105a2:	add    esp,0xc
640105a5:	lea    ecx,[ebp+0x18]
640105a8:	push   0x640276e8
640105ad:	push   ecx
640105ae:	mov    BYTE PTR [ebp-0x4],0x7
640105b2:	call   0x6400f9f0
640105b7:	add    esp,0x8
640105ba:	test   al,al
640105bc:	je     0x64010794
640105c2:	mov    esi,DWORD PTR [ebp+0x14]
640105c5:	call   0x6400cda0
640105ca:	push   esi
640105cb:	call   eax
640105cd:	cmp    DWORD PTR [ebp+0x50],0x10
640105d1:	mov    edx,DWORD PTR [ebp+0x4c]
640105d4:	mov    eax,DWORD PTR [ebp+0x3c]
640105d7:	push   edx
640105d8:	jae    0x640105dd
640105da:	lea    eax,[ebp+0x3c]
640105dd:	push   eax
640105de:	mov    eax,DWORD PTR [ebp+0x18]
640105e1:	push   ecx
640105e2:	add    eax,0xfffffff0
640105e5:	mov    DWORD PTR [ebp+0xc],esp
640105e8:	mov    esi,esp
640105ea:	push   eax
640105eb:	call   0x64002810
640105f0:	add    eax,0x10
640105f3:	add    esp,0x4
640105f6:	mov    DWORD PTR [esi],eax
640105f8:	call   0x64002350
640105fd:	add    esp,0xc
64010600:	lea    eax,[ebp+0xc]
64010603:	push   edi
64010604:	push   eax
64010605:	call   0x64003400
6401060a:	add    esp,0x8
6401060d:	push   0x64025480
64010612:	push   eax
64010613:	lea    ecx,[ebp+0x8]
64010616:	push   ecx
64010617:	mov    BYTE PTR [ebp-0x4],0x8
6401061b:	call   0x6400fc50
64010620:	add    esp,0xc
64010623:	mov    eax,DWORD PTR [ebp+0xc]
64010626:	add    eax,0xfffffff0
64010629:	mov    BYTE PTR [ebp-0x4],0xa
6401062d:	lea    edx,[eax+0xc]
64010630:	or     ecx,0xffffffff
64010633:	lock xadd DWORD PTR [edx],ecx
64010637:	dec    ecx
64010638:	test   ecx,ecx
6401063a:	jg     0x64010646
6401063c:	mov    ecx,DWORD PTR [eax]
6401063e:	mov    edx,DWORD PTR [ecx]
64010640:	push   eax
64010641:	mov    eax,DWORD PTR [edx+0x4]
64010644:	call   eax
64010646:	mov    eax,DWORD PTR [ebp+0x18]
64010649:	cmp    eax,edi
6401064b:	mov    ebx,eax
6401064d:	jne    0x64010653
6401064f:	xor    eax,eax
64010651:	jmp    0x64010683
64010653:	push   eax
64010654:	call   DWORD PTR ds:0x64025054
6401065a:	add    eax,0x1
6401065d:	cmp    eax,0x3fffffff
64010662:	jle    0x64010668
64010664:	xor    eax,eax
64010666:	jmp    0x64010683
64010668:	lea    esi,[eax+eax*1]
6401066b:	mov    eax,esi
6401066d:	call   0x64013240
64010672:	mov    ecx,DWORD PTR [ebp+0x0]
64010675:	mov    DWORD PTR [ebp-0x10],esp
64010678:	mov    eax,esp
6401067a:	push   ecx
6401067b:	push   esi
6401067c:	push   ebx
6401067d:	push   eax
6401067e:	call   0x64002af0
64010683:	push   eax
64010684:	lea    ecx,[ebp+0x4]
64010687:	call   0x64005470
6401068c:	lea    edx,[ebp+0x8]
6401068f:	push   edx
64010690:	lea    eax,[ebp+0x4]
64010693:	push   eax
64010694:	mov    BYTE PTR [ebp-0x4],0xb
64010698:	call   0x640024a0
6401069d:	mov    eax,DWORD PTR [ebp+0x4]
640106a0:	add    eax,0xfffffff0
640106a3:	add    esp,0x8
640106a6:	mov    BYTE PTR [ebp-0x4],0xa
640106aa:	lea    ecx,[eax+0xc]
640106ad:	or     edx,0xffffffff
640106b0:	lock xadd DWORD PTR [ecx],edx
640106b4:	dec    edx
640106b5:	test   edx,edx
640106b7:	jg     0x640106c3
640106b9:	mov    ecx,DWORD PTR [eax]
640106bb:	mov    edx,DWORD PTR [ecx]
640106bd:	push   eax
640106be:	mov    eax,DWORD PTR [edx+0x4]
640106c1:	call   eax
640106c3:	push   0x40
640106c5:	xor    eax,eax
640106c7:	lea    ecx,[ebp-0x78]
640106ca:	push   edi
640106cb:	push   ecx
640106cc:	mov    DWORD PTR [ebp-0x20],edi
640106cf:	mov    DWORD PTR [ebp-0x1c],eax
640106d2:	mov    DWORD PTR [ebp-0x18],eax
640106d5:	mov    DWORD PTR [ebp-0x14],eax
640106d8:	call   0x640131c0
640106dd:	lea    edx,[ebp+0x1c]
640106e0:	push   edx
640106e1:	mov    DWORD PTR [ebp-0x7c],0x44
640106e8:	call   0x640014a0
640106ed:	add    esp,0x10
640106f0:	cmp    DWORD PTR [ebp+0x34],0x10
640106f4:	mov    ebx,DWORD PTR [ebp+0x20]
640106f7:	mov    BYTE PTR [ebp-0x4],0xc
640106fb:	jae    0x64010700
640106fd:	lea    ebx,[ebp+0x20]
64010700:	mov    esi,DWORD PTR [ebp+0x18]
64010703:	call   0x6400cbe0
64010708:	lea    ecx,[ebp-0x20]
6401070b:	push   ecx
6401070c:	lea    edx,[ebp-0x7c]
6401070f:	push   edx
64010710:	push   edi
64010711:	push   ebx
64010712:	push   0x400
64010717:	push   0x1
64010719:	push   edi
6401071a:	push   edi
6401071b:	push   edi
6401071c:	push   esi
6401071d:	call   eax
6401071f:	cmp    eax,edi
64010721:	je     0x64010735
64010723:	mov    eax,DWORD PTR [ebp-0x1c]
64010726:	mov    esi,DWORD PTR ds:0x64025040
6401072c:	push   eax
6401072d:	call   esi
6401072f:	mov    ecx,DWORD PTR [ebp-0x20]
64010732:	push   ecx
64010733:	call   esi
64010735:	mov    esi,DWORD PTR [ebp+0x18]
64010738:	call   0x6400ccc0
6401073d:	push   0x4
6401073f:	push   edi
64010740:	push   esi
64010741:	call   eax
64010743:	mov    esi,DWORD PTR [ebp+0x14]
64010746:	call   0x6400ccc0
6401074b:	push   0x4
6401074d:	push   edi
6401074e:	push   esi
6401074f:	call   eax
64010751:	cmp    DWORD PTR [ebp+0x34],0x10
64010755:	jb     0x64010763
64010757:	mov    edx,DWORD PTR [ebp+0x20]
6401075a:	push   edx
6401075b:	call   0x64012262
64010760:	add    esp,0x4
64010763:	mov    eax,DWORD PTR [ebp+0x8]
64010766:	add    eax,0xfffffff0
64010769:	mov    DWORD PTR [ebp+0x34],0xf
64010770:	mov    DWORD PTR [ebp+0x30],edi
64010773:	mov    BYTE PTR [ebp+0x20],0x0
64010777:	mov    BYTE PTR [ebp-0x4],0x7
6401077b:	lea    ecx,[eax+0xc]
6401077e:	or     edx,0xffffffff
64010781:	lock xadd DWORD PTR [ecx],edx
64010785:	dec    edx
64010786:	test   edx,edx
64010788:	jg     0x64010794
6401078a:	mov    ecx,DWORD PTR [eax]
6401078c:	mov    edx,DWORD PTR [ecx]
6401078e:	push   eax
6401078f:	mov    eax,DWORD PTR [edx+0x4]
64010792:	call   eax
64010794:	mov    eax,DWORD PTR [ebp+0x18]
64010797:	add    eax,0xfffffff0
6401079a:	mov    BYTE PTR [ebp-0x4],0x6
6401079e:	lea    ecx,[eax+0xc]
640107a1:	or     edx,0xffffffff
640107a4:	lock xadd DWORD PTR [ecx],edx
640107a8:	dec    edx
640107a9:	test   edx,edx
640107ab:	jg     0x640107b7
640107ad:	mov    ecx,DWORD PTR [eax]
640107af:	mov    edx,DWORD PTR [ecx]
640107b1:	push   eax
640107b2:	mov    eax,DWORD PTR [edx+0x4]
640107b5:	call   eax
640107b7:	mov    eax,DWORD PTR [ebp+0x14]
640107ba:	add    eax,0xfffffff0
640107bd:	mov    BYTE PTR [ebp-0x4],0x5
640107c1:	lea    ecx,[eax+0xc]
640107c4:	or     edx,0xffffffff
640107c7:	lock xadd DWORD PTR [ecx],edx
640107cb:	dec    edx
640107cc:	test   edx,edx
640107ce:	jg     0x640107da
640107d0:	mov    ecx,DWORD PTR [eax]
640107d2:	mov    edx,DWORD PTR [ecx]
640107d4:	push   eax
640107d5:	mov    eax,DWORD PTR [edx+0x4]
640107d8:	call   eax
640107da:	mov    eax,DWORD PTR [ebp+0x10]
640107dd:	add    eax,0xfffffff0
640107e0:	mov    BYTE PTR [ebp-0x4],0x4
640107e4:	lea    ecx,[eax+0xc]
640107e7:	or     edx,0xffffffff
640107ea:	lock xadd DWORD PTR [ecx],edx
640107ee:	dec    edx
640107ef:	test   edx,edx
640107f1:	jg     0x64010807
640107f3:	mov    ecx,DWORD PTR [eax]
640107f5:	mov    edx,DWORD PTR [ecx]
640107f7:	push   eax
640107f8:	mov    eax,DWORD PTR [edx+0x4]
640107fb:	call   eax
640107fd:	jmp    0x64010807
640107ff:	mov    eax,0x64010805
64010804:	ret    
64010805:	xor    edi,edi
64010807:	mov    esi,DWORD PTR [ebp-0x28]
6401080a:	cmp    esi,edi
6401080c:	je     0x6401081d
6401080e:	push   esi
6401080f:	call   0x6400eb60
64010814:	push   esi
64010815:	call   0x64012262
6401081a:	add    esp,0x8
6401081d:	mov    esi,0x10
64010822:	cmp    DWORD PTR [ebp+0x6c],esi
64010825:	jb     0x64010833
64010827:	mov    ecx,DWORD PTR [ebp+0x58]
6401082a:	push   ecx
6401082b:	call   0x64012262
64010830:	add    esp,0x4
64010833:	cmp    DWORD PTR [ebp+0x50],esi
64010836:	mov    DWORD PTR [ebp+0x6c],0xf
6401083d:	mov    DWORD PTR [ebp+0x68],edi
64010840:	mov    BYTE PTR [ebp+0x58],0x0
64010844:	jb     0x6401086a
64010846:	mov    edx,DWORD PTR [ebp+0x3c]
64010849:	push   edx
6401084a:	call   0x64012262
6401084f:	add    esp,0x4
64010852:	jmp    0x6401086a
64010854:	mov    eax,0x6401085a
64010859:	ret    
6401085a:	lea    ecx,[ebp-0x38]
6401085d:	call   0x6400f9d0
64010862:	lea    ecx,[ebp+0x38]
64010865:	call   0x6400fb30
6401086a:	lea    esp,[ebp-0x8c]
64010870:	mov    ecx,DWORD PTR [ebp-0xc]
64010873:	mov    DWORD PTR fs:0x0,ecx
6401087a:	pop    ecx
6401087b:	pop    edi
6401087c:	pop    esi
6401087d:	pop    ebx
6401087e:	mov    ecx,DWORD PTR [ebp+0x70]
64010881:	xor    ecx,ebp
64010883:	call   0x64012abc
64010888:	add    ebp,0x74
6401088b:	mov    esp,ebp
6401088d:	pop    ebp
6401088e:	ret    
6401088f:	int3   
64010890:	push   ecx
64010891:	push   esi
64010892:	mov    esi,ecx
64010894:	mov    eax,DWORD PTR [esi+0x4]
64010897:	test   eax,eax
64010899:	je     0x640108b7
6401089b:	mov    ecx,DWORD PTR [esp+0x4]
6401089f:	mov    edx,DWORD PTR [esi+0x8]
640108a2:	push   ecx
640108a3:	push   esi
640108a4:	push   edx
640108a5:	push   eax
640108a6:	call   0x6400ade0
640108ab:	mov    eax,DWORD PTR [esi+0x4]
640108ae:	push   eax
640108af:	call   0x64012262
640108b4:	add    esp,0x14
640108b7:	mov    DWORD PTR [esi+0x4],0x0
640108be:	mov    DWORD PTR [esi+0x8],0x0
640108c5:	mov    DWORD PTR [esi+0xc],0x0
640108cc:	pop    esi
640108cd:	pop    ecx
640108ce:	ret    
640108cf:	int3   
640108d0:	push   0xffffffff
640108d2:	push   0x640221fe
640108d7:	mov    eax,fs:0x0
640108dd:	push   eax
640108de:	push   ecx
640108df:	push   ebx
640108e0:	push   esi
640108e1:	push   edi
640108e2:	mov    eax,ds:0x6402d09c
640108e7:	xor    eax,esp
640108e9:	push   eax
640108ea:	lea    eax,[esp+0x14]
640108ee:	mov    fs:0x0,eax
640108f4:	mov    eax,0x1
640108f9:	test   BYTE PTR ds:0x6402e4c8,al
640108ff:	jne    0x6401093a
64010901:	or     DWORD PTR ds:0x6402e4c8,eax
64010907:	push   0x64024040
6401090c:	mov    DWORD PTR ds:0x6402e4bc,0x0
64010916:	mov    DWORD PTR ds:0x6402e4c0,0x0
64010920:	mov    DWORD PTR ds:0x6402e4c4,0x0
6401092a:	call   0x64012bef
6401092f:	add    esp,0x4
64010932:	mov    DWORD PTR [esp+0x1c],0xffffffff
6401093a:	mov    esi,DWORD PTR ds:0x6402e4bc
64010940:	test   esi,esi
64010942:	je     0x64010957
64010944:	mov    edi,DWORD PTR ds:0x6402e4c0
6401094a:	mov    eax,edi
6401094c:	sub    eax,esi
6401094e:	sar    eax,0x2
64010951:	jne    0x64010a6d
64010957:	push   0x640255ac
6401095c:	push   0xc
6401095e:	push   0x6402559c
64010963:	call   0x64005710
64010968:	mov    esi,DWORD PTR ds:0x640251c8
6401096e:	add    esp,0xc
64010971:	push   eax
64010972:	call   esi
64010974:	lea    ecx,[esp+0x10]
64010978:	push   ecx
64010979:	mov    ecx,0x6402e4b8
6401097e:	mov    DWORD PTR [esp+0x14],eax
64010982:	call   0x64010390
64010987:	push   0x64025568
6401098c:	push   0xc
6401098e:	push   0x64025558
64010993:	call   0x64005710
64010998:	add    esp,0xc
6401099b:	push   eax
6401099c:	call   esi
6401099e:	lea    edx,[esp+0x10]
640109a2:	push   edx
640109a3:	mov    ecx,0x6402e4b8
640109a8:	mov    DWORD PTR [esp+0x14],eax
640109ac:	call   0x64010390
640109b1:	push   0x6402551c
640109b6:	push   0xc
640109b8:	push   0x64025558
640109bd:	call   0x64005710
640109c2:	add    esp,0xc
640109c5:	push   eax
640109c6:	call   esi
640109c8:	mov    DWORD PTR [esp+0x10],eax
640109cc:	lea    eax,[esp+0x10]
640109d0:	push   eax
640109d1:	mov    ecx,0x6402e4b8
640109d6:	call   0x64010390
640109db:	push   0x640254e8
640109e0:	push   0xc
640109e2:	push   0x640254d8
640109e7:	call   0x64005710
640109ec:	add    esp,0xc
640109ef:	push   eax
640109f0:	call   esi
640109f2:	lea    ecx,[esp+0x10]
640109f6:	push   ecx
640109f7:	mov    ecx,0x6402e4b8
640109fc:	mov    DWORD PTR [esp+0x14],eax
64010a00:	call   0x64010390
64010a05:	push   0x64025498
64010a0a:	push   0xc
64010a0c:	push   0x640254d8
64010a11:	call   0x64005710
64010a16:	add    esp,0xc
64010a19:	push   eax
64010a1a:	call   esi
64010a1c:	lea    edx,[esp+0x10]
64010a20:	push   edx
64010a21:	mov    ecx,0x6402e4b8
64010a26:	mov    DWORD PTR [esp+0x14],eax
64010a2a:	call   0x64010390
64010a2f:	call   DWORD PTR ds:0x6402505c
64010a35:	push   eax
64010a36:	call   0x6401326c
64010a3b:	mov    eax,ds:0x6402e4bc
64010a40:	add    esp,0x4
64010a43:	test   eax,eax
64010a45:	jne    0x64010a4b
64010a47:	xor    esi,esi
64010a49:	jmp    0x64010a56
64010a4b:	mov    esi,DWORD PTR ds:0x6402e4c0
64010a51:	sub    esi,eax
64010a53:	sar    esi,0x2
64010a56:	call   0x64013279
64010a5b:	mov    edi,DWORD PTR ds:0x6402e4c0
64010a61:	xor    edx,edx
64010a63:	div    esi
64010a65:	mov    esi,DWORD PTR ds:0x6402e4bc
64010a6b:	jmp    0x64010a73
64010a6d:	mov    edx,DWORD PTR ds:0x6402e4b4
64010a73:	test   esi,esi
64010a75:	jne    0x64010a7b
64010a77:	xor    ecx,ecx
64010a79:	jmp    0x64010a82
64010a7b:	mov    ecx,edi
64010a7d:	sub    ecx,esi
64010a7f:	sar    ecx,0x2
64010a82:	lea    eax,[edx+0x1]
64010a85:	xor    edx,edx
64010a87:	div    ecx
64010a89:	test   esi,esi
64010a8b:	mov    DWORD PTR ds:0x6402e4b4,edx
64010a91:	mov    ebx,edx
64010a93:	je     0x64010a9e
64010a95:	sub    edi,esi
64010a97:	sar    edi,0x2
64010a9a:	cmp    edx,edi
64010a9c:	jb     0x64010abe
64010a9e:	call   0x64012618
64010aa3:	mov    eax,ds:0x6402e4bc
64010aa8:	mov    eax,DWORD PTR [eax+ebx*4]
64010aab:	mov    ecx,DWORD PTR [esp+0x14]
64010aaf:	mov    DWORD PTR fs:0x0,ecx
64010ab6:	pop    ecx
64010ab7:	pop    edi
64010ab8:	pop    esi
64010ab9:	pop    ebx
64010aba:	add    esp,0x10
64010abd:	ret    
64010abe:	mov    eax,DWORD PTR [esi+ebx*4]
64010ac1:	mov    ecx,DWORD PTR [esp+0x14]
64010ac5:	mov    DWORD PTR fs:0x0,ecx
64010acc:	pop    ecx
64010acd:	pop    edi
64010ace:	pop    esi
64010acf:	pop    ebx
64010ad0:	add    esp,0x10
64010ad3:	ret    
64010ad4:	int3   
64010ad5:	int3   
64010ad6:	int3   
64010ad7:	int3   
64010ad8:	int3   
64010ad9:	int3   
64010ada:	int3   
64010adb:	int3   
64010adc:	int3   
64010add:	int3   
64010ade:	int3   
64010adf:	int3   
64010ae0:	push   ebp
64010ae1:	mov    ebp,esp
64010ae3:	push   0xffffffff
64010ae5:	push   0x64022228
64010aea:	mov    eax,fs:0x0
64010af0:	push   eax
64010af1:	sub    esp,0x8
64010af4:	push   ebx
64010af5:	push   esi
64010af6:	push   edi
64010af7:	mov    eax,ds:0x6402d09c
64010afc:	xor    eax,ebp
64010afe:	push   eax
64010aff:	lea    eax,[ebp-0xc]
64010b02:	mov    fs:0x0,eax
64010b08:	mov    DWORD PTR [ebp-0x10],esp
64010b0b:	xor    ebx,ebx
64010b0d:	mov    DWORD PTR [ebp-0x4],ebx
64010b10:	call   0x640108d0
64010b15:	lea    ecx,[ebp-0x14]
64010b18:	mov    edi,eax
64010b1a:	call   0x64008f30
64010b1f:	mov    eax,DWORD PTR [ebp+0x8]
64010b22:	cmp    DWORD PTR [eax+0x18],0x10
64010b26:	mov    ecx,DWORD PTR [eax+0x14]
64010b29:	mov    BYTE PTR [ebp-0x4],0x1
64010b2d:	jb     0x64010b34
64010b2f:	mov    eax,DWORD PTR [eax+0x4]
64010b32:	jmp    0x64010b37
64010b34:	add    eax,0x4
64010b37:	mov    esi,DWORD PTR [ebp+0xc]
64010b3a:	push   0xffffffff
64010b3c:	push   esi
64010b3d:	add    ecx,0x1
64010b40:	push   ecx
64010b41:	push   eax
64010b42:	push   edi
64010b43:	lea    ecx,[ebp-0x14]
64010b46:	call   0x64008f50
64010b4b:	cmp    al,bl
64010b4d:	je     0x64010b6e
64010b4f:	lea    ecx,[ebp-0x14]
64010b52:	mov    BYTE PTR [ebp-0x4],bl
64010b55:	call   0x64008f40
64010b5a:	mov    al,0x1
64010b5c:	mov    ecx,DWORD PTR [ebp-0xc]
64010b5f:	mov    DWORD PTR fs:0x0,ecx
64010b66:	pop    ecx
64010b67:	pop    edi
64010b68:	pop    esi
64010b69:	pop    ebx
64010b6a:	mov    esp,ebp
64010b6c:	pop    ebp
64010b6d:	ret    
64010b6e:	push   ebx
64010b6f:	push   0x640276ea
64010b74:	mov    ecx,esi
64010b76:	call   0x64001860
64010b7b:	lea    ecx,[ebp-0x14]
64010b7e:	mov    BYTE PTR [ebp-0x4],bl
64010b81:	call   0x64008f40
64010b86:	xor    al,al
64010b88:	mov    ecx,DWORD PTR [ebp-0xc]
64010b8b:	mov    DWORD PTR fs:0x0,ecx
64010b92:	pop    ecx
64010b93:	pop    edi
64010b94:	pop    esi
64010b95:	pop    ebx
64010b96:	mov    esp,ebp
64010b98:	pop    ebp
64010b99:	ret    
64010b9a:	mov    eax,0x64010b86
64010b9f:	ret    
64010ba0:	push   ecx
64010ba1:	push   esi
64010ba2:	push   0x640255e8
64010ba7:	push   0x17
64010ba9:	push   0x640255d0
64010bae:	mov    DWORD PTR [esp+0x10],0x0
64010bb6:	call   0x64005710
64010bbb:	mov    esi,DWORD PTR [esp+0x18]
64010bbf:	add    esp,0xc
64010bc2:	push   eax
64010bc3:	mov    ecx,esi
64010bc5:	call   0x64005470
64010bca:	mov    eax,esi
64010bcc:	pop    esi
64010bcd:	pop    ecx
64010bce:	ret    
64010bcf:	int3   
64010bd0:	push   0xffffffff
64010bd2:	push   0x64022258
64010bd7:	mov    eax,fs:0x0
64010bdd:	push   eax
64010bde:	push   ecx
64010bdf:	push   esi
64010be0:	mov    eax,ds:0x6402d09c
64010be5:	xor    eax,esp
64010be7:	push   eax
64010be8:	lea    eax,[esp+0xc]
64010bec:	mov    fs:0x0,eax
64010bf2:	lea    eax,[esp+0x8]
64010bf6:	push   eax
64010bf7:	call   0x64010ba0
64010bfc:	add    esp,0x4
64010bff:	mov    eax,DWORD PTR [eax]
64010c01:	push   eax
64010c02:	push   0x0
64010c04:	mov    DWORD PTR [esp+0x1c],0x0
64010c0c:	call   0x64005370
64010c11:	push   eax
64010c12:	call   DWORD PTR ds:0x64025064
64010c18:	mov    esi,eax
64010c1a:	mov    eax,DWORD PTR [esp+0x8]
64010c1e:	add    eax,0xfffffff0
64010c21:	mov    DWORD PTR [esp+0x14],0xffffffff
64010c29:	lea    ecx,[eax+0xc]
64010c2c:	or     edx,0xffffffff
64010c2f:	lock xadd DWORD PTR [ecx],edx
64010c33:	dec    edx
64010c34:	test   edx,edx
64010c36:	jg     0x64010c42
64010c38:	mov    ecx,DWORD PTR [eax]
64010c3a:	mov    edx,DWORD PTR [ecx]
64010c3c:	push   eax
64010c3d:	mov    eax,DWORD PTR [edx+0x4]
64010c40:	call   eax
64010c42:	test   esi,esi
64010c44:	jne    0x64010c59
64010c46:	xor    al,al
64010c48:	mov    ecx,DWORD PTR [esp+0xc]
64010c4c:	mov    DWORD PTR fs:0x0,ecx
64010c53:	pop    ecx
64010c54:	pop    esi
64010c55:	add    esp,0x10
64010c58:	ret    
64010c59:	push   0x0
64010c5b:	push   esi
64010c5c:	call   DWORD PTR ds:0x640250b0
64010c62:	test   eax,eax
64010c64:	sete   al
64010c67:	mov    ecx,DWORD PTR [esp+0xc]
64010c6b:	mov    DWORD PTR fs:0x0,ecx
64010c72:	pop    ecx
64010c73:	pop    esi
64010c74:	add    esp,0x10
64010c77:	ret    
64010c78:	int3   
64010c79:	int3   
64010c7a:	int3   
64010c7b:	int3   
64010c7c:	int3   
64010c7d:	int3   
64010c7e:	int3   
64010c7f:	int3   
64010c80:	push   0xffffffff
64010c82:	push   0x64022290
64010c87:	mov    eax,fs:0x0
64010c8d:	push   eax
64010c8e:	sub    esp,0x8
64010c91:	push   ebx
64010c92:	push   esi
64010c93:	push   edi
64010c94:	mov    eax,ds:0x6402d09c
64010c99:	xor    eax,esp
64010c9b:	push   eax
64010c9c:	lea    eax,[esp+0x18]
64010ca0:	mov    fs:0x0,eax
64010ca6:	xor    ebx,ebx
64010ca8:	mov    DWORD PTR [esp+0x14],ebx
64010cac:	push   0x64025640
64010cb1:	push   0xf
64010cb3:	push   0x64025620
64010cb8:	mov    DWORD PTR [esp+0x2c],ebx
64010cbc:	call   0x640059d0
64010cc1:	add    esp,0xc
64010cc4:	push   eax
64010cc5:	lea    ecx,[esp+0x14]
64010cc9:	call   0x64002500
64010cce:	mov    eax,DWORD PTR [esp+0x10]
64010cd2:	push   ebx
64010cd3:	push   ebx
64010cd4:	push   0x3
64010cd6:	push   ebx
64010cd7:	push   ebx
64010cd8:	push   0xc0000000
64010cdd:	push   eax
64010cde:	mov    BYTE PTR [esp+0x3c],0x1
64010ce3:	call   0x6400ce80
64010ce8:	call   eax
64010cea:	mov    esi,eax
64010cec:	mov    eax,DWORD PTR [esp+0x10]
64010cf0:	add    eax,0xfffffff0
64010cf3:	mov    DWORD PTR [esp+0x14],esi
64010cf7:	mov    BYTE PTR [esp+0x20],bl
64010cfb:	or     edx,0xffffffff
64010cfe:	lea    ecx,[eax+0xc]
64010d01:	lock xadd DWORD PTR [ecx],edx
64010d05:	dec    edx
64010d06:	cmp    esi,0xffffffff
64010d09:	je     0x64010d48
64010d0b:	test   edx,edx
64010d0d:	jg     0x64010d19
64010d0f:	mov    ecx,DWORD PTR [eax]
64010d11:	mov    edx,DWORD PTR [ecx]
64010d13:	push   eax
64010d14:	mov    eax,DWORD PTR [edx+0x4]
64010d17:	call   eax
64010d19:	cmp    esi,ebx
64010d1b:	je     0x64010d33
64010d1d:	call   DWORD PTR ds:0x64025044
64010d23:	push   esi
64010d24:	mov    edi,eax
64010d26:	call   DWORD PTR ds:0x64025040
64010d2c:	push   edi
64010d2d:	call   DWORD PTR ds:0x64025060
64010d33:	mov    al,0x1
64010d35:	mov    ecx,DWORD PTR [esp+0x18]
64010d39:	mov    DWORD PTR fs:0x0,ecx
64010d40:	pop    ecx
64010d41:	pop    edi
64010d42:	pop    esi
64010d43:	pop    ebx
64010d44:	add    esp,0x14
64010d47:	ret    
64010d48:	test   edx,edx
64010d4a:	jg     0x64010d56
64010d4c:	mov    ecx,DWORD PTR [eax]
64010d4e:	mov    edx,DWORD PTR [ecx]
64010d50:	push   eax
64010d51:	mov    eax,DWORD PTR [edx+0x4]
64010d54:	call   eax
64010d56:	call   DWORD PTR ds:0x64025044
64010d5c:	push   0xffffffff
64010d5e:	mov    esi,eax
64010d60:	call   DWORD PTR ds:0x64025040
64010d66:	push   esi
64010d67:	call   DWORD PTR ds:0x64025060
64010d6d:	xor    al,al
64010d6f:	mov    ecx,DWORD PTR [esp+0x18]
64010d73:	mov    DWORD PTR fs:0x0,ecx
64010d7a:	pop    ecx
64010d7b:	pop    edi
64010d7c:	pop    esi
64010d7d:	pop    ebx
64010d7e:	add    esp,0x14
64010d81:	ret    
64010d82:	int3   
64010d83:	int3   
64010d84:	int3   
64010d85:	int3   
64010d86:	int3   
64010d87:	int3   
64010d88:	int3   
64010d89:	int3   
64010d8a:	int3   
64010d8b:	int3   
64010d8c:	int3   
64010d8d:	int3   
64010d8e:	int3   
64010d8f:	int3   
64010d90:	push   ebp
64010d91:	lea    ebp,[esp-0x128]
64010d98:	sub    esp,0x128
64010d9e:	push   0xffffffff
64010da0:	push   0x640223b1
64010da5:	mov    eax,fs:0x0
64010dab:	push   eax
64010dac:	sub    esp,0x90
64010db2:	mov    eax,ds:0x6402d09c
64010db7:	xor    eax,ebp
64010db9:	mov    DWORD PTR [ebp+0x124],eax
64010dbf:	push   ebx
64010dc0:	push   esi
64010dc1:	push   edi
64010dc2:	push   eax
64010dc3:	lea    eax,[ebp-0xc]
64010dc6:	mov    fs:0x0,eax
64010dcc:	mov    esi,DWORD PTR [ebp+0x130]
64010dd2:	xor    ebx,ebx
64010dd4:	mov    DWORD PTR [ebp-0x4],ebx
64010dd7:	mov    DWORD PTR [ebp-0x58],esi
64010dda:	mov    DWORD PTR [ebp-0x50],ebx
64010ddd:	call   DWORD PTR ds:0x6402d06c
64010de3:	mov    eax,ds:0x6402e540
64010de8:	mov    edx,DWORD PTR [eax+0xc]
64010deb:	mov    ecx,0x6402e540
64010df0:	call   edx
64010df2:	add    eax,0x10
64010df5:	mov    DWORD PTR [esi],eax
64010df7:	push   0x640259f8
64010dfc:	push   0xd
64010dfe:	mov    edi,0x1
64010e03:	push   0x640259e8
64010e08:	mov    DWORD PTR [ebp-0x4],ebx
64010e0b:	mov    DWORD PTR [ebp-0x50],edi
64010e0e:	call   0x64005710
64010e13:	add    esp,0xc
64010e16:	push   eax
64010e17:	mov    ecx,esi
64010e19:	call   0x640025d0
64010e1e:	push   0x640259c0
64010e23:	push   0x3
64010e25:	push   0x640259bc
64010e2a:	call   0x64005710
64010e2f:	add    esp,0xc
64010e32:	push   eax
64010e33:	mov    ecx,esi
64010e35:	call   0x640025d0
64010e3a:	push   0x640259b0
64010e3f:	mov    ecx,esi
64010e41:	call   0x640025d0
64010e46:	push   0x64025984
64010e4b:	push   0x3
64010e4d:	push   0x64025980
64010e52:	call   0x64005710
64010e57:	add    esp,0xc
64010e5a:	push   eax
64010e5b:	mov    ecx,esi
64010e5d:	call   0x640025d0
64010e62:	push   0x64025978
64010e67:	mov    ecx,esi
64010e69:	call   0x640025d0
64010e6e:	mov    eax,ds:0x6402e540
64010e73:	mov    edx,DWORD PTR [eax+0xc]
64010e76:	mov    ecx,0x6402e540
64010e7b:	call   edx
64010e7d:	add    eax,0x10
64010e80:	mov    DWORD PTR [ebp-0x4c],eax
64010e83:	mov    eax,ds:0x6402e540
64010e88:	mov    edx,DWORD PTR [eax+0xc]
64010e8b:	mov    ecx,0x6402e540
64010e90:	mov    DWORD PTR [ebp-0x4],edi
64010e93:	call   edx
64010e95:	add    eax,0x10
64010e98:	mov    DWORD PTR [ebp-0x54],eax
64010e9b:	lea    eax,[ebp+0x114]
64010ea1:	push   eax
64010ea2:	mov    BYTE PTR [ebp-0x4],0x2
64010ea6:	call   0x640051c0
64010eab:	add    esp,0x4
64010eae:	test   al,al
64010eb0:	je     0x64010f50
64010eb6:	push   0x64025954
64010ebb:	push   0x4
64010ebd:	push   0x6402594c
64010ec2:	call   0x64005710
64010ec7:	add    esp,0xc
64010eca:	push   eax
64010ecb:	lea    ecx,[ebp-0x10]
64010ece:	call   0x64005470
64010ed3:	mov    eax,DWORD PTR [eax]
64010ed5:	mov    ecx,DWORD PTR [eax-0xc]
64010ed8:	push   ecx
64010ed9:	push   eax
64010eda:	mov    ecx,esi
64010edc:	mov    BYTE PTR [ebp-0x4],0x3
64010ee0:	call   0x64002950
64010ee5:	mov    eax,DWORD PTR [ebp-0x10]
64010ee8:	add    eax,0xfffffff0
64010eeb:	mov    BYTE PTR [ebp-0x4],0x2
64010eef:	lea    ecx,[eax+0xc]
64010ef2:	or     edx,0xffffffff
64010ef5:	lock xadd DWORD PTR [ecx],edx
64010ef9:	dec    edx
64010efa:	test   edx,edx
64010efc:	jg     0x64010f08
64010efe:	mov    ecx,DWORD PTR [eax]
64010f00:	mov    edx,DWORD PTR [ecx]
64010f02:	push   eax
64010f03:	mov    eax,DWORD PTR [edx+0x4]
64010f06:	call   eax
64010f08:	lea    ecx,[ebp+0x114]
64010f0e:	push   ecx
64010f0f:	lea    edx,[ebp-0x10]
64010f12:	push   edx
64010f13:	call   0x64002e20
64010f18:	add    esp,0x8
64010f1b:	mov    eax,DWORD PTR [eax]
64010f1d:	mov    ecx,DWORD PTR [eax-0xc]
64010f20:	push   ecx
64010f21:	push   eax
64010f22:	mov    ecx,esi
64010f24:	mov    BYTE PTR [ebp-0x4],0x4
64010f28:	call   0x64002950
64010f2d:	mov    eax,DWORD PTR [ebp-0x10]
64010f30:	add    eax,0xfffffff0
64010f33:	mov    BYTE PTR [ebp-0x4],0x2
64010f37:	lea    ecx,[eax+0xc]
64010f3a:	or     edx,0xffffffff
64010f3d:	lock xadd DWORD PTR [ecx],edx
64010f41:	dec    edx
64010f42:	test   edx,edx
64010f44:	jg     0x64010f50
64010f46:	mov    ecx,DWORD PTR [eax]
64010f48:	mov    edx,DWORD PTR [ecx]
64010f4a:	push   eax
64010f4b:	mov    eax,DWORD PTR [edx+0x4]
64010f4e:	call   eax
64010f50:	call   0x6400f830
64010f55:	test   al,al
64010f57:	je     0x64010f75
64010f59:	push   0x64025918
64010f5e:	push   0x6
64010f60:	push   0x64025910
64010f65:	call   0x64005710
64010f6a:	add    esp,0xc
64010f6d:	push   eax
64010f6e:	mov    ecx,esi
64010f70:	call   0x640025d0
64010f75:	call   0x64010c80
64010f7a:	test   al,al
64010f7c:	je     0x64010f9a
64010f7e:	push   0x640258d0
64010f83:	push   0x6
64010f85:	push   0x640258c8
64010f8a:	call   0x64005710
64010f8f:	add    esp,0xc
64010f92:	push   eax
64010f93:	mov    ecx,esi
64010f95:	call   0x640025d0
64010f9a:	mov    edx,DWORD PTR ds:0x6402e540
64010fa0:	mov    eax,DWORD PTR [edx+0xc]
64010fa3:	mov    ecx,0x6402e540
64010fa8:	call   eax
64010faa:	add    eax,0x10
64010fad:	mov    DWORD PTR [ebp-0x28],eax
64010fb0:	mov    edx,DWORD PTR ds:0x6402e540
64010fb6:	mov    eax,DWORD PTR [edx+0xc]
64010fb9:	mov    ecx,0x6402e540
64010fbe:	mov    BYTE PTR [ebp-0x4],0x5
64010fc2:	call   eax
64010fc4:	add    eax,0x10
64010fc7:	mov    DWORD PTR [ebp-0x48],eax
64010fca:	mov    edx,DWORD PTR ds:0x6402e540
64010fd0:	mov    eax,DWORD PTR [edx+0xc]
64010fd3:	mov    ecx,0x6402e540
64010fd8:	mov    BYTE PTR [ebp-0x4],0x6
64010fdc:	call   eax
64010fde:	add    eax,0x10
64010fe1:	mov    DWORD PTR [ebp-0x24],eax
64010fe4:	lea    ecx,[ebp-0x44]
64010fe7:	push   ecx
64010fe8:	lea    edx,[ebp-0x24]
64010feb:	push   edx
64010fec:	lea    eax,[ebp-0x28]
64010fef:	push   eax
64010ff0:	mov    BYTE PTR [ebp-0x4],0x7
64010ff4:	mov    DWORD PTR [ebp-0x44],ebx
64010ff7:	mov    DWORD PTR [ebp-0x40],ebx
64010ffa:	call   0x64009d90
64010fff:	add    esp,0xc
64011002:	test   al,al
64011004:	je     0x64011245
6401100a:	lea    ecx,[ebp-0x24]
6401100d:	push   ecx
6401100e:	lea    edx,[ebp-0x14]
64011011:	push   edx
64011012:	call   0x640030c0
64011017:	mov    edi,eax
64011019:	push   0x64025890
6401101e:	push   0x5
64011020:	mov    bl,0x8
64011022:	push   0x64025888
64011027:	mov    BYTE PTR [ebp-0x4],bl
6401102a:	call   0x64005710
6401102f:	add    esp,0x14
64011032:	push   eax
64011033:	lea    ecx,[ebp-0x18]
64011036:	call   0x64005470
6401103b:	push   edi
6401103c:	push   eax
6401103d:	lea    eax,[ebp-0x10]
64011040:	push   eax
64011041:	mov    BYTE PTR [ebp-0x4],0x9
64011045:	call   0x6400fb80
6401104a:	add    esp,0xc
6401104d:	mov    eax,DWORD PTR [eax]
6401104f:	mov    ecx,DWORD PTR [eax-0xc]
64011052:	push   ecx
64011053:	push   eax
64011054:	mov    ecx,esi
64011056:	mov    BYTE PTR [ebp-0x4],0xa
6401105a:	call   0x64002950
6401105f:	mov    eax,DWORD PTR [ebp-0x10]
64011062:	add    eax,0xfffffff0
64011065:	mov    BYTE PTR [ebp-0x4],0x9
64011069:	lea    ecx,[eax+0xc]
6401106c:	or     edx,0xffffffff
6401106f:	lock xadd DWORD PTR [ecx],edx
64011073:	dec    edx
64011074:	test   edx,edx
64011076:	jg     0x64011082
64011078:	mov    ecx,DWORD PTR [eax]
6401107a:	mov    edx,DWORD PTR [ecx]
6401107c:	push   eax
6401107d:	mov    eax,DWORD PTR [edx+0x4]
64011080:	call   eax
64011082:	mov    eax,DWORD PTR [ebp-0x18]
64011085:	add    eax,0xfffffff0
64011088:	mov    BYTE PTR [ebp-0x4],bl
6401108b:	lea    ecx,[eax+0xc]
6401108e:	or     edx,0xffffffff
64011091:	lock xadd DWORD PTR [ecx],edx
64011095:	dec    edx
64011096:	test   edx,edx
64011098:	jg     0x640110a4
6401109a:	mov    ecx,DWORD PTR [eax]
6401109c:	mov    edx,DWORD PTR [ecx]
6401109e:	push   eax
6401109f:	mov    eax,DWORD PTR [edx+0x4]
640110a2:	call   eax
640110a4:	mov    eax,DWORD PTR [ebp-0x14]
640110a7:	add    eax,0xfffffff0
640110aa:	mov    BYTE PTR [ebp-0x4],0x7
640110ae:	lea    ecx,[eax+0xc]
640110b1:	or     edx,0xffffffff
640110b4:	lock xadd DWORD PTR [ecx],edx
640110b8:	dec    edx
640110b9:	test   edx,edx
640110bb:	jg     0x640110c7
640110bd:	mov    ecx,DWORD PTR [eax]
640110bf:	mov    edx,DWORD PTR [ecx]
640110c1:	push   eax
640110c2:	mov    eax,DWORD PTR [edx+0x4]
640110c5:	call   eax
640110c7:	lea    ecx,[ebp-0x28]
640110ca:	push   ecx
640110cb:	lea    edx,[ebp-0x10]
640110ce:	push   edx
640110cf:	call   0x640030c0
640110d4:	mov    edi,eax
640110d6:	push   0x64025858
640110db:	push   0x7
640110dd:	mov    bl,0xb
640110df:	push   0x64025850
640110e4:	mov    BYTE PTR [ebp-0x4],bl
640110e7:	call   0x64005710
640110ec:	add    esp,0x14
640110ef:	push   eax
640110f0:	lea    ecx,[ebp-0x18]
640110f3:	call   0x64005470
640110f8:	push   edi
640110f9:	push   eax
640110fa:	lea    eax,[ebp-0x14]
640110fd:	push   eax
640110fe:	mov    BYTE PTR [ebp-0x4],0xc
64011102:	call   0x6400fb80
64011107:	add    esp,0xc
6401110a:	mov    eax,DWORD PTR [eax]
6401110c:	mov    ecx,DWORD PTR [eax-0xc]
6401110f:	push   ecx
64011110:	push   eax
64011111:	mov    ecx,esi
64011113:	mov    BYTE PTR [ebp-0x4],0xd
64011117:	call   0x64002950
6401111c:	mov    eax,DWORD PTR [ebp-0x14]
6401111f:	add    eax,0xfffffff0
64011122:	mov    BYTE PTR [ebp-0x4],0xc
64011126:	lea    ecx,[eax+0xc]
64011129:	or     edx,0xffffffff
6401112c:	lock xadd DWORD PTR [ecx],edx
64011130:	dec    edx
64011131:	test   edx,edx
64011133:	jg     0x6401113f
64011135:	mov    ecx,DWORD PTR [eax]
64011137:	mov    edx,DWORD PTR [ecx]
64011139:	push   eax
6401113a:	mov    eax,DWORD PTR [edx+0x4]
6401113d:	call   eax
6401113f:	mov    eax,DWORD PTR [ebp-0x18]
64011142:	add    eax,0xfffffff0
64011145:	mov    BYTE PTR [ebp-0x4],bl
64011148:	lea    ecx,[eax+0xc]
6401114b:	or     edx,0xffffffff
6401114e:	lock xadd DWORD PTR [ecx],edx
64011152:	dec    edx
64011153:	test   edx,edx
64011155:	jg     0x64011161
64011157:	mov    ecx,DWORD PTR [eax]
64011159:	mov    edx,DWORD PTR [ecx]
6401115b:	push   eax
6401115c:	mov    eax,DWORD PTR [edx+0x4]
6401115f:	call   eax
64011161:	mov    eax,DWORD PTR [ebp-0x10]
64011164:	add    eax,0xfffffff0
64011167:	mov    BYTE PTR [ebp-0x4],0x7
6401116b:	lea    ecx,[eax+0xc]
6401116e:	or     edx,0xffffffff
64011171:	lock xadd DWORD PTR [ecx],edx
64011175:	dec    edx
64011176:	test   edx,edx
64011178:	jg     0x64011184
6401117a:	mov    ecx,DWORD PTR [eax]
6401117c:	mov    edx,DWORD PTR [ecx]
6401117e:	push   eax
6401117f:	mov    eax,DWORD PTR [edx+0x4]
64011182:	call   eax
64011184:	mov    edx,DWORD PTR ds:0x6402e540
6401118a:	mov    eax,DWORD PTR [edx+0xc]
6401118d:	mov    ecx,0x6402e540
64011192:	call   eax
64011194:	add    eax,0x10
64011197:	mov    DWORD PTR [ebp-0x10],eax
6401119a:	mov    ecx,DWORD PTR [ebp-0x40]
6401119d:	mov    edx,DWORD PTR [ebp-0x44]
640111a0:	push   ecx
640111a1:	push   edx
640111a2:	push   0x64025814
640111a7:	push   0xc
640111a9:	push   0x640257f8
640111ae:	mov    BYTE PTR [ebp-0x4],0xe
640111b2:	call   0x640059d0
640111b7:	add    esp,0xc
640111ba:	push   eax
640111bb:	lea    eax,[ebp-0x10]
640111be:	push   eax
640111bf:	call   0x64001d40
640111c4:	add    esp,0x10
640111c7:	call   DWORD PTR ds:0x6402d06c
640111cd:	mov    edi,DWORD PTR [ebp-0x10]
640111d0:	cmp    DWORD PTR [edi-0x4],0x1
640111d4:	mov    DWORD PTR [ebp-0x14],eax
640111d7:	jle    0x640111e8
640111d9:	mov    ecx,DWORD PTR [edi-0xc]
640111dc:	push   ecx
640111dd:	lea    ecx,[ebp-0x10]
640111e0:	call   0x64001950
640111e5:	mov    edi,DWORD PTR [ebp-0x10]
640111e8:	test   edi,edi
640111ea:	jne    0x640111f0
640111ec:	xor    eax,eax
640111ee:	jmp    0x6401121d
640111f0:	push   edi
640111f1:	call   DWORD PTR ds:0x64025054
640111f7:	add    eax,0x1
640111fa:	cmp    eax,0x3fffffff
640111ff:	jle    0x64011205
64011201:	xor    eax,eax
64011203:	jmp    0x6401121d
64011205:	lea    ebx,[eax+eax*1]
64011208:	mov    eax,ebx
6401120a:	call   0x64013240
6401120f:	mov    edx,DWORD PTR [ebp-0x14]
64011212:	mov    eax,esp
64011214:	push   edx
64011215:	push   ebx
64011216:	push   edi
64011217:	push   eax
64011218:	call   0x64002af0
6401121d:	push   eax
6401121e:	mov    ecx,esi
64011220:	call   0x640025d0
64011225:	add    edi,0xfffffff0
64011228:	mov    BYTE PTR [ebp-0x4],0x7
6401122c:	lea    eax,[edi+0xc]
6401122f:	or     ecx,0xffffffff
64011232:	lock xadd DWORD PTR [eax],ecx
64011236:	dec    ecx
64011237:	test   ecx,ecx
64011239:	jg     0x64011245
6401123b:	mov    ecx,DWORD PTR [edi]
6401123d:	mov    edx,DWORD PTR [ecx]
6401123f:	mov    eax,DWORD PTR [edx+0x4]
64011242:	push   edi
64011243:	call   eax
64011245:	xor    edi,edi
64011247:	mov    DWORD PTR [ebp-0x38],edi
6401124a:	mov    DWORD PTR [ebp-0x34],edi
6401124d:	mov    DWORD PTR [ebp-0x30],edi
64011250:	lea    ecx,[ebp-0x3c]
64011253:	push   ecx
64011254:	mov    BYTE PTR [ebp-0x4],0xf
64011258:	call   0x64009f40
6401125d:	add    esp,0x4
64011260:	mov    DWORD PTR [ebp-0x10],edi
64011263:	xor    ebx,ebx
64011265:	mov    eax,DWORD PTR [ebp-0x38]
64011268:	cmp    eax,edi
6401126a:	jne    0x64011270
6401126c:	xor    eax,eax
6401126e:	jmp    0x64011288
64011270:	mov    ecx,DWORD PTR [ebp-0x34]
64011273:	sub    ecx,eax
64011275:	mov    eax,0x92492493
6401127a:	imul   ecx
6401127c:	add    edx,ecx
6401127e:	sar    edx,0x4
64011281:	mov    eax,edx
64011283:	shr    eax,0x1f
64011286:	add    eax,edx
64011288:	cmp    DWORD PTR [ebp-0x10],eax
6401128b:	je     0x64011336
64011291:	push   0x640257d0
64011296:	push   0x5
64011298:	push   0x640257c8
6401129d:	call   0x64005710
640112a2:	add    esp,0xc
640112a5:	push   eax
640112a6:	lea    ecx,[ebp-0x14]
640112a9:	call   0x64005470
640112ae:	mov    eax,DWORD PTR [eax]
640112b0:	mov    ecx,DWORD PTR [eax-0xc]
640112b3:	push   ecx
640112b4:	push   eax
640112b5:	mov    ecx,esi
640112b7:	mov    BYTE PTR [ebp-0x4],0x10
640112bb:	call   0x64002950
640112c0:	mov    eax,DWORD PTR [ebp-0x14]
640112c3:	add    eax,0xfffffff0
640112c6:	mov    BYTE PTR [ebp-0x4],0xf
640112ca:	lea    edx,[eax+0xc]
640112cd:	or     ecx,0xffffffff
640112d0:	lock xadd DWORD PTR [edx],ecx
640112d4:	dec    ecx
640112d5:	test   ecx,ecx
640112d7:	jg     0x640112e3
640112d9:	mov    ecx,DWORD PTR [eax]
640112db:	mov    edx,DWORD PTR [ecx]
640112dd:	push   eax
640112de:	mov    eax,DWORD PTR [edx+0x4]
640112e1:	call   eax
640112e3:	mov    edi,DWORD PTR [ebp-0x38]
640112e6:	test   edi,edi
640112e8:	je     0x64011307
640112ea:	mov    ecx,DWORD PTR [ebp-0x34]
640112ed:	sub    ecx,edi
640112ef:	mov    eax,0x92492493
640112f4:	imul   ecx
640112f6:	add    edx,ecx
640112f8:	sar    edx,0x4
640112fb:	mov    eax,edx
640112fd:	shr    eax,0x1f
64011300:	add    eax,edx
64011302:	cmp    DWORD PTR [ebp-0x10],eax
64011305:	jb     0x6401130f
64011307:	call   0x64012618
6401130c:	mov    edi,DWORD PTR [ebp-0x38]
6401130f:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
64011314:	jb     0x6401131c
64011316:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
6401131a:	jmp    0x64011320
6401131c:	lea    edi,[ebx+edi*1+0x4]
64011320:	push   edi
64011321:	mov    ecx,esi
64011323:	call   0x640025d0
64011328:	add    DWORD PTR [ebp-0x10],0x1
6401132c:	add    ebx,0x1c
6401132f:	xor    edi,edi
64011331:	jmp    0x64011265
64011336:	call   DWORD PTR ds:0x6402d06c
6401133c:	push   0x110
64011341:	lea    ecx,[ebp+0x4]
64011344:	push   edi
64011345:	push   ecx
64011346:	mov    DWORD PTR [ebp-0x14],eax
64011349:	call   0x640131c0
6401134e:	mov    edx,DWORD PTR ds:0x6402e540
64011354:	mov    eax,DWORD PTR [edx+0xc]
64011357:	add    esp,0xc
6401135a:	mov    ecx,0x6402e540
6401135f:	mov    DWORD PTR [ebp+0x0],0x114
64011366:	call   eax
64011368:	add    eax,0x10
6401136b:	mov    DWORD PTR [ebp-0x10],eax
6401136e:	lea    ecx,[ebp+0x0]
64011371:	push   ecx
64011372:	mov    BYTE PTR [ebp-0x4],0x11
64011376:	call   DWORD PTR ds:0x6402506c
6401137c:	test   eax,eax
6401137e:	lea    ecx,[ebp-0x10]
64011381:	je     0x6401139b
64011383:	mov    edx,DWORD PTR [ebp+0x8]
64011386:	mov    eax,DWORD PTR [ebp+0x4]
64011389:	push   edx
6401138a:	push   eax
6401138b:	push   0x640257a0
64011390:	push   ecx
64011391:	call   0x64001d40
64011396:	add    esp,0x10
64011399:	jmp    0x640113a7
6401139b:	push   0xc
6401139d:	push   0x64025784
640113a2:	call   0x64002a50
640113a7:	xor    eax,eax
640113a9:	lea    edx,[ebp-0x8c]
640113af:	push   edx
640113b0:	mov    DWORD PTR [ebp-0x8c],edi
640113b6:	mov    DWORD PTR [ebp-0x88],eax
640113bc:	mov    DWORD PTR [ebp-0x84],eax
640113c2:	mov    DWORD PTR [ebp-0x80],eax
640113c5:	mov    DWORD PTR [ebp-0x7c],eax
640113c8:	mov    DWORD PTR [ebp-0x78],eax
640113cb:	mov    DWORD PTR [ebp-0x74],eax
640113ce:	mov    DWORD PTR [ebp-0x70],eax
640113d1:	mov    DWORD PTR [ebp-0x6c],eax
640113d4:	call   DWORD PTR ds:0x64025068
640113da:	movzx  eax,WORD PTR [ebp-0x8c]
640113e1:	cmp    eax,edi
640113e3:	je     0x640113f3
640113e5:	cmp    eax,0x9
640113e8:	jne    0x64011402
640113ea:	push   0x4
640113ec:	push   0x64025778
640113f1:	jmp    0x640113fa
640113f3:	push   0x4
640113f5:	push   0x6402576c
640113fa:	lea    ecx,[ebp-0x10]
640113fd:	call   0x64002950
64011402:	mov    ebx,DWORD PTR [ebp-0x10]
64011405:	cmp    ebx,edi
64011407:	jne    0x6401140d
64011409:	xor    eax,eax
6401140b:	jmp    0x64011456
6401140d:	push   ebx
6401140e:	call   DWORD PTR ds:0x64025054
64011414:	add    eax,0x1
64011417:	cmp    eax,0x3fffffff
6401141c:	jg     0x64011451
6401141e:	lea    ebx,[eax+eax*1]
64011421:	mov    eax,ebx
64011423:	call   0x64013240
64011428:	mov    edi,esp
6401142a:	test   edi,edi
6401142c:	je     0x64011451
6401142e:	mov    eax,DWORD PTR [ebp-0x10]
64011431:	mov    ecx,DWORD PTR [ebp-0x14]
64011434:	push   0x0
64011436:	push   0x0
64011438:	push   ebx
64011439:	push   edi
6401143a:	push   0xffffffff
6401143c:	push   eax
6401143d:	push   0x0
6401143f:	push   ecx
64011440:	mov    BYTE PTR [edi],0x0
64011443:	call   DWORD PTR ds:0x64025028
64011449:	neg    eax
6401144b:	sbb    eax,eax
6401144d:	and    eax,edi
6401144f:	jmp    0x64011453
64011451:	xor    eax,eax
64011453:	mov    ebx,DWORD PTR [ebp-0x10]
64011456:	push   eax
64011457:	mov    ecx,esi
64011459:	call   0x640025d0
6401145e:	lea    eax,[ebx-0x10]
64011461:	mov    BYTE PTR [ebp-0x4],0xf
64011465:	lea    edx,[eax+0xc]
64011468:	or     ecx,0xffffffff
6401146b:	lock xadd DWORD PTR [edx],ecx
6401146f:	dec    ecx
64011470:	test   ecx,ecx
64011472:	jg     0x6401147e
64011474:	mov    ecx,DWORD PTR [eax]
64011476:	mov    edx,DWORD PTR [ecx]
64011478:	push   eax
64011479:	mov    eax,DWORD PTR [edx+0x4]
6401147c:	call   eax
6401147e:	lea    ecx,[ebp-0x20]
64011481:	push   ecx
64011482:	call   0x6400a500
64011487:	push   eax
64011488:	lea    edx,[ebp-0x10]
6401148b:	push   edx
6401148c:	mov    BYTE PTR [ebp-0x4],0x12
64011490:	call   0x640030c0
64011495:	mov    edi,eax
64011497:	push   0x6402572c
6401149c:	push   0x7
6401149e:	push   0x64025724
640114a3:	mov    BYTE PTR [ebp-0x4],0x13
640114a7:	call   0x64005710
640114ac:	add    esp,0x18
640114af:	push   eax
640114b0:	lea    ecx,[ebp-0x18]
640114b3:	call   0x64005470
640114b8:	push   edi
640114b9:	push   eax
640114ba:	lea    eax,[ebp-0x14]
640114bd:	mov    bl,0x14
640114bf:	push   eax
640114c0:	mov    BYTE PTR [ebp-0x4],bl
640114c3:	call   0x6400fb80
640114c8:	add    esp,0xc
640114cb:	mov    eax,DWORD PTR [eax]
640114cd:	mov    ecx,DWORD PTR [eax-0xc]
640114d0:	push   ecx
640114d1:	push   eax
640114d2:	mov    ecx,esi
640114d4:	mov    BYTE PTR [ebp-0x4],0x15
640114d8:	call   0x64002950
640114dd:	mov    eax,DWORD PTR [ebp-0x14]
640114e0:	add    eax,0xfffffff0
640114e3:	mov    BYTE PTR [ebp-0x4],bl
640114e6:	lea    ecx,[eax+0xc]
640114e9:	or     edx,0xffffffff
640114ec:	lock xadd DWORD PTR [ecx],edx
640114f0:	dec    edx
640114f1:	test   edx,edx
640114f3:	jg     0x640114ff
640114f5:	mov    ecx,DWORD PTR [eax]
640114f7:	mov    edx,DWORD PTR [ecx]
640114f9:	push   eax
640114fa:	mov    eax,DWORD PTR [edx+0x4]
640114fd:	call   eax
640114ff:	mov    eax,DWORD PTR [ebp-0x18]
64011502:	add    eax,0xfffffff0
64011505:	mov    BYTE PTR [ebp-0x4],0x13
64011509:	lea    ecx,[eax+0xc]
6401150c:	or     edx,0xffffffff
6401150f:	lock xadd DWORD PTR [ecx],edx
64011513:	dec    edx
64011514:	test   edx,edx
64011516:	jg     0x64011522
64011518:	mov    ecx,DWORD PTR [eax]
6401151a:	mov    edx,DWORD PTR [ecx]
6401151c:	push   eax
6401151d:	mov    eax,DWORD PTR [edx+0x4]
64011520:	call   eax
64011522:	mov    eax,DWORD PTR [ebp-0x10]
64011525:	add    eax,0xfffffff0
64011528:	mov    BYTE PTR [ebp-0x4],0x12
6401152c:	lea    ecx,[eax+0xc]
6401152f:	or     edx,0xffffffff
64011532:	lock xadd DWORD PTR [ecx],edx
64011536:	dec    edx
64011537:	test   edx,edx
64011539:	jg     0x64011545
6401153b:	mov    ecx,DWORD PTR [eax]
6401153d:	mov    edx,DWORD PTR [ecx]
6401153f:	push   eax
64011540:	mov    eax,DWORD PTR [edx+0x4]
64011543:	call   eax
64011545:	mov    eax,DWORD PTR [ebp-0x20]
64011548:	add    eax,0xfffffff0
6401154b:	mov    BYTE PTR [ebp-0x4],0xf
6401154f:	lea    ecx,[eax+0xc]
64011552:	or     edx,0xffffffff
64011555:	lock xadd DWORD PTR [ecx],edx
64011559:	dec    edx
6401155a:	test   edx,edx
6401155c:	jg     0x64011568
6401155e:	mov    ecx,DWORD PTR [eax]
64011560:	mov    edx,DWORD PTR [ecx]
64011562:	push   eax
64011563:	mov    eax,DWORD PTR [edx+0x4]
64011566:	call   eax
64011568:	call   DWORD PTR ds:0x6402d06c
6401156e:	mov    edx,DWORD PTR ds:0x6402e540
64011574:	mov    DWORD PTR [ebp-0x14],eax
64011577:	mov    eax,DWORD PTR [edx+0xc]
6401157a:	mov    ecx,0x6402e540
6401157f:	call   eax
64011581:	add    eax,0x10
64011584:	mov    DWORD PTR [ebp-0x10],eax
64011587:	mov    BYTE PTR [ebp-0x4],0x16
6401158b:	call   0x64003770
64011590:	push   eax
64011591:	push   0x64025700
64011596:	push   0x4
64011598:	push   0x640256f4
6401159d:	call   0x640059d0
640115a2:	add    esp,0xc
640115a5:	push   eax
640115a6:	lea    ecx,[ebp-0x10]
640115a9:	push   ecx
640115aa:	call   0x64001d40
640115af:	mov    ebx,DWORD PTR [ebp-0x10]
640115b2:	mov    eax,DWORD PTR [ebx-0x8]
640115b5:	mov    ecx,0x1
640115ba:	sub    ecx,DWORD PTR [ebx-0x4]
640115bd:	add    eax,0x1
640115c0:	add    esp,0xc
640115c3:	or     eax,ecx
640115c5:	jge    0x640115d4
640115c7:	push   0xffffffff
640115c9:	lea    ecx,[ebp-0x10]
640115cc:	call   0x64001e00
640115d1:	mov    ebx,DWORD PTR [ebp-0x10]
640115d4:	test   ebx,ebx
640115d6:	je     0x6401161c
640115d8:	push   ebx
640115d9:	call   DWORD PTR ds:0x64025054
640115df:	add    eax,0x1
640115e2:	cmp    eax,0x3fffffff
640115e7:	jg     0x6401161c
640115e9:	add    eax,eax
640115eb:	mov    DWORD PTR [ebp-0x20],eax
640115ee:	call   0x64013240
640115f3:	mov    edi,esp
640115f5:	test   edi,edi
640115f7:	je     0x6401161c
640115f9:	mov    edx,DWORD PTR [ebp-0x20]
640115fc:	mov    eax,DWORD PTR [ebp-0x14]
640115ff:	push   0x0
64011601:	push   0x0
64011603:	push   edx
64011604:	push   edi
64011605:	push   0xffffffff
64011607:	push   ebx
64011608:	push   0x0
6401160a:	push   eax
6401160b:	mov    BYTE PTR [edi],0x0
6401160e:	call   DWORD PTR ds:0x64025028
64011614:	neg    eax
64011616:	sbb    eax,eax
64011618:	and    eax,edi
6401161a:	jmp    0x6401161e
6401161c:	xor    eax,eax
6401161e:	push   eax
6401161f:	lea    ecx,[ebp-0x1c]
64011622:	call   0x64005470
64011627:	mov    edi,eax
64011629:	push   0x640256b8
6401162e:	push   0x5
64011630:	push   0x640256b0
64011635:	mov    BYTE PTR [ebp-0x4],0x17
64011639:	call   0x64005710
6401163e:	add    esp,0xc
64011641:	push   eax
64011642:	lea    ecx,[ebp-0x2c]
64011645:	call   0x64005470
6401164a:	push   edi
6401164b:	push   eax
6401164c:	lea    ecx,[ebp-0x18]
6401164f:	push   ecx
64011650:	mov    BYTE PTR [ebp-0x4],0x18
64011654:	call   0x6400fb80
64011659:	add    esp,0xc
6401165c:	mov    eax,DWORD PTR [eax]
6401165e:	mov    ecx,DWORD PTR [eax-0xc]
64011661:	push   ecx
64011662:	push   eax
64011663:	mov    ecx,esi
64011665:	mov    BYTE PTR [ebp-0x4],0x19
64011669:	call   0x64002950
6401166e:	mov    eax,DWORD PTR [ebp-0x18]
64011671:	add    eax,0xfffffff0
64011674:	mov    BYTE PTR [ebp-0x4],0x18
64011678:	lea    edx,[eax+0xc]
6401167b:	or     ecx,0xffffffff
6401167e:	lock xadd DWORD PTR [edx],ecx
64011682:	dec    ecx
64011683:	test   ecx,ecx
64011685:	jg     0x64011691
64011687:	mov    ecx,DWORD PTR [eax]
64011689:	mov    edx,DWORD PTR [ecx]
6401168b:	push   eax
6401168c:	mov    eax,DWORD PTR [edx+0x4]
6401168f:	call   eax
64011691:	mov    eax,DWORD PTR [ebp-0x2c]
64011694:	add    eax,0xfffffff0
64011697:	mov    BYTE PTR [ebp-0x4],0x17
6401169b:	lea    ecx,[eax+0xc]
6401169e:	or     edx,0xffffffff
640116a1:	lock xadd DWORD PTR [ecx],edx
640116a5:	dec    edx
640116a6:	test   edx,edx
640116a8:	jg     0x640116b4
640116aa:	mov    ecx,DWORD PTR [eax]
640116ac:	mov    edx,DWORD PTR [ecx]
640116ae:	push   eax
640116af:	mov    eax,DWORD PTR [edx+0x4]
640116b2:	call   eax
640116b4:	mov    eax,DWORD PTR [ebp-0x1c]
640116b7:	add    eax,0xfffffff0
640116ba:	mov    BYTE PTR [ebp-0x4],0x16
640116be:	lea    ecx,[eax+0xc]
640116c1:	or     edx,0xffffffff
640116c4:	lock xadd DWORD PTR [ecx],edx
640116c8:	dec    edx
640116c9:	test   edx,edx
640116cb:	jg     0x640116d7
640116cd:	mov    ecx,DWORD PTR [eax]
640116cf:	mov    edx,DWORD PTR [ecx]
640116d1:	push   eax
640116d2:	mov    eax,DWORD PTR [edx+0x4]
640116d5:	call   eax
640116d7:	add    ebx,0xfffffff0
640116da:	mov    BYTE PTR [ebp-0x4],0xf
640116de:	lea    ecx,[ebx+0xc]
640116e1:	or     edx,0xffffffff
640116e4:	lock xadd DWORD PTR [ecx],edx
640116e8:	dec    edx
640116e9:	test   edx,edx
640116eb:	jg     0x640116f7
640116ed:	mov    ecx,DWORD PTR [ebx]
640116ef:	mov    eax,DWORD PTR [ecx]
640116f1:	mov    edx,DWORD PTR [eax+0x4]
640116f4:	push   ebx
640116f5:	call   edx
640116f7:	lea    eax,[ebp-0x9c]
640116fd:	push   eax
640116fe:	call   0x64003940
64011703:	mov    ecx,DWORD PTR [eax]
64011705:	mov    DWORD PTR [ebp-0x68],ecx
64011708:	mov    edx,DWORD PTR [eax+0x4]
6401170b:	mov    DWORD PTR [ebp-0x64],edx
6401170e:	mov    ecx,DWORD PTR [eax+0x8]
64011711:	push   0x64025678
64011716:	mov    DWORD PTR [ebp-0x60],ecx
64011719:	mov    edx,DWORD PTR [eax+0xc]
6401171c:	push   0x5
6401171e:	push   0x64025670
64011723:	mov    DWORD PTR [ebp-0x5c],edx
64011726:	call   0x64005710
6401172b:	add    esp,0x10
6401172e:	push   eax
6401172f:	lea    ecx,[ebp-0x10]
64011732:	call   0x64005470
64011737:	lea    eax,[ebp-0x68]
6401173a:	push   eax
6401173b:	lea    ecx,[ebp-0x2c]
6401173e:	push   ecx
6401173f:	mov    BYTE PTR [ebp-0x4],0x1a
64011743:	call   0x64002e20
64011748:	push   eax
64011749:	lea    edx,[ebp-0x10]
6401174c:	push   edx
6401174d:	lea    eax,[ebp-0x1c]
64011750:	mov    bl,0x1b
64011752:	push   eax
64011753:	mov    BYTE PTR [ebp-0x4],bl
64011756:	call   0x6400fb80
6401175b:	add    esp,0x14
6401175e:	mov    eax,DWORD PTR [eax]
64011760:	mov    ecx,DWORD PTR [eax-0xc]
64011763:	push   ecx
64011764:	push   eax
64011765:	mov    ecx,esi
64011767:	mov    BYTE PTR [ebp-0x4],0x1c
6401176b:	call   0x64002950
64011770:	mov    eax,DWORD PTR [ebp-0x1c]
64011773:	add    eax,0xfffffff0
64011776:	mov    BYTE PTR [ebp-0x4],bl
64011779:	lea    ecx,[eax+0xc]
6401177c:	or     edx,0xffffffff
6401177f:	lock xadd DWORD PTR [ecx],edx
64011783:	dec    edx
64011784:	test   edx,edx
64011786:	jg     0x64011792
64011788:	mov    ecx,DWORD PTR [eax]
6401178a:	mov    edx,DWORD PTR [ecx]
6401178c:	push   eax
6401178d:	mov    eax,DWORD PTR [edx+0x4]
64011790:	call   eax
64011792:	mov    eax,DWORD PTR [ebp-0x2c]
64011795:	add    eax,0xfffffff0
64011798:	mov    BYTE PTR [ebp-0x4],0x1a
6401179c:	lea    ecx,[eax+0xc]
6401179f:	or     edx,0xffffffff
640117a2:	lock xadd DWORD PTR [ecx],edx
640117a6:	dec    edx
640117a7:	test   edx,edx
640117a9:	jg     0x640117b5
640117ab:	mov    ecx,DWORD PTR [eax]
640117ad:	mov    edx,DWORD PTR [ecx]
640117af:	push   eax
640117b0:	mov    eax,DWORD PTR [edx+0x4]
640117b3:	call   eax
640117b5:	mov    eax,DWORD PTR [ebp-0x10]
640117b8:	add    eax,0xfffffff0
640117bb:	mov    BYTE PTR [ebp-0x4],0xf
640117bf:	lea    ecx,[eax+0xc]
640117c2:	or     edx,0xffffffff
640117c5:	lock xadd DWORD PTR [ecx],edx
640117c9:	dec    edx
640117ca:	test   edx,edx
640117cc:	jg     0x640117d8
640117ce:	mov    ecx,DWORD PTR [eax]
640117d0:	mov    edx,DWORD PTR [ecx]
640117d2:	push   eax
640117d3:	mov    eax,DWORD PTR [edx+0x4]
640117d6:	call   eax
640117d8:	lea    ecx,[ebp-0x1c]
640117db:	push   0x1
640117dd:	push   ecx
640117de:	call   0x64004fa0
640117e3:	add    esp,0x8
640117e6:	mov    eax,DWORD PTR [eax]
640117e8:	mov    ecx,DWORD PTR [eax-0xc]
640117eb:	push   ecx
640117ec:	push   eax
640117ed:	mov    ecx,esi
640117ef:	mov    BYTE PTR [ebp-0x4],0x1d
640117f3:	call   0x64002950
640117f8:	mov    eax,DWORD PTR [ebp-0x1c]
640117fb:	add    eax,0xfffffff0
640117fe:	mov    BYTE PTR [ebp-0x4],0xf
64011802:	lea    edx,[eax+0xc]
64011805:	or     ecx,0xffffffff
64011808:	lock xadd DWORD PTR [edx],ecx
6401180c:	dec    ecx
6401180d:	test   ecx,ecx
6401180f:	jg     0x6401181b
64011811:	mov    ecx,DWORD PTR [eax]
64011813:	mov    edx,DWORD PTR [ecx]
64011815:	push   eax
64011816:	mov    eax,DWORD PTR [edx+0x4]
64011819:	call   eax
6401181b:	mov    eax,DWORD PTR [ebp-0x38]
6401181e:	xor    edi,edi
64011820:	cmp    eax,edi
64011822:	je     0x64011842
64011824:	mov    ecx,DWORD PTR [ebp-0x58]
64011827:	push   ecx
64011828:	mov    ecx,DWORD PTR [ebp-0x34]
6401182b:	lea    edx,[ebp-0x3c]
6401182e:	push   edx
6401182f:	push   ecx
64011830:	push   eax
64011831:	call   0x6400ade0
64011836:	mov    edx,DWORD PTR [ebp-0x38]
64011839:	push   edx
6401183a:	call   0x64012262
6401183f:	add    esp,0x14
64011842:	mov    eax,DWORD PTR [ebp-0x24]
64011845:	add    eax,0xfffffff0
64011848:	mov    DWORD PTR [ebp-0x38],edi
6401184b:	mov    DWORD PTR [ebp-0x34],edi
6401184e:	mov    DWORD PTR [ebp-0x30],edi
64011851:	mov    BYTE PTR [ebp-0x4],0x6
64011855:	lea    ecx,[eax+0xc]
64011858:	or     edx,0xffffffff
6401185b:	lock xadd DWORD PTR [ecx],edx
6401185f:	dec    edx
64011860:	test   edx,edx
64011862:	jg     0x6401186e
64011864:	mov    ecx,DWORD PTR [eax]
64011866:	mov    edx,DWORD PTR [ecx]
64011868:	push   eax
64011869:	mov    eax,DWORD PTR [edx+0x4]
6401186c:	call   eax
6401186e:	mov    eax,DWORD PTR [ebp-0x48]
64011871:	add    eax,0xfffffff0
64011874:	mov    BYTE PTR [ebp-0x4],0x5
64011878:	lea    ecx,[eax+0xc]
6401187b:	or     edx,0xffffffff
6401187e:	lock xadd DWORD PTR [ecx],edx
64011882:	dec    edx
64011883:	test   edx,edx
64011885:	jg     0x64011891
64011887:	mov    ecx,DWORD PTR [eax]
64011889:	mov    edx,DWORD PTR [ecx]
6401188b:	push   eax
6401188c:	mov    eax,DWORD PTR [edx+0x4]
6401188f:	call   eax
64011891:	mov    eax,DWORD PTR [ebp-0x28]
64011894:	add    eax,0xfffffff0
64011897:	mov    BYTE PTR [ebp-0x4],0x2
6401189b:	lea    ecx,[eax+0xc]
6401189e:	or     edx,0xffffffff
640118a1:	lock xadd DWORD PTR [ecx],edx
640118a5:	dec    edx
640118a6:	test   edx,edx
640118a8:	jg     0x640118b4
640118aa:	mov    ecx,DWORD PTR [eax]
640118ac:	mov    edx,DWORD PTR [ecx]
640118ae:	push   eax
640118af:	mov    eax,DWORD PTR [edx+0x4]
640118b2:	call   eax
640118b4:	mov    eax,DWORD PTR [ebp-0x54]
640118b7:	add    eax,0xfffffff0
640118ba:	mov    BYTE PTR [ebp-0x4],0x1
640118be:	lea    ecx,[eax+0xc]
640118c1:	or     edx,0xffffffff
640118c4:	lock xadd DWORD PTR [ecx],edx
640118c8:	dec    edx
640118c9:	test   edx,edx
640118cb:	jg     0x640118d7
640118cd:	mov    ecx,DWORD PTR [eax]
640118cf:	mov    edx,DWORD PTR [ecx]
640118d1:	push   eax
640118d2:	mov    eax,DWORD PTR [edx+0x4]
640118d5:	call   eax
640118d7:	mov    eax,DWORD PTR [ebp-0x4c]
640118da:	add    eax,0xfffffff0
640118dd:	mov    BYTE PTR [ebp-0x4],0x0
640118e1:	lea    ecx,[eax+0xc]
640118e4:	or     edx,0xffffffff
640118e7:	lock xadd DWORD PTR [ecx],edx
640118eb:	dec    edx
640118ec:	test   edx,edx
640118ee:	jg     0x640118fa
640118f0:	mov    ecx,DWORD PTR [eax]
640118f2:	mov    edx,DWORD PTR [ecx]
640118f4:	push   eax
640118f5:	mov    eax,DWORD PTR [edx+0x4]
640118f8:	call   eax
640118fa:	mov    eax,esi
640118fc:	lea    esp,[ebp-0xac]
64011902:	mov    ecx,DWORD PTR [ebp-0xc]
64011905:	mov    DWORD PTR fs:0x0,ecx
6401190c:	pop    ecx
6401190d:	pop    edi
6401190e:	pop    esi
6401190f:	pop    ebx
64011910:	mov    ecx,DWORD PTR [ebp+0x124]
64011916:	xor    ecx,ebp
64011918:	call   0x64012abc
6401191d:	add    ebp,0x128
64011923:	mov    esp,ebp
64011925:	pop    ebp
64011926:	ret    
64011927:	int3   
64011928:	int3   
64011929:	int3   
6401192a:	int3   
6401192b:	int3   
6401192c:	int3   
6401192d:	int3   
6401192e:	int3   
6401192f:	int3   
64011930:	push   ebp
64011931:	mov    ebp,esp
64011933:	push   0xffffffff
64011935:	push   0x640223f8
6401193a:	mov    eax,fs:0x0
64011940:	push   eax
64011941:	sub    esp,0x50
64011944:	mov    eax,ds:0x6402d09c
64011949:	xor    eax,ebp
6401194b:	mov    DWORD PTR [ebp-0x10],eax
6401194e:	push   ebx
6401194f:	push   esi
64011950:	push   edi
64011951:	push   eax
64011952:	lea    eax,[ebp-0xc]
64011955:	mov    fs:0x0,eax
6401195b:	call   DWORD PTR ds:0x6402d06c
64011961:	push   0xea60
64011966:	mov    DWORD PTR [ebp-0x3c],eax
64011969:	call   0x6400f900
6401196e:	add    esp,0x4
64011971:	mov    DWORD PTR [ebp-0x34],0x0
64011978:	lea    eax,[ebp-0x30]
6401197b:	push   eax
6401197c:	call   0x64010d90
64011981:	add    esp,0x4
64011984:	xor    esi,esi
64011986:	mov    DWORD PTR [ebp-0x4],esi
64011989:	mov    DWORD PTR [ebp-0x14],0xf
64011990:	mov    DWORD PTR [ebp-0x18],esi
64011993:	mov    BYTE PTR [ebp-0x28],0x0
64011997:	mov    eax,DWORD PTR [ebp-0x30]
6401199a:	cmp    eax,esi
6401199c:	mov    BYTE PTR [ebp-0x4],0x1
640119a0:	mov    ebx,eax
640119a2:	jne    0x640119a8
640119a4:	xor    ecx,ecx
640119a6:	jmp    0x640119ef
640119a8:	push   eax
640119a9:	call   DWORD PTR ds:0x64025054
640119af:	add    eax,0x1
640119b2:	cmp    eax,0x3fffffff
640119b7:	jg     0x640119e9
640119b9:	lea    edi,[eax+eax*1]
640119bc:	mov    eax,edi
640119be:	call   0x64013240
640119c3:	mov    esi,esp
640119c5:	test   esi,esi
640119c7:	je     0x640119e9
640119c9:	mov    ecx,DWORD PTR [ebp-0x3c]
640119cc:	push   0x0
640119ce:	push   0x0
640119d0:	push   edi
640119d1:	push   esi
640119d2:	push   0xffffffff
640119d4:	push   ebx
640119d5:	push   0x0
640119d7:	push   ecx
640119d8:	mov    BYTE PTR [esi],0x0
640119db:	call   DWORD PTR ds:0x64025028
640119e1:	neg    eax
640119e3:	sbb    eax,eax
640119e5:	and    eax,esi
640119e7:	jmp    0x640119eb
640119e9:	xor    eax,eax
640119eb:	mov    ecx,eax
640119ed:	xor    esi,esi
640119ef:	mov    eax,ecx
640119f1:	mov    DWORD PTR [ebp-0x48],esi
640119f4:	mov    DWORD PTR [ebp-0x44],0xf
640119fb:	mov    BYTE PTR [ebp-0x58],0x0
640119ff:	lea    esi,[eax+0x1]
64011a02:	mov    dl,BYTE PTR [eax]
64011a04:	add    eax,0x1
64011a07:	test   dl,dl
64011a09:	jne    0x64011a02
64011a0b:	sub    eax,esi
64011a0d:	push   eax
64011a0e:	push   ecx
64011a0f:	lea    ecx,[ebp-0x5c]
64011a12:	call   0x64001860
64011a17:	lea    edx,[ebp-0x2c]
64011a1a:	push   edx
64011a1b:	lea    eax,[ebp-0x5c]
64011a1e:	push   eax
64011a1f:	mov    BYTE PTR [ebp-0x4],0x2
64011a23:	call   0x64010ae0
64011a28:	mov    edi,0x10
64011a2d:	add    esp,0x8
64011a30:	cmp    DWORD PTR [ebp-0x44],edi
64011a33:	mov    bl,al
64011a35:	mov    BYTE PTR [ebp-0x4],0x1
64011a39:	jb     0x64011a47
64011a3b:	mov    ecx,DWORD PTR [ebp-0x58]
64011a3e:	push   ecx
64011a3f:	call   0x64012262
64011a44:	add    esp,0x4
64011a47:	test   bl,bl
64011a49:	jne    0x64011adc
64011a4f:	xor    ebx,ebx
64011a51:	xor    esi,esi
64011a53:	lea    edx,[ebp-0x38]
64011a56:	push   ebx
64011a57:	push   edx
64011a58:	mov    DWORD PTR [ebp-0x38],ebx
64011a5b:	call   0x6400d9e0
64011a60:	call   eax
64011a62:	test   eax,eax
64011a64:	je     0x64011a74
64011a66:	add    esi,0x3e8
64011a6c:	cmp    esi,0x493e0
64011a72:	ja     0x64011a81
64011a74:	push   0x3e8
64011a79:	call   DWORD PTR ds:0x64025050
64011a7f:	jmp    0x64011a53
64011a81:	cmp    DWORD PTR [ebp-0x14],edi
64011a84:	jb     0x64011a92
64011a86:	mov    eax,DWORD PTR [ebp-0x28]
64011a89:	push   eax
64011a8a:	call   0x64012262
64011a8f:	add    esp,0x4
64011a92:	mov    eax,DWORD PTR [ebp-0x30]
64011a95:	add    eax,0xfffffff0
64011a98:	mov    DWORD PTR [ebp-0x14],0xf
64011a9f:	mov    DWORD PTR [ebp-0x18],ebx
64011aa2:	mov    BYTE PTR [ebp-0x28],0x0
64011aa6:	mov    DWORD PTR [ebp-0x4],0xffffffff
64011aad:	lea    ecx,[eax+0xc]
64011ab0:	or     edx,0xffffffff
64011ab3:	lock xadd DWORD PTR [ecx],edx
64011ab7:	dec    edx
64011ab8:	test   edx,edx
64011aba:	jg     0x64011ac6
64011abc:	mov    ecx,DWORD PTR [eax]
64011abe:	mov    edx,DWORD PTR [ecx]
64011ac0:	push   eax
64011ac1:	mov    eax,DWORD PTR [edx+0x4]
64011ac4:	call   eax
64011ac6:	mov    eax,DWORD PTR [ebp-0x34]
64011ac9:	add    eax,0x1
64011acc:	cmp    eax,0x3
64011acf:	mov    DWORD PTR [ebp-0x34],eax
64011ad2:	jne    0x64011978
64011ad8:	xor    ebx,ebx
64011ada:	jmp    0x64011b34
64011adc:	xor    ebx,ebx
64011ade:	cmp    DWORD PTR [ebp-0x18],ebx
64011ae1:	je     0x64011aef
64011ae3:	lea    ecx,[ebp-0x2c]
64011ae6:	push   ecx
64011ae7:	call   0x64010470
64011aec:	add    esp,0x4
64011aef:	cmp    DWORD PTR [ebp-0x14],edi
64011af2:	jb     0x64011b00
64011af4:	mov    edx,DWORD PTR [ebp-0x28]
64011af7:	push   edx
64011af8:	call   0x64012262
64011afd:	add    esp,0x4
64011b00:	mov    eax,DWORD PTR [ebp-0x30]
64011b03:	add    eax,0xfffffff0
64011b06:	mov    DWORD PTR [ebp-0x14],0xf
64011b0d:	mov    DWORD PTR [ebp-0x18],ebx
64011b10:	mov    BYTE PTR [ebp-0x28],0x0
64011b14:	mov    DWORD PTR [ebp-0x4],0xffffffff
64011b1b:	lea    ecx,[eax+0xc]
64011b1e:	or     edx,0xffffffff
64011b21:	lock xadd DWORD PTR [ecx],edx
64011b25:	dec    edx
64011b26:	test   edx,edx
64011b28:	jg     0x64011b34
64011b2a:	mov    ecx,DWORD PTR [eax]
64011b2c:	mov    edx,DWORD PTR [ecx]
64011b2e:	push   eax
64011b2f:	mov    eax,DWORD PTR [edx+0x4]
64011b32:	call   eax
64011b34:	xor    esi,esi
64011b36:	lea    ecx,[ebp-0x40]
64011b39:	push   ebx
64011b3a:	push   ecx
64011b3b:	mov    DWORD PTR [ebp-0x40],ebx
64011b3e:	call   0x6400d9e0
64011b43:	call   eax
64011b45:	test   eax,eax
64011b47:	je     0x64011b5b
64011b49:	add    esi,0x3e8
64011b4f:	cmp    esi,0xa4cb80
64011b55:	ja     0x64011971
64011b5b:	push   0x3e8
64011b60:	call   DWORD PTR ds:0x64025050
64011b66:	jmp    0x64011b36
64011b68:	int3   
64011b69:	int3   
64011b6a:	int3   
64011b6b:	int3   
64011b6c:	int3   
64011b6d:	int3   
64011b6e:	int3   
64011b6f:	int3   
64011b70:	sub    esp,0x20c
64011b76:	mov    eax,ds:0x6402d09c
64011b7b:	xor    eax,esp
64011b7d:	mov    DWORD PTR [esp+0x208],eax
64011b84:	push   0x208
64011b89:	lea    eax,[esp+0x4]
64011b8d:	push   eax
64011b8e:	push   0x0
64011b90:	call   DWORD PTR ds:0x64025074
64011b96:	test   eax,eax
64011b98:	je     0x64011be7
64011b9a:	lea    ecx,[esp]
64011b9d:	push   0x104
64011ba2:	push   ecx
64011ba3:	call   0x640131a1
64011ba8:	lea    edx,[esp+0x8]
64011bac:	push   0x64025a1c
64011bb1:	push   edx
64011bb2:	call   0x64012c01
64011bb7:	add    esp,0x10
64011bba:	test   eax,eax
64011bbc:	je     0x64011be7
64011bbe:	call   0x64010bd0
64011bc3:	test   al,al
64011bc5:	je     0x64011be7
64011bc7:	push   0x0
64011bc9:	push   0x0
64011bcb:	push   0x0
64011bcd:	push   0x64011930
64011bd2:	push   0x0
64011bd4:	push   0x0
64011bd6:	call   DWORD PTR ds:0x64025070
64011bdc:	test   eax,eax
64011bde:	je     0x64011be7
64011be0:	push   eax
64011be1:	call   DWORD PTR ds:0x64025040
64011be7:	mov    ecx,DWORD PTR [esp+0x208]
64011bee:	xor    ecx,esp
64011bf0:	xor    eax,eax
64011bf2:	call   0x64012abc
64011bf7:	add    esp,0x20c
64011bfd:	ret    0x4
64011c00:	push   0x0
64011c02:	push   0x0
64011c04:	push   0x0
64011c06:	push   0x64011b70
64011c0b:	push   0x0
64011c0d:	push   0x0
64011c0f:	call   DWORD PTR ds:0x64025070
64011c15:	ret    
64011c16:	push   ebp
64011c17:	mov    ebp,esp
64011c19:	sub    esp,0xc
64011c1c:	mov    eax,ds:0x6402d09c
64011c21:	xor    eax,ebp
64011c23:	mov    DWORD PTR [ebp-0x4],eax
64011c26:	push   esi
64011c27:	xor    esi,esi
64011c29:	call   DWORD PTR ds:0x640250f0
64011c2f:	push   0x7
64011c31:	lea    ecx,[ebp-0xc]
64011c34:	push   ecx
64011c35:	push   0x1004
64011c3a:	push   eax
64011c3b:	call   DWORD PTR ds:0x640250ec
64011c41:	test   eax,eax
64011c43:	je     0x64011c64
64011c45:	mov    cl,BYTE PTR [ebp-0xc]
64011c48:	test   cl,cl
64011c4a:	lea    eax,[ebp-0xc]
64011c4d:	je     0x64011c64
64011c4f:	imul   esi,esi,0xa
64011c52:	movsx  ecx,cl
64011c55:	inc    eax
64011c56:	lea    esi,[esi+ecx*1-0x30]
64011c5a:	mov    cl,BYTE PTR [eax]
64011c5c:	test   cl,cl
64011c5e:	jne    0x64011c4f
64011c60:	test   esi,esi
64011c62:	jne    0x64011c6c
64011c64:	call   DWORD PTR ds:0x640250e8
64011c6a:	mov    esi,eax
64011c6c:	mov    ecx,DWORD PTR [ebp-0x4]
64011c6f:	mov    eax,esi
64011c71:	xor    ecx,ebp
64011c73:	pop    esi
64011c74:	call   0x64012abc
64011c79:	leave  
64011c7a:	ret    
64011c7b:	push   0x3
64011c7d:	pop    eax
64011c7e:	ret    
64011c7f:	push   ebp
64011c80:	mov    ebp,esp
64011c82:	sub    esp,0x98
64011c88:	mov    eax,ds:0x6402d09c
64011c8d:	xor    eax,ebp
64011c8f:	mov    DWORD PTR [ebp-0x4],eax
64011c92:	lea    eax,[ebp-0x98]
64011c98:	push   eax
64011c99:	mov    DWORD PTR [ebp-0x98],0x94
64011ca3:	call   DWORD PTR ds:0x640250f4
64011ca9:	cmp    DWORD PTR [ebp-0x88],0x2
64011cb0:	jne    0x64011cc0
64011cb2:	cmp    DWORD PTR [ebp-0x94],0x5
64011cb9:	mov    eax,0x64011c7b
64011cbe:	jae    0x64011cc5
64011cc0:	mov    eax,0x64011c16
64011cc5:	push   eax
64011cc6:	push   0x6402d06c
64011ccb:	call   DWORD PTR ds:0x640250e4
64011cd1:	call   DWORD PTR ds:0x6402d06c
64011cd7:	mov    ecx,DWORD PTR [ebp-0x4]
64011cda:	xor    ecx,ebp
64011cdc:	call   0x64012abc
64011ce1:	leave  
64011ce2:	ret    
64011ce3:	push   esi
64011ce4:	mov    esi,ecx
64011ce6:	mov    eax,DWORD PTR [esi]
64011ce8:	test   eax,eax
64011cea:	je     0x64011cf6
64011cec:	push   eax
64011ced:	call   0x64013956
64011cf2:	and    DWORD PTR [esi],0x0
64011cf5:	pop    ecx
64011cf6:	and    DWORD PTR [esi+0x4],0x0
64011cfa:	and    DWORD PTR [esi+0x8],0x0
64011cfe:	pop    esi
64011cff:	ret    
64011d00:	push   esi
64011d01:	push   0x18
64011d03:	mov    esi,ecx
64011d05:	push   0x0
64011d07:	push   esi
64011d08:	call   0x640131c0
64011d0d:	add    esp,0xc
64011d10:	mov    eax,esi
64011d12:	pop    esi
64011d13:	ret    
64011d14:	push   0xc
64011d16:	push   0x6402a4b8
64011d1b:	call   0x64014080
64011d20:	and    DWORD PTR [ebp-0x4],0x0
64011d24:	push   ecx
64011d25:	call   DWORD PTR ds:0x6402501c
64011d2b:	and    DWORD PTR [ebp-0x1c],0x0
64011d2f:	jmp    0x64011d4f
64011d31:	mov    eax,DWORD PTR [ebp-0x14]
64011d34:	mov    eax,DWORD PTR [eax]
64011d36:	mov    eax,DWORD PTR [eax]
64011d38:	xor    ecx,ecx
64011d3a:	cmp    eax,0xc0000017
64011d3f:	sete   cl
64011d42:	mov    eax,ecx
64011d44:	ret    
64011d45:	mov    esp,DWORD PTR [ebp-0x18]
64011d48:	mov    DWORD PTR [ebp-0x1c],0x8007000e
64011d4f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011d56:	mov    eax,DWORD PTR [ebp-0x1c]
64011d59:	call   0x640140c5
64011d5e:	ret    
64011d5f:	mov    eax,DWORD PTR [esp+0x4]
64011d63:	test   eax,eax
64011d65:	jne    0x64011d6e
64011d67:	mov    eax,0x80070057
64011d6c:	jmp    0x64011d7f
64011d6e:	cmp    DWORD PTR [eax],0x2c
64011d71:	jne    0x64011d67
64011d73:	and    DWORD PTR [eax+0x1c],0x0
64011d77:	lea    ecx,[eax+0x4]
64011d7a:	call   0x64011d14
64011d7f:	ret    0x4
64011d82:	mov    eax,DWORD PTR [esp+0x4]
64011d86:	test   eax,eax
64011d88:	jl     0x64011d97
64011d8a:	cmp    eax,DWORD PTR [ecx+0x4]
64011d8d:	jge    0x64011d97
64011d8f:	mov    ecx,DWORD PTR [ecx]
64011d91:	lea    eax,[ecx+eax*2]
64011d94:	ret    0x4
64011d97:	push   0x0
64011d99:	push   0x0
64011d9b:	push   0x1
64011d9d:	push   0xc000008c
64011da2:	call   DWORD PTR ds:0x640250f8
64011da8:	int3   
64011da9:	mov    eax,DWORD PTR [esp+0x4]
64011dad:	test   eax,eax
64011daf:	jl     0x64011dbe
64011db1:	cmp    eax,DWORD PTR [ecx+0x4]
64011db4:	jge    0x64011dbe
64011db6:	mov    ecx,DWORD PTR [ecx]
64011db8:	lea    eax,[ecx+eax*4]
64011dbb:	ret    0x4
64011dbe:	push   0x0
64011dc0:	push   0x0
64011dc2:	push   0x1
64011dc4:	push   0xc000008c
64011dc9:	call   DWORD PTR ds:0x640250f8
64011dcf:	int3   
64011dd0:	push   esi
64011dd1:	mov    esi,ecx
64011dd3:	lea    ecx,[esi+0x4]
64011dd6:	call   0x64011d00
64011ddb:	xor    eax,eax
64011ddd:	mov    DWORD PTR [esi+0x20],eax
64011de0:	mov    DWORD PTR [esi+0x24],eax
64011de3:	mov    DWORD PTR [esi+0x28],eax
64011de6:	mov    eax,esi
64011de8:	pop    esi
64011de9:	ret    
64011dea:	push   esi
64011deb:	mov    esi,DWORD PTR [esp+0x8]
64011def:	test   esi,esi
64011df1:	jne    0x64011dfa
64011df3:	mov    eax,0x80070057
64011df8:	jmp    0x64011e46
64011dfa:	mov    eax,DWORD PTR [esi]
64011dfc:	test   eax,eax
64011dfe:	je     0x64011e44
64011e00:	cmp    eax,0x2c
64011e03:	jne    0x64011df3
64011e05:	push   edi
64011e06:	xor    edi,edi
64011e08:	cmp    DWORD PTR [esi+0x24],edi
64011e0b:	jle    0x64011e2e
64011e0d:	push   ebx
64011e0e:	lea    ebx,[esi+0x20]
64011e11:	push   edi
64011e12:	mov    ecx,ebx
64011e14:	call   0x64011d82
64011e19:	movzx  eax,WORD PTR [eax]
64011e1c:	push   DWORD PTR [esp+0x14]
64011e20:	push   eax
64011e21:	call   DWORD PTR ds:0x640251b8
64011e27:	inc    edi
64011e28:	cmp    edi,DWORD PTR [esi+0x24]
64011e2b:	jl     0x64011e11
64011e2d:	pop    ebx
64011e2e:	lea    ecx,[esi+0x20]
64011e31:	call   0x64011ce3
64011e36:	lea    eax,[esi+0x4]
64011e39:	push   eax
64011e3a:	call   DWORD PTR ds:0x640250a0
64011e40:	and    DWORD PTR [esi],0x0
64011e43:	pop    edi
64011e44:	xor    eax,eax
64011e46:	pop    esi
64011e47:	ret    0x8
64011e4a:	push   esi
64011e4b:	mov    esi,ecx
64011e4d:	cmp    BYTE PTR [esi+0x4],0x0
64011e51:	je     0x64011e5f
64011e53:	push   DWORD PTR [esi]
64011e55:	call   DWORD PTR ds:0x6402509c
64011e5b:	mov    BYTE PTR [esi+0x4],0x0
64011e5f:	pop    esi
64011e60:	ret    
64011e61:	push   esi
64011e62:	mov    esi,ecx
64011e64:	lea    ecx,[esi+0x18]
64011e67:	call   0x64011d00
64011e6c:	xor    eax,eax
64011e6e:	mov    DWORD PTR [esi+0x30],eax
64011e71:	mov    DWORD PTR [esi+0x34],eax
64011e74:	mov    DWORD PTR [esi+0x38],eax
64011e77:	mov    eax,esi
64011e79:	pop    esi
64011e7a:	ret    
64011e7b:	push   esi
64011e7c:	mov    esi,ecx
64011e7e:	lea    eax,[esi+0x18]
64011e81:	push   eax
64011e82:	call   DWORD PTR ds:0x640250a0
64011e88:	lea    ecx,[esi+0x30]
64011e8b:	pop    esi
64011e8c:	jmp    0x64011ce3
64011e91:	push   ebp
64011e92:	mov    ebp,esp
64011e94:	push   ecx
64011e95:	push   ecx
64011e96:	push   esi
64011e97:	mov    esi,ecx
64011e99:	lea    eax,[esi+0x18]
64011e9c:	push   eax
64011e9d:	mov    DWORD PTR [ebp-0x8],eax
64011ea0:	call   DWORD PTR ds:0x64025098
64011ea6:	mov    eax,DWORD PTR [esi+0x34]
64011ea9:	mov    ecx,DWORD PTR [ebp+0x8]
64011eac:	cmp    ecx,eax
64011eae:	mov    BYTE PTR [ebp-0x4],0x1
64011eb2:	jg     0x64011ed8
64011eb4:	test   ecx,ecx
64011eb6:	jl     0x64011ed8
64011eb8:	cmp    ecx,eax
64011eba:	jne    0x64011ecb
64011ebc:	mov    esi,DWORD PTR [esi+0x8]
64011ebf:	lea    ecx,[ebp-0x8]
64011ec2:	call   0x64011e4a
64011ec7:	mov    eax,esi
64011ec9:	jmp    0x64011ee2
64011ecb:	push   ecx
64011ecc:	lea    ecx,[esi+0x30]
64011ecf:	call   0x64011da9
64011ed4:	mov    esi,DWORD PTR [eax]
64011ed6:	jmp    0x64011ebf
64011ed8:	lea    ecx,[ebp-0x8]
64011edb:	call   0x64011e4a
64011ee0:	xor    eax,eax
64011ee2:	pop    esi
64011ee3:	leave  
64011ee4:	ret    0x4
64011ee7:	push   esi
64011ee8:	mov    esi,ecx
64011eea:	call   0x64011dd0
64011eef:	push   esi
64011ef0:	mov    DWORD PTR [esi],0x2c
64011ef6:	call   0x64011d5f
64011efb:	test   eax,eax
64011efd:	jge    0x64011f09
64011eff:	mov    BYTE PTR ds:0x6403131c,0x1
64011f06:	and    DWORD PTR [esi],0x0
64011f09:	mov    eax,esi
64011f0b:	pop    esi
64011f0c:	ret    
64011f0d:	push   ebp
64011f0e:	lea    ebp,[esp-0x78]
64011f12:	sub    esp,0x98
64011f18:	mov    eax,ds:0x6402d09c
64011f1d:	xor    eax,ebp
64011f1f:	mov    DWORD PTR [ebp+0x74],eax
64011f22:	push   esi
64011f23:	mov    esi,ecx
64011f25:	call   0x64011e61
64011f2a:	mov    eax,0x64000000
64011f2f:	push   0x94
64011f34:	mov    DWORD PTR [esi+0x8],eax
64011f37:	mov    DWORD PTR [esi+0x4],eax
64011f3a:	lea    eax,[ebp-0x20]
64011f3d:	push   0x0
64011f3f:	push   eax
64011f40:	mov    DWORD PTR [esi],0x3c
64011f46:	mov    BYTE PTR [esi+0xc],0x0
64011f4a:	call   0x640131c0
64011f4f:	add    esp,0xc
64011f52:	lea    eax,[ebp-0x20]
64011f55:	push   eax
64011f56:	mov    DWORD PTR [ebp-0x20],0x94
64011f5d:	call   DWORD PTR ds:0x640250f4
64011f63:	cmp    DWORD PTR [ebp-0x10],0x2
64011f67:	jne    0x64011f71
64011f69:	cmp    DWORD PTR [ebp-0x1c],0x5
64011f6d:	jb     0x64011f89
64011f6f:	jmp    0x64011f85
64011f71:	cmp    DWORD PTR [ebp-0x10],0x1
64011f75:	jne    0x64011f89
64011f77:	cmp    DWORD PTR [ebp-0x1c],0x4
64011f7b:	ja     0x64011f85
64011f7d:	jne    0x64011f89
64011f7f:	cmp    DWORD PTR [ebp-0x18],0x0
64011f83:	jbe    0x64011f89
64011f85:	mov    BYTE PTR [esi+0xc],0x1
64011f89:	lea    ecx,[esi+0x18]
64011f8c:	mov    DWORD PTR [esi+0x10],0x800
64011f93:	mov    DWORD PTR [esi+0x14],0x64025c34
64011f9a:	call   0x64011d14
64011f9f:	test   eax,eax
64011fa1:	jge    0x64011faa
64011fa3:	mov    BYTE PTR ds:0x6403131c,0x1
64011faa:	mov    ecx,DWORD PTR [ebp+0x74]
64011fad:	mov    eax,esi
64011faf:	xor    ecx,ebp
64011fb1:	pop    esi
64011fb2:	call   0x64012abc
64011fb7:	add    ebp,0x78
64011fba:	leave  
64011fbb:	ret    
64011fbc:	push   esi
64011fbd:	push   DWORD PTR ds:0x6402e4d0
64011fc3:	mov    esi,ecx
64011fc5:	push   esi
64011fc6:	call   0x64011dea
64011fcb:	lea    ecx,[esi+0x20]
64011fce:	pop    esi
64011fcf:	jmp    0x64011ce3
64011fd4:	cmp    BYTE PTR [ecx+0x8],0x0
64011fd8:	mov    DWORD PTR [ecx],0x64025c44
64011fde:	je     0x64011fee
64011fe0:	mov    ecx,DWORD PTR [ecx+0x4]
64011fe3:	test   ecx,ecx
64011fe5:	je     0x64011fee
64011fe7:	push   ecx
64011fe8:	call   DWORD PTR ds:0x640250fc
64011fee:	ret    
64011fef:	push   DWORD PTR [esp+0x4]
64011ff3:	push   0x0
64011ff5:	push   DWORD PTR [ecx+0x4]
64011ff8:	call   DWORD PTR ds:0x64025100
64011ffe:	ret    0x4
64012001:	cmp    DWORD PTR [esp+0x4],0x0
64012006:	je     0x64012017
64012008:	push   DWORD PTR [esp+0x4]
6401200c:	push   0x0
6401200e:	push   DWORD PTR [ecx+0x4]
64012011:	call   DWORD PTR ds:0x64025104
64012017:	ret    0x4
6401201a:	push   ebp
6401201b:	mov    ebp,esp
6401201d:	xor    eax,eax
6401201f:	cmp    DWORD PTR [ebp+0x8],eax
64012022:	jne    0x6401202d
64012024:	push   DWORD PTR [ebp+0xc]
64012027:	mov    eax,DWORD PTR [ecx]
64012029:	call   DWORD PTR [eax]
6401202b:	jmp    0x6401204e
6401202d:	cmp    DWORD PTR [ebp+0xc],eax
64012030:	jne    0x6401203e
64012032:	push   DWORD PTR [ebp+0x8]
64012035:	mov    eax,DWORD PTR [ecx]
64012037:	call   DWORD PTR [eax+0x4]
6401203a:	xor    eax,eax
6401203c:	jmp    0x6401204e
6401203e:	push   DWORD PTR [ebp+0xc]
64012041:	push   DWORD PTR [ebp+0x8]
64012044:	push   eax
64012045:	push   DWORD PTR [ecx+0x4]
64012048:	call   DWORD PTR ds:0x64025108
6401204e:	pop    ebp
6401204f:	ret    0x8
64012052:	push   DWORD PTR [esp+0x4]
64012056:	push   0x0
64012058:	push   DWORD PTR [ecx+0x4]
6401205b:	call   DWORD PTR ds:0x6402510c
64012061:	ret    0x4
64012064:	push   esi
64012065:	mov    esi,ecx
64012067:	call   0x64011fd4
6401206c:	test   BYTE PTR [esp+0x8],0x1
64012071:	je     0x6401207a
64012073:	push   esi
64012074:	call   0x64012262
64012079:	pop    ecx
6401207a:	mov    eax,esi
6401207c:	pop    esi
6401207d:	ret    0x4
64012080:	mov    eax,ecx
64012082:	mov    ecx,DWORD PTR [esp+0x4]
64012086:	mov    DWORD PTR [eax+0x4],ecx
64012089:	mov    DWORD PTR [eax],0x64025c58
6401208f:	xor    ecx,ecx
64012091:	mov    DWORD PTR [eax+0x14],0x2
64012098:	mov    DWORD PTR [eax+0xc],ecx
6401209b:	mov    DWORD PTR [eax+0x10],ecx
6401209e:	mov    WORD PTR [eax+0x18],cx
640120a2:	mov    WORD PTR [eax+0x1a],cx
640120a6:	mov    DWORD PTR [eax+0x8],eax
640120a9:	ret    0x4
640120ac:	mov    eax,DWORD PTR [esp+0x8]
640120b0:	mul    DWORD PTR [esp+0xc]
640120b4:	test   edx,edx
640120b6:	ja     0x640120bd
640120b8:	cmp    eax,0xffffffff
640120bb:	jbe    0x640120c3
640120bd:	mov    eax,0x80070057
640120c2:	ret    
640120c3:	mov    ecx,DWORD PTR [esp+0x4]
640120c7:	mov    DWORD PTR [ecx],eax
640120c9:	xor    eax,eax
640120cb:	ret    
640120cc:	mov    ecx,DWORD PTR [ecx+0x4]
640120cf:	mov    eax,DWORD PTR [ecx]
640120d1:	jmp    DWORD PTR [eax+0x4]
640120d4:	xor    edx,edx
640120d6:	lea    eax,[ecx+0x14]
640120d9:	inc    edx
640120da:	lock xadd DWORD PTR [eax],edx
640120de:	lea    eax,[ecx+0x8]
640120e1:	ret    
640120e2:	mov    eax,ecx
640120e4:	ret    
640120e5:	test   BYTE PTR [esp+0x4],0x1
640120ea:	push   esi
640120eb:	mov    esi,ecx
640120ed:	mov    DWORD PTR [esi],0x64025c58
640120f3:	je     0x640120fc
640120f5:	push   esi
640120f6:	call   0x64012262
640120fb:	pop    ecx
640120fc:	mov    eax,esi
640120fe:	pop    esi
640120ff:	ret    0x4
64012102:	mov    eax,DWORD PTR [esp+0x8]
64012106:	mov    ecx,DWORD PTR [esp+0xc]
6401210a:	or     edx,0xffffffff
6401210d:	sub    edx,eax
6401210f:	cmp    edx,ecx
64012111:	jae    0x64012119
64012113:	mov    eax,0x80070057
64012118:	ret    
64012119:	add    eax,ecx
6401211b:	mov    ecx,DWORD PTR [esp+0x4]
6401211f:	mov    DWORD PTR [ecx],eax
64012121:	xor    eax,eax
64012123:	ret    
64012124:	push   ebp
64012125:	mov    ebp,esp
64012127:	push   esi
64012128:	mov    esi,DWORD PTR [ebp+0x8]
6401212b:	push   edi
6401212c:	push   DWORD PTR [ebp+0xc]
6401212f:	add    esi,0x8
64012132:	and    esi,0xfffffff8
64012135:	lea    eax,[ebp+0x8]
64012138:	push   esi
64012139:	push   eax
6401213a:	mov    edi,ecx
6401213c:	call   0x640120ac
64012141:	add    esp,0xc
64012144:	test   eax,eax
64012146:	jl     0x6401217e
64012148:	push   DWORD PTR [ebp+0x8]
6401214b:	lea    eax,[ebp+0x8]
6401214e:	push   0x10
64012150:	push   eax
64012151:	call   0x64012102
64012156:	add    esp,0xc
64012159:	test   eax,eax
6401215b:	jl     0x6401217e
6401215d:	mov    ecx,DWORD PTR [edi+0x4]
64012160:	push   DWORD PTR [ebp+0x8]
64012163:	mov    eax,DWORD PTR [ecx]
64012165:	call   DWORD PTR [eax]
64012167:	test   eax,eax
64012169:	je     0x6401217e
6401216b:	dec    esi
6401216c:	and    DWORD PTR [eax+0x4],0x0
64012170:	mov    DWORD PTR [eax],edi
64012172:	mov    DWORD PTR [eax+0xc],0x1
64012179:	mov    DWORD PTR [eax+0x8],esi
6401217c:	jmp    0x64012180
6401217e:	xor    eax,eax
64012180:	pop    edi
64012181:	pop    esi
64012182:	pop    ebp
64012183:	ret    0x8
64012186:	push   ebp
64012187:	mov    ebp,esp
64012189:	push   esi
6401218a:	mov    esi,DWORD PTR [ebp+0xc]
6401218d:	push   edi
6401218e:	push   DWORD PTR [ebp+0x10]
64012191:	add    esi,0x8
64012194:	and    esi,0xfffffff8
64012197:	lea    eax,[ebp+0xc]
6401219a:	push   esi
6401219b:	push   eax
6401219c:	mov    edi,ecx
6401219e:	call   0x640120ac
640121a3:	add    esp,0xc
640121a6:	test   eax,eax
640121a8:	jl     0x640121d7
640121aa:	push   DWORD PTR [ebp+0xc]
640121ad:	lea    eax,[ebp+0xc]
640121b0:	push   0x10
640121b2:	push   eax
640121b3:	call   0x64012102
640121b8:	add    esp,0xc
640121bb:	test   eax,eax
640121bd:	jl     0x640121d7
640121bf:	push   DWORD PTR [ebp+0xc]
640121c2:	mov    ecx,DWORD PTR [edi+0x4]
640121c5:	push   DWORD PTR [ebp+0x8]
640121c8:	mov    eax,DWORD PTR [ecx]
640121ca:	call   DWORD PTR [eax+0x8]
640121cd:	test   eax,eax
640121cf:	je     0x640121d7
640121d1:	dec    esi
640121d2:	mov    DWORD PTR [eax+0x8],esi
640121d5:	jmp    0x640121d9
640121d7:	xor    eax,eax
640121d9:	pop    edi
640121da:	pop    esi
640121db:	pop    ebp
640121dc:	ret    0xc
640121df:	push   0x44
640121e1:	mov    eax,0x64022425
640121e6:	call   0x6401430b
640121eb:	push   0x64025c70
640121f0:	lea    ecx,[ebp-0x28]
640121f3:	call   0x64002680
640121f8:	and    DWORD PTR [ebp-0x4],0x0
640121fc:	lea    eax,[ebp-0x28]
640121ff:	push   eax
64012200:	lea    ecx,[ebp-0x50]
64012203:	call   0x64002c70
64012208:	push   0x6402abf0
6401220d:	lea    eax,[ebp-0x50]
64012210:	push   eax
64012211:	mov    DWORD PTR [ebp-0x50],0x6402531c
64012218:	call   0x640126ab
6401221d:	int3   
6401221e:	push   0x44
64012220:	mov    eax,0x64022448
64012225:	call   0x6401430b
6401222a:	push   0x64025c80
6401222f:	lea    ecx,[ebp-0x28]
64012232:	call   0x64002680
64012237:	and    DWORD PTR [ebp-0x4],0x0
6401223b:	lea    eax,[ebp-0x28]
6401223e:	push   eax
6401223f:	lea    ecx,[ebp-0x50]
64012242:	call   0x64002c70
64012247:	push   0x6402abb4
6401224c:	lea    eax,[ebp-0x50]
6401224f:	push   eax
64012250:	mov    DWORD PTR [ebp-0x50],0x64025328
64012257:	call   0x640126ab
6401225c:	int3   
6401225d:	jmp    0x64012641
64012262:	jmp    0x64013956
64012267:	push   ecx
64012268:	mov    DWORD PTR [ecx],0x64025c9c
6401226e:	call   0x64014374
64012273:	pop    ecx
64012274:	ret    
64012275:	push   esi
64012276:	mov    esi,ecx
64012278:	call   0x64012267
6401227d:	test   BYTE PTR [esp+0x8],0x1
64012282:	je     0x6401228b
64012284:	push   esi
64012285:	call   0x64012262
6401228a:	pop    ecx
6401228b:	mov    eax,esi
6401228d:	pop    esi
6401228e:	ret    0x4
64012291:	mov    eax,DWORD PTR [esp+0x4]
64012295:	add    ecx,0x9
64012298:	push   ecx
64012299:	add    eax,0x9
6401229c:	push   eax
6401229d:	call   0x640143f0
640122a2:	neg    eax
640122a4:	pop    ecx
640122a5:	sbb    eax,eax
640122a7:	pop    ecx
640122a8:	inc    eax
640122a9:	ret    0x4
640122ac:	mov    eax,ecx
640122ae:	and    DWORD PTR [eax+0x4],0x0
640122b2:	and    DWORD PTR [eax+0x8],0x0
640122b6:	mov    DWORD PTR [eax],0x64025ca4
640122bc:	ret    
640122bd:	push   ebx
640122be:	mov    ebx,DWORD PTR [esp+0x8]
640122c2:	push   esi
640122c3:	push   edi
640122c4:	mov    edi,ecx
640122c6:	mov    DWORD PTR [edi],0x64025ca4
640122cc:	mov    eax,DWORD PTR [ebx]
640122ce:	test   eax,eax
640122d0:	je     0x640122f8
640122d2:	push   eax
640122d3:	call   0x64014280
640122d8:	mov    esi,eax
640122da:	inc    esi
640122db:	push   esi
640122dc:	call   0x64013a33
640122e1:	test   eax,eax
640122e3:	pop    ecx
640122e4:	pop    ecx
640122e5:	mov    DWORD PTR [edi+0x4],eax
640122e8:	je     0x640122fc
640122ea:	push   DWORD PTR [ebx]
640122ec:	push   esi
640122ed:	push   eax
640122ee:	call   0x64014478
640122f3:	add    esp,0xc
640122f6:	jmp    0x640122fc
640122f8:	and    DWORD PTR [edi+0x4],0x0
640122fc:	mov    DWORD PTR [edi+0x8],0x1
64012303:	mov    eax,edi
64012305:	pop    edi
64012306:	pop    esi
64012307:	pop    ebx
64012308:	ret    0x4
6401230b:	mov    eax,ecx
6401230d:	mov    ecx,DWORD PTR [esp+0x4]
64012311:	mov    DWORD PTR [eax],0x64025ca4
64012317:	mov    ecx,DWORD PTR [ecx]
64012319:	and    DWORD PTR [eax+0x8],0x0
6401231d:	mov    DWORD PTR [eax+0x4],ecx
64012320:	ret    0x8
64012323:	push   ebx
64012324:	mov    ebx,DWORD PTR [esp+0x8]
64012328:	push   esi
64012329:	mov    esi,ecx
6401232b:	mov    DWORD PTR [esi],0x64025ca4
64012331:	mov    eax,DWORD PTR [ebx+0x8]
64012334:	mov    DWORD PTR [esi+0x8],eax
64012337:	test   eax,eax
64012339:	mov    eax,DWORD PTR [ebx+0x4]
6401233c:	push   edi
6401233d:	je     0x64012370
6401233f:	test   eax,eax
64012341:	je     0x6401236a
64012343:	push   eax
64012344:	call   0x64014280
64012349:	mov    edi,eax
6401234b:	inc    edi
6401234c:	push   edi
6401234d:	call   0x64013a33
64012352:	test   eax,eax
64012354:	pop    ecx
64012355:	pop    ecx
64012356:	mov    DWORD PTR [esi+0x4],eax
64012359:	je     0x64012373
6401235b:	push   DWORD PTR [ebx+0x4]
6401235e:	push   edi
6401235f:	push   eax
64012360:	call   0x64014478
64012365:	add    esp,0xc
64012368:	jmp    0x64012373
6401236a:	and    DWORD PTR [esi+0x4],0x0
6401236e:	jmp    0x64012373
64012370:	mov    DWORD PTR [esi+0x4],eax
64012373:	pop    edi
64012374:	mov    eax,esi
64012376:	pop    esi
64012377:	pop    ebx
64012378:	ret    0x4
6401237b:	cmp    DWORD PTR [ecx+0x8],0x0
6401237f:	mov    DWORD PTR [ecx],0x64025ca4
64012385:	je     0x64012390
64012387:	push   DWORD PTR [ecx+0x4]
6401238a:	call   0x64013956
6401238f:	pop    ecx
64012390:	ret    
64012391:	mov    eax,DWORD PTR [ecx+0x4]
64012394:	test   eax,eax
64012396:	jne    0x6401239d
64012398:	mov    eax,0x64025cac
6401239d:	ret    
6401239e:	push   esi
6401239f:	lea    eax,[esp+0x8]
640123a3:	push   eax
640123a4:	mov    esi,ecx
640123a6:	call   0x640122bd
640123ab:	mov    DWORD PTR [esi],0x64025cc4
640123b1:	mov    eax,esi
640123b3:	pop    esi
640123b4:	ret    0x4
640123b7:	push   esi
640123b8:	push   DWORD PTR [esp+0x8]
640123bc:	mov    esi,ecx
640123be:	call   0x64012323
640123c3:	mov    DWORD PTR [esi],0x64025cc4
640123c9:	mov    eax,esi
640123cb:	pop    esi
640123cc:	ret    0x4
640123cf:	mov    DWORD PTR [ecx],0x64025cc4
640123d5:	jmp    0x6401237b
640123da:	push   esi
640123db:	mov    esi,ecx
640123dd:	call   0x6401237b
640123e2:	test   BYTE PTR [esp+0x8],0x1
640123e7:	je     0x640123f0
640123e9:	push   esi
640123ea:	call   0x64012262
640123ef:	pop    ecx
640123f0:	mov    eax,esi
640123f2:	pop    esi
640123f3:	ret    0x4
640123f6:	push   esi
640123f7:	mov    esi,ecx
640123f9:	mov    DWORD PTR [esi],0x64025cc4
640123ff:	call   0x6401237b
64012404:	test   BYTE PTR [esp+0x8],0x1
64012409:	je     0x64012412
6401240b:	push   esi
6401240c:	call   0x64012262
64012411:	pop    ecx
64012412:	mov    eax,esi
64012414:	pop    esi
64012415:	ret    0x4
64012418:	push   ebp
64012419:	mov    ebp,esp
6401241b:	push   esi
6401241c:	mov    esi,DWORD PTR [ebp+0x14]
6401241f:	push   edi
64012420:	xor    edi,edi
64012422:	cmp    esi,edi
64012424:	jne    0x6401242a
64012426:	xor    eax,eax
64012428:	jmp    0x6401248f
6401242a:	cmp    DWORD PTR [ebp+0x8],edi
6401242d:	jne    0x6401244a
6401242f:	call   0x64014880
64012434:	push   0x16
64012436:	pop    esi
64012437:	mov    DWORD PTR [eax],esi
64012439:	push   edi
6401243a:	push   edi
6401243b:	push   edi
6401243c:	push   edi
6401243d:	push   edi
6401243e:	call   0x640125f4
64012443:	add    esp,0x14
64012446:	mov    eax,esi
64012448:	jmp    0x6401248f
6401244a:	cmp    DWORD PTR [ebp+0x10],edi
6401244d:	je     0x64012465
6401244f:	cmp    DWORD PTR [ebp+0xc],esi
64012452:	jb     0x64012465
64012454:	push   esi
64012455:	push   DWORD PTR [ebp+0x10]
64012458:	push   DWORD PTR [ebp+0x8]
6401245b:	call   0x640144e0
64012460:	add    esp,0xc
64012463:	jmp    0x64012426
64012465:	push   DWORD PTR [ebp+0xc]
64012468:	push   edi
64012469:	push   DWORD PTR [ebp+0x8]
6401246c:	call   0x640131c0
64012471:	add    esp,0xc
64012474:	cmp    DWORD PTR [ebp+0x10],edi
64012477:	je     0x6401242f
64012479:	cmp    DWORD PTR [ebp+0xc],esi
6401247c:	jae    0x6401248c
6401247e:	call   0x64014880
64012483:	push   0x22
64012485:	pop    ecx
64012486:	mov    DWORD PTR [eax],ecx
64012488:	mov    esi,ecx
6401248a:	jmp    0x64012439
6401248c:	push   0x16
6401248e:	pop    eax
6401248f:	pop    edi
64012490:	pop    esi
64012491:	pop    ebp
64012492:	ret    
64012493:	push   ebp
64012494:	mov    ebp,esp
64012496:	mov    eax,DWORD PTR [ebp+0x14]
64012499:	push   esi
6401249a:	push   edi
6401249b:	xor    edi,edi
6401249d:	cmp    eax,edi
6401249f:	je     0x640124e8
640124a1:	cmp    DWORD PTR [ebp+0x8],edi
640124a4:	jne    0x640124c1
640124a6:	call   0x64014880
640124ab:	push   0x16
640124ad:	pop    esi
640124ae:	mov    DWORD PTR [eax],esi
640124b0:	push   edi
640124b1:	push   edi
640124b2:	push   edi
640124b3:	push   edi
640124b4:	push   edi
640124b5:	call   0x640125f4
640124ba:	add    esp,0x14
640124bd:	mov    eax,esi
640124bf:	jmp    0x640124ea
640124c1:	cmp    DWORD PTR [ebp+0x10],edi
640124c4:	je     0x640124a6
640124c6:	cmp    DWORD PTR [ebp+0xc],eax
640124c9:	jae    0x640124d9
640124cb:	call   0x64014880
640124d0:	push   0x22
640124d2:	pop    ecx
640124d3:	mov    DWORD PTR [eax],ecx
640124d5:	mov    esi,ecx
640124d7:	jmp    0x640124b0
640124d9:	push   eax
640124da:	push   DWORD PTR [ebp+0x10]
640124dd:	push   DWORD PTR [ebp+0x8]
640124e0:	call   0x64013b00
640124e5:	add    esp,0xc
640124e8:	xor    eax,eax
640124ea:	pop    edi
640124eb:	pop    esi
640124ec:	pop    ebp
640124ed:	ret    
640124ee:	mov    eax,DWORD PTR [esp+0x4]
640124f2:	mov    ds:0x6402e55c,eax
640124f7:	ret    
640124f8:	push   ebp
640124f9:	lea    ebp,[esp-0x2a8]
64012500:	sub    esp,0x328
64012506:	mov    eax,ds:0x6402d09c
6401250b:	xor    eax,ebp
6401250d:	mov    DWORD PTR [ebp+0x2a4],eax
64012513:	push   esi
64012514:	mov    DWORD PTR [ebp+0x88],eax
6401251a:	mov    DWORD PTR [ebp+0x84],ecx
64012520:	mov    DWORD PTR [ebp+0x80],edx
64012526:	mov    DWORD PTR [ebp+0x7c],ebx
64012529:	mov    DWORD PTR [ebp+0x78],esi
6401252c:	mov    DWORD PTR [ebp+0x74],edi
6401252f:	data16 mov WORD PTR [ebp+0xa0],ss
64012536:	data16 mov WORD PTR [ebp+0x94],cs
6401253d:	data16 mov WORD PTR [ebp+0x70],ds
64012541:	data16 mov WORD PTR [ebp+0x6c],es
64012545:	data16 mov WORD PTR [ebp+0x68],fs
64012549:	data16 mov WORD PTR [ebp+0x64],gs
6401254d:	pushf  
6401254e:	pop    DWORD PTR [ebp+0x98]
64012554:	mov    esi,DWORD PTR [ebp+0x2ac]
6401255a:	lea    eax,[ebp+0x2ac]
64012560:	mov    DWORD PTR [ebp+0x9c],eax
64012566:	mov    DWORD PTR [ebp-0x28],0x10001
6401256d:	mov    DWORD PTR [ebp+0x90],esi
64012573:	mov    eax,DWORD PTR [eax-0x4]
64012576:	push   0x50
64012578:	mov    DWORD PTR [ebp+0x8c],eax
6401257e:	lea    eax,[ebp-0x80]
64012581:	push   0x0
64012583:	push   eax
64012584:	call   0x640131c0
64012589:	lea    eax,[ebp-0x80]
6401258c:	mov    DWORD PTR [ebp-0x30],eax
6401258f:	lea    eax,[ebp-0x28]
64012592:	add    esp,0xc
64012595:	mov    DWORD PTR [ebp-0x80],0xc000000d
6401259c:	mov    DWORD PTR [ebp-0x74],esi
6401259f:	mov    DWORD PTR [ebp-0x2c],eax
640125a2:	call   DWORD PTR ds:0x64025120
640125a8:	push   0x0
640125aa:	mov    esi,eax
640125ac:	call   DWORD PTR ds:0x6402511c
640125b2:	lea    eax,[ebp-0x30]
640125b5:	push   eax
640125b6:	call   DWORD PTR ds:0x64025118
640125bc:	test   eax,eax
640125be:	jne    0x640125cc
640125c0:	test   esi,esi
640125c2:	jne    0x640125cc
640125c4:	push   0x2
640125c6:	call   0x640148c4
640125cb:	pop    ecx
640125cc:	push   0xc000000d
640125d1:	call   DWORD PTR ds:0x64025048
640125d7:	push   eax
640125d8:	call   DWORD PTR ds:0x64025114
640125de:	mov    ecx,DWORD PTR [ebp+0x2a4]
640125e4:	xor    ecx,ebp
640125e6:	pop    esi
640125e7:	call   0x64012abc
640125ec:	add    ebp,0x2a8
640125f2:	leave  
640125f3:	ret    
640125f4:	push   ebp
640125f5:	mov    ebp,esp
640125f7:	push   DWORD PTR ds:0x6402e55c
640125fd:	call   0x640149af
64012602:	test   eax,eax
64012604:	pop    ecx
64012605:	je     0x6401260a
64012607:	pop    ebp
64012608:	jmp    eax
6401260a:	push   0x2
6401260c:	call   0x640148c4
64012611:	pop    ecx
64012612:	pop    ebp
64012613:	jmp    0x640124f8
64012618:	xor    eax,eax
6401261a:	push   eax
6401261b:	push   eax
6401261c:	push   eax
6401261d:	push   eax
6401261e:	push   eax
6401261f:	call   0x640125f4
64012624:	add    esp,0x14
64012627:	ret    
64012628:	push   esi
64012629:	push   0x1
6401262b:	push   0x6402d098
64012630:	mov    esi,ecx
64012632:	call   0x6401230b
64012637:	mov    DWORD PTR [esi],0x64025304
6401263d:	mov    eax,esi
6401263f:	pop    esi
64012640:	ret    
64012641:	push   ebp
64012642:	mov    ebp,esp
64012644:	sub    esp,0xc
64012647:	jmp    0x64012656
64012649:	push   DWORD PTR [ebp+0x8]
6401264c:	call   0x64014efb
64012651:	test   eax,eax
64012653:	pop    ecx
64012654:	je     0x64012665
64012656:	push   DWORD PTR [ebp+0x8]
64012659:	call   0x64013a33
6401265e:	test   eax,eax
64012660:	pop    ecx
64012661:	je     0x64012649
64012663:	leave  
64012664:	ret    
64012665:	test   BYTE PTR ds:0x6402e56c,0x1
6401266c:	mov    esi,0x6402e560
64012671:	jne    0x6401268c
64012673:	or     DWORD PTR ds:0x6402e56c,0x1
6401267a:	mov    ecx,esi
6401267c:	call   0x64012628
64012681:	push   0x6402409a
64012686:	call   0x64012bef
6401268b:	pop    ecx
6401268c:	push   esi
6401268d:	lea    ecx,[ebp-0xc]
64012690:	call   0x64012323
64012695:	push   0x6402ab24
6401269a:	lea    eax,[ebp-0xc]
6401269d:	push   eax
6401269e:	mov    DWORD PTR [ebp-0xc],0x64025304
640126a5:	call   0x640126ab
640126aa:	int3   
640126ab:	push   ebp
640126ac:	mov    ebp,esp
640126ae:	sub    esp,0x20
640126b1:	mov    eax,DWORD PTR [ebp+0x8]
640126b4:	push   esi
640126b5:	push   edi
640126b6:	push   0x8
640126b8:	pop    ecx
640126b9:	mov    esi,0x64025ccc
640126be:	lea    edi,[ebp-0x20]
640126c1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640126c3:	mov    DWORD PTR [ebp-0x8],eax
640126c6:	mov    eax,DWORD PTR [ebp+0xc]
640126c9:	test   eax,eax
640126cb:	pop    edi
640126cc:	mov    DWORD PTR [ebp-0x4],eax
640126cf:	pop    esi
640126d0:	je     0x640126de
640126d2:	test   BYTE PTR [eax],0x8
640126d5:	je     0x640126de
640126d7:	mov    DWORD PTR [ebp-0xc],0x1994000
640126de:	lea    eax,[ebp-0xc]
640126e1:	push   eax
640126e2:	push   DWORD PTR [ebp-0x10]
640126e5:	push   DWORD PTR [ebp-0x1c]
640126e8:	push   DWORD PTR [ebp-0x20]
640126eb:	call   DWORD PTR ds:0x640250f8
640126f1:	leave  
640126f2:	ret    0x8
640126f5:	push   ebp
640126f6:	mov    ebp,esp
640126f8:	push   ecx
640126f9:	push   ebx
640126fa:	mov    eax,DWORD PTR [ebp+0xc]
640126fd:	add    eax,0xc
64012700:	mov    DWORD PTR [ebp-0x4],eax
64012703:	mov    ebx,DWORD PTR fs:0x0
6401270a:	mov    eax,DWORD PTR [ebx]
6401270c:	mov    fs:0x0,eax
64012712:	mov    eax,DWORD PTR [ebp+0x8]
64012715:	mov    ebx,DWORD PTR [ebp+0xc]
64012718:	mov    ebp,DWORD PTR [ebp-0x4]
6401271b:	mov    esp,DWORD PTR [ebx-0x4]
6401271e:	jmp    eax
64012720:	pop    ebx
64012721:	leave  
64012722:	ret    0x8
64012725:	pop    eax
64012726:	pop    ecx
64012727:	xchg   DWORD PTR [esp],eax
6401272a:	jmp    eax
6401272c:	push   ebp
6401272d:	mov    ebp,esp
6401272f:	push   ecx
64012730:	push   ecx
64012731:	push   ebx
64012732:	push   esi
64012733:	push   edi
64012734:	mov    esi,DWORD PTR fs:0x0
6401273b:	mov    DWORD PTR [ebp-0x4],esi
6401273e:	mov    DWORD PTR [ebp-0x8],0x64012755
64012745:	push   0x0
64012747:	push   DWORD PTR [ebp+0xc]
6401274a:	push   DWORD PTR [ebp-0x8]
6401274d:	push   DWORD PTR [ebp+0x8]
64012750:	call   0x6401ed3c
64012755:	mov    eax,DWORD PTR [ebp+0xc]
64012758:	mov    eax,DWORD PTR [eax+0x4]
6401275b:	and    eax,0xfffffffd
6401275e:	mov    ecx,DWORD PTR [ebp+0xc]
64012761:	mov    DWORD PTR [ecx+0x4],eax
64012764:	mov    edi,DWORD PTR fs:0x0
6401276b:	mov    ebx,DWORD PTR [ebp-0x4]
6401276e:	mov    DWORD PTR [ebx],edi
64012770:	mov    DWORD PTR fs:0x0,ebx
64012777:	pop    edi
64012778:	pop    esi
64012779:	pop    ebx
6401277a:	leave  
6401277b:	ret    0x8
6401277e:	push   ebp
6401277f:	mov    ebp,esp
64012781:	sub    esp,0x8
64012784:	push   ebx
64012785:	push   esi
64012786:	push   edi
64012787:	cld    
64012788:	mov    DWORD PTR [ebp-0x4],eax
6401278b:	xor    eax,eax
6401278d:	push   eax
6401278e:	push   eax
6401278f:	push   eax
64012790:	push   DWORD PTR [ebp-0x4]
64012793:	push   DWORD PTR [ebp+0x14]
64012796:	push   DWORD PTR [ebp+0x10]
64012799:	push   DWORD PTR [ebp+0xc]
6401279c:	push   DWORD PTR [ebp+0x8]
6401279f:	call   0x64015ac3
640127a4:	add    esp,0x20
640127a7:	mov    DWORD PTR [ebp-0x8],eax
640127aa:	pop    edi
640127ab:	pop    esi
640127ac:	pop    ebx
640127ad:	mov    eax,DWORD PTR [ebp-0x8]
640127b0:	mov    esp,ebp
640127b2:	pop    ebp
640127b3:	ret    
640127b4:	push   esi
640127b5:	cld    
640127b6:	mov    esi,DWORD PTR [esp+0xc]
640127ba:	mov    ecx,DWORD PTR [esi+0x8]
640127bd:	xor    ecx,esi
640127bf:	call   0x64012abc
640127c4:	push   0x0
640127c6:	push   esi
640127c7:	push   DWORD PTR [esi+0x14]
640127ca:	push   DWORD PTR [esi+0xc]
640127cd:	push   0x0
640127cf:	push   DWORD PTR [esp+0x24]
640127d3:	push   DWORD PTR [esi+0x10]
640127d6:	push   DWORD PTR [esp+0x24]
640127da:	call   0x64015ac3
640127df:	add    esp,0x20
640127e2:	pop    esi
640127e3:	ret    
640127e4:	push   ebp
640127e5:	mov    ebp,esp
640127e7:	sub    esp,0x38
640127ea:	push   ebx
640127eb:	cmp    DWORD PTR [ebp+0x8],0x123
640127f2:	jne    0x64012806
640127f4:	mov    eax,0x6401288d
640127f9:	mov    ecx,DWORD PTR [ebp+0xc]
640127fc:	mov    DWORD PTR [ecx],eax
640127fe:	xor    eax,eax
64012800:	inc    eax
64012801:	jmp    0x640128b6
64012806:	and    DWORD PTR [ebp-0x28],0x0
6401280a:	mov    DWORD PTR [ebp-0x24],0x640128b9
64012811:	mov    eax,ds:0x6402d09c
64012816:	lea    ecx,[ebp-0x28]
64012819:	xor    eax,ecx
6401281b:	mov    DWORD PTR [ebp-0x20],eax
6401281e:	mov    eax,DWORD PTR [ebp+0x18]
64012821:	mov    DWORD PTR [ebp-0x1c],eax
64012824:	mov    eax,DWORD PTR [ebp+0xc]
64012827:	mov    DWORD PTR [ebp-0x18],eax
6401282a:	mov    eax,DWORD PTR [ebp+0x1c]
6401282d:	mov    DWORD PTR [ebp-0x14],eax
64012830:	mov    eax,DWORD PTR [ebp+0x20]
64012833:	mov    DWORD PTR [ebp-0x10],eax
64012836:	and    DWORD PTR [ebp-0xc],0x0
6401283a:	and    DWORD PTR [ebp-0x8],0x0
6401283e:	and    DWORD PTR [ebp-0x4],0x0
64012842:	mov    DWORD PTR [ebp-0xc],esp
64012845:	mov    DWORD PTR [ebp-0x8],ebp
64012848:	mov    eax,fs:0x0
6401284e:	mov    DWORD PTR [ebp-0x28],eax
64012851:	lea    eax,[ebp-0x28]
64012854:	mov    fs:0x0,eax
6401285a:	mov    DWORD PTR [ebp-0x38],0x1
64012861:	mov    eax,DWORD PTR [ebp+0x8]
64012864:	mov    DWORD PTR [ebp-0x34],eax
64012867:	mov    eax,DWORD PTR [ebp+0x10]
6401286a:	mov    DWORD PTR [ebp-0x30],eax
6401286d:	call   0x64014bcb
64012872:	mov    eax,DWORD PTR [eax+0x80]
64012878:	mov    DWORD PTR [ebp-0x2c],eax
6401287b:	lea    eax,[ebp-0x34]
6401287e:	push   eax
6401287f:	mov    eax,DWORD PTR [ebp+0x8]
64012882:	push   DWORD PTR [eax]
64012884:	call   DWORD PTR [ebp-0x2c]
64012887:	pop    ecx
64012888:	pop    ecx
64012889:	and    DWORD PTR [ebp-0x38],0x0
6401288d:	cmp    DWORD PTR [ebp-0x4],0x0
64012891:	je     0x640128aa
64012893:	mov    ebx,DWORD PTR fs:0x0
6401289a:	mov    eax,DWORD PTR [ebx]
6401289c:	mov    ebx,DWORD PTR [ebp-0x28]
6401289f:	mov    DWORD PTR [ebx],eax
640128a1:	mov    DWORD PTR fs:0x0,ebx
640128a8:	jmp    0x640128b3
640128aa:	mov    eax,DWORD PTR [ebp-0x28]
640128ad:	mov    fs:0x0,eax
640128b3:	mov    eax,DWORD PTR [ebp-0x38]
640128b6:	pop    ebx
640128b7:	leave  
640128b8:	ret    
640128b9:	push   ebp
640128ba:	mov    ebp,esp
640128bc:	push   ecx
640128bd:	push   ebx
640128be:	cld    
640128bf:	mov    eax,DWORD PTR [ebp+0xc]
640128c2:	mov    ecx,DWORD PTR [eax+0x8]
640128c5:	xor    ecx,DWORD PTR [ebp+0xc]
640128c8:	call   0x64012abc
640128cd:	mov    eax,DWORD PTR [ebp+0x8]
640128d0:	mov    eax,DWORD PTR [eax+0x4]
640128d3:	and    eax,0x66
640128d6:	je     0x640128e9
640128d8:	mov    eax,DWORD PTR [ebp+0xc]
640128db:	mov    DWORD PTR [eax+0x24],0x1
640128e2:	xor    eax,eax
640128e4:	inc    eax
640128e5:	jmp    0x64012953
640128e7:	jmp    0x64012953
640128e9:	push   0x1
640128eb:	mov    eax,DWORD PTR [ebp+0xc]
640128ee:	push   DWORD PTR [eax+0x18]
640128f1:	mov    eax,DWORD PTR [ebp+0xc]
640128f4:	push   DWORD PTR [eax+0x14]
640128f7:	mov    eax,DWORD PTR [ebp+0xc]
640128fa:	push   DWORD PTR [eax+0xc]
640128fd:	push   0x0
640128ff:	push   DWORD PTR [ebp+0x10]
64012902:	mov    eax,DWORD PTR [ebp+0xc]
64012905:	push   DWORD PTR [eax+0x10]
64012908:	push   DWORD PTR [ebp+0x8]
6401290b:	call   0x64015ac3
64012910:	add    esp,0x20
64012913:	mov    eax,DWORD PTR [ebp+0xc]
64012916:	cmp    DWORD PTR [eax+0x24],0x0
6401291a:	jne    0x64012927
6401291c:	push   DWORD PTR [ebp+0x8]
6401291f:	push   DWORD PTR [ebp+0xc]
64012922:	call   0x6401272c
64012927:	push   0x0
64012929:	push   0x0
6401292b:	push   0x0
6401292d:	push   0x0
6401292f:	push   0x0
64012931:	lea    eax,[ebp-0x4]
64012934:	push   eax
64012935:	push   0x123
6401293a:	call   0x640127e4
6401293f:	add    esp,0x1c
64012942:	mov    eax,DWORD PTR [ebp-0x4]
64012945:	mov    ebx,DWORD PTR [ebp+0xc]
64012948:	mov    esp,DWORD PTR [ebx+0x1c]
6401294b:	mov    ebp,DWORD PTR [ebx+0x20]
6401294e:	jmp    eax
64012950:	xor    eax,eax
64012952:	inc    eax
64012953:	pop    ebx
64012954:	leave  
64012955:	ret    
64012956:	push   ebp
64012957:	mov    ebp,esp
64012959:	push   ecx
6401295a:	push   ebx
6401295b:	push   esi
6401295c:	push   edi
6401295d:	mov    edi,DWORD PTR [ebp+0x8]
64012960:	mov    eax,DWORD PTR [edi+0x10]
64012963:	mov    esi,DWORD PTR [edi+0xc]
64012966:	mov    DWORD PTR [ebp-0x4],eax
64012969:	mov    ebx,esi
6401296b:	jmp    0x6401299a
6401296d:	cmp    esi,0xffffffff
64012970:	jne    0x64012977
64012972:	call   0x64015bf3
64012977:	mov    ecx,DWORD PTR [ebp-0x4]
6401297a:	dec    esi
6401297b:	mov    eax,esi
6401297d:	imul   eax,eax,0x14
64012980:	add    eax,ecx
64012982:	mov    ecx,DWORD PTR [ebp+0x10]
64012985:	cmp    DWORD PTR [eax+0x4],ecx
64012988:	jge    0x6401298f
6401298a:	cmp    ecx,DWORD PTR [eax+0x8]
6401298d:	jle    0x64012994
6401298f:	cmp    esi,0xffffffff
64012992:	jne    0x6401299d
64012994:	dec    DWORD PTR [ebp+0xc]
64012997:	mov    ebx,DWORD PTR [ebp+0x8]
6401299a:	mov    DWORD PTR [ebp+0x8],esi
6401299d:	cmp    DWORD PTR [ebp+0xc],0x0
640129a1:	jge    0x6401296d
640129a3:	mov    eax,DWORD PTR [ebp+0x14]
640129a6:	inc    esi
640129a7:	mov    DWORD PTR [eax],esi
640129a9:	mov    eax,DWORD PTR [ebp+0x18]
640129ac:	mov    DWORD PTR [eax],ebx
640129ae:	cmp    ebx,DWORD PTR [edi+0xc]
640129b1:	ja     0x640129b7
640129b3:	cmp    esi,ebx
640129b5:	jbe    0x640129bc
640129b7:	call   0x64015bf3
640129bc:	mov    eax,esi
640129be:	imul   eax,eax,0x14
640129c1:	add    eax,DWORD PTR [ebp-0x4]
640129c4:	pop    edi
640129c5:	pop    esi
640129c6:	pop    ebx
640129c7:	leave  
640129c8:	ret    
640129c9:	mov    eax,DWORD PTR [esp+0x8]
640129cd:	push   esi
640129ce:	mov    esi,DWORD PTR [esp+0x8]
640129d2:	mov    DWORD PTR [esi],eax
640129d4:	call   0x64014bcb
640129d9:	mov    eax,DWORD PTR [eax+0x98]
640129df:	mov    DWORD PTR [esi+0x4],eax
640129e2:	call   0x64014bcb
640129e7:	mov    DWORD PTR [eax+0x98],esi
640129ed:	mov    eax,esi
640129ef:	pop    esi
640129f0:	ret    
640129f1:	call   0x64014bcb
640129f6:	mov    eax,DWORD PTR [eax+0x98]
640129fc:	jmp    0x64012a09
640129fe:	mov    ecx,DWORD PTR [eax]
64012a00:	cmp    ecx,DWORD PTR [esp+0x4]
64012a04:	je     0x64012a0f
64012a06:	mov    eax,DWORD PTR [eax+0x4]
64012a09:	test   eax,eax
64012a0b:	jne    0x640129fe
64012a0d:	inc    eax
64012a0e:	ret    
64012a0f:	xor    eax,eax
64012a11:	ret    
64012a12:	push   esi
64012a13:	call   0x64014bcb
64012a18:	mov    esi,DWORD PTR [esp+0x8]
64012a1c:	cmp    esi,DWORD PTR [eax+0x98]
64012a22:	jne    0x64012a34
64012a24:	call   0x64014bcb
64012a29:	mov    ecx,DWORD PTR [esi+0x4]
64012a2c:	mov    DWORD PTR [eax+0x98],ecx
64012a32:	pop    esi
64012a33:	ret    
64012a34:	call   0x64014bcb
64012a39:	mov    eax,DWORD PTR [eax+0x98]
64012a3f:	jmp    0x64012a4a
64012a41:	mov    ecx,DWORD PTR [eax+0x4]
64012a44:	cmp    esi,ecx
64012a46:	je     0x64012a56
64012a48:	mov    eax,ecx
64012a4a:	cmp    DWORD PTR [eax+0x4],0x0
64012a4e:	jne    0x64012a41
64012a50:	pop    esi
64012a51:	jmp    0x64015bf3
64012a56:	mov    ecx,DWORD PTR [esi+0x4]
64012a59:	mov    DWORD PTR [eax+0x4],ecx
64012a5c:	pop    esi
64012a5d:	ret    
64012a5e:	push   ebp
64012a5f:	mov    ebp,esp
64012a61:	sub    esp,0x18
64012a64:	mov    eax,ds:0x6402d09c
64012a69:	and    DWORD PTR [ebp-0x18],0x0
64012a6d:	lea    ecx,[ebp-0x18]
64012a70:	xor    eax,ecx
64012a72:	mov    ecx,DWORD PTR [ebp+0x8]
64012a75:	mov    DWORD PTR [ebp-0x10],eax
64012a78:	mov    eax,DWORD PTR [ebp+0xc]
64012a7b:	mov    DWORD PTR [ebp-0xc],eax
64012a7e:	mov    eax,DWORD PTR [ebp+0x14]
64012a81:	inc    eax
64012a82:	mov    DWORD PTR [ebp-0x14],0x640127b4
64012a89:	mov    DWORD PTR [ebp-0x8],ecx
64012a8c:	mov    DWORD PTR [ebp-0x4],eax
64012a8f:	mov    eax,fs:0x0
64012a95:	mov    DWORD PTR [ebp-0x18],eax
64012a98:	lea    eax,[ebp-0x18]
64012a9b:	mov    fs:0x0,eax
64012aa1:	push   DWORD PTR [ebp+0x18]
64012aa4:	push   ecx
64012aa5:	push   DWORD PTR [ebp+0x10]
64012aa8:	call   0x64015c40
64012aad:	mov    ecx,eax
64012aaf:	mov    eax,DWORD PTR [ebp-0x18]
64012ab2:	mov    fs:0x0,eax
64012ab8:	mov    eax,ecx
64012aba:	leave  
64012abb:	ret    
64012abc:	cmp    ecx,DWORD PTR ds:0x6402d09c
64012ac2:	jne    0x64012ac6
64012ac4:	repz ret 
64012ac6:	jmp    0x64015c8c
64012acb:	push   ecx
64012acc:	push   ebx
64012acd:	push   ebp
64012ace:	push   esi
64012acf:	push   edi
64012ad0:	push   DWORD PTR ds:0x64032610
64012ad6:	call   0x640149af
64012adb:	push   DWORD PTR ds:0x6403260c
64012ae1:	mov    esi,eax
64012ae3:	mov    DWORD PTR [esp+0x18],esi
64012ae7:	call   0x640149af
64012aec:	mov    edi,eax
64012aee:	cmp    edi,esi
64012af0:	pop    ecx
64012af1:	pop    ecx
64012af2:	jb     0x64012b7c
64012af8:	mov    ebx,edi
64012afa:	sub    ebx,esi
64012afc:	lea    ebp,[ebx+0x4]
64012aff:	cmp    ebp,0x4
64012b02:	jb     0x64012b7c
64012b04:	push   esi
64012b05:	call   0x64015e63
64012b0a:	mov    esi,eax
64012b0c:	cmp    esi,ebp
64012b0e:	pop    ecx
64012b0f:	jae    0x64012b5b
64012b11:	mov    eax,0x800
64012b16:	cmp    esi,eax
64012b18:	jae    0x64012b1c
64012b1a:	mov    eax,esi
64012b1c:	add    eax,esi
64012b1e:	cmp    eax,esi
64012b20:	jb     0x64012b32
64012b22:	push   eax
64012b23:	push   DWORD PTR [esp+0x14]
64012b27:	call   0x64015e18
64012b2c:	test   eax,eax
64012b2e:	pop    ecx
64012b2f:	pop    ecx
64012b30:	jne    0x64012b49
64012b32:	lea    eax,[esi+0x10]
64012b35:	cmp    eax,esi
64012b37:	jb     0x64012b7c
64012b39:	push   eax
64012b3a:	push   DWORD PTR [esp+0x14]
64012b3e:	call   0x64015e18
64012b43:	test   eax,eax
64012b45:	pop    ecx
64012b46:	pop    ecx
64012b47:	je     0x64012b7c
64012b49:	sar    ebx,0x2
64012b4c:	push   eax
64012b4d:	lea    edi,[eax+ebx*4]
64012b50:	call   0x64014938
64012b55:	pop    ecx
64012b56:	mov    ds:0x64032610,eax
64012b5b:	push   DWORD PTR [esp+0x18]
64012b5f:	call   0x64014938
64012b64:	mov    DWORD PTR [edi],eax
64012b66:	add    edi,0x4
64012b69:	push   edi
64012b6a:	call   0x64014938
64012b6f:	pop    ecx
64012b70:	mov    ds:0x6403260c,eax
64012b75:	mov    eax,DWORD PTR [esp+0x1c]
64012b79:	pop    ecx
64012b7a:	jmp    0x64012b7e
64012b7c:	xor    eax,eax
64012b7e:	pop    edi
64012b7f:	pop    esi
64012b80:	pop    ebp
64012b81:	pop    ebx
64012b82:	pop    ecx
64012b83:	ret    
64012b84:	push   esi
64012b85:	push   0x4
64012b87:	push   0x20
64012b89:	call   0x64015dd0
64012b8e:	mov    esi,eax
64012b90:	push   esi
64012b91:	call   0x64014938
64012b96:	add    esp,0xc
64012b99:	test   esi,esi
64012b9b:	mov    ds:0x64032610,eax
64012ba0:	mov    ds:0x6403260c,eax
64012ba5:	jne    0x64012bac
64012ba7:	push   0x18
64012ba9:	pop    eax
64012baa:	pop    esi
64012bab:	ret    
64012bac:	and    DWORD PTR [esi],0x0
64012baf:	xor    eax,eax
64012bb1:	pop    esi
64012bb2:	ret    
64012bb3:	push   0xc
64012bb5:	push   0x6402a530
64012bba:	call   0x64014080
64012bbf:	call   0x64015f65
64012bc4:	and    DWORD PTR [ebp-0x4],0x0
64012bc8:	push   DWORD PTR [ebp+0x8]
64012bcb:	call   0x64012acb
64012bd0:	pop    ecx
64012bd1:	mov    DWORD PTR [ebp-0x1c],eax
64012bd4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012bdb:	call   0x64012be9
64012be0:	mov    eax,DWORD PTR [ebp-0x1c]
64012be3:	call   0x640140c5
64012be8:	ret    
64012be9:	call   0x64015f6e
64012bee:	ret    
64012bef:	push   DWORD PTR [esp+0x4]
64012bf3:	call   0x64012bb3
64012bf8:	neg    eax
64012bfa:	sbb    eax,eax
64012bfc:	neg    eax
64012bfe:	pop    ecx
64012bff:	dec    eax
64012c00:	ret    
64012c01:	mov    eax,DWORD PTR [esp+0x4]
64012c05:	push   ebx
64012c06:	mov    ebx,DWORD PTR [esp+0xc]
64012c0a:	cmp    WORD PTR [ebx],0x0
64012c0e:	push   edi
64012c0f:	mov    edi,eax
64012c11:	je     0x64012c58
64012c13:	movzx  ecx,WORD PTR [eax]
64012c16:	test   cx,cx
64012c19:	je     0x64012c56
64012c1b:	movzx  edx,cx
64012c1e:	sub    eax,ebx
64012c20:	test   dx,dx
64012c23:	mov    ecx,DWORD PTR [esp+0x10]
64012c27:	je     0x64012c44
64012c29:	movzx  edx,WORD PTR [ecx]
64012c2c:	test   dx,dx
64012c2f:	je     0x64012c5b
64012c31:	movzx  ebx,WORD PTR [eax+ecx*1]
64012c35:	movzx  edx,dx
64012c38:	sub    ebx,edx
64012c3a:	jne    0x64012c44
64012c3c:	inc    ecx
64012c3d:	inc    ecx
64012c3e:	cmp    WORD PTR [eax+ecx*1],bx
64012c42:	jne    0x64012c29
64012c44:	cmp    WORD PTR [ecx],0x0
64012c48:	je     0x64012c5b
64012c4a:	inc    edi
64012c4b:	inc    edi
64012c4c:	movzx  edx,WORD PTR [edi]
64012c4f:	inc    eax
64012c50:	inc    eax
64012c51:	test   dx,dx
64012c54:	jne    0x64012c20
64012c56:	xor    eax,eax
64012c58:	pop    edi
64012c59:	pop    ebx
64012c5a:	ret    
64012c5b:	mov    eax,edi
64012c5d:	jmp    0x64012c58
64012c5f:	mov    eax,DWORD PTR [esp+0x4]
64012c63:	test   eax,eax
64012c65:	push   esi
64012c66:	mov    esi,ecx
64012c68:	mov    BYTE PTR [esi+0xc],0x0
64012c6c:	jne    0x64012cd1
64012c6e:	call   0x64014bcb
64012c73:	mov    DWORD PTR [esi+0x8],eax
64012c76:	mov    ecx,DWORD PTR [eax+0x6c]
64012c79:	mov    DWORD PTR [esi],ecx
64012c7b:	mov    ecx,DWORD PTR [eax+0x68]
64012c7e:	mov    DWORD PTR [esi+0x4],ecx
64012c81:	mov    ecx,DWORD PTR [esi]
64012c83:	cmp    ecx,DWORD PTR ds:0x6402d870
64012c89:	je     0x64012c9d
64012c8b:	mov    ecx,DWORD PTR ds:0x6402d78c
64012c91:	test   DWORD PTR [eax+0x70],ecx
64012c94:	jne    0x64012c9d
64012c96:	call   0x64016b4f
64012c9b:	mov    DWORD PTR [esi],eax
64012c9d:	mov    eax,DWORD PTR [esi+0x4]
64012ca0:	cmp    eax,DWORD PTR ds:0x6402d690
64012ca6:	je     0x64012cbe
64012ca8:	mov    eax,DWORD PTR [esi+0x8]
64012cab:	mov    ecx,DWORD PTR ds:0x6402d78c
64012cb1:	test   DWORD PTR [eax+0x70],ecx
64012cb4:	jne    0x64012cbe
64012cb6:	call   0x64016410
64012cbb:	mov    DWORD PTR [esi+0x4],eax
64012cbe:	mov    eax,DWORD PTR [esi+0x8]
64012cc1:	test   BYTE PTR [eax+0x70],0x2
64012cc5:	jne    0x64012cdb
64012cc7:	or     DWORD PTR [eax+0x70],0x2
64012ccb:	mov    BYTE PTR [esi+0xc],0x1
64012ccf:	jmp    0x64012cdb
64012cd1:	mov    ecx,DWORD PTR [eax]
64012cd3:	mov    DWORD PTR [esi],ecx
64012cd5:	mov    eax,DWORD PTR [eax+0x4]
64012cd8:	mov    DWORD PTR [esi+0x4],eax
64012cdb:	mov    eax,esi
64012cdd:	pop    esi
64012cde:	ret    0x4
64012ce1:	push   ebp
64012ce2:	mov    ebp,esp
64012ce4:	sub    esp,0x20
64012ce7:	push   esi
64012ce8:	xor    esi,esi
64012cea:	cmp    DWORD PTR [ebp+0xc],esi
64012ced:	jne    0x64012d0c
64012cef:	call   0x64014880
64012cf4:	push   esi
64012cf5:	push   esi
64012cf6:	push   esi
64012cf7:	push   esi
64012cf8:	push   esi
64012cf9:	mov    DWORD PTR [eax],0x16
64012cff:	call   0x640125f4
64012d04:	add    esp,0x14
64012d07:	or     eax,0xffffffff
64012d0a:	jmp    0x64012d33
64012d0c:	push   DWORD PTR [ebp+0x14]
64012d0f:	lea    eax,[ebp-0x20]
64012d12:	push   DWORD PTR [ebp+0x10]
64012d15:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64012d1c:	push   DWORD PTR [ebp+0xc]
64012d1f:	mov    DWORD PTR [ebp-0x14],0x42
64012d26:	push   eax
64012d27:	mov    DWORD PTR [ebp-0x18],esi
64012d2a:	mov    DWORD PTR [ebp-0x20],esi
64012d2d:	call   DWORD PTR [ebp+0x8]
64012d30:	add    esp,0x10
64012d33:	pop    esi
64012d34:	leave  
64012d35:	ret    
64012d36:	push   DWORD PTR [esp+0x8]
64012d3a:	push   0x0
64012d3c:	push   DWORD PTR [esp+0xc]
64012d40:	push   0x64016d25
64012d45:	call   0x64012ce1
64012d4a:	add    esp,0x10
64012d4d:	ret    
64012d4e:	push   ebp
64012d4f:	mov    ebp,esp
64012d51:	sub    esp,0x20
64012d54:	push   ebx
64012d55:	xor    ebx,ebx
64012d57:	cmp    DWORD PTR [ebp+0x14],ebx
64012d5a:	jne    0x64012d7c
64012d5c:	call   0x64014880
64012d61:	push   ebx
64012d62:	push   ebx
64012d63:	push   ebx
64012d64:	push   ebx
64012d65:	push   ebx
64012d66:	mov    DWORD PTR [eax],0x16
64012d6c:	call   0x640125f4
64012d71:	add    esp,0x14
64012d74:	or     eax,0xffffffff
64012d77:	jmp    0x64012e41
64012d7c:	push   esi
64012d7d:	mov    esi,DWORD PTR [ebp+0xc]
64012d80:	push   edi
64012d81:	mov    edi,DWORD PTR [ebp+0x10]
64012d84:	cmp    edi,ebx
64012d86:	je     0x64012dac
64012d88:	cmp    esi,ebx
64012d8a:	jne    0x64012dac
64012d8c:	call   0x64014880
64012d91:	push   ebx
64012d92:	push   ebx
64012d93:	push   ebx
64012d94:	push   ebx
64012d95:	push   ebx
64012d96:	mov    DWORD PTR [eax],0x16
64012d9c:	call   0x640125f4
64012da1:	add    esp,0x14
64012da4:	or     eax,0xffffffff
64012da7:	jmp    0x64012e3f
64012dac:	cmp    edi,0x3fffffff
64012db2:	mov    DWORD PTR [ebp-0x14],0x42
64012db9:	mov    DWORD PTR [ebp-0x18],esi
64012dbc:	mov    DWORD PTR [ebp-0x20],esi
64012dbf:	jbe    0x64012dca
64012dc1:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64012dc8:	jmp    0x64012dd0
64012dca:	lea    eax,[edi+edi*1]
64012dcd:	mov    DWORD PTR [ebp-0x1c],eax
64012dd0:	push   DWORD PTR [ebp+0x1c]
64012dd3:	lea    eax,[ebp-0x20]
64012dd6:	push   DWORD PTR [ebp+0x18]
64012dd9:	push   DWORD PTR [ebp+0x14]
64012ddc:	push   eax
64012ddd:	call   DWORD PTR [ebp+0x8]
64012de0:	add    esp,0x10
64012de3:	cmp    esi,ebx
64012de5:	mov    DWORD PTR [ebp+0x14],eax
64012de8:	je     0x64012e3f
64012dea:	cmp    eax,ebx
64012dec:	jl     0x64012e30
64012dee:	dec    DWORD PTR [ebp-0x1c]
64012df1:	js     0x64012dfd
64012df3:	mov    eax,DWORD PTR [ebp-0x20]
64012df6:	mov    BYTE PTR [eax],bl
64012df8:	inc    DWORD PTR [ebp-0x20]
64012dfb:	jmp    0x64012e0e
64012dfd:	lea    eax,[ebp-0x20]
64012e00:	push   eax
64012e01:	push   ebx
64012e02:	call   0x64016bc5
64012e07:	cmp    eax,0xffffffff
64012e0a:	pop    ecx
64012e0b:	pop    ecx
64012e0c:	je     0x64012e30
64012e0e:	dec    DWORD PTR [ebp-0x1c]
64012e11:	js     0x64012e1a
64012e13:	mov    eax,DWORD PTR [ebp-0x20]
64012e16:	mov    BYTE PTR [eax],bl
64012e18:	jmp    0x64012e2b
64012e1a:	lea    eax,[ebp-0x20]
64012e1d:	push   eax
64012e1e:	push   ebx
64012e1f:	call   0x64016bc5
64012e24:	cmp    eax,0xffffffff
64012e27:	pop    ecx
64012e28:	pop    ecx
64012e29:	je     0x64012e30
64012e2b:	mov    eax,DWORD PTR [ebp+0x14]
64012e2e:	jmp    0x64012e3f
64012e30:	xor    eax,eax
64012e32:	cmp    DWORD PTR [ebp-0x1c],ebx
64012e35:	mov    WORD PTR [esi+edi*2-0x2],bx
64012e3a:	setge  al
64012e3d:	dec    eax
64012e3e:	dec    eax
64012e3f:	pop    edi
64012e40:	pop    esi
64012e41:	pop    ebx
64012e42:	leave  
64012e43:	ret    
64012e44:	push   ebp
64012e45:	mov    ebp,esp
64012e47:	push   esi
64012e48:	xor    esi,esi
64012e4a:	cmp    DWORD PTR [ebp+0x10],esi
64012e4d:	jne    0x64012e6c
64012e4f:	call   0x64014880
64012e54:	push   esi
64012e55:	push   esi
64012e56:	push   esi
64012e57:	push   esi
64012e58:	push   esi
64012e59:	mov    DWORD PTR [eax],0x16
64012e5f:	call   0x640125f4
64012e64:	add    esp,0x14
64012e67:	or     eax,0xffffffff
64012e6a:	jmp    0x64012ec8
64012e6c:	push   edi
64012e6d:	mov    edi,DWORD PTR [ebp+0x8]
64012e70:	cmp    edi,esi
64012e72:	je     0x64012e79
64012e74:	cmp    DWORD PTR [ebp+0xc],esi
64012e77:	ja     0x64012e86
64012e79:	call   0x64014880
64012e7e:	mov    DWORD PTR [eax],0x16
64012e84:	jmp    0x64012eb7
64012e86:	push   DWORD PTR [ebp+0x18]
64012e89:	push   DWORD PTR [ebp+0x14]
64012e8c:	push   DWORD PTR [ebp+0x10]
64012e8f:	push   DWORD PTR [ebp+0xc]
64012e92:	push   edi
64012e93:	push   0x640176ce
64012e98:	call   0x64012d4e
64012e9d:	add    esp,0x18
64012ea0:	cmp    eax,esi
64012ea2:	jge    0x64012ea7
64012ea4:	mov    WORD PTR [edi],si
64012ea7:	cmp    eax,0xfffffffe
64012eaa:	jne    0x64012ec7
64012eac:	call   0x64014880
64012eb1:	mov    DWORD PTR [eax],0x22
64012eb7:	push   esi
64012eb8:	push   esi
64012eb9:	push   esi
64012eba:	push   esi
64012ebb:	push   esi
64012ebc:	call   0x640125f4
64012ec1:	add    esp,0x14
64012ec4:	or     eax,0xffffffff
64012ec7:	pop    edi
64012ec8:	pop    esi
64012ec9:	pop    ebp
64012eca:	ret    
64012ecb:	push   DWORD PTR [esp+0x10]
64012ecf:	push   0x0
64012ed1:	push   DWORD PTR [esp+0x14]
64012ed5:	push   DWORD PTR [esp+0x14]
64012ed9:	push   DWORD PTR [esp+0x14]
64012edd:	call   0x64012e44
64012ee2:	add    esp,0x14
64012ee5:	ret    
64012ee6:	mov    edx,DWORD PTR [esp+0x4]
64012eea:	push   ebx
64012eeb:	push   esi
64012eec:	xor    esi,esi
64012eee:	cmp    edx,esi
64012ef0:	push   edi
64012ef1:	je     0x64012efb
64012ef3:	mov    ebx,DWORD PTR [esp+0x14]
64012ef7:	cmp    ebx,esi
64012ef9:	ja     0x64012f16
64012efb:	call   0x64014880
64012f00:	push   0x16
64012f02:	pop    edi
64012f03:	mov    DWORD PTR [eax],edi
64012f05:	push   esi
64012f06:	push   esi
64012f07:	push   esi
64012f08:	push   esi
64012f09:	push   esi
64012f0a:	call   0x640125f4
64012f0f:	add    esp,0x14
64012f12:	mov    eax,edi
64012f14:	jmp    0x64012f5c
64012f16:	mov    edi,DWORD PTR [esp+0x18]
64012f1a:	cmp    edi,esi
64012f1c:	jne    0x64012f23
64012f1e:	mov    WORD PTR [edx],si
64012f21:	jmp    0x64012efb
64012f23:	mov    ecx,edx
64012f25:	cmp    WORD PTR [ecx],si
64012f28:	je     0x64012f2f
64012f2a:	inc    ecx
64012f2b:	inc    ecx
64012f2c:	dec    ebx
64012f2d:	jne    0x64012f25
64012f2f:	cmp    ebx,esi
64012f31:	je     0x64012f1e
64012f33:	movzx  eax,WORD PTR [edi]
64012f36:	mov    WORD PTR [ecx],ax
64012f39:	inc    ecx
64012f3a:	inc    ecx
64012f3b:	inc    edi
64012f3c:	inc    edi
64012f3d:	cmp    ax,si
64012f40:	je     0x64012f45
64012f42:	dec    ebx
64012f43:	jne    0x64012f33
64012f45:	cmp    ebx,esi
64012f47:	jne    0x64012f5a
64012f49:	mov    WORD PTR [edx],si
64012f4c:	call   0x64014880
64012f51:	push   0x22
64012f53:	pop    ecx
64012f54:	mov    DWORD PTR [eax],ecx
64012f56:	mov    edi,ecx
64012f58:	jmp    0x64012f05
64012f5a:	xor    eax,eax
64012f5c:	pop    edi
64012f5d:	pop    esi
64012f5e:	pop    ebx
64012f5f:	ret    
64012f60:	mov    ecx,DWORD PTR [esp+0x4]
64012f64:	push   ebx
64012f65:	push   esi
64012f66:	push   edi
64012f67:	xor    edi,edi
64012f69:	cmp    ecx,edi
64012f6b:	je     0x64012f75
64012f6d:	mov    ebx,DWORD PTR [esp+0x14]
64012f71:	cmp    ebx,edi
64012f73:	ja     0x64012f90
64012f75:	call   0x64014880
64012f7a:	push   0x16
64012f7c:	pop    esi
64012f7d:	mov    DWORD PTR [eax],esi
64012f7f:	push   edi
64012f80:	push   edi
64012f81:	push   edi
64012f82:	push   edi
64012f83:	push   edi
64012f84:	call   0x640125f4
64012f89:	add    esp,0x14
64012f8c:	mov    eax,esi
64012f8e:	jmp    0x64012fc8
64012f90:	mov    esi,DWORD PTR [esp+0x18]
64012f94:	cmp    esi,edi
64012f96:	jne    0x64012f9d
64012f98:	mov    WORD PTR [ecx],di
64012f9b:	jmp    0x64012f75
64012f9d:	mov    edx,ecx
64012f9f:	movzx  eax,WORD PTR [esi]
64012fa2:	mov    WORD PTR [edx],ax
64012fa5:	inc    edx
64012fa6:	inc    edx
64012fa7:	inc    esi
64012fa8:	inc    esi
64012fa9:	cmp    ax,di
64012fac:	je     0x64012fb1
64012fae:	dec    ebx
64012faf:	jne    0x64012f9f
64012fb1:	cmp    ebx,edi
64012fb3:	jne    0x64012fc6
64012fb5:	mov    WORD PTR [ecx],di
64012fb8:	call   0x64014880
64012fbd:	push   0x22
64012fbf:	pop    ecx
64012fc0:	mov    DWORD PTR [eax],ecx
64012fc2:	mov    esi,ecx
64012fc4:	jmp    0x64012f7f
64012fc6:	xor    eax,eax
64012fc8:	pop    edi
64012fc9:	pop    esi
64012fca:	pop    ebx
64012fcb:	ret    
64012fcc:	mov    eax,DWORD PTR [esp+0x4]
64012fd0:	test   eax,eax
64012fd2:	je     0x64012fe6
64012fd4:	sub    eax,0x8
64012fd7:	cmp    DWORD PTR [eax],0xdddd
64012fdd:	jne    0x64012fe6
64012fdf:	push   eax
64012fe0:	call   0x64013956
64012fe5:	pop    ecx
64012fe6:	ret    
64012fe7:	push   ebp
64012fe8:	mov    ebp,esp
64012fea:	sub    esp,0xc
64012fed:	mov    eax,ds:0x6402d09c
64012ff2:	xor    eax,ebp
64012ff4:	mov    DWORD PTR [ebp-0x4],eax
64012ff7:	push   esi
64012ff8:	xor    esi,esi
64012ffa:	cmp    ebx,esi
64012ffc:	push   edi
64012ffd:	jne    0x6401301d
64012fff:	call   0x64014880
64013004:	push   0x16
64013006:	pop    edi
64013007:	push   esi
64013008:	push   esi
64013009:	push   esi
6401300a:	push   esi
6401300b:	push   esi
6401300c:	mov    DWORD PTR [eax],edi
6401300e:	call   0x640125f4
64013013:	add    esp,0x14
64013016:	mov    eax,edi
64013018:	jmp    0x6401315d
6401301d:	push   DWORD PTR [ebp+0x8]
64013020:	push   ebx
64013021:	call   0x6401828d
64013026:	cmp    eax,DWORD PTR [ebp+0x8]
64013029:	pop    ecx
6401302a:	pop    ecx
6401302b:	jb     0x64013032
6401302d:	mov    WORD PTR [ebx],si
64013030:	jmp    0x64012fff
64013032:	mov    edx,DWORD PTR [ebp+0xc]
64013035:	mov    eax,DWORD PTR [edx]
64013037:	mov    ecx,DWORD PTR [eax+0x14]
6401303a:	cmp    ecx,esi
6401303c:	jne    0x64013068
6401303e:	cmp    WORD PTR [ebx],si
64013041:	mov    eax,ebx
64013043:	je     0x64013061
64013045:	movzx  ecx,WORD PTR [eax]
64013048:	cmp    cx,0x41
6401304c:	jb     0x6401305a
6401304e:	cmp    cx,0x5a
64013052:	ja     0x6401305a
64013054:	add    ecx,0x20
64013057:	mov    WORD PTR [eax],cx
6401305a:	inc    eax
6401305b:	inc    eax
6401305c:	cmp    WORD PTR [eax],si
6401305f:	jne    0x64013045
64013061:	xor    eax,eax
64013063:	jmp    0x6401315d
64013068:	push   DWORD PTR [eax+0x4]
6401306b:	mov    edi,0x100
64013070:	push   esi
64013071:	push   esi
64013072:	push   0xffffffff
64013074:	push   ebx
64013075:	push   edi
64013076:	push   ecx
64013077:	push   edx
64013078:	call   0x6401824d
6401307d:	mov    ecx,eax
6401307f:	add    esp,0x20
64013082:	cmp    ecx,esi
64013084:	mov    DWORD PTR [ebp-0xc],ecx
64013087:	jne    0x640130a0
64013089:	call   0x64014880
6401308e:	mov    DWORD PTR [eax],0x2a
64013094:	call   0x64014880
64013099:	mov    eax,DWORD PTR [eax]
6401309b:	jmp    0x6401315d
640130a0:	cmp    DWORD PTR [ebp+0x8],ecx
640130a3:	jae    0x640130b4
640130a5:	mov    WORD PTR [ebx],si
640130a8:	call   0x64014880
640130ad:	push   0x22
640130af:	jmp    0x64013006
640130b4:	cmp    ecx,esi
640130b6:	jle    0x640130fe
640130b8:	push   0xffffffe0
640130ba:	xor    edx,edx
640130bc:	pop    eax
640130bd:	div    ecx
640130bf:	cmp    eax,0x2
640130c2:	jb     0x640130fe
640130c4:	lea    eax,[ecx+ecx*1+0x8]
640130c8:	cmp    eax,0x400
640130cd:	ja     0x640130e2
640130cf:	call   0x64013240
640130d4:	mov    eax,esp
640130d6:	cmp    eax,esi
640130d8:	je     0x640130f6
640130da:	mov    DWORD PTR [eax],0xcccc
640130e0:	jmp    0x640130f3
640130e2:	push   eax
640130e3:	call   0x64013a33
640130e8:	cmp    eax,esi
640130ea:	pop    ecx
640130eb:	je     0x640130f6
640130ed:	mov    DWORD PTR [eax],0xdddd
640130f3:	add    eax,0x8
640130f6:	mov    ecx,DWORD PTR [ebp-0xc]
640130f9:	mov    DWORD PTR [ebp-0x8],eax
640130fc:	jmp    0x64013101
640130fe:	mov    DWORD PTR [ebp-0x8],esi
64013101:	cmp    DWORD PTR [ebp-0x8],esi
64013104:	jne    0x64013113
64013106:	call   0x64014880
6401310b:	mov    DWORD PTR [eax],0xc
64013111:	jmp    0x64013094
64013113:	mov    edx,DWORD PTR [ebp+0xc]
64013116:	mov    eax,DWORD PTR [edx]
64013118:	push   DWORD PTR [eax+0x4]
6401311b:	push   ecx
6401311c:	push   DWORD PTR [ebp-0x8]
6401311f:	push   0xffffffff
64013121:	push   ebx
64013122:	push   edi
64013123:	push   DWORD PTR [eax+0x14]
64013126:	push   edx
64013127:	call   0x6401824d
6401312c:	add    esp,0x20
6401312f:	test   eax,eax
64013131:	je     0x64013146
64013133:	push   DWORD PTR [ebp-0x8]
64013136:	push   DWORD PTR [ebp+0x8]
64013139:	push   ebx
6401313a:	call   0x64012f60
6401313f:	add    esp,0xc
64013142:	mov    esi,eax
64013144:	jmp    0x64013152
64013146:	call   0x64014880
6401314b:	push   0x2a
6401314d:	pop    ecx
6401314e:	mov    DWORD PTR [eax],ecx
64013150:	mov    esi,ecx
64013152:	push   DWORD PTR [ebp-0x8]
64013155:	call   0x64012fcc
6401315a:	pop    ecx
6401315b:	mov    eax,esi
6401315d:	lea    esp,[ebp-0x14]
64013160:	pop    edi
64013161:	pop    esi
64013162:	mov    ecx,DWORD PTR [ebp-0x4]
64013165:	xor    ecx,ebp
64013167:	call   0x64012abc
6401316c:	leave  
6401316d:	ret    
6401316e:	push   ebp
6401316f:	mov    ebp,esp
64013171:	sub    esp,0x10
64013174:	push   ebx
64013175:	push   DWORD PTR [ebp+0x10]
64013178:	lea    ecx,[ebp-0x10]
6401317b:	call   0x64012c5f
64013180:	mov    ebx,DWORD PTR [ebp+0x8]
64013183:	lea    eax,[ebp-0x10]
64013186:	push   eax
64013187:	push   DWORD PTR [ebp+0xc]
6401318a:	call   0x64012fe7
6401318f:	cmp    BYTE PTR [ebp-0x4],0x0
64013193:	pop    ecx
64013194:	pop    ecx
64013195:	pop    ebx
64013196:	je     0x6401319f
64013198:	mov    ecx,DWORD PTR [ebp-0x8]
6401319b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401319f:	leave  
640131a0:	ret    
640131a1:	push   0x0
640131a3:	push   DWORD PTR [esp+0xc]
640131a7:	push   DWORD PTR [esp+0xc]
640131ab:	call   0x6401316e
640131b0:	add    esp,0xc
640131b3:	ret    
640131b4:	jmp    0x64012262
640131b9:	int3   
640131ba:	int3   
640131bb:	int3   
640131bc:	int3   
640131bd:	int3   
640131be:	int3   
640131bf:	int3   
640131c0:	mov    edx,DWORD PTR [esp+0xc]
640131c4:	mov    ecx,DWORD PTR [esp+0x4]
640131c8:	test   edx,edx
640131ca:	je     0x64013235
640131cc:	xor    eax,eax
640131ce:	mov    al,BYTE PTR [esp+0x8]
640131d2:	test   al,al
640131d4:	jne    0x640131ec
640131d6:	cmp    edx,0x100
640131dc:	jb     0x640131ec
640131de:	cmp    DWORD PTR ds:0x64032604,0x0
640131e5:	je     0x640131ec
640131e7:	jmp    0x64018300
640131ec:	push   edi
640131ed:	mov    edi,ecx
640131ef:	cmp    edx,0x4
640131f2:	jb     0x64013225
640131f4:	neg    ecx
640131f6:	and    ecx,0x3
640131f9:	je     0x64013207
640131fb:	sub    edx,ecx
640131fd:	mov    BYTE PTR [edi],al
640131ff:	add    edi,0x1
64013202:	sub    ecx,0x1
64013205:	jne    0x640131fd
64013207:	mov    ecx,eax
64013209:	shl    eax,0x8
6401320c:	add    eax,ecx
6401320e:	mov    ecx,eax
64013210:	shl    eax,0x10
64013213:	add    eax,ecx
64013215:	mov    ecx,edx
64013217:	and    edx,0x3
6401321a:	shr    ecx,0x2
6401321d:	je     0x64013225
6401321f:	rep stos DWORD PTR es:[edi],eax
64013221:	test   edx,edx
64013223:	je     0x6401322f
64013225:	mov    BYTE PTR [edi],al
64013227:	add    edi,0x1
6401322a:	sub    edx,0x1
6401322d:	jne    0x64013225
6401322f:	mov    eax,DWORD PTR [esp+0x8]
64013233:	pop    edi
64013234:	ret    
64013235:	mov    eax,DWORD PTR [esp+0x4]
64013239:	ret    
6401323a:	int3   
6401323b:	int3   
6401323c:	int3   
6401323d:	int3   
6401323e:	int3   
6401323f:	int3   
64013240:	push   ecx
64013241:	lea    ecx,[esp+0x8]
64013245:	sub    ecx,eax
64013247:	and    ecx,0xf
6401324a:	add    eax,ecx
6401324c:	sbb    ecx,ecx
6401324e:	or     eax,ecx
64013250:	pop    ecx
64013251:	jmp    0x640183b0
64013256:	push   ecx
64013257:	lea    ecx,[esp+0x8]
6401325b:	sub    ecx,eax
6401325d:	and    ecx,0x7
64013260:	add    eax,ecx
64013262:	sbb    ecx,ecx
64013264:	or     eax,ecx
64013266:	pop    ecx
64013267:	jmp    0x640183b0
6401326c:	call   0x64014bcb
64013271:	mov    ecx,DWORD PTR [esp+0x4]
64013275:	mov    DWORD PTR [eax+0x14],ecx
64013278:	ret    
64013279:	call   0x64014bcb
6401327e:	mov    ecx,DWORD PTR [eax+0x14]
64013281:	imul   ecx,ecx,0x343fd
64013287:	add    ecx,0x269ec3
6401328d:	mov    DWORD PTR [eax+0x14],ecx
64013290:	mov    eax,ecx
64013292:	shr    eax,0x10
64013295:	and    eax,0x7fff
6401329a:	ret    
6401329b:	push   ebp
6401329c:	mov    ebp,esp
6401329e:	push   ecx
6401329f:	mov    eax,DWORD PTR [ebp+0xc]
640132a2:	cmp    eax,0x1
640132a5:	push   ebx
640132a6:	push   esi
640132a7:	push   edi
640132a8:	jne    0x640133c5
640132ae:	mov    ebx,DWORD PTR ds:0x64025110
640132b4:	mov    edi,0x94
640132b9:	push   edi
640132ba:	push   0x0
640132bc:	call   ebx
640132be:	push   eax
640132bf:	call   DWORD PTR ds:0x64025100
640132c5:	mov    esi,eax
640132c7:	test   esi,esi
640132c9:	jne    0x640132d2
640132cb:	xor    eax,eax
640132cd:	jmp    0x6401346d
640132d2:	push   esi
640132d3:	mov    DWORD PTR [esi],edi
640132d5:	call   DWORD PTR ds:0x640250f4
640132db:	test   eax,eax
640132dd:	push   esi
640132de:	push   0x0
640132e0:	jne    0x640132ed
640132e2:	call   ebx
640132e4:	push   eax
640132e5:	call   DWORD PTR ds:0x64025104
640132eb:	jmp    0x640132cb
640132ed:	mov    eax,DWORD PTR [esi+0x10]
640132f0:	mov    edi,DWORD PTR [esi+0xc]
640132f3:	mov    DWORD PTR [ebp+0xc],eax
640132f6:	mov    eax,DWORD PTR [esi+0x4]
640132f9:	mov    DWORD PTR [ebp+0x10],eax
640132fc:	mov    eax,DWORD PTR [esi+0x8]
640132ff:	mov    DWORD PTR [ebp-0x4],eax
64013302:	and    edi,0x7fff
64013308:	call   ebx
6401330a:	push   eax
6401330b:	call   DWORD PTR ds:0x64025104
64013311:	mov    eax,DWORD PTR [ebp+0xc]
64013314:	cmp    eax,0x2
64013317:	je     0x6401331f
64013319:	or     edi,0x8000
6401331f:	mov    ecx,DWORD PTR [ebp-0x4]
64013322:	mov    ds:0x6402e8d4,eax
64013327:	mov    eax,DWORD PTR [ebp+0x10]
6401332a:	mov    edx,eax
6401332c:	shl    edx,0x8
6401332f:	add    edx,ecx
64013331:	push   0x1
64013333:	mov    DWORD PTR ds:0x6402e8dc,edx
64013339:	mov    ds:0x6402e8e0,eax
6401333e:	mov    DWORD PTR ds:0x6402e8e4,ecx
64013344:	mov    DWORD PTR ds:0x6402e8d8,edi
6401334a:	call   0x64018b7f
6401334f:	test   eax,eax
64013351:	pop    ecx
64013352:	je     0x640132cb
64013358:	call   0x64014d6d
6401335d:	test   eax,eax
6401335f:	jne    0x6401336b
64013361:	call   0x64018bd9
64013366:	jmp    0x640132cb
6401336b:	call   0x64018adc
64013370:	call   DWORD PTR ds:0x6402512c
64013376:	mov    ds:0x64032620,eax
6401337b:	call   0x640189a7
64013380:	mov    ds:0x6402e574,eax
64013385:	call   0x640183db
6401338a:	test   eax,eax
6401338c:	jge    0x64013395
6401338e:	call   0x64014a58
64013393:	jmp    0x64013361
64013395:	call   0x640188ee
6401339a:	test   eax,eax
6401339c:	jl     0x640133be
6401339e:	call   0x6401867b
640133a3:	test   eax,eax
640133a5:	jl     0x640133be
640133a7:	push   0x0
640133a9:	call   0x64016022
640133ae:	test   eax,eax
640133b0:	pop    ecx
640133b1:	jne    0x640133be
640133b3:	inc    DWORD PTR ds:0x6402e570
640133b9:	jmp    0x6401346a
640133be:	call   0x6401862f
640133c3:	jmp    0x6401338e
640133c5:	xor    edi,edi
640133c7:	cmp    eax,edi
640133c9:	jne    0x64013400
640133cb:	cmp    DWORD PTR ds:0x6402e570,edi
640133d1:	jle    0x640132cb
640133d7:	dec    DWORD PTR ds:0x6402e570
640133dd:	cmp    DWORD PTR ds:0x6402e910,edi
640133e3:	jne    0x640133ea
640133e5:	call   0x640161a7
640133ea:	cmp    DWORD PTR [ebp+0x10],edi
640133ed:	jne    0x6401346a
640133ef:	call   0x6401862f
640133f4:	call   0x64014a58
640133f9:	call   0x64018bd9
640133fe:	jmp    0x6401346a
64013400:	cmp    eax,0x2
64013403:	jne    0x6401345e
64013405:	call   0x64014a26
6401340a:	push   0x214
6401340f:	push   0x1
64013411:	call   0x64015dd0
64013416:	mov    esi,eax
64013418:	cmp    esi,edi
6401341a:	pop    ecx
6401341b:	pop    ecx
6401341c:	je     0x640132cb
64013422:	push   esi
64013423:	push   DWORD PTR ds:0x6402d230
64013429:	push   DWORD PTR ds:0x6402e594
6401342f:	call   0x640149af
64013434:	pop    ecx
64013435:	call   eax
64013437:	test   eax,eax
64013439:	je     0x64013452
6401343b:	push   edi
6401343c:	push   esi
6401343d:	call   0x64014a95
64013442:	pop    ecx
64013443:	pop    ecx
64013444:	call   DWORD PTR ds:0x64025128
6401344a:	or     DWORD PTR [esi+0x4],0xffffffff
6401344e:	mov    DWORD PTR [esi],eax
64013450:	jmp    0x6401346a
64013452:	push   esi
64013453:	call   0x64013956
64013458:	pop    ecx
64013459:	jmp    0x640132cb
6401345e:	cmp    eax,0x3
64013461:	jne    0x6401346a
64013463:	push   edi
64013464:	call   0x64014d04
64013469:	pop    ecx
6401346a:	xor    eax,eax
6401346c:	inc    eax
6401346d:	pop    edi
6401346e:	pop    esi
6401346f:	pop    ebx
64013470:	leave  
64013471:	ret    0xc
64013474:	push   0xc
64013476:	push   0x6402a550
6401347b:	call   0x64014080
64013480:	mov    edi,ecx
64013482:	mov    esi,edx
64013484:	mov    ebx,DWORD PTR [ebp+0x8]
64013487:	xor    eax,eax
64013489:	inc    eax
6401348a:	mov    DWORD PTR [ebp-0x1c],eax
6401348d:	test   esi,esi
6401348f:	jne    0x6401349d
64013491:	cmp    DWORD PTR ds:0x6402e570,edx
64013497:	je     0x64013562
6401349d:	and    DWORD PTR [ebp-0x4],0x0
640134a1:	cmp    esi,eax
640134a3:	je     0x640134aa
640134a5:	cmp    esi,0x2
640134a8:	jne    0x640134d8
640134aa:	mov    eax,ds:0x64025cec
640134af:	test   eax,eax
640134b1:	je     0x640134bb
640134b3:	push   edi
640134b4:	push   esi
640134b5:	push   ebx
640134b6:	call   eax
640134b8:	mov    DWORD PTR [ebp-0x1c],eax
640134bb:	cmp    DWORD PTR [ebp-0x1c],0x0
640134bf:	je     0x6401355b
640134c5:	push   edi
640134c6:	push   esi
640134c7:	push   ebx
640134c8:	call   0x6401329b
640134cd:	mov    DWORD PTR [ebp-0x1c],eax
640134d0:	test   eax,eax
640134d2:	je     0x6401355b
640134d8:	push   edi
640134d9:	push   esi
640134da:	push   ebx
640134db:	call   0x6400f710
640134e0:	mov    DWORD PTR [ebp-0x1c],eax
640134e3:	cmp    esi,0x1
640134e6:	jne    0x6401350c
640134e8:	test   eax,eax
640134ea:	jne    0x6401350c
640134ec:	push   edi
640134ed:	push   eax
640134ee:	push   ebx
640134ef:	call   0x6400f710
640134f4:	push   edi
640134f5:	push   0x0
640134f7:	push   ebx
640134f8:	call   0x6401329b
640134fd:	mov    eax,ds:0x64025cec
64013502:	test   eax,eax
64013504:	je     0x6401350c
64013506:	push   edi
64013507:	push   0x0
64013509:	push   ebx
6401350a:	call   eax
6401350c:	test   esi,esi
6401350e:	je     0x64013515
64013510:	cmp    esi,0x3
64013513:	jne    0x6401353b
64013515:	push   edi
64013516:	push   esi
64013517:	push   ebx
64013518:	call   0x6401329b
6401351d:	test   eax,eax
6401351f:	jne    0x64013524
64013521:	and    DWORD PTR [ebp-0x1c],eax
64013524:	cmp    DWORD PTR [ebp-0x1c],0x0
64013528:	je     0x6401353b
6401352a:	mov    eax,ds:0x64025cec
6401352f:	test   eax,eax
64013531:	je     0x6401353b
64013533:	push   edi
64013534:	push   esi
64013535:	push   ebx
64013536:	call   eax
64013538:	mov    DWORD PTR [ebp-0x1c],eax
6401353b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013542:	mov    eax,DWORD PTR [ebp-0x1c]
64013545:	jmp    0x64013564
64013547:	mov    eax,DWORD PTR [ebp-0x14]
6401354a:	mov    ecx,DWORD PTR [eax]
6401354c:	mov    ecx,DWORD PTR [ecx]
6401354e:	push   eax
6401354f:	push   ecx
64013550:	call   0x64018dab
64013555:	pop    ecx
64013556:	pop    ecx
64013557:	ret    
64013558:	mov    esp,DWORD PTR [ebp-0x18]
6401355b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013562:	xor    eax,eax
64013564:	call   0x640140c5
64013569:	ret    
6401356a:	cmp    DWORD PTR [esp+0x8],0x1
6401356f:	jne    0x64013576
64013571:	call   0x64018dc6
64013576:	push   DWORD PTR [esp+0x4]
6401357a:	mov    ecx,DWORD PTR [esp+0x10]
6401357e:	mov    edx,DWORD PTR [esp+0xc]
64013582:	call   0x64013474
64013587:	pop    ecx
64013588:	ret    0xc
6401358b:	push   ebp
6401358c:	mov    ebp,esp
6401358e:	sub    esp,0x20
64013591:	push   ebx
64013592:	xor    ebx,ebx
64013594:	cmp    DWORD PTR [ebp+0xc],ebx
64013597:	jne    0x640135b6
64013599:	call   0x64014880
6401359e:	push   ebx
6401359f:	push   ebx
640135a0:	push   ebx
640135a1:	push   ebx
640135a2:	push   ebx
640135a3:	mov    DWORD PTR [eax],0x16
640135a9:	call   0x640125f4
640135ae:	add    esp,0x14
640135b1:	or     eax,0xffffffff
640135b4:	jmp    0x64013603
640135b6:	mov    eax,DWORD PTR [ebp+0x8]
640135b9:	cmp    eax,ebx
640135bb:	je     0x64013599
640135bd:	push   esi
640135be:	mov    DWORD PTR [ebp-0x18],eax
640135c1:	mov    DWORD PTR [ebp-0x20],eax
640135c4:	lea    eax,[ebp+0x10]
640135c7:	push   eax
640135c8:	push   ebx
640135c9:	push   DWORD PTR [ebp+0xc]
640135cc:	lea    eax,[ebp-0x20]
640135cf:	push   eax
640135d0:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640135d7:	mov    DWORD PTR [ebp-0x14],0x42
640135de:	call   0x64018ea4
640135e3:	add    esp,0x10
640135e6:	dec    DWORD PTR [ebp-0x1c]
640135e9:	mov    esi,eax
640135eb:	js     0x640135f4
640135ed:	mov    eax,DWORD PTR [ebp-0x20]
640135f0:	mov    BYTE PTR [eax],bl
640135f2:	jmp    0x64013600
640135f4:	lea    eax,[ebp-0x20]
640135f7:	push   eax
640135f8:	push   ebx
640135f9:	call   0x64016bc5
640135fe:	pop    ecx
640135ff:	pop    ecx
64013600:	mov    eax,esi
64013602:	pop    esi
64013603:	pop    ebx
64013604:	leave  
64013605:	ret    
64013606:	lea    eax,[esp+0x10]
6401360a:	push   eax
6401360b:	push   0x0
6401360d:	push   DWORD PTR [esp+0x14]
64013611:	push   DWORD PTR [esp+0x14]
64013615:	push   DWORD PTR [esp+0x14]
64013619:	call   0x64019902
6401361e:	add    esp,0x14
64013621:	ret    
64013622:	cmp    DWORD PTR [esp+0x8],0x0
64013627:	je     0x6401362f
64013629:	mov    BYTE PTR [ecx],0x2d
6401362c:	inc    ecx
6401362d:	neg    eax
6401362f:	push   esi
64013630:	mov    esi,ecx
64013632:	xor    edx,edx
64013634:	div    DWORD PTR [esp+0x8]
64013638:	cmp    edx,0x9
6401363b:	jbe    0x64013642
6401363d:	add    dl,0x57
64013640:	jmp    0x64013645
64013642:	add    dl,0x30
64013645:	mov    BYTE PTR [ecx],dl
64013647:	inc    ecx
64013648:	test   eax,eax
6401364a:	ja     0x64013632
6401364c:	mov    BYTE PTR [ecx],0x0
6401364f:	dec    ecx
64013650:	mov    dl,BYTE PTR [esi]
64013652:	mov    al,BYTE PTR [ecx]
64013654:	mov    BYTE PTR [ecx],dl
64013656:	dec    ecx
64013657:	mov    BYTE PTR [esi],al
64013659:	inc    esi
6401365a:	cmp    esi,ecx
6401365c:	jb     0x64013650
6401365e:	pop    esi
6401365f:	ret    0x8
64013662:	push   ebp
64013663:	mov    ebp,esp
64013665:	xor    eax,eax
64013667:	cmp    DWORD PTR [ebp+0x10],0xa
6401366b:	jne    0x64013673
6401366d:	cmp    DWORD PTR [ebp+0x8],eax
64013670:	jge    0x64013673
64013672:	inc    eax
64013673:	mov    ecx,DWORD PTR [ebp+0xc]
64013676:	push   eax
64013677:	push   DWORD PTR [ebp+0x10]
6401367a:	mov    eax,DWORD PTR [ebp+0x8]
6401367d:	call   0x64013622
64013682:	mov    eax,DWORD PTR [ebp+0xc]
64013685:	pop    ebp
64013686:	ret    
64013687:	mov    eax,DWORD PTR [esp+0x4]
6401368b:	mov    dx,WORD PTR [esp+0x8]
64013690:	jmp    0x64013699
64013692:	cmp    cx,dx
64013695:	je     0x640136a8
64013697:	inc    eax
64013698:	inc    eax
64013699:	movzx  ecx,WORD PTR [eax]
6401369c:	test   cx,cx
6401369f:	jne    0x64013692
640136a1:	cmp    WORD PTR [eax],dx
640136a4:	je     0x640136a8
640136a6:	xor    eax,eax
640136a8:	ret    
640136a9:	push   ebp
640136aa:	mov    ebp,esp
640136ac:	sub    esp,0x18
640136af:	push   ebx
640136b0:	push   esi
640136b1:	push   DWORD PTR [ebp+0xc]
640136b4:	lea    ecx,[ebp-0x18]
640136b7:	call   0x64012c5f
640136bc:	mov    ebx,DWORD PTR [ebp+0x8]
640136bf:	mov    esi,0x100
640136c4:	cmp    ebx,esi
640136c6:	jae    0x6401371c
640136c8:	mov    ecx,DWORD PTR [ebp-0x18]
640136cb:	cmp    DWORD PTR [ecx+0xac],0x1
640136d2:	jle    0x640136e8
640136d4:	lea    eax,[ebp-0x18]
640136d7:	push   eax
640136d8:	push   0x1
640136da:	push   ebx
640136db:	call   0x64019e4e
640136e0:	mov    ecx,DWORD PTR [ebp-0x18]
640136e3:	add    esp,0xc
640136e6:	jmp    0x640136f5
640136e8:	mov    eax,DWORD PTR [ecx+0xc8]
640136ee:	movzx  eax,BYTE PTR [eax+ebx*2]
640136f2:	and    eax,0x1
640136f5:	test   eax,eax
640136f7:	je     0x64013708
640136f9:	mov    eax,DWORD PTR [ecx+0xcc]
640136ff:	movzx  eax,BYTE PTR [eax+ebx*1]
64013703:	jmp    0x640137af
64013708:	cmp    BYTE PTR [ebp-0xc],0x0
6401370c:	je     0x64013715
6401370e:	mov    eax,DWORD PTR [ebp-0x10]
64013711:	and    DWORD PTR [eax+0x70],0xfffffffd
64013715:	mov    eax,ebx
64013717:	jmp    0x640137bc
6401371c:	mov    eax,DWORD PTR [ebp-0x18]
6401371f:	cmp    DWORD PTR [eax+0xac],0x1
64013726:	jle    0x64013759
64013728:	mov    DWORD PTR [ebp+0x8],ebx
6401372b:	sar    DWORD PTR [ebp+0x8],0x8
6401372f:	lea    eax,[ebp-0x18]
64013732:	push   eax
64013733:	mov    eax,DWORD PTR [ebp+0x8]
64013736:	and    eax,0xff
6401373b:	push   eax
6401373c:	call   0x64019e0a
64013741:	test   eax,eax
64013743:	pop    ecx
64013744:	pop    ecx
64013745:	je     0x64013759
64013747:	mov    al,BYTE PTR [ebp+0x8]
6401374a:	push   0x2
6401374c:	mov    BYTE PTR [ebp-0x4],al
6401374f:	mov    BYTE PTR [ebp-0x3],bl
64013752:	mov    BYTE PTR [ebp-0x2],0x0
64013756:	pop    ecx
64013757:	jmp    0x6401376e
64013759:	call   0x64014880
6401375e:	mov    DWORD PTR [eax],0x2a
64013764:	xor    ecx,ecx
64013766:	mov    BYTE PTR [ebp-0x4],bl
64013769:	mov    BYTE PTR [ebp-0x3],0x0
6401376d:	inc    ecx
6401376e:	mov    eax,DWORD PTR [ebp-0x18]
64013771:	push   0x1
64013773:	push   DWORD PTR [eax+0x4]
64013776:	lea    edx,[ebp-0x8]
64013779:	push   0x3
6401377b:	push   edx
6401377c:	push   ecx
6401377d:	lea    ecx,[ebp-0x4]
64013780:	push   ecx
64013781:	push   esi
64013782:	push   DWORD PTR [eax+0x14]
64013785:	lea    eax,[ebp-0x18]
64013788:	push   eax
64013789:	call   0x64019dc7
6401378e:	add    esp,0x24
64013791:	test   eax,eax
64013793:	je     0x64013708
64013799:	cmp    eax,0x1
6401379c:	jne    0x640137a4
6401379e:	movzx  eax,BYTE PTR [ebp-0x8]
640137a2:	jmp    0x640137af
640137a4:	movzx  ecx,BYTE PTR [ebp-0x7]
640137a8:	xor    eax,eax
640137aa:	mov    ah,BYTE PTR [ebp-0x8]
640137ad:	or     eax,ecx
640137af:	cmp    BYTE PTR [ebp-0xc],0x0
640137b3:	je     0x640137bc
640137b5:	mov    ecx,DWORD PTR [ebp-0x10]
640137b8:	and    DWORD PTR [ecx+0x70],0xfffffffd
640137bc:	pop    esi
640137bd:	pop    ebx
640137be:	leave  
640137bf:	ret    
640137c0:	cmp    DWORD PTR ds:0x6402e934,0x0
640137c7:	jne    0x640137d9
640137c9:	mov    eax,DWORD PTR [esp+0x4]
640137cd:	lea    ecx,[eax-0x41]
640137d0:	cmp    ecx,0x19
640137d3:	ja     0x640137e6
640137d5:	add    eax,0x20
640137d8:	ret    
640137d9:	push   0x0
640137db:	push   DWORD PTR [esp+0x8]
640137df:	call   0x640136a9
640137e4:	pop    ecx
640137e5:	pop    ecx
640137e6:	ret    
640137e7:	push   ebp
640137e8:	mov    ebp,esp
640137ea:	sub    esp,0x10
640137ed:	push   DWORD PTR [ebp+0xc]
640137f0:	lea    ecx,[ebp-0x10]
640137f3:	call   0x64012c5f
640137f8:	mov    eax,DWORD PTR [ebp-0x10]
640137fb:	cmp    DWORD PTR [eax+0xac],0x1
64013802:	jle    0x64013817
64013804:	lea    eax,[ebp-0x10]
64013807:	push   eax
64013808:	push   0x4
6401380a:	push   DWORD PTR [ebp+0x8]
6401380d:	call   0x64019e4e
64013812:	add    esp,0xc
64013815:	jmp    0x64013827
64013817:	mov    eax,DWORD PTR [eax+0xc8]
6401381d:	mov    ecx,DWORD PTR [ebp+0x8]
64013820:	movzx  eax,BYTE PTR [eax+ecx*2]
64013824:	and    eax,0x4
64013827:	cmp    BYTE PTR [ebp-0x4],0x0
6401382b:	je     0x64013834
6401382d:	mov    ecx,DWORD PTR [ebp-0x8]
64013830:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013834:	leave  
64013835:	ret    
64013836:	cmp    DWORD PTR ds:0x6402e934,0x0
6401383d:	jne    0x64013851
6401383f:	mov    eax,DWORD PTR [esp+0x4]
64013843:	mov    ecx,DWORD PTR ds:0x6402d860
64013849:	movzx  eax,BYTE PTR [ecx+eax*2]
6401384d:	and    eax,0x4
64013850:	ret    
64013851:	push   0x0
64013853:	push   DWORD PTR [esp+0x8]
64013857:	call   0x640137e7
6401385c:	pop    ecx
6401385d:	pop    ecx
6401385e:	ret    
6401385f:	push   ebp
64013860:	mov    ebp,esp
64013862:	sub    esp,0x10
64013865:	push   DWORD PTR [ebp+0xc]
64013868:	lea    ecx,[ebp-0x10]
6401386b:	call   0x64012c5f
64013870:	mov    eax,DWORD PTR [ebp-0x10]
64013873:	cmp    DWORD PTR [eax+0xac],0x1
6401387a:	jle    0x6401388f
6401387c:	lea    eax,[ebp-0x10]
6401387f:	push   eax
64013880:	push   0x8
64013882:	push   DWORD PTR [ebp+0x8]
64013885:	call   0x64019e4e
6401388a:	add    esp,0xc
6401388d:	jmp    0x6401389f
6401388f:	mov    eax,DWORD PTR [eax+0xc8]
64013895:	mov    ecx,DWORD PTR [ebp+0x8]
64013898:	movzx  eax,BYTE PTR [eax+ecx*2]
6401389c:	and    eax,0x8
6401389f:	cmp    BYTE PTR [ebp-0x4],0x0
640138a3:	je     0x640138ac
640138a5:	mov    ecx,DWORD PTR [ebp-0x8]
640138a8:	and    DWORD PTR [ecx+0x70],0xfffffffd
640138ac:	leave  
640138ad:	ret    
640138ae:	cmp    DWORD PTR ds:0x6402e934,0x0
640138b5:	jne    0x640138c9
640138b7:	mov    eax,DWORD PTR [esp+0x4]
640138bb:	mov    ecx,DWORD PTR ds:0x6402d860
640138c1:	movzx  eax,BYTE PTR [ecx+eax*2]
640138c5:	and    eax,0x8
640138c8:	ret    
640138c9:	push   0x0
640138cb:	push   DWORD PTR [esp+0x8]
640138cf:	call   0x6401385f
640138d4:	pop    ecx
640138d5:	pop    ecx
640138d6:	ret    
640138d7:	push   ebp
640138d8:	mov    ebp,esp
640138da:	sub    esp,0x10
640138dd:	push   DWORD PTR [ebp+0xc]
640138e0:	lea    ecx,[ebp-0x10]
640138e3:	call   0x64012c5f
640138e8:	mov    eax,DWORD PTR [ebp-0x10]
640138eb:	cmp    DWORD PTR [eax+0xac],0x1
640138f2:	jle    0x6401390a
640138f4:	lea    eax,[ebp-0x10]
640138f7:	push   eax
640138f8:	push   0x157
640138fd:	push   DWORD PTR [ebp+0x8]
64013900:	call   0x64019e4e
64013905:	add    esp,0xc
64013908:	jmp    0x6401391c
6401390a:	mov    eax,DWORD PTR [eax+0xc8]
64013910:	mov    ecx,DWORD PTR [ebp+0x8]
64013913:	movzx  eax,WORD PTR [eax+ecx*2]
64013917:	and    eax,0x157
6401391c:	cmp    BYTE PTR [ebp-0x4],0x0
64013920:	je     0x64013929
64013922:	mov    ecx,DWORD PTR [ebp-0x8]
64013925:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013929:	leave  
6401392a:	ret    
6401392b:	cmp    DWORD PTR ds:0x6402e934,0x0
64013932:	jne    0x64013948
64013934:	mov    eax,DWORD PTR [esp+0x4]
64013938:	mov    ecx,DWORD PTR ds:0x6402d860
6401393e:	movzx  eax,WORD PTR [ecx+eax*2]
64013942:	and    eax,0x157
64013947:	ret    
64013948:	push   0x0
6401394a:	push   DWORD PTR [esp+0x8]
6401394e:	call   0x640138d7
64013953:	pop    ecx
64013954:	pop    ecx
64013955:	ret    
64013956:	push   0xc
64013958:	push   0x6402a570
6401395d:	call   0x64014080
64013962:	mov    esi,DWORD PTR [ebp+0x8]
64013965:	test   esi,esi
64013967:	je     0x640139de
64013969:	cmp    DWORD PTR ds:0x640324dc,0x3
64013970:	jne    0x640139b5
64013972:	push   0x4
64013974:	call   0x6401a07a
64013979:	pop    ecx
6401397a:	and    DWORD PTR [ebp-0x4],0x0
6401397e:	push   esi
6401397f:	call   0x6401a0f3
64013984:	pop    ecx
64013985:	mov    DWORD PTR [ebp-0x1c],eax
64013988:	test   eax,eax
6401398a:	je     0x64013995
6401398c:	push   esi
6401398d:	push   eax
6401398e:	call   0x6401a11e
64013993:	pop    ecx
64013994:	pop    ecx
64013995:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401399c:	call   0x640139ac
640139a1:	cmp    DWORD PTR [ebp-0x1c],0x0
640139a5:	jne    0x640139de
640139a7:	push   DWORD PTR [ebp+0x8]
640139aa:	jmp    0x640139b6
640139ac:	push   0x4
640139ae:	call   0x64019fa2
640139b3:	pop    ecx
640139b4:	ret    
640139b5:	push   esi
640139b6:	push   0x0
640139b8:	push   DWORD PTR ds:0x6402ea6c
640139be:	call   DWORD PTR ds:0x64025104
640139c4:	test   eax,eax
640139c6:	jne    0x640139de
640139c8:	call   0x64014880
640139cd:	mov    esi,eax
640139cf:	call   DWORD PTR ds:0x64025044
640139d5:	push   eax
640139d6:	call   0x64014845
640139db:	mov    DWORD PTR [esi],eax
640139dd:	pop    ecx
640139de:	call   0x640140c5
640139e3:	ret    
640139e4:	push   0xc
640139e6:	push   0x6402a590
640139eb:	call   0x64014080
640139f0:	and    DWORD PTR [ebp-0x1c],0x0
640139f4:	mov    esi,DWORD PTR [ebp+0x8]
640139f7:	cmp    esi,DWORD PTR ds:0x640324cc
640139fd:	ja     0x64013a21
640139ff:	push   0x4
64013a01:	call   0x6401a07a
64013a06:	pop    ecx
64013a07:	and    DWORD PTR [ebp-0x4],0x0
64013a0b:	push   esi
64013a0c:	call   0x6401a8c7
64013a11:	pop    ecx
64013a12:	mov    DWORD PTR [ebp-0x1c],eax
64013a15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013a1c:	call   0x64013a2a
64013a21:	mov    eax,DWORD PTR [ebp-0x1c]
64013a24:	call   0x640140c5
64013a29:	ret    
64013a2a:	push   0x4
64013a2c:	call   0x64019fa2
64013a31:	pop    ecx
64013a32:	ret    
64013a33:	push   ebp
64013a34:	mov    ebp,DWORD PTR [esp+0x8]
64013a38:	cmp    ebp,0xffffffe0
64013a3b:	ja     0x64013ae0
64013a41:	push   ebx
64013a42:	mov    ebx,DWORD PTR ds:0x64025100
64013a48:	push   esi
64013a49:	push   edi
64013a4a:	xor    esi,esi
64013a4c:	cmp    DWORD PTR ds:0x6402ea6c,esi
64013a52:	mov    edi,ebp
64013a54:	jne    0x64013a6e
64013a56:	call   0x6401ad4a
64013a5b:	push   0x1e
64013a5d:	call   0x6401abaa
64013a62:	push   0xff
64013a67:	call   0x64015f50
64013a6c:	pop    ecx
64013a6d:	pop    ecx
64013a6e:	mov    eax,ds:0x640324dc
64013a73:	cmp    eax,0x1
64013a76:	jne    0x64013a86
64013a78:	cmp    ebp,esi
64013a7a:	je     0x64013a80
64013a7c:	mov    eax,ebp
64013a7e:	jmp    0x64013a83
64013a80:	xor    eax,eax
64013a82:	inc    eax
64013a83:	push   eax
64013a84:	jmp    0x64013aa4
64013a86:	cmp    eax,0x3
64013a89:	jne    0x64013a96
64013a8b:	push   ebp
64013a8c:	call   0x640139e4
64013a91:	cmp    eax,esi
64013a93:	pop    ecx
64013a94:	jne    0x64013aad
64013a96:	cmp    ebp,esi
64013a98:	jne    0x64013a9d
64013a9a:	xor    edi,edi
64013a9c:	inc    edi
64013a9d:	add    edi,0xf
64013aa0:	and    edi,0xfffffff0
64013aa3:	push   edi
64013aa4:	push   esi
64013aa5:	push   DWORD PTR ds:0x6402ea6c
64013aab:	call   ebx
64013aad:	mov    esi,eax
64013aaf:	test   esi,esi
64013ab1:	jne    0x64013ad9
64013ab3:	cmp    DWORD PTR ds:0x6402eee4,eax
64013ab9:	push   0xc
64013abb:	pop    edi
64013abc:	je     0x64013acb
64013abe:	push   ebp
64013abf:	call   0x64014efb
64013ac4:	test   eax,eax
64013ac6:	pop    ecx
64013ac7:	jne    0x64013a4a
64013ac9:	jmp    0x64013ad2
64013acb:	call   0x64014880
64013ad0:	mov    DWORD PTR [eax],edi
64013ad2:	call   0x64014880
64013ad7:	mov    DWORD PTR [eax],edi
64013ad9:	pop    edi
64013ada:	mov    eax,esi
64013adc:	pop    esi
64013add:	pop    ebx
64013ade:	pop    ebp
64013adf:	ret    
64013ae0:	push   ebp
64013ae1:	call   0x64014efb
64013ae6:	pop    ecx
64013ae7:	call   0x64014880
64013aec:	mov    DWORD PTR [eax],0xc
64013af2:	xor    eax,eax
64013af4:	pop    ebp
64013af5:	ret    
64013af6:	int3   
64013af7:	int3   
64013af8:	int3   
64013af9:	int3   
64013afa:	int3   
64013afb:	int3   
64013afc:	int3   
64013afd:	int3   
64013afe:	int3   
64013aff:	int3   
64013b00:	push   ebp
64013b01:	mov    ebp,esp
64013b03:	push   edi
64013b04:	push   esi
64013b05:	mov    esi,DWORD PTR [ebp+0xc]
64013b08:	mov    ecx,DWORD PTR [ebp+0x10]
64013b0b:	mov    edi,DWORD PTR [ebp+0x8]
64013b0e:	mov    eax,ecx
64013b10:	mov    edx,ecx
64013b12:	add    eax,esi
64013b14:	cmp    edi,esi
64013b16:	jbe    0x64013b20
64013b18:	cmp    edi,eax
64013b1a:	jb     0x64013cc4
64013b20:	cmp    ecx,0x100
64013b26:	jb     0x64013b47
64013b28:	cmp    DWORD PTR ds:0x64032604,0x0
64013b2f:	je     0x64013b47
64013b31:	push   edi
64013b32:	push   esi
64013b33:	and    edi,0xf
64013b36:	and    esi,0xf
64013b39:	cmp    edi,esi
64013b3b:	pop    esi
64013b3c:	pop    edi
64013b3d:	jne    0x64013b47
64013b3f:	pop    esi
64013b40:	pop    edi
64013b41:	pop    ebp
64013b42:	jmp    0x6401ae0a
64013b47:	test   edi,0x3
64013b4d:	jne    0x64013b64
64013b4f:	shr    ecx,0x2
64013b52:	and    edx,0x3
64013b55:	cmp    ecx,0x8
64013b58:	jb     0x64013b84
64013b5a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013b5c:	jmp    DWORD PTR [edx*4+0x64013c74]
64013b63:	nop
64013b64:	mov    eax,edi
64013b66:	mov    edx,0x3
64013b6b:	sub    ecx,0x4
64013b6e:	jb     0x64013b7c
64013b70:	and    eax,0x3
64013b73:	add    ecx,eax
64013b75:	jmp    DWORD PTR [eax*4+0x64013b88]
64013b7c:	jmp    DWORD PTR [ecx*4+0x64013c84]
64013b83:	nop
64013b84:	jmp    DWORD PTR [ecx*4+0x64013c08]
64013b8b:	nop
64013b8c:	cwde   
64013b8d:	cmp    eax,DWORD PTR [ecx]
64013b8f:	les    edi,FWORD PTR fs:[ebx]
64013b92:	add    DWORD PTR [eax+ebp*8+0x3b],esp
64013b96:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
64013b9a:	mov    al,BYTE PTR [esi]
64013b9c:	mov    BYTE PTR [edi],al
64013b9e:	mov    al,BYTE PTR [esi+0x1]
64013ba1:	mov    BYTE PTR [edi+0x1],al
64013ba4:	mov    al,BYTE PTR [esi+0x2]
64013ba7:	shr    ecx,0x2
64013baa:	mov    BYTE PTR [edi+0x2],al
64013bad:	add    esi,0x3
64013bb0:	add    edi,0x3
64013bb3:	cmp    ecx,0x8
64013bb6:	jb     0x64013b84
64013bb8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013bba:	jmp    DWORD PTR [edx*4+0x64013c74]
64013bc1:	lea    ecx,[ecx+0x0]
64013bc4:	and    edx,ecx
64013bc6:	mov    al,BYTE PTR [esi]
64013bc8:	mov    BYTE PTR [edi],al
64013bca:	mov    al,BYTE PTR [esi+0x1]
64013bcd:	shr    ecx,0x2
64013bd0:	mov    BYTE PTR [edi+0x1],al
64013bd3:	add    esi,0x2
64013bd6:	add    edi,0x2
64013bd9:	cmp    ecx,0x8
64013bdc:	jb     0x64013b84
64013bde:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013be0:	jmp    DWORD PTR [edx*4+0x64013c74]
64013be7:	nop
64013be8:	and    edx,ecx
64013bea:	mov    al,BYTE PTR [esi]
64013bec:	mov    BYTE PTR [edi],al
64013bee:	add    esi,0x1
64013bf1:	shr    ecx,0x2
64013bf4:	add    edi,0x1
64013bf7:	cmp    ecx,0x8
64013bfa:	jb     0x64013b84
64013bfc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013bfe:	jmp    DWORD PTR [edx*4+0x64013c74]
64013c05:	lea    ecx,[ecx+0x0]
64013c08:	imul   edi,DWORD PTR [ecx+eax*1],0x64
64013c0c:	pop    eax
64013c0d:	cmp    al,0x1
64013c0f:	fs push eax
64013c11:	cmp    al,0x1
64013c13:	fs dec eax
64013c15:	cmp    al,0x1
64013c17:	fs inc eax
64013c19:	cmp    al,0x1
64013c1b:	cmp    BYTE PTR fs:[ecx+eax*1],bh
64013c1f:	xor    BYTE PTR fs:[ecx+eax*1],bh
64013c23:	sub    BYTE PTR fs:[ecx+eax*1],bh
64013c27:	mov    eax,DWORD PTR fs:[esi+ecx*4-0x1c]
64013c2c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64013c30:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64013c34:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64013c38:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
64013c3c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64013c40:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64013c44:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64013c48:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
64013c4c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64013c50:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64013c54:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64013c58:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
64013c5c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64013c60:	lea    eax,[ecx*4+0x0]
64013c67:	add    esi,eax
64013c69:	add    edi,eax
64013c6b:	jmp    DWORD PTR [edx*4+0x64013c74]
64013c72:	mov    edi,edi
64013c74:	test   BYTE PTR [ecx+eax*1],bh
64013c77:	mov    WORD PTR fs:[ecx+eax*1],?
64013c7b:	fs cwde 
64013c7d:	cmp    al,0x1
64013c7f:	lods   al,BYTE PTR fs:[esi]
64013c81:	cmp    al,0x1
64013c83:	mov    eax,DWORD PTR fs:[ebp+0x8]
64013c87:	pop    esi
64013c88:	pop    edi
64013c89:	leave  
64013c8a:	ret    
64013c8b:	nop
64013c8c:	mov    al,BYTE PTR [esi]
64013c8e:	mov    BYTE PTR [edi],al
64013c90:	mov    eax,DWORD PTR [ebp+0x8]
64013c93:	pop    esi
64013c94:	pop    edi
64013c95:	leave  
64013c96:	ret    
64013c97:	nop
64013c98:	mov    al,BYTE PTR [esi]
64013c9a:	mov    BYTE PTR [edi],al
64013c9c:	mov    al,BYTE PTR [esi+0x1]
64013c9f:	mov    BYTE PTR [edi+0x1],al
64013ca2:	mov    eax,DWORD PTR [ebp+0x8]
64013ca5:	pop    esi
64013ca6:	pop    edi
64013ca7:	leave  
64013ca8:	ret    
64013ca9:	lea    ecx,[ecx+0x0]
64013cac:	mov    al,BYTE PTR [esi]
64013cae:	mov    BYTE PTR [edi],al
64013cb0:	mov    al,BYTE PTR [esi+0x1]
64013cb3:	mov    BYTE PTR [edi+0x1],al
64013cb6:	mov    al,BYTE PTR [esi+0x2]
64013cb9:	mov    BYTE PTR [edi+0x2],al
64013cbc:	mov    eax,DWORD PTR [ebp+0x8]
64013cbf:	pop    esi
64013cc0:	pop    edi
64013cc1:	leave  
64013cc2:	ret    
64013cc3:	nop
64013cc4:	lea    esi,[ecx+esi*1-0x4]
64013cc8:	lea    edi,[ecx+edi*1-0x4]
64013ccc:	test   edi,0x3
64013cd2:	jne    0x64013cf8
64013cd4:	shr    ecx,0x2
64013cd7:	and    edx,0x3
64013cda:	cmp    ecx,0x8
64013cdd:	jb     0x64013cec
64013cdf:	std    
64013ce0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013ce2:	cld    
64013ce3:	jmp    DWORD PTR [edx*4+0x64013e10]
64013cea:	mov    edi,edi
64013cec:	neg    ecx
64013cee:	jmp    DWORD PTR [ecx*4+0x64013dc0]
64013cf5:	lea    ecx,[ecx+0x0]
64013cf8:	mov    eax,edi
64013cfa:	mov    edx,0x3
64013cff:	cmp    ecx,0x4
64013d02:	jb     0x64013d10
64013d04:	and    eax,0x3
64013d07:	sub    ecx,eax
64013d09:	jmp    DWORD PTR [eax*4+0x64013d14]
64013d10:	jmp    DWORD PTR [ecx*4+0x64013e10]
64013d17:	nop
64013d18:	and    al,0x3d
64013d1a:	add    DWORD PTR [eax+ecx*2+0x3d],esp
64013d1e:	add    DWORD PTR [eax+esi*2+0x3d],esp
64013d22:	add    DWORD PTR [edx+ecx*4+0x46],esp
64013d26:	add    esp,DWORD PTR [ebx]
64013d28:	ror    DWORD PTR [eax-0x117cfcb9],1
64013d2e:	add    ecx,eax
64013d30:	jmp    0x65f0c037
64013d35:	cmp    ecx,0x8
64013d38:	jb     0x64013cec
64013d3a:	std    
64013d3b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013d3d:	cld    
64013d3e:	jmp    DWORD PTR [edx*4+0x64013e10]
64013d45:	lea    ecx,[ecx+0x0]
64013d48:	mov    al,BYTE PTR [esi+0x3]
64013d4b:	and    edx,ecx
64013d4d:	mov    BYTE PTR [edi+0x3],al
64013d50:	mov    al,BYTE PTR [esi+0x2]
64013d53:	shr    ecx,0x2
64013d56:	mov    BYTE PTR [edi+0x2],al
64013d59:	sub    esi,0x2
64013d5c:	sub    edi,0x2
64013d5f:	cmp    ecx,0x8
64013d62:	jb     0x64013cec
64013d64:	std    
64013d65:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013d67:	cld    
64013d68:	jmp    DWORD PTR [edx*4+0x64013e10]
64013d6f:	nop
64013d70:	mov    al,BYTE PTR [esi+0x3]
64013d73:	and    edx,ecx
64013d75:	mov    BYTE PTR [edi+0x3],al
64013d78:	mov    al,BYTE PTR [esi+0x2]
64013d7b:	mov    BYTE PTR [edi+0x2],al
64013d7e:	mov    al,BYTE PTR [esi+0x1]
64013d81:	shr    ecx,0x2
64013d84:	mov    BYTE PTR [edi+0x1],al
64013d87:	sub    esi,0x3
64013d8a:	sub    edi,0x3
64013d8d:	cmp    ecx,0x8
64013d90:	jb     0x64013cec
64013d96:	std    
64013d97:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013d99:	cld    
64013d9a:	jmp    DWORD PTR [edx*4+0x64013e10]
64013da1:	lea    ecx,[ecx+0x0]
64013da4:	les    edi,FWORD PTR ds:0x3dcc6401
64013daa:	add    DWORD PTR [esp+edx*8+0x3d],esp
64013dae:	add    DWORD PTR [esp+ebx*8+0x3d],esp
64013db2:	add    DWORD PTR [esp+eiz*8+0x3d],esp
64013db6:	add    DWORD PTR [esp+ebp*8+0x3d],esp
64013dba:	add    DWORD PTR [esp+esi*8+0x3d],esp
64013dbe:	add    DWORD PTR [edi+eax*1+0x3e],esp
64013dc2:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64013dc6:	mov    ds,WORD PTR [ecx+ecx*4]
64013dc9:	inc    esp
64013dca:	(bad)  
64013dcb:	sbb    al,0x8b
64013dcd:	inc    esp
64013dce:	mov    ds,WORD PTR [eax]
64013dd0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64013dd4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64013dd8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
64013ddc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64013de0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64013de4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64013de8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
64013dec:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64013df0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64013df4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64013df8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
64013dfc:	lea    eax,[ecx*4+0x0]
64013e03:	add    esi,eax
64013e05:	add    edi,eax
64013e07:	jmp    DWORD PTR [edx*4+0x64013e10]
64013e0e:	mov    edi,edi
64013e10:	and    BYTE PTR [esi],bh
64013e12:	add    DWORD PTR [eax+ebp*1+0x3e],esp
64013e16:	add    DWORD PTR [eax+edi*1+0x3e],esp
64013e1a:	add    DWORD PTR [esp+ecx*2+0x3e],esp
64013e1e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64013e22:	or     BYTE PTR [esi+0x5f],bl
64013e25:	leave  
64013e26:	ret    
64013e27:	nop
64013e28:	mov    al,BYTE PTR [esi+0x3]
64013e2b:	mov    BYTE PTR [edi+0x3],al
64013e2e:	mov    eax,DWORD PTR [ebp+0x8]
64013e31:	pop    esi
64013e32:	pop    edi
64013e33:	leave  
64013e34:	ret    
64013e35:	lea    ecx,[ecx+0x0]
64013e38:	mov    al,BYTE PTR [esi+0x3]
64013e3b:	mov    BYTE PTR [edi+0x3],al
64013e3e:	mov    al,BYTE PTR [esi+0x2]
64013e41:	mov    BYTE PTR [edi+0x2],al
64013e44:	mov    eax,DWORD PTR [ebp+0x8]
64013e47:	pop    esi
64013e48:	pop    edi
64013e49:	leave  
64013e4a:	ret    
64013e4b:	nop
64013e4c:	mov    al,BYTE PTR [esi+0x3]
64013e4f:	mov    BYTE PTR [edi+0x3],al
64013e52:	mov    al,BYTE PTR [esi+0x2]
64013e55:	mov    BYTE PTR [edi+0x2],al
64013e58:	mov    al,BYTE PTR [esi+0x1]
64013e5b:	mov    BYTE PTR [edi+0x1],al
64013e5e:	mov    eax,DWORD PTR [ebp+0x8]
64013e61:	pop    esi
64013e62:	pop    edi
64013e63:	leave  
64013e64:	ret    
64013e65:	push   0x10
64013e67:	push   0x6402a5b0
64013e6c:	call   0x64014080
64013e71:	mov    ebx,DWORD PTR [ebp+0x8]
64013e74:	test   ebx,ebx
64013e76:	jne    0x64013e86
64013e78:	push   DWORD PTR [ebp+0xc]
64013e7b:	call   0x64013a33
64013e80:	pop    ecx
64013e81:	jmp    0x64014052
64013e86:	mov    esi,DWORD PTR [ebp+0xc]
64013e89:	test   esi,esi
64013e8b:	jne    0x64013e99
64013e8d:	push   ebx
64013e8e:	call   0x64013956
64013e93:	pop    ecx
64013e94:	jmp    0x64014050
64013e99:	cmp    DWORD PTR ds:0x640324dc,0x3
64013ea0:	jne    0x64014039
64013ea6:	xor    edi,edi
64013ea8:	mov    DWORD PTR [ebp-0x1c],edi
64013eab:	cmp    esi,0xffffffe0
64013eae:	ja     0x6401403e
64013eb4:	push   0x4
64013eb6:	call   0x6401a07a
64013ebb:	pop    ecx
64013ebc:	mov    DWORD PTR [ebp-0x4],edi
64013ebf:	push   ebx
64013ec0:	call   0x6401a0f3
64013ec5:	pop    ecx
64013ec6:	mov    DWORD PTR [ebp-0x20],eax
64013ec9:	cmp    eax,edi
64013ecb:	je     0x64013f6f
64013ed1:	cmp    esi,DWORD PTR ds:0x640324cc
64013ed7:	ja     0x64013f22
64013ed9:	push   esi
64013eda:	push   ebx
64013edb:	push   eax
64013edc:	call   0x6401a5e8
64013ee1:	add    esp,0xc
64013ee4:	test   eax,eax
64013ee6:	je     0x64013eed
64013ee8:	mov    DWORD PTR [ebp-0x1c],ebx
64013eeb:	jmp    0x64013f22
64013eed:	push   esi
64013eee:	call   0x6401a8c7
64013ef3:	pop    ecx
64013ef4:	mov    DWORD PTR [ebp-0x1c],eax
64013ef7:	cmp    eax,edi
64013ef9:	je     0x64013f22
64013efb:	mov    eax,DWORD PTR [ebx-0x4]
64013efe:	dec    eax
64013eff:	cmp    eax,esi
64013f01:	jb     0x64013f05
64013f03:	mov    eax,esi
64013f05:	push   eax
64013f06:	push   ebx
64013f07:	push   DWORD PTR [ebp-0x1c]
64013f0a:	call   0x640144e0
64013f0f:	push   ebx
64013f10:	call   0x6401a0f3
64013f15:	mov    DWORD PTR [ebp-0x20],eax
64013f18:	push   ebx
64013f19:	push   eax
64013f1a:	call   0x6401a11e
64013f1f:	add    esp,0x18
64013f22:	cmp    DWORD PTR [ebp-0x1c],edi
64013f25:	jne    0x64013f6f
64013f27:	cmp    esi,edi
64013f29:	jne    0x64013f31
64013f2b:	xor    esi,esi
64013f2d:	inc    esi
64013f2e:	mov    DWORD PTR [ebp+0xc],esi
64013f31:	add    esi,0xf
64013f34:	and    esi,0xfffffff0
64013f37:	mov    DWORD PTR [ebp+0xc],esi
64013f3a:	push   esi
64013f3b:	push   edi
64013f3c:	push   DWORD PTR ds:0x6402ea6c
64013f42:	call   DWORD PTR ds:0x64025100
64013f48:	mov    DWORD PTR [ebp-0x1c],eax
64013f4b:	cmp    eax,edi
64013f4d:	je     0x64013f6f
64013f4f:	mov    eax,DWORD PTR [ebx-0x4]
64013f52:	dec    eax
64013f53:	cmp    eax,esi
64013f55:	jb     0x64013f59
64013f57:	mov    eax,esi
64013f59:	push   eax
64013f5a:	push   ebx
64013f5b:	push   DWORD PTR [ebp-0x1c]
64013f5e:	call   0x640144e0
64013f63:	push   ebx
64013f64:	push   DWORD PTR [ebp-0x20]
64013f67:	call   0x6401a11e
64013f6c:	add    esp,0x14
64013f6f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013f76:	call   0x64013fa9
64013f7b:	cmp    DWORD PTR [ebp-0x20],0x0
64013f7f:	jne    0x64013fb2
64013f81:	test   esi,esi
64013f83:	jne    0x64013f86
64013f85:	inc    esi
64013f86:	add    esi,0xf
64013f89:	and    esi,0xfffffff0
64013f8c:	mov    DWORD PTR [ebp+0xc],esi
64013f8f:	push   esi
64013f90:	push   ebx
64013f91:	push   0x0
64013f93:	push   DWORD PTR ds:0x6402ea6c
64013f99:	call   DWORD PTR ds:0x64025108
64013f9f:	mov    edi,eax
64013fa1:	jmp    0x64013fb5
64013fa3:	mov    esi,DWORD PTR [ebp+0xc]
64013fa6:	mov    ebx,DWORD PTR [ebp+0x8]
64013fa9:	push   0x4
64013fab:	call   0x64019fa2
64013fb0:	pop    ecx
64013fb1:	ret    
64013fb2:	mov    edi,DWORD PTR [ebp-0x1c]
64013fb5:	test   edi,edi
64013fb7:	jne    0x6401407c
64013fbd:	cmp    DWORD PTR ds:0x6402eee4,edi
64013fc3:	je     0x64013ff1
64013fc5:	push   esi
64013fc6:	call   0x64014efb
64013fcb:	pop    ecx
64013fcc:	test   eax,eax
64013fce:	jne    0x64013ea6
64013fd4:	call   0x64014880
64013fd9:	cmp    DWORD PTR [ebp-0x20],edi
64013fdc:	jne    0x6401404a
64013fde:	mov    esi,eax
64013fe0:	call   DWORD PTR ds:0x64025044
64013fe6:	push   eax
64013fe7:	call   0x64014845
64013fec:	pop    ecx
64013fed:	mov    DWORD PTR [esi],eax
64013fef:	jmp    0x64014050
64013ff1:	test   edi,edi
64013ff3:	jne    0x6401407c
64013ff9:	call   0x64014880
64013ffe:	cmp    DWORD PTR [ebp-0x20],edi
64014001:	je     0x6401406b
64014003:	mov    DWORD PTR [eax],0xc
64014009:	jmp    0x6401407c
6401400b:	test   esi,esi
6401400d:	jne    0x64014010
6401400f:	inc    esi
64014010:	push   esi
64014011:	push   ebx
64014012:	push   0x0
64014014:	push   DWORD PTR ds:0x6402ea6c
6401401a:	call   DWORD PTR ds:0x64025108
64014020:	mov    edi,eax
64014022:	test   edi,edi
64014024:	jne    0x6401407c
64014026:	cmp    DWORD PTR ds:0x6402eee4,eax
6401402c:	je     0x64014062
6401402e:	push   esi
6401402f:	call   0x64014efb
64014034:	pop    ecx
64014035:	test   eax,eax
64014037:	je     0x64014058
64014039:	cmp    esi,0xffffffe0
6401403c:	jbe    0x6401400b
6401403e:	push   esi
6401403f:	call   0x64014efb
64014044:	pop    ecx
64014045:	call   0x64014880
6401404a:	mov    DWORD PTR [eax],0xc
64014050:	xor    eax,eax
64014052:	call   0x640140c5
64014057:	ret    
64014058:	call   0x64014880
6401405d:	jmp    0x64013fde
64014062:	test   edi,edi
64014064:	jne    0x6401407c
64014066:	call   0x64014880
6401406b:	mov    esi,eax
6401406d:	call   DWORD PTR ds:0x64025044
64014073:	push   eax
64014074:	call   0x64014845
64014079:	mov    DWORD PTR [esi],eax
6401407b:	pop    ecx
6401407c:	mov    eax,edi
6401407e:	jmp    0x64014052
64014080:	push   0x640140e0
64014085:	push   DWORD PTR fs:0x0
6401408c:	mov    eax,DWORD PTR [esp+0x10]
64014090:	mov    DWORD PTR [esp+0x10],ebp
64014094:	lea    ebp,[esp+0x10]
64014098:	sub    esp,eax
6401409a:	push   ebx
6401409b:	push   esi
6401409c:	push   edi
6401409d:	mov    eax,ds:0x6402d09c
640140a2:	xor    DWORD PTR [ebp-0x4],eax
640140a5:	xor    eax,ebp
640140a7:	push   eax
640140a8:	mov    DWORD PTR [ebp-0x18],esp
640140ab:	push   DWORD PTR [ebp-0x8]
640140ae:	mov    eax,DWORD PTR [ebp-0x4]
640140b1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640140b8:	mov    DWORD PTR [ebp-0x8],eax
640140bb:	lea    eax,[ebp-0x10]
640140be:	mov    fs:0x0,eax
640140c4:	ret    
640140c5:	mov    ecx,DWORD PTR [ebp-0x10]
640140c8:	mov    DWORD PTR fs:0x0,ecx
640140cf:	pop    ecx
640140d0:	pop    edi
640140d1:	pop    edi
640140d2:	pop    esi
640140d3:	pop    ebx
640140d4:	mov    esp,ebp
640140d6:	pop    ebp
640140d7:	push   ecx
640140d8:	ret    
640140d9:	int3   
640140da:	int3   
640140db:	int3   
640140dc:	int3   
640140dd:	int3   
640140de:	int3   
640140df:	int3   
640140e0:	sub    esp,0x14
640140e3:	push   ebx
640140e4:	mov    ebx,DWORD PTR [esp+0x20]
640140e8:	push   ebp
640140e9:	push   esi
640140ea:	mov    esi,DWORD PTR [ebx+0x8]
640140ed:	xor    esi,DWORD PTR ds:0x6402d09c
640140f3:	push   edi
640140f4:	mov    eax,DWORD PTR [esi]
640140f6:	cmp    eax,0xfffffffe
640140f9:	mov    BYTE PTR [esp+0x13],0x0
640140fe:	mov    DWORD PTR [esp+0x18],0x1
64014106:	lea    edi,[ebx+0x10]
64014109:	je     0x64014118
6401410b:	mov    ecx,DWORD PTR [esi+0x4]
6401410e:	add    ecx,edi
64014110:	xor    ecx,DWORD PTR [eax+edi*1]
64014113:	call   0x64012abc
64014118:	mov    ecx,DWORD PTR [esi+0xc]
6401411b:	mov    eax,DWORD PTR [esi+0x8]
6401411e:	add    ecx,edi
64014120:	xor    ecx,DWORD PTR [eax+edi*1]
64014123:	call   0x64012abc
64014128:	mov    eax,DWORD PTR [esp+0x28]
6401412c:	test   BYTE PTR [eax+0x4],0x66
64014130:	jne    0x64014255
64014136:	mov    ebp,DWORD PTR [ebx+0xc]
64014139:	cmp    ebp,0xfffffffe
6401413c:	mov    ecx,DWORD PTR [esp+0x30]
64014140:	lea    edx,[esp+0x1c]
64014144:	mov    DWORD PTR [esp+0x1c],eax
64014148:	mov    DWORD PTR [esp+0x20],ecx
6401414c:	mov    DWORD PTR [ebx-0x4],edx
6401414f:	je     0x640141af
64014151:	lea    eax,[ebp+ebp*2+0x0]
64014155:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64014159:	test   ecx,ecx
6401415b:	lea    ebx,[esi+eax*4+0x10]
6401415f:	mov    eax,DWORD PTR [ebx]
64014161:	mov    DWORD PTR [esp+0x14],eax
64014165:	je     0x6401417d
64014167:	mov    edx,edi
64014169:	call   0x6401afe2
6401416e:	test   eax,eax
64014170:	mov    BYTE PTR [esp+0x13],0x1
64014175:	jl     0x640141bb
64014177:	jg     0x640141c5
64014179:	mov    eax,DWORD PTR [esp+0x14]
6401417d:	cmp    eax,0xfffffffe
64014180:	mov    ebp,eax
64014182:	jne    0x64014151
64014184:	cmp    BYTE PTR [esp+0x13],0x0
64014189:	je     0x640141af
6401418b:	mov    eax,DWORD PTR [esi]
6401418d:	cmp    eax,0xfffffffe
64014190:	je     0x6401419f
64014192:	mov    ecx,DWORD PTR [esi+0x4]
64014195:	add    ecx,edi
64014197:	xor    ecx,DWORD PTR [eax+edi*1]
6401419a:	call   0x64012abc
6401419f:	mov    ecx,DWORD PTR [esi+0xc]
640141a2:	mov    eax,DWORD PTR [esi+0x8]
640141a5:	add    ecx,edi
640141a7:	xor    ecx,DWORD PTR [eax+edi*1]
640141aa:	call   0x64012abc
640141af:	mov    eax,DWORD PTR [esp+0x18]
640141b3:	pop    edi
640141b4:	pop    esi
640141b5:	pop    ebp
640141b6:	pop    ebx
640141b7:	add    esp,0x14
640141ba:	ret    
640141bb:	mov    DWORD PTR [esp+0x18],0x0
640141c3:	jmp    0x6401418b
640141c5:	mov    ecx,DWORD PTR [esp+0x28]
640141c9:	cmp    DWORD PTR [ecx],0xe06d7363
640141cf:	jne    0x640141fb
640141d1:	cmp    DWORD PTR ds:0x64025d54,0x0
640141d8:	je     0x640141fb
640141da:	push   0x64025d54
640141df:	call   0x6401b0d0
640141e4:	add    esp,0x4
640141e7:	test   eax,eax
640141e9:	je     0x640141fb
640141eb:	mov    edx,DWORD PTR [esp+0x28]
640141ef:	push   0x1
640141f1:	push   edx
640141f2:	call   DWORD PTR ds:0x64025d54
640141f8:	add    esp,0x8
640141fb:	mov    ecx,DWORD PTR [esp+0x2c]
640141ff:	call   0x6401b012
64014204:	mov    eax,DWORD PTR [esp+0x2c]
64014208:	cmp    DWORD PTR [eax+0xc],ebp
6401420b:	je     0x64014220
6401420d:	push   0x6402d09c
64014212:	push   edi
64014213:	mov    edx,ebp
64014215:	mov    ecx,eax
64014217:	call   0x6401b02c
6401421c:	mov    eax,DWORD PTR [esp+0x2c]
64014220:	mov    ecx,DWORD PTR [esp+0x14]
64014224:	mov    DWORD PTR [eax+0xc],ecx
64014227:	mov    eax,DWORD PTR [esi]
64014229:	cmp    eax,0xfffffffe
6401422c:	je     0x6401423b
6401422e:	mov    ecx,DWORD PTR [esi+0x4]
64014231:	add    ecx,edi
64014233:	xor    ecx,DWORD PTR [eax+edi*1]
64014236:	call   0x64012abc
6401423b:	mov    ecx,DWORD PTR [esi+0xc]
6401423e:	mov    edx,DWORD PTR [esi+0x8]
64014241:	add    ecx,edi
64014243:	xor    ecx,DWORD PTR [edx+edi*1]
64014246:	call   0x64012abc
6401424b:	mov    ecx,DWORD PTR [ebx+0x8]
6401424e:	mov    edx,edi
64014250:	jmp    0x6401aff9
64014255:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
64014259:	je     0x640141af
6401425f:	push   0x6402d09c
64014264:	push   edi
64014265:	mov    ecx,ebx
64014267:	mov    edx,0xfffffffe
6401426c:	call   0x6401b02c
64014271:	jmp    0x6401418b
64014276:	int3   
64014277:	int3   
64014278:	int3   
64014279:	int3   
6401427a:	int3   
6401427b:	int3   
6401427c:	int3   
6401427d:	int3   
6401427e:	int3   
6401427f:	int3   
64014280:	mov    ecx,DWORD PTR [esp+0x4]
64014284:	test   ecx,0x3
6401428a:	je     0x640142b0
6401428c:	mov    al,BYTE PTR [ecx]
6401428e:	add    ecx,0x1
64014291:	test   al,al
64014293:	je     0x640142e3
64014295:	test   ecx,0x3
6401429b:	jne    0x6401428c
6401429d:	add    eax,0x0
640142a2:	lea    esp,[esp+0x0]
640142a9:	lea    esp,[esp+0x0]
640142b0:	mov    eax,DWORD PTR [ecx]
640142b2:	mov    edx,0x7efefeff
640142b7:	add    edx,eax
640142b9:	xor    eax,0xffffffff
640142bc:	xor    eax,edx
640142be:	add    ecx,0x4
640142c1:	test   eax,0x81010100
640142c6:	je     0x640142b0
640142c8:	mov    eax,DWORD PTR [ecx-0x4]
640142cb:	test   al,al
640142cd:	je     0x64014301
640142cf:	test   ah,ah
640142d1:	je     0x640142f7
640142d3:	test   eax,0xff0000
640142d8:	je     0x640142ed
640142da:	test   eax,0xff000000
640142df:	je     0x640142e3
640142e1:	jmp    0x640142b0
640142e3:	lea    eax,[ecx-0x1]
640142e6:	mov    ecx,DWORD PTR [esp+0x4]
640142ea:	sub    eax,ecx
640142ec:	ret    
640142ed:	lea    eax,[ecx-0x2]
640142f0:	mov    ecx,DWORD PTR [esp+0x4]
640142f4:	sub    eax,ecx
640142f6:	ret    
640142f7:	lea    eax,[ecx-0x3]
640142fa:	mov    ecx,DWORD PTR [esp+0x4]
640142fe:	sub    eax,ecx
64014300:	ret    
64014301:	lea    eax,[ecx-0x4]
64014304:	mov    ecx,DWORD PTR [esp+0x4]
64014308:	sub    eax,ecx
6401430a:	ret    
6401430b:	push   eax
6401430c:	push   DWORD PTR fs:0x0
64014313:	lea    eax,[esp+0xc]
64014317:	sub    esp,DWORD PTR [esp+0xc]
6401431b:	push   ebx
6401431c:	push   esi
6401431d:	push   edi
6401431e:	mov    DWORD PTR [eax],ebp
64014320:	mov    ebp,eax
64014322:	mov    eax,ds:0x6402d09c
64014327:	xor    eax,ebp
64014329:	push   eax
6401432a:	push   DWORD PTR [ebp-0x4]
6401432d:	mov    DWORD PTR [ebp-0x4],0xffffffff
64014334:	lea    eax,[ebp-0xc]
64014337:	mov    fs:0x0,eax
6401433d:	ret    
6401433e:	push   eax
6401433f:	push   DWORD PTR fs:0x0
64014346:	lea    eax,[esp+0xc]
6401434a:	sub    esp,DWORD PTR [esp+0xc]
6401434e:	push   ebx
6401434f:	push   esi
64014350:	push   edi
64014351:	mov    DWORD PTR [eax],ebp
64014353:	mov    ebp,eax
64014355:	mov    eax,ds:0x6402d09c
6401435a:	xor    eax,ebp
6401435c:	push   eax
6401435d:	mov    DWORD PTR [ebp-0x10],esp
64014360:	push   DWORD PTR [ebp-0x4]
64014363:	mov    DWORD PTR [ebp-0x4],0xffffffff
6401436a:	lea    eax,[ebp-0xc]
6401436d:	mov    fs:0x0,eax
64014373:	ret    
64014374:	push   0xc
64014376:	push   0x6402a5d0
6401437b:	call   0x64014080
64014380:	push   0xe
64014382:	call   0x6401a07a
64014387:	pop    ecx
64014388:	and    DWORD PTR [ebp-0x4],0x0
6401438c:	mov    esi,DWORD PTR [ebp+0x8]
6401438f:	mov    ecx,DWORD PTR [esi+0x4]
64014392:	test   ecx,ecx
64014394:	je     0x640143c5
64014396:	mov    eax,ds:0x6402e588
6401439b:	mov    edx,0x6402e584
640143a0:	mov    DWORD PTR [ebp-0x1c],eax
640143a3:	test   eax,eax
640143a5:	je     0x640143b8
640143a7:	cmp    DWORD PTR [eax],ecx
640143a9:	jne    0x640143d7
640143ab:	mov    ecx,DWORD PTR [eax+0x4]
640143ae:	mov    DWORD PTR [edx+0x4],ecx
640143b1:	push   eax
640143b2:	call   0x64013956
640143b7:	pop    ecx
640143b8:	push   DWORD PTR [esi+0x4]
640143bb:	call   0x64013956
640143c0:	pop    ecx
640143c1:	and    DWORD PTR [esi+0x4],0x0
640143c5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640143cc:	call   0x640143db
640143d1:	call   0x640140c5
640143d6:	ret    
640143d7:	mov    edx,eax
640143d9:	jmp    0x640143a0
640143db:	push   0xe
640143dd:	call   0x64019fa2
640143e2:	pop    ecx
640143e3:	ret    
640143e4:	int3   
640143e5:	int3   
640143e6:	int3   
640143e7:	int3   
640143e8:	int3   
640143e9:	int3   
640143ea:	int3   
640143eb:	int3   
640143ec:	int3   
640143ed:	int3   
640143ee:	int3   
640143ef:	int3   
640143f0:	mov    edx,DWORD PTR [esp+0x4]
640143f4:	mov    ecx,DWORD PTR [esp+0x8]
640143f8:	test   edx,0x3
640143fe:	jne    0x6401443c
64014400:	mov    eax,DWORD PTR [edx]
64014402:	cmp    al,BYTE PTR [ecx]
64014404:	jne    0x64014434
64014406:	or     al,al
64014408:	je     0x64014430
6401440a:	cmp    ah,BYTE PTR [ecx+0x1]
6401440d:	jne    0x64014434
6401440f:	or     ah,ah
64014411:	je     0x64014430
64014413:	shr    eax,0x10
64014416:	cmp    al,BYTE PTR [ecx+0x2]
64014419:	jne    0x64014434
6401441b:	or     al,al
6401441d:	je     0x64014430
6401441f:	cmp    ah,BYTE PTR [ecx+0x3]
64014422:	jne    0x64014434
64014424:	add    ecx,0x4
64014427:	add    edx,0x4
6401442a:	or     ah,ah
6401442c:	jne    0x64014400
6401442e:	mov    edi,edi
64014430:	xor    eax,eax
64014432:	ret    
64014433:	nop
64014434:	sbb    eax,eax
64014436:	shl    eax,1
64014438:	add    eax,0x1
6401443b:	ret    
6401443c:	test   edx,0x1
64014442:	je     0x6401445c
64014444:	mov    al,BYTE PTR [edx]
64014446:	add    edx,0x1
64014449:	cmp    al,BYTE PTR [ecx]
6401444b:	jne    0x64014434
6401444d:	add    ecx,0x1
64014450:	or     al,al
64014452:	je     0x64014430
64014454:	test   edx,0x2
6401445a:	je     0x64014400
6401445c:	mov    ax,WORD PTR [edx]
6401445f:	add    edx,0x2
64014462:	cmp    al,BYTE PTR [ecx]
64014464:	jne    0x64014434
64014466:	or     al,al
64014468:	je     0x64014430
6401446a:	cmp    ah,BYTE PTR [ecx+0x1]
6401446d:	jne    0x64014434
6401446f:	or     ah,ah
64014471:	je     0x64014430
64014473:	add    ecx,0x2
64014476:	jmp    0x64014400
64014478:	mov    ecx,DWORD PTR [esp+0x4]
6401447c:	push   ebx
6401447d:	xor    ebx,ebx
6401447f:	cmp    ecx,ebx
64014481:	push   esi
64014482:	push   edi
64014483:	je     0x6401448d
64014485:	mov    edi,DWORD PTR [esp+0x14]
64014489:	cmp    edi,ebx
6401448b:	ja     0x640144a8
6401448d:	call   0x64014880
64014492:	push   0x16
64014494:	pop    esi
64014495:	mov    DWORD PTR [eax],esi
64014497:	push   ebx
64014498:	push   ebx
64014499:	push   ebx
6401449a:	push   ebx
6401449b:	push   ebx
6401449c:	call   0x640125f4
640144a1:	add    esp,0x14
640144a4:	mov    eax,esi
640144a6:	jmp    0x640144d9
640144a8:	mov    esi,DWORD PTR [esp+0x18]
640144ac:	cmp    esi,ebx
640144ae:	jne    0x640144b4
640144b0:	mov    BYTE PTR [ecx],bl
640144b2:	jmp    0x6401448d
640144b4:	mov    edx,ecx
640144b6:	mov    al,BYTE PTR [esi]
640144b8:	mov    BYTE PTR [edx],al
640144ba:	inc    edx
640144bb:	inc    esi
640144bc:	cmp    al,bl
640144be:	je     0x640144c3
640144c0:	dec    edi
640144c1:	jne    0x640144b6
640144c3:	cmp    edi,ebx
640144c5:	jne    0x640144d7
640144c7:	mov    BYTE PTR [ecx],bl
640144c9:	call   0x64014880
640144ce:	push   0x22
640144d0:	pop    ecx
640144d1:	mov    DWORD PTR [eax],ecx
640144d3:	mov    esi,ecx
640144d5:	jmp    0x64014497
640144d7:	xor    eax,eax
640144d9:	pop    edi
640144da:	pop    esi
640144db:	pop    ebx
640144dc:	ret    
640144dd:	int3   
640144de:	int3   
640144df:	int3   
640144e0:	push   ebp
640144e1:	mov    ebp,esp
640144e3:	push   edi
640144e4:	push   esi
640144e5:	mov    esi,DWORD PTR [ebp+0xc]
640144e8:	mov    ecx,DWORD PTR [ebp+0x10]
640144eb:	mov    edi,DWORD PTR [ebp+0x8]
640144ee:	mov    eax,ecx
640144f0:	mov    edx,ecx
640144f2:	add    eax,esi
640144f4:	cmp    edi,esi
640144f6:	jbe    0x64014500
640144f8:	cmp    edi,eax
640144fa:	jb     0x640146a4
64014500:	cmp    ecx,0x100
64014506:	jb     0x64014527
64014508:	cmp    DWORD PTR ds:0x64032604,0x0
6401450f:	je     0x64014527
64014511:	push   edi
64014512:	push   esi
64014513:	and    edi,0xf
64014516:	and    esi,0xf
64014519:	cmp    edi,esi
6401451b:	pop    esi
6401451c:	pop    edi
6401451d:	jne    0x64014527
6401451f:	pop    esi
64014520:	pop    edi
64014521:	pop    ebp
64014522:	jmp    0x6401ae0a
64014527:	test   edi,0x3
6401452d:	jne    0x64014544
6401452f:	shr    ecx,0x2
64014532:	and    edx,0x3
64014535:	cmp    ecx,0x8
64014538:	jb     0x64014564
6401453a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401453c:	jmp    DWORD PTR [edx*4+0x64014654]
64014543:	nop
64014544:	mov    eax,edi
64014546:	mov    edx,0x3
6401454b:	sub    ecx,0x4
6401454e:	jb     0x6401455c
64014550:	and    eax,0x3
64014553:	add    ecx,eax
64014555:	jmp    DWORD PTR [eax*4+0x64014568]
6401455c:	jmp    DWORD PTR [ecx*4+0x64014664]
64014563:	nop
64014564:	jmp    DWORD PTR [ecx*4+0x640145e8]
6401456b:	nop
6401456c:	js     0x640145b3
6401456e:	add    DWORD PTR [esp+eiz*4+0x45],esp
64014572:	add    DWORD PTR [eax+ecx*8+0x45],esp
64014576:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401457a:	mov    al,BYTE PTR [esi]
6401457c:	mov    BYTE PTR [edi],al
6401457e:	mov    al,BYTE PTR [esi+0x1]
64014581:	mov    BYTE PTR [edi+0x1],al
64014584:	mov    al,BYTE PTR [esi+0x2]
64014587:	shr    ecx,0x2
6401458a:	mov    BYTE PTR [edi+0x2],al
6401458d:	add    esi,0x3
64014590:	add    edi,0x3
64014593:	cmp    ecx,0x8
64014596:	jb     0x64014564
64014598:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401459a:	jmp    DWORD PTR [edx*4+0x64014654]
640145a1:	lea    ecx,[ecx+0x0]
640145a4:	and    edx,ecx
640145a6:	mov    al,BYTE PTR [esi]
640145a8:	mov    BYTE PTR [edi],al
640145aa:	mov    al,BYTE PTR [esi+0x1]
640145ad:	shr    ecx,0x2
640145b0:	mov    BYTE PTR [edi+0x1],al
640145b3:	add    esi,0x2
640145b6:	add    edi,0x2
640145b9:	cmp    ecx,0x8
640145bc:	jb     0x64014564
640145be:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640145c0:	jmp    DWORD PTR [edx*4+0x64014654]
640145c7:	nop
640145c8:	and    edx,ecx
640145ca:	mov    al,BYTE PTR [esi]
640145cc:	mov    BYTE PTR [edi],al
640145ce:	add    esi,0x1
640145d1:	shr    ecx,0x2
640145d4:	add    edi,0x1
640145d7:	cmp    ecx,0x8
640145da:	jb     0x64014564
640145dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640145de:	jmp    DWORD PTR [edx*4+0x64014654]
640145e5:	lea    ecx,[ecx+0x0]
640145e8:	dec    ebx
640145e9:	inc    esi
640145ea:	add    DWORD PTR [eax+edi*1+0x46],esp
640145ee:	add    DWORD PTR [eax+esi*1+0x46],esp
640145f2:	add    DWORD PTR [eax+ebp*1+0x46],esp
640145f6:	add    DWORD PTR [eax+eiz*1+0x46],esp
640145fa:	add    DWORD PTR [eax+ebx*1+0x46],esp
640145fe:	add    DWORD PTR [eax+edx*1+0x46],esp
64014602:	add    DWORD PTR [eax+ecx*1+0x46],esp
64014606:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401460a:	mov    fs,esp
6401460c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64014610:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64014614:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64014618:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401461c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64014620:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64014624:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64014628:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401462c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64014630:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64014634:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64014638:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401463c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64014640:	lea    eax,[ecx*4+0x0]
64014647:	add    esi,eax
64014649:	add    edi,eax
6401464b:	jmp    DWORD PTR [edx*4+0x64014654]
64014652:	mov    edi,edi
64014654:	fs inc esi
64014656:	add    DWORD PTR [esp+ebp*2+0x46],esp
6401465a:	add    DWORD PTR [eax+edi*2+0x46],esp
6401465e:	add    DWORD PTR [esp+ecx*4+0x46],esp
64014662:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014666:	or     BYTE PTR [esi+0x5f],bl
64014669:	leave  
6401466a:	ret    
6401466b:	nop
6401466c:	mov    al,BYTE PTR [esi]
6401466e:	mov    BYTE PTR [edi],al
64014670:	mov    eax,DWORD PTR [ebp+0x8]
64014673:	pop    esi
64014674:	pop    edi
64014675:	leave  
64014676:	ret    
64014677:	nop
64014678:	mov    al,BYTE PTR [esi]
6401467a:	mov    BYTE PTR [edi],al
6401467c:	mov    al,BYTE PTR [esi+0x1]
6401467f:	mov    BYTE PTR [edi+0x1],al
64014682:	mov    eax,DWORD PTR [ebp+0x8]
64014685:	pop    esi
64014686:	pop    edi
64014687:	leave  
64014688:	ret    
64014689:	lea    ecx,[ecx+0x0]
6401468c:	mov    al,BYTE PTR [esi]
6401468e:	mov    BYTE PTR [edi],al
64014690:	mov    al,BYTE PTR [esi+0x1]
64014693:	mov    BYTE PTR [edi+0x1],al
64014696:	mov    al,BYTE PTR [esi+0x2]
64014699:	mov    BYTE PTR [edi+0x2],al
6401469c:	mov    eax,DWORD PTR [ebp+0x8]
6401469f:	pop    esi
640146a0:	pop    edi
640146a1:	leave  
640146a2:	ret    
640146a3:	nop
640146a4:	lea    esi,[ecx+esi*1-0x4]
640146a8:	lea    edi,[ecx+edi*1-0x4]
640146ac:	test   edi,0x3
640146b2:	jne    0x640146d8
640146b4:	shr    ecx,0x2
640146b7:	and    edx,0x3
640146ba:	cmp    ecx,0x8
640146bd:	jb     0x640146cc
640146bf:	std    
640146c0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640146c2:	cld    
640146c3:	jmp    DWORD PTR [edx*4+0x640147f0]
640146ca:	mov    edi,edi
640146cc:	neg    ecx
640146ce:	jmp    DWORD PTR [ecx*4+0x640147a0]
640146d5:	lea    ecx,[ecx+0x0]
640146d8:	mov    eax,edi
640146da:	mov    edx,0x3
640146df:	cmp    ecx,0x4
640146e2:	jb     0x640146f0
640146e4:	and    eax,0x3
640146e7:	sub    ecx,eax
640146e9:	jmp    DWORD PTR [eax*4+0x640146f4]
640146f0:	jmp    DWORD PTR [ecx*4+0x640147f0]
640146f7:	nop
640146f8:	add    al,0x47
640146fa:	add    DWORD PTR [eax+ebp*1+0x47],esp
640146fe:	add    DWORD PTR [eax+edx*2+0x47],esp
64014702:	add    DWORD PTR [edx+ecx*4+0x46],esp
64014706:	add    esp,DWORD PTR [ebx]
64014708:	ror    DWORD PTR [eax-0x117cfcb9],1
6401470e:	add    ecx,eax
64014710:	jmp    0x65f0ca17
64014715:	cmp    ecx,0x8
64014718:	jb     0x640146cc
6401471a:	std    
6401471b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401471d:	cld    
6401471e:	jmp    DWORD PTR [edx*4+0x640147f0]
64014725:	lea    ecx,[ecx+0x0]
64014728:	mov    al,BYTE PTR [esi+0x3]
6401472b:	and    edx,ecx
6401472d:	mov    BYTE PTR [edi+0x3],al
64014730:	mov    al,BYTE PTR [esi+0x2]
64014733:	shr    ecx,0x2
64014736:	mov    BYTE PTR [edi+0x2],al
64014739:	sub    esi,0x2
6401473c:	sub    edi,0x2
6401473f:	cmp    ecx,0x8
64014742:	jb     0x640146cc
64014744:	std    
64014745:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014747:	cld    
64014748:	jmp    DWORD PTR [edx*4+0x640147f0]
6401474f:	nop
64014750:	mov    al,BYTE PTR [esi+0x3]
64014753:	and    edx,ecx
64014755:	mov    BYTE PTR [edi+0x3],al
64014758:	mov    al,BYTE PTR [esi+0x2]
6401475b:	mov    BYTE PTR [edi+0x2],al
6401475e:	mov    al,BYTE PTR [esi+0x1]
64014761:	shr    ecx,0x2
64014764:	mov    BYTE PTR [edi+0x1],al
64014767:	sub    esi,0x3
6401476a:	sub    edi,0x3
6401476d:	cmp    ecx,0x8
64014770:	jb     0x640146cc
64014776:	std    
64014777:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014779:	cld    
6401477a:	jmp    DWORD PTR [edx*4+0x640147f0]
64014781:	lea    ecx,[ecx+0x0]
64014784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
64014785:	inc    edi
64014786:	add    DWORD PTR [esp+ebp*4+0x47],esp
6401478a:	add    DWORD PTR [esp+esi*4+0x47],esp
6401478e:	add    DWORD PTR [esp+edi*4+0x47],esp
64014792:	add    DWORD PTR [esp+eax*8+0x47],esp
64014796:	add    DWORD PTR [esp+ecx*8+0x47],esp
6401479a:	add    DWORD PTR [esp+edx*8+0x47],esp
6401479e:	add    DWORD PTR [edi+eiz*8+0x47],esp
640147a2:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640147a6:	mov    ds,WORD PTR [ecx+ecx*4]
640147a9:	inc    esp
640147aa:	(bad)  
640147ab:	sbb    al,0x8b
640147ad:	inc    esp
640147ae:	mov    ds,WORD PTR [eax]
640147b0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
640147b4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
640147b8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
640147bc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
640147c0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
640147c4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
640147c8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
640147cc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640147d0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640147d4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640147d8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640147dc:	lea    eax,[ecx*4+0x0]
640147e3:	add    esi,eax
640147e5:	add    edi,eax
640147e7:	jmp    DWORD PTR [edx*4+0x640147f0]
640147ee:	mov    edi,edi
640147f0:	add    BYTE PTR [eax+0x1],cl
640147f3:	or     BYTE PTR fs:[eax+0x1],cl
640147f7:	sbb    BYTE PTR fs:[eax+0x1],cl
640147fb:	fs sub al,0x48
640147fe:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014802:	or     BYTE PTR [esi+0x5f],bl
64014805:	leave  
64014806:	ret    
64014807:	nop
64014808:	mov    al,BYTE PTR [esi+0x3]
6401480b:	mov    BYTE PTR [edi+0x3],al
6401480e:	mov    eax,DWORD PTR [ebp+0x8]
64014811:	pop    esi
64014812:	pop    edi
64014813:	leave  
64014814:	ret    
64014815:	lea    ecx,[ecx+0x0]
64014818:	mov    al,BYTE PTR [esi+0x3]
6401481b:	mov    BYTE PTR [edi+0x3],al
6401481e:	mov    al,BYTE PTR [esi+0x2]
64014821:	mov    BYTE PTR [edi+0x2],al
64014824:	mov    eax,DWORD PTR [ebp+0x8]
64014827:	pop    esi
64014828:	pop    edi
64014829:	leave  
6401482a:	ret    
6401482b:	nop
6401482c:	mov    al,BYTE PTR [esi+0x3]
6401482f:	mov    BYTE PTR [edi+0x3],al
64014832:	mov    al,BYTE PTR [esi+0x2]
64014835:	mov    BYTE PTR [edi+0x2],al
64014838:	mov    al,BYTE PTR [esi+0x1]
6401483b:	mov    BYTE PTR [edi+0x1],al
6401483e:	mov    eax,DWORD PTR [ebp+0x8]
64014841:	pop    esi
64014842:	pop    edi
64014843:	leave  
64014844:	ret    
64014845:	mov    eax,DWORD PTR [esp+0x4]
64014849:	xor    ecx,ecx
6401484b:	cmp    eax,DWORD PTR [ecx*8+0x6402d0c0]
64014852:	je     0x64014866
64014854:	inc    ecx
64014855:	cmp    ecx,0x2d
64014858:	jb     0x6401484b
6401485a:	lea    ecx,[eax-0x13]
6401485d:	cmp    ecx,0x11
64014860:	ja     0x6401486e
64014862:	push   0xd
64014864:	pop    eax
64014865:	ret    
64014866:	mov    eax,DWORD PTR [ecx*8+0x6402d0c4]
6401486d:	ret    
6401486e:	add    eax,0xffffff44
64014873:	push   0xe
64014875:	pop    ecx
64014876:	cmp    ecx,eax
64014878:	sbb    eax,eax
6401487a:	and    eax,ecx
6401487c:	add    eax,0x8
6401487f:	ret    
64014880:	call   0x64014b54
64014885:	test   eax,eax
64014887:	jne    0x6401488f
64014889:	mov    eax,0x6402d228
6401488e:	ret    
6401488f:	add    eax,0x8
64014892:	ret    
64014893:	call   0x64014b54
64014898:	test   eax,eax
6401489a:	jne    0x640148a2
6401489c:	mov    eax,0x6402d22c
640148a1:	ret    
640148a2:	add    eax,0xc
640148a5:	ret    
640148a6:	push   esi
640148a7:	call   0x64014893
640148ac:	mov    ecx,DWORD PTR [esp+0x8]
640148b0:	push   ecx
640148b1:	mov    DWORD PTR [eax],ecx
640148b3:	call   0x64014845
640148b8:	pop    ecx
640148b9:	mov    esi,eax
640148bb:	call   0x64014880
640148c0:	mov    DWORD PTR [eax],esi
640148c2:	pop    esi
640148c3:	ret    
640148c4:	and    DWORD PTR ds:0x6403261c,0x0
640148cb:	ret    
640148cc:	push   ebp
640148cd:	mov    ebp,esp
640148cf:	push   ecx
640148d0:	push   ecx
640148d1:	push   ebx
640148d2:	push   esi
640148d3:	xor    esi,esi
640148d5:	lea    eax,[ebp-0x4]
640148d8:	inc    esi
640148d9:	xor    ebx,ebx
640148db:	push   eax
640148dc:	mov    DWORD PTR [ebp-0x8],esi
640148df:	mov    DWORD PTR [ebp-0x4],ebx
640148e2:	call   0x64015fe6
640148e7:	cmp    DWORD PTR [ebp-0x4],0x5
640148eb:	pop    ecx
640148ec:	jle    0x640148f2
640148ee:	mov    eax,esi
640148f0:	jmp    0x64014934
640148f2:	push   edi
640148f3:	push   ebx
640148f4:	call   DWORD PTR ds:0x64025130
640148fa:	mov    esi,DWORD PTR [eax+0x3c]
640148fd:	add    esi,eax
640148ff:	cmp    WORD PTR [esi+0x6],bx
64014903:	movzx  eax,WORD PTR [esi+0x14]
64014907:	lea    edi,[eax+esi*1+0x18]
6401490b:	jbe    0x64014930
6401490d:	push   edi
6401490e:	push   0x64025cf0
64014913:	call   0x640143f0
64014918:	test   eax,eax
6401491a:	pop    ecx
6401491b:	pop    ecx
6401491c:	je     0x6401492c
6401491e:	movzx  eax,WORD PTR [esi+0x6]
64014922:	inc    ebx
64014923:	add    edi,0x28
64014926:	cmp    ebx,eax
64014928:	jb     0x6401490d
6401492a:	jmp    0x64014930
6401492c:	and    DWORD PTR [ebp-0x8],0x0
64014930:	mov    eax,DWORD PTR [ebp-0x8]
64014933:	pop    edi
64014934:	pop    esi
64014935:	pop    ebx
64014936:	leave  
64014937:	ret    
64014938:	push   esi
64014939:	push   DWORD PTR ds:0x6402d234
6401493f:	mov    esi,DWORD PTR ds:0x64025134
64014945:	call   esi
64014947:	test   eax,eax
64014949:	je     0x6401496c
6401494b:	mov    eax,ds:0x6402d230
64014950:	cmp    eax,0xffffffff
64014953:	je     0x6401496c
64014955:	push   eax
64014956:	push   DWORD PTR ds:0x6402d234
6401495c:	call   esi
6401495e:	call   eax
64014960:	test   eax,eax
64014962:	je     0x6401496c
64014964:	mov    eax,DWORD PTR [eax+0x1f8]
6401496a:	jmp    0x64014992
6401496c:	push   0x64025d08
64014971:	call   DWORD PTR ds:0x64025130
64014977:	mov    esi,eax
64014979:	test   esi,esi
6401497b:	je     0x640149a0
6401497d:	call   0x640148cc
64014982:	test   eax,eax
64014984:	je     0x640149a0
64014986:	push   0x64025cf8
6401498b:	push   esi
6401498c:	call   DWORD PTR ds:0x64025014
64014992:	test   eax,eax
64014994:	je     0x640149a0
64014996:	push   DWORD PTR [esp+0x8]
6401499a:	call   eax
6401499c:	mov    DWORD PTR [esp+0x8],eax
640149a0:	mov    eax,DWORD PTR [esp+0x8]
640149a4:	pop    esi
640149a5:	ret    
640149a6:	push   0x0
640149a8:	call   0x64014938
640149ad:	pop    ecx
640149ae:	ret    
640149af:	push   esi
640149b0:	push   DWORD PTR ds:0x6402d234
640149b6:	mov    esi,DWORD PTR ds:0x64025134
640149bc:	call   esi
640149be:	test   eax,eax
640149c0:	je     0x640149e3
640149c2:	mov    eax,ds:0x6402d230
640149c7:	cmp    eax,0xffffffff
640149ca:	je     0x640149e3
640149cc:	push   eax
640149cd:	push   DWORD PTR ds:0x6402d234
640149d3:	call   esi
640149d5:	call   eax
640149d7:	test   eax,eax
640149d9:	je     0x640149e3
640149db:	mov    eax,DWORD PTR [eax+0x1fc]
640149e1:	jmp    0x64014a09
640149e3:	push   0x64025d08
640149e8:	call   DWORD PTR ds:0x64025130
640149ee:	mov    esi,eax
640149f0:	test   esi,esi
640149f2:	je     0x64014a17
640149f4:	call   0x640148cc
640149f9:	test   eax,eax
640149fb:	je     0x64014a17
640149fd:	push   0x64025d18
64014a02:	push   esi
64014a03:	call   DWORD PTR ds:0x64025014
64014a09:	test   eax,eax
64014a0b:	je     0x64014a17
64014a0d:	push   DWORD PTR [esp+0x8]
64014a11:	call   eax
64014a13:	mov    DWORD PTR [esp+0x8],eax
64014a17:	mov    eax,DWORD PTR [esp+0x8]
64014a1b:	pop    esi
64014a1c:	ret    
64014a1d:	call   DWORD PTR ds:0x64025138
64014a23:	ret    0x4
64014a26:	push   esi
64014a27:	push   DWORD PTR ds:0x6402d234
64014a2d:	call   DWORD PTR ds:0x64025134
64014a33:	mov    esi,eax
64014a35:	test   esi,esi
64014a37:	jne    0x64014a54
64014a39:	push   DWORD PTR ds:0x6402e590
64014a3f:	call   0x640149af
64014a44:	pop    ecx
64014a45:	mov    esi,eax
64014a47:	push   esi
64014a48:	push   DWORD PTR ds:0x6402d234
64014a4e:	call   DWORD PTR ds:0x6402513c
64014a54:	mov    eax,esi
64014a56:	pop    esi
64014a57:	ret    
64014a58:	mov    eax,ds:0x6402d230
64014a5d:	cmp    eax,0xffffffff
64014a60:	je     0x64014a78
64014a62:	push   eax
64014a63:	push   DWORD PTR ds:0x6402e598
64014a69:	call   0x640149af
64014a6e:	pop    ecx
64014a6f:	call   eax
64014a71:	or     DWORD PTR ds:0x6402d230,0xffffffff
64014a78:	mov    eax,ds:0x6402d234
64014a7d:	cmp    eax,0xffffffff
64014a80:	je     0x64014a90
64014a82:	push   eax
64014a83:	call   DWORD PTR ds:0x64025140
64014a89:	or     DWORD PTR ds:0x6402d234,0xffffffff
64014a90:	jmp    0x64019f4d
64014a95:	push   0xc
64014a97:	push   0x6402a5f0
64014a9c:	call   0x64014080
64014aa1:	push   0x64025d08
64014aa6:	call   DWORD PTR ds:0x64025130
64014aac:	mov    DWORD PTR [ebp-0x1c],eax
64014aaf:	mov    esi,DWORD PTR [ebp+0x8]
64014ab2:	mov    DWORD PTR [esi+0x5c],0x6402d8c8
64014ab9:	xor    edi,edi
64014abb:	inc    edi
64014abc:	mov    DWORD PTR [esi+0x14],edi
64014abf:	test   eax,eax
64014ac1:	je     0x64014af2
64014ac3:	call   0x640148cc
64014ac8:	test   eax,eax
64014aca:	je     0x64014af2
64014acc:	push   0x64025cf8
64014ad1:	push   DWORD PTR [ebp-0x1c]
64014ad4:	mov    ebx,DWORD PTR ds:0x64025014
64014ada:	call   ebx
64014adc:	mov    DWORD PTR [esi+0x1f8],eax
64014ae2:	push   0x64025d18
64014ae7:	push   DWORD PTR [ebp-0x1c]
64014aea:	call   ebx
64014aec:	mov    DWORD PTR [esi+0x1fc],eax
64014af2:	mov    DWORD PTR [esi+0x70],edi
64014af5:	mov    BYTE PTR [esi+0xc8],0x43
64014afc:	mov    BYTE PTR [esi+0x14b],0x43
64014b03:	mov    eax,0x6402d268
64014b08:	mov    DWORD PTR [esi+0x68],eax
64014b0b:	push   eax
64014b0c:	call   DWORD PTR ds:0x64025020
64014b12:	push   0xc
64014b14:	call   0x6401a07a
64014b19:	pop    ecx
64014b1a:	and    DWORD PTR [ebp-0x4],0x0
64014b1e:	mov    eax,DWORD PTR [ebp+0xc]
64014b21:	mov    DWORD PTR [esi+0x6c],eax
64014b24:	test   eax,eax
64014b26:	jne    0x64014b30
64014b28:	mov    eax,ds:0x6402d870
64014b2d:	mov    DWORD PTR [esi+0x6c],eax
64014b30:	push   DWORD PTR [esi+0x6c]
64014b33:	call   0x640169ff
64014b38:	pop    ecx
64014b39:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014b40:	call   0x64014b4b
64014b45:	call   0x640140c5
64014b4a:	ret    
64014b4b:	push   0xc
64014b4d:	call   0x64019fa2
64014b52:	pop    ecx
64014b53:	ret    
64014b54:	push   esi
64014b55:	push   edi
64014b56:	call   DWORD PTR ds:0x64025044
64014b5c:	push   DWORD PTR ds:0x6402d230
64014b62:	mov    edi,eax
64014b64:	call   0x64014a26
64014b69:	call   eax
64014b6b:	mov    esi,eax
64014b6d:	test   esi,esi
64014b6f:	jne    0x64014bbf
64014b71:	push   0x214
64014b76:	push   0x1
64014b78:	call   0x64015dd0
64014b7d:	mov    esi,eax
64014b7f:	test   esi,esi
64014b81:	pop    ecx
64014b82:	pop    ecx
64014b83:	je     0x64014bbf
64014b85:	push   esi
64014b86:	push   DWORD PTR ds:0x6402d230
64014b8c:	push   DWORD PTR ds:0x6402e594
64014b92:	call   0x640149af
64014b97:	pop    ecx
64014b98:	call   eax
64014b9a:	test   eax,eax
64014b9c:	je     0x64014bb6
64014b9e:	push   0x0
64014ba0:	push   esi
64014ba1:	call   0x64014a95
64014ba6:	pop    ecx
64014ba7:	pop    ecx
64014ba8:	call   DWORD PTR ds:0x64025128
64014bae:	or     DWORD PTR [esi+0x4],0xffffffff
64014bb2:	mov    DWORD PTR [esi],eax
64014bb4:	jmp    0x64014bbf
64014bb6:	push   esi
64014bb7:	call   0x64013956
64014bbc:	pop    ecx
64014bbd:	xor    esi,esi
64014bbf:	push   edi
64014bc0:	call   DWORD PTR ds:0x64025060
64014bc6:	pop    edi
64014bc7:	mov    eax,esi
64014bc9:	pop    esi
64014bca:	ret    
64014bcb:	push   esi
64014bcc:	call   0x64014b54
64014bd1:	mov    esi,eax
64014bd3:	test   esi,esi
64014bd5:	jne    0x64014bdf
64014bd7:	push   0x10
64014bd9:	call   0x64015f06
64014bde:	pop    ecx
64014bdf:	mov    eax,esi
64014be1:	pop    esi
64014be2:	ret    
64014be3:	push   0x8
64014be5:	push   0x6402a610
64014bea:	call   0x64014080
64014bef:	mov    esi,DWORD PTR [ebp+0x8]
64014bf2:	test   esi,esi
64014bf4:	je     0x64014ce4
64014bfa:	mov    eax,DWORD PTR [esi+0x24]
64014bfd:	test   eax,eax
64014bff:	je     0x64014c08
64014c01:	push   eax
64014c02:	call   0x64013956
64014c07:	pop    ecx
64014c08:	mov    eax,DWORD PTR [esi+0x2c]
64014c0b:	test   eax,eax
64014c0d:	je     0x64014c16
64014c0f:	push   eax
64014c10:	call   0x64013956
64014c15:	pop    ecx
64014c16:	mov    eax,DWORD PTR [esi+0x34]
64014c19:	test   eax,eax
64014c1b:	je     0x64014c24
64014c1d:	push   eax
64014c1e:	call   0x64013956
64014c23:	pop    ecx
64014c24:	mov    eax,DWORD PTR [esi+0x3c]
64014c27:	test   eax,eax
64014c29:	je     0x64014c32
64014c2b:	push   eax
64014c2c:	call   0x64013956
64014c31:	pop    ecx
64014c32:	mov    eax,DWORD PTR [esi+0x44]
64014c35:	test   eax,eax
64014c37:	je     0x64014c40
64014c39:	push   eax
64014c3a:	call   0x64013956
64014c3f:	pop    ecx
64014c40:	mov    eax,DWORD PTR [esi+0x48]
64014c43:	test   eax,eax
64014c45:	je     0x64014c4e
64014c47:	push   eax
64014c48:	call   0x64013956
64014c4d:	pop    ecx
64014c4e:	mov    eax,DWORD PTR [esi+0x5c]
64014c51:	cmp    eax,0x6402d8c8
64014c56:	je     0x64014c5f
64014c58:	push   eax
64014c59:	call   0x64013956
64014c5e:	pop    ecx
64014c5f:	push   0xd
64014c61:	call   0x6401a07a
64014c66:	pop    ecx
64014c67:	and    DWORD PTR [ebp-0x4],0x0
64014c6b:	mov    edi,DWORD PTR [esi+0x68]
64014c6e:	test   edi,edi
64014c70:	je     0x64014c8c
64014c72:	push   edi
64014c73:	call   DWORD PTR ds:0x64025094
64014c79:	test   eax,eax
64014c7b:	jne    0x64014c8c
64014c7d:	cmp    edi,0x6402d268
64014c83:	je     0x64014c8c
64014c85:	push   edi
64014c86:	call   0x64013956
64014c8b:	pop    ecx
64014c8c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014c93:	call   0x64014cef
64014c98:	push   0xc
64014c9a:	call   0x6401a07a
64014c9f:	pop    ecx
64014ca0:	mov    DWORD PTR [ebp-0x4],0x1
64014ca7:	mov    edi,DWORD PTR [esi+0x6c]
64014caa:	test   edi,edi
64014cac:	je     0x64014cd1
64014cae:	push   edi
64014caf:	call   0x64016a85
64014cb4:	pop    ecx
64014cb5:	cmp    edi,DWORD PTR ds:0x6402d870
64014cbb:	je     0x64014cd1
64014cbd:	cmp    edi,0x6402d798
64014cc3:	je     0x64014cd1
64014cc5:	cmp    DWORD PTR [edi],0x0
64014cc8:	jne    0x64014cd1
64014cca:	push   edi
64014ccb:	call   0x640168bf
64014cd0:	pop    ecx
64014cd1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014cd8:	call   0x64014cfb
64014cdd:	push   esi
64014cde:	call   0x64013956
64014ce3:	pop    ecx
64014ce4:	call   0x640140c5
64014ce9:	ret    0x4
64014cec:	mov    esi,DWORD PTR [ebp+0x8]
64014cef:	push   0xd
64014cf1:	call   0x64019fa2
64014cf6:	pop    ecx
64014cf7:	ret    
64014cf8:	mov    esi,DWORD PTR [ebp+0x8]
64014cfb:	push   0xc
64014cfd:	call   0x64019fa2
64014d02:	pop    ecx
64014d03:	ret    
64014d04:	cmp    DWORD PTR ds:0x6402d230,0xffffffff
64014d0b:	je     0x64014d59
64014d0d:	push   edi
64014d0e:	mov    edi,DWORD PTR [esp+0x8]
64014d12:	test   edi,edi
64014d14:	jne    0x64014d3c
64014d16:	push   esi
64014d17:	push   DWORD PTR ds:0x6402d234
64014d1d:	mov    esi,DWORD PTR ds:0x64025134
64014d23:	call   esi
64014d25:	test   eax,eax
64014d27:	je     0x64014d3b
64014d29:	push   DWORD PTR ds:0x6402d230
64014d2f:	push   DWORD PTR ds:0x6402d234
64014d35:	call   esi
64014d37:	call   eax
64014d39:	mov    edi,eax
64014d3b:	pop    esi
64014d3c:	push   0x0
64014d3e:	push   DWORD PTR ds:0x6402d230
64014d44:	push   DWORD PTR ds:0x6402e594
64014d4a:	call   0x640149af
64014d4f:	pop    ecx
64014d50:	call   eax
64014d52:	push   edi
64014d53:	call   0x64014be3
64014d58:	pop    edi
64014d59:	mov    eax,ds:0x6402d234
64014d5e:	cmp    eax,0xffffffff
64014d61:	je     0x64014d6c
64014d63:	push   0x0
64014d65:	push   eax
64014d66:	call   DWORD PTR ds:0x6402513c
64014d6c:	ret    
64014d6d:	push   edi
64014d6e:	push   0x64025d08
64014d73:	call   DWORD PTR ds:0x64025130
64014d79:	mov    edi,eax
64014d7b:	test   edi,edi
64014d7d:	jne    0x64014d88
64014d7f:	call   0x64014a58
64014d84:	xor    eax,eax
64014d86:	pop    edi
64014d87:	ret    
64014d88:	push   esi
64014d89:	mov    esi,DWORD PTR ds:0x64025014
64014d8f:	push   0x64025d48
64014d94:	push   edi
64014d95:	call   esi
64014d97:	push   0x64025d3c
64014d9c:	push   edi
64014d9d:	mov    ds:0x6402e58c,eax
64014da2:	call   esi
64014da4:	push   0x64025d30
64014da9:	push   edi
64014daa:	mov    ds:0x6402e590,eax
64014daf:	call   esi
64014db1:	push   0x64025d28
64014db6:	push   edi
64014db7:	mov    ds:0x6402e594,eax
64014dbc:	call   esi
64014dbe:	cmp    DWORD PTR ds:0x6402e58c,0x0
64014dc5:	mov    esi,DWORD PTR ds:0x6402513c
64014dcb:	mov    ds:0x6402e598,eax
64014dd0:	je     0x64014de8
64014dd2:	cmp    DWORD PTR ds:0x6402e590,0x0
64014dd9:	je     0x64014de8
64014ddb:	cmp    DWORD PTR ds:0x6402e594,0x0
64014de2:	je     0x64014de8
64014de4:	test   eax,eax
64014de6:	jne    0x64014e0c
64014de8:	mov    eax,ds:0x64025134
64014ded:	mov    ds:0x6402e590,eax
64014df2:	mov    eax,ds:0x64025140
64014df7:	mov    DWORD PTR ds:0x6402e58c,0x64014a1d
64014e01:	mov    DWORD PTR ds:0x6402e594,esi
64014e07:	mov    ds:0x6402e598,eax
64014e0c:	call   DWORD PTR ds:0x64025138
64014e12:	cmp    eax,0xffffffff
64014e15:	mov    ds:0x6402d234,eax
64014e1a:	je     0x64014eec
64014e20:	push   DWORD PTR ds:0x6402e590
64014e26:	push   eax
64014e27:	call   esi
64014e29:	test   eax,eax
64014e2b:	je     0x64014eec
64014e31:	call   0x640161b6
64014e36:	push   DWORD PTR ds:0x6402e58c
64014e3c:	call   0x64014938
64014e41:	push   DWORD PTR ds:0x6402e590
64014e47:	mov    ds:0x6402e58c,eax
64014e4c:	call   0x64014938
64014e51:	push   DWORD PTR ds:0x6402e594
64014e57:	mov    ds:0x6402e590,eax
64014e5c:	call   0x64014938
64014e61:	push   DWORD PTR ds:0x6402e598
64014e67:	mov    ds:0x6402e594,eax
64014e6c:	call   0x64014938
64014e71:	add    esp,0x10
64014e74:	mov    ds:0x6402e598,eax
64014e79:	call   0x64019f04
64014e7e:	test   eax,eax
64014e80:	je     0x64014ee7
64014e82:	push   0x64014be3
64014e87:	push   DWORD PTR ds:0x6402e58c
64014e8d:	call   0x640149af
64014e92:	pop    ecx
64014e93:	call   eax
64014e95:	cmp    eax,0xffffffff
64014e98:	mov    ds:0x6402d230,eax
64014e9d:	je     0x64014ee7
64014e9f:	push   0x214
64014ea4:	push   0x1
64014ea6:	call   0x64015dd0
64014eab:	mov    esi,eax
64014ead:	test   esi,esi
64014eaf:	pop    ecx
64014eb0:	pop    ecx
64014eb1:	je     0x64014ee7
64014eb3:	push   esi
64014eb4:	push   DWORD PTR ds:0x6402d230
64014eba:	push   DWORD PTR ds:0x6402e594
64014ec0:	call   0x640149af
64014ec5:	pop    ecx
64014ec6:	call   eax
64014ec8:	test   eax,eax
64014eca:	je     0x64014ee7
64014ecc:	push   0x0
64014ece:	push   esi
64014ecf:	call   0x64014a95
64014ed4:	pop    ecx
64014ed5:	pop    ecx
64014ed6:	call   DWORD PTR ds:0x64025128
64014edc:	or     DWORD PTR [esi+0x4],0xffffffff
64014ee0:	mov    DWORD PTR [esi],eax
64014ee2:	xor    eax,eax
64014ee4:	inc    eax
64014ee5:	jmp    0x64014eee
64014ee7:	call   0x64014a58
64014eec:	xor    eax,eax
64014eee:	pop    esi
64014eef:	pop    edi
64014ef0:	ret    
64014ef1:	mov    eax,DWORD PTR [esp+0x4]
64014ef5:	mov    ds:0x6402e59c,eax
64014efa:	ret    
64014efb:	push   DWORD PTR ds:0x6402e59c
64014f01:	call   0x640149af
64014f06:	test   eax,eax
64014f08:	pop    ecx
64014f09:	je     0x64014f1a
64014f0b:	push   DWORD PTR [esp+0x4]
64014f0f:	call   eax
64014f11:	test   eax,eax
64014f13:	pop    ecx
64014f14:	je     0x64014f1a
64014f16:	xor    eax,eax
64014f18:	inc    eax
64014f19:	ret    
64014f1a:	xor    eax,eax
64014f1c:	ret    
64014f1d:	mov    DWORD PTR [ecx],0x64025d5c
64014f23:	jmp    0x6401237b
64014f28:	push   esi
64014f29:	mov    esi,ecx
64014f2b:	mov    DWORD PTR [esi],0x64025d5c
64014f31:	call   0x6401237b
64014f36:	test   BYTE PTR [esp+0x8],0x1
64014f3b:	je     0x64014f44
64014f3d:	push   esi
64014f3e:	call   0x64012262
64014f43:	pop    ecx
64014f44:	mov    eax,esi
64014f46:	pop    esi
64014f47:	ret    0x4
64014f4a:	push   esi
64014f4b:	push   edi
64014f4c:	mov    edi,DWORD PTR [esp+0xc]
64014f50:	mov    eax,DWORD PTR [edi+0x4]
64014f53:	test   eax,eax
64014f55:	je     0x64014fa0
64014f57:	lea    edx,[eax+0x8]
64014f5a:	cmp    BYTE PTR [edx],0x0
64014f5d:	je     0x64014fa0
64014f5f:	mov    esi,DWORD PTR [esp+0x10]
64014f63:	mov    ecx,DWORD PTR [esi+0x4]
64014f66:	cmp    eax,ecx
64014f68:	je     0x64014f7e
64014f6a:	add    ecx,0x8
64014f6d:	push   ecx
64014f6e:	push   edx
64014f6f:	call   0x640143f0
64014f74:	test   eax,eax
64014f76:	pop    ecx
64014f77:	pop    ecx
64014f78:	je     0x64014f7e
64014f7a:	xor    eax,eax
64014f7c:	jmp    0x64014fa3
64014f7e:	test   BYTE PTR [esi],0x2
64014f81:	je     0x64014f88
64014f83:	test   BYTE PTR [edi],0x8
64014f86:	je     0x64014f7a
64014f88:	mov    eax,DWORD PTR [esp+0x14]
64014f8c:	mov    eax,DWORD PTR [eax]
64014f8e:	test   al,0x1
64014f90:	je     0x64014f97
64014f92:	test   BYTE PTR [edi],0x1
64014f95:	je     0x64014f7a
64014f97:	test   al,0x2
64014f99:	je     0x64014fa0
64014f9b:	test   BYTE PTR [edi],0x2
64014f9e:	je     0x64014f7a
64014fa0:	xor    eax,eax
64014fa2:	inc    eax
64014fa3:	pop    edi
64014fa4:	pop    esi
64014fa5:	ret    
64014fa6:	mov    eax,DWORD PTR [esp+0x4]
64014faa:	mov    eax,DWORD PTR [eax]
64014fac:	mov    eax,DWORD PTR [eax]
64014fae:	cmp    eax,0xe0434f4d
64014fb3:	je     0x64014fcd
64014fb5:	cmp    eax,0xe06d7363
64014fba:	jne    0x64014fe7
64014fbc:	call   0x64014bcb
64014fc1:	and    DWORD PTR [eax+0x90],0x0
64014fc8:	jmp    0x64015ba7
64014fcd:	call   0x64014bcb
64014fd2:	cmp    DWORD PTR [eax+0x90],0x0
64014fd9:	jle    0x64014fe7
64014fdb:	call   0x64014bcb
64014fe0:	add    eax,0x90
64014fe5:	dec    DWORD PTR [eax]
64014fe7:	xor    eax,eax
64014fe9:	ret    
64014fea:	push   0x10
64014fec:	push   0x6402a638
64014ff1:	call   0x64014080
64014ff6:	mov    edi,DWORD PTR [ebp+0x10]
64014ff9:	mov    ebx,DWORD PTR [ebp+0x8]
64014ffc:	cmp    DWORD PTR [edi+0x4],0x80
64015003:	jg     0x6401500b
64015005:	movsx  esi,BYTE PTR [ebx+0x8]
64015009:	jmp    0x6401500e
6401500b:	mov    esi,DWORD PTR [ebx+0x8]
6401500e:	mov    DWORD PTR [ebp-0x1c],esi
64015011:	call   0x64014bcb
64015016:	add    eax,0x90
6401501b:	inc    DWORD PTR [eax]
6401501d:	and    DWORD PTR [ebp-0x4],0x0
64015021:	cmp    esi,DWORD PTR [ebp+0x14]
64015024:	je     0x6401508b
64015026:	cmp    esi,0xffffffff
64015029:	jle    0x64015030
6401502b:	cmp    esi,DWORD PTR [edi+0x4]
6401502e:	jl     0x64015035
64015030:	call   0x64015bf3
64015035:	mov    eax,esi
64015037:	shl    eax,0x3
6401503a:	mov    ecx,DWORD PTR [edi+0x8]
6401503d:	add    ecx,eax
6401503f:	mov    esi,DWORD PTR [ecx]
64015041:	mov    DWORD PTR [ebp-0x20],esi
64015044:	mov    DWORD PTR [ebp-0x4],0x1
6401504b:	cmp    DWORD PTR [ecx+0x4],0x0
6401504f:	je     0x64015066
64015051:	mov    DWORD PTR [ebx+0x8],esi
64015054:	push   0x103
64015059:	push   ebx
6401505a:	mov    ecx,DWORD PTR [edi+0x8]
6401505d:	push   DWORD PTR [ecx+eax*1+0x4]
64015061:	call   0x64015c40
64015066:	and    DWORD PTR [ebp-0x4],0x0
6401506a:	jmp    0x64015086
6401506c:	push   DWORD PTR [ebp-0x14]
6401506f:	call   0x64014fa6
64015074:	pop    ecx
64015075:	ret    
64015076:	mov    esp,DWORD PTR [ebp-0x18]
64015079:	and    DWORD PTR [ebp-0x4],0x0
6401507d:	mov    edi,DWORD PTR [ebp+0x10]
64015080:	mov    ebx,DWORD PTR [ebp+0x8]
64015083:	mov    esi,DWORD PTR [ebp-0x20]
64015086:	mov    DWORD PTR [ebp-0x1c],esi
64015089:	jmp    0x64015021
6401508b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015092:	call   0x640150b0
64015097:	cmp    esi,DWORD PTR [ebp+0x14]
6401509a:	je     0x640150a1
6401509c:	call   0x64015bf3
640150a1:	mov    DWORD PTR [ebx+0x8],esi
640150a4:	call   0x640140c5
640150a9:	ret    
640150aa:	mov    ebx,DWORD PTR [ebp+0x8]
640150ad:	mov    esi,DWORD PTR [ebp-0x1c]
640150b0:	call   0x64014bcb
640150b5:	cmp    DWORD PTR [eax+0x90],0x0
640150bc:	jle    0x640150ca
640150be:	call   0x64014bcb
640150c3:	add    eax,0x90
640150c8:	dec    DWORD PTR [eax]
640150ca:	ret    
640150cb:	mov    eax,DWORD PTR [eax]
640150cd:	cmp    DWORD PTR [eax],0xe06d7363
640150d3:	jne    0x6401510d
640150d5:	cmp    DWORD PTR [eax+0x10],0x3
640150d9:	jne    0x6401510d
640150db:	mov    ecx,DWORD PTR [eax+0x14]
640150de:	cmp    ecx,0x19930520
640150e4:	je     0x640150f6
640150e6:	cmp    ecx,0x19930521
640150ec:	je     0x640150f6
640150ee:	cmp    ecx,0x19930522
640150f4:	jne    0x6401510d
640150f6:	cmp    DWORD PTR [eax+0x1c],0x0
640150fa:	jne    0x6401510d
640150fc:	call   0x64014bcb
64015101:	xor    ecx,ecx
64015103:	inc    ecx
64015104:	mov    DWORD PTR [eax+0x20c],ecx
6401510a:	mov    eax,ecx
6401510c:	ret    
6401510d:	xor    eax,eax
6401510f:	ret    
64015110:	push   0x8
64015112:	push   0x6402a660
64015117:	call   0x64014080
6401511c:	mov    ecx,DWORD PTR [ebp+0x8]
6401511f:	test   ecx,ecx
64015121:	je     0x6401514d
64015123:	cmp    DWORD PTR [ecx],0xe06d7363
64015129:	jne    0x6401514d
6401512b:	mov    eax,DWORD PTR [ecx+0x1c]
6401512e:	test   eax,eax
64015130:	je     0x6401514d
64015132:	mov    eax,DWORD PTR [eax+0x4]
64015135:	test   eax,eax
64015137:	je     0x6401514d
64015139:	and    DWORD PTR [ebp-0x4],0x0
6401513d:	push   eax
6401513e:	push   DWORD PTR [ecx+0x18]
64015141:	call   0x64012725
64015146:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401514d:	call   0x640140c5
64015152:	ret    
64015153:	xor    eax,eax
64015155:	cmp    BYTE PTR [ebp+0xc],al
64015158:	setne  al
6401515b:	ret    
6401515c:	mov    esp,DWORD PTR [ebp-0x18]
6401515f:	jmp    0x64015ba7
64015164:	mov    ecx,DWORD PTR [esp+0x8]
64015168:	mov    eax,DWORD PTR [ecx]
6401516a:	push   esi
6401516b:	mov    esi,DWORD PTR [esp+0x8]
6401516f:	add    eax,esi
64015171:	cmp    DWORD PTR [ecx+0x4],0x0
64015175:	jl     0x64015187
64015177:	mov    edx,DWORD PTR [ecx+0x4]
6401517a:	mov    ecx,DWORD PTR [ecx+0x8]
6401517d:	mov    esi,DWORD PTR [edx+esi*1]
64015180:	mov    ecx,DWORD PTR [esi+ecx*1]
64015183:	add    ecx,edx
64015185:	add    eax,ecx
64015187:	pop    esi
64015188:	ret    
64015189:	push   ebp
6401518a:	mov    ebp,esp
6401518c:	sub    esp,0xc
6401518f:	test   edi,edi
64015191:	jne    0x6401519d
64015193:	call   0x64015bf3
64015198:	jmp    0x64015ba7
6401519d:	and    DWORD PTR [ebp-0x8],0x0
640151a1:	cmp    DWORD PTR [edi],0x0
640151a4:	mov    BYTE PTR [ebp-0x1],0x0
640151a8:	jle    0x640151fd
640151aa:	push   ebx
640151ab:	push   esi
640151ac:	mov    eax,DWORD PTR [ebp+0x8]
640151af:	mov    eax,DWORD PTR [eax+0x1c]
640151b2:	mov    eax,DWORD PTR [eax+0xc]
640151b5:	mov    ebx,DWORD PTR [eax]
640151b7:	test   ebx,ebx
640151b9:	lea    esi,[eax+0x4]
640151bc:	jle    0x640151f1
640151be:	mov    eax,DWORD PTR [ebp-0x8]
640151c1:	shl    eax,0x4
640151c4:	mov    DWORD PTR [ebp-0xc],eax
640151c7:	mov    ecx,DWORD PTR [ebp+0x8]
640151ca:	push   DWORD PTR [ecx+0x1c]
640151cd:	mov    eax,DWORD PTR [esi]
640151cf:	push   eax
640151d0:	mov    eax,DWORD PTR [edi+0x4]
640151d3:	add    eax,DWORD PTR [ebp-0xc]
640151d6:	push   eax
640151d7:	call   0x64014f4a
640151dc:	add    esp,0xc
640151df:	test   eax,eax
640151e1:	jne    0x640151ed
640151e3:	dec    ebx
640151e4:	add    esi,0x4
640151e7:	test   ebx,ebx
640151e9:	jg     0x640151c7
640151eb:	jmp    0x640151f1
640151ed:	mov    BYTE PTR [ebp-0x1],0x1
640151f1:	inc    DWORD PTR [ebp-0x8]
640151f4:	mov    eax,DWORD PTR [ebp-0x8]
640151f7:	cmp    eax,DWORD PTR [edi]
640151f9:	jl     0x640151ac
640151fb:	pop    esi
640151fc:	pop    ebx
640151fd:	mov    al,BYTE PTR [ebp-0x1]
64015200:	leave  
64015201:	ret    
64015202:	push   0x4
64015204:	mov    eax,0x64022463
64015209:	call   0x6401433e
6401520e:	call   0x64014bcb
64015213:	cmp    DWORD PTR [eax+0x94],0x0
6401521a:	je     0x64015221
6401521c:	call   0x64015bf3
64015221:	and    DWORD PTR [ebp-0x4],0x0
64015225:	call   0x64015be0
6401522a:	or     DWORD PTR [ebp-0x4],0xffffffff
6401522e:	jmp    0x64015ba7
64015233:	call   0x64014bcb
64015238:	mov    ecx,DWORD PTR [ebp+0x8]
6401523b:	push   0x0
6401523d:	push   0x0
6401523f:	mov    DWORD PTR [eax+0x94],ecx
64015245:	call   0x640126ab
6401524a:	int3   
6401524b:	push   0x2c
6401524d:	push   0x6402a6d8
64015252:	call   0x64014080
64015257:	mov    ebx,ecx
64015259:	mov    edi,DWORD PTR [ebp+0xc]
6401525c:	mov    esi,DWORD PTR [ebp+0x8]
6401525f:	mov    DWORD PTR [ebp-0x1c],ebx
64015262:	and    DWORD PTR [ebp-0x34],0x0
64015266:	mov    eax,DWORD PTR [edi-0x4]
64015269:	mov    DWORD PTR [ebp-0x24],eax
6401526c:	push   DWORD PTR [esi+0x18]
6401526f:	lea    eax,[ebp-0x3c]
64015272:	push   eax
64015273:	call   0x640129c9
64015278:	pop    ecx
64015279:	pop    ecx
6401527a:	mov    DWORD PTR [ebp-0x28],eax
6401527d:	call   0x64014bcb
64015282:	mov    eax,DWORD PTR [eax+0x88]
64015288:	mov    DWORD PTR [ebp-0x2c],eax
6401528b:	call   0x64014bcb
64015290:	mov    eax,DWORD PTR [eax+0x8c]
64015296:	mov    DWORD PTR [ebp-0x30],eax
64015299:	call   0x64014bcb
6401529e:	mov    DWORD PTR [eax+0x88],esi
640152a4:	call   0x64014bcb
640152a9:	mov    ecx,DWORD PTR [ebp+0x10]
640152ac:	mov    DWORD PTR [eax+0x8c],ecx
640152b2:	and    DWORD PTR [ebp-0x4],0x0
640152b6:	xor    eax,eax
640152b8:	inc    eax
640152b9:	mov    DWORD PTR [ebp+0x10],eax
640152bc:	mov    DWORD PTR [ebp-0x4],eax
640152bf:	push   DWORD PTR [ebp+0x1c]
640152c2:	push   DWORD PTR [ebp+0x18]
640152c5:	push   ebx
640152c6:	push   DWORD PTR [ebp+0x14]
640152c9:	push   edi
640152ca:	call   0x64012a5e
640152cf:	add    esp,0x14
640152d2:	mov    DWORD PTR [ebp-0x1c],eax
640152d5:	and    DWORD PTR [ebp-0x4],0x0
640152d9:	jmp    0x6401534a
640152db:	mov    eax,DWORD PTR [ebp-0x14]
640152de:	call   0x640150cb
640152e3:	ret    
640152e4:	mov    esp,DWORD PTR [ebp-0x18]
640152e7:	call   0x64014bcb
640152ec:	and    DWORD PTR [eax+0x20c],0x0
640152f3:	mov    esi,DWORD PTR [ebp+0x14]
640152f6:	mov    edi,DWORD PTR [ebp+0xc]
640152f9:	cmp    DWORD PTR [esi+0x4],0x80
64015300:	jg     0x64015308
64015302:	movsx  ecx,BYTE PTR [edi+0x8]
64015306:	jmp    0x6401530b
64015308:	mov    ecx,DWORD PTR [edi+0x8]
6401530b:	mov    ebx,DWORD PTR [esi+0x10]
6401530e:	and    DWORD PTR [ebp-0x20],0x0
64015312:	mov    eax,DWORD PTR [ebp-0x20]
64015315:	cmp    eax,DWORD PTR [esi+0xc]
64015318:	jae    0x64015332
6401531a:	imul   eax,eax,0x14
6401531d:	add    eax,ebx
6401531f:	mov    edx,DWORD PTR [eax+0x4]
64015322:	cmp    ecx,edx
64015324:	jle    0x64015366
64015326:	cmp    ecx,DWORD PTR [eax+0x8]
64015329:	jg     0x64015366
6401532b:	mov    eax,DWORD PTR [esi+0x8]
6401532e:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64015332:	push   ecx
64015333:	push   esi
64015334:	push   0x0
64015336:	push   edi
64015337:	call   0x64014fea
6401533c:	add    esp,0x10
6401533f:	and    DWORD PTR [ebp-0x1c],0x0
64015343:	and    DWORD PTR [ebp-0x4],0x0
64015347:	mov    esi,DWORD PTR [ebp+0x8]
6401534a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015351:	mov    DWORD PTR [ebp+0x10],0x0
64015358:	call   0x64015371
6401535d:	mov    eax,DWORD PTR [ebp-0x1c]
64015360:	call   0x640140c5
64015365:	ret    
64015366:	inc    DWORD PTR [ebp-0x20]
64015369:	jmp    0x64015312
6401536b:	mov    edi,DWORD PTR [ebp+0xc]
6401536e:	mov    esi,DWORD PTR [ebp+0x8]
64015371:	mov    eax,DWORD PTR [ebp-0x24]
64015374:	mov    DWORD PTR [edi-0x4],eax
64015377:	push   DWORD PTR [ebp-0x28]
6401537a:	call   0x64012a12
6401537f:	pop    ecx
64015380:	call   0x64014bcb
64015385:	mov    ecx,DWORD PTR [ebp-0x2c]
64015388:	mov    DWORD PTR [eax+0x88],ecx
6401538e:	call   0x64014bcb
64015393:	mov    ecx,DWORD PTR [ebp-0x30]
64015396:	mov    DWORD PTR [eax+0x8c],ecx
6401539c:	cmp    DWORD PTR [esi],0xe06d7363
640153a2:	jne    0x640153e6
640153a4:	cmp    DWORD PTR [esi+0x10],0x3
640153a8:	jne    0x640153e6
640153aa:	mov    eax,DWORD PTR [esi+0x14]
640153ad:	cmp    eax,0x19930520
640153b2:	je     0x640153c2
640153b4:	cmp    eax,0x19930521
640153b9:	je     0x640153c2
640153bb:	cmp    eax,0x19930522
640153c0:	jne    0x640153e6
640153c2:	cmp    DWORD PTR [ebp-0x34],0x0
640153c6:	jne    0x640153e6
640153c8:	cmp    DWORD PTR [ebp-0x1c],0x0
640153cc:	je     0x640153e6
640153ce:	push   DWORD PTR [esi+0x18]
640153d1:	call   0x640129f1
640153d6:	pop    ecx
640153d7:	test   eax,eax
640153d9:	je     0x640153e6
640153db:	push   DWORD PTR [ebp+0x10]
640153de:	push   esi
640153df:	call   0x64015110
640153e4:	pop    ecx
640153e5:	pop    ecx
640153e6:	ret    
640153e7:	push   0xc
640153e9:	push   0x6402a700
640153ee:	call   0x64014080
640153f3:	xor    edx,edx
640153f5:	mov    DWORD PTR [ebp-0x1c],edx
640153f8:	mov    eax,DWORD PTR [ebp+0x10]
640153fb:	mov    ecx,DWORD PTR [eax+0x4]
640153fe:	cmp    ecx,edx
64015400:	je     0x6401555e
64015406:	cmp    BYTE PTR [ecx+0x8],dl
64015409:	je     0x6401555e
6401540f:	mov    ecx,DWORD PTR [eax+0x8]
64015412:	cmp    ecx,edx
64015414:	jne    0x64015422
64015416:	test   DWORD PTR [eax],0x80000000
6401541c:	je     0x6401555e
64015422:	mov    eax,DWORD PTR [eax]
64015424:	mov    esi,DWORD PTR [ebp+0xc]
64015427:	test   eax,eax
64015429:	js     0x6401542f
6401542b:	lea    esi,[ecx+esi*1+0xc]
6401542f:	mov    DWORD PTR [ebp-0x4],edx
64015432:	xor    ebx,ebx
64015434:	inc    ebx
64015435:	push   ebx
64015436:	test   al,0x8
64015438:	je     0x6401547b
6401543a:	mov    edi,DWORD PTR [ebp+0x8]
6401543d:	push   DWORD PTR [edi+0x18]
64015440:	call   0x6401b18b
64015445:	pop    ecx
64015446:	pop    ecx
64015447:	test   eax,eax
64015449:	je     0x64015541
6401544f:	push   ebx
64015450:	push   esi
64015451:	call   0x6401b18b
64015456:	pop    ecx
64015457:	pop    ecx
64015458:	test   eax,eax
6401545a:	je     0x64015541
64015460:	mov    eax,DWORD PTR [edi+0x18]
64015463:	mov    DWORD PTR [esi],eax
64015465:	mov    ecx,DWORD PTR [ebp+0x14]
64015468:	add    ecx,0x8
6401546b:	push   ecx
6401546c:	push   eax
6401546d:	call   0x64015164
64015472:	pop    ecx
64015473:	pop    ecx
64015474:	mov    DWORD PTR [esi],eax
64015476:	jmp    0x64015546
6401547b:	mov    edi,DWORD PTR [ebp+0x14]
6401547e:	mov    eax,DWORD PTR [ebp+0x8]
64015481:	push   DWORD PTR [eax+0x18]
64015484:	test   BYTE PTR [edi],bl
64015486:	je     0x640154d0
64015488:	call   0x6401b18b
6401548d:	pop    ecx
6401548e:	pop    ecx
6401548f:	test   eax,eax
64015491:	je     0x64015541
64015497:	push   ebx
64015498:	push   esi
64015499:	call   0x6401b18b
6401549e:	pop    ecx
6401549f:	pop    ecx
640154a0:	test   eax,eax
640154a2:	je     0x64015541
640154a8:	push   DWORD PTR [edi+0x14]
640154ab:	mov    eax,DWORD PTR [ebp+0x8]
640154ae:	push   DWORD PTR [eax+0x18]
640154b1:	push   esi
640154b2:	call   0x64013b00
640154b7:	add    esp,0xc
640154ba:	cmp    DWORD PTR [edi+0x14],0x4
640154be:	jne    0x64015546
640154c4:	mov    eax,DWORD PTR [esi]
640154c6:	test   eax,eax
640154c8:	je     0x64015546
640154ca:	add    edi,0x8
640154cd:	push   edi
640154ce:	jmp    0x6401546c
640154d0:	cmp    DWORD PTR [edi+0x18],edx
640154d3:	jne    0x6401550d
640154d5:	call   0x6401b18b
640154da:	pop    ecx
640154db:	pop    ecx
640154dc:	test   eax,eax
640154de:	je     0x64015541
640154e0:	push   ebx
640154e1:	push   esi
640154e2:	call   0x6401b18b
640154e7:	pop    ecx
640154e8:	pop    ecx
640154e9:	test   eax,eax
640154eb:	je     0x64015541
640154ed:	push   DWORD PTR [edi+0x14]
640154f0:	add    edi,0x8
640154f3:	push   edi
640154f4:	mov    eax,DWORD PTR [ebp+0x8]
640154f7:	push   DWORD PTR [eax+0x18]
640154fa:	call   0x64015164
640154ff:	pop    ecx
64015500:	pop    ecx
64015501:	push   eax
64015502:	push   esi
64015503:	call   0x64013b00
64015508:	add    esp,0xc
6401550b:	jmp    0x64015546
6401550d:	call   0x6401b18b
64015512:	pop    ecx
64015513:	pop    ecx
64015514:	test   eax,eax
64015516:	je     0x64015541
64015518:	push   ebx
64015519:	push   esi
6401551a:	call   0x6401b18b
6401551f:	pop    ecx
64015520:	pop    ecx
64015521:	test   eax,eax
64015523:	je     0x64015541
64015525:	push   DWORD PTR [edi+0x18]
64015528:	call   0x6401b18b
6401552d:	pop    ecx
6401552e:	test   eax,eax
64015530:	je     0x64015541
64015532:	test   BYTE PTR [edi],0x4
64015535:	push   0x0
64015537:	pop    eax
64015538:	setne  al
6401553b:	inc    eax
6401553c:	mov    DWORD PTR [ebp-0x1c],eax
6401553f:	jmp    0x64015546
64015541:	call   0x64015bf3
64015546:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401554d:	mov    eax,DWORD PTR [ebp-0x1c]
64015550:	jmp    0x64015560
64015552:	xor    eax,eax
64015554:	inc    eax
64015555:	ret    
64015556:	mov    esp,DWORD PTR [ebp-0x18]
64015559:	jmp    0x64015ba7
6401555e:	xor    eax,eax
64015560:	call   0x640140c5
64015565:	ret    
64015566:	push   0x8
64015568:	push   0x6402a720
6401556d:	call   0x64014080
64015572:	mov    eax,DWORD PTR [ebp+0x10]
64015575:	test   DWORD PTR [eax],0x80000000
6401557b:	je     0x64015582
6401557d:	mov    ebx,DWORD PTR [ebp+0xc]
64015580:	jmp    0x6401558c
64015582:	mov    ecx,DWORD PTR [eax+0x8]
64015585:	mov    edx,DWORD PTR [ebp+0xc]
64015588:	lea    ebx,[ecx+edx*1+0xc]
6401558c:	and    DWORD PTR [ebp-0x4],0x0
64015590:	mov    esi,DWORD PTR [ebp+0x14]
64015593:	push   esi
64015594:	push   eax
64015595:	push   DWORD PTR [ebp+0xc]
64015598:	mov    edi,DWORD PTR [ebp+0x8]
6401559b:	push   edi
6401559c:	call   0x640153e7
640155a1:	add    esp,0x10
640155a4:	dec    eax
640155a5:	je     0x640155c6
640155a7:	dec    eax
640155a8:	jne    0x640155de
640155aa:	push   0x1
640155ac:	lea    eax,[esi+0x8]
640155af:	push   eax
640155b0:	push   DWORD PTR [edi+0x18]
640155b3:	call   0x64015164
640155b8:	pop    ecx
640155b9:	pop    ecx
640155ba:	push   eax
640155bb:	push   DWORD PTR [esi+0x18]
640155be:	push   ebx
640155bf:	call   0x64012725
640155c4:	jmp    0x640155de
640155c6:	lea    eax,[esi+0x8]
640155c9:	push   eax
640155ca:	push   DWORD PTR [edi+0x18]
640155cd:	call   0x64015164
640155d2:	pop    ecx
640155d3:	pop    ecx
640155d4:	push   eax
640155d5:	push   DWORD PTR [esi+0x18]
640155d8:	push   ebx
640155d9:	call   0x64012725
640155de:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640155e5:	call   0x640140c5
640155ea:	ret    
640155eb:	xor    eax,eax
640155ed:	inc    eax
640155ee:	ret    
640155ef:	mov    esp,DWORD PTR [ebp-0x18]
640155f2:	jmp    0x64015ba7
640155f7:	push   ebp
640155f8:	mov    ebp,esp
640155fa:	cmp    DWORD PTR [ebp+0x18],0x0
640155fe:	je     0x64015610
64015600:	push   DWORD PTR [ebp+0x18]
64015603:	push   ebx
64015604:	push   esi
64015605:	push   DWORD PTR [ebp+0x8]
64015608:	call   0x64015566
6401560d:	add    esp,0x10
64015610:	cmp    DWORD PTR [ebp+0x20],0x0
64015614:	push   DWORD PTR [ebp+0x8]
64015617:	jne    0x6401561c
64015619:	push   esi
6401561a:	jmp    0x6401561f
6401561c:	push   DWORD PTR [ebp+0x20]
6401561f:	call   0x6401272c
64015624:	push   DWORD PTR [edi]
64015626:	push   DWORD PTR [ebp+0x14]
64015629:	push   DWORD PTR [ebp+0x10]
6401562c:	push   esi
6401562d:	call   0x64014fea
64015632:	mov    eax,DWORD PTR [edi+0x4]
64015635:	push   0x100
6401563a:	push   DWORD PTR [ebp+0x1c]
6401563d:	inc    eax
6401563e:	push   DWORD PTR [ebp+0x14]
64015641:	mov    DWORD PTR [esi+0x8],eax
64015644:	push   DWORD PTR [ebp+0xc]
64015647:	mov    ecx,DWORD PTR [ebx+0xc]
6401564a:	push   esi
6401564b:	push   DWORD PTR [ebp+0x8]
6401564e:	call   0x6401524b
64015653:	add    esp,0x28
64015656:	test   eax,eax
64015658:	je     0x64015661
6401565a:	push   esi
6401565b:	push   eax
6401565c:	call   0x640126f5
64015661:	pop    ebp
64015662:	ret    
64015663:	push   ebp
64015664:	mov    ebp,esp
64015666:	push   ecx
64015667:	push   ecx
64015668:	push   esi
64015669:	mov    esi,DWORD PTR [ebp+0x8]
6401566c:	cmp    DWORD PTR [esi],0x80000003
64015672:	je     0x64015752
64015678:	push   edi
64015679:	call   0x64014bcb
6401567e:	cmp    DWORD PTR [eax+0x80],0x0
64015685:	je     0x640156c6
64015687:	call   0x64014bcb
6401568c:	lea    edi,[eax+0x80]
64015692:	call   0x640149a6
64015697:	cmp    DWORD PTR [edi],eax
64015699:	je     0x640156c6
6401569b:	cmp    DWORD PTR [esi],0xe0434f4d
640156a1:	je     0x640156c6
640156a3:	push   DWORD PTR [ebp+0x24]
640156a6:	push   DWORD PTR [ebp+0x20]
640156a9:	push   DWORD PTR [ebp+0x18]
640156ac:	push   DWORD PTR [ebp+0x14]
640156af:	push   DWORD PTR [ebp+0x10]
640156b2:	push   DWORD PTR [ebp+0xc]
640156b5:	push   esi
640156b6:	call   0x640127e4
640156bb:	add    esp,0x1c
640156be:	test   eax,eax
640156c0:	jne    0x64015751
640156c6:	mov    edi,DWORD PTR [ebp+0x18]
640156c9:	cmp    DWORD PTR [edi+0xc],0x0
640156cd:	jne    0x640156d4
640156cf:	call   0x64015bf3
640156d4:	mov    esi,DWORD PTR [ebp+0x1c]
640156d7:	lea    eax,[ebp-0x8]
640156da:	push   eax
640156db:	lea    eax,[ebp-0x4]
640156de:	push   eax
640156df:	push   esi
640156e0:	push   DWORD PTR [ebp+0x20]
640156e3:	push   edi
640156e4:	call   0x64012956
640156e9:	mov    edi,eax
640156eb:	mov    eax,DWORD PTR [ebp-0x4]
640156ee:	add    esp,0x14
640156f1:	cmp    eax,DWORD PTR [ebp-0x8]
640156f4:	jae    0x64015751
640156f6:	push   ebx
640156f7:	cmp    esi,DWORD PTR [edi]
640156f9:	jl     0x64015742
640156fb:	cmp    esi,DWORD PTR [edi+0x4]
640156fe:	jg     0x64015742
64015700:	mov    eax,DWORD PTR [edi+0xc]
64015703:	mov    ecx,DWORD PTR [edi+0x10]
64015706:	shl    eax,0x4
64015709:	add    eax,ecx
6401570b:	mov    ecx,DWORD PTR [eax-0xc]
6401570e:	test   ecx,ecx
64015710:	je     0x64015718
64015712:	cmp    BYTE PTR [ecx+0x8],0x0
64015716:	jne    0x64015742
64015718:	lea    ebx,[eax-0x10]
6401571b:	test   BYTE PTR [ebx],0x40
6401571e:	jne    0x64015742
64015720:	push   DWORD PTR [ebp+0x24]
64015723:	mov    esi,DWORD PTR [ebp+0xc]
64015726:	push   DWORD PTR [ebp+0x20]
64015729:	push   0x0
6401572b:	push   DWORD PTR [ebp+0x18]
6401572e:	push   DWORD PTR [ebp+0x14]
64015731:	push   DWORD PTR [ebp+0x10]
64015734:	push   DWORD PTR [ebp+0x8]
64015737:	call   0x640155f7
6401573c:	mov    esi,DWORD PTR [ebp+0x1c]
6401573f:	add    esp,0x1c
64015742:	inc    DWORD PTR [ebp-0x4]
64015745:	mov    eax,DWORD PTR [ebp-0x4]
64015748:	add    edi,0x14
6401574b:	cmp    eax,DWORD PTR [ebp-0x8]
6401574e:	jb     0x640156f7
64015750:	pop    ebx
64015751:	pop    edi
64015752:	pop    esi
64015753:	leave  
64015754:	ret    
64015755:	push   ebp
64015756:	mov    ebp,esp
64015758:	sub    esp,0x2c
6401575b:	mov    ecx,DWORD PTR [ebp+0xc]
6401575e:	push   ebx
6401575f:	mov    ebx,DWORD PTR [ebp+0x18]
64015762:	mov    eax,DWORD PTR [ebx+0x4]
64015765:	cmp    eax,0x80
6401576a:	push   esi
6401576b:	push   edi
6401576c:	mov    BYTE PTR [ebp-0x1],0x0
64015770:	jg     0x64015778
64015772:	movsx  ecx,BYTE PTR [ecx+0x8]
64015776:	jmp    0x6401577b
64015778:	mov    ecx,DWORD PTR [ecx+0x8]
6401577b:	cmp    ecx,0xffffffff
6401577e:	mov    DWORD PTR [ebp-0x8],ecx
64015781:	jl     0x64015787
64015783:	cmp    ecx,eax
64015785:	jl     0x6401578c
64015787:	call   0x64015bf3
6401578c:	mov    esi,DWORD PTR [ebp+0x8]
6401578f:	mov    edi,0xe06d7363
64015794:	cmp    DWORD PTR [esi],edi
64015796:	jne    0x64015a67
6401579c:	cmp    DWORD PTR [esi+0x10],0x3
640157a0:	mov    ebx,0x19930520
640157a5:	jne    0x640158d4
640157ab:	mov    eax,DWORD PTR [esi+0x14]
640157ae:	cmp    eax,ebx
640157b0:	je     0x640157c4
640157b2:	cmp    eax,0x19930521
640157b7:	je     0x640157c4
640157b9:	cmp    eax,0x19930522
640157be:	jne    0x640158d4
640157c4:	cmp    DWORD PTR [esi+0x1c],0x0
640157c8:	jne    0x640158d4
640157ce:	call   0x64014bcb
640157d3:	cmp    DWORD PTR [eax+0x88],0x0
640157da:	je     0x64015aa6
640157e0:	call   0x64014bcb
640157e5:	mov    esi,DWORD PTR [eax+0x88]
640157eb:	mov    DWORD PTR [ebp+0x8],esi
640157ee:	call   0x64014bcb
640157f3:	mov    eax,DWORD PTR [eax+0x8c]
640157f9:	push   0x1
640157fb:	push   esi
640157fc:	mov    DWORD PTR [ebp+0x10],eax
640157ff:	call   0x6401b18b
64015804:	test   eax,eax
64015806:	pop    ecx
64015807:	pop    ecx
64015808:	jne    0x6401580f
6401580a:	call   0x64015bf3
6401580f:	cmp    DWORD PTR [esi],edi
64015811:	jne    0x64015839
64015813:	cmp    DWORD PTR [esi+0x10],0x3
64015817:	jne    0x64015839
64015819:	mov    eax,DWORD PTR [esi+0x14]
6401581c:	cmp    eax,ebx
6401581e:	je     0x6401582e
64015820:	cmp    eax,0x19930521
64015825:	je     0x6401582e
64015827:	cmp    eax,0x19930522
6401582c:	jne    0x64015839
6401582e:	cmp    DWORD PTR [esi+0x1c],0x0
64015832:	jne    0x64015839
64015834:	call   0x64015bf3
64015839:	call   0x64014bcb
6401583e:	cmp    DWORD PTR [eax+0x94],0x0
64015845:	je     0x640158d4
6401584b:	call   0x64014bcb
64015850:	mov    edi,DWORD PTR [eax+0x94]
64015856:	call   0x64014bcb
6401585b:	push   DWORD PTR [ebp+0x8]
6401585e:	xor    esi,esi
64015860:	mov    DWORD PTR [eax+0x94],esi
64015866:	call   0x64015189
6401586b:	test   al,al
6401586d:	pop    ecx
6401586e:	jne    0x640158cc
64015870:	xor    ebx,ebx
64015872:	cmp    DWORD PTR [edi],ebx
64015874:	jle    0x64015893
64015876:	mov    eax,DWORD PTR [edi+0x4]
64015879:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
6401587d:	push   0x6402d23c
64015882:	call   0x64012291
64015887:	test   al,al
64015889:	jne    0x64015898
6401588b:	inc    esi
6401588c:	add    ebx,0x10
6401588f:	cmp    esi,DWORD PTR [edi]
64015891:	jl     0x64015876
64015893:	jmp    0x64015ba7
64015898:	push   0x1
6401589a:	push   DWORD PTR [ebp+0x8]
6401589d:	call   0x64015110
640158a2:	pop    ecx
640158a3:	pop    ecx
640158a4:	lea    eax,[ebp+0x8]
640158a7:	push   eax
640158a8:	lea    ecx,[ebp-0x2c]
640158ab:	mov    DWORD PTR [ebp+0x8],0x64025d64
640158b2:	call   0x640122bd
640158b7:	push   0x6402a73c
640158bc:	lea    eax,[ebp-0x2c]
640158bf:	push   eax
640158c0:	mov    DWORD PTR [ebp-0x2c],0x64025d5c
640158c7:	call   0x640126ab
640158cc:	mov    esi,DWORD PTR [ebp+0x8]
640158cf:	mov    edi,0xe06d7363
640158d4:	cmp    DWORD PTR [esi],edi
640158d6:	jne    0x64015a64
640158dc:	cmp    DWORD PTR [esi+0x10],0x3
640158e0:	jne    0x64015a64
640158e6:	mov    eax,DWORD PTR [esi+0x14]
640158e9:	cmp    eax,ebx
640158eb:	je     0x640158ff
640158ed:	cmp    eax,0x19930521
640158f2:	je     0x640158ff
640158f4:	cmp    eax,0x19930522
640158f9:	jne    0x64015a64
640158ff:	mov    edi,DWORD PTR [ebp+0x18]
64015902:	cmp    DWORD PTR [edi+0xc],0x0
64015906:	jbe    0x640159cb
6401590c:	lea    eax,[ebp-0x1c]
6401590f:	push   eax
64015910:	lea    eax,[ebp-0x10]
64015913:	push   eax
64015914:	push   DWORD PTR [ebp-0x8]
64015917:	push   DWORD PTR [ebp+0x20]
6401591a:	push   edi
6401591b:	call   0x64012956
64015920:	add    esp,0x14
64015923:	mov    edi,eax
64015925:	mov    eax,DWORD PTR [ebp-0x10]
64015928:	cmp    eax,DWORD PTR [ebp-0x1c]
6401592b:	jae    0x640159c8
64015931:	mov    eax,DWORD PTR [ebp-0x8]
64015934:	cmp    DWORD PTR [edi],eax
64015936:	jg     0x640159bd
6401593c:	cmp    eax,DWORD PTR [edi+0x4]
6401593f:	jg     0x640159bd
64015941:	mov    eax,DWORD PTR [edi+0x10]
64015944:	mov    DWORD PTR [ebp-0xc],eax
64015947:	mov    eax,DWORD PTR [edi+0xc]
6401594a:	test   eax,eax
6401594c:	mov    DWORD PTR [ebp-0x18],eax
6401594f:	jle    0x640159bd
64015951:	mov    eax,DWORD PTR [esi+0x1c]
64015954:	mov    eax,DWORD PTR [eax+0xc]
64015957:	lea    ebx,[eax+0x4]
6401595a:	mov    eax,DWORD PTR [eax]
6401595c:	test   eax,eax
6401595e:	mov    DWORD PTR [ebp-0x14],eax
64015961:	jle    0x64015986
64015963:	push   DWORD PTR [esi+0x1c]
64015966:	mov    eax,DWORD PTR [ebx]
64015968:	push   eax
64015969:	push   DWORD PTR [ebp-0xc]
6401596c:	mov    DWORD PTR [ebp-0x20],eax
6401596f:	call   0x64014f4a
64015974:	add    esp,0xc
64015977:	test   eax,eax
64015979:	jne    0x64015995
6401597b:	dec    DWORD PTR [ebp-0x14]
6401597e:	add    ebx,0x4
64015981:	cmp    DWORD PTR [ebp-0x14],eax
64015984:	jg     0x64015963
64015986:	dec    DWORD PTR [ebp-0x18]
64015989:	add    DWORD PTR [ebp-0xc],0x10
6401598d:	cmp    DWORD PTR [ebp-0x18],0x0
64015991:	jg     0x64015951
64015993:	jmp    0x640159bd
64015995:	push   DWORD PTR [ebp+0x24]
64015998:	mov    ebx,DWORD PTR [ebp-0xc]
6401599b:	push   DWORD PTR [ebp+0x20]
6401599e:	mov    BYTE PTR [ebp-0x1],0x1
640159a2:	push   DWORD PTR [ebp-0x20]
640159a5:	push   DWORD PTR [ebp+0x18]
640159a8:	push   DWORD PTR [ebp+0x14]
640159ab:	push   DWORD PTR [ebp+0x10]
640159ae:	push   esi
640159af:	mov    esi,DWORD PTR [ebp+0xc]
640159b2:	call   0x640155f7
640159b7:	mov    esi,DWORD PTR [ebp+0x8]
640159ba:	add    esp,0x1c
640159bd:	inc    DWORD PTR [ebp-0x10]
640159c0:	add    edi,0x14
640159c3:	jmp    0x64015925
640159c8:	mov    edi,DWORD PTR [ebp+0x18]
640159cb:	cmp    BYTE PTR [ebp+0x1c],0x0
640159cf:	je     0x640159db
640159d1:	push   0x1
640159d3:	push   esi
640159d4:	call   0x64015110
640159d9:	pop    ecx
640159da:	pop    ecx
640159db:	cmp    BYTE PTR [ebp-0x1],0x0
640159df:	jne    0x64015a93
640159e5:	mov    eax,DWORD PTR [edi]
640159e7:	and    eax,0x1fffffff
640159ec:	cmp    eax,0x19930521
640159f1:	jb     0x64015a93
640159f7:	mov    edi,DWORD PTR [edi+0x1c]
640159fa:	test   edi,edi
640159fc:	je     0x64015a93
64015a02:	push   esi
64015a03:	call   0x64015189
64015a08:	test   al,al
64015a0a:	pop    ecx
64015a0b:	jne    0x64015a93
64015a11:	call   0x64014bcb
64015a16:	call   0x64014bcb
64015a1b:	call   0x64014bcb
64015a20:	mov    DWORD PTR [eax+0x88],esi
64015a26:	call   0x64014bcb
64015a2b:	cmp    DWORD PTR [ebp+0x24],0x0
64015a2f:	mov    ecx,DWORD PTR [ebp+0x10]
64015a32:	mov    DWORD PTR [eax+0x8c],ecx
64015a38:	push   esi
64015a39:	jne    0x64015a40
64015a3b:	push   DWORD PTR [ebp+0xc]
64015a3e:	jmp    0x64015a43
64015a40:	push   DWORD PTR [ebp+0x24]
64015a43:	call   0x6401272c
64015a48:	mov    esi,DWORD PTR [ebp+0x18]
64015a4b:	push   0xffffffff
64015a4d:	push   esi
64015a4e:	push   DWORD PTR [ebp+0x14]
64015a51:	push   DWORD PTR [ebp+0xc]
64015a54:	call   0x64014fea
64015a59:	add    esp,0x10
64015a5c:	push   DWORD PTR [esi+0x1c]
64015a5f:	call   0x64015202
64015a64:	mov    ebx,DWORD PTR [ebp+0x18]
64015a67:	cmp    DWORD PTR [ebx+0xc],0x0
64015a6b:	jbe    0x64015a93
64015a6d:	cmp    BYTE PTR [ebp+0x1c],0x0
64015a71:	jne    0x64015893
64015a77:	push   DWORD PTR [ebp+0x24]
64015a7a:	push   DWORD PTR [ebp+0x20]
64015a7d:	push   DWORD PTR [ebp-0x8]
64015a80:	push   ebx
64015a81:	push   DWORD PTR [ebp+0x14]
64015a84:	push   DWORD PTR [ebp+0x10]
64015a87:	push   DWORD PTR [ebp+0xc]
64015a8a:	push   esi
64015a8b:	call   0x64015663
64015a90:	add    esp,0x20
64015a93:	call   0x64014bcb
64015a98:	cmp    DWORD PTR [eax+0x94],0x0
64015a9f:	je     0x64015aa6
64015aa1:	call   0x64015bf3
64015aa6:	pop    edi
64015aa7:	pop    esi
64015aa8:	pop    ebx
64015aa9:	leave  
64015aaa:	ret    
64015aab:	push   esi
64015aac:	push   DWORD PTR [esp+0x8]
64015ab0:	mov    esi,ecx
64015ab2:	call   0x64012323
64015ab7:	mov    DWORD PTR [esi],0x64025d5c
64015abd:	mov    eax,esi
64015abf:	pop    esi
64015ac0:	ret    0x4
64015ac3:	push   ebp
64015ac4:	mov    ebp,esp
64015ac6:	push   ebx
64015ac7:	push   esi
64015ac8:	push   edi
64015ac9:	call   0x64014bcb
64015ace:	cmp    DWORD PTR [eax+0x20c],0x0
64015ad5:	mov    eax,DWORD PTR [ebp+0x18]
64015ad8:	mov    ecx,DWORD PTR [ebp+0x8]
64015adb:	mov    edi,0xe06d7363
64015ae0:	mov    esi,0x1fffffff
64015ae5:	mov    ebx,0x19930522
64015aea:	jne    0x64015b0c
64015aec:	mov    edx,DWORD PTR [ecx]
64015aee:	cmp    edx,edi
64015af0:	je     0x64015b0c
64015af2:	cmp    edx,0x80000026
64015af8:	je     0x64015b0c
64015afa:	mov    edx,DWORD PTR [eax]
64015afc:	and    edx,esi
64015afe:	cmp    edx,ebx
64015b00:	jb     0x64015b0c
64015b02:	test   BYTE PTR [eax+0x20],0x1
64015b06:	jne    0x64015b9f
64015b0c:	test   BYTE PTR [ecx+0x4],0x66
64015b10:	je     0x64015b35
64015b12:	cmp    DWORD PTR [eax+0x4],0x0
64015b16:	je     0x64015b9f
64015b1c:	cmp    DWORD PTR [ebp+0x1c],0x0
64015b20:	jne    0x64015b9f
64015b22:	push   0xffffffff
64015b24:	push   eax
64015b25:	push   DWORD PTR [ebp+0x14]
64015b28:	push   DWORD PTR [ebp+0xc]
64015b2b:	call   0x64014fea
64015b30:	add    esp,0x10
64015b33:	jmp    0x64015b9f
64015b35:	cmp    DWORD PTR [eax+0xc],0x0
64015b39:	jne    0x64015b4d
64015b3b:	mov    edx,DWORD PTR [eax]
64015b3d:	and    edx,esi
64015b3f:	cmp    edx,0x19930521
64015b45:	jb     0x64015b9f
64015b47:	cmp    DWORD PTR [eax+0x1c],0x0
64015b4b:	je     0x64015b9f
64015b4d:	cmp    DWORD PTR [ecx],edi
64015b4f:	jne    0x64015b83
64015b51:	cmp    DWORD PTR [ecx+0x10],0x3
64015b55:	jb     0x64015b83
64015b57:	cmp    DWORD PTR [ecx+0x14],ebx
64015b5a:	jbe    0x64015b83
64015b5c:	mov    edx,DWORD PTR [ecx+0x1c]
64015b5f:	mov    edx,DWORD PTR [edx+0x8]
64015b62:	test   edx,edx
64015b64:	je     0x64015b83
64015b66:	movzx  esi,BYTE PTR [ebp+0x24]
64015b6a:	push   esi
64015b6b:	push   DWORD PTR [ebp+0x20]
64015b6e:	push   DWORD PTR [ebp+0x1c]
64015b71:	push   eax
64015b72:	push   DWORD PTR [ebp+0x14]
64015b75:	push   DWORD PTR [ebp+0x10]
64015b78:	push   DWORD PTR [ebp+0xc]
64015b7b:	push   ecx
64015b7c:	call   edx
64015b7e:	add    esp,0x20
64015b81:	jmp    0x64015ba2
64015b83:	push   DWORD PTR [ebp+0x20]
64015b86:	push   DWORD PTR [ebp+0x1c]
64015b89:	push   DWORD PTR [ebp+0x24]
64015b8c:	push   eax
64015b8d:	push   DWORD PTR [ebp+0x14]
64015b90:	push   DWORD PTR [ebp+0x10]
64015b93:	push   DWORD PTR [ebp+0xc]
64015b96:	push   ecx
64015b97:	call   0x64015755
64015b9c:	add    esp,0x20
64015b9f:	xor    eax,eax
64015ba1:	inc    eax
64015ba2:	pop    edi
64015ba3:	pop    esi
64015ba4:	pop    ebx
64015ba5:	pop    ebp
64015ba6:	ret    
64015ba7:	push   0x8
64015ba9:	push   0x6402a778
64015bae:	call   0x64014080
64015bb3:	call   0x64014bcb
64015bb8:	mov    eax,DWORD PTR [eax+0x78]
64015bbb:	test   eax,eax
64015bbd:	je     0x64015bd5
64015bbf:	and    DWORD PTR [ebp-0x4],0x0
64015bc3:	call   eax
64015bc5:	jmp    0x64015bce
64015bc7:	xor    eax,eax
64015bc9:	inc    eax
64015bca:	ret    
64015bcb:	mov    esp,DWORD PTR [ebp-0x18]
64015bce:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015bd5:	call   0x6401b198
64015bda:	call   0x640140c5
64015bdf:	ret    
64015be0:	call   0x64014bcb
64015be5:	mov    eax,DWORD PTR [eax+0x7c]
64015be8:	test   eax,eax
64015bea:	je     0x64015bee
64015bec:	call   eax
64015bee:	jmp    0x64015ba7
64015bf3:	push   0x8
64015bf5:	push   0x6402a798
64015bfa:	call   0x64014080
64015bff:	push   DWORD PTR ds:0x6402e5a0
64015c05:	call   0x640149af
64015c0a:	pop    ecx
64015c0b:	test   eax,eax
64015c0d:	je     0x64015c25
64015c0f:	and    DWORD PTR [ebp-0x4],0x0
64015c13:	call   eax
64015c15:	jmp    0x64015c1e
64015c17:	xor    eax,eax
64015c19:	inc    eax
64015c1a:	ret    
64015c1b:	mov    esp,DWORD PTR [ebp-0x18]
64015c1e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015c25:	jmp    0x64015ba7
64015c2a:	push   0x64015ba7
64015c2f:	call   0x64014938
64015c34:	pop    ecx
64015c35:	mov    ds:0x6402e5a0,eax
64015c3a:	ret    
64015c3b:	int3   
64015c3c:	int3   
64015c3d:	int3   
64015c3e:	int3   
64015c3f:	int3   
64015c40:	push   ebp
64015c41:	mov    ebp,esp
64015c43:	sub    esp,0x4
64015c46:	push   ebx
64015c47:	push   ecx
64015c48:	mov    eax,DWORD PTR [ebp+0xc]
64015c4b:	add    eax,0xc
64015c4e:	mov    DWORD PTR [ebp-0x4],eax
64015c51:	mov    eax,DWORD PTR [ebp+0x8]
64015c54:	push   ebp
64015c55:	push   DWORD PTR [ebp+0x10]
64015c58:	mov    ecx,DWORD PTR [ebp+0x10]
64015c5b:	mov    ebp,DWORD PTR [ebp-0x4]
64015c5e:	call   0x6401b398
64015c63:	push   esi
64015c64:	push   edi
64015c65:	call   eax
64015c67:	pop    edi
64015c68:	pop    esi
64015c69:	mov    ebx,ebp
64015c6b:	pop    ebp
64015c6c:	mov    ecx,DWORD PTR [ebp+0x10]
64015c6f:	push   ebp
64015c70:	mov    ebp,ebx
64015c72:	cmp    ecx,0x100
64015c78:	jne    0x64015c7f
64015c7a:	mov    ecx,0x2
64015c7f:	push   ecx
64015c80:	call   0x6401b398
64015c85:	pop    ebp
64015c86:	pop    ecx
64015c87:	pop    ebx
64015c88:	leave  
64015c89:	ret    0xc
64015c8c:	push   ebp
64015c8d:	mov    ebp,esp
64015c8f:	sub    esp,0x328
64015c95:	mov    ds:0x6402e6b0,eax
64015c9a:	mov    DWORD PTR ds:0x6402e6ac,ecx
64015ca0:	mov    DWORD PTR ds:0x6402e6a8,edx
64015ca6:	mov    DWORD PTR ds:0x6402e6a4,ebx
64015cac:	mov    DWORD PTR ds:0x6402e6a0,esi
64015cb2:	mov    DWORD PTR ds:0x6402e69c,edi
64015cb8:	data16 mov WORD PTR ds:0x6402e6c8,ss
64015cbf:	data16 mov WORD PTR ds:0x6402e6bc,cs
64015cc6:	data16 mov WORD PTR ds:0x6402e698,ds
64015ccd:	data16 mov WORD PTR ds:0x6402e694,es
64015cd4:	data16 mov WORD PTR ds:0x6402e690,fs
64015cdb:	data16 mov WORD PTR ds:0x6402e68c,gs
64015ce2:	pushf  
64015ce3:	pop    DWORD PTR ds:0x6402e6c0
64015ce9:	mov    eax,DWORD PTR [ebp+0x0]
64015cec:	mov    ds:0x6402e6b4,eax
64015cf1:	mov    eax,DWORD PTR [ebp+0x4]
64015cf4:	mov    ds:0x6402e6b8,eax
64015cf9:	lea    eax,[ebp+0x8]
64015cfc:	mov    ds:0x6402e6c4,eax
64015d01:	mov    eax,DWORD PTR [ebp-0x320]
64015d07:	mov    DWORD PTR ds:0x6402e600,0x10001
64015d11:	mov    eax,ds:0x6402e6b8
64015d16:	mov    ds:0x6402e5b4,eax
64015d1b:	mov    DWORD PTR ds:0x6402e5a8,0xc0000409
64015d25:	mov    DWORD PTR ds:0x6402e5ac,0x1
64015d2f:	mov    eax,ds:0x6402d09c
64015d34:	mov    DWORD PTR [ebp-0x328],eax
64015d3a:	mov    eax,ds:0x6402d0a0
64015d3f:	mov    DWORD PTR [ebp-0x324],eax
64015d45:	call   DWORD PTR ds:0x64025120
64015d4b:	mov    ds:0x6402e5f8,eax
64015d50:	push   0x1
64015d52:	call   0x640148c4
64015d57:	pop    ecx
64015d58:	push   0x0
64015d5a:	call   DWORD PTR ds:0x6402511c
64015d60:	push   0x64025d74
64015d65:	call   DWORD PTR ds:0x64025118
64015d6b:	cmp    DWORD PTR ds:0x6402e5f8,0x0
64015d72:	jne    0x64015d7c
64015d74:	push   0x1
64015d76:	call   0x640148c4
64015d7b:	pop    ecx
64015d7c:	push   0xc0000409
64015d81:	call   DWORD PTR ds:0x64025048
64015d87:	push   eax
64015d88:	call   DWORD PTR ds:0x64025114
64015d8e:	leave  
64015d8f:	ret    
64015d90:	push   esi
64015d91:	push   edi
64015d92:	xor    esi,esi
64015d94:	push   DWORD PTR [esp+0xc]
64015d98:	call   0x64013a33
64015d9d:	mov    edi,eax
64015d9f:	test   edi,edi
64015da1:	pop    ecx
64015da2:	jne    0x64015dcb
64015da4:	cmp    DWORD PTR ds:0x6402e8cc,eax
64015daa:	jbe    0x64015dcb
64015dac:	push   esi
64015dad:	call   DWORD PTR ds:0x64025050
64015db3:	lea    eax,[esi+0x3e8]
64015db9:	cmp    eax,DWORD PTR ds:0x6402e8cc
64015dbf:	jbe    0x64015dc4
64015dc1:	or     eax,0xffffffff
64015dc4:	cmp    eax,0xffffffff
64015dc7:	mov    esi,eax
64015dc9:	jne    0x64015d94
64015dcb:	mov    eax,edi
64015dcd:	pop    edi
64015dce:	pop    esi
64015dcf:	ret    
64015dd0:	push   esi
64015dd1:	push   edi
64015dd2:	xor    esi,esi
64015dd4:	push   0x0
64015dd6:	push   DWORD PTR [esp+0x14]
64015dda:	push   DWORD PTR [esp+0x14]
64015dde:	call   0x6401b3c3
64015de3:	mov    edi,eax
64015de5:	add    esp,0xc
64015de8:	test   edi,edi
64015dea:	jne    0x64015e13
64015dec:	cmp    DWORD PTR ds:0x6402e8cc,eax
64015df2:	jbe    0x64015e13
64015df4:	push   esi
64015df5:	call   DWORD PTR ds:0x64025050
64015dfb:	lea    eax,[esi+0x3e8]
64015e01:	cmp    eax,DWORD PTR ds:0x6402e8cc
64015e07:	jbe    0x64015e0c
64015e09:	or     eax,0xffffffff
64015e0c:	cmp    eax,0xffffffff
64015e0f:	mov    esi,eax
64015e11:	jne    0x64015dd4
64015e13:	mov    eax,edi
64015e15:	pop    edi
64015e16:	pop    esi
64015e17:	ret    
64015e18:	push   esi
64015e19:	push   edi
64015e1a:	xor    esi,esi
64015e1c:	push   DWORD PTR [esp+0x10]
64015e20:	push   DWORD PTR [esp+0x10]
64015e24:	call   0x64013e65
64015e29:	mov    edi,eax
64015e2b:	test   edi,edi
64015e2d:	pop    ecx
64015e2e:	pop    ecx
64015e2f:	jne    0x64015e5e
64015e31:	cmp    DWORD PTR [esp+0x10],eax
64015e35:	je     0x64015e5e
64015e37:	cmp    DWORD PTR ds:0x6402e8cc,eax
64015e3d:	jbe    0x64015e5e
64015e3f:	push   esi
64015e40:	call   DWORD PTR ds:0x64025050
64015e46:	lea    eax,[esi+0x3e8]
64015e4c:	cmp    eax,DWORD PTR ds:0x6402e8cc
64015e52:	jbe    0x64015e57
64015e54:	or     eax,0xffffffff
64015e57:	cmp    eax,0xffffffff
64015e5a:	mov    esi,eax
64015e5c:	jne    0x64015e1c
64015e5e:	mov    eax,edi
64015e60:	pop    edi
64015e61:	pop    esi
64015e62:	ret    
64015e63:	push   0x10
64015e65:	push   0x6402a7b8
64015e6a:	call   0x64014080
64015e6f:	xor    eax,eax
64015e71:	mov    ebx,DWORD PTR [ebp+0x8]
64015e74:	xor    edi,edi
64015e76:	cmp    ebx,edi
64015e78:	setne  al
64015e7b:	cmp    eax,edi
64015e7d:	jne    0x64015e9c
64015e7f:	call   0x64014880
64015e84:	mov    DWORD PTR [eax],0x16
64015e8a:	push   edi
64015e8b:	push   edi
64015e8c:	push   edi
64015e8d:	push   edi
64015e8e:	push   edi
64015e8f:	call   0x640125f4
64015e94:	add    esp,0x14
64015e97:	or     eax,0xffffffff
64015e9a:	jmp    0x64015eef
64015e9c:	cmp    DWORD PTR ds:0x640324dc,0x3
64015ea3:	jne    0x64015edd
64015ea5:	push   0x4
64015ea7:	call   0x6401a07a
64015eac:	pop    ecx
64015ead:	mov    DWORD PTR [ebp-0x4],edi
64015eb0:	push   ebx
64015eb1:	call   0x6401a0f3
64015eb6:	pop    ecx
64015eb7:	mov    DWORD PTR [ebp-0x20],eax
64015eba:	cmp    eax,edi
64015ebc:	je     0x64015ec9
64015ebe:	mov    esi,DWORD PTR [ebx-0x4]
64015ec1:	sub    esi,0x9
64015ec4:	mov    DWORD PTR [ebp-0x1c],esi
64015ec7:	jmp    0x64015ecc
64015ec9:	mov    esi,DWORD PTR [ebp-0x1c]
64015ecc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015ed3:	call   0x64015efd
64015ed8:	cmp    DWORD PTR [ebp-0x20],edi
64015edb:	jne    0x64015eed
64015edd:	push   ebx
64015ede:	push   edi
64015edf:	push   DWORD PTR ds:0x6402ea6c
64015ee5:	call   DWORD PTR ds:0x6402510c
64015eeb:	mov    esi,eax
64015eed:	mov    eax,esi
64015eef:	call   0x640140c5
64015ef4:	ret    
64015ef5:	xor    edi,edi
64015ef7:	mov    ebx,DWORD PTR [ebp+0x8]
64015efa:	mov    esi,DWORD PTR [ebp-0x1c]
64015efd:	push   0x4
64015eff:	call   0x64019fa2
64015f04:	pop    ecx
64015f05:	ret    
64015f06:	call   0x6401ad4a
64015f0b:	push   DWORD PTR [esp+0x4]
64015f0f:	call   0x6401abaa
64015f14:	push   DWORD PTR ds:0x6402d260
64015f1a:	call   0x640149af
64015f1f:	push   0xff
64015f24:	call   eax
64015f26:	add    esp,0xc
64015f29:	ret    
64015f2a:	push   0x64025d8c
64015f2f:	call   DWORD PTR ds:0x64025130
64015f35:	test   eax,eax
64015f37:	je     0x64015f4f
64015f39:	push   0x64025d7c
64015f3e:	push   eax
64015f3f:	call   DWORD PTR ds:0x64025014
64015f45:	test   eax,eax
64015f47:	je     0x64015f4f
64015f49:	push   DWORD PTR [esp+0x4]
64015f4d:	call   eax
64015f4f:	ret    
64015f50:	push   DWORD PTR [esp+0x4]
64015f54:	call   0x64015f2a
64015f59:	pop    ecx
64015f5a:	push   DWORD PTR [esp+0x4]
64015f5e:	call   DWORD PTR ds:0x64025144
64015f64:	int3   
64015f65:	push   0x8
64015f67:	call   0x6401a07a
64015f6c:	pop    ecx
64015f6d:	ret    
64015f6e:	push   0x8
64015f70:	call   0x64019fa2
64015f75:	pop    ecx
64015f76:	ret    
64015f77:	push   esi
64015f78:	mov    esi,eax
64015f7a:	jmp    0x64015f87
64015f7c:	mov    eax,DWORD PTR [esi]
64015f7e:	test   eax,eax
64015f80:	je     0x64015f84
64015f82:	call   eax
64015f84:	add    esi,0x4
64015f87:	cmp    esi,DWORD PTR [esp+0x8]
64015f8b:	jb     0x64015f7c
64015f8d:	pop    esi
64015f8e:	ret    
64015f8f:	push   esi
64015f90:	mov    esi,DWORD PTR [esp+0x8]
64015f94:	xor    eax,eax
64015f96:	jmp    0x64015fa7
64015f98:	test   eax,eax
64015f9a:	jne    0x64015fad
64015f9c:	mov    ecx,DWORD PTR [esi]
64015f9e:	test   ecx,ecx
64015fa0:	je     0x64015fa4
64015fa2:	call   ecx
64015fa4:	add    esi,0x4
64015fa7:	cmp    esi,DWORD PTR [esp+0xc]
64015fab:	jb     0x64015f98
64015fad:	pop    esi
64015fae:	ret    
64015faf:	mov    ecx,DWORD PTR [esp+0x4]
64015fb3:	push   esi
64015fb4:	xor    esi,esi
64015fb6:	cmp    ecx,esi
64015fb8:	jne    0x64015fd7
64015fba:	call   0x64014880
64015fbf:	push   esi
64015fc0:	push   esi
64015fc1:	push   esi
64015fc2:	push   esi
64015fc3:	push   esi
64015fc4:	mov    DWORD PTR [eax],0x16
64015fca:	call   0x640125f4
64015fcf:	add    esp,0x14
64015fd2:	push   0x16
64015fd4:	pop    eax
64015fd5:	pop    esi
64015fd6:	ret    
64015fd7:	mov    eax,ds:0x6402e8d4
64015fdc:	cmp    eax,esi
64015fde:	je     0x64015fba
64015fe0:	mov    DWORD PTR [ecx],eax
64015fe2:	xor    eax,eax
64015fe4:	pop    esi
64015fe5:	ret    
64015fe6:	mov    eax,DWORD PTR [esp+0x4]
64015fea:	push   esi
64015feb:	xor    esi,esi
64015fed:	cmp    eax,esi
64015fef:	jne    0x6401600e
64015ff1:	call   0x64014880
64015ff6:	push   esi
64015ff7:	push   esi
64015ff8:	push   esi
64015ff9:	push   esi
64015ffa:	push   esi
64015ffb:	mov    DWORD PTR [eax],0x16
64016001:	call   0x640125f4
64016006:	add    esp,0x14
64016009:	push   0x16
6401600b:	pop    eax
6401600c:	pop    esi
6401600d:	ret    
6401600e:	cmp    DWORD PTR ds:0x6402e8d4,esi
64016014:	je     0x64015ff1
64016016:	mov    ecx,DWORD PTR ds:0x6402e8e0
6401601c:	mov    DWORD PTR [eax],ecx
6401601e:	xor    eax,eax
64016020:	pop    esi
64016021:	ret    
64016022:	cmp    DWORD PTR ds:0x640275fc,0x0
64016029:	je     0x64016045
6401602b:	push   0x640275fc
64016030:	call   0x6401b0d0
64016035:	test   eax,eax
64016037:	pop    ecx
64016038:	je     0x64016045
6401603a:	push   DWORD PTR [esp+0x4]
6401603e:	call   DWORD PTR ds:0x640275fc
64016044:	pop    ecx
64016045:	call   0x6401b4e1
6401604a:	push   0x640252c4
6401604f:	push   0x640252ac
64016054:	call   0x64015f8f
64016059:	test   eax,eax
6401605b:	pop    ecx
6401605c:	pop    ecx
6401605d:	jne    0x640160b3
6401605f:	push   esi
64016060:	push   edi
64016061:	push   0x64018b00
64016066:	call   0x64012bef
6401606b:	mov    esi,0x640251ec
64016070:	mov    eax,esi
64016072:	mov    edi,0x640252a8
64016077:	cmp    eax,edi
64016079:	pop    ecx
6401607a:	jae    0x6401608b
6401607c:	mov    eax,DWORD PTR [esi]
6401607e:	test   eax,eax
64016080:	je     0x64016084
64016082:	call   eax
64016084:	add    esi,0x4
64016087:	cmp    esi,edi
64016089:	jb     0x6401607c
6401608b:	cmp    DWORD PTR ds:0x64032618,0x0
64016092:	pop    edi
64016093:	pop    esi
64016094:	je     0x640160b1
64016096:	push   0x64032618
6401609b:	call   0x6401b0d0
640160a0:	test   eax,eax
640160a2:	pop    ecx
640160a3:	je     0x640160b1
640160a5:	push   0x0
640160a7:	push   0x2
640160a9:	push   0x0
640160ab:	call   DWORD PTR ds:0x64032618
640160b1:	xor    eax,eax
640160b3:	ret    
640160b4:	push   0x10
640160b6:	push   0x6402a7d8
640160bb:	call   0x64014080
640160c0:	push   0x8
640160c2:	call   0x6401a07a
640160c7:	pop    ecx
640160c8:	xor    edi,edi
640160ca:	mov    DWORD PTR [ebp-0x4],edi
640160cd:	xor    ebx,ebx
640160cf:	inc    ebx
640160d0:	cmp    DWORD PTR ds:0x6402e914,ebx
640160d6:	je     0x64016156
640160d8:	mov    DWORD PTR ds:0x6402e910,ebx
640160de:	mov    al,BYTE PTR [ebp+0x10]
640160e1:	mov    ds:0x6402e90c,al
640160e6:	cmp    DWORD PTR [ebp+0xc],edi
640160e9:	jne    0x64016146
640160eb:	push   DWORD PTR ds:0x64032610
640160f1:	call   0x640149af
640160f6:	mov    DWORD PTR [ebp-0x1c],eax
640160f9:	push   DWORD PTR ds:0x6403260c
640160ff:	call   0x640149af
64016104:	pop    ecx
64016105:	pop    ecx
64016106:	mov    esi,eax
64016108:	mov    DWORD PTR [ebp-0x20],esi
6401610b:	cmp    DWORD PTR [ebp-0x1c],edi
6401610e:	je     0x64016136
64016110:	sub    esi,0x4
64016113:	mov    DWORD PTR [ebp-0x20],esi
64016116:	cmp    esi,DWORD PTR [ebp-0x1c]
64016119:	jb     0x64016136
6401611b:	cmp    DWORD PTR [esi],0x0
6401611e:	je     0x64016110
64016120:	mov    edi,DWORD PTR [esi]
64016122:	call   0x640149a6
64016127:	cmp    edi,eax
64016129:	je     0x64016110
6401612b:	push   edi
6401612c:	call   0x640149af
64016131:	pop    ecx
64016132:	call   eax
64016134:	jmp    0x64016110
64016136:	push   0x640252d4
6401613b:	mov    eax,0x640252c8
64016140:	call   0x64015f77
64016145:	pop    ecx
64016146:	push   0x640252dc
6401614b:	mov    eax,0x640252d8
64016150:	call   0x64015f77
64016155:	pop    ecx
64016156:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401615d:	call   0x64016181
64016162:	cmp    DWORD PTR [ebp+0x10],0x0
64016166:	jne    0x64016190
64016168:	mov    DWORD PTR ds:0x6402e914,ebx
6401616e:	push   0x8
64016170:	call   0x64019fa2
64016175:	pop    ecx
64016176:	push   DWORD PTR [ebp+0x8]
64016179:	call   0x64015f50
6401617e:	xor    ebx,ebx
64016180:	inc    ebx
64016181:	cmp    DWORD PTR [ebp+0x10],0x0
64016185:	je     0x6401618f
64016187:	push   0x8
64016189:	call   0x64019fa2
6401618e:	pop    ecx
6401618f:	ret    
64016190:	call   0x640140c5
64016195:	ret    
64016196:	push   0x0
64016198:	push   0x1
6401619a:	push   DWORD PTR [esp+0xc]
6401619e:	call   0x640160b4
640161a3:	add    esp,0xc
640161a6:	ret    
640161a7:	push   0x1
640161a9:	push   0x0
640161ab:	push   0x0
640161ad:	call   0x640160b4
640161b2:	add    esp,0xc
640161b5:	ret    
640161b6:	push   esi
640161b7:	call   0x640149a6
640161bc:	mov    esi,eax
640161be:	push   esi
640161bf:	call   0x64014ef1
640161c4:	push   esi
640161c5:	call   0x6401b71e
640161ca:	push   esi
640161cb:	call   0x640124ee
640161d0:	push   esi
640161d1:	call   0x6401b714
640161d6:	push   esi
640161d7:	call   0x6401b70a
640161dc:	push   esi
640161dd:	call   0x6401b500
640161e2:	push   esi
640161e3:	call   0x6401ef57
640161e8:	push   esi
640161e9:	call   0x64015c2a
640161ee:	push   0x64016196
640161f3:	call   0x64014938
640161f8:	add    esp,0x24
640161fb:	mov    ds:0x6402d260,eax
64016200:	pop    esi
64016201:	ret    
64016202:	sub    eax,0x3a4
64016207:	je     0x6401622b
64016209:	sub    eax,0x4
6401620c:	je     0x64016225
6401620e:	sub    eax,0xd
64016211:	je     0x6401621f
64016213:	dec    eax
64016214:	je     0x64016219
64016216:	xor    eax,eax
64016218:	ret    
64016219:	mov    eax,0x404
6401621e:	ret    
6401621f:	mov    eax,0x412
64016224:	ret    
64016225:	mov    eax,0x804
6401622a:	ret    
6401622b:	mov    eax,0x411
64016230:	ret    
64016231:	push   ebx
64016232:	push   ebp
64016233:	push   esi
64016234:	push   edi
64016235:	mov    ebp,0x101
6401623a:	mov    esi,eax
6401623c:	push   ebp
6401623d:	xor    edi,edi
6401623f:	lea    ebx,[esi+0x1c]
64016242:	push   edi
64016243:	push   ebx
64016244:	call   0x640131c0
64016249:	mov    DWORD PTR [esi+0x4],edi
6401624c:	mov    DWORD PTR [esi+0x8],edi
6401624f:	mov    DWORD PTR [esi+0xc],edi
64016252:	xor    eax,eax
64016254:	lea    edi,[esi+0x10]
64016257:	stos   DWORD PTR es:[edi],eax
64016258:	stos   DWORD PTR es:[edi],eax
64016259:	stos   DWORD PTR es:[edi],eax
6401625a:	mov    eax,0x6402d268
6401625f:	add    esp,0xc
64016262:	sub    eax,esi
64016264:	mov    cl,BYTE PTR [eax+ebx*1]
64016267:	mov    BYTE PTR [ebx],cl
64016269:	inc    ebx
6401626a:	dec    ebp
6401626b:	jne    0x64016264
6401626d:	lea    ecx,[esi+0x11d]
64016273:	mov    esi,0x100
64016278:	mov    dl,BYTE PTR [ecx+eax*1]
6401627b:	mov    BYTE PTR [ecx],dl
6401627d:	inc    ecx
6401627e:	dec    esi
6401627f:	jne    0x64016278
64016281:	pop    edi
64016282:	pop    esi
64016283:	pop    ebp
64016284:	pop    ebx
64016285:	ret    
64016286:	push   ebp
64016287:	lea    ebp,[esp-0x49c]
6401628e:	sub    esp,0x51c
64016294:	mov    eax,ds:0x6402d09c
64016299:	xor    eax,ebp
6401629b:	mov    DWORD PTR [ebp+0x498],eax
640162a1:	push   ebx
640162a2:	push   edi
640162a3:	lea    eax,[ebp-0x7c]
640162a6:	push   eax
640162a7:	push   DWORD PTR [esi+0x4]
640162aa:	call   DWORD PTR ds:0x64025148
640162b0:	test   eax,eax
640162b2:	mov    edi,0x100
640162b7:	je     0x640163ac
640162bd:	xor    eax,eax
640162bf:	mov    BYTE PTR [ebp+eax*1+0x398],al
640162c6:	inc    eax
640162c7:	cmp    eax,edi
640162c9:	jb     0x640162bf
640162cb:	mov    al,BYTE PTR [ebp-0x76]
640162ce:	test   al,al
640162d0:	mov    BYTE PTR [ebp+0x398],0x20
640162d7:	je     0x64016304
640162d9:	lea    ebx,[ebp-0x75]
640162dc:	movzx  ecx,al
640162df:	movzx  eax,BYTE PTR [ebx]
640162e2:	cmp    ecx,eax
640162e4:	ja     0x640162fc
640162e6:	sub    eax,ecx
640162e8:	inc    eax
640162e9:	push   eax
640162ea:	lea    edx,[ebp+ecx*1+0x398]
640162f1:	push   0x20
640162f3:	push   edx
640162f4:	call   0x640131c0
640162f9:	add    esp,0xc
640162fc:	inc    ebx
640162fd:	mov    al,BYTE PTR [ebx]
640162ff:	inc    ebx
64016300:	test   al,al
64016302:	jne    0x640162dc
64016304:	push   0x0
64016306:	push   DWORD PTR [esi+0xc]
64016309:	lea    eax,[ebp-0x68]
6401630c:	push   DWORD PTR [esi+0x4]
6401630f:	push   eax
64016310:	push   edi
64016311:	lea    eax,[ebp+0x398]
64016317:	push   eax
64016318:	push   0x1
6401631a:	push   0x0
6401631c:	call   0x6401b9b5
64016321:	xor    ebx,ebx
64016323:	push   ebx
64016324:	push   DWORD PTR [esi+0x4]
64016327:	lea    eax,[ebp+0x298]
6401632d:	push   edi
6401632e:	push   eax
6401632f:	push   edi
64016330:	lea    eax,[ebp+0x398]
64016336:	push   eax
64016337:	push   edi
64016338:	push   DWORD PTR [esi+0xc]
6401633b:	push   ebx
6401633c:	call   0x64019dc7
64016341:	add    esp,0x44
64016344:	push   ebx
64016345:	push   DWORD PTR [esi+0x4]
64016348:	lea    eax,[ebp+0x198]
6401634e:	push   edi
6401634f:	push   eax
64016350:	push   edi
64016351:	lea    eax,[ebp+0x398]
64016357:	push   eax
64016358:	push   0x200
6401635d:	push   DWORD PTR [esi+0xc]
64016360:	push   ebx
64016361:	call   0x64019dc7
64016366:	add    esp,0x24
64016369:	xor    eax,eax
6401636b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64016370:	test   cl,0x1
64016373:	je     0x64016383
64016375:	or     BYTE PTR [esi+eax*1+0x1d],0x10
6401637a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64016381:	jmp    0x64016394
64016383:	test   cl,0x2
64016386:	je     0x6401639d
64016388:	or     BYTE PTR [esi+eax*1+0x1d],0x20
6401638d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64016394:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6401639b:	jmp    0x640163a5
6401639d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
640163a5:	inc    eax
640163a6:	cmp    eax,edi
640163a8:	jb     0x6401636b
640163aa:	jmp    0x640163f9
640163ac:	lea    eax,[esi+0x11d]
640163b2:	mov    DWORD PTR [ebp-0x80],0xffffff9f
640163b9:	xor    ecx,ecx
640163bb:	sub    DWORD PTR [ebp-0x80],eax
640163be:	mov    edx,DWORD PTR [ebp-0x80]
640163c1:	lea    eax,[esi+ecx*1+0x11d]
640163c8:	add    edx,eax
640163ca:	lea    ebx,[edx+0x20]
640163cd:	cmp    ebx,0x19
640163d0:	ja     0x640163de
640163d2:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
640163d7:	mov    dl,cl
640163d9:	add    dl,0x20
640163dc:	jmp    0x640163ed
640163de:	cmp    edx,0x19
640163e1:	ja     0x640163f1
640163e3:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
640163e8:	mov    dl,cl
640163ea:	sub    dl,0x20
640163ed:	mov    BYTE PTR [eax],dl
640163ef:	jmp    0x640163f4
640163f1:	mov    BYTE PTR [eax],0x0
640163f4:	inc    ecx
640163f5:	cmp    ecx,edi
640163f7:	jb     0x640163be
640163f9:	mov    ecx,DWORD PTR [ebp+0x498]
640163ff:	pop    edi
64016400:	xor    ecx,ebp
64016402:	pop    ebx
64016403:	call   0x64012abc
64016408:	add    ebp,0x49c
6401640e:	leave  
6401640f:	ret    
64016410:	push   0xc
64016412:	push   0x6402a7f8
64016417:	call   0x64014080
6401641c:	call   0x64014bcb
64016421:	mov    edi,eax
64016423:	mov    eax,ds:0x6402d78c
64016428:	test   DWORD PTR [edi+0x70],eax
6401642b:	je     0x6401644a
6401642d:	cmp    DWORD PTR [edi+0x6c],0x0
64016431:	je     0x6401644a
64016433:	mov    esi,DWORD PTR [edi+0x68]
64016436:	test   esi,esi
64016438:	jne    0x64016442
6401643a:	push   0x20
6401643c:	call   0x64015f06
64016441:	pop    ecx
64016442:	mov    eax,esi
64016444:	call   0x640140c5
64016449:	ret    
6401644a:	push   0xd
6401644c:	call   0x6401a07a
64016451:	pop    ecx
64016452:	and    DWORD PTR [ebp-0x4],0x0
64016456:	mov    esi,DWORD PTR [edi+0x68]
64016459:	mov    DWORD PTR [ebp-0x1c],esi
6401645c:	cmp    esi,DWORD PTR ds:0x6402d690
64016462:	je     0x6401649a
64016464:	test   esi,esi
64016466:	je     0x64016482
64016468:	push   esi
64016469:	call   DWORD PTR ds:0x64025094
6401646f:	test   eax,eax
64016471:	jne    0x64016482
64016473:	cmp    esi,0x6402d268
64016479:	je     0x64016482
6401647b:	push   esi
6401647c:	call   0x64013956
64016481:	pop    ecx
64016482:	mov    eax,ds:0x6402d690
64016487:	mov    DWORD PTR [edi+0x68],eax
6401648a:	mov    esi,DWORD PTR ds:0x6402d690
64016490:	mov    DWORD PTR [ebp-0x1c],esi
64016493:	push   esi
64016494:	call   DWORD PTR ds:0x64025020
6401649a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640164a1:	call   0x640164ab
640164a6:	jmp    0x64016436
640164a8:	mov    esi,DWORD PTR [ebp-0x1c]
640164ab:	push   0xd
640164ad:	call   0x64019fa2
640164b2:	pop    ecx
640164b3:	ret    
640164b4:	push   ebp
640164b5:	mov    ebp,esp
640164b7:	sub    esp,0x10
640164ba:	push   ebx
640164bb:	xor    ebx,ebx
640164bd:	push   ebx
640164be:	lea    ecx,[ebp-0x10]
640164c1:	call   0x64012c5f
640164c6:	cmp    esi,0xfffffffe
640164c9:	mov    DWORD PTR ds:0x6402e918,ebx
640164cf:	jne    0x640164ef
640164d1:	mov    DWORD PTR ds:0x6402e918,0x1
640164db:	call   DWORD PTR ds:0x6402514c
640164e1:	cmp    BYTE PTR [ebp-0x4],bl
640164e4:	je     0x6401652b
640164e6:	mov    ecx,DWORD PTR [ebp-0x8]
640164e9:	and    DWORD PTR [ecx+0x70],0xfffffffd
640164ed:	jmp    0x6401652b
640164ef:	cmp    esi,0xfffffffd
640164f2:	jne    0x64016506
640164f4:	mov    DWORD PTR ds:0x6402e918,0x1
640164fe:	call   DWORD PTR ds:0x640250e8
64016504:	jmp    0x640164e1
64016506:	cmp    esi,0xfffffffc
64016509:	jne    0x6401651d
6401650b:	mov    eax,DWORD PTR [ebp-0x10]
6401650e:	mov    eax,DWORD PTR [eax+0x4]
64016511:	mov    DWORD PTR ds:0x6402e918,0x1
6401651b:	jmp    0x640164e1
6401651d:	cmp    BYTE PTR [ebp-0x4],bl
64016520:	je     0x64016529
64016522:	mov    eax,DWORD PTR [ebp-0x8]
64016525:	and    DWORD PTR [eax+0x70],0xfffffffd
64016529:	mov    eax,esi
6401652b:	pop    ebx
6401652c:	leave  
6401652d:	ret    
6401652e:	push   ebp
6401652f:	mov    ebp,esp
64016531:	sub    esp,0x20
64016534:	mov    eax,ds:0x6402d09c
64016539:	xor    eax,ebp
6401653b:	mov    DWORD PTR [ebp-0x4],eax
6401653e:	push   ebx
6401653f:	mov    ebx,DWORD PTR [ebp+0xc]
64016542:	push   esi
64016543:	mov    esi,DWORD PTR [ebp+0x8]
64016546:	push   edi
64016547:	call   0x640164b4
6401654c:	mov    edi,eax
6401654e:	xor    esi,esi
64016550:	cmp    edi,esi
64016552:	mov    DWORD PTR [ebp+0x8],edi
64016555:	jne    0x64016565
64016557:	mov    eax,ebx
64016559:	call   0x64016231
6401655e:	xor    eax,eax
64016560:	jmp    0x640166f8
64016565:	mov    DWORD PTR [ebp-0x1c],esi
64016568:	xor    eax,eax
6401656a:	cmp    DWORD PTR [eax+0x6402d698],edi
64016570:	je     0x64016607
64016576:	inc    DWORD PTR [ebp-0x1c]
64016579:	add    eax,0x30
6401657c:	cmp    eax,0xf0
64016581:	jb     0x6401656a
64016583:	cmp    edi,0xfde8
64016589:	je     0x640166f5
6401658f:	cmp    edi,0xfde9
64016595:	je     0x640166f5
6401659b:	movzx  eax,di
6401659e:	push   eax
6401659f:	call   DWORD PTR ds:0x64025150
640165a5:	test   eax,eax
640165a7:	je     0x640166f5
640165ad:	lea    eax,[ebp-0x18]
640165b0:	push   eax
640165b1:	push   edi
640165b2:	call   DWORD PTR ds:0x64025148
640165b8:	test   eax,eax
640165ba:	je     0x640166e9
640165c0:	push   0x101
640165c5:	lea    eax,[ebx+0x1c]
640165c8:	push   esi
640165c9:	push   eax
640165ca:	call   0x640131c0
640165cf:	xor    edx,edx
640165d1:	inc    edx
640165d2:	add    esp,0xc
640165d5:	cmp    DWORD PTR [ebp-0x18],edx
640165d8:	mov    DWORD PTR [ebx+0x4],edi
640165db:	mov    DWORD PTR [ebx+0xc],esi
640165de:	jbe    0x640166dc
640165e4:	cmp    BYTE PTR [ebp-0x12],0x0
640165e8:	je     0x640166bd
640165ee:	lea    esi,[ebp-0x11]
640165f1:	mov    cl,BYTE PTR [esi]
640165f3:	test   cl,cl
640165f5:	je     0x640166bd
640165fb:	movzx  eax,BYTE PTR [esi-0x1]
640165ff:	movzx  ecx,cl
64016602:	jmp    0x640166ad
64016607:	push   0x101
6401660c:	lea    eax,[ebx+0x1c]
6401660f:	push   esi
64016610:	push   eax
64016611:	call   0x640131c0
64016616:	mov    ecx,DWORD PTR [ebp-0x1c]
64016619:	add    esp,0xc
6401661c:	imul   ecx,ecx,0x30
6401661f:	mov    DWORD PTR [ebp-0x20],esi
64016622:	lea    esi,[ecx+0x6402d6a8]
64016628:	mov    DWORD PTR [ebp-0x1c],esi
6401662b:	jmp    0x64016657
6401662d:	mov    al,BYTE PTR [esi+0x1]
64016630:	test   al,al
64016632:	je     0x6401665c
64016634:	movzx  edi,BYTE PTR [esi]
64016637:	movzx  eax,al
6401663a:	jmp    0x6401664e
6401663c:	mov    eax,DWORD PTR [ebp-0x20]
6401663f:	mov    al,BYTE PTR [eax+0x6402d694]
64016645:	or     BYTE PTR [ebx+edi*1+0x1d],al
64016649:	movzx  eax,BYTE PTR [esi+0x1]
6401664d:	inc    edi
6401664e:	cmp    edi,eax
64016650:	jbe    0x6401663c
64016652:	mov    edi,DWORD PTR [ebp+0x8]
64016655:	inc    esi
64016656:	inc    esi
64016657:	cmp    BYTE PTR [esi],0x0
6401665a:	jne    0x6401662d
6401665c:	mov    esi,DWORD PTR [ebp-0x1c]
6401665f:	inc    DWORD PTR [ebp-0x20]
64016662:	add    esi,0x8
64016665:	cmp    DWORD PTR [ebp-0x20],0x4
64016669:	mov    DWORD PTR [ebp-0x1c],esi
6401666c:	jb     0x64016657
6401666e:	mov    eax,edi
64016670:	mov    DWORD PTR [ebx+0x4],edi
64016673:	mov    DWORD PTR [ebx+0x8],0x1
6401667a:	call   0x64016202
6401667f:	push   0x6
64016681:	mov    DWORD PTR [ebx+0xc],eax
64016684:	lea    eax,[ebx+0x10]
64016687:	lea    ecx,[ecx+0x6402d69c]
6401668d:	pop    edx
6401668e:	mov    si,WORD PTR [ecx]
64016691:	inc    ecx
64016692:	mov    WORD PTR [eax],si
64016695:	inc    ecx
64016696:	inc    eax
64016697:	inc    eax
64016698:	dec    edx
64016699:	jne    0x6401668e
6401669b:	mov    esi,ebx
6401669d:	call   0x64016286
640166a2:	jmp    0x6401655e
640166a7:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
640166ac:	inc    eax
640166ad:	cmp    eax,ecx
640166af:	jbe    0x640166a7
640166b1:	inc    esi
640166b2:	inc    esi
640166b3:	cmp    BYTE PTR [esi-0x1],0x0
640166b7:	jne    0x640165f1
640166bd:	lea    eax,[ebx+0x1e]
640166c0:	mov    ecx,0xfe
640166c5:	or     BYTE PTR [eax],0x8
640166c8:	inc    eax
640166c9:	dec    ecx
640166ca:	jne    0x640166c5
640166cc:	mov    eax,DWORD PTR [ebx+0x4]
640166cf:	call   0x64016202
640166d4:	mov    DWORD PTR [ebx+0xc],eax
640166d7:	mov    DWORD PTR [ebx+0x8],edx
640166da:	jmp    0x640166df
640166dc:	mov    DWORD PTR [ebx+0x8],esi
640166df:	xor    eax,eax
640166e1:	lea    edi,[ebx+0x10]
640166e4:	stos   DWORD PTR es:[edi],eax
640166e5:	stos   DWORD PTR es:[edi],eax
640166e6:	stos   DWORD PTR es:[edi],eax
640166e7:	jmp    0x6401669b
640166e9:	cmp    DWORD PTR ds:0x6402e918,esi
640166ef:	jne    0x64016557
640166f5:	or     eax,0xffffffff
640166f8:	mov    ecx,DWORD PTR [ebp-0x4]
640166fb:	pop    edi
640166fc:	pop    esi
640166fd:	xor    ecx,ebp
640166ff:	pop    ebx
64016700:	call   0x64012abc
64016705:	leave  
64016706:	ret    
64016707:	push   0x14
64016709:	push   0x6402a818
6401670e:	call   0x64014080
64016713:	or     DWORD PTR [ebp-0x20],0xffffffff
64016717:	call   0x64014bcb
6401671c:	mov    edi,eax
6401671e:	mov    DWORD PTR [ebp-0x24],edi
64016721:	call   0x64016410
64016726:	mov    ebx,DWORD PTR [edi+0x68]
64016729:	mov    esi,DWORD PTR [ebp+0x8]
6401672c:	call   0x640164b4
64016731:	mov    DWORD PTR [ebp+0x8],eax
64016734:	cmp    eax,DWORD PTR [ebx+0x4]
64016737:	je     0x64016894
6401673d:	push   0x220
64016742:	call   0x64015d90
64016747:	pop    ecx
64016748:	mov    ebx,eax
6401674a:	test   ebx,ebx
6401674c:	je     0x64016898
64016752:	mov    ecx,0x88
64016757:	mov    esi,DWORD PTR [edi+0x68]
6401675a:	mov    edi,ebx
6401675c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401675e:	and    DWORD PTR [ebx],0x0
64016761:	push   ebx
64016762:	push   DWORD PTR [ebp+0x8]
64016765:	call   0x6401652e
6401676a:	pop    ecx
6401676b:	pop    ecx
6401676c:	mov    DWORD PTR [ebp-0x20],eax
6401676f:	test   eax,eax
64016771:	jne    0x64016873
64016777:	mov    esi,DWORD PTR [ebp-0x24]
6401677a:	push   DWORD PTR [esi+0x68]
6401677d:	call   DWORD PTR ds:0x64025094
64016783:	test   eax,eax
64016785:	jne    0x64016798
64016787:	mov    eax,DWORD PTR [esi+0x68]
6401678a:	cmp    eax,0x6402d268
6401678f:	je     0x64016798
64016791:	push   eax
64016792:	call   0x64013956
64016797:	pop    ecx
64016798:	mov    DWORD PTR [esi+0x68],ebx
6401679b:	push   ebx
6401679c:	mov    edi,DWORD PTR ds:0x64025020
640167a2:	call   edi
640167a4:	test   BYTE PTR [esi+0x70],0x2
640167a8:	jne    0x64016898
640167ae:	test   BYTE PTR ds:0x6402d78c,0x1
640167b5:	jne    0x64016898
640167bb:	push   0xd
640167bd:	call   0x6401a07a
640167c2:	pop    ecx
640167c3:	and    DWORD PTR [ebp-0x4],0x0
640167c7:	mov    eax,DWORD PTR [ebx+0x4]
640167ca:	mov    ds:0x6402e928,eax
640167cf:	mov    eax,DWORD PTR [ebx+0x8]
640167d2:	mov    ds:0x6402e92c,eax
640167d7:	mov    eax,DWORD PTR [ebx+0xc]
640167da:	mov    ds:0x6402e930,eax
640167df:	xor    eax,eax
640167e1:	mov    DWORD PTR [ebp-0x1c],eax
640167e4:	cmp    eax,0x5
640167e7:	jge    0x640167f9
640167e9:	mov    cx,WORD PTR [ebx+eax*2+0x10]
640167ee:	mov    WORD PTR [eax*2+0x6402e91c],cx
640167f6:	inc    eax
640167f7:	jmp    0x640167e1
640167f9:	xor    eax,eax
640167fb:	mov    DWORD PTR [ebp-0x1c],eax
640167fe:	cmp    eax,0x101
64016803:	jge    0x64016812
64016805:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
64016809:	mov    BYTE PTR [eax+0x6402d488],cl
6401680f:	inc    eax
64016810:	jmp    0x640167fb
64016812:	xor    eax,eax
64016814:	mov    DWORD PTR [ebp-0x1c],eax
64016817:	cmp    eax,0x100
6401681c:	jge    0x6401682e
6401681e:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
64016825:	mov    BYTE PTR [eax+0x6402d590],cl
6401682b:	inc    eax
6401682c:	jmp    0x64016814
6401682e:	push   DWORD PTR ds:0x6402d690
64016834:	call   DWORD PTR ds:0x64025094
6401683a:	test   eax,eax
6401683c:	jne    0x64016851
6401683e:	mov    eax,ds:0x6402d690
64016843:	cmp    eax,0x6402d268
64016848:	je     0x64016851
6401684a:	push   eax
6401684b:	call   0x64013956
64016850:	pop    ecx
64016851:	mov    DWORD PTR ds:0x6402d690,ebx
64016857:	push   ebx
64016858:	call   edi
6401685a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016861:	call   0x64016868
64016866:	jmp    0x64016898
64016868:	push   0xd
6401686a:	call   0x64019fa2
6401686f:	pop    ecx
64016870:	ret    
64016871:	jmp    0x64016898
64016873:	cmp    eax,0xffffffff
64016876:	jne    0x64016898
64016878:	cmp    ebx,0x6402d268
6401687e:	je     0x64016887
64016880:	push   ebx
64016881:	call   0x64013956
64016886:	pop    ecx
64016887:	call   0x64014880
6401688c:	mov    DWORD PTR [eax],0x16
64016892:	jmp    0x64016898
64016894:	and    DWORD PTR [ebp-0x20],0x0
64016898:	mov    eax,DWORD PTR [ebp-0x20]
6401689b:	call   0x640140c5
640168a0:	ret    
640168a1:	cmp    DWORD PTR ds:0x64032614,0x0
640168a8:	jne    0x640168bc
640168aa:	push   0xfffffffd
640168ac:	call   0x64016707
640168b1:	pop    ecx
640168b2:	mov    DWORD PTR ds:0x64032614,0x1
640168bc:	xor    eax,eax
640168be:	ret    
640168bf:	push   ebx
640168c0:	push   ebp
640168c1:	push   esi
640168c2:	mov    esi,DWORD PTR [esp+0x10]
640168c6:	mov    eax,DWORD PTR [esi+0xbc]
640168cc:	xor    ebp,ebp
640168ce:	cmp    eax,ebp
640168d0:	push   edi
640168d1:	je     0x64016942
640168d3:	cmp    eax,0x6402dc40
640168d8:	je     0x64016942
640168da:	mov    eax,DWORD PTR [esi+0xb0]
640168e0:	cmp    eax,ebp
640168e2:	je     0x64016942
640168e4:	cmp    DWORD PTR [eax],ebp
640168e6:	jne    0x64016942
640168e8:	mov    eax,DWORD PTR [esi+0xb8]
640168ee:	cmp    eax,ebp
640168f0:	je     0x64016909
640168f2:	cmp    DWORD PTR [eax],ebp
640168f4:	jne    0x64016909
640168f6:	push   eax
640168f7:	call   0x64013956
640168fc:	push   DWORD PTR [esi+0xbc]
64016902:	call   0x6401bbc5
64016907:	pop    ecx
64016908:	pop    ecx
64016909:	mov    eax,DWORD PTR [esi+0xb4]
6401690f:	cmp    eax,ebp
64016911:	je     0x6401692a
64016913:	cmp    DWORD PTR [eax],ebp
64016915:	jne    0x6401692a
64016917:	push   eax
64016918:	call   0x64013956
6401691d:	push   DWORD PTR [esi+0xbc]
64016923:	call   0x6401bb85
64016928:	pop    ecx
64016929:	pop    ecx
6401692a:	push   DWORD PTR [esi+0xb0]
64016930:	call   0x64013956
64016935:	push   DWORD PTR [esi+0xbc]
6401693b:	call   0x64013956
64016940:	pop    ecx
64016941:	pop    ecx
64016942:	mov    eax,DWORD PTR [esi+0xc0]
64016948:	cmp    eax,ebp
6401694a:	je     0x64016990
6401694c:	cmp    DWORD PTR [eax],ebp
6401694e:	jne    0x64016990
64016950:	mov    eax,DWORD PTR [esi+0xc4]
64016956:	sub    eax,0xfe
6401695b:	push   eax
6401695c:	call   0x64013956
64016961:	mov    eax,DWORD PTR [esi+0xcc]
64016967:	mov    edi,0x80
6401696c:	sub    eax,edi
6401696e:	push   eax
6401696f:	call   0x64013956
64016974:	mov    eax,DWORD PTR [esi+0xd0]
6401697a:	sub    eax,edi
6401697c:	push   eax
6401697d:	call   0x64013956
64016982:	push   DWORD PTR [esi+0xc0]
64016988:	call   0x64013956
6401698d:	add    esp,0x10
64016990:	lea    edi,[esi+0xd4]
64016996:	mov    eax,DWORD PTR [edi]
64016998:	cmp    eax,0x6402db80
6401699d:	je     0x640169b6
6401699f:	cmp    DWORD PTR [eax+0xb4],ebp
640169a5:	jne    0x640169b6
640169a7:	push   eax
640169a8:	call   0x6401b9f5
640169ad:	push   DWORD PTR [edi]
640169af:	call   0x64013956
640169b4:	pop    ecx
640169b5:	pop    ecx
640169b6:	push   0x6
640169b8:	lea    edi,[esi+0x50]
640169bb:	pop    ebx
640169bc:	cmp    DWORD PTR [edi-0x8],0x6402d790
640169c3:	je     0x640169d6
640169c5:	mov    eax,DWORD PTR [edi]
640169c7:	cmp    eax,ebp
640169c9:	je     0x640169d6
640169cb:	cmp    DWORD PTR [eax],ebp
640169cd:	jne    0x640169d6
640169cf:	push   eax
640169d0:	call   0x64013956
640169d5:	pop    ecx
640169d6:	cmp    DWORD PTR [edi-0x4],ebp
640169d9:	je     0x640169ed
640169db:	mov    eax,DWORD PTR [edi+0x4]
640169de:	cmp    eax,ebp
640169e0:	je     0x640169ed
640169e2:	cmp    DWORD PTR [eax],ebp
640169e4:	jne    0x640169ed
640169e6:	push   eax
640169e7:	call   0x64013956
640169ec:	pop    ecx
640169ed:	add    edi,0x10
640169f0:	dec    ebx
640169f1:	jne    0x640169bc
640169f3:	push   esi
640169f4:	call   0x64013956
640169f9:	pop    ecx
640169fa:	pop    edi
640169fb:	pop    esi
640169fc:	pop    ebp
640169fd:	pop    ebx
640169fe:	ret    
640169ff:	push   ebx
64016a00:	push   ebp
64016a01:	push   esi
64016a02:	mov    esi,DWORD PTR [esp+0x10]
64016a06:	push   edi
64016a07:	mov    edi,DWORD PTR ds:0x64025020
64016a0d:	push   esi
64016a0e:	call   edi
64016a10:	mov    eax,DWORD PTR [esi+0xb0]
64016a16:	test   eax,eax
64016a18:	je     0x64016a1d
64016a1a:	push   eax
64016a1b:	call   edi
64016a1d:	mov    eax,DWORD PTR [esi+0xb8]
64016a23:	test   eax,eax
64016a25:	je     0x64016a2a
64016a27:	push   eax
64016a28:	call   edi
64016a2a:	mov    eax,DWORD PTR [esi+0xb4]
64016a30:	test   eax,eax
64016a32:	je     0x64016a37
64016a34:	push   eax
64016a35:	call   edi
64016a37:	mov    eax,DWORD PTR [esi+0xc0]
64016a3d:	test   eax,eax
64016a3f:	je     0x64016a44
64016a41:	push   eax
64016a42:	call   edi
64016a44:	push   0x6
64016a46:	lea    ebx,[esi+0x50]
64016a49:	pop    ebp
64016a4a:	cmp    DWORD PTR [ebx-0x8],0x6402d790
64016a51:	je     0x64016a5c
64016a53:	mov    eax,DWORD PTR [ebx]
64016a55:	test   eax,eax
64016a57:	je     0x64016a5c
64016a59:	push   eax
64016a5a:	call   edi
64016a5c:	cmp    DWORD PTR [ebx-0x4],0x0
64016a60:	je     0x64016a6c
64016a62:	mov    eax,DWORD PTR [ebx+0x4]
64016a65:	test   eax,eax
64016a67:	je     0x64016a6c
64016a69:	push   eax
64016a6a:	call   edi
64016a6c:	add    ebx,0x10
64016a6f:	dec    ebp
64016a70:	jne    0x64016a4a
64016a72:	mov    eax,DWORD PTR [esi+0xd4]
64016a78:	add    eax,0xb4
64016a7d:	push   eax
64016a7e:	call   edi
64016a80:	pop    edi
64016a81:	pop    esi
64016a82:	pop    ebp
64016a83:	pop    ebx
64016a84:	ret    
64016a85:	push   esi
64016a86:	mov    esi,DWORD PTR [esp+0x8]
64016a8a:	test   esi,esi
64016a8c:	je     0x64016b0d
64016a8e:	push   ebx
64016a8f:	push   ebp
64016a90:	push   edi
64016a91:	mov    edi,DWORD PTR ds:0x64025094
64016a97:	push   esi
64016a98:	call   edi
64016a9a:	mov    eax,DWORD PTR [esi+0xb0]
64016aa0:	test   eax,eax
64016aa2:	je     0x64016aa7
64016aa4:	push   eax
64016aa5:	call   edi
64016aa7:	mov    eax,DWORD PTR [esi+0xb8]
64016aad:	test   eax,eax
64016aaf:	je     0x64016ab4
64016ab1:	push   eax
64016ab2:	call   edi
64016ab4:	mov    eax,DWORD PTR [esi+0xb4]
64016aba:	test   eax,eax
64016abc:	je     0x64016ac1
64016abe:	push   eax
64016abf:	call   edi
64016ac1:	mov    eax,DWORD PTR [esi+0xc0]
64016ac7:	test   eax,eax
64016ac9:	je     0x64016ace
64016acb:	push   eax
64016acc:	call   edi
64016ace:	push   0x6
64016ad0:	lea    ebx,[esi+0x50]
64016ad3:	pop    ebp
64016ad4:	cmp    DWORD PTR [ebx-0x8],0x6402d790
64016adb:	je     0x64016ae6
64016add:	mov    eax,DWORD PTR [ebx]
64016adf:	test   eax,eax
64016ae1:	je     0x64016ae6
64016ae3:	push   eax
64016ae4:	call   edi
64016ae6:	cmp    DWORD PTR [ebx-0x4],0x0
64016aea:	je     0x64016af6
64016aec:	mov    eax,DWORD PTR [ebx+0x4]
64016aef:	test   eax,eax
64016af1:	je     0x64016af6
64016af3:	push   eax
64016af4:	call   edi
64016af6:	add    ebx,0x10
64016af9:	dec    ebp
64016afa:	jne    0x64016ad4
64016afc:	mov    eax,DWORD PTR [esi+0xd4]
64016b02:	add    eax,0xb4
64016b07:	push   eax
64016b08:	call   edi
64016b0a:	pop    edi
64016b0b:	pop    ebp
64016b0c:	pop    ebx
64016b0d:	mov    eax,esi
64016b0f:	pop    esi
64016b10:	ret    
64016b11:	test   edi,edi
64016b13:	je     0x64016b4c
64016b15:	test   eax,eax
64016b17:	je     0x64016b4c
64016b19:	push   esi
64016b1a:	mov    esi,DWORD PTR [eax]
64016b1c:	cmp    esi,edi
64016b1e:	je     0x64016b48
64016b20:	push   edi
64016b21:	mov    DWORD PTR [eax],edi
64016b23:	call   0x640169ff
64016b28:	test   esi,esi
64016b2a:	pop    ecx
64016b2b:	je     0x64016b48
64016b2d:	push   esi
64016b2e:	call   0x64016a85
64016b33:	cmp    DWORD PTR [esi],0x0
64016b36:	pop    ecx
64016b37:	jne    0x64016b48
64016b39:	cmp    esi,0x6402d798
64016b3f:	je     0x64016b48
64016b41:	push   esi
64016b42:	call   0x640168bf
64016b47:	pop    ecx
64016b48:	mov    eax,edi
64016b4a:	pop    esi
64016b4b:	ret    
64016b4c:	xor    eax,eax
64016b4e:	ret    
64016b4f:	push   0xc
64016b51:	push   0x6402a838
64016b56:	call   0x64014080
64016b5b:	call   0x64014bcb
64016b60:	mov    esi,eax
64016b62:	mov    eax,ds:0x6402d78c
64016b67:	test   DWORD PTR [esi+0x70],eax
64016b6a:	je     0x64016b8e
64016b6c:	cmp    DWORD PTR [esi+0x6c],0x0
64016b70:	je     0x64016b8e
64016b72:	call   0x64014bcb
64016b77:	mov    esi,DWORD PTR [eax+0x6c]
64016b7a:	test   esi,esi
64016b7c:	jne    0x64016b86
64016b7e:	push   0x20
64016b80:	call   0x64015f06
64016b85:	pop    ecx
64016b86:	mov    eax,esi
64016b88:	call   0x640140c5
64016b8d:	ret    
64016b8e:	push   0xc
64016b90:	call   0x6401a07a
64016b95:	pop    ecx
64016b96:	and    DWORD PTR [ebp-0x4],0x0
64016b9a:	lea    eax,[esi+0x6c]
64016b9d:	mov    edi,DWORD PTR ds:0x6402d870
64016ba3:	call   0x64016b11
64016ba8:	mov    DWORD PTR [ebp-0x1c],eax
64016bab:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016bb2:	call   0x64016bb9
64016bb7:	jmp    0x64016b7a
64016bb9:	push   0xc
64016bbb:	call   0x64019fa2
64016bc0:	pop    ecx
64016bc1:	mov    esi,DWORD PTR [ebp-0x1c]
64016bc4:	ret    
64016bc5:	push   ebp
64016bc6:	mov    ebp,esp
64016bc8:	push   ecx
64016bc9:	push   esi
64016bca:	mov    esi,DWORD PTR [ebp+0xc]
64016bcd:	push   esi
64016bce:	call   0x6401c8dd
64016bd3:	mov    DWORD PTR [ebp+0xc],eax
64016bd6:	mov    eax,DWORD PTR [esi+0xc]
64016bd9:	test   al,0x82
64016bdb:	pop    ecx
64016bdc:	jne    0x64016bf5
64016bde:	call   0x64014880
64016be3:	mov    DWORD PTR [eax],0x9
64016be9:	or     DWORD PTR [esi+0xc],0x20
64016bed:	or     eax,0xffffffff
64016bf0:	jmp    0x64016d22
64016bf5:	test   al,0x40
64016bf7:	je     0x64016c06
64016bf9:	call   0x64014880
64016bfe:	mov    DWORD PTR [eax],0x22
64016c04:	jmp    0x64016be9
64016c06:	push   ebx
64016c07:	xor    ebx,ebx
64016c09:	test   al,0x1
64016c0b:	je     0x64016c23
64016c0d:	test   al,0x10
64016c0f:	mov    DWORD PTR [esi+0x4],ebx
64016c12:	je     0x64016c9d
64016c18:	mov    ecx,DWORD PTR [esi+0x8]
64016c1b:	and    eax,0xfffffffe
64016c1e:	mov    DWORD PTR [esi],ecx
64016c20:	mov    DWORD PTR [esi+0xc],eax
64016c23:	mov    eax,DWORD PTR [esi+0xc]
64016c26:	and    eax,0xffffffef
64016c29:	or     eax,0x2
64016c2c:	test   ax,0x10c
64016c30:	mov    DWORD PTR [esi+0xc],eax
64016c33:	mov    DWORD PTR [esi+0x4],ebx
64016c36:	mov    DWORD PTR [ebp-0x4],ebx
64016c39:	jne    0x64016c67
64016c3b:	call   0x6401c73c
64016c40:	add    eax,0x20
64016c43:	cmp    esi,eax
64016c45:	je     0x64016c53
64016c47:	call   0x6401c73c
64016c4c:	add    eax,0x40
64016c4f:	cmp    esi,eax
64016c51:	jne    0x64016c60
64016c53:	push   DWORD PTR [ebp+0xc]
64016c56:	call   0x6401c6de
64016c5b:	test   eax,eax
64016c5d:	pop    ecx
64016c5e:	jne    0x64016c67
64016c60:	push   esi
64016c61:	call   0x6401c69a
64016c66:	pop    ecx
64016c67:	test   WORD PTR [esi+0xc],0x108
64016c6d:	push   edi
64016c6e:	je     0x64016cf4
64016c74:	mov    eax,DWORD PTR [esi+0x8]
64016c77:	mov    edi,DWORD PTR [esi]
64016c79:	lea    ecx,[eax+0x1]
64016c7c:	mov    DWORD PTR [esi],ecx
64016c7e:	mov    ecx,DWORD PTR [esi+0x18]
64016c81:	sub    edi,eax
64016c83:	dec    ecx
64016c84:	cmp    edi,ebx
64016c86:	mov    DWORD PTR [esi+0x4],ecx
64016c89:	jle    0x64016ca8
64016c8b:	push   edi
64016c8c:	push   eax
64016c8d:	push   DWORD PTR [ebp+0xc]
64016c90:	call   0x6401c5be
64016c95:	add    esp,0xc
64016c98:	mov    DWORD PTR [ebp-0x4],eax
64016c9b:	jmp    0x64016cea
64016c9d:	or     eax,0x20
64016ca0:	mov    DWORD PTR [esi+0xc],eax
64016ca3:	or     eax,0xffffffff
64016ca6:	jmp    0x64016d21
64016ca8:	mov    ecx,DWORD PTR [ebp+0xc]
64016cab:	cmp    ecx,0xffffffff
64016cae:	je     0x64016ccb
64016cb0:	cmp    ecx,0xfffffffe
64016cb3:	je     0x64016ccb
64016cb5:	mov    eax,ecx
64016cb7:	and    eax,0x1f
64016cba:	mov    edx,ecx
64016cbc:	sar    edx,0x5
64016cbf:	shl    eax,0x6
64016cc2:	add    eax,DWORD PTR [edx*4+0x64032500]
64016cc9:	jmp    0x64016cd0
64016ccb:	mov    eax,0x6402d880
64016cd0:	test   BYTE PTR [eax+0x4],0x20
64016cd4:	je     0x64016cea
64016cd6:	push   0x2
64016cd8:	push   ebx
64016cd9:	push   ebx
64016cda:	push   ecx
64016cdb:	call   0x6401be83
64016ce0:	and    eax,edx
64016ce2:	add    esp,0x10
64016ce5:	cmp    eax,0xffffffff
64016ce8:	je     0x64016d0f
64016cea:	mov    eax,DWORD PTR [esi+0x8]
64016ced:	mov    cl,BYTE PTR [ebp+0x8]
64016cf0:	mov    BYTE PTR [eax],cl
64016cf2:	jmp    0x64016d0a
64016cf4:	xor    edi,edi
64016cf6:	inc    edi
64016cf7:	push   edi
64016cf8:	lea    eax,[ebp+0x8]
64016cfb:	push   eax
64016cfc:	push   DWORD PTR [ebp+0xc]
64016cff:	call   0x6401c5be
64016d04:	add    esp,0xc
64016d07:	mov    DWORD PTR [ebp-0x4],eax
64016d0a:	cmp    DWORD PTR [ebp-0x4],edi
64016d0d:	je     0x64016d18
64016d0f:	or     DWORD PTR [esi+0xc],0x20
64016d13:	or     eax,0xffffffff
64016d16:	jmp    0x64016d20
64016d18:	mov    eax,DWORD PTR [ebp+0x8]
64016d1b:	and    eax,0xff
64016d20:	pop    edi
64016d21:	pop    ebx
64016d22:	pop    esi
64016d23:	leave  
64016d24:	ret    
64016d25:	push   ebp
64016d26:	lea    ebp,[esp-0x3f4]
64016d2d:	sub    esp,0x474
64016d33:	mov    eax,ds:0x6402d09c
64016d38:	xor    eax,ebp
64016d3a:	mov    DWORD PTR [ebp+0x3f0],eax
64016d40:	mov    eax,DWORD PTR [ebp+0x3fc]
64016d46:	push   ebx
64016d47:	mov    ebx,DWORD PTR [ebp+0x408]
64016d4d:	push   esi
64016d4e:	mov    esi,DWORD PTR [ebp+0x400]
64016d54:	push   edi
64016d55:	push   DWORD PTR [ebp+0x404]
64016d5b:	xor    edi,edi
64016d5d:	lea    ecx,[ebp-0x64]
64016d60:	mov    DWORD PTR [ebp-0x3c],eax
64016d63:	mov    DWORD PTR [ebp-0x28],ebx
64016d66:	mov    DWORD PTR [ebp-0x54],edi
64016d69:	mov    DWORD PTR [ebp-0x14],edi
64016d6c:	mov    DWORD PTR [ebp-0x38],edi
64016d6f:	mov    DWORD PTR [ebp-0x18],edi
64016d72:	mov    DWORD PTR [ebp-0x30],edi
64016d75:	mov    DWORD PTR [ebp-0x48],edi
64016d78:	mov    DWORD PTR [ebp-0x34],edi
64016d7b:	call   0x64012c5f
64016d80:	cmp    DWORD PTR [ebp-0x3c],edi
64016d83:	jne    0x64016db2
64016d85:	call   0x64014880
64016d8a:	push   edi
64016d8b:	push   edi
64016d8c:	push   edi
64016d8d:	push   edi
64016d8e:	mov    DWORD PTR [eax],0x16
64016d94:	push   edi
64016d95:	call   0x640125f4
64016d9a:	add    esp,0x14
64016d9d:	cmp    BYTE PTR [ebp-0x58],0x0
64016da1:	je     0x64016daa
64016da3:	mov    eax,DWORD PTR [ebp-0x5c]
64016da6:	and    DWORD PTR [eax+0x70],0xfffffffd
64016daa:	or     eax,0xffffffff
64016dad:	jmp    0x640175fd
64016db2:	cmp    esi,edi
64016db4:	je     0x64016d85
64016db6:	movzx  edx,WORD PTR [esi]
64016db9:	xor    ecx,ecx
64016dbb:	cmp    dx,di
64016dbe:	mov    DWORD PTR [ebp-0x2c],edi
64016dc1:	mov    DWORD PTR [ebp-0x20],edi
64016dc4:	mov    DWORD PTR [ebp-0x50],edi
64016dc7:	mov    DWORD PTR [ebp-0x24],edx
64016dca:	je     0x640175ed
64016dd0:	push   0x2
64016dd2:	pop    edi
64016dd3:	add    esi,edi
64016dd5:	cmp    DWORD PTR [ebp-0x2c],0x0
64016dd9:	mov    DWORD PTR [ebp-0x4c],esi
64016ddc:	jl     0x640175ed
64016de2:	lea    eax,[edx-0x20]
64016de5:	cmp    ax,0x58
64016de9:	ja     0x64016dfa
64016deb:	movzx  eax,dx
64016dee:	movzx  eax,BYTE PTR [eax+0x64025e18]
64016df5:	and    eax,0xf
64016df8:	jmp    0x64016dfc
64016dfa:	xor    eax,eax
64016dfc:	movsx  eax,BYTE PTR [ecx+eax*8+0x64025e38]
64016e04:	push   0x7
64016e06:	sar    eax,0x4
64016e09:	pop    ecx
64016e0a:	cmp    eax,ecx
64016e0c:	mov    DWORD PTR [ebp-0x68],eax
64016e0f:	ja     0x640175bb
64016e15:	jmp    DWORD PTR [eax*4+0x64017615]
64016e1c:	xor    eax,eax
64016e1e:	or     DWORD PTR [ebp-0x18],0xffffffff
64016e22:	mov    DWORD PTR [ebp-0x6c],eax
64016e25:	mov    DWORD PTR [ebp-0x48],eax
64016e28:	mov    DWORD PTR [ebp-0x38],eax
64016e2b:	mov    DWORD PTR [ebp-0x30],eax
64016e2e:	mov    DWORD PTR [ebp-0x14],eax
64016e31:	mov    DWORD PTR [ebp-0x34],eax
64016e34:	jmp    0x640175bb
64016e39:	movzx  eax,dx
64016e3c:	sub    eax,0x20
64016e3f:	je     0x64016e7f
64016e41:	sub    eax,0x3
64016e44:	je     0x64016e73
64016e46:	sub    eax,0x8
64016e49:	je     0x64016e6a
64016e4b:	sub    eax,edi
64016e4d:	je     0x64016e61
64016e4f:	sub    eax,0x3
64016e52:	jne    0x640175bb
64016e58:	or     DWORD PTR [ebp-0x14],0x8
64016e5c:	jmp    0x640175bb
64016e61:	or     DWORD PTR [ebp-0x14],0x4
64016e65:	jmp    0x640175bb
64016e6a:	or     DWORD PTR [ebp-0x14],0x1
64016e6e:	jmp    0x640175bb
64016e73:	or     DWORD PTR [ebp-0x14],0x80
64016e7a:	jmp    0x640175bb
64016e7f:	or     DWORD PTR [ebp-0x14],edi
64016e82:	jmp    0x640175bb
64016e87:	cmp    dx,0x2a
64016e8b:	jne    0x64016ead
64016e8d:	add    ebx,0x4
64016e90:	mov    DWORD PTR [ebp-0x28],ebx
64016e93:	mov    ebx,DWORD PTR [ebx-0x4]
64016e96:	test   ebx,ebx
64016e98:	mov    DWORD PTR [ebp-0x38],ebx
64016e9b:	jge    0x640175bb
64016ea1:	or     DWORD PTR [ebp-0x14],0x4
64016ea5:	neg    DWORD PTR [ebp-0x38]
64016ea8:	jmp    0x640175bb
64016ead:	mov    eax,DWORD PTR [ebp-0x38]
64016eb0:	imul   eax,eax,0xa
64016eb3:	movzx  ecx,dx
64016eb6:	lea    eax,[eax+ecx*1-0x30]
64016eba:	mov    DWORD PTR [ebp-0x38],eax
64016ebd:	jmp    0x640175bb
64016ec2:	and    DWORD PTR [ebp-0x18],0x0
64016ec6:	jmp    0x640175bb
64016ecb:	cmp    dx,0x2a
64016ecf:	jne    0x64016eee
64016ed1:	add    ebx,0x4
64016ed4:	mov    DWORD PTR [ebp-0x28],ebx
64016ed7:	mov    ebx,DWORD PTR [ebx-0x4]
64016eda:	test   ebx,ebx
64016edc:	mov    DWORD PTR [ebp-0x18],ebx
64016edf:	jge    0x640175bb
64016ee5:	or     DWORD PTR [ebp-0x18],0xffffffff
64016ee9:	jmp    0x640175bb
64016eee:	mov    eax,DWORD PTR [ebp-0x18]
64016ef1:	imul   eax,eax,0xa
64016ef4:	movzx  ecx,dx
64016ef7:	lea    eax,[eax+ecx*1-0x30]
64016efb:	mov    DWORD PTR [ebp-0x18],eax
64016efe:	jmp    0x640175bb
64016f03:	movzx  eax,dx
64016f06:	cmp    eax,0x49
64016f09:	je     0x64016f53
64016f0b:	cmp    eax,0x68
64016f0e:	je     0x64016f4a
64016f10:	cmp    eax,0x6c
64016f13:	je     0x64016f2a
64016f15:	cmp    eax,0x77
64016f18:	jne    0x640175bb
64016f1e:	or     DWORD PTR [ebp-0x14],0x800
64016f25:	jmp    0x640175bb
64016f2a:	cmp    WORD PTR [esi],0x6c
64016f2e:	jne    0x64016f41
64016f30:	add    esi,edi
64016f32:	or     DWORD PTR [ebp-0x14],0x1000
64016f39:	mov    DWORD PTR [ebp-0x4c],esi
64016f3c:	jmp    0x640175bb
64016f41:	or     DWORD PTR [ebp-0x14],0x10
64016f45:	jmp    0x640175bb
64016f4a:	or     DWORD PTR [ebp-0x14],0x20
64016f4e:	jmp    0x640175bb
64016f53:	movzx  eax,WORD PTR [esi]
64016f56:	cmp    ax,0x36
64016f5a:	jne    0x64016f75
64016f5c:	cmp    WORD PTR [esi+0x2],0x34
64016f61:	jne    0x64016f75
64016f63:	add    esi,0x4
64016f66:	or     DWORD PTR [ebp-0x14],0x8000
64016f6d:	mov    DWORD PTR [ebp-0x4c],esi
64016f70:	jmp    0x640175bb
64016f75:	cmp    ax,0x33
64016f79:	jne    0x64016f94
64016f7b:	cmp    WORD PTR [esi+0x2],0x32
64016f80:	jne    0x64016f94
64016f82:	add    esi,0x4
64016f85:	and    DWORD PTR [ebp-0x14],0xffff7fff
64016f8c:	mov    DWORD PTR [ebp-0x4c],esi
64016f8f:	jmp    0x640175bb
64016f94:	cmp    ax,0x64
64016f98:	je     0x640175bb
64016f9e:	cmp    ax,0x69
64016fa2:	je     0x640175bb
64016fa8:	cmp    ax,0x6f
64016fac:	je     0x640175bb
64016fb2:	cmp    ax,0x75
64016fb6:	je     0x640175bb
64016fbc:	cmp    ax,0x78
64016fc0:	je     0x640175bb
64016fc6:	cmp    ax,0x58
64016fca:	je     0x640175bb
64016fd0:	and    DWORD PTR [ebp-0x68],0x0
64016fd4:	mov    eax,DWORD PTR [ebp-0x3c]
64016fd7:	push   edx
64016fd8:	lea    esi,[ebp-0x2c]
64016fdb:	mov    DWORD PTR [ebp-0x34],0x1
64016fe2:	call   0x64017635
64016fe7:	jmp    0x640175ba
64016fec:	movzx  eax,dx
64016fef:	cmp    eax,0x64
64016ff2:	jg     0x6401719f
64016ff8:	je     0x6401721e
64016ffe:	cmp    eax,0x53
64017001:	jg     0x640170de
64017007:	je     0x64017068
64017009:	sub    eax,0x41
6401700c:	je     0x6401701e
6401700e:	sub    eax,edi
64017010:	je     0x64017053
64017012:	sub    eax,edi
64017014:	je     0x6401701e
64017016:	sub    eax,edi
64017018:	jne    0x6401749f
6401701e:	add    edx,0x20
64017021:	mov    DWORD PTR [ebp-0x6c],0x1
64017028:	mov    DWORD PTR [ebp-0x24],edx
6401702b:	or     DWORD PTR [ebp-0x14],0x40
6401702f:	cmp    DWORD PTR [ebp-0x18],0x0
64017033:	lea    esi,[ebp-0x10]
64017036:	mov    eax,0x200
6401703b:	mov    DWORD PTR [ebp-0x1c],esi
6401703e:	mov    DWORD PTR [ebp-0x20],eax
64017041:	jge    0x64017242
64017047:	mov    DWORD PTR [ebp-0x18],0x6
6401704e:	jmp    0x6401728f
64017053:	test   WORD PTR [ebp-0x14],0x830
64017059:	jne    0x640170fb
6401705f:	or     DWORD PTR [ebp-0x14],0x20
64017063:	jmp    0x640170fb
64017068:	test   WORD PTR [ebp-0x14],0x830
6401706e:	jne    0x64017074
64017070:	or     DWORD PTR [ebp-0x14],0x20
64017074:	mov    edi,DWORD PTR [ebp-0x18]
64017077:	cmp    edi,0xffffffff
6401707a:	jne    0x64017081
6401707c:	mov    edi,0x7fffffff
64017081:	add    ebx,0x4
64017084:	test   BYTE PTR [ebp-0x14],0x20
64017088:	mov    DWORD PTR [ebp-0x28],ebx
6401708b:	mov    ebx,DWORD PTR [ebx-0x4]
6401708e:	mov    DWORD PTR [ebp-0x1c],ebx
64017091:	je     0x64017472
64017097:	test   ebx,ebx
64017099:	jne    0x640170a3
6401709b:	mov    eax,ds:0x6402d950
640170a0:	mov    DWORD PTR [ebp-0x1c],eax
640170a3:	and    DWORD PTR [ebp-0x20],0x0
640170a7:	test   edi,edi
640170a9:	mov    esi,DWORD PTR [ebp-0x1c]
640170ac:	jle    0x6401749f
640170b2:	mov    al,BYTE PTR [esi]
640170b4:	test   al,al
640170b6:	je     0x6401749f
640170bc:	lea    ecx,[ebp-0x64]
640170bf:	movzx  eax,al
640170c2:	push   ecx
640170c3:	push   eax
640170c4:	call   0x64019e0a
640170c9:	test   eax,eax
640170cb:	pop    ecx
640170cc:	pop    ecx
640170cd:	je     0x640170d0
640170cf:	inc    esi
640170d0:	inc    esi
640170d1:	inc    DWORD PTR [ebp-0x20]
640170d4:	cmp    DWORD PTR [ebp-0x20],edi
640170d7:	jl     0x640170b2
640170d9:	jmp    0x6401749f
640170de:	sub    eax,0x58
640170e1:	je     0x6401732a
640170e7:	sub    eax,edi
640170e9:	je     0x64017152
640170eb:	sub    eax,ecx
640170ed:	je     0x6401702b
640170f3:	sub    eax,edi
640170f5:	jne    0x6401749f
640170fb:	movzx  eax,WORD PTR [ebx]
640170fe:	add    ebx,0x4
64017101:	xor    esi,esi
64017103:	inc    esi
64017104:	test   BYTE PTR [ebp-0x14],0x20
64017108:	mov    DWORD PTR [ebp-0x34],esi
6401710b:	mov    DWORD PTR [ebp-0x28],ebx
6401710e:	mov    DWORD PTR [ebp-0x70],eax
64017111:	je     0x64017140
64017113:	mov    BYTE PTR [ebp-0x40],al
64017116:	lea    eax,[ebp-0x64]
64017119:	push   eax
6401711a:	mov    eax,DWORD PTR [ebp-0x64]
6401711d:	mov    BYTE PTR [ebp-0x3f],0x0
64017121:	push   DWORD PTR [eax+0xac]
64017127:	lea    eax,[ebp-0x40]
6401712a:	push   eax
6401712b:	lea    eax,[ebp-0x10]
6401712e:	push   eax
6401712f:	call   0x6401cafe
64017134:	add    esp,0x10
64017137:	test   eax,eax
64017139:	jge    0x64017144
6401713b:	mov    DWORD PTR [ebp-0x48],esi
6401713e:	jmp    0x64017144
64017140:	mov    WORD PTR [ebp-0x10],ax
64017144:	lea    eax,[ebp-0x10]
64017147:	mov    DWORD PTR [ebp-0x1c],eax
6401714a:	mov    DWORD PTR [ebp-0x20],esi
6401714d:	jmp    0x6401749f
64017152:	mov    eax,DWORD PTR [ebx]
64017154:	add    ebx,0x4
64017157:	test   eax,eax
64017159:	mov    DWORD PTR [ebp-0x28],ebx
6401715c:	je     0x6401718b
6401715e:	mov    ecx,DWORD PTR [eax+0x4]
64017161:	test   ecx,ecx
64017163:	je     0x6401718b
64017165:	test   WORD PTR [ebp-0x14],0x800
6401716b:	movsx  eax,WORD PTR [eax]
6401716e:	mov    DWORD PTR [ebp-0x1c],ecx
64017171:	je     0x64017182
64017173:	cdq    
64017174:	sub    eax,edx
64017176:	mov    DWORD PTR [ebp-0x34],0x1
6401717d:	jmp    0x6401749a
64017182:	and    DWORD PTR [ebp-0x34],0x0
64017186:	jmp    0x6401749c
6401718b:	mov    eax,ds:0x6402d950
64017190:	mov    DWORD PTR [ebp-0x1c],eax
64017193:	push   eax
64017194:	call   0x64014280
64017199:	pop    ecx
6401719a:	jmp    0x6401749c
6401719f:	cmp    eax,0x70
640171a2:	jg     0x6401732f
640171a8:	je     0x64017323
640171ae:	cmp    eax,0x65
640171b1:	jl     0x6401749f
640171b7:	cmp    eax,0x67
640171ba:	jle    0x6401702b
640171c0:	cmp    eax,0x69
640171c3:	je     0x6401721e
640171c5:	cmp    eax,0x6e
640171c8:	je     0x640171e9
640171ca:	cmp    eax,0x6f
640171cd:	jne    0x6401749f
640171d3:	test   BYTE PTR [ebp-0x14],0x80
640171d7:	mov    DWORD PTR [ebp-0x24],0x8
640171de:	je     0x64017229
640171e0:	or     DWORD PTR [ebp-0x14],0x200
640171e7:	jmp    0x64017229
640171e9:	mov    esi,DWORD PTR [ebx]
640171eb:	add    ebx,0x4
640171ee:	mov    DWORD PTR [ebp-0x28],ebx
640171f1:	call   0x6401cae8
640171f6:	test   eax,eax
640171f8:	je     0x640175d6
640171fe:	test   BYTE PTR [ebp-0x14],0x20
64017202:	je     0x6401720d
64017204:	mov    ax,WORD PTR [ebp-0x2c]
64017208:	mov    WORD PTR [esi],ax
6401720b:	jmp    0x64017212
6401720d:	mov    eax,DWORD PTR [ebp-0x2c]
64017210:	mov    DWORD PTR [esi],eax
64017212:	mov    DWORD PTR [ebp-0x48],0x1
64017219:	jmp    0x640175a8
6401721e:	or     DWORD PTR [ebp-0x14],0x40
64017222:	mov    DWORD PTR [ebp-0x24],0xa
64017229:	test   WORD PTR [ebp-0x14],0x8000
6401722f:	je     0x64017379
64017235:	mov    eax,DWORD PTR [ebx]
64017237:	mov    edx,DWORD PTR [ebx+0x4]
6401723a:	add    ebx,0x8
6401723d:	jmp    0x640173b2
64017242:	jne    0x64017253
64017244:	cmp    dx,0x67
64017248:	jne    0x6401728f
6401724a:	mov    DWORD PTR [ebp-0x18],0x1
64017251:	jmp    0x6401728f
64017253:	cmp    DWORD PTR [ebp-0x18],eax
64017256:	jle    0x6401725b
64017258:	mov    DWORD PTR [ebp-0x18],eax
6401725b:	cmp    DWORD PTR [ebp-0x18],0xa3
64017262:	jle    0x6401728f
64017264:	mov    edi,DWORD PTR [ebp-0x18]
64017267:	add    edi,0x15d
6401726d:	push   edi
6401726e:	call   0x64015d90
64017273:	test   eax,eax
64017275:	mov    edx,DWORD PTR [ebp-0x24]
64017278:	pop    ecx
64017279:	mov    DWORD PTR [ebp-0x50],eax
6401727c:	je     0x64017288
6401727e:	mov    DWORD PTR [ebp-0x1c],eax
64017281:	mov    DWORD PTR [ebp-0x20],edi
64017284:	mov    esi,eax
64017286:	jmp    0x6401728f
64017288:	mov    DWORD PTR [ebp-0x18],0xa3
6401728f:	mov    eax,DWORD PTR [ebx]
64017291:	add    ebx,0x8
64017294:	mov    DWORD PTR [ebp-0x78],eax
64017297:	mov    eax,DWORD PTR [ebx-0x4]
6401729a:	mov    DWORD PTR [ebp-0x74],eax
6401729d:	lea    eax,[ebp-0x64]
640172a0:	push   eax
640172a1:	push   DWORD PTR [ebp-0x6c]
640172a4:	movsx  eax,dl
640172a7:	push   DWORD PTR [ebp-0x18]
640172aa:	mov    DWORD PTR [ebp-0x28],ebx
640172ad:	push   eax
640172ae:	push   DWORD PTR [ebp-0x20]
640172b1:	lea    eax,[ebp-0x78]
640172b4:	push   esi
640172b5:	push   eax
640172b6:	push   DWORD PTR ds:0x6402db64
640172bc:	call   0x640149af
640172c1:	pop    ecx
640172c2:	call   eax
640172c4:	mov    ebx,DWORD PTR [ebp-0x14]
640172c7:	add    esp,0x1c
640172ca:	and    ebx,0x80
640172d0:	je     0x640172ed
640172d2:	cmp    DWORD PTR [ebp-0x18],0x0
640172d6:	jne    0x640172ed
640172d8:	lea    eax,[ebp-0x64]
640172db:	push   eax
640172dc:	push   esi
640172dd:	push   DWORD PTR ds:0x6402db70
640172e3:	call   0x640149af
640172e8:	pop    ecx
640172e9:	call   eax
640172eb:	pop    ecx
640172ec:	pop    ecx
640172ed:	cmp    WORD PTR [ebp-0x24],0x67
640172f2:	jne    0x6401730d
640172f4:	test   ebx,ebx
640172f6:	jne    0x6401730d
640172f8:	lea    eax,[ebp-0x64]
640172fb:	push   eax
640172fc:	push   esi
640172fd:	push   DWORD PTR ds:0x6402db6c
64017303:	call   0x640149af
64017308:	pop    ecx
64017309:	call   eax
6401730b:	pop    ecx
6401730c:	pop    ecx
6401730d:	cmp    BYTE PTR [esi],0x2d
64017310:	jne    0x6401731d
64017312:	or     DWORD PTR [ebp-0x14],0x100
64017319:	inc    esi
6401731a:	mov    DWORD PTR [ebp-0x1c],esi
6401731d:	push   esi
6401731e:	jmp    0x64017194
64017323:	mov    DWORD PTR [ebp-0x18],0x8
6401732a:	mov    DWORD PTR [ebp-0x54],ecx
6401732d:	jmp    0x64017350
6401732f:	sub    eax,0x73
64017332:	je     0x64017074
64017338:	sub    eax,edi
6401733a:	je     0x64017222
64017340:	sub    eax,0x3
64017343:	jne    0x6401749f
64017349:	mov    DWORD PTR [ebp-0x54],0x27
64017350:	test   BYTE PTR [ebp-0x14],0x80
64017354:	mov    DWORD PTR [ebp-0x24],0x10
6401735b:	je     0x64017229
64017361:	mov    eax,DWORD PTR [ebp-0x54]
64017364:	add    eax,0x51
64017367:	mov    WORD PTR [ebp-0x44],0x30
6401736d:	mov    WORD PTR [ebp-0x42],ax
64017371:	mov    DWORD PTR [ebp-0x30],edi
64017374:	jmp    0x64017229
64017379:	test   WORD PTR [ebp-0x14],0x1000
6401737f:	jne    0x64017235
64017385:	add    ebx,0x4
64017388:	test   BYTE PTR [ebp-0x14],0x20
6401738c:	je     0x640173a4
6401738e:	test   BYTE PTR [ebp-0x14],0x40
64017392:	mov    DWORD PTR [ebp-0x28],ebx
64017395:	je     0x6401739d
64017397:	movsx  eax,WORD PTR [ebx-0x4]
6401739b:	jmp    0x640173a1
6401739d:	movzx  eax,WORD PTR [ebx-0x4]
640173a1:	cdq    
640173a2:	jmp    0x640173b5
640173a4:	test   BYTE PTR [ebp-0x14],0x40
640173a8:	mov    eax,DWORD PTR [ebx-0x4]
640173ab:	je     0x640173b0
640173ad:	cdq    
640173ae:	jmp    0x640173b2
640173b0:	xor    edx,edx
640173b2:	mov    DWORD PTR [ebp-0x28],ebx
640173b5:	test   BYTE PTR [ebp-0x14],0x40
640173b9:	je     0x640173d3
640173bb:	test   edx,edx
640173bd:	jg     0x640173d3
640173bf:	jl     0x640173c5
640173c1:	test   eax,eax
640173c3:	jae    0x640173d3
640173c5:	neg    eax
640173c7:	adc    edx,0x0
640173ca:	neg    edx
640173cc:	or     DWORD PTR [ebp-0x14],0x100
640173d3:	test   WORD PTR [ebp-0x14],0x9000
640173d9:	mov    ebx,edx
640173db:	mov    edi,eax
640173dd:	jne    0x640173e1
640173df:	xor    ebx,ebx
640173e1:	cmp    DWORD PTR [ebp-0x18],0x0
640173e5:	jge    0x640173f0
640173e7:	mov    DWORD PTR [ebp-0x18],0x1
640173ee:	jmp    0x64017401
640173f0:	and    DWORD PTR [ebp-0x14],0xfffffff7
640173f4:	mov    eax,0x200
640173f9:	cmp    DWORD PTR [ebp-0x18],eax
640173fc:	jle    0x64017401
640173fe:	mov    DWORD PTR [ebp-0x18],eax
64017401:	mov    eax,edi
64017403:	or     eax,ebx
64017405:	jne    0x6401740a
64017407:	and    DWORD PTR [ebp-0x30],eax
6401740a:	lea    esi,[ebp+0x1ef]
64017410:	mov    eax,DWORD PTR [ebp-0x18]
64017413:	dec    DWORD PTR [ebp-0x18]
64017416:	test   eax,eax
64017418:	jg     0x64017420
6401741a:	mov    eax,edi
6401741c:	or     eax,ebx
6401741e:	je     0x64017444
64017420:	mov    eax,DWORD PTR [ebp-0x24]
64017423:	cdq    
64017424:	push   edx
64017425:	push   eax
64017426:	push   ebx
64017427:	push   edi
64017428:	call   0x64019990
6401742d:	add    ecx,0x30
64017430:	cmp    ecx,0x39
64017433:	mov    DWORD PTR [ebp-0x7c],ebx
64017436:	mov    edi,eax
64017438:	mov    ebx,edx
6401743a:	jle    0x6401743f
6401743c:	add    ecx,DWORD PTR [ebp-0x54]
6401743f:	mov    BYTE PTR [esi],cl
64017441:	dec    esi
64017442:	jmp    0x64017410
64017444:	lea    eax,[ebp+0x1ef]
6401744a:	sub    eax,esi
6401744c:	inc    esi
6401744d:	test   WORD PTR [ebp-0x14],0x200
64017453:	mov    DWORD PTR [ebp-0x20],eax
64017456:	mov    DWORD PTR [ebp-0x1c],esi
64017459:	je     0x6401749f
6401745b:	test   eax,eax
6401745d:	je     0x64017466
6401745f:	mov    ecx,esi
64017461:	cmp    BYTE PTR [ecx],0x30
64017464:	je     0x6401749f
64017466:	dec    DWORD PTR [ebp-0x1c]
64017469:	mov    ecx,DWORD PTR [ebp-0x1c]
6401746c:	mov    BYTE PTR [ecx],0x30
6401746f:	inc    eax
64017470:	jmp    0x6401749c
64017472:	test   ebx,ebx
64017474:	jne    0x6401747e
64017476:	mov    eax,ds:0x6402d954
6401747b:	mov    DWORD PTR [ebp-0x1c],eax
6401747e:	mov    eax,DWORD PTR [ebp-0x1c]
64017481:	mov    DWORD PTR [ebp-0x34],0x1
64017488:	jmp    0x64017493
6401748a:	dec    edi
6401748b:	cmp    WORD PTR [eax],0x0
6401748f:	je     0x64017497
64017491:	inc    eax
64017492:	inc    eax
64017493:	test   edi,edi
64017495:	jne    0x6401748a
64017497:	sub    eax,DWORD PTR [ebp-0x1c]
6401749a:	sar    eax,1
6401749c:	mov    DWORD PTR [ebp-0x20],eax
6401749f:	cmp    DWORD PTR [ebp-0x48],0x0
640174a3:	jne    0x640175a8
640174a9:	mov    eax,DWORD PTR [ebp-0x14]
640174ac:	test   al,0x40
640174ae:	je     0x640174db
640174b0:	test   ax,0x100
640174b4:	je     0x640174be
640174b6:	mov    WORD PTR [ebp-0x44],0x2d
640174bc:	jmp    0x640174d4
640174be:	test   al,0x1
640174c0:	je     0x640174ca
640174c2:	mov    WORD PTR [ebp-0x44],0x2b
640174c8:	jmp    0x640174d4
640174ca:	test   al,0x2
640174cc:	je     0x640174db
640174ce:	mov    WORD PTR [ebp-0x44],0x20
640174d4:	mov    DWORD PTR [ebp-0x30],0x1
640174db:	mov    ebx,DWORD PTR [ebp-0x38]
640174de:	mov    esi,DWORD PTR [ebp-0x20]
640174e1:	sub    ebx,esi
640174e3:	sub    ebx,DWORD PTR [ebp-0x30]
640174e6:	test   BYTE PTR [ebp-0x14],0xc
640174ea:	jne    0x640174fd
640174ec:	push   DWORD PTR [ebp-0x3c]
640174ef:	lea    eax,[ebp-0x2c]
640174f2:	push   ebx
640174f3:	push   0x20
640174f5:	call   0x6401765a
640174fa:	add    esp,0xc
640174fd:	push   DWORD PTR [ebp-0x30]
64017500:	mov    edi,DWORD PTR [ebp-0x3c]
64017503:	lea    eax,[ebp-0x2c]
64017506:	lea    ecx,[ebp-0x44]
64017509:	call   0x6401767f
6401750e:	test   BYTE PTR [ebp-0x14],0x8
64017512:	pop    ecx
64017513:	je     0x6401752a
64017515:	test   BYTE PTR [ebp-0x14],0x4
64017519:	jne    0x6401752a
6401751b:	push   edi
6401751c:	push   ebx
6401751d:	push   0x30
6401751f:	lea    eax,[ebp-0x2c]
64017522:	call   0x6401765a
64017527:	add    esp,0xc
6401752a:	cmp    DWORD PTR [ebp-0x34],0x0
6401752e:	jne    0x6401757e
64017530:	test   esi,esi
64017532:	jle    0x6401757e
64017534:	mov    edi,DWORD PTR [ebp-0x1c]
64017537:	mov    DWORD PTR [ebp-0x24],esi
6401753a:	dec    DWORD PTR [ebp-0x24]
6401753d:	lea    eax,[ebp-0x64]
64017540:	push   eax
64017541:	mov    eax,DWORD PTR [ebp-0x64]
64017544:	push   DWORD PTR [eax+0xac]
6401754a:	lea    eax,[ebp-0x70]
6401754d:	push   edi
6401754e:	push   eax
6401754f:	call   0x6401cafe
64017554:	add    esp,0x10
64017557:	test   eax,eax
64017559:	mov    DWORD PTR [ebp-0x7c],eax
6401755c:	jle    0x64017578
6401755e:	push   DWORD PTR [ebp-0x70]
64017561:	mov    eax,DWORD PTR [ebp-0x3c]
64017564:	lea    esi,[ebp-0x2c]
64017567:	call   0x64017635
6401756c:	add    edi,DWORD PTR [ebp-0x7c]
6401756f:	cmp    DWORD PTR [ebp-0x24],0x0
64017573:	pop    ecx
64017574:	jg     0x6401753a
64017576:	jmp    0x6401758b
64017578:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401757c:	jmp    0x6401758b
6401757e:	mov    ecx,DWORD PTR [ebp-0x1c]
64017581:	push   esi
64017582:	lea    eax,[ebp-0x2c]
64017585:	call   0x6401767f
6401758a:	pop    ecx
6401758b:	cmp    DWORD PTR [ebp-0x2c],0x0
6401758f:	jl     0x640175a8
64017591:	test   BYTE PTR [ebp-0x14],0x4
64017595:	je     0x640175a8
64017597:	push   DWORD PTR [ebp-0x3c]
6401759a:	lea    eax,[ebp-0x2c]
6401759d:	push   ebx
6401759e:	push   0x20
640175a0:	call   0x6401765a
640175a5:	add    esp,0xc
640175a8:	cmp    DWORD PTR [ebp-0x50],0x0
640175ac:	je     0x640175bb
640175ae:	push   DWORD PTR [ebp-0x50]
640175b1:	call   0x64013956
640175b6:	and    DWORD PTR [ebp-0x50],0x0
640175ba:	pop    ecx
640175bb:	mov    esi,DWORD PTR [ebp-0x4c]
640175be:	movzx  eax,WORD PTR [esi]
640175c1:	test   ax,ax
640175c4:	mov    DWORD PTR [ebp-0x24],eax
640175c7:	je     0x640175ed
640175c9:	mov    ecx,DWORD PTR [ebp-0x68]
640175cc:	mov    ebx,DWORD PTR [ebp-0x28]
640175cf:	mov    edx,eax
640175d1:	jmp    0x64016dd0
640175d6:	call   0x64014880
640175db:	mov    DWORD PTR [eax],0x16
640175e1:	xor    eax,eax
640175e3:	push   eax
640175e4:	push   eax
640175e5:	push   eax
640175e6:	push   eax
640175e7:	push   eax
640175e8:	jmp    0x64016d95
640175ed:	cmp    BYTE PTR [ebp-0x58],0x0
640175f1:	je     0x640175fa
640175f3:	mov    eax,DWORD PTR [ebp-0x5c]
640175f6:	and    DWORD PTR [eax+0x70],0xfffffffd
640175fa:	mov    eax,DWORD PTR [ebp-0x2c]
640175fd:	mov    ecx,DWORD PTR [ebp+0x3f0]
64017603:	pop    edi
64017604:	pop    esi
64017605:	xor    ecx,ebp
64017607:	pop    ebx
64017608:	call   0x64012abc
6401760d:	add    ebp,0x3f4
64017613:	leave  
64017614:	ret    
64017615:	aam    0x6f
64017617:	add    DWORD PTR [esp+ebx*1+0x6e],esp
6401761b:	add    DWORD PTR [ecx+edi*1+0x6e],esp
6401761f:	add    DWORD PTR [edi+eax*4+0x6e],esp
64017623:	add    DWORD PTR [edx+eax*8+0x6e],esp
64017627:	add    DWORD PTR [ebx+ecx*8+0x6e],esp
6401762b:	add    DWORD PTR [ebx+eax*1+0x6f],esp
6401762f:	add    DWORD PTR [esp+ebp*8+0x6f],esp
64017633:	add    DWORD PTR [esi+esi*8+0x40],esp
64017637:	or     al,0x40
64017639:	je     0x64017641
6401763b:	cmp    DWORD PTR [eax+0x8],0x0
6401763f:	je     0x64017657
64017641:	push   eax
64017642:	push   DWORD PTR [esp+0x8]
64017646:	call   0x6401c90a
6401764b:	cmp    ax,0xffff
6401764f:	pop    ecx
64017650:	pop    ecx
64017651:	jne    0x64017657
64017653:	or     DWORD PTR [esi],0xffffffff
64017656:	ret    
64017657:	inc    DWORD PTR [esi]
64017659:	ret    
6401765a:	push   ebp
6401765b:	mov    ebp,esp
6401765d:	push   esi
6401765e:	mov    esi,eax
64017660:	jmp    0x64017676
64017662:	push   DWORD PTR [ebp+0x8]
64017665:	mov    eax,DWORD PTR [ebp+0x10]
64017668:	dec    DWORD PTR [ebp+0xc]
6401766b:	call   0x64017635
64017670:	cmp    DWORD PTR [esi],0xffffffff
64017673:	pop    ecx
64017674:	je     0x6401767c
64017676:	cmp    DWORD PTR [ebp+0xc],0x0
6401767a:	jg     0x64017662
6401767c:	pop    esi
6401767d:	pop    ebp
6401767e:	ret    
6401767f:	test   BYTE PTR [edi+0xc],0x40
64017683:	push   ebx
64017684:	push   esi
64017685:	mov    esi,eax
64017687:	mov    ebx,ecx
64017689:	je     0x640176c4
6401768b:	cmp    DWORD PTR [edi+0x8],0x0
6401768f:	jne    0x640176c4
64017691:	mov    eax,DWORD PTR [esp+0xc]
64017695:	add    DWORD PTR [esi],eax
64017697:	jmp    0x640176cb
64017699:	movzx  eax,WORD PTR [ebx]
6401769c:	dec    DWORD PTR [esp+0xc]
640176a0:	push   eax
640176a1:	mov    eax,edi
640176a3:	call   0x64017635
640176a8:	inc    ebx
640176a9:	inc    ebx
640176aa:	cmp    DWORD PTR [esi],0xffffffff
640176ad:	pop    ecx
640176ae:	jne    0x640176c4
640176b0:	call   0x64014880
640176b5:	cmp    DWORD PTR [eax],0x2a
640176b8:	jne    0x640176cb
640176ba:	push   0x3f
640176bc:	mov    eax,edi
640176be:	call   0x64017635
640176c3:	pop    ecx
640176c4:	cmp    DWORD PTR [esp+0xc],0x0
640176c9:	jg     0x64017699
640176cb:	pop    esi
640176cc:	pop    ebx
640176cd:	ret    
640176ce:	push   ebp
640176cf:	lea    ebp,[esp-0x3f4]
640176d6:	sub    esp,0x474
640176dc:	mov    eax,ds:0x6402d09c
640176e1:	xor    eax,ebp
640176e3:	mov    DWORD PTR [ebp+0x3f0],eax
640176e9:	push   ebx
640176ea:	mov    ebx,DWORD PTR [ebp+0x408]
640176f0:	push   esi
640176f1:	mov    esi,DWORD PTR [ebp+0x3fc]
640176f7:	xor    eax,eax
640176f9:	push   edi
640176fa:	push   DWORD PTR [ebp+0x404]
64017700:	mov    edi,DWORD PTR [ebp+0x400]
64017706:	lea    ecx,[ebp-0x58]
64017709:	mov    DWORD PTR [ebp-0x48],esi
6401770c:	mov    DWORD PTR [ebp-0x24],ebx
6401770f:	mov    DWORD PTR [ebp-0x60],eax
64017712:	mov    DWORD PTR [ebp-0x14],eax
64017715:	mov    DWORD PTR [ebp-0x38],eax
64017718:	mov    DWORD PTR [ebp-0x18],eax
6401771b:	mov    DWORD PTR [ebp-0x30],eax
6401771e:	mov    DWORD PTR [ebp-0x5c],eax
64017721:	mov    DWORD PTR [ebp-0x34],eax
64017724:	call   0x64012c5f
64017729:	test   esi,esi
6401772b:	jne    0x6401775c
6401772d:	call   0x64014880
64017732:	mov    DWORD PTR [eax],0x16
64017738:	xor    eax,eax
6401773a:	push   eax
6401773b:	push   eax
6401773c:	push   eax
6401773d:	push   eax
6401773e:	push   eax
6401773f:	call   0x640125f4
64017744:	add    esp,0x14
64017747:	cmp    BYTE PTR [ebp-0x4c],0x0
6401774b:	je     0x64017754
6401774d:	mov    eax,DWORD PTR [ebp-0x50]
64017750:	and    DWORD PTR [eax+0x70],0xfffffffd
64017754:	or     eax,0xffffffff
64017757:	jmp    0x64017fb2
6401775c:	xor    esi,esi
6401775e:	cmp    edi,esi
64017760:	jne    0x64017774
64017762:	call   0x64014880
64017767:	push   esi
64017768:	push   esi
64017769:	push   esi
6401776a:	push   esi
6401776b:	mov    DWORD PTR [eax],0x16
64017771:	push   esi
64017772:	jmp    0x6401773f
64017774:	movzx  ecx,WORD PTR [edi]
64017777:	cmp    cx,si
6401777a:	mov    DWORD PTR [ebp-0x2c],esi
6401777d:	mov    DWORD PTR [ebp-0x20],esi
64017780:	mov    DWORD PTR [ebp-0x40],esi
64017783:	mov    DWORD PTR [ebp-0x64],esi
64017786:	mov    DWORD PTR [ebp-0x28],ecx
64017789:	je     0x64017fa2
6401778f:	push   0x2
64017791:	pop    esi
64017792:	add    edi,esi
64017794:	xor    eax,eax
64017796:	cmp    DWORD PTR [ebp-0x2c],eax
64017799:	mov    DWORD PTR [ebp-0x6c],edi
6401779c:	jl     0x64017f92
640177a2:	lea    edx,[ecx-0x20]
640177a5:	cmp    dx,0x58
640177a9:	ja     0x640177b8
640177ab:	movzx  eax,cx
640177ae:	movzx  eax,BYTE PTR [eax+0x640274c0]
640177b5:	and    eax,0xf
640177b8:	mov    edx,DWORD PTR [ebp-0x40]
640177bb:	imul   eax,eax,0x9
640177be:	movzx  eax,BYTE PTR [eax+edx*1+0x640274e0]
640177c6:	push   0x8
640177c8:	shr    eax,0x4
640177cb:	pop    edx
640177cc:	cmp    eax,edx
640177ce:	mov    DWORD PTR [ebp-0x40],eax
640177d1:	je     0x6401772d
640177d7:	cmp    eax,0x7
640177da:	ja     0x64017f7a
640177e0:	jmp    DWORD PTR [eax*4+0x64017fca]
640177e7:	xor    eax,eax
640177e9:	or     DWORD PTR [ebp-0x18],0xffffffff
640177ed:	mov    DWORD PTR [ebp-0x68],eax
640177f0:	mov    DWORD PTR [ebp-0x5c],eax
640177f3:	mov    DWORD PTR [ebp-0x38],eax
640177f6:	mov    DWORD PTR [ebp-0x30],eax
640177f9:	mov    DWORD PTR [ebp-0x14],eax
640177fc:	mov    DWORD PTR [ebp-0x34],eax
640177ff:	jmp    0x64017f80
64017804:	movzx  eax,cx
64017807:	sub    eax,0x20
6401780a:	je     0x64017848
6401780c:	sub    eax,0x3
6401780f:	je     0x6401783c
64017811:	sub    eax,edx
64017813:	je     0x64017833
64017815:	sub    eax,esi
64017817:	je     0x6401782a
64017819:	sub    eax,0x3
6401781c:	jne    0x64017f7a
64017822:	or     DWORD PTR [ebp-0x14],edx
64017825:	jmp    0x64017f80
6401782a:	or     DWORD PTR [ebp-0x14],0x4
6401782e:	jmp    0x64017f80
64017833:	or     DWORD PTR [ebp-0x14],0x1
64017837:	jmp    0x64017f80
6401783c:	or     DWORD PTR [ebp-0x14],0x80
64017843:	jmp    0x64017f80
64017848:	or     DWORD PTR [ebp-0x14],esi
6401784b:	jmp    0x64017f80
64017850:	cmp    cx,0x2a
64017854:	jne    0x64017875
64017856:	mov    eax,DWORD PTR [ebx]
64017858:	add    ebx,0x4
6401785b:	test   eax,eax
6401785d:	mov    DWORD PTR [ebp-0x24],ebx
64017860:	mov    DWORD PTR [ebp-0x38],eax
64017863:	jge    0x64017f80
64017869:	or     DWORD PTR [ebp-0x14],0x4
6401786d:	neg    DWORD PTR [ebp-0x38]
64017870:	jmp    0x64017f80
64017875:	mov    eax,DWORD PTR [ebp-0x38]
64017878:	imul   eax,eax,0xa
6401787b:	movzx  ecx,cx
6401787e:	lea    eax,[eax+ecx*1-0x30]
64017882:	mov    DWORD PTR [ebp-0x38],eax
64017885:	jmp    0x64017f80
6401788a:	and    DWORD PTR [ebp-0x18],0x0
6401788e:	jmp    0x64017f80
64017893:	cmp    cx,0x2a
64017897:	jne    0x640178b5
64017899:	mov    eax,DWORD PTR [ebx]
6401789b:	add    ebx,0x4
6401789e:	test   eax,eax
640178a0:	mov    DWORD PTR [ebp-0x24],ebx
640178a3:	mov    DWORD PTR [ebp-0x18],eax
640178a6:	jge    0x64017f80
640178ac:	or     DWORD PTR [ebp-0x18],0xffffffff
640178b0:	jmp    0x64017f80
640178b5:	mov    eax,DWORD PTR [ebp-0x18]
640178b8:	imul   eax,eax,0xa
640178bb:	movzx  ecx,cx
640178be:	lea    eax,[eax+ecx*1-0x30]
640178c2:	mov    DWORD PTR [ebp-0x18],eax
640178c5:	jmp    0x64017f80
640178ca:	movzx  eax,cx
640178cd:	cmp    eax,0x49
640178d0:	je     0x64017917
640178d2:	cmp    eax,0x68
640178d5:	je     0x6401790e
640178d7:	cmp    eax,0x6c
640178da:	je     0x640178f1
640178dc:	cmp    eax,0x77
640178df:	jne    0x64017f80
640178e5:	or     DWORD PTR [ebp-0x14],0x800
640178ec:	jmp    0x64017f80
640178f1:	cmp    WORD PTR [edi],0x6c
640178f5:	jne    0x64017905
640178f7:	add    edi,esi
640178f9:	or     DWORD PTR [ebp-0x14],0x1000
64017900:	jmp    0x64017f80
64017905:	or     DWORD PTR [ebp-0x14],0x10
64017909:	jmp    0x64017f80
6401790e:	or     DWORD PTR [ebp-0x14],0x20
64017912:	jmp    0x64017f80
64017917:	movzx  eax,WORD PTR [edi]
6401791a:	cmp    ax,0x36
6401791e:	jne    0x64017936
64017920:	cmp    WORD PTR [edi+0x2],0x34
64017925:	jne    0x64017936
64017927:	add    edi,0x4
6401792a:	or     DWORD PTR [ebp-0x14],0x8000
64017931:	jmp    0x64017f80
64017936:	cmp    ax,0x33
6401793a:	jne    0x64017952
6401793c:	cmp    WORD PTR [edi+0x2],0x32
64017941:	jne    0x64017952
64017943:	add    edi,0x4
64017946:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401794d:	jmp    0x64017f80
64017952:	cmp    ax,0x64
64017956:	je     0x64017f80
6401795c:	cmp    ax,0x69
64017960:	je     0x64017f80
64017966:	cmp    ax,0x6f
6401796a:	je     0x64017f80
64017970:	cmp    ax,0x75
64017974:	je     0x64017f80
6401797a:	cmp    ax,0x78
6401797e:	je     0x64017f80
64017984:	cmp    ax,0x58
64017988:	je     0x64017f80
6401798e:	and    DWORD PTR [ebp-0x40],0x0
64017992:	mov    eax,DWORD PTR [ebp-0x48]
64017995:	push   ecx
64017996:	lea    esi,[ebp-0x2c]
64017999:	mov    DWORD PTR [ebp-0x34],0x1
640179a0:	call   0x64017635
640179a5:	pop    ecx
640179a6:	jmp    0x64017f80
640179ab:	movzx  eax,cx
640179ae:	cmp    eax,0x64
640179b1:	jg     0x64017b5f
640179b7:	je     0x64017bda
640179bd:	cmp    eax,0x53
640179c0:	jg     0x64017a9d
640179c6:	je     0x64017a27
640179c8:	sub    eax,0x41
640179cb:	je     0x640179dd
640179cd:	sub    eax,esi
640179cf:	je     0x64017a12
640179d1:	sub    eax,esi
640179d3:	je     0x640179dd
640179d5:	sub    eax,esi
640179d7:	jne    0x64017e5e
640179dd:	add    ecx,0x20
640179e0:	mov    DWORD PTR [ebp-0x68],0x1
640179e7:	mov    DWORD PTR [ebp-0x28],ecx
640179ea:	or     DWORD PTR [ebp-0x14],0x40
640179ee:	cmp    DWORD PTR [ebp-0x18],0x0
640179f2:	lea    esi,[ebp-0x10]
640179f5:	mov    eax,0x200
640179fa:	mov    DWORD PTR [ebp-0x1c],esi
640179fd:	mov    DWORD PTR [ebp-0x20],eax
64017a00:	jge    0x64017bfe
64017a06:	mov    DWORD PTR [ebp-0x18],0x6
64017a0d:	jmp    0x64017c4e
64017a12:	test   WORD PTR [ebp-0x14],0x830
64017a18:	jne    0x64017abb
64017a1e:	or     DWORD PTR [ebp-0x14],0x20
64017a22:	jmp    0x64017abb
64017a27:	test   WORD PTR [ebp-0x14],0x830
64017a2d:	jne    0x64017a33
64017a2f:	or     DWORD PTR [ebp-0x14],0x20
64017a33:	mov    edi,DWORD PTR [ebp-0x18]
64017a36:	cmp    edi,0xffffffff
64017a39:	jne    0x64017a40
64017a3b:	mov    edi,0x7fffffff
64017a40:	add    ebx,0x4
64017a43:	test   BYTE PTR [ebp-0x14],0x20
64017a47:	mov    DWORD PTR [ebp-0x24],ebx
64017a4a:	mov    ebx,DWORD PTR [ebx-0x4]
64017a4d:	mov    DWORD PTR [ebp-0x1c],ebx
64017a50:	je     0x64017e31
64017a56:	test   ebx,ebx
64017a58:	jne    0x64017a62
64017a5a:	mov    eax,ds:0x6402d950
64017a5f:	mov    DWORD PTR [ebp-0x1c],eax
64017a62:	and    DWORD PTR [ebp-0x20],0x0
64017a66:	test   edi,edi
64017a68:	mov    esi,DWORD PTR [ebp-0x1c]
64017a6b:	jle    0x64017e5e
64017a71:	mov    al,BYTE PTR [esi]
64017a73:	test   al,al
64017a75:	je     0x64017e5e
64017a7b:	lea    ecx,[ebp-0x58]
64017a7e:	movzx  eax,al
64017a81:	push   ecx
64017a82:	push   eax
64017a83:	call   0x64019e0a
64017a88:	test   eax,eax
64017a8a:	pop    ecx
64017a8b:	pop    ecx
64017a8c:	je     0x64017a8f
64017a8e:	inc    esi
64017a8f:	inc    esi
64017a90:	inc    DWORD PTR [ebp-0x20]
64017a93:	cmp    DWORD PTR [ebp-0x20],edi
64017a96:	jl     0x64017a71
64017a98:	jmp    0x64017e5e
64017a9d:	sub    eax,0x58
64017aa0:	je     0x64017ce5
64017aa6:	sub    eax,esi
64017aa8:	je     0x64017b12
64017aaa:	sub    eax,0x7
64017aad:	je     0x640179ea
64017ab3:	sub    eax,esi
64017ab5:	jne    0x64017e5e
64017abb:	movzx  eax,WORD PTR [ebx]
64017abe:	add    ebx,0x4
64017ac1:	xor    esi,esi
64017ac3:	inc    esi
64017ac4:	test   BYTE PTR [ebp-0x14],0x20
64017ac8:	mov    DWORD PTR [ebp-0x34],esi
64017acb:	mov    DWORD PTR [ebp-0x24],ebx
64017ace:	mov    DWORD PTR [ebp-0x70],eax
64017ad1:	je     0x64017b00
64017ad3:	mov    BYTE PTR [ebp-0x44],al
64017ad6:	lea    eax,[ebp-0x58]
64017ad9:	push   eax
64017ada:	mov    eax,DWORD PTR [ebp-0x58]
64017add:	mov    BYTE PTR [ebp-0x43],0x0
64017ae1:	push   DWORD PTR [eax+0xac]
64017ae7:	lea    eax,[ebp-0x44]
64017aea:	push   eax
64017aeb:	lea    eax,[ebp-0x10]
64017aee:	push   eax
64017aef:	call   0x6401cafe
64017af4:	add    esp,0x10
64017af7:	test   eax,eax
64017af9:	jge    0x64017b04
64017afb:	mov    DWORD PTR [ebp-0x5c],esi
64017afe:	jmp    0x64017b04
64017b00:	mov    WORD PTR [ebp-0x10],ax
64017b04:	lea    eax,[ebp-0x10]
64017b07:	mov    DWORD PTR [ebp-0x1c],eax
64017b0a:	mov    DWORD PTR [ebp-0x20],esi
64017b0d:	jmp    0x64017e5e
64017b12:	mov    eax,DWORD PTR [ebx]
64017b14:	add    ebx,0x4
64017b17:	test   eax,eax
64017b19:	mov    DWORD PTR [ebp-0x24],ebx
64017b1c:	je     0x64017b4b
64017b1e:	mov    ecx,DWORD PTR [eax+0x4]
64017b21:	test   ecx,ecx
64017b23:	je     0x64017b4b
64017b25:	test   WORD PTR [ebp-0x14],0x800
64017b2b:	movsx  eax,WORD PTR [eax]
64017b2e:	mov    DWORD PTR [ebp-0x1c],ecx
64017b31:	je     0x64017b42
64017b33:	cdq    
64017b34:	sub    eax,edx
64017b36:	mov    DWORD PTR [ebp-0x34],0x1
64017b3d:	jmp    0x64017e59
64017b42:	and    DWORD PTR [ebp-0x34],0x0
64017b46:	jmp    0x64017e5b
64017b4b:	mov    eax,ds:0x6402d950
64017b50:	mov    DWORD PTR [ebp-0x1c],eax
64017b53:	push   eax
64017b54:	call   0x64014280
64017b59:	pop    ecx
64017b5a:	jmp    0x64017e5b
64017b5f:	cmp    eax,0x70
64017b62:	jg     0x64017cee
64017b68:	je     0x64017ce2
64017b6e:	cmp    eax,0x65
64017b71:	jl     0x64017e5e
64017b77:	cmp    eax,0x67
64017b7a:	jle    0x640179ea
64017b80:	cmp    eax,0x69
64017b83:	je     0x64017bda
64017b85:	cmp    eax,0x6e
64017b88:	je     0x64017ba5
64017b8a:	cmp    eax,0x6f
64017b8d:	jne    0x64017e5e
64017b93:	test   BYTE PTR [ebp-0x14],0x80
64017b97:	mov    DWORD PTR [ebp-0x28],edx
64017b9a:	je     0x64017be5
64017b9c:	or     DWORD PTR [ebp-0x14],0x200
64017ba3:	jmp    0x64017be5
64017ba5:	mov    esi,DWORD PTR [ebx]
64017ba7:	add    ebx,0x4
64017baa:	mov    DWORD PTR [ebp-0x24],ebx
64017bad:	call   0x6401cae8
64017bb2:	test   eax,eax
64017bb4:	je     0x6401772d
64017bba:	test   BYTE PTR [ebp-0x14],0x20
64017bbe:	je     0x64017bc9
64017bc0:	mov    ax,WORD PTR [ebp-0x2c]
64017bc4:	mov    WORD PTR [esi],ax
64017bc7:	jmp    0x64017bce
64017bc9:	mov    eax,DWORD PTR [ebp-0x2c]
64017bcc:	mov    DWORD PTR [esi],eax
64017bce:	mov    DWORD PTR [ebp-0x5c],0x1
64017bd5:	jmp    0x64017f67
64017bda:	or     DWORD PTR [ebp-0x14],0x40
64017bde:	mov    DWORD PTR [ebp-0x28],0xa
64017be5:	test   WORD PTR [ebp-0x14],0x8000
64017beb:	je     0x64017d38
64017bf1:	add    ebx,edx
64017bf3:	mov    eax,DWORD PTR [ebx-0x8]
64017bf6:	mov    edx,DWORD PTR [ebx-0x4]
64017bf9:	jmp    0x64017d71
64017bfe:	jne    0x64017c0f
64017c00:	cmp    cx,0x67
64017c04:	jne    0x64017c4e
64017c06:	mov    DWORD PTR [ebp-0x18],0x1
64017c0d:	jmp    0x64017c4e
64017c0f:	cmp    DWORD PTR [ebp-0x18],eax
64017c12:	jle    0x64017c17
64017c14:	mov    DWORD PTR [ebp-0x18],eax
64017c17:	cmp    DWORD PTR [ebp-0x18],0xa3
64017c1e:	jle    0x64017c4e
64017c20:	mov    edi,DWORD PTR [ebp-0x18]
64017c23:	add    edi,0x15d
64017c29:	push   edi
64017c2a:	call   0x64015d90
64017c2f:	test   eax,eax
64017c31:	pop    ecx
64017c32:	mov    ecx,DWORD PTR [ebp-0x28]
64017c35:	push   0x8
64017c37:	mov    DWORD PTR [ebp-0x64],eax
64017c3a:	pop    edx
64017c3b:	je     0x64017c47
64017c3d:	mov    DWORD PTR [ebp-0x1c],eax
64017c40:	mov    DWORD PTR [ebp-0x20],edi
64017c43:	mov    esi,eax
64017c45:	jmp    0x64017c4e
64017c47:	mov    DWORD PTR [ebp-0x18],0xa3
64017c4e:	add    ebx,edx
64017c50:	mov    eax,DWORD PTR [ebx-0x8]
64017c53:	mov    DWORD PTR [ebp-0x78],eax
64017c56:	mov    eax,DWORD PTR [ebx-0x4]
64017c59:	mov    DWORD PTR [ebp-0x74],eax
64017c5c:	lea    eax,[ebp-0x58]
64017c5f:	push   eax
64017c60:	push   DWORD PTR [ebp-0x68]
64017c63:	movsx  eax,cl
64017c66:	push   DWORD PTR [ebp-0x18]
64017c69:	mov    DWORD PTR [ebp-0x24],ebx
64017c6c:	push   eax
64017c6d:	push   DWORD PTR [ebp-0x20]
64017c70:	lea    eax,[ebp-0x78]
64017c73:	push   esi
64017c74:	push   eax
64017c75:	push   DWORD PTR ds:0x6402db64
64017c7b:	call   0x640149af
64017c80:	pop    ecx
64017c81:	call   eax
64017c83:	mov    ebx,DWORD PTR [ebp-0x14]
64017c86:	add    esp,0x1c
64017c89:	and    ebx,0x80
64017c8f:	je     0x64017cac
64017c91:	cmp    DWORD PTR [ebp-0x18],0x0
64017c95:	jne    0x64017cac
64017c97:	lea    eax,[ebp-0x58]
64017c9a:	push   eax
64017c9b:	push   esi
64017c9c:	push   DWORD PTR ds:0x6402db70
64017ca2:	call   0x640149af
64017ca7:	pop    ecx
64017ca8:	call   eax
64017caa:	pop    ecx
64017cab:	pop    ecx
64017cac:	cmp    WORD PTR [ebp-0x28],0x67
64017cb1:	jne    0x64017ccc
64017cb3:	test   ebx,ebx
64017cb5:	jne    0x64017ccc
64017cb7:	lea    eax,[ebp-0x58]
64017cba:	push   eax
64017cbb:	push   esi
64017cbc:	push   DWORD PTR ds:0x6402db6c
64017cc2:	call   0x640149af
64017cc7:	pop    ecx
64017cc8:	call   eax
64017cca:	pop    ecx
64017ccb:	pop    ecx
64017ccc:	cmp    BYTE PTR [esi],0x2d
64017ccf:	jne    0x64017cdc
64017cd1:	or     DWORD PTR [ebp-0x14],0x100
64017cd8:	inc    esi
64017cd9:	mov    DWORD PTR [ebp-0x1c],esi
64017cdc:	push   esi
64017cdd:	jmp    0x64017b54
64017ce2:	mov    DWORD PTR [ebp-0x18],edx
64017ce5:	mov    DWORD PTR [ebp-0x60],0x7
64017cec:	jmp    0x64017d0f
64017cee:	sub    eax,0x73
64017cf1:	je     0x64017a33
64017cf7:	sub    eax,esi
64017cf9:	je     0x64017bde
64017cff:	sub    eax,0x3
64017d02:	jne    0x64017e5e
64017d08:	mov    DWORD PTR [ebp-0x60],0x27
64017d0f:	test   BYTE PTR [ebp-0x14],0x80
64017d13:	mov    DWORD PTR [ebp-0x28],0x10
64017d1a:	je     0x64017be5
64017d20:	mov    eax,DWORD PTR [ebp-0x60]
64017d23:	add    eax,0x51
64017d26:	mov    WORD PTR [ebp-0x3c],0x30
64017d2c:	mov    WORD PTR [ebp-0x3a],ax
64017d30:	mov    DWORD PTR [ebp-0x30],esi
64017d33:	jmp    0x64017be5
64017d38:	test   WORD PTR [ebp-0x14],0x1000
64017d3e:	jne    0x64017bf1
64017d44:	add    ebx,0x4
64017d47:	test   BYTE PTR [ebp-0x14],0x20
64017d4b:	je     0x64017d63
64017d4d:	test   BYTE PTR [ebp-0x14],0x40
64017d51:	mov    DWORD PTR [ebp-0x24],ebx
64017d54:	je     0x64017d5c
64017d56:	movsx  eax,WORD PTR [ebx-0x4]
64017d5a:	jmp    0x64017d60
64017d5c:	movzx  eax,WORD PTR [ebx-0x4]
64017d60:	cdq    
64017d61:	jmp    0x64017d74
64017d63:	test   BYTE PTR [ebp-0x14],0x40
64017d67:	mov    eax,DWORD PTR [ebx-0x4]
64017d6a:	je     0x64017d6f
64017d6c:	cdq    
64017d6d:	jmp    0x64017d71
64017d6f:	xor    edx,edx
64017d71:	mov    DWORD PTR [ebp-0x24],ebx
64017d74:	test   BYTE PTR [ebp-0x14],0x40
64017d78:	je     0x64017d92
64017d7a:	test   edx,edx
64017d7c:	jg     0x64017d92
64017d7e:	jl     0x64017d84
64017d80:	test   eax,eax
64017d82:	jae    0x64017d92
64017d84:	neg    eax
64017d86:	adc    edx,0x0
64017d89:	neg    edx
64017d8b:	or     DWORD PTR [ebp-0x14],0x100
64017d92:	test   WORD PTR [ebp-0x14],0x9000
64017d98:	mov    ebx,edx
64017d9a:	mov    edi,eax
64017d9c:	jne    0x64017da0
64017d9e:	xor    ebx,ebx
64017da0:	cmp    DWORD PTR [ebp-0x18],0x0
64017da4:	jge    0x64017daf
64017da6:	mov    DWORD PTR [ebp-0x18],0x1
64017dad:	jmp    0x64017dc0
64017daf:	and    DWORD PTR [ebp-0x14],0xfffffff7
64017db3:	mov    eax,0x200
64017db8:	cmp    DWORD PTR [ebp-0x18],eax
64017dbb:	jle    0x64017dc0
64017dbd:	mov    DWORD PTR [ebp-0x18],eax
64017dc0:	mov    eax,edi
64017dc2:	or     eax,ebx
64017dc4:	jne    0x64017dc9
64017dc6:	and    DWORD PTR [ebp-0x30],eax
64017dc9:	lea    esi,[ebp+0x1ef]
64017dcf:	mov    eax,DWORD PTR [ebp-0x18]
64017dd2:	dec    DWORD PTR [ebp-0x18]
64017dd5:	test   eax,eax
64017dd7:	jg     0x64017ddf
64017dd9:	mov    eax,edi
64017ddb:	or     eax,ebx
64017ddd:	je     0x64017e03
64017ddf:	mov    eax,DWORD PTR [ebp-0x28]
64017de2:	cdq    
64017de3:	push   edx
64017de4:	push   eax
64017de5:	push   ebx
64017de6:	push   edi
64017de7:	call   0x64019990
64017dec:	add    ecx,0x30
64017def:	cmp    ecx,0x39
64017df2:	mov    DWORD PTR [ebp-0x7c],ebx
64017df5:	mov    edi,eax
64017df7:	mov    ebx,edx
64017df9:	jle    0x64017dfe
64017dfb:	add    ecx,DWORD PTR [ebp-0x60]
64017dfe:	mov    BYTE PTR [esi],cl
64017e00:	dec    esi
64017e01:	jmp    0x64017dcf
64017e03:	lea    eax,[ebp+0x1ef]
64017e09:	sub    eax,esi
64017e0b:	inc    esi
64017e0c:	test   WORD PTR [ebp-0x14],0x200
64017e12:	mov    DWORD PTR [ebp-0x20],eax
64017e15:	mov    DWORD PTR [ebp-0x1c],esi
64017e18:	je     0x64017e5e
64017e1a:	test   eax,eax
64017e1c:	je     0x64017e25
64017e1e:	mov    ecx,esi
64017e20:	cmp    BYTE PTR [ecx],0x30
64017e23:	je     0x64017e5e
64017e25:	dec    DWORD PTR [ebp-0x1c]
64017e28:	mov    ecx,DWORD PTR [ebp-0x1c]
64017e2b:	mov    BYTE PTR [ecx],0x30
64017e2e:	inc    eax
64017e2f:	jmp    0x64017e5b
64017e31:	test   ebx,ebx
64017e33:	jne    0x64017e3d
64017e35:	mov    eax,ds:0x6402d954
64017e3a:	mov    DWORD PTR [ebp-0x1c],eax
64017e3d:	mov    eax,DWORD PTR [ebp-0x1c]
64017e40:	mov    DWORD PTR [ebp-0x34],0x1
64017e47:	jmp    0x64017e52
64017e49:	dec    edi
64017e4a:	cmp    WORD PTR [eax],0x0
64017e4e:	je     0x64017e56
64017e50:	add    eax,esi
64017e52:	test   edi,edi
64017e54:	jne    0x64017e49
64017e56:	sub    eax,DWORD PTR [ebp-0x1c]
64017e59:	sar    eax,1
64017e5b:	mov    DWORD PTR [ebp-0x20],eax
64017e5e:	cmp    DWORD PTR [ebp-0x5c],0x0
64017e62:	jne    0x64017f67
64017e68:	mov    eax,DWORD PTR [ebp-0x14]
64017e6b:	test   al,0x40
64017e6d:	je     0x64017e9a
64017e6f:	test   ax,0x100
64017e73:	je     0x64017e7d
64017e75:	mov    WORD PTR [ebp-0x3c],0x2d
64017e7b:	jmp    0x64017e93
64017e7d:	test   al,0x1
64017e7f:	je     0x64017e89
64017e81:	mov    WORD PTR [ebp-0x3c],0x2b
64017e87:	jmp    0x64017e93
64017e89:	test   al,0x2
64017e8b:	je     0x64017e9a
64017e8d:	mov    WORD PTR [ebp-0x3c],0x20
64017e93:	mov    DWORD PTR [ebp-0x30],0x1
64017e9a:	mov    ebx,DWORD PTR [ebp-0x38]
64017e9d:	mov    esi,DWORD PTR [ebp-0x20]
64017ea0:	sub    ebx,esi
64017ea2:	sub    ebx,DWORD PTR [ebp-0x30]
64017ea5:	test   BYTE PTR [ebp-0x14],0xc
64017ea9:	jne    0x64017ebc
64017eab:	push   DWORD PTR [ebp-0x48]
64017eae:	lea    eax,[ebp-0x2c]
64017eb1:	push   ebx
64017eb2:	push   0x20
64017eb4:	call   0x6401765a
64017eb9:	add    esp,0xc
64017ebc:	push   DWORD PTR [ebp-0x30]
64017ebf:	mov    edi,DWORD PTR [ebp-0x48]
64017ec2:	lea    eax,[ebp-0x2c]
64017ec5:	lea    ecx,[ebp-0x3c]
64017ec8:	call   0x6401767f
64017ecd:	test   BYTE PTR [ebp-0x14],0x8
64017ed1:	pop    ecx
64017ed2:	je     0x64017ee9
64017ed4:	test   BYTE PTR [ebp-0x14],0x4
64017ed8:	jne    0x64017ee9
64017eda:	push   edi
64017edb:	push   ebx
64017edc:	push   0x30
64017ede:	lea    eax,[ebp-0x2c]
64017ee1:	call   0x6401765a
64017ee6:	add    esp,0xc
64017ee9:	cmp    DWORD PTR [ebp-0x34],0x0
64017eed:	jne    0x64017f3d
64017eef:	test   esi,esi
64017ef1:	jle    0x64017f3d
64017ef3:	mov    edi,DWORD PTR [ebp-0x1c]
64017ef6:	mov    DWORD PTR [ebp-0x28],esi
64017ef9:	dec    DWORD PTR [ebp-0x28]
64017efc:	lea    eax,[ebp-0x58]
64017eff:	push   eax
64017f00:	mov    eax,DWORD PTR [ebp-0x58]
64017f03:	push   DWORD PTR [eax+0xac]
64017f09:	lea    eax,[ebp-0x70]
64017f0c:	push   edi
64017f0d:	push   eax
64017f0e:	call   0x6401cafe
64017f13:	add    esp,0x10
64017f16:	test   eax,eax
64017f18:	mov    DWORD PTR [ebp-0x7c],eax
64017f1b:	jle    0x64017f37
64017f1d:	push   DWORD PTR [ebp-0x70]
64017f20:	mov    eax,DWORD PTR [ebp-0x48]
64017f23:	lea    esi,[ebp-0x2c]
64017f26:	call   0x64017635
64017f2b:	add    edi,DWORD PTR [ebp-0x7c]
64017f2e:	cmp    DWORD PTR [ebp-0x28],0x0
64017f32:	pop    ecx
64017f33:	jg     0x64017ef9
64017f35:	jmp    0x64017f4a
64017f37:	or     DWORD PTR [ebp-0x2c],0xffffffff
64017f3b:	jmp    0x64017f4a
64017f3d:	mov    ecx,DWORD PTR [ebp-0x1c]
64017f40:	push   esi
64017f41:	lea    eax,[ebp-0x2c]
64017f44:	call   0x6401767f
64017f49:	pop    ecx
64017f4a:	cmp    DWORD PTR [ebp-0x2c],0x0
64017f4e:	jl     0x64017f67
64017f50:	test   BYTE PTR [ebp-0x14],0x4
64017f54:	je     0x64017f67
64017f56:	push   DWORD PTR [ebp-0x48]
64017f59:	lea    eax,[ebp-0x2c]
64017f5c:	push   ebx
64017f5d:	push   0x20
64017f5f:	call   0x6401765a
64017f64:	add    esp,0xc
64017f67:	cmp    DWORD PTR [ebp-0x64],0x0
64017f6b:	je     0x64017f7a
64017f6d:	push   DWORD PTR [ebp-0x64]
64017f70:	call   0x64013956
64017f75:	and    DWORD PTR [ebp-0x64],0x0
64017f79:	pop    ecx
64017f7a:	mov    edi,DWORD PTR [ebp-0x6c]
64017f7d:	mov    ebx,DWORD PTR [ebp-0x24]
64017f80:	movzx  eax,WORD PTR [edi]
64017f83:	test   ax,ax
64017f86:	mov    DWORD PTR [ebp-0x28],eax
64017f89:	je     0x64017f92
64017f8b:	mov    ecx,eax
64017f8d:	jmp    0x6401778f
64017f92:	cmp    DWORD PTR [ebp-0x40],0x0
64017f96:	je     0x64017fa2
64017f98:	cmp    DWORD PTR [ebp-0x40],0x7
64017f9c:	jne    0x6401772d
64017fa2:	cmp    BYTE PTR [ebp-0x4c],0x0
64017fa6:	je     0x64017faf
64017fa8:	mov    eax,DWORD PTR [ebp-0x50]
64017fab:	and    DWORD PTR [eax+0x70],0xfffffffd
64017faf:	mov    eax,DWORD PTR [ebp-0x2c]
64017fb2:	mov    ecx,DWORD PTR [ebp+0x3f0]
64017fb8:	pop    edi
64017fb9:	pop    esi
64017fba:	xor    ecx,ebp
64017fbc:	pop    ebx
64017fbd:	call   0x64012abc
64017fc2:	add    ebp,0x3f4
64017fc8:	leave  
64017fc9:	ret    
64017fca:	xchg   edx,eax
64017fcb:	jns    0x64017fce
64017fcd:	fs out 0x77,eax
64017fd0:	add    DWORD PTR [esp+eax*1+0x78],esp
64017fd4:	add    DWORD PTR [eax+edx*2+0x78],esp
64017fd8:	add    DWORD PTR [edx+ecx*4+0x78],esp
64017fdc:	add    DWORD PTR [ebx+edx*4+0x78],esp
64017fe0:	add    DWORD PTR [edx+ecx*8+0x78],esp
64017fe4:	add    DWORD PTR [ebx+ebp*4+0x79],esp
64017fe8:	add    DWORD PTR [esp+ecx*8-0x34],esp
64017fec:	push   ebp
64017fed:	mov    ebp,esp
64017fef:	sub    esp,0x10
64017ff2:	mov    eax,ds:0x6402d09c
64017ff7:	xor    eax,ebp
64017ff9:	mov    DWORD PTR [ebp-0x4],eax
64017ffc:	push   ebx
64017ffd:	push   esi
64017ffe:	mov    esi,DWORD PTR ds:0x64025158
64018004:	xor    ebx,ebx
64018006:	cmp    DWORD PTR ds:0x6402e958,ebx
6401800c:	push   edi
6401800d:	mov    edi,ecx
6401800f:	jne    0x64018047
64018011:	push   ebx
64018012:	push   ebx
64018013:	push   0x1
64018015:	push   0x640276e4
6401801a:	push   0x100
6401801f:	push   ebx
64018020:	call   esi
64018022:	test   eax,eax
64018024:	je     0x64018032
64018026:	mov    DWORD PTR ds:0x6402e958,0x1
64018030:	jmp    0x64018047
64018032:	call   DWORD PTR ds:0x64025044
64018038:	cmp    eax,0x78
6401803b:	jne    0x64018047
6401803d:	mov    DWORD PTR ds:0x6402e958,0x2
64018047:	cmp    DWORD PTR [ebp+0x14],ebx
6401804a:	jle    0x64018069
6401804c:	mov    ecx,DWORD PTR [ebp+0x14]
6401804f:	mov    eax,DWORD PTR [ebp+0x10]
64018052:	dec    ecx
64018053:	cmp    WORD PTR [eax],bx
64018056:	je     0x64018061
64018058:	inc    eax
64018059:	inc    eax
6401805a:	cmp    ecx,ebx
6401805c:	jne    0x64018052
6401805e:	or     ecx,0xffffffff
64018061:	or     eax,0xffffffff
64018064:	sub    eax,ecx
64018066:	add    DWORD PTR [ebp+0x14],eax
64018069:	mov    eax,ds:0x6402e958
6401806e:	cmp    eax,0x1
64018071:	jne    0x6401808c
64018073:	push   DWORD PTR [ebp+0x1c]
64018076:	push   DWORD PTR [ebp+0x18]
64018079:	push   DWORD PTR [ebp+0x14]
6401807c:	push   DWORD PTR [ebp+0x10]
6401807f:	push   DWORD PTR [ebp+0xc]
64018082:	push   DWORD PTR [ebp+0x8]
64018085:	call   esi
64018087:	jmp    0x6401823b
6401808c:	cmp    eax,0x2
6401808f:	je     0x64018095
64018091:	cmp    eax,ebx
64018093:	jne    0x640180e7
64018095:	cmp    DWORD PTR [ebp+0x8],ebx
64018098:	mov    DWORD PTR [ebp-0xc],ebx
6401809b:	jne    0x640180a5
6401809d:	mov    eax,DWORD PTR [edi]
6401809f:	mov    eax,DWORD PTR [eax+0x14]
640180a2:	mov    DWORD PTR [ebp+0x8],eax
640180a5:	cmp    DWORD PTR [ebp+0x20],ebx
640180a8:	jne    0x640180b2
640180aa:	mov    eax,DWORD PTR [edi]
640180ac:	mov    eax,DWORD PTR [eax+0x4]
640180af:	mov    DWORD PTR [ebp+0x20],eax
640180b2:	push   DWORD PTR [ebp+0x8]
640180b5:	call   0x6401d62f
640180ba:	cmp    DWORD PTR [ebp+0x20],eax
640180bd:	pop    ecx
640180be:	je     0x640180c8
640180c0:	cmp    eax,0xffffffff
640180c3:	je     0x640180c8
640180c5:	mov    DWORD PTR [ebp+0x20],eax
640180c8:	mov    esi,DWORD PTR ds:0x64025028
640180ce:	push   ebx
640180cf:	push   ebx
640180d0:	push   ebx
640180d1:	push   ebx
640180d2:	push   DWORD PTR [ebp+0x14]
640180d5:	push   DWORD PTR [ebp+0x10]
640180d8:	push   ebx
640180d9:	push   DWORD PTR [ebp+0x20]
640180dc:	call   esi
640180de:	mov    edi,eax
640180e0:	cmp    edi,ebx
640180e2:	mov    DWORD PTR [ebp-0x10],edi
640180e5:	jne    0x640180ee
640180e7:	xor    eax,eax
640180e9:	jmp    0x6401823b
640180ee:	jle    0x64018132
640180f0:	push   0xffffffe0
640180f2:	xor    edx,edx
640180f4:	pop    eax
640180f5:	div    edi
640180f7:	cmp    eax,0x1
640180fa:	jb     0x64018132
640180fc:	lea    eax,[edi+0x8]
640180ff:	cmp    eax,0x400
64018104:	ja     0x64018119
64018106:	call   0x64013240
6401810b:	mov    eax,esp
6401810d:	cmp    eax,ebx
6401810f:	je     0x6401812d
64018111:	mov    DWORD PTR [eax],0xcccc
64018117:	jmp    0x6401812a
64018119:	push   eax
6401811a:	call   0x64013a33
6401811f:	cmp    eax,ebx
64018121:	pop    ecx
64018122:	je     0x6401812d
64018124:	mov    DWORD PTR [eax],0xdddd
6401812a:	add    eax,0x8
6401812d:	mov    DWORD PTR [ebp-0x8],eax
64018130:	jmp    0x64018135
64018132:	mov    DWORD PTR [ebp-0x8],ebx
64018135:	cmp    DWORD PTR [ebp-0x8],ebx
64018138:	je     0x640180e7
6401813a:	push   ebx
6401813b:	push   ebx
6401813c:	push   edi
6401813d:	push   DWORD PTR [ebp-0x8]
64018140:	push   DWORD PTR [ebp+0x14]
64018143:	push   DWORD PTR [ebp+0x10]
64018146:	push   ebx
64018147:	push   DWORD PTR [ebp+0x20]
6401814a:	call   esi
6401814c:	test   eax,eax
6401814e:	je     0x6401822f
64018154:	push   ebx
64018155:	push   ebx
64018156:	push   edi
64018157:	push   DWORD PTR [ebp-0x8]
6401815a:	mov    edi,DWORD PTR ds:0x64025154
64018160:	push   DWORD PTR [ebp+0xc]
64018163:	push   DWORD PTR [ebp+0x8]
64018166:	call   edi
64018168:	mov    esi,eax
6401816a:	cmp    esi,ebx
6401816c:	je     0x6401822f
64018172:	jle    0x640181b3
64018174:	push   0xffffffe0
64018176:	xor    edx,edx
64018178:	pop    eax
64018179:	div    esi
6401817b:	cmp    eax,0x1
6401817e:	jb     0x640181b3
64018180:	lea    eax,[esi+0x8]
64018183:	cmp    eax,0x400
64018188:	ja     0x6401819d
6401818a:	call   0x64013240
6401818f:	mov    eax,esp
64018191:	cmp    eax,ebx
64018193:	je     0x640181b1
64018195:	mov    DWORD PTR [eax],0xcccc
6401819b:	jmp    0x640181ae
6401819d:	push   eax
6401819e:	call   0x64013a33
640181a3:	cmp    eax,ebx
640181a5:	pop    ecx
640181a6:	je     0x640181b1
640181a8:	mov    DWORD PTR [eax],0xdddd
640181ae:	add    eax,0x8
640181b1:	mov    ebx,eax
640181b3:	test   ebx,ebx
640181b5:	je     0x6401822f
640181b7:	push   esi
640181b8:	push   ebx
640181b9:	push   DWORD PTR [ebp-0x10]
640181bc:	push   DWORD PTR [ebp-0x8]
640181bf:	push   DWORD PTR [ebp+0xc]
640181c2:	push   DWORD PTR [ebp+0x8]
640181c5:	call   edi
640181c7:	test   eax,eax
640181c9:	je     0x64018228
640181cb:	test   WORD PTR [ebp+0xc],0x400
640181d1:	je     0x64018207
640181d3:	mov    eax,DWORD PTR [ebp+0x1c]
640181d6:	xor    edi,edi
640181d8:	cmp    eax,edi
640181da:	mov    DWORD PTR [ebp-0xc],esi
640181dd:	je     0x64018228
640181df:	cmp    eax,esi
640181e1:	jg     0x640181e6
640181e3:	lea    esi,[eax-0x1]
640181e6:	push   esi
640181e7:	push   ebx
640181e8:	push   eax
640181e9:	push   DWORD PTR [ebp+0x18]
640181ec:	call   0x6401bd06
640181f1:	add    esp,0x10
640181f4:	test   eax,eax
640181f6:	je     0x64018228
640181f8:	push   edi
640181f9:	push   edi
640181fa:	push   edi
640181fb:	push   edi
640181fc:	push   edi
640181fd:	call   0x640124f8
64018202:	add    esp,0x14
64018205:	jmp    0x64018228
64018207:	xor    eax,eax
64018209:	cmp    DWORD PTR [ebp+0x1c],eax
6401820c:	jne    0x64018212
6401820e:	push   eax
6401820f:	push   eax
64018210:	jmp    0x64018218
64018212:	push   DWORD PTR [ebp+0x1c]
64018215:	push   DWORD PTR [ebp+0x18]
64018218:	push   esi
64018219:	push   ebx
6401821a:	push   0x1
6401821c:	push   DWORD PTR [ebp+0x20]
6401821f:	call   DWORD PTR ds:0x64025024
64018225:	mov    DWORD PTR [ebp-0xc],eax
64018228:	push   ebx
64018229:	call   0x64012fcc
6401822e:	pop    ecx
6401822f:	push   DWORD PTR [ebp-0x8]
64018232:	call   0x64012fcc
64018237:	mov    eax,DWORD PTR [ebp-0xc]
6401823a:	pop    ecx
6401823b:	lea    esp,[ebp-0x1c]
6401823e:	pop    edi
6401823f:	pop    esi
64018240:	pop    ebx
64018241:	mov    ecx,DWORD PTR [ebp-0x4]
64018244:	xor    ecx,ebp
64018246:	call   0x64012abc
6401824b:	leave  
6401824c:	ret    
6401824d:	push   ebp
6401824e:	mov    ebp,esp
64018250:	sub    esp,0x10
64018253:	push   DWORD PTR [ebp+0x8]
64018256:	lea    ecx,[ebp-0x10]
64018259:	call   0x64012c5f
6401825e:	push   DWORD PTR [ebp+0x24]
64018261:	lea    ecx,[ebp-0x10]
64018264:	push   DWORD PTR [ebp+0x20]
64018267:	push   DWORD PTR [ebp+0x1c]
6401826a:	push   DWORD PTR [ebp+0x18]
6401826d:	push   DWORD PTR [ebp+0x14]
64018270:	push   DWORD PTR [ebp+0x10]
64018273:	push   DWORD PTR [ebp+0xc]
64018276:	call   0x64017fec
6401827b:	add    esp,0x1c
6401827e:	cmp    BYTE PTR [ebp-0x4],0x0
64018282:	je     0x6401828b
64018284:	mov    ecx,DWORD PTR [ebp-0x8]
64018287:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401828b:	leave  
6401828c:	ret    
6401828d:	xor    eax,eax
6401828f:	cmp    DWORD PTR [esp+0x8],eax
64018293:	jbe    0x640182a8
64018295:	mov    ecx,DWORD PTR [esp+0x4]
64018299:	cmp    WORD PTR [ecx],0x0
6401829d:	je     0x640182a8
6401829f:	inc    eax
640182a0:	inc    ecx
640182a1:	inc    ecx
640182a2:	cmp    eax,DWORD PTR [esp+0x8]
640182a6:	jb     0x64018299
640182a8:	ret    
640182a9:	push   ebp
640182aa:	mov    ebp,esp
640182ac:	sub    esp,0x4
640182af:	mov    DWORD PTR [ebp-0x4],edi
640182b2:	mov    edi,DWORD PTR [ebp+0x8]
640182b5:	mov    ecx,DWORD PTR [ebp+0xc]
640182b8:	shr    ecx,0x7
640182bb:	pxor   xmm0,xmm0
640182bf:	jmp    0x640182c9
640182c1:	lea    esp,[esp+0x0]
640182c8:	nop
640182c9:	movdqa XMMWORD PTR [edi],xmm0
640182cd:	movdqa XMMWORD PTR [edi+0x10],xmm0
640182d2:	movdqa XMMWORD PTR [edi+0x20],xmm0
640182d7:	movdqa XMMWORD PTR [edi+0x30],xmm0
640182dc:	movdqa XMMWORD PTR [edi+0x40],xmm0
640182e1:	movdqa XMMWORD PTR [edi+0x50],xmm0
640182e6:	movdqa XMMWORD PTR [edi+0x60],xmm0
640182eb:	movdqa XMMWORD PTR [edi+0x70],xmm0
640182f0:	lea    edi,[edi+0x80]
640182f6:	dec    ecx
640182f7:	jne    0x640182c9
640182f9:	mov    edi,DWORD PTR [ebp-0x4]
640182fc:	mov    esp,ebp
640182fe:	pop    ebp
640182ff:	ret    
64018300:	push   ebp
64018301:	mov    ebp,esp
64018303:	sub    esp,0x10
64018306:	mov    DWORD PTR [ebp-0x4],edi
64018309:	mov    eax,DWORD PTR [ebp+0x8]
6401830c:	cdq    
6401830d:	mov    edi,eax
6401830f:	xor    edi,edx
64018311:	sub    edi,edx
64018313:	and    edi,0xf
64018316:	xor    edi,edx
64018318:	sub    edi,edx
6401831a:	test   edi,edi
6401831c:	jne    0x6401835a
6401831e:	mov    ecx,DWORD PTR [ebp+0x10]
64018321:	mov    edx,ecx
64018323:	and    edx,0x7f
64018326:	mov    DWORD PTR [ebp-0xc],edx
64018329:	cmp    ecx,edx
6401832b:	je     0x6401833f
6401832d:	sub    ecx,edx
6401832f:	push   ecx
64018330:	push   eax
64018331:	call   0x640182a9
64018336:	add    esp,0x8
64018339:	mov    eax,DWORD PTR [ebp+0x8]
6401833c:	mov    edx,DWORD PTR [ebp-0xc]
6401833f:	test   edx,edx
64018341:	je     0x64018388
64018343:	add    eax,DWORD PTR [ebp+0x10]
64018346:	sub    eax,edx
64018348:	mov    DWORD PTR [ebp-0x8],eax
6401834b:	xor    eax,eax
6401834d:	mov    edi,DWORD PTR [ebp-0x8]
64018350:	mov    ecx,DWORD PTR [ebp-0xc]
64018353:	rep stos BYTE PTR es:[edi],al
64018355:	mov    eax,DWORD PTR [ebp+0x8]
64018358:	jmp    0x64018388
6401835a:	neg    edi
6401835c:	add    edi,0x10
6401835f:	mov    DWORD PTR [ebp-0x10],edi
64018362:	xor    eax,eax
64018364:	mov    edi,DWORD PTR [ebp+0x8]
64018367:	mov    ecx,DWORD PTR [ebp-0x10]
6401836a:	rep stos BYTE PTR es:[edi],al
6401836c:	mov    eax,DWORD PTR [ebp-0x10]
6401836f:	mov    ecx,DWORD PTR [ebp+0x8]
64018372:	mov    edx,DWORD PTR [ebp+0x10]
64018375:	add    ecx,eax
64018377:	sub    edx,eax
64018379:	push   edx
6401837a:	push   0x0
6401837c:	push   ecx
6401837d:	call   0x64018300
64018382:	add    esp,0xc
64018385:	mov    eax,DWORD PTR [ebp+0x8]
64018388:	mov    edi,DWORD PTR [ebp-0x4]
6401838b:	mov    esp,ebp
6401838d:	pop    ebp
6401838e:	ret    
6401838f:	and    DWORD PTR ds:0x64032600,0x0
64018396:	call   0x6401d878
6401839b:	mov    ds:0x64032600,eax
640183a0:	xor    eax,eax
640183a2:	ret    
640183a3:	int3   
640183a4:	int3   
640183a5:	int3   
640183a6:	int3   
640183a7:	int3   
640183a8:	int3   
640183a9:	int3   
640183aa:	int3   
640183ab:	int3   
640183ac:	int3   
640183ad:	int3   
640183ae:	int3   
640183af:	int3   
640183b0:	push   ecx
640183b1:	lea    ecx,[esp+0x4]
640183b5:	sub    ecx,eax
640183b7:	sbb    eax,eax
640183b9:	not    eax
640183bb:	and    ecx,eax
640183bd:	mov    eax,esp
640183bf:	and    eax,0xfffff000
640183c4:	cmp    ecx,eax
640183c6:	jb     0x640183d2
640183c8:	mov    eax,ecx
640183ca:	pop    ecx
640183cb:	xchg   esp,eax
640183cc:	mov    eax,DWORD PTR [eax]
640183ce:	mov    DWORD PTR [esp],eax
640183d1:	ret    
640183d2:	sub    eax,0x1000
640183d7:	test   DWORD PTR [eax],eax
640183d9:	jmp    0x640183c4
640183db:	push   0x54
640183dd:	push   0x6402a858
640183e2:	call   0x64014080
640183e7:	xor    edi,edi
640183e9:	mov    DWORD PTR [ebp-0x4],edi
640183ec:	lea    eax,[ebp-0x64]
640183ef:	push   eax
640183f0:	call   DWORD PTR ds:0x64025168
640183f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640183fd:	push   0x40
640183ff:	push   0x20
64018401:	pop    esi
64018402:	push   esi
64018403:	call   0x64015dd0
64018408:	pop    ecx
64018409:	pop    ecx
6401840a:	cmp    eax,edi
6401840c:	je     0x64018626
64018412:	mov    ds:0x64032500,eax
64018417:	mov    DWORD PTR ds:0x640324e0,esi
6401841d:	lea    ecx,[eax+0x800]
64018423:	jmp    0x64018455
64018425:	mov    BYTE PTR [eax+0x4],0x0
64018429:	or     DWORD PTR [eax],0xffffffff
6401842c:	mov    BYTE PTR [eax+0x5],0xa
64018430:	mov    DWORD PTR [eax+0x8],edi
64018433:	mov    BYTE PTR [eax+0x24],0x0
64018437:	mov    BYTE PTR [eax+0x25],0xa
6401843b:	mov    BYTE PTR [eax+0x26],0xa
6401843f:	mov    DWORD PTR [eax+0x38],edi
64018442:	mov    BYTE PTR [eax+0x34],0x0
64018446:	add    eax,0x40
64018449:	mov    ecx,DWORD PTR ds:0x64032500
6401844f:	add    ecx,0x800
64018455:	cmp    eax,ecx
64018457:	jb     0x64018425
64018459:	cmp    WORD PTR [ebp-0x32],di
6401845d:	je     0x6401856d
64018463:	mov    eax,DWORD PTR [ebp-0x30]
64018466:	cmp    eax,edi
64018468:	je     0x6401856d
6401846e:	mov    edi,DWORD PTR [eax]
64018470:	lea    ebx,[eax+0x4]
64018473:	lea    eax,[ebx+edi*1]
64018476:	mov    DWORD PTR [ebp-0x1c],eax
64018479:	mov    esi,0x800
6401847e:	cmp    edi,esi
64018480:	jl     0x64018484
64018482:	mov    edi,esi
64018484:	mov    DWORD PTR [ebp-0x20],0x1
6401848b:	jmp    0x640184e8
6401848d:	push   0x40
6401848f:	push   0x20
64018491:	call   0x64015dd0
64018496:	pop    ecx
64018497:	pop    ecx
64018498:	test   eax,eax
6401849a:	je     0x640184f2
6401849c:	mov    ecx,DWORD PTR [ebp-0x20]
6401849f:	lea    ecx,[ecx*4+0x64032500]
640184a6:	mov    DWORD PTR [ecx],eax
640184a8:	add    DWORD PTR ds:0x640324e0,0x20
640184af:	lea    edx,[eax+0x800]
640184b5:	jmp    0x640184e1
640184b7:	mov    BYTE PTR [eax+0x4],0x0
640184bb:	or     DWORD PTR [eax],0xffffffff
640184be:	mov    BYTE PTR [eax+0x5],0xa
640184c2:	and    DWORD PTR [eax+0x8],0x0
640184c6:	and    BYTE PTR [eax+0x24],0x80
640184ca:	mov    BYTE PTR [eax+0x25],0xa
640184ce:	mov    BYTE PTR [eax+0x26],0xa
640184d2:	and    DWORD PTR [eax+0x38],0x0
640184d6:	mov    BYTE PTR [eax+0x34],0x0
640184da:	add    eax,0x40
640184dd:	mov    edx,DWORD PTR [ecx]
640184df:	add    edx,esi
640184e1:	cmp    eax,edx
640184e3:	jb     0x640184b7
640184e5:	inc    DWORD PTR [ebp-0x20]
640184e8:	cmp    DWORD PTR ds:0x640324e0,edi
640184ee:	jl     0x6401848d
640184f0:	jmp    0x640184f8
640184f2:	mov    edi,DWORD PTR ds:0x640324e0
640184f8:	and    DWORD PTR [ebp-0x20],0x0
640184fc:	test   edi,edi
640184fe:	jle    0x6401856d
64018500:	mov    eax,DWORD PTR [ebp-0x1c]
64018503:	mov    ecx,DWORD PTR [eax]
64018505:	cmp    ecx,0xffffffff
64018508:	je     0x64018560
6401850a:	cmp    ecx,0xfffffffe
6401850d:	je     0x64018560
6401850f:	mov    al,BYTE PTR [ebx]
64018511:	test   al,0x1
64018513:	je     0x64018560
64018515:	test   al,0x8
64018517:	jne    0x64018524
64018519:	push   ecx
6401851a:	call   DWORD PTR ds:0x64025164
64018520:	test   eax,eax
64018522:	je     0x64018560
64018524:	mov    esi,DWORD PTR [ebp-0x20]
64018527:	mov    eax,esi
64018529:	sar    eax,0x5
6401852c:	and    esi,0x1f
6401852f:	shl    esi,0x6
64018532:	add    esi,DWORD PTR [eax*4+0x64032500]
64018539:	mov    eax,DWORD PTR [ebp-0x1c]
6401853c:	mov    eax,DWORD PTR [eax]
6401853e:	mov    DWORD PTR [esi],eax
64018540:	mov    al,BYTE PTR [ebx]
64018542:	mov    BYTE PTR [esi+0x4],al
64018545:	push   0xfa0
6401854a:	lea    eax,[esi+0xc]
6401854d:	push   eax
6401854e:	call   0x6401b738
64018553:	pop    ecx
64018554:	pop    ecx
64018555:	test   eax,eax
64018557:	je     0x64018626
6401855d:	inc    DWORD PTR [esi+0x8]
64018560:	inc    DWORD PTR [ebp-0x20]
64018563:	inc    ebx
64018564:	add    DWORD PTR [ebp-0x1c],0x4
64018568:	cmp    DWORD PTR [ebp-0x20],edi
6401856b:	jl     0x64018500
6401856d:	xor    ebx,ebx
6401856f:	mov    esi,ebx
64018571:	shl    esi,0x6
64018574:	add    esi,DWORD PTR ds:0x64032500
6401857a:	mov    eax,DWORD PTR [esi]
6401857c:	cmp    eax,0xffffffff
6401857f:	je     0x6401858c
64018581:	cmp    eax,0xfffffffe
64018584:	je     0x6401858c
64018586:	or     BYTE PTR [esi+0x4],0x80
6401858a:	jmp    0x640185fe
6401858c:	mov    BYTE PTR [esi+0x4],0x81
64018590:	test   ebx,ebx
64018592:	jne    0x64018599
64018594:	push   0xfffffff6
64018596:	pop    eax
64018597:	jmp    0x640185a3
64018599:	mov    eax,ebx
6401859b:	dec    eax
6401859c:	neg    eax
6401859e:	sbb    eax,eax
640185a0:	add    eax,0xfffffff5
640185a3:	push   eax
640185a4:	call   DWORD PTR ds:0x64025160
640185aa:	mov    edi,eax
640185ac:	cmp    edi,0xffffffff
640185af:	je     0x640185f4
640185b1:	test   edi,edi
640185b3:	je     0x640185f4
640185b5:	push   edi
640185b6:	call   DWORD PTR ds:0x64025164
640185bc:	test   eax,eax
640185be:	je     0x640185f4
640185c0:	mov    DWORD PTR [esi],edi
640185c2:	and    eax,0xff
640185c7:	cmp    eax,0x2
640185ca:	jne    0x640185d2
640185cc:	or     BYTE PTR [esi+0x4],0x40
640185d0:	jmp    0x640185db
640185d2:	cmp    eax,0x3
640185d5:	jne    0x640185db
640185d7:	or     BYTE PTR [esi+0x4],0x8
640185db:	push   0xfa0
640185e0:	lea    eax,[esi+0xc]
640185e3:	push   eax
640185e4:	call   0x6401b738
640185e9:	pop    ecx
640185ea:	pop    ecx
640185eb:	test   eax,eax
640185ed:	je     0x64018626
640185ef:	inc    DWORD PTR [esi+0x8]
640185f2:	jmp    0x640185fe
640185f4:	or     BYTE PTR [esi+0x4],0x40
640185f8:	mov    DWORD PTR [esi],0xfffffffe
640185fe:	inc    ebx
640185ff:	cmp    ebx,0x3
64018602:	jl     0x6401856f
64018608:	push   DWORD PTR ds:0x640324e0
6401860e:	call   DWORD PTR ds:0x6402515c
64018614:	xor    eax,eax
64018616:	jmp    0x64018629
64018618:	xor    eax,eax
6401861a:	inc    eax
6401861b:	ret    
6401861c:	mov    esp,DWORD PTR [ebp-0x18]
6401861f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018626:	or     eax,0xffffffff
64018629:	call   0x640140c5
6401862e:	ret    
6401862f:	push   esi
64018630:	push   edi
64018631:	mov    esi,0x64032500
64018636:	mov    edi,DWORD PTR [esi]
64018638:	test   edi,edi
6401863a:	je     0x6401866d
6401863c:	lea    eax,[edi+0x800]
64018642:	jmp    0x6401865e
64018644:	cmp    DWORD PTR [edi+0x8],0x0
64018648:	je     0x64018654
6401864a:	lea    eax,[edi+0xc]
6401864d:	push   eax
6401864e:	call   DWORD PTR ds:0x640250a0
64018654:	mov    eax,DWORD PTR [esi]
64018656:	add    edi,0x40
64018659:	add    eax,0x800
6401865e:	cmp    edi,eax
64018660:	jb     0x64018644
64018662:	push   DWORD PTR [esi]
64018664:	call   0x64013956
64018669:	and    DWORD PTR [esi],0x0
6401866c:	pop    ecx
6401866d:	add    esi,0x4
64018670:	cmp    esi,0x64032600
64018676:	jl     0x64018636
64018678:	pop    edi
64018679:	pop    esi
6401867a:	ret    
6401867b:	push   ebx
6401867c:	xor    ebx,ebx
6401867e:	cmp    DWORD PTR ds:0x64032614,ebx
64018684:	push   esi
64018685:	push   edi
64018686:	jne    0x6401868d
64018688:	call   0x640168a1
6401868d:	mov    esi,DWORD PTR ds:0x6402e574
64018693:	xor    edi,edi
64018695:	cmp    esi,ebx
64018697:	jne    0x640186b1
64018699:	or     eax,0xffffffff
6401869c:	jmp    0x6401873c
640186a1:	cmp    al,0x3d
640186a3:	je     0x640186a6
640186a5:	inc    edi
640186a6:	push   esi
640186a7:	call   0x64014280
640186ac:	pop    ecx
640186ad:	lea    esi,[esi+eax*1+0x1]
640186b1:	mov    al,BYTE PTR [esi]
640186b3:	cmp    al,bl
640186b5:	jne    0x640186a1
640186b7:	push   0x4
640186b9:	inc    edi
640186ba:	push   edi
640186bb:	call   0x64015dd0
640186c0:	mov    edi,eax
640186c2:	cmp    edi,ebx
640186c4:	pop    ecx
640186c5:	pop    ecx
640186c6:	mov    DWORD PTR ds:0x6402e8f4,edi
640186cc:	je     0x64018699
640186ce:	mov    esi,DWORD PTR ds:0x6402e574
640186d4:	push   ebp
640186d5:	jmp    0x64018717
640186d7:	push   esi
640186d8:	call   0x64014280
640186dd:	mov    ebp,eax
640186df:	inc    ebp
640186e0:	cmp    BYTE PTR [esi],0x3d
640186e3:	pop    ecx
640186e4:	je     0x64018715
640186e6:	push   0x1
640186e8:	push   ebp
640186e9:	call   0x64015dd0
640186ee:	cmp    eax,ebx
640186f0:	pop    ecx
640186f1:	pop    ecx
640186f2:	mov    DWORD PTR [edi],eax
640186f4:	je     0x64018740
640186f6:	push   esi
640186f7:	push   ebp
640186f8:	push   eax
640186f9:	call   0x64014478
640186fe:	add    esp,0xc
64018701:	test   eax,eax
64018703:	je     0x64018712
64018705:	push   ebx
64018706:	push   ebx
64018707:	push   ebx
64018708:	push   ebx
64018709:	push   ebx
6401870a:	call   0x640124f8
6401870f:	add    esp,0x14
64018712:	add    edi,0x4
64018715:	add    esi,ebp
64018717:	cmp    BYTE PTR [esi],bl
64018719:	jne    0x640186d7
6401871b:	push   DWORD PTR ds:0x6402e574
64018721:	call   0x64013956
64018726:	mov    DWORD PTR ds:0x6402e574,ebx
6401872c:	mov    DWORD PTR [edi],ebx
6401872e:	mov    DWORD PTR ds:0x64032608,0x1
64018738:	xor    eax,eax
6401873a:	pop    ecx
6401873b:	pop    ebp
6401873c:	pop    edi
6401873d:	pop    esi
6401873e:	pop    ebx
6401873f:	ret    
64018740:	push   DWORD PTR ds:0x6402e8f4
64018746:	call   0x64013956
6401874b:	mov    DWORD PTR ds:0x6402e8f4,ebx
64018751:	or     eax,0xffffffff
64018754:	jmp    0x6401873a
64018756:	push   ebp
64018757:	mov    ebp,esp
64018759:	push   ecx
6401875a:	mov    ecx,DWORD PTR [ebp+0x10]
6401875d:	push   ebx
6401875e:	xor    eax,eax
64018760:	cmp    DWORD PTR [ebp+0x8],eax
64018763:	push   esi
64018764:	mov    DWORD PTR [edi],eax
64018766:	mov    esi,edx
64018768:	mov    edx,DWORD PTR [ebp+0xc]
6401876b:	mov    DWORD PTR [ecx],0x1
64018771:	je     0x6401877c
64018773:	mov    ebx,DWORD PTR [ebp+0x8]
64018776:	add    DWORD PTR [ebp+0x8],0x4
6401877a:	mov    DWORD PTR [ebx],edx
6401877c:	mov    DWORD PTR [ebp-0x4],eax
6401877f:	cmp    BYTE PTR [esi],0x22
64018782:	jne    0x64018794
64018784:	xor    eax,eax
64018786:	cmp    DWORD PTR [ebp-0x4],eax
64018789:	mov    bl,0x22
6401878b:	sete   al
6401878e:	inc    esi
6401878f:	mov    DWORD PTR [ebp-0x4],eax
64018792:	jmp    0x640187d0
64018794:	inc    DWORD PTR [edi]
64018796:	test   edx,edx
64018798:	je     0x640187a2
6401879a:	mov    al,BYTE PTR [esi]
6401879c:	mov    BYTE PTR [edx],al
6401879e:	inc    edx
6401879f:	mov    DWORD PTR [ebp+0xc],edx
640187a2:	mov    bl,BYTE PTR [esi]
640187a4:	movzx  eax,bl
640187a7:	push   eax
640187a8:	inc    esi
640187a9:	call   0x6401d936
640187ae:	test   eax,eax
640187b0:	pop    ecx
640187b1:	je     0x640187c6
640187b3:	inc    DWORD PTR [edi]
640187b5:	cmp    DWORD PTR [ebp+0xc],0x0
640187b9:	je     0x640187c5
640187bb:	mov    ecx,DWORD PTR [ebp+0xc]
640187be:	mov    al,BYTE PTR [esi]
640187c0:	inc    DWORD PTR [ebp+0xc]
640187c3:	mov    BYTE PTR [ecx],al
640187c5:	inc    esi
640187c6:	test   bl,bl
640187c8:	mov    edx,DWORD PTR [ebp+0xc]
640187cb:	mov    ecx,DWORD PTR [ebp+0x10]
640187ce:	je     0x64018802
640187d0:	cmp    DWORD PTR [ebp-0x4],0x0
640187d4:	jne    0x6401877f
640187d6:	cmp    bl,0x20
640187d9:	je     0x640187e0
640187db:	cmp    bl,0x9
640187de:	jne    0x6401877f
640187e0:	test   edx,edx
640187e2:	je     0x640187e8
640187e4:	mov    BYTE PTR [edx-0x1],0x0
640187e8:	and    DWORD PTR [ebp-0x4],0x0
640187ec:	cmp    BYTE PTR [esi],0x0
640187ef:	je     0x640188de
640187f5:	mov    al,BYTE PTR [esi]
640187f7:	cmp    al,0x20
640187f9:	je     0x640187ff
640187fb:	cmp    al,0x9
640187fd:	jne    0x64018805
640187ff:	inc    esi
64018800:	jmp    0x640187f5
64018802:	dec    esi
64018803:	jmp    0x640187e8
64018805:	cmp    BYTE PTR [esi],0x0
64018808:	je     0x640188de
6401880e:	cmp    DWORD PTR [ebp+0x8],0x0
64018812:	je     0x6401881d
64018814:	mov    eax,DWORD PTR [ebp+0x8]
64018817:	add    DWORD PTR [ebp+0x8],0x4
6401881b:	mov    DWORD PTR [eax],edx
6401881d:	inc    DWORD PTR [ecx]
6401881f:	xor    ebx,ebx
64018821:	inc    ebx
64018822:	xor    ecx,ecx
64018824:	jmp    0x64018828
64018826:	inc    esi
64018827:	inc    ecx
64018828:	cmp    BYTE PTR [esi],0x5c
6401882b:	je     0x64018826
6401882d:	cmp    BYTE PTR [esi],0x22
64018830:	jne    0x64018858
64018832:	test   cl,0x1
64018835:	jne    0x64018856
64018837:	cmp    DWORD PTR [ebp-0x4],0x0
6401883b:	je     0x64018849
6401883d:	lea    eax,[esi+0x1]
64018840:	cmp    BYTE PTR [eax],0x22
64018843:	jne    0x64018849
64018845:	mov    esi,eax
64018847:	jmp    0x64018856
64018849:	xor    eax,eax
6401884b:	xor    ebx,ebx
6401884d:	cmp    DWORD PTR [ebp-0x4],eax
64018850:	sete   al
64018853:	mov    DWORD PTR [ebp-0x4],eax
64018856:	shr    ecx,1
64018858:	test   ecx,ecx
6401885a:	je     0x6401886e
6401885c:	dec    ecx
6401885d:	test   edx,edx
6401885f:	je     0x64018865
64018861:	mov    BYTE PTR [edx],0x5c
64018864:	inc    edx
64018865:	inc    DWORD PTR [edi]
64018867:	test   ecx,ecx
64018869:	jne    0x6401885c
6401886b:	mov    DWORD PTR [ebp+0xc],edx
6401886e:	mov    al,BYTE PTR [esi]
64018870:	test   al,al
64018872:	je     0x640188c9
64018874:	cmp    DWORD PTR [ebp-0x4],0x0
64018878:	jne    0x64018882
6401887a:	cmp    al,0x20
6401887c:	je     0x640188c9
6401887e:	cmp    al,0x9
64018880:	je     0x640188c9
64018882:	test   ebx,ebx
64018884:	je     0x640188c3
64018886:	test   edx,edx
64018888:	movsx  eax,al
6401888b:	push   eax
6401888c:	je     0x640188b1
6401888e:	call   0x6401d936
64018893:	test   eax,eax
64018895:	pop    ecx
64018896:	je     0x640188a5
64018898:	mov    al,BYTE PTR [esi]
6401889a:	mov    ecx,DWORD PTR [ebp+0xc]
6401889d:	inc    DWORD PTR [ebp+0xc]
640188a0:	mov    BYTE PTR [ecx],al
640188a2:	inc    esi
640188a3:	inc    DWORD PTR [edi]
640188a5:	mov    ecx,DWORD PTR [ebp+0xc]
640188a8:	mov    al,BYTE PTR [esi]
640188aa:	inc    DWORD PTR [ebp+0xc]
640188ad:	mov    BYTE PTR [ecx],al
640188af:	jmp    0x640188be
640188b1:	call   0x6401d936
640188b6:	test   eax,eax
640188b8:	pop    ecx
640188b9:	je     0x640188be
640188bb:	inc    esi
640188bc:	inc    DWORD PTR [edi]
640188be:	inc    DWORD PTR [edi]
640188c0:	mov    edx,DWORD PTR [ebp+0xc]
640188c3:	inc    esi
640188c4:	jmp    0x6401881f
640188c9:	test   edx,edx
640188cb:	je     0x640188d4
640188cd:	mov    BYTE PTR [edx],0x0
640188d0:	inc    edx
640188d1:	mov    DWORD PTR [ebp+0xc],edx
640188d4:	inc    DWORD PTR [edi]
640188d6:	mov    ecx,DWORD PTR [ebp+0x10]
640188d9:	jmp    0x640187ec
640188de:	mov    eax,DWORD PTR [ebp+0x8]
640188e1:	test   eax,eax
640188e3:	pop    esi
640188e4:	pop    ebx
640188e5:	je     0x640188ea
640188e7:	and    DWORD PTR [eax],0x0
640188ea:	inc    DWORD PTR [ecx]
640188ec:	leave  
640188ed:	ret    
640188ee:	push   ebp
640188ef:	mov    ebp,esp
640188f1:	sub    esp,0xc
640188f4:	push   ebx
640188f5:	xor    ebx,ebx
640188f7:	cmp    DWORD PTR ds:0x64032614,ebx
640188fd:	push   esi
640188fe:	push   edi
640188ff:	jne    0x64018906
64018901:	call   0x640168a1
64018906:	push   0x104
6401890b:	mov    esi,0x6402e960
64018910:	push   esi
64018911:	push   ebx
64018912:	mov    BYTE PTR ds:0x6402ea64,bl
64018918:	call   DWORD PTR ds:0x6402516c
6401891e:	mov    eax,ds:0x64032620
64018923:	cmp    eax,ebx
64018925:	mov    DWORD PTR ds:0x6402e904,esi
6401892b:	je     0x64018934
6401892d:	cmp    BYTE PTR [eax],bl
6401892f:	mov    DWORD PTR [ebp-0x4],eax
64018932:	jne    0x64018937
64018934:	mov    DWORD PTR [ebp-0x4],esi
64018937:	mov    edx,DWORD PTR [ebp-0x4]
6401893a:	lea    eax,[ebp-0x8]
6401893d:	push   eax
6401893e:	push   ebx
6401893f:	push   ebx
64018940:	lea    edi,[ebp-0xc]
64018943:	call   0x64018756
64018948:	mov    eax,DWORD PTR [ebp-0x8]
6401894b:	add    esp,0xc
6401894e:	cmp    eax,0x3fffffff
64018953:	jae    0x6401899f
64018955:	mov    ecx,DWORD PTR [ebp-0xc]
64018958:	cmp    ecx,0xffffffff
6401895b:	jae    0x6401899f
6401895d:	mov    edi,eax
6401895f:	shl    edi,0x2
64018962:	lea    eax,[edi+ecx*1]
64018965:	cmp    eax,ecx
64018967:	jb     0x6401899f
64018969:	push   eax
6401896a:	call   0x64015d90
6401896f:	mov    esi,eax
64018971:	cmp    esi,ebx
64018973:	pop    ecx
64018974:	je     0x6401899f
64018976:	mov    edx,DWORD PTR [ebp-0x4]
64018979:	lea    eax,[ebp-0x8]
6401897c:	push   eax
6401897d:	add    edi,esi
6401897f:	push   edi
64018980:	push   esi
64018981:	lea    edi,[ebp-0xc]
64018984:	call   0x64018756
64018989:	mov    eax,DWORD PTR [ebp-0x8]
6401898c:	add    esp,0xc
6401898f:	dec    eax
64018990:	mov    ds:0x6402e8e8,eax
64018995:	mov    DWORD PTR ds:0x6402e8ec,esi
6401899b:	xor    eax,eax
6401899d:	jmp    0x640189a2
6401899f:	or     eax,0xffffffff
640189a2:	pop    edi
640189a3:	pop    esi
640189a4:	pop    ebx
640189a5:	leave  
640189a6:	ret    
640189a7:	push   ecx
640189a8:	push   ecx
640189a9:	mov    eax,ds:0x6402ea68
640189ae:	push   ebx
640189af:	push   ebp
640189b0:	push   esi
640189b1:	push   edi
640189b2:	mov    edi,DWORD PTR ds:0x64025084
640189b8:	xor    ebx,ebx
640189ba:	xor    esi,esi
640189bc:	cmp    eax,ebx
640189be:	push   0x2
640189c0:	pop    ebp
640189c1:	jne    0x640189f0
640189c3:	call   edi
640189c5:	mov    esi,eax
640189c7:	cmp    esi,ebx
640189c9:	je     0x640189d7
640189cb:	mov    DWORD PTR ds:0x6402ea68,0x1
640189d5:	jmp    0x640189f9
640189d7:	call   DWORD PTR ds:0x64025044
640189dd:	cmp    eax,0x78
640189e0:	jne    0x640189eb
640189e2:	mov    eax,ebp
640189e4:	mov    ds:0x6402ea68,eax
640189e9:	jmp    0x640189f0
640189eb:	mov    eax,ds:0x6402ea68
640189f0:	cmp    eax,0x1
640189f3:	jne    0x64018a7d
640189f9:	cmp    esi,ebx
640189fb:	jne    0x64018a0c
640189fd:	call   edi
640189ff:	mov    esi,eax
64018a01:	cmp    esi,ebx
64018a03:	jne    0x64018a0c
64018a05:	xor    eax,eax
64018a07:	jmp    0x64018ad5
64018a0c:	cmp    WORD PTR [esi],bx
64018a0f:	mov    eax,esi
64018a11:	je     0x64018a21
64018a13:	add    eax,ebp
64018a15:	cmp    WORD PTR [eax],bx
64018a18:	jne    0x64018a13
64018a1a:	add    eax,ebp
64018a1c:	cmp    WORD PTR [eax],bx
64018a1f:	jne    0x64018a13
64018a21:	mov    edi,DWORD PTR ds:0x64025028
64018a27:	push   ebx
64018a28:	push   ebx
64018a29:	push   ebx
64018a2a:	sub    eax,esi
64018a2c:	push   ebx
64018a2d:	sar    eax,1
64018a2f:	inc    eax
64018a30:	push   eax
64018a31:	push   esi
64018a32:	push   ebx
64018a33:	push   ebx
64018a34:	mov    DWORD PTR [esp+0x34],eax
64018a38:	call   edi
64018a3a:	mov    ebp,eax
64018a3c:	cmp    ebp,ebx
64018a3e:	je     0x64018a72
64018a40:	push   ebp
64018a41:	call   0x64015d90
64018a46:	cmp    eax,ebx
64018a48:	pop    ecx
64018a49:	mov    DWORD PTR [esp+0x10],eax
64018a4d:	je     0x64018a72
64018a4f:	push   ebx
64018a50:	push   ebx
64018a51:	push   ebp
64018a52:	push   eax
64018a53:	push   DWORD PTR [esp+0x24]
64018a57:	push   esi
64018a58:	push   ebx
64018a59:	push   ebx
64018a5a:	call   edi
64018a5c:	test   eax,eax
64018a5e:	jne    0x64018a6e
64018a60:	push   DWORD PTR [esp+0x10]
64018a64:	call   0x64013956
64018a69:	pop    ecx
64018a6a:	mov    DWORD PTR [esp+0x10],ebx
64018a6e:	mov    ebx,DWORD PTR [esp+0x10]
64018a72:	push   esi
64018a73:	call   DWORD PTR ds:0x64025178
64018a79:	mov    eax,ebx
64018a7b:	jmp    0x64018ad5
64018a7d:	cmp    eax,ebp
64018a7f:	je     0x64018a85
64018a81:	cmp    eax,ebx
64018a83:	jne    0x64018a05
64018a85:	call   DWORD PTR ds:0x64025174
64018a8b:	mov    esi,eax
64018a8d:	cmp    esi,ebx
64018a8f:	je     0x64018a05
64018a95:	cmp    BYTE PTR [esi],bl
64018a97:	je     0x64018aa3
64018a99:	inc    eax
64018a9a:	cmp    BYTE PTR [eax],bl
64018a9c:	jne    0x64018a99
64018a9e:	inc    eax
64018a9f:	cmp    BYTE PTR [eax],bl
64018aa1:	jne    0x64018a99
64018aa3:	sub    eax,esi
64018aa5:	inc    eax
64018aa6:	mov    ebp,eax
64018aa8:	push   ebp
64018aa9:	call   0x64015d90
64018aae:	mov    edi,eax
64018ab0:	cmp    edi,ebx
64018ab2:	pop    ecx
64018ab3:	jne    0x64018ac1
64018ab5:	push   esi
64018ab6:	call   DWORD PTR ds:0x64025170
64018abc:	jmp    0x64018a05
64018ac1:	push   ebp
64018ac2:	push   esi
64018ac3:	push   edi
64018ac4:	call   0x640144e0
64018ac9:	add    esp,0xc
64018acc:	push   esi
64018acd:	call   DWORD PTR ds:0x64025170
64018ad3:	mov    eax,edi
64018ad5:	pop    edi
64018ad6:	pop    esi
64018ad7:	pop    ebp
64018ad8:	pop    ebx
64018ad9:	pop    ecx
64018ada:	pop    ecx
64018adb:	ret    
64018adc:	push   esi
64018add:	push   edi
64018ade:	mov    eax,0x6402a038
64018ae3:	mov    edi,0x6402a038
64018ae8:	cmp    eax,edi
64018aea:	mov    esi,eax
64018aec:	jae    0x64018afd
64018aee:	mov    eax,DWORD PTR [esi]
64018af0:	test   eax,eax
64018af2:	je     0x64018af6
64018af4:	call   eax
64018af6:	add    esi,0x4
64018af9:	cmp    esi,edi
64018afb:	jb     0x64018aee
64018afd:	pop    edi
64018afe:	pop    esi
64018aff:	ret    
64018b00:	push   esi
64018b01:	push   edi
64018b02:	mov    eax,0x6402a040
64018b07:	mov    edi,0x6402a040
64018b0c:	cmp    eax,edi
64018b0e:	mov    esi,eax
64018b10:	jae    0x64018b21
64018b12:	mov    eax,DWORD PTR [esi]
64018b14:	test   eax,eax
64018b16:	je     0x64018b1a
64018b18:	call   eax
64018b1a:	add    esi,0x4
64018b1d:	cmp    esi,edi
64018b1f:	jb     0x64018b12
64018b21:	pop    edi
64018b22:	pop    esi
64018b23:	ret    
64018b24:	push   ebp
64018b25:	mov    ebp,esp
64018b27:	push   ecx
64018b28:	push   ecx
64018b29:	push   esi
64018b2a:	lea    eax,[ebp-0x4]
64018b2d:	xor    esi,esi
64018b2f:	push   eax
64018b30:	mov    DWORD PTR [ebp-0x4],esi
64018b33:	mov    DWORD PTR [ebp-0x8],esi
64018b36:	call   0x64015faf
64018b3b:	test   eax,eax
64018b3d:	pop    ecx
64018b3e:	je     0x64018b4d
64018b40:	push   esi
64018b41:	push   esi
64018b42:	push   esi
64018b43:	push   esi
64018b44:	push   esi
64018b45:	call   0x640124f8
64018b4a:	add    esp,0x14
64018b4d:	lea    eax,[ebp-0x8]
64018b50:	push   eax
64018b51:	call   0x64015fe6
64018b56:	test   eax,eax
64018b58:	pop    ecx
64018b59:	je     0x64018b68
64018b5b:	push   esi
64018b5c:	push   esi
64018b5d:	push   esi
64018b5e:	push   esi
64018b5f:	push   esi
64018b60:	call   0x640124f8
64018b65:	add    esp,0x14
64018b68:	cmp    DWORD PTR [ebp-0x4],0x2
64018b6c:	pop    esi
64018b6d:	jne    0x64018b7a
64018b6f:	cmp    DWORD PTR [ebp-0x8],0x5
64018b73:	jb     0x64018b7a
64018b75:	xor    eax,eax
64018b77:	inc    eax
64018b78:	leave  
64018b79:	ret    
64018b7a:	push   0x3
64018b7c:	pop    eax
64018b7d:	leave  
64018b7e:	ret    
64018b7f:	xor    eax,eax
64018b81:	cmp    DWORD PTR [esp+0x4],eax
64018b85:	push   0x0
64018b87:	sete   al
64018b8a:	push   0x1000
64018b8f:	push   eax
64018b90:	call   DWORD PTR ds:0x6402517c
64018b96:	test   eax,eax
64018b98:	mov    ds:0x6402ea6c,eax
64018b9d:	jne    0x64018ba2
64018b9f:	xor    eax,eax
64018ba1:	ret    
64018ba2:	call   0x64018b24
64018ba7:	cmp    eax,0x3
64018baa:	mov    ds:0x640324dc,eax
64018baf:	jne    0x64018bd5
64018bb1:	push   0x3f8
64018bb6:	call   0x6401a0ab
64018bbb:	test   eax,eax
64018bbd:	pop    ecx
64018bbe:	jne    0x64018bd5
64018bc0:	push   DWORD PTR ds:0x6402ea6c
64018bc6:	call   DWORD PTR ds:0x640250fc
64018bcc:	and    DWORD PTR ds:0x6402ea6c,0x0
64018bd3:	jmp    0x64018b9f
64018bd5:	xor    eax,eax
64018bd7:	inc    eax
64018bd8:	ret    
64018bd9:	push   ebp
64018bda:	xor    ebp,ebp
64018bdc:	cmp    DWORD PTR ds:0x640324dc,0x3
64018be3:	jne    0x64018c39
64018be5:	push   ebx
64018be6:	mov    ebx,DWORD PTR ds:0x64025104
64018bec:	push   edi
64018bed:	xor    edi,edi
64018bef:	cmp    DWORD PTR ds:0x640324c4,ebp
64018bf5:	jle    0x64018c28
64018bf7:	push   esi
64018bf8:	mov    esi,DWORD PTR ds:0x640324c8
64018bfe:	add    esi,0x10
64018c01:	push   0x8000
64018c06:	push   ebp
64018c07:	push   DWORD PTR [esi-0x4]
64018c0a:	call   DWORD PTR ds:0x64025180
64018c10:	push   DWORD PTR [esi]
64018c12:	push   ebp
64018c13:	push   DWORD PTR ds:0x6402ea6c
64018c19:	call   ebx
64018c1b:	add    esi,0x14
64018c1e:	inc    edi
64018c1f:	cmp    edi,DWORD PTR ds:0x640324c4
64018c25:	jl     0x64018c01
64018c27:	pop    esi
64018c28:	push   DWORD PTR ds:0x640324c8
64018c2e:	push   ebp
64018c2f:	push   DWORD PTR ds:0x6402ea6c
64018c35:	call   ebx
64018c37:	pop    edi
64018c38:	pop    ebx
64018c39:	push   DWORD PTR ds:0x6402ea6c
64018c3f:	call   DWORD PTR ds:0x640250fc
64018c45:	mov    DWORD PTR ds:0x6402ea6c,ebp
64018c4b:	pop    ebp
64018c4c:	ret    
64018c4d:	push   ebp
64018c4e:	mov    ebp,esp
64018c50:	push   ecx
64018c51:	push   ecx
64018c52:	push   esi
64018c53:	call   0x64014b54
64018c58:	mov    esi,eax
64018c5a:	test   esi,esi
64018c5c:	je     0x64018da8
64018c62:	mov    edx,DWORD PTR [esi+0x5c]
64018c65:	mov    eax,ds:0x6402d94c
64018c6a:	push   edi
64018c6b:	mov    edi,DWORD PTR [ebp+0x8]
64018c6e:	mov    ecx,edx
64018c70:	push   ebx
64018c71:	cmp    DWORD PTR [ecx],edi
64018c73:	je     0x64018c83
64018c75:	mov    ebx,eax
64018c77:	imul   ebx,ebx,0xc
64018c7a:	add    ecx,0xc
64018c7d:	add    ebx,edx
64018c7f:	cmp    ecx,ebx
64018c81:	jb     0x64018c71
64018c83:	imul   eax,eax,0xc
64018c86:	add    eax,edx
64018c88:	cmp    ecx,eax
64018c8a:	jae    0x64018c94
64018c8c:	cmp    DWORD PTR [ecx],edi
64018c8e:	jne    0x64018c94
64018c90:	mov    eax,ecx
64018c92:	jmp    0x64018c96
64018c94:	xor    eax,eax
64018c96:	test   eax,eax
64018c98:	je     0x64018ca4
64018c9a:	mov    ebx,DWORD PTR [eax+0x8]
64018c9d:	test   ebx,ebx
64018c9f:	mov    DWORD PTR [ebp-0x4],ebx
64018ca2:	jne    0x64018cab
64018ca4:	xor    eax,eax
64018ca6:	jmp    0x64018da6
64018cab:	cmp    ebx,0x5
64018cae:	jne    0x64018cbc
64018cb0:	and    DWORD PTR [eax+0x8],0x0
64018cb4:	xor    eax,eax
64018cb6:	inc    eax
64018cb7:	jmp    0x64018da6
64018cbc:	cmp    ebx,0x1
64018cbf:	je     0x64018da3
64018cc5:	mov    ecx,DWORD PTR [esi+0x60]
64018cc8:	mov    DWORD PTR [ebp-0x8],ecx
64018ccb:	mov    ecx,DWORD PTR [ebp+0xc]
64018cce:	mov    DWORD PTR [esi+0x60],ecx
64018cd1:	mov    ecx,DWORD PTR [eax+0x4]
64018cd4:	cmp    ecx,0x8
64018cd7:	jne    0x64018d95
64018cdd:	mov    ecx,DWORD PTR ds:0x6402d940
64018ce3:	mov    edi,DWORD PTR ds:0x6402d944
64018ce9:	mov    edx,ecx
64018ceb:	add    edi,ecx
64018ced:	cmp    edx,edi
64018cef:	jge    0x64018d15
64018cf1:	imul   ecx,ecx,0xc
64018cf4:	mov    edi,DWORD PTR [esi+0x5c]
64018cf7:	and    DWORD PTR [ecx+edi*1+0x8],0x0
64018cfc:	mov    edi,DWORD PTR ds:0x6402d940
64018d02:	mov    ebx,DWORD PTR ds:0x6402d944
64018d08:	inc    edx
64018d09:	add    ebx,edi
64018d0b:	add    ecx,0xc
64018d0e:	cmp    edx,ebx
64018d10:	jl     0x64018cf4
64018d12:	mov    ebx,DWORD PTR [ebp-0x4]
64018d15:	mov    eax,DWORD PTR [eax]
64018d17:	cmp    eax,0xc000008e
64018d1c:	mov    edi,DWORD PTR [esi+0x64]
64018d1f:	jne    0x64018d2a
64018d21:	mov    DWORD PTR [esi+0x64],0x83
64018d28:	jmp    0x64018d88
64018d2a:	cmp    eax,0xc0000090
64018d2f:	jne    0x64018d3a
64018d31:	mov    DWORD PTR [esi+0x64],0x81
64018d38:	jmp    0x64018d88
64018d3a:	cmp    eax,0xc0000091
64018d3f:	jne    0x64018d4a
64018d41:	mov    DWORD PTR [esi+0x64],0x84
64018d48:	jmp    0x64018d88
64018d4a:	cmp    eax,0xc0000093
64018d4f:	jne    0x64018d5a
64018d51:	mov    DWORD PTR [esi+0x64],0x85
64018d58:	jmp    0x64018d88
64018d5a:	cmp    eax,0xc000008d
64018d5f:	jne    0x64018d6a
64018d61:	mov    DWORD PTR [esi+0x64],0x82
64018d68:	jmp    0x64018d88
64018d6a:	cmp    eax,0xc000008f
64018d6f:	jne    0x64018d7a
64018d71:	mov    DWORD PTR [esi+0x64],0x86
64018d78:	jmp    0x64018d88
64018d7a:	cmp    eax,0xc0000092
64018d7f:	jne    0x64018d88
64018d81:	mov    DWORD PTR [esi+0x64],0x8a
64018d88:	push   DWORD PTR [esi+0x64]
64018d8b:	push   0x8
64018d8d:	call   ebx
64018d8f:	pop    ecx
64018d90:	mov    DWORD PTR [esi+0x64],edi
64018d93:	jmp    0x64018d9c
64018d95:	and    DWORD PTR [eax+0x8],0x0
64018d99:	push   ecx
64018d9a:	call   ebx
64018d9c:	mov    eax,DWORD PTR [ebp-0x8]
64018d9f:	pop    ecx
64018da0:	mov    DWORD PTR [esi+0x60],eax
64018da3:	or     eax,0xffffffff
64018da6:	pop    ebx
64018da7:	pop    edi
64018da8:	pop    esi
64018da9:	leave  
64018daa:	ret    
64018dab:	mov    eax,0xe06d7363
64018db0:	cmp    DWORD PTR [esp+0x4],eax
64018db4:	jne    0x64018dc3
64018db6:	push   DWORD PTR [esp+0x8]
64018dba:	push   eax
64018dbb:	call   0x64018c4d
64018dc0:	pop    ecx
64018dc1:	pop    ecx
64018dc2:	ret    
64018dc3:	xor    eax,eax
64018dc5:	ret    
64018dc6:	push   ebp
64018dc7:	mov    ebp,esp
64018dc9:	sub    esp,0x10
64018dcc:	mov    eax,ds:0x6402d09c
64018dd1:	and    DWORD PTR [ebp-0x8],0x0
64018dd5:	and    DWORD PTR [ebp-0x4],0x0
64018dd9:	push   ebx
64018dda:	push   edi
64018ddb:	mov    edi,0xbb40e64e
64018de0:	cmp    eax,edi
64018de2:	mov    ebx,0xffff0000
64018de7:	je     0x64018df6
64018de9:	test   ebx,eax
64018deb:	je     0x64018df6
64018ded:	not    eax
64018def:	mov    ds:0x6402d0a0,eax
64018df4:	jmp    0x64018e56
64018df6:	push   esi
64018df7:	lea    eax,[ebp-0x8]
64018dfa:	push   eax
64018dfb:	call   DWORD PTR ds:0x640250cc
64018e01:	mov    esi,DWORD PTR [ebp-0x4]
64018e04:	xor    esi,DWORD PTR [ebp-0x8]
64018e07:	call   DWORD PTR ds:0x640250d0
64018e0d:	xor    esi,eax
64018e0f:	call   DWORD PTR ds:0x64025128
64018e15:	xor    esi,eax
64018e17:	call   DWORD PTR ds:0x6402505c
64018e1d:	xor    esi,eax
64018e1f:	lea    eax,[ebp-0x10]
64018e22:	push   eax
64018e23:	call   DWORD PTR ds:0x640250d4
64018e29:	mov    eax,DWORD PTR [ebp-0xc]
64018e2c:	xor    eax,DWORD PTR [ebp-0x10]
64018e2f:	xor    esi,eax
64018e31:	cmp    esi,edi
64018e33:	jne    0x64018e3c
64018e35:	mov    esi,0xbb40e64f
64018e3a:	jmp    0x64018e47
64018e3c:	test   ebx,esi
64018e3e:	jne    0x64018e47
64018e40:	mov    eax,esi
64018e42:	shl    eax,0x10
64018e45:	or     esi,eax
64018e47:	mov    DWORD PTR ds:0x6402d09c,esi
64018e4d:	not    esi
64018e4f:	mov    DWORD PTR ds:0x6402d0a0,esi
64018e55:	pop    esi
64018e56:	pop    edi
64018e57:	pop    ebx
64018e58:	leave  
64018e59:	ret    
64018e5a:	test   BYTE PTR [edi+0xc],0x40
64018e5e:	push   ebx
64018e5f:	push   esi
64018e60:	mov    esi,eax
64018e62:	mov    ebx,ecx
64018e64:	je     0x64018e9a
64018e66:	cmp    DWORD PTR [edi+0x8],0x0
64018e6a:	jne    0x64018e9a
64018e6c:	mov    eax,DWORD PTR [esp+0xc]
64018e70:	add    DWORD PTR [esi],eax
64018e72:	jmp    0x64018ea1
64018e74:	mov    al,BYTE PTR [ebx]
64018e76:	dec    DWORD PTR [esp+0xc]
64018e7a:	mov    ecx,edi
64018e7c:	call   0x6401cc28
64018e81:	inc    ebx
64018e82:	cmp    DWORD PTR [esi],0xffffffff
64018e85:	jne    0x64018e9a
64018e87:	call   0x64014880
64018e8c:	cmp    DWORD PTR [eax],0x2a
64018e8f:	jne    0x64018ea1
64018e91:	mov    ecx,edi
64018e93:	mov    al,0x3f
64018e95:	call   0x6401cc28
64018e9a:	cmp    DWORD PTR [esp+0xc],0x0
64018e9f:	jg     0x64018e74
64018ea1:	pop    esi
64018ea2:	pop    ebx
64018ea3:	ret    
64018ea4:	push   ebp
64018ea5:	lea    ebp,[esp-0x1f8]
64018eac:	sub    esp,0x278
64018eb2:	mov    eax,ds:0x6402d09c
64018eb7:	xor    eax,ebp
64018eb9:	mov    DWORD PTR [ebp+0x1f4],eax
64018ebf:	mov    eax,DWORD PTR [ebp+0x200]
64018ec5:	push   ebx
64018ec6:	mov    ebx,DWORD PTR [ebp+0x204]
64018ecc:	push   esi
64018ecd:	xor    esi,esi
64018ecf:	push   edi
64018ed0:	mov    edi,DWORD PTR [ebp+0x20c]
64018ed6:	push   DWORD PTR [ebp+0x208]
64018edc:	lea    ecx,[ebp-0x64]
64018edf:	mov    DWORD PTR [ebp-0x30],eax
64018ee2:	mov    DWORD PTR [ebp-0x2c],edi
64018ee5:	mov    DWORD PTR [ebp-0x4c],esi
64018ee8:	mov    DWORD PTR [ebp-0x18],esi
64018eeb:	mov    DWORD PTR [ebp-0x40],esi
64018eee:	mov    DWORD PTR [ebp-0x20],esi
64018ef1:	mov    DWORD PTR [ebp-0x3c],esi
64018ef4:	mov    DWORD PTR [ebp-0x50],esi
64018ef7:	mov    DWORD PTR [ebp-0x44],esi
64018efa:	call   0x64012c5f
64018eff:	cmp    DWORD PTR [ebp-0x30],esi
64018f02:	jne    0x64018f31
64018f04:	call   0x64014880
64018f09:	push   esi
64018f0a:	push   esi
64018f0b:	push   esi
64018f0c:	push   esi
64018f0d:	mov    DWORD PTR [eax],0x16
64018f13:	push   esi
64018f14:	call   0x640125f4
64018f19:	add    esp,0x14
64018f1c:	cmp    BYTE PTR [ebp-0x58],0x0
64018f20:	je     0x64018f29
64018f22:	mov    eax,DWORD PTR [ebp-0x5c]
64018f25:	and    DWORD PTR [eax+0x70],0xfffffffd
64018f29:	or     eax,0xffffffff
64018f2c:	jmp    0x64019800
64018f31:	mov    eax,DWORD PTR [ebp-0x30]
64018f34:	test   BYTE PTR [eax+0xc],0x40
64018f38:	jne    0x64018fe2
64018f3e:	push   eax
64018f3f:	call   0x6401c8dd
64018f44:	cmp    eax,0xffffffff
64018f47:	pop    ecx
64018f48:	je     0x64018f80
64018f4a:	push   DWORD PTR [ebp-0x30]
64018f4d:	call   0x6401c8dd
64018f52:	cmp    eax,0xfffffffe
64018f55:	pop    ecx
64018f56:	je     0x64018f80
64018f58:	push   DWORD PTR [ebp-0x30]
64018f5b:	call   0x6401c8dd
64018f60:	push   DWORD PTR [ebp-0x30]
64018f63:	sar    eax,0x5
64018f66:	lea    esi,[eax*4+0x64032500]
64018f6d:	call   0x6401c8dd
64018f72:	and    eax,0x1f
64018f75:	shl    eax,0x6
64018f78:	add    eax,DWORD PTR [esi]
64018f7a:	pop    ecx
64018f7b:	pop    ecx
64018f7c:	xor    esi,esi
64018f7e:	jmp    0x64018f85
64018f80:	mov    eax,0x6402d880
64018f85:	test   BYTE PTR [eax+0x24],0x7f
64018f89:	jne    0x64018f04
64018f8f:	push   DWORD PTR [ebp-0x30]
64018f92:	call   0x6401c8dd
64018f97:	cmp    eax,0xffffffff
64018f9a:	pop    ecx
64018f9b:	je     0x64018fd3
64018f9d:	push   DWORD PTR [ebp-0x30]
64018fa0:	call   0x6401c8dd
64018fa5:	cmp    eax,0xfffffffe
64018fa8:	pop    ecx
64018fa9:	je     0x64018fd3
64018fab:	push   DWORD PTR [ebp-0x30]
64018fae:	call   0x6401c8dd
64018fb3:	push   DWORD PTR [ebp-0x30]
64018fb6:	sar    eax,0x5
64018fb9:	lea    esi,[eax*4+0x64032500]
64018fc0:	call   0x6401c8dd
64018fc5:	and    eax,0x1f
64018fc8:	shl    eax,0x6
64018fcb:	add    eax,DWORD PTR [esi]
64018fcd:	pop    ecx
64018fce:	pop    ecx
64018fcf:	xor    esi,esi
64018fd1:	jmp    0x64018fd8
64018fd3:	mov    eax,0x6402d880
64018fd8:	test   BYTE PTR [eax+0x24],0x80
64018fdc:	jne    0x64018f04
64018fe2:	cmp    ebx,esi
64018fe4:	je     0x64018f04
64018fea:	mov    dl,BYTE PTR [ebx]
64018fec:	xor    ecx,ecx
64018fee:	test   dl,dl
64018ff0:	mov    DWORD PTR [ebp-0x34],esi
64018ff3:	mov    DWORD PTR [ebp-0x28],esi
64018ff6:	mov    DWORD PTR [ebp-0x54],esi
64018ff9:	mov    BYTE PTR [ebp-0x19],dl
64018ffc:	je     0x640197f0
64019002:	inc    ebx
64019003:	cmp    DWORD PTR [ebp-0x34],0x0
64019007:	mov    DWORD PTR [ebp-0x48],ebx
6401900a:	jl     0x640197f0
64019010:	mov    al,dl
64019012:	sub    al,0x20
64019014:	cmp    al,0x58
64019016:	ja     0x64019029
64019018:	movsx  eax,dl
6401901b:	movzx  eax,BYTE PTR [eax+0x64025e18]
64019022:	and    eax,0xf
64019025:	xor    esi,esi
64019027:	jmp    0x6401902d
64019029:	xor    esi,esi
6401902b:	xor    eax,eax
6401902d:	movsx  eax,BYTE PTR [ecx+eax*8+0x64025e38]
64019035:	push   0x7
64019037:	sar    eax,0x4
6401903a:	pop    ecx
6401903b:	cmp    eax,ecx
6401903d:	mov    DWORD PTR [ebp-0x74],eax
64019040:	ja     0x640197c0
64019046:	jmp    DWORD PTR [eax*4+0x64019818]
6401904d:	or     DWORD PTR [ebp-0x20],0xffffffff
64019051:	mov    DWORD PTR [ebp-0x78],esi
64019054:	mov    DWORD PTR [ebp-0x50],esi
64019057:	mov    DWORD PTR [ebp-0x40],esi
6401905a:	mov    DWORD PTR [ebp-0x3c],esi
6401905d:	mov    DWORD PTR [ebp-0x18],esi
64019060:	mov    DWORD PTR [ebp-0x44],esi
64019063:	jmp    0x640197c0
64019068:	movsx  eax,dl
6401906b:	sub    eax,0x20
6401906e:	je     0x640190ae
64019070:	sub    eax,0x3
64019073:	je     0x640190a2
64019075:	sub    eax,0x8
64019078:	je     0x64019099
6401907a:	dec    eax
6401907b:	dec    eax
6401907c:	je     0x64019090
6401907e:	sub    eax,0x3
64019081:	jne    0x640197c0
64019087:	or     DWORD PTR [ebp-0x18],0x8
6401908b:	jmp    0x640197c0
64019090:	or     DWORD PTR [ebp-0x18],0x4
64019094:	jmp    0x640197c0
64019099:	or     DWORD PTR [ebp-0x18],0x1
6401909d:	jmp    0x640197c0
640190a2:	or     DWORD PTR [ebp-0x18],0x80
640190a9:	jmp    0x640197c0
640190ae:	or     DWORD PTR [ebp-0x18],0x2
640190b2:	jmp    0x640197c0
640190b7:	cmp    dl,0x2a
640190ba:	jne    0x640190dc
640190bc:	add    edi,0x4
640190bf:	mov    DWORD PTR [ebp-0x2c],edi
640190c2:	mov    edi,DWORD PTR [edi-0x4]
640190c5:	cmp    edi,esi
640190c7:	mov    DWORD PTR [ebp-0x40],edi
640190ca:	jge    0x640197c0
640190d0:	or     DWORD PTR [ebp-0x18],0x4
640190d4:	neg    DWORD PTR [ebp-0x40]
640190d7:	jmp    0x640197c0
640190dc:	mov    eax,DWORD PTR [ebp-0x40]
640190df:	imul   eax,eax,0xa
640190e2:	movsx  ecx,dl
640190e5:	lea    eax,[eax+ecx*1-0x30]
640190e9:	mov    DWORD PTR [ebp-0x40],eax
640190ec:	jmp    0x640197c0
640190f1:	mov    DWORD PTR [ebp-0x20],esi
640190f4:	jmp    0x640197c0
640190f9:	cmp    dl,0x2a
640190fc:	jne    0x6401911b
640190fe:	add    edi,0x4
64019101:	mov    DWORD PTR [ebp-0x2c],edi
64019104:	mov    edi,DWORD PTR [edi-0x4]
64019107:	cmp    edi,esi
64019109:	mov    DWORD PTR [ebp-0x20],edi
6401910c:	jge    0x640197c0
64019112:	or     DWORD PTR [ebp-0x20],0xffffffff
64019116:	jmp    0x640197c0
6401911b:	mov    eax,DWORD PTR [ebp-0x20]
6401911e:	imul   eax,eax,0xa
64019121:	movsx  ecx,dl
64019124:	lea    eax,[eax+ecx*1-0x30]
64019128:	mov    DWORD PTR [ebp-0x20],eax
6401912b:	jmp    0x640197c0
64019130:	cmp    dl,0x49
64019133:	je     0x6401917b
64019135:	cmp    dl,0x68
64019138:	je     0x64019172
6401913a:	cmp    dl,0x6c
6401913d:	je     0x64019154
6401913f:	cmp    dl,0x77
64019142:	jne    0x640197c0
64019148:	or     DWORD PTR [ebp-0x18],0x800
6401914f:	jmp    0x640197c0
64019154:	cmp    BYTE PTR [ebx],0x6c
64019157:	jne    0x64019169
64019159:	inc    ebx
6401915a:	or     DWORD PTR [ebp-0x18],0x1000
64019161:	mov    DWORD PTR [ebp-0x48],ebx
64019164:	jmp    0x640197c0
64019169:	or     DWORD PTR [ebp-0x18],0x10
6401916d:	jmp    0x640197c0
64019172:	or     DWORD PTR [ebp-0x18],0x20
64019176:	jmp    0x640197c0
6401917b:	mov    al,BYTE PTR [ebx]
6401917d:	cmp    al,0x36
6401917f:	jne    0x64019198
64019181:	cmp    BYTE PTR [ebx+0x1],0x34
64019185:	jne    0x64019198
64019187:	inc    ebx
64019188:	inc    ebx
64019189:	or     DWORD PTR [ebp-0x18],0x8000
64019190:	mov    DWORD PTR [ebp-0x48],ebx
64019193:	jmp    0x640197c0
64019198:	cmp    al,0x33
6401919a:	jne    0x640191b3
6401919c:	cmp    BYTE PTR [ebx+0x1],0x32
640191a0:	jne    0x640191b3
640191a2:	inc    ebx
640191a3:	inc    ebx
640191a4:	and    DWORD PTR [ebp-0x18],0xffff7fff
640191ab:	mov    DWORD PTR [ebp-0x48],ebx
640191ae:	jmp    0x640197c0
640191b3:	cmp    al,0x64
640191b5:	je     0x640197c0
640191bb:	cmp    al,0x69
640191bd:	je     0x640197c0
640191c3:	cmp    al,0x6f
640191c5:	je     0x640197c0
640191cb:	cmp    al,0x75
640191cd:	je     0x640197c0
640191d3:	cmp    al,0x78
640191d5:	je     0x640197c0
640191db:	cmp    al,0x58
640191dd:	je     0x640197c0
640191e3:	mov    DWORD PTR [ebp-0x74],esi
640191e6:	lea    eax,[ebp-0x64]
640191e9:	push   eax
640191ea:	movzx  eax,dl
640191ed:	push   eax
640191ee:	mov    DWORD PTR [ebp-0x44],esi
640191f1:	call   0x64019e0a
640191f6:	pop    ecx
640191f7:	test   eax,eax
640191f9:	mov    al,BYTE PTR [ebp-0x19]
640191fc:	pop    ecx
640191fd:	je     0x64019218
640191ff:	mov    ecx,DWORD PTR [ebp-0x30]
64019202:	lea    esi,[ebp-0x34]
64019205:	call   0x6401cc28
6401920a:	mov    al,BYTE PTR [ebx]
6401920c:	inc    ebx
6401920d:	test   al,al
6401920f:	mov    DWORD PTR [ebp-0x48],ebx
64019212:	je     0x640197d9
64019218:	mov    ecx,DWORD PTR [ebp-0x30]
6401921b:	lea    esi,[ebp-0x34]
6401921e:	call   0x6401cc28
64019223:	jmp    0x640197c0
64019228:	movsx  eax,dl
6401922b:	cmp    eax,0x64
6401922e:	jg     0x640193a6
64019234:	je     0x64019425
6401923a:	cmp    eax,0x53
6401923d:	jg     0x640192ee
64019243:	je     0x6401929f
64019245:	sub    eax,0x41
64019248:	je     0x6401925a
6401924a:	dec    eax
6401924b:	dec    eax
6401924c:	je     0x6401928e
6401924e:	dec    eax
6401924f:	dec    eax
64019250:	je     0x6401925a
64019252:	dec    eax
64019253:	dec    eax
64019254:	jne    0x640196a8
6401925a:	add    dl,0x20
6401925d:	mov    DWORD PTR [ebp-0x78],0x1
64019264:	mov    BYTE PTR [ebp-0x19],dl
64019267:	or     DWORD PTR [ebp-0x18],0x40
6401926b:	cmp    DWORD PTR [ebp-0x20],esi
6401926e:	lea    ebx,[ebp-0x14]
64019271:	mov    eax,0x200
64019276:	mov    DWORD PTR [ebp-0x24],ebx
64019279:	mov    DWORD PTR [ebp-0x68],eax
6401927c:	jge    0x64019449
64019282:	mov    DWORD PTR [ebp-0x20],0x6
64019289:	jmp    0x64019497
6401928e:	test   WORD PTR [ebp-0x18],0x830
64019294:	jne    0x6401930b
64019296:	or     DWORD PTR [ebp-0x18],0x800
6401929d:	jmp    0x6401930b
6401929f:	test   WORD PTR [ebp-0x18],0x830
640192a5:	jne    0x640192ae
640192a7:	or     DWORD PTR [ebp-0x18],0x800
640192ae:	mov    ecx,DWORD PTR [ebp-0x20]
640192b1:	cmp    ecx,0xffffffff
640192b4:	jne    0x640192bb
640192b6:	mov    ecx,0x7fffffff
640192bb:	add    edi,0x4
640192be:	test   WORD PTR [ebp-0x18],0x810
640192c4:	mov    DWORD PTR [ebp-0x2c],edi
640192c7:	mov    edi,DWORD PTR [edi-0x4]
640192ca:	mov    DWORD PTR [ebp-0x24],edi
640192cd:	je     0x64019686
640192d3:	cmp    edi,esi
640192d5:	jne    0x640192df
640192d7:	mov    eax,ds:0x6402d954
640192dc:	mov    DWORD PTR [ebp-0x24],eax
640192df:	mov    eax,DWORD PTR [ebp-0x24]
640192e2:	mov    DWORD PTR [ebp-0x44],0x1
640192e9:	jmp    0x6401967b
640192ee:	sub    eax,0x58
640192f1:	je     0x64019530
640192f7:	dec    eax
640192f8:	dec    eax
640192f9:	je     0x64019358
640192fb:	sub    eax,ecx
640192fd:	je     0x64019267
64019303:	dec    eax
64019304:	dec    eax
64019305:	jne    0x640196a8
6401930b:	add    edi,0x4
6401930e:	test   WORD PTR [ebp-0x18],0x810
64019314:	mov    DWORD PTR [ebp-0x2c],edi
64019317:	je     0x64019340
64019319:	movzx  eax,WORD PTR [edi-0x4]
6401931d:	push   eax
6401931e:	push   0x200
64019323:	lea    eax,[ebp-0x14]
64019326:	push   eax
64019327:	lea    eax,[ebp-0x28]
6401932a:	push   eax
6401932b:	call   0x6401daa8
64019330:	add    esp,0x10
64019333:	test   eax,eax
64019335:	je     0x6401934d
64019337:	mov    DWORD PTR [ebp-0x50],0x1
6401933e:	jmp    0x6401934d
64019340:	mov    al,BYTE PTR [edi-0x4]
64019343:	mov    BYTE PTR [ebp-0x14],al
64019346:	mov    DWORD PTR [ebp-0x28],0x1
6401934d:	lea    eax,[ebp-0x14]
64019350:	mov    DWORD PTR [ebp-0x24],eax
64019353:	jmp    0x640196a8
64019358:	mov    eax,DWORD PTR [edi]
6401935a:	add    edi,0x4
6401935d:	cmp    eax,esi
6401935f:	mov    DWORD PTR [ebp-0x2c],edi
64019362:	je     0x64019392
64019364:	mov    ecx,DWORD PTR [eax+0x4]
64019367:	cmp    ecx,esi
64019369:	je     0x64019392
6401936b:	test   WORD PTR [ebp-0x18],0x800
64019371:	movsx  eax,WORD PTR [eax]
64019374:	mov    DWORD PTR [ebp-0x24],ecx
64019377:	je     0x6401938a
64019379:	cdq    
6401937a:	sub    eax,edx
6401937c:	sar    eax,1
6401937e:	mov    DWORD PTR [ebp-0x44],0x1
64019385:	jmp    0x640196a5
6401938a:	mov    DWORD PTR [ebp-0x44],esi
6401938d:	jmp    0x640196a5
64019392:	mov    eax,ds:0x6402d950
64019397:	mov    DWORD PTR [ebp-0x24],eax
6401939a:	push   eax
6401939b:	call   0x64014280
640193a0:	pop    ecx
640193a1:	jmp    0x640196a5
640193a6:	cmp    eax,0x70
640193a9:	jg     0x64019535
640193af:	je     0x64019529
640193b5:	cmp    eax,0x65
640193b8:	jl     0x640196a8
640193be:	cmp    eax,0x67
640193c1:	jle    0x64019267
640193c7:	cmp    eax,0x69
640193ca:	je     0x64019425
640193cc:	cmp    eax,0x6e
640193cf:	je     0x640193f0
640193d1:	cmp    eax,0x6f
640193d4:	jne    0x640196a8
640193da:	test   BYTE PTR [ebp-0x18],0x80
640193de:	mov    DWORD PTR [ebp-0x28],0x8
640193e5:	je     0x64019430
640193e7:	or     DWORD PTR [ebp-0x18],0x200
640193ee:	jmp    0x64019430
640193f0:	mov    esi,DWORD PTR [edi]
640193f2:	add    edi,0x4
640193f5:	mov    DWORD PTR [ebp-0x2c],edi
640193f8:	call   0x6401cae8
640193fd:	test   eax,eax
640193ff:	je     0x640197d9
64019405:	test   BYTE PTR [ebp-0x18],0x20
64019409:	je     0x64019414
6401940b:	mov    ax,WORD PTR [ebp-0x34]
6401940f:	mov    WORD PTR [esi],ax
64019412:	jmp    0x64019419
64019414:	mov    eax,DWORD PTR [ebp-0x34]
64019417:	mov    DWORD PTR [esi],eax
64019419:	mov    DWORD PTR [ebp-0x50],0x1
64019420:	jmp    0x640197ad
64019425:	or     DWORD PTR [ebp-0x18],0x40
64019429:	mov    DWORD PTR [ebp-0x28],0xa
64019430:	mov    ecx,DWORD PTR [ebp-0x18]
64019433:	test   cx,cx
64019436:	jns    0x6401957f
6401943c:	mov    eax,DWORD PTR [edi]
6401943e:	mov    edx,DWORD PTR [edi+0x4]
64019441:	add    edi,0x8
64019444:	jmp    0x640195b4
64019449:	jne    0x64019459
6401944b:	cmp    dl,0x67
6401944e:	jne    0x64019497
64019450:	mov    DWORD PTR [ebp-0x20],0x1
64019457:	jmp    0x64019497
64019459:	cmp    DWORD PTR [ebp-0x20],eax
6401945c:	jle    0x64019461
6401945e:	mov    DWORD PTR [ebp-0x20],eax
64019461:	cmp    DWORD PTR [ebp-0x20],0xa3
64019468:	jle    0x64019497
6401946a:	mov    esi,DWORD PTR [ebp-0x20]
6401946d:	add    esi,0x15d
64019473:	push   esi
64019474:	call   0x64015d90
64019479:	test   eax,eax
6401947b:	mov    dl,BYTE PTR [ebp-0x19]
6401947e:	pop    ecx
6401947f:	mov    DWORD PTR [ebp-0x54],eax
64019482:	je     0x6401948e
64019484:	mov    DWORD PTR [ebp-0x24],eax
64019487:	mov    DWORD PTR [ebp-0x68],esi
6401948a:	mov    ebx,eax
6401948c:	jmp    0x64019495
6401948e:	mov    DWORD PTR [ebp-0x20],0xa3
64019495:	xor    esi,esi
64019497:	mov    eax,DWORD PTR [edi]
64019499:	add    edi,0x8
6401949c:	mov    DWORD PTR [ebp-0x80],eax
6401949f:	mov    eax,DWORD PTR [edi-0x4]
640194a2:	mov    DWORD PTR [ebp-0x7c],eax
640194a5:	lea    eax,[ebp-0x64]
640194a8:	push   eax
640194a9:	push   DWORD PTR [ebp-0x78]
640194ac:	movsx  eax,dl
640194af:	push   DWORD PTR [ebp-0x20]
640194b2:	mov    DWORD PTR [ebp-0x2c],edi
640194b5:	push   eax
640194b6:	push   DWORD PTR [ebp-0x68]
640194b9:	lea    eax,[ebp-0x80]
640194bc:	push   ebx
640194bd:	push   eax
640194be:	push   DWORD PTR ds:0x6402db64
640194c4:	call   0x640149af
640194c9:	pop    ecx
640194ca:	call   eax
640194cc:	mov    edi,DWORD PTR [ebp-0x18]
640194cf:	add    esp,0x1c
640194d2:	and    edi,0x80
640194d8:	je     0x640194f4
640194da:	cmp    DWORD PTR [ebp-0x20],esi
640194dd:	jne    0x640194f4
640194df:	lea    eax,[ebp-0x64]
640194e2:	push   eax
640194e3:	push   ebx
640194e4:	push   DWORD PTR ds:0x6402db70
640194ea:	call   0x640149af
640194ef:	pop    ecx
640194f0:	call   eax
640194f2:	pop    ecx
640194f3:	pop    ecx
640194f4:	cmp    BYTE PTR [ebp-0x19],0x67
640194f8:	jne    0x64019513
640194fa:	cmp    edi,esi
640194fc:	jne    0x64019513
640194fe:	lea    eax,[ebp-0x64]
64019501:	push   eax
64019502:	push   ebx
64019503:	push   DWORD PTR ds:0x6402db6c
64019509:	call   0x640149af
6401950e:	pop    ecx
6401950f:	call   eax
64019511:	pop    ecx
64019512:	pop    ecx
64019513:	cmp    BYTE PTR [ebx],0x2d
64019516:	jne    0x64019523
64019518:	or     DWORD PTR [ebp-0x18],0x100
6401951f:	inc    ebx
64019520:	mov    DWORD PTR [ebp-0x24],ebx
64019523:	push   ebx
64019524:	jmp    0x6401939b
64019529:	mov    DWORD PTR [ebp-0x20],0x8
64019530:	mov    DWORD PTR [ebp-0x4c],ecx
64019533:	jmp    0x64019556
64019535:	sub    eax,0x73
64019538:	je     0x640192ae
6401953e:	dec    eax
6401953f:	dec    eax
64019540:	je     0x64019429
64019546:	sub    eax,0x3
64019549:	jne    0x640196a8
6401954f:	mov    DWORD PTR [ebp-0x4c],0x27
64019556:	test   BYTE PTR [ebp-0x18],0x80
6401955a:	mov    DWORD PTR [ebp-0x28],0x10
64019561:	je     0x64019430
64019567:	mov    al,BYTE PTR [ebp-0x4c]
6401956a:	add    al,0x51
6401956c:	mov    BYTE PTR [ebp-0x38],0x30
64019570:	mov    BYTE PTR [ebp-0x37],al
64019573:	mov    DWORD PTR [ebp-0x3c],0x2
6401957a:	jmp    0x64019430
6401957f:	test   cx,0x1000
64019584:	jne    0x6401943c
6401958a:	add    edi,0x4
6401958d:	test   cl,0x20
64019590:	je     0x640195a7
64019592:	test   cl,0x40
64019595:	mov    DWORD PTR [ebp-0x2c],edi
64019598:	je     0x640195a0
6401959a:	movsx  eax,WORD PTR [edi-0x4]
6401959e:	jmp    0x640195a4
640195a0:	movzx  eax,WORD PTR [edi-0x4]
640195a4:	cdq    
640195a5:	jmp    0x640195b7
640195a7:	test   cl,0x40
640195aa:	mov    eax,DWORD PTR [edi-0x4]
640195ad:	je     0x640195b2
640195af:	cdq    
640195b0:	jmp    0x640195b4
640195b2:	xor    edx,edx
640195b4:	mov    DWORD PTR [ebp-0x2c],edi
640195b7:	test   cl,0x40
640195ba:	je     0x640195d4
640195bc:	cmp    edx,esi
640195be:	jg     0x640195d4
640195c0:	jl     0x640195c6
640195c2:	cmp    eax,esi
640195c4:	jae    0x640195d4
640195c6:	neg    eax
640195c8:	adc    edx,0x0
640195cb:	neg    edx
640195cd:	or     DWORD PTR [ebp-0x18],0x100
640195d4:	test   WORD PTR [ebp-0x18],0x9000
640195da:	mov    ebx,edx
640195dc:	mov    edi,eax
640195de:	jne    0x640195e2
640195e0:	xor    ebx,ebx
640195e2:	cmp    DWORD PTR [ebp-0x20],0x0
640195e6:	jge    0x640195f1
640195e8:	mov    DWORD PTR [ebp-0x20],0x1
640195ef:	jmp    0x64019602
640195f1:	and    DWORD PTR [ebp-0x18],0xfffffff7
640195f5:	mov    eax,0x200
640195fa:	cmp    DWORD PTR [ebp-0x20],eax
640195fd:	jle    0x64019602
640195ff:	mov    DWORD PTR [ebp-0x20],eax
64019602:	mov    eax,edi
64019604:	or     eax,ebx
64019606:	jne    0x6401960b
64019608:	and    DWORD PTR [ebp-0x3c],eax
6401960b:	lea    esi,[ebp+0x1eb]
64019611:	mov    eax,DWORD PTR [ebp-0x20]
64019614:	dec    DWORD PTR [ebp-0x20]
64019617:	test   eax,eax
64019619:	jg     0x64019621
6401961b:	mov    eax,edi
6401961d:	or     eax,ebx
6401961f:	je     0x64019645
64019621:	mov    eax,DWORD PTR [ebp-0x28]
64019624:	cdq    
64019625:	push   edx
64019626:	push   eax
64019627:	push   ebx
64019628:	push   edi
64019629:	call   0x64019990
6401962e:	add    ecx,0x30
64019631:	cmp    ecx,0x39
64019634:	mov    DWORD PTR [ebp-0x68],ebx
64019637:	mov    edi,eax
64019639:	mov    ebx,edx
6401963b:	jle    0x64019640
6401963d:	add    ecx,DWORD PTR [ebp-0x4c]
64019640:	mov    BYTE PTR [esi],cl
64019642:	dec    esi
64019643:	jmp    0x64019611
64019645:	lea    eax,[ebp+0x1eb]
6401964b:	sub    eax,esi
6401964d:	inc    esi
6401964e:	test   WORD PTR [ebp-0x18],0x200
64019654:	mov    DWORD PTR [ebp-0x28],eax
64019657:	mov    DWORD PTR [ebp-0x24],esi
6401965a:	je     0x640196a8
6401965c:	test   eax,eax
6401965e:	je     0x64019667
64019660:	mov    ecx,esi
64019662:	cmp    BYTE PTR [ecx],0x30
64019665:	je     0x640196a8
64019667:	dec    DWORD PTR [ebp-0x24]
6401966a:	mov    ecx,DWORD PTR [ebp-0x24]
6401966d:	mov    BYTE PTR [ecx],0x30
64019670:	inc    eax
64019671:	jmp    0x640196a5
64019673:	dec    ecx
64019674:	cmp    WORD PTR [eax],si
64019677:	je     0x6401967f
64019679:	inc    eax
6401967a:	inc    eax
6401967b:	cmp    ecx,esi
6401967d:	jne    0x64019673
6401967f:	sub    eax,DWORD PTR [ebp-0x24]
64019682:	sar    eax,1
64019684:	jmp    0x640196a5
64019686:	cmp    edi,esi
64019688:	jne    0x64019692
6401968a:	mov    eax,ds:0x6402d950
6401968f:	mov    DWORD PTR [ebp-0x24],eax
64019692:	mov    eax,DWORD PTR [ebp-0x24]
64019695:	jmp    0x6401969e
64019697:	dec    ecx
64019698:	cmp    BYTE PTR [eax],0x0
6401969b:	je     0x640196a2
6401969d:	inc    eax
6401969e:	cmp    ecx,esi
640196a0:	jne    0x64019697
640196a2:	sub    eax,DWORD PTR [ebp-0x24]
640196a5:	mov    DWORD PTR [ebp-0x28],eax
640196a8:	cmp    DWORD PTR [ebp-0x50],0x0
640196ac:	jne    0x640197ad
640196b2:	mov    eax,DWORD PTR [ebp-0x18]
640196b5:	test   al,0x40
640196b7:	je     0x640196de
640196b9:	test   ax,0x100
640196bd:	je     0x640196c5
640196bf:	mov    BYTE PTR [ebp-0x38],0x2d
640196c3:	jmp    0x640196d7
640196c5:	test   al,0x1
640196c7:	je     0x640196cf
640196c9:	mov    BYTE PTR [ebp-0x38],0x2b
640196cd:	jmp    0x640196d7
640196cf:	test   al,0x2
640196d1:	je     0x640196de
640196d3:	mov    BYTE PTR [ebp-0x38],0x20
640196d7:	mov    DWORD PTR [ebp-0x3c],0x1
640196de:	mov    ebx,DWORD PTR [ebp-0x40]
640196e1:	sub    ebx,DWORD PTR [ebp-0x28]
640196e4:	sub    ebx,DWORD PTR [ebp-0x3c]
640196e7:	test   BYTE PTR [ebp-0x18],0xc
640196eb:	jne    0x640196fe
640196ed:	push   DWORD PTR [ebp-0x30]
640196f0:	lea    eax,[ebp-0x34]
640196f3:	push   ebx
640196f4:	push   0x20
640196f6:	call   0x6401cc5b
640196fb:	add    esp,0xc
640196fe:	push   DWORD PTR [ebp-0x3c]
64019701:	mov    edi,DWORD PTR [ebp-0x30]
64019704:	lea    eax,[ebp-0x34]
64019707:	lea    ecx,[ebp-0x38]
6401970a:	call   0x64018e5a
6401970f:	test   BYTE PTR [ebp-0x18],0x8
64019713:	pop    ecx
64019714:	je     0x6401972b
64019716:	test   BYTE PTR [ebp-0x18],0x4
6401971a:	jne    0x6401972b
6401971c:	push   edi
6401971d:	push   ebx
6401971e:	push   0x30
64019720:	lea    eax,[ebp-0x34]
64019723:	call   0x6401cc5b
64019728:	add    esp,0xc
6401972b:	cmp    DWORD PTR [ebp-0x44],0x0
6401972f:	mov    eax,DWORD PTR [ebp-0x28]
64019732:	je     0x64019785
64019734:	test   eax,eax
64019736:	jle    0x64019785
64019738:	mov    esi,DWORD PTR [ebp-0x24]
6401973b:	mov    DWORD PTR [ebp-0x68],eax
6401973e:	movzx  eax,WORD PTR [esi]
64019741:	dec    DWORD PTR [ebp-0x68]
64019744:	push   eax
64019745:	push   0x6
64019747:	lea    eax,[ebp+0x1ec]
6401974d:	push   eax
6401974e:	lea    eax,[ebp-0x70]
64019751:	inc    esi
64019752:	push   eax
64019753:	inc    esi
64019754:	call   0x6401daa8
64019759:	add    esp,0x10
6401975c:	test   eax,eax
6401975e:	jne    0x6401977f
64019760:	cmp    DWORD PTR [ebp-0x70],eax
64019763:	je     0x6401977f
64019765:	push   DWORD PTR [ebp-0x70]
64019768:	lea    eax,[ebp-0x34]
6401976b:	lea    ecx,[ebp+0x1ec]
64019771:	call   0x64018e5a
64019776:	cmp    DWORD PTR [ebp-0x68],0x0
6401977a:	pop    ecx
6401977b:	jne    0x6401973e
6401977d:	jmp    0x64019792
6401977f:	or     DWORD PTR [ebp-0x34],0xffffffff
64019783:	jmp    0x64019792
64019785:	mov    ecx,DWORD PTR [ebp-0x24]
64019788:	push   eax
64019789:	lea    eax,[ebp-0x34]
6401978c:	call   0x64018e5a
64019791:	pop    ecx
64019792:	cmp    DWORD PTR [ebp-0x34],0x0
64019796:	jl     0x640197ad
64019798:	test   BYTE PTR [ebp-0x18],0x4
6401979c:	je     0x640197ad
6401979e:	push   edi
6401979f:	push   ebx
640197a0:	push   0x20
640197a2:	lea    eax,[ebp-0x34]
640197a5:	call   0x6401cc5b
640197aa:	add    esp,0xc
640197ad:	cmp    DWORD PTR [ebp-0x54],0x0
640197b1:	je     0x640197c0
640197b3:	push   DWORD PTR [ebp-0x54]
640197b6:	call   0x64013956
640197bb:	and    DWORD PTR [ebp-0x54],0x0
640197bf:	pop    ecx
640197c0:	mov    ebx,DWORD PTR [ebp-0x48]
640197c3:	mov    al,BYTE PTR [ebx]
640197c5:	test   al,al
640197c7:	mov    BYTE PTR [ebp-0x19],al
640197ca:	je     0x640197f0
640197cc:	mov    ecx,DWORD PTR [ebp-0x74]
640197cf:	mov    edi,DWORD PTR [ebp-0x2c]
640197d2:	mov    dl,al
640197d4:	jmp    0x64019002
640197d9:	call   0x64014880
640197de:	mov    DWORD PTR [eax],0x16
640197e4:	xor    eax,eax
640197e6:	push   eax
640197e7:	push   eax
640197e8:	push   eax
640197e9:	push   eax
640197ea:	push   eax
640197eb:	jmp    0x64018f14
640197f0:	cmp    BYTE PTR [ebp-0x58],0x0
640197f4:	je     0x640197fd
640197f6:	mov    eax,DWORD PTR [ebp-0x5c]
640197f9:	and    DWORD PTR [eax+0x70],0xfffffffd
640197fd:	mov    eax,DWORD PTR [ebp-0x34]
64019800:	mov    ecx,DWORD PTR [ebp+0x1f4]
64019806:	pop    edi
64019807:	pop    esi
64019808:	xor    ecx,ebp
6401980a:	pop    ebx
6401980b:	call   0x64012abc
64019810:	add    ebp,0x1f8
64019816:	leave  
64019817:	ret    
64019818:	out    0x91,al
6401981a:	add    DWORD PTR [ebp+ecx*2-0x70],esp
6401981e:	add    DWORD PTR [eax+ebp*2-0x70],esp
64019822:	add    DWORD PTR [edi+esi*4-0x70],esp
64019826:	add    DWORD PTR [ecx+esi*8-0x70],esp
6401982a:	add    DWORD PTR [ecx+edi*8-0x70],esp
6401982e:	add    DWORD PTR [eax+esi*1-0x6f],esp
64019832:	add    DWORD PTR [eax+ebp*1-0x6e],esp
64019836:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401983a:	in     al,dx
6401983b:	sub    esp,0x20
6401983e:	push   ebx
6401983f:	xor    ebx,ebx
64019841:	cmp    DWORD PTR [ebp+0x14],ebx
64019844:	jne    0x64019866
64019846:	call   0x64014880
6401984b:	push   ebx
6401984c:	push   ebx
6401984d:	push   ebx
6401984e:	push   ebx
6401984f:	push   ebx
64019850:	mov    DWORD PTR [eax],0x16
64019856:	call   0x640125f4
6401985b:	add    esp,0x14
6401985e:	or     eax,0xffffffff
64019861:	jmp    0x640198ff
64019866:	push   esi
64019867:	mov    esi,DWORD PTR [ebp+0xc]
6401986a:	push   edi
6401986b:	mov    edi,DWORD PTR [ebp+0x10]
6401986e:	cmp    edi,ebx
64019870:	je     0x64019893
64019872:	cmp    esi,ebx
64019874:	jne    0x64019893
64019876:	call   0x64014880
6401987b:	push   ebx
6401987c:	push   ebx
6401987d:	push   ebx
6401987e:	push   ebx
6401987f:	push   ebx
64019880:	mov    DWORD PTR [eax],0x16
64019886:	call   0x640125f4
6401988b:	add    esp,0x14
6401988e:	or     eax,0xffffffff
64019891:	jmp    0x640198fd
64019893:	mov    eax,0x7fffffff
64019898:	cmp    edi,eax
6401989a:	mov    DWORD PTR [ebp-0x1c],eax
6401989d:	ja     0x640198a2
6401989f:	mov    DWORD PTR [ebp-0x1c],edi
640198a2:	push   DWORD PTR [ebp+0x1c]
640198a5:	lea    eax,[ebp-0x20]
640198a8:	push   DWORD PTR [ebp+0x18]
640198ab:	mov    DWORD PTR [ebp-0x14],0x42
640198b2:	push   DWORD PTR [ebp+0x14]
640198b5:	mov    DWORD PTR [ebp-0x18],esi
640198b8:	push   eax
640198b9:	mov    DWORD PTR [ebp-0x20],esi
640198bc:	call   DWORD PTR [ebp+0x8]
640198bf:	add    esp,0x10
640198c2:	cmp    esi,ebx
640198c4:	mov    DWORD PTR [ebp+0x14],eax
640198c7:	je     0x640198fd
640198c9:	cmp    eax,ebx
640198cb:	jl     0x640198ef
640198cd:	dec    DWORD PTR [ebp-0x1c]
640198d0:	js     0x640198d9
640198d2:	mov    eax,DWORD PTR [ebp-0x20]
640198d5:	mov    BYTE PTR [eax],bl
640198d7:	jmp    0x640198ea
640198d9:	lea    eax,[ebp-0x20]
640198dc:	push   eax
640198dd:	push   ebx
640198de:	call   0x64016bc5
640198e3:	cmp    eax,0xffffffff
640198e6:	pop    ecx
640198e7:	pop    ecx
640198e8:	je     0x640198ef
640198ea:	mov    eax,DWORD PTR [ebp+0x14]
640198ed:	jmp    0x640198fd
640198ef:	xor    eax,eax
640198f1:	cmp    DWORD PTR [ebp-0x1c],ebx
640198f4:	mov    BYTE PTR [esi+edi*1-0x1],bl
640198f8:	setge  al
640198fb:	dec    eax
640198fc:	dec    eax
640198fd:	pop    edi
640198fe:	pop    esi
640198ff:	pop    ebx
64019900:	leave  
64019901:	ret    
64019902:	push   ebp
64019903:	mov    ebp,esp
64019905:	push   ebx
64019906:	xor    ebx,ebx
64019908:	cmp    DWORD PTR [ebp+0x10],ebx
6401990b:	jne    0x6401992a
6401990d:	call   0x64014880
64019912:	push   ebx
64019913:	push   ebx
64019914:	push   ebx
64019915:	push   ebx
64019916:	push   ebx
64019917:	mov    DWORD PTR [eax],0x16
6401991d:	call   0x640125f4
64019922:	add    esp,0x14
64019925:	or     eax,0xffffffff
64019928:	jmp    0x64019985
6401992a:	push   esi
6401992b:	mov    esi,DWORD PTR [ebp+0x8]
6401992e:	cmp    esi,ebx
64019930:	je     0x64019937
64019932:	cmp    DWORD PTR [ebp+0xc],ebx
64019935:	ja     0x64019944
64019937:	call   0x64014880
6401993c:	mov    DWORD PTR [eax],0x16
64019942:	jmp    0x64019974
64019944:	push   DWORD PTR [ebp+0x18]
64019947:	push   DWORD PTR [ebp+0x14]
6401994a:	push   DWORD PTR [ebp+0x10]
6401994d:	push   DWORD PTR [ebp+0xc]
64019950:	push   esi
64019951:	push   0x6401cc7f
64019956:	call   0x64019838
6401995b:	add    esp,0x18
6401995e:	cmp    eax,ebx
64019960:	jge    0x64019964
64019962:	mov    BYTE PTR [esi],bl
64019964:	cmp    eax,0xfffffffe
64019967:	jne    0x64019984
64019969:	call   0x64014880
6401996e:	mov    DWORD PTR [eax],0x22
64019974:	push   ebx
64019975:	push   ebx
64019976:	push   ebx
64019977:	push   ebx
64019978:	push   ebx
64019979:	call   0x640125f4
6401997e:	add    esp,0x14
64019981:	or     eax,0xffffffff
64019984:	pop    esi
64019985:	pop    ebx
64019986:	pop    ebp
64019987:	ret    
64019988:	int3   
64019989:	int3   
6401998a:	int3   
6401998b:	int3   
6401998c:	int3   
6401998d:	int3   
6401998e:	int3   
6401998f:	int3   
64019990:	push   esi
64019991:	mov    eax,DWORD PTR [esp+0x14]
64019995:	or     eax,eax
64019997:	jne    0x640199c1
64019999:	mov    ecx,DWORD PTR [esp+0x10]
6401999d:	mov    eax,DWORD PTR [esp+0xc]
640199a1:	xor    edx,edx
640199a3:	div    ecx
640199a5:	mov    ebx,eax
640199a7:	mov    eax,DWORD PTR [esp+0x8]
640199ab:	div    ecx
640199ad:	mov    esi,eax
640199af:	mov    eax,ebx
640199b1:	mul    DWORD PTR [esp+0x10]
640199b5:	mov    ecx,eax
640199b7:	mov    eax,esi
640199b9:	mul    DWORD PTR [esp+0x10]
640199bd:	add    edx,ecx
640199bf:	jmp    0x64019a08
640199c1:	mov    ecx,eax
640199c3:	mov    ebx,DWORD PTR [esp+0x10]
640199c7:	mov    edx,DWORD PTR [esp+0xc]
640199cb:	mov    eax,DWORD PTR [esp+0x8]
640199cf:	shr    ecx,1
640199d1:	rcr    ebx,1
640199d3:	shr    edx,1
640199d5:	rcr    eax,1
640199d7:	or     ecx,ecx
640199d9:	jne    0x640199cf
640199db:	div    ebx
640199dd:	mov    esi,eax
640199df:	mul    DWORD PTR [esp+0x14]
640199e3:	mov    ecx,eax
640199e5:	mov    eax,DWORD PTR [esp+0x10]
640199e9:	mul    esi
640199eb:	add    edx,ecx
640199ed:	jb     0x640199fd
640199ef:	cmp    edx,DWORD PTR [esp+0xc]
640199f3:	ja     0x640199fd
640199f5:	jb     0x64019a06
640199f7:	cmp    eax,DWORD PTR [esp+0x8]
640199fb:	jbe    0x64019a06
640199fd:	dec    esi
640199fe:	sub    eax,DWORD PTR [esp+0x10]
64019a02:	sbb    edx,DWORD PTR [esp+0x14]
64019a06:	xor    ebx,ebx
64019a08:	sub    eax,DWORD PTR [esp+0x8]
64019a0c:	sbb    edx,DWORD PTR [esp+0xc]
64019a10:	neg    edx
64019a12:	neg    eax
64019a14:	sbb    edx,0x0
64019a17:	mov    ecx,edx
64019a19:	mov    edx,ebx
64019a1b:	mov    ebx,ecx
64019a1d:	mov    ecx,eax
64019a1f:	mov    eax,esi
64019a21:	pop    esi
64019a22:	ret    0x10
64019a25:	push   ebp
64019a26:	mov    ebp,esp
64019a28:	sub    esp,0x14
64019a2b:	mov    eax,ds:0x6402d09c
64019a30:	xor    eax,ebp
64019a32:	mov    DWORD PTR [ebp-0x4],eax
64019a35:	push   ebx
64019a36:	push   esi
64019a37:	xor    ebx,ebx
64019a39:	cmp    DWORD PTR ds:0x6402ea70,ebx
64019a3f:	push   edi
64019a40:	mov    esi,ecx
64019a42:	jne    0x64019a7c
64019a44:	push   ebx
64019a45:	push   ebx
64019a46:	xor    edi,edi
64019a48:	inc    edi
64019a49:	push   edi
64019a4a:	push   0x640276e4
64019a4f:	push   0x100
64019a54:	push   ebx
64019a55:	call   DWORD PTR ds:0x64025158
64019a5b:	test   eax,eax
64019a5d:	je     0x64019a67
64019a5f:	mov    DWORD PTR ds:0x6402ea70,edi
64019a65:	jmp    0x64019a7c
64019a67:	call   DWORD PTR ds:0x64025044
64019a6d:	cmp    eax,0x78
64019a70:	jne    0x64019a7c
64019a72:	mov    DWORD PTR ds:0x6402ea70,0x2
64019a7c:	cmp    DWORD PTR [ebp+0x14],ebx
64019a7f:	jle    0x64019aa3
64019a81:	mov    ecx,DWORD PTR [ebp+0x14]
64019a84:	mov    eax,DWORD PTR [ebp+0x10]
64019a87:	dec    ecx
64019a88:	cmp    BYTE PTR [eax],bl
64019a8a:	je     0x64019a94
64019a8c:	inc    eax
64019a8d:	cmp    ecx,ebx
64019a8f:	jne    0x64019a87
64019a91:	or     ecx,0xffffffff
64019a94:	mov    eax,DWORD PTR [ebp+0x14]
64019a97:	sub    eax,ecx
64019a99:	dec    eax
64019a9a:	cmp    eax,DWORD PTR [ebp+0x14]
64019a9d:	jge    0x64019aa0
64019a9f:	inc    eax
64019aa0:	mov    DWORD PTR [ebp+0x14],eax
64019aa3:	mov    eax,ds:0x6402ea70
64019aa8:	cmp    eax,0x2
64019aab:	je     0x64019c5c
64019ab1:	cmp    eax,ebx
64019ab3:	je     0x64019c5c
64019ab9:	cmp    eax,0x1
64019abc:	jne    0x64019c8d
64019ac2:	cmp    DWORD PTR [ebp+0x20],ebx
64019ac5:	mov    DWORD PTR [ebp-0x8],ebx
64019ac8:	jne    0x64019ad2
64019aca:	mov    eax,DWORD PTR [esi]
64019acc:	mov    eax,DWORD PTR [eax+0x4]
64019acf:	mov    DWORD PTR [ebp+0x20],eax
64019ad2:	mov    esi,DWORD PTR ds:0x64025024
64019ad8:	xor    eax,eax
64019ada:	cmp    DWORD PTR [ebp+0x24],ebx
64019add:	push   ebx
64019ade:	push   ebx
64019adf:	push   DWORD PTR [ebp+0x14]
64019ae2:	setne  al
64019ae5:	push   DWORD PTR [ebp+0x10]
64019ae8:	lea    eax,[eax*8+0x1]
64019aef:	push   eax
64019af0:	push   DWORD PTR [ebp+0x20]
64019af3:	call   esi
64019af5:	mov    edi,eax
64019af7:	cmp    edi,ebx
64019af9:	je     0x64019c8d
64019aff:	jle    0x64019b44
64019b01:	push   0xffffffe0
64019b03:	xor    edx,edx
64019b05:	pop    eax
64019b06:	div    edi
64019b08:	cmp    eax,0x2
64019b0b:	jb     0x64019b44
64019b0d:	lea    eax,[edi+edi*1+0x8]
64019b11:	cmp    eax,0x400
64019b16:	ja     0x64019b2b
64019b18:	call   0x64013240
64019b1d:	mov    eax,esp
64019b1f:	cmp    eax,ebx
64019b21:	je     0x64019b3f
64019b23:	mov    DWORD PTR [eax],0xcccc
64019b29:	jmp    0x64019b3c
64019b2b:	push   eax
64019b2c:	call   0x64013a33
64019b31:	cmp    eax,ebx
64019b33:	pop    ecx
64019b34:	je     0x64019b3f
64019b36:	mov    DWORD PTR [eax],0xdddd
64019b3c:	add    eax,0x8
64019b3f:	mov    DWORD PTR [ebp-0xc],eax
64019b42:	jmp    0x64019b47
64019b44:	mov    DWORD PTR [ebp-0xc],ebx
64019b47:	cmp    DWORD PTR [ebp-0xc],ebx
64019b4a:	je     0x64019c8d
64019b50:	push   edi
64019b51:	push   DWORD PTR [ebp-0xc]
64019b54:	push   DWORD PTR [ebp+0x14]
64019b57:	push   DWORD PTR [ebp+0x10]
64019b5a:	push   0x1
64019b5c:	push   DWORD PTR [ebp+0x20]
64019b5f:	call   esi
64019b61:	test   eax,eax
64019b63:	je     0x64019c4b
64019b69:	mov    esi,DWORD PTR ds:0x64025158
64019b6f:	push   ebx
64019b70:	push   ebx
64019b71:	push   edi
64019b72:	push   DWORD PTR [ebp-0xc]
64019b75:	push   DWORD PTR [ebp+0xc]
64019b78:	push   DWORD PTR [ebp+0x8]
64019b7b:	call   esi
64019b7d:	mov    ecx,eax
64019b7f:	cmp    ecx,ebx
64019b81:	mov    DWORD PTR [ebp-0x8],ecx
64019b84:	je     0x64019c4b
64019b8a:	test   WORD PTR [ebp+0xc],0x400
64019b90:	je     0x64019bbb
64019b92:	cmp    DWORD PTR [ebp+0x1c],ebx
64019b95:	je     0x64019c4b
64019b9b:	cmp    ecx,DWORD PTR [ebp+0x1c]
64019b9e:	jg     0x64019c4b
64019ba4:	push   DWORD PTR [ebp+0x1c]
64019ba7:	push   DWORD PTR [ebp+0x18]
64019baa:	push   edi
64019bab:	push   DWORD PTR [ebp-0xc]
64019bae:	push   DWORD PTR [ebp+0xc]
64019bb1:	push   DWORD PTR [ebp+0x8]
64019bb4:	call   esi
64019bb6:	jmp    0x64019c4b
64019bbb:	cmp    ecx,ebx
64019bbd:	jle    0x64019c04
64019bbf:	push   0xffffffe0
64019bc1:	xor    edx,edx
64019bc3:	pop    eax
64019bc4:	div    ecx
64019bc6:	cmp    eax,0x2
64019bc9:	jb     0x64019c04
64019bcb:	lea    eax,[ecx+ecx*1+0x8]
64019bcf:	cmp    eax,0x400
64019bd4:	ja     0x64019bec
64019bd6:	call   0x64013240
64019bdb:	mov    esi,esp
64019bdd:	cmp    esi,ebx
64019bdf:	je     0x64019c4b
64019be1:	mov    DWORD PTR [esi],0xcccc
64019be7:	add    esi,0x8
64019bea:	jmp    0x64019c06
64019bec:	push   eax
64019bed:	call   0x64013a33
64019bf2:	cmp    eax,ebx
64019bf4:	pop    ecx
64019bf5:	je     0x64019c00
64019bf7:	mov    DWORD PTR [eax],0xdddd
64019bfd:	add    eax,0x8
64019c00:	mov    esi,eax
64019c02:	jmp    0x64019c06
64019c04:	xor    esi,esi
64019c06:	cmp    esi,ebx
64019c08:	je     0x64019c4b
64019c0a:	push   DWORD PTR [ebp-0x8]
64019c0d:	push   esi
64019c0e:	push   edi
64019c0f:	push   DWORD PTR [ebp-0xc]
64019c12:	push   DWORD PTR [ebp+0xc]
64019c15:	push   DWORD PTR [ebp+0x8]
64019c18:	call   DWORD PTR ds:0x64025158
64019c1e:	test   eax,eax
64019c20:	je     0x64019c44
64019c22:	cmp    DWORD PTR [ebp+0x1c],ebx
64019c25:	push   ebx
64019c26:	push   ebx
64019c27:	jne    0x64019c2d
64019c29:	push   ebx
64019c2a:	push   ebx
64019c2b:	jmp    0x64019c33
64019c2d:	push   DWORD PTR [ebp+0x1c]
64019c30:	push   DWORD PTR [ebp+0x18]
64019c33:	push   DWORD PTR [ebp-0x8]
64019c36:	push   esi
64019c37:	push   ebx
64019c38:	push   DWORD PTR [ebp+0x20]
64019c3b:	call   DWORD PTR ds:0x64025028
64019c41:	mov    DWORD PTR [ebp-0x8],eax
64019c44:	push   esi
64019c45:	call   0x64012fcc
64019c4a:	pop    ecx
64019c4b:	push   DWORD PTR [ebp-0xc]
64019c4e:	call   0x64012fcc
64019c53:	mov    eax,DWORD PTR [ebp-0x8]
64019c56:	pop    ecx
64019c57:	jmp    0x64019db5
64019c5c:	cmp    DWORD PTR [ebp+0x8],ebx
64019c5f:	mov    DWORD PTR [ebp-0xc],ebx
64019c62:	mov    DWORD PTR [ebp-0x10],ebx
64019c65:	jne    0x64019c6f
64019c67:	mov    eax,DWORD PTR [esi]
64019c69:	mov    eax,DWORD PTR [eax+0x14]
64019c6c:	mov    DWORD PTR [ebp+0x8],eax
64019c6f:	cmp    DWORD PTR [ebp+0x20],ebx
64019c72:	jne    0x64019c7c
64019c74:	mov    eax,DWORD PTR [esi]
64019c76:	mov    eax,DWORD PTR [eax+0x4]
64019c79:	mov    DWORD PTR [ebp+0x20],eax
64019c7c:	push   DWORD PTR [ebp+0x8]
64019c7f:	call   0x6401d62f
64019c84:	cmp    eax,0xffffffff
64019c87:	pop    ecx
64019c88:	mov    DWORD PTR [ebp-0x14],eax
64019c8b:	jne    0x64019c94
64019c8d:	xor    eax,eax
64019c8f:	jmp    0x64019db5
64019c94:	cmp    eax,DWORD PTR [ebp+0x20]
64019c97:	je     0x64019d78
64019c9d:	push   ebx
64019c9e:	push   ebx
64019c9f:	lea    ecx,[ebp+0x14]
64019ca2:	push   ecx
64019ca3:	push   DWORD PTR [ebp+0x10]
64019ca6:	push   eax
64019ca7:	push   DWORD PTR [ebp+0x20]
64019caa:	call   0x6401d676
64019caf:	add    esp,0x18
64019cb2:	cmp    eax,ebx
64019cb4:	mov    DWORD PTR [ebp-0xc],eax
64019cb7:	je     0x64019c8d
64019cb9:	mov    esi,DWORD PTR ds:0x64025154
64019cbf:	push   ebx
64019cc0:	push   ebx
64019cc1:	push   DWORD PTR [ebp+0x14]
64019cc4:	push   eax
64019cc5:	push   DWORD PTR [ebp+0xc]
64019cc8:	push   DWORD PTR [ebp+0x8]
64019ccb:	call   esi
64019ccd:	cmp    eax,ebx
64019ccf:	mov    DWORD PTR [ebp-0x8],eax
64019cd2:	jne    0x64019cdb
64019cd4:	xor    esi,esi
64019cd6:	jmp    0x64019d92
64019cdb:	jle    0x64019d1a
64019cdd:	cmp    eax,0xffffffe0
64019ce0:	ja     0x64019d1a
64019ce2:	add    eax,0x8
64019ce5:	cmp    eax,0x400
64019cea:	ja     0x64019d02
64019cec:	call   0x64013240
64019cf1:	mov    edi,esp
64019cf3:	cmp    edi,ebx
64019cf5:	je     0x64019cd4
64019cf7:	mov    DWORD PTR [edi],0xcccc
64019cfd:	add    edi,0x8
64019d00:	jmp    0x64019d1c
64019d02:	push   eax
64019d03:	call   0x64013a33
64019d08:	cmp    eax,ebx
64019d0a:	pop    ecx
64019d0b:	je     0x64019d16
64019d0d:	mov    DWORD PTR [eax],0xdddd
64019d13:	add    eax,0x8
64019d16:	mov    edi,eax
64019d18:	jmp    0x64019d1c
64019d1a:	xor    edi,edi
64019d1c:	cmp    edi,ebx
64019d1e:	je     0x64019cd4
64019d20:	push   DWORD PTR [ebp-0x8]
64019d23:	push   ebx
64019d24:	push   edi
64019d25:	call   0x640131c0
64019d2a:	add    esp,0xc
64019d2d:	push   DWORD PTR [ebp-0x8]
64019d30:	push   edi
64019d31:	push   DWORD PTR [ebp+0x14]
64019d34:	push   DWORD PTR [ebp-0xc]
64019d37:	push   DWORD PTR [ebp+0xc]
64019d3a:	push   DWORD PTR [ebp+0x8]
64019d3d:	call   esi
64019d3f:	cmp    eax,ebx
64019d41:	mov    DWORD PTR [ebp-0x8],eax
64019d44:	jne    0x64019d4a
64019d46:	xor    esi,esi
64019d48:	jmp    0x64019d6f
64019d4a:	push   DWORD PTR [ebp+0x1c]
64019d4d:	lea    eax,[ebp-0x8]
64019d50:	push   DWORD PTR [ebp+0x18]
64019d53:	push   eax
64019d54:	push   edi
64019d55:	push   DWORD PTR [ebp+0x20]
64019d58:	push   DWORD PTR [ebp-0x14]
64019d5b:	call   0x6401d676
64019d60:	mov    esi,eax
64019d62:	mov    DWORD PTR [ebp-0x10],esi
64019d65:	add    esp,0x18
64019d68:	neg    esi
64019d6a:	sbb    esi,esi
64019d6c:	and    esi,DWORD PTR [ebp-0x8]
64019d6f:	push   edi
64019d70:	call   0x64012fcc
64019d75:	pop    ecx
64019d76:	jmp    0x64019d92
64019d78:	push   DWORD PTR [ebp+0x1c]
64019d7b:	push   DWORD PTR [ebp+0x18]
64019d7e:	push   DWORD PTR [ebp+0x14]
64019d81:	push   DWORD PTR [ebp+0x10]
64019d84:	push   DWORD PTR [ebp+0xc]
64019d87:	push   DWORD PTR [ebp+0x8]
64019d8a:	call   DWORD PTR ds:0x64025154
64019d90:	mov    esi,eax
64019d92:	cmp    DWORD PTR [ebp-0xc],ebx
64019d95:	je     0x64019da0
64019d97:	push   DWORD PTR [ebp-0xc]
64019d9a:	call   0x64013956
64019d9f:	pop    ecx
64019da0:	mov    eax,DWORD PTR [ebp-0x10]
64019da3:	cmp    eax,ebx
64019da5:	je     0x64019db3
64019da7:	cmp    DWORD PTR [ebp+0x18],eax
64019daa:	je     0x64019db3
64019dac:	push   eax
64019dad:	call   0x64013956
64019db2:	pop    ecx
64019db3:	mov    eax,esi
64019db5:	lea    esp,[ebp-0x20]
64019db8:	pop    edi
64019db9:	pop    esi
64019dba:	pop    ebx
64019dbb:	mov    ecx,DWORD PTR [ebp-0x4]
64019dbe:	xor    ecx,ebp
64019dc0:	call   0x64012abc
64019dc5:	leave  
64019dc6:	ret    
64019dc7:	push   ebp
64019dc8:	mov    ebp,esp
64019dca:	sub    esp,0x10
64019dcd:	push   DWORD PTR [ebp+0x8]
64019dd0:	lea    ecx,[ebp-0x10]
64019dd3:	call   0x64012c5f
64019dd8:	push   DWORD PTR [ebp+0x28]
64019ddb:	lea    ecx,[ebp-0x10]
64019dde:	push   DWORD PTR [ebp+0x24]
64019de1:	push   DWORD PTR [ebp+0x20]
64019de4:	push   DWORD PTR [ebp+0x1c]
64019de7:	push   DWORD PTR [ebp+0x18]
64019dea:	push   DWORD PTR [ebp+0x14]
64019ded:	push   DWORD PTR [ebp+0x10]
64019df0:	push   DWORD PTR [ebp+0xc]
64019df3:	call   0x64019a25
64019df8:	add    esp,0x20
64019dfb:	cmp    BYTE PTR [ebp-0x4],0x0
64019dff:	je     0x64019e08
64019e01:	mov    ecx,DWORD PTR [ebp-0x8]
64019e04:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019e08:	leave  
64019e09:	ret    
64019e0a:	push   ebp
64019e0b:	mov    ebp,esp
64019e0d:	sub    esp,0x10
64019e10:	push   DWORD PTR [ebp+0xc]
64019e13:	lea    ecx,[ebp-0x10]
64019e16:	call   0x64012c5f
64019e1b:	movzx  eax,BYTE PTR [ebp+0x8]
64019e1f:	mov    ecx,DWORD PTR [ebp-0x10]
64019e22:	mov    ecx,DWORD PTR [ecx+0xc8]
64019e28:	movzx  eax,WORD PTR [ecx+eax*2]
64019e2c:	and    eax,0x8000
64019e31:	cmp    BYTE PTR [ebp-0x4],0x0
64019e35:	je     0x64019e3e
64019e37:	mov    ecx,DWORD PTR [ebp-0x8]
64019e3a:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019e3e:	leave  
64019e3f:	ret    
64019e40:	push   0x0
64019e42:	push   DWORD PTR [esp+0x8]
64019e46:	call   0x64019e0a
64019e4b:	pop    ecx
64019e4c:	pop    ecx
64019e4d:	ret    
64019e4e:	push   ebp
64019e4f:	mov    ebp,esp
64019e51:	sub    esp,0x18
64019e54:	push   ebx
64019e55:	push   DWORD PTR [ebp+0x10]
64019e58:	lea    ecx,[ebp-0x18]
64019e5b:	call   0x64012c5f
64019e60:	mov    ebx,DWORD PTR [ebp+0x8]
64019e63:	lea    eax,[ebx+0x1]
64019e66:	cmp    eax,0x100
64019e6b:	ja     0x64019e7c
64019e6d:	mov    eax,DWORD PTR [ebp-0x18]
64019e70:	mov    eax,DWORD PTR [eax+0xc8]
64019e76:	movzx  eax,WORD PTR [eax+ebx*2]
64019e7a:	jmp    0x64019ef1
64019e7c:	mov    DWORD PTR [ebp+0x8],ebx
64019e7f:	sar    DWORD PTR [ebp+0x8],0x8
64019e83:	lea    eax,[ebp-0x18]
64019e86:	push   eax
64019e87:	mov    eax,DWORD PTR [ebp+0x8]
64019e8a:	and    eax,0xff
64019e8f:	push   eax
64019e90:	call   0x64019e0a
64019e95:	test   eax,eax
64019e97:	pop    ecx
64019e98:	pop    ecx
64019e99:	je     0x64019ead
64019e9b:	mov    al,BYTE PTR [ebp+0x8]
64019e9e:	push   0x2
64019ea0:	mov    BYTE PTR [ebp-0x8],al
64019ea3:	mov    BYTE PTR [ebp-0x7],bl
64019ea6:	mov    BYTE PTR [ebp-0x6],0x0
64019eaa:	pop    ecx
64019eab:	jmp    0x64019eb7
64019ead:	xor    ecx,ecx
64019eaf:	mov    BYTE PTR [ebp-0x8],bl
64019eb2:	mov    BYTE PTR [ebp-0x7],0x0
64019eb6:	inc    ecx
64019eb7:	mov    eax,DWORD PTR [ebp-0x18]
64019eba:	push   0x1
64019ebc:	push   DWORD PTR [eax+0x14]
64019ebf:	push   DWORD PTR [eax+0x4]
64019ec2:	lea    eax,[ebp-0x4]
64019ec5:	push   eax
64019ec6:	push   ecx
64019ec7:	lea    eax,[ebp-0x8]
64019eca:	push   eax
64019ecb:	lea    eax,[ebp-0x18]
64019ece:	push   0x1
64019ed0:	push   eax
64019ed1:	call   0x6401b9b5
64019ed6:	add    esp,0x20
64019ed9:	test   eax,eax
64019edb:	jne    0x64019eed
64019edd:	cmp    BYTE PTR [ebp-0xc],al
64019ee0:	je     0x64019ee9
64019ee2:	mov    eax,DWORD PTR [ebp-0x10]
64019ee5:	and    DWORD PTR [eax+0x70],0xfffffffd
64019ee9:	xor    eax,eax
64019eeb:	jmp    0x64019f01
64019eed:	movzx  eax,WORD PTR [ebp-0x4]
64019ef1:	and    eax,DWORD PTR [ebp+0xc]
64019ef4:	cmp    BYTE PTR [ebp-0xc],0x0
64019ef8:	je     0x64019f01
64019efa:	mov    ecx,DWORD PTR [ebp-0x10]
64019efd:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019f01:	pop    ebx
64019f02:	leave  
64019f03:	ret    
64019f04:	push   esi
64019f05:	push   edi
64019f06:	xor    esi,esi
64019f08:	mov    edi,0x6402ea78
64019f0d:	cmp    DWORD PTR [esi*8+0x6402d964],0x1
64019f15:	jne    0x64019f35
64019f17:	lea    eax,[esi*8+0x6402d960]
64019f1e:	mov    DWORD PTR [eax],edi
64019f20:	push   0xfa0
64019f25:	push   DWORD PTR [eax]
64019f27:	add    edi,0x18
64019f2a:	call   0x6401b738
64019f2f:	test   eax,eax
64019f31:	pop    ecx
64019f32:	pop    ecx
64019f33:	je     0x64019f41
64019f35:	inc    esi
64019f36:	cmp    esi,0x24
64019f39:	jl     0x64019f0d
64019f3b:	xor    eax,eax
64019f3d:	inc    eax
64019f3e:	pop    edi
64019f3f:	pop    esi
64019f40:	ret    
64019f41:	and    DWORD PTR [esi*8+0x6402d960],0x0
64019f49:	xor    eax,eax
64019f4b:	jmp    0x64019f3e
64019f4d:	push   ebx
64019f4e:	mov    ebx,DWORD PTR ds:0x640250a0
64019f54:	push   esi
64019f55:	mov    esi,0x6402d960
64019f5a:	push   edi
64019f5b:	mov    edi,DWORD PTR [esi]
64019f5d:	test   edi,edi
64019f5f:	je     0x64019f74
64019f61:	cmp    DWORD PTR [esi+0x4],0x1
64019f65:	je     0x64019f74
64019f67:	push   edi
64019f68:	call   ebx
64019f6a:	push   edi
64019f6b:	call   0x64013956
64019f70:	and    DWORD PTR [esi],0x0
64019f73:	pop    ecx
64019f74:	add    esi,0x8
64019f77:	cmp    esi,0x6402da80
64019f7d:	jl     0x64019f5b
64019f7f:	mov    esi,0x6402d960
64019f84:	pop    edi
64019f85:	mov    eax,DWORD PTR [esi]
64019f87:	test   eax,eax
64019f89:	je     0x64019f94
64019f8b:	cmp    DWORD PTR [esi+0x4],0x1
64019f8f:	jne    0x64019f94
64019f91:	push   eax
64019f92:	call   ebx
64019f94:	add    esi,0x8
64019f97:	cmp    esi,0x6402da80
64019f9d:	jl     0x64019f85
64019f9f:	pop    esi
64019fa0:	pop    ebx
64019fa1:	ret    
64019fa2:	push   ebp
64019fa3:	mov    ebp,esp
64019fa5:	mov    eax,DWORD PTR [ebp+0x8]
64019fa8:	push   DWORD PTR [eax*8+0x6402d960]
64019faf:	call   DWORD PTR ds:0x6402509c
64019fb5:	pop    ebp
64019fb6:	ret    
64019fb7:	push   0xc
64019fb9:	push   0x6402a878
64019fbe:	call   0x64014080
64019fc3:	xor    edi,edi
64019fc5:	inc    edi
64019fc6:	mov    DWORD PTR [ebp-0x1c],edi
64019fc9:	xor    ebx,ebx
64019fcb:	cmp    DWORD PTR ds:0x6402ea6c,ebx
64019fd1:	jne    0x64019feb
64019fd3:	call   0x6401ad4a
64019fd8:	push   0x1e
64019fda:	call   0x6401abaa
64019fdf:	push   0xff
64019fe4:	call   0x64015f50
64019fe9:	pop    ecx
64019fea:	pop    ecx
64019feb:	mov    esi,DWORD PTR [ebp+0x8]
64019fee:	lea    esi,[esi*8+0x6402d960]
64019ff5:	cmp    DWORD PTR [esi],ebx
64019ff7:	je     0x64019ffd
64019ff9:	mov    eax,edi
64019ffb:	jmp    0x6401a06b
64019ffd:	push   0x18
64019fff:	call   0x64015d90
6401a004:	pop    ecx
6401a005:	mov    edi,eax
6401a007:	cmp    edi,ebx
6401a009:	jne    0x6401a01a
6401a00b:	call   0x64014880
6401a010:	mov    DWORD PTR [eax],0xc
6401a016:	xor    eax,eax
6401a018:	jmp    0x6401a06b
6401a01a:	push   0xa
6401a01c:	call   0x6401a07a
6401a021:	pop    ecx
6401a022:	mov    DWORD PTR [ebp-0x4],ebx
6401a025:	cmp    DWORD PTR [esi],ebx
6401a027:	jne    0x6401a055
6401a029:	push   0xfa0
6401a02e:	push   edi
6401a02f:	call   0x6401b738
6401a034:	pop    ecx
6401a035:	pop    ecx
6401a036:	test   eax,eax
6401a038:	jne    0x6401a051
6401a03a:	push   edi
6401a03b:	call   0x64013956
6401a040:	pop    ecx
6401a041:	call   0x64014880
6401a046:	mov    DWORD PTR [eax],0xc
6401a04c:	mov    DWORD PTR [ebp-0x1c],ebx
6401a04f:	jmp    0x6401a05c
6401a051:	mov    DWORD PTR [esi],edi
6401a053:	jmp    0x6401a05c
6401a055:	push   edi
6401a056:	call   0x64013956
6401a05b:	pop    ecx
6401a05c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a063:	call   0x6401a071
6401a068:	mov    eax,DWORD PTR [ebp-0x1c]
6401a06b:	call   0x640140c5
6401a070:	ret    
6401a071:	push   0xa
6401a073:	call   0x64019fa2
6401a078:	pop    ecx
6401a079:	ret    
6401a07a:	push   ebp
6401a07b:	mov    ebp,esp
6401a07d:	mov    eax,DWORD PTR [ebp+0x8]
6401a080:	push   esi
6401a081:	lea    esi,[eax*8+0x6402d960]
6401a088:	cmp    DWORD PTR [esi],0x0
6401a08b:	jne    0x6401a0a0
6401a08d:	push   eax
6401a08e:	call   0x64019fb7
6401a093:	test   eax,eax
6401a095:	pop    ecx
6401a096:	jne    0x6401a0a0
6401a098:	push   0x11
6401a09a:	call   0x64015f06
6401a09f:	pop    ecx
6401a0a0:	push   DWORD PTR [esi]
6401a0a2:	call   DWORD PTR ds:0x64025098
6401a0a8:	pop    esi
6401a0a9:	pop    ebp
6401a0aa:	ret    
6401a0ab:	push   0x140
6401a0b0:	push   0x0
6401a0b2:	push   DWORD PTR ds:0x6402ea6c
6401a0b8:	call   DWORD PTR ds:0x64025100
6401a0be:	test   eax,eax
6401a0c0:	mov    ds:0x640324c8,eax
6401a0c5:	jne    0x6401a0c8
6401a0c7:	ret    
6401a0c8:	mov    ecx,DWORD PTR [esp+0x4]
6401a0cc:	and    DWORD PTR ds:0x6402ebc8,0x0
6401a0d3:	and    DWORD PTR ds:0x640324c4,0x0
6401a0da:	mov    ds:0x640324d0,eax
6401a0df:	xor    eax,eax
6401a0e1:	mov    DWORD PTR ds:0x640324cc,ecx
6401a0e7:	mov    DWORD PTR ds:0x640324d4,0x10
6401a0f1:	inc    eax
6401a0f2:	ret    
6401a0f3:	mov    ecx,DWORD PTR ds:0x640324c4
6401a0f9:	mov    eax,ds:0x640324c8
6401a0fe:	imul   ecx,ecx,0x14
6401a101:	add    ecx,eax
6401a103:	jmp    0x6401a117
6401a105:	mov    edx,DWORD PTR [esp+0x4]
6401a109:	sub    edx,DWORD PTR [eax+0xc]
6401a10c:	cmp    edx,0x100000
6401a112:	jb     0x6401a11d
6401a114:	add    eax,0x14
6401a117:	cmp    eax,ecx
6401a119:	jb     0x6401a105
6401a11b:	xor    eax,eax
6401a11d:	ret    
6401a11e:	push   ebp
6401a11f:	mov    ebp,esp
6401a121:	sub    esp,0x10
6401a124:	mov    ecx,DWORD PTR [ebp+0x8]
6401a127:	mov    eax,DWORD PTR [ecx+0x10]
6401a12a:	push   esi
6401a12b:	mov    esi,DWORD PTR [ebp+0xc]
6401a12e:	push   edi
6401a12f:	mov    edi,esi
6401a131:	sub    edi,DWORD PTR [ecx+0xc]
6401a134:	add    esi,0xfffffffc
6401a137:	shr    edi,0xf
6401a13a:	mov    ecx,edi
6401a13c:	imul   ecx,ecx,0x204
6401a142:	lea    ecx,[ecx+eax*1+0x144]
6401a149:	mov    DWORD PTR [ebp-0x10],ecx
6401a14c:	mov    ecx,DWORD PTR [esi]
6401a14e:	dec    ecx
6401a14f:	test   cl,0x1
6401a152:	mov    DWORD PTR [ebp-0x4],ecx
6401a155:	jne    0x6401a42e
6401a15b:	push   ebx
6401a15c:	lea    ebx,[ecx+esi*1]
6401a15f:	mov    edx,DWORD PTR [ebx]
6401a161:	mov    DWORD PTR [ebp-0xc],edx
6401a164:	mov    edx,DWORD PTR [esi-0x4]
6401a167:	mov    DWORD PTR [ebp-0x8],edx
6401a16a:	mov    edx,DWORD PTR [ebp-0xc]
6401a16d:	test   dl,0x1
6401a170:	mov    DWORD PTR [ebp+0xc],ebx
6401a173:	jne    0x6401a1e9
6401a175:	sar    edx,0x4
6401a178:	dec    edx
6401a179:	cmp    edx,0x3f
6401a17c:	jbe    0x6401a181
6401a17e:	push   0x3f
6401a180:	pop    edx
6401a181:	mov    ecx,DWORD PTR [ebx+0x4]
6401a184:	cmp    ecx,DWORD PTR [ebx+0x8]
6401a187:	jne    0x6401a1cb
6401a189:	cmp    edx,0x20
6401a18c:	mov    ebx,0x80000000
6401a191:	jae    0x6401a1ac
6401a193:	mov    ecx,edx
6401a195:	shr    ebx,cl
6401a197:	lea    ecx,[edx+eax*1+0x4]
6401a19b:	not    ebx
6401a19d:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401a1a1:	dec    BYTE PTR [ecx]
6401a1a3:	jne    0x6401a1c8
6401a1a5:	mov    ecx,DWORD PTR [ebp+0x8]
6401a1a8:	and    DWORD PTR [ecx],ebx
6401a1aa:	jmp    0x6401a1c8
6401a1ac:	lea    ecx,[edx-0x20]
6401a1af:	shr    ebx,cl
6401a1b1:	lea    ecx,[edx+eax*1+0x4]
6401a1b5:	not    ebx
6401a1b7:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401a1be:	dec    BYTE PTR [ecx]
6401a1c0:	jne    0x6401a1c8
6401a1c2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a1c5:	and    DWORD PTR [ecx+0x4],ebx
6401a1c8:	mov    ebx,DWORD PTR [ebp+0xc]
6401a1cb:	mov    edx,DWORD PTR [ebx+0x8]
6401a1ce:	mov    ebx,DWORD PTR [ebx+0x4]
6401a1d1:	mov    ecx,DWORD PTR [ebp-0x4]
6401a1d4:	add    ecx,DWORD PTR [ebp-0xc]
6401a1d7:	mov    DWORD PTR [edx+0x4],ebx
6401a1da:	mov    edx,DWORD PTR [ebp+0xc]
6401a1dd:	mov    ebx,DWORD PTR [edx+0x4]
6401a1e0:	mov    edx,DWORD PTR [edx+0x8]
6401a1e3:	mov    DWORD PTR [ebx+0x8],edx
6401a1e6:	mov    DWORD PTR [ebp-0x4],ecx
6401a1e9:	mov    edx,ecx
6401a1eb:	sar    edx,0x4
6401a1ee:	dec    edx
6401a1ef:	cmp    edx,0x3f
6401a1f2:	jbe    0x6401a1f7
6401a1f4:	push   0x3f
6401a1f6:	pop    edx
6401a1f7:	mov    ebx,DWORD PTR [ebp-0x8]
6401a1fa:	and    ebx,0x1
6401a1fd:	mov    DWORD PTR [ebp-0xc],ebx
6401a200:	jne    0x6401a295
6401a206:	sub    esi,DWORD PTR [ebp-0x8]
6401a209:	mov    ebx,DWORD PTR [ebp-0x8]
6401a20c:	sar    ebx,0x4
6401a20f:	push   0x3f
6401a211:	mov    DWORD PTR [ebp+0xc],esi
6401a214:	dec    ebx
6401a215:	pop    esi
6401a216:	cmp    ebx,esi
6401a218:	jbe    0x6401a21c
6401a21a:	mov    ebx,esi
6401a21c:	add    ecx,DWORD PTR [ebp-0x8]
6401a21f:	mov    edx,ecx
6401a221:	sar    edx,0x4
6401a224:	dec    edx
6401a225:	cmp    edx,esi
6401a227:	mov    DWORD PTR [ebp-0x4],ecx
6401a22a:	jbe    0x6401a22e
6401a22c:	mov    edx,esi
6401a22e:	cmp    ebx,edx
6401a230:	je     0x6401a290
6401a232:	mov    ecx,DWORD PTR [ebp+0xc]
6401a235:	mov    esi,DWORD PTR [ecx+0x4]
6401a238:	cmp    esi,DWORD PTR [ecx+0x8]
6401a23b:	jne    0x6401a278
6401a23d:	cmp    ebx,0x20
6401a240:	mov    esi,0x80000000
6401a245:	jae    0x6401a25e
6401a247:	mov    ecx,ebx
6401a249:	shr    esi,cl
6401a24b:	not    esi
6401a24d:	and    DWORD PTR [eax+edi*4+0x44],esi
6401a251:	dec    BYTE PTR [ebx+eax*1+0x4]
6401a255:	jne    0x6401a278
6401a257:	mov    ecx,DWORD PTR [ebp+0x8]
6401a25a:	and    DWORD PTR [ecx],esi
6401a25c:	jmp    0x6401a278
6401a25e:	lea    ecx,[ebx-0x20]
6401a261:	shr    esi,cl
6401a263:	not    esi
6401a265:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401a26c:	dec    BYTE PTR [ebx+eax*1+0x4]
6401a270:	jne    0x6401a278
6401a272:	mov    ecx,DWORD PTR [ebp+0x8]
6401a275:	and    DWORD PTR [ecx+0x4],esi
6401a278:	mov    ecx,DWORD PTR [ebp+0xc]
6401a27b:	mov    esi,DWORD PTR [ecx+0x8]
6401a27e:	mov    ecx,DWORD PTR [ecx+0x4]
6401a281:	mov    DWORD PTR [esi+0x4],ecx
6401a284:	mov    ecx,DWORD PTR [ebp+0xc]
6401a287:	mov    esi,DWORD PTR [ecx+0x4]
6401a28a:	mov    ecx,DWORD PTR [ecx+0x8]
6401a28d:	mov    DWORD PTR [esi+0x8],ecx
6401a290:	mov    esi,DWORD PTR [ebp+0xc]
6401a293:	jmp    0x6401a298
6401a295:	mov    ebx,DWORD PTR [ebp+0x8]
6401a298:	cmp    DWORD PTR [ebp-0xc],0x0
6401a29c:	jne    0x6401a2a6
6401a29e:	cmp    ebx,edx
6401a2a0:	je     0x6401a326
6401a2a6:	mov    ecx,DWORD PTR [ebp-0x10]
6401a2a9:	lea    ecx,[ecx+edx*8]
6401a2ac:	mov    ebx,DWORD PTR [ecx+0x4]
6401a2af:	mov    DWORD PTR [esi+0x8],ecx
6401a2b2:	mov    DWORD PTR [esi+0x4],ebx
6401a2b5:	mov    DWORD PTR [ecx+0x4],esi
6401a2b8:	mov    ecx,DWORD PTR [esi+0x4]
6401a2bb:	mov    DWORD PTR [ecx+0x8],esi
6401a2be:	mov    ecx,DWORD PTR [esi+0x4]
6401a2c1:	cmp    ecx,DWORD PTR [esi+0x8]
6401a2c4:	jne    0x6401a326
6401a2c6:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401a2ca:	mov    BYTE PTR [ebp+0xf],cl
6401a2cd:	inc    cl
6401a2cf:	cmp    edx,0x20
6401a2d2:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401a2d6:	jae    0x6401a2fd
6401a2d8:	cmp    BYTE PTR [ebp+0xf],0x0
6401a2dc:	jne    0x6401a2ec
6401a2de:	mov    ecx,edx
6401a2e0:	mov    ebx,0x80000000
6401a2e5:	shr    ebx,cl
6401a2e7:	mov    ecx,DWORD PTR [ebp+0x8]
6401a2ea:	or     DWORD PTR [ecx],ebx
6401a2ec:	mov    ebx,0x80000000
6401a2f1:	mov    ecx,edx
6401a2f3:	shr    ebx,cl
6401a2f5:	lea    eax,[eax+edi*4+0x44]
6401a2f9:	or     DWORD PTR [eax],ebx
6401a2fb:	jmp    0x6401a326
6401a2fd:	cmp    BYTE PTR [ebp+0xf],0x0
6401a301:	jne    0x6401a313
6401a303:	lea    ecx,[edx-0x20]
6401a306:	mov    ebx,0x80000000
6401a30b:	shr    ebx,cl
6401a30d:	mov    ecx,DWORD PTR [ebp+0x8]
6401a310:	or     DWORD PTR [ecx+0x4],ebx
6401a313:	lea    ecx,[edx-0x20]
6401a316:	mov    edx,0x80000000
6401a31b:	shr    edx,cl
6401a31d:	lea    eax,[eax+edi*4+0xc4]
6401a324:	or     DWORD PTR [eax],edx
6401a326:	mov    eax,DWORD PTR [ebp-0x4]
6401a329:	mov    DWORD PTR [esi],eax
6401a32b:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401a32f:	mov    eax,DWORD PTR [ebp-0x10]
6401a332:	dec    DWORD PTR [eax]
6401a334:	jne    0x6401a42d
6401a33a:	mov    eax,ds:0x6402ebc8
6401a33f:	test   eax,eax
6401a341:	je     0x6401a41f
6401a347:	mov    ecx,DWORD PTR ds:0x640324d8
6401a34d:	mov    esi,DWORD PTR ds:0x64025180
6401a353:	push   0x4000
6401a358:	shl    ecx,0xf
6401a35b:	add    ecx,DWORD PTR [eax+0xc]
6401a35e:	mov    ebx,0x8000
6401a363:	push   ebx
6401a364:	push   ecx
6401a365:	call   esi
6401a367:	mov    ecx,DWORD PTR ds:0x640324d8
6401a36d:	mov    eax,ds:0x6402ebc8
6401a372:	mov    edx,0x80000000
6401a377:	shr    edx,cl
6401a379:	or     DWORD PTR [eax+0x8],edx
6401a37c:	mov    eax,ds:0x6402ebc8
6401a381:	mov    eax,DWORD PTR [eax+0x10]
6401a384:	mov    ecx,DWORD PTR ds:0x640324d8
6401a38a:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401a392:	mov    eax,ds:0x6402ebc8
6401a397:	mov    eax,DWORD PTR [eax+0x10]
6401a39a:	dec    BYTE PTR [eax+0x43]
6401a39d:	mov    eax,ds:0x6402ebc8
6401a3a2:	mov    ecx,DWORD PTR [eax+0x10]
6401a3a5:	cmp    BYTE PTR [ecx+0x43],0x0
6401a3a9:	jne    0x6401a3b4
6401a3ab:	and    DWORD PTR [eax+0x4],0xfffffffe
6401a3af:	mov    eax,ds:0x6402ebc8
6401a3b4:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401a3b8:	jne    0x6401a41f
6401a3ba:	push   ebx
6401a3bb:	push   0x0
6401a3bd:	push   DWORD PTR [eax+0xc]
6401a3c0:	call   esi
6401a3c2:	mov    eax,ds:0x6402ebc8
6401a3c7:	push   DWORD PTR [eax+0x10]
6401a3ca:	push   0x0
6401a3cc:	push   DWORD PTR ds:0x6402ea6c
6401a3d2:	call   DWORD PTR ds:0x64025104
6401a3d8:	mov    ecx,DWORD PTR ds:0x640324c4
6401a3de:	mov    eax,ds:0x6402ebc8
6401a3e3:	imul   ecx,ecx,0x14
6401a3e6:	mov    edx,DWORD PTR ds:0x640324c8
6401a3ec:	sub    ecx,eax
6401a3ee:	lea    ecx,[ecx+edx*1-0x14]
6401a3f2:	push   ecx
6401a3f3:	lea    ecx,[eax+0x14]
6401a3f6:	push   ecx
6401a3f7:	push   eax
6401a3f8:	call   0x64013b00
6401a3fd:	mov    eax,DWORD PTR [ebp+0x8]
6401a400:	add    esp,0xc
6401a403:	dec    DWORD PTR ds:0x640324c4
6401a409:	cmp    eax,DWORD PTR ds:0x6402ebc8
6401a40f:	jbe    0x6401a415
6401a411:	sub    DWORD PTR [ebp+0x8],0x14
6401a415:	mov    eax,ds:0x640324c8
6401a41a:	mov    ds:0x640324d0,eax
6401a41f:	mov    eax,DWORD PTR [ebp+0x8]
6401a422:	mov    ds:0x6402ebc8,eax
6401a427:	mov    DWORD PTR ds:0x640324d8,edi
6401a42d:	pop    ebx
6401a42e:	pop    edi
6401a42f:	pop    esi
6401a430:	leave  
6401a431:	ret    
6401a432:	mov    eax,ds:0x640324d4
6401a437:	push   esi
6401a438:	mov    esi,DWORD PTR ds:0x640324c4
6401a43e:	push   edi
6401a43f:	xor    edi,edi
6401a441:	cmp    esi,eax
6401a443:	jne    0x6401a479
6401a445:	add    eax,0x10
6401a448:	imul   eax,eax,0x14
6401a44b:	push   eax
6401a44c:	push   DWORD PTR ds:0x640324c8
6401a452:	push   edi
6401a453:	push   DWORD PTR ds:0x6402ea6c
6401a459:	call   DWORD PTR ds:0x64025108
6401a45f:	cmp    eax,edi
6401a461:	jne    0x6401a467
6401a463:	xor    eax,eax
6401a465:	jmp    0x6401a4df
6401a467:	add    DWORD PTR ds:0x640324d4,0x10
6401a46e:	mov    esi,DWORD PTR ds:0x640324c4
6401a474:	mov    ds:0x640324c8,eax
6401a479:	imul   esi,esi,0x14
6401a47c:	add    esi,DWORD PTR ds:0x640324c8
6401a482:	push   0x41c4
6401a487:	push   0x8
6401a489:	push   DWORD PTR ds:0x6402ea6c
6401a48f:	call   DWORD PTR ds:0x64025100
6401a495:	cmp    eax,edi
6401a497:	mov    DWORD PTR [esi+0x10],eax
6401a49a:	je     0x6401a463
6401a49c:	push   0x4
6401a49e:	push   0x2000
6401a4a3:	push   0x100000
6401a4a8:	push   edi
6401a4a9:	call   DWORD PTR ds:0x640250c8
6401a4af:	cmp    eax,edi
6401a4b1:	mov    DWORD PTR [esi+0xc],eax
6401a4b4:	jne    0x6401a4c8
6401a4b6:	push   DWORD PTR [esi+0x10]
6401a4b9:	push   edi
6401a4ba:	push   DWORD PTR ds:0x6402ea6c
6401a4c0:	call   DWORD PTR ds:0x64025104
6401a4c6:	jmp    0x6401a463
6401a4c8:	or     DWORD PTR [esi+0x8],0xffffffff
6401a4cc:	mov    DWORD PTR [esi],edi
6401a4ce:	mov    DWORD PTR [esi+0x4],edi
6401a4d1:	inc    DWORD PTR ds:0x640324c4
6401a4d7:	mov    eax,DWORD PTR [esi+0x10]
6401a4da:	or     DWORD PTR [eax],0xffffffff
6401a4dd:	mov    eax,esi
6401a4df:	pop    edi
6401a4e0:	pop    esi
6401a4e1:	ret    
6401a4e2:	push   ebp
6401a4e3:	mov    ebp,esp
6401a4e5:	push   ecx
6401a4e6:	push   ecx
6401a4e7:	mov    ecx,DWORD PTR [ebp+0x8]
6401a4ea:	mov    eax,DWORD PTR [ecx+0x8]
6401a4ed:	push   ebx
6401a4ee:	push   esi
6401a4ef:	mov    esi,DWORD PTR [ecx+0x10]
6401a4f2:	push   edi
6401a4f3:	xor    ebx,ebx
6401a4f5:	jmp    0x6401a4fa
6401a4f7:	add    eax,eax
6401a4f9:	inc    ebx
6401a4fa:	test   eax,eax
6401a4fc:	jge    0x6401a4f7
6401a4fe:	mov    eax,ebx
6401a500:	imul   eax,eax,0x204
6401a506:	lea    eax,[eax+esi*1+0x144]
6401a50d:	push   0x3f
6401a50f:	mov    DWORD PTR [ebp-0x8],eax
6401a512:	pop    edx
6401a513:	mov    DWORD PTR [eax+0x8],eax
6401a516:	mov    DWORD PTR [eax+0x4],eax
6401a519:	add    eax,0x8
6401a51c:	dec    edx
6401a51d:	jne    0x6401a513
6401a51f:	push   0x4
6401a521:	mov    edi,ebx
6401a523:	push   0x1000
6401a528:	shl    edi,0xf
6401a52b:	add    edi,DWORD PTR [ecx+0xc]
6401a52e:	push   0x8000
6401a533:	push   edi
6401a534:	call   DWORD PTR ds:0x640250c8
6401a53a:	test   eax,eax
6401a53c:	jne    0x6401a546
6401a53e:	or     eax,0xffffffff
6401a541:	jmp    0x6401a5e3
6401a546:	lea    edx,[edi+0x7000]
6401a54c:	cmp    edi,edx
6401a54e:	mov    DWORD PTR [ebp-0x4],edx
6401a551:	ja     0x6401a596
6401a553:	mov    ecx,edx
6401a555:	sub    ecx,edi
6401a557:	shr    ecx,0xc
6401a55a:	lea    eax,[edi+0x10]
6401a55d:	inc    ecx
6401a55e:	or     DWORD PTR [eax-0x8],0xffffffff
6401a562:	or     DWORD PTR [eax+0xfec],0xffffffff
6401a569:	lea    edx,[eax+0xffc]
6401a56f:	mov    DWORD PTR [eax],edx
6401a571:	lea    edx,[eax-0x1004]
6401a577:	mov    DWORD PTR [eax-0x4],0xff0
6401a57e:	mov    DWORD PTR [eax+0x4],edx
6401a581:	mov    DWORD PTR [eax+0xfe8],0xff0
6401a58b:	add    eax,0x1000
6401a590:	dec    ecx
6401a591:	jne    0x6401a55e
6401a593:	mov    edx,DWORD PTR [ebp-0x4]
6401a596:	mov    eax,DWORD PTR [ebp-0x8]
6401a599:	add    eax,0x1f8
6401a59e:	lea    ecx,[edi+0xc]
6401a5a1:	mov    DWORD PTR [eax+0x4],ecx
6401a5a4:	mov    DWORD PTR [ecx+0x8],eax
6401a5a7:	lea    ecx,[edx+0xc]
6401a5aa:	mov    DWORD PTR [eax+0x8],ecx
6401a5ad:	mov    DWORD PTR [ecx+0x4],eax
6401a5b0:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401a5b5:	xor    edi,edi
6401a5b7:	inc    edi
6401a5b8:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401a5bf:	mov    al,BYTE PTR [esi+0x43]
6401a5c2:	mov    cl,al
6401a5c4:	inc    cl
6401a5c6:	test   al,al
6401a5c8:	mov    eax,DWORD PTR [ebp+0x8]
6401a5cb:	mov    BYTE PTR [esi+0x43],cl
6401a5ce:	jne    0x6401a5d3
6401a5d0:	or     DWORD PTR [eax+0x4],edi
6401a5d3:	mov    edx,0x80000000
6401a5d8:	mov    ecx,ebx
6401a5da:	shr    edx,cl
6401a5dc:	not    edx
6401a5de:	and    DWORD PTR [eax+0x8],edx
6401a5e1:	mov    eax,ebx
6401a5e3:	pop    edi
6401a5e4:	pop    esi
6401a5e5:	pop    ebx
6401a5e6:	leave  
6401a5e7:	ret    
6401a5e8:	push   ebp
6401a5e9:	mov    ebp,esp
6401a5eb:	sub    esp,0xc
6401a5ee:	mov    ecx,DWORD PTR [ebp+0x8]
6401a5f1:	mov    eax,DWORD PTR [ecx+0x10]
6401a5f4:	push   ebx
6401a5f5:	push   esi
6401a5f6:	mov    esi,DWORD PTR [ebp+0x10]
6401a5f9:	push   edi
6401a5fa:	mov    edi,DWORD PTR [ebp+0xc]
6401a5fd:	mov    edx,edi
6401a5ff:	sub    edx,DWORD PTR [ecx+0xc]
6401a602:	add    esi,0x17
6401a605:	shr    edx,0xf
6401a608:	mov    ecx,edx
6401a60a:	imul   ecx,ecx,0x204
6401a610:	lea    ecx,[ecx+eax*1+0x144]
6401a617:	mov    DWORD PTR [ebp-0xc],ecx
6401a61a:	mov    ecx,DWORD PTR [edi-0x4]
6401a61d:	and    esi,0xfffffff0
6401a620:	dec    ecx
6401a621:	cmp    esi,ecx
6401a623:	lea    edi,[ecx+edi*1-0x4]
6401a627:	mov    ebx,DWORD PTR [edi]
6401a629:	mov    DWORD PTR [ebp+0x10],ecx
6401a62c:	mov    DWORD PTR [ebp-0x4],ebx
6401a62f:	jle    0x6401a78a
6401a635:	test   bl,0x1
6401a638:	jne    0x6401a783
6401a63e:	add    ebx,ecx
6401a640:	cmp    esi,ebx
6401a642:	jg     0x6401a783
6401a648:	mov    ecx,DWORD PTR [ebp-0x4]
6401a64b:	sar    ecx,0x4
6401a64e:	dec    ecx
6401a64f:	cmp    ecx,0x3f
6401a652:	mov    DWORD PTR [ebp-0x8],ecx
6401a655:	jbe    0x6401a65d
6401a657:	push   0x3f
6401a659:	pop    ecx
6401a65a:	mov    DWORD PTR [ebp-0x8],ecx
6401a65d:	mov    ebx,DWORD PTR [edi+0x4]
6401a660:	cmp    ebx,DWORD PTR [edi+0x8]
6401a663:	jne    0x6401a6a8
6401a665:	cmp    ecx,0x20
6401a668:	mov    ebx,0x80000000
6401a66d:	jae    0x6401a689
6401a66f:	shr    ebx,cl
6401a671:	mov    ecx,DWORD PTR [ebp-0x8]
6401a674:	lea    ecx,[ecx+eax*1+0x4]
6401a678:	not    ebx
6401a67a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401a67e:	dec    BYTE PTR [ecx]
6401a680:	jne    0x6401a6a8
6401a682:	mov    ecx,DWORD PTR [ebp+0x8]
6401a685:	and    DWORD PTR [ecx],ebx
6401a687:	jmp    0x6401a6a8
6401a689:	add    ecx,0xffffffe0
6401a68c:	shr    ebx,cl
6401a68e:	mov    ecx,DWORD PTR [ebp-0x8]
6401a691:	lea    ecx,[ecx+eax*1+0x4]
6401a695:	not    ebx
6401a697:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401a69e:	dec    BYTE PTR [ecx]
6401a6a0:	jne    0x6401a6a8
6401a6a2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a6a5:	and    DWORD PTR [ecx+0x4],ebx
6401a6a8:	mov    ecx,DWORD PTR [edi+0x8]
6401a6ab:	mov    ebx,DWORD PTR [edi+0x4]
6401a6ae:	mov    DWORD PTR [ecx+0x4],ebx
6401a6b1:	mov    ecx,DWORD PTR [edi+0x4]
6401a6b4:	mov    edi,DWORD PTR [edi+0x8]
6401a6b7:	mov    DWORD PTR [ecx+0x8],edi
6401a6ba:	mov    ecx,DWORD PTR [ebp+0x10]
6401a6bd:	sub    ecx,esi
6401a6bf:	add    DWORD PTR [ebp-0x4],ecx
6401a6c2:	cmp    DWORD PTR [ebp-0x4],0x0
6401a6c6:	jle    0x6401a771
6401a6cc:	mov    edi,DWORD PTR [ebp-0x4]
6401a6cf:	mov    ecx,DWORD PTR [ebp+0xc]
6401a6d2:	sar    edi,0x4
6401a6d5:	dec    edi
6401a6d6:	cmp    edi,0x3f
6401a6d9:	lea    ecx,[ecx+esi*1-0x4]
6401a6dd:	jbe    0x6401a6e2
6401a6df:	push   0x3f
6401a6e1:	pop    edi
6401a6e2:	mov    ebx,DWORD PTR [ebp-0xc]
6401a6e5:	lea    ebx,[ebx+edi*8]
6401a6e8:	mov    DWORD PTR [ebp+0x10],ebx
6401a6eb:	mov    ebx,DWORD PTR [ebx+0x4]
6401a6ee:	mov    DWORD PTR [ecx+0x4],ebx
6401a6f1:	mov    ebx,DWORD PTR [ebp+0x10]
6401a6f4:	mov    DWORD PTR [ecx+0x8],ebx
6401a6f7:	mov    DWORD PTR [ebx+0x4],ecx
6401a6fa:	mov    ebx,DWORD PTR [ecx+0x4]
6401a6fd:	mov    DWORD PTR [ebx+0x8],ecx
6401a700:	mov    ebx,DWORD PTR [ecx+0x4]
6401a703:	cmp    ebx,DWORD PTR [ecx+0x8]
6401a706:	jne    0x6401a75f
6401a708:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401a70c:	mov    BYTE PTR [ebp+0x13],cl
6401a70f:	inc    cl
6401a711:	cmp    edi,0x20
6401a714:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401a718:	jae    0x6401a736
6401a71a:	cmp    BYTE PTR [ebp+0x13],0x0
6401a71e:	jne    0x6401a72e
6401a720:	mov    ecx,edi
6401a722:	mov    ebx,0x80000000
6401a727:	shr    ebx,cl
6401a729:	mov    ecx,DWORD PTR [ebp+0x8]
6401a72c:	or     DWORD PTR [ecx],ebx
6401a72e:	lea    eax,[eax+edx*4+0x44]
6401a732:	mov    ecx,edi
6401a734:	jmp    0x6401a756
6401a736:	cmp    BYTE PTR [ebp+0x13],0x0
6401a73a:	jne    0x6401a74c
6401a73c:	lea    ecx,[edi-0x20]
6401a73f:	mov    ebx,0x80000000
6401a744:	shr    ebx,cl
6401a746:	mov    ecx,DWORD PTR [ebp+0x8]
6401a749:	or     DWORD PTR [ecx+0x4],ebx
6401a74c:	lea    eax,[eax+edx*4+0xc4]
6401a753:	lea    ecx,[edi-0x20]
6401a756:	mov    edx,0x80000000
6401a75b:	shr    edx,cl
6401a75d:	or     DWORD PTR [eax],edx
6401a75f:	mov    edx,DWORD PTR [ebp+0xc]
6401a762:	mov    ecx,DWORD PTR [ebp-0x4]
6401a765:	lea    eax,[edx+esi*1-0x4]
6401a769:	mov    DWORD PTR [eax],ecx
6401a76b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401a76f:	jmp    0x6401a774
6401a771:	mov    edx,DWORD PTR [ebp+0xc]
6401a774:	lea    eax,[esi+0x1]
6401a777:	mov    DWORD PTR [edx-0x4],eax
6401a77a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401a77e:	jmp    0x6401a8bf
6401a783:	xor    eax,eax
6401a785:	jmp    0x6401a8c2
6401a78a:	jge    0x6401a8bf
6401a790:	mov    ebx,DWORD PTR [ebp+0xc]
6401a793:	sub    DWORD PTR [ebp+0x10],esi
6401a796:	lea    ecx,[esi+0x1]
6401a799:	mov    DWORD PTR [ebx-0x4],ecx
6401a79c:	lea    ebx,[ebx+esi*1-0x4]
6401a7a0:	mov    esi,DWORD PTR [ebp+0x10]
6401a7a3:	sar    esi,0x4
6401a7a6:	dec    esi
6401a7a7:	cmp    esi,0x3f
6401a7aa:	mov    DWORD PTR [ebp+0xc],ebx
6401a7ad:	mov    DWORD PTR [ebx-0x4],ecx
6401a7b0:	jbe    0x6401a7b5
6401a7b2:	push   0x3f
6401a7b4:	pop    esi
6401a7b5:	test   BYTE PTR [ebp-0x4],0x1
6401a7b9:	jne    0x6401a83f
6401a7bf:	mov    esi,DWORD PTR [ebp-0x4]
6401a7c2:	sar    esi,0x4
6401a7c5:	dec    esi
6401a7c6:	cmp    esi,0x3f
6401a7c9:	jbe    0x6401a7ce
6401a7cb:	push   0x3f
6401a7cd:	pop    esi
6401a7ce:	mov    ecx,DWORD PTR [edi+0x4]
6401a7d1:	cmp    ecx,DWORD PTR [edi+0x8]
6401a7d4:	jne    0x6401a818
6401a7d6:	cmp    esi,0x20
6401a7d9:	mov    ebx,0x80000000
6401a7de:	jae    0x6401a7f9
6401a7e0:	mov    ecx,esi
6401a7e2:	shr    ebx,cl
6401a7e4:	lea    esi,[esi+eax*1+0x4]
6401a7e8:	not    ebx
6401a7ea:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401a7ee:	dec    BYTE PTR [esi]
6401a7f0:	jne    0x6401a815
6401a7f2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a7f5:	and    DWORD PTR [ecx],ebx
6401a7f7:	jmp    0x6401a815
6401a7f9:	lea    ecx,[esi-0x20]
6401a7fc:	shr    ebx,cl
6401a7fe:	lea    ecx,[esi+eax*1+0x4]
6401a802:	not    ebx
6401a804:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401a80b:	dec    BYTE PTR [ecx]
6401a80d:	jne    0x6401a815
6401a80f:	mov    ecx,DWORD PTR [ebp+0x8]
6401a812:	and    DWORD PTR [ecx+0x4],ebx
6401a815:	mov    ebx,DWORD PTR [ebp+0xc]
6401a818:	mov    ecx,DWORD PTR [edi+0x8]
6401a81b:	mov    esi,DWORD PTR [edi+0x4]
6401a81e:	mov    DWORD PTR [ecx+0x4],esi
6401a821:	mov    esi,DWORD PTR [edi+0x8]
6401a824:	mov    ecx,DWORD PTR [edi+0x4]
6401a827:	mov    DWORD PTR [ecx+0x8],esi
6401a82a:	mov    esi,DWORD PTR [ebp+0x10]
6401a82d:	add    esi,DWORD PTR [ebp-0x4]
6401a830:	mov    DWORD PTR [ebp+0x10],esi
6401a833:	sar    esi,0x4
6401a836:	dec    esi
6401a837:	cmp    esi,0x3f
6401a83a:	jbe    0x6401a83f
6401a83c:	push   0x3f
6401a83e:	pop    esi
6401a83f:	mov    ecx,DWORD PTR [ebp-0xc]
6401a842:	lea    ecx,[ecx+esi*8]
6401a845:	mov    edi,DWORD PTR [ecx+0x4]
6401a848:	mov    DWORD PTR [ebx+0x8],ecx
6401a84b:	mov    DWORD PTR [ebx+0x4],edi
6401a84e:	mov    DWORD PTR [ecx+0x4],ebx
6401a851:	mov    ecx,DWORD PTR [ebx+0x4]
6401a854:	mov    DWORD PTR [ecx+0x8],ebx
6401a857:	mov    ecx,DWORD PTR [ebx+0x4]
6401a85a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401a85d:	jne    0x6401a8b6
6401a85f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401a863:	mov    BYTE PTR [ebp+0xf],cl
6401a866:	inc    cl
6401a868:	cmp    esi,0x20
6401a86b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401a86f:	jae    0x6401a88d
6401a871:	cmp    BYTE PTR [ebp+0xf],0x0
6401a875:	jne    0x6401a885
6401a877:	mov    ecx,esi
6401a879:	mov    edi,0x80000000
6401a87e:	shr    edi,cl
6401a880:	mov    ecx,DWORD PTR [ebp+0x8]
6401a883:	or     DWORD PTR [ecx],edi
6401a885:	lea    eax,[eax+edx*4+0x44]
6401a889:	mov    ecx,esi
6401a88b:	jmp    0x6401a8ad
6401a88d:	cmp    BYTE PTR [ebp+0xf],0x0
6401a891:	jne    0x6401a8a3
6401a893:	lea    ecx,[esi-0x20]
6401a896:	mov    edi,0x80000000
6401a89b:	shr    edi,cl
6401a89d:	mov    ecx,DWORD PTR [ebp+0x8]
6401a8a0:	or     DWORD PTR [ecx+0x4],edi
6401a8a3:	lea    eax,[eax+edx*4+0xc4]
6401a8aa:	lea    ecx,[esi-0x20]
6401a8ad:	mov    edx,0x80000000
6401a8b2:	shr    edx,cl
6401a8b4:	or     DWORD PTR [eax],edx
6401a8b6:	mov    eax,DWORD PTR [ebp+0x10]
6401a8b9:	mov    DWORD PTR [ebx],eax
6401a8bb:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401a8bf:	xor    eax,eax
6401a8c1:	inc    eax
6401a8c2:	pop    edi
6401a8c3:	pop    esi
6401a8c4:	pop    ebx
6401a8c5:	leave  
6401a8c6:	ret    
6401a8c7:	push   ebp
6401a8c8:	mov    ebp,esp
6401a8ca:	sub    esp,0x14
6401a8cd:	mov    eax,ds:0x640324c4
6401a8d2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a8d5:	imul   eax,eax,0x14
6401a8d8:	add    eax,DWORD PTR ds:0x640324c8
6401a8de:	add    ecx,0x17
6401a8e1:	and    ecx,0xfffffff0
6401a8e4:	mov    DWORD PTR [ebp-0x10],ecx
6401a8e7:	sar    ecx,0x4
6401a8ea:	push   ebx
6401a8eb:	dec    ecx
6401a8ec:	cmp    ecx,0x20
6401a8ef:	push   esi
6401a8f0:	push   edi
6401a8f1:	jge    0x6401a8fe
6401a8f3:	or     esi,0xffffffff
6401a8f6:	shr    esi,cl
6401a8f8:	or     DWORD PTR [ebp-0x8],0xffffffff
6401a8fc:	jmp    0x6401a90b
6401a8fe:	add    ecx,0xffffffe0
6401a901:	or     edx,0xffffffff
6401a904:	xor    esi,esi
6401a906:	shr    edx,cl
6401a908:	mov    DWORD PTR [ebp-0x8],edx
6401a90b:	mov    ecx,DWORD PTR ds:0x640324d0
6401a911:	mov    ebx,ecx
6401a913:	jmp    0x6401a926
6401a915:	mov    edx,DWORD PTR [ebx+0x4]
6401a918:	mov    edi,DWORD PTR [ebx]
6401a91a:	and    edx,DWORD PTR [ebp-0x8]
6401a91d:	and    edi,esi
6401a91f:	or     edx,edi
6401a921:	jne    0x6401a92d
6401a923:	add    ebx,0x14
6401a926:	cmp    ebx,eax
6401a928:	mov    DWORD PTR [ebp+0x8],ebx
6401a92b:	jb     0x6401a915
6401a92d:	cmp    ebx,eax
6401a92f:	jne    0x6401a9b0
6401a931:	mov    ebx,DWORD PTR ds:0x640324c8
6401a937:	jmp    0x6401a94a
6401a939:	mov    edx,DWORD PTR [ebx+0x4]
6401a93c:	mov    edi,DWORD PTR [ebx]
6401a93e:	and    edx,DWORD PTR [ebp-0x8]
6401a941:	and    edi,esi
6401a943:	or     edx,edi
6401a945:	jne    0x6401a951
6401a947:	add    ebx,0x14
6401a94a:	cmp    ebx,ecx
6401a94c:	mov    DWORD PTR [ebp+0x8],ebx
6401a94f:	jb     0x6401a939
6401a951:	cmp    ebx,ecx
6401a953:	jne    0x6401a9b0
6401a955:	jmp    0x6401a963
6401a957:	cmp    DWORD PTR [ebx+0x8],0x0
6401a95b:	jne    0x6401a967
6401a95d:	add    ebx,0x14
6401a960:	mov    DWORD PTR [ebp+0x8],ebx
6401a963:	cmp    ebx,eax
6401a965:	jb     0x6401a957
6401a967:	cmp    ebx,eax
6401a969:	jne    0x6401a99c
6401a96b:	mov    ebx,DWORD PTR ds:0x640324c8
6401a971:	jmp    0x6401a97c
6401a973:	cmp    DWORD PTR [ebx+0x8],0x0
6401a977:	jne    0x6401a983
6401a979:	add    ebx,0x14
6401a97c:	cmp    ebx,ecx
6401a97e:	mov    DWORD PTR [ebp+0x8],ebx
6401a981:	jb     0x6401a973
6401a983:	cmp    ebx,ecx
6401a985:	jne    0x6401a99c
6401a987:	call   0x6401a432
6401a98c:	mov    ebx,eax
6401a98e:	test   ebx,ebx
6401a990:	mov    DWORD PTR [ebp+0x8],ebx
6401a993:	jne    0x6401a99c
6401a995:	xor    eax,eax
6401a997:	jmp    0x6401aba5
6401a99c:	push   ebx
6401a99d:	call   0x6401a4e2
6401a9a2:	pop    ecx
6401a9a3:	mov    ecx,DWORD PTR [ebx+0x10]
6401a9a6:	mov    DWORD PTR [ecx],eax
6401a9a8:	mov    eax,DWORD PTR [ebx+0x10]
6401a9ab:	cmp    DWORD PTR [eax],0xffffffff
6401a9ae:	je     0x6401a995
6401a9b0:	mov    DWORD PTR ds:0x640324d0,ebx
6401a9b6:	mov    eax,DWORD PTR [ebx+0x10]
6401a9b9:	mov    edx,DWORD PTR [eax]
6401a9bb:	cmp    edx,0xffffffff
6401a9be:	mov    DWORD PTR [ebp-0x4],edx
6401a9c1:	je     0x6401a9d7
6401a9c3:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401a9ca:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401a9ce:	and    ecx,DWORD PTR [ebp-0x8]
6401a9d1:	and    edi,esi
6401a9d3:	or     ecx,edi
6401a9d5:	jne    0x6401aa00
6401a9d7:	and    DWORD PTR [ebp-0x4],0x0
6401a9db:	mov    edx,DWORD PTR [eax+0xc4]
6401a9e1:	lea    ecx,[eax+0x44]
6401a9e4:	mov    edi,DWORD PTR [ecx]
6401a9e6:	and    edx,DWORD PTR [ebp-0x8]
6401a9e9:	and    edi,esi
6401a9eb:	or     edx,edi
6401a9ed:	jne    0x6401a9fd
6401a9ef:	inc    DWORD PTR [ebp-0x4]
6401a9f2:	mov    edx,DWORD PTR [ecx+0x84]
6401a9f8:	add    ecx,0x4
6401a9fb:	jmp    0x6401a9e4
6401a9fd:	mov    edx,DWORD PTR [ebp-0x4]
6401aa00:	mov    ecx,edx
6401aa02:	imul   ecx,ecx,0x204
6401aa08:	lea    ecx,[ecx+eax*1+0x144]
6401aa0f:	mov    DWORD PTR [ebp-0xc],ecx
6401aa12:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401aa16:	xor    edi,edi
6401aa18:	and    ecx,esi
6401aa1a:	jne    0x6401aa2e
6401aa1c:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401aa23:	and    ecx,DWORD PTR [ebp-0x8]
6401aa26:	push   0x20
6401aa28:	pop    edi
6401aa29:	jmp    0x6401aa2e
6401aa2b:	add    ecx,ecx
6401aa2d:	inc    edi
6401aa2e:	test   ecx,ecx
6401aa30:	jge    0x6401aa2b
6401aa32:	mov    ecx,DWORD PTR [ebp-0xc]
6401aa35:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401aa39:	mov    ecx,DWORD PTR [edx]
6401aa3b:	sub    ecx,DWORD PTR [ebp-0x10]
6401aa3e:	mov    esi,ecx
6401aa40:	sar    esi,0x4
6401aa43:	dec    esi
6401aa44:	cmp    esi,0x3f
6401aa47:	mov    DWORD PTR [ebp-0x8],ecx
6401aa4a:	jle    0x6401aa4f
6401aa4c:	push   0x3f
6401aa4e:	pop    esi
6401aa4f:	cmp    esi,edi
6401aa51:	je     0x6401ab58
6401aa57:	mov    ecx,DWORD PTR [edx+0x4]
6401aa5a:	cmp    ecx,DWORD PTR [edx+0x8]
6401aa5d:	jne    0x6401aabb
6401aa5f:	cmp    edi,0x20
6401aa62:	mov    ebx,0x80000000
6401aa67:	jge    0x6401aa8f
6401aa69:	mov    ecx,edi
6401aa6b:	shr    ebx,cl
6401aa6d:	mov    ecx,DWORD PTR [ebp-0x4]
6401aa70:	lea    edi,[eax+edi*1+0x4]
6401aa74:	not    ebx
6401aa76:	mov    DWORD PTR [ebp-0x14],ebx
6401aa79:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401aa7d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401aa81:	dec    BYTE PTR [edi]
6401aa83:	jne    0x6401aab8
6401aa85:	mov    ecx,DWORD PTR [ebp-0x14]
6401aa88:	mov    ebx,DWORD PTR [ebp+0x8]
6401aa8b:	and    DWORD PTR [ebx],ecx
6401aa8d:	jmp    0x6401aabb
6401aa8f:	lea    ecx,[edi-0x20]
6401aa92:	shr    ebx,cl
6401aa94:	mov    ecx,DWORD PTR [ebp-0x4]
6401aa97:	lea    ecx,[eax+ecx*4+0xc4]
6401aa9e:	lea    edi,[eax+edi*1+0x4]
6401aaa2:	not    ebx
6401aaa4:	and    DWORD PTR [ecx],ebx
6401aaa6:	dec    BYTE PTR [edi]
6401aaa8:	mov    DWORD PTR [ebp-0x14],ebx
6401aaab:	jne    0x6401aab8
6401aaad:	mov    ebx,DWORD PTR [ebp+0x8]
6401aab0:	mov    ecx,DWORD PTR [ebp-0x14]
6401aab3:	and    DWORD PTR [ebx+0x4],ecx
6401aab6:	jmp    0x6401aabb
6401aab8:	mov    ebx,DWORD PTR [ebp+0x8]
6401aabb:	cmp    DWORD PTR [ebp-0x8],0x0
6401aabf:	mov    ecx,DWORD PTR [edx+0x8]
6401aac2:	mov    edi,DWORD PTR [edx+0x4]
6401aac5:	mov    DWORD PTR [ecx+0x4],edi
6401aac8:	mov    ecx,DWORD PTR [edx+0x4]
6401aacb:	mov    edi,DWORD PTR [edx+0x8]
6401aace:	mov    DWORD PTR [ecx+0x8],edi
6401aad1:	je     0x6401ab64
6401aad7:	mov    ecx,DWORD PTR [ebp-0xc]
6401aada:	lea    ecx,[ecx+esi*8]
6401aadd:	mov    edi,DWORD PTR [ecx+0x4]
6401aae0:	mov    DWORD PTR [edx+0x8],ecx
6401aae3:	mov    DWORD PTR [edx+0x4],edi
6401aae6:	mov    DWORD PTR [ecx+0x4],edx
6401aae9:	mov    ecx,DWORD PTR [edx+0x4]
6401aaec:	mov    DWORD PTR [ecx+0x8],edx
6401aaef:	mov    ecx,DWORD PTR [edx+0x4]
6401aaf2:	cmp    ecx,DWORD PTR [edx+0x8]
6401aaf5:	jne    0x6401ab55
6401aaf7:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401aafb:	mov    BYTE PTR [ebp+0xb],cl
6401aafe:	inc    cl
6401ab00:	cmp    esi,0x20
6401ab03:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401ab07:	jge    0x6401ab2c
6401ab09:	cmp    BYTE PTR [ebp+0xb],0x0
6401ab0d:	jne    0x6401ab1a
6401ab0f:	mov    edi,0x80000000
6401ab14:	mov    ecx,esi
6401ab16:	shr    edi,cl
6401ab18:	or     DWORD PTR [ebx],edi
6401ab1a:	mov    ecx,esi
6401ab1c:	mov    edi,0x80000000
6401ab21:	shr    edi,cl
6401ab23:	mov    ecx,DWORD PTR [ebp-0x4]
6401ab26:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401ab2a:	jmp    0x6401ab55
6401ab2c:	cmp    BYTE PTR [ebp+0xb],0x0
6401ab30:	jne    0x6401ab3f
6401ab32:	lea    ecx,[esi-0x20]
6401ab35:	mov    edi,0x80000000
6401ab3a:	shr    edi,cl
6401ab3c:	or     DWORD PTR [ebx+0x4],edi
6401ab3f:	mov    ecx,DWORD PTR [ebp-0x4]
6401ab42:	lea    edi,[eax+ecx*4+0xc4]
6401ab49:	lea    ecx,[esi-0x20]
6401ab4c:	mov    esi,0x80000000
6401ab51:	shr    esi,cl
6401ab53:	or     DWORD PTR [edi],esi
6401ab55:	mov    ecx,DWORD PTR [ebp-0x8]
6401ab58:	test   ecx,ecx
6401ab5a:	je     0x6401ab67
6401ab5c:	mov    DWORD PTR [edx],ecx
6401ab5e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401ab62:	jmp    0x6401ab67
6401ab64:	mov    ecx,DWORD PTR [ebp-0x8]
6401ab67:	mov    esi,DWORD PTR [ebp-0x10]
6401ab6a:	add    edx,ecx
6401ab6c:	lea    ecx,[esi+0x1]
6401ab6f:	mov    DWORD PTR [edx],ecx
6401ab71:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401ab75:	mov    esi,DWORD PTR [ebp-0xc]
6401ab78:	mov    ecx,DWORD PTR [esi]
6401ab7a:	test   ecx,ecx
6401ab7c:	lea    edi,[ecx+0x1]
6401ab7f:	mov    DWORD PTR [esi],edi
6401ab81:	jne    0x6401ab9d
6401ab83:	cmp    ebx,DWORD PTR ds:0x6402ebc8
6401ab89:	jne    0x6401ab9d
6401ab8b:	mov    ecx,DWORD PTR [ebp-0x4]
6401ab8e:	cmp    ecx,DWORD PTR ds:0x640324d8
6401ab94:	jne    0x6401ab9d
6401ab96:	and    DWORD PTR ds:0x6402ebc8,0x0
6401ab9d:	mov    ecx,DWORD PTR [ebp-0x4]
6401aba0:	mov    DWORD PTR [eax],ecx
6401aba2:	lea    eax,[edx+0x4]
6401aba5:	pop    edi
6401aba6:	pop    esi
6401aba7:	pop    ebx
6401aba8:	leave  
6401aba9:	ret    
6401abaa:	push   ecx
6401abab:	push   ebx
6401abac:	mov    ebx,DWORD PTR [esp+0xc]
6401abb0:	push   esi
6401abb1:	push   edi
6401abb2:	xor    esi,esi
6401abb4:	xor    edi,edi
6401abb6:	cmp    ebx,DWORD PTR [edi*8+0x6402da80]
6401abbd:	je     0x6401abc5
6401abbf:	inc    edi
6401abc0:	cmp    edi,0x17
6401abc3:	jb     0x6401abb6
6401abc5:	cmp    edi,0x17
6401abc8:	jae    0x6401ad45
6401abce:	push   ebp
6401abcf:	push   0x3
6401abd1:	call   0x6401dc80
6401abd6:	cmp    eax,0x1
6401abd9:	pop    ecx
6401abda:	je     0x6401ad11
6401abe0:	push   0x3
6401abe2:	call   0x6401dc80
6401abe7:	test   eax,eax
6401abe9:	pop    ecx
6401abea:	jne    0x6401abf9
6401abec:	cmp    DWORD PTR ds:0x6402e580,0x1
6401abf3:	je     0x6401ad11
6401abf9:	cmp    ebx,0xfc
6401abff:	je     0x6401ad44
6401ac05:	push   0x64026438
6401ac0a:	mov    ebx,0x314
6401ac0f:	push   ebx
6401ac10:	mov    ebp,0x6402ebd0
6401ac15:	push   ebp
6401ac16:	call   0x64014478
6401ac1b:	add    esp,0xc
6401ac1e:	test   eax,eax
6401ac20:	je     0x6401ac2f
6401ac22:	push   esi
6401ac23:	push   esi
6401ac24:	push   esi
6401ac25:	push   esi
6401ac26:	push   esi
6401ac27:	call   0x640124f8
6401ac2c:	add    esp,0x14
6401ac2f:	push   0x104
6401ac34:	mov    esi,0x6402ebe9
6401ac39:	push   esi
6401ac3a:	push   0x0
6401ac3c:	mov    BYTE PTR ds:0x6402eced,0x0
6401ac43:	call   DWORD PTR ds:0x6402516c
6401ac49:	test   eax,eax
6401ac4b:	jne    0x6401ac73
6401ac4d:	push   0x64026420
6401ac52:	push   0x2fb
6401ac57:	push   esi
6401ac58:	call   0x64014478
6401ac5d:	add    esp,0xc
6401ac60:	test   eax,eax
6401ac62:	je     0x6401ac73
6401ac64:	xor    eax,eax
6401ac66:	push   eax
6401ac67:	push   eax
6401ac68:	push   eax
6401ac69:	push   eax
6401ac6a:	push   eax
6401ac6b:	call   0x640124f8
6401ac70:	add    esp,0x14
6401ac73:	push   esi
6401ac74:	call   0x64014280
6401ac79:	inc    eax
6401ac7a:	cmp    eax,0x3c
6401ac7d:	pop    ecx
6401ac7e:	jbe    0x6401acb8
6401ac80:	push   esi
6401ac81:	call   0x64014280
6401ac86:	sub    esi,0x3b
6401ac89:	add    eax,esi
6401ac8b:	push   0x3
6401ac8d:	mov    ecx,0x6402eee4
6401ac92:	push   0x6402641c
6401ac97:	sub    ecx,eax
6401ac99:	push   ecx
6401ac9a:	push   eax
6401ac9b:	call   0x6401bd06
6401aca0:	add    esp,0x14
6401aca3:	test   eax,eax
6401aca5:	je     0x6401acb8
6401aca7:	xor    esi,esi
6401aca9:	push   esi
6401acaa:	push   esi
6401acab:	push   esi
6401acac:	push   esi
6401acad:	push   esi
6401acae:	call   0x640124f8
6401acb3:	add    esp,0x14
6401acb6:	jmp    0x6401acba
6401acb8:	xor    esi,esi
6401acba:	push   0x64026418
6401acbf:	push   ebx
6401acc0:	push   ebp
6401acc1:	call   0x6401bc4e
6401acc6:	add    esp,0xc
6401acc9:	test   eax,eax
6401accb:	je     0x6401acda
6401accd:	push   esi
6401acce:	push   esi
6401accf:	push   esi
6401acd0:	push   esi
6401acd1:	push   esi
6401acd2:	call   0x640124f8
6401acd7:	add    esp,0x14
6401acda:	push   DWORD PTR [edi*8+0x6402da84]
6401ace1:	push   ebx
6401ace2:	push   ebp
6401ace3:	call   0x6401bc4e
6401ace8:	add    esp,0xc
6401aceb:	test   eax,eax
6401aced:	je     0x6401acfc
6401acef:	push   esi
6401acf0:	push   esi
6401acf1:	push   esi
6401acf2:	push   esi
6401acf3:	push   esi
6401acf4:	call   0x640124f8
6401acf9:	add    esp,0x14
6401acfc:	push   0x12010
6401ad01:	push   0x640263f0
6401ad06:	push   ebp
6401ad07:	call   0x6401dac3
6401ad0c:	add    esp,0xc
6401ad0f:	jmp    0x6401ad44
6401ad11:	push   0xfffffff4
6401ad13:	call   DWORD PTR ds:0x64025160
6401ad19:	mov    ebp,eax
6401ad1b:	cmp    ebp,esi
6401ad1d:	je     0x6401ad44
6401ad1f:	cmp    ebp,0xffffffff
6401ad22:	je     0x6401ad44
6401ad24:	push   0x0
6401ad26:	lea    eax,[esp+0x14]
6401ad2a:	push   eax
6401ad2b:	lea    esi,[edi*8+0x6402da84]
6401ad32:	push   DWORD PTR [esi]
6401ad34:	call   0x64014280
6401ad39:	pop    ecx
6401ad3a:	push   eax
6401ad3b:	push   DWORD PTR [esi]
6401ad3d:	push   ebp
6401ad3e:	call   DWORD PTR ds:0x64025088
6401ad44:	pop    ebp
6401ad45:	pop    edi
6401ad46:	pop    esi
6401ad47:	pop    ebx
6401ad48:	pop    ecx
6401ad49:	ret    
6401ad4a:	push   0x3
6401ad4c:	call   0x6401dc80
6401ad51:	cmp    eax,0x1
6401ad54:	pop    ecx
6401ad55:	je     0x6401ad6c
6401ad57:	push   0x3
6401ad59:	call   0x6401dc80
6401ad5e:	test   eax,eax
6401ad60:	pop    ecx
6401ad61:	jne    0x6401ad82
6401ad63:	cmp    DWORD PTR ds:0x6402e580,0x1
6401ad6a:	jne    0x6401ad82
6401ad6c:	push   0xfc
6401ad71:	call   0x6401abaa
6401ad76:	push   0xff
6401ad7b:	call   0x6401abaa
6401ad80:	pop    ecx
6401ad81:	pop    ecx
6401ad82:	ret    
6401ad83:	push   ebp
6401ad84:	mov    ebp,esp
6401ad86:	sub    esp,0x8
6401ad89:	mov    DWORD PTR [ebp-0x4],edi
6401ad8c:	mov    DWORD PTR [ebp-0x8],esi
6401ad8f:	mov    esi,DWORD PTR [ebp+0xc]
6401ad92:	mov    edi,DWORD PTR [ebp+0x8]
6401ad95:	mov    ecx,DWORD PTR [ebp+0x10]
6401ad98:	shr    ecx,0x7
6401ad9b:	jmp    0x6401ada3
6401ad9d:	lea    ebx,[ebx+0x0]
6401ada3:	movdqa xmm0,XMMWORD PTR [esi]
6401ada7:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401adac:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401adb1:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401adb6:	movdqa XMMWORD PTR [edi],xmm0
6401adba:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401adbf:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401adc4:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401adc9:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401adce:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401add3:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401add8:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401addd:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401ade2:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401ade7:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401adec:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401adf1:	lea    esi,[esi+0x80]
6401adf7:	lea    edi,[edi+0x80]
6401adfd:	dec    ecx
6401adfe:	jne    0x6401ada3
6401ae00:	mov    esi,DWORD PTR [ebp-0x8]
6401ae03:	mov    edi,DWORD PTR [ebp-0x4]
6401ae06:	mov    esp,ebp
6401ae08:	pop    ebp
6401ae09:	ret    
6401ae0a:	push   ebp
6401ae0b:	mov    ebp,esp
6401ae0d:	sub    esp,0x1c
6401ae10:	mov    DWORD PTR [ebp-0xc],edi
6401ae13:	mov    DWORD PTR [ebp-0x8],esi
6401ae16:	mov    DWORD PTR [ebp-0x4],ebx
6401ae19:	mov    ebx,DWORD PTR [ebp+0xc]
6401ae1c:	mov    eax,ebx
6401ae1e:	cdq    
6401ae1f:	mov    ecx,eax
6401ae21:	mov    eax,DWORD PTR [ebp+0x8]
6401ae24:	xor    ecx,edx
6401ae26:	sub    ecx,edx
6401ae28:	and    ecx,0xf
6401ae2b:	xor    ecx,edx
6401ae2d:	sub    ecx,edx
6401ae2f:	cdq    
6401ae30:	mov    edi,eax
6401ae32:	xor    edi,edx
6401ae34:	sub    edi,edx
6401ae36:	and    edi,0xf
6401ae39:	xor    edi,edx
6401ae3b:	sub    edi,edx
6401ae3d:	mov    edx,ecx
6401ae3f:	or     edx,edi
6401ae41:	jne    0x6401ae8d
6401ae43:	mov    esi,DWORD PTR [ebp+0x10]
6401ae46:	mov    ecx,esi
6401ae48:	and    ecx,0x7f
6401ae4b:	mov    DWORD PTR [ebp-0x18],ecx
6401ae4e:	cmp    esi,ecx
6401ae50:	je     0x6401ae65
6401ae52:	sub    esi,ecx
6401ae54:	push   esi
6401ae55:	push   ebx
6401ae56:	push   eax
6401ae57:	call   0x6401ad83
6401ae5c:	add    esp,0xc
6401ae5f:	mov    eax,DWORD PTR [ebp+0x8]
6401ae62:	mov    ecx,DWORD PTR [ebp-0x18]
6401ae65:	test   ecx,ecx
6401ae67:	je     0x6401aee0
6401ae69:	mov    ebx,DWORD PTR [ebp+0x10]
6401ae6c:	mov    edx,DWORD PTR [ebp+0xc]
6401ae6f:	add    edx,ebx
6401ae71:	sub    edx,ecx
6401ae73:	mov    DWORD PTR [ebp-0x14],edx
6401ae76:	add    ebx,eax
6401ae78:	sub    ebx,ecx
6401ae7a:	mov    DWORD PTR [ebp-0x10],ebx
6401ae7d:	mov    esi,DWORD PTR [ebp-0x14]
6401ae80:	mov    edi,DWORD PTR [ebp-0x10]
6401ae83:	mov    ecx,DWORD PTR [ebp-0x18]
6401ae86:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401ae88:	mov    eax,DWORD PTR [ebp+0x8]
6401ae8b:	jmp    0x6401aee0
6401ae8d:	cmp    ecx,edi
6401ae8f:	jne    0x6401aec6
6401ae91:	neg    ecx
6401ae93:	add    ecx,0x10
6401ae96:	mov    DWORD PTR [ebp-0x1c],ecx
6401ae99:	mov    esi,DWORD PTR [ebp+0xc]
6401ae9c:	mov    edi,DWORD PTR [ebp+0x8]
6401ae9f:	mov    ecx,DWORD PTR [ebp-0x1c]
6401aea2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401aea4:	mov    ecx,DWORD PTR [ebp+0x8]
6401aea7:	add    ecx,DWORD PTR [ebp-0x1c]
6401aeaa:	mov    edx,DWORD PTR [ebp+0xc]
6401aead:	add    edx,DWORD PTR [ebp-0x1c]
6401aeb0:	mov    eax,DWORD PTR [ebp+0x10]
6401aeb3:	sub    eax,DWORD PTR [ebp-0x1c]
6401aeb6:	push   eax
6401aeb7:	push   edx
6401aeb8:	push   ecx
6401aeb9:	call   0x6401ae0a
6401aebe:	add    esp,0xc
6401aec1:	mov    eax,DWORD PTR [ebp+0x8]
6401aec4:	jmp    0x6401aee0
6401aec6:	mov    esi,DWORD PTR [ebp+0xc]
6401aec9:	mov    edi,DWORD PTR [ebp+0x8]
6401aecc:	mov    ecx,DWORD PTR [ebp+0x10]
6401aecf:	mov    edx,ecx
6401aed1:	shr    ecx,0x2
6401aed4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401aed6:	mov    ecx,edx
6401aed8:	and    ecx,0x3
6401aedb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401aedd:	mov    eax,DWORD PTR [ebp+0x8]
6401aee0:	mov    ebx,DWORD PTR [ebp-0x4]
6401aee3:	mov    esi,DWORD PTR [ebp-0x8]
6401aee6:	mov    edi,DWORD PTR [ebp-0xc]
6401aee9:	mov    esp,ebp
6401aeeb:	pop    ebp
6401aeec:	ret    
6401aeed:	int3   
6401aeee:	int3   
6401aeef:	int3   
6401aef0:	push   ebx
6401aef1:	push   esi
6401aef2:	push   edi
6401aef3:	mov    edx,DWORD PTR [esp+0x10]
6401aef7:	mov    eax,DWORD PTR [esp+0x14]
6401aefb:	mov    ecx,DWORD PTR [esp+0x18]
6401aeff:	push   ebp
6401af00:	push   edx
6401af01:	push   eax
6401af02:	push   ecx
6401af03:	push   ecx
6401af04:	push   0x6401af80
6401af09:	push   DWORD PTR fs:0x0
6401af10:	mov    eax,ds:0x6402d09c
6401af15:	xor    eax,esp
6401af17:	mov    DWORD PTR [esp+0x8],eax
6401af1b:	mov    DWORD PTR fs:0x0,esp
6401af22:	mov    eax,DWORD PTR [esp+0x30]
6401af26:	mov    ebx,DWORD PTR [eax+0x8]
6401af29:	mov    ecx,DWORD PTR [esp+0x2c]
6401af2d:	xor    ebx,DWORD PTR [ecx]
6401af2f:	mov    esi,DWORD PTR [eax+0xc]
6401af32:	cmp    esi,0xfffffffe
6401af35:	je     0x6401af72
6401af37:	mov    edx,DWORD PTR [esp+0x34]
6401af3b:	cmp    edx,0xfffffffe
6401af3e:	je     0x6401af44
6401af40:	cmp    esi,edx
6401af42:	jbe    0x6401af72
6401af44:	lea    esi,[esi+esi*2]
6401af47:	lea    ebx,[ebx+esi*4+0x10]
6401af4b:	mov    ecx,DWORD PTR [ebx]
6401af4d:	mov    DWORD PTR [eax+0xc],ecx
6401af50:	cmp    DWORD PTR [ebx+0x4],0x0
6401af54:	jne    0x6401af22
6401af56:	push   0x101
6401af5b:	mov    eax,DWORD PTR [ebx+0x8]
6401af5e:	call   0x6401b3a1
6401af63:	mov    ecx,0x1
6401af68:	mov    eax,DWORD PTR [ebx+0x8]
6401af6b:	call   0x6401b3c0
6401af70:	jmp    0x6401af22
6401af72:	pop    DWORD PTR fs:0x0
6401af79:	add    esp,0x18
6401af7c:	pop    edi
6401af7d:	pop    esi
6401af7e:	pop    ebx
6401af7f:	ret    
6401af80:	mov    ecx,DWORD PTR [esp+0x4]
6401af84:	test   DWORD PTR [ecx+0x4],0x6
6401af8b:	mov    eax,0x1
6401af90:	je     0x6401afc5
6401af92:	mov    eax,DWORD PTR [esp+0x8]
6401af96:	mov    ecx,DWORD PTR [eax+0x8]
6401af99:	xor    ecx,eax
6401af9b:	call   0x64012abc
6401afa0:	push   ebp
6401afa1:	mov    ebp,DWORD PTR [eax+0x18]
6401afa4:	push   DWORD PTR [eax+0xc]
6401afa7:	push   DWORD PTR [eax+0x10]
6401afaa:	push   DWORD PTR [eax+0x14]
6401afad:	call   0x6401aef0
6401afb2:	add    esp,0xc
6401afb5:	pop    ebp
6401afb6:	mov    eax,DWORD PTR [esp+0x8]
6401afba:	mov    edx,DWORD PTR [esp+0x10]
6401afbe:	mov    DWORD PTR [edx],eax
6401afc0:	mov    eax,0x3
6401afc5:	ret    
6401afc6:	push   ebp
6401afc7:	mov    ecx,DWORD PTR [esp+0x8]
6401afcb:	mov    ebp,DWORD PTR [ecx]
6401afcd:	push   DWORD PTR [ecx+0x1c]
6401afd0:	push   DWORD PTR [ecx+0x18]
6401afd3:	push   DWORD PTR [ecx+0x28]
6401afd6:	call   0x6401aef0
6401afdb:	add    esp,0xc
6401afde:	pop    ebp
6401afdf:	ret    0x4
6401afe2:	push   ebp
6401afe3:	push   esi
6401afe4:	push   edi
6401afe5:	push   ebx
6401afe6:	mov    ebp,edx
6401afe8:	xor    eax,eax
6401afea:	xor    ebx,ebx
6401afec:	xor    edx,edx
6401afee:	xor    esi,esi
6401aff0:	xor    edi,edi
6401aff2:	call   ecx
6401aff4:	pop    ebx
6401aff5:	pop    edi
6401aff6:	pop    esi
6401aff7:	pop    ebp
6401aff8:	ret    
6401aff9:	mov    ebp,edx
6401affb:	mov    esi,ecx
6401affd:	mov    eax,ecx
6401afff:	push   0x1
6401b001:	call   0x6401b3a1
6401b006:	xor    eax,eax
6401b008:	xor    ebx,ebx
6401b00a:	xor    ecx,ecx
6401b00c:	xor    edx,edx
6401b00e:	xor    edi,edi
6401b010:	jmp    esi
6401b012:	push   ebp
6401b013:	mov    ebp,esp
6401b015:	push   ebx
6401b016:	push   esi
6401b017:	push   edi
6401b018:	push   0x0
6401b01a:	push   0x0
6401b01c:	push   0x6401b027
6401b021:	push   ecx
6401b022:	call   0x6401ed3c
6401b027:	pop    edi
6401b028:	pop    esi
6401b029:	pop    ebx
6401b02a:	pop    ebp
6401b02b:	ret    
6401b02c:	push   ebp
6401b02d:	mov    ebp,DWORD PTR [esp+0x8]
6401b031:	push   edx
6401b032:	push   ecx
6401b033:	push   DWORD PTR [esp+0x14]
6401b037:	call   0x6401aef0
6401b03c:	add    esp,0xc
6401b03f:	pop    ebp
6401b040:	ret    0x8
6401b043:	int3   
6401b044:	int3   
6401b045:	int3   
6401b046:	int3   
6401b047:	int3   
6401b048:	int3   
6401b049:	int3   
6401b04a:	int3   
6401b04b:	int3   
6401b04c:	int3   
6401b04d:	int3   
6401b04e:	int3   
6401b04f:	int3   
6401b050:	mov    ecx,DWORD PTR [esp+0x4]
6401b054:	cmp    WORD PTR [ecx],0x5a4d
6401b059:	je     0x6401b05e
6401b05b:	xor    eax,eax
6401b05d:	ret    
6401b05e:	mov    eax,DWORD PTR [ecx+0x3c]
6401b061:	add    eax,ecx
6401b063:	cmp    DWORD PTR [eax],0x4550
6401b069:	jne    0x6401b05b
6401b06b:	xor    ecx,ecx
6401b06d:	cmp    WORD PTR [eax+0x18],0x10b
6401b073:	sete   cl
6401b076:	mov    eax,ecx
6401b078:	ret    
6401b079:	int3   
6401b07a:	int3   
6401b07b:	int3   
6401b07c:	int3   
6401b07d:	int3   
6401b07e:	int3   
6401b07f:	int3   
6401b080:	mov    eax,DWORD PTR [esp+0x4]
6401b084:	mov    ecx,DWORD PTR [eax+0x3c]
6401b087:	add    ecx,eax
6401b089:	movzx  eax,WORD PTR [ecx+0x14]
6401b08d:	push   ebx
6401b08e:	push   esi
6401b08f:	movzx  esi,WORD PTR [ecx+0x6]
6401b093:	xor    edx,edx
6401b095:	test   esi,esi
6401b097:	push   edi
6401b098:	lea    eax,[eax+ecx*1+0x18]
6401b09c:	jbe    0x6401b0bc
6401b09e:	mov    edi,DWORD PTR [esp+0x14]
6401b0a2:	mov    ecx,DWORD PTR [eax+0xc]
6401b0a5:	cmp    edi,ecx
6401b0a7:	jb     0x6401b0b2
6401b0a9:	mov    ebx,DWORD PTR [eax+0x8]
6401b0ac:	add    ebx,ecx
6401b0ae:	cmp    edi,ebx
6401b0b0:	jb     0x6401b0be
6401b0b2:	add    edx,0x1
6401b0b5:	add    eax,0x28
6401b0b8:	cmp    edx,esi
6401b0ba:	jb     0x6401b0a2
6401b0bc:	xor    eax,eax
6401b0be:	pop    edi
6401b0bf:	pop    esi
6401b0c0:	pop    ebx
6401b0c1:	ret    
6401b0c2:	int3   
6401b0c3:	int3   
6401b0c4:	int3   
6401b0c5:	int3   
6401b0c6:	int3   
6401b0c7:	int3   
6401b0c8:	int3   
6401b0c9:	int3   
6401b0ca:	int3   
6401b0cb:	int3   
6401b0cc:	int3   
6401b0cd:	int3   
6401b0ce:	int3   
6401b0cf:	int3   
6401b0d0:	push   ebp
6401b0d1:	mov    ebp,esp
6401b0d3:	push   0xfffffffe
6401b0d5:	push   0x6402a898
6401b0da:	push   0x640140e0
6401b0df:	mov    eax,fs:0x0
6401b0e5:	push   eax
6401b0e6:	sub    esp,0x8
6401b0e9:	push   ebx
6401b0ea:	push   esi
6401b0eb:	push   edi
6401b0ec:	mov    eax,ds:0x6402d09c
6401b0f1:	xor    DWORD PTR [ebp-0x8],eax
6401b0f4:	xor    eax,ebp
6401b0f6:	push   eax
6401b0f7:	lea    eax,[ebp-0x10]
6401b0fa:	mov    fs:0x0,eax
6401b100:	mov    DWORD PTR [ebp-0x18],esp
6401b103:	mov    DWORD PTR [ebp-0x4],0x0
6401b10a:	push   0x64000000
6401b10f:	call   0x6401b050
6401b114:	add    esp,0x4
6401b117:	test   eax,eax
6401b119:	je     0x6401b170
6401b11b:	mov    eax,DWORD PTR [ebp+0x8]
6401b11e:	sub    eax,0x64000000
6401b123:	push   eax
6401b124:	push   0x64000000
6401b129:	call   0x6401b080
6401b12e:	add    esp,0x8
6401b131:	test   eax,eax
6401b133:	je     0x6401b170
6401b135:	mov    eax,DWORD PTR [eax+0x24]
6401b138:	shr    eax,0x1f
6401b13b:	not    eax
6401b13d:	and    eax,0x1
6401b140:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b147:	mov    ecx,DWORD PTR [ebp-0x10]
6401b14a:	mov    DWORD PTR fs:0x0,ecx
6401b151:	pop    ecx
6401b152:	pop    edi
6401b153:	pop    esi
6401b154:	pop    ebx
6401b155:	mov    esp,ebp
6401b157:	pop    ebp
6401b158:	ret    
6401b159:	mov    eax,DWORD PTR [ebp-0x14]
6401b15c:	mov    ecx,DWORD PTR [eax]
6401b15e:	mov    eax,DWORD PTR [ecx]
6401b160:	xor    edx,edx
6401b162:	cmp    eax,0xc0000005
6401b167:	sete   dl
6401b16a:	mov    eax,edx
6401b16c:	ret    
6401b16d:	mov    esp,DWORD PTR [ebp-0x18]
6401b170:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b177:	xor    eax,eax
6401b179:	mov    ecx,DWORD PTR [ebp-0x10]
6401b17c:	mov    DWORD PTR fs:0x0,ecx
6401b183:	pop    ecx
6401b184:	pop    edi
6401b185:	pop    esi
6401b186:	pop    ebx
6401b187:	mov    esp,ebp
6401b189:	pop    ebp
6401b18a:	ret    
6401b18b:	xor    eax,eax
6401b18d:	inc    eax
6401b18e:	cmp    DWORD PTR [esp+0x4],0x0
6401b193:	jne    0x6401b197
6401b195:	xor    eax,eax
6401b197:	ret    
6401b198:	push   ebp
6401b199:	lea    ebp,[esp-0x2a8]
6401b1a0:	sub    esp,0x328
6401b1a6:	mov    eax,ds:0x6402d09c
6401b1ab:	xor    eax,ebp
6401b1ad:	mov    DWORD PTR [ebp+0x2a4],eax
6401b1b3:	test   BYTE PTR ds:0x6402db38,0x1
6401b1ba:	push   esi
6401b1bb:	je     0x6401b1c5
6401b1bd:	push   0xa
6401b1bf:	call   0x6401abaa
6401b1c4:	pop    ecx
6401b1c5:	call   0x6401b54d
6401b1ca:	test   eax,eax
6401b1cc:	je     0x6401b1d6
6401b1ce:	push   0x16
6401b1d0:	call   0x6401b55a
6401b1d5:	pop    ecx
6401b1d6:	test   BYTE PTR ds:0x6402db38,0x2
6401b1dd:	je     0x6401b283
6401b1e3:	mov    DWORD PTR [ebp+0x88],eax
6401b1e9:	mov    DWORD PTR [ebp+0x84],ecx
6401b1ef:	mov    DWORD PTR [ebp+0x80],edx
6401b1f5:	mov    DWORD PTR [ebp+0x7c],ebx
6401b1f8:	mov    DWORD PTR [ebp+0x78],esi
6401b1fb:	mov    DWORD PTR [ebp+0x74],edi
6401b1fe:	data16 mov WORD PTR [ebp+0xa0],ss
6401b205:	data16 mov WORD PTR [ebp+0x94],cs
6401b20c:	data16 mov WORD PTR [ebp+0x70],ds
6401b210:	data16 mov WORD PTR [ebp+0x6c],es
6401b214:	data16 mov WORD PTR [ebp+0x68],fs
6401b218:	data16 mov WORD PTR [ebp+0x64],gs
6401b21c:	pushf  
6401b21d:	pop    DWORD PTR [ebp+0x98]
6401b223:	mov    esi,DWORD PTR [ebp+0x2ac]
6401b229:	lea    eax,[ebp+0x2ac]
6401b22f:	mov    DWORD PTR [ebp+0x9c],eax
6401b235:	mov    DWORD PTR [ebp-0x28],0x10001
6401b23c:	mov    DWORD PTR [ebp+0x90],esi
6401b242:	mov    eax,DWORD PTR [eax-0x4]
6401b245:	push   0x50
6401b247:	mov    DWORD PTR [ebp+0x8c],eax
6401b24d:	lea    eax,[ebp-0x80]
6401b250:	push   0x0
6401b252:	push   eax
6401b253:	call   0x640131c0
6401b258:	lea    eax,[ebp-0x80]
6401b25b:	add    esp,0xc
6401b25e:	mov    DWORD PTR [ebp-0x30],eax
6401b261:	lea    eax,[ebp-0x28]
6401b264:	push   0x0
6401b266:	mov    DWORD PTR [ebp-0x80],0x40000015
6401b26d:	mov    DWORD PTR [ebp-0x74],esi
6401b270:	mov    DWORD PTR [ebp-0x2c],eax
6401b273:	call   DWORD PTR ds:0x6402511c
6401b279:	lea    eax,[ebp-0x30]
6401b27c:	push   eax
6401b27d:	call   DWORD PTR ds:0x64025118
6401b283:	push   0x3
6401b285:	call   0x64016196
6401b28a:	int3   
6401b28b:	int3   
6401b28c:	push   ebp
6401b28d:	mov    ebp,esp
6401b28f:	push   ebx
6401b290:	push   esi
6401b291:	push   edi
6401b292:	push   ebp
6401b293:	push   0x0
6401b295:	push   0x0
6401b297:	push   0x6401b2a4
6401b29c:	push   DWORD PTR [ebp+0x8]
6401b29f:	call   0x6401ed3c
6401b2a4:	pop    ebp
6401b2a5:	pop    edi
6401b2a6:	pop    esi
6401b2a7:	pop    ebx
6401b2a8:	mov    esp,ebp
6401b2aa:	pop    ebp
6401b2ab:	ret    
6401b2ac:	mov    ecx,DWORD PTR [esp+0x4]
6401b2b0:	test   DWORD PTR [ecx+0x4],0x6
6401b2b7:	mov    eax,0x1
6401b2bc:	je     0x6401b2f0
6401b2be:	mov    eax,DWORD PTR [esp+0x14]
6401b2c2:	mov    ecx,DWORD PTR [eax-0x4]
6401b2c5:	xor    ecx,eax
6401b2c7:	call   0x64012abc
6401b2cc:	push   ebp
6401b2cd:	mov    ebp,DWORD PTR [eax+0x10]
6401b2d0:	mov    edx,DWORD PTR [eax+0x28]
6401b2d3:	push   edx
6401b2d4:	mov    edx,DWORD PTR [eax+0x24]
6401b2d7:	push   edx
6401b2d8:	call   0x6401b2f1
6401b2dd:	add    esp,0x8
6401b2e0:	pop    ebp
6401b2e1:	mov    eax,DWORD PTR [esp+0x8]
6401b2e5:	mov    edx,DWORD PTR [esp+0x10]
6401b2e9:	mov    DWORD PTR [edx],eax
6401b2eb:	mov    eax,0x3
6401b2f0:	ret    
6401b2f1:	push   ebx
6401b2f2:	push   esi
6401b2f3:	push   edi
6401b2f4:	mov    eax,DWORD PTR [esp+0x10]
6401b2f8:	push   ebp
6401b2f9:	push   eax
6401b2fa:	push   0xfffffffe
6401b2fc:	push   0x6401b2ac
6401b301:	push   DWORD PTR fs:0x0
6401b308:	mov    eax,ds:0x6402d09c
6401b30d:	xor    eax,esp
6401b30f:	push   eax
6401b310:	lea    eax,[esp+0x4]
6401b314:	mov    fs:0x0,eax
6401b31a:	mov    eax,DWORD PTR [esp+0x28]
6401b31e:	mov    ebx,DWORD PTR [eax+0x8]
6401b321:	mov    esi,DWORD PTR [eax+0xc]
6401b324:	cmp    esi,0xffffffff
6401b327:	je     0x6401b363
6401b329:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401b32e:	je     0x6401b336
6401b330:	cmp    esi,DWORD PTR [esp+0x2c]
6401b334:	jbe    0x6401b363
6401b336:	lea    esi,[esi+esi*2]
6401b339:	mov    ecx,DWORD PTR [ebx+esi*4]
6401b33c:	mov    DWORD PTR [esp+0xc],ecx
6401b340:	mov    DWORD PTR [eax+0xc],ecx
6401b343:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401b348:	jne    0x6401b361
6401b34a:	push   0x101
6401b34f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401b353:	call   0x6401b3a1
6401b358:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401b35c:	call   0x6401b3c0
6401b361:	jmp    0x6401b31a
6401b363:	mov    ecx,DWORD PTR [esp+0x4]
6401b367:	mov    DWORD PTR fs:0x0,ecx
6401b36e:	add    esp,0x18
6401b371:	pop    edi
6401b372:	pop    esi
6401b373:	pop    ebx
6401b374:	ret    
6401b375:	xor    eax,eax
6401b377:	mov    ecx,DWORD PTR fs:0x0
6401b37e:	cmp    DWORD PTR [ecx+0x4],0x6401b2ac
6401b385:	jne    0x6401b397
6401b387:	mov    edx,DWORD PTR [ecx+0xc]
6401b38a:	mov    edx,DWORD PTR [edx+0xc]
6401b38d:	cmp    DWORD PTR [ecx+0x8],edx
6401b390:	jne    0x6401b397
6401b392:	mov    eax,0x1
6401b397:	ret    
6401b398:	push   ebx
6401b399:	push   ecx
6401b39a:	mov    ebx,0x6402db3c
6401b39f:	jmp    0x6401b3ac
6401b3a1:	push   ebx
6401b3a2:	push   ecx
6401b3a3:	mov    ebx,0x6402db3c
6401b3a8:	mov    ecx,DWORD PTR [esp+0xc]
6401b3ac:	mov    DWORD PTR [ebx+0x8],ecx
6401b3af:	mov    DWORD PTR [ebx+0x4],eax
6401b3b2:	mov    DWORD PTR [ebx+0xc],ebp
6401b3b5:	push   ebp
6401b3b6:	push   ecx
6401b3b7:	push   eax
6401b3b8:	pop    eax
6401b3b9:	pop    ecx
6401b3ba:	pop    ebp
6401b3bb:	pop    ecx
6401b3bc:	pop    ebx
6401b3bd:	ret    0x4
6401b3c0:	call   eax
6401b3c2:	ret    
6401b3c3:	push   0xc
6401b3c5:	push   0x6402a8b8
6401b3ca:	call   0x64014080
6401b3cf:	mov    ecx,DWORD PTR [ebp+0x8]
6401b3d2:	xor    edi,edi
6401b3d4:	cmp    ecx,edi
6401b3d6:	jbe    0x6401b406
6401b3d8:	push   0xffffffe0
6401b3da:	pop    eax
6401b3db:	xor    edx,edx
6401b3dd:	div    ecx
6401b3df:	cmp    eax,DWORD PTR [ebp+0xc]
6401b3e2:	sbb    eax,eax
6401b3e4:	inc    eax
6401b3e5:	jne    0x6401b406
6401b3e7:	call   0x64014880
6401b3ec:	mov    DWORD PTR [eax],0xc
6401b3f2:	push   edi
6401b3f3:	push   edi
6401b3f4:	push   edi
6401b3f5:	push   edi
6401b3f6:	push   edi
6401b3f7:	call   0x640125f4
6401b3fc:	add    esp,0x14
6401b3ff:	xor    eax,eax
6401b401:	jmp    0x6401b4db
6401b406:	imul   ecx,DWORD PTR [ebp+0xc]
6401b40a:	mov    esi,ecx
6401b40c:	mov    DWORD PTR [ebp+0x8],esi
6401b40f:	cmp    esi,edi
6401b411:	jne    0x6401b416
6401b413:	xor    esi,esi
6401b415:	inc    esi
6401b416:	xor    ebx,ebx
6401b418:	mov    DWORD PTR [ebp-0x1c],ebx
6401b41b:	cmp    esi,0xffffffe0
6401b41e:	ja     0x6401b489
6401b420:	cmp    DWORD PTR ds:0x640324dc,0x3
6401b427:	jne    0x6401b474
6401b429:	add    esi,0xf
6401b42c:	and    esi,0xfffffff0
6401b42f:	mov    DWORD PTR [ebp+0xc],esi
6401b432:	mov    eax,DWORD PTR [ebp+0x8]
6401b435:	cmp    eax,DWORD PTR ds:0x640324cc
6401b43b:	ja     0x6401b474
6401b43d:	push   0x4
6401b43f:	call   0x6401a07a
6401b444:	pop    ecx
6401b445:	mov    DWORD PTR [ebp-0x4],edi
6401b448:	push   DWORD PTR [ebp+0x8]
6401b44b:	call   0x6401a8c7
6401b450:	pop    ecx
6401b451:	mov    DWORD PTR [ebp-0x1c],eax
6401b454:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b45b:	call   0x6401b4bf
6401b460:	mov    ebx,DWORD PTR [ebp-0x1c]
6401b463:	cmp    ebx,edi
6401b465:	je     0x6401b478
6401b467:	push   DWORD PTR [ebp+0x8]
6401b46a:	push   edi
6401b46b:	push   ebx
6401b46c:	call   0x640131c0
6401b471:	add    esp,0xc
6401b474:	cmp    ebx,edi
6401b476:	jne    0x6401b4d9
6401b478:	push   esi
6401b479:	push   0x8
6401b47b:	push   DWORD PTR ds:0x6402ea6c
6401b481:	call   DWORD PTR ds:0x64025100
6401b487:	mov    ebx,eax
6401b489:	cmp    ebx,edi
6401b48b:	jne    0x6401b4d9
6401b48d:	cmp    DWORD PTR ds:0x6402eee4,edi
6401b493:	je     0x6401b4c8
6401b495:	push   esi
6401b496:	call   0x64014efb
6401b49b:	pop    ecx
6401b49c:	test   eax,eax
6401b49e:	jne    0x6401b416
6401b4a4:	mov    eax,DWORD PTR [ebp+0x10]
6401b4a7:	cmp    eax,edi
6401b4a9:	je     0x6401b3ff
6401b4af:	mov    DWORD PTR [eax],0xc
6401b4b5:	jmp    0x6401b3ff
6401b4ba:	xor    edi,edi
6401b4bc:	mov    esi,DWORD PTR [ebp+0xc]
6401b4bf:	push   0x4
6401b4c1:	call   0x64019fa2
6401b4c6:	pop    ecx
6401b4c7:	ret    
6401b4c8:	cmp    ebx,edi
6401b4ca:	jne    0x6401b4d9
6401b4cc:	mov    eax,DWORD PTR [ebp+0x10]
6401b4cf:	cmp    eax,edi
6401b4d1:	je     0x6401b4d9
6401b4d3:	mov    DWORD PTR [eax],0xc
6401b4d9:	mov    eax,ebx
6401b4db:	call   0x640140c5
6401b4e0:	ret    
6401b4e1:	push   esi
6401b4e2:	push   edi
6401b4e3:	xor    edi,edi
6401b4e5:	lea    esi,[edi+0x6402db4c]
6401b4eb:	push   DWORD PTR [esi]
6401b4ed:	call   0x64014938
6401b4f2:	add    edi,0x4
6401b4f5:	cmp    edi,0x28
6401b4f8:	pop    ecx
6401b4f9:	mov    DWORD PTR [esi],eax
6401b4fb:	jb     0x6401b4e5
6401b4fd:	pop    edi
6401b4fe:	pop    esi
6401b4ff:	ret    
6401b500:	mov    eax,DWORD PTR [esp+0x4]
6401b504:	mov    ds:0x6402ef24,eax
6401b509:	mov    ds:0x6402ef28,eax
6401b50e:	mov    ds:0x6402ef2c,eax
6401b513:	mov    ds:0x6402ef30,eax
6401b518:	ret    
6401b519:	mov    eax,DWORD PTR [esp+0x4]
6401b51d:	mov    ecx,DWORD PTR ds:0x6402d94c
6401b523:	push   esi
6401b524:	cmp    DWORD PTR [eax+0x4],edx
6401b527:	je     0x6401b539
6401b529:	mov    esi,ecx
6401b52b:	imul   esi,esi,0xc
6401b52e:	add    esi,DWORD PTR [esp+0x8]
6401b532:	add    eax,0xc
6401b535:	cmp    eax,esi
6401b537:	jb     0x6401b524
6401b539:	imul   ecx,ecx,0xc
6401b53c:	add    ecx,DWORD PTR [esp+0x8]
6401b540:	pop    esi
6401b541:	cmp    eax,ecx
6401b543:	jae    0x6401b54a
6401b545:	cmp    DWORD PTR [eax+0x4],edx
6401b548:	je     0x6401b54c
6401b54a:	xor    eax,eax
6401b54c:	ret    
6401b54d:	push   DWORD PTR ds:0x6402ef2c
6401b553:	call   0x640149af
6401b558:	pop    ecx
6401b559:	ret    
6401b55a:	push   0x20
6401b55c:	push   0x6402a8d8
6401b561:	call   0x64014080
6401b566:	xor    edi,edi
6401b568:	mov    DWORD PTR [ebp-0x1c],edi
6401b56b:	mov    DWORD PTR [ebp-0x28],edi
6401b56e:	mov    ebx,DWORD PTR [ebp+0x8]
6401b571:	cmp    ebx,0xb
6401b574:	jg     0x6401b5c2
6401b576:	je     0x6401b58d
6401b578:	mov    eax,ebx
6401b57a:	push   0x2
6401b57c:	pop    ecx
6401b57d:	sub    eax,ecx
6401b57f:	je     0x6401b5a3
6401b581:	sub    eax,ecx
6401b583:	je     0x6401b58d
6401b585:	sub    eax,ecx
6401b587:	je     0x6401b5ed
6401b589:	sub    eax,ecx
6401b58b:	jne    0x6401b5d1
6401b58d:	call   0x64014b54
6401b592:	mov    edi,eax
6401b594:	mov    DWORD PTR [ebp-0x28],edi
6401b597:	test   edi,edi
6401b599:	jne    0x6401b5af
6401b59b:	or     eax,0xffffffff
6401b59e:	jmp    0x6401b704
6401b5a3:	mov    esi,0x6402ef24
6401b5a8:	mov    eax,ds:0x6402ef24
6401b5ad:	jmp    0x6401b60f
6401b5af:	push   DWORD PTR [edi+0x5c]
6401b5b2:	mov    edx,ebx
6401b5b4:	call   0x6401b519
6401b5b9:	mov    esi,eax
6401b5bb:	add    esi,0x8
6401b5be:	mov    eax,DWORD PTR [esi]
6401b5c0:	jmp    0x6401b61c
6401b5c2:	mov    eax,ebx
6401b5c4:	sub    eax,0xf
6401b5c7:	je     0x6401b605
6401b5c9:	sub    eax,0x6
6401b5cc:	je     0x6401b5f9
6401b5ce:	dec    eax
6401b5cf:	je     0x6401b5ed
6401b5d1:	call   0x64014880
6401b5d6:	mov    DWORD PTR [eax],0x16
6401b5dc:	xor    eax,eax
6401b5de:	push   eax
6401b5df:	push   eax
6401b5e0:	push   eax
6401b5e1:	push   eax
6401b5e2:	push   eax
6401b5e3:	call   0x640125f4
6401b5e8:	add    esp,0x14
6401b5eb:	jmp    0x6401b59b
6401b5ed:	mov    esi,0x6402ef2c
6401b5f2:	mov    eax,ds:0x6402ef2c
6401b5f7:	jmp    0x6401b60f
6401b5f9:	mov    esi,0x6402ef28
6401b5fe:	mov    eax,ds:0x6402ef28
6401b603:	jmp    0x6401b60f
6401b605:	mov    esi,0x6402ef30
6401b60a:	mov    eax,ds:0x6402ef30
6401b60f:	mov    DWORD PTR [ebp-0x1c],0x1
6401b616:	push   eax
6401b617:	call   0x640149af
6401b61c:	mov    DWORD PTR [ebp-0x20],eax
6401b61f:	pop    ecx
6401b620:	xor    eax,eax
6401b622:	cmp    DWORD PTR [ebp-0x20],0x1
6401b626:	je     0x6401b704
6401b62c:	cmp    DWORD PTR [ebp-0x20],eax
6401b62f:	jne    0x6401b638
6401b631:	push   0x3
6401b633:	call   0x64016196
6401b638:	cmp    DWORD PTR [ebp-0x1c],eax
6401b63b:	je     0x6401b644
6401b63d:	push   eax
6401b63e:	call   0x6401a07a
6401b643:	pop    ecx
6401b644:	xor    eax,eax
6401b646:	mov    DWORD PTR [ebp-0x4],eax
6401b649:	cmp    ebx,0x8
6401b64c:	je     0x6401b658
6401b64e:	cmp    ebx,0xb
6401b651:	je     0x6401b658
6401b653:	cmp    ebx,0x4
6401b656:	jne    0x6401b673
6401b658:	mov    ecx,DWORD PTR [edi+0x60]
6401b65b:	mov    DWORD PTR [ebp-0x2c],ecx
6401b65e:	mov    DWORD PTR [edi+0x60],eax
6401b661:	cmp    ebx,0x8
6401b664:	jne    0x6401b6a6
6401b666:	mov    ecx,DWORD PTR [edi+0x64]
6401b669:	mov    DWORD PTR [ebp-0x30],ecx
6401b66c:	mov    DWORD PTR [edi+0x64],0x8c
6401b673:	cmp    ebx,0x8
6401b676:	jne    0x6401b6a6
6401b678:	mov    ecx,DWORD PTR ds:0x6402d940
6401b67e:	mov    DWORD PTR [ebp-0x24],ecx
6401b681:	mov    ecx,DWORD PTR ds:0x6402d944
6401b687:	mov    edx,DWORD PTR ds:0x6402d940
6401b68d:	add    ecx,edx
6401b68f:	cmp    DWORD PTR [ebp-0x24],ecx
6401b692:	jge    0x6401b6ad
6401b694:	mov    ecx,DWORD PTR [ebp-0x24]
6401b697:	imul   ecx,ecx,0xc
6401b69a:	mov    edx,DWORD PTR [edi+0x5c]
6401b69d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401b6a1:	inc    DWORD PTR [ebp-0x24]
6401b6a4:	jmp    0x6401b681
6401b6a6:	call   0x640149a6
6401b6ab:	mov    DWORD PTR [esi],eax
6401b6ad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b6b4:	call   0x6401b6ce
6401b6b9:	cmp    ebx,0x8
6401b6bc:	jne    0x6401b6dd
6401b6be:	push   DWORD PTR [edi+0x64]
6401b6c1:	push   ebx
6401b6c2:	call   DWORD PTR [ebp-0x20]
6401b6c5:	pop    ecx
6401b6c6:	jmp    0x6401b6e1
6401b6c8:	mov    ebx,DWORD PTR [ebp+0x8]
6401b6cb:	mov    edi,DWORD PTR [ebp-0x28]
6401b6ce:	cmp    DWORD PTR [ebp-0x1c],0x0
6401b6d2:	je     0x6401b6dc
6401b6d4:	push   0x0
6401b6d6:	call   0x64019fa2
6401b6db:	pop    ecx
6401b6dc:	ret    
6401b6dd:	push   ebx
6401b6de:	call   DWORD PTR [ebp-0x20]
6401b6e1:	pop    ecx
6401b6e2:	cmp    ebx,0x8
6401b6e5:	je     0x6401b6f1
6401b6e7:	cmp    ebx,0xb
6401b6ea:	je     0x6401b6f1
6401b6ec:	cmp    ebx,0x4
6401b6ef:	jne    0x6401b702
6401b6f1:	mov    eax,DWORD PTR [ebp-0x2c]
6401b6f4:	mov    DWORD PTR [edi+0x60],eax
6401b6f7:	cmp    ebx,0x8
6401b6fa:	jne    0x6401b702
6401b6fc:	mov    eax,DWORD PTR [ebp-0x30]
6401b6ff:	mov    DWORD PTR [edi+0x64],eax
6401b702:	xor    eax,eax
6401b704:	call   0x640140c5
6401b709:	ret    
6401b70a:	mov    eax,DWORD PTR [esp+0x4]
6401b70e:	mov    ds:0x6402ef38,eax
6401b713:	ret    
6401b714:	mov    eax,DWORD PTR [esp+0x4]
6401b718:	mov    ds:0x6402ef44,eax
6401b71d:	ret    
6401b71e:	mov    eax,DWORD PTR [esp+0x4]
6401b722:	mov    ds:0x6402ef48,eax
6401b727:	ret    
6401b728:	push   DWORD PTR [esp+0x4]
6401b72c:	call   DWORD PTR ds:0x6402501c
6401b732:	xor    eax,eax
6401b734:	inc    eax
6401b735:	ret    0x8
6401b738:	push   0x14
6401b73a:	push   0x6402a8f8
6401b73f:	call   0x64014080
6401b744:	xor    edi,edi
6401b746:	mov    DWORD PTR [ebp-0x1c],edi
6401b749:	push   DWORD PTR ds:0x6402ef48
6401b74f:	call   0x640149af
6401b754:	pop    ecx
6401b755:	mov    esi,eax
6401b757:	cmp    esi,edi
6401b759:	jne    0x6401b7ae
6401b75b:	lea    eax,[ebp-0x1c]
6401b75e:	push   eax
6401b75f:	call   0x64015faf
6401b764:	pop    ecx
6401b765:	cmp    eax,edi
6401b767:	je     0x6401b776
6401b769:	push   edi
6401b76a:	push   edi
6401b76b:	push   edi
6401b76c:	push   edi
6401b76d:	push   edi
6401b76e:	call   0x640124f8
6401b773:	add    esp,0x14
6401b776:	cmp    DWORD PTR [ebp-0x1c],0x1
6401b77a:	je     0x6401b79d
6401b77c:	push   0x64026b98
6401b781:	call   DWORD PTR ds:0x64025130
6401b787:	cmp    eax,edi
6401b789:	je     0x6401b79d
6401b78b:	push   0x64026b70
6401b790:	push   eax
6401b791:	call   DWORD PTR ds:0x64025014
6401b797:	mov    esi,eax
6401b799:	cmp    esi,edi
6401b79b:	jne    0x6401b7a2
6401b79d:	mov    esi,0x6401b728
6401b7a2:	push   esi
6401b7a3:	call   0x64014938
6401b7a8:	pop    ecx
6401b7a9:	mov    ds:0x6402ef48,eax
6401b7ae:	mov    DWORD PTR [ebp-0x4],edi
6401b7b1:	push   DWORD PTR [ebp+0xc]
6401b7b4:	push   DWORD PTR [ebp+0x8]
6401b7b7:	call   esi
6401b7b9:	mov    DWORD PTR [ebp-0x20],eax
6401b7bc:	jmp    0x6401b7ed
6401b7be:	mov    eax,DWORD PTR [ebp-0x14]
6401b7c1:	mov    eax,DWORD PTR [eax]
6401b7c3:	mov    eax,DWORD PTR [eax]
6401b7c5:	mov    DWORD PTR [ebp-0x24],eax
6401b7c8:	xor    ecx,ecx
6401b7ca:	cmp    eax,0xc0000017
6401b7cf:	sete   cl
6401b7d2:	mov    eax,ecx
6401b7d4:	ret    
6401b7d5:	mov    esp,DWORD PTR [ebp-0x18]
6401b7d8:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401b7df:	jne    0x6401b7e9
6401b7e1:	push   0x8
6401b7e3:	call   DWORD PTR ds:0x64025060
6401b7e9:	and    DWORD PTR [ebp-0x20],0x0
6401b7ed:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b7f4:	mov    eax,DWORD PTR [ebp-0x20]
6401b7f7:	call   0x640140c5
6401b7fc:	ret    
6401b7fd:	push   ebp
6401b7fe:	mov    ebp,esp
6401b800:	push   ecx
6401b801:	push   ecx
6401b802:	mov    eax,ds:0x6402d09c
6401b807:	xor    eax,ebp
6401b809:	mov    DWORD PTR [ebp-0x4],eax
6401b80c:	mov    eax,ds:0x6402ef4c
6401b811:	push   ebx
6401b812:	push   esi
6401b813:	xor    ebx,ebx
6401b815:	cmp    eax,ebx
6401b817:	push   edi
6401b818:	mov    edi,ecx
6401b81a:	jne    0x6401b856
6401b81c:	lea    eax,[ebp-0x8]
6401b81f:	push   eax
6401b820:	xor    esi,esi
6401b822:	inc    esi
6401b823:	push   esi
6401b824:	push   0x640276e4
6401b829:	push   esi
6401b82a:	call   DWORD PTR ds:0x640250bc
6401b830:	test   eax,eax
6401b832:	je     0x6401b83c
6401b834:	mov    DWORD PTR ds:0x6402ef4c,esi
6401b83a:	jmp    0x6401b870
6401b83c:	call   DWORD PTR ds:0x64025044
6401b842:	cmp    eax,0x78
6401b845:	jne    0x6401b851
6401b847:	push   0x2
6401b849:	pop    eax
6401b84a:	mov    ds:0x6402ef4c,eax
6401b84f:	jmp    0x6401b856
6401b851:	mov    eax,ds:0x6402ef4c
6401b856:	cmp    eax,0x2
6401b859:	je     0x6401b92e
6401b85f:	cmp    eax,ebx
6401b861:	je     0x6401b92e
6401b867:	cmp    eax,0x1
6401b86a:	jne    0x6401b958
6401b870:	cmp    DWORD PTR [ebp+0x18],ebx
6401b873:	mov    DWORD PTR [ebp-0x8],ebx
6401b876:	jne    0x6401b880
6401b878:	mov    eax,DWORD PTR [edi]
6401b87a:	mov    eax,DWORD PTR [eax+0x4]
6401b87d:	mov    DWORD PTR [ebp+0x18],eax
6401b880:	mov    esi,DWORD PTR ds:0x64025024
6401b886:	xor    eax,eax
6401b888:	cmp    DWORD PTR [ebp+0x20],ebx
6401b88b:	push   ebx
6401b88c:	push   ebx
6401b88d:	push   DWORD PTR [ebp+0x10]
6401b890:	setne  al
6401b893:	push   DWORD PTR [ebp+0xc]
6401b896:	lea    eax,[eax*8+0x1]
6401b89d:	push   eax
6401b89e:	push   DWORD PTR [ebp+0x18]
6401b8a1:	call   esi
6401b8a3:	mov    edi,eax
6401b8a5:	cmp    edi,ebx
6401b8a7:	je     0x6401b958
6401b8ad:	jle    0x6401b8eb
6401b8af:	cmp    edi,0x7ffffff0
6401b8b5:	ja     0x6401b8eb
6401b8b7:	lea    eax,[edi+edi*1+0x8]
6401b8bb:	cmp    eax,0x400
6401b8c0:	ja     0x6401b8d5
6401b8c2:	call   0x64013240
6401b8c7:	mov    eax,esp
6401b8c9:	cmp    eax,ebx
6401b8cb:	je     0x6401b8e9
6401b8cd:	mov    DWORD PTR [eax],0xcccc
6401b8d3:	jmp    0x6401b8e6
6401b8d5:	push   eax
6401b8d6:	call   0x64013a33
6401b8db:	cmp    eax,ebx
6401b8dd:	pop    ecx
6401b8de:	je     0x6401b8e9
6401b8e0:	mov    DWORD PTR [eax],0xdddd
6401b8e6:	add    eax,0x8
6401b8e9:	mov    ebx,eax
6401b8eb:	test   ebx,ebx
6401b8ed:	je     0x6401b958
6401b8ef:	lea    eax,[edi+edi*1]
6401b8f2:	push   eax
6401b8f3:	push   0x0
6401b8f5:	push   ebx
6401b8f6:	call   0x640131c0
6401b8fb:	add    esp,0xc
6401b8fe:	push   edi
6401b8ff:	push   ebx
6401b900:	push   DWORD PTR [ebp+0x10]
6401b903:	push   DWORD PTR [ebp+0xc]
6401b906:	push   0x1
6401b908:	push   DWORD PTR [ebp+0x18]
6401b90b:	call   esi
6401b90d:	test   eax,eax
6401b90f:	je     0x6401b922
6401b911:	push   DWORD PTR [ebp+0x14]
6401b914:	push   eax
6401b915:	push   ebx
6401b916:	push   DWORD PTR [ebp+0x8]
6401b919:	call   DWORD PTR ds:0x640250bc
6401b91f:	mov    DWORD PTR [ebp-0x8],eax
6401b922:	push   ebx
6401b923:	call   0x64012fcc
6401b928:	mov    eax,DWORD PTR [ebp-0x8]
6401b92b:	pop    ecx
6401b92c:	jmp    0x6401b9a3
6401b92e:	xor    esi,esi
6401b930:	cmp    DWORD PTR [ebp+0x1c],ebx
6401b933:	jne    0x6401b93d
6401b935:	mov    eax,DWORD PTR [edi]
6401b937:	mov    eax,DWORD PTR [eax+0x14]
6401b93a:	mov    DWORD PTR [ebp+0x1c],eax
6401b93d:	cmp    DWORD PTR [ebp+0x18],ebx
6401b940:	jne    0x6401b94a
6401b942:	mov    eax,DWORD PTR [edi]
6401b944:	mov    eax,DWORD PTR [eax+0x4]
6401b947:	mov    DWORD PTR [ebp+0x18],eax
6401b94a:	push   DWORD PTR [ebp+0x1c]
6401b94d:	call   0x6401d62f
6401b952:	cmp    eax,0xffffffff
6401b955:	pop    ecx
6401b956:	jne    0x6401b95c
6401b958:	xor    eax,eax
6401b95a:	jmp    0x6401b9a3
6401b95c:	cmp    eax,DWORD PTR [ebp+0x18]
6401b95f:	je     0x6401b97f
6401b961:	push   ebx
6401b962:	push   ebx
6401b963:	lea    ecx,[ebp+0x10]
6401b966:	push   ecx
6401b967:	push   DWORD PTR [ebp+0xc]
6401b96a:	push   eax
6401b96b:	push   DWORD PTR [ebp+0x18]
6401b96e:	call   0x6401d676
6401b973:	mov    esi,eax
6401b975:	add    esp,0x18
6401b978:	cmp    esi,ebx
6401b97a:	je     0x6401b958
6401b97c:	mov    DWORD PTR [ebp+0xc],esi
6401b97f:	push   DWORD PTR [ebp+0x14]
6401b982:	push   DWORD PTR [ebp+0x10]
6401b985:	push   DWORD PTR [ebp+0xc]
6401b988:	push   DWORD PTR [ebp+0x8]
6401b98b:	push   DWORD PTR [ebp+0x1c]
6401b98e:	call   DWORD PTR ds:0x640250c0
6401b994:	cmp    esi,ebx
6401b996:	mov    edi,eax
6401b998:	je     0x6401b9a1
6401b99a:	push   esi
6401b99b:	call   0x64013956
6401b9a0:	pop    ecx
6401b9a1:	mov    eax,edi
6401b9a3:	lea    esp,[ebp-0x14]
6401b9a6:	pop    edi
6401b9a7:	pop    esi
6401b9a8:	pop    ebx
6401b9a9:	mov    ecx,DWORD PTR [ebp-0x4]
6401b9ac:	xor    ecx,ebp
6401b9ae:	call   0x64012abc
6401b9b3:	leave  
6401b9b4:	ret    
6401b9b5:	push   ebp
6401b9b6:	mov    ebp,esp
6401b9b8:	sub    esp,0x10
6401b9bb:	push   DWORD PTR [ebp+0x8]
6401b9be:	lea    ecx,[ebp-0x10]
6401b9c1:	call   0x64012c5f
6401b9c6:	push   DWORD PTR [ebp+0x24]
6401b9c9:	lea    ecx,[ebp-0x10]
6401b9cc:	push   DWORD PTR [ebp+0x20]
6401b9cf:	push   DWORD PTR [ebp+0x1c]
6401b9d2:	push   DWORD PTR [ebp+0x18]
6401b9d5:	push   DWORD PTR [ebp+0x14]
6401b9d8:	push   DWORD PTR [ebp+0x10]
6401b9db:	push   DWORD PTR [ebp+0xc]
6401b9de:	call   0x6401b7fd
6401b9e3:	add    esp,0x1c
6401b9e6:	cmp    BYTE PTR [ebp-0x4],0x0
6401b9ea:	je     0x6401b9f3
6401b9ec:	mov    ecx,DWORD PTR [ebp-0x8]
6401b9ef:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401b9f3:	leave  
6401b9f4:	ret    
6401b9f5:	push   esi
6401b9f6:	mov    esi,DWORD PTR [esp+0x8]
6401b9fa:	test   esi,esi
6401b9fc:	je     0x6401bb83
6401ba02:	push   DWORD PTR [esi+0x4]
6401ba05:	call   0x64013956
6401ba0a:	push   DWORD PTR [esi+0x8]
6401ba0d:	call   0x64013956
6401ba12:	push   DWORD PTR [esi+0xc]
6401ba15:	call   0x64013956
6401ba1a:	push   DWORD PTR [esi+0x10]
6401ba1d:	call   0x64013956
6401ba22:	push   DWORD PTR [esi+0x14]
6401ba25:	call   0x64013956
6401ba2a:	push   DWORD PTR [esi+0x18]
6401ba2d:	call   0x64013956
6401ba32:	push   DWORD PTR [esi]
6401ba34:	call   0x64013956
6401ba39:	push   DWORD PTR [esi+0x20]
6401ba3c:	call   0x64013956
6401ba41:	push   DWORD PTR [esi+0x24]
6401ba44:	call   0x64013956
6401ba49:	push   DWORD PTR [esi+0x28]
6401ba4c:	call   0x64013956
6401ba51:	push   DWORD PTR [esi+0x2c]
6401ba54:	call   0x64013956
6401ba59:	push   DWORD PTR [esi+0x30]
6401ba5c:	call   0x64013956
6401ba61:	push   DWORD PTR [esi+0x34]
6401ba64:	call   0x64013956
6401ba69:	push   DWORD PTR [esi+0x1c]
6401ba6c:	call   0x64013956
6401ba71:	push   DWORD PTR [esi+0x38]
6401ba74:	call   0x64013956
6401ba79:	push   DWORD PTR [esi+0x3c]
6401ba7c:	call   0x64013956
6401ba81:	add    esp,0x40
6401ba84:	push   DWORD PTR [esi+0x40]
6401ba87:	call   0x64013956
6401ba8c:	push   DWORD PTR [esi+0x44]
6401ba8f:	call   0x64013956
6401ba94:	push   DWORD PTR [esi+0x48]
6401ba97:	call   0x64013956
6401ba9c:	push   DWORD PTR [esi+0x4c]
6401ba9f:	call   0x64013956
6401baa4:	push   DWORD PTR [esi+0x50]
6401baa7:	call   0x64013956
6401baac:	push   DWORD PTR [esi+0x54]
6401baaf:	call   0x64013956
6401bab4:	push   DWORD PTR [esi+0x58]
6401bab7:	call   0x64013956
6401babc:	push   DWORD PTR [esi+0x5c]
6401babf:	call   0x64013956
6401bac4:	push   DWORD PTR [esi+0x60]
6401bac7:	call   0x64013956
6401bacc:	push   DWORD PTR [esi+0x64]
6401bacf:	call   0x64013956
6401bad4:	push   DWORD PTR [esi+0x68]
6401bad7:	call   0x64013956
6401badc:	push   DWORD PTR [esi+0x6c]
6401badf:	call   0x64013956
6401bae4:	push   DWORD PTR [esi+0x70]
6401bae7:	call   0x64013956
6401baec:	push   DWORD PTR [esi+0x74]
6401baef:	call   0x64013956
6401baf4:	push   DWORD PTR [esi+0x78]
6401baf7:	call   0x64013956
6401bafc:	push   DWORD PTR [esi+0x7c]
6401baff:	call   0x64013956
6401bb04:	add    esp,0x40
6401bb07:	push   DWORD PTR [esi+0x80]
6401bb0d:	call   0x64013956
6401bb12:	push   DWORD PTR [esi+0x84]
6401bb18:	call   0x64013956
6401bb1d:	push   DWORD PTR [esi+0x88]
6401bb23:	call   0x64013956
6401bb28:	push   DWORD PTR [esi+0x8c]
6401bb2e:	call   0x64013956
6401bb33:	push   DWORD PTR [esi+0x90]
6401bb39:	call   0x64013956
6401bb3e:	push   DWORD PTR [esi+0x94]
6401bb44:	call   0x64013956
6401bb49:	push   DWORD PTR [esi+0x98]
6401bb4f:	call   0x64013956
6401bb54:	push   DWORD PTR [esi+0x9c]
6401bb5a:	call   0x64013956
6401bb5f:	push   DWORD PTR [esi+0xa0]
6401bb65:	call   0x64013956
6401bb6a:	push   DWORD PTR [esi+0xa4]
6401bb70:	call   0x64013956
6401bb75:	push   DWORD PTR [esi+0xa8]
6401bb7b:	call   0x64013956
6401bb80:	add    esp,0x2c
6401bb83:	pop    esi
6401bb84:	ret    
6401bb85:	push   esi
6401bb86:	mov    esi,DWORD PTR [esp+0x8]
6401bb8a:	test   esi,esi
6401bb8c:	je     0x6401bbc3
6401bb8e:	mov    eax,DWORD PTR [esi]
6401bb90:	cmp    eax,DWORD PTR ds:0x6402dc40
6401bb96:	je     0x6401bb9f
6401bb98:	push   eax
6401bb99:	call   0x64013956
6401bb9e:	pop    ecx
6401bb9f:	mov    eax,DWORD PTR [esi+0x4]
6401bba2:	cmp    eax,DWORD PTR ds:0x6402dc44
6401bba8:	je     0x6401bbb1
6401bbaa:	push   eax
6401bbab:	call   0x64013956
6401bbb0:	pop    ecx
6401bbb1:	mov    esi,DWORD PTR [esi+0x8]
6401bbb4:	cmp    esi,DWORD PTR ds:0x6402dc48
6401bbba:	je     0x6401bbc3
6401bbbc:	push   esi
6401bbbd:	call   0x64013956
6401bbc2:	pop    ecx
6401bbc3:	pop    esi
6401bbc4:	ret    
6401bbc5:	push   esi
6401bbc6:	mov    esi,DWORD PTR [esp+0x8]
6401bbca:	test   esi,esi
6401bbcc:	je     0x6401bc4c
6401bbce:	mov    eax,DWORD PTR [esi+0xc]
6401bbd1:	cmp    eax,DWORD PTR ds:0x6402dc4c
6401bbd7:	je     0x6401bbe0
6401bbd9:	push   eax
6401bbda:	call   0x64013956
6401bbdf:	pop    ecx
6401bbe0:	mov    eax,DWORD PTR [esi+0x10]
6401bbe3:	cmp    eax,DWORD PTR ds:0x6402dc50
6401bbe9:	je     0x6401bbf2
6401bbeb:	push   eax
6401bbec:	call   0x64013956
6401bbf1:	pop    ecx
6401bbf2:	mov    eax,DWORD PTR [esi+0x14]
6401bbf5:	cmp    eax,DWORD PTR ds:0x6402dc54
6401bbfb:	je     0x6401bc04
6401bbfd:	push   eax
6401bbfe:	call   0x64013956
6401bc03:	pop    ecx
6401bc04:	mov    eax,DWORD PTR [esi+0x18]
6401bc07:	cmp    eax,DWORD PTR ds:0x6402dc58
6401bc0d:	je     0x6401bc16
6401bc0f:	push   eax
6401bc10:	call   0x64013956
6401bc15:	pop    ecx
6401bc16:	mov    eax,DWORD PTR [esi+0x1c]
6401bc19:	cmp    eax,DWORD PTR ds:0x6402dc5c
6401bc1f:	je     0x6401bc28
6401bc21:	push   eax
6401bc22:	call   0x64013956
6401bc27:	pop    ecx
6401bc28:	mov    eax,DWORD PTR [esi+0x20]
6401bc2b:	cmp    eax,DWORD PTR ds:0x6402dc60
6401bc31:	je     0x6401bc3a
6401bc33:	push   eax
6401bc34:	call   0x64013956
6401bc39:	pop    ecx
6401bc3a:	mov    esi,DWORD PTR [esi+0x24]
6401bc3d:	cmp    esi,DWORD PTR ds:0x6402dc64
6401bc43:	je     0x6401bc4c
6401bc45:	push   esi
6401bc46:	call   0x64013956
6401bc4b:	pop    ecx
6401bc4c:	pop    esi
6401bc4d:	ret    
6401bc4e:	mov    eax,DWORD PTR [esp+0x4]
6401bc52:	push   ebx
6401bc53:	xor    ebx,ebx
6401bc55:	cmp    eax,ebx
6401bc57:	push   esi
6401bc58:	push   edi
6401bc59:	je     0x6401bc63
6401bc5b:	mov    edi,DWORD PTR [esp+0x14]
6401bc5f:	cmp    edi,ebx
6401bc61:	ja     0x6401bc7e
6401bc63:	call   0x64014880
6401bc68:	push   0x16
6401bc6a:	pop    esi
6401bc6b:	mov    DWORD PTR [eax],esi
6401bc6d:	push   ebx
6401bc6e:	push   ebx
6401bc6f:	push   ebx
6401bc70:	push   ebx
6401bc71:	push   ebx
6401bc72:	call   0x640125f4
6401bc77:	add    esp,0x14
6401bc7a:	mov    eax,esi
6401bc7c:	jmp    0x6401bcbb
6401bc7e:	mov    esi,DWORD PTR [esp+0x18]
6401bc82:	cmp    esi,ebx
6401bc84:	jne    0x6401bc8a
6401bc86:	mov    BYTE PTR [eax],bl
6401bc88:	jmp    0x6401bc63
6401bc8a:	mov    edx,eax
6401bc8c:	cmp    BYTE PTR [edx],bl
6401bc8e:	je     0x6401bc94
6401bc90:	inc    edx
6401bc91:	dec    edi
6401bc92:	jne    0x6401bc8c
6401bc94:	cmp    edi,ebx
6401bc96:	je     0x6401bc86
6401bc98:	mov    cl,BYTE PTR [esi]
6401bc9a:	mov    BYTE PTR [edx],cl
6401bc9c:	inc    edx
6401bc9d:	inc    esi
6401bc9e:	cmp    cl,bl
6401bca0:	je     0x6401bca5
6401bca2:	dec    edi
6401bca3:	jne    0x6401bc98
6401bca5:	cmp    edi,ebx
6401bca7:	jne    0x6401bcb9
6401bca9:	mov    BYTE PTR [eax],bl
6401bcab:	call   0x64014880
6401bcb0:	push   0x22
6401bcb2:	pop    ecx
6401bcb3:	mov    DWORD PTR [eax],ecx
6401bcb5:	mov    esi,ecx
6401bcb7:	jmp    0x6401bc6d
6401bcb9:	xor    eax,eax
6401bcbb:	pop    edi
6401bcbc:	pop    esi
6401bcbd:	pop    ebx
6401bcbe:	ret    
6401bcbf:	int3   
6401bcc0:	push   ebp
6401bcc1:	mov    ebp,esp
6401bcc3:	push   esi
6401bcc4:	xor    eax,eax
6401bcc6:	push   eax
6401bcc7:	push   eax
6401bcc8:	push   eax
6401bcc9:	push   eax
6401bcca:	push   eax
6401bccb:	push   eax
6401bccc:	push   eax
6401bccd:	push   eax
6401bcce:	mov    edx,DWORD PTR [ebp+0xc]
6401bcd1:	lea    ecx,[ecx+0x0]
6401bcd4:	mov    al,BYTE PTR [edx]
6401bcd6:	or     al,al
6401bcd8:	je     0x6401bce3
6401bcda:	add    edx,0x1
6401bcdd:	bts    DWORD PTR [esp],eax
6401bce1:	jmp    0x6401bcd4
6401bce3:	mov    esi,DWORD PTR [ebp+0x8]
6401bce6:	or     ecx,0xffffffff
6401bce9:	lea    ecx,[ecx+0x0]
6401bcec:	add    ecx,0x1
6401bcef:	mov    al,BYTE PTR [esi]
6401bcf1:	or     al,al
6401bcf3:	je     0x6401bcfe
6401bcf5:	add    esi,0x1
6401bcf8:	bt     DWORD PTR [esp],eax
6401bcfc:	jae    0x6401bcec
6401bcfe:	mov    eax,ecx
6401bd00:	add    esp,0x20
6401bd03:	pop    esi
6401bd04:	leave  
6401bd05:	ret    
6401bd06:	push   ebp
6401bd07:	mov    ebp,esp
6401bd09:	push   ebx
6401bd0a:	push   esi
6401bd0b:	mov    esi,DWORD PTR [ebp+0x8]
6401bd0e:	xor    ebx,ebx
6401bd10:	cmp    DWORD PTR [ebp+0x14],ebx
6401bd13:	push   edi
6401bd14:	jne    0x6401bd26
6401bd16:	cmp    esi,ebx
6401bd18:	jne    0x6401bd2a
6401bd1a:	cmp    DWORD PTR [ebp+0xc],ebx
6401bd1d:	jne    0x6401bd31
6401bd1f:	xor    eax,eax
6401bd21:	pop    edi
6401bd22:	pop    esi
6401bd23:	pop    ebx
6401bd24:	pop    ebp
6401bd25:	ret    
6401bd26:	cmp    esi,ebx
6401bd28:	je     0x6401bd31
6401bd2a:	mov    edi,DWORD PTR [ebp+0xc]
6401bd2d:	cmp    edi,ebx
6401bd2f:	ja     0x6401bd4c
6401bd31:	call   0x64014880
6401bd36:	push   0x16
6401bd38:	pop    esi
6401bd39:	mov    DWORD PTR [eax],esi
6401bd3b:	push   ebx
6401bd3c:	push   ebx
6401bd3d:	push   ebx
6401bd3e:	push   ebx
6401bd3f:	push   ebx
6401bd40:	call   0x640125f4
6401bd45:	add    esp,0x14
6401bd48:	mov    eax,esi
6401bd4a:	jmp    0x6401bd21
6401bd4c:	cmp    DWORD PTR [ebp+0x14],ebx
6401bd4f:	jne    0x6401bd55
6401bd51:	mov    BYTE PTR [esi],bl
6401bd53:	jmp    0x6401bd1f
6401bd55:	mov    edx,DWORD PTR [ebp+0x10]
6401bd58:	cmp    edx,ebx
6401bd5a:	jne    0x6401bd60
6401bd5c:	mov    BYTE PTR [esi],bl
6401bd5e:	jmp    0x6401bd31
6401bd60:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401bd64:	mov    eax,esi
6401bd66:	jne    0x6401bd77
6401bd68:	mov    cl,BYTE PTR [edx]
6401bd6a:	mov    BYTE PTR [eax],cl
6401bd6c:	inc    eax
6401bd6d:	inc    edx
6401bd6e:	cmp    cl,bl
6401bd70:	je     0x6401bd90
6401bd72:	dec    edi
6401bd73:	jne    0x6401bd68
6401bd75:	jmp    0x6401bd90
6401bd77:	mov    cl,BYTE PTR [edx]
6401bd79:	mov    BYTE PTR [eax],cl
6401bd7b:	inc    eax
6401bd7c:	inc    edx
6401bd7d:	cmp    cl,bl
6401bd7f:	je     0x6401bd89
6401bd81:	dec    edi
6401bd82:	je     0x6401bd89
6401bd84:	dec    DWORD PTR [ebp+0x14]
6401bd87:	jne    0x6401bd77
6401bd89:	cmp    DWORD PTR [ebp+0x14],ebx
6401bd8c:	jne    0x6401bd90
6401bd8e:	mov    BYTE PTR [eax],bl
6401bd90:	cmp    edi,ebx
6401bd92:	jne    0x6401bd1f
6401bd94:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401bd98:	jne    0x6401bda9
6401bd9a:	mov    eax,DWORD PTR [ebp+0xc]
6401bd9d:	push   0x50
6401bd9f:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401bda3:	pop    eax
6401bda4:	jmp    0x6401bd21
6401bda9:	mov    BYTE PTR [esi],bl
6401bdab:	call   0x64014880
6401bdb0:	push   0x22
6401bdb2:	pop    ecx
6401bdb3:	mov    DWORD PTR [eax],ecx
6401bdb5:	mov    esi,ecx
6401bdb7:	jmp    0x6401bd3b
6401bdb9:	int3   
6401bdba:	int3   
6401bdbb:	int3   
6401bdbc:	int3   
6401bdbd:	int3   
6401bdbe:	int3   
6401bdbf:	int3   
6401bdc0:	push   ebp
6401bdc1:	mov    ebp,esp
6401bdc3:	push   esi
6401bdc4:	xor    eax,eax
6401bdc6:	push   eax
6401bdc7:	push   eax
6401bdc8:	push   eax
6401bdc9:	push   eax
6401bdca:	push   eax
6401bdcb:	push   eax
6401bdcc:	push   eax
6401bdcd:	push   eax
6401bdce:	mov    edx,DWORD PTR [ebp+0xc]
6401bdd1:	lea    ecx,[ecx+0x0]
6401bdd4:	mov    al,BYTE PTR [edx]
6401bdd6:	or     al,al
6401bdd8:	je     0x6401bde3
6401bdda:	add    edx,0x1
6401bddd:	bts    DWORD PTR [esp],eax
6401bde1:	jmp    0x6401bdd4
6401bde3:	mov    esi,DWORD PTR [ebp+0x8]
6401bde6:	mov    edi,edi
6401bde8:	mov    al,BYTE PTR [esi]
6401bdea:	or     al,al
6401bdec:	je     0x6401bdfa
6401bdee:	add    esi,0x1
6401bdf1:	bt     DWORD PTR [esp],eax
6401bdf5:	jae    0x6401bde8
6401bdf7:	lea    eax,[esi-0x1]
6401bdfa:	add    esp,0x20
6401bdfd:	pop    esi
6401bdfe:	leave  
6401bdff:	ret    
6401be00:	push   ebp
6401be01:	mov    ebp,esp
6401be03:	push   ecx
6401be04:	push   ecx
6401be05:	mov    eax,DWORD PTR [ebp+0xc]
6401be08:	push   esi
6401be09:	mov    esi,DWORD PTR [ebp+0x8]
6401be0c:	mov    DWORD PTR [ebp-0x8],eax
6401be0f:	mov    eax,DWORD PTR [ebp+0x10]
6401be12:	push   edi
6401be13:	push   esi
6401be14:	mov    DWORD PTR [ebp-0x4],eax
6401be17:	call   0x6401dd9f
6401be1c:	or     edi,0xffffffff
6401be1f:	cmp    eax,edi
6401be21:	pop    ecx
6401be22:	jne    0x6401be35
6401be24:	call   0x64014880
6401be29:	mov    DWORD PTR [eax],0x9
6401be2f:	mov    eax,edi
6401be31:	mov    edx,edi
6401be33:	jmp    0x6401be7f
6401be35:	push   DWORD PTR [ebp+0x14]
6401be38:	lea    ecx,[ebp-0x4]
6401be3b:	push   ecx
6401be3c:	push   DWORD PTR [ebp-0x8]
6401be3f:	push   eax
6401be40:	call   DWORD PTR ds:0x640250e0
6401be46:	cmp    eax,edi
6401be48:	mov    DWORD PTR [ebp-0x8],eax
6401be4b:	jne    0x6401be60
6401be4d:	call   DWORD PTR ds:0x64025044
6401be53:	test   eax,eax
6401be55:	je     0x6401be60
6401be57:	push   eax
6401be58:	call   0x640148a6
6401be5d:	pop    ecx
6401be5e:	jmp    0x6401be2f
6401be60:	mov    eax,esi
6401be62:	sar    eax,0x5
6401be65:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401be6c:	and    esi,0x1f
6401be6f:	shl    esi,0x6
6401be72:	lea    eax,[eax+esi*1+0x4]
6401be76:	and    BYTE PTR [eax],0xfd
6401be79:	mov    eax,DWORD PTR [ebp-0x8]
6401be7c:	mov    edx,DWORD PTR [ebp-0x4]
6401be7f:	pop    edi
6401be80:	pop    esi
6401be81:	leave  
6401be82:	ret    
6401be83:	push   0x14
6401be85:	push   0x6402a918
6401be8a:	call   0x64014080
6401be8f:	or     esi,0xffffffff
6401be92:	mov    DWORD PTR [ebp-0x24],esi
6401be95:	mov    DWORD PTR [ebp-0x20],esi
6401be98:	mov    eax,DWORD PTR [ebp+0x8]
6401be9b:	cmp    eax,0xfffffffe
6401be9e:	jne    0x6401bebc
6401bea0:	call   0x64014893
6401bea5:	and    DWORD PTR [eax],0x0
6401bea8:	call   0x64014880
6401bead:	mov    DWORD PTR [eax],0x9
6401beb3:	mov    eax,esi
6401beb5:	mov    edx,esi
6401beb7:	jmp    0x6401bf8c
6401bebc:	xor    edi,edi
6401bebe:	cmp    eax,edi
6401bec0:	jl     0x6401beca
6401bec2:	cmp    eax,DWORD PTR ds:0x640324e0
6401bec8:	jb     0x6401beeb
6401beca:	call   0x64014893
6401becf:	mov    DWORD PTR [eax],edi
6401bed1:	call   0x64014880
6401bed6:	mov    DWORD PTR [eax],0x9
6401bedc:	push   edi
6401bedd:	push   edi
6401bede:	push   edi
6401bedf:	push   edi
6401bee0:	push   edi
6401bee1:	call   0x640125f4
6401bee6:	add    esp,0x14
6401bee9:	jmp    0x6401beb3
6401beeb:	mov    ecx,eax
6401beed:	sar    ecx,0x5
6401bef0:	lea    ebx,[ecx*4+0x64032500]
6401bef7:	mov    esi,eax
6401bef9:	and    esi,0x1f
6401befc:	shl    esi,0x6
6401beff:	mov    ecx,DWORD PTR [ebx]
6401bf01:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401bf06:	and    ecx,0x1
6401bf09:	jne    0x6401bf31
6401bf0b:	call   0x64014893
6401bf10:	mov    DWORD PTR [eax],edi
6401bf12:	call   0x64014880
6401bf17:	mov    DWORD PTR [eax],0x9
6401bf1d:	push   edi
6401bf1e:	push   edi
6401bf1f:	push   edi
6401bf20:	push   edi
6401bf21:	push   edi
6401bf22:	call   0x640125f4
6401bf27:	add    esp,0x14
6401bf2a:	or     edx,0xffffffff
6401bf2d:	mov    eax,edx
6401bf2f:	jmp    0x6401bf8c
6401bf31:	push   eax
6401bf32:	call   0x6401de10
6401bf37:	pop    ecx
6401bf38:	mov    DWORD PTR [ebp-0x4],edi
6401bf3b:	mov    eax,DWORD PTR [ebx]
6401bf3d:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401bf42:	je     0x6401bf60
6401bf44:	push   DWORD PTR [ebp+0x14]
6401bf47:	push   DWORD PTR [ebp+0x10]
6401bf4a:	push   DWORD PTR [ebp+0xc]
6401bf4d:	push   DWORD PTR [ebp+0x8]
6401bf50:	call   0x6401be00
6401bf55:	add    esp,0x10
6401bf58:	mov    DWORD PTR [ebp-0x24],eax
6401bf5b:	mov    DWORD PTR [ebp-0x20],edx
6401bf5e:	jmp    0x6401bf7a
6401bf60:	call   0x64014880
6401bf65:	mov    DWORD PTR [eax],0x9
6401bf6b:	call   0x64014893
6401bf70:	mov    DWORD PTR [eax],edi
6401bf72:	or     DWORD PTR [ebp-0x24],0xffffffff
6401bf76:	or     DWORD PTR [ebp-0x20],0xffffffff
6401bf7a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401bf81:	call   0x6401bf92
6401bf86:	mov    eax,DWORD PTR [ebp-0x24]
6401bf89:	mov    edx,DWORD PTR [ebp-0x20]
6401bf8c:	call   0x640140c5
6401bf91:	ret    
6401bf92:	push   DWORD PTR [ebp+0x8]
6401bf95:	call   0x6401deb0
6401bf9a:	pop    ecx
6401bf9b:	ret    
6401bf9c:	push   ebp
6401bf9d:	lea    ebp,[esp-0x514]
6401bfa4:	sub    esp,0x590
6401bfaa:	mov    eax,ds:0x6402d09c
6401bfaf:	xor    eax,ebp
6401bfb1:	mov    DWORD PTR [ebp+0x510],eax
6401bfb7:	mov    eax,DWORD PTR [ebp+0x520]
6401bfbd:	push   esi
6401bfbe:	xor    esi,esi
6401bfc0:	cmp    DWORD PTR [ebp+0x524],esi
6401bfc6:	mov    DWORD PTR [ebp-0x64],eax
6401bfc9:	mov    DWORD PTR [ebp-0x60],esi
6401bfcc:	mov    DWORD PTR [ebp-0x68],esi
6401bfcf:	jne    0x6401bfd8
6401bfd1:	xor    eax,eax
6401bfd3:	jmp    0x6401c5a8
6401bfd8:	cmp    eax,esi
6401bfda:	jne    0x6401c003
6401bfdc:	call   0x64014893
6401bfe1:	mov    DWORD PTR [eax],esi
6401bfe3:	call   0x64014880
6401bfe8:	push   esi
6401bfe9:	push   esi
6401bfea:	push   esi
6401bfeb:	push   esi
6401bfec:	push   esi
6401bfed:	mov    DWORD PTR [eax],0x16
6401bff3:	call   0x640125f4
6401bff8:	add    esp,0x14
6401bffb:	or     eax,0xffffffff
6401bffe:	jmp    0x6401c5a8
6401c003:	push   ebx
6401c004:	push   edi
6401c005:	mov    edi,DWORD PTR [ebp+0x51c]
6401c00b:	mov    eax,edi
6401c00d:	sar    eax,0x5
6401c010:	lea    esi,[eax*4+0x64032500]
6401c017:	mov    eax,DWORD PTR [esi]
6401c019:	and    edi,0x1f
6401c01c:	shl    edi,0x6
6401c01f:	add    eax,edi
6401c021:	mov    bl,BYTE PTR [eax+0x24]
6401c024:	add    bl,bl
6401c026:	sar    bl,1
6401c028:	cmp    bl,0x2
6401c02b:	mov    DWORD PTR [ebp-0x70],esi
6401c02e:	mov    BYTE PTR [ebp-0x71],bl
6401c031:	je     0x6401c038
6401c033:	cmp    bl,0x1
6401c036:	jne    0x6401c06b
6401c038:	mov    ecx,DWORD PTR [ebp+0x524]
6401c03e:	not    ecx
6401c040:	test   cl,0x1
6401c043:	jne    0x6401c06b
6401c045:	call   0x64014893
6401c04a:	xor    esi,esi
6401c04c:	mov    DWORD PTR [eax],esi
6401c04e:	call   0x64014880
6401c053:	push   esi
6401c054:	push   esi
6401c055:	push   esi
6401c056:	push   esi
6401c057:	push   esi
6401c058:	mov    DWORD PTR [eax],0x16
6401c05e:	call   0x640125f4
6401c063:	add    esp,0x14
6401c066:	jmp    0x6401c59b
6401c06b:	test   BYTE PTR [eax+0x4],0x20
6401c06f:	je     0x6401c085
6401c071:	push   0x2
6401c073:	push   0x0
6401c075:	push   0x0
6401c077:	push   DWORD PTR [ebp+0x51c]
6401c07d:	call   0x6401be00
6401c082:	add    esp,0x10
6401c085:	push   DWORD PTR [ebp+0x51c]
6401c08b:	call   0x6401c6de
6401c090:	test   eax,eax
6401c092:	pop    ecx
6401c093:	je     0x6401c2d2
6401c099:	mov    eax,DWORD PTR [esi]
6401c09b:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401c0a0:	je     0x6401c2d2
6401c0a6:	call   0x64014bcb
6401c0ab:	mov    eax,DWORD PTR [eax+0x6c]
6401c0ae:	xor    ecx,ecx
6401c0b0:	cmp    DWORD PTR [eax+0x14],ecx
6401c0b3:	lea    eax,[ebp-0x7c]
6401c0b6:	sete   cl
6401c0b9:	push   eax
6401c0ba:	mov    eax,DWORD PTR [esi]
6401c0bc:	push   DWORD PTR [edi+eax*1]
6401c0bf:	mov    DWORD PTR [ebp-0x78],ecx
6401c0c2:	call   DWORD PTR ds:0x640250d8
6401c0c8:	test   eax,eax
6401c0ca:	je     0x6401c2d2
6401c0d0:	xor    ecx,ecx
6401c0d2:	cmp    DWORD PTR [ebp-0x78],ecx
6401c0d5:	je     0x6401c0df
6401c0d7:	test   bl,bl
6401c0d9:	je     0x6401c2d4
6401c0df:	call   DWORD PTR ds:0x640250dc
6401c0e5:	mov    ebx,DWORD PTR [ebp-0x64]
6401c0e8:	mov    DWORD PTR [ebp-0x7c],eax
6401c0eb:	xor    eax,eax
6401c0ed:	cmp    DWORD PTR [ebp+0x524],eax
6401c0f3:	mov    DWORD PTR [ebp-0x5c],eax
6401c0f6:	jbe    0x6401c543
6401c0fc:	mov    DWORD PTR [ebp-0x54],eax
6401c0ff:	mov    al,BYTE PTR [ebp-0x71]
6401c102:	test   al,al
6401c104:	jne    0x6401c247
6401c10a:	mov    cl,BYTE PTR [ebx]
6401c10c:	mov    esi,DWORD PTR [ebp-0x70]
6401c10f:	xor    eax,eax
6401c111:	cmp    cl,0xa
6401c114:	sete   al
6401c117:	mov    DWORD PTR [ebp-0x78],eax
6401c11a:	mov    eax,DWORD PTR [esi]
6401c11c:	add    eax,edi
6401c11e:	cmp    DWORD PTR [eax+0x38],0x0
6401c122:	je     0x6401c142
6401c124:	mov    dl,BYTE PTR [eax+0x34]
6401c127:	mov    BYTE PTR [ebp+0x508],dl
6401c12d:	mov    BYTE PTR [ebp+0x509],cl
6401c133:	and    DWORD PTR [eax+0x38],0x0
6401c137:	push   0x2
6401c139:	lea    eax,[ebp+0x508]
6401c13f:	push   eax
6401c140:	jmp    0x6401c187
6401c142:	movsx  eax,cl
6401c145:	push   eax
6401c146:	call   0x64019e40
6401c14b:	test   eax,eax
6401c14d:	pop    ecx
6401c14e:	je     0x6401c184
6401c150:	mov    ecx,DWORD PTR [ebp-0x64]
6401c153:	sub    ecx,ebx
6401c155:	add    ecx,DWORD PTR [ebp+0x524]
6401c15b:	xor    eax,eax
6401c15d:	inc    eax
6401c15e:	cmp    ecx,eax
6401c160:	jbe    0x6401c2bc
6401c166:	push   0x2
6401c168:	lea    eax,[ebp-0x58]
6401c16b:	push   ebx
6401c16c:	push   eax
6401c16d:	call   0x6401cc11
6401c172:	add    esp,0xc
6401c175:	cmp    eax,0xffffffff
6401c178:	je     0x6401c53d
6401c17e:	inc    ebx
6401c17f:	inc    DWORD PTR [ebp-0x54]
6401c182:	jmp    0x6401c19c
6401c184:	push   0x1
6401c186:	push   ebx
6401c187:	lea    eax,[ebp-0x58]
6401c18a:	push   eax
6401c18b:	call   0x6401cc11
6401c190:	add    esp,0xc
6401c193:	cmp    eax,0xffffffff
6401c196:	je     0x6401c53d
6401c19c:	xor    eax,eax
6401c19e:	push   eax
6401c19f:	push   eax
6401c1a0:	push   0x5
6401c1a2:	lea    ecx,[ebp+0x508]
6401c1a8:	push   ecx
6401c1a9:	push   0x1
6401c1ab:	lea    ecx,[ebp-0x58]
6401c1ae:	push   ecx
6401c1af:	push   eax
6401c1b0:	push   DWORD PTR [ebp-0x7c]
6401c1b3:	inc    ebx
6401c1b4:	inc    DWORD PTR [ebp-0x54]
6401c1b7:	call   DWORD PTR ds:0x64025028
6401c1bd:	mov    esi,eax
6401c1bf:	test   esi,esi
6401c1c1:	je     0x6401c53d
6401c1c7:	push   0x0
6401c1c9:	lea    eax,[ebp-0x5c]
6401c1cc:	push   eax
6401c1cd:	push   esi
6401c1ce:	lea    eax,[ebp+0x508]
6401c1d4:	push   eax
6401c1d5:	mov    eax,DWORD PTR [ebp-0x70]
6401c1d8:	mov    eax,DWORD PTR [eax]
6401c1da:	push   DWORD PTR [edi+eax*1]
6401c1dd:	call   DWORD PTR ds:0x64025088
6401c1e3:	test   eax,eax
6401c1e5:	je     0x6401c534
6401c1eb:	mov    eax,DWORD PTR [ebp-0x54]
6401c1ee:	mov    ecx,DWORD PTR [ebp-0x68]
6401c1f1:	add    eax,ecx
6401c1f3:	cmp    DWORD PTR [ebp-0x5c],esi
6401c1f6:	mov    DWORD PTR [ebp-0x60],eax
6401c1f9:	jl     0x6401c53d
6401c1ff:	cmp    DWORD PTR [ebp-0x78],0x0
6401c203:	je     0x6401c2a8
6401c209:	push   0x0
6401c20b:	lea    eax,[ebp-0x5c]
6401c20e:	push   eax
6401c20f:	push   0x1
6401c211:	lea    eax,[ebp+0x508]
6401c217:	push   eax
6401c218:	mov    eax,DWORD PTR [ebp-0x70]
6401c21b:	mov    eax,DWORD PTR [eax]
6401c21d:	mov    BYTE PTR [ebp+0x508],0xd
6401c224:	push   DWORD PTR [edi+eax*1]
6401c227:	call   DWORD PTR ds:0x64025088
6401c22d:	test   eax,eax
6401c22f:	je     0x6401c534
6401c235:	cmp    DWORD PTR [ebp-0x5c],0x1
6401c239:	jl     0x6401c53d
6401c23f:	inc    DWORD PTR [ebp-0x68]
6401c242:	inc    DWORD PTR [ebp-0x60]
6401c245:	jmp    0x6401c2a8
6401c247:	cmp    al,0x1
6401c249:	je     0x6401c24f
6401c24b:	cmp    al,0x2
6401c24d:	jne    0x6401c267
6401c24f:	movzx  esi,WORD PTR [ebx]
6401c252:	xor    ecx,ecx
6401c254:	cmp    si,0xa
6401c258:	sete   cl
6401c25b:	inc    ebx
6401c25c:	inc    ebx
6401c25d:	add    DWORD PTR [ebp-0x54],0x2
6401c261:	mov    DWORD PTR [ebp-0x58],esi
6401c264:	mov    DWORD PTR [ebp-0x78],ecx
6401c267:	cmp    al,0x1
6401c269:	je     0x6401c26f
6401c26b:	cmp    al,0x2
6401c26d:	jne    0x6401c2a8
6401c26f:	push   DWORD PTR [ebp-0x58]
6401c272:	call   0x6401ded2
6401c277:	cmp    ax,WORD PTR [ebp-0x58]
6401c27b:	pop    ecx
6401c27c:	jne    0x6401c534
6401c282:	inc    DWORD PTR [ebp-0x60]
6401c285:	cmp    DWORD PTR [ebp-0x78],0x0
6401c289:	je     0x6401c2a8
6401c28b:	push   0xd
6401c28d:	pop    eax
6401c28e:	push   eax
6401c28f:	mov    DWORD PTR [ebp-0x58],eax
6401c292:	call   0x6401ded2
6401c297:	cmp    ax,WORD PTR [ebp-0x58]
6401c29b:	pop    ecx
6401c29c:	jne    0x6401c534
6401c2a2:	inc    DWORD PTR [ebp-0x60]
6401c2a5:	inc    DWORD PTR [ebp-0x68]
6401c2a8:	mov    eax,DWORD PTR [ebp+0x524]
6401c2ae:	cmp    DWORD PTR [ebp-0x54],eax
6401c2b1:	jb     0x6401c0ff
6401c2b7:	jmp    0x6401c53d
6401c2bc:	mov    ecx,DWORD PTR [esi]
6401c2be:	mov    dl,BYTE PTR [ebx]
6401c2c0:	inc    DWORD PTR [ebp-0x60]
6401c2c3:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401c2c7:	mov    ecx,DWORD PTR [esi]
6401c2c9:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401c2cd:	jmp    0x6401c53d
6401c2d2:	xor    ecx,ecx
6401c2d4:	mov    eax,DWORD PTR [esi]
6401c2d6:	add    eax,edi
6401c2d8:	test   BYTE PTR [eax+0x4],0x80
6401c2dc:	je     0x6401c50d
6401c2e2:	test   bl,bl
6401c2e4:	mov    eax,DWORD PTR [ebp-0x64]
6401c2e7:	mov    DWORD PTR [ebp-0x58],ecx
6401c2ea:	jne    0x6401c386
6401c2f0:	cmp    DWORD PTR [ebp+0x524],ecx
6401c2f6:	mov    DWORD PTR [ebp-0x5c],eax
6401c2f9:	jbe    0x6401c573
6401c2ff:	jmp    0x6401c304
6401c301:	mov    esi,DWORD PTR [ebp-0x70]
6401c304:	mov    ecx,DWORD PTR [ebp-0x5c]
6401c307:	and    DWORD PTR [ebp-0x54],0x0
6401c30b:	sub    ecx,DWORD PTR [ebp-0x64]
6401c30e:	lea    eax,[ebp-0x50]
6401c311:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c317:	jae    0x6401c340
6401c319:	mov    edx,DWORD PTR [ebp-0x5c]
6401c31c:	inc    DWORD PTR [ebp-0x5c]
6401c31f:	mov    dl,BYTE PTR [edx]
6401c321:	inc    ecx
6401c322:	cmp    dl,0xa
6401c325:	jne    0x6401c331
6401c327:	inc    DWORD PTR [ebp-0x68]
6401c32a:	mov    BYTE PTR [eax],0xd
6401c32d:	inc    eax
6401c32e:	inc    DWORD PTR [ebp-0x54]
6401c331:	mov    BYTE PTR [eax],dl
6401c333:	inc    eax
6401c334:	inc    DWORD PTR [ebp-0x54]
6401c337:	cmp    DWORD PTR [ebp-0x54],0x400
6401c33e:	jb     0x6401c311
6401c340:	mov    ebx,eax
6401c342:	lea    eax,[ebp-0x50]
6401c345:	sub    ebx,eax
6401c347:	push   0x0
6401c349:	lea    eax,[ebp-0x6c]
6401c34c:	push   eax
6401c34d:	push   ebx
6401c34e:	lea    eax,[ebp-0x50]
6401c351:	push   eax
6401c352:	mov    eax,DWORD PTR [esi]
6401c354:	push   DWORD PTR [edi+eax*1]
6401c357:	call   DWORD PTR ds:0x64025088
6401c35d:	test   eax,eax
6401c35f:	je     0x6401c534
6401c365:	mov    eax,DWORD PTR [ebp-0x6c]
6401c368:	add    DWORD PTR [ebp-0x60],eax
6401c36b:	cmp    eax,ebx
6401c36d:	jl     0x6401c53d
6401c373:	mov    eax,DWORD PTR [ebp-0x5c]
6401c376:	sub    eax,DWORD PTR [ebp-0x64]
6401c379:	cmp    eax,DWORD PTR [ebp+0x524]
6401c37f:	jb     0x6401c301
6401c381:	jmp    0x6401c53d
6401c386:	cmp    bl,0x2
6401c389:	mov    DWORD PTR [ebp-0x54],eax
6401c38c:	jne    0x6401c435
6401c392:	cmp    DWORD PTR [ebp+0x524],ecx
6401c398:	jbe    0x6401c573
6401c39e:	jmp    0x6401c3a3
6401c3a0:	mov    esi,DWORD PTR [ebp-0x70]
6401c3a3:	mov    ecx,DWORD PTR [ebp-0x54]
6401c3a6:	and    DWORD PTR [ebp-0x5c],0x0
6401c3aa:	sub    ecx,DWORD PTR [ebp-0x64]
6401c3ad:	lea    eax,[ebp-0x50]
6401c3b0:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c3b6:	jae    0x6401c3eb
6401c3b8:	mov    edx,DWORD PTR [ebp-0x54]
6401c3bb:	add    DWORD PTR [ebp-0x54],0x2
6401c3bf:	movzx  edx,WORD PTR [edx]
6401c3c2:	inc    ecx
6401c3c3:	inc    ecx
6401c3c4:	cmp    dx,0xa
6401c3c8:	jne    0x6401c3d9
6401c3ca:	add    DWORD PTR [ebp-0x68],0x2
6401c3ce:	mov    WORD PTR [eax],0xd
6401c3d3:	inc    eax
6401c3d4:	inc    eax
6401c3d5:	add    DWORD PTR [ebp-0x5c],0x2
6401c3d9:	add    DWORD PTR [ebp-0x5c],0x2
6401c3dd:	mov    WORD PTR [eax],dx
6401c3e0:	inc    eax
6401c3e1:	inc    eax
6401c3e2:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401c3e9:	jb     0x6401c3b0
6401c3eb:	mov    ebx,eax
6401c3ed:	lea    eax,[ebp-0x50]
6401c3f0:	sub    ebx,eax
6401c3f2:	push   0x0
6401c3f4:	lea    eax,[ebp-0x6c]
6401c3f7:	push   eax
6401c3f8:	push   ebx
6401c3f9:	lea    eax,[ebp-0x50]
6401c3fc:	push   eax
6401c3fd:	mov    eax,DWORD PTR [esi]
6401c3ff:	push   DWORD PTR [edi+eax*1]
6401c402:	call   DWORD PTR ds:0x64025088
6401c408:	test   eax,eax
6401c40a:	je     0x6401c534
6401c410:	mov    eax,DWORD PTR [ebp-0x6c]
6401c413:	add    DWORD PTR [ebp-0x60],eax
6401c416:	cmp    eax,ebx
6401c418:	jl     0x6401c53d
6401c41e:	mov    eax,DWORD PTR [ebp-0x54]
6401c421:	sub    eax,DWORD PTR [ebp-0x64]
6401c424:	cmp    eax,DWORD PTR [ebp+0x524]
6401c42a:	jb     0x6401c3a0
6401c430:	jmp    0x6401c53d
6401c435:	cmp    DWORD PTR [ebp+0x524],ecx
6401c43b:	jbe    0x6401c573
6401c441:	mov    ecx,DWORD PTR [ebp-0x54]
6401c444:	and    DWORD PTR [ebp-0x5c],0x0
6401c448:	sub    ecx,DWORD PTR [ebp-0x64]
6401c44b:	push   0x2
6401c44d:	lea    eax,[ebp+0x3b4]
6401c453:	pop    esi
6401c454:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c45a:	jae    0x6401c488
6401c45c:	mov    edx,DWORD PTR [ebp-0x54]
6401c45f:	movzx  edx,WORD PTR [edx]
6401c462:	add    DWORD PTR [ebp-0x54],esi
6401c465:	add    ecx,esi
6401c467:	cmp    dx,0xa
6401c46b:	jne    0x6401c477
6401c46d:	mov    WORD PTR [eax],0xd
6401c472:	add    eax,esi
6401c474:	add    DWORD PTR [ebp-0x5c],esi
6401c477:	add    DWORD PTR [ebp-0x5c],esi
6401c47a:	mov    WORD PTR [eax],dx
6401c47d:	add    eax,esi
6401c47f:	cmp    DWORD PTR [ebp-0x5c],0x152
6401c486:	jb     0x6401c454
6401c488:	xor    esi,esi
6401c48a:	push   esi
6401c48b:	push   esi
6401c48c:	push   0x2ab
6401c491:	lea    ecx,[ebp+0x104]
6401c497:	push   ecx
6401c498:	lea    ecx,[ebp+0x3b4]
6401c49e:	sub    eax,ecx
6401c4a0:	cdq    
6401c4a1:	sub    eax,edx
6401c4a3:	sar    eax,1
6401c4a5:	push   eax
6401c4a6:	mov    eax,ecx
6401c4a8:	push   eax
6401c4a9:	push   esi
6401c4aa:	push   0xfde9
6401c4af:	call   DWORD PTR ds:0x64025028
6401c4b5:	mov    ebx,eax
6401c4b7:	cmp    ebx,esi
6401c4b9:	je     0x6401c534
6401c4bb:	push   0x0
6401c4bd:	lea    eax,[ebp-0x6c]
6401c4c0:	push   eax
6401c4c1:	mov    eax,ebx
6401c4c3:	sub    eax,esi
6401c4c5:	push   eax
6401c4c6:	lea    eax,[ebp+esi*1+0x104]
6401c4cd:	push   eax
6401c4ce:	mov    eax,DWORD PTR [ebp-0x70]
6401c4d1:	mov    eax,DWORD PTR [eax]
6401c4d3:	push   DWORD PTR [edi+eax*1]
6401c4d6:	call   DWORD PTR ds:0x64025088
6401c4dc:	test   eax,eax
6401c4de:	je     0x6401c4e9
6401c4e0:	add    esi,DWORD PTR [ebp-0x6c]
6401c4e3:	cmp    ebx,esi
6401c4e5:	jg     0x6401c4bb
6401c4e7:	jmp    0x6401c4f2
6401c4e9:	call   DWORD PTR ds:0x64025044
6401c4ef:	mov    DWORD PTR [ebp-0x58],eax
6401c4f2:	cmp    ebx,esi
6401c4f4:	jg     0x6401c53d
6401c4f6:	mov    eax,DWORD PTR [ebp-0x54]
6401c4f9:	sub    eax,DWORD PTR [ebp-0x64]
6401c4fc:	cmp    eax,DWORD PTR [ebp+0x524]
6401c502:	mov    DWORD PTR [ebp-0x60],eax
6401c505:	jb     0x6401c441
6401c50b:	jmp    0x6401c53d
6401c50d:	push   0x0
6401c50f:	lea    ecx,[ebp-0x6c]
6401c512:	push   ecx
6401c513:	push   DWORD PTR [ebp+0x524]
6401c519:	push   DWORD PTR [ebp-0x64]
6401c51c:	push   DWORD PTR [eax]
6401c51e:	call   DWORD PTR ds:0x64025088
6401c524:	test   eax,eax
6401c526:	je     0x6401c534
6401c528:	mov    eax,DWORD PTR [ebp-0x6c]
6401c52b:	and    DWORD PTR [ebp-0x58],0x0
6401c52f:	mov    DWORD PTR [ebp-0x60],eax
6401c532:	jmp    0x6401c53d
6401c534:	call   DWORD PTR ds:0x64025044
6401c53a:	mov    DWORD PTR [ebp-0x58],eax
6401c53d:	cmp    DWORD PTR [ebp-0x60],0x0
6401c541:	jne    0x6401c5a0
6401c543:	cmp    DWORD PTR [ebp-0x58],0x0
6401c547:	je     0x6401c570
6401c549:	push   0x5
6401c54b:	pop    esi
6401c54c:	cmp    DWORD PTR [ebp-0x58],esi
6401c54f:	jne    0x6401c565
6401c551:	call   0x64014880
6401c556:	mov    DWORD PTR [eax],0x9
6401c55c:	call   0x64014893
6401c561:	mov    DWORD PTR [eax],esi
6401c563:	jmp    0x6401c59b
6401c565:	push   DWORD PTR [ebp-0x58]
6401c568:	call   0x640148a6
6401c56d:	pop    ecx
6401c56e:	jmp    0x6401c59b
6401c570:	mov    esi,DWORD PTR [ebp-0x70]
6401c573:	mov    eax,DWORD PTR [esi]
6401c575:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401c57a:	je     0x6401c588
6401c57c:	mov    eax,DWORD PTR [ebp-0x64]
6401c57f:	cmp    BYTE PTR [eax],0x1a
6401c582:	jne    0x6401c588
6401c584:	xor    eax,eax
6401c586:	jmp    0x6401c5a6
6401c588:	call   0x64014880
6401c58d:	mov    DWORD PTR [eax],0x1c
6401c593:	call   0x64014893
6401c598:	and    DWORD PTR [eax],0x0
6401c59b:	or     eax,0xffffffff
6401c59e:	jmp    0x6401c5a6
6401c5a0:	mov    eax,DWORD PTR [ebp-0x60]
6401c5a3:	sub    eax,DWORD PTR [ebp-0x68]
6401c5a6:	pop    edi
6401c5a7:	pop    ebx
6401c5a8:	mov    ecx,DWORD PTR [ebp+0x510]
6401c5ae:	xor    ecx,ebp
6401c5b0:	pop    esi
6401c5b1:	call   0x64012abc
6401c5b6:	add    ebp,0x514
6401c5bc:	leave  
6401c5bd:	ret    
6401c5be:	push   0x10
6401c5c0:	push   0x6402a938
6401c5c5:	call   0x64014080
6401c5ca:	mov    eax,DWORD PTR [ebp+0x8]
6401c5cd:	cmp    eax,0xfffffffe
6401c5d0:	jne    0x6401c5ed
6401c5d2:	call   0x64014893
6401c5d7:	and    DWORD PTR [eax],0x0
6401c5da:	call   0x64014880
6401c5df:	mov    DWORD PTR [eax],0x9
6401c5e5:	or     eax,0xffffffff
6401c5e8:	jmp    0x6401c68a
6401c5ed:	xor    edi,edi
6401c5ef:	cmp    eax,edi
6401c5f1:	jl     0x6401c5fb
6401c5f3:	cmp    eax,DWORD PTR ds:0x640324e0
6401c5f9:	jb     0x6401c61c
6401c5fb:	call   0x64014893
6401c600:	mov    DWORD PTR [eax],edi
6401c602:	call   0x64014880
6401c607:	mov    DWORD PTR [eax],0x9
6401c60d:	push   edi
6401c60e:	push   edi
6401c60f:	push   edi
6401c610:	push   edi
6401c611:	push   edi
6401c612:	call   0x640125f4
6401c617:	add    esp,0x14
6401c61a:	jmp    0x6401c5e5
6401c61c:	mov    ecx,eax
6401c61e:	sar    ecx,0x5
6401c621:	lea    ebx,[ecx*4+0x64032500]
6401c628:	mov    esi,eax
6401c62a:	and    esi,0x1f
6401c62d:	shl    esi,0x6
6401c630:	mov    ecx,DWORD PTR [ebx]
6401c632:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401c637:	and    ecx,0x1
6401c63a:	je     0x6401c5fb
6401c63c:	push   eax
6401c63d:	call   0x6401de10
6401c642:	pop    ecx
6401c643:	mov    DWORD PTR [ebp-0x4],edi
6401c646:	mov    eax,DWORD PTR [ebx]
6401c648:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401c64d:	je     0x6401c665
6401c64f:	push   DWORD PTR [ebp+0x10]
6401c652:	push   DWORD PTR [ebp+0xc]
6401c655:	push   DWORD PTR [ebp+0x8]
6401c658:	call   0x6401bf9c
6401c65d:	add    esp,0xc
6401c660:	mov    DWORD PTR [ebp-0x1c],eax
6401c663:	jmp    0x6401c67b
6401c665:	call   0x64014880
6401c66a:	mov    DWORD PTR [eax],0x9
6401c670:	call   0x64014893
6401c675:	mov    DWORD PTR [eax],edi
6401c677:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401c67b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c682:	call   0x6401c690
6401c687:	mov    eax,DWORD PTR [ebp-0x1c]
6401c68a:	call   0x640140c5
6401c68f:	ret    
6401c690:	push   DWORD PTR [ebp+0x8]
6401c693:	call   0x6401deb0
6401c698:	pop    ecx
6401c699:	ret    
6401c69a:	inc    DWORD PTR ds:0x6402ef54
6401c6a0:	push   0x1000
6401c6a5:	call   0x64015d90
6401c6aa:	test   eax,eax
6401c6ac:	pop    ecx
6401c6ad:	mov    ecx,DWORD PTR [esp+0x4]
6401c6b1:	mov    DWORD PTR [ecx+0x8],eax
6401c6b4:	je     0x6401c6c3
6401c6b6:	or     DWORD PTR [ecx+0xc],0x8
6401c6ba:	mov    DWORD PTR [ecx+0x18],0x1000
6401c6c1:	jmp    0x6401c6d4
6401c6c3:	or     DWORD PTR [ecx+0xc],0x4
6401c6c7:	lea    eax,[ecx+0x14]
6401c6ca:	mov    DWORD PTR [ecx+0x8],eax
6401c6cd:	mov    DWORD PTR [ecx+0x18],0x2
6401c6d4:	mov    eax,DWORD PTR [ecx+0x8]
6401c6d7:	and    DWORD PTR [ecx+0x4],0x0
6401c6db:	mov    DWORD PTR [ecx],eax
6401c6dd:	ret    
6401c6de:	mov    eax,DWORD PTR [esp+0x4]
6401c6e2:	cmp    eax,0xfffffffe
6401c6e5:	jne    0x6401c6f5
6401c6e7:	call   0x64014880
6401c6ec:	mov    DWORD PTR [eax],0x9
6401c6f2:	xor    eax,eax
6401c6f4:	ret    
6401c6f5:	push   esi
6401c6f6:	xor    esi,esi
6401c6f8:	cmp    eax,esi
6401c6fa:	jl     0x6401c704
6401c6fc:	cmp    eax,DWORD PTR ds:0x640324e0
6401c702:	jb     0x6401c720
6401c704:	call   0x64014880
6401c709:	push   esi
6401c70a:	push   esi
6401c70b:	push   esi
6401c70c:	push   esi
6401c70d:	push   esi
6401c70e:	mov    DWORD PTR [eax],0x9
6401c714:	call   0x640125f4
6401c719:	add    esp,0x14
6401c71c:	xor    eax,eax
6401c71e:	pop    esi
6401c71f:	ret    
6401c720:	mov    ecx,eax
6401c722:	and    eax,0x1f
6401c725:	sar    ecx,0x5
6401c728:	mov    ecx,DWORD PTR [ecx*4+0x64032500]
6401c72f:	shl    eax,0x6
6401c732:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401c737:	and    eax,0x40
6401c73a:	pop    esi
6401c73b:	ret    
6401c73c:	mov    eax,0x6402dc80
6401c741:	ret    
6401c742:	mov    eax,ds:0x640324c0
6401c747:	test   eax,eax
6401c749:	push   esi
6401c74a:	push   0x14
6401c74c:	pop    esi
6401c74d:	jne    0x6401c756
6401c74f:	mov    eax,0x200
6401c754:	jmp    0x6401c75c
6401c756:	cmp    eax,esi
6401c758:	jge    0x6401c761
6401c75a:	mov    eax,esi
6401c75c:	mov    ds:0x640324c0,eax
6401c761:	push   0x4
6401c763:	push   eax
6401c764:	call   0x64015dd0
6401c769:	test   eax,eax
6401c76b:	pop    ecx
6401c76c:	pop    ecx
6401c76d:	mov    ds:0x640314b4,eax
6401c772:	jne    0x6401c792
6401c774:	push   0x4
6401c776:	push   esi
6401c777:	mov    DWORD PTR ds:0x640324c0,esi
6401c77d:	call   0x64015dd0
6401c782:	test   eax,eax
6401c784:	pop    ecx
6401c785:	pop    ecx
6401c786:	mov    ds:0x640314b4,eax
6401c78b:	jne    0x6401c792
6401c78d:	push   0x1a
6401c78f:	pop    eax
6401c790:	pop    esi
6401c791:	ret    
6401c792:	xor    edx,edx
6401c794:	mov    ecx,0x6402dc80
6401c799:	jmp    0x6401c7a0
6401c79b:	mov    eax,ds:0x640314b4
6401c7a0:	mov    DWORD PTR [edx+eax*1],ecx
6401c7a3:	add    ecx,0x20
6401c7a6:	add    edx,0x4
6401c7a9:	cmp    ecx,0x6402df00
6401c7af:	jl     0x6401c79b
6401c7b1:	push   0xfffffffe
6401c7b3:	pop    esi
6401c7b4:	xor    edx,edx
6401c7b6:	mov    ecx,0x6402dc90
6401c7bb:	push   edi
6401c7bc:	mov    eax,edx
6401c7be:	sar    eax,0x5
6401c7c1:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401c7c8:	mov    edi,edx
6401c7ca:	and    edi,0x1f
6401c7cd:	shl    edi,0x6
6401c7d0:	mov    eax,DWORD PTR [edi+eax*1]
6401c7d3:	cmp    eax,0xffffffff
6401c7d6:	je     0x6401c7e0
6401c7d8:	cmp    eax,esi
6401c7da:	je     0x6401c7e0
6401c7dc:	test   eax,eax
6401c7de:	jne    0x6401c7e2
6401c7e0:	mov    DWORD PTR [ecx],esi
6401c7e2:	add    ecx,0x20
6401c7e5:	inc    edx
6401c7e6:	cmp    ecx,0x6402dcf0
6401c7ec:	jl     0x6401c7bc
6401c7ee:	pop    edi
6401c7ef:	xor    eax,eax
6401c7f1:	pop    esi
6401c7f2:	ret    
6401c7f3:	call   0x6401e1b4
6401c7f8:	cmp    BYTE PTR ds:0x6402e90c,0x0
6401c7ff:	je     0x6401c806
6401c801:	call   0x6401df97
6401c806:	push   DWORD PTR ds:0x640314b4
6401c80c:	call   0x64013956
6401c811:	pop    ecx
6401c812:	ret    
6401c813:	push   esi
6401c814:	mov    esi,DWORD PTR [esp+0x8]
6401c818:	mov    eax,0x6402dc80
6401c81d:	cmp    esi,eax
6401c81f:	jb     0x6401c843
6401c821:	cmp    esi,0x6402dee0
6401c827:	ja     0x6401c843
6401c829:	mov    ecx,esi
6401c82b:	sub    ecx,eax
6401c82d:	sar    ecx,0x5
6401c830:	add    ecx,0x10
6401c833:	push   ecx
6401c834:	call   0x6401a07a
6401c839:	or     DWORD PTR [esi+0xc],0x8000
6401c840:	pop    ecx
6401c841:	pop    esi
6401c842:	ret    
6401c843:	add    esi,0x20
6401c846:	push   esi
6401c847:	call   DWORD PTR ds:0x64025098
6401c84d:	pop    esi
6401c84e:	ret    
6401c84f:	mov    eax,DWORD PTR [esp+0x4]
6401c853:	cmp    eax,0x14
6401c856:	jge    0x6401c86e
6401c858:	add    eax,0x10
6401c85b:	push   eax
6401c85c:	call   0x6401a07a
6401c861:	mov    eax,DWORD PTR [esp+0xc]
6401c865:	or     DWORD PTR [eax+0xc],0x8000
6401c86c:	pop    ecx
6401c86d:	ret    
6401c86e:	mov    eax,DWORD PTR [esp+0x8]
6401c872:	add    eax,0x20
6401c875:	push   eax
6401c876:	call   DWORD PTR ds:0x64025098
6401c87c:	ret    
6401c87d:	mov    eax,DWORD PTR [esp+0x4]
6401c881:	mov    ecx,0x6402dc80
6401c886:	cmp    eax,ecx
6401c888:	jb     0x6401c8a8
6401c88a:	cmp    eax,0x6402dee0
6401c88f:	ja     0x6401c8a8
6401c891:	and    DWORD PTR [eax+0xc],0xffff7fff
6401c898:	sub    eax,ecx
6401c89a:	sar    eax,0x5
6401c89d:	add    eax,0x10
6401c8a0:	push   eax
6401c8a1:	call   0x64019fa2
6401c8a6:	pop    ecx
6401c8a7:	ret    
6401c8a8:	add    eax,0x20
6401c8ab:	push   eax
6401c8ac:	call   DWORD PTR ds:0x6402509c
6401c8b2:	ret    
6401c8b3:	mov    ecx,DWORD PTR [esp+0x4]
6401c8b7:	cmp    ecx,0x14
6401c8ba:	mov    eax,DWORD PTR [esp+0x8]
6401c8be:	jge    0x6401c8d2
6401c8c0:	and    DWORD PTR [eax+0xc],0xffff7fff
6401c8c7:	add    ecx,0x10
6401c8ca:	push   ecx
6401c8cb:	call   0x64019fa2
6401c8d0:	pop    ecx
6401c8d1:	ret    
6401c8d2:	add    eax,0x20
6401c8d5:	push   eax
6401c8d6:	call   DWORD PTR ds:0x6402509c
6401c8dc:	ret    
6401c8dd:	mov    eax,DWORD PTR [esp+0x4]
6401c8e1:	push   esi
6401c8e2:	xor    esi,esi
6401c8e4:	cmp    eax,esi
6401c8e6:	jne    0x6401c905
6401c8e8:	call   0x64014880
6401c8ed:	push   esi
6401c8ee:	push   esi
6401c8ef:	push   esi
6401c8f0:	push   esi
6401c8f1:	push   esi
6401c8f2:	mov    DWORD PTR [eax],0x16
6401c8f8:	call   0x640125f4
6401c8fd:	add    esp,0x14
6401c900:	or     eax,0xffffffff
6401c903:	pop    esi
6401c904:	ret    
6401c905:	mov    eax,DWORD PTR [eax+0x10]
6401c908:	pop    esi
6401c909:	ret    
6401c90a:	push   ebp
6401c90b:	mov    ebp,esp
6401c90d:	sub    esp,0x10
6401c910:	mov    eax,ds:0x6402d09c
6401c915:	xor    eax,ebp
6401c917:	mov    DWORD PTR [ebp-0x4],eax
6401c91a:	push   ebx
6401c91b:	push   esi
6401c91c:	mov    esi,DWORD PTR [ebp+0xc]
6401c91f:	test   BYTE PTR [esi+0xc],0x40
6401c923:	push   edi
6401c924:	jne    0x6401cab9
6401c92a:	push   esi
6401c92b:	call   0x6401c8dd
6401c930:	cmp    eax,0xffffffff
6401c933:	pop    ecx
6401c934:	mov    edi,0x6402d880
6401c939:	je     0x6401c969
6401c93b:	push   esi
6401c93c:	call   0x6401c8dd
6401c941:	cmp    eax,0xfffffffe
6401c944:	pop    ecx
6401c945:	je     0x6401c969
6401c947:	push   esi
6401c948:	call   0x6401c8dd
6401c94d:	sar    eax,0x5
6401c950:	push   esi
6401c951:	lea    ebx,[eax*4+0x64032500]
6401c958:	call   0x6401c8dd
6401c95d:	and    eax,0x1f
6401c960:	pop    ecx
6401c961:	shl    eax,0x6
6401c964:	add    eax,DWORD PTR [ebx]
6401c966:	pop    ecx
6401c967:	jmp    0x6401c96b
6401c969:	mov    eax,edi
6401c96b:	mov    al,BYTE PTR [eax+0x24]
6401c96e:	and    al,0x7f
6401c970:	cmp    al,0x2
6401c972:	je     0x6401cab9
6401c978:	push   esi
6401c979:	call   0x6401c8dd
6401c97e:	cmp    eax,0xffffffff
6401c981:	pop    ecx
6401c982:	je     0x6401c9b2
6401c984:	push   esi
6401c985:	call   0x6401c8dd
6401c98a:	cmp    eax,0xfffffffe
6401c98d:	pop    ecx
6401c98e:	je     0x6401c9b2
6401c990:	push   esi
6401c991:	call   0x6401c8dd
6401c996:	sar    eax,0x5
6401c999:	push   esi
6401c99a:	lea    ebx,[eax*4+0x64032500]
6401c9a1:	call   0x6401c8dd
6401c9a6:	and    eax,0x1f
6401c9a9:	pop    ecx
6401c9aa:	shl    eax,0x6
6401c9ad:	add    eax,DWORD PTR [ebx]
6401c9af:	pop    ecx
6401c9b0:	jmp    0x6401c9b4
6401c9b2:	mov    eax,edi
6401c9b4:	mov    al,BYTE PTR [eax+0x24]
6401c9b7:	and    al,0x7f
6401c9b9:	cmp    al,0x1
6401c9bb:	jne    0x6401ca19
6401c9bd:	dec    DWORD PTR [esi+0x4]
6401c9c0:	mov    ebx,DWORD PTR [ebp+0x8]
6401c9c3:	js     0x6401c9d3
6401c9c5:	mov    eax,DWORD PTR [esi]
6401c9c7:	mov    BYTE PTR [eax],bl
6401c9c9:	mov    ecx,DWORD PTR [esi]
6401c9cb:	movzx  eax,BYTE PTR [ecx]
6401c9ce:	inc    ecx
6401c9cf:	mov    DWORD PTR [esi],ecx
6401c9d1:	jmp    0x6401c9df
6401c9d3:	movsx  eax,bl
6401c9d6:	push   esi
6401c9d7:	push   eax
6401c9d8:	call   0x64016bc5
6401c9dd:	pop    ecx
6401c9de:	pop    ecx
6401c9df:	cmp    eax,0xffffffff
6401c9e2:	jne    0x6401c9ed
6401c9e4:	or     ax,0xffff
6401c9e8:	jmp    0x6401cad9
6401c9ed:	dec    DWORD PTR [esi+0x4]
6401c9f0:	js     0x6401ca00
6401c9f2:	mov    eax,DWORD PTR [esi]
6401c9f4:	mov    BYTE PTR [eax],bh
6401c9f6:	mov    ecx,DWORD PTR [esi]
6401c9f8:	movzx  eax,BYTE PTR [ecx]
6401c9fb:	inc    ecx
6401c9fc:	mov    DWORD PTR [esi],ecx
6401c9fe:	jmp    0x6401ca0c
6401ca00:	movsx  eax,bh
6401ca03:	push   esi
6401ca04:	push   eax
6401ca05:	call   0x64016bc5
6401ca0a:	pop    ecx
6401ca0b:	pop    ecx
6401ca0c:	cmp    eax,0xffffffff
6401ca0f:	je     0x6401c9e4
6401ca11:	mov    ax,bx
6401ca14:	jmp    0x6401cad9
6401ca19:	push   esi
6401ca1a:	call   0x6401c8dd
6401ca1f:	cmp    eax,0xffffffff
6401ca22:	pop    ecx
6401ca23:	je     0x6401ca53
6401ca25:	push   esi
6401ca26:	call   0x6401c8dd
6401ca2b:	cmp    eax,0xfffffffe
6401ca2e:	pop    ecx
6401ca2f:	je     0x6401ca53
6401ca31:	push   esi
6401ca32:	call   0x6401c8dd
6401ca37:	sar    eax,0x5
6401ca3a:	push   esi
6401ca3b:	lea    ebx,[eax*4+0x64032500]
6401ca42:	call   0x6401c8dd
6401ca47:	and    eax,0x1f
6401ca4a:	pop    ecx
6401ca4b:	shl    eax,0x6
6401ca4e:	add    eax,DWORD PTR [ebx]
6401ca50:	pop    ecx
6401ca51:	jmp    0x6401ca55
6401ca53:	mov    eax,edi
6401ca55:	test   BYTE PTR [eax+0x4],0x80
6401ca59:	je     0x6401cab9
6401ca5b:	push   DWORD PTR [ebp+0x8]
6401ca5e:	lea    eax,[ebp-0xc]
6401ca61:	push   0x5
6401ca63:	push   eax
6401ca64:	lea    eax,[ebp-0x10]
6401ca67:	push   eax
6401ca68:	call   0x6401daa8
6401ca6d:	add    esp,0x10
6401ca70:	test   eax,eax
6401ca72:	jne    0x6401c9e4
6401ca78:	xor    ebx,ebx
6401ca7a:	cmp    DWORD PTR [ebp-0x10],ebx
6401ca7d:	jle    0x6401cab3
6401ca7f:	dec    DWORD PTR [esi+0x4]
6401ca82:	js     0x6401ca96
6401ca84:	mov    eax,DWORD PTR [esi]
6401ca86:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401ca8a:	mov    BYTE PTR [eax],cl
6401ca8c:	mov    ecx,DWORD PTR [esi]
6401ca8e:	movzx  eax,BYTE PTR [ecx]
6401ca91:	inc    ecx
6401ca92:	mov    DWORD PTR [esi],ecx
6401ca94:	jmp    0x6401caa4
6401ca96:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401ca9b:	push   esi
6401ca9c:	push   eax
6401ca9d:	call   0x64016bc5
6401caa2:	pop    ecx
6401caa3:	pop    ecx
6401caa4:	cmp    eax,0xffffffff
6401caa7:	je     0x6401c9e4
6401caad:	inc    ebx
6401caae:	cmp    ebx,DWORD PTR [ebp-0x10]
6401cab1:	jl     0x6401ca7f
6401cab3:	mov    ax,WORD PTR [ebp+0x8]
6401cab7:	jmp    0x6401cad9
6401cab9:	add    DWORD PTR [esi+0x4],0xfffffffe
6401cabd:	js     0x6401cacc
6401cabf:	mov    ecx,DWORD PTR [esi]
6401cac1:	mov    eax,DWORD PTR [ebp+0x8]
6401cac4:	mov    WORD PTR [ecx],ax
6401cac7:	add    DWORD PTR [esi],0x2
6401caca:	jmp    0x6401cad9
6401cacc:	movzx  eax,WORD PTR [ebp+0x8]
6401cad0:	push   esi
6401cad1:	push   eax
6401cad2:	call   0x6401e1bd
6401cad7:	pop    ecx
6401cad8:	pop    ecx
6401cad9:	mov    ecx,DWORD PTR [ebp-0x4]
6401cadc:	pop    edi
6401cadd:	pop    esi
6401cade:	xor    ecx,ebp
6401cae0:	pop    ebx
6401cae1:	call   0x64012abc
6401cae6:	leave  
6401cae7:	ret    
6401cae8:	mov    eax,ds:0x6402d09c
6401caed:	or     eax,0x1
6401caf0:	xor    ecx,ecx
6401caf2:	cmp    DWORD PTR ds:0x6402ef58,eax
6401caf8:	sete   cl
6401cafb:	mov    eax,ecx
6401cafd:	ret    
6401cafe:	push   ebp
6401caff:	mov    ebp,esp
6401cb01:	sub    esp,0x10
6401cb04:	push   ebx
6401cb05:	push   esi
6401cb06:	mov    esi,DWORD PTR [ebp+0xc]
6401cb09:	xor    ebx,ebx
6401cb0b:	cmp    esi,ebx
6401cb0d:	je     0x6401cb22
6401cb0f:	cmp    DWORD PTR [ebp+0x10],ebx
6401cb12:	je     0x6401cb22
6401cb14:	cmp    BYTE PTR [esi],bl
6401cb16:	jne    0x6401cb28
6401cb18:	mov    eax,DWORD PTR [ebp+0x8]
6401cb1b:	cmp    eax,ebx
6401cb1d:	je     0x6401cb22
6401cb1f:	mov    WORD PTR [eax],bx
6401cb22:	xor    eax,eax
6401cb24:	pop    esi
6401cb25:	pop    ebx
6401cb26:	leave  
6401cb27:	ret    
6401cb28:	push   DWORD PTR [ebp+0x14]
6401cb2b:	lea    ecx,[ebp-0x10]
6401cb2e:	call   0x64012c5f
6401cb33:	mov    eax,DWORD PTR [ebp-0x10]
6401cb36:	cmp    DWORD PTR [eax+0x14],ebx
6401cb39:	jne    0x6401cb5a
6401cb3b:	mov    eax,DWORD PTR [ebp+0x8]
6401cb3e:	cmp    eax,ebx
6401cb40:	je     0x6401cb49
6401cb42:	movzx  cx,BYTE PTR [esi]
6401cb46:	mov    WORD PTR [eax],cx
6401cb49:	cmp    BYTE PTR [ebp-0x4],bl
6401cb4c:	je     0x6401cb55
6401cb4e:	mov    eax,DWORD PTR [ebp-0x8]
6401cb51:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cb55:	xor    eax,eax
6401cb57:	inc    eax
6401cb58:	jmp    0x6401cb24
6401cb5a:	lea    eax,[ebp-0x10]
6401cb5d:	push   eax
6401cb5e:	movzx  eax,BYTE PTR [esi]
6401cb61:	push   eax
6401cb62:	call   0x64019e0a
6401cb67:	test   eax,eax
6401cb69:	pop    ecx
6401cb6a:	pop    ecx
6401cb6b:	je     0x6401cbea
6401cb6d:	mov    eax,DWORD PTR [ebp-0x10]
6401cb70:	mov    ecx,DWORD PTR [eax+0xac]
6401cb76:	cmp    ecx,0x1
6401cb79:	jle    0x6401cba0
6401cb7b:	cmp    DWORD PTR [ebp+0x10],ecx
6401cb7e:	jl     0x6401cba0
6401cb80:	xor    edx,edx
6401cb82:	cmp    DWORD PTR [ebp+0x8],ebx
6401cb85:	setne  dl
6401cb88:	push   edx
6401cb89:	push   DWORD PTR [ebp+0x8]
6401cb8c:	push   ecx
6401cb8d:	push   esi
6401cb8e:	push   0x9
6401cb90:	push   DWORD PTR [eax+0x4]
6401cb93:	call   DWORD PTR ds:0x64025024
6401cb99:	test   eax,eax
6401cb9b:	mov    eax,DWORD PTR [ebp-0x10]
6401cb9e:	jne    0x6401cbb0
6401cba0:	mov    ecx,DWORD PTR [ebp+0x10]
6401cba3:	cmp    ecx,DWORD PTR [eax+0xac]
6401cba9:	jb     0x6401cbcb
6401cbab:	cmp    BYTE PTR [esi+0x1],bl
6401cbae:	je     0x6401cbcb
6401cbb0:	cmp    BYTE PTR [ebp-0x4],bl
6401cbb3:	mov    eax,DWORD PTR [eax+0xac]
6401cbb9:	je     0x6401cb24
6401cbbf:	mov    ecx,DWORD PTR [ebp-0x8]
6401cbc2:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401cbc6:	jmp    0x6401cb24
6401cbcb:	call   0x64014880
6401cbd0:	mov    DWORD PTR [eax],0x2a
6401cbd6:	cmp    BYTE PTR [ebp-0x4],bl
6401cbd9:	je     0x6401cbe2
6401cbdb:	mov    eax,DWORD PTR [ebp-0x8]
6401cbde:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cbe2:	or     eax,0xffffffff
6401cbe5:	jmp    0x6401cb24
6401cbea:	xor    eax,eax
6401cbec:	cmp    DWORD PTR [ebp+0x8],ebx
6401cbef:	setne  al
6401cbf2:	push   eax
6401cbf3:	push   DWORD PTR [ebp+0x8]
6401cbf6:	mov    eax,DWORD PTR [ebp-0x10]
6401cbf9:	push   0x1
6401cbfb:	push   esi
6401cbfc:	push   0x9
6401cbfe:	push   DWORD PTR [eax+0x4]
6401cc01:	call   DWORD PTR ds:0x64025024
6401cc07:	test   eax,eax
6401cc09:	jne    0x6401cb49
6401cc0f:	jmp    0x6401cbcb
6401cc11:	push   0x0
6401cc13:	push   DWORD PTR [esp+0x10]
6401cc17:	push   DWORD PTR [esp+0x10]
6401cc1b:	push   DWORD PTR [esp+0x10]
6401cc1f:	call   0x6401cafe
6401cc24:	add    esp,0x10
6401cc27:	ret    
6401cc28:	test   BYTE PTR [ecx+0xc],0x40
6401cc2c:	je     0x6401cc34
6401cc2e:	cmp    DWORD PTR [ecx+0x8],0x0
6401cc32:	je     0x6401cc58
6401cc34:	dec    DWORD PTR [ecx+0x4]
6401cc37:	js     0x6401cc44
6401cc39:	mov    edx,DWORD PTR [ecx]
6401cc3b:	mov    BYTE PTR [edx],al
6401cc3d:	inc    DWORD PTR [ecx]
6401cc3f:	movzx  eax,al
6401cc42:	jmp    0x6401cc50
6401cc44:	movsx  eax,al
6401cc47:	push   ecx
6401cc48:	push   eax
6401cc49:	call   0x64016bc5
6401cc4e:	pop    ecx
6401cc4f:	pop    ecx
6401cc50:	cmp    eax,0xffffffff
6401cc53:	jne    0x6401cc58
6401cc55:	or     DWORD PTR [esi],eax
6401cc57:	ret    
6401cc58:	inc    DWORD PTR [esi]
6401cc5a:	ret    
6401cc5b:	push   ebp
6401cc5c:	mov    ebp,esp
6401cc5e:	push   esi
6401cc5f:	mov    esi,eax
6401cc61:	jmp    0x6401cc76
6401cc63:	mov    ecx,DWORD PTR [ebp+0x10]
6401cc66:	mov    al,BYTE PTR [ebp+0x8]
6401cc69:	dec    DWORD PTR [ebp+0xc]
6401cc6c:	call   0x6401cc28
6401cc71:	cmp    DWORD PTR [esi],0xffffffff
6401cc74:	je     0x6401cc7c
6401cc76:	cmp    DWORD PTR [ebp+0xc],0x0
6401cc7a:	jg     0x6401cc63
6401cc7c:	pop    esi
6401cc7d:	pop    ebp
6401cc7e:	ret    
6401cc7f:	push   ebp
6401cc80:	lea    ebp,[esp-0x1f8]
6401cc87:	sub    esp,0x278
6401cc8d:	mov    eax,ds:0x6402d09c
6401cc92:	xor    eax,ebp
6401cc94:	mov    DWORD PTR [ebp+0x1f4],eax
6401cc9a:	mov    eax,DWORD PTR [ebp+0x200]
6401cca0:	push   ebx
6401cca1:	mov    ebx,DWORD PTR [ebp+0x204]
6401cca7:	push   esi
6401cca8:	xor    esi,esi
6401ccaa:	push   edi
6401ccab:	mov    edi,DWORD PTR [ebp+0x20c]
6401ccb1:	push   DWORD PTR [ebp+0x208]
6401ccb7:	lea    ecx,[ebp-0x5c]
6401ccba:	mov    DWORD PTR [ebp-0x30],eax
6401ccbd:	mov    DWORD PTR [ebp-0x2c],edi
6401ccc0:	mov    DWORD PTR [ebp-0x64],esi
6401ccc3:	mov    DWORD PTR [ebp-0x18],esi
6401ccc6:	mov    DWORD PTR [ebp-0x40],esi
6401ccc9:	mov    DWORD PTR [ebp-0x20],esi
6401cccc:	mov    DWORD PTR [ebp-0x3c],esi
6401cccf:	mov    DWORD PTR [ebp-0x68],esi
6401ccd2:	mov    DWORD PTR [ebp-0x44],esi
6401ccd5:	call   0x64012c5f
6401ccda:	cmp    DWORD PTR [ebp-0x30],esi
6401ccdd:	jne    0x6401cd0c
6401ccdf:	call   0x64014880
6401cce4:	push   esi
6401cce5:	push   esi
6401cce6:	push   esi
6401cce7:	push   esi
6401cce8:	mov    DWORD PTR [eax],0x16
6401ccee:	push   esi
6401ccef:	call   0x640125f4
6401ccf4:	add    esp,0x14
6401ccf7:	cmp    BYTE PTR [ebp-0x50],0x0
6401ccfb:	je     0x6401cd04
6401ccfd:	mov    eax,DWORD PTR [ebp-0x54]
6401cd00:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cd04:	or     eax,0xffffffff
6401cd07:	jmp    0x6401d5f6
6401cd0c:	mov    eax,DWORD PTR [ebp-0x30]
6401cd0f:	test   BYTE PTR [eax+0xc],0x40
6401cd13:	jne    0x6401cdbd
6401cd19:	push   eax
6401cd1a:	call   0x6401c8dd
6401cd1f:	cmp    eax,0xffffffff
6401cd22:	pop    ecx
6401cd23:	je     0x6401cd5b
6401cd25:	push   DWORD PTR [ebp-0x30]
6401cd28:	call   0x6401c8dd
6401cd2d:	cmp    eax,0xfffffffe
6401cd30:	pop    ecx
6401cd31:	je     0x6401cd5b
6401cd33:	push   DWORD PTR [ebp-0x30]
6401cd36:	call   0x6401c8dd
6401cd3b:	push   DWORD PTR [ebp-0x30]
6401cd3e:	sar    eax,0x5
6401cd41:	lea    esi,[eax*4+0x64032500]
6401cd48:	call   0x6401c8dd
6401cd4d:	and    eax,0x1f
6401cd50:	shl    eax,0x6
6401cd53:	add    eax,DWORD PTR [esi]
6401cd55:	pop    ecx
6401cd56:	pop    ecx
6401cd57:	xor    esi,esi
6401cd59:	jmp    0x6401cd60
6401cd5b:	mov    eax,0x6402d880
6401cd60:	test   BYTE PTR [eax+0x24],0x7f
6401cd64:	jne    0x6401ccdf
6401cd6a:	push   DWORD PTR [ebp-0x30]
6401cd6d:	call   0x6401c8dd
6401cd72:	cmp    eax,0xffffffff
6401cd75:	pop    ecx
6401cd76:	je     0x6401cdae
6401cd78:	push   DWORD PTR [ebp-0x30]
6401cd7b:	call   0x6401c8dd
6401cd80:	cmp    eax,0xfffffffe
6401cd83:	pop    ecx
6401cd84:	je     0x6401cdae
6401cd86:	push   DWORD PTR [ebp-0x30]
6401cd89:	call   0x6401c8dd
6401cd8e:	push   DWORD PTR [ebp-0x30]
6401cd91:	sar    eax,0x5
6401cd94:	lea    esi,[eax*4+0x64032500]
6401cd9b:	call   0x6401c8dd
6401cda0:	and    eax,0x1f
6401cda3:	shl    eax,0x6
6401cda6:	add    eax,DWORD PTR [esi]
6401cda8:	pop    ecx
6401cda9:	pop    ecx
6401cdaa:	xor    esi,esi
6401cdac:	jmp    0x6401cdb3
6401cdae:	mov    eax,0x6402d880
6401cdb3:	test   BYTE PTR [eax+0x24],0x80
6401cdb7:	jne    0x6401ccdf
6401cdbd:	cmp    ebx,esi
6401cdbf:	je     0x6401ccdf
6401cdc5:	mov    dl,BYTE PTR [ebx]
6401cdc7:	test   dl,dl
6401cdc9:	mov    DWORD PTR [ebp-0x34],esi
6401cdcc:	mov    DWORD PTR [ebp-0x28],esi
6401cdcf:	mov    DWORD PTR [ebp-0x48],esi
6401cdd2:	mov    DWORD PTR [ebp-0x60],esi
6401cdd5:	mov    BYTE PTR [ebp-0x19],dl
6401cdd8:	je     0x6401d5e6
6401cdde:	inc    ebx
6401cddf:	xor    eax,eax
6401cde1:	cmp    DWORD PTR [ebp-0x34],eax
6401cde4:	mov    DWORD PTR [ebp-0x4c],ebx
6401cde7:	jl     0x6401d5d5
6401cded:	mov    cl,dl
6401cdef:	sub    cl,0x20
6401cdf2:	cmp    cl,0x58
6401cdf5:	ja     0x6401ce04
6401cdf7:	movsx  eax,dl
6401cdfa:	movzx  eax,BYTE PTR [eax+0x640274c0]
6401ce01:	and    eax,0xf
6401ce04:	mov    ecx,DWORD PTR [ebp-0x48]
6401ce07:	imul   eax,eax,0x9
6401ce0a:	movzx  eax,BYTE PTR [eax+ecx*1+0x640274e0]
6401ce12:	push   0x8
6401ce14:	shr    eax,0x4
6401ce17:	pop    esi
6401ce18:	cmp    eax,esi
6401ce1a:	mov    DWORD PTR [ebp-0x48],eax
6401ce1d:	je     0x6401d5be
6401ce23:	push   0x7
6401ce25:	pop    ecx
6401ce26:	cmp    eax,ecx
6401ce28:	ja     0x6401d5a8
6401ce2e:	jmp    DWORD PTR [eax*4+0x6401d60f]
6401ce35:	xor    eax,eax
6401ce37:	or     DWORD PTR [ebp-0x20],0xffffffff
6401ce3b:	mov    DWORD PTR [ebp-0x74],eax
6401ce3e:	mov    DWORD PTR [ebp-0x68],eax
6401ce41:	mov    DWORD PTR [ebp-0x40],eax
6401ce44:	mov    DWORD PTR [ebp-0x3c],eax
6401ce47:	mov    DWORD PTR [ebp-0x18],eax
6401ce4a:	mov    DWORD PTR [ebp-0x44],eax
6401ce4d:	jmp    0x6401d5a8
6401ce52:	movsx  eax,dl
6401ce55:	sub    eax,0x20
6401ce58:	je     0x6401ce96
6401ce5a:	sub    eax,0x3
6401ce5d:	je     0x6401ce8a
6401ce5f:	sub    eax,esi
6401ce61:	je     0x6401ce81
6401ce63:	dec    eax
6401ce64:	dec    eax
6401ce65:	je     0x6401ce78
6401ce67:	sub    eax,0x3
6401ce6a:	jne    0x6401d5a8
6401ce70:	or     DWORD PTR [ebp-0x18],esi
6401ce73:	jmp    0x6401d5a8
6401ce78:	or     DWORD PTR [ebp-0x18],0x4
6401ce7c:	jmp    0x6401d5a8
6401ce81:	or     DWORD PTR [ebp-0x18],0x1
6401ce85:	jmp    0x6401d5a8
6401ce8a:	or     DWORD PTR [ebp-0x18],0x80
6401ce91:	jmp    0x6401d5a8
6401ce96:	or     DWORD PTR [ebp-0x18],0x2
6401ce9a:	jmp    0x6401d5a8
6401ce9f:	cmp    dl,0x2a
6401cea2:	jne    0x6401cec4
6401cea4:	add    edi,0x4
6401cea7:	mov    DWORD PTR [ebp-0x2c],edi
6401ceaa:	mov    edi,DWORD PTR [edi-0x4]
6401cead:	test   edi,edi
6401ceaf:	mov    DWORD PTR [ebp-0x40],edi
6401ceb2:	jge    0x6401d5a8
6401ceb8:	or     DWORD PTR [ebp-0x18],0x4
6401cebc:	neg    DWORD PTR [ebp-0x40]
6401cebf:	jmp    0x6401d5a8
6401cec4:	mov    eax,DWORD PTR [ebp-0x40]
6401cec7:	imul   eax,eax,0xa
6401ceca:	movsx  ecx,dl
6401cecd:	lea    eax,[eax+ecx*1-0x30]
6401ced1:	mov    DWORD PTR [ebp-0x40],eax
6401ced4:	jmp    0x6401d5a8
6401ced9:	and    DWORD PTR [ebp-0x20],0x0
6401cedd:	jmp    0x6401d5a8
6401cee2:	cmp    dl,0x2a
6401cee5:	jne    0x6401cf04
6401cee7:	add    edi,0x4
6401ceea:	mov    DWORD PTR [ebp-0x2c],edi
6401ceed:	mov    edi,DWORD PTR [edi-0x4]
6401cef0:	test   edi,edi
6401cef2:	mov    DWORD PTR [ebp-0x20],edi
6401cef5:	jge    0x6401d5a8
6401cefb:	or     DWORD PTR [ebp-0x20],0xffffffff
6401ceff:	jmp    0x6401d5a8
6401cf04:	mov    eax,DWORD PTR [ebp-0x20]
6401cf07:	imul   eax,eax,0xa
6401cf0a:	movsx  ecx,dl
6401cf0d:	lea    eax,[eax+ecx*1-0x30]
6401cf11:	mov    DWORD PTR [ebp-0x20],eax
6401cf14:	jmp    0x6401d5a8
6401cf19:	cmp    dl,0x49
6401cf1c:	je     0x6401cf64
6401cf1e:	cmp    dl,0x68
6401cf21:	je     0x6401cf5b
6401cf23:	cmp    dl,0x6c
6401cf26:	je     0x6401cf3d
6401cf28:	cmp    dl,0x77
6401cf2b:	jne    0x6401d5a8
6401cf31:	or     DWORD PTR [ebp-0x18],0x800
6401cf38:	jmp    0x6401d5a8
6401cf3d:	cmp    BYTE PTR [ebx],0x6c
6401cf40:	jne    0x6401cf52
6401cf42:	inc    ebx
6401cf43:	or     DWORD PTR [ebp-0x18],0x1000
6401cf4a:	mov    DWORD PTR [ebp-0x4c],ebx
6401cf4d:	jmp    0x6401d5a8
6401cf52:	or     DWORD PTR [ebp-0x18],0x10
6401cf56:	jmp    0x6401d5a8
6401cf5b:	or     DWORD PTR [ebp-0x18],0x20
6401cf5f:	jmp    0x6401d5a8
6401cf64:	mov    al,BYTE PTR [ebx]
6401cf66:	cmp    al,0x36
6401cf68:	jne    0x6401cf81
6401cf6a:	cmp    BYTE PTR [ebx+0x1],0x34
6401cf6e:	jne    0x6401cf81
6401cf70:	inc    ebx
6401cf71:	inc    ebx
6401cf72:	or     DWORD PTR [ebp-0x18],0x8000
6401cf79:	mov    DWORD PTR [ebp-0x4c],ebx
6401cf7c:	jmp    0x6401d5a8
6401cf81:	cmp    al,0x33
6401cf83:	jne    0x6401cf9c
6401cf85:	cmp    BYTE PTR [ebx+0x1],0x32
6401cf89:	jne    0x6401cf9c
6401cf8b:	inc    ebx
6401cf8c:	inc    ebx
6401cf8d:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401cf94:	mov    DWORD PTR [ebp-0x4c],ebx
6401cf97:	jmp    0x6401d5a8
6401cf9c:	cmp    al,0x64
6401cf9e:	je     0x6401d5a8
6401cfa4:	cmp    al,0x69
6401cfa6:	je     0x6401d5a8
6401cfac:	cmp    al,0x6f
6401cfae:	je     0x6401d5a8
6401cfb4:	cmp    al,0x75
6401cfb6:	je     0x6401d5a8
6401cfbc:	cmp    al,0x78
6401cfbe:	je     0x6401d5a8
6401cfc4:	cmp    al,0x58
6401cfc6:	je     0x6401d5a8
6401cfcc:	and    DWORD PTR [ebp-0x48],0x0
6401cfd0:	and    DWORD PTR [ebp-0x44],0x0
6401cfd4:	lea    eax,[ebp-0x5c]
6401cfd7:	push   eax
6401cfd8:	movzx  eax,dl
6401cfdb:	push   eax
6401cfdc:	call   0x64019e0a
6401cfe1:	pop    ecx
6401cfe2:	test   eax,eax
6401cfe4:	mov    al,BYTE PTR [ebp-0x19]
6401cfe7:	pop    ecx
6401cfe8:	je     0x6401d003
6401cfea:	mov    ecx,DWORD PTR [ebp-0x30]
6401cfed:	lea    esi,[ebp-0x34]
6401cff0:	call   0x6401cc28
6401cff5:	mov    al,BYTE PTR [ebx]
6401cff7:	inc    ebx
6401cff8:	test   al,al
6401cffa:	mov    DWORD PTR [ebp-0x4c],ebx
6401cffd:	je     0x6401d5be
6401d003:	mov    ecx,DWORD PTR [ebp-0x30]
6401d006:	lea    esi,[ebp-0x34]
6401d009:	call   0x6401cc28
6401d00e:	jmp    0x6401d5a8
6401d013:	movsx  eax,dl
6401d016:	cmp    eax,0x64
6401d019:	jg     0x6401d193
6401d01f:	je     0x6401d20e
6401d025:	cmp    eax,0x53
6401d028:	jg     0x6401d0da
6401d02e:	je     0x6401d08b
6401d030:	sub    eax,0x41
6401d033:	je     0x6401d045
6401d035:	dec    eax
6401d036:	dec    eax
6401d037:	je     0x6401d07a
6401d039:	dec    eax
6401d03a:	dec    eax
6401d03b:	je     0x6401d045
6401d03d:	dec    eax
6401d03e:	dec    eax
6401d03f:	jne    0x6401d490
6401d045:	add    dl,0x20
6401d048:	mov    DWORD PTR [ebp-0x74],0x1
6401d04f:	mov    BYTE PTR [ebp-0x19],dl
6401d052:	or     DWORD PTR [ebp-0x18],0x40
6401d056:	cmp    DWORD PTR [ebp-0x20],0x0
6401d05a:	lea    ebx,[ebp-0x14]
6401d05d:	mov    eax,0x200
6401d062:	mov    DWORD PTR [ebp-0x24],ebx
6401d065:	mov    DWORD PTR [ebp-0x6c],eax
6401d068:	jge    0x6401d232
6401d06e:	mov    DWORD PTR [ebp-0x20],0x6
6401d075:	jmp    0x6401d281
6401d07a:	test   WORD PTR [ebp-0x18],0x830
6401d080:	jne    0x6401d0f7
6401d082:	or     DWORD PTR [ebp-0x18],0x800
6401d089:	jmp    0x6401d0f7
6401d08b:	test   WORD PTR [ebp-0x18],0x830
6401d091:	jne    0x6401d09a
6401d093:	or     DWORD PTR [ebp-0x18],0x800
6401d09a:	mov    ecx,DWORD PTR [ebp-0x20]
6401d09d:	cmp    ecx,0xffffffff
6401d0a0:	jne    0x6401d0a7
6401d0a2:	mov    ecx,0x7fffffff
6401d0a7:	add    edi,0x4
6401d0aa:	test   WORD PTR [ebp-0x18],0x810
6401d0b0:	mov    DWORD PTR [ebp-0x2c],edi
6401d0b3:	mov    edi,DWORD PTR [edi-0x4]
6401d0b6:	mov    DWORD PTR [ebp-0x24],edi
6401d0b9:	je     0x6401d46e
6401d0bf:	test   edi,edi
6401d0c1:	jne    0x6401d0cb
6401d0c3:	mov    eax,ds:0x6402d954
6401d0c8:	mov    DWORD PTR [ebp-0x24],eax
6401d0cb:	mov    eax,DWORD PTR [ebp-0x24]
6401d0ce:	mov    DWORD PTR [ebp-0x44],0x1
6401d0d5:	jmp    0x6401d463
6401d0da:	sub    eax,0x58
6401d0dd:	je     0x6401d317
6401d0e3:	dec    eax
6401d0e4:	dec    eax
6401d0e5:	je     0x6401d144
6401d0e7:	sub    eax,ecx
6401d0e9:	je     0x6401d052
6401d0ef:	dec    eax
6401d0f0:	dec    eax
6401d0f1:	jne    0x6401d490
6401d0f7:	add    edi,0x4
6401d0fa:	test   WORD PTR [ebp-0x18],0x810
6401d100:	mov    DWORD PTR [ebp-0x2c],edi
6401d103:	je     0x6401d12c
6401d105:	movzx  eax,WORD PTR [edi-0x4]
6401d109:	push   eax
6401d10a:	push   0x200
6401d10f:	lea    eax,[ebp-0x14]
6401d112:	push   eax
6401d113:	lea    eax,[ebp-0x28]
6401d116:	push   eax
6401d117:	call   0x6401daa8
6401d11c:	add    esp,0x10
6401d11f:	test   eax,eax
6401d121:	je     0x6401d139
6401d123:	mov    DWORD PTR [ebp-0x68],0x1
6401d12a:	jmp    0x6401d139
6401d12c:	mov    al,BYTE PTR [edi-0x4]
6401d12f:	mov    BYTE PTR [ebp-0x14],al
6401d132:	mov    DWORD PTR [ebp-0x28],0x1
6401d139:	lea    eax,[ebp-0x14]
6401d13c:	mov    DWORD PTR [ebp-0x24],eax
6401d13f:	jmp    0x6401d490
6401d144:	mov    eax,DWORD PTR [edi]
6401d146:	add    edi,0x4
6401d149:	test   eax,eax
6401d14b:	mov    DWORD PTR [ebp-0x2c],edi
6401d14e:	je     0x6401d17f
6401d150:	mov    ecx,DWORD PTR [eax+0x4]
6401d153:	test   ecx,ecx
6401d155:	je     0x6401d17f
6401d157:	test   WORD PTR [ebp-0x18],0x800
6401d15d:	movsx  eax,WORD PTR [eax]
6401d160:	mov    DWORD PTR [ebp-0x24],ecx
6401d163:	je     0x6401d176
6401d165:	cdq    
6401d166:	sub    eax,edx
6401d168:	sar    eax,1
6401d16a:	mov    DWORD PTR [ebp-0x44],0x1
6401d171:	jmp    0x6401d48d
6401d176:	and    DWORD PTR [ebp-0x44],0x0
6401d17a:	jmp    0x6401d48d
6401d17f:	mov    eax,ds:0x6402d950
6401d184:	mov    DWORD PTR [ebp-0x24],eax
6401d187:	push   eax
6401d188:	call   0x64014280
6401d18d:	pop    ecx
6401d18e:	jmp    0x6401d48d
6401d193:	cmp    eax,0x70
6401d196:	jg     0x6401d31c
6401d19c:	je     0x6401d314
6401d1a2:	cmp    eax,0x65
6401d1a5:	jl     0x6401d490
6401d1ab:	cmp    eax,0x67
6401d1ae:	jle    0x6401d052
6401d1b4:	cmp    eax,0x69
6401d1b7:	je     0x6401d20e
6401d1b9:	cmp    eax,0x6e
6401d1bc:	je     0x6401d1d9
6401d1be:	cmp    eax,0x6f
6401d1c1:	jne    0x6401d490
6401d1c7:	test   BYTE PTR [ebp-0x18],0x80
6401d1cb:	mov    DWORD PTR [ebp-0x28],esi
6401d1ce:	je     0x6401d219
6401d1d0:	or     DWORD PTR [ebp-0x18],0x200
6401d1d7:	jmp    0x6401d219
6401d1d9:	mov    esi,DWORD PTR [edi]
6401d1db:	add    edi,0x4
6401d1de:	mov    DWORD PTR [ebp-0x2c],edi
6401d1e1:	call   0x6401cae8
6401d1e6:	test   eax,eax
6401d1e8:	je     0x6401d5be
6401d1ee:	test   BYTE PTR [ebp-0x18],0x20
6401d1f2:	je     0x6401d1fd
6401d1f4:	mov    ax,WORD PTR [ebp-0x34]
6401d1f8:	mov    WORD PTR [esi],ax
6401d1fb:	jmp    0x6401d202
6401d1fd:	mov    eax,DWORD PTR [ebp-0x34]
6401d200:	mov    DWORD PTR [esi],eax
6401d202:	mov    DWORD PTR [ebp-0x68],0x1
6401d209:	jmp    0x6401d595
6401d20e:	or     DWORD PTR [ebp-0x18],0x40
6401d212:	mov    DWORD PTR [ebp-0x28],0xa
6401d219:	mov    ecx,DWORD PTR [ebp-0x18]
6401d21c:	test   cx,cx
6401d21f:	jns    0x6401d366
6401d225:	add    edi,esi
6401d227:	mov    eax,DWORD PTR [edi-0x8]
6401d22a:	mov    edx,DWORD PTR [edi-0x4]
6401d22d:	jmp    0x6401d39b
6401d232:	jne    0x6401d242
6401d234:	cmp    dl,0x67
6401d237:	jne    0x6401d281
6401d239:	mov    DWORD PTR [ebp-0x20],0x1
6401d240:	jmp    0x6401d281
6401d242:	cmp    DWORD PTR [ebp-0x20],eax
6401d245:	jle    0x6401d24a
6401d247:	mov    DWORD PTR [ebp-0x20],eax
6401d24a:	cmp    DWORD PTR [ebp-0x20],0xa3
6401d251:	jle    0x6401d281
6401d253:	mov    esi,DWORD PTR [ebp-0x20]
6401d256:	add    esi,0x15d
6401d25c:	push   esi
6401d25d:	call   0x64015d90
6401d262:	test   eax,eax
6401d264:	mov    dl,BYTE PTR [ebp-0x19]
6401d267:	pop    ecx
6401d268:	mov    DWORD PTR [ebp-0x60],eax
6401d26b:	push   0x8
6401d26d:	je     0x6401d279
6401d26f:	mov    DWORD PTR [ebp-0x24],eax
6401d272:	mov    DWORD PTR [ebp-0x6c],esi
6401d275:	mov    ebx,eax
6401d277:	jmp    0x6401d280
6401d279:	mov    DWORD PTR [ebp-0x20],0xa3
6401d280:	pop    esi
6401d281:	add    edi,esi
6401d283:	mov    eax,DWORD PTR [edi-0x8]
6401d286:	mov    DWORD PTR [ebp-0x80],eax
6401d289:	mov    eax,DWORD PTR [edi-0x4]
6401d28c:	mov    DWORD PTR [ebp-0x7c],eax
6401d28f:	lea    eax,[ebp-0x5c]
6401d292:	push   eax
6401d293:	push   DWORD PTR [ebp-0x74]
6401d296:	movsx  eax,dl
6401d299:	push   DWORD PTR [ebp-0x20]
6401d29c:	mov    DWORD PTR [ebp-0x2c],edi
6401d29f:	push   eax
6401d2a0:	push   DWORD PTR [ebp-0x6c]
6401d2a3:	lea    eax,[ebp-0x80]
6401d2a6:	push   ebx
6401d2a7:	push   eax
6401d2a8:	push   DWORD PTR ds:0x6402db64
6401d2ae:	call   0x640149af
6401d2b3:	pop    ecx
6401d2b4:	call   eax
6401d2b6:	mov    edi,DWORD PTR [ebp-0x18]
6401d2b9:	add    esp,0x1c
6401d2bc:	and    edi,0x80
6401d2c2:	je     0x6401d2df
6401d2c4:	cmp    DWORD PTR [ebp-0x20],0x0
6401d2c8:	jne    0x6401d2df
6401d2ca:	lea    eax,[ebp-0x5c]
6401d2cd:	push   eax
6401d2ce:	push   ebx
6401d2cf:	push   DWORD PTR ds:0x6402db70
6401d2d5:	call   0x640149af
6401d2da:	pop    ecx
6401d2db:	call   eax
6401d2dd:	pop    ecx
6401d2de:	pop    ecx
6401d2df:	cmp    BYTE PTR [ebp-0x19],0x67
6401d2e3:	jne    0x6401d2fe
6401d2e5:	test   edi,edi
6401d2e7:	jne    0x6401d2fe
6401d2e9:	lea    eax,[ebp-0x5c]
6401d2ec:	push   eax
6401d2ed:	push   ebx
6401d2ee:	push   DWORD PTR ds:0x6402db6c
6401d2f4:	call   0x640149af
6401d2f9:	pop    ecx
6401d2fa:	call   eax
6401d2fc:	pop    ecx
6401d2fd:	pop    ecx
6401d2fe:	cmp    BYTE PTR [ebx],0x2d
6401d301:	jne    0x6401d30e
6401d303:	or     DWORD PTR [ebp-0x18],0x100
6401d30a:	inc    ebx
6401d30b:	mov    DWORD PTR [ebp-0x24],ebx
6401d30e:	push   ebx
6401d30f:	jmp    0x6401d188
6401d314:	mov    DWORD PTR [ebp-0x20],esi
6401d317:	mov    DWORD PTR [ebp-0x64],ecx
6401d31a:	jmp    0x6401d33d
6401d31c:	sub    eax,0x73
6401d31f:	je     0x6401d09a
6401d325:	dec    eax
6401d326:	dec    eax
6401d327:	je     0x6401d212
6401d32d:	sub    eax,0x3
6401d330:	jne    0x6401d490
6401d336:	mov    DWORD PTR [ebp-0x64],0x27
6401d33d:	test   BYTE PTR [ebp-0x18],0x80
6401d341:	mov    DWORD PTR [ebp-0x28],0x10
6401d348:	je     0x6401d219
6401d34e:	mov    al,BYTE PTR [ebp-0x64]
6401d351:	add    al,0x51
6401d353:	mov    BYTE PTR [ebp-0x38],0x30
6401d357:	mov    BYTE PTR [ebp-0x37],al
6401d35a:	mov    DWORD PTR [ebp-0x3c],0x2
6401d361:	jmp    0x6401d219
6401d366:	test   cx,0x1000
6401d36b:	jne    0x6401d225
6401d371:	add    edi,0x4
6401d374:	test   cl,0x20
6401d377:	je     0x6401d38e
6401d379:	test   cl,0x40
6401d37c:	mov    DWORD PTR [ebp-0x2c],edi
6401d37f:	je     0x6401d387
6401d381:	movsx  eax,WORD PTR [edi-0x4]
6401d385:	jmp    0x6401d38b
6401d387:	movzx  eax,WORD PTR [edi-0x4]
6401d38b:	cdq    
6401d38c:	jmp    0x6401d39e
6401d38e:	test   cl,0x40
6401d391:	mov    eax,DWORD PTR [edi-0x4]
6401d394:	je     0x6401d399
6401d396:	cdq    
6401d397:	jmp    0x6401d39b
6401d399:	xor    edx,edx
6401d39b:	mov    DWORD PTR [ebp-0x2c],edi
6401d39e:	test   cl,0x40
6401d3a1:	je     0x6401d3bb
6401d3a3:	test   edx,edx
6401d3a5:	jg     0x6401d3bb
6401d3a7:	jl     0x6401d3ad
6401d3a9:	test   eax,eax
6401d3ab:	jae    0x6401d3bb
6401d3ad:	neg    eax
6401d3af:	adc    edx,0x0
6401d3b2:	neg    edx
6401d3b4:	or     DWORD PTR [ebp-0x18],0x100
6401d3bb:	test   WORD PTR [ebp-0x18],0x9000
6401d3c1:	mov    ebx,edx
6401d3c3:	mov    edi,eax
6401d3c5:	jne    0x6401d3c9
6401d3c7:	xor    ebx,ebx
6401d3c9:	cmp    DWORD PTR [ebp-0x20],0x0
6401d3cd:	jge    0x6401d3d8
6401d3cf:	mov    DWORD PTR [ebp-0x20],0x1
6401d3d6:	jmp    0x6401d3e9
6401d3d8:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401d3dc:	mov    eax,0x200
6401d3e1:	cmp    DWORD PTR [ebp-0x20],eax
6401d3e4:	jle    0x6401d3e9
6401d3e6:	mov    DWORD PTR [ebp-0x20],eax
6401d3e9:	mov    eax,edi
6401d3eb:	or     eax,ebx
6401d3ed:	jne    0x6401d3f2
6401d3ef:	and    DWORD PTR [ebp-0x3c],eax
6401d3f2:	lea    esi,[ebp+0x1eb]
6401d3f8:	mov    eax,DWORD PTR [ebp-0x20]
6401d3fb:	dec    DWORD PTR [ebp-0x20]
6401d3fe:	test   eax,eax
6401d400:	jg     0x6401d408
6401d402:	mov    eax,edi
6401d404:	or     eax,ebx
6401d406:	je     0x6401d42c
6401d408:	mov    eax,DWORD PTR [ebp-0x28]
6401d40b:	cdq    
6401d40c:	push   edx
6401d40d:	push   eax
6401d40e:	push   ebx
6401d40f:	push   edi
6401d410:	call   0x64019990
6401d415:	add    ecx,0x30
6401d418:	cmp    ecx,0x39
6401d41b:	mov    DWORD PTR [ebp-0x6c],ebx
6401d41e:	mov    edi,eax
6401d420:	mov    ebx,edx
6401d422:	jle    0x6401d427
6401d424:	add    ecx,DWORD PTR [ebp-0x64]
6401d427:	mov    BYTE PTR [esi],cl
6401d429:	dec    esi
6401d42a:	jmp    0x6401d3f8
6401d42c:	lea    eax,[ebp+0x1eb]
6401d432:	sub    eax,esi
6401d434:	inc    esi
6401d435:	test   WORD PTR [ebp-0x18],0x200
6401d43b:	mov    DWORD PTR [ebp-0x28],eax
6401d43e:	mov    DWORD PTR [ebp-0x24],esi
6401d441:	je     0x6401d490
6401d443:	test   eax,eax
6401d445:	je     0x6401d44e
6401d447:	mov    ecx,esi
6401d449:	cmp    BYTE PTR [ecx],0x30
6401d44c:	je     0x6401d490
6401d44e:	dec    DWORD PTR [ebp-0x24]
6401d451:	mov    ecx,DWORD PTR [ebp-0x24]
6401d454:	mov    BYTE PTR [ecx],0x30
6401d457:	inc    eax
6401d458:	jmp    0x6401d48d
6401d45a:	dec    ecx
6401d45b:	cmp    WORD PTR [eax],0x0
6401d45f:	je     0x6401d467
6401d461:	inc    eax
6401d462:	inc    eax
6401d463:	test   ecx,ecx
6401d465:	jne    0x6401d45a
6401d467:	sub    eax,DWORD PTR [ebp-0x24]
6401d46a:	sar    eax,1
6401d46c:	jmp    0x6401d48d
6401d46e:	test   edi,edi
6401d470:	jne    0x6401d47a
6401d472:	mov    eax,ds:0x6402d950
6401d477:	mov    DWORD PTR [ebp-0x24],eax
6401d47a:	mov    eax,DWORD PTR [ebp-0x24]
6401d47d:	jmp    0x6401d486
6401d47f:	dec    ecx
6401d480:	cmp    BYTE PTR [eax],0x0
6401d483:	je     0x6401d48a
6401d485:	inc    eax
6401d486:	test   ecx,ecx
6401d488:	jne    0x6401d47f
6401d48a:	sub    eax,DWORD PTR [ebp-0x24]
6401d48d:	mov    DWORD PTR [ebp-0x28],eax
6401d490:	cmp    DWORD PTR [ebp-0x68],0x0
6401d494:	jne    0x6401d595
6401d49a:	mov    eax,DWORD PTR [ebp-0x18]
6401d49d:	test   al,0x40
6401d49f:	je     0x6401d4c6
6401d4a1:	test   ax,0x100
6401d4a5:	je     0x6401d4ad
6401d4a7:	mov    BYTE PTR [ebp-0x38],0x2d
6401d4ab:	jmp    0x6401d4bf
6401d4ad:	test   al,0x1
6401d4af:	je     0x6401d4b7
6401d4b1:	mov    BYTE PTR [ebp-0x38],0x2b
6401d4b5:	jmp    0x6401d4bf
6401d4b7:	test   al,0x2
6401d4b9:	je     0x6401d4c6
6401d4bb:	mov    BYTE PTR [ebp-0x38],0x20
6401d4bf:	mov    DWORD PTR [ebp-0x3c],0x1
6401d4c6:	mov    ebx,DWORD PTR [ebp-0x40]
6401d4c9:	sub    ebx,DWORD PTR [ebp-0x28]
6401d4cc:	sub    ebx,DWORD PTR [ebp-0x3c]
6401d4cf:	test   BYTE PTR [ebp-0x18],0xc
6401d4d3:	jne    0x6401d4e6
6401d4d5:	push   DWORD PTR [ebp-0x30]
6401d4d8:	lea    eax,[ebp-0x34]
6401d4db:	push   ebx
6401d4dc:	push   0x20
6401d4de:	call   0x6401cc5b
6401d4e3:	add    esp,0xc
6401d4e6:	push   DWORD PTR [ebp-0x3c]
6401d4e9:	mov    edi,DWORD PTR [ebp-0x30]
6401d4ec:	lea    eax,[ebp-0x34]
6401d4ef:	lea    ecx,[ebp-0x38]
6401d4f2:	call   0x64018e5a
6401d4f7:	test   BYTE PTR [ebp-0x18],0x8
6401d4fb:	pop    ecx
6401d4fc:	je     0x6401d513
6401d4fe:	test   BYTE PTR [ebp-0x18],0x4
6401d502:	jne    0x6401d513
6401d504:	push   edi
6401d505:	push   ebx
6401d506:	push   0x30
6401d508:	lea    eax,[ebp-0x34]
6401d50b:	call   0x6401cc5b
6401d510:	add    esp,0xc
6401d513:	cmp    DWORD PTR [ebp-0x44],0x0
6401d517:	mov    eax,DWORD PTR [ebp-0x28]
6401d51a:	je     0x6401d56d
6401d51c:	test   eax,eax
6401d51e:	jle    0x6401d56d
6401d520:	mov    esi,DWORD PTR [ebp-0x24]
6401d523:	mov    DWORD PTR [ebp-0x6c],eax
6401d526:	movzx  eax,WORD PTR [esi]
6401d529:	dec    DWORD PTR [ebp-0x6c]
6401d52c:	push   eax
6401d52d:	push   0x6
6401d52f:	lea    eax,[ebp+0x1ec]
6401d535:	push   eax
6401d536:	lea    eax,[ebp-0x78]
6401d539:	inc    esi
6401d53a:	push   eax
6401d53b:	inc    esi
6401d53c:	call   0x6401daa8
6401d541:	add    esp,0x10
6401d544:	test   eax,eax
6401d546:	jne    0x6401d567
6401d548:	cmp    DWORD PTR [ebp-0x78],eax
6401d54b:	je     0x6401d567
6401d54d:	push   DWORD PTR [ebp-0x78]
6401d550:	lea    eax,[ebp-0x34]
6401d553:	lea    ecx,[ebp+0x1ec]
6401d559:	call   0x64018e5a
6401d55e:	cmp    DWORD PTR [ebp-0x6c],0x0
6401d562:	pop    ecx
6401d563:	jne    0x6401d526
6401d565:	jmp    0x6401d57a
6401d567:	or     DWORD PTR [ebp-0x34],0xffffffff
6401d56b:	jmp    0x6401d57a
6401d56d:	mov    ecx,DWORD PTR [ebp-0x24]
6401d570:	push   eax
6401d571:	lea    eax,[ebp-0x34]
6401d574:	call   0x64018e5a
6401d579:	pop    ecx
6401d57a:	cmp    DWORD PTR [ebp-0x34],0x0
6401d57e:	jl     0x6401d595
6401d580:	test   BYTE PTR [ebp-0x18],0x4
6401d584:	je     0x6401d595
6401d586:	push   edi
6401d587:	push   ebx
6401d588:	push   0x20
6401d58a:	lea    eax,[ebp-0x34]
6401d58d:	call   0x6401cc5b
6401d592:	add    esp,0xc
6401d595:	cmp    DWORD PTR [ebp-0x60],0x0
6401d599:	je     0x6401d5a8
6401d59b:	push   DWORD PTR [ebp-0x60]
6401d59e:	call   0x64013956
6401d5a3:	and    DWORD PTR [ebp-0x60],0x0
6401d5a7:	pop    ecx
6401d5a8:	mov    ebx,DWORD PTR [ebp-0x4c]
6401d5ab:	mov    al,BYTE PTR [ebx]
6401d5ad:	test   al,al
6401d5af:	mov    BYTE PTR [ebp-0x19],al
6401d5b2:	je     0x6401d5d5
6401d5b4:	mov    edi,DWORD PTR [ebp-0x2c]
6401d5b7:	mov    dl,al
6401d5b9:	jmp    0x6401cdde
6401d5be:	call   0x64014880
6401d5c3:	mov    DWORD PTR [eax],0x16
6401d5c9:	xor    eax,eax
6401d5cb:	push   eax
6401d5cc:	push   eax
6401d5cd:	push   eax
6401d5ce:	push   eax
6401d5cf:	push   eax
6401d5d0:	jmp    0x6401ccef
6401d5d5:	xor    esi,esi
6401d5d7:	cmp    DWORD PTR [ebp-0x48],esi
6401d5da:	je     0x6401d5e6
6401d5dc:	cmp    DWORD PTR [ebp-0x48],0x7
6401d5e0:	jne    0x6401ccdf
6401d5e6:	cmp    BYTE PTR [ebp-0x50],0x0
6401d5ea:	je     0x6401d5f3
6401d5ec:	mov    eax,DWORD PTR [ebp-0x54]
6401d5ef:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d5f3:	mov    eax,DWORD PTR [ebp-0x34]
6401d5f6:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401d5fc:	pop    edi
6401d5fd:	pop    esi
6401d5fe:	xor    ecx,ebp
6401d600:	pop    ebx
6401d601:	call   0x64012abc
6401d606:	add    ebp,0x1f8
6401d60c:	leave  
6401d60d:	ret    
6401d60e:	nop
6401d60f:	ror    bh,1
6401d611:	add    DWORD PTR [ebp+esi*1-0x32],esp
6401d615:	add    DWORD PTR [edx+edx*2-0x32],esp
6401d619:	add    DWORD PTR [edi+ebx*4-0x32],esp
6401d61d:	add    DWORD PTR [ecx+ebx*8-0x32],esp
6401d621:	add    DWORD PTR [edx+eiz*8-0x32],esp
6401d625:	add    DWORD PTR [ecx+ebx*1-0x31],esp
6401d629:	add    DWORD PTR [ebx+edx*1-0x30],esp
6401d62d:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d631:	in     al,dx
6401d632:	sub    esp,0xc
6401d635:	mov    eax,ds:0x6402d09c
6401d63a:	xor    eax,ebp
6401d63c:	mov    DWORD PTR [ebp-0x4],eax
6401d63f:	push   0x6
6401d641:	lea    eax,[ebp-0xc]
6401d644:	push   eax
6401d645:	push   0x1004
6401d64a:	push   DWORD PTR [ebp+0x8]
6401d64d:	mov    BYTE PTR [ebp-0x6],0x0
6401d651:	call   DWORD PTR ds:0x640250ec
6401d657:	test   eax,eax
6401d659:	jne    0x6401d660
6401d65b:	or     eax,0xffffffff
6401d65e:	jmp    0x6401d66a
6401d660:	lea    eax,[ebp-0xc]
6401d663:	push   eax
6401d664:	call   0x6401dd04
6401d669:	pop    ecx
6401d66a:	mov    ecx,DWORD PTR [ebp-0x4]
6401d66d:	xor    ecx,ebp
6401d66f:	call   0x64012abc
6401d674:	leave  
6401d675:	ret    
6401d676:	push   ebp
6401d677:	mov    ebp,esp
6401d679:	sub    esp,0x34
6401d67c:	mov    eax,ds:0x6402d09c
6401d681:	xor    eax,ebp
6401d683:	mov    DWORD PTR [ebp-0x4],eax
6401d686:	mov    eax,DWORD PTR [ebp+0x10]
6401d689:	mov    ecx,DWORD PTR [ebp+0x18]
6401d68c:	mov    DWORD PTR [ebp-0x28],eax
6401d68f:	mov    eax,DWORD PTR [ebp+0x14]
6401d692:	push   ebx
6401d693:	mov    DWORD PTR [ebp-0x30],eax
6401d696:	mov    eax,DWORD PTR [eax]
6401d698:	push   esi
6401d699:	mov    DWORD PTR [ebp-0x24],eax
6401d69c:	mov    eax,DWORD PTR [ebp+0x8]
6401d69f:	push   edi
6401d6a0:	xor    edi,edi
6401d6a2:	cmp    eax,DWORD PTR [ebp+0xc]
6401d6a5:	mov    DWORD PTR [ebp-0x34],ecx
6401d6a8:	mov    DWORD PTR [ebp-0x20],edi
6401d6ab:	mov    DWORD PTR [ebp-0x2c],edi
6401d6ae:	je     0x6401d813
6401d6b4:	mov    esi,DWORD PTR ds:0x64025148
6401d6ba:	lea    ecx,[ebp-0x18]
6401d6bd:	push   ecx
6401d6be:	push   eax
6401d6bf:	call   esi
6401d6c1:	test   eax,eax
6401d6c3:	mov    ebx,DWORD PTR ds:0x64025024
6401d6c9:	je     0x6401d729
6401d6cb:	cmp    DWORD PTR [ebp-0x18],0x1
6401d6cf:	jne    0x6401d729
6401d6d1:	lea    eax,[ebp-0x18]
6401d6d4:	push   eax
6401d6d5:	push   DWORD PTR [ebp+0xc]
6401d6d8:	call   esi
6401d6da:	test   eax,eax
6401d6dc:	je     0x6401d729
6401d6de:	cmp    DWORD PTR [ebp-0x18],0x1
6401d6e2:	jne    0x6401d729
6401d6e4:	mov    esi,DWORD PTR [ebp-0x24]
6401d6e7:	cmp    esi,0xffffffff
6401d6ea:	mov    DWORD PTR [ebp-0x2c],0x1
6401d6f1:	jne    0x6401d6ff
6401d6f3:	push   DWORD PTR [ebp-0x28]
6401d6f6:	call   0x64014280
6401d6fb:	mov    esi,eax
6401d6fd:	pop    ecx
6401d6fe:	inc    esi
6401d6ff:	cmp    esi,edi
6401d701:	jle    0x6401d75e
6401d703:	cmp    esi,0x7ffffff0
6401d709:	ja     0x6401d75e
6401d70b:	lea    eax,[esi+esi*1+0x8]
6401d70f:	cmp    eax,0x400
6401d714:	ja     0x6401d745
6401d716:	call   0x64013240
6401d71b:	mov    eax,esp
6401d71d:	cmp    eax,edi
6401d71f:	je     0x6401d759
6401d721:	mov    DWORD PTR [eax],0xcccc
6401d727:	jmp    0x6401d756
6401d729:	push   edi
6401d72a:	push   edi
6401d72b:	push   DWORD PTR [ebp-0x24]
6401d72e:	push   DWORD PTR [ebp-0x28]
6401d731:	push   0x1
6401d733:	push   DWORD PTR [ebp+0x8]
6401d736:	call   ebx
6401d738:	mov    esi,eax
6401d73a:	cmp    esi,edi
6401d73c:	jne    0x6401d701
6401d73e:	xor    eax,eax
6401d740:	jmp    0x6401d816
6401d745:	push   eax
6401d746:	call   0x64013a33
6401d74b:	cmp    eax,edi
6401d74d:	pop    ecx
6401d74e:	je     0x6401d759
6401d750:	mov    DWORD PTR [eax],0xdddd
6401d756:	add    eax,0x8
6401d759:	mov    DWORD PTR [ebp-0x1c],eax
6401d75c:	jmp    0x6401d761
6401d75e:	mov    DWORD PTR [ebp-0x1c],edi
6401d761:	cmp    DWORD PTR [ebp-0x1c],edi
6401d764:	je     0x6401d73e
6401d766:	lea    eax,[esi+esi*1]
6401d769:	push   eax
6401d76a:	push   edi
6401d76b:	push   DWORD PTR [ebp-0x1c]
6401d76e:	call   0x640131c0
6401d773:	add    esp,0xc
6401d776:	push   esi
6401d777:	push   DWORD PTR [ebp-0x1c]
6401d77a:	push   DWORD PTR [ebp-0x24]
6401d77d:	push   DWORD PTR [ebp-0x28]
6401d780:	push   0x1
6401d782:	push   DWORD PTR [ebp+0x8]
6401d785:	call   ebx
6401d787:	test   eax,eax
6401d789:	je     0x6401d80a
6401d78b:	mov    ebx,DWORD PTR [ebp-0x34]
6401d78e:	cmp    ebx,edi
6401d790:	je     0x6401d7af
6401d792:	push   edi
6401d793:	push   edi
6401d794:	push   DWORD PTR [ebp+0x1c]
6401d797:	push   ebx
6401d798:	push   esi
6401d799:	push   DWORD PTR [ebp-0x1c]
6401d79c:	push   edi
6401d79d:	push   DWORD PTR [ebp+0xc]
6401d7a0:	call   DWORD PTR ds:0x64025028
6401d7a6:	test   eax,eax
6401d7a8:	je     0x6401d80a
6401d7aa:	mov    DWORD PTR [ebp-0x20],ebx
6401d7ad:	jmp    0x6401d80a
6401d7af:	cmp    DWORD PTR [ebp-0x2c],edi
6401d7b2:	mov    ebx,DWORD PTR ds:0x64025028
6401d7b8:	jne    0x6401d7ce
6401d7ba:	push   edi
6401d7bb:	push   edi
6401d7bc:	push   edi
6401d7bd:	push   edi
6401d7be:	push   esi
6401d7bf:	push   DWORD PTR [ebp-0x1c]
6401d7c2:	push   edi
6401d7c3:	push   DWORD PTR [ebp+0xc]
6401d7c6:	call   ebx
6401d7c8:	mov    esi,eax
6401d7ca:	cmp    esi,edi
6401d7cc:	je     0x6401d80a
6401d7ce:	push   esi
6401d7cf:	push   0x1
6401d7d1:	call   0x64015dd0
6401d7d6:	cmp    eax,edi
6401d7d8:	pop    ecx
6401d7d9:	pop    ecx
6401d7da:	mov    DWORD PTR [ebp-0x20],eax
6401d7dd:	je     0x6401d80a
6401d7df:	push   edi
6401d7e0:	push   edi
6401d7e1:	push   esi
6401d7e2:	push   eax
6401d7e3:	push   esi
6401d7e4:	push   DWORD PTR [ebp-0x1c]
6401d7e7:	push   edi
6401d7e8:	push   DWORD PTR [ebp+0xc]
6401d7eb:	call   ebx
6401d7ed:	cmp    eax,edi
6401d7ef:	jne    0x6401d7ff
6401d7f1:	push   DWORD PTR [ebp-0x20]
6401d7f4:	call   0x64013956
6401d7f9:	pop    ecx
6401d7fa:	mov    DWORD PTR [ebp-0x20],edi
6401d7fd:	jmp    0x6401d80a
6401d7ff:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401d803:	je     0x6401d80a
6401d805:	mov    ecx,DWORD PTR [ebp-0x30]
6401d808:	mov    DWORD PTR [ecx],eax
6401d80a:	push   DWORD PTR [ebp-0x1c]
6401d80d:	call   0x64012fcc
6401d812:	pop    ecx
6401d813:	mov    eax,DWORD PTR [ebp-0x20]
6401d816:	lea    esp,[ebp-0x40]
6401d819:	pop    edi
6401d81a:	pop    esi
6401d81b:	pop    ebx
6401d81c:	mov    ecx,DWORD PTR [ebp-0x4]
6401d81f:	xor    ecx,ebp
6401d821:	call   0x64012abc
6401d826:	leave  
6401d827:	ret    
6401d828:	push   0xc
6401d82a:	push   0x6402a958
6401d82f:	call   0x64014080
6401d834:	and    DWORD PTR [ebp-0x4],0x0
6401d838:	movapd xmm0,xmm1
6401d83c:	mov    DWORD PTR [ebp-0x1c],0x1
6401d843:	jmp    0x6401d868
6401d845:	mov    eax,DWORD PTR [ebp-0x14]
6401d848:	mov    eax,DWORD PTR [eax]
6401d84a:	mov    eax,DWORD PTR [eax]
6401d84c:	cmp    eax,0xc0000005
6401d851:	je     0x6401d85d
6401d853:	cmp    eax,0xc000001d
6401d858:	je     0x6401d85d
6401d85a:	xor    eax,eax
6401d85c:	ret    
6401d85d:	xor    eax,eax
6401d85f:	inc    eax
6401d860:	ret    
6401d861:	mov    esp,DWORD PTR [ebp-0x18]
6401d864:	and    DWORD PTR [ebp-0x1c],0x0
6401d868:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401d86f:	mov    eax,DWORD PTR [ebp-0x1c]
6401d872:	call   0x640140c5
6401d877:	ret    
6401d878:	push   ebp
6401d879:	mov    ebp,esp
6401d87b:	sub    esp,0x18
6401d87e:	xor    eax,eax
6401d880:	push   ebx
6401d881:	mov    DWORD PTR [ebp-0x4],eax
6401d884:	mov    DWORD PTR [ebp-0xc],eax
6401d887:	mov    DWORD PTR [ebp-0x8],eax
6401d88a:	push   ebx
6401d88b:	pushf  
6401d88c:	pop    eax
6401d88d:	mov    ecx,eax
6401d88f:	xor    eax,0x200000
6401d894:	push   eax
6401d895:	popf   
6401d896:	pushf  
6401d897:	pop    edx
6401d898:	sub    edx,ecx
6401d89a:	je     0x6401d8bb
6401d89c:	push   ecx
6401d89d:	popf   
6401d89e:	xor    eax,eax
6401d8a0:	cpuid  
6401d8a2:	mov    DWORD PTR [ebp-0xc],eax
6401d8a5:	mov    DWORD PTR [ebp-0x18],ebx
6401d8a8:	mov    DWORD PTR [ebp-0x14],edx
6401d8ab:	mov    DWORD PTR [ebp-0x10],ecx
6401d8ae:	mov    eax,0x1
6401d8b3:	cpuid  
6401d8b5:	mov    DWORD PTR [ebp-0x4],edx
6401d8b8:	mov    DWORD PTR [ebp-0x8],eax
6401d8bb:	pop    ebx
6401d8bc:	test   DWORD PTR [ebp-0x4],0x4000000
6401d8c3:	je     0x6401d8d3
6401d8c5:	call   0x6401d828
6401d8ca:	test   eax,eax
6401d8cc:	je     0x6401d8d3
6401d8ce:	xor    eax,eax
6401d8d0:	inc    eax
6401d8d1:	jmp    0x6401d8d5
6401d8d3:	xor    eax,eax
6401d8d5:	pop    ebx
6401d8d6:	leave  
6401d8d7:	ret    
6401d8d8:	call   0x6401d878
6401d8dd:	mov    ds:0x64032604,eax
6401d8e2:	xor    eax,eax
6401d8e4:	ret    
6401d8e5:	push   ebp
6401d8e6:	mov    ebp,esp
6401d8e8:	sub    esp,0x10
6401d8eb:	push   DWORD PTR [ebp+0x8]
6401d8ee:	lea    ecx,[ebp-0x10]
6401d8f1:	call   0x64012c5f
6401d8f6:	movzx  eax,BYTE PTR [ebp+0xc]
6401d8fa:	mov    ecx,DWORD PTR [ebp-0xc]
6401d8fd:	mov    dl,BYTE PTR [ebp+0x14]
6401d900:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401d904:	jne    0x6401d924
6401d906:	cmp    DWORD PTR [ebp+0x10],0x0
6401d90a:	je     0x6401d91e
6401d90c:	mov    ecx,DWORD PTR [ebp-0x10]
6401d90f:	mov    ecx,DWORD PTR [ecx+0xc8]
6401d915:	movzx  eax,WORD PTR [ecx+eax*2]
6401d919:	and    eax,DWORD PTR [ebp+0x10]
6401d91c:	jmp    0x6401d920
6401d91e:	xor    eax,eax
6401d920:	test   eax,eax
6401d922:	je     0x6401d927
6401d924:	xor    eax,eax
6401d926:	inc    eax
6401d927:	cmp    BYTE PTR [ebp-0x4],0x0
6401d92b:	je     0x6401d934
6401d92d:	mov    ecx,DWORD PTR [ebp-0x8]
6401d930:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d934:	leave  
6401d935:	ret    
6401d936:	push   0x4
6401d938:	push   0x0
6401d93a:	push   DWORD PTR [esp+0xc]
6401d93e:	push   0x0
6401d940:	call   0x6401d8e5
6401d945:	add    esp,0x10
6401d948:	ret    
6401d949:	push   ebp
6401d94a:	mov    ebp,esp
6401d94c:	sub    esp,0x10
6401d94f:	push   ebx
6401d950:	push   esi
6401d951:	mov    esi,DWORD PTR [ebp+0xc]
6401d954:	xor    ebx,ebx
6401d956:	cmp    esi,ebx
6401d958:	push   edi
6401d959:	mov    edi,DWORD PTR [ebp+0x10]
6401d95c:	jne    0x6401d96f
6401d95e:	cmp    edi,ebx
6401d960:	jbe    0x6401d96f
6401d962:	mov    eax,DWORD PTR [ebp+0x8]
6401d965:	cmp    eax,ebx
6401d967:	je     0x6401d96b
6401d969:	mov    DWORD PTR [eax],ebx
6401d96b:	xor    eax,eax
6401d96d:	jmp    0x6401d9ee
6401d96f:	mov    eax,DWORD PTR [ebp+0x8]
6401d972:	cmp    eax,ebx
6401d974:	je     0x6401d979
6401d976:	or     DWORD PTR [eax],0xffffffff
6401d979:	cmp    edi,0x7fffffff
6401d97f:	jbe    0x6401d99c
6401d981:	call   0x64014880
6401d986:	push   0x16
6401d988:	pop    esi
6401d989:	push   ebx
6401d98a:	push   ebx
6401d98b:	push   ebx
6401d98c:	push   ebx
6401d98d:	push   ebx
6401d98e:	mov    DWORD PTR [eax],esi
6401d990:	call   0x640125f4
6401d995:	add    esp,0x14
6401d998:	mov    eax,esi
6401d99a:	jmp    0x6401d9ee
6401d99c:	push   DWORD PTR [ebp+0x18]
6401d99f:	lea    ecx,[ebp-0x10]
6401d9a2:	call   0x64012c5f
6401d9a7:	mov    eax,DWORD PTR [ebp-0x10]
6401d9aa:	cmp    DWORD PTR [eax+0x14],ebx
6401d9ad:	jne    0x6401da47
6401d9b3:	mov    ax,WORD PTR [ebp+0x14]
6401d9b7:	cmp    ax,0xff
6401d9bb:	jbe    0x6401d9f3
6401d9bd:	cmp    esi,ebx
6401d9bf:	je     0x6401d9d0
6401d9c1:	cmp    edi,ebx
6401d9c3:	jbe    0x6401d9d0
6401d9c5:	push   edi
6401d9c6:	push   ebx
6401d9c7:	push   esi
6401d9c8:	call   0x640131c0
6401d9cd:	add    esp,0xc
6401d9d0:	call   0x64014880
6401d9d5:	mov    DWORD PTR [eax],0x2a
6401d9db:	call   0x64014880
6401d9e0:	cmp    BYTE PTR [ebp-0x4],bl
6401d9e3:	mov    eax,DWORD PTR [eax]
6401d9e5:	je     0x6401d9ee
6401d9e7:	mov    ecx,DWORD PTR [ebp-0x8]
6401d9ea:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d9ee:	pop    edi
6401d9ef:	pop    esi
6401d9f0:	pop    ebx
6401d9f1:	leave  
6401d9f2:	ret    
6401d9f3:	cmp    esi,ebx
6401d9f5:	je     0x6401da25
6401d9f7:	cmp    edi,ebx
6401d9f9:	ja     0x6401da23
6401d9fb:	call   0x64014880
6401da00:	push   0x22
6401da02:	pop    esi
6401da03:	push   ebx
6401da04:	push   ebx
6401da05:	push   ebx
6401da06:	push   ebx
6401da07:	push   ebx
6401da08:	mov    DWORD PTR [eax],esi
6401da0a:	call   0x640125f4
6401da0f:	add    esp,0x14
6401da12:	cmp    BYTE PTR [ebp-0x4],bl
6401da15:	je     0x6401d998
6401da17:	mov    eax,DWORD PTR [ebp-0x8]
6401da1a:	and    DWORD PTR [eax+0x70],0xfffffffd
6401da1e:	jmp    0x6401d998
6401da23:	mov    BYTE PTR [esi],al
6401da25:	mov    eax,DWORD PTR [ebp+0x8]
6401da28:	cmp    eax,ebx
6401da2a:	je     0x6401da32
6401da2c:	mov    DWORD PTR [eax],0x1
6401da32:	cmp    BYTE PTR [ebp-0x4],bl
6401da35:	je     0x6401d96b
6401da3b:	mov    eax,DWORD PTR [ebp-0x8]
6401da3e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401da42:	jmp    0x6401d96b
6401da47:	lea    ecx,[ebp+0xc]
6401da4a:	push   ecx
6401da4b:	push   ebx
6401da4c:	push   edi
6401da4d:	push   esi
6401da4e:	push   0x1
6401da50:	lea    ecx,[ebp+0x14]
6401da53:	push   ecx
6401da54:	push   ebx
6401da55:	mov    DWORD PTR [ebp+0xc],ebx
6401da58:	push   DWORD PTR [eax+0x4]
6401da5b:	call   DWORD PTR ds:0x64025028
6401da61:	cmp    eax,ebx
6401da63:	je     0x6401da79
6401da65:	cmp    DWORD PTR [ebp+0xc],ebx
6401da68:	jne    0x6401d9d0
6401da6e:	mov    ecx,DWORD PTR [ebp+0x8]
6401da71:	cmp    ecx,ebx
6401da73:	je     0x6401da32
6401da75:	mov    DWORD PTR [ecx],eax
6401da77:	jmp    0x6401da32
6401da79:	call   DWORD PTR ds:0x64025044
6401da7f:	cmp    eax,0x7a
6401da82:	jne    0x6401d9d0
6401da88:	cmp    esi,ebx
6401da8a:	je     0x6401d9fb
6401da90:	cmp    edi,ebx
6401da92:	jbe    0x6401d9fb
6401da98:	push   edi
6401da99:	push   ebx
6401da9a:	push   esi
6401da9b:	call   0x640131c0
6401daa0:	add    esp,0xc
6401daa3:	jmp    0x6401d9fb
6401daa8:	push   0x0
6401daaa:	push   DWORD PTR [esp+0x14]
6401daae:	push   DWORD PTR [esp+0x14]
6401dab2:	push   DWORD PTR [esp+0x14]
6401dab6:	push   DWORD PTR [esp+0x14]
6401daba:	call   0x6401d949
6401dabf:	add    esp,0x14
6401dac2:	ret    
6401dac3:	push   ebp
6401dac4:	mov    ebp,esp
6401dac6:	sub    esp,0x20
6401dac9:	push   ebx
6401daca:	push   esi
6401dacb:	push   edi
6401dacc:	call   0x640149a6
6401dad1:	xor    ebx,ebx
6401dad3:	cmp    DWORD PTR ds:0x6402ef5c,ebx
6401dad9:	mov    DWORD PTR [ebp-0x8],eax
6401dadc:	mov    DWORD PTR [ebp-0x4],ebx
6401dadf:	mov    DWORD PTR [ebp-0xc],ebx
6401dae2:	mov    DWORD PTR [ebp-0x10],ebx
6401dae5:	jne    0x6401db99
6401daeb:	push   0x640275a0
6401daf0:	call   DWORD PTR ds:0x640250c4
6401daf6:	mov    edi,eax
6401daf8:	cmp    edi,ebx
6401dafa:	je     0x6401dc79
6401db00:	mov    esi,DWORD PTR ds:0x64025014
6401db06:	push   0x64027594
6401db0b:	push   edi
6401db0c:	call   esi
6401db0e:	cmp    eax,ebx
6401db10:	je     0x6401dc79
6401db16:	push   eax
6401db17:	call   0x64014938
6401db1c:	mov    DWORD PTR [esp],0x64027584
6401db23:	push   edi
6401db24:	mov    ds:0x6402ef5c,eax
6401db29:	call   esi
6401db2b:	push   eax
6401db2c:	call   0x64014938
6401db31:	mov    DWORD PTR [esp],0x64027570
6401db38:	push   edi
6401db39:	mov    ds:0x6402ef60,eax
6401db3e:	call   esi
6401db40:	push   eax
6401db41:	call   0x64014938
6401db46:	mov    ds:0x6402ef64,eax
6401db4b:	lea    eax,[ebp-0xc]
6401db4e:	push   eax
6401db4f:	call   0x64015faf
6401db54:	test   eax,eax
6401db56:	pop    ecx
6401db57:	pop    ecx
6401db58:	je     0x6401db67
6401db5a:	push   ebx
6401db5b:	push   ebx
6401db5c:	push   ebx
6401db5d:	push   ebx
6401db5e:	push   ebx
6401db5f:	call   0x640124f8
6401db64:	add    esp,0x14
6401db67:	cmp    DWORD PTR [ebp-0xc],0x2
6401db6b:	jne    0x6401db99
6401db6d:	push   0x64027554
6401db72:	push   edi
6401db73:	call   esi
6401db75:	push   eax
6401db76:	call   0x64014938
6401db7b:	cmp    eax,ebx
6401db7d:	pop    ecx
6401db7e:	mov    ds:0x6402ef6c,eax
6401db83:	je     0x6401db99
6401db85:	push   0x6402753c
6401db8a:	push   edi
6401db8b:	call   esi
6401db8d:	push   eax
6401db8e:	call   0x64014938
6401db93:	pop    ecx
6401db94:	mov    ds:0x6402ef68,eax
6401db99:	mov    eax,ds:0x6402ef68
6401db9e:	mov    ecx,DWORD PTR [ebp-0x8]
6401dba1:	cmp    eax,ecx
6401dba3:	je     0x6401dc1e
6401dba5:	cmp    DWORD PTR ds:0x6402ef6c,ecx
6401dbab:	je     0x6401dc1e
6401dbad:	push   eax
6401dbae:	call   0x640149af
6401dbb3:	push   DWORD PTR ds:0x6402ef6c
6401dbb9:	mov    esi,eax
6401dbbb:	call   0x640149af
6401dbc0:	cmp    esi,ebx
6401dbc2:	pop    ecx
6401dbc3:	pop    ecx
6401dbc4:	mov    edi,eax
6401dbc6:	je     0x6401dc1e
6401dbc8:	cmp    edi,ebx
6401dbca:	je     0x6401dc1e
6401dbcc:	call   esi
6401dbce:	cmp    eax,ebx
6401dbd0:	je     0x6401dbeb
6401dbd2:	lea    ecx,[ebp-0x14]
6401dbd5:	push   ecx
6401dbd6:	push   0xc
6401dbd8:	lea    ecx,[ebp-0x20]
6401dbdb:	push   ecx
6401dbdc:	push   0x1
6401dbde:	push   eax
6401dbdf:	call   edi
6401dbe1:	test   eax,eax
6401dbe3:	je     0x6401dbeb
6401dbe5:	test   BYTE PTR [ebp-0x18],0x1
6401dbe9:	jne    0x6401dc1e
6401dbeb:	lea    eax,[ebp-0x10]
6401dbee:	push   eax
6401dbef:	call   0x64015fe6
6401dbf4:	test   eax,eax
6401dbf6:	pop    ecx
6401dbf7:	je     0x6401dc06
6401dbf9:	push   ebx
6401dbfa:	push   ebx
6401dbfb:	push   ebx
6401dbfc:	push   ebx
6401dbfd:	push   ebx
6401dbfe:	call   0x640124f8
6401dc03:	add    esp,0x14
6401dc06:	cmp    DWORD PTR [ebp-0x10],0x4
6401dc0a:	jb     0x6401dc15
6401dc0c:	or     DWORD PTR [ebp+0x10],0x200000
6401dc13:	jmp    0x6401dc59
6401dc15:	or     DWORD PTR [ebp+0x10],0x40000
6401dc1c:	jmp    0x6401dc59
6401dc1e:	mov    eax,ds:0x6402ef60
6401dc23:	cmp    eax,DWORD PTR [ebp-0x8]
6401dc26:	je     0x6401dc59
6401dc28:	push   eax
6401dc29:	call   0x640149af
6401dc2e:	cmp    eax,ebx
6401dc30:	pop    ecx
6401dc31:	je     0x6401dc59
6401dc33:	call   eax
6401dc35:	cmp    eax,ebx
6401dc37:	mov    DWORD PTR [ebp-0x4],eax
6401dc3a:	je     0x6401dc59
6401dc3c:	mov    eax,ds:0x6402ef64
6401dc41:	cmp    eax,DWORD PTR [ebp-0x8]
6401dc44:	je     0x6401dc59
6401dc46:	push   eax
6401dc47:	call   0x640149af
6401dc4c:	cmp    eax,ebx
6401dc4e:	pop    ecx
6401dc4f:	je     0x6401dc59
6401dc51:	push   DWORD PTR [ebp-0x4]
6401dc54:	call   eax
6401dc56:	mov    DWORD PTR [ebp-0x4],eax
6401dc59:	push   DWORD PTR ds:0x6402ef5c
6401dc5f:	call   0x640149af
6401dc64:	cmp    eax,ebx
6401dc66:	pop    ecx
6401dc67:	je     0x6401dc79
6401dc69:	push   DWORD PTR [ebp+0x10]
6401dc6c:	push   DWORD PTR [ebp+0xc]
6401dc6f:	push   DWORD PTR [ebp+0x8]
6401dc72:	push   DWORD PTR [ebp-0x4]
6401dc75:	call   eax
6401dc77:	jmp    0x6401dc7b
6401dc79:	xor    eax,eax
6401dc7b:	pop    edi
6401dc7c:	pop    esi
6401dc7d:	pop    ebx
6401dc7e:	leave  
6401dc7f:	ret    
6401dc80:	mov    ecx,DWORD PTR [esp+0x4]
6401dc84:	push   esi
6401dc85:	xor    esi,esi
6401dc87:	cmp    ecx,esi
6401dc89:	jl     0x6401dca9
6401dc8b:	cmp    ecx,0x2
6401dc8e:	jle    0x6401dc9c
6401dc90:	cmp    ecx,0x3
6401dc93:	jne    0x6401dca9
6401dc95:	mov    eax,ds:0x6402e57c
6401dc9a:	pop    esi
6401dc9b:	ret    
6401dc9c:	mov    eax,ds:0x6402e57c
6401dca1:	mov    DWORD PTR ds:0x6402e57c,ecx
6401dca7:	pop    esi
6401dca8:	ret    
6401dca9:	call   0x64014880
6401dcae:	push   esi
6401dcaf:	push   esi
6401dcb0:	push   esi
6401dcb1:	push   esi
6401dcb2:	push   esi
6401dcb3:	mov    DWORD PTR [eax],0x16
6401dcb9:	call   0x640125f4
6401dcbe:	add    esp,0x14
6401dcc1:	or     eax,0xffffffff
6401dcc4:	pop    esi
6401dcc5:	ret    
6401dcc6:	int3   
6401dcc7:	int3   
6401dcc8:	int3   
6401dcc9:	int3   
6401dcca:	int3   
6401dccb:	int3   
6401dccc:	int3   
6401dccd:	int3   
6401dcce:	int3   
6401dccf:	int3   
6401dcd0:	mov    eax,DWORD PTR [esp+0x8]
6401dcd4:	mov    ecx,DWORD PTR [esp+0x10]
6401dcd8:	or     ecx,eax
6401dcda:	mov    ecx,DWORD PTR [esp+0xc]
6401dcde:	jne    0x6401dce9
6401dce0:	mov    eax,DWORD PTR [esp+0x4]
6401dce4:	mul    ecx
6401dce6:	ret    0x10
6401dce9:	push   ebx
6401dcea:	mul    ecx
6401dcec:	mov    ebx,eax
6401dcee:	mov    eax,DWORD PTR [esp+0x8]
6401dcf2:	mul    DWORD PTR [esp+0x14]
6401dcf6:	add    ebx,eax
6401dcf8:	mov    eax,DWORD PTR [esp+0x8]
6401dcfc:	mul    ecx
6401dcfe:	add    edx,ebx
6401dd00:	pop    ebx
6401dd01:	ret    0x10
6401dd04:	push   0xa
6401dd06:	push   0x0
6401dd08:	push   DWORD PTR [esp+0xc]
6401dd0c:	call   0x6401e558
6401dd11:	add    esp,0xc
6401dd14:	ret    
6401dd15:	push   0x2
6401dd17:	call   0x64015f06
6401dd1c:	pop    ecx
6401dd1d:	ret    
6401dd1e:	mov    ecx,DWORD PTR [esp+0x4]
6401dd22:	push   ebx
6401dd23:	xor    ebx,ebx
6401dd25:	cmp    ecx,ebx
6401dd27:	push   esi
6401dd28:	push   edi
6401dd29:	jl     0x6401dd86
6401dd2b:	cmp    ecx,DWORD PTR ds:0x640324e0
6401dd31:	jae    0x6401dd86
6401dd33:	mov    eax,ecx
6401dd35:	sar    eax,0x5
6401dd38:	mov    esi,ecx
6401dd3a:	lea    edi,[eax*4+0x64032500]
6401dd41:	mov    eax,DWORD PTR [edi]
6401dd43:	and    esi,0x1f
6401dd46:	shl    esi,0x6
6401dd49:	add    eax,esi
6401dd4b:	test   BYTE PTR [eax+0x4],0x1
6401dd4f:	je     0x6401dd86
6401dd51:	cmp    DWORD PTR [eax],0xffffffff
6401dd54:	je     0x6401dd86
6401dd56:	cmp    DWORD PTR ds:0x6402e580,0x1
6401dd5d:	jne    0x6401dd7c
6401dd5f:	sub    ecx,ebx
6401dd61:	je     0x6401dd73
6401dd63:	dec    ecx
6401dd64:	je     0x6401dd6e
6401dd66:	dec    ecx
6401dd67:	jne    0x6401dd7c
6401dd69:	push   ebx
6401dd6a:	push   0xfffffff4
6401dd6c:	jmp    0x6401dd76
6401dd6e:	push   ebx
6401dd6f:	push   0xfffffff5
6401dd71:	jmp    0x6401dd76
6401dd73:	push   ebx
6401dd74:	push   0xfffffff6
6401dd76:	call   DWORD PTR ds:0x64025090
6401dd7c:	mov    eax,DWORD PTR [edi]
6401dd7e:	or     DWORD PTR [esi+eax*1],0xffffffff
6401dd82:	xor    eax,eax
6401dd84:	jmp    0x6401dd9b
6401dd86:	call   0x64014880
6401dd8b:	mov    DWORD PTR [eax],0x9
6401dd91:	call   0x64014893
6401dd96:	mov    DWORD PTR [eax],ebx
6401dd98:	or     eax,0xffffffff
6401dd9b:	pop    edi
6401dd9c:	pop    esi
6401dd9d:	pop    ebx
6401dd9e:	ret    
6401dd9f:	mov    eax,DWORD PTR [esp+0x4]
6401dda3:	cmp    eax,0xfffffffe
6401dda6:	jne    0x6401ddbf
6401dda8:	call   0x64014893
6401ddad:	and    DWORD PTR [eax],0x0
6401ddb0:	call   0x64014880
6401ddb5:	mov    DWORD PTR [eax],0x9
6401ddbb:	or     eax,0xffffffff
6401ddbe:	ret    
6401ddbf:	push   esi
6401ddc0:	xor    esi,esi
6401ddc2:	cmp    eax,esi
6401ddc4:	jl     0x6401dde8
6401ddc6:	cmp    eax,DWORD PTR ds:0x640324e0
6401ddcc:	jae    0x6401dde8
6401ddce:	mov    ecx,eax
6401ddd0:	and    eax,0x1f
6401ddd3:	sar    ecx,0x5
6401ddd6:	mov    ecx,DWORD PTR [ecx*4+0x64032500]
6401dddd:	shl    eax,0x6
6401dde0:	add    eax,ecx
6401dde2:	test   BYTE PTR [eax+0x4],0x1
6401dde6:	jne    0x6401de0c
6401dde8:	call   0x64014893
6401dded:	mov    DWORD PTR [eax],esi
6401ddef:	call   0x64014880
6401ddf4:	push   esi
6401ddf5:	push   esi
6401ddf6:	push   esi
6401ddf7:	push   esi
6401ddf8:	push   esi
6401ddf9:	mov    DWORD PTR [eax],0x9
6401ddff:	call   0x640125f4
6401de04:	add    esp,0x14
6401de07:	or     eax,0xffffffff
6401de0a:	pop    esi
6401de0b:	ret    
6401de0c:	mov    eax,DWORD PTR [eax]
6401de0e:	pop    esi
6401de0f:	ret    
6401de10:	push   0xc
6401de12:	push   0x6402a978
6401de17:	call   0x64014080
6401de1c:	mov    edi,DWORD PTR [ebp+0x8]
6401de1f:	mov    eax,edi
6401de21:	sar    eax,0x5
6401de24:	mov    esi,edi
6401de26:	and    esi,0x1f
6401de29:	shl    esi,0x6
6401de2c:	add    esi,DWORD PTR [eax*4+0x64032500]
6401de33:	mov    DWORD PTR [ebp-0x1c],0x1
6401de3a:	xor    ebx,ebx
6401de3c:	cmp    DWORD PTR [esi+0x8],ebx
6401de3f:	jne    0x6401de77
6401de41:	push   0xa
6401de43:	call   0x6401a07a
6401de48:	pop    ecx
6401de49:	mov    DWORD PTR [ebp-0x4],ebx
6401de4c:	cmp    DWORD PTR [esi+0x8],ebx
6401de4f:	jne    0x6401de6b
6401de51:	push   0xfa0
6401de56:	lea    eax,[esi+0xc]
6401de59:	push   eax
6401de5a:	call   0x6401b738
6401de5f:	pop    ecx
6401de60:	pop    ecx
6401de61:	test   eax,eax
6401de63:	jne    0x6401de68
6401de65:	mov    DWORD PTR [ebp-0x1c],ebx
6401de68:	inc    DWORD PTR [esi+0x8]
6401de6b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401de72:	call   0x6401dea7
6401de77:	cmp    DWORD PTR [ebp-0x1c],ebx
6401de7a:	je     0x6401de99
6401de7c:	mov    eax,edi
6401de7e:	sar    eax,0x5
6401de81:	and    edi,0x1f
6401de84:	shl    edi,0x6
6401de87:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401de8e:	lea    eax,[eax+edi*1+0xc]
6401de92:	push   eax
6401de93:	call   DWORD PTR ds:0x64025098
6401de99:	mov    eax,DWORD PTR [ebp-0x1c]
6401de9c:	call   0x640140c5
6401dea1:	ret    
6401dea2:	xor    ebx,ebx
6401dea4:	mov    edi,DWORD PTR [ebp+0x8]
6401dea7:	push   0xa
6401dea9:	call   0x64019fa2
6401deae:	pop    ecx
6401deaf:	ret    
6401deb0:	mov    eax,DWORD PTR [esp+0x4]
6401deb4:	mov    ecx,eax
6401deb6:	and    eax,0x1f
6401deb9:	sar    ecx,0x5
6401debc:	mov    ecx,DWORD PTR [ecx*4+0x64032500]
6401dec3:	shl    eax,0x6
6401dec6:	lea    eax,[ecx+eax*1+0xc]
6401deca:	push   eax
6401decb:	call   DWORD PTR ds:0x6402509c
6401ded1:	ret    
6401ded2:	push   ebp
6401ded3:	mov    ebp,esp
6401ded5:	sub    esp,0x10
6401ded8:	mov    eax,ds:0x6402d09c
6401dedd:	xor    eax,ebp
6401dedf:	mov    DWORD PTR [ebp-0x4],eax
6401dee2:	push   esi
6401dee3:	xor    esi,esi
6401dee5:	cmp    DWORD PTR ds:0x6402dfb0,esi
6401deeb:	je     0x6401df3b
6401deed:	cmp    DWORD PTR ds:0x6402e024,0xfffffffe
6401def4:	jne    0x6401defb
6401def6:	call   0x6401e5f1
6401defb:	mov    eax,ds:0x6402e024
6401df00:	cmp    eax,0xffffffff
6401df03:	jne    0x6401df0b
6401df05:	or     ax,0xffff
6401df09:	jmp    0x6401df7b
6401df0b:	push   esi
6401df0c:	lea    ecx,[ebp-0x10]
6401df0f:	push   ecx
6401df10:	push   0x1
6401df12:	lea    ecx,[ebp+0x8]
6401df15:	push   ecx
6401df16:	push   eax
6401df17:	call   DWORD PTR ds:0x640250ac
6401df1d:	test   eax,eax
6401df1f:	jne    0x6401df88
6401df21:	cmp    DWORD PTR ds:0x6402dfb0,0x2
6401df28:	jne    0x6401df05
6401df2a:	call   DWORD PTR ds:0x64025044
6401df30:	cmp    eax,0x78
6401df33:	jne    0x6401df05
6401df35:	mov    DWORD PTR ds:0x6402dfb0,esi
6401df3b:	push   esi
6401df3c:	push   esi
6401df3d:	push   0x5
6401df3f:	lea    eax,[ebp-0xc]
6401df42:	push   eax
6401df43:	push   0x1
6401df45:	lea    eax,[ebp+0x8]
6401df48:	push   eax
6401df49:	push   esi
6401df4a:	call   DWORD PTR ds:0x640250a8
6401df50:	push   eax
6401df51:	call   DWORD PTR ds:0x64025028
6401df57:	mov    ecx,DWORD PTR ds:0x6402e024
6401df5d:	cmp    ecx,0xffffffff
6401df60:	je     0x6401df05
6401df62:	push   esi
6401df63:	lea    edx,[ebp-0x10]
6401df66:	push   edx
6401df67:	push   eax
6401df68:	lea    eax,[ebp-0xc]
6401df6b:	push   eax
6401df6c:	push   ecx
6401df6d:	call   DWORD PTR ds:0x640250a4
6401df73:	test   eax,eax
6401df75:	je     0x6401df05
6401df77:	mov    ax,WORD PTR [ebp+0x8]
6401df7b:	mov    ecx,DWORD PTR [ebp-0x4]
6401df7e:	xor    ecx,ebp
6401df80:	pop    esi
6401df81:	call   0x64012abc
6401df86:	leave  
6401df87:	ret    
6401df88:	mov    DWORD PTR ds:0x6402dfb0,0x1
6401df92:	jmp    0x6401df77
6401df94:	int3   
6401df95:	int3   
6401df96:	int3   
6401df97:	push   0x10
6401df99:	push   0x6402a998
6401df9e:	call   0x64014080
6401dfa3:	xor    ebx,ebx
6401dfa5:	mov    DWORD PTR [ebp-0x1c],ebx
6401dfa8:	push   0x1
6401dfaa:	call   0x6401a07a
6401dfaf:	pop    ecx
6401dfb0:	mov    DWORD PTR [ebp-0x4],ebx
6401dfb3:	push   0x3
6401dfb5:	pop    edi
6401dfb6:	mov    DWORD PTR [ebp-0x20],edi
6401dfb9:	cmp    edi,DWORD PTR ds:0x640324c0
6401dfbf:	jge    0x6401e018
6401dfc1:	mov    esi,edi
6401dfc3:	shl    esi,0x2
6401dfc6:	mov    eax,ds:0x640314b4
6401dfcb:	add    eax,esi
6401dfcd:	cmp    DWORD PTR [eax],ebx
6401dfcf:	je     0x6401e015
6401dfd1:	mov    eax,DWORD PTR [eax]
6401dfd3:	test   BYTE PTR [eax+0xc],0x83
6401dfd7:	je     0x6401dfe8
6401dfd9:	push   eax
6401dfda:	call   0x6401e6af
6401dfdf:	pop    ecx
6401dfe0:	cmp    eax,0xffffffff
6401dfe3:	je     0x6401dfe8
6401dfe5:	inc    DWORD PTR [ebp-0x1c]
6401dfe8:	cmp    edi,0x14
6401dfeb:	jl     0x6401e015
6401dfed:	mov    eax,ds:0x640314b4
6401dff2:	mov    eax,DWORD PTR [esi+eax*1]
6401dff5:	add    eax,0x20
6401dff8:	push   eax
6401dff9:	call   DWORD PTR ds:0x640250a0
6401dfff:	mov    eax,ds:0x640314b4
6401e004:	push   DWORD PTR [esi+eax*1]
6401e007:	call   0x64013956
6401e00c:	pop    ecx
6401e00d:	mov    eax,ds:0x640314b4
6401e012:	mov    DWORD PTR [esi+eax*1],ebx
6401e015:	inc    edi
6401e016:	jmp    0x6401dfb6
6401e018:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e01f:	call   0x6401e02d
6401e024:	mov    eax,DWORD PTR [ebp-0x1c]
6401e027:	call   0x640140c5
6401e02c:	ret    
6401e02d:	push   0x1
6401e02f:	call   0x64019fa2
6401e034:	pop    ecx
6401e035:	ret    
6401e036:	push   ebx
6401e037:	push   esi
6401e038:	mov    esi,DWORD PTR [esp+0xc]
6401e03c:	mov    eax,DWORD PTR [esi+0xc]
6401e03f:	mov    ecx,eax
6401e041:	and    cl,0x3
6401e044:	xor    ebx,ebx
6401e046:	cmp    cl,0x2
6401e049:	jne    0x6401e08a
6401e04b:	test   ax,0x108
6401e04f:	je     0x6401e08a
6401e051:	mov    eax,DWORD PTR [esi+0x8]
6401e054:	push   edi
6401e055:	mov    edi,DWORD PTR [esi]
6401e057:	sub    edi,eax
6401e059:	test   edi,edi
6401e05b:	jle    0x6401e089
6401e05d:	push   edi
6401e05e:	push   eax
6401e05f:	push   esi
6401e060:	call   0x6401c8dd
6401e065:	pop    ecx
6401e066:	push   eax
6401e067:	call   0x6401c5be
6401e06c:	add    esp,0xc
6401e06f:	cmp    eax,edi
6401e071:	jne    0x6401e082
6401e073:	mov    eax,DWORD PTR [esi+0xc]
6401e076:	test   al,al
6401e078:	jns    0x6401e089
6401e07a:	and    eax,0xfffffffd
6401e07d:	mov    DWORD PTR [esi+0xc],eax
6401e080:	jmp    0x6401e089
6401e082:	or     DWORD PTR [esi+0xc],0x20
6401e086:	or     ebx,0xffffffff
6401e089:	pop    edi
6401e08a:	mov    eax,DWORD PTR [esi+0x8]
6401e08d:	and    DWORD PTR [esi+0x4],0x0
6401e091:	mov    DWORD PTR [esi],eax
6401e093:	pop    esi
6401e094:	mov    eax,ebx
6401e096:	pop    ebx
6401e097:	ret    
6401e098:	push   esi
6401e099:	mov    esi,DWORD PTR [esp+0x8]
6401e09d:	test   esi,esi
6401e09f:	jne    0x6401e0aa
6401e0a1:	push   esi
6401e0a2:	call   0x6401e0da
6401e0a7:	pop    ecx
6401e0a8:	pop    esi
6401e0a9:	ret    
6401e0aa:	push   esi
6401e0ab:	call   0x6401e036
6401e0b0:	test   eax,eax
6401e0b2:	pop    ecx
6401e0b3:	je     0x6401e0ba
6401e0b5:	or     eax,0xffffffff
6401e0b8:	pop    esi
6401e0b9:	ret    
6401e0ba:	test   WORD PTR [esi+0xc],0x4000
6401e0c0:	je     0x6401e0d6
6401e0c2:	push   esi
6401e0c3:	call   0x6401c8dd
6401e0c8:	push   eax
6401e0c9:	call   0x6401e72b
6401e0ce:	pop    ecx
6401e0cf:	pop    ecx
6401e0d0:	neg    eax
6401e0d2:	sbb    eax,eax
6401e0d4:	pop    esi
6401e0d5:	ret    
6401e0d6:	xor    eax,eax
6401e0d8:	pop    esi
6401e0d9:	ret    
6401e0da:	push   0x14
6401e0dc:	push   0x6402a9b8
6401e0e1:	call   0x64014080
6401e0e6:	xor    edi,edi
6401e0e8:	mov    DWORD PTR [ebp-0x1c],edi
6401e0eb:	mov    DWORD PTR [ebp-0x24],edi
6401e0ee:	push   0x1
6401e0f0:	call   0x6401a07a
6401e0f5:	pop    ecx
6401e0f6:	mov    DWORD PTR [ebp-0x4],edi
6401e0f9:	xor    esi,esi
6401e0fb:	mov    DWORD PTR [ebp-0x20],esi
6401e0fe:	cmp    esi,DWORD PTR ds:0x640324c0
6401e104:	jge    0x6401e18d
6401e10a:	mov    eax,ds:0x640314b4
6401e10f:	lea    eax,[eax+esi*4]
6401e112:	cmp    DWORD PTR [eax],edi
6401e114:	je     0x6401e174
6401e116:	mov    eax,DWORD PTR [eax]
6401e118:	test   BYTE PTR [eax+0xc],0x83
6401e11c:	je     0x6401e174
6401e11e:	push   eax
6401e11f:	push   esi
6401e120:	call   0x6401c84f
6401e125:	pop    ecx
6401e126:	pop    ecx
6401e127:	xor    edx,edx
6401e129:	inc    edx
6401e12a:	mov    DWORD PTR [ebp-0x4],edx
6401e12d:	mov    eax,ds:0x640314b4
6401e132:	mov    eax,DWORD PTR [eax+esi*4]
6401e135:	mov    ecx,DWORD PTR [eax+0xc]
6401e138:	test   cl,0x83
6401e13b:	je     0x6401e16c
6401e13d:	cmp    DWORD PTR [ebp+0x8],edx
6401e140:	jne    0x6401e153
6401e142:	push   eax
6401e143:	call   0x6401e098
6401e148:	pop    ecx
6401e149:	cmp    eax,0xffffffff
6401e14c:	je     0x6401e16c
6401e14e:	inc    DWORD PTR [ebp-0x1c]
6401e151:	jmp    0x6401e16c
6401e153:	cmp    DWORD PTR [ebp+0x8],edi
6401e156:	jne    0x6401e16c
6401e158:	test   cl,0x2
6401e15b:	je     0x6401e16c
6401e15d:	push   eax
6401e15e:	call   0x6401e098
6401e163:	pop    ecx
6401e164:	cmp    eax,0xffffffff
6401e167:	jne    0x6401e16c
6401e169:	or     DWORD PTR [ebp-0x24],eax
6401e16c:	mov    DWORD PTR [ebp-0x4],edi
6401e16f:	call   0x6401e17c
6401e174:	inc    esi
6401e175:	jmp    0x6401e0fb
6401e177:	xor    edi,edi
6401e179:	mov    esi,DWORD PTR [ebp-0x20]
6401e17c:	mov    eax,ds:0x640314b4
6401e181:	push   DWORD PTR [eax+esi*4]
6401e184:	push   esi
6401e185:	call   0x6401c8b3
6401e18a:	pop    ecx
6401e18b:	pop    ecx
6401e18c:	ret    
6401e18d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e194:	call   0x6401e1ab
6401e199:	cmp    DWORD PTR [ebp+0x8],0x1
6401e19d:	mov    eax,DWORD PTR [ebp-0x1c]
6401e1a0:	je     0x6401e1a5
6401e1a2:	mov    eax,DWORD PTR [ebp-0x24]
6401e1a5:	call   0x640140c5
6401e1aa:	ret    
6401e1ab:	push   0x1
6401e1ad:	call   0x64019fa2
6401e1b2:	pop    ecx
6401e1b3:	ret    
6401e1b4:	push   0x1
6401e1b6:	call   0x6401e0da
6401e1bb:	pop    ecx
6401e1bc:	ret    
6401e1bd:	push   ebp
6401e1be:	mov    ebp,esp
6401e1c0:	push   ecx
6401e1c1:	push   esi
6401e1c2:	mov    esi,DWORD PTR [ebp+0xc]
6401e1c5:	push   esi
6401e1c6:	call   0x6401c8dd
6401e1cb:	mov    DWORD PTR [ebp+0xc],eax
6401e1ce:	mov    eax,DWORD PTR [esi+0xc]
6401e1d1:	test   al,0x82
6401e1d3:	pop    ecx
6401e1d4:	jne    0x6401e1ef
6401e1d6:	call   0x64014880
6401e1db:	mov    DWORD PTR [eax],0x9
6401e1e1:	or     DWORD PTR [esi+0xc],0x20
6401e1e5:	mov    eax,0xffff
6401e1ea:	jmp    0x6401e32a
6401e1ef:	test   al,0x40
6401e1f1:	je     0x6401e200
6401e1f3:	call   0x64014880
6401e1f8:	mov    DWORD PTR [eax],0x22
6401e1fe:	jmp    0x6401e1e1
6401e200:	test   al,0x1
6401e202:	je     0x6401e21b
6401e204:	and    DWORD PTR [esi+0x4],0x0
6401e208:	test   al,0x10
6401e20a:	je     0x6401e29b
6401e210:	mov    ecx,DWORD PTR [esi+0x8]
6401e213:	and    eax,0xfffffffe
6401e216:	mov    DWORD PTR [esi],ecx
6401e218:	mov    DWORD PTR [esi+0xc],eax
6401e21b:	mov    eax,DWORD PTR [esi+0xc]
6401e21e:	and    DWORD PTR [esi+0x4],0x0
6401e222:	and    DWORD PTR [ebp-0x4],0x0
6401e226:	push   ebx
6401e227:	push   0x2
6401e229:	and    eax,0xffffffef
6401e22c:	pop    ebx
6401e22d:	or     eax,ebx
6401e22f:	test   ax,0x10c
6401e233:	mov    DWORD PTR [esi+0xc],eax
6401e236:	jne    0x6401e264
6401e238:	call   0x6401c73c
6401e23d:	add    eax,0x20
6401e240:	cmp    esi,eax
6401e242:	je     0x6401e250
6401e244:	call   0x6401c73c
6401e249:	add    eax,0x40
6401e24c:	cmp    esi,eax
6401e24e:	jne    0x6401e25d
6401e250:	push   DWORD PTR [ebp+0xc]
6401e253:	call   0x6401c6de
6401e258:	test   eax,eax
6401e25a:	pop    ecx
6401e25b:	jne    0x6401e264
6401e25d:	push   esi
6401e25e:	call   0x6401c69a
6401e263:	pop    ecx
6401e264:	test   WORD PTR [esi+0xc],0x108
6401e26a:	push   edi
6401e26b:	je     0x6401e2f4
6401e271:	mov    eax,DWORD PTR [esi+0x8]
6401e274:	mov    edi,DWORD PTR [esi]
6401e276:	lea    ecx,[eax+0x2]
6401e279:	mov    DWORD PTR [esi],ecx
6401e27b:	mov    ecx,DWORD PTR [esi+0x18]
6401e27e:	sub    edi,eax
6401e280:	sub    ecx,ebx
6401e282:	test   edi,edi
6401e284:	mov    DWORD PTR [esi+0x4],ecx
6401e287:	jle    0x6401e2a6
6401e289:	push   edi
6401e28a:	push   eax
6401e28b:	push   DWORD PTR [ebp+0xc]
6401e28e:	call   0x6401c5be
6401e293:	add    esp,0xc
6401e296:	mov    DWORD PTR [ebp-0x4],eax
6401e299:	jmp    0x6401e2e9
6401e29b:	or     eax,0x20
6401e29e:	mov    DWORD PTR [esi+0xc],eax
6401e2a1:	jmp    0x6401e1e5
6401e2a6:	mov    ecx,DWORD PTR [ebp+0xc]
6401e2a9:	cmp    ecx,0xffffffff
6401e2ac:	je     0x6401e2c9
6401e2ae:	cmp    ecx,0xfffffffe
6401e2b1:	je     0x6401e2c9
6401e2b3:	mov    eax,ecx
6401e2b5:	and    eax,0x1f
6401e2b8:	mov    edx,ecx
6401e2ba:	sar    edx,0x5
6401e2bd:	shl    eax,0x6
6401e2c0:	add    eax,DWORD PTR [edx*4+0x64032500]
6401e2c7:	jmp    0x6401e2ce
6401e2c9:	mov    eax,0x6402d880
6401e2ce:	test   BYTE PTR [eax+0x4],0x20
6401e2d2:	je     0x6401e2e9
6401e2d4:	push   ebx
6401e2d5:	push   0x0
6401e2d7:	push   0x0
6401e2d9:	push   ecx
6401e2da:	call   0x6401be83
6401e2df:	and    eax,edx
6401e2e1:	add    esp,0x10
6401e2e4:	cmp    eax,0xffffffff
6401e2e7:	je     0x6401e316
6401e2e9:	mov    eax,DWORD PTR [esi+0x8]
6401e2ec:	mov    ebx,DWORD PTR [ebp+0x8]
6401e2ef:	mov    WORD PTR [eax],bx
6401e2f2:	jmp    0x6401e311
6401e2f4:	push   0x2
6401e2f6:	lea    eax,[ebp-0x4]
6401e2f9:	push   eax
6401e2fa:	push   DWORD PTR [ebp+0xc]
6401e2fd:	mov    edi,ebx
6401e2ff:	mov    ebx,DWORD PTR [ebp+0x8]
6401e302:	mov    WORD PTR [ebp-0x4],bx
6401e306:	call   0x6401c5be
6401e30b:	add    esp,0xc
6401e30e:	mov    DWORD PTR [ebp-0x4],eax
6401e311:	cmp    DWORD PTR [ebp-0x4],edi
6401e314:	je     0x6401e321
6401e316:	or     DWORD PTR [esi+0xc],0x20
6401e31a:	mov    eax,0xffff
6401e31f:	jmp    0x6401e328
6401e321:	mov    eax,ebx
6401e323:	and    eax,0xffff
6401e328:	pop    edi
6401e329:	pop    ebx
6401e32a:	pop    esi
6401e32b:	leave  
6401e32c:	ret    
6401e32d:	push   ebp
6401e32e:	mov    ebp,esp
6401e330:	sub    esp,0x14
6401e333:	push   esi
6401e334:	push   edi
6401e335:	push   DWORD PTR [ebp+0x8]
6401e338:	lea    ecx,[ebp-0x14]
6401e33b:	call   0x64012c5f
6401e340:	mov    eax,DWORD PTR [ebp+0x10]
6401e343:	mov    esi,DWORD PTR [ebp+0xc]
6401e346:	xor    edi,edi
6401e348:	cmp    eax,edi
6401e34a:	je     0x6401e34e
6401e34c:	mov    DWORD PTR [eax],esi
6401e34e:	cmp    esi,edi
6401e350:	jne    0x6401e37e
6401e352:	call   0x64014880
6401e357:	push   edi
6401e358:	push   edi
6401e359:	push   edi
6401e35a:	push   edi
6401e35b:	push   edi
6401e35c:	mov    DWORD PTR [eax],0x16
6401e362:	call   0x640125f4
6401e367:	add    esp,0x14
6401e36a:	cmp    BYTE PTR [ebp-0x8],0x0
6401e36e:	je     0x6401e377
6401e370:	mov    eax,DWORD PTR [ebp-0xc]
6401e373:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e377:	xor    eax,eax
6401e379:	jmp    0x6401e554
6401e37e:	cmp    DWORD PTR [ebp+0x14],edi
6401e381:	je     0x6401e38f
6401e383:	cmp    DWORD PTR [ebp+0x14],0x2
6401e387:	jl     0x6401e352
6401e389:	cmp    DWORD PTR [ebp+0x14],0x24
6401e38d:	jg     0x6401e352
6401e38f:	mov    ecx,DWORD PTR [ebp-0x14]
6401e392:	push   ebx
6401e393:	mov    bl,BYTE PTR [esi]
6401e395:	mov    DWORD PTR [ebp-0x4],edi
6401e398:	lea    edi,[esi+0x1]
6401e39b:	cmp    DWORD PTR [ecx+0xac],0x1
6401e3a2:	jle    0x6401e3bb
6401e3a4:	lea    eax,[ebp-0x14]
6401e3a7:	push   eax
6401e3a8:	movzx  eax,bl
6401e3ab:	push   0x8
6401e3ad:	push   eax
6401e3ae:	call   0x64019e4e
6401e3b3:	mov    ecx,DWORD PTR [ebp-0x14]
6401e3b6:	add    esp,0xc
6401e3b9:	jmp    0x6401e3cb
6401e3bb:	mov    edx,DWORD PTR [ecx+0xc8]
6401e3c1:	movzx  eax,bl
6401e3c4:	movzx  eax,BYTE PTR [edx+eax*2]
6401e3c8:	and    eax,0x8
6401e3cb:	test   eax,eax
6401e3cd:	je     0x6401e3d4
6401e3cf:	mov    bl,BYTE PTR [edi]
6401e3d1:	inc    edi
6401e3d2:	jmp    0x6401e39b
6401e3d4:	cmp    bl,0x2d
6401e3d7:	jne    0x6401e3df
6401e3d9:	or     DWORD PTR [ebp+0x18],0x2
6401e3dd:	jmp    0x6401e3e4
6401e3df:	cmp    bl,0x2b
6401e3e2:	jne    0x6401e3e7
6401e3e4:	mov    bl,BYTE PTR [edi]
6401e3e6:	inc    edi
6401e3e7:	mov    eax,DWORD PTR [ebp+0x14]
6401e3ea:	test   eax,eax
6401e3ec:	jl     0x6401e53b
6401e3f2:	cmp    eax,0x1
6401e3f5:	je     0x6401e53b
6401e3fb:	cmp    eax,0x24
6401e3fe:	jg     0x6401e53b
6401e404:	test   eax,eax
6401e406:	jne    0x6401e432
6401e408:	cmp    bl,0x30
6401e40b:	je     0x6401e416
6401e40d:	mov    DWORD PTR [ebp+0x14],0xa
6401e414:	jmp    0x6401e44a
6401e416:	mov    al,BYTE PTR [edi]
6401e418:	cmp    al,0x78
6401e41a:	je     0x6401e429
6401e41c:	cmp    al,0x58
6401e41e:	je     0x6401e429
6401e420:	mov    DWORD PTR [ebp+0x14],0x8
6401e427:	jmp    0x6401e44a
6401e429:	mov    DWORD PTR [ebp+0x14],0x10
6401e430:	jmp    0x6401e43c
6401e432:	cmp    eax,0x10
6401e435:	jne    0x6401e44a
6401e437:	cmp    bl,0x30
6401e43a:	jne    0x6401e44a
6401e43c:	mov    al,BYTE PTR [edi]
6401e43e:	cmp    al,0x78
6401e440:	je     0x6401e446
6401e442:	cmp    al,0x58
6401e444:	jne    0x6401e44a
6401e446:	inc    edi
6401e447:	mov    bl,BYTE PTR [edi]
6401e449:	inc    edi
6401e44a:	mov    esi,DWORD PTR [ecx+0xc8]
6401e450:	or     eax,0xffffffff
6401e453:	xor    edx,edx
6401e455:	div    DWORD PTR [ebp+0x14]
6401e458:	movzx  ecx,bl
6401e45b:	movzx  ecx,WORD PTR [esi+ecx*2]
6401e45f:	test   cl,0x4
6401e462:	je     0x6401e46c
6401e464:	movsx  ecx,bl
6401e467:	sub    ecx,0x30
6401e46a:	jmp    0x6401e486
6401e46c:	test   cx,0x103
6401e471:	je     0x6401e4a4
6401e473:	mov    cl,bl
6401e475:	sub    cl,0x61
6401e478:	cmp    cl,0x19
6401e47b:	movsx  ecx,bl
6401e47e:	ja     0x6401e483
6401e480:	sub    ecx,0x20
6401e483:	add    ecx,0xffffffc9
6401e486:	cmp    ecx,DWORD PTR [ebp+0x14]
6401e489:	jae    0x6401e4a4
6401e48b:	or     DWORD PTR [ebp+0x18],0x8
6401e48f:	cmp    DWORD PTR [ebp-0x4],eax
6401e492:	jb     0x6401e4bb
6401e494:	jne    0x6401e49a
6401e496:	cmp    ecx,edx
6401e498:	jbe    0x6401e4bb
6401e49a:	or     DWORD PTR [ebp+0x18],0x4
6401e49e:	cmp    DWORD PTR [ebp+0x10],0x0
6401e4a2:	jne    0x6401e4c7
6401e4a4:	mov    eax,DWORD PTR [ebp+0x18]
6401e4a7:	dec    edi
6401e4a8:	test   al,0x8
6401e4aa:	jne    0x6401e4cc
6401e4ac:	cmp    DWORD PTR [ebp+0x10],0x0
6401e4b0:	je     0x6401e4b5
6401e4b2:	mov    edi,DWORD PTR [ebp+0xc]
6401e4b5:	and    DWORD PTR [ebp-0x4],0x0
6401e4b9:	jmp    0x6401e517
6401e4bb:	mov    ebx,DWORD PTR [ebp-0x4]
6401e4be:	imul   ebx,DWORD PTR [ebp+0x14]
6401e4c2:	add    ebx,ecx
6401e4c4:	mov    DWORD PTR [ebp-0x4],ebx
6401e4c7:	mov    bl,BYTE PTR [edi]
6401e4c9:	inc    edi
6401e4ca:	jmp    0x6401e458
6401e4cc:	test   al,0x4
6401e4ce:	mov    esi,0x7fffffff
6401e4d3:	jne    0x6401e4f0
6401e4d5:	test   al,0x1
6401e4d7:	jne    0x6401e517
6401e4d9:	and    eax,0x2
6401e4dc:	je     0x6401e4e7
6401e4de:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401e4e5:	ja     0x6401e4f0
6401e4e7:	test   eax,eax
6401e4e9:	jne    0x6401e517
6401e4eb:	cmp    DWORD PTR [ebp-0x4],esi
6401e4ee:	jbe    0x6401e517
6401e4f0:	call   0x64014880
6401e4f5:	test   BYTE PTR [ebp+0x18],0x1
6401e4f9:	mov    DWORD PTR [eax],0x22
6401e4ff:	je     0x6401e507
6401e501:	or     DWORD PTR [ebp-0x4],0xffffffff
6401e505:	jmp    0x6401e517
6401e507:	mov    al,BYTE PTR [ebp+0x18]
6401e50a:	and    al,0x2
6401e50c:	neg    al
6401e50e:	sbb    eax,eax
6401e510:	neg    eax
6401e512:	add    eax,esi
6401e514:	mov    DWORD PTR [ebp-0x4],eax
6401e517:	mov    eax,DWORD PTR [ebp+0x10]
6401e51a:	test   eax,eax
6401e51c:	je     0x6401e520
6401e51e:	mov    DWORD PTR [eax],edi
6401e520:	test   BYTE PTR [ebp+0x18],0x2
6401e524:	je     0x6401e529
6401e526:	neg    DWORD PTR [ebp-0x4]
6401e529:	cmp    BYTE PTR [ebp-0x8],0x0
6401e52d:	je     0x6401e536
6401e52f:	mov    eax,DWORD PTR [ebp-0xc]
6401e532:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e536:	mov    eax,DWORD PTR [ebp-0x4]
6401e539:	jmp    0x6401e553
6401e53b:	mov    eax,DWORD PTR [ebp+0x10]
6401e53e:	test   eax,eax
6401e540:	je     0x6401e544
6401e542:	mov    DWORD PTR [eax],esi
6401e544:	cmp    BYTE PTR [ebp-0x8],0x0
6401e548:	je     0x6401e551
6401e54a:	mov    eax,DWORD PTR [ebp-0xc]
6401e54d:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e551:	xor    eax,eax
6401e553:	pop    ebx
6401e554:	pop    edi
6401e555:	pop    esi
6401e556:	leave  
6401e557:	ret    
6401e558:	push   ebp
6401e559:	mov    ebp,esp
6401e55b:	xor    eax,eax
6401e55d:	cmp    DWORD PTR ds:0x6402e934,eax
6401e563:	push   eax
6401e564:	push   DWORD PTR [ebp+0x10]
6401e567:	push   DWORD PTR [ebp+0xc]
6401e56a:	push   DWORD PTR [ebp+0x8]
6401e56d:	jne    0x6401e576
6401e56f:	push   0x6402d878
6401e574:	jmp    0x6401e577
6401e576:	push   eax
6401e577:	call   0x6401e32d
6401e57c:	add    esp,0x14
6401e57f:	pop    ebp
6401e580:	ret    
6401e581:	int3   
6401e582:	int3   
6401e583:	int3   
6401e584:	int3   
6401e585:	int3   
6401e586:	int3   
6401e587:	int3   
6401e588:	int3   
6401e589:	int3   
6401e58a:	int3   
6401e58b:	int3   
6401e58c:	int3   
6401e58d:	int3   
6401e58e:	int3   
6401e58f:	int3   
6401e590:	push   ebp
6401e591:	mov    ebp,esp
6401e593:	push   edi
6401e594:	push   esi
6401e595:	push   ebx
6401e596:	mov    ecx,DWORD PTR [ebp+0x10]
6401e599:	or     ecx,ecx
6401e59b:	je     0x6401e5ea
6401e59d:	mov    esi,DWORD PTR [ebp+0x8]
6401e5a0:	mov    edi,DWORD PTR [ebp+0xc]
6401e5a3:	mov    bh,0x41
6401e5a5:	mov    bl,0x5a
6401e5a7:	mov    dh,0x20
6401e5a9:	lea    ecx,[ecx+0x0]
6401e5ac:	mov    ah,BYTE PTR [esi]
6401e5ae:	or     ah,ah
6401e5b0:	mov    al,BYTE PTR [edi]
6401e5b2:	je     0x6401e5db
6401e5b4:	or     al,al
6401e5b6:	je     0x6401e5db
6401e5b8:	add    esi,0x1
6401e5bb:	add    edi,0x1
6401e5be:	cmp    ah,bh
6401e5c0:	jb     0x6401e5c8
6401e5c2:	cmp    ah,bl
6401e5c4:	ja     0x6401e5c8
6401e5c6:	add    ah,dh
6401e5c8:	cmp    al,bh
6401e5ca:	jb     0x6401e5d2
6401e5cc:	cmp    al,bl
6401e5ce:	ja     0x6401e5d2
6401e5d0:	add    al,dh
6401e5d2:	cmp    ah,al
6401e5d4:	jne    0x6401e5e1
6401e5d6:	sub    ecx,0x1
6401e5d9:	jne    0x6401e5ac
6401e5db:	xor    ecx,ecx
6401e5dd:	cmp    ah,al
6401e5df:	je     0x6401e5ea
6401e5e1:	mov    ecx,0xffffffff
6401e5e6:	jb     0x6401e5ea
6401e5e8:	neg    ecx
6401e5ea:	mov    eax,ecx
6401e5ec:	pop    ebx
6401e5ed:	pop    esi
6401e5ee:	pop    edi
6401e5ef:	leave  
6401e5f0:	ret    
6401e5f1:	xor    eax,eax
6401e5f3:	push   eax
6401e5f4:	push   eax
6401e5f5:	push   0x3
6401e5f7:	push   eax
6401e5f8:	push   0x3
6401e5fa:	push   0x40000000
6401e5ff:	push   0x640275ec
6401e604:	call   DWORD PTR ds:0x640250b4
6401e60a:	mov    ds:0x6402e024,eax
6401e60f:	ret    
6401e610:	mov    eax,ds:0x6402e024
6401e615:	cmp    eax,0xffffffff
6401e618:	push   esi
6401e619:	mov    esi,DWORD PTR ds:0x64025040
6401e61f:	je     0x6401e629
6401e621:	cmp    eax,0xfffffffe
6401e624:	je     0x6401e629
6401e626:	push   eax
6401e627:	call   esi
6401e629:	mov    eax,ds:0x6402e020
6401e62e:	cmp    eax,0xffffffff
6401e631:	je     0x6401e63b
6401e633:	cmp    eax,0xfffffffe
6401e636:	je     0x6401e63b
6401e638:	push   eax
6401e639:	call   esi
6401e63b:	pop    esi
6401e63c:	ret    
6401e63d:	push   ebx
6401e63e:	push   esi
6401e63f:	mov    esi,DWORD PTR [esp+0xc]
6401e643:	push   edi
6401e644:	xor    edi,edi
6401e646:	or     ebx,0xffffffff
6401e649:	cmp    esi,edi
6401e64b:	jne    0x6401e669
6401e64d:	call   0x64014880
6401e652:	push   edi
6401e653:	push   edi
6401e654:	push   edi
6401e655:	push   edi
6401e656:	push   edi
6401e657:	mov    DWORD PTR [eax],0x16
6401e65d:	call   0x640125f4
6401e662:	add    esp,0x14
6401e665:	or     eax,ebx
6401e667:	jmp    0x6401e6ab
6401e669:	test   BYTE PTR [esi+0xc],0x83
6401e66d:	je     0x6401e6a6
6401e66f:	push   esi
6401e670:	call   0x6401e036
6401e675:	push   esi
6401e676:	mov    ebx,eax
6401e678:	call   0x6401e98a
6401e67d:	push   esi
6401e67e:	call   0x6401c8dd
6401e683:	push   eax
6401e684:	call   0x6401e8bd
6401e689:	add    esp,0x10
6401e68c:	test   eax,eax
6401e68e:	jge    0x6401e695
6401e690:	or     ebx,0xffffffff
6401e693:	jmp    0x6401e6a6
6401e695:	mov    eax,DWORD PTR [esi+0x1c]
6401e698:	cmp    eax,edi
6401e69a:	je     0x6401e6a6
6401e69c:	push   eax
6401e69d:	call   0x64013956
6401e6a2:	pop    ecx
6401e6a3:	mov    DWORD PTR [esi+0x1c],edi
6401e6a6:	mov    DWORD PTR [esi+0xc],edi
6401e6a9:	mov    eax,ebx
6401e6ab:	pop    edi
6401e6ac:	pop    esi
6401e6ad:	pop    ebx
6401e6ae:	ret    
6401e6af:	push   0xc
6401e6b1:	push   0x6402a9e0
6401e6b6:	call   0x64014080
6401e6bb:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e6bf:	xor    eax,eax
6401e6c1:	mov    esi,DWORD PTR [ebp+0x8]
6401e6c4:	xor    edi,edi
6401e6c6:	cmp    esi,edi
6401e6c8:	setne  al
6401e6cb:	cmp    eax,edi
6401e6cd:	jne    0x6401e6ec
6401e6cf:	call   0x64014880
6401e6d4:	mov    DWORD PTR [eax],0x16
6401e6da:	push   edi
6401e6db:	push   edi
6401e6dc:	push   edi
6401e6dd:	push   edi
6401e6de:	push   edi
6401e6df:	call   0x640125f4
6401e6e4:	add    esp,0x14
6401e6e7:	or     eax,0xffffffff
6401e6ea:	jmp    0x6401e6f8
6401e6ec:	test   BYTE PTR [esi+0xc],0x40
6401e6f0:	je     0x6401e6fe
6401e6f2:	mov    DWORD PTR [esi+0xc],edi
6401e6f5:	mov    eax,DWORD PTR [ebp-0x1c]
6401e6f8:	call   0x640140c5
6401e6fd:	ret    
6401e6fe:	push   esi
6401e6ff:	call   0x6401c813
6401e704:	pop    ecx
6401e705:	mov    DWORD PTR [ebp-0x4],edi
6401e708:	push   esi
6401e709:	call   0x6401e63d
6401e70e:	pop    ecx
6401e70f:	mov    DWORD PTR [ebp-0x1c],eax
6401e712:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e719:	call   0x6401e723
6401e71e:	jmp    0x6401e6f5
6401e720:	mov    esi,DWORD PTR [ebp+0x8]
6401e723:	push   esi
6401e724:	call   0x6401c87d
6401e729:	pop    ecx
6401e72a:	ret    
6401e72b:	push   0x10
6401e72d:	push   0x6402aa00
6401e732:	call   0x64014080
6401e737:	mov    eax,DWORD PTR [ebp+0x8]
6401e73a:	cmp    eax,0xfffffffe
6401e73d:	jne    0x6401e752
6401e73f:	call   0x64014880
6401e744:	mov    DWORD PTR [eax],0x9
6401e74a:	or     eax,0xffffffff
6401e74d:	jmp    0x6401e7fc
6401e752:	xor    ebx,ebx
6401e754:	cmp    eax,ebx
6401e756:	jl     0x6401e760
6401e758:	cmp    eax,DWORD PTR ds:0x640324e0
6401e75e:	jb     0x6401e77a
6401e760:	call   0x64014880
6401e765:	mov    DWORD PTR [eax],0x9
6401e76b:	push   ebx
6401e76c:	push   ebx
6401e76d:	push   ebx
6401e76e:	push   ebx
6401e76f:	push   ebx
6401e770:	call   0x640125f4
6401e775:	add    esp,0x14
6401e778:	jmp    0x6401e74a
6401e77a:	mov    ecx,eax
6401e77c:	sar    ecx,0x5
6401e77f:	lea    edi,[ecx*4+0x64032500]
6401e786:	mov    esi,eax
6401e788:	and    esi,0x1f
6401e78b:	shl    esi,0x6
6401e78e:	mov    ecx,DWORD PTR [edi]
6401e790:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401e795:	and    ecx,0x1
6401e798:	je     0x6401e760
6401e79a:	push   eax
6401e79b:	call   0x6401de10
6401e7a0:	pop    ecx
6401e7a1:	mov    DWORD PTR [ebp-0x4],ebx
6401e7a4:	mov    eax,DWORD PTR [edi]
6401e7a6:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401e7ab:	je     0x6401e7de
6401e7ad:	push   DWORD PTR [ebp+0x8]
6401e7b0:	call   0x6401dd9f
6401e7b5:	pop    ecx
6401e7b6:	push   eax
6401e7b7:	call   DWORD PTR ds:0x640250b8
6401e7bd:	test   eax,eax
6401e7bf:	jne    0x6401e7cc
6401e7c1:	call   DWORD PTR ds:0x64025044
6401e7c7:	mov    DWORD PTR [ebp-0x1c],eax
6401e7ca:	jmp    0x6401e7cf
6401e7cc:	mov    DWORD PTR [ebp-0x1c],ebx
6401e7cf:	cmp    DWORD PTR [ebp-0x1c],ebx
6401e7d2:	je     0x6401e7ed
6401e7d4:	call   0x64014893
6401e7d9:	mov    ecx,DWORD PTR [ebp-0x1c]
6401e7dc:	mov    DWORD PTR [eax],ecx
6401e7de:	call   0x64014880
6401e7e3:	mov    DWORD PTR [eax],0x9
6401e7e9:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e7ed:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e7f4:	call   0x6401e802
6401e7f9:	mov    eax,DWORD PTR [ebp-0x1c]
6401e7fc:	call   0x640140c5
6401e801:	ret    
6401e802:	push   DWORD PTR [ebp+0x8]
6401e805:	call   0x6401deb0
6401e80a:	pop    ecx
6401e80b:	ret    
6401e80c:	xor    eax,eax
6401e80e:	cmp    DWORD PTR [esp+0x8],eax
6401e812:	jbe    0x6401e825
6401e814:	mov    ecx,DWORD PTR [esp+0x4]
6401e818:	cmp    BYTE PTR [ecx],0x0
6401e81b:	je     0x6401e825
6401e81d:	inc    eax
6401e81e:	inc    ecx
6401e81f:	cmp    eax,DWORD PTR [esp+0x8]
6401e823:	jb     0x6401e818
6401e825:	ret    
6401e826:	push   esi
6401e827:	mov    esi,DWORD PTR [esp+0x8]
6401e82b:	push   edi
6401e82c:	push   esi
6401e82d:	call   0x6401dd9f
6401e832:	cmp    eax,0xffffffff
6401e835:	pop    ecx
6401e836:	je     0x6401e888
6401e838:	cmp    esi,0x1
6401e83b:	mov    eax,ds:0x64032500
6401e840:	jne    0x6401e84b
6401e842:	test   BYTE PTR [eax+0x84],0x1
6401e849:	jne    0x6401e856
6401e84b:	cmp    esi,0x2
6401e84e:	jne    0x6401e86c
6401e850:	test   BYTE PTR [eax+0x44],0x1
6401e854:	je     0x6401e86c
6401e856:	push   0x2
6401e858:	call   0x6401dd9f
6401e85d:	push   0x1
6401e85f:	mov    edi,eax
6401e861:	call   0x6401dd9f
6401e866:	cmp    eax,edi
6401e868:	pop    ecx
6401e869:	pop    ecx
6401e86a:	je     0x6401e888
6401e86c:	push   esi
6401e86d:	call   0x6401dd9f
6401e872:	pop    ecx
6401e873:	push   eax
6401e874:	call   DWORD PTR ds:0x64025040
6401e87a:	test   eax,eax
6401e87c:	jne    0x6401e888
6401e87e:	call   DWORD PTR ds:0x64025044
6401e884:	mov    edi,eax
6401e886:	jmp    0x6401e88a
6401e888:	xor    edi,edi
6401e88a:	push   esi
6401e88b:	call   0x6401dd1e
6401e890:	mov    eax,esi
6401e892:	sar    eax,0x5
6401e895:	mov    eax,DWORD PTR [eax*4+0x64032500]
6401e89c:	and    esi,0x1f
6401e89f:	shl    esi,0x6
6401e8a2:	test   edi,edi
6401e8a4:	pop    ecx
6401e8a5:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401e8aa:	je     0x6401e8b8
6401e8ac:	push   edi
6401e8ad:	call   0x640148a6
6401e8b2:	pop    ecx
6401e8b3:	or     eax,0xffffffff
6401e8b6:	jmp    0x6401e8ba
6401e8b8:	xor    eax,eax
6401e8ba:	pop    edi
6401e8bb:	pop    esi
6401e8bc:	ret    
6401e8bd:	push   0x10
6401e8bf:	push   0x6402aa20
6401e8c4:	call   0x64014080
6401e8c9:	mov    eax,DWORD PTR [ebp+0x8]
6401e8cc:	cmp    eax,0xfffffffe
6401e8cf:	jne    0x6401e8ec
6401e8d1:	call   0x64014893
6401e8d6:	and    DWORD PTR [eax],0x0
6401e8d9:	call   0x64014880
6401e8de:	mov    DWORD PTR [eax],0x9
6401e8e4:	or     eax,0xffffffff
6401e8e7:	jmp    0x6401e97a
6401e8ec:	xor    edi,edi
6401e8ee:	cmp    eax,edi
6401e8f0:	jl     0x6401e8fa
6401e8f2:	cmp    eax,DWORD PTR ds:0x640324e0
6401e8f8:	jb     0x6401e91b
6401e8fa:	call   0x64014893
6401e8ff:	mov    DWORD PTR [eax],edi
6401e901:	call   0x64014880
6401e906:	mov    DWORD PTR [eax],0x9
6401e90c:	push   edi
6401e90d:	push   edi
6401e90e:	push   edi
6401e90f:	push   edi
6401e910:	push   edi
6401e911:	call   0x640125f4
6401e916:	add    esp,0x14
6401e919:	jmp    0x6401e8e4
6401e91b:	mov    ecx,eax
6401e91d:	sar    ecx,0x5
6401e920:	lea    ebx,[ecx*4+0x64032500]
6401e927:	mov    esi,eax
6401e929:	and    esi,0x1f
6401e92c:	shl    esi,0x6
6401e92f:	mov    ecx,DWORD PTR [ebx]
6401e931:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401e936:	and    ecx,0x1
6401e939:	je     0x6401e8fa
6401e93b:	push   eax
6401e93c:	call   0x6401de10
6401e941:	pop    ecx
6401e942:	mov    DWORD PTR [ebp-0x4],edi
6401e945:	mov    eax,DWORD PTR [ebx]
6401e947:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401e94c:	je     0x6401e95c
6401e94e:	push   DWORD PTR [ebp+0x8]
6401e951:	call   0x6401e826
6401e956:	pop    ecx
6401e957:	mov    DWORD PTR [ebp-0x1c],eax
6401e95a:	jmp    0x6401e96b
6401e95c:	call   0x64014880
6401e961:	mov    DWORD PTR [eax],0x9
6401e967:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e96b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e972:	call   0x6401e980
6401e977:	mov    eax,DWORD PTR [ebp-0x1c]
6401e97a:	call   0x640140c5
6401e97f:	ret    
6401e980:	push   DWORD PTR [ebp+0x8]
6401e983:	call   0x6401deb0
6401e988:	pop    ecx
6401e989:	ret    
6401e98a:	push   esi
6401e98b:	mov    esi,DWORD PTR [esp+0x8]
6401e98f:	mov    eax,DWORD PTR [esi+0xc]
6401e992:	test   al,0x83
6401e994:	je     0x6401e9b4
6401e996:	test   al,0x8
6401e998:	je     0x6401e9b4
6401e99a:	push   DWORD PTR [esi+0x8]
6401e99d:	call   0x64013956
6401e9a2:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401e9a9:	xor    eax,eax
6401e9ab:	pop    ecx
6401e9ac:	mov    DWORD PTR [esi],eax
6401e9ae:	mov    DWORD PTR [esi+0x8],eax
6401e9b1:	mov    DWORD PTR [esi+0x4],eax
6401e9b4:	pop    esi
6401e9b5:	ret    
6401e9b6:	int3   
6401e9b7:	int3   
6401e9b8:	int3   
6401e9b9:	int3   
6401e9ba:	int3   
6401e9bb:	int3   
6401e9bc:	int3   
6401e9bd:	int3   
6401e9be:	int3   
6401e9bf:	int3   
6401e9c0:	lea    eax,[edx-0x1]
6401e9c3:	pop    ebx
6401e9c4:	ret    
6401e9c5:	lea    esp,[esp+0x0]
6401e9cc:	lea    esp,[esp+0x0]
6401e9d0:	xor    eax,eax
6401e9d2:	mov    al,BYTE PTR [esp+0x8]
6401e9d6:	push   ebx
6401e9d7:	mov    ebx,eax
6401e9d9:	shl    eax,0x8
6401e9dc:	mov    edx,DWORD PTR [esp+0x8]
6401e9e0:	test   edx,0x3
6401e9e6:	je     0x6401e9fd
6401e9e8:	mov    cl,BYTE PTR [edx]
6401e9ea:	add    edx,0x1
6401e9ed:	cmp    cl,bl
6401e9ef:	je     0x6401e9c0
6401e9f1:	test   cl,cl
6401e9f3:	je     0x6401ea46
6401e9f5:	test   edx,0x3
6401e9fb:	jne    0x6401e9e8
6401e9fd:	or     ebx,eax
6401e9ff:	push   edi
6401ea00:	mov    eax,ebx
6401ea02:	shl    ebx,0x10
6401ea05:	push   esi
6401ea06:	or     ebx,eax
6401ea08:	mov    ecx,DWORD PTR [edx]
6401ea0a:	mov    edi,0x7efefeff
6401ea0f:	mov    eax,ecx
6401ea11:	mov    esi,edi
6401ea13:	xor    ecx,ebx
6401ea15:	add    esi,eax
6401ea17:	add    edi,ecx
6401ea19:	xor    ecx,0xffffffff
6401ea1c:	xor    eax,0xffffffff
6401ea1f:	xor    ecx,edi
6401ea21:	xor    eax,esi
6401ea23:	add    edx,0x4
6401ea26:	and    ecx,0x81010100
6401ea2c:	jne    0x6401ea4a
6401ea2e:	and    eax,0x81010100
6401ea33:	je     0x6401ea08
6401ea35:	and    eax,0x1010100
6401ea3a:	jne    0x6401ea44
6401ea3c:	and    esi,0x80000000
6401ea42:	jne    0x6401ea08
6401ea44:	pop    esi
6401ea45:	pop    edi
6401ea46:	pop    ebx
6401ea47:	xor    eax,eax
6401ea49:	ret    
6401ea4a:	mov    eax,DWORD PTR [edx-0x4]
6401ea4d:	cmp    al,bl
6401ea4f:	je     0x6401ea87
6401ea51:	test   al,al
6401ea53:	je     0x6401ea44
6401ea55:	cmp    ah,bl
6401ea57:	je     0x6401ea80
6401ea59:	test   ah,ah
6401ea5b:	je     0x6401ea44
6401ea5d:	shr    eax,0x10
6401ea60:	cmp    al,bl
6401ea62:	je     0x6401ea79
6401ea64:	test   al,al
6401ea66:	je     0x6401ea44
6401ea68:	cmp    ah,bl
6401ea6a:	je     0x6401ea72
6401ea6c:	test   ah,ah
6401ea6e:	je     0x6401ea44
6401ea70:	jmp    0x6401ea08
6401ea72:	pop    esi
6401ea73:	pop    edi
6401ea74:	lea    eax,[edx-0x1]
6401ea77:	pop    ebx
6401ea78:	ret    
6401ea79:	lea    eax,[edx-0x2]
6401ea7c:	pop    esi
6401ea7d:	pop    edi
6401ea7e:	pop    ebx
6401ea7f:	ret    
6401ea80:	lea    eax,[edx-0x3]
6401ea83:	pop    esi
6401ea84:	pop    edi
6401ea85:	pop    ebx
6401ea86:	ret    
6401ea87:	lea    eax,[edx-0x4]
6401ea8a:	pop    esi
6401ea8b:	pop    edi
6401ea8c:	pop    ebx
6401ea8d:	ret    
6401ea8e:	int3   
6401ea8f:	int3   
6401ea90:	push   ebp
6401ea91:	mov    ebp,esp
6401ea93:	push   0xfffffffe
6401ea95:	push   0x6402aa40
6401ea9a:	push   0x640140e0
6401ea9f:	mov    eax,fs:0x0
6401eaa5:	push   eax
6401eaa6:	sub    esp,0x18
6401eaa9:	mov    eax,ds:0x6402d09c
6401eaae:	xor    DWORD PTR [ebp-0x8],eax
6401eab1:	xor    eax,ebp
6401eab3:	mov    DWORD PTR [ebp-0x1c],eax
6401eab6:	push   ebx
6401eab7:	push   esi
6401eab8:	push   edi
6401eab9:	push   eax
6401eaba:	lea    eax,[ebp-0x10]
6401eabd:	mov    fs:0x0,eax
6401eac3:	mov    DWORD PTR [ebp-0x18],esp
6401eac6:	mov    esi,DWORD PTR [ebp+0x8]
6401eac9:	test   esi,esi
6401eacb:	je     0x6401eb22
6401eacd:	push   esi
6401eace:	call   DWORD PTR ds:0x64025058
6401ead4:	mov    edi,eax
6401ead6:	add    edi,0x1
6401ead9:	mov    DWORD PTR [ebp-0x20],edi
6401eadc:	push   0x0
6401eade:	push   0x0
6401eae0:	push   edi
6401eae1:	push   esi
6401eae2:	push   0x0
6401eae4:	push   0x0
6401eae6:	call   DWORD PTR ds:0x64025024
6401eaec:	mov    esi,eax
6401eaee:	mov    DWORD PTR [ebp-0x28],esi
6401eaf1:	test   esi,esi
6401eaf3:	jne    0x6401eb29
6401eaf5:	mov    esi,DWORD PTR ds:0x64025044
6401eafb:	call   esi
6401eafd:	test   eax,eax
6401eaff:	jg     0x6401eb10
6401eb01:	call   esi
6401eb03:	push   eax
6401eb04:	call   0x6401ec20
6401eb09:	xor    eax,eax
6401eb0b:	jmp    0x6401ebf0
6401eb10:	call   esi
6401eb12:	and    eax,0xffff
6401eb17:	or     eax,0x80070000
6401eb1c:	push   eax
6401eb1d:	call   0x6401ec20
6401eb22:	xor    eax,eax
6401eb24:	jmp    0x6401ebf0
6401eb29:	mov    DWORD PTR [ebp-0x4],0x0
6401eb30:	lea    eax,[esi+esi*1]
6401eb33:	cmp    esi,0x1000
6401eb39:	jge    0x6401eb53
6401eb3b:	call   0x64013240
6401eb40:	mov    DWORD PTR [ebp-0x18],esp
6401eb43:	mov    eax,esp
6401eb45:	mov    ebx,eax
6401eb47:	mov    DWORD PTR [ebp-0x24],ebx
6401eb4a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401eb51:	jmp    0x6401eb85
6401eb53:	push   eax
6401eb54:	call   0x64013a33
6401eb59:	add    esp,0x4
6401eb5c:	mov    ebx,eax
6401eb5e:	mov    DWORD PTR [ebp-0x24],ebx
6401eb61:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401eb68:	jmp    0x6401eb85
6401eb6a:	mov    eax,0x1
6401eb6f:	ret    
6401eb70:	mov    esp,DWORD PTR [ebp-0x18]
6401eb73:	xor    ebx,ebx
6401eb75:	mov    DWORD PTR [ebp-0x24],ebx
6401eb78:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401eb7f:	mov    edi,DWORD PTR [ebp-0x20]
6401eb82:	mov    esi,DWORD PTR [ebp-0x28]
6401eb85:	test   ebx,ebx
6401eb87:	jne    0x6401eb97
6401eb89:	push   0x8007000e
6401eb8e:	call   0x6401ec20
6401eb93:	xor    eax,eax
6401eb95:	jmp    0x6401ebf0
6401eb97:	push   esi
6401eb98:	push   ebx
6401eb99:	push   edi
6401eb9a:	mov    ecx,DWORD PTR [ebp+0x8]
6401eb9d:	push   ecx
6401eb9e:	push   0x0
6401eba0:	push   0x0
6401eba2:	call   DWORD PTR ds:0x64025024
6401eba8:	test   eax,eax
6401ebaa:	jne    0x6401ebc6
6401ebac:	cmp    esi,0x1000
6401ebb2:	jl     0x6401eaf5
6401ebb8:	push   ebx
6401ebb9:	call   0x64013956
6401ebbe:	add    esp,0x4
6401ebc1:	jmp    0x6401eaf5
6401ebc6:	push   ebx
6401ebc7:	call   DWORD PTR ds:0x64025188
6401ebcd:	mov    edi,eax
6401ebcf:	cmp    esi,0x1000
6401ebd5:	jl     0x6401ebe0
6401ebd7:	push   ebx
6401ebd8:	call   0x64013956
6401ebdd:	add    esp,0x4
6401ebe0:	test   edi,edi
6401ebe2:	jne    0x6401ebee
6401ebe4:	push   0x8007000e
6401ebe9:	call   0x6401ec20
6401ebee:	mov    eax,edi
6401ebf0:	lea    esp,[ebp-0x38]
6401ebf3:	mov    ecx,DWORD PTR [ebp-0x10]
6401ebf6:	mov    DWORD PTR fs:0x0,ecx
6401ebfd:	pop    ecx
6401ebfe:	pop    edi
6401ebff:	pop    esi
6401ec00:	pop    ebx
6401ec01:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ec04:	xor    ecx,ebp
6401ec06:	call   0x64012abc
6401ec0b:	mov    esp,ebp
6401ec0d:	pop    ebp
6401ec0e:	ret    0x4
6401ec11:	int3   
6401ec12:	int3   
6401ec13:	int3   
6401ec14:	int3   
6401ec15:	int3   
6401ec16:	int3   
6401ec17:	int3   
6401ec18:	int3   
6401ec19:	int3   
6401ec1a:	int3   
6401ec1b:	int3   
6401ec1c:	int3   
6401ec1d:	int3   
6401ec1e:	int3   
6401ec1f:	int3   
6401ec20:	mov    eax,DWORD PTR [esp+0x4]
6401ec24:	push   0x0
6401ec26:	push   eax
6401ec27:	call   DWORD PTR ds:0x6402e040
6401ec2d:	ret    0x4
6401ec30:	push   esi
6401ec31:	mov    esi,ecx
6401ec33:	mov    eax,DWORD PTR [esi+0x8]
6401ec36:	test   eax,eax
6401ec38:	mov    DWORD PTR [esi],0x640275f8
6401ec3e:	je     0x6401ec48
6401ec40:	mov    ecx,DWORD PTR [eax]
6401ec42:	mov    edx,DWORD PTR [ecx+0x8]
6401ec45:	push   eax
6401ec46:	call   edx
6401ec48:	cmp    DWORD PTR [esi+0xc],0x0
6401ec4c:	je     0x6401ec65
6401ec4e:	call   DWORD PTR ds:0x64025110
6401ec54:	test   eax,eax
6401ec56:	je     0x6401ec65
6401ec58:	mov    ecx,DWORD PTR [esi+0xc]
6401ec5b:	push   ecx
6401ec5c:	push   0x0
6401ec5e:	push   eax
6401ec5f:	call   DWORD PTR ds:0x64025104
6401ec65:	pop    esi
6401ec66:	ret    
6401ec67:	int3   
6401ec68:	int3   
6401ec69:	int3   
6401ec6a:	int3   
6401ec6b:	int3   
6401ec6c:	int3   
6401ec6d:	int3   
6401ec6e:	int3   
6401ec6f:	int3   
6401ec70:	sub    esp,0x10
6401ec73:	mov    eax,DWORD PTR [esp+0x14]
6401ec77:	mov    ecx,DWORD PTR [esp+0x18]
6401ec7b:	push   0x6402aa5c
6401ec80:	lea    edx,[esp+0x4]
6401ec84:	push   edx
6401ec85:	mov    DWORD PTR [esp+0x8],0x640275f8
6401ec8d:	mov    DWORD PTR [esp+0xc],eax
6401ec91:	mov    DWORD PTR [esp+0x10],ecx
6401ec95:	mov    DWORD PTR [esp+0x14],0x0
6401ec9d:	call   0x640126ab
6401eca2:	int3   
6401eca3:	int3   
6401eca4:	int3   
6401eca5:	int3   
6401eca6:	int3   
6401eca7:	int3   
6401eca8:	int3   
6401eca9:	int3   
6401ecaa:	int3   
6401ecab:	int3   
6401ecac:	int3   
6401ecad:	int3   
6401ecae:	int3   
6401ecaf:	int3   
6401ecb0:	mov    eax,DWORD PTR [esp+0x4]
6401ecb4:	push   esi
6401ecb5:	mov    esi,ecx
6401ecb7:	mov    DWORD PTR [esi],0x640275f8
6401ecbd:	mov    ecx,DWORD PTR [eax+0x4]
6401ecc0:	mov    DWORD PTR [esi+0x4],ecx
6401ecc3:	mov    edx,DWORD PTR [eax+0x8]
6401ecc6:	mov    eax,edx
6401ecc8:	test   eax,eax
6401ecca:	mov    DWORD PTR [esi+0x8],edx
6401eccd:	mov    DWORD PTR [esi+0xc],0x0
6401ecd4:	je     0x6401ecde
6401ecd6:	mov    ecx,DWORD PTR [eax]
6401ecd8:	mov    edx,DWORD PTR [ecx+0x4]
6401ecdb:	push   eax
6401ecdc:	call   edx
6401ecde:	mov    eax,esi
6401ece0:	pop    esi
6401ece1:	ret    0x4
6401ece4:	int3   
6401ece5:	int3   
6401ece6:	int3   
6401ece7:	int3   
6401ece8:	int3   
6401ece9:	int3   
6401ecea:	int3   
6401eceb:	int3   
6401ecec:	int3   
6401eced:	int3   
6401ecee:	int3   
6401ecef:	int3   
6401ecf0:	push   esi
6401ecf1:	mov    esi,ecx
6401ecf3:	mov    eax,DWORD PTR [esi+0x8]
6401ecf6:	test   eax,eax
6401ecf8:	mov    DWORD PTR [esi],0x640275f8
6401ecfe:	je     0x6401ed08
6401ed00:	mov    ecx,DWORD PTR [eax]
6401ed02:	mov    edx,DWORD PTR [ecx+0x8]
6401ed05:	push   eax
6401ed06:	call   edx
6401ed08:	cmp    DWORD PTR [esi+0xc],0x0
6401ed0c:	je     0x6401ed25
6401ed0e:	call   DWORD PTR ds:0x64025110
6401ed14:	test   eax,eax
6401ed16:	je     0x6401ed25
6401ed18:	mov    ecx,DWORD PTR [esi+0xc]
6401ed1b:	push   ecx
6401ed1c:	push   0x0
6401ed1e:	push   eax
6401ed1f:	call   DWORD PTR ds:0x64025104
6401ed25:	test   BYTE PTR [esp+0x8],0x1
6401ed2a:	je     0x6401ed35
6401ed2c:	push   esi
6401ed2d:	call   0x64012262
6401ed32:	add    esp,0x4
6401ed35:	mov    eax,esi
6401ed37:	pop    esi
6401ed38:	ret    0x4
6401ed3b:	int3   
6401ed3c:	jmp    DWORD PTR ds:0x64025124
6401ed42:	push   ebp
6401ed43:	mov    ebp,esp
6401ed45:	sub    esp,0xc
6401ed48:	mov    eax,ds:0x6402d09c
6401ed4d:	xor    eax,ebp
6401ed4f:	mov    DWORD PTR [ebp-0x4],eax
6401ed52:	push   ebx
6401ed53:	push   esi
6401ed54:	push   edi
6401ed55:	mov    edi,DWORD PTR [ebp+0x8]
6401ed58:	xor    ebx,ebx
6401ed5a:	cmp    edi,ebx
6401ed5c:	jne    0x6401ed7a
6401ed5e:	call   0x64014880
6401ed63:	push   0x16
6401ed65:	pop    esi
6401ed66:	push   ebx
6401ed67:	push   ebx
6401ed68:	push   ebx
6401ed69:	push   ebx
6401ed6a:	push   ebx
6401ed6b:	mov    DWORD PTR [eax],esi
6401ed6d:	call   0x640125f4
6401ed72:	add    esp,0x14
6401ed75:	jmp    0x6401eeaf
6401ed7a:	push   DWORD PTR [ebp+0xc]
6401ed7d:	push   edi
6401ed7e:	call   0x6401e80c
6401ed83:	cmp    eax,DWORD PTR [ebp+0xc]
6401ed86:	pop    ecx
6401ed87:	pop    ecx
6401ed88:	jb     0x6401ed8e
6401ed8a:	mov    BYTE PTR [edi],bl
6401ed8c:	jmp    0x6401ed5e
6401ed8e:	mov    edx,DWORD PTR [ebp+0x10]
6401ed91:	mov    eax,DWORD PTR [edx]
6401ed93:	mov    ecx,DWORD PTR [eax+0x14]
6401ed96:	cmp    ecx,ebx
6401ed98:	jne    0x6401edba
6401ed9a:	cmp    BYTE PTR [edi],bl
6401ed9c:	mov    ecx,edi
6401ed9e:	je     0x6401edb3
6401eda0:	mov    al,BYTE PTR [ecx]
6401eda2:	cmp    al,0x41
6401eda4:	jl     0x6401edae
6401eda6:	cmp    al,0x5a
6401eda8:	jg     0x6401edae
6401edaa:	add    al,0x20
6401edac:	mov    BYTE PTR [ecx],al
6401edae:	inc    ecx
6401edaf:	cmp    BYTE PTR [ecx],bl
6401edb1:	jne    0x6401eda0
6401edb3:	xor    eax,eax
6401edb5:	jmp    0x6401eeb1
6401edba:	push   0x1
6401edbc:	push   DWORD PTR [eax+0x4]
6401edbf:	mov    esi,0x100
6401edc4:	push   ebx
6401edc5:	push   ebx
6401edc6:	push   0xffffffff
6401edc8:	push   edi
6401edc9:	push   esi
6401edca:	push   ecx
6401edcb:	push   edx
6401edcc:	call   0x64019dc7
6401edd1:	mov    ecx,eax
6401edd3:	add    esp,0x24
6401edd6:	cmp    ecx,ebx
6401edd8:	mov    DWORD PTR [ebp-0xc],ecx
6401eddb:	jne    0x6401edf4
6401eddd:	call   0x64014880
6401ede2:	mov    DWORD PTR [eax],0x2a
6401ede8:	call   0x64014880
6401eded:	mov    eax,DWORD PTR [eax]
6401edef:	jmp    0x6401eeb1
6401edf4:	cmp    DWORD PTR [ebp+0xc],ecx
6401edf7:	jae    0x6401ee07
6401edf9:	mov    BYTE PTR [edi],bl
6401edfb:	call   0x64014880
6401ee00:	push   0x22
6401ee02:	jmp    0x6401ed65
6401ee07:	cmp    ecx,ebx
6401ee09:	jle    0x6401ee50
6401ee0b:	push   0xffffffe0
6401ee0d:	xor    edx,edx
6401ee0f:	pop    eax
6401ee10:	div    ecx
6401ee12:	cmp    eax,0x1
6401ee15:	jb     0x6401ee50
6401ee17:	lea    eax,[ecx+0x8]
6401ee1a:	cmp    eax,0x400
6401ee1f:	ja     0x6401ee34
6401ee21:	call   0x64013240
6401ee26:	mov    eax,esp
6401ee28:	cmp    eax,ebx
6401ee2a:	je     0x6401ee48
6401ee2c:	mov    DWORD PTR [eax],0xcccc
6401ee32:	jmp    0x6401ee45
6401ee34:	push   eax
6401ee35:	call   0x64013a33
6401ee3a:	cmp    eax,ebx
6401ee3c:	pop    ecx
6401ee3d:	je     0x6401ee48
6401ee3f:	mov    DWORD PTR [eax],0xdddd
6401ee45:	add    eax,0x8
6401ee48:	mov    ecx,DWORD PTR [ebp-0xc]
6401ee4b:	mov    DWORD PTR [ebp-0x8],eax
6401ee4e:	jmp    0x6401ee53
6401ee50:	mov    DWORD PTR [ebp-0x8],ebx
6401ee53:	cmp    DWORD PTR [ebp-0x8],ebx
6401ee56:	jne    0x6401ee65
6401ee58:	call   0x64014880
6401ee5d:	mov    DWORD PTR [eax],0xc
6401ee63:	jmp    0x6401ede8
6401ee65:	mov    edx,DWORD PTR [ebp+0x10]
6401ee68:	mov    eax,DWORD PTR [edx]
6401ee6a:	push   0x1
6401ee6c:	push   DWORD PTR [eax+0x4]
6401ee6f:	push   ecx
6401ee70:	push   DWORD PTR [ebp-0x8]
6401ee73:	push   0xffffffff
6401ee75:	push   edi
6401ee76:	push   esi
6401ee77:	push   DWORD PTR [eax+0x14]
6401ee7a:	push   edx
6401ee7b:	call   0x64019dc7
6401ee80:	add    esp,0x24
6401ee83:	test   eax,eax
6401ee85:	je     0x6401ee9a
6401ee87:	push   DWORD PTR [ebp-0x8]
6401ee8a:	push   DWORD PTR [ebp+0xc]
6401ee8d:	push   edi
6401ee8e:	call   0x64014478
6401ee93:	add    esp,0xc
6401ee96:	mov    esi,eax
6401ee98:	jmp    0x6401eea6
6401ee9a:	call   0x64014880
6401ee9f:	push   0x2a
6401eea1:	pop    ecx
6401eea2:	mov    DWORD PTR [eax],ecx
6401eea4:	mov    esi,ecx
6401eea6:	push   DWORD PTR [ebp-0x8]
6401eea9:	call   0x64012fcc
6401eeae:	pop    ecx
6401eeaf:	mov    eax,esi
6401eeb1:	lea    esp,[ebp-0x18]
6401eeb4:	pop    edi
6401eeb5:	pop    esi
6401eeb6:	pop    ebx
6401eeb7:	mov    ecx,DWORD PTR [ebp-0x4]
6401eeba:	xor    ecx,ebp
6401eebc:	call   0x64012abc
6401eec1:	leave  
6401eec2:	ret    
6401eec3:	push   ebp
6401eec4:	mov    ebp,esp
6401eec6:	sub    esp,0x10
6401eec9:	push   DWORD PTR [ebp+0x10]
6401eecc:	lea    ecx,[ebp-0x10]
6401eecf:	call   0x64012c5f
6401eed4:	lea    eax,[ebp-0x10]
6401eed7:	push   eax
6401eed8:	push   DWORD PTR [ebp+0xc]
6401eedb:	push   DWORD PTR [ebp+0x8]
6401eede:	call   0x6401ed42
6401eee3:	add    esp,0xc
6401eee6:	cmp    BYTE PTR [ebp-0x4],0x0
6401eeea:	je     0x6401eef3
6401eeec:	mov    ecx,DWORD PTR [ebp-0x8]
6401eeef:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401eef3:	leave  
6401eef4:	ret    
6401eef5:	push   ebx
6401eef6:	xor    ebx,ebx
6401eef8:	cmp    DWORD PTR ds:0x6402e934,ebx
6401eefe:	jne    0x6401ef42
6401ef00:	mov    eax,DWORD PTR [esp+0x8]
6401ef04:	cmp    eax,ebx
6401ef06:	jne    0x6401ef24
6401ef08:	call   0x64014880
6401ef0d:	push   ebx
6401ef0e:	push   ebx
6401ef0f:	push   ebx
6401ef10:	push   ebx
6401ef11:	push   ebx
6401ef12:	mov    DWORD PTR [eax],0x16
6401ef18:	call   0x640125f4
6401ef1d:	add    esp,0x14
6401ef20:	xor    eax,eax
6401ef22:	pop    ebx
6401ef23:	ret    
6401ef24:	cmp    BYTE PTR [eax],bl
6401ef26:	mov    edx,eax
6401ef28:	je     0x6401ef55
6401ef2a:	mov    cl,BYTE PTR [edx]
6401ef2c:	cmp    cl,0x41
6401ef2f:	jl     0x6401ef3b
6401ef31:	cmp    cl,0x5a
6401ef34:	jg     0x6401ef3b
6401ef36:	add    cl,0x20
6401ef39:	mov    BYTE PTR [edx],cl
6401ef3b:	inc    edx
6401ef3c:	cmp    BYTE PTR [edx],bl
6401ef3e:	jne    0x6401ef2a
6401ef40:	pop    ebx
6401ef41:	ret    
6401ef42:	push   ebx
6401ef43:	push   0xffffffff
6401ef45:	push   DWORD PTR [esp+0x10]
6401ef49:	call   0x6401eec3
6401ef4e:	mov    eax,DWORD PTR [esp+0x14]
6401ef52:	add    esp,0xc
6401ef55:	pop    ebx
6401ef56:	ret    
6401ef57:	ret    
6401ef58:	mov    eax,0x6401fa63
6401ef5d:	mov    ds:0x6402db4c,eax
6401ef62:	mov    DWORD PTR ds:0x6402db50,0x6401f15f
6401ef6c:	mov    DWORD PTR ds:0x6402db54,0x6401f11d
6401ef76:	mov    DWORD PTR ds:0x6402db58,0x6401f151
6401ef80:	mov    DWORD PTR ds:0x6402db5c,0x6401f0c7
6401ef8a:	mov    ds:0x6402db60,eax
6401ef8f:	mov    DWORD PTR ds:0x6402db64,0x6401f9dd
6401ef99:	mov    DWORD PTR ds:0x6402db68,0x6401f0dd
6401efa3:	mov    DWORD PTR ds:0x6402db6c,0x6401f047
6401efad:	mov    DWORD PTR ds:0x6402db70,0x6401efd6
6401efb7:	ret    
6401efb8:	call   0x6401ef58
6401efbd:	call   0x6401fae9
6401efc2:	cmp    DWORD PTR [esp+0x4],0x0
6401efc7:	mov    ds:0x6402f034,eax
6401efcc:	je     0x6401efd3
6401efce:	call   0x6401fa84
6401efd3:	fnclex 
6401efd5:	ret    
6401efd6:	push   ebp
6401efd7:	mov    ebp,esp
6401efd9:	sub    esp,0x10
6401efdc:	push   esi
6401efdd:	push   DWORD PTR [ebp+0xc]
6401efe0:	lea    ecx,[ebp-0x10]
6401efe3:	call   0x64012c5f
6401efe8:	mov    esi,DWORD PTR [ebp+0x8]
6401efeb:	movsx  eax,BYTE PTR [esi]
6401efee:	push   eax
6401efef:	call   0x640137c0
6401eff4:	cmp    eax,0x65
6401eff7:	jmp    0x6401f005
6401eff9:	inc    esi
6401effa:	movzx  eax,BYTE PTR [esi]
6401effd:	push   eax
6401effe:	call   0x64013836
6401f003:	test   eax,eax
6401f005:	pop    ecx
6401f006:	jne    0x6401eff9
6401f008:	movsx  eax,BYTE PTR [esi]
6401f00b:	push   eax
6401f00c:	call   0x640137c0
6401f011:	cmp    eax,0x78
6401f014:	pop    ecx
6401f015:	jne    0x6401f019
6401f017:	inc    esi
6401f018:	inc    esi
6401f019:	mov    ecx,DWORD PTR [ebp-0x10]
6401f01c:	mov    ecx,DWORD PTR [ecx+0xbc]
6401f022:	mov    ecx,DWORD PTR [ecx]
6401f024:	mov    al,BYTE PTR [esi]
6401f026:	mov    cl,BYTE PTR [ecx]
6401f028:	mov    BYTE PTR [esi],cl
6401f02a:	inc    esi
6401f02b:	mov    cl,BYTE PTR [esi]
6401f02d:	mov    BYTE PTR [esi],al
6401f02f:	mov    al,cl
6401f031:	mov    cl,BYTE PTR [esi]
6401f033:	inc    esi
6401f034:	test   cl,cl
6401f036:	jne    0x6401f02b
6401f038:	cmp    BYTE PTR [ebp-0x4],cl
6401f03b:	pop    esi
6401f03c:	je     0x6401f045
6401f03e:	mov    eax,DWORD PTR [ebp-0x8]
6401f041:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f045:	leave  
6401f046:	ret    
6401f047:	push   ebp
6401f048:	mov    ebp,esp
6401f04a:	sub    esp,0x10
6401f04d:	push   esi
6401f04e:	push   DWORD PTR [ebp+0xc]
6401f051:	lea    ecx,[ebp-0x10]
6401f054:	call   0x64012c5f
6401f059:	mov    eax,DWORD PTR [ebp+0x8]
6401f05c:	mov    cl,BYTE PTR [eax]
6401f05e:	test   cl,cl
6401f060:	mov    esi,DWORD PTR [ebp-0x10]
6401f063:	je     0x6401f07a
6401f065:	mov    edx,DWORD PTR [esi+0xbc]
6401f06b:	mov    edx,DWORD PTR [edx]
6401f06d:	mov    dl,BYTE PTR [edx]
6401f06f:	cmp    cl,dl
6401f071:	je     0x6401f07a
6401f073:	inc    eax
6401f074:	mov    cl,BYTE PTR [eax]
6401f076:	test   cl,cl
6401f078:	jne    0x6401f06f
6401f07a:	mov    cl,BYTE PTR [eax]
6401f07c:	inc    eax
6401f07d:	test   cl,cl
6401f07f:	je     0x6401f0b7
6401f081:	jmp    0x6401f08e
6401f083:	cmp    cl,0x65
6401f086:	je     0x6401f094
6401f088:	cmp    cl,0x45
6401f08b:	je     0x6401f094
6401f08d:	inc    eax
6401f08e:	mov    cl,BYTE PTR [eax]
6401f090:	test   cl,cl
6401f092:	jne    0x6401f083
6401f094:	mov    edx,eax
6401f096:	dec    eax
6401f097:	cmp    BYTE PTR [eax],0x30
6401f09a:	je     0x6401f096
6401f09c:	mov    ecx,DWORD PTR [esi+0xbc]
6401f0a2:	mov    ecx,DWORD PTR [ecx]
6401f0a4:	push   ebx
6401f0a5:	mov    bl,BYTE PTR [eax]
6401f0a7:	cmp    bl,BYTE PTR [ecx]
6401f0a9:	pop    ebx
6401f0aa:	jne    0x6401f0ad
6401f0ac:	dec    eax
6401f0ad:	mov    cl,BYTE PTR [edx]
6401f0af:	inc    eax
6401f0b0:	inc    edx
6401f0b1:	test   cl,cl
6401f0b3:	mov    BYTE PTR [eax],cl
6401f0b5:	jne    0x6401f0ad
6401f0b7:	cmp    BYTE PTR [ebp-0x4],0x0
6401f0bb:	pop    esi
6401f0bc:	je     0x6401f0c5
6401f0be:	mov    eax,DWORD PTR [ebp-0x8]
6401f0c1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f0c5:	leave  
6401f0c6:	ret    
6401f0c7:	fldz   
6401f0c9:	mov    eax,DWORD PTR [esp+0x4]
6401f0cd:	fcomp  QWORD PTR [eax]
6401f0cf:	fnstsw ax
6401f0d1:	test   ah,0x41
6401f0d4:	jp     0x6401f0da
6401f0d6:	xor    eax,eax
6401f0d8:	inc    eax
6401f0d9:	ret    
6401f0da:	xor    eax,eax
6401f0dc:	ret    
6401f0dd:	push   ebp
6401f0de:	mov    ebp,esp
6401f0e0:	push   ecx
6401f0e1:	push   ecx
6401f0e2:	cmp    DWORD PTR [ebp+0x8],0x0
6401f0e6:	push   DWORD PTR [ebp+0x14]
6401f0e9:	push   DWORD PTR [ebp+0x10]
6401f0ec:	je     0x6401f107
6401f0ee:	lea    eax,[ebp-0x8]
6401f0f1:	push   eax
6401f0f2:	call   0x6401fb4d
6401f0f7:	mov    ecx,DWORD PTR [ebp-0x8]
6401f0fa:	mov    eax,DWORD PTR [ebp+0xc]
6401f0fd:	mov    DWORD PTR [eax],ecx
6401f0ff:	mov    ecx,DWORD PTR [ebp-0x4]
6401f102:	mov    DWORD PTR [eax+0x4],ecx
6401f105:	jmp    0x6401f118
6401f107:	lea    eax,[ebp+0x8]
6401f10a:	push   eax
6401f10b:	call   0x6401fbf3
6401f110:	mov    eax,DWORD PTR [ebp+0xc]
6401f113:	mov    ecx,DWORD PTR [ebp+0x8]
6401f116:	mov    DWORD PTR [eax],ecx
6401f118:	add    esp,0xc
6401f11b:	leave  
6401f11c:	ret    
6401f11d:	push   0x0
6401f11f:	push   DWORD PTR [esp+0x10]
6401f123:	push   DWORD PTR [esp+0x10]
6401f127:	push   DWORD PTR [esp+0x10]
6401f12b:	call   0x6401f0dd
6401f130:	add    esp,0x10
6401f133:	ret    
6401f134:	test   edi,edi
6401f136:	push   esi
6401f137:	mov    esi,eax
6401f139:	je     0x6401f14f
6401f13b:	push   esi
6401f13c:	call   0x64014280
6401f141:	inc    eax
6401f142:	push   eax
6401f143:	push   esi
6401f144:	add    esi,edi
6401f146:	push   esi
6401f147:	call   0x64013b00
6401f14c:	add    esp,0x10
6401f14f:	pop    esi
6401f150:	ret    
6401f151:	push   0x0
6401f153:	push   DWORD PTR [esp+0x8]
6401f157:	call   0x6401efd6
6401f15c:	pop    ecx
6401f15d:	pop    ecx
6401f15e:	ret    
6401f15f:	push   0x0
6401f161:	push   DWORD PTR [esp+0x8]
6401f165:	call   0x6401f047
6401f16a:	pop    ecx
6401f16b:	pop    ecx
6401f16c:	ret    
6401f16d:	push   ebp
6401f16e:	mov    ebp,esp
6401f170:	sub    esp,0x10
6401f173:	push   ebx
6401f174:	push   esi
6401f175:	push   edi
6401f176:	push   DWORD PTR [ebp+0x1c]
6401f179:	lea    ecx,[ebp-0x10]
6401f17c:	mov    ebx,eax
6401f17e:	call   0x64012c5f
6401f183:	xor    esi,esi
6401f185:	cmp    ebx,esi
6401f187:	jne    0x6401f1b4
6401f189:	call   0x64014880
6401f18e:	push   0x16
6401f190:	pop    edi
6401f191:	push   esi
6401f192:	push   esi
6401f193:	push   esi
6401f194:	push   esi
6401f195:	push   esi
6401f196:	mov    DWORD PTR [eax],edi
6401f198:	call   0x640125f4
6401f19d:	add    esp,0x14
6401f1a0:	cmp    BYTE PTR [ebp-0x4],0x0
6401f1a4:	je     0x6401f1ad
6401f1a6:	mov    eax,DWORD PTR [ebp-0x8]
6401f1a9:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f1ad:	mov    eax,edi
6401f1af:	jmp    0x6401f2d5
6401f1b4:	cmp    DWORD PTR [ebp+0x8],esi
6401f1b7:	jbe    0x6401f189
6401f1b9:	cmp    DWORD PTR [ebp+0xc],esi
6401f1bc:	jle    0x6401f1c3
6401f1be:	mov    eax,DWORD PTR [ebp+0xc]
6401f1c1:	jmp    0x6401f1c5
6401f1c3:	xor    eax,eax
6401f1c5:	add    eax,0x9
6401f1c8:	cmp    DWORD PTR [ebp+0x8],eax
6401f1cb:	ja     0x6401f1d6
6401f1cd:	call   0x64014880
6401f1d2:	push   0x22
6401f1d4:	jmp    0x6401f190
6401f1d6:	cmp    BYTE PTR [ebp+0x18],0x0
6401f1da:	je     0x6401f1fa
6401f1dc:	mov    edx,DWORD PTR [ebp+0x14]
6401f1df:	xor    eax,eax
6401f1e1:	cmp    DWORD PTR [ebp+0xc],esi
6401f1e4:	setg   al
6401f1e7:	xor    ecx,ecx
6401f1e9:	cmp    DWORD PTR [edx],0x2d
6401f1ec:	sete   cl
6401f1ef:	mov    edi,eax
6401f1f1:	add    ecx,ebx
6401f1f3:	mov    eax,ecx
6401f1f5:	call   0x6401f134
6401f1fa:	mov    edi,DWORD PTR [ebp+0x14]
6401f1fd:	cmp    DWORD PTR [edi],0x2d
6401f200:	mov    esi,ebx
6401f202:	jne    0x6401f20a
6401f204:	mov    BYTE PTR [ebx],0x2d
6401f207:	lea    esi,[ebx+0x1]
6401f20a:	cmp    DWORD PTR [ebp+0xc],0x0
6401f20e:	jle    0x6401f228
6401f210:	lea    eax,[esi+0x1]
6401f213:	mov    cl,BYTE PTR [eax]
6401f215:	mov    BYTE PTR [esi],cl
6401f217:	mov    esi,eax
6401f219:	mov    eax,DWORD PTR [ebp-0x10]
6401f21c:	mov    eax,DWORD PTR [eax+0xbc]
6401f222:	mov    eax,DWORD PTR [eax]
6401f224:	mov    al,BYTE PTR [eax]
6401f226:	mov    BYTE PTR [esi],al
6401f228:	xor    eax,eax
6401f22a:	cmp    BYTE PTR [ebp+0x18],al
6401f22d:	sete   al
6401f230:	add    eax,DWORD PTR [ebp+0xc]
6401f233:	add    esi,eax
6401f235:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6401f239:	jne    0x6401f240
6401f23b:	or     ebx,0xffffffff
6401f23e:	jmp    0x6401f245
6401f240:	sub    ebx,esi
6401f242:	add    ebx,DWORD PTR [ebp+0x8]
6401f245:	push   0x64027608
6401f24a:	push   ebx
6401f24b:	push   esi
6401f24c:	call   0x64014478
6401f251:	add    esp,0xc
6401f254:	xor    ebx,ebx
6401f256:	test   eax,eax
6401f258:	je     0x6401f267
6401f25a:	push   ebx
6401f25b:	push   ebx
6401f25c:	push   ebx
6401f25d:	push   ebx
6401f25e:	push   ebx
6401f25f:	call   0x640124f8
6401f264:	add    esp,0x14
6401f267:	cmp    DWORD PTR [ebp+0x10],ebx
6401f26a:	lea    ecx,[esi+0x2]
6401f26d:	je     0x6401f272
6401f26f:	mov    BYTE PTR [esi],0x45
6401f272:	mov    eax,DWORD PTR [edi+0xc]
6401f275:	inc    esi
6401f276:	cmp    BYTE PTR [eax],0x30
6401f279:	je     0x6401f2a9
6401f27b:	mov    eax,DWORD PTR [edi+0x4]
6401f27e:	dec    eax
6401f27f:	jns    0x6401f286
6401f281:	neg    eax
6401f283:	mov    BYTE PTR [esi],0x2d
6401f286:	inc    esi
6401f287:	cmp    eax,0x64
6401f28a:	jl     0x6401f296
6401f28c:	cdq    
6401f28d:	push   0x64
6401f28f:	pop    edi
6401f290:	idiv   edi
6401f292:	add    BYTE PTR [esi],al
6401f294:	mov    eax,edx
6401f296:	inc    esi
6401f297:	cmp    eax,0xa
6401f29a:	jl     0x6401f2a6
6401f29c:	cdq    
6401f29d:	push   0xa
6401f29f:	pop    edi
6401f2a0:	idiv   edi
6401f2a2:	add    BYTE PTR [esi],al
6401f2a4:	mov    eax,edx
6401f2a6:	add    BYTE PTR [esi+0x1],al
6401f2a9:	test   BYTE PTR ds:0x6402f038,0x1
6401f2b0:	je     0x6401f2c6
6401f2b2:	cmp    BYTE PTR [ecx],0x30
6401f2b5:	jne    0x6401f2c6
6401f2b7:	push   0x3
6401f2b9:	lea    eax,[ecx+0x1]
6401f2bc:	push   eax
6401f2bd:	push   ecx
6401f2be:	call   0x64013b00
6401f2c3:	add    esp,0xc
6401f2c6:	cmp    BYTE PTR [ebp-0x4],0x0
6401f2ca:	je     0x6401f2d3
6401f2cc:	mov    eax,DWORD PTR [ebp-0x8]
6401f2cf:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f2d3:	xor    eax,eax
6401f2d5:	pop    edi
6401f2d6:	pop    esi
6401f2d7:	pop    ebx
6401f2d8:	leave  
6401f2d9:	ret    
6401f2da:	push   ebp
6401f2db:	mov    ebp,esp
6401f2dd:	sub    esp,0x2c
6401f2e0:	mov    eax,ds:0x6402d09c
6401f2e5:	xor    eax,ebp
6401f2e7:	mov    DWORD PTR [ebp-0x4],eax
6401f2ea:	mov    eax,DWORD PTR [ebp+0x8]
6401f2ed:	push   ebx
6401f2ee:	push   esi
6401f2ef:	push   edi
6401f2f0:	mov    edi,DWORD PTR [ebp+0xc]
6401f2f3:	push   0x16
6401f2f5:	pop    esi
6401f2f6:	push   esi
6401f2f7:	lea    ecx,[ebp-0x1c]
6401f2fa:	push   ecx
6401f2fb:	lea    ecx,[ebp-0x2c]
6401f2fe:	push   ecx
6401f2ff:	push   DWORD PTR [eax+0x4]
6401f302:	push   DWORD PTR [eax]
6401f304:	call   0x6401fe11
6401f309:	xor    ebx,ebx
6401f30b:	add    esp,0x14
6401f30e:	cmp    edi,ebx
6401f310:	jne    0x6401f32a
6401f312:	call   0x64014880
6401f317:	push   ebx
6401f318:	push   ebx
6401f319:	push   ebx
6401f31a:	push   ebx
6401f31b:	push   ebx
6401f31c:	mov    DWORD PTR [eax],esi
6401f31e:	call   0x640125f4
6401f323:	add    esp,0x14
6401f326:	mov    eax,esi
6401f328:	jmp    0x6401f399
6401f32a:	mov    eax,DWORD PTR [ebp+0x10]
6401f32d:	cmp    eax,ebx
6401f32f:	jbe    0x6401f312
6401f331:	cmp    eax,0xffffffff
6401f334:	mov    esi,DWORD PTR [ebp+0x14]
6401f337:	jne    0x6401f33e
6401f339:	or     eax,0xffffffff
6401f33c:	jmp    0x6401f352
6401f33e:	xor    ecx,ecx
6401f340:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f344:	sete   cl
6401f347:	sub    eax,ecx
6401f349:	xor    ecx,ecx
6401f34b:	cmp    esi,ebx
6401f34d:	setg   cl
6401f350:	sub    eax,ecx
6401f352:	lea    ecx,[ebp-0x2c]
6401f355:	push   ecx
6401f356:	lea    ecx,[esi+0x1]
6401f359:	push   ecx
6401f35a:	push   eax
6401f35b:	xor    eax,eax
6401f35d:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f361:	sete   al
6401f364:	xor    ecx,ecx
6401f366:	cmp    esi,ebx
6401f368:	setg   cl
6401f36b:	add    eax,edi
6401f36d:	add    ecx,eax
6401f36f:	push   ecx
6401f370:	call   0x6401fc99
6401f375:	add    esp,0x10
6401f378:	cmp    eax,ebx
6401f37a:	je     0x6401f380
6401f37c:	mov    BYTE PTR [edi],bl
6401f37e:	jmp    0x6401f399
6401f380:	push   DWORD PTR [ebp+0x1c]
6401f383:	lea    eax,[ebp-0x2c]
6401f386:	push   ebx
6401f387:	push   eax
6401f388:	push   DWORD PTR [ebp+0x18]
6401f38b:	mov    eax,edi
6401f38d:	push   esi
6401f38e:	push   DWORD PTR [ebp+0x10]
6401f391:	call   0x6401f16d
6401f396:	add    esp,0x18
6401f399:	mov    ecx,DWORD PTR [ebp-0x4]
6401f39c:	pop    edi
6401f39d:	pop    esi
6401f39e:	xor    ecx,ebp
6401f3a0:	pop    ebx
6401f3a1:	call   0x64012abc
6401f3a6:	leave  
6401f3a7:	ret    
6401f3a8:	push   ebp
6401f3a9:	mov    ebp,esp
6401f3ab:	push   0x0
6401f3ad:	push   DWORD PTR [ebp+0x18]
6401f3b0:	push   DWORD PTR [ebp+0x14]
6401f3b3:	push   DWORD PTR [ebp+0x10]
6401f3b6:	push   DWORD PTR [ebp+0xc]
6401f3b9:	push   DWORD PTR [ebp+0x8]
6401f3bc:	call   0x6401f2da
6401f3c1:	add    esp,0x18
6401f3c4:	pop    ebp
6401f3c5:	ret    
6401f3c6:	push   ebp
6401f3c7:	mov    ebp,esp
6401f3c9:	sub    esp,0x24
6401f3cc:	push   esi
6401f3cd:	push   edi
6401f3ce:	push   DWORD PTR [ebp+0x1c]
6401f3d1:	lea    ecx,[ebp-0x24]
6401f3d4:	mov    DWORD PTR [ebp-0x14],0x3ff
6401f3db:	xor    edi,edi
6401f3dd:	mov    DWORD PTR [ebp-0x4],0x30
6401f3e4:	call   0x64012c5f
6401f3e9:	cmp    DWORD PTR [ebp+0x14],edi
6401f3ec:	jge    0x6401f3f1
6401f3ee:	mov    DWORD PTR [ebp+0x14],edi
6401f3f1:	mov    esi,DWORD PTR [ebp+0xc]
6401f3f4:	cmp    esi,edi
6401f3f6:	jne    0x6401f423
6401f3f8:	call   0x64014880
6401f3fd:	push   0x16
6401f3ff:	pop    esi
6401f400:	push   edi
6401f401:	push   edi
6401f402:	push   edi
6401f403:	push   edi
6401f404:	push   edi
6401f405:	mov    DWORD PTR [eax],esi
6401f407:	call   0x640125f4
6401f40c:	add    esp,0x14
6401f40f:	cmp    BYTE PTR [ebp-0x18],0x0
6401f413:	je     0x6401f41c
6401f415:	mov    eax,DWORD PTR [ebp-0x1c]
6401f418:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f41c:	mov    eax,esi
6401f41e:	jmp    0x6401f733
6401f423:	cmp    DWORD PTR [ebp+0x10],edi
6401f426:	jbe    0x6401f3f8
6401f428:	mov    eax,DWORD PTR [ebp+0x14]
6401f42b:	add    eax,0xb
6401f42e:	cmp    DWORD PTR [ebp+0x10],eax
6401f431:	mov    BYTE PTR [esi],0x0
6401f434:	ja     0x6401f43f
6401f436:	call   0x64014880
6401f43b:	push   0x22
6401f43d:	jmp    0x6401f3ff
6401f43f:	mov    edi,DWORD PTR [ebp+0x8]
6401f442:	mov    eax,DWORD PTR [edi]
6401f444:	mov    DWORD PTR [ebp-0xc],eax
6401f447:	mov    eax,DWORD PTR [edi+0x4]
6401f44a:	mov    ecx,eax
6401f44c:	shr    ecx,0x14
6401f44f:	mov    edx,0x7ff
6401f454:	push   ebx
6401f455:	and    ecx,edx
6401f457:	xor    ebx,ebx
6401f459:	cmp    ecx,edx
6401f45b:	jne    0x6401f4f1
6401f461:	test   ebx,ebx
6401f463:	jne    0x6401f4f1
6401f469:	mov    eax,DWORD PTR [ebp+0x10]
6401f46c:	cmp    eax,0xffffffff
6401f46f:	jne    0x6401f475
6401f471:	or     eax,eax
6401f473:	jmp    0x6401f478
6401f475:	add    eax,0xfffffffe
6401f478:	push   0x0
6401f47a:	push   DWORD PTR [ebp+0x14]
6401f47d:	lea    ebx,[esi+0x2]
6401f480:	push   eax
6401f481:	push   ebx
6401f482:	push   edi
6401f483:	call   0x6401f3a8
6401f488:	add    esp,0x14
6401f48b:	test   eax,eax
6401f48d:	je     0x6401f4a8
6401f48f:	cmp    BYTE PTR [ebp-0x18],0x0
6401f493:	mov    BYTE PTR [esi],0x0
6401f496:	je     0x6401f732
6401f49c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401f49f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401f4a3:	jmp    0x6401f732
6401f4a8:	cmp    BYTE PTR [ebx],0x2d
6401f4ab:	jne    0x6401f4b1
6401f4ad:	mov    BYTE PTR [esi],0x2d
6401f4b0:	inc    esi
6401f4b1:	mov    BYTE PTR [esi],0x30
6401f4b4:	inc    esi
6401f4b5:	cmp    DWORD PTR [ebp+0x18],0x0
6401f4b9:	push   0x65
6401f4bb:	sete   al
6401f4be:	dec    al
6401f4c0:	and    al,0xe0
6401f4c2:	add    al,0x78
6401f4c4:	mov    BYTE PTR [esi],al
6401f4c6:	inc    esi
6401f4c7:	push   esi
6401f4c8:	call   0x6401fb20
6401f4cd:	test   eax,eax
6401f4cf:	pop    ecx
6401f4d0:	pop    ecx
6401f4d1:	je     0x6401f723
6401f4d7:	cmp    DWORD PTR [ebp+0x18],0x0
6401f4db:	sete   cl
6401f4de:	dec    cl
6401f4e0:	and    cl,0xe0
6401f4e3:	add    cl,0x70
6401f4e6:	mov    BYTE PTR [eax],cl
6401f4e8:	mov    BYTE PTR [eax+0x3],0x0
6401f4ec:	jmp    0x6401f723
6401f4f1:	and    eax,0x80000000
6401f4f6:	xor    ecx,ecx
6401f4f8:	or     ecx,eax
6401f4fa:	je     0x6401f500
6401f4fc:	mov    BYTE PTR [esi],0x2d
6401f4ff:	inc    esi
6401f500:	mov    ebx,DWORD PTR [ebp+0x18]
6401f503:	mov    BYTE PTR [esi],0x30
6401f506:	inc    esi
6401f507:	test   ebx,ebx
6401f509:	sete   al
6401f50c:	dec    al
6401f50e:	and    al,0xe0
6401f510:	add    al,0x78
6401f512:	mov    BYTE PTR [esi],al
6401f514:	mov    ecx,DWORD PTR [edi+0x4]
6401f517:	inc    esi
6401f518:	neg    ebx
6401f51a:	sbb    ebx,ebx
6401f51c:	and    ebx,0xffffffe0
6401f51f:	and    ecx,0x7ff00000
6401f525:	xor    eax,eax
6401f527:	add    ebx,0x27
6401f52a:	xor    edx,edx
6401f52c:	or     eax,ecx
6401f52e:	jne    0x6401f551
6401f530:	mov    BYTE PTR [esi],0x30
6401f533:	mov    ecx,DWORD PTR [edi+0x4]
6401f536:	mov    eax,DWORD PTR [edi]
6401f538:	and    ecx,0xfffff
6401f53e:	inc    esi
6401f53f:	or     eax,ecx
6401f541:	jne    0x6401f548
6401f543:	mov    DWORD PTR [ebp-0x14],edx
6401f546:	jmp    0x6401f555
6401f548:	mov    DWORD PTR [ebp-0x14],0x3fe
6401f54f:	jmp    0x6401f555
6401f551:	mov    BYTE PTR [esi],0x31
6401f554:	inc    esi
6401f555:	mov    eax,esi
6401f557:	inc    esi
6401f558:	cmp    DWORD PTR [ebp+0x14],edx
6401f55b:	mov    DWORD PTR [ebp+0xc],eax
6401f55e:	jne    0x6401f564
6401f560:	mov    BYTE PTR [eax],dl
6401f562:	jmp    0x6401f573
6401f564:	mov    ecx,DWORD PTR [ebp-0x24]
6401f567:	mov    ecx,DWORD PTR [ecx+0xbc]
6401f56d:	mov    ecx,DWORD PTR [ecx]
6401f56f:	mov    cl,BYTE PTR [ecx]
6401f571:	mov    BYTE PTR [eax],cl
6401f573:	mov    ecx,DWORD PTR [edi+0x4]
6401f576:	mov    eax,DWORD PTR [edi]
6401f578:	and    ecx,0xfffff
6401f57e:	mov    DWORD PTR [ebp-0x8],ecx
6401f581:	ja     0x6401f58b
6401f583:	cmp    eax,edx
6401f585:	jbe    0x6401f640
6401f58b:	mov    DWORD PTR [ebp-0xc],edx
6401f58e:	mov    DWORD PTR [ebp-0x8],0xf0000
6401f595:	cmp    DWORD PTR [ebp+0x14],0x0
6401f599:	jle    0x6401f5e8
6401f59b:	mov    edx,DWORD PTR [edi+0x4]
6401f59e:	and    edx,DWORD PTR [ebp-0x8]
6401f5a1:	mov    eax,DWORD PTR [edi]
6401f5a3:	movsx  ecx,WORD PTR [ebp-0x4]
6401f5a7:	and    eax,DWORD PTR [ebp-0xc]
6401f5aa:	and    edx,0xfffff
6401f5b0:	call   0x6401ff80
6401f5b5:	add    ax,0x30
6401f5b9:	movzx  eax,ax
6401f5bc:	cmp    ax,0x39
6401f5c0:	jbe    0x6401f5c4
6401f5c2:	add    eax,ebx
6401f5c4:	mov    ecx,DWORD PTR [ebp-0x8]
6401f5c7:	sub    DWORD PTR [ebp-0x4],0x4
6401f5cb:	mov    BYTE PTR [esi],al
6401f5cd:	mov    eax,DWORD PTR [ebp-0xc]
6401f5d0:	shrd   eax,ecx,0x4
6401f5d4:	shr    ecx,0x4
6401f5d7:	inc    esi
6401f5d8:	dec    DWORD PTR [ebp+0x14]
6401f5db:	cmp    WORD PTR [ebp-0x4],0x0
6401f5e0:	mov    DWORD PTR [ebp-0xc],eax
6401f5e3:	mov    DWORD PTR [ebp-0x8],ecx
6401f5e6:	jge    0x6401f595
6401f5e8:	cmp    WORD PTR [ebp-0x4],0x0
6401f5ed:	jl     0x6401f640
6401f5ef:	mov    edx,DWORD PTR [edi+0x4]
6401f5f2:	and    edx,DWORD PTR [ebp-0x8]
6401f5f5:	mov    eax,DWORD PTR [edi]
6401f5f7:	movsx  ecx,WORD PTR [ebp-0x4]
6401f5fb:	and    eax,DWORD PTR [ebp-0xc]
6401f5fe:	and    edx,0xfffff
6401f604:	call   0x6401ff80
6401f609:	cmp    ax,0x8
6401f60d:	jbe    0x6401f640
6401f60f:	lea    eax,[esi-0x1]
6401f612:	mov    cl,BYTE PTR [eax]
6401f614:	cmp    cl,0x66
6401f617:	je     0x6401f61e
6401f619:	cmp    cl,0x46
6401f61c:	jne    0x6401f624
6401f61e:	mov    BYTE PTR [eax],0x30
6401f621:	dec    eax
6401f622:	jmp    0x6401f612
6401f624:	cmp    eax,DWORD PTR [ebp+0xc]
6401f627:	je     0x6401f63d
6401f629:	mov    cl,BYTE PTR [eax]
6401f62b:	cmp    cl,0x39
6401f62e:	jne    0x6401f637
6401f630:	add    bl,0x3a
6401f633:	mov    BYTE PTR [eax],bl
6401f635:	jmp    0x6401f640
6401f637:	inc    cl
6401f639:	mov    BYTE PTR [eax],cl
6401f63b:	jmp    0x6401f640
6401f63d:	inc    BYTE PTR [eax-0x1]
6401f640:	cmp    DWORD PTR [ebp+0x14],0x0
6401f644:	jle    0x6401f657
6401f646:	push   DWORD PTR [ebp+0x14]
6401f649:	push   0x30
6401f64b:	push   esi
6401f64c:	call   0x640131c0
6401f651:	add    esp,0xc
6401f654:	add    esi,DWORD PTR [ebp+0x14]
6401f657:	mov    eax,DWORD PTR [ebp+0xc]
6401f65a:	cmp    BYTE PTR [eax],0x0
6401f65d:	jne    0x6401f661
6401f65f:	mov    esi,eax
6401f661:	cmp    DWORD PTR [ebp+0x18],0x0
6401f665:	mov    cl,0x34
6401f667:	sete   al
6401f66a:	dec    al
6401f66c:	and    al,0xe0
6401f66e:	add    al,0x70
6401f670:	mov    BYTE PTR [esi],al
6401f672:	mov    eax,DWORD PTR [edi]
6401f674:	mov    edx,DWORD PTR [edi+0x4]
6401f677:	inc    esi
6401f678:	call   0x6401ff80
6401f67d:	xor    ebx,ebx
6401f67f:	and    eax,0x7ff
6401f684:	and    edx,ebx
6401f686:	sub    eax,DWORD PTR [ebp-0x14]
6401f689:	push   ebx
6401f68a:	pop    ecx
6401f68b:	sbb    edx,ecx
6401f68d:	js     0x6401f69b
6401f68f:	jg     0x6401f695
6401f691:	cmp    eax,ebx
6401f693:	jb     0x6401f69b
6401f695:	mov    BYTE PTR [esi],0x2b
6401f698:	inc    esi
6401f699:	jmp    0x6401f6a5
6401f69b:	mov    BYTE PTR [esi],0x2d
6401f69e:	inc    esi
6401f69f:	neg    eax
6401f6a1:	adc    edx,ebx
6401f6a3:	neg    edx
6401f6a5:	cmp    edx,ebx
6401f6a7:	mov    edi,esi
6401f6a9:	mov    BYTE PTR [esi],0x30
6401f6ac:	jl     0x6401f6d2
6401f6ae:	mov    ecx,0x3e8
6401f6b3:	jg     0x6401f6b9
6401f6b5:	cmp    eax,ecx
6401f6b7:	jb     0x6401f6d2
6401f6b9:	push   ebx
6401f6ba:	push   ecx
6401f6bb:	push   edx
6401f6bc:	push   eax
6401f6bd:	call   0x6401fea0
6401f6c2:	add    al,0x30
6401f6c4:	mov    BYTE PTR [esi],al
6401f6c6:	inc    esi
6401f6c7:	cmp    esi,edi
6401f6c9:	mov    DWORD PTR [ebp-0x10],edx
6401f6cc:	mov    eax,ecx
6401f6ce:	mov    edx,ebx
6401f6d0:	jne    0x6401f6dd
6401f6d2:	test   edx,edx
6401f6d4:	jl     0x6401f6f4
6401f6d6:	jg     0x6401f6dd
6401f6d8:	cmp    eax,0x64
6401f6db:	jb     0x6401f6f4
6401f6dd:	push   0x0
6401f6df:	push   0x64
6401f6e1:	push   edx
6401f6e2:	push   eax
6401f6e3:	call   0x6401fea0
6401f6e8:	add    al,0x30
6401f6ea:	mov    BYTE PTR [esi],al
6401f6ec:	mov    DWORD PTR [ebp-0x10],edx
6401f6ef:	inc    esi
6401f6f0:	mov    eax,ecx
6401f6f2:	mov    edx,ebx
6401f6f4:	cmp    esi,edi
6401f6f6:	jne    0x6401f703
6401f6f8:	test   edx,edx
6401f6fa:	jl     0x6401f71b
6401f6fc:	jg     0x6401f703
6401f6fe:	cmp    eax,0xa
6401f701:	jb     0x6401f71b
6401f703:	push   0x0
6401f705:	push   0xa
6401f707:	push   edx
6401f708:	push   eax
6401f709:	call   0x6401fea0
6401f70e:	add    al,0x30
6401f710:	mov    BYTE PTR [esi],al
6401f712:	mov    DWORD PTR [ebp-0x10],edx
6401f715:	inc    esi
6401f716:	mov    eax,ecx
6401f718:	mov    DWORD PTR [ebp-0x10],ebx
6401f71b:	add    al,0x30
6401f71d:	mov    BYTE PTR [esi],al
6401f71f:	mov    BYTE PTR [esi+0x1],0x0
6401f723:	cmp    BYTE PTR [ebp-0x18],0x0
6401f727:	je     0x6401f730
6401f729:	mov    eax,DWORD PTR [ebp-0x1c]
6401f72c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f730:	xor    eax,eax
6401f732:	pop    ebx
6401f733:	pop    edi
6401f734:	pop    esi
6401f735:	leave  
6401f736:	ret    
6401f737:	push   ebp
6401f738:	mov    ebp,esp
6401f73a:	sub    esp,0x10
6401f73d:	push   ebx
6401f73e:	push   esi
6401f73f:	push   edi
6401f740:	push   DWORD PTR [ebp+0x14]
6401f743:	mov    ebx,eax
6401f745:	mov    esi,DWORD PTR [ebx+0x4]
6401f748:	mov    edi,ecx
6401f74a:	lea    ecx,[ebp-0x10]
6401f74d:	dec    esi
6401f74e:	call   0x64012c5f
6401f753:	test   edi,edi
6401f755:	jne    0x6401f784
6401f757:	call   0x64014880
6401f75c:	push   0x16
6401f75e:	pop    esi
6401f75f:	mov    DWORD PTR [eax],esi
6401f761:	xor    eax,eax
6401f763:	push   eax
6401f764:	push   eax
6401f765:	push   eax
6401f766:	push   eax
6401f767:	push   eax
6401f768:	call   0x640125f4
6401f76d:	add    esp,0x14
6401f770:	cmp    BYTE PTR [ebp-0x4],0x0
6401f774:	je     0x6401f77d
6401f776:	mov    eax,DWORD PTR [ebp-0x8]
6401f779:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f77d:	mov    eax,esi
6401f77f:	jmp    0x6401f827
6401f784:	cmp    DWORD PTR [ebp+0x8],0x0
6401f788:	jbe    0x6401f757
6401f78a:	cmp    BYTE PTR [ebp+0x10],0x0
6401f78e:	je     0x6401f7a8
6401f790:	cmp    esi,DWORD PTR [ebp+0xc]
6401f793:	jne    0x6401f7a8
6401f795:	xor    eax,eax
6401f797:	cmp    DWORD PTR [ebx],0x2d
6401f79a:	sete   al
6401f79d:	add    eax,esi
6401f79f:	add    eax,edi
6401f7a1:	mov    BYTE PTR [eax],0x30
6401f7a4:	mov    BYTE PTR [eax+0x1],0x0
6401f7a8:	cmp    DWORD PTR [ebx],0x2d
6401f7ab:	mov    esi,edi
6401f7ad:	jne    0x6401f7b5
6401f7af:	mov    BYTE PTR [edi],0x2d
6401f7b2:	lea    esi,[edi+0x1]
6401f7b5:	mov    eax,DWORD PTR [ebx+0x4]
6401f7b8:	xor    edi,edi
6401f7ba:	inc    edi
6401f7bb:	test   eax,eax
6401f7bd:	jg     0x6401f7cc
6401f7bf:	mov    eax,esi
6401f7c1:	call   0x6401f134
6401f7c6:	mov    BYTE PTR [esi],0x30
6401f7c9:	inc    esi
6401f7ca:	jmp    0x6401f7ce
6401f7cc:	add    esi,eax
6401f7ce:	cmp    DWORD PTR [ebp+0xc],0x0
6401f7d2:	jle    0x6401f818
6401f7d4:	mov    eax,esi
6401f7d6:	call   0x6401f134
6401f7db:	mov    eax,DWORD PTR [ebp-0x10]
6401f7de:	mov    eax,DWORD PTR [eax+0xbc]
6401f7e4:	mov    eax,DWORD PTR [eax]
6401f7e6:	mov    al,BYTE PTR [eax]
6401f7e8:	mov    BYTE PTR [esi],al
6401f7ea:	mov    ebx,DWORD PTR [ebx+0x4]
6401f7ed:	inc    esi
6401f7ee:	test   ebx,ebx
6401f7f0:	jge    0x6401f818
6401f7f2:	neg    ebx
6401f7f4:	cmp    BYTE PTR [ebp+0x10],0x0
6401f7f8:	jne    0x6401f7ff
6401f7fa:	cmp    DWORD PTR [ebp+0xc],ebx
6401f7fd:	jl     0x6401f802
6401f7ff:	mov    DWORD PTR [ebp+0xc],ebx
6401f802:	mov    edi,DWORD PTR [ebp+0xc]
6401f805:	mov    eax,esi
6401f807:	call   0x6401f134
6401f80c:	push   edi
6401f80d:	push   0x30
6401f80f:	push   esi
6401f810:	call   0x640131c0
6401f815:	add    esp,0xc
6401f818:	cmp    BYTE PTR [ebp-0x4],0x0
6401f81c:	je     0x6401f825
6401f81e:	mov    eax,DWORD PTR [ebp-0x8]
6401f821:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f825:	xor    eax,eax
6401f827:	pop    edi
6401f828:	pop    esi
6401f829:	pop    ebx
6401f82a:	leave  
6401f82b:	ret    
6401f82c:	push   ebp
6401f82d:	mov    ebp,esp
6401f82f:	sub    esp,0x2c
6401f832:	mov    eax,ds:0x6402d09c
6401f837:	xor    eax,ebp
6401f839:	mov    DWORD PTR [ebp-0x4],eax
6401f83c:	mov    eax,DWORD PTR [ebp+0x8]
6401f83f:	push   ebx
6401f840:	push   esi
6401f841:	push   edi
6401f842:	mov    edi,DWORD PTR [ebp+0xc]
6401f845:	push   0x16
6401f847:	pop    esi
6401f848:	push   esi
6401f849:	lea    ecx,[ebp-0x1c]
6401f84c:	push   ecx
6401f84d:	lea    ecx,[ebp-0x2c]
6401f850:	push   ecx
6401f851:	push   DWORD PTR [eax+0x4]
6401f854:	push   DWORD PTR [eax]
6401f856:	call   0x6401fe11
6401f85b:	xor    ebx,ebx
6401f85d:	add    esp,0x14
6401f860:	cmp    edi,ebx
6401f862:	jne    0x6401f87c
6401f864:	call   0x64014880
6401f869:	push   ebx
6401f86a:	push   ebx
6401f86b:	push   ebx
6401f86c:	push   ebx
6401f86d:	push   ebx
6401f86e:	mov    DWORD PTR [eax],esi
6401f870:	call   0x640125f4
6401f875:	add    esp,0x14
6401f878:	mov    eax,esi
6401f87a:	jmp    0x6401f8d6
6401f87c:	mov    eax,DWORD PTR [ebp+0x10]
6401f87f:	cmp    eax,ebx
6401f881:	jbe    0x6401f864
6401f883:	cmp    eax,0xffffffff
6401f886:	jne    0x6401f88c
6401f888:	or     eax,eax
6401f88a:	jmp    0x6401f897
6401f88c:	xor    ecx,ecx
6401f88e:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f892:	sete   cl
6401f895:	sub    eax,ecx
6401f897:	mov    esi,DWORD PTR [ebp+0x14]
6401f89a:	lea    ecx,[ebp-0x2c]
6401f89d:	push   ecx
6401f89e:	mov    ecx,DWORD PTR [ebp-0x28]
6401f8a1:	add    ecx,esi
6401f8a3:	push   ecx
6401f8a4:	push   eax
6401f8a5:	xor    eax,eax
6401f8a7:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f8ab:	sete   al
6401f8ae:	add    eax,edi
6401f8b0:	push   eax
6401f8b1:	call   0x6401fc99
6401f8b6:	add    esp,0x10
6401f8b9:	cmp    eax,ebx
6401f8bb:	je     0x6401f8c1
6401f8bd:	mov    BYTE PTR [edi],bl
6401f8bf:	jmp    0x6401f8d6
6401f8c1:	push   DWORD PTR [ebp+0x18]
6401f8c4:	lea    eax,[ebp-0x2c]
6401f8c7:	push   ebx
6401f8c8:	push   esi
6401f8c9:	push   DWORD PTR [ebp+0x10]
6401f8cc:	mov    ecx,edi
6401f8ce:	call   0x6401f737
6401f8d3:	add    esp,0x10
6401f8d6:	mov    ecx,DWORD PTR [ebp-0x4]
6401f8d9:	pop    edi
6401f8da:	pop    esi
6401f8db:	xor    ecx,ebp
6401f8dd:	pop    ebx
6401f8de:	call   0x64012abc
6401f8e3:	leave  
6401f8e4:	ret    
6401f8e5:	push   ebp
6401f8e6:	mov    ebp,esp
6401f8e8:	sub    esp,0x30
6401f8eb:	mov    eax,ds:0x6402d09c
6401f8f0:	xor    eax,ebp
6401f8f2:	mov    DWORD PTR [ebp-0x4],eax
6401f8f5:	mov    eax,DWORD PTR [ebp+0x8]
6401f8f8:	push   ebx
6401f8f9:	push   esi
6401f8fa:	mov    esi,DWORD PTR [ebp+0xc]
6401f8fd:	push   edi
6401f8fe:	push   0x16
6401f900:	pop    edi
6401f901:	push   edi
6401f902:	lea    ecx,[ebp-0x1c]
6401f905:	push   ecx
6401f906:	lea    ecx,[ebp-0x30]
6401f909:	push   ecx
6401f90a:	push   DWORD PTR [eax+0x4]
6401f90d:	push   DWORD PTR [eax]
6401f90f:	call   0x6401fe11
6401f914:	xor    ebx,ebx
6401f916:	add    esp,0x14
6401f919:	cmp    esi,ebx
6401f91b:	jne    0x6401f938
6401f91d:	call   0x64014880
6401f922:	push   ebx
6401f923:	push   ebx
6401f924:	push   ebx
6401f925:	push   ebx
6401f926:	push   ebx
6401f927:	mov    DWORD PTR [eax],edi
6401f929:	call   0x640125f4
6401f92e:	add    esp,0x14
6401f931:	mov    eax,edi
6401f933:	jmp    0x6401f9ce
6401f938:	mov    ecx,DWORD PTR [ebp+0x10]
6401f93b:	cmp    ecx,ebx
6401f93d:	jbe    0x6401f91d
6401f93f:	mov    eax,DWORD PTR [ebp-0x2c]
6401f942:	dec    eax
6401f943:	mov    DWORD PTR [ebp-0x20],eax
6401f946:	xor    eax,eax
6401f948:	cmp    DWORD PTR [ebp-0x30],0x2d
6401f94c:	sete   al
6401f94f:	cmp    ecx,0xffffffff
6401f952:	lea    edi,[eax+esi*1]
6401f955:	jne    0x6401f95b
6401f957:	or     ecx,ecx
6401f959:	jmp    0x6401f95d
6401f95b:	sub    ecx,eax
6401f95d:	lea    eax,[ebp-0x30]
6401f960:	push   eax
6401f961:	push   DWORD PTR [ebp+0x14]
6401f964:	push   ecx
6401f965:	push   edi
6401f966:	call   0x6401fc99
6401f96b:	add    esp,0x10
6401f96e:	cmp    eax,ebx
6401f970:	je     0x6401f976
6401f972:	mov    BYTE PTR [esi],bl
6401f974:	jmp    0x6401f9ce
6401f976:	mov    eax,DWORD PTR [ebp-0x2c]
6401f979:	dec    eax
6401f97a:	cmp    DWORD PTR [ebp-0x20],eax
6401f97d:	setl   cl
6401f980:	cmp    eax,0xfffffffc
6401f983:	jl     0x6401f9b2
6401f985:	cmp    eax,DWORD PTR [ebp+0x14]
6401f988:	jge    0x6401f9b2
6401f98a:	cmp    cl,bl
6401f98c:	je     0x6401f998
6401f98e:	mov    al,BYTE PTR [edi]
6401f990:	inc    edi
6401f991:	test   al,al
6401f993:	jne    0x6401f98e
6401f995:	mov    BYTE PTR [edi-0x2],bl
6401f998:	push   DWORD PTR [ebp+0x1c]
6401f99b:	lea    eax,[ebp-0x30]
6401f99e:	push   0x1
6401f9a0:	push   DWORD PTR [ebp+0x14]
6401f9a3:	mov    ecx,esi
6401f9a5:	push   DWORD PTR [ebp+0x10]
6401f9a8:	call   0x6401f737
6401f9ad:	add    esp,0x10
6401f9b0:	jmp    0x6401f9ce
6401f9b2:	push   DWORD PTR [ebp+0x1c]
6401f9b5:	lea    eax,[ebp-0x30]
6401f9b8:	push   0x1
6401f9ba:	push   eax
6401f9bb:	push   DWORD PTR [ebp+0x18]
6401f9be:	mov    eax,esi
6401f9c0:	push   DWORD PTR [ebp+0x14]
6401f9c3:	push   DWORD PTR [ebp+0x10]
6401f9c6:	call   0x6401f16d
6401f9cb:	add    esp,0x18
6401f9ce:	mov    ecx,DWORD PTR [ebp-0x4]
6401f9d1:	pop    edi
6401f9d2:	pop    esi
6401f9d3:	xor    ecx,ebp
6401f9d5:	pop    ebx
6401f9d6:	call   0x64012abc
6401f9db:	leave  
6401f9dc:	ret    
6401f9dd:	push   ebp
6401f9de:	mov    ebp,esp
6401f9e0:	mov    eax,DWORD PTR [ebp+0x14]
6401f9e3:	cmp    eax,0x65
6401f9e6:	je     0x6401fa47
6401f9e8:	cmp    eax,0x45
6401f9eb:	je     0x6401fa47
6401f9ed:	cmp    eax,0x66
6401f9f0:	jne    0x6401fa0b
6401f9f2:	push   DWORD PTR [ebp+0x20]
6401f9f5:	push   DWORD PTR [ebp+0x18]
6401f9f8:	push   DWORD PTR [ebp+0x10]
6401f9fb:	push   DWORD PTR [ebp+0xc]
6401f9fe:	push   DWORD PTR [ebp+0x8]
6401fa01:	call   0x6401f82c
6401fa06:	add    esp,0x14
6401fa09:	pop    ebp
6401fa0a:	ret    
6401fa0b:	cmp    eax,0x61
6401fa0e:	je     0x6401fa2e
6401fa10:	cmp    eax,0x41
6401fa13:	je     0x6401fa2e
6401fa15:	push   DWORD PTR [ebp+0x20]
6401fa18:	push   DWORD PTR [ebp+0x1c]
6401fa1b:	push   DWORD PTR [ebp+0x18]
6401fa1e:	push   DWORD PTR [ebp+0x10]
6401fa21:	push   DWORD PTR [ebp+0xc]
6401fa24:	push   DWORD PTR [ebp+0x8]
6401fa27:	call   0x6401f8e5
6401fa2c:	jmp    0x6401fa5e
6401fa2e:	push   DWORD PTR [ebp+0x20]
6401fa31:	push   DWORD PTR [ebp+0x1c]
6401fa34:	push   DWORD PTR [ebp+0x18]
6401fa37:	push   DWORD PTR [ebp+0x10]
6401fa3a:	push   DWORD PTR [ebp+0xc]
6401fa3d:	push   DWORD PTR [ebp+0x8]
6401fa40:	call   0x6401f3c6
6401fa45:	jmp    0x6401fa5e
6401fa47:	push   DWORD PTR [ebp+0x20]
6401fa4a:	push   DWORD PTR [ebp+0x1c]
6401fa4d:	push   DWORD PTR [ebp+0x18]
6401fa50:	push   DWORD PTR [ebp+0x10]
6401fa53:	push   DWORD PTR [ebp+0xc]
6401fa56:	push   DWORD PTR [ebp+0x8]
6401fa59:	call   0x6401f2da
6401fa5e:	add    esp,0x18
6401fa61:	pop    ebp
6401fa62:	ret    
6401fa63:	push   ebp
6401fa64:	mov    ebp,esp
6401fa66:	push   0x0
6401fa68:	push   DWORD PTR [ebp+0x1c]
6401fa6b:	push   DWORD PTR [ebp+0x18]
6401fa6e:	push   DWORD PTR [ebp+0x14]
6401fa71:	push   DWORD PTR [ebp+0x10]
6401fa74:	push   DWORD PTR [ebp+0xc]
6401fa77:	push   DWORD PTR [ebp+0x8]
6401fa7a:	call   0x6401f9dd
6401fa7f:	add    esp,0x1c
6401fa82:	pop    ebp
6401fa83:	ret    
6401fa84:	push   esi
6401fa85:	push   0x30000
6401fa8a:	push   0x10000
6401fa8f:	xor    esi,esi
6401fa91:	push   esi
6401fa92:	call   0x6401ff9f
6401fa97:	add    esp,0xc
6401fa9a:	test   eax,eax
6401fa9c:	je     0x6401faab
6401fa9e:	push   esi
6401fa9f:	push   esi
6401faa0:	push   esi
6401faa1:	push   esi
6401faa2:	push   esi
6401faa3:	call   0x640124f8
6401faa8:	add    esp,0x14
6401faab:	pop    esi
6401faac:	ret    
6401faad:	push   ebp
6401faae:	mov    ebp,esp
6401fab0:	sub    esp,0x18
6401fab3:	fld    QWORD PTR ds:0x64027618
6401fab9:	fstp   QWORD PTR [ebp-0x10]
6401fabc:	fld    QWORD PTR ds:0x64027610
6401fac2:	fstp   QWORD PTR [ebp-0x18]
6401fac5:	fld    QWORD PTR [ebp-0x18]
6401fac8:	fdiv   QWORD PTR [ebp-0x10]
6401facb:	fmul   QWORD PTR [ebp-0x10]
6401face:	fsubr  QWORD PTR [ebp-0x18]
6401fad1:	fstp   QWORD PTR [ebp-0x8]
6401fad4:	fld1   
6401fad6:	fcomp  QWORD PTR [ebp-0x8]
6401fad9:	fnstsw ax
6401fadb:	test   ah,0x5
6401fade:	jp     0x6401fae5
6401fae0:	xor    eax,eax
6401fae2:	inc    eax
6401fae3:	leave  
6401fae4:	ret    
6401fae5:	xor    eax,eax
6401fae7:	leave  
6401fae8:	ret    
6401fae9:	push   0x6402763c
6401faee:	call   DWORD PTR ds:0x64025130
6401faf4:	test   eax,eax
6401faf6:	je     0x6401fb0d
6401faf8:	push   0x64027620
6401fafd:	push   eax
6401fafe:	call   DWORD PTR ds:0x64025014
6401fb04:	test   eax,eax
6401fb06:	je     0x6401fb0d
6401fb08:	push   0x0
6401fb0a:	call   eax
6401fb0c:	ret    
6401fb0d:	jmp    0x6401faad
6401fb12:	int3   
6401fb13:	int3   
6401fb14:	int3   
6401fb15:	int3   
6401fb16:	int3   
6401fb17:	int3   
6401fb18:	int3   
6401fb19:	int3   
6401fb1a:	int3   
6401fb1b:	int3   
6401fb1c:	int3   
6401fb1d:	int3   
6401fb1e:	int3   
6401fb1f:	int3   
6401fb20:	push   ebp
6401fb21:	mov    ebp,esp
6401fb23:	push   edi
6401fb24:	mov    edi,DWORD PTR [ebp+0x8]
6401fb27:	xor    eax,eax
6401fb29:	or     ecx,0xffffffff
6401fb2c:	repnz scas al,BYTE PTR es:[edi]
6401fb2e:	add    ecx,0x1
6401fb31:	neg    ecx
6401fb33:	sub    edi,0x1
6401fb36:	mov    al,BYTE PTR [ebp+0xc]
6401fb39:	std    
6401fb3a:	repnz scas al,BYTE PTR es:[edi]
6401fb3c:	add    edi,0x1
6401fb3f:	cmp    BYTE PTR [edi],al
6401fb41:	je     0x6401fb47
6401fb43:	xor    eax,eax
6401fb45:	jmp    0x6401fb49
6401fb47:	mov    eax,edi
6401fb49:	cld    
6401fb4a:	pop    edi
6401fb4b:	leave  
6401fb4c:	ret    
6401fb4d:	push   ebp
6401fb4e:	mov    ebp,esp
6401fb50:	sub    esp,0x28
6401fb53:	mov    eax,ds:0x6402d09c
6401fb58:	xor    eax,ebp
6401fb5a:	mov    DWORD PTR [ebp-0x4],eax
6401fb5d:	push   ebx
6401fb5e:	push   esi
6401fb5f:	mov    esi,DWORD PTR [ebp+0x8]
6401fb62:	push   edi
6401fb63:	push   DWORD PTR [ebp+0x10]
6401fb66:	mov    edi,DWORD PTR [ebp+0xc]
6401fb69:	lea    ecx,[ebp-0x24]
6401fb6c:	call   0x64012c5f
6401fb71:	lea    eax,[ebp-0x24]
6401fb74:	push   eax
6401fb75:	xor    ebx,ebx
6401fb77:	push   ebx
6401fb78:	push   ebx
6401fb79:	push   ebx
6401fb7a:	push   ebx
6401fb7b:	push   edi
6401fb7c:	lea    eax,[ebp-0x28]
6401fb7f:	push   eax
6401fb80:	lea    eax,[ebp-0x10]
6401fb83:	push   eax
6401fb84:	call   0x64020a8d
6401fb89:	mov    DWORD PTR [ebp-0x14],eax
6401fb8c:	lea    eax,[ebp-0x10]
6401fb8f:	push   esi
6401fb90:	push   eax
6401fb91:	call   0x64020009
6401fb96:	add    esp,0x28
6401fb99:	test   BYTE PTR [ebp-0x14],0x3
6401fb9d:	jne    0x6401fbca
6401fb9f:	cmp    eax,0x1
6401fba2:	jne    0x6401fbb5
6401fba4:	cmp    BYTE PTR [ebp-0x18],bl
6401fba7:	je     0x6401fbb0
6401fba9:	mov    eax,DWORD PTR [ebp-0x1c]
6401fbac:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fbb0:	push   0x3
6401fbb2:	pop    eax
6401fbb3:	jmp    0x6401fbe4
6401fbb5:	cmp    eax,0x2
6401fbb8:	jne    0x6401fbd6
6401fbba:	cmp    BYTE PTR [ebp-0x18],bl
6401fbbd:	je     0x6401fbc6
6401fbbf:	mov    eax,DWORD PTR [ebp-0x1c]
6401fbc2:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fbc6:	push   0x4
6401fbc8:	jmp    0x6401fbb2
6401fbca:	test   BYTE PTR [ebp-0x14],0x1
6401fbce:	jne    0x6401fbba
6401fbd0:	test   BYTE PTR [ebp-0x14],0x2
6401fbd4:	jne    0x6401fba4
6401fbd6:	cmp    BYTE PTR [ebp-0x18],bl
6401fbd9:	je     0x6401fbe2
6401fbdb:	mov    eax,DWORD PTR [ebp-0x1c]
6401fbde:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fbe2:	xor    eax,eax
6401fbe4:	mov    ecx,DWORD PTR [ebp-0x4]
6401fbe7:	pop    edi
6401fbe8:	pop    esi
6401fbe9:	xor    ecx,ebp
6401fbeb:	pop    ebx
6401fbec:	call   0x64012abc
6401fbf1:	leave  
6401fbf2:	ret    
6401fbf3:	push   ebp
6401fbf4:	mov    ebp,esp
6401fbf6:	sub    esp,0x28
6401fbf9:	mov    eax,ds:0x6402d09c
6401fbfe:	xor    eax,ebp
6401fc00:	mov    DWORD PTR [ebp-0x4],eax
6401fc03:	push   ebx
6401fc04:	push   esi
6401fc05:	mov    esi,DWORD PTR [ebp+0x8]
6401fc08:	push   edi
6401fc09:	push   DWORD PTR [ebp+0x10]
6401fc0c:	mov    edi,DWORD PTR [ebp+0xc]
6401fc0f:	lea    ecx,[ebp-0x24]
6401fc12:	call   0x64012c5f
6401fc17:	lea    eax,[ebp-0x24]
6401fc1a:	push   eax
6401fc1b:	xor    ebx,ebx
6401fc1d:	push   ebx
6401fc1e:	push   ebx
6401fc1f:	push   ebx
6401fc20:	push   ebx
6401fc21:	push   edi
6401fc22:	lea    eax,[ebp-0x28]
6401fc25:	push   eax
6401fc26:	lea    eax,[ebp-0x10]
6401fc29:	push   eax
6401fc2a:	call   0x64020a8d
6401fc2f:	mov    DWORD PTR [ebp-0x14],eax
6401fc32:	lea    eax,[ebp-0x10]
6401fc35:	push   esi
6401fc36:	push   eax
6401fc37:	call   0x6402054b
6401fc3c:	add    esp,0x28
6401fc3f:	test   BYTE PTR [ebp-0x14],0x3
6401fc43:	jne    0x6401fc70
6401fc45:	cmp    eax,0x1
6401fc48:	jne    0x6401fc5b
6401fc4a:	cmp    BYTE PTR [ebp-0x18],bl
6401fc4d:	je     0x6401fc56
6401fc4f:	mov    eax,DWORD PTR [ebp-0x1c]
6401fc52:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fc56:	push   0x3
6401fc58:	pop    eax
6401fc59:	jmp    0x6401fc8a
6401fc5b:	cmp    eax,0x2
6401fc5e:	jne    0x6401fc7c
6401fc60:	cmp    BYTE PTR [ebp-0x18],bl
6401fc63:	je     0x6401fc6c
6401fc65:	mov    eax,DWORD PTR [ebp-0x1c]
6401fc68:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fc6c:	push   0x4
6401fc6e:	jmp    0x6401fc58
6401fc70:	test   BYTE PTR [ebp-0x14],0x1
6401fc74:	jne    0x6401fc60
6401fc76:	test   BYTE PTR [ebp-0x14],0x2
6401fc7a:	jne    0x6401fc4a
6401fc7c:	cmp    BYTE PTR [ebp-0x18],bl
6401fc7f:	je     0x6401fc88
6401fc81:	mov    eax,DWORD PTR [ebp-0x1c]
6401fc84:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fc88:	xor    eax,eax
6401fc8a:	mov    ecx,DWORD PTR [ebp-0x4]
6401fc8d:	pop    edi
6401fc8e:	pop    esi
6401fc8f:	xor    ecx,ebp
6401fc91:	pop    ebx
6401fc92:	call   0x64012abc
6401fc97:	leave  
6401fc98:	ret    
6401fc99:	push   ebp
6401fc9a:	mov    ebp,esp
6401fc9c:	mov    ecx,DWORD PTR [ebp+0x14]
6401fc9f:	push   ebx
6401fca0:	push   esi
6401fca1:	mov    esi,DWORD PTR [ebp+0x8]
6401fca4:	xor    ebx,ebx
6401fca6:	cmp    esi,ebx
6401fca8:	push   edi
6401fca9:	mov    edi,DWORD PTR [ecx+0xc]
6401fcac:	jne    0x6401fccc
6401fcae:	call   0x64014880
6401fcb3:	push   0x16
6401fcb5:	pop    esi
6401fcb6:	mov    DWORD PTR [eax],esi
6401fcb8:	push   ebx
6401fcb9:	push   ebx
6401fcba:	push   ebx
6401fcbb:	push   ebx
6401fcbc:	push   ebx
6401fcbd:	call   0x640125f4
6401fcc2:	add    esp,0x14
6401fcc5:	mov    eax,esi
6401fcc7:	jmp    0x6401fd51
6401fccc:	cmp    DWORD PTR [ebp+0xc],ebx
6401fccf:	jbe    0x6401fcae
6401fcd1:	mov    edx,DWORD PTR [ebp+0x10]
6401fcd4:	cmp    edx,ebx
6401fcd6:	mov    BYTE PTR [esi],bl
6401fcd8:	jle    0x6401fcde
6401fcda:	mov    eax,edx
6401fcdc:	jmp    0x6401fce0
6401fcde:	xor    eax,eax
6401fce0:	inc    eax
6401fce1:	cmp    DWORD PTR [ebp+0xc],eax
6401fce4:	ja     0x6401fcf4
6401fce6:	call   0x64014880
6401fceb:	push   0x22
6401fced:	pop    ecx
6401fcee:	mov    DWORD PTR [eax],ecx
6401fcf0:	mov    esi,ecx
6401fcf2:	jmp    0x6401fcb8
6401fcf4:	cmp    edx,ebx
6401fcf6:	mov    BYTE PTR [esi],0x30
6401fcf9:	lea    eax,[esi+0x1]
6401fcfc:	jle    0x6401fd18
6401fcfe:	mov    cl,BYTE PTR [edi]
6401fd00:	cmp    cl,bl
6401fd02:	je     0x6401fd0a
6401fd04:	movsx  ecx,cl
6401fd07:	inc    edi
6401fd08:	jmp    0x6401fd0d
6401fd0a:	push   0x30
6401fd0c:	pop    ecx
6401fd0d:	mov    BYTE PTR [eax],cl
6401fd0f:	inc    eax
6401fd10:	dec    edx
6401fd11:	cmp    edx,ebx
6401fd13:	jg     0x6401fcfe
6401fd15:	mov    ecx,DWORD PTR [ebp+0x14]
6401fd18:	cmp    edx,ebx
6401fd1a:	mov    BYTE PTR [eax],bl
6401fd1c:	jl     0x6401fd30
6401fd1e:	cmp    BYTE PTR [edi],0x35
6401fd21:	jl     0x6401fd30
6401fd23:	jmp    0x6401fd28
6401fd25:	mov    BYTE PTR [eax],0x30
6401fd28:	dec    eax
6401fd29:	cmp    BYTE PTR [eax],0x39
6401fd2c:	je     0x6401fd25
6401fd2e:	inc    BYTE PTR [eax]
6401fd30:	cmp    BYTE PTR [esi],0x31
6401fd33:	jne    0x6401fd3a
6401fd35:	inc    DWORD PTR [ecx+0x4]
6401fd38:	jmp    0x6401fd4f
6401fd3a:	lea    edi,[esi+0x1]
6401fd3d:	push   edi
6401fd3e:	call   0x64014280
6401fd43:	inc    eax
6401fd44:	push   eax
6401fd45:	push   edi
6401fd46:	push   esi
6401fd47:	call   0x64013b00
6401fd4c:	add    esp,0x10
6401fd4f:	xor    eax,eax
6401fd51:	pop    edi
6401fd52:	pop    esi
6401fd53:	pop    ebx
6401fd54:	pop    ebp
6401fd55:	ret    
6401fd56:	push   ebp
6401fd57:	mov    ebp,esp
6401fd59:	push   ecx
6401fd5a:	mov    edx,DWORD PTR [ebp+0xc]
6401fd5d:	movzx  eax,WORD PTR [edx+0x6]
6401fd61:	push   ebx
6401fd62:	mov    ecx,eax
6401fd64:	push   esi
6401fd65:	push   edi
6401fd66:	shr    ecx,0x4
6401fd69:	and    eax,0x8000
6401fd6e:	mov    edi,0x7ff
6401fd73:	and    ecx,edi
6401fd75:	mov    DWORD PTR [ebp+0xc],eax
6401fd78:	mov    eax,DWORD PTR [edx+0x4]
6401fd7b:	mov    edx,DWORD PTR [edx]
6401fd7d:	movzx  ebx,cx
6401fd80:	mov    esi,0x80000000
6401fd85:	and    eax,0xfffff
6401fd8a:	test   ebx,ebx
6401fd8c:	mov    DWORD PTR [ebp-0x4],esi
6401fd8f:	je     0x6401fda4
6401fd91:	cmp    ebx,edi
6401fd93:	je     0x6401fd9d
6401fd95:	add    ecx,0x3c00
6401fd9b:	jmp    0x6401fdc5
6401fd9d:	mov    edi,0x7fff
6401fda2:	jmp    0x6401fdc8
6401fda4:	xor    ebx,ebx
6401fda6:	cmp    eax,ebx
6401fda8:	jne    0x6401fdbc
6401fdaa:	cmp    edx,ebx
6401fdac:	jne    0x6401fdbc
6401fdae:	mov    eax,DWORD PTR [ebp+0x8]
6401fdb1:	mov    cx,WORD PTR [ebp+0xc]
6401fdb5:	mov    DWORD PTR [eax+0x4],ebx
6401fdb8:	mov    DWORD PTR [eax],ebx
6401fdba:	jmp    0x6401fe08
6401fdbc:	add    ecx,0x3c01
6401fdc2:	mov    DWORD PTR [ebp-0x4],ebx
6401fdc5:	movzx  edi,cx
6401fdc8:	mov    ecx,edx
6401fdca:	shr    ecx,0x15
6401fdcd:	shl    eax,0xb
6401fdd0:	or     ecx,eax
6401fdd2:	or     ecx,DWORD PTR [ebp-0x4]
6401fdd5:	mov    eax,DWORD PTR [ebp+0x8]
6401fdd8:	shl    edx,0xb
6401fddb:	test   esi,ecx
6401fddd:	mov    DWORD PTR [eax+0x4],ecx
6401fde0:	mov    DWORD PTR [eax],edx
6401fde2:	jne    0x6401fe03
6401fde4:	mov    ecx,DWORD PTR [eax]
6401fde6:	mov    edx,DWORD PTR [eax+0x4]
6401fde9:	mov    ebx,ecx
6401fdeb:	add    edx,edx
6401fded:	shr    ebx,0x1f
6401fdf0:	or     edx,ebx
6401fdf2:	add    ecx,ecx
6401fdf4:	add    edi,0xffff
6401fdfa:	test   esi,edx
6401fdfc:	mov    DWORD PTR [eax+0x4],edx
6401fdff:	mov    DWORD PTR [eax],ecx
6401fe01:	je     0x6401fde4
6401fe03:	mov    ecx,DWORD PTR [ebp+0xc]
6401fe06:	or     ecx,edi
6401fe08:	pop    edi
6401fe09:	pop    esi
6401fe0a:	mov    WORD PTR [eax+0x8],cx
6401fe0e:	pop    ebx
6401fe0f:	leave  
6401fe10:	ret    
6401fe11:	push   ebp
6401fe12:	mov    ebp,esp
6401fe14:	sub    esp,0x30
6401fe17:	mov    eax,ds:0x6402d09c
6401fe1c:	xor    eax,ebp
6401fe1e:	mov    DWORD PTR [ebp-0x4],eax
6401fe21:	mov    eax,DWORD PTR [ebp+0x14]
6401fe24:	push   ebx
6401fe25:	mov    ebx,DWORD PTR [ebp+0x10]
6401fe28:	push   esi
6401fe29:	mov    DWORD PTR [ebp-0x30],eax
6401fe2c:	push   edi
6401fe2d:	lea    eax,[ebp+0x8]
6401fe30:	push   eax
6401fe31:	lea    eax,[ebp-0x10]
6401fe34:	push   eax
6401fe35:	call   0x6401fd56
6401fe3a:	pop    ecx
6401fe3b:	pop    ecx
6401fe3c:	lea    eax,[ebp-0x2c]
6401fe3f:	push   eax
6401fe40:	push   0x0
6401fe42:	push   0x11
6401fe44:	sub    esp,0xc
6401fe47:	lea    esi,[ebp-0x10]
6401fe4a:	mov    edi,esp
6401fe4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fe4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fe4e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6401fe50:	call   0x6402114d
6401fe55:	mov    esi,DWORD PTR [ebp-0x30]
6401fe58:	mov    DWORD PTR [ebx+0x8],eax
6401fe5b:	movsx  eax,BYTE PTR [ebp-0x2a]
6401fe5f:	mov    DWORD PTR [ebx],eax
6401fe61:	movsx  eax,WORD PTR [ebp-0x2c]
6401fe65:	mov    DWORD PTR [ebx+0x4],eax
6401fe68:	lea    eax,[ebp-0x28]
6401fe6b:	push   eax
6401fe6c:	push   DWORD PTR [ebp+0x18]
6401fe6f:	push   esi
6401fe70:	call   0x64014478
6401fe75:	add    esp,0x24
6401fe78:	test   eax,eax
6401fe7a:	je     0x6401fe8b
6401fe7c:	xor    eax,eax
6401fe7e:	push   eax
6401fe7f:	push   eax
6401fe80:	push   eax
6401fe81:	push   eax
6401fe82:	push   eax
6401fe83:	call   0x640124f8
6401fe88:	add    esp,0x14
6401fe8b:	mov    ecx,DWORD PTR [ebp-0x4]
6401fe8e:	pop    edi
6401fe8f:	mov    DWORD PTR [ebx+0xc],esi
6401fe92:	pop    esi
6401fe93:	mov    eax,ebx
6401fe95:	xor    ecx,ebp
6401fe97:	pop    ebx
6401fe98:	call   0x64012abc
6401fe9d:	leave  
6401fe9e:	ret    
6401fe9f:	int3   
6401fea0:	push   edi
6401fea1:	push   esi
6401fea2:	push   ebp
6401fea3:	xor    edi,edi
6401fea5:	xor    ebp,ebp
6401fea7:	mov    eax,DWORD PTR [esp+0x14]
6401feab:	or     eax,eax
6401fead:	jge    0x6401fec4
6401feaf:	inc    edi
6401feb0:	inc    ebp
6401feb1:	mov    edx,DWORD PTR [esp+0x10]
6401feb5:	neg    eax
6401feb7:	neg    edx
6401feb9:	sbb    eax,0x0
6401febc:	mov    DWORD PTR [esp+0x14],eax
6401fec0:	mov    DWORD PTR [esp+0x10],edx
6401fec4:	mov    eax,DWORD PTR [esp+0x1c]
6401fec8:	or     eax,eax
6401feca:	jge    0x6401fee0
6401fecc:	inc    edi
6401fecd:	mov    edx,DWORD PTR [esp+0x18]
6401fed1:	neg    eax
6401fed3:	neg    edx
6401fed5:	sbb    eax,0x0
6401fed8:	mov    DWORD PTR [esp+0x1c],eax
6401fedc:	mov    DWORD PTR [esp+0x18],edx
6401fee0:	or     eax,eax
6401fee2:	jne    0x6401ff0c
6401fee4:	mov    ecx,DWORD PTR [esp+0x18]
6401fee8:	mov    eax,DWORD PTR [esp+0x14]
6401feec:	xor    edx,edx
6401feee:	div    ecx
6401fef0:	mov    ebx,eax
6401fef2:	mov    eax,DWORD PTR [esp+0x10]
6401fef6:	div    ecx
6401fef8:	mov    esi,eax
6401fefa:	mov    eax,ebx
6401fefc:	mul    DWORD PTR [esp+0x18]
6401ff00:	mov    ecx,eax
6401ff02:	mov    eax,esi
6401ff04:	mul    DWORD PTR [esp+0x18]
6401ff08:	add    edx,ecx
6401ff0a:	jmp    0x6401ff53
6401ff0c:	mov    ebx,eax
6401ff0e:	mov    ecx,DWORD PTR [esp+0x18]
6401ff12:	mov    edx,DWORD PTR [esp+0x14]
6401ff16:	mov    eax,DWORD PTR [esp+0x10]
6401ff1a:	shr    ebx,1
6401ff1c:	rcr    ecx,1
6401ff1e:	shr    edx,1
6401ff20:	rcr    eax,1
6401ff22:	or     ebx,ebx
6401ff24:	jne    0x6401ff1a
6401ff26:	div    ecx
6401ff28:	mov    esi,eax
6401ff2a:	mul    DWORD PTR [esp+0x1c]
6401ff2e:	mov    ecx,eax
6401ff30:	mov    eax,DWORD PTR [esp+0x18]
6401ff34:	mul    esi
6401ff36:	add    edx,ecx
6401ff38:	jb     0x6401ff48
6401ff3a:	cmp    edx,DWORD PTR [esp+0x14]
6401ff3e:	ja     0x6401ff48
6401ff40:	jb     0x6401ff51
6401ff42:	cmp    eax,DWORD PTR [esp+0x10]
6401ff46:	jbe    0x6401ff51
6401ff48:	dec    esi
6401ff49:	sub    eax,DWORD PTR [esp+0x18]
6401ff4d:	sbb    edx,DWORD PTR [esp+0x1c]
6401ff51:	xor    ebx,ebx
6401ff53:	sub    eax,DWORD PTR [esp+0x10]
6401ff57:	sbb    edx,DWORD PTR [esp+0x14]
6401ff5b:	dec    ebp
6401ff5c:	jns    0x6401ff65
6401ff5e:	neg    edx
6401ff60:	neg    eax
6401ff62:	sbb    edx,0x0
6401ff65:	mov    ecx,edx
6401ff67:	mov    edx,ebx
6401ff69:	mov    ebx,ecx
6401ff6b:	mov    ecx,eax
6401ff6d:	mov    eax,esi
6401ff6f:	dec    edi
6401ff70:	jne    0x6401ff79
6401ff72:	neg    edx
6401ff74:	neg    eax
6401ff76:	sbb    edx,0x0
6401ff79:	pop    ebp
6401ff7a:	pop    esi
6401ff7b:	pop    edi
6401ff7c:	ret    0x10
6401ff7f:	int3   
6401ff80:	cmp    cl,0x40
6401ff83:	jae    0x6401ff9a
6401ff85:	cmp    cl,0x20
6401ff88:	jae    0x6401ff90
6401ff8a:	shrd   eax,edx,cl
6401ff8d:	shr    edx,cl
6401ff8f:	ret    
6401ff90:	mov    eax,edx
6401ff92:	xor    edx,edx
6401ff94:	and    cl,0x1f
6401ff97:	shr    eax,cl
6401ff99:	ret    
6401ff9a:	xor    eax,eax
6401ff9c:	xor    edx,edx
6401ff9e:	ret    
6401ff9f:	push   ebp
6401ffa0:	mov    ebp,esp
6401ffa2:	mov    eax,DWORD PTR [ebp+0x10]
6401ffa5:	mov    ecx,DWORD PTR [ebp+0xc]
6401ffa8:	and    eax,0xfff7ffff
6401ffad:	and    ecx,eax
6401ffaf:	test   ecx,0xfcf0fce0
6401ffb5:	push   esi
6401ffb6:	je     0x6401ffe9
6401ffb8:	push   edi
6401ffb9:	mov    edi,DWORD PTR [ebp+0x8]
6401ffbc:	xor    esi,esi
6401ffbe:	cmp    edi,esi
6401ffc0:	je     0x6401ffcd
6401ffc2:	push   esi
6401ffc3:	push   esi
6401ffc4:	call   0x64021b41
6401ffc9:	pop    ecx
6401ffca:	pop    ecx
6401ffcb:	mov    DWORD PTR [edi],eax
6401ffcd:	call   0x64014880
6401ffd2:	push   0x16
6401ffd4:	pop    edi
6401ffd5:	push   esi
6401ffd6:	push   esi
6401ffd7:	push   esi
6401ffd8:	push   esi
6401ffd9:	push   esi
6401ffda:	mov    DWORD PTR [eax],edi
6401ffdc:	call   0x640125f4
6401ffe1:	add    esp,0x14
6401ffe4:	mov    eax,edi
6401ffe6:	pop    edi
6401ffe7:	jmp    0x64020006
6401ffe9:	mov    esi,DWORD PTR [ebp+0x8]
6401ffec:	test   esi,esi
6401ffee:	push   eax
6401ffef:	push   DWORD PTR [ebp+0xc]
6401fff2:	je     0x6401fffd
6401fff4:	call   0x64021b41
6401fff9:	mov    DWORD PTR [esi],eax
6401fffb:	jmp    0x64020002
6401fffd:	call   0x64021b41
64020002:	pop    ecx
64020003:	pop    ecx
64020004:	xor    eax,eax
64020006:	pop    esi
64020007:	pop    ebp
64020008:	ret    
64020009:	push   ebp
6402000a:	mov    ebp,esp
6402000c:	sub    esp,0x2c
6402000f:	mov    eax,DWORD PTR [ebp+0x8]
64020012:	movzx  ecx,WORD PTR [eax+0xa]
64020016:	push   ebx
64020017:	mov    ebx,ecx
64020019:	and    ecx,0x8000
6402001f:	mov    DWORD PTR [ebp-0x14],ecx
64020022:	mov    ecx,DWORD PTR [eax+0x6]
64020025:	mov    DWORD PTR [ebp-0x20],ecx
64020028:	mov    ecx,DWORD PTR [eax+0x2]
6402002b:	movzx  eax,WORD PTR [eax]
6402002e:	and    ebx,0x7fff
64020034:	sub    ebx,0x3fff
6402003a:	shl    eax,0x10
6402003d:	cmp    ebx,0xffffc001
64020043:	push   edi
64020044:	mov    DWORD PTR [ebp-0x1c],ecx
64020047:	mov    DWORD PTR [ebp-0x18],eax
6402004a:	jne    0x64020073
6402004c:	xor    ebx,ebx
6402004e:	xor    eax,eax
64020050:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
64020054:	jne    0x64020063
64020056:	inc    eax
64020057:	cmp    eax,0x3
6402005a:	jl     0x64020050
6402005c:	xor    eax,eax
6402005e:	jmp    0x64020508
64020063:	xor    eax,eax
64020065:	lea    edi,[ebp-0x20]
64020068:	stos   DWORD PTR es:[edi],eax
64020069:	stos   DWORD PTR es:[edi],eax
6402006a:	push   0x2
6402006c:	stos   DWORD PTR es:[edi],eax
6402006d:	pop    eax
6402006e:	jmp    0x64020508
64020073:	and    DWORD PTR [ebp+0x8],0x0
64020077:	push   esi
64020078:	lea    esi,[ebp-0x20]
6402007b:	lea    edi,[ebp-0x2c]
6402007e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402007f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020081:	mov    esi,DWORD PTR ds:0x6402e078
64020087:	dec    esi
64020088:	lea    ecx,[esi+0x1]
6402008b:	mov    eax,ecx
6402008d:	cdq    
6402008e:	and    edx,0x1f
64020091:	add    eax,edx
64020093:	sar    eax,0x5
64020096:	mov    edx,ecx
64020098:	and    edx,0x8000001f
6402009e:	mov    DWORD PTR [ebp-0x10],ebx
640200a1:	mov    DWORD PTR [ebp-0xc],eax
640200a4:	jns    0x640200ab
640200a6:	dec    edx
640200a7:	or     edx,0xffffffe0
640200aa:	inc    edx
640200ab:	lea    edi,[ebp+eax*4-0x20]
640200af:	push   0x1f
640200b1:	xor    eax,eax
640200b3:	pop    ecx
640200b4:	sub    ecx,edx
640200b6:	inc    eax
640200b7:	shl    eax,cl
640200b9:	mov    DWORD PTR [ebp-0x8],ecx
640200bc:	test   DWORD PTR [edi],eax
640200be:	je     0x64020151
640200c4:	mov    eax,DWORD PTR [ebp-0xc]
640200c7:	or     edx,0xffffffff
640200ca:	shl    edx,cl
640200cc:	not    edx
640200ce:	test   DWORD PTR [ebp+eax*4-0x20],edx
640200d2:	jmp    0x640200d9
640200d4:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
640200d9:	jne    0x640200e3
640200db:	inc    eax
640200dc:	cmp    eax,0x3
640200df:	jl     0x640200d4
640200e1:	jmp    0x64020151
640200e3:	mov    eax,esi
640200e5:	cdq    
640200e6:	push   0x1f
640200e8:	pop    ecx
640200e9:	and    edx,ecx
640200eb:	add    eax,edx
640200ed:	sar    eax,0x5
640200f0:	and    esi,0x8000001f
640200f6:	jns    0x640200fd
640200f8:	dec    esi
640200f9:	or     esi,0xffffffe0
640200fc:	inc    esi
640200fd:	and    DWORD PTR [ebp-0x4],0x0
64020101:	sub    ecx,esi
64020103:	xor    edx,edx
64020105:	inc    edx
64020106:	shl    edx,cl
64020108:	lea    ecx,[ebp+eax*4-0x20]
6402010c:	mov    esi,DWORD PTR [ecx]
6402010e:	add    esi,edx
64020110:	mov    DWORD PTR [ebp+0x8],esi
64020113:	mov    esi,DWORD PTR [ecx]
64020115:	cmp    DWORD PTR [ebp+0x8],esi
64020118:	jb     0x6402013c
6402011a:	cmp    DWORD PTR [ebp+0x8],edx
6402011d:	jmp    0x6402013a
6402011f:	test   ecx,ecx
64020121:	je     0x6402014e
64020123:	and    DWORD PTR [ebp-0x4],0x0
64020127:	lea    ecx,[ebp+eax*4-0x20]
6402012b:	mov    edx,DWORD PTR [ecx]
6402012d:	lea    esi,[edx+0x1]
64020130:	cmp    esi,edx
64020132:	mov    DWORD PTR [ebp+0x8],esi
64020135:	jb     0x6402013c
64020137:	cmp    esi,0x1
6402013a:	jae    0x64020143
6402013c:	mov    DWORD PTR [ebp-0x4],0x1
64020143:	dec    eax
64020144:	mov    edx,DWORD PTR [ebp+0x8]
64020147:	mov    DWORD PTR [ecx],edx
64020149:	mov    ecx,DWORD PTR [ebp-0x4]
6402014c:	jns    0x6402011f
6402014e:	mov    DWORD PTR [ebp+0x8],ecx
64020151:	mov    ecx,DWORD PTR [ebp-0x8]
64020154:	or     eax,0xffffffff
64020157:	shl    eax,cl
64020159:	and    DWORD PTR [edi],eax
6402015b:	mov    eax,DWORD PTR [ebp-0xc]
6402015e:	inc    eax
6402015f:	cmp    eax,0x3
64020162:	jge    0x64020171
64020164:	push   0x3
64020166:	pop    ecx
64020167:	lea    edi,[ebp+eax*4-0x20]
6402016b:	sub    ecx,eax
6402016d:	xor    eax,eax
6402016f:	rep stos DWORD PTR es:[edi],eax
64020171:	cmp    DWORD PTR [ebp+0x8],0x0
64020175:	je     0x64020178
64020177:	inc    ebx
64020178:	mov    eax,ds:0x6402e074
6402017d:	mov    ecx,eax
6402017f:	sub    ecx,DWORD PTR ds:0x6402e078
64020185:	cmp    ebx,ecx
64020187:	jge    0x64020196
64020189:	xor    eax,eax
6402018b:	lea    edi,[ebp-0x20]
6402018e:	stos   DWORD PTR es:[edi],eax
6402018f:	stos   DWORD PTR es:[edi],eax
64020190:	stos   DWORD PTR es:[edi],eax
64020191:	jmp    0x640203a3
64020196:	cmp    ebx,eax
64020198:	jg     0x640203ad
6402019e:	sub    eax,DWORD PTR [ebp-0x10]
640201a1:	lea    esi,[ebp-0x2c]
640201a4:	mov    ecx,eax
640201a6:	lea    edi,[ebp-0x20]
640201a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640201aa:	cdq    
640201ab:	and    edx,0x1f
640201ae:	add    eax,edx
640201b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640201b1:	mov    edx,ecx
640201b3:	sar    eax,0x5
640201b6:	and    edx,0x8000001f
640201bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640201bd:	jns    0x640201c4
640201bf:	dec    edx
640201c0:	or     edx,0xffffffe0
640201c3:	inc    edx
640201c4:	and    DWORD PTR [ebp-0xc],0x0
640201c8:	and    DWORD PTR [ebp+0x8],0x0
640201cc:	or     edi,0xffffffff
640201cf:	mov    ecx,edx
640201d1:	shl    edi,cl
640201d3:	mov    DWORD PTR [ebp-0x4],0x20
640201da:	sub    DWORD PTR [ebp-0x4],edx
640201dd:	not    edi
640201df:	mov    ebx,DWORD PTR [ebp+0x8]
640201e2:	lea    ebx,[ebp+ebx*4-0x20]
640201e6:	mov    esi,DWORD PTR [ebx]
640201e8:	mov    ecx,esi
640201ea:	and    ecx,edi
640201ec:	mov    DWORD PTR [ebp-0x10],ecx
640201ef:	mov    ecx,edx
640201f1:	shr    esi,cl
640201f3:	mov    ecx,DWORD PTR [ebp-0x4]
640201f6:	or     esi,DWORD PTR [ebp-0xc]
640201f9:	mov    DWORD PTR [ebx],esi
640201fb:	mov    esi,DWORD PTR [ebp-0x10]
640201fe:	shl    esi,cl
64020200:	inc    DWORD PTR [ebp+0x8]
64020203:	cmp    DWORD PTR [ebp+0x8],0x3
64020207:	mov    DWORD PTR [ebp-0xc],esi
6402020a:	jl     0x640201df
6402020c:	mov    esi,eax
6402020e:	push   0x2
64020210:	shl    esi,0x2
64020213:	lea    ecx,[ebp-0x18]
64020216:	pop    edx
64020217:	sub    ecx,esi
64020219:	cmp    edx,eax
6402021b:	jl     0x64020225
6402021d:	mov    esi,DWORD PTR [ecx]
6402021f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020223:	jmp    0x6402022a
64020225:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402022a:	dec    edx
6402022b:	sub    ecx,0x4
6402022e:	test   edx,edx
64020230:	jge    0x64020219
64020232:	mov    esi,DWORD PTR ds:0x6402e078
64020238:	dec    esi
64020239:	lea    ecx,[esi+0x1]
6402023c:	mov    eax,ecx
6402023e:	cdq    
6402023f:	and    edx,0x1f
64020242:	add    eax,edx
64020244:	sar    eax,0x5
64020247:	mov    edx,ecx
64020249:	and    edx,0x8000001f
6402024f:	mov    DWORD PTR [ebp-0xc],eax
64020252:	jns    0x64020259
64020254:	dec    edx
64020255:	or     edx,0xffffffe0
64020258:	inc    edx
64020259:	push   0x1f
6402025b:	pop    ecx
6402025c:	sub    ecx,edx
6402025e:	xor    edx,edx
64020260:	inc    edx
64020261:	shl    edx,cl
64020263:	lea    ebx,[ebp+eax*4-0x20]
64020267:	mov    DWORD PTR [ebp-0x10],ecx
6402026a:	test   DWORD PTR [ebx],edx
6402026c:	je     0x640202f4
64020272:	or     edx,0xffffffff
64020275:	shl    edx,cl
64020277:	not    edx
64020279:	test   DWORD PTR [ebp+eax*4-0x20],edx
6402027d:	jmp    0x64020284
6402027f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64020284:	jne    0x6402028e
64020286:	inc    eax
64020287:	cmp    eax,0x3
6402028a:	jl     0x6402027f
6402028c:	jmp    0x640202f4
6402028e:	mov    eax,esi
64020290:	cdq    
64020291:	push   0x1f
64020293:	pop    ecx
64020294:	and    edx,ecx
64020296:	add    eax,edx
64020298:	sar    eax,0x5
6402029b:	and    esi,0x8000001f
640202a1:	jns    0x640202a8
640202a3:	dec    esi
640202a4:	or     esi,0xffffffe0
640202a7:	inc    esi
640202a8:	and    DWORD PTR [ebp+0x8],0x0
640202ac:	xor    edx,edx
640202ae:	sub    ecx,esi
640202b0:	inc    edx
640202b1:	shl    edx,cl
640202b3:	lea    ecx,[ebp+eax*4-0x20]
640202b7:	mov    esi,DWORD PTR [ecx]
640202b9:	lea    edi,[esi+edx*1]
640202bc:	cmp    edi,esi
640202be:	jb     0x640202c4
640202c0:	cmp    edi,edx
640202c2:	jae    0x640202cb
640202c4:	mov    DWORD PTR [ebp+0x8],0x1
640202cb:	mov    DWORD PTR [ecx],edi
640202cd:	mov    ecx,DWORD PTR [ebp+0x8]
640202d0:	jmp    0x640202f1
640202d2:	test   ecx,ecx
640202d4:	je     0x640202f4
640202d6:	lea    ecx,[ebp+eax*4-0x20]
640202da:	mov    edx,DWORD PTR [ecx]
640202dc:	lea    esi,[edx+0x1]
640202df:	xor    edi,edi
640202e1:	cmp    esi,edx
640202e3:	jb     0x640202ea
640202e5:	cmp    esi,0x1
640202e8:	jae    0x640202ed
640202ea:	xor    edi,edi
640202ec:	inc    edi
640202ed:	mov    DWORD PTR [ecx],esi
640202ef:	mov    ecx,edi
640202f1:	dec    eax
640202f2:	jns    0x640202d2
640202f4:	mov    ecx,DWORD PTR [ebp-0x10]
640202f7:	or     eax,0xffffffff
640202fa:	shl    eax,cl
640202fc:	and    DWORD PTR [ebx],eax
640202fe:	mov    eax,DWORD PTR [ebp-0xc]
64020301:	inc    eax
64020302:	cmp    eax,0x3
64020305:	jge    0x64020314
64020307:	push   0x3
64020309:	pop    ecx
6402030a:	lea    edi,[ebp+eax*4-0x20]
6402030e:	sub    ecx,eax
64020310:	xor    eax,eax
64020312:	rep stos DWORD PTR es:[edi],eax
64020314:	mov    ecx,DWORD PTR ds:0x6402e07c
6402031a:	inc    ecx
6402031b:	mov    eax,ecx
6402031d:	cdq    
6402031e:	and    edx,0x1f
64020321:	add    eax,edx
64020323:	mov    edx,ecx
64020325:	sar    eax,0x5
64020328:	and    edx,0x8000001f
6402032e:	jns    0x64020335
64020330:	dec    edx
64020331:	or     edx,0xffffffe0
64020334:	inc    edx
64020335:	and    DWORD PTR [ebp-0xc],0x0
64020339:	and    DWORD PTR [ebp+0x8],0x0
6402033d:	or     edi,0xffffffff
64020340:	mov    ecx,edx
64020342:	shl    edi,cl
64020344:	mov    DWORD PTR [ebp-0x4],0x20
6402034b:	sub    DWORD PTR [ebp-0x4],edx
6402034e:	not    edi
64020350:	mov    ebx,DWORD PTR [ebp+0x8]
64020353:	lea    ebx,[ebp+ebx*4-0x20]
64020357:	mov    esi,DWORD PTR [ebx]
64020359:	mov    ecx,esi
6402035b:	and    ecx,edi
6402035d:	mov    DWORD PTR [ebp-0x10],ecx
64020360:	mov    ecx,edx
64020362:	shr    esi,cl
64020364:	mov    ecx,DWORD PTR [ebp-0x4]
64020367:	or     esi,DWORD PTR [ebp-0xc]
6402036a:	mov    DWORD PTR [ebx],esi
6402036c:	mov    esi,DWORD PTR [ebp-0x10]
6402036f:	shl    esi,cl
64020371:	inc    DWORD PTR [ebp+0x8]
64020374:	cmp    DWORD PTR [ebp+0x8],0x3
64020378:	mov    DWORD PTR [ebp-0xc],esi
6402037b:	jl     0x64020350
6402037d:	mov    esi,eax
6402037f:	push   0x2
64020381:	shl    esi,0x2
64020384:	lea    ecx,[ebp-0x18]
64020387:	pop    edx
64020388:	sub    ecx,esi
6402038a:	cmp    edx,eax
6402038c:	jl     0x64020396
6402038e:	mov    esi,DWORD PTR [ecx]
64020390:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020394:	jmp    0x6402039b
64020396:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402039b:	dec    edx
6402039c:	sub    ecx,0x4
6402039f:	test   edx,edx
640203a1:	jge    0x6402038a
640203a3:	push   0x2
640203a5:	xor    ebx,ebx
640203a7:	pop    eax
640203a8:	jmp    0x64020507
640203ad:	cmp    ebx,DWORD PTR ds:0x6402e070
640203b3:	mov    ecx,DWORD PTR ds:0x6402e07c
640203b9:	jl     0x6402046c
640203bf:	xor    eax,eax
640203c1:	lea    edi,[ebp-0x20]
640203c4:	stos   DWORD PTR es:[edi],eax
640203c5:	stos   DWORD PTR es:[edi],eax
640203c6:	stos   DWORD PTR es:[edi],eax
640203c7:	or     DWORD PTR [ebp-0x20],0x80000000
640203ce:	mov    eax,ecx
640203d0:	cdq    
640203d1:	and    edx,0x1f
640203d4:	add    eax,edx
640203d6:	mov    edx,ecx
640203d8:	sar    eax,0x5
640203db:	and    edx,0x8000001f
640203e1:	jns    0x640203e8
640203e3:	dec    edx
640203e4:	or     edx,0xffffffe0
640203e7:	inc    edx
640203e8:	and    DWORD PTR [ebp-0xc],0x0
640203ec:	and    DWORD PTR [ebp+0x8],0x0
640203f0:	or     edi,0xffffffff
640203f3:	mov    ecx,edx
640203f5:	shl    edi,cl
640203f7:	mov    DWORD PTR [ebp-0x4],0x20
640203fe:	sub    DWORD PTR [ebp-0x4],edx
64020401:	not    edi
64020403:	mov    ebx,DWORD PTR [ebp+0x8]
64020406:	lea    ebx,[ebp+ebx*4-0x20]
6402040a:	mov    esi,DWORD PTR [ebx]
6402040c:	mov    ecx,esi
6402040e:	and    ecx,edi
64020410:	mov    DWORD PTR [ebp-0x10],ecx
64020413:	mov    ecx,edx
64020415:	shr    esi,cl
64020417:	mov    ecx,DWORD PTR [ebp-0x4]
6402041a:	or     esi,DWORD PTR [ebp-0xc]
6402041d:	mov    DWORD PTR [ebx],esi
6402041f:	mov    esi,DWORD PTR [ebp-0x10]
64020422:	shl    esi,cl
64020424:	inc    DWORD PTR [ebp+0x8]
64020427:	cmp    DWORD PTR [ebp+0x8],0x3
6402042b:	mov    DWORD PTR [ebp-0xc],esi
6402042e:	jl     0x64020403
64020430:	mov    esi,eax
64020432:	push   0x2
64020434:	shl    esi,0x2
64020437:	lea    ecx,[ebp-0x18]
6402043a:	pop    edx
6402043b:	sub    ecx,esi
6402043d:	cmp    edx,eax
6402043f:	jl     0x64020449
64020441:	mov    esi,DWORD PTR [ecx]
64020443:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020447:	jmp    0x6402044e
64020449:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402044e:	dec    edx
6402044f:	sub    ecx,0x4
64020452:	test   edx,edx
64020454:	jge    0x6402043d
64020456:	mov    eax,ds:0x6402e070
6402045b:	mov    ecx,DWORD PTR ds:0x6402e084
64020461:	lea    ebx,[ecx+eax*1]
64020464:	xor    eax,eax
64020466:	inc    eax
64020467:	jmp    0x64020507
6402046c:	mov    eax,ds:0x6402e084
64020471:	and    DWORD PTR [ebp-0x20],0x7fffffff
64020478:	add    ebx,eax
6402047a:	mov    eax,ecx
6402047c:	cdq    
6402047d:	and    edx,0x1f
64020480:	add    eax,edx
64020482:	mov    edx,ecx
64020484:	sar    eax,0x5
64020487:	and    edx,0x8000001f
6402048d:	jns    0x64020494
6402048f:	dec    edx
64020490:	or     edx,0xffffffe0
64020493:	inc    edx
64020494:	and    DWORD PTR [ebp-0xc],0x0
64020498:	and    DWORD PTR [ebp+0x8],0x0
6402049c:	or     esi,0xffffffff
6402049f:	mov    ecx,edx
640204a1:	shl    esi,cl
640204a3:	mov    DWORD PTR [ebp-0x4],0x20
640204aa:	sub    DWORD PTR [ebp-0x4],edx
640204ad:	not    esi
640204af:	mov    ecx,DWORD PTR [ebp+0x8]
640204b2:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
640204b6:	mov    ecx,edi
640204b8:	and    ecx,esi
640204ba:	mov    DWORD PTR [ebp-0x10],ecx
640204bd:	mov    ecx,edx
640204bf:	shr    edi,cl
640204c1:	mov    ecx,DWORD PTR [ebp+0x8]
640204c4:	or     edi,DWORD PTR [ebp-0xc]
640204c7:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
640204cb:	mov    edi,DWORD PTR [ebp-0x10]
640204ce:	mov    ecx,DWORD PTR [ebp-0x4]
640204d1:	shl    edi,cl
640204d3:	inc    DWORD PTR [ebp+0x8]
640204d6:	cmp    DWORD PTR [ebp+0x8],0x3
640204da:	mov    DWORD PTR [ebp-0xc],edi
640204dd:	jl     0x640204af
640204df:	mov    esi,eax
640204e1:	push   0x2
640204e3:	shl    esi,0x2
640204e6:	lea    ecx,[ebp-0x18]
640204e9:	pop    edx
640204ea:	sub    ecx,esi
640204ec:	cmp    edx,eax
640204ee:	jl     0x640204f8
640204f0:	mov    esi,DWORD PTR [ecx]
640204f2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640204f6:	jmp    0x640204fd
640204f8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640204fd:	dec    edx
640204fe:	sub    ecx,0x4
64020501:	test   edx,edx
64020503:	jge    0x640204ec
64020505:	xor    eax,eax
64020507:	pop    esi
64020508:	push   0x1f
6402050a:	pop    ecx
6402050b:	sub    ecx,DWORD PTR ds:0x6402e07c
64020511:	shl    ebx,cl
64020513:	mov    ecx,DWORD PTR [ebp-0x14]
64020516:	neg    ecx
64020518:	sbb    ecx,ecx
6402051a:	and    ecx,0x80000000
64020520:	or     ebx,ecx
64020522:	mov    ecx,DWORD PTR ds:0x6402e080
64020528:	or     ebx,DWORD PTR [ebp-0x20]
6402052b:	cmp    ecx,0x40
6402052e:	jne    0x6402053d
64020530:	mov    ecx,DWORD PTR [ebp+0xc]
64020533:	mov    edx,DWORD PTR [ebp-0x1c]
64020536:	mov    DWORD PTR [ecx+0x4],ebx
64020539:	mov    DWORD PTR [ecx],edx
6402053b:	jmp    0x64020547
6402053d:	cmp    ecx,0x20
64020540:	jne    0x64020547
64020542:	mov    ecx,DWORD PTR [ebp+0xc]
64020545:	mov    DWORD PTR [ecx],ebx
64020547:	pop    edi
64020548:	pop    ebx
64020549:	leave  
6402054a:	ret    
6402054b:	push   ebp
6402054c:	mov    ebp,esp
6402054e:	sub    esp,0x2c
64020551:	mov    eax,DWORD PTR [ebp+0x8]
64020554:	movzx  ecx,WORD PTR [eax+0xa]
64020558:	push   ebx
64020559:	mov    ebx,ecx
6402055b:	and    ecx,0x8000
64020561:	mov    DWORD PTR [ebp-0x14],ecx
64020564:	mov    ecx,DWORD PTR [eax+0x6]
64020567:	mov    DWORD PTR [ebp-0x20],ecx
6402056a:	mov    ecx,DWORD PTR [eax+0x2]
6402056d:	movzx  eax,WORD PTR [eax]
64020570:	and    ebx,0x7fff
64020576:	sub    ebx,0x3fff
6402057c:	shl    eax,0x10
6402057f:	cmp    ebx,0xffffc001
64020585:	push   edi
64020586:	mov    DWORD PTR [ebp-0x1c],ecx
64020589:	mov    DWORD PTR [ebp-0x18],eax
6402058c:	jne    0x640205b5
6402058e:	xor    ebx,ebx
64020590:	xor    eax,eax
64020592:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
64020596:	jne    0x640205a5
64020598:	inc    eax
64020599:	cmp    eax,0x3
6402059c:	jl     0x64020592
6402059e:	xor    eax,eax
640205a0:	jmp    0x64020a4a
640205a5:	xor    eax,eax
640205a7:	lea    edi,[ebp-0x20]
640205aa:	stos   DWORD PTR es:[edi],eax
640205ab:	stos   DWORD PTR es:[edi],eax
640205ac:	push   0x2
640205ae:	stos   DWORD PTR es:[edi],eax
640205af:	pop    eax
640205b0:	jmp    0x64020a4a
640205b5:	and    DWORD PTR [ebp+0x8],0x0
640205b9:	push   esi
640205ba:	lea    esi,[ebp-0x20]
640205bd:	lea    edi,[ebp-0x2c]
640205c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640205c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640205c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640205c3:	mov    esi,DWORD PTR ds:0x6402e090
640205c9:	dec    esi
640205ca:	lea    ecx,[esi+0x1]
640205cd:	mov    eax,ecx
640205cf:	cdq    
640205d0:	and    edx,0x1f
640205d3:	add    eax,edx
640205d5:	sar    eax,0x5
640205d8:	mov    edx,ecx
640205da:	and    edx,0x8000001f
640205e0:	mov    DWORD PTR [ebp-0x10],ebx
640205e3:	mov    DWORD PTR [ebp-0xc],eax
640205e6:	jns    0x640205ed
640205e8:	dec    edx
640205e9:	or     edx,0xffffffe0
640205ec:	inc    edx
640205ed:	lea    edi,[ebp+eax*4-0x20]
640205f1:	push   0x1f
640205f3:	xor    eax,eax
640205f5:	pop    ecx
640205f6:	sub    ecx,edx
640205f8:	inc    eax
640205f9:	shl    eax,cl
640205fb:	mov    DWORD PTR [ebp-0x8],ecx
640205fe:	test   DWORD PTR [edi],eax
64020600:	je     0x64020693
64020606:	mov    eax,DWORD PTR [ebp-0xc]
64020609:	or     edx,0xffffffff
6402060c:	shl    edx,cl
6402060e:	not    edx
64020610:	test   DWORD PTR [ebp+eax*4-0x20],edx
64020614:	jmp    0x6402061b
64020616:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6402061b:	jne    0x64020625
6402061d:	inc    eax
6402061e:	cmp    eax,0x3
64020621:	jl     0x64020616
64020623:	jmp    0x64020693
64020625:	mov    eax,esi
64020627:	cdq    
64020628:	push   0x1f
6402062a:	pop    ecx
6402062b:	and    edx,ecx
6402062d:	add    eax,edx
6402062f:	sar    eax,0x5
64020632:	and    esi,0x8000001f
64020638:	jns    0x6402063f
6402063a:	dec    esi
6402063b:	or     esi,0xffffffe0
6402063e:	inc    esi
6402063f:	and    DWORD PTR [ebp-0x4],0x0
64020643:	sub    ecx,esi
64020645:	xor    edx,edx
64020647:	inc    edx
64020648:	shl    edx,cl
6402064a:	lea    ecx,[ebp+eax*4-0x20]
6402064e:	mov    esi,DWORD PTR [ecx]
64020650:	add    esi,edx
64020652:	mov    DWORD PTR [ebp+0x8],esi
64020655:	mov    esi,DWORD PTR [ecx]
64020657:	cmp    DWORD PTR [ebp+0x8],esi
6402065a:	jb     0x6402067e
6402065c:	cmp    DWORD PTR [ebp+0x8],edx
6402065f:	jmp    0x6402067c
64020661:	test   ecx,ecx
64020663:	je     0x64020690
64020665:	and    DWORD PTR [ebp-0x4],0x0
64020669:	lea    ecx,[ebp+eax*4-0x20]
6402066d:	mov    edx,DWORD PTR [ecx]
6402066f:	lea    esi,[edx+0x1]
64020672:	cmp    esi,edx
64020674:	mov    DWORD PTR [ebp+0x8],esi
64020677:	jb     0x6402067e
64020679:	cmp    esi,0x1
6402067c:	jae    0x64020685
6402067e:	mov    DWORD PTR [ebp-0x4],0x1
64020685:	dec    eax
64020686:	mov    edx,DWORD PTR [ebp+0x8]
64020689:	mov    DWORD PTR [ecx],edx
6402068b:	mov    ecx,DWORD PTR [ebp-0x4]
6402068e:	jns    0x64020661
64020690:	mov    DWORD PTR [ebp+0x8],ecx
64020693:	mov    ecx,DWORD PTR [ebp-0x8]
64020696:	or     eax,0xffffffff
64020699:	shl    eax,cl
6402069b:	and    DWORD PTR [edi],eax
6402069d:	mov    eax,DWORD PTR [ebp-0xc]
640206a0:	inc    eax
640206a1:	cmp    eax,0x3
640206a4:	jge    0x640206b3
640206a6:	push   0x3
640206a8:	pop    ecx
640206a9:	lea    edi,[ebp+eax*4-0x20]
640206ad:	sub    ecx,eax
640206af:	xor    eax,eax
640206b1:	rep stos DWORD PTR es:[edi],eax
640206b3:	cmp    DWORD PTR [ebp+0x8],0x0
640206b7:	je     0x640206ba
640206b9:	inc    ebx
640206ba:	mov    eax,ds:0x6402e08c
640206bf:	mov    ecx,eax
640206c1:	sub    ecx,DWORD PTR ds:0x6402e090
640206c7:	cmp    ebx,ecx
640206c9:	jge    0x640206d8
640206cb:	xor    eax,eax
640206cd:	lea    edi,[ebp-0x20]
640206d0:	stos   DWORD PTR es:[edi],eax
640206d1:	stos   DWORD PTR es:[edi],eax
640206d2:	stos   DWORD PTR es:[edi],eax
640206d3:	jmp    0x640208e5
640206d8:	cmp    ebx,eax
640206da:	jg     0x640208ef
640206e0:	sub    eax,DWORD PTR [ebp-0x10]
640206e3:	lea    esi,[ebp-0x2c]
640206e6:	mov    ecx,eax
640206e8:	lea    edi,[ebp-0x20]
640206eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640206ec:	cdq    
640206ed:	and    edx,0x1f
640206f0:	add    eax,edx
640206f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640206f3:	mov    edx,ecx
640206f5:	sar    eax,0x5
640206f8:	and    edx,0x8000001f
640206fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640206ff:	jns    0x64020706
64020701:	dec    edx
64020702:	or     edx,0xffffffe0
64020705:	inc    edx
64020706:	and    DWORD PTR [ebp-0xc],0x0
6402070a:	and    DWORD PTR [ebp+0x8],0x0
6402070e:	or     edi,0xffffffff
64020711:	mov    ecx,edx
64020713:	shl    edi,cl
64020715:	mov    DWORD PTR [ebp-0x4],0x20
6402071c:	sub    DWORD PTR [ebp-0x4],edx
6402071f:	not    edi
64020721:	mov    ebx,DWORD PTR [ebp+0x8]
64020724:	lea    ebx,[ebp+ebx*4-0x20]
64020728:	mov    esi,DWORD PTR [ebx]
6402072a:	mov    ecx,esi
6402072c:	and    ecx,edi
6402072e:	mov    DWORD PTR [ebp-0x10],ecx
64020731:	mov    ecx,edx
64020733:	shr    esi,cl
64020735:	mov    ecx,DWORD PTR [ebp-0x4]
64020738:	or     esi,DWORD PTR [ebp-0xc]
6402073b:	mov    DWORD PTR [ebx],esi
6402073d:	mov    esi,DWORD PTR [ebp-0x10]
64020740:	shl    esi,cl
64020742:	inc    DWORD PTR [ebp+0x8]
64020745:	cmp    DWORD PTR [ebp+0x8],0x3
64020749:	mov    DWORD PTR [ebp-0xc],esi
6402074c:	jl     0x64020721
6402074e:	mov    esi,eax
64020750:	push   0x2
64020752:	shl    esi,0x2
64020755:	lea    ecx,[ebp-0x18]
64020758:	pop    edx
64020759:	sub    ecx,esi
6402075b:	cmp    edx,eax
6402075d:	jl     0x64020767
6402075f:	mov    esi,DWORD PTR [ecx]
64020761:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020765:	jmp    0x6402076c
64020767:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402076c:	dec    edx
6402076d:	sub    ecx,0x4
64020770:	test   edx,edx
64020772:	jge    0x6402075b
64020774:	mov    esi,DWORD PTR ds:0x6402e090
6402077a:	dec    esi
6402077b:	lea    ecx,[esi+0x1]
6402077e:	mov    eax,ecx
64020780:	cdq    
64020781:	and    edx,0x1f
64020784:	add    eax,edx
64020786:	sar    eax,0x5
64020789:	mov    edx,ecx
6402078b:	and    edx,0x8000001f
64020791:	mov    DWORD PTR [ebp-0xc],eax
64020794:	jns    0x6402079b
64020796:	dec    edx
64020797:	or     edx,0xffffffe0
6402079a:	inc    edx
6402079b:	push   0x1f
6402079d:	pop    ecx
6402079e:	sub    ecx,edx
640207a0:	xor    edx,edx
640207a2:	inc    edx
640207a3:	shl    edx,cl
640207a5:	lea    ebx,[ebp+eax*4-0x20]
640207a9:	mov    DWORD PTR [ebp-0x10],ecx
640207ac:	test   DWORD PTR [ebx],edx
640207ae:	je     0x64020836
640207b4:	or     edx,0xffffffff
640207b7:	shl    edx,cl
640207b9:	not    edx
640207bb:	test   DWORD PTR [ebp+eax*4-0x20],edx
640207bf:	jmp    0x640207c6
640207c1:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
640207c6:	jne    0x640207d0
640207c8:	inc    eax
640207c9:	cmp    eax,0x3
640207cc:	jl     0x640207c1
640207ce:	jmp    0x64020836
640207d0:	mov    eax,esi
640207d2:	cdq    
640207d3:	push   0x1f
640207d5:	pop    ecx
640207d6:	and    edx,ecx
640207d8:	add    eax,edx
640207da:	sar    eax,0x5
640207dd:	and    esi,0x8000001f
640207e3:	jns    0x640207ea
640207e5:	dec    esi
640207e6:	or     esi,0xffffffe0
640207e9:	inc    esi
640207ea:	and    DWORD PTR [ebp+0x8],0x0
640207ee:	xor    edx,edx
640207f0:	sub    ecx,esi
640207f2:	inc    edx
640207f3:	shl    edx,cl
640207f5:	lea    ecx,[ebp+eax*4-0x20]
640207f9:	mov    esi,DWORD PTR [ecx]
640207fb:	lea    edi,[esi+edx*1]
640207fe:	cmp    edi,esi
64020800:	jb     0x64020806
64020802:	cmp    edi,edx
64020804:	jae    0x6402080d
64020806:	mov    DWORD PTR [ebp+0x8],0x1
6402080d:	mov    DWORD PTR [ecx],edi
6402080f:	mov    ecx,DWORD PTR [ebp+0x8]
64020812:	jmp    0x64020833
64020814:	test   ecx,ecx
64020816:	je     0x64020836
64020818:	lea    ecx,[ebp+eax*4-0x20]
6402081c:	mov    edx,DWORD PTR [ecx]
6402081e:	lea    esi,[edx+0x1]
64020821:	xor    edi,edi
64020823:	cmp    esi,edx
64020825:	jb     0x6402082c
64020827:	cmp    esi,0x1
6402082a:	jae    0x6402082f
6402082c:	xor    edi,edi
6402082e:	inc    edi
6402082f:	mov    DWORD PTR [ecx],esi
64020831:	mov    ecx,edi
64020833:	dec    eax
64020834:	jns    0x64020814
64020836:	mov    ecx,DWORD PTR [ebp-0x10]
64020839:	or     eax,0xffffffff
6402083c:	shl    eax,cl
6402083e:	and    DWORD PTR [ebx],eax
64020840:	mov    eax,DWORD PTR [ebp-0xc]
64020843:	inc    eax
64020844:	cmp    eax,0x3
64020847:	jge    0x64020856
64020849:	push   0x3
6402084b:	pop    ecx
6402084c:	lea    edi,[ebp+eax*4-0x20]
64020850:	sub    ecx,eax
64020852:	xor    eax,eax
64020854:	rep stos DWORD PTR es:[edi],eax
64020856:	mov    ecx,DWORD PTR ds:0x6402e094
6402085c:	inc    ecx
6402085d:	mov    eax,ecx
6402085f:	cdq    
64020860:	and    edx,0x1f
64020863:	add    eax,edx
64020865:	mov    edx,ecx
64020867:	sar    eax,0x5
6402086a:	and    edx,0x8000001f
64020870:	jns    0x64020877
64020872:	dec    edx
64020873:	or     edx,0xffffffe0
64020876:	inc    edx
64020877:	and    DWORD PTR [ebp-0xc],0x0
6402087b:	and    DWORD PTR [ebp+0x8],0x0
6402087f:	or     edi,0xffffffff
64020882:	mov    ecx,edx
64020884:	shl    edi,cl
64020886:	mov    DWORD PTR [ebp-0x4],0x20
6402088d:	sub    DWORD PTR [ebp-0x4],edx
64020890:	not    edi
64020892:	mov    ebx,DWORD PTR [ebp+0x8]
64020895:	lea    ebx,[ebp+ebx*4-0x20]
64020899:	mov    esi,DWORD PTR [ebx]
6402089b:	mov    ecx,esi
6402089d:	and    ecx,edi
6402089f:	mov    DWORD PTR [ebp-0x10],ecx
640208a2:	mov    ecx,edx
640208a4:	shr    esi,cl
640208a6:	mov    ecx,DWORD PTR [ebp-0x4]
640208a9:	or     esi,DWORD PTR [ebp-0xc]
640208ac:	mov    DWORD PTR [ebx],esi
640208ae:	mov    esi,DWORD PTR [ebp-0x10]
640208b1:	shl    esi,cl
640208b3:	inc    DWORD PTR [ebp+0x8]
640208b6:	cmp    DWORD PTR [ebp+0x8],0x3
640208ba:	mov    DWORD PTR [ebp-0xc],esi
640208bd:	jl     0x64020892
640208bf:	mov    esi,eax
640208c1:	push   0x2
640208c3:	shl    esi,0x2
640208c6:	lea    ecx,[ebp-0x18]
640208c9:	pop    edx
640208ca:	sub    ecx,esi
640208cc:	cmp    edx,eax
640208ce:	jl     0x640208d8
640208d0:	mov    esi,DWORD PTR [ecx]
640208d2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640208d6:	jmp    0x640208dd
640208d8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640208dd:	dec    edx
640208de:	sub    ecx,0x4
640208e1:	test   edx,edx
640208e3:	jge    0x640208cc
640208e5:	push   0x2
640208e7:	xor    ebx,ebx
640208e9:	pop    eax
640208ea:	jmp    0x64020a49
640208ef:	cmp    ebx,DWORD PTR ds:0x6402e088
640208f5:	mov    ecx,DWORD PTR ds:0x6402e094
640208fb:	jl     0x640209ae
64020901:	xor    eax,eax
64020903:	lea    edi,[ebp-0x20]
64020906:	stos   DWORD PTR es:[edi],eax
64020907:	stos   DWORD PTR es:[edi],eax
64020908:	stos   DWORD PTR es:[edi],eax
64020909:	or     DWORD PTR [ebp-0x20],0x80000000
64020910:	mov    eax,ecx
64020912:	cdq    
64020913:	and    edx,0x1f
64020916:	add    eax,edx
64020918:	mov    edx,ecx
6402091a:	sar    eax,0x5
6402091d:	and    edx,0x8000001f
64020923:	jns    0x6402092a
64020925:	dec    edx
64020926:	or     edx,0xffffffe0
64020929:	inc    edx
6402092a:	and    DWORD PTR [ebp-0xc],0x0
6402092e:	and    DWORD PTR [ebp+0x8],0x0
64020932:	or     edi,0xffffffff
64020935:	mov    ecx,edx
64020937:	shl    edi,cl
64020939:	mov    DWORD PTR [ebp-0x4],0x20
64020940:	sub    DWORD PTR [ebp-0x4],edx
64020943:	not    edi
64020945:	mov    ebx,DWORD PTR [ebp+0x8]
64020948:	lea    ebx,[ebp+ebx*4-0x20]
6402094c:	mov    esi,DWORD PTR [ebx]
6402094e:	mov    ecx,esi
64020950:	and    ecx,edi
64020952:	mov    DWORD PTR [ebp-0x10],ecx
64020955:	mov    ecx,edx
64020957:	shr    esi,cl
64020959:	mov    ecx,DWORD PTR [ebp-0x4]
6402095c:	or     esi,DWORD PTR [ebp-0xc]
6402095f:	mov    DWORD PTR [ebx],esi
64020961:	mov    esi,DWORD PTR [ebp-0x10]
64020964:	shl    esi,cl
64020966:	inc    DWORD PTR [ebp+0x8]
64020969:	cmp    DWORD PTR [ebp+0x8],0x3
6402096d:	mov    DWORD PTR [ebp-0xc],esi
64020970:	jl     0x64020945
64020972:	mov    esi,eax
64020974:	push   0x2
64020976:	shl    esi,0x2
64020979:	lea    ecx,[ebp-0x18]
6402097c:	pop    edx
6402097d:	sub    ecx,esi
6402097f:	cmp    edx,eax
64020981:	jl     0x6402098b
64020983:	mov    esi,DWORD PTR [ecx]
64020985:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020989:	jmp    0x64020990
6402098b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020990:	dec    edx
64020991:	sub    ecx,0x4
64020994:	test   edx,edx
64020996:	jge    0x6402097f
64020998:	mov    eax,ds:0x6402e088
6402099d:	mov    ecx,DWORD PTR ds:0x6402e09c
640209a3:	lea    ebx,[ecx+eax*1]
640209a6:	xor    eax,eax
640209a8:	inc    eax
640209a9:	jmp    0x64020a49
640209ae:	mov    eax,ds:0x6402e09c
640209b3:	and    DWORD PTR [ebp-0x20],0x7fffffff
640209ba:	add    ebx,eax
640209bc:	mov    eax,ecx
640209be:	cdq    
640209bf:	and    edx,0x1f
640209c2:	add    eax,edx
640209c4:	mov    edx,ecx
640209c6:	sar    eax,0x5
640209c9:	and    edx,0x8000001f
640209cf:	jns    0x640209d6
640209d1:	dec    edx
640209d2:	or     edx,0xffffffe0
640209d5:	inc    edx
640209d6:	and    DWORD PTR [ebp-0xc],0x0
640209da:	and    DWORD PTR [ebp+0x8],0x0
640209de:	or     esi,0xffffffff
640209e1:	mov    ecx,edx
640209e3:	shl    esi,cl
640209e5:	mov    DWORD PTR [ebp-0x4],0x20
640209ec:	sub    DWORD PTR [ebp-0x4],edx
640209ef:	not    esi
640209f1:	mov    ecx,DWORD PTR [ebp+0x8]
640209f4:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
640209f8:	mov    ecx,edi
640209fa:	and    ecx,esi
640209fc:	mov    DWORD PTR [ebp-0x10],ecx
640209ff:	mov    ecx,edx
64020a01:	shr    edi,cl
64020a03:	mov    ecx,DWORD PTR [ebp+0x8]
64020a06:	or     edi,DWORD PTR [ebp-0xc]
64020a09:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
64020a0d:	mov    edi,DWORD PTR [ebp-0x10]
64020a10:	mov    ecx,DWORD PTR [ebp-0x4]
64020a13:	shl    edi,cl
64020a15:	inc    DWORD PTR [ebp+0x8]
64020a18:	cmp    DWORD PTR [ebp+0x8],0x3
64020a1c:	mov    DWORD PTR [ebp-0xc],edi
64020a1f:	jl     0x640209f1
64020a21:	mov    esi,eax
64020a23:	push   0x2
64020a25:	shl    esi,0x2
64020a28:	lea    ecx,[ebp-0x18]
64020a2b:	pop    edx
64020a2c:	sub    ecx,esi
64020a2e:	cmp    edx,eax
64020a30:	jl     0x64020a3a
64020a32:	mov    esi,DWORD PTR [ecx]
64020a34:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020a38:	jmp    0x64020a3f
64020a3a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020a3f:	dec    edx
64020a40:	sub    ecx,0x4
64020a43:	test   edx,edx
64020a45:	jge    0x64020a2e
64020a47:	xor    eax,eax
64020a49:	pop    esi
64020a4a:	push   0x1f
64020a4c:	pop    ecx
64020a4d:	sub    ecx,DWORD PTR ds:0x6402e094
64020a53:	shl    ebx,cl
64020a55:	mov    ecx,DWORD PTR [ebp-0x14]
64020a58:	neg    ecx
64020a5a:	sbb    ecx,ecx
64020a5c:	and    ecx,0x80000000
64020a62:	or     ebx,ecx
64020a64:	mov    ecx,DWORD PTR ds:0x6402e098
64020a6a:	or     ebx,DWORD PTR [ebp-0x20]
64020a6d:	cmp    ecx,0x40
64020a70:	jne    0x64020a7f
64020a72:	mov    ecx,DWORD PTR [ebp+0xc]
64020a75:	mov    edx,DWORD PTR [ebp-0x1c]
64020a78:	mov    DWORD PTR [ecx+0x4],ebx
64020a7b:	mov    DWORD PTR [ecx],edx
64020a7d:	jmp    0x64020a89
64020a7f:	cmp    ecx,0x20
64020a82:	jne    0x64020a89
64020a84:	mov    ecx,DWORD PTR [ebp+0xc]
64020a87:	mov    DWORD PTR [ecx],ebx
64020a89:	pop    edi
64020a8a:	pop    ebx
64020a8b:	leave  
64020a8c:	ret    
64020a8d:	push   ebp
64020a8e:	mov    ebp,esp
64020a90:	sub    esp,0x7c
64020a93:	mov    eax,ds:0x6402d09c
64020a98:	xor    eax,ebp
64020a9a:	mov    DWORD PTR [ebp-0x4],eax
64020a9d:	mov    eax,DWORD PTR [ebp+0x8]
64020aa0:	push   ebx
64020aa1:	xor    ebx,ebx
64020aa3:	push   esi
64020aa4:	xor    esi,esi
64020aa6:	mov    DWORD PTR [ebp-0x7c],eax
64020aa9:	mov    eax,DWORD PTR [ebp+0xc]
64020aac:	inc    esi
64020aad:	xor    ecx,ecx
64020aaf:	cmp    DWORD PTR [ebp+0x24],ebx
64020ab2:	push   edi
64020ab3:	mov    DWORD PTR [ebp-0x70],eax
64020ab6:	lea    edi,[ebp-0x20]
64020ab9:	mov    DWORD PTR [ebp-0x74],ebx
64020abc:	mov    DWORD PTR [ebp-0x68],esi
64020abf:	mov    DWORD PTR [ebp-0x4c],ebx
64020ac2:	mov    DWORD PTR [ebp-0x58],ebx
64020ac5:	mov    DWORD PTR [ebp-0x5c],ebx
64020ac8:	mov    DWORD PTR [ebp-0x60],ebx
64020acb:	mov    DWORD PTR [ebp-0x64],ebx
64020ace:	mov    DWORD PTR [ebp-0x50],ebx
64020ad1:	mov    DWORD PTR [ebp-0x6c],ebx
64020ad4:	jne    0x64020af5
64020ad6:	call   0x64014880
64020adb:	push   ebx
64020adc:	push   ebx
64020add:	push   ebx
64020ade:	push   ebx
64020adf:	push   ebx
64020ae0:	mov    DWORD PTR [eax],0x16
64020ae6:	call   0x640125f4
64020aeb:	add    esp,0x14
64020aee:	xor    eax,eax
64020af0:	jmp    0x6402110e
64020af5:	mov    edx,DWORD PTR [ebp+0x10]
64020af8:	mov    DWORD PTR [ebp-0x54],edx
64020afb:	mov    al,BYTE PTR [edx]
64020afd:	cmp    al,0x20
64020aff:	je     0x64020b0d
64020b01:	cmp    al,0x9
64020b03:	je     0x64020b0d
64020b05:	cmp    al,0xa
64020b07:	je     0x64020b0d
64020b09:	cmp    al,0xd
64020b0b:	jne    0x64020b10
64020b0d:	inc    edx
64020b0e:	jmp    0x64020afb
64020b10:	mov    bl,0x30
64020b12:	mov    al,BYTE PTR [edx]
64020b14:	inc    edx
64020b15:	cmp    ecx,0xb
64020b18:	ja     0x64020d4d
64020b1e:	jmp    DWORD PTR [ecx*4+0x6402111d]
64020b25:	mov    cl,al
64020b27:	sub    cl,0x31
64020b2a:	cmp    cl,0x8
64020b2d:	ja     0x64020b35
64020b2f:	push   0x3
64020b31:	pop    ecx
64020b32:	dec    edx
64020b33:	jmp    0x64020b12
64020b35:	mov    ecx,DWORD PTR [ebp+0x24]
64020b38:	mov    ecx,DWORD PTR [ecx]
64020b3a:	mov    ecx,DWORD PTR [ecx+0xbc]
64020b40:	mov    ecx,DWORD PTR [ecx]
64020b42:	cmp    al,BYTE PTR [ecx]
64020b44:	jne    0x64020b4b
64020b46:	push   0x5
64020b48:	pop    ecx
64020b49:	jmp    0x64020b12
64020b4b:	movsx  eax,al
64020b4e:	sub    eax,0x2b
64020b51:	je     0x64020b70
64020b53:	dec    eax
64020b54:	dec    eax
64020b55:	je     0x64020b64
64020b57:	sub    eax,0x3
64020b5a:	jne    0x64020ceb
64020b60:	mov    ecx,esi
64020b62:	jmp    0x64020b12
64020b64:	push   0x2
64020b66:	pop    ecx
64020b67:	mov    DWORD PTR [ebp-0x74],0x8000
64020b6e:	jmp    0x64020b12
64020b70:	and    DWORD PTR [ebp-0x74],0x0
64020b74:	push   0x2
64020b76:	pop    ecx
64020b77:	jmp    0x64020b12
64020b79:	mov    cl,al
64020b7b:	sub    cl,0x31
64020b7e:	cmp    cl,0x8
64020b81:	mov    DWORD PTR [ebp-0x58],esi
64020b84:	jbe    0x64020b2f
64020b86:	mov    ecx,DWORD PTR [ebp+0x24]
64020b89:	mov    ecx,DWORD PTR [ecx]
64020b8b:	mov    ecx,DWORD PTR [ecx+0xbc]
64020b91:	mov    ecx,DWORD PTR [ecx]
64020b93:	cmp    al,BYTE PTR [ecx]
64020b95:	jne    0x64020b9b
64020b97:	push   0x4
64020b99:	jmp    0x64020b48
64020b9b:	cmp    al,0x2b
64020b9d:	je     0x64020bc7
64020b9f:	cmp    al,0x2d
64020ba1:	je     0x64020bc7
64020ba3:	cmp    al,bl
64020ba5:	je     0x64020b60
64020ba7:	cmp    al,0x43
64020ba9:	jle    0x64020ceb
64020baf:	cmp    al,0x45
64020bb1:	jle    0x64020bc3
64020bb3:	cmp    al,0x63
64020bb5:	jle    0x64020ceb
64020bbb:	cmp    al,0x65
64020bbd:	jg     0x64020ceb
64020bc3:	push   0x6
64020bc5:	jmp    0x64020b48
64020bc7:	dec    edx
64020bc8:	push   0xb
64020bca:	jmp    0x64020b48
64020bcf:	mov    cl,al
64020bd1:	sub    cl,0x31
64020bd4:	cmp    cl,0x8
64020bd7:	jbe    0x64020b2f
64020bdd:	mov    ecx,DWORD PTR [ebp+0x24]
64020be0:	mov    ecx,DWORD PTR [ecx]
64020be2:	mov    ecx,DWORD PTR [ecx+0xbc]
64020be8:	mov    ecx,DWORD PTR [ecx]
64020bea:	cmp    al,BYTE PTR [ecx]
64020bec:	je     0x64020b46
64020bf2:	cmp    al,bl
64020bf4:	je     0x64020b60
64020bfa:	mov    edx,DWORD PTR [ebp-0x54]
64020bfd:	jmp    0x64020d16
64020c02:	mov    DWORD PTR [ebp-0x58],esi
64020c05:	jmp    0x64020c21
64020c07:	cmp    al,0x39
64020c09:	jg     0x64020c25
64020c0b:	cmp    DWORD PTR [ebp-0x4c],0x19
64020c0f:	jae    0x64020c1b
64020c11:	inc    DWORD PTR [ebp-0x4c]
64020c14:	sub    al,bl
64020c16:	mov    BYTE PTR [edi],al
64020c18:	inc    edi
64020c19:	jmp    0x64020c1e
64020c1b:	inc    DWORD PTR [ebp-0x50]
64020c1e:	mov    al,BYTE PTR [edx]
64020c20:	inc    edx
64020c21:	cmp    al,bl
64020c23:	jge    0x64020c07
64020c25:	mov    ecx,DWORD PTR [ebp+0x24]
64020c28:	mov    ecx,DWORD PTR [ecx]
64020c2a:	mov    ecx,DWORD PTR [ecx+0xbc]
64020c30:	mov    ecx,DWORD PTR [ecx]
64020c32:	cmp    al,BYTE PTR [ecx]
64020c34:	je     0x64020b97
64020c3a:	cmp    al,0x2b
64020c3c:	je     0x64020bc7
64020c3e:	cmp    al,0x2d
64020c40:	je     0x64020bc7
64020c42:	jmp    0x64020ba7
64020c47:	cmp    DWORD PTR [ebp-0x4c],0x0
64020c4b:	mov    DWORD PTR [ebp-0x58],esi
64020c4e:	mov    DWORD PTR [ebp-0x5c],esi
64020c51:	jne    0x64020c79
64020c53:	jmp    0x64020c5b
64020c55:	dec    DWORD PTR [ebp-0x50]
64020c58:	mov    al,BYTE PTR [edx]
64020c5a:	inc    edx
64020c5b:	cmp    al,bl
64020c5d:	je     0x64020c55
64020c5f:	jmp    0x64020c79
64020c61:	cmp    al,0x39
64020c63:	jg     0x64020c3a
64020c65:	cmp    DWORD PTR [ebp-0x4c],0x19
64020c69:	jae    0x64020c76
64020c6b:	inc    DWORD PTR [ebp-0x4c]
64020c6e:	sub    al,bl
64020c70:	mov    BYTE PTR [edi],al
64020c72:	inc    edi
64020c73:	dec    DWORD PTR [ebp-0x50]
64020c76:	mov    al,BYTE PTR [edx]
64020c78:	inc    edx
64020c79:	cmp    al,bl
64020c7b:	jge    0x64020c61
64020c7d:	jmp    0x64020c3a
64020c7f:	sub    al,bl
64020c81:	cmp    al,0x9
64020c83:	mov    DWORD PTR [ebp-0x5c],esi
64020c86:	ja     0x64020bfa
64020c8c:	push   0x4
64020c8e:	jmp    0x64020b31
64020c93:	lea    ecx,[edx-0x2]
64020c96:	mov    DWORD PTR [ebp-0x54],ecx
64020c99:	mov    cl,al
64020c9b:	sub    cl,0x31
64020c9e:	cmp    cl,0x8
64020ca1:	ja     0x64020caa
64020ca3:	push   0x9
64020ca5:	jmp    0x64020b31
64020caa:	movsx  eax,al
64020cad:	sub    eax,0x2b
64020cb0:	je     0x64020cd2
64020cb2:	dec    eax
64020cb3:	dec    eax
64020cb4:	je     0x64020cc6
64020cb6:	sub    eax,0x3
64020cb9:	jne    0x64020bfa
64020cbf:	push   0x8
64020cc1:	jmp    0x64020b48
64020cc6:	or     DWORD PTR [ebp-0x68],0xffffffff
64020cca:	push   0x7
64020ccc:	pop    ecx
64020ccd:	jmp    0x64020b12
64020cd2:	push   0x7
64020cd4:	jmp    0x64020b48
64020cd9:	mov    DWORD PTR [ebp-0x60],esi
64020cdc:	jmp    0x64020ce1
64020cde:	mov    al,BYTE PTR [edx]
64020ce0:	inc    edx
64020ce1:	cmp    al,bl
64020ce3:	je     0x64020cde
64020ce5:	sub    al,0x31
64020ce7:	cmp    al,0x8
64020ce9:	jbe    0x64020ca3
64020ceb:	dec    edx
64020cec:	jmp    0x64020d16
64020cee:	mov    cl,al
64020cf0:	sub    cl,0x31
64020cf3:	cmp    cl,0x8
64020cf6:	jbe    0x64020ca3
64020cf8:	cmp    al,bl
64020cfa:	jmp    0x64020cb9
64020cfc:	cmp    DWORD PTR [ebp+0x20],0x0
64020d00:	je     0x64020d49
64020d02:	movsx  eax,al
64020d05:	sub    eax,0x2b
64020d08:	lea    ecx,[edx-0x1]
64020d0b:	mov    DWORD PTR [ebp-0x54],ecx
64020d0e:	je     0x64020cd2
64020d10:	dec    eax
64020d11:	dec    eax
64020d12:	je     0x64020cc6
64020d14:	mov    edx,ecx
64020d16:	cmp    DWORD PTR [ebp-0x58],0x0
64020d1a:	mov    eax,DWORD PTR [ebp-0x70]
64020d1d:	mov    DWORD PTR [eax],edx
64020d1f:	je     0x640210c9
64020d25:	push   0x18
64020d27:	pop    eax
64020d28:	cmp    DWORD PTR [ebp-0x4c],eax
64020d2b:	jbe    0x64020d3d
64020d2d:	cmp    BYTE PTR [ebp-0x9],0x5
64020d31:	jl     0x64020d36
64020d33:	inc    BYTE PTR [ebp-0x9]
64020d36:	dec    edi
64020d37:	inc    DWORD PTR [ebp-0x50]
64020d3a:	mov    DWORD PTR [ebp-0x4c],eax
64020d3d:	cmp    DWORD PTR [ebp-0x4c],0x0
64020d41:	jbe    0x640210f0
64020d47:	jmp    0x64020da2
64020d49:	push   0xa
64020d4b:	pop    ecx
64020d4c:	dec    edx
64020d4d:	cmp    ecx,0xa
64020d50:	jne    0x64020b12
64020d56:	jmp    0x64020d16
64020d58:	mov    DWORD PTR [ebp-0x60],esi
64020d5b:	xor    ecx,ecx
64020d5d:	jmp    0x64020d78
64020d5f:	cmp    al,0x39
64020d61:	jg     0x64020d83
64020d63:	imul   ecx,ecx,0xa
64020d66:	movsx  esi,al
64020d69:	lea    ecx,[ecx+esi*1-0x30]
64020d6d:	cmp    ecx,0x1450
64020d73:	jg     0x64020d7e
64020d75:	mov    al,BYTE PTR [edx]
64020d77:	inc    edx
64020d78:	cmp    al,bl
64020d7a:	jge    0x64020d5f
64020d7c:	jmp    0x64020d83
64020d7e:	mov    ecx,0x1451
64020d83:	mov    DWORD PTR [ebp-0x64],ecx
64020d86:	jmp    0x64020d93
64020d88:	cmp    al,0x39
64020d8a:	jg     0x64020ceb
64020d90:	mov    al,BYTE PTR [edx]
64020d92:	inc    edx
64020d93:	cmp    al,bl
64020d95:	jge    0x64020d88
64020d97:	jmp    0x64020ceb
64020d9c:	dec    DWORD PTR [ebp-0x4c]
64020d9f:	inc    DWORD PTR [ebp-0x50]
64020da2:	dec    edi
64020da3:	cmp    BYTE PTR [edi],0x0
64020da6:	je     0x64020d9c
64020da8:	lea    eax,[ebp-0x3c]
64020dab:	push   eax
64020dac:	push   DWORD PTR [ebp-0x4c]
64020daf:	lea    eax,[ebp-0x20]
64020db2:	push   eax
64020db3:	call   0x64021e44
64020db8:	mov    eax,DWORD PTR [ebp-0x64]
64020dbb:	xor    ecx,ecx
64020dbd:	add    esp,0xc
64020dc0:	cmp    DWORD PTR [ebp-0x68],ecx
64020dc3:	jge    0x64020dc7
64020dc5:	neg    eax
64020dc7:	add    eax,DWORD PTR [ebp-0x50]
64020dca:	cmp    DWORD PTR [ebp-0x60],ecx
64020dcd:	jne    0x64020dd2
64020dcf:	add    eax,DWORD PTR [ebp+0x18]
64020dd2:	cmp    DWORD PTR [ebp-0x5c],ecx
64020dd5:	jne    0x64020dda
64020dd7:	sub    eax,DWORD PTR [ebp+0x1c]
64020dda:	cmp    eax,0x1450
64020ddf:	jg     0x640210d2
64020de5:	cmp    eax,0xffffebb0
64020dea:	jl     0x640210e9
64020df0:	mov    esi,0x6402e0a0
64020df5:	sub    esi,0x60
64020df8:	cmp    eax,ecx
64020dfa:	mov    DWORD PTR [ebp-0x54],eax
64020dfd:	je     0x640210b7
64020e03:	jge    0x64020e12
64020e05:	neg    eax
64020e07:	mov    esi,0x6402e200
64020e0c:	mov    DWORD PTR [ebp-0x54],eax
64020e0f:	sub    esi,0x60
64020e12:	cmp    DWORD PTR [ebp+0x14],ecx
64020e15:	jne    0x64020e1b
64020e17:	mov    WORD PTR [ebp-0x3c],cx
64020e1b:	cmp    DWORD PTR [ebp-0x54],ecx
64020e1e:	je     0x640210b7
64020e24:	mov    eax,DWORD PTR [ebp-0x54]
64020e27:	sar    DWORD PTR [ebp-0x54],0x3
64020e2b:	add    esi,0x54
64020e2e:	and    eax,0x7
64020e31:	test   eax,eax
64020e33:	mov    DWORD PTR [ebp-0x4c],esi
64020e36:	je     0x640210ad
64020e3c:	imul   eax,eax,0xc
64020e3f:	add    eax,esi
64020e41:	mov    ebx,eax
64020e43:	cmp    WORD PTR [ebx],0x8000
64020e48:	mov    DWORD PTR [ebp-0x70],ebx
64020e4b:	jb     0x64020e61
64020e4d:	mov    esi,ebx
64020e4f:	lea    edi,[ebp-0x48]
64020e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020e55:	dec    DWORD PTR [ebp-0x46]
64020e58:	mov    esi,DWORD PTR [ebp-0x4c]
64020e5b:	lea    ebx,[ebp-0x48]
64020e5e:	mov    DWORD PTR [ebp-0x70],ebx
64020e61:	movzx  edx,WORD PTR [ebx+0xa]
64020e65:	mov    ecx,DWORD PTR [ebp-0x32]
64020e68:	xor    eax,eax
64020e6a:	mov    DWORD PTR [ebp-0x50],eax
64020e6d:	mov    DWORD PTR [ebp-0x2c],eax
64020e70:	mov    DWORD PTR [ebp-0x28],eax
64020e73:	mov    DWORD PTR [ebp-0x24],eax
64020e76:	mov    eax,edx
64020e78:	mov    edi,0x7fff
64020e7d:	xor    eax,ecx
64020e7f:	and    ecx,edi
64020e81:	and    edx,edi
64020e83:	and    eax,0x8000
64020e88:	cmp    cx,0x7fff
64020e8d:	lea    edi,[edx+ecx*1]
64020e90:	movzx  edi,di
64020e93:	jae    0x64021093
64020e99:	cmp    dx,0x7fff
64020e9e:	jae    0x64021093
64020ea4:	cmp    di,0xbffd
64020ea9:	ja     0x64021093
64020eaf:	cmp    di,0x3fbf
64020eb4:	ja     0x64020ec3
64020eb6:	xor    eax,eax
64020eb8:	mov    DWORD PTR [ebp-0x38],eax
64020ebb:	mov    DWORD PTR [ebp-0x3c],eax
64020ebe:	jmp    0x640210aa
64020ec3:	test   cx,cx
64020ec6:	jne    0x64020ee7
64020ec8:	inc    edi
64020ec9:	test   DWORD PTR [ebp-0x34],0x7fffffff
64020ed0:	jne    0x64020ee7
64020ed2:	cmp    DWORD PTR [ebp-0x38],0x0
64020ed6:	jne    0x64020ee7
64020ed8:	cmp    DWORD PTR [ebp-0x3c],0x0
64020edc:	jne    0x64020ee7
64020ede:	and    WORD PTR [ebp-0x32],cx
64020ee2:	jmp    0x640210ad
64020ee7:	xor    ecx,ecx
64020ee9:	cmp    dx,cx
64020eec:	jne    0x64020f0f
64020eee:	inc    edi
64020eef:	test   DWORD PTR [ebx+0x8],0x7fffffff
64020ef6:	jne    0x64020f0f
64020ef8:	cmp    DWORD PTR [ebx+0x4],ecx
64020efb:	jne    0x64020f0f
64020efd:	cmp    DWORD PTR [ebx],ecx
64020eff:	jne    0x64020f0f
64020f01:	mov    DWORD PTR [ebp-0x34],ecx
64020f04:	mov    DWORD PTR [ebp-0x38],ecx
64020f07:	mov    DWORD PTR [ebp-0x3c],ecx
64020f0a:	jmp    0x640210ad
64020f0f:	and    DWORD PTR [ebp-0x68],ecx
64020f12:	lea    esi,[ebp-0x28]
64020f15:	mov    DWORD PTR [ebp-0x58],0x5
64020f1c:	mov    ecx,DWORD PTR [ebp-0x68]
64020f1f:	mov    edx,DWORD PTR [ebp-0x58]
64020f22:	add    ecx,ecx
64020f24:	test   edx,edx
64020f26:	mov    DWORD PTR [ebp-0x64],edx
64020f29:	jle    0x64020f80
64020f2b:	lea    ecx,[ebp+ecx*1-0x3c]
64020f2f:	add    ebx,0x8
64020f32:	mov    DWORD PTR [ebp-0x5c],ecx
64020f35:	mov    DWORD PTR [ebp-0x60],ebx
64020f38:	mov    ecx,DWORD PTR [ebp-0x60]
64020f3b:	mov    edx,DWORD PTR [ebp-0x5c]
64020f3e:	movzx  edx,WORD PTR [edx]
64020f41:	movzx  ecx,WORD PTR [ecx]
64020f44:	and    DWORD PTR [ebp-0x78],0x0
64020f48:	imul   ecx,edx
64020f4b:	mov    edx,DWORD PTR [esi-0x4]
64020f4e:	lea    ebx,[edx+ecx*1]
64020f51:	cmp    ebx,edx
64020f53:	jb     0x64020f59
64020f55:	cmp    ebx,ecx
64020f57:	jae    0x64020f60
64020f59:	mov    DWORD PTR [ebp-0x78],0x1
64020f60:	cmp    DWORD PTR [ebp-0x78],0x0
64020f64:	mov    DWORD PTR [esi-0x4],ebx
64020f67:	je     0x64020f6c
64020f69:	inc    WORD PTR [esi]
64020f6c:	add    DWORD PTR [ebp-0x5c],0x2
64020f70:	sub    DWORD PTR [ebp-0x60],0x2
64020f74:	dec    DWORD PTR [ebp-0x64]
64020f77:	cmp    DWORD PTR [ebp-0x64],0x0
64020f7b:	jg     0x64020f38
64020f7d:	mov    ebx,DWORD PTR [ebp-0x70]
64020f80:	inc    esi
64020f81:	inc    esi
64020f82:	inc    DWORD PTR [ebp-0x68]
64020f85:	dec    DWORD PTR [ebp-0x58]
64020f88:	cmp    DWORD PTR [ebp-0x58],0x0
64020f8c:	jg     0x64020f1c
64020f8e:	add    edi,0xc002
64020f94:	test   di,di
64020f97:	jle    0x64020fd4
64020f99:	test   DWORD PTR [ebp-0x24],0x80000000
64020fa0:	jne    0x64020fcf
64020fa2:	mov    esi,DWORD PTR [ebp-0x28]
64020fa5:	mov    ecx,DWORD PTR [ebp-0x2c]
64020fa8:	shl    DWORD PTR [ebp-0x2c],1
64020fab:	shr    ecx,0x1f
64020fae:	mov    edx,esi
64020fb0:	add    esi,esi
64020fb2:	or     esi,ecx
64020fb4:	mov    ecx,DWORD PTR [ebp-0x24]
64020fb7:	shr    edx,0x1f
64020fba:	add    ecx,ecx
64020fbc:	or     ecx,edx
64020fbe:	add    edi,0xffff
64020fc4:	test   di,di
64020fc7:	mov    DWORD PTR [ebp-0x28],esi
64020fca:	mov    DWORD PTR [ebp-0x24],ecx
64020fcd:	jg     0x64020f99
64020fcf:	test   di,di
64020fd2:	jg     0x64021021
64020fd4:	add    edi,0xffff
64020fda:	test   di,di
64020fdd:	jge    0x64021021
64020fdf:	mov    ecx,edi
64020fe1:	neg    ecx
64020fe3:	movzx  esi,cx
64020fe6:	add    edi,esi
64020fe8:	test   BYTE PTR [ebp-0x2c],0x1
64020fec:	je     0x64020ff1
64020fee:	inc    DWORD PTR [ebp-0x50]
64020ff1:	mov    ecx,DWORD PTR [ebp-0x24]
64020ff4:	mov    ebx,DWORD PTR [ebp-0x28]
64020ff7:	mov    edx,DWORD PTR [ebp-0x28]
64020ffa:	shr    DWORD PTR [ebp-0x24],1
64020ffd:	shl    ecx,0x1f
64021000:	shr    ebx,1
64021002:	or     ebx,ecx
64021004:	mov    ecx,DWORD PTR [ebp-0x2c]
64021007:	shl    edx,0x1f
6402100a:	shr    ecx,1
6402100c:	or     ecx,edx
6402100e:	dec    esi
6402100f:	mov    DWORD PTR [ebp-0x28],ebx
64021012:	mov    DWORD PTR [ebp-0x2c],ecx
64021015:	jne    0x64020fe8
64021017:	cmp    DWORD PTR [ebp-0x50],esi
6402101a:	je     0x64021021
6402101c:	or     WORD PTR [ebp-0x2c],0x1
64021021:	cmp    WORD PTR [ebp-0x2c],0x8000
64021027:	ja     0x6402103a
64021029:	mov    ecx,DWORD PTR [ebp-0x2c]
6402102c:	and    ecx,0x1ffff
64021032:	cmp    ecx,0x18000
64021038:	jne    0x6402106d
6402103a:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
6402103e:	jne    0x6402106a
64021040:	and    DWORD PTR [ebp-0x2a],0x0
64021044:	cmp    DWORD PTR [ebp-0x26],0xffffffff
64021048:	jne    0x64021065
6402104a:	and    DWORD PTR [ebp-0x26],0x0
6402104e:	cmp    WORD PTR [ebp-0x22],0xffff
64021054:	jne    0x6402105f
64021056:	mov    WORD PTR [ebp-0x22],0x8000
6402105c:	inc    edi
6402105d:	jmp    0x6402106d
6402105f:	inc    WORD PTR [ebp-0x22]
64021063:	jmp    0x6402106d
64021065:	inc    DWORD PTR [ebp-0x26]
64021068:	jmp    0x6402106d
6402106a:	inc    DWORD PTR [ebp-0x2a]
6402106d:	cmp    di,0x7fff
64021072:	mov    esi,DWORD PTR [ebp-0x4c]
64021075:	jae    0x64021093
64021077:	mov    cx,WORD PTR [ebp-0x2a]
6402107b:	mov    WORD PTR [ebp-0x3c],cx
6402107f:	mov    ecx,DWORD PTR [ebp-0x28]
64021082:	mov    DWORD PTR [ebp-0x3a],ecx
64021085:	mov    ecx,DWORD PTR [ebp-0x24]
64021088:	or     edi,eax
6402108a:	mov    DWORD PTR [ebp-0x36],ecx
6402108d:	mov    WORD PTR [ebp-0x32],di
64021091:	jmp    0x640210ad
64021093:	neg    ax
64021096:	sbb    eax,eax
64021098:	and    DWORD PTR [ebp-0x38],0x0
6402109c:	and    eax,0x80000000
640210a1:	add    eax,0x7fff8000
640210a6:	and    DWORD PTR [ebp-0x3c],0x0
640210aa:	mov    DWORD PTR [ebp-0x34],eax
640210ad:	cmp    DWORD PTR [ebp-0x54],0x0
640210b1:	jne    0x64020e24
640210b7:	mov    eax,DWORD PTR [ebp-0x34]
640210ba:	movzx  ecx,WORD PTR [ebp-0x3c]
640210be:	mov    esi,DWORD PTR [ebp-0x3a]
640210c1:	mov    edx,DWORD PTR [ebp-0x36]
640210c4:	shr    eax,0x10
640210c7:	jmp    0x640210f8
640210c9:	mov    DWORD PTR [ebp-0x6c],0x4
640210d0:	jmp    0x640210f0
640210d2:	xor    esi,esi
640210d4:	mov    eax,0x7fff
640210d9:	mov    edx,0x80000000
640210de:	xor    ecx,ecx
640210e0:	mov    DWORD PTR [ebp-0x6c],0x2
640210e7:	jmp    0x640210f8
640210e9:	mov    DWORD PTR [ebp-0x6c],0x1
640210f0:	xor    ecx,ecx
640210f2:	xor    eax,eax
640210f4:	xor    edx,edx
640210f6:	xor    esi,esi
640210f8:	mov    edi,DWORD PTR [ebp-0x7c]
640210fb:	or     eax,DWORD PTR [ebp-0x74]
640210fe:	mov    WORD PTR [edi],cx
64021101:	mov    WORD PTR [edi+0xa],ax
64021105:	mov    eax,DWORD PTR [ebp-0x6c]
64021108:	mov    DWORD PTR [edi+0x2],esi
6402110b:	mov    DWORD PTR [edi+0x6],edx
6402110e:	mov    ecx,DWORD PTR [ebp-0x4]
64021111:	pop    edi
64021112:	pop    esi
64021113:	xor    ecx,ebp
64021115:	pop    ebx
64021116:	call   0x64012abc
6402111b:	leave  
6402111c:	ret    
6402111d:	and    eax,0x7964020b
64021122:	or     eax,DWORD PTR [edx]
64021124:	fs iret 
64021126:	or     eax,DWORD PTR [edx]
64021128:	add    cl,BYTE PTR fs:[edx+eax*1]
6402112c:	fs inc edi
6402112e:	or     al,0x2
64021130:	fs jg  0x6402113f
64021133:	add    ah,BYTE PTR [ebx+edx*4+0xc]
64021137:	add    ah,BYTE PTR [esi+ebp*8+0xc]
6402113b:	add    ah,BYTE PTR [ecx+ebx*8+0xc]
6402113f:	add    ah,BYTE PTR [eax+ebx*2+0xd]
64021143:	add    ah,BYTE PTR [ebp+ecx*2+0xd]
64021147:	add    ah,BYTE PTR [esp+edi*8+0xc]
6402114b:	add    ah,BYTE PTR [ebp+edx*2-0x75]
6402114f:	in     al,dx
64021150:	sub    esp,0x74
64021153:	mov    eax,ds:0x6402d09c
64021158:	xor    eax,ebp
6402115a:	mov    DWORD PTR [ebp-0x4],eax
6402115d:	push   ebx
6402115e:	mov    ebx,DWORD PTR [ebp+0x1c]
64021161:	push   esi
64021162:	push   edi
64021163:	lea    esi,[ebp+0x8]
64021166:	lea    edi,[ebp-0x10]
64021169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402116a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402116b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6402116d:	mov    edx,DWORD PTR [ebp-0x8]
64021170:	mov    ecx,edx
64021172:	mov    eax,0x8000
64021177:	and    ecx,eax
64021179:	and    edx,0x7fff
6402117f:	test   cx,cx
64021182:	mov    DWORD PTR [ebp-0x60],ebx
64021185:	mov    BYTE PTR [ebp-0x30],0xcc
64021189:	mov    BYTE PTR [ebp-0x2f],0xcc
6402118d:	mov    BYTE PTR [ebp-0x2e],0xcc
64021191:	mov    BYTE PTR [ebp-0x2d],0xcc
64021195:	mov    BYTE PTR [ebp-0x2c],0xcc
64021199:	mov    BYTE PTR [ebp-0x2b],0xcc
6402119d:	mov    BYTE PTR [ebp-0x2a],0xcc
640211a1:	mov    BYTE PTR [ebp-0x29],0xcc
640211a5:	mov    BYTE PTR [ebp-0x28],0xcc
640211a9:	mov    BYTE PTR [ebp-0x27],0xcc
640211ad:	mov    BYTE PTR [ebp-0x26],0xfb
640211b1:	mov    BYTE PTR [ebp-0x25],0x3f
640211b5:	mov    DWORD PTR [ebp-0x74],0x1
640211bc:	mov    DWORD PTR [ebp-0x6c],ecx
640211bf:	je     0x640211c7
640211c1:	mov    BYTE PTR [ebx+0x2],0x2d
640211c5:	jmp    0x640211cb
640211c7:	mov    BYTE PTR [ebx+0x2],0x20
640211cb:	test   dx,dx
640211ce:	mov    esi,DWORD PTR [ebp-0xc]
640211d1:	mov    edi,DWORD PTR [ebp-0x10]
640211d4:	jne    0x64021204
640211d6:	test   esi,esi
640211d8:	jne    0x64021204
640211da:	test   edi,edi
640211dc:	jne    0x64021204
640211de:	and    WORD PTR [ebx],di
640211e1:	cmp    cx,ax
640211e4:	setne  al
640211e7:	dec    al
640211e9:	and    al,0xd
640211eb:	add    al,0x20
640211ed:	mov    BYTE PTR [ebx+0x2],al
640211f0:	mov    BYTE PTR [ebx+0x3],0x1
640211f4:	mov    BYTE PTR [ebx+0x4],0x30
640211f8:	mov    BYTE PTR [ebx+0x5],0x0
640211fc:	xor    eax,eax
640211fe:	inc    eax
640211ff:	jmp    0x640219cb
64021204:	cmp    dx,0x7fff
64021209:	jne    0x640212ad
6402120f:	mov    eax,0x80000000
64021214:	cmp    esi,eax
64021216:	mov    WORD PTR [ebx],0x1
6402121b:	jne    0x64021221
6402121d:	test   edi,edi
6402121f:	je     0x64021230
64021221:	test   esi,0x40000000
64021227:	jne    0x64021230
64021229:	push   0x64027660
6402122e:	jmp    0x64021281
64021230:	test   cx,cx
64021233:	je     0x64021248
64021235:	cmp    esi,0xc0000000
6402123b:	jne    0x64021248
6402123d:	test   edi,edi
6402123f:	jne    0x6402127c
64021241:	push   0x64027658
64021246:	jmp    0x64021255
64021248:	cmp    esi,eax
6402124a:	jne    0x6402127c
6402124c:	test   edi,edi
6402124e:	jne    0x6402127c
64021250:	push   0x64027650
64021255:	lea    eax,[ebx+0x4]
64021258:	push   0x16
6402125a:	push   eax
6402125b:	call   0x64014478
64021260:	add    esp,0xc
64021263:	xor    esi,esi
64021265:	test   eax,eax
64021267:	je     0x64021276
64021269:	push   esi
6402126a:	push   esi
6402126b:	push   esi
6402126c:	push   esi
6402126d:	push   esi
6402126e:	call   0x640124f8
64021273:	add    esp,0x14
64021276:	mov    BYTE PTR [ebx+0x3],0x5
6402127a:	jmp    0x640212a6
6402127c:	push   0x64027648
64021281:	lea    eax,[ebx+0x4]
64021284:	push   0x16
64021286:	push   eax
64021287:	call   0x64014478
6402128c:	add    esp,0xc
6402128f:	xor    esi,esi
64021291:	test   eax,eax
64021293:	je     0x640212a2
64021295:	push   esi
64021296:	push   esi
64021297:	push   esi
64021298:	push   esi
64021299:	push   esi
6402129a:	call   0x640124f8
6402129f:	add    esp,0x14
640212a2:	mov    BYTE PTR [ebx+0x3],0x6
640212a6:	xor    eax,eax
640212a8:	jmp    0x640219cb
640212ad:	movzx  ecx,dx
640212b0:	mov    ebx,ecx
640212b2:	imul   ecx,ecx,0x4d10
640212b8:	shr    ebx,0x8
640212bb:	mov    eax,esi
640212bd:	shr    eax,0x18
640212c0:	lea    eax,[ebx+eax*2]
640212c3:	imul   eax,eax,0x4d
640212c6:	lea    eax,[eax+ecx*1-0x134312f4]
640212cd:	sar    eax,0x10
640212d0:	movzx  ecx,ax
640212d3:	movsx  ebx,cx
640212d6:	mov    DWORD PTR [ebp-0x4c],ecx
640212d9:	xor    eax,eax
640212db:	mov    ecx,0x6402e0a0
640212e0:	neg    ebx
640212e2:	sub    ecx,0x60
640212e5:	cmp    ebx,eax
640212e7:	mov    WORD PTR [ebp-0x16],dx
640212eb:	mov    DWORD PTR [ebp-0x1a],esi
640212ee:	mov    DWORD PTR [ebp-0x1e],edi
640212f1:	mov    WORD PTR [ebp-0x20],ax
640212f5:	mov    DWORD PTR [ebp-0x68],ecx
640212f8:	je     0x640215ac
640212fe:	jge    0x6402130d
64021300:	mov    ecx,0x6402e200
64021305:	neg    ebx
64021307:	sub    ecx,0x60
6402130a:	mov    DWORD PTR [ebp-0x68],ecx
6402130d:	cmp    ebx,eax
6402130f:	je     0x640215ac
64021315:	add    DWORD PTR [ebp-0x68],0x54
64021319:	mov    ecx,ebx
6402131b:	and    ecx,0x7
6402131e:	sar    ebx,0x3
64021321:	test   ecx,ecx
64021323:	je     0x640215a2
64021329:	imul   ecx,ecx,0xc
6402132c:	add    ecx,DWORD PTR [ebp-0x68]
6402132f:	cmp    WORD PTR [ecx],0x8000
64021334:	mov    DWORD PTR [ebp-0x64],ecx
64021337:	jb     0x6402134c
64021339:	mov    esi,ecx
6402133b:	lea    edi,[ebp-0x3c]
6402133e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402133f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021340:	lea    eax,[ebp-0x3c]
64021343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021344:	dec    DWORD PTR [ebp-0x3a]
64021347:	mov    DWORD PTR [ebp-0x64],eax
6402134a:	mov    ecx,eax
6402134c:	movzx  edi,WORD PTR [ecx+0xa]
64021350:	mov    edx,DWORD PTR [ebp-0x16]
64021353:	xor    eax,eax
64021355:	mov    ecx,edi
64021357:	mov    esi,0x7fff
6402135c:	xor    ecx,edx
6402135e:	and    edx,esi
64021360:	and    edi,esi
64021362:	mov    DWORD PTR [ebp-0x48],eax
64021365:	mov    DWORD PTR [ebp-0x10],eax
64021368:	mov    DWORD PTR [ebp-0xc],eax
6402136b:	mov    DWORD PTR [ebp-0x8],eax
6402136e:	and    ecx,0x8000
64021374:	cmp    dx,si
64021377:	lea    eax,[edi+edx*1]
6402137a:	movzx  eax,ax
6402137d:	jae    0x64021586
64021383:	cmp    di,si
64021386:	jae    0x64021586
6402138c:	cmp    ax,0xbffd
64021390:	ja     0x64021586
64021396:	cmp    ax,0x3fbf
6402139a:	ja     0x640213ac
6402139c:	xor    eax,eax
6402139e:	mov    DWORD PTR [ebp-0x18],eax
640213a1:	mov    DWORD PTR [ebp-0x1c],eax
640213a4:	mov    DWORD PTR [ebp-0x20],eax
640213a7:	jmp    0x640215a2
640213ac:	xor    esi,esi
640213ae:	cmp    dx,si
640213b1:	jne    0x640213d0
640213b3:	inc    eax
640213b4:	test   DWORD PTR [ebp-0x18],0x7fffffff
640213bb:	jne    0x640213d0
640213bd:	cmp    DWORD PTR [ebp-0x1c],esi
640213c0:	jne    0x640213d0
640213c2:	cmp    DWORD PTR [ebp-0x20],esi
640213c5:	jne    0x640213d0
640213c7:	mov    WORD PTR [ebp-0x16],si
640213cb:	jmp    0x640215a2
640213d0:	cmp    di,si
640213d3:	jne    0x640213f9
640213d5:	mov    edx,DWORD PTR [ebp-0x64]
640213d8:	inc    eax
640213d9:	test   DWORD PTR [edx+0x8],0x7fffffff
640213e0:	jne    0x640213f9
640213e2:	cmp    DWORD PTR [edx+0x4],esi
640213e5:	jne    0x640213f9
640213e7:	cmp    DWORD PTR [edx],esi
640213e9:	jne    0x640213f9
640213eb:	mov    DWORD PTR [ebp-0x18],esi
640213ee:	mov    DWORD PTR [ebp-0x1c],esi
640213f1:	mov    DWORD PTR [ebp-0x20],esi
640213f4:	jmp    0x640215a2
640213f9:	lea    edi,[ebp-0xc]
640213fc:	mov    DWORD PTR [ebp-0x5c],esi
640213ff:	mov    DWORD PTR [ebp-0x44],edi
64021402:	mov    DWORD PTR [ebp-0x40],0x5
64021409:	mov    edx,DWORD PTR [ebp-0x5c]
6402140c:	mov    esi,DWORD PTR [ebp-0x40]
6402140f:	add    edx,edx
64021411:	test   esi,esi
64021413:	mov    DWORD PTR [ebp-0x50],esi
64021416:	jle    0x64021470
64021418:	lea    edx,[ebp+edx*1-0x20]
6402141c:	mov    DWORD PTR [ebp-0x58],edx
6402141f:	mov    edx,DWORD PTR [ebp-0x64]
64021422:	add    edx,0x8
64021425:	mov    DWORD PTR [ebp-0x54],edx
64021428:	mov    edx,DWORD PTR [ebp-0x58]
6402142b:	mov    esi,DWORD PTR [ebp-0x54]
6402142e:	movzx  esi,WORD PTR [esi]
64021431:	movzx  edx,WORD PTR [edx]
64021434:	mov    edi,DWORD PTR [edi-0x4]
64021437:	imul   edx,esi
6402143a:	and    DWORD PTR [ebp-0x70],0x0
6402143e:	lea    esi,[edi+edx*1]
64021441:	cmp    esi,edi
64021443:	jb     0x64021449
64021445:	cmp    esi,edx
64021447:	jae    0x64021450
64021449:	mov    DWORD PTR [ebp-0x70],0x1
64021450:	cmp    DWORD PTR [ebp-0x70],0x0
64021454:	mov    edi,DWORD PTR [ebp-0x44]
64021457:	mov    DWORD PTR [edi-0x4],esi
6402145a:	je     0x6402145f
6402145c:	inc    WORD PTR [edi]
6402145f:	add    DWORD PTR [ebp-0x58],0x2
64021463:	sub    DWORD PTR [ebp-0x54],0x2
64021467:	dec    DWORD PTR [ebp-0x50]
6402146a:	cmp    DWORD PTR [ebp-0x50],0x0
6402146e:	jg     0x64021428
64021470:	inc    edi
64021471:	inc    edi
64021472:	inc    DWORD PTR [ebp-0x5c]
64021475:	dec    DWORD PTR [ebp-0x40]
64021478:	cmp    DWORD PTR [ebp-0x40],0x0
6402147c:	mov    DWORD PTR [ebp-0x44],edi
6402147f:	jg     0x64021409
64021481:	add    eax,0xc002
64021486:	test   ax,ax
64021489:	jle    0x640214c6
6402148b:	test   DWORD PTR [ebp-0x8],0x80000000
64021492:	jne    0x640214c1
64021494:	mov    edx,DWORD PTR [ebp-0x10]
64021497:	mov    edi,DWORD PTR [ebp-0xc]
6402149a:	mov    esi,DWORD PTR [ebp-0xc]
6402149d:	shl    DWORD PTR [ebp-0x10],1
640214a0:	shr    edx,0x1f
640214a3:	add    edi,edi
640214a5:	or     edi,edx
640214a7:	mov    edx,DWORD PTR [ebp-0x8]
640214aa:	shr    esi,0x1f
640214ad:	add    edx,edx
640214af:	or     edx,esi
640214b1:	add    eax,0xffff
640214b6:	test   ax,ax
640214b9:	mov    DWORD PTR [ebp-0xc],edi
640214bc:	mov    DWORD PTR [ebp-0x8],edx
640214bf:	jg     0x6402148b
640214c1:	test   ax,ax
640214c4:	jg     0x64021518
640214c6:	add    eax,0xffff
640214cb:	test   ax,ax
640214ce:	jge    0x64021518
640214d0:	mov    edx,eax
640214d2:	neg    edx
640214d4:	movzx  edx,dx
640214d7:	mov    DWORD PTR [ebp-0x44],edx
640214da:	add    eax,edx
640214dc:	test   BYTE PTR [ebp-0x10],0x1
640214e0:	je     0x640214e5
640214e2:	inc    DWORD PTR [ebp-0x48]
640214e5:	mov    edx,DWORD PTR [ebp-0x8]
640214e8:	mov    edi,DWORD PTR [ebp-0xc]
640214eb:	mov    esi,DWORD PTR [ebp-0xc]
640214ee:	shr    DWORD PTR [ebp-0x8],1
640214f1:	shl    edx,0x1f
640214f4:	shr    edi,1
640214f6:	or     edi,edx
640214f8:	mov    edx,DWORD PTR [ebp-0x10]
640214fb:	shl    esi,0x1f
640214fe:	shr    edx,1
64021500:	or     edx,esi
64021502:	dec    DWORD PTR [ebp-0x44]
64021505:	mov    DWORD PTR [ebp-0xc],edi
64021508:	mov    DWORD PTR [ebp-0x10],edx
6402150b:	jne    0x640214dc
6402150d:	cmp    DWORD PTR [ebp-0x48],0x0
64021511:	je     0x64021518
64021513:	or     WORD PTR [ebp-0x10],0x1
64021518:	cmp    WORD PTR [ebp-0x10],0x8000
6402151e:	ja     0x64021531
64021520:	mov    edx,DWORD PTR [ebp-0x10]
64021523:	and    edx,0x1ffff
64021529:	cmp    edx,0x18000
6402152f:	jne    0x64021564
64021531:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64021535:	jne    0x64021561
64021537:	and    DWORD PTR [ebp-0xe],0x0
6402153b:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6402153f:	jne    0x6402155c
64021541:	and    DWORD PTR [ebp-0xa],0x0
64021545:	cmp    WORD PTR [ebp-0x6],0xffff
6402154b:	jne    0x64021556
6402154d:	mov    WORD PTR [ebp-0x6],0x8000
64021553:	inc    eax
64021554:	jmp    0x64021564
64021556:	inc    WORD PTR [ebp-0x6]
6402155a:	jmp    0x64021564
6402155c:	inc    DWORD PTR [ebp-0xa]
6402155f:	jmp    0x64021564
64021561:	inc    DWORD PTR [ebp-0xe]
64021564:	cmp    ax,0x7fff
64021568:	jae    0x64021586
6402156a:	mov    dx,WORD PTR [ebp-0xe]
6402156e:	mov    WORD PTR [ebp-0x20],dx
64021572:	mov    edx,DWORD PTR [ebp-0xc]
64021575:	mov    DWORD PTR [ebp-0x1e],edx
64021578:	mov    edx,DWORD PTR [ebp-0x8]
6402157b:	or     eax,ecx
6402157d:	mov    DWORD PTR [ebp-0x1a],edx
64021580:	mov    WORD PTR [ebp-0x16],ax
64021584:	jmp    0x640215a2
64021586:	neg    cx
64021589:	sbb    ecx,ecx
6402158b:	and    DWORD PTR [ebp-0x1c],0x0
6402158f:	and    ecx,0x80000000
64021595:	add    ecx,0x7fff8000
6402159b:	and    DWORD PTR [ebp-0x20],0x0
6402159f:	mov    DWORD PTR [ebp-0x18],ecx
640215a2:	test   ebx,ebx
640215a4:	jne    0x64021315
640215aa:	xor    eax,eax
640215ac:	mov    ecx,DWORD PTR [ebp-0x18]
640215af:	shr    ecx,0x10
640215b2:	cmp    cx,0x3fff
640215b7:	mov    ebx,0x7fff
640215bc:	jb     0x6402180a
640215c2:	mov    esi,DWORD PTR [ebp-0x26]
640215c5:	inc    DWORD PTR [ebp-0x4c]
640215c8:	movzx  edx,cx
640215cb:	mov    ecx,esi
640215cd:	xor    ecx,edx
640215cf:	and    edx,ebx
640215d1:	and    esi,ebx
640215d3:	and    ecx,0x8000
640215d9:	cmp    dx,bx
640215dc:	lea    edi,[esi+edx*1]
640215df:	mov    DWORD PTR [ebp-0x58],eax
640215e2:	mov    DWORD PTR [ebp-0x10],eax
640215e5:	mov    DWORD PTR [ebp-0xc],eax
640215e8:	mov    DWORD PTR [ebp-0x8],eax
640215eb:	movzx  edi,di
640215ee:	jae    0x640217f0
640215f4:	cmp    si,bx
640215f7:	jae    0x640217f0
640215fd:	cmp    di,0xbffd
64021602:	ja     0x640217f0
64021608:	cmp    di,0x3fbf
6402160d:	ja     0x64021617
6402160f:	mov    DWORD PTR [ebp-0x18],eax
64021612:	jmp    0x64021804
64021617:	cmp    dx,ax
6402161a:	jne    0x64021639
6402161c:	inc    edi
6402161d:	test   DWORD PTR [ebp-0x18],0x7fffffff
64021624:	jne    0x64021639
64021626:	cmp    DWORD PTR [ebp-0x1c],eax
64021629:	jne    0x64021639
6402162b:	cmp    DWORD PTR [ebp-0x20],eax
6402162e:	jne    0x64021639
64021630:	mov    WORD PTR [ebp-0x16],ax
64021634:	jmp    0x6402180a
64021639:	cmp    si,ax
6402163c:	jne    0x64021652
6402163e:	inc    edi
6402163f:	test   DWORD PTR [ebp-0x28],0x7fffffff
64021646:	jne    0x64021652
64021648:	cmp    DWORD PTR [ebp-0x2c],eax
6402164b:	jne    0x64021652
6402164d:	cmp    DWORD PTR [ebp-0x30],eax
64021650:	je     0x6402160f
64021652:	and    DWORD PTR [ebp-0x54],0x0
64021656:	lea    eax,[ebp-0xc]
64021659:	mov    DWORD PTR [ebp-0x40],0x5
64021660:	mov    edx,DWORD PTR [ebp-0x54]
64021663:	mov    esi,DWORD PTR [ebp-0x40]
64021666:	add    edx,edx
64021668:	test   esi,esi
6402166a:	mov    DWORD PTR [ebp-0x50],esi
6402166d:	jle    0x640216c1
6402166f:	lea    esi,[ebp-0x28]
64021672:	lea    edx,[ebp+edx*1-0x20]
64021676:	mov    DWORD PTR [ebp-0x5c],esi
64021679:	mov    DWORD PTR [ebp-0x48],edx
6402167c:	mov    edx,DWORD PTR [ebp-0x5c]
6402167f:	mov    esi,DWORD PTR [ebp-0x48]
64021682:	movzx  esi,WORD PTR [esi]
64021685:	movzx  edx,WORD PTR [edx]
64021688:	and    DWORD PTR [ebp-0x44],0x0
6402168c:	imul   edx,esi
6402168f:	mov    esi,DWORD PTR [eax-0x4]
64021692:	lea    ebx,[esi+edx*1]
64021695:	cmp    ebx,esi
64021697:	jb     0x6402169d
64021699:	cmp    ebx,edx
6402169b:	jae    0x640216a4
6402169d:	mov    DWORD PTR [ebp-0x44],0x1
640216a4:	cmp    DWORD PTR [ebp-0x44],0x0
640216a8:	mov    DWORD PTR [eax-0x4],ebx
640216ab:	je     0x640216b0
640216ad:	inc    WORD PTR [eax]
640216b0:	add    DWORD PTR [ebp-0x48],0x2
640216b4:	sub    DWORD PTR [ebp-0x5c],0x2
640216b8:	dec    DWORD PTR [ebp-0x50]
640216bb:	cmp    DWORD PTR [ebp-0x50],0x0
640216bf:	jg     0x6402167c
640216c1:	inc    eax
640216c2:	inc    eax
640216c3:	inc    DWORD PTR [ebp-0x54]
640216c6:	dec    DWORD PTR [ebp-0x40]
640216c9:	cmp    DWORD PTR [ebp-0x40],0x0
640216cd:	jg     0x64021660
640216cf:	add    edi,0xc002
640216d5:	xor    eax,eax
640216d7:	cmp    di,ax
640216da:	jle    0x64021718
640216dc:	test   DWORD PTR [ebp-0x8],0x80000000
640216e3:	jne    0x64021713
640216e5:	mov    edx,DWORD PTR [ebp-0x10]
640216e8:	mov    ebx,DWORD PTR [ebp-0xc]
640216eb:	mov    esi,DWORD PTR [ebp-0xc]
640216ee:	shl    DWORD PTR [ebp-0x10],1
640216f1:	shr    edx,0x1f
640216f4:	add    ebx,ebx
640216f6:	or     ebx,edx
640216f8:	mov    edx,DWORD PTR [ebp-0x8]
640216fb:	shr    esi,0x1f
640216fe:	add    edx,edx
64021700:	or     edx,esi
64021702:	add    edi,0xffff
64021708:	cmp    di,ax
6402170b:	mov    DWORD PTR [ebp-0xc],ebx
6402170e:	mov    DWORD PTR [ebp-0x8],edx
64021711:	jg     0x640216dc
64021713:	cmp    di,ax
64021716:	jg     0x64021765
64021718:	add    edi,0xffff
6402171e:	cmp    di,ax
64021721:	jge    0x64021765
64021723:	mov    eax,edi
64021725:	neg    eax
64021727:	movzx  eax,ax
6402172a:	add    edi,eax
6402172c:	test   BYTE PTR [ebp-0x10],0x1
64021730:	je     0x64021735
64021732:	inc    DWORD PTR [ebp-0x58]
64021735:	mov    edx,DWORD PTR [ebp-0x8]
64021738:	mov    ebx,DWORD PTR [ebp-0xc]
6402173b:	mov    esi,DWORD PTR [ebp-0xc]
6402173e:	shr    DWORD PTR [ebp-0x8],1
64021741:	shl    edx,0x1f
64021744:	shr    ebx,1
64021746:	or     ebx,edx
64021748:	mov    edx,DWORD PTR [ebp-0x10]
6402174b:	shl    esi,0x1f
6402174e:	shr    edx,1
64021750:	or     edx,esi
64021752:	dec    eax
64021753:	mov    DWORD PTR [ebp-0xc],ebx
64021756:	mov    DWORD PTR [ebp-0x10],edx
64021759:	jne    0x6402172c
6402175b:	cmp    DWORD PTR [ebp-0x58],eax
6402175e:	je     0x64021765
64021760:	or     WORD PTR [ebp-0x10],0x1
64021765:	cmp    WORD PTR [ebp-0x10],0x8000
6402176b:	ja     0x6402177e
6402176d:	mov    edx,DWORD PTR [ebp-0x10]
64021770:	and    edx,0x1ffff
64021776:	cmp    edx,0x18000
6402177c:	jne    0x640217af
6402177e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64021782:	jne    0x640217ac
64021784:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64021788:	mov    DWORD PTR [ebp-0xe],eax
6402178b:	jne    0x640217a7
6402178d:	cmp    WORD PTR [ebp-0x6],0xffff
64021793:	mov    DWORD PTR [ebp-0xa],eax
64021796:	jne    0x640217a1
64021798:	mov    WORD PTR [ebp-0x6],0x8000
6402179e:	inc    edi
6402179f:	jmp    0x640217af
640217a1:	inc    WORD PTR [ebp-0x6]
640217a5:	jmp    0x640217af
640217a7:	inc    DWORD PTR [ebp-0xa]
640217aa:	jmp    0x640217af
640217ac:	inc    DWORD PTR [ebp-0xe]
640217af:	cmp    di,0x7fff
640217b4:	jb     0x640217d4
640217b6:	neg    cx
640217b9:	mov    DWORD PTR [ebp-0x1c],eax
640217bc:	mov    DWORD PTR [ebp-0x20],eax
640217bf:	sbb    ecx,ecx
640217c1:	and    ecx,0x80000000
640217c7:	add    ecx,0x7fff8000
640217cd:	mov    DWORD PTR [ebp-0x18],ecx
640217d0:	xor    eax,eax
640217d2:	jmp    0x6402180a
640217d4:	mov    ax,WORD PTR [ebp-0xe]
640217d8:	mov    WORD PTR [ebp-0x20],ax
640217dc:	mov    eax,DWORD PTR [ebp-0xc]
640217df:	mov    DWORD PTR [ebp-0x1e],eax
640217e2:	mov    eax,DWORD PTR [ebp-0x8]
640217e5:	or     edi,ecx
640217e7:	mov    DWORD PTR [ebp-0x1a],eax
640217ea:	mov    WORD PTR [ebp-0x16],di
640217ee:	jmp    0x640217d0
640217f0:	neg    cx
640217f3:	sbb    ecx,ecx
640217f5:	and    ecx,0x80000000
640217fb:	add    ecx,0x7fff8000
64021801:	mov    DWORD PTR [ebp-0x18],ecx
64021804:	mov    DWORD PTR [ebp-0x1c],eax
64021807:	mov    DWORD PTR [ebp-0x20],eax
6402180a:	test   BYTE PTR [ebp+0x18],0x1
6402180e:	mov    edx,DWORD PTR [ebp-0x60]
64021811:	mov    ecx,DWORD PTR [ebp-0x4c]
64021814:	mov    WORD PTR [edx],cx
64021817:	je     0x6402184b
64021819:	movsx  ecx,cx
6402181c:	add    DWORD PTR [ebp+0x14],ecx
6402181f:	cmp    DWORD PTR [ebp+0x14],eax
64021822:	jg     0x6402184b
64021824:	and    WORD PTR [edx],0x0
64021828:	cmp    WORD PTR [ebp-0x6c],0x8000
6402182e:	mov    BYTE PTR [edx+0x3],0x1
64021832:	setne  al
64021835:	dec    al
64021837:	and    al,0xd
64021839:	add    al,0x20
6402183b:	mov    BYTE PTR [edx+0x2],al
6402183e:	mov    BYTE PTR [edx+0x4],0x30
64021842:	mov    BYTE PTR [edx+0x5],0x0
64021846:	jmp    0x640211fc
6402184b:	push   0x15
6402184d:	pop    ecx
6402184e:	cmp    DWORD PTR [ebp+0x14],ecx
64021851:	jle    0x64021856
64021853:	mov    DWORD PTR [ebp+0x14],ecx
64021856:	mov    esi,DWORD PTR [ebp-0x18]
64021859:	shr    esi,0x10
6402185c:	push   0x8
6402185e:	sub    esi,0x3ffe
64021864:	mov    WORD PTR [ebp-0x16],ax
64021868:	pop    ebx
64021869:	mov    eax,DWORD PTR [ebp-0x20]
6402186c:	mov    edi,DWORD PTR [ebp-0x1c]
6402186f:	mov    ecx,DWORD PTR [ebp-0x1c]
64021872:	shl    DWORD PTR [ebp-0x20],1
64021875:	shr    eax,0x1f
64021878:	add    edi,edi
6402187a:	or     edi,eax
6402187c:	mov    eax,DWORD PTR [ebp-0x18]
6402187f:	shr    ecx,0x1f
64021882:	add    eax,eax
64021884:	or     eax,ecx
64021886:	dec    ebx
64021887:	mov    DWORD PTR [ebp-0x1c],edi
6402188a:	mov    DWORD PTR [ebp-0x18],eax
6402188d:	jne    0x64021869
6402188f:	test   esi,esi
64021891:	jge    0x640218c5
64021893:	neg    esi
64021895:	and    esi,0xff
6402189b:	jle    0x640218c5
6402189d:	mov    eax,DWORD PTR [ebp-0x18]
640218a0:	mov    edi,DWORD PTR [ebp-0x1c]
640218a3:	mov    ecx,DWORD PTR [ebp-0x1c]
640218a6:	shr    DWORD PTR [ebp-0x18],1
640218a9:	shl    eax,0x1f
640218ac:	shr    edi,1
640218ae:	or     edi,eax
640218b0:	mov    eax,DWORD PTR [ebp-0x20]
640218b3:	shl    ecx,0x1f
640218b6:	shr    eax,1
640218b8:	or     eax,ecx
640218ba:	dec    esi
640218bb:	test   esi,esi
640218bd:	mov    DWORD PTR [ebp-0x1c],edi
640218c0:	mov    DWORD PTR [ebp-0x20],eax
640218c3:	jg     0x6402189d
640218c5:	mov    eax,DWORD PTR [ebp+0x14]
640218c8:	inc    eax
640218c9:	test   eax,eax
640218cb:	lea    ebx,[edx+0x4]
640218ce:	mov    DWORD PTR [ebp-0x40],ebx
640218d1:	mov    DWORD PTR [ebp-0x4c],eax
640218d4:	jle    0x6402198f
640218da:	mov    edx,DWORD PTR [ebp-0x20]
640218dd:	mov    eax,DWORD PTR [ebp-0x1c]
640218e0:	lea    esi,[ebp-0x20]
640218e3:	lea    edi,[ebp-0x3c]
640218e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640218e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640218e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640218e9:	shl    DWORD PTR [ebp-0x20],1
640218ec:	mov    edi,DWORD PTR [ebp-0x20]
640218ef:	shl    DWORD PTR [ebp-0x20],1
640218f2:	shr    edx,0x1f
640218f5:	lea    ecx,[eax+eax*1]
640218f8:	or     ecx,edx
640218fa:	mov    edx,DWORD PTR [ebp-0x18]
640218fd:	mov    esi,eax
640218ff:	shr    esi,0x1f
64021902:	add    edx,edx
64021904:	or     edx,esi
64021906:	mov    eax,ecx
64021908:	lea    esi,[ecx+ecx*1]
6402190b:	shr    eax,0x1f
6402190e:	lea    ecx,[edx+edx*1]
64021911:	mov    edx,DWORD PTR [ebp-0x3c]
64021914:	shr    edi,0x1f
64021917:	or     ecx,eax
64021919:	mov    eax,DWORD PTR [ebp-0x20]
6402191c:	or     esi,edi
6402191e:	lea    edi,[edx+eax*1]
64021921:	cmp    edi,eax
64021923:	jb     0x64021929
64021925:	cmp    edi,edx
64021927:	jae    0x64021941
64021929:	lea    eax,[esi+0x1]
6402192c:	xor    edx,edx
6402192e:	cmp    eax,esi
64021930:	jb     0x64021937
64021932:	cmp    eax,0x1
64021935:	jae    0x6402193a
64021937:	xor    edx,edx
64021939:	inc    edx
6402193a:	test   edx,edx
6402193c:	mov    esi,eax
6402193e:	je     0x64021941
64021940:	inc    ecx
64021941:	mov    eax,DWORD PTR [ebp-0x38]
64021944:	lea    edx,[eax+esi*1]
64021947:	cmp    edx,esi
64021949:	mov    DWORD PTR [ebp-0x44],edx
6402194c:	jb     0x64021952
6402194e:	cmp    edx,eax
64021950:	jae    0x64021953
64021952:	inc    ecx
64021953:	add    ecx,DWORD PTR [ebp-0x34]
64021956:	shr    edx,0x1f
64021959:	add    ecx,ecx
6402195b:	or     ecx,edx
6402195d:	lea    esi,[edi+edi*1]
64021960:	mov    DWORD PTR [ebp-0x20],esi
64021963:	mov    esi,DWORD PTR [ebp-0x44]
64021966:	mov    DWORD PTR [ebp-0x18],ecx
64021969:	shr    ecx,0x18
6402196c:	add    esi,esi
6402196e:	add    cl,0x30
64021971:	mov    eax,edi
64021973:	shr    eax,0x1f
64021976:	or     esi,eax
64021978:	mov    BYTE PTR [ebx],cl
6402197a:	inc    ebx
6402197b:	dec    DWORD PTR [ebp-0x4c]
6402197e:	cmp    DWORD PTR [ebp-0x4c],0x0
64021982:	mov    DWORD PTR [ebp-0x1c],esi
64021985:	mov    BYTE PTR [ebp-0x15],0x0
64021989:	jg     0x640218da
6402198f:	dec    ebx
64021990:	mov    al,BYTE PTR [ebx]
64021992:	dec    ebx
64021993:	cmp    al,0x35
64021995:	jge    0x640219a5
64021997:	mov    ecx,DWORD PTR [ebp-0x40]
6402199a:	jmp    0x640219e0
6402199c:	cmp    BYTE PTR [ebx],0x39
6402199f:	jne    0x640219aa
640219a1:	mov    BYTE PTR [ebx],0x30
640219a4:	dec    ebx
640219a5:	cmp    ebx,DWORD PTR [ebp-0x40]
640219a8:	jae    0x6402199c
640219aa:	cmp    ebx,DWORD PTR [ebp-0x40]
640219ad:	mov    eax,DWORD PTR [ebp-0x60]
640219b0:	jae    0x640219b6
640219b2:	inc    ebx
640219b3:	inc    WORD PTR [eax]
640219b6:	inc    BYTE PTR [ebx]
640219b8:	sub    bl,al
640219ba:	sub    bl,0x3
640219bd:	movsx  ecx,bl
640219c0:	mov    BYTE PTR [eax+0x3],bl
640219c3:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
640219c8:	mov    eax,DWORD PTR [ebp-0x74]
640219cb:	mov    ecx,DWORD PTR [ebp-0x4]
640219ce:	pop    edi
640219cf:	pop    esi
640219d0:	xor    ecx,ebp
640219d2:	pop    ebx
640219d3:	call   0x64012abc
640219d8:	leave  
640219d9:	ret    
640219da:	cmp    BYTE PTR [ebx],0x30
640219dd:	jne    0x640219e4
640219df:	dec    ebx
640219e0:	cmp    ebx,ecx
640219e2:	jae    0x640219da
640219e4:	cmp    ebx,ecx
640219e6:	mov    eax,DWORD PTR [ebp-0x60]
640219e9:	jae    0x640219b8
640219eb:	and    WORD PTR [eax],0x0
640219ef:	cmp    WORD PTR [ebp-0x6c],0x8000
640219f5:	mov    BYTE PTR [eax+0x3],0x1
640219f9:	setne  dl
640219fc:	dec    dl
640219fe:	and    dl,0xd
64021a01:	add    dl,0x20
64021a04:	mov    BYTE PTR [eax+0x2],dl
64021a07:	mov    BYTE PTR [ecx],0x30
64021a0a:	mov    BYTE PTR [eax+0x5],0x0
64021a0e:	jmp    0x640211fc
64021a13:	xor    eax,eax
64021a15:	test   bl,0x10
64021a18:	je     0x64021a1b
64021a1a:	inc    eax
64021a1b:	test   bl,0x8
64021a1e:	je     0x64021a23
64021a20:	or     eax,0x4
64021a23:	test   bl,0x4
64021a26:	je     0x64021a2b
64021a28:	or     eax,0x8
64021a2b:	test   bl,0x2
64021a2e:	je     0x64021a33
64021a30:	or     eax,0x10
64021a33:	test   bl,0x1
64021a36:	je     0x64021a3b
64021a38:	or     eax,0x20
64021a3b:	test   ebx,0x80000
64021a41:	je     0x64021a46
64021a43:	or     eax,0x2
64021a46:	mov    ecx,ebx
64021a48:	mov    edx,0x300
64021a4d:	and    ecx,edx
64021a4f:	push   esi
64021a50:	mov    esi,0x200
64021a55:	je     0x64021a7a
64021a57:	cmp    ecx,0x100
64021a5d:	je     0x64021a75
64021a5f:	cmp    ecx,esi
64021a61:	je     0x64021a6e
64021a63:	cmp    ecx,edx
64021a65:	jne    0x64021a7a
64021a67:	or     eax,0xc00
64021a6c:	jmp    0x64021a7a
64021a6e:	or     eax,0x800
64021a73:	jmp    0x64021a7a
64021a75:	or     eax,0x400
64021a7a:	mov    ecx,ebx
64021a7c:	and    ecx,0x30000
64021a82:	je     0x64021a90
64021a84:	cmp    ecx,0x10000
64021a8a:	jne    0x64021a92
64021a8c:	or     eax,esi
64021a8e:	jmp    0x64021a92
64021a90:	or     eax,edx
64021a92:	test   ebx,0x40000
64021a98:	pop    esi
64021a99:	je     0x64021aa0
64021a9b:	or     eax,0x1000
64021aa0:	ret    
64021aa1:	xor    eax,eax
64021aa3:	test   dl,0x10
64021aa6:	je     0x64021aad
64021aa8:	mov    eax,0x80
64021aad:	test   dl,0x8
64021ab0:	push   ebx
64021ab1:	push   esi
64021ab2:	push   edi
64021ab3:	mov    ebx,0x200
64021ab8:	je     0x64021abc
64021aba:	or     eax,ebx
64021abc:	test   dl,0x4
64021abf:	je     0x64021ac6
64021ac1:	or     eax,0x400
64021ac6:	test   dl,0x2
64021ac9:	je     0x64021ad0
64021acb:	or     eax,0x800
64021ad0:	test   dl,0x1
64021ad3:	je     0x64021ada
64021ad5:	or     eax,0x1000
64021ada:	test   edx,0x80000
64021ae0:	mov    edi,0x100
64021ae5:	je     0x64021ae9
64021ae7:	or     eax,edi
64021ae9:	mov    ecx,edx
64021aeb:	mov    esi,0x300
64021af0:	and    ecx,esi
64021af2:	je     0x64021b13
64021af4:	cmp    ecx,edi
64021af6:	je     0x64021b0e
64021af8:	cmp    ecx,ebx
64021afa:	je     0x64021b07
64021afc:	cmp    ecx,esi
64021afe:	jne    0x64021b13
64021b00:	or     eax,0x6000
64021b05:	jmp    0x64021b13
64021b07:	or     eax,0x4000
64021b0c:	jmp    0x64021b13
64021b0e:	or     eax,0x2000
64021b13:	mov    ecx,0x3000000
64021b18:	pop    edi
64021b19:	and    edx,ecx
64021b1b:	cmp    edx,0x1000000
64021b21:	pop    esi
64021b22:	pop    ebx
64021b23:	je     0x64021b3b
64021b25:	cmp    edx,0x2000000
64021b2b:	je     0x64021b37
64021b2d:	cmp    edx,ecx
64021b2f:	jne    0x64021b40
64021b31:	or     eax,0x8000
64021b36:	ret    
64021b37:	or     eax,0x40
64021b3a:	ret    
64021b3b:	or     eax,0x8040
64021b40:	ret    
64021b41:	sub    esp,0x10
64021b44:	push   ebx
64021b45:	push   ebp
64021b46:	push   esi
64021b47:	push   edi
64021b48:	fstcw  WORD PTR [esp+0x14]
64021b4d:	mov    ebx,DWORD PTR [esp+0x14]
64021b51:	xor    edx,edx
64021b53:	test   bl,0x1
64021b56:	je     0x64021b5b
64021b58:	push   0x10
64021b5a:	pop    edx
64021b5b:	test   bl,0x4
64021b5e:	je     0x64021b63
64021b60:	or     edx,0x8
64021b63:	test   bl,0x8
64021b66:	je     0x64021b6b
64021b68:	or     edx,0x4
64021b6b:	test   bl,0x10
64021b6e:	je     0x64021b73
64021b70:	or     edx,0x2
64021b73:	test   bl,0x20
64021b76:	je     0x64021b7b
64021b78:	or     edx,0x1
64021b7b:	test   bl,0x2
64021b7e:	je     0x64021b86
64021b80:	or     edx,0x80000
64021b86:	movzx  ecx,bx
64021b89:	mov    eax,ecx
64021b8b:	mov    edi,0xc00
64021b90:	and    eax,edi
64021b92:	mov    ebp,0x300
64021b97:	mov    esi,0x200
64021b9c:	je     0x64021bbe
64021b9e:	cmp    eax,0x400
64021ba3:	je     0x64021bb8
64021ba5:	cmp    eax,0x800
64021baa:	je     0x64021bb4
64021bac:	cmp    eax,edi
64021bae:	jne    0x64021bbe
64021bb0:	or     edx,ebp
64021bb2:	jmp    0x64021bbe
64021bb4:	or     edx,esi
64021bb6:	jmp    0x64021bbe
64021bb8:	or     edx,0x100
64021bbe:	and    ecx,ebp
64021bc0:	je     0x64021bce
64021bc2:	cmp    ecx,esi
64021bc4:	jne    0x64021bd4
64021bc6:	or     edx,0x10000
64021bcc:	jmp    0x64021bd4
64021bce:	or     edx,0x20000
64021bd4:	test   bx,0x1000
64021bd9:	je     0x64021be1
64021bdb:	or     edx,0x40000
64021be1:	mov    esi,DWORD PTR [esp+0x28]
64021be5:	mov    ecx,DWORD PTR [esp+0x24]
64021be9:	mov    eax,esi
64021beb:	not    eax
64021bed:	and    eax,edx
64021bef:	and    ecx,esi
64021bf1:	or     eax,ecx
64021bf3:	cmp    eax,edx
64021bf5:	mov    DWORD PTR [esp+0x1c],eax
64021bf9:	je     0x64021ca9
64021bff:	mov    ebx,eax
64021c01:	call   0x64021a13
64021c06:	movzx  eax,ax
64021c09:	mov    DWORD PTR [esp+0x10],eax
64021c0d:	fldcw  WORD PTR [esp+0x10]
64021c11:	fstcw  WORD PTR [esp+0x10]
64021c16:	mov    ebx,DWORD PTR [esp+0x10]
64021c1a:	xor    edx,edx
64021c1c:	test   bl,0x1
64021c1f:	je     0x64021c24
64021c21:	push   0x10
64021c23:	pop    edx
64021c24:	test   bl,0x4
64021c27:	je     0x64021c2c
64021c29:	or     edx,0x8
64021c2c:	test   bl,0x8
64021c2f:	je     0x64021c34
64021c31:	or     edx,0x4
64021c34:	test   bl,0x10
64021c37:	je     0x64021c3c
64021c39:	or     edx,0x2
64021c3c:	test   bl,0x20
64021c3f:	je     0x64021c44
64021c41:	or     edx,0x1
64021c44:	test   bl,0x2
64021c47:	je     0x64021c4f
64021c49:	or     edx,0x80000
64021c4f:	movzx  ecx,bx
64021c52:	mov    eax,ecx
64021c54:	and    eax,edi
64021c56:	je     0x64021c7c
64021c58:	cmp    eax,0x400
64021c5d:	je     0x64021c76
64021c5f:	cmp    eax,0x800
64021c64:	je     0x64021c6e
64021c66:	cmp    eax,edi
64021c68:	jne    0x64021c7c
64021c6a:	or     edx,ebp
64021c6c:	jmp    0x64021c7c
64021c6e:	or     edx,0x200
64021c74:	jmp    0x64021c7c
64021c76:	or     edx,0x100
64021c7c:	and    ecx,ebp
64021c7e:	je     0x64021c90
64021c80:	cmp    ecx,0x200
64021c86:	jne    0x64021c96
64021c88:	or     edx,0x10000
64021c8e:	jmp    0x64021c96
64021c90:	or     edx,0x20000
64021c96:	test   bx,0x1000
64021c9b:	je     0x64021ca3
64021c9d:	or     edx,0x40000
64021ca3:	mov    eax,edx
64021ca5:	mov    DWORD PTR [esp+0x1c],edx
64021ca9:	cmp    DWORD PTR ds:0x64032604,0x0
64021cb0:	je     0x64021e3c
64021cb6:	and    esi,0x308031f
64021cbc:	mov    edi,esi
64021cbe:	stmxcsr DWORD PTR [esp+0x18]
64021cc3:	mov    eax,DWORD PTR [esp+0x18]
64021cc7:	xor    esi,esi
64021cc9:	test   al,al
64021ccb:	jns    0x64021cd0
64021ccd:	push   0x10
64021ccf:	pop    esi
64021cd0:	test   ax,0x200
64021cd4:	je     0x64021cd9
64021cd6:	or     esi,0x8
64021cd9:	test   ax,0x400
64021cdd:	je     0x64021ce2
64021cdf:	or     esi,0x4
64021ce2:	test   ax,0x800
64021ce6:	je     0x64021ceb
64021ce8:	or     esi,0x2
64021ceb:	test   ax,0x1000
64021cef:	je     0x64021cf4
64021cf1:	or     esi,0x1
64021cf4:	test   ax,0x100
64021cf8:	je     0x64021d00
64021cfa:	or     esi,0x80000
64021d00:	mov    ecx,eax
64021d02:	mov    ebp,0x6000
64021d07:	and    ecx,ebp
64021d09:	je     0x64021d35
64021d0b:	cmp    ecx,0x2000
64021d11:	je     0x64021d2f
64021d13:	cmp    ecx,0x4000
64021d19:	je     0x64021d27
64021d1b:	cmp    ecx,ebp
64021d1d:	jne    0x64021d35
64021d1f:	or     esi,0x300
64021d25:	jmp    0x64021d35
64021d27:	or     esi,0x200
64021d2d:	jmp    0x64021d35
64021d2f:	or     esi,0x100
64021d35:	mov    ebx,0x8040
64021d3a:	and    eax,ebx
64021d3c:	sub    eax,0x40
64021d3f:	je     0x64021d5d
64021d41:	sub    eax,0x7fc0
64021d46:	je     0x64021d55
64021d48:	sub    eax,0x40
64021d4b:	jne    0x64021d63
64021d4d:	or     esi,0x1000000
64021d53:	jmp    0x64021d63
64021d55:	or     esi,0x3000000
64021d5b:	jmp    0x64021d63
64021d5d:	or     esi,0x2000000
64021d63:	mov    edx,edi
64021d65:	and    edi,DWORD PTR [esp+0x24]
64021d69:	not    edx
64021d6b:	and    edx,esi
64021d6d:	or     edx,edi
64021d6f:	cmp    edx,esi
64021d71:	jne    0x64021d7a
64021d73:	mov    eax,esi
64021d75:	jmp    0x64021e25
64021d7a:	call   0x64021aa1
64021d7f:	push   eax
64021d80:	mov    DWORD PTR [esp+0x2c],eax
64021d84:	call   0x64022010
64021d89:	pop    ecx
64021d8a:	stmxcsr DWORD PTR [esp+0x28]
64021d8f:	mov    eax,DWORD PTR [esp+0x28]
64021d93:	xor    edx,edx
64021d95:	test   al,al
64021d97:	jns    0x64021d9c
64021d99:	push   0x10
64021d9b:	pop    edx
64021d9c:	mov    edi,0x200
64021da1:	test   edi,eax
64021da3:	je     0x64021da8
64021da5:	or     edx,0x8
64021da8:	test   ax,0x400
64021dac:	je     0x64021db1
64021dae:	or     edx,0x4
64021db1:	test   ax,0x800
64021db5:	je     0x64021dba
64021db7:	or     edx,0x2
64021dba:	test   ax,0x1000
64021dbe:	je     0x64021dc3
64021dc0:	or     edx,0x1
64021dc3:	mov    esi,0x100
64021dc8:	test   esi,eax
64021dca:	je     0x64021dd2
64021dcc:	or     edx,0x80000
64021dd2:	mov    ecx,eax
64021dd4:	and    ecx,ebp
64021dd6:	je     0x64021dfa
64021dd8:	cmp    ecx,0x2000
64021dde:	je     0x64021df8
64021de0:	cmp    ecx,0x4000
64021de6:	je     0x64021df4
64021de8:	cmp    ecx,ebp
64021dea:	jne    0x64021dfa
64021dec:	or     edx,0x300
64021df2:	jmp    0x64021dfa
64021df4:	or     edx,edi
64021df6:	jmp    0x64021dfa
64021df8:	or     edx,esi
64021dfa:	and    eax,ebx
64021dfc:	sub    eax,0x40
64021dff:	je     0x64021e1d
64021e01:	sub    eax,0x7fc0
64021e06:	je     0x64021e15
64021e08:	sub    eax,0x40
64021e0b:	jne    0x64021e23
64021e0d:	or     edx,0x1000000
64021e13:	jmp    0x64021e23
64021e15:	or     edx,0x3000000
64021e1b:	jmp    0x64021e23
64021e1d:	or     edx,0x2000000
64021e23:	mov    eax,edx
64021e25:	mov    ecx,DWORD PTR [esp+0x1c]
64021e29:	mov    edx,eax
64021e2b:	xor    edx,ecx
64021e2d:	or     eax,ecx
64021e2f:	test   edx,0x8031f
64021e35:	je     0x64021e3c
64021e37:	or     eax,0x80000000
64021e3c:	pop    edi
64021e3d:	pop    esi
64021e3e:	pop    ebp
64021e3f:	pop    ebx
64021e40:	add    esp,0x10
64021e43:	ret    
64021e44:	push   ebp
64021e45:	mov    ebp,esp
64021e47:	sub    esp,0x18
64021e4a:	mov    eax,ds:0x6402d09c
64021e4f:	xor    eax,ebp
64021e51:	mov    DWORD PTR [ebp-0x4],eax
64021e54:	mov    eax,DWORD PTR [ebp+0x10]
64021e57:	push   ebx
64021e58:	push   esi
64021e59:	xor    esi,esi
64021e5b:	cmp    DWORD PTR [ebp+0xc],esi
64021e5e:	push   edi
64021e5f:	mov    DWORD PTR [ebp-0x18],0x404e
64021e66:	mov    DWORD PTR [eax],esi
64021e68:	mov    DWORD PTR [eax+0x4],esi
64021e6b:	mov    DWORD PTR [eax+0x8],esi
64021e6e:	jbe    0x64021fba
64021e74:	mov    edx,DWORD PTR [eax]
64021e76:	mov    ebx,DWORD PTR [eax+0x4]
64021e79:	mov    esi,eax
64021e7b:	lea    edi,[ebp-0x10]
64021e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021e81:	mov    ecx,edx
64021e83:	shr    ecx,0x1f
64021e86:	lea    edi,[edx+edx*1]
64021e89:	lea    edx,[ebx+ebx*1]
64021e8c:	or     edx,ecx
64021e8e:	mov    ecx,DWORD PTR [eax+0x8]
64021e91:	mov    esi,ebx
64021e93:	shr    esi,0x1f
64021e96:	add    ecx,ecx
64021e98:	or     ecx,esi
64021e9a:	mov    DWORD PTR [ebp-0x14],edi
64021e9d:	mov    esi,edi
64021e9f:	and    DWORD PTR [ebp-0x14],0x0
64021ea3:	mov    ebx,edx
64021ea5:	shr    ebx,0x1f
64021ea8:	add    ecx,ecx
64021eaa:	shr    edi,0x1f
64021ead:	or     ecx,ebx
64021eaf:	mov    ebx,DWORD PTR [ebp-0x10]
64021eb2:	add    esi,esi
64021eb4:	add    edx,edx
64021eb6:	or     edx,edi
64021eb8:	lea    edi,[esi+ebx*1]
64021ebb:	cmp    edi,esi
64021ebd:	mov    DWORD PTR [eax],esi
64021ebf:	mov    DWORD PTR [eax+0x4],edx
64021ec2:	mov    DWORD PTR [eax+0x8],ecx
64021ec5:	jb     0x64021ecb
64021ec7:	cmp    edi,ebx
64021ec9:	jae    0x64021ed2
64021ecb:	mov    DWORD PTR [ebp-0x14],0x1
64021ed2:	xor    ebx,ebx
64021ed4:	cmp    DWORD PTR [ebp-0x14],ebx
64021ed7:	mov    DWORD PTR [eax],edi
64021ed9:	je     0x64021ef5
64021edb:	lea    esi,[edx+0x1]
64021ede:	cmp    esi,edx
64021ee0:	jb     0x64021ee7
64021ee2:	cmp    esi,0x1
64021ee5:	jae    0x64021eea
64021ee7:	xor    ebx,ebx
64021ee9:	inc    ebx
64021eea:	test   ebx,ebx
64021eec:	mov    DWORD PTR [eax+0x4],esi
64021eef:	je     0x64021ef5
64021ef1:	inc    ecx
64021ef2:	mov    DWORD PTR [eax+0x8],ecx
64021ef5:	mov    ecx,DWORD PTR [eax+0x4]
64021ef8:	mov    edx,DWORD PTR [ebp-0xc]
64021efb:	lea    ebx,[ecx+edx*1]
64021efe:	xor    esi,esi
64021f00:	cmp    ebx,ecx
64021f02:	jb     0x64021f08
64021f04:	cmp    ebx,edx
64021f06:	jae    0x64021f0b
64021f08:	xor    esi,esi
64021f0a:	inc    esi
64021f0b:	test   esi,esi
64021f0d:	mov    DWORD PTR [eax+0x4],ebx
64021f10:	je     0x64021f15
64021f12:	inc    DWORD PTR [eax+0x8]
64021f15:	mov    ecx,DWORD PTR [ebp-0x8]
64021f18:	add    DWORD PTR [eax+0x8],ecx
64021f1b:	and    DWORD PTR [ebp-0x14],0x0
64021f1f:	lea    ecx,[edi+edi*1]
64021f22:	mov    edx,edi
64021f24:	shr    edx,0x1f
64021f27:	lea    edi,[ebx+ebx*1]
64021f2a:	or     edi,edx
64021f2c:	mov    edx,DWORD PTR [eax+0x8]
64021f2f:	mov    esi,ebx
64021f31:	shr    esi,0x1f
64021f34:	lea    ebx,[edx+edx*1]
64021f37:	mov    edx,DWORD PTR [ebp+0x8]
64021f3a:	or     ebx,esi
64021f3c:	mov    DWORD PTR [eax],ecx
64021f3e:	mov    DWORD PTR [eax+0x4],edi
64021f41:	mov    DWORD PTR [eax+0x8],ebx
64021f44:	movsx  edx,BYTE PTR [edx]
64021f47:	lea    esi,[ecx+edx*1]
64021f4a:	cmp    esi,ecx
64021f4c:	mov    DWORD PTR [ebp-0x10],edx
64021f4f:	jb     0x64021f55
64021f51:	cmp    esi,edx
64021f53:	jae    0x64021f5c
64021f55:	mov    DWORD PTR [ebp-0x14],0x1
64021f5c:	cmp    DWORD PTR [ebp-0x14],0x0
64021f60:	mov    DWORD PTR [eax],esi
64021f62:	je     0x64021f80
64021f64:	lea    ecx,[edi+0x1]
64021f67:	xor    edx,edx
64021f69:	cmp    ecx,edi
64021f6b:	jb     0x64021f72
64021f6d:	cmp    ecx,0x1
64021f70:	jae    0x64021f75
64021f72:	xor    edx,edx
64021f74:	inc    edx
64021f75:	test   edx,edx
64021f77:	mov    DWORD PTR [eax+0x4],ecx
64021f7a:	je     0x64021f80
64021f7c:	inc    ebx
64021f7d:	mov    DWORD PTR [eax+0x8],ebx
64021f80:	dec    DWORD PTR [ebp+0xc]
64021f83:	inc    DWORD PTR [ebp+0x8]
64021f86:	cmp    DWORD PTR [ebp+0xc],0x0
64021f8a:	ja     0x64021e74
64021f90:	xor    esi,esi
64021f92:	jmp    0x64021fba
64021f94:	mov    ecx,DWORD PTR [eax+0x4]
64021f97:	mov    edx,ecx
64021f99:	shr    edx,0x10
64021f9c:	mov    DWORD PTR [eax+0x8],edx
64021f9f:	mov    edx,DWORD PTR [eax]
64021fa1:	mov    edi,edx
64021fa3:	shl    ecx,0x10
64021fa6:	shr    edi,0x10
64021fa9:	or     ecx,edi
64021fab:	shl    edx,0x10
64021fae:	add    DWORD PTR [ebp-0x18],0xfff0
64021fb5:	mov    DWORD PTR [eax+0x4],ecx
64021fb8:	mov    DWORD PTR [eax],edx
64021fba:	cmp    DWORD PTR [eax+0x8],esi
64021fbd:	je     0x64021f94
64021fbf:	mov    ebx,0x8000
64021fc4:	test   DWORD PTR [eax+0x8],ebx
64021fc7:	jne    0x64021ff9
64021fc9:	mov    esi,DWORD PTR [eax]
64021fcb:	mov    edi,DWORD PTR [eax+0x4]
64021fce:	add    DWORD PTR [ebp-0x18],0xffff
64021fd5:	mov    ecx,esi
64021fd7:	add    esi,esi
64021fd9:	shr    ecx,0x1f
64021fdc:	mov    DWORD PTR [eax],esi
64021fde:	lea    esi,[edi+edi*1]
64021fe1:	or     esi,ecx
64021fe3:	mov    ecx,DWORD PTR [eax+0x8]
64021fe6:	mov    edx,edi
64021fe8:	shr    edx,0x1f
64021feb:	add    ecx,ecx
64021fed:	or     ecx,edx
64021fef:	test   ebx,ecx
64021ff1:	mov    DWORD PTR [eax+0x4],esi
64021ff4:	mov    DWORD PTR [eax+0x8],ecx
64021ff7:	je     0x64021fc9
64021ff9:	mov    cx,WORD PTR [ebp-0x18]
64021ffd:	mov    WORD PTR [eax+0xa],cx
64022001:	mov    ecx,DWORD PTR [ebp-0x4]
64022004:	pop    edi
64022005:	pop    esi
64022006:	xor    ecx,ebp
64022008:	pop    ebx
64022009:	call   0x64012abc
6402200e:	leave  
6402200f:	ret    
64022010:	push   0x8
64022012:	push   0x6402aa90
64022017:	call   0x64014080
6402201c:	xor    eax,eax
6402201e:	cmp    DWORD PTR ds:0x64032604,eax
64022024:	je     0x6402207c
64022026:	test   BYTE PTR [ebp+0x8],0x40
6402202a:	je     0x64022074
6402202c:	cmp    DWORD PTR ds:0x6402e374,eax
64022032:	je     0x64022074
64022034:	mov    DWORD PTR [ebp-0x4],eax
64022037:	ldmxcsr DWORD PTR [ebp+0x8]
6402203b:	jmp    0x6402206b
6402203d:	mov    eax,DWORD PTR [ebp-0x14]
64022040:	mov    eax,DWORD PTR [eax]
64022042:	mov    eax,DWORD PTR [eax]
64022044:	cmp    eax,0xc0000005
64022049:	je     0x64022055
6402204b:	cmp    eax,0xc000001d
64022050:	je     0x64022055
64022052:	xor    eax,eax
64022054:	ret    
64022055:	xor    eax,eax
64022057:	inc    eax
64022058:	ret    
64022059:	mov    esp,DWORD PTR [ebp-0x18]
6402205c:	and    DWORD PTR ds:0x6402e374,0x0
64022063:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022067:	ldmxcsr DWORD PTR [ebp+0x8]
6402206b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64022072:	jmp    0x6402207c
64022074:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022078:	ldmxcsr DWORD PTR [ebp+0x8]
6402207c:	call   0x640140c5
64022081:	ret    
64022082:	int3   
64022083:	int3   
64022084:	int3   
64022085:	int3   
64022086:	int3   
64022087:	int3   
64022088:	int3   
64022089:	int3   
6402208a:	int3   
6402208b:	int3   
6402208c:	int3   
6402208d:	int3   
6402208e:	int3   
6402208f:	int3   
64022090:	mov    eax,DWORD PTR [ebp-0x10]
64022093:	and    eax,0x1
64022096:	je     0x640220a8
6402209c:	and    DWORD PTR [ebp-0x10],0xfffffffe
640220a0:	mov    ecx,DWORD PTR [ebp+0x4]
640220a3:	jmp    0x64001930
640220a8:	ret    
640220a9:	mov    edx,DWORD PTR [esp+0x8]
640220ad:	lea    eax,[edx-0xc]
640220b0:	mov    ecx,DWORD PTR [edx-0x10]
640220b3:	xor    ecx,eax
640220b5:	call   0x64012abc
640220ba:	mov    eax,0x6402a050
640220bf:	jmp    0x6401277e
640220c4:	int3   
640220c5:	int3   
640220c6:	int3   
640220c7:	int3   
640220c8:	int3   
640220c9:	int3   
640220ca:	int3   
640220cb:	int3   
640220cc:	int3   
640220cd:	int3   
640220ce:	int3   
640220cf:	int3   
640220d0:	mov    eax,DWORD PTR [ebp-0x10]
640220d3:	and    eax,0x1
640220d6:	je     0x640220e8
640220dc:	and    DWORD PTR [ebp-0x10],0xfffffffe
640220e0:	mov    ecx,DWORD PTR [ebp+0x4]
640220e3:	jmp    0x64001930
640220e8:	ret    
640220e9:	mov    edx,DWORD PTR [esp+0x8]
640220ed:	lea    eax,[edx-0x10]
640220f0:	mov    ecx,DWORD PTR [edx-0x14]
640220f3:	xor    ecx,eax
640220f5:	call   0x64012abc
640220fa:	mov    eax,0x6402a07c
640220ff:	jmp    0x6401277e
64022104:	int3   
64022105:	int3   
64022106:	int3   
64022107:	int3   
64022108:	int3   
64022109:	int3   
6402210a:	int3   
6402210b:	int3   
6402210c:	int3   
6402210d:	int3   
6402210e:	int3   
6402210f:	int3   
64022110:	lea    ecx,[ebp-0x50]
64022113:	jmp    0x64001650
64022118:	mov    edx,DWORD PTR [esp+0x8]
6402211c:	lea    eax,[edx-0x44]
6402211f:	mov    ecx,DWORD PTR [edx-0x48]
64022122:	xor    ecx,eax
64022124:	call   0x64012abc
64022129:	mov    eax,0x6402a100
6402212e:	jmp    0x6401277e
64022133:	int3   
64022134:	int3   
64022135:	int3   
64022136:	int3   
64022137:	int3   
64022138:	int3   
64022139:	int3   
6402213a:	int3   
6402213b:	int3   
6402213c:	int3   
6402213d:	int3   
6402213e:	int3   
6402213f:	int3   
64022140:	lea    ecx,[ebp-0x98]
64022146:	jmp    0x6400f9b0
6402214b:	lea    ecx,[ebp-0x94]
64022151:	jmp    0x64001650
64022156:	lea    ecx,[ebp-0x78]
64022159:	jmp    0x64001650
6402215e:	mov    edx,DWORD PTR [esp+0x8]
64022162:	lea    eax,[edx-0xa8]
64022168:	mov    ecx,DWORD PTR [edx-0xac]
6402216e:	xor    ecx,eax
64022170:	call   0x64012abc
64022175:	mov    eax,0x6402a14c
6402217a:	jmp    0x6401277e
6402217f:	int3   
64022180:	lea    ecx,[ebp+0x38]
64022183:	jmp    0x6400fb30
64022188:	lea    ecx,[ebp-0x38]
6402218b:	jmp    0x6400f9d0
64022190:	lea    ecx,[ebp+0x10]
64022193:	jmp    0x64001930
64022198:	lea    ecx,[ebp+0x14]
6402219b:	jmp    0x64001930
640221a0:	lea    ecx,[ebp+0x18]
640221a3:	jmp    0x64001930
640221a8:	lea    ecx,[ebp+0xc]
640221ab:	jmp    0x64001930
640221b0:	lea    ecx,[ebp+0x8]
640221b3:	jmp    0x64001930
640221b8:	lea    ecx,[ebp+0x4]
640221bb:	jmp    0x64001930
640221c0:	lea    ecx,[ebp+0x1c]
640221c3:	jmp    0x64001650
640221c8:	mov    edx,DWORD PTR [esp+0x8]
640221cc:	lea    eax,[edx+0xc]
640221cf:	mov    ecx,DWORD PTR [edx-0x80]
640221d2:	xor    ecx,eax
640221d4:	call   0x64012abc
640221d9:	mov    ecx,DWORD PTR [edx+0x7c]
640221dc:	xor    ecx,eax
640221de:	call   0x64012abc
640221e3:	mov    eax,0x6402a1bc
640221e8:	jmp    0x6401277e
640221ed:	int3   
640221ee:	int3   
640221ef:	int3   
640221f0:	mov    eax,ds:0x6402e4c8
640221f5:	and    eax,0xfffffffe
640221f8:	mov    ds:0x6402e4c8,eax
640221fd:	ret    
640221fe:	mov    edx,DWORD PTR [esp+0x8]
64022202:	lea    eax,[edx-0x10]
64022205:	mov    ecx,DWORD PTR [edx-0x14]
64022208:	xor    ecx,eax
6402220a:	call   0x64012abc
6402220f:	mov    eax,0x6402a280
64022214:	jmp    0x6401277e
64022219:	int3   
6402221a:	int3   
6402221b:	int3   
6402221c:	int3   
6402221d:	int3   
6402221e:	int3   
6402221f:	int3   
64022220:	lea    ecx,[ebp-0x14]
64022223:	jmp    0x64008f40
64022228:	mov    edx,DWORD PTR [esp+0x8]
6402222c:	lea    eax,[edx+0xc]
6402222f:	mov    ecx,DWORD PTR [edx-0x18]
64022232:	xor    ecx,eax
64022234:	call   0x64012abc
64022239:	mov    eax,0x6402a2e0
6402223e:	jmp    0x6401277e
64022243:	int3   
64022244:	int3   
64022245:	int3   
64022246:	int3   
64022247:	int3   
64022248:	int3   
64022249:	int3   
6402224a:	int3   
6402224b:	int3   
6402224c:	int3   
6402224d:	int3   
6402224e:	int3   
6402224f:	int3   
64022250:	lea    ecx,[ebp-0x10]
64022253:	jmp    0x64001930
64022258:	mov    edx,DWORD PTR [esp+0x8]
6402225c:	lea    eax,[edx-0x8]
6402225f:	mov    ecx,DWORD PTR [edx-0xc]
64022262:	xor    ecx,eax
64022264:	call   0x64012abc
64022269:	mov    eax,0x6402a30c
6402226e:	jmp    0x6401277e
64022273:	int3   
64022274:	int3   
64022275:	int3   
64022276:	int3   
64022277:	int3   
64022278:	int3   
64022279:	int3   
6402227a:	int3   
6402227b:	int3   
6402227c:	int3   
6402227d:	int3   
6402227e:	int3   
6402227f:	int3   
64022280:	lea    ecx,[ebp-0x10]
64022283:	jmp    0x64001680
64022288:	lea    ecx,[ebp-0x14]
6402228b:	jmp    0x64001930
64022290:	mov    edx,DWORD PTR [esp+0x8]
64022294:	lea    eax,[edx-0x14]
64022297:	mov    ecx,DWORD PTR [edx-0x18]
6402229a:	xor    ecx,eax
6402229c:	call   0x64012abc
640222a1:	mov    eax,0x6402a340
640222a6:	jmp    0x6401277e
640222ab:	int3   
640222ac:	int3   
640222ad:	int3   
640222ae:	int3   
640222af:	int3   
640222b0:	mov    eax,DWORD PTR [ebp-0x50]
640222b3:	and    eax,0x1
640222b6:	je     0x640222c8
640222bc:	and    DWORD PTR [ebp-0x50],0xfffffffe
640222c0:	mov    ecx,DWORD PTR [ebp-0x58]
640222c3:	jmp    0x64001930
640222c8:	ret    
640222c9:	lea    ecx,[ebp-0x4c]
640222cc:	jmp    0x64001930
640222d1:	lea    ecx,[ebp-0x54]
640222d4:	jmp    0x64001930
640222d9:	lea    ecx,[ebp-0x10]
640222dc:	jmp    0x64001930
640222e1:	lea    ecx,[ebp-0x10]
640222e4:	jmp    0x64001930
640222e9:	lea    ecx,[ebp-0x28]
640222ec:	jmp    0x64001930
640222f1:	lea    ecx,[ebp-0x48]
640222f4:	jmp    0x64001930
640222f9:	lea    ecx,[ebp-0x24]
640222fc:	jmp    0x64001930
64022301:	lea    ecx,[ebp-0x14]
64022304:	jmp    0x64001930
64022309:	lea    ecx,[ebp-0x18]
6402230c:	jmp    0x64001930
64022311:	lea    ecx,[ebp-0x10]
64022314:	jmp    0x64001930
64022319:	lea    ecx,[ebp-0x10]
6402231c:	jmp    0x64001930
64022321:	lea    ecx,[ebp-0x18]
64022324:	jmp    0x64001930
64022329:	lea    ecx,[ebp-0x14]
6402232c:	jmp    0x64001930
64022331:	lea    ecx,[ebp-0x10]
64022334:	jmp    0x64001930
64022339:	lea    ecx,[ebp-0x3c]
6402233c:	jmp    0x64010890
64022341:	lea    ecx,[ebp-0x14]
64022344:	jmp    0x64001930
64022349:	lea    ecx,[ebp-0x10]
6402234c:	jmp    0x64001930
64022351:	lea    ecx,[ebp-0x20]
64022354:	jmp    0x64001930
64022359:	lea    ecx,[ebp-0x10]
6402235c:	jmp    0x64001930
64022361:	lea    ecx,[ebp-0x18]
64022364:	jmp    0x64001930
64022369:	lea    ecx,[ebp-0x14]
6402236c:	jmp    0x64001930
64022371:	lea    ecx,[ebp-0x10]
64022374:	jmp    0x64001930
64022379:	lea    ecx,[ebp-0x1c]
6402237c:	jmp    0x64001930
64022381:	lea    ecx,[ebp-0x2c]
64022384:	jmp    0x64001930
64022389:	lea    ecx,[ebp-0x18]
6402238c:	jmp    0x64001930
64022391:	lea    ecx,[ebp-0x10]
64022394:	jmp    0x64001930
64022399:	lea    ecx,[ebp-0x2c]
6402239c:	jmp    0x64001930
640223a1:	lea    ecx,[ebp-0x1c]
640223a4:	jmp    0x64001930
640223a9:	lea    ecx,[ebp-0x1c]
640223ac:	jmp    0x64001930
640223b1:	mov    edx,DWORD PTR [esp+0x8]
640223b5:	lea    eax,[edx+0xc]
640223b8:	mov    ecx,DWORD PTR [edx-0xa0]
640223be:	xor    ecx,eax
640223c0:	call   0x64012abc
640223c5:	mov    ecx,DWORD PTR [edx+0x130]
640223cb:	xor    ecx,eax
640223cd:	call   0x64012abc
640223d2:	mov    eax,0x6402a364
640223d7:	jmp    0x6401277e
640223dc:	int3   
640223dd:	int3   
640223de:	int3   
640223df:	int3   
640223e0:	lea    ecx,[ebp-0x30]
640223e3:	jmp    0x64001930
640223e8:	lea    ecx,[ebp-0x2c]
640223eb:	jmp    0x64001650
640223f0:	lea    ecx,[ebp-0x5c]
640223f3:	jmp    0x64001650
640223f8:	mov    edx,DWORD PTR [esp+0x8]
640223fc:	lea    eax,[edx+0xc]
640223ff:	mov    ecx,DWORD PTR [edx-0x60]
64022402:	xor    ecx,eax
64022404:	call   0x64012abc
64022409:	mov    ecx,DWORD PTR [edx-0x4]
6402240c:	xor    ecx,eax
6402240e:	call   0x64012abc
64022413:	mov    eax,0x6402a490
64022418:	jmp    0x6401277e
6402241d:	lea    ecx,[ebp-0x28]
64022420:	jmp    0x64001650
64022425:	mov    edx,DWORD PTR [esp+0x8]
64022429:	lea    eax,[edx+0xc]
6402242c:	mov    ecx,DWORD PTR [edx-0x54]
6402242f:	xor    ecx,eax
64022431:	call   0x64012abc
64022436:	mov    eax,0x6402a4dc
6402243b:	jmp    0x6401277e
64022440:	lea    ecx,[ebp-0x28]
64022443:	jmp    0x64001650
64022448:	mov    edx,DWORD PTR [esp+0x8]
6402244c:	lea    eax,[edx+0xc]
6402244f:	mov    ecx,DWORD PTR [edx-0x54]
64022452:	xor    ecx,eax
64022454:	call   0x64012abc
64022459:	mov    eax,0x6402a508
6402245e:	jmp    0x6401277e
64022463:	mov    edx,DWORD PTR [esp+0x8]
64022467:	lea    eax,[edx+0xc]
6402246a:	mov    ecx,DWORD PTR [edx-0x14]
6402246d:	xor    ecx,eax
6402246f:	call   0x64012abc
64022474:	mov    eax,0x6402a6b0
64022479:	jmp    0x6401277e
6402247e:	int3   
6402247f:	int3   
64022480:	mov    eax,DWORD PTR [ebp+0x4]
64022483:	push   eax
64022484:	call   0x64012262
64022489:	pop    ecx
6402248a:	ret    
6402248b:	mov    edx,DWORD PTR [esp+0x8]
6402248f:	lea    eax,[edx-0x8]
64022492:	mov    ecx,DWORD PTR [edx-0xc]
64022495:	xor    ecx,eax
64022497:	call   0x64012abc
6402249c:	mov    eax,0x6402ac08
640224a1:	jmp    0x6401277e
640224a6:	int3   
640224a7:	int3   
640224a8:	int3   
640224a9:	int3   
640224aa:	int3   
640224ab:	int3   
640224ac:	int3   
640224ad:	int3   
640224ae:	int3   
640224af:	int3   
640224b0:	mov    eax,DWORD PTR [ebp+0x4]
640224b3:	push   eax
640224b4:	call   0x64012262
640224b9:	pop    ecx
640224ba:	ret    
640224bb:	mov    edx,DWORD PTR [esp+0x8]
640224bf:	lea    eax,[edx-0x8]
640224c2:	mov    ecx,DWORD PTR [edx-0xc]
640224c5:	xor    ecx,eax
640224c7:	call   0x64012abc
640224cc:	mov    eax,0x6402ac34
640224d1:	jmp    0x6401277e
640224d6:	int3   
640224d7:	int3   
640224d8:	int3   
640224d9:	int3   
640224da:	int3   
640224db:	int3   
640224dc:	int3   
640224dd:	int3   
640224de:	int3   
640224df:	int3   
640224e0:	mov    eax,DWORD PTR [ebp-0x10]
640224e3:	push   eax
640224e4:	call   0x64012262
640224e9:	pop    ecx
640224ea:	ret    
640224eb:	mov    edx,DWORD PTR [esp+0x8]
640224ef:	lea    eax,[edx-0x8]
640224f2:	mov    ecx,DWORD PTR [edx-0xc]
640224f5:	xor    ecx,eax
640224f7:	call   0x64012abc
640224fc:	mov    eax,0x6402ac60
64022501:	jmp    0x6401277e
64022506:	int3   
64022507:	int3   
64022508:	int3   
64022509:	int3   
6402250a:	int3   
6402250b:	int3   
6402250c:	int3   
6402250d:	int3   
6402250e:	int3   
6402250f:	int3   
64022510:	mov    eax,DWORD PTR [ebp-0x10]
64022513:	push   eax
64022514:	call   0x64012262
64022519:	pop    ecx
6402251a:	ret    
6402251b:	mov    edx,DWORD PTR [esp+0x8]
6402251f:	lea    eax,[edx-0xc]
64022522:	mov    ecx,DWORD PTR [edx-0x10]
64022525:	xor    ecx,eax
64022527:	call   0x64012abc
6402252c:	mov    eax,0x6402ac8c
64022531:	jmp    0x6401277e
64022536:	int3   
64022537:	int3   
64022538:	int3   
64022539:	int3   
6402253a:	int3   
6402253b:	int3   
6402253c:	int3   
6402253d:	int3   
6402253e:	int3   
6402253f:	int3   
64022540:	lea    ecx,[ebp-0x144]
64022546:	jmp    0x640026c0
6402254b:	mov    edx,DWORD PTR [esp+0x8]
6402254f:	lea    eax,[edx-0x144]
64022555:	mov    ecx,DWORD PTR [edx-0x148]
6402255b:	xor    ecx,eax
6402255d:	call   0x64012abc
64022562:	add    eax,0xc
64022565:	mov    ecx,DWORD PTR [edx-0x4]
64022568:	xor    ecx,eax
6402256a:	call   0x64012abc
6402256f:	mov    eax,0x6402acb8
64022574:	jmp    0x6401277e
64022579:	int3   
6402257a:	int3   
6402257b:	int3   
6402257c:	int3   
6402257d:	int3   
6402257e:	int3   
6402257f:	int3   
64022580:	lea    ecx,[ebp-0x20]
64022583:	jmp    0x64009b60
64022588:	mov    edx,DWORD PTR [esp+0x8]
6402258c:	lea    eax,[edx-0x1c]
6402258f:	mov    ecx,DWORD PTR [edx-0x20]
64022592:	xor    ecx,eax
64022594:	call   0x64012abc
64022599:	mov    eax,0x6402ace4
6402259e:	jmp    0x6401277e
640225a3:	int3   
640225a4:	int3   
640225a5:	int3   
640225a6:	int3   
640225a7:	int3   
640225a8:	int3   
640225a9:	int3   
640225aa:	int3   
640225ab:	int3   
640225ac:	int3   
640225ad:	int3   
640225ae:	int3   
640225af:	int3   
640225b0:	mov    eax,DWORD PTR [ebp-0x10]
640225b3:	and    eax,0x1
640225b6:	je     0x640225c8
640225bc:	and    DWORD PTR [ebp-0x10],0xfffffffe
640225c0:	mov    edi,DWORD PTR [ebp+0x8]
640225c3:	jmp    0x640097f0
640225c8:	ret    
640225c9:	mov    edx,DWORD PTR [esp+0x8]
640225cd:	lea    eax,[edx-0x8]
640225d0:	mov    ecx,DWORD PTR [edx-0xc]
640225d3:	xor    ecx,eax
640225d5:	call   0x64012abc
640225da:	mov    eax,0x6402ad10
640225df:	jmp    0x6401277e
640225e4:	int3   
640225e5:	int3   
640225e6:	int3   
640225e7:	int3   
640225e8:	int3   
640225e9:	int3   
640225ea:	int3   
640225eb:	int3   
640225ec:	int3   
640225ed:	int3   
640225ee:	int3   
640225ef:	int3   
640225f0:	mov    edx,DWORD PTR [esp+0x8]
640225f4:	lea    eax,[edx+0xc]
640225f7:	mov    ecx,DWORD PTR [edx-0x2c]
640225fa:	xor    ecx,eax
640225fc:	call   0x64012abc
64022601:	mov    eax,0x6402ad9c
64022606:	jmp    0x6401277e
6402260b:	int3   
6402260c:	int3   
6402260d:	int3   
6402260e:	int3   
6402260f:	int3   
64022610:	mov    eax,DWORD PTR [ebp-0x18]
64022613:	push   eax
64022614:	mov    ecx,DWORD PTR [ebp-0x1c]
64022617:	push   ecx
64022618:	call   0x64002bd0
6402261d:	add    esp,0x8
64022620:	ret    
64022621:	mov    edx,DWORD PTR [esp+0x8]
64022625:	lea    eax,[edx+0xc]
64022628:	mov    ecx,DWORD PTR [edx-0x20]
6402262b:	xor    ecx,eax
6402262d:	call   0x64012abc
64022632:	mov    eax,0x6402adfc
64022637:	jmp    0x6401277e
6402263c:	int3   
6402263d:	int3   
6402263e:	int3   
6402263f:	int3   
64022640:	mov    ecx,DWORD PTR [ebp-0x10]
64022643:	jmp    0x64001650
64022648:	mov    edx,DWORD PTR [esp+0x8]
6402264c:	lea    eax,[edx-0xc]
6402264f:	mov    ecx,DWORD PTR [edx-0x10]
64022652:	xor    ecx,eax
64022654:	call   0x64012abc
64022659:	mov    eax,0x6402ae28
6402265e:	jmp    0x6401277e
64022663:	int3   
64022664:	int3   
64022665:	int3   
64022666:	int3   
64022667:	int3   
64022668:	int3   
64022669:	int3   
6402266a:	int3   
6402266b:	int3   
6402266c:	int3   
6402266d:	int3   
6402266e:	int3   
6402266f:	int3   
64022670:	mov    ecx,DWORD PTR [ebp-0x10]
64022673:	jmp    0x64001650
64022678:	mov    edx,DWORD PTR [esp+0x8]
6402267c:	lea    eax,[edx-0x10]
6402267f:	mov    ecx,DWORD PTR [edx-0x14]
64022682:	xor    ecx,eax
64022684:	call   0x64012abc
64022689:	mov    eax,0x6402ae54
6402268e:	jmp    0x6401277e
64022693:	int3   
64022694:	int3   
64022695:	int3   
64022696:	int3   
64022697:	int3   
64022698:	int3   
64022699:	int3   
6402269a:	int3   
6402269b:	int3   
6402269c:	int3   
6402269d:	int3   
6402269e:	int3   
6402269f:	int3   
640226a0:	lea    ecx,[ebp+0x24]
640226a3:	jmp    0x64001650
640226a8:	lea    ecx,[ebp+0x8]
640226ab:	jmp    0x64001650
640226b0:	mov    edx,DWORD PTR [esp+0x8]
640226b4:	lea    eax,[edx-0x8]
640226b7:	mov    ecx,DWORD PTR [edx-0xc]
640226ba:	xor    ecx,eax
640226bc:	call   0x64012abc
640226c1:	mov    eax,0x6402ae88
640226c6:	jmp    0x6401277e
640226cb:	int3   
640226cc:	int3   
640226cd:	int3   
640226ce:	int3   
640226cf:	int3   
640226d0:	lea    ecx,[ebp-0x28]
640226d3:	jmp    0x64001650
640226d8:	mov    edx,DWORD PTR [esp+0x8]
640226dc:	lea    eax,[edx-0x28]
640226df:	mov    ecx,DWORD PTR [edx-0x2c]
640226e2:	xor    ecx,eax
640226e4:	call   0x64012abc
640226e9:	mov    eax,0x6402aeb4
640226ee:	jmp    0x6401277e
640226f3:	int3   
640226f4:	int3   
640226f5:	int3   
640226f6:	int3   
640226f7:	int3   
640226f8:	int3   
640226f9:	int3   
640226fa:	int3   
640226fb:	int3   
640226fc:	int3   
640226fd:	int3   
640226fe:	int3   
640226ff:	int3   
64022700:	mov    ecx,DWORD PTR [ebp-0x10]
64022703:	jmp    0x64001650
64022708:	mov    edx,DWORD PTR [esp+0x8]
6402270c:	lea    eax,[edx-0x10]
6402270f:	mov    ecx,DWORD PTR [edx-0x14]
64022712:	xor    ecx,eax
64022714:	call   0x64012abc
64022719:	mov    eax,0x6402aee0
6402271e:	jmp    0x6401277e
64022723:	int3   
64022724:	int3   
64022725:	int3   
64022726:	int3   
64022727:	int3   
64022728:	int3   
64022729:	int3   
6402272a:	int3   
6402272b:	int3   
6402272c:	int3   
6402272d:	int3   
6402272e:	int3   
6402272f:	int3   
64022730:	mov    edx,DWORD PTR [esp+0x8]
64022734:	lea    eax,[edx+0xc]
64022737:	mov    ecx,DWORD PTR [edx-0x1c]
6402273a:	xor    ecx,eax
6402273c:	call   0x64012abc
64022741:	mov    eax,0x6402af6c
64022746:	jmp    0x6401277e
6402274b:	int3   
6402274c:	int3   
6402274d:	int3   
6402274e:	int3   
6402274f:	int3   
64022750:	mov    eax,DWORD PTR [ebp-0x14]
64022753:	push   eax
64022754:	mov    ecx,DWORD PTR [ebp-0x18]
64022757:	push   ecx
64022758:	call   0x64002bd0
6402275d:	add    esp,0x8
64022760:	ret    
64022761:	mov    edx,DWORD PTR [esp+0x8]
64022765:	lea    eax,[edx+0xc]
64022768:	mov    ecx,DWORD PTR [edx-0x1c]
6402276b:	xor    ecx,eax
6402276d:	call   0x64012abc
64022772:	mov    eax,0x6402afcc
64022777:	jmp    0x6401277e
6402277c:	int3   
6402277d:	int3   
6402277e:	int3   
6402277f:	int3   
64022780:	mov    eax,DWORD PTR [ebp-0x14]
64022783:	push   eax
64022784:	mov    ecx,DWORD PTR [ebp-0x18]
64022787:	push   ecx
64022788:	call   0x64002bd0
6402278d:	add    esp,0x8
64022790:	ret    
64022791:	mov    edx,DWORD PTR [esp+0x8]
64022795:	lea    eax,[edx+0xc]
64022798:	mov    ecx,DWORD PTR [edx-0x1c]
6402279b:	xor    ecx,eax
6402279d:	call   0x64012abc
640227a2:	mov    eax,0x6402b02c
640227a7:	jmp    0x6401277e
640227ac:	int3   
640227ad:	int3   
640227ae:	int3   
640227af:	int3   
640227b0:	lea    ecx,[ebp+0x8]
640227b3:	jmp    0x64006800
640227b8:	mov    edx,DWORD PTR [esp+0x8]
640227bc:	lea    eax,[edx-0x14]
640227bf:	mov    ecx,DWORD PTR [edx-0x18]
640227c2:	xor    ecx,eax
640227c4:	call   0x64012abc
640227c9:	mov    eax,0x6402b058
640227ce:	jmp    0x6401277e
640227d3:	int3   
640227d4:	int3   
640227d5:	int3   
640227d6:	int3   
640227d7:	int3   
640227d8:	int3   
640227d9:	int3   
640227da:	int3   
640227db:	int3   
640227dc:	int3   
640227dd:	int3   
640227de:	int3   
640227df:	int3   
640227e0:	lea    ecx,[ebp+0x8]
640227e3:	jmp    0x64001650
640227e8:	mov    edx,DWORD PTR [esp+0x8]
640227ec:	lea    eax,[edx-0x14]
640227ef:	mov    ecx,DWORD PTR [edx-0x18]
640227f2:	xor    ecx,eax
640227f4:	call   0x64012abc
640227f9:	mov    eax,0x6402b084
640227fe:	jmp    0x6401277e
64022803:	int3   
64022804:	int3   
64022805:	int3   
64022806:	int3   
64022807:	int3   
64022808:	int3   
64022809:	int3   
6402280a:	int3   
6402280b:	int3   
6402280c:	int3   
6402280d:	int3   
6402280e:	int3   
6402280f:	int3   
64022810:	mov    ecx,DWORD PTR [ebp-0x10]
64022813:	jmp    0x6401237b
64022818:	mov    edx,DWORD PTR [esp+0x8]
6402281c:	lea    eax,[edx-0xc]
6402281f:	mov    ecx,DWORD PTR [edx-0x10]
64022822:	xor    ecx,eax
64022824:	call   0x64012abc
64022829:	mov    eax,0x6402b0b0
6402282e:	jmp    0x6401277e
64022833:	int3   
64022834:	int3   
64022835:	int3   
64022836:	int3   
64022837:	int3   
64022838:	int3   
64022839:	int3   
6402283a:	int3   
6402283b:	int3   
6402283c:	int3   
6402283d:	int3   
6402283e:	int3   
6402283f:	int3   
64022840:	mov    ecx,DWORD PTR [ebp-0x10]
64022843:	jmp    0x6401237b
64022848:	mov    edx,DWORD PTR [esp+0x8]
6402284c:	lea    eax,[edx-0x8]
6402284f:	mov    ecx,DWORD PTR [edx-0xc]
64022852:	xor    ecx,eax
64022854:	call   0x64012abc
64022859:	mov    eax,0x6402b0dc
6402285e:	jmp    0x6401277e
64022863:	int3   
64022864:	int3   
64022865:	int3   
64022866:	int3   
64022867:	int3   
64022868:	int3   
64022869:	int3   
6402286a:	int3   
6402286b:	int3   
6402286c:	int3   
6402286d:	int3   
6402286e:	int3   
6402286f:	int3   
64022870:	mov    ecx,DWORD PTR [ebp-0x10]
64022873:	jmp    0x6401237b
64022878:	mov    edx,DWORD PTR [esp+0x8]
6402287c:	lea    eax,[edx-0xc]
6402287f:	mov    ecx,DWORD PTR [edx-0x10]
64022882:	xor    ecx,eax
64022884:	call   0x64012abc
64022889:	mov    eax,0x6402b108
6402288e:	jmp    0x6401277e
64022893:	int3   
64022894:	int3   
64022895:	int3   
64022896:	int3   
64022897:	int3   
64022898:	int3   
64022899:	int3   
6402289a:	int3   
6402289b:	int3   
6402289c:	int3   
6402289d:	int3   
6402289e:	int3   
6402289f:	int3   
640228a0:	mov    ecx,DWORD PTR [ebp-0x10]
640228a3:	jmp    0x6401237b
640228a8:	mov    edx,DWORD PTR [esp+0x8]
640228ac:	lea    eax,[edx-0x8]
640228af:	mov    ecx,DWORD PTR [edx-0xc]
640228b2:	xor    ecx,eax
640228b4:	call   0x64012abc
640228b9:	mov    eax,0x6402b134
640228be:	jmp    0x6401277e
640228c3:	int3   
640228c4:	int3   
640228c5:	int3   
640228c6:	int3   
640228c7:	int3   
640228c8:	int3   
640228c9:	int3   
640228ca:	int3   
640228cb:	int3   
640228cc:	int3   
640228cd:	int3   
640228ce:	int3   
640228cf:	int3   
640228d0:	mov    eax,DWORD PTR [ebp-0x34]
640228d3:	and    eax,0x1
640228d6:	je     0x640228e8
640228dc:	and    DWORD PTR [ebp-0x34],0xfffffffe
640228e0:	mov    ecx,DWORD PTR [ebp-0x30]
640228e3:	jmp    0x64001650
640228e8:	ret    
640228e9:	lea    ecx,[ebp-0x2c]
640228ec:	jmp    0x64001650
640228f1:	lea    ecx,[ebp-0x3c]
640228f4:	jmp    0x64001930
640228f9:	lea    ecx,[ebp-0x2c]
640228fc:	jmp    0x64001650
64022901:	lea    ecx,[ebp-0x3c]
64022904:	jmp    0x64001930
64022909:	lea    ecx,[ebp-0x2c]
6402290c:	jmp    0x64001650
64022911:	lea    ecx,[ebp-0x2c]
64022914:	jmp    0x64001650
64022919:	mov    edx,DWORD PTR [esp+0x8]
6402291d:	lea    eax,[edx-0x40]
64022920:	mov    ecx,DWORD PTR [edx-0x44]
64022923:	xor    ecx,eax
64022925:	call   0x64012abc
6402292a:	add    eax,0x10
6402292d:	mov    ecx,DWORD PTR [edx-0x4]
64022930:	xor    ecx,eax
64022932:	call   0x64012abc
64022937:	mov    eax,0x6402b190
6402293c:	jmp    0x6401277e
64022941:	int3   
64022942:	int3   
64022943:	int3   
64022944:	int3   
64022945:	int3   
64022946:	int3   
64022947:	int3   
64022948:	int3   
64022949:	int3   
6402294a:	int3   
6402294b:	int3   
6402294c:	int3   
6402294d:	int3   
6402294e:	int3   
6402294f:	int3   
64022950:	lea    ecx,[ebp-0x30]
64022953:	jmp    0x64001650
64022958:	mov    eax,DWORD PTR [ebp-0x4c]
6402295b:	push   eax
6402295c:	mov    ecx,DWORD PTR [ebp-0x50]
6402295f:	push   ecx
64022960:	call   0x64002bd0
64022965:	add    esp,0x8
64022968:	ret    
64022969:	mov    edx,DWORD PTR [esp+0x8]
6402296d:	lea    eax,[edx+0xc]
64022970:	mov    ecx,DWORD PTR [edx-0x54]
64022973:	xor    ecx,eax
64022975:	call   0x64012abc
6402297a:	mov    ecx,DWORD PTR [edx-0x8]
6402297d:	xor    ecx,eax
6402297f:	call   0x64012abc
64022984:	mov    eax,0x6402b200
64022989:	jmp    0x6401277e
6402298e:	int3   
6402298f:	int3   
64022990:	mov    ecx,DWORD PTR [ebp-0x10]
64022993:	jmp    0x64006800
64022998:	mov    edx,DWORD PTR [esp+0x8]
6402299c:	lea    eax,[edx-0xc]
6402299f:	mov    ecx,DWORD PTR [edx-0x10]
640229a2:	xor    ecx,eax
640229a4:	call   0x64012abc
640229a9:	mov    eax,0x6402b22c
640229ae:	jmp    0x6401277e
640229b3:	int3   
640229b4:	int3   
640229b5:	int3   
640229b6:	int3   
640229b7:	int3   
640229b8:	int3   
640229b9:	int3   
640229ba:	int3   
640229bb:	int3   
640229bc:	int3   
640229bd:	int3   
640229be:	int3   
640229bf:	int3   
640229c0:	mov    ecx,DWORD PTR [ebp-0x10]
640229c3:	jmp    0x64006800
640229c8:	mov    edx,DWORD PTR [esp+0x8]
640229cc:	lea    eax,[edx-0x10]
640229cf:	mov    ecx,DWORD PTR [edx-0x14]
640229d2:	xor    ecx,eax
640229d4:	call   0x64012abc
640229d9:	mov    eax,0x6402b258
640229de:	jmp    0x6401277e
640229e3:	int3   
640229e4:	int3   
640229e5:	int3   
640229e6:	int3   
640229e7:	int3   
640229e8:	int3   
640229e9:	int3   
640229ea:	int3   
640229eb:	int3   
640229ec:	int3   
640229ed:	int3   
640229ee:	int3   
640229ef:	int3   
640229f0:	lea    ecx,[ebp+0x24]
640229f3:	jmp    0x64006800
640229f8:	lea    ecx,[ebp+0x8]
640229fb:	jmp    0x64006800
64022a00:	mov    edx,DWORD PTR [esp+0x8]
64022a04:	lea    eax,[edx-0x8]
64022a07:	mov    ecx,DWORD PTR [edx-0xc]
64022a0a:	xor    ecx,eax
64022a0c:	call   0x64012abc
64022a11:	mov    eax,0x6402b28c
64022a16:	jmp    0x6401277e
64022a1b:	int3   
64022a1c:	int3   
64022a1d:	int3   
64022a1e:	int3   
64022a1f:	int3   
64022a20:	mov    ecx,DWORD PTR [ebp-0x10]
64022a23:	jmp    0x64006800
64022a28:	mov    edx,DWORD PTR [esp+0x8]
64022a2c:	lea    eax,[edx-0x10]
64022a2f:	mov    ecx,DWORD PTR [edx-0x14]
64022a32:	xor    ecx,eax
64022a34:	call   0x64012abc
64022a39:	mov    eax,0x6402b2b8
64022a3e:	jmp    0x6401277e
64022a43:	int3   
64022a44:	int3   
64022a45:	int3   
64022a46:	int3   
64022a47:	int3   
64022a48:	int3   
64022a49:	int3   
64022a4a:	int3   
64022a4b:	int3   
64022a4c:	int3   
64022a4d:	int3   
64022a4e:	int3   
64022a4f:	int3   
64022a50:	mov    eax,DWORD PTR [ebp-0x14]
64022a53:	push   eax
64022a54:	mov    ecx,DWORD PTR [ebp-0x18]
64022a57:	push   ecx
64022a58:	call   0x64002bd0
64022a5d:	add    esp,0x8
64022a60:	ret    
64022a61:	mov    edx,DWORD PTR [esp+0x8]
64022a65:	lea    eax,[edx+0xc]
64022a68:	mov    ecx,DWORD PTR [edx-0x1c]
64022a6b:	xor    ecx,eax
64022a6d:	call   0x64012abc
64022a72:	mov    eax,0x6402b318
64022a77:	jmp    0x6401277e
64022a7c:	int3   
64022a7d:	int3   
64022a7e:	int3   
64022a7f:	int3   
64022a80:	lea    eax,[ebp-0x10]
64022a83:	jmp    0x640016b0
64022a88:	mov    edx,DWORD PTR [esp+0x8]
64022a8c:	lea    eax,[edx-0x34]
64022a8f:	mov    ecx,DWORD PTR [edx-0x38]
64022a92:	xor    ecx,eax
64022a94:	call   0x64012abc
64022a99:	mov    eax,0x6402b344
64022a9e:	jmp    0x6401277e
64022aa3:	int3   
64022aa4:	int3   
64022aa5:	int3   
64022aa6:	int3   
64022aa7:	int3   
64022aa8:	int3   
64022aa9:	int3   
64022aaa:	int3   
64022aab:	int3   
64022aac:	int3   
64022aad:	int3   
64022aae:	int3   
64022aaf:	int3   
64022ab0:	lea    ecx,[ebp-0x54]
64022ab3:	jmp    0x64001650
64022ab8:	mov    edx,DWORD PTR [esp+0x8]
64022abc:	lea    eax,[edx-0x4c]
64022abf:	mov    ecx,DWORD PTR [edx-0x50]
64022ac2:	xor    ecx,eax
64022ac4:	call   0x64012abc
64022ac9:	mov    eax,0x6402b370
64022ace:	jmp    0x6401277e
64022ad3:	int3   
64022ad4:	int3   
64022ad5:	int3   
64022ad6:	int3   
64022ad7:	int3   
64022ad8:	int3   
64022ad9:	int3   
64022ada:	int3   
64022adb:	int3   
64022adc:	int3   
64022add:	int3   
64022ade:	int3   
64022adf:	int3   
64022ae0:	lea    ecx,[ebp-0x30]
64022ae3:	jmp    0x64001650
64022ae8:	mov    edx,DWORD PTR [esp+0x8]
64022aec:	lea    eax,[edx+0xc]
64022aef:	mov    ecx,DWORD PTR [edx-0x44]
64022af2:	xor    ecx,eax
64022af4:	call   0x64012abc
64022af9:	mov    ecx,DWORD PTR [edx-0x8]
64022afc:	xor    ecx,eax
64022afe:	call   0x64012abc
64022b03:	mov    eax,0x6402b404
64022b08:	jmp    0x6401277e
64022b0d:	int3   
64022b0e:	int3   
64022b0f:	int3   
64022b10:	lea    ecx,[ebp-0x54]
64022b13:	jmp    0x64001650
64022b18:	mov    edx,DWORD PTR [esp+0x8]
64022b1c:	lea    eax,[edx-0x5c]
64022b1f:	mov    ecx,DWORD PTR [edx-0x60]
64022b22:	xor    ecx,eax
64022b24:	call   0x64012abc
64022b29:	mov    eax,0x6402b430
64022b2e:	jmp    0x6401277e
64022b33:	int3   
64022b34:	int3   
64022b35:	int3   
64022b36:	int3   
64022b37:	int3   
64022b38:	int3   
64022b39:	int3   
64022b3a:	int3   
64022b3b:	int3   
64022b3c:	int3   
64022b3d:	int3   
64022b3e:	int3   
64022b3f:	int3   
64022b40:	lea    ecx,[ebp-0x54]
64022b43:	jmp    0x64001650
64022b48:	mov    edx,DWORD PTR [esp+0x8]
64022b4c:	lea    eax,[edx-0x5c]
64022b4f:	mov    ecx,DWORD PTR [edx-0x60]
64022b52:	xor    ecx,eax
64022b54:	call   0x64012abc
64022b59:	mov    eax,0x6402b45c
64022b5e:	jmp    0x6401277e
64022b63:	int3   
64022b64:	int3   
64022b65:	int3   
64022b66:	int3   
64022b67:	int3   
64022b68:	int3   
64022b69:	int3   
64022b6a:	int3   
64022b6b:	int3   
64022b6c:	int3   
64022b6d:	int3   
64022b6e:	int3   
64022b6f:	int3   
64022b70:	lea    ecx,[ebp-0x50]
64022b73:	jmp    0x64001650
64022b78:	mov    edx,DWORD PTR [esp+0x8]
64022b7c:	lea    eax,[edx-0x54]
64022b7f:	mov    ecx,DWORD PTR [edx-0x58]
64022b82:	xor    ecx,eax
64022b84:	call   0x64012abc
64022b89:	mov    eax,0x6402b488
64022b8e:	jmp    0x6401277e
64022b93:	int3   
64022b94:	int3   
64022b95:	int3   
64022b96:	int3   
64022b97:	int3   
64022b98:	int3   
64022b99:	int3   
64022b9a:	int3   
64022b9b:	int3   
64022b9c:	int3   
64022b9d:	int3   
64022b9e:	int3   
64022b9f:	int3   
64022ba0:	lea    ecx,[ebp-0x54]
64022ba3:	jmp    0x64001650
64022ba8:	mov    edx,DWORD PTR [esp+0x8]
64022bac:	lea    eax,[edx-0x5c]
64022baf:	mov    ecx,DWORD PTR [edx-0x60]
64022bb2:	xor    ecx,eax
64022bb4:	call   0x64012abc
64022bb9:	mov    eax,0x6402b4b4
64022bbe:	jmp    0x6401277e
64022bc3:	int3   
64022bc4:	int3   
64022bc5:	int3   
64022bc6:	int3   
64022bc7:	int3   
64022bc8:	int3   
64022bc9:	int3   
64022bca:	int3   
64022bcb:	int3   
64022bcc:	int3   
64022bcd:	int3   
64022bce:	int3   
64022bcf:	int3   
64022bd0:	lea    ecx,[ebp-0x54]
64022bd3:	jmp    0x64001650
64022bd8:	mov    edx,DWORD PTR [esp+0x8]
64022bdc:	lea    eax,[edx-0x5c]
64022bdf:	mov    ecx,DWORD PTR [edx-0x60]
64022be2:	xor    ecx,eax
64022be4:	call   0x64012abc
64022be9:	mov    eax,0x6402b4e0
64022bee:	jmp    0x6401277e
64022bf3:	int3   
64022bf4:	int3   
64022bf5:	int3   
64022bf6:	int3   
64022bf7:	int3   
64022bf8:	int3   
64022bf9:	int3   
64022bfa:	int3   
64022bfb:	int3   
64022bfc:	int3   
64022bfd:	int3   
64022bfe:	int3   
64022bff:	int3   
64022c00:	lea    ecx,[ebp-0x50]
64022c03:	jmp    0x64001650
64022c08:	mov    edx,DWORD PTR [esp+0x8]
64022c0c:	lea    eax,[edx-0x54]
64022c0f:	mov    ecx,DWORD PTR [edx-0x58]
64022c12:	xor    ecx,eax
64022c14:	call   0x64012abc
64022c19:	mov    eax,0x6402b50c
64022c1e:	jmp    0x6401277e
64022c23:	int3   
64022c24:	int3   
64022c25:	int3   
64022c26:	int3   
64022c27:	int3   
64022c28:	int3   
64022c29:	int3   
64022c2a:	int3   
64022c2b:	int3   
64022c2c:	int3   
64022c2d:	int3   
64022c2e:	int3   
64022c2f:	int3   
64022c30:	mov    eax,ds:0x64031338
64022c35:	and    eax,0xfffffffe
64022c38:	mov    ds:0x64031338,eax
64022c3d:	ret    
64022c3e:	mov    edx,DWORD PTR [esp+0x8]
64022c42:	lea    eax,[edx]
64022c44:	mov    ecx,DWORD PTR [edx-0x4]
64022c47:	xor    ecx,eax
64022c49:	call   0x64012abc
64022c4e:	mov    eax,0x6402b538
64022c53:	jmp    0x6401277e
64022c58:	int3   
64022c59:	int3   
64022c5a:	int3   
64022c5b:	int3   
64022c5c:	int3   
64022c5d:	int3   
64022c5e:	int3   
64022c5f:	int3   
64022c60:	mov    eax,ds:0x6403133c
64022c65:	and    eax,0xfffffffe
64022c68:	mov    ds:0x6403133c,eax
64022c6d:	ret    
64022c6e:	mov    edx,DWORD PTR [esp+0x8]
64022c72:	lea    eax,[edx]
64022c74:	mov    ecx,DWORD PTR [edx-0x4]
64022c77:	xor    ecx,eax
64022c79:	call   0x64012abc
64022c7e:	mov    eax,0x6402b564
64022c83:	jmp    0x6401277e
64022c88:	int3   
64022c89:	int3   
64022c8a:	int3   
64022c8b:	int3   
64022c8c:	int3   
64022c8d:	int3   
64022c8e:	int3   
64022c8f:	int3   
64022c90:	lea    ecx,[ebp-0x4c]
64022c93:	jmp    0x64006800
64022c98:	lea    ecx,[ebp-0x30]
64022c9b:	jmp    0x64006800
64022ca0:	mov    ecx,DWORD PTR [ebp-0xc0]
64022ca6:	jmp    0x64006800
64022cab:	lea    ecx,[ebp-0x84]
64022cb1:	jmp    0x64005ec0
64022cb6:	lea    ecx,[ebp-0xbc]
64022cbc:	jmp    0x64005ec0
64022cc1:	mov    edx,DWORD PTR [esp+0x8]
64022cc5:	lea    eax,[edx-0xdc]
64022ccb:	mov    ecx,DWORD PTR [edx-0xe0]
64022cd1:	xor    ecx,eax
64022cd3:	call   0x64012abc
64022cd8:	add    eax,0xc
64022cdb:	mov    ecx,DWORD PTR [edx-0x8]
64022cde:	xor    ecx,eax
64022ce0:	call   0x64012abc
64022ce5:	mov    eax,0x6402b5b0
64022cea:	jmp    0x6401277e
64022cef:	int3   
64022cf0:	lea    ecx,[ebp-0x4c]
64022cf3:	jmp    0x64001650
64022cf8:	lea    ecx,[ebp-0x30]
64022cfb:	jmp    0x64001650
64022d00:	mov    ecx,DWORD PTR [ebp-0xc0]
64022d06:	jmp    0x64001650
64022d0b:	lea    ecx,[ebp-0x84]
64022d11:	jmp    0x6400fb30
64022d16:	lea    ecx,[ebp-0xbc]
64022d1c:	jmp    0x6400fb30
64022d21:	mov    edx,DWORD PTR [esp+0x8]
64022d25:	lea    eax,[edx-0xdc]
64022d2b:	mov    ecx,DWORD PTR [edx-0xe0]
64022d31:	xor    ecx,eax
64022d33:	call   0x64012abc
64022d38:	add    eax,0xc
64022d3b:	mov    ecx,DWORD PTR [edx-0x8]
64022d3e:	xor    ecx,eax
64022d40:	call   0x64012abc
64022d45:	mov    eax,0x6402b5fc
64022d4a:	jmp    0x6401277e
64022d4f:	int3   
64022d50:	lea    ecx,[ebp+0x4]
64022d53:	jmp    0x64001930
64022d58:	mov    edx,DWORD PTR [esp+0x8]
64022d5c:	lea    eax,[edx-0x30]
64022d5f:	mov    ecx,DWORD PTR [edx-0x34]
64022d62:	xor    ecx,eax
64022d64:	call   0x64012abc
64022d69:	add    eax,0xc
64022d6c:	mov    ecx,DWORD PTR [edx-0x4]
64022d6f:	xor    ecx,eax
64022d71:	call   0x64012abc
64022d76:	mov    eax,0x6402b628
64022d7b:	jmp    0x6401277e
64022d80:	mov    ecx,DWORD PTR [ebp-0x10]
64022d83:	jmp    0x64001930
64022d88:	mov    edx,DWORD PTR [esp+0x8]
64022d8c:	lea    eax,[edx-0xc]
64022d8f:	mov    ecx,DWORD PTR [edx-0x10]
64022d92:	xor    ecx,eax
64022d94:	call   0x64012abc
64022d99:	mov    eax,0x6402b654
64022d9e:	jmp    0x6401277e
64022da3:	int3   
64022da4:	int3   
64022da5:	int3   
64022da6:	int3   
64022da7:	int3   
64022da8:	int3   
64022da9:	int3   
64022daa:	int3   
64022dab:	int3   
64022dac:	int3   
64022dad:	int3   
64022dae:	int3   
64022daf:	int3   
64022db0:	lea    ecx,[ebp-0x10]
64022db3:	jmp    0x64001930
64022db8:	mov    edx,DWORD PTR [esp+0x8]
64022dbc:	lea    eax,[edx-0x8]
64022dbf:	mov    ecx,DWORD PTR [edx-0xc]
64022dc2:	xor    ecx,eax
64022dc4:	call   0x64012abc
64022dc9:	mov    eax,0x6402b680
64022dce:	jmp    0x6401277e
64022dd3:	int3   
64022dd4:	int3   
64022dd5:	int3   
64022dd6:	int3   
64022dd7:	int3   
64022dd8:	int3   
64022dd9:	int3   
64022dda:	int3   
64022ddb:	int3   
64022ddc:	int3   
64022ddd:	int3   
64022dde:	int3   
64022ddf:	int3   
64022de0:	mov    ecx,DWORD PTR [ebp-0x10]
64022de3:	jmp    0x64001930
64022de8:	mov    edx,DWORD PTR [esp+0x8]
64022dec:	lea    eax,[edx-0xc]
64022def:	mov    ecx,DWORD PTR [edx-0x10]
64022df2:	xor    ecx,eax
64022df4:	call   0x64012abc
64022df9:	mov    eax,0x6402b6ac
64022dfe:	jmp    0x6401277e
64022e03:	int3   
64022e04:	int3   
64022e05:	int3   
64022e06:	int3   
64022e07:	int3   
64022e08:	int3   
64022e09:	int3   
64022e0a:	int3   
64022e0b:	int3   
64022e0c:	int3   
64022e0d:	int3   
64022e0e:	int3   
64022e0f:	int3   
64022e10:	mov    eax,ds:0x6403135c
64022e15:	and    eax,0xfffffffe
64022e18:	mov    ds:0x6403135c,eax
64022e1d:	ret    
64022e1e:	mov    edx,DWORD PTR [esp+0x8]
64022e22:	lea    eax,[edx-0xc]
64022e25:	mov    ecx,DWORD PTR [edx-0x10]
64022e28:	xor    ecx,eax
64022e2a:	call   0x64012abc
64022e2f:	mov    eax,0x6402b6d8
64022e34:	jmp    0x6401277e
64022e39:	int3   
64022e3a:	int3   
64022e3b:	int3   
64022e3c:	int3   
64022e3d:	int3   
64022e3e:	int3   
64022e3f:	int3   
64022e40:	mov    eax,ds:0x64031364
64022e45:	and    eax,0xfffffffe
64022e48:	mov    ds:0x64031364,eax
64022e4d:	ret    
64022e4e:	mov    edx,DWORD PTR [esp+0x8]
64022e52:	lea    eax,[edx-0xc]
64022e55:	mov    ecx,DWORD PTR [edx-0x10]
64022e58:	xor    ecx,eax
64022e5a:	call   0x64012abc
64022e5f:	mov    eax,0x6402b704
64022e64:	jmp    0x6401277e
64022e69:	int3   
64022e6a:	int3   
64022e6b:	int3   
64022e6c:	int3   
64022e6d:	int3   
64022e6e:	int3   
64022e6f:	int3   
64022e70:	mov    eax,ds:0x6403136c
64022e75:	and    eax,0xfffffffe
64022e78:	mov    ds:0x6403136c,eax
64022e7d:	ret    
64022e7e:	mov    edx,DWORD PTR [esp+0x8]
64022e82:	lea    eax,[edx-0xc]
64022e85:	mov    ecx,DWORD PTR [edx-0x10]
64022e88:	xor    ecx,eax
64022e8a:	call   0x64012abc
64022e8f:	mov    eax,0x6402b730
64022e94:	jmp    0x6401277e
64022e99:	int3   
64022e9a:	int3   
64022e9b:	int3   
64022e9c:	int3   
64022e9d:	int3   
64022e9e:	int3   
64022e9f:	int3   
64022ea0:	mov    eax,ds:0x64031374
64022ea5:	and    eax,0xfffffffe
64022ea8:	mov    ds:0x64031374,eax
64022ead:	ret    
64022eae:	mov    edx,DWORD PTR [esp+0x8]
64022eb2:	lea    eax,[edx-0xc]
64022eb5:	mov    ecx,DWORD PTR [edx-0x10]
64022eb8:	xor    ecx,eax
64022eba:	call   0x64012abc
64022ebf:	mov    eax,0x6402b75c
64022ec4:	jmp    0x6401277e
64022ec9:	int3   
64022eca:	int3   
64022ecb:	int3   
64022ecc:	int3   
64022ecd:	int3   
64022ece:	int3   
64022ecf:	int3   
64022ed0:	mov    eax,ds:0x6403137c
64022ed5:	and    eax,0xfffffffe
64022ed8:	mov    ds:0x6403137c,eax
64022edd:	ret    
64022ede:	mov    edx,DWORD PTR [esp+0x8]
64022ee2:	lea    eax,[edx-0xc]
64022ee5:	mov    ecx,DWORD PTR [edx-0x10]
64022ee8:	xor    ecx,eax
64022eea:	call   0x64012abc
64022eef:	mov    eax,0x6402b788
64022ef4:	jmp    0x6401277e
64022ef9:	int3   
64022efa:	int3   
64022efb:	int3   
64022efc:	int3   
64022efd:	int3   
64022efe:	int3   
64022eff:	int3   
64022f00:	mov    eax,ds:0x64031384
64022f05:	and    eax,0xfffffffe
64022f08:	mov    ds:0x64031384,eax
64022f0d:	ret    
64022f0e:	mov    edx,DWORD PTR [esp+0x8]
64022f12:	lea    eax,[edx-0xc]
64022f15:	mov    ecx,DWORD PTR [edx-0x10]
64022f18:	xor    ecx,eax
64022f1a:	call   0x64012abc
64022f1f:	mov    eax,0x6402b7b4
64022f24:	jmp    0x6401277e
64022f29:	int3   
64022f2a:	int3   
64022f2b:	int3   
64022f2c:	int3   
64022f2d:	int3   
64022f2e:	int3   
64022f2f:	int3   
64022f30:	mov    eax,ds:0x6403138c
64022f35:	and    eax,0xfffffffe
64022f38:	mov    ds:0x6403138c,eax
64022f3d:	ret    
64022f3e:	mov    edx,DWORD PTR [esp+0x8]
64022f42:	lea    eax,[edx-0xc]
64022f45:	mov    ecx,DWORD PTR [edx-0x10]
64022f48:	xor    ecx,eax
64022f4a:	call   0x64012abc
64022f4f:	mov    eax,0x6402b7e0
64022f54:	jmp    0x6401277e
64022f59:	int3   
64022f5a:	int3   
64022f5b:	int3   
64022f5c:	int3   
64022f5d:	int3   
64022f5e:	int3   
64022f5f:	int3   
64022f60:	mov    eax,ds:0x64031394
64022f65:	and    eax,0xfffffffe
64022f68:	mov    ds:0x64031394,eax
64022f6d:	ret    
64022f6e:	mov    edx,DWORD PTR [esp+0x8]
64022f72:	lea    eax,[edx-0xc]
64022f75:	mov    ecx,DWORD PTR [edx-0x10]
64022f78:	xor    ecx,eax
64022f7a:	call   0x64012abc
64022f7f:	mov    eax,0x6402b80c
64022f84:	jmp    0x6401277e
64022f89:	int3   
64022f8a:	int3   
64022f8b:	int3   
64022f8c:	int3   
64022f8d:	int3   
64022f8e:	int3   
64022f8f:	int3   
64022f90:	mov    eax,ds:0x6403139c
64022f95:	and    eax,0xfffffffe
64022f98:	mov    ds:0x6403139c,eax
64022f9d:	ret    
64022f9e:	mov    edx,DWORD PTR [esp+0x8]
64022fa2:	lea    eax,[edx-0xc]
64022fa5:	mov    ecx,DWORD PTR [edx-0x10]
64022fa8:	xor    ecx,eax
64022faa:	call   0x64012abc
64022faf:	mov    eax,0x6402b838
64022fb4:	jmp    0x6401277e
64022fb9:	int3   
64022fba:	int3   
64022fbb:	int3   
64022fbc:	int3   
64022fbd:	int3   
64022fbe:	int3   
64022fbf:	int3   
64022fc0:	mov    eax,ds:0x640313a4
64022fc5:	and    eax,0xfffffffe
64022fc8:	mov    ds:0x640313a4,eax
64022fcd:	ret    
64022fce:	mov    edx,DWORD PTR [esp+0x8]
64022fd2:	lea    eax,[edx-0xc]
64022fd5:	mov    ecx,DWORD PTR [edx-0x10]
64022fd8:	xor    ecx,eax
64022fda:	call   0x64012abc
64022fdf:	mov    eax,0x6402b864
64022fe4:	jmp    0x6401277e
64022fe9:	int3   
64022fea:	int3   
64022feb:	int3   
64022fec:	int3   
64022fed:	int3   
64022fee:	int3   
64022fef:	int3   
64022ff0:	mov    eax,ds:0x640313ac
64022ff5:	and    eax,0xfffffffe
64022ff8:	mov    ds:0x640313ac,eax
64022ffd:	ret    
64022ffe:	mov    edx,DWORD PTR [esp+0x8]
64023002:	lea    eax,[edx-0xc]
64023005:	mov    ecx,DWORD PTR [edx-0x10]
64023008:	xor    ecx,eax
6402300a:	call   0x64012abc
6402300f:	mov    eax,0x6402b890
64023014:	jmp    0x6401277e
64023019:	int3   
6402301a:	int3   
6402301b:	int3   
6402301c:	int3   
6402301d:	int3   
6402301e:	int3   
6402301f:	int3   
64023020:	mov    eax,ds:0x640313b4
64023025:	and    eax,0xfffffffe
64023028:	mov    ds:0x640313b4,eax
6402302d:	ret    
6402302e:	mov    edx,DWORD PTR [esp+0x8]
64023032:	lea    eax,[edx-0xc]
64023035:	mov    ecx,DWORD PTR [edx-0x10]
64023038:	xor    ecx,eax
6402303a:	call   0x64012abc
6402303f:	mov    eax,0x6402b8bc
64023044:	jmp    0x6401277e
64023049:	int3   
6402304a:	int3   
6402304b:	int3   
6402304c:	int3   
6402304d:	int3   
6402304e:	int3   
6402304f:	int3   
64023050:	mov    eax,ds:0x640313bc
64023055:	and    eax,0xfffffffe
64023058:	mov    ds:0x640313bc,eax
6402305d:	ret    
6402305e:	mov    edx,DWORD PTR [esp+0x8]
64023062:	lea    eax,[edx-0xc]
64023065:	mov    ecx,DWORD PTR [edx-0x10]
64023068:	xor    ecx,eax
6402306a:	call   0x64012abc
6402306f:	mov    eax,0x6402b8e8
64023074:	jmp    0x6401277e
64023079:	int3   
6402307a:	int3   
6402307b:	int3   
6402307c:	int3   
6402307d:	int3   
6402307e:	int3   
6402307f:	int3   
64023080:	mov    eax,ds:0x640313c4
64023085:	and    eax,0xfffffffe
64023088:	mov    ds:0x640313c4,eax
6402308d:	ret    
6402308e:	mov    edx,DWORD PTR [esp+0x8]
64023092:	lea    eax,[edx-0xc]
64023095:	mov    ecx,DWORD PTR [edx-0x10]
64023098:	xor    ecx,eax
6402309a:	call   0x64012abc
6402309f:	mov    eax,0x6402b914
640230a4:	jmp    0x6401277e
640230a9:	int3   
640230aa:	int3   
640230ab:	int3   
640230ac:	int3   
640230ad:	int3   
640230ae:	int3   
640230af:	int3   
640230b0:	mov    eax,ds:0x640313cc
640230b5:	and    eax,0xfffffffe
640230b8:	mov    ds:0x640313cc,eax
640230bd:	ret    
640230be:	mov    edx,DWORD PTR [esp+0x8]
640230c2:	lea    eax,[edx-0xc]
640230c5:	mov    ecx,DWORD PTR [edx-0x10]
640230c8:	xor    ecx,eax
640230ca:	call   0x64012abc
640230cf:	mov    eax,0x6402b940
640230d4:	jmp    0x6401277e
640230d9:	int3   
640230da:	int3   
640230db:	int3   
640230dc:	int3   
640230dd:	int3   
640230de:	int3   
640230df:	int3   
640230e0:	mov    eax,ds:0x640313d4
640230e5:	and    eax,0xfffffffe
640230e8:	mov    ds:0x640313d4,eax
640230ed:	ret    
640230ee:	mov    edx,DWORD PTR [esp+0x8]
640230f2:	lea    eax,[edx-0xc]
640230f5:	mov    ecx,DWORD PTR [edx-0x10]
640230f8:	xor    ecx,eax
640230fa:	call   0x64012abc
640230ff:	mov    eax,0x6402b96c
64023104:	jmp    0x6401277e
64023109:	int3   
6402310a:	int3   
6402310b:	int3   
6402310c:	int3   
6402310d:	int3   
6402310e:	int3   
6402310f:	int3   
64023110:	mov    eax,ds:0x640313dc
64023115:	and    eax,0xfffffffe
64023118:	mov    ds:0x640313dc,eax
6402311d:	ret    
6402311e:	mov    edx,DWORD PTR [esp+0x8]
64023122:	lea    eax,[edx-0xc]
64023125:	mov    ecx,DWORD PTR [edx-0x10]
64023128:	xor    ecx,eax
6402312a:	call   0x64012abc
6402312f:	mov    eax,0x6402b998
64023134:	jmp    0x6401277e
64023139:	int3   
6402313a:	int3   
6402313b:	int3   
6402313c:	int3   
6402313d:	int3   
6402313e:	int3   
6402313f:	int3   
64023140:	mov    eax,ds:0x640313e4
64023145:	and    eax,0xfffffffe
64023148:	mov    ds:0x640313e4,eax
6402314d:	ret    
6402314e:	mov    edx,DWORD PTR [esp+0x8]
64023152:	lea    eax,[edx-0xc]
64023155:	mov    ecx,DWORD PTR [edx-0x10]
64023158:	xor    ecx,eax
6402315a:	call   0x64012abc
6402315f:	mov    eax,0x6402b9c4
64023164:	jmp    0x6401277e
64023169:	int3   
6402316a:	int3   
6402316b:	int3   
6402316c:	int3   
6402316d:	int3   
6402316e:	int3   
6402316f:	int3   
64023170:	mov    eax,ds:0x640313ec
64023175:	and    eax,0xfffffffe
64023178:	mov    ds:0x640313ec,eax
6402317d:	ret    
6402317e:	mov    edx,DWORD PTR [esp+0x8]
64023182:	lea    eax,[edx-0xc]
64023185:	mov    ecx,DWORD PTR [edx-0x10]
64023188:	xor    ecx,eax
6402318a:	call   0x64012abc
6402318f:	mov    eax,0x6402b9f0
64023194:	jmp    0x6401277e
64023199:	int3   
6402319a:	int3   
6402319b:	int3   
6402319c:	int3   
6402319d:	int3   
6402319e:	int3   
6402319f:	int3   
640231a0:	mov    eax,ds:0x640313f4
640231a5:	and    eax,0xfffffffe
640231a8:	mov    ds:0x640313f4,eax
640231ad:	ret    
640231ae:	mov    edx,DWORD PTR [esp+0x8]
640231b2:	lea    eax,[edx-0xc]
640231b5:	mov    ecx,DWORD PTR [edx-0x10]
640231b8:	xor    ecx,eax
640231ba:	call   0x64012abc
640231bf:	mov    eax,0x6402ba1c
640231c4:	jmp    0x6401277e
640231c9:	int3   
640231ca:	int3   
640231cb:	int3   
640231cc:	int3   
640231cd:	int3   
640231ce:	int3   
640231cf:	int3   
640231d0:	mov    eax,ds:0x640313fc
640231d5:	and    eax,0xfffffffe
640231d8:	mov    ds:0x640313fc,eax
640231dd:	ret    
640231de:	mov    edx,DWORD PTR [esp+0x8]
640231e2:	lea    eax,[edx-0xc]
640231e5:	mov    ecx,DWORD PTR [edx-0x10]
640231e8:	xor    ecx,eax
640231ea:	call   0x64012abc
640231ef:	mov    eax,0x6402ba48
640231f4:	jmp    0x6401277e
640231f9:	int3   
640231fa:	int3   
640231fb:	int3   
640231fc:	int3   
640231fd:	int3   
640231fe:	int3   
640231ff:	int3   
64023200:	mov    eax,ds:0x64031404
64023205:	and    eax,0xfffffffe
64023208:	mov    ds:0x64031404,eax
6402320d:	ret    
6402320e:	mov    edx,DWORD PTR [esp+0x8]
64023212:	lea    eax,[edx-0xc]
64023215:	mov    ecx,DWORD PTR [edx-0x10]
64023218:	xor    ecx,eax
6402321a:	call   0x64012abc
6402321f:	mov    eax,0x6402ba74
64023224:	jmp    0x6401277e
64023229:	int3   
6402322a:	int3   
6402322b:	int3   
6402322c:	int3   
6402322d:	int3   
6402322e:	int3   
6402322f:	int3   
64023230:	mov    eax,ds:0x6403140c
64023235:	and    eax,0xfffffffe
64023238:	mov    ds:0x6403140c,eax
6402323d:	ret    
6402323e:	mov    edx,DWORD PTR [esp+0x8]
64023242:	lea    eax,[edx-0xc]
64023245:	mov    ecx,DWORD PTR [edx-0x10]
64023248:	xor    ecx,eax
6402324a:	call   0x64012abc
6402324f:	mov    eax,0x6402baa0
64023254:	jmp    0x6401277e
64023259:	int3   
6402325a:	int3   
6402325b:	int3   
6402325c:	int3   
6402325d:	int3   
6402325e:	int3   
6402325f:	int3   
64023260:	mov    eax,ds:0x64031414
64023265:	and    eax,0xfffffffe
64023268:	mov    ds:0x64031414,eax
6402326d:	ret    
6402326e:	mov    edx,DWORD PTR [esp+0x8]
64023272:	lea    eax,[edx-0xc]
64023275:	mov    ecx,DWORD PTR [edx-0x10]
64023278:	xor    ecx,eax
6402327a:	call   0x64012abc
6402327f:	mov    eax,0x6402bacc
64023284:	jmp    0x6401277e
64023289:	int3   
6402328a:	int3   
6402328b:	int3   
6402328c:	int3   
6402328d:	int3   
6402328e:	int3   
6402328f:	int3   
64023290:	mov    eax,ds:0x6403141c
64023295:	and    eax,0xfffffffe
64023298:	mov    ds:0x6403141c,eax
6402329d:	ret    
6402329e:	mov    edx,DWORD PTR [esp+0x8]
640232a2:	lea    eax,[edx-0xc]
640232a5:	mov    ecx,DWORD PTR [edx-0x10]
640232a8:	xor    ecx,eax
640232aa:	call   0x64012abc
640232af:	mov    eax,0x6402baf8
640232b4:	jmp    0x6401277e
640232b9:	int3   
640232ba:	int3   
640232bb:	int3   
640232bc:	int3   
640232bd:	int3   
640232be:	int3   
640232bf:	int3   
640232c0:	mov    eax,ds:0x64031424
640232c5:	and    eax,0xfffffffe
640232c8:	mov    ds:0x64031424,eax
640232cd:	ret    
640232ce:	mov    edx,DWORD PTR [esp+0x8]
640232d2:	lea    eax,[edx-0xc]
640232d5:	mov    ecx,DWORD PTR [edx-0x10]
640232d8:	xor    ecx,eax
640232da:	call   0x64012abc
640232df:	mov    eax,0x6402bb24
640232e4:	jmp    0x6401277e
640232e9:	int3   
640232ea:	int3   
640232eb:	int3   
640232ec:	int3   
640232ed:	int3   
640232ee:	int3   
640232ef:	int3   
640232f0:	mov    eax,ds:0x6403142c
640232f5:	and    eax,0xfffffffe
640232f8:	mov    ds:0x6403142c,eax
640232fd:	ret    
640232fe:	mov    edx,DWORD PTR [esp+0x8]
64023302:	lea    eax,[edx-0xc]
64023305:	mov    ecx,DWORD PTR [edx-0x10]
64023308:	xor    ecx,eax
6402330a:	call   0x64012abc
6402330f:	mov    eax,0x6402bb50
64023314:	jmp    0x6401277e
64023319:	int3   
6402331a:	int3   
6402331b:	int3   
6402331c:	int3   
6402331d:	int3   
6402331e:	int3   
6402331f:	int3   
64023320:	mov    eax,ds:0x64031434
64023325:	and    eax,0xfffffffe
64023328:	mov    ds:0x64031434,eax
6402332d:	ret    
6402332e:	mov    edx,DWORD PTR [esp+0x8]
64023332:	lea    eax,[edx-0xc]
64023335:	mov    ecx,DWORD PTR [edx-0x10]
64023338:	xor    ecx,eax
6402333a:	call   0x64012abc
6402333f:	mov    eax,0x6402bb7c
64023344:	jmp    0x6401277e
64023349:	int3   
6402334a:	int3   
6402334b:	int3   
6402334c:	int3   
6402334d:	int3   
6402334e:	int3   
6402334f:	int3   
64023350:	mov    eax,ds:0x6403143c
64023355:	and    eax,0xfffffffe
64023358:	mov    ds:0x6403143c,eax
6402335d:	ret    
6402335e:	mov    edx,DWORD PTR [esp+0x8]
64023362:	lea    eax,[edx-0xc]
64023365:	mov    ecx,DWORD PTR [edx-0x10]
64023368:	xor    ecx,eax
6402336a:	call   0x64012abc
6402336f:	mov    eax,0x6402bba8
64023374:	jmp    0x6401277e
64023379:	int3   
6402337a:	int3   
6402337b:	int3   
6402337c:	int3   
6402337d:	int3   
6402337e:	int3   
6402337f:	int3   
64023380:	mov    eax,ds:0x64031444
64023385:	and    eax,0xfffffffe
64023388:	mov    ds:0x64031444,eax
6402338d:	ret    
6402338e:	mov    edx,DWORD PTR [esp+0x8]
64023392:	lea    eax,[edx-0xc]
64023395:	mov    ecx,DWORD PTR [edx-0x10]
64023398:	xor    ecx,eax
6402339a:	call   0x64012abc
6402339f:	mov    eax,0x6402bbd4
640233a4:	jmp    0x6401277e
640233a9:	int3   
640233aa:	int3   
640233ab:	int3   
640233ac:	int3   
640233ad:	int3   
640233ae:	int3   
640233af:	int3   
640233b0:	mov    eax,ds:0x6403144c
640233b5:	and    eax,0xfffffffe
640233b8:	mov    ds:0x6403144c,eax
640233bd:	ret    
640233be:	mov    edx,DWORD PTR [esp+0x8]
640233c2:	lea    eax,[edx-0xc]
640233c5:	mov    ecx,DWORD PTR [edx-0x10]
640233c8:	xor    ecx,eax
640233ca:	call   0x64012abc
640233cf:	mov    eax,0x6402bc00
640233d4:	jmp    0x6401277e
640233d9:	int3   
640233da:	int3   
640233db:	int3   
640233dc:	int3   
640233dd:	int3   
640233de:	int3   
640233df:	int3   
640233e0:	mov    eax,ds:0x64031454
640233e5:	and    eax,0xfffffffe
640233e8:	mov    ds:0x64031454,eax
640233ed:	ret    
640233ee:	mov    edx,DWORD PTR [esp+0x8]
640233f2:	lea    eax,[edx-0xc]
640233f5:	mov    ecx,DWORD PTR [edx-0x10]
640233f8:	xor    ecx,eax
640233fa:	call   0x64012abc
640233ff:	mov    eax,0x6402bc2c
64023404:	jmp    0x6401277e
64023409:	int3   
6402340a:	int3   
6402340b:	int3   
6402340c:	int3   
6402340d:	int3   
6402340e:	int3   
6402340f:	int3   
64023410:	mov    eax,ds:0x6403145c
64023415:	and    eax,0xfffffffe
64023418:	mov    ds:0x6403145c,eax
6402341d:	ret    
6402341e:	mov    edx,DWORD PTR [esp+0x8]
64023422:	lea    eax,[edx-0xc]
64023425:	mov    ecx,DWORD PTR [edx-0x10]
64023428:	xor    ecx,eax
6402342a:	call   0x64012abc
6402342f:	mov    eax,0x6402bc58
64023434:	jmp    0x6401277e
64023439:	int3   
6402343a:	int3   
6402343b:	int3   
6402343c:	int3   
6402343d:	int3   
6402343e:	int3   
6402343f:	int3   
64023440:	mov    eax,ds:0x64031464
64023445:	and    eax,0xfffffffe
64023448:	mov    ds:0x64031464,eax
6402344d:	ret    
6402344e:	mov    edx,DWORD PTR [esp+0x8]
64023452:	lea    eax,[edx-0xc]
64023455:	mov    ecx,DWORD PTR [edx-0x10]
64023458:	xor    ecx,eax
6402345a:	call   0x64012abc
6402345f:	mov    eax,0x6402bc84
64023464:	jmp    0x6401277e
64023469:	int3   
6402346a:	int3   
6402346b:	int3   
6402346c:	int3   
6402346d:	int3   
6402346e:	int3   
6402346f:	int3   
64023470:	mov    eax,ds:0x6403146c
64023475:	and    eax,0xfffffffe
64023478:	mov    ds:0x6403146c,eax
6402347d:	ret    
6402347e:	mov    edx,DWORD PTR [esp+0x8]
64023482:	lea    eax,[edx-0xc]
64023485:	mov    ecx,DWORD PTR [edx-0x10]
64023488:	xor    ecx,eax
6402348a:	call   0x64012abc
6402348f:	mov    eax,0x6402bcb0
64023494:	jmp    0x6401277e
64023499:	int3   
6402349a:	int3   
6402349b:	int3   
6402349c:	int3   
6402349d:	int3   
6402349e:	int3   
6402349f:	int3   
640234a0:	mov    eax,ds:0x64031474
640234a5:	and    eax,0xfffffffe
640234a8:	mov    ds:0x64031474,eax
640234ad:	ret    
640234ae:	mov    edx,DWORD PTR [esp+0x8]
640234b2:	lea    eax,[edx-0xc]
640234b5:	mov    ecx,DWORD PTR [edx-0x10]
640234b8:	xor    ecx,eax
640234ba:	call   0x64012abc
640234bf:	mov    eax,0x6402bcdc
640234c4:	jmp    0x6401277e
640234c9:	int3   
640234ca:	int3   
640234cb:	int3   
640234cc:	int3   
640234cd:	int3   
640234ce:	int3   
640234cf:	int3   
640234d0:	mov    eax,ds:0x6403147c
640234d5:	and    eax,0xfffffffe
640234d8:	mov    ds:0x6403147c,eax
640234dd:	ret    
640234de:	mov    edx,DWORD PTR [esp+0x8]
640234e2:	lea    eax,[edx-0xc]
640234e5:	mov    ecx,DWORD PTR [edx-0x10]
640234e8:	xor    ecx,eax
640234ea:	call   0x64012abc
640234ef:	mov    eax,0x6402bd08
640234f4:	jmp    0x6401277e
640234f9:	int3   
640234fa:	int3   
640234fb:	int3   
640234fc:	int3   
640234fd:	int3   
640234fe:	int3   
640234ff:	int3   
64023500:	mov    eax,ds:0x64031484
64023505:	and    eax,0xfffffffe
64023508:	mov    ds:0x64031484,eax
6402350d:	ret    
6402350e:	mov    edx,DWORD PTR [esp+0x8]
64023512:	lea    eax,[edx-0xc]
64023515:	mov    ecx,DWORD PTR [edx-0x10]
64023518:	xor    ecx,eax
6402351a:	call   0x64012abc
6402351f:	mov    eax,0x6402bd34
64023524:	jmp    0x6401277e
64023529:	int3   
6402352a:	int3   
6402352b:	int3   
6402352c:	int3   
6402352d:	int3   
6402352e:	int3   
6402352f:	int3   
64023530:	mov    eax,ds:0x6403148c
64023535:	and    eax,0xfffffffe
64023538:	mov    ds:0x6403148c,eax
6402353d:	ret    
6402353e:	mov    edx,DWORD PTR [esp+0x8]
64023542:	lea    eax,[edx-0xc]
64023545:	mov    ecx,DWORD PTR [edx-0x10]
64023548:	xor    ecx,eax
6402354a:	call   0x64012abc
6402354f:	mov    eax,0x6402bd60
64023554:	jmp    0x6401277e
64023559:	int3   
6402355a:	int3   
6402355b:	int3   
6402355c:	int3   
6402355d:	int3   
6402355e:	int3   
6402355f:	int3   
64023560:	mov    eax,ds:0x64031494
64023565:	and    eax,0xfffffffe
64023568:	mov    ds:0x64031494,eax
6402356d:	ret    
6402356e:	mov    edx,DWORD PTR [esp+0x8]
64023572:	lea    eax,[edx-0xc]
64023575:	mov    ecx,DWORD PTR [edx-0x10]
64023578:	xor    ecx,eax
6402357a:	call   0x64012abc
6402357f:	mov    eax,0x6402bd8c
64023584:	jmp    0x6401277e
64023589:	int3   
6402358a:	int3   
6402358b:	int3   
6402358c:	int3   
6402358d:	int3   
6402358e:	int3   
6402358f:	int3   
64023590:	mov    eax,ds:0x6403149c
64023595:	and    eax,0xfffffffe
64023598:	mov    ds:0x6403149c,eax
6402359d:	ret    
6402359e:	mov    edx,DWORD PTR [esp+0x8]
640235a2:	lea    eax,[edx-0xc]
640235a5:	mov    ecx,DWORD PTR [edx-0x10]
640235a8:	xor    ecx,eax
640235aa:	call   0x64012abc
640235af:	mov    eax,0x6402bdb8
640235b4:	jmp    0x6401277e
640235b9:	int3   
640235ba:	int3   
640235bb:	int3   
640235bc:	int3   
640235bd:	int3   
640235be:	int3   
640235bf:	int3   
640235c0:	lea    edi,[ebp-0x58]
640235c3:	jmp    0x640097f0
640235c8:	lea    edi,[ebp-0x40]
640235cb:	jmp    0x640097f0
640235d0:	lea    edi,[ebp-0x38]
640235d3:	jmp    0x640097f0
640235d8:	lea    edi,[ebp-0x3c]
640235db:	jmp    0x640097f0
640235e0:	lea    edi,[ebp-0x40]
640235e3:	jmp    0x640097f0
640235e8:	lea    ecx,[ebp-0x24]
640235eb:	jmp    0x64009b60
640235f0:	mov    edx,DWORD PTR [esp+0x8]
640235f4:	lea    eax,[edx-0x60]
640235f7:	mov    ecx,DWORD PTR [edx-0x64]
640235fa:	xor    ecx,eax
640235fc:	call   0x64012abc
64023601:	mov    eax,0x6402be0c
64023606:	jmp    0x6401277e
6402360b:	int3   
6402360c:	int3   
6402360d:	int3   
6402360e:	int3   
6402360f:	int3   
64023610:	lea    eax,[ebp-0x24]
64023613:	jmp    0x6400a680
64023618:	lea    ecx,[ebp-0x10]
6402361b:	jmp    0x64001930
64023620:	lea    ecx,[ebp-0x18]
64023623:	jmp    0x64001930
64023628:	lea    ecx,[ebp-0x40]
6402362b:	jmp    0x64001650
64023630:	mov    edx,DWORD PTR [esp+0x8]
64023634:	lea    eax,[edx+0xc]
64023637:	mov    ecx,DWORD PTR [edx-0x44]
6402363a:	xor    ecx,eax
6402363c:	call   0x64012abc
64023641:	mov    ecx,DWORD PTR [edx+0x294]
64023647:	xor    ecx,eax
64023649:	call   0x64012abc
6402364e:	mov    eax,0x6402be50
64023653:	jmp    0x6401277e
64023658:	int3   
64023659:	int3   
6402365a:	int3   
6402365b:	int3   
6402365c:	int3   
6402365d:	int3   
6402365e:	int3   
6402365f:	int3   
64023660:	lea    ecx,[ebp-0x1005c]
64023666:	jmp    0x64001650
6402366b:	lea    ecx,[ebp-0x10074]
64023671:	jmp    0x640026c0
64023676:	lea    ecx,[ebp-0x10074]
6402367c:	jmp    0x640026c0
64023681:	lea    ecx,[ebp-0x1005c]
64023687:	jmp    0x64001650
6402368c:	mov    edx,DWORD PTR [esp+0x8]
64023690:	lea    eax,[edx-0x10084]
64023696:	mov    ecx,DWORD PTR [edx-0x10088]
6402369c:	xor    ecx,eax
6402369e:	call   0x64012abc
640236a3:	add    eax,0x10
640236a6:	mov    ecx,DWORD PTR [edx-0x4]
640236a9:	xor    ecx,eax
640236ab:	call   0x64012abc
640236b0:	mov    eax,0x6402be94
640236b5:	jmp    0x6401277e
640236ba:	int3   
640236bb:	int3   
640236bc:	int3   
640236bd:	int3   
640236be:	int3   
640236bf:	int3   
640236c0:	lea    ecx,[ebp-0x30]
640236c3:	jmp    0x64001650
640236c8:	lea    ecx,[ebp-0x5c]
640236cb:	jmp    0x64001650
640236d0:	mov    edx,DWORD PTR [esp+0x8]
640236d4:	lea    eax,[edx-0x74]
640236d7:	mov    ecx,DWORD PTR [edx-0x78]
640236da:	xor    ecx,eax
640236dc:	call   0x64012abc
640236e1:	add    eax,0xc
640236e4:	mov    ecx,DWORD PTR [edx-0x8]
640236e7:	xor    ecx,eax
640236e9:	call   0x64012abc
640236ee:	mov    eax,0x6402bec8
640236f3:	jmp    0x6401277e
640236f8:	int3   
640236f9:	int3   
640236fa:	int3   
640236fb:	int3   
640236fc:	int3   
640236fd:	int3   
640236fe:	int3   
640236ff:	int3   
64023700:	mov    ecx,DWORD PTR [ebp-0x10]
64023703:	jmp    0x64001930
64023708:	mov    edx,DWORD PTR [esp+0x8]
6402370c:	lea    eax,[edx-0xc]
6402370f:	mov    ecx,DWORD PTR [edx-0x10]
64023712:	xor    ecx,eax
64023714:	call   0x64012abc
64023719:	mov    eax,0x6402bef4
6402371e:	jmp    0x6401277e
64023723:	int3   
64023724:	int3   
64023725:	int3   
64023726:	int3   
64023727:	int3   
64023728:	int3   
64023729:	int3   
6402372a:	int3   
6402372b:	int3   
6402372c:	int3   
6402372d:	int3   
6402372e:	int3   
6402372f:	int3   
64023730:	lea    ecx,[ebp-0x1c]
64023733:	jmp    0x64001930
64023738:	mov    edx,DWORD PTR [esp+0x8]
6402373c:	lea    eax,[edx-0x1c]
6402373f:	mov    ecx,DWORD PTR [edx-0x20]
64023742:	xor    ecx,eax
64023744:	call   0x64012abc
64023749:	mov    eax,0x6402bf20
6402374e:	jmp    0x6401277e
64023753:	int3   
64023754:	int3   
64023755:	int3   
64023756:	int3   
64023757:	int3   
64023758:	int3   
64023759:	int3   
6402375a:	int3   
6402375b:	int3   
6402375c:	int3   
6402375d:	int3   
6402375e:	int3   
6402375f:	int3   
64023760:	mov    edx,DWORD PTR [esp+0x8]
64023764:	lea    eax,[edx+0xc]
64023767:	mov    ecx,DWORD PTR [edx-0x16c]
6402376d:	xor    ecx,eax
6402376f:	call   0x64012abc
64023774:	mov    ecx,DWORD PTR [edx-0x8]
64023777:	xor    ecx,eax
64023779:	call   0x64012abc
6402377e:	mov    eax,0x6402bf78
64023783:	jmp    0x6401277e
64023788:	int3   
64023789:	int3   
6402378a:	int3   
6402378b:	int3   
6402378c:	int3   
6402378d:	int3   
6402378e:	int3   
6402378f:	int3   
64023790:	lea    ecx,[ebp+0x828]
64023796:	jmp    0x64001930
6402379b:	mov    eax,ds:0x640314ac
640237a0:	and    eax,0xfffffffe
640237a3:	mov    ds:0x640314ac,eax
640237a8:	ret    
640237a9:	lea    eax,[ebp-0x1c]
640237ac:	jmp    0x64004bf0
640237b1:	lea    ecx,[ebp-0x44]
640237b4:	jmp    0x64001650
640237b9:	lea    ecx,[ebp+0x0]
640237bc:	jmp    0x64001650
640237c1:	lea    ecx,[ebp-0x44]
640237c4:	jmp    0x64001650
640237c9:	lea    ecx,[ebp-0x44]
640237cc:	jmp    0x64001650
640237d1:	mov    edx,DWORD PTR [esp+0x8]
640237d5:	lea    eax,[edx+0xc]
640237d8:	mov    ecx,DWORD PTR [edx-0x54]
640237db:	xor    ecx,eax
640237dd:	call   0x64012abc
640237e2:	mov    ecx,DWORD PTR [edx+0x828]
640237e8:	xor    ecx,eax
640237ea:	call   0x64012abc
640237ef:	mov    eax,0x6402bfd4
640237f4:	jmp    0x6401277e
640237f9:	int3   
640237fa:	int3   
640237fb:	int3   
640237fc:	int3   
640237fd:	int3   
640237fe:	int3   
640237ff:	int3   
64023800:	lea    ecx,[ebp+0x828]
64023806:	jmp    0x64001930
6402380b:	mov    eax,ds:0x640314b0
64023810:	and    eax,0xfffffffe
64023813:	mov    ds:0x640314b0,eax
64023818:	ret    
64023819:	lea    eax,[ebp-0x34]
6402381c:	jmp    0x64004bf0
64023821:	lea    ecx,[ebp-0x28]
64023824:	jmp    0x64001650
64023829:	lea    ecx,[ebp-0x28]
6402382c:	jmp    0x64001650
64023831:	lea    ecx,[ebp-0x28]
64023834:	jmp    0x64001650
64023839:	lea    ecx,[ebp-0x28]
6402383c:	jmp    0x64001650
64023841:	lea    ecx,[ebp-0x28]
64023844:	jmp    0x64001650
64023849:	lea    ecx,[ebp-0x28]
6402384c:	jmp    0x64001650
64023851:	lea    ecx,[ebp-0x28]
64023854:	jmp    0x64001650
64023859:	lea    ecx,[ebp-0x28]
6402385c:	jmp    0x64001650
64023861:	lea    ecx,[ebp-0x28]
64023864:	jmp    0x64001650
64023869:	lea    ecx,[ebp-0x28]
6402386c:	jmp    0x64001650
64023871:	lea    ecx,[ebp-0x28]
64023874:	jmp    0x64001650
64023879:	lea    ecx,[ebp-0x28]
6402387c:	jmp    0x64001650
64023881:	lea    ecx,[ebp-0x28]
64023884:	jmp    0x64001650
64023889:	lea    ecx,[ebp-0x28]
6402388c:	jmp    0x64001650
64023891:	lea    ecx,[ebp-0x28]
64023894:	jmp    0x64001650
64023899:	lea    ecx,[ebp-0x28]
6402389c:	jmp    0x64001650
640238a1:	lea    ecx,[ebp-0x28]
640238a4:	jmp    0x64001650
640238a9:	lea    ecx,[ebp-0x28]
640238ac:	jmp    0x64001650
640238b1:	lea    ecx,[ebp-0x28]
640238b4:	jmp    0x64001650
640238b9:	lea    ecx,[ebp-0x28]
640238bc:	jmp    0x64001650
640238c1:	lea    ecx,[ebp-0x28]
640238c4:	jmp    0x64001650
640238c9:	lea    ecx,[ebp-0x28]
640238cc:	jmp    0x64001650
640238d1:	lea    ecx,[ebp+0x0]
640238d4:	jmp    0x64001650
640238d9:	lea    ecx,[ebp+0x0]
640238dc:	jmp    0x64001650
640238e1:	lea    ecx,[ebp+0x0]
640238e4:	jmp    0x64001650
640238e9:	lea    ecx,[ebp+0x0]
640238ec:	jmp    0x64001650
640238f1:	lea    ecx,[ebp+0x0]
640238f4:	jmp    0x64001650
640238f9:	lea    ecx,[ebp+0x0]
640238fc:	jmp    0x64001650
64023901:	lea    ecx,[ebp+0x0]
64023904:	jmp    0x64001650
64023909:	lea    ecx,[ebp+0x0]
6402390c:	jmp    0x64001650
64023911:	lea    ecx,[ebp+0x0]
64023914:	jmp    0x64001650
64023919:	lea    ecx,[ebp+0x0]
6402391c:	jmp    0x64001650
64023921:	lea    ecx,[ebp+0x0]
64023924:	jmp    0x64001650
64023929:	lea    ecx,[ebp+0x0]
6402392c:	jmp    0x64001650
64023931:	lea    ecx,[ebp+0x0]
64023934:	jmp    0x64001650
64023939:	lea    ecx,[ebp+0x0]
6402393c:	jmp    0x64001650
64023941:	lea    ecx,[ebp+0x0]
64023944:	jmp    0x64001650
64023949:	lea    ecx,[ebp+0x0]
6402394c:	jmp    0x64001650
64023951:	lea    ecx,[ebp+0x0]
64023954:	jmp    0x64001650
64023959:	lea    ecx,[ebp-0x28]
6402395c:	jmp    0x64001650
64023961:	lea    ecx,[ebp-0x28]
64023964:	jmp    0x64001650
64023969:	mov    edx,DWORD PTR [esp+0x8]
6402396d:	lea    eax,[edx+0xc]
64023970:	mov    ecx,DWORD PTR [edx-0x54]
64023973:	xor    ecx,eax
64023975:	call   0x64012abc
6402397a:	mov    ecx,DWORD PTR [edx+0x828]
64023980:	xor    ecx,eax
64023982:	call   0x64012abc
64023987:	mov    eax,0x6402c158
6402398c:	jmp    0x6401277e
64023991:	int3   
64023992:	int3   
64023993:	int3   
64023994:	int3   
64023995:	int3   
64023996:	int3   
64023997:	int3   
64023998:	int3   
64023999:	int3   
6402399a:	int3   
6402399b:	int3   
6402399c:	int3   
6402399d:	int3   
6402399e:	int3   
6402399f:	int3   
640239a0:	lea    esi,[ebp-0x840]
640239a6:	jmp    0x64002b30
640239ab:	lea    ecx,[ebp-0x848]
640239b1:	jmp    0x64001930
640239b6:	mov    edx,DWORD PTR [esp+0x8]
640239ba:	lea    eax,[edx-0x84c]
640239c0:	mov    ecx,DWORD PTR [edx-0x850]
640239c6:	xor    ecx,eax
640239c8:	call   0x64012abc
640239cd:	add    eax,0xc
640239d0:	mov    ecx,DWORD PTR [edx-0x8]
640239d3:	xor    ecx,eax
640239d5:	call   0x64012abc
640239da:	mov    eax,0x6402c18c
640239df:	jmp    0x6401277e
640239e4:	int3   
640239e5:	int3   
640239e6:	int3   
640239e7:	int3   
640239e8:	int3   
640239e9:	int3   
640239ea:	int3   
640239eb:	int3   
640239ec:	int3   
640239ed:	int3   
640239ee:	int3   
640239ef:	int3   
640239f0:	mov    eax,DWORD PTR [ebp-0x54]
640239f3:	and    eax,0x1
640239f6:	je     0x64023a08
640239fc:	and    DWORD PTR [ebp-0x54],0xfffffffe
64023a00:	mov    ecx,DWORD PTR [ebp+0x4]
64023a03:	jmp    0x64001930
64023a08:	ret    
64023a09:	lea    ecx,[ebp-0x50]
64023a0c:	jmp    0x64001650
64023a11:	lea    ecx,[ebp-0x50]
64023a14:	jmp    0x64001650
64023a19:	mov    edx,DWORD PTR [esp+0x8]
64023a1d:	lea    eax,[edx-0x54]
64023a20:	mov    ecx,DWORD PTR [edx-0x58]
64023a23:	xor    ecx,eax
64023a25:	call   0x64012abc
64023a2a:	mov    eax,0x6402c1c8
64023a2f:	jmp    0x6401277e
64023a34:	int3   
64023a35:	int3   
64023a36:	int3   
64023a37:	int3   
64023a38:	int3   
64023a39:	int3   
64023a3a:	int3   
64023a3b:	int3   
64023a3c:	int3   
64023a3d:	int3   
64023a3e:	int3   
64023a3f:	int3   
64023a40:	lea    ecx,[ebp+0x4]
64023a43:	jmp    0x64001930
64023a48:	lea    ecx,[ebp-0x58]
64023a4b:	jmp    0x64001680
64023a50:	lea    ecx,[ebp-0x50]
64023a53:	jmp    0x64001650
64023a58:	lea    ecx,[ebp-0x50]
64023a5b:	jmp    0x64001650
64023a60:	mov    edx,DWORD PTR [esp+0x8]
64023a64:	lea    eax,[edx-0x58]
64023a67:	mov    ecx,DWORD PTR [edx-0x5c]
64023a6a:	xor    ecx,eax
64023a6c:	call   0x64012abc
64023a71:	mov    eax,0x6402c20c
64023a76:	jmp    0x6401277e
64023a7b:	int3   
64023a7c:	int3   
64023a7d:	int3   
64023a7e:	int3   
64023a7f:	int3   
64023a80:	lea    ecx,[ebp-0x428]
64023a86:	jmp    0x64001930
64023a8b:	mov    edx,DWORD PTR [esp+0x8]
64023a8f:	lea    eax,[edx-0x42c]
64023a95:	mov    ecx,DWORD PTR [edx-0x430]
64023a9b:	xor    ecx,eax
64023a9d:	call   0x64012abc
64023aa2:	add    eax,0x10
64023aa5:	mov    ecx,DWORD PTR [edx-0x4]
64023aa8:	xor    ecx,eax
64023aaa:	call   0x64012abc
64023aaf:	mov    eax,0x6402c238
64023ab4:	jmp    0x6401277e
64023ab9:	int3   
64023aba:	int3   
64023abb:	int3   
64023abc:	int3   
64023abd:	int3   
64023abe:	int3   
64023abf:	int3   
64023ac0:	lea    edi,[ebp-0x18]
64023ac3:	jmp    0x640097f0
64023ac8:	lea    edi,[ebp-0x1c]
64023acb:	jmp    0x640097f0
64023ad0:	lea    edi,[ebp-0x14]
64023ad3:	jmp    0x640097f0
64023ad8:	mov    edx,DWORD PTR [esp+0x8]
64023adc:	lea    eax,[edx-0x1c]
64023adf:	mov    ecx,DWORD PTR [edx-0x20]
64023ae2:	xor    ecx,eax
64023ae4:	call   0x64012abc
64023ae9:	mov    eax,0x6402c284
64023aee:	jmp    0x6401277e
64023af3:	int3   
64023af4:	int3   
64023af5:	int3   
64023af6:	int3   
64023af7:	int3   
64023af8:	int3   
64023af9:	int3   
64023afa:	int3   
64023afb:	int3   
64023afc:	int3   
64023afd:	int3   
64023afe:	int3   
64023aff:	int3   
64023b00:	mov    eax,DWORD PTR [ebp-0x54]
64023b03:	and    eax,0x1
64023b06:	je     0x64023b18
64023b0c:	and    DWORD PTR [ebp-0x54],0xfffffffe
64023b10:	mov    ecx,DWORD PTR [ebp+0x4]
64023b13:	jmp    0x64001930
64023b18:	ret    
64023b19:	lea    ecx,[ebp-0x50]
64023b1c:	jmp    0x64001650
64023b21:	mov    edx,DWORD PTR [esp+0x8]
64023b25:	lea    eax,[edx-0x58]
64023b28:	mov    ecx,DWORD PTR [edx-0x5c]
64023b2b:	xor    ecx,eax
64023b2d:	call   0x64012abc
64023b32:	mov    eax,0x6402c2b8
64023b37:	jmp    0x6401277e
64023b3c:	int3   
64023b3d:	int3   
64023b3e:	int3   
64023b3f:	int3   
64023b40:	mov    eax,DWORD PTR [ebp-0x28]
64023b43:	and    eax,0x1
64023b46:	je     0x64023b58
64023b4c:	and    DWORD PTR [ebp-0x28],0xfffffffe
64023b50:	mov    ecx,DWORD PTR [ebp+0x4]
64023b53:	jmp    0x64001930
64023b58:	ret    
64023b59:	lea    ecx,[ebp-0x24]
64023b5c:	jmp    0x64001930
64023b61:	lea    ecx,[ebp-0x20]
64023b64:	jmp    0x64001930
64023b69:	lea    ecx,[ebp-0x1c]
64023b6c:	jmp    0x64001930
64023b71:	lea    ecx,[ebp-0x18]
64023b74:	jmp    0x64001930
64023b79:	lea    ecx,[ebp-0x14]
64023b7c:	jmp    0x64001930
64023b81:	lea    ecx,[ebp-0x10]
64023b84:	jmp    0x64001930
64023b89:	mov    edx,DWORD PTR [esp+0x8]
64023b8d:	lea    eax,[edx-0x30]
64023b90:	mov    ecx,DWORD PTR [edx-0x34]
64023b93:	xor    ecx,eax
64023b95:	call   0x64012abc
64023b9a:	mov    eax,0x6402c314
64023b9f:	jmp    0x6401277e
64023ba4:	int3   
64023ba5:	int3   
64023ba6:	int3   
64023ba7:	int3   
64023ba8:	int3   
64023ba9:	int3   
64023baa:	int3   
64023bab:	int3   
64023bac:	int3   
64023bad:	int3   
64023bae:	int3   
64023baf:	int3   
64023bb0:	mov    eax,DWORD PTR [ebp-0x3c]
64023bb3:	and    eax,0x1
64023bb6:	je     0x64023bc8
64023bbc:	and    DWORD PTR [ebp-0x3c],0xfffffffe
64023bc0:	mov    ecx,DWORD PTR [ebp+0x4]
64023bc3:	jmp    0x64001930
64023bc8:	ret    
64023bc9:	lea    ecx,[ebp-0x50]
64023bcc:	jmp    0x64001930
64023bd1:	lea    ecx,[ebp-0x38]
64023bd4:	jmp    0x64001930
64023bd9:	mov    edx,DWORD PTR [esp+0x8]
64023bdd:	lea    eax,[edx-0x54]
64023be0:	mov    ecx,DWORD PTR [edx-0x58]
64023be3:	xor    ecx,eax
64023be5:	call   0x64012abc
64023bea:	mov    eax,0x6402c350
64023bef:	jmp    0x6401277e
64023bf4:	int3   
64023bf5:	int3   
64023bf6:	int3   
64023bf7:	int3   
64023bf8:	int3   
64023bf9:	int3   
64023bfa:	int3   
64023bfb:	int3   
64023bfc:	int3   
64023bfd:	int3   
64023bfe:	int3   
64023bff:	int3   
64023c00:	lea    ecx,[ebp+0xc]
64023c03:	jmp    0x64001930
64023c08:	lea    ecx,[ebp-0x28]
64023c0b:	jmp    0x64001650
64023c10:	lea    ecx,[ebp-0x6c]
64023c13:	jmp    0x64001650
64023c18:	lea    ecx,[ebp-0x88]
64023c1e:	jmp    0x64001650
64023c23:	lea    ecx,[ebp-0xc0]
64023c29:	jmp    0x64001650
64023c2e:	lea    ecx,[ebp-0xa4]
64023c34:	jmp    0x64001650
64023c39:	mov    edx,DWORD PTR [esp+0x8]
64023c3d:	lea    eax,[edx+0xc]
64023c40:	mov    ecx,DWORD PTR [edx-0xc4]
64023c46:	xor    ecx,eax
64023c48:	call   0x64012abc
64023c4d:	mov    ecx,DWORD PTR [edx+0x80]
64023c53:	xor    ecx,eax
64023c55:	call   0x64012abc
64023c5a:	mov    eax,0x6402c3a4
64023c5f:	jmp    0x6401277e
64023c64:	int3   
64023c65:	int3   
64023c66:	int3   
64023c67:	int3   
64023c68:	int3   
64023c69:	int3   
64023c6a:	int3   
64023c6b:	int3   
64023c6c:	int3   
64023c6d:	int3   
64023c6e:	int3   
64023c6f:	int3   
64023c70:	call   0x6400c780
64023c75:	mov    ds:0x64031294,eax
64023c7a:	ret    
64023c7b:	int3   
64023c7c:	int3   
64023c7d:	int3   
64023c7e:	int3   
64023c7f:	int3   
64023c80:	call   0x6400c860
64023c85:	mov    ds:0x640312ec,eax
64023c8a:	ret    
64023c8b:	int3   
64023c8c:	int3   
64023c8d:	int3   
64023c8e:	int3   
64023c8f:	int3   
64023c90:	call   0x6400c940
64023c95:	mov    ds:0x64031300,eax
64023c9a:	ret    
64023c9b:	int3   
64023c9c:	int3   
64023c9d:	int3   
64023c9e:	int3   
64023c9f:	int3   
64023ca0:	call   0x6400ca20
64023ca5:	mov    ds:0x64031284,eax
64023caa:	ret    
64023cab:	int3   
64023cac:	int3   
64023cad:	int3   
64023cae:	int3   
64023caf:	int3   
64023cb0:	call   0x6400cb00
64023cb5:	mov    ds:0x64031304,eax
64023cba:	ret    
64023cbb:	int3   
64023cbc:	int3   
64023cbd:	int3   
64023cbe:	int3   
64023cbf:	int3   
64023cc0:	call   0x6400cbe0
64023cc5:	mov    ds:0x64031280,eax
64023cca:	ret    
64023ccb:	int3   
64023ccc:	int3   
64023ccd:	int3   
64023cce:	int3   
64023ccf:	int3   
64023cd0:	call   0x6400ccc0
64023cd5:	mov    ds:0x640312b0,eax
64023cda:	ret    
64023cdb:	int3   
64023cdc:	int3   
64023cdd:	int3   
64023cde:	int3   
64023cdf:	int3   
64023ce0:	call   0x6400cda0
64023ce5:	mov    ds:0x640312e0,eax
64023cea:	ret    
64023ceb:	int3   
64023cec:	int3   
64023ced:	int3   
64023cee:	int3   
64023cef:	int3   
64023cf0:	call   0x6400ce80
64023cf5:	mov    ds:0x64031308,eax
64023cfa:	ret    
64023cfb:	int3   
64023cfc:	int3   
64023cfd:	int3   
64023cfe:	int3   
64023cff:	int3   
64023d00:	call   0x6400cf60
64023d05:	mov    ds:0x640312e8,eax
64023d0a:	ret    
64023d0b:	int3   
64023d0c:	int3   
64023d0d:	int3   
64023d0e:	int3   
64023d0f:	int3   
64023d10:	call   0x6400d040
64023d15:	mov    ds:0x640312bc,eax
64023d1a:	ret    
64023d1b:	int3   
64023d1c:	int3   
64023d1d:	int3   
64023d1e:	int3   
64023d1f:	int3   
64023d20:	call   0x6400d120
64023d25:	mov    ds:0x6403129c,eax
64023d2a:	ret    
64023d2b:	int3   
64023d2c:	int3   
64023d2d:	int3   
64023d2e:	int3   
64023d2f:	int3   
64023d30:	call   0x6400d200
64023d35:	mov    ds:0x640312d4,eax
64023d3a:	ret    
64023d3b:	int3   
64023d3c:	int3   
64023d3d:	int3   
64023d3e:	int3   
64023d3f:	int3   
64023d40:	call   0x6400d2e0
64023d45:	mov    ds:0x6403128c,eax
64023d4a:	ret    
64023d4b:	int3   
64023d4c:	int3   
64023d4d:	int3   
64023d4e:	int3   
64023d4f:	int3   
64023d50:	call   0x6400d3c0
64023d55:	mov    ds:0x6403127c,eax
64023d5a:	ret    
64023d5b:	int3   
64023d5c:	int3   
64023d5d:	int3   
64023d5e:	int3   
64023d5f:	int3   
64023d60:	call   0x6400d4a0
64023d65:	mov    ds:0x640312f4,eax
64023d6a:	ret    
64023d6b:	int3   
64023d6c:	int3   
64023d6d:	int3   
64023d6e:	int3   
64023d6f:	int3   
64023d70:	call   0x6400d580
64023d75:	mov    ds:0x640312b8,eax
64023d7a:	ret    
64023d7b:	int3   
64023d7c:	int3   
64023d7d:	int3   
64023d7e:	int3   
64023d7f:	int3   
64023d80:	call   0x6400d660
64023d85:	mov    ds:0x640312dc,eax
64023d8a:	ret    
64023d8b:	int3   
64023d8c:	int3   
64023d8d:	int3   
64023d8e:	int3   
64023d8f:	int3   
64023d90:	call   0x6400d740
64023d95:	mov    ds:0x64031278,eax
64023d9a:	ret    
64023d9b:	int3   
64023d9c:	int3   
64023d9d:	int3   
64023d9e:	int3   
64023d9f:	int3   
64023da0:	call   0x6400d820
64023da5:	mov    ds:0x640312f0,eax
64023daa:	ret    
64023dab:	int3   
64023dac:	int3   
64023dad:	int3   
64023dae:	int3   
64023daf:	int3   
64023db0:	call   0x6400d900
64023db5:	mov    ds:0x640312ac,eax
64023dba:	ret    
64023dbb:	int3   
64023dbc:	int3   
64023dbd:	int3   
64023dbe:	int3   
64023dbf:	int3   
64023dc0:	call   0x6400d9e0
64023dc5:	mov    ds:0x64031290,eax
64023dca:	ret    
64023dcb:	int3   
64023dcc:	int3   
64023dcd:	int3   
64023dce:	int3   
64023dcf:	int3   
64023dd0:	call   0x6400dac0
64023dd5:	mov    ds:0x64031298,eax
64023dda:	ret    
64023ddb:	int3   
64023ddc:	int3   
64023ddd:	int3   
64023dde:	int3   
64023ddf:	int3   
64023de0:	call   0x6400dba0
64023de5:	mov    ds:0x64031314,eax
64023dea:	ret    
64023deb:	int3   
64023dec:	int3   
64023ded:	int3   
64023dee:	int3   
64023def:	int3   
64023df0:	call   0x6400dc80
64023df5:	mov    ds:0x640312a4,eax
64023dfa:	ret    
64023dfb:	int3   
64023dfc:	int3   
64023dfd:	int3   
64023dfe:	int3   
64023dff:	int3   
64023e00:	call   0x6400dd60
64023e05:	mov    ds:0x640312d8,eax
64023e0a:	ret    
64023e0b:	int3   
64023e0c:	int3   
64023e0d:	int3   
64023e0e:	int3   
64023e0f:	int3   
64023e10:	call   0x6400de40
64023e15:	mov    ds:0x64031288,eax
64023e1a:	ret    
64023e1b:	int3   
64023e1c:	int3   
64023e1d:	int3   
64023e1e:	int3   
64023e1f:	int3   
64023e20:	call   0x6400df20
64023e25:	mov    ds:0x640312e4,eax
64023e2a:	ret    
64023e2b:	int3   
64023e2c:	int3   
64023e2d:	int3   
64023e2e:	int3   
64023e2f:	int3   
64023e30:	call   0x6400e000
64023e35:	mov    ds:0x640312c8,eax
64023e3a:	ret    
64023e3b:	int3   
64023e3c:	int3   
64023e3d:	int3   
64023e3e:	int3   
64023e3f:	int3   
64023e40:	call   0x6400e0e0
64023e45:	mov    ds:0x640312b4,eax
64023e4a:	ret    
64023e4b:	int3   
64023e4c:	int3   
64023e4d:	int3   
64023e4e:	int3   
64023e4f:	int3   
64023e50:	call   0x6400e1c0
64023e55:	mov    ds:0x640312d0,eax
64023e5a:	ret    
64023e5b:	int3   
64023e5c:	int3   
64023e5d:	int3   
64023e5e:	int3   
64023e5f:	int3   
64023e60:	call   0x6400e2a0
64023e65:	mov    ds:0x640312cc,eax
64023e6a:	ret    
64023e6b:	int3   
64023e6c:	int3   
64023e6d:	int3   
64023e6e:	int3   
64023e6f:	int3   
64023e70:	call   0x6400e380
64023e75:	mov    ds:0x640312c0,eax
64023e7a:	ret    
64023e7b:	int3   
64023e7c:	int3   
64023e7d:	int3   
64023e7e:	int3   
64023e7f:	int3   
64023e80:	call   0x6400e460
64023e85:	mov    ds:0x6403130c,eax
64023e8a:	ret    
64023e8b:	int3   
64023e8c:	int3   
64023e8d:	int3   
64023e8e:	int3   
64023e8f:	int3   
64023e90:	call   0x6400e540
64023e95:	mov    ds:0x64031318,eax
64023e9a:	ret    
64023e9b:	int3   
64023e9c:	int3   
64023e9d:	int3   
64023e9e:	int3   
64023e9f:	int3   
64023ea0:	call   0x6400e620
64023ea5:	mov    ds:0x640312a0,eax
64023eaa:	ret    
64023eab:	int3   
64023eac:	int3   
64023ead:	int3   
64023eae:	int3   
64023eaf:	int3   
64023eb0:	call   0x6400e700
64023eb5:	mov    ds:0x640312a8,eax
64023eba:	ret    
64023ebb:	int3   
64023ebc:	int3   
64023ebd:	int3   
64023ebe:	int3   
64023ebf:	int3   
64023ec0:	call   0x6400e7e0
64023ec5:	mov    ds:0x640312fc,eax
64023eca:	ret    
64023ecb:	int3   
64023ecc:	int3   
64023ecd:	int3   
64023ece:	int3   
64023ecf:	int3   
64023ed0:	call   0x6400e8c0
64023ed5:	mov    ds:0x64031310,eax
64023eda:	ret    
64023edb:	int3   
64023edc:	int3   
64023edd:	int3   
64023ede:	int3   
64023edf:	int3   
64023ee0:	call   0x6400e9a0
64023ee5:	mov    ds:0x640312c4,eax
64023eea:	ret    
64023eeb:	int3   
64023eec:	int3   
64023eed:	int3   
64023eee:	int3   
64023eef:	int3   
64023ef0:	call   0x6400ea80
64023ef5:	mov    ds:0x640312f8,eax
64023efa:	ret    
64023efb:	mov    ecx,0x6402e4cc
64023f00:	call   0x64011f0d
64023f05:	push   0x64024071
64023f0a:	call   0x64012bef
64023f0f:	pop    ecx
64023f10:	ret    
64023f11:	mov    ecx,0x6402e508
64023f16:	call   0x64011ee7
64023f1b:	push   0x6402407b
64023f20:	call   0x64012bef
64023f25:	pop    ecx
64023f26:	ret    
64023f27:	call   DWORD PTR ds:0x64025110
64023f2d:	push   0x64024085
64023f32:	mov    DWORD PTR ds:0x6402e534,0x64025c44
64023f3c:	mov    ds:0x6402e538,eax
64023f41:	mov    BYTE PTR ds:0x6402e53c,0x0
64023f48:	call   0x64012bef
64023f4d:	pop    ecx
64023f4e:	ret    
64023f4f:	push   0x6402e534
64023f54:	mov    ecx,0x6402e540
64023f59:	call   0x64012080
64023f5e:	push   0x6402408f
64023f63:	call   0x64012bef
64023f68:	pop    ecx
64023f69:	ret    
64023f6a:	int3   
64023f6b:	int3   
64023f6c:	int3   
64023f6d:	int3   
64023f6e:	int3   
64023f6f:	int3   
64023f70:	push   0x640240b0
64023f75:	call   0x64012bef
64023f7a:	pop    ecx
64023f7b:	ret    
64023f7c:	int3   
64023f7d:	int3   
64023f7e:	int3   
64023f7f:	int3   
64023f80:	mov    eax,0x6403134c
64023f85:	jmp    0x64006540
64023f8a:	int3   
64023f8b:	int3   
64023f8c:	int3   
64023f8d:	int3   
64023f8e:	int3   
64023f8f:	int3   
64023f90:	mov    eax,0x640314a0
64023f95:	jmp    0x64006540
64023f9a:	int3   
64023f9b:	int3   
64023f9c:	int3   
64023f9d:	int3   
64023f9e:	int3   
64023f9f:	int3   
64023fa0:	push   ebp
64023fa1:	mov    ebp,esp
64023fa3:	and    esp,0xfffffff8
64023fa6:	mov    eax,ds:0x64031330
64023fab:	mov    edx,DWORD PTR [eax]
64023fad:	sub    esp,0xc
64023fb0:	push   esi
64023fb1:	push   eax
64023fb2:	mov    ecx,0x6403132c
64023fb7:	push   ecx
64023fb8:	push   edx
64023fb9:	mov    esi,ecx
64023fbb:	push   esi
64023fbc:	lea    eax,[esp+0x18]
64023fc0:	push   eax
64023fc1:	call   0x64007e10
64023fc6:	mov    ecx,DWORD PTR ds:0x64031330
64023fcc:	push   ecx
64023fcd:	call   0x64012262
64023fd2:	add    esp,0x4
64023fd5:	xor    eax,eax
64023fd7:	mov    ds:0x64031330,eax
64023fdc:	mov    ds:0x64031334,eax
64023fe1:	pop    esi
64023fe2:	mov    esp,ebp
64023fe4:	pop    ebp
64023fe5:	ret    
64023fe6:	int3   
64023fe7:	int3   
64023fe8:	int3   
64023fe9:	int3   
64023fea:	int3   
64023feb:	int3   
64023fec:	int3   
64023fed:	int3   
64023fee:	int3   
64023fef:	int3   
64023ff0:	push   ebp
64023ff1:	mov    ebp,esp
64023ff3:	and    esp,0xfffffff8
64023ff6:	mov    eax,ds:0x64031324
64023ffb:	mov    edx,DWORD PTR [eax]
64023ffd:	sub    esp,0xc
64024000:	push   esi
64024001:	push   eax
64024002:	mov    ecx,0x64031320
64024007:	push   ecx
64024008:	push   edx
64024009:	mov    esi,ecx
6402400b:	push   esi
6402400c:	lea    eax,[esp+0x18]
64024010:	push   eax
64024011:	call   0x64007bb0
64024016:	mov    ecx,DWORD PTR ds:0x64031324
6402401c:	push   ecx
6402401d:	call   0x64012262
64024022:	add    esp,0x4
64024025:	xor    eax,eax
64024027:	mov    ds:0x64031324,eax
6402402c:	mov    ds:0x64031328,eax
64024031:	pop    esi
64024032:	mov    esp,ebp
64024034:	pop    ebp
64024035:	ret    
64024036:	int3   
64024037:	int3   
64024038:	int3   
64024039:	int3   
6402403a:	int3   
6402403b:	int3   
6402403c:	int3   
6402403d:	int3   
6402403e:	int3   
6402403f:	int3   
64024040:	mov    eax,ds:0x6402e4bc
64024045:	test   eax,eax
64024047:	je     0x64024052
64024049:	push   eax
6402404a:	call   0x64012262
6402404f:	add    esp,0x4
64024052:	mov    DWORD PTR ds:0x6402e4bc,0x0
6402405c:	mov    DWORD PTR ds:0x6402e4c0,0x0
64024066:	mov    DWORD PTR ds:0x6402e4c4,0x0
64024070:	ret    
64024071:	mov    ecx,0x6402e4cc
64024076:	jmp    0x64011e7b
6402407b:	mov    ecx,0x6402e508
64024080:	jmp    0x64011fbc
64024085:	mov    ecx,0x6402e534
6402408a:	jmp    0x64011fd4
6402408f:	mov    DWORD PTR ds:0x6402e540,0x64025c58
64024099:	ret    
6402409a:	mov    DWORD PTR ds:0x6402e560,0x64025304
640240a4:	mov    ecx,0x6402e560
640240a9:	jmp    0x6401237b
640240ae:	int3   
640240af:	int3   
640240b0:	push   0x6402e030
640240b5:	call   DWORD PTR ds:0x6402519c
640240bb:	ret    
